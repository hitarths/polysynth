SKETCH version 1.7.6
Benchmark = miniTestb414.sk
    [0;32m[1655146264.3690 - DEBUG] Running stage 'parse' -- Parse the program from a file[0m
    [0;32m[1655146264.5310 - DEBUG] Running stage 'preproc' -- Preprocessing (used for all further transformations)[0m
miniTestb414.sk:55: Making final dictLength
miniTestb414.sk:64: Making final dictLength
    [0;32m[1655146264.6060 - DEBUG] Running stage SpmdLowLevelCStage[0m
    [0;32m[1655146264.6090 - DEBUG]    Running visitor FlattenStmtBlocks2[0m
    [0;32m[1655146264.6100 - DEBUG]    Running visitor SplitAssignFromVarDef[0m
    [0;32m[1655146264.6110 - DEBUG]    Running visitor EliminateComplexForLoops[0m
    [0;32m[1655146264.6130 - DEBUG] Running stage 'lowering' -- Lower for SKETCH backend[0m
    [0;32m[1655146264.6210 - DEBUG] Running stage 'sten' -- Stencil transformations[0m
[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 32
[SATBackend] MAX FUNC INLINING  = 5
[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = null
resolved cegis to path /Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis
    [0;32m[1655146264.7810 - DEBUG] executing /Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis -simplifycex NOSIM -nosim --bnd-inbits 5 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 5 -showDAG -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -numericalsolvermode ONLY_SMOOTHING -numtries 1 -conflictcutoff 1 -maxrestarts 10 -costoption 1 -o /Users/harshit/.sketch/tmp/miniTestb414.sk/solution0-0 /Users/harshit/.sketch/tmp/miniTestb414.sk/input0.tmp[0m
[SATBackend] Launching: /Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis -simplifycex NOSIM -nosim --bnd-inbits 5 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 5 -showDAG -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -numericalsolvermode ONLY_SMOOTHING -numtries 1 -conflictcutoff 1 -maxrestarts 10 -costoption 1 -o /Users/harshit/.sketch/tmp/miniTestb414.sk/solution0-0 /Users/harshit/.sketch/tmp/miniTestb414.sk/input0.tmp 
starting command line: [/Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis, -simplifycex, NOSIM, -nosim, --bnd-inbits, 5, --boundmode, CALLNAME, --verbosity, 5, --print-version, -simiters, 4, -synth, MINI, -verif, MINI, --assumebcheck, --bnd-inline-amnt, 5, -showDAG, -angelictupledepth, 1, -srctupledepth, 2, -sprandbias, 1, -numericalsolvermode, ONLY_SMOOTHING, -numtries, 1, -conflictcutoff, 1, -maxrestarts, 10, -costoption, 1, -o, /Users/harshit/.sketch/tmp/miniTestb414.sk/solution0-0, /Users/harshit/.sketch/tmp/miniTestb414.sk/input0.tmp]
simplifycex = NOSIM
Overriding inputs with 5
boundmode = CALLNAME
 synth = |MINI|
 verif = |MINI|
assuming  bounds checks
Unknown flag -numericalsolvermode
Unknown flag -numtries
Unknown flag -conflictcutoff
Unknown flag -maxrestarts
Unknown flag -costoption
SOLVER RAND SEED = 1655146264
 optimization level = 6
Reading SKETCH Program in File /Users/harshit/.sketch/tmp/miniTestb414.sk/input0.tmp
* before  EVERYTHING: check__WrapperNospec::SPEC nodes = 7	 check__Wrapper::SKETCH nodes = 40
 INBITS = 5
 CBITS  = 5
 input_ints = 7 	 input_bits = 0
 Inlining amount = 5
 Inlining functions in the sketch.
 Inlining functions in the spec.
* Final Problem size: Problem nodes = 3330
dagcheck__WrapperNospec{
0= (1)
1= (0)
2= getND#0[(1)]((0), )
3= 2[0]
4= 3 < (0) 
5= 4 ! 
6= ASSERT (!4) : Assert at miniTestb414.sk:29 (2)
7= 3 == (0) 
8= 7 ! 
9= 4 & (!7) 
10= 9 ! 
11= ASSERT (!9) : Assert at miniTestb414.sk:41 (2)
12= getND#0[(1)]((1), )
13= (2)
14= getND#0[(1)]((2), )
15= (3)
16= getND#0[(1)]((3), )
17= (4)
18= getND#0[(1)]((4), )
19= (5)
20= getND#0[(1)]((5), )
21= (6)
22= getND#0[(1)]((6), )
23= (7)
24= getND#0[(1)]((7), )
25= (-1)
26= 3 + (-1) 
27= 26 < (0) 
28= 12[0]
word_3_9_idx_0_0
30= 28 == word_3_9_idx_0_0 
31= 14[0]
word_3_9_idx_1_0
33= 31 == word_3_9_idx_1_0 
34= 30 & 33 
35= 16[0]
word_3_9_idx_2_0
37= 35 == word_3_9_idx_2_0 
38= 34 & 37 
39= 18[0]
word_3_9_idx_3_0
41= 39 == word_3_9_idx_3_0 
42= 38 & 41 
43= 20[0]
word_3_9_idx_4_0
45= 43 == word_3_9_idx_4_0 
46= 42 & 45 
47= 22[0]
word_3_9_idx_5_0
49= 47 == word_3_9_idx_5_0 
50= 46 & 49 
51= 24[0]
word_3_9_idx_6_0
53= 51 == word_3_9_idx_6_0 
54= 50 & 53 
55= 7 | 54 
56= 55 ! 
57= 27 & (!55) 
58= 57 ! 
59= ASSERT (!57) : Assert at miniTestb414.sk:29 (2)
60= 26 == (0) 
61= 60 | 55 
62= 61 ! 
63= 27 & (!61) 
64= 63 ! 
65= ASSERT (!63) : Assert at miniTestb414.sk:41 (2)
66= (8)
67= getND#0[(1)]((8), )
68= (9)
69= getND#0[(1)]((9), )
70= (10)
71= getND#0[(1)]((10), )
72= (11)
73= getND#0[(1)]((11), )
74= (12)
75= getND#0[(1)]((12), )
76= (13)
77= getND#0[(1)]((13), )
78= (14)
79= getND#0[(1)]((14), )
80= 3 < (2) 
81= 67[0]
82= 81 == word_3_9_idx_0_0 
83= 69[0]
84= 83 == word_3_9_idx_1_0 
85= 82 & 84 
86= 71[0]
87= 86 == word_3_9_idx_2_0 
88= 85 & 87 
89= 73[0]
90= 89 == word_3_9_idx_3_0 
91= 88 & 90 
92= 75[0]
93= 92 == word_3_9_idx_4_0 
94= 91 & 93 
95= 77[0]
96= 95 == word_3_9_idx_5_0 
97= 94 & 96 
98= 79[0]
99= 98 == word_3_9_idx_6_0 
100= 97 & 99 
101= 100 | 54 
102= 7 | 101 
103= 60 | 102 
104= 103 ! 
105= 80 & (!103) 
106= 105 ! 
107= ASSERT (!105) : Assert at miniTestb414.sk:29 (2)
108= 3 == (2) 
109= 108 | 103 
110= 109 ! 
111= 80 & (!109) 
112= 111 ! 
113= ASSERT (!111) : Assert at miniTestb414.sk:41 (2)
114= (15)
115= getND#0[(1)]((15), )
116= (16)
117= getND#0[(1)]((16), )
118= (17)
119= getND#0[(1)]((17), )
120= (18)
121= getND#0[(1)]((18), )
122= (19)
123= getND#0[(1)]((19), )
124= (20)
125= getND#0[(1)]((20), )
126= (21)
127= getND#0[(1)]((21), )
128= 3 < (3) 
129= 115[0]
130= 129 == word_3_9_idx_0_0 
131= 117[0]
132= 131 == word_3_9_idx_1_0 
133= 130 & 132 
134= 119[0]
135= 134 == word_3_9_idx_2_0 
136= 133 & 135 
137= 121[0]
138= 137 == word_3_9_idx_3_0 
139= 136 & 138 
140= 123[0]
141= 140 == word_3_9_idx_4_0 
142= 139 & 141 
143= 125[0]
144= 143 == word_3_9_idx_5_0 
145= 142 & 144 
146= 127[0]
147= 146 == word_3_9_idx_6_0 
148= 145 & 147 
149= 148 | 100 
150= 149 | 54 
151= 7 | 150 
152= 60 | 151 
153= 108 | 152 
154= 153 ! 
155= 128 & (!153) 
156= 155 ! 
157= ASSERT (!155) : Assert at miniTestb414.sk:29 (2)
158= 3 == (3) 
159= 158 | 153 
160= 159 ! 
161= 128 & (!159) 
162= 161 ! 
163= ASSERT (!161) : Assert at miniTestb414.sk:41 (2)
164= (22)
165= getND#0[(1)]((22), )
166= (23)
167= getND#0[(1)]((23), )
168= (24)
169= getND#0[(1)]((24), )
170= (25)
171= getND#0[(1)]((25), )
172= (26)
173= getND#0[(1)]((26), )
174= (27)
175= getND#0[(1)]((27), )
176= (28)
177= getND#0[(1)]((28), )
178= 3 < (4) 
179= 165[0]
180= 179 == word_3_9_idx_0_0 
181= 167[0]
182= 181 == word_3_9_idx_1_0 
183= 180 & 182 
184= 169[0]
185= 184 == word_3_9_idx_2_0 
186= 183 & 185 
187= 171[0]
188= 187 == word_3_9_idx_3_0 
189= 186 & 188 
190= 173[0]
191= 190 == word_3_9_idx_4_0 
192= 189 & 191 
193= 175[0]
194= 193 == word_3_9_idx_5_0 
195= 192 & 194 
196= 177[0]
197= 196 == word_3_9_idx_6_0 
198= 195 & 197 
199= 198 | 149 
200= 199 | 54 
201= 7 | 200 
202= 60 | 201 
203= 108 | 202 
204= 158 | 203 
205= 204 ! 
206= 178 & (!204) 
207= 206 ! 
208= ASSERT (!206) : Assert at miniTestb414.sk:29 (2)
209= 3 == (4) 
210= 209 | 204 
211= 210 ! 
212= 178 & (!210) 
213= 212 ! 
214= ASSERT (!212) : Assert at miniTestb414.sk:41 (2)
215= (29)
216= getND#0[(1)]((29), )
217= (30)
218= getND#0[(1)]((30), )
219= (31)
220= getND#0[(1)]((31), )
221= (32)
222= getND#0[(1)]((32), )
223= (33)
224= getND#0[(1)]((33), )
225= (34)
226= getND#0[(1)]((34), )
227= (35)
228= getND#0[(1)]((35), )
229= 3 < (5) 
230= 216[0]
231= 230 == word_3_9_idx_0_0 
232= 218[0]
233= 232 == word_3_9_idx_1_0 
234= 231 & 233 
235= 220[0]
236= 235 == word_3_9_idx_2_0 
237= 234 & 236 
238= 222[0]
239= 238 == word_3_9_idx_3_0 
240= 237 & 239 
241= 224[0]
242= 241 == word_3_9_idx_4_0 
243= 240 & 242 
244= 226[0]
245= 244 == word_3_9_idx_5_0 
246= 243 & 245 
247= 228[0]
248= 247 == word_3_9_idx_6_0 
249= 246 & 248 
250= 249 | 199 
251= 250 | 54 
252= 7 | 251 
253= 60 | 252 
254= 108 | 253 
255= 158 | 254 
256= 209 | 255 
257= 256 ! 
258= 229 & (!256) 
259= 258 ! 
260= ASSERT (!258) : Assert at miniTestb414.sk:29 (2)
261= 3 == (5) 
262= 261 | 256 
263= 262 ! 
264= 229 & (!262) 
265= 264 ! 
266= ASSERT (!264) : Assert at miniTestb414.sk:41 (2)
267= (36)
268= getND#0[(1)]((36), )
269= (37)
270= getND#0[(1)]((37), )
271= (38)
272= getND#0[(1)]((38), )
273= (39)
274= getND#0[(1)]((39), )
275= (40)
276= getND#0[(1)]((40), )
277= (41)
278= getND#0[(1)]((41), )
279= (42)
280= getND#0[(1)]((42), )
281= 3 < (6) 
282= 268[0]
283= 282 == word_3_9_idx_0_0 
284= 270[0]
285= 284 == word_3_9_idx_1_0 
286= 283 & 285 
287= 272[0]
288= 287 == word_3_9_idx_2_0 
289= 286 & 288 
290= 274[0]
291= 290 == word_3_9_idx_3_0 
292= 289 & 291 
293= 276[0]
294= 293 == word_3_9_idx_4_0 
295= 292 & 294 
296= 278[0]
297= 296 == word_3_9_idx_5_0 
298= 295 & 297 
299= 280[0]
300= 299 == word_3_9_idx_6_0 
301= 298 & 300 
302= 301 | 250 
303= 302 | 54 
304= 7 | 303 
305= 60 | 304 
306= 108 | 305 
307= 158 | 306 
308= 209 | 307 
309= 261 | 308 
310= 309 ! 
311= 281 & (!309) 
312= 311 ! 
313= ASSERT (!311) : Assert at miniTestb414.sk:29 (2)
314= 3 == (6) 
315= 314 | 309 
316= 315 ! 
317= 281 & (!315) 
318= 317 ! 
319= ASSERT (!317) : Assert at miniTestb414.sk:41 (2)
320= (43)
321= getND#0[(1)]((43), )
322= (44)
323= getND#0[(1)]((44), )
324= (45)
325= getND#0[(1)]((45), )
326= (46)
327= getND#0[(1)]((46), )
328= (47)
329= getND#0[(1)]((47), )
330= (48)
331= getND#0[(1)]((48), )
332= (49)
333= getND#0[(1)]((49), )
334= 3 < (7) 
335= 321[0]
336= 335 == word_3_9_idx_0_0 
337= 323[0]
338= 337 == word_3_9_idx_1_0 
339= 336 & 338 
340= 325[0]
341= 340 == word_3_9_idx_2_0 
342= 339 & 341 
343= 327[0]
344= 343 == word_3_9_idx_3_0 
345= 342 & 344 
346= 329[0]
347= 346 == word_3_9_idx_4_0 
348= 345 & 347 
349= 331[0]
350= 349 == word_3_9_idx_5_0 
351= 348 & 350 
352= 333[0]
353= 352 == word_3_9_idx_6_0 
354= 351 & 353 
355= 354 | 302 
356= 355 | 54 
357= 7 | 356 
358= 60 | 357 
359= 108 | 358 
360= 158 | 359 
361= 209 | 360 
362= 261 | 361 
363= 314 | 362 
364= 363 ! 
365= 334 & (!363) 
366= 365 ! 
367= ASSERT (!365) : Assert at miniTestb414.sk:29 (2)
368= 3 == (7) 
369= 368 | 363 
370= 369 ! 
371= 334 & (!369) 
372= 371 ! 
373= ASSERT (!371) : Assert at miniTestb414.sk:41 (2)
374= (50)
375= getND#0[(1)]((50), )
376= (51)
377= getND#0[(1)]((51), )
378= (52)
379= getND#0[(1)]((52), )
380= (53)
381= getND#0[(1)]((53), )
382= (54)
383= getND#0[(1)]((54), )
384= (55)
385= getND#0[(1)]((55), )
386= (56)
387= getND#0[(1)]((56), )
388= 3 < (8) 
389= 375[0]
390= 389 == word_3_9_idx_0_0 
391= 377[0]
392= 391 == word_3_9_idx_1_0 
393= 390 & 392 
394= 379[0]
395= 394 == word_3_9_idx_2_0 
396= 393 & 395 
397= 381[0]
398= 397 == word_3_9_idx_3_0 
399= 396 & 398 
400= 383[0]
401= 400 == word_3_9_idx_4_0 
402= 399 & 401 
403= 385[0]
404= 403 == word_3_9_idx_5_0 
405= 402 & 404 
406= 387[0]
407= 406 == word_3_9_idx_6_0 
408= 405 & 407 
409= 408 | 355 
410= 409 | 54 
411= 7 | 410 
412= 60 | 411 
413= 108 | 412 
414= 158 | 413 
415= 209 | 414 
416= 261 | 415 
417= 314 | 416 
418= 368 | 417 
419= 418 ! 
420= 388 & (!418) 
421= 420 ! 
422= ASSERT (!420) : Assert at miniTestb414.sk:29 (2)
423= 3 == (8) 
424= 423 | 418 
425= 424 ! 
426= 388 & (!424) 
427= 426 ! 
428= ASSERT (!426) : Assert at miniTestb414.sk:41 (2)
429= (57)
430= getND#0[(1)]((57), )
431= (58)
432= getND#0[(1)]((58), )
433= (59)
434= getND#0[(1)]((59), )
435= (60)
436= getND#0[(1)]((60), )
437= (61)
438= getND#0[(1)]((61), )
439= (62)
440= getND#0[(1)]((62), )
441= (63)
442= getND#0[(1)]((63), )
443= 3 < (9) 
444= 430[0]
445= 444 == word_3_9_idx_0_0 
446= 432[0]
447= 446 == word_3_9_idx_1_0 
448= 445 & 447 
449= 434[0]
450= 449 == word_3_9_idx_2_0 
451= 448 & 450 
452= 436[0]
453= 452 == word_3_9_idx_3_0 
454= 451 & 453 
455= 438[0]
456= 455 == word_3_9_idx_4_0 
457= 454 & 456 
458= 440[0]
459= 458 == word_3_9_idx_5_0 
460= 457 & 459 
461= 442[0]
462= 461 == word_3_9_idx_6_0 
463= 460 & 462 
464= 463 | 409 
465= 464 | 54 
466= 7 | 465 
467= 60 | 466 
468= 108 | 467 
469= 158 | 468 
470= 209 | 469 
471= 261 | 470 
472= 314 | 471 
473= 368 | 472 
474= 423 | 473 
475= 474 ! 
476= 443 & (!474) 
477= 476 ! 
478= ASSERT (!476) : Assert at miniTestb414.sk:29 (2)
479= 3 == (9) 
480= 479 | 474 
481= 480 ! 
482= 443 & (!480) 
483= 482 ! 
484= ASSERT (!482) : Assert at miniTestb414.sk:41 (2)
485= (64)
486= getND#0[(1)]((64), )
487= (65)
488= getND#0[(1)]((65), )
489= (66)
490= getND#0[(1)]((66), )
491= (67)
492= getND#0[(1)]((67), )
493= (68)
494= getND#0[(1)]((68), )
495= (69)
496= getND#0[(1)]((69), )
497= (70)
498= getND#0[(1)]((70), )
499= 3 < (10) 
500= 486[0]
501= 500 == word_3_9_idx_0_0 
502= 488[0]
503= 502 == word_3_9_idx_1_0 
504= 501 & 503 
505= 490[0]
506= 505 == word_3_9_idx_2_0 
507= 504 & 506 
508= 492[0]
509= 508 == word_3_9_idx_3_0 
510= 507 & 509 
511= 494[0]
512= 511 == word_3_9_idx_4_0 
513= 510 & 512 
514= 496[0]
515= 514 == word_3_9_idx_5_0 
516= 513 & 515 
517= 498[0]
518= 517 == word_3_9_idx_6_0 
519= 516 & 518 
520= 519 | 464 
521= 520 | 54 
522= 7 | 521 
523= 60 | 522 
524= 108 | 523 
525= 158 | 524 
526= 209 | 525 
527= 261 | 526 
528= 314 | 527 
529= 368 | 528 
530= 423 | 529 
531= 479 | 530 
532= 531 ! 
533= 499 & (!531) 
534= 533 ! 
535= ASSERT (!533) : Assert at miniTestb414.sk:29 (2)
536= 3 == (10) 
537= 536 | 531 
538= 537 ! 
539= 499 & (!537) 
540= 539 ! 
541= ASSERT (!539) : Assert at miniTestb414.sk:41 (2)
542= (71)
543= getND#0[(1)]((71), )
544= (72)
545= getND#0[(1)]((72), )
546= (73)
547= getND#0[(1)]((73), )
548= (74)
549= getND#0[(1)]((74), )
550= (75)
551= getND#0[(1)]((75), )
552= (76)
553= getND#0[(1)]((76), )
554= (77)
555= getND#0[(1)]((77), )
556= 3 < (11) 
557= 543[0]
558= 557 == word_3_9_idx_0_0 
559= 545[0]
560= 559 == word_3_9_idx_1_0 
561= 558 & 560 
562= 547[0]
563= 562 == word_3_9_idx_2_0 
564= 561 & 563 
565= 549[0]
566= 565 == word_3_9_idx_3_0 
567= 564 & 566 
568= 551[0]
569= 568 == word_3_9_idx_4_0 
570= 567 & 569 
571= 553[0]
572= 571 == word_3_9_idx_5_0 
573= 570 & 572 
574= 555[0]
575= 574 == word_3_9_idx_6_0 
576= 573 & 575 
577= 576 | 520 
578= 577 | 54 
579= 7 | 578 
580= 60 | 579 
581= 108 | 580 
582= 158 | 581 
583= 209 | 582 
584= 261 | 583 
585= 314 | 584 
586= 368 | 585 
587= 423 | 586 
588= 479 | 587 
589= 536 | 588 
590= 589 ! 
591= 556 & (!589) 
592= 591 ! 
593= ASSERT (!591) : Assert at miniTestb414.sk:29 (2)
594= 3 == (11) 
595= 594 | 589 
596= 595 ! 
597= 556 & (!595) 
598= 597 ! 
599= ASSERT (!597) : Assert at miniTestb414.sk:41 (2)
600= (78)
601= getND#0[(1)]((78), )
602= (79)
603= getND#0[(1)]((79), )
604= (80)
605= getND#0[(1)]((80), )
606= (81)
607= getND#0[(1)]((81), )
608= (82)
609= getND#0[(1)]((82), )
610= (83)
611= getND#0[(1)]((83), )
612= (84)
613= getND#0[(1)]((84), )
614= 3 < (12) 
615= 601[0]
616= 615 == word_3_9_idx_0_0 
617= 603[0]
618= 617 == word_3_9_idx_1_0 
619= 616 & 618 
620= 605[0]
621= 620 == word_3_9_idx_2_0 
622= 619 & 621 
623= 607[0]
624= 623 == word_3_9_idx_3_0 
625= 622 & 624 
626= 609[0]
627= 626 == word_3_9_idx_4_0 
628= 625 & 627 
629= 611[0]
630= 629 == word_3_9_idx_5_0 
631= 628 & 630 
632= 613[0]
633= 632 == word_3_9_idx_6_0 
634= 631 & 633 
635= 634 | 577 
636= 635 | 54 
637= 7 | 636 
638= 60 | 637 
639= 108 | 638 
640= 158 | 639 
641= 209 | 640 
642= 261 | 641 
643= 314 | 642 
644= 368 | 643 
645= 423 | 644 
646= 479 | 645 
647= 536 | 646 
648= 594 | 647 
649= 648 ! 
650= 614 & (!648) 
651= 650 ! 
652= ASSERT (!650) : Assert at miniTestb414.sk:29 (2)
653= 3 == (12) 
654= 653 | 648 
655= 654 ! 
656= 614 & (!654) 
657= 656 ! 
658= ASSERT (!656) : Assert at miniTestb414.sk:41 (2)
659= (85)
660= getND#0[(1)]((85), )
661= (86)
662= getND#0[(1)]((86), )
663= (87)
664= getND#0[(1)]((87), )
665= (88)
666= getND#0[(1)]((88), )
667= (89)
668= getND#0[(1)]((89), )
669= (90)
670= getND#0[(1)]((90), )
671= (91)
672= getND#0[(1)]((91), )
673= 3 < (13) 
674= 660[0]
675= 674 == word_3_9_idx_0_0 
676= 662[0]
677= 676 == word_3_9_idx_1_0 
678= 675 & 677 
679= 664[0]
680= 679 == word_3_9_idx_2_0 
681= 678 & 680 
682= 666[0]
683= 682 == word_3_9_idx_3_0 
684= 681 & 683 
685= 668[0]
686= 685 == word_3_9_idx_4_0 
687= 684 & 686 
688= 670[0]
689= 688 == word_3_9_idx_5_0 
690= 687 & 689 
691= 672[0]
692= 691 == word_3_9_idx_6_0 
693= 690 & 692 
694= 693 | 635 
695= 694 | 54 
696= 7 | 695 
697= 60 | 696 
698= 108 | 697 
699= 158 | 698 
700= 209 | 699 
701= 261 | 700 
702= 314 | 701 
703= 368 | 702 
704= 423 | 703 
705= 479 | 704 
706= 536 | 705 
707= 594 | 706 
708= 653 | 707 
709= 708 ! 
710= 673 & (!708) 
711= 710 ! 
712= ASSERT (!710) : Assert at miniTestb414.sk:29 (2)
713= 3 == (13) 
714= 713 | 708 
715= 714 ! 
716= 673 & (!714) 
717= 716 ! 
718= ASSERT (!716) : Assert at miniTestb414.sk:41 (2)
719= (92)
720= getND#0[(1)]((92), )
721= (93)
722= getND#0[(1)]((93), )
723= (94)
724= getND#0[(1)]((94), )
725= (95)
726= getND#0[(1)]((95), )
727= (96)
728= getND#0[(1)]((96), )
729= (97)
730= getND#0[(1)]((97), )
731= (98)
732= getND#0[(1)]((98), )
733= 3 < (14) 
734= 720[0]
735= 734 == word_3_9_idx_0_0 
736= 722[0]
737= 736 == word_3_9_idx_1_0 
738= 735 & 737 
739= 724[0]
740= 739 == word_3_9_idx_2_0 
741= 738 & 740 
742= 726[0]
743= 742 == word_3_9_idx_3_0 
744= 741 & 743 
745= 728[0]
746= 745 == word_3_9_idx_4_0 
747= 744 & 746 
748= 730[0]
749= 748 == word_3_9_idx_5_0 
750= 747 & 749 
751= 732[0]
752= 751 == word_3_9_idx_6_0 
753= 750 & 752 
754= 753 | 694 
755= 754 | 54 
756= 7 | 755 
757= 60 | 756 
758= 108 | 757 
759= 158 | 758 
760= 209 | 759 
761= 261 | 760 
762= 314 | 761 
763= 368 | 762 
764= 423 | 763 
765= 479 | 764 
766= 536 | 765 
767= 594 | 766 
768= 653 | 767 
769= 713 | 768 
770= 769 ! 
771= 733 & (!769) 
772= 771 ! 
773= ASSERT (!771) : Assert at miniTestb414.sk:29 (2)
774= 3 == (14) 
775= 774 | 769 
776= 775 ! 
777= 733 & (!775) 
778= 777 ! 
779= ASSERT (!777) : Assert at miniTestb414.sk:41 (2)
780= (99)
781= getND#0[(1)]((99), )
782= (100)
783= getND#0[(1)]((100), )
784= (101)
785= getND#0[(1)]((101), )
786= (102)
787= getND#0[(1)]((102), )
788= (103)
789= getND#0[(1)]((103), )
790= (104)
791= getND#0[(1)]((104), )
792= (105)
793= getND#0[(1)]((105), )
794= 3 < (15) 
795= 781[0]
796= 795 == word_3_9_idx_0_0 
797= 783[0]
798= 797 == word_3_9_idx_1_0 
799= 796 & 798 
800= 785[0]
801= 800 == word_3_9_idx_2_0 
802= 799 & 801 
803= 787[0]
804= 803 == word_3_9_idx_3_0 
805= 802 & 804 
806= 789[0]
807= 806 == word_3_9_idx_4_0 
808= 805 & 807 
809= 791[0]
810= 809 == word_3_9_idx_5_0 
811= 808 & 810 
812= 793[0]
813= 812 == word_3_9_idx_6_0 
814= 811 & 813 
815= 814 | 754 
816= 815 | 54 
817= 7 | 816 
818= 60 | 817 
819= 108 | 818 
820= 158 | 819 
821= 209 | 820 
822= 261 | 821 
823= 314 | 822 
824= 368 | 823 
825= 423 | 824 
826= 479 | 825 
827= 536 | 826 
828= 594 | 827 
829= 653 | 828 
830= 713 | 829 
831= 774 | 830 
832= 831 ! 
833= 794 & (!831) 
834= 833 ! 
835= ASSERT (!833) : Assert at miniTestb414.sk:29 (2)
836= 3 == (15) 
837= 836 | 831 
838= 837 ! 
839= 794 & (!837) 
840= 839 ! 
841= ASSERT (!839) : Assert at miniTestb414.sk:41 (2)
842= (106)
843= getND#0[(1)]((106), )
844= (107)
845= getND#0[(1)]((107), )
846= (108)
847= getND#0[(1)]((108), )
848= (109)
849= getND#0[(1)]((109), )
850= (110)
851= getND#0[(1)]((110), )
852= (111)
853= getND#0[(1)]((111), )
854= (112)
855= getND#0[(1)]((112), )
856= 3 < (16) 
857= 843[0]
858= 857 == word_3_9_idx_0_0 
859= 845[0]
860= 859 == word_3_9_idx_1_0 
861= 858 & 860 
862= 847[0]
863= 862 == word_3_9_idx_2_0 
864= 861 & 863 
865= 849[0]
866= 865 == word_3_9_idx_3_0 
867= 864 & 866 
868= 851[0]
869= 868 == word_3_9_idx_4_0 
870= 867 & 869 
871= 853[0]
872= 871 == word_3_9_idx_5_0 
873= 870 & 872 
874= 855[0]
875= 874 == word_3_9_idx_6_0 
876= 873 & 875 
877= 876 | 815 
878= 877 | 54 
879= 7 | 878 
880= 60 | 879 
881= 108 | 880 
882= 158 | 881 
883= 209 | 882 
884= 261 | 883 
885= 314 | 884 
886= 368 | 885 
887= 423 | 886 
888= 479 | 887 
889= 536 | 888 
890= 594 | 889 
891= 653 | 890 
892= 713 | 891 
893= 774 | 892 
894= 836 | 893 
895= 894 ! 
896= 856 & (!894) 
897= 896 ! 
898= ASSERT (!896) : Assert at miniTestb414.sk:29 (2)
899= 3 == (16) 
900= 899 | 894 
901= 900 ! 
902= 856 & (!900) 
903= 902 ! 
904= ASSERT (!902) : Assert at miniTestb414.sk:41 (2)
905= (113)
906= getND#0[(1)]((113), )
907= (114)
908= getND#0[(1)]((114), )
909= (115)
910= getND#0[(1)]((115), )
911= (116)
912= getND#0[(1)]((116), )
913= (117)
914= getND#0[(1)]((117), )
915= (118)
916= getND#0[(1)]((118), )
917= (119)
918= getND#0[(1)]((119), )
919= 3 < (17) 
920= 906[0]
921= 920 == word_3_9_idx_0_0 
922= 908[0]
923= 922 == word_3_9_idx_1_0 
924= 921 & 923 
925= 910[0]
926= 925 == word_3_9_idx_2_0 
927= 924 & 926 
928= 912[0]
929= 928 == word_3_9_idx_3_0 
930= 927 & 929 
931= 914[0]
932= 931 == word_3_9_idx_4_0 
933= 930 & 932 
934= 916[0]
935= 934 == word_3_9_idx_5_0 
936= 933 & 935 
937= 918[0]
938= 937 == word_3_9_idx_6_0 
939= 936 & 938 
940= 939 | 877 
941= 940 | 54 
942= 7 | 941 
943= 60 | 942 
944= 108 | 943 
945= 158 | 944 
946= 209 | 945 
947= 261 | 946 
948= 314 | 947 
949= 368 | 948 
950= 423 | 949 
951= 479 | 950 
952= 536 | 951 
953= 594 | 952 
954= 653 | 953 
955= 713 | 954 
956= 774 | 955 
957= 836 | 956 
958= 899 | 957 
959= 958 ! 
960= 919 & (!958) 
961= 960 ! 
962= ASSERT (!960) : Assert at miniTestb414.sk:29 (2)
963= 3 == (17) 
964= 963 | 958 
965= 964 ! 
966= 919 & (!964) 
967= 966 ! 
968= ASSERT (!966) : Assert at miniTestb414.sk:41 (2)
969= (120)
970= getND#0[(1)]((120), )
971= (121)
972= getND#0[(1)]((121), )
973= (122)
974= getND#0[(1)]((122), )
975= (123)
976= getND#0[(1)]((123), )
977= (124)
978= getND#0[(1)]((124), )
979= (125)
980= getND#0[(1)]((125), )
981= (126)
982= getND#0[(1)]((126), )
983= 3 < (18) 
984= 970[0]
985= 984 == word_3_9_idx_0_0 
986= 972[0]
987= 986 == word_3_9_idx_1_0 
988= 985 & 987 
989= 974[0]
990= 989 == word_3_9_idx_2_0 
991= 988 & 990 
992= 976[0]
993= 992 == word_3_9_idx_3_0 
994= 991 & 993 
995= 978[0]
996= 995 == word_3_9_idx_4_0 
997= 994 & 996 
998= 980[0]
999= 998 == word_3_9_idx_5_0 
1000= 997 & 999 
1001= 982[0]
1002= 1001 == word_3_9_idx_6_0 
1003= 1000 & 1002 
1004= 1003 | 940 
1005= 1004 | 54 
1006= 7 | 1005 
1007= 60 | 1006 
1008= 108 | 1007 
1009= 158 | 1008 
1010= 209 | 1009 
1011= 261 | 1010 
1012= 314 | 1011 
1013= 368 | 1012 
1014= 423 | 1013 
1015= 479 | 1014 
1016= 536 | 1015 
1017= 594 | 1016 
1018= 653 | 1017 
1019= 713 | 1018 
1020= 774 | 1019 
1021= 836 | 1020 
1022= 899 | 1021 
1023= 963 | 1022 
1024= 1023 ! 
1025= 983 & (!1023) 
1026= 1025 ! 
1027= ASSERT (!1025) : Assert at miniTestb414.sk:29 (2)
1028= 3 == (18) 
1029= 1028 | 1023 
1030= 1029 ! 
1031= 983 & (!1029) 
1032= 1031 ! 
1033= ASSERT (!1031) : Assert at miniTestb414.sk:41 (2)
1034= (127)
1035= getND#0[(1)]((127), )
1036= (128)
1037= getND#0[(1)]((128), )
1038= (129)
1039= getND#0[(1)]((129), )
1040= (130)
1041= getND#0[(1)]((130), )
1042= (131)
1043= getND#0[(1)]((131), )
1044= (132)
1045= getND#0[(1)]((132), )
1046= (133)
1047= getND#0[(1)]((133), )
1048= 3 < (19) 
1049= 1035[0]
1050= 1049 == word_3_9_idx_0_0 
1051= 1037[0]
1052= 1051 == word_3_9_idx_1_0 
1053= 1050 & 1052 
1054= 1039[0]
1055= 1054 == word_3_9_idx_2_0 
1056= 1053 & 1055 
1057= 1041[0]
1058= 1057 == word_3_9_idx_3_0 
1059= 1056 & 1058 
1060= 1043[0]
1061= 1060 == word_3_9_idx_4_0 
1062= 1059 & 1061 
1063= 1045[0]
1064= 1063 == word_3_9_idx_5_0 
1065= 1062 & 1064 
1066= 1047[0]
1067= 1066 == word_3_9_idx_6_0 
1068= 1065 & 1067 
1069= 1068 | 1004 
1070= 1069 | 54 
1071= 7 | 1070 
1072= 60 | 1071 
1073= 108 | 1072 
1074= 158 | 1073 
1075= 209 | 1074 
1076= 261 | 1075 
1077= 314 | 1076 
1078= 368 | 1077 
1079= 423 | 1078 
1080= 479 | 1079 
1081= 536 | 1080 
1082= 594 | 1081 
1083= 653 | 1082 
1084= 713 | 1083 
1085= 774 | 1084 
1086= 836 | 1085 
1087= 899 | 1086 
1088= 963 | 1087 
1089= 1028 | 1088 
1090= 1089 ! 
1091= 1048 & (!1089) 
1092= 1091 ! 
1093= ASSERT (!1091) : Assert at miniTestb414.sk:29 (2)
1094= 3 == (19) 
1095= 1094 | 1089 
1096= 1095 ! 
1097= 1048 & (!1095) 
1098= 1097 ! 
1099= ASSERT (!1097) : Assert at miniTestb414.sk:41 (2)
1100= (134)
1101= getND#0[(1)]((134), )
1102= (135)
1103= getND#0[(1)]((135), )
1104= (136)
1105= getND#0[(1)]((136), )
1106= (137)
1107= getND#0[(1)]((137), )
1108= (138)
1109= getND#0[(1)]((138), )
1110= (139)
1111= getND#0[(1)]((139), )
1112= (140)
1113= getND#0[(1)]((140), )
1114= 3 < (20) 
1115= 1101[0]
1116= 1115 == word_3_9_idx_0_0 
1117= 1103[0]
1118= 1117 == word_3_9_idx_1_0 
1119= 1116 & 1118 
1120= 1105[0]
1121= 1120 == word_3_9_idx_2_0 
1122= 1119 & 1121 
1123= 1107[0]
1124= 1123 == word_3_9_idx_3_0 
1125= 1122 & 1124 
1126= 1109[0]
1127= 1126 == word_3_9_idx_4_0 
1128= 1125 & 1127 
1129= 1111[0]
1130= 1129 == word_3_9_idx_5_0 
1131= 1128 & 1130 
1132= 1113[0]
1133= 1132 == word_3_9_idx_6_0 
1134= 1131 & 1133 
1135= 1134 | 1069 
1136= 1135 | 54 
1137= 7 | 1136 
1138= 60 | 1137 
1139= 108 | 1138 
1140= 158 | 1139 
1141= 209 | 1140 
1142= 261 | 1141 
1143= 314 | 1142 
1144= 368 | 1143 
1145= 423 | 1144 
1146= 479 | 1145 
1147= 536 | 1146 
1148= 594 | 1147 
1149= 653 | 1148 
1150= 713 | 1149 
1151= 774 | 1150 
1152= 836 | 1151 
1153= 899 | 1152 
1154= 963 | 1153 
1155= 1028 | 1154 
1156= 1094 | 1155 
1157= 1156 ! 
1158= 1114 & (!1156) 
1159= 1158 ! 
1160= ASSERT (!1158) : Assert at miniTestb414.sk:29 (2)
1161= 3 == (20) 
1162= 1161 | 1156 
1163= 1162 ! 
1164= 1114 & (!1162) 
1165= 1164 ! 
1166= ASSERT (!1164) : Assert at miniTestb414.sk:41 (2)
1167= (141)
1168= getND#0[(1)]((141), )
1169= (142)
1170= getND#0[(1)]((142), )
1171= (143)
1172= getND#0[(1)]((143), )
1173= (144)
1174= getND#0[(1)]((144), )
1175= (145)
1176= getND#0[(1)]((145), )
1177= (146)
1178= getND#0[(1)]((146), )
1179= (147)
1180= getND#0[(1)]((147), )
1181= 3 < (21) 
1182= 1168[0]
1183= 1182 == word_3_9_idx_0_0 
1184= 1170[0]
1185= 1184 == word_3_9_idx_1_0 
1186= 1183 & 1185 
1187= 1172[0]
1188= 1187 == word_3_9_idx_2_0 
1189= 1186 & 1188 
1190= 1174[0]
1191= 1190 == word_3_9_idx_3_0 
1192= 1189 & 1191 
1193= 1176[0]
1194= 1193 == word_3_9_idx_4_0 
1195= 1192 & 1194 
1196= 1178[0]
1197= 1196 == word_3_9_idx_5_0 
1198= 1195 & 1197 
1199= 1180[0]
1200= 1199 == word_3_9_idx_6_0 
1201= 1198 & 1200 
1202= 1201 | 1135 
1203= 1202 | 54 
1204= 7 | 1203 
1205= 60 | 1204 
1206= 108 | 1205 
1207= 158 | 1206 
1208= 209 | 1207 
1209= 261 | 1208 
1210= 314 | 1209 
1211= 368 | 1210 
1212= 423 | 1211 
1213= 479 | 1212 
1214= 536 | 1213 
1215= 594 | 1214 
1216= 653 | 1215 
1217= 713 | 1216 
1218= 774 | 1217 
1219= 836 | 1218 
1220= 899 | 1219 
1221= 963 | 1220 
1222= 1028 | 1221 
1223= 1094 | 1222 
1224= 1161 | 1223 
1225= 1224 ! 
1226= 1181 & (!1224) 
1227= 1226 ! 
1228= ASSERT (!1226) : Assert at miniTestb414.sk:29 (2)
1229= 3 == (21) 
1230= 1229 | 1224 
1231= 1230 ! 
1232= 1181 & (!1230) 
1233= 1232 ! 
1234= ASSERT (!1232) : Assert at miniTestb414.sk:41 (2)
1235= (148)
1236= getND#0[(1)]((148), )
1237= (149)
1238= getND#0[(1)]((149), )
1239= (150)
1240= getND#0[(1)]((150), )
1241= (151)
1242= getND#0[(1)]((151), )
1243= (152)
1244= getND#0[(1)]((152), )
1245= (153)
1246= getND#0[(1)]((153), )
1247= (154)
1248= getND#0[(1)]((154), )
1249= 3 < (22) 
1250= 1236[0]
1251= 1250 == word_3_9_idx_0_0 
1252= 1238[0]
1253= 1252 == word_3_9_idx_1_0 
1254= 1251 & 1253 
1255= 1240[0]
1256= 1255 == word_3_9_idx_2_0 
1257= 1254 & 1256 
1258= 1242[0]
1259= 1258 == word_3_9_idx_3_0 
1260= 1257 & 1259 
1261= 1244[0]
1262= 1261 == word_3_9_idx_4_0 
1263= 1260 & 1262 
1264= 1246[0]
1265= 1264 == word_3_9_idx_5_0 
1266= 1263 & 1265 
1267= 1248[0]
1268= 1267 == word_3_9_idx_6_0 
1269= 1266 & 1268 
1270= 1269 | 1202 
1271= 1270 | 54 
1272= 7 | 1271 
1273= 60 | 1272 
1274= 108 | 1273 
1275= 158 | 1274 
1276= 209 | 1275 
1277= 261 | 1276 
1278= 314 | 1277 
1279= 368 | 1278 
1280= 423 | 1279 
1281= 479 | 1280 
1282= 536 | 1281 
1283= 594 | 1282 
1284= 653 | 1283 
1285= 713 | 1284 
1286= 774 | 1285 
1287= 836 | 1286 
1288= 899 | 1287 
1289= 963 | 1288 
1290= 1028 | 1289 
1291= 1094 | 1290 
1292= 1161 | 1291 
1293= 1229 | 1292 
1294= 1293 ! 
1295= 1249 & (!1293) 
1296= 1295 ! 
1297= ASSERT (!1295) : Assert at miniTestb414.sk:29 (2)
1298= 3 == (22) 
1299= 1298 | 1293 
1300= 1299 ! 
1301= 1249 & (!1299) 
1302= 1301 ! 
1303= ASSERT (!1301) : Assert at miniTestb414.sk:41 (2)
1304= (155)
1305= getND#0[(1)]((155), )
1306= (156)
1307= getND#0[(1)]((156), )
1308= (157)
1309= getND#0[(1)]((157), )
1310= (158)
1311= getND#0[(1)]((158), )
1312= (159)
1313= getND#0[(1)]((159), )
1314= (160)
1315= getND#0[(1)]((160), )
1316= (161)
1317= getND#0[(1)]((161), )
1318= 3 < (23) 
1319= 1305[0]
1320= 1319 == word_3_9_idx_0_0 
1321= 1307[0]
1322= 1321 == word_3_9_idx_1_0 
1323= 1320 & 1322 
1324= 1309[0]
1325= 1324 == word_3_9_idx_2_0 
1326= 1323 & 1325 
1327= 1311[0]
1328= 1327 == word_3_9_idx_3_0 
1329= 1326 & 1328 
1330= 1313[0]
1331= 1330 == word_3_9_idx_4_0 
1332= 1329 & 1331 
1333= 1315[0]
1334= 1333 == word_3_9_idx_5_0 
1335= 1332 & 1334 
1336= 1317[0]
1337= 1336 == word_3_9_idx_6_0 
1338= 1335 & 1337 
1339= 1338 | 1270 
1340= 1339 | 54 
1341= 7 | 1340 
1342= 60 | 1341 
1343= 108 | 1342 
1344= 158 | 1343 
1345= 209 | 1344 
1346= 261 | 1345 
1347= 314 | 1346 
1348= 368 | 1347 
1349= 423 | 1348 
1350= 479 | 1349 
1351= 536 | 1350 
1352= 594 | 1351 
1353= 653 | 1352 
1354= 713 | 1353 
1355= 774 | 1354 
1356= 836 | 1355 
1357= 899 | 1356 
1358= 963 | 1357 
1359= 1028 | 1358 
1360= 1094 | 1359 
1361= 1161 | 1360 
1362= 1229 | 1361 
1363= 1298 | 1362 
1364= 1363 ! 
1365= 1318 & (!1363) 
1366= 1365 ! 
1367= ASSERT (!1365) : Assert at miniTestb414.sk:29 (2)
1368= 3 == (23) 
1369= 1368 | 1363 
1370= 1369 ! 
1371= 1318 & (!1369) 
1372= 1371 ! 
1373= ASSERT (!1371) : Assert at miniTestb414.sk:41 (2)
1374= (162)
1375= getND#0[(1)]((162), )
1376= (163)
1377= getND#0[(1)]((163), )
1378= (164)
1379= getND#0[(1)]((164), )
1380= (165)
1381= getND#0[(1)]((165), )
1382= (166)
1383= getND#0[(1)]((166), )
1384= (167)
1385= getND#0[(1)]((167), )
1386= (168)
1387= getND#0[(1)]((168), )
1388= 3 < (24) 
1389= 1375[0]
1390= 1389 == word_3_9_idx_0_0 
1391= 1377[0]
1392= 1391 == word_3_9_idx_1_0 
1393= 1390 & 1392 
1394= 1379[0]
1395= 1394 == word_3_9_idx_2_0 
1396= 1393 & 1395 
1397= 1381[0]
1398= 1397 == word_3_9_idx_3_0 
1399= 1396 & 1398 
1400= 1383[0]
1401= 1400 == word_3_9_idx_4_0 
1402= 1399 & 1401 
1403= 1385[0]
1404= 1403 == word_3_9_idx_5_0 
1405= 1402 & 1404 
1406= 1387[0]
1407= 1406 == word_3_9_idx_6_0 
1408= 1405 & 1407 
1409= 1408 | 1339 
1410= 1409 | 54 
1411= 7 | 1410 
1412= 60 | 1411 
1413= 108 | 1412 
1414= 158 | 1413 
1415= 209 | 1414 
1416= 261 | 1415 
1417= 314 | 1416 
1418= 368 | 1417 
1419= 423 | 1418 
1420= 479 | 1419 
1421= 536 | 1420 
1422= 594 | 1421 
1423= 653 | 1422 
1424= 713 | 1423 
1425= 774 | 1424 
1426= 836 | 1425 
1427= 899 | 1426 
1428= 963 | 1427 
1429= 1028 | 1428 
1430= 1094 | 1429 
1431= 1161 | 1430 
1432= 1229 | 1431 
1433= 1298 | 1432 
1434= 1368 | 1433 
1435= 1434 ! 
1436= 1388 & (!1434) 
1437= 1436 ! 
1438= ASSERT (!1436) : Assert at miniTestb414.sk:29 (2)
1439= 3 == (24) 
1440= 1439 | 1434 
1441= 1440 ! 
1442= 1388 & (!1440) 
1443= 1442 ! 
1444= ASSERT (!1442) : Assert at miniTestb414.sk:41 (2)
1445= (169)
1446= getND#0[(1)]((169), )
1447= (170)
1448= getND#0[(1)]((170), )
1449= (171)
1450= getND#0[(1)]((171), )
1451= (172)
1452= getND#0[(1)]((172), )
1453= (173)
1454= getND#0[(1)]((173), )
1455= (174)
1456= getND#0[(1)]((174), )
1457= (175)
1458= getND#0[(1)]((175), )
1459= 3 < (25) 
1460= 1446[0]
1461= 1460 == word_3_9_idx_0_0 
1462= 1448[0]
1463= 1462 == word_3_9_idx_1_0 
1464= 1461 & 1463 
1465= 1450[0]
1466= 1465 == word_3_9_idx_2_0 
1467= 1464 & 1466 
1468= 1452[0]
1469= 1468 == word_3_9_idx_3_0 
1470= 1467 & 1469 
1471= 1454[0]
1472= 1471 == word_3_9_idx_4_0 
1473= 1470 & 1472 
1474= 1456[0]
1475= 1474 == word_3_9_idx_5_0 
1476= 1473 & 1475 
1477= 1458[0]
1478= 1477 == word_3_9_idx_6_0 
1479= 1476 & 1478 
1480= 1479 | 1409 
1481= 1480 | 54 
1482= 7 | 1481 
1483= 60 | 1482 
1484= 108 | 1483 
1485= 158 | 1484 
1486= 209 | 1485 
1487= 261 | 1486 
1488= 314 | 1487 
1489= 368 | 1488 
1490= 423 | 1489 
1491= 479 | 1490 
1492= 536 | 1491 
1493= 594 | 1492 
1494= 653 | 1493 
1495= 713 | 1494 
1496= 774 | 1495 
1497= 836 | 1496 
1498= 899 | 1497 
1499= 963 | 1498 
1500= 1028 | 1499 
1501= 1094 | 1500 
1502= 1161 | 1501 
1503= 1229 | 1502 
1504= 1298 | 1503 
1505= 1368 | 1504 
1506= 1439 | 1505 
1507= 1506 ! 
1508= 1459 & (!1506) 
1509= 1508 ! 
1510= ASSERT (!1508) : Assert at miniTestb414.sk:29 (2)
1511= 3 == (25) 
1512= 1511 | 1506 
1513= 1512 ! 
1514= 1459 & (!1512) 
1515= 1514 ! 
1516= ASSERT (!1514) : Assert at miniTestb414.sk:41 (2)
1517= (176)
1518= getND#0[(1)]((176), )
1519= (177)
1520= getND#0[(1)]((177), )
1521= (178)
1522= getND#0[(1)]((178), )
1523= (179)
1524= getND#0[(1)]((179), )
1525= (180)
1526= getND#0[(1)]((180), )
1527= (181)
1528= getND#0[(1)]((181), )
1529= (182)
1530= getND#0[(1)]((182), )
1531= 3 < (26) 
1532= 1518[0]
1533= 1532 == word_3_9_idx_0_0 
1534= 1520[0]
1535= 1534 == word_3_9_idx_1_0 
1536= 1533 & 1535 
1537= 1522[0]
1538= 1537 == word_3_9_idx_2_0 
1539= 1536 & 1538 
1540= 1524[0]
1541= 1540 == word_3_9_idx_3_0 
1542= 1539 & 1541 
1543= 1526[0]
1544= 1543 == word_3_9_idx_4_0 
1545= 1542 & 1544 
1546= 1528[0]
1547= 1546 == word_3_9_idx_5_0 
1548= 1545 & 1547 
1549= 1530[0]
1550= 1549 == word_3_9_idx_6_0 
1551= 1548 & 1550 
1552= 1551 | 1480 
1553= 1552 | 54 
1554= 7 | 1553 
1555= 60 | 1554 
1556= 108 | 1555 
1557= 158 | 1556 
1558= 209 | 1557 
1559= 261 | 1558 
1560= 314 | 1559 
1561= 368 | 1560 
1562= 423 | 1561 
1563= 479 | 1562 
1564= 536 | 1563 
1565= 594 | 1564 
1566= 653 | 1565 
1567= 713 | 1566 
1568= 774 | 1567 
1569= 836 | 1568 
1570= 899 | 1569 
1571= 963 | 1570 
1572= 1028 | 1571 
1573= 1094 | 1572 
1574= 1161 | 1573 
1575= 1229 | 1574 
1576= 1298 | 1575 
1577= 1368 | 1576 
1578= 1439 | 1577 
1579= 1511 | 1578 
1580= 1579 ! 
1581= 1531 & (!1579) 
1582= 1581 ! 
1583= ASSERT (!1581) : Assert at miniTestb414.sk:29 (2)
1584= 3 == (26) 
1585= 1584 | 1579 
1586= 1585 ! 
1587= 1531 & (!1585) 
1588= 1587 ! 
1589= ASSERT (!1587) : Assert at miniTestb414.sk:41 (2)
1590= (183)
1591= getND#0[(1)]((183), )
1592= (184)
1593= getND#0[(1)]((184), )
1594= (185)
1595= getND#0[(1)]((185), )
1596= (186)
1597= getND#0[(1)]((186), )
1598= (187)
1599= getND#0[(1)]((187), )
1600= (188)
1601= getND#0[(1)]((188), )
1602= (189)
1603= getND#0[(1)]((189), )
1604= 3 < (27) 
1605= 1591[0]
1606= 1605 == word_3_9_idx_0_0 
1607= 1593[0]
1608= 1607 == word_3_9_idx_1_0 
1609= 1606 & 1608 
1610= 1595[0]
1611= 1610 == word_3_9_idx_2_0 
1612= 1609 & 1611 
1613= 1597[0]
1614= 1613 == word_3_9_idx_3_0 
1615= 1612 & 1614 
1616= 1599[0]
1617= 1616 == word_3_9_idx_4_0 
1618= 1615 & 1617 
1619= 1601[0]
1620= 1619 == word_3_9_idx_5_0 
1621= 1618 & 1620 
1622= 1603[0]
1623= 1622 == word_3_9_idx_6_0 
1624= 1621 & 1623 
1625= 1624 | 1552 
1626= 1625 | 54 
1627= 7 | 1626 
1628= 60 | 1627 
1629= 108 | 1628 
1630= 158 | 1629 
1631= 209 | 1630 
1632= 261 | 1631 
1633= 314 | 1632 
1634= 368 | 1633 
1635= 423 | 1634 
1636= 479 | 1635 
1637= 536 | 1636 
1638= 594 | 1637 
1639= 653 | 1638 
1640= 713 | 1639 
1641= 774 | 1640 
1642= 836 | 1641 
1643= 899 | 1642 
1644= 963 | 1643 
1645= 1028 | 1644 
1646= 1094 | 1645 
1647= 1161 | 1646 
1648= 1229 | 1647 
1649= 1298 | 1648 
1650= 1368 | 1649 
1651= 1439 | 1650 
1652= 1511 | 1651 
1653= 1584 | 1652 
1654= 1653 ! 
1655= 1604 & (!1653) 
1656= 1655 ! 
1657= ASSERT (!1655) : Assert at miniTestb414.sk:29 (2)
1658= 3 == (27) 
1659= 1658 | 1653 
1660= 1659 ! 
1661= 1604 & (!1659) 
1662= 1661 ! 
1663= ASSERT (!1661) : Assert at miniTestb414.sk:41 (2)
1664= (190)
1665= getND#0[(1)]((190), )
1666= (191)
1667= getND#0[(1)]((191), )
1668= (192)
1669= getND#0[(1)]((192), )
1670= (193)
1671= getND#0[(1)]((193), )
1672= (194)
1673= getND#0[(1)]((194), )
1674= (195)
1675= getND#0[(1)]((195), )
1676= (196)
1677= getND#0[(1)]((196), )
1678= 3 < (28) 
1679= 1665[0]
1680= 1679 == word_3_9_idx_0_0 
1681= 1667[0]
1682= 1681 == word_3_9_idx_1_0 
1683= 1680 & 1682 
1684= 1669[0]
1685= 1684 == word_3_9_idx_2_0 
1686= 1683 & 1685 
1687= 1671[0]
1688= 1687 == word_3_9_idx_3_0 
1689= 1686 & 1688 
1690= 1673[0]
1691= 1690 == word_3_9_idx_4_0 
1692= 1689 & 1691 
1693= 1675[0]
1694= 1693 == word_3_9_idx_5_0 
1695= 1692 & 1694 
1696= 1677[0]
1697= 1696 == word_3_9_idx_6_0 
1698= 1695 & 1697 
1699= 1698 | 1625 
1700= 1699 | 54 
1701= 7 | 1700 
1702= 60 | 1701 
1703= 108 | 1702 
1704= 158 | 1703 
1705= 209 | 1704 
1706= 261 | 1705 
1707= 314 | 1706 
1708= 368 | 1707 
1709= 423 | 1708 
1710= 479 | 1709 
1711= 536 | 1710 
1712= 594 | 1711 
1713= 653 | 1712 
1714= 713 | 1713 
1715= 774 | 1714 
1716= 836 | 1715 
1717= 899 | 1716 
1718= 963 | 1717 
1719= 1028 | 1718 
1720= 1094 | 1719 
1721= 1161 | 1720 
1722= 1229 | 1721 
1723= 1298 | 1722 
1724= 1368 | 1723 
1725= 1439 | 1724 
1726= 1511 | 1725 
1727= 1584 | 1726 
1728= 1658 | 1727 
1729= 1728 ! 
1730= 1678 & (!1728) 
1731= 1730 ! 
1732= ASSERT (!1730) : Assert at miniTestb414.sk:29 (2)
1733= 3 == (28) 
1734= 1733 | 1728 
1735= 1734 ! 
1736= 1678 & (!1734) 
1737= 1736 ! 
1738= ASSERT (!1736) : Assert at miniTestb414.sk:41 (2)
1739= (197)
1740= getND#0[(1)]((197), )
1741= (198)
1742= getND#0[(1)]((198), )
1743= (199)
1744= getND#0[(1)]((199), )
1745= (200)
1746= getND#0[(1)]((200), )
1747= (201)
1748= getND#0[(1)]((201), )
1749= (202)
1750= getND#0[(1)]((202), )
1751= (203)
1752= getND#0[(1)]((203), )
1753= 3 < (29) 
1754= 1740[0]
1755= 1754 == word_3_9_idx_0_0 
1756= 1742[0]
1757= 1756 == word_3_9_idx_1_0 
1758= 1755 & 1757 
1759= 1744[0]
1760= 1759 == word_3_9_idx_2_0 
1761= 1758 & 1760 
1762= 1746[0]
1763= 1762 == word_3_9_idx_3_0 
1764= 1761 & 1763 
1765= 1748[0]
1766= 1765 == word_3_9_idx_4_0 
1767= 1764 & 1766 
1768= 1750[0]
1769= 1768 == word_3_9_idx_5_0 
1770= 1767 & 1769 
1771= 1752[0]
1772= 1771 == word_3_9_idx_6_0 
1773= 1770 & 1772 
1774= 1773 | 1699 
1775= 1774 | 54 
1776= 7 | 1775 
1777= 60 | 1776 
1778= 108 | 1777 
1779= 158 | 1778 
1780= 209 | 1779 
1781= 261 | 1780 
1782= 314 | 1781 
1783= 368 | 1782 
1784= 423 | 1783 
1785= 479 | 1784 
1786= 536 | 1785 
1787= 594 | 1786 
1788= 653 | 1787 
1789= 713 | 1788 
1790= 774 | 1789 
1791= 836 | 1790 
1792= 899 | 1791 
1793= 963 | 1792 
1794= 1028 | 1793 
1795= 1094 | 1794 
1796= 1161 | 1795 
1797= 1229 | 1796 
1798= 1298 | 1797 
1799= 1368 | 1798 
1800= 1439 | 1799 
1801= 1511 | 1800 
1802= 1584 | 1801 
1803= 1658 | 1802 
1804= 1733 | 1803 
1805= 1804 ! 
1806= 1753 & (!1804) 
1807= 1806 ! 
1808= ASSERT (!1806) : Assert at miniTestb414.sk:29 (2)
1809= 3 == (29) 
1810= 1809 | 1804 
1811= 1810 ! 
1812= 1753 & (!1810) 
1813= 1812 ! 
1814= ASSERT (!1812) : Assert at miniTestb414.sk:41 (2)
1815= (204)
1816= getND#0[(1)]((204), )
1817= (205)
1818= getND#0[(1)]((205), )
1819= (206)
1820= getND#0[(1)]((206), )
1821= (207)
1822= getND#0[(1)]((207), )
1823= (208)
1824= getND#0[(1)]((208), )
1825= (209)
1826= getND#0[(1)]((209), )
1827= (210)
1828= getND#0[(1)]((210), )
1829= 3 < (30) 
1830= 1816[0]
1831= 1830 == word_3_9_idx_0_0 
1832= 1818[0]
1833= 1832 == word_3_9_idx_1_0 
1834= 1831 & 1833 
1835= 1820[0]
1836= 1835 == word_3_9_idx_2_0 
1837= 1834 & 1836 
1838= 1822[0]
1839= 1838 == word_3_9_idx_3_0 
1840= 1837 & 1839 
1841= 1824[0]
1842= 1841 == word_3_9_idx_4_0 
1843= 1840 & 1842 
1844= 1826[0]
1845= 1844 == word_3_9_idx_5_0 
1846= 1843 & 1845 
1847= 1828[0]
1848= 1847 == word_3_9_idx_6_0 
1849= 1846 & 1848 
1850= 1849 | 1774 
1851= 1850 | 54 
1852= 7 | 1851 
1853= 60 | 1852 
1854= 108 | 1853 
1855= 158 | 1854 
1856= 209 | 1855 
1857= 261 | 1856 
1858= 314 | 1857 
1859= 368 | 1858 
1860= 423 | 1859 
1861= 479 | 1860 
1862= 536 | 1861 
1863= 594 | 1862 
1864= 653 | 1863 
1865= 713 | 1864 
1866= 774 | 1865 
1867= 836 | 1866 
1868= 899 | 1867 
1869= 963 | 1868 
1870= 1028 | 1869 
1871= 1094 | 1870 
1872= 1161 | 1871 
1873= 1229 | 1872 
1874= 1298 | 1873 
1875= 1368 | 1874 
1876= 1439 | 1875 
1877= 1511 | 1876 
1878= 1584 | 1877 
1879= 1658 | 1878 
1880= 1733 | 1879 
1881= 1809 | 1880 
1882= 1881 ! 
1883= 1829 & (!1881) 
1884= 1883 ! 
1885= ASSERT (!1883) : Assert at miniTestb414.sk:29 (2)
1886= 3 == (30) 
1887= 1886 | 1881 
1888= 1887 ! 
1889= 1829 & (!1887) 
1890= 1889 ! 
1891= ASSERT (!1889) : Assert at miniTestb414.sk:41 (2)
1892= (211)
1893= getND#0[(1)]((211), )
1894= (212)
1895= getND#0[(1)]((212), )
1896= (213)
1897= getND#0[(1)]((213), )
1898= (214)
1899= getND#0[(1)]((214), )
1900= (215)
1901= getND#0[(1)]((215), )
1902= (216)
1903= getND#0[(1)]((216), )
1904= (217)
1905= getND#0[(1)]((217), )
1906= 3 < (31) 
1907= 1893[0]
1908= 1907 == word_3_9_idx_0_0 
1909= 1895[0]
1910= 1909 == word_3_9_idx_1_0 
1911= 1908 & 1910 
1912= 1897[0]
1913= 1912 == word_3_9_idx_2_0 
1914= 1911 & 1913 
1915= 1899[0]
1916= 1915 == word_3_9_idx_3_0 
1917= 1914 & 1916 
1918= 1901[0]
1919= 1918 == word_3_9_idx_4_0 
1920= 1917 & 1919 
1921= 1903[0]
1922= 1921 == word_3_9_idx_5_0 
1923= 1920 & 1922 
1924= 1905[0]
1925= 1924 == word_3_9_idx_6_0 
1926= 1923 & 1925 
1927= 1926 | 1850 
1928= 1927 | 54 
1929= 7 | 1928 
1930= 60 | 1929 
1931= 108 | 1930 
1932= 158 | 1931 
1933= 209 | 1932 
1934= 261 | 1933 
1935= 314 | 1934 
1936= 368 | 1935 
1937= 423 | 1936 
1938= 479 | 1937 
1939= 536 | 1938 
1940= 594 | 1939 
1941= 653 | 1940 
1942= 713 | 1941 
1943= 774 | 1942 
1944= 836 | 1943 
1945= 899 | 1944 
1946= 963 | 1945 
1947= 1028 | 1946 
1948= 1094 | 1947 
1949= 1161 | 1948 
1950= 1229 | 1949 
1951= 1298 | 1950 
1952= 1368 | 1951 
1953= 1439 | 1952 
1954= 1511 | 1953 
1955= 1584 | 1954 
1956= 1658 | 1955 
1957= 1733 | 1956 
1958= 1809 | 1957 
1959= 1886 | 1958 
1960= 1959 ! 
1961= 1906 & (!1959) 
1962= 1961 ! 
1963= ASSERT (!1961) : Assert at miniTestb414.sk:29 (2)
1964= 3 == (31) 
1965= 1964 | 1959 
1966= 1965 ! 
1967= 1906 & (!1965) 
1968= 1967 ! 
1969= ASSERT (!1967) : Assert at miniTestb414.sk:41 (2)
1970= (218)
1971= getND#0[(1)]((218), )
1972= (219)
1973= getND#0[(1)]((219), )
1974= (220)
1975= getND#0[(1)]((220), )
1976= (221)
1977= getND#0[(1)]((221), )
1978= (222)
1979= getND#0[(1)]((222), )
1980= (223)
1981= getND#0[(1)]((223), )
1982= (224)
1983= getND#0[(1)]((224), )
1984= word_3_9_idx_0_0 < (0) 
1985= 1984 ! 
1986= word_3_9_idx_0_0 < (27) 
1987= (!1984) & 1986 
1988= (26) < word_3_9_idx_0_0 
1989= 54 & (!7) 
1990= 100 ! 
1991= (!100) | 61 
1992= 1991 ! 
1993= 1989 | (!1991) 
1994= 148 ! 
1995= (!148) | 109 
1996= 1995 ! 
1997= 1993 | (!1995) 
1998= 198 ! 
1999= (!198) | 159 
2000= 1999 ! 
2001= 1997 | (!1999) 
2002= 249 ! 
2003= (!249) | 210 
2004= 2003 ! 
2005= 2001 | (!2003) 
2006= 301 ! 
2007= (!301) | 262 
2008= 2007 ! 
2009= 2005 | (!2007) 
2010= 354 ! 
2011= (!354) | 315 
2012= 2011 ! 
2013= 2009 | (!2011) 
2014= 408 ! 
2015= (!408) | 369 
2016= 2015 ! 
2017= 2013 | (!2015) 
2018= 463 ! 
2019= (!463) | 424 
2020= 2019 ! 
2021= 2017 | (!2019) 
2022= 519 ! 
2023= (!519) | 480 
2024= 2023 ! 
2025= 2021 | (!2023) 
2026= 576 ! 
2027= (!576) | 537 
2028= 2027 ! 
2029= 2025 | (!2027) 
2030= 634 ! 
2031= (!634) | 595 
2032= 2031 ! 
2033= 2029 | (!2031) 
2034= 693 ! 
2035= (!693) | 654 
2036= 2035 ! 
2037= 2033 | (!2035) 
2038= 753 ! 
2039= (!753) | 714 
2040= 2039 ! 
2041= 2037 | (!2039) 
2042= 814 ! 
2043= (!814) | 775 
2044= 2043 ! 
2045= 2041 | (!2043) 
2046= 876 ! 
2047= (!876) | 837 
2048= 2047 ! 
2049= 2045 | (!2047) 
2050= 939 ! 
2051= (!939) | 900 
2052= 2051 ! 
2053= 2049 | (!2051) 
2054= 1003 ! 
2055= (!1003) | 964 
2056= 2055 ! 
2057= 2053 | (!2055) 
2058= 1068 ! 
2059= (!1068) | 1029 
2060= 2059 ! 
2061= 2057 | (!2059) 
2062= 1134 ! 
2063= (!1134) | 1095 
2064= 2063 ! 
2065= 2061 | (!2063) 
2066= 1201 ! 
2067= (!1201) | 1162 
2068= 2067 ! 
2069= 2065 | (!2067) 
2070= 1269 ! 
2071= (!1269) | 1230 
2072= 2071 ! 
2073= 2069 | (!2071) 
2074= 1338 ! 
2075= (!1338) | 1299 
2076= 2075 ! 
2077= 2073 | (!2075) 
2078= 1408 ! 
2079= (!1408) | 1369 
2080= 2079 ! 
2081= 2077 | (!2079) 
2082= 1479 ! 
2083= (!1479) | 1440 
2084= 2083 ! 
2085= 2081 | (!2083) 
2086= 1551 ! 
2087= (!1551) | 1512 
2088= 2087 ! 
2089= 2085 | (!2087) 
2090= 1624 ! 
2091= (!1624) | 1585 
2092= 2091 ! 
2093= 2089 | (!2091) 
2094= 1698 ! 
2095= (!1698) | 1659 
2096= 2095 ! 
2097= 2093 | (!2095) 
2098= 1773 ! 
2099= (!1773) | 1734 
2100= 2099 ! 
2101= 2097 | (!2099) 
2102= 1849 ! 
2103= (!1849) | 1810 
2104= 2103 ! 
2105= 2101 | (!2103) 
2106= 1926 ! 
2107= (!1926) | 1887 
2108= 2107 ! 
2109= 2105 | (!2107) 
2110= 1971[0]
2111= 2110 == word_3_9_idx_0_0 
2112= 1973[0]
2113= 2112 == word_3_9_idx_1_0 
2114= 2111 & 2113 
2115= 1975[0]
2116= 2115 == word_3_9_idx_2_0 
2117= 2114 & 2116 
2118= 1977[0]
2119= 2118 == word_3_9_idx_3_0 
2120= 2117 & 2119 
2121= 1979[0]
2122= 2121 == word_3_9_idx_4_0 
2123= 2120 & 2122 
2124= 1981[0]
2125= 2124 == word_3_9_idx_5_0 
2126= 2123 & 2125 
2127= 1983[0]
2128= 2127 == word_3_9_idx_6_0 
2129= 2126 & 2128 
2130= 2129 ! 
2131= (!2129) | 1965 
2132= 2131 ! 
2133= 2109 | (!2131) 
2134= (0) < 3 
2135= 54 & 2134 
2136= (1) < 3 
2137= 2136 ! 
2138= 2134 ! 
2139= (!2134) | 54 
2140= (!2136) | 2139 
2141= (!100) | 2140 
2142= 2141 ! 
2143= 2135 | (!2141) 
2144= (2) < 3 
2145= 2144 ! 
2146= (!2134) | 101 
2147= (!2136) | 2146 
2148= (!2144) | 2147 
2149= (!148) | 2148 
2150= 2149 ! 
2151= 2143 | (!2149) 
2152= (3) < 3 
2153= 2152 ! 
2154= (!2134) | 150 
2155= (!2136) | 2154 
2156= (!2144) | 2155 
2157= (!2152) | 2156 
2158= (!198) | 2157 
2159= 2158 ! 
2160= 2151 | (!2158) 
2161= (4) < 3 
2162= 2161 ! 
2163= (!2134) | 200 
2164= (!2136) | 2163 
2165= (!2144) | 2164 
2166= (!2152) | 2165 
2167= (!2161) | 2166 
2168= (!249) | 2167 
2169= 2168 ! 
2170= 2160 | (!2168) 
2171= (5) < 3 
2172= 2171 ! 
2173= (!2134) | 251 
2174= (!2136) | 2173 
2175= (!2144) | 2174 
2176= (!2152) | 2175 
2177= (!2161) | 2176 
2178= (!2171) | 2177 
2179= (!301) | 2178 
2180= 2179 ! 
2181= 2170 | (!2179) 
2182= (6) < 3 
2183= 2182 ! 
2184= (!2134) | 303 
2185= (!2136) | 2184 
2186= (!2144) | 2185 
2187= (!2152) | 2186 
2188= (!2161) | 2187 
2189= (!2171) | 2188 
2190= (!2182) | 2189 
2191= (!354) | 2190 
2192= 2191 ! 
2193= 2181 | (!2191) 
2194= (7) < 3 
2195= 2194 ! 
2196= (!2134) | 356 
2197= (!2136) | 2196 
2198= (!2144) | 2197 
2199= (!2152) | 2198 
2200= (!2161) | 2199 
2201= (!2171) | 2200 
2202= (!2182) | 2201 
2203= (!2194) | 2202 
2204= (!408) | 2203 
2205= 2204 ! 
2206= 2193 | (!2204) 
2207= (8) < 3 
2208= 2207 ! 
2209= (!2134) | 410 
2210= (!2136) | 2209 
2211= (!2144) | 2210 
2212= (!2152) | 2211 
2213= (!2161) | 2212 
2214= (!2171) | 2213 
2215= (!2182) | 2214 
2216= (!2194) | 2215 
2217= (!2207) | 2216 
2218= (!463) | 2217 
2219= 2218 ! 
2220= 2206 | (!2218) 
2221= (9) < 3 
2222= 2221 ! 
2223= (!2134) | 465 
2224= (!2136) | 2223 
2225= (!2144) | 2224 
2226= (!2152) | 2225 
2227= (!2161) | 2226 
2228= (!2171) | 2227 
2229= (!2182) | 2228 
2230= (!2194) | 2229 
2231= (!2207) | 2230 
2232= (!2221) | 2231 
2233= (!519) | 2232 
2234= 2233 ! 
2235= 2220 | (!2233) 
2236= (10) < 3 
2237= 2236 ! 
2238= (!2134) | 521 
2239= (!2136) | 2238 
2240= (!2144) | 2239 
2241= (!2152) | 2240 
2242= (!2161) | 2241 
2243= (!2171) | 2242 
2244= (!2182) | 2243 
2245= (!2194) | 2244 
2246= (!2207) | 2245 
2247= (!2221) | 2246 
2248= (!2236) | 2247 
2249= (!576) | 2248 
2250= 2249 ! 
2251= 2235 | (!2249) 
2252= (11) < 3 
2253= 2252 ! 
2254= (!2134) | 578 
2255= (!2136) | 2254 
2256= (!2144) | 2255 
2257= (!2152) | 2256 
2258= (!2161) | 2257 
2259= (!2171) | 2258 
2260= (!2182) | 2259 
2261= (!2194) | 2260 
2262= (!2207) | 2261 
2263= (!2221) | 2262 
2264= (!2236) | 2263 
2265= (!2252) | 2264 
2266= (!634) | 2265 
2267= 2266 ! 
2268= 2251 | (!2266) 
2269= (12) < 3 
2270= 2269 ! 
2271= (!2134) | 636 
2272= (!2136) | 2271 
2273= (!2144) | 2272 
2274= (!2152) | 2273 
2275= (!2161) | 2274 
2276= (!2171) | 2275 
2277= (!2182) | 2276 
2278= (!2194) | 2277 
2279= (!2207) | 2278 
2280= (!2221) | 2279 
2281= (!2236) | 2280 
2282= (!2252) | 2281 
2283= (!2269) | 2282 
2284= (!693) | 2283 
2285= 2284 ! 
2286= 2268 | (!2284) 
2287= (13) < 3 
2288= 2287 ! 
2289= (!2134) | 695 
2290= (!2136) | 2289 
2291= (!2144) | 2290 
2292= (!2152) | 2291 
2293= (!2161) | 2292 
2294= (!2171) | 2293 
2295= (!2182) | 2294 
2296= (!2194) | 2295 
2297= (!2207) | 2296 
2298= (!2221) | 2297 
2299= (!2236) | 2298 
2300= (!2252) | 2299 
2301= (!2269) | 2300 
2302= (!2287) | 2301 
2303= (!753) | 2302 
2304= 2303 ! 
2305= 2286 | (!2303) 
2306= (14) < 3 
2307= 2306 ! 
2308= (!2134) | 755 
2309= (!2136) | 2308 
2310= (!2144) | 2309 
2311= (!2152) | 2310 
2312= (!2161) | 2311 
2313= (!2171) | 2312 
2314= (!2182) | 2313 
2315= (!2194) | 2314 
2316= (!2207) | 2315 
2317= (!2221) | 2316 
2318= (!2236) | 2317 
2319= (!2252) | 2318 
2320= (!2269) | 2319 
2321= (!2287) | 2320 
2322= (!2306) | 2321 
2323= (!814) | 2322 
2324= 2323 ! 
2325= 2305 | (!2323) 
2326= (15) < 3 
2327= 2326 ! 
2328= (!2134) | 816 
2329= (!2136) | 2328 
2330= (!2144) | 2329 
2331= (!2152) | 2330 
2332= (!2161) | 2331 
2333= (!2171) | 2332 
2334= (!2182) | 2333 
2335= (!2194) | 2334 
2336= (!2207) | 2335 
2337= (!2221) | 2336 
2338= (!2236) | 2337 
2339= (!2252) | 2338 
2340= (!2269) | 2339 
2341= (!2287) | 2340 
2342= (!2306) | 2341 
2343= (!2326) | 2342 
2344= (!876) | 2343 
2345= 2344 ! 
2346= 2325 | (!2344) 
2347= (16) < 3 
2348= 2347 ! 
2349= (!2134) | 878 
2350= (!2136) | 2349 
2351= (!2144) | 2350 
2352= (!2152) | 2351 
2353= (!2161) | 2352 
2354= (!2171) | 2353 
2355= (!2182) | 2354 
2356= (!2194) | 2355 
2357= (!2207) | 2356 
2358= (!2221) | 2357 
2359= (!2236) | 2358 
2360= (!2252) | 2359 
2361= (!2269) | 2360 
2362= (!2287) | 2361 
2363= (!2306) | 2362 
2364= (!2326) | 2363 
2365= (!2347) | 2364 
2366= (!939) | 2365 
2367= 2366 ! 
2368= 2346 | (!2366) 
2369= (17) < 3 
2370= 2369 ! 
2371= (!2134) | 941 
2372= (!2136) | 2371 
2373= (!2144) | 2372 
2374= (!2152) | 2373 
2375= (!2161) | 2374 
2376= (!2171) | 2375 
2377= (!2182) | 2376 
2378= (!2194) | 2377 
2379= (!2207) | 2378 
2380= (!2221) | 2379 
2381= (!2236) | 2380 
2382= (!2252) | 2381 
2383= (!2269) | 2382 
2384= (!2287) | 2383 
2385= (!2306) | 2384 
2386= (!2326) | 2385 
2387= (!2347) | 2386 
2388= (!2369) | 2387 
2389= (!1003) | 2388 
2390= 2389 ! 
2391= 2368 | (!2389) 
2392= (18) < 3 
2393= 2392 ! 
2394= (!2134) | 1005 
2395= (!2136) | 2394 
2396= (!2144) | 2395 
2397= (!2152) | 2396 
2398= (!2161) | 2397 
2399= (!2171) | 2398 
2400= (!2182) | 2399 
2401= (!2194) | 2400 
2402= (!2207) | 2401 
2403= (!2221) | 2402 
2404= (!2236) | 2403 
2405= (!2252) | 2404 
2406= (!2269) | 2405 
2407= (!2287) | 2406 
2408= (!2306) | 2407 
2409= (!2326) | 2408 
2410= (!2347) | 2409 
2411= (!2369) | 2410 
2412= (!2392) | 2411 
2413= (!1068) | 2412 
2414= 2413 ! 
2415= 2391 | (!2413) 
2416= (19) < 3 
2417= 2416 ! 
2418= (!2134) | 1070 
2419= (!2136) | 2418 
2420= (!2144) | 2419 
2421= (!2152) | 2420 
2422= (!2161) | 2421 
2423= (!2171) | 2422 
2424= (!2182) | 2423 
2425= (!2194) | 2424 
2426= (!2207) | 2425 
2427= (!2221) | 2426 
2428= (!2236) | 2427 
2429= (!2252) | 2428 
2430= (!2269) | 2429 
2431= (!2287) | 2430 
2432= (!2306) | 2431 
2433= (!2326) | 2432 
2434= (!2347) | 2433 
2435= (!2369) | 2434 
2436= (!2392) | 2435 
2437= (!2416) | 2436 
2438= (!1134) | 2437 
2439= 2438 ! 
2440= 2415 | (!2438) 
2441= (20) < 3 
2442= 2441 ! 
2443= (!2134) | 1136 
2444= (!2136) | 2443 
2445= (!2144) | 2444 
2446= (!2152) | 2445 
2447= (!2161) | 2446 
2448= (!2171) | 2447 
2449= (!2182) | 2448 
2450= (!2194) | 2449 
2451= (!2207) | 2450 
2452= (!2221) | 2451 
2453= (!2236) | 2452 
2454= (!2252) | 2453 
2455= (!2269) | 2454 
2456= (!2287) | 2455 
2457= (!2306) | 2456 
2458= (!2326) | 2457 
2459= (!2347) | 2458 
2460= (!2369) | 2459 
2461= (!2392) | 2460 
2462= (!2416) | 2461 
2463= (!2441) | 2462 
2464= (!1201) | 2463 
2465= 2464 ! 
2466= 2440 | (!2464) 
2467= (21) < 3 
2468= 2467 ! 
2469= (!2134) | 1203 
2470= (!2136) | 2469 
2471= (!2144) | 2470 
2472= (!2152) | 2471 
2473= (!2161) | 2472 
2474= (!2171) | 2473 
2475= (!2182) | 2474 
2476= (!2194) | 2475 
2477= (!2207) | 2476 
2478= (!2221) | 2477 
2479= (!2236) | 2478 
2480= (!2252) | 2479 
2481= (!2269) | 2480 
2482= (!2287) | 2481 
2483= (!2306) | 2482 
2484= (!2326) | 2483 
2485= (!2347) | 2484 
2486= (!2369) | 2485 
2487= (!2392) | 2486 
2488= (!2416) | 2487 
2489= (!2441) | 2488 
2490= (!2467) | 2489 
2491= (!1269) | 2490 
2492= 2491 ! 
2493= 2466 | (!2491) 
2494= (22) < 3 
2495= 2494 ! 
2496= (!2134) | 1271 
2497= (!2136) | 2496 
2498= (!2144) | 2497 
2499= (!2152) | 2498 
2500= (!2161) | 2499 
2501= (!2171) | 2500 
2502= (!2182) | 2501 
2503= (!2194) | 2502 
2504= (!2207) | 2503 
2505= (!2221) | 2504 
2506= (!2236) | 2505 
2507= (!2252) | 2506 
2508= (!2269) | 2507 
2509= (!2287) | 2508 
2510= (!2306) | 2509 
2511= (!2326) | 2510 
2512= (!2347) | 2511 
2513= (!2369) | 2512 
2514= (!2392) | 2513 
2515= (!2416) | 2514 
2516= (!2441) | 2515 
2517= (!2467) | 2516 
2518= (!2494) | 2517 
2519= (!1338) | 2518 
2520= 2519 ! 
2521= 2493 | (!2519) 
2522= (23) < 3 
2523= 2522 ! 
2524= (!2134) | 1340 
2525= (!2136) | 2524 
2526= (!2144) | 2525 
2527= (!2152) | 2526 
2528= (!2161) | 2527 
2529= (!2171) | 2528 
2530= (!2182) | 2529 
2531= (!2194) | 2530 
2532= (!2207) | 2531 
2533= (!2221) | 2532 
2534= (!2236) | 2533 
2535= (!2252) | 2534 
2536= (!2269) | 2535 
2537= (!2287) | 2536 
2538= (!2306) | 2537 
2539= (!2326) | 2538 
2540= (!2347) | 2539 
2541= (!2369) | 2540 
2542= (!2392) | 2541 
2543= (!2416) | 2542 
2544= (!2441) | 2543 
2545= (!2467) | 2544 
2546= (!2494) | 2545 
2547= (!2522) | 2546 
2548= (!1408) | 2547 
2549= 2548 ! 
2550= 2521 | (!2548) 
2551= (24) < 3 
2552= 2551 ! 
2553= (!2134) | 1410 
2554= (!2136) | 2553 
2555= (!2144) | 2554 
2556= (!2152) | 2555 
2557= (!2161) | 2556 
2558= (!2171) | 2557 
2559= (!2182) | 2558 
2560= (!2194) | 2559 
2561= (!2207) | 2560 
2562= (!2221) | 2561 
2563= (!2236) | 2562 
2564= (!2252) | 2563 
2565= (!2269) | 2564 
2566= (!2287) | 2565 
2567= (!2306) | 2566 
2568= (!2326) | 2567 
2569= (!2347) | 2568 
2570= (!2369) | 2569 
2571= (!2392) | 2570 
2572= (!2416) | 2571 
2573= (!2441) | 2572 
2574= (!2467) | 2573 
2575= (!2494) | 2574 
2576= (!2522) | 2575 
2577= (!2551) | 2576 
2578= (!1479) | 2577 
2579= 2578 ! 
2580= 2550 | (!2578) 
2581= (25) < 3 
2582= 2581 ! 
2583= (!2134) | 1481 
2584= (!2136) | 2583 
2585= (!2144) | 2584 
2586= (!2152) | 2585 
2587= (!2161) | 2586 
2588= (!2171) | 2587 
2589= (!2182) | 2588 
2590= (!2194) | 2589 
2591= (!2207) | 2590 
2592= (!2221) | 2591 
2593= (!2236) | 2592 
2594= (!2252) | 2593 
2595= (!2269) | 2594 
2596= (!2287) | 2595 
2597= (!2306) | 2596 
2598= (!2326) | 2597 
2599= (!2347) | 2598 
2600= (!2369) | 2599 
2601= (!2392) | 2600 
2602= (!2416) | 2601 
2603= (!2441) | 2602 
2604= (!2467) | 2603 
2605= (!2494) | 2604 
2606= (!2522) | 2605 
2607= (!2551) | 2606 
2608= (!2581) | 2607 
2609= (!1551) | 2608 
2610= 2609 ! 
2611= 2580 | (!2609) 
2612= (26) < 3 
2613= 2612 ! 
2614= (!2134) | 1553 
2615= (!2136) | 2614 
2616= (!2144) | 2615 
2617= (!2152) | 2616 
2618= (!2161) | 2617 
2619= (!2171) | 2618 
2620= (!2182) | 2619 
2621= (!2194) | 2620 
2622= (!2207) | 2621 
2623= (!2221) | 2622 
2624= (!2236) | 2623 
2625= (!2252) | 2624 
2626= (!2269) | 2625 
2627= (!2287) | 2626 
2628= (!2306) | 2627 
2629= (!2326) | 2628 
2630= (!2347) | 2629 
2631= (!2369) | 2630 
2632= (!2392) | 2631 
2633= (!2416) | 2632 
2634= (!2441) | 2633 
2635= (!2467) | 2634 
2636= (!2494) | 2635 
2637= (!2522) | 2636 
2638= (!2551) | 2637 
2639= (!2581) | 2638 
2640= (!2612) | 2639 
2641= (!1624) | 2640 
2642= 2641 ! 
2643= 2611 | (!2641) 
2644= (27) < 3 
2645= 2644 ! 
2646= (!2134) | 1626 
2647= (!2136) | 2646 
2648= (!2144) | 2647 
2649= (!2152) | 2648 
2650= (!2161) | 2649 
2651= (!2171) | 2650 
2652= (!2182) | 2651 
2653= (!2194) | 2652 
2654= (!2207) | 2653 
2655= (!2221) | 2654 
2656= (!2236) | 2655 
2657= (!2252) | 2656 
2658= (!2269) | 2657 
2659= (!2287) | 2658 
2660= (!2306) | 2659 
2661= (!2326) | 2660 
2662= (!2347) | 2661 
2663= (!2369) | 2662 
2664= (!2392) | 2663 
2665= (!2416) | 2664 
2666= (!2441) | 2665 
2667= (!2467) | 2666 
2668= (!2494) | 2667 
2669= (!2522) | 2668 
2670= (!2551) | 2669 
2671= (!2581) | 2670 
2672= (!2612) | 2671 
2673= (!2644) | 2672 
2674= (!1698) | 2673 
2675= 2674 ! 
2676= 2643 | (!2674) 
2677= (28) < 3 
2678= 2677 ! 
2679= (!2134) | 1700 
2680= (!2136) | 2679 
2681= (!2144) | 2680 
2682= (!2152) | 2681 
2683= (!2161) | 2682 
2684= (!2171) | 2683 
2685= (!2182) | 2684 
2686= (!2194) | 2685 
2687= (!2207) | 2686 
2688= (!2221) | 2687 
2689= (!2236) | 2688 
2690= (!2252) | 2689 
2691= (!2269) | 2690 
2692= (!2287) | 2691 
2693= (!2306) | 2692 
2694= (!2326) | 2693 
2695= (!2347) | 2694 
2696= (!2369) | 2695 
2697= (!2392) | 2696 
2698= (!2416) | 2697 
2699= (!2441) | 2698 
2700= (!2467) | 2699 
2701= (!2494) | 2700 
2702= (!2522) | 2701 
2703= (!2551) | 2702 
2704= (!2581) | 2703 
2705= (!2612) | 2704 
2706= (!2644) | 2705 
2707= (!2677) | 2706 
2708= (!1773) | 2707 
2709= 2708 ! 
2710= 2676 | (!2708) 
2711= (29) < 3 
2712= 2711 ! 
2713= (!2134) | 1775 
2714= (!2136) | 2713 
2715= (!2144) | 2714 
2716= (!2152) | 2715 
2717= (!2161) | 2716 
2718= (!2171) | 2717 
2719= (!2182) | 2718 
2720= (!2194) | 2719 
2721= (!2207) | 2720 
2722= (!2221) | 2721 
2723= (!2236) | 2722 
2724= (!2252) | 2723 
2725= (!2269) | 2724 
2726= (!2287) | 2725 
2727= (!2306) | 2726 
2728= (!2326) | 2727 
2729= (!2347) | 2728 
2730= (!2369) | 2729 
2731= (!2392) | 2730 
2732= (!2416) | 2731 
2733= (!2441) | 2732 
2734= (!2467) | 2733 
2735= (!2494) | 2734 
2736= (!2522) | 2735 
2737= (!2551) | 2736 
2738= (!2581) | 2737 
2739= (!2612) | 2738 
2740= (!2644) | 2739 
2741= (!2677) | 2740 
2742= (!2711) | 2741 
2743= (!1849) | 2742 
2744= 2743 ! 
2745= 2710 | (!2743) 
2746= (30) < 3 
2747= 2746 ! 
2748= (!2134) | 1851 
2749= (!2136) | 2748 
2750= (!2144) | 2749 
2751= (!2152) | 2750 
2752= (!2161) | 2751 
2753= (!2171) | 2752 
2754= (!2182) | 2753 
2755= (!2194) | 2754 
2756= (!2207) | 2755 
2757= (!2221) | 2756 
2758= (!2236) | 2757 
2759= (!2252) | 2758 
2760= (!2269) | 2759 
2761= (!2287) | 2760 
2762= (!2306) | 2761 
2763= (!2326) | 2762 
2764= (!2347) | 2763 
2765= (!2369) | 2764 
2766= (!2392) | 2765 
2767= (!2416) | 2766 
2768= (!2441) | 2767 
2769= (!2467) | 2768 
2770= (!2494) | 2769 
2771= (!2522) | 2770 
2772= (!2551) | 2771 
2773= (!2581) | 2772 
2774= (!2612) | 2773 
2775= (!2644) | 2774 
2776= (!2677) | 2775 
2777= (!2711) | 2776 
2778= (!2746) | 2777 
2779= (!1926) | 2778 
2780= 2779 ! 
2781= 2745 | (!2779) 
2782= (31) < 3 
2783= 2782 ! 
2784= (!2134) | 1928 
2785= (!2136) | 2784 
2786= (!2144) | 2785 
2787= (!2152) | 2786 
2788= (!2161) | 2787 
2789= (!2171) | 2788 
2790= (!2182) | 2789 
2791= (!2194) | 2790 
2792= (!2207) | 2791 
2793= (!2221) | 2792 
2794= (!2236) | 2793 
2795= (!2252) | 2794 
2796= (!2269) | 2795 
2797= (!2287) | 2796 
2798= (!2306) | 2797 
2799= (!2326) | 2798 
2800= (!2347) | 2799 
2801= (!2369) | 2800 
2802= (!2392) | 2801 
2803= (!2416) | 2802 
2804= (!2441) | 2803 
2805= (!2467) | 2804 
2806= (!2494) | 2805 
2807= (!2522) | 2806 
2808= (!2551) | 2807 
2809= (!2581) | 2808 
2810= (!2612) | 2809 
2811= (!2644) | 2810 
2812= (!2677) | 2811 
2813= (!2711) | 2812 
2814= (!2746) | 2813 
2815= (!2782) | 2814 
2816= (!2129) | 2815 
2817= 2816 ! 
2818= 2781 | (!2816) 
2819= 2133 | 2818 
2820= 1988 & 2819 
2821= 2819 ! 
2822= 1988 | (!2819) 
2823= (!1984) | 2822 
2824= 2823 ! 
2825= (26) < word_3_9_idx_1_0 
2826= 2825 & 2819 
2827= word_3_9_idx_1_0 < (0) 
2828= 2827 ! 
2829= 2825 | (!2819) 
2830= (!2827) | 2829 
2831= 2830 ! 
2832= (26) < word_3_9_idx_2_0 
2833= 2832 & 2819 
2834= word_3_9_idx_2_0 < (0) 
2835= 2834 ! 
2836= 2832 | (!2819) 
2837= (!2834) | 2836 
2838= 2837 ! 
2839= (26) < word_3_9_idx_3_0 
2840= 2839 & 2819 
2841= word_3_9_idx_3_0 < (0) 
2842= 2841 ! 
2843= 2839 | (!2819) 
2844= (!2841) | 2843 
2845= 2844 ! 
2846= (26) < word_3_9_idx_4_0 
2847= 2846 & 2819 
2848= word_3_9_idx_4_0 < (0) 
2849= 2848 ! 
2850= 2846 | (!2819) 
2851= (!2848) | 2850 
2852= 2851 ! 
2853= (26) < word_3_9_idx_5_0 
2854= 2853 & 2819 
2855= word_3_9_idx_5_0 < (0) 
2856= 2855 ! 
2857= 2853 | (!2819) 
2858= (!2855) | 2857 
2859= 2858 ! 
2860= (26) < word_3_9_idx_6_0 
2861= 2860 & 2819 
2862= (!2858) | 2861 
2863= 2854 | 2862 
2864= (!2851) | 2863 
2865= 2847 | 2864 
2866= (!2844) | 2865 
2867= 2840 | 2866 
2868= (!2837) | 2867 
2869= 2833 | 2868 
2870= (!2830) | 2869 
2871= 2826 | 2870 
2872= (!2823) | 2871 
2873= 2820 | 2872 
2874= word_3_9_idx_6_0 < (0) 
2875= 2874 ! 
2876= 2860 | (!2819) 
2877= (!2874) | 2876 
2878= [2873]$2877, (0), $
2879= 2878 & 2133 
2880= 2879 ! 
2881= 1987 | (!2879) 
2882= ASSERT 2881 : miniTestb414.sk:117: Array out of bounds
2883= word_3_9_idx_1_0 < (27) 
2884= (!2827) & 2883 
2885= 2884 | (!2879) 
2886= ASSERT 2885 : miniTestb414.sk:117: Array out of bounds
2887= word_3_9_idx_2_0 < (27) 
2888= (!2834) & 2887 
2889= 2888 | (!2879) 
2890= ASSERT 2889 : miniTestb414.sk:117: Array out of bounds
2891= word_3_9_idx_3_0 < (27) 
2892= (!2841) & 2891 
2893= 2892 | (!2879) 
2894= ASSERT 2893 : miniTestb414.sk:117: Array out of bounds
2895= word_3_9_idx_4_0 < (27) 
2896= (!2848) & 2895 
2897= 2896 | (!2879) 
2898= ASSERT 2897 : miniTestb414.sk:117: Array out of bounds
2899= word_3_9_idx_5_0 < (27) 
2900= (!2855) & 2899 
2901= 2900 | (!2879) 
2902= ASSERT 2901 : miniTestb414.sk:117: Array out of bounds
2903= word_3_9_idx_6_0 < (27) 
2904= (!2874) & 2903 
2905= 2904 | (!2879) 
2906= ASSERT 2905 : miniTestb414.sk:117: Array out of bounds
2907= 3 < (32) 
2908= 2129 | 1927 
2909= 2908 | 54 
2910= 7 | 2909 
2911= 60 | 2910 
2912= 108 | 2911 
2913= 158 | 2912 
2914= 209 | 2913 
2915= 261 | 2914 
2916= 314 | 2915 
2917= 368 | 2916 
2918= 423 | 2917 
2919= 479 | 2918 
2920= 536 | 2919 
2921= 594 | 2920 
2922= 653 | 2921 
2923= 713 | 2922 
2924= 774 | 2923 
2925= 836 | 2924 
2926= 899 | 2925 
2927= 963 | 2926 
2928= 1028 | 2927 
2929= 1094 | 2928 
2930= 1161 | 2929 
2931= 1229 | 2930 
2932= 1298 | 2931 
2933= 1368 | 2932 
2934= 1439 | 2933 
2935= 1511 | 2934 
2936= 1584 | 2935 
2937= 1658 | 2936 
2938= 1733 | 2937 
2939= 1809 | 2938 
2940= 1886 | 2939 
2941= 1964 | 2940 
2942= 2941 ! 
2943= 2907 & (!2941) 
2944= 2943 ! 
2945= ASSERT (!2943) : Assert at miniTestb414.sk:29 (2)
2946= 3 == (32) 
2947= 2946 | 2941 
2948= ASSERT 2947 : miniTestb414.sk:140: This loop was unrolled 32 times, but apparently that was not enough. Use the --bnd-unroll-amnt flag for better results.
2949= 2140 ! 
2950= 27 & (!2140) 
2951= 2950 ! 
2952= ASSERT (!2950) : Assert at miniTestb414.sk:41 (2)
2953= 2148 ! 
2954= 80 & (!2148) 
2955= 2954 ! 
2956= ASSERT (!2954) : Assert at miniTestb414.sk:41 (2)
2957= 2157 ! 
2958= 128 & (!2157) 
2959= 2958 ! 
2960= ASSERT (!2958) : Assert at miniTestb414.sk:41 (2)
2961= 2167 ! 
2962= 178 & (!2167) 
2963= 2962 ! 
2964= ASSERT (!2962) : Assert at miniTestb414.sk:41 (2)
2965= 2178 ! 
2966= 229 & (!2178) 
2967= 2966 ! 
2968= ASSERT (!2966) : Assert at miniTestb414.sk:41 (2)
2969= 2190 ! 
2970= 281 & (!2190) 
2971= 2970 ! 
2972= ASSERT (!2970) : Assert at miniTestb414.sk:41 (2)
2973= 2203 ! 
2974= 334 & (!2203) 
2975= 2974 ! 
2976= ASSERT (!2974) : Assert at miniTestb414.sk:41 (2)
2977= 2217 ! 
2978= 388 & (!2217) 
2979= 2978 ! 
2980= ASSERT (!2978) : Assert at miniTestb414.sk:41 (2)
2981= 2232 ! 
2982= 443 & (!2232) 
2983= 2982 ! 
2984= ASSERT (!2982) : Assert at miniTestb414.sk:41 (2)
2985= 2248 ! 
2986= 499 & (!2248) 
2987= 2986 ! 
2988= ASSERT (!2986) : Assert at miniTestb414.sk:41 (2)
2989= 2265 ! 
2990= 556 & (!2265) 
2991= 2990 ! 
2992= ASSERT (!2990) : Assert at miniTestb414.sk:41 (2)
2993= 2283 ! 
2994= 614 & (!2283) 
2995= 2994 ! 
2996= ASSERT (!2994) : Assert at miniTestb414.sk:41 (2)
2997= 2302 ! 
2998= 673 & (!2302) 
2999= 2998 ! 
3000= ASSERT (!2998) : Assert at miniTestb414.sk:41 (2)
3001= 2322 ! 
3002= 733 & (!2322) 
3003= 3002 ! 
3004= ASSERT (!3002) : Assert at miniTestb414.sk:41 (2)
3005= 2343 ! 
3006= 794 & (!2343) 
3007= 3006 ! 
3008= ASSERT (!3006) : Assert at miniTestb414.sk:41 (2)
3009= 2365 ! 
3010= 856 & (!2365) 
3011= 3010 ! 
3012= ASSERT (!3010) : Assert at miniTestb414.sk:41 (2)
3013= 2388 ! 
3014= 919 & (!2388) 
3015= 3014 ! 
3016= ASSERT (!3014) : Assert at miniTestb414.sk:41 (2)
3017= 2412 ! 
3018= 983 & (!2412) 
3019= 3018 ! 
3020= ASSERT (!3018) : Assert at miniTestb414.sk:41 (2)
3021= 2437 ! 
3022= 1048 & (!2437) 
3023= 3022 ! 
3024= ASSERT (!3022) : Assert at miniTestb414.sk:41 (2)
3025= 2463 ! 
3026= 1114 & (!2463) 
3027= 3026 ! 
3028= ASSERT (!3026) : Assert at miniTestb414.sk:41 (2)
3029= 2490 ! 
3030= 1181 & (!2490) 
3031= 3030 ! 
3032= ASSERT (!3030) : Assert at miniTestb414.sk:41 (2)
3033= 2518 ! 
3034= 1249 & (!2518) 
3035= 3034 ! 
3036= ASSERT (!3034) : Assert at miniTestb414.sk:41 (2)
3037= 2547 ! 
3038= 1318 & (!2547) 
3039= 3038 ! 
3040= ASSERT (!3038) : Assert at miniTestb414.sk:41 (2)
3041= 2577 ! 
3042= 1388 & (!2577) 
3043= 3042 ! 
3044= ASSERT (!3042) : Assert at miniTestb414.sk:41 (2)
3045= 2608 ! 
3046= 1459 & (!2608) 
3047= 3046 ! 
3048= ASSERT (!3046) : Assert at miniTestb414.sk:41 (2)
3049= 2640 ! 
3050= 1531 & (!2640) 
3051= 3050 ! 
3052= ASSERT (!3050) : Assert at miniTestb414.sk:41 (2)
3053= 2673 ! 
3054= 1604 & (!2673) 
3055= 3054 ! 
3056= ASSERT (!3054) : Assert at miniTestb414.sk:41 (2)
3057= 2707 ! 
3058= 1678 & (!2707) 
3059= 3058 ! 
3060= ASSERT (!3058) : Assert at miniTestb414.sk:41 (2)
3061= 2742 ! 
3062= 1753 & (!2742) 
3063= 3062 ! 
3064= ASSERT (!3062) : Assert at miniTestb414.sk:41 (2)
3065= 2778 ! 
3066= 1829 & (!2778) 
3067= 3066 ! 
3068= ASSERT (!3066) : Assert at miniTestb414.sk:41 (2)
3069= 2815 ! 
3070= 1906 & (!2815) 
3071= 3070 ! 
3072= ASSERT (!3070) : Assert at miniTestb414.sk:41 (2)
3073= 2878 & 2818 
3074= 3073 ! 
3075= 1987 | (!3073) 
3076= ASSERT 3075 : miniTestb414.sk:129: Array out of bounds
3077= 2884 | (!3073) 
3078= ASSERT 3077 : miniTestb414.sk:129: Array out of bounds
3079= 2888 | (!3073) 
3080= ASSERT 3079 : miniTestb414.sk:129: Array out of bounds
3081= 2892 | (!3073) 
3082= ASSERT 3081 : miniTestb414.sk:129: Array out of bounds
3083= 2896 | (!3073) 
3084= ASSERT 3083 : miniTestb414.sk:129: Array out of bounds
3085= 2900 | (!3073) 
3086= ASSERT 3085 : miniTestb414.sk:129: Array out of bounds
3087= 2904 | (!3073) 
3088= ASSERT 3087 : miniTestb414.sk:129: Array out of bounds
3089= (32) < 3 
3090= 3089 ! 
3091= (!2134) | 2909 
3092= (!2136) | 3091 
3093= (!2144) | 3092 
3094= (!2152) | 3093 
3095= (!2161) | 3094 
3096= (!2171) | 3095 
3097= (!2182) | 3096 
3098= (!2194) | 3097 
3099= (!2207) | 3098 
3100= (!2221) | 3099 
3101= (!2236) | 3100 
3102= (!2252) | 3101 
3103= (!2269) | 3102 
3104= (!2287) | 3103 
3105= (!2306) | 3104 
3106= (!2326) | 3105 
3107= (!2347) | 3106 
3108= (!2369) | 3107 
3109= (!2392) | 3108 
3110= (!2416) | 3109 
3111= (!2441) | 3110 
3112= (!2467) | 3111 
3113= (!2494) | 3112 
3114= (!2522) | 3113 
3115= (!2551) | 3114 
3116= (!2581) | 3115 
3117= (!2612) | 3116 
3118= (!2644) | 3117 
3119= (!2677) | 3118 
3120= (!2711) | 3119 
3121= (!2746) | 3120 
3122= (!2782) | 3121 
3123= (!3089) | 3122 
3124= ASSERT 3123 : miniTestb414.sk:175: This loop was unrolled 32 times, but apparently that was not enough. Use the --bnd-unroll-amnt flag for better results.
3125= 100 & 2136 
3126= 148 & 2144 
3127= 198 & 2152 
3128= 249 & 2161 
3129= 301 & 2171 
3130= 354 & 2182 
3131= 408 & 2194 
3132= 463 & 2207 
3133= 519 & 2221 
3134= 576 & 2236 
3135= 634 & 2252 
3136= 693 & 2269 
3137= 753 & 2287 
3138= 814 & 2306 
3139= 876 & 2326 
3140= 939 & 2347 
3141= 1003 & 2369 
3142= 1068 & 2392 
3143= 1134 & 2416 
3144= 1201 & 2441 
3145= 1269 & 2467 
3146= 1338 & 2494 
3147= 1408 & 2522 
3148= 1479 & 2551 
3149= 1551 & 2581 
3150= 1624 & 2612 
3151= 1698 & 2644 
3152= 1773 & 2677 
3153= 1849 & 2711 
3154= 1926 & 2746 
3155= 2129 & 2782 
3156= 3154 | 3155 
3157= 3153 | 3156 
3158= 3152 | 3157 
3159= 3151 | 3158 
3160= 3150 | 3159 
3161= 3149 | 3160 
3162= 3148 | 3161 
3163= 3147 | 3162 
3164= 3146 | 3163 
3165= 3145 | 3164 
3166= 3144 | 3165 
3167= 3143 | 3166 
3168= 3142 | 3167 
3169= 3141 | 3168 
3170= 3140 | 3169 
3171= 3139 | 3170 
3172= 3138 | 3171 
3173= 3137 | 3172 
3174= 3136 | 3173 
3175= 3135 | 3174 
3176= 3134 | 3175 
3177= 3133 | 3176 
3178= 3132 | 3177 
3179= 3131 | 3178 
3180= 3130 | 3179 
3181= 3129 | 3180 
3182= 3128 | 3181 
3183= 3127 | 3182 
3184= 3126 | 3183 
3185= 3125 | 3184 
3186= 2135 | 3185 
3187= 3186 & 2878 
3188= [word_3_9_idx_0_0]$(0), (1), (3), (3), (2), (1), (4), (2), (4), (1), (8), (5), (1), (3), (1), (1), (3), (10), (1), (1), (1), (1), (4), (4), (8), (4), (10), $
3189= [word_3_9_idx_1_0]$(0), (1), (3), (3), (2), (1), (4), (2), (4), (1), (8), (5), (1), (3), (1), (1), (3), (10), (1), (1), (1), (1), (4), (4), (8), (4), (10), $
3190= 3188 + 3189 
3191= [word_3_9_idx_2_0]$(0), (1), (3), (3), (2), (1), (4), (2), (4), (1), (8), (5), (1), (3), (1), (1), (3), (10), (1), (1), (1), (1), (4), (4), (8), (4), (10), $
3192= 3190 + 3191 
3193= [word_3_9_idx_3_0]$(0), (1), (3), (3), (2), (1), (4), (2), (4), (1), (8), (5), (1), (3), (1), (1), (3), (10), (1), (1), (1), (1), (4), (4), (8), (4), (10), $
3194= 3192 + 3193 
3195= [word_3_9_idx_4_0]$(0), (1), (3), (3), (2), (1), (4), (2), (4), (1), (8), (5), (1), (3), (1), (1), (3), (10), (1), (1), (1), (1), (4), (4), (8), (4), (10), $
3196= 3194 + 3195 
3197= [word_3_9_idx_5_0]$(0), (1), (3), (3), (2), (1), (4), (2), (4), (1), (8), (5), (1), (3), (1), (1), (3), (10), (1), (1), (1), (1), (4), (4), (8), (4), (10), $
3198= 3196 + 3197 
3199= [word_3_9_idx_6_0]$(0), (1), (3), (3), (2), (1), (4), (2), (4), (1), (8), (5), (1), (3), (1), (1), (3), (10), (1), (1), (1), (1), (4), (4), (8), (4), (10), $
3200= 3198 + 3199 
3201= [3187]$(0), 3200, $
3202= 60 ! 
3203= (!60) & (!7) 
3204= 100 & 3203 
3205= 108 ! 
3206= (!108) & 3203 
3207= 148 & 3206 
3208= 158 ! 
3209= (!158) & 3206 
3210= 198 & 3209 
3211= 209 ! 
3212= (!209) & 3209 
3213= 249 & 3212 
3214= 261 ! 
3215= (!261) & 3212 
3216= 301 & 3215 
3217= 314 ! 
3218= (!314) & 3215 
3219= 354 & 3218 
3220= 368 ! 
3221= (!368) & 3218 
3222= 408 & 3221 
3223= 423 ! 
3224= (!423) & 3221 
3225= 463 & 3224 
3226= 479 ! 
3227= (!479) & 3224 
3228= 519 & 3227 
3229= 536 ! 
3230= (!536) & 3227 
3231= 576 & 3230 
3232= 594 ! 
3233= (!594) & 3230 
3234= 634 & 3233 
3235= 653 ! 
3236= (!653) & 3233 
3237= 693 & 3236 
3238= 713 ! 
3239= (!713) & 3236 
3240= 753 & 3239 
3241= 774 ! 
3242= (!774) & 3239 
3243= 814 & 3242 
3244= 836 ! 
3245= (!836) & 3242 
3246= 876 & 3245 
3247= 899 ! 
3248= (!899) & 3245 
3249= 939 & 3248 
3250= 963 ! 
3251= (!963) & 3248 
3252= 1003 & 3251 
3253= 1028 ! 
3254= (!1028) & 3251 
3255= 1068 & 3254 
3256= 1094 ! 
3257= (!1094) & 3254 
3258= 1134 & 3257 
3259= 1161 ! 
3260= (!1161) & 3257 
3261= 1201 & 3260 
3262= 1229 ! 
3263= (!1229) & 3260 
3264= 1269 & 3263 
3265= 1298 ! 
3266= (!1298) & 3263 
3267= 1338 & 3266 
3268= 1368 ! 
3269= (!1368) & 3266 
3270= 1408 & 3269 
3271= 1439 ! 
3272= (!1439) & 3269 
3273= 1479 & 3272 
3274= 1511 ! 
3275= (!1511) & 3272 
3276= 1551 & 3275 
3277= 1584 ! 
3278= (!1584) & 3275 
3279= 1624 & 3278 
3280= 1658 ! 
3281= (!1658) & 3278 
3282= 1698 & 3281 
3283= 1733 ! 
3284= (!1733) & 3281 
3285= 1773 & 3284 
3286= 1809 ! 
3287= (!1809) & 3284 
3288= 1849 & 3287 
3289= 1886 ! 
3290= (!1886) & 3287 
3291= 1926 & 3290 
3292= 1964 ! 
3293= (!1964) & 3290 
3294= 2129 & 3293 
3295= 3291 | 3294 
3296= 3288 | 3295 
3297= 3285 | 3296 
3298= 3282 | 3297 
3299= 3279 | 3298 
3300= 3276 | 3299 
3301= 3273 | 3300 
3302= 3270 | 3301 
3303= 3267 | 3302 
3304= 3264 | 3303 
3305= 3261 | 3304 
3306= 3258 | 3305 
3307= 3255 | 3306 
3308= 3252 | 3307 
3309= 3249 | 3308 
3310= 3246 | 3309 
3311= 3243 | 3310 
3312= 3240 | 3311 
3313= 3237 | 3312 
3314= 3234 | 3313 
3315= 3231 | 3314 
3316= 3228 | 3315 
3317= 3225 | 3316 
3318= 3222 | 3317 
3319= 3219 | 3318 
3320= 3216 | 3319 
3321= 3213 | 3320 
3322= 3210 | 3321 
3323= 3207 | 3322 
3324= 3204 | 3323 
3325= 1989 | 3324 
3326= 3325 & 2878 
3327= [3326]$(0), 3200, $
3328= 3201 == 3327 
3329= ASSERT 3328 : Assert at miniTestb414.sk:168 (2)
}
  # OF CONTROLS:    0
 control_ints = 0 	 control_bits = 0
inputSize = 464	ctrlSize = 0
Random seeds = 1
BEG CHECK
 * After optims it became = 3290 was 3330
 Removed 0 clauses
DECISIONS START = 0
c# %assign: 13 clauses: 8132 learn: 79 restart: 1 decision: 678 propagated: 5890
 Removed 0 clauses
DECISIONS START = 0
c# %assign: 3 clauses: 16293 learn: 220 restart: 3 decision: 3386 propagated: 20133
 Removed 0 clauses
DECISIONS START = 0
c# %assign: 6 clauses: 34883 learn: 721 restart: 4 decision: 13232 propagated: 85479
 Removed 0 clauses
DECISIONS START = 0
 Removed 8 clauses
c# %assign: 4 clauses: 72457 learn: 1752 restart: 6 decision: 22116 propagated: 273610
END CHECK
********  0	ftime= 0	ctime= 999.243
 *GOT THE CORRECT ANSWER IN 1 iterations.
 *FIND TIME 0 CHECK TIME 999.243 TOTAL TIME 999.243
VALUES 
RESULT = 2  
**ROUND 0 : 0 Round time:  999.267 ms 
RNDDEG = -1
return 0

----- Statistics -----
Total elapsed time (ms):  999.444
Model building time (ms): 0.175
Solution time (ms):       999.267
Max virtual mem (bytes):  0
Max resident mem (bytes): 0
Max private mem (bytes):  0
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 0.452
      model building time (s) ---------> 0.0
      solution time (s) ---------------> 0.999
      max memory usage (MiB) ----------> 0.0
      [SAT-specific solution stats]
      initial number of nodes ---------> 40
      number of nodes after opts ------> 3330
      number of controls --------------> 0
      total number of control bits ----> 0

[SATBackend] Solver exit value: 0
    [0;32m[1655146265.2380 - DEBUG] Running stage 'subst' -- Substitute a solution (assignment to ??'s) into the sketch[0m
    [0;32m[1655146265.2400 - DEBUG] Running stage 'cleanup' -- Clean up sketch after substitutions for readability[0m
    [0;32m[1655146265.2750 - DEBUG] Running stage 'outputc' -- Output C code (to console or file)[0m
    [0;33m[1655146265.2900 - NOTE] Wrote test harness to ./miniTestb414_test.cpp[0m
[SKETCH] DONE
Total time = 1018
