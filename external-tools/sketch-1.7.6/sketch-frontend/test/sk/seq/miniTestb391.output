SKETCH version 1.7.6
Benchmark = miniTestb391.sk
    [0;32m[1655146211.4940 - DEBUG] Running stage 'parse' -- Parse the program from a file[0m
    [0;32m[1655146211.6290 - DEBUG] Running stage 'preproc' -- Preprocessing (used for all further transformations)[0m
miniTestb391.sk:29: Making final N
    [0;32m[1655146211.6760 - DEBUG] Running stage SpmdLowLevelCStage[0m
    [0;32m[1655146211.6800 - DEBUG]    Running visitor FlattenStmtBlocks2[0m
    [0;32m[1655146211.6801 - DEBUG]    Running visitor SplitAssignFromVarDef[0m
    [0;32m[1655146211.6810 - DEBUG]    Running visitor EliminateComplexForLoops[0m
    [0;32m[1655146211.6830 - DEBUG] Running stage 'lowering' -- Lower for SKETCH backend[0m
    [0;32m[1655146211.6910 - DEBUG] Running stage 'sten' -- Stencil transformations[0m
[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 32
[SATBackend] MAX FUNC INLINING  = 5
[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = null
resolved cegis to path /Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis
    [0;32m[1655146211.7530 - DEBUG] executing /Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis -showDAG --bnd-inbits 5 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 5 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -numericalsolvermode ONLY_SMOOTHING -numtries 1 -conflictcutoff 1 -maxrestarts 10 -costoption 1 -o /Users/harshit/.sketch/tmp/miniTestb391.sk/solution0-0 /Users/harshit/.sketch/tmp/miniTestb391.sk/input0.tmp[0m
[SATBackend] Launching: /Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis -showDAG --bnd-inbits 5 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 5 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -numericalsolvermode ONLY_SMOOTHING -numtries 1 -conflictcutoff 1 -maxrestarts 10 -costoption 1 -o /Users/harshit/.sketch/tmp/miniTestb391.sk/solution0-0 /Users/harshit/.sketch/tmp/miniTestb391.sk/input0.tmp 
starting command line: [/Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis, -showDAG, --bnd-inbits, 5, --boundmode, CALLNAME, --verbosity, 5, --print-version, -simiters, 4, -synth, MINI, -verif, MINI, --assumebcheck, --bnd-inline-amnt, 5, -angelictupledepth, 1, -srctupledepth, 2, -sprandbias, 1, -numericalsolvermode, ONLY_SMOOTHING, -numtries, 1, -conflictcutoff, 1, -maxrestarts, 10, -costoption, 1, -o, /Users/harshit/.sketch/tmp/miniTestb391.sk/solution0-0, /Users/harshit/.sketch/tmp/miniTestb391.sk/input0.tmp]
Overriding inputs with 5
boundmode = CALLNAME
 synth = |MINI|
 verif = |MINI|
assuming  bounds checks
Unknown flag -numericalsolvermode
Unknown flag -numtries
Unknown flag -conflictcutoff
Unknown flag -maxrestarts
Unknown flag -costoption
SOLVER RAND SEED = 1655146211
 optimization level = 6
Reading SKETCH Program in File /Users/harshit/.sketch/tmp/miniTestb391.sk/input0.tmp
* before  EVERYTHING: spec::SPEC nodes = 4	 ske::SKETCH nodes = 17
 INBITS = 5
 CBITS  = 5
 input_ints = 1 	 input_bits = 0
 Inlining amount = 5
 Inlining functions in the sketch.
 Inlining functions in the spec.
* Final Problem size: Problem nodes = 1
dagspec{
N_3_7_0
}
  # OF CONTROLS:    0
 control_ints = 0 	 control_bits = 0
inputSize = 2	ctrlSize = 0
Random seeds = 1
BEG CHECK
 * After optims it became = 1 was 1
END CHECK
********  0	ftime= 0	ctime= 0
 *GOT THE CORRECT ANSWER IN 1 iterations.
 *FIND TIME 0 CHECK TIME 0 TOTAL TIME 0
VALUES 
RESULT = 2  
* before  EVERYTHING: main__WrapperNospec::SPEC nodes = 1	 main__Wrapper::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 1 	 input_bits = 0
 Inlining amount = 5
 Inlining functions in the sketch.
 Inlining functions in the spec.
* Final Problem size: Problem nodes = 425
dagmain__WrapperNospec{
N_6_e_0
1= (0)
2= N_6_e_0 < (0) 
3= 2 ! 
4= ASSERT (!2) : Negative array lengths not allowed N_7  miniTestb391.sk:29
5= (32)
6= (32) < N_6_e_0 
7= 6 ! 
8= ASSERT (!6) : miniTestb391.sk:34: This loop was unrolled 32 times, but apparently that was not enough. Use the --bnd-unroll-amnt flag for better results.
9= (0) < N_6_e_0 
10= (-1)
11= (33)
12= [9]$(-1), (33), $
13= 12 == (-1) 
14= 13 & 9 
15= 14 ! 
16= ASSERT (!14) : Assert at miniTestb391.sk:44 (0)
17= (1)
18= [9]$(-1), (1), $
19= 18 == (-1) 
20= 19 & 9 
21= 20 ! 
22= ASSERT (!20) : Assert at miniTestb391.sk:44 (0)
23= (1) < N_6_e_0 
24= (34)
25= [23]$(-1), (34), $
26= 25 == (-1) 
27= 26 & 23 
28= 27 ! 
29= ASSERT (!27) : Assert at miniTestb391.sk:44 (0)
30= (2)
31= [23]$(-1), (2), $
32= 31 == (-1) 
33= 32 & 23 
34= 33 ! 
35= ASSERT (!33) : Assert at miniTestb391.sk:44 (0)
36= (2) < N_6_e_0 
37= (35)
38= [36]$(-1), (35), $
39= 38 == (-1) 
40= 39 & 36 
41= 40 ! 
42= ASSERT (!40) : Assert at miniTestb391.sk:44 (0)
43= (3)
44= [36]$(-1), (3), $
45= 44 == (-1) 
46= 45 & 36 
47= 46 ! 
48= ASSERT (!46) : Assert at miniTestb391.sk:44 (0)
49= (3) < N_6_e_0 
50= (36)
51= [49]$(-1), (36), $
52= 51 == (-1) 
53= 52 & 49 
54= 53 ! 
55= ASSERT (!53) : Assert at miniTestb391.sk:44 (0)
56= (4)
57= [49]$(-1), (4), $
58= 57 == (-1) 
59= 58 & 49 
60= 59 ! 
61= ASSERT (!59) : Assert at miniTestb391.sk:44 (0)
62= (4) < N_6_e_0 
63= (37)
64= [62]$(-1), (37), $
65= 64 == (-1) 
66= 65 & 62 
67= 66 ! 
68= ASSERT (!66) : Assert at miniTestb391.sk:44 (0)
69= (5)
70= [62]$(-1), (5), $
71= 70 == (-1) 
72= 71 & 62 
73= 72 ! 
74= ASSERT (!72) : Assert at miniTestb391.sk:44 (0)
75= (5) < N_6_e_0 
76= (38)
77= [75]$(-1), (38), $
78= 77 == (-1) 
79= 78 & 75 
80= 79 ! 
81= ASSERT (!79) : Assert at miniTestb391.sk:44 (0)
82= (6)
83= [75]$(-1), (6), $
84= 83 == (-1) 
85= 84 & 75 
86= 85 ! 
87= ASSERT (!85) : Assert at miniTestb391.sk:44 (0)
88= (6) < N_6_e_0 
89= (39)
90= [88]$(-1), (39), $
91= 90 == (-1) 
92= 91 & 88 
93= 92 ! 
94= ASSERT (!92) : Assert at miniTestb391.sk:44 (0)
95= (7)
96= [88]$(-1), (7), $
97= 96 == (-1) 
98= 97 & 88 
99= 98 ! 
100= ASSERT (!98) : Assert at miniTestb391.sk:44 (0)
101= (7) < N_6_e_0 
102= (40)
103= [101]$(-1), (40), $
104= 103 == (-1) 
105= 104 & 101 
106= 105 ! 
107= ASSERT (!105) : Assert at miniTestb391.sk:44 (0)
108= (8)
109= [101]$(-1), (8), $
110= 109 == (-1) 
111= 110 & 101 
112= 111 ! 
113= ASSERT (!111) : Assert at miniTestb391.sk:44 (0)
114= (8) < N_6_e_0 
115= (41)
116= [114]$(-1), (41), $
117= 116 == (-1) 
118= 117 & 114 
119= 118 ! 
120= ASSERT (!118) : Assert at miniTestb391.sk:44 (0)
121= (9)
122= [114]$(-1), (9), $
123= 122 == (-1) 
124= 123 & 114 
125= 124 ! 
126= ASSERT (!124) : Assert at miniTestb391.sk:44 (0)
127= (9) < N_6_e_0 
128= (42)
129= [127]$(-1), (42), $
130= 129 == (-1) 
131= 130 & 127 
132= 131 ! 
133= ASSERT (!131) : Assert at miniTestb391.sk:44 (0)
134= (10)
135= [127]$(-1), (10), $
136= 135 == (-1) 
137= 136 & 127 
138= 137 ! 
139= ASSERT (!137) : Assert at miniTestb391.sk:44 (0)
140= (10) < N_6_e_0 
141= (43)
142= [140]$(-1), (43), $
143= 142 == (-1) 
144= 143 & 140 
145= 144 ! 
146= ASSERT (!144) : Assert at miniTestb391.sk:44 (0)
147= (11)
148= [140]$(-1), (11), $
149= 148 == (-1) 
150= 149 & 140 
151= 150 ! 
152= ASSERT (!150) : Assert at miniTestb391.sk:44 (0)
153= (11) < N_6_e_0 
154= (44)
155= [153]$(-1), (44), $
156= 155 == (-1) 
157= 156 & 153 
158= 157 ! 
159= ASSERT (!157) : Assert at miniTestb391.sk:44 (0)
160= (12)
161= [153]$(-1), (12), $
162= 161 == (-1) 
163= 162 & 153 
164= 163 ! 
165= ASSERT (!163) : Assert at miniTestb391.sk:44 (0)
166= (12) < N_6_e_0 
167= (45)
168= [166]$(-1), (45), $
169= 168 == (-1) 
170= 169 & 166 
171= 170 ! 
172= ASSERT (!170) : Assert at miniTestb391.sk:44 (0)
173= (13)
174= [166]$(-1), (13), $
175= 174 == (-1) 
176= 175 & 166 
177= 176 ! 
178= ASSERT (!176) : Assert at miniTestb391.sk:44 (0)
179= (13) < N_6_e_0 
180= (46)
181= [179]$(-1), (46), $
182= 181 == (-1) 
183= 182 & 179 
184= 183 ! 
185= ASSERT (!183) : Assert at miniTestb391.sk:44 (0)
186= (14)
187= [179]$(-1), (14), $
188= 187 == (-1) 
189= 188 & 179 
190= 189 ! 
191= ASSERT (!189) : Assert at miniTestb391.sk:44 (0)
192= (14) < N_6_e_0 
193= (47)
194= [192]$(-1), (47), $
195= 194 == (-1) 
196= 195 & 192 
197= 196 ! 
198= ASSERT (!196) : Assert at miniTestb391.sk:44 (0)
199= (15)
200= [192]$(-1), (15), $
201= 200 == (-1) 
202= 201 & 192 
203= 202 ! 
204= ASSERT (!202) : Assert at miniTestb391.sk:44 (0)
205= (15) < N_6_e_0 
206= (48)
207= [205]$(-1), (48), $
208= 207 == (-1) 
209= 208 & 205 
210= 209 ! 
211= ASSERT (!209) : Assert at miniTestb391.sk:44 (0)
212= (16)
213= [205]$(-1), (16), $
214= 213 == (-1) 
215= 214 & 205 
216= 215 ! 
217= ASSERT (!215) : Assert at miniTestb391.sk:44 (0)
218= (16) < N_6_e_0 
219= (49)
220= [218]$(-1), (49), $
221= 220 == (-1) 
222= 221 & 218 
223= 222 ! 
224= ASSERT (!222) : Assert at miniTestb391.sk:44 (0)
225= (17)
226= [218]$(-1), (17), $
227= 226 == (-1) 
228= 227 & 218 
229= 228 ! 
230= ASSERT (!228) : Assert at miniTestb391.sk:44 (0)
231= (17) < N_6_e_0 
232= (50)
233= [231]$(-1), (50), $
234= 233 == (-1) 
235= 234 & 231 
236= 235 ! 
237= ASSERT (!235) : Assert at miniTestb391.sk:44 (0)
238= (18)
239= [231]$(-1), (18), $
240= 239 == (-1) 
241= 240 & 231 
242= 241 ! 
243= ASSERT (!241) : Assert at miniTestb391.sk:44 (0)
244= (18) < N_6_e_0 
245= (51)
246= [244]$(-1), (51), $
247= 246 == (-1) 
248= 247 & 244 
249= 248 ! 
250= ASSERT (!248) : Assert at miniTestb391.sk:44 (0)
251= (19)
252= [244]$(-1), (19), $
253= 252 == (-1) 
254= 253 & 244 
255= 254 ! 
256= ASSERT (!254) : Assert at miniTestb391.sk:44 (0)
257= (19) < N_6_e_0 
258= (52)
259= [257]$(-1), (52), $
260= 259 == (-1) 
261= 260 & 257 
262= 261 ! 
263= ASSERT (!261) : Assert at miniTestb391.sk:44 (0)
264= (20)
265= [257]$(-1), (20), $
266= 265 == (-1) 
267= 266 & 257 
268= 267 ! 
269= ASSERT (!267) : Assert at miniTestb391.sk:44 (0)
270= (20) < N_6_e_0 
271= (53)
272= [270]$(-1), (53), $
273= 272 == (-1) 
274= 273 & 270 
275= 274 ! 
276= ASSERT (!274) : Assert at miniTestb391.sk:44 (0)
277= (21)
278= [270]$(-1), (21), $
279= 278 == (-1) 
280= 279 & 270 
281= 280 ! 
282= ASSERT (!280) : Assert at miniTestb391.sk:44 (0)
283= (21) < N_6_e_0 
284= (54)
285= [283]$(-1), (54), $
286= 285 == (-1) 
287= 286 & 283 
288= 287 ! 
289= ASSERT (!287) : Assert at miniTestb391.sk:44 (0)
290= (22)
291= [283]$(-1), (22), $
292= 291 == (-1) 
293= 292 & 283 
294= 293 ! 
295= ASSERT (!293) : Assert at miniTestb391.sk:44 (0)
296= (22) < N_6_e_0 
297= (55)
298= [296]$(-1), (55), $
299= 298 == (-1) 
300= 299 & 296 
301= 300 ! 
302= ASSERT (!300) : Assert at miniTestb391.sk:44 (0)
303= (23)
304= [296]$(-1), (23), $
305= 304 == (-1) 
306= 305 & 296 
307= 306 ! 
308= ASSERT (!306) : Assert at miniTestb391.sk:44 (0)
309= (23) < N_6_e_0 
310= (56)
311= [309]$(-1), (56), $
312= 311 == (-1) 
313= 312 & 309 
314= 313 ! 
315= ASSERT (!313) : Assert at miniTestb391.sk:44 (0)
316= (24)
317= [309]$(-1), (24), $
318= 317 == (-1) 
319= 318 & 309 
320= 319 ! 
321= ASSERT (!319) : Assert at miniTestb391.sk:44 (0)
322= (24) < N_6_e_0 
323= (57)
324= [322]$(-1), (57), $
325= 324 == (-1) 
326= 325 & 322 
327= 326 ! 
328= ASSERT (!326) : Assert at miniTestb391.sk:44 (0)
329= (25)
330= [322]$(-1), (25), $
331= 330 == (-1) 
332= 331 & 322 
333= 332 ! 
334= ASSERT (!332) : Assert at miniTestb391.sk:44 (0)
335= (25) < N_6_e_0 
336= (58)
337= [335]$(-1), (58), $
338= 337 == (-1) 
339= 338 & 335 
340= 339 ! 
341= ASSERT (!339) : Assert at miniTestb391.sk:44 (0)
342= (26)
343= [335]$(-1), (26), $
344= 343 == (-1) 
345= 344 & 335 
346= 345 ! 
347= ASSERT (!345) : Assert at miniTestb391.sk:44 (0)
348= (26) < N_6_e_0 
349= (59)
350= [348]$(-1), (59), $
351= 350 == (-1) 
352= 351 & 348 
353= 352 ! 
354= ASSERT (!352) : Assert at miniTestb391.sk:44 (0)
355= (27)
356= [348]$(-1), (27), $
357= 356 == (-1) 
358= 357 & 348 
359= 358 ! 
360= ASSERT (!358) : Assert at miniTestb391.sk:44 (0)
361= (27) < N_6_e_0 
362= (60)
363= [361]$(-1), (60), $
364= 363 == (-1) 
365= 364 & 361 
366= 365 ! 
367= ASSERT (!365) : Assert at miniTestb391.sk:44 (0)
368= (28)
369= [361]$(-1), (28), $
370= 369 == (-1) 
371= 370 & 361 
372= 371 ! 
373= ASSERT (!371) : Assert at miniTestb391.sk:44 (0)
374= (28) < N_6_e_0 
375= (61)
376= [374]$(-1), (61), $
377= 376 == (-1) 
378= 377 & 374 
379= 378 ! 
380= ASSERT (!378) : Assert at miniTestb391.sk:44 (0)
381= (29)
382= [374]$(-1), (29), $
383= 382 == (-1) 
384= 383 & 374 
385= 384 ! 
386= ASSERT (!384) : Assert at miniTestb391.sk:44 (0)
387= (29) < N_6_e_0 
388= (62)
389= [387]$(-1), (62), $
390= 389 == (-1) 
391= 390 & 387 
392= 391 ! 
393= ASSERT (!391) : Assert at miniTestb391.sk:44 (0)
394= (30)
395= [387]$(-1), (30), $
396= 395 == (-1) 
397= 396 & 387 
398= 397 ! 
399= ASSERT (!397) : Assert at miniTestb391.sk:44 (0)
400= (30) < N_6_e_0 
401= (63)
402= [400]$(-1), (63), $
403= 402 == (-1) 
404= 403 & 400 
405= 404 ! 
406= ASSERT (!404) : Assert at miniTestb391.sk:44 (0)
407= (31)
408= [400]$(-1), (31), $
409= 408 == (-1) 
410= 409 & 400 
411= 410 ! 
412= ASSERT (!410) : Assert at miniTestb391.sk:44 (0)
413= (31) < N_6_e_0 
414= (64)
415= [413]$(-1), (64), $
416= 415 == (-1) 
417= 416 & 413 
418= 417 ! 
419= ASSERT (!417) : Assert at miniTestb391.sk:44 (0)
420= [413]$(-1), (32), $
421= 420 == (-1) 
422= 421 & 413 
423= 422 ! 
424= ASSERT (!422) : Assert at miniTestb391.sk:44 (0)
}
  # OF CONTROLS:    0
 control_ints = 0 	 control_bits = 0
inputSize = 7	ctrlSize = 0
Random seeds = 1
BEG CHECK
 * After optims it became = 425 was 425
c# %assign: 12 clauses: 9 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 425 to 413
After all optim
c# %assign: 11 clauses: 17 learn: 0 restart: 0 decision: 0 propagated: 1
 Removed 40 clauses
DECISIONS START = 0
c# %assign: 94 clauses: 0 learn: 0 restart: 1 decision: 2 propagated: 18
c# %assign: 7 clauses: 25 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 425 to 413
After all optim
c# %assign: 5 clauses: 67 learn: 0 restart: 0 decision: 0 propagated: 1
c# %assign: 4 clauses: 65 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 425 to 413
After all optim
c# %assign: 2 clauses: 223 learn: 0 restart: 0 decision: 0 propagated: 1
 Removed 248 clauses
DECISIONS START = 0
c# %assign: 98 clauses: 0 learn: 0 restart: 1 decision: 2 propagated: 68
c# %assign: 2 clauses: 161 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 425 to 413
After all optim
c# %assign: 1 clauses: 743 learn: 0 restart: 0 decision: 0 propagated: 1
 * After optims it became = 1 was 1
END CHECK
********  0	ftime= 0	ctime= 0.004
 *GOT THE CORRECT ANSWER IN 1 iterations.
 *FIND TIME 0 CHECK TIME 0.004 TOTAL TIME 0.004
VALUES 
RESULT = 2  
**ROUND 0 : 0 Round time:  0.008 ms 
RNDDEG = -1
return 0

----- Statistics -----
Total elapsed time (ms):  0.015
Model building time (ms): 0.006
Solution time (ms):       0.008
Max virtual mem (bytes):  0
Max resident mem (bytes): 0
Max private mem (bytes):  0
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 0.028
      model building time (s) ---------> 0.0
      solution time (s) ---------------> 0.0
      max memory usage (MiB) ----------> 0.0
      [SAT-specific solution stats]
      initial number of nodes ---------> 17
      number of nodes after opts ------> 1
      number of controls --------------> 0
      total number of control bits ----> 0

[SATBackend] Solver exit value: 0
    [0;32m[1655146211.7860 - DEBUG] Running stage 'subst' -- Substitute a solution (assignment to ??'s) into the sketch[0m
    [0;32m[1655146211.7890 - DEBUG] Running stage 'cleanup' -- Clean up sketch after substitutions for readability[0m
    [0;32m[1655146211.8080 - DEBUG] Running stage 'outputc' -- Output C code (to console or file)[0m
    [0;33m[1655146211.8200 - NOTE] Wrote test harness to ./miniTestb391_test.cpp[0m
[SKETCH] DONE
Total time = 418
