

int callcount = 0;
void print(int t){
   callcount ++;
}

bit decr(ref int v){
	v = v - 1;
	return v > 0;
}

harness void test(int[2] a, int[2] b, int[2] c, int[2] d) {
    assume a == {1, 1} && b == {2, 2} && c=={1,1} && d=={1,1};

	while (a == {1,1}) {
	a = b;
	}
	
	while (c == d) {
	c = b;
	}
	
	
	int t =5;
	while(t-- > 0){
	   print(t);
	}
	assert t == -1;
	assert callcount == 5;
	
	int v=5;
	while(decr(v)){
	
	}
	assert v == 0;

    assert a == b;
    assert c == b;
}