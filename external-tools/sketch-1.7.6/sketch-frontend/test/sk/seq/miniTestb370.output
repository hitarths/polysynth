SKETCH version 1.7.6
Benchmark = miniTestb370.sk
    [0;32m[1655146133.9120 - DEBUG] Running stage 'parse' -- Parse the program from a file[0m
    [0;32m[1655146134.0420 - DEBUG] Running stage 'preproc' -- Preprocessing (used for all further transformations)[0m
miniTestb370.sk:4: Making final A
miniTestb370.sk:4: Making final B
miniTestb370.sk:4: Making final C
miniTestb370.sk:8: Making final X
miniTestb370.sk:8: Making final Y
    [0;32m[1655146134.0940 - DEBUG] Running stage SpmdLowLevelCStage[0m
    [0;32m[1655146134.0970 - DEBUG]    Running visitor FlattenStmtBlocks2[0m
    [0;32m[1655146134.0980 - DEBUG]    Running visitor SplitAssignFromVarDef[0m
    [0;32m[1655146134.0990 - DEBUG]    Running visitor EliminateComplexForLoops[0m
    [0;32m[1655146134.1000 - DEBUG] Running stage 'lowering' -- Lower for SKETCH backend[0m
    [0;32m[1655146134.1070 - DEBUG] Running stage 'sten' -- Stencil transformations[0m

//// After stage lowering
/* BEGIN PACKAGE ANONYMOUS*/
/*miniTestb370.sk:4*/

void foo (int A_e, int B_f, int C_10, int[(A_e * B_f) * C_10] ar_11, int[2] part_12, int x_13, int y_14)/*miniTestb370.sk:4*/
{
  {
    {
      int X_15;
      bit _pac_s7;
      _pac_s7 = 0;
      assert ((_pac_s7 >= 0) && (_pac_s7 < 2)); //miniTestb370.sk:5: Array out of bounds
      X_15 = part_12[_pac_s7];
      int Y_16;
      bit _pac_s8;
      _pac_s8 = 1;
      assert ((_pac_s8 >= 0) && (_pac_s8 < 2)); //miniTestb370.sk:6: Array out of bounds
      Y_16 = part_12[_pac_s8];
      if((((X_15 > 0) && (Y_16 > 0)) && ((X_15 + x_13) < B_f)) && ((Y_16 + y_14) < C_10))/*miniTestb370.sk:7*/
      {
        assert (Y_16 >= 0); //Negative array lengths not allowed Y_16  miniTestb370.sk:8
        assert (X_15 >= 0); //Negative array lengths not allowed X_15  miniTestb370.sk:8
        assert (A_e >= 0); //Negative array lengths not allowed A_e  miniTestb370.sk:8
        int[(A_e * X_15) * Y_16] test_17;
        int i_18;
        i_18 = 0;
        bit __sa0;
        __sa0 = (i_18 < Y_16) && (i_18 < 8);
        while(__sa0)
        {
          int[A_e * X_15] __sa4;
          if(0 < X_15)/*miniTestb370.sk:10*/
          {
            assert ((0 >= 0) && ((X_15 - 1) < X_15)); //miniTestb370.sk:10: Either null pointer or Array out of bounds
          }
          for(int __sa5 = 0; __sa5 < X_15; __sa5 = __sa5 + 1)/*Canonical*/
          {
            int _pac_s9;
            _pac_s9 = x_13 + __sa5;
            int _pac_s10;
            _pac_s10 = y_14 + i_18;
            assert ((_pac_s10 >= 0) && (_pac_s10 < C_10)); //miniTestb370.sk:10: Array out of bounds
            assert ((_pac_s9 >= 0) && (_pac_s9 < B_f)); //miniTestb370.sk:10: Array out of bounds
            {
              for(int __sa13 = 0; __sa13 < A_e; __sa13 = __sa13 + 1)/*Canonical*/
              {
                __sa4[(A_e * __sa5) + __sa13] = ar_11[(((A_e * B_f) * _pac_s10) + (A_e * _pac_s9)) + __sa13];
              }
            }
          }
          if(0 < X_15)/*miniTestb370.sk:8*/
          {
            assert ((i_18 >= 0) && (i_18 < Y_16)); //miniTestb370.sk:10: Array out of bounds
            assert ((0 >= 0) && ((X_15 - 1) < X_15)); //miniTestb370.sk:10: Array out of bounds
            assert ((0 >= 0) && ((X_15 - 1) < X_15)); //miniTestb370.sk:10: Either null pointer or Array out of bounds
          }
          for(int __sa6 = 0; __sa6 < X_15; __sa6 = __sa6 + 1)/*Canonical*/
          {
            {
              for(int __sa14 = 0; __sa14 < A_e; __sa14 = __sa14 + 1)/*Canonical*/
              {
                test_17[(((A_e * X_15) * i_18) + (A_e * __sa6)) + __sa14] = __sa4[(A_e * __sa6) + __sa14];
              }
            }
          }
          i_18 = i_18 + 1;
          __sa0 = (i_18 < Y_16) && (i_18 < 8);
        }
        int i_19;
        i_19 = 0;
        bit __sa1;
        __sa1 = (i_19 < A_e) && (i_19 < 9);
        while(__sa1)
        {
          int j_22;
          j_22 = 0;
          bit __sa2;
          __sa2 = (j_22 < X_15) && (j_22 < 9);
          while(__sa2)
          {
            int k_25;
            k_25 = 0;
            bit __sa3;
            __sa3 = (k_25 < Y_16) && (k_25 < 9);
            while(__sa3)
            {
              assert ((k_25 >= 0) && (k_25 < Y_16)); //miniTestb370.sk:15: Array out of bounds
              assert ((j_22 >= 0) && (j_22 < X_15)); //miniTestb370.sk:15: Array out of bounds
              assert ((i_19 >= 0) && (i_19 < A_e)); //miniTestb370.sk:15: Array out of bounds
              int _pac_s11;
              _pac_s11 = x_13 + j_22;
              int _pac_s12;
              _pac_s12 = y_14 + k_25;
              assert ((_pac_s12 >= 0) && (_pac_s12 < C_10)); //miniTestb370.sk:15: Array out of bounds
              assert ((_pac_s11 >= 0) && (_pac_s11 < B_f)); //miniTestb370.sk:15: Array out of bounds
              assert ((i_19 >= 0) && (i_19 < A_e)); //miniTestb370.sk:15: Array out of bounds
              assert ((test_17[(((A_e * X_15) * k_25) + (A_e * j_22)) + i_19]) == (ar_11[(((A_e * B_f) * _pac_s12) + (A_e * _pac_s11)) + i_19])); //Assert at miniTestb370.sk:15 (1)
              k_25 = k_25 + 1;
              __sa3 = (k_25 < Y_16) && (k_25 < 9);
            }
            j_22 = j_22 + 1;
            __sa2 = (j_22 < X_15) && (j_22 < 9);
          }
          i_19 = i_19 + 1;
          __sa1 = (i_19 < A_e) && (i_19 < 9);
        }
      }
    }
  }
}
/*miniTestb370.sk:4*/

void foo__Wrapper (int A_7, int B_8, int C_9, int[(A_7 * B_8) * C_9] ar_a, int[2] part_b, int x_c, int y_d)  implements foo__WrapperNospec/*miniTestb370.sk:4*/
{
  {
    {
      foo@ANONYMOUS(A_7, B_8, C_9, ar_a, part_b, x_c, y_d);
    }
  }
}
/*miniTestb370.sk:4*/

void foo__WrapperNospec (int A_7, int B_8, int C_9, int[(A_7 * B_8) * C_9] ar_a, int[2] part_b, int x_c, int y_d)/*miniTestb370.sk:4*/
{
  {
    {
    }
  }
}
/* END PACKAGE ANONYMOUS*/
------------------------------

[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 32
[SATBackend] MAX FUNC INLINING  = 5
[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = null
resolved cegis to path /Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis
    [0;32m[1655146134.6460 - DEBUG] executing /Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis -simiters 20 --bnd-inbits 2 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 5 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -numericalsolvermode ONLY_SMOOTHING -numtries 1 -conflictcutoff 1 -maxrestarts 10 -costoption 1 -o /Users/harshit/.sketch/tmp/miniTestb370.sk/solution0-0 /Users/harshit/.sketch/tmp/miniTestb370.sk/input0.tmp[0m
[SATBackend] Launching: /Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis -simiters 20 --bnd-inbits 2 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 5 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -numericalsolvermode ONLY_SMOOTHING -numtries 1 -conflictcutoff 1 -maxrestarts 10 -costoption 1 -o /Users/harshit/.sketch/tmp/miniTestb370.sk/solution0-0 /Users/harshit/.sketch/tmp/miniTestb370.sk/input0.tmp 
starting command line: [/Users/harshit/Google Drive/Projects/2022/Program Synthesis/sketch-1.7.6/sketch-backend/src/SketchSolver/cegis, -simiters, 20, --bnd-inbits, 2, --boundmode, CALLNAME, --verbosity, 5, --print-version, -simiters, 4, -synth, MINI, -verif, MINI, --assumebcheck, --bnd-inline-amnt, 5, -angelictupledepth, 1, -srctupledepth, 2, -sprandbias, 1, -numericalsolvermode, ONLY_SMOOTHING, -numtries, 1, -conflictcutoff, 1, -maxrestarts, 10, -costoption, 1, -o, /Users/harshit/.sketch/tmp/miniTestb370.sk/solution0-0, /Users/harshit/.sketch/tmp/miniTestb370.sk/input0.tmp]
Overriding inputs with 2
boundmode = CALLNAME
 synth = |MINI|
 verif = |MINI|
assuming  bounds checks
Unknown flag -numericalsolvermode
Unknown flag -numtries
Unknown flag -conflictcutoff
Unknown flag -maxrestarts
Unknown flag -costoption
SOLVER RAND SEED = 1655146134
 optimization level = 6
Reading SKETCH Program in File /Users/harshit/.sketch/tmp/miniTestb370.sk/input0.tmp
* before  EVERYTHING: foo__WrapperNospec::SPEC nodes = 8	 foo__Wrapper::SKETCH nodes = 10
 INBITS = 2
 CBITS  = 5
 input_ints = 8 	 input_bits = 0
 Inlining amount = 5
 Inlining functions in the sketch.
 Inlining functions in the spec.
* Final Problem size: Problem nodes = 92464
  # OF CONTROLS:    0
 control_ints = 0 	 control_bits = 0
inputSize = 78	ctrlSize = 0
Random seeds = 1
BEG CHECK
 * After optims it became = 39500 was 92464
c# %assign: 12 clauses: 9 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 39500 to 37958
c# %assign: 12 clauses: 9 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 37958 to 36416
c# %assign: 12 clauses: 9 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 36416 to 34874
c# %assign: 12 clauses: 9 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 34874 to 33332
After all optim
 Removed 0 clauses
DECISIONS START = 0
 Removed 2 clauses
 Removed 3876735 clauses
c# %assign: 82 clauses: 380745 learn: 74 restart: 3 decision: 2844 propagated: 27842998
END CHECK
********  0	ftime= 0	ctime= 9000.36
 *GOT THE CORRECT ANSWER IN 1 iterations.
 *FIND TIME 0 CHECK TIME 9000.36 TOTAL TIME 9000.36
VALUES 
RESULT = 2  
**ROUND 0 : 0 Round time:  9999.78 ms 
RNDDEG = -1
return 0

----- Statistics -----
Total elapsed time (ms):  10999.8
Model building time (ms): 1000.04
Solution time (ms):       9999.78
Max virtual mem (bytes):  0
Max resident mem (bytes): 0
Max private mem (bytes):  0
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 10.881
      model building time (s) ---------> 1.0
      solution time (s) ---------------> 9.999
      max memory usage (MiB) ----------> 0.0
      [SAT-specific solution stats]
      initial number of nodes ---------> 10
      number of nodes after opts ------> 92464
      number of controls --------------> 0
      total number of control bits ----> 0

[SATBackend] Solver exit value: 0
    [0;32m[1655146145.5330 - DEBUG] Running stage 'subst' -- Substitute a solution (assignment to ??'s) into the sketch[0m
    [0;32m[1655146145.5340 - DEBUG] Running stage 'cleanup' -- Clean up sketch after substitutions for readability[0m
    [0;32m[1655146145.5680 - DEBUG] Running stage 'outputc' -- Output C code (to console or file)[0m
    [0;33m[1655146145.5820 - NOTE] Wrote test harness to ./miniTestb370_test.cpp[0m
[SKETCH] DONE
Total time = 11762
