
include "miniTestb20_segs.skh";



double[N] control([int N], Segment[N] segs, double time){
	double[N] deltas;
	if(time < 25.0 * Dt()){
		deltas[0] = -0.05;
	}
	return deltas;
}


harness void main(){
	int N = 7;
	Segment[N] segs;
	double x = -2.0;
	double y = 0.0;
	
	repeat(i:(N-1)){
		double nx = x + 2.0;
		double ny = 0.0;
		segs[i] = seg(x,y,nx,ny, 0.0);
		x = nx;
		y = ny;
	}
	segs[N-1] = seg(x,y,x,y+2.0, 0.0);
	
	
	Point vm = point(0.0, 0.0);
	double angVel = 0.0;
	
	double time = 0.0;
	for(int t=0; t<300; ++t){
		time = time + Dt();
		double[N] deltas = control(segs, time);
	
		Point oldcm = centerOfMass(segs);
		
		printSegsMore(segs, oldcm);
		
		Segment[N] newsegs = updatePos(segs, deltas);
		
		Point newcm = centerOfMass(newsegs);
		
		double ang = angOffset(oldcm, segs, newcm, newsegs);
		
		segs = rotate@segpkg(newsegs, newcm, ang);
		
		segs = translate(segs, oldcm .- newcm);
		
		segs = forces(segs, oldcm, vm, angVel);
		
	}
}
