(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_6 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_4_143 () Real)
(declare-fun l_0_4_142 () Real)
(declare-fun l_0_4_115 () Real)
(declare-fun l_0_4_114 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_151 () Real)
(declare-fun l_0_4_141 () Real)
(declare-fun l_0_4_123 () Real)
(declare-fun l_0_4_113 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_152 () Real)
(declare-fun l_0_4_124 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_153 () Real)
(declare-fun l_0_4_146 () Real)
(declare-fun l_0_4_145 () Real)
(declare-fun l_0_4_144 () Real)
(declare-fun l_0_4_125 () Real)
(declare-fun l_0_4_118 () Real)
(declare-fun l_0_4_117 () Real)
(declare-fun l_0_4_116 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_154 () Real)
(declare-fun l_0_4_150 () Real)
(declare-fun l_0_4_149 () Real)
(declare-fun l_0_4_148 () Real)
(declare-fun l_0_4_147 () Real)
(declare-fun l_0_4_126 () Real)
(declare-fun l_0_4_122 () Real)
(declare-fun l_0_4_121 () Real)
(declare-fun l_0_4_120 () Real)
(declare-fun l_0_4_119 () Real)
(declare-fun l_0_4_155 () Real)
(declare-fun l_0_4_127 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_160 () Real)
(declare-fun l_0_4_159 () Real)
(declare-fun l_0_4_158 () Real)
(declare-fun l_0_4_157 () Real)
(declare-fun l_0_4_156 () Real)
(declare-fun l_0_4_132 () Real)
(declare-fun l_0_4_131 () Real)
(declare-fun l_0_4_130 () Real)
(declare-fun l_0_4_129 () Real)
(declare-fun l_0_4_128 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_166 () Real)
(declare-fun l_0_4_165 () Real)
(declare-fun l_0_4_164 () Real)
(declare-fun l_0_4_163 () Real)
(declare-fun l_0_4_162 () Real)
(declare-fun l_0_4_138 () Real)
(declare-fun l_0_4_137 () Real)
(declare-fun l_0_4_136 () Real)
(declare-fun l_0_4_135 () Real)
(declare-fun l_0_4_134 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_109 () Real)
(declare-fun l_0_4_108 () Real)
(declare-fun l_0_4_107 () Real)
(declare-fun l_0_4_106 () Real)
(declare-fun l_0_4_161 () Real)
(declare-fun l_0_4_133 () Real)
(declare-fun l_0_4_167 () Real)
(declare-fun l_0_4_139 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_110 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_111 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_112 () Real)
(declare-fun l_0_4_168 () Real)
(declare-fun l_0_4_140 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_208 () Real)
(declare-fun l_0_5_199 () Real)
(declare-fun l_0_5_207 () Real)
(declare-fun l_0_5_198 () Real)
(declare-fun l_0_5_124 () Real)
(declare-fun l_0_5_115 () Real)
(declare-fun l_0_5_123 () Real)
(declare-fun l_0_5_114 () Real)
(declare-fun l_0_5_221 () Real)
(declare-fun l_0_5_206 () Real)
(declare-fun l_0_5_220 () Real)
(declare-fun l_0_5_205 () Real)
(declare-fun l_0_5_219 () Real)
(declare-fun l_0_5_204 () Real)
(declare-fun l_0_5_218 () Real)
(declare-fun l_0_5_203 () Real)
(declare-fun l_0_5_137 () Real)
(declare-fun l_0_5_122 () Real)
(declare-fun l_0_5_136 () Real)
(declare-fun l_0_5_121 () Real)
(declare-fun l_0_5_135 () Real)
(declare-fun l_0_5_120 () Real)
(declare-fun l_0_5_134 () Real)
(declare-fun l_0_5_119 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_5_200 () Real)
(declare-fun l_0_5_197 () Real)
(declare-fun l_0_5_173 () Real)
(declare-fun l_0_5_171 () Real)
(declare-fun l_0_5_172 () Real)
(declare-fun l_0_5_170 () Real)
(declare-fun l_0_5_145 () Real)
(declare-fun l_0_5_143 () Real)
(declare-fun l_0_5_144 () Real)
(declare-fun l_0_5_142 () Real)
(declare-fun l_0_5_116 () Real)
(declare-fun l_0_5_113 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_5_213 () Real)
(declare-fun l_0_5_212 () Real)
(declare-fun l_0_5_129 () Real)
(declare-fun l_0_5_128 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_179 () Real)
(declare-fun l_0_5_169 () Real)
(declare-fun l_0_5_151 () Real)
(declare-fun l_0_5_141 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_180 () Real)
(declare-fun l_0_5_152 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_181 () Real)
(declare-fun l_0_5_174 () Real)
(declare-fun l_0_5_153 () Real)
(declare-fun l_0_5_146 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_182 () Real)
(declare-fun l_0_5_178 () Real)
(declare-fun l_0_5_177 () Real)
(declare-fun l_0_5_176 () Real)
(declare-fun l_0_5_175 () Real)
(declare-fun l_0_5_154 () Real)
(declare-fun l_0_5_150 () Real)
(declare-fun l_0_5_149 () Real)
(declare-fun l_0_5_148 () Real)
(declare-fun l_0_5_147 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_183 () Real)
(declare-fun l_0_5_155 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_188 () Real)
(declare-fun l_0_5_187 () Real)
(declare-fun l_0_5_186 () Real)
(declare-fun l_0_5_185 () Real)
(declare-fun l_0_5_184 () Real)
(declare-fun l_0_5_160 () Real)
(declare-fun l_0_5_159 () Real)
(declare-fun l_0_5_158 () Real)
(declare-fun l_0_5_157 () Real)
(declare-fun l_0_5_156 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_194 () Real)
(declare-fun l_0_5_193 () Real)
(declare-fun l_0_5_192 () Real)
(declare-fun l_0_5_191 () Real)
(declare-fun l_0_5_190 () Real)
(declare-fun l_0_5_166 () Real)
(declare-fun l_0_5_165 () Real)
(declare-fun l_0_5_164 () Real)
(declare-fun l_0_5_163 () Real)
(declare-fun l_0_5_162 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_209 () Real)
(declare-fun l_0_5_202 () Real)
(declare-fun l_0_5_201 () Real)
(declare-fun l_0_5_125 () Real)
(declare-fun l_0_5_118 () Real)
(declare-fun l_0_5_117 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_210 () Real)
(declare-fun l_0_5_126 () Real)
(declare-fun l_0_5_211 () Real)
(declare-fun l_0_5_127 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_216 () Real)
(declare-fun l_0_5_215 () Real)
(declare-fun l_0_5_214 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_132 () Real)
(declare-fun l_0_5_131 () Real)
(declare-fun l_0_5_130 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_222 () Real)
(declare-fun l_0_5_138 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_109 () Real)
(declare-fun l_0_5_108 () Real)
(declare-fun l_0_5_107 () Real)
(declare-fun l_0_5_106 () Real)
(declare-fun l_0_5_189 () Real)
(declare-fun l_0_5_161 () Real)
(declare-fun l_0_5_195 () Real)
(declare-fun l_0_5_167 () Real)
(declare-fun l_0_5_217 () Real)
(declare-fun l_0_5_133 () Real)
(declare-fun l_0_5_223 () Real)
(declare-fun l_0_5_139 () Real)
(declare-fun l_0_5_196 () Real)
(declare-fun l_0_5_168 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_110 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_111 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_112 () Real)
(declare-fun l_0_5_224 () Real)
(declare-fun l_0_5_140 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_249 () Real)
(declare-fun l_0_6_234 () Real)
(declare-fun l_0_6_248 () Real)
(declare-fun l_0_6_233 () Real)
(declare-fun l_0_6_247 () Real)
(declare-fun l_0_6_232 () Real)
(declare-fun l_0_6_246 () Real)
(declare-fun l_0_6_231 () Real)
(declare-fun l_0_6_221 () Real)
(declare-fun l_0_6_206 () Real)
(declare-fun l_0_6_220 () Real)
(declare-fun l_0_6_205 () Real)
(declare-fun l_0_6_219 () Real)
(declare-fun l_0_6_204 () Real)
(declare-fun l_0_6_218 () Real)
(declare-fun l_0_6_203 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_137 () Real)
(declare-fun l_0_6_122 () Real)
(declare-fun l_0_6_136 () Real)
(declare-fun l_0_6_121 () Real)
(declare-fun l_0_6_135 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_134 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_227 () Real)
(declare-fun l_0_6_226 () Real)
(declare-fun l_0_6_199 () Real)
(declare-fun l_0_6_198 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_228 () Real)
(declare-fun l_0_6_225 () Real)
(declare-fun l_0_6_200 () Real)
(declare-fun l_0_6_197 () Real)
(declare-fun l_0_6_173 () Real)
(declare-fun l_0_6_171 () Real)
(declare-fun l_0_6_172 () Real)
(declare-fun l_0_6_170 () Real)
(declare-fun l_0_6_145 () Real)
(declare-fun l_0_6_143 () Real)
(declare-fun l_0_6_144 () Real)
(declare-fun l_0_6_142 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_241 () Real)
(declare-fun l_0_6_240 () Real)
(declare-fun l_0_6_213 () Real)
(declare-fun l_0_6_212 () Real)
(declare-fun l_0_6_129 () Real)
(declare-fun l_0_6_128 () Real)
(declare-fun l_0_6_236 () Real)
(declare-fun l_0_6_235 () Real)
(declare-fun l_0_6_208 () Real)
(declare-fun l_0_6_207 () Real)
(declare-fun l_0_6_124 () Real)
(declare-fun l_0_6_123 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_179 () Real)
(declare-fun l_0_6_169 () Real)
(declare-fun l_0_6_151 () Real)
(declare-fun l_0_6_141 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_180 () Real)
(declare-fun l_0_6_152 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_181 () Real)
(declare-fun l_0_6_174 () Real)
(declare-fun l_0_6_153 () Real)
(declare-fun l_0_6_146 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_182 () Real)
(declare-fun l_0_6_178 () Real)
(declare-fun l_0_6_177 () Real)
(declare-fun l_0_6_176 () Real)
(declare-fun l_0_6_175 () Real)
(declare-fun l_0_6_154 () Real)
(declare-fun l_0_6_150 () Real)
(declare-fun l_0_6_149 () Real)
(declare-fun l_0_6_148 () Real)
(declare-fun l_0_6_147 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_183 () Real)
(declare-fun l_0_6_155 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_188 () Real)
(declare-fun l_0_6_187 () Real)
(declare-fun l_0_6_186 () Real)
(declare-fun l_0_6_185 () Real)
(declare-fun l_0_6_184 () Real)
(declare-fun l_0_6_160 () Real)
(declare-fun l_0_6_159 () Real)
(declare-fun l_0_6_158 () Real)
(declare-fun l_0_6_157 () Real)
(declare-fun l_0_6_156 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_194 () Real)
(declare-fun l_0_6_193 () Real)
(declare-fun l_0_6_192 () Real)
(declare-fun l_0_6_191 () Real)
(declare-fun l_0_6_190 () Real)
(declare-fun l_0_6_166 () Real)
(declare-fun l_0_6_165 () Real)
(declare-fun l_0_6_164 () Real)
(declare-fun l_0_6_163 () Real)
(declare-fun l_0_6_162 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_237 () Real)
(declare-fun l_0_6_230 () Real)
(declare-fun l_0_6_229 () Real)
(declare-fun l_0_6_209 () Real)
(declare-fun l_0_6_202 () Real)
(declare-fun l_0_6_201 () Real)
(declare-fun l_0_6_125 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_238 () Real)
(declare-fun l_0_6_210 () Real)
(declare-fun l_0_6_126 () Real)
(declare-fun l_0_6_239 () Real)
(declare-fun l_0_6_211 () Real)
(declare-fun l_0_6_127 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_244 () Real)
(declare-fun l_0_6_243 () Real)
(declare-fun l_0_6_242 () Real)
(declare-fun l_0_6_216 () Real)
(declare-fun l_0_6_215 () Real)
(declare-fun l_0_6_214 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_132 () Real)
(declare-fun l_0_6_131 () Real)
(declare-fun l_0_6_130 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_250 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_222 () Real)
(declare-fun l_0_6_138 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_189 () Real)
(declare-fun l_0_6_161 () Real)
(declare-fun l_0_6_195 () Real)
(declare-fun l_0_6_167 () Real)
(declare-fun l_0_6_245 () Real)
(declare-fun l_0_6_217 () Real)
(declare-fun l_0_6_133 () Real)
(declare-fun l_0_6_251 () Real)
(declare-fun l_0_6_223 () Real)
(declare-fun l_0_6_139 () Real)
(declare-fun l_0_6_196 () Real)
(declare-fun l_0_6_168 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_6_252 () Real)
(declare-fun l_0_6_224 () Real)
(declare-fun l_0_6_140 () Real)
(declare-fun l_0_7_255 () Real)
(declare-fun l_0_7_254 () Real)
(declare-fun l_0_7_227 () Real)
(declare-fun l_0_7_226 () Real)
(declare-fun l_0_7_199 () Real)
(declare-fun l_0_7_198 () Real)
(declare-fun l_0_7_115 () Real)
(declare-fun l_0_7_114 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_274 () Real)
(declare-fun l_0_7_253 () Real)
(declare-fun l_0_7_246 () Real)
(declare-fun l_0_7_225 () Real)
(declare-fun l_0_7_218 () Real)
(declare-fun l_0_7_197 () Real)
(declare-fun l_0_7_191 () Real)
(declare-fun l_0_7_171 () Real)
(declare-fun l_0_7_190 () Real)
(declare-fun l_0_7_170 () Real)
(declare-fun l_0_7_163 () Real)
(declare-fun l_0_7_143 () Real)
(declare-fun l_0_7_162 () Real)
(declare-fun l_0_7_142 () Real)
(declare-fun l_0_7_134 () Real)
(declare-fun l_0_7_113 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_179 () Real)
(declare-fun l_0_7_169 () Real)
(declare-fun l_0_7_151 () Real)
(declare-fun l_0_7_141 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_263 () Real)
(declare-fun l_0_7_235 () Real)
(declare-fun l_0_7_207 () Real)
(declare-fun l_0_7_180 () Real)
(declare-fun l_0_7_152 () Real)
(declare-fun l_0_7_123 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_181 () Real)
(declare-fun l_0_7_174 () Real)
(declare-fun l_0_7_173 () Real)
(declare-fun l_0_7_172 () Real)
(declare-fun l_0_7_153 () Real)
(declare-fun l_0_7_146 () Real)
(declare-fun l_0_7_145 () Real)
(declare-fun l_0_7_144 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_182 () Real)
(declare-fun l_0_7_178 () Real)
(declare-fun l_0_7_177 () Real)
(declare-fun l_0_7_176 () Real)
(declare-fun l_0_7_175 () Real)
(declare-fun l_0_7_154 () Real)
(declare-fun l_0_7_150 () Real)
(declare-fun l_0_7_149 () Real)
(declare-fun l_0_7_148 () Real)
(declare-fun l_0_7_147 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_183 () Real)
(declare-fun l_0_7_155 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_188 () Real)
(declare-fun l_0_7_187 () Real)
(declare-fun l_0_7_186 () Real)
(declare-fun l_0_7_185 () Real)
(declare-fun l_0_7_184 () Real)
(declare-fun l_0_7_160 () Real)
(declare-fun l_0_7_159 () Real)
(declare-fun l_0_7_158 () Real)
(declare-fun l_0_7_157 () Real)
(declare-fun l_0_7_156 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_194 () Real)
(declare-fun l_0_7_193 () Real)
(declare-fun l_0_7_192 () Real)
(declare-fun l_0_7_166 () Real)
(declare-fun l_0_7_165 () Real)
(declare-fun l_0_7_164 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_264 () Real)
(declare-fun l_0_7_236 () Real)
(declare-fun l_0_7_208 () Real)
(declare-fun l_0_7_124 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_265 () Real)
(declare-fun l_0_7_258 () Real)
(declare-fun l_0_7_257 () Real)
(declare-fun l_0_7_256 () Real)
(declare-fun l_0_7_237 () Real)
(declare-fun l_0_7_230 () Real)
(declare-fun l_0_7_229 () Real)
(declare-fun l_0_7_228 () Real)
(declare-fun l_0_7_209 () Real)
(declare-fun l_0_7_202 () Real)
(declare-fun l_0_7_201 () Real)
(declare-fun l_0_7_200 () Real)
(declare-fun l_0_7_125 () Real)
(declare-fun l_0_7_118 () Real)
(declare-fun l_0_7_117 () Real)
(declare-fun l_0_7_116 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_266 () Real)
(declare-fun l_0_7_262 () Real)
(declare-fun l_0_7_261 () Real)
(declare-fun l_0_7_260 () Real)
(declare-fun l_0_7_259 () Real)
(declare-fun l_0_7_238 () Real)
(declare-fun l_0_7_234 () Real)
(declare-fun l_0_7_233 () Real)
(declare-fun l_0_7_232 () Real)
(declare-fun l_0_7_231 () Real)
(declare-fun l_0_7_210 () Real)
(declare-fun l_0_7_206 () Real)
(declare-fun l_0_7_205 () Real)
(declare-fun l_0_7_204 () Real)
(declare-fun l_0_7_203 () Real)
(declare-fun l_0_7_126 () Real)
(declare-fun l_0_7_122 () Real)
(declare-fun l_0_7_121 () Real)
(declare-fun l_0_7_120 () Real)
(declare-fun l_0_7_119 () Real)
(declare-fun l_0_7_267 () Real)
(declare-fun l_0_7_239 () Real)
(declare-fun l_0_7_211 () Real)
(declare-fun l_0_7_127 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_272 () Real)
(declare-fun l_0_7_271 () Real)
(declare-fun l_0_7_270 () Real)
(declare-fun l_0_7_269 () Real)
(declare-fun l_0_7_268 () Real)
(declare-fun l_0_7_244 () Real)
(declare-fun l_0_7_243 () Real)
(declare-fun l_0_7_242 () Real)
(declare-fun l_0_7_241 () Real)
(declare-fun l_0_7_240 () Real)
(declare-fun l_0_7_216 () Real)
(declare-fun l_0_7_215 () Real)
(declare-fun l_0_7_214 () Real)
(declare-fun l_0_7_213 () Real)
(declare-fun l_0_7_212 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_132 () Real)
(declare-fun l_0_7_131 () Real)
(declare-fun l_0_7_130 () Real)
(declare-fun l_0_7_129 () Real)
(declare-fun l_0_7_128 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_278 () Real)
(declare-fun l_0_7_277 () Real)
(declare-fun l_0_7_276 () Real)
(declare-fun l_0_7_275 () Real)
(declare-fun l_0_7_250 () Real)
(declare-fun l_0_7_249 () Real)
(declare-fun l_0_7_248 () Real)
(declare-fun l_0_7_247 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_222 () Real)
(declare-fun l_0_7_221 () Real)
(declare-fun l_0_7_220 () Real)
(declare-fun l_0_7_219 () Real)
(declare-fun l_0_7_138 () Real)
(declare-fun l_0_7_137 () Real)
(declare-fun l_0_7_136 () Real)
(declare-fun l_0_7_135 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun l_0_7_189 () Real)
(declare-fun l_0_7_161 () Real)
(declare-fun l_0_7_195 () Real)
(declare-fun l_0_7_167 () Real)
(declare-fun l_0_7_273 () Real)
(declare-fun l_0_7_245 () Real)
(declare-fun l_0_7_217 () Real)
(declare-fun l_0_7_133 () Real)
(declare-fun l_0_7_279 () Real)
(declare-fun l_0_7_251 () Real)
(declare-fun l_0_7_223 () Real)
(declare-fun l_0_7_139 () Real)
(declare-fun l_0_7_196 () Real)
(declare-fun l_0_7_168 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_7_280 () Real)
(declare-fun l_0_7_252 () Real)
(declare-fun l_0_7_224 () Real)
(declare-fun l_0_7_140 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_302 () Real)
(declare-fun l_0_8_281 () Real)
(declare-fun l_0_8_274 () Real)
(declare-fun l_0_8_253 () Real)
(declare-fun l_0_8_246 () Real)
(declare-fun l_0_8_225 () Real)
(declare-fun l_0_8_218 () Real)
(declare-fun l_0_8_197 () Real)
(declare-fun l_0_8_191 () Real)
(declare-fun l_0_8_171 () Real)
(declare-fun l_0_8_190 () Real)
(declare-fun l_0_8_170 () Real)
(declare-fun l_0_8_163 () Real)
(declare-fun l_0_8_143 () Real)
(declare-fun l_0_8_162 () Real)
(declare-fun l_0_8_142 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_282 () Real)
(declare-fun l_0_8_254 () Real)
(declare-fun l_0_8_226 () Real)
(declare-fun l_0_8_198 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_283 () Real)
(declare-fun l_0_8_255 () Real)
(declare-fun l_0_8_227 () Real)
(declare-fun l_0_8_199 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_179 () Real)
(declare-fun l_0_8_169 () Real)
(declare-fun l_0_8_151 () Real)
(declare-fun l_0_8_141 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_291 () Real)
(declare-fun l_0_8_263 () Real)
(declare-fun l_0_8_235 () Real)
(declare-fun l_0_8_207 () Real)
(declare-fun l_0_8_180 () Real)
(declare-fun l_0_8_152 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_181 () Real)
(declare-fun l_0_8_174 () Real)
(declare-fun l_0_8_173 () Real)
(declare-fun l_0_8_172 () Real)
(declare-fun l_0_8_153 () Real)
(declare-fun l_0_8_146 () Real)
(declare-fun l_0_8_145 () Real)
(declare-fun l_0_8_144 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_182 () Real)
(declare-fun l_0_8_178 () Real)
(declare-fun l_0_8_177 () Real)
(declare-fun l_0_8_176 () Real)
(declare-fun l_0_8_175 () Real)
(declare-fun l_0_8_154 () Real)
(declare-fun l_0_8_150 () Real)
(declare-fun l_0_8_149 () Real)
(declare-fun l_0_8_148 () Real)
(declare-fun l_0_8_147 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_183 () Real)
(declare-fun l_0_8_155 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_188 () Real)
(declare-fun l_0_8_187 () Real)
(declare-fun l_0_8_186 () Real)
(declare-fun l_0_8_185 () Real)
(declare-fun l_0_8_184 () Real)
(declare-fun l_0_8_160 () Real)
(declare-fun l_0_8_159 () Real)
(declare-fun l_0_8_158 () Real)
(declare-fun l_0_8_157 () Real)
(declare-fun l_0_8_156 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_194 () Real)
(declare-fun l_0_8_193 () Real)
(declare-fun l_0_8_192 () Real)
(declare-fun l_0_8_166 () Real)
(declare-fun l_0_8_165 () Real)
(declare-fun l_0_8_164 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_292 () Real)
(declare-fun l_0_8_264 () Real)
(declare-fun l_0_8_236 () Real)
(declare-fun l_0_8_208 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_293 () Real)
(declare-fun l_0_8_286 () Real)
(declare-fun l_0_8_285 () Real)
(declare-fun l_0_8_284 () Real)
(declare-fun l_0_8_265 () Real)
(declare-fun l_0_8_258 () Real)
(declare-fun l_0_8_257 () Real)
(declare-fun l_0_8_256 () Real)
(declare-fun l_0_8_237 () Real)
(declare-fun l_0_8_230 () Real)
(declare-fun l_0_8_229 () Real)
(declare-fun l_0_8_228 () Real)
(declare-fun l_0_8_209 () Real)
(declare-fun l_0_8_202 () Real)
(declare-fun l_0_8_201 () Real)
(declare-fun l_0_8_200 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_294 () Real)
(declare-fun l_0_8_290 () Real)
(declare-fun l_0_8_289 () Real)
(declare-fun l_0_8_288 () Real)
(declare-fun l_0_8_287 () Real)
(declare-fun l_0_8_266 () Real)
(declare-fun l_0_8_262 () Real)
(declare-fun l_0_8_261 () Real)
(declare-fun l_0_8_260 () Real)
(declare-fun l_0_8_259 () Real)
(declare-fun l_0_8_238 () Real)
(declare-fun l_0_8_234 () Real)
(declare-fun l_0_8_233 () Real)
(declare-fun l_0_8_232 () Real)
(declare-fun l_0_8_231 () Real)
(declare-fun l_0_8_210 () Real)
(declare-fun l_0_8_206 () Real)
(declare-fun l_0_8_205 () Real)
(declare-fun l_0_8_204 () Real)
(declare-fun l_0_8_203 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_295 () Real)
(declare-fun l_0_8_267 () Real)
(declare-fun l_0_8_239 () Real)
(declare-fun l_0_8_211 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_300 () Real)
(declare-fun l_0_8_299 () Real)
(declare-fun l_0_8_298 () Real)
(declare-fun l_0_8_297 () Real)
(declare-fun l_0_8_296 () Real)
(declare-fun l_0_8_272 () Real)
(declare-fun l_0_8_271 () Real)
(declare-fun l_0_8_270 () Real)
(declare-fun l_0_8_269 () Real)
(declare-fun l_0_8_268 () Real)
(declare-fun l_0_8_244 () Real)
(declare-fun l_0_8_243 () Real)
(declare-fun l_0_8_242 () Real)
(declare-fun l_0_8_241 () Real)
(declare-fun l_0_8_240 () Real)
(declare-fun l_0_8_216 () Real)
(declare-fun l_0_8_215 () Real)
(declare-fun l_0_8_214 () Real)
(declare-fun l_0_8_213 () Real)
(declare-fun l_0_8_212 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_306 () Real)
(declare-fun l_0_8_305 () Real)
(declare-fun l_0_8_304 () Real)
(declare-fun l_0_8_303 () Real)
(declare-fun l_0_8_278 () Real)
(declare-fun l_0_8_277 () Real)
(declare-fun l_0_8_276 () Real)
(declare-fun l_0_8_275 () Real)
(declare-fun l_0_8_250 () Real)
(declare-fun l_0_8_249 () Real)
(declare-fun l_0_8_248 () Real)
(declare-fun l_0_8_247 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_222 () Real)
(declare-fun l_0_8_221 () Real)
(declare-fun l_0_8_220 () Real)
(declare-fun l_0_8_219 () Real)
(declare-fun l_0_8_138 () Real)
(declare-fun l_0_8_137 () Real)
(declare-fun l_0_8_136 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_189 () Real)
(declare-fun l_0_8_161 () Real)
(declare-fun l_0_8_195 () Real)
(declare-fun l_0_8_167 () Real)
(declare-fun l_0_8_301 () Real)
(declare-fun l_0_8_273 () Real)
(declare-fun l_0_8_245 () Real)
(declare-fun l_0_8_217 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_307 () Real)
(declare-fun l_0_8_279 () Real)
(declare-fun l_0_8_251 () Real)
(declare-fun l_0_8_223 () Real)
(declare-fun l_0_8_139 () Real)
(declare-fun l_0_8_196 () Real)
(declare-fun l_0_8_168 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_308 () Real)
(declare-fun l_0_8_280 () Real)
(declare-fun l_0_8_252 () Real)
(declare-fun l_0_8_224 () Real)
(declare-fun l_0_8_140 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_208 () Real)
(declare-fun l_0_9_199 () Real)
(declare-fun l_0_9_207 () Real)
(declare-fun l_0_9_198 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_221 () Real)
(declare-fun l_0_9_206 () Real)
(declare-fun l_0_9_220 () Real)
(declare-fun l_0_9_205 () Real)
(declare-fun l_0_9_219 () Real)
(declare-fun l_0_9_204 () Real)
(declare-fun l_0_9_218 () Real)
(declare-fun l_0_9_203 () Real)
(declare-fun l_0_9_176 () Real)
(declare-fun l_0_9_171 () Real)
(declare-fun l_0_9_175 () Real)
(declare-fun l_0_9_170 () Real)
(declare-fun l_0_9_148 () Real)
(declare-fun l_0_9_143 () Real)
(declare-fun l_0_9_147 () Real)
(declare-fun l_0_9_142 () Real)
(declare-fun l_0_9_137 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_136 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_200 () Real)
(declare-fun l_0_9_197 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_201 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_213 () Real)
(declare-fun l_0_9_212 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_179 () Real)
(declare-fun l_0_9_169 () Real)
(declare-fun l_0_9_151 () Real)
(declare-fun l_0_9_141 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_209 () Real)
(declare-fun l_0_9_202 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_210 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_211 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_216 () Real)
(declare-fun l_0_9_215 () Real)
(declare-fun l_0_9_214 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_222 () Real)
(declare-fun l_0_9_180 () Real)
(declare-fun l_0_9_152 () Real)
(declare-fun l_0_9_138 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_181 () Real)
(declare-fun l_0_9_174 () Real)
(declare-fun l_0_9_173 () Real)
(declare-fun l_0_9_172 () Real)
(declare-fun l_0_9_153 () Real)
(declare-fun l_0_9_146 () Real)
(declare-fun l_0_9_145 () Real)
(declare-fun l_0_9_144 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_182 () Real)
(declare-fun l_0_9_178 () Real)
(declare-fun l_0_9_177 () Real)
(declare-fun l_0_9_154 () Real)
(declare-fun l_0_9_150 () Real)
(declare-fun l_0_9_149 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_183 () Real)
(declare-fun l_0_9_155 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_188 () Real)
(declare-fun l_0_9_187 () Real)
(declare-fun l_0_9_186 () Real)
(declare-fun l_0_9_185 () Real)
(declare-fun l_0_9_184 () Real)
(declare-fun l_0_9_160 () Real)
(declare-fun l_0_9_159 () Real)
(declare-fun l_0_9_158 () Real)
(declare-fun l_0_9_157 () Real)
(declare-fun l_0_9_156 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_194 () Real)
(declare-fun l_0_9_193 () Real)
(declare-fun l_0_9_192 () Real)
(declare-fun l_0_9_191 () Real)
(declare-fun l_0_9_190 () Real)
(declare-fun l_0_9_166 () Real)
(declare-fun l_0_9_165 () Real)
(declare-fun l_0_9_164 () Real)
(declare-fun l_0_9_163 () Real)
(declare-fun l_0_9_162 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_217 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_223 () Real)
(declare-fun l_0_9_139 () Real)
(declare-fun l_0_9_189 () Real)
(declare-fun l_0_9_161 () Real)
(declare-fun l_0_9_195 () Real)
(declare-fun l_0_9_167 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_224 () Real)
(declare-fun l_0_9_140 () Real)
(declare-fun l_0_9_196 () Real)
(declare-fun l_0_9_168 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_249 () Real)
(declare-fun l_0_10_234 () Real)
(declare-fun l_0_10_248 () Real)
(declare-fun l_0_10_233 () Real)
(declare-fun l_0_10_247 () Real)
(declare-fun l_0_10_232 () Real)
(declare-fun l_0_10_246 () Real)
(declare-fun l_0_10_231 () Real)
(declare-fun l_0_10_221 () Real)
(declare-fun l_0_10_206 () Real)
(declare-fun l_0_10_220 () Real)
(declare-fun l_0_10_205 () Real)
(declare-fun l_0_10_219 () Real)
(declare-fun l_0_10_204 () Real)
(declare-fun l_0_10_218 () Real)
(declare-fun l_0_10_203 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_176 () Real)
(declare-fun l_0_10_171 () Real)
(declare-fun l_0_10_175 () Real)
(declare-fun l_0_10_170 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_228 () Real)
(declare-fun l_0_10_225 () Real)
(declare-fun l_0_10_200 () Real)
(declare-fun l_0_10_197 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_229 () Real)
(declare-fun l_0_10_227 () Real)
(declare-fun l_0_10_226 () Real)
(declare-fun l_0_10_201 () Real)
(declare-fun l_0_10_199 () Real)
(declare-fun l_0_10_198 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_241 () Real)
(declare-fun l_0_10_240 () Real)
(declare-fun l_0_10_213 () Real)
(declare-fun l_0_10_212 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_236 () Real)
(declare-fun l_0_10_235 () Real)
(declare-fun l_0_10_208 () Real)
(declare-fun l_0_10_207 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_179 () Real)
(declare-fun l_0_10_169 () Real)
(declare-fun l_0_10_151 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_237 () Real)
(declare-fun l_0_10_230 () Real)
(declare-fun l_0_10_209 () Real)
(declare-fun l_0_10_202 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_238 () Real)
(declare-fun l_0_10_210 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_239 () Real)
(declare-fun l_0_10_211 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_244 () Real)
(declare-fun l_0_10_243 () Real)
(declare-fun l_0_10_242 () Real)
(declare-fun l_0_10_216 () Real)
(declare-fun l_0_10_215 () Real)
(declare-fun l_0_10_214 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_250 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_222 () Real)
(declare-fun l_0_10_180 () Real)
(declare-fun l_0_10_152 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_181 () Real)
(declare-fun l_0_10_174 () Real)
(declare-fun l_0_10_173 () Real)
(declare-fun l_0_10_172 () Real)
(declare-fun l_0_10_153 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_182 () Real)
(declare-fun l_0_10_178 () Real)
(declare-fun l_0_10_177 () Real)
(declare-fun l_0_10_154 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_183 () Real)
(declare-fun l_0_10_155 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_188 () Real)
(declare-fun l_0_10_187 () Real)
(declare-fun l_0_10_186 () Real)
(declare-fun l_0_10_185 () Real)
(declare-fun l_0_10_184 () Real)
(declare-fun l_0_10_160 () Real)
(declare-fun l_0_10_159 () Real)
(declare-fun l_0_10_158 () Real)
(declare-fun l_0_10_157 () Real)
(declare-fun l_0_10_156 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_194 () Real)
(declare-fun l_0_10_193 () Real)
(declare-fun l_0_10_192 () Real)
(declare-fun l_0_10_191 () Real)
(declare-fun l_0_10_190 () Real)
(declare-fun l_0_10_166 () Real)
(declare-fun l_0_10_165 () Real)
(declare-fun l_0_10_164 () Real)
(declare-fun l_0_10_163 () Real)
(declare-fun l_0_10_162 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_245 () Real)
(declare-fun l_0_10_217 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_251 () Real)
(declare-fun l_0_10_223 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_189 () Real)
(declare-fun l_0_10_161 () Real)
(declare-fun l_0_10_195 () Real)
(declare-fun l_0_10_167 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_252 () Real)
(declare-fun l_0_10_224 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_196 () Real)
(declare-fun l_0_10_168 () Real)
(declare-fun l_0_11_255 () Real)
(declare-fun l_0_11_254 () Real)
(declare-fun l_0_11_227 () Real)
(declare-fun l_0_11_226 () Real)
(declare-fun l_0_11_199 () Real)
(declare-fun l_0_11_198 () Real)
(declare-fun l_0_11_115 () Real)
(declare-fun l_0_11_114 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_274 () Real)
(declare-fun l_0_11_253 () Real)
(declare-fun l_0_11_246 () Real)
(declare-fun l_0_11_225 () Real)
(declare-fun l_0_11_218 () Real)
(declare-fun l_0_11_197 () Real)
(declare-fun l_0_11_170 () Real)
(declare-fun l_0_11_169 () Real)
(declare-fun l_0_11_142 () Real)
(declare-fun l_0_11_141 () Real)
(declare-fun l_0_11_134 () Real)
(declare-fun l_0_11_113 () Real)
(declare-fun l_0_11_275 () Real)
(declare-fun l_0_11_247 () Real)
(declare-fun l_0_11_219 () Real)
(declare-fun l_0_11_171 () Real)
(declare-fun l_0_11_143 () Real)
(declare-fun l_0_11_135 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_263 () Real)
(declare-fun l_0_11_235 () Real)
(declare-fun l_0_11_207 () Real)
(declare-fun l_0_11_123 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_179 () Real)
(declare-fun l_0_11_151 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_264 () Real)
(declare-fun l_0_11_236 () Real)
(declare-fun l_0_11_208 () Real)
(declare-fun l_0_11_124 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_265 () Real)
(declare-fun l_0_11_258 () Real)
(declare-fun l_0_11_257 () Real)
(declare-fun l_0_11_256 () Real)
(declare-fun l_0_11_237 () Real)
(declare-fun l_0_11_230 () Real)
(declare-fun l_0_11_229 () Real)
(declare-fun l_0_11_228 () Real)
(declare-fun l_0_11_209 () Real)
(declare-fun l_0_11_202 () Real)
(declare-fun l_0_11_201 () Real)
(declare-fun l_0_11_200 () Real)
(declare-fun l_0_11_125 () Real)
(declare-fun l_0_11_118 () Real)
(declare-fun l_0_11_117 () Real)
(declare-fun l_0_11_116 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_266 () Real)
(declare-fun l_0_11_262 () Real)
(declare-fun l_0_11_261 () Real)
(declare-fun l_0_11_260 () Real)
(declare-fun l_0_11_259 () Real)
(declare-fun l_0_11_238 () Real)
(declare-fun l_0_11_234 () Real)
(declare-fun l_0_11_233 () Real)
(declare-fun l_0_11_232 () Real)
(declare-fun l_0_11_231 () Real)
(declare-fun l_0_11_210 () Real)
(declare-fun l_0_11_206 () Real)
(declare-fun l_0_11_205 () Real)
(declare-fun l_0_11_204 () Real)
(declare-fun l_0_11_203 () Real)
(declare-fun l_0_11_126 () Real)
(declare-fun l_0_11_122 () Real)
(declare-fun l_0_11_121 () Real)
(declare-fun l_0_11_120 () Real)
(declare-fun l_0_11_119 () Real)
(declare-fun l_0_11_267 () Real)
(declare-fun l_0_11_239 () Real)
(declare-fun l_0_11_211 () Real)
(declare-fun l_0_11_127 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_272 () Real)
(declare-fun l_0_11_271 () Real)
(declare-fun l_0_11_270 () Real)
(declare-fun l_0_11_269 () Real)
(declare-fun l_0_11_268 () Real)
(declare-fun l_0_11_244 () Real)
(declare-fun l_0_11_243 () Real)
(declare-fun l_0_11_242 () Real)
(declare-fun l_0_11_241 () Real)
(declare-fun l_0_11_240 () Real)
(declare-fun l_0_11_216 () Real)
(declare-fun l_0_11_215 () Real)
(declare-fun l_0_11_214 () Real)
(declare-fun l_0_11_213 () Real)
(declare-fun l_0_11_212 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_132 () Real)
(declare-fun l_0_11_131 () Real)
(declare-fun l_0_11_130 () Real)
(declare-fun l_0_11_129 () Real)
(declare-fun l_0_11_128 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_278 () Real)
(declare-fun l_0_11_277 () Real)
(declare-fun l_0_11_276 () Real)
(declare-fun l_0_11_250 () Real)
(declare-fun l_0_11_249 () Real)
(declare-fun l_0_11_248 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_222 () Real)
(declare-fun l_0_11_221 () Real)
(declare-fun l_0_11_220 () Real)
(declare-fun l_0_11_180 () Real)
(declare-fun l_0_11_152 () Real)
(declare-fun l_0_11_138 () Real)
(declare-fun l_0_11_137 () Real)
(declare-fun l_0_11_136 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_181 () Real)
(declare-fun l_0_11_174 () Real)
(declare-fun l_0_11_173 () Real)
(declare-fun l_0_11_172 () Real)
(declare-fun l_0_11_153 () Real)
(declare-fun l_0_11_146 () Real)
(declare-fun l_0_11_145 () Real)
(declare-fun l_0_11_144 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_182 () Real)
(declare-fun l_0_11_178 () Real)
(declare-fun l_0_11_177 () Real)
(declare-fun l_0_11_176 () Real)
(declare-fun l_0_11_175 () Real)
(declare-fun l_0_11_154 () Real)
(declare-fun l_0_11_150 () Real)
(declare-fun l_0_11_149 () Real)
(declare-fun l_0_11_148 () Real)
(declare-fun l_0_11_147 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_183 () Real)
(declare-fun l_0_11_155 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_188 () Real)
(declare-fun l_0_11_187 () Real)
(declare-fun l_0_11_186 () Real)
(declare-fun l_0_11_185 () Real)
(declare-fun l_0_11_184 () Real)
(declare-fun l_0_11_160 () Real)
(declare-fun l_0_11_159 () Real)
(declare-fun l_0_11_158 () Real)
(declare-fun l_0_11_157 () Real)
(declare-fun l_0_11_156 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_194 () Real)
(declare-fun l_0_11_193 () Real)
(declare-fun l_0_11_192 () Real)
(declare-fun l_0_11_191 () Real)
(declare-fun l_0_11_190 () Real)
(declare-fun l_0_11_166 () Real)
(declare-fun l_0_11_165 () Real)
(declare-fun l_0_11_164 () Real)
(declare-fun l_0_11_163 () Real)
(declare-fun l_0_11_162 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_109 () Real)
(declare-fun l_0_11_108 () Real)
(declare-fun l_0_11_107 () Real)
(declare-fun l_0_11_106 () Real)
(declare-fun l_0_11_273 () Real)
(declare-fun l_0_11_245 () Real)
(declare-fun l_0_11_217 () Real)
(declare-fun l_0_11_133 () Real)
(declare-fun l_0_11_279 () Real)
(declare-fun l_0_11_251 () Real)
(declare-fun l_0_11_223 () Real)
(declare-fun l_0_11_139 () Real)
(declare-fun l_0_11_189 () Real)
(declare-fun l_0_11_161 () Real)
(declare-fun l_0_11_195 () Real)
(declare-fun l_0_11_167 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_110 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_111 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_112 () Real)
(declare-fun l_0_11_280 () Real)
(declare-fun l_0_11_252 () Real)
(declare-fun l_0_11_224 () Real)
(declare-fun l_0_11_140 () Real)
(declare-fun l_0_11_196 () Real)
(declare-fun l_0_11_168 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_302 () Real)
(declare-fun l_0_12_281 () Real)
(declare-fun l_0_12_274 () Real)
(declare-fun l_0_12_253 () Real)
(declare-fun l_0_12_246 () Real)
(declare-fun l_0_12_225 () Real)
(declare-fun l_0_12_218 () Real)
(declare-fun l_0_12_197 () Real)
(declare-fun l_0_12_170 () Real)
(declare-fun l_0_12_169 () Real)
(declare-fun l_0_12_142 () Real)
(declare-fun l_0_12_141 () Real)
(declare-fun l_0_12_134 () Real)
(declare-fun l_0_12_113 () Real)
(declare-fun l_0_12_303 () Real)
(declare-fun l_0_12_283 () Real)
(declare-fun l_0_12_282 () Real)
(declare-fun l_0_12_275 () Real)
(declare-fun l_0_12_255 () Real)
(declare-fun l_0_12_254 () Real)
(declare-fun l_0_12_247 () Real)
(declare-fun l_0_12_227 () Real)
(declare-fun l_0_12_226 () Real)
(declare-fun l_0_12_219 () Real)
(declare-fun l_0_12_199 () Real)
(declare-fun l_0_12_198 () Real)
(declare-fun l_0_12_171 () Real)
(declare-fun l_0_12_143 () Real)
(declare-fun l_0_12_135 () Real)
(declare-fun l_0_12_115 () Real)
(declare-fun l_0_12_114 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_291 () Real)
(declare-fun l_0_12_263 () Real)
(declare-fun l_0_12_235 () Real)
(declare-fun l_0_12_207 () Real)
(declare-fun l_0_12_123 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_179 () Real)
(declare-fun l_0_12_151 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_292 () Real)
(declare-fun l_0_12_264 () Real)
(declare-fun l_0_12_236 () Real)
(declare-fun l_0_12_208 () Real)
(declare-fun l_0_12_124 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_293 () Real)
(declare-fun l_0_12_286 () Real)
(declare-fun l_0_12_285 () Real)
(declare-fun l_0_12_284 () Real)
(declare-fun l_0_12_265 () Real)
(declare-fun l_0_12_258 () Real)
(declare-fun l_0_12_257 () Real)
(declare-fun l_0_12_256 () Real)
(declare-fun l_0_12_237 () Real)
(declare-fun l_0_12_230 () Real)
(declare-fun l_0_12_229 () Real)
(declare-fun l_0_12_228 () Real)
(declare-fun l_0_12_209 () Real)
(declare-fun l_0_12_202 () Real)
(declare-fun l_0_12_201 () Real)
(declare-fun l_0_12_200 () Real)
(declare-fun l_0_12_125 () Real)
(declare-fun l_0_12_118 () Real)
(declare-fun l_0_12_117 () Real)
(declare-fun l_0_12_116 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_294 () Real)
(declare-fun l_0_12_290 () Real)
(declare-fun l_0_12_289 () Real)
(declare-fun l_0_12_288 () Real)
(declare-fun l_0_12_287 () Real)
(declare-fun l_0_12_266 () Real)
(declare-fun l_0_12_262 () Real)
(declare-fun l_0_12_261 () Real)
(declare-fun l_0_12_260 () Real)
(declare-fun l_0_12_259 () Real)
(declare-fun l_0_12_238 () Real)
(declare-fun l_0_12_234 () Real)
(declare-fun l_0_12_233 () Real)
(declare-fun l_0_12_232 () Real)
(declare-fun l_0_12_231 () Real)
(declare-fun l_0_12_210 () Real)
(declare-fun l_0_12_206 () Real)
(declare-fun l_0_12_205 () Real)
(declare-fun l_0_12_204 () Real)
(declare-fun l_0_12_203 () Real)
(declare-fun l_0_12_126 () Real)
(declare-fun l_0_12_122 () Real)
(declare-fun l_0_12_121 () Real)
(declare-fun l_0_12_120 () Real)
(declare-fun l_0_12_119 () Real)
(declare-fun l_0_12_295 () Real)
(declare-fun l_0_12_267 () Real)
(declare-fun l_0_12_239 () Real)
(declare-fun l_0_12_211 () Real)
(declare-fun l_0_12_127 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_12_300 () Real)
(declare-fun l_0_12_299 () Real)
(declare-fun l_0_12_298 () Real)
(declare-fun l_0_12_297 () Real)
(declare-fun l_0_12_296 () Real)
(declare-fun l_0_12_272 () Real)
(declare-fun l_0_12_271 () Real)
(declare-fun l_0_12_270 () Real)
(declare-fun l_0_12_269 () Real)
(declare-fun l_0_12_268 () Real)
(declare-fun l_0_12_244 () Real)
(declare-fun l_0_12_243 () Real)
(declare-fun l_0_12_242 () Real)
(declare-fun l_0_12_241 () Real)
(declare-fun l_0_12_240 () Real)
(declare-fun l_0_12_216 () Real)
(declare-fun l_0_12_215 () Real)
(declare-fun l_0_12_214 () Real)
(declare-fun l_0_12_213 () Real)
(declare-fun l_0_12_212 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_132 () Real)
(declare-fun l_0_12_131 () Real)
(declare-fun l_0_12_130 () Real)
(declare-fun l_0_12_129 () Real)
(declare-fun l_0_12_128 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_306 () Real)
(declare-fun l_0_12_305 () Real)
(declare-fun l_0_12_304 () Real)
(declare-fun l_0_12_278 () Real)
(declare-fun l_0_12_277 () Real)
(declare-fun l_0_12_276 () Real)
(declare-fun l_0_12_250 () Real)
(declare-fun l_0_12_249 () Real)
(declare-fun l_0_12_248 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_222 () Real)
(declare-fun l_0_12_221 () Real)
(declare-fun l_0_12_220 () Real)
(declare-fun l_0_12_180 () Real)
(declare-fun l_0_12_152 () Real)
(declare-fun l_0_12_138 () Real)
(declare-fun l_0_12_137 () Real)
(declare-fun l_0_12_136 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_181 () Real)
(declare-fun l_0_12_174 () Real)
(declare-fun l_0_12_173 () Real)
(declare-fun l_0_12_172 () Real)
(declare-fun l_0_12_153 () Real)
(declare-fun l_0_12_146 () Real)
(declare-fun l_0_12_145 () Real)
(declare-fun l_0_12_144 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_182 () Real)
(declare-fun l_0_12_178 () Real)
(declare-fun l_0_12_177 () Real)
(declare-fun l_0_12_176 () Real)
(declare-fun l_0_12_175 () Real)
(declare-fun l_0_12_154 () Real)
(declare-fun l_0_12_150 () Real)
(declare-fun l_0_12_149 () Real)
(declare-fun l_0_12_148 () Real)
(declare-fun l_0_12_147 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_183 () Real)
(declare-fun l_0_12_155 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_188 () Real)
(declare-fun l_0_12_187 () Real)
(declare-fun l_0_12_186 () Real)
(declare-fun l_0_12_185 () Real)
(declare-fun l_0_12_184 () Real)
(declare-fun l_0_12_160 () Real)
(declare-fun l_0_12_159 () Real)
(declare-fun l_0_12_158 () Real)
(declare-fun l_0_12_157 () Real)
(declare-fun l_0_12_156 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_194 () Real)
(declare-fun l_0_12_193 () Real)
(declare-fun l_0_12_192 () Real)
(declare-fun l_0_12_191 () Real)
(declare-fun l_0_12_190 () Real)
(declare-fun l_0_12_166 () Real)
(declare-fun l_0_12_165 () Real)
(declare-fun l_0_12_164 () Real)
(declare-fun l_0_12_163 () Real)
(declare-fun l_0_12_162 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_109 () Real)
(declare-fun l_0_12_108 () Real)
(declare-fun l_0_12_107 () Real)
(declare-fun l_0_12_106 () Real)
(declare-fun l_0_12_301 () Real)
(declare-fun l_0_12_273 () Real)
(declare-fun l_0_12_245 () Real)
(declare-fun l_0_12_217 () Real)
(declare-fun l_0_12_133 () Real)
(declare-fun l_0_12_307 () Real)
(declare-fun l_0_12_279 () Real)
(declare-fun l_0_12_251 () Real)
(declare-fun l_0_12_223 () Real)
(declare-fun l_0_12_139 () Real)
(declare-fun l_0_12_189 () Real)
(declare-fun l_0_12_161 () Real)
(declare-fun l_0_12_195 () Real)
(declare-fun l_0_12_167 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_110 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_111 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_112 () Real)
(declare-fun l_0_12_308 () Real)
(declare-fun l_0_12_280 () Real)
(declare-fun l_0_12_252 () Real)
(declare-fun l_0_12_224 () Real)
(declare-fun l_0_12_140 () Real)
(declare-fun l_0_12_196 () Real)
(declare-fun l_0_12_168 () Real)
(declare-fun l_0_13_31 () Real)
(declare-fun l_0_13_30 () Real)
(declare-fun l_0_13_3 () Real)
(declare-fun l_0_13_2 () Real)
(declare-fun l_0_13_208 () Real)
(declare-fun l_0_13_199 () Real)
(declare-fun l_0_13_207 () Real)
(declare-fun l_0_13_198 () Real)
(declare-fun l_0_13_124 () Real)
(declare-fun l_0_13_115 () Real)
(declare-fun l_0_13_123 () Real)
(declare-fun l_0_13_114 () Real)
(declare-fun l_0_13_221 () Real)
(declare-fun l_0_13_206 () Real)
(declare-fun l_0_13_220 () Real)
(declare-fun l_0_13_205 () Real)
(declare-fun l_0_13_219 () Real)
(declare-fun l_0_13_204 () Real)
(declare-fun l_0_13_218 () Real)
(declare-fun l_0_13_203 () Real)
(declare-fun l_0_13_137 () Real)
(declare-fun l_0_13_122 () Real)
(declare-fun l_0_13_136 () Real)
(declare-fun l_0_13_121 () Real)
(declare-fun l_0_13_135 () Real)
(declare-fun l_0_13_120 () Real)
(declare-fun l_0_13_134 () Real)
(declare-fun l_0_13_119 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_13_200 () Real)
(declare-fun l_0_13_197 () Real)
(declare-fun l_0_13_173 () Real)
(declare-fun l_0_13_171 () Real)
(declare-fun l_0_13_172 () Real)
(declare-fun l_0_13_170 () Real)
(declare-fun l_0_13_145 () Real)
(declare-fun l_0_13_143 () Real)
(declare-fun l_0_13_144 () Real)
(declare-fun l_0_13_142 () Real)
(declare-fun l_0_13_116 () Real)
(declare-fun l_0_13_113 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_13_213 () Real)
(declare-fun l_0_13_212 () Real)
(declare-fun l_0_13_129 () Real)
(declare-fun l_0_13_128 () Real)
(declare-fun _a_5_ () Real)
(declare-fun l_0_13_29 () Real)
(declare-fun l_0_13_179 () Real)
(declare-fun l_0_13_169 () Real)
(declare-fun l_0_13_151 () Real)
(declare-fun l_0_13_141 () Real)
(declare-fun l_0_13_1 () Real)
(declare-fun l_0_13_180 () Real)
(declare-fun l_0_13_152 () Real)
(declare-fun l_0_13_40 () Real)
(declare-fun l_0_13_39 () Real)
(declare-fun l_0_13_32 () Real)
(declare-fun l_0_13_181 () Real)
(declare-fun l_0_13_174 () Real)
(declare-fun l_0_13_153 () Real)
(declare-fun l_0_13_146 () Real)
(declare-fun l_0_13_12 () Real)
(declare-fun l_0_13_11 () Real)
(declare-fun l_0_13_4 () Real)
(declare-fun l_0_13_35 () Real)
(declare-fun l_0_13_182 () Real)
(declare-fun l_0_13_178 () Real)
(declare-fun l_0_13_177 () Real)
(declare-fun l_0_13_176 () Real)
(declare-fun l_0_13_175 () Real)
(declare-fun l_0_13_154 () Real)
(declare-fun l_0_13_150 () Real)
(declare-fun l_0_13_149 () Real)
(declare-fun l_0_13_148 () Real)
(declare-fun l_0_13_147 () Real)
(declare-fun l_0_13_7 () Real)
(declare-fun l_0_13_183 () Real)
(declare-fun l_0_13_155 () Real)
(declare-fun l_0_13_44 () Real)
(declare-fun l_0_13_188 () Real)
(declare-fun l_0_13_187 () Real)
(declare-fun l_0_13_186 () Real)
(declare-fun l_0_13_185 () Real)
(declare-fun l_0_13_184 () Real)
(declare-fun l_0_13_160 () Real)
(declare-fun l_0_13_159 () Real)
(declare-fun l_0_13_158 () Real)
(declare-fun l_0_13_157 () Real)
(declare-fun l_0_13_156 () Real)
(declare-fun l_0_13_16 () Real)
(declare-fun l_0_13_96 () Real)
(declare-fun l_0_13_87 () Real)
(declare-fun l_0_13_95 () Real)
(declare-fun l_0_13_86 () Real)
(declare-fun l_0_13_68 () Real)
(declare-fun l_0_13_59 () Real)
(declare-fun l_0_13_67 () Real)
(declare-fun l_0_13_58 () Real)
(declare-fun l_0_13_50 () Real)
(declare-fun l_0_13_194 () Real)
(declare-fun l_0_13_193 () Real)
(declare-fun l_0_13_192 () Real)
(declare-fun l_0_13_191 () Real)
(declare-fun l_0_13_190 () Real)
(declare-fun l_0_13_166 () Real)
(declare-fun l_0_13_165 () Real)
(declare-fun l_0_13_164 () Real)
(declare-fun l_0_13_163 () Real)
(declare-fun l_0_13_162 () Real)
(declare-fun l_0_13_22 () Real)
(declare-fun l_0_13_33 () Real)
(declare-fun l_0_13_5 () Real)
(declare-fun l_0_13_209 () Real)
(declare-fun l_0_13_202 () Real)
(declare-fun l_0_13_201 () Real)
(declare-fun l_0_13_125 () Real)
(declare-fun l_0_13_118 () Real)
(declare-fun l_0_13_117 () Real)
(declare-fun l_0_13_36 () Real)
(declare-fun l_0_13_8 () Real)
(declare-fun l_0_13_210 () Real)
(declare-fun l_0_13_126 () Real)
(declare-fun l_0_13_211 () Real)
(declare-fun l_0_13_127 () Real)
(declare-fun l_0_13_45 () Real)
(declare-fun l_0_13_216 () Real)
(declare-fun l_0_13_215 () Real)
(declare-fun l_0_13_214 () Real)
(declare-fun l_0_13_17 () Real)
(declare-fun l_0_13_132 () Real)
(declare-fun l_0_13_131 () Real)
(declare-fun l_0_13_130 () Real)
(declare-fun l_0_13_51 () Real)
(declare-fun l_0_13_23 () Real)
(declare-fun l_0_13_222 () Real)
(declare-fun l_0_13_138 () Real)
(declare-fun l_0_13_6 () Real)
(declare-fun l_0_13_34 () Real)
(declare-fun l_0_13_9 () Real)
(declare-fun l_0_13_37 () Real)
(declare-fun l_0_13_41 () Real)
(declare-fun l_0_13_13 () Real)
(declare-fun l_0_13_46 () Real)
(declare-fun l_0_13_18 () Real)
(declare-fun l_0_13_52 () Real)
(declare-fun l_0_13_24 () Real)
(declare-fun l_0_13_38 () Real)
(declare-fun l_0_13_10 () Real)
(declare-fun l_0_13_42 () Real)
(declare-fun l_0_13_14 () Real)
(declare-fun l_0_13_47 () Real)
(declare-fun l_0_13_19 () Real)
(declare-fun l_0_13_53 () Real)
(declare-fun l_0_13_25 () Real)
(declare-fun l_0_13_43 () Real)
(declare-fun l_0_13_15 () Real)
(declare-fun l_0_13_48 () Real)
(declare-fun l_0_13_20 () Real)
(declare-fun l_0_13_54 () Real)
(declare-fun l_0_13_26 () Real)
(declare-fun l_0_13_49 () Real)
(declare-fun l_0_13_21 () Real)
(declare-fun l_0_13_55 () Real)
(declare-fun l_0_13_27 () Real)
(declare-fun l_0_13_56 () Real)
(declare-fun l_0_13_28 () Real)
(declare-fun l_0_13_91 () Real)
(declare-fun l_0_13_85 () Real)
(declare-fun l_0_13_63 () Real)
(declare-fun l_0_13_57 () Real)
(declare-fun l_0_13_92 () Real)
(declare-fun l_0_13_64 () Real)
(declare-fun l_0_13_93 () Real)
(declare-fun l_0_13_90 () Real)
(declare-fun l_0_13_89 () Real)
(declare-fun l_0_13_88 () Real)
(declare-fun l_0_13_65 () Real)
(declare-fun l_0_13_62 () Real)
(declare-fun l_0_13_61 () Real)
(declare-fun l_0_13_60 () Real)
(declare-fun l_0_13_94 () Real)
(declare-fun l_0_13_66 () Real)
(declare-fun l_0_13_98 () Real)
(declare-fun l_0_13_97 () Real)
(declare-fun l_0_13_70 () Real)
(declare-fun l_0_13_69 () Real)
(declare-fun l_0_13_75 () Real)
(declare-fun l_0_13_74 () Real)
(declare-fun l_0_13_73 () Real)
(declare-fun l_0_13_72 () Real)
(declare-fun l_0_13_103 () Real)
(declare-fun l_0_13_102 () Real)
(declare-fun l_0_13_101 () Real)
(declare-fun l_0_13_100 () Real)
(declare-fun l_0_13_81 () Real)
(declare-fun l_0_13_80 () Real)
(declare-fun l_0_13_79 () Real)
(declare-fun l_0_13_78 () Real)
(declare-fun l_0_13_109 () Real)
(declare-fun l_0_13_108 () Real)
(declare-fun l_0_13_107 () Real)
(declare-fun l_0_13_106 () Real)
(declare-fun l_0_13_189 () Real)
(declare-fun l_0_13_161 () Real)
(declare-fun l_0_13_195 () Real)
(declare-fun l_0_13_167 () Real)
(declare-fun l_0_13_217 () Real)
(declare-fun l_0_13_133 () Real)
(declare-fun l_0_13_223 () Real)
(declare-fun l_0_13_139 () Real)
(declare-fun l_0_13_196 () Real)
(declare-fun l_0_13_168 () Real)
(declare-fun l_0_13_99 () Real)
(declare-fun l_0_13_71 () Real)
(declare-fun l_0_13_76 () Real)
(declare-fun l_0_13_104 () Real)
(declare-fun l_0_13_82 () Real)
(declare-fun l_0_13_110 () Real)
(declare-fun l_0_13_77 () Real)
(declare-fun l_0_13_105 () Real)
(declare-fun l_0_13_83 () Real)
(declare-fun l_0_13_111 () Real)
(declare-fun l_0_13_84 () Real)
(declare-fun l_0_13_112 () Real)
(declare-fun l_0_13_224 () Real)
(declare-fun l_0_13_140 () Real)
(declare-fun l_0_14_31 () Real)
(declare-fun l_0_14_30 () Real)
(declare-fun l_0_14_3 () Real)
(declare-fun l_0_14_249 () Real)
(declare-fun l_0_14_234 () Real)
(declare-fun l_0_14_248 () Real)
(declare-fun l_0_14_233 () Real)
(declare-fun l_0_14_247 () Real)
(declare-fun l_0_14_232 () Real)
(declare-fun l_0_14_246 () Real)
(declare-fun l_0_14_231 () Real)
(declare-fun l_0_14_221 () Real)
(declare-fun l_0_14_206 () Real)
(declare-fun l_0_14_220 () Real)
(declare-fun l_0_14_205 () Real)
(declare-fun l_0_14_219 () Real)
(declare-fun l_0_14_204 () Real)
(declare-fun l_0_14_218 () Real)
(declare-fun l_0_14_203 () Real)
(declare-fun l_0_14_2 () Real)
(declare-fun l_0_14_137 () Real)
(declare-fun l_0_14_122 () Real)
(declare-fun l_0_14_136 () Real)
(declare-fun l_0_14_121 () Real)
(declare-fun l_0_14_135 () Real)
(declare-fun l_0_14_120 () Real)
(declare-fun l_0_14_134 () Real)
(declare-fun l_0_14_119 () Real)
(declare-fun l_0_14_227 () Real)
(declare-fun l_0_14_226 () Real)
(declare-fun l_0_14_199 () Real)
(declare-fun l_0_14_198 () Real)
(declare-fun l_0_14_115 () Real)
(declare-fun l_0_14_114 () Real)
(declare-fun l_0_14_228 () Real)
(declare-fun l_0_14_225 () Real)
(declare-fun l_0_14_200 () Real)
(declare-fun l_0_14_197 () Real)
(declare-fun l_0_14_173 () Real)
(declare-fun l_0_14_171 () Real)
(declare-fun l_0_14_172 () Real)
(declare-fun l_0_14_170 () Real)
(declare-fun l_0_14_145 () Real)
(declare-fun l_0_14_143 () Real)
(declare-fun l_0_14_144 () Real)
(declare-fun l_0_14_142 () Real)
(declare-fun l_0_14_116 () Real)
(declare-fun l_0_14_113 () Real)
(declare-fun l_0_14_241 () Real)
(declare-fun l_0_14_240 () Real)
(declare-fun l_0_14_213 () Real)
(declare-fun l_0_14_212 () Real)
(declare-fun l_0_14_129 () Real)
(declare-fun l_0_14_128 () Real)
(declare-fun l_0_14_236 () Real)
(declare-fun l_0_14_235 () Real)
(declare-fun l_0_14_208 () Real)
(declare-fun l_0_14_207 () Real)
(declare-fun l_0_14_124 () Real)
(declare-fun l_0_14_123 () Real)
(declare-fun l_0_14_29 () Real)
(declare-fun l_0_14_179 () Real)
(declare-fun l_0_14_169 () Real)
(declare-fun l_0_14_151 () Real)
(declare-fun l_0_14_141 () Real)
(declare-fun l_0_14_1 () Real)
(declare-fun l_0_14_180 () Real)
(declare-fun l_0_14_152 () Real)
(declare-fun l_0_14_40 () Real)
(declare-fun l_0_14_39 () Real)
(declare-fun l_0_14_32 () Real)
(declare-fun l_0_14_181 () Real)
(declare-fun l_0_14_174 () Real)
(declare-fun l_0_14_153 () Real)
(declare-fun l_0_14_146 () Real)
(declare-fun l_0_14_12 () Real)
(declare-fun l_0_14_11 () Real)
(declare-fun l_0_14_4 () Real)
(declare-fun l_0_14_35 () Real)
(declare-fun l_0_14_182 () Real)
(declare-fun l_0_14_178 () Real)
(declare-fun l_0_14_177 () Real)
(declare-fun l_0_14_176 () Real)
(declare-fun l_0_14_175 () Real)
(declare-fun l_0_14_154 () Real)
(declare-fun l_0_14_150 () Real)
(declare-fun l_0_14_149 () Real)
(declare-fun l_0_14_148 () Real)
(declare-fun l_0_14_147 () Real)
(declare-fun l_0_14_7 () Real)
(declare-fun l_0_14_183 () Real)
(declare-fun l_0_14_155 () Real)
(declare-fun l_0_14_44 () Real)
(declare-fun l_0_14_188 () Real)
(declare-fun l_0_14_187 () Real)
(declare-fun l_0_14_186 () Real)
(declare-fun l_0_14_185 () Real)
(declare-fun l_0_14_184 () Real)
(declare-fun l_0_14_160 () Real)
(declare-fun l_0_14_159 () Real)
(declare-fun l_0_14_158 () Real)
(declare-fun l_0_14_157 () Real)
(declare-fun l_0_14_156 () Real)
(declare-fun l_0_14_16 () Real)
(declare-fun l_0_14_96 () Real)
(declare-fun l_0_14_87 () Real)
(declare-fun l_0_14_95 () Real)
(declare-fun l_0_14_86 () Real)
(declare-fun l_0_14_68 () Real)
(declare-fun l_0_14_59 () Real)
(declare-fun l_0_14_67 () Real)
(declare-fun l_0_14_58 () Real)
(declare-fun l_0_14_50 () Real)
(declare-fun l_0_14_194 () Real)
(declare-fun l_0_14_193 () Real)
(declare-fun l_0_14_192 () Real)
(declare-fun l_0_14_191 () Real)
(declare-fun l_0_14_190 () Real)
(declare-fun l_0_14_166 () Real)
(declare-fun l_0_14_165 () Real)
(declare-fun l_0_14_164 () Real)
(declare-fun l_0_14_163 () Real)
(declare-fun l_0_14_162 () Real)
(declare-fun l_0_14_22 () Real)
(declare-fun l_0_14_33 () Real)
(declare-fun l_0_14_5 () Real)
(declare-fun l_0_14_237 () Real)
(declare-fun l_0_14_230 () Real)
(declare-fun l_0_14_229 () Real)
(declare-fun l_0_14_209 () Real)
(declare-fun l_0_14_202 () Real)
(declare-fun l_0_14_201 () Real)
(declare-fun l_0_14_125 () Real)
(declare-fun l_0_14_118 () Real)
(declare-fun l_0_14_117 () Real)
(declare-fun l_0_14_36 () Real)
(declare-fun l_0_14_8 () Real)
(declare-fun l_0_14_238 () Real)
(declare-fun l_0_14_210 () Real)
(declare-fun l_0_14_126 () Real)
(declare-fun l_0_14_239 () Real)
(declare-fun l_0_14_211 () Real)
(declare-fun l_0_14_127 () Real)
(declare-fun l_0_14_45 () Real)
(declare-fun l_0_14_244 () Real)
(declare-fun l_0_14_243 () Real)
(declare-fun l_0_14_242 () Real)
(declare-fun l_0_14_216 () Real)
(declare-fun l_0_14_215 () Real)
(declare-fun l_0_14_214 () Real)
(declare-fun l_0_14_17 () Real)
(declare-fun l_0_14_132 () Real)
(declare-fun l_0_14_131 () Real)
(declare-fun l_0_14_130 () Real)
(declare-fun l_0_14_51 () Real)
(declare-fun l_0_14_250 () Real)
(declare-fun l_0_14_23 () Real)
(declare-fun l_0_14_222 () Real)
(declare-fun l_0_14_138 () Real)
(declare-fun l_0_14_6 () Real)
(declare-fun l_0_14_34 () Real)
(declare-fun l_0_14_9 () Real)
(declare-fun l_0_14_37 () Real)
(declare-fun l_0_14_41 () Real)
(declare-fun l_0_14_13 () Real)
(declare-fun l_0_14_46 () Real)
(declare-fun l_0_14_18 () Real)
(declare-fun l_0_14_52 () Real)
(declare-fun l_0_14_24 () Real)
(declare-fun l_0_14_38 () Real)
(declare-fun l_0_14_10 () Real)
(declare-fun l_0_14_42 () Real)
(declare-fun l_0_14_14 () Real)
(declare-fun l_0_14_47 () Real)
(declare-fun l_0_14_19 () Real)
(declare-fun l_0_14_53 () Real)
(declare-fun l_0_14_25 () Real)
(declare-fun l_0_14_43 () Real)
(declare-fun l_0_14_15 () Real)
(declare-fun l_0_14_48 () Real)
(declare-fun l_0_14_20 () Real)
(declare-fun l_0_14_54 () Real)
(declare-fun l_0_14_26 () Real)
(declare-fun l_0_14_49 () Real)
(declare-fun l_0_14_21 () Real)
(declare-fun l_0_14_55 () Real)
(declare-fun l_0_14_27 () Real)
(declare-fun l_0_14_56 () Real)
(declare-fun l_0_14_28 () Real)
(declare-fun l_0_14_91 () Real)
(declare-fun l_0_14_85 () Real)
(declare-fun l_0_14_63 () Real)
(declare-fun l_0_14_57 () Real)
(declare-fun l_0_14_92 () Real)
(declare-fun l_0_14_64 () Real)
(declare-fun l_0_14_93 () Real)
(declare-fun l_0_14_90 () Real)
(declare-fun l_0_14_89 () Real)
(declare-fun l_0_14_88 () Real)
(declare-fun l_0_14_65 () Real)
(declare-fun l_0_14_62 () Real)
(declare-fun l_0_14_61 () Real)
(declare-fun l_0_14_60 () Real)
(declare-fun l_0_14_94 () Real)
(declare-fun l_0_14_66 () Real)
(declare-fun l_0_14_98 () Real)
(declare-fun l_0_14_97 () Real)
(declare-fun l_0_14_70 () Real)
(declare-fun l_0_14_69 () Real)
(declare-fun l_0_14_75 () Real)
(declare-fun l_0_14_74 () Real)
(declare-fun l_0_14_73 () Real)
(declare-fun l_0_14_72 () Real)
(declare-fun l_0_14_103 () Real)
(declare-fun l_0_14_102 () Real)
(declare-fun l_0_14_101 () Real)
(declare-fun l_0_14_100 () Real)
(declare-fun l_0_14_81 () Real)
(declare-fun l_0_14_80 () Real)
(declare-fun l_0_14_79 () Real)
(declare-fun l_0_14_78 () Real)
(declare-fun l_0_14_109 () Real)
(declare-fun l_0_14_108 () Real)
(declare-fun l_0_14_107 () Real)
(declare-fun l_0_14_106 () Real)
(declare-fun l_0_14_189 () Real)
(declare-fun l_0_14_161 () Real)
(declare-fun l_0_14_195 () Real)
(declare-fun l_0_14_167 () Real)
(declare-fun l_0_14_245 () Real)
(declare-fun l_0_14_217 () Real)
(declare-fun l_0_14_133 () Real)
(declare-fun l_0_14_251 () Real)
(declare-fun l_0_14_223 () Real)
(declare-fun l_0_14_139 () Real)
(declare-fun l_0_14_196 () Real)
(declare-fun l_0_14_168 () Real)
(declare-fun l_0_14_99 () Real)
(declare-fun l_0_14_71 () Real)
(declare-fun l_0_14_76 () Real)
(declare-fun l_0_14_104 () Real)
(declare-fun l_0_14_82 () Real)
(declare-fun l_0_14_110 () Real)
(declare-fun l_0_14_77 () Real)
(declare-fun l_0_14_105 () Real)
(declare-fun l_0_14_83 () Real)
(declare-fun l_0_14_111 () Real)
(declare-fun l_0_14_84 () Real)
(declare-fun l_0_14_112 () Real)
(declare-fun l_0_14_252 () Real)
(declare-fun l_0_14_224 () Real)
(declare-fun l_0_14_140 () Real)
(declare-fun l_0_15_255 () Real)
(declare-fun l_0_15_254 () Real)
(declare-fun l_0_15_227 () Real)
(declare-fun l_0_15_226 () Real)
(declare-fun l_0_15_199 () Real)
(declare-fun l_0_15_198 () Real)
(declare-fun l_0_15_115 () Real)
(declare-fun l_0_15_114 () Real)
(declare-fun l_0_15_87 () Real)
(declare-fun l_0_15_86 () Real)
(declare-fun l_0_15_59 () Real)
(declare-fun l_0_15_58 () Real)
(declare-fun l_0_15_274 () Real)
(declare-fun l_0_15_253 () Real)
(declare-fun l_0_15_246 () Real)
(declare-fun l_0_15_225 () Real)
(declare-fun l_0_15_218 () Real)
(declare-fun l_0_15_197 () Real)
(declare-fun l_0_15_191 () Real)
(declare-fun l_0_15_171 () Real)
(declare-fun l_0_15_190 () Real)
(declare-fun l_0_15_170 () Real)
(declare-fun l_0_15_163 () Real)
(declare-fun l_0_15_143 () Real)
(declare-fun l_0_15_162 () Real)
(declare-fun l_0_15_142 () Real)
(declare-fun l_0_15_134 () Real)
(declare-fun l_0_15_113 () Real)
(declare-fun l_0_15_29 () Real)
(declare-fun l_0_15_179 () Real)
(declare-fun l_0_15_169 () Real)
(declare-fun l_0_15_151 () Real)
(declare-fun l_0_15_141 () Real)
(declare-fun l_0_15_1 () Real)
(declare-fun l_0_15_30 () Real)
(declare-fun l_0_15_263 () Real)
(declare-fun l_0_15_235 () Real)
(declare-fun l_0_15_207 () Real)
(declare-fun l_0_15_180 () Real)
(declare-fun l_0_15_152 () Real)
(declare-fun l_0_15_123 () Real)
(declare-fun l_0_15_2 () Real)
(declare-fun l_0_15_40 () Real)
(declare-fun l_0_15_31 () Real)
(declare-fun l_0_15_39 () Real)
(declare-fun l_0_15_32 () Real)
(declare-fun l_0_15_181 () Real)
(declare-fun l_0_15_174 () Real)
(declare-fun l_0_15_173 () Real)
(declare-fun l_0_15_172 () Real)
(declare-fun l_0_15_153 () Real)
(declare-fun l_0_15_146 () Real)
(declare-fun l_0_15_145 () Real)
(declare-fun l_0_15_144 () Real)
(declare-fun l_0_15_3 () Real)
(declare-fun l_0_15_12 () Real)
(declare-fun l_0_15_11 () Real)
(declare-fun l_0_15_4 () Real)
(declare-fun l_0_15_35 () Real)
(declare-fun l_0_15_182 () Real)
(declare-fun l_0_15_178 () Real)
(declare-fun l_0_15_177 () Real)
(declare-fun l_0_15_176 () Real)
(declare-fun l_0_15_175 () Real)
(declare-fun l_0_15_154 () Real)
(declare-fun l_0_15_150 () Real)
(declare-fun l_0_15_149 () Real)
(declare-fun l_0_15_148 () Real)
(declare-fun l_0_15_147 () Real)
(declare-fun l_0_15_7 () Real)
(declare-fun l_0_15_183 () Real)
(declare-fun l_0_15_155 () Real)
(declare-fun l_0_15_44 () Real)
(declare-fun l_0_15_188 () Real)
(declare-fun l_0_15_187 () Real)
(declare-fun l_0_15_186 () Real)
(declare-fun l_0_15_185 () Real)
(declare-fun l_0_15_184 () Real)
(declare-fun l_0_15_160 () Real)
(declare-fun l_0_15_159 () Real)
(declare-fun l_0_15_158 () Real)
(declare-fun l_0_15_157 () Real)
(declare-fun l_0_15_156 () Real)
(declare-fun l_0_15_16 () Real)
(declare-fun l_0_15_96 () Real)
(declare-fun l_0_15_95 () Real)
(declare-fun l_0_15_68 () Real)
(declare-fun l_0_15_67 () Real)
(declare-fun l_0_15_50 () Real)
(declare-fun l_0_15_194 () Real)
(declare-fun l_0_15_193 () Real)
(declare-fun l_0_15_192 () Real)
(declare-fun l_0_15_166 () Real)
(declare-fun l_0_15_165 () Real)
(declare-fun l_0_15_164 () Real)
(declare-fun l_0_15_22 () Real)
(declare-fun l_0_15_264 () Real)
(declare-fun l_0_15_236 () Real)
(declare-fun l_0_15_208 () Real)
(declare-fun l_0_15_124 () Real)
(declare-fun l_0_15_33 () Real)
(declare-fun l_0_15_5 () Real)
(declare-fun l_0_15_265 () Real)
(declare-fun l_0_15_258 () Real)
(declare-fun l_0_15_257 () Real)
(declare-fun l_0_15_256 () Real)
(declare-fun l_0_15_237 () Real)
(declare-fun l_0_15_230 () Real)
(declare-fun l_0_15_229 () Real)
(declare-fun l_0_15_228 () Real)
(declare-fun l_0_15_209 () Real)
(declare-fun l_0_15_202 () Real)
(declare-fun l_0_15_201 () Real)
(declare-fun l_0_15_200 () Real)
(declare-fun l_0_15_125 () Real)
(declare-fun l_0_15_118 () Real)
(declare-fun l_0_15_117 () Real)
(declare-fun l_0_15_116 () Real)
(declare-fun l_0_15_36 () Real)
(declare-fun l_0_15_8 () Real)
(declare-fun l_0_15_266 () Real)
(declare-fun l_0_15_262 () Real)
(declare-fun l_0_15_261 () Real)
(declare-fun l_0_15_260 () Real)
(declare-fun l_0_15_259 () Real)
(declare-fun l_0_15_238 () Real)
(declare-fun l_0_15_234 () Real)
(declare-fun l_0_15_233 () Real)
(declare-fun l_0_15_232 () Real)
(declare-fun l_0_15_231 () Real)
(declare-fun l_0_15_210 () Real)
(declare-fun l_0_15_206 () Real)
(declare-fun l_0_15_205 () Real)
(declare-fun l_0_15_204 () Real)
(declare-fun l_0_15_203 () Real)
(declare-fun l_0_15_126 () Real)
(declare-fun l_0_15_122 () Real)
(declare-fun l_0_15_121 () Real)
(declare-fun l_0_15_120 () Real)
(declare-fun l_0_15_119 () Real)
(declare-fun l_0_15_267 () Real)
(declare-fun l_0_15_239 () Real)
(declare-fun l_0_15_211 () Real)
(declare-fun l_0_15_127 () Real)
(declare-fun l_0_15_45 () Real)
(declare-fun l_0_15_272 () Real)
(declare-fun l_0_15_271 () Real)
(declare-fun l_0_15_270 () Real)
(declare-fun l_0_15_269 () Real)
(declare-fun l_0_15_268 () Real)
(declare-fun l_0_15_244 () Real)
(declare-fun l_0_15_243 () Real)
(declare-fun l_0_15_242 () Real)
(declare-fun l_0_15_241 () Real)
(declare-fun l_0_15_240 () Real)
(declare-fun l_0_15_216 () Real)
(declare-fun l_0_15_215 () Real)
(declare-fun l_0_15_214 () Real)
(declare-fun l_0_15_213 () Real)
(declare-fun l_0_15_212 () Real)
(declare-fun l_0_15_17 () Real)
(declare-fun l_0_15_132 () Real)
(declare-fun l_0_15_131 () Real)
(declare-fun l_0_15_130 () Real)
(declare-fun l_0_15_129 () Real)
(declare-fun l_0_15_128 () Real)
(declare-fun l_0_15_51 () Real)
(declare-fun l_0_15_278 () Real)
(declare-fun l_0_15_277 () Real)
(declare-fun l_0_15_276 () Real)
(declare-fun l_0_15_275 () Real)
(declare-fun l_0_15_250 () Real)
(declare-fun l_0_15_249 () Real)
(declare-fun l_0_15_248 () Real)
(declare-fun l_0_15_247 () Real)
(declare-fun l_0_15_23 () Real)
(declare-fun l_0_15_222 () Real)
(declare-fun l_0_15_221 () Real)
(declare-fun l_0_15_220 () Real)
(declare-fun l_0_15_219 () Real)
(declare-fun l_0_15_138 () Real)
(declare-fun l_0_15_137 () Real)
(declare-fun l_0_15_136 () Real)
(declare-fun l_0_15_135 () Real)
(declare-fun l_0_15_6 () Real)
(declare-fun l_0_15_34 () Real)
(declare-fun l_0_15_9 () Real)
(declare-fun l_0_15_37 () Real)
(declare-fun l_0_15_41 () Real)
(declare-fun l_0_15_13 () Real)
(declare-fun l_0_15_46 () Real)
(declare-fun l_0_15_18 () Real)
(declare-fun l_0_15_52 () Real)
(declare-fun l_0_15_24 () Real)
(declare-fun l_0_15_38 () Real)
(declare-fun l_0_15_10 () Real)
(declare-fun l_0_15_42 () Real)
(declare-fun l_0_15_14 () Real)
(declare-fun l_0_15_47 () Real)
(declare-fun l_0_15_19 () Real)
(declare-fun l_0_15_53 () Real)
(declare-fun l_0_15_25 () Real)
(declare-fun l_0_15_43 () Real)
(declare-fun l_0_15_15 () Real)
(declare-fun l_0_15_48 () Real)
(declare-fun l_0_15_20 () Real)
(declare-fun l_0_15_54 () Real)
(declare-fun l_0_15_26 () Real)
(declare-fun l_0_15_49 () Real)
(declare-fun l_0_15_21 () Real)
(declare-fun l_0_15_55 () Real)
(declare-fun l_0_15_27 () Real)
(declare-fun l_0_15_56 () Real)
(declare-fun l_0_15_28 () Real)
(declare-fun l_0_15_91 () Real)
(declare-fun l_0_15_85 () Real)
(declare-fun l_0_15_63 () Real)
(declare-fun l_0_15_57 () Real)
(declare-fun l_0_15_92 () Real)
(declare-fun l_0_15_64 () Real)
(declare-fun l_0_15_93 () Real)
(declare-fun l_0_15_90 () Real)
(declare-fun l_0_15_89 () Real)
(declare-fun l_0_15_88 () Real)
(declare-fun l_0_15_65 () Real)
(declare-fun l_0_15_62 () Real)
(declare-fun l_0_15_61 () Real)
(declare-fun l_0_15_60 () Real)
(declare-fun l_0_15_94 () Real)
(declare-fun l_0_15_66 () Real)
(declare-fun l_0_15_98 () Real)
(declare-fun l_0_15_97 () Real)
(declare-fun l_0_15_70 () Real)
(declare-fun l_0_15_69 () Real)
(declare-fun l_0_15_75 () Real)
(declare-fun l_0_15_74 () Real)
(declare-fun l_0_15_73 () Real)
(declare-fun l_0_15_72 () Real)
(declare-fun l_0_15_103 () Real)
(declare-fun l_0_15_102 () Real)
(declare-fun l_0_15_101 () Real)
(declare-fun l_0_15_100 () Real)
(declare-fun l_0_15_81 () Real)
(declare-fun l_0_15_80 () Real)
(declare-fun l_0_15_79 () Real)
(declare-fun l_0_15_78 () Real)
(declare-fun l_0_15_109 () Real)
(declare-fun l_0_15_108 () Real)
(declare-fun l_0_15_107 () Real)
(declare-fun l_0_15_106 () Real)
(declare-fun l_0_15_189 () Real)
(declare-fun l_0_15_161 () Real)
(declare-fun l_0_15_195 () Real)
(declare-fun l_0_15_167 () Real)
(declare-fun l_0_15_273 () Real)
(declare-fun l_0_15_245 () Real)
(declare-fun l_0_15_217 () Real)
(declare-fun l_0_15_133 () Real)
(declare-fun l_0_15_279 () Real)
(declare-fun l_0_15_251 () Real)
(declare-fun l_0_15_223 () Real)
(declare-fun l_0_15_139 () Real)
(declare-fun l_0_15_196 () Real)
(declare-fun l_0_15_168 () Real)
(declare-fun l_0_15_99 () Real)
(declare-fun l_0_15_71 () Real)
(declare-fun l_0_15_76 () Real)
(declare-fun l_0_15_104 () Real)
(declare-fun l_0_15_82 () Real)
(declare-fun l_0_15_110 () Real)
(declare-fun l_0_15_77 () Real)
(declare-fun l_0_15_105 () Real)
(declare-fun l_0_15_83 () Real)
(declare-fun l_0_15_111 () Real)
(declare-fun l_0_15_84 () Real)
(declare-fun l_0_15_112 () Real)
(declare-fun l_0_15_280 () Real)
(declare-fun l_0_15_252 () Real)
(declare-fun l_0_15_224 () Real)
(declare-fun l_0_15_140 () Real)
(declare-fun l_0_16_87 () Real)
(declare-fun l_0_16_86 () Real)
(declare-fun l_0_16_59 () Real)
(declare-fun l_0_16_58 () Real)
(declare-fun l_0_16_302 () Real)
(declare-fun l_0_16_281 () Real)
(declare-fun l_0_16_274 () Real)
(declare-fun l_0_16_253 () Real)
(declare-fun l_0_16_246 () Real)
(declare-fun l_0_16_225 () Real)
(declare-fun l_0_16_218 () Real)
(declare-fun l_0_16_197 () Real)
(declare-fun l_0_16_191 () Real)
(declare-fun l_0_16_171 () Real)
(declare-fun l_0_16_190 () Real)
(declare-fun l_0_16_170 () Real)
(declare-fun l_0_16_163 () Real)
(declare-fun l_0_16_143 () Real)
(declare-fun l_0_16_162 () Real)
(declare-fun l_0_16_142 () Real)
(declare-fun l_0_16_134 () Real)
(declare-fun l_0_16_113 () Real)
(declare-fun l_0_16_282 () Real)
(declare-fun l_0_16_254 () Real)
(declare-fun l_0_16_226 () Real)
(declare-fun l_0_16_198 () Real)
(declare-fun l_0_16_114 () Real)
(declare-fun l_0_16_283 () Real)
(declare-fun l_0_16_255 () Real)
(declare-fun l_0_16_227 () Real)
(declare-fun l_0_16_199 () Real)
(declare-fun l_0_16_115 () Real)
(declare-fun l_0_16_29 () Real)
(declare-fun l_0_16_179 () Real)
(declare-fun l_0_16_169 () Real)
(declare-fun l_0_16_151 () Real)
(declare-fun l_0_16_141 () Real)
(declare-fun l_0_16_1 () Real)
(declare-fun l_0_16_30 () Real)
(declare-fun l_0_16_291 () Real)
(declare-fun l_0_16_263 () Real)
(declare-fun l_0_16_235 () Real)
(declare-fun l_0_16_207 () Real)
(declare-fun l_0_16_180 () Real)
(declare-fun l_0_16_152 () Real)
(declare-fun l_0_16_123 () Real)
(declare-fun l_0_16_2 () Real)
(declare-fun l_0_16_40 () Real)
(declare-fun l_0_16_31 () Real)
(declare-fun l_0_16_39 () Real)
(declare-fun l_0_16_32 () Real)
(declare-fun l_0_16_181 () Real)
(declare-fun l_0_16_174 () Real)
(declare-fun l_0_16_173 () Real)
(declare-fun l_0_16_172 () Real)
(declare-fun l_0_16_153 () Real)
(declare-fun l_0_16_146 () Real)
(declare-fun l_0_16_145 () Real)
(declare-fun l_0_16_144 () Real)
(declare-fun l_0_16_3 () Real)
(declare-fun l_0_16_12 () Real)
(declare-fun l_0_16_11 () Real)
(declare-fun l_0_16_4 () Real)
(declare-fun l_0_16_35 () Real)
(declare-fun l_0_16_182 () Real)
(declare-fun l_0_16_178 () Real)
(declare-fun l_0_16_177 () Real)
(declare-fun l_0_16_176 () Real)
(declare-fun l_0_16_175 () Real)
(declare-fun l_0_16_154 () Real)
(declare-fun l_0_16_150 () Real)
(declare-fun l_0_16_149 () Real)
(declare-fun l_0_16_148 () Real)
(declare-fun l_0_16_147 () Real)
(declare-fun l_0_16_7 () Real)
(declare-fun l_0_16_183 () Real)
(declare-fun l_0_16_155 () Real)
(declare-fun l_0_16_44 () Real)
(declare-fun l_0_16_188 () Real)
(declare-fun l_0_16_187 () Real)
(declare-fun l_0_16_186 () Real)
(declare-fun l_0_16_185 () Real)
(declare-fun l_0_16_184 () Real)
(declare-fun l_0_16_160 () Real)
(declare-fun l_0_16_159 () Real)
(declare-fun l_0_16_158 () Real)
(declare-fun l_0_16_157 () Real)
(declare-fun l_0_16_156 () Real)
(declare-fun l_0_16_16 () Real)
(declare-fun l_0_16_96 () Real)
(declare-fun l_0_16_95 () Real)
(declare-fun l_0_16_68 () Real)
(declare-fun l_0_16_67 () Real)
(declare-fun l_0_16_50 () Real)
(declare-fun l_0_16_194 () Real)
(declare-fun l_0_16_193 () Real)
(declare-fun l_0_16_192 () Real)
(declare-fun l_0_16_166 () Real)
(declare-fun l_0_16_165 () Real)
(declare-fun l_0_16_164 () Real)
(declare-fun l_0_16_22 () Real)
(declare-fun l_0_16_292 () Real)
(declare-fun l_0_16_264 () Real)
(declare-fun l_0_16_236 () Real)
(declare-fun l_0_16_208 () Real)
(declare-fun l_0_16_124 () Real)
(declare-fun l_0_16_33 () Real)
(declare-fun l_0_16_5 () Real)
(declare-fun l_0_16_293 () Real)
(declare-fun l_0_16_286 () Real)
(declare-fun l_0_16_285 () Real)
(declare-fun l_0_16_284 () Real)
(declare-fun l_0_16_265 () Real)
(declare-fun l_0_16_258 () Real)
(declare-fun l_0_16_257 () Real)
(declare-fun l_0_16_256 () Real)
(declare-fun l_0_16_237 () Real)
(declare-fun l_0_16_230 () Real)
(declare-fun l_0_16_229 () Real)
(declare-fun l_0_16_228 () Real)
(declare-fun l_0_16_209 () Real)
(declare-fun l_0_16_202 () Real)
(declare-fun l_0_16_201 () Real)
(declare-fun l_0_16_200 () Real)
(declare-fun l_0_16_125 () Real)
(declare-fun l_0_16_118 () Real)
(declare-fun l_0_16_117 () Real)
(declare-fun l_0_16_116 () Real)
(declare-fun l_0_16_36 () Real)
(declare-fun l_0_16_8 () Real)
(declare-fun l_0_16_294 () Real)
(declare-fun l_0_16_290 () Real)
(declare-fun l_0_16_289 () Real)
(declare-fun l_0_16_288 () Real)
(declare-fun l_0_16_287 () Real)
(declare-fun l_0_16_266 () Real)
(declare-fun l_0_16_262 () Real)
(declare-fun l_0_16_261 () Real)
(declare-fun l_0_16_260 () Real)
(declare-fun l_0_16_259 () Real)
(declare-fun l_0_16_238 () Real)
(declare-fun l_0_16_234 () Real)
(declare-fun l_0_16_233 () Real)
(declare-fun l_0_16_232 () Real)
(declare-fun l_0_16_231 () Real)
(declare-fun l_0_16_210 () Real)
(declare-fun l_0_16_206 () Real)
(declare-fun l_0_16_205 () Real)
(declare-fun l_0_16_204 () Real)
(declare-fun l_0_16_203 () Real)
(declare-fun l_0_16_126 () Real)
(declare-fun l_0_16_122 () Real)
(declare-fun l_0_16_121 () Real)
(declare-fun l_0_16_120 () Real)
(declare-fun l_0_16_119 () Real)
(declare-fun l_0_16_295 () Real)
(declare-fun l_0_16_267 () Real)
(declare-fun l_0_16_239 () Real)
(declare-fun l_0_16_211 () Real)
(declare-fun l_0_16_127 () Real)
(declare-fun l_0_16_45 () Real)
(declare-fun l_0_16_300 () Real)
(declare-fun l_0_16_299 () Real)
(declare-fun l_0_16_298 () Real)
(declare-fun l_0_16_297 () Real)
(declare-fun l_0_16_296 () Real)
(declare-fun l_0_16_272 () Real)
(declare-fun l_0_16_271 () Real)
(declare-fun l_0_16_270 () Real)
(declare-fun l_0_16_269 () Real)
(declare-fun l_0_16_268 () Real)
(declare-fun l_0_16_244 () Real)
(declare-fun l_0_16_243 () Real)
(declare-fun l_0_16_242 () Real)
(declare-fun l_0_16_241 () Real)
(declare-fun l_0_16_240 () Real)
(declare-fun l_0_16_216 () Real)
(declare-fun l_0_16_215 () Real)
(declare-fun l_0_16_214 () Real)
(declare-fun l_0_16_213 () Real)
(declare-fun l_0_16_212 () Real)
(declare-fun l_0_16_17 () Real)
(declare-fun l_0_16_132 () Real)
(declare-fun l_0_16_131 () Real)
(declare-fun l_0_16_130 () Real)
(declare-fun l_0_16_129 () Real)
(declare-fun l_0_16_128 () Real)
(declare-fun l_0_16_51 () Real)
(declare-fun l_0_16_306 () Real)
(declare-fun l_0_16_305 () Real)
(declare-fun l_0_16_304 () Real)
(declare-fun l_0_16_303 () Real)
(declare-fun l_0_16_278 () Real)
(declare-fun l_0_16_277 () Real)
(declare-fun l_0_16_276 () Real)
(declare-fun l_0_16_275 () Real)
(declare-fun l_0_16_250 () Real)
(declare-fun l_0_16_249 () Real)
(declare-fun l_0_16_248 () Real)
(declare-fun l_0_16_247 () Real)
(declare-fun l_0_16_23 () Real)
(declare-fun l_0_16_222 () Real)
(declare-fun l_0_16_221 () Real)
(declare-fun l_0_16_220 () Real)
(declare-fun l_0_16_219 () Real)
(declare-fun l_0_16_138 () Real)
(declare-fun l_0_16_137 () Real)
(declare-fun l_0_16_136 () Real)
(declare-fun l_0_16_135 () Real)
(declare-fun l_0_16_6 () Real)
(declare-fun l_0_16_34 () Real)
(declare-fun l_0_16_9 () Real)
(declare-fun l_0_16_37 () Real)
(declare-fun l_0_16_41 () Real)
(declare-fun l_0_16_13 () Real)
(declare-fun l_0_16_46 () Real)
(declare-fun l_0_16_18 () Real)
(declare-fun l_0_16_52 () Real)
(declare-fun l_0_16_24 () Real)
(declare-fun l_0_16_38 () Real)
(declare-fun l_0_16_10 () Real)
(declare-fun l_0_16_42 () Real)
(declare-fun l_0_16_14 () Real)
(declare-fun l_0_16_47 () Real)
(declare-fun l_0_16_19 () Real)
(declare-fun l_0_16_53 () Real)
(declare-fun l_0_16_25 () Real)
(declare-fun l_0_16_43 () Real)
(declare-fun l_0_16_15 () Real)
(declare-fun l_0_16_48 () Real)
(declare-fun l_0_16_20 () Real)
(declare-fun l_0_16_54 () Real)
(declare-fun l_0_16_26 () Real)
(declare-fun l_0_16_49 () Real)
(declare-fun l_0_16_21 () Real)
(declare-fun l_0_16_55 () Real)
(declare-fun l_0_16_27 () Real)
(declare-fun l_0_16_56 () Real)
(declare-fun l_0_16_28 () Real)
(declare-fun l_0_16_91 () Real)
(declare-fun l_0_16_85 () Real)
(declare-fun l_0_16_63 () Real)
(declare-fun l_0_16_57 () Real)
(declare-fun l_0_16_92 () Real)
(declare-fun l_0_16_64 () Real)
(declare-fun l_0_16_93 () Real)
(declare-fun l_0_16_90 () Real)
(declare-fun l_0_16_89 () Real)
(declare-fun l_0_16_88 () Real)
(declare-fun l_0_16_65 () Real)
(declare-fun l_0_16_62 () Real)
(declare-fun l_0_16_61 () Real)
(declare-fun l_0_16_60 () Real)
(declare-fun l_0_16_94 () Real)
(declare-fun l_0_16_66 () Real)
(declare-fun l_0_16_98 () Real)
(declare-fun l_0_16_97 () Real)
(declare-fun l_0_16_70 () Real)
(declare-fun l_0_16_69 () Real)
(declare-fun l_0_16_75 () Real)
(declare-fun l_0_16_74 () Real)
(declare-fun l_0_16_73 () Real)
(declare-fun l_0_16_72 () Real)
(declare-fun l_0_16_103 () Real)
(declare-fun l_0_16_102 () Real)
(declare-fun l_0_16_101 () Real)
(declare-fun l_0_16_100 () Real)
(declare-fun l_0_16_81 () Real)
(declare-fun l_0_16_80 () Real)
(declare-fun l_0_16_79 () Real)
(declare-fun l_0_16_78 () Real)
(declare-fun l_0_16_109 () Real)
(declare-fun l_0_16_108 () Real)
(declare-fun l_0_16_107 () Real)
(declare-fun l_0_16_106 () Real)
(declare-fun l_0_16_189 () Real)
(declare-fun l_0_16_161 () Real)
(declare-fun l_0_16_195 () Real)
(declare-fun l_0_16_167 () Real)
(declare-fun l_0_16_301 () Real)
(declare-fun l_0_16_273 () Real)
(declare-fun l_0_16_245 () Real)
(declare-fun l_0_16_217 () Real)
(declare-fun l_0_16_133 () Real)
(declare-fun l_0_16_307 () Real)
(declare-fun l_0_16_279 () Real)
(declare-fun l_0_16_251 () Real)
(declare-fun l_0_16_223 () Real)
(declare-fun l_0_16_139 () Real)
(declare-fun l_0_16_196 () Real)
(declare-fun l_0_16_168 () Real)
(declare-fun l_0_16_99 () Real)
(declare-fun l_0_16_71 () Real)
(declare-fun l_0_16_76 () Real)
(declare-fun l_0_16_104 () Real)
(declare-fun l_0_16_82 () Real)
(declare-fun l_0_16_110 () Real)
(declare-fun l_0_16_77 () Real)
(declare-fun l_0_16_105 () Real)
(declare-fun l_0_16_83 () Real)
(declare-fun l_0_16_111 () Real)
(declare-fun l_0_16_84 () Real)
(declare-fun l_0_16_112 () Real)
(declare-fun l_0_16_308 () Real)
(declare-fun l_0_16_280 () Real)
(declare-fun l_0_16_252 () Real)
(declare-fun l_0_16_224 () Real)
(declare-fun l_0_16_140 () Real)
(declare-fun l_0_17_31 () Real)
(declare-fun l_0_17_30 () Real)
(declare-fun l_0_17_3 () Real)
(declare-fun l_0_17_2 () Real)
(declare-fun l_0_17_208 () Real)
(declare-fun l_0_17_199 () Real)
(declare-fun l_0_17_207 () Real)
(declare-fun l_0_17_198 () Real)
(declare-fun l_0_17_124 () Real)
(declare-fun l_0_17_115 () Real)
(declare-fun l_0_17_123 () Real)
(declare-fun l_0_17_114 () Real)
(declare-fun l_0_17_221 () Real)
(declare-fun l_0_17_206 () Real)
(declare-fun l_0_17_220 () Real)
(declare-fun l_0_17_205 () Real)
(declare-fun l_0_17_219 () Real)
(declare-fun l_0_17_204 () Real)
(declare-fun l_0_17_218 () Real)
(declare-fun l_0_17_203 () Real)
(declare-fun l_0_17_176 () Real)
(declare-fun l_0_17_171 () Real)
(declare-fun l_0_17_175 () Real)
(declare-fun l_0_17_170 () Real)
(declare-fun l_0_17_148 () Real)
(declare-fun l_0_17_143 () Real)
(declare-fun l_0_17_147 () Real)
(declare-fun l_0_17_142 () Real)
(declare-fun l_0_17_137 () Real)
(declare-fun l_0_17_122 () Real)
(declare-fun l_0_17_136 () Real)
(declare-fun l_0_17_121 () Real)
(declare-fun l_0_17_135 () Real)
(declare-fun l_0_17_120 () Real)
(declare-fun l_0_17_134 () Real)
(declare-fun l_0_17_119 () Real)
(declare-fun l_0_17_200 () Real)
(declare-fun l_0_17_197 () Real)
(declare-fun l_0_17_116 () Real)
(declare-fun l_0_17_113 () Real)
(declare-fun l_0_17_201 () Real)
(declare-fun l_0_17_117 () Real)
(declare-fun _a_7_ () Real)
(declare-fun _a_6_ () Real)
(declare-fun l_0_17_213 () Real)
(declare-fun l_0_17_212 () Real)
(declare-fun l_0_17_129 () Real)
(declare-fun l_0_17_128 () Real)
(declare-fun _a_8_ () Real)
(declare-fun l_0_17_29 () Real)
(declare-fun l_0_17_1 () Real)
(declare-fun l_0_17_40 () Real)
(declare-fun l_0_17_39 () Real)
(declare-fun l_0_17_32 () Real)
(declare-fun l_0_17_12 () Real)
(declare-fun l_0_17_11 () Real)
(declare-fun l_0_17_4 () Real)
(declare-fun l_0_17_35 () Real)
(declare-fun l_0_17_7 () Real)
(declare-fun l_0_17_44 () Real)
(declare-fun l_0_17_16 () Real)
(declare-fun l_0_17_96 () Real)
(declare-fun l_0_17_87 () Real)
(declare-fun l_0_17_95 () Real)
(declare-fun l_0_17_86 () Real)
(declare-fun l_0_17_68 () Real)
(declare-fun l_0_17_59 () Real)
(declare-fun l_0_17_67 () Real)
(declare-fun l_0_17_58 () Real)
(declare-fun l_0_17_50 () Real)
(declare-fun l_0_17_179 () Real)
(declare-fun l_0_17_169 () Real)
(declare-fun l_0_17_151 () Real)
(declare-fun l_0_17_141 () Real)
(declare-fun l_0_17_22 () Real)
(declare-fun l_0_17_33 () Real)
(declare-fun l_0_17_5 () Real)
(declare-fun l_0_17_209 () Real)
(declare-fun l_0_17_202 () Real)
(declare-fun l_0_17_125 () Real)
(declare-fun l_0_17_118 () Real)
(declare-fun l_0_17_36 () Real)
(declare-fun l_0_17_8 () Real)
(declare-fun l_0_17_210 () Real)
(declare-fun l_0_17_126 () Real)
(declare-fun l_0_17_211 () Real)
(declare-fun l_0_17_127 () Real)
(declare-fun l_0_17_45 () Real)
(declare-fun l_0_17_216 () Real)
(declare-fun l_0_17_215 () Real)
(declare-fun l_0_17_214 () Real)
(declare-fun l_0_17_17 () Real)
(declare-fun l_0_17_132 () Real)
(declare-fun l_0_17_131 () Real)
(declare-fun l_0_17_130 () Real)
(declare-fun l_0_17_51 () Real)
(declare-fun l_0_17_23 () Real)
(declare-fun l_0_17_222 () Real)
(declare-fun l_0_17_180 () Real)
(declare-fun l_0_17_152 () Real)
(declare-fun l_0_17_138 () Real)
(declare-fun l_0_17_6 () Real)
(declare-fun l_0_17_34 () Real)
(declare-fun l_0_17_9 () Real)
(declare-fun l_0_17_37 () Real)
(declare-fun l_0_17_41 () Real)
(declare-fun l_0_17_13 () Real)
(declare-fun l_0_17_46 () Real)
(declare-fun l_0_17_18 () Real)
(declare-fun l_0_17_52 () Real)
(declare-fun l_0_17_24 () Real)
(declare-fun l_0_17_181 () Real)
(declare-fun l_0_17_174 () Real)
(declare-fun l_0_17_173 () Real)
(declare-fun l_0_17_172 () Real)
(declare-fun l_0_17_153 () Real)
(declare-fun l_0_17_146 () Real)
(declare-fun l_0_17_145 () Real)
(declare-fun l_0_17_144 () Real)
(declare-fun l_0_17_38 () Real)
(declare-fun l_0_17_10 () Real)
(declare-fun l_0_17_42 () Real)
(declare-fun l_0_17_14 () Real)
(declare-fun l_0_17_47 () Real)
(declare-fun l_0_17_19 () Real)
(declare-fun l_0_17_53 () Real)
(declare-fun l_0_17_182 () Real)
(declare-fun l_0_17_178 () Real)
(declare-fun l_0_17_177 () Real)
(declare-fun l_0_17_154 () Real)
(declare-fun l_0_17_150 () Real)
(declare-fun l_0_17_149 () Real)
(declare-fun l_0_17_25 () Real)
(declare-fun l_0_17_43 () Real)
(declare-fun l_0_17_15 () Real)
(declare-fun l_0_17_48 () Real)
(declare-fun l_0_17_20 () Real)
(declare-fun l_0_17_54 () Real)
(declare-fun l_0_17_183 () Real)
(declare-fun l_0_17_155 () Real)
(declare-fun l_0_17_26 () Real)
(declare-fun l_0_17_49 () Real)
(declare-fun l_0_17_21 () Real)
(declare-fun l_0_17_55 () Real)
(declare-fun l_0_17_27 () Real)
(declare-fun l_0_17_188 () Real)
(declare-fun l_0_17_187 () Real)
(declare-fun l_0_17_186 () Real)
(declare-fun l_0_17_185 () Real)
(declare-fun l_0_17_184 () Real)
(declare-fun l_0_17_160 () Real)
(declare-fun l_0_17_159 () Real)
(declare-fun l_0_17_158 () Real)
(declare-fun l_0_17_157 () Real)
(declare-fun l_0_17_156 () Real)
(declare-fun l_0_17_56 () Real)
(declare-fun l_0_17_28 () Real)
(declare-fun l_0_17_194 () Real)
(declare-fun l_0_17_193 () Real)
(declare-fun l_0_17_192 () Real)
(declare-fun l_0_17_191 () Real)
(declare-fun l_0_17_190 () Real)
(declare-fun l_0_17_166 () Real)
(declare-fun l_0_17_165 () Real)
(declare-fun l_0_17_164 () Real)
(declare-fun l_0_17_163 () Real)
(declare-fun l_0_17_162 () Real)
(declare-fun l_0_17_91 () Real)
(declare-fun l_0_17_85 () Real)
(declare-fun l_0_17_63 () Real)
(declare-fun l_0_17_57 () Real)
(declare-fun l_0_17_92 () Real)
(declare-fun l_0_17_64 () Real)
(declare-fun l_0_17_93 () Real)
(declare-fun l_0_17_90 () Real)
(declare-fun l_0_17_89 () Real)
(declare-fun l_0_17_88 () Real)
(declare-fun l_0_17_65 () Real)
(declare-fun l_0_17_62 () Real)
(declare-fun l_0_17_61 () Real)
(declare-fun l_0_17_60 () Real)
(declare-fun l_0_17_94 () Real)
(declare-fun l_0_17_66 () Real)
(declare-fun l_0_17_98 () Real)
(declare-fun l_0_17_97 () Real)
(declare-fun l_0_17_70 () Real)
(declare-fun l_0_17_69 () Real)
(declare-fun l_0_17_75 () Real)
(declare-fun l_0_17_74 () Real)
(declare-fun l_0_17_73 () Real)
(declare-fun l_0_17_72 () Real)
(declare-fun l_0_17_103 () Real)
(declare-fun l_0_17_102 () Real)
(declare-fun l_0_17_101 () Real)
(declare-fun l_0_17_100 () Real)
(declare-fun l_0_17_81 () Real)
(declare-fun l_0_17_80 () Real)
(declare-fun l_0_17_79 () Real)
(declare-fun l_0_17_78 () Real)
(declare-fun l_0_17_109 () Real)
(declare-fun l_0_17_108 () Real)
(declare-fun l_0_17_107 () Real)
(declare-fun l_0_17_106 () Real)
(declare-fun l_0_17_217 () Real)
(declare-fun l_0_17_133 () Real)
(declare-fun l_0_17_223 () Real)
(declare-fun l_0_17_139 () Real)
(declare-fun l_0_17_189 () Real)
(declare-fun l_0_17_161 () Real)
(declare-fun l_0_17_195 () Real)
(declare-fun l_0_17_167 () Real)
(declare-fun l_0_17_99 () Real)
(declare-fun l_0_17_71 () Real)
(declare-fun l_0_17_76 () Real)
(declare-fun l_0_17_104 () Real)
(declare-fun l_0_17_82 () Real)
(declare-fun l_0_17_110 () Real)
(declare-fun l_0_17_77 () Real)
(declare-fun l_0_17_105 () Real)
(declare-fun l_0_17_83 () Real)
(declare-fun l_0_17_111 () Real)
(declare-fun l_0_17_84 () Real)
(declare-fun l_0_17_112 () Real)
(declare-fun l_0_17_224 () Real)
(declare-fun l_0_17_140 () Real)
(declare-fun l_0_17_196 () Real)
(declare-fun l_0_17_168 () Real)
(declare-fun l_0_18_31 () Real)
(declare-fun l_0_18_30 () Real)
(declare-fun l_0_18_3 () Real)
(declare-fun l_0_18_249 () Real)
(declare-fun l_0_18_234 () Real)
(declare-fun l_0_18_248 () Real)
(declare-fun l_0_18_233 () Real)
(declare-fun l_0_18_247 () Real)
(declare-fun l_0_18_232 () Real)
(declare-fun l_0_18_246 () Real)
(declare-fun l_0_18_231 () Real)
(declare-fun l_0_18_221 () Real)
(declare-fun l_0_18_206 () Real)
(declare-fun l_0_18_220 () Real)
(declare-fun l_0_18_205 () Real)
(declare-fun l_0_18_219 () Real)
(declare-fun l_0_18_204 () Real)
(declare-fun l_0_18_218 () Real)
(declare-fun l_0_18_203 () Real)
(declare-fun l_0_18_2 () Real)
(declare-fun l_0_18_176 () Real)
(declare-fun l_0_18_171 () Real)
(declare-fun l_0_18_175 () Real)
(declare-fun l_0_18_170 () Real)
(declare-fun l_0_18_148 () Real)
(declare-fun l_0_18_143 () Real)
(declare-fun l_0_18_147 () Real)
(declare-fun l_0_18_142 () Real)
(declare-fun l_0_18_137 () Real)
(declare-fun l_0_18_122 () Real)
(declare-fun l_0_18_136 () Real)
(declare-fun l_0_18_121 () Real)
(declare-fun l_0_18_135 () Real)
(declare-fun l_0_18_120 () Real)
(declare-fun l_0_18_134 () Real)
(declare-fun l_0_18_119 () Real)
(declare-fun l_0_18_228 () Real)
(declare-fun l_0_18_225 () Real)
(declare-fun l_0_18_200 () Real)
(declare-fun l_0_18_197 () Real)
(declare-fun l_0_18_116 () Real)
(declare-fun l_0_18_113 () Real)
(declare-fun l_0_18_229 () Real)
(declare-fun l_0_18_227 () Real)
(declare-fun l_0_18_226 () Real)
(declare-fun l_0_18_201 () Real)
(declare-fun l_0_18_199 () Real)
(declare-fun l_0_18_198 () Real)
(declare-fun l_0_18_117 () Real)
(declare-fun l_0_18_115 () Real)
(declare-fun l_0_18_114 () Real)
(declare-fun l_0_18_241 () Real)
(declare-fun l_0_18_240 () Real)
(declare-fun l_0_18_213 () Real)
(declare-fun l_0_18_212 () Real)
(declare-fun l_0_18_129 () Real)
(declare-fun l_0_18_128 () Real)
(declare-fun l_0_18_236 () Real)
(declare-fun l_0_18_235 () Real)
(declare-fun l_0_18_208 () Real)
(declare-fun l_0_18_207 () Real)
(declare-fun l_0_18_124 () Real)
(declare-fun l_0_18_123 () Real)
(declare-fun l_0_18_29 () Real)
(declare-fun l_0_18_1 () Real)
(declare-fun l_0_18_40 () Real)
(declare-fun l_0_18_39 () Real)
(declare-fun l_0_18_32 () Real)
(declare-fun l_0_18_12 () Real)
(declare-fun l_0_18_11 () Real)
(declare-fun l_0_18_4 () Real)
(declare-fun l_0_18_35 () Real)
(declare-fun l_0_18_7 () Real)
(declare-fun l_0_18_44 () Real)
(declare-fun l_0_18_16 () Real)
(declare-fun l_0_18_96 () Real)
(declare-fun l_0_18_87 () Real)
(declare-fun l_0_18_95 () Real)
(declare-fun l_0_18_86 () Real)
(declare-fun l_0_18_68 () Real)
(declare-fun l_0_18_59 () Real)
(declare-fun l_0_18_67 () Real)
(declare-fun l_0_18_58 () Real)
(declare-fun l_0_18_50 () Real)
(declare-fun l_0_18_179 () Real)
(declare-fun l_0_18_169 () Real)
(declare-fun l_0_18_151 () Real)
(declare-fun l_0_18_141 () Real)
(declare-fun l_0_18_22 () Real)
(declare-fun l_0_18_33 () Real)
(declare-fun l_0_18_5 () Real)
(declare-fun l_0_18_237 () Real)
(declare-fun l_0_18_230 () Real)
(declare-fun l_0_18_209 () Real)
(declare-fun l_0_18_202 () Real)
(declare-fun l_0_18_125 () Real)
(declare-fun l_0_18_118 () Real)
(declare-fun l_0_18_36 () Real)
(declare-fun l_0_18_8 () Real)
(declare-fun l_0_18_238 () Real)
(declare-fun l_0_18_210 () Real)
(declare-fun l_0_18_126 () Real)
(declare-fun l_0_18_239 () Real)
(declare-fun l_0_18_211 () Real)
(declare-fun l_0_18_127 () Real)
(declare-fun l_0_18_45 () Real)
(declare-fun l_0_18_244 () Real)
(declare-fun l_0_18_243 () Real)
(declare-fun l_0_18_242 () Real)
(declare-fun l_0_18_216 () Real)
(declare-fun l_0_18_215 () Real)
(declare-fun l_0_18_214 () Real)
(declare-fun l_0_18_17 () Real)
(declare-fun l_0_18_132 () Real)
(declare-fun l_0_18_131 () Real)
(declare-fun l_0_18_130 () Real)
(declare-fun l_0_18_51 () Real)
(declare-fun l_0_18_250 () Real)
(declare-fun l_0_18_23 () Real)
(declare-fun l_0_18_222 () Real)
(declare-fun l_0_18_180 () Real)
(declare-fun l_0_18_152 () Real)
(declare-fun l_0_18_138 () Real)
(declare-fun l_0_18_6 () Real)
(declare-fun l_0_18_34 () Real)
(declare-fun l_0_18_9 () Real)
(declare-fun l_0_18_37 () Real)
(declare-fun l_0_18_41 () Real)
(declare-fun l_0_18_13 () Real)
(declare-fun l_0_18_46 () Real)
(declare-fun l_0_18_18 () Real)
(declare-fun l_0_18_52 () Real)
(declare-fun l_0_18_24 () Real)
(declare-fun l_0_18_181 () Real)
(declare-fun l_0_18_174 () Real)
(declare-fun l_0_18_173 () Real)
(declare-fun l_0_18_172 () Real)
(declare-fun l_0_18_153 () Real)
(declare-fun l_0_18_146 () Real)
(declare-fun l_0_18_145 () Real)
(declare-fun l_0_18_144 () Real)
(declare-fun l_0_18_38 () Real)
(declare-fun l_0_18_10 () Real)
(declare-fun l_0_18_42 () Real)
(declare-fun l_0_18_14 () Real)
(declare-fun l_0_18_47 () Real)
(declare-fun l_0_18_19 () Real)
(declare-fun l_0_18_53 () Real)
(declare-fun l_0_18_182 () Real)
(declare-fun l_0_18_178 () Real)
(declare-fun l_0_18_177 () Real)
(declare-fun l_0_18_154 () Real)
(declare-fun l_0_18_150 () Real)
(declare-fun l_0_18_149 () Real)
(declare-fun l_0_18_25 () Real)
(declare-fun l_0_18_43 () Real)
(declare-fun l_0_18_15 () Real)
(declare-fun l_0_18_48 () Real)
(declare-fun l_0_18_20 () Real)
(declare-fun l_0_18_54 () Real)
(declare-fun l_0_18_183 () Real)
(declare-fun l_0_18_155 () Real)
(declare-fun l_0_18_26 () Real)
(declare-fun l_0_18_49 () Real)
(declare-fun l_0_18_21 () Real)
(declare-fun l_0_18_55 () Real)
(declare-fun l_0_18_27 () Real)
(declare-fun l_0_18_188 () Real)
(declare-fun l_0_18_187 () Real)
(declare-fun l_0_18_186 () Real)
(declare-fun l_0_18_185 () Real)
(declare-fun l_0_18_184 () Real)
(declare-fun l_0_18_160 () Real)
(declare-fun l_0_18_159 () Real)
(declare-fun l_0_18_158 () Real)
(declare-fun l_0_18_157 () Real)
(declare-fun l_0_18_156 () Real)
(declare-fun l_0_18_56 () Real)
(declare-fun l_0_18_28 () Real)
(declare-fun l_0_18_194 () Real)
(declare-fun l_0_18_193 () Real)
(declare-fun l_0_18_192 () Real)
(declare-fun l_0_18_191 () Real)
(declare-fun l_0_18_190 () Real)
(declare-fun l_0_18_166 () Real)
(declare-fun l_0_18_165 () Real)
(declare-fun l_0_18_164 () Real)
(declare-fun l_0_18_163 () Real)
(declare-fun l_0_18_162 () Real)
(declare-fun l_0_18_91 () Real)
(declare-fun l_0_18_85 () Real)
(declare-fun l_0_18_63 () Real)
(declare-fun l_0_18_57 () Real)
(declare-fun l_0_18_92 () Real)
(declare-fun l_0_18_64 () Real)
(declare-fun l_0_18_93 () Real)
(declare-fun l_0_18_90 () Real)
(declare-fun l_0_18_89 () Real)
(declare-fun l_0_18_88 () Real)
(declare-fun l_0_18_65 () Real)
(declare-fun l_0_18_62 () Real)
(declare-fun l_0_18_61 () Real)
(declare-fun l_0_18_60 () Real)
(declare-fun l_0_18_94 () Real)
(declare-fun l_0_18_66 () Real)
(declare-fun l_0_18_98 () Real)
(declare-fun l_0_18_97 () Real)
(declare-fun l_0_18_70 () Real)
(declare-fun l_0_18_69 () Real)
(declare-fun l_0_18_75 () Real)
(declare-fun l_0_18_74 () Real)
(declare-fun l_0_18_73 () Real)
(declare-fun l_0_18_72 () Real)
(declare-fun l_0_18_103 () Real)
(declare-fun l_0_18_102 () Real)
(declare-fun l_0_18_101 () Real)
(declare-fun l_0_18_100 () Real)
(declare-fun l_0_18_81 () Real)
(declare-fun l_0_18_80 () Real)
(declare-fun l_0_18_79 () Real)
(declare-fun l_0_18_78 () Real)
(declare-fun l_0_18_109 () Real)
(declare-fun l_0_18_108 () Real)
(declare-fun l_0_18_107 () Real)
(declare-fun l_0_18_106 () Real)
(declare-fun l_0_18_245 () Real)
(declare-fun l_0_18_217 () Real)
(declare-fun l_0_18_133 () Real)
(declare-fun l_0_18_251 () Real)
(declare-fun l_0_18_223 () Real)
(declare-fun l_0_18_139 () Real)
(declare-fun l_0_18_189 () Real)
(declare-fun l_0_18_161 () Real)
(declare-fun l_0_18_195 () Real)
(declare-fun l_0_18_167 () Real)
(declare-fun l_0_18_99 () Real)
(declare-fun l_0_18_71 () Real)
(declare-fun l_0_18_76 () Real)
(declare-fun l_0_18_104 () Real)
(declare-fun l_0_18_82 () Real)
(declare-fun l_0_18_110 () Real)
(declare-fun l_0_18_77 () Real)
(declare-fun l_0_18_105 () Real)
(declare-fun l_0_18_83 () Real)
(declare-fun l_0_18_111 () Real)
(declare-fun l_0_18_84 () Real)
(declare-fun l_0_18_112 () Real)
(declare-fun l_0_18_252 () Real)
(declare-fun l_0_18_224 () Real)
(declare-fun l_0_18_140 () Real)
(declare-fun l_0_18_196 () Real)
(declare-fun l_0_18_168 () Real)
(declare-fun l_0_19_255 () Real)
(declare-fun l_0_19_254 () Real)
(declare-fun l_0_19_227 () Real)
(declare-fun l_0_19_226 () Real)
(declare-fun l_0_19_199 () Real)
(declare-fun l_0_19_198 () Real)
(declare-fun l_0_19_115 () Real)
(declare-fun l_0_19_114 () Real)
(declare-fun l_0_19_87 () Real)
(declare-fun l_0_19_86 () Real)
(declare-fun l_0_19_59 () Real)
(declare-fun l_0_19_58 () Real)
(declare-fun l_0_19_274 () Real)
(declare-fun l_0_19_253 () Real)
(declare-fun l_0_19_246 () Real)
(declare-fun l_0_19_225 () Real)
(declare-fun l_0_19_218 () Real)
(declare-fun l_0_19_197 () Real)
(declare-fun l_0_19_170 () Real)
(declare-fun l_0_19_169 () Real)
(declare-fun l_0_19_142 () Real)
(declare-fun l_0_19_141 () Real)
(declare-fun l_0_19_134 () Real)
(declare-fun l_0_19_113 () Real)
(declare-fun l_0_19_275 () Real)
(declare-fun l_0_19_247 () Real)
(declare-fun l_0_19_219 () Real)
(declare-fun l_0_19_171 () Real)
(declare-fun l_0_19_143 () Real)
(declare-fun l_0_19_135 () Real)
(declare-fun l_0_19_29 () Real)
(declare-fun l_0_19_1 () Real)
(declare-fun l_0_19_30 () Real)
(declare-fun l_0_19_263 () Real)
(declare-fun l_0_19_235 () Real)
(declare-fun l_0_19_207 () Real)
(declare-fun l_0_19_123 () Real)
(declare-fun l_0_19_2 () Real)
(declare-fun l_0_19_40 () Real)
(declare-fun l_0_19_31 () Real)
(declare-fun l_0_19_39 () Real)
(declare-fun l_0_19_32 () Real)
(declare-fun l_0_19_3 () Real)
(declare-fun l_0_19_12 () Real)
(declare-fun l_0_19_11 () Real)
(declare-fun l_0_19_4 () Real)
(declare-fun l_0_19_35 () Real)
(declare-fun l_0_19_7 () Real)
(declare-fun l_0_19_44 () Real)
(declare-fun l_0_19_16 () Real)
(declare-fun l_0_19_96 () Real)
(declare-fun l_0_19_95 () Real)
(declare-fun l_0_19_68 () Real)
(declare-fun l_0_19_67 () Real)
(declare-fun l_0_19_50 () Real)
(declare-fun l_0_19_179 () Real)
(declare-fun l_0_19_151 () Real)
(declare-fun l_0_19_22 () Real)
(declare-fun l_0_19_264 () Real)
(declare-fun l_0_19_236 () Real)
(declare-fun l_0_19_208 () Real)
(declare-fun l_0_19_124 () Real)
(declare-fun l_0_19_33 () Real)
(declare-fun l_0_19_5 () Real)
(declare-fun l_0_19_265 () Real)
(declare-fun l_0_19_258 () Real)
(declare-fun l_0_19_257 () Real)
(declare-fun l_0_19_256 () Real)
(declare-fun l_0_19_237 () Real)
(declare-fun l_0_19_230 () Real)
(declare-fun l_0_19_229 () Real)
(declare-fun l_0_19_228 () Real)
(declare-fun l_0_19_209 () Real)
(declare-fun l_0_19_202 () Real)
(declare-fun l_0_19_201 () Real)
(declare-fun l_0_19_200 () Real)
(declare-fun l_0_19_125 () Real)
(declare-fun l_0_19_118 () Real)
(declare-fun l_0_19_117 () Real)
(declare-fun l_0_19_116 () Real)
(declare-fun l_0_19_36 () Real)
(declare-fun l_0_19_8 () Real)
(declare-fun l_0_19_266 () Real)
(declare-fun l_0_19_262 () Real)
(declare-fun l_0_19_261 () Real)
(declare-fun l_0_19_260 () Real)
(declare-fun l_0_19_259 () Real)
(declare-fun l_0_19_238 () Real)
(declare-fun l_0_19_234 () Real)
(declare-fun l_0_19_233 () Real)
(declare-fun l_0_19_232 () Real)
(declare-fun l_0_19_231 () Real)
(declare-fun l_0_19_210 () Real)
(declare-fun l_0_19_206 () Real)
(declare-fun l_0_19_205 () Real)
(declare-fun l_0_19_204 () Real)
(declare-fun l_0_19_203 () Real)
(declare-fun l_0_19_126 () Real)
(declare-fun l_0_19_122 () Real)
(declare-fun l_0_19_121 () Real)
(declare-fun l_0_19_120 () Real)
(declare-fun l_0_19_119 () Real)
(declare-fun l_0_19_267 () Real)
(declare-fun l_0_19_239 () Real)
(declare-fun l_0_19_211 () Real)
(declare-fun l_0_19_127 () Real)
(declare-fun l_0_19_45 () Real)
(declare-fun l_0_19_272 () Real)
(declare-fun l_0_19_271 () Real)
(declare-fun l_0_19_270 () Real)
(declare-fun l_0_19_269 () Real)
(declare-fun l_0_19_268 () Real)
(declare-fun l_0_19_244 () Real)
(declare-fun l_0_19_243 () Real)
(declare-fun l_0_19_242 () Real)
(declare-fun l_0_19_241 () Real)
(declare-fun l_0_19_240 () Real)
(declare-fun l_0_19_216 () Real)
(declare-fun l_0_19_215 () Real)
(declare-fun l_0_19_214 () Real)
(declare-fun l_0_19_213 () Real)
(declare-fun l_0_19_212 () Real)
(declare-fun l_0_19_17 () Real)
(declare-fun l_0_19_132 () Real)
(declare-fun l_0_19_131 () Real)
(declare-fun l_0_19_130 () Real)
(declare-fun l_0_19_129 () Real)
(declare-fun l_0_19_128 () Real)
(declare-fun l_0_19_51 () Real)
(declare-fun l_0_19_278 () Real)
(declare-fun l_0_19_277 () Real)
(declare-fun l_0_19_276 () Real)
(declare-fun l_0_19_250 () Real)
(declare-fun l_0_19_249 () Real)
(declare-fun l_0_19_248 () Real)
(declare-fun l_0_19_23 () Real)
(declare-fun l_0_19_222 () Real)
(declare-fun l_0_19_221 () Real)
(declare-fun l_0_19_220 () Real)
(declare-fun l_0_19_180 () Real)
(declare-fun l_0_19_152 () Real)
(declare-fun l_0_19_138 () Real)
(declare-fun l_0_19_137 () Real)
(declare-fun l_0_19_136 () Real)
(declare-fun l_0_19_6 () Real)
(declare-fun l_0_19_34 () Real)
(declare-fun l_0_19_9 () Real)
(declare-fun l_0_19_37 () Real)
(declare-fun l_0_19_41 () Real)
(declare-fun l_0_19_13 () Real)
(declare-fun l_0_19_46 () Real)
(declare-fun l_0_19_18 () Real)
(declare-fun l_0_19_52 () Real)
(declare-fun l_0_19_24 () Real)
(declare-fun l_0_19_181 () Real)
(declare-fun l_0_19_174 () Real)
(declare-fun l_0_19_173 () Real)
(declare-fun l_0_19_172 () Real)
(declare-fun l_0_19_153 () Real)
(declare-fun l_0_19_146 () Real)
(declare-fun l_0_19_145 () Real)
(declare-fun l_0_19_144 () Real)
(declare-fun l_0_19_38 () Real)
(declare-fun l_0_19_10 () Real)
(declare-fun l_0_19_42 () Real)
(declare-fun l_0_19_14 () Real)
(declare-fun l_0_19_47 () Real)
(declare-fun l_0_19_19 () Real)
(declare-fun l_0_19_53 () Real)
(declare-fun l_0_19_182 () Real)
(declare-fun l_0_19_178 () Real)
(declare-fun l_0_19_177 () Real)
(declare-fun l_0_19_176 () Real)
(declare-fun l_0_19_175 () Real)
(declare-fun l_0_19_154 () Real)
(declare-fun l_0_19_150 () Real)
(declare-fun l_0_19_149 () Real)
(declare-fun l_0_19_148 () Real)
(declare-fun l_0_19_147 () Real)
(declare-fun l_0_19_25 () Real)
(declare-fun l_0_19_43 () Real)
(declare-fun l_0_19_15 () Real)
(declare-fun l_0_19_48 () Real)
(declare-fun l_0_19_20 () Real)
(declare-fun l_0_19_54 () Real)
(declare-fun l_0_19_183 () Real)
(declare-fun l_0_19_155 () Real)
(declare-fun l_0_19_26 () Real)
(declare-fun l_0_19_49 () Real)
(declare-fun l_0_19_21 () Real)
(declare-fun l_0_19_55 () Real)
(declare-fun l_0_19_27 () Real)
(declare-fun l_0_19_188 () Real)
(declare-fun l_0_19_187 () Real)
(declare-fun l_0_19_186 () Real)
(declare-fun l_0_19_185 () Real)
(declare-fun l_0_19_184 () Real)
(declare-fun l_0_19_160 () Real)
(declare-fun l_0_19_159 () Real)
(declare-fun l_0_19_158 () Real)
(declare-fun l_0_19_157 () Real)
(declare-fun l_0_19_156 () Real)
(declare-fun l_0_19_56 () Real)
(declare-fun l_0_19_28 () Real)
(declare-fun l_0_19_194 () Real)
(declare-fun l_0_19_193 () Real)
(declare-fun l_0_19_192 () Real)
(declare-fun l_0_19_191 () Real)
(declare-fun l_0_19_190 () Real)
(declare-fun l_0_19_166 () Real)
(declare-fun l_0_19_165 () Real)
(declare-fun l_0_19_164 () Real)
(declare-fun l_0_19_163 () Real)
(declare-fun l_0_19_162 () Real)
(declare-fun l_0_19_91 () Real)
(declare-fun l_0_19_85 () Real)
(declare-fun l_0_19_63 () Real)
(declare-fun l_0_19_57 () Real)
(declare-fun l_0_19_92 () Real)
(declare-fun l_0_19_64 () Real)
(declare-fun l_0_19_93 () Real)
(declare-fun l_0_19_90 () Real)
(declare-fun l_0_19_89 () Real)
(declare-fun l_0_19_88 () Real)
(declare-fun l_0_19_65 () Real)
(declare-fun l_0_19_62 () Real)
(declare-fun l_0_19_61 () Real)
(declare-fun l_0_19_60 () Real)
(declare-fun l_0_19_94 () Real)
(declare-fun l_0_19_66 () Real)
(declare-fun l_0_19_98 () Real)
(declare-fun l_0_19_97 () Real)
(declare-fun l_0_19_70 () Real)
(declare-fun l_0_19_69 () Real)
(declare-fun l_0_19_75 () Real)
(declare-fun l_0_19_74 () Real)
(declare-fun l_0_19_73 () Real)
(declare-fun l_0_19_72 () Real)
(declare-fun l_0_19_103 () Real)
(declare-fun l_0_19_102 () Real)
(declare-fun l_0_19_101 () Real)
(declare-fun l_0_19_100 () Real)
(declare-fun l_0_19_81 () Real)
(declare-fun l_0_19_80 () Real)
(declare-fun l_0_19_79 () Real)
(declare-fun l_0_19_78 () Real)
(declare-fun l_0_19_109 () Real)
(declare-fun l_0_19_108 () Real)
(declare-fun l_0_19_107 () Real)
(declare-fun l_0_19_106 () Real)
(declare-fun l_0_19_273 () Real)
(declare-fun l_0_19_245 () Real)
(declare-fun l_0_19_217 () Real)
(declare-fun l_0_19_133 () Real)
(declare-fun l_0_19_279 () Real)
(declare-fun l_0_19_251 () Real)
(declare-fun l_0_19_223 () Real)
(declare-fun l_0_19_139 () Real)
(declare-fun l_0_19_189 () Real)
(declare-fun l_0_19_161 () Real)
(declare-fun l_0_19_195 () Real)
(declare-fun l_0_19_167 () Real)
(declare-fun l_0_19_99 () Real)
(declare-fun l_0_19_71 () Real)
(declare-fun l_0_19_76 () Real)
(declare-fun l_0_19_104 () Real)
(declare-fun l_0_19_82 () Real)
(declare-fun l_0_19_110 () Real)
(declare-fun l_0_19_77 () Real)
(declare-fun l_0_19_105 () Real)
(declare-fun l_0_19_83 () Real)
(declare-fun l_0_19_111 () Real)
(declare-fun l_0_19_84 () Real)
(declare-fun l_0_19_112 () Real)
(declare-fun l_0_19_280 () Real)
(declare-fun l_0_19_252 () Real)
(declare-fun l_0_19_224 () Real)
(declare-fun l_0_19_140 () Real)
(declare-fun l_0_19_196 () Real)
(declare-fun l_0_19_168 () Real)
(declare-fun l_0_20_87 () Real)
(declare-fun l_0_20_86 () Real)
(declare-fun l_0_20_59 () Real)
(declare-fun l_0_20_58 () Real)
(declare-fun l_0_20_302 () Real)
(declare-fun l_0_20_281 () Real)
(declare-fun l_0_20_274 () Real)
(declare-fun l_0_20_253 () Real)
(declare-fun l_0_20_246 () Real)
(declare-fun l_0_20_225 () Real)
(declare-fun l_0_20_218 () Real)
(declare-fun l_0_20_197 () Real)
(declare-fun l_0_20_170 () Real)
(declare-fun l_0_20_169 () Real)
(declare-fun l_0_20_142 () Real)
(declare-fun l_0_20_141 () Real)
(declare-fun l_0_20_134 () Real)
(declare-fun l_0_20_113 () Real)
(declare-fun l_0_20_303 () Real)
(declare-fun l_0_20_283 () Real)
(declare-fun l_0_20_282 () Real)
(declare-fun l_0_20_275 () Real)
(declare-fun l_0_20_255 () Real)
(declare-fun l_0_20_254 () Real)
(declare-fun l_0_20_247 () Real)
(declare-fun l_0_20_227 () Real)
(declare-fun l_0_20_226 () Real)
(declare-fun l_0_20_219 () Real)
(declare-fun l_0_20_199 () Real)
(declare-fun l_0_20_198 () Real)
(declare-fun l_0_20_171 () Real)
(declare-fun l_0_20_143 () Real)
(declare-fun l_0_20_135 () Real)
(declare-fun l_0_20_115 () Real)
(declare-fun l_0_20_114 () Real)
(declare-fun l_0_20_29 () Real)
(declare-fun l_0_20_1 () Real)
(declare-fun l_0_20_30 () Real)
(declare-fun l_0_20_291 () Real)
(declare-fun l_0_20_263 () Real)
(declare-fun l_0_20_235 () Real)
(declare-fun l_0_20_207 () Real)
(declare-fun l_0_20_123 () Real)
(declare-fun l_0_20_2 () Real)
(declare-fun l_0_20_40 () Real)
(declare-fun l_0_20_31 () Real)
(declare-fun l_0_20_39 () Real)
(declare-fun l_0_20_32 () Real)
(declare-fun l_0_20_3 () Real)
(declare-fun l_0_20_12 () Real)
(declare-fun l_0_20_11 () Real)
(declare-fun l_0_20_4 () Real)
(declare-fun l_0_20_35 () Real)
(declare-fun l_0_20_7 () Real)
(declare-fun l_0_20_44 () Real)
(declare-fun l_0_20_16 () Real)
(declare-fun l_0_20_96 () Real)
(declare-fun l_0_20_95 () Real)
(declare-fun l_0_20_68 () Real)
(declare-fun l_0_20_67 () Real)
(declare-fun l_0_20_50 () Real)
(declare-fun l_0_20_179 () Real)
(declare-fun l_0_20_151 () Real)
(declare-fun l_0_20_22 () Real)
(declare-fun l_0_20_292 () Real)
(declare-fun l_0_20_264 () Real)
(declare-fun l_0_20_236 () Real)
(declare-fun l_0_20_208 () Real)
(declare-fun l_0_20_124 () Real)
(declare-fun l_0_20_33 () Real)
(declare-fun l_0_20_5 () Real)
(declare-fun l_0_20_293 () Real)
(declare-fun l_0_20_286 () Real)
(declare-fun l_0_20_285 () Real)
(declare-fun l_0_20_284 () Real)
(declare-fun l_0_20_265 () Real)
(declare-fun l_0_20_258 () Real)
(declare-fun l_0_20_257 () Real)
(declare-fun l_0_20_256 () Real)
(declare-fun l_0_20_237 () Real)
(declare-fun l_0_20_230 () Real)
(declare-fun l_0_20_229 () Real)
(declare-fun l_0_20_228 () Real)
(declare-fun l_0_20_209 () Real)
(declare-fun l_0_20_202 () Real)
(declare-fun l_0_20_201 () Real)
(declare-fun l_0_20_200 () Real)
(declare-fun l_0_20_125 () Real)
(declare-fun l_0_20_118 () Real)
(declare-fun l_0_20_117 () Real)
(declare-fun l_0_20_116 () Real)
(declare-fun l_0_20_36 () Real)
(declare-fun l_0_20_8 () Real)
(declare-fun l_0_20_294 () Real)
(declare-fun l_0_20_290 () Real)
(declare-fun l_0_20_289 () Real)
(declare-fun l_0_20_288 () Real)
(declare-fun l_0_20_287 () Real)
(declare-fun l_0_20_266 () Real)
(declare-fun l_0_20_262 () Real)
(declare-fun l_0_20_261 () Real)
(declare-fun l_0_20_260 () Real)
(declare-fun l_0_20_259 () Real)
(declare-fun l_0_20_238 () Real)
(declare-fun l_0_20_234 () Real)
(declare-fun l_0_20_233 () Real)
(declare-fun l_0_20_232 () Real)
(declare-fun l_0_20_231 () Real)
(declare-fun l_0_20_210 () Real)
(declare-fun l_0_20_206 () Real)
(declare-fun l_0_20_205 () Real)
(declare-fun l_0_20_204 () Real)
(declare-fun l_0_20_203 () Real)
(declare-fun l_0_20_126 () Real)
(declare-fun l_0_20_122 () Real)
(declare-fun l_0_20_121 () Real)
(declare-fun l_0_20_120 () Real)
(declare-fun l_0_20_119 () Real)
(declare-fun l_0_20_295 () Real)
(declare-fun l_0_20_267 () Real)
(declare-fun l_0_20_239 () Real)
(declare-fun l_0_20_211 () Real)
(declare-fun l_0_20_127 () Real)
(declare-fun l_0_20_45 () Real)
(declare-fun l_0_20_300 () Real)
(declare-fun l_0_20_299 () Real)
(declare-fun l_0_20_298 () Real)
(declare-fun l_0_20_297 () Real)
(declare-fun l_0_20_296 () Real)
(declare-fun l_0_20_272 () Real)
(declare-fun l_0_20_271 () Real)
(declare-fun l_0_20_270 () Real)
(declare-fun l_0_20_269 () Real)
(declare-fun l_0_20_268 () Real)
(declare-fun l_0_20_244 () Real)
(declare-fun l_0_20_243 () Real)
(declare-fun l_0_20_242 () Real)
(declare-fun l_0_20_241 () Real)
(declare-fun l_0_20_240 () Real)
(declare-fun l_0_20_216 () Real)
(declare-fun l_0_20_215 () Real)
(declare-fun l_0_20_214 () Real)
(declare-fun l_0_20_213 () Real)
(declare-fun l_0_20_212 () Real)
(declare-fun l_0_20_17 () Real)
(declare-fun l_0_20_132 () Real)
(declare-fun l_0_20_131 () Real)
(declare-fun l_0_20_130 () Real)
(declare-fun l_0_20_129 () Real)
(declare-fun l_0_20_128 () Real)
(declare-fun l_0_20_51 () Real)
(declare-fun l_0_20_306 () Real)
(declare-fun l_0_20_305 () Real)
(declare-fun l_0_20_304 () Real)
(declare-fun l_0_20_278 () Real)
(declare-fun l_0_20_277 () Real)
(declare-fun l_0_20_276 () Real)
(declare-fun l_0_20_250 () Real)
(declare-fun l_0_20_249 () Real)
(declare-fun l_0_20_248 () Real)
(declare-fun l_0_20_23 () Real)
(declare-fun l_0_20_222 () Real)
(declare-fun l_0_20_221 () Real)
(declare-fun l_0_20_220 () Real)
(declare-fun l_0_20_180 () Real)
(declare-fun l_0_20_152 () Real)
(declare-fun l_0_20_138 () Real)
(declare-fun l_0_20_137 () Real)
(declare-fun l_0_20_136 () Real)
(declare-fun l_0_20_6 () Real)
(declare-fun l_0_20_34 () Real)
(declare-fun l_0_20_9 () Real)
(declare-fun l_0_20_37 () Real)
(declare-fun l_0_20_41 () Real)
(declare-fun l_0_20_13 () Real)
(declare-fun l_0_20_46 () Real)
(declare-fun l_0_20_18 () Real)
(declare-fun l_0_20_52 () Real)
(declare-fun l_0_20_24 () Real)
(declare-fun l_0_20_181 () Real)
(declare-fun l_0_20_174 () Real)
(declare-fun l_0_20_173 () Real)
(declare-fun l_0_20_172 () Real)
(declare-fun l_0_20_153 () Real)
(declare-fun l_0_20_146 () Real)
(declare-fun l_0_20_145 () Real)
(declare-fun l_0_20_144 () Real)
(declare-fun l_0_20_38 () Real)
(declare-fun l_0_20_10 () Real)
(declare-fun l_0_20_42 () Real)
(declare-fun l_0_20_14 () Real)
(declare-fun l_0_20_47 () Real)
(declare-fun l_0_20_19 () Real)
(declare-fun l_0_20_53 () Real)
(declare-fun l_0_20_182 () Real)
(declare-fun l_0_20_178 () Real)
(declare-fun l_0_20_177 () Real)
(declare-fun l_0_20_176 () Real)
(declare-fun l_0_20_175 () Real)
(declare-fun l_0_20_154 () Real)
(declare-fun l_0_20_150 () Real)
(declare-fun l_0_20_149 () Real)
(declare-fun l_0_20_148 () Real)
(declare-fun l_0_20_147 () Real)
(declare-fun l_0_20_25 () Real)
(declare-fun l_0_20_43 () Real)
(declare-fun l_0_20_15 () Real)
(declare-fun l_0_20_48 () Real)
(declare-fun l_0_20_20 () Real)
(declare-fun l_0_20_54 () Real)
(declare-fun l_0_20_183 () Real)
(declare-fun l_0_20_155 () Real)
(declare-fun l_0_20_26 () Real)
(declare-fun l_0_20_49 () Real)
(declare-fun l_0_20_21 () Real)
(declare-fun l_0_20_55 () Real)
(declare-fun l_0_20_27 () Real)
(declare-fun l_0_20_188 () Real)
(declare-fun l_0_20_187 () Real)
(declare-fun l_0_20_186 () Real)
(declare-fun l_0_20_185 () Real)
(declare-fun l_0_20_184 () Real)
(declare-fun l_0_20_160 () Real)
(declare-fun l_0_20_159 () Real)
(declare-fun l_0_20_158 () Real)
(declare-fun l_0_20_157 () Real)
(declare-fun l_0_20_156 () Real)
(declare-fun l_0_20_56 () Real)
(declare-fun l_0_20_28 () Real)
(declare-fun l_0_20_194 () Real)
(declare-fun l_0_20_193 () Real)
(declare-fun l_0_20_192 () Real)
(declare-fun l_0_20_191 () Real)
(declare-fun l_0_20_190 () Real)
(declare-fun l_0_20_166 () Real)
(declare-fun l_0_20_165 () Real)
(declare-fun l_0_20_164 () Real)
(declare-fun l_0_20_163 () Real)
(declare-fun l_0_20_162 () Real)
(declare-fun l_0_20_91 () Real)
(declare-fun l_0_20_85 () Real)
(declare-fun l_0_20_63 () Real)
(declare-fun l_0_20_57 () Real)
(declare-fun l_0_20_92 () Real)
(declare-fun l_0_20_64 () Real)
(declare-fun l_0_20_93 () Real)
(declare-fun l_0_20_90 () Real)
(declare-fun l_0_20_89 () Real)
(declare-fun l_0_20_88 () Real)
(declare-fun l_0_20_65 () Real)
(declare-fun l_0_20_62 () Real)
(declare-fun l_0_20_61 () Real)
(declare-fun l_0_20_60 () Real)
(declare-fun l_0_20_94 () Real)
(declare-fun l_0_20_66 () Real)
(declare-fun l_0_20_98 () Real)
(declare-fun l_0_20_97 () Real)
(declare-fun l_0_20_70 () Real)
(declare-fun l_0_20_69 () Real)
(declare-fun l_0_20_75 () Real)
(declare-fun l_0_20_74 () Real)
(declare-fun l_0_20_73 () Real)
(declare-fun l_0_20_72 () Real)
(declare-fun l_0_20_103 () Real)
(declare-fun l_0_20_102 () Real)
(declare-fun l_0_20_101 () Real)
(declare-fun l_0_20_100 () Real)
(declare-fun l_0_20_81 () Real)
(declare-fun l_0_20_80 () Real)
(declare-fun l_0_20_79 () Real)
(declare-fun l_0_20_78 () Real)
(declare-fun l_0_20_109 () Real)
(declare-fun l_0_20_108 () Real)
(declare-fun l_0_20_107 () Real)
(declare-fun l_0_20_106 () Real)
(declare-fun l_0_20_301 () Real)
(declare-fun l_0_20_273 () Real)
(declare-fun l_0_20_245 () Real)
(declare-fun l_0_20_217 () Real)
(declare-fun l_0_20_133 () Real)
(declare-fun l_0_20_307 () Real)
(declare-fun l_0_20_279 () Real)
(declare-fun l_0_20_251 () Real)
(declare-fun l_0_20_223 () Real)
(declare-fun l_0_20_139 () Real)
(declare-fun l_0_20_189 () Real)
(declare-fun l_0_20_161 () Real)
(declare-fun l_0_20_195 () Real)
(declare-fun l_0_20_167 () Real)
(declare-fun l_0_20_99 () Real)
(declare-fun l_0_20_71 () Real)
(declare-fun l_0_20_76 () Real)
(declare-fun l_0_20_104 () Real)
(declare-fun l_0_20_82 () Real)
(declare-fun l_0_20_110 () Real)
(declare-fun l_0_20_77 () Real)
(declare-fun l_0_20_105 () Real)
(declare-fun l_0_20_83 () Real)
(declare-fun l_0_20_111 () Real)
(declare-fun l_0_20_84 () Real)
(declare-fun l_0_20_112 () Real)
(declare-fun l_0_20_308 () Real)
(declare-fun l_0_20_280 () Real)
(declare-fun l_0_20_252 () Real)
(declare-fun l_0_20_224 () Real)
(declare-fun l_0_20_140 () Real)
(declare-fun l_0_20_196 () Real)
(declare-fun l_0_20_168 () Real)
(assert
 (= (- l_0_0_3) 0.0))
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (= (- l_0_0_4) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_4 0.0))
(assert
 (= (- l_0_1_3) 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- l_0_1_2) 0.0))
(assert
 (= (- (- (- l_0_1_4) l_0_1_5) l_0_1_6) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (>= l_0_1_5 0.0))
(assert
 (>= l_0_1_6 0.0))
(assert
 (= (- (- (- (- (- l_0_2_4) l_0_2_5) l_0_2_6) l_0_2_7) l_0_2_8) 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (= (- l_0_2_2) 0.0))
(assert
 (= (- l_0_2_3) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (>= l_0_2_8 0.0))
(assert
 (let ((?x4581 (- (- (- (- (- (- l_0_3_10) l_0_3_4) l_0_3_5) l_0_3_6) l_0_3_7) l_0_3_8)))
 (= (- ?x4581 l_0_3_9) 0.0)))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (= (- l_0_3_2) 0.0))
(assert
 (= (- l_0_3_3) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_7 0.0))
(assert
 (>= l_0_3_8 0.0))
(assert
 (>= l_0_3_9 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (let ((?x4635 (* l_0_4_143 l_0_4_143)))
 (let ((?x4633 (* l_0_4_142 l_0_4_142)))
 (let ((?x4632 (+ (* 1.0 (* l_0_4_114 l_0_4_114)) (* 1.0 (* l_0_4_115 l_0_4_115)))))
 (= (+ (- (- ?x4632 ?x4633) ?x4635) 1.0) 0.0)))))
(assert
 (= (+ (* (- l_0_4_1) l_0_4_1) (* l_0_4_29 l_0_4_29)) 0.0))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4668 (* ?x4667 l_0_4_30)))
 (let ((?x4663 (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) (* (* 2.0 l_0_4_113) l_0_4_123))))
 (= (+ (- ?x4663 (* (* 2.0 l_0_4_141) l_0_4_151)) ?x4668) 0.0)))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4701 (* ?x4700 l_0_4_40)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4698 (* ?x4697 l_0_4_39)))
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4695 (* ?x4667 l_0_4_32)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x4693 (* ?x4692 l_0_4_3)))
 (let ((?x4684 (* 2.0 l_0_4_11)))
 (let ((?x4690 (* ?x4684 l_0_4_2)))
 (let ((?x4699 (- (+ (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x4690) ?x4693) ?x4695) ?x4698)))
 (= (- ?x4699 ?x4701) 0.0)))))))))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4732 (* ?x4667 l_0_4_35)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) ?x4732) 0.0))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4738 (* ?x4667 l_0_4_39)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) ?x4738) 0.0))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4756 (* ?x4667 l_0_4_44)))
 (let ((?x4738 (* ?x4667 l_0_4_39)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x4749 (* ?x4746 l_0_4_16)))
 (let ((?x4748 (* ?x4746 l_0_4_11)))
 (= (+ (- (- ?x4748 ?x4749) ?x4738) ?x4756) 0.0))))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4774 (* ?x4667 l_0_4_50)))
 (let ((?x4778 (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_22) ?x4774) (* (* 2.0 l_0_4_58) l_0_4_67))))
 (let ((?x4784 (- (+ ?x4778 (* (* 2.0 l_0_4_59) l_0_4_68)) (* (* 2.0 l_0_4_86) l_0_4_95))))
 (= (- ?x4784 (* (* 2.0 l_0_4_87) l_0_4_96)) 0.0))))))
(assert
 (let ((?x4833 (* l_0_4_31 l_0_4_31)))
 (let ((?x4831 (* l_0_4_30 l_0_4_30)))
 (let ((?x4829 (* l_0_4_3 l_0_4_3)))
 (let ((?x4827 (* l_0_4_2 l_0_4_2)))
 (let ((?x4820 (+ (* (* 2.0 l_0_4_114) l_0_4_123) (* (* 2.0 l_0_4_115) l_0_4_124))))
 (let ((?x4826 (- (- ?x4820 (* (* 2.0 l_0_4_142) l_0_4_151)) (* (* 2.0 l_0_4_143) l_0_4_152))))
 (= (+ (+ (- (- ?x4826 ?x4827) ?x4829) ?x4831) ?x4833) 0.0))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4890 (* ?x4700 l_0_4_33)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4888 (* ?x4697 l_0_4_32)))
 (let ((?x4885 (* 2.0 l_0_4_3)))
 (let ((?x4886 (* ?x4885 l_0_4_5)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x4883 (* ?x4882 l_0_4_4)))
 (let ((?x4869 (+ (* (* 2.0 l_0_4_116) l_0_4_123) (* (* 2.0 l_0_4_117) l_0_4_124))))
 (let ((?x4875 (- (+ ?x4869 (* (* 2.0 l_0_4_118) l_0_4_125)) (* (* 2.0 l_0_4_144) l_0_4_151))))
 (let ((?x4881 (- (- ?x4875 (* (* 2.0 l_0_4_145) l_0_4_152)) (* (* 2.0 l_0_4_146) l_0_4_153))))
 (= (+ (+ (- (- ?x4881 ?x4883) ?x4886) ?x4888) ?x4890) 0.0)))))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4965 (* ?x4700 l_0_4_36)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4963 (* ?x4697 l_0_4_35)))
 (let ((?x4885 (* 2.0 l_0_4_3)))
 (let ((?x4961 (* ?x4885 l_0_4_8)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x4959 (* ?x4882 l_0_4_7)))
 (let ((?x4940 (+ (* (* 2.0 l_0_4_119) l_0_4_123) (* (* 2.0 l_0_4_120) l_0_4_124))))
 (let ((?x4946 (+ (+ ?x4940 (* (* 2.0 l_0_4_121) l_0_4_125)) (* (* 2.0 l_0_4_122) l_0_4_126))))
 (let ((?x4952 (- (- ?x4946 (* (* 2.0 l_0_4_147) l_0_4_151)) (* (* 2.0 l_0_4_148) l_0_4_152))))
 (let ((?x4958 (- (- ?x4952 (* (* 2.0 l_0_4_149) l_0_4_153)) (* (* 2.0 l_0_4_150) l_0_4_154))))
 (= (+ (+ (- (- ?x4958 ?x4959) ?x4961) ?x4963) ?x4965) 0.0))))))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4701 (* ?x4700 l_0_4_40)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4698 (* ?x4697 l_0_4_39)))
 (let ((?x5045 (* l_0_4_155 l_0_4_155)))
 (let ((?x5043 (* l_0_4_154 l_0_4_154)))
 (let ((?x5041 (* l_0_4_153 l_0_4_153)))
 (let ((?x5039 (* l_0_4_152 l_0_4_152)))
 (let ((?x5037 (* l_0_4_151 l_0_4_151)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x4693 (* ?x4692 l_0_4_3)))
 (let ((?x5024 (+ (- (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x4693) (* 1.0 (* l_0_4_123 l_0_4_123)))))
 (let ((?x5030 (+ (+ ?x5024 (* 1.0 (* l_0_4_124 l_0_4_124))) (* 1.0 (* l_0_4_125 l_0_4_125)))))
 (let ((?x5036 (+ (+ ?x5030 (* 1.0 (* l_0_4_126 l_0_4_126))) (* 1.0 (* l_0_4_127 l_0_4_127)))))
 (let ((?x5048 (+ (+ (- (- (- (- (- ?x5036 ?x5037) ?x5039) ?x5041) ?x5043) ?x5045) ?x4698) ?x4701)))
 (= ?x5048 0.0)))))))))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x5117 (* ?x4700 l_0_4_45)))
 (let ((?x4701 (* ?x4700 l_0_4_40)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x5114 (* ?x4697 l_0_4_44)))
 (let ((?x4698 (* ?x4697 l_0_4_39)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5111 (* ?x5110 l_0_4_3)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5108 (* ?x5107 l_0_4_2)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x4693 (* ?x4692 l_0_4_3)))
 (let ((?x4684 (* 2.0 l_0_4_11)))
 (let ((?x4690 (* ?x4684 l_0_4_2)))
 (let ((?x5082 (+ (+ (+ ?x4690 ?x4693) (* (* 2.0 l_0_4_123) l_0_4_128)) (* (* 2.0 l_0_4_124) l_0_4_129))))
 (let ((?x5088 (+ (+ ?x5082 (* (* 2.0 l_0_4_125) l_0_4_130)) (* (* 2.0 l_0_4_126) l_0_4_131))))
 (let ((?x5094 (- (+ ?x5088 (* (* 2.0 l_0_4_127) l_0_4_132)) (* (* 2.0 l_0_4_151) l_0_4_156))))
 (let ((?x5100 (- (- ?x5094 (* (* 2.0 l_0_4_152) l_0_4_157)) (* (* 2.0 l_0_4_153) l_0_4_158))))
 (let ((?x5106 (- (- ?x5100 (* (* 2.0 l_0_4_154) l_0_4_159)) (* (* 2.0 l_0_4_155) l_0_4_160))))
 (= (+ (- (+ (- (- (- ?x5106 ?x5108) ?x5111) ?x4698) ?x5114) ?x4701) ?x5117) 0.0)))))))))))))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x5210 (* ?x4700 l_0_4_51)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x5208 (* ?x4697 l_0_4_50)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5206 (* ?x5205 l_0_4_3)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x5203 (* ?x4882 l_0_4_22)))
 (let ((?x5186 (+ (* (* 2.0 l_0_4_123) l_0_4_134) (* (* 2.0 l_0_4_124) l_0_4_135))))
 (let ((?x5190 (+ (+ ?x5186 (* (* 2.0 l_0_4_125) l_0_4_136)) (* (* 2.0 l_0_4_126) l_0_4_137))))
 (let ((?x5194 (- (+ ?x5190 (* (* 2.0 l_0_4_127) l_0_4_138)) (* (* 2.0 l_0_4_151) l_0_4_162))))
 (let ((?x5198 (- (- ?x5194 (* (* 2.0 l_0_4_152) l_0_4_163)) (* (* 2.0 l_0_4_153) l_0_4_164))))
 (let ((?x5202 (- (- ?x5198 (* (* 2.0 l_0_4_154) l_0_4_165)) (* (* 2.0 l_0_4_155) l_0_4_166))))
 (= (+ (+ (- (- ?x5202 ?x5203) ?x5206) ?x5208) ?x5210) 0.0)))))))))))))))
(assert
 (let ((?x5281 (* l_0_4_6 l_0_4_6)))
 (let ((?x5279 (* l_0_4_5 l_0_4_5)))
 (let ((?x5277 (* l_0_4_4 l_0_4_4)))
 (let ((?x5275 (* l_0_4_34 l_0_4_34)))
 (let ((?x5278 (- (+ (+ (* l_0_4_32 l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x5275) ?x5277)))
 (= (- (- ?x5278 ?x5279) ?x5281) 0.0)))))))
(assert
 (let ((?x5310 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5307 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5304 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5301 (* ?x5300 l_0_4_37)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5298 (* ?x5297 l_0_4_36)))
 (let ((?x5308 (- (- (+ (+ (* (* 2.0 l_0_4_32) l_0_4_35) ?x5298) ?x5301) ?x5304) ?x5307)))
 (= (- ?x5308 ?x5310) 0.0))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5349 (* ?x5300 l_0_4_41)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5347 (* ?x5297 l_0_4_40)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5345 (* ?x5295 l_0_4_39)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5343 (* ?x5342 l_0_4_6)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5340 (* ?x4692 l_0_4_5)))
 (let ((?x5348 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x5340) ?x5343) ?x5345) ?x5347)))
 (= (+ ?x5348 ?x5349) 0.0)))))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5392 (* ?x5300 l_0_4_46)))
 (let ((?x5349 (* ?x5300 l_0_4_41)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5389 (* ?x5297 l_0_4_45)))
 (let ((?x5347 (* ?x5297 l_0_4_40)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5386 (* ?x5295 l_0_4_44)))
 (let ((?x5345 (* ?x5295 l_0_4_39)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5383 (* ?x5382 l_0_4_6)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5380 (* ?x5110 l_0_4_5)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5372 (* ?x5107 l_0_4_4)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5343 (* ?x5342 l_0_4_6)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5340 (* ?x4692 l_0_4_5)))
 (let ((?x5371 (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x5340) ?x5343)))
 (let ((?x5390 (+ (- (+ (- (- (- (- ?x5371 ?x5372) ?x5380) ?x5383) ?x5345) ?x5386) ?x5347) ?x5389)))
 (= (+ (- ?x5390 ?x5349) ?x5392) 0.0)))))))))))))))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5447 (* ?x5300 l_0_4_52)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5445 (* ?x5297 l_0_4_51)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5443 (* ?x5295 l_0_4_50)))
 (let ((?x5440 (* 2.0 l_0_4_24)))
 (let ((?x5441 (* ?x5440 l_0_4_6)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5438 (* ?x5205 l_0_4_5)))
 (let ((?x5446 (+ (+ (- (- (* (* (- 2.0) l_0_4_22) l_0_4_4) ?x5438) ?x5441) ?x5443) ?x5445)))
 (= (+ ?x5446 ?x5447) 0.0)))))))))))))
(assert
 (let ((?x5487 (* l_0_4_9 l_0_4_9)))
 (let ((?x5485 (* l_0_4_8 l_0_4_8)))
 (let ((?x5483 (* l_0_4_7 l_0_4_7)))
 (let ((?x5481 (* l_0_4_38 l_0_4_38)))
 (let ((?x5479 (* l_0_4_37 l_0_4_37)))
 (let ((?x5477 (* l_0_4_36 l_0_4_36)))
 (let ((?x5480 (+ (+ (+ (* (- l_0_4_10) l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x5477) ?x5479)))
 (= (- (- (- (+ ?x5480 ?x5481) ?x5483) ?x5485) ?x5487) 0.0)))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5522 (* ?x5521 l_0_4_42)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5519 (* ?x5518 l_0_4_41)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5516 (* ?x5515 l_0_4_40)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5513 (* ?x5512 l_0_4_39)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5510 (* ?x5342 l_0_4_9)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5508 (* ?x4692 l_0_4_8)))
 (let ((?x4684 (* 2.0 l_0_4_11)))
 (let ((?x5506 (* ?x4684 l_0_4_7)))
 (let ((?x5514 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x5506) ?x5508) ?x5510) ?x5513)))
 (= (+ (+ (+ ?x5514 ?x5516) ?x5519) ?x5522) 0.0)))))))))))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5579 (* ?x5521 l_0_4_47)))
 (let ((?x5522 (* ?x5521 l_0_4_42)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5576 (* ?x5518 l_0_4_46)))
 (let ((?x5519 (* ?x5518 l_0_4_41)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5573 (* ?x5515 l_0_4_45)))
 (let ((?x5516 (* ?x5515 l_0_4_40)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5570 (* ?x5512 l_0_4_44)))
 (let ((?x5513 (* ?x5512 l_0_4_39)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5567 (* ?x5382 l_0_4_9)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5565 (* ?x5110 l_0_4_8)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5563 (* ?x5107 l_0_4_7)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5510 (* ?x5342 l_0_4_9)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5508 (* ?x4692 l_0_4_8)))
 (let ((?x4684 (* 2.0 l_0_4_11)))
 (let ((?x5506 (* ?x4684 l_0_4_7)))
 (let ((?x5546 (* 2.0 l_0_4_10)))
 (let ((?x5550 (* ?x5546 l_0_4_19)))
 (let ((?x5548 (* ?x5546 l_0_4_14)))
 (let ((?x5568 (- (- (- (+ (+ (+ (- ?x5548 ?x5550) ?x5506) ?x5508) ?x5510) ?x5563) ?x5565) ?x5567)))
 (let ((?x5578 (- (+ (- (+ (- (+ (- ?x5568 ?x5513) ?x5570) ?x5516) ?x5573) ?x5519) ?x5576) ?x5522)))
 (= (+ ?x5578 ?x5579) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5654 (* ?x5521 l_0_4_53)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5652 (* ?x5518 l_0_4_52)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5650 (* ?x5515 l_0_4_51)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5648 (* ?x5512 l_0_4_50)))
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4701 (* ?x4700 l_0_4_40)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4698 (* ?x4697 l_0_4_39)))
 (let ((?x5440 (* 2.0 l_0_4_24)))
 (let ((?x5644 (* ?x5440 l_0_4_9)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5642 (* ?x5205 l_0_4_8)))
 (let ((?x5639 (* 2.0 l_0_4_22)))
 (let ((?x5640 (* ?x5639 l_0_4_7)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x4693 (* ?x4692 l_0_4_3)))
 (let ((?x4684 (* 2.0 l_0_4_11)))
 (let ((?x4690 (* ?x4684 l_0_4_2)))
 (let ((?x5643 (- (- (+ (+ (* (* (- 2.0) l_0_4_10) l_0_4_25) ?x4690) ?x4693) ?x5640) ?x5642)))
 (let ((?x5655 (+ (+ (+ (+ (- (- (- ?x5643 ?x5644) ?x4698) ?x4701) ?x5648) ?x5650) ?x5652) ?x5654)))
 (= ?x5655 0.0))))))))))))))))))))))))))
(assert
 (let ((?x5710 (* l_0_4_43 l_0_4_43)))
 (let ((?x5708 (* l_0_4_42 l_0_4_42)))
 (let ((?x5706 (* l_0_4_41 l_0_4_41)))
 (let ((?x5704 (* l_0_4_40 l_0_4_40)))
 (let ((?x5702 (* l_0_4_39 l_0_4_39)))
 (let ((?x5700 (* l_0_4_15 l_0_4_15)))
 (let ((?x5698 (* l_0_4_14 l_0_4_14)))
 (let ((?x5696 (* l_0_4_13 l_0_4_13)))
 (let ((?x5699 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5696) ?x5698)))
 (= (+ (+ (+ (+ (+ (- ?x5699 ?x5700) ?x5702) ?x5704) ?x5706) ?x5708) ?x5710) 0.0)))))))))))
(assert
 (let ((?x5710 (* l_0_4_43 l_0_4_43)))
 (let ((?x5767 (* 2.0 l_0_4_43)))
 (let ((?x5768 (* ?x5767 l_0_4_48)))
 (let ((?x5708 (* l_0_4_42 l_0_4_42)))
 (let ((?x5763 (* 2.0 l_0_4_42)))
 (let ((?x5764 (* ?x5763 l_0_4_47)))
 (let ((?x5706 (* l_0_4_41 l_0_4_41)))
 (let ((?x5759 (* 2.0 l_0_4_41)))
 (let ((?x5760 (* ?x5759 l_0_4_46)))
 (let ((?x5704 (* l_0_4_40 l_0_4_40)))
 (let ((?x5755 (* 2.0 l_0_4_40)))
 (let ((?x5756 (* ?x5755 l_0_4_45)))
 (let ((?x5702 (* l_0_4_39 l_0_4_39)))
 (let ((?x5751 (* 2.0 l_0_4_39)))
 (let ((?x5752 (* ?x5751 l_0_4_44)))
 (let ((?x5700 (* l_0_4_15 l_0_4_15)))
 (let ((?x5747 (* 2.0 l_0_4_15)))
 (let ((?x5748 (* ?x5747 l_0_4_20)))
 (let ((?x5698 (* l_0_4_14 l_0_4_14)))
 (let ((?x5743 (* 2.0 l_0_4_14)))
 (let ((?x5744 (* ?x5743 l_0_4_19)))
 (let ((?x5696 (* l_0_4_13 l_0_4_13)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5740 (* ?x5342 l_0_4_18)))
 (let ((?x5694 (* l_0_4_12 l_0_4_12)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5737 (* ?x4692 l_0_4_17)))
 (let ((?x5738 (- (+ (* (* (- 2.0) l_0_4_11) l_0_4_16) (* l_0_4_11 l_0_4_11)) ?x5737)))
 (let ((?x5750 (+ (- (+ (- (+ (- (+ ?x5738 ?x5694) ?x5740) ?x5696) ?x5744) ?x5698) ?x5748) ?x5700)))
 (let ((?x5765 (+ (- (+ (- (+ (- (+ ?x5750 ?x5752) ?x5702) ?x5756) ?x5704) ?x5760) ?x5706) ?x5764)))
 (= (- (+ (- ?x5765 ?x5708) ?x5768) ?x5710) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x5767 (* 2.0 l_0_4_43)))
 (let ((?x5845 (* ?x5767 l_0_4_54)))
 (let ((?x5763 (* 2.0 l_0_4_42)))
 (let ((?x5843 (* ?x5763 l_0_4_53)))
 (let ((?x5759 (* 2.0 l_0_4_41)))
 (let ((?x5841 (* ?x5759 l_0_4_52)))
 (let ((?x5755 (* 2.0 l_0_4_40)))
 (let ((?x5839 (* ?x5755 l_0_4_51)))
 (let ((?x5751 (* 2.0 l_0_4_39)))
 (let ((?x5837 (* ?x5751 l_0_4_50)))
 (let ((?x5747 (* 2.0 l_0_4_15)))
 (let ((?x5835 (* ?x5747 l_0_4_26)))
 (let ((?x5743 (* 2.0 l_0_4_14)))
 (let ((?x5833 (* ?x5743 l_0_4_25)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5831 (* ?x5342 l_0_4_24)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5829 (* ?x4692 l_0_4_23)))
 (let ((?x5836 (- (- (- (- (* (* (- 2.0) l_0_4_11) l_0_4_22) ?x5829) ?x5831) ?x5833) ?x5835)))
 (= (+ (+ (+ (+ (+ ?x5836 ?x5837) ?x5839) ?x5841) ?x5843) ?x5845) 0.0)))))))))))))))))))))
(assert
 (let ((?x5919 (* l_0_4_49 l_0_4_49)))
 (let ((?x5917 (* l_0_4_48 l_0_4_48)))
 (let ((?x5915 (* l_0_4_47 l_0_4_47)))
 (let ((?x5913 (* l_0_4_46 l_0_4_46)))
 (let ((?x5911 (* l_0_4_45 l_0_4_45)))
 (let ((?x5909 (* l_0_4_44 l_0_4_44)))
 (let ((?x5767 (* 2.0 l_0_4_43)))
 (let ((?x5768 (* ?x5767 l_0_4_48)))
 (let ((?x5763 (* 2.0 l_0_4_42)))
 (let ((?x5764 (* ?x5763 l_0_4_47)))
 (let ((?x5759 (* 2.0 l_0_4_41)))
 (let ((?x5760 (* ?x5759 l_0_4_46)))
 (let ((?x5755 (* 2.0 l_0_4_40)))
 (let ((?x5756 (* ?x5755 l_0_4_45)))
 (let ((?x5751 (* 2.0 l_0_4_39)))
 (let ((?x5752 (* ?x5751 l_0_4_44)))
 (let ((?x5902 (* l_0_4_21 l_0_4_21)))
 (let ((?x5900 (* l_0_4_20 l_0_4_20)))
 (let ((?x5898 (* l_0_4_19 l_0_4_19)))
 (let ((?x5896 (* l_0_4_18 l_0_4_18)))
 (let ((?x5894 (* l_0_4_17 l_0_4_17)))
 (let ((?x5884 (* l_0_4_16 l_0_4_16)))
 (let ((?x5747 (* 2.0 l_0_4_15)))
 (let ((?x5748 (* ?x5747 l_0_4_20)))
 (let ((?x5743 (* 2.0 l_0_4_14)))
 (let ((?x5744 (* ?x5743 l_0_4_19)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5740 (* ?x5342 l_0_4_18)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5737 (* ?x4692 l_0_4_17)))
 (let ((?x5883 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_16) ?x5737) ?x5740) ?x5744) ?x5748)))
 (let ((?x5904 (- (- (- (- (- (- (- ?x5883 ?x5884) ?x5894) ?x5896) ?x5898) ?x5900) ?x5902) ?x5752)))
 (let ((?x5914 (+ (+ (+ (- (- (- (- ?x5904 ?x5756) ?x5760) ?x5764) ?x5768) ?x5909) ?x5911) ?x5913)))
 (= (+ (+ (+ ?x5914 ?x5915) ?x5917) ?x5919) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6005 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x6002 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x5999 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x5996 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x5993 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x5990 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x5767 (* 2.0 l_0_4_43)))
 (let ((?x5845 (* ?x5767 l_0_4_54)))
 (let ((?x5763 (* 2.0 l_0_4_42)))
 (let ((?x5843 (* ?x5763 l_0_4_53)))
 (let ((?x5759 (* 2.0 l_0_4_41)))
 (let ((?x5841 (* ?x5759 l_0_4_52)))
 (let ((?x5755 (* 2.0 l_0_4_40)))
 (let ((?x5839 (* ?x5755 l_0_4_51)))
 (let ((?x5751 (* 2.0 l_0_4_39)))
 (let ((?x5837 (* ?x5751 l_0_4_50)))
 (let ((?x5982 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x5979 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x5976 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5973 (* ?x5382 l_0_4_24)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5971 (* ?x5110 l_0_4_23)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5969 (* ?x5107 l_0_4_22)))
 (let ((?x5747 (* 2.0 l_0_4_15)))
 (let ((?x5835 (* ?x5747 l_0_4_26)))
 (let ((?x5743 (* 2.0 l_0_4_14)))
 (let ((?x5833 (* ?x5743 l_0_4_25)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5831 (* ?x5342 l_0_4_24)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5829 (* ?x4692 l_0_4_23)))
 (let ((?x5968 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_22) ?x5829) ?x5831) ?x5833) ?x5835)))
 (let ((?x5984 (- (- (- (- (- (- (- ?x5968 ?x5969) ?x5971) ?x5973) ?x5976) ?x5979) ?x5982) ?x5837)))
 (let ((?x5997 (+ (+ (+ (- (- (- (- ?x5984 ?x5839) ?x5841) ?x5843) ?x5845) ?x5990) ?x5993) ?x5996)))
 (= (+ (+ (+ ?x5997 ?x5999) ?x6002) ?x6005) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6105 (* l_0_4_56 l_0_4_56)))
 (let ((?x6103 (* l_0_4_55 l_0_4_55)))
 (let ((?x6101 (* l_0_4_54 l_0_4_54)))
 (let ((?x6099 (* l_0_4_53 l_0_4_53)))
 (let ((?x6097 (* l_0_4_52 l_0_4_52)))
 (let ((?x6095 (* l_0_4_51 l_0_4_51)))
 (let ((?x6093 (* l_0_4_50 l_0_4_50)))
 (let ((?x6091 (* l_0_4_28 l_0_4_28)))
 (let ((?x6089 (* l_0_4_27 l_0_4_27)))
 (let ((?x6087 (* l_0_4_26 l_0_4_26)))
 (let ((?x6085 (* l_0_4_25 l_0_4_25)))
 (let ((?x6083 (* l_0_4_24 l_0_4_24)))
 (let ((?x6086 (- (- (- (* (- l_0_4_22) l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x6083) ?x6085)))
 (let ((?x6100 (+ (+ (+ (+ (- (- (- ?x6086 ?x6087) ?x6089) ?x6091) ?x6093) ?x6095) ?x6097) ?x6099)))
 (= (+ (+ (+ ?x6100 ?x6101) ?x6103) ?x6105) 0.0))))))))))))))))
(assert
 (let ((?x4649 (* l_0_4_29 l_0_4_29)))
 (let ((?x4653 (* l_0_4_1 l_0_4_1)))
 (let ((?x6129 (- ?x4653 ?x4649)))
 (let ((?x6144 (- (+ ?x6129 (* (* 2.0 l_0_4_57) l_0_4_63)) (* (* 2.0 l_0_4_85) l_0_4_91))))
 (= ?x6144 0.0))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4668 (* ?x4667 l_0_4_30)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x6161 (* ?x4746 l_0_4_2)))
 (let ((?x6162 (- ?x6161 ?x4668)))
 (let ((?x6166 (+ (+ ?x6162 (* (* 2.0 l_0_4_58) l_0_4_63)) (* (* 2.0 l_0_4_59) l_0_4_64))))
 (let ((?x6170 (- (- ?x6166 (* (* 2.0 l_0_4_86) l_0_4_91)) (* (* 2.0 l_0_4_87) l_0_4_92))))
 (= ?x6170 0.0)))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5654 (* ?x5521 l_0_4_53)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5652 (* ?x5518 l_0_4_52)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5650 (* ?x5515 l_0_4_51)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5648 (* ?x5512 l_0_4_50)))
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4695 (* ?x4667 l_0_4_32)))
 (let ((?x5440 (* 2.0 l_0_4_24)))
 (let ((?x5644 (* ?x5440 l_0_4_9)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5642 (* ?x5205 l_0_4_8)))
 (let ((?x5639 (* 2.0 l_0_4_22)))
 (let ((?x5640 (* ?x5639 l_0_4_7)))
 (let ((?x5546 (* 2.0 l_0_4_10)))
 (let ((?x6195 (* ?x5546 l_0_4_25)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x6194 (* ?x4746 l_0_4_4)))
 (let ((?x6202 (- (- (- (+ (+ (+ (+ ?x6194 ?x6195) ?x5640) ?x5642) ?x5644) ?x4695) ?x5648) ?x5650)))
 (let ((?x6210 (+ (+ (- (- ?x6202 ?x5652) ?x5654) (* (* 2.0 l_0_4_60) l_0_4_63)) (* (* 2.0 l_0_4_61) l_0_4_64))))
 (let ((?x6216 (- (+ ?x6210 (* (* 2.0 l_0_4_62) l_0_4_65)) (* (* 2.0 l_0_4_88) l_0_4_91))))
 (let ((?x6222 (- (- ?x6216 (* (* 2.0 l_0_4_89) l_0_4_92)) (* (* 2.0 l_0_4_90) l_0_4_93))))
 (= ?x6222 0.0))))))))))))))))))))))))))
(assert
 (let ((?x6287 (* l_0_4_94 l_0_4_94)))
 (let ((?x6285 (* l_0_4_93 l_0_4_93)))
 (let ((?x6283 (* l_0_4_92 l_0_4_92)))
 (let ((?x6281 (* l_0_4_91 l_0_4_91)))
 (let ((?x6279 (* l_0_4_66 l_0_4_66)))
 (let ((?x6277 (* l_0_4_65 l_0_4_65)))
 (let ((?x6275 (* l_0_4_64 l_0_4_64)))
 (let ((?x6273 (* l_0_4_63 l_0_4_63)))
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4732 (* ?x4667 l_0_4_35)))
 (let ((?x6272 (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x4732)))
 (let ((?x6286 (- (- (- (+ (+ (+ (+ ?x6272 ?x6273) ?x6275) ?x6277) ?x6279) ?x6281) ?x6283) ?x6285)))
 (= (- ?x6286 ?x6287) 0.0))))))))))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4738 (* ?x4667 l_0_4_39)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x4748 (* ?x4746 l_0_4_11)))
 (let ((?x6307 (- ?x4748 ?x4738)))
 (let ((?x6313 (+ (+ ?x6307 (* (* 2.0 l_0_4_63) l_0_4_67)) (* (* 2.0 l_0_4_64) l_0_4_68))))
 (let ((?x6319 (+ (+ ?x6313 (* (* 2.0 l_0_4_65) l_0_4_69)) (* (* 2.0 l_0_4_66) l_0_4_70))))
 (let ((?x6325 (- (- ?x6319 (* (* 2.0 l_0_4_91) l_0_4_95)) (* (* 2.0 l_0_4_92) l_0_4_96))))
 (let ((?x6331 (- (- ?x6325 (* (* 2.0 l_0_4_93) l_0_4_97)) (* (* 2.0 l_0_4_94) l_0_4_98))))
 (= ?x6331 0.0)))))))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4756 (* ?x4667 l_0_4_44)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x4749 (* ?x4746 l_0_4_16)))
 (let ((?x6373 (- (- ?x4749 (* (* 2.0 l_0_4_100) l_0_4_91)) (* (* 2.0 l_0_4_101) l_0_4_92))))
 (let ((?x6379 (- (- ?x6373 (* (* 2.0 l_0_4_102) l_0_4_93)) (* (* 2.0 l_0_4_103) l_0_4_94))))
 (let ((?x6384 (+ (+ (- ?x6379 ?x4756) (* (* 2.0 l_0_4_63) l_0_4_72)) (* (* 2.0 l_0_4_64) l_0_4_73))))
 (let ((?x6388 (+ (+ ?x6384 (* (* 2.0 l_0_4_65) l_0_4_74)) (* (* 2.0 l_0_4_66) l_0_4_75))))
 (= ?x6388 0.0))))))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4774 (* ?x4667 l_0_4_50)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x6428 (* ?x4746 l_0_4_22)))
 (let ((?x6434 (- (- ?x6428 (* (* 2.0 l_0_4_106) l_0_4_91)) (* (* 2.0 l_0_4_107) l_0_4_92))))
 (let ((?x6440 (- (- ?x6434 (* (* 2.0 l_0_4_108) l_0_4_93)) (* (* 2.0 l_0_4_109) l_0_4_94))))
 (let ((?x6445 (+ (+ (- ?x6440 ?x4774) (* (* 2.0 l_0_4_63) l_0_4_78)) (* (* 2.0 l_0_4_64) l_0_4_79))))
 (let ((?x6449 (+ (+ ?x6445 (* (* 2.0 l_0_4_65) l_0_4_80)) (* (* 2.0 l_0_4_66) l_0_4_81))))
 (= ?x6449 0.0))))))))))
(assert
 (let ((?x4833 (* l_0_4_31 l_0_4_31)))
 (let ((?x4831 (* l_0_4_30 l_0_4_30)))
 (let ((?x4829 (* l_0_4_3 l_0_4_3)))
 (let ((?x4827 (* l_0_4_2 l_0_4_2)))
 (let ((?x6490 (+ (* (* 2.0 l_0_4_119) l_0_4_134) (* (* 2.0 l_0_4_120) l_0_4_135))))
 (let ((?x6494 (+ (+ ?x6490 (* (* 2.0 l_0_4_121) l_0_4_136)) (* (* 2.0 l_0_4_122) l_0_4_137))))
 (let ((?x6498 (- (- ?x6494 (* (* 2.0 l_0_4_147) l_0_4_162)) (* (* 2.0 l_0_4_148) l_0_4_163))))
 (let ((?x6502 (- (- ?x6498 (* (* 2.0 l_0_4_149) l_0_4_164)) (* (* 2.0 l_0_4_150) l_0_4_165))))
 (= (- (- (+ (+ ?x6502 ?x4827) ?x4829) ?x4831) ?x4833) 0.0))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4890 (* ?x4700 l_0_4_33)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4888 (* ?x4697 l_0_4_32)))
 (let ((?x4885 (* 2.0 l_0_4_3)))
 (let ((?x4886 (* ?x4885 l_0_4_5)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x4883 (* ?x4882 l_0_4_4)))
 (= (- (- (+ ?x4883 ?x4886) ?x4888) ?x4890) 0.0))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4965 (* ?x4700 l_0_4_36)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4963 (* ?x4697 l_0_4_35)))
 (let ((?x4885 (* 2.0 l_0_4_3)))
 (let ((?x4961 (* ?x4885 l_0_4_8)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x4959 (* ?x4882 l_0_4_7)))
 (= (- (- (+ ?x4959 ?x4961) ?x4963) ?x4965) 0.0))))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5654 (* ?x5521 l_0_4_53)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5652 (* ?x5518 l_0_4_52)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5650 (* ?x5515 l_0_4_51)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5648 (* ?x5512 l_0_4_50)))
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x5117 (* ?x4700 l_0_4_45)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x5114 (* ?x4697 l_0_4_44)))
 (let ((?x5440 (* 2.0 l_0_4_24)))
 (let ((?x5644 (* ?x5440 l_0_4_9)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5642 (* ?x5205 l_0_4_8)))
 (let ((?x5639 (* 2.0 l_0_4_22)))
 (let ((?x5640 (* ?x5639 l_0_4_7)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5111 (* ?x5110 l_0_4_3)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5108 (* ?x5107 l_0_4_2)))
 (let ((?x5546 (* 2.0 l_0_4_10)))
 (let ((?x6195 (* ?x5546 l_0_4_25)))
 (let ((?x6581 (- (- (+ (+ (+ (+ (+ ?x6195 ?x5108) ?x5111) ?x5640) ?x5642) ?x5644) ?x5114) ?x5117)))
 (= (- (- (- (- ?x6581 ?x5648) ?x5650) ?x5652) ?x5654) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x5210 (* ?x4700 l_0_4_51)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x5208 (* ?x4697 l_0_4_50)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5206 (* ?x5205 l_0_4_3)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x5203 (* ?x4882 l_0_4_22)))
 (let ((?x6607 (- (- (+ ?x5203 ?x5206) ?x5208) ?x5210)))
 (= ?x6607 0.0)))))))))))
(assert
 (let ((?x5281 (* l_0_4_6 l_0_4_6)))
 (let ((?x5279 (* l_0_4_5 l_0_4_5)))
 (let ((?x5277 (* l_0_4_4 l_0_4_4)))
 (let ((?x5275 (* l_0_4_34 l_0_4_34)))
 (let ((?x6623 (+ (- (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x5275) ?x5277)))
 (= (+ (+ ?x6623 ?x5279) ?x5281) 0.0)))))))
(assert
 (let ((?x5310 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5307 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5304 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5301 (* ?x5300 l_0_4_37)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5298 (* ?x5297 l_0_4_36)))
 (let ((?x6639 (+ (+ (- (- (* (* (- 2.0) l_0_4_32) l_0_4_35) ?x5298) ?x5301) ?x5304) ?x5307)))
 (= (+ ?x6639 ?x5310) 0.0))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5349 (* ?x5300 l_0_4_41)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5347 (* ?x5297 l_0_4_40)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5345 (* ?x5295 l_0_4_39)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5343 (* ?x5342 l_0_4_6)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5340 (* ?x4692 l_0_4_5)))
 (let ((?x5371 (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x5340) ?x5343)))
 (= (- (- (- ?x5371 ?x5345) ?x5347) ?x5349) 0.0)))))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5392 (* ?x5300 l_0_4_46)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5389 (* ?x5297 l_0_4_45)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5386 (* ?x5295 l_0_4_44)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5383 (* ?x5382 l_0_4_6)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5380 (* ?x5110 l_0_4_5)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5372 (* ?x5107 l_0_4_4)))
 (= (- (- (- (+ (+ ?x5372 ?x5380) ?x5383) ?x5386) ?x5389) ?x5392) 0.0))))))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5447 (* ?x5300 l_0_4_52)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5445 (* ?x5297 l_0_4_51)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5443 (* ?x5295 l_0_4_50)))
 (let ((?x5440 (* 2.0 l_0_4_24)))
 (let ((?x5441 (* ?x5440 l_0_4_6)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5438 (* ?x5205 l_0_4_5)))
 (let ((?x6684 (- (- (+ (+ (* (* 2.0 l_0_4_22) l_0_4_4) ?x5438) ?x5441) ?x5443) ?x5445)))
 (let ((?x6685 (- ?x6684 ?x5447)))
 (= ?x6685 0.0))))))))))))))
(assert
 (let ((?x5487 (* l_0_4_9 l_0_4_9)))
 (let ((?x5485 (* l_0_4_8 l_0_4_8)))
 (let ((?x5483 (* l_0_4_7 l_0_4_7)))
 (let ((?x5481 (* l_0_4_38 l_0_4_38)))
 (let ((?x5479 (* l_0_4_37 l_0_4_37)))
 (let ((?x5477 (* l_0_4_36 l_0_4_36)))
 (let ((?x6701 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x5477) ?x5479)))
 (= (+ (+ (+ (- ?x6701 ?x5481) ?x5483) ?x5485) ?x5487) 0.0)))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5522 (* ?x5521 l_0_4_42)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5519 (* ?x5518 l_0_4_41)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5516 (* ?x5515 l_0_4_40)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5513 (* ?x5512 l_0_4_39)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5510 (* ?x5342 l_0_4_9)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5508 (* ?x4692 l_0_4_8)))
 (let ((?x4684 (* 2.0 l_0_4_11)))
 (let ((?x5506 (* ?x4684 l_0_4_7)))
 (let ((?x5546 (* 2.0 l_0_4_10)))
 (let ((?x5548 (* ?x5546 l_0_4_14)))
 (let ((?x6725 (- (- (- (- (+ (+ (+ ?x5548 ?x5506) ?x5508) ?x5510) ?x5513) ?x5516) ?x5519) ?x5522)))
 (= ?x6725 0.0)))))))))))))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5579 (* ?x5521 l_0_4_47)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5576 (* ?x5518 l_0_4_46)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5573 (* ?x5515 l_0_4_45)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5570 (* ?x5512 l_0_4_44)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5567 (* ?x5382 l_0_4_9)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5565 (* ?x5110 l_0_4_8)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5563 (* ?x5107 l_0_4_7)))
 (let ((?x5546 (* 2.0 l_0_4_10)))
 (let ((?x5550 (* ?x5546 l_0_4_19)))
 (let ((?x6741 (- (- (- (- (+ (+ (+ ?x5550 ?x5563) ?x5565) ?x5567) ?x5570) ?x5573) ?x5576) ?x5579)))
 (= ?x6741 0.0)))))))))))))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5654 (* ?x5521 l_0_4_53)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5652 (* ?x5518 l_0_4_52)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5650 (* ?x5515 l_0_4_51)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5648 (* ?x5512 l_0_4_50)))
 (let ((?x5440 (* 2.0 l_0_4_24)))
 (let ((?x5644 (* ?x5440 l_0_4_9)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5642 (* ?x5205 l_0_4_8)))
 (let ((?x5639 (* 2.0 l_0_4_22)))
 (let ((?x5640 (* ?x5639 l_0_4_7)))
 (let ((?x5546 (* 2.0 l_0_4_10)))
 (let ((?x6195 (* ?x5546 l_0_4_25)))
 (let ((?x6767 (- (- (- (- (+ (+ (+ ?x6195 ?x5640) ?x5642) ?x5644) ?x5648) ?x5650) ?x5652) ?x5654)))
 (= ?x6767 0.0)))))))))))))))))))
(assert
 (let ((?x5710 (* l_0_4_43 l_0_4_43)))
 (let ((?x5708 (* l_0_4_42 l_0_4_42)))
 (let ((?x5706 (* l_0_4_41 l_0_4_41)))
 (let ((?x5704 (* l_0_4_40 l_0_4_40)))
 (let ((?x5702 (* l_0_4_39 l_0_4_39)))
 (let ((?x5700 (* l_0_4_15 l_0_4_15)))
 (let ((?x5698 (* l_0_4_14 l_0_4_14)))
 (let ((?x5696 (* l_0_4_13 l_0_4_13)))
 (let ((?x6781 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5696) ?x5698)))
 (= (- (- (- (- (- (+ ?x6781 ?x5700) ?x5702) ?x5704) ?x5706) ?x5708) ?x5710) 0.0)))))))))))
(assert
 (let ((?x5767 (* 2.0 l_0_4_43)))
 (let ((?x5768 (* ?x5767 l_0_4_48)))
 (let ((?x5763 (* 2.0 l_0_4_42)))
 (let ((?x5764 (* ?x5763 l_0_4_47)))
 (let ((?x5759 (* 2.0 l_0_4_41)))
 (let ((?x5760 (* ?x5759 l_0_4_46)))
 (let ((?x5755 (* 2.0 l_0_4_40)))
 (let ((?x5756 (* ?x5755 l_0_4_45)))
 (let ((?x5751 (* 2.0 l_0_4_39)))
 (let ((?x5752 (* ?x5751 l_0_4_44)))
 (let ((?x5747 (* 2.0 l_0_4_15)))
 (let ((?x5748 (* ?x5747 l_0_4_20)))
 (let ((?x5743 (* 2.0 l_0_4_14)))
 (let ((?x5744 (* ?x5743 l_0_4_19)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5740 (* ?x5342 l_0_4_18)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5737 (* ?x4692 l_0_4_17)))
 (let ((?x5883 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_16) ?x5737) ?x5740) ?x5744) ?x5748)))
 (= (- (- (- (- (- ?x5883 ?x5752) ?x5756) ?x5760) ?x5764) ?x5768) 0.0)))))))))))))))))))))
(assert
 (let ((?x5767 (* 2.0 l_0_4_43)))
 (let ((?x5845 (* ?x5767 l_0_4_54)))
 (let ((?x5763 (* 2.0 l_0_4_42)))
 (let ((?x5843 (* ?x5763 l_0_4_53)))
 (let ((?x5759 (* 2.0 l_0_4_41)))
 (let ((?x5841 (* ?x5759 l_0_4_52)))
 (let ((?x5755 (* 2.0 l_0_4_40)))
 (let ((?x5839 (* ?x5755 l_0_4_51)))
 (let ((?x5751 (* 2.0 l_0_4_39)))
 (let ((?x5837 (* ?x5751 l_0_4_50)))
 (let ((?x5747 (* 2.0 l_0_4_15)))
 (let ((?x5835 (* ?x5747 l_0_4_26)))
 (let ((?x5743 (* 2.0 l_0_4_14)))
 (let ((?x5833 (* ?x5743 l_0_4_25)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5831 (* ?x5342 l_0_4_24)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5829 (* ?x4692 l_0_4_23)))
 (let ((?x5968 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_22) ?x5829) ?x5831) ?x5833) ?x5835)))
 (let ((?x6820 (- (- (- (- (- ?x5968 ?x5837) ?x5839) ?x5841) ?x5843) ?x5845)))
 (= ?x6820 0.0))))))))))))))))))))))
(assert
 (let ((?x5919 (* l_0_4_49 l_0_4_49)))
 (let ((?x5917 (* l_0_4_48 l_0_4_48)))
 (let ((?x5915 (* l_0_4_47 l_0_4_47)))
 (let ((?x5913 (* l_0_4_46 l_0_4_46)))
 (let ((?x5911 (* l_0_4_45 l_0_4_45)))
 (let ((?x5909 (* l_0_4_44 l_0_4_44)))
 (let ((?x5902 (* l_0_4_21 l_0_4_21)))
 (let ((?x5900 (* l_0_4_20 l_0_4_20)))
 (let ((?x5898 (* l_0_4_19 l_0_4_19)))
 (let ((?x5896 (* l_0_4_18 l_0_4_18)))
 (let ((?x6833 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x5896) ?x5898)))
 (let ((?x6840 (- (- (- (- (- (+ (+ ?x6833 ?x5900) ?x5902) ?x5909) ?x5911) ?x5913) ?x5915) ?x5917)))
 (= (- ?x6840 ?x5919) 0.0))))))))))))))
(assert
 (let ((?x6005 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x6002 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x5999 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x5996 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x5993 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x5990 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x5982 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x5979 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x5976 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5973 (* ?x5382 l_0_4_24)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5971 (* ?x5110 l_0_4_23)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5969 (* ?x5107 l_0_4_22)))
 (let ((?x6869 (- (- (+ (+ (+ (+ (+ ?x5969 ?x5971) ?x5973) ?x5976) ?x5979) ?x5982) ?x5990) ?x5993)))
 (= (- (- (- (- ?x6869 ?x5996) ?x5999) ?x6002) ?x6005) 0.0))))))))))))))))))
(assert
 (let ((?x6105 (* l_0_4_56 l_0_4_56)))
 (let ((?x6103 (* l_0_4_55 l_0_4_55)))
 (let ((?x6101 (* l_0_4_54 l_0_4_54)))
 (let ((?x6099 (* l_0_4_53 l_0_4_53)))
 (let ((?x6097 (* l_0_4_52 l_0_4_52)))
 (let ((?x6095 (* l_0_4_51 l_0_4_51)))
 (let ((?x6093 (* l_0_4_50 l_0_4_50)))
 (let ((?x6091 (* l_0_4_28 l_0_4_28)))
 (let ((?x6089 (* l_0_4_27 l_0_4_27)))
 (let ((?x6087 (* l_0_4_26 l_0_4_26)))
 (let ((?x6085 (* l_0_4_25 l_0_4_25)))
 (let ((?x6083 (* l_0_4_24 l_0_4_24)))
 (let ((?x6903 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x6083) ?x6085)))
 (let ((?x6910 (- (- (- (- (+ (+ (+ ?x6903 ?x6087) ?x6089) ?x6091) ?x6093) ?x6095) ?x6097) ?x6099)))
 (= (- (- (- ?x6910 ?x6101) ?x6103) ?x6105) 0.0))))))))))))))))
(assert
 (let ((?x4649 (* l_0_4_29 l_0_4_29)))
 (let ((?x4653 (* l_0_4_1 l_0_4_1)))
 (let ((?x6129 (- ?x4653 ?x4649)))
 (= ?x6129 0.0)))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4668 (* ?x4667 l_0_4_30)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x6161 (* ?x4746 l_0_4_2)))
 (let ((?x6162 (- ?x6161 ?x4668)))
 (= ?x6162 0.0)))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4695 (* ?x4667 l_0_4_32)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x6194 (* ?x4746 l_0_4_4)))
 (= (- ?x6194 ?x4695) 0.0))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4732 (* ?x4667 l_0_4_35)))
 (let ((?x6272 (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x4732)))
 (= ?x6272 0.0)))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4738 (* ?x4667 l_0_4_39)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x4748 (* ?x4746 l_0_4_11)))
 (let ((?x6307 (- ?x4748 ?x4738)))
 (= ?x6307 0.0)))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4756 (* ?x4667 l_0_4_44)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x4749 (* ?x4746 l_0_4_16)))
 (= (- ?x4749 ?x4756) 0.0))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4774 (* ?x4667 l_0_4_50)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x6428 (* ?x4746 l_0_4_22)))
 (let ((?x6948 (- (+ (- ?x6428 ?x4774) (* (* 2.0 l_0_4_57) l_0_4_60)) (* (* 2.0 l_0_4_85) l_0_4_88))))
 (= ?x6948 0.0)))))))
(assert
 (let ((?x4833 (* l_0_4_31 l_0_4_31)))
 (let ((?x4831 (* l_0_4_30 l_0_4_30)))
 (let ((?x4829 (* l_0_4_3 l_0_4_3)))
 (let ((?x4827 (* l_0_4_2 l_0_4_2)))
 (let ((?x6964 (- (* (* 2.0 l_0_4_113) l_0_4_116) (* (* 2.0 l_0_4_141) l_0_4_144))))
 (= (- (- (+ (+ ?x6964 ?x4827) ?x4829) ?x4831) ?x4833) 0.0)))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4890 (* ?x4700 l_0_4_33)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4888 (* ?x4697 l_0_4_32)))
 (let ((?x4885 (* 2.0 l_0_4_3)))
 (let ((?x4886 (* ?x4885 l_0_4_5)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x4883 (* ?x4882 l_0_4_4)))
 (= (- (- (+ ?x4883 ?x4886) ?x4888) ?x4890) 0.0))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4965 (* ?x4700 l_0_4_36)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4963 (* ?x4697 l_0_4_35)))
 (let ((?x4885 (* 2.0 l_0_4_3)))
 (let ((?x4961 (* ?x4885 l_0_4_8)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x4959 (* ?x4882 l_0_4_7)))
 (= (- (- (+ ?x4959 ?x4961) ?x4963) ?x4965) 0.0))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x5117 (* ?x4700 l_0_4_45)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x5114 (* ?x4697 l_0_4_44)))
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4695 (* ?x4667 l_0_4_32)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5111 (* ?x5110 l_0_4_3)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5108 (* ?x5107 l_0_4_2)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x6194 (* ?x4746 l_0_4_4)))
 (= (- (- (- (+ (+ ?x6194 ?x5108) ?x5111) ?x4695) ?x5114) ?x5117) 0.0))))))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x5210 (* ?x4700 l_0_4_51)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x5208 (* ?x4697 l_0_4_50)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5206 (* ?x5205 l_0_4_3)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x5203 (* ?x4882 l_0_4_22)))
 (let ((?x6607 (- (- (+ ?x5203 ?x5206) ?x5208) ?x5210)))
 (let ((?x7001 (+ (+ ?x6607 (* (* 2.0 l_0_4_58) l_0_4_60)) (* (* 2.0 l_0_4_59) l_0_4_61))))
 (let ((?x7005 (- (- ?x7001 (* (* 2.0 l_0_4_86) l_0_4_88)) (* (* 2.0 l_0_4_87) l_0_4_89))))
 (= ?x7005 0.0)))))))))))))
(assert
 (let ((?x5281 (* l_0_4_6 l_0_4_6)))
 (let ((?x5279 (* l_0_4_5 l_0_4_5)))
 (let ((?x5277 (* l_0_4_4 l_0_4_4)))
 (let ((?x5275 (* l_0_4_34 l_0_4_34)))
 (let ((?x6623 (+ (- (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x5275) ?x5277)))
 (= (+ (+ ?x6623 ?x5279) ?x5281) 0.0)))))))
(assert
 (let ((?x5310 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5307 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5304 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5301 (* ?x5300 l_0_4_37)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5298 (* ?x5297 l_0_4_36)))
 (let ((?x6639 (+ (+ (- (- (* (* (- 2.0) l_0_4_32) l_0_4_35) ?x5298) ?x5301) ?x5304) ?x5307)))
 (= (+ ?x6639 ?x5310) 0.0))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5349 (* ?x5300 l_0_4_41)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5347 (* ?x5297 l_0_4_40)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5345 (* ?x5295 l_0_4_39)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5343 (* ?x5342 l_0_4_6)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5340 (* ?x4692 l_0_4_5)))
 (let ((?x5371 (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x5340) ?x5343)))
 (= (- (- (- ?x5371 ?x5345) ?x5347) ?x5349) 0.0)))))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5392 (* ?x5300 l_0_4_46)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5389 (* ?x5297 l_0_4_45)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5386 (* ?x5295 l_0_4_44)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5383 (* ?x5382 l_0_4_6)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5380 (* ?x5110 l_0_4_5)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5372 (* ?x5107 l_0_4_4)))
 (= (- (- (- (+ (+ ?x5372 ?x5380) ?x5383) ?x5386) ?x5389) ?x5392) 0.0))))))))))))))
(assert
 (let ((?x7035 (* l_0_4_90 l_0_4_90)))
 (let ((?x7033 (* l_0_4_89 l_0_4_89)))
 (let ((?x7031 (* l_0_4_88 l_0_4_88)))
 (let ((?x7029 (* l_0_4_62 l_0_4_62)))
 (let ((?x7027 (* l_0_4_61 l_0_4_61)))
 (let ((?x7025 (* l_0_4_60 l_0_4_60)))
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5447 (* ?x5300 l_0_4_52)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5445 (* ?x5297 l_0_4_51)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5443 (* ?x5295 l_0_4_50)))
 (let ((?x5440 (* 2.0 l_0_4_24)))
 (let ((?x5441 (* ?x5440 l_0_4_6)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5438 (* ?x5205 l_0_4_5)))
 (let ((?x6684 (- (- (+ (+ (* (* 2.0 l_0_4_22) l_0_4_4) ?x5438) ?x5441) ?x5443) ?x5445)))
 (let ((?x6685 (- ?x6684 ?x5447)))
 (= (- (- (- (+ (+ (+ ?x6685 ?x7025) ?x7027) ?x7029) ?x7031) ?x7033) ?x7035) 0.0))))))))))))))))))))
(assert
 (let ((?x5487 (* l_0_4_9 l_0_4_9)))
 (let ((?x5485 (* l_0_4_8 l_0_4_8)))
 (let ((?x5483 (* l_0_4_7 l_0_4_7)))
 (let ((?x5481 (* l_0_4_38 l_0_4_38)))
 (let ((?x5479 (* l_0_4_37 l_0_4_37)))
 (let ((?x5477 (* l_0_4_36 l_0_4_36)))
 (let ((?x6701 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x5477) ?x5479)))
 (= (+ (+ (+ (- ?x6701 ?x5481) ?x5483) ?x5485) ?x5487) 0.0)))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5522 (* ?x5521 l_0_4_42)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5519 (* ?x5518 l_0_4_41)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5516 (* ?x5515 l_0_4_40)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5513 (* ?x5512 l_0_4_39)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5510 (* ?x5342 l_0_4_9)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5508 (* ?x4692 l_0_4_8)))
 (let ((?x4684 (* 2.0 l_0_4_11)))
 (let ((?x5506 (* ?x4684 l_0_4_7)))
 (let ((?x5546 (* 2.0 l_0_4_10)))
 (let ((?x5548 (* ?x5546 l_0_4_14)))
 (let ((?x6725 (- (- (- (- (+ (+ (+ ?x5548 ?x5506) ?x5508) ?x5510) ?x5513) ?x5516) ?x5519) ?x5522)))
 (= ?x6725 0.0)))))))))))))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5579 (* ?x5521 l_0_4_47)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5576 (* ?x5518 l_0_4_46)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5573 (* ?x5515 l_0_4_45)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5570 (* ?x5512 l_0_4_44)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5567 (* ?x5382 l_0_4_9)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5565 (* ?x5110 l_0_4_8)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5563 (* ?x5107 l_0_4_7)))
 (let ((?x5546 (* 2.0 l_0_4_10)))
 (let ((?x5550 (* ?x5546 l_0_4_19)))
 (let ((?x6741 (- (- (- (- (+ (+ (+ ?x5550 ?x5563) ?x5565) ?x5567) ?x5570) ?x5573) ?x5576) ?x5579)))
 (= ?x6741 0.0)))))))))))))))))))
(assert
 (let ((?x5710 (* l_0_4_43 l_0_4_43)))
 (let ((?x5708 (* l_0_4_42 l_0_4_42)))
 (let ((?x5706 (* l_0_4_41 l_0_4_41)))
 (let ((?x5704 (* l_0_4_40 l_0_4_40)))
 (let ((?x5702 (* l_0_4_39 l_0_4_39)))
 (let ((?x5700 (* l_0_4_15 l_0_4_15)))
 (let ((?x5698 (* l_0_4_14 l_0_4_14)))
 (let ((?x5696 (* l_0_4_13 l_0_4_13)))
 (let ((?x6781 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5696) ?x5698)))
 (= (- (- (- (- (- (+ ?x6781 ?x5700) ?x5702) ?x5704) ?x5706) ?x5708) ?x5710) 0.0)))))))))))
(assert
 (let ((?x5767 (* 2.0 l_0_4_43)))
 (let ((?x5768 (* ?x5767 l_0_4_48)))
 (let ((?x5763 (* 2.0 l_0_4_42)))
 (let ((?x5764 (* ?x5763 l_0_4_47)))
 (let ((?x5759 (* 2.0 l_0_4_41)))
 (let ((?x5760 (* ?x5759 l_0_4_46)))
 (let ((?x5755 (* 2.0 l_0_4_40)))
 (let ((?x5756 (* ?x5755 l_0_4_45)))
 (let ((?x5751 (* 2.0 l_0_4_39)))
 (let ((?x5752 (* ?x5751 l_0_4_44)))
 (let ((?x5747 (* 2.0 l_0_4_15)))
 (let ((?x5748 (* ?x5747 l_0_4_20)))
 (let ((?x5743 (* 2.0 l_0_4_14)))
 (let ((?x5744 (* ?x5743 l_0_4_19)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5740 (* ?x5342 l_0_4_18)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5737 (* ?x4692 l_0_4_17)))
 (let ((?x5883 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_16) ?x5737) ?x5740) ?x5744) ?x5748)))
 (= (- (- (- (- (- ?x5883 ?x5752) ?x5756) ?x5760) ?x5764) ?x5768) 0.0)))))))))))))))))))))
(assert
 (let ((?x5767 (* 2.0 l_0_4_43)))
 (let ((?x5845 (* ?x5767 l_0_4_54)))
 (let ((?x5763 (* 2.0 l_0_4_42)))
 (let ((?x5843 (* ?x5763 l_0_4_53)))
 (let ((?x5759 (* 2.0 l_0_4_41)))
 (let ((?x5841 (* ?x5759 l_0_4_52)))
 (let ((?x5755 (* 2.0 l_0_4_40)))
 (let ((?x5839 (* ?x5755 l_0_4_51)))
 (let ((?x5751 (* 2.0 l_0_4_39)))
 (let ((?x5837 (* ?x5751 l_0_4_50)))
 (let ((?x5747 (* 2.0 l_0_4_15)))
 (let ((?x5835 (* ?x5747 l_0_4_26)))
 (let ((?x5743 (* 2.0 l_0_4_14)))
 (let ((?x5833 (* ?x5743 l_0_4_25)))
 (let ((?x5342 (* 2.0 l_0_4_13)))
 (let ((?x5831 (* ?x5342 l_0_4_24)))
 (let ((?x4692 (* 2.0 l_0_4_12)))
 (let ((?x5829 (* ?x4692 l_0_4_23)))
 (let ((?x5968 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_22) ?x5829) ?x5831) ?x5833) ?x5835)))
 (let ((?x6820 (- (- (- (- (- ?x5968 ?x5837) ?x5839) ?x5841) ?x5843) ?x5845)))
 (let ((?x7052 (+ (+ ?x6820 (* (* 2.0 l_0_4_60) l_0_4_67)) (* (* 2.0 l_0_4_61) l_0_4_68))))
 (let ((?x7056 (- (+ ?x7052 (* (* 2.0 l_0_4_62) l_0_4_69)) (* (* 2.0 l_0_4_88) l_0_4_95))))
 (let ((?x7060 (- (- ?x7056 (* (* 2.0 l_0_4_89) l_0_4_96)) (* (* 2.0 l_0_4_90) l_0_4_97))))
 (= ?x7060 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5919 (* l_0_4_49 l_0_4_49)))
 (let ((?x5917 (* l_0_4_48 l_0_4_48)))
 (let ((?x5915 (* l_0_4_47 l_0_4_47)))
 (let ((?x5913 (* l_0_4_46 l_0_4_46)))
 (let ((?x5911 (* l_0_4_45 l_0_4_45)))
 (let ((?x5909 (* l_0_4_44 l_0_4_44)))
 (let ((?x5902 (* l_0_4_21 l_0_4_21)))
 (let ((?x5900 (* l_0_4_20 l_0_4_20)))
 (let ((?x5898 (* l_0_4_19 l_0_4_19)))
 (let ((?x5896 (* l_0_4_18 l_0_4_18)))
 (let ((?x6833 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x5896) ?x5898)))
 (let ((?x6840 (- (- (- (- (- (+ (+ ?x6833 ?x5900) ?x5902) ?x5909) ?x5911) ?x5913) ?x5915) ?x5917)))
 (= (- ?x6840 ?x5919) 0.0))))))))))))))
(assert
 (let ((?x6005 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x6002 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x5999 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x5996 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x5993 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x5990 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x5982 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x5979 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x5976 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5973 (* ?x5382 l_0_4_24)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5971 (* ?x5110 l_0_4_23)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5969 (* ?x5107 l_0_4_22)))
 (let ((?x7091 (- (* (* (- 2.0) l_0_4_100) l_0_4_88) (* (* 2.0 l_0_4_101) l_0_4_89))))
 (let ((?x7096 (+ (+ (+ (- ?x7091 (* (* 2.0 l_0_4_102) l_0_4_90)) ?x5969) ?x5971) ?x5973)))
 (let ((?x7103 (- (- (- (- (+ (+ (+ ?x7096 ?x5976) ?x5979) ?x5982) ?x5990) ?x5993) ?x5996) ?x5999)))
 (let ((?x7109 (+ (+ (- (- ?x7103 ?x6002) ?x6005) (* (* 2.0 l_0_4_60) l_0_4_72)) (* (* 2.0 l_0_4_61) l_0_4_73))))
 (= (+ ?x7109 (* (* 2.0 l_0_4_62) l_0_4_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x6105 (* l_0_4_56 l_0_4_56)))
 (let ((?x6103 (* l_0_4_55 l_0_4_55)))
 (let ((?x6101 (* l_0_4_54 l_0_4_54)))
 (let ((?x6099 (* l_0_4_53 l_0_4_53)))
 (let ((?x6097 (* l_0_4_52 l_0_4_52)))
 (let ((?x6095 (* l_0_4_51 l_0_4_51)))
 (let ((?x6093 (* l_0_4_50 l_0_4_50)))
 (let ((?x6091 (* l_0_4_28 l_0_4_28)))
 (let ((?x6089 (* l_0_4_27 l_0_4_27)))
 (let ((?x6087 (* l_0_4_26 l_0_4_26)))
 (let ((?x6085 (* l_0_4_25 l_0_4_25)))
 (let ((?x6083 (* l_0_4_24 l_0_4_24)))
 (let ((?x6081 (* l_0_4_23 l_0_4_23)))
 (let ((?x6109 (* l_0_4_22 l_0_4_22)))
 (let ((?x7151 (- (* (* (- 2.0) l_0_4_106) l_0_4_88) (* (* 2.0 l_0_4_107) l_0_4_89))))
 (let ((?x7156 (+ (+ (+ (- ?x7151 (* (* 2.0 l_0_4_108) l_0_4_90)) ?x6109) ?x6081) ?x6083)))
 (let ((?x7163 (- (- (- (+ (+ (+ (+ ?x7156 ?x6085) ?x6087) ?x6089) ?x6091) ?x6093) ?x6095) ?x6097)))
 (let ((?x7169 (+ (- (- (- (- ?x7163 ?x6099) ?x6101) ?x6103) ?x6105) (* (* 2.0 l_0_4_60) l_0_4_78))))
 (let ((?x7173 (+ (+ ?x7169 (* (* 2.0 l_0_4_61) l_0_4_79)) (* (* 2.0 l_0_4_62) l_0_4_80))))
 (= ?x7173 0.0)))))))))))))))))))))
(assert
 (let ((?x4649 (* l_0_4_29 l_0_4_29)))
 (let ((?x4653 (* l_0_4_1 l_0_4_1)))
 (let ((?x6129 (- ?x4653 ?x4649)))
 (= ?x6129 0.0)))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4668 (* ?x4667 l_0_4_30)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x6161 (* ?x4746 l_0_4_2)))
 (let ((?x7215 (- (+ ?x6161 (* (* 2.0 l_0_4_113) l_0_4_128)) (* (* 2.0 l_0_4_141) l_0_4_156))))
 (= (- ?x7215 ?x4668) 0.0)))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4732 (* ?x4667 l_0_4_35)))
 (let ((?x6272 (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x4732)))
 (= ?x6272 0.0)))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4756 (* ?x4667 l_0_4_44)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x4749 (* ?x4746 l_0_4_16)))
 (= (- ?x4749 ?x4756) 0.0))))))
(assert
 (let ((?x4667 (* 2.0 l_0_4_29)))
 (let ((?x4774 (* ?x4667 l_0_4_50)))
 (let ((?x4746 (* 2.0 l_0_4_1)))
 (let ((?x6428 (* ?x4746 l_0_4_22)))
 (let ((?x7233 (- (- ?x6428 (* (* 2.0 l_0_4_100) l_0_4_86)) (* (* 2.0 l_0_4_101) l_0_4_87))))
 (let ((?x7238 (+ (+ (- ?x7233 ?x4774) (* (* 2.0 l_0_4_58) l_0_4_72)) (* (* 2.0 l_0_4_59) l_0_4_73))))
 (= ?x7238 0.0))))))))
(assert
 (let ((?x4833 (* l_0_4_31 l_0_4_31)))
 (let ((?x4831 (* l_0_4_30 l_0_4_30)))
 (let ((?x4829 (* l_0_4_3 l_0_4_3)))
 (let ((?x4827 (* l_0_4_2 l_0_4_2)))
 (let ((?x7262 (+ (* (* 2.0 l_0_4_114) l_0_4_128) (* (* 2.0 l_0_4_115) l_0_4_129))))
 (let ((?x7266 (- (- ?x7262 (* (* 2.0 l_0_4_142) l_0_4_156)) (* (* 2.0 l_0_4_143) l_0_4_157))))
 (= (- (- (+ (+ ?x7266 ?x4827) ?x4829) ?x4831) ?x4833) 0.0))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4890 (* ?x4700 l_0_4_33)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4888 (* ?x4697 l_0_4_32)))
 (let ((?x4885 (* 2.0 l_0_4_3)))
 (let ((?x4886 (* ?x4885 l_0_4_5)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x4883 (* ?x4882 l_0_4_4)))
 (let ((?x7297 (+ (* (* 2.0 l_0_4_116) l_0_4_128) (* (* 2.0 l_0_4_117) l_0_4_129))))
 (let ((?x7301 (- (+ ?x7297 (* (* 2.0 l_0_4_118) l_0_4_130)) (* (* 2.0 l_0_4_144) l_0_4_156))))
 (let ((?x7305 (- (- ?x7301 (* (* 2.0 l_0_4_145) l_0_4_157)) (* (* 2.0 l_0_4_146) l_0_4_158))))
 (= (- (- (+ (+ ?x7305 ?x4883) ?x4886) ?x4888) ?x4890) 0.0)))))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x4965 (* ?x4700 l_0_4_36)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x4963 (* ?x4697 l_0_4_35)))
 (let ((?x4885 (* 2.0 l_0_4_3)))
 (let ((?x4961 (* ?x4885 l_0_4_8)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x4959 (* ?x4882 l_0_4_7)))
 (let ((?x7344 (+ (* (* 2.0 l_0_4_119) l_0_4_128) (* (* 2.0 l_0_4_120) l_0_4_129))))
 (let ((?x7348 (+ (+ ?x7344 (* (* 2.0 l_0_4_121) l_0_4_130)) (* (* 2.0 l_0_4_122) l_0_4_131))))
 (let ((?x7352 (- (- ?x7348 (* (* 2.0 l_0_4_147) l_0_4_156)) (* (* 2.0 l_0_4_148) l_0_4_157))))
 (let ((?x7356 (- (- ?x7352 (* (* 2.0 l_0_4_149) l_0_4_158)) (* (* 2.0 l_0_4_150) l_0_4_159))))
 (= (- (- (+ (+ ?x7356 ?x4959) ?x4961) ?x4963) ?x4965) 0.0))))))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x5117 (* ?x4700 l_0_4_45)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x5114 (* ?x4697 l_0_4_44)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5111 (* ?x5110 l_0_4_3)))
 (let ((?x7429 (* l_0_4_161 l_0_4_161)))
 (let ((?x7427 (* l_0_4_160 l_0_4_160)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5108 (* ?x5107 l_0_4_2)))
 (let ((?x7424 (* l_0_4_159 l_0_4_159)))
 (let ((?x7422 (* l_0_4_158 l_0_4_158)))
 (let ((?x7420 (* l_0_4_157 l_0_4_157)))
 (let ((?x7418 (* l_0_4_156 l_0_4_156)))
 (let ((?x7405 (+ (* 1.0 (* l_0_4_128 l_0_4_128)) (* 1.0 (* l_0_4_129 l_0_4_129)))))
 (let ((?x7411 (+ (+ ?x7405 (* 1.0 (* l_0_4_130 l_0_4_130))) (* 1.0 (* l_0_4_131 l_0_4_131)))))
 (let ((?x7417 (+ (+ ?x7411 (* 1.0 (* l_0_4_132 l_0_4_132))) (* 1.0 (* l_0_4_133 l_0_4_133)))))
 (let ((?x7430 (- (- (+ (- (- (- (- ?x7417 ?x7418) ?x7420) ?x7422) ?x7424) ?x5108) ?x7427) ?x7429)))
 (= (- (- (+ ?x7430 ?x5111) ?x5114) ?x5117) 0.0))))))))))))))))))))
(assert
 (let ((?x4700 (* 2.0 l_0_4_31)))
 (let ((?x5210 (* ?x4700 l_0_4_51)))
 (let ((?x4697 (* 2.0 l_0_4_30)))
 (let ((?x5208 (* ?x4697 l_0_4_50)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5206 (* ?x5205 l_0_4_3)))
 (let ((?x4882 (* 2.0 l_0_4_2)))
 (let ((?x5203 (* ?x4882 l_0_4_22)))
 (let ((?x7465 (+ (* (* 2.0 l_0_4_128) l_0_4_134) (* (* 2.0 l_0_4_129) l_0_4_135))))
 (let ((?x7471 (+ (+ ?x7465 (* (* 2.0 l_0_4_130) l_0_4_136)) (* (* 2.0 l_0_4_131) l_0_4_137))))
 (let ((?x7477 (+ (+ ?x7471 (* (* 2.0 l_0_4_132) l_0_4_138)) (* (* 2.0 l_0_4_133) l_0_4_139))))
 (let ((?x7483 (- (- ?x7477 (* (* 2.0 l_0_4_156) l_0_4_162)) (* (* 2.0 l_0_4_157) l_0_4_163))))
 (let ((?x7489 (- (- ?x7483 (* (* 2.0 l_0_4_158) l_0_4_164)) (* (* 2.0 l_0_4_159) l_0_4_165))))
 (let ((?x7495 (- (- ?x7489 (* (* 2.0 l_0_4_160) l_0_4_166)) (* (* 2.0 l_0_4_161) l_0_4_167))))
 (= (- (- (+ (+ ?x7495 ?x5203) ?x5206) ?x5208) ?x5210) 0.0))))))))))))))))
(assert
 (let ((?x5281 (* l_0_4_6 l_0_4_6)))
 (let ((?x5279 (* l_0_4_5 l_0_4_5)))
 (let ((?x5277 (* l_0_4_4 l_0_4_4)))
 (let ((?x5275 (* l_0_4_34 l_0_4_34)))
 (let ((?x6623 (+ (- (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x5275) ?x5277)))
 (= (+ (+ ?x6623 ?x5279) ?x5281) 0.0)))))))
(assert
 (let ((?x5310 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5307 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5304 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5301 (* ?x5300 l_0_4_37)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5298 (* ?x5297 l_0_4_36)))
 (let ((?x6639 (+ (+ (- (- (* (* (- 2.0) l_0_4_32) l_0_4_35) ?x5298) ?x5301) ?x5304) ?x5307)))
 (= (+ ?x6639 ?x5310) 0.0))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5392 (* ?x5300 l_0_4_46)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5389 (* ?x5297 l_0_4_45)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5386 (* ?x5295 l_0_4_44)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5383 (* ?x5382 l_0_4_6)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5380 (* ?x5110 l_0_4_5)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5372 (* ?x5107 l_0_4_4)))
 (= (- (- (- (+ (+ ?x5372 ?x5380) ?x5383) ?x5386) ?x5389) ?x5392) 0.0))))))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_4_34)))
 (let ((?x5447 (* ?x5300 l_0_4_52)))
 (let ((?x5297 (* 2.0 l_0_4_33)))
 (let ((?x5445 (* ?x5297 l_0_4_51)))
 (let ((?x5295 (* 2.0 l_0_4_32)))
 (let ((?x5443 (* ?x5295 l_0_4_50)))
 (let ((?x5440 (* 2.0 l_0_4_24)))
 (let ((?x5441 (* ?x5440 l_0_4_6)))
 (let ((?x5205 (* 2.0 l_0_4_23)))
 (let ((?x5438 (* ?x5205 l_0_4_5)))
 (let ((?x6684 (- (- (+ (+ (* (* 2.0 l_0_4_22) l_0_4_4) ?x5438) ?x5441) ?x5443) ?x5445)))
 (let ((?x6685 (- ?x6684 ?x5447)))
 (= ?x6685 0.0))))))))))))))
(assert
 (let ((?x5487 (* l_0_4_9 l_0_4_9)))
 (let ((?x5485 (* l_0_4_8 l_0_4_8)))
 (let ((?x5483 (* l_0_4_7 l_0_4_7)))
 (let ((?x5481 (* l_0_4_38 l_0_4_38)))
 (let ((?x5479 (* l_0_4_37 l_0_4_37)))
 (let ((?x5477 (* l_0_4_36 l_0_4_36)))
 (let ((?x6701 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x5477) ?x5479)))
 (= (+ (+ (+ (- ?x6701 ?x5481) ?x5483) ?x5485) ?x5487) 0.0)))))))))
(assert
 (let ((?x5521 (* 2.0 l_0_4_38)))
 (let ((?x5579 (* ?x5521 l_0_4_47)))
 (let ((?x5518 (* 2.0 l_0_4_37)))
 (let ((?x5576 (* ?x5518 l_0_4_46)))
 (let ((?x5515 (* 2.0 l_0_4_36)))
 (let ((?x5573 (* ?x5515 l_0_4_45)))
 (let ((?x5512 (* 2.0 l_0_4_35)))
 (let ((?x5570 (* ?x5512 l_0_4_44)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5567 (* ?x5382 l_0_4_9)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5565 (* ?x5110 l_0_4_8)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5563 (* ?x5107 l_0_4_7)))
 (let ((?x5546 (* 2.0 l_0_4_10)))
 (let ((?x5550 (* ?x5546 l_0_4_19)))
 (let ((?x6741 (- (- (- (- (+ (+ (+ ?x5550 ?x5563) ?x5565) ?x5567) ?x5570) ?x5573) ?x5576) ?x5579)))
 (= ?x6741 0.0)))))))))))))))))))
(assert
 (let ((?x5919 (* l_0_4_49 l_0_4_49)))
 (let ((?x5917 (* l_0_4_48 l_0_4_48)))
 (let ((?x5915 (* l_0_4_47 l_0_4_47)))
 (let ((?x5913 (* l_0_4_46 l_0_4_46)))
 (let ((?x5911 (* l_0_4_45 l_0_4_45)))
 (let ((?x5909 (* l_0_4_44 l_0_4_44)))
 (let ((?x5902 (* l_0_4_21 l_0_4_21)))
 (let ((?x5900 (* l_0_4_20 l_0_4_20)))
 (let ((?x5898 (* l_0_4_19 l_0_4_19)))
 (let ((?x5896 (* l_0_4_18 l_0_4_18)))
 (let ((?x6833 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x5896) ?x5898)))
 (let ((?x6840 (- (- (- (- (- (+ (+ ?x6833 ?x5900) ?x5902) ?x5909) ?x5911) ?x5913) ?x5915) ?x5917)))
 (= (- ?x6840 ?x5919) 0.0))))))))))))))
(assert
 (let ((?x6005 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x6002 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x5999 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x5996 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x5993 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x5990 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x5982 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x5979 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x5976 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x5382 (* 2.0 l_0_4_18)))
 (let ((?x5973 (* ?x5382 l_0_4_24)))
 (let ((?x5110 (* 2.0 l_0_4_17)))
 (let ((?x5971 (* ?x5110 l_0_4_23)))
 (let ((?x5107 (* 2.0 l_0_4_16)))
 (let ((?x5969 (* ?x5107 l_0_4_22)))
 (let ((?x6869 (- (- (+ (+ (+ (+ (+ ?x5969 ?x5971) ?x5973) ?x5976) ?x5979) ?x5982) ?x5990) ?x5993)))
 (= (- (- (- (- ?x6869 ?x5996) ?x5999) ?x6002) ?x6005) 0.0))))))))))))))))))
(assert
 (let ((?x6105 (* l_0_4_56 l_0_4_56)))
 (let ((?x6103 (* l_0_4_55 l_0_4_55)))
 (let ((?x6101 (* l_0_4_54 l_0_4_54)))
 (let ((?x6099 (* l_0_4_53 l_0_4_53)))
 (let ((?x6097 (* l_0_4_52 l_0_4_52)))
 (let ((?x6095 (* l_0_4_51 l_0_4_51)))
 (let ((?x6093 (* l_0_4_50 l_0_4_50)))
 (let ((?x6091 (* l_0_4_28 l_0_4_28)))
 (let ((?x6089 (* l_0_4_27 l_0_4_27)))
 (let ((?x6087 (* l_0_4_26 l_0_4_26)))
 (let ((?x6085 (* l_0_4_25 l_0_4_25)))
 (let ((?x6083 (* l_0_4_24 l_0_4_24)))
 (let ((?x6903 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x6083) ?x6085)))
 (let ((?x6910 (- (- (- (- (+ (+ (+ ?x6903 ?x6087) ?x6089) ?x6091) ?x6093) ?x6095) ?x6097) ?x6099)))
 (= (- (- (- ?x6910 ?x6101) ?x6103) ?x6105) 0.0))))))))))))))))
(assert
 (= (- (* l_0_4_57 l_0_4_57) (* l_0_4_85 l_0_4_85)) 0.0))
(assert
 (let ((?x7565 (- (* (* 2.0 l_0_4_57) l_0_4_58) (* (* 2.0 l_0_4_85) l_0_4_86))))
 (= ?x7565 0.0)))
(assert
 (let ((?x7578 (- (* (* 2.0 l_0_4_57) l_0_4_67) (* (* 2.0 l_0_4_85) l_0_4_95))))
 (= ?x7578 0.0)))
(assert
 (let ((?x7591 (+ (* (* (- 2.0) l_0_4_100) l_0_4_85) (* (* 2.0 l_0_4_57) l_0_4_72))))
 (= ?x7591 0.0)))
(assert
 (let ((?x7597 (+ (* (* (- 2.0) l_0_4_106) l_0_4_85) (* (* 2.0 l_0_4_57) l_0_4_78))))
 (= ?x7597 0.0)))
(assert
 (let ((?x7618 (* l_0_4_87 l_0_4_87)))
 (let ((?x7616 (* l_0_4_86 l_0_4_86)))
 (let ((?x7614 (* l_0_4_59 l_0_4_59)))
 (let ((?x7612 (* l_0_4_58 l_0_4_58)))
 (let ((?x7607 (- (* (* 2.0 l_0_4_113) l_0_4_134) (* (* 2.0 l_0_4_141) l_0_4_162))))
 (= (- (- (+ (+ ?x7607 ?x7612) ?x7614) ?x7616) ?x7618) 0.0)))))))
(assert
 (let ((?x7639 (- (* (* (- 2.0) l_0_4_106) l_0_4_86) (* (* 2.0 l_0_4_107) l_0_4_87))))
 (let ((?x7643 (+ (+ ?x7639 (* (* 2.0 l_0_4_58) l_0_4_78)) (* (* 2.0 l_0_4_59) l_0_4_79))))
 (= ?x7643 0.0))))
(assert
 (let ((?x7677 (* l_0_4_99 l_0_4_99)))
 (let ((?x7675 (* l_0_4_98 l_0_4_98)))
 (let ((?x7673 (* l_0_4_97 l_0_4_97)))
 (let ((?x7671 (* l_0_4_96 l_0_4_96)))
 (let ((?x7669 (* l_0_4_95 l_0_4_95)))
 (let ((?x7667 (* l_0_4_71 l_0_4_71)))
 (let ((?x7665 (* l_0_4_70 l_0_4_70)))
 (let ((?x7663 (* l_0_4_69 l_0_4_69)))
 (let ((?x7666 (+ (+ (+ (* l_0_4_67 l_0_4_67) (* l_0_4_68 l_0_4_68)) ?x7663) ?x7665)))
 (= (- (- (- (- (- (+ ?x7666 ?x7667) ?x7669) ?x7671) ?x7673) ?x7675) ?x7677) 0.0)))))))))))
(assert
 (let ((?x7699 (- (* (* (- 2.0) l_0_4_100) l_0_4_95) (* (* 2.0 l_0_4_101) l_0_4_96))))
 (let ((?x7703 (- (- ?x7699 (* (* 2.0 l_0_4_102) l_0_4_97)) (* (* 2.0 l_0_4_103) l_0_4_98))))
 (let ((?x7709 (+ (- ?x7703 (* (* 2.0 l_0_4_104) l_0_4_99)) (* (* 2.0 l_0_4_67) l_0_4_72))))
 (let ((?x7715 (+ (+ ?x7709 (* (* 2.0 l_0_4_68) l_0_4_73)) (* (* 2.0 l_0_4_69) l_0_4_74))))
 (let ((?x7721 (+ (+ ?x7715 (* (* 2.0 l_0_4_70) l_0_4_75)) (* (* 2.0 l_0_4_71) l_0_4_76))))
 (= ?x7721 0.0)))))))
(assert
 (let ((?x7754 (- (* (* (- 2.0) l_0_4_106) l_0_4_95) (* (* 2.0 l_0_4_107) l_0_4_96))))
 (let ((?x7768 (- (- ?x7754 (* (* 2.0 l_0_4_108) l_0_4_97)) (* (* 2.0 l_0_4_109) l_0_4_98))))
 (let ((?x7773 (+ (- ?x7768 (* (* 2.0 l_0_4_110) l_0_4_99)) (* (* 2.0 l_0_4_67) l_0_4_78))))
 (let ((?x7777 (+ (+ ?x7773 (* (* 2.0 l_0_4_68) l_0_4_79)) (* (* 2.0 l_0_4_69) l_0_4_80))))
 (let ((?x7781 (+ (+ ?x7777 (* (* 2.0 l_0_4_70) l_0_4_81)) (* (* 2.0 l_0_4_71) l_0_4_82))))
 (= ?x7781 0.0)))))))
(assert
 (let ((?x7844 (* l_0_4_77 l_0_4_77)))
 (let ((?x7842 (* l_0_4_76 l_0_4_76)))
 (let ((?x7840 (* l_0_4_75 l_0_4_75)))
 (let ((?x7838 (* l_0_4_74 l_0_4_74)))
 (let ((?x7836 (* l_0_4_73 l_0_4_73)))
 (let ((?x7834 (* l_0_4_72 l_0_4_72)))
 (let ((?x7832 (* l_0_4_105 l_0_4_105)))
 (let ((?x7830 (* l_0_4_104 l_0_4_104)))
 (let ((?x7828 (* l_0_4_103 l_0_4_103)))
 (let ((?x7818 (* l_0_4_102 l_0_4_102)))
 (let ((?x7819 (- (- (* (- l_0_4_100) l_0_4_100) (* l_0_4_101 l_0_4_101)) ?x7818)))
 (let ((?x7841 (+ (+ (+ (+ (- (- (- ?x7819 ?x7828) ?x7830) ?x7832) ?x7834) ?x7836) ?x7838) ?x7840)))
 (= (+ (+ ?x7841 ?x7842) ?x7844) 0.0))))))))))))))
(assert
 (let ((?x7875 (- (* (* (- 2.0) l_0_4_100) l_0_4_106) (* (* 2.0 l_0_4_101) l_0_4_107))))
 (let ((?x7879 (- (- ?x7875 (* (* 2.0 l_0_4_102) l_0_4_108)) (* (* 2.0 l_0_4_103) l_0_4_109))))
 (let ((?x7884 (- (- ?x7879 (* (* 2.0 l_0_4_104) l_0_4_110)) (* (* 2.0 l_0_4_105) l_0_4_111))))
 (let ((?x7890 (+ (+ ?x7884 (* (* 2.0 l_0_4_72) l_0_4_78)) (* (* 2.0 l_0_4_73) l_0_4_79))))
 (let ((?x7896 (+ (+ ?x7890 (* (* 2.0 l_0_4_74) l_0_4_80)) (* (* 2.0 l_0_4_75) l_0_4_81))))
 (let ((?x7902 (+ (+ ?x7896 (* (* 2.0 l_0_4_76) l_0_4_82)) (* (* 2.0 l_0_4_77) l_0_4_83))))
 (= ?x7902 0.0))))))))
(assert
 (let ((?x7977 (* l_0_4_84 l_0_4_84)))
 (let ((?x7975 (* l_0_4_83 l_0_4_83)))
 (let ((?x7973 (* l_0_4_82 l_0_4_82)))
 (let ((?x7971 (* l_0_4_81 l_0_4_81)))
 (let ((?x7969 (* l_0_4_80 l_0_4_80)))
 (let ((?x7967 (* l_0_4_79 l_0_4_79)))
 (let ((?x7965 (* l_0_4_78 l_0_4_78)))
 (let ((?x7963 (* l_0_4_112 l_0_4_112)))
 (let ((?x7961 (* l_0_4_111 l_0_4_111)))
 (let ((?x7959 (* l_0_4_110 l_0_4_110)))
 (let ((?x7948 (* l_0_4_109 l_0_4_109)))
 (let ((?x7945 (* l_0_4_108 l_0_4_108)))
 (let ((?x7947 (- (- (* (- l_0_4_106) l_0_4_106) (* l_0_4_107 l_0_4_107)) ?x7945)))
 (let ((?x7970 (+ (+ (+ (- (- (- (- ?x7947 ?x7948) ?x7959) ?x7961) ?x7963) ?x7965) ?x7967) ?x7969)))
 (= (+ (+ (+ (+ ?x7970 ?x7971) ?x7973) ?x7975) ?x7977) 0.0))))))))))))))))
(assert
 (= (- (* 1.0 (* l_0_4_113 l_0_4_113)) (* l_0_4_141 l_0_4_141)) 0.0))
(assert
 (let ((?x8020 (- (* (* 2.0 l_0_4_113) l_0_4_114) (* (* 2.0 l_0_4_141) l_0_4_142))))
 (= ?x8020 0.0)))
(assert
 (let ((?x8033 (- (* (* 2.0 l_0_4_113) l_0_4_119) (* (* 2.0 l_0_4_141) l_0_4_147))))
 (= ?x8033 0.0)))
(assert
 (let ((?x8046 (+ (* (* 2.0 l_0_4_114) l_0_4_116) (* (* 2.0 l_0_4_115) l_0_4_117))))
 (let ((?x8050 (- (- ?x8046 (* (* 2.0 l_0_4_142) l_0_4_144)) (* (* 2.0 l_0_4_143) l_0_4_145))))
 (= ?x8050 0.0))))
(assert
 (let ((?x8072 (+ (* (* 2.0 l_0_4_114) l_0_4_119) (* (* 2.0 l_0_4_115) l_0_4_120))))
 (let ((?x8076 (- (- ?x8072 (* (* 2.0 l_0_4_142) l_0_4_147)) (* (* 2.0 l_0_4_143) l_0_4_148))))
 (= ?x8076 0.0))))
(assert
 (let ((?x8098 (+ (* (* 2.0 l_0_4_114) l_0_4_134) (* (* 2.0 l_0_4_115) l_0_4_135))))
 (let ((?x8102 (- (- ?x8098 (* (* 2.0 l_0_4_142) l_0_4_162)) (* (* 2.0 l_0_4_143) l_0_4_163))))
 (= ?x8102 0.0))))
(assert
 (let ((?x8134 (* l_0_4_146 l_0_4_146)))
 (let ((?x8132 (* l_0_4_145 l_0_4_145)))
 (let ((?x8130 (* l_0_4_144 l_0_4_144)))
 (let ((?x8126 (+ (* 1.0 (* l_0_4_116 l_0_4_116)) (* 1.0 (* l_0_4_117 l_0_4_117)))))
 (let ((?x8135 (- (- (- (+ ?x8126 (* 1.0 (* l_0_4_118 l_0_4_118))) ?x8130) ?x8132) ?x8134)))
 (= ?x8135 0.0)))))))
(assert
 (let ((?x8150 (+ (* (* 2.0 l_0_4_116) l_0_4_119) (* (* 2.0 l_0_4_117) l_0_4_120))))
 (let ((?x8154 (- (+ ?x8150 (* (* 2.0 l_0_4_118) l_0_4_121)) (* (* 2.0 l_0_4_144) l_0_4_147))))
 (let ((?x8158 (- (- ?x8154 (* (* 2.0 l_0_4_145) l_0_4_148)) (* (* 2.0 l_0_4_146) l_0_4_149))))
 (= ?x8158 0.0)))))
(assert
 (let ((?x8188 (+ (* (* 2.0 l_0_4_116) l_0_4_134) (* (* 2.0 l_0_4_117) l_0_4_135))))
 (let ((?x8192 (- (+ ?x8188 (* (* 2.0 l_0_4_118) l_0_4_136)) (* (* 2.0 l_0_4_144) l_0_4_162))))
 (let ((?x8196 (- (- ?x8192 (* (* 2.0 l_0_4_145) l_0_4_163)) (* (* 2.0 l_0_4_146) l_0_4_164))))
 (= ?x8196 0.0)))))
(assert
 (let ((?x8241 (* l_0_4_150 l_0_4_150)))
 (let ((?x8239 (* l_0_4_149 l_0_4_149)))
 (let ((?x8237 (* l_0_4_148 l_0_4_148)))
 (let ((?x8235 (* l_0_4_147 l_0_4_147)))
 (let ((?x8228 (+ (* 1.0 (* l_0_4_119 l_0_4_119)) (* 1.0 (* l_0_4_120 l_0_4_120)))))
 (let ((?x8234 (+ (+ ?x8228 (* 1.0 (* l_0_4_121 l_0_4_121))) (* 1.0 (* l_0_4_122 l_0_4_122)))))
 (= (- (- (- (- ?x8234 ?x8235) ?x8237) ?x8239) ?x8241) 0.0))))))))
(assert
 (let ((?x8290 (* l_0_4_168 l_0_4_168)))
 (let ((?x8288 (* l_0_4_167 l_0_4_167)))
 (let ((?x8286 (* l_0_4_166 l_0_4_166)))
 (let ((?x8284 (* l_0_4_165 l_0_4_165)))
 (let ((?x8282 (* l_0_4_164 l_0_4_164)))
 (let ((?x8280 (* l_0_4_163 l_0_4_163)))
 (let ((?x8278 (* l_0_4_162 l_0_4_162)))
 (let ((?x8262 (+ (* 1.0 (* l_0_4_134 l_0_4_134)) (* 1.0 (* l_0_4_135 l_0_4_135)))))
 (let ((?x8268 (+ (+ ?x8262 (* 1.0 (* l_0_4_136 l_0_4_136))) (* 1.0 (* l_0_4_137 l_0_4_137)))))
 (let ((?x8274 (+ (+ ?x8268 (* 1.0 (* l_0_4_138 l_0_4_138))) (* 1.0 (* l_0_4_139 l_0_4_139)))))
 (let ((?x8283 (- (- (- (+ ?x8274 (* 1.0 (* l_0_4_140 l_0_4_140))) ?x8278) ?x8280) ?x8282)))
 (= (- (- (- (- ?x8283 ?x8284) ?x8286) ?x8288) ?x8290) 0.0)))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_28 0.0))
(assert
 (>= l_0_4_29 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_34 0.0))
(assert
 (>= l_0_4_38 0.0))
(assert
 (>= l_0_4_43 0.0))
(assert
 (>= l_0_4_49 0.0))
(assert
 (>= l_0_4_56 0.0))
(assert
 (>= l_0_4_57 0.0))
(assert
 (>= l_0_4_59 0.0))
(assert
 (>= l_0_4_62 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_71 0.0))
(assert
 (>= l_0_4_77 0.0))
(assert
 (>= l_0_4_84 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_87 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_94 0.0))
(assert
 (>= l_0_4_99 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (>= l_0_4_112 0.0))
(assert
 (>= l_0_4_113 0.0))
(assert
 (>= l_0_4_115 0.0))
(assert
 (>= l_0_4_118 0.0))
(assert
 (>= l_0_4_122 0.0))
(assert
 (>= l_0_4_127 0.0))
(assert
 (>= l_0_4_133 0.0))
(assert
 (>= l_0_4_140 0.0))
(assert
 (>= l_0_4_141 0.0))
(assert
 (>= l_0_4_143 0.0))
(assert
 (>= l_0_4_146 0.0))
(assert
 (>= l_0_4_150 0.0))
(assert
 (>= l_0_4_155 0.0))
(assert
 (>= l_0_4_161 0.0))
(assert
 (>= l_0_4_168 0.0))
(assert
 (let ((?x8375 (* l_0_5_31 l_0_5_31)))
 (let ((?x8373 (* l_0_5_30 l_0_5_30)))
 (let ((?x8371 (* l_0_5_3 l_0_5_3)))
 (let ((?x8369 (* l_0_5_2 l_0_5_2)))
 (let ((?x8362 (- (* (* (- 2.0) l_0_5_114) l_0_5_123) (* (* 2.0 l_0_5_115) l_0_5_124))))
 (let ((?x8368 (- (- ?x8362 (* (* 2.0 l_0_5_198) l_0_5_207)) (* (* 2.0 l_0_5_199) l_0_5_208))))
 (= (+ (+ (+ (- (- ?x8368 ?x8369) ?x8371) ?x8373) ?x8375) 1.0) 0.0))))))))
(assert
 (let ((?x8375 (* l_0_5_31 l_0_5_31)))
 (let ((?x8373 (* l_0_5_30 l_0_5_30)))
 (let ((?x8371 (* l_0_5_3 l_0_5_3)))
 (let ((?x8369 (* l_0_5_2 l_0_5_2)))
 (let ((?x8414 (- (* (* (- 2.0) l_0_5_119) l_0_5_134) (* (* 2.0 l_0_5_120) l_0_5_135))))
 (let ((?x8420 (- (- ?x8414 (* (* 2.0 l_0_5_121) l_0_5_136)) (* (* 2.0 l_0_5_122) l_0_5_137))))
 (let ((?x8427 (- (- (+ ?x8420 ?x8369) (* (* 2.0 l_0_5_203) l_0_5_218)) (* (* 2.0 l_0_5_204) l_0_5_219))))
 (let ((?x8433 (- (- ?x8427 (* (* 2.0 l_0_5_205) l_0_5_220)) (* (* 2.0 l_0_5_206) l_0_5_221))))
 (= (- (- (- (+ ?x8433 ?x8371) ?x8373) ?x8375) 1.0) 0.0))))))))))
(assert
 (let ((?x8498 (- (- (- _a_1_) (* (* 2.0 l_0_5_114) l_0_5_119)) (* (* 2.0 l_0_5_115) l_0_5_120))))
 (let ((?x8502 (- (- ?x8498 (* (* 2.0 l_0_5_198) l_0_5_203)) (* (* 2.0 l_0_5_199) l_0_5_204))))
 (= (- ?x8502 1.0) 0.0))))
(assert
 (let ((?x8375 (* l_0_5_31 l_0_5_31)))
 (let ((?x8373 (* l_0_5_30 l_0_5_30)))
 (let ((?x8371 (* l_0_5_3 l_0_5_3)))
 (let ((?x8369 (* l_0_5_2 l_0_5_2)))
 (let ((?x8538 (+ (* (* (- 2.0) l_0_5_113) l_0_5_116) (* (* 2.0 l_0_5_142) l_0_5_144))))
 (let ((?x8544 (- (+ ?x8538 (* (* 2.0 l_0_5_143) l_0_5_145)) (* (* 2.0 l_0_5_170) l_0_5_172))))
 (let ((?x8550 (- (- ?x8544 (* (* 2.0 l_0_5_171) l_0_5_173)) (* (* 2.0 l_0_5_197) l_0_5_200))))
 (= (- (- (- (+ (+ ?x8550 ?x8369) ?x8371) ?x8373) ?x8375) 1.0) 0.0)))))))))
(assert
 (let ((?x8599 (* l_0_5_199 l_0_5_199)))
 (let ((?x8597 (* l_0_5_198 l_0_5_198)))
 (let ((?x8596 (- (- (- _a_0_) (* (* 1.0 l_0_5_114) l_0_5_114)) (* (* 1.0 l_0_5_115) l_0_5_115))))
 (= (- (- ?x8596 ?x8597) ?x8599) 0.0)))))
(assert
 (let ((?x8375 (* l_0_5_31 l_0_5_31)))
 (let ((?x8373 (* l_0_5_30 l_0_5_30)))
 (let ((?x8371 (* l_0_5_3 l_0_5_3)))
 (let ((?x8369 (* l_0_5_2 l_0_5_2)))
 (let ((?x8622 (- (- (- _a_2_) (* (* 2.0 l_0_5_114) l_0_5_128)) (* (* 2.0 l_0_5_115) l_0_5_129))))
 (let ((?x8626 (- (- ?x8622 (* (* 2.0 l_0_5_198) l_0_5_212)) (* (* 2.0 l_0_5_199) l_0_5_213))))
 (= (- (- (+ (+ ?x8626 ?x8369) ?x8371) ?x8373) ?x8375) 0.0))))))))
(assert
 (let ((?x8672 (* l_0_5_29 l_0_5_29)))
 (let ((?x8671 (- (+ (* (- l_0_5_1) l_0_5_1) (* (* 2.0 l_0_5_141) l_0_5_151)) (* (* 2.0 l_0_5_169) l_0_5_179))))
 (= (+ ?x8671 ?x8672) 0.0))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8705 (* ?x8704 l_0_5_30)))
 (let ((?x8693 (- (* (* (- 2.0) l_0_5_1) l_0_5_2) (* (* 2.0 l_0_5_113) l_0_5_123))))
 (let ((?x8697 (+ (+ ?x8693 (* (* 2.0 l_0_5_142) l_0_5_151)) (* (* 2.0 l_0_5_143) l_0_5_152))))
 (let ((?x8701 (- (- ?x8697 (* (* 2.0 l_0_5_170) l_0_5_179)) (* (* 2.0 l_0_5_171) l_0_5_180))))
 (= (+ (- ?x8701 (* (* 2.0 l_0_5_197) l_0_5_207)) ?x8705) 0.0)))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x8777 (* ?x8776 l_0_5_40)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x8774 (* ?x8773 l_0_5_39)))
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8771 (* ?x8704 l_0_5_32)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x8751 (* ?x8750 l_0_5_3)))
 (let ((?x8741 (* 2.0 l_0_5_11)))
 (let ((?x8748 (* ?x8741 l_0_5_2)))
 (let ((?x8755 (+ (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x8748) ?x8751) (* (* 2.0 l_0_5_144) l_0_5_151))))
 (let ((?x8761 (+ (+ ?x8755 (* (* 2.0 l_0_5_145) l_0_5_152)) (* (* 2.0 l_0_5_146) l_0_5_153))))
 (let ((?x8767 (- (- ?x8761 (* (* 2.0 l_0_5_172) l_0_5_179)) (* (* 2.0 l_0_5_173) l_0_5_180))))
 (let ((?x8778 (- (- (+ (- ?x8767 (* (* 2.0 l_0_5_174) l_0_5_181)) ?x8771) ?x8774) ?x8777)))
 (= ?x8778 0.0))))))))))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8860 (* ?x8704 l_0_5_35)))
 (let ((?x8838 (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) (* (* 2.0 l_0_5_147) l_0_5_151))))
 (let ((?x8844 (+ (+ ?x8838 (* (* 2.0 l_0_5_148) l_0_5_152)) (* (* 2.0 l_0_5_149) l_0_5_153))))
 (let ((?x8850 (- (+ ?x8844 (* (* 2.0 l_0_5_150) l_0_5_154)) (* (* 2.0 l_0_5_175) l_0_5_179))))
 (let ((?x8856 (- (- ?x8850 (* (* 2.0 l_0_5_176) l_0_5_180)) (* (* 2.0 l_0_5_177) l_0_5_181))))
 (= (+ (- ?x8856 (* (* 2.0 l_0_5_178) l_0_5_182)) ?x8860) 0.0))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8928 (* ?x8704 l_0_5_39)))
 (let ((?x8926 (* l_0_5_183 l_0_5_183)))
 (let ((?x8924 (* l_0_5_182 l_0_5_182)))
 (let ((?x8922 (* l_0_5_181 l_0_5_181)))
 (let ((?x8920 (* l_0_5_180 l_0_5_180)))
 (let ((?x8918 (* l_0_5_179 l_0_5_179)))
 (let ((?x8916 (* l_0_5_155 l_0_5_155)))
 (let ((?x8914 (* l_0_5_154 l_0_5_154)))
 (let ((?x8912 (* l_0_5_153 l_0_5_153)))
 (let ((?x8910 (* l_0_5_152 l_0_5_152)))
 (let ((?x8911 (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) (* l_0_5_151 l_0_5_151)) ?x8910)))
 (let ((?x8925 (- (- (- (- (+ (+ (+ ?x8911 ?x8912) ?x8914) ?x8916) ?x8918) ?x8920) ?x8922) ?x8924)))
 (= (+ (- ?x8925 ?x8926) ?x8928) 0.0)))))))))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8988 (* ?x8704 l_0_5_44)))
 (let ((?x8928 (* ?x8704 l_0_5_39)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x8955 (* ?x8953 l_0_5_16)))
 (let ((?x8954 (* ?x8953 l_0_5_11)))
 (let ((?x8962 (+ (+ (- ?x8954 ?x8955) (* (* 2.0 l_0_5_151) l_0_5_156)) (* (* 2.0 l_0_5_152) l_0_5_157))))
 (let ((?x8968 (+ (+ ?x8962 (* (* 2.0 l_0_5_153) l_0_5_158)) (* (* 2.0 l_0_5_154) l_0_5_159))))
 (let ((?x8974 (- (+ ?x8968 (* (* 2.0 l_0_5_155) l_0_5_160)) (* (* 2.0 l_0_5_179) l_0_5_184))))
 (let ((?x8980 (- (- ?x8974 (* (* 2.0 l_0_5_180) l_0_5_185)) (* (* 2.0 l_0_5_181) l_0_5_186))))
 (let ((?x8986 (- (- ?x8980 (* (* 2.0 l_0_5_182) l_0_5_187)) (* (* 2.0 l_0_5_183) l_0_5_188))))
 (= (+ (- ?x8986 ?x8928) ?x8988) 0.0)))))))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x9068 (* ?x8704 l_0_5_50)))
 (let ((?x9049 (+ (* (* (- 2.0) l_0_5_1) l_0_5_22) (* (* 2.0 l_0_5_151) l_0_5_162))))
 (let ((?x9053 (+ (+ ?x9049 (* (* 2.0 l_0_5_152) l_0_5_163)) (* (* 2.0 l_0_5_153) l_0_5_164))))
 (let ((?x9057 (+ (+ ?x9053 (* (* 2.0 l_0_5_154) l_0_5_165)) (* (* 2.0 l_0_5_155) l_0_5_166))))
 (let ((?x9061 (- (- ?x9057 (* (* 2.0 l_0_5_179) l_0_5_190)) (* (* 2.0 l_0_5_180) l_0_5_191))))
 (let ((?x9065 (- (- ?x9061 (* (* 2.0 l_0_5_181) l_0_5_192)) (* (* 2.0 l_0_5_182) l_0_5_193))))
 (let ((?x9072 (+ (+ (- ?x9065 (* (* 2.0 l_0_5_183) l_0_5_194)) ?x9068) (* (* 2.0 l_0_5_58) l_0_5_67))))
 (let ((?x9078 (- (+ ?x9072 (* (* 2.0 l_0_5_59) l_0_5_68)) (* (* 2.0 l_0_5_86) l_0_5_95))))
 (= (- ?x9078 (* (* 2.0 l_0_5_87) l_0_5_96)) 0.0)))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9181 (* ?x8776 l_0_5_33)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9179 (* ?x8773 l_0_5_32)))
 (let ((?x9176 (* 2.0 l_0_5_3)))
 (let ((?x9177 (* ?x9176 l_0_5_5)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9165 (* ?x9164 l_0_5_4)))
 (let ((?x9160 (- (* (* (- 2.0) l_0_5_116) l_0_5_123) (* (* 2.0 l_0_5_117) l_0_5_124))))
 (let ((?x9169 (- (- (- ?x9160 (* (* 2.0 l_0_5_118) l_0_5_125)) ?x9165) (* (* 2.0 l_0_5_200) l_0_5_207))))
 (let ((?x9175 (- (- ?x9169 (* (* 2.0 l_0_5_201) l_0_5_208)) (* (* 2.0 l_0_5_202) l_0_5_209))))
 (= (+ (+ (- ?x9175 ?x9177) ?x9179) ?x9181) 0.0)))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9256 (* ?x8776 l_0_5_36)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9254 (* ?x8773 l_0_5_35)))
 (let ((?x9176 (* 2.0 l_0_5_3)))
 (let ((?x9252 (* ?x9176 l_0_5_8)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9242 (* ?x9164 l_0_5_7)))
 (let ((?x9232 (- (* (* (- 2.0) l_0_5_119) l_0_5_123) (* (* 2.0 l_0_5_120) l_0_5_124))))
 (let ((?x9241 (- (- ?x9232 (* (* 2.0 l_0_5_121) l_0_5_125)) (* (* 2.0 l_0_5_122) l_0_5_126))))
 (let ((?x9247 (- (- (- ?x9241 ?x9242) (* (* 2.0 l_0_5_203) l_0_5_207)) (* (* 2.0 l_0_5_204) l_0_5_208))))
 (let ((?x9251 (- (- ?x9247 (* (* 2.0 l_0_5_205) l_0_5_209)) (* (* 2.0 l_0_5_206) l_0_5_210))))
 (= (+ (+ (- ?x9251 ?x9252) ?x9254) ?x9256) 0.0))))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x8777 (* ?x8776 l_0_5_40)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x8774 (* ?x8773 l_0_5_39)))
 (let ((?x9348 (* l_0_5_211 l_0_5_211)))
 (let ((?x9346 (* l_0_5_210 l_0_5_210)))
 (let ((?x9344 (* l_0_5_209 l_0_5_209)))
 (let ((?x9342 (* l_0_5_208 l_0_5_208)))
 (let ((?x9340 (* l_0_5_207 l_0_5_207)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x8751 (* ?x8750 l_0_5_3)))
 (let ((?x9327 (- (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x8751) (* (* 1.0 l_0_5_123) l_0_5_123))))
 (let ((?x9333 (- (- ?x9327 (* (* 1.0 l_0_5_124) l_0_5_124)) (* (* 1.0 l_0_5_125) l_0_5_125))))
 (let ((?x9339 (- (- ?x9333 (* (* 1.0 l_0_5_126) l_0_5_126)) (* (* 1.0 l_0_5_127) l_0_5_127))))
 (let ((?x9351 (+ (+ (- (- (- (- (- ?x9339 ?x9340) ?x9342) ?x9344) ?x9346) ?x9348) ?x8774) ?x8777)))
 (= ?x9351 0.0)))))))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9434 (* ?x8776 l_0_5_45)))
 (let ((?x8777 (* ?x8776 l_0_5_40)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9431 (* ?x8773 l_0_5_44)))
 (let ((?x8774 (* ?x8773 l_0_5_39)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9413 (* ?x9412 l_0_5_3)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9410 (* ?x9409 l_0_5_2)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x8751 (* ?x8750 l_0_5_3)))
 (let ((?x8741 (* 2.0 l_0_5_11)))
 (let ((?x8748 (* ?x8741 l_0_5_2)))
 (let ((?x9399 (- (- (+ ?x8748 ?x8751) (* (* 2.0 l_0_5_123) l_0_5_128)) (* (* 2.0 l_0_5_124) l_0_5_129))))
 (let ((?x9405 (- (- ?x9399 (* (* 2.0 l_0_5_125) l_0_5_130)) (* (* 2.0 l_0_5_126) l_0_5_131))))
 (let ((?x9417 (- (- (- (- ?x9405 (* (* 2.0 l_0_5_127) l_0_5_132)) ?x9410) ?x9413) (* (* 2.0 l_0_5_207) l_0_5_212))))
 (let ((?x9423 (- (- ?x9417 (* (* 2.0 l_0_5_208) l_0_5_213)) (* (* 2.0 l_0_5_209) l_0_5_214))))
 (let ((?x9429 (- (- ?x9423 (* (* 2.0 l_0_5_210) l_0_5_215)) (* (* 2.0 l_0_5_211) l_0_5_216))))
 (= (+ (- (+ (- ?x9429 ?x8774) ?x9431) ?x8777) ?x9434) 0.0)))))))))))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9548 (* ?x8776 l_0_5_51)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9546 (* ?x8773 l_0_5_50)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9544 (* ?x9543 l_0_5_3)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9531 (* ?x9164 l_0_5_22)))
 (let ((?x9524 (- (* (* (- 2.0) l_0_5_123) l_0_5_134) (* (* 2.0 l_0_5_124) l_0_5_135))))
 (let ((?x9528 (- (- ?x9524 (* (* 2.0 l_0_5_125) l_0_5_136)) (* (* 2.0 l_0_5_126) l_0_5_137))))
 (let ((?x9534 (- (- (- ?x9528 (* (* 2.0 l_0_5_127) l_0_5_138)) ?x9531) (* (* 2.0 l_0_5_207) l_0_5_218))))
 (let ((?x9538 (- (- ?x9534 (* (* 2.0 l_0_5_208) l_0_5_219)) (* (* 2.0 l_0_5_209) l_0_5_220))))
 (let ((?x9542 (- (- ?x9538 (* (* 2.0 l_0_5_210) l_0_5_221)) (* (* 2.0 l_0_5_211) l_0_5_222))))
 (= (+ (+ (- ?x9542 ?x9544) ?x9546) ?x9548) 0.0)))))))))))))))
(assert
 (let ((?x9635 (* l_0_5_6 l_0_5_6)))
 (let ((?x9633 (* l_0_5_5 l_0_5_5)))
 (let ((?x9631 (* l_0_5_4 l_0_5_4)))
 (let ((?x9629 (* l_0_5_34 l_0_5_34)))
 (let ((?x9632 (- (+ (+ (* l_0_5_32 l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x9629) ?x9631)))
 (= (- (- ?x9632 ?x9633) ?x9635) 0.0)))))))
(assert
 (let ((?x9664 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9661 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9658 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9655 (* ?x9654 l_0_5_37)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9652 (* ?x9651 l_0_5_36)))
 (let ((?x9662 (- (- (+ (+ (* (* 2.0 l_0_5_32) l_0_5_35) ?x9652) ?x9655) ?x9658) ?x9661)))
 (= (- ?x9662 ?x9664) 0.0))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9703 (* ?x9654 l_0_5_41)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9701 (* ?x9651 l_0_5_40)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9699 (* ?x9649 l_0_5_39)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x9697 (* ?x9696 l_0_5_6)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x9694 (* ?x8750 l_0_5_5)))
 (let ((?x9702 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x9694) ?x9697) ?x9699) ?x9701)))
 (= (+ ?x9702 ?x9703) 0.0)))))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9746 (* ?x9654 l_0_5_46)))
 (let ((?x9703 (* ?x9654 l_0_5_41)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9743 (* ?x9651 l_0_5_45)))
 (let ((?x9701 (* ?x9651 l_0_5_40)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9740 (* ?x9649 l_0_5_44)))
 (let ((?x9699 (* ?x9649 l_0_5_39)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x9737 (* ?x9736 l_0_5_6)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9734 (* ?x9412 l_0_5_5)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9726 (* ?x9409 l_0_5_4)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x9697 (* ?x9696 l_0_5_6)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x9694 (* ?x8750 l_0_5_5)))
 (let ((?x9725 (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x9694) ?x9697)))
 (let ((?x9744 (+ (- (+ (- (- (- (- ?x9725 ?x9726) ?x9734) ?x9737) ?x9699) ?x9740) ?x9701) ?x9743)))
 (= (+ (- ?x9744 ?x9703) ?x9746) 0.0)))))))))))))))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9801 (* ?x9654 l_0_5_52)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9799 (* ?x9651 l_0_5_51)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9797 (* ?x9649 l_0_5_50)))
 (let ((?x9794 (* 2.0 l_0_5_24)))
 (let ((?x9795 (* ?x9794 l_0_5_6)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9792 (* ?x9543 l_0_5_5)))
 (let ((?x9800 (+ (+ (- (- (* (* (- 2.0) l_0_5_22) l_0_5_4) ?x9792) ?x9795) ?x9797) ?x9799)))
 (= (+ ?x9800 ?x9801) 0.0)))))))))))))
(assert
 (let ((?x9841 (* l_0_5_9 l_0_5_9)))
 (let ((?x9839 (* l_0_5_8 l_0_5_8)))
 (let ((?x9837 (* l_0_5_7 l_0_5_7)))
 (let ((?x9835 (* l_0_5_38 l_0_5_38)))
 (let ((?x9833 (* l_0_5_37 l_0_5_37)))
 (let ((?x9831 (* l_0_5_36 l_0_5_36)))
 (let ((?x9834 (+ (+ (+ (* (- l_0_5_10) l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x9831) ?x9833)))
 (= (- (- (- (+ ?x9834 ?x9835) ?x9837) ?x9839) ?x9841) 0.0)))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x9876 (* ?x9875 l_0_5_42)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x9873 (* ?x9872 l_0_5_41)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x9870 (* ?x9869 l_0_5_40)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x9867 (* ?x9866 l_0_5_39)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x9864 (* ?x9696 l_0_5_9)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x9862 (* ?x8750 l_0_5_8)))
 (let ((?x8741 (* 2.0 l_0_5_11)))
 (let ((?x9860 (* ?x8741 l_0_5_7)))
 (let ((?x9868 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x9860) ?x9862) ?x9864) ?x9867)))
 (= (+ (+ (+ ?x9868 ?x9870) ?x9873) ?x9876) 0.0)))))))))))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x9933 (* ?x9875 l_0_5_47)))
 (let ((?x9876 (* ?x9875 l_0_5_42)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x9930 (* ?x9872 l_0_5_46)))
 (let ((?x9873 (* ?x9872 l_0_5_41)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x9927 (* ?x9869 l_0_5_45)))
 (let ((?x9870 (* ?x9869 l_0_5_40)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x9924 (* ?x9866 l_0_5_44)))
 (let ((?x9867 (* ?x9866 l_0_5_39)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x9921 (* ?x9736 l_0_5_9)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9919 (* ?x9412 l_0_5_8)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9917 (* ?x9409 l_0_5_7)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x9864 (* ?x9696 l_0_5_9)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x9862 (* ?x8750 l_0_5_8)))
 (let ((?x8741 (* 2.0 l_0_5_11)))
 (let ((?x9860 (* ?x8741 l_0_5_7)))
 (let ((?x9900 (* 2.0 l_0_5_10)))
 (let ((?x9904 (* ?x9900 l_0_5_19)))
 (let ((?x9902 (* ?x9900 l_0_5_14)))
 (let ((?x9922 (- (- (- (+ (+ (+ (- ?x9902 ?x9904) ?x9860) ?x9862) ?x9864) ?x9917) ?x9919) ?x9921)))
 (let ((?x9932 (- (+ (- (+ (- (+ (- ?x9922 ?x9867) ?x9924) ?x9870) ?x9927) ?x9873) ?x9930) ?x9876)))
 (= (+ ?x9932 ?x9933) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x10008 (* ?x9875 l_0_5_53)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x10006 (* ?x9872 l_0_5_52)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x10004 (* ?x9869 l_0_5_51)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x10002 (* ?x9866 l_0_5_50)))
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x8777 (* ?x8776 l_0_5_40)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x8774 (* ?x8773 l_0_5_39)))
 (let ((?x9794 (* 2.0 l_0_5_24)))
 (let ((?x9998 (* ?x9794 l_0_5_9)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9996 (* ?x9543 l_0_5_8)))
 (let ((?x9993 (* 2.0 l_0_5_22)))
 (let ((?x9994 (* ?x9993 l_0_5_7)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x8751 (* ?x8750 l_0_5_3)))
 (let ((?x8741 (* 2.0 l_0_5_11)))
 (let ((?x8748 (* ?x8741 l_0_5_2)))
 (let ((?x9997 (- (- (+ (+ (* (* (- 2.0) l_0_5_10) l_0_5_25) ?x8748) ?x8751) ?x9994) ?x9996)))
 (let ((?x10009 (+ (+ (+ (+ (- (- (- ?x9997 ?x9998) ?x8774) ?x8777) ?x10002) ?x10004) ?x10006) ?x10008)))
 (= ?x10009 0.0))))))))))))))))))))))))))
(assert
 (let ((?x10064 (* l_0_5_43 l_0_5_43)))
 (let ((?x10062 (* l_0_5_42 l_0_5_42)))
 (let ((?x10060 (* l_0_5_41 l_0_5_41)))
 (let ((?x10058 (* l_0_5_40 l_0_5_40)))
 (let ((?x10056 (* l_0_5_39 l_0_5_39)))
 (let ((?x10054 (* l_0_5_15 l_0_5_15)))
 (let ((?x10052 (* l_0_5_14 l_0_5_14)))
 (let ((?x10050 (* l_0_5_13 l_0_5_13)))
 (let ((?x10053 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x10050) ?x10052)))
 (= (+ (+ (+ (+ (+ (- ?x10053 ?x10054) ?x10056) ?x10058) ?x10060) ?x10062) ?x10064) 0.0)))))))))))
(assert
 (let ((?x10064 (* l_0_5_43 l_0_5_43)))
 (let ((?x10121 (* 2.0 l_0_5_43)))
 (let ((?x10122 (* ?x10121 l_0_5_48)))
 (let ((?x10062 (* l_0_5_42 l_0_5_42)))
 (let ((?x10117 (* 2.0 l_0_5_42)))
 (let ((?x10118 (* ?x10117 l_0_5_47)))
 (let ((?x10060 (* l_0_5_41 l_0_5_41)))
 (let ((?x10113 (* 2.0 l_0_5_41)))
 (let ((?x10114 (* ?x10113 l_0_5_46)))
 (let ((?x10058 (* l_0_5_40 l_0_5_40)))
 (let ((?x10109 (* 2.0 l_0_5_40)))
 (let ((?x10110 (* ?x10109 l_0_5_45)))
 (let ((?x10056 (* l_0_5_39 l_0_5_39)))
 (let ((?x10105 (* 2.0 l_0_5_39)))
 (let ((?x10106 (* ?x10105 l_0_5_44)))
 (let ((?x10054 (* l_0_5_15 l_0_5_15)))
 (let ((?x10101 (* 2.0 l_0_5_15)))
 (let ((?x10102 (* ?x10101 l_0_5_20)))
 (let ((?x10052 (* l_0_5_14 l_0_5_14)))
 (let ((?x10097 (* 2.0 l_0_5_14)))
 (let ((?x10098 (* ?x10097 l_0_5_19)))
 (let ((?x10050 (* l_0_5_13 l_0_5_13)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x10094 (* ?x9696 l_0_5_18)))
 (let ((?x10048 (* l_0_5_12 l_0_5_12)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x10091 (* ?x8750 l_0_5_17)))
 (let ((?x10092 (- (+ (* (* (- 2.0) l_0_5_11) l_0_5_16) (* l_0_5_11 l_0_5_11)) ?x10091)))
 (let ((?x10104 (+ (- (+ (- (+ (- (+ ?x10092 ?x10048) ?x10094) ?x10050) ?x10098) ?x10052) ?x10102) ?x10054)))
 (let ((?x10119 (+ (- (+ (- (+ (- (+ ?x10104 ?x10106) ?x10056) ?x10110) ?x10058) ?x10114) ?x10060) ?x10118)))
 (= (- (+ (- ?x10119 ?x10062) ?x10122) ?x10064) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x10121 (* 2.0 l_0_5_43)))
 (let ((?x10199 (* ?x10121 l_0_5_54)))
 (let ((?x10117 (* 2.0 l_0_5_42)))
 (let ((?x10197 (* ?x10117 l_0_5_53)))
 (let ((?x10113 (* 2.0 l_0_5_41)))
 (let ((?x10195 (* ?x10113 l_0_5_52)))
 (let ((?x10109 (* 2.0 l_0_5_40)))
 (let ((?x10193 (* ?x10109 l_0_5_51)))
 (let ((?x10105 (* 2.0 l_0_5_39)))
 (let ((?x10191 (* ?x10105 l_0_5_50)))
 (let ((?x10101 (* 2.0 l_0_5_15)))
 (let ((?x10189 (* ?x10101 l_0_5_26)))
 (let ((?x10097 (* 2.0 l_0_5_14)))
 (let ((?x10187 (* ?x10097 l_0_5_25)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x10185 (* ?x9696 l_0_5_24)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x10183 (* ?x8750 l_0_5_23)))
 (let ((?x10190 (- (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_22) ?x10183) ?x10185) ?x10187) ?x10189)))
 (= (+ (+ (+ (+ (+ ?x10190 ?x10191) ?x10193) ?x10195) ?x10197) ?x10199) 0.0)))))))))))))))))))))
(assert
 (let ((?x10273 (* l_0_5_49 l_0_5_49)))
 (let ((?x10271 (* l_0_5_48 l_0_5_48)))
 (let ((?x10269 (* l_0_5_47 l_0_5_47)))
 (let ((?x10267 (* l_0_5_46 l_0_5_46)))
 (let ((?x10265 (* l_0_5_45 l_0_5_45)))
 (let ((?x10263 (* l_0_5_44 l_0_5_44)))
 (let ((?x10121 (* 2.0 l_0_5_43)))
 (let ((?x10122 (* ?x10121 l_0_5_48)))
 (let ((?x10117 (* 2.0 l_0_5_42)))
 (let ((?x10118 (* ?x10117 l_0_5_47)))
 (let ((?x10113 (* 2.0 l_0_5_41)))
 (let ((?x10114 (* ?x10113 l_0_5_46)))
 (let ((?x10109 (* 2.0 l_0_5_40)))
 (let ((?x10110 (* ?x10109 l_0_5_45)))
 (let ((?x10105 (* 2.0 l_0_5_39)))
 (let ((?x10106 (* ?x10105 l_0_5_44)))
 (let ((?x10256 (* l_0_5_21 l_0_5_21)))
 (let ((?x10254 (* l_0_5_20 l_0_5_20)))
 (let ((?x10252 (* l_0_5_19 l_0_5_19)))
 (let ((?x10250 (* l_0_5_18 l_0_5_18)))
 (let ((?x10248 (* l_0_5_17 l_0_5_17)))
 (let ((?x10238 (* l_0_5_16 l_0_5_16)))
 (let ((?x10101 (* 2.0 l_0_5_15)))
 (let ((?x10102 (* ?x10101 l_0_5_20)))
 (let ((?x10097 (* 2.0 l_0_5_14)))
 (let ((?x10098 (* ?x10097 l_0_5_19)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x10094 (* ?x9696 l_0_5_18)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x10091 (* ?x8750 l_0_5_17)))
 (let ((?x10237 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_16) ?x10091) ?x10094) ?x10098) ?x10102)))
 (let ((?x10258 (- (- (- (- (- (- (- ?x10237 ?x10238) ?x10248) ?x10250) ?x10252) ?x10254) ?x10256) ?x10106)))
 (let ((?x10268 (+ (+ (+ (- (- (- (- ?x10258 ?x10110) ?x10114) ?x10118) ?x10122) ?x10263) ?x10265) ?x10267)))
 (= (+ (+ (+ ?x10268 ?x10269) ?x10271) ?x10273) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10359 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x10356 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x10353 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x10350 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x10347 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x10344 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x10121 (* 2.0 l_0_5_43)))
 (let ((?x10199 (* ?x10121 l_0_5_54)))
 (let ((?x10117 (* 2.0 l_0_5_42)))
 (let ((?x10197 (* ?x10117 l_0_5_53)))
 (let ((?x10113 (* 2.0 l_0_5_41)))
 (let ((?x10195 (* ?x10113 l_0_5_52)))
 (let ((?x10109 (* 2.0 l_0_5_40)))
 (let ((?x10193 (* ?x10109 l_0_5_51)))
 (let ((?x10105 (* 2.0 l_0_5_39)))
 (let ((?x10191 (* ?x10105 l_0_5_50)))
 (let ((?x10336 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x10333 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x10330 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x10327 (* ?x9736 l_0_5_24)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x10325 (* ?x9412 l_0_5_23)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x10323 (* ?x9409 l_0_5_22)))
 (let ((?x10101 (* 2.0 l_0_5_15)))
 (let ((?x10189 (* ?x10101 l_0_5_26)))
 (let ((?x10097 (* 2.0 l_0_5_14)))
 (let ((?x10187 (* ?x10097 l_0_5_25)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x10185 (* ?x9696 l_0_5_24)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x10183 (* ?x8750 l_0_5_23)))
 (let ((?x10322 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_22) ?x10183) ?x10185) ?x10187) ?x10189)))
 (let ((?x10338 (- (- (- (- (- (- (- ?x10322 ?x10323) ?x10325) ?x10327) ?x10330) ?x10333) ?x10336) ?x10191)))
 (let ((?x10351 (+ (+ (+ (- (- (- (- ?x10338 ?x10193) ?x10195) ?x10197) ?x10199) ?x10344) ?x10347) ?x10350)))
 (= (+ (+ (+ ?x10351 ?x10353) ?x10356) ?x10359) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10459 (* l_0_5_56 l_0_5_56)))
 (let ((?x10457 (* l_0_5_55 l_0_5_55)))
 (let ((?x10455 (* l_0_5_54 l_0_5_54)))
 (let ((?x10453 (* l_0_5_53 l_0_5_53)))
 (let ((?x10451 (* l_0_5_52 l_0_5_52)))
 (let ((?x10449 (* l_0_5_51 l_0_5_51)))
 (let ((?x10447 (* l_0_5_50 l_0_5_50)))
 (let ((?x10445 (* l_0_5_28 l_0_5_28)))
 (let ((?x10443 (* l_0_5_27 l_0_5_27)))
 (let ((?x10441 (* l_0_5_26 l_0_5_26)))
 (let ((?x10439 (* l_0_5_25 l_0_5_25)))
 (let ((?x10437 (* l_0_5_24 l_0_5_24)))
 (let ((?x10440 (- (- (- (* (- l_0_5_22) l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x10437) ?x10439)))
 (let ((?x10454 (+ (+ (+ (+ (- (- (- ?x10440 ?x10441) ?x10443) ?x10445) ?x10447) ?x10449) ?x10451) ?x10453)))
 (= (+ (+ (+ ?x10454 ?x10455) ?x10457) ?x10459) 0.0))))))))))))))))
(assert
 (let ((?x8672 (* l_0_5_29 l_0_5_29)))
 (let ((?x8676 (* l_0_5_1 l_0_5_1)))
 (let ((?x10483 (- ?x8676 ?x8672)))
 (let ((?x10498 (- (+ ?x10483 (* (* 2.0 l_0_5_57) l_0_5_63)) (* (* 2.0 l_0_5_85) l_0_5_91))))
 (= ?x10498 0.0))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8705 (* ?x8704 l_0_5_30)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10515 (* ?x8953 l_0_5_2)))
 (let ((?x10519 (+ (+ ?x10515 (* (* 2.0 l_0_5_147) l_0_5_162)) (* (* 2.0 l_0_5_148) l_0_5_163))))
 (let ((?x10523 (+ (+ ?x10519 (* (* 2.0 l_0_5_149) l_0_5_164)) (* (* 2.0 l_0_5_150) l_0_5_165))))
 (let ((?x10527 (- (- ?x10523 (* (* 2.0 l_0_5_175) l_0_5_190)) (* (* 2.0 l_0_5_176) l_0_5_191))))
 (let ((?x10531 (- (- ?x10527 (* (* 2.0 l_0_5_177) l_0_5_192)) (* (* 2.0 l_0_5_178) l_0_5_193))))
 (let ((?x10536 (+ (+ (- ?x10531 ?x8705) (* (* 2.0 l_0_5_58) l_0_5_63)) (* (* 2.0 l_0_5_59) l_0_5_64))))
 (let ((?x10540 (- (- ?x10536 (* (* 2.0 l_0_5_86) l_0_5_91)) (* (* 2.0 l_0_5_87) l_0_5_92))))
 (= ?x10540 0.0))))))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x10008 (* ?x9875 l_0_5_53)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x10006 (* ?x9872 l_0_5_52)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x10004 (* ?x9869 l_0_5_51)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x10002 (* ?x9866 l_0_5_50)))
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8771 (* ?x8704 l_0_5_32)))
 (let ((?x9794 (* 2.0 l_0_5_24)))
 (let ((?x9998 (* ?x9794 l_0_5_9)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9996 (* ?x9543 l_0_5_8)))
 (let ((?x9993 (* 2.0 l_0_5_22)))
 (let ((?x9994 (* ?x9993 l_0_5_7)))
 (let ((?x9900 (* 2.0 l_0_5_10)))
 (let ((?x10598 (* ?x9900 l_0_5_25)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10597 (* ?x8953 l_0_5_4)))
 (let ((?x10605 (- (- (- (+ (+ (+ (+ ?x10597 ?x10598) ?x9994) ?x9996) ?x9998) ?x8771) ?x10002) ?x10004)))
 (let ((?x10613 (+ (+ (- (- ?x10605 ?x10006) ?x10008) (* (* 2.0 l_0_5_60) l_0_5_63)) (* (* 2.0 l_0_5_61) l_0_5_64))))
 (let ((?x10619 (- (+ ?x10613 (* (* 2.0 l_0_5_62) l_0_5_65)) (* (* 2.0 l_0_5_88) l_0_5_91))))
 (let ((?x10625 (- (- ?x10619 (* (* 2.0 l_0_5_89) l_0_5_92)) (* (* 2.0 l_0_5_90) l_0_5_93))))
 (= ?x10625 0.0))))))))))))))))))))))))))
(assert
 (let ((?x10690 (* l_0_5_94 l_0_5_94)))
 (let ((?x10688 (* l_0_5_93 l_0_5_93)))
 (let ((?x10686 (* l_0_5_92 l_0_5_92)))
 (let ((?x10684 (* l_0_5_91 l_0_5_91)))
 (let ((?x10682 (* l_0_5_66 l_0_5_66)))
 (let ((?x10680 (* l_0_5_65 l_0_5_65)))
 (let ((?x10678 (* l_0_5_64 l_0_5_64)))
 (let ((?x10676 (* l_0_5_63 l_0_5_63)))
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8860 (* ?x8704 l_0_5_35)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10674 (* ?x8953 l_0_5_7)))
 (let ((?x10675 (- ?x10674 ?x8860)))
 (let ((?x10689 (- (- (- (+ (+ (+ (+ ?x10675 ?x10676) ?x10678) ?x10680) ?x10682) ?x10684) ?x10686) ?x10688)))
 (= (- ?x10689 ?x10690) 0.0))))))))))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8928 (* ?x8704 l_0_5_39)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x8954 (* ?x8953 l_0_5_11)))
 (let ((?x10711 (- ?x8954 ?x8928)))
 (let ((?x10717 (+ (+ ?x10711 (* (* 2.0 l_0_5_63) l_0_5_67)) (* (* 2.0 l_0_5_64) l_0_5_68))))
 (let ((?x10723 (+ (+ ?x10717 (* (* 2.0 l_0_5_65) l_0_5_69)) (* (* 2.0 l_0_5_66) l_0_5_70))))
 (let ((?x10729 (- (- ?x10723 (* (* 2.0 l_0_5_91) l_0_5_95)) (* (* 2.0 l_0_5_92) l_0_5_96))))
 (let ((?x10735 (- (- ?x10729 (* (* 2.0 l_0_5_93) l_0_5_97)) (* (* 2.0 l_0_5_94) l_0_5_98))))
 (= ?x10735 0.0)))))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8988 (* ?x8704 l_0_5_44)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x8955 (* ?x8953 l_0_5_16)))
 (let ((?x10778 (- (- ?x8955 (* (* 2.0 l_0_5_100) l_0_5_91)) (* (* 2.0 l_0_5_101) l_0_5_92))))
 (let ((?x10784 (- (- ?x10778 (* (* 2.0 l_0_5_102) l_0_5_93)) (* (* 2.0 l_0_5_103) l_0_5_94))))
 (let ((?x10789 (+ (+ (- ?x10784 ?x8988) (* (* 2.0 l_0_5_63) l_0_5_72)) (* (* 2.0 l_0_5_64) l_0_5_73))))
 (let ((?x10793 (+ (+ ?x10789 (* (* 2.0 l_0_5_65) l_0_5_74)) (* (* 2.0 l_0_5_66) l_0_5_75))))
 (= ?x10793 0.0))))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x9068 (* ?x8704 l_0_5_50)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10833 (* ?x8953 l_0_5_22)))
 (let ((?x10839 (- (- ?x10833 (* (* 2.0 l_0_5_106) l_0_5_91)) (* (* 2.0 l_0_5_107) l_0_5_92))))
 (let ((?x10845 (- (- ?x10839 (* (* 2.0 l_0_5_108) l_0_5_93)) (* (* 2.0 l_0_5_109) l_0_5_94))))
 (let ((?x10850 (+ (+ (- ?x10845 ?x9068) (* (* 2.0 l_0_5_63) l_0_5_78)) (* (* 2.0 l_0_5_64) l_0_5_79))))
 (let ((?x10854 (+ (+ ?x10850 (* (* 2.0 l_0_5_65) l_0_5_80)) (* (* 2.0 l_0_5_66) l_0_5_81))))
 (= ?x10854 0.0))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9181 (* ?x8776 l_0_5_33)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9179 (* ?x8773 l_0_5_32)))
 (let ((?x9176 (* 2.0 l_0_5_3)))
 (let ((?x9177 (* ?x9176 l_0_5_5)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9165 (* ?x9164 l_0_5_4)))
 (= (- (- (+ ?x9165 ?x9177) ?x9179) ?x9181) 0.0))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9256 (* ?x8776 l_0_5_36)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9254 (* ?x8773 l_0_5_35)))
 (let ((?x9176 (* 2.0 l_0_5_3)))
 (let ((?x9252 (* ?x9176 l_0_5_8)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9242 (* ?x9164 l_0_5_7)))
 (= (- (- (+ ?x9242 ?x9252) ?x9254) ?x9256) 0.0))))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x10008 (* ?x9875 l_0_5_53)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x10006 (* ?x9872 l_0_5_52)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x10004 (* ?x9869 l_0_5_51)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x10002 (* ?x9866 l_0_5_50)))
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9434 (* ?x8776 l_0_5_45)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9431 (* ?x8773 l_0_5_44)))
 (let ((?x9794 (* 2.0 l_0_5_24)))
 (let ((?x9998 (* ?x9794 l_0_5_9)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9996 (* ?x9543 l_0_5_8)))
 (let ((?x9993 (* 2.0 l_0_5_22)))
 (let ((?x9994 (* ?x9993 l_0_5_7)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9413 (* ?x9412 l_0_5_3)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9410 (* ?x9409 l_0_5_2)))
 (let ((?x9900 (* 2.0 l_0_5_10)))
 (let ((?x10598 (* ?x9900 l_0_5_25)))
 (let ((?x10927 (- (- (+ (+ (+ (+ (+ ?x10598 ?x9410) ?x9413) ?x9994) ?x9996) ?x9998) ?x9431) ?x9434)))
 (= (- (- (- (- ?x10927 ?x10002) ?x10004) ?x10006) ?x10008) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9548 (* ?x8776 l_0_5_51)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9546 (* ?x8773 l_0_5_50)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9544 (* ?x9543 l_0_5_3)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9531 (* ?x9164 l_0_5_22)))
 (= (- (- (+ ?x9531 ?x9544) ?x9546) ?x9548) 0.0))))))))))
(assert
 (let ((?x9635 (* l_0_5_6 l_0_5_6)))
 (let ((?x9633 (* l_0_5_5 l_0_5_5)))
 (let ((?x9631 (* l_0_5_4 l_0_5_4)))
 (let ((?x9629 (* l_0_5_34 l_0_5_34)))
 (let ((?x10969 (+ (- (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x9629) ?x9631)))
 (= (+ (+ ?x10969 ?x9633) ?x9635) 0.0)))))))
(assert
 (let ((?x9664 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9661 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9658 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9655 (* ?x9654 l_0_5_37)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9652 (* ?x9651 l_0_5_36)))
 (let ((?x10985 (+ (+ (- (- (* (* (- 2.0) l_0_5_32) l_0_5_35) ?x9652) ?x9655) ?x9658) ?x9661)))
 (= (+ ?x10985 ?x9664) 0.0))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9703 (* ?x9654 l_0_5_41)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9701 (* ?x9651 l_0_5_40)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9699 (* ?x9649 l_0_5_39)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x9697 (* ?x9696 l_0_5_6)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x9694 (* ?x8750 l_0_5_5)))
 (let ((?x9725 (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x9694) ?x9697)))
 (= (- (- (- ?x9725 ?x9699) ?x9701) ?x9703) 0.0)))))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9746 (* ?x9654 l_0_5_46)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9743 (* ?x9651 l_0_5_45)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9740 (* ?x9649 l_0_5_44)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x9737 (* ?x9736 l_0_5_6)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9734 (* ?x9412 l_0_5_5)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9726 (* ?x9409 l_0_5_4)))
 (= (- (- (- (+ (+ ?x9726 ?x9734) ?x9737) ?x9740) ?x9743) ?x9746) 0.0))))))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9801 (* ?x9654 l_0_5_52)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9799 (* ?x9651 l_0_5_51)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9797 (* ?x9649 l_0_5_50)))
 (let ((?x9794 (* 2.0 l_0_5_24)))
 (let ((?x9795 (* ?x9794 l_0_5_6)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9792 (* ?x9543 l_0_5_5)))
 (let ((?x11030 (- (- (+ (+ (* (* 2.0 l_0_5_22) l_0_5_4) ?x9792) ?x9795) ?x9797) ?x9799)))
 (let ((?x11031 (- ?x11030 ?x9801)))
 (= ?x11031 0.0))))))))))))))
(assert
 (let ((?x9841 (* l_0_5_9 l_0_5_9)))
 (let ((?x9839 (* l_0_5_8 l_0_5_8)))
 (let ((?x9837 (* l_0_5_7 l_0_5_7)))
 (let ((?x9835 (* l_0_5_38 l_0_5_38)))
 (let ((?x9833 (* l_0_5_37 l_0_5_37)))
 (let ((?x9831 (* l_0_5_36 l_0_5_36)))
 (let ((?x11047 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x9831) ?x9833)))
 (= (+ (+ (+ (- ?x11047 ?x9835) ?x9837) ?x9839) ?x9841) 0.0)))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x9876 (* ?x9875 l_0_5_42)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x9873 (* ?x9872 l_0_5_41)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x9870 (* ?x9869 l_0_5_40)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x9867 (* ?x9866 l_0_5_39)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x9864 (* ?x9696 l_0_5_9)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x9862 (* ?x8750 l_0_5_8)))
 (let ((?x8741 (* 2.0 l_0_5_11)))
 (let ((?x9860 (* ?x8741 l_0_5_7)))
 (let ((?x9900 (* 2.0 l_0_5_10)))
 (let ((?x9902 (* ?x9900 l_0_5_14)))
 (let ((?x11071 (- (- (- (- (+ (+ (+ ?x9902 ?x9860) ?x9862) ?x9864) ?x9867) ?x9870) ?x9873) ?x9876)))
 (= ?x11071 0.0)))))))))))))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x9933 (* ?x9875 l_0_5_47)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x9930 (* ?x9872 l_0_5_46)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x9927 (* ?x9869 l_0_5_45)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x9924 (* ?x9866 l_0_5_44)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x9921 (* ?x9736 l_0_5_9)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9919 (* ?x9412 l_0_5_8)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9917 (* ?x9409 l_0_5_7)))
 (let ((?x9900 (* 2.0 l_0_5_10)))
 (let ((?x9904 (* ?x9900 l_0_5_19)))
 (let ((?x11087 (- (- (- (- (+ (+ (+ ?x9904 ?x9917) ?x9919) ?x9921) ?x9924) ?x9927) ?x9930) ?x9933)))
 (= ?x11087 0.0)))))))))))))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x10008 (* ?x9875 l_0_5_53)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x10006 (* ?x9872 l_0_5_52)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x10004 (* ?x9869 l_0_5_51)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x10002 (* ?x9866 l_0_5_50)))
 (let ((?x9794 (* 2.0 l_0_5_24)))
 (let ((?x9998 (* ?x9794 l_0_5_9)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9996 (* ?x9543 l_0_5_8)))
 (let ((?x9993 (* 2.0 l_0_5_22)))
 (let ((?x9994 (* ?x9993 l_0_5_7)))
 (let ((?x9900 (* 2.0 l_0_5_10)))
 (let ((?x10598 (* ?x9900 l_0_5_25)))
 (let ((?x11113 (- (- (- (- (+ (+ (+ ?x10598 ?x9994) ?x9996) ?x9998) ?x10002) ?x10004) ?x10006) ?x10008)))
 (= ?x11113 0.0)))))))))))))))))))
(assert
 (let ((?x10064 (* l_0_5_43 l_0_5_43)))
 (let ((?x10062 (* l_0_5_42 l_0_5_42)))
 (let ((?x10060 (* l_0_5_41 l_0_5_41)))
 (let ((?x10058 (* l_0_5_40 l_0_5_40)))
 (let ((?x10056 (* l_0_5_39 l_0_5_39)))
 (let ((?x10054 (* l_0_5_15 l_0_5_15)))
 (let ((?x10052 (* l_0_5_14 l_0_5_14)))
 (let ((?x10050 (* l_0_5_13 l_0_5_13)))
 (let ((?x11127 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x10050) ?x10052)))
 (= (- (- (- (- (- (+ ?x11127 ?x10054) ?x10056) ?x10058) ?x10060) ?x10062) ?x10064) 0.0)))))))))))
(assert
 (let ((?x10121 (* 2.0 l_0_5_43)))
 (let ((?x10122 (* ?x10121 l_0_5_48)))
 (let ((?x10117 (* 2.0 l_0_5_42)))
 (let ((?x10118 (* ?x10117 l_0_5_47)))
 (let ((?x10113 (* 2.0 l_0_5_41)))
 (let ((?x10114 (* ?x10113 l_0_5_46)))
 (let ((?x10109 (* 2.0 l_0_5_40)))
 (let ((?x10110 (* ?x10109 l_0_5_45)))
 (let ((?x10105 (* 2.0 l_0_5_39)))
 (let ((?x10106 (* ?x10105 l_0_5_44)))
 (let ((?x10101 (* 2.0 l_0_5_15)))
 (let ((?x10102 (* ?x10101 l_0_5_20)))
 (let ((?x10097 (* 2.0 l_0_5_14)))
 (let ((?x10098 (* ?x10097 l_0_5_19)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x10094 (* ?x9696 l_0_5_18)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x10091 (* ?x8750 l_0_5_17)))
 (let ((?x10237 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_16) ?x10091) ?x10094) ?x10098) ?x10102)))
 (= (- (- (- (- (- ?x10237 ?x10106) ?x10110) ?x10114) ?x10118) ?x10122) 0.0)))))))))))))))))))))
(assert
 (let ((?x10121 (* 2.0 l_0_5_43)))
 (let ((?x10199 (* ?x10121 l_0_5_54)))
 (let ((?x10117 (* 2.0 l_0_5_42)))
 (let ((?x10197 (* ?x10117 l_0_5_53)))
 (let ((?x10113 (* 2.0 l_0_5_41)))
 (let ((?x10195 (* ?x10113 l_0_5_52)))
 (let ((?x10109 (* 2.0 l_0_5_40)))
 (let ((?x10193 (* ?x10109 l_0_5_51)))
 (let ((?x10105 (* 2.0 l_0_5_39)))
 (let ((?x10191 (* ?x10105 l_0_5_50)))
 (let ((?x10101 (* 2.0 l_0_5_15)))
 (let ((?x10189 (* ?x10101 l_0_5_26)))
 (let ((?x10097 (* 2.0 l_0_5_14)))
 (let ((?x10187 (* ?x10097 l_0_5_25)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x10185 (* ?x9696 l_0_5_24)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x10183 (* ?x8750 l_0_5_23)))
 (let ((?x10322 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_22) ?x10183) ?x10185) ?x10187) ?x10189)))
 (let ((?x11166 (- (- (- (- (- ?x10322 ?x10191) ?x10193) ?x10195) ?x10197) ?x10199)))
 (= ?x11166 0.0))))))))))))))))))))))
(assert
 (let ((?x10273 (* l_0_5_49 l_0_5_49)))
 (let ((?x10271 (* l_0_5_48 l_0_5_48)))
 (let ((?x10269 (* l_0_5_47 l_0_5_47)))
 (let ((?x10267 (* l_0_5_46 l_0_5_46)))
 (let ((?x10265 (* l_0_5_45 l_0_5_45)))
 (let ((?x10263 (* l_0_5_44 l_0_5_44)))
 (let ((?x10256 (* l_0_5_21 l_0_5_21)))
 (let ((?x10254 (* l_0_5_20 l_0_5_20)))
 (let ((?x10252 (* l_0_5_19 l_0_5_19)))
 (let ((?x10250 (* l_0_5_18 l_0_5_18)))
 (let ((?x11179 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x10250) ?x10252)))
 (let ((?x11186 (- (- (- (- (- (+ (+ ?x11179 ?x10254) ?x10256) ?x10263) ?x10265) ?x10267) ?x10269) ?x10271)))
 (= (- ?x11186 ?x10273) 0.0))))))))))))))
(assert
 (let ((?x10359 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x10356 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x10353 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x10350 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x10347 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x10344 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x10336 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x10333 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x10330 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x10327 (* ?x9736 l_0_5_24)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x10325 (* ?x9412 l_0_5_23)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x10323 (* ?x9409 l_0_5_22)))
 (let ((?x11215 (- (- (+ (+ (+ (+ (+ ?x10323 ?x10325) ?x10327) ?x10330) ?x10333) ?x10336) ?x10344) ?x10347)))
 (= (- (- (- (- ?x11215 ?x10350) ?x10353) ?x10356) ?x10359) 0.0))))))))))))))))))
(assert
 (let ((?x10459 (* l_0_5_56 l_0_5_56)))
 (let ((?x10457 (* l_0_5_55 l_0_5_55)))
 (let ((?x10455 (* l_0_5_54 l_0_5_54)))
 (let ((?x10453 (* l_0_5_53 l_0_5_53)))
 (let ((?x10451 (* l_0_5_52 l_0_5_52)))
 (let ((?x10449 (* l_0_5_51 l_0_5_51)))
 (let ((?x10447 (* l_0_5_50 l_0_5_50)))
 (let ((?x10445 (* l_0_5_28 l_0_5_28)))
 (let ((?x10443 (* l_0_5_27 l_0_5_27)))
 (let ((?x10441 (* l_0_5_26 l_0_5_26)))
 (let ((?x10439 (* l_0_5_25 l_0_5_25)))
 (let ((?x10437 (* l_0_5_24 l_0_5_24)))
 (let ((?x11249 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x10437) ?x10439)))
 (let ((?x11256 (- (- (- (- (+ (+ (+ ?x11249 ?x10441) ?x10443) ?x10445) ?x10447) ?x10449) ?x10451) ?x10453)))
 (= (- (- (- ?x11256 ?x10455) ?x10457) ?x10459) 0.0))))))))))))))))
(assert
 (let ((?x8672 (* l_0_5_29 l_0_5_29)))
 (let ((?x8676 (* l_0_5_1 l_0_5_1)))
 (let ((?x10483 (- ?x8676 ?x8672)))
 (= ?x10483 0.0)))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8705 (* ?x8704 l_0_5_30)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10515 (* ?x8953 l_0_5_2)))
 (let ((?x11281 (- (+ ?x10515 (* (* 2.0 l_0_5_141) l_0_5_144)) (* (* 2.0 l_0_5_169) l_0_5_172))))
 (= (- ?x11281 ?x8705) 0.0)))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8771 (* ?x8704 l_0_5_32)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10597 (* ?x8953 l_0_5_4)))
 (= (- ?x10597 ?x8771) 0.0))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8860 (* ?x8704 l_0_5_35)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10674 (* ?x8953 l_0_5_7)))
 (let ((?x10675 (- ?x10674 ?x8860)))
 (= ?x10675 0.0)))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8928 (* ?x8704 l_0_5_39)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x8954 (* ?x8953 l_0_5_11)))
 (let ((?x10711 (- ?x8954 ?x8928)))
 (= ?x10711 0.0)))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8988 (* ?x8704 l_0_5_44)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x8955 (* ?x8953 l_0_5_16)))
 (= (- ?x8955 ?x8988) 0.0))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x9068 (* ?x8704 l_0_5_50)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10833 (* ?x8953 l_0_5_22)))
 (let ((?x11314 (- (+ (- ?x10833 ?x9068) (* (* 2.0 l_0_5_57) l_0_5_60)) (* (* 2.0 l_0_5_85) l_0_5_88))))
 (= ?x11314 0.0)))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9181 (* ?x8776 l_0_5_33)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9179 (* ?x8773 l_0_5_32)))
 (let ((?x9176 (* 2.0 l_0_5_3)))
 (let ((?x9177 (* ?x9176 l_0_5_5)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9165 (* ?x9164 l_0_5_4)))
 (let ((?x11337 (* l_0_5_174 l_0_5_174)))
 (let ((?x11335 (* l_0_5_173 l_0_5_173)))
 (let ((?x11333 (* l_0_5_172 l_0_5_172)))
 (let ((?x11331 (* l_0_5_146 l_0_5_146)))
 (let ((?x11334 (- (+ (+ (* l_0_5_144 l_0_5_144) (* l_0_5_145 l_0_5_145)) ?x11331) ?x11333)))
 (= (- (- (+ (+ (- (- ?x11334 ?x11335) ?x11337) ?x9165) ?x9177) ?x9179) ?x9181) 0.0)))))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9256 (* ?x8776 l_0_5_36)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9254 (* ?x8773 l_0_5_35)))
 (let ((?x9176 (* 2.0 l_0_5_3)))
 (let ((?x9252 (* ?x9176 l_0_5_8)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9242 (* ?x9164 l_0_5_7)))
 (let ((?x11362 (+ (* (* 2.0 l_0_5_144) l_0_5_147) (* (* 2.0 l_0_5_145) l_0_5_148))))
 (let ((?x11366 (- (+ ?x11362 (* (* 2.0 l_0_5_146) l_0_5_149)) (* (* 2.0 l_0_5_172) l_0_5_175))))
 (let ((?x11370 (- (- ?x11366 (* (* 2.0 l_0_5_173) l_0_5_176)) (* (* 2.0 l_0_5_174) l_0_5_177))))
 (= (- (- (+ (+ ?x11370 ?x9242) ?x9252) ?x9254) ?x9256) 0.0)))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9434 (* ?x8776 l_0_5_45)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9431 (* ?x8773 l_0_5_44)))
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8771 (* ?x8704 l_0_5_32)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9413 (* ?x9412 l_0_5_3)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9410 (* ?x9409 l_0_5_2)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10597 (* ?x8953 l_0_5_4)))
 (let ((?x11410 (+ (+ ?x10597 (* (* 2.0 l_0_5_144) l_0_5_156)) (* (* 2.0 l_0_5_145) l_0_5_157))))
 (let ((?x11416 (- (+ (+ (+ ?x11410 (* (* 2.0 l_0_5_146) l_0_5_158)) ?x9410) ?x9413) (* (* 2.0 l_0_5_172) l_0_5_184))))
 (let ((?x11420 (- (- ?x11416 (* (* 2.0 l_0_5_173) l_0_5_185)) (* (* 2.0 l_0_5_174) l_0_5_186))))
 (= (- (- (- ?x11420 ?x8771) ?x9431) ?x9434) 0.0)))))))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9548 (* ?x8776 l_0_5_51)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9546 (* ?x8773 l_0_5_50)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9544 (* ?x9543 l_0_5_3)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9531 (* ?x9164 l_0_5_22)))
 (let ((?x11459 (+ (* (* 2.0 l_0_5_144) l_0_5_162) (* (* 2.0 l_0_5_145) l_0_5_163))))
 (let ((?x11463 (- (+ ?x11459 (* (* 2.0 l_0_5_146) l_0_5_164)) (* (* 2.0 l_0_5_172) l_0_5_190))))
 (let ((?x11467 (- (- ?x11463 (* (* 2.0 l_0_5_173) l_0_5_191)) (* (* 2.0 l_0_5_174) l_0_5_192))))
 (let ((?x11473 (+ (- (- (+ (+ ?x11467 ?x9531) ?x9544) ?x9546) ?x9548) (* (* 2.0 l_0_5_58) l_0_5_60))))
 (let ((?x11477 (- (+ ?x11473 (* (* 2.0 l_0_5_59) l_0_5_61)) (* (* 2.0 l_0_5_86) l_0_5_88))))
 (= (- ?x11477 (* (* 2.0 l_0_5_87) l_0_5_89)) 0.0)))))))))))))))
(assert
 (let ((?x9635 (* l_0_5_6 l_0_5_6)))
 (let ((?x9633 (* l_0_5_5 l_0_5_5)))
 (let ((?x9631 (* l_0_5_4 l_0_5_4)))
 (let ((?x9629 (* l_0_5_34 l_0_5_34)))
 (let ((?x10969 (+ (- (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x9629) ?x9631)))
 (= (+ (+ ?x10969 ?x9633) ?x9635) 0.0)))))))
(assert
 (let ((?x9664 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9661 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9658 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9655 (* ?x9654 l_0_5_37)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9652 (* ?x9651 l_0_5_36)))
 (let ((?x10985 (+ (+ (- (- (* (* (- 2.0) l_0_5_32) l_0_5_35) ?x9652) ?x9655) ?x9658) ?x9661)))
 (= (+ ?x10985 ?x9664) 0.0))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9703 (* ?x9654 l_0_5_41)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9701 (* ?x9651 l_0_5_40)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9699 (* ?x9649 l_0_5_39)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x9697 (* ?x9696 l_0_5_6)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x9694 (* ?x8750 l_0_5_5)))
 (let ((?x9725 (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x9694) ?x9697)))
 (= (- (- (- ?x9725 ?x9699) ?x9701) ?x9703) 0.0)))))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9746 (* ?x9654 l_0_5_46)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9743 (* ?x9651 l_0_5_45)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9740 (* ?x9649 l_0_5_44)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x9737 (* ?x9736 l_0_5_6)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9734 (* ?x9412 l_0_5_5)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9726 (* ?x9409 l_0_5_4)))
 (= (- (- (- (+ (+ ?x9726 ?x9734) ?x9737) ?x9740) ?x9743) ?x9746) 0.0))))))))))))))
(assert
 (let ((?x11539 (* l_0_5_90 l_0_5_90)))
 (let ((?x11537 (* l_0_5_89 l_0_5_89)))
 (let ((?x11535 (* l_0_5_88 l_0_5_88)))
 (let ((?x11533 (* l_0_5_62 l_0_5_62)))
 (let ((?x11531 (* l_0_5_61 l_0_5_61)))
 (let ((?x11529 (* l_0_5_60 l_0_5_60)))
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9801 (* ?x9654 l_0_5_52)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9799 (* ?x9651 l_0_5_51)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9797 (* ?x9649 l_0_5_50)))
 (let ((?x9794 (* 2.0 l_0_5_24)))
 (let ((?x9795 (* ?x9794 l_0_5_6)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9792 (* ?x9543 l_0_5_5)))
 (let ((?x11030 (- (- (+ (+ (* (* 2.0 l_0_5_22) l_0_5_4) ?x9792) ?x9795) ?x9797) ?x9799)))
 (let ((?x11031 (- ?x11030 ?x9801)))
 (= (- (- (- (+ (+ (+ ?x11031 ?x11529) ?x11531) ?x11533) ?x11535) ?x11537) ?x11539) 0.0))))))))))))))))))))
(assert
 (let ((?x9841 (* l_0_5_9 l_0_5_9)))
 (let ((?x9839 (* l_0_5_8 l_0_5_8)))
 (let ((?x9837 (* l_0_5_7 l_0_5_7)))
 (let ((?x9835 (* l_0_5_38 l_0_5_38)))
 (let ((?x9833 (* l_0_5_37 l_0_5_37)))
 (let ((?x9831 (* l_0_5_36 l_0_5_36)))
 (let ((?x11047 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x9831) ?x9833)))
 (= (+ (+ (+ (- ?x11047 ?x9835) ?x9837) ?x9839) ?x9841) 0.0)))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x9876 (* ?x9875 l_0_5_42)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x9873 (* ?x9872 l_0_5_41)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x9870 (* ?x9869 l_0_5_40)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x9867 (* ?x9866 l_0_5_39)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x9864 (* ?x9696 l_0_5_9)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x9862 (* ?x8750 l_0_5_8)))
 (let ((?x8741 (* 2.0 l_0_5_11)))
 (let ((?x9860 (* ?x8741 l_0_5_7)))
 (let ((?x9900 (* 2.0 l_0_5_10)))
 (let ((?x9902 (* ?x9900 l_0_5_14)))
 (let ((?x11071 (- (- (- (- (+ (+ (+ ?x9902 ?x9860) ?x9862) ?x9864) ?x9867) ?x9870) ?x9873) ?x9876)))
 (= ?x11071 0.0)))))))))))))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x9933 (* ?x9875 l_0_5_47)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x9930 (* ?x9872 l_0_5_46)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x9927 (* ?x9869 l_0_5_45)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x9924 (* ?x9866 l_0_5_44)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x9921 (* ?x9736 l_0_5_9)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9919 (* ?x9412 l_0_5_8)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9917 (* ?x9409 l_0_5_7)))
 (let ((?x9900 (* 2.0 l_0_5_10)))
 (let ((?x9904 (* ?x9900 l_0_5_19)))
 (let ((?x11087 (- (- (- (- (+ (+ (+ ?x9904 ?x9917) ?x9919) ?x9921) ?x9924) ?x9927) ?x9930) ?x9933)))
 (= ?x11087 0.0)))))))))))))))))))
(assert
 (let ((?x10064 (* l_0_5_43 l_0_5_43)))
 (let ((?x10062 (* l_0_5_42 l_0_5_42)))
 (let ((?x10060 (* l_0_5_41 l_0_5_41)))
 (let ((?x10058 (* l_0_5_40 l_0_5_40)))
 (let ((?x10056 (* l_0_5_39 l_0_5_39)))
 (let ((?x10054 (* l_0_5_15 l_0_5_15)))
 (let ((?x10052 (* l_0_5_14 l_0_5_14)))
 (let ((?x10050 (* l_0_5_13 l_0_5_13)))
 (let ((?x11127 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x10050) ?x10052)))
 (= (- (- (- (- (- (+ ?x11127 ?x10054) ?x10056) ?x10058) ?x10060) ?x10062) ?x10064) 0.0)))))))))))
(assert
 (let ((?x10121 (* 2.0 l_0_5_43)))
 (let ((?x10122 (* ?x10121 l_0_5_48)))
 (let ((?x10117 (* 2.0 l_0_5_42)))
 (let ((?x10118 (* ?x10117 l_0_5_47)))
 (let ((?x10113 (* 2.0 l_0_5_41)))
 (let ((?x10114 (* ?x10113 l_0_5_46)))
 (let ((?x10109 (* 2.0 l_0_5_40)))
 (let ((?x10110 (* ?x10109 l_0_5_45)))
 (let ((?x10105 (* 2.0 l_0_5_39)))
 (let ((?x10106 (* ?x10105 l_0_5_44)))
 (let ((?x10101 (* 2.0 l_0_5_15)))
 (let ((?x10102 (* ?x10101 l_0_5_20)))
 (let ((?x10097 (* 2.0 l_0_5_14)))
 (let ((?x10098 (* ?x10097 l_0_5_19)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x10094 (* ?x9696 l_0_5_18)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x10091 (* ?x8750 l_0_5_17)))
 (let ((?x10237 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_16) ?x10091) ?x10094) ?x10098) ?x10102)))
 (= (- (- (- (- (- ?x10237 ?x10106) ?x10110) ?x10114) ?x10118) ?x10122) 0.0)))))))))))))))))))))
(assert
 (let ((?x10121 (* 2.0 l_0_5_43)))
 (let ((?x10199 (* ?x10121 l_0_5_54)))
 (let ((?x10117 (* 2.0 l_0_5_42)))
 (let ((?x10197 (* ?x10117 l_0_5_53)))
 (let ((?x10113 (* 2.0 l_0_5_41)))
 (let ((?x10195 (* ?x10113 l_0_5_52)))
 (let ((?x10109 (* 2.0 l_0_5_40)))
 (let ((?x10193 (* ?x10109 l_0_5_51)))
 (let ((?x10105 (* 2.0 l_0_5_39)))
 (let ((?x10191 (* ?x10105 l_0_5_50)))
 (let ((?x10101 (* 2.0 l_0_5_15)))
 (let ((?x10189 (* ?x10101 l_0_5_26)))
 (let ((?x10097 (* 2.0 l_0_5_14)))
 (let ((?x10187 (* ?x10097 l_0_5_25)))
 (let ((?x9696 (* 2.0 l_0_5_13)))
 (let ((?x10185 (* ?x9696 l_0_5_24)))
 (let ((?x8750 (* 2.0 l_0_5_12)))
 (let ((?x10183 (* ?x8750 l_0_5_23)))
 (let ((?x10322 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_22) ?x10183) ?x10185) ?x10187) ?x10189)))
 (let ((?x11166 (- (- (- (- (- ?x10322 ?x10191) ?x10193) ?x10195) ?x10197) ?x10199)))
 (let ((?x11556 (+ (+ ?x11166 (* (* 2.0 l_0_5_60) l_0_5_67)) (* (* 2.0 l_0_5_61) l_0_5_68))))
 (let ((?x11560 (- (+ ?x11556 (* (* 2.0 l_0_5_62) l_0_5_69)) (* (* 2.0 l_0_5_88) l_0_5_95))))
 (let ((?x11564 (- (- ?x11560 (* (* 2.0 l_0_5_89) l_0_5_96)) (* (* 2.0 l_0_5_90) l_0_5_97))))
 (= ?x11564 0.0)))))))))))))))))))))))))
(assert
 (let ((?x10273 (* l_0_5_49 l_0_5_49)))
 (let ((?x10271 (* l_0_5_48 l_0_5_48)))
 (let ((?x10269 (* l_0_5_47 l_0_5_47)))
 (let ((?x10267 (* l_0_5_46 l_0_5_46)))
 (let ((?x10265 (* l_0_5_45 l_0_5_45)))
 (let ((?x10263 (* l_0_5_44 l_0_5_44)))
 (let ((?x10256 (* l_0_5_21 l_0_5_21)))
 (let ((?x10254 (* l_0_5_20 l_0_5_20)))
 (let ((?x10252 (* l_0_5_19 l_0_5_19)))
 (let ((?x10250 (* l_0_5_18 l_0_5_18)))
 (let ((?x11179 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x10250) ?x10252)))
 (let ((?x11186 (- (- (- (- (- (+ (+ ?x11179 ?x10254) ?x10256) ?x10263) ?x10265) ?x10267) ?x10269) ?x10271)))
 (= (- ?x11186 ?x10273) 0.0))))))))))))))
(assert
 (let ((?x10359 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x10356 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x10353 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x10350 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x10347 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x10344 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x10336 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x10333 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x10330 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x10327 (* ?x9736 l_0_5_24)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x10325 (* ?x9412 l_0_5_23)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x10323 (* ?x9409 l_0_5_22)))
 (let ((?x11595 (- (* (* (- 2.0) l_0_5_100) l_0_5_88) (* (* 2.0 l_0_5_101) l_0_5_89))))
 (let ((?x11600 (+ (+ (+ (- ?x11595 (* (* 2.0 l_0_5_102) l_0_5_90)) ?x10323) ?x10325) ?x10327)))
 (let ((?x11607 (- (- (- (- (+ (+ (+ ?x11600 ?x10330) ?x10333) ?x10336) ?x10344) ?x10347) ?x10350) ?x10353)))
 (let ((?x11613 (+ (+ (- (- ?x11607 ?x10356) ?x10359) (* (* 2.0 l_0_5_60) l_0_5_72)) (* (* 2.0 l_0_5_61) l_0_5_73))))
 (= (+ ?x11613 (* (* 2.0 l_0_5_62) l_0_5_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x10459 (* l_0_5_56 l_0_5_56)))
 (let ((?x10457 (* l_0_5_55 l_0_5_55)))
 (let ((?x10455 (* l_0_5_54 l_0_5_54)))
 (let ((?x10453 (* l_0_5_53 l_0_5_53)))
 (let ((?x10451 (* l_0_5_52 l_0_5_52)))
 (let ((?x10449 (* l_0_5_51 l_0_5_51)))
 (let ((?x10447 (* l_0_5_50 l_0_5_50)))
 (let ((?x10445 (* l_0_5_28 l_0_5_28)))
 (let ((?x10443 (* l_0_5_27 l_0_5_27)))
 (let ((?x10441 (* l_0_5_26 l_0_5_26)))
 (let ((?x10439 (* l_0_5_25 l_0_5_25)))
 (let ((?x10437 (* l_0_5_24 l_0_5_24)))
 (let ((?x10435 (* l_0_5_23 l_0_5_23)))
 (let ((?x10463 (* l_0_5_22 l_0_5_22)))
 (let ((?x11655 (- (* (* (- 2.0) l_0_5_106) l_0_5_88) (* (* 2.0 l_0_5_107) l_0_5_89))))
 (let ((?x11660 (+ (+ (+ (- ?x11655 (* (* 2.0 l_0_5_108) l_0_5_90)) ?x10463) ?x10435) ?x10437)))
 (let ((?x11667 (- (- (- (+ (+ (+ (+ ?x11660 ?x10439) ?x10441) ?x10443) ?x10445) ?x10447) ?x10449) ?x10451)))
 (let ((?x11673 (+ (- (- (- (- ?x11667 ?x10453) ?x10455) ?x10457) ?x10459) (* (* 2.0 l_0_5_60) l_0_5_78))))
 (let ((?x11677 (+ (+ ?x11673 (* (* 2.0 l_0_5_61) l_0_5_79)) (* (* 2.0 l_0_5_62) l_0_5_80))))
 (= ?x11677 0.0)))))))))))))))))))))
(assert
 (let ((?x8672 (* l_0_5_29 l_0_5_29)))
 (let ((?x11719 (- (+ (* l_0_5_1 l_0_5_1) (* (* 2.0 l_0_5_141) l_0_5_156)) (* (* 2.0 l_0_5_169) l_0_5_184))))
 (= (- ?x11719 ?x8672) 0.0))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8705 (* ?x8704 l_0_5_30)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10515 (* ?x8953 l_0_5_2)))
 (let ((?x11739 (+ (- ?x10515 (* (* 2.0 l_0_5_113) l_0_5_128)) (* (* 2.0 l_0_5_142) l_0_5_156))))
 (let ((?x11743 (- (+ ?x11739 (* (* 2.0 l_0_5_143) l_0_5_157)) (* (* 2.0 l_0_5_170) l_0_5_184))))
 (let ((?x11747 (- (- ?x11743 (* (* 2.0 l_0_5_171) l_0_5_185)) (* (* 2.0 l_0_5_197) l_0_5_212))))
 (= (- ?x11747 ?x8705) 0.0)))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8860 (* ?x8704 l_0_5_35)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10674 (* ?x8953 l_0_5_7)))
 (let ((?x11785 (+ (+ ?x10674 (* (* 2.0 l_0_5_147) l_0_5_156)) (* (* 2.0 l_0_5_148) l_0_5_157))))
 (let ((?x11789 (+ (+ ?x11785 (* (* 2.0 l_0_5_149) l_0_5_158)) (* (* 2.0 l_0_5_150) l_0_5_159))))
 (let ((?x11793 (- (- ?x11789 (* (* 2.0 l_0_5_175) l_0_5_184)) (* (* 2.0 l_0_5_176) l_0_5_185))))
 (let ((?x11797 (- (- ?x11793 (* (* 2.0 l_0_5_177) l_0_5_186)) (* (* 2.0 l_0_5_178) l_0_5_187))))
 (= (- ?x11797 ?x8860) 0.0))))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x8988 (* ?x8704 l_0_5_44)))
 (let ((?x11858 (* l_0_5_189 l_0_5_189)))
 (let ((?x11856 (* l_0_5_188 l_0_5_188)))
 (let ((?x11854 (* l_0_5_187 l_0_5_187)))
 (let ((?x11852 (* l_0_5_186 l_0_5_186)))
 (let ((?x11850 (* l_0_5_185 l_0_5_185)))
 (let ((?x11848 (* l_0_5_184 l_0_5_184)))
 (let ((?x11846 (* l_0_5_161 l_0_5_161)))
 (let ((?x11844 (* l_0_5_160 l_0_5_160)))
 (let ((?x11842 (* l_0_5_159 l_0_5_159)))
 (let ((?x11840 (* l_0_5_158 l_0_5_158)))
 (let ((?x11838 (* l_0_5_157 l_0_5_157)))
 (let ((?x11839 (+ (+ (* (* 2.0 l_0_5_1) l_0_5_16) (* l_0_5_156 l_0_5_156)) ?x11838)))
 (let ((?x11853 (- (- (- (+ (+ (+ (+ ?x11839 ?x11840) ?x11842) ?x11844) ?x11846) ?x11848) ?x11850) ?x11852)))
 (= (- (- (- (- ?x11853 ?x11854) ?x11856) ?x11858) ?x8988) 0.0)))))))))))))))))
(assert
 (let ((?x8704 (* 2.0 l_0_5_29)))
 (let ((?x9068 (* ?x8704 l_0_5_50)))
 (let ((?x8953 (* 2.0 l_0_5_1)))
 (let ((?x10833 (* ?x8953 l_0_5_22)))
 (let ((?x11887 (- (- ?x10833 (* (* 2.0 l_0_5_100) l_0_5_86)) (* (* 2.0 l_0_5_101) l_0_5_87))))
 (let ((?x11893 (+ (+ ?x11887 (* (* 2.0 l_0_5_156) l_0_5_162)) (* (* 2.0 l_0_5_157) l_0_5_163))))
 (let ((?x11899 (+ (+ ?x11893 (* (* 2.0 l_0_5_158) l_0_5_164)) (* (* 2.0 l_0_5_159) l_0_5_165))))
 (let ((?x11905 (+ (+ ?x11899 (* (* 2.0 l_0_5_160) l_0_5_166)) (* (* 2.0 l_0_5_161) l_0_5_167))))
 (let ((?x11911 (- (- ?x11905 (* (* 2.0 l_0_5_184) l_0_5_190)) (* (* 2.0 l_0_5_185) l_0_5_191))))
 (let ((?x11917 (- (- ?x11911 (* (* 2.0 l_0_5_186) l_0_5_192)) (* (* 2.0 l_0_5_187) l_0_5_193))))
 (let ((?x11923 (- (- ?x11917 (* (* 2.0 l_0_5_188) l_0_5_194)) (* (* 2.0 l_0_5_189) l_0_5_195))))
 (let ((?x11928 (+ (+ (- ?x11923 ?x9068) (* (* 2.0 l_0_5_58) l_0_5_72)) (* (* 2.0 l_0_5_59) l_0_5_73))))
 (= ?x11928 0.0))))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9181 (* ?x8776 l_0_5_33)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9179 (* ?x8773 l_0_5_32)))
 (let ((?x9176 (* 2.0 l_0_5_3)))
 (let ((?x9177 (* ?x9176 l_0_5_5)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9165 (* ?x9164 l_0_5_4)))
 (let ((?x12001 (- (* (* (- 2.0) l_0_5_116) l_0_5_128) (* (* 2.0 l_0_5_117) l_0_5_129))))
 (let ((?x12006 (- (+ (- ?x12001 (* (* 2.0 l_0_5_118) l_0_5_130)) ?x9165) (* (* 2.0 l_0_5_200) l_0_5_212))))
 (let ((?x12010 (- (- ?x12006 (* (* 2.0 l_0_5_201) l_0_5_213)) (* (* 2.0 l_0_5_202) l_0_5_214))))
 (= (- (- (+ ?x12010 ?x9177) ?x9179) ?x9181) 0.0)))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9256 (* ?x8776 l_0_5_36)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9254 (* ?x8773 l_0_5_35)))
 (let ((?x9176 (* 2.0 l_0_5_3)))
 (let ((?x9252 (* ?x9176 l_0_5_8)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9242 (* ?x9164 l_0_5_7)))
 (let ((?x12056 (- (* (* (- 2.0) l_0_5_119) l_0_5_128) (* (* 2.0 l_0_5_120) l_0_5_129))))
 (let ((?x12060 (- (- ?x12056 (* (* 2.0 l_0_5_121) l_0_5_130)) (* (* 2.0 l_0_5_122) l_0_5_131))))
 (let ((?x12065 (- (- (+ ?x12060 ?x9242) (* (* 2.0 l_0_5_203) l_0_5_212)) (* (* 2.0 l_0_5_204) l_0_5_213))))
 (let ((?x12069 (- (- ?x12065 (* (* 2.0 l_0_5_205) l_0_5_214)) (* (* 2.0 l_0_5_206) l_0_5_215))))
 (= (- (- (+ ?x12069 ?x9252) ?x9254) ?x9256) 0.0))))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9434 (* ?x8776 l_0_5_45)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9431 (* ?x8773 l_0_5_44)))
 (let ((?x12154 (* l_0_5_217 l_0_5_217)))
 (let ((?x12152 (* l_0_5_216 l_0_5_216)))
 (let ((?x12150 (* l_0_5_215 l_0_5_215)))
 (let ((?x12148 (* l_0_5_214 l_0_5_214)))
 (let ((?x12146 (* l_0_5_213 l_0_5_213)))
 (let ((?x12144 (* l_0_5_212 l_0_5_212)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9413 (* ?x9412 l_0_5_3)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9410 (* ?x9409 l_0_5_2)))
 (let ((?x12129 (- (* (* (- 1.0) l_0_5_128) l_0_5_128) (* (* 1.0 l_0_5_129) l_0_5_129))))
 (let ((?x12135 (- (- ?x12129 (* (* 1.0 l_0_5_130) l_0_5_130)) (* (* 1.0 l_0_5_131) l_0_5_131))))
 (let ((?x12141 (- (- ?x12135 (* (* 1.0 l_0_5_132) l_0_5_132)) (* (* 1.0 l_0_5_133) l_0_5_133))))
 (let ((?x12153 (- (- (- (- (- (+ (+ ?x12141 ?x9410) ?x9413) ?x12144) ?x12146) ?x12148) ?x12150) ?x12152)))
 (= (- (- (- ?x12153 ?x12154) ?x9431) ?x9434) 0.0))))))))))))))))))))
(assert
 (let ((?x8776 (* 2.0 l_0_5_31)))
 (let ((?x9548 (* ?x8776 l_0_5_51)))
 (let ((?x8773 (* 2.0 l_0_5_30)))
 (let ((?x9546 (* ?x8773 l_0_5_50)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9544 (* ?x9543 l_0_5_3)))
 (let ((?x9164 (* 2.0 l_0_5_2)))
 (let ((?x9531 (* ?x9164 l_0_5_22)))
 (let ((?x12208 (- (* (* (- 2.0) l_0_5_128) l_0_5_134) (* (* 2.0 l_0_5_129) l_0_5_135))))
 (let ((?x12214 (- (- ?x12208 (* (* 2.0 l_0_5_130) l_0_5_136)) (* (* 2.0 l_0_5_131) l_0_5_137))))
 (let ((?x12220 (- (- ?x12214 (* (* 2.0 l_0_5_132) l_0_5_138)) (* (* 2.0 l_0_5_133) l_0_5_139))))
 (let ((?x12227 (- (- (+ ?x12220 ?x9531) (* (* 2.0 l_0_5_212) l_0_5_218)) (* (* 2.0 l_0_5_213) l_0_5_219))))
 (let ((?x12233 (- (- ?x12227 (* (* 2.0 l_0_5_214) l_0_5_220)) (* (* 2.0 l_0_5_215) l_0_5_221))))
 (let ((?x12239 (- (- ?x12233 (* (* 2.0 l_0_5_216) l_0_5_222)) (* (* 2.0 l_0_5_217) l_0_5_223))))
 (= (- (- (+ ?x12239 ?x9544) ?x9546) ?x9548) 0.0))))))))))))))))
(assert
 (let ((?x9635 (* l_0_5_6 l_0_5_6)))
 (let ((?x9633 (* l_0_5_5 l_0_5_5)))
 (let ((?x9631 (* l_0_5_4 l_0_5_4)))
 (let ((?x9629 (* l_0_5_34 l_0_5_34)))
 (let ((?x10969 (+ (- (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x9629) ?x9631)))
 (= (+ (+ ?x10969 ?x9633) ?x9635) 0.0)))))))
(assert
 (let ((?x9664 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9661 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9658 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9655 (* ?x9654 l_0_5_37)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9652 (* ?x9651 l_0_5_36)))
 (let ((?x10985 (+ (+ (- (- (* (* (- 2.0) l_0_5_32) l_0_5_35) ?x9652) ?x9655) ?x9658) ?x9661)))
 (= (+ ?x10985 ?x9664) 0.0))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9746 (* ?x9654 l_0_5_46)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9743 (* ?x9651 l_0_5_45)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9740 (* ?x9649 l_0_5_44)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x9737 (* ?x9736 l_0_5_6)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9734 (* ?x9412 l_0_5_5)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9726 (* ?x9409 l_0_5_4)))
 (= (- (- (- (+ (+ ?x9726 ?x9734) ?x9737) ?x9740) ?x9743) ?x9746) 0.0))))))))))))))
(assert
 (let ((?x9654 (* 2.0 l_0_5_34)))
 (let ((?x9801 (* ?x9654 l_0_5_52)))
 (let ((?x9651 (* 2.0 l_0_5_33)))
 (let ((?x9799 (* ?x9651 l_0_5_51)))
 (let ((?x9649 (* 2.0 l_0_5_32)))
 (let ((?x9797 (* ?x9649 l_0_5_50)))
 (let ((?x9794 (* 2.0 l_0_5_24)))
 (let ((?x9795 (* ?x9794 l_0_5_6)))
 (let ((?x9543 (* 2.0 l_0_5_23)))
 (let ((?x9792 (* ?x9543 l_0_5_5)))
 (let ((?x11030 (- (- (+ (+ (* (* 2.0 l_0_5_22) l_0_5_4) ?x9792) ?x9795) ?x9797) ?x9799)))
 (let ((?x11031 (- ?x11030 ?x9801)))
 (= ?x11031 0.0))))))))))))))
(assert
 (let ((?x9841 (* l_0_5_9 l_0_5_9)))
 (let ((?x9839 (* l_0_5_8 l_0_5_8)))
 (let ((?x9837 (* l_0_5_7 l_0_5_7)))
 (let ((?x9835 (* l_0_5_38 l_0_5_38)))
 (let ((?x9833 (* l_0_5_37 l_0_5_37)))
 (let ((?x9831 (* l_0_5_36 l_0_5_36)))
 (let ((?x11047 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x9831) ?x9833)))
 (= (+ (+ (+ (- ?x11047 ?x9835) ?x9837) ?x9839) ?x9841) 0.0)))))))))
(assert
 (let ((?x9875 (* 2.0 l_0_5_38)))
 (let ((?x9933 (* ?x9875 l_0_5_47)))
 (let ((?x9872 (* 2.0 l_0_5_37)))
 (let ((?x9930 (* ?x9872 l_0_5_46)))
 (let ((?x9869 (* 2.0 l_0_5_36)))
 (let ((?x9927 (* ?x9869 l_0_5_45)))
 (let ((?x9866 (* 2.0 l_0_5_35)))
 (let ((?x9924 (* ?x9866 l_0_5_44)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x9921 (* ?x9736 l_0_5_9)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x9919 (* ?x9412 l_0_5_8)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x9917 (* ?x9409 l_0_5_7)))
 (let ((?x9900 (* 2.0 l_0_5_10)))
 (let ((?x9904 (* ?x9900 l_0_5_19)))
 (let ((?x11087 (- (- (- (- (+ (+ (+ ?x9904 ?x9917) ?x9919) ?x9921) ?x9924) ?x9927) ?x9930) ?x9933)))
 (= ?x11087 0.0)))))))))))))))))))
(assert
 (let ((?x10273 (* l_0_5_49 l_0_5_49)))
 (let ((?x10271 (* l_0_5_48 l_0_5_48)))
 (let ((?x10269 (* l_0_5_47 l_0_5_47)))
 (let ((?x10267 (* l_0_5_46 l_0_5_46)))
 (let ((?x10265 (* l_0_5_45 l_0_5_45)))
 (let ((?x10263 (* l_0_5_44 l_0_5_44)))
 (let ((?x10256 (* l_0_5_21 l_0_5_21)))
 (let ((?x10254 (* l_0_5_20 l_0_5_20)))
 (let ((?x10252 (* l_0_5_19 l_0_5_19)))
 (let ((?x10250 (* l_0_5_18 l_0_5_18)))
 (let ((?x11179 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x10250) ?x10252)))
 (let ((?x11186 (- (- (- (- (- (+ (+ ?x11179 ?x10254) ?x10256) ?x10263) ?x10265) ?x10267) ?x10269) ?x10271)))
 (= (- ?x11186 ?x10273) 0.0))))))))))))))
(assert
 (let ((?x10359 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x10356 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x10353 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x10350 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x10347 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x10344 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x10336 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x10333 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x10330 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x9736 (* 2.0 l_0_5_18)))
 (let ((?x10327 (* ?x9736 l_0_5_24)))
 (let ((?x9412 (* 2.0 l_0_5_17)))
 (let ((?x10325 (* ?x9412 l_0_5_23)))
 (let ((?x9409 (* 2.0 l_0_5_16)))
 (let ((?x10323 (* ?x9409 l_0_5_22)))
 (let ((?x11215 (- (- (+ (+ (+ (+ (+ ?x10323 ?x10325) ?x10327) ?x10330) ?x10333) ?x10336) ?x10344) ?x10347)))
 (= (- (- (- (- ?x11215 ?x10350) ?x10353) ?x10356) ?x10359) 0.0))))))))))))))))))
(assert
 (let ((?x10459 (* l_0_5_56 l_0_5_56)))
 (let ((?x10457 (* l_0_5_55 l_0_5_55)))
 (let ((?x10455 (* l_0_5_54 l_0_5_54)))
 (let ((?x10453 (* l_0_5_53 l_0_5_53)))
 (let ((?x10451 (* l_0_5_52 l_0_5_52)))
 (let ((?x10449 (* l_0_5_51 l_0_5_51)))
 (let ((?x10447 (* l_0_5_50 l_0_5_50)))
 (let ((?x10445 (* l_0_5_28 l_0_5_28)))
 (let ((?x10443 (* l_0_5_27 l_0_5_27)))
 (let ((?x10441 (* l_0_5_26 l_0_5_26)))
 (let ((?x10439 (* l_0_5_25 l_0_5_25)))
 (let ((?x10437 (* l_0_5_24 l_0_5_24)))
 (let ((?x11249 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x10437) ?x10439)))
 (let ((?x11256 (- (- (- (- (+ (+ (+ ?x11249 ?x10441) ?x10443) ?x10445) ?x10447) ?x10449) ?x10451) ?x10453)))
 (= (- (- (- ?x11256 ?x10455) ?x10457) ?x10459) 0.0))))))))))))))))
(assert
 (= (- (* l_0_5_57 l_0_5_57) (* l_0_5_85 l_0_5_85)) 0.0))
(assert
 (let ((?x12328 (- (* (* 2.0 l_0_5_141) l_0_5_162) (* (* 2.0 l_0_5_169) l_0_5_190))))
 (let ((?x12332 (- (+ ?x12328 (* (* 2.0 l_0_5_57) l_0_5_58)) (* (* 2.0 l_0_5_85) l_0_5_86))))
 (= ?x12332 0.0))))
(assert
 (let ((?x12354 (- (* (* 2.0 l_0_5_57) l_0_5_67) (* (* 2.0 l_0_5_85) l_0_5_95))))
 (= ?x12354 0.0)))
(assert
 (let ((?x12367 (+ (* (* (- 2.0) l_0_5_100) l_0_5_85) (* (* 2.0 l_0_5_57) l_0_5_72))))
 (= ?x12367 0.0)))
(assert
 (let ((?x12373 (+ (* (* (- 2.0) l_0_5_106) l_0_5_85) (* (* 2.0 l_0_5_57) l_0_5_78))))
 (= ?x12373 0.0)))
(assert
 (let ((?x12402 (* l_0_5_87 l_0_5_87)))
 (let ((?x12400 (* l_0_5_86 l_0_5_86)))
 (let ((?x12398 (* l_0_5_59 l_0_5_59)))
 (let ((?x12396 (* l_0_5_58 l_0_5_58)))
 (let ((?x12383 (+ (* (* (- 2.0) l_0_5_113) l_0_5_134) (* (* 2.0 l_0_5_142) l_0_5_162))))
 (let ((?x12391 (- (+ ?x12383 (* (* 2.0 l_0_5_143) l_0_5_163)) (* (* 2.0 l_0_5_170) l_0_5_190))))
 (let ((?x12395 (- (- ?x12391 (* (* 2.0 l_0_5_171) l_0_5_191)) (* (* 2.0 l_0_5_197) l_0_5_218))))
 (= (- (- (+ (+ ?x12395 ?x12396) ?x12398) ?x12400) ?x12402) 0.0)))))))))
(assert
 (let ((?x12467 (* l_0_5_196 l_0_5_196)))
 (let ((?x12465 (* l_0_5_195 l_0_5_195)))
 (let ((?x12463 (* l_0_5_194 l_0_5_194)))
 (let ((?x12461 (* l_0_5_193 l_0_5_193)))
 (let ((?x12459 (* l_0_5_192 l_0_5_192)))
 (let ((?x12457 (* l_0_5_191 l_0_5_191)))
 (let ((?x12455 (* l_0_5_190 l_0_5_190)))
 (let ((?x12453 (* l_0_5_168 l_0_5_168)))
 (let ((?x12451 (* l_0_5_167 l_0_5_167)))
 (let ((?x12449 (* l_0_5_166 l_0_5_166)))
 (let ((?x12447 (* l_0_5_165 l_0_5_165)))
 (let ((?x12445 (* l_0_5_164 l_0_5_164)))
 (let ((?x12443 (* l_0_5_163 l_0_5_163)))
 (let ((?x12441 (* l_0_5_162 l_0_5_162)))
 (let ((?x12440 (- (* (* (- 2.0) l_0_5_106) l_0_5_86) (* (* 2.0 l_0_5_107) l_0_5_87))))
 (let ((?x12454 (+ (+ (+ (+ (+ (+ (+ ?x12440 ?x12441) ?x12443) ?x12445) ?x12447) ?x12449) ?x12451) ?x12453)))
 (let ((?x12468 (- (- (- (- (- (- (- ?x12454 ?x12455) ?x12457) ?x12459) ?x12461) ?x12463) ?x12465) ?x12467)))
 (let ((?x12472 (+ (+ ?x12468 (* (* 2.0 l_0_5_58) l_0_5_78)) (* (* 2.0 l_0_5_59) l_0_5_79))))
 (= ?x12472 0.0))))))))))))))))))))
(assert
 (let ((?x12527 (* l_0_5_99 l_0_5_99)))
 (let ((?x12525 (* l_0_5_98 l_0_5_98)))
 (let ((?x12523 (* l_0_5_97 l_0_5_97)))
 (let ((?x12521 (* l_0_5_96 l_0_5_96)))
 (let ((?x12519 (* l_0_5_95 l_0_5_95)))
 (let ((?x12517 (* l_0_5_71 l_0_5_71)))
 (let ((?x12515 (* l_0_5_70 l_0_5_70)))
 (let ((?x12513 (* l_0_5_69 l_0_5_69)))
 (let ((?x12516 (+ (+ (+ (* l_0_5_67 l_0_5_67) (* l_0_5_68 l_0_5_68)) ?x12513) ?x12515)))
 (= (- (- (- (- (- (+ ?x12516 ?x12517) ?x12519) ?x12521) ?x12523) ?x12525) ?x12527) 0.0)))))))))))
(assert
 (let ((?x12549 (- (* (* (- 2.0) l_0_5_100) l_0_5_95) (* (* 2.0 l_0_5_101) l_0_5_96))))
 (let ((?x12553 (- (- ?x12549 (* (* 2.0 l_0_5_102) l_0_5_97)) (* (* 2.0 l_0_5_103) l_0_5_98))))
 (let ((?x12559 (+ (- ?x12553 (* (* 2.0 l_0_5_104) l_0_5_99)) (* (* 2.0 l_0_5_67) l_0_5_72))))
 (let ((?x12565 (+ (+ ?x12559 (* (* 2.0 l_0_5_68) l_0_5_73)) (* (* 2.0 l_0_5_69) l_0_5_74))))
 (let ((?x12571 (+ (+ ?x12565 (* (* 2.0 l_0_5_70) l_0_5_75)) (* (* 2.0 l_0_5_71) l_0_5_76))))
 (= ?x12571 0.0)))))))
(assert
 (let ((?x12604 (- (* (* (- 2.0) l_0_5_106) l_0_5_95) (* (* 2.0 l_0_5_107) l_0_5_96))))
 (let ((?x12618 (- (- ?x12604 (* (* 2.0 l_0_5_108) l_0_5_97)) (* (* 2.0 l_0_5_109) l_0_5_98))))
 (let ((?x12623 (+ (- ?x12618 (* (* 2.0 l_0_5_110) l_0_5_99)) (* (* 2.0 l_0_5_67) l_0_5_78))))
 (let ((?x12627 (+ (+ ?x12623 (* (* 2.0 l_0_5_68) l_0_5_79)) (* (* 2.0 l_0_5_69) l_0_5_80))))
 (let ((?x12631 (+ (+ ?x12627 (* (* 2.0 l_0_5_70) l_0_5_81)) (* (* 2.0 l_0_5_71) l_0_5_82))))
 (= ?x12631 0.0)))))))
(assert
 (let ((?x12694 (* l_0_5_77 l_0_5_77)))
 (let ((?x12692 (* l_0_5_76 l_0_5_76)))
 (let ((?x12690 (* l_0_5_75 l_0_5_75)))
 (let ((?x12688 (* l_0_5_74 l_0_5_74)))
 (let ((?x12686 (* l_0_5_73 l_0_5_73)))
 (let ((?x12684 (* l_0_5_72 l_0_5_72)))
 (let ((?x12682 (* l_0_5_105 l_0_5_105)))
 (let ((?x12680 (* l_0_5_104 l_0_5_104)))
 (let ((?x12678 (* l_0_5_103 l_0_5_103)))
 (let ((?x12668 (* l_0_5_102 l_0_5_102)))
 (let ((?x12669 (- (- (* (- l_0_5_100) l_0_5_100) (* l_0_5_101 l_0_5_101)) ?x12668)))
 (let ((?x12691 (+ (+ (+ (+ (- (- (- ?x12669 ?x12678) ?x12680) ?x12682) ?x12684) ?x12686) ?x12688) ?x12690)))
 (= (+ (+ ?x12691 ?x12692) ?x12694) 0.0))))))))))))))
(assert
 (let ((?x12725 (- (* (* (- 2.0) l_0_5_100) l_0_5_106) (* (* 2.0 l_0_5_101) l_0_5_107))))
 (let ((?x12729 (- (- ?x12725 (* (* 2.0 l_0_5_102) l_0_5_108)) (* (* 2.0 l_0_5_103) l_0_5_109))))
 (let ((?x12734 (- (- ?x12729 (* (* 2.0 l_0_5_104) l_0_5_110)) (* (* 2.0 l_0_5_105) l_0_5_111))))
 (let ((?x12740 (+ (+ ?x12734 (* (* 2.0 l_0_5_72) l_0_5_78)) (* (* 2.0 l_0_5_73) l_0_5_79))))
 (let ((?x12746 (+ (+ ?x12740 (* (* 2.0 l_0_5_74) l_0_5_80)) (* (* 2.0 l_0_5_75) l_0_5_81))))
 (let ((?x12752 (+ (+ ?x12746 (* (* 2.0 l_0_5_76) l_0_5_82)) (* (* 2.0 l_0_5_77) l_0_5_83))))
 (= ?x12752 0.0))))))))
(assert
 (let ((?x12827 (* l_0_5_84 l_0_5_84)))
 (let ((?x12825 (* l_0_5_83 l_0_5_83)))
 (let ((?x12823 (* l_0_5_82 l_0_5_82)))
 (let ((?x12821 (* l_0_5_81 l_0_5_81)))
 (let ((?x12819 (* l_0_5_80 l_0_5_80)))
 (let ((?x12817 (* l_0_5_79 l_0_5_79)))
 (let ((?x12815 (* l_0_5_78 l_0_5_78)))
 (let ((?x12813 (* l_0_5_112 l_0_5_112)))
 (let ((?x12811 (* l_0_5_111 l_0_5_111)))
 (let ((?x12809 (* l_0_5_110 l_0_5_110)))
 (let ((?x12798 (* l_0_5_109 l_0_5_109)))
 (let ((?x12795 (* l_0_5_108 l_0_5_108)))
 (let ((?x12797 (- (- (* (- l_0_5_106) l_0_5_106) (* l_0_5_107 l_0_5_107)) ?x12795)))
 (let ((?x12820 (+ (+ (+ (- (- (- (- ?x12797 ?x12798) ?x12809) ?x12811) ?x12813) ?x12815) ?x12817) ?x12819)))
 (= (+ (+ (+ (+ ?x12820 ?x12821) ?x12823) ?x12825) ?x12827) 0.0))))))))))))))))
(assert
 (let ((?x12866 (* l_0_5_197 l_0_5_197)))
 (let ((?x12863 (+ (* (* (- 1.0) l_0_5_113) l_0_5_113) (* (* 2.0 l_0_5_141) l_0_5_142))))
 (= (- (- ?x12863 (* (* 2.0 l_0_5_169) l_0_5_170)) ?x12866) 0.0))))
(assert
 (let ((?x12893 (* l_0_5_171 l_0_5_171)))
 (let ((?x12891 (* l_0_5_170 l_0_5_170)))
 (let ((?x12889 (* l_0_5_143 l_0_5_143)))
 (let ((?x12890 (+ (+ (* (* (- 2.0) l_0_5_113) l_0_5_114) (* l_0_5_142 l_0_5_142)) ?x12889)))
 (= (- (- (- ?x12890 ?x12891) ?x12893) (* (* 2.0 l_0_5_197) l_0_5_198)) 0.0))))))
(assert
 (let ((?x12916 (+ (* (* (- 2.0) l_0_5_113) l_0_5_119) (* (* 2.0 l_0_5_142) l_0_5_147))))
 (let ((?x12920 (- (+ ?x12916 (* (* 2.0 l_0_5_143) l_0_5_148)) (* (* 2.0 l_0_5_170) l_0_5_175))))
 (let ((?x12924 (- (- ?x12920 (* (* 2.0 l_0_5_171) l_0_5_176)) (* (* 2.0 l_0_5_197) l_0_5_203))))
 (= ?x12924 0.0)))))
(assert
 (let ((?x12958 (- (* (* (- 2.0) l_0_5_114) l_0_5_116) (* (* 2.0 l_0_5_115) l_0_5_117))))
 (let ((?x12962 (- (- ?x12958 (* (* 2.0 l_0_5_198) l_0_5_200)) (* (* 2.0 l_0_5_199) l_0_5_201))))
 (= ?x12962 0.0))))
(assert
 (let ((?x12989 (- (* (* (- 2.0) l_0_5_114) l_0_5_134) (* (* 2.0 l_0_5_115) l_0_5_135))))
 (let ((?x12993 (- (- ?x12989 (* (* 2.0 l_0_5_198) l_0_5_218)) (* (* 2.0 l_0_5_199) l_0_5_219))))
 (= ?x12993 0.0))))
(assert
 (let ((?x13030 (* l_0_5_202 l_0_5_202)))
 (let ((?x13028 (* l_0_5_201 l_0_5_201)))
 (let ((?x13026 (* l_0_5_200 l_0_5_200)))
 (let ((?x13022 (- (* (* (- 1.0) l_0_5_116) l_0_5_116) (* (* 1.0 l_0_5_117) l_0_5_117))))
 (let ((?x13031 (- (- (- (- ?x13022 (* (* 1.0 l_0_5_118) l_0_5_118)) ?x13026) ?x13028) ?x13030)))
 (= ?x13031 0.0)))))))
(assert
 (let ((?x13055 (- (* (* (- 2.0) l_0_5_116) l_0_5_119) (* (* 2.0 l_0_5_117) l_0_5_120))))
 (let ((?x13059 (- (- ?x13055 (* (* 2.0 l_0_5_118) l_0_5_121)) (* (* 2.0 l_0_5_200) l_0_5_203))))
 (let ((?x13063 (- (- ?x13059 (* (* 2.0 l_0_5_201) l_0_5_204)) (* (* 2.0 l_0_5_202) l_0_5_205))))
 (= ?x13063 0.0)))))
(assert
 (let ((?x13102 (- (* (* (- 2.0) l_0_5_116) l_0_5_134) (* (* 2.0 l_0_5_117) l_0_5_135))))
 (let ((?x13106 (- (- ?x13102 (* (* 2.0 l_0_5_118) l_0_5_136)) (* (* 2.0 l_0_5_200) l_0_5_218))))
 (let ((?x13110 (- (- ?x13106 (* (* 2.0 l_0_5_201) l_0_5_219)) (* (* 2.0 l_0_5_202) l_0_5_220))))
 (= ?x13110 0.0)))))
(assert
 (let ((?x13164 (* l_0_5_206 l_0_5_206)))
 (let ((?x13162 (* l_0_5_205 l_0_5_205)))
 (let ((?x13160 (* l_0_5_204 l_0_5_204)))
 (let ((?x13158 (* l_0_5_203 l_0_5_203)))
 (let ((?x13151 (- (* (* (- 1.0) l_0_5_119) l_0_5_119) (* (* 1.0 l_0_5_120) l_0_5_120))))
 (let ((?x13157 (- (- ?x13151 (* (* 1.0 l_0_5_121) l_0_5_121)) (* (* 1.0 l_0_5_122) l_0_5_122))))
 (= (- (- (- (- ?x13157 ?x13158) ?x13160) ?x13162) ?x13164) 0.0))))))))
(assert
 (let ((?x13226 (* l_0_5_224 l_0_5_224)))
 (let ((?x13224 (* l_0_5_223 l_0_5_223)))
 (let ((?x13222 (* l_0_5_222 l_0_5_222)))
 (let ((?x13220 (* l_0_5_221 l_0_5_221)))
 (let ((?x13218 (* l_0_5_220 l_0_5_220)))
 (let ((?x13216 (* l_0_5_219 l_0_5_219)))
 (let ((?x13214 (* l_0_5_218 l_0_5_218)))
 (let ((?x13198 (- (* (* (- 1.0) l_0_5_134) l_0_5_134) (* (* 1.0 l_0_5_135) l_0_5_135))))
 (let ((?x13204 (- (- ?x13198 (* (* 1.0 l_0_5_136) l_0_5_136)) (* (* 1.0 l_0_5_137) l_0_5_137))))
 (let ((?x13210 (- (- ?x13204 (* (* 1.0 l_0_5_138) l_0_5_138)) (* (* 1.0 l_0_5_139) l_0_5_139))))
 (let ((?x13219 (- (- (- (- ?x13210 (* (* 1.0 l_0_5_140) l_0_5_140)) ?x13214) ?x13216) ?x13218)))
 (= (- (- (- (- ?x13219 ?x13220) ?x13222) ?x13224) ?x13226) 0.0)))))))))))))
(assert
 (= (- (* l_0_5_141 l_0_5_141) (* l_0_5_169 l_0_5_169)) 0.0))
(assert
 (let ((?x13286 (- (* (* 2.0 l_0_5_141) l_0_5_147) (* (* 2.0 l_0_5_169) l_0_5_175))))
 (= ?x13286 0.0)))
(assert
 (let ((?x13310 (* l_0_5_178 l_0_5_178)))
 (let ((?x13308 (* l_0_5_177 l_0_5_177)))
 (let ((?x13306 (* l_0_5_176 l_0_5_176)))
 (let ((?x13304 (* l_0_5_175 l_0_5_175)))
 (let ((?x13302 (* l_0_5_150 l_0_5_150)))
 (let ((?x13300 (* l_0_5_149 l_0_5_149)))
 (let ((?x13303 (+ (+ (+ (* l_0_5_147 l_0_5_147) (* l_0_5_148 l_0_5_148)) ?x13300) ?x13302)))
 (= (- (- (- (- ?x13303 ?x13304) ?x13306) ?x13308) ?x13310) 0.0)))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_28 0.0))
(assert
 (>= l_0_5_29 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_34 0.0))
(assert
 (>= l_0_5_38 0.0))
(assert
 (>= l_0_5_43 0.0))
(assert
 (>= l_0_5_49 0.0))
(assert
 (>= l_0_5_56 0.0))
(assert
 (>= l_0_5_57 0.0))
(assert
 (>= l_0_5_59 0.0))
(assert
 (>= l_0_5_62 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_71 0.0))
(assert
 (>= l_0_5_77 0.0))
(assert
 (>= l_0_5_84 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_87 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_94 0.0))
(assert
 (>= l_0_5_99 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (>= l_0_5_112 0.0))
(assert
 (>= l_0_5_113 0.0))
(assert
 (>= l_0_5_115 0.0))
(assert
 (>= l_0_5_118 0.0))
(assert
 (>= l_0_5_122 0.0))
(assert
 (>= l_0_5_127 0.0))
(assert
 (>= l_0_5_133 0.0))
(assert
 (>= l_0_5_140 0.0))
(assert
 (>= l_0_5_141 0.0))
(assert
 (>= l_0_5_143 0.0))
(assert
 (>= l_0_5_146 0.0))
(assert
 (>= l_0_5_150 0.0))
(assert
 (>= l_0_5_155 0.0))
(assert
 (>= l_0_5_161 0.0))
(assert
 (>= l_0_5_168 0.0))
(assert
 (>= l_0_5_169 0.0))
(assert
 (>= l_0_5_171 0.0))
(assert
 (>= l_0_5_174 0.0))
(assert
 (>= l_0_5_178 0.0))
(assert
 (>= l_0_5_183 0.0))
(assert
 (>= l_0_5_189 0.0))
(assert
 (>= l_0_5_196 0.0))
(assert
 (>= l_0_5_197 0.0))
(assert
 (>= l_0_5_199 0.0))
(assert
 (>= l_0_5_202 0.0))
(assert
 (>= l_0_5_206 0.0))
(assert
 (>= l_0_5_211 0.0))
(assert
 (>= l_0_5_217 0.0))
(assert
 (>= l_0_5_224 0.0))
(assert
 (let ((?x13424 (* l_0_6_31 l_0_6_31)))
 (let ((?x13422 (* l_0_6_30 l_0_6_30)))
 (let ((?x13420 (* l_0_6_3 l_0_6_3)))
 (let ((?x13394 (* l_0_6_2 l_0_6_2)))
 (let ((?x13387 (- (* (* (- 2.0) l_0_6_119) l_0_6_134) (* (* 2.0 l_0_6_120) l_0_6_135))))
 (let ((?x13393 (- (- ?x13387 (* (* 2.0 l_0_6_121) l_0_6_136)) (* (* 2.0 l_0_6_122) l_0_6_137))))
 (let ((?x13401 (- (- (+ ?x13393 ?x13394) (* (* 2.0 l_0_6_203) l_0_6_218)) (* (* 2.0 l_0_6_204) l_0_6_219))))
 (let ((?x13407 (- (- ?x13401 (* (* 2.0 l_0_6_205) l_0_6_220)) (* (* 2.0 l_0_6_206) l_0_6_221))))
 (let ((?x13413 (- (- ?x13407 (* (* 2.0 l_0_6_231) l_0_6_246)) (* (* 2.0 l_0_6_232) l_0_6_247))))
 (let ((?x13419 (- (- ?x13413 (* (* 2.0 l_0_6_233) l_0_6_248)) (* (* 2.0 l_0_6_234) l_0_6_249))))
 (= (+ (- (- (+ ?x13419 ?x13420) ?x13422) ?x13424) 1.0) 0.0))))))))))))
(assert
 (let ((?x13510 (- (- _a_1_ (* (* 2.0 l_0_6_114) l_0_6_119)) (* (* 2.0 l_0_6_115) l_0_6_120))))
 (let ((?x13516 (- (- ?x13510 (* (* 2.0 l_0_6_198) l_0_6_203)) (* (* 2.0 l_0_6_199) l_0_6_204))))
 (let ((?x13522 (- (- ?x13516 (* (* 2.0 l_0_6_226) l_0_6_231)) (* (* 2.0 l_0_6_227) l_0_6_232))))
 (= (+ ?x13522 1.0) 0.0)))))
(assert
 (let ((?x13424 (* l_0_6_31 l_0_6_31)))
 (let ((?x13422 (* l_0_6_30 l_0_6_30)))
 (let ((?x13420 (* l_0_6_3 l_0_6_3)))
 (let ((?x13394 (* l_0_6_2 l_0_6_2)))
 (let ((?x13566 (+ (* (* (- 2.0) l_0_6_113) l_0_6_116) (* (* 2.0 l_0_6_142) l_0_6_144))))
 (let ((?x13572 (- (+ ?x13566 (* (* 2.0 l_0_6_143) l_0_6_145)) (* (* 2.0 l_0_6_170) l_0_6_172))))
 (let ((?x13578 (- (- ?x13572 (* (* 2.0 l_0_6_171) l_0_6_173)) (* (* 2.0 l_0_6_197) l_0_6_200))))
 (let ((?x13584 (- (+ (- (+ ?x13578 ?x13394) (* (* 2.0 l_0_6_225) l_0_6_228)) ?x13420) ?x13422)))
 (= (+ (- ?x13584 ?x13424) 1.0) 0.0))))))))))
(assert
 (let ((?x13638 (* l_0_6_227 l_0_6_227)))
 (let ((?x13636 (* l_0_6_226 l_0_6_226)))
 (let ((?x13634 (* l_0_6_199 l_0_6_199)))
 (let ((?x13632 (* l_0_6_198 l_0_6_198)))
 (let ((?x13631 (- (- _a_0_ (* (* 1.0 l_0_6_114) l_0_6_114)) (* (* 1.0 l_0_6_115) l_0_6_115))))
 (= (- (- (- (- ?x13631 ?x13632) ?x13634) ?x13636) ?x13638) 0.0)))))))
(assert
 (let ((?x13424 (* l_0_6_31 l_0_6_31)))
 (let ((?x13422 (* l_0_6_30 l_0_6_30)))
 (let ((?x13420 (* l_0_6_3 l_0_6_3)))
 (let ((?x13394 (* l_0_6_2 l_0_6_2)))
 (let ((?x13664 (- (- _a_2_ (* (* 2.0 l_0_6_114) l_0_6_128)) (* (* 2.0 l_0_6_115) l_0_6_129))))
 (let ((?x13668 (- (- ?x13664 (* (* 2.0 l_0_6_198) l_0_6_212)) (* (* 2.0 l_0_6_199) l_0_6_213))))
 (let ((?x13673 (- (- (+ ?x13668 ?x13394) (* (* 2.0 l_0_6_226) l_0_6_240)) (* (* 2.0 l_0_6_227) l_0_6_241))))
 (= (- (- (+ ?x13673 ?x13420) ?x13422) ?x13424) 0.0)))))))))
(assert
 (let ((?x13424 (* l_0_6_31 l_0_6_31)))
 (let ((?x13422 (* l_0_6_30 l_0_6_30)))
 (let ((?x13420 (* l_0_6_3 l_0_6_3)))
 (let ((?x13394 (* l_0_6_2 l_0_6_2)))
 (let ((?x13724 (- (* (* (- 2.0) l_0_6_114) l_0_6_123) (* (* 2.0 l_0_6_115) l_0_6_124))))
 (let ((?x13728 (- (- ?x13724 (* (* 2.0 l_0_6_198) l_0_6_207)) (* (* 2.0 l_0_6_199) l_0_6_208))))
 (let ((?x13733 (- (- (- ?x13728 ?x13394) (* (* 2.0 l_0_6_226) l_0_6_235)) (* (* 2.0 l_0_6_227) l_0_6_236))))
 (= (- (+ (+ (- ?x13733 ?x13420) ?x13422) ?x13424) 1.0) 0.0)))))))))
(assert
 (let ((?x13791 (* l_0_6_29 l_0_6_29)))
 (let ((?x13790 (- (+ (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_141) l_0_6_151)) (* (* 2.0 l_0_6_169) l_0_6_179))))
 (= (+ ?x13790 ?x13791) 0.0))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13826 (* ?x13825 l_0_6_30)))
 (let ((?x13812 (- (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 2.0 l_0_6_113) l_0_6_123))))
 (let ((?x13816 (+ (+ ?x13812 (* (* 2.0 l_0_6_142) l_0_6_151)) (* (* 2.0 l_0_6_143) l_0_6_152))))
 (let ((?x13820 (- (- ?x13816 (* (* 2.0 l_0_6_170) l_0_6_179)) (* (* 2.0 l_0_6_171) l_0_6_180))))
 (let ((?x13824 (- (- ?x13820 (* (* 2.0 l_0_6_197) l_0_6_207)) (* (* 2.0 l_0_6_225) l_0_6_235))))
 (= (+ ?x13824 ?x13826) 0.0))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x13904 (* ?x13903 l_0_6_40)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x13901 (* ?x13900 l_0_6_39)))
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13898 (* ?x13825 l_0_6_32)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x13878 (* ?x13877 l_0_6_3)))
 (let ((?x13868 (* 2.0 l_0_6_11)))
 (let ((?x13875 (* ?x13868 l_0_6_2)))
 (let ((?x13882 (+ (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x13875) ?x13878) (* (* 2.0 l_0_6_144) l_0_6_151))))
 (let ((?x13888 (+ (+ ?x13882 (* (* 2.0 l_0_6_145) l_0_6_152)) (* (* 2.0 l_0_6_146) l_0_6_153))))
 (let ((?x13894 (- (- ?x13888 (* (* 2.0 l_0_6_172) l_0_6_179)) (* (* 2.0 l_0_6_173) l_0_6_180))))
 (let ((?x13905 (- (- (+ (- ?x13894 (* (* 2.0 l_0_6_174) l_0_6_181)) ?x13898) ?x13901) ?x13904)))
 (= ?x13905 0.0))))))))))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13987 (* ?x13825 l_0_6_35)))
 (let ((?x13965 (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) (* (* 2.0 l_0_6_147) l_0_6_151))))
 (let ((?x13971 (+ (+ ?x13965 (* (* 2.0 l_0_6_148) l_0_6_152)) (* (* 2.0 l_0_6_149) l_0_6_153))))
 (let ((?x13977 (- (+ ?x13971 (* (* 2.0 l_0_6_150) l_0_6_154)) (* (* 2.0 l_0_6_175) l_0_6_179))))
 (let ((?x13983 (- (- ?x13977 (* (* 2.0 l_0_6_176) l_0_6_180)) (* (* 2.0 l_0_6_177) l_0_6_181))))
 (= (+ (- ?x13983 (* (* 2.0 l_0_6_178) l_0_6_182)) ?x13987) 0.0))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14055 (* ?x13825 l_0_6_39)))
 (let ((?x14053 (* l_0_6_183 l_0_6_183)))
 (let ((?x14051 (* l_0_6_182 l_0_6_182)))
 (let ((?x14049 (* l_0_6_181 l_0_6_181)))
 (let ((?x14047 (* l_0_6_180 l_0_6_180)))
 (let ((?x14045 (* l_0_6_179 l_0_6_179)))
 (let ((?x14043 (* l_0_6_155 l_0_6_155)))
 (let ((?x14041 (* l_0_6_154 l_0_6_154)))
 (let ((?x14039 (* l_0_6_153 l_0_6_153)))
 (let ((?x14037 (* l_0_6_152 l_0_6_152)))
 (let ((?x14038 (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) (* l_0_6_151 l_0_6_151)) ?x14037)))
 (let ((?x14052 (- (- (- (- (+ (+ (+ ?x14038 ?x14039) ?x14041) ?x14043) ?x14045) ?x14047) ?x14049) ?x14051)))
 (= (+ (- ?x14052 ?x14053) ?x14055) 0.0)))))))))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14115 (* ?x13825 l_0_6_44)))
 (let ((?x14055 (* ?x13825 l_0_6_39)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x14082 (* ?x14080 l_0_6_16)))
 (let ((?x14081 (* ?x14080 l_0_6_11)))
 (let ((?x14089 (+ (+ (- ?x14081 ?x14082) (* (* 2.0 l_0_6_151) l_0_6_156)) (* (* 2.0 l_0_6_152) l_0_6_157))))
 (let ((?x14095 (+ (+ ?x14089 (* (* 2.0 l_0_6_153) l_0_6_158)) (* (* 2.0 l_0_6_154) l_0_6_159))))
 (let ((?x14101 (- (+ ?x14095 (* (* 2.0 l_0_6_155) l_0_6_160)) (* (* 2.0 l_0_6_179) l_0_6_184))))
 (let ((?x14107 (- (- ?x14101 (* (* 2.0 l_0_6_180) l_0_6_185)) (* (* 2.0 l_0_6_181) l_0_6_186))))
 (let ((?x14113 (- (- ?x14107 (* (* 2.0 l_0_6_182) l_0_6_187)) (* (* 2.0 l_0_6_183) l_0_6_188))))
 (= (+ (- ?x14113 ?x14055) ?x14115) 0.0)))))))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14195 (* ?x13825 l_0_6_50)))
 (let ((?x14176 (+ (* (* (- 2.0) l_0_6_1) l_0_6_22) (* (* 2.0 l_0_6_151) l_0_6_162))))
 (let ((?x14180 (+ (+ ?x14176 (* (* 2.0 l_0_6_152) l_0_6_163)) (* (* 2.0 l_0_6_153) l_0_6_164))))
 (let ((?x14184 (+ (+ ?x14180 (* (* 2.0 l_0_6_154) l_0_6_165)) (* (* 2.0 l_0_6_155) l_0_6_166))))
 (let ((?x14188 (- (- ?x14184 (* (* 2.0 l_0_6_179) l_0_6_190)) (* (* 2.0 l_0_6_180) l_0_6_191))))
 (let ((?x14192 (- (- ?x14188 (* (* 2.0 l_0_6_181) l_0_6_192)) (* (* 2.0 l_0_6_182) l_0_6_193))))
 (let ((?x14199 (+ (+ (- ?x14192 (* (* 2.0 l_0_6_183) l_0_6_194)) ?x14195) (* (* 2.0 l_0_6_58) l_0_6_67))))
 (let ((?x14205 (- (+ ?x14199 (* (* 2.0 l_0_6_59) l_0_6_68)) (* (* 2.0 l_0_6_86) l_0_6_95))))
 (= (- ?x14205 (* (* 2.0 l_0_6_87) l_0_6_96)) 0.0)))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14317 (* ?x13903 l_0_6_33)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14315 (* ?x13900 l_0_6_32)))
 (let ((?x14312 (* 2.0 l_0_6_3)))
 (let ((?x14313 (* ?x14312 l_0_6_5)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14292 (* ?x14291 l_0_6_4)))
 (let ((?x14287 (- (* (* (- 2.0) l_0_6_116) l_0_6_123) (* (* 2.0 l_0_6_117) l_0_6_124))))
 (let ((?x14296 (- (- (- ?x14287 (* (* 2.0 l_0_6_118) l_0_6_125)) ?x14292) (* (* 2.0 l_0_6_200) l_0_6_207))))
 (let ((?x14302 (- (- ?x14296 (* (* 2.0 l_0_6_201) l_0_6_208)) (* (* 2.0 l_0_6_202) l_0_6_209))))
 (let ((?x14308 (- (- ?x14302 (* (* 2.0 l_0_6_228) l_0_6_235)) (* (* 2.0 l_0_6_229) l_0_6_236))))
 (let ((?x14318 (+ (+ (- (- ?x14308 (* (* 2.0 l_0_6_230) l_0_6_237)) ?x14313) ?x14315) ?x14317)))
 (= ?x14318 0.0)))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14418 (* ?x13903 l_0_6_36)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14416 (* ?x13900 l_0_6_35)))
 (let ((?x14312 (* 2.0 l_0_6_3)))
 (let ((?x14414 (* ?x14312 l_0_6_8)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14396 (* ?x14291 l_0_6_7)))
 (let ((?x14386 (- (* (* (- 2.0) l_0_6_119) l_0_6_123) (* (* 2.0 l_0_6_120) l_0_6_124))))
 (let ((?x14395 (- (- ?x14386 (* (* 2.0 l_0_6_121) l_0_6_125)) (* (* 2.0 l_0_6_122) l_0_6_126))))
 (let ((?x14401 (- (- (- ?x14395 ?x14396) (* (* 2.0 l_0_6_203) l_0_6_207)) (* (* 2.0 l_0_6_204) l_0_6_208))))
 (let ((?x14405 (- (- ?x14401 (* (* 2.0 l_0_6_205) l_0_6_209)) (* (* 2.0 l_0_6_206) l_0_6_210))))
 (let ((?x14409 (- (- ?x14405 (* (* 2.0 l_0_6_231) l_0_6_235)) (* (* 2.0 l_0_6_232) l_0_6_236))))
 (let ((?x14413 (- (- ?x14409 (* (* 2.0 l_0_6_233) l_0_6_237)) (* (* 2.0 l_0_6_234) l_0_6_238))))
 (= (+ (+ (- ?x14413 ?x14414) ?x14416) ?x14418) 0.0))))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x13904 (* ?x13903 l_0_6_40)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x13901 (* ?x13900 l_0_6_39)))
 (let ((?x14544 (* l_0_6_239 l_0_6_239)))
 (let ((?x14542 (* l_0_6_238 l_0_6_238)))
 (let ((?x14540 (* l_0_6_237 l_0_6_237)))
 (let ((?x14538 (* l_0_6_236 l_0_6_236)))
 (let ((?x14536 (* l_0_6_235 l_0_6_235)))
 (let ((?x14534 (* l_0_6_211 l_0_6_211)))
 (let ((?x14532 (* l_0_6_210 l_0_6_210)))
 (let ((?x14530 (* l_0_6_209 l_0_6_209)))
 (let ((?x14528 (* l_0_6_208 l_0_6_208)))
 (let ((?x14526 (* l_0_6_207 l_0_6_207)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x13878 (* ?x13877 l_0_6_3)))
 (let ((?x14513 (- (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x13878) (* (* 1.0 l_0_6_123) l_0_6_123))))
 (let ((?x14519 (- (- ?x14513 (* (* 1.0 l_0_6_124) l_0_6_124)) (* (* 1.0 l_0_6_125) l_0_6_125))))
 (let ((?x14525 (- (- ?x14519 (* (* 1.0 l_0_6_126) l_0_6_126)) (* (* 1.0 l_0_6_127) l_0_6_127))))
 (let ((?x14539 (- (- (- (- (- (- (- ?x14525 ?x14526) ?x14528) ?x14530) ?x14532) ?x14534) ?x14536) ?x14538)))
 (= (+ (+ (- (- (- ?x14539 ?x14540) ?x14542) ?x14544) ?x13901) ?x13904) 0.0))))))))))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14660 (* ?x13903 l_0_6_45)))
 (let ((?x13904 (* ?x13903 l_0_6_40)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14657 (* ?x13900 l_0_6_44)))
 (let ((?x13901 (* ?x13900 l_0_6_39)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x14624 (* ?x14623 l_0_6_3)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x14621 (* ?x14620 l_0_6_2)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x13878 (* ?x13877 l_0_6_3)))
 (let ((?x13868 (* 2.0 l_0_6_11)))
 (let ((?x13875 (* ?x13868 l_0_6_2)))
 (let ((?x14610 (- (- (+ ?x13875 ?x13878) (* (* 2.0 l_0_6_123) l_0_6_128)) (* (* 2.0 l_0_6_124) l_0_6_129))))
 (let ((?x14616 (- (- ?x14610 (* (* 2.0 l_0_6_125) l_0_6_130)) (* (* 2.0 l_0_6_126) l_0_6_131))))
 (let ((?x14628 (- (- (- (- ?x14616 (* (* 2.0 l_0_6_127) l_0_6_132)) ?x14621) ?x14624) (* (* 2.0 l_0_6_207) l_0_6_212))))
 (let ((?x14634 (- (- ?x14628 (* (* 2.0 l_0_6_208) l_0_6_213)) (* (* 2.0 l_0_6_209) l_0_6_214))))
 (let ((?x14640 (- (- ?x14634 (* (* 2.0 l_0_6_210) l_0_6_215)) (* (* 2.0 l_0_6_211) l_0_6_216))))
 (let ((?x14646 (- (- ?x14640 (* (* 2.0 l_0_6_235) l_0_6_240)) (* (* 2.0 l_0_6_236) l_0_6_241))))
 (let ((?x14652 (- (- ?x14646 (* (* 2.0 l_0_6_237) l_0_6_242)) (* (* 2.0 l_0_6_238) l_0_6_243))))
 (let ((?x14659 (- (+ (- (- ?x14652 (* (* 2.0 l_0_6_239) l_0_6_244)) ?x13901) ?x14657) ?x13904)))
 (= (+ ?x14659 ?x14660) 0.0))))))))))))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14814 (* ?x13903 l_0_6_51)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14812 (* ?x13900 l_0_6_50)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x14800 (* ?x14799 l_0_6_3)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14787 (* ?x14291 l_0_6_22)))
 (let ((?x14780 (- (* (* (- 2.0) l_0_6_123) l_0_6_134) (* (* 2.0 l_0_6_124) l_0_6_135))))
 (let ((?x14784 (- (- ?x14780 (* (* 2.0 l_0_6_125) l_0_6_136)) (* (* 2.0 l_0_6_126) l_0_6_137))))
 (let ((?x14790 (- (- (- ?x14784 (* (* 2.0 l_0_6_127) l_0_6_138)) ?x14787) (* (* 2.0 l_0_6_207) l_0_6_218))))
 (let ((?x14794 (- (- ?x14790 (* (* 2.0 l_0_6_208) l_0_6_219)) (* (* 2.0 l_0_6_209) l_0_6_220))))
 (let ((?x14798 (- (- ?x14794 (* (* 2.0 l_0_6_210) l_0_6_221)) (* (* 2.0 l_0_6_211) l_0_6_222))))
 (let ((?x14805 (- (- (- ?x14798 ?x14800) (* (* 2.0 l_0_6_235) l_0_6_246)) (* (* 2.0 l_0_6_236) l_0_6_247))))
 (let ((?x14809 (- (- ?x14805 (* (* 2.0 l_0_6_237) l_0_6_248)) (* (* 2.0 l_0_6_238) l_0_6_249))))
 (= (+ (+ (- ?x14809 (* (* 2.0 l_0_6_239) l_0_6_250)) ?x14812) ?x14814) 0.0)))))))))))))))))
(assert
 (let ((?x14931 (* l_0_6_6 l_0_6_6)))
 (let ((?x14929 (* l_0_6_5 l_0_6_5)))
 (let ((?x14927 (* l_0_6_4 l_0_6_4)))
 (let ((?x14925 (* l_0_6_34 l_0_6_34)))
 (let ((?x14928 (- (+ (+ (* l_0_6_32 l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x14925) ?x14927)))
 (= (- (- ?x14928 ?x14929) ?x14931) 0.0)))))))
(assert
 (let ((?x14960 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x14957 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x14954 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x14951 (* ?x14950 l_0_6_37)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x14948 (* ?x14947 l_0_6_36)))
 (let ((?x14958 (- (- (+ (+ (* (* 2.0 l_0_6_32) l_0_6_35) ?x14948) ?x14951) ?x14954) ?x14957)))
 (= (- ?x14958 ?x14960) 0.0))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x14999 (* ?x14950 l_0_6_41)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x14997 (* ?x14947 l_0_6_40)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x14995 (* ?x14945 l_0_6_39)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x14993 (* ?x14992 l_0_6_6)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x14990 (* ?x13877 l_0_6_5)))
 (let ((?x14998 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x14990) ?x14993) ?x14995) ?x14997)))
 (= (+ ?x14998 ?x14999) 0.0)))))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x15042 (* ?x14950 l_0_6_46)))
 (let ((?x14999 (* ?x14950 l_0_6_41)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x15039 (* ?x14947 l_0_6_45)))
 (let ((?x14997 (* ?x14947 l_0_6_40)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x15036 (* ?x14945 l_0_6_44)))
 (let ((?x14995 (* ?x14945 l_0_6_39)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15033 (* ?x15032 l_0_6_6)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15030 (* ?x14623 l_0_6_5)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15022 (* ?x14620 l_0_6_4)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x14993 (* ?x14992 l_0_6_6)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x14990 (* ?x13877 l_0_6_5)))
 (let ((?x15021 (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x14990) ?x14993)))
 (let ((?x15040 (+ (- (+ (- (- (- (- ?x15021 ?x15022) ?x15030) ?x15033) ?x14995) ?x15036) ?x14997) ?x15039)))
 (= (+ (- ?x15040 ?x14999) ?x15042) 0.0)))))))))))))))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x15097 (* ?x14950 l_0_6_52)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x15095 (* ?x14947 l_0_6_51)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x15093 (* ?x14945 l_0_6_50)))
 (let ((?x15090 (* 2.0 l_0_6_24)))
 (let ((?x15091 (* ?x15090 l_0_6_6)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x15088 (* ?x14799 l_0_6_5)))
 (let ((?x15096 (+ (+ (- (- (* (* (- 2.0) l_0_6_22) l_0_6_4) ?x15088) ?x15091) ?x15093) ?x15095)))
 (= (+ ?x15096 ?x15097) 0.0)))))))))))))
(assert
 (let ((?x15137 (* l_0_6_9 l_0_6_9)))
 (let ((?x15135 (* l_0_6_8 l_0_6_8)))
 (let ((?x15133 (* l_0_6_7 l_0_6_7)))
 (let ((?x15131 (* l_0_6_38 l_0_6_38)))
 (let ((?x15129 (* l_0_6_37 l_0_6_37)))
 (let ((?x15127 (* l_0_6_36 l_0_6_36)))
 (let ((?x15130 (+ (+ (+ (* (- l_0_6_10) l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x15127) ?x15129)))
 (= (- (- (- (+ ?x15130 ?x15131) ?x15133) ?x15135) ?x15137) 0.0)))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15172 (* ?x15171 l_0_6_42)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15169 (* ?x15168 l_0_6_41)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15166 (* ?x15165 l_0_6_40)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15163 (* ?x15162 l_0_6_39)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15160 (* ?x14992 l_0_6_9)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15158 (* ?x13877 l_0_6_8)))
 (let ((?x13868 (* 2.0 l_0_6_11)))
 (let ((?x15156 (* ?x13868 l_0_6_7)))
 (let ((?x15164 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x15156) ?x15158) ?x15160) ?x15163)))
 (= (+ (+ (+ ?x15164 ?x15166) ?x15169) ?x15172) 0.0)))))))))))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15229 (* ?x15171 l_0_6_47)))
 (let ((?x15172 (* ?x15171 l_0_6_42)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15226 (* ?x15168 l_0_6_46)))
 (let ((?x15169 (* ?x15168 l_0_6_41)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15223 (* ?x15165 l_0_6_45)))
 (let ((?x15166 (* ?x15165 l_0_6_40)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15220 (* ?x15162 l_0_6_44)))
 (let ((?x15163 (* ?x15162 l_0_6_39)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15217 (* ?x15032 l_0_6_9)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15215 (* ?x14623 l_0_6_8)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15213 (* ?x14620 l_0_6_7)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15160 (* ?x14992 l_0_6_9)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15158 (* ?x13877 l_0_6_8)))
 (let ((?x13868 (* 2.0 l_0_6_11)))
 (let ((?x15156 (* ?x13868 l_0_6_7)))
 (let ((?x15196 (* 2.0 l_0_6_10)))
 (let ((?x15200 (* ?x15196 l_0_6_19)))
 (let ((?x15198 (* ?x15196 l_0_6_14)))
 (let ((?x15218 (- (- (- (+ (+ (+ (- ?x15198 ?x15200) ?x15156) ?x15158) ?x15160) ?x15213) ?x15215) ?x15217)))
 (let ((?x15228 (- (+ (- (+ (- (+ (- ?x15218 ?x15163) ?x15220) ?x15166) ?x15223) ?x15169) ?x15226) ?x15172)))
 (= (+ ?x15228 ?x15229) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15304 (* ?x15171 l_0_6_53)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15302 (* ?x15168 l_0_6_52)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15300 (* ?x15165 l_0_6_51)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15298 (* ?x15162 l_0_6_50)))
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x13904 (* ?x13903 l_0_6_40)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x13901 (* ?x13900 l_0_6_39)))
 (let ((?x15090 (* 2.0 l_0_6_24)))
 (let ((?x15294 (* ?x15090 l_0_6_9)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x15292 (* ?x14799 l_0_6_8)))
 (let ((?x15289 (* 2.0 l_0_6_22)))
 (let ((?x15290 (* ?x15289 l_0_6_7)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x13878 (* ?x13877 l_0_6_3)))
 (let ((?x13868 (* 2.0 l_0_6_11)))
 (let ((?x13875 (* ?x13868 l_0_6_2)))
 (let ((?x15293 (- (- (+ (+ (* (* (- 2.0) l_0_6_10) l_0_6_25) ?x13875) ?x13878) ?x15290) ?x15292)))
 (let ((?x15305 (+ (+ (+ (+ (- (- (- ?x15293 ?x15294) ?x13901) ?x13904) ?x15298) ?x15300) ?x15302) ?x15304)))
 (= ?x15305 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15360 (* l_0_6_43 l_0_6_43)))
 (let ((?x15358 (* l_0_6_42 l_0_6_42)))
 (let ((?x15356 (* l_0_6_41 l_0_6_41)))
 (let ((?x15354 (* l_0_6_40 l_0_6_40)))
 (let ((?x15352 (* l_0_6_39 l_0_6_39)))
 (let ((?x15350 (* l_0_6_15 l_0_6_15)))
 (let ((?x15348 (* l_0_6_14 l_0_6_14)))
 (let ((?x15346 (* l_0_6_13 l_0_6_13)))
 (let ((?x15349 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x15346) ?x15348)))
 (= (+ (+ (+ (+ (+ (- ?x15349 ?x15350) ?x15352) ?x15354) ?x15356) ?x15358) ?x15360) 0.0)))))))))))
(assert
 (let ((?x15360 (* l_0_6_43 l_0_6_43)))
 (let ((?x15417 (* 2.0 l_0_6_43)))
 (let ((?x15418 (* ?x15417 l_0_6_48)))
 (let ((?x15358 (* l_0_6_42 l_0_6_42)))
 (let ((?x15413 (* 2.0 l_0_6_42)))
 (let ((?x15414 (* ?x15413 l_0_6_47)))
 (let ((?x15356 (* l_0_6_41 l_0_6_41)))
 (let ((?x15409 (* 2.0 l_0_6_41)))
 (let ((?x15410 (* ?x15409 l_0_6_46)))
 (let ((?x15354 (* l_0_6_40 l_0_6_40)))
 (let ((?x15405 (* 2.0 l_0_6_40)))
 (let ((?x15406 (* ?x15405 l_0_6_45)))
 (let ((?x15352 (* l_0_6_39 l_0_6_39)))
 (let ((?x15401 (* 2.0 l_0_6_39)))
 (let ((?x15402 (* ?x15401 l_0_6_44)))
 (let ((?x15350 (* l_0_6_15 l_0_6_15)))
 (let ((?x15397 (* 2.0 l_0_6_15)))
 (let ((?x15398 (* ?x15397 l_0_6_20)))
 (let ((?x15348 (* l_0_6_14 l_0_6_14)))
 (let ((?x15393 (* 2.0 l_0_6_14)))
 (let ((?x15394 (* ?x15393 l_0_6_19)))
 (let ((?x15346 (* l_0_6_13 l_0_6_13)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15390 (* ?x14992 l_0_6_18)))
 (let ((?x15344 (* l_0_6_12 l_0_6_12)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15387 (* ?x13877 l_0_6_17)))
 (let ((?x15388 (- (+ (* (* (- 2.0) l_0_6_11) l_0_6_16) (* l_0_6_11 l_0_6_11)) ?x15387)))
 (let ((?x15400 (+ (- (+ (- (+ (- (+ ?x15388 ?x15344) ?x15390) ?x15346) ?x15394) ?x15348) ?x15398) ?x15350)))
 (let ((?x15415 (+ (- (+ (- (+ (- (+ ?x15400 ?x15402) ?x15352) ?x15406) ?x15354) ?x15410) ?x15356) ?x15414)))
 (= (- (+ (- ?x15415 ?x15358) ?x15418) ?x15360) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x15417 (* 2.0 l_0_6_43)))
 (let ((?x15495 (* ?x15417 l_0_6_54)))
 (let ((?x15413 (* 2.0 l_0_6_42)))
 (let ((?x15493 (* ?x15413 l_0_6_53)))
 (let ((?x15409 (* 2.0 l_0_6_41)))
 (let ((?x15491 (* ?x15409 l_0_6_52)))
 (let ((?x15405 (* 2.0 l_0_6_40)))
 (let ((?x15489 (* ?x15405 l_0_6_51)))
 (let ((?x15401 (* 2.0 l_0_6_39)))
 (let ((?x15487 (* ?x15401 l_0_6_50)))
 (let ((?x15397 (* 2.0 l_0_6_15)))
 (let ((?x15485 (* ?x15397 l_0_6_26)))
 (let ((?x15393 (* 2.0 l_0_6_14)))
 (let ((?x15483 (* ?x15393 l_0_6_25)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15481 (* ?x14992 l_0_6_24)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15479 (* ?x13877 l_0_6_23)))
 (let ((?x15486 (- (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_22) ?x15479) ?x15481) ?x15483) ?x15485)))
 (= (+ (+ (+ (+ (+ ?x15486 ?x15487) ?x15489) ?x15491) ?x15493) ?x15495) 0.0)))))))))))))))))))))
(assert
 (let ((?x15569 (* l_0_6_49 l_0_6_49)))
 (let ((?x15567 (* l_0_6_48 l_0_6_48)))
 (let ((?x15565 (* l_0_6_47 l_0_6_47)))
 (let ((?x15563 (* l_0_6_46 l_0_6_46)))
 (let ((?x15561 (* l_0_6_45 l_0_6_45)))
 (let ((?x15559 (* l_0_6_44 l_0_6_44)))
 (let ((?x15417 (* 2.0 l_0_6_43)))
 (let ((?x15418 (* ?x15417 l_0_6_48)))
 (let ((?x15413 (* 2.0 l_0_6_42)))
 (let ((?x15414 (* ?x15413 l_0_6_47)))
 (let ((?x15409 (* 2.0 l_0_6_41)))
 (let ((?x15410 (* ?x15409 l_0_6_46)))
 (let ((?x15405 (* 2.0 l_0_6_40)))
 (let ((?x15406 (* ?x15405 l_0_6_45)))
 (let ((?x15401 (* 2.0 l_0_6_39)))
 (let ((?x15402 (* ?x15401 l_0_6_44)))
 (let ((?x15552 (* l_0_6_21 l_0_6_21)))
 (let ((?x15550 (* l_0_6_20 l_0_6_20)))
 (let ((?x15548 (* l_0_6_19 l_0_6_19)))
 (let ((?x15546 (* l_0_6_18 l_0_6_18)))
 (let ((?x15544 (* l_0_6_17 l_0_6_17)))
 (let ((?x15534 (* l_0_6_16 l_0_6_16)))
 (let ((?x15397 (* 2.0 l_0_6_15)))
 (let ((?x15398 (* ?x15397 l_0_6_20)))
 (let ((?x15393 (* 2.0 l_0_6_14)))
 (let ((?x15394 (* ?x15393 l_0_6_19)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15390 (* ?x14992 l_0_6_18)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15387 (* ?x13877 l_0_6_17)))
 (let ((?x15533 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_16) ?x15387) ?x15390) ?x15394) ?x15398)))
 (let ((?x15554 (- (- (- (- (- (- (- ?x15533 ?x15534) ?x15544) ?x15546) ?x15548) ?x15550) ?x15552) ?x15402)))
 (let ((?x15564 (+ (+ (+ (- (- (- (- ?x15554 ?x15406) ?x15410) ?x15414) ?x15418) ?x15559) ?x15561) ?x15563)))
 (= (+ (+ (+ ?x15564 ?x15565) ?x15567) ?x15569) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15655 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x15652 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x15649 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x15646 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x15643 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x15640 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x15417 (* 2.0 l_0_6_43)))
 (let ((?x15495 (* ?x15417 l_0_6_54)))
 (let ((?x15413 (* 2.0 l_0_6_42)))
 (let ((?x15493 (* ?x15413 l_0_6_53)))
 (let ((?x15409 (* 2.0 l_0_6_41)))
 (let ((?x15491 (* ?x15409 l_0_6_52)))
 (let ((?x15405 (* 2.0 l_0_6_40)))
 (let ((?x15489 (* ?x15405 l_0_6_51)))
 (let ((?x15401 (* 2.0 l_0_6_39)))
 (let ((?x15487 (* ?x15401 l_0_6_50)))
 (let ((?x15632 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x15629 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x15626 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15623 (* ?x15032 l_0_6_24)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15621 (* ?x14623 l_0_6_23)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15619 (* ?x14620 l_0_6_22)))
 (let ((?x15397 (* 2.0 l_0_6_15)))
 (let ((?x15485 (* ?x15397 l_0_6_26)))
 (let ((?x15393 (* 2.0 l_0_6_14)))
 (let ((?x15483 (* ?x15393 l_0_6_25)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15481 (* ?x14992 l_0_6_24)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15479 (* ?x13877 l_0_6_23)))
 (let ((?x15618 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_22) ?x15479) ?x15481) ?x15483) ?x15485)))
 (let ((?x15634 (- (- (- (- (- (- (- ?x15618 ?x15619) ?x15621) ?x15623) ?x15626) ?x15629) ?x15632) ?x15487)))
 (let ((?x15647 (+ (+ (+ (- (- (- (- ?x15634 ?x15489) ?x15491) ?x15493) ?x15495) ?x15640) ?x15643) ?x15646)))
 (= (+ (+ (+ ?x15647 ?x15649) ?x15652) ?x15655) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15755 (* l_0_6_56 l_0_6_56)))
 (let ((?x15753 (* l_0_6_55 l_0_6_55)))
 (let ((?x15751 (* l_0_6_54 l_0_6_54)))
 (let ((?x15749 (* l_0_6_53 l_0_6_53)))
 (let ((?x15747 (* l_0_6_52 l_0_6_52)))
 (let ((?x15745 (* l_0_6_51 l_0_6_51)))
 (let ((?x15743 (* l_0_6_50 l_0_6_50)))
 (let ((?x15741 (* l_0_6_28 l_0_6_28)))
 (let ((?x15739 (* l_0_6_27 l_0_6_27)))
 (let ((?x15737 (* l_0_6_26 l_0_6_26)))
 (let ((?x15735 (* l_0_6_25 l_0_6_25)))
 (let ((?x15733 (* l_0_6_24 l_0_6_24)))
 (let ((?x15736 (- (- (- (* (- l_0_6_22) l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x15733) ?x15735)))
 (let ((?x15750 (+ (+ (+ (+ (- (- (- ?x15736 ?x15737) ?x15739) ?x15741) ?x15743) ?x15745) ?x15747) ?x15749)))
 (= (+ (+ (+ ?x15750 ?x15751) ?x15753) ?x15755) 0.0))))))))))))))))
(assert
 (let ((?x13791 (* l_0_6_29 l_0_6_29)))
 (let ((?x13795 (* l_0_6_1 l_0_6_1)))
 (let ((?x15779 (- ?x13795 ?x13791)))
 (let ((?x15794 (- (+ ?x15779 (* (* 2.0 l_0_6_57) l_0_6_63)) (* (* 2.0 l_0_6_85) l_0_6_91))))
 (= ?x15794 0.0))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13826 (* ?x13825 l_0_6_30)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x15811 (* ?x14080 l_0_6_2)))
 (let ((?x15815 (+ (+ ?x15811 (* (* 2.0 l_0_6_147) l_0_6_162)) (* (* 2.0 l_0_6_148) l_0_6_163))))
 (let ((?x15819 (+ (+ ?x15815 (* (* 2.0 l_0_6_149) l_0_6_164)) (* (* 2.0 l_0_6_150) l_0_6_165))))
 (let ((?x15823 (- (- ?x15819 (* (* 2.0 l_0_6_175) l_0_6_190)) (* (* 2.0 l_0_6_176) l_0_6_191))))
 (let ((?x15827 (- (- ?x15823 (* (* 2.0 l_0_6_177) l_0_6_192)) (* (* 2.0 l_0_6_178) l_0_6_193))))
 (let ((?x15832 (+ (+ (- ?x15827 ?x13826) (* (* 2.0 l_0_6_58) l_0_6_63)) (* (* 2.0 l_0_6_59) l_0_6_64))))
 (let ((?x15836 (- (- ?x15832 (* (* 2.0 l_0_6_86) l_0_6_91)) (* (* 2.0 l_0_6_87) l_0_6_92))))
 (= ?x15836 0.0))))))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15304 (* ?x15171 l_0_6_53)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15302 (* ?x15168 l_0_6_52)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15300 (* ?x15165 l_0_6_51)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15298 (* ?x15162 l_0_6_50)))
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13898 (* ?x13825 l_0_6_32)))
 (let ((?x15090 (* 2.0 l_0_6_24)))
 (let ((?x15294 (* ?x15090 l_0_6_9)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x15292 (* ?x14799 l_0_6_8)))
 (let ((?x15289 (* 2.0 l_0_6_22)))
 (let ((?x15290 (* ?x15289 l_0_6_7)))
 (let ((?x15196 (* 2.0 l_0_6_10)))
 (let ((?x15894 (* ?x15196 l_0_6_25)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x15893 (* ?x14080 l_0_6_4)))
 (let ((?x15901 (- (- (- (+ (+ (+ (+ ?x15893 ?x15894) ?x15290) ?x15292) ?x15294) ?x13898) ?x15298) ?x15300)))
 (let ((?x15909 (+ (+ (- (- ?x15901 ?x15302) ?x15304) (* (* 2.0 l_0_6_60) l_0_6_63)) (* (* 2.0 l_0_6_61) l_0_6_64))))
 (let ((?x15915 (- (+ ?x15909 (* (* 2.0 l_0_6_62) l_0_6_65)) (* (* 2.0 l_0_6_88) l_0_6_91))))
 (let ((?x15921 (- (- ?x15915 (* (* 2.0 l_0_6_89) l_0_6_92)) (* (* 2.0 l_0_6_90) l_0_6_93))))
 (= ?x15921 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15986 (* l_0_6_94 l_0_6_94)))
 (let ((?x15984 (* l_0_6_93 l_0_6_93)))
 (let ((?x15982 (* l_0_6_92 l_0_6_92)))
 (let ((?x15980 (* l_0_6_91 l_0_6_91)))
 (let ((?x15978 (* l_0_6_66 l_0_6_66)))
 (let ((?x15976 (* l_0_6_65 l_0_6_65)))
 (let ((?x15974 (* l_0_6_64 l_0_6_64)))
 (let ((?x15972 (* l_0_6_63 l_0_6_63)))
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13987 (* ?x13825 l_0_6_35)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x15970 (* ?x14080 l_0_6_7)))
 (let ((?x15971 (- ?x15970 ?x13987)))
 (let ((?x15985 (- (- (- (+ (+ (+ (+ ?x15971 ?x15972) ?x15974) ?x15976) ?x15978) ?x15980) ?x15982) ?x15984)))
 (= (- ?x15985 ?x15986) 0.0))))))))))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14055 (* ?x13825 l_0_6_39)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x14081 (* ?x14080 l_0_6_11)))
 (let ((?x16007 (- ?x14081 ?x14055)))
 (let ((?x16013 (+ (+ ?x16007 (* (* 2.0 l_0_6_63) l_0_6_67)) (* (* 2.0 l_0_6_64) l_0_6_68))))
 (let ((?x16019 (+ (+ ?x16013 (* (* 2.0 l_0_6_65) l_0_6_69)) (* (* 2.0 l_0_6_66) l_0_6_70))))
 (let ((?x16025 (- (- ?x16019 (* (* 2.0 l_0_6_91) l_0_6_95)) (* (* 2.0 l_0_6_92) l_0_6_96))))
 (let ((?x16031 (- (- ?x16025 (* (* 2.0 l_0_6_93) l_0_6_97)) (* (* 2.0 l_0_6_94) l_0_6_98))))
 (= ?x16031 0.0)))))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14115 (* ?x13825 l_0_6_44)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x14082 (* ?x14080 l_0_6_16)))
 (let ((?x16074 (- (- ?x14082 (* (* 2.0 l_0_6_100) l_0_6_91)) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x16080 (- (- ?x16074 (* (* 2.0 l_0_6_102) l_0_6_93)) (* (* 2.0 l_0_6_103) l_0_6_94))))
 (let ((?x16085 (+ (+ (- ?x16080 ?x14115) (* (* 2.0 l_0_6_63) l_0_6_72)) (* (* 2.0 l_0_6_64) l_0_6_73))))
 (let ((?x16089 (+ (+ ?x16085 (* (* 2.0 l_0_6_65) l_0_6_74)) (* (* 2.0 l_0_6_66) l_0_6_75))))
 (= ?x16089 0.0))))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14195 (* ?x13825 l_0_6_50)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x16129 (* ?x14080 l_0_6_22)))
 (let ((?x16135 (- (- ?x16129 (* (* 2.0 l_0_6_106) l_0_6_91)) (* (* 2.0 l_0_6_107) l_0_6_92))))
 (let ((?x16141 (- (- ?x16135 (* (* 2.0 l_0_6_108) l_0_6_93)) (* (* 2.0 l_0_6_109) l_0_6_94))))
 (let ((?x16146 (+ (+ (- ?x16141 ?x14195) (* (* 2.0 l_0_6_63) l_0_6_78)) (* (* 2.0 l_0_6_64) l_0_6_79))))
 (let ((?x16150 (+ (+ ?x16146 (* (* 2.0 l_0_6_65) l_0_6_80)) (* (* 2.0 l_0_6_66) l_0_6_81))))
 (= ?x16150 0.0))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14317 (* ?x13903 l_0_6_33)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14315 (* ?x13900 l_0_6_32)))
 (let ((?x14312 (* 2.0 l_0_6_3)))
 (let ((?x14313 (* ?x14312 l_0_6_5)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14292 (* ?x14291 l_0_6_4)))
 (= (- (- (+ ?x14292 ?x14313) ?x14315) ?x14317) 0.0))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14418 (* ?x13903 l_0_6_36)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14416 (* ?x13900 l_0_6_35)))
 (let ((?x14312 (* 2.0 l_0_6_3)))
 (let ((?x14414 (* ?x14312 l_0_6_8)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14396 (* ?x14291 l_0_6_7)))
 (= (- (- (+ ?x14396 ?x14414) ?x14416) ?x14418) 0.0))))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15304 (* ?x15171 l_0_6_53)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15302 (* ?x15168 l_0_6_52)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15300 (* ?x15165 l_0_6_51)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15298 (* ?x15162 l_0_6_50)))
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14660 (* ?x13903 l_0_6_45)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14657 (* ?x13900 l_0_6_44)))
 (let ((?x15090 (* 2.0 l_0_6_24)))
 (let ((?x15294 (* ?x15090 l_0_6_9)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x15292 (* ?x14799 l_0_6_8)))
 (let ((?x15289 (* 2.0 l_0_6_22)))
 (let ((?x15290 (* ?x15289 l_0_6_7)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x14624 (* ?x14623 l_0_6_3)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x14621 (* ?x14620 l_0_6_2)))
 (let ((?x15196 (* 2.0 l_0_6_10)))
 (let ((?x15894 (* ?x15196 l_0_6_25)))
 (let ((?x16223 (- (- (+ (+ (+ (+ (+ ?x15894 ?x14621) ?x14624) ?x15290) ?x15292) ?x15294) ?x14657) ?x14660)))
 (= (- (- (- (- ?x16223 ?x15298) ?x15300) ?x15302) ?x15304) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14814 (* ?x13903 l_0_6_51)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14812 (* ?x13900 l_0_6_50)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x14800 (* ?x14799 l_0_6_3)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14787 (* ?x14291 l_0_6_22)))
 (= (- (- (+ ?x14787 ?x14800) ?x14812) ?x14814) 0.0))))))))))
(assert
 (let ((?x14931 (* l_0_6_6 l_0_6_6)))
 (let ((?x14929 (* l_0_6_5 l_0_6_5)))
 (let ((?x14927 (* l_0_6_4 l_0_6_4)))
 (let ((?x14925 (* l_0_6_34 l_0_6_34)))
 (let ((?x16265 (+ (- (- (* (- l_0_6_32) l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x14925) ?x14927)))
 (= (+ (+ ?x16265 ?x14929) ?x14931) 0.0)))))))
(assert
 (let ((?x14960 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x14957 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x14954 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x14951 (* ?x14950 l_0_6_37)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x14948 (* ?x14947 l_0_6_36)))
 (let ((?x16281 (+ (+ (- (- (* (* (- 2.0) l_0_6_32) l_0_6_35) ?x14948) ?x14951) ?x14954) ?x14957)))
 (= (+ ?x16281 ?x14960) 0.0))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x14999 (* ?x14950 l_0_6_41)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x14997 (* ?x14947 l_0_6_40)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x14995 (* ?x14945 l_0_6_39)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x14993 (* ?x14992 l_0_6_6)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x14990 (* ?x13877 l_0_6_5)))
 (let ((?x15021 (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x14990) ?x14993)))
 (= (- (- (- ?x15021 ?x14995) ?x14997) ?x14999) 0.0)))))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x15042 (* ?x14950 l_0_6_46)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x15039 (* ?x14947 l_0_6_45)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x15036 (* ?x14945 l_0_6_44)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15033 (* ?x15032 l_0_6_6)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15030 (* ?x14623 l_0_6_5)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15022 (* ?x14620 l_0_6_4)))
 (= (- (- (- (+ (+ ?x15022 ?x15030) ?x15033) ?x15036) ?x15039) ?x15042) 0.0))))))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x15097 (* ?x14950 l_0_6_52)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x15095 (* ?x14947 l_0_6_51)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x15093 (* ?x14945 l_0_6_50)))
 (let ((?x15090 (* 2.0 l_0_6_24)))
 (let ((?x15091 (* ?x15090 l_0_6_6)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x15088 (* ?x14799 l_0_6_5)))
 (let ((?x16326 (- (- (+ (+ (* (* 2.0 l_0_6_22) l_0_6_4) ?x15088) ?x15091) ?x15093) ?x15095)))
 (let ((?x16327 (- ?x16326 ?x15097)))
 (= ?x16327 0.0))))))))))))))
(assert
 (let ((?x15137 (* l_0_6_9 l_0_6_9)))
 (let ((?x15135 (* l_0_6_8 l_0_6_8)))
 (let ((?x15133 (* l_0_6_7 l_0_6_7)))
 (let ((?x15131 (* l_0_6_38 l_0_6_38)))
 (let ((?x15129 (* l_0_6_37 l_0_6_37)))
 (let ((?x15127 (* l_0_6_36 l_0_6_36)))
 (let ((?x16343 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x15127) ?x15129)))
 (= (+ (+ (+ (- ?x16343 ?x15131) ?x15133) ?x15135) ?x15137) 0.0)))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15172 (* ?x15171 l_0_6_42)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15169 (* ?x15168 l_0_6_41)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15166 (* ?x15165 l_0_6_40)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15163 (* ?x15162 l_0_6_39)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15160 (* ?x14992 l_0_6_9)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15158 (* ?x13877 l_0_6_8)))
 (let ((?x13868 (* 2.0 l_0_6_11)))
 (let ((?x15156 (* ?x13868 l_0_6_7)))
 (let ((?x15196 (* 2.0 l_0_6_10)))
 (let ((?x15198 (* ?x15196 l_0_6_14)))
 (let ((?x16367 (- (- (- (- (+ (+ (+ ?x15198 ?x15156) ?x15158) ?x15160) ?x15163) ?x15166) ?x15169) ?x15172)))
 (= ?x16367 0.0)))))))))))))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15229 (* ?x15171 l_0_6_47)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15226 (* ?x15168 l_0_6_46)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15223 (* ?x15165 l_0_6_45)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15220 (* ?x15162 l_0_6_44)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15217 (* ?x15032 l_0_6_9)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15215 (* ?x14623 l_0_6_8)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15213 (* ?x14620 l_0_6_7)))
 (let ((?x15196 (* 2.0 l_0_6_10)))
 (let ((?x15200 (* ?x15196 l_0_6_19)))
 (let ((?x16383 (- (- (- (- (+ (+ (+ ?x15200 ?x15213) ?x15215) ?x15217) ?x15220) ?x15223) ?x15226) ?x15229)))
 (= ?x16383 0.0)))))))))))))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15304 (* ?x15171 l_0_6_53)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15302 (* ?x15168 l_0_6_52)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15300 (* ?x15165 l_0_6_51)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15298 (* ?x15162 l_0_6_50)))
 (let ((?x15090 (* 2.0 l_0_6_24)))
 (let ((?x15294 (* ?x15090 l_0_6_9)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x15292 (* ?x14799 l_0_6_8)))
 (let ((?x15289 (* 2.0 l_0_6_22)))
 (let ((?x15290 (* ?x15289 l_0_6_7)))
 (let ((?x15196 (* 2.0 l_0_6_10)))
 (let ((?x15894 (* ?x15196 l_0_6_25)))
 (let ((?x16409 (- (- (- (- (+ (+ (+ ?x15894 ?x15290) ?x15292) ?x15294) ?x15298) ?x15300) ?x15302) ?x15304)))
 (= ?x16409 0.0)))))))))))))))))))
(assert
 (let ((?x15360 (* l_0_6_43 l_0_6_43)))
 (let ((?x15358 (* l_0_6_42 l_0_6_42)))
 (let ((?x15356 (* l_0_6_41 l_0_6_41)))
 (let ((?x15354 (* l_0_6_40 l_0_6_40)))
 (let ((?x15352 (* l_0_6_39 l_0_6_39)))
 (let ((?x15350 (* l_0_6_15 l_0_6_15)))
 (let ((?x15348 (* l_0_6_14 l_0_6_14)))
 (let ((?x15346 (* l_0_6_13 l_0_6_13)))
 (let ((?x16423 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x15346) ?x15348)))
 (= (- (- (- (- (- (+ ?x16423 ?x15350) ?x15352) ?x15354) ?x15356) ?x15358) ?x15360) 0.0)))))))))))
(assert
 (let ((?x15417 (* 2.0 l_0_6_43)))
 (let ((?x15418 (* ?x15417 l_0_6_48)))
 (let ((?x15413 (* 2.0 l_0_6_42)))
 (let ((?x15414 (* ?x15413 l_0_6_47)))
 (let ((?x15409 (* 2.0 l_0_6_41)))
 (let ((?x15410 (* ?x15409 l_0_6_46)))
 (let ((?x15405 (* 2.0 l_0_6_40)))
 (let ((?x15406 (* ?x15405 l_0_6_45)))
 (let ((?x15401 (* 2.0 l_0_6_39)))
 (let ((?x15402 (* ?x15401 l_0_6_44)))
 (let ((?x15397 (* 2.0 l_0_6_15)))
 (let ((?x15398 (* ?x15397 l_0_6_20)))
 (let ((?x15393 (* 2.0 l_0_6_14)))
 (let ((?x15394 (* ?x15393 l_0_6_19)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15390 (* ?x14992 l_0_6_18)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15387 (* ?x13877 l_0_6_17)))
 (let ((?x15533 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_16) ?x15387) ?x15390) ?x15394) ?x15398)))
 (= (- (- (- (- (- ?x15533 ?x15402) ?x15406) ?x15410) ?x15414) ?x15418) 0.0)))))))))))))))))))))
(assert
 (let ((?x15417 (* 2.0 l_0_6_43)))
 (let ((?x15495 (* ?x15417 l_0_6_54)))
 (let ((?x15413 (* 2.0 l_0_6_42)))
 (let ((?x15493 (* ?x15413 l_0_6_53)))
 (let ((?x15409 (* 2.0 l_0_6_41)))
 (let ((?x15491 (* ?x15409 l_0_6_52)))
 (let ((?x15405 (* 2.0 l_0_6_40)))
 (let ((?x15489 (* ?x15405 l_0_6_51)))
 (let ((?x15401 (* 2.0 l_0_6_39)))
 (let ((?x15487 (* ?x15401 l_0_6_50)))
 (let ((?x15397 (* 2.0 l_0_6_15)))
 (let ((?x15485 (* ?x15397 l_0_6_26)))
 (let ((?x15393 (* 2.0 l_0_6_14)))
 (let ((?x15483 (* ?x15393 l_0_6_25)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15481 (* ?x14992 l_0_6_24)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15479 (* ?x13877 l_0_6_23)))
 (let ((?x15618 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_22) ?x15479) ?x15481) ?x15483) ?x15485)))
 (let ((?x16462 (- (- (- (- (- ?x15618 ?x15487) ?x15489) ?x15491) ?x15493) ?x15495)))
 (= ?x16462 0.0))))))))))))))))))))))
(assert
 (let ((?x15569 (* l_0_6_49 l_0_6_49)))
 (let ((?x15567 (* l_0_6_48 l_0_6_48)))
 (let ((?x15565 (* l_0_6_47 l_0_6_47)))
 (let ((?x15563 (* l_0_6_46 l_0_6_46)))
 (let ((?x15561 (* l_0_6_45 l_0_6_45)))
 (let ((?x15559 (* l_0_6_44 l_0_6_44)))
 (let ((?x15552 (* l_0_6_21 l_0_6_21)))
 (let ((?x15550 (* l_0_6_20 l_0_6_20)))
 (let ((?x15548 (* l_0_6_19 l_0_6_19)))
 (let ((?x15546 (* l_0_6_18 l_0_6_18)))
 (let ((?x16475 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x15546) ?x15548)))
 (let ((?x16482 (- (- (- (- (- (+ (+ ?x16475 ?x15550) ?x15552) ?x15559) ?x15561) ?x15563) ?x15565) ?x15567)))
 (= (- ?x16482 ?x15569) 0.0))))))))))))))
(assert
 (let ((?x15655 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x15652 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x15649 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x15646 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x15643 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x15640 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x15632 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x15629 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x15626 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15623 (* ?x15032 l_0_6_24)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15621 (* ?x14623 l_0_6_23)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15619 (* ?x14620 l_0_6_22)))
 (let ((?x16511 (- (- (+ (+ (+ (+ (+ ?x15619 ?x15621) ?x15623) ?x15626) ?x15629) ?x15632) ?x15640) ?x15643)))
 (= (- (- (- (- ?x16511 ?x15646) ?x15649) ?x15652) ?x15655) 0.0))))))))))))))))))
(assert
 (let ((?x15755 (* l_0_6_56 l_0_6_56)))
 (let ((?x15753 (* l_0_6_55 l_0_6_55)))
 (let ((?x15751 (* l_0_6_54 l_0_6_54)))
 (let ((?x15749 (* l_0_6_53 l_0_6_53)))
 (let ((?x15747 (* l_0_6_52 l_0_6_52)))
 (let ((?x15745 (* l_0_6_51 l_0_6_51)))
 (let ((?x15743 (* l_0_6_50 l_0_6_50)))
 (let ((?x15741 (* l_0_6_28 l_0_6_28)))
 (let ((?x15739 (* l_0_6_27 l_0_6_27)))
 (let ((?x15737 (* l_0_6_26 l_0_6_26)))
 (let ((?x15735 (* l_0_6_25 l_0_6_25)))
 (let ((?x15733 (* l_0_6_24 l_0_6_24)))
 (let ((?x16545 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x15733) ?x15735)))
 (let ((?x16552 (- (- (- (- (+ (+ (+ ?x16545 ?x15737) ?x15739) ?x15741) ?x15743) ?x15745) ?x15747) ?x15749)))
 (= (- (- (- ?x16552 ?x15751) ?x15753) ?x15755) 0.0))))))))))))))))
(assert
 (let ((?x13791 (* l_0_6_29 l_0_6_29)))
 (let ((?x13795 (* l_0_6_1 l_0_6_1)))
 (let ((?x15779 (- ?x13795 ?x13791)))
 (= ?x15779 0.0)))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13826 (* ?x13825 l_0_6_30)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x15811 (* ?x14080 l_0_6_2)))
 (let ((?x16577 (- (+ ?x15811 (* (* 2.0 l_0_6_141) l_0_6_144)) (* (* 2.0 l_0_6_169) l_0_6_172))))
 (= (- ?x16577 ?x13826) 0.0)))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13898 (* ?x13825 l_0_6_32)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x15893 (* ?x14080 l_0_6_4)))
 (= (- ?x15893 ?x13898) 0.0))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13987 (* ?x13825 l_0_6_35)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x15970 (* ?x14080 l_0_6_7)))
 (let ((?x15971 (- ?x15970 ?x13987)))
 (= ?x15971 0.0)))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14055 (* ?x13825 l_0_6_39)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x14081 (* ?x14080 l_0_6_11)))
 (let ((?x16007 (- ?x14081 ?x14055)))
 (= ?x16007 0.0)))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14115 (* ?x13825 l_0_6_44)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x14082 (* ?x14080 l_0_6_16)))
 (= (- ?x14082 ?x14115) 0.0))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14195 (* ?x13825 l_0_6_50)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x16129 (* ?x14080 l_0_6_22)))
 (let ((?x16610 (- (+ (- ?x16129 ?x14195) (* (* 2.0 l_0_6_57) l_0_6_60)) (* (* 2.0 l_0_6_85) l_0_6_88))))
 (= ?x16610 0.0)))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14317 (* ?x13903 l_0_6_33)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14315 (* ?x13900 l_0_6_32)))
 (let ((?x14312 (* 2.0 l_0_6_3)))
 (let ((?x14313 (* ?x14312 l_0_6_5)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14292 (* ?x14291 l_0_6_4)))
 (let ((?x16633 (* l_0_6_174 l_0_6_174)))
 (let ((?x16631 (* l_0_6_173 l_0_6_173)))
 (let ((?x16629 (* l_0_6_172 l_0_6_172)))
 (let ((?x16627 (* l_0_6_146 l_0_6_146)))
 (let ((?x16630 (- (+ (+ (* l_0_6_144 l_0_6_144) (* l_0_6_145 l_0_6_145)) ?x16627) ?x16629)))
 (= (- (- (+ (+ (- (- ?x16630 ?x16631) ?x16633) ?x14292) ?x14313) ?x14315) ?x14317) 0.0)))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14418 (* ?x13903 l_0_6_36)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14416 (* ?x13900 l_0_6_35)))
 (let ((?x14312 (* 2.0 l_0_6_3)))
 (let ((?x14414 (* ?x14312 l_0_6_8)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14396 (* ?x14291 l_0_6_7)))
 (let ((?x16658 (+ (* (* 2.0 l_0_6_144) l_0_6_147) (* (* 2.0 l_0_6_145) l_0_6_148))))
 (let ((?x16662 (- (+ ?x16658 (* (* 2.0 l_0_6_146) l_0_6_149)) (* (* 2.0 l_0_6_172) l_0_6_175))))
 (let ((?x16666 (- (- ?x16662 (* (* 2.0 l_0_6_173) l_0_6_176)) (* (* 2.0 l_0_6_174) l_0_6_177))))
 (= (- (- (+ (+ ?x16666 ?x14396) ?x14414) ?x14416) ?x14418) 0.0)))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14660 (* ?x13903 l_0_6_45)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14657 (* ?x13900 l_0_6_44)))
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13898 (* ?x13825 l_0_6_32)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x14624 (* ?x14623 l_0_6_3)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x14621 (* ?x14620 l_0_6_2)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x15893 (* ?x14080 l_0_6_4)))
 (let ((?x16706 (+ (+ ?x15893 (* (* 2.0 l_0_6_144) l_0_6_156)) (* (* 2.0 l_0_6_145) l_0_6_157))))
 (let ((?x16712 (- (+ (+ (+ ?x16706 (* (* 2.0 l_0_6_146) l_0_6_158)) ?x14621) ?x14624) (* (* 2.0 l_0_6_172) l_0_6_184))))
 (let ((?x16716 (- (- ?x16712 (* (* 2.0 l_0_6_173) l_0_6_185)) (* (* 2.0 l_0_6_174) l_0_6_186))))
 (= (- (- (- ?x16716 ?x13898) ?x14657) ?x14660) 0.0)))))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14814 (* ?x13903 l_0_6_51)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14812 (* ?x13900 l_0_6_50)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x14800 (* ?x14799 l_0_6_3)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14787 (* ?x14291 l_0_6_22)))
 (let ((?x16755 (+ (* (* 2.0 l_0_6_144) l_0_6_162) (* (* 2.0 l_0_6_145) l_0_6_163))))
 (let ((?x16759 (- (+ ?x16755 (* (* 2.0 l_0_6_146) l_0_6_164)) (* (* 2.0 l_0_6_172) l_0_6_190))))
 (let ((?x16763 (- (- ?x16759 (* (* 2.0 l_0_6_173) l_0_6_191)) (* (* 2.0 l_0_6_174) l_0_6_192))))
 (let ((?x16769 (+ (- (- (+ (+ ?x16763 ?x14787) ?x14800) ?x14812) ?x14814) (* (* 2.0 l_0_6_58) l_0_6_60))))
 (let ((?x16773 (- (+ ?x16769 (* (* 2.0 l_0_6_59) l_0_6_61)) (* (* 2.0 l_0_6_86) l_0_6_88))))
 (= (- ?x16773 (* (* 2.0 l_0_6_87) l_0_6_89)) 0.0)))))))))))))))
(assert
 (let ((?x14931 (* l_0_6_6 l_0_6_6)))
 (let ((?x14929 (* l_0_6_5 l_0_6_5)))
 (let ((?x14927 (* l_0_6_4 l_0_6_4)))
 (let ((?x14925 (* l_0_6_34 l_0_6_34)))
 (let ((?x16265 (+ (- (- (* (- l_0_6_32) l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x14925) ?x14927)))
 (= (+ (+ ?x16265 ?x14929) ?x14931) 0.0)))))))
(assert
 (let ((?x14960 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x14957 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x14954 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x14951 (* ?x14950 l_0_6_37)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x14948 (* ?x14947 l_0_6_36)))
 (let ((?x16281 (+ (+ (- (- (* (* (- 2.0) l_0_6_32) l_0_6_35) ?x14948) ?x14951) ?x14954) ?x14957)))
 (= (+ ?x16281 ?x14960) 0.0))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x14999 (* ?x14950 l_0_6_41)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x14997 (* ?x14947 l_0_6_40)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x14995 (* ?x14945 l_0_6_39)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x14993 (* ?x14992 l_0_6_6)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x14990 (* ?x13877 l_0_6_5)))
 (let ((?x15021 (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x14990) ?x14993)))
 (= (- (- (- ?x15021 ?x14995) ?x14997) ?x14999) 0.0)))))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x15042 (* ?x14950 l_0_6_46)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x15039 (* ?x14947 l_0_6_45)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x15036 (* ?x14945 l_0_6_44)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15033 (* ?x15032 l_0_6_6)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15030 (* ?x14623 l_0_6_5)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15022 (* ?x14620 l_0_6_4)))
 (= (- (- (- (+ (+ ?x15022 ?x15030) ?x15033) ?x15036) ?x15039) ?x15042) 0.0))))))))))))))
(assert
 (let ((?x16835 (* l_0_6_90 l_0_6_90)))
 (let ((?x16833 (* l_0_6_89 l_0_6_89)))
 (let ((?x16831 (* l_0_6_88 l_0_6_88)))
 (let ((?x16829 (* l_0_6_62 l_0_6_62)))
 (let ((?x16827 (* l_0_6_61 l_0_6_61)))
 (let ((?x16825 (* l_0_6_60 l_0_6_60)))
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x15097 (* ?x14950 l_0_6_52)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x15095 (* ?x14947 l_0_6_51)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x15093 (* ?x14945 l_0_6_50)))
 (let ((?x15090 (* 2.0 l_0_6_24)))
 (let ((?x15091 (* ?x15090 l_0_6_6)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x15088 (* ?x14799 l_0_6_5)))
 (let ((?x16326 (- (- (+ (+ (* (* 2.0 l_0_6_22) l_0_6_4) ?x15088) ?x15091) ?x15093) ?x15095)))
 (let ((?x16327 (- ?x16326 ?x15097)))
 (= (- (- (- (+ (+ (+ ?x16327 ?x16825) ?x16827) ?x16829) ?x16831) ?x16833) ?x16835) 0.0))))))))))))))))))))
(assert
 (let ((?x15137 (* l_0_6_9 l_0_6_9)))
 (let ((?x15135 (* l_0_6_8 l_0_6_8)))
 (let ((?x15133 (* l_0_6_7 l_0_6_7)))
 (let ((?x15131 (* l_0_6_38 l_0_6_38)))
 (let ((?x15129 (* l_0_6_37 l_0_6_37)))
 (let ((?x15127 (* l_0_6_36 l_0_6_36)))
 (let ((?x16343 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x15127) ?x15129)))
 (= (+ (+ (+ (- ?x16343 ?x15131) ?x15133) ?x15135) ?x15137) 0.0)))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15172 (* ?x15171 l_0_6_42)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15169 (* ?x15168 l_0_6_41)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15166 (* ?x15165 l_0_6_40)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15163 (* ?x15162 l_0_6_39)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15160 (* ?x14992 l_0_6_9)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15158 (* ?x13877 l_0_6_8)))
 (let ((?x13868 (* 2.0 l_0_6_11)))
 (let ((?x15156 (* ?x13868 l_0_6_7)))
 (let ((?x15196 (* 2.0 l_0_6_10)))
 (let ((?x15198 (* ?x15196 l_0_6_14)))
 (let ((?x16367 (- (- (- (- (+ (+ (+ ?x15198 ?x15156) ?x15158) ?x15160) ?x15163) ?x15166) ?x15169) ?x15172)))
 (= ?x16367 0.0)))))))))))))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15229 (* ?x15171 l_0_6_47)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15226 (* ?x15168 l_0_6_46)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15223 (* ?x15165 l_0_6_45)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15220 (* ?x15162 l_0_6_44)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15217 (* ?x15032 l_0_6_9)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15215 (* ?x14623 l_0_6_8)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15213 (* ?x14620 l_0_6_7)))
 (let ((?x15196 (* 2.0 l_0_6_10)))
 (let ((?x15200 (* ?x15196 l_0_6_19)))
 (let ((?x16383 (- (- (- (- (+ (+ (+ ?x15200 ?x15213) ?x15215) ?x15217) ?x15220) ?x15223) ?x15226) ?x15229)))
 (= ?x16383 0.0)))))))))))))))))))
(assert
 (let ((?x15360 (* l_0_6_43 l_0_6_43)))
 (let ((?x15358 (* l_0_6_42 l_0_6_42)))
 (let ((?x15356 (* l_0_6_41 l_0_6_41)))
 (let ((?x15354 (* l_0_6_40 l_0_6_40)))
 (let ((?x15352 (* l_0_6_39 l_0_6_39)))
 (let ((?x15350 (* l_0_6_15 l_0_6_15)))
 (let ((?x15348 (* l_0_6_14 l_0_6_14)))
 (let ((?x15346 (* l_0_6_13 l_0_6_13)))
 (let ((?x16423 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x15346) ?x15348)))
 (= (- (- (- (- (- (+ ?x16423 ?x15350) ?x15352) ?x15354) ?x15356) ?x15358) ?x15360) 0.0)))))))))))
(assert
 (let ((?x15417 (* 2.0 l_0_6_43)))
 (let ((?x15418 (* ?x15417 l_0_6_48)))
 (let ((?x15413 (* 2.0 l_0_6_42)))
 (let ((?x15414 (* ?x15413 l_0_6_47)))
 (let ((?x15409 (* 2.0 l_0_6_41)))
 (let ((?x15410 (* ?x15409 l_0_6_46)))
 (let ((?x15405 (* 2.0 l_0_6_40)))
 (let ((?x15406 (* ?x15405 l_0_6_45)))
 (let ((?x15401 (* 2.0 l_0_6_39)))
 (let ((?x15402 (* ?x15401 l_0_6_44)))
 (let ((?x15397 (* 2.0 l_0_6_15)))
 (let ((?x15398 (* ?x15397 l_0_6_20)))
 (let ((?x15393 (* 2.0 l_0_6_14)))
 (let ((?x15394 (* ?x15393 l_0_6_19)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15390 (* ?x14992 l_0_6_18)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15387 (* ?x13877 l_0_6_17)))
 (let ((?x15533 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_16) ?x15387) ?x15390) ?x15394) ?x15398)))
 (= (- (- (- (- (- ?x15533 ?x15402) ?x15406) ?x15410) ?x15414) ?x15418) 0.0)))))))))))))))))))))
(assert
 (let ((?x15417 (* 2.0 l_0_6_43)))
 (let ((?x15495 (* ?x15417 l_0_6_54)))
 (let ((?x15413 (* 2.0 l_0_6_42)))
 (let ((?x15493 (* ?x15413 l_0_6_53)))
 (let ((?x15409 (* 2.0 l_0_6_41)))
 (let ((?x15491 (* ?x15409 l_0_6_52)))
 (let ((?x15405 (* 2.0 l_0_6_40)))
 (let ((?x15489 (* ?x15405 l_0_6_51)))
 (let ((?x15401 (* 2.0 l_0_6_39)))
 (let ((?x15487 (* ?x15401 l_0_6_50)))
 (let ((?x15397 (* 2.0 l_0_6_15)))
 (let ((?x15485 (* ?x15397 l_0_6_26)))
 (let ((?x15393 (* 2.0 l_0_6_14)))
 (let ((?x15483 (* ?x15393 l_0_6_25)))
 (let ((?x14992 (* 2.0 l_0_6_13)))
 (let ((?x15481 (* ?x14992 l_0_6_24)))
 (let ((?x13877 (* 2.0 l_0_6_12)))
 (let ((?x15479 (* ?x13877 l_0_6_23)))
 (let ((?x15618 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_22) ?x15479) ?x15481) ?x15483) ?x15485)))
 (let ((?x16462 (- (- (- (- (- ?x15618 ?x15487) ?x15489) ?x15491) ?x15493) ?x15495)))
 (let ((?x16852 (+ (+ ?x16462 (* (* 2.0 l_0_6_60) l_0_6_67)) (* (* 2.0 l_0_6_61) l_0_6_68))))
 (let ((?x16856 (- (+ ?x16852 (* (* 2.0 l_0_6_62) l_0_6_69)) (* (* 2.0 l_0_6_88) l_0_6_95))))
 (let ((?x16860 (- (- ?x16856 (* (* 2.0 l_0_6_89) l_0_6_96)) (* (* 2.0 l_0_6_90) l_0_6_97))))
 (= ?x16860 0.0)))))))))))))))))))))))))
(assert
 (let ((?x15569 (* l_0_6_49 l_0_6_49)))
 (let ((?x15567 (* l_0_6_48 l_0_6_48)))
 (let ((?x15565 (* l_0_6_47 l_0_6_47)))
 (let ((?x15563 (* l_0_6_46 l_0_6_46)))
 (let ((?x15561 (* l_0_6_45 l_0_6_45)))
 (let ((?x15559 (* l_0_6_44 l_0_6_44)))
 (let ((?x15552 (* l_0_6_21 l_0_6_21)))
 (let ((?x15550 (* l_0_6_20 l_0_6_20)))
 (let ((?x15548 (* l_0_6_19 l_0_6_19)))
 (let ((?x15546 (* l_0_6_18 l_0_6_18)))
 (let ((?x16475 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x15546) ?x15548)))
 (let ((?x16482 (- (- (- (- (- (+ (+ ?x16475 ?x15550) ?x15552) ?x15559) ?x15561) ?x15563) ?x15565) ?x15567)))
 (= (- ?x16482 ?x15569) 0.0))))))))))))))
(assert
 (let ((?x15655 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x15652 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x15649 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x15646 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x15643 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x15640 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x15632 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x15629 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x15626 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15623 (* ?x15032 l_0_6_24)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15621 (* ?x14623 l_0_6_23)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15619 (* ?x14620 l_0_6_22)))
 (let ((?x16891 (- (* (* (- 2.0) l_0_6_100) l_0_6_88) (* (* 2.0 l_0_6_101) l_0_6_89))))
 (let ((?x16896 (+ (+ (+ (- ?x16891 (* (* 2.0 l_0_6_102) l_0_6_90)) ?x15619) ?x15621) ?x15623)))
 (let ((?x16903 (- (- (- (- (+ (+ (+ ?x16896 ?x15626) ?x15629) ?x15632) ?x15640) ?x15643) ?x15646) ?x15649)))
 (let ((?x16909 (+ (+ (- (- ?x16903 ?x15652) ?x15655) (* (* 2.0 l_0_6_60) l_0_6_72)) (* (* 2.0 l_0_6_61) l_0_6_73))))
 (= (+ ?x16909 (* (* 2.0 l_0_6_62) l_0_6_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x15755 (* l_0_6_56 l_0_6_56)))
 (let ((?x15753 (* l_0_6_55 l_0_6_55)))
 (let ((?x15751 (* l_0_6_54 l_0_6_54)))
 (let ((?x15749 (* l_0_6_53 l_0_6_53)))
 (let ((?x15747 (* l_0_6_52 l_0_6_52)))
 (let ((?x15745 (* l_0_6_51 l_0_6_51)))
 (let ((?x15743 (* l_0_6_50 l_0_6_50)))
 (let ((?x15741 (* l_0_6_28 l_0_6_28)))
 (let ((?x15739 (* l_0_6_27 l_0_6_27)))
 (let ((?x15737 (* l_0_6_26 l_0_6_26)))
 (let ((?x15735 (* l_0_6_25 l_0_6_25)))
 (let ((?x15733 (* l_0_6_24 l_0_6_24)))
 (let ((?x15731 (* l_0_6_23 l_0_6_23)))
 (let ((?x15759 (* l_0_6_22 l_0_6_22)))
 (let ((?x16951 (- (* (* (- 2.0) l_0_6_106) l_0_6_88) (* (* 2.0 l_0_6_107) l_0_6_89))))
 (let ((?x16956 (+ (+ (+ (- ?x16951 (* (* 2.0 l_0_6_108) l_0_6_90)) ?x15759) ?x15731) ?x15733)))
 (let ((?x16963 (- (- (- (+ (+ (+ (+ ?x16956 ?x15735) ?x15737) ?x15739) ?x15741) ?x15743) ?x15745) ?x15747)))
 (let ((?x16969 (+ (- (- (- (- ?x16963 ?x15749) ?x15751) ?x15753) ?x15755) (* (* 2.0 l_0_6_60) l_0_6_78))))
 (let ((?x16973 (+ (+ ?x16969 (* (* 2.0 l_0_6_61) l_0_6_79)) (* (* 2.0 l_0_6_62) l_0_6_80))))
 (= ?x16973 0.0)))))))))))))))))))))
(assert
 (let ((?x13791 (* l_0_6_29 l_0_6_29)))
 (let ((?x17015 (- (+ (* l_0_6_1 l_0_6_1) (* (* 2.0 l_0_6_141) l_0_6_156)) (* (* 2.0 l_0_6_169) l_0_6_184))))
 (= (- ?x17015 ?x13791) 0.0))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13826 (* ?x13825 l_0_6_30)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x15811 (* ?x14080 l_0_6_2)))
 (let ((?x17035 (+ (- ?x15811 (* (* 2.0 l_0_6_113) l_0_6_128)) (* (* 2.0 l_0_6_142) l_0_6_156))))
 (let ((?x17039 (- (+ ?x17035 (* (* 2.0 l_0_6_143) l_0_6_157)) (* (* 2.0 l_0_6_170) l_0_6_184))))
 (let ((?x17043 (- (- ?x17039 (* (* 2.0 l_0_6_171) l_0_6_185)) (* (* 2.0 l_0_6_197) l_0_6_212))))
 (= (- (- ?x17043 (* (* 2.0 l_0_6_225) l_0_6_240)) ?x13826) 0.0)))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x13987 (* ?x13825 l_0_6_35)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x15970 (* ?x14080 l_0_6_7)))
 (let ((?x17089 (+ (+ ?x15970 (* (* 2.0 l_0_6_147) l_0_6_156)) (* (* 2.0 l_0_6_148) l_0_6_157))))
 (let ((?x17093 (+ (+ ?x17089 (* (* 2.0 l_0_6_149) l_0_6_158)) (* (* 2.0 l_0_6_150) l_0_6_159))))
 (let ((?x17097 (- (- ?x17093 (* (* 2.0 l_0_6_175) l_0_6_184)) (* (* 2.0 l_0_6_176) l_0_6_185))))
 (let ((?x17101 (- (- ?x17097 (* (* 2.0 l_0_6_177) l_0_6_186)) (* (* 2.0 l_0_6_178) l_0_6_187))))
 (= (- ?x17101 ?x13987) 0.0))))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14115 (* ?x13825 l_0_6_44)))
 (let ((?x17162 (* l_0_6_189 l_0_6_189)))
 (let ((?x17160 (* l_0_6_188 l_0_6_188)))
 (let ((?x17158 (* l_0_6_187 l_0_6_187)))
 (let ((?x17156 (* l_0_6_186 l_0_6_186)))
 (let ((?x17154 (* l_0_6_185 l_0_6_185)))
 (let ((?x17152 (* l_0_6_184 l_0_6_184)))
 (let ((?x17150 (* l_0_6_161 l_0_6_161)))
 (let ((?x17148 (* l_0_6_160 l_0_6_160)))
 (let ((?x17146 (* l_0_6_159 l_0_6_159)))
 (let ((?x17144 (* l_0_6_158 l_0_6_158)))
 (let ((?x17142 (* l_0_6_157 l_0_6_157)))
 (let ((?x17143 (+ (+ (* (* 2.0 l_0_6_1) l_0_6_16) (* l_0_6_156 l_0_6_156)) ?x17142)))
 (let ((?x17157 (- (- (- (+ (+ (+ (+ ?x17143 ?x17144) ?x17146) ?x17148) ?x17150) ?x17152) ?x17154) ?x17156)))
 (= (- (- (- (- ?x17157 ?x17158) ?x17160) ?x17162) ?x14115) 0.0)))))))))))))))))
(assert
 (let ((?x13825 (* 2.0 l_0_6_29)))
 (let ((?x14195 (* ?x13825 l_0_6_50)))
 (let ((?x14080 (* 2.0 l_0_6_1)))
 (let ((?x16129 (* ?x14080 l_0_6_22)))
 (let ((?x17191 (- (- ?x16129 (* (* 2.0 l_0_6_100) l_0_6_86)) (* (* 2.0 l_0_6_101) l_0_6_87))))
 (let ((?x17197 (+ (+ ?x17191 (* (* 2.0 l_0_6_156) l_0_6_162)) (* (* 2.0 l_0_6_157) l_0_6_163))))
 (let ((?x17203 (+ (+ ?x17197 (* (* 2.0 l_0_6_158) l_0_6_164)) (* (* 2.0 l_0_6_159) l_0_6_165))))
 (let ((?x17209 (+ (+ ?x17203 (* (* 2.0 l_0_6_160) l_0_6_166)) (* (* 2.0 l_0_6_161) l_0_6_167))))
 (let ((?x17215 (- (- ?x17209 (* (* 2.0 l_0_6_184) l_0_6_190)) (* (* 2.0 l_0_6_185) l_0_6_191))))
 (let ((?x17221 (- (- ?x17215 (* (* 2.0 l_0_6_186) l_0_6_192)) (* (* 2.0 l_0_6_187) l_0_6_193))))
 (let ((?x17227 (- (- ?x17221 (* (* 2.0 l_0_6_188) l_0_6_194)) (* (* 2.0 l_0_6_189) l_0_6_195))))
 (let ((?x17232 (+ (+ (- ?x17227 ?x14195) (* (* 2.0 l_0_6_58) l_0_6_72)) (* (* 2.0 l_0_6_59) l_0_6_73))))
 (= ?x17232 0.0))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14317 (* ?x13903 l_0_6_33)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14315 (* ?x13900 l_0_6_32)))
 (let ((?x14312 (* 2.0 l_0_6_3)))
 (let ((?x14313 (* ?x14312 l_0_6_5)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14292 (* ?x14291 l_0_6_4)))
 (let ((?x17305 (- (* (* (- 2.0) l_0_6_116) l_0_6_128) (* (* 2.0 l_0_6_117) l_0_6_129))))
 (let ((?x17310 (- (+ (- ?x17305 (* (* 2.0 l_0_6_118) l_0_6_130)) ?x14292) (* (* 2.0 l_0_6_200) l_0_6_212))))
 (let ((?x17314 (- (- ?x17310 (* (* 2.0 l_0_6_201) l_0_6_213)) (* (* 2.0 l_0_6_202) l_0_6_214))))
 (let ((?x17318 (- (- ?x17314 (* (* 2.0 l_0_6_228) l_0_6_240)) (* (* 2.0 l_0_6_229) l_0_6_241))))
 (let ((?x17323 (- (- (+ (- ?x17318 (* (* 2.0 l_0_6_230) l_0_6_242)) ?x14313) ?x14315) ?x14317)))
 (= ?x17323 0.0)))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14418 (* ?x13903 l_0_6_36)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14416 (* ?x13900 l_0_6_35)))
 (let ((?x14312 (* 2.0 l_0_6_3)))
 (let ((?x14414 (* ?x14312 l_0_6_8)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14396 (* ?x14291 l_0_6_7)))
 (let ((?x17384 (- (* (* (- 2.0) l_0_6_119) l_0_6_128) (* (* 2.0 l_0_6_120) l_0_6_129))))
 (let ((?x17388 (- (- ?x17384 (* (* 2.0 l_0_6_121) l_0_6_130)) (* (* 2.0 l_0_6_122) l_0_6_131))))
 (let ((?x17393 (- (- (+ ?x17388 ?x14396) (* (* 2.0 l_0_6_203) l_0_6_212)) (* (* 2.0 l_0_6_204) l_0_6_213))))
 (let ((?x17397 (- (- ?x17393 (* (* 2.0 l_0_6_205) l_0_6_214)) (* (* 2.0 l_0_6_206) l_0_6_215))))
 (let ((?x17401 (- (- ?x17397 (* (* 2.0 l_0_6_231) l_0_6_240)) (* (* 2.0 l_0_6_232) l_0_6_241))))
 (let ((?x17405 (- (- ?x17401 (* (* 2.0 l_0_6_233) l_0_6_242)) (* (* 2.0 l_0_6_234) l_0_6_243))))
 (= (- (- (+ ?x17405 ?x14414) ?x14416) ?x14418) 0.0))))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14660 (* ?x13903 l_0_6_45)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14657 (* ?x13900 l_0_6_44)))
 (let ((?x17526 (* l_0_6_245 l_0_6_245)))
 (let ((?x17524 (* l_0_6_244 l_0_6_244)))
 (let ((?x17522 (* l_0_6_243 l_0_6_243)))
 (let ((?x17520 (* l_0_6_242 l_0_6_242)))
 (let ((?x17518 (* l_0_6_241 l_0_6_241)))
 (let ((?x17516 (* l_0_6_240 l_0_6_240)))
 (let ((?x17514 (* l_0_6_217 l_0_6_217)))
 (let ((?x17512 (* l_0_6_216 l_0_6_216)))
 (let ((?x17510 (* l_0_6_215 l_0_6_215)))
 (let ((?x17508 (* l_0_6_214 l_0_6_214)))
 (let ((?x17506 (* l_0_6_213 l_0_6_213)))
 (let ((?x17504 (* l_0_6_212 l_0_6_212)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x14624 (* ?x14623 l_0_6_3)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x14621 (* ?x14620 l_0_6_2)))
 (let ((?x17489 (- (* (* (- 1.0) l_0_6_128) l_0_6_128) (* (* 1.0 l_0_6_129) l_0_6_129))))
 (let ((?x17495 (- (- ?x17489 (* (* 1.0 l_0_6_130) l_0_6_130)) (* (* 1.0 l_0_6_131) l_0_6_131))))
 (let ((?x17501 (- (- ?x17495 (* (* 1.0 l_0_6_132) l_0_6_132)) (* (* 1.0 l_0_6_133) l_0_6_133))))
 (let ((?x17513 (- (- (- (- (- (+ (+ ?x17501 ?x14621) ?x14624) ?x17504) ?x17506) ?x17508) ?x17510) ?x17512)))
 (let ((?x17527 (- (- (- (- (- (- (- ?x17513 ?x17514) ?x17516) ?x17518) ?x17520) ?x17522) ?x17524) ?x17526)))
 (= (- (- ?x17527 ?x14657) ?x14660) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x13903 (* 2.0 l_0_6_31)))
 (let ((?x14814 (* ?x13903 l_0_6_51)))
 (let ((?x13900 (* 2.0 l_0_6_30)))
 (let ((?x14812 (* ?x13900 l_0_6_50)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x14800 (* ?x14799 l_0_6_3)))
 (let ((?x14291 (* 2.0 l_0_6_2)))
 (let ((?x14787 (* ?x14291 l_0_6_22)))
 (let ((?x17598 (- (* (* (- 2.0) l_0_6_128) l_0_6_134) (* (* 2.0 l_0_6_129) l_0_6_135))))
 (let ((?x17604 (- (- ?x17598 (* (* 2.0 l_0_6_130) l_0_6_136)) (* (* 2.0 l_0_6_131) l_0_6_137))))
 (let ((?x17610 (- (- ?x17604 (* (* 2.0 l_0_6_132) l_0_6_138)) (* (* 2.0 l_0_6_133) l_0_6_139))))
 (let ((?x17617 (- (- (+ ?x17610 ?x14787) (* (* 2.0 l_0_6_212) l_0_6_218)) (* (* 2.0 l_0_6_213) l_0_6_219))))
 (let ((?x17623 (- (- ?x17617 (* (* 2.0 l_0_6_214) l_0_6_220)) (* (* 2.0 l_0_6_215) l_0_6_221))))
 (let ((?x17629 (- (- ?x17623 (* (* 2.0 l_0_6_216) l_0_6_222)) (* (* 2.0 l_0_6_217) l_0_6_223))))
 (let ((?x17636 (- (- (+ ?x17629 ?x14800) (* (* 2.0 l_0_6_240) l_0_6_246)) (* (* 2.0 l_0_6_241) l_0_6_247))))
 (let ((?x17642 (- (- ?x17636 (* (* 2.0 l_0_6_242) l_0_6_248)) (* (* 2.0 l_0_6_243) l_0_6_249))))
 (let ((?x17648 (- (- ?x17642 (* (* 2.0 l_0_6_244) l_0_6_250)) (* (* 2.0 l_0_6_245) l_0_6_251))))
 (= (- (- ?x17648 ?x14812) ?x14814) 0.0)))))))))))))))))))
(assert
 (let ((?x14931 (* l_0_6_6 l_0_6_6)))
 (let ((?x14929 (* l_0_6_5 l_0_6_5)))
 (let ((?x14927 (* l_0_6_4 l_0_6_4)))
 (let ((?x14925 (* l_0_6_34 l_0_6_34)))
 (let ((?x16265 (+ (- (- (* (- l_0_6_32) l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x14925) ?x14927)))
 (= (+ (+ ?x16265 ?x14929) ?x14931) 0.0)))))))
(assert
 (let ((?x14960 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x14957 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x14954 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x14951 (* ?x14950 l_0_6_37)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x14948 (* ?x14947 l_0_6_36)))
 (let ((?x16281 (+ (+ (- (- (* (* (- 2.0) l_0_6_32) l_0_6_35) ?x14948) ?x14951) ?x14954) ?x14957)))
 (= (+ ?x16281 ?x14960) 0.0))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x15042 (* ?x14950 l_0_6_46)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x15039 (* ?x14947 l_0_6_45)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x15036 (* ?x14945 l_0_6_44)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15033 (* ?x15032 l_0_6_6)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15030 (* ?x14623 l_0_6_5)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15022 (* ?x14620 l_0_6_4)))
 (= (- (- (- (+ (+ ?x15022 ?x15030) ?x15033) ?x15036) ?x15039) ?x15042) 0.0))))))))))))))
(assert
 (let ((?x14950 (* 2.0 l_0_6_34)))
 (let ((?x15097 (* ?x14950 l_0_6_52)))
 (let ((?x14947 (* 2.0 l_0_6_33)))
 (let ((?x15095 (* ?x14947 l_0_6_51)))
 (let ((?x14945 (* 2.0 l_0_6_32)))
 (let ((?x15093 (* ?x14945 l_0_6_50)))
 (let ((?x15090 (* 2.0 l_0_6_24)))
 (let ((?x15091 (* ?x15090 l_0_6_6)))
 (let ((?x14799 (* 2.0 l_0_6_23)))
 (let ((?x15088 (* ?x14799 l_0_6_5)))
 (let ((?x16326 (- (- (+ (+ (* (* 2.0 l_0_6_22) l_0_6_4) ?x15088) ?x15091) ?x15093) ?x15095)))
 (let ((?x16327 (- ?x16326 ?x15097)))
 (= ?x16327 0.0))))))))))))))
(assert
 (let ((?x15137 (* l_0_6_9 l_0_6_9)))
 (let ((?x15135 (* l_0_6_8 l_0_6_8)))
 (let ((?x15133 (* l_0_6_7 l_0_6_7)))
 (let ((?x15131 (* l_0_6_38 l_0_6_38)))
 (let ((?x15129 (* l_0_6_37 l_0_6_37)))
 (let ((?x15127 (* l_0_6_36 l_0_6_36)))
 (let ((?x16343 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x15127) ?x15129)))
 (= (+ (+ (+ (- ?x16343 ?x15131) ?x15133) ?x15135) ?x15137) 0.0)))))))))
(assert
 (let ((?x15171 (* 2.0 l_0_6_38)))
 (let ((?x15229 (* ?x15171 l_0_6_47)))
 (let ((?x15168 (* 2.0 l_0_6_37)))
 (let ((?x15226 (* ?x15168 l_0_6_46)))
 (let ((?x15165 (* 2.0 l_0_6_36)))
 (let ((?x15223 (* ?x15165 l_0_6_45)))
 (let ((?x15162 (* 2.0 l_0_6_35)))
 (let ((?x15220 (* ?x15162 l_0_6_44)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15217 (* ?x15032 l_0_6_9)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15215 (* ?x14623 l_0_6_8)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15213 (* ?x14620 l_0_6_7)))
 (let ((?x15196 (* 2.0 l_0_6_10)))
 (let ((?x15200 (* ?x15196 l_0_6_19)))
 (let ((?x16383 (- (- (- (- (+ (+ (+ ?x15200 ?x15213) ?x15215) ?x15217) ?x15220) ?x15223) ?x15226) ?x15229)))
 (= ?x16383 0.0)))))))))))))))))))
(assert
 (let ((?x15569 (* l_0_6_49 l_0_6_49)))
 (let ((?x15567 (* l_0_6_48 l_0_6_48)))
 (let ((?x15565 (* l_0_6_47 l_0_6_47)))
 (let ((?x15563 (* l_0_6_46 l_0_6_46)))
 (let ((?x15561 (* l_0_6_45 l_0_6_45)))
 (let ((?x15559 (* l_0_6_44 l_0_6_44)))
 (let ((?x15552 (* l_0_6_21 l_0_6_21)))
 (let ((?x15550 (* l_0_6_20 l_0_6_20)))
 (let ((?x15548 (* l_0_6_19 l_0_6_19)))
 (let ((?x15546 (* l_0_6_18 l_0_6_18)))
 (let ((?x16475 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x15546) ?x15548)))
 (let ((?x16482 (- (- (- (- (- (+ (+ ?x16475 ?x15550) ?x15552) ?x15559) ?x15561) ?x15563) ?x15565) ?x15567)))
 (= (- ?x16482 ?x15569) 0.0))))))))))))))
(assert
 (let ((?x15655 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x15652 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x15649 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x15646 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x15643 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x15640 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x15632 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x15629 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x15626 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x15032 (* 2.0 l_0_6_18)))
 (let ((?x15623 (* ?x15032 l_0_6_24)))
 (let ((?x14623 (* 2.0 l_0_6_17)))
 (let ((?x15621 (* ?x14623 l_0_6_23)))
 (let ((?x14620 (* 2.0 l_0_6_16)))
 (let ((?x15619 (* ?x14620 l_0_6_22)))
 (let ((?x16511 (- (- (+ (+ (+ (+ (+ ?x15619 ?x15621) ?x15623) ?x15626) ?x15629) ?x15632) ?x15640) ?x15643)))
 (= (- (- (- (- ?x16511 ?x15646) ?x15649) ?x15652) ?x15655) 0.0))))))))))))))))))
(assert
 (let ((?x15755 (* l_0_6_56 l_0_6_56)))
 (let ((?x15753 (* l_0_6_55 l_0_6_55)))
 (let ((?x15751 (* l_0_6_54 l_0_6_54)))
 (let ((?x15749 (* l_0_6_53 l_0_6_53)))
 (let ((?x15747 (* l_0_6_52 l_0_6_52)))
 (let ((?x15745 (* l_0_6_51 l_0_6_51)))
 (let ((?x15743 (* l_0_6_50 l_0_6_50)))
 (let ((?x15741 (* l_0_6_28 l_0_6_28)))
 (let ((?x15739 (* l_0_6_27 l_0_6_27)))
 (let ((?x15737 (* l_0_6_26 l_0_6_26)))
 (let ((?x15735 (* l_0_6_25 l_0_6_25)))
 (let ((?x15733 (* l_0_6_24 l_0_6_24)))
 (let ((?x16545 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x15733) ?x15735)))
 (let ((?x16552 (- (- (- (- (+ (+ (+ ?x16545 ?x15737) ?x15739) ?x15741) ?x15743) ?x15745) ?x15747) ?x15749)))
 (= (- (- (- ?x16552 ?x15751) ?x15753) ?x15755) 0.0))))))))))))))))
(assert
 (= (- (* l_0_6_57 l_0_6_57) (* l_0_6_85 l_0_6_85)) 0.0))
(assert
 (let ((?x17772 (- (* (* 2.0 l_0_6_141) l_0_6_162) (* (* 2.0 l_0_6_169) l_0_6_190))))
 (let ((?x17776 (- (+ ?x17772 (* (* 2.0 l_0_6_57) l_0_6_58)) (* (* 2.0 l_0_6_85) l_0_6_86))))
 (= ?x17776 0.0))))
(assert
 (let ((?x17798 (- (* (* 2.0 l_0_6_57) l_0_6_67) (* (* 2.0 l_0_6_85) l_0_6_95))))
 (= ?x17798 0.0)))
(assert
 (let ((?x17811 (+ (* (* (- 2.0) l_0_6_100) l_0_6_85) (* (* 2.0 l_0_6_57) l_0_6_72))))
 (= ?x17811 0.0)))
(assert
 (let ((?x17817 (+ (* (* (- 2.0) l_0_6_106) l_0_6_85) (* (* 2.0 l_0_6_57) l_0_6_78))))
 (= ?x17817 0.0)))
(assert
 (let ((?x17848 (* l_0_6_87 l_0_6_87)))
 (let ((?x17846 (* l_0_6_86 l_0_6_86)))
 (let ((?x17844 (* l_0_6_59 l_0_6_59)))
 (let ((?x17842 (* l_0_6_58 l_0_6_58)))
 (let ((?x17827 (+ (* (* (- 2.0) l_0_6_113) l_0_6_134) (* (* 2.0 l_0_6_142) l_0_6_162))))
 (let ((?x17835 (- (+ ?x17827 (* (* 2.0 l_0_6_143) l_0_6_163)) (* (* 2.0 l_0_6_170) l_0_6_190))))
 (let ((?x17839 (- (- ?x17835 (* (* 2.0 l_0_6_171) l_0_6_191)) (* (* 2.0 l_0_6_197) l_0_6_218))))
 (let ((?x17847 (- (+ (+ (- ?x17839 (* (* 2.0 l_0_6_225) l_0_6_246)) ?x17842) ?x17844) ?x17846)))
 (= (- ?x17847 ?x17848) 0.0))))))))))
(assert
 (let ((?x17919 (* l_0_6_196 l_0_6_196)))
 (let ((?x17917 (* l_0_6_195 l_0_6_195)))
 (let ((?x17915 (* l_0_6_194 l_0_6_194)))
 (let ((?x17913 (* l_0_6_193 l_0_6_193)))
 (let ((?x17911 (* l_0_6_192 l_0_6_192)))
 (let ((?x17909 (* l_0_6_191 l_0_6_191)))
 (let ((?x17907 (* l_0_6_190 l_0_6_190)))
 (let ((?x17905 (* l_0_6_168 l_0_6_168)))
 (let ((?x17903 (* l_0_6_167 l_0_6_167)))
 (let ((?x17901 (* l_0_6_166 l_0_6_166)))
 (let ((?x17899 (* l_0_6_165 l_0_6_165)))
 (let ((?x17897 (* l_0_6_164 l_0_6_164)))
 (let ((?x17895 (* l_0_6_163 l_0_6_163)))
 (let ((?x17893 (* l_0_6_162 l_0_6_162)))
 (let ((?x17892 (- (* (* (- 2.0) l_0_6_106) l_0_6_86) (* (* 2.0 l_0_6_107) l_0_6_87))))
 (let ((?x17906 (+ (+ (+ (+ (+ (+ (+ ?x17892 ?x17893) ?x17895) ?x17897) ?x17899) ?x17901) ?x17903) ?x17905)))
 (let ((?x17920 (- (- (- (- (- (- (- ?x17906 ?x17907) ?x17909) ?x17911) ?x17913) ?x17915) ?x17917) ?x17919)))
 (let ((?x17924 (+ (+ ?x17920 (* (* 2.0 l_0_6_58) l_0_6_78)) (* (* 2.0 l_0_6_59) l_0_6_79))))
 (= ?x17924 0.0))))))))))))))))))))
(assert
 (let ((?x17979 (* l_0_6_99 l_0_6_99)))
 (let ((?x17977 (* l_0_6_98 l_0_6_98)))
 (let ((?x17975 (* l_0_6_97 l_0_6_97)))
 (let ((?x17973 (* l_0_6_96 l_0_6_96)))
 (let ((?x17971 (* l_0_6_95 l_0_6_95)))
 (let ((?x17969 (* l_0_6_71 l_0_6_71)))
 (let ((?x17967 (* l_0_6_70 l_0_6_70)))
 (let ((?x17965 (* l_0_6_69 l_0_6_69)))
 (let ((?x17968 (+ (+ (+ (* l_0_6_67 l_0_6_67) (* l_0_6_68 l_0_6_68)) ?x17965) ?x17967)))
 (= (- (- (- (- (- (+ ?x17968 ?x17969) ?x17971) ?x17973) ?x17975) ?x17977) ?x17979) 0.0)))))))))))
(assert
 (let ((?x18001 (- (* (* (- 2.0) l_0_6_100) l_0_6_95) (* (* 2.0 l_0_6_101) l_0_6_96))))
 (let ((?x18005 (- (- ?x18001 (* (* 2.0 l_0_6_102) l_0_6_97)) (* (* 2.0 l_0_6_103) l_0_6_98))))
 (let ((?x18011 (+ (- ?x18005 (* (* 2.0 l_0_6_104) l_0_6_99)) (* (* 2.0 l_0_6_67) l_0_6_72))))
 (let ((?x18017 (+ (+ ?x18011 (* (* 2.0 l_0_6_68) l_0_6_73)) (* (* 2.0 l_0_6_69) l_0_6_74))))
 (let ((?x18023 (+ (+ ?x18017 (* (* 2.0 l_0_6_70) l_0_6_75)) (* (* 2.0 l_0_6_71) l_0_6_76))))
 (= ?x18023 0.0)))))))
(assert
 (let ((?x18056 (- (* (* (- 2.0) l_0_6_106) l_0_6_95) (* (* 2.0 l_0_6_107) l_0_6_96))))
 (let ((?x18070 (- (- ?x18056 (* (* 2.0 l_0_6_108) l_0_6_97)) (* (* 2.0 l_0_6_109) l_0_6_98))))
 (let ((?x18075 (+ (- ?x18070 (* (* 2.0 l_0_6_110) l_0_6_99)) (* (* 2.0 l_0_6_67) l_0_6_78))))
 (let ((?x18079 (+ (+ ?x18075 (* (* 2.0 l_0_6_68) l_0_6_79)) (* (* 2.0 l_0_6_69) l_0_6_80))))
 (let ((?x18083 (+ (+ ?x18079 (* (* 2.0 l_0_6_70) l_0_6_81)) (* (* 2.0 l_0_6_71) l_0_6_82))))
 (= ?x18083 0.0)))))))
(assert
 (let ((?x18146 (* l_0_6_77 l_0_6_77)))
 (let ((?x18144 (* l_0_6_76 l_0_6_76)))
 (let ((?x18142 (* l_0_6_75 l_0_6_75)))
 (let ((?x18140 (* l_0_6_74 l_0_6_74)))
 (let ((?x18138 (* l_0_6_73 l_0_6_73)))
 (let ((?x18136 (* l_0_6_72 l_0_6_72)))
 (let ((?x18134 (* l_0_6_105 l_0_6_105)))
 (let ((?x18132 (* l_0_6_104 l_0_6_104)))
 (let ((?x18130 (* l_0_6_103 l_0_6_103)))
 (let ((?x18120 (* l_0_6_102 l_0_6_102)))
 (let ((?x18121 (- (- (* (- l_0_6_100) l_0_6_100) (* l_0_6_101 l_0_6_101)) ?x18120)))
 (let ((?x18143 (+ (+ (+ (+ (- (- (- ?x18121 ?x18130) ?x18132) ?x18134) ?x18136) ?x18138) ?x18140) ?x18142)))
 (= (+ (+ ?x18143 ?x18144) ?x18146) 0.0))))))))))))))
(assert
 (let ((?x18177 (- (* (* (- 2.0) l_0_6_100) l_0_6_106) (* (* 2.0 l_0_6_101) l_0_6_107))))
 (let ((?x18181 (- (- ?x18177 (* (* 2.0 l_0_6_102) l_0_6_108)) (* (* 2.0 l_0_6_103) l_0_6_109))))
 (let ((?x18186 (- (- ?x18181 (* (* 2.0 l_0_6_104) l_0_6_110)) (* (* 2.0 l_0_6_105) l_0_6_111))))
 (let ((?x18192 (+ (+ ?x18186 (* (* 2.0 l_0_6_72) l_0_6_78)) (* (* 2.0 l_0_6_73) l_0_6_79))))
 (let ((?x18198 (+ (+ ?x18192 (* (* 2.0 l_0_6_74) l_0_6_80)) (* (* 2.0 l_0_6_75) l_0_6_81))))
 (let ((?x18204 (+ (+ ?x18198 (* (* 2.0 l_0_6_76) l_0_6_82)) (* (* 2.0 l_0_6_77) l_0_6_83))))
 (= ?x18204 0.0))))))))
(assert
 (let ((?x18279 (* l_0_6_84 l_0_6_84)))
 (let ((?x18277 (* l_0_6_83 l_0_6_83)))
 (let ((?x18275 (* l_0_6_82 l_0_6_82)))
 (let ((?x18273 (* l_0_6_81 l_0_6_81)))
 (let ((?x18271 (* l_0_6_80 l_0_6_80)))
 (let ((?x18269 (* l_0_6_79 l_0_6_79)))
 (let ((?x18267 (* l_0_6_78 l_0_6_78)))
 (let ((?x18265 (* l_0_6_112 l_0_6_112)))
 (let ((?x18263 (* l_0_6_111 l_0_6_111)))
 (let ((?x18261 (* l_0_6_110 l_0_6_110)))
 (let ((?x18250 (* l_0_6_109 l_0_6_109)))
 (let ((?x18247 (* l_0_6_108 l_0_6_108)))
 (let ((?x18249 (- (- (* (- l_0_6_106) l_0_6_106) (* l_0_6_107 l_0_6_107)) ?x18247)))
 (let ((?x18272 (+ (+ (+ (- (- (- (- ?x18249 ?x18250) ?x18261) ?x18263) ?x18265) ?x18267) ?x18269) ?x18271)))
 (= (+ (+ (+ (+ ?x18272 ?x18273) ?x18275) ?x18277) ?x18279) 0.0))))))))))))))))
(assert
 (let ((?x18320 (* l_0_6_225 l_0_6_225)))
 (let ((?x18318 (* l_0_6_197 l_0_6_197)))
 (let ((?x18315 (+ (* (* (- 1.0) l_0_6_113) l_0_6_113) (* (* 2.0 l_0_6_141) l_0_6_142))))
 (= (- (- (- ?x18315 (* (* 2.0 l_0_6_169) l_0_6_170)) ?x18318) ?x18320) 0.0)))))
(assert
 (let ((?x18350 (* l_0_6_171 l_0_6_171)))
 (let ((?x18348 (* l_0_6_170 l_0_6_170)))
 (let ((?x18346 (* l_0_6_143 l_0_6_143)))
 (let ((?x18347 (+ (+ (* (* (- 2.0) l_0_6_113) l_0_6_114) (* l_0_6_142 l_0_6_142)) ?x18346)))
 (let ((?x18355 (- (- (- (- ?x18347 ?x18348) ?x18350) (* (* 2.0 l_0_6_197) l_0_6_198)) (* (* 2.0 l_0_6_225) l_0_6_226))))
 (= ?x18355 0.0)))))))
(assert
 (let ((?x18381 (+ (* (* (- 2.0) l_0_6_113) l_0_6_119) (* (* 2.0 l_0_6_142) l_0_6_147))))
 (let ((?x18385 (- (+ ?x18381 (* (* 2.0 l_0_6_143) l_0_6_148)) (* (* 2.0 l_0_6_170) l_0_6_175))))
 (let ((?x18389 (- (- ?x18385 (* (* 2.0 l_0_6_171) l_0_6_176)) (* (* 2.0 l_0_6_197) l_0_6_203))))
 (= (- ?x18389 (* (* 2.0 l_0_6_225) l_0_6_231)) 0.0)))))
(assert
 (let ((?x18431 (- (* (* (- 2.0) l_0_6_114) l_0_6_116) (* (* 2.0 l_0_6_115) l_0_6_117))))
 (let ((?x18435 (- (- ?x18431 (* (* 2.0 l_0_6_198) l_0_6_200)) (* (* 2.0 l_0_6_199) l_0_6_201))))
 (let ((?x18439 (- (- ?x18435 (* (* 2.0 l_0_6_226) l_0_6_228)) (* (* 2.0 l_0_6_227) l_0_6_229))))
 (= ?x18439 0.0)))))
(assert
 (let ((?x18478 (- (* (* (- 2.0) l_0_6_114) l_0_6_134) (* (* 2.0 l_0_6_115) l_0_6_135))))
 (let ((?x18482 (- (- ?x18478 (* (* 2.0 l_0_6_198) l_0_6_218)) (* (* 2.0 l_0_6_199) l_0_6_219))))
 (let ((?x18486 (- (- ?x18482 (* (* 2.0 l_0_6_226) l_0_6_246)) (* (* 2.0 l_0_6_227) l_0_6_247))))
 (= ?x18486 0.0)))))
(assert
 (let ((?x18541 (* l_0_6_230 l_0_6_230)))
 (let ((?x18539 (* l_0_6_229 l_0_6_229)))
 (let ((?x18537 (* l_0_6_228 l_0_6_228)))
 (let ((?x18535 (* l_0_6_202 l_0_6_202)))
 (let ((?x18533 (* l_0_6_201 l_0_6_201)))
 (let ((?x18531 (* l_0_6_200 l_0_6_200)))
 (let ((?x18527 (- (* (* (- 1.0) l_0_6_116) l_0_6_116) (* (* 1.0 l_0_6_117) l_0_6_117))))
 (let ((?x18536 (- (- (- (- ?x18527 (* (* 1.0 l_0_6_118) l_0_6_118)) ?x18531) ?x18533) ?x18535)))
 (= (- (- (- ?x18536 ?x18537) ?x18539) ?x18541) 0.0))))))))))
(assert
 (let ((?x18575 (- (* (* (- 2.0) l_0_6_116) l_0_6_119) (* (* 2.0 l_0_6_117) l_0_6_120))))
 (let ((?x18579 (- (- ?x18575 (* (* 2.0 l_0_6_118) l_0_6_121)) (* (* 2.0 l_0_6_200) l_0_6_203))))
 (let ((?x18583 (- (- ?x18579 (* (* 2.0 l_0_6_201) l_0_6_204)) (* (* 2.0 l_0_6_202) l_0_6_205))))
 (let ((?x18587 (- (- ?x18583 (* (* 2.0 l_0_6_228) l_0_6_231)) (* (* 2.0 l_0_6_229) l_0_6_232))))
 (= (- ?x18587 (* (* 2.0 l_0_6_230) l_0_6_233)) 0.0))))))
(assert
 (let ((?x18646 (- (* (* (- 2.0) l_0_6_116) l_0_6_134) (* (* 2.0 l_0_6_117) l_0_6_135))))
 (let ((?x18650 (- (- ?x18646 (* (* 2.0 l_0_6_118) l_0_6_136)) (* (* 2.0 l_0_6_200) l_0_6_218))))
 (let ((?x18654 (- (- ?x18650 (* (* 2.0 l_0_6_201) l_0_6_219)) (* (* 2.0 l_0_6_202) l_0_6_220))))
 (let ((?x18658 (- (- ?x18654 (* (* 2.0 l_0_6_228) l_0_6_246)) (* (* 2.0 l_0_6_229) l_0_6_247))))
 (= (- ?x18658 (* (* 2.0 l_0_6_230) l_0_6_248)) 0.0))))))
(assert
 (let ((?x18740 (* l_0_6_234 l_0_6_234)))
 (let ((?x18738 (* l_0_6_233 l_0_6_233)))
 (let ((?x18736 (* l_0_6_232 l_0_6_232)))
 (let ((?x18734 (* l_0_6_231 l_0_6_231)))
 (let ((?x18732 (* l_0_6_206 l_0_6_206)))
 (let ((?x18730 (* l_0_6_205 l_0_6_205)))
 (let ((?x18728 (* l_0_6_204 l_0_6_204)))
 (let ((?x18726 (* l_0_6_203 l_0_6_203)))
 (let ((?x18719 (- (* (* (- 1.0) l_0_6_119) l_0_6_119) (* (* 1.0 l_0_6_120) l_0_6_120))))
 (let ((?x18725 (- (- ?x18719 (* (* 1.0 l_0_6_121) l_0_6_121)) (* (* 1.0 l_0_6_122) l_0_6_122))))
 (let ((?x18739 (- (- (- (- (- (- (- ?x18725 ?x18726) ?x18728) ?x18730) ?x18732) ?x18734) ?x18736) ?x18738)))
 (= (- ?x18739 ?x18740) 0.0)))))))))))))
(assert
 (let ((?x18828 (* l_0_6_252 l_0_6_252)))
 (let ((?x18826 (* l_0_6_251 l_0_6_251)))
 (let ((?x18824 (* l_0_6_250 l_0_6_250)))
 (let ((?x18822 (* l_0_6_249 l_0_6_249)))
 (let ((?x18820 (* l_0_6_248 l_0_6_248)))
 (let ((?x18818 (* l_0_6_247 l_0_6_247)))
 (let ((?x18816 (* l_0_6_246 l_0_6_246)))
 (let ((?x18814 (* l_0_6_224 l_0_6_224)))
 (let ((?x18812 (* l_0_6_223 l_0_6_223)))
 (let ((?x18810 (* l_0_6_222 l_0_6_222)))
 (let ((?x18808 (* l_0_6_221 l_0_6_221)))
 (let ((?x18806 (* l_0_6_220 l_0_6_220)))
 (let ((?x18804 (* l_0_6_219 l_0_6_219)))
 (let ((?x18802 (* l_0_6_218 l_0_6_218)))
 (let ((?x18786 (- (* (* (- 1.0) l_0_6_134) l_0_6_134) (* (* 1.0 l_0_6_135) l_0_6_135))))
 (let ((?x18792 (- (- ?x18786 (* (* 1.0 l_0_6_136) l_0_6_136)) (* (* 1.0 l_0_6_137) l_0_6_137))))
 (let ((?x18798 (- (- ?x18792 (* (* 1.0 l_0_6_138) l_0_6_138)) (* (* 1.0 l_0_6_139) l_0_6_139))))
 (let ((?x18807 (- (- (- (- ?x18798 (* (* 1.0 l_0_6_140) l_0_6_140)) ?x18802) ?x18804) ?x18806)))
 (let ((?x18821 (- (- (- (- (- (- (- ?x18807 ?x18808) ?x18810) ?x18812) ?x18814) ?x18816) ?x18818) ?x18820)))
 (= (- (- (- (- ?x18821 ?x18822) ?x18824) ?x18826) ?x18828) 0.0)))))))))))))))))))))
(assert
 (= (- (* l_0_6_141 l_0_6_141) (* l_0_6_169 l_0_6_169)) 0.0))
(assert
 (let ((?x18909 (- (* (* 2.0 l_0_6_141) l_0_6_147) (* (* 2.0 l_0_6_169) l_0_6_175))))
 (= ?x18909 0.0)))
(assert
 (let ((?x18933 (* l_0_6_178 l_0_6_178)))
 (let ((?x18931 (* l_0_6_177 l_0_6_177)))
 (let ((?x18929 (* l_0_6_176 l_0_6_176)))
 (let ((?x18927 (* l_0_6_175 l_0_6_175)))
 (let ((?x18925 (* l_0_6_150 l_0_6_150)))
 (let ((?x18923 (* l_0_6_149 l_0_6_149)))
 (let ((?x18926 (+ (+ (+ (* l_0_6_147 l_0_6_147) (* l_0_6_148 l_0_6_148)) ?x18923) ?x18925)))
 (= (- (- (- (- ?x18926 ?x18927) ?x18929) ?x18931) ?x18933) 0.0)))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_28 0.0))
(assert
 (>= l_0_6_29 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_34 0.0))
(assert
 (>= l_0_6_38 0.0))
(assert
 (>= l_0_6_43 0.0))
(assert
 (>= l_0_6_49 0.0))
(assert
 (>= l_0_6_56 0.0))
(assert
 (>= l_0_6_57 0.0))
(assert
 (>= l_0_6_59 0.0))
(assert
 (>= l_0_6_62 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_71 0.0))
(assert
 (>= l_0_6_77 0.0))
(assert
 (>= l_0_6_84 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_87 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_94 0.0))
(assert
 (>= l_0_6_99 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_112 0.0))
(assert
 (>= l_0_6_113 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_118 0.0))
(assert
 (>= l_0_6_122 0.0))
(assert
 (>= l_0_6_127 0.0))
(assert
 (>= l_0_6_133 0.0))
(assert
 (>= l_0_6_140 0.0))
(assert
 (>= l_0_6_141 0.0))
(assert
 (>= l_0_6_143 0.0))
(assert
 (>= l_0_6_146 0.0))
(assert
 (>= l_0_6_150 0.0))
(assert
 (>= l_0_6_155 0.0))
(assert
 (>= l_0_6_161 0.0))
(assert
 (>= l_0_6_168 0.0))
(assert
 (>= l_0_6_169 0.0))
(assert
 (>= l_0_6_171 0.0))
(assert
 (>= l_0_6_174 0.0))
(assert
 (>= l_0_6_178 0.0))
(assert
 (>= l_0_6_183 0.0))
(assert
 (>= l_0_6_189 0.0))
(assert
 (>= l_0_6_196 0.0))
(assert
 (>= l_0_6_197 0.0))
(assert
 (>= l_0_6_199 0.0))
(assert
 (>= l_0_6_202 0.0))
(assert
 (>= l_0_6_206 0.0))
(assert
 (>= l_0_6_211 0.0))
(assert
 (>= l_0_6_217 0.0))
(assert
 (>= l_0_6_224 0.0))
(assert
 (>= l_0_6_225 0.0))
(assert
 (>= l_0_6_227 0.0))
(assert
 (>= l_0_6_230 0.0))
(assert
 (>= l_0_6_234 0.0))
(assert
 (>= l_0_6_239 0.0))
(assert
 (>= l_0_6_245 0.0))
(assert
 (>= l_0_6_252 0.0))
(assert
 (let ((?x19028 (* l_0_7_255 l_0_7_255)))
 (let ((?x19026 (* l_0_7_254 l_0_7_254)))
 (let ((?x19024 (* l_0_7_227 l_0_7_227)))
 (let ((?x19022 (* l_0_7_226 l_0_7_226)))
 (let ((?x19020 (* l_0_7_199 l_0_7_199)))
 (let ((?x19018 (* l_0_7_198 l_0_7_198)))
 (let ((?x19017 (- (* (* (- 1.0) l_0_7_114) l_0_7_114) (* (* 1.0 l_0_7_115) l_0_7_115))))
 (= (- (- (- (- (- (- ?x19017 ?x19018) ?x19020) ?x19022) ?x19024) ?x19026) ?x19028) 0.0)))))))))
(assert
 (let ((?x19085 (* l_0_7_87 l_0_7_87)))
 (let ((?x19083 (* l_0_7_86 l_0_7_86)))
 (let ((?x19081 (* l_0_7_59 l_0_7_59)))
 (let ((?x19079 (* l_0_7_58 l_0_7_58)))
 (let ((?x19060 (+ (* (* (- 2.0) l_0_7_113) l_0_7_134) (* (* 2.0 l_0_7_142) l_0_7_162))))
 (let ((?x19066 (- (+ ?x19060 (* (* 2.0 l_0_7_143) l_0_7_163)) (* (* 2.0 l_0_7_170) l_0_7_190))))
 (let ((?x19072 (- (- ?x19066 (* (* 2.0 l_0_7_171) l_0_7_191)) (* (* 2.0 l_0_7_197) l_0_7_218))))
 (let ((?x19078 (- (- ?x19072 (* (* 2.0 l_0_7_225) l_0_7_246)) (* (* 2.0 l_0_7_253) l_0_7_274))))
 (= (- (- (- (+ (+ ?x19078 ?x19079) ?x19081) ?x19083) ?x19085) 1.0) 0.0))))))))))
(assert
 (let ((?x19143 (* l_0_7_171 l_0_7_171)))
 (let ((?x19141 (* l_0_7_170 l_0_7_170)))
 (let ((?x19139 (* l_0_7_143 l_0_7_143)))
 (let ((?x19140 (+ (+ (* (* (- 2.0) l_0_7_113) l_0_7_114) (* l_0_7_142 l_0_7_142)) ?x19139)))
 (let ((?x19148 (- (- (- (- ?x19140 ?x19141) ?x19143) (* (* 2.0 l_0_7_197) l_0_7_198)) (* (* 2.0 l_0_7_225) l_0_7_226))))
 (= (- (- ?x19148 (* (* 2.0 l_0_7_253) l_0_7_254)) 1.0) 0.0)))))))
(assert
 (let ((?x19191 (* l_0_7_29 l_0_7_29)))
 (let ((?x19190 (- (+ (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_141) l_0_7_151)) (* (* 2.0 l_0_7_169) l_0_7_179))))
 (= (+ ?x19190 ?x19191) 0.0))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19228 (* ?x19227 l_0_7_30)))
 (let ((?x19212 (- (* (* (- 2.0) l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_113) l_0_7_123))))
 (let ((?x19216 (+ (+ ?x19212 (* (* 2.0 l_0_7_142) l_0_7_151)) (* (* 2.0 l_0_7_143) l_0_7_152))))
 (let ((?x19220 (- (- ?x19216 (* (* 2.0 l_0_7_170) l_0_7_179)) (* (* 2.0 l_0_7_171) l_0_7_180))))
 (let ((?x19224 (- (- ?x19220 (* (* 2.0 l_0_7_197) l_0_7_207)) (* (* 2.0 l_0_7_225) l_0_7_235))))
 (= (+ (- ?x19224 (* (* 2.0 l_0_7_253) l_0_7_263)) ?x19228) 0.0))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19312 (* ?x19311 l_0_7_40)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19309 (* ?x19308 l_0_7_39)))
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19306 (* ?x19227 l_0_7_32)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x19286 (* ?x19285 l_0_7_3)))
 (let ((?x19276 (* 2.0 l_0_7_11)))
 (let ((?x19283 (* ?x19276 l_0_7_2)))
 (let ((?x19290 (+ (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x19283) ?x19286) (* (* 2.0 l_0_7_144) l_0_7_151))))
 (let ((?x19296 (+ (+ ?x19290 (* (* 2.0 l_0_7_145) l_0_7_152)) (* (* 2.0 l_0_7_146) l_0_7_153))))
 (let ((?x19302 (- (- ?x19296 (* (* 2.0 l_0_7_172) l_0_7_179)) (* (* 2.0 l_0_7_173) l_0_7_180))))
 (let ((?x19313 (- (- (+ (- ?x19302 (* (* 2.0 l_0_7_174) l_0_7_181)) ?x19306) ?x19309) ?x19312)))
 (= ?x19313 0.0))))))))))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19395 (* ?x19227 l_0_7_35)))
 (let ((?x19373 (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) (* (* 2.0 l_0_7_147) l_0_7_151))))
 (let ((?x19379 (+ (+ ?x19373 (* (* 2.0 l_0_7_148) l_0_7_152)) (* (* 2.0 l_0_7_149) l_0_7_153))))
 (let ((?x19385 (- (+ ?x19379 (* (* 2.0 l_0_7_150) l_0_7_154)) (* (* 2.0 l_0_7_175) l_0_7_179))))
 (let ((?x19391 (- (- ?x19385 (* (* 2.0 l_0_7_176) l_0_7_180)) (* (* 2.0 l_0_7_177) l_0_7_181))))
 (= (+ (- ?x19391 (* (* 2.0 l_0_7_178) l_0_7_182)) ?x19395) 0.0))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19463 (* ?x19227 l_0_7_39)))
 (let ((?x19461 (* l_0_7_183 l_0_7_183)))
 (let ((?x19459 (* l_0_7_182 l_0_7_182)))
 (let ((?x19457 (* l_0_7_181 l_0_7_181)))
 (let ((?x19455 (* l_0_7_180 l_0_7_180)))
 (let ((?x19453 (* l_0_7_179 l_0_7_179)))
 (let ((?x19451 (* l_0_7_155 l_0_7_155)))
 (let ((?x19449 (* l_0_7_154 l_0_7_154)))
 (let ((?x19447 (* l_0_7_153 l_0_7_153)))
 (let ((?x19445 (* l_0_7_152 l_0_7_152)))
 (let ((?x19446 (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) (* l_0_7_151 l_0_7_151)) ?x19445)))
 (let ((?x19460 (- (- (- (- (+ (+ (+ ?x19446 ?x19447) ?x19449) ?x19451) ?x19453) ?x19455) ?x19457) ?x19459)))
 (= (+ (- ?x19460 ?x19461) ?x19463) 0.0)))))))))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19523 (* ?x19227 l_0_7_44)))
 (let ((?x19463 (* ?x19227 l_0_7_39)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x19490 (* ?x19488 l_0_7_16)))
 (let ((?x19489 (* ?x19488 l_0_7_11)))
 (let ((?x19497 (+ (+ (- ?x19489 ?x19490) (* (* 2.0 l_0_7_151) l_0_7_156)) (* (* 2.0 l_0_7_152) l_0_7_157))))
 (let ((?x19503 (+ (+ ?x19497 (* (* 2.0 l_0_7_153) l_0_7_158)) (* (* 2.0 l_0_7_154) l_0_7_159))))
 (let ((?x19509 (- (+ ?x19503 (* (* 2.0 l_0_7_155) l_0_7_160)) (* (* 2.0 l_0_7_179) l_0_7_184))))
 (let ((?x19515 (- (- ?x19509 (* (* 2.0 l_0_7_180) l_0_7_185)) (* (* 2.0 l_0_7_181) l_0_7_186))))
 (let ((?x19521 (- (- ?x19515 (* (* 2.0 l_0_7_182) l_0_7_187)) (* (* 2.0 l_0_7_183) l_0_7_188))))
 (= (+ (- ?x19521 ?x19463) ?x19523) 0.0)))))))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19603 (* ?x19227 l_0_7_50)))
 (let ((?x19584 (+ (* (* (- 2.0) l_0_7_1) l_0_7_22) (* (* 2.0 l_0_7_151) l_0_7_162))))
 (let ((?x19588 (+ (+ ?x19584 (* (* 2.0 l_0_7_152) l_0_7_163)) (* (* 2.0 l_0_7_153) l_0_7_164))))
 (let ((?x19592 (+ (+ ?x19588 (* (* 2.0 l_0_7_154) l_0_7_165)) (* (* 2.0 l_0_7_155) l_0_7_166))))
 (let ((?x19596 (- (- ?x19592 (* (* 2.0 l_0_7_179) l_0_7_190)) (* (* 2.0 l_0_7_180) l_0_7_191))))
 (let ((?x19600 (- (- ?x19596 (* (* 2.0 l_0_7_181) l_0_7_192)) (* (* 2.0 l_0_7_182) l_0_7_193))))
 (let ((?x19607 (+ (+ (- ?x19600 (* (* 2.0 l_0_7_183) l_0_7_194)) ?x19603) (* (* 2.0 l_0_7_58) l_0_7_67))))
 (let ((?x19613 (- (+ ?x19607 (* (* 2.0 l_0_7_59) l_0_7_68)) (* (* 2.0 l_0_7_86) l_0_7_95))))
 (= (- ?x19613 (* (* 2.0 l_0_7_87) l_0_7_96)) 0.0)))))))))))
(assert
 (let ((?x19720 (* l_0_7_31 l_0_7_31)))
 (let ((?x19718 (* l_0_7_30 l_0_7_30)))
 (let ((?x19716 (* l_0_7_3 l_0_7_3)))
 (let ((?x19702 (* l_0_7_2 l_0_7_2)))
 (let ((?x19695 (- (* (* (- 2.0) l_0_7_114) l_0_7_123) (* (* 2.0 l_0_7_115) l_0_7_124))))
 (let ((?x19701 (- (- ?x19695 (* (* 2.0 l_0_7_198) l_0_7_207)) (* (* 2.0 l_0_7_199) l_0_7_208))))
 (let ((?x19709 (- (- (- ?x19701 ?x19702) (* (* 2.0 l_0_7_226) l_0_7_235)) (* (* 2.0 l_0_7_227) l_0_7_236))))
 (let ((?x19715 (- (- ?x19709 (* (* 2.0 l_0_7_254) l_0_7_263)) (* (* 2.0 l_0_7_255) l_0_7_264))))
 (= (+ (+ (- ?x19715 ?x19716) ?x19718) ?x19720) 0.0))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19821 (* ?x19311 l_0_7_33)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19819 (* ?x19308 l_0_7_32)))
 (let ((?x19816 (* 2.0 l_0_7_3)))
 (let ((?x19817 (* ?x19816 l_0_7_5)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x19787 (* ?x19786 l_0_7_4)))
 (let ((?x19782 (- (* (* (- 2.0) l_0_7_116) l_0_7_123) (* (* 2.0 l_0_7_117) l_0_7_124))))
 (let ((?x19791 (- (- (- ?x19782 (* (* 2.0 l_0_7_118) l_0_7_125)) ?x19787) (* (* 2.0 l_0_7_200) l_0_7_207))))
 (let ((?x19797 (- (- ?x19791 (* (* 2.0 l_0_7_201) l_0_7_208)) (* (* 2.0 l_0_7_202) l_0_7_209))))
 (let ((?x19803 (- (- ?x19797 (* (* 2.0 l_0_7_228) l_0_7_235)) (* (* 2.0 l_0_7_229) l_0_7_236))))
 (let ((?x19809 (- (- ?x19803 (* (* 2.0 l_0_7_230) l_0_7_237)) (* (* 2.0 l_0_7_256) l_0_7_263))))
 (let ((?x19815 (- (- ?x19809 (* (* 2.0 l_0_7_257) l_0_7_264)) (* (* 2.0 l_0_7_258) l_0_7_265))))
 (= (+ (+ (- ?x19815 ?x19817) ?x19819) ?x19821) 0.0))))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19964 (* ?x19311 l_0_7_36)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19962 (* ?x19308 l_0_7_35)))
 (let ((?x19816 (* 2.0 l_0_7_3)))
 (let ((?x19960 (* ?x19816 l_0_7_8)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x19922 (* ?x19786 l_0_7_7)))
 (let ((?x19915 (- (* (* (- 2.0) l_0_7_119) l_0_7_123) (* (* 2.0 l_0_7_120) l_0_7_124))))
 (let ((?x19921 (- (- ?x19915 (* (* 2.0 l_0_7_121) l_0_7_125)) (* (* 2.0 l_0_7_122) l_0_7_126))))
 (let ((?x19929 (- (- (- ?x19921 ?x19922) (* (* 2.0 l_0_7_203) l_0_7_207)) (* (* 2.0 l_0_7_204) l_0_7_208))))
 (let ((?x19935 (- (- ?x19929 (* (* 2.0 l_0_7_205) l_0_7_209)) (* (* 2.0 l_0_7_206) l_0_7_210))))
 (let ((?x19941 (- (- ?x19935 (* (* 2.0 l_0_7_231) l_0_7_235)) (* (* 2.0 l_0_7_232) l_0_7_236))))
 (let ((?x19947 (- (- ?x19941 (* (* 2.0 l_0_7_233) l_0_7_237)) (* (* 2.0 l_0_7_234) l_0_7_238))))
 (let ((?x19953 (- (- ?x19947 (* (* 2.0 l_0_7_259) l_0_7_263)) (* (* 2.0 l_0_7_260) l_0_7_264))))
 (let ((?x19959 (- (- ?x19953 (* (* 2.0 l_0_7_261) l_0_7_265)) (* (* 2.0 l_0_7_262) l_0_7_266))))
 (= (+ (+ (- ?x19959 ?x19960) ?x19962) ?x19964) 0.0))))))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19312 (* ?x19311 l_0_7_40)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19309 (* ?x19308 l_0_7_39)))
 (let ((?x20124 (* l_0_7_267 l_0_7_267)))
 (let ((?x20122 (* l_0_7_266 l_0_7_266)))
 (let ((?x20120 (* l_0_7_265 l_0_7_265)))
 (let ((?x20118 (* l_0_7_264 l_0_7_264)))
 (let ((?x20116 (* l_0_7_263 l_0_7_263)))
 (let ((?x20114 (* l_0_7_239 l_0_7_239)))
 (let ((?x20112 (* l_0_7_238 l_0_7_238)))
 (let ((?x20110 (* l_0_7_237 l_0_7_237)))
 (let ((?x20108 (* l_0_7_236 l_0_7_236)))
 (let ((?x20106 (* l_0_7_235 l_0_7_235)))
 (let ((?x20104 (* l_0_7_211 l_0_7_211)))
 (let ((?x20102 (* l_0_7_210 l_0_7_210)))
 (let ((?x20100 (* l_0_7_209 l_0_7_209)))
 (let ((?x20098 (* l_0_7_208 l_0_7_208)))
 (let ((?x20096 (* l_0_7_207 l_0_7_207)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x19286 (* ?x19285 l_0_7_3)))
 (let ((?x20083 (- (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x19286) (* (* 1.0 l_0_7_123) l_0_7_123))))
 (let ((?x20089 (- (- ?x20083 (* (* 1.0 l_0_7_124) l_0_7_124)) (* (* 1.0 l_0_7_125) l_0_7_125))))
 (let ((?x20095 (- (- ?x20089 (* (* 1.0 l_0_7_126) l_0_7_126)) (* (* 1.0 l_0_7_127) l_0_7_127))))
 (let ((?x20109 (- (- (- (- (- (- (- ?x20095 ?x20096) ?x20098) ?x20100) ?x20102) ?x20104) ?x20106) ?x20108)))
 (let ((?x20123 (- (- (- (- (- (- (- ?x20109 ?x20110) ?x20112) ?x20114) ?x20116) ?x20118) ?x20120) ?x20122)))
 (= (+ (+ (- ?x20123 ?x20124) ?x19309) ?x19312) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x20270 (* ?x19311 l_0_7_45)))
 (let ((?x19312 (* ?x19311 l_0_7_40)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x20267 (* ?x19308 l_0_7_44)))
 (let ((?x19309 (* ?x19308 l_0_7_39)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20219 (* ?x20218 l_0_7_3)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20216 (* ?x20215 l_0_7_2)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x19286 (* ?x19285 l_0_7_3)))
 (let ((?x19276 (* 2.0 l_0_7_11)))
 (let ((?x19283 (* ?x19276 l_0_7_2)))
 (let ((?x20205 (- (- (+ ?x19283 ?x19286) (* (* 2.0 l_0_7_123) l_0_7_128)) (* (* 2.0 l_0_7_124) l_0_7_129))))
 (let ((?x20211 (- (- ?x20205 (* (* 2.0 l_0_7_125) l_0_7_130)) (* (* 2.0 l_0_7_126) l_0_7_131))))
 (let ((?x20223 (- (- (- (- ?x20211 (* (* 2.0 l_0_7_127) l_0_7_132)) ?x20216) ?x20219) (* (* 2.0 l_0_7_207) l_0_7_212))))
 (let ((?x20229 (- (- ?x20223 (* (* 2.0 l_0_7_208) l_0_7_213)) (* (* 2.0 l_0_7_209) l_0_7_214))))
 (let ((?x20235 (- (- ?x20229 (* (* 2.0 l_0_7_210) l_0_7_215)) (* (* 2.0 l_0_7_211) l_0_7_216))))
 (let ((?x20241 (- (- ?x20235 (* (* 2.0 l_0_7_235) l_0_7_240)) (* (* 2.0 l_0_7_236) l_0_7_241))))
 (let ((?x20247 (- (- ?x20241 (* (* 2.0 l_0_7_237) l_0_7_242)) (* (* 2.0 l_0_7_238) l_0_7_243))))
 (let ((?x20253 (- (- ?x20247 (* (* 2.0 l_0_7_239) l_0_7_244)) (* (* 2.0 l_0_7_263) l_0_7_268))))
 (let ((?x20259 (- (- ?x20253 (* (* 2.0 l_0_7_264) l_0_7_269)) (* (* 2.0 l_0_7_265) l_0_7_270))))
 (let ((?x20265 (- (- ?x20259 (* (* 2.0 l_0_7_266) l_0_7_271)) (* (* 2.0 l_0_7_267) l_0_7_272))))
 (= (+ (- (+ (- ?x20265 ?x19309) ?x20267) ?x19312) ?x20270) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x20464 (* ?x19311 l_0_7_51)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x20462 (* ?x19308 l_0_7_50)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20440 (* ?x20439 l_0_7_3)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x20427 (* ?x19786 l_0_7_22)))
 (let ((?x20420 (- (* (* (- 2.0) l_0_7_123) l_0_7_134) (* (* 2.0 l_0_7_124) l_0_7_135))))
 (let ((?x20424 (- (- ?x20420 (* (* 2.0 l_0_7_125) l_0_7_136)) (* (* 2.0 l_0_7_126) l_0_7_137))))
 (let ((?x20430 (- (- (- ?x20424 (* (* 2.0 l_0_7_127) l_0_7_138)) ?x20427) (* (* 2.0 l_0_7_207) l_0_7_218))))
 (let ((?x20434 (- (- ?x20430 (* (* 2.0 l_0_7_208) l_0_7_219)) (* (* 2.0 l_0_7_209) l_0_7_220))))
 (let ((?x20438 (- (- ?x20434 (* (* 2.0 l_0_7_210) l_0_7_221)) (* (* 2.0 l_0_7_211) l_0_7_222))))
 (let ((?x20445 (- (- (- ?x20438 ?x20440) (* (* 2.0 l_0_7_235) l_0_7_246)) (* (* 2.0 l_0_7_236) l_0_7_247))))
 (let ((?x20449 (- (- ?x20445 (* (* 2.0 l_0_7_237) l_0_7_248)) (* (* 2.0 l_0_7_238) l_0_7_249))))
 (let ((?x20453 (- (- ?x20449 (* (* 2.0 l_0_7_239) l_0_7_250)) (* (* 2.0 l_0_7_263) l_0_7_274))))
 (let ((?x20457 (- (- ?x20453 (* (* 2.0 l_0_7_264) l_0_7_275)) (* (* 2.0 l_0_7_265) l_0_7_276))))
 (let ((?x20461 (- (- ?x20457 (* (* 2.0 l_0_7_266) l_0_7_277)) (* (* 2.0 l_0_7_267) l_0_7_278))))
 (= (+ (+ ?x20461 ?x20462) ?x20464) 0.0))))))))))))))))))))
(assert
 (let ((?x20611 (* l_0_7_6 l_0_7_6)))
 (let ((?x20609 (* l_0_7_5 l_0_7_5)))
 (let ((?x20607 (* l_0_7_4 l_0_7_4)))
 (let ((?x20605 (* l_0_7_34 l_0_7_34)))
 (let ((?x20608 (- (+ (+ (* l_0_7_32 l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x20605) ?x20607)))
 (= (- (- ?x20608 ?x20609) ?x20611) 0.0)))))))
(assert
 (let ((?x20640 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x20637 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x20634 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20631 (* ?x20630 l_0_7_37)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20628 (* ?x20627 l_0_7_36)))
 (let ((?x20638 (- (- (+ (+ (* (* 2.0 l_0_7_32) l_0_7_35) ?x20628) ?x20631) ?x20634) ?x20637)))
 (= (- ?x20638 ?x20640) 0.0))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20679 (* ?x20630 l_0_7_41)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20677 (* ?x20627 l_0_7_40)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20675 (* ?x20625 l_0_7_39)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x20673 (* ?x20672 l_0_7_6)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x20670 (* ?x19285 l_0_7_5)))
 (let ((?x20678 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x20670) ?x20673) ?x20675) ?x20677)))
 (= (+ ?x20678 ?x20679) 0.0)))))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20722 (* ?x20630 l_0_7_46)))
 (let ((?x20679 (* ?x20630 l_0_7_41)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20719 (* ?x20627 l_0_7_45)))
 (let ((?x20677 (* ?x20627 l_0_7_40)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20716 (* ?x20625 l_0_7_44)))
 (let ((?x20675 (* ?x20625 l_0_7_39)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x20713 (* ?x20712 l_0_7_6)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20710 (* ?x20218 l_0_7_5)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20702 (* ?x20215 l_0_7_4)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x20673 (* ?x20672 l_0_7_6)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x20670 (* ?x19285 l_0_7_5)))
 (let ((?x20701 (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x20670) ?x20673)))
 (let ((?x20720 (+ (- (+ (- (- (- (- ?x20701 ?x20702) ?x20710) ?x20713) ?x20675) ?x20716) ?x20677) ?x20719)))
 (= (+ (- ?x20720 ?x20679) ?x20722) 0.0)))))))))))))))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20777 (* ?x20630 l_0_7_52)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20775 (* ?x20627 l_0_7_51)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20773 (* ?x20625 l_0_7_50)))
 (let ((?x20770 (* 2.0 l_0_7_24)))
 (let ((?x20771 (* ?x20770 l_0_7_6)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20768 (* ?x20439 l_0_7_5)))
 (let ((?x20776 (+ (+ (- (- (* (* (- 2.0) l_0_7_22) l_0_7_4) ?x20768) ?x20771) ?x20773) ?x20775)))
 (= (+ ?x20776 ?x20777) 0.0)))))))))))))
(assert
 (let ((?x20817 (* l_0_7_9 l_0_7_9)))
 (let ((?x20815 (* l_0_7_8 l_0_7_8)))
 (let ((?x20813 (* l_0_7_7 l_0_7_7)))
 (let ((?x20811 (* l_0_7_38 l_0_7_38)))
 (let ((?x20809 (* l_0_7_37 l_0_7_37)))
 (let ((?x20807 (* l_0_7_36 l_0_7_36)))
 (let ((?x20810 (+ (+ (+ (* (- l_0_7_10) l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x20807) ?x20809)))
 (= (- (- (- (+ ?x20810 ?x20811) ?x20813) ?x20815) ?x20817) 0.0)))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20852 (* ?x20851 l_0_7_42)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20849 (* ?x20848 l_0_7_41)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20846 (* ?x20845 l_0_7_40)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20843 (* ?x20842 l_0_7_39)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x20840 (* ?x20672 l_0_7_9)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x20838 (* ?x19285 l_0_7_8)))
 (let ((?x19276 (* 2.0 l_0_7_11)))
 (let ((?x20836 (* ?x19276 l_0_7_7)))
 (let ((?x20844 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x20836) ?x20838) ?x20840) ?x20843)))
 (= (+ (+ (+ ?x20844 ?x20846) ?x20849) ?x20852) 0.0)))))))))))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20909 (* ?x20851 l_0_7_47)))
 (let ((?x20852 (* ?x20851 l_0_7_42)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20906 (* ?x20848 l_0_7_46)))
 (let ((?x20849 (* ?x20848 l_0_7_41)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20903 (* ?x20845 l_0_7_45)))
 (let ((?x20846 (* ?x20845 l_0_7_40)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20900 (* ?x20842 l_0_7_44)))
 (let ((?x20843 (* ?x20842 l_0_7_39)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x20897 (* ?x20712 l_0_7_9)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20895 (* ?x20218 l_0_7_8)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20893 (* ?x20215 l_0_7_7)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x20840 (* ?x20672 l_0_7_9)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x20838 (* ?x19285 l_0_7_8)))
 (let ((?x19276 (* 2.0 l_0_7_11)))
 (let ((?x20836 (* ?x19276 l_0_7_7)))
 (let ((?x20876 (* 2.0 l_0_7_10)))
 (let ((?x20880 (* ?x20876 l_0_7_19)))
 (let ((?x20878 (* ?x20876 l_0_7_14)))
 (let ((?x20898 (- (- (- (+ (+ (+ (- ?x20878 ?x20880) ?x20836) ?x20838) ?x20840) ?x20893) ?x20895) ?x20897)))
 (let ((?x20908 (- (+ (- (+ (- (+ (- ?x20898 ?x20843) ?x20900) ?x20846) ?x20903) ?x20849) ?x20906) ?x20852)))
 (= (+ ?x20908 ?x20909) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20984 (* ?x20851 l_0_7_53)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20982 (* ?x20848 l_0_7_52)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20980 (* ?x20845 l_0_7_51)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20978 (* ?x20842 l_0_7_50)))
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19312 (* ?x19311 l_0_7_40)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19309 (* ?x19308 l_0_7_39)))
 (let ((?x20770 (* 2.0 l_0_7_24)))
 (let ((?x20974 (* ?x20770 l_0_7_9)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20972 (* ?x20439 l_0_7_8)))
 (let ((?x20969 (* 2.0 l_0_7_22)))
 (let ((?x20970 (* ?x20969 l_0_7_7)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x19286 (* ?x19285 l_0_7_3)))
 (let ((?x19276 (* 2.0 l_0_7_11)))
 (let ((?x19283 (* ?x19276 l_0_7_2)))
 (let ((?x20973 (- (- (+ (+ (* (* (- 2.0) l_0_7_10) l_0_7_25) ?x19283) ?x19286) ?x20970) ?x20972)))
 (let ((?x20985 (+ (+ (+ (+ (- (- (- ?x20973 ?x20974) ?x19309) ?x19312) ?x20978) ?x20980) ?x20982) ?x20984)))
 (= ?x20985 0.0))))))))))))))))))))))))))
(assert
 (let ((?x21040 (* l_0_7_43 l_0_7_43)))
 (let ((?x21038 (* l_0_7_42 l_0_7_42)))
 (let ((?x21036 (* l_0_7_41 l_0_7_41)))
 (let ((?x21034 (* l_0_7_40 l_0_7_40)))
 (let ((?x21032 (* l_0_7_39 l_0_7_39)))
 (let ((?x21030 (* l_0_7_15 l_0_7_15)))
 (let ((?x21028 (* l_0_7_14 l_0_7_14)))
 (let ((?x21026 (* l_0_7_13 l_0_7_13)))
 (let ((?x21029 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x21026) ?x21028)))
 (= (+ (+ (+ (+ (+ (- ?x21029 ?x21030) ?x21032) ?x21034) ?x21036) ?x21038) ?x21040) 0.0)))))))))))
(assert
 (let ((?x21040 (* l_0_7_43 l_0_7_43)))
 (let ((?x21097 (* 2.0 l_0_7_43)))
 (let ((?x21098 (* ?x21097 l_0_7_48)))
 (let ((?x21038 (* l_0_7_42 l_0_7_42)))
 (let ((?x21093 (* 2.0 l_0_7_42)))
 (let ((?x21094 (* ?x21093 l_0_7_47)))
 (let ((?x21036 (* l_0_7_41 l_0_7_41)))
 (let ((?x21089 (* 2.0 l_0_7_41)))
 (let ((?x21090 (* ?x21089 l_0_7_46)))
 (let ((?x21034 (* l_0_7_40 l_0_7_40)))
 (let ((?x21085 (* 2.0 l_0_7_40)))
 (let ((?x21086 (* ?x21085 l_0_7_45)))
 (let ((?x21032 (* l_0_7_39 l_0_7_39)))
 (let ((?x21081 (* 2.0 l_0_7_39)))
 (let ((?x21082 (* ?x21081 l_0_7_44)))
 (let ((?x21030 (* l_0_7_15 l_0_7_15)))
 (let ((?x21077 (* 2.0 l_0_7_15)))
 (let ((?x21078 (* ?x21077 l_0_7_20)))
 (let ((?x21028 (* l_0_7_14 l_0_7_14)))
 (let ((?x21073 (* 2.0 l_0_7_14)))
 (let ((?x21074 (* ?x21073 l_0_7_19)))
 (let ((?x21026 (* l_0_7_13 l_0_7_13)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x21070 (* ?x20672 l_0_7_18)))
 (let ((?x21024 (* l_0_7_12 l_0_7_12)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x21067 (* ?x19285 l_0_7_17)))
 (let ((?x21068 (- (+ (* (* (- 2.0) l_0_7_11) l_0_7_16) (* l_0_7_11 l_0_7_11)) ?x21067)))
 (let ((?x21080 (+ (- (+ (- (+ (- (+ ?x21068 ?x21024) ?x21070) ?x21026) ?x21074) ?x21028) ?x21078) ?x21030)))
 (let ((?x21095 (+ (- (+ (- (+ (- (+ ?x21080 ?x21082) ?x21032) ?x21086) ?x21034) ?x21090) ?x21036) ?x21094)))
 (= (- (+ (- ?x21095 ?x21038) ?x21098) ?x21040) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x21097 (* 2.0 l_0_7_43)))
 (let ((?x21175 (* ?x21097 l_0_7_54)))
 (let ((?x21093 (* 2.0 l_0_7_42)))
 (let ((?x21173 (* ?x21093 l_0_7_53)))
 (let ((?x21089 (* 2.0 l_0_7_41)))
 (let ((?x21171 (* ?x21089 l_0_7_52)))
 (let ((?x21085 (* 2.0 l_0_7_40)))
 (let ((?x21169 (* ?x21085 l_0_7_51)))
 (let ((?x21081 (* 2.0 l_0_7_39)))
 (let ((?x21167 (* ?x21081 l_0_7_50)))
 (let ((?x21077 (* 2.0 l_0_7_15)))
 (let ((?x21165 (* ?x21077 l_0_7_26)))
 (let ((?x21073 (* 2.0 l_0_7_14)))
 (let ((?x21163 (* ?x21073 l_0_7_25)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x21161 (* ?x20672 l_0_7_24)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x21159 (* ?x19285 l_0_7_23)))
 (let ((?x21166 (- (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_22) ?x21159) ?x21161) ?x21163) ?x21165)))
 (= (+ (+ (+ (+ (+ ?x21166 ?x21167) ?x21169) ?x21171) ?x21173) ?x21175) 0.0)))))))))))))))))))))
(assert
 (let ((?x21249 (* l_0_7_49 l_0_7_49)))
 (let ((?x21247 (* l_0_7_48 l_0_7_48)))
 (let ((?x21245 (* l_0_7_47 l_0_7_47)))
 (let ((?x21243 (* l_0_7_46 l_0_7_46)))
 (let ((?x21241 (* l_0_7_45 l_0_7_45)))
 (let ((?x21239 (* l_0_7_44 l_0_7_44)))
 (let ((?x21097 (* 2.0 l_0_7_43)))
 (let ((?x21098 (* ?x21097 l_0_7_48)))
 (let ((?x21093 (* 2.0 l_0_7_42)))
 (let ((?x21094 (* ?x21093 l_0_7_47)))
 (let ((?x21089 (* 2.0 l_0_7_41)))
 (let ((?x21090 (* ?x21089 l_0_7_46)))
 (let ((?x21085 (* 2.0 l_0_7_40)))
 (let ((?x21086 (* ?x21085 l_0_7_45)))
 (let ((?x21081 (* 2.0 l_0_7_39)))
 (let ((?x21082 (* ?x21081 l_0_7_44)))
 (let ((?x21232 (* l_0_7_21 l_0_7_21)))
 (let ((?x21230 (* l_0_7_20 l_0_7_20)))
 (let ((?x21228 (* l_0_7_19 l_0_7_19)))
 (let ((?x21226 (* l_0_7_18 l_0_7_18)))
 (let ((?x21224 (* l_0_7_17 l_0_7_17)))
 (let ((?x21214 (* l_0_7_16 l_0_7_16)))
 (let ((?x21077 (* 2.0 l_0_7_15)))
 (let ((?x21078 (* ?x21077 l_0_7_20)))
 (let ((?x21073 (* 2.0 l_0_7_14)))
 (let ((?x21074 (* ?x21073 l_0_7_19)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x21070 (* ?x20672 l_0_7_18)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x21067 (* ?x19285 l_0_7_17)))
 (let ((?x21213 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_16) ?x21067) ?x21070) ?x21074) ?x21078)))
 (let ((?x21234 (- (- (- (- (- (- (- ?x21213 ?x21214) ?x21224) ?x21226) ?x21228) ?x21230) ?x21232) ?x21082)))
 (let ((?x21244 (+ (+ (+ (- (- (- (- ?x21234 ?x21086) ?x21090) ?x21094) ?x21098) ?x21239) ?x21241) ?x21243)))
 (= (+ (+ (+ ?x21244 ?x21245) ?x21247) ?x21249) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21335 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x21332 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x21329 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x21326 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x21323 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x21320 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x21097 (* 2.0 l_0_7_43)))
 (let ((?x21175 (* ?x21097 l_0_7_54)))
 (let ((?x21093 (* 2.0 l_0_7_42)))
 (let ((?x21173 (* ?x21093 l_0_7_53)))
 (let ((?x21089 (* 2.0 l_0_7_41)))
 (let ((?x21171 (* ?x21089 l_0_7_52)))
 (let ((?x21085 (* 2.0 l_0_7_40)))
 (let ((?x21169 (* ?x21085 l_0_7_51)))
 (let ((?x21081 (* 2.0 l_0_7_39)))
 (let ((?x21167 (* ?x21081 l_0_7_50)))
 (let ((?x21312 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x21309 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x21306 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x21303 (* ?x20712 l_0_7_24)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x21301 (* ?x20218 l_0_7_23)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x21299 (* ?x20215 l_0_7_22)))
 (let ((?x21077 (* 2.0 l_0_7_15)))
 (let ((?x21165 (* ?x21077 l_0_7_26)))
 (let ((?x21073 (* 2.0 l_0_7_14)))
 (let ((?x21163 (* ?x21073 l_0_7_25)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x21161 (* ?x20672 l_0_7_24)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x21159 (* ?x19285 l_0_7_23)))
 (let ((?x21298 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_22) ?x21159) ?x21161) ?x21163) ?x21165)))
 (let ((?x21314 (- (- (- (- (- (- (- ?x21298 ?x21299) ?x21301) ?x21303) ?x21306) ?x21309) ?x21312) ?x21167)))
 (let ((?x21327 (+ (+ (+ (- (- (- (- ?x21314 ?x21169) ?x21171) ?x21173) ?x21175) ?x21320) ?x21323) ?x21326)))
 (= (+ (+ (+ ?x21327 ?x21329) ?x21332) ?x21335) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21435 (* l_0_7_56 l_0_7_56)))
 (let ((?x21433 (* l_0_7_55 l_0_7_55)))
 (let ((?x21431 (* l_0_7_54 l_0_7_54)))
 (let ((?x21429 (* l_0_7_53 l_0_7_53)))
 (let ((?x21427 (* l_0_7_52 l_0_7_52)))
 (let ((?x21425 (* l_0_7_51 l_0_7_51)))
 (let ((?x21423 (* l_0_7_50 l_0_7_50)))
 (let ((?x21421 (* l_0_7_28 l_0_7_28)))
 (let ((?x21419 (* l_0_7_27 l_0_7_27)))
 (let ((?x21417 (* l_0_7_26 l_0_7_26)))
 (let ((?x21415 (* l_0_7_25 l_0_7_25)))
 (let ((?x21413 (* l_0_7_24 l_0_7_24)))
 (let ((?x21416 (- (- (- (* (- l_0_7_22) l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x21413) ?x21415)))
 (let ((?x21430 (+ (+ (+ (+ (- (- (- ?x21416 ?x21417) ?x21419) ?x21421) ?x21423) ?x21425) ?x21427) ?x21429)))
 (= (+ (+ (+ ?x21430 ?x21431) ?x21433) ?x21435) 0.0))))))))))))))))
(assert
 (let ((?x19191 (* l_0_7_29 l_0_7_29)))
 (let ((?x19195 (* l_0_7_1 l_0_7_1)))
 (let ((?x21459 (- ?x19195 ?x19191)))
 (let ((?x21474 (- (+ ?x21459 (* (* 2.0 l_0_7_57) l_0_7_63)) (* (* 2.0 l_0_7_85) l_0_7_91))))
 (= ?x21474 0.0))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19228 (* ?x19227 l_0_7_30)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21491 (* ?x19488 l_0_7_2)))
 (let ((?x21495 (+ (+ ?x21491 (* (* 2.0 l_0_7_147) l_0_7_162)) (* (* 2.0 l_0_7_148) l_0_7_163))))
 (let ((?x21499 (+ (+ ?x21495 (* (* 2.0 l_0_7_149) l_0_7_164)) (* (* 2.0 l_0_7_150) l_0_7_165))))
 (let ((?x21503 (- (- ?x21499 (* (* 2.0 l_0_7_175) l_0_7_190)) (* (* 2.0 l_0_7_176) l_0_7_191))))
 (let ((?x21507 (- (- ?x21503 (* (* 2.0 l_0_7_177) l_0_7_192)) (* (* 2.0 l_0_7_178) l_0_7_193))))
 (let ((?x21512 (+ (+ (- ?x21507 ?x19228) (* (* 2.0 l_0_7_58) l_0_7_63)) (* (* 2.0 l_0_7_59) l_0_7_64))))
 (let ((?x21516 (- (- ?x21512 (* (* 2.0 l_0_7_86) l_0_7_91)) (* (* 2.0 l_0_7_87) l_0_7_92))))
 (= ?x21516 0.0))))))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20984 (* ?x20851 l_0_7_53)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20982 (* ?x20848 l_0_7_52)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20980 (* ?x20845 l_0_7_51)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20978 (* ?x20842 l_0_7_50)))
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19306 (* ?x19227 l_0_7_32)))
 (let ((?x20770 (* 2.0 l_0_7_24)))
 (let ((?x20974 (* ?x20770 l_0_7_9)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20972 (* ?x20439 l_0_7_8)))
 (let ((?x20969 (* 2.0 l_0_7_22)))
 (let ((?x20970 (* ?x20969 l_0_7_7)))
 (let ((?x20876 (* 2.0 l_0_7_10)))
 (let ((?x21574 (* ?x20876 l_0_7_25)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21573 (* ?x19488 l_0_7_4)))
 (let ((?x21581 (- (- (- (+ (+ (+ (+ ?x21573 ?x21574) ?x20970) ?x20972) ?x20974) ?x19306) ?x20978) ?x20980)))
 (let ((?x21589 (+ (+ (- (- ?x21581 ?x20982) ?x20984) (* (* 2.0 l_0_7_60) l_0_7_63)) (* (* 2.0 l_0_7_61) l_0_7_64))))
 (let ((?x21595 (- (+ ?x21589 (* (* 2.0 l_0_7_62) l_0_7_65)) (* (* 2.0 l_0_7_88) l_0_7_91))))
 (let ((?x21601 (- (- ?x21595 (* (* 2.0 l_0_7_89) l_0_7_92)) (* (* 2.0 l_0_7_90) l_0_7_93))))
 (= ?x21601 0.0))))))))))))))))))))))))))
(assert
 (let ((?x21666 (* l_0_7_94 l_0_7_94)))
 (let ((?x21664 (* l_0_7_93 l_0_7_93)))
 (let ((?x21662 (* l_0_7_92 l_0_7_92)))
 (let ((?x21660 (* l_0_7_91 l_0_7_91)))
 (let ((?x21658 (* l_0_7_66 l_0_7_66)))
 (let ((?x21656 (* l_0_7_65 l_0_7_65)))
 (let ((?x21654 (* l_0_7_64 l_0_7_64)))
 (let ((?x21652 (* l_0_7_63 l_0_7_63)))
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19395 (* ?x19227 l_0_7_35)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21650 (* ?x19488 l_0_7_7)))
 (let ((?x21651 (- ?x21650 ?x19395)))
 (let ((?x21665 (- (- (- (+ (+ (+ (+ ?x21651 ?x21652) ?x21654) ?x21656) ?x21658) ?x21660) ?x21662) ?x21664)))
 (= (- ?x21665 ?x21666) 0.0))))))))))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19463 (* ?x19227 l_0_7_39)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x19489 (* ?x19488 l_0_7_11)))
 (let ((?x21687 (- ?x19489 ?x19463)))
 (let ((?x21693 (+ (+ ?x21687 (* (* 2.0 l_0_7_63) l_0_7_67)) (* (* 2.0 l_0_7_64) l_0_7_68))))
 (let ((?x21699 (+ (+ ?x21693 (* (* 2.0 l_0_7_65) l_0_7_69)) (* (* 2.0 l_0_7_66) l_0_7_70))))
 (let ((?x21705 (- (- ?x21699 (* (* 2.0 l_0_7_91) l_0_7_95)) (* (* 2.0 l_0_7_92) l_0_7_96))))
 (let ((?x21711 (- (- ?x21705 (* (* 2.0 l_0_7_93) l_0_7_97)) (* (* 2.0 l_0_7_94) l_0_7_98))))
 (= ?x21711 0.0)))))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19523 (* ?x19227 l_0_7_44)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x19490 (* ?x19488 l_0_7_16)))
 (let ((?x21754 (- (- ?x19490 (* (* 2.0 l_0_7_100) l_0_7_91)) (* (* 2.0 l_0_7_101) l_0_7_92))))
 (let ((?x21760 (- (- ?x21754 (* (* 2.0 l_0_7_102) l_0_7_93)) (* (* 2.0 l_0_7_103) l_0_7_94))))
 (let ((?x21765 (+ (+ (- ?x21760 ?x19523) (* (* 2.0 l_0_7_63) l_0_7_72)) (* (* 2.0 l_0_7_64) l_0_7_73))))
 (let ((?x21769 (+ (+ ?x21765 (* (* 2.0 l_0_7_65) l_0_7_74)) (* (* 2.0 l_0_7_66) l_0_7_75))))
 (= ?x21769 0.0))))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19603 (* ?x19227 l_0_7_50)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21809 (* ?x19488 l_0_7_22)))
 (let ((?x21815 (- (- ?x21809 (* (* 2.0 l_0_7_106) l_0_7_91)) (* (* 2.0 l_0_7_107) l_0_7_92))))
 (let ((?x21821 (- (- ?x21815 (* (* 2.0 l_0_7_108) l_0_7_93)) (* (* 2.0 l_0_7_109) l_0_7_94))))
 (let ((?x21826 (+ (+ (- ?x21821 ?x19603) (* (* 2.0 l_0_7_63) l_0_7_78)) (* (* 2.0 l_0_7_64) l_0_7_79))))
 (let ((?x21830 (+ (+ ?x21826 (* (* 2.0 l_0_7_65) l_0_7_80)) (* (* 2.0 l_0_7_66) l_0_7_81))))
 (= ?x21830 0.0))))))))))
(assert
 (let ((?x19720 (* l_0_7_31 l_0_7_31)))
 (let ((?x19718 (* l_0_7_30 l_0_7_30)))
 (let ((?x19716 (* l_0_7_3 l_0_7_3)))
 (let ((?x19702 (* l_0_7_2 l_0_7_2)))
 (let ((?x21871 (- (* (* (- 2.0) l_0_7_119) l_0_7_134) (* (* 2.0 l_0_7_120) l_0_7_135))))
 (let ((?x21875 (- (- ?x21871 (* (* 2.0 l_0_7_121) l_0_7_136)) (* (* 2.0 l_0_7_122) l_0_7_137))))
 (let ((?x21880 (- (- (+ ?x21875 ?x19702) (* (* 2.0 l_0_7_203) l_0_7_218)) (* (* 2.0 l_0_7_204) l_0_7_219))))
 (let ((?x21884 (- (- ?x21880 (* (* 2.0 l_0_7_205) l_0_7_220)) (* (* 2.0 l_0_7_206) l_0_7_221))))
 (let ((?x21888 (- (- ?x21884 (* (* 2.0 l_0_7_231) l_0_7_246)) (* (* 2.0 l_0_7_232) l_0_7_247))))
 (let ((?x21892 (- (- ?x21888 (* (* 2.0 l_0_7_233) l_0_7_248)) (* (* 2.0 l_0_7_234) l_0_7_249))))
 (let ((?x21896 (- (- ?x21892 (* (* 2.0 l_0_7_259) l_0_7_274)) (* (* 2.0 l_0_7_260) l_0_7_275))))
 (let ((?x21900 (- (- ?x21896 (* (* 2.0 l_0_7_261) l_0_7_276)) (* (* 2.0 l_0_7_262) l_0_7_277))))
 (= (- (- (+ ?x21900 ?x19716) ?x19718) ?x19720) 0.0))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19821 (* ?x19311 l_0_7_33)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19819 (* ?x19308 l_0_7_32)))
 (let ((?x19816 (* 2.0 l_0_7_3)))
 (let ((?x19817 (* ?x19816 l_0_7_5)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x19787 (* ?x19786 l_0_7_4)))
 (= (- (- (+ ?x19787 ?x19817) ?x19819) ?x19821) 0.0))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19964 (* ?x19311 l_0_7_36)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19962 (* ?x19308 l_0_7_35)))
 (let ((?x19816 (* 2.0 l_0_7_3)))
 (let ((?x19960 (* ?x19816 l_0_7_8)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x19922 (* ?x19786 l_0_7_7)))
 (= (- (- (+ ?x19922 ?x19960) ?x19962) ?x19964) 0.0))))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20984 (* ?x20851 l_0_7_53)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20982 (* ?x20848 l_0_7_52)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20980 (* ?x20845 l_0_7_51)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20978 (* ?x20842 l_0_7_50)))
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x20270 (* ?x19311 l_0_7_45)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x20267 (* ?x19308 l_0_7_44)))
 (let ((?x20770 (* 2.0 l_0_7_24)))
 (let ((?x20974 (* ?x20770 l_0_7_9)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20972 (* ?x20439 l_0_7_8)))
 (let ((?x20969 (* 2.0 l_0_7_22)))
 (let ((?x20970 (* ?x20969 l_0_7_7)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20219 (* ?x20218 l_0_7_3)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20216 (* ?x20215 l_0_7_2)))
 (let ((?x20876 (* 2.0 l_0_7_10)))
 (let ((?x21574 (* ?x20876 l_0_7_25)))
 (let ((?x22038 (- (- (+ (+ (+ (+ (+ ?x21574 ?x20216) ?x20219) ?x20970) ?x20972) ?x20974) ?x20267) ?x20270)))
 (= (- (- (- (- ?x22038 ?x20978) ?x20980) ?x20982) ?x20984) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x20464 (* ?x19311 l_0_7_51)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x20462 (* ?x19308 l_0_7_50)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20440 (* ?x20439 l_0_7_3)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x20427 (* ?x19786 l_0_7_22)))
 (= (- (- (+ ?x20427 ?x20440) ?x20462) ?x20464) 0.0))))))))))
(assert
 (let ((?x20611 (* l_0_7_6 l_0_7_6)))
 (let ((?x20609 (* l_0_7_5 l_0_7_5)))
 (let ((?x20607 (* l_0_7_4 l_0_7_4)))
 (let ((?x20605 (* l_0_7_34 l_0_7_34)))
 (let ((?x22080 (+ (- (- (* (- l_0_7_32) l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x20605) ?x20607)))
 (= (+ (+ ?x22080 ?x20609) ?x20611) 0.0)))))))
(assert
 (let ((?x20640 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x20637 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x20634 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20631 (* ?x20630 l_0_7_37)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20628 (* ?x20627 l_0_7_36)))
 (let ((?x22096 (+ (+ (- (- (* (* (- 2.0) l_0_7_32) l_0_7_35) ?x20628) ?x20631) ?x20634) ?x20637)))
 (= (+ ?x22096 ?x20640) 0.0))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20679 (* ?x20630 l_0_7_41)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20677 (* ?x20627 l_0_7_40)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20675 (* ?x20625 l_0_7_39)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x20673 (* ?x20672 l_0_7_6)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x20670 (* ?x19285 l_0_7_5)))
 (let ((?x20701 (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x20670) ?x20673)))
 (= (- (- (- ?x20701 ?x20675) ?x20677) ?x20679) 0.0)))))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20722 (* ?x20630 l_0_7_46)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20719 (* ?x20627 l_0_7_45)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20716 (* ?x20625 l_0_7_44)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x20713 (* ?x20712 l_0_7_6)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20710 (* ?x20218 l_0_7_5)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20702 (* ?x20215 l_0_7_4)))
 (= (- (- (- (+ (+ ?x20702 ?x20710) ?x20713) ?x20716) ?x20719) ?x20722) 0.0))))))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20777 (* ?x20630 l_0_7_52)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20775 (* ?x20627 l_0_7_51)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20773 (* ?x20625 l_0_7_50)))
 (let ((?x20770 (* 2.0 l_0_7_24)))
 (let ((?x20771 (* ?x20770 l_0_7_6)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20768 (* ?x20439 l_0_7_5)))
 (let ((?x22141 (- (- (+ (+ (* (* 2.0 l_0_7_22) l_0_7_4) ?x20768) ?x20771) ?x20773) ?x20775)))
 (let ((?x22142 (- ?x22141 ?x20777)))
 (= ?x22142 0.0))))))))))))))
(assert
 (let ((?x20817 (* l_0_7_9 l_0_7_9)))
 (let ((?x20815 (* l_0_7_8 l_0_7_8)))
 (let ((?x20813 (* l_0_7_7 l_0_7_7)))
 (let ((?x20811 (* l_0_7_38 l_0_7_38)))
 (let ((?x20809 (* l_0_7_37 l_0_7_37)))
 (let ((?x20807 (* l_0_7_36 l_0_7_36)))
 (let ((?x22158 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x20807) ?x20809)))
 (= (+ (+ (+ (- ?x22158 ?x20811) ?x20813) ?x20815) ?x20817) 0.0)))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20852 (* ?x20851 l_0_7_42)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20849 (* ?x20848 l_0_7_41)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20846 (* ?x20845 l_0_7_40)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20843 (* ?x20842 l_0_7_39)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x20840 (* ?x20672 l_0_7_9)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x20838 (* ?x19285 l_0_7_8)))
 (let ((?x19276 (* 2.0 l_0_7_11)))
 (let ((?x20836 (* ?x19276 l_0_7_7)))
 (let ((?x20876 (* 2.0 l_0_7_10)))
 (let ((?x20878 (* ?x20876 l_0_7_14)))
 (let ((?x22182 (- (- (- (- (+ (+ (+ ?x20878 ?x20836) ?x20838) ?x20840) ?x20843) ?x20846) ?x20849) ?x20852)))
 (= ?x22182 0.0)))))))))))))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20909 (* ?x20851 l_0_7_47)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20906 (* ?x20848 l_0_7_46)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20903 (* ?x20845 l_0_7_45)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20900 (* ?x20842 l_0_7_44)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x20897 (* ?x20712 l_0_7_9)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20895 (* ?x20218 l_0_7_8)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20893 (* ?x20215 l_0_7_7)))
 (let ((?x20876 (* 2.0 l_0_7_10)))
 (let ((?x20880 (* ?x20876 l_0_7_19)))
 (let ((?x22198 (- (- (- (- (+ (+ (+ ?x20880 ?x20893) ?x20895) ?x20897) ?x20900) ?x20903) ?x20906) ?x20909)))
 (= ?x22198 0.0)))))))))))))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20984 (* ?x20851 l_0_7_53)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20982 (* ?x20848 l_0_7_52)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20980 (* ?x20845 l_0_7_51)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20978 (* ?x20842 l_0_7_50)))
 (let ((?x20770 (* 2.0 l_0_7_24)))
 (let ((?x20974 (* ?x20770 l_0_7_9)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20972 (* ?x20439 l_0_7_8)))
 (let ((?x20969 (* 2.0 l_0_7_22)))
 (let ((?x20970 (* ?x20969 l_0_7_7)))
 (let ((?x20876 (* 2.0 l_0_7_10)))
 (let ((?x21574 (* ?x20876 l_0_7_25)))
 (let ((?x22224 (- (- (- (- (+ (+ (+ ?x21574 ?x20970) ?x20972) ?x20974) ?x20978) ?x20980) ?x20982) ?x20984)))
 (= ?x22224 0.0)))))))))))))))))))
(assert
 (let ((?x21040 (* l_0_7_43 l_0_7_43)))
 (let ((?x21038 (* l_0_7_42 l_0_7_42)))
 (let ((?x21036 (* l_0_7_41 l_0_7_41)))
 (let ((?x21034 (* l_0_7_40 l_0_7_40)))
 (let ((?x21032 (* l_0_7_39 l_0_7_39)))
 (let ((?x21030 (* l_0_7_15 l_0_7_15)))
 (let ((?x21028 (* l_0_7_14 l_0_7_14)))
 (let ((?x21026 (* l_0_7_13 l_0_7_13)))
 (let ((?x22238 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x21026) ?x21028)))
 (= (- (- (- (- (- (+ ?x22238 ?x21030) ?x21032) ?x21034) ?x21036) ?x21038) ?x21040) 0.0)))))))))))
(assert
 (let ((?x21097 (* 2.0 l_0_7_43)))
 (let ((?x21098 (* ?x21097 l_0_7_48)))
 (let ((?x21093 (* 2.0 l_0_7_42)))
 (let ((?x21094 (* ?x21093 l_0_7_47)))
 (let ((?x21089 (* 2.0 l_0_7_41)))
 (let ((?x21090 (* ?x21089 l_0_7_46)))
 (let ((?x21085 (* 2.0 l_0_7_40)))
 (let ((?x21086 (* ?x21085 l_0_7_45)))
 (let ((?x21081 (* 2.0 l_0_7_39)))
 (let ((?x21082 (* ?x21081 l_0_7_44)))
 (let ((?x21077 (* 2.0 l_0_7_15)))
 (let ((?x21078 (* ?x21077 l_0_7_20)))
 (let ((?x21073 (* 2.0 l_0_7_14)))
 (let ((?x21074 (* ?x21073 l_0_7_19)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x21070 (* ?x20672 l_0_7_18)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x21067 (* ?x19285 l_0_7_17)))
 (let ((?x21213 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_16) ?x21067) ?x21070) ?x21074) ?x21078)))
 (= (- (- (- (- (- ?x21213 ?x21082) ?x21086) ?x21090) ?x21094) ?x21098) 0.0)))))))))))))))))))))
(assert
 (let ((?x21097 (* 2.0 l_0_7_43)))
 (let ((?x21175 (* ?x21097 l_0_7_54)))
 (let ((?x21093 (* 2.0 l_0_7_42)))
 (let ((?x21173 (* ?x21093 l_0_7_53)))
 (let ((?x21089 (* 2.0 l_0_7_41)))
 (let ((?x21171 (* ?x21089 l_0_7_52)))
 (let ((?x21085 (* 2.0 l_0_7_40)))
 (let ((?x21169 (* ?x21085 l_0_7_51)))
 (let ((?x21081 (* 2.0 l_0_7_39)))
 (let ((?x21167 (* ?x21081 l_0_7_50)))
 (let ((?x21077 (* 2.0 l_0_7_15)))
 (let ((?x21165 (* ?x21077 l_0_7_26)))
 (let ((?x21073 (* 2.0 l_0_7_14)))
 (let ((?x21163 (* ?x21073 l_0_7_25)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x21161 (* ?x20672 l_0_7_24)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x21159 (* ?x19285 l_0_7_23)))
 (let ((?x21298 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_22) ?x21159) ?x21161) ?x21163) ?x21165)))
 (let ((?x22277 (- (- (- (- (- ?x21298 ?x21167) ?x21169) ?x21171) ?x21173) ?x21175)))
 (= ?x22277 0.0))))))))))))))))))))))
(assert
 (let ((?x21249 (* l_0_7_49 l_0_7_49)))
 (let ((?x21247 (* l_0_7_48 l_0_7_48)))
 (let ((?x21245 (* l_0_7_47 l_0_7_47)))
 (let ((?x21243 (* l_0_7_46 l_0_7_46)))
 (let ((?x21241 (* l_0_7_45 l_0_7_45)))
 (let ((?x21239 (* l_0_7_44 l_0_7_44)))
 (let ((?x21232 (* l_0_7_21 l_0_7_21)))
 (let ((?x21230 (* l_0_7_20 l_0_7_20)))
 (let ((?x21228 (* l_0_7_19 l_0_7_19)))
 (let ((?x21226 (* l_0_7_18 l_0_7_18)))
 (let ((?x22290 (+ (+ (+ (* l_0_7_16 l_0_7_16) (* l_0_7_17 l_0_7_17)) ?x21226) ?x21228)))
 (let ((?x22297 (- (- (- (- (- (+ (+ ?x22290 ?x21230) ?x21232) ?x21239) ?x21241) ?x21243) ?x21245) ?x21247)))
 (= (- ?x22297 ?x21249) 0.0))))))))))))))
(assert
 (let ((?x21335 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x21332 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x21329 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x21326 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x21323 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x21320 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x21312 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x21309 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x21306 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x21303 (* ?x20712 l_0_7_24)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x21301 (* ?x20218 l_0_7_23)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x21299 (* ?x20215 l_0_7_22)))
 (let ((?x22326 (- (- (+ (+ (+ (+ (+ ?x21299 ?x21301) ?x21303) ?x21306) ?x21309) ?x21312) ?x21320) ?x21323)))
 (= (- (- (- (- ?x22326 ?x21326) ?x21329) ?x21332) ?x21335) 0.0))))))))))))))))))
(assert
 (let ((?x21435 (* l_0_7_56 l_0_7_56)))
 (let ((?x21433 (* l_0_7_55 l_0_7_55)))
 (let ((?x21431 (* l_0_7_54 l_0_7_54)))
 (let ((?x21429 (* l_0_7_53 l_0_7_53)))
 (let ((?x21427 (* l_0_7_52 l_0_7_52)))
 (let ((?x21425 (* l_0_7_51 l_0_7_51)))
 (let ((?x21423 (* l_0_7_50 l_0_7_50)))
 (let ((?x21421 (* l_0_7_28 l_0_7_28)))
 (let ((?x21419 (* l_0_7_27 l_0_7_27)))
 (let ((?x21417 (* l_0_7_26 l_0_7_26)))
 (let ((?x21415 (* l_0_7_25 l_0_7_25)))
 (let ((?x21413 (* l_0_7_24 l_0_7_24)))
 (let ((?x22360 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x21413) ?x21415)))
 (let ((?x22367 (- (- (- (- (+ (+ (+ ?x22360 ?x21417) ?x21419) ?x21421) ?x21423) ?x21425) ?x21427) ?x21429)))
 (= (- (- (- ?x22367 ?x21431) ?x21433) ?x21435) 0.0))))))))))))))))
(assert
 (let ((?x19191 (* l_0_7_29 l_0_7_29)))
 (let ((?x19195 (* l_0_7_1 l_0_7_1)))
 (let ((?x21459 (- ?x19195 ?x19191)))
 (= ?x21459 0.0)))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19228 (* ?x19227 l_0_7_30)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21491 (* ?x19488 l_0_7_2)))
 (let ((?x22392 (- (+ ?x21491 (* (* 2.0 l_0_7_141) l_0_7_144)) (* (* 2.0 l_0_7_169) l_0_7_172))))
 (= (- ?x22392 ?x19228) 0.0)))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19306 (* ?x19227 l_0_7_32)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21573 (* ?x19488 l_0_7_4)))
 (= (- ?x21573 ?x19306) 0.0))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19395 (* ?x19227 l_0_7_35)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21650 (* ?x19488 l_0_7_7)))
 (let ((?x21651 (- ?x21650 ?x19395)))
 (= ?x21651 0.0)))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19463 (* ?x19227 l_0_7_39)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x19489 (* ?x19488 l_0_7_11)))
 (let ((?x21687 (- ?x19489 ?x19463)))
 (= ?x21687 0.0)))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19523 (* ?x19227 l_0_7_44)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x19490 (* ?x19488 l_0_7_16)))
 (= (- ?x19490 ?x19523) 0.0))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19603 (* ?x19227 l_0_7_50)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21809 (* ?x19488 l_0_7_22)))
 (let ((?x22425 (- (+ (- ?x21809 ?x19603) (* (* 2.0 l_0_7_57) l_0_7_60)) (* (* 2.0 l_0_7_85) l_0_7_88))))
 (= ?x22425 0.0)))))))
(assert
 (let ((?x19720 (* l_0_7_31 l_0_7_31)))
 (let ((?x19718 (* l_0_7_30 l_0_7_30)))
 (let ((?x19716 (* l_0_7_3 l_0_7_3)))
 (let ((?x19702 (* l_0_7_2 l_0_7_2)))
 (let ((?x22441 (+ (* (* (- 2.0) l_0_7_113) l_0_7_116) (* (* 2.0 l_0_7_142) l_0_7_144))))
 (let ((?x22445 (- (+ ?x22441 (* (* 2.0 l_0_7_143) l_0_7_145)) (* (* 2.0 l_0_7_170) l_0_7_172))))
 (let ((?x22449 (- (- ?x22445 (* (* 2.0 l_0_7_171) l_0_7_173)) (* (* 2.0 l_0_7_197) l_0_7_200))))
 (let ((?x22454 (- (- (+ ?x22449 ?x19702) (* (* 2.0 l_0_7_225) l_0_7_228)) (* (* 2.0 l_0_7_253) l_0_7_256))))
 (= (- (- (+ ?x22454 ?x19716) ?x19718) ?x19720) 0.0))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19821 (* ?x19311 l_0_7_33)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19819 (* ?x19308 l_0_7_32)))
 (let ((?x19816 (* 2.0 l_0_7_3)))
 (let ((?x19817 (* ?x19816 l_0_7_5)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x19787 (* ?x19786 l_0_7_4)))
 (let ((?x22512 (* l_0_7_174 l_0_7_174)))
 (let ((?x22510 (* l_0_7_173 l_0_7_173)))
 (let ((?x22508 (* l_0_7_172 l_0_7_172)))
 (let ((?x22506 (* l_0_7_146 l_0_7_146)))
 (let ((?x22509 (- (+ (+ (* l_0_7_144 l_0_7_144) (* l_0_7_145 l_0_7_145)) ?x22506) ?x22508)))
 (= (- (- (+ (+ (- (- ?x22509 ?x22510) ?x22512) ?x19787) ?x19817) ?x19819) ?x19821) 0.0)))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19964 (* ?x19311 l_0_7_36)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19962 (* ?x19308 l_0_7_35)))
 (let ((?x19816 (* 2.0 l_0_7_3)))
 (let ((?x19960 (* ?x19816 l_0_7_8)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x19922 (* ?x19786 l_0_7_7)))
 (let ((?x22537 (+ (* (* 2.0 l_0_7_144) l_0_7_147) (* (* 2.0 l_0_7_145) l_0_7_148))))
 (let ((?x22541 (- (+ ?x22537 (* (* 2.0 l_0_7_146) l_0_7_149)) (* (* 2.0 l_0_7_172) l_0_7_175))))
 (let ((?x22545 (- (- ?x22541 (* (* 2.0 l_0_7_173) l_0_7_176)) (* (* 2.0 l_0_7_174) l_0_7_177))))
 (= (- (- (+ (+ ?x22545 ?x19922) ?x19960) ?x19962) ?x19964) 0.0)))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x20270 (* ?x19311 l_0_7_45)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x20267 (* ?x19308 l_0_7_44)))
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19306 (* ?x19227 l_0_7_32)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20219 (* ?x20218 l_0_7_3)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20216 (* ?x20215 l_0_7_2)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21573 (* ?x19488 l_0_7_4)))
 (let ((?x22585 (+ (+ ?x21573 (* (* 2.0 l_0_7_144) l_0_7_156)) (* (* 2.0 l_0_7_145) l_0_7_157))))
 (let ((?x22591 (- (+ (+ (+ ?x22585 (* (* 2.0 l_0_7_146) l_0_7_158)) ?x20216) ?x20219) (* (* 2.0 l_0_7_172) l_0_7_184))))
 (let ((?x22595 (- (- ?x22591 (* (* 2.0 l_0_7_173) l_0_7_185)) (* (* 2.0 l_0_7_174) l_0_7_186))))
 (= (- (- (- ?x22595 ?x19306) ?x20267) ?x20270) 0.0)))))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x20464 (* ?x19311 l_0_7_51)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x20462 (* ?x19308 l_0_7_50)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20440 (* ?x20439 l_0_7_3)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x20427 (* ?x19786 l_0_7_22)))
 (let ((?x22634 (+ (* (* 2.0 l_0_7_144) l_0_7_162) (* (* 2.0 l_0_7_145) l_0_7_163))))
 (let ((?x22638 (- (+ ?x22634 (* (* 2.0 l_0_7_146) l_0_7_164)) (* (* 2.0 l_0_7_172) l_0_7_190))))
 (let ((?x22642 (- (- ?x22638 (* (* 2.0 l_0_7_173) l_0_7_191)) (* (* 2.0 l_0_7_174) l_0_7_192))))
 (let ((?x22648 (+ (- (- (+ (+ ?x22642 ?x20427) ?x20440) ?x20462) ?x20464) (* (* 2.0 l_0_7_58) l_0_7_60))))
 (let ((?x22652 (- (+ ?x22648 (* (* 2.0 l_0_7_59) l_0_7_61)) (* (* 2.0 l_0_7_86) l_0_7_88))))
 (= (- ?x22652 (* (* 2.0 l_0_7_87) l_0_7_89)) 0.0)))))))))))))))
(assert
 (let ((?x20611 (* l_0_7_6 l_0_7_6)))
 (let ((?x20609 (* l_0_7_5 l_0_7_5)))
 (let ((?x20607 (* l_0_7_4 l_0_7_4)))
 (let ((?x20605 (* l_0_7_34 l_0_7_34)))
 (let ((?x22080 (+ (- (- (* (- l_0_7_32) l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x20605) ?x20607)))
 (= (+ (+ ?x22080 ?x20609) ?x20611) 0.0)))))))
(assert
 (let ((?x20640 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x20637 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x20634 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20631 (* ?x20630 l_0_7_37)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20628 (* ?x20627 l_0_7_36)))
 (let ((?x22096 (+ (+ (- (- (* (* (- 2.0) l_0_7_32) l_0_7_35) ?x20628) ?x20631) ?x20634) ?x20637)))
 (= (+ ?x22096 ?x20640) 0.0))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20679 (* ?x20630 l_0_7_41)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20677 (* ?x20627 l_0_7_40)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20675 (* ?x20625 l_0_7_39)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x20673 (* ?x20672 l_0_7_6)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x20670 (* ?x19285 l_0_7_5)))
 (let ((?x20701 (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x20670) ?x20673)))
 (= (- (- (- ?x20701 ?x20675) ?x20677) ?x20679) 0.0)))))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20722 (* ?x20630 l_0_7_46)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20719 (* ?x20627 l_0_7_45)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20716 (* ?x20625 l_0_7_44)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x20713 (* ?x20712 l_0_7_6)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20710 (* ?x20218 l_0_7_5)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20702 (* ?x20215 l_0_7_4)))
 (= (- (- (- (+ (+ ?x20702 ?x20710) ?x20713) ?x20716) ?x20719) ?x20722) 0.0))))))))))))))
(assert
 (let ((?x22714 (* l_0_7_90 l_0_7_90)))
 (let ((?x22712 (* l_0_7_89 l_0_7_89)))
 (let ((?x22710 (* l_0_7_88 l_0_7_88)))
 (let ((?x22708 (* l_0_7_62 l_0_7_62)))
 (let ((?x22706 (* l_0_7_61 l_0_7_61)))
 (let ((?x22704 (* l_0_7_60 l_0_7_60)))
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20777 (* ?x20630 l_0_7_52)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20775 (* ?x20627 l_0_7_51)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20773 (* ?x20625 l_0_7_50)))
 (let ((?x20770 (* 2.0 l_0_7_24)))
 (let ((?x20771 (* ?x20770 l_0_7_6)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20768 (* ?x20439 l_0_7_5)))
 (let ((?x22141 (- (- (+ (+ (* (* 2.0 l_0_7_22) l_0_7_4) ?x20768) ?x20771) ?x20773) ?x20775)))
 (let ((?x22142 (- ?x22141 ?x20777)))
 (= (- (- (- (+ (+ (+ ?x22142 ?x22704) ?x22706) ?x22708) ?x22710) ?x22712) ?x22714) 0.0))))))))))))))))))))
(assert
 (let ((?x20817 (* l_0_7_9 l_0_7_9)))
 (let ((?x20815 (* l_0_7_8 l_0_7_8)))
 (let ((?x20813 (* l_0_7_7 l_0_7_7)))
 (let ((?x20811 (* l_0_7_38 l_0_7_38)))
 (let ((?x20809 (* l_0_7_37 l_0_7_37)))
 (let ((?x20807 (* l_0_7_36 l_0_7_36)))
 (let ((?x22158 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x20807) ?x20809)))
 (= (+ (+ (+ (- ?x22158 ?x20811) ?x20813) ?x20815) ?x20817) 0.0)))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20852 (* ?x20851 l_0_7_42)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20849 (* ?x20848 l_0_7_41)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20846 (* ?x20845 l_0_7_40)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20843 (* ?x20842 l_0_7_39)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x20840 (* ?x20672 l_0_7_9)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x20838 (* ?x19285 l_0_7_8)))
 (let ((?x19276 (* 2.0 l_0_7_11)))
 (let ((?x20836 (* ?x19276 l_0_7_7)))
 (let ((?x20876 (* 2.0 l_0_7_10)))
 (let ((?x20878 (* ?x20876 l_0_7_14)))
 (let ((?x22182 (- (- (- (- (+ (+ (+ ?x20878 ?x20836) ?x20838) ?x20840) ?x20843) ?x20846) ?x20849) ?x20852)))
 (= ?x22182 0.0)))))))))))))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20909 (* ?x20851 l_0_7_47)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20906 (* ?x20848 l_0_7_46)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20903 (* ?x20845 l_0_7_45)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20900 (* ?x20842 l_0_7_44)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x20897 (* ?x20712 l_0_7_9)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20895 (* ?x20218 l_0_7_8)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20893 (* ?x20215 l_0_7_7)))
 (let ((?x20876 (* 2.0 l_0_7_10)))
 (let ((?x20880 (* ?x20876 l_0_7_19)))
 (let ((?x22198 (- (- (- (- (+ (+ (+ ?x20880 ?x20893) ?x20895) ?x20897) ?x20900) ?x20903) ?x20906) ?x20909)))
 (= ?x22198 0.0)))))))))))))))))))
(assert
 (let ((?x21040 (* l_0_7_43 l_0_7_43)))
 (let ((?x21038 (* l_0_7_42 l_0_7_42)))
 (let ((?x21036 (* l_0_7_41 l_0_7_41)))
 (let ((?x21034 (* l_0_7_40 l_0_7_40)))
 (let ((?x21032 (* l_0_7_39 l_0_7_39)))
 (let ((?x21030 (* l_0_7_15 l_0_7_15)))
 (let ((?x21028 (* l_0_7_14 l_0_7_14)))
 (let ((?x21026 (* l_0_7_13 l_0_7_13)))
 (let ((?x22238 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x21026) ?x21028)))
 (= (- (- (- (- (- (+ ?x22238 ?x21030) ?x21032) ?x21034) ?x21036) ?x21038) ?x21040) 0.0)))))))))))
(assert
 (let ((?x21097 (* 2.0 l_0_7_43)))
 (let ((?x21098 (* ?x21097 l_0_7_48)))
 (let ((?x21093 (* 2.0 l_0_7_42)))
 (let ((?x21094 (* ?x21093 l_0_7_47)))
 (let ((?x21089 (* 2.0 l_0_7_41)))
 (let ((?x21090 (* ?x21089 l_0_7_46)))
 (let ((?x21085 (* 2.0 l_0_7_40)))
 (let ((?x21086 (* ?x21085 l_0_7_45)))
 (let ((?x21081 (* 2.0 l_0_7_39)))
 (let ((?x21082 (* ?x21081 l_0_7_44)))
 (let ((?x21077 (* 2.0 l_0_7_15)))
 (let ((?x21078 (* ?x21077 l_0_7_20)))
 (let ((?x21073 (* 2.0 l_0_7_14)))
 (let ((?x21074 (* ?x21073 l_0_7_19)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x21070 (* ?x20672 l_0_7_18)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x21067 (* ?x19285 l_0_7_17)))
 (let ((?x21213 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_16) ?x21067) ?x21070) ?x21074) ?x21078)))
 (= (- (- (- (- (- ?x21213 ?x21082) ?x21086) ?x21090) ?x21094) ?x21098) 0.0)))))))))))))))))))))
(assert
 (let ((?x21097 (* 2.0 l_0_7_43)))
 (let ((?x21175 (* ?x21097 l_0_7_54)))
 (let ((?x21093 (* 2.0 l_0_7_42)))
 (let ((?x21173 (* ?x21093 l_0_7_53)))
 (let ((?x21089 (* 2.0 l_0_7_41)))
 (let ((?x21171 (* ?x21089 l_0_7_52)))
 (let ((?x21085 (* 2.0 l_0_7_40)))
 (let ((?x21169 (* ?x21085 l_0_7_51)))
 (let ((?x21081 (* 2.0 l_0_7_39)))
 (let ((?x21167 (* ?x21081 l_0_7_50)))
 (let ((?x21077 (* 2.0 l_0_7_15)))
 (let ((?x21165 (* ?x21077 l_0_7_26)))
 (let ((?x21073 (* 2.0 l_0_7_14)))
 (let ((?x21163 (* ?x21073 l_0_7_25)))
 (let ((?x20672 (* 2.0 l_0_7_13)))
 (let ((?x21161 (* ?x20672 l_0_7_24)))
 (let ((?x19285 (* 2.0 l_0_7_12)))
 (let ((?x21159 (* ?x19285 l_0_7_23)))
 (let ((?x21298 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_22) ?x21159) ?x21161) ?x21163) ?x21165)))
 (let ((?x22277 (- (- (- (- (- ?x21298 ?x21167) ?x21169) ?x21171) ?x21173) ?x21175)))
 (let ((?x22731 (+ (+ ?x22277 (* (* 2.0 l_0_7_60) l_0_7_67)) (* (* 2.0 l_0_7_61) l_0_7_68))))
 (let ((?x22735 (- (+ ?x22731 (* (* 2.0 l_0_7_62) l_0_7_69)) (* (* 2.0 l_0_7_88) l_0_7_95))))
 (let ((?x22739 (- (- ?x22735 (* (* 2.0 l_0_7_89) l_0_7_96)) (* (* 2.0 l_0_7_90) l_0_7_97))))
 (= ?x22739 0.0)))))))))))))))))))))))))
(assert
 (let ((?x21249 (* l_0_7_49 l_0_7_49)))
 (let ((?x21247 (* l_0_7_48 l_0_7_48)))
 (let ((?x21245 (* l_0_7_47 l_0_7_47)))
 (let ((?x21243 (* l_0_7_46 l_0_7_46)))
 (let ((?x21241 (* l_0_7_45 l_0_7_45)))
 (let ((?x21239 (* l_0_7_44 l_0_7_44)))
 (let ((?x21232 (* l_0_7_21 l_0_7_21)))
 (let ((?x21230 (* l_0_7_20 l_0_7_20)))
 (let ((?x21228 (* l_0_7_19 l_0_7_19)))
 (let ((?x21226 (* l_0_7_18 l_0_7_18)))
 (let ((?x22290 (+ (+ (+ (* l_0_7_16 l_0_7_16) (* l_0_7_17 l_0_7_17)) ?x21226) ?x21228)))
 (let ((?x22297 (- (- (- (- (- (+ (+ ?x22290 ?x21230) ?x21232) ?x21239) ?x21241) ?x21243) ?x21245) ?x21247)))
 (= (- ?x22297 ?x21249) 0.0))))))))))))))
(assert
 (let ((?x21335 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x21332 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x21329 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x21326 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x21323 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x21320 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x21312 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x21309 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x21306 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x21303 (* ?x20712 l_0_7_24)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x21301 (* ?x20218 l_0_7_23)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x21299 (* ?x20215 l_0_7_22)))
 (let ((?x22770 (- (* (* (- 2.0) l_0_7_100) l_0_7_88) (* (* 2.0 l_0_7_101) l_0_7_89))))
 (let ((?x22775 (+ (+ (+ (- ?x22770 (* (* 2.0 l_0_7_102) l_0_7_90)) ?x21299) ?x21301) ?x21303)))
 (let ((?x22782 (- (- (- (- (+ (+ (+ ?x22775 ?x21306) ?x21309) ?x21312) ?x21320) ?x21323) ?x21326) ?x21329)))
 (let ((?x22788 (+ (+ (- (- ?x22782 ?x21332) ?x21335) (* (* 2.0 l_0_7_60) l_0_7_72)) (* (* 2.0 l_0_7_61) l_0_7_73))))
 (= (+ ?x22788 (* (* 2.0 l_0_7_62) l_0_7_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x21435 (* l_0_7_56 l_0_7_56)))
 (let ((?x21433 (* l_0_7_55 l_0_7_55)))
 (let ((?x21431 (* l_0_7_54 l_0_7_54)))
 (let ((?x21429 (* l_0_7_53 l_0_7_53)))
 (let ((?x21427 (* l_0_7_52 l_0_7_52)))
 (let ((?x21425 (* l_0_7_51 l_0_7_51)))
 (let ((?x21423 (* l_0_7_50 l_0_7_50)))
 (let ((?x21421 (* l_0_7_28 l_0_7_28)))
 (let ((?x21419 (* l_0_7_27 l_0_7_27)))
 (let ((?x21417 (* l_0_7_26 l_0_7_26)))
 (let ((?x21415 (* l_0_7_25 l_0_7_25)))
 (let ((?x21413 (* l_0_7_24 l_0_7_24)))
 (let ((?x21411 (* l_0_7_23 l_0_7_23)))
 (let ((?x21439 (* l_0_7_22 l_0_7_22)))
 (let ((?x22830 (- (* (* (- 2.0) l_0_7_106) l_0_7_88) (* (* 2.0 l_0_7_107) l_0_7_89))))
 (let ((?x22835 (+ (+ (+ (- ?x22830 (* (* 2.0 l_0_7_108) l_0_7_90)) ?x21439) ?x21411) ?x21413)))
 (let ((?x22842 (- (- (- (+ (+ (+ (+ ?x22835 ?x21415) ?x21417) ?x21419) ?x21421) ?x21423) ?x21425) ?x21427)))
 (let ((?x22848 (+ (- (- (- (- ?x22842 ?x21429) ?x21431) ?x21433) ?x21435) (* (* 2.0 l_0_7_60) l_0_7_78))))
 (let ((?x22852 (+ (+ ?x22848 (* (* 2.0 l_0_7_61) l_0_7_79)) (* (* 2.0 l_0_7_62) l_0_7_80))))
 (= ?x22852 0.0)))))))))))))))))))))
(assert
 (let ((?x19191 (* l_0_7_29 l_0_7_29)))
 (let ((?x22894 (- (+ (* l_0_7_1 l_0_7_1) (* (* 2.0 l_0_7_141) l_0_7_156)) (* (* 2.0 l_0_7_169) l_0_7_184))))
 (= (- ?x22894 ?x19191) 0.0))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19228 (* ?x19227 l_0_7_30)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21491 (* ?x19488 l_0_7_2)))
 (let ((?x22914 (+ (- ?x21491 (* (* 2.0 l_0_7_113) l_0_7_128)) (* (* 2.0 l_0_7_142) l_0_7_156))))
 (let ((?x22918 (- (+ ?x22914 (* (* 2.0 l_0_7_143) l_0_7_157)) (* (* 2.0 l_0_7_170) l_0_7_184))))
 (let ((?x22922 (- (- ?x22918 (* (* 2.0 l_0_7_171) l_0_7_185)) (* (* 2.0 l_0_7_197) l_0_7_212))))
 (let ((?x22926 (- (- ?x22922 (* (* 2.0 l_0_7_225) l_0_7_240)) (* (* 2.0 l_0_7_253) l_0_7_268))))
 (= (- ?x22926 ?x19228) 0.0))))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19395 (* ?x19227 l_0_7_35)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21650 (* ?x19488 l_0_7_7)))
 (let ((?x22976 (+ (+ ?x21650 (* (* 2.0 l_0_7_147) l_0_7_156)) (* (* 2.0 l_0_7_148) l_0_7_157))))
 (let ((?x22980 (+ (+ ?x22976 (* (* 2.0 l_0_7_149) l_0_7_158)) (* (* 2.0 l_0_7_150) l_0_7_159))))
 (let ((?x22984 (- (- ?x22980 (* (* 2.0 l_0_7_175) l_0_7_184)) (* (* 2.0 l_0_7_176) l_0_7_185))))
 (let ((?x22988 (- (- ?x22984 (* (* 2.0 l_0_7_177) l_0_7_186)) (* (* 2.0 l_0_7_178) l_0_7_187))))
 (= (- ?x22988 ?x19395) 0.0))))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19523 (* ?x19227 l_0_7_44)))
 (let ((?x23049 (* l_0_7_189 l_0_7_189)))
 (let ((?x23047 (* l_0_7_188 l_0_7_188)))
 (let ((?x23045 (* l_0_7_187 l_0_7_187)))
 (let ((?x23043 (* l_0_7_186 l_0_7_186)))
 (let ((?x23041 (* l_0_7_185 l_0_7_185)))
 (let ((?x23039 (* l_0_7_184 l_0_7_184)))
 (let ((?x23037 (* l_0_7_161 l_0_7_161)))
 (let ((?x23035 (* l_0_7_160 l_0_7_160)))
 (let ((?x23033 (* l_0_7_159 l_0_7_159)))
 (let ((?x23031 (* l_0_7_158 l_0_7_158)))
 (let ((?x23029 (* l_0_7_157 l_0_7_157)))
 (let ((?x23030 (+ (+ (* (* 2.0 l_0_7_1) l_0_7_16) (* l_0_7_156 l_0_7_156)) ?x23029)))
 (let ((?x23044 (- (- (- (+ (+ (+ (+ ?x23030 ?x23031) ?x23033) ?x23035) ?x23037) ?x23039) ?x23041) ?x23043)))
 (= (- (- (- (- ?x23044 ?x23045) ?x23047) ?x23049) ?x19523) 0.0)))))))))))))))))
(assert
 (let ((?x19227 (* 2.0 l_0_7_29)))
 (let ((?x19603 (* ?x19227 l_0_7_50)))
 (let ((?x19488 (* 2.0 l_0_7_1)))
 (let ((?x21809 (* ?x19488 l_0_7_22)))
 (let ((?x23078 (- (- ?x21809 (* (* 2.0 l_0_7_100) l_0_7_86)) (* (* 2.0 l_0_7_101) l_0_7_87))))
 (let ((?x23084 (+ (+ ?x23078 (* (* 2.0 l_0_7_156) l_0_7_162)) (* (* 2.0 l_0_7_157) l_0_7_163))))
 (let ((?x23090 (+ (+ ?x23084 (* (* 2.0 l_0_7_158) l_0_7_164)) (* (* 2.0 l_0_7_159) l_0_7_165))))
 (let ((?x23096 (+ (+ ?x23090 (* (* 2.0 l_0_7_160) l_0_7_166)) (* (* 2.0 l_0_7_161) l_0_7_167))))
 (let ((?x23102 (- (- ?x23096 (* (* 2.0 l_0_7_184) l_0_7_190)) (* (* 2.0 l_0_7_185) l_0_7_191))))
 (let ((?x23108 (- (- ?x23102 (* (* 2.0 l_0_7_186) l_0_7_192)) (* (* 2.0 l_0_7_187) l_0_7_193))))
 (let ((?x23114 (- (- ?x23108 (* (* 2.0 l_0_7_188) l_0_7_194)) (* (* 2.0 l_0_7_189) l_0_7_195))))
 (let ((?x23119 (+ (+ (- ?x23114 ?x19603) (* (* 2.0 l_0_7_58) l_0_7_72)) (* (* 2.0 l_0_7_59) l_0_7_73))))
 (= ?x23119 0.0))))))))))))))
(assert
 (let ((?x19720 (* l_0_7_31 l_0_7_31)))
 (let ((?x19718 (* l_0_7_30 l_0_7_30)))
 (let ((?x19716 (* l_0_7_3 l_0_7_3)))
 (let ((?x19702 (* l_0_7_2 l_0_7_2)))
 (let ((?x23192 (- (* (* (- 2.0) l_0_7_114) l_0_7_128) (* (* 2.0 l_0_7_115) l_0_7_129))))
 (let ((?x23196 (- (- ?x23192 (* (* 2.0 l_0_7_198) l_0_7_212)) (* (* 2.0 l_0_7_199) l_0_7_213))))
 (let ((?x23201 (- (- (+ ?x23196 ?x19702) (* (* 2.0 l_0_7_226) l_0_7_240)) (* (* 2.0 l_0_7_227) l_0_7_241))))
 (let ((?x23205 (- (- ?x23201 (* (* 2.0 l_0_7_254) l_0_7_268)) (* (* 2.0 l_0_7_255) l_0_7_269))))
 (= (- (- (+ ?x23205 ?x19716) ?x19718) ?x19720) 0.0))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19821 (* ?x19311 l_0_7_33)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19819 (* ?x19308 l_0_7_32)))
 (let ((?x19816 (* 2.0 l_0_7_3)))
 (let ((?x19817 (* ?x19816 l_0_7_5)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x19787 (* ?x19786 l_0_7_4)))
 (let ((?x23263 (- (* (* (- 2.0) l_0_7_116) l_0_7_128) (* (* 2.0 l_0_7_117) l_0_7_129))))
 (let ((?x23268 (- (+ (- ?x23263 (* (* 2.0 l_0_7_118) l_0_7_130)) ?x19787) (* (* 2.0 l_0_7_200) l_0_7_212))))
 (let ((?x23272 (- (- ?x23268 (* (* 2.0 l_0_7_201) l_0_7_213)) (* (* 2.0 l_0_7_202) l_0_7_214))))
 (let ((?x23276 (- (- ?x23272 (* (* 2.0 l_0_7_228) l_0_7_240)) (* (* 2.0 l_0_7_229) l_0_7_241))))
 (let ((?x23280 (- (- ?x23276 (* (* 2.0 l_0_7_230) l_0_7_242)) (* (* 2.0 l_0_7_256) l_0_7_268))))
 (let ((?x23284 (- (- ?x23280 (* (* 2.0 l_0_7_257) l_0_7_269)) (* (* 2.0 l_0_7_258) l_0_7_270))))
 (= (- (- (+ ?x23284 ?x19817) ?x19819) ?x19821) 0.0))))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x19964 (* ?x19311 l_0_7_36)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x19962 (* ?x19308 l_0_7_35)))
 (let ((?x19816 (* 2.0 l_0_7_3)))
 (let ((?x19960 (* ?x19816 l_0_7_8)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x19922 (* ?x19786 l_0_7_7)))
 (let ((?x23366 (- (* (* (- 2.0) l_0_7_119) l_0_7_128) (* (* 2.0 l_0_7_120) l_0_7_129))))
 (let ((?x23370 (- (- ?x23366 (* (* 2.0 l_0_7_121) l_0_7_130)) (* (* 2.0 l_0_7_122) l_0_7_131))))
 (let ((?x23375 (- (- (+ ?x23370 ?x19922) (* (* 2.0 l_0_7_203) l_0_7_212)) (* (* 2.0 l_0_7_204) l_0_7_213))))
 (let ((?x23379 (- (- ?x23375 (* (* 2.0 l_0_7_205) l_0_7_214)) (* (* 2.0 l_0_7_206) l_0_7_215))))
 (let ((?x23383 (- (- ?x23379 (* (* 2.0 l_0_7_231) l_0_7_240)) (* (* 2.0 l_0_7_232) l_0_7_241))))
 (let ((?x23387 (- (- ?x23383 (* (* 2.0 l_0_7_233) l_0_7_242)) (* (* 2.0 l_0_7_234) l_0_7_243))))
 (let ((?x23391 (- (- ?x23387 (* (* 2.0 l_0_7_259) l_0_7_268)) (* (* 2.0 l_0_7_260) l_0_7_269))))
 (let ((?x23395 (- (- ?x23391 (* (* 2.0 l_0_7_261) l_0_7_270)) (* (* 2.0 l_0_7_262) l_0_7_271))))
 (= (- (- (+ ?x23395 ?x19960) ?x19962) ?x19964) 0.0))))))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x20270 (* ?x19311 l_0_7_45)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x20267 (* ?x19308 l_0_7_44)))
 (let ((?x23552 (* l_0_7_273 l_0_7_273)))
 (let ((?x23550 (* l_0_7_272 l_0_7_272)))
 (let ((?x23548 (* l_0_7_271 l_0_7_271)))
 (let ((?x23546 (* l_0_7_270 l_0_7_270)))
 (let ((?x23544 (* l_0_7_269 l_0_7_269)))
 (let ((?x23542 (* l_0_7_268 l_0_7_268)))
 (let ((?x23540 (* l_0_7_245 l_0_7_245)))
 (let ((?x23538 (* l_0_7_244 l_0_7_244)))
 (let ((?x23536 (* l_0_7_243 l_0_7_243)))
 (let ((?x23534 (* l_0_7_242 l_0_7_242)))
 (let ((?x23532 (* l_0_7_241 l_0_7_241)))
 (let ((?x23530 (* l_0_7_240 l_0_7_240)))
 (let ((?x23528 (* l_0_7_217 l_0_7_217)))
 (let ((?x23526 (* l_0_7_216 l_0_7_216)))
 (let ((?x23524 (* l_0_7_215 l_0_7_215)))
 (let ((?x23522 (* l_0_7_214 l_0_7_214)))
 (let ((?x23520 (* l_0_7_213 l_0_7_213)))
 (let ((?x23518 (* l_0_7_212 l_0_7_212)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20219 (* ?x20218 l_0_7_3)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20216 (* ?x20215 l_0_7_2)))
 (let ((?x23503 (- (* (* (- 1.0) l_0_7_128) l_0_7_128) (* (* 1.0 l_0_7_129) l_0_7_129))))
 (let ((?x23509 (- (- ?x23503 (* (* 1.0 l_0_7_130) l_0_7_130)) (* (* 1.0 l_0_7_131) l_0_7_131))))
 (let ((?x23515 (- (- ?x23509 (* (* 1.0 l_0_7_132) l_0_7_132)) (* (* 1.0 l_0_7_133) l_0_7_133))))
 (let ((?x23527 (- (- (- (- (- (+ (+ ?x23515 ?x20216) ?x20219) ?x23518) ?x23520) ?x23522) ?x23524) ?x23526)))
 (let ((?x23541 (- (- (- (- (- (- (- ?x23527 ?x23528) ?x23530) ?x23532) ?x23534) ?x23536) ?x23538) ?x23540)))
 (let ((?x23554 (- (- (- (- (- (- (- ?x23541 ?x23542) ?x23544) ?x23546) ?x23548) ?x23550) ?x23552) ?x20267)))
 (= (- ?x23554 ?x20270) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19311 (* 2.0 l_0_7_31)))
 (let ((?x20464 (* ?x19311 l_0_7_51)))
 (let ((?x19308 (* 2.0 l_0_7_30)))
 (let ((?x20462 (* ?x19308 l_0_7_50)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20440 (* ?x20439 l_0_7_3)))
 (let ((?x19786 (* 2.0 l_0_7_2)))
 (let ((?x20427 (* ?x19786 l_0_7_22)))
 (let ((?x23642 (- (* (* (- 2.0) l_0_7_128) l_0_7_134) (* (* 2.0 l_0_7_129) l_0_7_135))))
 (let ((?x23648 (- (- ?x23642 (* (* 2.0 l_0_7_130) l_0_7_136)) (* (* 2.0 l_0_7_131) l_0_7_137))))
 (let ((?x23654 (- (- ?x23648 (* (* 2.0 l_0_7_132) l_0_7_138)) (* (* 2.0 l_0_7_133) l_0_7_139))))
 (let ((?x23661 (- (- (+ ?x23654 ?x20427) (* (* 2.0 l_0_7_212) l_0_7_218)) (* (* 2.0 l_0_7_213) l_0_7_219))))
 (let ((?x23667 (- (- ?x23661 (* (* 2.0 l_0_7_214) l_0_7_220)) (* (* 2.0 l_0_7_215) l_0_7_221))))
 (let ((?x23673 (- (- ?x23667 (* (* 2.0 l_0_7_216) l_0_7_222)) (* (* 2.0 l_0_7_217) l_0_7_223))))
 (let ((?x23680 (- (- (+ ?x23673 ?x20440) (* (* 2.0 l_0_7_240) l_0_7_246)) (* (* 2.0 l_0_7_241) l_0_7_247))))
 (let ((?x23686 (- (- ?x23680 (* (* 2.0 l_0_7_242) l_0_7_248)) (* (* 2.0 l_0_7_243) l_0_7_249))))
 (let ((?x23692 (- (- ?x23686 (* (* 2.0 l_0_7_244) l_0_7_250)) (* (* 2.0 l_0_7_245) l_0_7_251))))
 (let ((?x23698 (- (- ?x23692 (* (* 2.0 l_0_7_268) l_0_7_274)) (* (* 2.0 l_0_7_269) l_0_7_275))))
 (let ((?x23704 (- (- ?x23698 (* (* 2.0 l_0_7_270) l_0_7_276)) (* (* 2.0 l_0_7_271) l_0_7_277))))
 (let ((?x23710 (- (- ?x23704 (* (* 2.0 l_0_7_272) l_0_7_278)) (* (* 2.0 l_0_7_273) l_0_7_279))))
 (= (- (- ?x23710 ?x20462) ?x20464) 0.0))))))))))))))))))))))
(assert
 (let ((?x20611 (* l_0_7_6 l_0_7_6)))
 (let ((?x20609 (* l_0_7_5 l_0_7_5)))
 (let ((?x20607 (* l_0_7_4 l_0_7_4)))
 (let ((?x20605 (* l_0_7_34 l_0_7_34)))
 (let ((?x22080 (+ (- (- (* (- l_0_7_32) l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x20605) ?x20607)))
 (= (+ (+ ?x22080 ?x20609) ?x20611) 0.0)))))))
(assert
 (let ((?x20640 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x20637 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x20634 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20631 (* ?x20630 l_0_7_37)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20628 (* ?x20627 l_0_7_36)))
 (let ((?x22096 (+ (+ (- (- (* (* (- 2.0) l_0_7_32) l_0_7_35) ?x20628) ?x20631) ?x20634) ?x20637)))
 (= (+ ?x22096 ?x20640) 0.0))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20722 (* ?x20630 l_0_7_46)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20719 (* ?x20627 l_0_7_45)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20716 (* ?x20625 l_0_7_44)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x20713 (* ?x20712 l_0_7_6)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20710 (* ?x20218 l_0_7_5)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20702 (* ?x20215 l_0_7_4)))
 (= (- (- (- (+ (+ ?x20702 ?x20710) ?x20713) ?x20716) ?x20719) ?x20722) 0.0))))))))))))))
(assert
 (let ((?x20630 (* 2.0 l_0_7_34)))
 (let ((?x20777 (* ?x20630 l_0_7_52)))
 (let ((?x20627 (* 2.0 l_0_7_33)))
 (let ((?x20775 (* ?x20627 l_0_7_51)))
 (let ((?x20625 (* 2.0 l_0_7_32)))
 (let ((?x20773 (* ?x20625 l_0_7_50)))
 (let ((?x20770 (* 2.0 l_0_7_24)))
 (let ((?x20771 (* ?x20770 l_0_7_6)))
 (let ((?x20439 (* 2.0 l_0_7_23)))
 (let ((?x20768 (* ?x20439 l_0_7_5)))
 (let ((?x22141 (- (- (+ (+ (* (* 2.0 l_0_7_22) l_0_7_4) ?x20768) ?x20771) ?x20773) ?x20775)))
 (let ((?x22142 (- ?x22141 ?x20777)))
 (= ?x22142 0.0))))))))))))))
(assert
 (let ((?x20817 (* l_0_7_9 l_0_7_9)))
 (let ((?x20815 (* l_0_7_8 l_0_7_8)))
 (let ((?x20813 (* l_0_7_7 l_0_7_7)))
 (let ((?x20811 (* l_0_7_38 l_0_7_38)))
 (let ((?x20809 (* l_0_7_37 l_0_7_37)))
 (let ((?x20807 (* l_0_7_36 l_0_7_36)))
 (let ((?x22158 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x20807) ?x20809)))
 (= (+ (+ (+ (- ?x22158 ?x20811) ?x20813) ?x20815) ?x20817) 0.0)))))))))
(assert
 (let ((?x20851 (* 2.0 l_0_7_38)))
 (let ((?x20909 (* ?x20851 l_0_7_47)))
 (let ((?x20848 (* 2.0 l_0_7_37)))
 (let ((?x20906 (* ?x20848 l_0_7_46)))
 (let ((?x20845 (* 2.0 l_0_7_36)))
 (let ((?x20903 (* ?x20845 l_0_7_45)))
 (let ((?x20842 (* 2.0 l_0_7_35)))
 (let ((?x20900 (* ?x20842 l_0_7_44)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x20897 (* ?x20712 l_0_7_9)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x20895 (* ?x20218 l_0_7_8)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x20893 (* ?x20215 l_0_7_7)))
 (let ((?x20876 (* 2.0 l_0_7_10)))
 (let ((?x20880 (* ?x20876 l_0_7_19)))
 (let ((?x22198 (- (- (- (- (+ (+ (+ ?x20880 ?x20893) ?x20895) ?x20897) ?x20900) ?x20903) ?x20906) ?x20909)))
 (= ?x22198 0.0)))))))))))))))))))
(assert
 (let ((?x21249 (* l_0_7_49 l_0_7_49)))
 (let ((?x21247 (* l_0_7_48 l_0_7_48)))
 (let ((?x21245 (* l_0_7_47 l_0_7_47)))
 (let ((?x21243 (* l_0_7_46 l_0_7_46)))
 (let ((?x21241 (* l_0_7_45 l_0_7_45)))
 (let ((?x21239 (* l_0_7_44 l_0_7_44)))
 (let ((?x21232 (* l_0_7_21 l_0_7_21)))
 (let ((?x21230 (* l_0_7_20 l_0_7_20)))
 (let ((?x21228 (* l_0_7_19 l_0_7_19)))
 (let ((?x21226 (* l_0_7_18 l_0_7_18)))
 (let ((?x22290 (+ (+ (+ (* l_0_7_16 l_0_7_16) (* l_0_7_17 l_0_7_17)) ?x21226) ?x21228)))
 (let ((?x22297 (- (- (- (- (- (+ (+ ?x22290 ?x21230) ?x21232) ?x21239) ?x21241) ?x21243) ?x21245) ?x21247)))
 (= (- ?x22297 ?x21249) 0.0))))))))))))))
(assert
 (let ((?x21335 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x21332 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x21329 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x21326 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x21323 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x21320 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x21312 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x21309 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x21306 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x20712 (* 2.0 l_0_7_18)))
 (let ((?x21303 (* ?x20712 l_0_7_24)))
 (let ((?x20218 (* 2.0 l_0_7_17)))
 (let ((?x21301 (* ?x20218 l_0_7_23)))
 (let ((?x20215 (* 2.0 l_0_7_16)))
 (let ((?x21299 (* ?x20215 l_0_7_22)))
 (let ((?x22326 (- (- (+ (+ (+ (+ (+ ?x21299 ?x21301) ?x21303) ?x21306) ?x21309) ?x21312) ?x21320) ?x21323)))
 (= (- (- (- (- ?x22326 ?x21326) ?x21329) ?x21332) ?x21335) 0.0))))))))))))))))))
(assert
 (let ((?x21435 (* l_0_7_56 l_0_7_56)))
 (let ((?x21433 (* l_0_7_55 l_0_7_55)))
 (let ((?x21431 (* l_0_7_54 l_0_7_54)))
 (let ((?x21429 (* l_0_7_53 l_0_7_53)))
 (let ((?x21427 (* l_0_7_52 l_0_7_52)))
 (let ((?x21425 (* l_0_7_51 l_0_7_51)))
 (let ((?x21423 (* l_0_7_50 l_0_7_50)))
 (let ((?x21421 (* l_0_7_28 l_0_7_28)))
 (let ((?x21419 (* l_0_7_27 l_0_7_27)))
 (let ((?x21417 (* l_0_7_26 l_0_7_26)))
 (let ((?x21415 (* l_0_7_25 l_0_7_25)))
 (let ((?x21413 (* l_0_7_24 l_0_7_24)))
 (let ((?x22360 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x21413) ?x21415)))
 (let ((?x22367 (- (- (- (- (+ (+ (+ ?x22360 ?x21417) ?x21419) ?x21421) ?x21423) ?x21425) ?x21427) ?x21429)))
 (= (- (- (- ?x22367 ?x21431) ?x21433) ?x21435) 0.0))))))))))))))))
(assert
 (= (- (* l_0_7_57 l_0_7_57) (* l_0_7_85 l_0_7_85)) 0.0))
(assert
 (let ((?x23870 (- (* (* 2.0 l_0_7_141) l_0_7_162) (* (* 2.0 l_0_7_169) l_0_7_190))))
 (let ((?x23874 (- (+ ?x23870 (* (* 2.0 l_0_7_57) l_0_7_58)) (* (* 2.0 l_0_7_85) l_0_7_86))))
 (= ?x23874 0.0))))
(assert
 (let ((?x23896 (- (* (* 2.0 l_0_7_57) l_0_7_67) (* (* 2.0 l_0_7_85) l_0_7_95))))
 (= ?x23896 0.0)))
(assert
 (let ((?x23909 (+ (* (* (- 2.0) l_0_7_100) l_0_7_85) (* (* 2.0 l_0_7_57) l_0_7_72))))
 (= ?x23909 0.0)))
(assert
 (let ((?x23915 (+ (* (* (- 2.0) l_0_7_106) l_0_7_85) (* (* 2.0 l_0_7_57) l_0_7_78))))
 (= ?x23915 0.0)))
(assert
 (let ((?x23956 (* l_0_7_196 l_0_7_196)))
 (let ((?x23954 (* l_0_7_195 l_0_7_195)))
 (let ((?x23952 (* l_0_7_194 l_0_7_194)))
 (let ((?x23950 (* l_0_7_193 l_0_7_193)))
 (let ((?x23948 (* l_0_7_192 l_0_7_192)))
 (let ((?x23946 (* l_0_7_191 l_0_7_191)))
 (let ((?x23944 (* l_0_7_190 l_0_7_190)))
 (let ((?x23942 (* l_0_7_168 l_0_7_168)))
 (let ((?x23940 (* l_0_7_167 l_0_7_167)))
 (let ((?x23938 (* l_0_7_166 l_0_7_166)))
 (let ((?x23936 (* l_0_7_165 l_0_7_165)))
 (let ((?x23934 (* l_0_7_164 l_0_7_164)))
 (let ((?x23932 (* l_0_7_163 l_0_7_163)))
 (let ((?x23930 (* l_0_7_162 l_0_7_162)))
 (let ((?x23925 (- (* (* (- 2.0) l_0_7_106) l_0_7_86) (* (* 2.0 l_0_7_107) l_0_7_87))))
 (let ((?x23943 (+ (+ (+ (+ (+ (+ (+ ?x23925 ?x23930) ?x23932) ?x23934) ?x23936) ?x23938) ?x23940) ?x23942)))
 (let ((?x23957 (- (- (- (- (- (- (- ?x23943 ?x23944) ?x23946) ?x23948) ?x23950) ?x23952) ?x23954) ?x23956)))
 (let ((?x23961 (+ (+ ?x23957 (* (* 2.0 l_0_7_58) l_0_7_78)) (* (* 2.0 l_0_7_59) l_0_7_79))))
 (= ?x23961 0.0))))))))))))))))))))
(assert
 (let ((?x24016 (* l_0_7_99 l_0_7_99)))
 (let ((?x24014 (* l_0_7_98 l_0_7_98)))
 (let ((?x24012 (* l_0_7_97 l_0_7_97)))
 (let ((?x24010 (* l_0_7_96 l_0_7_96)))
 (let ((?x24008 (* l_0_7_95 l_0_7_95)))
 (let ((?x24006 (* l_0_7_71 l_0_7_71)))
 (let ((?x24004 (* l_0_7_70 l_0_7_70)))
 (let ((?x24002 (* l_0_7_69 l_0_7_69)))
 (let ((?x24005 (+ (+ (+ (* l_0_7_67 l_0_7_67) (* l_0_7_68 l_0_7_68)) ?x24002) ?x24004)))
 (= (- (- (- (- (- (+ ?x24005 ?x24006) ?x24008) ?x24010) ?x24012) ?x24014) ?x24016) 0.0)))))))))))
(assert
 (let ((?x24038 (- (* (* (- 2.0) l_0_7_100) l_0_7_95) (* (* 2.0 l_0_7_101) l_0_7_96))))
 (let ((?x24042 (- (- ?x24038 (* (* 2.0 l_0_7_102) l_0_7_97)) (* (* 2.0 l_0_7_103) l_0_7_98))))
 (let ((?x24048 (+ (- ?x24042 (* (* 2.0 l_0_7_104) l_0_7_99)) (* (* 2.0 l_0_7_67) l_0_7_72))))
 (let ((?x24054 (+ (+ ?x24048 (* (* 2.0 l_0_7_68) l_0_7_73)) (* (* 2.0 l_0_7_69) l_0_7_74))))
 (let ((?x24060 (+ (+ ?x24054 (* (* 2.0 l_0_7_70) l_0_7_75)) (* (* 2.0 l_0_7_71) l_0_7_76))))
 (= ?x24060 0.0)))))))
(assert
 (let ((?x24093 (- (* (* (- 2.0) l_0_7_106) l_0_7_95) (* (* 2.0 l_0_7_107) l_0_7_96))))
 (let ((?x24107 (- (- ?x24093 (* (* 2.0 l_0_7_108) l_0_7_97)) (* (* 2.0 l_0_7_109) l_0_7_98))))
 (let ((?x24112 (+ (- ?x24107 (* (* 2.0 l_0_7_110) l_0_7_99)) (* (* 2.0 l_0_7_67) l_0_7_78))))
 (let ((?x24116 (+ (+ ?x24112 (* (* 2.0 l_0_7_68) l_0_7_79)) (* (* 2.0 l_0_7_69) l_0_7_80))))
 (let ((?x24120 (+ (+ ?x24116 (* (* 2.0 l_0_7_70) l_0_7_81)) (* (* 2.0 l_0_7_71) l_0_7_82))))
 (= ?x24120 0.0)))))))
(assert
 (let ((?x24183 (* l_0_7_77 l_0_7_77)))
 (let ((?x24181 (* l_0_7_76 l_0_7_76)))
 (let ((?x24179 (* l_0_7_75 l_0_7_75)))
 (let ((?x24177 (* l_0_7_74 l_0_7_74)))
 (let ((?x24175 (* l_0_7_73 l_0_7_73)))
 (let ((?x24173 (* l_0_7_72 l_0_7_72)))
 (let ((?x24171 (* l_0_7_105 l_0_7_105)))
 (let ((?x24169 (* l_0_7_104 l_0_7_104)))
 (let ((?x24167 (* l_0_7_103 l_0_7_103)))
 (let ((?x24157 (* l_0_7_102 l_0_7_102)))
 (let ((?x24158 (- (- (* (- l_0_7_100) l_0_7_100) (* l_0_7_101 l_0_7_101)) ?x24157)))
 (let ((?x24180 (+ (+ (+ (+ (- (- (- ?x24158 ?x24167) ?x24169) ?x24171) ?x24173) ?x24175) ?x24177) ?x24179)))
 (= (+ (+ ?x24180 ?x24181) ?x24183) 0.0))))))))))))))
(assert
 (let ((?x24214 (- (* (* (- 2.0) l_0_7_100) l_0_7_106) (* (* 2.0 l_0_7_101) l_0_7_107))))
 (let ((?x24218 (- (- ?x24214 (* (* 2.0 l_0_7_102) l_0_7_108)) (* (* 2.0 l_0_7_103) l_0_7_109))))
 (let ((?x24223 (- (- ?x24218 (* (* 2.0 l_0_7_104) l_0_7_110)) (* (* 2.0 l_0_7_105) l_0_7_111))))
 (let ((?x24229 (+ (+ ?x24223 (* (* 2.0 l_0_7_72) l_0_7_78)) (* (* 2.0 l_0_7_73) l_0_7_79))))
 (let ((?x24235 (+ (+ ?x24229 (* (* 2.0 l_0_7_74) l_0_7_80)) (* (* 2.0 l_0_7_75) l_0_7_81))))
 (let ((?x24241 (+ (+ ?x24235 (* (* 2.0 l_0_7_76) l_0_7_82)) (* (* 2.0 l_0_7_77) l_0_7_83))))
 (= ?x24241 0.0))))))))
(assert
 (let ((?x24316 (* l_0_7_84 l_0_7_84)))
 (let ((?x24314 (* l_0_7_83 l_0_7_83)))
 (let ((?x24312 (* l_0_7_82 l_0_7_82)))
 (let ((?x24310 (* l_0_7_81 l_0_7_81)))
 (let ((?x24308 (* l_0_7_80 l_0_7_80)))
 (let ((?x24306 (* l_0_7_79 l_0_7_79)))
 (let ((?x24304 (* l_0_7_78 l_0_7_78)))
 (let ((?x24302 (* l_0_7_112 l_0_7_112)))
 (let ((?x24300 (* l_0_7_111 l_0_7_111)))
 (let ((?x24298 (* l_0_7_110 l_0_7_110)))
 (let ((?x24287 (* l_0_7_109 l_0_7_109)))
 (let ((?x24284 (* l_0_7_108 l_0_7_108)))
 (let ((?x24286 (- (- (* (- l_0_7_106) l_0_7_106) (* l_0_7_107 l_0_7_107)) ?x24284)))
 (let ((?x24309 (+ (+ (+ (- (- (- (- ?x24286 ?x24287) ?x24298) ?x24300) ?x24302) ?x24304) ?x24306) ?x24308)))
 (= (+ (+ (+ (+ ?x24309 ?x24310) ?x24312) ?x24314) ?x24316) 0.0))))))))))))))))
(assert
 (let ((?x24359 (* l_0_7_253 l_0_7_253)))
 (let ((?x24357 (* l_0_7_225 l_0_7_225)))
 (let ((?x24355 (* l_0_7_197 l_0_7_197)))
 (let ((?x24352 (+ (* (* (- 1.0) l_0_7_113) l_0_7_113) (* (* 2.0 l_0_7_141) l_0_7_142))))
 (let ((?x24360 (- (- (- (- ?x24352 (* (* 2.0 l_0_7_169) l_0_7_170)) ?x24355) ?x24357) ?x24359)))
 (= ?x24360 0.0)))))))
(assert
 (let ((?x24387 (+ (* (* (- 2.0) l_0_7_113) l_0_7_119) (* (* 2.0 l_0_7_142) l_0_7_147))))
 (let ((?x24391 (- (+ ?x24387 (* (* 2.0 l_0_7_143) l_0_7_148)) (* (* 2.0 l_0_7_170) l_0_7_175))))
 (let ((?x24395 (- (- ?x24391 (* (* 2.0 l_0_7_171) l_0_7_176)) (* (* 2.0 l_0_7_197) l_0_7_203))))
 (let ((?x24399 (- (- ?x24395 (* (* 2.0 l_0_7_225) l_0_7_231)) (* (* 2.0 l_0_7_253) l_0_7_259))))
 (= ?x24399 0.0))))))
(assert
 (let ((?x24445 (- (* (* (- 2.0) l_0_7_114) l_0_7_116) (* (* 2.0 l_0_7_115) l_0_7_117))))
 (let ((?x24449 (- (- ?x24445 (* (* 2.0 l_0_7_198) l_0_7_200)) (* (* 2.0 l_0_7_199) l_0_7_201))))
 (let ((?x24453 (- (- ?x24449 (* (* 2.0 l_0_7_226) l_0_7_228)) (* (* 2.0 l_0_7_227) l_0_7_229))))
 (let ((?x24457 (- (- ?x24453 (* (* 2.0 l_0_7_254) l_0_7_256)) (* (* 2.0 l_0_7_255) l_0_7_257))))
 (= ?x24457 0.0))))))
(assert
 (let ((?x24508 (- (* (* (- 2.0) l_0_7_114) l_0_7_119) (* (* 2.0 l_0_7_115) l_0_7_120))))
 (let ((?x24512 (- (- ?x24508 (* (* 2.0 l_0_7_198) l_0_7_203)) (* (* 2.0 l_0_7_199) l_0_7_204))))
 (let ((?x24516 (- (- ?x24512 (* (* 2.0 l_0_7_226) l_0_7_231)) (* (* 2.0 l_0_7_227) l_0_7_232))))
 (let ((?x24520 (- (- ?x24516 (* (* 2.0 l_0_7_254) l_0_7_259)) (* (* 2.0 l_0_7_255) l_0_7_260))))
 (= ?x24520 0.0))))))
(assert
 (let ((?x24571 (- (* (* (- 2.0) l_0_7_114) l_0_7_134) (* (* 2.0 l_0_7_115) l_0_7_135))))
 (let ((?x24575 (- (- ?x24571 (* (* 2.0 l_0_7_198) l_0_7_218)) (* (* 2.0 l_0_7_199) l_0_7_219))))
 (let ((?x24579 (- (- ?x24575 (* (* 2.0 l_0_7_226) l_0_7_246)) (* (* 2.0 l_0_7_227) l_0_7_247))))
 (let ((?x24583 (- (- ?x24579 (* (* 2.0 l_0_7_254) l_0_7_274)) (* (* 2.0 l_0_7_255) l_0_7_275))))
 (= ?x24583 0.0))))))
(assert
 (let ((?x24656 (* l_0_7_258 l_0_7_258)))
 (let ((?x24654 (* l_0_7_257 l_0_7_257)))
 (let ((?x24652 (* l_0_7_256 l_0_7_256)))
 (let ((?x24650 (* l_0_7_230 l_0_7_230)))
 (let ((?x24648 (* l_0_7_229 l_0_7_229)))
 (let ((?x24646 (* l_0_7_228 l_0_7_228)))
 (let ((?x24644 (* l_0_7_202 l_0_7_202)))
 (let ((?x24642 (* l_0_7_201 l_0_7_201)))
 (let ((?x24640 (* l_0_7_200 l_0_7_200)))
 (let ((?x24636 (- (* (* (- 1.0) l_0_7_116) l_0_7_116) (* (* 1.0 l_0_7_117) l_0_7_117))))
 (let ((?x24645 (- (- (- (- ?x24636 (* (* 1.0 l_0_7_118) l_0_7_118)) ?x24640) ?x24642) ?x24644)))
 (= (- (- (- (- (- (- ?x24645 ?x24646) ?x24648) ?x24650) ?x24652) ?x24654) ?x24656) 0.0)))))))))))))
(assert
 (let ((?x24699 (- (* (* (- 2.0) l_0_7_116) l_0_7_119) (* (* 2.0 l_0_7_117) l_0_7_120))))
 (let ((?x24703 (- (- ?x24699 (* (* 2.0 l_0_7_118) l_0_7_121)) (* (* 2.0 l_0_7_200) l_0_7_203))))
 (let ((?x24707 (- (- ?x24703 (* (* 2.0 l_0_7_201) l_0_7_204)) (* (* 2.0 l_0_7_202) l_0_7_205))))
 (let ((?x24711 (- (- ?x24707 (* (* 2.0 l_0_7_228) l_0_7_231)) (* (* 2.0 l_0_7_229) l_0_7_232))))
 (let ((?x24715 (- (- ?x24711 (* (* 2.0 l_0_7_230) l_0_7_233)) (* (* 2.0 l_0_7_256) l_0_7_259))))
 (let ((?x24719 (- (- ?x24715 (* (* 2.0 l_0_7_257) l_0_7_260)) (* (* 2.0 l_0_7_258) l_0_7_261))))
 (= ?x24719 0.0))))))))
(assert
 (let ((?x24794 (- (* (* (- 2.0) l_0_7_116) l_0_7_134) (* (* 2.0 l_0_7_117) l_0_7_135))))
 (let ((?x24798 (- (- ?x24794 (* (* 2.0 l_0_7_118) l_0_7_136)) (* (* 2.0 l_0_7_200) l_0_7_218))))
 (let ((?x24802 (- (- ?x24798 (* (* 2.0 l_0_7_201) l_0_7_219)) (* (* 2.0 l_0_7_202) l_0_7_220))))
 (let ((?x24806 (- (- ?x24802 (* (* 2.0 l_0_7_228) l_0_7_246)) (* (* 2.0 l_0_7_229) l_0_7_247))))
 (let ((?x24810 (- (- ?x24806 (* (* 2.0 l_0_7_230) l_0_7_248)) (* (* 2.0 l_0_7_256) l_0_7_274))))
 (let ((?x24814 (- (- ?x24810 (* (* 2.0 l_0_7_257) l_0_7_275)) (* (* 2.0 l_0_7_258) l_0_7_276))))
 (= ?x24814 0.0))))))))
(assert
 (let ((?x24920 (* l_0_7_262 l_0_7_262)))
 (let ((?x24918 (* l_0_7_261 l_0_7_261)))
 (let ((?x24916 (* l_0_7_260 l_0_7_260)))
 (let ((?x24914 (* l_0_7_259 l_0_7_259)))
 (let ((?x24912 (* l_0_7_234 l_0_7_234)))
 (let ((?x24910 (* l_0_7_233 l_0_7_233)))
 (let ((?x24908 (* l_0_7_232 l_0_7_232)))
 (let ((?x24906 (* l_0_7_231 l_0_7_231)))
 (let ((?x24904 (* l_0_7_206 l_0_7_206)))
 (let ((?x24902 (* l_0_7_205 l_0_7_205)))
 (let ((?x24900 (* l_0_7_204 l_0_7_204)))
 (let ((?x24898 (* l_0_7_203 l_0_7_203)))
 (let ((?x24891 (- (* (* (- 1.0) l_0_7_119) l_0_7_119) (* (* 1.0 l_0_7_120) l_0_7_120))))
 (let ((?x24897 (- (- ?x24891 (* (* 1.0 l_0_7_121) l_0_7_121)) (* (* 1.0 l_0_7_122) l_0_7_122))))
 (let ((?x24911 (- (- (- (- (- (- (- ?x24897 ?x24898) ?x24900) ?x24902) ?x24904) ?x24906) ?x24908) ?x24910)))
 (= (- (- (- (- (- ?x24911 ?x24912) ?x24914) ?x24916) ?x24918) ?x24920) 0.0)))))))))))))))))
(assert
 (let ((?x25034 (* l_0_7_280 l_0_7_280)))
 (let ((?x25032 (* l_0_7_279 l_0_7_279)))
 (let ((?x25030 (* l_0_7_278 l_0_7_278)))
 (let ((?x25028 (* l_0_7_277 l_0_7_277)))
 (let ((?x25026 (* l_0_7_276 l_0_7_276)))
 (let ((?x25024 (* l_0_7_275 l_0_7_275)))
 (let ((?x25022 (* l_0_7_274 l_0_7_274)))
 (let ((?x25020 (* l_0_7_252 l_0_7_252)))
 (let ((?x25018 (* l_0_7_251 l_0_7_251)))
 (let ((?x25016 (* l_0_7_250 l_0_7_250)))
 (let ((?x25014 (* l_0_7_249 l_0_7_249)))
 (let ((?x25012 (* l_0_7_248 l_0_7_248)))
 (let ((?x25010 (* l_0_7_247 l_0_7_247)))
 (let ((?x25008 (* l_0_7_246 l_0_7_246)))
 (let ((?x25006 (* l_0_7_224 l_0_7_224)))
 (let ((?x25004 (* l_0_7_223 l_0_7_223)))
 (let ((?x25002 (* l_0_7_222 l_0_7_222)))
 (let ((?x25000 (* l_0_7_221 l_0_7_221)))
 (let ((?x24998 (* l_0_7_220 l_0_7_220)))
 (let ((?x24996 (* l_0_7_219 l_0_7_219)))
 (let ((?x24994 (* l_0_7_218 l_0_7_218)))
 (let ((?x24978 (- (* (* (- 1.0) l_0_7_134) l_0_7_134) (* (* 1.0 l_0_7_135) l_0_7_135))))
 (let ((?x24984 (- (- ?x24978 (* (* 1.0 l_0_7_136) l_0_7_136)) (* (* 1.0 l_0_7_137) l_0_7_137))))
 (let ((?x24990 (- (- ?x24984 (* (* 1.0 l_0_7_138) l_0_7_138)) (* (* 1.0 l_0_7_139) l_0_7_139))))
 (let ((?x24999 (- (- (- (- ?x24990 (* (* 1.0 l_0_7_140) l_0_7_140)) ?x24994) ?x24996) ?x24998)))
 (let ((?x25013 (- (- (- (- (- (- (- ?x24999 ?x25000) ?x25002) ?x25004) ?x25006) ?x25008) ?x25010) ?x25012)))
 (let ((?x25027 (- (- (- (- (- (- (- ?x25013 ?x25014) ?x25016) ?x25018) ?x25020) ?x25022) ?x25024) ?x25026)))
 (= (- (- (- (- ?x25027 ?x25028) ?x25030) ?x25032) ?x25034) 0.0)))))))))))))))))))))))))))))
(assert
 (= (- (* l_0_7_141 l_0_7_141) (* l_0_7_169 l_0_7_169)) 0.0))
(assert
 (let ((?x25136 (- (* (* 2.0 l_0_7_141) l_0_7_147) (* (* 2.0 l_0_7_169) l_0_7_175))))
 (= ?x25136 0.0)))
(assert
 (let ((?x25160 (* l_0_7_178 l_0_7_178)))
 (let ((?x25158 (* l_0_7_177 l_0_7_177)))
 (let ((?x25156 (* l_0_7_176 l_0_7_176)))
 (let ((?x25154 (* l_0_7_175 l_0_7_175)))
 (let ((?x25152 (* l_0_7_150 l_0_7_150)))
 (let ((?x25150 (* l_0_7_149 l_0_7_149)))
 (let ((?x25153 (+ (+ (+ (* l_0_7_147 l_0_7_147) (* l_0_7_148 l_0_7_148)) ?x25150) ?x25152)))
 (= (- (- (- (- ?x25153 ?x25154) ?x25156) ?x25158) ?x25160) 0.0)))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_28 0.0))
(assert
 (>= l_0_7_29 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_34 0.0))
(assert
 (>= l_0_7_38 0.0))
(assert
 (>= l_0_7_43 0.0))
(assert
 (>= l_0_7_49 0.0))
(assert
 (>= l_0_7_56 0.0))
(assert
 (>= l_0_7_57 0.0))
(assert
 (>= l_0_7_59 0.0))
(assert
 (>= l_0_7_62 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_71 0.0))
(assert
 (>= l_0_7_77 0.0))
(assert
 (>= l_0_7_84 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_87 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_94 0.0))
(assert
 (>= l_0_7_99 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (>= l_0_7_112 0.0))
(assert
 (>= l_0_7_113 0.0))
(assert
 (>= l_0_7_115 0.0))
(assert
 (>= l_0_7_118 0.0))
(assert
 (>= l_0_7_122 0.0))
(assert
 (>= l_0_7_127 0.0))
(assert
 (>= l_0_7_133 0.0))
(assert
 (>= l_0_7_140 0.0))
(assert
 (>= l_0_7_141 0.0))
(assert
 (>= l_0_7_143 0.0))
(assert
 (>= l_0_7_146 0.0))
(assert
 (>= l_0_7_150 0.0))
(assert
 (>= l_0_7_155 0.0))
(assert
 (>= l_0_7_161 0.0))
(assert
 (>= l_0_7_168 0.0))
(assert
 (>= l_0_7_169 0.0))
(assert
 (>= l_0_7_171 0.0))
(assert
 (>= l_0_7_174 0.0))
(assert
 (>= l_0_7_178 0.0))
(assert
 (>= l_0_7_183 0.0))
(assert
 (>= l_0_7_189 0.0))
(assert
 (>= l_0_7_196 0.0))
(assert
 (>= l_0_7_197 0.0))
(assert
 (>= l_0_7_199 0.0))
(assert
 (>= l_0_7_202 0.0))
(assert
 (>= l_0_7_206 0.0))
(assert
 (>= l_0_7_211 0.0))
(assert
 (>= l_0_7_217 0.0))
(assert
 (>= l_0_7_224 0.0))
(assert
 (>= l_0_7_225 0.0))
(assert
 (>= l_0_7_227 0.0))
(assert
 (>= l_0_7_230 0.0))
(assert
 (>= l_0_7_234 0.0))
(assert
 (>= l_0_7_239 0.0))
(assert
 (>= l_0_7_245 0.0))
(assert
 (>= l_0_7_252 0.0))
(assert
 (>= l_0_7_253 0.0))
(assert
 (>= l_0_7_255 0.0))
(assert
 (>= l_0_7_258 0.0))
(assert
 (>= l_0_7_262 0.0))
(assert
 (>= l_0_7_267 0.0))
(assert
 (>= l_0_7_273 0.0))
(assert
 (>= l_0_7_280 0.0))
(assert
 (let ((?x25279 (* l_0_8_87 l_0_8_87)))
 (let ((?x25277 (* l_0_8_86 l_0_8_86)))
 (let ((?x25275 (* l_0_8_59 l_0_8_59)))
 (let ((?x25273 (* l_0_8_58 l_0_8_58)))
 (let ((?x25251 (+ (* (* (- 2.0) l_0_8_113) l_0_8_134) (* (* 2.0 l_0_8_142) l_0_8_162))))
 (let ((?x25257 (- (+ ?x25251 (* (* 2.0 l_0_8_143) l_0_8_163)) (* (* 2.0 l_0_8_170) l_0_8_190))))
 (let ((?x25263 (- (- ?x25257 (* (* 2.0 l_0_8_171) l_0_8_191)) (* (* 2.0 l_0_8_197) l_0_8_218))))
 (let ((?x25269 (- (- ?x25263 (* (* 2.0 l_0_8_225) l_0_8_246)) (* (* 2.0 l_0_8_253) l_0_8_274))))
 (let ((?x25278 (- (+ (+ (- ?x25269 (* (* 2.0 l_0_8_281) l_0_8_302)) ?x25273) ?x25275) ?x25277)))
 (= (+ (- ?x25278 ?x25279) 1.0) 0.0)))))))))))
(assert
 (let ((?x25341 (* l_0_8_171 l_0_8_171)))
 (let ((?x25339 (* l_0_8_170 l_0_8_170)))
 (let ((?x25337 (* l_0_8_143 l_0_8_143)))
 (let ((?x25338 (+ (+ (* (* (- 2.0) l_0_8_113) l_0_8_114) (* l_0_8_142 l_0_8_142)) ?x25337)))
 (let ((?x25346 (- (- (- (- ?x25338 ?x25339) ?x25341) (* (* 2.0 l_0_8_197) l_0_8_198)) (* (* 2.0 l_0_8_225) l_0_8_226))))
 (let ((?x25350 (- (- ?x25346 (* (* 2.0 l_0_8_253) l_0_8_254)) (* (* 2.0 l_0_8_281) l_0_8_282))))
 (= (+ ?x25350 1.0) 0.0))))))))
(assert
 (let ((?x25406 (* l_0_8_283 l_0_8_283)))
 (let ((?x25404 (* l_0_8_282 l_0_8_282)))
 (let ((?x25402 (* l_0_8_255 l_0_8_255)))
 (let ((?x25400 (* l_0_8_254 l_0_8_254)))
 (let ((?x25398 (* l_0_8_227 l_0_8_227)))
 (let ((?x25396 (* l_0_8_226 l_0_8_226)))
 (let ((?x25394 (* l_0_8_199 l_0_8_199)))
 (let ((?x25392 (* l_0_8_198 l_0_8_198)))
 (let ((?x25391 (- (* (* (- 1.0) l_0_8_114) l_0_8_114) (* (* 1.0 l_0_8_115) l_0_8_115))))
 (let ((?x25405 (- (- (- (- (- (- (- ?x25391 ?x25392) ?x25394) ?x25396) ?x25398) ?x25400) ?x25402) ?x25404)))
 (= (- ?x25405 ?x25406) 0.0))))))))))))
(assert
 (let ((?x25448 (* l_0_8_29 l_0_8_29)))
 (let ((?x25447 (- (+ (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_141) l_0_8_151)) (* (* 2.0 l_0_8_169) l_0_8_179))))
 (= (+ ?x25447 ?x25448) 0.0))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25487 (* ?x25486 l_0_8_30)))
 (let ((?x25469 (- (* (* (- 2.0) l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_113) l_0_8_123))))
 (let ((?x25473 (+ (+ ?x25469 (* (* 2.0 l_0_8_142) l_0_8_151)) (* (* 2.0 l_0_8_143) l_0_8_152))))
 (let ((?x25477 (- (- ?x25473 (* (* 2.0 l_0_8_170) l_0_8_179)) (* (* 2.0 l_0_8_171) l_0_8_180))))
 (let ((?x25481 (- (- ?x25477 (* (* 2.0 l_0_8_197) l_0_8_207)) (* (* 2.0 l_0_8_225) l_0_8_235))))
 (let ((?x25485 (- (- ?x25481 (* (* 2.0 l_0_8_253) l_0_8_263)) (* (* 2.0 l_0_8_281) l_0_8_291))))
 (= (+ ?x25485 ?x25487) 0.0)))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x25577 (* ?x25576 l_0_8_40)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x25574 (* ?x25573 l_0_8_39)))
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25571 (* ?x25486 l_0_8_32)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x25551 (* ?x25550 l_0_8_3)))
 (let ((?x25541 (* 2.0 l_0_8_11)))
 (let ((?x25548 (* ?x25541 l_0_8_2)))
 (let ((?x25555 (+ (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x25548) ?x25551) (* (* 2.0 l_0_8_144) l_0_8_151))))
 (let ((?x25561 (+ (+ ?x25555 (* (* 2.0 l_0_8_145) l_0_8_152)) (* (* 2.0 l_0_8_146) l_0_8_153))))
 (let ((?x25567 (- (- ?x25561 (* (* 2.0 l_0_8_172) l_0_8_179)) (* (* 2.0 l_0_8_173) l_0_8_180))))
 (let ((?x25578 (- (- (+ (- ?x25567 (* (* 2.0 l_0_8_174) l_0_8_181)) ?x25571) ?x25574) ?x25577)))
 (= ?x25578 0.0))))))))))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25660 (* ?x25486 l_0_8_35)))
 (let ((?x25638 (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) (* (* 2.0 l_0_8_147) l_0_8_151))))
 (let ((?x25644 (+ (+ ?x25638 (* (* 2.0 l_0_8_148) l_0_8_152)) (* (* 2.0 l_0_8_149) l_0_8_153))))
 (let ((?x25650 (- (+ ?x25644 (* (* 2.0 l_0_8_150) l_0_8_154)) (* (* 2.0 l_0_8_175) l_0_8_179))))
 (let ((?x25656 (- (- ?x25650 (* (* 2.0 l_0_8_176) l_0_8_180)) (* (* 2.0 l_0_8_177) l_0_8_181))))
 (= (+ (- ?x25656 (* (* 2.0 l_0_8_178) l_0_8_182)) ?x25660) 0.0))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25728 (* ?x25486 l_0_8_39)))
 (let ((?x25726 (* l_0_8_183 l_0_8_183)))
 (let ((?x25724 (* l_0_8_182 l_0_8_182)))
 (let ((?x25722 (* l_0_8_181 l_0_8_181)))
 (let ((?x25720 (* l_0_8_180 l_0_8_180)))
 (let ((?x25718 (* l_0_8_179 l_0_8_179)))
 (let ((?x25716 (* l_0_8_155 l_0_8_155)))
 (let ((?x25714 (* l_0_8_154 l_0_8_154)))
 (let ((?x25712 (* l_0_8_153 l_0_8_153)))
 (let ((?x25710 (* l_0_8_152 l_0_8_152)))
 (let ((?x25711 (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) (* l_0_8_151 l_0_8_151)) ?x25710)))
 (let ((?x25725 (- (- (- (- (+ (+ (+ ?x25711 ?x25712) ?x25714) ?x25716) ?x25718) ?x25720) ?x25722) ?x25724)))
 (= (+ (- ?x25725 ?x25726) ?x25728) 0.0)))))))))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25788 (* ?x25486 l_0_8_44)))
 (let ((?x25728 (* ?x25486 l_0_8_39)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x25755 (* ?x25753 l_0_8_16)))
 (let ((?x25754 (* ?x25753 l_0_8_11)))
 (let ((?x25762 (+ (+ (- ?x25754 ?x25755) (* (* 2.0 l_0_8_151) l_0_8_156)) (* (* 2.0 l_0_8_152) l_0_8_157))))
 (let ((?x25768 (+ (+ ?x25762 (* (* 2.0 l_0_8_153) l_0_8_158)) (* (* 2.0 l_0_8_154) l_0_8_159))))
 (let ((?x25774 (- (+ ?x25768 (* (* 2.0 l_0_8_155) l_0_8_160)) (* (* 2.0 l_0_8_179) l_0_8_184))))
 (let ((?x25780 (- (- ?x25774 (* (* 2.0 l_0_8_180) l_0_8_185)) (* (* 2.0 l_0_8_181) l_0_8_186))))
 (let ((?x25786 (- (- ?x25780 (* (* 2.0 l_0_8_182) l_0_8_187)) (* (* 2.0 l_0_8_183) l_0_8_188))))
 (= (+ (- ?x25786 ?x25728) ?x25788) 0.0)))))))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25868 (* ?x25486 l_0_8_50)))
 (let ((?x25849 (+ (* (* (- 2.0) l_0_8_1) l_0_8_22) (* (* 2.0 l_0_8_151) l_0_8_162))))
 (let ((?x25853 (+ (+ ?x25849 (* (* 2.0 l_0_8_152) l_0_8_163)) (* (* 2.0 l_0_8_153) l_0_8_164))))
 (let ((?x25857 (+ (+ ?x25853 (* (* 2.0 l_0_8_154) l_0_8_165)) (* (* 2.0 l_0_8_155) l_0_8_166))))
 (let ((?x25861 (- (- ?x25857 (* (* 2.0 l_0_8_179) l_0_8_190)) (* (* 2.0 l_0_8_180) l_0_8_191))))
 (let ((?x25865 (- (- ?x25861 (* (* 2.0 l_0_8_181) l_0_8_192)) (* (* 2.0 l_0_8_182) l_0_8_193))))
 (let ((?x25872 (+ (+ (- ?x25865 (* (* 2.0 l_0_8_183) l_0_8_194)) ?x25868) (* (* 2.0 l_0_8_58) l_0_8_67))))
 (let ((?x25878 (- (+ ?x25872 (* (* 2.0 l_0_8_59) l_0_8_68)) (* (* 2.0 l_0_8_86) l_0_8_95))))
 (= (- ?x25878 (* (* 2.0 l_0_8_87) l_0_8_96)) 0.0)))))))))))
(assert
 (let ((?x25991 (* l_0_8_31 l_0_8_31)))
 (let ((?x25989 (* l_0_8_30 l_0_8_30)))
 (let ((?x25987 (* l_0_8_3 l_0_8_3)))
 (let ((?x25967 (* l_0_8_2 l_0_8_2)))
 (let ((?x25960 (- (* (* (- 2.0) l_0_8_114) l_0_8_123) (* (* 2.0 l_0_8_115) l_0_8_124))))
 (let ((?x25966 (- (- ?x25960 (* (* 2.0 l_0_8_198) l_0_8_207)) (* (* 2.0 l_0_8_199) l_0_8_208))))
 (let ((?x25974 (- (- (- ?x25966 ?x25967) (* (* 2.0 l_0_8_226) l_0_8_235)) (* (* 2.0 l_0_8_227) l_0_8_236))))
 (let ((?x25980 (- (- ?x25974 (* (* 2.0 l_0_8_254) l_0_8_263)) (* (* 2.0 l_0_8_255) l_0_8_264))))
 (let ((?x25986 (- (- ?x25980 (* (* 2.0 l_0_8_282) l_0_8_291)) (* (* 2.0 l_0_8_283) l_0_8_292))))
 (= (+ (+ (- ?x25986 ?x25987) ?x25989) ?x25991) 0.0)))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26113 (* ?x25576 l_0_8_33)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26111 (* ?x25573 l_0_8_32)))
 (let ((?x26108 (* 2.0 l_0_8_3)))
 (let ((?x26109 (* ?x26108 l_0_8_5)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26070 (* ?x26069 l_0_8_4)))
 (let ((?x26065 (- (* (* (- 2.0) l_0_8_116) l_0_8_123) (* (* 2.0 l_0_8_117) l_0_8_124))))
 (let ((?x26074 (- (- (- ?x26065 (* (* 2.0 l_0_8_118) l_0_8_125)) ?x26070) (* (* 2.0 l_0_8_200) l_0_8_207))))
 (let ((?x26080 (- (- ?x26074 (* (* 2.0 l_0_8_201) l_0_8_208)) (* (* 2.0 l_0_8_202) l_0_8_209))))
 (let ((?x26086 (- (- ?x26080 (* (* 2.0 l_0_8_228) l_0_8_235)) (* (* 2.0 l_0_8_229) l_0_8_236))))
 (let ((?x26092 (- (- ?x26086 (* (* 2.0 l_0_8_230) l_0_8_237)) (* (* 2.0 l_0_8_256) l_0_8_263))))
 (let ((?x26098 (- (- ?x26092 (* (* 2.0 l_0_8_257) l_0_8_264)) (* (* 2.0 l_0_8_258) l_0_8_265))))
 (let ((?x26104 (- (- ?x26098 (* (* 2.0 l_0_8_284) l_0_8_291)) (* (* 2.0 l_0_8_285) l_0_8_292))))
 (let ((?x26114 (+ (+ (- (- ?x26104 (* (* 2.0 l_0_8_286) l_0_8_293)) ?x26109) ?x26111) ?x26113)))
 (= ?x26114 0.0))))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26286 (* ?x25576 l_0_8_36)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26284 (* ?x25573 l_0_8_35)))
 (let ((?x26108 (* 2.0 l_0_8_3)))
 (let ((?x26282 (* ?x26108 l_0_8_8)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26232 (* ?x26069 l_0_8_7)))
 (let ((?x26225 (- (* (* (- 2.0) l_0_8_119) l_0_8_123) (* (* 2.0 l_0_8_120) l_0_8_124))))
 (let ((?x26231 (- (- ?x26225 (* (* 2.0 l_0_8_121) l_0_8_125)) (* (* 2.0 l_0_8_122) l_0_8_126))))
 (let ((?x26239 (- (- (- ?x26231 ?x26232) (* (* 2.0 l_0_8_203) l_0_8_207)) (* (* 2.0 l_0_8_204) l_0_8_208))))
 (let ((?x26245 (- (- ?x26239 (* (* 2.0 l_0_8_205) l_0_8_209)) (* (* 2.0 l_0_8_206) l_0_8_210))))
 (let ((?x26251 (- (- ?x26245 (* (* 2.0 l_0_8_231) l_0_8_235)) (* (* 2.0 l_0_8_232) l_0_8_236))))
 (let ((?x26257 (- (- ?x26251 (* (* 2.0 l_0_8_233) l_0_8_237)) (* (* 2.0 l_0_8_234) l_0_8_238))))
 (let ((?x26263 (- (- ?x26257 (* (* 2.0 l_0_8_259) l_0_8_263)) (* (* 2.0 l_0_8_260) l_0_8_264))))
 (let ((?x26269 (- (- ?x26263 (* (* 2.0 l_0_8_261) l_0_8_265)) (* (* 2.0 l_0_8_262) l_0_8_266))))
 (let ((?x26275 (- (- ?x26269 (* (* 2.0 l_0_8_287) l_0_8_291)) (* (* 2.0 l_0_8_288) l_0_8_292))))
 (let ((?x26281 (- (- ?x26275 (* (* 2.0 l_0_8_289) l_0_8_293)) (* (* 2.0 l_0_8_290) l_0_8_294))))
 (= (+ (+ (- ?x26281 ?x26282) ?x26284) ?x26286) 0.0))))))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x25577 (* ?x25576 l_0_8_40)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x25574 (* ?x25573 l_0_8_39)))
 (let ((?x26480 (* l_0_8_295 l_0_8_295)))
 (let ((?x26478 (* l_0_8_294 l_0_8_294)))
 (let ((?x26476 (* l_0_8_293 l_0_8_293)))
 (let ((?x26474 (* l_0_8_292 l_0_8_292)))
 (let ((?x26472 (* l_0_8_291 l_0_8_291)))
 (let ((?x26470 (* l_0_8_267 l_0_8_267)))
 (let ((?x26468 (* l_0_8_266 l_0_8_266)))
 (let ((?x26466 (* l_0_8_265 l_0_8_265)))
 (let ((?x26464 (* l_0_8_264 l_0_8_264)))
 (let ((?x26462 (* l_0_8_263 l_0_8_263)))
 (let ((?x26460 (* l_0_8_239 l_0_8_239)))
 (let ((?x26458 (* l_0_8_238 l_0_8_238)))
 (let ((?x26456 (* l_0_8_237 l_0_8_237)))
 (let ((?x26454 (* l_0_8_236 l_0_8_236)))
 (let ((?x26452 (* l_0_8_235 l_0_8_235)))
 (let ((?x26450 (* l_0_8_211 l_0_8_211)))
 (let ((?x26448 (* l_0_8_210 l_0_8_210)))
 (let ((?x26446 (* l_0_8_209 l_0_8_209)))
 (let ((?x26444 (* l_0_8_208 l_0_8_208)))
 (let ((?x26442 (* l_0_8_207 l_0_8_207)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x25551 (* ?x25550 l_0_8_3)))
 (let ((?x26429 (- (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x25551) (* (* 1.0 l_0_8_123) l_0_8_123))))
 (let ((?x26435 (- (- ?x26429 (* (* 1.0 l_0_8_124) l_0_8_124)) (* (* 1.0 l_0_8_125) l_0_8_125))))
 (let ((?x26441 (- (- ?x26435 (* (* 1.0 l_0_8_126) l_0_8_126)) (* (* 1.0 l_0_8_127) l_0_8_127))))
 (let ((?x26455 (- (- (- (- (- (- (- ?x26441 ?x26442) ?x26444) ?x26446) ?x26448) ?x26450) ?x26452) ?x26454)))
 (let ((?x26469 (- (- (- (- (- (- (- ?x26455 ?x26456) ?x26458) ?x26460) ?x26462) ?x26464) ?x26466) ?x26468)))
 (let ((?x26482 (+ (- (- (- (- (- (- ?x26469 ?x26470) ?x26472) ?x26474) ?x26476) ?x26478) ?x26480) ?x25574)))
 (= (+ ?x26482 ?x25577) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26656 (* ?x25576 l_0_8_45)))
 (let ((?x25577 (* ?x25576 l_0_8_40)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26653 (* ?x25573 l_0_8_44)))
 (let ((?x25574 (* ?x25573 l_0_8_39)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x26590 (* ?x26589 l_0_8_3)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x26587 (* ?x26586 l_0_8_2)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x25551 (* ?x25550 l_0_8_3)))
 (let ((?x25541 (* 2.0 l_0_8_11)))
 (let ((?x25548 (* ?x25541 l_0_8_2)))
 (let ((?x26576 (- (- (+ ?x25548 ?x25551) (* (* 2.0 l_0_8_123) l_0_8_128)) (* (* 2.0 l_0_8_124) l_0_8_129))))
 (let ((?x26582 (- (- ?x26576 (* (* 2.0 l_0_8_125) l_0_8_130)) (* (* 2.0 l_0_8_126) l_0_8_131))))
 (let ((?x26594 (- (- (- (- ?x26582 (* (* 2.0 l_0_8_127) l_0_8_132)) ?x26587) ?x26590) (* (* 2.0 l_0_8_207) l_0_8_212))))
 (let ((?x26600 (- (- ?x26594 (* (* 2.0 l_0_8_208) l_0_8_213)) (* (* 2.0 l_0_8_209) l_0_8_214))))
 (let ((?x26606 (- (- ?x26600 (* (* 2.0 l_0_8_210) l_0_8_215)) (* (* 2.0 l_0_8_211) l_0_8_216))))
 (let ((?x26612 (- (- ?x26606 (* (* 2.0 l_0_8_235) l_0_8_240)) (* (* 2.0 l_0_8_236) l_0_8_241))))
 (let ((?x26618 (- (- ?x26612 (* (* 2.0 l_0_8_237) l_0_8_242)) (* (* 2.0 l_0_8_238) l_0_8_243))))
 (let ((?x26624 (- (- ?x26618 (* (* 2.0 l_0_8_239) l_0_8_244)) (* (* 2.0 l_0_8_263) l_0_8_268))))
 (let ((?x26630 (- (- ?x26624 (* (* 2.0 l_0_8_264) l_0_8_269)) (* (* 2.0 l_0_8_265) l_0_8_270))))
 (let ((?x26636 (- (- ?x26630 (* (* 2.0 l_0_8_266) l_0_8_271)) (* (* 2.0 l_0_8_267) l_0_8_272))))
 (let ((?x26642 (- (- ?x26636 (* (* 2.0 l_0_8_291) l_0_8_296)) (* (* 2.0 l_0_8_292) l_0_8_297))))
 (let ((?x26648 (- (- ?x26642 (* (* 2.0 l_0_8_293) l_0_8_298)) (* (* 2.0 l_0_8_294) l_0_8_299))))
 (let ((?x26655 (- (+ (- (- ?x26648 (* (* 2.0 l_0_8_295) l_0_8_300)) ?x25574) ?x26653) ?x25577)))
 (= (+ ?x26655 ?x26656) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26890 (* ?x25576 l_0_8_51)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26888 (* ?x25573 l_0_8_50)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x26856 (* ?x26855 l_0_8_3)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26843 (* ?x26069 l_0_8_22)))
 (let ((?x26836 (- (* (* (- 2.0) l_0_8_123) l_0_8_134) (* (* 2.0 l_0_8_124) l_0_8_135))))
 (let ((?x26840 (- (- ?x26836 (* (* 2.0 l_0_8_125) l_0_8_136)) (* (* 2.0 l_0_8_126) l_0_8_137))))
 (let ((?x26846 (- (- (- ?x26840 (* (* 2.0 l_0_8_127) l_0_8_138)) ?x26843) (* (* 2.0 l_0_8_207) l_0_8_218))))
 (let ((?x26850 (- (- ?x26846 (* (* 2.0 l_0_8_208) l_0_8_219)) (* (* 2.0 l_0_8_209) l_0_8_220))))
 (let ((?x26854 (- (- ?x26850 (* (* 2.0 l_0_8_210) l_0_8_221)) (* (* 2.0 l_0_8_211) l_0_8_222))))
 (let ((?x26861 (- (- (- ?x26854 ?x26856) (* (* 2.0 l_0_8_235) l_0_8_246)) (* (* 2.0 l_0_8_236) l_0_8_247))))
 (let ((?x26865 (- (- ?x26861 (* (* 2.0 l_0_8_237) l_0_8_248)) (* (* 2.0 l_0_8_238) l_0_8_249))))
 (let ((?x26869 (- (- ?x26865 (* (* 2.0 l_0_8_239) l_0_8_250)) (* (* 2.0 l_0_8_263) l_0_8_274))))
 (let ((?x26873 (- (- ?x26869 (* (* 2.0 l_0_8_264) l_0_8_275)) (* (* 2.0 l_0_8_265) l_0_8_276))))
 (let ((?x26877 (- (- ?x26873 (* (* 2.0 l_0_8_266) l_0_8_277)) (* (* 2.0 l_0_8_267) l_0_8_278))))
 (let ((?x26881 (- (- ?x26877 (* (* 2.0 l_0_8_291) l_0_8_302)) (* (* 2.0 l_0_8_292) l_0_8_303))))
 (let ((?x26885 (- (- ?x26881 (* (* 2.0 l_0_8_293) l_0_8_304)) (* (* 2.0 l_0_8_294) l_0_8_305))))
 (= (+ (+ (- ?x26885 (* (* 2.0 l_0_8_295) l_0_8_306)) ?x26888) ?x26890) 0.0))))))))))))))))))))))
(assert
 (let ((?x27067 (* l_0_8_6 l_0_8_6)))
 (let ((?x27065 (* l_0_8_5 l_0_8_5)))
 (let ((?x27063 (* l_0_8_4 l_0_8_4)))
 (let ((?x27061 (* l_0_8_34 l_0_8_34)))
 (let ((?x27064 (- (+ (+ (* l_0_8_32 l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x27061) ?x27063)))
 (= (- (- ?x27064 ?x27065) ?x27067) 0.0)))))))
(assert
 (let ((?x27096 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x27093 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x27090 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27087 (* ?x27086 l_0_8_37)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27084 (* ?x27083 l_0_8_36)))
 (let ((?x27094 (- (- (+ (+ (* (* 2.0 l_0_8_32) l_0_8_35) ?x27084) ?x27087) ?x27090) ?x27093)))
 (= (- ?x27094 ?x27096) 0.0))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27135 (* ?x27086 l_0_8_41)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27133 (* ?x27083 l_0_8_40)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27131 (* ?x27081 l_0_8_39)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27129 (* ?x27128 l_0_8_6)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27126 (* ?x25550 l_0_8_5)))
 (let ((?x27134 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x27126) ?x27129) ?x27131) ?x27133)))
 (= (+ ?x27134 ?x27135) 0.0)))))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27178 (* ?x27086 l_0_8_46)))
 (let ((?x27135 (* ?x27086 l_0_8_41)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27175 (* ?x27083 l_0_8_45)))
 (let ((?x27133 (* ?x27083 l_0_8_40)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27172 (* ?x27081 l_0_8_44)))
 (let ((?x27131 (* ?x27081 l_0_8_39)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27169 (* ?x27168 l_0_8_6)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27166 (* ?x26589 l_0_8_5)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27158 (* ?x26586 l_0_8_4)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27129 (* ?x27128 l_0_8_6)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27126 (* ?x25550 l_0_8_5)))
 (let ((?x27157 (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x27126) ?x27129)))
 (let ((?x27176 (+ (- (+ (- (- (- (- ?x27157 ?x27158) ?x27166) ?x27169) ?x27131) ?x27172) ?x27133) ?x27175)))
 (= (+ (- ?x27176 ?x27135) ?x27178) 0.0)))))))))))))))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27233 (* ?x27086 l_0_8_52)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27231 (* ?x27083 l_0_8_51)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27229 (* ?x27081 l_0_8_50)))
 (let ((?x27226 (* 2.0 l_0_8_24)))
 (let ((?x27227 (* ?x27226 l_0_8_6)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x27224 (* ?x26855 l_0_8_5)))
 (let ((?x27232 (+ (+ (- (- (* (* (- 2.0) l_0_8_22) l_0_8_4) ?x27224) ?x27227) ?x27229) ?x27231)))
 (= (+ ?x27232 ?x27233) 0.0)))))))))))))
(assert
 (let ((?x27273 (* l_0_8_9 l_0_8_9)))
 (let ((?x27271 (* l_0_8_8 l_0_8_8)))
 (let ((?x27269 (* l_0_8_7 l_0_8_7)))
 (let ((?x27267 (* l_0_8_38 l_0_8_38)))
 (let ((?x27265 (* l_0_8_37 l_0_8_37)))
 (let ((?x27263 (* l_0_8_36 l_0_8_36)))
 (let ((?x27266 (+ (+ (+ (* (- l_0_8_10) l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x27263) ?x27265)))
 (= (- (- (- (+ ?x27266 ?x27267) ?x27269) ?x27271) ?x27273) 0.0)))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27308 (* ?x27307 l_0_8_42)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27305 (* ?x27304 l_0_8_41)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27302 (* ?x27301 l_0_8_40)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27299 (* ?x27298 l_0_8_39)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27296 (* ?x27128 l_0_8_9)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27294 (* ?x25550 l_0_8_8)))
 (let ((?x25541 (* 2.0 l_0_8_11)))
 (let ((?x27292 (* ?x25541 l_0_8_7)))
 (let ((?x27300 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x27292) ?x27294) ?x27296) ?x27299)))
 (= (+ (+ (+ ?x27300 ?x27302) ?x27305) ?x27308) 0.0)))))))))))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27365 (* ?x27307 l_0_8_47)))
 (let ((?x27308 (* ?x27307 l_0_8_42)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27362 (* ?x27304 l_0_8_46)))
 (let ((?x27305 (* ?x27304 l_0_8_41)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27359 (* ?x27301 l_0_8_45)))
 (let ((?x27302 (* ?x27301 l_0_8_40)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27356 (* ?x27298 l_0_8_44)))
 (let ((?x27299 (* ?x27298 l_0_8_39)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27353 (* ?x27168 l_0_8_9)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27351 (* ?x26589 l_0_8_8)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27349 (* ?x26586 l_0_8_7)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27296 (* ?x27128 l_0_8_9)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27294 (* ?x25550 l_0_8_8)))
 (let ((?x25541 (* 2.0 l_0_8_11)))
 (let ((?x27292 (* ?x25541 l_0_8_7)))
 (let ((?x27332 (* 2.0 l_0_8_10)))
 (let ((?x27336 (* ?x27332 l_0_8_19)))
 (let ((?x27334 (* ?x27332 l_0_8_14)))
 (let ((?x27354 (- (- (- (+ (+ (+ (- ?x27334 ?x27336) ?x27292) ?x27294) ?x27296) ?x27349) ?x27351) ?x27353)))
 (let ((?x27364 (- (+ (- (+ (- (+ (- ?x27354 ?x27299) ?x27356) ?x27302) ?x27359) ?x27305) ?x27362) ?x27308)))
 (= (+ ?x27364 ?x27365) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27440 (* ?x27307 l_0_8_53)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27438 (* ?x27304 l_0_8_52)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27436 (* ?x27301 l_0_8_51)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27434 (* ?x27298 l_0_8_50)))
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x25577 (* ?x25576 l_0_8_40)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x25574 (* ?x25573 l_0_8_39)))
 (let ((?x27226 (* 2.0 l_0_8_24)))
 (let ((?x27430 (* ?x27226 l_0_8_9)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x27428 (* ?x26855 l_0_8_8)))
 (let ((?x27425 (* 2.0 l_0_8_22)))
 (let ((?x27426 (* ?x27425 l_0_8_7)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x25551 (* ?x25550 l_0_8_3)))
 (let ((?x25541 (* 2.0 l_0_8_11)))
 (let ((?x25548 (* ?x25541 l_0_8_2)))
 (let ((?x27429 (- (- (+ (+ (* (* (- 2.0) l_0_8_10) l_0_8_25) ?x25548) ?x25551) ?x27426) ?x27428)))
 (let ((?x27441 (+ (+ (+ (+ (- (- (- ?x27429 ?x27430) ?x25574) ?x25577) ?x27434) ?x27436) ?x27438) ?x27440)))
 (= ?x27441 0.0))))))))))))))))))))))))))
(assert
 (let ((?x27496 (* l_0_8_43 l_0_8_43)))
 (let ((?x27494 (* l_0_8_42 l_0_8_42)))
 (let ((?x27492 (* l_0_8_41 l_0_8_41)))
 (let ((?x27490 (* l_0_8_40 l_0_8_40)))
 (let ((?x27488 (* l_0_8_39 l_0_8_39)))
 (let ((?x27486 (* l_0_8_15 l_0_8_15)))
 (let ((?x27484 (* l_0_8_14 l_0_8_14)))
 (let ((?x27482 (* l_0_8_13 l_0_8_13)))
 (let ((?x27485 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x27482) ?x27484)))
 (= (+ (+ (+ (+ (+ (- ?x27485 ?x27486) ?x27488) ?x27490) ?x27492) ?x27494) ?x27496) 0.0)))))))))))
(assert
 (let ((?x27496 (* l_0_8_43 l_0_8_43)))
 (let ((?x27553 (* 2.0 l_0_8_43)))
 (let ((?x27554 (* ?x27553 l_0_8_48)))
 (let ((?x27494 (* l_0_8_42 l_0_8_42)))
 (let ((?x27549 (* 2.0 l_0_8_42)))
 (let ((?x27550 (* ?x27549 l_0_8_47)))
 (let ((?x27492 (* l_0_8_41 l_0_8_41)))
 (let ((?x27545 (* 2.0 l_0_8_41)))
 (let ((?x27546 (* ?x27545 l_0_8_46)))
 (let ((?x27490 (* l_0_8_40 l_0_8_40)))
 (let ((?x27541 (* 2.0 l_0_8_40)))
 (let ((?x27542 (* ?x27541 l_0_8_45)))
 (let ((?x27488 (* l_0_8_39 l_0_8_39)))
 (let ((?x27537 (* 2.0 l_0_8_39)))
 (let ((?x27538 (* ?x27537 l_0_8_44)))
 (let ((?x27486 (* l_0_8_15 l_0_8_15)))
 (let ((?x27533 (* 2.0 l_0_8_15)))
 (let ((?x27534 (* ?x27533 l_0_8_20)))
 (let ((?x27484 (* l_0_8_14 l_0_8_14)))
 (let ((?x27529 (* 2.0 l_0_8_14)))
 (let ((?x27530 (* ?x27529 l_0_8_19)))
 (let ((?x27482 (* l_0_8_13 l_0_8_13)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27526 (* ?x27128 l_0_8_18)))
 (let ((?x27480 (* l_0_8_12 l_0_8_12)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27523 (* ?x25550 l_0_8_17)))
 (let ((?x27524 (- (+ (* (* (- 2.0) l_0_8_11) l_0_8_16) (* l_0_8_11 l_0_8_11)) ?x27523)))
 (let ((?x27536 (+ (- (+ (- (+ (- (+ ?x27524 ?x27480) ?x27526) ?x27482) ?x27530) ?x27484) ?x27534) ?x27486)))
 (let ((?x27551 (+ (- (+ (- (+ (- (+ ?x27536 ?x27538) ?x27488) ?x27542) ?x27490) ?x27546) ?x27492) ?x27550)))
 (= (- (+ (- ?x27551 ?x27494) ?x27554) ?x27496) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x27553 (* 2.0 l_0_8_43)))
 (let ((?x27631 (* ?x27553 l_0_8_54)))
 (let ((?x27549 (* 2.0 l_0_8_42)))
 (let ((?x27629 (* ?x27549 l_0_8_53)))
 (let ((?x27545 (* 2.0 l_0_8_41)))
 (let ((?x27627 (* ?x27545 l_0_8_52)))
 (let ((?x27541 (* 2.0 l_0_8_40)))
 (let ((?x27625 (* ?x27541 l_0_8_51)))
 (let ((?x27537 (* 2.0 l_0_8_39)))
 (let ((?x27623 (* ?x27537 l_0_8_50)))
 (let ((?x27533 (* 2.0 l_0_8_15)))
 (let ((?x27621 (* ?x27533 l_0_8_26)))
 (let ((?x27529 (* 2.0 l_0_8_14)))
 (let ((?x27619 (* ?x27529 l_0_8_25)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27617 (* ?x27128 l_0_8_24)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27615 (* ?x25550 l_0_8_23)))
 (let ((?x27622 (- (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_22) ?x27615) ?x27617) ?x27619) ?x27621)))
 (= (+ (+ (+ (+ (+ ?x27622 ?x27623) ?x27625) ?x27627) ?x27629) ?x27631) 0.0)))))))))))))))))))))
(assert
 (let ((?x27705 (* l_0_8_49 l_0_8_49)))
 (let ((?x27703 (* l_0_8_48 l_0_8_48)))
 (let ((?x27701 (* l_0_8_47 l_0_8_47)))
 (let ((?x27699 (* l_0_8_46 l_0_8_46)))
 (let ((?x27697 (* l_0_8_45 l_0_8_45)))
 (let ((?x27695 (* l_0_8_44 l_0_8_44)))
 (let ((?x27553 (* 2.0 l_0_8_43)))
 (let ((?x27554 (* ?x27553 l_0_8_48)))
 (let ((?x27549 (* 2.0 l_0_8_42)))
 (let ((?x27550 (* ?x27549 l_0_8_47)))
 (let ((?x27545 (* 2.0 l_0_8_41)))
 (let ((?x27546 (* ?x27545 l_0_8_46)))
 (let ((?x27541 (* 2.0 l_0_8_40)))
 (let ((?x27542 (* ?x27541 l_0_8_45)))
 (let ((?x27537 (* 2.0 l_0_8_39)))
 (let ((?x27538 (* ?x27537 l_0_8_44)))
 (let ((?x27688 (* l_0_8_21 l_0_8_21)))
 (let ((?x27686 (* l_0_8_20 l_0_8_20)))
 (let ((?x27684 (* l_0_8_19 l_0_8_19)))
 (let ((?x27682 (* l_0_8_18 l_0_8_18)))
 (let ((?x27680 (* l_0_8_17 l_0_8_17)))
 (let ((?x27670 (* l_0_8_16 l_0_8_16)))
 (let ((?x27533 (* 2.0 l_0_8_15)))
 (let ((?x27534 (* ?x27533 l_0_8_20)))
 (let ((?x27529 (* 2.0 l_0_8_14)))
 (let ((?x27530 (* ?x27529 l_0_8_19)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27526 (* ?x27128 l_0_8_18)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27523 (* ?x25550 l_0_8_17)))
 (let ((?x27669 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_16) ?x27523) ?x27526) ?x27530) ?x27534)))
 (let ((?x27690 (- (- (- (- (- (- (- ?x27669 ?x27670) ?x27680) ?x27682) ?x27684) ?x27686) ?x27688) ?x27538)))
 (let ((?x27700 (+ (+ (+ (- (- (- (- ?x27690 ?x27542) ?x27546) ?x27550) ?x27554) ?x27695) ?x27697) ?x27699)))
 (= (+ (+ (+ ?x27700 ?x27701) ?x27703) ?x27705) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27791 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x27788 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x27785 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x27782 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x27779 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x27776 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x27553 (* 2.0 l_0_8_43)))
 (let ((?x27631 (* ?x27553 l_0_8_54)))
 (let ((?x27549 (* 2.0 l_0_8_42)))
 (let ((?x27629 (* ?x27549 l_0_8_53)))
 (let ((?x27545 (* 2.0 l_0_8_41)))
 (let ((?x27627 (* ?x27545 l_0_8_52)))
 (let ((?x27541 (* 2.0 l_0_8_40)))
 (let ((?x27625 (* ?x27541 l_0_8_51)))
 (let ((?x27537 (* 2.0 l_0_8_39)))
 (let ((?x27623 (* ?x27537 l_0_8_50)))
 (let ((?x27768 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x27765 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x27762 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27759 (* ?x27168 l_0_8_24)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27757 (* ?x26589 l_0_8_23)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27755 (* ?x26586 l_0_8_22)))
 (let ((?x27533 (* 2.0 l_0_8_15)))
 (let ((?x27621 (* ?x27533 l_0_8_26)))
 (let ((?x27529 (* 2.0 l_0_8_14)))
 (let ((?x27619 (* ?x27529 l_0_8_25)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27617 (* ?x27128 l_0_8_24)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27615 (* ?x25550 l_0_8_23)))
 (let ((?x27754 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_22) ?x27615) ?x27617) ?x27619) ?x27621)))
 (let ((?x27770 (- (- (- (- (- (- (- ?x27754 ?x27755) ?x27757) ?x27759) ?x27762) ?x27765) ?x27768) ?x27623)))
 (let ((?x27783 (+ (+ (+ (- (- (- (- ?x27770 ?x27625) ?x27627) ?x27629) ?x27631) ?x27776) ?x27779) ?x27782)))
 (= (+ (+ (+ ?x27783 ?x27785) ?x27788) ?x27791) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27891 (* l_0_8_56 l_0_8_56)))
 (let ((?x27889 (* l_0_8_55 l_0_8_55)))
 (let ((?x27887 (* l_0_8_54 l_0_8_54)))
 (let ((?x27885 (* l_0_8_53 l_0_8_53)))
 (let ((?x27883 (* l_0_8_52 l_0_8_52)))
 (let ((?x27881 (* l_0_8_51 l_0_8_51)))
 (let ((?x27879 (* l_0_8_50 l_0_8_50)))
 (let ((?x27877 (* l_0_8_28 l_0_8_28)))
 (let ((?x27875 (* l_0_8_27 l_0_8_27)))
 (let ((?x27873 (* l_0_8_26 l_0_8_26)))
 (let ((?x27871 (* l_0_8_25 l_0_8_25)))
 (let ((?x27869 (* l_0_8_24 l_0_8_24)))
 (let ((?x27872 (- (- (- (* (- l_0_8_22) l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x27869) ?x27871)))
 (let ((?x27886 (+ (+ (+ (+ (- (- (- ?x27872 ?x27873) ?x27875) ?x27877) ?x27879) ?x27881) ?x27883) ?x27885)))
 (= (+ (+ (+ ?x27886 ?x27887) ?x27889) ?x27891) 0.0))))))))))))))))
(assert
 (let ((?x25448 (* l_0_8_29 l_0_8_29)))
 (let ((?x25452 (* l_0_8_1 l_0_8_1)))
 (let ((?x27915 (- ?x25452 ?x25448)))
 (let ((?x27930 (- (+ ?x27915 (* (* 2.0 l_0_8_57) l_0_8_63)) (* (* 2.0 l_0_8_85) l_0_8_91))))
 (= ?x27930 0.0))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25487 (* ?x25486 l_0_8_30)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x27947 (* ?x25753 l_0_8_2)))
 (let ((?x27951 (+ (+ ?x27947 (* (* 2.0 l_0_8_147) l_0_8_162)) (* (* 2.0 l_0_8_148) l_0_8_163))))
 (let ((?x27955 (+ (+ ?x27951 (* (* 2.0 l_0_8_149) l_0_8_164)) (* (* 2.0 l_0_8_150) l_0_8_165))))
 (let ((?x27959 (- (- ?x27955 (* (* 2.0 l_0_8_175) l_0_8_190)) (* (* 2.0 l_0_8_176) l_0_8_191))))
 (let ((?x27963 (- (- ?x27959 (* (* 2.0 l_0_8_177) l_0_8_192)) (* (* 2.0 l_0_8_178) l_0_8_193))))
 (let ((?x27968 (+ (+ (- ?x27963 ?x25487) (* (* 2.0 l_0_8_58) l_0_8_63)) (* (* 2.0 l_0_8_59) l_0_8_64))))
 (let ((?x27972 (- (- ?x27968 (* (* 2.0 l_0_8_86) l_0_8_91)) (* (* 2.0 l_0_8_87) l_0_8_92))))
 (= ?x27972 0.0))))))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27440 (* ?x27307 l_0_8_53)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27438 (* ?x27304 l_0_8_52)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27436 (* ?x27301 l_0_8_51)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27434 (* ?x27298 l_0_8_50)))
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25571 (* ?x25486 l_0_8_32)))
 (let ((?x27226 (* 2.0 l_0_8_24)))
 (let ((?x27430 (* ?x27226 l_0_8_9)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x27428 (* ?x26855 l_0_8_8)))
 (let ((?x27425 (* 2.0 l_0_8_22)))
 (let ((?x27426 (* ?x27425 l_0_8_7)))
 (let ((?x27332 (* 2.0 l_0_8_10)))
 (let ((?x28030 (* ?x27332 l_0_8_25)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x28029 (* ?x25753 l_0_8_4)))
 (let ((?x28037 (- (- (- (+ (+ (+ (+ ?x28029 ?x28030) ?x27426) ?x27428) ?x27430) ?x25571) ?x27434) ?x27436)))
 (let ((?x28045 (+ (+ (- (- ?x28037 ?x27438) ?x27440) (* (* 2.0 l_0_8_60) l_0_8_63)) (* (* 2.0 l_0_8_61) l_0_8_64))))
 (let ((?x28051 (- (+ ?x28045 (* (* 2.0 l_0_8_62) l_0_8_65)) (* (* 2.0 l_0_8_88) l_0_8_91))))
 (let ((?x28057 (- (- ?x28051 (* (* 2.0 l_0_8_89) l_0_8_92)) (* (* 2.0 l_0_8_90) l_0_8_93))))
 (= ?x28057 0.0))))))))))))))))))))))))))
(assert
 (let ((?x28122 (* l_0_8_94 l_0_8_94)))
 (let ((?x28120 (* l_0_8_93 l_0_8_93)))
 (let ((?x28118 (* l_0_8_92 l_0_8_92)))
 (let ((?x28116 (* l_0_8_91 l_0_8_91)))
 (let ((?x28114 (* l_0_8_66 l_0_8_66)))
 (let ((?x28112 (* l_0_8_65 l_0_8_65)))
 (let ((?x28110 (* l_0_8_64 l_0_8_64)))
 (let ((?x28108 (* l_0_8_63 l_0_8_63)))
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25660 (* ?x25486 l_0_8_35)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x28106 (* ?x25753 l_0_8_7)))
 (let ((?x28107 (- ?x28106 ?x25660)))
 (let ((?x28121 (- (- (- (+ (+ (+ (+ ?x28107 ?x28108) ?x28110) ?x28112) ?x28114) ?x28116) ?x28118) ?x28120)))
 (= (- ?x28121 ?x28122) 0.0))))))))))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25728 (* ?x25486 l_0_8_39)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x25754 (* ?x25753 l_0_8_11)))
 (let ((?x28143 (- ?x25754 ?x25728)))
 (let ((?x28149 (+ (+ ?x28143 (* (* 2.0 l_0_8_63) l_0_8_67)) (* (* 2.0 l_0_8_64) l_0_8_68))))
 (let ((?x28155 (+ (+ ?x28149 (* (* 2.0 l_0_8_65) l_0_8_69)) (* (* 2.0 l_0_8_66) l_0_8_70))))
 (let ((?x28161 (- (- ?x28155 (* (* 2.0 l_0_8_91) l_0_8_95)) (* (* 2.0 l_0_8_92) l_0_8_96))))
 (let ((?x28167 (- (- ?x28161 (* (* 2.0 l_0_8_93) l_0_8_97)) (* (* 2.0 l_0_8_94) l_0_8_98))))
 (= ?x28167 0.0)))))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25788 (* ?x25486 l_0_8_44)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x25755 (* ?x25753 l_0_8_16)))
 (let ((?x28210 (- (- ?x25755 (* (* 2.0 l_0_8_100) l_0_8_91)) (* (* 2.0 l_0_8_101) l_0_8_92))))
 (let ((?x28216 (- (- ?x28210 (* (* 2.0 l_0_8_102) l_0_8_93)) (* (* 2.0 l_0_8_103) l_0_8_94))))
 (let ((?x28221 (+ (+ (- ?x28216 ?x25788) (* (* 2.0 l_0_8_63) l_0_8_72)) (* (* 2.0 l_0_8_64) l_0_8_73))))
 (let ((?x28225 (+ (+ ?x28221 (* (* 2.0 l_0_8_65) l_0_8_74)) (* (* 2.0 l_0_8_66) l_0_8_75))))
 (= ?x28225 0.0))))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25868 (* ?x25486 l_0_8_50)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x28265 (* ?x25753 l_0_8_22)))
 (let ((?x28271 (- (- ?x28265 (* (* 2.0 l_0_8_106) l_0_8_91)) (* (* 2.0 l_0_8_107) l_0_8_92))))
 (let ((?x28277 (- (- ?x28271 (* (* 2.0 l_0_8_108) l_0_8_93)) (* (* 2.0 l_0_8_109) l_0_8_94))))
 (let ((?x28282 (+ (+ (- ?x28277 ?x25868) (* (* 2.0 l_0_8_63) l_0_8_78)) (* (* 2.0 l_0_8_64) l_0_8_79))))
 (let ((?x28286 (+ (+ ?x28282 (* (* 2.0 l_0_8_65) l_0_8_80)) (* (* 2.0 l_0_8_66) l_0_8_81))))
 (= ?x28286 0.0))))))))))
(assert
 (let ((?x25991 (* l_0_8_31 l_0_8_31)))
 (let ((?x25989 (* l_0_8_30 l_0_8_30)))
 (let ((?x25987 (* l_0_8_3 l_0_8_3)))
 (let ((?x25967 (* l_0_8_2 l_0_8_2)))
 (let ((?x28327 (- (* (* (- 2.0) l_0_8_119) l_0_8_134) (* (* 2.0 l_0_8_120) l_0_8_135))))
 (let ((?x28331 (- (- ?x28327 (* (* 2.0 l_0_8_121) l_0_8_136)) (* (* 2.0 l_0_8_122) l_0_8_137))))
 (let ((?x28336 (- (- (+ ?x28331 ?x25967) (* (* 2.0 l_0_8_203) l_0_8_218)) (* (* 2.0 l_0_8_204) l_0_8_219))))
 (let ((?x28340 (- (- ?x28336 (* (* 2.0 l_0_8_205) l_0_8_220)) (* (* 2.0 l_0_8_206) l_0_8_221))))
 (let ((?x28344 (- (- ?x28340 (* (* 2.0 l_0_8_231) l_0_8_246)) (* (* 2.0 l_0_8_232) l_0_8_247))))
 (let ((?x28348 (- (- ?x28344 (* (* 2.0 l_0_8_233) l_0_8_248)) (* (* 2.0 l_0_8_234) l_0_8_249))))
 (let ((?x28352 (- (- ?x28348 (* (* 2.0 l_0_8_259) l_0_8_274)) (* (* 2.0 l_0_8_260) l_0_8_275))))
 (let ((?x28356 (- (- ?x28352 (* (* 2.0 l_0_8_261) l_0_8_276)) (* (* 2.0 l_0_8_262) l_0_8_277))))
 (let ((?x28360 (- (- ?x28356 (* (* 2.0 l_0_8_287) l_0_8_302)) (* (* 2.0 l_0_8_288) l_0_8_303))))
 (let ((?x28364 (- (- ?x28360 (* (* 2.0 l_0_8_289) l_0_8_304)) (* (* 2.0 l_0_8_290) l_0_8_305))))
 (= (- (- (+ ?x28364 ?x25987) ?x25989) ?x25991) 0.0))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26113 (* ?x25576 l_0_8_33)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26111 (* ?x25573 l_0_8_32)))
 (let ((?x26108 (* 2.0 l_0_8_3)))
 (let ((?x26109 (* ?x26108 l_0_8_5)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26070 (* ?x26069 l_0_8_4)))
 (= (- (- (+ ?x26070 ?x26109) ?x26111) ?x26113) 0.0))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26286 (* ?x25576 l_0_8_36)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26284 (* ?x25573 l_0_8_35)))
 (let ((?x26108 (* 2.0 l_0_8_3)))
 (let ((?x26282 (* ?x26108 l_0_8_8)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26232 (* ?x26069 l_0_8_7)))
 (= (- (- (+ ?x26232 ?x26282) ?x26284) ?x26286) 0.0))))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27440 (* ?x27307 l_0_8_53)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27438 (* ?x27304 l_0_8_52)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27436 (* ?x27301 l_0_8_51)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27434 (* ?x27298 l_0_8_50)))
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26656 (* ?x25576 l_0_8_45)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26653 (* ?x25573 l_0_8_44)))
 (let ((?x27226 (* 2.0 l_0_8_24)))
 (let ((?x27430 (* ?x27226 l_0_8_9)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x27428 (* ?x26855 l_0_8_8)))
 (let ((?x27425 (* 2.0 l_0_8_22)))
 (let ((?x27426 (* ?x27425 l_0_8_7)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x26590 (* ?x26589 l_0_8_3)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x26587 (* ?x26586 l_0_8_2)))
 (let ((?x27332 (* 2.0 l_0_8_10)))
 (let ((?x28030 (* ?x27332 l_0_8_25)))
 (let ((?x28526 (- (- (+ (+ (+ (+ (+ ?x28030 ?x26587) ?x26590) ?x27426) ?x27428) ?x27430) ?x26653) ?x26656)))
 (= (- (- (- (- ?x28526 ?x27434) ?x27436) ?x27438) ?x27440) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26890 (* ?x25576 l_0_8_51)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26888 (* ?x25573 l_0_8_50)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x26856 (* ?x26855 l_0_8_3)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26843 (* ?x26069 l_0_8_22)))
 (= (- (- (+ ?x26843 ?x26856) ?x26888) ?x26890) 0.0))))))))))
(assert
 (let ((?x27067 (* l_0_8_6 l_0_8_6)))
 (let ((?x27065 (* l_0_8_5 l_0_8_5)))
 (let ((?x27063 (* l_0_8_4 l_0_8_4)))
 (let ((?x27061 (* l_0_8_34 l_0_8_34)))
 (let ((?x28568 (+ (- (- (* (- l_0_8_32) l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x27061) ?x27063)))
 (= (+ (+ ?x28568 ?x27065) ?x27067) 0.0)))))))
(assert
 (let ((?x27096 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x27093 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x27090 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27087 (* ?x27086 l_0_8_37)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27084 (* ?x27083 l_0_8_36)))
 (let ((?x28584 (+ (+ (- (- (* (* (- 2.0) l_0_8_32) l_0_8_35) ?x27084) ?x27087) ?x27090) ?x27093)))
 (= (+ ?x28584 ?x27096) 0.0))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27135 (* ?x27086 l_0_8_41)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27133 (* ?x27083 l_0_8_40)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27131 (* ?x27081 l_0_8_39)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27129 (* ?x27128 l_0_8_6)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27126 (* ?x25550 l_0_8_5)))
 (let ((?x27157 (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x27126) ?x27129)))
 (= (- (- (- ?x27157 ?x27131) ?x27133) ?x27135) 0.0)))))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27178 (* ?x27086 l_0_8_46)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27175 (* ?x27083 l_0_8_45)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27172 (* ?x27081 l_0_8_44)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27169 (* ?x27168 l_0_8_6)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27166 (* ?x26589 l_0_8_5)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27158 (* ?x26586 l_0_8_4)))
 (= (- (- (- (+ (+ ?x27158 ?x27166) ?x27169) ?x27172) ?x27175) ?x27178) 0.0))))))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27233 (* ?x27086 l_0_8_52)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27231 (* ?x27083 l_0_8_51)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27229 (* ?x27081 l_0_8_50)))
 (let ((?x27226 (* 2.0 l_0_8_24)))
 (let ((?x27227 (* ?x27226 l_0_8_6)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x27224 (* ?x26855 l_0_8_5)))
 (let ((?x28629 (- (- (+ (+ (* (* 2.0 l_0_8_22) l_0_8_4) ?x27224) ?x27227) ?x27229) ?x27231)))
 (let ((?x28630 (- ?x28629 ?x27233)))
 (= ?x28630 0.0))))))))))))))
(assert
 (let ((?x27273 (* l_0_8_9 l_0_8_9)))
 (let ((?x27271 (* l_0_8_8 l_0_8_8)))
 (let ((?x27269 (* l_0_8_7 l_0_8_7)))
 (let ((?x27267 (* l_0_8_38 l_0_8_38)))
 (let ((?x27265 (* l_0_8_37 l_0_8_37)))
 (let ((?x27263 (* l_0_8_36 l_0_8_36)))
 (let ((?x28646 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x27263) ?x27265)))
 (= (+ (+ (+ (- ?x28646 ?x27267) ?x27269) ?x27271) ?x27273) 0.0)))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27308 (* ?x27307 l_0_8_42)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27305 (* ?x27304 l_0_8_41)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27302 (* ?x27301 l_0_8_40)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27299 (* ?x27298 l_0_8_39)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27296 (* ?x27128 l_0_8_9)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27294 (* ?x25550 l_0_8_8)))
 (let ((?x25541 (* 2.0 l_0_8_11)))
 (let ((?x27292 (* ?x25541 l_0_8_7)))
 (let ((?x27332 (* 2.0 l_0_8_10)))
 (let ((?x27334 (* ?x27332 l_0_8_14)))
 (let ((?x28670 (- (- (- (- (+ (+ (+ ?x27334 ?x27292) ?x27294) ?x27296) ?x27299) ?x27302) ?x27305) ?x27308)))
 (= ?x28670 0.0)))))))))))))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27365 (* ?x27307 l_0_8_47)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27362 (* ?x27304 l_0_8_46)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27359 (* ?x27301 l_0_8_45)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27356 (* ?x27298 l_0_8_44)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27353 (* ?x27168 l_0_8_9)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27351 (* ?x26589 l_0_8_8)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27349 (* ?x26586 l_0_8_7)))
 (let ((?x27332 (* 2.0 l_0_8_10)))
 (let ((?x27336 (* ?x27332 l_0_8_19)))
 (let ((?x28686 (- (- (- (- (+ (+ (+ ?x27336 ?x27349) ?x27351) ?x27353) ?x27356) ?x27359) ?x27362) ?x27365)))
 (= ?x28686 0.0)))))))))))))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27440 (* ?x27307 l_0_8_53)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27438 (* ?x27304 l_0_8_52)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27436 (* ?x27301 l_0_8_51)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27434 (* ?x27298 l_0_8_50)))
 (let ((?x27226 (* 2.0 l_0_8_24)))
 (let ((?x27430 (* ?x27226 l_0_8_9)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x27428 (* ?x26855 l_0_8_8)))
 (let ((?x27425 (* 2.0 l_0_8_22)))
 (let ((?x27426 (* ?x27425 l_0_8_7)))
 (let ((?x27332 (* 2.0 l_0_8_10)))
 (let ((?x28030 (* ?x27332 l_0_8_25)))
 (let ((?x28712 (- (- (- (- (+ (+ (+ ?x28030 ?x27426) ?x27428) ?x27430) ?x27434) ?x27436) ?x27438) ?x27440)))
 (= ?x28712 0.0)))))))))))))))))))
(assert
 (let ((?x27496 (* l_0_8_43 l_0_8_43)))
 (let ((?x27494 (* l_0_8_42 l_0_8_42)))
 (let ((?x27492 (* l_0_8_41 l_0_8_41)))
 (let ((?x27490 (* l_0_8_40 l_0_8_40)))
 (let ((?x27488 (* l_0_8_39 l_0_8_39)))
 (let ((?x27486 (* l_0_8_15 l_0_8_15)))
 (let ((?x27484 (* l_0_8_14 l_0_8_14)))
 (let ((?x27482 (* l_0_8_13 l_0_8_13)))
 (let ((?x28726 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x27482) ?x27484)))
 (= (- (- (- (- (- (+ ?x28726 ?x27486) ?x27488) ?x27490) ?x27492) ?x27494) ?x27496) 0.0)))))))))))
(assert
 (let ((?x27553 (* 2.0 l_0_8_43)))
 (let ((?x27554 (* ?x27553 l_0_8_48)))
 (let ((?x27549 (* 2.0 l_0_8_42)))
 (let ((?x27550 (* ?x27549 l_0_8_47)))
 (let ((?x27545 (* 2.0 l_0_8_41)))
 (let ((?x27546 (* ?x27545 l_0_8_46)))
 (let ((?x27541 (* 2.0 l_0_8_40)))
 (let ((?x27542 (* ?x27541 l_0_8_45)))
 (let ((?x27537 (* 2.0 l_0_8_39)))
 (let ((?x27538 (* ?x27537 l_0_8_44)))
 (let ((?x27533 (* 2.0 l_0_8_15)))
 (let ((?x27534 (* ?x27533 l_0_8_20)))
 (let ((?x27529 (* 2.0 l_0_8_14)))
 (let ((?x27530 (* ?x27529 l_0_8_19)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27526 (* ?x27128 l_0_8_18)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27523 (* ?x25550 l_0_8_17)))
 (let ((?x27669 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_16) ?x27523) ?x27526) ?x27530) ?x27534)))
 (= (- (- (- (- (- ?x27669 ?x27538) ?x27542) ?x27546) ?x27550) ?x27554) 0.0)))))))))))))))))))))
(assert
 (let ((?x27553 (* 2.0 l_0_8_43)))
 (let ((?x27631 (* ?x27553 l_0_8_54)))
 (let ((?x27549 (* 2.0 l_0_8_42)))
 (let ((?x27629 (* ?x27549 l_0_8_53)))
 (let ((?x27545 (* 2.0 l_0_8_41)))
 (let ((?x27627 (* ?x27545 l_0_8_52)))
 (let ((?x27541 (* 2.0 l_0_8_40)))
 (let ((?x27625 (* ?x27541 l_0_8_51)))
 (let ((?x27537 (* 2.0 l_0_8_39)))
 (let ((?x27623 (* ?x27537 l_0_8_50)))
 (let ((?x27533 (* 2.0 l_0_8_15)))
 (let ((?x27621 (* ?x27533 l_0_8_26)))
 (let ((?x27529 (* 2.0 l_0_8_14)))
 (let ((?x27619 (* ?x27529 l_0_8_25)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27617 (* ?x27128 l_0_8_24)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27615 (* ?x25550 l_0_8_23)))
 (let ((?x27754 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_22) ?x27615) ?x27617) ?x27619) ?x27621)))
 (let ((?x28765 (- (- (- (- (- ?x27754 ?x27623) ?x27625) ?x27627) ?x27629) ?x27631)))
 (= ?x28765 0.0))))))))))))))))))))))
(assert
 (let ((?x27705 (* l_0_8_49 l_0_8_49)))
 (let ((?x27703 (* l_0_8_48 l_0_8_48)))
 (let ((?x27701 (* l_0_8_47 l_0_8_47)))
 (let ((?x27699 (* l_0_8_46 l_0_8_46)))
 (let ((?x27697 (* l_0_8_45 l_0_8_45)))
 (let ((?x27695 (* l_0_8_44 l_0_8_44)))
 (let ((?x27688 (* l_0_8_21 l_0_8_21)))
 (let ((?x27686 (* l_0_8_20 l_0_8_20)))
 (let ((?x27684 (* l_0_8_19 l_0_8_19)))
 (let ((?x27682 (* l_0_8_18 l_0_8_18)))
 (let ((?x28778 (+ (+ (+ (* l_0_8_16 l_0_8_16) (* l_0_8_17 l_0_8_17)) ?x27682) ?x27684)))
 (let ((?x28785 (- (- (- (- (- (+ (+ ?x28778 ?x27686) ?x27688) ?x27695) ?x27697) ?x27699) ?x27701) ?x27703)))
 (= (- ?x28785 ?x27705) 0.0))))))))))))))
(assert
 (let ((?x27791 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x27788 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x27785 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x27782 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x27779 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x27776 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x27768 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x27765 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x27762 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27759 (* ?x27168 l_0_8_24)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27757 (* ?x26589 l_0_8_23)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27755 (* ?x26586 l_0_8_22)))
 (let ((?x28814 (- (- (+ (+ (+ (+ (+ ?x27755 ?x27757) ?x27759) ?x27762) ?x27765) ?x27768) ?x27776) ?x27779)))
 (= (- (- (- (- ?x28814 ?x27782) ?x27785) ?x27788) ?x27791) 0.0))))))))))))))))))
(assert
 (let ((?x27891 (* l_0_8_56 l_0_8_56)))
 (let ((?x27889 (* l_0_8_55 l_0_8_55)))
 (let ((?x27887 (* l_0_8_54 l_0_8_54)))
 (let ((?x27885 (* l_0_8_53 l_0_8_53)))
 (let ((?x27883 (* l_0_8_52 l_0_8_52)))
 (let ((?x27881 (* l_0_8_51 l_0_8_51)))
 (let ((?x27879 (* l_0_8_50 l_0_8_50)))
 (let ((?x27877 (* l_0_8_28 l_0_8_28)))
 (let ((?x27875 (* l_0_8_27 l_0_8_27)))
 (let ((?x27873 (* l_0_8_26 l_0_8_26)))
 (let ((?x27871 (* l_0_8_25 l_0_8_25)))
 (let ((?x27869 (* l_0_8_24 l_0_8_24)))
 (let ((?x28848 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x27869) ?x27871)))
 (let ((?x28855 (- (- (- (- (+ (+ (+ ?x28848 ?x27873) ?x27875) ?x27877) ?x27879) ?x27881) ?x27883) ?x27885)))
 (= (- (- (- ?x28855 ?x27887) ?x27889) ?x27891) 0.0))))))))))))))))
(assert
 (let ((?x25448 (* l_0_8_29 l_0_8_29)))
 (let ((?x25452 (* l_0_8_1 l_0_8_1)))
 (let ((?x27915 (- ?x25452 ?x25448)))
 (= ?x27915 0.0)))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25487 (* ?x25486 l_0_8_30)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x27947 (* ?x25753 l_0_8_2)))
 (let ((?x28880 (- (+ ?x27947 (* (* 2.0 l_0_8_141) l_0_8_144)) (* (* 2.0 l_0_8_169) l_0_8_172))))
 (= (- ?x28880 ?x25487) 0.0)))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25571 (* ?x25486 l_0_8_32)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x28029 (* ?x25753 l_0_8_4)))
 (= (- ?x28029 ?x25571) 0.0))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25660 (* ?x25486 l_0_8_35)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x28106 (* ?x25753 l_0_8_7)))
 (let ((?x28107 (- ?x28106 ?x25660)))
 (= ?x28107 0.0)))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25728 (* ?x25486 l_0_8_39)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x25754 (* ?x25753 l_0_8_11)))
 (let ((?x28143 (- ?x25754 ?x25728)))
 (= ?x28143 0.0)))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25788 (* ?x25486 l_0_8_44)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x25755 (* ?x25753 l_0_8_16)))
 (= (- ?x25755 ?x25788) 0.0))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25868 (* ?x25486 l_0_8_50)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x28265 (* ?x25753 l_0_8_22)))
 (let ((?x28913 (- (+ (- ?x28265 ?x25868) (* (* 2.0 l_0_8_57) l_0_8_60)) (* (* 2.0 l_0_8_85) l_0_8_88))))
 (= ?x28913 0.0)))))))
(assert
 (let ((?x25991 (* l_0_8_31 l_0_8_31)))
 (let ((?x25989 (* l_0_8_30 l_0_8_30)))
 (let ((?x25987 (* l_0_8_3 l_0_8_3)))
 (let ((?x25967 (* l_0_8_2 l_0_8_2)))
 (let ((?x28929 (+ (* (* (- 2.0) l_0_8_113) l_0_8_116) (* (* 2.0 l_0_8_142) l_0_8_144))))
 (let ((?x28933 (- (+ ?x28929 (* (* 2.0 l_0_8_143) l_0_8_145)) (* (* 2.0 l_0_8_170) l_0_8_172))))
 (let ((?x28937 (- (- ?x28933 (* (* 2.0 l_0_8_171) l_0_8_173)) (* (* 2.0 l_0_8_197) l_0_8_200))))
 (let ((?x28942 (- (- (+ ?x28937 ?x25967) (* (* 2.0 l_0_8_225) l_0_8_228)) (* (* 2.0 l_0_8_253) l_0_8_256))))
 (let ((?x28947 (- (- (+ (- ?x28942 (* (* 2.0 l_0_8_281) l_0_8_284)) ?x25987) ?x25989) ?x25991)))
 (= ?x28947 0.0)))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26113 (* ?x25576 l_0_8_33)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26111 (* ?x25573 l_0_8_32)))
 (let ((?x26108 (* 2.0 l_0_8_3)))
 (let ((?x26109 (* ?x26108 l_0_8_5)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26070 (* ?x26069 l_0_8_4)))
 (let ((?x29008 (* l_0_8_174 l_0_8_174)))
 (let ((?x29006 (* l_0_8_173 l_0_8_173)))
 (let ((?x29004 (* l_0_8_172 l_0_8_172)))
 (let ((?x29002 (* l_0_8_146 l_0_8_146)))
 (let ((?x29005 (- (+ (+ (* l_0_8_144 l_0_8_144) (* l_0_8_145 l_0_8_145)) ?x29002) ?x29004)))
 (= (- (- (+ (+ (- (- ?x29005 ?x29006) ?x29008) ?x26070) ?x26109) ?x26111) ?x26113) 0.0)))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26286 (* ?x25576 l_0_8_36)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26284 (* ?x25573 l_0_8_35)))
 (let ((?x26108 (* 2.0 l_0_8_3)))
 (let ((?x26282 (* ?x26108 l_0_8_8)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26232 (* ?x26069 l_0_8_7)))
 (let ((?x29033 (+ (* (* 2.0 l_0_8_144) l_0_8_147) (* (* 2.0 l_0_8_145) l_0_8_148))))
 (let ((?x29037 (- (+ ?x29033 (* (* 2.0 l_0_8_146) l_0_8_149)) (* (* 2.0 l_0_8_172) l_0_8_175))))
 (let ((?x29041 (- (- ?x29037 (* (* 2.0 l_0_8_173) l_0_8_176)) (* (* 2.0 l_0_8_174) l_0_8_177))))
 (= (- (- (+ (+ ?x29041 ?x26232) ?x26282) ?x26284) ?x26286) 0.0)))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26656 (* ?x25576 l_0_8_45)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26653 (* ?x25573 l_0_8_44)))
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25571 (* ?x25486 l_0_8_32)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x26590 (* ?x26589 l_0_8_3)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x26587 (* ?x26586 l_0_8_2)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x28029 (* ?x25753 l_0_8_4)))
 (let ((?x29081 (+ (+ ?x28029 (* (* 2.0 l_0_8_144) l_0_8_156)) (* (* 2.0 l_0_8_145) l_0_8_157))))
 (let ((?x29087 (- (+ (+ (+ ?x29081 (* (* 2.0 l_0_8_146) l_0_8_158)) ?x26587) ?x26590) (* (* 2.0 l_0_8_172) l_0_8_184))))
 (let ((?x29091 (- (- ?x29087 (* (* 2.0 l_0_8_173) l_0_8_185)) (* (* 2.0 l_0_8_174) l_0_8_186))))
 (= (- (- (- ?x29091 ?x25571) ?x26653) ?x26656) 0.0)))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26890 (* ?x25576 l_0_8_51)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26888 (* ?x25573 l_0_8_50)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x26856 (* ?x26855 l_0_8_3)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26843 (* ?x26069 l_0_8_22)))
 (let ((?x29130 (+ (* (* 2.0 l_0_8_144) l_0_8_162) (* (* 2.0 l_0_8_145) l_0_8_163))))
 (let ((?x29134 (- (+ ?x29130 (* (* 2.0 l_0_8_146) l_0_8_164)) (* (* 2.0 l_0_8_172) l_0_8_190))))
 (let ((?x29138 (- (- ?x29134 (* (* 2.0 l_0_8_173) l_0_8_191)) (* (* 2.0 l_0_8_174) l_0_8_192))))
 (let ((?x29144 (+ (- (- (+ (+ ?x29138 ?x26843) ?x26856) ?x26888) ?x26890) (* (* 2.0 l_0_8_58) l_0_8_60))))
 (let ((?x29148 (- (+ ?x29144 (* (* 2.0 l_0_8_59) l_0_8_61)) (* (* 2.0 l_0_8_86) l_0_8_88))))
 (= (- ?x29148 (* (* 2.0 l_0_8_87) l_0_8_89)) 0.0)))))))))))))))
(assert
 (let ((?x27067 (* l_0_8_6 l_0_8_6)))
 (let ((?x27065 (* l_0_8_5 l_0_8_5)))
 (let ((?x27063 (* l_0_8_4 l_0_8_4)))
 (let ((?x27061 (* l_0_8_34 l_0_8_34)))
 (let ((?x28568 (+ (- (- (* (- l_0_8_32) l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x27061) ?x27063)))
 (= (+ (+ ?x28568 ?x27065) ?x27067) 0.0)))))))
(assert
 (let ((?x27096 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x27093 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x27090 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27087 (* ?x27086 l_0_8_37)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27084 (* ?x27083 l_0_8_36)))
 (let ((?x28584 (+ (+ (- (- (* (* (- 2.0) l_0_8_32) l_0_8_35) ?x27084) ?x27087) ?x27090) ?x27093)))
 (= (+ ?x28584 ?x27096) 0.0))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27135 (* ?x27086 l_0_8_41)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27133 (* ?x27083 l_0_8_40)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27131 (* ?x27081 l_0_8_39)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27129 (* ?x27128 l_0_8_6)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27126 (* ?x25550 l_0_8_5)))
 (let ((?x27157 (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x27126) ?x27129)))
 (= (- (- (- ?x27157 ?x27131) ?x27133) ?x27135) 0.0)))))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27178 (* ?x27086 l_0_8_46)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27175 (* ?x27083 l_0_8_45)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27172 (* ?x27081 l_0_8_44)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27169 (* ?x27168 l_0_8_6)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27166 (* ?x26589 l_0_8_5)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27158 (* ?x26586 l_0_8_4)))
 (= (- (- (- (+ (+ ?x27158 ?x27166) ?x27169) ?x27172) ?x27175) ?x27178) 0.0))))))))))))))
(assert
 (let ((?x29210 (* l_0_8_90 l_0_8_90)))
 (let ((?x29208 (* l_0_8_89 l_0_8_89)))
 (let ((?x29206 (* l_0_8_88 l_0_8_88)))
 (let ((?x29204 (* l_0_8_62 l_0_8_62)))
 (let ((?x29202 (* l_0_8_61 l_0_8_61)))
 (let ((?x29200 (* l_0_8_60 l_0_8_60)))
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27233 (* ?x27086 l_0_8_52)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27231 (* ?x27083 l_0_8_51)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27229 (* ?x27081 l_0_8_50)))
 (let ((?x27226 (* 2.0 l_0_8_24)))
 (let ((?x27227 (* ?x27226 l_0_8_6)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x27224 (* ?x26855 l_0_8_5)))
 (let ((?x28629 (- (- (+ (+ (* (* 2.0 l_0_8_22) l_0_8_4) ?x27224) ?x27227) ?x27229) ?x27231)))
 (let ((?x28630 (- ?x28629 ?x27233)))
 (= (- (- (- (+ (+ (+ ?x28630 ?x29200) ?x29202) ?x29204) ?x29206) ?x29208) ?x29210) 0.0))))))))))))))))))))
(assert
 (let ((?x27273 (* l_0_8_9 l_0_8_9)))
 (let ((?x27271 (* l_0_8_8 l_0_8_8)))
 (let ((?x27269 (* l_0_8_7 l_0_8_7)))
 (let ((?x27267 (* l_0_8_38 l_0_8_38)))
 (let ((?x27265 (* l_0_8_37 l_0_8_37)))
 (let ((?x27263 (* l_0_8_36 l_0_8_36)))
 (let ((?x28646 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x27263) ?x27265)))
 (= (+ (+ (+ (- ?x28646 ?x27267) ?x27269) ?x27271) ?x27273) 0.0)))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27308 (* ?x27307 l_0_8_42)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27305 (* ?x27304 l_0_8_41)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27302 (* ?x27301 l_0_8_40)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27299 (* ?x27298 l_0_8_39)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27296 (* ?x27128 l_0_8_9)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27294 (* ?x25550 l_0_8_8)))
 (let ((?x25541 (* 2.0 l_0_8_11)))
 (let ((?x27292 (* ?x25541 l_0_8_7)))
 (let ((?x27332 (* 2.0 l_0_8_10)))
 (let ((?x27334 (* ?x27332 l_0_8_14)))
 (let ((?x28670 (- (- (- (- (+ (+ (+ ?x27334 ?x27292) ?x27294) ?x27296) ?x27299) ?x27302) ?x27305) ?x27308)))
 (= ?x28670 0.0)))))))))))))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27365 (* ?x27307 l_0_8_47)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27362 (* ?x27304 l_0_8_46)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27359 (* ?x27301 l_0_8_45)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27356 (* ?x27298 l_0_8_44)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27353 (* ?x27168 l_0_8_9)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27351 (* ?x26589 l_0_8_8)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27349 (* ?x26586 l_0_8_7)))
 (let ((?x27332 (* 2.0 l_0_8_10)))
 (let ((?x27336 (* ?x27332 l_0_8_19)))
 (let ((?x28686 (- (- (- (- (+ (+ (+ ?x27336 ?x27349) ?x27351) ?x27353) ?x27356) ?x27359) ?x27362) ?x27365)))
 (= ?x28686 0.0)))))))))))))))))))
(assert
 (let ((?x27496 (* l_0_8_43 l_0_8_43)))
 (let ((?x27494 (* l_0_8_42 l_0_8_42)))
 (let ((?x27492 (* l_0_8_41 l_0_8_41)))
 (let ((?x27490 (* l_0_8_40 l_0_8_40)))
 (let ((?x27488 (* l_0_8_39 l_0_8_39)))
 (let ((?x27486 (* l_0_8_15 l_0_8_15)))
 (let ((?x27484 (* l_0_8_14 l_0_8_14)))
 (let ((?x27482 (* l_0_8_13 l_0_8_13)))
 (let ((?x28726 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x27482) ?x27484)))
 (= (- (- (- (- (- (+ ?x28726 ?x27486) ?x27488) ?x27490) ?x27492) ?x27494) ?x27496) 0.0)))))))))))
(assert
 (let ((?x27553 (* 2.0 l_0_8_43)))
 (let ((?x27554 (* ?x27553 l_0_8_48)))
 (let ((?x27549 (* 2.0 l_0_8_42)))
 (let ((?x27550 (* ?x27549 l_0_8_47)))
 (let ((?x27545 (* 2.0 l_0_8_41)))
 (let ((?x27546 (* ?x27545 l_0_8_46)))
 (let ((?x27541 (* 2.0 l_0_8_40)))
 (let ((?x27542 (* ?x27541 l_0_8_45)))
 (let ((?x27537 (* 2.0 l_0_8_39)))
 (let ((?x27538 (* ?x27537 l_0_8_44)))
 (let ((?x27533 (* 2.0 l_0_8_15)))
 (let ((?x27534 (* ?x27533 l_0_8_20)))
 (let ((?x27529 (* 2.0 l_0_8_14)))
 (let ((?x27530 (* ?x27529 l_0_8_19)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27526 (* ?x27128 l_0_8_18)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27523 (* ?x25550 l_0_8_17)))
 (let ((?x27669 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_16) ?x27523) ?x27526) ?x27530) ?x27534)))
 (= (- (- (- (- (- ?x27669 ?x27538) ?x27542) ?x27546) ?x27550) ?x27554) 0.0)))))))))))))))))))))
(assert
 (let ((?x27553 (* 2.0 l_0_8_43)))
 (let ((?x27631 (* ?x27553 l_0_8_54)))
 (let ((?x27549 (* 2.0 l_0_8_42)))
 (let ((?x27629 (* ?x27549 l_0_8_53)))
 (let ((?x27545 (* 2.0 l_0_8_41)))
 (let ((?x27627 (* ?x27545 l_0_8_52)))
 (let ((?x27541 (* 2.0 l_0_8_40)))
 (let ((?x27625 (* ?x27541 l_0_8_51)))
 (let ((?x27537 (* 2.0 l_0_8_39)))
 (let ((?x27623 (* ?x27537 l_0_8_50)))
 (let ((?x27533 (* 2.0 l_0_8_15)))
 (let ((?x27621 (* ?x27533 l_0_8_26)))
 (let ((?x27529 (* 2.0 l_0_8_14)))
 (let ((?x27619 (* ?x27529 l_0_8_25)))
 (let ((?x27128 (* 2.0 l_0_8_13)))
 (let ((?x27617 (* ?x27128 l_0_8_24)))
 (let ((?x25550 (* 2.0 l_0_8_12)))
 (let ((?x27615 (* ?x25550 l_0_8_23)))
 (let ((?x27754 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_22) ?x27615) ?x27617) ?x27619) ?x27621)))
 (let ((?x28765 (- (- (- (- (- ?x27754 ?x27623) ?x27625) ?x27627) ?x27629) ?x27631)))
 (let ((?x29227 (+ (+ ?x28765 (* (* 2.0 l_0_8_60) l_0_8_67)) (* (* 2.0 l_0_8_61) l_0_8_68))))
 (let ((?x29231 (- (+ ?x29227 (* (* 2.0 l_0_8_62) l_0_8_69)) (* (* 2.0 l_0_8_88) l_0_8_95))))
 (let ((?x29235 (- (- ?x29231 (* (* 2.0 l_0_8_89) l_0_8_96)) (* (* 2.0 l_0_8_90) l_0_8_97))))
 (= ?x29235 0.0)))))))))))))))))))))))))
(assert
 (let ((?x27705 (* l_0_8_49 l_0_8_49)))
 (let ((?x27703 (* l_0_8_48 l_0_8_48)))
 (let ((?x27701 (* l_0_8_47 l_0_8_47)))
 (let ((?x27699 (* l_0_8_46 l_0_8_46)))
 (let ((?x27697 (* l_0_8_45 l_0_8_45)))
 (let ((?x27695 (* l_0_8_44 l_0_8_44)))
 (let ((?x27688 (* l_0_8_21 l_0_8_21)))
 (let ((?x27686 (* l_0_8_20 l_0_8_20)))
 (let ((?x27684 (* l_0_8_19 l_0_8_19)))
 (let ((?x27682 (* l_0_8_18 l_0_8_18)))
 (let ((?x28778 (+ (+ (+ (* l_0_8_16 l_0_8_16) (* l_0_8_17 l_0_8_17)) ?x27682) ?x27684)))
 (let ((?x28785 (- (- (- (- (- (+ (+ ?x28778 ?x27686) ?x27688) ?x27695) ?x27697) ?x27699) ?x27701) ?x27703)))
 (= (- ?x28785 ?x27705) 0.0))))))))))))))
(assert
 (let ((?x27791 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x27788 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x27785 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x27782 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x27779 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x27776 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x27768 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x27765 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x27762 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27759 (* ?x27168 l_0_8_24)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27757 (* ?x26589 l_0_8_23)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27755 (* ?x26586 l_0_8_22)))
 (let ((?x29266 (- (* (* (- 2.0) l_0_8_100) l_0_8_88) (* (* 2.0 l_0_8_101) l_0_8_89))))
 (let ((?x29271 (+ (+ (+ (- ?x29266 (* (* 2.0 l_0_8_102) l_0_8_90)) ?x27755) ?x27757) ?x27759)))
 (let ((?x29278 (- (- (- (- (+ (+ (+ ?x29271 ?x27762) ?x27765) ?x27768) ?x27776) ?x27779) ?x27782) ?x27785)))
 (let ((?x29284 (+ (+ (- (- ?x29278 ?x27788) ?x27791) (* (* 2.0 l_0_8_60) l_0_8_72)) (* (* 2.0 l_0_8_61) l_0_8_73))))
 (= (+ ?x29284 (* (* 2.0 l_0_8_62) l_0_8_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x27891 (* l_0_8_56 l_0_8_56)))
 (let ((?x27889 (* l_0_8_55 l_0_8_55)))
 (let ((?x27887 (* l_0_8_54 l_0_8_54)))
 (let ((?x27885 (* l_0_8_53 l_0_8_53)))
 (let ((?x27883 (* l_0_8_52 l_0_8_52)))
 (let ((?x27881 (* l_0_8_51 l_0_8_51)))
 (let ((?x27879 (* l_0_8_50 l_0_8_50)))
 (let ((?x27877 (* l_0_8_28 l_0_8_28)))
 (let ((?x27875 (* l_0_8_27 l_0_8_27)))
 (let ((?x27873 (* l_0_8_26 l_0_8_26)))
 (let ((?x27871 (* l_0_8_25 l_0_8_25)))
 (let ((?x27869 (* l_0_8_24 l_0_8_24)))
 (let ((?x27867 (* l_0_8_23 l_0_8_23)))
 (let ((?x27895 (* l_0_8_22 l_0_8_22)))
 (let ((?x29326 (- (* (* (- 2.0) l_0_8_106) l_0_8_88) (* (* 2.0 l_0_8_107) l_0_8_89))))
 (let ((?x29331 (+ (+ (+ (- ?x29326 (* (* 2.0 l_0_8_108) l_0_8_90)) ?x27895) ?x27867) ?x27869)))
 (let ((?x29338 (- (- (- (+ (+ (+ (+ ?x29331 ?x27871) ?x27873) ?x27875) ?x27877) ?x27879) ?x27881) ?x27883)))
 (let ((?x29344 (+ (- (- (- (- ?x29338 ?x27885) ?x27887) ?x27889) ?x27891) (* (* 2.0 l_0_8_60) l_0_8_78))))
 (let ((?x29348 (+ (+ ?x29344 (* (* 2.0 l_0_8_61) l_0_8_79)) (* (* 2.0 l_0_8_62) l_0_8_80))))
 (= ?x29348 0.0)))))))))))))))))))))
(assert
 (let ((?x25448 (* l_0_8_29 l_0_8_29)))
 (let ((?x29390 (- (+ (* l_0_8_1 l_0_8_1) (* (* 2.0 l_0_8_141) l_0_8_156)) (* (* 2.0 l_0_8_169) l_0_8_184))))
 (= (- ?x29390 ?x25448) 0.0))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25487 (* ?x25486 l_0_8_30)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x27947 (* ?x25753 l_0_8_2)))
 (let ((?x29410 (+ (- ?x27947 (* (* 2.0 l_0_8_113) l_0_8_128)) (* (* 2.0 l_0_8_142) l_0_8_156))))
 (let ((?x29414 (- (+ ?x29410 (* (* 2.0 l_0_8_143) l_0_8_157)) (* (* 2.0 l_0_8_170) l_0_8_184))))
 (let ((?x29418 (- (- ?x29414 (* (* 2.0 l_0_8_171) l_0_8_185)) (* (* 2.0 l_0_8_197) l_0_8_212))))
 (let ((?x29422 (- (- ?x29418 (* (* 2.0 l_0_8_225) l_0_8_240)) (* (* 2.0 l_0_8_253) l_0_8_268))))
 (= (- (- ?x29422 (* (* 2.0 l_0_8_281) l_0_8_296)) ?x25487) 0.0))))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25660 (* ?x25486 l_0_8_35)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x28106 (* ?x25753 l_0_8_7)))
 (let ((?x29480 (+ (+ ?x28106 (* (* 2.0 l_0_8_147) l_0_8_156)) (* (* 2.0 l_0_8_148) l_0_8_157))))
 (let ((?x29484 (+ (+ ?x29480 (* (* 2.0 l_0_8_149) l_0_8_158)) (* (* 2.0 l_0_8_150) l_0_8_159))))
 (let ((?x29488 (- (- ?x29484 (* (* 2.0 l_0_8_175) l_0_8_184)) (* (* 2.0 l_0_8_176) l_0_8_185))))
 (let ((?x29492 (- (- ?x29488 (* (* 2.0 l_0_8_177) l_0_8_186)) (* (* 2.0 l_0_8_178) l_0_8_187))))
 (= (- ?x29492 ?x25660) 0.0))))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25788 (* ?x25486 l_0_8_44)))
 (let ((?x29553 (* l_0_8_189 l_0_8_189)))
 (let ((?x29551 (* l_0_8_188 l_0_8_188)))
 (let ((?x29549 (* l_0_8_187 l_0_8_187)))
 (let ((?x29547 (* l_0_8_186 l_0_8_186)))
 (let ((?x29545 (* l_0_8_185 l_0_8_185)))
 (let ((?x29543 (* l_0_8_184 l_0_8_184)))
 (let ((?x29541 (* l_0_8_161 l_0_8_161)))
 (let ((?x29539 (* l_0_8_160 l_0_8_160)))
 (let ((?x29537 (* l_0_8_159 l_0_8_159)))
 (let ((?x29535 (* l_0_8_158 l_0_8_158)))
 (let ((?x29533 (* l_0_8_157 l_0_8_157)))
 (let ((?x29534 (+ (+ (* (* 2.0 l_0_8_1) l_0_8_16) (* l_0_8_156 l_0_8_156)) ?x29533)))
 (let ((?x29548 (- (- (- (+ (+ (+ (+ ?x29534 ?x29535) ?x29537) ?x29539) ?x29541) ?x29543) ?x29545) ?x29547)))
 (= (- (- (- (- ?x29548 ?x29549) ?x29551) ?x29553) ?x25788) 0.0)))))))))))))))))
(assert
 (let ((?x25486 (* 2.0 l_0_8_29)))
 (let ((?x25868 (* ?x25486 l_0_8_50)))
 (let ((?x25753 (* 2.0 l_0_8_1)))
 (let ((?x28265 (* ?x25753 l_0_8_22)))
 (let ((?x29582 (- (- ?x28265 (* (* 2.0 l_0_8_100) l_0_8_86)) (* (* 2.0 l_0_8_101) l_0_8_87))))
 (let ((?x29588 (+ (+ ?x29582 (* (* 2.0 l_0_8_156) l_0_8_162)) (* (* 2.0 l_0_8_157) l_0_8_163))))
 (let ((?x29594 (+ (+ ?x29588 (* (* 2.0 l_0_8_158) l_0_8_164)) (* (* 2.0 l_0_8_159) l_0_8_165))))
 (let ((?x29600 (+ (+ ?x29594 (* (* 2.0 l_0_8_160) l_0_8_166)) (* (* 2.0 l_0_8_161) l_0_8_167))))
 (let ((?x29606 (- (- ?x29600 (* (* 2.0 l_0_8_184) l_0_8_190)) (* (* 2.0 l_0_8_185) l_0_8_191))))
 (let ((?x29612 (- (- ?x29606 (* (* 2.0 l_0_8_186) l_0_8_192)) (* (* 2.0 l_0_8_187) l_0_8_193))))
 (let ((?x29618 (- (- ?x29612 (* (* 2.0 l_0_8_188) l_0_8_194)) (* (* 2.0 l_0_8_189) l_0_8_195))))
 (let ((?x29623 (+ (+ (- ?x29618 ?x25868) (* (* 2.0 l_0_8_58) l_0_8_72)) (* (* 2.0 l_0_8_59) l_0_8_73))))
 (= ?x29623 0.0))))))))))))))
(assert
 (let ((?x25991 (* l_0_8_31 l_0_8_31)))
 (let ((?x25989 (* l_0_8_30 l_0_8_30)))
 (let ((?x25987 (* l_0_8_3 l_0_8_3)))
 (let ((?x25967 (* l_0_8_2 l_0_8_2)))
 (let ((?x29696 (- (* (* (- 2.0) l_0_8_114) l_0_8_128) (* (* 2.0 l_0_8_115) l_0_8_129))))
 (let ((?x29700 (- (- ?x29696 (* (* 2.0 l_0_8_198) l_0_8_212)) (* (* 2.0 l_0_8_199) l_0_8_213))))
 (let ((?x29705 (- (- (+ ?x29700 ?x25967) (* (* 2.0 l_0_8_226) l_0_8_240)) (* (* 2.0 l_0_8_227) l_0_8_241))))
 (let ((?x29709 (- (- ?x29705 (* (* 2.0 l_0_8_254) l_0_8_268)) (* (* 2.0 l_0_8_255) l_0_8_269))))
 (let ((?x29713 (- (- ?x29709 (* (* 2.0 l_0_8_282) l_0_8_296)) (* (* 2.0 l_0_8_283) l_0_8_297))))
 (= (- (- (+ ?x29713 ?x25987) ?x25989) ?x25991) 0.0)))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26113 (* ?x25576 l_0_8_33)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26111 (* ?x25573 l_0_8_32)))
 (let ((?x26108 (* 2.0 l_0_8_3)))
 (let ((?x26109 (* ?x26108 l_0_8_5)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26070 (* ?x26069 l_0_8_4)))
 (let ((?x29783 (- (* (* (- 2.0) l_0_8_116) l_0_8_128) (* (* 2.0 l_0_8_117) l_0_8_129))))
 (let ((?x29788 (- (+ (- ?x29783 (* (* 2.0 l_0_8_118) l_0_8_130)) ?x26070) (* (* 2.0 l_0_8_200) l_0_8_212))))
 (let ((?x29792 (- (- ?x29788 (* (* 2.0 l_0_8_201) l_0_8_213)) (* (* 2.0 l_0_8_202) l_0_8_214))))
 (let ((?x29796 (- (- ?x29792 (* (* 2.0 l_0_8_228) l_0_8_240)) (* (* 2.0 l_0_8_229) l_0_8_241))))
 (let ((?x29800 (- (- ?x29796 (* (* 2.0 l_0_8_230) l_0_8_242)) (* (* 2.0 l_0_8_256) l_0_8_268))))
 (let ((?x29804 (- (- ?x29800 (* (* 2.0 l_0_8_257) l_0_8_269)) (* (* 2.0 l_0_8_258) l_0_8_270))))
 (let ((?x29808 (- (- ?x29804 (* (* 2.0 l_0_8_284) l_0_8_296)) (* (* 2.0 l_0_8_285) l_0_8_297))))
 (let ((?x29813 (- (- (+ (- ?x29808 (* (* 2.0 l_0_8_286) l_0_8_298)) ?x26109) ?x26111) ?x26113)))
 (= ?x29813 0.0))))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26286 (* ?x25576 l_0_8_36)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26284 (* ?x25573 l_0_8_35)))
 (let ((?x26108 (* 2.0 l_0_8_3)))
 (let ((?x26282 (* ?x26108 l_0_8_8)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26232 (* ?x26069 l_0_8_7)))
 (let ((?x29910 (- (* (* (- 2.0) l_0_8_119) l_0_8_128) (* (* 2.0 l_0_8_120) l_0_8_129))))
 (let ((?x29914 (- (- ?x29910 (* (* 2.0 l_0_8_121) l_0_8_130)) (* (* 2.0 l_0_8_122) l_0_8_131))))
 (let ((?x29919 (- (- (+ ?x29914 ?x26232) (* (* 2.0 l_0_8_203) l_0_8_212)) (* (* 2.0 l_0_8_204) l_0_8_213))))
 (let ((?x29923 (- (- ?x29919 (* (* 2.0 l_0_8_205) l_0_8_214)) (* (* 2.0 l_0_8_206) l_0_8_215))))
 (let ((?x29927 (- (- ?x29923 (* (* 2.0 l_0_8_231) l_0_8_240)) (* (* 2.0 l_0_8_232) l_0_8_241))))
 (let ((?x29931 (- (- ?x29927 (* (* 2.0 l_0_8_233) l_0_8_242)) (* (* 2.0 l_0_8_234) l_0_8_243))))
 (let ((?x29935 (- (- ?x29931 (* (* 2.0 l_0_8_259) l_0_8_268)) (* (* 2.0 l_0_8_260) l_0_8_269))))
 (let ((?x29939 (- (- ?x29935 (* (* 2.0 l_0_8_261) l_0_8_270)) (* (* 2.0 l_0_8_262) l_0_8_271))))
 (let ((?x29943 (- (- ?x29939 (* (* 2.0 l_0_8_287) l_0_8_296)) (* (* 2.0 l_0_8_288) l_0_8_297))))
 (let ((?x29947 (- (- ?x29943 (* (* 2.0 l_0_8_289) l_0_8_298)) (* (* 2.0 l_0_8_290) l_0_8_299))))
 (= (- (- (+ ?x29947 ?x26282) ?x26284) ?x26286) 0.0))))))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26656 (* ?x25576 l_0_8_45)))
 (let ((?x30141 (* l_0_8_301 l_0_8_301)))
 (let ((?x30139 (* l_0_8_300 l_0_8_300)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26653 (* ?x25573 l_0_8_44)))
 (let ((?x30136 (* l_0_8_299 l_0_8_299)))
 (let ((?x30134 (* l_0_8_298 l_0_8_298)))
 (let ((?x30132 (* l_0_8_297 l_0_8_297)))
 (let ((?x30130 (* l_0_8_296 l_0_8_296)))
 (let ((?x30128 (* l_0_8_273 l_0_8_273)))
 (let ((?x30126 (* l_0_8_272 l_0_8_272)))
 (let ((?x30124 (* l_0_8_271 l_0_8_271)))
 (let ((?x30122 (* l_0_8_270 l_0_8_270)))
 (let ((?x30120 (* l_0_8_269 l_0_8_269)))
 (let ((?x30118 (* l_0_8_268 l_0_8_268)))
 (let ((?x30116 (* l_0_8_245 l_0_8_245)))
 (let ((?x30114 (* l_0_8_244 l_0_8_244)))
 (let ((?x30112 (* l_0_8_243 l_0_8_243)))
 (let ((?x30110 (* l_0_8_242 l_0_8_242)))
 (let ((?x30108 (* l_0_8_241 l_0_8_241)))
 (let ((?x30106 (* l_0_8_240 l_0_8_240)))
 (let ((?x30104 (* l_0_8_217 l_0_8_217)))
 (let ((?x30102 (* l_0_8_216 l_0_8_216)))
 (let ((?x30100 (* l_0_8_215 l_0_8_215)))
 (let ((?x30098 (* l_0_8_214 l_0_8_214)))
 (let ((?x30096 (* l_0_8_213 l_0_8_213)))
 (let ((?x30094 (* l_0_8_212 l_0_8_212)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x26590 (* ?x26589 l_0_8_3)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x26587 (* ?x26586 l_0_8_2)))
 (let ((?x30079 (- (* (* (- 1.0) l_0_8_128) l_0_8_128) (* (* 1.0 l_0_8_129) l_0_8_129))))
 (let ((?x30085 (- (- ?x30079 (* (* 1.0 l_0_8_130) l_0_8_130)) (* (* 1.0 l_0_8_131) l_0_8_131))))
 (let ((?x30091 (- (- ?x30085 (* (* 1.0 l_0_8_132) l_0_8_132)) (* (* 1.0 l_0_8_133) l_0_8_133))))
 (let ((?x30103 (- (- (- (- (- (+ (+ ?x30091 ?x26587) ?x26590) ?x30094) ?x30096) ?x30098) ?x30100) ?x30102)))
 (let ((?x30117 (- (- (- (- (- (- (- ?x30103 ?x30104) ?x30106) ?x30108) ?x30110) ?x30112) ?x30114) ?x30116)))
 (let ((?x30131 (- (- (- (- (- (- (- ?x30117 ?x30118) ?x30120) ?x30122) ?x30124) ?x30126) ?x30128) ?x30130)))
 (let ((?x30143 (- (- (- (- (- (- (- ?x30131 ?x30132) ?x30134) ?x30136) ?x26653) ?x30139) ?x30141) ?x26656)))
 (= ?x30143 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25576 (* 2.0 l_0_8_31)))
 (let ((?x26890 (* ?x25576 l_0_8_51)))
 (let ((?x25573 (* 2.0 l_0_8_30)))
 (let ((?x26888 (* ?x25573 l_0_8_50)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x26856 (* ?x26855 l_0_8_3)))
 (let ((?x26069 (* 2.0 l_0_8_2)))
 (let ((?x26843 (* ?x26069 l_0_8_22)))
 (let ((?x30248 (- (* (* (- 2.0) l_0_8_128) l_0_8_134) (* (* 2.0 l_0_8_129) l_0_8_135))))
 (let ((?x30254 (- (- ?x30248 (* (* 2.0 l_0_8_130) l_0_8_136)) (* (* 2.0 l_0_8_131) l_0_8_137))))
 (let ((?x30260 (- (- ?x30254 (* (* 2.0 l_0_8_132) l_0_8_138)) (* (* 2.0 l_0_8_133) l_0_8_139))))
 (let ((?x30267 (- (- (+ ?x30260 ?x26843) (* (* 2.0 l_0_8_212) l_0_8_218)) (* (* 2.0 l_0_8_213) l_0_8_219))))
 (let ((?x30273 (- (- ?x30267 (* (* 2.0 l_0_8_214) l_0_8_220)) (* (* 2.0 l_0_8_215) l_0_8_221))))
 (let ((?x30279 (- (- ?x30273 (* (* 2.0 l_0_8_216) l_0_8_222)) (* (* 2.0 l_0_8_217) l_0_8_223))))
 (let ((?x30286 (- (- (+ ?x30279 ?x26856) (* (* 2.0 l_0_8_240) l_0_8_246)) (* (* 2.0 l_0_8_241) l_0_8_247))))
 (let ((?x30292 (- (- ?x30286 (* (* 2.0 l_0_8_242) l_0_8_248)) (* (* 2.0 l_0_8_243) l_0_8_249))))
 (let ((?x30298 (- (- ?x30292 (* (* 2.0 l_0_8_244) l_0_8_250)) (* (* 2.0 l_0_8_245) l_0_8_251))))
 (let ((?x30304 (- (- ?x30298 (* (* 2.0 l_0_8_268) l_0_8_274)) (* (* 2.0 l_0_8_269) l_0_8_275))))
 (let ((?x30310 (- (- ?x30304 (* (* 2.0 l_0_8_270) l_0_8_276)) (* (* 2.0 l_0_8_271) l_0_8_277))))
 (let ((?x30316 (- (- ?x30310 (* (* 2.0 l_0_8_272) l_0_8_278)) (* (* 2.0 l_0_8_273) l_0_8_279))))
 (let ((?x30322 (- (- ?x30316 (* (* 2.0 l_0_8_296) l_0_8_302)) (* (* 2.0 l_0_8_297) l_0_8_303))))
 (let ((?x30328 (- (- ?x30322 (* (* 2.0 l_0_8_298) l_0_8_304)) (* (* 2.0 l_0_8_299) l_0_8_305))))
 (let ((?x30335 (- (- (- ?x30328 ?x26888) (* (* 2.0 l_0_8_300) l_0_8_306)) (* (* 2.0 l_0_8_301) l_0_8_307))))
 (= (- ?x30335 ?x26890) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x27067 (* l_0_8_6 l_0_8_6)))
 (let ((?x27065 (* l_0_8_5 l_0_8_5)))
 (let ((?x27063 (* l_0_8_4 l_0_8_4)))
 (let ((?x27061 (* l_0_8_34 l_0_8_34)))
 (let ((?x28568 (+ (- (- (* (- l_0_8_32) l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x27061) ?x27063)))
 (= (+ (+ ?x28568 ?x27065) ?x27067) 0.0)))))))
(assert
 (let ((?x27096 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x27093 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x27090 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27087 (* ?x27086 l_0_8_37)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27084 (* ?x27083 l_0_8_36)))
 (let ((?x28584 (+ (+ (- (- (* (* (- 2.0) l_0_8_32) l_0_8_35) ?x27084) ?x27087) ?x27090) ?x27093)))
 (= (+ ?x28584 ?x27096) 0.0))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27178 (* ?x27086 l_0_8_46)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27175 (* ?x27083 l_0_8_45)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27172 (* ?x27081 l_0_8_44)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27169 (* ?x27168 l_0_8_6)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27166 (* ?x26589 l_0_8_5)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27158 (* ?x26586 l_0_8_4)))
 (= (- (- (- (+ (+ ?x27158 ?x27166) ?x27169) ?x27172) ?x27175) ?x27178) 0.0))))))))))))))
(assert
 (let ((?x27086 (* 2.0 l_0_8_34)))
 (let ((?x27233 (* ?x27086 l_0_8_52)))
 (let ((?x27083 (* 2.0 l_0_8_33)))
 (let ((?x27231 (* ?x27083 l_0_8_51)))
 (let ((?x27081 (* 2.0 l_0_8_32)))
 (let ((?x27229 (* ?x27081 l_0_8_50)))
 (let ((?x27226 (* 2.0 l_0_8_24)))
 (let ((?x27227 (* ?x27226 l_0_8_6)))
 (let ((?x26855 (* 2.0 l_0_8_23)))
 (let ((?x27224 (* ?x26855 l_0_8_5)))
 (let ((?x28629 (- (- (+ (+ (* (* 2.0 l_0_8_22) l_0_8_4) ?x27224) ?x27227) ?x27229) ?x27231)))
 (let ((?x28630 (- ?x28629 ?x27233)))
 (= ?x28630 0.0))))))))))))))
(assert
 (let ((?x27273 (* l_0_8_9 l_0_8_9)))
 (let ((?x27271 (* l_0_8_8 l_0_8_8)))
 (let ((?x27269 (* l_0_8_7 l_0_8_7)))
 (let ((?x27267 (* l_0_8_38 l_0_8_38)))
 (let ((?x27265 (* l_0_8_37 l_0_8_37)))
 (let ((?x27263 (* l_0_8_36 l_0_8_36)))
 (let ((?x28646 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x27263) ?x27265)))
 (= (+ (+ (+ (- ?x28646 ?x27267) ?x27269) ?x27271) ?x27273) 0.0)))))))))
(assert
 (let ((?x27307 (* 2.0 l_0_8_38)))
 (let ((?x27365 (* ?x27307 l_0_8_47)))
 (let ((?x27304 (* 2.0 l_0_8_37)))
 (let ((?x27362 (* ?x27304 l_0_8_46)))
 (let ((?x27301 (* 2.0 l_0_8_36)))
 (let ((?x27359 (* ?x27301 l_0_8_45)))
 (let ((?x27298 (* 2.0 l_0_8_35)))
 (let ((?x27356 (* ?x27298 l_0_8_44)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27353 (* ?x27168 l_0_8_9)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27351 (* ?x26589 l_0_8_8)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27349 (* ?x26586 l_0_8_7)))
 (let ((?x27332 (* 2.0 l_0_8_10)))
 (let ((?x27336 (* ?x27332 l_0_8_19)))
 (let ((?x28686 (- (- (- (- (+ (+ (+ ?x27336 ?x27349) ?x27351) ?x27353) ?x27356) ?x27359) ?x27362) ?x27365)))
 (= ?x28686 0.0)))))))))))))))))))
(assert
 (let ((?x27705 (* l_0_8_49 l_0_8_49)))
 (let ((?x27703 (* l_0_8_48 l_0_8_48)))
 (let ((?x27701 (* l_0_8_47 l_0_8_47)))
 (let ((?x27699 (* l_0_8_46 l_0_8_46)))
 (let ((?x27697 (* l_0_8_45 l_0_8_45)))
 (let ((?x27695 (* l_0_8_44 l_0_8_44)))
 (let ((?x27688 (* l_0_8_21 l_0_8_21)))
 (let ((?x27686 (* l_0_8_20 l_0_8_20)))
 (let ((?x27684 (* l_0_8_19 l_0_8_19)))
 (let ((?x27682 (* l_0_8_18 l_0_8_18)))
 (let ((?x28778 (+ (+ (+ (* l_0_8_16 l_0_8_16) (* l_0_8_17 l_0_8_17)) ?x27682) ?x27684)))
 (let ((?x28785 (- (- (- (- (- (+ (+ ?x28778 ?x27686) ?x27688) ?x27695) ?x27697) ?x27699) ?x27701) ?x27703)))
 (= (- ?x28785 ?x27705) 0.0))))))))))))))
(assert
 (let ((?x27791 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x27788 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x27785 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x27782 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x27779 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x27776 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x27768 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x27765 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x27762 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x27168 (* 2.0 l_0_8_18)))
 (let ((?x27759 (* ?x27168 l_0_8_24)))
 (let ((?x26589 (* 2.0 l_0_8_17)))
 (let ((?x27757 (* ?x26589 l_0_8_23)))
 (let ((?x26586 (* 2.0 l_0_8_16)))
 (let ((?x27755 (* ?x26586 l_0_8_22)))
 (let ((?x28814 (- (- (+ (+ (+ (+ (+ ?x27755 ?x27757) ?x27759) ?x27762) ?x27765) ?x27768) ?x27776) ?x27779)))
 (= (- (- (- (- ?x28814 ?x27782) ?x27785) ?x27788) ?x27791) 0.0))))))))))))))))))
(assert
 (let ((?x27891 (* l_0_8_56 l_0_8_56)))
 (let ((?x27889 (* l_0_8_55 l_0_8_55)))
 (let ((?x27887 (* l_0_8_54 l_0_8_54)))
 (let ((?x27885 (* l_0_8_53 l_0_8_53)))
 (let ((?x27883 (* l_0_8_52 l_0_8_52)))
 (let ((?x27881 (* l_0_8_51 l_0_8_51)))
 (let ((?x27879 (* l_0_8_50 l_0_8_50)))
 (let ((?x27877 (* l_0_8_28 l_0_8_28)))
 (let ((?x27875 (* l_0_8_27 l_0_8_27)))
 (let ((?x27873 (* l_0_8_26 l_0_8_26)))
 (let ((?x27871 (* l_0_8_25 l_0_8_25)))
 (let ((?x27869 (* l_0_8_24 l_0_8_24)))
 (let ((?x28848 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x27869) ?x27871)))
 (let ((?x28855 (- (- (- (- (+ (+ (+ ?x28848 ?x27873) ?x27875) ?x27877) ?x27879) ?x27881) ?x27883) ?x27885)))
 (= (- (- (- ?x28855 ?x27887) ?x27889) ?x27891) 0.0))))))))))))))))
(assert
 (= (- (* l_0_8_57 l_0_8_57) (* l_0_8_85 l_0_8_85)) 0.0))
(assert
 (let ((?x30530 (- (* (* 2.0 l_0_8_141) l_0_8_162) (* (* 2.0 l_0_8_169) l_0_8_190))))
 (let ((?x30534 (- (+ ?x30530 (* (* 2.0 l_0_8_57) l_0_8_58)) (* (* 2.0 l_0_8_85) l_0_8_86))))
 (= ?x30534 0.0))))
(assert
 (let ((?x30556 (- (* (* 2.0 l_0_8_57) l_0_8_67) (* (* 2.0 l_0_8_85) l_0_8_95))))
 (= ?x30556 0.0)))
(assert
 (let ((?x30569 (+ (* (* (- 2.0) l_0_8_100) l_0_8_85) (* (* 2.0 l_0_8_57) l_0_8_72))))
 (= ?x30569 0.0)))
(assert
 (let ((?x30575 (+ (* (* (- 2.0) l_0_8_106) l_0_8_85) (* (* 2.0 l_0_8_57) l_0_8_78))))
 (= ?x30575 0.0)))
(assert
 (let ((?x30616 (* l_0_8_196 l_0_8_196)))
 (let ((?x30614 (* l_0_8_195 l_0_8_195)))
 (let ((?x30612 (* l_0_8_194 l_0_8_194)))
 (let ((?x30610 (* l_0_8_193 l_0_8_193)))
 (let ((?x30608 (* l_0_8_192 l_0_8_192)))
 (let ((?x30606 (* l_0_8_191 l_0_8_191)))
 (let ((?x30604 (* l_0_8_190 l_0_8_190)))
 (let ((?x30602 (* l_0_8_168 l_0_8_168)))
 (let ((?x30600 (* l_0_8_167 l_0_8_167)))
 (let ((?x30598 (* l_0_8_166 l_0_8_166)))
 (let ((?x30596 (* l_0_8_165 l_0_8_165)))
 (let ((?x30594 (* l_0_8_164 l_0_8_164)))
 (let ((?x30592 (* l_0_8_163 l_0_8_163)))
 (let ((?x30590 (* l_0_8_162 l_0_8_162)))
 (let ((?x30585 (- (* (* (- 2.0) l_0_8_106) l_0_8_86) (* (* 2.0 l_0_8_107) l_0_8_87))))
 (let ((?x30603 (+ (+ (+ (+ (+ (+ (+ ?x30585 ?x30590) ?x30592) ?x30594) ?x30596) ?x30598) ?x30600) ?x30602)))
 (let ((?x30617 (- (- (- (- (- (- (- ?x30603 ?x30604) ?x30606) ?x30608) ?x30610) ?x30612) ?x30614) ?x30616)))
 (let ((?x30621 (+ (+ ?x30617 (* (* 2.0 l_0_8_58) l_0_8_78)) (* (* 2.0 l_0_8_59) l_0_8_79))))
 (= ?x30621 0.0))))))))))))))))))))
(assert
 (let ((?x30676 (* l_0_8_99 l_0_8_99)))
 (let ((?x30674 (* l_0_8_98 l_0_8_98)))
 (let ((?x30672 (* l_0_8_97 l_0_8_97)))
 (let ((?x30670 (* l_0_8_96 l_0_8_96)))
 (let ((?x30668 (* l_0_8_95 l_0_8_95)))
 (let ((?x30666 (* l_0_8_71 l_0_8_71)))
 (let ((?x30664 (* l_0_8_70 l_0_8_70)))
 (let ((?x30662 (* l_0_8_69 l_0_8_69)))
 (let ((?x30665 (+ (+ (+ (* l_0_8_67 l_0_8_67) (* l_0_8_68 l_0_8_68)) ?x30662) ?x30664)))
 (= (- (- (- (- (- (+ ?x30665 ?x30666) ?x30668) ?x30670) ?x30672) ?x30674) ?x30676) 0.0)))))))))))
(assert
 (let ((?x30698 (- (* (* (- 2.0) l_0_8_100) l_0_8_95) (* (* 2.0 l_0_8_101) l_0_8_96))))
 (let ((?x30702 (- (- ?x30698 (* (* 2.0 l_0_8_102) l_0_8_97)) (* (* 2.0 l_0_8_103) l_0_8_98))))
 (let ((?x30708 (+ (- ?x30702 (* (* 2.0 l_0_8_104) l_0_8_99)) (* (* 2.0 l_0_8_67) l_0_8_72))))
 (let ((?x30714 (+ (+ ?x30708 (* (* 2.0 l_0_8_68) l_0_8_73)) (* (* 2.0 l_0_8_69) l_0_8_74))))
 (let ((?x30720 (+ (+ ?x30714 (* (* 2.0 l_0_8_70) l_0_8_75)) (* (* 2.0 l_0_8_71) l_0_8_76))))
 (= ?x30720 0.0)))))))
(assert
 (let ((?x30753 (- (* (* (- 2.0) l_0_8_106) l_0_8_95) (* (* 2.0 l_0_8_107) l_0_8_96))))
 (let ((?x30767 (- (- ?x30753 (* (* 2.0 l_0_8_108) l_0_8_97)) (* (* 2.0 l_0_8_109) l_0_8_98))))
 (let ((?x30772 (+ (- ?x30767 (* (* 2.0 l_0_8_110) l_0_8_99)) (* (* 2.0 l_0_8_67) l_0_8_78))))
 (let ((?x30776 (+ (+ ?x30772 (* (* 2.0 l_0_8_68) l_0_8_79)) (* (* 2.0 l_0_8_69) l_0_8_80))))
 (let ((?x30780 (+ (+ ?x30776 (* (* 2.0 l_0_8_70) l_0_8_81)) (* (* 2.0 l_0_8_71) l_0_8_82))))
 (= ?x30780 0.0)))))))
(assert
 (let ((?x30843 (* l_0_8_77 l_0_8_77)))
 (let ((?x30841 (* l_0_8_76 l_0_8_76)))
 (let ((?x30839 (* l_0_8_75 l_0_8_75)))
 (let ((?x30837 (* l_0_8_74 l_0_8_74)))
 (let ((?x30835 (* l_0_8_73 l_0_8_73)))
 (let ((?x30833 (* l_0_8_72 l_0_8_72)))
 (let ((?x30831 (* l_0_8_105 l_0_8_105)))
 (let ((?x30829 (* l_0_8_104 l_0_8_104)))
 (let ((?x30827 (* l_0_8_103 l_0_8_103)))
 (let ((?x30817 (* l_0_8_102 l_0_8_102)))
 (let ((?x30818 (- (- (* (- l_0_8_100) l_0_8_100) (* l_0_8_101 l_0_8_101)) ?x30817)))
 (let ((?x30840 (+ (+ (+ (+ (- (- (- ?x30818 ?x30827) ?x30829) ?x30831) ?x30833) ?x30835) ?x30837) ?x30839)))
 (= (+ (+ ?x30840 ?x30841) ?x30843) 0.0))))))))))))))
(assert
 (let ((?x30874 (- (* (* (- 2.0) l_0_8_100) l_0_8_106) (* (* 2.0 l_0_8_101) l_0_8_107))))
 (let ((?x30878 (- (- ?x30874 (* (* 2.0 l_0_8_102) l_0_8_108)) (* (* 2.0 l_0_8_103) l_0_8_109))))
 (let ((?x30883 (- (- ?x30878 (* (* 2.0 l_0_8_104) l_0_8_110)) (* (* 2.0 l_0_8_105) l_0_8_111))))
 (let ((?x30889 (+ (+ ?x30883 (* (* 2.0 l_0_8_72) l_0_8_78)) (* (* 2.0 l_0_8_73) l_0_8_79))))
 (let ((?x30895 (+ (+ ?x30889 (* (* 2.0 l_0_8_74) l_0_8_80)) (* (* 2.0 l_0_8_75) l_0_8_81))))
 (let ((?x30901 (+ (+ ?x30895 (* (* 2.0 l_0_8_76) l_0_8_82)) (* (* 2.0 l_0_8_77) l_0_8_83))))
 (= ?x30901 0.0))))))))
(assert
 (let ((?x30976 (* l_0_8_84 l_0_8_84)))
 (let ((?x30974 (* l_0_8_83 l_0_8_83)))
 (let ((?x30972 (* l_0_8_82 l_0_8_82)))
 (let ((?x30970 (* l_0_8_81 l_0_8_81)))
 (let ((?x30968 (* l_0_8_80 l_0_8_80)))
 (let ((?x30966 (* l_0_8_79 l_0_8_79)))
 (let ((?x30964 (* l_0_8_78 l_0_8_78)))
 (let ((?x30962 (* l_0_8_112 l_0_8_112)))
 (let ((?x30960 (* l_0_8_111 l_0_8_111)))
 (let ((?x30958 (* l_0_8_110 l_0_8_110)))
 (let ((?x30947 (* l_0_8_109 l_0_8_109)))
 (let ((?x30944 (* l_0_8_108 l_0_8_108)))
 (let ((?x30946 (- (- (* (- l_0_8_106) l_0_8_106) (* l_0_8_107 l_0_8_107)) ?x30944)))
 (let ((?x30969 (+ (+ (+ (- (- (- (- ?x30946 ?x30947) ?x30958) ?x30960) ?x30962) ?x30964) ?x30966) ?x30968)))
 (= (+ (+ (+ (+ ?x30969 ?x30970) ?x30972) ?x30974) ?x30976) 0.0))))))))))))))))
(assert
 (let ((?x31021 (* l_0_8_281 l_0_8_281)))
 (let ((?x31019 (* l_0_8_253 l_0_8_253)))
 (let ((?x31017 (* l_0_8_225 l_0_8_225)))
 (let ((?x31015 (* l_0_8_197 l_0_8_197)))
 (let ((?x31012 (+ (* (* (- 1.0) l_0_8_113) l_0_8_113) (* (* 2.0 l_0_8_141) l_0_8_142))))
 (let ((?x31020 (- (- (- (- ?x31012 (* (* 2.0 l_0_8_169) l_0_8_170)) ?x31015) ?x31017) ?x31019)))
 (= (- ?x31020 ?x31021) 0.0))))))))
(assert
 (let ((?x31052 (+ (* (* (- 2.0) l_0_8_113) l_0_8_119) (* (* 2.0 l_0_8_142) l_0_8_147))))
 (let ((?x31056 (- (+ ?x31052 (* (* 2.0 l_0_8_143) l_0_8_148)) (* (* 2.0 l_0_8_170) l_0_8_175))))
 (let ((?x31060 (- (- ?x31056 (* (* 2.0 l_0_8_171) l_0_8_176)) (* (* 2.0 l_0_8_197) l_0_8_203))))
 (let ((?x31064 (- (- ?x31060 (* (* 2.0 l_0_8_225) l_0_8_231)) (* (* 2.0 l_0_8_253) l_0_8_259))))
 (= (- ?x31064 (* (* 2.0 l_0_8_281) l_0_8_287)) 0.0))))))
(assert
 (let ((?x31118 (- (* (* (- 2.0) l_0_8_114) l_0_8_116) (* (* 2.0 l_0_8_115) l_0_8_117))))
 (let ((?x31122 (- (- ?x31118 (* (* 2.0 l_0_8_198) l_0_8_200)) (* (* 2.0 l_0_8_199) l_0_8_201))))
 (let ((?x31126 (- (- ?x31122 (* (* 2.0 l_0_8_226) l_0_8_228)) (* (* 2.0 l_0_8_227) l_0_8_229))))
 (let ((?x31130 (- (- ?x31126 (* (* 2.0 l_0_8_254) l_0_8_256)) (* (* 2.0 l_0_8_255) l_0_8_257))))
 (let ((?x31134 (- (- ?x31130 (* (* 2.0 l_0_8_282) l_0_8_284)) (* (* 2.0 l_0_8_283) l_0_8_285))))
 (= ?x31134 0.0)))))))
(assert
 (let ((?x31197 (- (* (* (- 2.0) l_0_8_114) l_0_8_119) (* (* 2.0 l_0_8_115) l_0_8_120))))
 (let ((?x31201 (- (- ?x31197 (* (* 2.0 l_0_8_198) l_0_8_203)) (* (* 2.0 l_0_8_199) l_0_8_204))))
 (let ((?x31205 (- (- ?x31201 (* (* 2.0 l_0_8_226) l_0_8_231)) (* (* 2.0 l_0_8_227) l_0_8_232))))
 (let ((?x31209 (- (- ?x31205 (* (* 2.0 l_0_8_254) l_0_8_259)) (* (* 2.0 l_0_8_255) l_0_8_260))))
 (let ((?x31213 (- (- ?x31209 (* (* 2.0 l_0_8_282) l_0_8_287)) (* (* 2.0 l_0_8_283) l_0_8_288))))
 (= ?x31213 0.0)))))))
(assert
 (let ((?x31276 (- (* (* (- 2.0) l_0_8_114) l_0_8_134) (* (* 2.0 l_0_8_115) l_0_8_135))))
 (let ((?x31280 (- (- ?x31276 (* (* 2.0 l_0_8_198) l_0_8_218)) (* (* 2.0 l_0_8_199) l_0_8_219))))
 (let ((?x31284 (- (- ?x31280 (* (* 2.0 l_0_8_226) l_0_8_246)) (* (* 2.0 l_0_8_227) l_0_8_247))))
 (let ((?x31288 (- (- ?x31284 (* (* 2.0 l_0_8_254) l_0_8_274)) (* (* 2.0 l_0_8_255) l_0_8_275))))
 (let ((?x31292 (- (- ?x31288 (* (* 2.0 l_0_8_282) l_0_8_302)) (* (* 2.0 l_0_8_283) l_0_8_303))))
 (= ?x31292 0.0)))))))
(assert
 (let ((?x31383 (* l_0_8_286 l_0_8_286)))
 (let ((?x31381 (* l_0_8_285 l_0_8_285)))
 (let ((?x31379 (* l_0_8_284 l_0_8_284)))
 (let ((?x31377 (* l_0_8_258 l_0_8_258)))
 (let ((?x31375 (* l_0_8_257 l_0_8_257)))
 (let ((?x31373 (* l_0_8_256 l_0_8_256)))
 (let ((?x31371 (* l_0_8_230 l_0_8_230)))
 (let ((?x31369 (* l_0_8_229 l_0_8_229)))
 (let ((?x31367 (* l_0_8_228 l_0_8_228)))
 (let ((?x31365 (* l_0_8_202 l_0_8_202)))
 (let ((?x31363 (* l_0_8_201 l_0_8_201)))
 (let ((?x31361 (* l_0_8_200 l_0_8_200)))
 (let ((?x31357 (- (* (* (- 1.0) l_0_8_116) l_0_8_116) (* (* 1.0 l_0_8_117) l_0_8_117))))
 (let ((?x31366 (- (- (- (- ?x31357 (* (* 1.0 l_0_8_118) l_0_8_118)) ?x31361) ?x31363) ?x31365)))
 (let ((?x31380 (- (- (- (- (- (- (- ?x31366 ?x31367) ?x31369) ?x31371) ?x31373) ?x31375) ?x31377) ?x31379)))
 (= (- (- ?x31380 ?x31381) ?x31383) 0.0)))))))))))))))))
(assert
 (let ((?x31435 (- (* (* (- 2.0) l_0_8_116) l_0_8_119) (* (* 2.0 l_0_8_117) l_0_8_120))))
 (let ((?x31439 (- (- ?x31435 (* (* 2.0 l_0_8_118) l_0_8_121)) (* (* 2.0 l_0_8_200) l_0_8_203))))
 (let ((?x31443 (- (- ?x31439 (* (* 2.0 l_0_8_201) l_0_8_204)) (* (* 2.0 l_0_8_202) l_0_8_205))))
 (let ((?x31447 (- (- ?x31443 (* (* 2.0 l_0_8_228) l_0_8_231)) (* (* 2.0 l_0_8_229) l_0_8_232))))
 (let ((?x31451 (- (- ?x31447 (* (* 2.0 l_0_8_230) l_0_8_233)) (* (* 2.0 l_0_8_256) l_0_8_259))))
 (let ((?x31455 (- (- ?x31451 (* (* 2.0 l_0_8_257) l_0_8_260)) (* (* 2.0 l_0_8_258) l_0_8_261))))
 (let ((?x31459 (- (- ?x31455 (* (* 2.0 l_0_8_284) l_0_8_287)) (* (* 2.0 l_0_8_285) l_0_8_288))))
 (= (- ?x31459 (* (* 2.0 l_0_8_286) l_0_8_289)) 0.0)))))))))
(assert
 (let ((?x31554 (- (* (* (- 2.0) l_0_8_116) l_0_8_134) (* (* 2.0 l_0_8_117) l_0_8_135))))
 (let ((?x31558 (- (- ?x31554 (* (* 2.0 l_0_8_118) l_0_8_136)) (* (* 2.0 l_0_8_200) l_0_8_218))))
 (let ((?x31562 (- (- ?x31558 (* (* 2.0 l_0_8_201) l_0_8_219)) (* (* 2.0 l_0_8_202) l_0_8_220))))
 (let ((?x31566 (- (- ?x31562 (* (* 2.0 l_0_8_228) l_0_8_246)) (* (* 2.0 l_0_8_229) l_0_8_247))))
 (let ((?x31570 (- (- ?x31566 (* (* 2.0 l_0_8_230) l_0_8_248)) (* (* 2.0 l_0_8_256) l_0_8_274))))
 (let ((?x31574 (- (- ?x31570 (* (* 2.0 l_0_8_257) l_0_8_275)) (* (* 2.0 l_0_8_258) l_0_8_276))))
 (let ((?x31578 (- (- ?x31574 (* (* 2.0 l_0_8_284) l_0_8_302)) (* (* 2.0 l_0_8_285) l_0_8_303))))
 (= (- ?x31578 (* (* 2.0 l_0_8_286) l_0_8_304)) 0.0)))))))))
(assert
 (let ((?x31712 (* l_0_8_290 l_0_8_290)))
 (let ((?x31710 (* l_0_8_289 l_0_8_289)))
 (let ((?x31708 (* l_0_8_288 l_0_8_288)))
 (let ((?x31706 (* l_0_8_287 l_0_8_287)))
 (let ((?x31704 (* l_0_8_262 l_0_8_262)))
 (let ((?x31702 (* l_0_8_261 l_0_8_261)))
 (let ((?x31700 (* l_0_8_260 l_0_8_260)))
 (let ((?x31698 (* l_0_8_259 l_0_8_259)))
 (let ((?x31696 (* l_0_8_234 l_0_8_234)))
 (let ((?x31694 (* l_0_8_233 l_0_8_233)))
 (let ((?x31692 (* l_0_8_232 l_0_8_232)))
 (let ((?x31690 (* l_0_8_231 l_0_8_231)))
 (let ((?x31688 (* l_0_8_206 l_0_8_206)))
 (let ((?x31686 (* l_0_8_205 l_0_8_205)))
 (let ((?x31684 (* l_0_8_204 l_0_8_204)))
 (let ((?x31682 (* l_0_8_203 l_0_8_203)))
 (let ((?x31675 (- (* (* (- 1.0) l_0_8_119) l_0_8_119) (* (* 1.0 l_0_8_120) l_0_8_120))))
 (let ((?x31681 (- (- ?x31675 (* (* 1.0 l_0_8_121) l_0_8_121)) (* (* 1.0 l_0_8_122) l_0_8_122))))
 (let ((?x31695 (- (- (- (- (- (- (- ?x31681 ?x31682) ?x31684) ?x31686) ?x31688) ?x31690) ?x31692) ?x31694)))
 (let ((?x31709 (- (- (- (- (- (- (- ?x31695 ?x31696) ?x31698) ?x31700) ?x31702) ?x31704) ?x31706) ?x31708)))
 (= (- (- ?x31709 ?x31710) ?x31712) 0.0))))))))))))))))))))))
(assert
 (let ((?x31852 (* l_0_8_308 l_0_8_308)))
 (let ((?x31850 (* l_0_8_307 l_0_8_307)))
 (let ((?x31848 (* l_0_8_306 l_0_8_306)))
 (let ((?x31846 (* l_0_8_305 l_0_8_305)))
 (let ((?x31844 (* l_0_8_304 l_0_8_304)))
 (let ((?x31842 (* l_0_8_303 l_0_8_303)))
 (let ((?x31840 (* l_0_8_302 l_0_8_302)))
 (let ((?x31838 (* l_0_8_280 l_0_8_280)))
 (let ((?x31836 (* l_0_8_279 l_0_8_279)))
 (let ((?x31834 (* l_0_8_278 l_0_8_278)))
 (let ((?x31832 (* l_0_8_277 l_0_8_277)))
 (let ((?x31830 (* l_0_8_276 l_0_8_276)))
 (let ((?x31828 (* l_0_8_275 l_0_8_275)))
 (let ((?x31826 (* l_0_8_274 l_0_8_274)))
 (let ((?x31824 (* l_0_8_252 l_0_8_252)))
 (let ((?x31822 (* l_0_8_251 l_0_8_251)))
 (let ((?x31820 (* l_0_8_250 l_0_8_250)))
 (let ((?x31818 (* l_0_8_249 l_0_8_249)))
 (let ((?x31816 (* l_0_8_248 l_0_8_248)))
 (let ((?x31814 (* l_0_8_247 l_0_8_247)))
 (let ((?x31812 (* l_0_8_246 l_0_8_246)))
 (let ((?x31810 (* l_0_8_224 l_0_8_224)))
 (let ((?x31808 (* l_0_8_223 l_0_8_223)))
 (let ((?x31806 (* l_0_8_222 l_0_8_222)))
 (let ((?x31804 (* l_0_8_221 l_0_8_221)))
 (let ((?x31802 (* l_0_8_220 l_0_8_220)))
 (let ((?x31800 (* l_0_8_219 l_0_8_219)))
 (let ((?x31798 (* l_0_8_218 l_0_8_218)))
 (let ((?x31782 (- (* (* (- 1.0) l_0_8_134) l_0_8_134) (* (* 1.0 l_0_8_135) l_0_8_135))))
 (let ((?x31788 (- (- ?x31782 (* (* 1.0 l_0_8_136) l_0_8_136)) (* (* 1.0 l_0_8_137) l_0_8_137))))
 (let ((?x31794 (- (- ?x31788 (* (* 1.0 l_0_8_138) l_0_8_138)) (* (* 1.0 l_0_8_139) l_0_8_139))))
 (let ((?x31803 (- (- (- (- ?x31794 (* (* 1.0 l_0_8_140) l_0_8_140)) ?x31798) ?x31800) ?x31802)))
 (let ((?x31817 (- (- (- (- (- (- (- ?x31803 ?x31804) ?x31806) ?x31808) ?x31810) ?x31812) ?x31814) ?x31816)))
 (let ((?x31831 (- (- (- (- (- (- (- ?x31817 ?x31818) ?x31820) ?x31822) ?x31824) ?x31826) ?x31828) ?x31830)))
 (let ((?x31845 (- (- (- (- (- (- (- ?x31831 ?x31832) ?x31834) ?x31836) ?x31838) ?x31840) ?x31842) ?x31844)))
 (= (- (- (- (- ?x31845 ?x31846) ?x31848) ?x31850) ?x31852) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (= (- (* l_0_8_141 l_0_8_141) (* l_0_8_169 l_0_8_169)) 0.0))
(assert
 (let ((?x31975 (- (* (* 2.0 l_0_8_141) l_0_8_147) (* (* 2.0 l_0_8_169) l_0_8_175))))
 (= ?x31975 0.0)))
(assert
 (let ((?x31999 (* l_0_8_178 l_0_8_178)))
 (let ((?x31997 (* l_0_8_177 l_0_8_177)))
 (let ((?x31995 (* l_0_8_176 l_0_8_176)))
 (let ((?x31993 (* l_0_8_175 l_0_8_175)))
 (let ((?x31991 (* l_0_8_150 l_0_8_150)))
 (let ((?x31989 (* l_0_8_149 l_0_8_149)))
 (let ((?x31992 (+ (+ (+ (* l_0_8_147 l_0_8_147) (* l_0_8_148 l_0_8_148)) ?x31989) ?x31991)))
 (= (- (- (- (- ?x31992 ?x31993) ?x31995) ?x31997) ?x31999) 0.0)))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_28 0.0))
(assert
 (>= l_0_8_29 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_34 0.0))
(assert
 (>= l_0_8_38 0.0))
(assert
 (>= l_0_8_43 0.0))
(assert
 (>= l_0_8_49 0.0))
(assert
 (>= l_0_8_56 0.0))
(assert
 (>= l_0_8_57 0.0))
(assert
 (>= l_0_8_59 0.0))
(assert
 (>= l_0_8_62 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_71 0.0))
(assert
 (>= l_0_8_77 0.0))
(assert
 (>= l_0_8_84 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_87 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_94 0.0))
(assert
 (>= l_0_8_99 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_112 0.0))
(assert
 (>= l_0_8_113 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_118 0.0))
(assert
 (>= l_0_8_122 0.0))
(assert
 (>= l_0_8_127 0.0))
(assert
 (>= l_0_8_133 0.0))
(assert
 (>= l_0_8_140 0.0))
(assert
 (>= l_0_8_141 0.0))
(assert
 (>= l_0_8_143 0.0))
(assert
 (>= l_0_8_146 0.0))
(assert
 (>= l_0_8_150 0.0))
(assert
 (>= l_0_8_155 0.0))
(assert
 (>= l_0_8_161 0.0))
(assert
 (>= l_0_8_168 0.0))
(assert
 (>= l_0_8_169 0.0))
(assert
 (>= l_0_8_171 0.0))
(assert
 (>= l_0_8_174 0.0))
(assert
 (>= l_0_8_178 0.0))
(assert
 (>= l_0_8_183 0.0))
(assert
 (>= l_0_8_189 0.0))
(assert
 (>= l_0_8_196 0.0))
(assert
 (>= l_0_8_197 0.0))
(assert
 (>= l_0_8_199 0.0))
(assert
 (>= l_0_8_202 0.0))
(assert
 (>= l_0_8_206 0.0))
(assert
 (>= l_0_8_211 0.0))
(assert
 (>= l_0_8_217 0.0))
(assert
 (>= l_0_8_224 0.0))
(assert
 (>= l_0_8_225 0.0))
(assert
 (>= l_0_8_227 0.0))
(assert
 (>= l_0_8_230 0.0))
(assert
 (>= l_0_8_234 0.0))
(assert
 (>= l_0_8_239 0.0))
(assert
 (>= l_0_8_245 0.0))
(assert
 (>= l_0_8_252 0.0))
(assert
 (>= l_0_8_253 0.0))
(assert
 (>= l_0_8_255 0.0))
(assert
 (>= l_0_8_258 0.0))
(assert
 (>= l_0_8_262 0.0))
(assert
 (>= l_0_8_267 0.0))
(assert
 (>= l_0_8_273 0.0))
(assert
 (>= l_0_8_280 0.0))
(assert
 (>= l_0_8_281 0.0))
(assert
 (>= l_0_8_283 0.0))
(assert
 (>= l_0_8_286 0.0))
(assert
 (>= l_0_8_290 0.0))
(assert
 (>= l_0_8_295 0.0))
(assert
 (>= l_0_8_301 0.0))
(assert
 (>= l_0_8_308 0.0))
(assert
 (let ((?x32110 (* l_0_9_31 l_0_9_31)))
 (let ((?x32108 (* l_0_9_30 l_0_9_30)))
 (let ((?x32106 (* l_0_9_3 l_0_9_3)))
 (let ((?x32104 (* l_0_9_2 l_0_9_2)))
 (let ((?x32097 (- (* (* (- 2.0) l_0_9_114) l_0_9_123) (* (* 2.0 l_0_9_115) l_0_9_124))))
 (let ((?x32103 (- (- ?x32097 (* (* 2.0 l_0_9_198) l_0_9_207)) (* (* 2.0 l_0_9_199) l_0_9_208))))
 (= (+ (+ (+ (- (- ?x32103 ?x32104) ?x32106) ?x32108) ?x32110) 1.0) 0.0))))))))
(assert
 (let ((?x32110 (* l_0_9_31 l_0_9_31)))
 (let ((?x32108 (* l_0_9_30 l_0_9_30)))
 (let ((?x32106 (* l_0_9_3 l_0_9_3)))
 (let ((?x32104 (* l_0_9_2 l_0_9_2)))
 (let ((?x32149 (- (* (* (- 2.0) l_0_9_119) l_0_9_134) (* (* 2.0 l_0_9_120) l_0_9_135))))
 (let ((?x32155 (- (- ?x32149 (* (* 2.0 l_0_9_121) l_0_9_136)) (* (* 2.0 l_0_9_122) l_0_9_137))))
 (let ((?x32161 (+ (+ ?x32155 (* (* 2.0 l_0_9_142) l_0_9_147)) (* (* 2.0 l_0_9_143) l_0_9_148))))
 (let ((?x32167 (- (- ?x32161 (* (* 2.0 l_0_9_170) l_0_9_175)) (* (* 2.0 l_0_9_171) l_0_9_176))))
 (let ((?x32174 (- (- (+ ?x32167 ?x32104) (* (* 2.0 l_0_9_203) l_0_9_218)) (* (* 2.0 l_0_9_204) l_0_9_219))))
 (let ((?x32180 (- (- ?x32174 (* (* 2.0 l_0_9_205) l_0_9_220)) (* (* 2.0 l_0_9_206) l_0_9_221))))
 (= (- (- (- (+ ?x32180 ?x32106) ?x32108) ?x32110) 1.0) 0.0))))))))))))
(assert
 (let ((?x32110 (* l_0_9_31 l_0_9_31)))
 (let ((?x32108 (* l_0_9_30 l_0_9_30)))
 (let ((?x32106 (* l_0_9_3 l_0_9_3)))
 (let ((?x32104 (* l_0_9_2 l_0_9_2)))
 (let ((?x32260 (- (* (* (- 2.0) l_0_9_113) l_0_9_116) (* (* 2.0 l_0_9_197) l_0_9_200))))
 (= (- (- (- (+ (+ ?x32260 ?x32104) ?x32106) ?x32108) ?x32110) 1.0) 0.0)))))))
(assert
 (let ((?x32285 (- (* (* (- 2.0) l_0_9_114) l_0_9_116) (* (* 2.0 l_0_9_115) l_0_9_117))))
 (let ((?x32289 (- (- ?x32285 (* (* 2.0 l_0_9_198) l_0_9_200)) (* (* 2.0 l_0_9_199) l_0_9_201))))
 (= ?x32289 0.0))))
(assert
 (let ((?x32110 (* l_0_9_31 l_0_9_31)))
 (let ((?x32108 (* l_0_9_30 l_0_9_30)))
 (let ((?x32106 (* l_0_9_3 l_0_9_3)))
 (let ((?x32104 (* l_0_9_2 l_0_9_2)))
 (let ((?x32316 (- (* (* (- 2.0) l_0_9_114) l_0_9_128) (* (* 2.0 l_0_9_115) l_0_9_129))))
 (let ((?x32320 (- (- ?x32316 (* (* 2.0 l_0_9_198) l_0_9_212)) (* (* 2.0 l_0_9_199) l_0_9_213))))
 (= (- (- (- (+ (+ ?x32320 ?x32104) ?x32106) ?x32108) ?x32110) 1.0) 0.0))))))))
(assert
 (= (+ (* (- l_0_9_1) l_0_9_1) (* l_0_9_29 l_0_9_29)) 0.0))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32373 (* ?x32372 l_0_9_30)))
 (let ((?x32369 (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_113) l_0_9_123))))
 (= (+ (- ?x32369 (* (* 2.0 l_0_9_197) l_0_9_207)) ?x32373) 0.0)))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32408 (* ?x32407 l_0_9_40)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32405 (* ?x32404 l_0_9_39)))
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32402 (* ?x32372 l_0_9_32)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x32400 (* ?x32399 l_0_9_3)))
 (let ((?x32392 (* 2.0 l_0_9_11)))
 (let ((?x32397 (* ?x32392 l_0_9_2)))
 (let ((?x32406 (- (+ (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x32397) ?x32400) ?x32402) ?x32405)))
 (= (- ?x32406 ?x32408) 0.0)))))))))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32439 (* ?x32372 l_0_9_35)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) ?x32439) 0.0))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32445 (* ?x32372 l_0_9_39)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_11) ?x32445) 0.0))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32463 (* ?x32372 l_0_9_44)))
 (let ((?x32445 (* ?x32372 l_0_9_39)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x32456 (* ?x32453 l_0_9_16)))
 (let ((?x32455 (* ?x32453 l_0_9_11)))
 (= (+ (- (- ?x32455 ?x32456) ?x32445) ?x32463) 0.0))))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32487 (* ?x32372 l_0_9_50)))
 (let ((?x32483 (+ (* (* (- 2.0) l_0_9_1) l_0_9_22) (* (* 2.0 l_0_9_141) l_0_9_151))))
 (let ((?x32491 (+ (+ (- ?x32483 (* (* 2.0 l_0_9_169) l_0_9_179)) ?x32487) (* (* 2.0 l_0_9_58) l_0_9_67))))
 (let ((?x32497 (- (+ ?x32491 (* (* 2.0 l_0_9_59) l_0_9_68)) (* (* 2.0 l_0_9_86) l_0_9_95))))
 (= (- ?x32497 (* (* 2.0 l_0_9_87) l_0_9_96)) 0.0)))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32564 (* ?x32407 l_0_9_33)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32562 (* ?x32404 l_0_9_32)))
 (let ((?x32559 (* 2.0 l_0_9_3)))
 (let ((?x32560 (* ?x32559 l_0_9_5)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32548 (* ?x32547 l_0_9_4)))
 (let ((?x32543 (- (* (* (- 2.0) l_0_9_116) l_0_9_123) (* (* 2.0 l_0_9_117) l_0_9_124))))
 (let ((?x32552 (- (- (- ?x32543 (* (* 2.0 l_0_9_118) l_0_9_125)) ?x32548) (* (* 2.0 l_0_9_200) l_0_9_207))))
 (let ((?x32558 (- (- ?x32552 (* (* 2.0 l_0_9_201) l_0_9_208)) (* (* 2.0 l_0_9_202) l_0_9_209))))
 (= (+ (+ (- ?x32558 ?x32560) ?x32562) ?x32564) 0.0)))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32639 (* ?x32407 l_0_9_36)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32637 (* ?x32404 l_0_9_35)))
 (let ((?x32559 (* 2.0 l_0_9_3)))
 (let ((?x32635 (* ?x32559 l_0_9_8)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32625 (* ?x32547 l_0_9_7)))
 (let ((?x32615 (- (* (* (- 2.0) l_0_9_119) l_0_9_123) (* (* 2.0 l_0_9_120) l_0_9_124))))
 (let ((?x32624 (- (- ?x32615 (* (* 2.0 l_0_9_121) l_0_9_125)) (* (* 2.0 l_0_9_122) l_0_9_126))))
 (let ((?x32630 (- (- (- ?x32624 ?x32625) (* (* 2.0 l_0_9_203) l_0_9_207)) (* (* 2.0 l_0_9_204) l_0_9_208))))
 (let ((?x32634 (- (- ?x32630 (* (* 2.0 l_0_9_205) l_0_9_209)) (* (* 2.0 l_0_9_206) l_0_9_210))))
 (= (+ (+ (- ?x32634 ?x32635) ?x32637) ?x32639) 0.0))))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32408 (* ?x32407 l_0_9_40)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32405 (* ?x32404 l_0_9_39)))
 (let ((?x32731 (* l_0_9_211 l_0_9_211)))
 (let ((?x32729 (* l_0_9_210 l_0_9_210)))
 (let ((?x32727 (* l_0_9_209 l_0_9_209)))
 (let ((?x32725 (* l_0_9_208 l_0_9_208)))
 (let ((?x32723 (* l_0_9_207 l_0_9_207)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x32400 (* ?x32399 l_0_9_3)))
 (let ((?x32710 (- (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x32400) (* (* 1.0 l_0_9_123) l_0_9_123))))
 (let ((?x32716 (- (- ?x32710 (* (* 1.0 l_0_9_124) l_0_9_124)) (* (* 1.0 l_0_9_125) l_0_9_125))))
 (let ((?x32722 (- (- ?x32716 (* (* 1.0 l_0_9_126) l_0_9_126)) (* (* 1.0 l_0_9_127) l_0_9_127))))
 (let ((?x32734 (+ (+ (- (- (- (- (- ?x32722 ?x32723) ?x32725) ?x32727) ?x32729) ?x32731) ?x32405) ?x32408)))
 (= ?x32734 0.0)))))))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32817 (* ?x32407 l_0_9_45)))
 (let ((?x32408 (* ?x32407 l_0_9_40)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32814 (* ?x32404 l_0_9_44)))
 (let ((?x32405 (* ?x32404 l_0_9_39)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x32796 (* ?x32795 l_0_9_3)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x32793 (* ?x32792 l_0_9_2)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x32400 (* ?x32399 l_0_9_3)))
 (let ((?x32392 (* 2.0 l_0_9_11)))
 (let ((?x32397 (* ?x32392 l_0_9_2)))
 (let ((?x32782 (- (- (+ ?x32397 ?x32400) (* (* 2.0 l_0_9_123) l_0_9_128)) (* (* 2.0 l_0_9_124) l_0_9_129))))
 (let ((?x32788 (- (- ?x32782 (* (* 2.0 l_0_9_125) l_0_9_130)) (* (* 2.0 l_0_9_126) l_0_9_131))))
 (let ((?x32800 (- (- (- (- ?x32788 (* (* 2.0 l_0_9_127) l_0_9_132)) ?x32793) ?x32796) (* (* 2.0 l_0_9_207) l_0_9_212))))
 (let ((?x32806 (- (- ?x32800 (* (* 2.0 l_0_9_208) l_0_9_213)) (* (* 2.0 l_0_9_209) l_0_9_214))))
 (let ((?x32812 (- (- ?x32806 (* (* 2.0 l_0_9_210) l_0_9_215)) (* (* 2.0 l_0_9_211) l_0_9_216))))
 (= (+ (- (+ (- ?x32812 ?x32405) ?x32814) ?x32408) ?x32817) 0.0)))))))))))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32939 (* ?x32407 l_0_9_51)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32937 (* ?x32404 l_0_9_50)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x32935 (* ?x32934 l_0_9_3)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32922 (* ?x32547 l_0_9_22)))
 (let ((?x32907 (- (* (* (- 2.0) l_0_9_123) l_0_9_134) (* (* 2.0 l_0_9_124) l_0_9_135))))
 (let ((?x32911 (- (- ?x32907 (* (* 2.0 l_0_9_125) l_0_9_136)) (* (* 2.0 l_0_9_126) l_0_9_137))))
 (let ((?x32915 (+ (- ?x32911 (* (* 2.0 l_0_9_127) l_0_9_138)) (* (* 2.0 l_0_9_142) l_0_9_151))))
 (let ((?x32919 (- (+ ?x32915 (* (* 2.0 l_0_9_143) l_0_9_152)) (* (* 2.0 l_0_9_170) l_0_9_179))))
 (let ((?x32925 (- (- (- ?x32919 (* (* 2.0 l_0_9_171) l_0_9_180)) ?x32922) (* (* 2.0 l_0_9_207) l_0_9_218))))
 (let ((?x32929 (- (- ?x32925 (* (* 2.0 l_0_9_208) l_0_9_219)) (* (* 2.0 l_0_9_209) l_0_9_220))))
 (let ((?x32933 (- (- ?x32929 (* (* 2.0 l_0_9_210) l_0_9_221)) (* (* 2.0 l_0_9_211) l_0_9_222))))
 (= (+ (+ (- ?x32933 ?x32935) ?x32937) ?x32939) 0.0)))))))))))))))))
(assert
 (let ((?x33045 (* l_0_9_6 l_0_9_6)))
 (let ((?x33043 (* l_0_9_5 l_0_9_5)))
 (let ((?x33041 (* l_0_9_4 l_0_9_4)))
 (let ((?x33039 (* l_0_9_34 l_0_9_34)))
 (let ((?x33042 (- (+ (+ (* l_0_9_32 l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x33039) ?x33041)))
 (= (- (- ?x33042 ?x33043) ?x33045) 0.0)))))))
(assert
 (let ((?x33074 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x33071 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x33068 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33065 (* ?x33064 l_0_9_37)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33062 (* ?x33061 l_0_9_36)))
 (let ((?x33072 (- (- (+ (+ (* (* 2.0 l_0_9_32) l_0_9_35) ?x33062) ?x33065) ?x33068) ?x33071)))
 (= (- ?x33072 ?x33074) 0.0))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33113 (* ?x33064 l_0_9_41)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33111 (* ?x33061 l_0_9_40)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33109 (* ?x33059 l_0_9_39)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33107 (* ?x33106 l_0_9_6)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33104 (* ?x32399 l_0_9_5)))
 (let ((?x33112 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x33104) ?x33107) ?x33109) ?x33111)))
 (= (+ ?x33112 ?x33113) 0.0)))))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33156 (* ?x33064 l_0_9_46)))
 (let ((?x33113 (* ?x33064 l_0_9_41)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33153 (* ?x33061 l_0_9_45)))
 (let ((?x33111 (* ?x33061 l_0_9_40)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33150 (* ?x33059 l_0_9_44)))
 (let ((?x33109 (* ?x33059 l_0_9_39)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33147 (* ?x33146 l_0_9_6)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33144 (* ?x32795 l_0_9_5)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33136 (* ?x32792 l_0_9_4)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33107 (* ?x33106 l_0_9_6)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33104 (* ?x32399 l_0_9_5)))
 (let ((?x33135 (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x33104) ?x33107)))
 (let ((?x33154 (+ (- (+ (- (- (- (- ?x33135 ?x33136) ?x33144) ?x33147) ?x33109) ?x33150) ?x33111) ?x33153)))
 (= (+ (- ?x33154 ?x33113) ?x33156) 0.0)))))))))))))))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33229 (* ?x33064 l_0_9_52)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33227 (* ?x33061 l_0_9_51)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33225 (* ?x33059 l_0_9_50)))
 (let ((?x33222 (* 2.0 l_0_9_24)))
 (let ((?x33223 (* ?x33222 l_0_9_6)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x33220 (* ?x32934 l_0_9_5)))
 (let ((?x33217 (* 2.0 l_0_9_22)))
 (let ((?x33218 (* ?x33217 l_0_9_4)))
 (let ((?x33204 (+ (* (* 2.0 l_0_9_144) l_0_9_151) (* (* 2.0 l_0_9_145) l_0_9_152))))
 (let ((?x33210 (- (+ ?x33204 (* (* 2.0 l_0_9_146) l_0_9_153)) (* (* 2.0 l_0_9_172) l_0_9_179))))
 (let ((?x33216 (- (- ?x33210 (* (* 2.0 l_0_9_173) l_0_9_180)) (* (* 2.0 l_0_9_174) l_0_9_181))))
 (= (+ (+ (+ (- (- (- ?x33216 ?x33218) ?x33220) ?x33223) ?x33225) ?x33227) ?x33229) 0.0)))))))))))))))))
(assert
 (let ((?x33297 (* l_0_9_9 l_0_9_9)))
 (let ((?x33295 (* l_0_9_8 l_0_9_8)))
 (let ((?x33293 (* l_0_9_7 l_0_9_7)))
 (let ((?x33291 (* l_0_9_38 l_0_9_38)))
 (let ((?x33289 (* l_0_9_37 l_0_9_37)))
 (let ((?x33287 (* l_0_9_36 l_0_9_36)))
 (let ((?x33290 (+ (+ (+ (* (- l_0_9_10) l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x33287) ?x33289)))
 (= (- (- (- (+ ?x33290 ?x33291) ?x33293) ?x33295) ?x33297) 0.0)))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33332 (* ?x33331 l_0_9_42)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33329 (* ?x33328 l_0_9_41)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33326 (* ?x33325 l_0_9_40)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33323 (* ?x33322 l_0_9_39)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33320 (* ?x33106 l_0_9_9)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33318 (* ?x32399 l_0_9_8)))
 (let ((?x32392 (* 2.0 l_0_9_11)))
 (let ((?x33316 (* ?x32392 l_0_9_7)))
 (let ((?x33324 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x33316) ?x33318) ?x33320) ?x33323)))
 (= (+ (+ (+ ?x33324 ?x33326) ?x33329) ?x33332) 0.0)))))))))))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33389 (* ?x33331 l_0_9_47)))
 (let ((?x33332 (* ?x33331 l_0_9_42)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33386 (* ?x33328 l_0_9_46)))
 (let ((?x33329 (* ?x33328 l_0_9_41)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33383 (* ?x33325 l_0_9_45)))
 (let ((?x33326 (* ?x33325 l_0_9_40)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33380 (* ?x33322 l_0_9_44)))
 (let ((?x33323 (* ?x33322 l_0_9_39)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33377 (* ?x33146 l_0_9_9)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33375 (* ?x32795 l_0_9_8)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33373 (* ?x32792 l_0_9_7)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33320 (* ?x33106 l_0_9_9)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33318 (* ?x32399 l_0_9_8)))
 (let ((?x32392 (* 2.0 l_0_9_11)))
 (let ((?x33316 (* ?x32392 l_0_9_7)))
 (let ((?x33356 (* 2.0 l_0_9_10)))
 (let ((?x33360 (* ?x33356 l_0_9_19)))
 (let ((?x33358 (* ?x33356 l_0_9_14)))
 (let ((?x33378 (- (- (- (+ (+ (+ (- ?x33358 ?x33360) ?x33316) ?x33318) ?x33320) ?x33373) ?x33375) ?x33377)))
 (let ((?x33388 (- (+ (- (+ (- (+ (- ?x33378 ?x33323) ?x33380) ?x33326) ?x33383) ?x33329) ?x33386) ?x33332)))
 (= (+ ?x33388 ?x33389) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33449 (* ?x33331 l_0_9_53)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33447 (* ?x33328 l_0_9_52)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33445 (* ?x33325 l_0_9_51)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33443 (* ?x33322 l_0_9_50)))
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32408 (* ?x32407 l_0_9_40)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32405 (* ?x32404 l_0_9_39)))
 (let ((?x33222 (* 2.0 l_0_9_24)))
 (let ((?x33439 (* ?x33222 l_0_9_9)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x33437 (* ?x32934 l_0_9_8)))
 (let ((?x33217 (* 2.0 l_0_9_22)))
 (let ((?x33435 (* ?x33217 l_0_9_7)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x32400 (* ?x32399 l_0_9_3)))
 (let ((?x32392 (* 2.0 l_0_9_11)))
 (let ((?x32397 (* ?x32392 l_0_9_2)))
 (let ((?x33413 (+ (+ (+ (* (* (- 2.0) l_0_9_10) l_0_9_25) ?x32397) ?x32400) (* (* 2.0 l_0_9_147) l_0_9_151))))
 (let ((?x33419 (+ (+ ?x33413 (* (* 2.0 l_0_9_148) l_0_9_152)) (* (* 2.0 l_0_9_149) l_0_9_153))))
 (let ((?x33425 (- (+ ?x33419 (* (* 2.0 l_0_9_150) l_0_9_154)) (* (* 2.0 l_0_9_175) l_0_9_179))))
 (let ((?x33431 (- (- ?x33425 (* (* 2.0 l_0_9_176) l_0_9_180)) (* (* 2.0 l_0_9_177) l_0_9_181))))
 (let ((?x33440 (- (- (- (- ?x33431 (* (* 2.0 l_0_9_178) l_0_9_182)) ?x33435) ?x33437) ?x33439)))
 (= (+ (+ (+ (+ (- (- ?x33440 ?x32405) ?x32408) ?x33443) ?x33445) ?x33447) ?x33449) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x33505 (* l_0_9_43 l_0_9_43)))
 (let ((?x33503 (* l_0_9_42 l_0_9_42)))
 (let ((?x33501 (* l_0_9_41 l_0_9_41)))
 (let ((?x33499 (* l_0_9_40 l_0_9_40)))
 (let ((?x33497 (* l_0_9_39 l_0_9_39)))
 (let ((?x33495 (* l_0_9_15 l_0_9_15)))
 (let ((?x33493 (* l_0_9_14 l_0_9_14)))
 (let ((?x33480 (* l_0_9_13 l_0_9_13)))
 (let ((?x33494 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x33480) ?x33493)))
 (= (+ (+ (+ (+ (+ (- ?x33494 ?x33495) ?x33497) ?x33499) ?x33501) ?x33503) ?x33505) 0.0)))))))))))
(assert
 (let ((?x33505 (* l_0_9_43 l_0_9_43)))
 (let ((?x33554 (* 2.0 l_0_9_43)))
 (let ((?x33555 (* ?x33554 l_0_9_48)))
 (let ((?x33503 (* l_0_9_42 l_0_9_42)))
 (let ((?x33550 (* 2.0 l_0_9_42)))
 (let ((?x33551 (* ?x33550 l_0_9_47)))
 (let ((?x33501 (* l_0_9_41 l_0_9_41)))
 (let ((?x33546 (* 2.0 l_0_9_41)))
 (let ((?x33547 (* ?x33546 l_0_9_46)))
 (let ((?x33499 (* l_0_9_40 l_0_9_40)))
 (let ((?x33542 (* 2.0 l_0_9_40)))
 (let ((?x33543 (* ?x33542 l_0_9_45)))
 (let ((?x33497 (* l_0_9_39 l_0_9_39)))
 (let ((?x33538 (* 2.0 l_0_9_39)))
 (let ((?x33539 (* ?x33538 l_0_9_44)))
 (let ((?x33495 (* l_0_9_15 l_0_9_15)))
 (let ((?x33534 (* 2.0 l_0_9_15)))
 (let ((?x33535 (* ?x33534 l_0_9_20)))
 (let ((?x33493 (* l_0_9_14 l_0_9_14)))
 (let ((?x33530 (* 2.0 l_0_9_14)))
 (let ((?x33531 (* ?x33530 l_0_9_19)))
 (let ((?x33480 (* l_0_9_13 l_0_9_13)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33527 (* ?x33106 l_0_9_18)))
 (let ((?x4809 (* l_0_9_12 l_0_9_12)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33524 (* ?x32399 l_0_9_17)))
 (let ((?x33525 (- (+ (* (* (- 2.0) l_0_9_11) l_0_9_16) (* l_0_9_11 l_0_9_11)) ?x33524)))
 (let ((?x33537 (+ (- (+ (- (+ (- (+ ?x33525 ?x4809) ?x33527) ?x33480) ?x33531) ?x33493) ?x33535) ?x33495)))
 (let ((?x33552 (+ (- (+ (- (+ (- (+ ?x33537 ?x33539) ?x33497) ?x33543) ?x33499) ?x33547) ?x33501) ?x33551)))
 (= (- (+ (- ?x33552 ?x33503) ?x33555) ?x33505) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x33554 (* 2.0 l_0_9_43)))
 (let ((?x33612 (* ?x33554 l_0_9_54)))
 (let ((?x33550 (* 2.0 l_0_9_42)))
 (let ((?x33610 (* ?x33550 l_0_9_53)))
 (let ((?x33546 (* 2.0 l_0_9_41)))
 (let ((?x33608 (* ?x33546 l_0_9_52)))
 (let ((?x33542 (* 2.0 l_0_9_40)))
 (let ((?x33606 (* ?x33542 l_0_9_51)))
 (let ((?x33538 (* 2.0 l_0_9_39)))
 (let ((?x33604 (* ?x33538 l_0_9_50)))
 (let ((?x33602 (* l_0_9_183 l_0_9_183)))
 (let ((?x33600 (* l_0_9_182 l_0_9_182)))
 (let ((?x33598 (* l_0_9_181 l_0_9_181)))
 (let ((?x33596 (* l_0_9_180 l_0_9_180)))
 (let ((?x33594 (* l_0_9_179 l_0_9_179)))
 (let ((?x33592 (* l_0_9_155 l_0_9_155)))
 (let ((?x33590 (* l_0_9_154 l_0_9_154)))
 (let ((?x33588 (* l_0_9_153 l_0_9_153)))
 (let ((?x33586 (* l_0_9_152 l_0_9_152)))
 (let ((?x33584 (* l_0_9_151 l_0_9_151)))
 (let ((?x33534 (* 2.0 l_0_9_15)))
 (let ((?x33582 (* ?x33534 l_0_9_26)))
 (let ((?x33530 (* 2.0 l_0_9_14)))
 (let ((?x33580 (* ?x33530 l_0_9_25)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33578 (* ?x33106 l_0_9_24)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x4991 (* ?x32399 l_0_9_23)))
 (let ((?x33583 (- (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_22) ?x4991) ?x33578) ?x33580) ?x33582)))
 (let ((?x33597 (- (- (+ (+ (+ (+ (+ ?x33583 ?x33584) ?x33586) ?x33588) ?x33590) ?x33592) ?x33594) ?x33596)))
 (let ((?x33611 (+ (+ (+ (+ (- (- (- ?x33597 ?x33598) ?x33600) ?x33602) ?x33604) ?x33606) ?x33608) ?x33610)))
 (= (+ ?x33611 ?x33612) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x33673 (* l_0_9_49 l_0_9_49)))
 (let ((?x33671 (* l_0_9_48 l_0_9_48)))
 (let ((?x33669 (* l_0_9_47 l_0_9_47)))
 (let ((?x33667 (* l_0_9_46 l_0_9_46)))
 (let ((?x33665 (* l_0_9_45 l_0_9_45)))
 (let ((?x33663 (* l_0_9_44 l_0_9_44)))
 (let ((?x33554 (* 2.0 l_0_9_43)))
 (let ((?x33555 (* ?x33554 l_0_9_48)))
 (let ((?x33550 (* 2.0 l_0_9_42)))
 (let ((?x33551 (* ?x33550 l_0_9_47)))
 (let ((?x33546 (* 2.0 l_0_9_41)))
 (let ((?x33547 (* ?x33546 l_0_9_46)))
 (let ((?x33542 (* 2.0 l_0_9_40)))
 (let ((?x33543 (* ?x33542 l_0_9_45)))
 (let ((?x33538 (* 2.0 l_0_9_39)))
 (let ((?x33539 (* ?x33538 l_0_9_44)))
 (let ((?x33656 (* l_0_9_21 l_0_9_21)))
 (let ((?x33654 (* l_0_9_20 l_0_9_20)))
 (let ((?x33652 (* l_0_9_19 l_0_9_19)))
 (let ((?x33650 (* l_0_9_18 l_0_9_18)))
 (let ((?x33648 (* l_0_9_17 l_0_9_17)))
 (let ((?x5067 (* l_0_9_16 l_0_9_16)))
 (let ((?x33534 (* 2.0 l_0_9_15)))
 (let ((?x33535 (* ?x33534 l_0_9_20)))
 (let ((?x33530 (* 2.0 l_0_9_14)))
 (let ((?x33531 (* ?x33530 l_0_9_19)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33527 (* ?x33106 l_0_9_18)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33524 (* ?x32399 l_0_9_17)))
 (let ((?x5134 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_16) ?x33524) ?x33527) ?x33531) ?x33535)))
 (let ((?x33658 (- (- (- (- (- (- (- ?x5134 ?x5067) ?x33648) ?x33650) ?x33652) ?x33654) ?x33656) ?x33539)))
 (let ((?x33668 (+ (+ (+ (- (- (- (- ?x33658 ?x33543) ?x33547) ?x33551) ?x33555) ?x33663) ?x33665) ?x33667)))
 (= (+ (+ (+ ?x33668 ?x33669) ?x33671) ?x33673) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33757 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x33754 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x33751 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x33748 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x33745 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x33742 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x33554 (* 2.0 l_0_9_43)))
 (let ((?x33612 (* ?x33554 l_0_9_54)))
 (let ((?x33550 (* 2.0 l_0_9_42)))
 (let ((?x33610 (* ?x33550 l_0_9_53)))
 (let ((?x33546 (* 2.0 l_0_9_41)))
 (let ((?x33608 (* ?x33546 l_0_9_52)))
 (let ((?x33542 (* 2.0 l_0_9_40)))
 (let ((?x33606 (* ?x33542 l_0_9_51)))
 (let ((?x33538 (* 2.0 l_0_9_39)))
 (let ((?x33604 (* ?x33538 l_0_9_50)))
 (let ((?x33734 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x33731 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x33728 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33713 (* ?x33146 l_0_9_24)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33708 (* ?x32795 l_0_9_23)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33706 (* ?x32792 l_0_9_22)))
 (let ((?x33534 (* 2.0 l_0_9_15)))
 (let ((?x33582 (* ?x33534 l_0_9_26)))
 (let ((?x33530 (* 2.0 l_0_9_14)))
 (let ((?x33580 (* ?x33530 l_0_9_25)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33578 (* ?x33106 l_0_9_24)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x4991 (* ?x32399 l_0_9_23)))
 (let ((?x33690 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_22) ?x4991) ?x33578) ?x33580) ?x33582)))
 (let ((?x33696 (+ (+ ?x33690 (* (* 2.0 l_0_9_151) l_0_9_156)) (* (* 2.0 l_0_9_152) l_0_9_157))))
 (let ((?x33702 (+ (+ ?x33696 (* (* 2.0 l_0_9_153) l_0_9_158)) (* (* 2.0 l_0_9_154) l_0_9_159))))
 (let ((?x33712 (- (- (- (+ ?x33702 (* (* 2.0 l_0_9_155) l_0_9_160)) ?x33706) ?x33708) (* (* 2.0 l_0_9_179) l_0_9_184))))
 (let ((?x33720 (- (- (- ?x33712 ?x33713) (* (* 2.0 l_0_9_180) l_0_9_185)) (* (* 2.0 l_0_9_181) l_0_9_186))))
 (let ((?x33726 (- (- ?x33720 (* (* 2.0 l_0_9_182) l_0_9_187)) (* (* 2.0 l_0_9_183) l_0_9_188))))
 (let ((?x33739 (- (- (- (- (- (- (- ?x33726 ?x33728) ?x33731) ?x33734) ?x33604) ?x33606) ?x33608) ?x33610)))
 (let ((?x33758 (+ (+ (+ (+ (+ (+ (- ?x33739 ?x33612) ?x33742) ?x33745) ?x33748) ?x33751) ?x33754) ?x33757)))
 (= ?x33758 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33852 (* l_0_9_56 l_0_9_56)))
 (let ((?x33850 (* l_0_9_55 l_0_9_55)))
 (let ((?x33848 (* l_0_9_54 l_0_9_54)))
 (let ((?x33846 (* l_0_9_53 l_0_9_53)))
 (let ((?x33844 (* l_0_9_52 l_0_9_52)))
 (let ((?x33842 (* l_0_9_51 l_0_9_51)))
 (let ((?x33840 (* l_0_9_50 l_0_9_50)))
 (let ((?x33838 (* l_0_9_28 l_0_9_28)))
 (let ((?x33836 (* l_0_9_27 l_0_9_27)))
 (let ((?x33834 (* l_0_9_26 l_0_9_26)))
 (let ((?x33832 (* l_0_9_25 l_0_9_25)))
 (let ((?x33830 (* l_0_9_24 l_0_9_24)))
 (let ((?x33828 (* l_0_9_23 l_0_9_23)))
 (let ((?x33826 (* l_0_9_22 l_0_9_22)))
 (let ((?x33809 (+ (* (* 2.0 l_0_9_151) l_0_9_162) (* (* 2.0 l_0_9_152) l_0_9_163))))
 (let ((?x33813 (+ (+ ?x33809 (* (* 2.0 l_0_9_153) l_0_9_164)) (* (* 2.0 l_0_9_154) l_0_9_165))))
 (let ((?x33817 (- (+ ?x33813 (* (* 2.0 l_0_9_155) l_0_9_166)) (* (* 2.0 l_0_9_179) l_0_9_190))))
 (let ((?x33821 (- (- ?x33817 (* (* 2.0 l_0_9_180) l_0_9_191)) (* (* 2.0 l_0_9_181) l_0_9_192))))
 (let ((?x33825 (- (- ?x33821 (* (* 2.0 l_0_9_182) l_0_9_193)) (* (* 2.0 l_0_9_183) l_0_9_194))))
 (let ((?x33839 (- (- (- (- (- (- (- ?x33825 ?x33826) ?x33828) ?x33830) ?x33832) ?x33834) ?x33836) ?x33838)))
 (let ((?x33853 (+ (+ (+ (+ (+ (+ (+ ?x33839 ?x33840) ?x33842) ?x33844) ?x33846) ?x33848) ?x33850) ?x33852)))
 (= ?x33853 0.0)))))))))))))))))))))))
(assert
 (let ((?x32357 (* l_0_9_29 l_0_9_29)))
 (let ((?x32361 (* l_0_9_1 l_0_9_1)))
 (let ((?x33872 (- ?x32361 ?x32357)))
 (let ((?x33878 (- (+ ?x33872 (* (* 2.0 l_0_9_57) l_0_9_63)) (* (* 2.0 l_0_9_85) l_0_9_91))))
 (= ?x33878 0.0))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32373 (* ?x32372 l_0_9_30)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x33889 (* ?x32453 l_0_9_2)))
 (let ((?x33893 (- (+ ?x33889 (* (* 2.0 l_0_9_141) l_0_9_147)) (* (* 2.0 l_0_9_169) l_0_9_175))))
 (let ((?x33898 (+ (+ (- ?x33893 ?x32373) (* (* 2.0 l_0_9_58) l_0_9_63)) (* (* 2.0 l_0_9_59) l_0_9_64))))
 (let ((?x33902 (- (- ?x33898 (* (* 2.0 l_0_9_86) l_0_9_91)) (* (* 2.0 l_0_9_87) l_0_9_92))))
 (= ?x33902 0.0)))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33449 (* ?x33331 l_0_9_53)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33447 (* ?x33328 l_0_9_52)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33445 (* ?x33325 l_0_9_51)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33443 (* ?x33322 l_0_9_50)))
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32402 (* ?x32372 l_0_9_32)))
 (let ((?x33222 (* 2.0 l_0_9_24)))
 (let ((?x33439 (* ?x33222 l_0_9_9)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x33437 (* ?x32934 l_0_9_8)))
 (let ((?x33217 (* 2.0 l_0_9_22)))
 (let ((?x33435 (* ?x33217 l_0_9_7)))
 (let ((?x33356 (* 2.0 l_0_9_10)))
 (let ((?x33920 (* ?x33356 l_0_9_25)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x33919 (* ?x32453 l_0_9_4)))
 (let ((?x33927 (- (- (- (+ (+ (+ (+ ?x33919 ?x33920) ?x33435) ?x33437) ?x33439) ?x32402) ?x33443) ?x33445)))
 (let ((?x33935 (+ (+ (- (- ?x33927 ?x33447) ?x33449) (* (* 2.0 l_0_9_60) l_0_9_63)) (* (* 2.0 l_0_9_61) l_0_9_64))))
 (let ((?x33941 (- (+ ?x33935 (* (* 2.0 l_0_9_62) l_0_9_65)) (* (* 2.0 l_0_9_88) l_0_9_91))))
 (let ((?x33947 (- (- ?x33941 (* (* 2.0 l_0_9_89) l_0_9_92)) (* (* 2.0 l_0_9_90) l_0_9_93))))
 (= ?x33947 0.0))))))))))))))))))))))))))
(assert
 (let ((?x33953 (* l_0_9_94 l_0_9_94)))
 (let ((?x33951 (* l_0_9_93 l_0_9_93)))
 (let ((?x33949 (* l_0_9_92 l_0_9_92)))
 (let ((?x5724 (* l_0_9_91 l_0_9_91)))
 (let ((?x5871 (* l_0_9_66 l_0_9_66)))
 (let ((?x5867 (* l_0_9_65 l_0_9_65)))
 (let ((?x5872 (* l_0_9_64 l_0_9_64)))
 (let ((?x5860 (* l_0_9_63 l_0_9_63)))
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32439 (* ?x32372 l_0_9_35)))
 (let ((?x5854 (- (* (* 2.0 l_0_9_1) l_0_9_7) ?x32439)))
 (let ((?x33952 (- (- (- (+ (+ (+ (+ ?x5854 ?x5860) ?x5872) ?x5867) ?x5871) ?x5724) ?x33949) ?x33951)))
 (= (- ?x33952 ?x33953) 0.0))))))))))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32445 (* ?x32372 l_0_9_39)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x32455 (* ?x32453 l_0_9_11)))
 (let ((?x33969 (- ?x32455 ?x32445)))
 (let ((?x33975 (+ (+ ?x33969 (* (* 2.0 l_0_9_63) l_0_9_67)) (* (* 2.0 l_0_9_64) l_0_9_68))))
 (let ((?x33981 (+ (+ ?x33975 (* (* 2.0 l_0_9_65) l_0_9_69)) (* (* 2.0 l_0_9_66) l_0_9_70))))
 (let ((?x33987 (- (- ?x33981 (* (* 2.0 l_0_9_91) l_0_9_95)) (* (* 2.0 l_0_9_92) l_0_9_96))))
 (let ((?x33993 (- (- ?x33987 (* (* 2.0 l_0_9_93) l_0_9_97)) (* (* 2.0 l_0_9_94) l_0_9_98))))
 (= ?x33993 0.0)))))))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32463 (* ?x32372 l_0_9_44)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x32456 (* ?x32453 l_0_9_16)))
 (let ((?x34030 (- (- ?x32456 (* (* 2.0 l_0_9_100) l_0_9_91)) (* (* 2.0 l_0_9_101) l_0_9_92))))
 (let ((?x34036 (- (- ?x34030 (* (* 2.0 l_0_9_102) l_0_9_93)) (* (* 2.0 l_0_9_103) l_0_9_94))))
 (let ((?x34041 (+ (+ (- ?x34036 ?x32463) (* (* 2.0 l_0_9_63) l_0_9_72)) (* (* 2.0 l_0_9_64) l_0_9_73))))
 (let ((?x34045 (+ (+ ?x34041 (* (* 2.0 l_0_9_65) l_0_9_74)) (* (* 2.0 l_0_9_66) l_0_9_75))))
 (= ?x34045 0.0))))))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32487 (* ?x32372 l_0_9_50)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x34061 (* ?x32453 l_0_9_22)))
 (let ((?x34072 (- (- ?x34061 (* (* 2.0 l_0_9_106) l_0_9_91)) (* (* 2.0 l_0_9_107) l_0_9_92))))
 (let ((?x34078 (- (- ?x34072 (* (* 2.0 l_0_9_108) l_0_9_93)) (* (* 2.0 l_0_9_109) l_0_9_94))))
 (let ((?x34083 (+ (+ (- ?x34078 ?x32487) (* (* 2.0 l_0_9_63) l_0_9_78)) (* (* 2.0 l_0_9_64) l_0_9_79))))
 (let ((?x34087 (+ (+ ?x34083 (* (* 2.0 l_0_9_65) l_0_9_80)) (* (* 2.0 l_0_9_66) l_0_9_81))))
 (= ?x34087 0.0))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32564 (* ?x32407 l_0_9_33)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32562 (* ?x32404 l_0_9_32)))
 (let ((?x32559 (* 2.0 l_0_9_3)))
 (let ((?x32560 (* ?x32559 l_0_9_5)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32548 (* ?x32547 l_0_9_4)))
 (let ((?x6110 (+ (* (* 2.0 l_0_9_144) l_0_9_147) (* (* 2.0 l_0_9_145) l_0_9_148))))
 (let ((?x34105 (- (+ ?x6110 (* (* 2.0 l_0_9_146) l_0_9_149)) (* (* 2.0 l_0_9_172) l_0_9_175))))
 (let ((?x34109 (- (- ?x34105 (* (* 2.0 l_0_9_173) l_0_9_176)) (* (* 2.0 l_0_9_174) l_0_9_177))))
 (= (- (- (+ (+ ?x34109 ?x32548) ?x32560) ?x32562) ?x32564) 0.0)))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32639 (* ?x32407 l_0_9_36)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32637 (* ?x32404 l_0_9_35)))
 (let ((?x32559 (* 2.0 l_0_9_3)))
 (let ((?x32635 (* ?x32559 l_0_9_8)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32625 (* ?x32547 l_0_9_7)))
 (let ((?x34145 (* l_0_9_178 l_0_9_178)))
 (let ((?x34143 (* l_0_9_177 l_0_9_177)))
 (let ((?x34141 (* l_0_9_176 l_0_9_176)))
 (let ((?x34139 (* l_0_9_175 l_0_9_175)))
 (let ((?x34137 (* l_0_9_150 l_0_9_150)))
 (let ((?x34135 (* l_0_9_149 l_0_9_149)))
 (let ((?x34138 (+ (+ (+ (* l_0_9_147 l_0_9_147) (* l_0_9_148 l_0_9_148)) ?x34135) ?x34137)))
 (let ((?x34149 (- (+ (+ (- (- (- (- ?x34138 ?x34139) ?x34141) ?x34143) ?x34145) ?x32625) ?x32635) ?x32637)))
 (= (- ?x34149 ?x32639) 0.0))))))))))))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33449 (* ?x33331 l_0_9_53)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33447 (* ?x33328 l_0_9_52)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33445 (* ?x33325 l_0_9_51)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33443 (* ?x33322 l_0_9_50)))
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32817 (* ?x32407 l_0_9_45)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32814 (* ?x32404 l_0_9_44)))
 (let ((?x33222 (* 2.0 l_0_9_24)))
 (let ((?x33439 (* ?x33222 l_0_9_9)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x33437 (* ?x32934 l_0_9_8)))
 (let ((?x33217 (* 2.0 l_0_9_22)))
 (let ((?x33435 (* ?x33217 l_0_9_7)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x32796 (* ?x32795 l_0_9_3)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x32793 (* ?x32792 l_0_9_2)))
 (let ((?x33356 (* 2.0 l_0_9_10)))
 (let ((?x33920 (* ?x33356 l_0_9_25)))
 (let ((?x34161 (+ (+ ?x33920 (* (* 2.0 l_0_9_147) l_0_9_156)) (* (* 2.0 l_0_9_148) l_0_9_157))))
 (let ((?x34165 (+ (+ ?x34161 (* (* 2.0 l_0_9_149) l_0_9_158)) (* (* 2.0 l_0_9_150) l_0_9_159))))
 (let ((?x34171 (- (- (+ (+ ?x34165 ?x32793) ?x32796) (* (* 2.0 l_0_9_175) l_0_9_184)) (* (* 2.0 l_0_9_176) l_0_9_185))))
 (let ((?x34175 (- (- ?x34171 (* (* 2.0 l_0_9_177) l_0_9_186)) (* (* 2.0 l_0_9_178) l_0_9_187))))
 (let ((?x34182 (- (- (- (- (+ (+ (+ ?x34175 ?x33435) ?x33437) ?x33439) ?x32814) ?x32817) ?x33443) ?x33445)))
 (= (- (- ?x34182 ?x33447) ?x33449) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32939 (* ?x32407 l_0_9_51)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32937 (* ?x32404 l_0_9_50)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x32935 (* ?x32934 l_0_9_3)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32922 (* ?x32547 l_0_9_22)))
 (let ((?x6411 (+ (* (* 2.0 l_0_9_147) l_0_9_162) (* (* 2.0 l_0_9_148) l_0_9_163))))
 (let ((?x34206 (+ (+ ?x6411 (* (* 2.0 l_0_9_149) l_0_9_164)) (* (* 2.0 l_0_9_150) l_0_9_165))))
 (let ((?x34210 (- (- ?x34206 (* (* 2.0 l_0_9_175) l_0_9_190)) (* (* 2.0 l_0_9_176) l_0_9_191))))
 (let ((?x34214 (- (- ?x34210 (* (* 2.0 l_0_9_177) l_0_9_192)) (* (* 2.0 l_0_9_178) l_0_9_193))))
 (= (- (- (+ (+ ?x34214 ?x32922) ?x32935) ?x32937) ?x32939) 0.0))))))))))))))
(assert
 (let ((?x33045 (* l_0_9_6 l_0_9_6)))
 (let ((?x33043 (* l_0_9_5 l_0_9_5)))
 (let ((?x33041 (* l_0_9_4 l_0_9_4)))
 (let ((?x33039 (* l_0_9_34 l_0_9_34)))
 (let ((?x34254 (+ (- (- (* (- l_0_9_32) l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x33039) ?x33041)))
 (= (+ (+ ?x34254 ?x33043) ?x33045) 0.0)))))))
(assert
 (let ((?x33074 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x33071 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x33068 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33065 (* ?x33064 l_0_9_37)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33062 (* ?x33061 l_0_9_36)))
 (let ((?x34263 (+ (+ (- (- (* (* (- 2.0) l_0_9_32) l_0_9_35) ?x33062) ?x33065) ?x33068) ?x33071)))
 (= (+ ?x34263 ?x33074) 0.0))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33113 (* ?x33064 l_0_9_41)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33111 (* ?x33061 l_0_9_40)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33109 (* ?x33059 l_0_9_39)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33107 (* ?x33106 l_0_9_6)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33104 (* ?x32399 l_0_9_5)))
 (let ((?x33135 (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x33104) ?x33107)))
 (= (- (- (- ?x33135 ?x33109) ?x33111) ?x33113) 0.0)))))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33156 (* ?x33064 l_0_9_46)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33153 (* ?x33061 l_0_9_45)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33150 (* ?x33059 l_0_9_44)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33147 (* ?x33146 l_0_9_6)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33144 (* ?x32795 l_0_9_5)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33136 (* ?x32792 l_0_9_4)))
 (= (- (- (- (+ (+ ?x33136 ?x33144) ?x33147) ?x33150) ?x33153) ?x33156) 0.0))))))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33229 (* ?x33064 l_0_9_52)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33227 (* ?x33061 l_0_9_51)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33225 (* ?x33059 l_0_9_50)))
 (let ((?x33222 (* 2.0 l_0_9_24)))
 (let ((?x33223 (* ?x33222 l_0_9_6)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x33220 (* ?x32934 l_0_9_5)))
 (let ((?x33217 (* 2.0 l_0_9_22)))
 (let ((?x33218 (* ?x33217 l_0_9_4)))
 (let ((?x34281 (- (- (- (+ (+ ?x33218 ?x33220) ?x33223) ?x33225) ?x33227) ?x33229)))
 (= ?x34281 0.0)))))))))))))))
(assert
 (let ((?x33297 (* l_0_9_9 l_0_9_9)))
 (let ((?x33295 (* l_0_9_8 l_0_9_8)))
 (let ((?x33293 (* l_0_9_7 l_0_9_7)))
 (let ((?x33291 (* l_0_9_38 l_0_9_38)))
 (let ((?x33289 (* l_0_9_37 l_0_9_37)))
 (let ((?x33287 (* l_0_9_36 l_0_9_36)))
 (let ((?x34297 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x33287) ?x33289)))
 (= (+ (+ (+ (- ?x34297 ?x33291) ?x33293) ?x33295) ?x33297) 0.0)))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33332 (* ?x33331 l_0_9_42)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33329 (* ?x33328 l_0_9_41)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33326 (* ?x33325 l_0_9_40)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33323 (* ?x33322 l_0_9_39)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33320 (* ?x33106 l_0_9_9)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33318 (* ?x32399 l_0_9_8)))
 (let ((?x32392 (* 2.0 l_0_9_11)))
 (let ((?x33316 (* ?x32392 l_0_9_7)))
 (let ((?x33356 (* 2.0 l_0_9_10)))
 (let ((?x33358 (* ?x33356 l_0_9_14)))
 (let ((?x34321 (- (- (- (- (+ (+ (+ ?x33358 ?x33316) ?x33318) ?x33320) ?x33323) ?x33326) ?x33329) ?x33332)))
 (= ?x34321 0.0)))))))))))))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33389 (* ?x33331 l_0_9_47)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33386 (* ?x33328 l_0_9_46)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33383 (* ?x33325 l_0_9_45)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33380 (* ?x33322 l_0_9_44)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33377 (* ?x33146 l_0_9_9)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33375 (* ?x32795 l_0_9_8)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33373 (* ?x32792 l_0_9_7)))
 (let ((?x33356 (* 2.0 l_0_9_10)))
 (let ((?x33360 (* ?x33356 l_0_9_19)))
 (let ((?x34337 (- (- (- (- (+ (+ (+ ?x33360 ?x33373) ?x33375) ?x33377) ?x33380) ?x33383) ?x33386) ?x33389)))
 (= ?x34337 0.0)))))))))))))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33449 (* ?x33331 l_0_9_53)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33447 (* ?x33328 l_0_9_52)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33445 (* ?x33325 l_0_9_51)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33443 (* ?x33322 l_0_9_50)))
 (let ((?x33222 (* 2.0 l_0_9_24)))
 (let ((?x33439 (* ?x33222 l_0_9_9)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x33437 (* ?x32934 l_0_9_8)))
 (let ((?x33217 (* 2.0 l_0_9_22)))
 (let ((?x33435 (* ?x33217 l_0_9_7)))
 (let ((?x33356 (* 2.0 l_0_9_10)))
 (let ((?x33920 (* ?x33356 l_0_9_25)))
 (let ((?x34358 (- (- (- (- (+ (+ (+ ?x33920 ?x33435) ?x33437) ?x33439) ?x33443) ?x33445) ?x33447) ?x33449)))
 (= ?x34358 0.0)))))))))))))))))))
(assert
 (let ((?x33505 (* l_0_9_43 l_0_9_43)))
 (let ((?x33503 (* l_0_9_42 l_0_9_42)))
 (let ((?x33501 (* l_0_9_41 l_0_9_41)))
 (let ((?x33499 (* l_0_9_40 l_0_9_40)))
 (let ((?x33497 (* l_0_9_39 l_0_9_39)))
 (let ((?x33495 (* l_0_9_15 l_0_9_15)))
 (let ((?x33493 (* l_0_9_14 l_0_9_14)))
 (let ((?x33480 (* l_0_9_13 l_0_9_13)))
 (let ((?x34370 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x33480) ?x33493)))
 (= (- (- (- (- (- (+ ?x34370 ?x33495) ?x33497) ?x33499) ?x33501) ?x33503) ?x33505) 0.0)))))))))))
(assert
 (let ((?x33554 (* 2.0 l_0_9_43)))
 (let ((?x33555 (* ?x33554 l_0_9_48)))
 (let ((?x33550 (* 2.0 l_0_9_42)))
 (let ((?x33551 (* ?x33550 l_0_9_47)))
 (let ((?x33546 (* 2.0 l_0_9_41)))
 (let ((?x33547 (* ?x33546 l_0_9_46)))
 (let ((?x33542 (* 2.0 l_0_9_40)))
 (let ((?x33543 (* ?x33542 l_0_9_45)))
 (let ((?x33538 (* 2.0 l_0_9_39)))
 (let ((?x33539 (* ?x33538 l_0_9_44)))
 (let ((?x33534 (* 2.0 l_0_9_15)))
 (let ((?x33535 (* ?x33534 l_0_9_20)))
 (let ((?x33530 (* 2.0 l_0_9_14)))
 (let ((?x33531 (* ?x33530 l_0_9_19)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33527 (* ?x33106 l_0_9_18)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33524 (* ?x32399 l_0_9_17)))
 (let ((?x5134 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_16) ?x33524) ?x33527) ?x33531) ?x33535)))
 (= (- (- (- (- (- ?x5134 ?x33539) ?x33543) ?x33547) ?x33551) ?x33555) 0.0)))))))))))))))))))))
(assert
 (let ((?x33554 (* 2.0 l_0_9_43)))
 (let ((?x33612 (* ?x33554 l_0_9_54)))
 (let ((?x33550 (* 2.0 l_0_9_42)))
 (let ((?x33610 (* ?x33550 l_0_9_53)))
 (let ((?x33546 (* 2.0 l_0_9_41)))
 (let ((?x33608 (* ?x33546 l_0_9_52)))
 (let ((?x33542 (* 2.0 l_0_9_40)))
 (let ((?x33606 (* ?x33542 l_0_9_51)))
 (let ((?x33538 (* 2.0 l_0_9_39)))
 (let ((?x33604 (* ?x33538 l_0_9_50)))
 (let ((?x33534 (* 2.0 l_0_9_15)))
 (let ((?x33582 (* ?x33534 l_0_9_26)))
 (let ((?x33530 (* 2.0 l_0_9_14)))
 (let ((?x33580 (* ?x33530 l_0_9_25)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33578 (* ?x33106 l_0_9_24)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x4991 (* ?x32399 l_0_9_23)))
 (let ((?x33690 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_22) ?x4991) ?x33578) ?x33580) ?x33582)))
 (let ((?x34409 (- (- (- (- (- ?x33690 ?x33604) ?x33606) ?x33608) ?x33610) ?x33612)))
 (= ?x34409 0.0))))))))))))))))))))))
(assert
 (let ((?x33673 (* l_0_9_49 l_0_9_49)))
 (let ((?x33671 (* l_0_9_48 l_0_9_48)))
 (let ((?x33669 (* l_0_9_47 l_0_9_47)))
 (let ((?x33667 (* l_0_9_46 l_0_9_46)))
 (let ((?x33665 (* l_0_9_45 l_0_9_45)))
 (let ((?x33663 (* l_0_9_44 l_0_9_44)))
 (let ((?x33656 (* l_0_9_21 l_0_9_21)))
 (let ((?x33654 (* l_0_9_20 l_0_9_20)))
 (let ((?x33652 (* l_0_9_19 l_0_9_19)))
 (let ((?x33650 (* l_0_9_18 l_0_9_18)))
 (let ((?x34425 (+ (+ (+ (* l_0_9_16 l_0_9_16) (* l_0_9_17 l_0_9_17)) ?x33650) ?x33652)))
 (let ((?x34432 (- (- (- (- (- (+ (+ ?x34425 ?x33654) ?x33656) ?x33663) ?x33665) ?x33667) ?x33669) ?x33671)))
 (= (- ?x34432 ?x33673) 0.0))))))))))))))
(assert
 (let ((?x33757 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x33754 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x33751 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x33748 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x33745 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x33742 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x33734 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x33731 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x33728 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33713 (* ?x33146 l_0_9_24)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33708 (* ?x32795 l_0_9_23)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33706 (* ?x32792 l_0_9_22)))
 (let ((?x34457 (- (- (+ (+ (+ (+ (+ ?x33706 ?x33708) ?x33713) ?x33728) ?x33731) ?x33734) ?x33742) ?x33745)))
 (= (- (- (- (- ?x34457 ?x33748) ?x33751) ?x33754) ?x33757) 0.0))))))))))))))))))
(assert
 (let ((?x33852 (* l_0_9_56 l_0_9_56)))
 (let ((?x33850 (* l_0_9_55 l_0_9_55)))
 (let ((?x33848 (* l_0_9_54 l_0_9_54)))
 (let ((?x33846 (* l_0_9_53 l_0_9_53)))
 (let ((?x33844 (* l_0_9_52 l_0_9_52)))
 (let ((?x33842 (* l_0_9_51 l_0_9_51)))
 (let ((?x33840 (* l_0_9_50 l_0_9_50)))
 (let ((?x33838 (* l_0_9_28 l_0_9_28)))
 (let ((?x33836 (* l_0_9_27 l_0_9_27)))
 (let ((?x33834 (* l_0_9_26 l_0_9_26)))
 (let ((?x33832 (* l_0_9_25 l_0_9_25)))
 (let ((?x33830 (* l_0_9_24 l_0_9_24)))
 (let ((?x34488 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x33830) ?x33832)))
 (let ((?x34495 (- (- (- (- (+ (+ (+ ?x34488 ?x33834) ?x33836) ?x33838) ?x33840) ?x33842) ?x33844) ?x33846)))
 (= (- (- (- ?x34495 ?x33848) ?x33850) ?x33852) 0.0))))))))))))))))
(assert
 (let ((?x32357 (* l_0_9_29 l_0_9_29)))
 (let ((?x32361 (* l_0_9_1 l_0_9_1)))
 (let ((?x33872 (- ?x32361 ?x32357)))
 (= ?x33872 0.0)))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32373 (* ?x32372 l_0_9_30)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x33889 (* ?x32453 l_0_9_2)))
 (= (- ?x33889 ?x32373) 0.0))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32402 (* ?x32372 l_0_9_32)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x33919 (* ?x32453 l_0_9_4)))
 (= (- ?x33919 ?x32402) 0.0))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32439 (* ?x32372 l_0_9_35)))
 (let ((?x5854 (- (* (* 2.0 l_0_9_1) l_0_9_7) ?x32439)))
 (= ?x5854 0.0)))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32445 (* ?x32372 l_0_9_39)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x32455 (* ?x32453 l_0_9_11)))
 (let ((?x33969 (- ?x32455 ?x32445)))
 (= ?x33969 0.0)))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32463 (* ?x32372 l_0_9_44)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x32456 (* ?x32453 l_0_9_16)))
 (= (- ?x32456 ?x32463) 0.0))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32487 (* ?x32372 l_0_9_50)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x34061 (* ?x32453 l_0_9_22)))
 (let ((?x34513 (- (+ (- ?x34061 ?x32487) (* (* 2.0 l_0_9_57) l_0_9_60)) (* (* 2.0 l_0_9_85) l_0_9_88))))
 (= ?x34513 0.0)))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32564 (* ?x32407 l_0_9_33)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32562 (* ?x32404 l_0_9_32)))
 (let ((?x32559 (* 2.0 l_0_9_3)))
 (let ((?x32560 (* ?x32559 l_0_9_5)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32548 (* ?x32547 l_0_9_4)))
 (= (- (- (+ ?x32548 ?x32560) ?x32562) ?x32564) 0.0))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32639 (* ?x32407 l_0_9_36)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32637 (* ?x32404 l_0_9_35)))
 (let ((?x32559 (* 2.0 l_0_9_3)))
 (let ((?x32635 (* ?x32559 l_0_9_8)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32625 (* ?x32547 l_0_9_7)))
 (= (- (- (+ ?x32625 ?x32635) ?x32637) ?x32639) 0.0))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32817 (* ?x32407 l_0_9_45)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32814 (* ?x32404 l_0_9_44)))
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32402 (* ?x32372 l_0_9_32)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x32796 (* ?x32795 l_0_9_3)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x32793 (* ?x32792 l_0_9_2)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x33919 (* ?x32453 l_0_9_4)))
 (= (- (- (- (+ (+ ?x33919 ?x32793) ?x32796) ?x32402) ?x32814) ?x32817) 0.0))))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32939 (* ?x32407 l_0_9_51)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32937 (* ?x32404 l_0_9_50)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x32935 (* ?x32934 l_0_9_3)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32922 (* ?x32547 l_0_9_22)))
 (let ((?x34559 (- (* (* 2.0 l_0_9_141) l_0_9_144) (* (* 2.0 l_0_9_169) l_0_9_172))))
 (let ((?x34565 (+ (- (- (+ (+ ?x34559 ?x32922) ?x32935) ?x32937) ?x32939) (* (* 2.0 l_0_9_58) l_0_9_60))))
 (let ((?x34569 (- (+ ?x34565 (* (* 2.0 l_0_9_59) l_0_9_61)) (* (* 2.0 l_0_9_86) l_0_9_88))))
 (= (- ?x34569 (* (* 2.0 l_0_9_87) l_0_9_89)) 0.0)))))))))))))
(assert
 (let ((?x33045 (* l_0_9_6 l_0_9_6)))
 (let ((?x33043 (* l_0_9_5 l_0_9_5)))
 (let ((?x33041 (* l_0_9_4 l_0_9_4)))
 (let ((?x33039 (* l_0_9_34 l_0_9_34)))
 (let ((?x34254 (+ (- (- (* (- l_0_9_32) l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x33039) ?x33041)))
 (= (+ (+ ?x34254 ?x33043) ?x33045) 0.0)))))))
(assert
 (let ((?x33074 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x33071 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x33068 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33065 (* ?x33064 l_0_9_37)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33062 (* ?x33061 l_0_9_36)))
 (let ((?x34263 (+ (+ (- (- (* (* (- 2.0) l_0_9_32) l_0_9_35) ?x33062) ?x33065) ?x33068) ?x33071)))
 (= (+ ?x34263 ?x33074) 0.0))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33113 (* ?x33064 l_0_9_41)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33111 (* ?x33061 l_0_9_40)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33109 (* ?x33059 l_0_9_39)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33107 (* ?x33106 l_0_9_6)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33104 (* ?x32399 l_0_9_5)))
 (let ((?x33135 (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x33104) ?x33107)))
 (= (- (- (- ?x33135 ?x33109) ?x33111) ?x33113) 0.0)))))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33156 (* ?x33064 l_0_9_46)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33153 (* ?x33061 l_0_9_45)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33150 (* ?x33059 l_0_9_44)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33147 (* ?x33146 l_0_9_6)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33144 (* ?x32795 l_0_9_5)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33136 (* ?x32792 l_0_9_4)))
 (= (- (- (- (+ (+ ?x33136 ?x33144) ?x33147) ?x33150) ?x33153) ?x33156) 0.0))))))))))))))
(assert
 (let ((?x34614 (* l_0_9_90 l_0_9_90)))
 (let ((?x34612 (* l_0_9_89 l_0_9_89)))
 (let ((?x34610 (* l_0_9_88 l_0_9_88)))
 (let ((?x34608 (* l_0_9_62 l_0_9_62)))
 (let ((?x34606 (* l_0_9_61 l_0_9_61)))
 (let ((?x34604 (* l_0_9_60 l_0_9_60)))
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33229 (* ?x33064 l_0_9_52)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33227 (* ?x33061 l_0_9_51)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33225 (* ?x33059 l_0_9_50)))
 (let ((?x33222 (* 2.0 l_0_9_24)))
 (let ((?x33223 (* ?x33222 l_0_9_6)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x33220 (* ?x32934 l_0_9_5)))
 (let ((?x33217 (* 2.0 l_0_9_22)))
 (let ((?x33218 (* ?x33217 l_0_9_4)))
 (let ((?x34281 (- (- (- (+ (+ ?x33218 ?x33220) ?x33223) ?x33225) ?x33227) ?x33229)))
 (= (- (- (- (+ (+ (+ ?x34281 ?x34604) ?x34606) ?x34608) ?x34610) ?x34612) ?x34614) 0.0)))))))))))))))))))))
(assert
 (let ((?x33297 (* l_0_9_9 l_0_9_9)))
 (let ((?x33295 (* l_0_9_8 l_0_9_8)))
 (let ((?x33293 (* l_0_9_7 l_0_9_7)))
 (let ((?x33291 (* l_0_9_38 l_0_9_38)))
 (let ((?x33289 (* l_0_9_37 l_0_9_37)))
 (let ((?x33287 (* l_0_9_36 l_0_9_36)))
 (let ((?x34297 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x33287) ?x33289)))
 (= (+ (+ (+ (- ?x34297 ?x33291) ?x33293) ?x33295) ?x33297) 0.0)))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33332 (* ?x33331 l_0_9_42)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33329 (* ?x33328 l_0_9_41)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33326 (* ?x33325 l_0_9_40)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33323 (* ?x33322 l_0_9_39)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33320 (* ?x33106 l_0_9_9)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33318 (* ?x32399 l_0_9_8)))
 (let ((?x32392 (* 2.0 l_0_9_11)))
 (let ((?x33316 (* ?x32392 l_0_9_7)))
 (let ((?x33356 (* 2.0 l_0_9_10)))
 (let ((?x33358 (* ?x33356 l_0_9_14)))
 (let ((?x34321 (- (- (- (- (+ (+ (+ ?x33358 ?x33316) ?x33318) ?x33320) ?x33323) ?x33326) ?x33329) ?x33332)))
 (= ?x34321 0.0)))))))))))))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33389 (* ?x33331 l_0_9_47)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33386 (* ?x33328 l_0_9_46)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33383 (* ?x33325 l_0_9_45)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33380 (* ?x33322 l_0_9_44)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33377 (* ?x33146 l_0_9_9)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33375 (* ?x32795 l_0_9_8)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33373 (* ?x32792 l_0_9_7)))
 (let ((?x33356 (* 2.0 l_0_9_10)))
 (let ((?x33360 (* ?x33356 l_0_9_19)))
 (let ((?x34337 (- (- (- (- (+ (+ (+ ?x33360 ?x33373) ?x33375) ?x33377) ?x33380) ?x33383) ?x33386) ?x33389)))
 (= ?x34337 0.0)))))))))))))))))))
(assert
 (let ((?x33505 (* l_0_9_43 l_0_9_43)))
 (let ((?x33503 (* l_0_9_42 l_0_9_42)))
 (let ((?x33501 (* l_0_9_41 l_0_9_41)))
 (let ((?x33499 (* l_0_9_40 l_0_9_40)))
 (let ((?x33497 (* l_0_9_39 l_0_9_39)))
 (let ((?x33495 (* l_0_9_15 l_0_9_15)))
 (let ((?x33493 (* l_0_9_14 l_0_9_14)))
 (let ((?x33480 (* l_0_9_13 l_0_9_13)))
 (let ((?x34370 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x33480) ?x33493)))
 (= (- (- (- (- (- (+ ?x34370 ?x33495) ?x33497) ?x33499) ?x33501) ?x33503) ?x33505) 0.0)))))))))))
(assert
 (let ((?x33554 (* 2.0 l_0_9_43)))
 (let ((?x33555 (* ?x33554 l_0_9_48)))
 (let ((?x33550 (* 2.0 l_0_9_42)))
 (let ((?x33551 (* ?x33550 l_0_9_47)))
 (let ((?x33546 (* 2.0 l_0_9_41)))
 (let ((?x33547 (* ?x33546 l_0_9_46)))
 (let ((?x33542 (* 2.0 l_0_9_40)))
 (let ((?x33543 (* ?x33542 l_0_9_45)))
 (let ((?x33538 (* 2.0 l_0_9_39)))
 (let ((?x33539 (* ?x33538 l_0_9_44)))
 (let ((?x33534 (* 2.0 l_0_9_15)))
 (let ((?x33535 (* ?x33534 l_0_9_20)))
 (let ((?x33530 (* 2.0 l_0_9_14)))
 (let ((?x33531 (* ?x33530 l_0_9_19)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33527 (* ?x33106 l_0_9_18)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x33524 (* ?x32399 l_0_9_17)))
 (let ((?x5134 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_16) ?x33524) ?x33527) ?x33531) ?x33535)))
 (= (- (- (- (- (- ?x5134 ?x33539) ?x33543) ?x33547) ?x33551) ?x33555) 0.0)))))))))))))))))))))
(assert
 (let ((?x33554 (* 2.0 l_0_9_43)))
 (let ((?x33612 (* ?x33554 l_0_9_54)))
 (let ((?x33550 (* 2.0 l_0_9_42)))
 (let ((?x33610 (* ?x33550 l_0_9_53)))
 (let ((?x33546 (* 2.0 l_0_9_41)))
 (let ((?x33608 (* ?x33546 l_0_9_52)))
 (let ((?x33542 (* 2.0 l_0_9_40)))
 (let ((?x33606 (* ?x33542 l_0_9_51)))
 (let ((?x33538 (* 2.0 l_0_9_39)))
 (let ((?x33604 (* ?x33538 l_0_9_50)))
 (let ((?x33534 (* 2.0 l_0_9_15)))
 (let ((?x33582 (* ?x33534 l_0_9_26)))
 (let ((?x33530 (* 2.0 l_0_9_14)))
 (let ((?x33580 (* ?x33530 l_0_9_25)))
 (let ((?x33106 (* 2.0 l_0_9_13)))
 (let ((?x33578 (* ?x33106 l_0_9_24)))
 (let ((?x32399 (* 2.0 l_0_9_12)))
 (let ((?x4991 (* ?x32399 l_0_9_23)))
 (let ((?x33690 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_22) ?x4991) ?x33578) ?x33580) ?x33582)))
 (let ((?x34409 (- (- (- (- (- ?x33690 ?x33604) ?x33606) ?x33608) ?x33610) ?x33612)))
 (let ((?x34631 (+ (+ ?x34409 (* (* 2.0 l_0_9_60) l_0_9_67)) (* (* 2.0 l_0_9_61) l_0_9_68))))
 (let ((?x34635 (- (+ ?x34631 (* (* 2.0 l_0_9_62) l_0_9_69)) (* (* 2.0 l_0_9_88) l_0_9_95))))
 (let ((?x34639 (- (- ?x34635 (* (* 2.0 l_0_9_89) l_0_9_96)) (* (* 2.0 l_0_9_90) l_0_9_97))))
 (= ?x34639 0.0)))))))))))))))))))))))))
(assert
 (let ((?x33673 (* l_0_9_49 l_0_9_49)))
 (let ((?x33671 (* l_0_9_48 l_0_9_48)))
 (let ((?x33669 (* l_0_9_47 l_0_9_47)))
 (let ((?x33667 (* l_0_9_46 l_0_9_46)))
 (let ((?x33665 (* l_0_9_45 l_0_9_45)))
 (let ((?x33663 (* l_0_9_44 l_0_9_44)))
 (let ((?x33656 (* l_0_9_21 l_0_9_21)))
 (let ((?x33654 (* l_0_9_20 l_0_9_20)))
 (let ((?x33652 (* l_0_9_19 l_0_9_19)))
 (let ((?x33650 (* l_0_9_18 l_0_9_18)))
 (let ((?x34425 (+ (+ (+ (* l_0_9_16 l_0_9_16) (* l_0_9_17 l_0_9_17)) ?x33650) ?x33652)))
 (let ((?x34432 (- (- (- (- (- (+ (+ ?x34425 ?x33654) ?x33656) ?x33663) ?x33665) ?x33667) ?x33669) ?x33671)))
 (= (- ?x34432 ?x33673) 0.0))))))))))))))
(assert
 (let ((?x33757 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x33754 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x33751 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x33748 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x33745 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x33742 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x33734 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x33731 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x33728 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33713 (* ?x33146 l_0_9_24)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33708 (* ?x32795 l_0_9_23)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33706 (* ?x32792 l_0_9_22)))
 (let ((?x34670 (- (* (* (- 2.0) l_0_9_100) l_0_9_88) (* (* 2.0 l_0_9_101) l_0_9_89))))
 (let ((?x34675 (+ (+ (+ (- ?x34670 (* (* 2.0 l_0_9_102) l_0_9_90)) ?x33706) ?x33708) ?x33713)))
 (let ((?x34682 (- (- (- (- (+ (+ (+ ?x34675 ?x33728) ?x33731) ?x33734) ?x33742) ?x33745) ?x33748) ?x33751)))
 (let ((?x34688 (+ (+ (- (- ?x34682 ?x33754) ?x33757) (* (* 2.0 l_0_9_60) l_0_9_72)) (* (* 2.0 l_0_9_61) l_0_9_73))))
 (= (+ ?x34688 (* (* 2.0 l_0_9_62) l_0_9_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x33852 (* l_0_9_56 l_0_9_56)))
 (let ((?x33850 (* l_0_9_55 l_0_9_55)))
 (let ((?x33848 (* l_0_9_54 l_0_9_54)))
 (let ((?x33846 (* l_0_9_53 l_0_9_53)))
 (let ((?x33844 (* l_0_9_52 l_0_9_52)))
 (let ((?x33842 (* l_0_9_51 l_0_9_51)))
 (let ((?x33840 (* l_0_9_50 l_0_9_50)))
 (let ((?x33838 (* l_0_9_28 l_0_9_28)))
 (let ((?x33836 (* l_0_9_27 l_0_9_27)))
 (let ((?x33834 (* l_0_9_26 l_0_9_26)))
 (let ((?x33832 (* l_0_9_25 l_0_9_25)))
 (let ((?x33830 (* l_0_9_24 l_0_9_24)))
 (let ((?x33828 (* l_0_9_23 l_0_9_23)))
 (let ((?x33826 (* l_0_9_22 l_0_9_22)))
 (let ((?x34730 (- (* (* (- 2.0) l_0_9_106) l_0_9_88) (* (* 2.0 l_0_9_107) l_0_9_89))))
 (let ((?x34735 (+ (+ (+ (- ?x34730 (* (* 2.0 l_0_9_108) l_0_9_90)) ?x33826) ?x33828) ?x33830)))
 (let ((?x34742 (- (- (- (+ (+ (+ (+ ?x34735 ?x33832) ?x33834) ?x33836) ?x33838) ?x33840) ?x33842) ?x33844)))
 (let ((?x34748 (+ (- (- (- (- ?x34742 ?x33846) ?x33848) ?x33850) ?x33852) (* (* 2.0 l_0_9_60) l_0_9_78))))
 (let ((?x34752 (+ (+ ?x34748 (* (* 2.0 l_0_9_61) l_0_9_79)) (* (* 2.0 l_0_9_62) l_0_9_80))))
 (= ?x34752 0.0)))))))))))))))))))))
(assert
 (let ((?x32357 (* l_0_9_29 l_0_9_29)))
 (let ((?x32361 (* l_0_9_1 l_0_9_1)))
 (let ((?x33872 (- ?x32361 ?x32357)))
 (= ?x33872 0.0)))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32373 (* ?x32372 l_0_9_30)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x33889 (* ?x32453 l_0_9_2)))
 (let ((?x34794 (- (- ?x33889 (* (* 2.0 l_0_9_113) l_0_9_128)) (* (* 2.0 l_0_9_197) l_0_9_212))))
 (= (- ?x34794 ?x32373) 0.0)))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32439 (* ?x32372 l_0_9_35)))
 (let ((?x5854 (- (* (* 2.0 l_0_9_1) l_0_9_7) ?x32439)))
 (= ?x5854 0.0)))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32463 (* ?x32372 l_0_9_44)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x32456 (* ?x32453 l_0_9_16)))
 (= (- ?x32456 ?x32463) 0.0))))))
(assert
 (let ((?x32372 (* 2.0 l_0_9_29)))
 (let ((?x32487 (* ?x32372 l_0_9_50)))
 (let ((?x32453 (* 2.0 l_0_9_1)))
 (let ((?x34061 (* ?x32453 l_0_9_22)))
 (let ((?x34815 (- (- ?x34061 (* (* 2.0 l_0_9_100) l_0_9_86)) (* (* 2.0 l_0_9_101) l_0_9_87))))
 (let ((?x34819 (- (+ ?x34815 (* (* 2.0 l_0_9_141) l_0_9_156)) (* (* 2.0 l_0_9_169) l_0_9_184))))
 (let ((?x34824 (+ (+ (- ?x34819 ?x32487) (* (* 2.0 l_0_9_58) l_0_9_72)) (* (* 2.0 l_0_9_59) l_0_9_73))))
 (= ?x34824 0.0)))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32564 (* ?x32407 l_0_9_33)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32562 (* ?x32404 l_0_9_32)))
 (let ((?x32559 (* 2.0 l_0_9_3)))
 (let ((?x32560 (* ?x32559 l_0_9_5)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32548 (* ?x32547 l_0_9_4)))
 (let ((?x34857 (- (* (* (- 2.0) l_0_9_116) l_0_9_128) (* (* 2.0 l_0_9_117) l_0_9_129))))
 (let ((?x34862 (- (+ (- ?x34857 (* (* 2.0 l_0_9_118) l_0_9_130)) ?x32548) (* (* 2.0 l_0_9_200) l_0_9_212))))
 (let ((?x34866 (- (- ?x34862 (* (* 2.0 l_0_9_201) l_0_9_213)) (* (* 2.0 l_0_9_202) l_0_9_214))))
 (= (- (- (+ ?x34866 ?x32560) ?x32562) ?x32564) 0.0)))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32639 (* ?x32407 l_0_9_36)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32637 (* ?x32404 l_0_9_35)))
 (let ((?x32559 (* 2.0 l_0_9_3)))
 (let ((?x32635 (* ?x32559 l_0_9_8)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32625 (* ?x32547 l_0_9_7)))
 (let ((?x34912 (- (* (* (- 2.0) l_0_9_119) l_0_9_128) (* (* 2.0 l_0_9_120) l_0_9_129))))
 (let ((?x34916 (- (- ?x34912 (* (* 2.0 l_0_9_121) l_0_9_130)) (* (* 2.0 l_0_9_122) l_0_9_131))))
 (let ((?x34921 (- (- (+ ?x34916 ?x32625) (* (* 2.0 l_0_9_203) l_0_9_212)) (* (* 2.0 l_0_9_204) l_0_9_213))))
 (let ((?x34925 (- (- ?x34921 (* (* 2.0 l_0_9_205) l_0_9_214)) (* (* 2.0 l_0_9_206) l_0_9_215))))
 (= (- (- (+ ?x34925 ?x32635) ?x32637) ?x32639) 0.0))))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32817 (* ?x32407 l_0_9_45)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32814 (* ?x32404 l_0_9_44)))
 (let ((?x35010 (* l_0_9_217 l_0_9_217)))
 (let ((?x35008 (* l_0_9_216 l_0_9_216)))
 (let ((?x35006 (* l_0_9_215 l_0_9_215)))
 (let ((?x35004 (* l_0_9_214 l_0_9_214)))
 (let ((?x35002 (* l_0_9_213 l_0_9_213)))
 (let ((?x35000 (* l_0_9_212 l_0_9_212)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x32796 (* ?x32795 l_0_9_3)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x32793 (* ?x32792 l_0_9_2)))
 (let ((?x34985 (- (* (* (- 1.0) l_0_9_128) l_0_9_128) (* (* 1.0 l_0_9_129) l_0_9_129))))
 (let ((?x34991 (- (- ?x34985 (* (* 1.0 l_0_9_130) l_0_9_130)) (* (* 1.0 l_0_9_131) l_0_9_131))))
 (let ((?x34997 (- (- ?x34991 (* (* 1.0 l_0_9_132) l_0_9_132)) (* (* 1.0 l_0_9_133) l_0_9_133))))
 (let ((?x35009 (- (- (- (- (- (+ (+ ?x34997 ?x32793) ?x32796) ?x35000) ?x35002) ?x35004) ?x35006) ?x35008)))
 (= (- (- (- ?x35009 ?x35010) ?x32814) ?x32817) 0.0))))))))))))))))))))
(assert
 (let ((?x32407 (* 2.0 l_0_9_31)))
 (let ((?x32939 (* ?x32407 l_0_9_51)))
 (let ((?x32404 (* 2.0 l_0_9_30)))
 (let ((?x32937 (* ?x32404 l_0_9_50)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x32935 (* ?x32934 l_0_9_3)))
 (let ((?x32547 (* 2.0 l_0_9_2)))
 (let ((?x32922 (* ?x32547 l_0_9_22)))
 (let ((?x35045 (- (* (* (- 2.0) l_0_9_128) l_0_9_134) (* (* 2.0 l_0_9_129) l_0_9_135))))
 (let ((?x35051 (- (- ?x35045 (* (* 2.0 l_0_9_130) l_0_9_136)) (* (* 2.0 l_0_9_131) l_0_9_137))))
 (let ((?x35057 (- (- ?x35051 (* (* 2.0 l_0_9_132) l_0_9_138)) (* (* 2.0 l_0_9_133) l_0_9_139))))
 (let ((?x35061 (+ (+ ?x35057 (* (* 2.0 l_0_9_142) l_0_9_156)) (* (* 2.0 l_0_9_143) l_0_9_157))))
 (let ((?x35065 (- (- ?x35061 (* (* 2.0 l_0_9_170) l_0_9_184)) (* (* 2.0 l_0_9_171) l_0_9_185))))
 (let ((?x35072 (- (- (+ ?x35065 ?x32922) (* (* 2.0 l_0_9_212) l_0_9_218)) (* (* 2.0 l_0_9_213) l_0_9_219))))
 (let ((?x35078 (- (- ?x35072 (* (* 2.0 l_0_9_214) l_0_9_220)) (* (* 2.0 l_0_9_215) l_0_9_221))))
 (let ((?x35084 (- (- ?x35078 (* (* 2.0 l_0_9_216) l_0_9_222)) (* (* 2.0 l_0_9_217) l_0_9_223))))
 (= (- (- (+ ?x35084 ?x32935) ?x32937) ?x32939) 0.0))))))))))))))))))
(assert
 (let ((?x33045 (* l_0_9_6 l_0_9_6)))
 (let ((?x33043 (* l_0_9_5 l_0_9_5)))
 (let ((?x33041 (* l_0_9_4 l_0_9_4)))
 (let ((?x33039 (* l_0_9_34 l_0_9_34)))
 (let ((?x34254 (+ (- (- (* (- l_0_9_32) l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x33039) ?x33041)))
 (= (+ (+ ?x34254 ?x33043) ?x33045) 0.0)))))))
(assert
 (let ((?x33074 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x33071 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x33068 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33065 (* ?x33064 l_0_9_37)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33062 (* ?x33061 l_0_9_36)))
 (let ((?x34263 (+ (+ (- (- (* (* (- 2.0) l_0_9_32) l_0_9_35) ?x33062) ?x33065) ?x33068) ?x33071)))
 (= (+ ?x34263 ?x33074) 0.0))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33156 (* ?x33064 l_0_9_46)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33153 (* ?x33061 l_0_9_45)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33150 (* ?x33059 l_0_9_44)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33147 (* ?x33146 l_0_9_6)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33144 (* ?x32795 l_0_9_5)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33136 (* ?x32792 l_0_9_4)))
 (= (- (- (- (+ (+ ?x33136 ?x33144) ?x33147) ?x33150) ?x33153) ?x33156) 0.0))))))))))))))
(assert
 (let ((?x33064 (* 2.0 l_0_9_34)))
 (let ((?x33229 (* ?x33064 l_0_9_52)))
 (let ((?x33061 (* 2.0 l_0_9_33)))
 (let ((?x33227 (* ?x33061 l_0_9_51)))
 (let ((?x33059 (* 2.0 l_0_9_32)))
 (let ((?x33225 (* ?x33059 l_0_9_50)))
 (let ((?x33222 (* 2.0 l_0_9_24)))
 (let ((?x33223 (* ?x33222 l_0_9_6)))
 (let ((?x32934 (* 2.0 l_0_9_23)))
 (let ((?x33220 (* ?x32934 l_0_9_5)))
 (let ((?x33217 (* 2.0 l_0_9_22)))
 (let ((?x33218 (* ?x33217 l_0_9_4)))
 (let ((?x35146 (+ (* (* 2.0 l_0_9_144) l_0_9_156) (* (* 2.0 l_0_9_145) l_0_9_157))))
 (let ((?x35150 (- (+ ?x35146 (* (* 2.0 l_0_9_146) l_0_9_158)) (* (* 2.0 l_0_9_172) l_0_9_184))))
 (let ((?x35154 (- (- ?x35150 (* (* 2.0 l_0_9_173) l_0_9_185)) (* (* 2.0 l_0_9_174) l_0_9_186))))
 (= (- (- (- (+ (+ (+ ?x35154 ?x33218) ?x33220) ?x33223) ?x33225) ?x33227) ?x33229) 0.0)))))))))))))))))
(assert
 (let ((?x33297 (* l_0_9_9 l_0_9_9)))
 (let ((?x33295 (* l_0_9_8 l_0_9_8)))
 (let ((?x33293 (* l_0_9_7 l_0_9_7)))
 (let ((?x33291 (* l_0_9_38 l_0_9_38)))
 (let ((?x33289 (* l_0_9_37 l_0_9_37)))
 (let ((?x33287 (* l_0_9_36 l_0_9_36)))
 (let ((?x34297 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x33287) ?x33289)))
 (= (+ (+ (+ (- ?x34297 ?x33291) ?x33293) ?x33295) ?x33297) 0.0)))))))))
(assert
 (let ((?x33331 (* 2.0 l_0_9_38)))
 (let ((?x33389 (* ?x33331 l_0_9_47)))
 (let ((?x33328 (* 2.0 l_0_9_37)))
 (let ((?x33386 (* ?x33328 l_0_9_46)))
 (let ((?x33325 (* 2.0 l_0_9_36)))
 (let ((?x33383 (* ?x33325 l_0_9_45)))
 (let ((?x33322 (* 2.0 l_0_9_35)))
 (let ((?x33380 (* ?x33322 l_0_9_44)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33377 (* ?x33146 l_0_9_9)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33375 (* ?x32795 l_0_9_8)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33373 (* ?x32792 l_0_9_7)))
 (let ((?x33356 (* 2.0 l_0_9_10)))
 (let ((?x33360 (* ?x33356 l_0_9_19)))
 (let ((?x34337 (- (- (- (- (+ (+ (+ ?x33360 ?x33373) ?x33375) ?x33377) ?x33380) ?x33383) ?x33386) ?x33389)))
 (= ?x34337 0.0)))))))))))))))))))
(assert
 (let ((?x33673 (* l_0_9_49 l_0_9_49)))
 (let ((?x33671 (* l_0_9_48 l_0_9_48)))
 (let ((?x33669 (* l_0_9_47 l_0_9_47)))
 (let ((?x33667 (* l_0_9_46 l_0_9_46)))
 (let ((?x33665 (* l_0_9_45 l_0_9_45)))
 (let ((?x33663 (* l_0_9_44 l_0_9_44)))
 (let ((?x33656 (* l_0_9_21 l_0_9_21)))
 (let ((?x33654 (* l_0_9_20 l_0_9_20)))
 (let ((?x33652 (* l_0_9_19 l_0_9_19)))
 (let ((?x33650 (* l_0_9_18 l_0_9_18)))
 (let ((?x34425 (+ (+ (+ (* l_0_9_16 l_0_9_16) (* l_0_9_17 l_0_9_17)) ?x33650) ?x33652)))
 (let ((?x34432 (- (- (- (- (- (+ (+ ?x34425 ?x33654) ?x33656) ?x33663) ?x33665) ?x33667) ?x33669) ?x33671)))
 (= (- ?x34432 ?x33673) 0.0))))))))))))))
(assert
 (let ((?x33757 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x33754 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x33751 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x33748 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x33745 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x33742 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x33734 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x33731 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x33728 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x35207 (* l_0_9_189 l_0_9_189)))
 (let ((?x35205 (* l_0_9_188 l_0_9_188)))
 (let ((?x35203 (* l_0_9_187 l_0_9_187)))
 (let ((?x35201 (* l_0_9_186 l_0_9_186)))
 (let ((?x35199 (* l_0_9_185 l_0_9_185)))
 (let ((?x35197 (* l_0_9_184 l_0_9_184)))
 (let ((?x33146 (* 2.0 l_0_9_18)))
 (let ((?x33713 (* ?x33146 l_0_9_24)))
 (let ((?x32795 (* 2.0 l_0_9_17)))
 (let ((?x33708 (* ?x32795 l_0_9_23)))
 (let ((?x35193 (* l_0_9_161 l_0_9_161)))
 (let ((?x35191 (* l_0_9_160 l_0_9_160)))
 (let ((?x32792 (* 2.0 l_0_9_16)))
 (let ((?x33706 (* ?x32792 l_0_9_22)))
 (let ((?x35188 (* l_0_9_159 l_0_9_159)))
 (let ((?x35186 (* l_0_9_158 l_0_9_158)))
 (let ((?x35189 (+ (+ (+ (* l_0_9_156 l_0_9_156) (* l_0_9_157 l_0_9_157)) ?x35186) ?x35188)))
 (let ((?x35200 (- (- (+ (+ (+ (+ (+ ?x35189 ?x33706) ?x35191) ?x35193) ?x33708) ?x33713) ?x35197) ?x35199)))
 (let ((?x35211 (+ (+ (+ (- (- (- (- ?x35200 ?x35201) ?x35203) ?x35205) ?x35207) ?x33728) ?x33731) ?x33734)))
 (= (- (- (- (- (- (- ?x35211 ?x33742) ?x33745) ?x33748) ?x33751) ?x33754) ?x33757) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x33852 (* l_0_9_56 l_0_9_56)))
 (let ((?x33850 (* l_0_9_55 l_0_9_55)))
 (let ((?x33848 (* l_0_9_54 l_0_9_54)))
 (let ((?x33846 (* l_0_9_53 l_0_9_53)))
 (let ((?x33844 (* l_0_9_52 l_0_9_52)))
 (let ((?x33842 (* l_0_9_51 l_0_9_51)))
 (let ((?x33840 (* l_0_9_50 l_0_9_50)))
 (let ((?x33838 (* l_0_9_28 l_0_9_28)))
 (let ((?x33836 (* l_0_9_27 l_0_9_27)))
 (let ((?x33834 (* l_0_9_26 l_0_9_26)))
 (let ((?x33832 (* l_0_9_25 l_0_9_25)))
 (let ((?x33830 (* l_0_9_24 l_0_9_24)))
 (let ((?x33828 (* l_0_9_23 l_0_9_23)))
 (let ((?x33826 (* l_0_9_22 l_0_9_22)))
 (let ((?x35237 (+ (* (* 2.0 l_0_9_156) l_0_9_162) (* (* 2.0 l_0_9_157) l_0_9_163))))
 (let ((?x35243 (+ (+ ?x35237 (* (* 2.0 l_0_9_158) l_0_9_164)) (* (* 2.0 l_0_9_159) l_0_9_165))))
 (let ((?x35249 (+ (+ ?x35243 (* (* 2.0 l_0_9_160) l_0_9_166)) (* (* 2.0 l_0_9_161) l_0_9_167))))
 (let ((?x35255 (- (- ?x35249 (* (* 2.0 l_0_9_184) l_0_9_190)) (* (* 2.0 l_0_9_185) l_0_9_191))))
 (let ((?x35261 (- (- ?x35255 (* (* 2.0 l_0_9_186) l_0_9_192)) (* (* 2.0 l_0_9_187) l_0_9_193))))
 (let ((?x35267 (- (- ?x35261 (* (* 2.0 l_0_9_188) l_0_9_194)) (* (* 2.0 l_0_9_189) l_0_9_195))))
 (let ((?x35274 (+ (+ (+ (+ (+ (+ (+ ?x35267 ?x33826) ?x33828) ?x33830) ?x33832) ?x33834) ?x33836) ?x33838)))
 (let ((?x35281 (- (- (- (- (- (- (- ?x35274 ?x33840) ?x33842) ?x33844) ?x33846) ?x33848) ?x33850) ?x33852)))
 (= ?x35281 0.0))))))))))))))))))))))))
(assert
 (= (- (* l_0_9_57 l_0_9_57) (* l_0_9_85 l_0_9_85)) 0.0))
(assert
 (let ((?x35332 (+ (- (* l_0_9_141 l_0_9_141) (* l_0_9_169 l_0_9_169)) (* (* 2.0 l_0_9_57) l_0_9_58))))
 (= (- ?x35332 (* (* 2.0 l_0_9_85) l_0_9_86)) 0.0)))
(assert
 (let ((?x35349 (- (* (* 2.0 l_0_9_57) l_0_9_67) (* (* 2.0 l_0_9_85) l_0_9_95))))
 (= ?x35349 0.0)))
(assert
 (let ((?x35360 (+ (* (* (- 2.0) l_0_9_100) l_0_9_85) (* (* 2.0 l_0_9_57) l_0_9_72))))
 (= ?x35360 0.0)))
(assert
 (let ((?x35366 (+ (* (* (- 2.0) l_0_9_106) l_0_9_85) (* (* 2.0 l_0_9_57) l_0_9_78))))
 (= ?x35366 0.0)))
(assert
 (let ((?x35387 (* l_0_9_87 l_0_9_87)))
 (let ((?x35385 (* l_0_9_86 l_0_9_86)))
 (let ((?x35383 (* l_0_9_59 l_0_9_59)))
 (let ((?x35381 (* l_0_9_58 l_0_9_58)))
 (let ((?x35372 (+ (* (* (- 2.0) l_0_9_113) l_0_9_134) (* (* 2.0 l_0_9_141) l_0_9_142))))
 (let ((?x35380 (- (- ?x35372 (* (* 2.0 l_0_9_169) l_0_9_170)) (* (* 2.0 l_0_9_197) l_0_9_218))))
 (= (- (- (+ (+ ?x35380 ?x35381) ?x35383) ?x35385) ?x35387) 0.0))))))))
(assert
 (let ((?x35414 (- (* (* (- 2.0) l_0_9_106) l_0_9_86) (* (* 2.0 l_0_9_107) l_0_9_87))))
 (let ((?x35418 (- (+ ?x35414 (* (* 2.0 l_0_9_141) l_0_9_162)) (* (* 2.0 l_0_9_169) l_0_9_190))))
 (let ((?x35422 (+ (+ ?x35418 (* (* 2.0 l_0_9_58) l_0_9_78)) (* (* 2.0 l_0_9_59) l_0_9_79))))
 (= ?x35422 0.0)))))
(assert
 (let ((?x35460 (* l_0_9_99 l_0_9_99)))
 (let ((?x35458 (* l_0_9_98 l_0_9_98)))
 (let ((?x35456 (* l_0_9_97 l_0_9_97)))
 (let ((?x35454 (* l_0_9_96 l_0_9_96)))
 (let ((?x35452 (* l_0_9_95 l_0_9_95)))
 (let ((?x35450 (* l_0_9_71 l_0_9_71)))
 (let ((?x35448 (* l_0_9_70 l_0_9_70)))
 (let ((?x35446 (* l_0_9_69 l_0_9_69)))
 (let ((?x35449 (+ (+ (+ (* l_0_9_67 l_0_9_67) (* l_0_9_68 l_0_9_68)) ?x35446) ?x35448)))
 (= (- (- (- (- (- (+ ?x35449 ?x35450) ?x35452) ?x35454) ?x35456) ?x35458) ?x35460) 0.0)))))))))))
(assert
 (let ((?x35471 (- (* (* (- 2.0) l_0_9_100) l_0_9_95) (* (* 2.0 l_0_9_101) l_0_9_96))))
 (let ((?x35475 (- (- ?x35471 (* (* 2.0 l_0_9_102) l_0_9_97)) (* (* 2.0 l_0_9_103) l_0_9_98))))
 (let ((?x35481 (+ (- ?x35475 (* (* 2.0 l_0_9_104) l_0_9_99)) (* (* 2.0 l_0_9_67) l_0_9_72))))
 (let ((?x35487 (+ (+ ?x35481 (* (* 2.0 l_0_9_68) l_0_9_73)) (* (* 2.0 l_0_9_69) l_0_9_74))))
 (let ((?x35493 (+ (+ ?x35487 (* (* 2.0 l_0_9_70) l_0_9_75)) (* (* 2.0 l_0_9_71) l_0_9_76))))
 (= ?x35493 0.0)))))))
(assert
 (let ((?x7628 (- (* (* (- 2.0) l_0_9_106) l_0_9_95) (* (* 2.0 l_0_9_107) l_0_9_96))))
 (let ((?x35526 (- (- ?x7628 (* (* 2.0 l_0_9_108) l_0_9_97)) (* (* 2.0 l_0_9_109) l_0_9_98))))
 (let ((?x35531 (+ (- ?x35526 (* (* 2.0 l_0_9_110) l_0_9_99)) (* (* 2.0 l_0_9_67) l_0_9_78))))
 (let ((?x35535 (+ (+ ?x35531 (* (* 2.0 l_0_9_68) l_0_9_79)) (* (* 2.0 l_0_9_69) l_0_9_80))))
 (let ((?x35539 (+ (+ ?x35535 (* (* 2.0 l_0_9_70) l_0_9_81)) (* (* 2.0 l_0_9_71) l_0_9_82))))
 (= ?x35539 0.0)))))))
(assert
 (let ((?x35580 (* l_0_9_77 l_0_9_77)))
 (let ((?x35578 (* l_0_9_76 l_0_9_76)))
 (let ((?x35576 (* l_0_9_75 l_0_9_75)))
 (let ((?x35574 (* l_0_9_74 l_0_9_74)))
 (let ((?x35572 (* l_0_9_73 l_0_9_73)))
 (let ((?x35570 (* l_0_9_72 l_0_9_72)))
 (let ((?x35568 (* l_0_9_105 l_0_9_105)))
 (let ((?x35566 (* l_0_9_104 l_0_9_104)))
 (let ((?x35564 (* l_0_9_103 l_0_9_103)))
 (let ((?x35555 (* l_0_9_102 l_0_9_102)))
 (let ((?x7734 (- (- (* (- l_0_9_100) l_0_9_100) (* l_0_9_101 l_0_9_101)) ?x35555)))
 (let ((?x35577 (+ (+ (+ (+ (- (- (- ?x7734 ?x35564) ?x35566) ?x35568) ?x35570) ?x35572) ?x35574) ?x35576)))
 (= (+ (+ ?x35577 ?x35578) ?x35580) 0.0))))))))))))))
(assert
 (let ((?x35599 (- (* (* (- 2.0) l_0_9_100) l_0_9_106) (* (* 2.0 l_0_9_101) l_0_9_107))))
 (let ((?x35603 (- (- ?x35599 (* (* 2.0 l_0_9_102) l_0_9_108)) (* (* 2.0 l_0_9_103) l_0_9_109))))
 (let ((?x35608 (- (- ?x35603 (* (* 2.0 l_0_9_104) l_0_9_110)) (* (* 2.0 l_0_9_105) l_0_9_111))))
 (let ((?x35614 (+ (+ ?x35608 (* (* 2.0 l_0_9_72) l_0_9_78)) (* (* 2.0 l_0_9_73) l_0_9_79))))
 (let ((?x35620 (+ (+ ?x35614 (* (* 2.0 l_0_9_74) l_0_9_80)) (* (* 2.0 l_0_9_75) l_0_9_81))))
 (let ((?x35626 (+ (+ ?x35620 (* (* 2.0 l_0_9_76) l_0_9_82)) (* (* 2.0 l_0_9_77) l_0_9_83))))
 (= ?x35626 0.0))))))))
(assert
 (let ((?x35684 (* l_0_9_84 l_0_9_84)))
 (let ((?x35682 (* l_0_9_83 l_0_9_83)))
 (let ((?x35680 (* l_0_9_82 l_0_9_82)))
 (let ((?x35678 (* l_0_9_81 l_0_9_81)))
 (let ((?x35676 (* l_0_9_80 l_0_9_80)))
 (let ((?x35674 (* l_0_9_79 l_0_9_79)))
 (let ((?x35672 (* l_0_9_78 l_0_9_78)))
 (let ((?x35670 (* l_0_9_112 l_0_9_112)))
 (let ((?x35668 (* l_0_9_111 l_0_9_111)))
 (let ((?x35666 (* l_0_9_110 l_0_9_110)))
 (let ((?x35655 (* l_0_9_109 l_0_9_109)))
 (let ((?x35652 (* l_0_9_108 l_0_9_108)))
 (let ((?x35654 (- (- (* (- l_0_9_106) l_0_9_106) (* l_0_9_107 l_0_9_107)) ?x35652)))
 (let ((?x35677 (+ (+ (+ (- (- (- (- ?x35654 ?x35655) ?x35666) ?x35668) ?x35670) ?x35672) ?x35674) ?x35676)))
 (= (+ (+ (+ (+ ?x35677 ?x35678) ?x35680) ?x35682) ?x35684) 0.0))))))))))))))))
(assert
 (= (- (* (* (- 1.0) l_0_9_113) l_0_9_113) (* l_0_9_197 l_0_9_197)) 0.0))
(assert
 (let ((?x35713 (- (* (* (- 2.0) l_0_9_113) l_0_9_114) (* (* 2.0 l_0_9_197) l_0_9_198))))
 (= ?x35713 0.0)))
(assert
 (let ((?x35726 (- (* (* (- 2.0) l_0_9_113) l_0_9_119) (* (* 2.0 l_0_9_197) l_0_9_203))))
 (= ?x35726 0.0)))
(assert
 (let ((?x35746 (* l_0_9_199 l_0_9_199)))
 (let ((?x35744 (* l_0_9_198 l_0_9_198)))
 (let ((?x35743 (- (* (* (- 1.0) l_0_9_114) l_0_9_114) (* (* 1.0 l_0_9_115) l_0_9_115))))
 (= (- (- ?x35743 ?x35744) ?x35746) 0.0)))))
(assert
 (let ((?x35761 (- (* (* (- 2.0) l_0_9_114) l_0_9_119) (* (* 2.0 l_0_9_115) l_0_9_120))))
 (let ((?x35765 (- (- ?x35761 (* (* 2.0 l_0_9_198) l_0_9_203)) (* (* 2.0 l_0_9_199) l_0_9_204))))
 (= ?x35765 0.0))))
(assert
 (let ((?x35783 (* l_0_9_171 l_0_9_171)))
 (let ((?x35781 (* l_0_9_170 l_0_9_170)))
 (let ((?x7932 (* l_0_9_143 l_0_9_143)))
 (let ((?x7935 (* l_0_9_142 l_0_9_142)))
 (let ((?x7934 (- (* (* (- 2.0) l_0_9_114) l_0_9_134) (* (* 2.0 l_0_9_115) l_0_9_135))))
 (let ((?x35786 (- (- (- (+ (+ ?x7934 ?x7935) ?x7932) ?x35781) ?x35783) (* (* 2.0 l_0_9_198) l_0_9_218))))
 (= (- ?x35786 (* (* 2.0 l_0_9_199) l_0_9_219)) 0.0))))))))
(assert
 (let ((?x35810 (* l_0_9_202 l_0_9_202)))
 (let ((?x35808 (* l_0_9_201 l_0_9_201)))
 (let ((?x35806 (* l_0_9_200 l_0_9_200)))
 (let ((?x7982 (- (* (* (- 1.0) l_0_9_116) l_0_9_116) (* (* 1.0 l_0_9_117) l_0_9_117))))
 (let ((?x35811 (- (- (- (- ?x7982 (* (* 1.0 l_0_9_118) l_0_9_118)) ?x35806) ?x35808) ?x35810)))
 (= ?x35811 0.0)))))))
(assert
 (let ((?x35829 (- (* (* (- 2.0) l_0_9_116) l_0_9_119) (* (* 2.0 l_0_9_117) l_0_9_120))))
 (let ((?x35833 (- (- ?x35829 (* (* 2.0 l_0_9_118) l_0_9_121)) (* (* 2.0 l_0_9_200) l_0_9_203))))
 (let ((?x35837 (- (- ?x35833 (* (* 2.0 l_0_9_201) l_0_9_204)) (* (* 2.0 l_0_9_202) l_0_9_205))))
 (= ?x35837 0.0)))))
(assert
 (let ((?x35860 (- (* (* (- 2.0) l_0_9_116) l_0_9_134) (* (* 2.0 l_0_9_117) l_0_9_135))))
 (let ((?x35864 (+ (- ?x35860 (* (* 2.0 l_0_9_118) l_0_9_136)) (* (* 2.0 l_0_9_142) l_0_9_144))))
 (let ((?x35868 (- (+ ?x35864 (* (* 2.0 l_0_9_143) l_0_9_145)) (* (* 2.0 l_0_9_170) l_0_9_172))))
 (let ((?x35872 (- (- ?x35868 (* (* 2.0 l_0_9_171) l_0_9_173)) (* (* 2.0 l_0_9_200) l_0_9_218))))
 (let ((?x35876 (- (- ?x35872 (* (* 2.0 l_0_9_201) l_0_9_219)) (* (* 2.0 l_0_9_202) l_0_9_220))))
 (= ?x35876 0.0)))))))
(assert
 (let ((?x35919 (* l_0_9_206 l_0_9_206)))
 (let ((?x35917 (* l_0_9_205 l_0_9_205)))
 (let ((?x35915 (* l_0_9_204 l_0_9_204)))
 (let ((?x35913 (* l_0_9_203 l_0_9_203)))
 (let ((?x35906 (- (* (* (- 1.0) l_0_9_119) l_0_9_119) (* (* 1.0 l_0_9_120) l_0_9_120))))
 (let ((?x35912 (- (- ?x35906 (* (* 1.0 l_0_9_121) l_0_9_121)) (* (* 1.0 l_0_9_122) l_0_9_122))))
 (= (- (- (- (- ?x35912 ?x35913) ?x35915) ?x35917) ?x35919) 0.0))))))))
(assert
 (let ((?x35977 (* l_0_9_224 l_0_9_224)))
 (let ((?x35975 (* l_0_9_223 l_0_9_223)))
 (let ((?x35973 (* l_0_9_222 l_0_9_222)))
 (let ((?x35971 (* l_0_9_221 l_0_9_221)))
 (let ((?x35969 (* l_0_9_220 l_0_9_220)))
 (let ((?x35967 (* l_0_9_219 l_0_9_219)))
 (let ((?x35965 (* l_0_9_218 l_0_9_218)))
 (let ((?x35941 (- (* (* (- 1.0) l_0_9_134) l_0_9_134) (* (* 1.0 l_0_9_135) l_0_9_135))))
 (let ((?x35947 (- (- ?x35941 (* (* 1.0 l_0_9_136) l_0_9_136)) (* (* 1.0 l_0_9_137) l_0_9_137))))
 (let ((?x35953 (- (- ?x35947 (* (* 1.0 l_0_9_138) l_0_9_138)) (* (* 1.0 l_0_9_139) l_0_9_139))))
 (let ((?x35958 (+ (- ?x35953 (* (* 1.0 l_0_9_140) l_0_9_140)) (* (* 2.0 l_0_9_142) l_0_9_162))))
 (let ((?x35962 (- (+ ?x35958 (* (* 2.0 l_0_9_143) l_0_9_163)) (* (* 2.0 l_0_9_170) l_0_9_190))))
 (let ((?x35970 (- (- (- (- ?x35962 (* (* 2.0 l_0_9_171) l_0_9_191)) ?x35965) ?x35967) ?x35969)))
 (= (- (- (- (- ?x35970 ?x35971) ?x35973) ?x35975) ?x35977) 0.0)))))))))))))))
(assert
 (let ((?x36028 (* l_0_9_174 l_0_9_174)))
 (let ((?x36026 (* l_0_9_173 l_0_9_173)))
 (let ((?x36024 (* l_0_9_172 l_0_9_172)))
 (let ((?x36022 (* l_0_9_146 l_0_9_146)))
 (let ((?x36025 (- (+ (+ (* l_0_9_144 l_0_9_144) (* l_0_9_145 l_0_9_145)) ?x36022) ?x36024)))
 (= (- (- ?x36025 ?x36026) ?x36028) 0.0)))))))
(assert
 (let ((?x8404 (+ (* (* 2.0 l_0_9_144) l_0_9_162) (* (* 2.0 l_0_9_145) l_0_9_163))))
 (let ((?x36038 (- (+ ?x8404 (* (* 2.0 l_0_9_146) l_0_9_164)) (* (* 2.0 l_0_9_172) l_0_9_190))))
 (let ((?x36042 (- (- ?x36038 (* (* 2.0 l_0_9_173) l_0_9_191)) (* (* 2.0 l_0_9_174) l_0_9_192))))
 (= ?x36042 0.0)))))
(assert
 (let ((?x36086 (* l_0_9_196 l_0_9_196)))
 (let ((?x36084 (* l_0_9_195 l_0_9_195)))
 (let ((?x36082 (* l_0_9_194 l_0_9_194)))
 (let ((?x36080 (* l_0_9_193 l_0_9_193)))
 (let ((?x36078 (* l_0_9_192 l_0_9_192)))
 (let ((?x36076 (* l_0_9_191 l_0_9_191)))
 (let ((?x36074 (* l_0_9_190 l_0_9_190)))
 (let ((?x36072 (* l_0_9_168 l_0_9_168)))
 (let ((?x36070 (* l_0_9_167 l_0_9_167)))
 (let ((?x36068 (* l_0_9_166 l_0_9_166)))
 (let ((?x36066 (* l_0_9_165 l_0_9_165)))
 (let ((?x36064 (* l_0_9_164 l_0_9_164)))
 (let ((?x36067 (+ (+ (+ (* l_0_9_162 l_0_9_162) (* l_0_9_163 l_0_9_163)) ?x36064) ?x36066)))
 (let ((?x36081 (- (- (- (- (+ (+ (+ ?x36067 ?x36068) ?x36070) ?x36072) ?x36074) ?x36076) ?x36078) ?x36080)))
 (= (- (- (- ?x36081 ?x36082) ?x36084) ?x36086) 0.0))))))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_28 0.0))
(assert
 (>= l_0_9_29 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_34 0.0))
(assert
 (>= l_0_9_38 0.0))
(assert
 (>= l_0_9_43 0.0))
(assert
 (>= l_0_9_49 0.0))
(assert
 (>= l_0_9_56 0.0))
(assert
 (>= l_0_9_57 0.0))
(assert
 (>= l_0_9_59 0.0))
(assert
 (>= l_0_9_62 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_71 0.0))
(assert
 (>= l_0_9_77 0.0))
(assert
 (>= l_0_9_84 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_87 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_94 0.0))
(assert
 (>= l_0_9_99 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_112 0.0))
(assert
 (>= l_0_9_113 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_118 0.0))
(assert
 (>= l_0_9_122 0.0))
(assert
 (>= l_0_9_127 0.0))
(assert
 (>= l_0_9_133 0.0))
(assert
 (>= l_0_9_140 0.0))
(assert
 (>= l_0_9_141 0.0))
(assert
 (>= l_0_9_143 0.0))
(assert
 (>= l_0_9_146 0.0))
(assert
 (>= l_0_9_150 0.0))
(assert
 (>= l_0_9_155 0.0))
(assert
 (>= l_0_9_161 0.0))
(assert
 (>= l_0_9_168 0.0))
(assert
 (>= l_0_9_169 0.0))
(assert
 (>= l_0_9_171 0.0))
(assert
 (>= l_0_9_174 0.0))
(assert
 (>= l_0_9_178 0.0))
(assert
 (>= l_0_9_183 0.0))
(assert
 (>= l_0_9_189 0.0))
(assert
 (>= l_0_9_196 0.0))
(assert
 (>= l_0_9_197 0.0))
(assert
 (>= l_0_9_199 0.0))
(assert
 (>= l_0_9_202 0.0))
(assert
 (>= l_0_9_206 0.0))
(assert
 (>= l_0_9_211 0.0))
(assert
 (>= l_0_9_217 0.0))
(assert
 (>= l_0_9_224 0.0))
(assert
 (let ((?x36206 (* l_0_10_31 l_0_10_31)))
 (let ((?x36204 (* l_0_10_30 l_0_10_30)))
 (let ((?x36202 (* l_0_10_3 l_0_10_3)))
 (let ((?x36176 (* l_0_10_2 l_0_10_2)))
 (let ((?x36157 (- (* (* (- 2.0) l_0_10_119) l_0_10_134) (* (* 2.0 l_0_10_120) l_0_10_135))))
 (let ((?x36163 (- (- ?x36157 (* (* 2.0 l_0_10_121) l_0_10_136)) (* (* 2.0 l_0_10_122) l_0_10_137))))
 (let ((?x36169 (+ (+ ?x36163 (* (* 2.0 l_0_10_142) l_0_10_147)) (* (* 2.0 l_0_10_143) l_0_10_148))))
 (let ((?x36175 (- (- ?x36169 (* (* 2.0 l_0_10_170) l_0_10_175)) (* (* 2.0 l_0_10_171) l_0_10_176))))
 (let ((?x36183 (- (- (+ ?x36175 ?x36176) (* (* 2.0 l_0_10_203) l_0_10_218)) (* (* 2.0 l_0_10_204) l_0_10_219))))
 (let ((?x36189 (- (- ?x36183 (* (* 2.0 l_0_10_205) l_0_10_220)) (* (* 2.0 l_0_10_206) l_0_10_221))))
 (let ((?x36195 (- (- ?x36189 (* (* 2.0 l_0_10_231) l_0_10_246)) (* (* 2.0 l_0_10_232) l_0_10_247))))
 (let ((?x36201 (- (- ?x36195 (* (* 2.0 l_0_10_233) l_0_10_248)) (* (* 2.0 l_0_10_234) l_0_10_249))))
 (= (+ (- (- (+ ?x36201 ?x36202) ?x36204) ?x36206) 1.0) 0.0))))))))))))))
(assert
 (let ((?x36206 (* l_0_10_31 l_0_10_31)))
 (let ((?x36204 (* l_0_10_30 l_0_10_30)))
 (let ((?x36202 (* l_0_10_3 l_0_10_3)))
 (let ((?x36176 (* l_0_10_2 l_0_10_2)))
 (let ((?x36259 (- (* (* (- 2.0) l_0_10_113) l_0_10_116) (* (* 2.0 l_0_10_197) l_0_10_200))))
 (let ((?x36265 (- (+ (- (+ ?x36259 ?x36176) (* (* 2.0 l_0_10_225) l_0_10_228)) ?x36202) ?x36204)))
 (= (+ (- ?x36265 ?x36206) 1.0) 0.0))))))))
(assert
 (let ((?x8659 (- (* (* (- 2.0) l_0_10_114) l_0_10_116) (* (* 2.0 l_0_10_115) l_0_10_117))))
 (let ((?x36280 (- (- ?x8659 (* (* 2.0 l_0_10_198) l_0_10_200)) (* (* 2.0 l_0_10_199) l_0_10_201))))
 (let ((?x36286 (- (- ?x36280 (* (* 2.0 l_0_10_226) l_0_10_228)) (* (* 2.0 l_0_10_227) l_0_10_229))))
 (= ?x36286 0.0)))))
(assert
 (let ((?x36206 (* l_0_10_31 l_0_10_31)))
 (let ((?x36204 (* l_0_10_30 l_0_10_30)))
 (let ((?x36202 (* l_0_10_3 l_0_10_3)))
 (let ((?x36176 (* l_0_10_2 l_0_10_2)))
 (let ((?x8738 (- (* (* (- 2.0) l_0_10_114) l_0_10_128) (* (* 2.0 l_0_10_115) l_0_10_129))))
 (let ((?x36303 (- (- ?x8738 (* (* 2.0 l_0_10_198) l_0_10_212)) (* (* 2.0 l_0_10_199) l_0_10_213))))
 (let ((?x36308 (- (- (+ ?x36303 ?x36176) (* (* 2.0 l_0_10_226) l_0_10_240)) (* (* 2.0 l_0_10_227) l_0_10_241))))
 (= (+ (- (- (+ ?x36308 ?x36202) ?x36204) ?x36206) 1.0) 0.0)))))))))
(assert
 (let ((?x36206 (* l_0_10_31 l_0_10_31)))
 (let ((?x36204 (* l_0_10_30 l_0_10_30)))
 (let ((?x36202 (* l_0_10_3 l_0_10_3)))
 (let ((?x36176 (* l_0_10_2 l_0_10_2)))
 (let ((?x36332 (- (* (* (- 2.0) l_0_10_114) l_0_10_123) (* (* 2.0 l_0_10_115) l_0_10_124))))
 (let ((?x36336 (- (- ?x36332 (* (* 2.0 l_0_10_198) l_0_10_207)) (* (* 2.0 l_0_10_199) l_0_10_208))))
 (let ((?x36341 (- (- (- ?x36336 ?x36176) (* (* 2.0 l_0_10_226) l_0_10_235)) (* (* 2.0 l_0_10_227) l_0_10_236))))
 (= (- (+ (+ (- ?x36341 ?x36202) ?x36204) ?x36206) 1.0) 0.0)))))))))
(assert
 (= (+ (* (- l_0_10_1) l_0_10_1) (* l_0_10_29 l_0_10_29)) 0.0))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36378 (* ?x36377 l_0_10_30)))
 (let ((?x36372 (- (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_113) l_0_10_123))))
 (let ((?x36376 (- (- ?x36372 (* (* 2.0 l_0_10_197) l_0_10_207)) (* (* 2.0 l_0_10_225) l_0_10_235))))
 (= (+ ?x36376 ?x36378) 0.0))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36403 (* ?x36402 l_0_10_40)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36400 (* ?x36399 l_0_10_39)))
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36397 (* ?x36377 l_0_10_32)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x36395 (* ?x36394 l_0_10_3)))
 (let ((?x9035 (* 2.0 l_0_10_11)))
 (let ((?x36392 (* ?x9035 l_0_10_2)))
 (let ((?x36401 (- (+ (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_4) ?x36392) ?x36395) ?x36397) ?x36400)))
 (= (- ?x36401 ?x36403) 0.0)))))))))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36431 (* ?x36377 l_0_10_35)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x36431) 0.0))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36437 (* ?x36377 l_0_10_39)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) ?x36437) 0.0))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36455 (* ?x36377 l_0_10_44)))
 (let ((?x36437 (* ?x36377 l_0_10_39)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x36448 (* ?x36445 l_0_10_16)))
 (let ((?x36447 (* ?x36445 l_0_10_11)))
 (= (+ (- (- ?x36447 ?x36448) ?x36437) ?x36455) 0.0))))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36476 (* ?x36377 l_0_10_50)))
 (let ((?x36472 (+ (* (* (- 2.0) l_0_10_1) l_0_10_22) (* (* 2.0 l_0_10_141) l_0_10_151))))
 (let ((?x36480 (+ (+ (- ?x36472 (* (* 2.0 l_0_10_169) l_0_10_179)) ?x36476) (* (* 2.0 l_0_10_58) l_0_10_67))))
 (let ((?x36486 (- (+ ?x36480 (* (* 2.0 l_0_10_59) l_0_10_68)) (* (* 2.0 l_0_10_86) l_0_10_95))))
 (= (- ?x36486 (* (* 2.0 l_0_10_87) l_0_10_96)) 0.0)))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36550 (* ?x36402 l_0_10_33)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36548 (* ?x36399 l_0_10_32)))
 (let ((?x36545 (* 2.0 l_0_10_3)))
 (let ((?x36546 (* ?x36545 l_0_10_5)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36525 (* ?x36524 l_0_10_4)))
 (let ((?x36520 (- (* (* (- 2.0) l_0_10_116) l_0_10_123) (* (* 2.0 l_0_10_117) l_0_10_124))))
 (let ((?x36529 (- (- (- ?x36520 (* (* 2.0 l_0_10_118) l_0_10_125)) ?x36525) (* (* 2.0 l_0_10_200) l_0_10_207))))
 (let ((?x36535 (- (- ?x36529 (* (* 2.0 l_0_10_201) l_0_10_208)) (* (* 2.0 l_0_10_202) l_0_10_209))))
 (let ((?x36541 (- (- ?x36535 (* (* 2.0 l_0_10_228) l_0_10_235)) (* (* 2.0 l_0_10_229) l_0_10_236))))
 (let ((?x36551 (+ (+ (- (- ?x36541 (* (* 2.0 l_0_10_230) l_0_10_237)) ?x36546) ?x36548) ?x36550)))
 (= ?x36551 0.0)))))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36593 (* ?x36402 l_0_10_36)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36591 (* ?x36399 l_0_10_35)))
 (let ((?x36545 (* 2.0 l_0_10_3)))
 (let ((?x36589 (* ?x36545 l_0_10_8)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36571 (* ?x36524 l_0_10_7)))
 (let ((?x9208 (- (* (* (- 2.0) l_0_10_119) l_0_10_123) (* (* 2.0 l_0_10_120) l_0_10_124))))
 (let ((?x36570 (- (- ?x9208 (* (* 2.0 l_0_10_121) l_0_10_125)) (* (* 2.0 l_0_10_122) l_0_10_126))))
 (let ((?x36576 (- (- (- ?x36570 ?x36571) (* (* 2.0 l_0_10_203) l_0_10_207)) (* (* 2.0 l_0_10_204) l_0_10_208))))
 (let ((?x36580 (- (- ?x36576 (* (* 2.0 l_0_10_205) l_0_10_209)) (* (* 2.0 l_0_10_206) l_0_10_210))))
 (let ((?x36584 (- (- ?x36580 (* (* 2.0 l_0_10_231) l_0_10_235)) (* (* 2.0 l_0_10_232) l_0_10_236))))
 (let ((?x36588 (- (- ?x36584 (* (* 2.0 l_0_10_233) l_0_10_237)) (* (* 2.0 l_0_10_234) l_0_10_238))))
 (= (+ (+ (- ?x36588 ?x36589) ?x36591) ?x36593) 0.0))))))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36403 (* ?x36402 l_0_10_40)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36400 (* ?x36399 l_0_10_39)))
 (let ((?x36641 (* l_0_10_239 l_0_10_239)))
 (let ((?x36639 (* l_0_10_238 l_0_10_238)))
 (let ((?x36637 (* l_0_10_237 l_0_10_237)))
 (let ((?x36635 (* l_0_10_236 l_0_10_236)))
 (let ((?x36633 (* l_0_10_235 l_0_10_235)))
 (let ((?x36631 (* l_0_10_211 l_0_10_211)))
 (let ((?x36629 (* l_0_10_210 l_0_10_210)))
 (let ((?x36627 (* l_0_10_209 l_0_10_209)))
 (let ((?x36625 (* l_0_10_208 l_0_10_208)))
 (let ((?x36623 (* l_0_10_207 l_0_10_207)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x36395 (* ?x36394 l_0_10_3)))
 (let ((?x9387 (- (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x36395) (* (* 1.0 l_0_10_123) l_0_10_123))))
 (let ((?x36616 (- (- ?x9387 (* (* 1.0 l_0_10_124) l_0_10_124)) (* (* 1.0 l_0_10_125) l_0_10_125))))
 (let ((?x36622 (- (- ?x36616 (* (* 1.0 l_0_10_126) l_0_10_126)) (* (* 1.0 l_0_10_127) l_0_10_127))))
 (let ((?x36636 (- (- (- (- (- (- (- ?x36622 ?x36623) ?x36625) ?x36627) ?x36629) ?x36631) ?x36633) ?x36635)))
 (= (+ (+ (- (- (- ?x36636 ?x36637) ?x36639) ?x36641) ?x36400) ?x36403) 0.0))))))))))))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36727 (* ?x36402 l_0_10_45)))
 (let ((?x36403 (* ?x36402 l_0_10_40)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36724 (* ?x36399 l_0_10_44)))
 (let ((?x36400 (* ?x36399 l_0_10_39)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x36691 (* ?x36690 l_0_10_3)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x36688 (* ?x36687 l_0_10_2)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x36395 (* ?x36394 l_0_10_3)))
 (let ((?x9035 (* 2.0 l_0_10_11)))
 (let ((?x36392 (* ?x9035 l_0_10_2)))
 (let ((?x36677 (- (- (+ ?x36392 ?x36395) (* (* 2.0 l_0_10_123) l_0_10_128)) (* (* 2.0 l_0_10_124) l_0_10_129))))
 (let ((?x36683 (- (- ?x36677 (* (* 2.0 l_0_10_125) l_0_10_130)) (* (* 2.0 l_0_10_126) l_0_10_131))))
 (let ((?x36695 (- (- (- (- ?x36683 (* (* 2.0 l_0_10_127) l_0_10_132)) ?x36688) ?x36691) (* (* 2.0 l_0_10_207) l_0_10_212))))
 (let ((?x36701 (- (- ?x36695 (* (* 2.0 l_0_10_208) l_0_10_213)) (* (* 2.0 l_0_10_209) l_0_10_214))))
 (let ((?x36707 (- (- ?x36701 (* (* 2.0 l_0_10_210) l_0_10_215)) (* (* 2.0 l_0_10_211) l_0_10_216))))
 (let ((?x36713 (- (- ?x36707 (* (* 2.0 l_0_10_235) l_0_10_240)) (* (* 2.0 l_0_10_236) l_0_10_241))))
 (let ((?x36719 (- (- ?x36713 (* (* 2.0 l_0_10_237) l_0_10_242)) (* (* 2.0 l_0_10_238) l_0_10_243))))
 (let ((?x36726 (- (+ (- (- ?x36719 (* (* 2.0 l_0_10_239) l_0_10_244)) ?x36400) ?x36724) ?x36403)))
 (= (+ ?x36726 ?x36727) 0.0))))))))))))))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36822 (* ?x36402 l_0_10_51)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36820 (* ?x36399 l_0_10_50)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x36808 (* ?x36807 l_0_10_3)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36795 (* ?x36524 l_0_10_22)))
 (let ((?x9615 (- (* (* (- 2.0) l_0_10_123) l_0_10_134) (* (* 2.0 l_0_10_124) l_0_10_135))))
 (let ((?x36784 (- (- ?x9615 (* (* 2.0 l_0_10_125) l_0_10_136)) (* (* 2.0 l_0_10_126) l_0_10_137))))
 (let ((?x36788 (+ (- ?x36784 (* (* 2.0 l_0_10_127) l_0_10_138)) (* (* 2.0 l_0_10_142) l_0_10_151))))
 (let ((?x36792 (- (+ ?x36788 (* (* 2.0 l_0_10_143) l_0_10_152)) (* (* 2.0 l_0_10_170) l_0_10_179))))
 (let ((?x36798 (- (- (- ?x36792 (* (* 2.0 l_0_10_171) l_0_10_180)) ?x36795) (* (* 2.0 l_0_10_207) l_0_10_218))))
 (let ((?x36802 (- (- ?x36798 (* (* 2.0 l_0_10_208) l_0_10_219)) (* (* 2.0 l_0_10_209) l_0_10_220))))
 (let ((?x36806 (- (- ?x36802 (* (* 2.0 l_0_10_210) l_0_10_221)) (* (* 2.0 l_0_10_211) l_0_10_222))))
 (let ((?x36813 (- (- (- ?x36806 ?x36808) (* (* 2.0 l_0_10_235) l_0_10_246)) (* (* 2.0 l_0_10_236) l_0_10_247))))
 (let ((?x36817 (- (- ?x36813 (* (* 2.0 l_0_10_237) l_0_10_248)) (* (* 2.0 l_0_10_238) l_0_10_249))))
 (= (+ (+ (- ?x36817 (* (* 2.0 l_0_10_239) l_0_10_250)) ?x36820) ?x36822) 0.0)))))))))))))))))))
(assert
 (let ((?x36870 (* l_0_10_6 l_0_10_6)))
 (let ((?x36868 (* l_0_10_5 l_0_10_5)))
 (let ((?x36866 (* l_0_10_4 l_0_10_4)))
 (let ((?x36864 (* l_0_10_34 l_0_10_34)))
 (let ((?x36867 (- (+ (+ (* l_0_10_32 l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x36864) ?x36866)))
 (= (- (- ?x36867 ?x36868) ?x36870) 0.0)))))))
(assert
 (let ((?x36896 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x36893 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x36890 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36887 (* ?x36886 l_0_10_37)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36884 (* ?x36883 l_0_10_36)))
 (let ((?x36894 (- (- (+ (+ (* (* 2.0 l_0_10_32) l_0_10_35) ?x36884) ?x36887) ?x36890) ?x36893)))
 (= (- ?x36894 ?x36896) 0.0))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36925 (* ?x36886 l_0_10_41)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36923 (* ?x36883 l_0_10_40)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36921 (* ?x36881 l_0_10_39)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x36919 (* ?x36918 l_0_10_6)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x36916 (* ?x36394 l_0_10_5)))
 (let ((?x36924 (+ (+ (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x36916) ?x36919) ?x36921) ?x36923)))
 (= (+ ?x36924 ?x36925) 0.0)))))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36948 (* ?x36886 l_0_10_46)))
 (let ((?x36925 (* ?x36886 l_0_10_41)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36945 (* ?x36883 l_0_10_45)))
 (let ((?x36923 (* ?x36883 l_0_10_40)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36942 (* ?x36881 l_0_10_44)))
 (let ((?x36921 (* ?x36881 l_0_10_39)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x36939 (* ?x36938 l_0_10_6)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x36936 (* ?x36690 l_0_10_5)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x10139 (* ?x36687 l_0_10_4)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x36919 (* ?x36918 l_0_10_6)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x36916 (* ?x36394 l_0_10_5)))
 (let ((?x10142 (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x36916) ?x36919)))
 (let ((?x36946 (+ (- (+ (- (- (- (- ?x10142 ?x10139) ?x36936) ?x36939) ?x36921) ?x36942) ?x36923) ?x36945)))
 (= (+ (- ?x36946 ?x36925) ?x36948) 0.0)))))))))))))))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36983 (* ?x36886 l_0_10_52)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36981 (* ?x36883 l_0_10_51)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36979 (* ?x36881 l_0_10_50)))
 (let ((?x36976 (* 2.0 l_0_10_24)))
 (let ((?x36977 (* ?x36976 l_0_10_6)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x36974 (* ?x36807 l_0_10_5)))
 (let ((?x36971 (* 2.0 l_0_10_22)))
 (let ((?x36972 (* ?x36971 l_0_10_4)))
 (let ((?x36958 (+ (* (* 2.0 l_0_10_144) l_0_10_151) (* (* 2.0 l_0_10_145) l_0_10_152))))
 (let ((?x36964 (- (+ ?x36958 (* (* 2.0 l_0_10_146) l_0_10_153)) (* (* 2.0 l_0_10_172) l_0_10_179))))
 (let ((?x36970 (- (- ?x36964 (* (* 2.0 l_0_10_173) l_0_10_180)) (* (* 2.0 l_0_10_174) l_0_10_181))))
 (= (+ (+ (+ (- (- (- ?x36970 ?x36972) ?x36974) ?x36977) ?x36979) ?x36981) ?x36983) 0.0)))))))))))))))))
(assert
 (let ((?x37035 (* l_0_10_9 l_0_10_9)))
 (let ((?x37033 (* l_0_10_8 l_0_10_8)))
 (let ((?x37031 (* l_0_10_7 l_0_10_7)))
 (let ((?x37029 (* l_0_10_38 l_0_10_38)))
 (let ((?x37027 (* l_0_10_37 l_0_10_37)))
 (let ((?x37025 (* l_0_10_36 l_0_10_36)))
 (let ((?x37026 (+ (+ (* (- l_0_10_10) l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x37025)))
 (= (- (- (- (+ (+ ?x37026 ?x37027) ?x37029) ?x37031) ?x37033) ?x37035) 0.0)))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37065 (* ?x37064 l_0_10_42)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37062 (* ?x37061 l_0_10_41)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37059 (* ?x37058 l_0_10_40)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37056 (* ?x37055 l_0_10_39)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37053 (* ?x36918 l_0_10_9)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37051 (* ?x36394 l_0_10_8)))
 (let ((?x9035 (* 2.0 l_0_10_11)))
 (let ((?x37049 (* ?x9035 l_0_10_7)))
 (let ((?x37057 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x37049) ?x37051) ?x37053) ?x37056)))
 (= (+ (+ (+ ?x37057 ?x37059) ?x37062) ?x37065) 0.0)))))))))))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37116 (* ?x37064 l_0_10_47)))
 (let ((?x37065 (* ?x37064 l_0_10_42)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37113 (* ?x37061 l_0_10_46)))
 (let ((?x37062 (* ?x37061 l_0_10_41)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37110 (* ?x37058 l_0_10_45)))
 (let ((?x37059 (* ?x37058 l_0_10_40)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37107 (* ?x37055 l_0_10_44)))
 (let ((?x37056 (* ?x37055 l_0_10_39)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x37104 (* ?x36938 l_0_10_9)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x37102 (* ?x36690 l_0_10_8)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x37100 (* ?x36687 l_0_10_7)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37053 (* ?x36918 l_0_10_9)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37051 (* ?x36394 l_0_10_8)))
 (let ((?x9035 (* 2.0 l_0_10_11)))
 (let ((?x37049 (* ?x9035 l_0_10_7)))
 (let ((?x37083 (* 2.0 l_0_10_10)))
 (let ((?x37087 (* ?x37083 l_0_10_19)))
 (let ((?x37085 (* ?x37083 l_0_10_14)))
 (let ((?x37105 (- (- (- (+ (+ (+ (- ?x37085 ?x37087) ?x37049) ?x37051) ?x37053) ?x37100) ?x37102) ?x37104)))
 (let ((?x37115 (- (+ (- (+ (- (+ (- ?x37105 ?x37056) ?x37107) ?x37059) ?x37110) ?x37062) ?x37113) ?x37065)))
 (= (+ ?x37115 ?x37116) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37177 (* ?x37064 l_0_10_53)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37175 (* ?x37061 l_0_10_52)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37173 (* ?x37058 l_0_10_51)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37171 (* ?x37055 l_0_10_50)))
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36403 (* ?x36402 l_0_10_40)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36400 (* ?x36399 l_0_10_39)))
 (let ((?x36976 (* 2.0 l_0_10_24)))
 (let ((?x37167 (* ?x36976 l_0_10_9)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x37165 (* ?x36807 l_0_10_8)))
 (let ((?x36971 (* 2.0 l_0_10_22)))
 (let ((?x37163 (* ?x36971 l_0_10_7)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x36395 (* ?x36394 l_0_10_3)))
 (let ((?x9035 (* 2.0 l_0_10_11)))
 (let ((?x36392 (* ?x9035 l_0_10_2)))
 (let ((?x37141 (+ (+ (+ (* (* (- 2.0) l_0_10_10) l_0_10_25) ?x36392) ?x36395) (* (* 2.0 l_0_10_147) l_0_10_151))))
 (let ((?x37147 (+ (+ ?x37141 (* (* 2.0 l_0_10_148) l_0_10_152)) (* (* 2.0 l_0_10_149) l_0_10_153))))
 (let ((?x37153 (- (+ ?x37147 (* (* 2.0 l_0_10_150) l_0_10_154)) (* (* 2.0 l_0_10_175) l_0_10_179))))
 (let ((?x37159 (- (- ?x37153 (* (* 2.0 l_0_10_176) l_0_10_180)) (* (* 2.0 l_0_10_177) l_0_10_181))))
 (let ((?x37168 (- (- (- (- ?x37159 (* (* 2.0 l_0_10_178) l_0_10_182)) ?x37163) ?x37165) ?x37167)))
 (= (+ (+ (+ (+ (- (- ?x37168 ?x36400) ?x36403) ?x37171) ?x37173) ?x37175) ?x37177) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x37235 (* l_0_10_43 l_0_10_43)))
 (let ((?x37233 (* l_0_10_42 l_0_10_42)))
 (let ((?x37231 (* l_0_10_41 l_0_10_41)))
 (let ((?x37229 (* l_0_10_40 l_0_10_40)))
 (let ((?x37227 (* l_0_10_39 l_0_10_39)))
 (let ((?x37225 (* l_0_10_15 l_0_10_15)))
 (let ((?x37223 (* l_0_10_14 l_0_10_14)))
 (let ((?x37210 (* l_0_10_13 l_0_10_13)))
 (let ((?x37222 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x37210)))
 (let ((?x37236 (+ (+ (+ (+ (+ (- (- ?x37222 ?x37223) ?x37225) ?x37227) ?x37229) ?x37231) ?x37233) ?x37235)))
 (= ?x37236 0.0))))))))))))
(assert
 (let ((?x37235 (* l_0_10_43 l_0_10_43)))
 (let ((?x37286 (* 2.0 l_0_10_43)))
 (let ((?x37287 (* ?x37286 l_0_10_48)))
 (let ((?x37233 (* l_0_10_42 l_0_10_42)))
 (let ((?x37282 (* 2.0 l_0_10_42)))
 (let ((?x37283 (* ?x37282 l_0_10_47)))
 (let ((?x37231 (* l_0_10_41 l_0_10_41)))
 (let ((?x37278 (* 2.0 l_0_10_41)))
 (let ((?x37279 (* ?x37278 l_0_10_46)))
 (let ((?x37229 (* l_0_10_40 l_0_10_40)))
 (let ((?x37274 (* 2.0 l_0_10_40)))
 (let ((?x37275 (* ?x37274 l_0_10_45)))
 (let ((?x37227 (* l_0_10_39 l_0_10_39)))
 (let ((?x37270 (* 2.0 l_0_10_39)))
 (let ((?x37271 (* ?x37270 l_0_10_44)))
 (let ((?x37225 (* l_0_10_15 l_0_10_15)))
 (let ((?x37266 (* 2.0 l_0_10_15)))
 (let ((?x37267 (* ?x37266 l_0_10_20)))
 (let ((?x37223 (* l_0_10_14 l_0_10_14)))
 (let ((?x37262 (* 2.0 l_0_10_14)))
 (let ((?x37263 (* ?x37262 l_0_10_19)))
 (let ((?x37210 (* l_0_10_13 l_0_10_13)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37259 (* ?x36918 l_0_10_18)))
 (let ((?x37207 (* l_0_10_12 l_0_10_12)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37256 (* ?x36394 l_0_10_17)))
 (let ((?x37257 (- (+ (* (* (- 2.0) l_0_10_11) l_0_10_16) (* l_0_10_11 l_0_10_11)) ?x37256)))
 (let ((?x37269 (+ (- (+ (- (+ (- (+ ?x37257 ?x37207) ?x37259) ?x37210) ?x37263) ?x37223) ?x37267) ?x37225)))
 (let ((?x37284 (+ (- (+ (- (+ (- (+ ?x37269 ?x37271) ?x37227) ?x37275) ?x37229) ?x37279) ?x37231) ?x37283)))
 (= (- (+ (- ?x37284 ?x37233) ?x37287) ?x37235) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x37286 (* 2.0 l_0_10_43)))
 (let ((?x37364 (* ?x37286 l_0_10_54)))
 (let ((?x37282 (* 2.0 l_0_10_42)))
 (let ((?x37362 (* ?x37282 l_0_10_53)))
 (let ((?x37278 (* 2.0 l_0_10_41)))
 (let ((?x37360 (* ?x37278 l_0_10_52)))
 (let ((?x37274 (* 2.0 l_0_10_40)))
 (let ((?x37358 (* ?x37274 l_0_10_51)))
 (let ((?x37270 (* 2.0 l_0_10_39)))
 (let ((?x37356 (* ?x37270 l_0_10_50)))
 (let ((?x37354 (* l_0_10_183 l_0_10_183)))
 (let ((?x37352 (* l_0_10_182 l_0_10_182)))
 (let ((?x37350 (* l_0_10_181 l_0_10_181)))
 (let ((?x37348 (* l_0_10_180 l_0_10_180)))
 (let ((?x37346 (* l_0_10_179 l_0_10_179)))
 (let ((?x37344 (* l_0_10_155 l_0_10_155)))
 (let ((?x37342 (* l_0_10_154 l_0_10_154)))
 (let ((?x37340 (* l_0_10_153 l_0_10_153)))
 (let ((?x37338 (* l_0_10_152 l_0_10_152)))
 (let ((?x37336 (* l_0_10_151 l_0_10_151)))
 (let ((?x37266 (* 2.0 l_0_10_15)))
 (let ((?x37334 (* ?x37266 l_0_10_26)))
 (let ((?x37262 (* 2.0 l_0_10_14)))
 (let ((?x37332 (* ?x37262 l_0_10_25)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37330 (* ?x36918 l_0_10_24)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37328 (* ?x36394 l_0_10_23)))
 (let ((?x37335 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_22) ?x37328) ?x37330) ?x37332) ?x37334)))
 (let ((?x37349 (- (- (+ (+ (+ (+ (+ ?x37335 ?x37336) ?x37338) ?x37340) ?x37342) ?x37344) ?x37346) ?x37348)))
 (let ((?x37363 (+ (+ (+ (+ (- (- (- ?x37349 ?x37350) ?x37352) ?x37354) ?x37356) ?x37358) ?x37360) ?x37362)))
 (= (+ ?x37363 ?x37364) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x37426 (* l_0_10_49 l_0_10_49)))
 (let ((?x37424 (* l_0_10_48 l_0_10_48)))
 (let ((?x37422 (* l_0_10_47 l_0_10_47)))
 (let ((?x37420 (* l_0_10_46 l_0_10_46)))
 (let ((?x37418 (* l_0_10_45 l_0_10_45)))
 (let ((?x37416 (* l_0_10_44 l_0_10_44)))
 (let ((?x37286 (* 2.0 l_0_10_43)))
 (let ((?x37287 (* ?x37286 l_0_10_48)))
 (let ((?x37282 (* 2.0 l_0_10_42)))
 (let ((?x37283 (* ?x37282 l_0_10_47)))
 (let ((?x37278 (* 2.0 l_0_10_41)))
 (let ((?x37279 (* ?x37278 l_0_10_46)))
 (let ((?x37274 (* 2.0 l_0_10_40)))
 (let ((?x37275 (* ?x37274 l_0_10_45)))
 (let ((?x37270 (* 2.0 l_0_10_39)))
 (let ((?x37271 (* ?x37270 l_0_10_44)))
 (let ((?x37409 (* l_0_10_21 l_0_10_21)))
 (let ((?x37407 (* l_0_10_20 l_0_10_20)))
 (let ((?x37405 (* l_0_10_19 l_0_10_19)))
 (let ((?x37403 (* l_0_10_18 l_0_10_18)))
 (let ((?x37401 (* l_0_10_17 l_0_10_17)))
 (let ((?x37386 (* l_0_10_16 l_0_10_16)))
 (let ((?x37266 (* 2.0 l_0_10_15)))
 (let ((?x37267 (* ?x37266 l_0_10_20)))
 (let ((?x37262 (* 2.0 l_0_10_14)))
 (let ((?x37263 (* ?x37262 l_0_10_19)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37259 (* ?x36918 l_0_10_18)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37256 (* ?x36394 l_0_10_17)))
 (let ((?x37384 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_16) ?x37256) ?x37259) ?x37263) ?x37267)))
 (let ((?x37411 (- (- (- (- (- (- (- ?x37384 ?x37386) ?x37401) ?x37403) ?x37405) ?x37407) ?x37409) ?x37271)))
 (let ((?x37421 (+ (+ (+ (- (- (- (- ?x37411 ?x37275) ?x37279) ?x37283) ?x37287) ?x37416) ?x37418) ?x37420)))
 (= (+ (+ (+ ?x37421 ?x37422) ?x37424) ?x37426) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x37505 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x37502 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x37499 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x37496 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x37493 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x37490 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x37286 (* 2.0 l_0_10_43)))
 (let ((?x37364 (* ?x37286 l_0_10_54)))
 (let ((?x37282 (* 2.0 l_0_10_42)))
 (let ((?x37362 (* ?x37282 l_0_10_53)))
 (let ((?x37278 (* 2.0 l_0_10_41)))
 (let ((?x37360 (* ?x37278 l_0_10_52)))
 (let ((?x37274 (* 2.0 l_0_10_40)))
 (let ((?x37358 (* ?x37274 l_0_10_51)))
 (let ((?x37270 (* 2.0 l_0_10_39)))
 (let ((?x37356 (* ?x37270 l_0_10_50)))
 (let ((?x37482 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x37479 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x37476 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x37461 (* ?x36938 l_0_10_24)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x37456 (* ?x36690 l_0_10_23)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x37454 (* ?x36687 l_0_10_22)))
 (let ((?x37266 (* 2.0 l_0_10_15)))
 (let ((?x37334 (* ?x37266 l_0_10_26)))
 (let ((?x37262 (* 2.0 l_0_10_14)))
 (let ((?x37332 (* ?x37262 l_0_10_25)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37330 (* ?x36918 l_0_10_24)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37328 (* ?x36394 l_0_10_23)))
 (let ((?x37438 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_22) ?x37328) ?x37330) ?x37332) ?x37334)))
 (let ((?x37444 (+ (+ ?x37438 (* (* 2.0 l_0_10_151) l_0_10_156)) (* (* 2.0 l_0_10_152) l_0_10_157))))
 (let ((?x37450 (+ (+ ?x37444 (* (* 2.0 l_0_10_153) l_0_10_158)) (* (* 2.0 l_0_10_154) l_0_10_159))))
 (let ((?x37460 (- (- (- (+ ?x37450 (* (* 2.0 l_0_10_155) l_0_10_160)) ?x37454) ?x37456) (* (* 2.0 l_0_10_179) l_0_10_184))))
 (let ((?x37468 (- (- (- ?x37460 ?x37461) (* (* 2.0 l_0_10_180) l_0_10_185)) (* (* 2.0 l_0_10_181) l_0_10_186))))
 (let ((?x37474 (- (- ?x37468 (* (* 2.0 l_0_10_182) l_0_10_187)) (* (* 2.0 l_0_10_183) l_0_10_188))))
 (let ((?x37487 (- (- (- (- (- (- (- ?x37474 ?x37476) ?x37479) ?x37482) ?x37356) ?x37358) ?x37360) ?x37362)))
 (let ((?x37506 (+ (+ (+ (+ (+ (+ (- ?x37487 ?x37364) ?x37490) ?x37493) ?x37496) ?x37499) ?x37502) ?x37505)))
 (= ?x37506 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x37648 (* l_0_10_56 l_0_10_56)))
 (let ((?x37646 (* l_0_10_55 l_0_10_55)))
 (let ((?x37644 (* l_0_10_54 l_0_10_54)))
 (let ((?x37642 (* l_0_10_53 l_0_10_53)))
 (let ((?x37640 (* l_0_10_52 l_0_10_52)))
 (let ((?x37638 (* l_0_10_51 l_0_10_51)))
 (let ((?x37636 (* l_0_10_50 l_0_10_50)))
 (let ((?x37634 (* l_0_10_28 l_0_10_28)))
 (let ((?x37632 (* l_0_10_27 l_0_10_27)))
 (let ((?x37630 (* l_0_10_26 l_0_10_26)))
 (let ((?x37628 (* l_0_10_25 l_0_10_25)))
 (let ((?x37626 (* l_0_10_24 l_0_10_24)))
 (let ((?x37624 (* l_0_10_23 l_0_10_23)))
 (let ((?x37622 (* l_0_10_22 l_0_10_22)))
 (let ((?x37605 (+ (* (* 2.0 l_0_10_151) l_0_10_162) (* (* 2.0 l_0_10_152) l_0_10_163))))
 (let ((?x37609 (+ (+ ?x37605 (* (* 2.0 l_0_10_153) l_0_10_164)) (* (* 2.0 l_0_10_154) l_0_10_165))))
 (let ((?x37613 (- (+ ?x37609 (* (* 2.0 l_0_10_155) l_0_10_166)) (* (* 2.0 l_0_10_179) l_0_10_190))))
 (let ((?x37617 (- (- ?x37613 (* (* 2.0 l_0_10_180) l_0_10_191)) (* (* 2.0 l_0_10_181) l_0_10_192))))
 (let ((?x37621 (- (- ?x37617 (* (* 2.0 l_0_10_182) l_0_10_193)) (* (* 2.0 l_0_10_183) l_0_10_194))))
 (let ((?x37635 (- (- (- (- (- (- (- ?x37621 ?x37622) ?x37624) ?x37626) ?x37628) ?x37630) ?x37632) ?x37634)))
 (let ((?x37649 (+ (+ (+ (+ (+ (+ (+ ?x37635 ?x37636) ?x37638) ?x37640) ?x37642) ?x37644) ?x37646) ?x37648)))
 (= ?x37649 0.0)))))))))))))))))))))))
(assert
 (let ((?x36360 (* l_0_10_29 l_0_10_29)))
 (let ((?x36364 (* l_0_10_1 l_0_10_1)))
 (let ((?x11286 (- ?x36364 ?x36360)))
 (let ((?x37729 (- (+ ?x11286 (* (* 2.0 l_0_10_57) l_0_10_63)) (* (* 2.0 l_0_10_85) l_0_10_91))))
 (= ?x37729 0.0))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36378 (* ?x36377 l_0_10_30)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x37743 (* ?x36445 l_0_10_2)))
 (let ((?x37747 (- (+ ?x37743 (* (* 2.0 l_0_10_141) l_0_10_147)) (* (* 2.0 l_0_10_169) l_0_10_175))))
 (let ((?x37752 (+ (+ (- ?x37747 ?x36378) (* (* 2.0 l_0_10_58) l_0_10_63)) (* (* 2.0 l_0_10_59) l_0_10_64))))
 (let ((?x37756 (- (- ?x37752 (* (* 2.0 l_0_10_86) l_0_10_91)) (* (* 2.0 l_0_10_87) l_0_10_92))))
 (= ?x37756 0.0)))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37177 (* ?x37064 l_0_10_53)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37175 (* ?x37061 l_0_10_52)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37173 (* ?x37058 l_0_10_51)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37171 (* ?x37055 l_0_10_50)))
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36397 (* ?x36377 l_0_10_32)))
 (let ((?x36976 (* 2.0 l_0_10_24)))
 (let ((?x37167 (* ?x36976 l_0_10_9)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x37165 (* ?x36807 l_0_10_8)))
 (let ((?x36971 (* 2.0 l_0_10_22)))
 (let ((?x37163 (* ?x36971 l_0_10_7)))
 (let ((?x37083 (* 2.0 l_0_10_10)))
 (let ((?x37768 (* ?x37083 l_0_10_25)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x37767 (* ?x36445 l_0_10_4)))
 (let ((?x37775 (- (- (- (+ (+ (+ (+ ?x37767 ?x37768) ?x37163) ?x37165) ?x37167) ?x36397) ?x37171) ?x37173)))
 (let ((?x37783 (+ (+ (- (- ?x37775 ?x37175) ?x37177) (* (* 2.0 l_0_10_60) l_0_10_63)) (* (* 2.0 l_0_10_61) l_0_10_64))))
 (let ((?x37789 (- (+ ?x37783 (* (* 2.0 l_0_10_62) l_0_10_65)) (* (* 2.0 l_0_10_88) l_0_10_91))))
 (let ((?x37795 (- (- ?x37789 (* (* 2.0 l_0_10_89) l_0_10_92)) (* (* 2.0 l_0_10_90) l_0_10_93))))
 (= ?x37795 0.0))))))))))))))))))))))))))
(assert
 (let ((?x37817 (* l_0_10_94 l_0_10_94)))
 (let ((?x37815 (* l_0_10_93 l_0_10_93)))
 (let ((?x37813 (* l_0_10_92 l_0_10_92)))
 (let ((?x37811 (* l_0_10_91 l_0_10_91)))
 (let ((?x37809 (* l_0_10_66 l_0_10_66)))
 (let ((?x37807 (* l_0_10_65 l_0_10_65)))
 (let ((?x11503 (* l_0_10_64 l_0_10_64)))
 (let ((?x11501 (* l_0_10_63 l_0_10_63)))
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36431 (* ?x36377 l_0_10_35)))
 (let ((?x11499 (- (* (* 2.0 l_0_10_1) l_0_10_7) ?x36431)))
 (let ((?x37816 (- (- (- (+ (+ (+ (+ ?x11499 ?x11501) ?x11503) ?x37807) ?x37809) ?x37811) ?x37813) ?x37815)))
 (= (- ?x37816 ?x37817) 0.0))))))))))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36437 (* ?x36377 l_0_10_39)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x36447 (* ?x36445 l_0_10_11)))
 (let ((?x11547 (- ?x36447 ?x36437)))
 (let ((?x37828 (+ (+ ?x11547 (* (* 2.0 l_0_10_63) l_0_10_67)) (* (* 2.0 l_0_10_64) l_0_10_68))))
 (let ((?x37834 (+ (+ ?x37828 (* (* 2.0 l_0_10_65) l_0_10_69)) (* (* 2.0 l_0_10_66) l_0_10_70))))
 (let ((?x37840 (- (- ?x37834 (* (* 2.0 l_0_10_91) l_0_10_95)) (* (* 2.0 l_0_10_92) l_0_10_96))))
 (let ((?x37846 (- (- ?x37840 (* (* 2.0 l_0_10_93) l_0_10_97)) (* (* 2.0 l_0_10_94) l_0_10_98))))
 (= ?x37846 0.0)))))))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36455 (* ?x36377 l_0_10_44)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x36448 (* ?x36445 l_0_10_16)))
 (let ((?x37884 (- (- ?x36448 (* (* 2.0 l_0_10_100) l_0_10_91)) (* (* 2.0 l_0_10_101) l_0_10_92))))
 (let ((?x37890 (- (- ?x37884 (* (* 2.0 l_0_10_102) l_0_10_93)) (* (* 2.0 l_0_10_103) l_0_10_94))))
 (let ((?x37895 (+ (+ (- ?x37890 ?x36455) (* (* 2.0 l_0_10_63) l_0_10_72)) (* (* 2.0 l_0_10_64) l_0_10_73))))
 (let ((?x37899 (+ (+ ?x37895 (* (* 2.0 l_0_10_65) l_0_10_74)) (* (* 2.0 l_0_10_66) l_0_10_75))))
 (= ?x37899 0.0))))))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36476 (* ?x36377 l_0_10_50)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x37910 (* ?x36445 l_0_10_22)))
 (let ((?x37920 (- (- ?x37910 (* (* 2.0 l_0_10_106) l_0_10_91)) (* (* 2.0 l_0_10_107) l_0_10_92))))
 (let ((?x37926 (- (- ?x37920 (* (* 2.0 l_0_10_108) l_0_10_93)) (* (* 2.0 l_0_10_109) l_0_10_94))))
 (let ((?x37931 (+ (+ (- ?x37926 ?x36476) (* (* 2.0 l_0_10_63) l_0_10_78)) (* (* 2.0 l_0_10_64) l_0_10_79))))
 (let ((?x37935 (+ (+ ?x37931 (* (* 2.0 l_0_10_65) l_0_10_80)) (* (* 2.0 l_0_10_66) l_0_10_81))))
 (= ?x37935 0.0))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36550 (* ?x36402 l_0_10_33)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36548 (* ?x36399 l_0_10_32)))
 (let ((?x36545 (* 2.0 l_0_10_3)))
 (let ((?x36546 (* ?x36545 l_0_10_5)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36525 (* ?x36524 l_0_10_4)))
 (let ((?x11705 (+ (* (* 2.0 l_0_10_144) l_0_10_147) (* (* 2.0 l_0_10_145) l_0_10_148))))
 (let ((?x37959 (- (+ ?x11705 (* (* 2.0 l_0_10_146) l_0_10_149)) (* (* 2.0 l_0_10_172) l_0_10_175))))
 (let ((?x37963 (- (- ?x37959 (* (* 2.0 l_0_10_173) l_0_10_176)) (* (* 2.0 l_0_10_174) l_0_10_177))))
 (= (- (- (+ (+ ?x37963 ?x36525) ?x36546) ?x36548) ?x36550) 0.0)))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36593 (* ?x36402 l_0_10_36)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36591 (* ?x36399 l_0_10_35)))
 (let ((?x36545 (* 2.0 l_0_10_3)))
 (let ((?x36589 (* ?x36545 l_0_10_8)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36571 (* ?x36524 l_0_10_7)))
 (let ((?x37993 (* l_0_10_178 l_0_10_178)))
 (let ((?x37991 (* l_0_10_177 l_0_10_177)))
 (let ((?x37989 (* l_0_10_176 l_0_10_176)))
 (let ((?x37987 (* l_0_10_175 l_0_10_175)))
 (let ((?x37985 (* l_0_10_150 l_0_10_150)))
 (let ((?x11752 (* l_0_10_149 l_0_10_149)))
 (let ((?x11753 (+ (+ (* l_0_10_147 l_0_10_147) (* l_0_10_148 l_0_10_148)) ?x11752)))
 (let ((?x37996 (+ (+ (- (- (- (- (+ ?x11753 ?x37985) ?x37987) ?x37989) ?x37991) ?x37993) ?x36571) ?x36589)))
 (= (- (- ?x37996 ?x36591) ?x36593) 0.0))))))))))))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37177 (* ?x37064 l_0_10_53)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37175 (* ?x37061 l_0_10_52)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37173 (* ?x37058 l_0_10_51)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37171 (* ?x37055 l_0_10_50)))
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36727 (* ?x36402 l_0_10_45)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36724 (* ?x36399 l_0_10_44)))
 (let ((?x36976 (* 2.0 l_0_10_24)))
 (let ((?x37167 (* ?x36976 l_0_10_9)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x37165 (* ?x36807 l_0_10_8)))
 (let ((?x36971 (* 2.0 l_0_10_22)))
 (let ((?x37163 (* ?x36971 l_0_10_7)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x36691 (* ?x36690 l_0_10_3)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x36688 (* ?x36687 l_0_10_2)))
 (let ((?x37083 (* 2.0 l_0_10_10)))
 (let ((?x37768 (* ?x37083 l_0_10_25)))
 (let ((?x38008 (+ (+ ?x37768 (* (* 2.0 l_0_10_147) l_0_10_156)) (* (* 2.0 l_0_10_148) l_0_10_157))))
 (let ((?x38012 (+ (+ ?x38008 (* (* 2.0 l_0_10_149) l_0_10_158)) (* (* 2.0 l_0_10_150) l_0_10_159))))
 (let ((?x38018 (- (- (+ (+ ?x38012 ?x36688) ?x36691) (* (* 2.0 l_0_10_175) l_0_10_184)) (* (* 2.0 l_0_10_176) l_0_10_185))))
 (let ((?x38022 (- (- ?x38018 (* (* 2.0 l_0_10_177) l_0_10_186)) (* (* 2.0 l_0_10_178) l_0_10_187))))
 (let ((?x38029 (- (- (- (- (+ (+ (+ ?x38022 ?x37163) ?x37165) ?x37167) ?x36724) ?x36727) ?x37171) ?x37173)))
 (= (- (- ?x38029 ?x37175) ?x37177) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36822 (* ?x36402 l_0_10_51)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36820 (* ?x36399 l_0_10_50)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x36808 (* ?x36807 l_0_10_3)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36795 (* ?x36524 l_0_10_22)))
 (let ((?x38049 (+ (* (* 2.0 l_0_10_147) l_0_10_162) (* (* 2.0 l_0_10_148) l_0_10_163))))
 (let ((?x38053 (+ (+ ?x38049 (* (* 2.0 l_0_10_149) l_0_10_164)) (* (* 2.0 l_0_10_150) l_0_10_165))))
 (let ((?x38057 (- (- ?x38053 (* (* 2.0 l_0_10_175) l_0_10_190)) (* (* 2.0 l_0_10_176) l_0_10_191))))
 (let ((?x38061 (- (- ?x38057 (* (* 2.0 l_0_10_177) l_0_10_192)) (* (* 2.0 l_0_10_178) l_0_10_193))))
 (= (- (- (+ (+ ?x38061 ?x36795) ?x36808) ?x36820) ?x36822) 0.0))))))))))))))
(assert
 (let ((?x36870 (* l_0_10_6 l_0_10_6)))
 (let ((?x36868 (* l_0_10_5 l_0_10_5)))
 (let ((?x36866 (* l_0_10_4 l_0_10_4)))
 (let ((?x36864 (* l_0_10_34 l_0_10_34)))
 (let ((?x38095 (- (- (* (- l_0_10_32) l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x36864)))
 (= (+ (+ (+ ?x38095 ?x36866) ?x36868) ?x36870) 0.0)))))))
(assert
 (let ((?x36896 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x36893 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x36890 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36887 (* ?x36886 l_0_10_37)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36884 (* ?x36883 l_0_10_36)))
 (let ((?x38103 (+ (+ (- (- (* (* (- 2.0) l_0_10_32) l_0_10_35) ?x36884) ?x36887) ?x36890) ?x36893)))
 (= (+ ?x38103 ?x36896) 0.0))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36925 (* ?x36886 l_0_10_41)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36923 (* ?x36883 l_0_10_40)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36921 (* ?x36881 l_0_10_39)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x36919 (* ?x36918 l_0_10_6)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x36916 (* ?x36394 l_0_10_5)))
 (let ((?x10142 (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x36916) ?x36919)))
 (= (- (- (- ?x10142 ?x36921) ?x36923) ?x36925) 0.0)))))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36948 (* ?x36886 l_0_10_46)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36945 (* ?x36883 l_0_10_45)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36942 (* ?x36881 l_0_10_44)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x36939 (* ?x36938 l_0_10_6)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x36936 (* ?x36690 l_0_10_5)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x10139 (* ?x36687 l_0_10_4)))
 (= (- (- (- (+ (+ ?x10139 ?x36936) ?x36939) ?x36942) ?x36945) ?x36948) 0.0))))))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36983 (* ?x36886 l_0_10_52)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36981 (* ?x36883 l_0_10_51)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36979 (* ?x36881 l_0_10_50)))
 (let ((?x36976 (* 2.0 l_0_10_24)))
 (let ((?x36977 (* ?x36976 l_0_10_6)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x36974 (* ?x36807 l_0_10_5)))
 (let ((?x36971 (* 2.0 l_0_10_22)))
 (let ((?x36972 (* ?x36971 l_0_10_4)))
 (let ((?x38108 (- (- (- (+ (+ ?x36972 ?x36974) ?x36977) ?x36979) ?x36981) ?x36983)))
 (= ?x38108 0.0)))))))))))))))
(assert
 (let ((?x37035 (* l_0_10_9 l_0_10_9)))
 (let ((?x37033 (* l_0_10_8 l_0_10_8)))
 (let ((?x37031 (* l_0_10_7 l_0_10_7)))
 (let ((?x37029 (* l_0_10_38 l_0_10_38)))
 (let ((?x37027 (* l_0_10_37 l_0_10_37)))
 (let ((?x37025 (* l_0_10_36 l_0_10_36)))
 (let ((?x12175 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x37025) ?x37027)))
 (= (+ (+ (+ (- ?x12175 ?x37029) ?x37031) ?x37033) ?x37035) 0.0)))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37065 (* ?x37064 l_0_10_42)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37062 (* ?x37061 l_0_10_41)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37059 (* ?x37058 l_0_10_40)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37056 (* ?x37055 l_0_10_39)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37053 (* ?x36918 l_0_10_9)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37051 (* ?x36394 l_0_10_8)))
 (let ((?x9035 (* 2.0 l_0_10_11)))
 (let ((?x37049 (* ?x9035 l_0_10_7)))
 (let ((?x37083 (* 2.0 l_0_10_10)))
 (let ((?x37085 (* ?x37083 l_0_10_14)))
 (let ((?x38114 (- (- (- (- (+ (+ (+ ?x37085 ?x37049) ?x37051) ?x37053) ?x37056) ?x37059) ?x37062) ?x37065)))
 (= ?x38114 0.0)))))))))))))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37116 (* ?x37064 l_0_10_47)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37113 (* ?x37061 l_0_10_46)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37110 (* ?x37058 l_0_10_45)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37107 (* ?x37055 l_0_10_44)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x37104 (* ?x36938 l_0_10_9)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x37102 (* ?x36690 l_0_10_8)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x37100 (* ?x36687 l_0_10_7)))
 (let ((?x37083 (* 2.0 l_0_10_10)))
 (let ((?x37087 (* ?x37083 l_0_10_19)))
 (let ((?x38130 (- (- (- (- (+ (+ (+ ?x37087 ?x37100) ?x37102) ?x37104) ?x37107) ?x37110) ?x37113) ?x37116)))
 (= ?x38130 0.0)))))))))))))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37177 (* ?x37064 l_0_10_53)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37175 (* ?x37061 l_0_10_52)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37173 (* ?x37058 l_0_10_51)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37171 (* ?x37055 l_0_10_50)))
 (let ((?x36976 (* 2.0 l_0_10_24)))
 (let ((?x37167 (* ?x36976 l_0_10_9)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x37165 (* ?x36807 l_0_10_8)))
 (let ((?x36971 (* 2.0 l_0_10_22)))
 (let ((?x37163 (* ?x36971 l_0_10_7)))
 (let ((?x37083 (* 2.0 l_0_10_10)))
 (let ((?x37768 (* ?x37083 l_0_10_25)))
 (let ((?x12261 (- (- (- (- (+ (+ (+ ?x37768 ?x37163) ?x37165) ?x37167) ?x37171) ?x37173) ?x37175) ?x37177)))
 (= ?x12261 0.0)))))))))))))))))))
(assert
 (let ((?x37235 (* l_0_10_43 l_0_10_43)))
 (let ((?x37233 (* l_0_10_42 l_0_10_42)))
 (let ((?x37231 (* l_0_10_41 l_0_10_41)))
 (let ((?x37229 (* l_0_10_40 l_0_10_40)))
 (let ((?x37227 (* l_0_10_39 l_0_10_39)))
 (let ((?x37225 (* l_0_10_15 l_0_10_15)))
 (let ((?x37223 (* l_0_10_14 l_0_10_14)))
 (let ((?x37210 (* l_0_10_13 l_0_10_13)))
 (let ((?x38141 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x37210) ?x37223)))
 (= (- (- (- (- (- (+ ?x38141 ?x37225) ?x37227) ?x37229) ?x37231) ?x37233) ?x37235) 0.0)))))))))))
(assert
 (let ((?x37286 (* 2.0 l_0_10_43)))
 (let ((?x37287 (* ?x37286 l_0_10_48)))
 (let ((?x37282 (* 2.0 l_0_10_42)))
 (let ((?x37283 (* ?x37282 l_0_10_47)))
 (let ((?x37278 (* 2.0 l_0_10_41)))
 (let ((?x37279 (* ?x37278 l_0_10_46)))
 (let ((?x37274 (* 2.0 l_0_10_40)))
 (let ((?x37275 (* ?x37274 l_0_10_45)))
 (let ((?x37270 (* 2.0 l_0_10_39)))
 (let ((?x37271 (* ?x37270 l_0_10_44)))
 (let ((?x37266 (* 2.0 l_0_10_15)))
 (let ((?x37267 (* ?x37266 l_0_10_20)))
 (let ((?x37262 (* 2.0 l_0_10_14)))
 (let ((?x37263 (* ?x37262 l_0_10_19)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37259 (* ?x36918 l_0_10_18)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37256 (* ?x36394 l_0_10_17)))
 (let ((?x37384 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_16) ?x37256) ?x37259) ?x37263) ?x37267)))
 (= (- (- (- (- (- ?x37384 ?x37271) ?x37275) ?x37279) ?x37283) ?x37287) 0.0)))))))))))))))))))))
(assert
 (let ((?x37286 (* 2.0 l_0_10_43)))
 (let ((?x37364 (* ?x37286 l_0_10_54)))
 (let ((?x37282 (* 2.0 l_0_10_42)))
 (let ((?x37362 (* ?x37282 l_0_10_53)))
 (let ((?x37278 (* 2.0 l_0_10_41)))
 (let ((?x37360 (* ?x37278 l_0_10_52)))
 (let ((?x37274 (* 2.0 l_0_10_40)))
 (let ((?x37358 (* ?x37274 l_0_10_51)))
 (let ((?x37270 (* 2.0 l_0_10_39)))
 (let ((?x37356 (* ?x37270 l_0_10_50)))
 (let ((?x37266 (* 2.0 l_0_10_15)))
 (let ((?x37334 (* ?x37266 l_0_10_26)))
 (let ((?x37262 (* 2.0 l_0_10_14)))
 (let ((?x37332 (* ?x37262 l_0_10_25)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37330 (* ?x36918 l_0_10_24)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37328 (* ?x36394 l_0_10_23)))
 (let ((?x37438 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_22) ?x37328) ?x37330) ?x37332) ?x37334)))
 (let ((?x38180 (- (- (- (- (- ?x37438 ?x37356) ?x37358) ?x37360) ?x37362) ?x37364)))
 (= ?x38180 0.0))))))))))))))))))))))
(assert
 (let ((?x37426 (* l_0_10_49 l_0_10_49)))
 (let ((?x37424 (* l_0_10_48 l_0_10_48)))
 (let ((?x37422 (* l_0_10_47 l_0_10_47)))
 (let ((?x37420 (* l_0_10_46 l_0_10_46)))
 (let ((?x37418 (* l_0_10_45 l_0_10_45)))
 (let ((?x37416 (* l_0_10_44 l_0_10_44)))
 (let ((?x37409 (* l_0_10_21 l_0_10_21)))
 (let ((?x37407 (* l_0_10_20 l_0_10_20)))
 (let ((?x37405 (* l_0_10_19 l_0_10_19)))
 (let ((?x37403 (* l_0_10_18 l_0_10_18)))
 (let ((?x38196 (+ (+ (+ (* l_0_10_16 l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x37403) ?x37405)))
 (let ((?x38203 (- (- (- (- (- (+ (+ ?x38196 ?x37407) ?x37409) ?x37416) ?x37418) ?x37420) ?x37422) ?x37424)))
 (= (- ?x38203 ?x37426) 0.0))))))))))))))
(assert
 (let ((?x37505 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x37502 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x37499 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x37496 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x37493 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x37490 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x37482 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x37479 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x37476 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x37461 (* ?x36938 l_0_10_24)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x37456 (* ?x36690 l_0_10_23)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x37454 (* ?x36687 l_0_10_22)))
 (let ((?x38211 (- (- (+ (+ (+ (+ (+ ?x37454 ?x37456) ?x37461) ?x37476) ?x37479) ?x37482) ?x37490) ?x37493)))
 (= (- (- (- (- ?x38211 ?x37496) ?x37499) ?x37502) ?x37505) 0.0))))))))))))))))))
(assert
 (let ((?x37648 (* l_0_10_56 l_0_10_56)))
 (let ((?x37646 (* l_0_10_55 l_0_10_55)))
 (let ((?x37644 (* l_0_10_54 l_0_10_54)))
 (let ((?x37642 (* l_0_10_53 l_0_10_53)))
 (let ((?x37640 (* l_0_10_52 l_0_10_52)))
 (let ((?x37638 (* l_0_10_51 l_0_10_51)))
 (let ((?x37636 (* l_0_10_50 l_0_10_50)))
 (let ((?x37634 (* l_0_10_28 l_0_10_28)))
 (let ((?x37632 (* l_0_10_27 l_0_10_27)))
 (let ((?x37630 (* l_0_10_26 l_0_10_26)))
 (let ((?x37628 (* l_0_10_25 l_0_10_25)))
 (let ((?x37626 (* l_0_10_24 l_0_10_24)))
 (let ((?x12499 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x37626) ?x37628)))
 (let ((?x12426 (- (- (- (- (+ (+ (+ ?x12499 ?x37630) ?x37632) ?x37634) ?x37636) ?x37638) ?x37640) ?x37642)))
 (= (- (- (- ?x12426 ?x37644) ?x37646) ?x37648) 0.0))))))))))))))))
(assert
 (let ((?x36360 (* l_0_10_29 l_0_10_29)))
 (let ((?x36364 (* l_0_10_1 l_0_10_1)))
 (let ((?x11286 (- ?x36364 ?x36360)))
 (= ?x11286 0.0)))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36378 (* ?x36377 l_0_10_30)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x37743 (* ?x36445 l_0_10_2)))
 (= (- ?x37743 ?x36378) 0.0))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36397 (* ?x36377 l_0_10_32)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x37767 (* ?x36445 l_0_10_4)))
 (= (- ?x37767 ?x36397) 0.0))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36431 (* ?x36377 l_0_10_35)))
 (let ((?x11499 (- (* (* 2.0 l_0_10_1) l_0_10_7) ?x36431)))
 (= ?x11499 0.0)))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36437 (* ?x36377 l_0_10_39)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x36447 (* ?x36445 l_0_10_11)))
 (let ((?x11547 (- ?x36447 ?x36437)))
 (= ?x11547 0.0)))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36455 (* ?x36377 l_0_10_44)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x36448 (* ?x36445 l_0_10_16)))
 (= (- ?x36448 ?x36455) 0.0))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36476 (* ?x36377 l_0_10_50)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x37910 (* ?x36445 l_0_10_22)))
 (let ((?x38218 (- (+ (- ?x37910 ?x36476) (* (* 2.0 l_0_10_57) l_0_10_60)) (* (* 2.0 l_0_10_85) l_0_10_88))))
 (= ?x38218 0.0)))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36550 (* ?x36402 l_0_10_33)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36548 (* ?x36399 l_0_10_32)))
 (let ((?x36545 (* 2.0 l_0_10_3)))
 (let ((?x36546 (* ?x36545 l_0_10_5)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36525 (* ?x36524 l_0_10_4)))
 (= (- (- (+ ?x36525 ?x36546) ?x36548) ?x36550) 0.0))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36593 (* ?x36402 l_0_10_36)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36591 (* ?x36399 l_0_10_35)))
 (let ((?x36545 (* 2.0 l_0_10_3)))
 (let ((?x36589 (* ?x36545 l_0_10_8)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36571 (* ?x36524 l_0_10_7)))
 (= (- (- (+ ?x36571 ?x36589) ?x36591) ?x36593) 0.0))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36727 (* ?x36402 l_0_10_45)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36724 (* ?x36399 l_0_10_44)))
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36397 (* ?x36377 l_0_10_32)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x36691 (* ?x36690 l_0_10_3)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x36688 (* ?x36687 l_0_10_2)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x37767 (* ?x36445 l_0_10_4)))
 (= (- (- (- (+ (+ ?x37767 ?x36688) ?x36691) ?x36397) ?x36724) ?x36727) 0.0))))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36822 (* ?x36402 l_0_10_51)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36820 (* ?x36399 l_0_10_50)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x36808 (* ?x36807 l_0_10_3)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36795 (* ?x36524 l_0_10_22)))
 (let ((?x38261 (- (* (* 2.0 l_0_10_141) l_0_10_144) (* (* 2.0 l_0_10_169) l_0_10_172))))
 (let ((?x38267 (+ (- (- (+ (+ ?x38261 ?x36795) ?x36808) ?x36820) ?x36822) (* (* 2.0 l_0_10_58) l_0_10_60))))
 (let ((?x38271 (- (+ ?x38267 (* (* 2.0 l_0_10_59) l_0_10_61)) (* (* 2.0 l_0_10_86) l_0_10_88))))
 (= (- ?x38271 (* (* 2.0 l_0_10_87) l_0_10_89)) 0.0)))))))))))))
(assert
 (let ((?x36870 (* l_0_10_6 l_0_10_6)))
 (let ((?x36868 (* l_0_10_5 l_0_10_5)))
 (let ((?x36866 (* l_0_10_4 l_0_10_4)))
 (let ((?x36864 (* l_0_10_34 l_0_10_34)))
 (let ((?x38095 (- (- (* (- l_0_10_32) l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x36864)))
 (= (+ (+ (+ ?x38095 ?x36866) ?x36868) ?x36870) 0.0)))))))
(assert
 (let ((?x36896 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x36893 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x36890 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36887 (* ?x36886 l_0_10_37)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36884 (* ?x36883 l_0_10_36)))
 (let ((?x38103 (+ (+ (- (- (* (* (- 2.0) l_0_10_32) l_0_10_35) ?x36884) ?x36887) ?x36890) ?x36893)))
 (= (+ ?x38103 ?x36896) 0.0))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36925 (* ?x36886 l_0_10_41)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36923 (* ?x36883 l_0_10_40)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36921 (* ?x36881 l_0_10_39)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x36919 (* ?x36918 l_0_10_6)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x36916 (* ?x36394 l_0_10_5)))
 (let ((?x10142 (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x36916) ?x36919)))
 (= (- (- (- ?x10142 ?x36921) ?x36923) ?x36925) 0.0)))))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36948 (* ?x36886 l_0_10_46)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36945 (* ?x36883 l_0_10_45)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36942 (* ?x36881 l_0_10_44)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x36939 (* ?x36938 l_0_10_6)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x36936 (* ?x36690 l_0_10_5)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x10139 (* ?x36687 l_0_10_4)))
 (= (- (- (- (+ (+ ?x10139 ?x36936) ?x36939) ?x36942) ?x36945) ?x36948) 0.0))))))))))))))
(assert
 (let ((?x38316 (* l_0_10_90 l_0_10_90)))
 (let ((?x38314 (* l_0_10_89 l_0_10_89)))
 (let ((?x38312 (* l_0_10_88 l_0_10_88)))
 (let ((?x38310 (* l_0_10_62 l_0_10_62)))
 (let ((?x38308 (* l_0_10_61 l_0_10_61)))
 (let ((?x38306 (* l_0_10_60 l_0_10_60)))
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36983 (* ?x36886 l_0_10_52)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36981 (* ?x36883 l_0_10_51)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36979 (* ?x36881 l_0_10_50)))
 (let ((?x36976 (* 2.0 l_0_10_24)))
 (let ((?x36977 (* ?x36976 l_0_10_6)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x36974 (* ?x36807 l_0_10_5)))
 (let ((?x36971 (* 2.0 l_0_10_22)))
 (let ((?x36972 (* ?x36971 l_0_10_4)))
 (let ((?x38108 (- (- (- (+ (+ ?x36972 ?x36974) ?x36977) ?x36979) ?x36981) ?x36983)))
 (= (- (- (- (+ (+ (+ ?x38108 ?x38306) ?x38308) ?x38310) ?x38312) ?x38314) ?x38316) 0.0)))))))))))))))))))))
(assert
 (let ((?x37035 (* l_0_10_9 l_0_10_9)))
 (let ((?x37033 (* l_0_10_8 l_0_10_8)))
 (let ((?x37031 (* l_0_10_7 l_0_10_7)))
 (let ((?x37029 (* l_0_10_38 l_0_10_38)))
 (let ((?x37027 (* l_0_10_37 l_0_10_37)))
 (let ((?x37025 (* l_0_10_36 l_0_10_36)))
 (let ((?x12175 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x37025) ?x37027)))
 (= (+ (+ (+ (- ?x12175 ?x37029) ?x37031) ?x37033) ?x37035) 0.0)))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37065 (* ?x37064 l_0_10_42)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37062 (* ?x37061 l_0_10_41)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37059 (* ?x37058 l_0_10_40)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37056 (* ?x37055 l_0_10_39)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37053 (* ?x36918 l_0_10_9)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37051 (* ?x36394 l_0_10_8)))
 (let ((?x9035 (* 2.0 l_0_10_11)))
 (let ((?x37049 (* ?x9035 l_0_10_7)))
 (let ((?x37083 (* 2.0 l_0_10_10)))
 (let ((?x37085 (* ?x37083 l_0_10_14)))
 (let ((?x38114 (- (- (- (- (+ (+ (+ ?x37085 ?x37049) ?x37051) ?x37053) ?x37056) ?x37059) ?x37062) ?x37065)))
 (= ?x38114 0.0)))))))))))))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37116 (* ?x37064 l_0_10_47)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37113 (* ?x37061 l_0_10_46)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37110 (* ?x37058 l_0_10_45)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37107 (* ?x37055 l_0_10_44)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x37104 (* ?x36938 l_0_10_9)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x37102 (* ?x36690 l_0_10_8)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x37100 (* ?x36687 l_0_10_7)))
 (let ((?x37083 (* 2.0 l_0_10_10)))
 (let ((?x37087 (* ?x37083 l_0_10_19)))
 (let ((?x38130 (- (- (- (- (+ (+ (+ ?x37087 ?x37100) ?x37102) ?x37104) ?x37107) ?x37110) ?x37113) ?x37116)))
 (= ?x38130 0.0)))))))))))))))))))
(assert
 (let ((?x37235 (* l_0_10_43 l_0_10_43)))
 (let ((?x37233 (* l_0_10_42 l_0_10_42)))
 (let ((?x37231 (* l_0_10_41 l_0_10_41)))
 (let ((?x37229 (* l_0_10_40 l_0_10_40)))
 (let ((?x37227 (* l_0_10_39 l_0_10_39)))
 (let ((?x37225 (* l_0_10_15 l_0_10_15)))
 (let ((?x37223 (* l_0_10_14 l_0_10_14)))
 (let ((?x37210 (* l_0_10_13 l_0_10_13)))
 (let ((?x38141 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x37210) ?x37223)))
 (= (- (- (- (- (- (+ ?x38141 ?x37225) ?x37227) ?x37229) ?x37231) ?x37233) ?x37235) 0.0)))))))))))
(assert
 (let ((?x37286 (* 2.0 l_0_10_43)))
 (let ((?x37287 (* ?x37286 l_0_10_48)))
 (let ((?x37282 (* 2.0 l_0_10_42)))
 (let ((?x37283 (* ?x37282 l_0_10_47)))
 (let ((?x37278 (* 2.0 l_0_10_41)))
 (let ((?x37279 (* ?x37278 l_0_10_46)))
 (let ((?x37274 (* 2.0 l_0_10_40)))
 (let ((?x37275 (* ?x37274 l_0_10_45)))
 (let ((?x37270 (* 2.0 l_0_10_39)))
 (let ((?x37271 (* ?x37270 l_0_10_44)))
 (let ((?x37266 (* 2.0 l_0_10_15)))
 (let ((?x37267 (* ?x37266 l_0_10_20)))
 (let ((?x37262 (* 2.0 l_0_10_14)))
 (let ((?x37263 (* ?x37262 l_0_10_19)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37259 (* ?x36918 l_0_10_18)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37256 (* ?x36394 l_0_10_17)))
 (let ((?x37384 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_16) ?x37256) ?x37259) ?x37263) ?x37267)))
 (= (- (- (- (- (- ?x37384 ?x37271) ?x37275) ?x37279) ?x37283) ?x37287) 0.0)))))))))))))))))))))
(assert
 (let ((?x37286 (* 2.0 l_0_10_43)))
 (let ((?x37364 (* ?x37286 l_0_10_54)))
 (let ((?x37282 (* 2.0 l_0_10_42)))
 (let ((?x37362 (* ?x37282 l_0_10_53)))
 (let ((?x37278 (* 2.0 l_0_10_41)))
 (let ((?x37360 (* ?x37278 l_0_10_52)))
 (let ((?x37274 (* 2.0 l_0_10_40)))
 (let ((?x37358 (* ?x37274 l_0_10_51)))
 (let ((?x37270 (* 2.0 l_0_10_39)))
 (let ((?x37356 (* ?x37270 l_0_10_50)))
 (let ((?x37266 (* 2.0 l_0_10_15)))
 (let ((?x37334 (* ?x37266 l_0_10_26)))
 (let ((?x37262 (* 2.0 l_0_10_14)))
 (let ((?x37332 (* ?x37262 l_0_10_25)))
 (let ((?x36918 (* 2.0 l_0_10_13)))
 (let ((?x37330 (* ?x36918 l_0_10_24)))
 (let ((?x36394 (* 2.0 l_0_10_12)))
 (let ((?x37328 (* ?x36394 l_0_10_23)))
 (let ((?x37438 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_22) ?x37328) ?x37330) ?x37332) ?x37334)))
 (let ((?x38180 (- (- (- (- (- ?x37438 ?x37356) ?x37358) ?x37360) ?x37362) ?x37364)))
 (let ((?x38333 (+ (+ ?x38180 (* (* 2.0 l_0_10_60) l_0_10_67)) (* (* 2.0 l_0_10_61) l_0_10_68))))
 (let ((?x38337 (- (+ ?x38333 (* (* 2.0 l_0_10_62) l_0_10_69)) (* (* 2.0 l_0_10_88) l_0_10_95))))
 (let ((?x38341 (- (- ?x38337 (* (* 2.0 l_0_10_89) l_0_10_96)) (* (* 2.0 l_0_10_90) l_0_10_97))))
 (= ?x38341 0.0)))))))))))))))))))))))))
(assert
 (let ((?x37426 (* l_0_10_49 l_0_10_49)))
 (let ((?x37424 (* l_0_10_48 l_0_10_48)))
 (let ((?x37422 (* l_0_10_47 l_0_10_47)))
 (let ((?x37420 (* l_0_10_46 l_0_10_46)))
 (let ((?x37418 (* l_0_10_45 l_0_10_45)))
 (let ((?x37416 (* l_0_10_44 l_0_10_44)))
 (let ((?x37409 (* l_0_10_21 l_0_10_21)))
 (let ((?x37407 (* l_0_10_20 l_0_10_20)))
 (let ((?x37405 (* l_0_10_19 l_0_10_19)))
 (let ((?x37403 (* l_0_10_18 l_0_10_18)))
 (let ((?x38196 (+ (+ (+ (* l_0_10_16 l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x37403) ?x37405)))
 (let ((?x38203 (- (- (- (- (- (+ (+ ?x38196 ?x37407) ?x37409) ?x37416) ?x37418) ?x37420) ?x37422) ?x37424)))
 (= (- ?x38203 ?x37426) 0.0))))))))))))))
(assert
 (let ((?x37505 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x37502 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x37499 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x37496 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x37493 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x37490 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x37482 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x37479 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x37476 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x37461 (* ?x36938 l_0_10_24)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x37456 (* ?x36690 l_0_10_23)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x37454 (* ?x36687 l_0_10_22)))
 (let ((?x38372 (- (* (* (- 2.0) l_0_10_100) l_0_10_88) (* (* 2.0 l_0_10_101) l_0_10_89))))
 (let ((?x38377 (+ (+ (+ (- ?x38372 (* (* 2.0 l_0_10_102) l_0_10_90)) ?x37454) ?x37456) ?x37461)))
 (let ((?x38384 (- (- (- (- (+ (+ (+ ?x38377 ?x37476) ?x37479) ?x37482) ?x37490) ?x37493) ?x37496) ?x37499)))
 (let ((?x38390 (+ (+ (- (- ?x38384 ?x37502) ?x37505) (* (* 2.0 l_0_10_60) l_0_10_72)) (* (* 2.0 l_0_10_61) l_0_10_73))))
 (= (+ ?x38390 (* (* 2.0 l_0_10_62) l_0_10_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x37648 (* l_0_10_56 l_0_10_56)))
 (let ((?x37646 (* l_0_10_55 l_0_10_55)))
 (let ((?x37644 (* l_0_10_54 l_0_10_54)))
 (let ((?x37642 (* l_0_10_53 l_0_10_53)))
 (let ((?x37640 (* l_0_10_52 l_0_10_52)))
 (let ((?x37638 (* l_0_10_51 l_0_10_51)))
 (let ((?x37636 (* l_0_10_50 l_0_10_50)))
 (let ((?x37634 (* l_0_10_28 l_0_10_28)))
 (let ((?x37632 (* l_0_10_27 l_0_10_27)))
 (let ((?x37630 (* l_0_10_26 l_0_10_26)))
 (let ((?x37628 (* l_0_10_25 l_0_10_25)))
 (let ((?x37626 (* l_0_10_24 l_0_10_24)))
 (let ((?x37624 (* l_0_10_23 l_0_10_23)))
 (let ((?x37622 (* l_0_10_22 l_0_10_22)))
 (let ((?x38432 (- (* (* (- 2.0) l_0_10_106) l_0_10_88) (* (* 2.0 l_0_10_107) l_0_10_89))))
 (let ((?x38437 (+ (+ (+ (- ?x38432 (* (* 2.0 l_0_10_108) l_0_10_90)) ?x37622) ?x37624) ?x37626)))
 (let ((?x38444 (- (- (- (+ (+ (+ (+ ?x38437 ?x37628) ?x37630) ?x37632) ?x37634) ?x37636) ?x37638) ?x37640)))
 (let ((?x38450 (+ (- (- (- (- ?x38444 ?x37642) ?x37644) ?x37646) ?x37648) (* (* 2.0 l_0_10_60) l_0_10_78))))
 (let ((?x38454 (+ (+ ?x38450 (* (* 2.0 l_0_10_61) l_0_10_79)) (* (* 2.0 l_0_10_62) l_0_10_80))))
 (= ?x38454 0.0)))))))))))))))))))))
(assert
 (let ((?x36360 (* l_0_10_29 l_0_10_29)))
 (let ((?x36364 (* l_0_10_1 l_0_10_1)))
 (let ((?x11286 (- ?x36364 ?x36360)))
 (= ?x11286 0.0)))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36378 (* ?x36377 l_0_10_30)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x37743 (* ?x36445 l_0_10_2)))
 (let ((?x38496 (- (- ?x37743 (* (* 2.0 l_0_10_113) l_0_10_128)) (* (* 2.0 l_0_10_197) l_0_10_212))))
 (= (- (- ?x38496 (* (* 2.0 l_0_10_225) l_0_10_240)) ?x36378) 0.0)))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36431 (* ?x36377 l_0_10_35)))
 (let ((?x11499 (- (* (* 2.0 l_0_10_1) l_0_10_7) ?x36431)))
 (= ?x11499 0.0)))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36455 (* ?x36377 l_0_10_44)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x36448 (* ?x36445 l_0_10_16)))
 (= (- ?x36448 ?x36455) 0.0))))))
(assert
 (let ((?x36377 (* 2.0 l_0_10_29)))
 (let ((?x36476 (* ?x36377 l_0_10_50)))
 (let ((?x36445 (* 2.0 l_0_10_1)))
 (let ((?x37910 (* ?x36445 l_0_10_22)))
 (let ((?x38526 (- (- ?x37910 (* (* 2.0 l_0_10_100) l_0_10_86)) (* (* 2.0 l_0_10_101) l_0_10_87))))
 (let ((?x38530 (- (+ ?x38526 (* (* 2.0 l_0_10_141) l_0_10_156)) (* (* 2.0 l_0_10_169) l_0_10_184))))
 (let ((?x38535 (+ (+ (- ?x38530 ?x36476) (* (* 2.0 l_0_10_58) l_0_10_72)) (* (* 2.0 l_0_10_59) l_0_10_73))))
 (= ?x38535 0.0)))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36550 (* ?x36402 l_0_10_33)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36548 (* ?x36399 l_0_10_32)))
 (let ((?x36545 (* 2.0 l_0_10_3)))
 (let ((?x36546 (* ?x36545 l_0_10_5)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36525 (* ?x36524 l_0_10_4)))
 (let ((?x38564 (- (* (* (- 2.0) l_0_10_116) l_0_10_128) (* (* 2.0 l_0_10_117) l_0_10_129))))
 (let ((?x38574 (- (+ (- ?x38564 (* (* 2.0 l_0_10_118) l_0_10_130)) ?x36525) (* (* 2.0 l_0_10_200) l_0_10_212))))
 (let ((?x38578 (- (- ?x38574 (* (* 2.0 l_0_10_201) l_0_10_213)) (* (* 2.0 l_0_10_202) l_0_10_214))))
 (let ((?x38582 (- (- ?x38578 (* (* 2.0 l_0_10_228) l_0_10_240)) (* (* 2.0 l_0_10_229) l_0_10_241))))
 (let ((?x38587 (- (- (+ (- ?x38582 (* (* 2.0 l_0_10_230) l_0_10_242)) ?x36546) ?x36548) ?x36550)))
 (= ?x38587 0.0)))))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36593 (* ?x36402 l_0_10_36)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36591 (* ?x36399 l_0_10_35)))
 (let ((?x36545 (* 2.0 l_0_10_3)))
 (let ((?x36589 (* ?x36545 l_0_10_8)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36571 (* ?x36524 l_0_10_7)))
 (let ((?x38648 (- (* (* (- 2.0) l_0_10_119) l_0_10_128) (* (* 2.0 l_0_10_120) l_0_10_129))))
 (let ((?x38652 (- (- ?x38648 (* (* 2.0 l_0_10_121) l_0_10_130)) (* (* 2.0 l_0_10_122) l_0_10_131))))
 (let ((?x38657 (- (- (+ ?x38652 ?x36571) (* (* 2.0 l_0_10_203) l_0_10_212)) (* (* 2.0 l_0_10_204) l_0_10_213))))
 (let ((?x38661 (- (- ?x38657 (* (* 2.0 l_0_10_205) l_0_10_214)) (* (* 2.0 l_0_10_206) l_0_10_215))))
 (let ((?x38665 (- (- ?x38661 (* (* 2.0 l_0_10_231) l_0_10_240)) (* (* 2.0 l_0_10_232) l_0_10_241))))
 (let ((?x38669 (- (- ?x38665 (* (* 2.0 l_0_10_233) l_0_10_242)) (* (* 2.0 l_0_10_234) l_0_10_243))))
 (= (- (- (+ ?x38669 ?x36589) ?x36591) ?x36593) 0.0))))))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36727 (* ?x36402 l_0_10_45)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36724 (* ?x36399 l_0_10_44)))
 (let ((?x38773 (* l_0_10_245 l_0_10_245)))
 (let ((?x38771 (* l_0_10_244 l_0_10_244)))
 (let ((?x38769 (* l_0_10_243 l_0_10_243)))
 (let ((?x38767 (* l_0_10_242 l_0_10_242)))
 (let ((?x38765 (* l_0_10_241 l_0_10_241)))
 (let ((?x38763 (* l_0_10_240 l_0_10_240)))
 (let ((?x38761 (* l_0_10_217 l_0_10_217)))
 (let ((?x38759 (* l_0_10_216 l_0_10_216)))
 (let ((?x38757 (* l_0_10_215 l_0_10_215)))
 (let ((?x38755 (* l_0_10_214 l_0_10_214)))
 (let ((?x38753 (* l_0_10_213 l_0_10_213)))
 (let ((?x38751 (* l_0_10_212 l_0_10_212)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x36691 (* ?x36690 l_0_10_3)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x36688 (* ?x36687 l_0_10_2)))
 (let ((?x38736 (- (* (* (- 1.0) l_0_10_128) l_0_10_128) (* (* 1.0 l_0_10_129) l_0_10_129))))
 (let ((?x38742 (- (- ?x38736 (* (* 1.0 l_0_10_130) l_0_10_130)) (* (* 1.0 l_0_10_131) l_0_10_131))))
 (let ((?x38748 (- (- ?x38742 (* (* 1.0 l_0_10_132) l_0_10_132)) (* (* 1.0 l_0_10_133) l_0_10_133))))
 (let ((?x38760 (- (- (- (- (- (+ (+ ?x38748 ?x36688) ?x36691) ?x38751) ?x38753) ?x38755) ?x38757) ?x38759)))
 (let ((?x38774 (- (- (- (- (- (- (- ?x38760 ?x38761) ?x38763) ?x38765) ?x38767) ?x38769) ?x38771) ?x38773)))
 (= (- (- ?x38774 ?x36724) ?x36727) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x36402 (* 2.0 l_0_10_31)))
 (let ((?x36822 (* ?x36402 l_0_10_51)))
 (let ((?x36399 (* 2.0 l_0_10_30)))
 (let ((?x36820 (* ?x36399 l_0_10_50)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x36808 (* ?x36807 l_0_10_3)))
 (let ((?x36524 (* 2.0 l_0_10_2)))
 (let ((?x36795 (* ?x36524 l_0_10_22)))
 (let ((?x12849 (- (* (* (- 2.0) l_0_10_128) l_0_10_134) (* (* 2.0 l_0_10_129) l_0_10_135))))
 (let ((?x38810 (- (- ?x12849 (* (* 2.0 l_0_10_130) l_0_10_136)) (* (* 2.0 l_0_10_131) l_0_10_137))))
 (let ((?x38816 (- (- ?x38810 (* (* 2.0 l_0_10_132) l_0_10_138)) (* (* 2.0 l_0_10_133) l_0_10_139))))
 (let ((?x38820 (+ (+ ?x38816 (* (* 2.0 l_0_10_142) l_0_10_156)) (* (* 2.0 l_0_10_143) l_0_10_157))))
 (let ((?x38824 (- (- ?x38820 (* (* 2.0 l_0_10_170) l_0_10_184)) (* (* 2.0 l_0_10_171) l_0_10_185))))
 (let ((?x38831 (- (- (+ ?x38824 ?x36795) (* (* 2.0 l_0_10_212) l_0_10_218)) (* (* 2.0 l_0_10_213) l_0_10_219))))
 (let ((?x38837 (- (- ?x38831 (* (* 2.0 l_0_10_214) l_0_10_220)) (* (* 2.0 l_0_10_215) l_0_10_221))))
 (let ((?x38843 (- (- ?x38837 (* (* 2.0 l_0_10_216) l_0_10_222)) (* (* 2.0 l_0_10_217) l_0_10_223))))
 (let ((?x38850 (- (- (+ ?x38843 ?x36808) (* (* 2.0 l_0_10_240) l_0_10_246)) (* (* 2.0 l_0_10_241) l_0_10_247))))
 (let ((?x38856 (- (- ?x38850 (* (* 2.0 l_0_10_242) l_0_10_248)) (* (* 2.0 l_0_10_243) l_0_10_249))))
 (let ((?x38862 (- (- ?x38856 (* (* 2.0 l_0_10_244) l_0_10_250)) (* (* 2.0 l_0_10_245) l_0_10_251))))
 (= (- (- ?x38862 ?x36820) ?x36822) 0.0)))))))))))))))))))))
(assert
 (let ((?x36870 (* l_0_10_6 l_0_10_6)))
 (let ((?x36868 (* l_0_10_5 l_0_10_5)))
 (let ((?x36866 (* l_0_10_4 l_0_10_4)))
 (let ((?x36864 (* l_0_10_34 l_0_10_34)))
 (let ((?x38095 (- (- (* (- l_0_10_32) l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x36864)))
 (= (+ (+ (+ ?x38095 ?x36866) ?x36868) ?x36870) 0.0)))))))
(assert
 (let ((?x36896 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x36893 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x36890 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36887 (* ?x36886 l_0_10_37)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36884 (* ?x36883 l_0_10_36)))
 (let ((?x38103 (+ (+ (- (- (* (* (- 2.0) l_0_10_32) l_0_10_35) ?x36884) ?x36887) ?x36890) ?x36893)))
 (= (+ ?x38103 ?x36896) 0.0))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36948 (* ?x36886 l_0_10_46)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36945 (* ?x36883 l_0_10_45)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36942 (* ?x36881 l_0_10_44)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x36939 (* ?x36938 l_0_10_6)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x36936 (* ?x36690 l_0_10_5)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x10139 (* ?x36687 l_0_10_4)))
 (= (- (- (- (+ (+ ?x10139 ?x36936) ?x36939) ?x36942) ?x36945) ?x36948) 0.0))))))))))))))
(assert
 (let ((?x36886 (* 2.0 l_0_10_34)))
 (let ((?x36983 (* ?x36886 l_0_10_52)))
 (let ((?x36883 (* 2.0 l_0_10_33)))
 (let ((?x36981 (* ?x36883 l_0_10_51)))
 (let ((?x36881 (* 2.0 l_0_10_32)))
 (let ((?x36979 (* ?x36881 l_0_10_50)))
 (let ((?x36976 (* 2.0 l_0_10_24)))
 (let ((?x36977 (* ?x36976 l_0_10_6)))
 (let ((?x36807 (* 2.0 l_0_10_23)))
 (let ((?x36974 (* ?x36807 l_0_10_5)))
 (let ((?x36971 (* 2.0 l_0_10_22)))
 (let ((?x36972 (* ?x36971 l_0_10_4)))
 (let ((?x13096 (+ (* (* 2.0 l_0_10_144) l_0_10_156) (* (* 2.0 l_0_10_145) l_0_10_157))))
 (let ((?x38907 (- (+ ?x13096 (* (* 2.0 l_0_10_146) l_0_10_158)) (* (* 2.0 l_0_10_172) l_0_10_184))))
 (let ((?x38911 (- (- ?x38907 (* (* 2.0 l_0_10_173) l_0_10_185)) (* (* 2.0 l_0_10_174) l_0_10_186))))
 (= (- (- (- (+ (+ (+ ?x38911 ?x36972) ?x36974) ?x36977) ?x36979) ?x36981) ?x36983) 0.0)))))))))))))))))
(assert
 (let ((?x37035 (* l_0_10_9 l_0_10_9)))
 (let ((?x37033 (* l_0_10_8 l_0_10_8)))
 (let ((?x37031 (* l_0_10_7 l_0_10_7)))
 (let ((?x37029 (* l_0_10_38 l_0_10_38)))
 (let ((?x37027 (* l_0_10_37 l_0_10_37)))
 (let ((?x37025 (* l_0_10_36 l_0_10_36)))
 (let ((?x12175 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x37025) ?x37027)))
 (= (+ (+ (+ (- ?x12175 ?x37029) ?x37031) ?x37033) ?x37035) 0.0)))))))))
(assert
 (let ((?x37064 (* 2.0 l_0_10_38)))
 (let ((?x37116 (* ?x37064 l_0_10_47)))
 (let ((?x37061 (* 2.0 l_0_10_37)))
 (let ((?x37113 (* ?x37061 l_0_10_46)))
 (let ((?x37058 (* 2.0 l_0_10_36)))
 (let ((?x37110 (* ?x37058 l_0_10_45)))
 (let ((?x37055 (* 2.0 l_0_10_35)))
 (let ((?x37107 (* ?x37055 l_0_10_44)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x37104 (* ?x36938 l_0_10_9)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x37102 (* ?x36690 l_0_10_8)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x37100 (* ?x36687 l_0_10_7)))
 (let ((?x37083 (* 2.0 l_0_10_10)))
 (let ((?x37087 (* ?x37083 l_0_10_19)))
 (let ((?x38130 (- (- (- (- (+ (+ (+ ?x37087 ?x37100) ?x37102) ?x37104) ?x37107) ?x37110) ?x37113) ?x37116)))
 (= ?x38130 0.0)))))))))))))))))))
(assert
 (let ((?x37426 (* l_0_10_49 l_0_10_49)))
 (let ((?x37424 (* l_0_10_48 l_0_10_48)))
 (let ((?x37422 (* l_0_10_47 l_0_10_47)))
 (let ((?x37420 (* l_0_10_46 l_0_10_46)))
 (let ((?x37418 (* l_0_10_45 l_0_10_45)))
 (let ((?x37416 (* l_0_10_44 l_0_10_44)))
 (let ((?x37409 (* l_0_10_21 l_0_10_21)))
 (let ((?x37407 (* l_0_10_20 l_0_10_20)))
 (let ((?x37405 (* l_0_10_19 l_0_10_19)))
 (let ((?x37403 (* l_0_10_18 l_0_10_18)))
 (let ((?x38196 (+ (+ (+ (* l_0_10_16 l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x37403) ?x37405)))
 (let ((?x38203 (- (- (- (- (- (+ (+ ?x38196 ?x37407) ?x37409) ?x37416) ?x37418) ?x37420) ?x37422) ?x37424)))
 (= (- ?x38203 ?x37426) 0.0))))))))))))))
(assert
 (let ((?x37505 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x37502 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x37499 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x37496 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x37493 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x37490 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x37482 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x37479 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x37476 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x38968 (* l_0_10_189 l_0_10_189)))
 (let ((?x38966 (* l_0_10_188 l_0_10_188)))
 (let ((?x38964 (* l_0_10_187 l_0_10_187)))
 (let ((?x38962 (* l_0_10_186 l_0_10_186)))
 (let ((?x38960 (* l_0_10_185 l_0_10_185)))
 (let ((?x38958 (* l_0_10_184 l_0_10_184)))
 (let ((?x36938 (* 2.0 l_0_10_18)))
 (let ((?x37461 (* ?x36938 l_0_10_24)))
 (let ((?x36690 (* 2.0 l_0_10_17)))
 (let ((?x37456 (* ?x36690 l_0_10_23)))
 (let ((?x38954 (* l_0_10_161 l_0_10_161)))
 (let ((?x38952 (* l_0_10_160 l_0_10_160)))
 (let ((?x36687 (* 2.0 l_0_10_16)))
 (let ((?x37454 (* ?x36687 l_0_10_22)))
 (let ((?x38949 (* l_0_10_159 l_0_10_159)))
 (let ((?x38947 (* l_0_10_158 l_0_10_158)))
 (let ((?x38948 (+ (+ (* l_0_10_156 l_0_10_156) (* l_0_10_157 l_0_10_157)) ?x38947)))
 (let ((?x38959 (- (+ (+ (+ (+ (+ (+ ?x38948 ?x38949) ?x37454) ?x38952) ?x38954) ?x37456) ?x37461) ?x38958)))
 (let ((?x38971 (+ (+ (- (- (- (- (- ?x38959 ?x38960) ?x38962) ?x38964) ?x38966) ?x38968) ?x37476) ?x37479)))
 (let ((?x38978 (- (- (- (- (- (- (+ ?x38971 ?x37482) ?x37490) ?x37493) ?x37496) ?x37499) ?x37502) ?x37505)))
 (= ?x38978 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x37648 (* l_0_10_56 l_0_10_56)))
 (let ((?x37646 (* l_0_10_55 l_0_10_55)))
 (let ((?x37644 (* l_0_10_54 l_0_10_54)))
 (let ((?x37642 (* l_0_10_53 l_0_10_53)))
 (let ((?x37640 (* l_0_10_52 l_0_10_52)))
 (let ((?x37638 (* l_0_10_51 l_0_10_51)))
 (let ((?x37636 (* l_0_10_50 l_0_10_50)))
 (let ((?x37634 (* l_0_10_28 l_0_10_28)))
 (let ((?x37632 (* l_0_10_27 l_0_10_27)))
 (let ((?x37630 (* l_0_10_26 l_0_10_26)))
 (let ((?x37628 (* l_0_10_25 l_0_10_25)))
 (let ((?x37626 (* l_0_10_24 l_0_10_24)))
 (let ((?x37624 (* l_0_10_23 l_0_10_23)))
 (let ((?x37622 (* l_0_10_22 l_0_10_22)))
 (let ((?x38997 (+ (* (* 2.0 l_0_10_156) l_0_10_162) (* (* 2.0 l_0_10_157) l_0_10_163))))
 (let ((?x39003 (+ (+ ?x38997 (* (* 2.0 l_0_10_158) l_0_10_164)) (* (* 2.0 l_0_10_159) l_0_10_165))))
 (let ((?x39009 (+ (+ ?x39003 (* (* 2.0 l_0_10_160) l_0_10_166)) (* (* 2.0 l_0_10_161) l_0_10_167))))
 (let ((?x39015 (- (- ?x39009 (* (* 2.0 l_0_10_184) l_0_10_190)) (* (* 2.0 l_0_10_185) l_0_10_191))))
 (let ((?x39021 (- (- ?x39015 (* (* 2.0 l_0_10_186) l_0_10_192)) (* (* 2.0 l_0_10_187) l_0_10_193))))
 (let ((?x39027 (- (- ?x39021 (* (* 2.0 l_0_10_188) l_0_10_194)) (* (* 2.0 l_0_10_189) l_0_10_195))))
 (let ((?x39034 (+ (+ (+ (+ (+ (+ (+ ?x39027 ?x37622) ?x37624) ?x37626) ?x37628) ?x37630) ?x37632) ?x37634)))
 (let ((?x39041 (- (- (- (- (- (- (- ?x39034 ?x37636) ?x37638) ?x37640) ?x37642) ?x37644) ?x37646) ?x37648)))
 (= ?x39041 0.0))))))))))))))))))))))))
(assert
 (= (- (* l_0_10_57 l_0_10_57) (* l_0_10_85 l_0_10_85)) 0.0))
(assert
 (let ((?x39068 (+ (- (* l_0_10_141 l_0_10_141) (* l_0_10_169 l_0_10_169)) (* (* 2.0 l_0_10_57) l_0_10_58))))
 (= (- ?x39068 (* (* 2.0 l_0_10_85) l_0_10_86)) 0.0)))
(assert
 (let ((?x39083 (- (* (* 2.0 l_0_10_57) l_0_10_67) (* (* 2.0 l_0_10_85) l_0_10_95))))
 (= ?x39083 0.0)))
(assert
 (let ((?x39096 (+ (* (* (- 2.0) l_0_10_100) l_0_10_85) (* (* 2.0 l_0_10_57) l_0_10_72))))
 (= ?x39096 0.0)))
(assert
 (let ((?x39098 (+ (* (* (- 2.0) l_0_10_106) l_0_10_85) (* (* 2.0 l_0_10_57) l_0_10_78))))
 (= ?x39098 0.0)))
(assert
 (let ((?x39125 (* l_0_10_87 l_0_10_87)))
 (let ((?x39123 (* l_0_10_86 l_0_10_86)))
 (let ((?x39121 (* l_0_10_59 l_0_10_59)))
 (let ((?x39119 (* l_0_10_58 l_0_10_58)))
 (let ((?x39108 (+ (* (* (- 2.0) l_0_10_113) l_0_10_134) (* (* 2.0 l_0_10_141) l_0_10_142))))
 (let ((?x39116 (- (- ?x39108 (* (* 2.0 l_0_10_169) l_0_10_170)) (* (* 2.0 l_0_10_197) l_0_10_218))))
 (let ((?x39124 (- (+ (+ (- ?x39116 (* (* 2.0 l_0_10_225) l_0_10_246)) ?x39119) ?x39121) ?x39123)))
 (= (- ?x39124 ?x39125) 0.0)))))))))
(assert
 (let ((?x39149 (- (* (* (- 2.0) l_0_10_106) l_0_10_86) (* (* 2.0 l_0_10_107) l_0_10_87))))
 (let ((?x39153 (- (+ ?x39149 (* (* 2.0 l_0_10_141) l_0_10_162)) (* (* 2.0 l_0_10_169) l_0_10_190))))
 (let ((?x39157 (+ (+ ?x39153 (* (* 2.0 l_0_10_58) l_0_10_78)) (* (* 2.0 l_0_10_59) l_0_10_79))))
 (= ?x39157 0.0)))))
(assert
 (let ((?x39195 (* l_0_10_99 l_0_10_99)))
 (let ((?x39193 (* l_0_10_98 l_0_10_98)))
 (let ((?x39191 (* l_0_10_97 l_0_10_97)))
 (let ((?x39189 (* l_0_10_96 l_0_10_96)))
 (let ((?x39187 (* l_0_10_95 l_0_10_95)))
 (let ((?x39185 (* l_0_10_71 l_0_10_71)))
 (let ((?x39183 (* l_0_10_70 l_0_10_70)))
 (let ((?x39181 (* l_0_10_69 l_0_10_69)))
 (let ((?x39184 (+ (+ (+ (* l_0_10_67 l_0_10_67) (* l_0_10_68 l_0_10_68)) ?x39181) ?x39183)))
 (= (- (- (- (- (- (+ ?x39184 ?x39185) ?x39187) ?x39189) ?x39191) ?x39193) ?x39195) 0.0)))))))))))
(assert
 (let ((?x39209 (- (* (* (- 2.0) l_0_10_100) l_0_10_95) (* (* 2.0 l_0_10_101) l_0_10_96))))
 (let ((?x39213 (- (- ?x39209 (* (* 2.0 l_0_10_102) l_0_10_97)) (* (* 2.0 l_0_10_103) l_0_10_98))))
 (let ((?x39219 (+ (- ?x39213 (* (* 2.0 l_0_10_104) l_0_10_99)) (* (* 2.0 l_0_10_67) l_0_10_72))))
 (let ((?x39225 (+ (+ ?x39219 (* (* 2.0 l_0_10_68) l_0_10_73)) (* (* 2.0 l_0_10_69) l_0_10_74))))
 (let ((?x39231 (+ (+ ?x39225 (* (* 2.0 l_0_10_70) l_0_10_75)) (* (* 2.0 l_0_10_71) l_0_10_76))))
 (= ?x39231 0.0)))))))
(assert
 (let ((?x39248 (- (* (* (- 2.0) l_0_10_106) l_0_10_95) (* (* 2.0 l_0_10_107) l_0_10_96))))
 (let ((?x39262 (- (- ?x39248 (* (* 2.0 l_0_10_108) l_0_10_97)) (* (* 2.0 l_0_10_109) l_0_10_98))))
 (let ((?x39267 (+ (- ?x39262 (* (* 2.0 l_0_10_110) l_0_10_99)) (* (* 2.0 l_0_10_67) l_0_10_78))))
 (let ((?x39271 (+ (+ ?x39267 (* (* 2.0 l_0_10_68) l_0_10_79)) (* (* 2.0 l_0_10_69) l_0_10_80))))
 (let ((?x39275 (+ (+ ?x39271 (* (* 2.0 l_0_10_70) l_0_10_81)) (* (* 2.0 l_0_10_71) l_0_10_82))))
 (= ?x39275 0.0)))))))
(assert
 (let ((?x39318 (* l_0_10_77 l_0_10_77)))
 (let ((?x39316 (* l_0_10_76 l_0_10_76)))
 (let ((?x39314 (* l_0_10_75 l_0_10_75)))
 (let ((?x39312 (* l_0_10_74 l_0_10_74)))
 (let ((?x39310 (* l_0_10_73 l_0_10_73)))
 (let ((?x39308 (* l_0_10_72 l_0_10_72)))
 (let ((?x39306 (* l_0_10_105 l_0_10_105)))
 (let ((?x39304 (* l_0_10_104 l_0_10_104)))
 (let ((?x39302 (* l_0_10_103 l_0_10_103)))
 (let ((?x39292 (* l_0_10_102 l_0_10_102)))
 (let ((?x39293 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_101 l_0_10_101)) ?x39292)))
 (let ((?x39315 (+ (+ (+ (+ (- (- (- ?x39293 ?x39302) ?x39304) ?x39306) ?x39308) ?x39310) ?x39312) ?x39314)))
 (= (+ (+ ?x39315 ?x39316) ?x39318) 0.0))))))))))))))
(assert
 (let ((?x39336 (- (* (* (- 2.0) l_0_10_100) l_0_10_106) (* (* 2.0 l_0_10_101) l_0_10_107))))
 (let ((?x39340 (- (- ?x39336 (* (* 2.0 l_0_10_102) l_0_10_108)) (* (* 2.0 l_0_10_103) l_0_10_109))))
 (let ((?x39345 (- (- ?x39340 (* (* 2.0 l_0_10_104) l_0_10_110)) (* (* 2.0 l_0_10_105) l_0_10_111))))
 (let ((?x39351 (+ (+ ?x39345 (* (* 2.0 l_0_10_72) l_0_10_78)) (* (* 2.0 l_0_10_73) l_0_10_79))))
 (let ((?x39357 (+ (+ ?x39351 (* (* 2.0 l_0_10_74) l_0_10_80)) (* (* 2.0 l_0_10_75) l_0_10_81))))
 (let ((?x39363 (+ (+ ?x39357 (* (* 2.0 l_0_10_76) l_0_10_82)) (* (* 2.0 l_0_10_77) l_0_10_83))))
 (= ?x39363 0.0))))))))
(assert
 (let ((?x39417 (* l_0_10_84 l_0_10_84)))
 (let ((?x39415 (* l_0_10_83 l_0_10_83)))
 (let ((?x39413 (* l_0_10_82 l_0_10_82)))
 (let ((?x39411 (* l_0_10_81 l_0_10_81)))
 (let ((?x39409 (* l_0_10_80 l_0_10_80)))
 (let ((?x39407 (* l_0_10_79 l_0_10_79)))
 (let ((?x39405 (* l_0_10_78 l_0_10_78)))
 (let ((?x39403 (* l_0_10_112 l_0_10_112)))
 (let ((?x39401 (* l_0_10_111 l_0_10_111)))
 (let ((?x39399 (* l_0_10_110 l_0_10_110)))
 (let ((?x39388 (* l_0_10_109 l_0_10_109)))
 (let ((?x39385 (* l_0_10_108 l_0_10_108)))
 (let ((?x39387 (- (- (* (- l_0_10_106) l_0_10_106) (* l_0_10_107 l_0_10_107)) ?x39385)))
 (let ((?x39410 (+ (+ (+ (- (- (- (- ?x39387 ?x39388) ?x39399) ?x39401) ?x39403) ?x39405) ?x39407) ?x39409)))
 (= (+ (+ (+ (+ ?x39410 ?x39411) ?x39413) ?x39415) ?x39417) 0.0))))))))))))))))
(assert
 (let ((?x39441 (* l_0_10_225 l_0_10_225)))
 (let ((?x39439 (* l_0_10_197 l_0_10_197)))
 (= (- (- (* (* (- 1.0) l_0_10_113) l_0_10_113) ?x39439) ?x39441) 0.0))))
(assert
 (let ((?x39452 (- (* (* (- 2.0) l_0_10_113) l_0_10_114) (* (* 2.0 l_0_10_197) l_0_10_198))))
 (= (- ?x39452 (* (* 2.0 l_0_10_225) l_0_10_226)) 0.0)))
(assert
 (let ((?x13711 (- (* (* (- 2.0) l_0_10_113) l_0_10_119) (* (* 2.0 l_0_10_197) l_0_10_203))))
 (= (- ?x13711 (* (* 2.0 l_0_10_225) l_0_10_231)) 0.0)))
(assert
 (let ((?x39493 (* l_0_10_227 l_0_10_227)))
 (let ((?x39491 (* l_0_10_226 l_0_10_226)))
 (let ((?x39489 (* l_0_10_199 l_0_10_199)))
 (let ((?x39487 (* l_0_10_198 l_0_10_198)))
 (let ((?x39486 (- (* (* (- 1.0) l_0_10_114) l_0_10_114) (* (* 1.0 l_0_10_115) l_0_10_115))))
 (= (- (- (- (- ?x39486 ?x39487) ?x39489) ?x39491) ?x39493) 0.0)))))))
(assert
 (let ((?x39512 (- (* (* (- 2.0) l_0_10_114) l_0_10_119) (* (* 2.0 l_0_10_115) l_0_10_120))))
 (let ((?x39516 (- (- ?x39512 (* (* 2.0 l_0_10_198) l_0_10_203)) (* (* 2.0 l_0_10_199) l_0_10_204))))
 (let ((?x39520 (- (- ?x39516 (* (* 2.0 l_0_10_226) l_0_10_231)) (* (* 2.0 l_0_10_227) l_0_10_232))))
 (= ?x39520 0.0)))))
(assert
 (let ((?x39537 (* l_0_10_171 l_0_10_171)))
 (let ((?x39535 (* l_0_10_170 l_0_10_170)))
 (let ((?x13773 (* l_0_10_143 l_0_10_143)))
 (let ((?x13778 (* l_0_10_142 l_0_10_142)))
 (let ((?x13777 (- (* (* (- 2.0) l_0_10_114) l_0_10_134) (* (* 2.0 l_0_10_115) l_0_10_135))))
 (let ((?x39540 (- (- (- (+ (+ ?x13777 ?x13778) ?x13773) ?x39535) ?x39537) (* (* 2.0 l_0_10_198) l_0_10_218))))
 (let ((?x39544 (- (- ?x39540 (* (* 2.0 l_0_10_199) l_0_10_219)) (* (* 2.0 l_0_10_226) l_0_10_246))))
 (= (- ?x39544 (* (* 2.0 l_0_10_227) l_0_10_247)) 0.0)))))))))
(assert
 (let ((?x39579 (* l_0_10_230 l_0_10_230)))
 (let ((?x39577 (* l_0_10_229 l_0_10_229)))
 (let ((?x39575 (* l_0_10_228 l_0_10_228)))
 (let ((?x39573 (* l_0_10_202 l_0_10_202)))
 (let ((?x39571 (* l_0_10_201 l_0_10_201)))
 (let ((?x39569 (* l_0_10_200 l_0_10_200)))
 (let ((?x39565 (- (* (* (- 1.0) l_0_10_116) l_0_10_116) (* (* 1.0 l_0_10_117) l_0_10_117))))
 (let ((?x39574 (- (- (- (- ?x39565 (* (* 1.0 l_0_10_118) l_0_10_118)) ?x39569) ?x39571) ?x39573)))
 (= (- (- (- ?x39574 ?x39575) ?x39577) ?x39579) 0.0))))))))))
(assert
 (let ((?x39594 (- (* (* (- 2.0) l_0_10_116) l_0_10_119) (* (* 2.0 l_0_10_117) l_0_10_120))))
 (let ((?x39598 (- (- ?x39594 (* (* 2.0 l_0_10_118) l_0_10_121)) (* (* 2.0 l_0_10_200) l_0_10_203))))
 (let ((?x39602 (- (- ?x39598 (* (* 2.0 l_0_10_201) l_0_10_204)) (* (* 2.0 l_0_10_202) l_0_10_205))))
 (let ((?x39606 (- (- ?x39602 (* (* 2.0 l_0_10_228) l_0_10_231)) (* (* 2.0 l_0_10_229) l_0_10_232))))
 (= (- ?x39606 (* (* 2.0 l_0_10_230) l_0_10_233)) 0.0))))))
(assert
 (let ((?x39632 (- (* (* (- 2.0) l_0_10_116) l_0_10_134) (* (* 2.0 l_0_10_117) l_0_10_135))))
 (let ((?x39636 (+ (- ?x39632 (* (* 2.0 l_0_10_118) l_0_10_136)) (* (* 2.0 l_0_10_142) l_0_10_144))))
 (let ((?x39640 (- (+ ?x39636 (* (* 2.0 l_0_10_143) l_0_10_145)) (* (* 2.0 l_0_10_170) l_0_10_172))))
 (let ((?x39644 (- (- ?x39640 (* (* 2.0 l_0_10_171) l_0_10_173)) (* (* 2.0 l_0_10_200) l_0_10_218))))
 (let ((?x39648 (- (- ?x39644 (* (* 2.0 l_0_10_201) l_0_10_219)) (* (* 2.0 l_0_10_202) l_0_10_220))))
 (let ((?x39652 (- (- ?x39648 (* (* 2.0 l_0_10_228) l_0_10_246)) (* (* 2.0 l_0_10_229) l_0_10_247))))
 (= (- ?x39652 (* (* 2.0 l_0_10_230) l_0_10_248)) 0.0))))))))
(assert
 (let ((?x39724 (* l_0_10_234 l_0_10_234)))
 (let ((?x39722 (* l_0_10_233 l_0_10_233)))
 (let ((?x39720 (* l_0_10_232 l_0_10_232)))
 (let ((?x39718 (* l_0_10_231 l_0_10_231)))
 (let ((?x39716 (* l_0_10_206 l_0_10_206)))
 (let ((?x39714 (* l_0_10_205 l_0_10_205)))
 (let ((?x39712 (* l_0_10_204 l_0_10_204)))
 (let ((?x39710 (* l_0_10_203 l_0_10_203)))
 (let ((?x39703 (- (* (* (- 1.0) l_0_10_119) l_0_10_119) (* (* 1.0 l_0_10_120) l_0_10_120))))
 (let ((?x39709 (- (- ?x39703 (* (* 1.0 l_0_10_121) l_0_10_121)) (* (* 1.0 l_0_10_122) l_0_10_122))))
 (let ((?x39723 (- (- (- (- (- (- (- ?x39709 ?x39710) ?x39712) ?x39714) ?x39716) ?x39718) ?x39720) ?x39722)))
 (= (- ?x39723 ?x39724) 0.0)))))))))))))
(assert
 (let ((?x39788 (* l_0_10_252 l_0_10_252)))
 (let ((?x39786 (* l_0_10_251 l_0_10_251)))
 (let ((?x39784 (* l_0_10_250 l_0_10_250)))
 (let ((?x39782 (* l_0_10_249 l_0_10_249)))
 (let ((?x39780 (* l_0_10_248 l_0_10_248)))
 (let ((?x39778 (* l_0_10_247 l_0_10_247)))
 (let ((?x39776 (* l_0_10_246 l_0_10_246)))
 (let ((?x39774 (* l_0_10_224 l_0_10_224)))
 (let ((?x39772 (* l_0_10_223 l_0_10_223)))
 (let ((?x39770 (* l_0_10_222 l_0_10_222)))
 (let ((?x39768 (* l_0_10_221 l_0_10_221)))
 (let ((?x39766 (* l_0_10_220 l_0_10_220)))
 (let ((?x39764 (* l_0_10_219 l_0_10_219)))
 (let ((?x39762 (* l_0_10_218 l_0_10_218)))
 (let ((?x14227 (- (* (* (- 1.0) l_0_10_134) l_0_10_134) (* (* 1.0 l_0_10_135) l_0_10_135))))
 (let ((?x14258 (- (- ?x14227 (* (* 1.0 l_0_10_136) l_0_10_136)) (* (* 1.0 l_0_10_137) l_0_10_137))))
 (let ((?x14269 (- (- ?x14258 (* (* 1.0 l_0_10_138) l_0_10_138)) (* (* 1.0 l_0_10_139) l_0_10_139))))
 (let ((?x39755 (+ (- ?x14269 (* (* 1.0 l_0_10_140) l_0_10_140)) (* (* 2.0 l_0_10_142) l_0_10_162))))
 (let ((?x39759 (- (+ ?x39755 (* (* 2.0 l_0_10_143) l_0_10_163)) (* (* 2.0 l_0_10_170) l_0_10_190))))
 (let ((?x39767 (- (- (- (- ?x39759 (* (* 2.0 l_0_10_171) l_0_10_191)) ?x39762) ?x39764) ?x39766)))
 (let ((?x39781 (- (- (- (- (- (- (- ?x39767 ?x39768) ?x39770) ?x39772) ?x39774) ?x39776) ?x39778) ?x39780)))
 (= (- (- (- (- ?x39781 ?x39782) ?x39784) ?x39786) ?x39788) 0.0)))))))))))))))))))))))
(assert
 (let ((?x39845 (* l_0_10_174 l_0_10_174)))
 (let ((?x39843 (* l_0_10_173 l_0_10_173)))
 (let ((?x14379 (* l_0_10_172 l_0_10_172)))
 (let ((?x14375 (* l_0_10_146 l_0_10_146)))
 (let ((?x14378 (+ (+ (* l_0_10_144 l_0_10_144) (* l_0_10_145 l_0_10_145)) ?x14375)))
 (= (- (- (- ?x14378 ?x14379) ?x39843) ?x39845) 0.0)))))))
(assert
 (let ((?x39858 (+ (* (* 2.0 l_0_10_144) l_0_10_162) (* (* 2.0 l_0_10_145) l_0_10_163))))
 (let ((?x39862 (- (+ ?x39858 (* (* 2.0 l_0_10_146) l_0_10_164)) (* (* 2.0 l_0_10_172) l_0_10_190))))
 (let ((?x39866 (- (- ?x39862 (* (* 2.0 l_0_10_173) l_0_10_191)) (* (* 2.0 l_0_10_174) l_0_10_192))))
 (= ?x39866 0.0)))))
(assert
 (let ((?x39914 (* l_0_10_196 l_0_10_196)))
 (let ((?x39912 (* l_0_10_195 l_0_10_195)))
 (let ((?x39910 (* l_0_10_194 l_0_10_194)))
 (let ((?x39908 (* l_0_10_193 l_0_10_193)))
 (let ((?x39906 (* l_0_10_192 l_0_10_192)))
 (let ((?x39904 (* l_0_10_191 l_0_10_191)))
 (let ((?x39902 (* l_0_10_190 l_0_10_190)))
 (let ((?x39900 (* l_0_10_168 l_0_10_168)))
 (let ((?x39898 (* l_0_10_167 l_0_10_167)))
 (let ((?x39896 (* l_0_10_166 l_0_10_166)))
 (let ((?x39894 (* l_0_10_165 l_0_10_165)))
 (let ((?x39892 (* l_0_10_164 l_0_10_164)))
 (let ((?x39893 (+ (+ (* l_0_10_162 l_0_10_162) (* l_0_10_163 l_0_10_163)) ?x39892)))
 (let ((?x39907 (- (- (- (+ (+ (+ (+ ?x39893 ?x39894) ?x39896) ?x39898) ?x39900) ?x39902) ?x39904) ?x39906)))
 (= (- (- (- (- ?x39907 ?x39908) ?x39910) ?x39912) ?x39914) 0.0))))))))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_28 0.0))
(assert
 (>= l_0_10_29 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_34 0.0))
(assert
 (>= l_0_10_38 0.0))
(assert
 (>= l_0_10_43 0.0))
(assert
 (>= l_0_10_49 0.0))
(assert
 (>= l_0_10_56 0.0))
(assert
 (>= l_0_10_57 0.0))
(assert
 (>= l_0_10_59 0.0))
(assert
 (>= l_0_10_62 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_71 0.0))
(assert
 (>= l_0_10_77 0.0))
(assert
 (>= l_0_10_84 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_87 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_94 0.0))
(assert
 (>= l_0_10_99 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_112 0.0))
(assert
 (>= l_0_10_113 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_118 0.0))
(assert
 (>= l_0_10_122 0.0))
(assert
 (>= l_0_10_127 0.0))
(assert
 (>= l_0_10_133 0.0))
(assert
 (>= l_0_10_140 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_143 0.0))
(assert
 (>= l_0_10_146 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (>= l_0_10_155 0.0))
(assert
 (>= l_0_10_161 0.0))
(assert
 (>= l_0_10_168 0.0))
(assert
 (>= l_0_10_169 0.0))
(assert
 (>= l_0_10_171 0.0))
(assert
 (>= l_0_10_174 0.0))
(assert
 (>= l_0_10_178 0.0))
(assert
 (>= l_0_10_183 0.0))
(assert
 (>= l_0_10_189 0.0))
(assert
 (>= l_0_10_196 0.0))
(assert
 (>= l_0_10_197 0.0))
(assert
 (>= l_0_10_199 0.0))
(assert
 (>= l_0_10_202 0.0))
(assert
 (>= l_0_10_206 0.0))
(assert
 (>= l_0_10_211 0.0))
(assert
 (>= l_0_10_217 0.0))
(assert
 (>= l_0_10_224 0.0))
(assert
 (>= l_0_10_225 0.0))
(assert
 (>= l_0_10_227 0.0))
(assert
 (>= l_0_10_230 0.0))
(assert
 (>= l_0_10_234 0.0))
(assert
 (>= l_0_10_239 0.0))
(assert
 (>= l_0_10_245 0.0))
(assert
 (>= l_0_10_252 0.0))
(assert
 (let ((?x40009 (* l_0_11_255 l_0_11_255)))
 (let ((?x40007 (* l_0_11_254 l_0_11_254)))
 (let ((?x40005 (* l_0_11_227 l_0_11_227)))
 (let ((?x40003 (* l_0_11_226 l_0_11_226)))
 (let ((?x40001 (* l_0_11_199 l_0_11_199)))
 (let ((?x39999 (* l_0_11_198 l_0_11_198)))
 (let ((?x39998 (- (* (* (- 1.0) l_0_11_114) l_0_11_114) (* (* 1.0 l_0_11_115) l_0_11_115))))
 (= (- (- (- (- (- (- ?x39998 ?x39999) ?x40001) ?x40003) ?x40005) ?x40007) ?x40009) 0.0)))))))))
(assert
 (let ((?x40051 (* l_0_11_87 l_0_11_87)))
 (let ((?x40049 (* l_0_11_86 l_0_11_86)))
 (let ((?x40047 (* l_0_11_59 l_0_11_59)))
 (let ((?x40045 (* l_0_11_58 l_0_11_58)))
 (let ((?x40032 (+ (* (* (- 2.0) l_0_11_113) l_0_11_134) (* (* 2.0 l_0_11_141) l_0_11_142))))
 (let ((?x40038 (- (- ?x40032 (* (* 2.0 l_0_11_169) l_0_11_170)) (* (* 2.0 l_0_11_197) l_0_11_218))))
 (let ((?x40044 (- (- ?x40038 (* (* 2.0 l_0_11_225) l_0_11_246)) (* (* 2.0 l_0_11_253) l_0_11_274))))
 (= (- (- (- (+ (+ ?x40044 ?x40045) ?x40047) ?x40049) ?x40051) 1.0) 0.0)))))))))
(assert
 (let ((?x40077 (* l_0_11_171 l_0_11_171)))
 (let ((?x40075 (* l_0_11_170 l_0_11_170)))
 (let ((?x40073 (* l_0_11_143 l_0_11_143)))
 (let ((?x40071 (* l_0_11_142 l_0_11_142)))
 (let ((?x40070 (- (* (* (- 2.0) l_0_11_114) l_0_11_134) (* (* 2.0 l_0_11_115) l_0_11_135))))
 (let ((?x40081 (- (- (- (+ (+ ?x40070 ?x40071) ?x40073) ?x40075) ?x40077) (* (* 2.0 l_0_11_198) l_0_11_218))))
 (let ((?x40087 (- (- ?x40081 (* (* 2.0 l_0_11_199) l_0_11_219)) (* (* 2.0 l_0_11_226) l_0_11_246))))
 (let ((?x40093 (- (- ?x40087 (* (* 2.0 l_0_11_227) l_0_11_247)) (* (* 2.0 l_0_11_254) l_0_11_274))))
 (= (- (- ?x40093 (* (* 2.0 l_0_11_255) l_0_11_275)) 1.0) 0.0))))))))))
(assert
 (= (+ (* (- l_0_11_1) l_0_11_1) (* l_0_11_29 l_0_11_29)) 0.0))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40131 (* ?x40130 l_0_11_30)))
 (let ((?x40123 (- (* (* (- 2.0) l_0_11_1) l_0_11_2) (* (* 2.0 l_0_11_113) l_0_11_123))))
 (let ((?x40127 (- (- ?x40123 (* (* 2.0 l_0_11_197) l_0_11_207)) (* (* 2.0 l_0_11_225) l_0_11_235))))
 (= (+ (- ?x40127 (* (* 2.0 l_0_11_253) l_0_11_263)) ?x40131) 0.0))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40160 (* ?x40159 l_0_11_40)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40157 (* ?x40156 l_0_11_39)))
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40154 (* ?x40130 l_0_11_32)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x40152 (* ?x40151 l_0_11_3)))
 (let ((?x14708 (* 2.0 l_0_11_11)))
 (let ((?x40149 (* ?x14708 l_0_11_2)))
 (let ((?x40158 (- (+ (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_4) ?x40149) ?x40152) ?x40154) ?x40157)))
 (= (- ?x40158 ?x40160) 0.0)))))))))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40183 (* ?x40130 l_0_11_35)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x40183) 0.0))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40189 (* ?x40130 l_0_11_39)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_11) ?x40189) 0.0))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40207 (* ?x40130 l_0_11_44)))
 (let ((?x40189 (* ?x40130 l_0_11_39)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x40200 (* ?x40197 l_0_11_16)))
 (let ((?x40199 (* ?x40197 l_0_11_11)))
 (= (+ (- (- ?x40199 ?x40200) ?x40189) ?x40207) 0.0))))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40221 (* ?x40130 l_0_11_50)))
 (let ((?x40218 (+ (* (* (- 2.0) l_0_11_1) l_0_11_22) (* (* 2.0 l_0_11_141) l_0_11_151))))
 (let ((?x40225 (+ (+ (- ?x40218 (* (* 2.0 l_0_11_169) l_0_11_179)) ?x40221) (* (* 2.0 l_0_11_58) l_0_11_67))))
 (let ((?x40231 (- (+ ?x40225 (* (* 2.0 l_0_11_59) l_0_11_68)) (* (* 2.0 l_0_11_86) l_0_11_95))))
 (= (- ?x40231 (* (* 2.0 l_0_11_87) l_0_11_96)) 0.0)))))))
(assert
 (let ((?x40276 (* l_0_11_31 l_0_11_31)))
 (let ((?x40274 (* l_0_11_30 l_0_11_30)))
 (let ((?x40272 (* l_0_11_3 l_0_11_3)))
 (let ((?x40262 (* l_0_11_2 l_0_11_2)))
 (let ((?x14751 (- (* (* (- 2.0) l_0_11_114) l_0_11_123) (* (* 2.0 l_0_11_115) l_0_11_124))))
 (let ((?x40261 (- (- ?x14751 (* (* 2.0 l_0_11_198) l_0_11_207)) (* (* 2.0 l_0_11_199) l_0_11_208))))
 (let ((?x40267 (- (- (- ?x40261 ?x40262) (* (* 2.0 l_0_11_226) l_0_11_235)) (* (* 2.0 l_0_11_227) l_0_11_236))))
 (let ((?x40271 (- (- ?x40267 (* (* 2.0 l_0_11_254) l_0_11_263)) (* (* 2.0 l_0_11_255) l_0_11_264))))
 (= (+ (+ (- ?x40271 ?x40272) ?x40274) ?x40276) 0.0))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40346 (* ?x40159 l_0_11_33)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40344 (* ?x40156 l_0_11_32)))
 (let ((?x40341 (* 2.0 l_0_11_3)))
 (let ((?x40342 (* ?x40341 l_0_11_5)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x40312 (* ?x40311 l_0_11_4)))
 (let ((?x40307 (- (* (* (- 2.0) l_0_11_116) l_0_11_123) (* (* 2.0 l_0_11_117) l_0_11_124))))
 (let ((?x40316 (- (- (- ?x40307 (* (* 2.0 l_0_11_118) l_0_11_125)) ?x40312) (* (* 2.0 l_0_11_200) l_0_11_207))))
 (let ((?x40322 (- (- ?x40316 (* (* 2.0 l_0_11_201) l_0_11_208)) (* (* 2.0 l_0_11_202) l_0_11_209))))
 (let ((?x40328 (- (- ?x40322 (* (* 2.0 l_0_11_228) l_0_11_235)) (* (* 2.0 l_0_11_229) l_0_11_236))))
 (let ((?x40334 (- (- ?x40328 (* (* 2.0 l_0_11_230) l_0_11_237)) (* (* 2.0 l_0_11_256) l_0_11_263))))
 (let ((?x40340 (- (- ?x40334 (* (* 2.0 l_0_11_257) l_0_11_264)) (* (* 2.0 l_0_11_258) l_0_11_265))))
 (= (+ (+ (- ?x40340 ?x40342) ?x40344) ?x40346) 0.0))))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40437 (* ?x40159 l_0_11_36)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40435 (* ?x40156 l_0_11_35)))
 (let ((?x40341 (* 2.0 l_0_11_3)))
 (let ((?x40433 (* ?x40341 l_0_11_8)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x14907 (* ?x40311 l_0_11_7)))
 (let ((?x14865 (- (* (* (- 2.0) l_0_11_119) l_0_11_123) (* (* 2.0 l_0_11_120) l_0_11_124))))
 (let ((?x14901 (- (- ?x14865 (* (* 2.0 l_0_11_121) l_0_11_125)) (* (* 2.0 l_0_11_122) l_0_11_126))))
 (let ((?x40402 (- (- (- ?x14901 ?x14907) (* (* 2.0 l_0_11_203) l_0_11_207)) (* (* 2.0 l_0_11_204) l_0_11_208))))
 (let ((?x40408 (- (- ?x40402 (* (* 2.0 l_0_11_205) l_0_11_209)) (* (* 2.0 l_0_11_206) l_0_11_210))))
 (let ((?x40414 (- (- ?x40408 (* (* 2.0 l_0_11_231) l_0_11_235)) (* (* 2.0 l_0_11_232) l_0_11_236))))
 (let ((?x40420 (- (- ?x40414 (* (* 2.0 l_0_11_233) l_0_11_237)) (* (* 2.0 l_0_11_234) l_0_11_238))))
 (let ((?x40426 (- (- ?x40420 (* (* 2.0 l_0_11_259) l_0_11_263)) (* (* 2.0 l_0_11_260) l_0_11_264))))
 (let ((?x40432 (- (- ?x40426 (* (* 2.0 l_0_11_261) l_0_11_265)) (* (* 2.0 l_0_11_262) l_0_11_266))))
 (= (+ (+ (- ?x40432 ?x40433) ?x40435) ?x40437) 0.0))))))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40160 (* ?x40159 l_0_11_40)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40157 (* ?x40156 l_0_11_39)))
 (let ((?x40525 (* l_0_11_267 l_0_11_267)))
 (let ((?x40523 (* l_0_11_266 l_0_11_266)))
 (let ((?x40521 (* l_0_11_265 l_0_11_265)))
 (let ((?x40519 (* l_0_11_264 l_0_11_264)))
 (let ((?x40517 (* l_0_11_263 l_0_11_263)))
 (let ((?x40515 (* l_0_11_239 l_0_11_239)))
 (let ((?x40513 (* l_0_11_238 l_0_11_238)))
 (let ((?x40511 (* l_0_11_237 l_0_11_237)))
 (let ((?x40509 (* l_0_11_236 l_0_11_236)))
 (let ((?x40507 (* l_0_11_235 l_0_11_235)))
 (let ((?x40505 (* l_0_11_211 l_0_11_211)))
 (let ((?x40503 (* l_0_11_210 l_0_11_210)))
 (let ((?x40501 (* l_0_11_209 l_0_11_209)))
 (let ((?x40499 (* l_0_11_208 l_0_11_208)))
 (let ((?x40497 (* l_0_11_207 l_0_11_207)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x40152 (* ?x40151 l_0_11_3)))
 (let ((?x40484 (- (- (* (* (- 2.0) l_0_11_11) l_0_11_2) ?x40152) (* (* 1.0 l_0_11_123) l_0_11_123))))
 (let ((?x40490 (- (- ?x40484 (* (* 1.0 l_0_11_124) l_0_11_124)) (* (* 1.0 l_0_11_125) l_0_11_125))))
 (let ((?x40496 (- (- ?x40490 (* (* 1.0 l_0_11_126) l_0_11_126)) (* (* 1.0 l_0_11_127) l_0_11_127))))
 (let ((?x40510 (- (- (- (- (- (- (- ?x40496 ?x40497) ?x40499) ?x40501) ?x40503) ?x40505) ?x40507) ?x40509)))
 (let ((?x40524 (- (- (- (- (- (- (- ?x40510 ?x40511) ?x40513) ?x40515) ?x40517) ?x40519) ?x40521) ?x40523)))
 (= (+ (+ (- ?x40524 ?x40525) ?x40157) ?x40160) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40621 (* ?x40159 l_0_11_45)))
 (let ((?x40160 (* ?x40159 l_0_11_40)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40618 (* ?x40156 l_0_11_44)))
 (let ((?x40157 (* ?x40156 l_0_11_39)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x40570 (* ?x40569 l_0_11_3)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x40567 (* ?x40566 l_0_11_2)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x40152 (* ?x40151 l_0_11_3)))
 (let ((?x14708 (* 2.0 l_0_11_11)))
 (let ((?x40149 (* ?x14708 l_0_11_2)))
 (let ((?x40556 (- (- (+ ?x40149 ?x40152) (* (* 2.0 l_0_11_123) l_0_11_128)) (* (* 2.0 l_0_11_124) l_0_11_129))))
 (let ((?x40562 (- (- ?x40556 (* (* 2.0 l_0_11_125) l_0_11_130)) (* (* 2.0 l_0_11_126) l_0_11_131))))
 (let ((?x40574 (- (- (- (- ?x40562 (* (* 2.0 l_0_11_127) l_0_11_132)) ?x40567) ?x40570) (* (* 2.0 l_0_11_207) l_0_11_212))))
 (let ((?x40580 (- (- ?x40574 (* (* 2.0 l_0_11_208) l_0_11_213)) (* (* 2.0 l_0_11_209) l_0_11_214))))
 (let ((?x40586 (- (- ?x40580 (* (* 2.0 l_0_11_210) l_0_11_215)) (* (* 2.0 l_0_11_211) l_0_11_216))))
 (let ((?x40592 (- (- ?x40586 (* (* 2.0 l_0_11_235) l_0_11_240)) (* (* 2.0 l_0_11_236) l_0_11_241))))
 (let ((?x40598 (- (- ?x40592 (* (* 2.0 l_0_11_237) l_0_11_242)) (* (* 2.0 l_0_11_238) l_0_11_243))))
 (let ((?x40604 (- (- ?x40598 (* (* 2.0 l_0_11_239) l_0_11_244)) (* (* 2.0 l_0_11_263) l_0_11_268))))
 (let ((?x40610 (- (- ?x40604 (* (* 2.0 l_0_11_264) l_0_11_269)) (* (* 2.0 l_0_11_265) l_0_11_270))))
 (let ((?x40616 (- (- ?x40610 (* (* 2.0 l_0_11_266) l_0_11_271)) (* (* 2.0 l_0_11_267) l_0_11_272))))
 (= (+ (- (+ (- ?x40616 ?x40157) ?x40618) ?x40160) ?x40621) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40738 (* ?x40159 l_0_11_51)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40736 (* ?x40156 l_0_11_50)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x40714 (* ?x40713 l_0_11_3)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x40701 (* ?x40311 l_0_11_22)))
 (let ((?x40682 (- (* (* (- 2.0) l_0_11_123) l_0_11_134) (* (* 2.0 l_0_11_124) l_0_11_135))))
 (let ((?x40686 (- (- ?x40682 (* (* 2.0 l_0_11_125) l_0_11_136)) (* (* 2.0 l_0_11_126) l_0_11_137))))
 (let ((?x40691 (+ (- ?x40686 (* (* 2.0 l_0_11_127) l_0_11_138)) (* (* 2.0 l_0_11_142) l_0_11_151))))
 (let ((?x40697 (- (+ ?x40691 (* (* 2.0 l_0_11_143) l_0_11_152)) (* (* 2.0 l_0_11_170) l_0_11_179))))
 (let ((?x40704 (- (- (- ?x40697 (* (* 2.0 l_0_11_171) l_0_11_180)) ?x40701) (* (* 2.0 l_0_11_207) l_0_11_218))))
 (let ((?x40708 (- (- ?x40704 (* (* 2.0 l_0_11_208) l_0_11_219)) (* (* 2.0 l_0_11_209) l_0_11_220))))
 (let ((?x40712 (- (- ?x40708 (* (* 2.0 l_0_11_210) l_0_11_221)) (* (* 2.0 l_0_11_211) l_0_11_222))))
 (let ((?x40719 (- (- (- ?x40712 ?x40714) (* (* 2.0 l_0_11_235) l_0_11_246)) (* (* 2.0 l_0_11_236) l_0_11_247))))
 (let ((?x40723 (- (- ?x40719 (* (* 2.0 l_0_11_237) l_0_11_248)) (* (* 2.0 l_0_11_238) l_0_11_249))))
 (let ((?x40727 (- (- ?x40723 (* (* 2.0 l_0_11_239) l_0_11_250)) (* (* 2.0 l_0_11_263) l_0_11_274))))
 (let ((?x40731 (- (- ?x40727 (* (* 2.0 l_0_11_264) l_0_11_275)) (* (* 2.0 l_0_11_265) l_0_11_276))))
 (let ((?x40735 (- (- ?x40731 (* (* 2.0 l_0_11_266) l_0_11_277)) (* (* 2.0 l_0_11_267) l_0_11_278))))
 (= (+ (+ ?x40735 ?x40736) ?x40738) 0.0))))))))))))))))))))))
(assert
 (let ((?x40790 (* l_0_11_6 l_0_11_6)))
 (let ((?x40788 (* l_0_11_5 l_0_11_5)))
 (let ((?x40786 (* l_0_11_4 l_0_11_4)))
 (let ((?x40784 (* l_0_11_34 l_0_11_34)))
 (let ((?x40787 (- (+ (+ (* l_0_11_32 l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x40784) ?x40786)))
 (= (- (- ?x40787 ?x40788) ?x40790) 0.0)))))))
(assert
 (let ((?x40812 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x40809 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x40806 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40803 (* ?x40802 l_0_11_37)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40800 (* ?x40799 l_0_11_36)))
 (let ((?x40810 (- (- (+ (+ (* (* 2.0 l_0_11_32) l_0_11_35) ?x40800) ?x40803) ?x40806) ?x40809)))
 (= (- ?x40810 ?x40812) 0.0))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40844 (* ?x40802 l_0_11_41)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40842 (* ?x40799 l_0_11_40)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40840 (* ?x16116 l_0_11_39)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x40838 (* ?x40837 l_0_11_6)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x40835 (* ?x40151 l_0_11_5)))
 (let ((?x40843 (+ (+ (- (- (* (* (- 2.0) l_0_11_11) l_0_11_4) ?x40835) ?x40838) ?x40840) ?x40842)))
 (= (+ ?x40843 ?x40844) 0.0)))))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40876 (* ?x40802 l_0_11_46)))
 (let ((?x40844 (* ?x40802 l_0_11_41)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40873 (* ?x40799 l_0_11_45)))
 (let ((?x40842 (* ?x40799 l_0_11_40)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40870 (* ?x16116 l_0_11_44)))
 (let ((?x40840 (* ?x16116 l_0_11_39)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x40867 (* ?x40866 l_0_11_6)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x40864 (* ?x40569 l_0_11_5)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x40856 (* ?x40566 l_0_11_4)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x40838 (* ?x40837 l_0_11_6)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x40835 (* ?x40151 l_0_11_5)))
 (let ((?x16200 (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x40835) ?x40838)))
 (let ((?x40874 (+ (- (+ (- (- (- (- ?x16200 ?x40856) ?x40864) ?x40867) ?x40840) ?x40870) ?x40842) ?x40873)))
 (= (+ (- ?x40874 ?x40844) ?x40876) 0.0)))))))))))))))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40929 (* ?x40802 l_0_11_52)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40927 (* ?x40799 l_0_11_51)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40925 (* ?x16116 l_0_11_50)))
 (let ((?x40922 (* 2.0 l_0_11_24)))
 (let ((?x40923 (* ?x40922 l_0_11_6)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x40920 (* ?x40713 l_0_11_5)))
 (let ((?x40917 (* 2.0 l_0_11_22)))
 (let ((?x40918 (* ?x40917 l_0_11_4)))
 (let ((?x40904 (+ (* (* 2.0 l_0_11_144) l_0_11_151) (* (* 2.0 l_0_11_145) l_0_11_152))))
 (let ((?x40910 (- (+ ?x40904 (* (* 2.0 l_0_11_146) l_0_11_153)) (* (* 2.0 l_0_11_172) l_0_11_179))))
 (let ((?x40916 (- (- ?x40910 (* (* 2.0 l_0_11_173) l_0_11_180)) (* (* 2.0 l_0_11_174) l_0_11_181))))
 (= (+ (+ (+ (- (- (- ?x40916 ?x40918) ?x40920) ?x40923) ?x40925) ?x40927) ?x40929) 0.0)))))))))))))))))
(assert
 (let ((?x40997 (* l_0_11_9 l_0_11_9)))
 (let ((?x40995 (* l_0_11_8 l_0_11_8)))
 (let ((?x40993 (* l_0_11_7 l_0_11_7)))
 (let ((?x40991 (* l_0_11_38 l_0_11_38)))
 (let ((?x40989 (* l_0_11_37 l_0_11_37)))
 (let ((?x40987 (* l_0_11_36 l_0_11_36)))
 (let ((?x40988 (+ (+ (* (- l_0_11_10) l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x40987)))
 (= (- (- (- (+ (+ ?x40988 ?x40989) ?x40991) ?x40993) ?x40995) ?x40997) 0.0)))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41032 (* ?x41031 l_0_11_42)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41029 (* ?x41028 l_0_11_41)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41026 (* ?x41025 l_0_11_40)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41023 (* ?x41022 l_0_11_39)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41020 (* ?x40837 l_0_11_9)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41018 (* ?x40151 l_0_11_8)))
 (let ((?x14708 (* 2.0 l_0_11_11)))
 (let ((?x41016 (* ?x14708 l_0_11_7)))
 (let ((?x41024 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_14) ?x41016) ?x41018) ?x41020) ?x41023)))
 (= (+ (+ (+ ?x41024 ?x41026) ?x41029) ?x41032) 0.0)))))))))))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41089 (* ?x41031 l_0_11_47)))
 (let ((?x41032 (* ?x41031 l_0_11_42)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41086 (* ?x41028 l_0_11_46)))
 (let ((?x41029 (* ?x41028 l_0_11_41)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41083 (* ?x41025 l_0_11_45)))
 (let ((?x41026 (* ?x41025 l_0_11_40)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41080 (* ?x41022 l_0_11_44)))
 (let ((?x41023 (* ?x41022 l_0_11_39)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x41077 (* ?x40866 l_0_11_9)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x41075 (* ?x40569 l_0_11_8)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x41073 (* ?x40566 l_0_11_7)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41020 (* ?x40837 l_0_11_9)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41018 (* ?x40151 l_0_11_8)))
 (let ((?x14708 (* 2.0 l_0_11_11)))
 (let ((?x41016 (* ?x14708 l_0_11_7)))
 (let ((?x41056 (* 2.0 l_0_11_10)))
 (let ((?x41060 (* ?x41056 l_0_11_19)))
 (let ((?x41058 (* ?x41056 l_0_11_14)))
 (let ((?x41078 (- (- (- (+ (+ (+ (- ?x41058 ?x41060) ?x41016) ?x41018) ?x41020) ?x41073) ?x41075) ?x41077)))
 (let ((?x41088 (- (+ (- (+ (- (+ (- ?x41078 ?x41023) ?x41080) ?x41026) ?x41083) ?x41029) ?x41086) ?x41032)))
 (= (+ ?x41088 ?x41089) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41182 (* ?x41031 l_0_11_53)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41180 (* ?x41028 l_0_11_52)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41178 (* ?x41025 l_0_11_51)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41176 (* ?x41022 l_0_11_50)))
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40160 (* ?x40159 l_0_11_40)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40157 (* ?x40156 l_0_11_39)))
 (let ((?x40922 (* 2.0 l_0_11_24)))
 (let ((?x41172 (* ?x40922 l_0_11_9)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x41170 (* ?x40713 l_0_11_8)))
 (let ((?x40917 (* 2.0 l_0_11_22)))
 (let ((?x41168 (* ?x40917 l_0_11_7)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x40152 (* ?x40151 l_0_11_3)))
 (let ((?x14708 (* 2.0 l_0_11_11)))
 (let ((?x40149 (* ?x14708 l_0_11_2)))
 (let ((?x41146 (+ (+ (+ (* (* (- 2.0) l_0_11_10) l_0_11_25) ?x40149) ?x40152) (* (* 2.0 l_0_11_147) l_0_11_151))))
 (let ((?x41152 (+ (+ ?x41146 (* (* 2.0 l_0_11_148) l_0_11_152)) (* (* 2.0 l_0_11_149) l_0_11_153))))
 (let ((?x41158 (- (+ ?x41152 (* (* 2.0 l_0_11_150) l_0_11_154)) (* (* 2.0 l_0_11_175) l_0_11_179))))
 (let ((?x41164 (- (- ?x41158 (* (* 2.0 l_0_11_176) l_0_11_180)) (* (* 2.0 l_0_11_177) l_0_11_181))))
 (let ((?x41173 (- (- (- (- ?x41164 (* (* 2.0 l_0_11_178) l_0_11_182)) ?x41168) ?x41170) ?x41172)))
 (= (+ (+ (+ (+ (- (- ?x41173 ?x40157) ?x40160) ?x41176) ?x41178) ?x41180) ?x41182) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x41269 (* l_0_11_43 l_0_11_43)))
 (let ((?x41267 (* l_0_11_42 l_0_11_42)))
 (let ((?x41265 (* l_0_11_41 l_0_11_41)))
 (let ((?x41263 (* l_0_11_40 l_0_11_40)))
 (let ((?x41261 (* l_0_11_39 l_0_11_39)))
 (let ((?x41259 (* l_0_11_15 l_0_11_15)))
 (let ((?x41257 (* l_0_11_14 l_0_11_14)))
 (let ((?x41244 (* l_0_11_13 l_0_11_13)))
 (let ((?x41256 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x41244)))
 (let ((?x41270 (+ (+ (+ (+ (+ (- (- ?x41256 ?x41257) ?x41259) ?x41261) ?x41263) ?x41265) ?x41267) ?x41269)))
 (= ?x41270 0.0))))))))))))
(assert
 (let ((?x41269 (* l_0_11_43 l_0_11_43)))
 (let ((?x41322 (* 2.0 l_0_11_43)))
 (let ((?x41323 (* ?x41322 l_0_11_48)))
 (let ((?x41267 (* l_0_11_42 l_0_11_42)))
 (let ((?x41318 (* 2.0 l_0_11_42)))
 (let ((?x41319 (* ?x41318 l_0_11_47)))
 (let ((?x41265 (* l_0_11_41 l_0_11_41)))
 (let ((?x41314 (* 2.0 l_0_11_41)))
 (let ((?x41315 (* ?x41314 l_0_11_46)))
 (let ((?x41263 (* l_0_11_40 l_0_11_40)))
 (let ((?x41310 (* 2.0 l_0_11_40)))
 (let ((?x41311 (* ?x41310 l_0_11_45)))
 (let ((?x41261 (* l_0_11_39 l_0_11_39)))
 (let ((?x41306 (* 2.0 l_0_11_39)))
 (let ((?x41307 (* ?x41306 l_0_11_44)))
 (let ((?x41259 (* l_0_11_15 l_0_11_15)))
 (let ((?x41302 (* 2.0 l_0_11_15)))
 (let ((?x41303 (* ?x41302 l_0_11_20)))
 (let ((?x41257 (* l_0_11_14 l_0_11_14)))
 (let ((?x41298 (* 2.0 l_0_11_14)))
 (let ((?x41299 (* ?x41298 l_0_11_19)))
 (let ((?x41244 (* l_0_11_13 l_0_11_13)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41295 (* ?x40837 l_0_11_18)))
 (let ((?x41241 (* l_0_11_12 l_0_11_12)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41292 (* ?x40151 l_0_11_17)))
 (let ((?x41293 (- (+ (* (* (- 2.0) l_0_11_11) l_0_11_16) (* l_0_11_11 l_0_11_11)) ?x41292)))
 (let ((?x41305 (+ (- (+ (- (+ (- (+ ?x41293 ?x41241) ?x41295) ?x41244) ?x41299) ?x41257) ?x41303) ?x41259)))
 (let ((?x41320 (+ (- (+ (- (+ (- (+ ?x41305 ?x41307) ?x41261) ?x41311) ?x41263) ?x41315) ?x41265) ?x41319)))
 (= (- (+ (- ?x41320 ?x41267) ?x41323) ?x41269) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x41322 (* 2.0 l_0_11_43)))
 (let ((?x41387 (* ?x41322 l_0_11_54)))
 (let ((?x41318 (* 2.0 l_0_11_42)))
 (let ((?x41385 (* ?x41318 l_0_11_53)))
 (let ((?x41314 (* 2.0 l_0_11_41)))
 (let ((?x41383 (* ?x41314 l_0_11_52)))
 (let ((?x41310 (* 2.0 l_0_11_40)))
 (let ((?x41381 (* ?x41310 l_0_11_51)))
 (let ((?x41306 (* 2.0 l_0_11_39)))
 (let ((?x41379 (* ?x41306 l_0_11_50)))
 (let ((?x41377 (* l_0_11_183 l_0_11_183)))
 (let ((?x41375 (* l_0_11_182 l_0_11_182)))
 (let ((?x41373 (* l_0_11_181 l_0_11_181)))
 (let ((?x41371 (* l_0_11_180 l_0_11_180)))
 (let ((?x41369 (* l_0_11_179 l_0_11_179)))
 (let ((?x41367 (* l_0_11_155 l_0_11_155)))
 (let ((?x41365 (* l_0_11_154 l_0_11_154)))
 (let ((?x41363 (* l_0_11_153 l_0_11_153)))
 (let ((?x41361 (* l_0_11_152 l_0_11_152)))
 (let ((?x41359 (* l_0_11_151 l_0_11_151)))
 (let ((?x41302 (* 2.0 l_0_11_15)))
 (let ((?x41357 (* ?x41302 l_0_11_26)))
 (let ((?x41298 (* 2.0 l_0_11_14)))
 (let ((?x41355 (* ?x41298 l_0_11_25)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41353 (* ?x40837 l_0_11_24)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41351 (* ?x40151 l_0_11_23)))
 (let ((?x41358 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_22) ?x41351) ?x41353) ?x41355) ?x41357)))
 (let ((?x41372 (- (- (+ (+ (+ (+ (+ ?x41358 ?x41359) ?x41361) ?x41363) ?x41365) ?x41367) ?x41369) ?x41371)))
 (let ((?x41386 (+ (+ (+ (+ (- (- (- ?x41372 ?x41373) ?x41375) ?x41377) ?x41379) ?x41381) ?x41383) ?x41385)))
 (= (+ ?x41386 ?x41387) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x41444 (* l_0_11_49 l_0_11_49)))
 (let ((?x41442 (* l_0_11_48 l_0_11_48)))
 (let ((?x41440 (* l_0_11_47 l_0_11_47)))
 (let ((?x41438 (* l_0_11_46 l_0_11_46)))
 (let ((?x41436 (* l_0_11_45 l_0_11_45)))
 (let ((?x41434 (* l_0_11_44 l_0_11_44)))
 (let ((?x41322 (* 2.0 l_0_11_43)))
 (let ((?x41323 (* ?x41322 l_0_11_48)))
 (let ((?x41318 (* 2.0 l_0_11_42)))
 (let ((?x41319 (* ?x41318 l_0_11_47)))
 (let ((?x41314 (* 2.0 l_0_11_41)))
 (let ((?x41315 (* ?x41314 l_0_11_46)))
 (let ((?x41310 (* 2.0 l_0_11_40)))
 (let ((?x41311 (* ?x41310 l_0_11_45)))
 (let ((?x41306 (* 2.0 l_0_11_39)))
 (let ((?x41307 (* ?x41306 l_0_11_44)))
 (let ((?x41427 (* l_0_11_21 l_0_11_21)))
 (let ((?x41425 (* l_0_11_20 l_0_11_20)))
 (let ((?x41423 (* l_0_11_19 l_0_11_19)))
 (let ((?x41421 (* l_0_11_18 l_0_11_18)))
 (let ((?x41419 (* l_0_11_17 l_0_11_17)))
 (let ((?x16820 (* l_0_11_16 l_0_11_16)))
 (let ((?x41302 (* 2.0 l_0_11_15)))
 (let ((?x41303 (* ?x41302 l_0_11_20)))
 (let ((?x41298 (* 2.0 l_0_11_14)))
 (let ((?x41299 (* ?x41298 l_0_11_19)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41295 (* ?x40837 l_0_11_18)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41292 (* ?x40151 l_0_11_17)))
 (let ((?x16840 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_16) ?x41292) ?x41295) ?x41299) ?x41303)))
 (let ((?x41429 (- (- (- (- (- (- (- ?x16840 ?x16820) ?x41419) ?x41421) ?x41423) ?x41425) ?x41427) ?x41307)))
 (let ((?x41439 (+ (+ (+ (- (- (- (- ?x41429 ?x41311) ?x41315) ?x41319) ?x41323) ?x41434) ?x41436) ?x41438)))
 (= (+ (+ (+ ?x41439 ?x41440) ?x41442) ?x41444) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x41526 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x41523 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x41520 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x41517 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x41514 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x41511 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x41322 (* 2.0 l_0_11_43)))
 (let ((?x41387 (* ?x41322 l_0_11_54)))
 (let ((?x41318 (* 2.0 l_0_11_42)))
 (let ((?x41385 (* ?x41318 l_0_11_53)))
 (let ((?x41314 (* 2.0 l_0_11_41)))
 (let ((?x41383 (* ?x41314 l_0_11_52)))
 (let ((?x41310 (* 2.0 l_0_11_40)))
 (let ((?x41381 (* ?x41310 l_0_11_51)))
 (let ((?x41306 (* 2.0 l_0_11_39)))
 (let ((?x41379 (* ?x41306 l_0_11_50)))
 (let ((?x41503 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x41500 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x41497 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x41482 (* ?x40866 l_0_11_24)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x41477 (* ?x40569 l_0_11_23)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x41475 (* ?x40566 l_0_11_22)))
 (let ((?x41302 (* 2.0 l_0_11_15)))
 (let ((?x41357 (* ?x41302 l_0_11_26)))
 (let ((?x41298 (* 2.0 l_0_11_14)))
 (let ((?x41355 (* ?x41298 l_0_11_25)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41353 (* ?x40837 l_0_11_24)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41351 (* ?x40151 l_0_11_23)))
 (let ((?x16878 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_22) ?x41351) ?x41353) ?x41355) ?x41357)))
 (let ((?x41465 (+ (+ ?x16878 (* (* 2.0 l_0_11_151) l_0_11_156)) (* (* 2.0 l_0_11_152) l_0_11_157))))
 (let ((?x41471 (+ (+ ?x41465 (* (* 2.0 l_0_11_153) l_0_11_158)) (* (* 2.0 l_0_11_154) l_0_11_159))))
 (let ((?x41481 (- (- (- (+ ?x41471 (* (* 2.0 l_0_11_155) l_0_11_160)) ?x41475) ?x41477) (* (* 2.0 l_0_11_179) l_0_11_184))))
 (let ((?x41489 (- (- (- ?x41481 ?x41482) (* (* 2.0 l_0_11_180) l_0_11_185)) (* (* 2.0 l_0_11_181) l_0_11_186))))
 (let ((?x41495 (- (- ?x41489 (* (* 2.0 l_0_11_182) l_0_11_187)) (* (* 2.0 l_0_11_183) l_0_11_188))))
 (let ((?x41508 (- (- (- (- (- (- (- ?x41495 ?x41497) ?x41500) ?x41503) ?x41379) ?x41381) ?x41383) ?x41385)))
 (let ((?x41527 (+ (+ (+ (+ (+ (+ (- ?x41508 ?x41387) ?x41511) ?x41514) ?x41517) ?x41520) ?x41523) ?x41526)))
 (= ?x41527 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x41611 (* l_0_11_56 l_0_11_56)))
 (let ((?x41609 (* l_0_11_55 l_0_11_55)))
 (let ((?x41607 (* l_0_11_54 l_0_11_54)))
 (let ((?x41605 (* l_0_11_53 l_0_11_53)))
 (let ((?x41603 (* l_0_11_52 l_0_11_52)))
 (let ((?x41601 (* l_0_11_51 l_0_11_51)))
 (let ((?x41599 (* l_0_11_50 l_0_11_50)))
 (let ((?x41597 (* l_0_11_28 l_0_11_28)))
 (let ((?x41595 (* l_0_11_27 l_0_11_27)))
 (let ((?x41593 (* l_0_11_26 l_0_11_26)))
 (let ((?x41591 (* l_0_11_25 l_0_11_25)))
 (let ((?x41589 (* l_0_11_24 l_0_11_24)))
 (let ((?x41587 (* l_0_11_23 l_0_11_23)))
 (let ((?x41585 (* l_0_11_22 l_0_11_22)))
 (let ((?x41568 (+ (* (* 2.0 l_0_11_151) l_0_11_162) (* (* 2.0 l_0_11_152) l_0_11_163))))
 (let ((?x41572 (+ (+ ?x41568 (* (* 2.0 l_0_11_153) l_0_11_164)) (* (* 2.0 l_0_11_154) l_0_11_165))))
 (let ((?x41576 (- (+ ?x41572 (* (* 2.0 l_0_11_155) l_0_11_166)) (* (* 2.0 l_0_11_179) l_0_11_190))))
 (let ((?x41580 (- (- ?x41576 (* (* 2.0 l_0_11_180) l_0_11_191)) (* (* 2.0 l_0_11_181) l_0_11_192))))
 (let ((?x41584 (- (- ?x41580 (* (* 2.0 l_0_11_182) l_0_11_193)) (* (* 2.0 l_0_11_183) l_0_11_194))))
 (let ((?x41598 (- (- (- (- (- (- (- ?x41584 ?x41585) ?x41587) ?x41589) ?x41591) ?x41593) ?x41595) ?x41597)))
 (let ((?x41612 (+ (+ (+ (+ (+ (+ (+ ?x41598 ?x41599) ?x41601) ?x41603) ?x41605) ?x41607) ?x41609) ?x41611)))
 (= ?x41612 0.0)))))))))))))))))))))))
(assert
 (let ((?x14553 (* l_0_11_29 l_0_11_29)))
 (let ((?x14569 (* l_0_11_1 l_0_11_1)))
 (let ((?x17280 (- ?x14569 ?x14553)))
 (let ((?x41640 (- (+ ?x17280 (* (* 2.0 l_0_11_57) l_0_11_63)) (* (* 2.0 l_0_11_85) l_0_11_91))))
 (= ?x41640 0.0))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40131 (* ?x40130 l_0_11_30)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x41653 (* ?x40197 l_0_11_2)))
 (let ((?x41657 (- (+ ?x41653 (* (* 2.0 l_0_11_141) l_0_11_147)) (* (* 2.0 l_0_11_169) l_0_11_175))))
 (let ((?x41662 (+ (+ (- ?x41657 ?x40131) (* (* 2.0 l_0_11_58) l_0_11_63)) (* (* 2.0 l_0_11_59) l_0_11_64))))
 (let ((?x41666 (- (- ?x41662 (* (* 2.0 l_0_11_86) l_0_11_91)) (* (* 2.0 l_0_11_87) l_0_11_92))))
 (= ?x41666 0.0)))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41182 (* ?x41031 l_0_11_53)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41180 (* ?x41028 l_0_11_52)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41178 (* ?x41025 l_0_11_51)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41176 (* ?x41022 l_0_11_50)))
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40154 (* ?x40130 l_0_11_32)))
 (let ((?x40922 (* 2.0 l_0_11_24)))
 (let ((?x41172 (* ?x40922 l_0_11_9)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x41170 (* ?x40713 l_0_11_8)))
 (let ((?x40917 (* 2.0 l_0_11_22)))
 (let ((?x41168 (* ?x40917 l_0_11_7)))
 (let ((?x41056 (* 2.0 l_0_11_10)))
 (let ((?x41685 (* ?x41056 l_0_11_25)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x41684 (* ?x40197 l_0_11_4)))
 (let ((?x41692 (- (- (- (+ (+ (+ (+ ?x41684 ?x41685) ?x41168) ?x41170) ?x41172) ?x40154) ?x41176) ?x41178)))
 (let ((?x41700 (+ (+ (- (- ?x41692 ?x41180) ?x41182) (* (* 2.0 l_0_11_60) l_0_11_63)) (* (* 2.0 l_0_11_61) l_0_11_64))))
 (let ((?x41706 (- (+ ?x41700 (* (* 2.0 l_0_11_62) l_0_11_65)) (* (* 2.0 l_0_11_88) l_0_11_91))))
 (let ((?x41712 (- (- ?x41706 (* (* 2.0 l_0_11_89) l_0_11_92)) (* (* 2.0 l_0_11_90) l_0_11_93))))
 (= ?x41712 0.0))))))))))))))))))))))))))
(assert
 (let ((?x41739 (* l_0_11_94 l_0_11_94)))
 (let ((?x41737 (* l_0_11_93 l_0_11_93)))
 (let ((?x41735 (* l_0_11_92 l_0_11_92)))
 (let ((?x41733 (* l_0_11_91 l_0_11_91)))
 (let ((?x41731 (* l_0_11_66 l_0_11_66)))
 (let ((?x41729 (* l_0_11_65 l_0_11_65)))
 (let ((?x41727 (* l_0_11_64 l_0_11_64)))
 (let ((?x41725 (* l_0_11_63 l_0_11_63)))
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40183 (* ?x40130 l_0_11_35)))
 (let ((?x41724 (- (* (* 2.0 l_0_11_1) l_0_11_7) ?x40183)))
 (let ((?x41738 (- (- (- (+ (+ (+ (+ ?x41724 ?x41725) ?x41727) ?x41729) ?x41731) ?x41733) ?x41735) ?x41737)))
 (= (- ?x41738 ?x41739) 0.0))))))))))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40189 (* ?x40130 l_0_11_39)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x40199 (* ?x40197 l_0_11_11)))
 (let ((?x41747 (- ?x40199 ?x40189)))
 (let ((?x41753 (+ (+ ?x41747 (* (* 2.0 l_0_11_63) l_0_11_67)) (* (* 2.0 l_0_11_64) l_0_11_68))))
 (let ((?x41759 (+ (+ ?x41753 (* (* 2.0 l_0_11_65) l_0_11_69)) (* (* 2.0 l_0_11_66) l_0_11_70))))
 (let ((?x41765 (- (- ?x41759 (* (* 2.0 l_0_11_91) l_0_11_95)) (* (* 2.0 l_0_11_92) l_0_11_96))))
 (let ((?x41771 (- (- ?x41765 (* (* 2.0 l_0_11_93) l_0_11_97)) (* (* 2.0 l_0_11_94) l_0_11_98))))
 (= ?x41771 0.0)))))))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40207 (* ?x40130 l_0_11_44)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x40200 (* ?x40197 l_0_11_16)))
 (let ((?x41800 (- (- ?x40200 (* (* 2.0 l_0_11_100) l_0_11_91)) (* (* 2.0 l_0_11_101) l_0_11_92))))
 (let ((?x41806 (- (- ?x41800 (* (* 2.0 l_0_11_102) l_0_11_93)) (* (* 2.0 l_0_11_103) l_0_11_94))))
 (let ((?x41811 (+ (+ (- ?x41806 ?x40207) (* (* 2.0 l_0_11_63) l_0_11_72)) (* (* 2.0 l_0_11_64) l_0_11_73))))
 (let ((?x41815 (+ (+ ?x41811 (* (* 2.0 l_0_11_65) l_0_11_74)) (* (* 2.0 l_0_11_66) l_0_11_75))))
 (= ?x41815 0.0))))))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40221 (* ?x40130 l_0_11_50)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x17560 (* ?x40197 l_0_11_22)))
 (let ((?x41833 (- (- ?x17560 (* (* 2.0 l_0_11_106) l_0_11_91)) (* (* 2.0 l_0_11_107) l_0_11_92))))
 (let ((?x41839 (- (- ?x41833 (* (* 2.0 l_0_11_108) l_0_11_93)) (* (* 2.0 l_0_11_109) l_0_11_94))))
 (let ((?x41844 (+ (+ (- ?x41839 ?x40221) (* (* 2.0 l_0_11_63) l_0_11_78)) (* (* 2.0 l_0_11_64) l_0_11_79))))
 (let ((?x41848 (+ (+ ?x41844 (* (* 2.0 l_0_11_65) l_0_11_80)) (* (* 2.0 l_0_11_66) l_0_11_81))))
 (= ?x41848 0.0))))))))))
(assert
 (let ((?x40276 (* l_0_11_31 l_0_11_31)))
 (let ((?x40274 (* l_0_11_30 l_0_11_30)))
 (let ((?x40272 (* l_0_11_3 l_0_11_3)))
 (let ((?x40262 (* l_0_11_2 l_0_11_2)))
 (let ((?x41867 (- (* (* (- 2.0) l_0_11_119) l_0_11_134) (* (* 2.0 l_0_11_120) l_0_11_135))))
 (let ((?x41878 (- (- ?x41867 (* (* 2.0 l_0_11_121) l_0_11_136)) (* (* 2.0 l_0_11_122) l_0_11_137))))
 (let ((?x41882 (+ (+ ?x41878 (* (* 2.0 l_0_11_142) l_0_11_147)) (* (* 2.0 l_0_11_143) l_0_11_148))))
 (let ((?x41886 (- (- ?x41882 (* (* 2.0 l_0_11_170) l_0_11_175)) (* (* 2.0 l_0_11_171) l_0_11_176))))
 (let ((?x41891 (- (- (+ ?x41886 ?x40262) (* (* 2.0 l_0_11_203) l_0_11_218)) (* (* 2.0 l_0_11_204) l_0_11_219))))
 (let ((?x41895 (- (- ?x41891 (* (* 2.0 l_0_11_205) l_0_11_220)) (* (* 2.0 l_0_11_206) l_0_11_221))))
 (let ((?x41899 (- (- ?x41895 (* (* 2.0 l_0_11_231) l_0_11_246)) (* (* 2.0 l_0_11_232) l_0_11_247))))
 (let ((?x41903 (- (- ?x41899 (* (* 2.0 l_0_11_233) l_0_11_248)) (* (* 2.0 l_0_11_234) l_0_11_249))))
 (let ((?x41907 (- (- ?x41903 (* (* 2.0 l_0_11_259) l_0_11_274)) (* (* 2.0 l_0_11_260) l_0_11_275))))
 (let ((?x41911 (- (- ?x41907 (* (* 2.0 l_0_11_261) l_0_11_276)) (* (* 2.0 l_0_11_262) l_0_11_277))))
 (= (- (- (+ ?x41911 ?x40272) ?x40274) ?x40276) 0.0))))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40346 (* ?x40159 l_0_11_33)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40344 (* ?x40156 l_0_11_32)))
 (let ((?x40341 (* 2.0 l_0_11_3)))
 (let ((?x40342 (* ?x40341 l_0_11_5)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x40312 (* ?x40311 l_0_11_4)))
 (let ((?x41940 (+ (* (* 2.0 l_0_11_144) l_0_11_147) (* (* 2.0 l_0_11_145) l_0_11_148))))
 (let ((?x41944 (- (+ ?x41940 (* (* 2.0 l_0_11_146) l_0_11_149)) (* (* 2.0 l_0_11_172) l_0_11_175))))
 (let ((?x41948 (- (- ?x41944 (* (* 2.0 l_0_11_173) l_0_11_176)) (* (* 2.0 l_0_11_174) l_0_11_177))))
 (= (- (- (+ (+ ?x41948 ?x40312) ?x40342) ?x40344) ?x40346) 0.0)))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40437 (* ?x40159 l_0_11_36)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40435 (* ?x40156 l_0_11_35)))
 (let ((?x40341 (* 2.0 l_0_11_3)))
 (let ((?x40433 (* ?x40341 l_0_11_8)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x14907 (* ?x40311 l_0_11_7)))
 (let ((?x41971 (* l_0_11_178 l_0_11_178)))
 (let ((?x41969 (* l_0_11_177 l_0_11_177)))
 (let ((?x41967 (* l_0_11_176 l_0_11_176)))
 (let ((?x41965 (* l_0_11_175 l_0_11_175)))
 (let ((?x41963 (* l_0_11_150 l_0_11_150)))
 (let ((?x41961 (* l_0_11_149 l_0_11_149)))
 (let ((?x41962 (+ (+ (* l_0_11_147 l_0_11_147) (* l_0_11_148 l_0_11_148)) ?x41961)))
 (let ((?x41974 (+ (+ (- (- (- (- (+ ?x41962 ?x41963) ?x41965) ?x41967) ?x41969) ?x41971) ?x14907) ?x40433)))
 (= (- (- ?x41974 ?x40435) ?x40437) 0.0))))))))))))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41182 (* ?x41031 l_0_11_53)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41180 (* ?x41028 l_0_11_52)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41178 (* ?x41025 l_0_11_51)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41176 (* ?x41022 l_0_11_50)))
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40621 (* ?x40159 l_0_11_45)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40618 (* ?x40156 l_0_11_44)))
 (let ((?x40922 (* 2.0 l_0_11_24)))
 (let ((?x41172 (* ?x40922 l_0_11_9)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x41170 (* ?x40713 l_0_11_8)))
 (let ((?x40917 (* 2.0 l_0_11_22)))
 (let ((?x41168 (* ?x40917 l_0_11_7)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x40570 (* ?x40569 l_0_11_3)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x40567 (* ?x40566 l_0_11_2)))
 (let ((?x41056 (* 2.0 l_0_11_10)))
 (let ((?x41685 (* ?x41056 l_0_11_25)))
 (let ((?x18049 (+ (+ ?x41685 (* (* 2.0 l_0_11_147) l_0_11_156)) (* (* 2.0 l_0_11_148) l_0_11_157))))
 (let ((?x18048 (+ (+ ?x18049 (* (* 2.0 l_0_11_149) l_0_11_158)) (* (* 2.0 l_0_11_150) l_0_11_159))))
 (let ((?x41994 (- (- (+ (+ ?x18048 ?x40567) ?x40570) (* (* 2.0 l_0_11_175) l_0_11_184)) (* (* 2.0 l_0_11_176) l_0_11_185))))
 (let ((?x41998 (- (- ?x41994 (* (* 2.0 l_0_11_177) l_0_11_186)) (* (* 2.0 l_0_11_178) l_0_11_187))))
 (let ((?x42005 (- (- (- (- (+ (+ (+ ?x41998 ?x41168) ?x41170) ?x41172) ?x40618) ?x40621) ?x41176) ?x41178)))
 (= (- (- ?x42005 ?x41180) ?x41182) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40738 (* ?x40159 l_0_11_51)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40736 (* ?x40156 l_0_11_50)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x40714 (* ?x40713 l_0_11_3)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x40701 (* ?x40311 l_0_11_22)))
 (let ((?x42024 (+ (* (* 2.0 l_0_11_147) l_0_11_162) (* (* 2.0 l_0_11_148) l_0_11_163))))
 (let ((?x42028 (+ (+ ?x42024 (* (* 2.0 l_0_11_149) l_0_11_164)) (* (* 2.0 l_0_11_150) l_0_11_165))))
 (let ((?x42032 (- (- ?x42028 (* (* 2.0 l_0_11_175) l_0_11_190)) (* (* 2.0 l_0_11_176) l_0_11_191))))
 (let ((?x42036 (- (- ?x42032 (* (* 2.0 l_0_11_177) l_0_11_192)) (* (* 2.0 l_0_11_178) l_0_11_193))))
 (= (- (- (+ (+ ?x42036 ?x40701) ?x40714) ?x40736) ?x40738) 0.0))))))))))))))
(assert
 (let ((?x40790 (* l_0_11_6 l_0_11_6)))
 (let ((?x40788 (* l_0_11_5 l_0_11_5)))
 (let ((?x40786 (* l_0_11_4 l_0_11_4)))
 (let ((?x40784 (* l_0_11_34 l_0_11_34)))
 (let ((?x18224 (- (- (* (- l_0_11_32) l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x40784)))
 (= (+ (+ (+ ?x18224 ?x40786) ?x40788) ?x40790) 0.0)))))))
(assert
 (let ((?x40812 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x40809 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x40806 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40803 (* ?x40802 l_0_11_37)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40800 (* ?x40799 l_0_11_36)))
 (let ((?x18300 (+ (+ (- (- (* (* (- 2.0) l_0_11_32) l_0_11_35) ?x40800) ?x40803) ?x40806) ?x40809)))
 (= (+ ?x18300 ?x40812) 0.0))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40844 (* ?x40802 l_0_11_41)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40842 (* ?x40799 l_0_11_40)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40840 (* ?x16116 l_0_11_39)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x40838 (* ?x40837 l_0_11_6)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x40835 (* ?x40151 l_0_11_5)))
 (let ((?x16200 (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x40835) ?x40838)))
 (= (- (- (- ?x16200 ?x40840) ?x40842) ?x40844) 0.0)))))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40876 (* ?x40802 l_0_11_46)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40873 (* ?x40799 l_0_11_45)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40870 (* ?x16116 l_0_11_44)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x40867 (* ?x40866 l_0_11_6)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x40864 (* ?x40569 l_0_11_5)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x40856 (* ?x40566 l_0_11_4)))
 (= (- (- (- (+ (+ ?x40856 ?x40864) ?x40867) ?x40870) ?x40873) ?x40876) 0.0))))))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40929 (* ?x40802 l_0_11_52)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40927 (* ?x40799 l_0_11_51)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40925 (* ?x16116 l_0_11_50)))
 (let ((?x40922 (* 2.0 l_0_11_24)))
 (let ((?x40923 (* ?x40922 l_0_11_6)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x40920 (* ?x40713 l_0_11_5)))
 (let ((?x40917 (* 2.0 l_0_11_22)))
 (let ((?x40918 (* ?x40917 l_0_11_4)))
 (let ((?x18423 (- (- (- (+ (+ ?x40918 ?x40920) ?x40923) ?x40925) ?x40927) ?x40929)))
 (= ?x18423 0.0)))))))))))))))
(assert
 (let ((?x40997 (* l_0_11_9 l_0_11_9)))
 (let ((?x40995 (* l_0_11_8 l_0_11_8)))
 (let ((?x40993 (* l_0_11_7 l_0_11_7)))
 (let ((?x40991 (* l_0_11_38 l_0_11_38)))
 (let ((?x40989 (* l_0_11_37 l_0_11_37)))
 (let ((?x40987 (* l_0_11_36 l_0_11_36)))
 (let ((?x18465 (- (- (- (* l_0_11_10 l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x40987) ?x40989)))
 (= (+ (+ (+ (- ?x18465 ?x40991) ?x40993) ?x40995) ?x40997) 0.0)))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41032 (* ?x41031 l_0_11_42)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41029 (* ?x41028 l_0_11_41)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41026 (* ?x41025 l_0_11_40)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41023 (* ?x41022 l_0_11_39)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41020 (* ?x40837 l_0_11_9)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41018 (* ?x40151 l_0_11_8)))
 (let ((?x14708 (* 2.0 l_0_11_11)))
 (let ((?x41016 (* ?x14708 l_0_11_7)))
 (let ((?x41056 (* 2.0 l_0_11_10)))
 (let ((?x41058 (* ?x41056 l_0_11_14)))
 (let ((?x42079 (- (- (- (- (+ (+ (+ ?x41058 ?x41016) ?x41018) ?x41020) ?x41023) ?x41026) ?x41029) ?x41032)))
 (= ?x42079 0.0)))))))))))))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41089 (* ?x41031 l_0_11_47)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41086 (* ?x41028 l_0_11_46)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41083 (* ?x41025 l_0_11_45)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41080 (* ?x41022 l_0_11_44)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x41077 (* ?x40866 l_0_11_9)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x41075 (* ?x40569 l_0_11_8)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x41073 (* ?x40566 l_0_11_7)))
 (let ((?x41056 (* 2.0 l_0_11_10)))
 (let ((?x41060 (* ?x41056 l_0_11_19)))
 (let ((?x42095 (- (- (- (- (+ (+ (+ ?x41060 ?x41073) ?x41075) ?x41077) ?x41080) ?x41083) ?x41086) ?x41089)))
 (= ?x42095 0.0)))))))))))))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41182 (* ?x41031 l_0_11_53)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41180 (* ?x41028 l_0_11_52)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41178 (* ?x41025 l_0_11_51)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41176 (* ?x41022 l_0_11_50)))
 (let ((?x40922 (* 2.0 l_0_11_24)))
 (let ((?x41172 (* ?x40922 l_0_11_9)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x41170 (* ?x40713 l_0_11_8)))
 (let ((?x40917 (* 2.0 l_0_11_22)))
 (let ((?x41168 (* ?x40917 l_0_11_7)))
 (let ((?x41056 (* 2.0 l_0_11_10)))
 (let ((?x41685 (* ?x41056 l_0_11_25)))
 (let ((?x18570 (- (- (- (- (+ (+ (+ ?x41685 ?x41168) ?x41170) ?x41172) ?x41176) ?x41178) ?x41180) ?x41182)))
 (= ?x18570 0.0)))))))))))))))))))
(assert
 (let ((?x41269 (* l_0_11_43 l_0_11_43)))
 (let ((?x41267 (* l_0_11_42 l_0_11_42)))
 (let ((?x41265 (* l_0_11_41 l_0_11_41)))
 (let ((?x41263 (* l_0_11_40 l_0_11_40)))
 (let ((?x41261 (* l_0_11_39 l_0_11_39)))
 (let ((?x41259 (* l_0_11_15 l_0_11_15)))
 (let ((?x41257 (* l_0_11_14 l_0_11_14)))
 (let ((?x41244 (* l_0_11_13 l_0_11_13)))
 (let ((?x42097 (+ (+ (+ (* l_0_11_11 l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x41244) ?x41257)))
 (= (- (- (- (- (- (+ ?x42097 ?x41259) ?x41261) ?x41263) ?x41265) ?x41267) ?x41269) 0.0)))))))))))
(assert
 (let ((?x41322 (* 2.0 l_0_11_43)))
 (let ((?x41323 (* ?x41322 l_0_11_48)))
 (let ((?x41318 (* 2.0 l_0_11_42)))
 (let ((?x41319 (* ?x41318 l_0_11_47)))
 (let ((?x41314 (* 2.0 l_0_11_41)))
 (let ((?x41315 (* ?x41314 l_0_11_46)))
 (let ((?x41310 (* 2.0 l_0_11_40)))
 (let ((?x41311 (* ?x41310 l_0_11_45)))
 (let ((?x41306 (* 2.0 l_0_11_39)))
 (let ((?x41307 (* ?x41306 l_0_11_44)))
 (let ((?x41302 (* 2.0 l_0_11_15)))
 (let ((?x41303 (* ?x41302 l_0_11_20)))
 (let ((?x41298 (* 2.0 l_0_11_14)))
 (let ((?x41299 (* ?x41298 l_0_11_19)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41295 (* ?x40837 l_0_11_18)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41292 (* ?x40151 l_0_11_17)))
 (let ((?x16840 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_16) ?x41292) ?x41295) ?x41299) ?x41303)))
 (= (- (- (- (- (- ?x16840 ?x41307) ?x41311) ?x41315) ?x41319) ?x41323) 0.0)))))))))))))))))))))
(assert
 (let ((?x41322 (* 2.0 l_0_11_43)))
 (let ((?x41387 (* ?x41322 l_0_11_54)))
 (let ((?x41318 (* 2.0 l_0_11_42)))
 (let ((?x41385 (* ?x41318 l_0_11_53)))
 (let ((?x41314 (* 2.0 l_0_11_41)))
 (let ((?x41383 (* ?x41314 l_0_11_52)))
 (let ((?x41310 (* 2.0 l_0_11_40)))
 (let ((?x41381 (* ?x41310 l_0_11_51)))
 (let ((?x41306 (* 2.0 l_0_11_39)))
 (let ((?x41379 (* ?x41306 l_0_11_50)))
 (let ((?x41302 (* 2.0 l_0_11_15)))
 (let ((?x41357 (* ?x41302 l_0_11_26)))
 (let ((?x41298 (* 2.0 l_0_11_14)))
 (let ((?x41355 (* ?x41298 l_0_11_25)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41353 (* ?x40837 l_0_11_24)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41351 (* ?x40151 l_0_11_23)))
 (let ((?x16878 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_22) ?x41351) ?x41353) ?x41355) ?x41357)))
 (let ((?x42136 (- (- (- (- (- ?x16878 ?x41379) ?x41381) ?x41383) ?x41385) ?x41387)))
 (= ?x42136 0.0))))))))))))))))))))))
(assert
 (let ((?x41444 (* l_0_11_49 l_0_11_49)))
 (let ((?x41442 (* l_0_11_48 l_0_11_48)))
 (let ((?x41440 (* l_0_11_47 l_0_11_47)))
 (let ((?x41438 (* l_0_11_46 l_0_11_46)))
 (let ((?x41436 (* l_0_11_45 l_0_11_45)))
 (let ((?x41434 (* l_0_11_44 l_0_11_44)))
 (let ((?x41427 (* l_0_11_21 l_0_11_21)))
 (let ((?x41425 (* l_0_11_20 l_0_11_20)))
 (let ((?x41423 (* l_0_11_19 l_0_11_19)))
 (let ((?x41421 (* l_0_11_18 l_0_11_18)))
 (let ((?x42152 (+ (+ (+ (* l_0_11_16 l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x41421) ?x41423)))
 (let ((?x42159 (- (- (- (- (- (+ (+ ?x42152 ?x41425) ?x41427) ?x41434) ?x41436) ?x41438) ?x41440) ?x41442)))
 (= (- ?x42159 ?x41444) 0.0))))))))))))))
(assert
 (let ((?x41526 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x41523 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x41520 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x41517 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x41514 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x41511 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x41503 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x41500 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x41497 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x41482 (* ?x40866 l_0_11_24)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x41477 (* ?x40569 l_0_11_23)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x41475 (* ?x40566 l_0_11_22)))
 (let ((?x18633 (- (- (+ (+ (+ (+ (+ ?x41475 ?x41477) ?x41482) ?x41497) ?x41500) ?x41503) ?x41511) ?x41514)))
 (= (- (- (- (- ?x18633 ?x41517) ?x41520) ?x41523) ?x41526) 0.0))))))))))))))))))
(assert
 (let ((?x41611 (* l_0_11_56 l_0_11_56)))
 (let ((?x41609 (* l_0_11_55 l_0_11_55)))
 (let ((?x41607 (* l_0_11_54 l_0_11_54)))
 (let ((?x41605 (* l_0_11_53 l_0_11_53)))
 (let ((?x41603 (* l_0_11_52 l_0_11_52)))
 (let ((?x41601 (* l_0_11_51 l_0_11_51)))
 (let ((?x41599 (* l_0_11_50 l_0_11_50)))
 (let ((?x41597 (* l_0_11_28 l_0_11_28)))
 (let ((?x41595 (* l_0_11_27 l_0_11_27)))
 (let ((?x41593 (* l_0_11_26 l_0_11_26)))
 (let ((?x41591 (* l_0_11_25 l_0_11_25)))
 (let ((?x41589 (* l_0_11_24 l_0_11_24)))
 (let ((?x18686 (+ (+ (+ (* l_0_11_22 l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x41589) ?x41591)))
 (let ((?x18708 (- (- (- (- (+ (+ (+ ?x18686 ?x41593) ?x41595) ?x41597) ?x41599) ?x41601) ?x41603) ?x41605)))
 (= (- (- (- ?x18708 ?x41607) ?x41609) ?x41611) 0.0))))))))))))))))
(assert
 (let ((?x14553 (* l_0_11_29 l_0_11_29)))
 (let ((?x14569 (* l_0_11_1 l_0_11_1)))
 (let ((?x17280 (- ?x14569 ?x14553)))
 (= ?x17280 0.0)))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40131 (* ?x40130 l_0_11_30)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x41653 (* ?x40197 l_0_11_2)))
 (= (- ?x41653 ?x40131) 0.0))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40154 (* ?x40130 l_0_11_32)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x41684 (* ?x40197 l_0_11_4)))
 (= (- ?x41684 ?x40154) 0.0))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40183 (* ?x40130 l_0_11_35)))
 (let ((?x41724 (- (* (* 2.0 l_0_11_1) l_0_11_7) ?x40183)))
 (= ?x41724 0.0)))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40189 (* ?x40130 l_0_11_39)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x40199 (* ?x40197 l_0_11_11)))
 (let ((?x41747 (- ?x40199 ?x40189)))
 (= ?x41747 0.0)))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40207 (* ?x40130 l_0_11_44)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x40200 (* ?x40197 l_0_11_16)))
 (= (- ?x40200 ?x40207) 0.0))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40221 (* ?x40130 l_0_11_50)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x17560 (* ?x40197 l_0_11_22)))
 (let ((?x42175 (- (+ (- ?x17560 ?x40221) (* (* 2.0 l_0_11_57) l_0_11_60)) (* (* 2.0 l_0_11_85) l_0_11_88))))
 (= ?x42175 0.0)))))))
(assert
 (let ((?x40276 (* l_0_11_31 l_0_11_31)))
 (let ((?x40274 (* l_0_11_30 l_0_11_30)))
 (let ((?x40272 (* l_0_11_3 l_0_11_3)))
 (let ((?x40262 (* l_0_11_2 l_0_11_2)))
 (let ((?x42191 (- (* (* (- 2.0) l_0_11_113) l_0_11_116) (* (* 2.0 l_0_11_197) l_0_11_200))))
 (let ((?x42196 (- (- (+ ?x42191 ?x40262) (* (* 2.0 l_0_11_225) l_0_11_228)) (* (* 2.0 l_0_11_253) l_0_11_256))))
 (= (- (- (+ ?x42196 ?x40272) ?x40274) ?x40276) 0.0))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40346 (* ?x40159 l_0_11_33)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40344 (* ?x40156 l_0_11_32)))
 (let ((?x40341 (* 2.0 l_0_11_3)))
 (let ((?x40342 (* ?x40341 l_0_11_5)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x40312 (* ?x40311 l_0_11_4)))
 (= (- (- (+ ?x40312 ?x40342) ?x40344) ?x40346) 0.0))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40437 (* ?x40159 l_0_11_36)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40435 (* ?x40156 l_0_11_35)))
 (let ((?x40341 (* 2.0 l_0_11_3)))
 (let ((?x40433 (* ?x40341 l_0_11_8)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x14907 (* ?x40311 l_0_11_7)))
 (= (- (- (+ ?x14907 ?x40433) ?x40435) ?x40437) 0.0))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40621 (* ?x40159 l_0_11_45)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40618 (* ?x40156 l_0_11_44)))
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40154 (* ?x40130 l_0_11_32)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x40570 (* ?x40569 l_0_11_3)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x40567 (* ?x40566 l_0_11_2)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x41684 (* ?x40197 l_0_11_4)))
 (= (- (- (- (+ (+ ?x41684 ?x40567) ?x40570) ?x40154) ?x40618) ?x40621) 0.0))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40738 (* ?x40159 l_0_11_51)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40736 (* ?x40156 l_0_11_50)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x40714 (* ?x40713 l_0_11_3)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x40701 (* ?x40311 l_0_11_22)))
 (let ((?x42258 (- (* (* 2.0 l_0_11_141) l_0_11_144) (* (* 2.0 l_0_11_169) l_0_11_172))))
 (let ((?x42264 (+ (- (- (+ (+ ?x42258 ?x40701) ?x40714) ?x40736) ?x40738) (* (* 2.0 l_0_11_58) l_0_11_60))))
 (let ((?x42268 (- (+ ?x42264 (* (* 2.0 l_0_11_59) l_0_11_61)) (* (* 2.0 l_0_11_86) l_0_11_88))))
 (= (- ?x42268 (* (* 2.0 l_0_11_87) l_0_11_89)) 0.0)))))))))))))
(assert
 (let ((?x40790 (* l_0_11_6 l_0_11_6)))
 (let ((?x40788 (* l_0_11_5 l_0_11_5)))
 (let ((?x40786 (* l_0_11_4 l_0_11_4)))
 (let ((?x40784 (* l_0_11_34 l_0_11_34)))
 (let ((?x18224 (- (- (* (- l_0_11_32) l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x40784)))
 (= (+ (+ (+ ?x18224 ?x40786) ?x40788) ?x40790) 0.0)))))))
(assert
 (let ((?x40812 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x40809 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x40806 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40803 (* ?x40802 l_0_11_37)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40800 (* ?x40799 l_0_11_36)))
 (let ((?x18300 (+ (+ (- (- (* (* (- 2.0) l_0_11_32) l_0_11_35) ?x40800) ?x40803) ?x40806) ?x40809)))
 (= (+ ?x18300 ?x40812) 0.0))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40844 (* ?x40802 l_0_11_41)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40842 (* ?x40799 l_0_11_40)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40840 (* ?x16116 l_0_11_39)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x40838 (* ?x40837 l_0_11_6)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x40835 (* ?x40151 l_0_11_5)))
 (let ((?x16200 (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x40835) ?x40838)))
 (= (- (- (- ?x16200 ?x40840) ?x40842) ?x40844) 0.0)))))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40876 (* ?x40802 l_0_11_46)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40873 (* ?x40799 l_0_11_45)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40870 (* ?x16116 l_0_11_44)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x40867 (* ?x40866 l_0_11_6)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x40864 (* ?x40569 l_0_11_5)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x40856 (* ?x40566 l_0_11_4)))
 (= (- (- (- (+ (+ ?x40856 ?x40864) ?x40867) ?x40870) ?x40873) ?x40876) 0.0))))))))))))))
(assert
 (let ((?x42313 (* l_0_11_90 l_0_11_90)))
 (let ((?x42311 (* l_0_11_89 l_0_11_89)))
 (let ((?x42309 (* l_0_11_88 l_0_11_88)))
 (let ((?x42307 (* l_0_11_62 l_0_11_62)))
 (let ((?x42305 (* l_0_11_61 l_0_11_61)))
 (let ((?x42303 (* l_0_11_60 l_0_11_60)))
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40929 (* ?x40802 l_0_11_52)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40927 (* ?x40799 l_0_11_51)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40925 (* ?x16116 l_0_11_50)))
 (let ((?x40922 (* 2.0 l_0_11_24)))
 (let ((?x40923 (* ?x40922 l_0_11_6)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x40920 (* ?x40713 l_0_11_5)))
 (let ((?x40917 (* 2.0 l_0_11_22)))
 (let ((?x40918 (* ?x40917 l_0_11_4)))
 (let ((?x18423 (- (- (- (+ (+ ?x40918 ?x40920) ?x40923) ?x40925) ?x40927) ?x40929)))
 (= (- (- (- (+ (+ (+ ?x18423 ?x42303) ?x42305) ?x42307) ?x42309) ?x42311) ?x42313) 0.0)))))))))))))))))))))
(assert
 (let ((?x40997 (* l_0_11_9 l_0_11_9)))
 (let ((?x40995 (* l_0_11_8 l_0_11_8)))
 (let ((?x40993 (* l_0_11_7 l_0_11_7)))
 (let ((?x40991 (* l_0_11_38 l_0_11_38)))
 (let ((?x40989 (* l_0_11_37 l_0_11_37)))
 (let ((?x40987 (* l_0_11_36 l_0_11_36)))
 (let ((?x18465 (- (- (- (* l_0_11_10 l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x40987) ?x40989)))
 (= (+ (+ (+ (- ?x18465 ?x40991) ?x40993) ?x40995) ?x40997) 0.0)))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41032 (* ?x41031 l_0_11_42)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41029 (* ?x41028 l_0_11_41)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41026 (* ?x41025 l_0_11_40)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41023 (* ?x41022 l_0_11_39)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41020 (* ?x40837 l_0_11_9)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41018 (* ?x40151 l_0_11_8)))
 (let ((?x14708 (* 2.0 l_0_11_11)))
 (let ((?x41016 (* ?x14708 l_0_11_7)))
 (let ((?x41056 (* 2.0 l_0_11_10)))
 (let ((?x41058 (* ?x41056 l_0_11_14)))
 (let ((?x42079 (- (- (- (- (+ (+ (+ ?x41058 ?x41016) ?x41018) ?x41020) ?x41023) ?x41026) ?x41029) ?x41032)))
 (= ?x42079 0.0)))))))))))))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41089 (* ?x41031 l_0_11_47)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41086 (* ?x41028 l_0_11_46)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41083 (* ?x41025 l_0_11_45)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41080 (* ?x41022 l_0_11_44)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x41077 (* ?x40866 l_0_11_9)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x41075 (* ?x40569 l_0_11_8)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x41073 (* ?x40566 l_0_11_7)))
 (let ((?x41056 (* 2.0 l_0_11_10)))
 (let ((?x41060 (* ?x41056 l_0_11_19)))
 (let ((?x42095 (- (- (- (- (+ (+ (+ ?x41060 ?x41073) ?x41075) ?x41077) ?x41080) ?x41083) ?x41086) ?x41089)))
 (= ?x42095 0.0)))))))))))))))))))
(assert
 (let ((?x41269 (* l_0_11_43 l_0_11_43)))
 (let ((?x41267 (* l_0_11_42 l_0_11_42)))
 (let ((?x41265 (* l_0_11_41 l_0_11_41)))
 (let ((?x41263 (* l_0_11_40 l_0_11_40)))
 (let ((?x41261 (* l_0_11_39 l_0_11_39)))
 (let ((?x41259 (* l_0_11_15 l_0_11_15)))
 (let ((?x41257 (* l_0_11_14 l_0_11_14)))
 (let ((?x41244 (* l_0_11_13 l_0_11_13)))
 (let ((?x42097 (+ (+ (+ (* l_0_11_11 l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x41244) ?x41257)))
 (= (- (- (- (- (- (+ ?x42097 ?x41259) ?x41261) ?x41263) ?x41265) ?x41267) ?x41269) 0.0)))))))))))
(assert
 (let ((?x41322 (* 2.0 l_0_11_43)))
 (let ((?x41323 (* ?x41322 l_0_11_48)))
 (let ((?x41318 (* 2.0 l_0_11_42)))
 (let ((?x41319 (* ?x41318 l_0_11_47)))
 (let ((?x41314 (* 2.0 l_0_11_41)))
 (let ((?x41315 (* ?x41314 l_0_11_46)))
 (let ((?x41310 (* 2.0 l_0_11_40)))
 (let ((?x41311 (* ?x41310 l_0_11_45)))
 (let ((?x41306 (* 2.0 l_0_11_39)))
 (let ((?x41307 (* ?x41306 l_0_11_44)))
 (let ((?x41302 (* 2.0 l_0_11_15)))
 (let ((?x41303 (* ?x41302 l_0_11_20)))
 (let ((?x41298 (* 2.0 l_0_11_14)))
 (let ((?x41299 (* ?x41298 l_0_11_19)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41295 (* ?x40837 l_0_11_18)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41292 (* ?x40151 l_0_11_17)))
 (let ((?x16840 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_16) ?x41292) ?x41295) ?x41299) ?x41303)))
 (= (- (- (- (- (- ?x16840 ?x41307) ?x41311) ?x41315) ?x41319) ?x41323) 0.0)))))))))))))))))))))
(assert
 (let ((?x41322 (* 2.0 l_0_11_43)))
 (let ((?x41387 (* ?x41322 l_0_11_54)))
 (let ((?x41318 (* 2.0 l_0_11_42)))
 (let ((?x41385 (* ?x41318 l_0_11_53)))
 (let ((?x41314 (* 2.0 l_0_11_41)))
 (let ((?x41383 (* ?x41314 l_0_11_52)))
 (let ((?x41310 (* 2.0 l_0_11_40)))
 (let ((?x41381 (* ?x41310 l_0_11_51)))
 (let ((?x41306 (* 2.0 l_0_11_39)))
 (let ((?x41379 (* ?x41306 l_0_11_50)))
 (let ((?x41302 (* 2.0 l_0_11_15)))
 (let ((?x41357 (* ?x41302 l_0_11_26)))
 (let ((?x41298 (* 2.0 l_0_11_14)))
 (let ((?x41355 (* ?x41298 l_0_11_25)))
 (let ((?x40837 (* 2.0 l_0_11_13)))
 (let ((?x41353 (* ?x40837 l_0_11_24)))
 (let ((?x40151 (* 2.0 l_0_11_12)))
 (let ((?x41351 (* ?x40151 l_0_11_23)))
 (let ((?x16878 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_22) ?x41351) ?x41353) ?x41355) ?x41357)))
 (let ((?x42136 (- (- (- (- (- ?x16878 ?x41379) ?x41381) ?x41383) ?x41385) ?x41387)))
 (let ((?x42330 (+ (+ ?x42136 (* (* 2.0 l_0_11_60) l_0_11_67)) (* (* 2.0 l_0_11_61) l_0_11_68))))
 (let ((?x42334 (- (+ ?x42330 (* (* 2.0 l_0_11_62) l_0_11_69)) (* (* 2.0 l_0_11_88) l_0_11_95))))
 (let ((?x42338 (- (- ?x42334 (* (* 2.0 l_0_11_89) l_0_11_96)) (* (* 2.0 l_0_11_90) l_0_11_97))))
 (= ?x42338 0.0)))))))))))))))))))))))))
(assert
 (let ((?x41444 (* l_0_11_49 l_0_11_49)))
 (let ((?x41442 (* l_0_11_48 l_0_11_48)))
 (let ((?x41440 (* l_0_11_47 l_0_11_47)))
 (let ((?x41438 (* l_0_11_46 l_0_11_46)))
 (let ((?x41436 (* l_0_11_45 l_0_11_45)))
 (let ((?x41434 (* l_0_11_44 l_0_11_44)))
 (let ((?x41427 (* l_0_11_21 l_0_11_21)))
 (let ((?x41425 (* l_0_11_20 l_0_11_20)))
 (let ((?x41423 (* l_0_11_19 l_0_11_19)))
 (let ((?x41421 (* l_0_11_18 l_0_11_18)))
 (let ((?x42152 (+ (+ (+ (* l_0_11_16 l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x41421) ?x41423)))
 (let ((?x42159 (- (- (- (- (- (+ (+ ?x42152 ?x41425) ?x41427) ?x41434) ?x41436) ?x41438) ?x41440) ?x41442)))
 (= (- ?x42159 ?x41444) 0.0))))))))))))))
(assert
 (let ((?x41526 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x41523 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x41520 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x41517 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x41514 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x41511 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x41503 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x41500 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x41497 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x41482 (* ?x40866 l_0_11_24)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x41477 (* ?x40569 l_0_11_23)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x41475 (* ?x40566 l_0_11_22)))
 (let ((?x42369 (- (* (* (- 2.0) l_0_11_100) l_0_11_88) (* (* 2.0 l_0_11_101) l_0_11_89))))
 (let ((?x42374 (+ (+ (+ (- ?x42369 (* (* 2.0 l_0_11_102) l_0_11_90)) ?x41475) ?x41477) ?x41482)))
 (let ((?x42381 (- (- (- (- (+ (+ (+ ?x42374 ?x41497) ?x41500) ?x41503) ?x41511) ?x41514) ?x41517) ?x41520)))
 (let ((?x42387 (+ (+ (- (- ?x42381 ?x41523) ?x41526) (* (* 2.0 l_0_11_60) l_0_11_72)) (* (* 2.0 l_0_11_61) l_0_11_73))))
 (= (+ ?x42387 (* (* 2.0 l_0_11_62) l_0_11_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x41611 (* l_0_11_56 l_0_11_56)))
 (let ((?x41609 (* l_0_11_55 l_0_11_55)))
 (let ((?x41607 (* l_0_11_54 l_0_11_54)))
 (let ((?x41605 (* l_0_11_53 l_0_11_53)))
 (let ((?x41603 (* l_0_11_52 l_0_11_52)))
 (let ((?x41601 (* l_0_11_51 l_0_11_51)))
 (let ((?x41599 (* l_0_11_50 l_0_11_50)))
 (let ((?x41597 (* l_0_11_28 l_0_11_28)))
 (let ((?x41595 (* l_0_11_27 l_0_11_27)))
 (let ((?x41593 (* l_0_11_26 l_0_11_26)))
 (let ((?x41591 (* l_0_11_25 l_0_11_25)))
 (let ((?x41589 (* l_0_11_24 l_0_11_24)))
 (let ((?x41587 (* l_0_11_23 l_0_11_23)))
 (let ((?x41585 (* l_0_11_22 l_0_11_22)))
 (let ((?x42429 (- (* (* (- 2.0) l_0_11_106) l_0_11_88) (* (* 2.0 l_0_11_107) l_0_11_89))))
 (let ((?x42434 (+ (+ (+ (- ?x42429 (* (* 2.0 l_0_11_108) l_0_11_90)) ?x41585) ?x41587) ?x41589)))
 (let ((?x42441 (- (- (- (+ (+ (+ (+ ?x42434 ?x41591) ?x41593) ?x41595) ?x41597) ?x41599) ?x41601) ?x41603)))
 (let ((?x42447 (+ (- (- (- (- ?x42441 ?x41605) ?x41607) ?x41609) ?x41611) (* (* 2.0 l_0_11_60) l_0_11_78))))
 (let ((?x42451 (+ (+ ?x42447 (* (* 2.0 l_0_11_61) l_0_11_79)) (* (* 2.0 l_0_11_62) l_0_11_80))))
 (= ?x42451 0.0)))))))))))))))))))))
(assert
 (let ((?x14553 (* l_0_11_29 l_0_11_29)))
 (let ((?x14569 (* l_0_11_1 l_0_11_1)))
 (let ((?x17280 (- ?x14569 ?x14553)))
 (= ?x17280 0.0)))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40131 (* ?x40130 l_0_11_30)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x41653 (* ?x40197 l_0_11_2)))
 (let ((?x42493 (- (- ?x41653 (* (* 2.0 l_0_11_113) l_0_11_128)) (* (* 2.0 l_0_11_197) l_0_11_212))))
 (let ((?x42497 (- (- ?x42493 (* (* 2.0 l_0_11_225) l_0_11_240)) (* (* 2.0 l_0_11_253) l_0_11_268))))
 (= (- ?x42497 ?x40131) 0.0))))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40183 (* ?x40130 l_0_11_35)))
 (let ((?x41724 (- (* (* 2.0 l_0_11_1) l_0_11_7) ?x40183)))
 (= ?x41724 0.0)))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40207 (* ?x40130 l_0_11_44)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x40200 (* ?x40197 l_0_11_16)))
 (= (- ?x40200 ?x40207) 0.0))))))
(assert
 (let ((?x40130 (* 2.0 l_0_11_29)))
 (let ((?x40221 (* ?x40130 l_0_11_50)))
 (let ((?x40197 (* 2.0 l_0_11_1)))
 (let ((?x17560 (* ?x40197 l_0_11_22)))
 (let ((?x42531 (- (- ?x17560 (* (* 2.0 l_0_11_100) l_0_11_86)) (* (* 2.0 l_0_11_101) l_0_11_87))))
 (let ((?x42535 (- (+ ?x42531 (* (* 2.0 l_0_11_141) l_0_11_156)) (* (* 2.0 l_0_11_169) l_0_11_184))))
 (let ((?x42540 (+ (+ (- ?x42535 ?x40221) (* (* 2.0 l_0_11_58) l_0_11_72)) (* (* 2.0 l_0_11_59) l_0_11_73))))
 (= ?x42540 0.0)))))))))
(assert
 (let ((?x40276 (* l_0_11_31 l_0_11_31)))
 (let ((?x40274 (* l_0_11_30 l_0_11_30)))
 (let ((?x40272 (* l_0_11_3 l_0_11_3)))
 (let ((?x40262 (* l_0_11_2 l_0_11_2)))
 (let ((?x42569 (- (* (* (- 2.0) l_0_11_114) l_0_11_128) (* (* 2.0 l_0_11_115) l_0_11_129))))
 (let ((?x42578 (- (- ?x42569 (* (* 2.0 l_0_11_198) l_0_11_212)) (* (* 2.0 l_0_11_199) l_0_11_213))))
 (let ((?x42583 (- (- (+ ?x42578 ?x40262) (* (* 2.0 l_0_11_226) l_0_11_240)) (* (* 2.0 l_0_11_227) l_0_11_241))))
 (let ((?x42587 (- (- ?x42583 (* (* 2.0 l_0_11_254) l_0_11_268)) (* (* 2.0 l_0_11_255) l_0_11_269))))
 (= (- (- (+ ?x42587 ?x40272) ?x40274) ?x40276) 0.0))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40346 (* ?x40159 l_0_11_33)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40344 (* ?x40156 l_0_11_32)))
 (let ((?x40341 (* 2.0 l_0_11_3)))
 (let ((?x40342 (* ?x40341 l_0_11_5)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x40312 (* ?x40311 l_0_11_4)))
 (let ((?x42645 (- (* (* (- 2.0) l_0_11_116) l_0_11_128) (* (* 2.0 l_0_11_117) l_0_11_129))))
 (let ((?x42650 (- (+ (- ?x42645 (* (* 2.0 l_0_11_118) l_0_11_130)) ?x40312) (* (* 2.0 l_0_11_200) l_0_11_212))))
 (let ((?x42654 (- (- ?x42650 (* (* 2.0 l_0_11_201) l_0_11_213)) (* (* 2.0 l_0_11_202) l_0_11_214))))
 (let ((?x42658 (- (- ?x42654 (* (* 2.0 l_0_11_228) l_0_11_240)) (* (* 2.0 l_0_11_229) l_0_11_241))))
 (let ((?x42662 (- (- ?x42658 (* (* 2.0 l_0_11_230) l_0_11_242)) (* (* 2.0 l_0_11_256) l_0_11_268))))
 (let ((?x42666 (- (- ?x42662 (* (* 2.0 l_0_11_257) l_0_11_269)) (* (* 2.0 l_0_11_258) l_0_11_270))))
 (= (- (- (+ ?x42666 ?x40342) ?x40344) ?x40346) 0.0))))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40437 (* ?x40159 l_0_11_36)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40435 (* ?x40156 l_0_11_35)))
 (let ((?x40341 (* 2.0 l_0_11_3)))
 (let ((?x40433 (* ?x40341 l_0_11_8)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x14907 (* ?x40311 l_0_11_7)))
 (let ((?x19050 (- (* (* (- 2.0) l_0_11_119) l_0_11_128) (* (* 2.0 l_0_11_120) l_0_11_129))))
 (let ((?x18889 (- (- ?x19050 (* (* 2.0 l_0_11_121) l_0_11_130)) (* (* 2.0 l_0_11_122) l_0_11_131))))
 (let ((?x18845 (- (- (+ ?x18889 ?x14907) (* (* 2.0 l_0_11_203) l_0_11_212)) (* (* 2.0 l_0_11_204) l_0_11_213))))
 (let ((?x18894 (- (- ?x18845 (* (* 2.0 l_0_11_205) l_0_11_214)) (* (* 2.0 l_0_11_206) l_0_11_215))))
 (let ((?x42696 (- (- ?x18894 (* (* 2.0 l_0_11_231) l_0_11_240)) (* (* 2.0 l_0_11_232) l_0_11_241))))
 (let ((?x42700 (- (- ?x42696 (* (* 2.0 l_0_11_233) l_0_11_242)) (* (* 2.0 l_0_11_234) l_0_11_243))))
 (let ((?x42704 (- (- ?x42700 (* (* 2.0 l_0_11_259) l_0_11_268)) (* (* 2.0 l_0_11_260) l_0_11_269))))
 (let ((?x42708 (- (- ?x42704 (* (* 2.0 l_0_11_261) l_0_11_270)) (* (* 2.0 l_0_11_262) l_0_11_271))))
 (= (- (- (+ ?x42708 ?x40433) ?x40435) ?x40437) 0.0))))))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40621 (* ?x40159 l_0_11_45)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40618 (* ?x40156 l_0_11_44)))
 (let ((?x42819 (* l_0_11_273 l_0_11_273)))
 (let ((?x42817 (* l_0_11_272 l_0_11_272)))
 (let ((?x42815 (* l_0_11_271 l_0_11_271)))
 (let ((?x42813 (* l_0_11_270 l_0_11_270)))
 (let ((?x42811 (* l_0_11_269 l_0_11_269)))
 (let ((?x42809 (* l_0_11_268 l_0_11_268)))
 (let ((?x42807 (* l_0_11_245 l_0_11_245)))
 (let ((?x42805 (* l_0_11_244 l_0_11_244)))
 (let ((?x42803 (* l_0_11_243 l_0_11_243)))
 (let ((?x42801 (* l_0_11_242 l_0_11_242)))
 (let ((?x42799 (* l_0_11_241 l_0_11_241)))
 (let ((?x42797 (* l_0_11_240 l_0_11_240)))
 (let ((?x42795 (* l_0_11_217 l_0_11_217)))
 (let ((?x42793 (* l_0_11_216 l_0_11_216)))
 (let ((?x42791 (* l_0_11_215 l_0_11_215)))
 (let ((?x42789 (* l_0_11_214 l_0_11_214)))
 (let ((?x42787 (* l_0_11_213 l_0_11_213)))
 (let ((?x42785 (* l_0_11_212 l_0_11_212)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x40570 (* ?x40569 l_0_11_3)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x40567 (* ?x40566 l_0_11_2)))
 (let ((?x42770 (- (* (* (- 1.0) l_0_11_128) l_0_11_128) (* (* 1.0 l_0_11_129) l_0_11_129))))
 (let ((?x42776 (- (- ?x42770 (* (* 1.0 l_0_11_130) l_0_11_130)) (* (* 1.0 l_0_11_131) l_0_11_131))))
 (let ((?x42782 (- (- ?x42776 (* (* 1.0 l_0_11_132) l_0_11_132)) (* (* 1.0 l_0_11_133) l_0_11_133))))
 (let ((?x42794 (- (- (- (- (- (+ (+ ?x42782 ?x40567) ?x40570) ?x42785) ?x42787) ?x42789) ?x42791) ?x42793)))
 (let ((?x42808 (- (- (- (- (- (- (- ?x42794 ?x42795) ?x42797) ?x42799) ?x42801) ?x42803) ?x42805) ?x42807)))
 (let ((?x42821 (- (- (- (- (- (- (- ?x42808 ?x42809) ?x42811) ?x42813) ?x42815) ?x42817) ?x42819) ?x40618)))
 (= (- ?x42821 ?x40621) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40159 (* 2.0 l_0_11_31)))
 (let ((?x40738 (* ?x40159 l_0_11_51)))
 (let ((?x40156 (* 2.0 l_0_11_30)))
 (let ((?x40736 (* ?x40156 l_0_11_50)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x40714 (* ?x40713 l_0_11_3)))
 (let ((?x40311 (* 2.0 l_0_11_2)))
 (let ((?x40701 (* ?x40311 l_0_11_22)))
 (let ((?x42853 (- (* (* (- 2.0) l_0_11_128) l_0_11_134) (* (* 2.0 l_0_11_129) l_0_11_135))))
 (let ((?x42859 (- (- ?x42853 (* (* 2.0 l_0_11_130) l_0_11_136)) (* (* 2.0 l_0_11_131) l_0_11_137))))
 (let ((?x42865 (- (- ?x42859 (* (* 2.0 l_0_11_132) l_0_11_138)) (* (* 2.0 l_0_11_133) l_0_11_139))))
 (let ((?x42869 (+ (+ ?x42865 (* (* 2.0 l_0_11_142) l_0_11_156)) (* (* 2.0 l_0_11_143) l_0_11_157))))
 (let ((?x42873 (- (- ?x42869 (* (* 2.0 l_0_11_170) l_0_11_184)) (* (* 2.0 l_0_11_171) l_0_11_185))))
 (let ((?x42880 (- (- (+ ?x42873 ?x40701) (* (* 2.0 l_0_11_212) l_0_11_218)) (* (* 2.0 l_0_11_213) l_0_11_219))))
 (let ((?x42886 (- (- ?x42880 (* (* 2.0 l_0_11_214) l_0_11_220)) (* (* 2.0 l_0_11_215) l_0_11_221))))
 (let ((?x42892 (- (- ?x42886 (* (* 2.0 l_0_11_216) l_0_11_222)) (* (* 2.0 l_0_11_217) l_0_11_223))))
 (let ((?x42899 (- (- (+ ?x42892 ?x40714) (* (* 2.0 l_0_11_240) l_0_11_246)) (* (* 2.0 l_0_11_241) l_0_11_247))))
 (let ((?x42905 (- (- ?x42899 (* (* 2.0 l_0_11_242) l_0_11_248)) (* (* 2.0 l_0_11_243) l_0_11_249))))
 (let ((?x42911 (- (- ?x42905 (* (* 2.0 l_0_11_244) l_0_11_250)) (* (* 2.0 l_0_11_245) l_0_11_251))))
 (let ((?x42917 (- (- ?x42911 (* (* 2.0 l_0_11_268) l_0_11_274)) (* (* 2.0 l_0_11_269) l_0_11_275))))
 (let ((?x42923 (- (- ?x42917 (* (* 2.0 l_0_11_270) l_0_11_276)) (* (* 2.0 l_0_11_271) l_0_11_277))))
 (let ((?x42929 (- (- ?x42923 (* (* 2.0 l_0_11_272) l_0_11_278)) (* (* 2.0 l_0_11_273) l_0_11_279))))
 (= (- (- ?x42929 ?x40736) ?x40738) 0.0))))))))))))))))))))))))
(assert
 (let ((?x40790 (* l_0_11_6 l_0_11_6)))
 (let ((?x40788 (* l_0_11_5 l_0_11_5)))
 (let ((?x40786 (* l_0_11_4 l_0_11_4)))
 (let ((?x40784 (* l_0_11_34 l_0_11_34)))
 (let ((?x18224 (- (- (* (- l_0_11_32) l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x40784)))
 (= (+ (+ (+ ?x18224 ?x40786) ?x40788) ?x40790) 0.0)))))))
(assert
 (let ((?x40812 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x40809 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x40806 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40803 (* ?x40802 l_0_11_37)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40800 (* ?x40799 l_0_11_36)))
 (let ((?x18300 (+ (+ (- (- (* (* (- 2.0) l_0_11_32) l_0_11_35) ?x40800) ?x40803) ?x40806) ?x40809)))
 (= (+ ?x18300 ?x40812) 0.0))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40876 (* ?x40802 l_0_11_46)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40873 (* ?x40799 l_0_11_45)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40870 (* ?x16116 l_0_11_44)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x40867 (* ?x40866 l_0_11_6)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x40864 (* ?x40569 l_0_11_5)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x40856 (* ?x40566 l_0_11_4)))
 (= (- (- (- (+ (+ ?x40856 ?x40864) ?x40867) ?x40870) ?x40873) ?x40876) 0.0))))))))))))))
(assert
 (let ((?x40802 (* 2.0 l_0_11_34)))
 (let ((?x40929 (* ?x40802 l_0_11_52)))
 (let ((?x40799 (* 2.0 l_0_11_33)))
 (let ((?x40927 (* ?x40799 l_0_11_51)))
 (let ((?x16116 (* 2.0 l_0_11_32)))
 (let ((?x40925 (* ?x16116 l_0_11_50)))
 (let ((?x40922 (* 2.0 l_0_11_24)))
 (let ((?x40923 (* ?x40922 l_0_11_6)))
 (let ((?x40713 (* 2.0 l_0_11_23)))
 (let ((?x40920 (* ?x40713 l_0_11_5)))
 (let ((?x40917 (* 2.0 l_0_11_22)))
 (let ((?x40918 (* ?x40917 l_0_11_4)))
 (let ((?x42998 (+ (* (* 2.0 l_0_11_144) l_0_11_156) (* (* 2.0 l_0_11_145) l_0_11_157))))
 (let ((?x43002 (- (+ ?x42998 (* (* 2.0 l_0_11_146) l_0_11_158)) (* (* 2.0 l_0_11_172) l_0_11_184))))
 (let ((?x43006 (- (- ?x43002 (* (* 2.0 l_0_11_173) l_0_11_185)) (* (* 2.0 l_0_11_174) l_0_11_186))))
 (= (- (- (- (+ (+ (+ ?x43006 ?x40918) ?x40920) ?x40923) ?x40925) ?x40927) ?x40929) 0.0)))))))))))))))))
(assert
 (let ((?x40997 (* l_0_11_9 l_0_11_9)))
 (let ((?x40995 (* l_0_11_8 l_0_11_8)))
 (let ((?x40993 (* l_0_11_7 l_0_11_7)))
 (let ((?x40991 (* l_0_11_38 l_0_11_38)))
 (let ((?x40989 (* l_0_11_37 l_0_11_37)))
 (let ((?x40987 (* l_0_11_36 l_0_11_36)))
 (let ((?x18465 (- (- (- (* l_0_11_10 l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x40987) ?x40989)))
 (= (+ (+ (+ (- ?x18465 ?x40991) ?x40993) ?x40995) ?x40997) 0.0)))))))))
(assert
 (let ((?x41031 (* 2.0 l_0_11_38)))
 (let ((?x41089 (* ?x41031 l_0_11_47)))
 (let ((?x41028 (* 2.0 l_0_11_37)))
 (let ((?x41086 (* ?x41028 l_0_11_46)))
 (let ((?x41025 (* 2.0 l_0_11_36)))
 (let ((?x41083 (* ?x41025 l_0_11_45)))
 (let ((?x41022 (* 2.0 l_0_11_35)))
 (let ((?x41080 (* ?x41022 l_0_11_44)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x41077 (* ?x40866 l_0_11_9)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x41075 (* ?x40569 l_0_11_8)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x41073 (* ?x40566 l_0_11_7)))
 (let ((?x41056 (* 2.0 l_0_11_10)))
 (let ((?x41060 (* ?x41056 l_0_11_19)))
 (let ((?x42095 (- (- (- (- (+ (+ (+ ?x41060 ?x41073) ?x41075) ?x41077) ?x41080) ?x41083) ?x41086) ?x41089)))
 (= ?x42095 0.0)))))))))))))))))))
(assert
 (let ((?x41444 (* l_0_11_49 l_0_11_49)))
 (let ((?x41442 (* l_0_11_48 l_0_11_48)))
 (let ((?x41440 (* l_0_11_47 l_0_11_47)))
 (let ((?x41438 (* l_0_11_46 l_0_11_46)))
 (let ((?x41436 (* l_0_11_45 l_0_11_45)))
 (let ((?x41434 (* l_0_11_44 l_0_11_44)))
 (let ((?x41427 (* l_0_11_21 l_0_11_21)))
 (let ((?x41425 (* l_0_11_20 l_0_11_20)))
 (let ((?x41423 (* l_0_11_19 l_0_11_19)))
 (let ((?x41421 (* l_0_11_18 l_0_11_18)))
 (let ((?x42152 (+ (+ (+ (* l_0_11_16 l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x41421) ?x41423)))
 (let ((?x42159 (- (- (- (- (- (+ (+ ?x42152 ?x41425) ?x41427) ?x41434) ?x41436) ?x41438) ?x41440) ?x41442)))
 (= (- ?x42159 ?x41444) 0.0))))))))))))))
(assert
 (let ((?x41526 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x41523 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x41520 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x41517 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x41514 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x41511 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x41503 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x41500 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x41497 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x43066 (* l_0_11_189 l_0_11_189)))
 (let ((?x43064 (* l_0_11_188 l_0_11_188)))
 (let ((?x43062 (* l_0_11_187 l_0_11_187)))
 (let ((?x43060 (* l_0_11_186 l_0_11_186)))
 (let ((?x43058 (* l_0_11_185 l_0_11_185)))
 (let ((?x43056 (* l_0_11_184 l_0_11_184)))
 (let ((?x40866 (* 2.0 l_0_11_18)))
 (let ((?x41482 (* ?x40866 l_0_11_24)))
 (let ((?x40569 (* 2.0 l_0_11_17)))
 (let ((?x41477 (* ?x40569 l_0_11_23)))
 (let ((?x43052 (* l_0_11_161 l_0_11_161)))
 (let ((?x43050 (* l_0_11_160 l_0_11_160)))
 (let ((?x40566 (* 2.0 l_0_11_16)))
 (let ((?x41475 (* ?x40566 l_0_11_22)))
 (let ((?x43047 (* l_0_11_159 l_0_11_159)))
 (let ((?x43045 (* l_0_11_158 l_0_11_158)))
 (let ((?x43046 (+ (+ (* l_0_11_156 l_0_11_156) (* l_0_11_157 l_0_11_157)) ?x43045)))
 (let ((?x43057 (- (+ (+ (+ (+ (+ (+ ?x43046 ?x43047) ?x41475) ?x43050) ?x43052) ?x41477) ?x41482) ?x43056)))
 (let ((?x43069 (+ (+ (- (- (- (- (- ?x43057 ?x43058) ?x43060) ?x43062) ?x43064) ?x43066) ?x41497) ?x41500)))
 (let ((?x43076 (- (- (- (- (- (- (+ ?x43069 ?x41503) ?x41511) ?x41514) ?x41517) ?x41520) ?x41523) ?x41526)))
 (= ?x43076 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x41611 (* l_0_11_56 l_0_11_56)))
 (let ((?x41609 (* l_0_11_55 l_0_11_55)))
 (let ((?x41607 (* l_0_11_54 l_0_11_54)))
 (let ((?x41605 (* l_0_11_53 l_0_11_53)))
 (let ((?x41603 (* l_0_11_52 l_0_11_52)))
 (let ((?x41601 (* l_0_11_51 l_0_11_51)))
 (let ((?x41599 (* l_0_11_50 l_0_11_50)))
 (let ((?x41597 (* l_0_11_28 l_0_11_28)))
 (let ((?x41595 (* l_0_11_27 l_0_11_27)))
 (let ((?x41593 (* l_0_11_26 l_0_11_26)))
 (let ((?x41591 (* l_0_11_25 l_0_11_25)))
 (let ((?x41589 (* l_0_11_24 l_0_11_24)))
 (let ((?x41587 (* l_0_11_23 l_0_11_23)))
 (let ((?x41585 (* l_0_11_22 l_0_11_22)))
 (let ((?x43091 (+ (* (* 2.0 l_0_11_156) l_0_11_162) (* (* 2.0 l_0_11_157) l_0_11_163))))
 (let ((?x43097 (+ (+ ?x43091 (* (* 2.0 l_0_11_158) l_0_11_164)) (* (* 2.0 l_0_11_159) l_0_11_165))))
 (let ((?x43103 (+ (+ ?x43097 (* (* 2.0 l_0_11_160) l_0_11_166)) (* (* 2.0 l_0_11_161) l_0_11_167))))
 (let ((?x43109 (- (- ?x43103 (* (* 2.0 l_0_11_184) l_0_11_190)) (* (* 2.0 l_0_11_185) l_0_11_191))))
 (let ((?x43115 (- (- ?x43109 (* (* 2.0 l_0_11_186) l_0_11_192)) (* (* 2.0 l_0_11_187) l_0_11_193))))
 (let ((?x43121 (- (- ?x43115 (* (* 2.0 l_0_11_188) l_0_11_194)) (* (* 2.0 l_0_11_189) l_0_11_195))))
 (let ((?x43128 (+ (+ (+ (+ (+ (+ (+ ?x43121 ?x41585) ?x41587) ?x41589) ?x41591) ?x41593) ?x41595) ?x41597)))
 (let ((?x43135 (- (- (- (- (- (- (- ?x43128 ?x41599) ?x41601) ?x41603) ?x41605) ?x41607) ?x41609) ?x41611)))
 (= ?x43135 0.0))))))))))))))))))))))))
(assert
 (= (- (* l_0_11_57 l_0_11_57) (* l_0_11_85 l_0_11_85)) 0.0))
(assert
 (let ((?x43199 (+ (- (* l_0_11_141 l_0_11_141) (* l_0_11_169 l_0_11_169)) (* (* 2.0 l_0_11_57) l_0_11_58))))
 (= (- ?x43199 (* (* 2.0 l_0_11_85) l_0_11_86)) 0.0)))
(assert
 (let ((?x43214 (- (* (* 2.0 l_0_11_57) l_0_11_67) (* (* 2.0 l_0_11_85) l_0_11_95))))
 (= ?x43214 0.0)))
(assert
 (let ((?x19848 (+ (* (* (- 2.0) l_0_11_100) l_0_11_85) (* (* 2.0 l_0_11_57) l_0_11_72))))
 (= ?x19848 0.0)))
(assert
 (let ((?x19884 (+ (* (* (- 2.0) l_0_11_106) l_0_11_85) (* (* 2.0 l_0_11_57) l_0_11_78))))
 (= ?x19884 0.0)))
(assert
 (let ((?x43227 (- (* (* (- 2.0) l_0_11_106) l_0_11_86) (* (* 2.0 l_0_11_107) l_0_11_87))))
 (let ((?x43231 (- (+ ?x43227 (* (* 2.0 l_0_11_141) l_0_11_162)) (* (* 2.0 l_0_11_169) l_0_11_190))))
 (let ((?x43235 (+ (+ ?x43231 (* (* 2.0 l_0_11_58) l_0_11_78)) (* (* 2.0 l_0_11_59) l_0_11_79))))
 (= ?x43235 0.0)))))
(assert
 (let ((?x43274 (* l_0_11_99 l_0_11_99)))
 (let ((?x43272 (* l_0_11_98 l_0_11_98)))
 (let ((?x43270 (* l_0_11_97 l_0_11_97)))
 (let ((?x43268 (* l_0_11_96 l_0_11_96)))
 (let ((?x43266 (* l_0_11_95 l_0_11_95)))
 (let ((?x43264 (* l_0_11_71 l_0_11_71)))
 (let ((?x43262 (* l_0_11_70 l_0_11_70)))
 (let ((?x43260 (* l_0_11_69 l_0_11_69)))
 (let ((?x43263 (+ (+ (+ (* l_0_11_67 l_0_11_67) (* l_0_11_68 l_0_11_68)) ?x43260) ?x43262)))
 (= (- (- (- (- (- (+ ?x43263 ?x43264) ?x43266) ?x43268) ?x43270) ?x43272) ?x43274) 0.0)))))))))))
(assert
 (let ((?x43290 (- (* (* (- 2.0) l_0_11_100) l_0_11_95) (* (* 2.0 l_0_11_101) l_0_11_96))))
 (let ((?x43294 (- (- ?x43290 (* (* 2.0 l_0_11_102) l_0_11_97)) (* (* 2.0 l_0_11_103) l_0_11_98))))
 (let ((?x43300 (+ (- ?x43294 (* (* 2.0 l_0_11_104) l_0_11_99)) (* (* 2.0 l_0_11_67) l_0_11_72))))
 (let ((?x43306 (+ (+ ?x43300 (* (* 2.0 l_0_11_68) l_0_11_73)) (* (* 2.0 l_0_11_69) l_0_11_74))))
 (let ((?x43312 (+ (+ ?x43306 (* (* 2.0 l_0_11_70) l_0_11_75)) (* (* 2.0 l_0_11_71) l_0_11_76))))
 (= ?x43312 0.0)))))))
(assert
 (let ((?x43336 (- (* (* (- 2.0) l_0_11_106) l_0_11_95) (* (* 2.0 l_0_11_107) l_0_11_96))))
 (let ((?x43350 (- (- ?x43336 (* (* 2.0 l_0_11_108) l_0_11_97)) (* (* 2.0 l_0_11_109) l_0_11_98))))
 (let ((?x43355 (+ (- ?x43350 (* (* 2.0 l_0_11_110) l_0_11_99)) (* (* 2.0 l_0_11_67) l_0_11_78))))
 (let ((?x43359 (+ (+ ?x43355 (* (* 2.0 l_0_11_68) l_0_11_79)) (* (* 2.0 l_0_11_69) l_0_11_80))))
 (let ((?x43363 (+ (+ ?x43359 (* (* 2.0 l_0_11_70) l_0_11_81)) (* (* 2.0 l_0_11_71) l_0_11_82))))
 (= ?x43363 0.0)))))))
(assert
 (let ((?x43411 (* l_0_11_77 l_0_11_77)))
 (let ((?x43409 (* l_0_11_76 l_0_11_76)))
 (let ((?x43407 (* l_0_11_75 l_0_11_75)))
 (let ((?x43405 (* l_0_11_74 l_0_11_74)))
 (let ((?x43403 (* l_0_11_73 l_0_11_73)))
 (let ((?x43401 (* l_0_11_72 l_0_11_72)))
 (let ((?x43399 (* l_0_11_105 l_0_11_105)))
 (let ((?x43397 (* l_0_11_104 l_0_11_104)))
 (let ((?x43395 (* l_0_11_103 l_0_11_103)))
 (let ((?x43385 (* l_0_11_102 l_0_11_102)))
 (let ((?x43386 (- (- (* (- l_0_11_100) l_0_11_100) (* l_0_11_101 l_0_11_101)) ?x43385)))
 (let ((?x43408 (+ (+ (+ (+ (- (- (- ?x43386 ?x43395) ?x43397) ?x43399) ?x43401) ?x43403) ?x43405) ?x43407)))
 (= (+ (+ ?x43408 ?x43409) ?x43411) 0.0))))))))))))))
(assert
 (let ((?x43435 (- (* (* (- 2.0) l_0_11_100) l_0_11_106) (* (* 2.0 l_0_11_101) l_0_11_107))))
 (let ((?x43439 (- (- ?x43435 (* (* 2.0 l_0_11_102) l_0_11_108)) (* (* 2.0 l_0_11_103) l_0_11_109))))
 (let ((?x43444 (- (- ?x43439 (* (* 2.0 l_0_11_104) l_0_11_110)) (* (* 2.0 l_0_11_105) l_0_11_111))))
 (let ((?x43450 (+ (+ ?x43444 (* (* 2.0 l_0_11_72) l_0_11_78)) (* (* 2.0 l_0_11_73) l_0_11_79))))
 (let ((?x43456 (+ (+ ?x43450 (* (* 2.0 l_0_11_74) l_0_11_80)) (* (* 2.0 l_0_11_75) l_0_11_81))))
 (let ((?x43462 (+ (+ ?x43456 (* (* 2.0 l_0_11_76) l_0_11_82)) (* (* 2.0 l_0_11_77) l_0_11_83))))
 (= ?x43462 0.0))))))))
(assert
 (let ((?x43501 (* l_0_11_84 l_0_11_84)))
 (let ((?x43499 (* l_0_11_83 l_0_11_83)))
 (let ((?x43497 (* l_0_11_82 l_0_11_82)))
 (let ((?x43495 (* l_0_11_81 l_0_11_81)))
 (let ((?x43493 (* l_0_11_80 l_0_11_80)))
 (let ((?x43491 (* l_0_11_79 l_0_11_79)))
 (let ((?x43489 (* l_0_11_78 l_0_11_78)))
 (let ((?x43487 (* l_0_11_112 l_0_11_112)))
 (let ((?x43485 (* l_0_11_111 l_0_11_111)))
 (let ((?x43483 (* l_0_11_110 l_0_11_110)))
 (let ((?x20069 (* l_0_11_109 l_0_11_109)))
 (let ((?x20015 (* l_0_11_108 l_0_11_108)))
 (let ((?x20142 (- (- (* (- l_0_11_106) l_0_11_106) (* l_0_11_107 l_0_11_107)) ?x20015)))
 (let ((?x43494 (+ (+ (+ (- (- (- (- ?x20142 ?x20069) ?x43483) ?x43485) ?x43487) ?x43489) ?x43491) ?x43493)))
 (= (+ (+ (+ (+ ?x43494 ?x43495) ?x43497) ?x43499) ?x43501) 0.0))))))))))))))))
(assert
 (let ((?x43528 (* l_0_11_253 l_0_11_253)))
 (let ((?x43526 (* l_0_11_225 l_0_11_225)))
 (let ((?x43524 (* l_0_11_197 l_0_11_197)))
 (= (- (- (- (* (* (- 1.0) l_0_11_113) l_0_11_113) ?x43524) ?x43526) ?x43528) 0.0)))))
(assert
 (let ((?x43542 (- (* (* (- 2.0) l_0_11_113) l_0_11_114) (* (* 2.0 l_0_11_197) l_0_11_198))))
 (let ((?x43546 (- (- ?x43542 (* (* 2.0 l_0_11_225) l_0_11_226)) (* (* 2.0 l_0_11_253) l_0_11_254))))
 (= ?x43546 0.0))))
(assert
 (let ((?x43563 (- (* (* (- 2.0) l_0_11_113) l_0_11_119) (* (* 2.0 l_0_11_197) l_0_11_203))))
 (let ((?x43567 (- (- ?x43563 (* (* 2.0 l_0_11_225) l_0_11_231)) (* (* 2.0 l_0_11_253) l_0_11_259))))
 (= ?x43567 0.0))))
(assert
 (let ((?x20173 (- (* (* (- 2.0) l_0_11_114) l_0_11_116) (* (* 2.0 l_0_11_115) l_0_11_117))))
 (let ((?x20185 (- (- ?x20173 (* (* 2.0 l_0_11_198) l_0_11_200)) (* (* 2.0 l_0_11_199) l_0_11_201))))
 (let ((?x20133 (- (- ?x20185 (* (* 2.0 l_0_11_226) l_0_11_228)) (* (* 2.0 l_0_11_227) l_0_11_229))))
 (let ((?x20149 (- (- ?x20133 (* (* 2.0 l_0_11_254) l_0_11_256)) (* (* 2.0 l_0_11_255) l_0_11_257))))
 (= ?x20149 0.0))))))
(assert
 (let ((?x43598 (- (* (* (- 2.0) l_0_11_114) l_0_11_119) (* (* 2.0 l_0_11_115) l_0_11_120))))
 (let ((?x43602 (- (- ?x43598 (* (* 2.0 l_0_11_198) l_0_11_203)) (* (* 2.0 l_0_11_199) l_0_11_204))))
 (let ((?x43606 (- (- ?x43602 (* (* 2.0 l_0_11_226) l_0_11_231)) (* (* 2.0 l_0_11_227) l_0_11_232))))
 (let ((?x43610 (- (- ?x43606 (* (* 2.0 l_0_11_254) l_0_11_259)) (* (* 2.0 l_0_11_255) l_0_11_260))))
 (= ?x43610 0.0))))))
(assert
 (let ((?x43659 (* l_0_11_258 l_0_11_258)))
 (let ((?x43657 (* l_0_11_257 l_0_11_257)))
 (let ((?x43655 (* l_0_11_256 l_0_11_256)))
 (let ((?x43653 (* l_0_11_230 l_0_11_230)))
 (let ((?x43651 (* l_0_11_229 l_0_11_229)))
 (let ((?x43649 (* l_0_11_228 l_0_11_228)))
 (let ((?x43647 (* l_0_11_202 l_0_11_202)))
 (let ((?x43645 (* l_0_11_201 l_0_11_201)))
 (let ((?x43643 (* l_0_11_200 l_0_11_200)))
 (let ((?x43639 (- (* (* (- 1.0) l_0_11_116) l_0_11_116) (* (* 1.0 l_0_11_117) l_0_11_117))))
 (let ((?x43648 (- (- (- (- ?x43639 (* (* 1.0 l_0_11_118) l_0_11_118)) ?x43643) ?x43645) ?x43647)))
 (= (- (- (- (- (- (- ?x43648 ?x43649) ?x43651) ?x43653) ?x43655) ?x43657) ?x43659) 0.0)))))))))))))
(assert
 (let ((?x43682 (- (* (* (- 2.0) l_0_11_116) l_0_11_119) (* (* 2.0 l_0_11_117) l_0_11_120))))
 (let ((?x43686 (- (- ?x43682 (* (* 2.0 l_0_11_118) l_0_11_121)) (* (* 2.0 l_0_11_200) l_0_11_203))))
 (let ((?x43690 (- (- ?x43686 (* (* 2.0 l_0_11_201) l_0_11_204)) (* (* 2.0 l_0_11_202) l_0_11_205))))
 (let ((?x43694 (- (- ?x43690 (* (* 2.0 l_0_11_228) l_0_11_231)) (* (* 2.0 l_0_11_229) l_0_11_232))))
 (let ((?x43698 (- (- ?x43694 (* (* 2.0 l_0_11_230) l_0_11_233)) (* (* 2.0 l_0_11_256) l_0_11_259))))
 (let ((?x43702 (- (- ?x43698 (* (* 2.0 l_0_11_257) l_0_11_260)) (* (* 2.0 l_0_11_258) l_0_11_261))))
 (= ?x43702 0.0))))))))
(assert
 (let ((?x43751 (- (* (* (- 2.0) l_0_11_116) l_0_11_134) (* (* 2.0 l_0_11_117) l_0_11_135))))
 (let ((?x43755 (+ (- ?x43751 (* (* 2.0 l_0_11_118) l_0_11_136)) (* (* 2.0 l_0_11_142) l_0_11_144))))
 (let ((?x43759 (- (+ ?x43755 (* (* 2.0 l_0_11_143) l_0_11_145)) (* (* 2.0 l_0_11_170) l_0_11_172))))
 (let ((?x43763 (- (- ?x43759 (* (* 2.0 l_0_11_171) l_0_11_173)) (* (* 2.0 l_0_11_200) l_0_11_218))))
 (let ((?x43767 (- (- ?x43763 (* (* 2.0 l_0_11_201) l_0_11_219)) (* (* 2.0 l_0_11_202) l_0_11_220))))
 (let ((?x43771 (- (- ?x43767 (* (* 2.0 l_0_11_228) l_0_11_246)) (* (* 2.0 l_0_11_229) l_0_11_247))))
 (let ((?x43775 (- (- ?x43771 (* (* 2.0 l_0_11_230) l_0_11_248)) (* (* 2.0 l_0_11_256) l_0_11_274))))
 (let ((?x43779 (- (- ?x43775 (* (* 2.0 l_0_11_257) l_0_11_275)) (* (* 2.0 l_0_11_258) l_0_11_276))))
 (= ?x43779 0.0))))))))))
(assert
 (let ((?x43871 (* l_0_11_262 l_0_11_262)))
 (let ((?x43869 (* l_0_11_261 l_0_11_261)))
 (let ((?x43867 (* l_0_11_260 l_0_11_260)))
 (let ((?x43865 (* l_0_11_259 l_0_11_259)))
 (let ((?x43863 (* l_0_11_234 l_0_11_234)))
 (let ((?x43861 (* l_0_11_233 l_0_11_233)))
 (let ((?x43859 (* l_0_11_232 l_0_11_232)))
 (let ((?x43857 (* l_0_11_231 l_0_11_231)))
 (let ((?x43855 (* l_0_11_206 l_0_11_206)))
 (let ((?x43853 (* l_0_11_205 l_0_11_205)))
 (let ((?x43851 (* l_0_11_204 l_0_11_204)))
 (let ((?x43849 (* l_0_11_203 l_0_11_203)))
 (let ((?x43842 (- (* (* (- 1.0) l_0_11_119) l_0_11_119) (* (* 1.0 l_0_11_120) l_0_11_120))))
 (let ((?x43848 (- (- ?x43842 (* (* 1.0 l_0_11_121) l_0_11_121)) (* (* 1.0 l_0_11_122) l_0_11_122))))
 (let ((?x43862 (- (- (- (- (- (- (- ?x43848 ?x43849) ?x43851) ?x43853) ?x43855) ?x43857) ?x43859) ?x43861)))
 (= (- (- (- (- (- ?x43862 ?x43863) ?x43865) ?x43867) ?x43869) ?x43871) 0.0)))))))))))))))))
(assert
 (let ((?x43978 (* l_0_11_280 l_0_11_280)))
 (let ((?x43976 (* l_0_11_279 l_0_11_279)))
 (let ((?x43974 (* l_0_11_278 l_0_11_278)))
 (let ((?x43972 (* l_0_11_277 l_0_11_277)))
 (let ((?x43970 (* l_0_11_276 l_0_11_276)))
 (let ((?x43968 (* l_0_11_275 l_0_11_275)))
 (let ((?x43966 (* l_0_11_274 l_0_11_274)))
 (let ((?x43964 (* l_0_11_252 l_0_11_252)))
 (let ((?x43962 (* l_0_11_251 l_0_11_251)))
 (let ((?x43960 (* l_0_11_250 l_0_11_250)))
 (let ((?x43958 (* l_0_11_249 l_0_11_249)))
 (let ((?x43956 (* l_0_11_248 l_0_11_248)))
 (let ((?x43954 (* l_0_11_247 l_0_11_247)))
 (let ((?x43952 (* l_0_11_246 l_0_11_246)))
 (let ((?x43950 (* l_0_11_224 l_0_11_224)))
 (let ((?x43948 (* l_0_11_223 l_0_11_223)))
 (let ((?x43946 (* l_0_11_222 l_0_11_222)))
 (let ((?x43944 (* l_0_11_221 l_0_11_221)))
 (let ((?x43942 (* l_0_11_220 l_0_11_220)))
 (let ((?x43940 (* l_0_11_219 l_0_11_219)))
 (let ((?x43938 (* l_0_11_218 l_0_11_218)))
 (let ((?x43914 (- (* (* (- 1.0) l_0_11_134) l_0_11_134) (* (* 1.0 l_0_11_135) l_0_11_135))))
 (let ((?x43920 (- (- ?x43914 (* (* 1.0 l_0_11_136) l_0_11_136)) (* (* 1.0 l_0_11_137) l_0_11_137))))
 (let ((?x43926 (- (- ?x43920 (* (* 1.0 l_0_11_138) l_0_11_138)) (* (* 1.0 l_0_11_139) l_0_11_139))))
 (let ((?x43931 (+ (- ?x43926 (* (* 1.0 l_0_11_140) l_0_11_140)) (* (* 2.0 l_0_11_142) l_0_11_162))))
 (let ((?x43935 (- (+ ?x43931 (* (* 2.0 l_0_11_143) l_0_11_163)) (* (* 2.0 l_0_11_170) l_0_11_190))))
 (let ((?x43943 (- (- (- (- ?x43935 (* (* 2.0 l_0_11_171) l_0_11_191)) ?x43938) ?x43940) ?x43942)))
 (let ((?x43957 (- (- (- (- (- (- (- ?x43943 ?x43944) ?x43946) ?x43948) ?x43950) ?x43952) ?x43954) ?x43956)))
 (let ((?x43971 (- (- (- (- (- (- (- ?x43957 ?x43958) ?x43960) ?x43962) ?x43964) ?x43966) ?x43968) ?x43970)))
 (= (- (- (- (- ?x43971 ?x43972) ?x43974) ?x43976) ?x43978) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x44017 (* l_0_11_174 l_0_11_174)))
 (let ((?x44015 (* l_0_11_173 l_0_11_173)))
 (let ((?x44013 (* l_0_11_172 l_0_11_172)))
 (let ((?x44011 (* l_0_11_146 l_0_11_146)))
 (let ((?x44012 (+ (+ (* l_0_11_144 l_0_11_144) (* l_0_11_145 l_0_11_145)) ?x44011)))
 (= (- (- (- ?x44012 ?x44013) ?x44015) ?x44017) 0.0)))))))
(assert
 (let ((?x44029 (+ (* (* 2.0 l_0_11_144) l_0_11_162) (* (* 2.0 l_0_11_145) l_0_11_163))))
 (let ((?x44033 (- (+ ?x44029 (* (* 2.0 l_0_11_146) l_0_11_164)) (* (* 2.0 l_0_11_172) l_0_11_190))))
 (let ((?x44037 (- (- ?x44033 (* (* 2.0 l_0_11_173) l_0_11_191)) (* (* 2.0 l_0_11_174) l_0_11_192))))
 (= ?x44037 0.0)))))
(assert
 (let ((?x44081 (* l_0_11_196 l_0_11_196)))
 (let ((?x44079 (* l_0_11_195 l_0_11_195)))
 (let ((?x44077 (* l_0_11_194 l_0_11_194)))
 (let ((?x44075 (* l_0_11_193 l_0_11_193)))
 (let ((?x44073 (* l_0_11_192 l_0_11_192)))
 (let ((?x44071 (* l_0_11_191 l_0_11_191)))
 (let ((?x44069 (* l_0_11_190 l_0_11_190)))
 (let ((?x44067 (* l_0_11_168 l_0_11_168)))
 (let ((?x44065 (* l_0_11_167 l_0_11_167)))
 (let ((?x44063 (* l_0_11_166 l_0_11_166)))
 (let ((?x44061 (* l_0_11_165 l_0_11_165)))
 (let ((?x44059 (* l_0_11_164 l_0_11_164)))
 (let ((?x44060 (+ (+ (* l_0_11_162 l_0_11_162) (* l_0_11_163 l_0_11_163)) ?x44059)))
 (let ((?x44074 (- (- (- (+ (+ (+ (+ ?x44060 ?x44061) ?x44063) ?x44065) ?x44067) ?x44069) ?x44071) ?x44073)))
 (= (- (- (- (- ?x44074 ?x44075) ?x44077) ?x44079) ?x44081) 0.0))))))))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_28 0.0))
(assert
 (>= l_0_11_29 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_34 0.0))
(assert
 (>= l_0_11_38 0.0))
(assert
 (>= l_0_11_43 0.0))
(assert
 (>= l_0_11_49 0.0))
(assert
 (>= l_0_11_56 0.0))
(assert
 (>= l_0_11_57 0.0))
(assert
 (>= l_0_11_59 0.0))
(assert
 (>= l_0_11_62 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_71 0.0))
(assert
 (>= l_0_11_77 0.0))
(assert
 (>= l_0_11_84 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_87 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_94 0.0))
(assert
 (>= l_0_11_99 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (>= l_0_11_112 0.0))
(assert
 (>= l_0_11_113 0.0))
(assert
 (>= l_0_11_115 0.0))
(assert
 (>= l_0_11_118 0.0))
(assert
 (>= l_0_11_122 0.0))
(assert
 (>= l_0_11_127 0.0))
(assert
 (>= l_0_11_133 0.0))
(assert
 (>= l_0_11_140 0.0))
(assert
 (>= l_0_11_141 0.0))
(assert
 (>= l_0_11_143 0.0))
(assert
 (>= l_0_11_146 0.0))
(assert
 (>= l_0_11_150 0.0))
(assert
 (>= l_0_11_155 0.0))
(assert
 (>= l_0_11_161 0.0))
(assert
 (>= l_0_11_168 0.0))
(assert
 (>= l_0_11_169 0.0))
(assert
 (>= l_0_11_171 0.0))
(assert
 (>= l_0_11_174 0.0))
(assert
 (>= l_0_11_178 0.0))
(assert
 (>= l_0_11_183 0.0))
(assert
 (>= l_0_11_189 0.0))
(assert
 (>= l_0_11_196 0.0))
(assert
 (>= l_0_11_197 0.0))
(assert
 (>= l_0_11_199 0.0))
(assert
 (>= l_0_11_202 0.0))
(assert
 (>= l_0_11_206 0.0))
(assert
 (>= l_0_11_211 0.0))
(assert
 (>= l_0_11_217 0.0))
(assert
 (>= l_0_11_224 0.0))
(assert
 (>= l_0_11_225 0.0))
(assert
 (>= l_0_11_227 0.0))
(assert
 (>= l_0_11_230 0.0))
(assert
 (>= l_0_11_234 0.0))
(assert
 (>= l_0_11_239 0.0))
(assert
 (>= l_0_11_245 0.0))
(assert
 (>= l_0_11_252 0.0))
(assert
 (>= l_0_11_253 0.0))
(assert
 (>= l_0_11_255 0.0))
(assert
 (>= l_0_11_258 0.0))
(assert
 (>= l_0_11_262 0.0))
(assert
 (>= l_0_11_267 0.0))
(assert
 (>= l_0_11_273 0.0))
(assert
 (>= l_0_11_280 0.0))
(assert
 (let ((?x44191 (* l_0_12_87 l_0_12_87)))
 (let ((?x44189 (* l_0_12_86 l_0_12_86)))
 (let ((?x44187 (* l_0_12_59 l_0_12_59)))
 (let ((?x44185 (* l_0_12_58 l_0_12_58)))
 (let ((?x44169 (+ (* (* (- 2.0) l_0_12_113) l_0_12_134) (* (* 2.0 l_0_12_141) l_0_12_142))))
 (let ((?x44175 (- (- ?x44169 (* (* 2.0 l_0_12_169) l_0_12_170)) (* (* 2.0 l_0_12_197) l_0_12_218))))
 (let ((?x44181 (- (- ?x44175 (* (* 2.0 l_0_12_225) l_0_12_246)) (* (* 2.0 l_0_12_253) l_0_12_274))))
 (let ((?x44190 (- (+ (+ (- ?x44181 (* (* 2.0 l_0_12_281) l_0_12_302)) ?x44185) ?x44187) ?x44189)))
 (= (+ (- ?x44190 ?x44191) 1.0) 0.0))))))))))
(assert
 (let ((?x44233 (* l_0_12_171 l_0_12_171)))
 (let ((?x44231 (* l_0_12_170 l_0_12_170)))
 (let ((?x44229 (* l_0_12_143 l_0_12_143)))
 (let ((?x44227 (* l_0_12_142 l_0_12_142)))
 (let ((?x44226 (- (* (* (- 2.0) l_0_12_114) l_0_12_134) (* (* 2.0 l_0_12_115) l_0_12_135))))
 (let ((?x44237 (- (- (- (+ (+ ?x44226 ?x44227) ?x44229) ?x44231) ?x44233) (* (* 2.0 l_0_12_198) l_0_12_218))))
 (let ((?x44243 (- (- ?x44237 (* (* 2.0 l_0_12_199) l_0_12_219)) (* (* 2.0 l_0_12_226) l_0_12_246))))
 (let ((?x44249 (- (- ?x44243 (* (* 2.0 l_0_12_227) l_0_12_247)) (* (* 2.0 l_0_12_254) l_0_12_274))))
 (let ((?x44255 (- (- ?x44249 (* (* 2.0 l_0_12_255) l_0_12_275)) (* (* 2.0 l_0_12_282) l_0_12_302))))
 (= (+ (- ?x44255 (* (* 2.0 l_0_12_283) l_0_12_303)) 1.0) 0.0)))))))))))
(assert
 (let ((?x44294 (* l_0_12_283 l_0_12_283)))
 (let ((?x44292 (* l_0_12_282 l_0_12_282)))
 (let ((?x44290 (* l_0_12_255 l_0_12_255)))
 (let ((?x44288 (* l_0_12_254 l_0_12_254)))
 (let ((?x44286 (* l_0_12_227 l_0_12_227)))
 (let ((?x44284 (* l_0_12_226 l_0_12_226)))
 (let ((?x44282 (* l_0_12_199 l_0_12_199)))
 (let ((?x44280 (* l_0_12_198 l_0_12_198)))
 (let ((?x44279 (- (* (* (- 1.0) l_0_12_114) l_0_12_114) (* (* 1.0 l_0_12_115) l_0_12_115))))
 (let ((?x44293 (- (- (- (- (- (- (- ?x44279 ?x44280) ?x44282) ?x44284) ?x44286) ?x44288) ?x44290) ?x44292)))
 (= (- ?x44293 ?x44294) 0.0))))))))))))
(assert
 (= (+ (* (- l_0_12_1) l_0_12_1) (* l_0_12_29 l_0_12_29)) 0.0))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44329 (* ?x44328 l_0_12_30)))
 (let ((?x44319 (- (* (* (- 2.0) l_0_12_1) l_0_12_2) (* (* 2.0 l_0_12_113) l_0_12_123))))
 (let ((?x44323 (- (- ?x44319 (* (* 2.0 l_0_12_197) l_0_12_207)) (* (* 2.0 l_0_12_225) l_0_12_235))))
 (let ((?x44327 (- (- ?x44323 (* (* 2.0 l_0_12_253) l_0_12_263)) (* (* 2.0 l_0_12_281) l_0_12_291))))
 (= (+ ?x44327 ?x44329) 0.0)))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44366 (* ?x44365 l_0_12_40)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44363 (* ?x44362 l_0_12_39)))
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44360 (* ?x44328 l_0_12_32)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x44358 (* ?x44357 l_0_12_3)))
 (let ((?x44350 (* 2.0 l_0_12_11)))
 (let ((?x44355 (* ?x44350 l_0_12_2)))
 (let ((?x44364 (- (+ (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_4) ?x44355) ?x44358) ?x44360) ?x44363)))
 (= (- ?x44364 ?x44366) 0.0)))))))))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44391 (* ?x44328 l_0_12_35)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_7) ?x44391) 0.0))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44397 (* ?x44328 l_0_12_39)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_11) ?x44397) 0.0))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44415 (* ?x44328 l_0_12_44)))
 (let ((?x44397 (* ?x44328 l_0_12_39)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x44408 (* ?x44405 l_0_12_16)))
 (let ((?x44407 (* ?x44405 l_0_12_11)))
 (= (+ (- (- ?x44407 ?x44408) ?x44397) ?x44415) 0.0))))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44431 (* ?x44328 l_0_12_50)))
 (let ((?x44428 (+ (* (* (- 2.0) l_0_12_1) l_0_12_22) (* (* 2.0 l_0_12_141) l_0_12_151))))
 (let ((?x44435 (+ (+ (- ?x44428 (* (* 2.0 l_0_12_169) l_0_12_179)) ?x44431) (* (* 2.0 l_0_12_58) l_0_12_67))))
 (let ((?x44441 (- (+ ?x44435 (* (* 2.0 l_0_12_59) l_0_12_68)) (* (* 2.0 l_0_12_86) l_0_12_95))))
 (= (- ?x44441 (* (* 2.0 l_0_12_87) l_0_12_96)) 0.0)))))))
(assert
 (let ((?x44500 (* l_0_12_31 l_0_12_31)))
 (let ((?x44498 (* l_0_12_30 l_0_12_30)))
 (let ((?x44496 (* l_0_12_3 l_0_12_3)))
 (let ((?x44482 (* l_0_12_2 l_0_12_2)))
 (let ((?x44477 (- (* (* (- 2.0) l_0_12_114) l_0_12_123) (* (* 2.0 l_0_12_115) l_0_12_124))))
 (let ((?x44481 (- (- ?x44477 (* (* 2.0 l_0_12_198) l_0_12_207)) (* (* 2.0 l_0_12_199) l_0_12_208))))
 (let ((?x44487 (- (- (- ?x44481 ?x44482) (* (* 2.0 l_0_12_226) l_0_12_235)) (* (* 2.0 l_0_12_227) l_0_12_236))))
 (let ((?x44491 (- (- ?x44487 (* (* 2.0 l_0_12_254) l_0_12_263)) (* (* 2.0 l_0_12_255) l_0_12_264))))
 (let ((?x44495 (- (- ?x44491 (* (* 2.0 l_0_12_282) l_0_12_291)) (* (* 2.0 l_0_12_283) l_0_12_292))))
 (= (+ (+ (- ?x44495 ?x44496) ?x44498) ?x44500) 0.0)))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44562 (* ?x44365 l_0_12_33)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44560 (* ?x44362 l_0_12_32)))
 (let ((?x44557 (* 2.0 l_0_12_3)))
 (let ((?x44558 (* ?x44557 l_0_12_5)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x44519 (* ?x44518 l_0_12_4)))
 (let ((?x44514 (- (* (* (- 2.0) l_0_12_116) l_0_12_123) (* (* 2.0 l_0_12_117) l_0_12_124))))
 (let ((?x44523 (- (- (- ?x44514 (* (* 2.0 l_0_12_118) l_0_12_125)) ?x44519) (* (* 2.0 l_0_12_200) l_0_12_207))))
 (let ((?x44529 (- (- ?x44523 (* (* 2.0 l_0_12_201) l_0_12_208)) (* (* 2.0 l_0_12_202) l_0_12_209))))
 (let ((?x44535 (- (- ?x44529 (* (* 2.0 l_0_12_228) l_0_12_235)) (* (* 2.0 l_0_12_229) l_0_12_236))))
 (let ((?x44541 (- (- ?x44535 (* (* 2.0 l_0_12_230) l_0_12_237)) (* (* 2.0 l_0_12_256) l_0_12_263))))
 (let ((?x44547 (- (- ?x44541 (* (* 2.0 l_0_12_257) l_0_12_264)) (* (* 2.0 l_0_12_258) l_0_12_265))))
 (let ((?x44553 (- (- ?x44547 (* (* 2.0 l_0_12_284) l_0_12_291)) (* (* 2.0 l_0_12_285) l_0_12_292))))
 (let ((?x44563 (+ (+ (- (- ?x44553 (* (* 2.0 l_0_12_286) l_0_12_293)) ?x44558) ?x44560) ?x44562)))
 (= ?x44563 0.0))))))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44671 (* ?x44365 l_0_12_36)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44669 (* ?x44362 l_0_12_35)))
 (let ((?x44557 (* 2.0 l_0_12_3)))
 (let ((?x44667 (* ?x44557 l_0_12_8)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x44617 (* ?x44518 l_0_12_7)))
 (let ((?x44610 (- (* (* (- 2.0) l_0_12_119) l_0_12_123) (* (* 2.0 l_0_12_120) l_0_12_124))))
 (let ((?x44616 (- (- ?x44610 (* (* 2.0 l_0_12_121) l_0_12_125)) (* (* 2.0 l_0_12_122) l_0_12_126))))
 (let ((?x44624 (- (- (- ?x44616 ?x44617) (* (* 2.0 l_0_12_203) l_0_12_207)) (* (* 2.0 l_0_12_204) l_0_12_208))))
 (let ((?x44630 (- (- ?x44624 (* (* 2.0 l_0_12_205) l_0_12_209)) (* (* 2.0 l_0_12_206) l_0_12_210))))
 (let ((?x44636 (- (- ?x44630 (* (* 2.0 l_0_12_231) l_0_12_235)) (* (* 2.0 l_0_12_232) l_0_12_236))))
 (let ((?x44642 (- (- ?x44636 (* (* 2.0 l_0_12_233) l_0_12_237)) (* (* 2.0 l_0_12_234) l_0_12_238))))
 (let ((?x44648 (- (- ?x44642 (* (* 2.0 l_0_12_259) l_0_12_263)) (* (* 2.0 l_0_12_260) l_0_12_264))))
 (let ((?x44654 (- (- ?x44648 (* (* 2.0 l_0_12_261) l_0_12_265)) (* (* 2.0 l_0_12_262) l_0_12_266))))
 (let ((?x44660 (- (- ?x44654 (* (* 2.0 l_0_12_287) l_0_12_291)) (* (* 2.0 l_0_12_288) l_0_12_292))))
 (let ((?x44666 (- (- ?x44660 (* (* 2.0 l_0_12_289) l_0_12_293)) (* (* 2.0 l_0_12_290) l_0_12_294))))
 (= (+ (+ (- ?x44666 ?x44667) ?x44669) ?x44671) 0.0))))))))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44366 (* ?x44365 l_0_12_40)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44363 (* ?x44362 l_0_12_39)))
 (let ((?x44779 (* l_0_12_295 l_0_12_295)))
 (let ((?x44777 (* l_0_12_294 l_0_12_294)))
 (let ((?x44775 (* l_0_12_293 l_0_12_293)))
 (let ((?x44773 (* l_0_12_292 l_0_12_292)))
 (let ((?x44771 (* l_0_12_291 l_0_12_291)))
 (let ((?x44769 (* l_0_12_267 l_0_12_267)))
 (let ((?x44767 (* l_0_12_266 l_0_12_266)))
 (let ((?x44765 (* l_0_12_265 l_0_12_265)))
 (let ((?x44763 (* l_0_12_264 l_0_12_264)))
 (let ((?x44761 (* l_0_12_263 l_0_12_263)))
 (let ((?x44759 (* l_0_12_239 l_0_12_239)))
 (let ((?x44757 (* l_0_12_238 l_0_12_238)))
 (let ((?x44755 (* l_0_12_237 l_0_12_237)))
 (let ((?x44753 (* l_0_12_236 l_0_12_236)))
 (let ((?x44751 (* l_0_12_235 l_0_12_235)))
 (let ((?x44749 (* l_0_12_211 l_0_12_211)))
 (let ((?x44747 (* l_0_12_210 l_0_12_210)))
 (let ((?x44745 (* l_0_12_209 l_0_12_209)))
 (let ((?x44743 (* l_0_12_208 l_0_12_208)))
 (let ((?x44741 (* l_0_12_207 l_0_12_207)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x44358 (* ?x44357 l_0_12_3)))
 (let ((?x44728 (- (- (* (* (- 2.0) l_0_12_11) l_0_12_2) ?x44358) (* (* 1.0 l_0_12_123) l_0_12_123))))
 (let ((?x44734 (- (- ?x44728 (* (* 1.0 l_0_12_124) l_0_12_124)) (* (* 1.0 l_0_12_125) l_0_12_125))))
 (let ((?x44740 (- (- ?x44734 (* (* 1.0 l_0_12_126) l_0_12_126)) (* (* 1.0 l_0_12_127) l_0_12_127))))
 (let ((?x44754 (- (- (- (- (- (- (- ?x44740 ?x44741) ?x44743) ?x44745) ?x44747) ?x44749) ?x44751) ?x44753)))
 (let ((?x44768 (- (- (- (- (- (- (- ?x44754 ?x44755) ?x44757) ?x44759) ?x44761) ?x44763) ?x44765) ?x44767)))
 (let ((?x44781 (+ (- (- (- (- (- (- ?x44768 ?x44769) ?x44771) ?x44773) ?x44775) ?x44777) ?x44779) ?x44363)))
 (= (+ ?x44781 ?x44366) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44937 (* ?x44365 l_0_12_45)))
 (let ((?x44366 (* ?x44365 l_0_12_40)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44934 (* ?x44362 l_0_12_44)))
 (let ((?x44363 (* ?x44362 l_0_12_39)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x44871 (* ?x44870 l_0_12_3)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x44868 (* ?x44867 l_0_12_2)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x44358 (* ?x44357 l_0_12_3)))
 (let ((?x44350 (* 2.0 l_0_12_11)))
 (let ((?x44355 (* ?x44350 l_0_12_2)))
 (let ((?x44857 (- (- (+ ?x44355 ?x44358) (* (* 2.0 l_0_12_123) l_0_12_128)) (* (* 2.0 l_0_12_124) l_0_12_129))))
 (let ((?x44863 (- (- ?x44857 (* (* 2.0 l_0_12_125) l_0_12_130)) (* (* 2.0 l_0_12_126) l_0_12_131))))
 (let ((?x44875 (- (- (- (- ?x44863 (* (* 2.0 l_0_12_127) l_0_12_132)) ?x44868) ?x44871) (* (* 2.0 l_0_12_207) l_0_12_212))))
 (let ((?x44881 (- (- ?x44875 (* (* 2.0 l_0_12_208) l_0_12_213)) (* (* 2.0 l_0_12_209) l_0_12_214))))
 (let ((?x44887 (- (- ?x44881 (* (* 2.0 l_0_12_210) l_0_12_215)) (* (* 2.0 l_0_12_211) l_0_12_216))))
 (let ((?x44893 (- (- ?x44887 (* (* 2.0 l_0_12_235) l_0_12_240)) (* (* 2.0 l_0_12_236) l_0_12_241))))
 (let ((?x44899 (- (- ?x44893 (* (* 2.0 l_0_12_237) l_0_12_242)) (* (* 2.0 l_0_12_238) l_0_12_243))))
 (let ((?x44905 (- (- ?x44899 (* (* 2.0 l_0_12_239) l_0_12_244)) (* (* 2.0 l_0_12_263) l_0_12_268))))
 (let ((?x44911 (- (- ?x44905 (* (* 2.0 l_0_12_264) l_0_12_269)) (* (* 2.0 l_0_12_265) l_0_12_270))))
 (let ((?x44917 (- (- ?x44911 (* (* 2.0 l_0_12_266) l_0_12_271)) (* (* 2.0 l_0_12_267) l_0_12_272))))
 (let ((?x44923 (- (- ?x44917 (* (* 2.0 l_0_12_291) l_0_12_296)) (* (* 2.0 l_0_12_292) l_0_12_297))))
 (let ((?x44929 (- (- ?x44923 (* (* 2.0 l_0_12_293) l_0_12_298)) (* (* 2.0 l_0_12_294) l_0_12_299))))
 (let ((?x44936 (- (+ (- (- ?x44929 (* (* 2.0 l_0_12_295) l_0_12_300)) ?x44363) ?x44934) ?x44366)))
 (= (+ ?x44936 ?x44937) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x45127 (* ?x44365 l_0_12_51)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x45125 (* ?x44362 l_0_12_50)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45093 (* ?x45092 l_0_12_3)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x45080 (* ?x44518 l_0_12_22)))
 (let ((?x45061 (- (* (* (- 2.0) l_0_12_123) l_0_12_134) (* (* 2.0 l_0_12_124) l_0_12_135))))
 (let ((?x45065 (- (- ?x45061 (* (* 2.0 l_0_12_125) l_0_12_136)) (* (* 2.0 l_0_12_126) l_0_12_137))))
 (let ((?x45070 (+ (- ?x45065 (* (* 2.0 l_0_12_127) l_0_12_138)) (* (* 2.0 l_0_12_142) l_0_12_151))))
 (let ((?x45076 (- (+ ?x45070 (* (* 2.0 l_0_12_143) l_0_12_152)) (* (* 2.0 l_0_12_170) l_0_12_179))))
 (let ((?x45083 (- (- (- ?x45076 (* (* 2.0 l_0_12_171) l_0_12_180)) ?x45080) (* (* 2.0 l_0_12_207) l_0_12_218))))
 (let ((?x45087 (- (- ?x45083 (* (* 2.0 l_0_12_208) l_0_12_219)) (* (* 2.0 l_0_12_209) l_0_12_220))))
 (let ((?x45091 (- (- ?x45087 (* (* 2.0 l_0_12_210) l_0_12_221)) (* (* 2.0 l_0_12_211) l_0_12_222))))
 (let ((?x45098 (- (- (- ?x45091 ?x45093) (* (* 2.0 l_0_12_235) l_0_12_246)) (* (* 2.0 l_0_12_236) l_0_12_247))))
 (let ((?x45102 (- (- ?x45098 (* (* 2.0 l_0_12_237) l_0_12_248)) (* (* 2.0 l_0_12_238) l_0_12_249))))
 (let ((?x45106 (- (- ?x45102 (* (* 2.0 l_0_12_239) l_0_12_250)) (* (* 2.0 l_0_12_263) l_0_12_274))))
 (let ((?x45110 (- (- ?x45106 (* (* 2.0 l_0_12_264) l_0_12_275)) (* (* 2.0 l_0_12_265) l_0_12_276))))
 (let ((?x45114 (- (- ?x45110 (* (* 2.0 l_0_12_266) l_0_12_277)) (* (* 2.0 l_0_12_267) l_0_12_278))))
 (let ((?x45118 (- (- ?x45114 (* (* 2.0 l_0_12_291) l_0_12_302)) (* (* 2.0 l_0_12_292) l_0_12_303))))
 (let ((?x45122 (- (- ?x45118 (* (* 2.0 l_0_12_293) l_0_12_304)) (* (* 2.0 l_0_12_294) l_0_12_305))))
 (= (+ (+ (- ?x45122 (* (* 2.0 l_0_12_295) l_0_12_306)) ?x45125) ?x45127) 0.0))))))))))))))))))))))))
(assert
 (let ((?x45182 (* l_0_12_6 l_0_12_6)))
 (let ((?x45180 (* l_0_12_5 l_0_12_5)))
 (let ((?x45178 (* l_0_12_4 l_0_12_4)))
 (let ((?x45176 (* l_0_12_34 l_0_12_34)))
 (let ((?x45179 (- (+ (+ (* l_0_12_32 l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x45176) ?x45178)))
 (= (- (- ?x45179 ?x45180) ?x45182) 0.0)))))))
(assert
 (let ((?x45207 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x45204 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x45201 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45198 (* ?x45197 l_0_12_37)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45195 (* ?x45194 l_0_12_36)))
 (let ((?x45205 (- (- (+ (+ (* (* 2.0 l_0_12_32) l_0_12_35) ?x45195) ?x45198) ?x45201) ?x45204)))
 (= (- ?x45205 ?x45207) 0.0))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45236 (* ?x45197 l_0_12_41)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45234 (* ?x45194 l_0_12_40)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45232 (* ?x45192 l_0_12_39)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45230 (* ?x45229 l_0_12_6)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45227 (* ?x44357 l_0_12_5)))
 (let ((?x45235 (+ (+ (- (- (* (* (- 2.0) l_0_12_11) l_0_12_4) ?x45227) ?x45230) ?x45232) ?x45234)))
 (= (+ ?x45235 ?x45236) 0.0)))))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45267 (* ?x45197 l_0_12_46)))
 (let ((?x45236 (* ?x45197 l_0_12_41)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45264 (* ?x45194 l_0_12_45)))
 (let ((?x45234 (* ?x45194 l_0_12_40)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45261 (* ?x45192 l_0_12_44)))
 (let ((?x45232 (* ?x45192 l_0_12_39)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45258 (* ?x45257 l_0_12_6)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45255 (* ?x44870 l_0_12_5)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x23014 (* ?x44867 l_0_12_4)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45230 (* ?x45229 l_0_12_6)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45227 (* ?x44357 l_0_12_5)))
 (let ((?x23013 (+ (+ (* (* 2.0 l_0_12_11) l_0_12_4) ?x45227) ?x45230)))
 (let ((?x45265 (+ (- (+ (- (- (- (- ?x23013 ?x23014) ?x45255) ?x45258) ?x45232) ?x45261) ?x45234) ?x45264)))
 (= (+ (- ?x45265 ?x45236) ?x45267) 0.0)))))))))))))))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45317 (* ?x45197 l_0_12_52)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45315 (* ?x45194 l_0_12_51)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45313 (* ?x45192 l_0_12_50)))
 (let ((?x45310 (* 2.0 l_0_12_24)))
 (let ((?x45311 (* ?x45310 l_0_12_6)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45308 (* ?x45092 l_0_12_5)))
 (let ((?x45305 (* 2.0 l_0_12_22)))
 (let ((?x45306 (* ?x45305 l_0_12_4)))
 (let ((?x45292 (+ (* (* 2.0 l_0_12_144) l_0_12_151) (* (* 2.0 l_0_12_145) l_0_12_152))))
 (let ((?x45298 (- (+ ?x45292 (* (* 2.0 l_0_12_146) l_0_12_153)) (* (* 2.0 l_0_12_172) l_0_12_179))))
 (let ((?x45304 (- (- ?x45298 (* (* 2.0 l_0_12_173) l_0_12_180)) (* (* 2.0 l_0_12_174) l_0_12_181))))
 (= (+ (+ (+ (- (- (- ?x45304 ?x45306) ?x45308) ?x45311) ?x45313) ?x45315) ?x45317) 0.0)))))))))))))))))
(assert
 (let ((?x45363 (* l_0_12_9 l_0_12_9)))
 (let ((?x45361 (* l_0_12_8 l_0_12_8)))
 (let ((?x45359 (* l_0_12_7 l_0_12_7)))
 (let ((?x45357 (* l_0_12_38 l_0_12_38)))
 (let ((?x45355 (* l_0_12_37 l_0_12_37)))
 (let ((?x45353 (* l_0_12_36 l_0_12_36)))
 (let ((?x45354 (+ (+ (* (- l_0_12_10) l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x45353)))
 (= (- (- (- (+ (+ ?x45354 ?x45355) ?x45357) ?x45359) ?x45361) ?x45363) 0.0)))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45391 (* ?x45390 l_0_12_42)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45388 (* ?x45387 l_0_12_41)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45385 (* ?x45384 l_0_12_40)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45382 (* ?x45381 l_0_12_39)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45379 (* ?x45229 l_0_12_9)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45377 (* ?x44357 l_0_12_8)))
 (let ((?x44350 (* 2.0 l_0_12_11)))
 (let ((?x45375 (* ?x44350 l_0_12_7)))
 (let ((?x45383 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_14) ?x45375) ?x45377) ?x45379) ?x45382)))
 (= (+ (+ (+ ?x45383 ?x45385) ?x45388) ?x45391) 0.0)))))))))))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45436 (* ?x45390 l_0_12_47)))
 (let ((?x45391 (* ?x45390 l_0_12_42)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45433 (* ?x45387 l_0_12_46)))
 (let ((?x45388 (* ?x45387 l_0_12_41)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45430 (* ?x45384 l_0_12_45)))
 (let ((?x45385 (* ?x45384 l_0_12_40)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45427 (* ?x45381 l_0_12_44)))
 (let ((?x45382 (* ?x45381 l_0_12_39)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45424 (* ?x45257 l_0_12_9)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45422 (* ?x44870 l_0_12_8)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x45420 (* ?x44867 l_0_12_7)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45379 (* ?x45229 l_0_12_9)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45377 (* ?x44357 l_0_12_8)))
 (let ((?x44350 (* 2.0 l_0_12_11)))
 (let ((?x45375 (* ?x44350 l_0_12_7)))
 (let ((?x23225 (* 2.0 l_0_12_10)))
 (let ((?x45407 (* ?x23225 l_0_12_19)))
 (let ((?x23227 (* ?x23225 l_0_12_14)))
 (let ((?x45425 (- (- (- (+ (+ (+ (- ?x23227 ?x45407) ?x45375) ?x45377) ?x45379) ?x45420) ?x45422) ?x45424)))
 (let ((?x45435 (- (+ (- (+ (- (+ (- ?x45425 ?x45382) ?x45427) ?x45385) ?x45430) ?x45388) ?x45433) ?x45391)))
 (= (+ ?x45435 ?x45436) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45493 (* ?x45390 l_0_12_53)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45491 (* ?x45387 l_0_12_52)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45489 (* ?x45384 l_0_12_51)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45487 (* ?x45381 l_0_12_50)))
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44366 (* ?x44365 l_0_12_40)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44363 (* ?x44362 l_0_12_39)))
 (let ((?x45310 (* 2.0 l_0_12_24)))
 (let ((?x45483 (* ?x45310 l_0_12_9)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45481 (* ?x45092 l_0_12_8)))
 (let ((?x45305 (* 2.0 l_0_12_22)))
 (let ((?x45479 (* ?x45305 l_0_12_7)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x44358 (* ?x44357 l_0_12_3)))
 (let ((?x44350 (* 2.0 l_0_12_11)))
 (let ((?x44355 (* ?x44350 l_0_12_2)))
 (let ((?x45457 (+ (+ (+ (* (* (- 2.0) l_0_12_10) l_0_12_25) ?x44355) ?x44358) (* (* 2.0 l_0_12_147) l_0_12_151))))
 (let ((?x45463 (+ (+ ?x45457 (* (* 2.0 l_0_12_148) l_0_12_152)) (* (* 2.0 l_0_12_149) l_0_12_153))))
 (let ((?x45469 (- (+ ?x45463 (* (* 2.0 l_0_12_150) l_0_12_154)) (* (* 2.0 l_0_12_175) l_0_12_179))))
 (let ((?x45475 (- (- ?x45469 (* (* 2.0 l_0_12_176) l_0_12_180)) (* (* 2.0 l_0_12_177) l_0_12_181))))
 (let ((?x45484 (- (- (- (- ?x45475 (* (* 2.0 l_0_12_178) l_0_12_182)) ?x45479) ?x45481) ?x45483)))
 (= (+ (+ (+ (+ (- (- ?x45484 ?x44363) ?x44366) ?x45487) ?x45489) ?x45491) ?x45493) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x45557 (* l_0_12_43 l_0_12_43)))
 (let ((?x45555 (* l_0_12_42 l_0_12_42)))
 (let ((?x45553 (* l_0_12_41 l_0_12_41)))
 (let ((?x45551 (* l_0_12_40 l_0_12_40)))
 (let ((?x45549 (* l_0_12_39 l_0_12_39)))
 (let ((?x45547 (* l_0_12_15 l_0_12_15)))
 (let ((?x45545 (* l_0_12_14 l_0_12_14)))
 (let ((?x45532 (* l_0_12_13 l_0_12_13)))
 (let ((?x45544 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x45532)))
 (let ((?x45558 (+ (+ (+ (+ (+ (- (- ?x45544 ?x45545) ?x45547) ?x45549) ?x45551) ?x45553) ?x45555) ?x45557)))
 (= ?x45558 0.0))))))))))))
(assert
 (let ((?x45557 (* l_0_12_43 l_0_12_43)))
 (let ((?x45606 (* 2.0 l_0_12_43)))
 (let ((?x45607 (* ?x45606 l_0_12_48)))
 (let ((?x45555 (* l_0_12_42 l_0_12_42)))
 (let ((?x45602 (* 2.0 l_0_12_42)))
 (let ((?x45603 (* ?x45602 l_0_12_47)))
 (let ((?x45553 (* l_0_12_41 l_0_12_41)))
 (let ((?x45598 (* 2.0 l_0_12_41)))
 (let ((?x45599 (* ?x45598 l_0_12_46)))
 (let ((?x45551 (* l_0_12_40 l_0_12_40)))
 (let ((?x45594 (* 2.0 l_0_12_40)))
 (let ((?x45595 (* ?x45594 l_0_12_45)))
 (let ((?x45549 (* l_0_12_39 l_0_12_39)))
 (let ((?x45590 (* 2.0 l_0_12_39)))
 (let ((?x45591 (* ?x45590 l_0_12_44)))
 (let ((?x45547 (* l_0_12_15 l_0_12_15)))
 (let ((?x45586 (* 2.0 l_0_12_15)))
 (let ((?x45587 (* ?x45586 l_0_12_20)))
 (let ((?x45545 (* l_0_12_14 l_0_12_14)))
 (let ((?x45582 (* 2.0 l_0_12_14)))
 (let ((?x45583 (* ?x45582 l_0_12_19)))
 (let ((?x45532 (* l_0_12_13 l_0_12_13)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45579 (* ?x45229 l_0_12_18)))
 (let ((?x45529 (* l_0_12_12 l_0_12_12)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45576 (* ?x44357 l_0_12_17)))
 (let ((?x45577 (- (+ (* (* (- 2.0) l_0_12_11) l_0_12_16) (* l_0_12_11 l_0_12_11)) ?x45576)))
 (let ((?x45589 (+ (- (+ (- (+ (- (+ ?x45577 ?x45529) ?x45579) ?x45532) ?x45583) ?x45545) ?x45587) ?x45547)))
 (let ((?x45604 (+ (- (+ (- (+ (- (+ ?x45589 ?x45591) ?x45549) ?x45595) ?x45551) ?x45599) ?x45553) ?x45603)))
 (= (- (+ (- ?x45604 ?x45555) ?x45607) ?x45557) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x45606 (* 2.0 l_0_12_43)))
 (let ((?x45671 (* ?x45606 l_0_12_54)))
 (let ((?x45602 (* 2.0 l_0_12_42)))
 (let ((?x45669 (* ?x45602 l_0_12_53)))
 (let ((?x45598 (* 2.0 l_0_12_41)))
 (let ((?x45667 (* ?x45598 l_0_12_52)))
 (let ((?x45594 (* 2.0 l_0_12_40)))
 (let ((?x45665 (* ?x45594 l_0_12_51)))
 (let ((?x45590 (* 2.0 l_0_12_39)))
 (let ((?x45663 (* ?x45590 l_0_12_50)))
 (let ((?x45661 (* l_0_12_183 l_0_12_183)))
 (let ((?x45659 (* l_0_12_182 l_0_12_182)))
 (let ((?x45657 (* l_0_12_181 l_0_12_181)))
 (let ((?x45655 (* l_0_12_180 l_0_12_180)))
 (let ((?x45653 (* l_0_12_179 l_0_12_179)))
 (let ((?x45651 (* l_0_12_155 l_0_12_155)))
 (let ((?x45649 (* l_0_12_154 l_0_12_154)))
 (let ((?x45647 (* l_0_12_153 l_0_12_153)))
 (let ((?x45645 (* l_0_12_152 l_0_12_152)))
 (let ((?x45643 (* l_0_12_151 l_0_12_151)))
 (let ((?x45586 (* 2.0 l_0_12_15)))
 (let ((?x45641 (* ?x45586 l_0_12_26)))
 (let ((?x45582 (* 2.0 l_0_12_14)))
 (let ((?x45639 (* ?x45582 l_0_12_25)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45637 (* ?x45229 l_0_12_24)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x23460 (* ?x44357 l_0_12_23)))
 (let ((?x45642 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_22) ?x23460) ?x45637) ?x45639) ?x45641)))
 (let ((?x45656 (- (- (+ (+ (+ (+ (+ ?x45642 ?x45643) ?x45645) ?x45647) ?x45649) ?x45651) ?x45653) ?x45655)))
 (let ((?x45670 (+ (+ (+ (+ (- (- (- ?x45656 ?x45657) ?x45659) ?x45661) ?x45663) ?x45665) ?x45667) ?x45669)))
 (= (+ ?x45670 ?x45671) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x45731 (* l_0_12_49 l_0_12_49)))
 (let ((?x45729 (* l_0_12_48 l_0_12_48)))
 (let ((?x45727 (* l_0_12_47 l_0_12_47)))
 (let ((?x45725 (* l_0_12_46 l_0_12_46)))
 (let ((?x45723 (* l_0_12_45 l_0_12_45)))
 (let ((?x45721 (* l_0_12_44 l_0_12_44)))
 (let ((?x45606 (* 2.0 l_0_12_43)))
 (let ((?x45607 (* ?x45606 l_0_12_48)))
 (let ((?x45602 (* 2.0 l_0_12_42)))
 (let ((?x45603 (* ?x45602 l_0_12_47)))
 (let ((?x45598 (* 2.0 l_0_12_41)))
 (let ((?x45599 (* ?x45598 l_0_12_46)))
 (let ((?x45594 (* 2.0 l_0_12_40)))
 (let ((?x45595 (* ?x45594 l_0_12_45)))
 (let ((?x45590 (* 2.0 l_0_12_39)))
 (let ((?x45591 (* ?x45590 l_0_12_44)))
 (let ((?x45714 (* l_0_12_21 l_0_12_21)))
 (let ((?x45712 (* l_0_12_20 l_0_12_20)))
 (let ((?x45710 (* l_0_12_19 l_0_12_19)))
 (let ((?x45708 (* l_0_12_18 l_0_12_18)))
 (let ((?x45706 (* l_0_12_17 l_0_12_17)))
 (let ((?x45691 (* l_0_12_16 l_0_12_16)))
 (let ((?x45586 (* 2.0 l_0_12_15)))
 (let ((?x45587 (* ?x45586 l_0_12_20)))
 (let ((?x45582 (* 2.0 l_0_12_14)))
 (let ((?x45583 (* ?x45582 l_0_12_19)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45579 (* ?x45229 l_0_12_18)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45576 (* ?x44357 l_0_12_17)))
 (let ((?x23580 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_16) ?x45576) ?x45579) ?x45583) ?x45587)))
 (let ((?x45716 (- (- (- (- (- (- (- ?x23580 ?x45691) ?x45706) ?x45708) ?x45710) ?x45712) ?x45714) ?x45591)))
 (let ((?x45726 (+ (+ (+ (- (- (- (- ?x45716 ?x45595) ?x45599) ?x45603) ?x45607) ?x45721) ?x45723) ?x45725)))
 (= (+ (+ (+ ?x45726 ?x45727) ?x45729) ?x45731) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45813 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x45810 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x45807 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x45804 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x45801 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x45798 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x45606 (* 2.0 l_0_12_43)))
 (let ((?x45671 (* ?x45606 l_0_12_54)))
 (let ((?x45602 (* 2.0 l_0_12_42)))
 (let ((?x45669 (* ?x45602 l_0_12_53)))
 (let ((?x45598 (* 2.0 l_0_12_41)))
 (let ((?x45667 (* ?x45598 l_0_12_52)))
 (let ((?x45594 (* 2.0 l_0_12_40)))
 (let ((?x45665 (* ?x45594 l_0_12_51)))
 (let ((?x45590 (* 2.0 l_0_12_39)))
 (let ((?x45663 (* ?x45590 l_0_12_50)))
 (let ((?x45790 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x45787 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x45784 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45769 (* ?x45257 l_0_12_24)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45764 (* ?x44870 l_0_12_23)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x45762 (* ?x44867 l_0_12_22)))
 (let ((?x45586 (* 2.0 l_0_12_15)))
 (let ((?x45641 (* ?x45586 l_0_12_26)))
 (let ((?x45582 (* 2.0 l_0_12_14)))
 (let ((?x45639 (* ?x45582 l_0_12_25)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45637 (* ?x45229 l_0_12_24)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x23460 (* ?x44357 l_0_12_23)))
 (let ((?x45746 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_22) ?x23460) ?x45637) ?x45639) ?x45641)))
 (let ((?x45752 (+ (+ ?x45746 (* (* 2.0 l_0_12_151) l_0_12_156)) (* (* 2.0 l_0_12_152) l_0_12_157))))
 (let ((?x45758 (+ (+ ?x45752 (* (* 2.0 l_0_12_153) l_0_12_158)) (* (* 2.0 l_0_12_154) l_0_12_159))))
 (let ((?x45768 (- (- (- (+ ?x45758 (* (* 2.0 l_0_12_155) l_0_12_160)) ?x45762) ?x45764) (* (* 2.0 l_0_12_179) l_0_12_184))))
 (let ((?x45776 (- (- (- ?x45768 ?x45769) (* (* 2.0 l_0_12_180) l_0_12_185)) (* (* 2.0 l_0_12_181) l_0_12_186))))
 (let ((?x45782 (- (- ?x45776 (* (* 2.0 l_0_12_182) l_0_12_187)) (* (* 2.0 l_0_12_183) l_0_12_188))))
 (let ((?x45795 (- (- (- (- (- (- (- ?x45782 ?x45784) ?x45787) ?x45790) ?x45663) ?x45665) ?x45667) ?x45669)))
 (let ((?x45814 (+ (+ (+ (+ (+ (+ (- ?x45795 ?x45671) ?x45798) ?x45801) ?x45804) ?x45807) ?x45810) ?x45813)))
 (= ?x45814 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45899 (* l_0_12_56 l_0_12_56)))
 (let ((?x45897 (* l_0_12_55 l_0_12_55)))
 (let ((?x45895 (* l_0_12_54 l_0_12_54)))
 (let ((?x45893 (* l_0_12_53 l_0_12_53)))
 (let ((?x45891 (* l_0_12_52 l_0_12_52)))
 (let ((?x45889 (* l_0_12_51 l_0_12_51)))
 (let ((?x45887 (* l_0_12_50 l_0_12_50)))
 (let ((?x45885 (* l_0_12_28 l_0_12_28)))
 (let ((?x45883 (* l_0_12_27 l_0_12_27)))
 (let ((?x45881 (* l_0_12_26 l_0_12_26)))
 (let ((?x45879 (* l_0_12_25 l_0_12_25)))
 (let ((?x45877 (* l_0_12_24 l_0_12_24)))
 (let ((?x45875 (* l_0_12_23 l_0_12_23)))
 (let ((?x45873 (* l_0_12_22 l_0_12_22)))
 (let ((?x45856 (+ (* (* 2.0 l_0_12_151) l_0_12_162) (* (* 2.0 l_0_12_152) l_0_12_163))))
 (let ((?x45860 (+ (+ ?x45856 (* (* 2.0 l_0_12_153) l_0_12_164)) (* (* 2.0 l_0_12_154) l_0_12_165))))
 (let ((?x45864 (- (+ ?x45860 (* (* 2.0 l_0_12_155) l_0_12_166)) (* (* 2.0 l_0_12_179) l_0_12_190))))
 (let ((?x45868 (- (- ?x45864 (* (* 2.0 l_0_12_180) l_0_12_191)) (* (* 2.0 l_0_12_181) l_0_12_192))))
 (let ((?x45872 (- (- ?x45868 (* (* 2.0 l_0_12_182) l_0_12_193)) (* (* 2.0 l_0_12_183) l_0_12_194))))
 (let ((?x45886 (- (- (- (- (- (- (- ?x45872 ?x45873) ?x45875) ?x45877) ?x45879) ?x45881) ?x45883) ?x45885)))
 (let ((?x45900 (+ (+ (+ (+ (+ (+ (+ ?x45886 ?x45887) ?x45889) ?x45891) ?x45893) ?x45895) ?x45897) ?x45899)))
 (= ?x45900 0.0)))))))))))))))))))))))
(assert
 (let ((?x44309 (* l_0_12_29 l_0_12_29)))
 (let ((?x21268 (* l_0_12_1 l_0_12_1)))
 (let ((?x23967 (- ?x21268 ?x44309)))
 (let ((?x45925 (- (+ ?x23967 (* (* 2.0 l_0_12_57) l_0_12_63)) (* (* 2.0 l_0_12_85) l_0_12_91))))
 (= ?x45925 0.0))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44329 (* ?x44328 l_0_12_30)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x45933 (* ?x44405 l_0_12_2)))
 (let ((?x45937 (- (+ ?x45933 (* (* 2.0 l_0_12_141) l_0_12_147)) (* (* 2.0 l_0_12_169) l_0_12_175))))
 (let ((?x45942 (+ (+ (- ?x45937 ?x44329) (* (* 2.0 l_0_12_58) l_0_12_63)) (* (* 2.0 l_0_12_59) l_0_12_64))))
 (let ((?x45946 (- (- ?x45942 (* (* 2.0 l_0_12_86) l_0_12_91)) (* (* 2.0 l_0_12_87) l_0_12_92))))
 (= ?x45946 0.0)))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45493 (* ?x45390 l_0_12_53)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45491 (* ?x45387 l_0_12_52)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45489 (* ?x45384 l_0_12_51)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45487 (* ?x45381 l_0_12_50)))
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44360 (* ?x44328 l_0_12_32)))
 (let ((?x45310 (* 2.0 l_0_12_24)))
 (let ((?x45483 (* ?x45310 l_0_12_9)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45481 (* ?x45092 l_0_12_8)))
 (let ((?x45305 (* 2.0 l_0_12_22)))
 (let ((?x45479 (* ?x45305 l_0_12_7)))
 (let ((?x23225 (* 2.0 l_0_12_10)))
 (let ((?x45965 (* ?x23225 l_0_12_25)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x45964 (* ?x44405 l_0_12_4)))
 (let ((?x45972 (- (- (- (+ (+ (+ (+ ?x45964 ?x45965) ?x45479) ?x45481) ?x45483) ?x44360) ?x45487) ?x45489)))
 (let ((?x45980 (+ (+ (- (- ?x45972 ?x45491) ?x45493) (* (* 2.0 l_0_12_60) l_0_12_63)) (* (* 2.0 l_0_12_61) l_0_12_64))))
 (let ((?x45986 (- (+ ?x45980 (* (* 2.0 l_0_12_62) l_0_12_65)) (* (* 2.0 l_0_12_88) l_0_12_91))))
 (let ((?x45992 (- (- ?x45986 (* (* 2.0 l_0_12_89) l_0_12_92)) (* (* 2.0 l_0_12_90) l_0_12_93))))
 (= ?x45992 0.0))))))))))))))))))))))))))
(assert
 (let ((?x46022 (* l_0_12_94 l_0_12_94)))
 (let ((?x46020 (* l_0_12_93 l_0_12_93)))
 (let ((?x46018 (* l_0_12_92 l_0_12_92)))
 (let ((?x46016 (* l_0_12_91 l_0_12_91)))
 (let ((?x46014 (* l_0_12_66 l_0_12_66)))
 (let ((?x46012 (* l_0_12_65 l_0_12_65)))
 (let ((?x46010 (* l_0_12_64 l_0_12_64)))
 (let ((?x46008 (* l_0_12_63 l_0_12_63)))
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44391 (* ?x44328 l_0_12_35)))
 (let ((?x46007 (- (* (* 2.0 l_0_12_1) l_0_12_7) ?x44391)))
 (let ((?x46021 (- (- (- (+ (+ (+ (+ ?x46007 ?x46008) ?x46010) ?x46012) ?x46014) ?x46016) ?x46018) ?x46020)))
 (= (- ?x46021 ?x46022) 0.0))))))))))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44397 (* ?x44328 l_0_12_39)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x44407 (* ?x44405 l_0_12_11)))
 (let ((?x24203 (- ?x44407 ?x44397)))
 (let ((?x46031 (+ (+ ?x24203 (* (* 2.0 l_0_12_63) l_0_12_67)) (* (* 2.0 l_0_12_64) l_0_12_68))))
 (let ((?x46037 (+ (+ ?x46031 (* (* 2.0 l_0_12_65) l_0_12_69)) (* (* 2.0 l_0_12_66) l_0_12_70))))
 (let ((?x46043 (- (- ?x46037 (* (* 2.0 l_0_12_91) l_0_12_95)) (* (* 2.0 l_0_12_92) l_0_12_96))))
 (let ((?x46049 (- (- ?x46043 (* (* 2.0 l_0_12_93) l_0_12_97)) (* (* 2.0 l_0_12_94) l_0_12_98))))
 (= ?x46049 0.0)))))))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44415 (* ?x44328 l_0_12_44)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x44408 (* ?x44405 l_0_12_16)))
 (let ((?x46078 (- (- ?x44408 (* (* 2.0 l_0_12_100) l_0_12_91)) (* (* 2.0 l_0_12_101) l_0_12_92))))
 (let ((?x46084 (- (- ?x46078 (* (* 2.0 l_0_12_102) l_0_12_93)) (* (* 2.0 l_0_12_103) l_0_12_94))))
 (let ((?x46089 (+ (+ (- ?x46084 ?x44415) (* (* 2.0 l_0_12_63) l_0_12_72)) (* (* 2.0 l_0_12_64) l_0_12_73))))
 (let ((?x46093 (+ (+ ?x46089 (* (* 2.0 l_0_12_65) l_0_12_74)) (* (* 2.0 l_0_12_66) l_0_12_75))))
 (= ?x46093 0.0))))))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44431 (* ?x44328 l_0_12_50)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x24371 (* ?x44405 l_0_12_22)))
 (let ((?x24336 (- (- ?x24371 (* (* 2.0 l_0_12_106) l_0_12_91)) (* (* 2.0 l_0_12_107) l_0_12_92))))
 (let ((?x46106 (- (- ?x24336 (* (* 2.0 l_0_12_108) l_0_12_93)) (* (* 2.0 l_0_12_109) l_0_12_94))))
 (let ((?x46111 (+ (+ (- ?x46106 ?x44431) (* (* 2.0 l_0_12_63) l_0_12_78)) (* (* 2.0 l_0_12_64) l_0_12_79))))
 (let ((?x46115 (+ (+ ?x46111 (* (* 2.0 l_0_12_65) l_0_12_80)) (* (* 2.0 l_0_12_66) l_0_12_81))))
 (= ?x46115 0.0))))))))))
(assert
 (let ((?x44500 (* l_0_12_31 l_0_12_31)))
 (let ((?x44498 (* l_0_12_30 l_0_12_30)))
 (let ((?x44496 (* l_0_12_3 l_0_12_3)))
 (let ((?x44482 (* l_0_12_2 l_0_12_2)))
 (let ((?x24469 (- (* (* (- 2.0) l_0_12_119) l_0_12_134) (* (* 2.0 l_0_12_120) l_0_12_135))))
 (let ((?x46134 (- (- ?x24469 (* (* 2.0 l_0_12_121) l_0_12_136)) (* (* 2.0 l_0_12_122) l_0_12_137))))
 (let ((?x46138 (+ (+ ?x46134 (* (* 2.0 l_0_12_142) l_0_12_147)) (* (* 2.0 l_0_12_143) l_0_12_148))))
 (let ((?x46142 (- (- ?x46138 (* (* 2.0 l_0_12_170) l_0_12_175)) (* (* 2.0 l_0_12_171) l_0_12_176))))
 (let ((?x46147 (- (- (+ ?x46142 ?x44482) (* (* 2.0 l_0_12_203) l_0_12_218)) (* (* 2.0 l_0_12_204) l_0_12_219))))
 (let ((?x46151 (- (- ?x46147 (* (* 2.0 l_0_12_205) l_0_12_220)) (* (* 2.0 l_0_12_206) l_0_12_221))))
 (let ((?x46155 (- (- ?x46151 (* (* 2.0 l_0_12_231) l_0_12_246)) (* (* 2.0 l_0_12_232) l_0_12_247))))
 (let ((?x46159 (- (- ?x46155 (* (* 2.0 l_0_12_233) l_0_12_248)) (* (* 2.0 l_0_12_234) l_0_12_249))))
 (let ((?x46163 (- (- ?x46159 (* (* 2.0 l_0_12_259) l_0_12_274)) (* (* 2.0 l_0_12_260) l_0_12_275))))
 (let ((?x46167 (- (- ?x46163 (* (* 2.0 l_0_12_261) l_0_12_276)) (* (* 2.0 l_0_12_262) l_0_12_277))))
 (let ((?x46171 (- (- ?x46167 (* (* 2.0 l_0_12_287) l_0_12_302)) (* (* 2.0 l_0_12_288) l_0_12_303))))
 (let ((?x46175 (- (- ?x46171 (* (* 2.0 l_0_12_289) l_0_12_304)) (* (* 2.0 l_0_12_290) l_0_12_305))))
 (= (- (- (+ ?x46175 ?x44496) ?x44498) ?x44500) 0.0))))))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44562 (* ?x44365 l_0_12_33)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44560 (* ?x44362 l_0_12_32)))
 (let ((?x44557 (* 2.0 l_0_12_3)))
 (let ((?x44558 (* ?x44557 l_0_12_5)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x44519 (* ?x44518 l_0_12_4)))
 (let ((?x24690 (+ (* (* 2.0 l_0_12_144) l_0_12_147) (* (* 2.0 l_0_12_145) l_0_12_148))))
 (let ((?x24627 (- (+ ?x24690 (* (* 2.0 l_0_12_146) l_0_12_149)) (* (* 2.0 l_0_12_172) l_0_12_175))))
 (let ((?x24626 (- (- ?x24627 (* (* 2.0 l_0_12_173) l_0_12_176)) (* (* 2.0 l_0_12_174) l_0_12_177))))
 (= (- (- (+ (+ ?x24626 ?x44519) ?x44558) ?x44560) ?x44562) 0.0)))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44671 (* ?x44365 l_0_12_36)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44669 (* ?x44362 l_0_12_35)))
 (let ((?x44557 (* 2.0 l_0_12_3)))
 (let ((?x44667 (* ?x44557 l_0_12_8)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x44617 (* ?x44518 l_0_12_7)))
 (let ((?x24786 (* l_0_12_178 l_0_12_178)))
 (let ((?x24782 (* l_0_12_177 l_0_12_177)))
 (let ((?x24787 (* l_0_12_176 l_0_12_176)))
 (let ((?x24775 (* l_0_12_175 l_0_12_175)))
 (let ((?x24763 (* l_0_12_150 l_0_12_150)))
 (let ((?x24751 (* l_0_12_149 l_0_12_149)))
 (let ((?x24757 (+ (+ (* l_0_12_147 l_0_12_147) (* l_0_12_148 l_0_12_148)) ?x24751)))
 (let ((?x46234 (+ (+ (- (- (- (- (+ ?x24757 ?x24763) ?x24775) ?x24787) ?x24782) ?x24786) ?x44617) ?x44667)))
 (= (- (- ?x46234 ?x44669) ?x44671) 0.0))))))))))))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45493 (* ?x45390 l_0_12_53)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45491 (* ?x45387 l_0_12_52)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45489 (* ?x45384 l_0_12_51)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45487 (* ?x45381 l_0_12_50)))
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44937 (* ?x44365 l_0_12_45)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44934 (* ?x44362 l_0_12_44)))
 (let ((?x45310 (* 2.0 l_0_12_24)))
 (let ((?x45483 (* ?x45310 l_0_12_9)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45481 (* ?x45092 l_0_12_8)))
 (let ((?x45305 (* 2.0 l_0_12_22)))
 (let ((?x45479 (* ?x45305 l_0_12_7)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x44871 (* ?x44870 l_0_12_3)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x44868 (* ?x44867 l_0_12_2)))
 (let ((?x23225 (* 2.0 l_0_12_10)))
 (let ((?x45965 (* ?x23225 l_0_12_25)))
 (let ((?x46250 (+ (+ ?x45965 (* (* 2.0 l_0_12_147) l_0_12_156)) (* (* 2.0 l_0_12_148) l_0_12_157))))
 (let ((?x46254 (+ (+ ?x46250 (* (* 2.0 l_0_12_149) l_0_12_158)) (* (* 2.0 l_0_12_150) l_0_12_159))))
 (let ((?x46260 (- (- (+ (+ ?x46254 ?x44868) ?x44871) (* (* 2.0 l_0_12_175) l_0_12_184)) (* (* 2.0 l_0_12_176) l_0_12_185))))
 (let ((?x46264 (- (- ?x46260 (* (* 2.0 l_0_12_177) l_0_12_186)) (* (* 2.0 l_0_12_178) l_0_12_187))))
 (let ((?x46271 (- (- (- (- (+ (+ (+ ?x46264 ?x45479) ?x45481) ?x45483) ?x44934) ?x44937) ?x45487) ?x45489)))
 (= (- (- ?x46271 ?x45491) ?x45493) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x45127 (* ?x44365 l_0_12_51)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x45125 (* ?x44362 l_0_12_50)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45093 (* ?x45092 l_0_12_3)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x45080 (* ?x44518 l_0_12_22)))
 (let ((?x24870 (+ (* (* 2.0 l_0_12_147) l_0_12_162) (* (* 2.0 l_0_12_148) l_0_12_163))))
 (let ((?x24877 (+ (+ ?x24870 (* (* 2.0 l_0_12_149) l_0_12_164)) (* (* 2.0 l_0_12_150) l_0_12_165))))
 (let ((?x46293 (- (- ?x24877 (* (* 2.0 l_0_12_175) l_0_12_190)) (* (* 2.0 l_0_12_176) l_0_12_191))))
 (let ((?x46297 (- (- ?x46293 (* (* 2.0 l_0_12_177) l_0_12_192)) (* (* 2.0 l_0_12_178) l_0_12_193))))
 (= (- (- (+ (+ ?x46297 ?x45080) ?x45093) ?x45125) ?x45127) 0.0))))))))))))))
(assert
 (let ((?x45182 (* l_0_12_6 l_0_12_6)))
 (let ((?x45180 (* l_0_12_5 l_0_12_5)))
 (let ((?x45178 (* l_0_12_4 l_0_12_4)))
 (let ((?x45176 (* l_0_12_34 l_0_12_34)))
 (let ((?x24942 (- (- (* (- l_0_12_32) l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x45176)))
 (= (+ (+ (+ ?x24942 ?x45178) ?x45180) ?x45182) 0.0)))))))
(assert
 (let ((?x45207 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x45204 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x45201 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45198 (* ?x45197 l_0_12_37)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45195 (* ?x45194 l_0_12_36)))
 (let ((?x24933 (+ (+ (- (- (* (* (- 2.0) l_0_12_32) l_0_12_35) ?x45195) ?x45198) ?x45201) ?x45204)))
 (= (+ ?x24933 ?x45207) 0.0))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45236 (* ?x45197 l_0_12_41)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45234 (* ?x45194 l_0_12_40)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45232 (* ?x45192 l_0_12_39)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45230 (* ?x45229 l_0_12_6)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45227 (* ?x44357 l_0_12_5)))
 (let ((?x23013 (+ (+ (* (* 2.0 l_0_12_11) l_0_12_4) ?x45227) ?x45230)))
 (= (- (- (- ?x23013 ?x45232) ?x45234) ?x45236) 0.0)))))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45267 (* ?x45197 l_0_12_46)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45264 (* ?x45194 l_0_12_45)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45261 (* ?x45192 l_0_12_44)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45258 (* ?x45257 l_0_12_6)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45255 (* ?x44870 l_0_12_5)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x23014 (* ?x44867 l_0_12_4)))
 (= (- (- (- (+ (+ ?x23014 ?x45255) ?x45258) ?x45261) ?x45264) ?x45267) 0.0))))))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45317 (* ?x45197 l_0_12_52)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45315 (* ?x45194 l_0_12_51)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45313 (* ?x45192 l_0_12_50)))
 (let ((?x45310 (* 2.0 l_0_12_24)))
 (let ((?x45311 (* ?x45310 l_0_12_6)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45308 (* ?x45092 l_0_12_5)))
 (let ((?x45305 (* 2.0 l_0_12_22)))
 (let ((?x45306 (* ?x45305 l_0_12_4)))
 (let ((?x46336 (- (- (- (+ (+ ?x45306 ?x45308) ?x45311) ?x45313) ?x45315) ?x45317)))
 (= ?x46336 0.0)))))))))))))))
(assert
 (let ((?x45363 (* l_0_12_9 l_0_12_9)))
 (let ((?x45361 (* l_0_12_8 l_0_12_8)))
 (let ((?x45359 (* l_0_12_7 l_0_12_7)))
 (let ((?x45357 (* l_0_12_38 l_0_12_38)))
 (let ((?x45355 (* l_0_12_37 l_0_12_37)))
 (let ((?x45353 (* l_0_12_36 l_0_12_36)))
 (let ((?x25141 (- (- (- (* l_0_12_10 l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x45353) ?x45355)))
 (= (+ (+ (+ (- ?x25141 ?x45357) ?x45359) ?x45361) ?x45363) 0.0)))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45391 (* ?x45390 l_0_12_42)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45388 (* ?x45387 l_0_12_41)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45385 (* ?x45384 l_0_12_40)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45382 (* ?x45381 l_0_12_39)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45379 (* ?x45229 l_0_12_9)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45377 (* ?x44357 l_0_12_8)))
 (let ((?x44350 (* 2.0 l_0_12_11)))
 (let ((?x45375 (* ?x44350 l_0_12_7)))
 (let ((?x23225 (* 2.0 l_0_12_10)))
 (let ((?x23227 (* ?x23225 l_0_12_14)))
 (let ((?x25101 (- (- (- (- (+ (+ (+ ?x23227 ?x45375) ?x45377) ?x45379) ?x45382) ?x45385) ?x45388) ?x45391)))
 (= ?x25101 0.0)))))))))))))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45436 (* ?x45390 l_0_12_47)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45433 (* ?x45387 l_0_12_46)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45430 (* ?x45384 l_0_12_45)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45427 (* ?x45381 l_0_12_44)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45424 (* ?x45257 l_0_12_9)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45422 (* ?x44870 l_0_12_8)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x45420 (* ?x44867 l_0_12_7)))
 (let ((?x23225 (* 2.0 l_0_12_10)))
 (let ((?x45407 (* ?x23225 l_0_12_19)))
 (let ((?x25059 (- (- (- (- (+ (+ (+ ?x45407 ?x45420) ?x45422) ?x45424) ?x45427) ?x45430) ?x45433) ?x45436)))
 (= ?x25059 0.0)))))))))))))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45493 (* ?x45390 l_0_12_53)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45491 (* ?x45387 l_0_12_52)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45489 (* ?x45384 l_0_12_51)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45487 (* ?x45381 l_0_12_50)))
 (let ((?x45310 (* 2.0 l_0_12_24)))
 (let ((?x45483 (* ?x45310 l_0_12_9)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45481 (* ?x45092 l_0_12_8)))
 (let ((?x45305 (* 2.0 l_0_12_22)))
 (let ((?x45479 (* ?x45305 l_0_12_7)))
 (let ((?x23225 (* 2.0 l_0_12_10)))
 (let ((?x45965 (* ?x23225 l_0_12_25)))
 (let ((?x25323 (- (- (- (- (+ (+ (+ ?x45965 ?x45479) ?x45481) ?x45483) ?x45487) ?x45489) ?x45491) ?x45493)))
 (= ?x25323 0.0)))))))))))))))))))
(assert
 (let ((?x45557 (* l_0_12_43 l_0_12_43)))
 (let ((?x45555 (* l_0_12_42 l_0_12_42)))
 (let ((?x45553 (* l_0_12_41 l_0_12_41)))
 (let ((?x45551 (* l_0_12_40 l_0_12_40)))
 (let ((?x45549 (* l_0_12_39 l_0_12_39)))
 (let ((?x45547 (* l_0_12_15 l_0_12_15)))
 (let ((?x45545 (* l_0_12_14 l_0_12_14)))
 (let ((?x45532 (* l_0_12_13 l_0_12_13)))
 (let ((?x46349 (+ (+ (+ (* l_0_12_11 l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x45532) ?x45545)))
 (= (- (- (- (- (- (+ ?x46349 ?x45547) ?x45549) ?x45551) ?x45553) ?x45555) ?x45557) 0.0)))))))))))
(assert
 (let ((?x45606 (* 2.0 l_0_12_43)))
 (let ((?x45607 (* ?x45606 l_0_12_48)))
 (let ((?x45602 (* 2.0 l_0_12_42)))
 (let ((?x45603 (* ?x45602 l_0_12_47)))
 (let ((?x45598 (* 2.0 l_0_12_41)))
 (let ((?x45599 (* ?x45598 l_0_12_46)))
 (let ((?x45594 (* 2.0 l_0_12_40)))
 (let ((?x45595 (* ?x45594 l_0_12_45)))
 (let ((?x45590 (* 2.0 l_0_12_39)))
 (let ((?x45591 (* ?x45590 l_0_12_44)))
 (let ((?x45586 (* 2.0 l_0_12_15)))
 (let ((?x45587 (* ?x45586 l_0_12_20)))
 (let ((?x45582 (* 2.0 l_0_12_14)))
 (let ((?x45583 (* ?x45582 l_0_12_19)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45579 (* ?x45229 l_0_12_18)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45576 (* ?x44357 l_0_12_17)))
 (let ((?x23580 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_16) ?x45576) ?x45579) ?x45583) ?x45587)))
 (= (- (- (- (- (- ?x23580 ?x45591) ?x45595) ?x45599) ?x45603) ?x45607) 0.0)))))))))))))))))))))
(assert
 (let ((?x45606 (* 2.0 l_0_12_43)))
 (let ((?x45671 (* ?x45606 l_0_12_54)))
 (let ((?x45602 (* 2.0 l_0_12_42)))
 (let ((?x45669 (* ?x45602 l_0_12_53)))
 (let ((?x45598 (* 2.0 l_0_12_41)))
 (let ((?x45667 (* ?x45598 l_0_12_52)))
 (let ((?x45594 (* 2.0 l_0_12_40)))
 (let ((?x45665 (* ?x45594 l_0_12_51)))
 (let ((?x45590 (* 2.0 l_0_12_39)))
 (let ((?x45663 (* ?x45590 l_0_12_50)))
 (let ((?x45586 (* 2.0 l_0_12_15)))
 (let ((?x45641 (* ?x45586 l_0_12_26)))
 (let ((?x45582 (* 2.0 l_0_12_14)))
 (let ((?x45639 (* ?x45582 l_0_12_25)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45637 (* ?x45229 l_0_12_24)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x23460 (* ?x44357 l_0_12_23)))
 (let ((?x45746 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_22) ?x23460) ?x45637) ?x45639) ?x45641)))
 (let ((?x46388 (- (- (- (- (- ?x45746 ?x45663) ?x45665) ?x45667) ?x45669) ?x45671)))
 (= ?x46388 0.0))))))))))))))))))))))
(assert
 (let ((?x45731 (* l_0_12_49 l_0_12_49)))
 (let ((?x45729 (* l_0_12_48 l_0_12_48)))
 (let ((?x45727 (* l_0_12_47 l_0_12_47)))
 (let ((?x45725 (* l_0_12_46 l_0_12_46)))
 (let ((?x45723 (* l_0_12_45 l_0_12_45)))
 (let ((?x45721 (* l_0_12_44 l_0_12_44)))
 (let ((?x45714 (* l_0_12_21 l_0_12_21)))
 (let ((?x45712 (* l_0_12_20 l_0_12_20)))
 (let ((?x45710 (* l_0_12_19 l_0_12_19)))
 (let ((?x45708 (* l_0_12_18 l_0_12_18)))
 (let ((?x46404 (+ (+ (+ (* l_0_12_16 l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x45708) ?x45710)))
 (let ((?x46411 (- (- (- (- (- (+ (+ ?x46404 ?x45712) ?x45714) ?x45721) ?x45723) ?x45725) ?x45727) ?x45729)))
 (= (- ?x46411 ?x45731) 0.0))))))))))))))
(assert
 (let ((?x45813 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x45810 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x45807 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x45804 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x45801 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x45798 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x45790 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x45787 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x45784 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45769 (* ?x45257 l_0_12_24)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45764 (* ?x44870 l_0_12_23)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x45762 (* ?x44867 l_0_12_22)))
 (let ((?x46417 (- (- (+ (+ (+ (+ (+ ?x45762 ?x45764) ?x45769) ?x45784) ?x45787) ?x45790) ?x45798) ?x45801)))
 (= (- (- (- (- ?x46417 ?x45804) ?x45807) ?x45810) ?x45813) 0.0))))))))))))))))))
(assert
 (let ((?x45899 (* l_0_12_56 l_0_12_56)))
 (let ((?x45897 (* l_0_12_55 l_0_12_55)))
 (let ((?x45895 (* l_0_12_54 l_0_12_54)))
 (let ((?x45893 (* l_0_12_53 l_0_12_53)))
 (let ((?x45891 (* l_0_12_52 l_0_12_52)))
 (let ((?x45889 (* l_0_12_51 l_0_12_51)))
 (let ((?x45887 (* l_0_12_50 l_0_12_50)))
 (let ((?x45885 (* l_0_12_28 l_0_12_28)))
 (let ((?x45883 (* l_0_12_27 l_0_12_27)))
 (let ((?x45881 (* l_0_12_26 l_0_12_26)))
 (let ((?x45879 (* l_0_12_25 l_0_12_25)))
 (let ((?x45877 (* l_0_12_24 l_0_12_24)))
 (let ((?x25507 (+ (+ (+ (* l_0_12_22 l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x45877) ?x45879)))
 (let ((?x25532 (- (- (- (- (+ (+ (+ ?x25507 ?x45881) ?x45883) ?x45885) ?x45887) ?x45889) ?x45891) ?x45893)))
 (= (- (- (- ?x25532 ?x45895) ?x45897) ?x45899) 0.0))))))))))))))))
(assert
 (let ((?x44309 (* l_0_12_29 l_0_12_29)))
 (let ((?x21268 (* l_0_12_1 l_0_12_1)))
 (let ((?x23967 (- ?x21268 ?x44309)))
 (= ?x23967 0.0)))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44329 (* ?x44328 l_0_12_30)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x45933 (* ?x44405 l_0_12_2)))
 (= (- ?x45933 ?x44329) 0.0))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44360 (* ?x44328 l_0_12_32)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x45964 (* ?x44405 l_0_12_4)))
 (= (- ?x45964 ?x44360) 0.0))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44391 (* ?x44328 l_0_12_35)))
 (let ((?x46007 (- (* (* 2.0 l_0_12_1) l_0_12_7) ?x44391)))
 (= ?x46007 0.0)))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44397 (* ?x44328 l_0_12_39)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x44407 (* ?x44405 l_0_12_11)))
 (let ((?x24203 (- ?x44407 ?x44397)))
 (= ?x24203 0.0)))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44415 (* ?x44328 l_0_12_44)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x44408 (* ?x44405 l_0_12_16)))
 (= (- ?x44408 ?x44415) 0.0))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44431 (* ?x44328 l_0_12_50)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x24371 (* ?x44405 l_0_12_22)))
 (let ((?x25423 (- (+ (- ?x24371 ?x44431) (* (* 2.0 l_0_12_57) l_0_12_60)) (* (* 2.0 l_0_12_85) l_0_12_88))))
 (= ?x25423 0.0)))))))
(assert
 (let ((?x44500 (* l_0_12_31 l_0_12_31)))
 (let ((?x44498 (* l_0_12_30 l_0_12_30)))
 (let ((?x44496 (* l_0_12_3 l_0_12_3)))
 (let ((?x44482 (* l_0_12_2 l_0_12_2)))
 (let ((?x46431 (- (* (* (- 2.0) l_0_12_113) l_0_12_116) (* (* 2.0 l_0_12_197) l_0_12_200))))
 (let ((?x46436 (- (- (+ ?x46431 ?x44482) (* (* 2.0 l_0_12_225) l_0_12_228)) (* (* 2.0 l_0_12_253) l_0_12_256))))
 (let ((?x46441 (- (- (+ (- ?x46436 (* (* 2.0 l_0_12_281) l_0_12_284)) ?x44496) ?x44498) ?x44500)))
 (= ?x46441 0.0)))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44562 (* ?x44365 l_0_12_33)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44560 (* ?x44362 l_0_12_32)))
 (let ((?x44557 (* 2.0 l_0_12_3)))
 (let ((?x44558 (* ?x44557 l_0_12_5)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x44519 (* ?x44518 l_0_12_4)))
 (= (- (- (+ ?x44519 ?x44558) ?x44560) ?x44562) 0.0))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44671 (* ?x44365 l_0_12_36)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44669 (* ?x44362 l_0_12_35)))
 (let ((?x44557 (* 2.0 l_0_12_3)))
 (let ((?x44667 (* ?x44557 l_0_12_8)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x44617 (* ?x44518 l_0_12_7)))
 (= (- (- (+ ?x44617 ?x44667) ?x44669) ?x44671) 0.0))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44937 (* ?x44365 l_0_12_45)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44934 (* ?x44362 l_0_12_44)))
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44360 (* ?x44328 l_0_12_32)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x44871 (* ?x44870 l_0_12_3)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x44868 (* ?x44867 l_0_12_2)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x45964 (* ?x44405 l_0_12_4)))
 (= (- (- (- (+ (+ ?x45964 ?x44868) ?x44871) ?x44360) ?x44934) ?x44937) 0.0))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x45127 (* ?x44365 l_0_12_51)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x45125 (* ?x44362 l_0_12_50)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45093 (* ?x45092 l_0_12_3)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x45080 (* ?x44518 l_0_12_22)))
 (let ((?x46502 (- (* (* 2.0 l_0_12_141) l_0_12_144) (* (* 2.0 l_0_12_169) l_0_12_172))))
 (let ((?x46508 (+ (- (- (+ (+ ?x46502 ?x45080) ?x45093) ?x45125) ?x45127) (* (* 2.0 l_0_12_58) l_0_12_60))))
 (let ((?x46512 (- (+ ?x46508 (* (* 2.0 l_0_12_59) l_0_12_61)) (* (* 2.0 l_0_12_86) l_0_12_88))))
 (= (- ?x46512 (* (* 2.0 l_0_12_87) l_0_12_89)) 0.0)))))))))))))
(assert
 (let ((?x45182 (* l_0_12_6 l_0_12_6)))
 (let ((?x45180 (* l_0_12_5 l_0_12_5)))
 (let ((?x45178 (* l_0_12_4 l_0_12_4)))
 (let ((?x45176 (* l_0_12_34 l_0_12_34)))
 (let ((?x24942 (- (- (* (- l_0_12_32) l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x45176)))
 (= (+ (+ (+ ?x24942 ?x45178) ?x45180) ?x45182) 0.0)))))))
(assert
 (let ((?x45207 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x45204 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x45201 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45198 (* ?x45197 l_0_12_37)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45195 (* ?x45194 l_0_12_36)))
 (let ((?x24933 (+ (+ (- (- (* (* (- 2.0) l_0_12_32) l_0_12_35) ?x45195) ?x45198) ?x45201) ?x45204)))
 (= (+ ?x24933 ?x45207) 0.0))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45236 (* ?x45197 l_0_12_41)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45234 (* ?x45194 l_0_12_40)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45232 (* ?x45192 l_0_12_39)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45230 (* ?x45229 l_0_12_6)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45227 (* ?x44357 l_0_12_5)))
 (let ((?x23013 (+ (+ (* (* 2.0 l_0_12_11) l_0_12_4) ?x45227) ?x45230)))
 (= (- (- (- ?x23013 ?x45232) ?x45234) ?x45236) 0.0)))))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45267 (* ?x45197 l_0_12_46)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45264 (* ?x45194 l_0_12_45)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45261 (* ?x45192 l_0_12_44)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45258 (* ?x45257 l_0_12_6)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45255 (* ?x44870 l_0_12_5)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x23014 (* ?x44867 l_0_12_4)))
 (= (- (- (- (+ (+ ?x23014 ?x45255) ?x45258) ?x45261) ?x45264) ?x45267) 0.0))))))))))))))
(assert
 (let ((?x46557 (* l_0_12_90 l_0_12_90)))
 (let ((?x46555 (* l_0_12_89 l_0_12_89)))
 (let ((?x46553 (* l_0_12_88 l_0_12_88)))
 (let ((?x46551 (* l_0_12_62 l_0_12_62)))
 (let ((?x46549 (* l_0_12_61 l_0_12_61)))
 (let ((?x46547 (* l_0_12_60 l_0_12_60)))
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45317 (* ?x45197 l_0_12_52)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45315 (* ?x45194 l_0_12_51)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45313 (* ?x45192 l_0_12_50)))
 (let ((?x45310 (* 2.0 l_0_12_24)))
 (let ((?x45311 (* ?x45310 l_0_12_6)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45308 (* ?x45092 l_0_12_5)))
 (let ((?x45305 (* 2.0 l_0_12_22)))
 (let ((?x45306 (* ?x45305 l_0_12_4)))
 (let ((?x46336 (- (- (- (+ (+ ?x45306 ?x45308) ?x45311) ?x45313) ?x45315) ?x45317)))
 (= (- (- (- (+ (+ (+ ?x46336 ?x46547) ?x46549) ?x46551) ?x46553) ?x46555) ?x46557) 0.0)))))))))))))))))))))
(assert
 (let ((?x45363 (* l_0_12_9 l_0_12_9)))
 (let ((?x45361 (* l_0_12_8 l_0_12_8)))
 (let ((?x45359 (* l_0_12_7 l_0_12_7)))
 (let ((?x45357 (* l_0_12_38 l_0_12_38)))
 (let ((?x45355 (* l_0_12_37 l_0_12_37)))
 (let ((?x45353 (* l_0_12_36 l_0_12_36)))
 (let ((?x25141 (- (- (- (* l_0_12_10 l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x45353) ?x45355)))
 (= (+ (+ (+ (- ?x25141 ?x45357) ?x45359) ?x45361) ?x45363) 0.0)))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45391 (* ?x45390 l_0_12_42)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45388 (* ?x45387 l_0_12_41)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45385 (* ?x45384 l_0_12_40)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45382 (* ?x45381 l_0_12_39)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45379 (* ?x45229 l_0_12_9)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45377 (* ?x44357 l_0_12_8)))
 (let ((?x44350 (* 2.0 l_0_12_11)))
 (let ((?x45375 (* ?x44350 l_0_12_7)))
 (let ((?x23225 (* 2.0 l_0_12_10)))
 (let ((?x23227 (* ?x23225 l_0_12_14)))
 (let ((?x25101 (- (- (- (- (+ (+ (+ ?x23227 ?x45375) ?x45377) ?x45379) ?x45382) ?x45385) ?x45388) ?x45391)))
 (= ?x25101 0.0)))))))))))))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45436 (* ?x45390 l_0_12_47)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45433 (* ?x45387 l_0_12_46)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45430 (* ?x45384 l_0_12_45)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45427 (* ?x45381 l_0_12_44)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45424 (* ?x45257 l_0_12_9)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45422 (* ?x44870 l_0_12_8)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x45420 (* ?x44867 l_0_12_7)))
 (let ((?x23225 (* 2.0 l_0_12_10)))
 (let ((?x45407 (* ?x23225 l_0_12_19)))
 (let ((?x25059 (- (- (- (- (+ (+ (+ ?x45407 ?x45420) ?x45422) ?x45424) ?x45427) ?x45430) ?x45433) ?x45436)))
 (= ?x25059 0.0)))))))))))))))))))
(assert
 (let ((?x45557 (* l_0_12_43 l_0_12_43)))
 (let ((?x45555 (* l_0_12_42 l_0_12_42)))
 (let ((?x45553 (* l_0_12_41 l_0_12_41)))
 (let ((?x45551 (* l_0_12_40 l_0_12_40)))
 (let ((?x45549 (* l_0_12_39 l_0_12_39)))
 (let ((?x45547 (* l_0_12_15 l_0_12_15)))
 (let ((?x45545 (* l_0_12_14 l_0_12_14)))
 (let ((?x45532 (* l_0_12_13 l_0_12_13)))
 (let ((?x46349 (+ (+ (+ (* l_0_12_11 l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x45532) ?x45545)))
 (= (- (- (- (- (- (+ ?x46349 ?x45547) ?x45549) ?x45551) ?x45553) ?x45555) ?x45557) 0.0)))))))))))
(assert
 (let ((?x45606 (* 2.0 l_0_12_43)))
 (let ((?x45607 (* ?x45606 l_0_12_48)))
 (let ((?x45602 (* 2.0 l_0_12_42)))
 (let ((?x45603 (* ?x45602 l_0_12_47)))
 (let ((?x45598 (* 2.0 l_0_12_41)))
 (let ((?x45599 (* ?x45598 l_0_12_46)))
 (let ((?x45594 (* 2.0 l_0_12_40)))
 (let ((?x45595 (* ?x45594 l_0_12_45)))
 (let ((?x45590 (* 2.0 l_0_12_39)))
 (let ((?x45591 (* ?x45590 l_0_12_44)))
 (let ((?x45586 (* 2.0 l_0_12_15)))
 (let ((?x45587 (* ?x45586 l_0_12_20)))
 (let ((?x45582 (* 2.0 l_0_12_14)))
 (let ((?x45583 (* ?x45582 l_0_12_19)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45579 (* ?x45229 l_0_12_18)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x45576 (* ?x44357 l_0_12_17)))
 (let ((?x23580 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_16) ?x45576) ?x45579) ?x45583) ?x45587)))
 (= (- (- (- (- (- ?x23580 ?x45591) ?x45595) ?x45599) ?x45603) ?x45607) 0.0)))))))))))))))))))))
(assert
 (let ((?x45606 (* 2.0 l_0_12_43)))
 (let ((?x45671 (* ?x45606 l_0_12_54)))
 (let ((?x45602 (* 2.0 l_0_12_42)))
 (let ((?x45669 (* ?x45602 l_0_12_53)))
 (let ((?x45598 (* 2.0 l_0_12_41)))
 (let ((?x45667 (* ?x45598 l_0_12_52)))
 (let ((?x45594 (* 2.0 l_0_12_40)))
 (let ((?x45665 (* ?x45594 l_0_12_51)))
 (let ((?x45590 (* 2.0 l_0_12_39)))
 (let ((?x45663 (* ?x45590 l_0_12_50)))
 (let ((?x45586 (* 2.0 l_0_12_15)))
 (let ((?x45641 (* ?x45586 l_0_12_26)))
 (let ((?x45582 (* 2.0 l_0_12_14)))
 (let ((?x45639 (* ?x45582 l_0_12_25)))
 (let ((?x45229 (* 2.0 l_0_12_13)))
 (let ((?x45637 (* ?x45229 l_0_12_24)))
 (let ((?x44357 (* 2.0 l_0_12_12)))
 (let ((?x23460 (* ?x44357 l_0_12_23)))
 (let ((?x45746 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_22) ?x23460) ?x45637) ?x45639) ?x45641)))
 (let ((?x46388 (- (- (- (- (- ?x45746 ?x45663) ?x45665) ?x45667) ?x45669) ?x45671)))
 (let ((?x46574 (+ (+ ?x46388 (* (* 2.0 l_0_12_60) l_0_12_67)) (* (* 2.0 l_0_12_61) l_0_12_68))))
 (let ((?x46578 (- (+ ?x46574 (* (* 2.0 l_0_12_62) l_0_12_69)) (* (* 2.0 l_0_12_88) l_0_12_95))))
 (let ((?x46582 (- (- ?x46578 (* (* 2.0 l_0_12_89) l_0_12_96)) (* (* 2.0 l_0_12_90) l_0_12_97))))
 (= ?x46582 0.0)))))))))))))))))))))))))
(assert
 (let ((?x45731 (* l_0_12_49 l_0_12_49)))
 (let ((?x45729 (* l_0_12_48 l_0_12_48)))
 (let ((?x45727 (* l_0_12_47 l_0_12_47)))
 (let ((?x45725 (* l_0_12_46 l_0_12_46)))
 (let ((?x45723 (* l_0_12_45 l_0_12_45)))
 (let ((?x45721 (* l_0_12_44 l_0_12_44)))
 (let ((?x45714 (* l_0_12_21 l_0_12_21)))
 (let ((?x45712 (* l_0_12_20 l_0_12_20)))
 (let ((?x45710 (* l_0_12_19 l_0_12_19)))
 (let ((?x45708 (* l_0_12_18 l_0_12_18)))
 (let ((?x46404 (+ (+ (+ (* l_0_12_16 l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x45708) ?x45710)))
 (let ((?x46411 (- (- (- (- (- (+ (+ ?x46404 ?x45712) ?x45714) ?x45721) ?x45723) ?x45725) ?x45727) ?x45729)))
 (= (- ?x46411 ?x45731) 0.0))))))))))))))
(assert
 (let ((?x45813 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x45810 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x45807 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x45804 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x45801 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x45798 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x45790 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x45787 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x45784 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45769 (* ?x45257 l_0_12_24)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45764 (* ?x44870 l_0_12_23)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x45762 (* ?x44867 l_0_12_22)))
 (let ((?x46613 (- (* (* (- 2.0) l_0_12_100) l_0_12_88) (* (* 2.0 l_0_12_101) l_0_12_89))))
 (let ((?x46618 (+ (+ (+ (- ?x46613 (* (* 2.0 l_0_12_102) l_0_12_90)) ?x45762) ?x45764) ?x45769)))
 (let ((?x46625 (- (- (- (- (+ (+ (+ ?x46618 ?x45784) ?x45787) ?x45790) ?x45798) ?x45801) ?x45804) ?x45807)))
 (let ((?x46631 (+ (+ (- (- ?x46625 ?x45810) ?x45813) (* (* 2.0 l_0_12_60) l_0_12_72)) (* (* 2.0 l_0_12_61) l_0_12_73))))
 (= (+ ?x46631 (* (* 2.0 l_0_12_62) l_0_12_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x45899 (* l_0_12_56 l_0_12_56)))
 (let ((?x45897 (* l_0_12_55 l_0_12_55)))
 (let ((?x45895 (* l_0_12_54 l_0_12_54)))
 (let ((?x45893 (* l_0_12_53 l_0_12_53)))
 (let ((?x45891 (* l_0_12_52 l_0_12_52)))
 (let ((?x45889 (* l_0_12_51 l_0_12_51)))
 (let ((?x45887 (* l_0_12_50 l_0_12_50)))
 (let ((?x45885 (* l_0_12_28 l_0_12_28)))
 (let ((?x45883 (* l_0_12_27 l_0_12_27)))
 (let ((?x45881 (* l_0_12_26 l_0_12_26)))
 (let ((?x45879 (* l_0_12_25 l_0_12_25)))
 (let ((?x45877 (* l_0_12_24 l_0_12_24)))
 (let ((?x45875 (* l_0_12_23 l_0_12_23)))
 (let ((?x45873 (* l_0_12_22 l_0_12_22)))
 (let ((?x46673 (- (* (* (- 2.0) l_0_12_106) l_0_12_88) (* (* 2.0 l_0_12_107) l_0_12_89))))
 (let ((?x46678 (+ (+ (+ (- ?x46673 (* (* 2.0 l_0_12_108) l_0_12_90)) ?x45873) ?x45875) ?x45877)))
 (let ((?x46685 (- (- (- (+ (+ (+ (+ ?x46678 ?x45879) ?x45881) ?x45883) ?x45885) ?x45887) ?x45889) ?x45891)))
 (let ((?x46691 (+ (- (- (- (- ?x46685 ?x45893) ?x45895) ?x45897) ?x45899) (* (* 2.0 l_0_12_60) l_0_12_78))))
 (let ((?x46695 (+ (+ ?x46691 (* (* 2.0 l_0_12_61) l_0_12_79)) (* (* 2.0 l_0_12_62) l_0_12_80))))
 (= ?x46695 0.0)))))))))))))))))))))
(assert
 (let ((?x44309 (* l_0_12_29 l_0_12_29)))
 (let ((?x21268 (* l_0_12_1 l_0_12_1)))
 (let ((?x23967 (- ?x21268 ?x44309)))
 (= ?x23967 0.0)))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44329 (* ?x44328 l_0_12_30)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x45933 (* ?x44405 l_0_12_2)))
 (let ((?x46737 (- (- ?x45933 (* (* 2.0 l_0_12_113) l_0_12_128)) (* (* 2.0 l_0_12_197) l_0_12_212))))
 (let ((?x46741 (- (- ?x46737 (* (* 2.0 l_0_12_225) l_0_12_240)) (* (* 2.0 l_0_12_253) l_0_12_268))))
 (= (- (- ?x46741 (* (* 2.0 l_0_12_281) l_0_12_296)) ?x44329) 0.0))))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44391 (* ?x44328 l_0_12_35)))
 (let ((?x46007 (- (* (* 2.0 l_0_12_1) l_0_12_7) ?x44391)))
 (= ?x46007 0.0)))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44415 (* ?x44328 l_0_12_44)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x44408 (* ?x44405 l_0_12_16)))
 (= (- ?x44408 ?x44415) 0.0))))))
(assert
 (let ((?x44328 (* 2.0 l_0_12_29)))
 (let ((?x44431 (* ?x44328 l_0_12_50)))
 (let ((?x44405 (* 2.0 l_0_12_1)))
 (let ((?x24371 (* ?x44405 l_0_12_22)))
 (let ((?x46783 (- (- ?x24371 (* (* 2.0 l_0_12_100) l_0_12_86)) (* (* 2.0 l_0_12_101) l_0_12_87))))
 (let ((?x46787 (- (+ ?x46783 (* (* 2.0 l_0_12_141) l_0_12_156)) (* (* 2.0 l_0_12_169) l_0_12_184))))
 (let ((?x46792 (+ (+ (- ?x46787 ?x44431) (* (* 2.0 l_0_12_58) l_0_12_72)) (* (* 2.0 l_0_12_59) l_0_12_73))))
 (= ?x46792 0.0)))))))))
(assert
 (let ((?x44500 (* l_0_12_31 l_0_12_31)))
 (let ((?x44498 (* l_0_12_30 l_0_12_30)))
 (let ((?x44496 (* l_0_12_3 l_0_12_3)))
 (let ((?x44482 (* l_0_12_2 l_0_12_2)))
 (let ((?x46821 (- (* (* (- 2.0) l_0_12_114) l_0_12_128) (* (* 2.0 l_0_12_115) l_0_12_129))))
 (let ((?x46830 (- (- ?x46821 (* (* 2.0 l_0_12_198) l_0_12_212)) (* (* 2.0 l_0_12_199) l_0_12_213))))
 (let ((?x46835 (- (- (+ ?x46830 ?x44482) (* (* 2.0 l_0_12_226) l_0_12_240)) (* (* 2.0 l_0_12_227) l_0_12_241))))
 (let ((?x46839 (- (- ?x46835 (* (* 2.0 l_0_12_254) l_0_12_268)) (* (* 2.0 l_0_12_255) l_0_12_269))))
 (let ((?x46843 (- (- ?x46839 (* (* 2.0 l_0_12_282) l_0_12_296)) (* (* 2.0 l_0_12_283) l_0_12_297))))
 (= (- (- (+ ?x46843 ?x44496) ?x44498) ?x44500) 0.0)))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44562 (* ?x44365 l_0_12_33)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44560 (* ?x44362 l_0_12_32)))
 (let ((?x44557 (* 2.0 l_0_12_3)))
 (let ((?x44558 (* ?x44557 l_0_12_5)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x44519 (* ?x44518 l_0_12_4)))
 (let ((?x46913 (- (* (* (- 2.0) l_0_12_116) l_0_12_128) (* (* 2.0 l_0_12_117) l_0_12_129))))
 (let ((?x46918 (- (+ (- ?x46913 (* (* 2.0 l_0_12_118) l_0_12_130)) ?x44519) (* (* 2.0 l_0_12_200) l_0_12_212))))
 (let ((?x46922 (- (- ?x46918 (* (* 2.0 l_0_12_201) l_0_12_213)) (* (* 2.0 l_0_12_202) l_0_12_214))))
 (let ((?x46926 (- (- ?x46922 (* (* 2.0 l_0_12_228) l_0_12_240)) (* (* 2.0 l_0_12_229) l_0_12_241))))
 (let ((?x46930 (- (- ?x46926 (* (* 2.0 l_0_12_230) l_0_12_242)) (* (* 2.0 l_0_12_256) l_0_12_268))))
 (let ((?x46934 (- (- ?x46930 (* (* 2.0 l_0_12_257) l_0_12_269)) (* (* 2.0 l_0_12_258) l_0_12_270))))
 (let ((?x46938 (- (- ?x46934 (* (* 2.0 l_0_12_284) l_0_12_296)) (* (* 2.0 l_0_12_285) l_0_12_297))))
 (let ((?x46943 (- (- (+ (- ?x46938 (* (* 2.0 l_0_12_286) l_0_12_298)) ?x44558) ?x44560) ?x44562)))
 (= ?x46943 0.0))))))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44671 (* ?x44365 l_0_12_36)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44669 (* ?x44362 l_0_12_35)))
 (let ((?x44557 (* 2.0 l_0_12_3)))
 (let ((?x44667 (* ?x44557 l_0_12_8)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x44617 (* ?x44518 l_0_12_7)))
 (let ((?x25944 (- (* (* (- 2.0) l_0_12_119) l_0_12_128) (* (* 2.0 l_0_12_120) l_0_12_129))))
 (let ((?x25936 (- (- ?x25944 (* (* 2.0 l_0_12_121) l_0_12_130)) (* (* 2.0 l_0_12_122) l_0_12_131))))
 (let ((?x46983 (- (- (+ ?x25936 ?x44617) (* (* 2.0 l_0_12_203) l_0_12_212)) (* (* 2.0 l_0_12_204) l_0_12_213))))
 (let ((?x46987 (- (- ?x46983 (* (* 2.0 l_0_12_205) l_0_12_214)) (* (* 2.0 l_0_12_206) l_0_12_215))))
 (let ((?x46991 (- (- ?x46987 (* (* 2.0 l_0_12_231) l_0_12_240)) (* (* 2.0 l_0_12_232) l_0_12_241))))
 (let ((?x46995 (- (- ?x46991 (* (* 2.0 l_0_12_233) l_0_12_242)) (* (* 2.0 l_0_12_234) l_0_12_243))))
 (let ((?x46999 (- (- ?x46995 (* (* 2.0 l_0_12_259) l_0_12_268)) (* (* 2.0 l_0_12_260) l_0_12_269))))
 (let ((?x47003 (- (- ?x46999 (* (* 2.0 l_0_12_261) l_0_12_270)) (* (* 2.0 l_0_12_262) l_0_12_271))))
 (let ((?x47007 (- (- ?x47003 (* (* 2.0 l_0_12_287) l_0_12_296)) (* (* 2.0 l_0_12_288) l_0_12_297))))
 (let ((?x47011 (- (- ?x47007 (* (* 2.0 l_0_12_289) l_0_12_298)) (* (* 2.0 l_0_12_290) l_0_12_299))))
 (= (- (- (+ ?x47011 ?x44667) ?x44669) ?x44671) 0.0))))))))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x44937 (* ?x44365 l_0_12_45)))
 (let ((?x47150 (* l_0_12_301 l_0_12_301)))
 (let ((?x47148 (* l_0_12_300 l_0_12_300)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x44934 (* ?x44362 l_0_12_44)))
 (let ((?x47145 (* l_0_12_299 l_0_12_299)))
 (let ((?x47143 (* l_0_12_298 l_0_12_298)))
 (let ((?x47141 (* l_0_12_297 l_0_12_297)))
 (let ((?x47139 (* l_0_12_296 l_0_12_296)))
 (let ((?x47137 (* l_0_12_273 l_0_12_273)))
 (let ((?x47135 (* l_0_12_272 l_0_12_272)))
 (let ((?x47133 (* l_0_12_271 l_0_12_271)))
 (let ((?x47131 (* l_0_12_270 l_0_12_270)))
 (let ((?x47129 (* l_0_12_269 l_0_12_269)))
 (let ((?x47127 (* l_0_12_268 l_0_12_268)))
 (let ((?x47125 (* l_0_12_245 l_0_12_245)))
 (let ((?x47123 (* l_0_12_244 l_0_12_244)))
 (let ((?x47121 (* l_0_12_243 l_0_12_243)))
 (let ((?x47119 (* l_0_12_242 l_0_12_242)))
 (let ((?x47117 (* l_0_12_241 l_0_12_241)))
 (let ((?x47115 (* l_0_12_240 l_0_12_240)))
 (let ((?x47113 (* l_0_12_217 l_0_12_217)))
 (let ((?x47111 (* l_0_12_216 l_0_12_216)))
 (let ((?x47109 (* l_0_12_215 l_0_12_215)))
 (let ((?x47107 (* l_0_12_214 l_0_12_214)))
 (let ((?x47105 (* l_0_12_213 l_0_12_213)))
 (let ((?x47103 (* l_0_12_212 l_0_12_212)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x44871 (* ?x44870 l_0_12_3)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x44868 (* ?x44867 l_0_12_2)))
 (let ((?x47088 (- (* (* (- 1.0) l_0_12_128) l_0_12_128) (* (* 1.0 l_0_12_129) l_0_12_129))))
 (let ((?x47094 (- (- ?x47088 (* (* 1.0 l_0_12_130) l_0_12_130)) (* (* 1.0 l_0_12_131) l_0_12_131))))
 (let ((?x47100 (- (- ?x47094 (* (* 1.0 l_0_12_132) l_0_12_132)) (* (* 1.0 l_0_12_133) l_0_12_133))))
 (let ((?x47112 (- (- (- (- (- (+ (+ ?x47100 ?x44868) ?x44871) ?x47103) ?x47105) ?x47107) ?x47109) ?x47111)))
 (let ((?x47126 (- (- (- (- (- (- (- ?x47112 ?x47113) ?x47115) ?x47117) ?x47119) ?x47121) ?x47123) ?x47125)))
 (let ((?x47140 (- (- (- (- (- (- (- ?x47126 ?x47127) ?x47129) ?x47131) ?x47133) ?x47135) ?x47137) ?x47139)))
 (let ((?x47152 (- (- (- (- (- (- (- ?x47140 ?x47141) ?x47143) ?x47145) ?x44934) ?x47148) ?x47150) ?x44937)))
 (= ?x47152 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44365 (* 2.0 l_0_12_31)))
 (let ((?x45127 (* ?x44365 l_0_12_51)))
 (let ((?x44362 (* 2.0 l_0_12_30)))
 (let ((?x45125 (* ?x44362 l_0_12_50)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45093 (* ?x45092 l_0_12_3)))
 (let ((?x44518 (* 2.0 l_0_12_2)))
 (let ((?x45080 (* ?x44518 l_0_12_22)))
 (let ((?x26211 (- (* (* (- 2.0) l_0_12_128) l_0_12_134) (* (* 2.0 l_0_12_129) l_0_12_135))))
 (let ((?x47201 (- (- ?x26211 (* (* 2.0 l_0_12_130) l_0_12_136)) (* (* 2.0 l_0_12_131) l_0_12_137))))
 (let ((?x47207 (- (- ?x47201 (* (* 2.0 l_0_12_132) l_0_12_138)) (* (* 2.0 l_0_12_133) l_0_12_139))))
 (let ((?x47211 (+ (+ ?x47207 (* (* 2.0 l_0_12_142) l_0_12_156)) (* (* 2.0 l_0_12_143) l_0_12_157))))
 (let ((?x47215 (- (- ?x47211 (* (* 2.0 l_0_12_170) l_0_12_184)) (* (* 2.0 l_0_12_171) l_0_12_185))))
 (let ((?x47222 (- (- (+ ?x47215 ?x45080) (* (* 2.0 l_0_12_212) l_0_12_218)) (* (* 2.0 l_0_12_213) l_0_12_219))))
 (let ((?x47228 (- (- ?x47222 (* (* 2.0 l_0_12_214) l_0_12_220)) (* (* 2.0 l_0_12_215) l_0_12_221))))
 (let ((?x47234 (- (- ?x47228 (* (* 2.0 l_0_12_216) l_0_12_222)) (* (* 2.0 l_0_12_217) l_0_12_223))))
 (let ((?x47241 (- (- (+ ?x47234 ?x45093) (* (* 2.0 l_0_12_240) l_0_12_246)) (* (* 2.0 l_0_12_241) l_0_12_247))))
 (let ((?x47247 (- (- ?x47241 (* (* 2.0 l_0_12_242) l_0_12_248)) (* (* 2.0 l_0_12_243) l_0_12_249))))
 (let ((?x47253 (- (- ?x47247 (* (* 2.0 l_0_12_244) l_0_12_250)) (* (* 2.0 l_0_12_245) l_0_12_251))))
 (let ((?x47259 (- (- ?x47253 (* (* 2.0 l_0_12_268) l_0_12_274)) (* (* 2.0 l_0_12_269) l_0_12_275))))
 (let ((?x47265 (- (- ?x47259 (* (* 2.0 l_0_12_270) l_0_12_276)) (* (* 2.0 l_0_12_271) l_0_12_277))))
 (let ((?x47271 (- (- ?x47265 (* (* 2.0 l_0_12_272) l_0_12_278)) (* (* 2.0 l_0_12_273) l_0_12_279))))
 (let ((?x47277 (- (- ?x47271 (* (* 2.0 l_0_12_296) l_0_12_302)) (* (* 2.0 l_0_12_297) l_0_12_303))))
 (let ((?x47283 (- (- ?x47277 (* (* 2.0 l_0_12_298) l_0_12_304)) (* (* 2.0 l_0_12_299) l_0_12_305))))
 (let ((?x47290 (- (- (- ?x47283 ?x45125) (* (* 2.0 l_0_12_300) l_0_12_306)) (* (* 2.0 l_0_12_301) l_0_12_307))))
 (= (- ?x47290 ?x45127) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x45182 (* l_0_12_6 l_0_12_6)))
 (let ((?x45180 (* l_0_12_5 l_0_12_5)))
 (let ((?x45178 (* l_0_12_4 l_0_12_4)))
 (let ((?x45176 (* l_0_12_34 l_0_12_34)))
 (let ((?x24942 (- (- (* (- l_0_12_32) l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x45176)))
 (= (+ (+ (+ ?x24942 ?x45178) ?x45180) ?x45182) 0.0)))))))
(assert
 (let ((?x45207 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x45204 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x45201 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45198 (* ?x45197 l_0_12_37)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45195 (* ?x45194 l_0_12_36)))
 (let ((?x24933 (+ (+ (- (- (* (* (- 2.0) l_0_12_32) l_0_12_35) ?x45195) ?x45198) ?x45201) ?x45204)))
 (= (+ ?x24933 ?x45207) 0.0))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45267 (* ?x45197 l_0_12_46)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45264 (* ?x45194 l_0_12_45)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45261 (* ?x45192 l_0_12_44)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45258 (* ?x45257 l_0_12_6)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45255 (* ?x44870 l_0_12_5)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x23014 (* ?x44867 l_0_12_4)))
 (= (- (- (- (+ (+ ?x23014 ?x45255) ?x45258) ?x45261) ?x45264) ?x45267) 0.0))))))))))))))
(assert
 (let ((?x45197 (* 2.0 l_0_12_34)))
 (let ((?x45317 (* ?x45197 l_0_12_52)))
 (let ((?x45194 (* 2.0 l_0_12_33)))
 (let ((?x45315 (* ?x45194 l_0_12_51)))
 (let ((?x45192 (* 2.0 l_0_12_32)))
 (let ((?x45313 (* ?x45192 l_0_12_50)))
 (let ((?x45310 (* 2.0 l_0_12_24)))
 (let ((?x45311 (* ?x45310 l_0_12_6)))
 (let ((?x45092 (* 2.0 l_0_12_23)))
 (let ((?x45308 (* ?x45092 l_0_12_5)))
 (let ((?x45305 (* 2.0 l_0_12_22)))
 (let ((?x45306 (* ?x45305 l_0_12_4)))
 (let ((?x26520 (+ (* (* 2.0 l_0_12_144) l_0_12_156) (* (* 2.0 l_0_12_145) l_0_12_157))))
 (let ((?x26532 (- (+ ?x26520 (* (* 2.0 l_0_12_146) l_0_12_158)) (* (* 2.0 l_0_12_172) l_0_12_184))))
 (let ((?x26544 (- (- ?x26532 (* (* 2.0 l_0_12_173) l_0_12_185)) (* (* 2.0 l_0_12_174) l_0_12_186))))
 (= (- (- (- (+ (+ (+ ?x26544 ?x45306) ?x45308) ?x45311) ?x45313) ?x45315) ?x45317) 0.0)))))))))))))))))
(assert
 (let ((?x45363 (* l_0_12_9 l_0_12_9)))
 (let ((?x45361 (* l_0_12_8 l_0_12_8)))
 (let ((?x45359 (* l_0_12_7 l_0_12_7)))
 (let ((?x45357 (* l_0_12_38 l_0_12_38)))
 (let ((?x45355 (* l_0_12_37 l_0_12_37)))
 (let ((?x45353 (* l_0_12_36 l_0_12_36)))
 (let ((?x25141 (- (- (- (* l_0_12_10 l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x45353) ?x45355)))
 (= (+ (+ (+ (- ?x25141 ?x45357) ?x45359) ?x45361) ?x45363) 0.0)))))))))
(assert
 (let ((?x45390 (* 2.0 l_0_12_38)))
 (let ((?x45436 (* ?x45390 l_0_12_47)))
 (let ((?x45387 (* 2.0 l_0_12_37)))
 (let ((?x45433 (* ?x45387 l_0_12_46)))
 (let ((?x45384 (* 2.0 l_0_12_36)))
 (let ((?x45430 (* ?x45384 l_0_12_45)))
 (let ((?x45381 (* 2.0 l_0_12_35)))
 (let ((?x45427 (* ?x45381 l_0_12_44)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45424 (* ?x45257 l_0_12_9)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45422 (* ?x44870 l_0_12_8)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x45420 (* ?x44867 l_0_12_7)))
 (let ((?x23225 (* 2.0 l_0_12_10)))
 (let ((?x45407 (* ?x23225 l_0_12_19)))
 (let ((?x25059 (- (- (- (- (+ (+ (+ ?x45407 ?x45420) ?x45422) ?x45424) ?x45427) ?x45430) ?x45433) ?x45436)))
 (= ?x25059 0.0)))))))))))))))))))
(assert
 (let ((?x45731 (* l_0_12_49 l_0_12_49)))
 (let ((?x45729 (* l_0_12_48 l_0_12_48)))
 (let ((?x45727 (* l_0_12_47 l_0_12_47)))
 (let ((?x45725 (* l_0_12_46 l_0_12_46)))
 (let ((?x45723 (* l_0_12_45 l_0_12_45)))
 (let ((?x45721 (* l_0_12_44 l_0_12_44)))
 (let ((?x45714 (* l_0_12_21 l_0_12_21)))
 (let ((?x45712 (* l_0_12_20 l_0_12_20)))
 (let ((?x45710 (* l_0_12_19 l_0_12_19)))
 (let ((?x45708 (* l_0_12_18 l_0_12_18)))
 (let ((?x46404 (+ (+ (+ (* l_0_12_16 l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x45708) ?x45710)))
 (let ((?x46411 (- (- (- (- (- (+ (+ ?x46404 ?x45712) ?x45714) ?x45721) ?x45723) ?x45725) ?x45727) ?x45729)))
 (= (- ?x46411 ?x45731) 0.0))))))))))))))
(assert
 (let ((?x45813 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x45810 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x45807 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x45804 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x45801 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x45798 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x45790 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x45787 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x45784 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x47411 (* l_0_12_189 l_0_12_189)))
 (let ((?x47409 (* l_0_12_188 l_0_12_188)))
 (let ((?x47407 (* l_0_12_187 l_0_12_187)))
 (let ((?x47405 (* l_0_12_186 l_0_12_186)))
 (let ((?x47403 (* l_0_12_185 l_0_12_185)))
 (let ((?x47401 (* l_0_12_184 l_0_12_184)))
 (let ((?x45257 (* 2.0 l_0_12_18)))
 (let ((?x45769 (* ?x45257 l_0_12_24)))
 (let ((?x44870 (* 2.0 l_0_12_17)))
 (let ((?x45764 (* ?x44870 l_0_12_23)))
 (let ((?x47397 (* l_0_12_161 l_0_12_161)))
 (let ((?x47395 (* l_0_12_160 l_0_12_160)))
 (let ((?x44867 (* 2.0 l_0_12_16)))
 (let ((?x45762 (* ?x44867 l_0_12_22)))
 (let ((?x47392 (* l_0_12_159 l_0_12_159)))
 (let ((?x47390 (* l_0_12_158 l_0_12_158)))
 (let ((?x47391 (+ (+ (* l_0_12_156 l_0_12_156) (* l_0_12_157 l_0_12_157)) ?x47390)))
 (let ((?x47402 (- (+ (+ (+ (+ (+ (+ ?x47391 ?x47392) ?x45762) ?x47395) ?x47397) ?x45764) ?x45769) ?x47401)))
 (let ((?x47414 (+ (+ (- (- (- (- (- ?x47402 ?x47403) ?x47405) ?x47407) ?x47409) ?x47411) ?x45784) ?x45787)))
 (let ((?x47421 (- (- (- (- (- (- (+ ?x47414 ?x45790) ?x45798) ?x45801) ?x45804) ?x45807) ?x45810) ?x45813)))
 (= ?x47421 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x45899 (* l_0_12_56 l_0_12_56)))
 (let ((?x45897 (* l_0_12_55 l_0_12_55)))
 (let ((?x45895 (* l_0_12_54 l_0_12_54)))
 (let ((?x45893 (* l_0_12_53 l_0_12_53)))
 (let ((?x45891 (* l_0_12_52 l_0_12_52)))
 (let ((?x45889 (* l_0_12_51 l_0_12_51)))
 (let ((?x45887 (* l_0_12_50 l_0_12_50)))
 (let ((?x45885 (* l_0_12_28 l_0_12_28)))
 (let ((?x45883 (* l_0_12_27 l_0_12_27)))
 (let ((?x45881 (* l_0_12_26 l_0_12_26)))
 (let ((?x45879 (* l_0_12_25 l_0_12_25)))
 (let ((?x45877 (* l_0_12_24 l_0_12_24)))
 (let ((?x45875 (* l_0_12_23 l_0_12_23)))
 (let ((?x45873 (* l_0_12_22 l_0_12_22)))
 (let ((?x47445 (+ (* (* 2.0 l_0_12_156) l_0_12_162) (* (* 2.0 l_0_12_157) l_0_12_163))))
 (let ((?x47451 (+ (+ ?x47445 (* (* 2.0 l_0_12_158) l_0_12_164)) (* (* 2.0 l_0_12_159) l_0_12_165))))
 (let ((?x47457 (+ (+ ?x47451 (* (* 2.0 l_0_12_160) l_0_12_166)) (* (* 2.0 l_0_12_161) l_0_12_167))))
 (let ((?x47463 (- (- ?x47457 (* (* 2.0 l_0_12_184) l_0_12_190)) (* (* 2.0 l_0_12_185) l_0_12_191))))
 (let ((?x47469 (- (- ?x47463 (* (* 2.0 l_0_12_186) l_0_12_192)) (* (* 2.0 l_0_12_187) l_0_12_193))))
 (let ((?x47475 (- (- ?x47469 (* (* 2.0 l_0_12_188) l_0_12_194)) (* (* 2.0 l_0_12_189) l_0_12_195))))
 (let ((?x47482 (+ (+ (+ (+ (+ (+ (+ ?x47475 ?x45873) ?x45875) ?x45877) ?x45879) ?x45881) ?x45883) ?x45885)))
 (let ((?x47489 (- (- (- (- (- (- (- ?x47482 ?x45887) ?x45889) ?x45891) ?x45893) ?x45895) ?x45897) ?x45899)))
 (= ?x47489 0.0))))))))))))))))))))))))
(assert
 (= (- (* l_0_12_57 l_0_12_57) (* l_0_12_85 l_0_12_85)) 0.0))
(assert
 (let ((?x47543 (+ (- (* l_0_12_141 l_0_12_141) (* l_0_12_169 l_0_12_169)) (* (* 2.0 l_0_12_57) l_0_12_58))))
 (= (- ?x47543 (* (* 2.0 l_0_12_85) l_0_12_86)) 0.0)))
(assert
 (let ((?x47557 (- (* (* 2.0 l_0_12_57) l_0_12_67) (* (* 2.0 l_0_12_85) l_0_12_95))))
 (= ?x47557 0.0)))
(assert
 (let ((?x26753 (+ (* (* (- 2.0) l_0_12_100) l_0_12_85) (* (* 2.0 l_0_12_57) l_0_12_72))))
 (= ?x26753 0.0)))
(assert
 (let ((?x47572 (+ (* (* (- 2.0) l_0_12_106) l_0_12_85) (* (* 2.0 l_0_12_57) l_0_12_78))))
 (= ?x47572 0.0)))
(assert
 (let ((?x47582 (- (* (* (- 2.0) l_0_12_106) l_0_12_86) (* (* 2.0 l_0_12_107) l_0_12_87))))
 (let ((?x47590 (- (+ ?x47582 (* (* 2.0 l_0_12_141) l_0_12_162)) (* (* 2.0 l_0_12_169) l_0_12_190))))
 (let ((?x47594 (+ (+ ?x47590 (* (* 2.0 l_0_12_58) l_0_12_78)) (* (* 2.0 l_0_12_59) l_0_12_79))))
 (= ?x47594 0.0)))))
(assert
 (let ((?x47632 (* l_0_12_99 l_0_12_99)))
 (let ((?x47630 (* l_0_12_98 l_0_12_98)))
 (let ((?x47628 (* l_0_12_97 l_0_12_97)))
 (let ((?x47626 (* l_0_12_96 l_0_12_96)))
 (let ((?x47624 (* l_0_12_95 l_0_12_95)))
 (let ((?x47622 (* l_0_12_71 l_0_12_71)))
 (let ((?x47620 (* l_0_12_70 l_0_12_70)))
 (let ((?x47618 (* l_0_12_69 l_0_12_69)))
 (let ((?x47621 (+ (+ (+ (* l_0_12_67 l_0_12_67) (* l_0_12_68 l_0_12_68)) ?x47618) ?x47620)))
 (= (- (- (- (- (- (+ ?x47621 ?x47622) ?x47624) ?x47626) ?x47628) ?x47630) ?x47632) 0.0)))))))))))
(assert
 (let ((?x47646 (- (* (* (- 2.0) l_0_12_100) l_0_12_95) (* (* 2.0 l_0_12_101) l_0_12_96))))
 (let ((?x47650 (- (- ?x47646 (* (* 2.0 l_0_12_102) l_0_12_97)) (* (* 2.0 l_0_12_103) l_0_12_98))))
 (let ((?x47656 (+ (- ?x47650 (* (* 2.0 l_0_12_104) l_0_12_99)) (* (* 2.0 l_0_12_67) l_0_12_72))))
 (let ((?x47662 (+ (+ ?x47656 (* (* 2.0 l_0_12_68) l_0_12_73)) (* (* 2.0 l_0_12_69) l_0_12_74))))
 (let ((?x47668 (+ (+ ?x47662 (* (* 2.0 l_0_12_70) l_0_12_75)) (* (* 2.0 l_0_12_71) l_0_12_76))))
 (= ?x47668 0.0)))))))
(assert
 (let ((?x47685 (- (* (* (- 2.0) l_0_12_106) l_0_12_95) (* (* 2.0 l_0_12_107) l_0_12_96))))
 (let ((?x47699 (- (- ?x47685 (* (* 2.0 l_0_12_108) l_0_12_97)) (* (* 2.0 l_0_12_109) l_0_12_98))))
 (let ((?x47704 (+ (- ?x47699 (* (* 2.0 l_0_12_110) l_0_12_99)) (* (* 2.0 l_0_12_67) l_0_12_78))))
 (let ((?x47708 (+ (+ ?x47704 (* (* 2.0 l_0_12_68) l_0_12_79)) (* (* 2.0 l_0_12_69) l_0_12_80))))
 (let ((?x47712 (+ (+ ?x47708 (* (* 2.0 l_0_12_70) l_0_12_81)) (* (* 2.0 l_0_12_71) l_0_12_82))))
 (= ?x47712 0.0)))))))
(assert
 (let ((?x47753 (* l_0_12_77 l_0_12_77)))
 (let ((?x47751 (* l_0_12_76 l_0_12_76)))
 (let ((?x47749 (* l_0_12_75 l_0_12_75)))
 (let ((?x47747 (* l_0_12_74 l_0_12_74)))
 (let ((?x47745 (* l_0_12_73 l_0_12_73)))
 (let ((?x47743 (* l_0_12_72 l_0_12_72)))
 (let ((?x47741 (* l_0_12_105 l_0_12_105)))
 (let ((?x47739 (* l_0_12_104 l_0_12_104)))
 (let ((?x47737 (* l_0_12_103 l_0_12_103)))
 (let ((?x26826 (* l_0_12_102 l_0_12_102)))
 (let ((?x47728 (- (- (* (- l_0_12_100) l_0_12_100) (* l_0_12_101 l_0_12_101)) ?x26826)))
 (let ((?x47750 (+ (+ (+ (+ (- (- (- ?x47728 ?x47737) ?x47739) ?x47741) ?x47743) ?x47745) ?x47747) ?x47749)))
 (= (+ (+ ?x47750 ?x47751) ?x47753) 0.0))))))))))))))
(assert
 (let ((?x47779 (- (* (* (- 2.0) l_0_12_100) l_0_12_106) (* (* 2.0 l_0_12_101) l_0_12_107))))
 (let ((?x47783 (- (- ?x47779 (* (* 2.0 l_0_12_102) l_0_12_108)) (* (* 2.0 l_0_12_103) l_0_12_109))))
 (let ((?x47788 (- (- ?x47783 (* (* 2.0 l_0_12_104) l_0_12_110)) (* (* 2.0 l_0_12_105) l_0_12_111))))
 (let ((?x47794 (+ (+ ?x47788 (* (* 2.0 l_0_12_72) l_0_12_78)) (* (* 2.0 l_0_12_73) l_0_12_79))))
 (let ((?x47800 (+ (+ ?x47794 (* (* 2.0 l_0_12_74) l_0_12_80)) (* (* 2.0 l_0_12_75) l_0_12_81))))
 (let ((?x47806 (+ (+ ?x47800 (* (* 2.0 l_0_12_76) l_0_12_82)) (* (* 2.0 l_0_12_77) l_0_12_83))))
 (= ?x47806 0.0))))))))
(assert
 (let ((?x47869 (* l_0_12_84 l_0_12_84)))
 (let ((?x47867 (* l_0_12_83 l_0_12_83)))
 (let ((?x47865 (* l_0_12_82 l_0_12_82)))
 (let ((?x47863 (* l_0_12_81 l_0_12_81)))
 (let ((?x47861 (* l_0_12_80 l_0_12_80)))
 (let ((?x47859 (* l_0_12_79 l_0_12_79)))
 (let ((?x47857 (* l_0_12_78 l_0_12_78)))
 (let ((?x47855 (* l_0_12_112 l_0_12_112)))
 (let ((?x47853 (* l_0_12_111 l_0_12_111)))
 (let ((?x47851 (* l_0_12_110 l_0_12_110)))
 (let ((?x47840 (* l_0_12_109 l_0_12_109)))
 (let ((?x47837 (* l_0_12_108 l_0_12_108)))
 (let ((?x47839 (- (- (* (- l_0_12_106) l_0_12_106) (* l_0_12_107 l_0_12_107)) ?x47837)))
 (let ((?x47862 (+ (+ (+ (- (- (- (- ?x47839 ?x47840) ?x47851) ?x47853) ?x47855) ?x47857) ?x47859) ?x47861)))
 (= (+ (+ (+ (+ ?x47862 ?x47863) ?x47865) ?x47867) ?x47869) 0.0))))))))))))))))
(assert
 (let ((?x47901 (* l_0_12_281 l_0_12_281)))
 (let ((?x47899 (* l_0_12_253 l_0_12_253)))
 (let ((?x47897 (* l_0_12_225 l_0_12_225)))
 (let ((?x47895 (* l_0_12_197 l_0_12_197)))
 (let ((?x47902 (- (- (- (- (* (* (- 1.0) l_0_12_113) l_0_12_113) ?x47895) ?x47897) ?x47899) ?x47901)))
 (= ?x47902 0.0)))))))
(assert
 (let ((?x47919 (- (* (* (- 2.0) l_0_12_113) l_0_12_114) (* (* 2.0 l_0_12_197) l_0_12_198))))
 (let ((?x47923 (- (- ?x47919 (* (* 2.0 l_0_12_225) l_0_12_226)) (* (* 2.0 l_0_12_253) l_0_12_254))))
 (= (- ?x47923 (* (* 2.0 l_0_12_281) l_0_12_282)) 0.0))))
(assert
 (let ((?x47949 (- (* (* (- 2.0) l_0_12_113) l_0_12_119) (* (* 2.0 l_0_12_197) l_0_12_203))))
 (let ((?x47953 (- (- ?x47949 (* (* 2.0 l_0_12_225) l_0_12_231)) (* (* 2.0 l_0_12_253) l_0_12_259))))
 (= (- ?x47953 (* (* 2.0 l_0_12_281) l_0_12_287)) 0.0))))
(assert
 (let ((?x47979 (- (* (* (- 2.0) l_0_12_114) l_0_12_116) (* (* 2.0 l_0_12_115) l_0_12_117))))
 (let ((?x47983 (- (- ?x47979 (* (* 2.0 l_0_12_198) l_0_12_200)) (* (* 2.0 l_0_12_199) l_0_12_201))))
 (let ((?x47987 (- (- ?x47983 (* (* 2.0 l_0_12_226) l_0_12_228)) (* (* 2.0 l_0_12_227) l_0_12_229))))
 (let ((?x47991 (- (- ?x47987 (* (* 2.0 l_0_12_254) l_0_12_256)) (* (* 2.0 l_0_12_255) l_0_12_257))))
 (let ((?x47995 (- (- ?x47991 (* (* 2.0 l_0_12_282) l_0_12_284)) (* (* 2.0 l_0_12_283) l_0_12_285))))
 (= ?x47995 0.0)))))))
(assert
 (let ((?x48037 (- (* (* (- 2.0) l_0_12_114) l_0_12_119) (* (* 2.0 l_0_12_115) l_0_12_120))))
 (let ((?x48041 (- (- ?x48037 (* (* 2.0 l_0_12_198) l_0_12_203)) (* (* 2.0 l_0_12_199) l_0_12_204))))
 (let ((?x48045 (- (- ?x48041 (* (* 2.0 l_0_12_226) l_0_12_231)) (* (* 2.0 l_0_12_227) l_0_12_232))))
 (let ((?x48049 (- (- ?x48045 (* (* 2.0 l_0_12_254) l_0_12_259)) (* (* 2.0 l_0_12_255) l_0_12_260))))
 (let ((?x48053 (- (- ?x48049 (* (* 2.0 l_0_12_282) l_0_12_287)) (* (* 2.0 l_0_12_283) l_0_12_288))))
 (= ?x48053 0.0)))))))
(assert
 (let ((?x48090 (* l_0_12_286 l_0_12_286)))
 (let ((?x48088 (* l_0_12_285 l_0_12_285)))
 (let ((?x48086 (* l_0_12_284 l_0_12_284)))
 (let ((?x48084 (* l_0_12_258 l_0_12_258)))
 (let ((?x48082 (* l_0_12_257 l_0_12_257)))
 (let ((?x48080 (* l_0_12_256 l_0_12_256)))
 (let ((?x48078 (* l_0_12_230 l_0_12_230)))
 (let ((?x48076 (* l_0_12_229 l_0_12_229)))
 (let ((?x48074 (* l_0_12_228 l_0_12_228)))
 (let ((?x27047 (* l_0_12_202 l_0_12_202)))
 (let ((?x27050 (* l_0_12_201 l_0_12_201)))
 (let ((?x27043 (* l_0_12_200 l_0_12_200)))
 (let ((?x27019 (- (* (* (- 1.0) l_0_12_116) l_0_12_116) (* (* 1.0 l_0_12_117) l_0_12_117))))
 (let ((?x27048 (- (- (- (- ?x27019 (* (* 1.0 l_0_12_118) l_0_12_118)) ?x27043) ?x27050) ?x27047)))
 (let ((?x48087 (- (- (- (- (- (- (- ?x27048 ?x48074) ?x48076) ?x48078) ?x48080) ?x48082) ?x48084) ?x48086)))
 (= (- (- ?x48087 ?x48088) ?x48090) 0.0)))))))))))))))))
(assert
 (let ((?x48116 (- (* (* (- 2.0) l_0_12_116) l_0_12_119) (* (* 2.0 l_0_12_117) l_0_12_120))))
 (let ((?x48120 (- (- ?x48116 (* (* 2.0 l_0_12_118) l_0_12_121)) (* (* 2.0 l_0_12_200) l_0_12_203))))
 (let ((?x48124 (- (- ?x48120 (* (* 2.0 l_0_12_201) l_0_12_204)) (* (* 2.0 l_0_12_202) l_0_12_205))))
 (let ((?x48128 (- (- ?x48124 (* (* 2.0 l_0_12_228) l_0_12_231)) (* (* 2.0 l_0_12_229) l_0_12_232))))
 (let ((?x48132 (- (- ?x48128 (* (* 2.0 l_0_12_230) l_0_12_233)) (* (* 2.0 l_0_12_256) l_0_12_259))))
 (let ((?x48136 (- (- ?x48132 (* (* 2.0 l_0_12_257) l_0_12_260)) (* (* 2.0 l_0_12_258) l_0_12_261))))
 (let ((?x48140 (- (- ?x48136 (* (* 2.0 l_0_12_284) l_0_12_287)) (* (* 2.0 l_0_12_285) l_0_12_288))))
 (= (- ?x48140 (* (* 2.0 l_0_12_286) l_0_12_289)) 0.0)))))))))
(assert
 (let ((?x48187 (- (* (* (- 2.0) l_0_12_116) l_0_12_134) (* (* 2.0 l_0_12_117) l_0_12_135))))
 (let ((?x48191 (+ (- ?x48187 (* (* 2.0 l_0_12_118) l_0_12_136)) (* (* 2.0 l_0_12_142) l_0_12_144))))
 (let ((?x48195 (- (+ ?x48191 (* (* 2.0 l_0_12_143) l_0_12_145)) (* (* 2.0 l_0_12_170) l_0_12_172))))
 (let ((?x48199 (- (- ?x48195 (* (* 2.0 l_0_12_171) l_0_12_173)) (* (* 2.0 l_0_12_200) l_0_12_218))))
 (let ((?x48203 (- (- ?x48199 (* (* 2.0 l_0_12_201) l_0_12_219)) (* (* 2.0 l_0_12_202) l_0_12_220))))
 (let ((?x48207 (- (- ?x48203 (* (* 2.0 l_0_12_228) l_0_12_246)) (* (* 2.0 l_0_12_229) l_0_12_247))))
 (let ((?x48211 (- (- ?x48207 (* (* 2.0 l_0_12_230) l_0_12_248)) (* (* 2.0 l_0_12_256) l_0_12_274))))
 (let ((?x48215 (- (- ?x48211 (* (* 2.0 l_0_12_257) l_0_12_275)) (* (* 2.0 l_0_12_258) l_0_12_276))))
 (let ((?x48219 (- (- ?x48215 (* (* 2.0 l_0_12_284) l_0_12_302)) (* (* 2.0 l_0_12_285) l_0_12_303))))
 (= (- ?x48219 (* (* 2.0 l_0_12_286) l_0_12_304)) 0.0)))))))))))
(assert
 (let ((?x48291 (* l_0_12_290 l_0_12_290)))
 (let ((?x48289 (* l_0_12_289 l_0_12_289)))
 (let ((?x48287 (* l_0_12_288 l_0_12_288)))
 (let ((?x48285 (* l_0_12_287 l_0_12_287)))
 (let ((?x48283 (* l_0_12_262 l_0_12_262)))
 (let ((?x48281 (* l_0_12_261 l_0_12_261)))
 (let ((?x48279 (* l_0_12_260 l_0_12_260)))
 (let ((?x48277 (* l_0_12_259 l_0_12_259)))
 (let ((?x48275 (* l_0_12_234 l_0_12_234)))
 (let ((?x48273 (* l_0_12_233 l_0_12_233)))
 (let ((?x48271 (* l_0_12_232 l_0_12_232)))
 (let ((?x48269 (* l_0_12_231 l_0_12_231)))
 (let ((?x48267 (* l_0_12_206 l_0_12_206)))
 (let ((?x48265 (* l_0_12_205 l_0_12_205)))
 (let ((?x48263 (* l_0_12_204 l_0_12_204)))
 (let ((?x48261 (* l_0_12_203 l_0_12_203)))
 (let ((?x48254 (- (* (* (- 1.0) l_0_12_119) l_0_12_119) (* (* 1.0 l_0_12_120) l_0_12_120))))
 (let ((?x48260 (- (- ?x48254 (* (* 1.0 l_0_12_121) l_0_12_121)) (* (* 1.0 l_0_12_122) l_0_12_122))))
 (let ((?x48274 (- (- (- (- (- (- (- ?x48260 ?x48261) ?x48263) ?x48265) ?x48267) ?x48269) ?x48271) ?x48273)))
 (let ((?x48288 (- (- (- (- (- (- (- ?x48274 ?x48275) ?x48277) ?x48279) ?x48281) ?x48283) ?x48285) ?x48287)))
 (= (- (- ?x48288 ?x48289) ?x48291) 0.0))))))))))))))))))))))
(assert
 (let ((?x48412 (* l_0_12_308 l_0_12_308)))
 (let ((?x48410 (* l_0_12_307 l_0_12_307)))
 (let ((?x48408 (* l_0_12_306 l_0_12_306)))
 (let ((?x48406 (* l_0_12_305 l_0_12_305)))
 (let ((?x48404 (* l_0_12_304 l_0_12_304)))
 (let ((?x48402 (* l_0_12_303 l_0_12_303)))
 (let ((?x48400 (* l_0_12_302 l_0_12_302)))
 (let ((?x48398 (* l_0_12_280 l_0_12_280)))
 (let ((?x48396 (* l_0_12_279 l_0_12_279)))
 (let ((?x48394 (* l_0_12_278 l_0_12_278)))
 (let ((?x48392 (* l_0_12_277 l_0_12_277)))
 (let ((?x48390 (* l_0_12_276 l_0_12_276)))
 (let ((?x48388 (* l_0_12_275 l_0_12_275)))
 (let ((?x48386 (* l_0_12_274 l_0_12_274)))
 (let ((?x48384 (* l_0_12_252 l_0_12_252)))
 (let ((?x48382 (* l_0_12_251 l_0_12_251)))
 (let ((?x48380 (* l_0_12_250 l_0_12_250)))
 (let ((?x48378 (* l_0_12_249 l_0_12_249)))
 (let ((?x48376 (* l_0_12_248 l_0_12_248)))
 (let ((?x48374 (* l_0_12_247 l_0_12_247)))
 (let ((?x48372 (* l_0_12_246 l_0_12_246)))
 (let ((?x48370 (* l_0_12_224 l_0_12_224)))
 (let ((?x48368 (* l_0_12_223 l_0_12_223)))
 (let ((?x48366 (* l_0_12_222 l_0_12_222)))
 (let ((?x48364 (* l_0_12_221 l_0_12_221)))
 (let ((?x48362 (* l_0_12_220 l_0_12_220)))
 (let ((?x48360 (* l_0_12_219 l_0_12_219)))
 (let ((?x48358 (* l_0_12_218 l_0_12_218)))
 (let ((?x48334 (- (* (* (- 1.0) l_0_12_134) l_0_12_134) (* (* 1.0 l_0_12_135) l_0_12_135))))
 (let ((?x48340 (- (- ?x48334 (* (* 1.0 l_0_12_136) l_0_12_136)) (* (* 1.0 l_0_12_137) l_0_12_137))))
 (let ((?x48346 (- (- ?x48340 (* (* 1.0 l_0_12_138) l_0_12_138)) (* (* 1.0 l_0_12_139) l_0_12_139))))
 (let ((?x48351 (+ (- ?x48346 (* (* 1.0 l_0_12_140) l_0_12_140)) (* (* 2.0 l_0_12_142) l_0_12_162))))
 (let ((?x48355 (- (+ ?x48351 (* (* 2.0 l_0_12_143) l_0_12_163)) (* (* 2.0 l_0_12_170) l_0_12_190))))
 (let ((?x48363 (- (- (- (- ?x48355 (* (* 2.0 l_0_12_171) l_0_12_191)) ?x48358) ?x48360) ?x48362)))
 (let ((?x48377 (- (- (- (- (- (- (- ?x48363 ?x48364) ?x48366) ?x48368) ?x48370) ?x48372) ?x48374) ?x48376)))
 (let ((?x48391 (- (- (- (- (- (- (- ?x48377 ?x48378) ?x48380) ?x48382) ?x48384) ?x48386) ?x48388) ?x48390)))
 (let ((?x48405 (- (- (- (- (- (- (- ?x48391 ?x48392) ?x48394) ?x48396) ?x48398) ?x48400) ?x48402) ?x48404)))
 (= (- (- (- (- ?x48405 ?x48406) ?x48408) ?x48410) ?x48412) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x48477 (* l_0_12_174 l_0_12_174)))
 (let ((?x48475 (* l_0_12_173 l_0_12_173)))
 (let ((?x48473 (* l_0_12_172 l_0_12_172)))
 (let ((?x48471 (* l_0_12_146 l_0_12_146)))
 (let ((?x48472 (+ (+ (* l_0_12_144 l_0_12_144) (* l_0_12_145 l_0_12_145)) ?x48471)))
 (= (- (- (- ?x48472 ?x48473) ?x48475) ?x48477) 0.0)))))))
(assert
 (let ((?x48489 (+ (* (* 2.0 l_0_12_144) l_0_12_162) (* (* 2.0 l_0_12_145) l_0_12_163))))
 (let ((?x48493 (- (+ ?x48489 (* (* 2.0 l_0_12_146) l_0_12_164)) (* (* 2.0 l_0_12_172) l_0_12_190))))
 (let ((?x48497 (- (- ?x48493 (* (* 2.0 l_0_12_173) l_0_12_191)) (* (* 2.0 l_0_12_174) l_0_12_192))))
 (= ?x48497 0.0)))))
(assert
 (let ((?x48543 (* l_0_12_196 l_0_12_196)))
 (let ((?x48541 (* l_0_12_195 l_0_12_195)))
 (let ((?x48539 (* l_0_12_194 l_0_12_194)))
 (let ((?x48537 (* l_0_12_193 l_0_12_193)))
 (let ((?x48535 (* l_0_12_192 l_0_12_192)))
 (let ((?x48533 (* l_0_12_191 l_0_12_191)))
 (let ((?x48531 (* l_0_12_190 l_0_12_190)))
 (let ((?x48529 (* l_0_12_168 l_0_12_168)))
 (let ((?x48527 (* l_0_12_167 l_0_12_167)))
 (let ((?x48525 (* l_0_12_166 l_0_12_166)))
 (let ((?x48523 (* l_0_12_165 l_0_12_165)))
 (let ((?x48521 (* l_0_12_164 l_0_12_164)))
 (let ((?x48522 (+ (+ (* l_0_12_162 l_0_12_162) (* l_0_12_163 l_0_12_163)) ?x48521)))
 (let ((?x48536 (- (- (- (+ (+ (+ (+ ?x48522 ?x48523) ?x48525) ?x48527) ?x48529) ?x48531) ?x48533) ?x48535)))
 (= (- (- (- (- ?x48536 ?x48537) ?x48539) ?x48541) ?x48543) 0.0))))))))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_28 0.0))
(assert
 (>= l_0_12_29 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_34 0.0))
(assert
 (>= l_0_12_38 0.0))
(assert
 (>= l_0_12_43 0.0))
(assert
 (>= l_0_12_49 0.0))
(assert
 (>= l_0_12_56 0.0))
(assert
 (>= l_0_12_57 0.0))
(assert
 (>= l_0_12_59 0.0))
(assert
 (>= l_0_12_62 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_71 0.0))
(assert
 (>= l_0_12_77 0.0))
(assert
 (>= l_0_12_84 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_87 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_94 0.0))
(assert
 (>= l_0_12_99 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (>= l_0_12_112 0.0))
(assert
 (>= l_0_12_113 0.0))
(assert
 (>= l_0_12_115 0.0))
(assert
 (>= l_0_12_118 0.0))
(assert
 (>= l_0_12_122 0.0))
(assert
 (>= l_0_12_127 0.0))
(assert
 (>= l_0_12_133 0.0))
(assert
 (>= l_0_12_140 0.0))
(assert
 (>= l_0_12_141 0.0))
(assert
 (>= l_0_12_143 0.0))
(assert
 (>= l_0_12_146 0.0))
(assert
 (>= l_0_12_150 0.0))
(assert
 (>= l_0_12_155 0.0))
(assert
 (>= l_0_12_161 0.0))
(assert
 (>= l_0_12_168 0.0))
(assert
 (>= l_0_12_169 0.0))
(assert
 (>= l_0_12_171 0.0))
(assert
 (>= l_0_12_174 0.0))
(assert
 (>= l_0_12_178 0.0))
(assert
 (>= l_0_12_183 0.0))
(assert
 (>= l_0_12_189 0.0))
(assert
 (>= l_0_12_196 0.0))
(assert
 (>= l_0_12_197 0.0))
(assert
 (>= l_0_12_199 0.0))
(assert
 (>= l_0_12_202 0.0))
(assert
 (>= l_0_12_206 0.0))
(assert
 (>= l_0_12_211 0.0))
(assert
 (>= l_0_12_217 0.0))
(assert
 (>= l_0_12_224 0.0))
(assert
 (>= l_0_12_225 0.0))
(assert
 (>= l_0_12_227 0.0))
(assert
 (>= l_0_12_230 0.0))
(assert
 (>= l_0_12_234 0.0))
(assert
 (>= l_0_12_239 0.0))
(assert
 (>= l_0_12_245 0.0))
(assert
 (>= l_0_12_252 0.0))
(assert
 (>= l_0_12_253 0.0))
(assert
 (>= l_0_12_255 0.0))
(assert
 (>= l_0_12_258 0.0))
(assert
 (>= l_0_12_262 0.0))
(assert
 (>= l_0_12_267 0.0))
(assert
 (>= l_0_12_273 0.0))
(assert
 (>= l_0_12_280 0.0))
(assert
 (>= l_0_12_281 0.0))
(assert
 (>= l_0_12_283 0.0))
(assert
 (>= l_0_12_286 0.0))
(assert
 (>= l_0_12_290 0.0))
(assert
 (>= l_0_12_295 0.0))
(assert
 (>= l_0_12_301 0.0))
(assert
 (>= l_0_12_308 0.0))
(assert
 (let ((?x48651 (* l_0_13_31 l_0_13_31)))
 (let ((?x48649 (* l_0_13_30 l_0_13_30)))
 (let ((?x48647 (* l_0_13_3 l_0_13_3)))
 (let ((?x48645 (* l_0_13_2 l_0_13_2)))
 (let ((?x48638 (- (* (* (- 2.0) l_0_13_114) l_0_13_123) (* (* 2.0 l_0_13_115) l_0_13_124))))
 (let ((?x48644 (- (- ?x48638 (* (* 2.0 l_0_13_198) l_0_13_207)) (* (* 2.0 l_0_13_199) l_0_13_208))))
 (= (+ (+ (+ (- (- ?x48644 ?x48645) ?x48647) ?x48649) ?x48651) 1.0) 0.0))))))))
(assert
 (let ((?x48651 (* l_0_13_31 l_0_13_31)))
 (let ((?x48649 (* l_0_13_30 l_0_13_30)))
 (let ((?x48647 (* l_0_13_3 l_0_13_3)))
 (let ((?x48645 (* l_0_13_2 l_0_13_2)))
 (let ((?x48674 (- (* (* (- 2.0) l_0_13_119) l_0_13_134) (* (* 2.0 l_0_13_120) l_0_13_135))))
 (let ((?x48680 (- (- ?x48674 (* (* 2.0 l_0_13_121) l_0_13_136)) (* (* 2.0 l_0_13_122) l_0_13_137))))
 (let ((?x48687 (- (- (+ ?x48680 ?x48645) (* (* 2.0 l_0_13_203) l_0_13_218)) (* (* 2.0 l_0_13_204) l_0_13_219))))
 (let ((?x48693 (- (- ?x48687 (* (* 2.0 l_0_13_205) l_0_13_220)) (* (* 2.0 l_0_13_206) l_0_13_221))))
 (= (- (- (- (+ ?x48693 ?x48647) ?x48649) ?x48651) 1.0) 0.0))))))))))
(assert
 (let ((?x48723 (- (- (- _a_4_) (* (* 2.0 l_0_13_114) l_0_13_119)) (* (* 2.0 l_0_13_115) l_0_13_120))))
 (let ((?x48727 (- (- ?x48723 (* (* 2.0 l_0_13_198) l_0_13_203)) (* (* 2.0 l_0_13_199) l_0_13_204))))
 (= (+ ?x48727 1.0) 0.0))))
(assert
 (let ((?x48651 (* l_0_13_31 l_0_13_31)))
 (let ((?x48649 (* l_0_13_30 l_0_13_30)))
 (let ((?x48647 (* l_0_13_3 l_0_13_3)))
 (let ((?x48645 (* l_0_13_2 l_0_13_2)))
 (let ((?x48741 (+ (* (* (- 2.0) l_0_13_113) l_0_13_116) (* (* 2.0 l_0_13_142) l_0_13_144))))
 (let ((?x48747 (- (+ ?x48741 (* (* 2.0 l_0_13_143) l_0_13_145)) (* (* 2.0 l_0_13_170) l_0_13_172))))
 (let ((?x48753 (- (- ?x48747 (* (* 2.0 l_0_13_171) l_0_13_173)) (* (* 2.0 l_0_13_197) l_0_13_200))))
 (= (- (- (- (+ (+ ?x48753 ?x48645) ?x48647) ?x48649) ?x48651) 1.0) 0.0)))))))))
(assert
 (let ((?x48794 (* l_0_13_199 l_0_13_199)))
 (let ((?x48792 (* l_0_13_198 l_0_13_198)))
 (let ((?x48791 (- (- (- _a_3_) (* (* 1.0 l_0_13_114) l_0_13_114)) (* (* 1.0 l_0_13_115) l_0_13_115))))
 (= (- (- ?x48791 ?x48792) ?x48794) 0.0)))))
(assert
 (let ((?x48651 (* l_0_13_31 l_0_13_31)))
 (let ((?x48649 (* l_0_13_30 l_0_13_30)))
 (let ((?x48647 (* l_0_13_3 l_0_13_3)))
 (let ((?x48645 (* l_0_13_2 l_0_13_2)))
 (let ((?x48813 (- (- (- _a_5_) (* (* 2.0 l_0_13_114) l_0_13_128)) (* (* 2.0 l_0_13_115) l_0_13_129))))
 (let ((?x48817 (- (- ?x48813 (* (* 2.0 l_0_13_198) l_0_13_212)) (* (* 2.0 l_0_13_199) l_0_13_213))))
 (= (- (- (+ (+ ?x48817 ?x48645) ?x48647) ?x48649) ?x48651) 0.0))))))))
(assert
 (let ((?x48847 (* l_0_13_29 l_0_13_29)))
 (let ((?x48843 (+ (* (- l_0_13_1) l_0_13_1) (* (* 2.0 l_0_13_141) l_0_13_151))))
 (= (+ (- ?x48843 (* (* 2.0 l_0_13_169) l_0_13_179)) ?x48847) 0.0))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48876 (* ?x48875 l_0_13_30)))
 (let ((?x48864 (- (* (* (- 2.0) l_0_13_1) l_0_13_2) (* (* 2.0 l_0_13_113) l_0_13_123))))
 (let ((?x48868 (+ (+ ?x48864 (* (* 2.0 l_0_13_142) l_0_13_151)) (* (* 2.0 l_0_13_143) l_0_13_152))))
 (let ((?x48872 (- (- ?x48868 (* (* 2.0 l_0_13_170) l_0_13_179)) (* (* 2.0 l_0_13_171) l_0_13_180))))
 (= (+ (- ?x48872 (* (* 2.0 l_0_13_197) l_0_13_207)) ?x48876) 0.0)))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x48929 (* ?x48928 l_0_13_40)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x48926 (* ?x48925 l_0_13_39)))
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48923 (* ?x48875 l_0_13_32)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x48903 (* ?x48902 l_0_13_3)))
 (let ((?x48899 (* 2.0 l_0_13_11)))
 (let ((?x48900 (* ?x48899 l_0_13_2)))
 (let ((?x48907 (+ (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_4) ?x48900) ?x48903) (* (* 2.0 l_0_13_144) l_0_13_151))))
 (let ((?x48913 (+ (+ ?x48907 (* (* 2.0 l_0_13_145) l_0_13_152)) (* (* 2.0 l_0_13_146) l_0_13_153))))
 (let ((?x48919 (- (- ?x48913 (* (* 2.0 l_0_13_172) l_0_13_179)) (* (* 2.0 l_0_13_173) l_0_13_180))))
 (let ((?x48930 (- (- (+ (- ?x48919 (* (* 2.0 l_0_13_174) l_0_13_181)) ?x48923) ?x48926) ?x48929)))
 (= ?x48930 0.0))))))))))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48983 (* ?x48875 l_0_13_35)))
 (let ((?x48961 (+ (* (* (- 2.0) l_0_13_1) l_0_13_7) (* (* 2.0 l_0_13_147) l_0_13_151))))
 (let ((?x48967 (+ (+ ?x48961 (* (* 2.0 l_0_13_148) l_0_13_152)) (* (* 2.0 l_0_13_149) l_0_13_153))))
 (let ((?x48973 (- (+ ?x48967 (* (* 2.0 l_0_13_150) l_0_13_154)) (* (* 2.0 l_0_13_175) l_0_13_179))))
 (let ((?x48979 (- (- ?x48973 (* (* 2.0 l_0_13_176) l_0_13_180)) (* (* 2.0 l_0_13_177) l_0_13_181))))
 (= (+ (- ?x48979 (* (* 2.0 l_0_13_178) l_0_13_182)) ?x48983) 0.0))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49039 (* ?x48875 l_0_13_39)))
 (let ((?x49037 (* l_0_13_183 l_0_13_183)))
 (let ((?x49035 (* l_0_13_182 l_0_13_182)))
 (let ((?x49033 (* l_0_13_181 l_0_13_181)))
 (let ((?x49031 (* l_0_13_180 l_0_13_180)))
 (let ((?x49029 (* l_0_13_179 l_0_13_179)))
 (let ((?x49027 (* l_0_13_155 l_0_13_155)))
 (let ((?x49025 (* l_0_13_154 l_0_13_154)))
 (let ((?x49023 (* l_0_13_153 l_0_13_153)))
 (let ((?x49021 (* l_0_13_152 l_0_13_152)))
 (let ((?x49022 (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_11) (* l_0_13_151 l_0_13_151)) ?x49021)))
 (let ((?x49036 (- (- (- (- (+ (+ (+ ?x49022 ?x49023) ?x49025) ?x49027) ?x49029) ?x49031) ?x49033) ?x49035)))
 (= (+ (- ?x49036 ?x49037) ?x49039) 0.0)))))))))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49099 (* ?x48875 l_0_13_44)))
 (let ((?x49039 (* ?x48875 l_0_13_39)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x49066 (* ?x49064 l_0_13_16)))
 (let ((?x49065 (* ?x49064 l_0_13_11)))
 (let ((?x49073 (+ (+ (- ?x49065 ?x49066) (* (* 2.0 l_0_13_151) l_0_13_156)) (* (* 2.0 l_0_13_152) l_0_13_157))))
 (let ((?x49079 (+ (+ ?x49073 (* (* 2.0 l_0_13_153) l_0_13_158)) (* (* 2.0 l_0_13_154) l_0_13_159))))
 (let ((?x49085 (- (+ ?x49079 (* (* 2.0 l_0_13_155) l_0_13_160)) (* (* 2.0 l_0_13_179) l_0_13_184))))
 (let ((?x49091 (- (- ?x49085 (* (* 2.0 l_0_13_180) l_0_13_185)) (* (* 2.0 l_0_13_181) l_0_13_186))))
 (let ((?x49097 (- (- ?x49091 (* (* 2.0 l_0_13_182) l_0_13_187)) (* (* 2.0 l_0_13_183) l_0_13_188))))
 (= (+ (- ?x49097 ?x49039) ?x49099) 0.0)))))))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49179 (* ?x48875 l_0_13_50)))
 (let ((?x49160 (+ (* (* (- 2.0) l_0_13_1) l_0_13_22) (* (* 2.0 l_0_13_151) l_0_13_162))))
 (let ((?x49164 (+ (+ ?x49160 (* (* 2.0 l_0_13_152) l_0_13_163)) (* (* 2.0 l_0_13_153) l_0_13_164))))
 (let ((?x49168 (+ (+ ?x49164 (* (* 2.0 l_0_13_154) l_0_13_165)) (* (* 2.0 l_0_13_155) l_0_13_166))))
 (let ((?x49172 (- (- ?x49168 (* (* 2.0 l_0_13_179) l_0_13_190)) (* (* 2.0 l_0_13_180) l_0_13_191))))
 (let ((?x49176 (- (- ?x49172 (* (* 2.0 l_0_13_181) l_0_13_192)) (* (* 2.0 l_0_13_182) l_0_13_193))))
 (let ((?x49183 (+ (+ (- ?x49176 (* (* 2.0 l_0_13_183) l_0_13_194)) ?x49179) (* (* 2.0 l_0_13_58) l_0_13_67))))
 (let ((?x49189 (- (+ ?x49183 (* (* 2.0 l_0_13_59) l_0_13_68)) (* (* 2.0 l_0_13_86) l_0_13_95))))
 (= (- ?x49189 (* (* 2.0 l_0_13_87) l_0_13_96)) 0.0)))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49284 (* ?x48928 l_0_13_33)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49282 (* ?x48925 l_0_13_32)))
 (let ((?x49279 (* 2.0 l_0_13_3)))
 (let ((?x49280 (* ?x49279 l_0_13_5)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49268 (* ?x49267 l_0_13_4)))
 (let ((?x49263 (- (* (* (- 2.0) l_0_13_116) l_0_13_123) (* (* 2.0 l_0_13_117) l_0_13_124))))
 (let ((?x49272 (- (- (- ?x49263 (* (* 2.0 l_0_13_118) l_0_13_125)) ?x49268) (* (* 2.0 l_0_13_200) l_0_13_207))))
 (let ((?x49278 (- (- ?x49272 (* (* 2.0 l_0_13_201) l_0_13_208)) (* (* 2.0 l_0_13_202) l_0_13_209))))
 (= (+ (+ (- ?x49278 ?x49280) ?x49282) ?x49284) 0.0)))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49359 (* ?x48928 l_0_13_36)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49357 (* ?x48925 l_0_13_35)))
 (let ((?x49279 (* 2.0 l_0_13_3)))
 (let ((?x49355 (* ?x49279 l_0_13_8)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49345 (* ?x49267 l_0_13_7)))
 (let ((?x49335 (- (* (* (- 2.0) l_0_13_119) l_0_13_123) (* (* 2.0 l_0_13_120) l_0_13_124))))
 (let ((?x49344 (- (- ?x49335 (* (* 2.0 l_0_13_121) l_0_13_125)) (* (* 2.0 l_0_13_122) l_0_13_126))))
 (let ((?x49350 (- (- (- ?x49344 ?x49345) (* (* 2.0 l_0_13_203) l_0_13_207)) (* (* 2.0 l_0_13_204) l_0_13_208))))
 (let ((?x49354 (- (- ?x49350 (* (* 2.0 l_0_13_205) l_0_13_209)) (* (* 2.0 l_0_13_206) l_0_13_210))))
 (= (+ (+ (- ?x49354 ?x49355) ?x49357) ?x49359) 0.0))))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x48929 (* ?x48928 l_0_13_40)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x48926 (* ?x48925 l_0_13_39)))
 (let ((?x49398 (* l_0_13_211 l_0_13_211)))
 (let ((?x49396 (* l_0_13_210 l_0_13_210)))
 (let ((?x49394 (* l_0_13_209 l_0_13_209)))
 (let ((?x49392 (* l_0_13_208 l_0_13_208)))
 (let ((?x49390 (* l_0_13_207 l_0_13_207)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x48903 (* ?x48902 l_0_13_3)))
 (let ((?x49377 (- (- (* (* (- 2.0) l_0_13_11) l_0_13_2) ?x48903) (* (* 1.0 l_0_13_123) l_0_13_123))))
 (let ((?x49383 (- (- ?x49377 (* (* 1.0 l_0_13_124) l_0_13_124)) (* (* 1.0 l_0_13_125) l_0_13_125))))
 (let ((?x49389 (- (- ?x49383 (* (* 1.0 l_0_13_126) l_0_13_126)) (* (* 1.0 l_0_13_127) l_0_13_127))))
 (let ((?x49401 (+ (+ (- (- (- (- (- ?x49389 ?x49390) ?x49392) ?x49394) ?x49396) ?x49398) ?x48926) ?x48929)))
 (= ?x49401 0.0)))))))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49459 (* ?x48928 l_0_13_45)))
 (let ((?x48929 (* ?x48928 l_0_13_40)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49456 (* ?x48925 l_0_13_44)))
 (let ((?x48926 (* ?x48925 l_0_13_39)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49438 (* ?x49437 l_0_13_3)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49435 (* ?x49434 l_0_13_2)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x48903 (* ?x48902 l_0_13_3)))
 (let ((?x48899 (* 2.0 l_0_13_11)))
 (let ((?x48900 (* ?x48899 l_0_13_2)))
 (let ((?x49424 (- (- (+ ?x48900 ?x48903) (* (* 2.0 l_0_13_123) l_0_13_128)) (* (* 2.0 l_0_13_124) l_0_13_129))))
 (let ((?x49430 (- (- ?x49424 (* (* 2.0 l_0_13_125) l_0_13_130)) (* (* 2.0 l_0_13_126) l_0_13_131))))
 (let ((?x49442 (- (- (- (- ?x49430 (* (* 2.0 l_0_13_127) l_0_13_132)) ?x49435) ?x49438) (* (* 2.0 l_0_13_207) l_0_13_212))))
 (let ((?x49448 (- (- ?x49442 (* (* 2.0 l_0_13_208) l_0_13_213)) (* (* 2.0 l_0_13_209) l_0_13_214))))
 (let ((?x49454 (- (- ?x49448 (* (* 2.0 l_0_13_210) l_0_13_215)) (* (* 2.0 l_0_13_211) l_0_13_216))))
 (= (+ (- (+ (- ?x49454 ?x48926) ?x49456) ?x48929) ?x49459) 0.0)))))))))))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49523 (* ?x48928 l_0_13_51)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49521 (* ?x48925 l_0_13_50)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49519 (* ?x49518 l_0_13_3)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49506 (* ?x49267 l_0_13_22)))
 (let ((?x49499 (- (* (* (- 2.0) l_0_13_123) l_0_13_134) (* (* 2.0 l_0_13_124) l_0_13_135))))
 (let ((?x49503 (- (- ?x49499 (* (* 2.0 l_0_13_125) l_0_13_136)) (* (* 2.0 l_0_13_126) l_0_13_137))))
 (let ((?x49509 (- (- (- ?x49503 (* (* 2.0 l_0_13_127) l_0_13_138)) ?x49506) (* (* 2.0 l_0_13_207) l_0_13_218))))
 (let ((?x49513 (- (- ?x49509 (* (* 2.0 l_0_13_208) l_0_13_219)) (* (* 2.0 l_0_13_209) l_0_13_220))))
 (let ((?x49517 (- (- ?x49513 (* (* 2.0 l_0_13_210) l_0_13_221)) (* (* 2.0 l_0_13_211) l_0_13_222))))
 (= (+ (+ (- ?x49517 ?x49519) ?x49521) ?x49523) 0.0)))))))))))))))
(assert
 (let ((?x49559 (* l_0_13_6 l_0_13_6)))
 (let ((?x49557 (* l_0_13_5 l_0_13_5)))
 (let ((?x49555 (* l_0_13_4 l_0_13_4)))
 (let ((?x49553 (* l_0_13_34 l_0_13_34)))
 (let ((?x49556 (- (+ (+ (* l_0_13_32 l_0_13_32) (* l_0_13_33 l_0_13_33)) ?x49553) ?x49555)))
 (= (- (- ?x49556 ?x49557) ?x49559) 0.0)))))))
(assert
 (let ((?x49583 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x49580 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x49577 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49574 (* ?x49573 l_0_13_37)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49571 (* ?x49570 l_0_13_36)))
 (let ((?x49581 (- (- (+ (+ (* (* 2.0 l_0_13_32) l_0_13_35) ?x49571) ?x49574) ?x49577) ?x49580)))
 (= (- ?x49581 ?x49583) 0.0))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49614 (* ?x49573 l_0_13_41)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49612 (* ?x49570 l_0_13_40)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49610 (* ?x49568 l_0_13_39)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49608 (* ?x49607 l_0_13_6)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49605 (* ?x48902 l_0_13_5)))
 (let ((?x49613 (+ (+ (- (- (* (* (- 2.0) l_0_13_11) l_0_13_4) ?x49605) ?x49608) ?x49610) ?x49612)))
 (= (+ ?x49613 ?x49614) 0.0)))))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49645 (* ?x49573 l_0_13_46)))
 (let ((?x49614 (* ?x49573 l_0_13_41)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49642 (* ?x49570 l_0_13_45)))
 (let ((?x49612 (* ?x49570 l_0_13_40)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49639 (* ?x49568 l_0_13_44)))
 (let ((?x49610 (* ?x49568 l_0_13_39)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x49636 (* ?x49635 l_0_13_6)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49633 (* ?x49437 l_0_13_5)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49625 (* ?x49434 l_0_13_4)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49608 (* ?x49607 l_0_13_6)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49605 (* ?x48902 l_0_13_5)))
 (let ((?x49624 (+ (+ (* (* 2.0 l_0_13_11) l_0_13_4) ?x49605) ?x49608)))
 (let ((?x49643 (+ (- (+ (- (- (- (- ?x49624 ?x49625) ?x49633) ?x49636) ?x49610) ?x49639) ?x49612) ?x49642)))
 (= (+ (- ?x49643 ?x49614) ?x49645) 0.0)))))))))))))))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49672 (* ?x49573 l_0_13_52)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49670 (* ?x49570 l_0_13_51)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49668 (* ?x49568 l_0_13_50)))
 (let ((?x49665 (* 2.0 l_0_13_24)))
 (let ((?x49666 (* ?x49665 l_0_13_6)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49663 (* ?x49518 l_0_13_5)))
 (let ((?x49671 (+ (+ (- (- (* (* (- 2.0) l_0_13_22) l_0_13_4) ?x49663) ?x49666) ?x49668) ?x49670)))
 (= (+ ?x49671 ?x49672) 0.0)))))))))))))
(assert
 (let ((?x49704 (* l_0_13_9 l_0_13_9)))
 (let ((?x49702 (* l_0_13_8 l_0_13_8)))
 (let ((?x49700 (* l_0_13_7 l_0_13_7)))
 (let ((?x49698 (* l_0_13_38 l_0_13_38)))
 (let ((?x49696 (* l_0_13_37 l_0_13_37)))
 (let ((?x49694 (* l_0_13_36 l_0_13_36)))
 (let ((?x49695 (+ (+ (* (- l_0_13_10) l_0_13_10) (* l_0_13_35 l_0_13_35)) ?x49694)))
 (= (- (- (- (+ (+ ?x49695 ?x49696) ?x49698) ?x49700) ?x49702) ?x49704) 0.0)))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49734 (* ?x49733 l_0_13_42)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49731 (* ?x49730 l_0_13_41)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49728 (* ?x49727 l_0_13_40)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49725 (* ?x49724 l_0_13_39)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49722 (* ?x49607 l_0_13_9)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49720 (* ?x48902 l_0_13_8)))
 (let ((?x48899 (* 2.0 l_0_13_11)))
 (let ((?x49718 (* ?x48899 l_0_13_7)))
 (let ((?x49726 (+ (- (- (- (* (* (- 2.0) l_0_13_10) l_0_13_14) ?x49718) ?x49720) ?x49722) ?x49725)))
 (= (+ (+ (+ ?x49726 ?x49728) ?x49731) ?x49734) 0.0)))))))))))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49777 (* ?x49733 l_0_13_47)))
 (let ((?x49734 (* ?x49733 l_0_13_42)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49774 (* ?x49730 l_0_13_46)))
 (let ((?x49731 (* ?x49730 l_0_13_41)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49771 (* ?x49727 l_0_13_45)))
 (let ((?x49728 (* ?x49727 l_0_13_40)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49768 (* ?x49724 l_0_13_44)))
 (let ((?x49725 (* ?x49724 l_0_13_39)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x49765 (* ?x49635 l_0_13_9)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49763 (* ?x49437 l_0_13_8)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49761 (* ?x49434 l_0_13_7)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49722 (* ?x49607 l_0_13_9)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49720 (* ?x48902 l_0_13_8)))
 (let ((?x48899 (* 2.0 l_0_13_11)))
 (let ((?x49718 (* ?x48899 l_0_13_7)))
 (let ((?x49754 (* 2.0 l_0_13_10)))
 (let ((?x49756 (* ?x49754 l_0_13_19)))
 (let ((?x49755 (* ?x49754 l_0_13_14)))
 (let ((?x49766 (- (- (- (+ (+ (+ (- ?x49755 ?x49756) ?x49718) ?x49720) ?x49722) ?x49761) ?x49763) ?x49765)))
 (let ((?x49776 (- (+ (- (+ (- (+ (- ?x49766 ?x49725) ?x49768) ?x49728) ?x49771) ?x49731) ?x49774) ?x49734)))
 (= (+ ?x49776 ?x49777) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49821 (* ?x49733 l_0_13_53)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49819 (* ?x49730 l_0_13_52)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49817 (* ?x49727 l_0_13_51)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49815 (* ?x49724 l_0_13_50)))
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x48929 (* ?x48928 l_0_13_40)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x48926 (* ?x48925 l_0_13_39)))
 (let ((?x49665 (* 2.0 l_0_13_24)))
 (let ((?x49811 (* ?x49665 l_0_13_9)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49809 (* ?x49518 l_0_13_8)))
 (let ((?x49806 (* 2.0 l_0_13_22)))
 (let ((?x49807 (* ?x49806 l_0_13_7)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x48903 (* ?x48902 l_0_13_3)))
 (let ((?x48899 (* 2.0 l_0_13_11)))
 (let ((?x48900 (* ?x48899 l_0_13_2)))
 (let ((?x49810 (- (- (+ (+ (* (* (- 2.0) l_0_13_10) l_0_13_25) ?x48900) ?x48903) ?x49807) ?x49809)))
 (let ((?x49822 (+ (+ (+ (+ (- (- (- ?x49810 ?x49811) ?x48926) ?x48929) ?x49815) ?x49817) ?x49819) ?x49821)))
 (= ?x49822 0.0))))))))))))))))))))))))))
(assert
 (let ((?x49865 (* l_0_13_43 l_0_13_43)))
 (let ((?x49863 (* l_0_13_42 l_0_13_42)))
 (let ((?x49861 (* l_0_13_41 l_0_13_41)))
 (let ((?x49859 (* l_0_13_40 l_0_13_40)))
 (let ((?x49857 (* l_0_13_39 l_0_13_39)))
 (let ((?x49855 (* l_0_13_15 l_0_13_15)))
 (let ((?x49853 (* l_0_13_14 l_0_13_14)))
 (let ((?x49851 (* l_0_13_13 l_0_13_13)))
 (let ((?x49852 (- (- (* (- l_0_13_11) l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x49851)))
 (let ((?x49866 (+ (+ (+ (+ (+ (- (- ?x49852 ?x49853) ?x49855) ?x49857) ?x49859) ?x49861) ?x49863) ?x49865)))
 (= ?x49866 0.0))))))))))))
(assert
 (let ((?x49865 (* l_0_13_43 l_0_13_43)))
 (let ((?x49911 (* 2.0 l_0_13_43)))
 (let ((?x49912 (* ?x49911 l_0_13_48)))
 (let ((?x49863 (* l_0_13_42 l_0_13_42)))
 (let ((?x49907 (* 2.0 l_0_13_42)))
 (let ((?x49908 (* ?x49907 l_0_13_47)))
 (let ((?x49861 (* l_0_13_41 l_0_13_41)))
 (let ((?x49903 (* 2.0 l_0_13_41)))
 (let ((?x49904 (* ?x49903 l_0_13_46)))
 (let ((?x49859 (* l_0_13_40 l_0_13_40)))
 (let ((?x49899 (* 2.0 l_0_13_40)))
 (let ((?x49900 (* ?x49899 l_0_13_45)))
 (let ((?x49857 (* l_0_13_39 l_0_13_39)))
 (let ((?x49895 (* 2.0 l_0_13_39)))
 (let ((?x49896 (* ?x49895 l_0_13_44)))
 (let ((?x49855 (* l_0_13_15 l_0_13_15)))
 (let ((?x49891 (* 2.0 l_0_13_15)))
 (let ((?x49892 (* ?x49891 l_0_13_20)))
 (let ((?x49853 (* l_0_13_14 l_0_13_14)))
 (let ((?x49887 (* 2.0 l_0_13_14)))
 (let ((?x49888 (* ?x49887 l_0_13_19)))
 (let ((?x49851 (* l_0_13_13 l_0_13_13)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49884 (* ?x49607 l_0_13_18)))
 (let ((?x49849 (* l_0_13_12 l_0_13_12)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49881 (* ?x48902 l_0_13_17)))
 (let ((?x49882 (- (+ (* (* (- 2.0) l_0_13_11) l_0_13_16) (* l_0_13_11 l_0_13_11)) ?x49881)))
 (let ((?x49894 (+ (- (+ (- (+ (- (+ ?x49882 ?x49849) ?x49884) ?x49851) ?x49888) ?x49853) ?x49892) ?x49855)))
 (let ((?x49909 (+ (- (+ (- (+ (- (+ ?x49894 ?x49896) ?x49857) ?x49900) ?x49859) ?x49904) ?x49861) ?x49908)))
 (= (- (+ (- ?x49909 ?x49863) ?x49912) ?x49865) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x49911 (* 2.0 l_0_13_43)))
 (let ((?x49966 (* ?x49911 l_0_13_54)))
 (let ((?x49907 (* 2.0 l_0_13_42)))
 (let ((?x49964 (* ?x49907 l_0_13_53)))
 (let ((?x49903 (* 2.0 l_0_13_41)))
 (let ((?x49962 (* ?x49903 l_0_13_52)))
 (let ((?x49899 (* 2.0 l_0_13_40)))
 (let ((?x49960 (* ?x49899 l_0_13_51)))
 (let ((?x49895 (* 2.0 l_0_13_39)))
 (let ((?x49958 (* ?x49895 l_0_13_50)))
 (let ((?x49891 (* 2.0 l_0_13_15)))
 (let ((?x49956 (* ?x49891 l_0_13_26)))
 (let ((?x49887 (* 2.0 l_0_13_14)))
 (let ((?x49954 (* ?x49887 l_0_13_25)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49952 (* ?x49607 l_0_13_24)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49950 (* ?x48902 l_0_13_23)))
 (let ((?x49957 (- (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_22) ?x49950) ?x49952) ?x49954) ?x49956)))
 (= (+ (+ (+ (+ (+ ?x49957 ?x49958) ?x49960) ?x49962) ?x49964) ?x49966) 0.0)))))))))))))))))))))
(assert
 (let ((?x50016 (* l_0_13_49 l_0_13_49)))
 (let ((?x50014 (* l_0_13_48 l_0_13_48)))
 (let ((?x50012 (* l_0_13_47 l_0_13_47)))
 (let ((?x50010 (* l_0_13_46 l_0_13_46)))
 (let ((?x50008 (* l_0_13_45 l_0_13_45)))
 (let ((?x50006 (* l_0_13_44 l_0_13_44)))
 (let ((?x49911 (* 2.0 l_0_13_43)))
 (let ((?x49912 (* ?x49911 l_0_13_48)))
 (let ((?x49907 (* 2.0 l_0_13_42)))
 (let ((?x49908 (* ?x49907 l_0_13_47)))
 (let ((?x49903 (* 2.0 l_0_13_41)))
 (let ((?x49904 (* ?x49903 l_0_13_46)))
 (let ((?x49899 (* 2.0 l_0_13_40)))
 (let ((?x49900 (* ?x49899 l_0_13_45)))
 (let ((?x49895 (* 2.0 l_0_13_39)))
 (let ((?x49896 (* ?x49895 l_0_13_44)))
 (let ((?x49999 (* l_0_13_21 l_0_13_21)))
 (let ((?x49997 (* l_0_13_20 l_0_13_20)))
 (let ((?x49995 (* l_0_13_19 l_0_13_19)))
 (let ((?x49993 (* l_0_13_18 l_0_13_18)))
 (let ((?x49991 (* l_0_13_17 l_0_13_17)))
 (let ((?x49981 (* l_0_13_16 l_0_13_16)))
 (let ((?x49891 (* 2.0 l_0_13_15)))
 (let ((?x49892 (* ?x49891 l_0_13_20)))
 (let ((?x49887 (* 2.0 l_0_13_14)))
 (let ((?x49888 (* ?x49887 l_0_13_19)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49884 (* ?x49607 l_0_13_18)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49881 (* ?x48902 l_0_13_17)))
 (let ((?x49980 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_16) ?x49881) ?x49884) ?x49888) ?x49892)))
 (let ((?x50001 (- (- (- (- (- (- (- ?x49980 ?x49981) ?x49991) ?x49993) ?x49995) ?x49997) ?x49999) ?x49896)))
 (let ((?x50011 (+ (+ (+ (- (- (- (- ?x50001 ?x49900) ?x49904) ?x49908) ?x49912) ?x50006) ?x50008) ?x50010)))
 (= (+ (+ (+ ?x50011 ?x50012) ?x50014) ?x50016) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50059 (* (* 2.0 l_0_13_49) l_0_13_55)))
 (let ((?x50056 (* (* 2.0 l_0_13_48) l_0_13_54)))
 (let ((?x50053 (* (* 2.0 l_0_13_47) l_0_13_53)))
 (let ((?x50050 (* (* 2.0 l_0_13_46) l_0_13_52)))
 (let ((?x50047 (* (* 2.0 l_0_13_45) l_0_13_51)))
 (let ((?x50044 (* (* 2.0 l_0_13_44) l_0_13_50)))
 (let ((?x49911 (* 2.0 l_0_13_43)))
 (let ((?x49966 (* ?x49911 l_0_13_54)))
 (let ((?x49907 (* 2.0 l_0_13_42)))
 (let ((?x49964 (* ?x49907 l_0_13_53)))
 (let ((?x49903 (* 2.0 l_0_13_41)))
 (let ((?x49962 (* ?x49903 l_0_13_52)))
 (let ((?x49899 (* 2.0 l_0_13_40)))
 (let ((?x49960 (* ?x49899 l_0_13_51)))
 (let ((?x49895 (* 2.0 l_0_13_39)))
 (let ((?x49958 (* ?x49895 l_0_13_50)))
 (let ((?x50036 (* (* 2.0 l_0_13_21) l_0_13_27)))
 (let ((?x50033 (* (* 2.0 l_0_13_20) l_0_13_26)))
 (let ((?x50030 (* (* 2.0 l_0_13_19) l_0_13_25)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x50027 (* ?x49635 l_0_13_24)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x29963 (* ?x49437 l_0_13_23)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x29968 (* ?x49434 l_0_13_22)))
 (let ((?x49891 (* 2.0 l_0_13_15)))
 (let ((?x49956 (* ?x49891 l_0_13_26)))
 (let ((?x49887 (* 2.0 l_0_13_14)))
 (let ((?x49954 (* ?x49887 l_0_13_25)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49952 (* ?x49607 l_0_13_24)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49950 (* ?x48902 l_0_13_23)))
 (let ((?x29967 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_22) ?x49950) ?x49952) ?x49954) ?x49956)))
 (let ((?x50038 (- (- (- (- (- (- (- ?x29967 ?x29968) ?x29963) ?x50027) ?x50030) ?x50033) ?x50036) ?x49958)))
 (let ((?x50051 (+ (+ (+ (- (- (- (- ?x50038 ?x49960) ?x49962) ?x49964) ?x49966) ?x50044) ?x50047) ?x50050)))
 (= (+ (+ (+ ?x50051 ?x50053) ?x50056) ?x50059) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50105 (* l_0_13_56 l_0_13_56)))
 (let ((?x50103 (* l_0_13_55 l_0_13_55)))
 (let ((?x50101 (* l_0_13_54 l_0_13_54)))
 (let ((?x50099 (* l_0_13_53 l_0_13_53)))
 (let ((?x50097 (* l_0_13_52 l_0_13_52)))
 (let ((?x50095 (* l_0_13_51 l_0_13_51)))
 (let ((?x50093 (* l_0_13_50 l_0_13_50)))
 (let ((?x50091 (* l_0_13_28 l_0_13_28)))
 (let ((?x50089 (* l_0_13_27 l_0_13_27)))
 (let ((?x50087 (* l_0_13_26 l_0_13_26)))
 (let ((?x50085 (* l_0_13_25 l_0_13_25)))
 (let ((?x50083 (* l_0_13_24 l_0_13_24)))
 (let ((?x50084 (- (- (* (- l_0_13_22) l_0_13_22) (* l_0_13_23 l_0_13_23)) ?x50083)))
 (let ((?x50098 (+ (+ (+ (- (- (- (- ?x50084 ?x50085) ?x50087) ?x50089) ?x50091) ?x50093) ?x50095) ?x50097)))
 (= (+ (+ (+ (+ ?x50098 ?x50099) ?x50101) ?x50103) ?x50105) 0.0))))))))))))))))
(assert
 (let ((?x48847 (* l_0_13_29 l_0_13_29)))
 (let ((?x48851 (* l_0_13_1 l_0_13_1)))
 (let ((?x30174 (- ?x48851 ?x48847)))
 (let ((?x50131 (- (+ ?x30174 (* (* 2.0 l_0_13_57) l_0_13_63)) (* (* 2.0 l_0_13_85) l_0_13_91))))
 (= ?x50131 0.0))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48876 (* ?x48875 l_0_13_30)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x50142 (* ?x49064 l_0_13_2)))
 (let ((?x50146 (+ (+ ?x50142 (* (* 2.0 l_0_13_147) l_0_13_162)) (* (* 2.0 l_0_13_148) l_0_13_163))))
 (let ((?x50150 (+ (+ ?x50146 (* (* 2.0 l_0_13_149) l_0_13_164)) (* (* 2.0 l_0_13_150) l_0_13_165))))
 (let ((?x50154 (- (- ?x50150 (* (* 2.0 l_0_13_175) l_0_13_190)) (* (* 2.0 l_0_13_176) l_0_13_191))))
 (let ((?x50158 (- (- ?x50154 (* (* 2.0 l_0_13_177) l_0_13_192)) (* (* 2.0 l_0_13_178) l_0_13_193))))
 (let ((?x50163 (+ (+ (- ?x50158 ?x48876) (* (* 2.0 l_0_13_58) l_0_13_63)) (* (* 2.0 l_0_13_59) l_0_13_64))))
 (let ((?x50167 (- (- ?x50163 (* (* 2.0 l_0_13_86) l_0_13_91)) (* (* 2.0 l_0_13_87) l_0_13_92))))
 (= ?x50167 0.0))))))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49821 (* ?x49733 l_0_13_53)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49819 (* ?x49730 l_0_13_52)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49817 (* ?x49727 l_0_13_51)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49815 (* ?x49724 l_0_13_50)))
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48923 (* ?x48875 l_0_13_32)))
 (let ((?x49665 (* 2.0 l_0_13_24)))
 (let ((?x49811 (* ?x49665 l_0_13_9)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49809 (* ?x49518 l_0_13_8)))
 (let ((?x49806 (* 2.0 l_0_13_22)))
 (let ((?x49807 (* ?x49806 l_0_13_7)))
 (let ((?x49754 (* 2.0 l_0_13_10)))
 (let ((?x50195 (* ?x49754 l_0_13_25)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x50194 (* ?x49064 l_0_13_4)))
 (let ((?x50202 (- (- (- (+ (+ (+ (+ ?x50194 ?x50195) ?x49807) ?x49809) ?x49811) ?x48923) ?x49815) ?x49817)))
 (let ((?x50210 (+ (+ (- (- ?x50202 ?x49819) ?x49821) (* (* 2.0 l_0_13_60) l_0_13_63)) (* (* 2.0 l_0_13_61) l_0_13_64))))
 (let ((?x50216 (- (+ ?x50210 (* (* 2.0 l_0_13_62) l_0_13_65)) (* (* 2.0 l_0_13_88) l_0_13_91))))
 (let ((?x50222 (- (- ?x50216 (* (* 2.0 l_0_13_89) l_0_13_92)) (* (* 2.0 l_0_13_90) l_0_13_93))))
 (= ?x50222 0.0))))))))))))))))))))))))))
(assert
 (let ((?x50251 (* l_0_13_94 l_0_13_94)))
 (let ((?x50249 (* l_0_13_93 l_0_13_93)))
 (let ((?x50247 (* l_0_13_92 l_0_13_92)))
 (let ((?x50245 (* l_0_13_91 l_0_13_91)))
 (let ((?x50243 (* l_0_13_66 l_0_13_66)))
 (let ((?x50241 (* l_0_13_65 l_0_13_65)))
 (let ((?x50239 (* l_0_13_64 l_0_13_64)))
 (let ((?x50237 (* l_0_13_63 l_0_13_63)))
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48983 (* ?x48875 l_0_13_35)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x30391 (* ?x49064 l_0_13_7)))
 (let ((?x30392 (- ?x30391 ?x48983)))
 (let ((?x50250 (- (- (- (+ (+ (+ (+ ?x30392 ?x50237) ?x50239) ?x50241) ?x50243) ?x50245) ?x50247) ?x50249)))
 (= (- ?x50250 ?x50251) 0.0))))))))))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49039 (* ?x48875 l_0_13_39)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x49065 (* ?x49064 l_0_13_11)))
 (let ((?x50264 (- ?x49065 ?x49039)))
 (let ((?x50270 (+ (+ ?x50264 (* (* 2.0 l_0_13_63) l_0_13_67)) (* (* 2.0 l_0_13_64) l_0_13_68))))
 (let ((?x50276 (+ (+ ?x50270 (* (* 2.0 l_0_13_65) l_0_13_69)) (* (* 2.0 l_0_13_66) l_0_13_70))))
 (let ((?x50282 (- (- ?x50276 (* (* 2.0 l_0_13_91) l_0_13_95)) (* (* 2.0 l_0_13_92) l_0_13_96))))
 (let ((?x50288 (- (- ?x50282 (* (* 2.0 l_0_13_93) l_0_13_97)) (* (* 2.0 l_0_13_94) l_0_13_98))))
 (= ?x50288 0.0)))))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49099 (* ?x48875 l_0_13_44)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x49066 (* ?x49064 l_0_13_16)))
 (let ((?x50311 (- (- ?x49066 (* (* 2.0 l_0_13_100) l_0_13_91)) (* (* 2.0 l_0_13_101) l_0_13_92))))
 (let ((?x50317 (- (- ?x50311 (* (* 2.0 l_0_13_102) l_0_13_93)) (* (* 2.0 l_0_13_103) l_0_13_94))))
 (let ((?x50322 (+ (+ (- ?x50317 ?x49099) (* (* 2.0 l_0_13_63) l_0_13_72)) (* (* 2.0 l_0_13_64) l_0_13_73))))
 (let ((?x50326 (+ (+ ?x50322 (* (* 2.0 l_0_13_65) l_0_13_74)) (* (* 2.0 l_0_13_66) l_0_13_75))))
 (= ?x50326 0.0))))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49179 (* ?x48875 l_0_13_50)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x30470 (* ?x49064 l_0_13_22)))
 (let ((?x50348 (- (- ?x30470 (* (* 2.0 l_0_13_106) l_0_13_91)) (* (* 2.0 l_0_13_107) l_0_13_92))))
 (let ((?x50354 (- (- ?x50348 (* (* 2.0 l_0_13_108) l_0_13_93)) (* (* 2.0 l_0_13_109) l_0_13_94))))
 (let ((?x50359 (+ (+ (- ?x50354 ?x49179) (* (* 2.0 l_0_13_63) l_0_13_78)) (* (* 2.0 l_0_13_64) l_0_13_79))))
 (let ((?x50363 (+ (+ ?x50359 (* (* 2.0 l_0_13_65) l_0_13_80)) (* (* 2.0 l_0_13_66) l_0_13_81))))
 (= ?x50363 0.0))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49284 (* ?x48928 l_0_13_33)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49282 (* ?x48925 l_0_13_32)))
 (let ((?x49279 (* 2.0 l_0_13_3)))
 (let ((?x49280 (* ?x49279 l_0_13_5)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49268 (* ?x49267 l_0_13_4)))
 (= (- (- (+ ?x49268 ?x49280) ?x49282) ?x49284) 0.0))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49359 (* ?x48928 l_0_13_36)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49357 (* ?x48925 l_0_13_35)))
 (let ((?x49279 (* 2.0 l_0_13_3)))
 (let ((?x49355 (* ?x49279 l_0_13_8)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49345 (* ?x49267 l_0_13_7)))
 (= (- (- (+ ?x49345 ?x49355) ?x49357) ?x49359) 0.0))))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49821 (* ?x49733 l_0_13_53)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49819 (* ?x49730 l_0_13_52)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49817 (* ?x49727 l_0_13_51)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49815 (* ?x49724 l_0_13_50)))
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49459 (* ?x48928 l_0_13_45)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49456 (* ?x48925 l_0_13_44)))
 (let ((?x49665 (* 2.0 l_0_13_24)))
 (let ((?x49811 (* ?x49665 l_0_13_9)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49809 (* ?x49518 l_0_13_8)))
 (let ((?x49806 (* 2.0 l_0_13_22)))
 (let ((?x49807 (* ?x49806 l_0_13_7)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49438 (* ?x49437 l_0_13_3)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49435 (* ?x49434 l_0_13_2)))
 (let ((?x49754 (* 2.0 l_0_13_10)))
 (let ((?x50195 (* ?x49754 l_0_13_25)))
 (let ((?x50397 (- (- (+ (+ (+ (+ (+ ?x50195 ?x49435) ?x49438) ?x49807) ?x49809) ?x49811) ?x49456) ?x49459)))
 (= (- (- (- (- ?x50397 ?x49815) ?x49817) ?x49819) ?x49821) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49523 (* ?x48928 l_0_13_51)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49521 (* ?x48925 l_0_13_50)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49519 (* ?x49518 l_0_13_3)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49506 (* ?x49267 l_0_13_22)))
 (= (- (- (+ ?x49506 ?x49519) ?x49521) ?x49523) 0.0))))))))))
(assert
 (let ((?x49559 (* l_0_13_6 l_0_13_6)))
 (let ((?x49557 (* l_0_13_5 l_0_13_5)))
 (let ((?x49555 (* l_0_13_4 l_0_13_4)))
 (let ((?x49553 (* l_0_13_34 l_0_13_34)))
 (let ((?x50409 (- (- (* (- l_0_13_32) l_0_13_32) (* l_0_13_33 l_0_13_33)) ?x49553)))
 (= (+ (+ (+ ?x50409 ?x49555) ?x49557) ?x49559) 0.0)))))))
(assert
 (let ((?x49583 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x49580 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x49577 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49574 (* ?x49573 l_0_13_37)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49571 (* ?x49570 l_0_13_36)))
 (let ((?x50421 (+ (+ (- (- (* (* (- 2.0) l_0_13_32) l_0_13_35) ?x49571) ?x49574) ?x49577) ?x49580)))
 (= (+ ?x50421 ?x49583) 0.0))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49614 (* ?x49573 l_0_13_41)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49612 (* ?x49570 l_0_13_40)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49610 (* ?x49568 l_0_13_39)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49608 (* ?x49607 l_0_13_6)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49605 (* ?x48902 l_0_13_5)))
 (let ((?x49624 (+ (+ (* (* 2.0 l_0_13_11) l_0_13_4) ?x49605) ?x49608)))
 (= (- (- (- ?x49624 ?x49610) ?x49612) ?x49614) 0.0)))))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49645 (* ?x49573 l_0_13_46)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49642 (* ?x49570 l_0_13_45)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49639 (* ?x49568 l_0_13_44)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x49636 (* ?x49635 l_0_13_6)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49633 (* ?x49437 l_0_13_5)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49625 (* ?x49434 l_0_13_4)))
 (= (- (- (- (+ (+ ?x49625 ?x49633) ?x49636) ?x49639) ?x49642) ?x49645) 0.0))))))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49672 (* ?x49573 l_0_13_52)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49670 (* ?x49570 l_0_13_51)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49668 (* ?x49568 l_0_13_50)))
 (let ((?x49665 (* 2.0 l_0_13_24)))
 (let ((?x49666 (* ?x49665 l_0_13_6)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49663 (* ?x49518 l_0_13_5)))
 (let ((?x50432 (- (- (+ (+ (* (* 2.0 l_0_13_22) l_0_13_4) ?x49663) ?x49666) ?x49668) ?x49670)))
 (let ((?x50433 (- ?x50432 ?x49672)))
 (= ?x50433 0.0))))))))))))))
(assert
 (let ((?x49704 (* l_0_13_9 l_0_13_9)))
 (let ((?x49702 (* l_0_13_8 l_0_13_8)))
 (let ((?x49700 (* l_0_13_7 l_0_13_7)))
 (let ((?x49698 (* l_0_13_38 l_0_13_38)))
 (let ((?x49696 (* l_0_13_37 l_0_13_37)))
 (let ((?x49694 (* l_0_13_36 l_0_13_36)))
 (let ((?x30914 (- (- (- (* l_0_13_10 l_0_13_10) (* l_0_13_35 l_0_13_35)) ?x49694) ?x49696)))
 (= (+ (+ (+ (- ?x30914 ?x49698) ?x49700) ?x49702) ?x49704) 0.0)))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49734 (* ?x49733 l_0_13_42)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49731 (* ?x49730 l_0_13_41)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49728 (* ?x49727 l_0_13_40)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49725 (* ?x49724 l_0_13_39)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49722 (* ?x49607 l_0_13_9)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49720 (* ?x48902 l_0_13_8)))
 (let ((?x48899 (* 2.0 l_0_13_11)))
 (let ((?x49718 (* ?x48899 l_0_13_7)))
 (let ((?x49754 (* 2.0 l_0_13_10)))
 (let ((?x49755 (* ?x49754 l_0_13_14)))
 (let ((?x30921 (- (- (- (- (+ (+ (+ ?x49755 ?x49718) ?x49720) ?x49722) ?x49725) ?x49728) ?x49731) ?x49734)))
 (= ?x30921 0.0)))))))))))))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49777 (* ?x49733 l_0_13_47)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49774 (* ?x49730 l_0_13_46)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49771 (* ?x49727 l_0_13_45)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49768 (* ?x49724 l_0_13_44)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x49765 (* ?x49635 l_0_13_9)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49763 (* ?x49437 l_0_13_8)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49761 (* ?x49434 l_0_13_7)))
 (let ((?x49754 (* 2.0 l_0_13_10)))
 (let ((?x49756 (* ?x49754 l_0_13_19)))
 (let ((?x50450 (- (- (- (- (+ (+ (+ ?x49756 ?x49761) ?x49763) ?x49765) ?x49768) ?x49771) ?x49774) ?x49777)))
 (= ?x50450 0.0)))))))))))))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49821 (* ?x49733 l_0_13_53)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49819 (* ?x49730 l_0_13_52)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49817 (* ?x49727 l_0_13_51)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49815 (* ?x49724 l_0_13_50)))
 (let ((?x49665 (* 2.0 l_0_13_24)))
 (let ((?x49811 (* ?x49665 l_0_13_9)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49809 (* ?x49518 l_0_13_8)))
 (let ((?x49806 (* 2.0 l_0_13_22)))
 (let ((?x49807 (* ?x49806 l_0_13_7)))
 (let ((?x49754 (* 2.0 l_0_13_10)))
 (let ((?x50195 (* ?x49754 l_0_13_25)))
 (let ((?x31043 (- (- (- (- (+ (+ (+ ?x50195 ?x49807) ?x49809) ?x49811) ?x49815) ?x49817) ?x49819) ?x49821)))
 (= ?x31043 0.0)))))))))))))))))))
(assert
 (let ((?x49865 (* l_0_13_43 l_0_13_43)))
 (let ((?x49863 (* l_0_13_42 l_0_13_42)))
 (let ((?x49861 (* l_0_13_41 l_0_13_41)))
 (let ((?x49859 (* l_0_13_40 l_0_13_40)))
 (let ((?x49857 (* l_0_13_39 l_0_13_39)))
 (let ((?x49855 (* l_0_13_15 l_0_13_15)))
 (let ((?x49853 (* l_0_13_14 l_0_13_14)))
 (let ((?x49851 (* l_0_13_13 l_0_13_13)))
 (let ((?x30999 (+ (+ (+ (* l_0_13_11 l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x49851) ?x49853)))
 (= (- (- (- (- (- (+ ?x30999 ?x49855) ?x49857) ?x49859) ?x49861) ?x49863) ?x49865) 0.0)))))))))))
(assert
 (let ((?x49911 (* 2.0 l_0_13_43)))
 (let ((?x49912 (* ?x49911 l_0_13_48)))
 (let ((?x49907 (* 2.0 l_0_13_42)))
 (let ((?x49908 (* ?x49907 l_0_13_47)))
 (let ((?x49903 (* 2.0 l_0_13_41)))
 (let ((?x49904 (* ?x49903 l_0_13_46)))
 (let ((?x49899 (* 2.0 l_0_13_40)))
 (let ((?x49900 (* ?x49899 l_0_13_45)))
 (let ((?x49895 (* 2.0 l_0_13_39)))
 (let ((?x49896 (* ?x49895 l_0_13_44)))
 (let ((?x49891 (* 2.0 l_0_13_15)))
 (let ((?x49892 (* ?x49891 l_0_13_20)))
 (let ((?x49887 (* 2.0 l_0_13_14)))
 (let ((?x49888 (* ?x49887 l_0_13_19)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49884 (* ?x49607 l_0_13_18)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49881 (* ?x48902 l_0_13_17)))
 (let ((?x49980 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_16) ?x49881) ?x49884) ?x49888) ?x49892)))
 (= (- (- (- (- (- ?x49980 ?x49896) ?x49900) ?x49904) ?x49908) ?x49912) 0.0)))))))))))))))))))))
(assert
 (let ((?x49911 (* 2.0 l_0_13_43)))
 (let ((?x49966 (* ?x49911 l_0_13_54)))
 (let ((?x49907 (* 2.0 l_0_13_42)))
 (let ((?x49964 (* ?x49907 l_0_13_53)))
 (let ((?x49903 (* 2.0 l_0_13_41)))
 (let ((?x49962 (* ?x49903 l_0_13_52)))
 (let ((?x49899 (* 2.0 l_0_13_40)))
 (let ((?x49960 (* ?x49899 l_0_13_51)))
 (let ((?x49895 (* 2.0 l_0_13_39)))
 (let ((?x49958 (* ?x49895 l_0_13_50)))
 (let ((?x49891 (* 2.0 l_0_13_15)))
 (let ((?x49956 (* ?x49891 l_0_13_26)))
 (let ((?x49887 (* 2.0 l_0_13_14)))
 (let ((?x49954 (* ?x49887 l_0_13_25)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49952 (* ?x49607 l_0_13_24)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49950 (* ?x48902 l_0_13_23)))
 (let ((?x29967 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_22) ?x49950) ?x49952) ?x49954) ?x49956)))
 (let ((?x50485 (- (- (- (- (- ?x29967 ?x49958) ?x49960) ?x49962) ?x49964) ?x49966)))
 (= ?x50485 0.0))))))))))))))))))))))
(assert
 (let ((?x50016 (* l_0_13_49 l_0_13_49)))
 (let ((?x50014 (* l_0_13_48 l_0_13_48)))
 (let ((?x50012 (* l_0_13_47 l_0_13_47)))
 (let ((?x50010 (* l_0_13_46 l_0_13_46)))
 (let ((?x50008 (* l_0_13_45 l_0_13_45)))
 (let ((?x50006 (* l_0_13_44 l_0_13_44)))
 (let ((?x49999 (* l_0_13_21 l_0_13_21)))
 (let ((?x49997 (* l_0_13_20 l_0_13_20)))
 (let ((?x49995 (* l_0_13_19 l_0_13_19)))
 (let ((?x49993 (* l_0_13_18 l_0_13_18)))
 (let ((?x50498 (+ (+ (+ (* l_0_13_16 l_0_13_16) (* l_0_13_17 l_0_13_17)) ?x49993) ?x49995)))
 (let ((?x50505 (- (- (- (- (- (+ (+ ?x50498 ?x49997) ?x49999) ?x50006) ?x50008) ?x50010) ?x50012) ?x50014)))
 (= (- ?x50505 ?x50016) 0.0))))))))))))))
(assert
 (let ((?x50059 (* (* 2.0 l_0_13_49) l_0_13_55)))
 (let ((?x50056 (* (* 2.0 l_0_13_48) l_0_13_54)))
 (let ((?x50053 (* (* 2.0 l_0_13_47) l_0_13_53)))
 (let ((?x50050 (* (* 2.0 l_0_13_46) l_0_13_52)))
 (let ((?x50047 (* (* 2.0 l_0_13_45) l_0_13_51)))
 (let ((?x50044 (* (* 2.0 l_0_13_44) l_0_13_50)))
 (let ((?x50036 (* (* 2.0 l_0_13_21) l_0_13_27)))
 (let ((?x50033 (* (* 2.0 l_0_13_20) l_0_13_26)))
 (let ((?x50030 (* (* 2.0 l_0_13_19) l_0_13_25)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x50027 (* ?x49635 l_0_13_24)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x29963 (* ?x49437 l_0_13_23)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x29968 (* ?x49434 l_0_13_22)))
 (let ((?x31107 (- (- (+ (+ (+ (+ (+ ?x29968 ?x29963) ?x50027) ?x50030) ?x50033) ?x50036) ?x50044) ?x50047)))
 (= (- (- (- (- ?x31107 ?x50050) ?x50053) ?x50056) ?x50059) 0.0))))))))))))))))))
(assert
 (let ((?x50105 (* l_0_13_56 l_0_13_56)))
 (let ((?x50103 (* l_0_13_55 l_0_13_55)))
 (let ((?x50101 (* l_0_13_54 l_0_13_54)))
 (let ((?x50099 (* l_0_13_53 l_0_13_53)))
 (let ((?x50097 (* l_0_13_52 l_0_13_52)))
 (let ((?x50095 (* l_0_13_51 l_0_13_51)))
 (let ((?x50093 (* l_0_13_50 l_0_13_50)))
 (let ((?x50091 (* l_0_13_28 l_0_13_28)))
 (let ((?x50089 (* l_0_13_27 l_0_13_27)))
 (let ((?x50087 (* l_0_13_26 l_0_13_26)))
 (let ((?x50085 (* l_0_13_25 l_0_13_25)))
 (let ((?x50083 (* l_0_13_24 l_0_13_24)))
 (let ((?x31166 (+ (+ (+ (* l_0_13_22 l_0_13_22) (* l_0_13_23 l_0_13_23)) ?x50083) ?x50085)))
 (let ((?x31188 (- (- (- (- (+ (+ (+ ?x31166 ?x50087) ?x50089) ?x50091) ?x50093) ?x50095) ?x50097) ?x50099)))
 (= (- (- (- ?x31188 ?x50101) ?x50103) ?x50105) 0.0))))))))))))))))
(assert
 (let ((?x48847 (* l_0_13_29 l_0_13_29)))
 (let ((?x48851 (* l_0_13_1 l_0_13_1)))
 (let ((?x30174 (- ?x48851 ?x48847)))
 (= ?x30174 0.0)))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48876 (* ?x48875 l_0_13_30)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x50142 (* ?x49064 l_0_13_2)))
 (let ((?x31245 (- (+ ?x50142 (* (* 2.0 l_0_13_141) l_0_13_144)) (* (* 2.0 l_0_13_169) l_0_13_172))))
 (= (- ?x31245 ?x48876) 0.0)))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48923 (* ?x48875 l_0_13_32)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x50194 (* ?x49064 l_0_13_4)))
 (= (- ?x50194 ?x48923) 0.0))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48983 (* ?x48875 l_0_13_35)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x30391 (* ?x49064 l_0_13_7)))
 (let ((?x30392 (- ?x30391 ?x48983)))
 (= ?x30392 0.0)))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49039 (* ?x48875 l_0_13_39)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x49065 (* ?x49064 l_0_13_11)))
 (let ((?x50264 (- ?x49065 ?x49039)))
 (= ?x50264 0.0)))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49099 (* ?x48875 l_0_13_44)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x49066 (* ?x49064 l_0_13_16)))
 (= (- ?x49066 ?x49099) 0.0))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49179 (* ?x48875 l_0_13_50)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x30470 (* ?x49064 l_0_13_22)))
 (let ((?x50532 (- (+ (- ?x30470 ?x49179) (* (* 2.0 l_0_13_57) l_0_13_60)) (* (* 2.0 l_0_13_85) l_0_13_88))))
 (= ?x50532 0.0)))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49284 (* ?x48928 l_0_13_33)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49282 (* ?x48925 l_0_13_32)))
 (let ((?x49279 (* 2.0 l_0_13_3)))
 (let ((?x49280 (* ?x49279 l_0_13_5)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49268 (* ?x49267 l_0_13_4)))
 (let ((?x50555 (* l_0_13_174 l_0_13_174)))
 (let ((?x50553 (* l_0_13_173 l_0_13_173)))
 (let ((?x50551 (* l_0_13_172 l_0_13_172)))
 (let ((?x50549 (* l_0_13_146 l_0_13_146)))
 (let ((?x50550 (+ (+ (* l_0_13_144 l_0_13_144) (* l_0_13_145 l_0_13_145)) ?x50549)))
 (let ((?x50560 (- (- (+ (+ (- (- (- ?x50550 ?x50551) ?x50553) ?x50555) ?x49268) ?x49280) ?x49282) ?x49284)))
 (= ?x50560 0.0))))))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49359 (* ?x48928 l_0_13_36)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49357 (* ?x48925 l_0_13_35)))
 (let ((?x49279 (* 2.0 l_0_13_3)))
 (let ((?x49355 (* ?x49279 l_0_13_8)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49345 (* ?x49267 l_0_13_7)))
 (let ((?x50577 (+ (* (* 2.0 l_0_13_144) l_0_13_147) (* (* 2.0 l_0_13_145) l_0_13_148))))
 (let ((?x50581 (- (+ ?x50577 (* (* 2.0 l_0_13_146) l_0_13_149)) (* (* 2.0 l_0_13_172) l_0_13_175))))
 (let ((?x50585 (- (- ?x50581 (* (* 2.0 l_0_13_173) l_0_13_176)) (* (* 2.0 l_0_13_174) l_0_13_177))))
 (= (- (- (+ (+ ?x50585 ?x49345) ?x49355) ?x49357) ?x49359) 0.0)))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49459 (* ?x48928 l_0_13_45)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49456 (* ?x48925 l_0_13_44)))
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48923 (* ?x48875 l_0_13_32)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49438 (* ?x49437 l_0_13_3)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49435 (* ?x49434 l_0_13_2)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x50194 (* ?x49064 l_0_13_4)))
 (let ((?x50613 (+ (+ ?x50194 (* (* 2.0 l_0_13_144) l_0_13_156)) (* (* 2.0 l_0_13_145) l_0_13_157))))
 (let ((?x50619 (- (+ (+ (+ ?x50613 (* (* 2.0 l_0_13_146) l_0_13_158)) ?x49435) ?x49438) (* (* 2.0 l_0_13_172) l_0_13_184))))
 (let ((?x50623 (- (- ?x50619 (* (* 2.0 l_0_13_173) l_0_13_185)) (* (* 2.0 l_0_13_174) l_0_13_186))))
 (= (- (- (- ?x50623 ?x48923) ?x49456) ?x49459) 0.0)))))))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49523 (* ?x48928 l_0_13_51)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49521 (* ?x48925 l_0_13_50)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49519 (* ?x49518 l_0_13_3)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49506 (* ?x49267 l_0_13_22)))
 (let ((?x31330 (+ (* (* 2.0 l_0_13_144) l_0_13_162) (* (* 2.0 l_0_13_145) l_0_13_163))))
 (let ((?x31349 (- (+ ?x31330 (* (* 2.0 l_0_13_146) l_0_13_164)) (* (* 2.0 l_0_13_172) l_0_13_190))))
 (let ((?x50653 (- (- ?x31349 (* (* 2.0 l_0_13_173) l_0_13_191)) (* (* 2.0 l_0_13_174) l_0_13_192))))
 (let ((?x50659 (+ (- (- (+ (+ ?x50653 ?x49506) ?x49519) ?x49521) ?x49523) (* (* 2.0 l_0_13_58) l_0_13_60))))
 (let ((?x50663 (- (+ ?x50659 (* (* 2.0 l_0_13_59) l_0_13_61)) (* (* 2.0 l_0_13_86) l_0_13_88))))
 (= (- ?x50663 (* (* 2.0 l_0_13_87) l_0_13_89)) 0.0)))))))))))))))
(assert
 (let ((?x49559 (* l_0_13_6 l_0_13_6)))
 (let ((?x49557 (* l_0_13_5 l_0_13_5)))
 (let ((?x49555 (* l_0_13_4 l_0_13_4)))
 (let ((?x49553 (* l_0_13_34 l_0_13_34)))
 (let ((?x50409 (- (- (* (- l_0_13_32) l_0_13_32) (* l_0_13_33 l_0_13_33)) ?x49553)))
 (= (+ (+ (+ ?x50409 ?x49555) ?x49557) ?x49559) 0.0)))))))
(assert
 (let ((?x49583 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x49580 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x49577 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49574 (* ?x49573 l_0_13_37)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49571 (* ?x49570 l_0_13_36)))
 (let ((?x50421 (+ (+ (- (- (* (* (- 2.0) l_0_13_32) l_0_13_35) ?x49571) ?x49574) ?x49577) ?x49580)))
 (= (+ ?x50421 ?x49583) 0.0))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49614 (* ?x49573 l_0_13_41)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49612 (* ?x49570 l_0_13_40)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49610 (* ?x49568 l_0_13_39)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49608 (* ?x49607 l_0_13_6)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49605 (* ?x48902 l_0_13_5)))
 (let ((?x49624 (+ (+ (* (* 2.0 l_0_13_11) l_0_13_4) ?x49605) ?x49608)))
 (= (- (- (- ?x49624 ?x49610) ?x49612) ?x49614) 0.0)))))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49645 (* ?x49573 l_0_13_46)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49642 (* ?x49570 l_0_13_45)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49639 (* ?x49568 l_0_13_44)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x49636 (* ?x49635 l_0_13_6)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49633 (* ?x49437 l_0_13_5)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49625 (* ?x49434 l_0_13_4)))
 (= (- (- (- (+ (+ ?x49625 ?x49633) ?x49636) ?x49639) ?x49642) ?x49645) 0.0))))))))))))))
(assert
 (let ((?x50713 (* l_0_13_90 l_0_13_90)))
 (let ((?x50711 (* l_0_13_89 l_0_13_89)))
 (let ((?x50709 (* l_0_13_88 l_0_13_88)))
 (let ((?x50707 (* l_0_13_62 l_0_13_62)))
 (let ((?x50705 (* l_0_13_61 l_0_13_61)))
 (let ((?x50703 (* l_0_13_60 l_0_13_60)))
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49672 (* ?x49573 l_0_13_52)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49670 (* ?x49570 l_0_13_51)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49668 (* ?x49568 l_0_13_50)))
 (let ((?x49665 (* 2.0 l_0_13_24)))
 (let ((?x49666 (* ?x49665 l_0_13_6)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49663 (* ?x49518 l_0_13_5)))
 (let ((?x50432 (- (- (+ (+ (* (* 2.0 l_0_13_22) l_0_13_4) ?x49663) ?x49666) ?x49668) ?x49670)))
 (let ((?x50433 (- ?x50432 ?x49672)))
 (= (- (- (- (+ (+ (+ ?x50433 ?x50703) ?x50705) ?x50707) ?x50709) ?x50711) ?x50713) 0.0))))))))))))))))))))
(assert
 (let ((?x49704 (* l_0_13_9 l_0_13_9)))
 (let ((?x49702 (* l_0_13_8 l_0_13_8)))
 (let ((?x49700 (* l_0_13_7 l_0_13_7)))
 (let ((?x49698 (* l_0_13_38 l_0_13_38)))
 (let ((?x49696 (* l_0_13_37 l_0_13_37)))
 (let ((?x49694 (* l_0_13_36 l_0_13_36)))
 (let ((?x30914 (- (- (- (* l_0_13_10 l_0_13_10) (* l_0_13_35 l_0_13_35)) ?x49694) ?x49696)))
 (= (+ (+ (+ (- ?x30914 ?x49698) ?x49700) ?x49702) ?x49704) 0.0)))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49734 (* ?x49733 l_0_13_42)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49731 (* ?x49730 l_0_13_41)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49728 (* ?x49727 l_0_13_40)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49725 (* ?x49724 l_0_13_39)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49722 (* ?x49607 l_0_13_9)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49720 (* ?x48902 l_0_13_8)))
 (let ((?x48899 (* 2.0 l_0_13_11)))
 (let ((?x49718 (* ?x48899 l_0_13_7)))
 (let ((?x49754 (* 2.0 l_0_13_10)))
 (let ((?x49755 (* ?x49754 l_0_13_14)))
 (let ((?x30921 (- (- (- (- (+ (+ (+ ?x49755 ?x49718) ?x49720) ?x49722) ?x49725) ?x49728) ?x49731) ?x49734)))
 (= ?x30921 0.0)))))))))))))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49777 (* ?x49733 l_0_13_47)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49774 (* ?x49730 l_0_13_46)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49771 (* ?x49727 l_0_13_45)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49768 (* ?x49724 l_0_13_44)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x49765 (* ?x49635 l_0_13_9)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49763 (* ?x49437 l_0_13_8)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49761 (* ?x49434 l_0_13_7)))
 (let ((?x49754 (* 2.0 l_0_13_10)))
 (let ((?x49756 (* ?x49754 l_0_13_19)))
 (let ((?x50450 (- (- (- (- (+ (+ (+ ?x49756 ?x49761) ?x49763) ?x49765) ?x49768) ?x49771) ?x49774) ?x49777)))
 (= ?x50450 0.0)))))))))))))))))))
(assert
 (let ((?x49865 (* l_0_13_43 l_0_13_43)))
 (let ((?x49863 (* l_0_13_42 l_0_13_42)))
 (let ((?x49861 (* l_0_13_41 l_0_13_41)))
 (let ((?x49859 (* l_0_13_40 l_0_13_40)))
 (let ((?x49857 (* l_0_13_39 l_0_13_39)))
 (let ((?x49855 (* l_0_13_15 l_0_13_15)))
 (let ((?x49853 (* l_0_13_14 l_0_13_14)))
 (let ((?x49851 (* l_0_13_13 l_0_13_13)))
 (let ((?x30999 (+ (+ (+ (* l_0_13_11 l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x49851) ?x49853)))
 (= (- (- (- (- (- (+ ?x30999 ?x49855) ?x49857) ?x49859) ?x49861) ?x49863) ?x49865) 0.0)))))))))))
(assert
 (let ((?x49911 (* 2.0 l_0_13_43)))
 (let ((?x49912 (* ?x49911 l_0_13_48)))
 (let ((?x49907 (* 2.0 l_0_13_42)))
 (let ((?x49908 (* ?x49907 l_0_13_47)))
 (let ((?x49903 (* 2.0 l_0_13_41)))
 (let ((?x49904 (* ?x49903 l_0_13_46)))
 (let ((?x49899 (* 2.0 l_0_13_40)))
 (let ((?x49900 (* ?x49899 l_0_13_45)))
 (let ((?x49895 (* 2.0 l_0_13_39)))
 (let ((?x49896 (* ?x49895 l_0_13_44)))
 (let ((?x49891 (* 2.0 l_0_13_15)))
 (let ((?x49892 (* ?x49891 l_0_13_20)))
 (let ((?x49887 (* 2.0 l_0_13_14)))
 (let ((?x49888 (* ?x49887 l_0_13_19)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49884 (* ?x49607 l_0_13_18)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49881 (* ?x48902 l_0_13_17)))
 (let ((?x49980 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_16) ?x49881) ?x49884) ?x49888) ?x49892)))
 (= (- (- (- (- (- ?x49980 ?x49896) ?x49900) ?x49904) ?x49908) ?x49912) 0.0)))))))))))))))))))))
(assert
 (let ((?x49911 (* 2.0 l_0_13_43)))
 (let ((?x49966 (* ?x49911 l_0_13_54)))
 (let ((?x49907 (* 2.0 l_0_13_42)))
 (let ((?x49964 (* ?x49907 l_0_13_53)))
 (let ((?x49903 (* 2.0 l_0_13_41)))
 (let ((?x49962 (* ?x49903 l_0_13_52)))
 (let ((?x49899 (* 2.0 l_0_13_40)))
 (let ((?x49960 (* ?x49899 l_0_13_51)))
 (let ((?x49895 (* 2.0 l_0_13_39)))
 (let ((?x49958 (* ?x49895 l_0_13_50)))
 (let ((?x49891 (* 2.0 l_0_13_15)))
 (let ((?x49956 (* ?x49891 l_0_13_26)))
 (let ((?x49887 (* 2.0 l_0_13_14)))
 (let ((?x49954 (* ?x49887 l_0_13_25)))
 (let ((?x49607 (* 2.0 l_0_13_13)))
 (let ((?x49952 (* ?x49607 l_0_13_24)))
 (let ((?x48902 (* 2.0 l_0_13_12)))
 (let ((?x49950 (* ?x48902 l_0_13_23)))
 (let ((?x29967 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_22) ?x49950) ?x49952) ?x49954) ?x49956)))
 (let ((?x50485 (- (- (- (- (- ?x29967 ?x49958) ?x49960) ?x49962) ?x49964) ?x49966)))
 (let ((?x50730 (+ (+ ?x50485 (* (* 2.0 l_0_13_60) l_0_13_67)) (* (* 2.0 l_0_13_61) l_0_13_68))))
 (let ((?x50734 (- (+ ?x50730 (* (* 2.0 l_0_13_62) l_0_13_69)) (* (* 2.0 l_0_13_88) l_0_13_95))))
 (let ((?x50738 (- (- ?x50734 (* (* 2.0 l_0_13_89) l_0_13_96)) (* (* 2.0 l_0_13_90) l_0_13_97))))
 (= ?x50738 0.0)))))))))))))))))))))))))
(assert
 (let ((?x50016 (* l_0_13_49 l_0_13_49)))
 (let ((?x50014 (* l_0_13_48 l_0_13_48)))
 (let ((?x50012 (* l_0_13_47 l_0_13_47)))
 (let ((?x50010 (* l_0_13_46 l_0_13_46)))
 (let ((?x50008 (* l_0_13_45 l_0_13_45)))
 (let ((?x50006 (* l_0_13_44 l_0_13_44)))
 (let ((?x49999 (* l_0_13_21 l_0_13_21)))
 (let ((?x49997 (* l_0_13_20 l_0_13_20)))
 (let ((?x49995 (* l_0_13_19 l_0_13_19)))
 (let ((?x49993 (* l_0_13_18 l_0_13_18)))
 (let ((?x50498 (+ (+ (+ (* l_0_13_16 l_0_13_16) (* l_0_13_17 l_0_13_17)) ?x49993) ?x49995)))
 (let ((?x50505 (- (- (- (- (- (+ (+ ?x50498 ?x49997) ?x49999) ?x50006) ?x50008) ?x50010) ?x50012) ?x50014)))
 (= (- ?x50505 ?x50016) 0.0))))))))))))))
(assert
 (let ((?x50059 (* (* 2.0 l_0_13_49) l_0_13_55)))
 (let ((?x50056 (* (* 2.0 l_0_13_48) l_0_13_54)))
 (let ((?x50053 (* (* 2.0 l_0_13_47) l_0_13_53)))
 (let ((?x50050 (* (* 2.0 l_0_13_46) l_0_13_52)))
 (let ((?x50047 (* (* 2.0 l_0_13_45) l_0_13_51)))
 (let ((?x50044 (* (* 2.0 l_0_13_44) l_0_13_50)))
 (let ((?x50036 (* (* 2.0 l_0_13_21) l_0_13_27)))
 (let ((?x50033 (* (* 2.0 l_0_13_20) l_0_13_26)))
 (let ((?x50030 (* (* 2.0 l_0_13_19) l_0_13_25)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x50027 (* ?x49635 l_0_13_24)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x29963 (* ?x49437 l_0_13_23)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x29968 (* ?x49434 l_0_13_22)))
 (let ((?x50769 (- (* (* (- 2.0) l_0_13_100) l_0_13_88) (* (* 2.0 l_0_13_101) l_0_13_89))))
 (let ((?x50774 (+ (+ (+ (- ?x50769 (* (* 2.0 l_0_13_102) l_0_13_90)) ?x29968) ?x29963) ?x50027)))
 (let ((?x50781 (- (- (- (- (+ (+ (+ ?x50774 ?x50030) ?x50033) ?x50036) ?x50044) ?x50047) ?x50050) ?x50053)))
 (let ((?x50787 (+ (+ (- (- ?x50781 ?x50056) ?x50059) (* (* 2.0 l_0_13_60) l_0_13_72)) (* (* 2.0 l_0_13_61) l_0_13_73))))
 (= (+ ?x50787 (* (* 2.0 l_0_13_62) l_0_13_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x50105 (* l_0_13_56 l_0_13_56)))
 (let ((?x50103 (* l_0_13_55 l_0_13_55)))
 (let ((?x50101 (* l_0_13_54 l_0_13_54)))
 (let ((?x50099 (* l_0_13_53 l_0_13_53)))
 (let ((?x50097 (* l_0_13_52 l_0_13_52)))
 (let ((?x50095 (* l_0_13_51 l_0_13_51)))
 (let ((?x50093 (* l_0_13_50 l_0_13_50)))
 (let ((?x50091 (* l_0_13_28 l_0_13_28)))
 (let ((?x50089 (* l_0_13_27 l_0_13_27)))
 (let ((?x50087 (* l_0_13_26 l_0_13_26)))
 (let ((?x50085 (* l_0_13_25 l_0_13_25)))
 (let ((?x50083 (* l_0_13_24 l_0_13_24)))
 (let ((?x50081 (* l_0_13_23 l_0_13_23)))
 (let ((?x50109 (* l_0_13_22 l_0_13_22)))
 (let ((?x50829 (- (* (* (- 2.0) l_0_13_106) l_0_13_88) (* (* 2.0 l_0_13_107) l_0_13_89))))
 (let ((?x50834 (+ (+ (+ (- ?x50829 (* (* 2.0 l_0_13_108) l_0_13_90)) ?x50109) ?x50081) ?x50083)))
 (let ((?x50841 (- (- (- (+ (+ (+ (+ ?x50834 ?x50085) ?x50087) ?x50089) ?x50091) ?x50093) ?x50095) ?x50097)))
 (let ((?x50847 (+ (- (- (- (- ?x50841 ?x50099) ?x50101) ?x50103) ?x50105) (* (* 2.0 l_0_13_60) l_0_13_78))))
 (let ((?x50851 (+ (+ ?x50847 (* (* 2.0 l_0_13_61) l_0_13_79)) (* (* 2.0 l_0_13_62) l_0_13_80))))
 (= ?x50851 0.0)))))))))))))))))))))
(assert
 (let ((?x48847 (* l_0_13_29 l_0_13_29)))
 (let ((?x50893 (- (+ (* l_0_13_1 l_0_13_1) (* (* 2.0 l_0_13_141) l_0_13_156)) (* (* 2.0 l_0_13_169) l_0_13_184))))
 (= (- ?x50893 ?x48847) 0.0))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48876 (* ?x48875 l_0_13_30)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x50142 (* ?x49064 l_0_13_2)))
 (let ((?x50913 (+ (- ?x50142 (* (* 2.0 l_0_13_113) l_0_13_128)) (* (* 2.0 l_0_13_142) l_0_13_156))))
 (let ((?x50917 (- (+ ?x50913 (* (* 2.0 l_0_13_143) l_0_13_157)) (* (* 2.0 l_0_13_170) l_0_13_184))))
 (let ((?x50921 (- (- ?x50917 (* (* 2.0 l_0_13_171) l_0_13_185)) (* (* 2.0 l_0_13_197) l_0_13_212))))
 (= (- ?x50921 ?x48876) 0.0)))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x48983 (* ?x48875 l_0_13_35)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x30391 (* ?x49064 l_0_13_7)))
 (let ((?x50962 (+ (+ ?x30391 (* (* 2.0 l_0_13_147) l_0_13_156)) (* (* 2.0 l_0_13_148) l_0_13_157))))
 (let ((?x50966 (+ (+ ?x50962 (* (* 2.0 l_0_13_149) l_0_13_158)) (* (* 2.0 l_0_13_150) l_0_13_159))))
 (let ((?x50970 (- (- ?x50966 (* (* 2.0 l_0_13_175) l_0_13_184)) (* (* 2.0 l_0_13_176) l_0_13_185))))
 (let ((?x50974 (- (- ?x50970 (* (* 2.0 l_0_13_177) l_0_13_186)) (* (* 2.0 l_0_13_178) l_0_13_187))))
 (= (- ?x50974 ?x48983) 0.0))))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49099 (* ?x48875 l_0_13_44)))
 (let ((?x51040 (* l_0_13_189 l_0_13_189)))
 (let ((?x51038 (* l_0_13_188 l_0_13_188)))
 (let ((?x51036 (* l_0_13_187 l_0_13_187)))
 (let ((?x51034 (* l_0_13_186 l_0_13_186)))
 (let ((?x51032 (* l_0_13_185 l_0_13_185)))
 (let ((?x51030 (* l_0_13_184 l_0_13_184)))
 (let ((?x51028 (* l_0_13_161 l_0_13_161)))
 (let ((?x51026 (* l_0_13_160 l_0_13_160)))
 (let ((?x51024 (* l_0_13_159 l_0_13_159)))
 (let ((?x51022 (* l_0_13_158 l_0_13_158)))
 (let ((?x51020 (* l_0_13_157 l_0_13_157)))
 (let ((?x51021 (+ (+ (* (* 2.0 l_0_13_1) l_0_13_16) (* l_0_13_156 l_0_13_156)) ?x51020)))
 (let ((?x51035 (- (- (- (+ (+ (+ (+ ?x51021 ?x51022) ?x51024) ?x51026) ?x51028) ?x51030) ?x51032) ?x51034)))
 (= (- (- (- (- ?x51035 ?x51036) ?x51038) ?x51040) ?x49099) 0.0)))))))))))))))))
(assert
 (let ((?x48875 (* 2.0 l_0_13_29)))
 (let ((?x49179 (* ?x48875 l_0_13_50)))
 (let ((?x49064 (* 2.0 l_0_13_1)))
 (let ((?x30470 (* ?x49064 l_0_13_22)))
 (let ((?x51069 (- (- ?x30470 (* (* 2.0 l_0_13_100) l_0_13_86)) (* (* 2.0 l_0_13_101) l_0_13_87))))
 (let ((?x51075 (+ (+ ?x51069 (* (* 2.0 l_0_13_156) l_0_13_162)) (* (* 2.0 l_0_13_157) l_0_13_163))))
 (let ((?x51081 (+ (+ ?x51075 (* (* 2.0 l_0_13_158) l_0_13_164)) (* (* 2.0 l_0_13_159) l_0_13_165))))
 (let ((?x51087 (+ (+ ?x51081 (* (* 2.0 l_0_13_160) l_0_13_166)) (* (* 2.0 l_0_13_161) l_0_13_167))))
 (let ((?x51093 (- (- ?x51087 (* (* 2.0 l_0_13_184) l_0_13_190)) (* (* 2.0 l_0_13_185) l_0_13_191))))
 (let ((?x51099 (- (- ?x51093 (* (* 2.0 l_0_13_186) l_0_13_192)) (* (* 2.0 l_0_13_187) l_0_13_193))))
 (let ((?x51105 (- (- ?x51099 (* (* 2.0 l_0_13_188) l_0_13_194)) (* (* 2.0 l_0_13_189) l_0_13_195))))
 (let ((?x51110 (+ (+ (- ?x51105 ?x49179) (* (* 2.0 l_0_13_58) l_0_13_72)) (* (* 2.0 l_0_13_59) l_0_13_73))))
 (= ?x51110 0.0))))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49284 (* ?x48928 l_0_13_33)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49282 (* ?x48925 l_0_13_32)))
 (let ((?x49279 (* 2.0 l_0_13_3)))
 (let ((?x49280 (* ?x49279 l_0_13_5)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49268 (* ?x49267 l_0_13_4)))
 (let ((?x51183 (- (* (* (- 2.0) l_0_13_116) l_0_13_128) (* (* 2.0 l_0_13_117) l_0_13_129))))
 (let ((?x51188 (- (+ (- ?x51183 (* (* 2.0 l_0_13_118) l_0_13_130)) ?x49268) (* (* 2.0 l_0_13_200) l_0_13_212))))
 (let ((?x51192 (- (- ?x51188 (* (* 2.0 l_0_13_201) l_0_13_213)) (* (* 2.0 l_0_13_202) l_0_13_214))))
 (= (- (- (+ ?x51192 ?x49280) ?x49282) ?x49284) 0.0)))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49359 (* ?x48928 l_0_13_36)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49357 (* ?x48925 l_0_13_35)))
 (let ((?x49279 (* 2.0 l_0_13_3)))
 (let ((?x49355 (* ?x49279 l_0_13_8)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49345 (* ?x49267 l_0_13_7)))
 (let ((?x51208 (- (* (* (- 2.0) l_0_13_119) l_0_13_128) (* (* 2.0 l_0_13_120) l_0_13_129))))
 (let ((?x51212 (- (- ?x51208 (* (* 2.0 l_0_13_121) l_0_13_130)) (* (* 2.0 l_0_13_122) l_0_13_131))))
 (let ((?x51217 (- (- (+ ?x51212 ?x49345) (* (* 2.0 l_0_13_203) l_0_13_212)) (* (* 2.0 l_0_13_204) l_0_13_213))))
 (let ((?x51221 (- (- ?x51217 (* (* 2.0 l_0_13_205) l_0_13_214)) (* (* 2.0 l_0_13_206) l_0_13_215))))
 (= (- (- (+ ?x51221 ?x49355) ?x49357) ?x49359) 0.0))))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49459 (* ?x48928 l_0_13_45)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49456 (* ?x48925 l_0_13_44)))
 (let ((?x51291 (* l_0_13_217 l_0_13_217)))
 (let ((?x51289 (* l_0_13_216 l_0_13_216)))
 (let ((?x51287 (* l_0_13_215 l_0_13_215)))
 (let ((?x51285 (* l_0_13_214 l_0_13_214)))
 (let ((?x51283 (* l_0_13_213 l_0_13_213)))
 (let ((?x51281 (* l_0_13_212 l_0_13_212)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49438 (* ?x49437 l_0_13_3)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49435 (* ?x49434 l_0_13_2)))
 (let ((?x51266 (- (* (* (- 1.0) l_0_13_128) l_0_13_128) (* (* 1.0 l_0_13_129) l_0_13_129))))
 (let ((?x51272 (- (- ?x51266 (* (* 1.0 l_0_13_130) l_0_13_130)) (* (* 1.0 l_0_13_131) l_0_13_131))))
 (let ((?x51278 (- (- ?x51272 (* (* 1.0 l_0_13_132) l_0_13_132)) (* (* 1.0 l_0_13_133) l_0_13_133))))
 (let ((?x51290 (- (- (- (- (- (+ (+ ?x51278 ?x49435) ?x49438) ?x51281) ?x51283) ?x51285) ?x51287) ?x51289)))
 (= (- (- (- ?x51290 ?x51291) ?x49456) ?x49459) 0.0))))))))))))))))))))
(assert
 (let ((?x48928 (* 2.0 l_0_13_31)))
 (let ((?x49523 (* ?x48928 l_0_13_51)))
 (let ((?x48925 (* 2.0 l_0_13_30)))
 (let ((?x49521 (* ?x48925 l_0_13_50)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49519 (* ?x49518 l_0_13_3)))
 (let ((?x49267 (* 2.0 l_0_13_2)))
 (let ((?x49506 (* ?x49267 l_0_13_22)))
 (let ((?x51330 (- (* (* (- 2.0) l_0_13_128) l_0_13_134) (* (* 2.0 l_0_13_129) l_0_13_135))))
 (let ((?x51336 (- (- ?x51330 (* (* 2.0 l_0_13_130) l_0_13_136)) (* (* 2.0 l_0_13_131) l_0_13_137))))
 (let ((?x51342 (- (- ?x51336 (* (* 2.0 l_0_13_132) l_0_13_138)) (* (* 2.0 l_0_13_133) l_0_13_139))))
 (let ((?x51349 (- (- (+ ?x51342 ?x49506) (* (* 2.0 l_0_13_212) l_0_13_218)) (* (* 2.0 l_0_13_213) l_0_13_219))))
 (let ((?x51355 (- (- ?x51349 (* (* 2.0 l_0_13_214) l_0_13_220)) (* (* 2.0 l_0_13_215) l_0_13_221))))
 (let ((?x51361 (- (- ?x51355 (* (* 2.0 l_0_13_216) l_0_13_222)) (* (* 2.0 l_0_13_217) l_0_13_223))))
 (= (- (- (+ ?x51361 ?x49519) ?x49521) ?x49523) 0.0))))))))))))))))
(assert
 (let ((?x49559 (* l_0_13_6 l_0_13_6)))
 (let ((?x49557 (* l_0_13_5 l_0_13_5)))
 (let ((?x49555 (* l_0_13_4 l_0_13_4)))
 (let ((?x49553 (* l_0_13_34 l_0_13_34)))
 (let ((?x50409 (- (- (* (- l_0_13_32) l_0_13_32) (* l_0_13_33 l_0_13_33)) ?x49553)))
 (= (+ (+ (+ ?x50409 ?x49555) ?x49557) ?x49559) 0.0)))))))
(assert
 (let ((?x49583 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x49580 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x49577 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49574 (* ?x49573 l_0_13_37)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49571 (* ?x49570 l_0_13_36)))
 (let ((?x50421 (+ (+ (- (- (* (* (- 2.0) l_0_13_32) l_0_13_35) ?x49571) ?x49574) ?x49577) ?x49580)))
 (= (+ ?x50421 ?x49583) 0.0))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49645 (* ?x49573 l_0_13_46)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49642 (* ?x49570 l_0_13_45)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49639 (* ?x49568 l_0_13_44)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x49636 (* ?x49635 l_0_13_6)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49633 (* ?x49437 l_0_13_5)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49625 (* ?x49434 l_0_13_4)))
 (= (- (- (- (+ (+ ?x49625 ?x49633) ?x49636) ?x49639) ?x49642) ?x49645) 0.0))))))))))))))
(assert
 (let ((?x49573 (* 2.0 l_0_13_34)))
 (let ((?x49672 (* ?x49573 l_0_13_52)))
 (let ((?x49570 (* 2.0 l_0_13_33)))
 (let ((?x49670 (* ?x49570 l_0_13_51)))
 (let ((?x49568 (* 2.0 l_0_13_32)))
 (let ((?x49668 (* ?x49568 l_0_13_50)))
 (let ((?x49665 (* 2.0 l_0_13_24)))
 (let ((?x49666 (* ?x49665 l_0_13_6)))
 (let ((?x49518 (* 2.0 l_0_13_23)))
 (let ((?x49663 (* ?x49518 l_0_13_5)))
 (let ((?x50432 (- (- (+ (+ (* (* 2.0 l_0_13_22) l_0_13_4) ?x49663) ?x49666) ?x49668) ?x49670)))
 (let ((?x50433 (- ?x50432 ?x49672)))
 (= ?x50433 0.0))))))))))))))
(assert
 (let ((?x49704 (* l_0_13_9 l_0_13_9)))
 (let ((?x49702 (* l_0_13_8 l_0_13_8)))
 (let ((?x49700 (* l_0_13_7 l_0_13_7)))
 (let ((?x49698 (* l_0_13_38 l_0_13_38)))
 (let ((?x49696 (* l_0_13_37 l_0_13_37)))
 (let ((?x49694 (* l_0_13_36 l_0_13_36)))
 (let ((?x30914 (- (- (- (* l_0_13_10 l_0_13_10) (* l_0_13_35 l_0_13_35)) ?x49694) ?x49696)))
 (= (+ (+ (+ (- ?x30914 ?x49698) ?x49700) ?x49702) ?x49704) 0.0)))))))))
(assert
 (let ((?x49733 (* 2.0 l_0_13_38)))
 (let ((?x49777 (* ?x49733 l_0_13_47)))
 (let ((?x49730 (* 2.0 l_0_13_37)))
 (let ((?x49774 (* ?x49730 l_0_13_46)))
 (let ((?x49727 (* 2.0 l_0_13_36)))
 (let ((?x49771 (* ?x49727 l_0_13_45)))
 (let ((?x49724 (* 2.0 l_0_13_35)))
 (let ((?x49768 (* ?x49724 l_0_13_44)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x49765 (* ?x49635 l_0_13_9)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x49763 (* ?x49437 l_0_13_8)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x49761 (* ?x49434 l_0_13_7)))
 (let ((?x49754 (* 2.0 l_0_13_10)))
 (let ((?x49756 (* ?x49754 l_0_13_19)))
 (let ((?x50450 (- (- (- (- (+ (+ (+ ?x49756 ?x49761) ?x49763) ?x49765) ?x49768) ?x49771) ?x49774) ?x49777)))
 (= ?x50450 0.0)))))))))))))))))))
(assert
 (let ((?x50016 (* l_0_13_49 l_0_13_49)))
 (let ((?x50014 (* l_0_13_48 l_0_13_48)))
 (let ((?x50012 (* l_0_13_47 l_0_13_47)))
 (let ((?x50010 (* l_0_13_46 l_0_13_46)))
 (let ((?x50008 (* l_0_13_45 l_0_13_45)))
 (let ((?x50006 (* l_0_13_44 l_0_13_44)))
 (let ((?x49999 (* l_0_13_21 l_0_13_21)))
 (let ((?x49997 (* l_0_13_20 l_0_13_20)))
 (let ((?x49995 (* l_0_13_19 l_0_13_19)))
 (let ((?x49993 (* l_0_13_18 l_0_13_18)))
 (let ((?x50498 (+ (+ (+ (* l_0_13_16 l_0_13_16) (* l_0_13_17 l_0_13_17)) ?x49993) ?x49995)))
 (let ((?x50505 (- (- (- (- (- (+ (+ ?x50498 ?x49997) ?x49999) ?x50006) ?x50008) ?x50010) ?x50012) ?x50014)))
 (= (- ?x50505 ?x50016) 0.0))))))))))))))
(assert
 (let ((?x50059 (* (* 2.0 l_0_13_49) l_0_13_55)))
 (let ((?x50056 (* (* 2.0 l_0_13_48) l_0_13_54)))
 (let ((?x50053 (* (* 2.0 l_0_13_47) l_0_13_53)))
 (let ((?x50050 (* (* 2.0 l_0_13_46) l_0_13_52)))
 (let ((?x50047 (* (* 2.0 l_0_13_45) l_0_13_51)))
 (let ((?x50044 (* (* 2.0 l_0_13_44) l_0_13_50)))
 (let ((?x50036 (* (* 2.0 l_0_13_21) l_0_13_27)))
 (let ((?x50033 (* (* 2.0 l_0_13_20) l_0_13_26)))
 (let ((?x50030 (* (* 2.0 l_0_13_19) l_0_13_25)))
 (let ((?x49635 (* 2.0 l_0_13_18)))
 (let ((?x50027 (* ?x49635 l_0_13_24)))
 (let ((?x49437 (* 2.0 l_0_13_17)))
 (let ((?x29963 (* ?x49437 l_0_13_23)))
 (let ((?x49434 (* 2.0 l_0_13_16)))
 (let ((?x29968 (* ?x49434 l_0_13_22)))
 (let ((?x31107 (- (- (+ (+ (+ (+ (+ ?x29968 ?x29963) ?x50027) ?x50030) ?x50033) ?x50036) ?x50044) ?x50047)))
 (= (- (- (- (- ?x31107 ?x50050) ?x50053) ?x50056) ?x50059) 0.0))))))))))))))))))
(assert
 (let ((?x50105 (* l_0_13_56 l_0_13_56)))
 (let ((?x50103 (* l_0_13_55 l_0_13_55)))
 (let ((?x50101 (* l_0_13_54 l_0_13_54)))
 (let ((?x50099 (* l_0_13_53 l_0_13_53)))
 (let ((?x50097 (* l_0_13_52 l_0_13_52)))
 (let ((?x50095 (* l_0_13_51 l_0_13_51)))
 (let ((?x50093 (* l_0_13_50 l_0_13_50)))
 (let ((?x50091 (* l_0_13_28 l_0_13_28)))
 (let ((?x50089 (* l_0_13_27 l_0_13_27)))
 (let ((?x50087 (* l_0_13_26 l_0_13_26)))
 (let ((?x50085 (* l_0_13_25 l_0_13_25)))
 (let ((?x50083 (* l_0_13_24 l_0_13_24)))
 (let ((?x31166 (+ (+ (+ (* l_0_13_22 l_0_13_22) (* l_0_13_23 l_0_13_23)) ?x50083) ?x50085)))
 (let ((?x31188 (- (- (- (- (+ (+ (+ ?x31166 ?x50087) ?x50089) ?x50091) ?x50093) ?x50095) ?x50097) ?x50099)))
 (= (- (- (- ?x31188 ?x50101) ?x50103) ?x50105) 0.0))))))))))))))))
(assert
 (= (- (* l_0_13_57 l_0_13_57) (* l_0_13_85 l_0_13_85)) 0.0))
(assert
 (let ((?x51402 (- (* (* 2.0 l_0_13_141) l_0_13_162) (* (* 2.0 l_0_13_169) l_0_13_190))))
 (let ((?x51406 (- (+ ?x51402 (* (* 2.0 l_0_13_57) l_0_13_58)) (* (* 2.0 l_0_13_85) l_0_13_86))))
 (= ?x51406 0.0))))
(assert
 (let ((?x51428 (- (* (* 2.0 l_0_13_57) l_0_13_67) (* (* 2.0 l_0_13_85) l_0_13_95))))
 (= ?x51428 0.0)))
(assert
 (let ((?x51441 (+ (* (* (- 2.0) l_0_13_100) l_0_13_85) (* (* 2.0 l_0_13_57) l_0_13_72))))
 (= ?x51441 0.0)))
(assert
 (let ((?x51447 (+ (* (* (- 2.0) l_0_13_106) l_0_13_85) (* (* 2.0 l_0_13_57) l_0_13_78))))
 (= ?x51447 0.0)))
(assert
 (let ((?x51476 (* l_0_13_87 l_0_13_87)))
 (let ((?x51474 (* l_0_13_86 l_0_13_86)))
 (let ((?x51472 (* l_0_13_59 l_0_13_59)))
 (let ((?x51470 (* l_0_13_58 l_0_13_58)))
 (let ((?x51457 (+ (* (* (- 2.0) l_0_13_113) l_0_13_134) (* (* 2.0 l_0_13_142) l_0_13_162))))
 (let ((?x51465 (- (+ ?x51457 (* (* 2.0 l_0_13_143) l_0_13_163)) (* (* 2.0 l_0_13_170) l_0_13_190))))
 (let ((?x51469 (- (- ?x51465 (* (* 2.0 l_0_13_171) l_0_13_191)) (* (* 2.0 l_0_13_197) l_0_13_218))))
 (= (- (- (+ (+ ?x51469 ?x51470) ?x51472) ?x51474) ?x51476) 0.0)))))))))
(assert
 (let ((?x51538 (* l_0_13_196 l_0_13_196)))
 (let ((?x51536 (* l_0_13_195 l_0_13_195)))
 (let ((?x51534 (* l_0_13_194 l_0_13_194)))
 (let ((?x51532 (* l_0_13_193 l_0_13_193)))
 (let ((?x51530 (* l_0_13_192 l_0_13_192)))
 (let ((?x51528 (* l_0_13_191 l_0_13_191)))
 (let ((?x51526 (* l_0_13_190 l_0_13_190)))
 (let ((?x51524 (* l_0_13_168 l_0_13_168)))
 (let ((?x51522 (* l_0_13_167 l_0_13_167)))
 (let ((?x51520 (* l_0_13_166 l_0_13_166)))
 (let ((?x51518 (* l_0_13_165 l_0_13_165)))
 (let ((?x51516 (* l_0_13_164 l_0_13_164)))
 (let ((?x51514 (* l_0_13_163 l_0_13_163)))
 (let ((?x51512 (* l_0_13_162 l_0_13_162)))
 (let ((?x51511 (- (* (* (- 2.0) l_0_13_106) l_0_13_86) (* (* 2.0 l_0_13_107) l_0_13_87))))
 (let ((?x51525 (+ (+ (+ (+ (+ (+ (+ ?x51511 ?x51512) ?x51514) ?x51516) ?x51518) ?x51520) ?x51522) ?x51524)))
 (let ((?x51539 (- (- (- (- (- (- (- ?x51525 ?x51526) ?x51528) ?x51530) ?x51532) ?x51534) ?x51536) ?x51538)))
 (let ((?x51543 (+ (+ ?x51539 (* (* 2.0 l_0_13_58) l_0_13_78)) (* (* 2.0 l_0_13_59) l_0_13_79))))
 (= ?x51543 0.0))))))))))))))))))))
(assert
 (let ((?x51568 (* l_0_13_99 l_0_13_99)))
 (let ((?x51566 (* l_0_13_98 l_0_13_98)))
 (let ((?x51564 (* l_0_13_97 l_0_13_97)))
 (let ((?x51562 (* l_0_13_96 l_0_13_96)))
 (let ((?x51560 (* l_0_13_95 l_0_13_95)))
 (let ((?x51558 (* l_0_13_71 l_0_13_71)))
 (let ((?x31665 (* l_0_13_70 l_0_13_70)))
 (let ((?x31661 (* l_0_13_69 l_0_13_69)))
 (let ((?x51557 (+ (+ (+ (* l_0_13_67 l_0_13_67) (* l_0_13_68 l_0_13_68)) ?x31661) ?x31665)))
 (= (- (- (- (- (- (+ ?x51557 ?x51558) ?x51560) ?x51562) ?x51564) ?x51566) ?x51568) 0.0)))))))))))
(assert
 (let ((?x51580 (- (* (* (- 2.0) l_0_13_100) l_0_13_95) (* (* 2.0 l_0_13_101) l_0_13_96))))
 (let ((?x51584 (- (- ?x51580 (* (* 2.0 l_0_13_102) l_0_13_97)) (* (* 2.0 l_0_13_103) l_0_13_98))))
 (let ((?x51590 (+ (- ?x51584 (* (* 2.0 l_0_13_104) l_0_13_99)) (* (* 2.0 l_0_13_67) l_0_13_72))))
 (let ((?x51596 (+ (+ ?x51590 (* (* 2.0 l_0_13_68) l_0_13_73)) (* (* 2.0 l_0_13_69) l_0_13_74))))
 (let ((?x51602 (+ (+ ?x51596 (* (* 2.0 l_0_13_70) l_0_13_75)) (* (* 2.0 l_0_13_71) l_0_13_76))))
 (= ?x51602 0.0)))))))
(assert
 (let ((?x31770 (- (* (* (- 2.0) l_0_13_106) l_0_13_95) (* (* 2.0 l_0_13_107) l_0_13_96))))
 (let ((?x31775 (- (- ?x31770 (* (* 2.0 l_0_13_108) l_0_13_97)) (* (* 2.0 l_0_13_109) l_0_13_98))))
 (let ((?x51620 (+ (- ?x31775 (* (* 2.0 l_0_13_110) l_0_13_99)) (* (* 2.0 l_0_13_67) l_0_13_78))))
 (let ((?x51624 (+ (+ ?x51620 (* (* 2.0 l_0_13_68) l_0_13_79)) (* (* 2.0 l_0_13_69) l_0_13_80))))
 (let ((?x51628 (+ (+ ?x51624 (* (* 2.0 l_0_13_70) l_0_13_81)) (* (* 2.0 l_0_13_71) l_0_13_82))))
 (= ?x51628 0.0)))))))
(assert
 (let ((?x51672 (* l_0_13_77 l_0_13_77)))
 (let ((?x51670 (* l_0_13_76 l_0_13_76)))
 (let ((?x51668 (* l_0_13_75 l_0_13_75)))
 (let ((?x51666 (* l_0_13_74 l_0_13_74)))
 (let ((?x51664 (* l_0_13_73 l_0_13_73)))
 (let ((?x51662 (* l_0_13_72 l_0_13_72)))
 (let ((?x51660 (* l_0_13_105 l_0_13_105)))
 (let ((?x51658 (* l_0_13_104 l_0_13_104)))
 (let ((?x51656 (* l_0_13_103 l_0_13_103)))
 (let ((?x51646 (* l_0_13_102 l_0_13_102)))
 (let ((?x51647 (- (- (* (- l_0_13_100) l_0_13_100) (* l_0_13_101 l_0_13_101)) ?x51646)))
 (let ((?x51669 (+ (+ (+ (+ (- (- (- ?x51647 ?x51656) ?x51658) ?x51660) ?x51662) ?x51664) ?x51666) ?x51668)))
 (= (+ (+ ?x51669 ?x51670) ?x51672) 0.0))))))))))))))
(assert
 (let ((?x51693 (- (* (* (- 2.0) l_0_13_100) l_0_13_106) (* (* 2.0 l_0_13_101) l_0_13_107))))
 (let ((?x51697 (- (- ?x51693 (* (* 2.0 l_0_13_102) l_0_13_108)) (* (* 2.0 l_0_13_103) l_0_13_109))))
 (let ((?x51702 (- (- ?x51697 (* (* 2.0 l_0_13_104) l_0_13_110)) (* (* 2.0 l_0_13_105) l_0_13_111))))
 (let ((?x51708 (+ (+ ?x51702 (* (* 2.0 l_0_13_72) l_0_13_78)) (* (* 2.0 l_0_13_73) l_0_13_79))))
 (let ((?x51714 (+ (+ ?x51708 (* (* 2.0 l_0_13_74) l_0_13_80)) (* (* 2.0 l_0_13_75) l_0_13_81))))
 (let ((?x51720 (+ (+ ?x51714 (* (* 2.0 l_0_13_76) l_0_13_82)) (* (* 2.0 l_0_13_77) l_0_13_83))))
 (= ?x51720 0.0))))))))
(assert
 (let ((?x51775 (* l_0_13_84 l_0_13_84)))
 (let ((?x51773 (* l_0_13_83 l_0_13_83)))
 (let ((?x51771 (* l_0_13_82 l_0_13_82)))
 (let ((?x51769 (* l_0_13_81 l_0_13_81)))
 (let ((?x51767 (* l_0_13_80 l_0_13_80)))
 (let ((?x51765 (* l_0_13_79 l_0_13_79)))
 (let ((?x51763 (* l_0_13_78 l_0_13_78)))
 (let ((?x51761 (* l_0_13_112 l_0_13_112)))
 (let ((?x51759 (* l_0_13_111 l_0_13_111)))
 (let ((?x51757 (* l_0_13_110 l_0_13_110)))
 (let ((?x51746 (* l_0_13_109 l_0_13_109)))
 (let ((?x51743 (* l_0_13_108 l_0_13_108)))
 (let ((?x51745 (- (- (* (- l_0_13_106) l_0_13_106) (* l_0_13_107 l_0_13_107)) ?x51743)))
 (let ((?x51768 (+ (+ (+ (- (- (- (- ?x51745 ?x51746) ?x51757) ?x51759) ?x51761) ?x51763) ?x51765) ?x51767)))
 (= (+ (+ (+ (+ ?x51768 ?x51769) ?x51771) ?x51773) ?x51775) 0.0))))))))))))))))
(assert
 (let ((?x51802 (* l_0_13_197 l_0_13_197)))
 (let ((?x51799 (+ (* (* (- 1.0) l_0_13_113) l_0_13_113) (* (* 2.0 l_0_13_141) l_0_13_142))))
 (= (- (- ?x51799 (* (* 2.0 l_0_13_169) l_0_13_170)) ?x51802) 0.0))))
(assert
 (let ((?x31913 (* l_0_13_171 l_0_13_171)))
 (let ((?x31907 (* l_0_13_170 l_0_13_170)))
 (let ((?x31901 (* l_0_13_143 l_0_13_143)))
 (let ((?x31895 (* l_0_13_142 l_0_13_142)))
 (let ((?x31916 (- (- (+ (+ (* (* (- 2.0) l_0_13_113) l_0_13_114) ?x31895) ?x31901) ?x31907) ?x31913)))
 (= (- ?x31916 (* (* 2.0 l_0_13_197) l_0_13_198)) 0.0)))))))
(assert
 (let ((?x31982 (+ (* (* (- 2.0) l_0_13_113) l_0_13_119) (* (* 2.0 l_0_13_142) l_0_13_147))))
 (let ((?x31963 (- (+ ?x31982 (* (* 2.0 l_0_13_143) l_0_13_148)) (* (* 2.0 l_0_13_170) l_0_13_175))))
 (let ((?x51817 (- (- ?x31963 (* (* 2.0 l_0_13_171) l_0_13_176)) (* (* 2.0 l_0_13_197) l_0_13_203))))
 (= ?x51817 0.0)))))
(assert
 (let ((?x51843 (- (* (* (- 2.0) l_0_13_114) l_0_13_116) (* (* 2.0 l_0_13_115) l_0_13_117))))
 (let ((?x51847 (- (- ?x51843 (* (* 2.0 l_0_13_198) l_0_13_200)) (* (* 2.0 l_0_13_199) l_0_13_201))))
 (= ?x51847 0.0))))
(assert
 (let ((?x32126 (- (* (* (- 2.0) l_0_13_114) l_0_13_134) (* (* 2.0 l_0_13_115) l_0_13_135))))
 (let ((?x32138 (- (- ?x32126 (* (* 2.0 l_0_13_198) l_0_13_218)) (* (* 2.0 l_0_13_199) l_0_13_219))))
 (= ?x32138 0.0))))
(assert
 (let ((?x51886 (* l_0_13_202 l_0_13_202)))
 (let ((?x51884 (* l_0_13_201 l_0_13_201)))
 (let ((?x51882 (* l_0_13_200 l_0_13_200)))
 (let ((?x51878 (- (* (* (- 1.0) l_0_13_116) l_0_13_116) (* (* 1.0 l_0_13_117) l_0_13_117))))
 (let ((?x51887 (- (- (- (- ?x51878 (* (* 1.0 l_0_13_118) l_0_13_118)) ?x51882) ?x51884) ?x51886)))
 (= ?x51887 0.0)))))))
(assert
 (let ((?x51902 (- (* (* (- 2.0) l_0_13_116) l_0_13_119) (* (* 2.0 l_0_13_117) l_0_13_120))))
 (let ((?x51906 (- (- ?x51902 (* (* 2.0 l_0_13_118) l_0_13_121)) (* (* 2.0 l_0_13_200) l_0_13_203))))
 (let ((?x51910 (- (- ?x51906 (* (* 2.0 l_0_13_201) l_0_13_204)) (* (* 2.0 l_0_13_202) l_0_13_205))))
 (= ?x51910 0.0)))))
(assert
 (let ((?x51932 (- (* (* (- 2.0) l_0_13_116) l_0_13_134) (* (* 2.0 l_0_13_117) l_0_13_135))))
 (let ((?x51936 (- (- ?x51932 (* (* 2.0 l_0_13_118) l_0_13_136)) (* (* 2.0 l_0_13_200) l_0_13_218))))
 (let ((?x51940 (- (- ?x51936 (* (* 2.0 l_0_13_201) l_0_13_219)) (* (* 2.0 l_0_13_202) l_0_13_220))))
 (= ?x51940 0.0)))))
(assert
 (let ((?x51976 (* l_0_13_206 l_0_13_206)))
 (let ((?x51974 (* l_0_13_205 l_0_13_205)))
 (let ((?x51972 (* l_0_13_204 l_0_13_204)))
 (let ((?x51970 (* l_0_13_203 l_0_13_203)))
 (let ((?x51963 (- (* (* (- 1.0) l_0_13_119) l_0_13_119) (* (* 1.0 l_0_13_120) l_0_13_120))))
 (let ((?x51969 (- (- ?x51963 (* (* 1.0 l_0_13_121) l_0_13_121)) (* (* 1.0 l_0_13_122) l_0_13_122))))
 (= (- (- (- (- ?x51969 ?x51970) ?x51972) ?x51974) ?x51976) 0.0))))))))
(assert
 (let ((?x52024 (* l_0_13_224 l_0_13_224)))
 (let ((?x52022 (* l_0_13_223 l_0_13_223)))
 (let ((?x52020 (* l_0_13_222 l_0_13_222)))
 (let ((?x52018 (* l_0_13_221 l_0_13_221)))
 (let ((?x52016 (* l_0_13_220 l_0_13_220)))
 (let ((?x52014 (* l_0_13_219 l_0_13_219)))
 (let ((?x52012 (* l_0_13_218 l_0_13_218)))
 (let ((?x51996 (- (* (* (- 1.0) l_0_13_134) l_0_13_134) (* (* 1.0 l_0_13_135) l_0_13_135))))
 (let ((?x52002 (- (- ?x51996 (* (* 1.0 l_0_13_136) l_0_13_136)) (* (* 1.0 l_0_13_137) l_0_13_137))))
 (let ((?x52008 (- (- ?x52002 (* (* 1.0 l_0_13_138) l_0_13_138)) (* (* 1.0 l_0_13_139) l_0_13_139))))
 (let ((?x52017 (- (- (- (- ?x52008 (* (* 1.0 l_0_13_140) l_0_13_140)) ?x52012) ?x52014) ?x52016)))
 (= (- (- (- (- ?x52017 ?x52018) ?x52020) ?x52022) ?x52024) 0.0)))))))))))))
(assert
 (= (- (* l_0_13_141 l_0_13_141) (* l_0_13_169 l_0_13_169)) 0.0))
(assert
 (let ((?x52054 (- (* (* 2.0 l_0_13_141) l_0_13_147) (* (* 2.0 l_0_13_169) l_0_13_175))))
 (= ?x52054 0.0)))
(assert
 (let ((?x52076 (* l_0_13_178 l_0_13_178)))
 (let ((?x52074 (* l_0_13_177 l_0_13_177)))
 (let ((?x52072 (* l_0_13_176 l_0_13_176)))
 (let ((?x52070 (* l_0_13_175 l_0_13_175)))
 (let ((?x52068 (* l_0_13_150 l_0_13_150)))
 (let ((?x52066 (* l_0_13_149 l_0_13_149)))
 (let ((?x52067 (+ (+ (* l_0_13_147 l_0_13_147) (* l_0_13_148 l_0_13_148)) ?x52066)))
 (= (- (- (- (- (+ ?x52067 ?x52068) ?x52070) ?x52072) ?x52074) ?x52076) 0.0)))))))))
(assert
 (>= l_0_13_1 0.0))
(assert
 (>= l_0_13_3 0.0))
(assert
 (>= l_0_13_6 0.0))
(assert
 (>= l_0_13_10 0.0))
(assert
 (>= l_0_13_15 0.0))
(assert
 (>= l_0_13_21 0.0))
(assert
 (>= l_0_13_28 0.0))
(assert
 (>= l_0_13_29 0.0))
(assert
 (>= l_0_13_31 0.0))
(assert
 (>= l_0_13_34 0.0))
(assert
 (>= l_0_13_38 0.0))
(assert
 (>= l_0_13_43 0.0))
(assert
 (>= l_0_13_49 0.0))
(assert
 (>= l_0_13_56 0.0))
(assert
 (>= l_0_13_57 0.0))
(assert
 (>= l_0_13_59 0.0))
(assert
 (>= l_0_13_62 0.0))
(assert
 (>= l_0_13_66 0.0))
(assert
 (>= l_0_13_71 0.0))
(assert
 (>= l_0_13_77 0.0))
(assert
 (>= l_0_13_84 0.0))
(assert
 (>= l_0_13_85 0.0))
(assert
 (>= l_0_13_87 0.0))
(assert
 (>= l_0_13_90 0.0))
(assert
 (>= l_0_13_94 0.0))
(assert
 (>= l_0_13_99 0.0))
(assert
 (>= l_0_13_105 0.0))
(assert
 (>= l_0_13_112 0.0))
(assert
 (>= l_0_13_113 0.0))
(assert
 (>= l_0_13_115 0.0))
(assert
 (>= l_0_13_118 0.0))
(assert
 (>= l_0_13_122 0.0))
(assert
 (>= l_0_13_127 0.0))
(assert
 (>= l_0_13_133 0.0))
(assert
 (>= l_0_13_140 0.0))
(assert
 (>= l_0_13_141 0.0))
(assert
 (>= l_0_13_143 0.0))
(assert
 (>= l_0_13_146 0.0))
(assert
 (>= l_0_13_150 0.0))
(assert
 (>= l_0_13_155 0.0))
(assert
 (>= l_0_13_161 0.0))
(assert
 (>= l_0_13_168 0.0))
(assert
 (>= l_0_13_169 0.0))
(assert
 (>= l_0_13_171 0.0))
(assert
 (>= l_0_13_174 0.0))
(assert
 (>= l_0_13_178 0.0))
(assert
 (>= l_0_13_183 0.0))
(assert
 (>= l_0_13_189 0.0))
(assert
 (>= l_0_13_196 0.0))
(assert
 (>= l_0_13_197 0.0))
(assert
 (>= l_0_13_199 0.0))
(assert
 (>= l_0_13_202 0.0))
(assert
 (>= l_0_13_206 0.0))
(assert
 (>= l_0_13_211 0.0))
(assert
 (>= l_0_13_217 0.0))
(assert
 (>= l_0_13_224 0.0))
(assert
 (let ((?x52180 (* l_0_14_31 l_0_14_31)))
 (let ((?x52178 (* l_0_14_30 l_0_14_30)))
 (let ((?x52176 (* l_0_14_3 l_0_14_3)))
 (let ((?x52150 (* l_0_14_2 l_0_14_2)))
 (let ((?x52143 (- (* (* (- 2.0) l_0_14_119) l_0_14_134) (* (* 2.0 l_0_14_120) l_0_14_135))))
 (let ((?x52149 (- (- ?x52143 (* (* 2.0 l_0_14_121) l_0_14_136)) (* (* 2.0 l_0_14_122) l_0_14_137))))
 (let ((?x52157 (- (- (+ ?x52149 ?x52150) (* (* 2.0 l_0_14_203) l_0_14_218)) (* (* 2.0 l_0_14_204) l_0_14_219))))
 (let ((?x52163 (- (- ?x52157 (* (* 2.0 l_0_14_205) l_0_14_220)) (* (* 2.0 l_0_14_206) l_0_14_221))))
 (let ((?x52169 (- (- ?x52163 (* (* 2.0 l_0_14_231) l_0_14_246)) (* (* 2.0 l_0_14_232) l_0_14_247))))
 (let ((?x52175 (- (- ?x52169 (* (* 2.0 l_0_14_233) l_0_14_248)) (* (* 2.0 l_0_14_234) l_0_14_249))))
 (= (+ (- (- (+ ?x52175 ?x52176) ?x52178) ?x52180) 1.0) 0.0))))))))))))
(assert
 (let ((?x52225 (- (- _a_4_ (* (* 2.0 l_0_14_114) l_0_14_119)) (* (* 2.0 l_0_14_115) l_0_14_120))))
 (let ((?x52231 (- (- ?x52225 (* (* 2.0 l_0_14_198) l_0_14_203)) (* (* 2.0 l_0_14_199) l_0_14_204))))
 (let ((?x52237 (- (- ?x52231 (* (* 2.0 l_0_14_226) l_0_14_231)) (* (* 2.0 l_0_14_227) l_0_14_232))))
 (= (- ?x52237 1.0) 0.0)))))
(assert
 (let ((?x52180 (* l_0_14_31 l_0_14_31)))
 (let ((?x52178 (* l_0_14_30 l_0_14_30)))
 (let ((?x52176 (* l_0_14_3 l_0_14_3)))
 (let ((?x52150 (* l_0_14_2 l_0_14_2)))
 (let ((?x32678 (+ (* (* (- 2.0) l_0_14_113) l_0_14_116) (* (* 2.0 l_0_14_142) l_0_14_144))))
 (let ((?x32694 (- (+ ?x32678 (* (* 2.0 l_0_14_143) l_0_14_145)) (* (* 2.0 l_0_14_170) l_0_14_172))))
 (let ((?x52264 (- (- ?x32694 (* (* 2.0 l_0_14_171) l_0_14_173)) (* (* 2.0 l_0_14_197) l_0_14_200))))
 (let ((?x52270 (- (+ (- (+ ?x52264 ?x52150) (* (* 2.0 l_0_14_225) l_0_14_228)) ?x52176) ?x52178)))
 (= (+ (- ?x52270 ?x52180) 1.0) 0.0))))))))))
(assert
 (let ((?x52293 (* l_0_14_227 l_0_14_227)))
 (let ((?x32769 (* l_0_14_226 l_0_14_226)))
 (let ((?x32770 (* l_0_14_199 l_0_14_199)))
 (let ((?x32756 (* l_0_14_198 l_0_14_198)))
 (let ((?x32752 (- (- _a_3_ (* (* 1.0 l_0_14_114) l_0_14_114)) (* (* 1.0 l_0_14_115) l_0_14_115))))
 (= (- (- (- (- ?x32752 ?x32756) ?x32770) ?x32769) ?x52293) 0.0)))))))
(assert
 (let ((?x52180 (* l_0_14_31 l_0_14_31)))
 (let ((?x52178 (* l_0_14_30 l_0_14_30)))
 (let ((?x52176 (* l_0_14_3 l_0_14_3)))
 (let ((?x52150 (* l_0_14_2 l_0_14_2)))
 (let ((?x52311 (- (- _a_5_ (* (* 2.0 l_0_14_114) l_0_14_128)) (* (* 2.0 l_0_14_115) l_0_14_129))))
 (let ((?x52315 (- (- ?x52311 (* (* 2.0 l_0_14_198) l_0_14_212)) (* (* 2.0 l_0_14_199) l_0_14_213))))
 (let ((?x52320 (- (- (+ ?x52315 ?x52150) (* (* 2.0 l_0_14_226) l_0_14_240)) (* (* 2.0 l_0_14_227) l_0_14_241))))
 (= (- (- (+ ?x52320 ?x52176) ?x52178) ?x52180) 0.0)))))))))
(assert
 (let ((?x52180 (* l_0_14_31 l_0_14_31)))
 (let ((?x52178 (* l_0_14_30 l_0_14_30)))
 (let ((?x52176 (* l_0_14_3 l_0_14_3)))
 (let ((?x52150 (* l_0_14_2 l_0_14_2)))
 (let ((?x52345 (- (* (* (- 2.0) l_0_14_114) l_0_14_123) (* (* 2.0 l_0_14_115) l_0_14_124))))
 (let ((?x52349 (- (- ?x52345 (* (* 2.0 l_0_14_198) l_0_14_207)) (* (* 2.0 l_0_14_199) l_0_14_208))))
 (let ((?x52354 (- (- (- ?x52349 ?x52150) (* (* 2.0 l_0_14_226) l_0_14_235)) (* (* 2.0 l_0_14_227) l_0_14_236))))
 (= (- (+ (+ (- ?x52354 ?x52176) ?x52178) ?x52180) 1.0) 0.0)))))))))
(assert
 (let ((?x52394 (* l_0_14_29 l_0_14_29)))
 (let ((?x52390 (+ (* (- l_0_14_1) l_0_14_1) (* (* 2.0 l_0_14_141) l_0_14_151))))
 (= (+ (- ?x52390 (* (* 2.0 l_0_14_169) l_0_14_179)) ?x52394) 0.0))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52428 (* ?x52427 l_0_14_30)))
 (let ((?x52414 (- (* (* (- 2.0) l_0_14_1) l_0_14_2) (* (* 2.0 l_0_14_113) l_0_14_123))))
 (let ((?x52418 (+ (+ ?x52414 (* (* 2.0 l_0_14_142) l_0_14_151)) (* (* 2.0 l_0_14_143) l_0_14_152))))
 (let ((?x52422 (- (- ?x52418 (* (* 2.0 l_0_14_170) l_0_14_179)) (* (* 2.0 l_0_14_171) l_0_14_180))))
 (let ((?x52426 (- (- ?x52422 (* (* 2.0 l_0_14_197) l_0_14_207)) (* (* 2.0 l_0_14_225) l_0_14_235))))
 (= (+ ?x52426 ?x52428) 0.0))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52484 (* ?x52483 l_0_14_40)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52481 (* ?x52480 l_0_14_39)))
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52478 (* ?x52427 l_0_14_32)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x52458 (* ?x52457 l_0_14_3)))
 (let ((?x52454 (* 2.0 l_0_14_11)))
 (let ((?x52455 (* ?x52454 l_0_14_2)))
 (let ((?x52462 (+ (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_4) ?x52455) ?x52458) (* (* 2.0 l_0_14_144) l_0_14_151))))
 (let ((?x52468 (+ (+ ?x52462 (* (* 2.0 l_0_14_145) l_0_14_152)) (* (* 2.0 l_0_14_146) l_0_14_153))))
 (let ((?x52474 (- (- ?x52468 (* (* 2.0 l_0_14_172) l_0_14_179)) (* (* 2.0 l_0_14_173) l_0_14_180))))
 (let ((?x52485 (- (- (+ (- ?x52474 (* (* 2.0 l_0_14_174) l_0_14_181)) ?x52478) ?x52481) ?x52484)))
 (= ?x52485 0.0))))))))))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52555 (* ?x52427 l_0_14_35)))
 (let ((?x52533 (+ (* (* (- 2.0) l_0_14_1) l_0_14_7) (* (* 2.0 l_0_14_147) l_0_14_151))))
 (let ((?x52539 (+ (+ ?x52533 (* (* 2.0 l_0_14_148) l_0_14_152)) (* (* 2.0 l_0_14_149) l_0_14_153))))
 (let ((?x52545 (- (+ ?x52539 (* (* 2.0 l_0_14_150) l_0_14_154)) (* (* 2.0 l_0_14_175) l_0_14_179))))
 (let ((?x52551 (- (- ?x52545 (* (* 2.0 l_0_14_176) l_0_14_180)) (* (* 2.0 l_0_14_177) l_0_14_181))))
 (= (+ (- ?x52551 (* (* 2.0 l_0_14_178) l_0_14_182)) ?x52555) 0.0))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52596 (* ?x52427 l_0_14_39)))
 (let ((?x52594 (* l_0_14_183 l_0_14_183)))
 (let ((?x52592 (* l_0_14_182 l_0_14_182)))
 (let ((?x52590 (* l_0_14_181 l_0_14_181)))
 (let ((?x52588 (* l_0_14_180 l_0_14_180)))
 (let ((?x52586 (* l_0_14_179 l_0_14_179)))
 (let ((?x52584 (* l_0_14_155 l_0_14_155)))
 (let ((?x52582 (* l_0_14_154 l_0_14_154)))
 (let ((?x52580 (* l_0_14_153 l_0_14_153)))
 (let ((?x33024 (* l_0_14_152 l_0_14_152)))
 (let ((?x52579 (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_11) (* l_0_14_151 l_0_14_151)) ?x33024)))
 (let ((?x52593 (- (- (- (- (+ (+ (+ ?x52579 ?x52580) ?x52582) ?x52584) ?x52586) ?x52588) ?x52590) ?x52592)))
 (= (+ (- ?x52593 ?x52594) ?x52596) 0.0)))))))))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52648 (* ?x52427 l_0_14_44)))
 (let ((?x52596 (* ?x52427 l_0_14_39)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x52615 (* ?x52613 l_0_14_16)))
 (let ((?x52614 (* ?x52613 l_0_14_11)))
 (let ((?x52622 (+ (+ (- ?x52614 ?x52615) (* (* 2.0 l_0_14_151) l_0_14_156)) (* (* 2.0 l_0_14_152) l_0_14_157))))
 (let ((?x52628 (+ (+ ?x52622 (* (* 2.0 l_0_14_153) l_0_14_158)) (* (* 2.0 l_0_14_154) l_0_14_159))))
 (let ((?x52634 (- (+ ?x52628 (* (* 2.0 l_0_14_155) l_0_14_160)) (* (* 2.0 l_0_14_179) l_0_14_184))))
 (let ((?x52640 (- (- ?x52634 (* (* 2.0 l_0_14_180) l_0_14_185)) (* (* 2.0 l_0_14_181) l_0_14_186))))
 (let ((?x52646 (- (- ?x52640 (* (* 2.0 l_0_14_182) l_0_14_187)) (* (* 2.0 l_0_14_183) l_0_14_188))))
 (= (+ (- ?x52646 ?x52596) ?x52648) 0.0)))))))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52705 (* ?x52427 l_0_14_50)))
 (let ((?x52686 (+ (* (* (- 2.0) l_0_14_1) l_0_14_22) (* (* 2.0 l_0_14_151) l_0_14_162))))
 (let ((?x52690 (+ (+ ?x52686 (* (* 2.0 l_0_14_152) l_0_14_163)) (* (* 2.0 l_0_14_153) l_0_14_164))))
 (let ((?x52694 (+ (+ ?x52690 (* (* 2.0 l_0_14_154) l_0_14_165)) (* (* 2.0 l_0_14_155) l_0_14_166))))
 (let ((?x52698 (- (- ?x52694 (* (* 2.0 l_0_14_179) l_0_14_190)) (* (* 2.0 l_0_14_180) l_0_14_191))))
 (let ((?x52702 (- (- ?x52698 (* (* 2.0 l_0_14_181) l_0_14_192)) (* (* 2.0 l_0_14_182) l_0_14_193))))
 (let ((?x52709 (+ (+ (- ?x52702 (* (* 2.0 l_0_14_183) l_0_14_194)) ?x52705) (* (* 2.0 l_0_14_58) l_0_14_67))))
 (let ((?x52715 (- (+ ?x52709 (* (* 2.0 l_0_14_59) l_0_14_68)) (* (* 2.0 l_0_14_86) l_0_14_95))))
 (= (- ?x52715 (* (* 2.0 l_0_14_87) l_0_14_96)) 0.0)))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52783 (* ?x52483 l_0_14_33)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52781 (* ?x52480 l_0_14_32)))
 (let ((?x52778 (* 2.0 l_0_14_3)))
 (let ((?x52779 (* ?x52778 l_0_14_5)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x52758 (* ?x52757 l_0_14_4)))
 (let ((?x52753 (- (* (* (- 2.0) l_0_14_116) l_0_14_123) (* (* 2.0 l_0_14_117) l_0_14_124))))
 (let ((?x52762 (- (- (- ?x52753 (* (* 2.0 l_0_14_118) l_0_14_125)) ?x52758) (* (* 2.0 l_0_14_200) l_0_14_207))))
 (let ((?x52768 (- (- ?x52762 (* (* 2.0 l_0_14_201) l_0_14_208)) (* (* 2.0 l_0_14_202) l_0_14_209))))
 (let ((?x52774 (- (- ?x52768 (* (* 2.0 l_0_14_228) l_0_14_235)) (* (* 2.0 l_0_14_229) l_0_14_236))))
 (let ((?x52784 (+ (+ (- (- ?x52774 (* (* 2.0 l_0_14_230) l_0_14_237)) ?x52779) ?x52781) ?x52783)))
 (= ?x52784 0.0)))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52844 (* ?x52483 l_0_14_36)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52842 (* ?x52480 l_0_14_35)))
 (let ((?x52778 (* 2.0 l_0_14_3)))
 (let ((?x52840 (* ?x52778 l_0_14_8)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x52822 (* ?x52757 l_0_14_7)))
 (let ((?x52812 (- (* (* (- 2.0) l_0_14_119) l_0_14_123) (* (* 2.0 l_0_14_120) l_0_14_124))))
 (let ((?x52821 (- (- ?x52812 (* (* 2.0 l_0_14_121) l_0_14_125)) (* (* 2.0 l_0_14_122) l_0_14_126))))
 (let ((?x52827 (- (- (- ?x52821 ?x52822) (* (* 2.0 l_0_14_203) l_0_14_207)) (* (* 2.0 l_0_14_204) l_0_14_208))))
 (let ((?x52831 (- (- ?x52827 (* (* 2.0 l_0_14_205) l_0_14_209)) (* (* 2.0 l_0_14_206) l_0_14_210))))
 (let ((?x52835 (- (- ?x52831 (* (* 2.0 l_0_14_231) l_0_14_235)) (* (* 2.0 l_0_14_232) l_0_14_236))))
 (let ((?x52839 (- (- ?x52835 (* (* 2.0 l_0_14_233) l_0_14_237)) (* (* 2.0 l_0_14_234) l_0_14_238))))
 (= (+ (+ (- ?x52839 ?x52840) ?x52842) ?x52844) 0.0))))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52484 (* ?x52483 l_0_14_40)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52481 (* ?x52480 l_0_14_39)))
 (let ((?x52866 (* l_0_14_239 l_0_14_239)))
 (let ((?x52864 (* l_0_14_238 l_0_14_238)))
 (let ((?x52862 (* l_0_14_237 l_0_14_237)))
 (let ((?x52860 (* l_0_14_236 l_0_14_236)))
 (let ((?x52858 (* l_0_14_235 l_0_14_235)))
 (let ((?x52856 (* l_0_14_211 l_0_14_211)))
 (let ((?x4796 (* l_0_14_210 l_0_14_210)))
 (let ((?x4802 (* l_0_14_209 l_0_14_209)))
 (let ((?x33461 (* l_0_14_208 l_0_14_208)))
 (let ((?x33457 (* l_0_14_207 l_0_14_207)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x52458 (* ?x52457 l_0_14_3)))
 (let ((?x33633 (- (- (* (* (- 2.0) l_0_14_11) l_0_14_2) ?x52458) (* (* 1.0 l_0_14_123) l_0_14_123))))
 (let ((?x4849 (- (- ?x33633 (* (* 1.0 l_0_14_124) l_0_14_124)) (* (* 1.0 l_0_14_125) l_0_14_125))))
 (let ((?x33455 (- (- ?x4849 (* (* 1.0 l_0_14_126) l_0_14_126)) (* (* 1.0 l_0_14_127) l_0_14_127))))
 (let ((?x52861 (- (- (- (- (- (- (- ?x33455 ?x33457) ?x33461) ?x4802) ?x4796) ?x52856) ?x52858) ?x52860)))
 (= (+ (+ (- (- (- ?x52861 ?x52862) ?x52864) ?x52866) ?x52481) ?x52484) 0.0))))))))))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52951 (* ?x52483 l_0_14_45)))
 (let ((?x52484 (* ?x52483 l_0_14_40)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52948 (* ?x52480 l_0_14_44)))
 (let ((?x52481 (* ?x52480 l_0_14_39)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x52915 (* ?x52914 l_0_14_3)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x52912 (* ?x52911 l_0_14_2)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x52458 (* ?x52457 l_0_14_3)))
 (let ((?x52454 (* 2.0 l_0_14_11)))
 (let ((?x52455 (* ?x52454 l_0_14_2)))
 (let ((?x52901 (- (- (+ ?x52455 ?x52458) (* (* 2.0 l_0_14_123) l_0_14_128)) (* (* 2.0 l_0_14_124) l_0_14_129))))
 (let ((?x52907 (- (- ?x52901 (* (* 2.0 l_0_14_125) l_0_14_130)) (* (* 2.0 l_0_14_126) l_0_14_131))))
 (let ((?x52919 (- (- (- (- ?x52907 (* (* 2.0 l_0_14_127) l_0_14_132)) ?x52912) ?x52915) (* (* 2.0 l_0_14_207) l_0_14_212))))
 (let ((?x52925 (- (- ?x52919 (* (* 2.0 l_0_14_208) l_0_14_213)) (* (* 2.0 l_0_14_209) l_0_14_214))))
 (let ((?x52931 (- (- ?x52925 (* (* 2.0 l_0_14_210) l_0_14_215)) (* (* 2.0 l_0_14_211) l_0_14_216))))
 (let ((?x52937 (- (- ?x52931 (* (* 2.0 l_0_14_235) l_0_14_240)) (* (* 2.0 l_0_14_236) l_0_14_241))))
 (let ((?x52943 (- (- ?x52937 (* (* 2.0 l_0_14_237) l_0_14_242)) (* (* 2.0 l_0_14_238) l_0_14_243))))
 (let ((?x52950 (- (+ (- (- ?x52943 (* (* 2.0 l_0_14_239) l_0_14_244)) ?x52481) ?x52948) ?x52484)))
 (= (+ ?x52950 ?x52951) 0.0))))))))))))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x53055 (* ?x52483 l_0_14_51)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x53053 (* ?x52480 l_0_14_50)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53041 (* ?x53040 l_0_14_3)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x53028 (* ?x52757 l_0_14_22)))
 (let ((?x53021 (- (* (* (- 2.0) l_0_14_123) l_0_14_134) (* (* 2.0 l_0_14_124) l_0_14_135))))
 (let ((?x53025 (- (- ?x53021 (* (* 2.0 l_0_14_125) l_0_14_136)) (* (* 2.0 l_0_14_126) l_0_14_137))))
 (let ((?x53031 (- (- (- ?x53025 (* (* 2.0 l_0_14_127) l_0_14_138)) ?x53028) (* (* 2.0 l_0_14_207) l_0_14_218))))
 (let ((?x53035 (- (- ?x53031 (* (* 2.0 l_0_14_208) l_0_14_219)) (* (* 2.0 l_0_14_209) l_0_14_220))))
 (let ((?x53039 (- (- ?x53035 (* (* 2.0 l_0_14_210) l_0_14_221)) (* (* 2.0 l_0_14_211) l_0_14_222))))
 (let ((?x53046 (- (- (- ?x53039 ?x53041) (* (* 2.0 l_0_14_235) l_0_14_246)) (* (* 2.0 l_0_14_236) l_0_14_247))))
 (let ((?x53050 (- (- ?x53046 (* (* 2.0 l_0_14_237) l_0_14_248)) (* (* 2.0 l_0_14_238) l_0_14_249))))
 (= (+ (+ (- ?x53050 (* (* 2.0 l_0_14_239) l_0_14_250)) ?x53053) ?x53055) 0.0)))))))))))))))))
(assert
 (let ((?x53088 (* l_0_14_6 l_0_14_6)))
 (let ((?x53086 (* l_0_14_5 l_0_14_5)))
 (let ((?x53084 (* l_0_14_4 l_0_14_4)))
 (let ((?x53082 (* l_0_14_34 l_0_14_34)))
 (let ((?x53085 (- (+ (+ (* l_0_14_32 l_0_14_32) (* l_0_14_33 l_0_14_33)) ?x53082) ?x53084)))
 (= (- (- ?x53085 ?x53086) ?x53088) 0.0)))))))
(assert
 (let ((?x53111 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x53108 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x53105 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53102 (* ?x53101 l_0_14_37)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53099 (* ?x53098 l_0_14_36)))
 (let ((?x53109 (- (- (+ (+ (* (* 2.0 l_0_14_32) l_0_14_35) ?x53099) ?x53102) ?x53105) ?x53108)))
 (= (- ?x53109 ?x53111) 0.0))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53137 (* ?x53101 l_0_14_41)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53135 (* ?x53098 l_0_14_40)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x34017 (* ?x34011 l_0_14_39)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x5955 (* ?x6011 l_0_14_6)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x34003 (* ?x52457 l_0_14_5)))
 (let ((?x53136 (+ (+ (- (- (* (* (- 2.0) l_0_14_11) l_0_14_4) ?x34003) ?x5955) ?x34017) ?x53135)))
 (= (+ ?x53136 ?x53137) 0.0)))))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53170 (* ?x53101 l_0_14_46)))
 (let ((?x53137 (* ?x53101 l_0_14_41)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53167 (* ?x53098 l_0_14_45)))
 (let ((?x53135 (* ?x53098 l_0_14_40)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x53164 (* ?x34011 l_0_14_44)))
 (let ((?x34017 (* ?x34011 l_0_14_39)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53161 (* ?x53160 l_0_14_6)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53158 (* ?x52914 l_0_14_5)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53156 (* ?x52911 l_0_14_4)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x5955 (* ?x6011 l_0_14_6)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x34003 (* ?x52457 l_0_14_5)))
 (let ((?x53155 (+ (+ (* (* 2.0 l_0_14_11) l_0_14_4) ?x34003) ?x5955)))
 (let ((?x53168 (+ (- (+ (- (- (- (- ?x53155 ?x53156) ?x53158) ?x53161) ?x34017) ?x53164) ?x53135) ?x53167)))
 (= (+ (- ?x53168 ?x53137) ?x53170) 0.0)))))))))))))))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53200 (* ?x53101 l_0_14_52)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53198 (* ?x53098 l_0_14_51)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x53196 (* ?x34011 l_0_14_50)))
 (let ((?x53193 (* 2.0 l_0_14_24)))
 (let ((?x53194 (* ?x53193 l_0_14_6)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53191 (* ?x53040 l_0_14_5)))
 (let ((?x53199 (+ (+ (- (- (* (* (- 2.0) l_0_14_22) l_0_14_4) ?x53191) ?x53194) ?x53196) ?x53198)))
 (= (+ ?x53199 ?x53200) 0.0)))))))))))))
(assert
 (let ((?x53233 (* l_0_14_9 l_0_14_9)))
 (let ((?x53231 (* l_0_14_8 l_0_14_8)))
 (let ((?x53229 (* l_0_14_7 l_0_14_7)))
 (let ((?x53227 (* l_0_14_38 l_0_14_38)))
 (let ((?x53225 (* l_0_14_37 l_0_14_37)))
 (let ((?x53223 (* l_0_14_36 l_0_14_36)))
 (let ((?x53224 (+ (+ (* (- l_0_14_10) l_0_14_10) (* l_0_14_35 l_0_14_35)) ?x53223)))
 (= (- (- (- (+ (+ ?x53224 ?x53225) ?x53227) ?x53229) ?x53231) ?x53233) 0.0)))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53260 (* ?x53259 l_0_14_42)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53257 (* ?x53256 l_0_14_41)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53254 (* ?x53253 l_0_14_40)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53251 (* ?x53250 l_0_14_39)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53248 (* ?x6011 l_0_14_9)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53246 (* ?x52457 l_0_14_8)))
 (let ((?x52454 (* 2.0 l_0_14_11)))
 (let ((?x53244 (* ?x52454 l_0_14_7)))
 (let ((?x53252 (+ (- (- (- (* (* (- 2.0) l_0_14_10) l_0_14_14) ?x53244) ?x53246) ?x53248) ?x53251)))
 (= (+ (+ (+ ?x53252 ?x53254) ?x53257) ?x53260) 0.0)))))))))))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53306 (* ?x53259 l_0_14_47)))
 (let ((?x53260 (* ?x53259 l_0_14_42)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53303 (* ?x53256 l_0_14_46)))
 (let ((?x53257 (* ?x53256 l_0_14_41)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53300 (* ?x53253 l_0_14_45)))
 (let ((?x53254 (* ?x53253 l_0_14_40)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53297 (* ?x53250 l_0_14_44)))
 (let ((?x53251 (* ?x53250 l_0_14_39)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53294 (* ?x53160 l_0_14_9)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53292 (* ?x52914 l_0_14_8)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53290 (* ?x52911 l_0_14_7)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53248 (* ?x6011 l_0_14_9)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53246 (* ?x52457 l_0_14_8)))
 (let ((?x52454 (* 2.0 l_0_14_11)))
 (let ((?x53244 (* ?x52454 l_0_14_7)))
 (let ((?x53273 (* 2.0 l_0_14_10)))
 (let ((?x53277 (* ?x53273 l_0_14_19)))
 (let ((?x53275 (* ?x53273 l_0_14_14)))
 (let ((?x53295 (- (- (- (+ (+ (+ (- ?x53275 ?x53277) ?x53244) ?x53246) ?x53248) ?x53290) ?x53292) ?x53294)))
 (let ((?x53305 (- (+ (- (+ (- (+ (- ?x53295 ?x53251) ?x53297) ?x53254) ?x53300) ?x53257) ?x53303) ?x53260)))
 (= (+ ?x53305 ?x53306) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53346 (* ?x53259 l_0_14_53)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53344 (* ?x53256 l_0_14_52)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53342 (* ?x53253 l_0_14_51)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53340 (* ?x53250 l_0_14_50)))
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52484 (* ?x52483 l_0_14_40)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52481 (* ?x52480 l_0_14_39)))
 (let ((?x53193 (* 2.0 l_0_14_24)))
 (let ((?x53336 (* ?x53193 l_0_14_9)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53334 (* ?x53040 l_0_14_8)))
 (let ((?x53331 (* 2.0 l_0_14_22)))
 (let ((?x53332 (* ?x53331 l_0_14_7)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x52458 (* ?x52457 l_0_14_3)))
 (let ((?x52454 (* 2.0 l_0_14_11)))
 (let ((?x52455 (* ?x52454 l_0_14_2)))
 (let ((?x53335 (- (- (+ (+ (* (* (- 2.0) l_0_14_10) l_0_14_25) ?x52455) ?x52458) ?x53332) ?x53334)))
 (let ((?x53347 (+ (+ (+ (+ (- (- (- ?x53335 ?x53336) ?x52481) ?x52484) ?x53340) ?x53342) ?x53344) ?x53346)))
 (= ?x53347 0.0))))))))))))))))))))))))))
(assert
 (let ((?x53394 (* l_0_14_43 l_0_14_43)))
 (let ((?x53392 (* l_0_14_42 l_0_14_42)))
 (let ((?x53390 (* l_0_14_41 l_0_14_41)))
 (let ((?x53388 (* l_0_14_40 l_0_14_40)))
 (let ((?x53386 (* l_0_14_39 l_0_14_39)))
 (let ((?x53384 (* l_0_14_15 l_0_14_15)))
 (let ((?x53382 (* l_0_14_14 l_0_14_14)))
 (let ((?x53373 (* l_0_14_13 l_0_14_13)))
 (let ((?x53381 (- (- (* (- l_0_14_11) l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x53373)))
 (let ((?x53395 (+ (+ (+ (+ (+ (- (- ?x53381 ?x53382) ?x53384) ?x53386) ?x53388) ?x53390) ?x53392) ?x53394)))
 (= ?x53395 0.0))))))))))))
(assert
 (let ((?x53394 (* l_0_14_43 l_0_14_43)))
 (let ((?x53439 (* 2.0 l_0_14_43)))
 (let ((?x53440 (* ?x53439 l_0_14_48)))
 (let ((?x53392 (* l_0_14_42 l_0_14_42)))
 (let ((?x53435 (* 2.0 l_0_14_42)))
 (let ((?x53436 (* ?x53435 l_0_14_47)))
 (let ((?x53390 (* l_0_14_41 l_0_14_41)))
 (let ((?x53431 (* 2.0 l_0_14_41)))
 (let ((?x53432 (* ?x53431 l_0_14_46)))
 (let ((?x53388 (* l_0_14_40 l_0_14_40)))
 (let ((?x53427 (* 2.0 l_0_14_40)))
 (let ((?x53428 (* ?x53427 l_0_14_45)))
 (let ((?x53386 (* l_0_14_39 l_0_14_39)))
 (let ((?x53423 (* 2.0 l_0_14_39)))
 (let ((?x53424 (* ?x53423 l_0_14_44)))
 (let ((?x53384 (* l_0_14_15 l_0_14_15)))
 (let ((?x53419 (* 2.0 l_0_14_15)))
 (let ((?x53420 (* ?x53419 l_0_14_20)))
 (let ((?x53382 (* l_0_14_14 l_0_14_14)))
 (let ((?x53415 (* 2.0 l_0_14_14)))
 (let ((?x53416 (* ?x53415 l_0_14_19)))
 (let ((?x53373 (* l_0_14_13 l_0_14_13)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53412 (* ?x6011 l_0_14_18)))
 (let ((?x53370 (* l_0_14_12 l_0_14_12)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53409 (* ?x52457 l_0_14_17)))
 (let ((?x53410 (- (+ (* (* (- 2.0) l_0_14_11) l_0_14_16) (* l_0_14_11 l_0_14_11)) ?x53409)))
 (let ((?x53422 (+ (- (+ (- (+ (- (+ ?x53410 ?x53370) ?x53412) ?x53373) ?x53416) ?x53382) ?x53420) ?x53384)))
 (let ((?x53437 (+ (- (+ (- (+ (- (+ ?x53422 ?x53424) ?x53386) ?x53428) ?x53388) ?x53432) ?x53390) ?x53436)))
 (= (- (+ (- ?x53437 ?x53392) ?x53440) ?x53394) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x53439 (* 2.0 l_0_14_43)))
 (let ((?x53517 (* ?x53439 l_0_14_54)))
 (let ((?x53435 (* 2.0 l_0_14_42)))
 (let ((?x53515 (* ?x53435 l_0_14_53)))
 (let ((?x53431 (* 2.0 l_0_14_41)))
 (let ((?x53513 (* ?x53431 l_0_14_52)))
 (let ((?x53427 (* 2.0 l_0_14_40)))
 (let ((?x53511 (* ?x53427 l_0_14_51)))
 (let ((?x53423 (* 2.0 l_0_14_39)))
 (let ((?x53509 (* ?x53423 l_0_14_50)))
 (let ((?x53419 (* 2.0 l_0_14_15)))
 (let ((?x53507 (* ?x53419 l_0_14_26)))
 (let ((?x53415 (* 2.0 l_0_14_14)))
 (let ((?x53505 (* ?x53415 l_0_14_25)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53503 (* ?x6011 l_0_14_24)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53501 (* ?x52457 l_0_14_23)))
 (let ((?x53508 (- (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_22) ?x53501) ?x53503) ?x53505) ?x53507)))
 (= (+ (+ (+ (+ (+ ?x53508 ?x53509) ?x53511) ?x53513) ?x53515) ?x53517) 0.0)))))))))))))))))))))
(assert
 (let ((?x53582 (* l_0_14_49 l_0_14_49)))
 (let ((?x53580 (* l_0_14_48 l_0_14_48)))
 (let ((?x53578 (* l_0_14_47 l_0_14_47)))
 (let ((?x53576 (* l_0_14_46 l_0_14_46)))
 (let ((?x53574 (* l_0_14_45 l_0_14_45)))
 (let ((?x53572 (* l_0_14_44 l_0_14_44)))
 (let ((?x53439 (* 2.0 l_0_14_43)))
 (let ((?x53440 (* ?x53439 l_0_14_48)))
 (let ((?x53435 (* 2.0 l_0_14_42)))
 (let ((?x53436 (* ?x53435 l_0_14_47)))
 (let ((?x53431 (* 2.0 l_0_14_41)))
 (let ((?x53432 (* ?x53431 l_0_14_46)))
 (let ((?x53427 (* 2.0 l_0_14_40)))
 (let ((?x53428 (* ?x53427 l_0_14_45)))
 (let ((?x53423 (* 2.0 l_0_14_39)))
 (let ((?x53424 (* ?x53423 l_0_14_44)))
 (let ((?x53565 (* l_0_14_21 l_0_14_21)))
 (let ((?x53563 (* l_0_14_20 l_0_14_20)))
 (let ((?x53561 (* l_0_14_19 l_0_14_19)))
 (let ((?x53559 (* l_0_14_18 l_0_14_18)))
 (let ((?x53557 (* l_0_14_17 l_0_14_17)))
 (let ((?x53555 (* l_0_14_16 l_0_14_16)))
 (let ((?x53419 (* 2.0 l_0_14_15)))
 (let ((?x53420 (* ?x53419 l_0_14_20)))
 (let ((?x53415 (* 2.0 l_0_14_14)))
 (let ((?x53416 (* ?x53415 l_0_14_19)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53412 (* ?x6011 l_0_14_18)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53409 (* ?x52457 l_0_14_17)))
 (let ((?x53554 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_16) ?x53409) ?x53412) ?x53416) ?x53420)))
 (let ((?x53567 (- (- (- (- (- (- (- ?x53554 ?x53555) ?x53557) ?x53559) ?x53561) ?x53563) ?x53565) ?x53424)))
 (let ((?x53577 (+ (+ (+ (- (- (- (- ?x53567 ?x53428) ?x53432) ?x53436) ?x53440) ?x53572) ?x53574) ?x53576)))
 (= (+ (+ (+ ?x53577 ?x53578) ?x53580) ?x53582) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x53662 (* (* 2.0 l_0_14_49) l_0_14_55)))
 (let ((?x53659 (* (* 2.0 l_0_14_48) l_0_14_54)))
 (let ((?x53656 (* (* 2.0 l_0_14_47) l_0_14_53)))
 (let ((?x53653 (* (* 2.0 l_0_14_46) l_0_14_52)))
 (let ((?x53650 (* (* 2.0 l_0_14_45) l_0_14_51)))
 (let ((?x53647 (* (* 2.0 l_0_14_44) l_0_14_50)))
 (let ((?x53439 (* 2.0 l_0_14_43)))
 (let ((?x53517 (* ?x53439 l_0_14_54)))
 (let ((?x53435 (* 2.0 l_0_14_42)))
 (let ((?x53515 (* ?x53435 l_0_14_53)))
 (let ((?x53431 (* 2.0 l_0_14_41)))
 (let ((?x53513 (* ?x53431 l_0_14_52)))
 (let ((?x53427 (* 2.0 l_0_14_40)))
 (let ((?x53511 (* ?x53427 l_0_14_51)))
 (let ((?x53423 (* 2.0 l_0_14_39)))
 (let ((?x53509 (* ?x53423 l_0_14_50)))
 (let ((?x53639 (* (* 2.0 l_0_14_21) l_0_14_27)))
 (let ((?x53636 (* (* 2.0 l_0_14_20) l_0_14_26)))
 (let ((?x53633 (* (* 2.0 l_0_14_19) l_0_14_25)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53630 (* ?x53160 l_0_14_24)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53628 (* ?x52914 l_0_14_23)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53626 (* ?x52911 l_0_14_22)))
 (let ((?x53419 (* 2.0 l_0_14_15)))
 (let ((?x53507 (* ?x53419 l_0_14_26)))
 (let ((?x53415 (* 2.0 l_0_14_14)))
 (let ((?x53505 (* ?x53415 l_0_14_25)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53503 (* ?x6011 l_0_14_24)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53501 (* ?x52457 l_0_14_23)))
 (let ((?x53625 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_22) ?x53501) ?x53503) ?x53505) ?x53507)))
 (let ((?x53641 (- (- (- (- (- (- (- ?x53625 ?x53626) ?x53628) ?x53630) ?x53633) ?x53636) ?x53639) ?x53509)))
 (let ((?x53654 (+ (+ (+ (- (- (- (- ?x53641 ?x53511) ?x53513) ?x53515) ?x53517) ?x53647) ?x53650) ?x53653)))
 (= (+ (+ (+ ?x53654 ?x53656) ?x53659) ?x53662) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x53708 (* l_0_14_56 l_0_14_56)))
 (let ((?x53706 (* l_0_14_55 l_0_14_55)))
 (let ((?x53704 (* l_0_14_54 l_0_14_54)))
 (let ((?x53702 (* l_0_14_53 l_0_14_53)))
 (let ((?x53700 (* l_0_14_52 l_0_14_52)))
 (let ((?x53698 (* l_0_14_51 l_0_14_51)))
 (let ((?x53696 (* l_0_14_50 l_0_14_50)))
 (let ((?x53694 (* l_0_14_28 l_0_14_28)))
 (let ((?x53692 (* l_0_14_27 l_0_14_27)))
 (let ((?x53690 (* l_0_14_26 l_0_14_26)))
 (let ((?x34522 (* l_0_14_25 l_0_14_25)))
 (let ((?x34593 (* l_0_14_24 l_0_14_24)))
 (let ((?x34582 (- (- (* (- l_0_14_22) l_0_14_22) (* l_0_14_23 l_0_14_23)) ?x34593)))
 (let ((?x53701 (+ (+ (+ (- (- (- (- ?x34582 ?x34522) ?x53690) ?x53692) ?x53694) ?x53696) ?x53698) ?x53700)))
 (= (+ (+ (+ (+ ?x53701 ?x53702) ?x53704) ?x53706) ?x53708) 0.0))))))))))))))))
(assert
 (let ((?x52394 (* l_0_14_29 l_0_14_29)))
 (let ((?x32949 (* l_0_14_1 l_0_14_1)))
 (let ((?x53722 (- ?x32949 ?x52394)))
 (let ((?x53737 (- (+ ?x53722 (* (* 2.0 l_0_14_57) l_0_14_63)) (* (* 2.0 l_0_14_85) l_0_14_91))))
 (= ?x53737 0.0))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52428 (* ?x52427 l_0_14_30)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x34655 (* ?x52613 l_0_14_2)))
 (let ((?x53746 (+ (+ ?x34655 (* (* 2.0 l_0_14_147) l_0_14_162)) (* (* 2.0 l_0_14_148) l_0_14_163))))
 (let ((?x53750 (+ (+ ?x53746 (* (* 2.0 l_0_14_149) l_0_14_164)) (* (* 2.0 l_0_14_150) l_0_14_165))))
 (let ((?x53754 (- (- ?x53750 (* (* 2.0 l_0_14_175) l_0_14_190)) (* (* 2.0 l_0_14_176) l_0_14_191))))
 (let ((?x53758 (- (- ?x53754 (* (* 2.0 l_0_14_177) l_0_14_192)) (* (* 2.0 l_0_14_178) l_0_14_193))))
 (let ((?x53763 (+ (+ (- ?x53758 ?x52428) (* (* 2.0 l_0_14_58) l_0_14_63)) (* (* 2.0 l_0_14_59) l_0_14_64))))
 (let ((?x53767 (- (- ?x53763 (* (* 2.0 l_0_14_86) l_0_14_91)) (* (* 2.0 l_0_14_87) l_0_14_92))))
 (= ?x53767 0.0))))))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53346 (* ?x53259 l_0_14_53)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53344 (* ?x53256 l_0_14_52)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53342 (* ?x53253 l_0_14_51)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53340 (* ?x53250 l_0_14_50)))
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52478 (* ?x52427 l_0_14_32)))
 (let ((?x53193 (* 2.0 l_0_14_24)))
 (let ((?x53336 (* ?x53193 l_0_14_9)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53334 (* ?x53040 l_0_14_8)))
 (let ((?x53331 (* 2.0 l_0_14_22)))
 (let ((?x53332 (* ?x53331 l_0_14_7)))
 (let ((?x53273 (* 2.0 l_0_14_10)))
 (let ((?x53790 (* ?x53273 l_0_14_25)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x53789 (* ?x52613 l_0_14_4)))
 (let ((?x53797 (- (- (- (+ (+ (+ (+ ?x53789 ?x53790) ?x53332) ?x53334) ?x53336) ?x52478) ?x53340) ?x53342)))
 (let ((?x53805 (+ (+ (- (- ?x53797 ?x53344) ?x53346) (* (* 2.0 l_0_14_60) l_0_14_63)) (* (* 2.0 l_0_14_61) l_0_14_64))))
 (let ((?x53811 (- (+ ?x53805 (* (* 2.0 l_0_14_62) l_0_14_65)) (* (* 2.0 l_0_14_88) l_0_14_91))))
 (let ((?x53817 (- (- ?x53811 (* (* 2.0 l_0_14_89) l_0_14_92)) (* (* 2.0 l_0_14_90) l_0_14_93))))
 (= ?x53817 0.0))))))))))))))))))))))))))
(assert
 (let ((?x53844 (* l_0_14_94 l_0_14_94)))
 (let ((?x53842 (* l_0_14_93 l_0_14_93)))
 (let ((?x53840 (* l_0_14_92 l_0_14_92)))
 (let ((?x53838 (* l_0_14_91 l_0_14_91)))
 (let ((?x53836 (* l_0_14_66 l_0_14_66)))
 (let ((?x53834 (* l_0_14_65 l_0_14_65)))
 (let ((?x53832 (* l_0_14_64 l_0_14_64)))
 (let ((?x53830 (* l_0_14_63 l_0_14_63)))
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52555 (* ?x52427 l_0_14_35)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x34881 (* ?x52613 l_0_14_7)))
 (let ((?x34882 (- ?x34881 ?x52555)))
 (let ((?x53843 (- (- (- (+ (+ (+ (+ ?x34882 ?x53830) ?x53832) ?x53834) ?x53836) ?x53838) ?x53840) ?x53842)))
 (= (- ?x53843 ?x53844) 0.0))))))))))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52596 (* ?x52427 l_0_14_39)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x52614 (* ?x52613 l_0_14_11)))
 (let ((?x53857 (- ?x52614 ?x52596)))
 (let ((?x53863 (+ (+ ?x53857 (* (* 2.0 l_0_14_63) l_0_14_67)) (* (* 2.0 l_0_14_64) l_0_14_68))))
 (let ((?x53869 (+ (+ ?x53863 (* (* 2.0 l_0_14_65) l_0_14_69)) (* (* 2.0 l_0_14_66) l_0_14_70))))
 (let ((?x53875 (- (- ?x53869 (* (* 2.0 l_0_14_91) l_0_14_95)) (* (* 2.0 l_0_14_92) l_0_14_96))))
 (let ((?x53881 (- (- ?x53875 (* (* 2.0 l_0_14_93) l_0_14_97)) (* (* 2.0 l_0_14_94) l_0_14_98))))
 (= ?x53881 0.0)))))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52648 (* ?x52427 l_0_14_44)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x52615 (* ?x52613 l_0_14_16)))
 (let ((?x53909 (- (- ?x52615 (* (* 2.0 l_0_14_100) l_0_14_91)) (* (* 2.0 l_0_14_101) l_0_14_92))))
 (let ((?x53915 (- (- ?x53909 (* (* 2.0 l_0_14_102) l_0_14_93)) (* (* 2.0 l_0_14_103) l_0_14_94))))
 (let ((?x53920 (+ (+ (- ?x53915 ?x52648) (* (* 2.0 l_0_14_63) l_0_14_72)) (* (* 2.0 l_0_14_64) l_0_14_73))))
 (let ((?x53924 (+ (+ ?x53920 (* (* 2.0 l_0_14_65) l_0_14_74)) (* (* 2.0 l_0_14_66) l_0_14_75))))
 (= ?x53924 0.0))))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52705 (* ?x52427 l_0_14_50)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x53935 (* ?x52613 l_0_14_22)))
 (let ((?x53941 (- (- ?x53935 (* (* 2.0 l_0_14_106) l_0_14_91)) (* (* 2.0 l_0_14_107) l_0_14_92))))
 (let ((?x53947 (- (- ?x53941 (* (* 2.0 l_0_14_108) l_0_14_93)) (* (* 2.0 l_0_14_109) l_0_14_94))))
 (let ((?x53952 (+ (+ (- ?x53947 ?x52705) (* (* 2.0 l_0_14_63) l_0_14_78)) (* (* 2.0 l_0_14_64) l_0_14_79))))
 (let ((?x53956 (+ (+ ?x53952 (* (* 2.0 l_0_14_65) l_0_14_80)) (* (* 2.0 l_0_14_66) l_0_14_81))))
 (= ?x53956 0.0))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52783 (* ?x52483 l_0_14_33)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52781 (* ?x52480 l_0_14_32)))
 (let ((?x52778 (* 2.0 l_0_14_3)))
 (let ((?x52779 (* ?x52778 l_0_14_5)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x52758 (* ?x52757 l_0_14_4)))
 (= (- (- (+ ?x52758 ?x52779) ?x52781) ?x52783) 0.0))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52844 (* ?x52483 l_0_14_36)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52842 (* ?x52480 l_0_14_35)))
 (let ((?x52778 (* 2.0 l_0_14_3)))
 (let ((?x52840 (* ?x52778 l_0_14_8)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x52822 (* ?x52757 l_0_14_7)))
 (= (- (- (+ ?x52822 ?x52840) ?x52842) ?x52844) 0.0))))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53346 (* ?x53259 l_0_14_53)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53344 (* ?x53256 l_0_14_52)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53342 (* ?x53253 l_0_14_51)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53340 (* ?x53250 l_0_14_50)))
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52951 (* ?x52483 l_0_14_45)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52948 (* ?x52480 l_0_14_44)))
 (let ((?x53193 (* 2.0 l_0_14_24)))
 (let ((?x53336 (* ?x53193 l_0_14_9)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53334 (* ?x53040 l_0_14_8)))
 (let ((?x53331 (* 2.0 l_0_14_22)))
 (let ((?x53332 (* ?x53331 l_0_14_7)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x52915 (* ?x52914 l_0_14_3)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x52912 (* ?x52911 l_0_14_2)))
 (let ((?x53273 (* 2.0 l_0_14_10)))
 (let ((?x53790 (* ?x53273 l_0_14_25)))
 (let ((?x53988 (- (- (+ (+ (+ (+ (+ ?x53790 ?x52912) ?x52915) ?x53332) ?x53334) ?x53336) ?x52948) ?x52951)))
 (= (- (- (- (- ?x53988 ?x53340) ?x53342) ?x53344) ?x53346) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x53055 (* ?x52483 l_0_14_51)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x53053 (* ?x52480 l_0_14_50)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53041 (* ?x53040 l_0_14_3)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x53028 (* ?x52757 l_0_14_22)))
 (= (- (- (+ ?x53028 ?x53041) ?x53053) ?x53055) 0.0))))))))))
(assert
 (let ((?x53088 (* l_0_14_6 l_0_14_6)))
 (let ((?x53086 (* l_0_14_5 l_0_14_5)))
 (let ((?x53084 (* l_0_14_4 l_0_14_4)))
 (let ((?x53082 (* l_0_14_34 l_0_14_34)))
 (let ((?x7182 (- (- (* (- l_0_14_32) l_0_14_32) (* l_0_14_33 l_0_14_33)) ?x53082)))
 (= (+ (+ (+ ?x7182 ?x53084) ?x53086) ?x53088) 0.0)))))))
(assert
 (let ((?x53111 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x53108 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x53105 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53102 (* ?x53101 l_0_14_37)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53099 (* ?x53098 l_0_14_36)))
 (let ((?x35178 (+ (+ (- (- (* (* (- 2.0) l_0_14_32) l_0_14_35) ?x53099) ?x53102) ?x53105) ?x53108)))
 (= (+ ?x35178 ?x53111) 0.0))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53137 (* ?x53101 l_0_14_41)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53135 (* ?x53098 l_0_14_40)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x34017 (* ?x34011 l_0_14_39)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x5955 (* ?x6011 l_0_14_6)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x34003 (* ?x52457 l_0_14_5)))
 (let ((?x53155 (+ (+ (* (* 2.0 l_0_14_11) l_0_14_4) ?x34003) ?x5955)))
 (= (- (- (- ?x53155 ?x34017) ?x53135) ?x53137) 0.0)))))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53170 (* ?x53101 l_0_14_46)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53167 (* ?x53098 l_0_14_45)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x53164 (* ?x34011 l_0_14_44)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53161 (* ?x53160 l_0_14_6)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53158 (* ?x52914 l_0_14_5)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53156 (* ?x52911 l_0_14_4)))
 (= (- (- (- (+ (+ ?x53156 ?x53158) ?x53161) ?x53164) ?x53167) ?x53170) 0.0))))))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53200 (* ?x53101 l_0_14_52)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53198 (* ?x53098 l_0_14_51)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x53196 (* ?x34011 l_0_14_50)))
 (let ((?x53193 (* 2.0 l_0_14_24)))
 (let ((?x53194 (* ?x53193 l_0_14_6)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53191 (* ?x53040 l_0_14_5)))
 (let ((?x7252 (- (- (+ (+ (* (* 2.0 l_0_14_22) l_0_14_4) ?x53191) ?x53194) ?x53196) ?x53198)))
 (let ((?x35137 (- ?x7252 ?x53200)))
 (= ?x35137 0.0))))))))))))))
(assert
 (let ((?x53233 (* l_0_14_9 l_0_14_9)))
 (let ((?x53231 (* l_0_14_8 l_0_14_8)))
 (let ((?x53229 (* l_0_14_7 l_0_14_7)))
 (let ((?x53227 (* l_0_14_38 l_0_14_38)))
 (let ((?x53225 (* l_0_14_37 l_0_14_37)))
 (let ((?x53223 (* l_0_14_36 l_0_14_36)))
 (let ((?x35309 (- (- (- (* l_0_14_10 l_0_14_10) (* l_0_14_35 l_0_14_35)) ?x53223) ?x53225)))
 (= (+ (+ (+ (- ?x35309 ?x53227) ?x53229) ?x53231) ?x53233) 0.0)))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53260 (* ?x53259 l_0_14_42)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53257 (* ?x53256 l_0_14_41)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53254 (* ?x53253 l_0_14_40)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53251 (* ?x53250 l_0_14_39)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53248 (* ?x6011 l_0_14_9)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53246 (* ?x52457 l_0_14_8)))
 (let ((?x52454 (* 2.0 l_0_14_11)))
 (let ((?x53244 (* ?x52454 l_0_14_7)))
 (let ((?x53273 (* 2.0 l_0_14_10)))
 (let ((?x53275 (* ?x53273 l_0_14_14)))
 (let ((?x35312 (- (- (- (- (+ (+ (+ ?x53275 ?x53244) ?x53246) ?x53248) ?x53251) ?x53254) ?x53257) ?x53260)))
 (= ?x35312 0.0)))))))))))))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53306 (* ?x53259 l_0_14_47)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53303 (* ?x53256 l_0_14_46)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53300 (* ?x53253 l_0_14_45)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53297 (* ?x53250 l_0_14_44)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53294 (* ?x53160 l_0_14_9)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53292 (* ?x52914 l_0_14_8)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53290 (* ?x52911 l_0_14_7)))
 (let ((?x53273 (* 2.0 l_0_14_10)))
 (let ((?x53277 (* ?x53273 l_0_14_19)))
 (let ((?x7443 (- (- (- (- (+ (+ (+ ?x53277 ?x53290) ?x53292) ?x53294) ?x53297) ?x53300) ?x53303) ?x53306)))
 (= ?x7443 0.0)))))))))))))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53346 (* ?x53259 l_0_14_53)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53344 (* ?x53256 l_0_14_52)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53342 (* ?x53253 l_0_14_51)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53340 (* ?x53250 l_0_14_50)))
 (let ((?x53193 (* 2.0 l_0_14_24)))
 (let ((?x53336 (* ?x53193 l_0_14_9)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53334 (* ?x53040 l_0_14_8)))
 (let ((?x53331 (* 2.0 l_0_14_22)))
 (let ((?x53332 (* ?x53331 l_0_14_7)))
 (let ((?x53273 (* 2.0 l_0_14_10)))
 (let ((?x53790 (* ?x53273 l_0_14_25)))
 (let ((?x35399 (- (- (- (- (+ (+ (+ ?x53790 ?x53332) ?x53334) ?x53336) ?x53340) ?x53342) ?x53344) ?x53346)))
 (= ?x35399 0.0)))))))))))))))))))
(assert
 (let ((?x53394 (* l_0_14_43 l_0_14_43)))
 (let ((?x53392 (* l_0_14_42 l_0_14_42)))
 (let ((?x53390 (* l_0_14_41 l_0_14_41)))
 (let ((?x53388 (* l_0_14_40 l_0_14_40)))
 (let ((?x53386 (* l_0_14_39 l_0_14_39)))
 (let ((?x53384 (* l_0_14_15 l_0_14_15)))
 (let ((?x53382 (* l_0_14_14 l_0_14_14)))
 (let ((?x53373 (* l_0_14_13 l_0_14_13)))
 (let ((?x54015 (+ (+ (+ (* l_0_14_11 l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x53373) ?x53382)))
 (= (- (- (- (- (- (+ ?x54015 ?x53384) ?x53386) ?x53388) ?x53390) ?x53392) ?x53394) 0.0)))))))))))
(assert
 (let ((?x53439 (* 2.0 l_0_14_43)))
 (let ((?x53440 (* ?x53439 l_0_14_48)))
 (let ((?x53435 (* 2.0 l_0_14_42)))
 (let ((?x53436 (* ?x53435 l_0_14_47)))
 (let ((?x53431 (* 2.0 l_0_14_41)))
 (let ((?x53432 (* ?x53431 l_0_14_46)))
 (let ((?x53427 (* 2.0 l_0_14_40)))
 (let ((?x53428 (* ?x53427 l_0_14_45)))
 (let ((?x53423 (* 2.0 l_0_14_39)))
 (let ((?x53424 (* ?x53423 l_0_14_44)))
 (let ((?x53419 (* 2.0 l_0_14_15)))
 (let ((?x53420 (* ?x53419 l_0_14_20)))
 (let ((?x53415 (* 2.0 l_0_14_14)))
 (let ((?x53416 (* ?x53415 l_0_14_19)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53412 (* ?x6011 l_0_14_18)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53409 (* ?x52457 l_0_14_17)))
 (let ((?x53554 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_16) ?x53409) ?x53412) ?x53416) ?x53420)))
 (= (- (- (- (- (- ?x53554 ?x53424) ?x53428) ?x53432) ?x53436) ?x53440) 0.0)))))))))))))))))))))
(assert
 (let ((?x53439 (* 2.0 l_0_14_43)))
 (let ((?x53517 (* ?x53439 l_0_14_54)))
 (let ((?x53435 (* 2.0 l_0_14_42)))
 (let ((?x53515 (* ?x53435 l_0_14_53)))
 (let ((?x53431 (* 2.0 l_0_14_41)))
 (let ((?x53513 (* ?x53431 l_0_14_52)))
 (let ((?x53427 (* 2.0 l_0_14_40)))
 (let ((?x53511 (* ?x53427 l_0_14_51)))
 (let ((?x53423 (* 2.0 l_0_14_39)))
 (let ((?x53509 (* ?x53423 l_0_14_50)))
 (let ((?x53419 (* 2.0 l_0_14_15)))
 (let ((?x53507 (* ?x53419 l_0_14_26)))
 (let ((?x53415 (* 2.0 l_0_14_14)))
 (let ((?x53505 (* ?x53415 l_0_14_25)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53503 (* ?x6011 l_0_14_24)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53501 (* ?x52457 l_0_14_23)))
 (let ((?x53625 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_22) ?x53501) ?x53503) ?x53505) ?x53507)))
 (let ((?x54054 (- (- (- (- (- ?x53625 ?x53509) ?x53511) ?x53513) ?x53515) ?x53517)))
 (= ?x54054 0.0))))))))))))))))))))))
(assert
 (let ((?x53582 (* l_0_14_49 l_0_14_49)))
 (let ((?x53580 (* l_0_14_48 l_0_14_48)))
 (let ((?x53578 (* l_0_14_47 l_0_14_47)))
 (let ((?x53576 (* l_0_14_46 l_0_14_46)))
 (let ((?x53574 (* l_0_14_45 l_0_14_45)))
 (let ((?x53572 (* l_0_14_44 l_0_14_44)))
 (let ((?x53565 (* l_0_14_21 l_0_14_21)))
 (let ((?x53563 (* l_0_14_20 l_0_14_20)))
 (let ((?x53561 (* l_0_14_19 l_0_14_19)))
 (let ((?x53559 (* l_0_14_18 l_0_14_18)))
 (let ((?x54068 (+ (+ (+ (* l_0_14_16 l_0_14_16) (* l_0_14_17 l_0_14_17)) ?x53559) ?x53561)))
 (let ((?x54075 (- (- (- (- (- (+ (+ ?x54068 ?x53563) ?x53565) ?x53572) ?x53574) ?x53576) ?x53578) ?x53580)))
 (= (- ?x54075 ?x53582) 0.0))))))))))))))
(assert
 (let ((?x53662 (* (* 2.0 l_0_14_49) l_0_14_55)))
 (let ((?x53659 (* (* 2.0 l_0_14_48) l_0_14_54)))
 (let ((?x53656 (* (* 2.0 l_0_14_47) l_0_14_53)))
 (let ((?x53653 (* (* 2.0 l_0_14_46) l_0_14_52)))
 (let ((?x53650 (* (* 2.0 l_0_14_45) l_0_14_51)))
 (let ((?x53647 (* (* 2.0 l_0_14_44) l_0_14_50)))
 (let ((?x53639 (* (* 2.0 l_0_14_21) l_0_14_27)))
 (let ((?x53636 (* (* 2.0 l_0_14_20) l_0_14_26)))
 (let ((?x53633 (* (* 2.0 l_0_14_19) l_0_14_25)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53630 (* ?x53160 l_0_14_24)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53628 (* ?x52914 l_0_14_23)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53626 (* ?x52911 l_0_14_22)))
 (let ((?x54081 (- (- (+ (+ (+ (+ (+ ?x53626 ?x53628) ?x53630) ?x53633) ?x53636) ?x53639) ?x53647) ?x53650)))
 (= (- (- (- (- ?x54081 ?x53653) ?x53656) ?x53659) ?x53662) 0.0))))))))))))))))))
(assert
 (let ((?x53708 (* l_0_14_56 l_0_14_56)))
 (let ((?x53706 (* l_0_14_55 l_0_14_55)))
 (let ((?x53704 (* l_0_14_54 l_0_14_54)))
 (let ((?x53702 (* l_0_14_53 l_0_14_53)))
 (let ((?x53700 (* l_0_14_52 l_0_14_52)))
 (let ((?x53698 (* l_0_14_51 l_0_14_51)))
 (let ((?x53696 (* l_0_14_50 l_0_14_50)))
 (let ((?x53694 (* l_0_14_28 l_0_14_28)))
 (let ((?x53692 (* l_0_14_27 l_0_14_27)))
 (let ((?x53690 (* l_0_14_26 l_0_14_26)))
 (let ((?x34522 (* l_0_14_25 l_0_14_25)))
 (let ((?x34593 (* l_0_14_24 l_0_14_24)))
 (let ((?x35592 (+ (+ (+ (* l_0_14_22 l_0_14_22) (* l_0_14_23 l_0_14_23)) ?x34593) ?x34522)))
 (let ((?x35587 (- (- (- (- (+ (+ (+ ?x35592 ?x53690) ?x53692) ?x53694) ?x53696) ?x53698) ?x53700) ?x53702)))
 (= (- (- (- ?x35587 ?x53704) ?x53706) ?x53708) 0.0))))))))))))))))
(assert
 (let ((?x52394 (* l_0_14_29 l_0_14_29)))
 (let ((?x32949 (* l_0_14_1 l_0_14_1)))
 (let ((?x53722 (- ?x32949 ?x52394)))
 (= ?x53722 0.0)))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52428 (* ?x52427 l_0_14_30)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x34655 (* ?x52613 l_0_14_2)))
 (let ((?x35705 (- (+ ?x34655 (* (* 2.0 l_0_14_141) l_0_14_144)) (* (* 2.0 l_0_14_169) l_0_14_172))))
 (= (- ?x35705 ?x52428) 0.0)))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52478 (* ?x52427 l_0_14_32)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x53789 (* ?x52613 l_0_14_4)))
 (= (- ?x53789 ?x52478) 0.0))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52555 (* ?x52427 l_0_14_35)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x34881 (* ?x52613 l_0_14_7)))
 (let ((?x34882 (- ?x34881 ?x52555)))
 (= ?x34882 0.0)))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52596 (* ?x52427 l_0_14_39)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x52614 (* ?x52613 l_0_14_11)))
 (let ((?x53857 (- ?x52614 ?x52596)))
 (= ?x53857 0.0)))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52648 (* ?x52427 l_0_14_44)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x52615 (* ?x52613 l_0_14_16)))
 (= (- ?x52615 ?x52648) 0.0))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52705 (* ?x52427 l_0_14_50)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x53935 (* ?x52613 l_0_14_22)))
 (let ((?x35633 (- (+ (- ?x53935 ?x52705) (* (* 2.0 l_0_14_57) l_0_14_60)) (* (* 2.0 l_0_14_85) l_0_14_88))))
 (= ?x35633 0.0)))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52783 (* ?x52483 l_0_14_33)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52781 (* ?x52480 l_0_14_32)))
 (let ((?x52778 (* 2.0 l_0_14_3)))
 (let ((?x52779 (* ?x52778 l_0_14_5)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x52758 (* ?x52757 l_0_14_4)))
 (let ((?x54106 (* l_0_14_174 l_0_14_174)))
 (let ((?x54104 (* l_0_14_173 l_0_14_173)))
 (let ((?x54102 (* l_0_14_172 l_0_14_172)))
 (let ((?x54100 (* l_0_14_146 l_0_14_146)))
 (let ((?x54101 (+ (+ (* l_0_14_144 l_0_14_144) (* l_0_14_145 l_0_14_145)) ?x54100)))
 (let ((?x54111 (- (- (+ (+ (- (- (- ?x54101 ?x54102) ?x54104) ?x54106) ?x52758) ?x52779) ?x52781) ?x52783)))
 (= ?x54111 0.0))))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52844 (* ?x52483 l_0_14_36)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52842 (* ?x52480 l_0_14_35)))
 (let ((?x52778 (* 2.0 l_0_14_3)))
 (let ((?x52840 (* ?x52778 l_0_14_8)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x52822 (* ?x52757 l_0_14_7)))
 (let ((?x54128 (+ (* (* 2.0 l_0_14_144) l_0_14_147) (* (* 2.0 l_0_14_145) l_0_14_148))))
 (let ((?x54132 (- (+ ?x54128 (* (* 2.0 l_0_14_146) l_0_14_149)) (* (* 2.0 l_0_14_172) l_0_14_175))))
 (let ((?x54136 (- (- ?x54132 (* (* 2.0 l_0_14_173) l_0_14_176)) (* (* 2.0 l_0_14_174) l_0_14_177))))
 (= (- (- (+ (+ ?x54136 ?x52822) ?x52840) ?x52842) ?x52844) 0.0)))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52951 (* ?x52483 l_0_14_45)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52948 (* ?x52480 l_0_14_44)))
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52478 (* ?x52427 l_0_14_32)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x52915 (* ?x52914 l_0_14_3)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x52912 (* ?x52911 l_0_14_2)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x53789 (* ?x52613 l_0_14_4)))
 (let ((?x54155 (+ (+ ?x53789 (* (* 2.0 l_0_14_144) l_0_14_156)) (* (* 2.0 l_0_14_145) l_0_14_157))))
 (let ((?x54161 (- (+ (+ (+ ?x54155 (* (* 2.0 l_0_14_146) l_0_14_158)) ?x52912) ?x52915) (* (* 2.0 l_0_14_172) l_0_14_184))))
 (let ((?x54165 (- (- ?x54161 (* (* 2.0 l_0_14_173) l_0_14_185)) (* (* 2.0 l_0_14_174) l_0_14_186))))
 (= (- (- (- ?x54165 ?x52478) ?x52948) ?x52951) 0.0)))))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x53055 (* ?x52483 l_0_14_51)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x53053 (* ?x52480 l_0_14_50)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53041 (* ?x53040 l_0_14_3)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x53028 (* ?x52757 l_0_14_22)))
 (let ((?x54200 (+ (* (* 2.0 l_0_14_144) l_0_14_162) (* (* 2.0 l_0_14_145) l_0_14_163))))
 (let ((?x54204 (- (+ ?x54200 (* (* 2.0 l_0_14_146) l_0_14_164)) (* (* 2.0 l_0_14_172) l_0_14_190))))
 (let ((?x54208 (- (- ?x54204 (* (* 2.0 l_0_14_173) l_0_14_191)) (* (* 2.0 l_0_14_174) l_0_14_192))))
 (let ((?x54214 (+ (- (- (+ (+ ?x54208 ?x53028) ?x53041) ?x53053) ?x53055) (* (* 2.0 l_0_14_58) l_0_14_60))))
 (let ((?x54218 (- (+ ?x54214 (* (* 2.0 l_0_14_59) l_0_14_61)) (* (* 2.0 l_0_14_86) l_0_14_88))))
 (= (- ?x54218 (* (* 2.0 l_0_14_87) l_0_14_89)) 0.0)))))))))))))))
(assert
 (let ((?x53088 (* l_0_14_6 l_0_14_6)))
 (let ((?x53086 (* l_0_14_5 l_0_14_5)))
 (let ((?x53084 (* l_0_14_4 l_0_14_4)))
 (let ((?x53082 (* l_0_14_34 l_0_14_34)))
 (let ((?x7182 (- (- (* (- l_0_14_32) l_0_14_32) (* l_0_14_33 l_0_14_33)) ?x53082)))
 (= (+ (+ (+ ?x7182 ?x53084) ?x53086) ?x53088) 0.0)))))))
(assert
 (let ((?x53111 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x53108 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x53105 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53102 (* ?x53101 l_0_14_37)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53099 (* ?x53098 l_0_14_36)))
 (let ((?x35178 (+ (+ (- (- (* (* (- 2.0) l_0_14_32) l_0_14_35) ?x53099) ?x53102) ?x53105) ?x53108)))
 (= (+ ?x35178 ?x53111) 0.0))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53137 (* ?x53101 l_0_14_41)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53135 (* ?x53098 l_0_14_40)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x34017 (* ?x34011 l_0_14_39)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x5955 (* ?x6011 l_0_14_6)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x34003 (* ?x52457 l_0_14_5)))
 (let ((?x53155 (+ (+ (* (* 2.0 l_0_14_11) l_0_14_4) ?x34003) ?x5955)))
 (= (- (- (- ?x53155 ?x34017) ?x53135) ?x53137) 0.0)))))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53170 (* ?x53101 l_0_14_46)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53167 (* ?x53098 l_0_14_45)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x53164 (* ?x34011 l_0_14_44)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53161 (* ?x53160 l_0_14_6)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53158 (* ?x52914 l_0_14_5)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53156 (* ?x52911 l_0_14_4)))
 (= (- (- (- (+ (+ ?x53156 ?x53158) ?x53161) ?x53164) ?x53167) ?x53170) 0.0))))))))))))))
(assert
 (let ((?x54265 (* l_0_14_90 l_0_14_90)))
 (let ((?x54263 (* l_0_14_89 l_0_14_89)))
 (let ((?x54261 (* l_0_14_88 l_0_14_88)))
 (let ((?x54259 (* l_0_14_62 l_0_14_62)))
 (let ((?x54257 (* l_0_14_61 l_0_14_61)))
 (let ((?x8060 (* l_0_14_60 l_0_14_60)))
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53200 (* ?x53101 l_0_14_52)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53198 (* ?x53098 l_0_14_51)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x53196 (* ?x34011 l_0_14_50)))
 (let ((?x53193 (* 2.0 l_0_14_24)))
 (let ((?x53194 (* ?x53193 l_0_14_6)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53191 (* ?x53040 l_0_14_5)))
 (let ((?x7252 (- (- (+ (+ (* (* 2.0 l_0_14_22) l_0_14_4) ?x53191) ?x53194) ?x53196) ?x53198)))
 (let ((?x35137 (- ?x7252 ?x53200)))
 (= (- (- (- (+ (+ (+ ?x35137 ?x8060) ?x54257) ?x54259) ?x54261) ?x54263) ?x54265) 0.0))))))))))))))))))))
(assert
 (let ((?x53233 (* l_0_14_9 l_0_14_9)))
 (let ((?x53231 (* l_0_14_8 l_0_14_8)))
 (let ((?x53229 (* l_0_14_7 l_0_14_7)))
 (let ((?x53227 (* l_0_14_38 l_0_14_38)))
 (let ((?x53225 (* l_0_14_37 l_0_14_37)))
 (let ((?x53223 (* l_0_14_36 l_0_14_36)))
 (let ((?x35309 (- (- (- (* l_0_14_10 l_0_14_10) (* l_0_14_35 l_0_14_35)) ?x53223) ?x53225)))
 (= (+ (+ (+ (- ?x35309 ?x53227) ?x53229) ?x53231) ?x53233) 0.0)))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53260 (* ?x53259 l_0_14_42)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53257 (* ?x53256 l_0_14_41)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53254 (* ?x53253 l_0_14_40)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53251 (* ?x53250 l_0_14_39)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53248 (* ?x6011 l_0_14_9)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53246 (* ?x52457 l_0_14_8)))
 (let ((?x52454 (* 2.0 l_0_14_11)))
 (let ((?x53244 (* ?x52454 l_0_14_7)))
 (let ((?x53273 (* 2.0 l_0_14_10)))
 (let ((?x53275 (* ?x53273 l_0_14_14)))
 (let ((?x35312 (- (- (- (- (+ (+ (+ ?x53275 ?x53244) ?x53246) ?x53248) ?x53251) ?x53254) ?x53257) ?x53260)))
 (= ?x35312 0.0)))))))))))))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53306 (* ?x53259 l_0_14_47)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53303 (* ?x53256 l_0_14_46)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53300 (* ?x53253 l_0_14_45)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53297 (* ?x53250 l_0_14_44)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53294 (* ?x53160 l_0_14_9)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53292 (* ?x52914 l_0_14_8)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53290 (* ?x52911 l_0_14_7)))
 (let ((?x53273 (* 2.0 l_0_14_10)))
 (let ((?x53277 (* ?x53273 l_0_14_19)))
 (let ((?x7443 (- (- (- (- (+ (+ (+ ?x53277 ?x53290) ?x53292) ?x53294) ?x53297) ?x53300) ?x53303) ?x53306)))
 (= ?x7443 0.0)))))))))))))))))))
(assert
 (let ((?x53394 (* l_0_14_43 l_0_14_43)))
 (let ((?x53392 (* l_0_14_42 l_0_14_42)))
 (let ((?x53390 (* l_0_14_41 l_0_14_41)))
 (let ((?x53388 (* l_0_14_40 l_0_14_40)))
 (let ((?x53386 (* l_0_14_39 l_0_14_39)))
 (let ((?x53384 (* l_0_14_15 l_0_14_15)))
 (let ((?x53382 (* l_0_14_14 l_0_14_14)))
 (let ((?x53373 (* l_0_14_13 l_0_14_13)))
 (let ((?x54015 (+ (+ (+ (* l_0_14_11 l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x53373) ?x53382)))
 (= (- (- (- (- (- (+ ?x54015 ?x53384) ?x53386) ?x53388) ?x53390) ?x53392) ?x53394) 0.0)))))))))))
(assert
 (let ((?x53439 (* 2.0 l_0_14_43)))
 (let ((?x53440 (* ?x53439 l_0_14_48)))
 (let ((?x53435 (* 2.0 l_0_14_42)))
 (let ((?x53436 (* ?x53435 l_0_14_47)))
 (let ((?x53431 (* 2.0 l_0_14_41)))
 (let ((?x53432 (* ?x53431 l_0_14_46)))
 (let ((?x53427 (* 2.0 l_0_14_40)))
 (let ((?x53428 (* ?x53427 l_0_14_45)))
 (let ((?x53423 (* 2.0 l_0_14_39)))
 (let ((?x53424 (* ?x53423 l_0_14_44)))
 (let ((?x53419 (* 2.0 l_0_14_15)))
 (let ((?x53420 (* ?x53419 l_0_14_20)))
 (let ((?x53415 (* 2.0 l_0_14_14)))
 (let ((?x53416 (* ?x53415 l_0_14_19)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53412 (* ?x6011 l_0_14_18)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53409 (* ?x52457 l_0_14_17)))
 (let ((?x53554 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_16) ?x53409) ?x53412) ?x53416) ?x53420)))
 (= (- (- (- (- (- ?x53554 ?x53424) ?x53428) ?x53432) ?x53436) ?x53440) 0.0)))))))))))))))))))))
(assert
 (let ((?x53439 (* 2.0 l_0_14_43)))
 (let ((?x53517 (* ?x53439 l_0_14_54)))
 (let ((?x53435 (* 2.0 l_0_14_42)))
 (let ((?x53515 (* ?x53435 l_0_14_53)))
 (let ((?x53431 (* 2.0 l_0_14_41)))
 (let ((?x53513 (* ?x53431 l_0_14_52)))
 (let ((?x53427 (* 2.0 l_0_14_40)))
 (let ((?x53511 (* ?x53427 l_0_14_51)))
 (let ((?x53423 (* 2.0 l_0_14_39)))
 (let ((?x53509 (* ?x53423 l_0_14_50)))
 (let ((?x53419 (* 2.0 l_0_14_15)))
 (let ((?x53507 (* ?x53419 l_0_14_26)))
 (let ((?x53415 (* 2.0 l_0_14_14)))
 (let ((?x53505 (* ?x53415 l_0_14_25)))
 (let ((?x6011 (* 2.0 l_0_14_13)))
 (let ((?x53503 (* ?x6011 l_0_14_24)))
 (let ((?x52457 (* 2.0 l_0_14_12)))
 (let ((?x53501 (* ?x52457 l_0_14_23)))
 (let ((?x53625 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_22) ?x53501) ?x53503) ?x53505) ?x53507)))
 (let ((?x54054 (- (- (- (- (- ?x53625 ?x53509) ?x53511) ?x53513) ?x53515) ?x53517)))
 (let ((?x54282 (+ (+ ?x54054 (* (* 2.0 l_0_14_60) l_0_14_67)) (* (* 2.0 l_0_14_61) l_0_14_68))))
 (let ((?x54286 (- (+ ?x54282 (* (* 2.0 l_0_14_62) l_0_14_69)) (* (* 2.0 l_0_14_88) l_0_14_95))))
 (let ((?x54290 (- (- ?x54286 (* (* 2.0 l_0_14_89) l_0_14_96)) (* (* 2.0 l_0_14_90) l_0_14_97))))
 (= ?x54290 0.0)))))))))))))))))))))))))
(assert
 (let ((?x53582 (* l_0_14_49 l_0_14_49)))
 (let ((?x53580 (* l_0_14_48 l_0_14_48)))
 (let ((?x53578 (* l_0_14_47 l_0_14_47)))
 (let ((?x53576 (* l_0_14_46 l_0_14_46)))
 (let ((?x53574 (* l_0_14_45 l_0_14_45)))
 (let ((?x53572 (* l_0_14_44 l_0_14_44)))
 (let ((?x53565 (* l_0_14_21 l_0_14_21)))
 (let ((?x53563 (* l_0_14_20 l_0_14_20)))
 (let ((?x53561 (* l_0_14_19 l_0_14_19)))
 (let ((?x53559 (* l_0_14_18 l_0_14_18)))
 (let ((?x54068 (+ (+ (+ (* l_0_14_16 l_0_14_16) (* l_0_14_17 l_0_14_17)) ?x53559) ?x53561)))
 (let ((?x54075 (- (- (- (- (- (+ (+ ?x54068 ?x53563) ?x53565) ?x53572) ?x53574) ?x53576) ?x53578) ?x53580)))
 (= (- ?x54075 ?x53582) 0.0))))))))))))))
(assert
 (let ((?x53662 (* (* 2.0 l_0_14_49) l_0_14_55)))
 (let ((?x53659 (* (* 2.0 l_0_14_48) l_0_14_54)))
 (let ((?x53656 (* (* 2.0 l_0_14_47) l_0_14_53)))
 (let ((?x53653 (* (* 2.0 l_0_14_46) l_0_14_52)))
 (let ((?x53650 (* (* 2.0 l_0_14_45) l_0_14_51)))
 (let ((?x53647 (* (* 2.0 l_0_14_44) l_0_14_50)))
 (let ((?x53639 (* (* 2.0 l_0_14_21) l_0_14_27)))
 (let ((?x53636 (* (* 2.0 l_0_14_20) l_0_14_26)))
 (let ((?x53633 (* (* 2.0 l_0_14_19) l_0_14_25)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53630 (* ?x53160 l_0_14_24)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53628 (* ?x52914 l_0_14_23)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53626 (* ?x52911 l_0_14_22)))
 (let ((?x54325 (- (* (* (- 2.0) l_0_14_100) l_0_14_88) (* (* 2.0 l_0_14_101) l_0_14_89))))
 (let ((?x54330 (+ (+ (+ (- ?x54325 (* (* 2.0 l_0_14_102) l_0_14_90)) ?x53626) ?x53628) ?x53630)))
 (let ((?x54337 (- (- (- (- (+ (+ (+ ?x54330 ?x53633) ?x53636) ?x53639) ?x53647) ?x53650) ?x53653) ?x53656)))
 (let ((?x54343 (+ (+ (- (- ?x54337 ?x53659) ?x53662) (* (* 2.0 l_0_14_60) l_0_14_72)) (* (* 2.0 l_0_14_61) l_0_14_73))))
 (= (+ ?x54343 (* (* 2.0 l_0_14_62) l_0_14_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x53708 (* l_0_14_56 l_0_14_56)))
 (let ((?x53706 (* l_0_14_55 l_0_14_55)))
 (let ((?x53704 (* l_0_14_54 l_0_14_54)))
 (let ((?x53702 (* l_0_14_53 l_0_14_53)))
 (let ((?x53700 (* l_0_14_52 l_0_14_52)))
 (let ((?x53698 (* l_0_14_51 l_0_14_51)))
 (let ((?x53696 (* l_0_14_50 l_0_14_50)))
 (let ((?x53694 (* l_0_14_28 l_0_14_28)))
 (let ((?x53692 (* l_0_14_27 l_0_14_27)))
 (let ((?x53690 (* l_0_14_26 l_0_14_26)))
 (let ((?x34522 (* l_0_14_25 l_0_14_25)))
 (let ((?x34593 (* l_0_14_24 l_0_14_24)))
 (let ((?x34577 (* l_0_14_23 l_0_14_23)))
 (let ((?x53712 (* l_0_14_22 l_0_14_22)))
 (let ((?x54385 (- (* (* (- 2.0) l_0_14_106) l_0_14_88) (* (* 2.0 l_0_14_107) l_0_14_89))))
 (let ((?x54390 (+ (+ (+ (- ?x54385 (* (* 2.0 l_0_14_108) l_0_14_90)) ?x53712) ?x34577) ?x34593)))
 (let ((?x54397 (- (- (- (+ (+ (+ (+ ?x54390 ?x34522) ?x53690) ?x53692) ?x53694) ?x53696) ?x53698) ?x53700)))
 (let ((?x54403 (+ (- (- (- (- ?x54397 ?x53702) ?x53704) ?x53706) ?x53708) (* (* 2.0 l_0_14_60) l_0_14_78))))
 (let ((?x54407 (+ (+ ?x54403 (* (* 2.0 l_0_14_61) l_0_14_79)) (* (* 2.0 l_0_14_62) l_0_14_80))))
 (= ?x54407 0.0)))))))))))))))))))))
(assert
 (let ((?x52394 (* l_0_14_29 l_0_14_29)))
 (let ((?x54449 (- (+ (* l_0_14_1 l_0_14_1) (* (* 2.0 l_0_14_141) l_0_14_156)) (* (* 2.0 l_0_14_169) l_0_14_184))))
 (= (- ?x54449 ?x52394) 0.0))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52428 (* ?x52427 l_0_14_30)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x34655 (* ?x52613 l_0_14_2)))
 (let ((?x54467 (+ (- ?x34655 (* (* 2.0 l_0_14_113) l_0_14_128)) (* (* 2.0 l_0_14_142) l_0_14_156))))
 (let ((?x54471 (- (+ ?x54467 (* (* 2.0 l_0_14_143) l_0_14_157)) (* (* 2.0 l_0_14_170) l_0_14_184))))
 (let ((?x54475 (- (- ?x54471 (* (* 2.0 l_0_14_171) l_0_14_185)) (* (* 2.0 l_0_14_197) l_0_14_212))))
 (= (- (- ?x54475 (* (* 2.0 l_0_14_225) l_0_14_240)) ?x52428) 0.0)))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52555 (* ?x52427 l_0_14_35)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x34881 (* ?x52613 l_0_14_7)))
 (let ((?x54524 (+ (+ ?x34881 (* (* 2.0 l_0_14_147) l_0_14_156)) (* (* 2.0 l_0_14_148) l_0_14_157))))
 (let ((?x54528 (+ (+ ?x54524 (* (* 2.0 l_0_14_149) l_0_14_158)) (* (* 2.0 l_0_14_150) l_0_14_159))))
 (let ((?x54532 (- (- ?x54528 (* (* 2.0 l_0_14_175) l_0_14_184)) (* (* 2.0 l_0_14_176) l_0_14_185))))
 (let ((?x54536 (- (- ?x54532 (* (* 2.0 l_0_14_177) l_0_14_186)) (* (* 2.0 l_0_14_178) l_0_14_187))))
 (= (- ?x54536 ?x52555) 0.0))))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52648 (* ?x52427 l_0_14_44)))
 (let ((?x54602 (* l_0_14_189 l_0_14_189)))
 (let ((?x54600 (* l_0_14_188 l_0_14_188)))
 (let ((?x54598 (* l_0_14_187 l_0_14_187)))
 (let ((?x54596 (* l_0_14_186 l_0_14_186)))
 (let ((?x54594 (* l_0_14_185 l_0_14_185)))
 (let ((?x54592 (* l_0_14_184 l_0_14_184)))
 (let ((?x54590 (* l_0_14_161 l_0_14_161)))
 (let ((?x54588 (* l_0_14_160 l_0_14_160)))
 (let ((?x54586 (* l_0_14_159 l_0_14_159)))
 (let ((?x54584 (* l_0_14_158 l_0_14_158)))
 (let ((?x54582 (* l_0_14_157 l_0_14_157)))
 (let ((?x54583 (+ (+ (* (* 2.0 l_0_14_1) l_0_14_16) (* l_0_14_156 l_0_14_156)) ?x54582)))
 (let ((?x54597 (- (- (- (+ (+ (+ (+ ?x54583 ?x54584) ?x54586) ?x54588) ?x54590) ?x54592) ?x54594) ?x54596)))
 (= (- (- (- (- ?x54597 ?x54598) ?x54600) ?x54602) ?x52648) 0.0)))))))))))))))))
(assert
 (let ((?x52427 (* 2.0 l_0_14_29)))
 (let ((?x52705 (* ?x52427 l_0_14_50)))
 (let ((?x52613 (* 2.0 l_0_14_1)))
 (let ((?x53935 (* ?x52613 l_0_14_22)))
 (let ((?x54638 (- (- ?x53935 (* (* 2.0 l_0_14_100) l_0_14_86)) (* (* 2.0 l_0_14_101) l_0_14_87))))
 (let ((?x54644 (+ (+ ?x54638 (* (* 2.0 l_0_14_156) l_0_14_162)) (* (* 2.0 l_0_14_157) l_0_14_163))))
 (let ((?x54650 (+ (+ ?x54644 (* (* 2.0 l_0_14_158) l_0_14_164)) (* (* 2.0 l_0_14_159) l_0_14_165))))
 (let ((?x54656 (+ (+ ?x54650 (* (* 2.0 l_0_14_160) l_0_14_166)) (* (* 2.0 l_0_14_161) l_0_14_167))))
 (let ((?x54662 (- (- ?x54656 (* (* 2.0 l_0_14_184) l_0_14_190)) (* (* 2.0 l_0_14_185) l_0_14_191))))
 (let ((?x54668 (- (- ?x54662 (* (* 2.0 l_0_14_186) l_0_14_192)) (* (* 2.0 l_0_14_187) l_0_14_193))))
 (let ((?x54674 (- (- ?x54668 (* (* 2.0 l_0_14_188) l_0_14_194)) (* (* 2.0 l_0_14_189) l_0_14_195))))
 (let ((?x54679 (+ (+ (- ?x54674 ?x52705) (* (* 2.0 l_0_14_58) l_0_14_72)) (* (* 2.0 l_0_14_59) l_0_14_73))))
 (= ?x54679 0.0))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52783 (* ?x52483 l_0_14_33)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52781 (* ?x52480 l_0_14_32)))
 (let ((?x52778 (* 2.0 l_0_14_3)))
 (let ((?x52779 (* ?x52778 l_0_14_5)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x52758 (* ?x52757 l_0_14_4)))
 (let ((?x54748 (- (* (* (- 2.0) l_0_14_116) l_0_14_128) (* (* 2.0 l_0_14_117) l_0_14_129))))
 (let ((?x54763 (- (+ (- ?x54748 (* (* 2.0 l_0_14_118) l_0_14_130)) ?x52758) (* (* 2.0 l_0_14_200) l_0_14_212))))
 (let ((?x54767 (- (- ?x54763 (* (* 2.0 l_0_14_201) l_0_14_213)) (* (* 2.0 l_0_14_202) l_0_14_214))))
 (let ((?x54771 (- (- ?x54767 (* (* 2.0 l_0_14_228) l_0_14_240)) (* (* 2.0 l_0_14_229) l_0_14_241))))
 (let ((?x54776 (- (- (+ (- ?x54771 (* (* 2.0 l_0_14_230) l_0_14_242)) ?x52779) ?x52781) ?x52783)))
 (= ?x54776 0.0)))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52844 (* ?x52483 l_0_14_36)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52842 (* ?x52480 l_0_14_35)))
 (let ((?x52778 (* 2.0 l_0_14_3)))
 (let ((?x52840 (* ?x52778 l_0_14_8)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x52822 (* ?x52757 l_0_14_7)))
 (let ((?x35879 (- (* (* (- 2.0) l_0_14_119) l_0_14_128) (* (* 2.0 l_0_14_120) l_0_14_129))))
 (let ((?x8174 (- (- ?x35879 (* (* 2.0 l_0_14_121) l_0_14_130)) (* (* 2.0 l_0_14_122) l_0_14_131))))
 (let ((?x54798 (- (- (+ ?x8174 ?x52822) (* (* 2.0 l_0_14_203) l_0_14_212)) (* (* 2.0 l_0_14_204) l_0_14_213))))
 (let ((?x54802 (- (- ?x54798 (* (* 2.0 l_0_14_205) l_0_14_214)) (* (* 2.0 l_0_14_206) l_0_14_215))))
 (let ((?x54806 (- (- ?x54802 (* (* 2.0 l_0_14_231) l_0_14_240)) (* (* 2.0 l_0_14_232) l_0_14_241))))
 (let ((?x54810 (- (- ?x54806 (* (* 2.0 l_0_14_233) l_0_14_242)) (* (* 2.0 l_0_14_234) l_0_14_243))))
 (= (- (- (+ ?x54810 ?x52840) ?x52842) ?x52844) 0.0))))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x52951 (* ?x52483 l_0_14_45)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x52948 (* ?x52480 l_0_14_44)))
 (let ((?x54894 (* l_0_14_245 l_0_14_245)))
 (let ((?x54892 (* l_0_14_244 l_0_14_244)))
 (let ((?x54890 (* l_0_14_243 l_0_14_243)))
 (let ((?x54888 (* l_0_14_242 l_0_14_242)))
 (let ((?x54886 (* l_0_14_241 l_0_14_241)))
 (let ((?x54884 (* l_0_14_240 l_0_14_240)))
 (let ((?x54882 (* l_0_14_217 l_0_14_217)))
 (let ((?x54880 (* l_0_14_216 l_0_14_216)))
 (let ((?x54878 (* l_0_14_215 l_0_14_215)))
 (let ((?x54876 (* l_0_14_214 l_0_14_214)))
 (let ((?x54874 (* l_0_14_213 l_0_14_213)))
 (let ((?x54872 (* l_0_14_212 l_0_14_212)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x52915 (* ?x52914 l_0_14_3)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x52912 (* ?x52911 l_0_14_2)))
 (let ((?x54857 (- (* (* (- 1.0) l_0_14_128) l_0_14_128) (* (* 1.0 l_0_14_129) l_0_14_129))))
 (let ((?x54863 (- (- ?x54857 (* (* 1.0 l_0_14_130) l_0_14_130)) (* (* 1.0 l_0_14_131) l_0_14_131))))
 (let ((?x54869 (- (- ?x54863 (* (* 1.0 l_0_14_132) l_0_14_132)) (* (* 1.0 l_0_14_133) l_0_14_133))))
 (let ((?x54881 (- (- (- (- (- (+ (+ ?x54869 ?x52912) ?x52915) ?x54872) ?x54874) ?x54876) ?x54878) ?x54880)))
 (let ((?x54895 (- (- (- (- (- (- (- ?x54881 ?x54882) ?x54884) ?x54886) ?x54888) ?x54890) ?x54892) ?x54894)))
 (= (- (- ?x54895 ?x52948) ?x52951) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x52483 (* 2.0 l_0_14_31)))
 (let ((?x53055 (* ?x52483 l_0_14_51)))
 (let ((?x52480 (* 2.0 l_0_14_30)))
 (let ((?x53053 (* ?x52480 l_0_14_50)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53041 (* ?x53040 l_0_14_3)))
 (let ((?x52757 (* 2.0 l_0_14_2)))
 (let ((?x53028 (* ?x52757 l_0_14_22)))
 (let ((?x36004 (- (* (* (- 2.0) l_0_14_128) l_0_14_134) (* (* 2.0 l_0_14_129) l_0_14_135))))
 (let ((?x54917 (- (- ?x36004 (* (* 2.0 l_0_14_130) l_0_14_136)) (* (* 2.0 l_0_14_131) l_0_14_137))))
 (let ((?x54923 (- (- ?x54917 (* (* 2.0 l_0_14_132) l_0_14_138)) (* (* 2.0 l_0_14_133) l_0_14_139))))
 (let ((?x54930 (- (- (+ ?x54923 ?x53028) (* (* 2.0 l_0_14_212) l_0_14_218)) (* (* 2.0 l_0_14_213) l_0_14_219))))
 (let ((?x54936 (- (- ?x54930 (* (* 2.0 l_0_14_214) l_0_14_220)) (* (* 2.0 l_0_14_215) l_0_14_221))))
 (let ((?x54942 (- (- ?x54936 (* (* 2.0 l_0_14_216) l_0_14_222)) (* (* 2.0 l_0_14_217) l_0_14_223))))
 (let ((?x54949 (- (- (+ ?x54942 ?x53041) (* (* 2.0 l_0_14_240) l_0_14_246)) (* (* 2.0 l_0_14_241) l_0_14_247))))
 (let ((?x54955 (- (- ?x54949 (* (* 2.0 l_0_14_242) l_0_14_248)) (* (* 2.0 l_0_14_243) l_0_14_249))))
 (let ((?x54961 (- (- ?x54955 (* (* 2.0 l_0_14_244) l_0_14_250)) (* (* 2.0 l_0_14_245) l_0_14_251))))
 (= (- (- ?x54961 ?x53053) ?x53055) 0.0)))))))))))))))))))
(assert
 (let ((?x53088 (* l_0_14_6 l_0_14_6)))
 (let ((?x53086 (* l_0_14_5 l_0_14_5)))
 (let ((?x53084 (* l_0_14_4 l_0_14_4)))
 (let ((?x53082 (* l_0_14_34 l_0_14_34)))
 (let ((?x7182 (- (- (* (- l_0_14_32) l_0_14_32) (* l_0_14_33 l_0_14_33)) ?x53082)))
 (= (+ (+ (+ ?x7182 ?x53084) ?x53086) ?x53088) 0.0)))))))
(assert
 (let ((?x53111 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x53108 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x53105 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53102 (* ?x53101 l_0_14_37)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53099 (* ?x53098 l_0_14_36)))
 (let ((?x35178 (+ (+ (- (- (* (* (- 2.0) l_0_14_32) l_0_14_35) ?x53099) ?x53102) ?x53105) ?x53108)))
 (= (+ ?x35178 ?x53111) 0.0))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53170 (* ?x53101 l_0_14_46)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53167 (* ?x53098 l_0_14_45)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x53164 (* ?x34011 l_0_14_44)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53161 (* ?x53160 l_0_14_6)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53158 (* ?x52914 l_0_14_5)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53156 (* ?x52911 l_0_14_4)))
 (= (- (- (- (+ (+ ?x53156 ?x53158) ?x53161) ?x53164) ?x53167) ?x53170) 0.0))))))))))))))
(assert
 (let ((?x53101 (* 2.0 l_0_14_34)))
 (let ((?x53200 (* ?x53101 l_0_14_52)))
 (let ((?x53098 (* 2.0 l_0_14_33)))
 (let ((?x53198 (* ?x53098 l_0_14_51)))
 (let ((?x34011 (* 2.0 l_0_14_32)))
 (let ((?x53196 (* ?x34011 l_0_14_50)))
 (let ((?x53193 (* 2.0 l_0_14_24)))
 (let ((?x53194 (* ?x53193 l_0_14_6)))
 (let ((?x53040 (* 2.0 l_0_14_23)))
 (let ((?x53191 (* ?x53040 l_0_14_5)))
 (let ((?x7252 (- (- (+ (+ (* (* 2.0 l_0_14_22) l_0_14_4) ?x53191) ?x53194) ?x53196) ?x53198)))
 (let ((?x35137 (- ?x7252 ?x53200)))
 (= ?x35137 0.0))))))))))))))
(assert
 (let ((?x53233 (* l_0_14_9 l_0_14_9)))
 (let ((?x53231 (* l_0_14_8 l_0_14_8)))
 (let ((?x53229 (* l_0_14_7 l_0_14_7)))
 (let ((?x53227 (* l_0_14_38 l_0_14_38)))
 (let ((?x53225 (* l_0_14_37 l_0_14_37)))
 (let ((?x53223 (* l_0_14_36 l_0_14_36)))
 (let ((?x35309 (- (- (- (* l_0_14_10 l_0_14_10) (* l_0_14_35 l_0_14_35)) ?x53223) ?x53225)))
 (= (+ (+ (+ (- ?x35309 ?x53227) ?x53229) ?x53231) ?x53233) 0.0)))))))))
(assert
 (let ((?x53259 (* 2.0 l_0_14_38)))
 (let ((?x53306 (* ?x53259 l_0_14_47)))
 (let ((?x53256 (* 2.0 l_0_14_37)))
 (let ((?x53303 (* ?x53256 l_0_14_46)))
 (let ((?x53253 (* 2.0 l_0_14_36)))
 (let ((?x53300 (* ?x53253 l_0_14_45)))
 (let ((?x53250 (* 2.0 l_0_14_35)))
 (let ((?x53297 (* ?x53250 l_0_14_44)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53294 (* ?x53160 l_0_14_9)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53292 (* ?x52914 l_0_14_8)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53290 (* ?x52911 l_0_14_7)))
 (let ((?x53273 (* 2.0 l_0_14_10)))
 (let ((?x53277 (* ?x53273 l_0_14_19)))
 (let ((?x7443 (- (- (- (- (+ (+ (+ ?x53277 ?x53290) ?x53292) ?x53294) ?x53297) ?x53300) ?x53303) ?x53306)))
 (= ?x7443 0.0)))))))))))))))))))
(assert
 (let ((?x53582 (* l_0_14_49 l_0_14_49)))
 (let ((?x53580 (* l_0_14_48 l_0_14_48)))
 (let ((?x53578 (* l_0_14_47 l_0_14_47)))
 (let ((?x53576 (* l_0_14_46 l_0_14_46)))
 (let ((?x53574 (* l_0_14_45 l_0_14_45)))
 (let ((?x53572 (* l_0_14_44 l_0_14_44)))
 (let ((?x53565 (* l_0_14_21 l_0_14_21)))
 (let ((?x53563 (* l_0_14_20 l_0_14_20)))
 (let ((?x53561 (* l_0_14_19 l_0_14_19)))
 (let ((?x53559 (* l_0_14_18 l_0_14_18)))
 (let ((?x54068 (+ (+ (+ (* l_0_14_16 l_0_14_16) (* l_0_14_17 l_0_14_17)) ?x53559) ?x53561)))
 (let ((?x54075 (- (- (- (- (- (+ (+ ?x54068 ?x53563) ?x53565) ?x53572) ?x53574) ?x53576) ?x53578) ?x53580)))
 (= (- ?x54075 ?x53582) 0.0))))))))))))))
(assert
 (let ((?x53662 (* (* 2.0 l_0_14_49) l_0_14_55)))
 (let ((?x53659 (* (* 2.0 l_0_14_48) l_0_14_54)))
 (let ((?x53656 (* (* 2.0 l_0_14_47) l_0_14_53)))
 (let ((?x53653 (* (* 2.0 l_0_14_46) l_0_14_52)))
 (let ((?x53650 (* (* 2.0 l_0_14_45) l_0_14_51)))
 (let ((?x53647 (* (* 2.0 l_0_14_44) l_0_14_50)))
 (let ((?x53639 (* (* 2.0 l_0_14_21) l_0_14_27)))
 (let ((?x53636 (* (* 2.0 l_0_14_20) l_0_14_26)))
 (let ((?x53633 (* (* 2.0 l_0_14_19) l_0_14_25)))
 (let ((?x53160 (* 2.0 l_0_14_18)))
 (let ((?x53630 (* ?x53160 l_0_14_24)))
 (let ((?x52914 (* 2.0 l_0_14_17)))
 (let ((?x53628 (* ?x52914 l_0_14_23)))
 (let ((?x52911 (* 2.0 l_0_14_16)))
 (let ((?x53626 (* ?x52911 l_0_14_22)))
 (let ((?x54081 (- (- (+ (+ (+ (+ (+ ?x53626 ?x53628) ?x53630) ?x53633) ?x53636) ?x53639) ?x53647) ?x53650)))
 (= (- (- (- (- ?x54081 ?x53653) ?x53656) ?x53659) ?x53662) 0.0))))))))))))))))))
(assert
 (let ((?x53708 (* l_0_14_56 l_0_14_56)))
 (let ((?x53706 (* l_0_14_55 l_0_14_55)))
 (let ((?x53704 (* l_0_14_54 l_0_14_54)))
 (let ((?x53702 (* l_0_14_53 l_0_14_53)))
 (let ((?x53700 (* l_0_14_52 l_0_14_52)))
 (let ((?x53698 (* l_0_14_51 l_0_14_51)))
 (let ((?x53696 (* l_0_14_50 l_0_14_50)))
 (let ((?x53694 (* l_0_14_28 l_0_14_28)))
 (let ((?x53692 (* l_0_14_27 l_0_14_27)))
 (let ((?x53690 (* l_0_14_26 l_0_14_26)))
 (let ((?x34522 (* l_0_14_25 l_0_14_25)))
 (let ((?x34593 (* l_0_14_24 l_0_14_24)))
 (let ((?x35592 (+ (+ (+ (* l_0_14_22 l_0_14_22) (* l_0_14_23 l_0_14_23)) ?x34593) ?x34522)))
 (let ((?x35587 (- (- (- (- (+ (+ (+ ?x35592 ?x53690) ?x53692) ?x53694) ?x53696) ?x53698) ?x53700) ?x53702)))
 (= (- (- (- ?x35587 ?x53704) ?x53706) ?x53708) 0.0))))))))))))))))
(assert
 (= (- (* l_0_14_57 l_0_14_57) (* l_0_14_85 l_0_14_85)) 0.0))
(assert
 (let ((?x36230 (- (* (* 2.0 l_0_14_141) l_0_14_162) (* (* 2.0 l_0_14_169) l_0_14_190))))
 (let ((?x36247 (- (+ ?x36230 (* (* 2.0 l_0_14_57) l_0_14_58)) (* (* 2.0 l_0_14_85) l_0_14_86))))
 (= ?x36247 0.0))))
(assert
 (let ((?x55031 (- (* (* 2.0 l_0_14_57) l_0_14_67) (* (* 2.0 l_0_14_85) l_0_14_95))))
 (= ?x55031 0.0)))
(assert
 (let ((?x55044 (+ (* (* (- 2.0) l_0_14_100) l_0_14_85) (* (* 2.0 l_0_14_57) l_0_14_72))))
 (= ?x55044 0.0)))
(assert
 (let ((?x55050 (+ (* (* (- 2.0) l_0_14_106) l_0_14_85) (* (* 2.0 l_0_14_57) l_0_14_78))))
 (= ?x55050 0.0)))
(assert
 (let ((?x55081 (* l_0_14_87 l_0_14_87)))
 (let ((?x55079 (* l_0_14_86 l_0_14_86)))
 (let ((?x55077 (* l_0_14_59 l_0_14_59)))
 (let ((?x55075 (* l_0_14_58 l_0_14_58)))
 (let ((?x55060 (+ (* (* (- 2.0) l_0_14_113) l_0_14_134) (* (* 2.0 l_0_14_142) l_0_14_162))))
 (let ((?x55068 (- (+ ?x55060 (* (* 2.0 l_0_14_143) l_0_14_163)) (* (* 2.0 l_0_14_170) l_0_14_190))))
 (let ((?x55072 (- (- ?x55068 (* (* 2.0 l_0_14_171) l_0_14_191)) (* (* 2.0 l_0_14_197) l_0_14_218))))
 (let ((?x55080 (- (+ (+ (- ?x55072 (* (* 2.0 l_0_14_225) l_0_14_246)) ?x55075) ?x55077) ?x55079)))
 (= (- ?x55080 ?x55081) 0.0))))))))))
(assert
 (let ((?x55139 (* l_0_14_196 l_0_14_196)))
 (let ((?x55137 (* l_0_14_195 l_0_14_195)))
 (let ((?x55135 (* l_0_14_194 l_0_14_194)))
 (let ((?x55133 (* l_0_14_193 l_0_14_193)))
 (let ((?x55131 (* l_0_14_192 l_0_14_192)))
 (let ((?x55129 (* l_0_14_191 l_0_14_191)))
 (let ((?x55127 (* l_0_14_190 l_0_14_190)))
 (let ((?x55125 (* l_0_14_168 l_0_14_168)))
 (let ((?x55123 (* l_0_14_167 l_0_14_167)))
 (let ((?x55121 (* l_0_14_166 l_0_14_166)))
 (let ((?x55119 (* l_0_14_165 l_0_14_165)))
 (let ((?x55117 (* l_0_14_164 l_0_14_164)))
 (let ((?x55115 (* l_0_14_163 l_0_14_163)))
 (let ((?x55113 (* l_0_14_162 l_0_14_162)))
 (let ((?x8717 (- (* (* (- 2.0) l_0_14_106) l_0_14_86) (* (* 2.0 l_0_14_107) l_0_14_87))))
 (let ((?x55126 (+ (+ (+ (+ (+ (+ (+ ?x8717 ?x55113) ?x55115) ?x55117) ?x55119) ?x55121) ?x55123) ?x55125)))
 (let ((?x55140 (- (- (- (- (- (- (- ?x55126 ?x55127) ?x55129) ?x55131) ?x55133) ?x55135) ?x55137) ?x55139)))
 (let ((?x55144 (+ (+ ?x55140 (* (* 2.0 l_0_14_58) l_0_14_78)) (* (* 2.0 l_0_14_59) l_0_14_79))))
 (= ?x55144 0.0))))))))))))))))))))
(assert
 (let ((?x55187 (* l_0_14_99 l_0_14_99)))
 (let ((?x55185 (* l_0_14_98 l_0_14_98)))
 (let ((?x55183 (* l_0_14_97 l_0_14_97)))
 (let ((?x55181 (* l_0_14_96 l_0_14_96)))
 (let ((?x55179 (* l_0_14_95 l_0_14_95)))
 (let ((?x55177 (* l_0_14_71 l_0_14_71)))
 (let ((?x55175 (* l_0_14_70 l_0_14_70)))
 (let ((?x55173 (* l_0_14_69 l_0_14_69)))
 (let ((?x55176 (+ (+ (+ (* l_0_14_67 l_0_14_67) (* l_0_14_68 l_0_14_68)) ?x55173) ?x55175)))
 (= (- (- (- (- (- (+ ?x55176 ?x55177) ?x55179) ?x55181) ?x55183) ?x55185) ?x55187) 0.0)))))))))))
(assert
 (let ((?x36326 (- (* (* (- 2.0) l_0_14_100) l_0_14_95) (* (* 2.0 l_0_14_101) l_0_14_96))))
 (let ((?x36322 (- (- ?x36326 (* (* 2.0 l_0_14_102) l_0_14_97)) (* (* 2.0 l_0_14_103) l_0_14_98))))
 (let ((?x55204 (+ (- ?x36322 (* (* 2.0 l_0_14_104) l_0_14_99)) (* (* 2.0 l_0_14_67) l_0_14_72))))
 (let ((?x55210 (+ (+ ?x55204 (* (* 2.0 l_0_14_68) l_0_14_73)) (* (* 2.0 l_0_14_69) l_0_14_74))))
 (let ((?x55216 (+ (+ ?x55210 (* (* 2.0 l_0_14_70) l_0_14_75)) (* (* 2.0 l_0_14_71) l_0_14_76))))
 (= ?x55216 0.0)))))))
(assert
 (let ((?x55239 (- (* (* (- 2.0) l_0_14_106) l_0_14_95) (* (* 2.0 l_0_14_107) l_0_14_96))))
 (let ((?x55253 (- (- ?x55239 (* (* 2.0 l_0_14_108) l_0_14_97)) (* (* 2.0 l_0_14_109) l_0_14_98))))
 (let ((?x55258 (+ (- ?x55253 (* (* 2.0 l_0_14_110) l_0_14_99)) (* (* 2.0 l_0_14_67) l_0_14_78))))
 (let ((?x55262 (+ (+ ?x55258 (* (* 2.0 l_0_14_68) l_0_14_79)) (* (* 2.0 l_0_14_69) l_0_14_80))))
 (let ((?x55266 (+ (+ ?x55262 (* (* 2.0 l_0_14_70) l_0_14_81)) (* (* 2.0 l_0_14_71) l_0_14_82))))
 (= ?x55266 0.0)))))))
(assert
 (let ((?x55305 (* l_0_14_77 l_0_14_77)))
 (let ((?x55303 (* l_0_14_76 l_0_14_76)))
 (let ((?x55301 (* l_0_14_75 l_0_14_75)))
 (let ((?x55299 (* l_0_14_74 l_0_14_74)))
 (let ((?x55297 (* l_0_14_73 l_0_14_73)))
 (let ((?x55295 (* l_0_14_72 l_0_14_72)))
 (let ((?x55293 (* l_0_14_105 l_0_14_105)))
 (let ((?x55291 (* l_0_14_104 l_0_14_104)))
 (let ((?x55289 (* l_0_14_103 l_0_14_103)))
 (let ((?x9011 (* l_0_14_102 l_0_14_102)))
 (let ((?x8994 (- (- (* (- l_0_14_100) l_0_14_100) (* l_0_14_101 l_0_14_101)) ?x9011)))
 (let ((?x55302 (+ (+ (+ (+ (- (- (- ?x8994 ?x55289) ?x55291) ?x55293) ?x55295) ?x55297) ?x55299) ?x55301)))
 (= (+ (+ ?x55302 ?x55303) ?x55305) 0.0))))))))))))))
(assert
 (let ((?x55321 (- (* (* (- 2.0) l_0_14_100) l_0_14_106) (* (* 2.0 l_0_14_101) l_0_14_107))))
 (let ((?x55325 (- (- ?x55321 (* (* 2.0 l_0_14_102) l_0_14_108)) (* (* 2.0 l_0_14_103) l_0_14_109))))
 (let ((?x55330 (- (- ?x55325 (* (* 2.0 l_0_14_104) l_0_14_110)) (* (* 2.0 l_0_14_105) l_0_14_111))))
 (let ((?x55336 (+ (+ ?x55330 (* (* 2.0 l_0_14_72) l_0_14_78)) (* (* 2.0 l_0_14_73) l_0_14_79))))
 (let ((?x55342 (+ (+ ?x55336 (* (* 2.0 l_0_14_74) l_0_14_80)) (* (* 2.0 l_0_14_75) l_0_14_81))))
 (let ((?x55348 (+ (+ ?x55342 (* (* 2.0 l_0_14_76) l_0_14_82)) (* (* 2.0 l_0_14_77) l_0_14_83))))
 (= ?x55348 0.0))))))))
(assert
 (let ((?x55405 (* l_0_14_84 l_0_14_84)))
 (let ((?x55403 (* l_0_14_83 l_0_14_83)))
 (let ((?x55401 (* l_0_14_82 l_0_14_82)))
 (let ((?x55399 (* l_0_14_81 l_0_14_81)))
 (let ((?x55397 (* l_0_14_80 l_0_14_80)))
 (let ((?x55395 (* l_0_14_79 l_0_14_79)))
 (let ((?x55393 (* l_0_14_78 l_0_14_78)))
 (let ((?x55391 (* l_0_14_112 l_0_14_112)))
 (let ((?x55389 (* l_0_14_111 l_0_14_111)))
 (let ((?x55387 (* l_0_14_110 l_0_14_110)))
 (let ((?x55376 (* l_0_14_109 l_0_14_109)))
 (let ((?x55373 (* l_0_14_108 l_0_14_108)))
 (let ((?x55375 (- (- (* (- l_0_14_106) l_0_14_106) (* l_0_14_107 l_0_14_107)) ?x55373)))
 (let ((?x55398 (+ (+ (+ (- (- (- (- ?x55375 ?x55376) ?x55387) ?x55389) ?x55391) ?x55393) ?x55395) ?x55397)))
 (= (+ (+ (+ (+ ?x55398 ?x55399) ?x55401) ?x55403) ?x55405) 0.0))))))))))))))))
(assert
 (let ((?x55436 (* l_0_14_225 l_0_14_225)))
 (let ((?x55434 (* l_0_14_197 l_0_14_197)))
 (let ((?x55431 (+ (* (* (- 1.0) l_0_14_113) l_0_14_113) (* (* 2.0 l_0_14_141) l_0_14_142))))
 (= (- (- (- ?x55431 (* (* 2.0 l_0_14_169) l_0_14_170)) ?x55434) ?x55436) 0.0)))))
(assert
 (let ((?x55460 (* l_0_14_171 l_0_14_171)))
 (let ((?x55458 (* l_0_14_170 l_0_14_170)))
 (let ((?x55456 (* l_0_14_143 l_0_14_143)))
 (let ((?x55454 (* l_0_14_142 l_0_14_142)))
 (let ((?x55461 (- (- (+ (+ (* (* (- 2.0) l_0_14_113) l_0_14_114) ?x55454) ?x55456) ?x55458) ?x55460)))
 (let ((?x55465 (- (- ?x55461 (* (* 2.0 l_0_14_197) l_0_14_198)) (* (* 2.0 l_0_14_225) l_0_14_226))))
 (= ?x55465 0.0))))))))
(assert
 (let ((?x55489 (+ (* (* (- 2.0) l_0_14_113) l_0_14_119) (* (* 2.0 l_0_14_142) l_0_14_147))))
 (let ((?x55493 (- (+ ?x55489 (* (* 2.0 l_0_14_143) l_0_14_148)) (* (* 2.0 l_0_14_170) l_0_14_175))))
 (let ((?x55497 (- (- ?x55493 (* (* 2.0 l_0_14_171) l_0_14_176)) (* (* 2.0 l_0_14_197) l_0_14_203))))
 (= (- ?x55497 (* (* 2.0 l_0_14_225) l_0_14_231)) 0.0)))))
(assert
 (let ((?x55516 (- (* (* (- 2.0) l_0_14_114) l_0_14_116) (* (* 2.0 l_0_14_115) l_0_14_117))))
 (let ((?x55520 (- (- ?x55516 (* (* 2.0 l_0_14_198) l_0_14_200)) (* (* 2.0 l_0_14_199) l_0_14_201))))
 (let ((?x55524 (- (- ?x55520 (* (* 2.0 l_0_14_226) l_0_14_228)) (* (* 2.0 l_0_14_227) l_0_14_229))))
 (= ?x55524 0.0)))))
(assert
 (let ((?x55548 (- (* (* (- 2.0) l_0_14_114) l_0_14_134) (* (* 2.0 l_0_14_115) l_0_14_135))))
 (let ((?x55552 (- (- ?x55548 (* (* 2.0 l_0_14_198) l_0_14_218)) (* (* 2.0 l_0_14_199) l_0_14_219))))
 (let ((?x55556 (- (- ?x55552 (* (* 2.0 l_0_14_226) l_0_14_246)) (* (* 2.0 l_0_14_227) l_0_14_247))))
 (= ?x55556 0.0)))))
(assert
 (let ((?x55596 (* l_0_14_230 l_0_14_230)))
 (let ((?x55594 (* l_0_14_229 l_0_14_229)))
 (let ((?x55592 (* l_0_14_228 l_0_14_228)))
 (let ((?x55590 (* l_0_14_202 l_0_14_202)))
 (let ((?x55588 (* l_0_14_201 l_0_14_201)))
 (let ((?x55586 (* l_0_14_200 l_0_14_200)))
 (let ((?x55582 (- (* (* (- 1.0) l_0_14_116) l_0_14_116) (* (* 1.0 l_0_14_117) l_0_14_117))))
 (let ((?x55591 (- (- (- (- ?x55582 (* (* 1.0 l_0_14_118) l_0_14_118)) ?x55586) ?x55588) ?x55590)))
 (= (- (- (- ?x55591 ?x55592) ?x55594) ?x55596) 0.0))))))))))
(assert
 (let ((?x9313 (- (* (* (- 2.0) l_0_14_116) l_0_14_119) (* (* 2.0 l_0_14_117) l_0_14_120))))
 (let ((?x9376 (- (- ?x9313 (* (* 2.0 l_0_14_118) l_0_14_121)) (* (* 2.0 l_0_14_200) l_0_14_203))))
 (let ((?x55614 (- (- ?x9376 (* (* 2.0 l_0_14_201) l_0_14_204)) (* (* 2.0 l_0_14_202) l_0_14_205))))
 (let ((?x55618 (- (- ?x55614 (* (* 2.0 l_0_14_228) l_0_14_231)) (* (* 2.0 l_0_14_229) l_0_14_232))))
 (= (- ?x55618 (* (* 2.0 l_0_14_230) l_0_14_233)) 0.0))))))
(assert
 (let ((?x55655 (- (* (* (- 2.0) l_0_14_116) l_0_14_134) (* (* 2.0 l_0_14_117) l_0_14_135))))
 (let ((?x55659 (- (- ?x55655 (* (* 2.0 l_0_14_118) l_0_14_136)) (* (* 2.0 l_0_14_200) l_0_14_218))))
 (let ((?x55663 (- (- ?x55659 (* (* 2.0 l_0_14_201) l_0_14_219)) (* (* 2.0 l_0_14_202) l_0_14_220))))
 (let ((?x55667 (- (- ?x55663 (* (* 2.0 l_0_14_228) l_0_14_246)) (* (* 2.0 l_0_14_229) l_0_14_247))))
 (= (- ?x55667 (* (* 2.0 l_0_14_230) l_0_14_248)) 0.0))))))
(assert
 (let ((?x55723 (* l_0_14_234 l_0_14_234)))
 (let ((?x55721 (* l_0_14_233 l_0_14_233)))
 (let ((?x55719 (* l_0_14_232 l_0_14_232)))
 (let ((?x55717 (* l_0_14_231 l_0_14_231)))
 (let ((?x55715 (* l_0_14_206 l_0_14_206)))
 (let ((?x55713 (* l_0_14_205 l_0_14_205)))
 (let ((?x55711 (* l_0_14_204 l_0_14_204)))
 (let ((?x55709 (* l_0_14_203 l_0_14_203)))
 (let ((?x55702 (- (* (* (- 1.0) l_0_14_119) l_0_14_119) (* (* 1.0 l_0_14_120) l_0_14_120))))
 (let ((?x55708 (- (- ?x55702 (* (* 1.0 l_0_14_121) l_0_14_121)) (* (* 1.0 l_0_14_122) l_0_14_122))))
 (let ((?x55722 (- (- (- (- (- (- (- ?x55708 ?x55709) ?x55711) ?x55713) ?x55715) ?x55717) ?x55719) ?x55721)))
 (= (- ?x55722 ?x55723) 0.0)))))))))))))
(assert
 (let ((?x55796 (* l_0_14_252 l_0_14_252)))
 (let ((?x55794 (* l_0_14_251 l_0_14_251)))
 (let ((?x55792 (* l_0_14_250 l_0_14_250)))
 (let ((?x55790 (* l_0_14_249 l_0_14_249)))
 (let ((?x55788 (* l_0_14_248 l_0_14_248)))
 (let ((?x55786 (* l_0_14_247 l_0_14_247)))
 (let ((?x55784 (* l_0_14_246 l_0_14_246)))
 (let ((?x55782 (* l_0_14_224 l_0_14_224)))
 (let ((?x55780 (* l_0_14_223 l_0_14_223)))
 (let ((?x55778 (* l_0_14_222 l_0_14_222)))
 (let ((?x55776 (* l_0_14_221 l_0_14_221)))
 (let ((?x55774 (* l_0_14_220 l_0_14_220)))
 (let ((?x55772 (* l_0_14_219 l_0_14_219)))
 (let ((?x55770 (* l_0_14_218 l_0_14_218)))
 (let ((?x55754 (- (* (* (- 1.0) l_0_14_134) l_0_14_134) (* (* 1.0 l_0_14_135) l_0_14_135))))
 (let ((?x55760 (- (- ?x55754 (* (* 1.0 l_0_14_136) l_0_14_136)) (* (* 1.0 l_0_14_137) l_0_14_137))))
 (let ((?x55766 (- (- ?x55760 (* (* 1.0 l_0_14_138) l_0_14_138)) (* (* 1.0 l_0_14_139) l_0_14_139))))
 (let ((?x55775 (- (- (- (- ?x55766 (* (* 1.0 l_0_14_140) l_0_14_140)) ?x55770) ?x55772) ?x55774)))
 (let ((?x55789 (- (- (- (- (- (- (- ?x55775 ?x55776) ?x55778) ?x55780) ?x55782) ?x55784) ?x55786) ?x55788)))
 (= (- (- (- (- ?x55789 ?x55790) ?x55792) ?x55794) ?x55796) 0.0)))))))))))))))))))))
(assert
 (= (- (* l_0_14_141 l_0_14_141) (* l_0_14_169 l_0_14_169)) 0.0))
(assert
 (let ((?x55834 (- (* (* 2.0 l_0_14_141) l_0_14_147) (* (* 2.0 l_0_14_169) l_0_14_175))))
 (= ?x55834 0.0)))
(assert
 (let ((?x55854 (* l_0_14_178 l_0_14_178)))
 (let ((?x55852 (* l_0_14_177 l_0_14_177)))
 (let ((?x55850 (* l_0_14_176 l_0_14_176)))
 (let ((?x55848 (* l_0_14_175 l_0_14_175)))
 (let ((?x55846 (* l_0_14_150 l_0_14_150)))
 (let ((?x55844 (* l_0_14_149 l_0_14_149)))
 (let ((?x55845 (+ (+ (* l_0_14_147 l_0_14_147) (* l_0_14_148 l_0_14_148)) ?x55844)))
 (= (- (- (- (- (+ ?x55845 ?x55846) ?x55848) ?x55850) ?x55852) ?x55854) 0.0)))))))))
(assert
 (>= l_0_14_1 0.0))
(assert
 (>= l_0_14_3 0.0))
(assert
 (>= l_0_14_6 0.0))
(assert
 (>= l_0_14_10 0.0))
(assert
 (>= l_0_14_15 0.0))
(assert
 (>= l_0_14_21 0.0))
(assert
 (>= l_0_14_28 0.0))
(assert
 (>= l_0_14_29 0.0))
(assert
 (>= l_0_14_31 0.0))
(assert
 (>= l_0_14_34 0.0))
(assert
 (>= l_0_14_38 0.0))
(assert
 (>= l_0_14_43 0.0))
(assert
 (>= l_0_14_49 0.0))
(assert
 (>= l_0_14_56 0.0))
(assert
 (>= l_0_14_57 0.0))
(assert
 (>= l_0_14_59 0.0))
(assert
 (>= l_0_14_62 0.0))
(assert
 (>= l_0_14_66 0.0))
(assert
 (>= l_0_14_71 0.0))
(assert
 (>= l_0_14_77 0.0))
(assert
 (>= l_0_14_84 0.0))
(assert
 (>= l_0_14_85 0.0))
(assert
 (>= l_0_14_87 0.0))
(assert
 (>= l_0_14_90 0.0))
(assert
 (>= l_0_14_94 0.0))
(assert
 (>= l_0_14_99 0.0))
(assert
 (>= l_0_14_105 0.0))
(assert
 (>= l_0_14_112 0.0))
(assert
 (>= l_0_14_113 0.0))
(assert
 (>= l_0_14_115 0.0))
(assert
 (>= l_0_14_118 0.0))
(assert
 (>= l_0_14_122 0.0))
(assert
 (>= l_0_14_127 0.0))
(assert
 (>= l_0_14_133 0.0))
(assert
 (>= l_0_14_140 0.0))
(assert
 (>= l_0_14_141 0.0))
(assert
 (>= l_0_14_143 0.0))
(assert
 (>= l_0_14_146 0.0))
(assert
 (>= l_0_14_150 0.0))
(assert
 (>= l_0_14_155 0.0))
(assert
 (>= l_0_14_161 0.0))
(assert
 (>= l_0_14_168 0.0))
(assert
 (>= l_0_14_169 0.0))
(assert
 (>= l_0_14_171 0.0))
(assert
 (>= l_0_14_174 0.0))
(assert
 (>= l_0_14_178 0.0))
(assert
 (>= l_0_14_183 0.0))
(assert
 (>= l_0_14_189 0.0))
(assert
 (>= l_0_14_196 0.0))
(assert
 (>= l_0_14_197 0.0))
(assert
 (>= l_0_14_199 0.0))
(assert
 (>= l_0_14_202 0.0))
(assert
 (>= l_0_14_206 0.0))
(assert
 (>= l_0_14_211 0.0))
(assert
 (>= l_0_14_217 0.0))
(assert
 (>= l_0_14_224 0.0))
(assert
 (>= l_0_14_225 0.0))
(assert
 (>= l_0_14_227 0.0))
(assert
 (>= l_0_14_230 0.0))
(assert
 (>= l_0_14_234 0.0))
(assert
 (>= l_0_14_239 0.0))
(assert
 (>= l_0_14_245 0.0))
(assert
 (>= l_0_14_252 0.0))
(assert
 (let ((?x55943 (* l_0_15_255 l_0_15_255)))
 (let ((?x55941 (* l_0_15_254 l_0_15_254)))
 (let ((?x55939 (* l_0_15_227 l_0_15_227)))
 (let ((?x55937 (* l_0_15_226 l_0_15_226)))
 (let ((?x55935 (* l_0_15_199 l_0_15_199)))
 (let ((?x55933 (* l_0_15_198 l_0_15_198)))
 (let ((?x55932 (- (* (* (- 1.0) l_0_15_114) l_0_15_114) (* (* 1.0 l_0_15_115) l_0_15_115))))
 (= (- (- (- (- (- (- ?x55932 ?x55933) ?x55935) ?x55937) ?x55939) ?x55941) ?x55943) 0.0)))))))))
(assert
 (let ((?x55994 (* l_0_15_87 l_0_15_87)))
 (let ((?x55992 (* l_0_15_86 l_0_15_86)))
 (let ((?x55990 (* l_0_15_59 l_0_15_59)))
 (let ((?x55988 (* l_0_15_58 l_0_15_58)))
 (let ((?x55969 (+ (* (* (- 2.0) l_0_15_113) l_0_15_134) (* (* 2.0 l_0_15_142) l_0_15_162))))
 (let ((?x55975 (- (+ ?x55969 (* (* 2.0 l_0_15_143) l_0_15_163)) (* (* 2.0 l_0_15_170) l_0_15_190))))
 (let ((?x55981 (- (- ?x55975 (* (* 2.0 l_0_15_171) l_0_15_191)) (* (* 2.0 l_0_15_197) l_0_15_218))))
 (let ((?x55987 (- (- ?x55981 (* (* 2.0 l_0_15_225) l_0_15_246)) (* (* 2.0 l_0_15_253) l_0_15_274))))
 (= (- (- (- (+ (+ ?x55987 ?x55988) ?x55990) ?x55992) ?x55994) 1.0) 0.0))))))))))
(assert
 (let ((?x56043 (* l_0_15_171 l_0_15_171)))
 (let ((?x56041 (* l_0_15_170 l_0_15_170)))
 (let ((?x56039 (* l_0_15_143 l_0_15_143)))
 (let ((?x56037 (* l_0_15_142 l_0_15_142)))
 (let ((?x56044 (- (- (+ (+ (* (* (- 2.0) l_0_15_113) l_0_15_114) ?x56037) ?x56039) ?x56041) ?x56043)))
 (let ((?x56048 (- (- ?x56044 (* (* 2.0 l_0_15_197) l_0_15_198)) (* (* 2.0 l_0_15_225) l_0_15_226))))
 (= (+ (- ?x56048 (* (* 2.0 l_0_15_253) l_0_15_254)) 1.0) 0.0))))))))
(assert
 (let ((?x56081 (* l_0_15_29 l_0_15_29)))
 (let ((?x56077 (+ (* (- l_0_15_1) l_0_15_1) (* (* 2.0 l_0_15_141) l_0_15_151))))
 (= (+ (- ?x56077 (* (* 2.0 l_0_15_169) l_0_15_179)) ?x56081) 0.0))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x9985 (* ?x10013 l_0_15_30)))
 (let ((?x36843 (- (* (* (- 2.0) l_0_15_1) l_0_15_2) (* (* 2.0 l_0_15_113) l_0_15_123))))
 (let ((?x9810 (+ (+ ?x36843 (* (* 2.0 l_0_15_142) l_0_15_151)) (* (* 2.0 l_0_15_143) l_0_15_152))))
 (let ((?x9942 (- (- ?x9810 (* (* 2.0 l_0_15_170) l_0_15_179)) (* (* 2.0 l_0_15_171) l_0_15_180))))
 (let ((?x9963 (- (- ?x9942 (* (* 2.0 l_0_15_197) l_0_15_207)) (* (* 2.0 l_0_15_225) l_0_15_235))))
 (= (+ (- ?x9963 (* (* 2.0 l_0_15_253) l_0_15_263)) ?x9985) 0.0))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56145 (* ?x56144 l_0_15_40)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56142 (* ?x56141 l_0_15_39)))
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56139 (* ?x10013 l_0_15_32)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x56119 (* ?x56118 l_0_15_3)))
 (let ((?x10131 (* 2.0 l_0_15_11)))
 (let ((?x10132 (* ?x10131 l_0_15_2)))
 (let ((?x56123 (+ (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_4) ?x10132) ?x56119) (* (* 2.0 l_0_15_144) l_0_15_151))))
 (let ((?x56129 (+ (+ ?x56123 (* (* 2.0 l_0_15_145) l_0_15_152)) (* (* 2.0 l_0_15_146) l_0_15_153))))
 (let ((?x56135 (- (- ?x56129 (* (* 2.0 l_0_15_172) l_0_15_179)) (* (* 2.0 l_0_15_173) l_0_15_180))))
 (let ((?x56146 (- (- (+ (- ?x56135 (* (* 2.0 l_0_15_174) l_0_15_181)) ?x56139) ?x56142) ?x56145)))
 (= ?x56146 0.0))))))))))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56211 (* ?x10013 l_0_15_35)))
 (let ((?x56189 (+ (* (* (- 2.0) l_0_15_1) l_0_15_7) (* (* 2.0 l_0_15_147) l_0_15_151))))
 (let ((?x56195 (+ (+ ?x56189 (* (* 2.0 l_0_15_148) l_0_15_152)) (* (* 2.0 l_0_15_149) l_0_15_153))))
 (let ((?x56201 (- (+ ?x56195 (* (* 2.0 l_0_15_150) l_0_15_154)) (* (* 2.0 l_0_15_175) l_0_15_179))))
 (let ((?x56207 (- (- ?x56201 (* (* 2.0 l_0_15_176) l_0_15_180)) (* (* 2.0 l_0_15_177) l_0_15_181))))
 (= (+ (- ?x56207 (* (* 2.0 l_0_15_178) l_0_15_182)) ?x56211) 0.0))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56267 (* ?x10013 l_0_15_39)))
 (let ((?x56265 (* l_0_15_183 l_0_15_183)))
 (let ((?x56263 (* l_0_15_182 l_0_15_182)))
 (let ((?x56261 (* l_0_15_181 l_0_15_181)))
 (let ((?x56259 (* l_0_15_180 l_0_15_180)))
 (let ((?x56257 (* l_0_15_179 l_0_15_179)))
 (let ((?x56255 (* l_0_15_155 l_0_15_155)))
 (let ((?x56253 (* l_0_15_154 l_0_15_154)))
 (let ((?x56251 (* l_0_15_153 l_0_15_153)))
 (let ((?x56249 (* l_0_15_152 l_0_15_152)))
 (let ((?x56250 (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_11) (* l_0_15_151 l_0_15_151)) ?x56249)))
 (let ((?x56264 (- (- (- (- (+ (+ (+ ?x56250 ?x56251) ?x56253) ?x56255) ?x56257) ?x56259) ?x56261) ?x56263)))
 (= (+ (- ?x56264 ?x56265) ?x56267) 0.0)))))))))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56310 (* ?x10013 l_0_15_44)))
 (let ((?x56267 (* ?x10013 l_0_15_39)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x36989 (* ?x37011 l_0_15_16)))
 (let ((?x36987 (* ?x37011 l_0_15_11)))
 (let ((?x56284 (+ (+ (- ?x36987 ?x36989) (* (* 2.0 l_0_15_151) l_0_15_156)) (* (* 2.0 l_0_15_152) l_0_15_157))))
 (let ((?x56290 (+ (+ ?x56284 (* (* 2.0 l_0_15_153) l_0_15_158)) (* (* 2.0 l_0_15_154) l_0_15_159))))
 (let ((?x56296 (- (+ ?x56290 (* (* 2.0 l_0_15_155) l_0_15_160)) (* (* 2.0 l_0_15_179) l_0_15_184))))
 (let ((?x56302 (- (- ?x56296 (* (* 2.0 l_0_15_180) l_0_15_185)) (* (* 2.0 l_0_15_181) l_0_15_186))))
 (let ((?x56308 (- (- ?x56302 (* (* 2.0 l_0_15_182) l_0_15_187)) (* (* 2.0 l_0_15_183) l_0_15_188))))
 (= (+ (- ?x56308 ?x56267) ?x56310) 0.0)))))))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56367 (* ?x10013 l_0_15_50)))
 (let ((?x56348 (+ (* (* (- 2.0) l_0_15_1) l_0_15_22) (* (* 2.0 l_0_15_151) l_0_15_162))))
 (let ((?x56352 (+ (+ ?x56348 (* (* 2.0 l_0_15_152) l_0_15_163)) (* (* 2.0 l_0_15_153) l_0_15_164))))
 (let ((?x56356 (+ (+ ?x56352 (* (* 2.0 l_0_15_154) l_0_15_165)) (* (* 2.0 l_0_15_155) l_0_15_166))))
 (let ((?x56360 (- (- ?x56356 (* (* 2.0 l_0_15_179) l_0_15_190)) (* (* 2.0 l_0_15_180) l_0_15_191))))
 (let ((?x56364 (- (- ?x56360 (* (* 2.0 l_0_15_181) l_0_15_192)) (* (* 2.0 l_0_15_182) l_0_15_193))))
 (let ((?x56371 (+ (+ (- ?x56364 (* (* 2.0 l_0_15_183) l_0_15_194)) ?x56367) (* (* 2.0 l_0_15_58) l_0_15_67))))
 (let ((?x56377 (- (+ ?x56371 (* (* 2.0 l_0_15_59) l_0_15_68)) (* (* 2.0 l_0_15_86) l_0_15_95))))
 (= (- ?x56377 (* (* 2.0 l_0_15_87) l_0_15_96)) 0.0)))))))))))
(assert
 (let ((?x56454 (* l_0_15_31 l_0_15_31)))
 (let ((?x56452 (* l_0_15_30 l_0_15_30)))
 (let ((?x56450 (* l_0_15_3 l_0_15_3)))
 (let ((?x56436 (* l_0_15_2 l_0_15_2)))
 (let ((?x56429 (- (* (* (- 2.0) l_0_15_114) l_0_15_123) (* (* 2.0 l_0_15_115) l_0_15_124))))
 (let ((?x56435 (- (- ?x56429 (* (* 2.0 l_0_15_198) l_0_15_207)) (* (* 2.0 l_0_15_199) l_0_15_208))))
 (let ((?x56443 (- (- (- ?x56435 ?x56436) (* (* 2.0 l_0_15_226) l_0_15_235)) (* (* 2.0 l_0_15_227) l_0_15_236))))
 (let ((?x56449 (- (- ?x56443 (* (* 2.0 l_0_15_254) l_0_15_263)) (* (* 2.0 l_0_15_255) l_0_15_264))))
 (= (+ (+ (- ?x56449 ?x56450) ?x56452) ?x56454) 0.0))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56501 (* ?x56144 l_0_15_33)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56499 (* ?x56141 l_0_15_32)))
 (let ((?x56496 (* 2.0 l_0_15_3)))
 (let ((?x56497 (* ?x56496 l_0_15_5)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x10630 (* ?x10628 l_0_15_4)))
 (let ((?x37187 (- (* (* (- 2.0) l_0_15_116) l_0_15_123) (* (* 2.0 l_0_15_117) l_0_15_124))))
 (let ((?x56471 (- (- (- ?x37187 (* (* 2.0 l_0_15_118) l_0_15_125)) ?x10630) (* (* 2.0 l_0_15_200) l_0_15_207))))
 (let ((?x56477 (- (- ?x56471 (* (* 2.0 l_0_15_201) l_0_15_208)) (* (* 2.0 l_0_15_202) l_0_15_209))))
 (let ((?x56483 (- (- ?x56477 (* (* 2.0 l_0_15_228) l_0_15_235)) (* (* 2.0 l_0_15_229) l_0_15_236))))
 (let ((?x56489 (- (- ?x56483 (* (* 2.0 l_0_15_230) l_0_15_237)) (* (* 2.0 l_0_15_256) l_0_15_263))))
 (let ((?x56495 (- (- ?x56489 (* (* 2.0 l_0_15_257) l_0_15_264)) (* (* 2.0 l_0_15_258) l_0_15_265))))
 (= (+ (+ (- ?x56495 ?x56497) ?x56499) ?x56501) 0.0))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56575 (* ?x56144 l_0_15_36)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56573 (* ?x56141 l_0_15_35)))
 (let ((?x56496 (* 2.0 l_0_15_3)))
 (let ((?x56571 (* ?x56496 l_0_15_8)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x56533 (* ?x10628 l_0_15_7)))
 (let ((?x56526 (- (* (* (- 2.0) l_0_15_119) l_0_15_123) (* (* 2.0 l_0_15_120) l_0_15_124))))
 (let ((?x56532 (- (- ?x56526 (* (* 2.0 l_0_15_121) l_0_15_125)) (* (* 2.0 l_0_15_122) l_0_15_126))))
 (let ((?x56540 (- (- (- ?x56532 ?x56533) (* (* 2.0 l_0_15_203) l_0_15_207)) (* (* 2.0 l_0_15_204) l_0_15_208))))
 (let ((?x56546 (- (- ?x56540 (* (* 2.0 l_0_15_205) l_0_15_209)) (* (* 2.0 l_0_15_206) l_0_15_210))))
 (let ((?x56552 (- (- ?x56546 (* (* 2.0 l_0_15_231) l_0_15_235)) (* (* 2.0 l_0_15_232) l_0_15_236))))
 (let ((?x56558 (- (- ?x56552 (* (* 2.0 l_0_15_233) l_0_15_237)) (* (* 2.0 l_0_15_234) l_0_15_238))))
 (let ((?x56564 (- (- ?x56558 (* (* 2.0 l_0_15_259) l_0_15_263)) (* (* 2.0 l_0_15_260) l_0_15_264))))
 (let ((?x56570 (- (- ?x56564 (* (* 2.0 l_0_15_261) l_0_15_265)) (* (* 2.0 l_0_15_262) l_0_15_266))))
 (= (+ (+ (- ?x56570 ?x56571) ?x56573) ?x56575) 0.0))))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56145 (* ?x56144 l_0_15_40)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56142 (* ?x56141 l_0_15_39)))
 (let ((?x56683 (* l_0_15_267 l_0_15_267)))
 (let ((?x56681 (* l_0_15_266 l_0_15_266)))
 (let ((?x56679 (* l_0_15_265 l_0_15_265)))
 (let ((?x56677 (* l_0_15_264 l_0_15_264)))
 (let ((?x56675 (* l_0_15_263 l_0_15_263)))
 (let ((?x56673 (* l_0_15_239 l_0_15_239)))
 (let ((?x56671 (* l_0_15_238 l_0_15_238)))
 (let ((?x56669 (* l_0_15_237 l_0_15_237)))
 (let ((?x56667 (* l_0_15_236 l_0_15_236)))
 (let ((?x56665 (* l_0_15_235 l_0_15_235)))
 (let ((?x56663 (* l_0_15_211 l_0_15_211)))
 (let ((?x56661 (* l_0_15_210 l_0_15_210)))
 (let ((?x56659 (* l_0_15_209 l_0_15_209)))
 (let ((?x56657 (* l_0_15_208 l_0_15_208)))
 (let ((?x56655 (* l_0_15_207 l_0_15_207)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x56119 (* ?x56118 l_0_15_3)))
 (let ((?x56642 (- (- (* (* (- 2.0) l_0_15_11) l_0_15_2) ?x56119) (* (* 1.0 l_0_15_123) l_0_15_123))))
 (let ((?x56648 (- (- ?x56642 (* (* 1.0 l_0_15_124) l_0_15_124)) (* (* 1.0 l_0_15_125) l_0_15_125))))
 (let ((?x56654 (- (- ?x56648 (* (* 1.0 l_0_15_126) l_0_15_126)) (* (* 1.0 l_0_15_127) l_0_15_127))))
 (let ((?x56668 (- (- (- (- (- (- (- ?x56654 ?x56655) ?x56657) ?x56659) ?x56661) ?x56663) ?x56665) ?x56667)))
 (let ((?x56682 (- (- (- (- (- (- (- ?x56668 ?x56669) ?x56671) ?x56673) ?x56675) ?x56677) ?x56679) ?x56681)))
 (= (+ (+ (- ?x56682 ?x56683) ?x56142) ?x56145) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56777 (* ?x56144 l_0_15_45)))
 (let ((?x56145 (* ?x56144 l_0_15_40)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56774 (* ?x56141 l_0_15_44)))
 (let ((?x56142 (* ?x56141 l_0_15_39)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x56726 (* ?x56725 l_0_15_3)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x56723 (* ?x56722 l_0_15_2)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x56119 (* ?x56118 l_0_15_3)))
 (let ((?x10131 (* 2.0 l_0_15_11)))
 (let ((?x10132 (* ?x10131 l_0_15_2)))
 (let ((?x37690 (- (- (+ ?x10132 ?x56119) (* (* 2.0 l_0_15_123) l_0_15_128)) (* (* 2.0 l_0_15_124) l_0_15_129))))
 (let ((?x56718 (- (- ?x37690 (* (* 2.0 l_0_15_125) l_0_15_130)) (* (* 2.0 l_0_15_126) l_0_15_131))))
 (let ((?x56730 (- (- (- (- ?x56718 (* (* 2.0 l_0_15_127) l_0_15_132)) ?x56723) ?x56726) (* (* 2.0 l_0_15_207) l_0_15_212))))
 (let ((?x56736 (- (- ?x56730 (* (* 2.0 l_0_15_208) l_0_15_213)) (* (* 2.0 l_0_15_209) l_0_15_214))))
 (let ((?x56742 (- (- ?x56736 (* (* 2.0 l_0_15_210) l_0_15_215)) (* (* 2.0 l_0_15_211) l_0_15_216))))
 (let ((?x56748 (- (- ?x56742 (* (* 2.0 l_0_15_235) l_0_15_240)) (* (* 2.0 l_0_15_236) l_0_15_241))))
 (let ((?x56754 (- (- ?x56748 (* (* 2.0 l_0_15_237) l_0_15_242)) (* (* 2.0 l_0_15_238) l_0_15_243))))
 (let ((?x56760 (- (- ?x56754 (* (* 2.0 l_0_15_239) l_0_15_244)) (* (* 2.0 l_0_15_263) l_0_15_268))))
 (let ((?x56766 (- (- ?x56760 (* (* 2.0 l_0_15_264) l_0_15_269)) (* (* 2.0 l_0_15_265) l_0_15_270))))
 (let ((?x56772 (- (- ?x56766 (* (* 2.0 l_0_15_266) l_0_15_271)) (* (* 2.0 l_0_15_267) l_0_15_272))))
 (= (+ (- (+ (- ?x56772 ?x56142) ?x56774) ?x56145) ?x56777) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56881 (* ?x56144 l_0_15_51)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56879 (* ?x56141 l_0_15_50)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x56857 (* ?x56856 l_0_15_3)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x56844 (* ?x10628 l_0_15_22)))
 (let ((?x56837 (- (* (* (- 2.0) l_0_15_123) l_0_15_134) (* (* 2.0 l_0_15_124) l_0_15_135))))
 (let ((?x56841 (- (- ?x56837 (* (* 2.0 l_0_15_125) l_0_15_136)) (* (* 2.0 l_0_15_126) l_0_15_137))))
 (let ((?x56847 (- (- (- ?x56841 (* (* 2.0 l_0_15_127) l_0_15_138)) ?x56844) (* (* 2.0 l_0_15_207) l_0_15_218))))
 (let ((?x56851 (- (- ?x56847 (* (* 2.0 l_0_15_208) l_0_15_219)) (* (* 2.0 l_0_15_209) l_0_15_220))))
 (let ((?x56855 (- (- ?x56851 (* (* 2.0 l_0_15_210) l_0_15_221)) (* (* 2.0 l_0_15_211) l_0_15_222))))
 (let ((?x56862 (- (- (- ?x56855 ?x56857) (* (* 2.0 l_0_15_235) l_0_15_246)) (* (* 2.0 l_0_15_236) l_0_15_247))))
 (let ((?x56866 (- (- ?x56862 (* (* 2.0 l_0_15_237) l_0_15_248)) (* (* 2.0 l_0_15_238) l_0_15_249))))
 (let ((?x56870 (- (- ?x56866 (* (* 2.0 l_0_15_239) l_0_15_250)) (* (* 2.0 l_0_15_263) l_0_15_274))))
 (let ((?x56874 (- (- ?x56870 (* (* 2.0 l_0_15_264) l_0_15_275)) (* (* 2.0 l_0_15_265) l_0_15_276))))
 (let ((?x56878 (- (- ?x56874 (* (* 2.0 l_0_15_266) l_0_15_277)) (* (* 2.0 l_0_15_267) l_0_15_278))))
 (= (+ (+ ?x56878 ?x56879) ?x56881) 0.0))))))))))))))))))))
(assert
 (let ((?x56941 (* l_0_15_6 l_0_15_6)))
 (let ((?x56939 (* l_0_15_5 l_0_15_5)))
 (let ((?x56937 (* l_0_15_4 l_0_15_4)))
 (let ((?x56935 (* l_0_15_34 l_0_15_34)))
 (let ((?x56938 (- (+ (+ (* l_0_15_32 l_0_15_32) (* l_0_15_33 l_0_15_33)) ?x56935) ?x56937)))
 (= (- (- ?x56938 ?x56939) ?x56941) 0.0)))))))
(assert
 (let ((?x56970 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x56967 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x56964 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x56961 (* ?x56960 l_0_15_37)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x56958 (* ?x56957 l_0_15_36)))
 (let ((?x56968 (- (- (+ (+ (* (* 2.0 l_0_15_32) l_0_15_35) ?x56958) ?x56961) ?x56964) ?x56967)))
 (= (- ?x56968 ?x56970) 0.0))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57009 (* ?x56960 l_0_15_41)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57007 (* ?x56957 l_0_15_40)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57005 (* ?x56955 l_0_15_39)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57003 (* ?x57002 l_0_15_6)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57000 (* ?x56118 l_0_15_5)))
 (let ((?x57008 (+ (+ (- (- (* (* (- 2.0) l_0_15_11) l_0_15_4) ?x57000) ?x57003) ?x57005) ?x57007)))
 (= (+ ?x57008 ?x57009) 0.0)))))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57045 (* ?x56960 l_0_15_46)))
 (let ((?x57009 (* ?x56960 l_0_15_41)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57042 (* ?x56957 l_0_15_45)))
 (let ((?x57007 (* ?x56957 l_0_15_40)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57039 (* ?x56955 l_0_15_44)))
 (let ((?x57005 (* ?x56955 l_0_15_39)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x57036 (* ?x57035 l_0_15_6)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x57033 (* ?x56725 l_0_15_5)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x57031 (* ?x56722 l_0_15_4)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57003 (* ?x57002 l_0_15_6)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57000 (* ?x56118 l_0_15_5)))
 (let ((?x57030 (+ (+ (* (* 2.0 l_0_15_11) l_0_15_4) ?x57000) ?x57003)))
 (let ((?x57043 (+ (- (+ (- (- (- (- ?x57030 ?x57031) ?x57033) ?x57036) ?x57005) ?x57039) ?x57007) ?x57042)))
 (= (+ (- ?x57043 ?x57009) ?x57045) 0.0)))))))))))))))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57101 (* ?x56960 l_0_15_52)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57099 (* ?x56957 l_0_15_51)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57097 (* ?x56955 l_0_15_50)))
 (let ((?x57094 (* 2.0 l_0_15_24)))
 (let ((?x57095 (* ?x57094 l_0_15_6)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x57092 (* ?x56856 l_0_15_5)))
 (let ((?x57100 (+ (+ (- (- (* (* (- 2.0) l_0_15_22) l_0_15_4) ?x57092) ?x57095) ?x57097) ?x57099)))
 (= (+ ?x57100 ?x57101) 0.0)))))))))))))
(assert
 (let ((?x57138 (* l_0_15_9 l_0_15_9)))
 (let ((?x57136 (* l_0_15_8 l_0_15_8)))
 (let ((?x57134 (* l_0_15_7 l_0_15_7)))
 (let ((?x57132 (* l_0_15_38 l_0_15_38)))
 (let ((?x57130 (* l_0_15_37 l_0_15_37)))
 (let ((?x57128 (* l_0_15_36 l_0_15_36)))
 (let ((?x57129 (+ (+ (* (- l_0_15_10) l_0_15_10) (* l_0_15_35 l_0_15_35)) ?x57128)))
 (= (- (- (- (+ (+ ?x57129 ?x57130) ?x57132) ?x57134) ?x57136) ?x57138) 0.0)))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57169 (* ?x57168 l_0_15_42)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57166 (* ?x57165 l_0_15_41)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57163 (* ?x57162 l_0_15_40)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57160 (* ?x57159 l_0_15_39)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57157 (* ?x57002 l_0_15_9)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57155 (* ?x56118 l_0_15_8)))
 (let ((?x10131 (* 2.0 l_0_15_11)))
 (let ((?x57153 (* ?x10131 l_0_15_7)))
 (let ((?x57161 (+ (- (- (- (* (* (- 2.0) l_0_15_10) l_0_15_14) ?x57153) ?x57155) ?x57157) ?x57160)))
 (= (+ (+ (+ ?x57161 ?x57163) ?x57166) ?x57169) 0.0)))))))))))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57218 (* ?x57168 l_0_15_47)))
 (let ((?x57169 (* ?x57168 l_0_15_42)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57215 (* ?x57165 l_0_15_46)))
 (let ((?x57166 (* ?x57165 l_0_15_41)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57212 (* ?x57162 l_0_15_45)))
 (let ((?x57163 (* ?x57162 l_0_15_40)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57209 (* ?x57159 l_0_15_44)))
 (let ((?x57160 (* ?x57159 l_0_15_39)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x57206 (* ?x57035 l_0_15_9)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x57204 (* ?x56725 l_0_15_8)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x57202 (* ?x56722 l_0_15_7)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57157 (* ?x57002 l_0_15_9)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57155 (* ?x56118 l_0_15_8)))
 (let ((?x10131 (* 2.0 l_0_15_11)))
 (let ((?x57153 (* ?x10131 l_0_15_7)))
 (let ((?x57187 (* 2.0 l_0_15_10)))
 (let ((?x57189 (* ?x57187 l_0_15_19)))
 (let ((?x12491 (* ?x57187 l_0_15_14)))
 (let ((?x57207 (- (- (- (+ (+ (+ (- ?x12491 ?x57189) ?x57153) ?x57155) ?x57157) ?x57202) ?x57204) ?x57206)))
 (let ((?x57217 (- (+ (- (+ (- (+ (- ?x57207 ?x57160) ?x57209) ?x57163) ?x57212) ?x57166) ?x57215) ?x57169)))
 (= (+ ?x57217 ?x57218) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57252 (* ?x57168 l_0_15_53)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57250 (* ?x57165 l_0_15_52)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57248 (* ?x57162 l_0_15_51)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57246 (* ?x57159 l_0_15_50)))
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56145 (* ?x56144 l_0_15_40)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56142 (* ?x56141 l_0_15_39)))
 (let ((?x57094 (* 2.0 l_0_15_24)))
 (let ((?x57242 (* ?x57094 l_0_15_9)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x57240 (* ?x56856 l_0_15_8)))
 (let ((?x57237 (* 2.0 l_0_15_22)))
 (let ((?x57238 (* ?x57237 l_0_15_7)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x56119 (* ?x56118 l_0_15_3)))
 (let ((?x10131 (* 2.0 l_0_15_11)))
 (let ((?x10132 (* ?x10131 l_0_15_2)))
 (let ((?x57241 (- (- (+ (+ (* (* (- 2.0) l_0_15_10) l_0_15_25) ?x10132) ?x56119) ?x57238) ?x57240)))
 (let ((?x57253 (+ (+ (+ (+ (- (- (- ?x57241 ?x57242) ?x56142) ?x56145) ?x57246) ?x57248) ?x57250) ?x57252)))
 (= ?x57253 0.0))))))))))))))))))))))))))
(assert
 (let ((?x57294 (* l_0_15_43 l_0_15_43)))
 (let ((?x57292 (* l_0_15_42 l_0_15_42)))
 (let ((?x57290 (* l_0_15_41 l_0_15_41)))
 (let ((?x57288 (* l_0_15_40 l_0_15_40)))
 (let ((?x57286 (* l_0_15_39 l_0_15_39)))
 (let ((?x57284 (* l_0_15_15 l_0_15_15)))
 (let ((?x57282 (* l_0_15_14 l_0_15_14)))
 (let ((?x57273 (* l_0_15_13 l_0_15_13)))
 (let ((?x57281 (- (- (* (- l_0_15_11) l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x57273)))
 (let ((?x57295 (+ (+ (+ (+ (+ (- (- ?x57281 ?x57282) ?x57284) ?x57286) ?x57288) ?x57290) ?x57292) ?x57294)))
 (= ?x57295 0.0))))))))))))
(assert
 (let ((?x57294 (* l_0_15_43 l_0_15_43)))
 (let ((?x57347 (* 2.0 l_0_15_43)))
 (let ((?x57348 (* ?x57347 l_0_15_48)))
 (let ((?x57292 (* l_0_15_42 l_0_15_42)))
 (let ((?x57343 (* 2.0 l_0_15_42)))
 (let ((?x57344 (* ?x57343 l_0_15_47)))
 (let ((?x57290 (* l_0_15_41 l_0_15_41)))
 (let ((?x57339 (* 2.0 l_0_15_41)))
 (let ((?x57340 (* ?x57339 l_0_15_46)))
 (let ((?x57288 (* l_0_15_40 l_0_15_40)))
 (let ((?x57335 (* 2.0 l_0_15_40)))
 (let ((?x57336 (* ?x57335 l_0_15_45)))
 (let ((?x57286 (* l_0_15_39 l_0_15_39)))
 (let ((?x57331 (* 2.0 l_0_15_39)))
 (let ((?x57332 (* ?x57331 l_0_15_44)))
 (let ((?x57284 (* l_0_15_15 l_0_15_15)))
 (let ((?x57327 (* 2.0 l_0_15_15)))
 (let ((?x57328 (* ?x57327 l_0_15_20)))
 (let ((?x57282 (* l_0_15_14 l_0_15_14)))
 (let ((?x57323 (* 2.0 l_0_15_14)))
 (let ((?x57324 (* ?x57323 l_0_15_19)))
 (let ((?x57273 (* l_0_15_13 l_0_15_13)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57320 (* ?x57002 l_0_15_18)))
 (let ((?x57270 (* l_0_15_12 l_0_15_12)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57317 (* ?x56118 l_0_15_17)))
 (let ((?x57318 (- (+ (* (* (- 2.0) l_0_15_11) l_0_15_16) (* l_0_15_11 l_0_15_11)) ?x57317)))
 (let ((?x57330 (+ (- (+ (- (+ (- (+ ?x57318 ?x57270) ?x57320) ?x57273) ?x57324) ?x57282) ?x57328) ?x57284)))
 (let ((?x57345 (+ (- (+ (- (+ (- (+ ?x57330 ?x57332) ?x57286) ?x57336) ?x57288) ?x57340) ?x57290) ?x57344)))
 (= (- (+ (- ?x57345 ?x57292) ?x57348) ?x57294) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x57347 (* 2.0 l_0_15_43)))
 (let ((?x57399 (* ?x57347 l_0_15_54)))
 (let ((?x57343 (* 2.0 l_0_15_42)))
 (let ((?x57397 (* ?x57343 l_0_15_53)))
 (let ((?x57339 (* 2.0 l_0_15_41)))
 (let ((?x57395 (* ?x57339 l_0_15_52)))
 (let ((?x57335 (* 2.0 l_0_15_40)))
 (let ((?x57393 (* ?x57335 l_0_15_51)))
 (let ((?x57331 (* 2.0 l_0_15_39)))
 (let ((?x57391 (* ?x57331 l_0_15_50)))
 (let ((?x57327 (* 2.0 l_0_15_15)))
 (let ((?x57389 (* ?x57327 l_0_15_26)))
 (let ((?x57323 (* 2.0 l_0_15_14)))
 (let ((?x57387 (* ?x57323 l_0_15_25)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57385 (* ?x57002 l_0_15_24)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57383 (* ?x56118 l_0_15_23)))
 (let ((?x57390 (- (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_22) ?x57383) ?x57385) ?x57387) ?x57389)))
 (= (+ (+ (+ (+ (+ ?x57390 ?x57391) ?x57393) ?x57395) ?x57397) ?x57399) 0.0)))))))))))))))))))))
(assert
 (let ((?x57448 (* l_0_15_49 l_0_15_49)))
 (let ((?x57446 (* l_0_15_48 l_0_15_48)))
 (let ((?x57444 (* l_0_15_47 l_0_15_47)))
 (let ((?x57442 (* l_0_15_46 l_0_15_46)))
 (let ((?x57440 (* l_0_15_45 l_0_15_45)))
 (let ((?x57438 (* l_0_15_44 l_0_15_44)))
 (let ((?x57347 (* 2.0 l_0_15_43)))
 (let ((?x57348 (* ?x57347 l_0_15_48)))
 (let ((?x57343 (* 2.0 l_0_15_42)))
 (let ((?x57344 (* ?x57343 l_0_15_47)))
 (let ((?x57339 (* 2.0 l_0_15_41)))
 (let ((?x57340 (* ?x57339 l_0_15_46)))
 (let ((?x57335 (* 2.0 l_0_15_40)))
 (let ((?x57336 (* ?x57335 l_0_15_45)))
 (let ((?x57331 (* 2.0 l_0_15_39)))
 (let ((?x57332 (* ?x57331 l_0_15_44)))
 (let ((?x57431 (* l_0_15_21 l_0_15_21)))
 (let ((?x57429 (* l_0_15_20 l_0_15_20)))
 (let ((?x57427 (* l_0_15_19 l_0_15_19)))
 (let ((?x57425 (* l_0_15_18 l_0_15_18)))
 (let ((?x57423 (* l_0_15_17 l_0_15_17)))
 (let ((?x57413 (* l_0_15_16 l_0_15_16)))
 (let ((?x57327 (* 2.0 l_0_15_15)))
 (let ((?x57328 (* ?x57327 l_0_15_20)))
 (let ((?x57323 (* 2.0 l_0_15_14)))
 (let ((?x57324 (* ?x57323 l_0_15_19)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57320 (* ?x57002 l_0_15_18)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57317 (* ?x56118 l_0_15_17)))
 (let ((?x38504 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_16) ?x57317) ?x57320) ?x57324) ?x57328)))
 (let ((?x57433 (- (- (- (- (- (- (- ?x38504 ?x57413) ?x57423) ?x57425) ?x57427) ?x57429) ?x57431) ?x57332)))
 (let ((?x57443 (+ (+ (+ (- (- (- (- ?x57433 ?x57336) ?x57340) ?x57344) ?x57348) ?x57438) ?x57440) ?x57442)))
 (= (+ (+ (+ ?x57443 ?x57444) ?x57446) ?x57448) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57488 (* (* 2.0 l_0_15_49) l_0_15_55)))
 (let ((?x57485 (* (* 2.0 l_0_15_48) l_0_15_54)))
 (let ((?x57482 (* (* 2.0 l_0_15_47) l_0_15_53)))
 (let ((?x57479 (* (* 2.0 l_0_15_46) l_0_15_52)))
 (let ((?x57476 (* (* 2.0 l_0_15_45) l_0_15_51)))
 (let ((?x57473 (* (* 2.0 l_0_15_44) l_0_15_50)))
 (let ((?x57347 (* 2.0 l_0_15_43)))
 (let ((?x57399 (* ?x57347 l_0_15_54)))
 (let ((?x57343 (* 2.0 l_0_15_42)))
 (let ((?x57397 (* ?x57343 l_0_15_53)))
 (let ((?x57339 (* 2.0 l_0_15_41)))
 (let ((?x57395 (* ?x57339 l_0_15_52)))
 (let ((?x57335 (* 2.0 l_0_15_40)))
 (let ((?x57393 (* ?x57335 l_0_15_51)))
 (let ((?x57331 (* 2.0 l_0_15_39)))
 (let ((?x57391 (* ?x57331 l_0_15_50)))
 (let ((?x57465 (* (* 2.0 l_0_15_21) l_0_15_27)))
 (let ((?x57462 (* (* 2.0 l_0_15_20) l_0_15_26)))
 (let ((?x38545 (* (* 2.0 l_0_15_19) l_0_15_25)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x38558 (* ?x57035 l_0_15_24)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x38559 (* ?x56725 l_0_15_23)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x38600 (* ?x56722 l_0_15_22)))
 (let ((?x57327 (* 2.0 l_0_15_15)))
 (let ((?x57389 (* ?x57327 l_0_15_26)))
 (let ((?x57323 (* 2.0 l_0_15_14)))
 (let ((?x57387 (* ?x57323 l_0_15_25)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57385 (* ?x57002 l_0_15_24)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57383 (* ?x56118 l_0_15_23)))
 (let ((?x38599 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_22) ?x57383) ?x57385) ?x57387) ?x57389)))
 (let ((?x57467 (- (- (- (- (- (- (- ?x38599 ?x38600) ?x38559) ?x38558) ?x38545) ?x57462) ?x57465) ?x57391)))
 (let ((?x57480 (+ (+ (+ (- (- (- (- ?x57467 ?x57393) ?x57395) ?x57397) ?x57399) ?x57473) ?x57476) ?x57479)))
 (= (+ (+ (+ ?x57480 ?x57482) ?x57485) ?x57488) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57535 (* l_0_15_56 l_0_15_56)))
 (let ((?x57533 (* l_0_15_55 l_0_15_55)))
 (let ((?x57531 (* l_0_15_54 l_0_15_54)))
 (let ((?x57529 (* l_0_15_53 l_0_15_53)))
 (let ((?x57527 (* l_0_15_52 l_0_15_52)))
 (let ((?x57525 (* l_0_15_51 l_0_15_51)))
 (let ((?x57523 (* l_0_15_50 l_0_15_50)))
 (let ((?x57521 (* l_0_15_28 l_0_15_28)))
 (let ((?x57519 (* l_0_15_27 l_0_15_27)))
 (let ((?x57517 (* l_0_15_26 l_0_15_26)))
 (let ((?x57515 (* l_0_15_25 l_0_15_25)))
 (let ((?x57513 (* l_0_15_24 l_0_15_24)))
 (let ((?x57514 (- (- (* (- l_0_15_22) l_0_15_22) (* l_0_15_23 l_0_15_23)) ?x57513)))
 (let ((?x57528 (+ (+ (+ (- (- (- (- ?x57514 ?x57515) ?x57517) ?x57519) ?x57521) ?x57523) ?x57525) ?x57527)))
 (= (+ (+ (+ (+ ?x57528 ?x57529) ?x57531) ?x57533) ?x57535) 0.0))))))))))))))))
(assert
 (let ((?x56081 (* l_0_15_29 l_0_15_29)))
 (let ((?x56085 (* l_0_15_1 l_0_15_1)))
 (let ((?x38730 (- ?x56085 ?x56081)))
 (let ((?x57562 (- (+ ?x38730 (* (* 2.0 l_0_15_57) l_0_15_63)) (* (* 2.0 l_0_15_85) l_0_15_91))))
 (= ?x57562 0.0))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x9985 (* ?x10013 l_0_15_30)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x12712 (* ?x37011 l_0_15_2)))
 (let ((?x57572 (+ (+ ?x12712 (* (* 2.0 l_0_15_147) l_0_15_162)) (* (* 2.0 l_0_15_148) l_0_15_163))))
 (let ((?x57576 (+ (+ ?x57572 (* (* 2.0 l_0_15_149) l_0_15_164)) (* (* 2.0 l_0_15_150) l_0_15_165))))
 (let ((?x57580 (- (- ?x57576 (* (* 2.0 l_0_15_175) l_0_15_190)) (* (* 2.0 l_0_15_176) l_0_15_191))))
 (let ((?x57584 (- (- ?x57580 (* (* 2.0 l_0_15_177) l_0_15_192)) (* (* 2.0 l_0_15_178) l_0_15_193))))
 (let ((?x57589 (+ (+ (- ?x57584 ?x9985) (* (* 2.0 l_0_15_58) l_0_15_63)) (* (* 2.0 l_0_15_59) l_0_15_64))))
 (let ((?x57593 (- (- ?x57589 (* (* 2.0 l_0_15_86) l_0_15_91)) (* (* 2.0 l_0_15_87) l_0_15_92))))
 (= ?x57593 0.0))))))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57252 (* ?x57168 l_0_15_53)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57250 (* ?x57165 l_0_15_52)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57248 (* ?x57162 l_0_15_51)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57246 (* ?x57159 l_0_15_50)))
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56139 (* ?x10013 l_0_15_32)))
 (let ((?x57094 (* 2.0 l_0_15_24)))
 (let ((?x57242 (* ?x57094 l_0_15_9)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x57240 (* ?x56856 l_0_15_8)))
 (let ((?x57237 (* 2.0 l_0_15_22)))
 (let ((?x57238 (* ?x57237 l_0_15_7)))
 (let ((?x57187 (* 2.0 l_0_15_10)))
 (let ((?x57620 (* ?x57187 l_0_15_25)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x57619 (* ?x37011 l_0_15_4)))
 (let ((?x57627 (- (- (- (+ (+ (+ (+ ?x57619 ?x57620) ?x57238) ?x57240) ?x57242) ?x56139) ?x57246) ?x57248)))
 (let ((?x57635 (+ (+ (- (- ?x57627 ?x57250) ?x57252) (* (* 2.0 l_0_15_60) l_0_15_63)) (* (* 2.0 l_0_15_61) l_0_15_64))))
 (let ((?x57641 (- (+ ?x57635 (* (* 2.0 l_0_15_62) l_0_15_65)) (* (* 2.0 l_0_15_88) l_0_15_91))))
 (let ((?x57647 (- (- ?x57641 (* (* 2.0 l_0_15_89) l_0_15_92)) (* (* 2.0 l_0_15_90) l_0_15_93))))
 (= ?x57647 0.0))))))))))))))))))))))))))
(assert
 (let ((?x57673 (* l_0_15_94 l_0_15_94)))
 (let ((?x57671 (* l_0_15_93 l_0_15_93)))
 (let ((?x57669 (* l_0_15_92 l_0_15_92)))
 (let ((?x57667 (* l_0_15_91 l_0_15_91)))
 (let ((?x57665 (* l_0_15_66 l_0_15_66)))
 (let ((?x57663 (* l_0_15_65 l_0_15_65)))
 (let ((?x57661 (* l_0_15_64 l_0_15_64)))
 (let ((?x57659 (* l_0_15_63 l_0_15_63)))
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56211 (* ?x10013 l_0_15_35)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x57657 (* ?x37011 l_0_15_7)))
 (let ((?x57658 (- ?x57657 ?x56211)))
 (let ((?x57672 (- (- (- (+ (+ (+ (+ ?x57658 ?x57659) ?x57661) ?x57663) ?x57665) ?x57667) ?x57669) ?x57671)))
 (= (- ?x57672 ?x57673) 0.0))))))))))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56267 (* ?x10013 l_0_15_39)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x36987 (* ?x37011 l_0_15_11)))
 (let ((?x57686 (- ?x36987 ?x56267)))
 (let ((?x57692 (+ (+ ?x57686 (* (* 2.0 l_0_15_63) l_0_15_67)) (* (* 2.0 l_0_15_64) l_0_15_68))))
 (let ((?x57698 (+ (+ ?x57692 (* (* 2.0 l_0_15_65) l_0_15_69)) (* (* 2.0 l_0_15_66) l_0_15_70))))
 (let ((?x57704 (- (- ?x57698 (* (* 2.0 l_0_15_91) l_0_15_95)) (* (* 2.0 l_0_15_92) l_0_15_96))))
 (let ((?x57710 (- (- ?x57704 (* (* 2.0 l_0_15_93) l_0_15_97)) (* (* 2.0 l_0_15_94) l_0_15_98))))
 (= ?x57710 0.0)))))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56310 (* ?x10013 l_0_15_44)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x36989 (* ?x37011 l_0_15_16)))
 (let ((?x57742 (- (- ?x36989 (* (* 2.0 l_0_15_100) l_0_15_91)) (* (* 2.0 l_0_15_101) l_0_15_92))))
 (let ((?x57748 (- (- ?x57742 (* (* 2.0 l_0_15_102) l_0_15_93)) (* (* 2.0 l_0_15_103) l_0_15_94))))
 (let ((?x57753 (+ (+ (- ?x57748 ?x56310) (* (* 2.0 l_0_15_63) l_0_15_72)) (* (* 2.0 l_0_15_64) l_0_15_73))))
 (let ((?x57757 (+ (+ ?x57753 (* (* 2.0 l_0_15_65) l_0_15_74)) (* (* 2.0 l_0_15_66) l_0_15_75))))
 (= ?x57757 0.0))))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56367 (* ?x10013 l_0_15_50)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x13117 (* ?x37011 l_0_15_22)))
 (let ((?x57774 (- (- ?x13117 (* (* 2.0 l_0_15_106) l_0_15_91)) (* (* 2.0 l_0_15_107) l_0_15_92))))
 (let ((?x57780 (- (- ?x57774 (* (* 2.0 l_0_15_108) l_0_15_93)) (* (* 2.0 l_0_15_109) l_0_15_94))))
 (let ((?x57785 (+ (+ (- ?x57780 ?x56367) (* (* 2.0 l_0_15_63) l_0_15_78)) (* (* 2.0 l_0_15_64) l_0_15_79))))
 (let ((?x57789 (+ (+ ?x57785 (* (* 2.0 l_0_15_65) l_0_15_80)) (* (* 2.0 l_0_15_66) l_0_15_81))))
 (= ?x57789 0.0))))))))))
(assert
 (let ((?x56454 (* l_0_15_31 l_0_15_31)))
 (let ((?x56452 (* l_0_15_30 l_0_15_30)))
 (let ((?x56450 (* l_0_15_3 l_0_15_3)))
 (let ((?x56436 (* l_0_15_2 l_0_15_2)))
 (let ((?x57800 (- (* (* (- 2.0) l_0_15_119) l_0_15_134) (* (* 2.0 l_0_15_120) l_0_15_135))))
 (let ((?x57811 (- (- ?x57800 (* (* 2.0 l_0_15_121) l_0_15_136)) (* (* 2.0 l_0_15_122) l_0_15_137))))
 (let ((?x57816 (- (- (+ ?x57811 ?x56436) (* (* 2.0 l_0_15_203) l_0_15_218)) (* (* 2.0 l_0_15_204) l_0_15_219))))
 (let ((?x57820 (- (- ?x57816 (* (* 2.0 l_0_15_205) l_0_15_220)) (* (* 2.0 l_0_15_206) l_0_15_221))))
 (let ((?x57824 (- (- ?x57820 (* (* 2.0 l_0_15_231) l_0_15_246)) (* (* 2.0 l_0_15_232) l_0_15_247))))
 (let ((?x57828 (- (- ?x57824 (* (* 2.0 l_0_15_233) l_0_15_248)) (* (* 2.0 l_0_15_234) l_0_15_249))))
 (let ((?x57832 (- (- ?x57828 (* (* 2.0 l_0_15_259) l_0_15_274)) (* (* 2.0 l_0_15_260) l_0_15_275))))
 (let ((?x57836 (- (- ?x57832 (* (* 2.0 l_0_15_261) l_0_15_276)) (* (* 2.0 l_0_15_262) l_0_15_277))))
 (= (- (- (+ ?x57836 ?x56450) ?x56452) ?x56454) 0.0))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56501 (* ?x56144 l_0_15_33)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56499 (* ?x56141 l_0_15_32)))
 (let ((?x56496 (* 2.0 l_0_15_3)))
 (let ((?x56497 (* ?x56496 l_0_15_5)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x10630 (* ?x10628 l_0_15_4)))
 (= (- (- (+ ?x10630 ?x56497) ?x56499) ?x56501) 0.0))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56575 (* ?x56144 l_0_15_36)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56573 (* ?x56141 l_0_15_35)))
 (let ((?x56496 (* 2.0 l_0_15_3)))
 (let ((?x56571 (* ?x56496 l_0_15_8)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x56533 (* ?x10628 l_0_15_7)))
 (= (- (- (+ ?x56533 ?x56571) ?x56573) ?x56575) 0.0))))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57252 (* ?x57168 l_0_15_53)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57250 (* ?x57165 l_0_15_52)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57248 (* ?x57162 l_0_15_51)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57246 (* ?x57159 l_0_15_50)))
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56777 (* ?x56144 l_0_15_45)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56774 (* ?x56141 l_0_15_44)))
 (let ((?x57094 (* 2.0 l_0_15_24)))
 (let ((?x57242 (* ?x57094 l_0_15_9)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x57240 (* ?x56856 l_0_15_8)))
 (let ((?x57237 (* 2.0 l_0_15_22)))
 (let ((?x57238 (* ?x57237 l_0_15_7)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x56726 (* ?x56725 l_0_15_3)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x56723 (* ?x56722 l_0_15_2)))
 (let ((?x57187 (* 2.0 l_0_15_10)))
 (let ((?x57620 (* ?x57187 l_0_15_25)))
 (let ((?x13316 (- (- (+ (+ (+ (+ (+ ?x57620 ?x56723) ?x56726) ?x57238) ?x57240) ?x57242) ?x56774) ?x56777)))
 (= (- (- (- (- ?x13316 ?x57246) ?x57248) ?x57250) ?x57252) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56881 (* ?x56144 l_0_15_51)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56879 (* ?x56141 l_0_15_50)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x56857 (* ?x56856 l_0_15_3)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x56844 (* ?x10628 l_0_15_22)))
 (= (- (- (+ ?x56844 ?x56857) ?x56879) ?x56881) 0.0))))))))))
(assert
 (let ((?x56941 (* l_0_15_6 l_0_15_6)))
 (let ((?x56939 (* l_0_15_5 l_0_15_5)))
 (let ((?x56937 (* l_0_15_4 l_0_15_4)))
 (let ((?x56935 (* l_0_15_34 l_0_15_34)))
 (let ((?x39328 (- (- (* (- l_0_15_32) l_0_15_32) (* l_0_15_33 l_0_15_33)) ?x56935)))
 (= (+ (+ (+ ?x39328 ?x56937) ?x56939) ?x56941) 0.0)))))))
(assert
 (let ((?x56970 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x56967 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x56964 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x56961 (* ?x56960 l_0_15_37)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x56958 (* ?x56957 l_0_15_36)))
 (let ((?x57879 (+ (+ (- (- (* (* (- 2.0) l_0_15_32) l_0_15_35) ?x56958) ?x56961) ?x56964) ?x56967)))
 (= (+ ?x57879 ?x56970) 0.0))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57009 (* ?x56960 l_0_15_41)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57007 (* ?x56957 l_0_15_40)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57005 (* ?x56955 l_0_15_39)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57003 (* ?x57002 l_0_15_6)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57000 (* ?x56118 l_0_15_5)))
 (let ((?x57030 (+ (+ (* (* 2.0 l_0_15_11) l_0_15_4) ?x57000) ?x57003)))
 (= (- (- (- ?x57030 ?x57005) ?x57007) ?x57009) 0.0)))))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57045 (* ?x56960 l_0_15_46)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57042 (* ?x56957 l_0_15_45)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57039 (* ?x56955 l_0_15_44)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x57036 (* ?x57035 l_0_15_6)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x57033 (* ?x56725 l_0_15_5)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x57031 (* ?x56722 l_0_15_4)))
 (= (- (- (- (+ (+ ?x57031 ?x57033) ?x57036) ?x57039) ?x57042) ?x57045) 0.0))))))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57101 (* ?x56960 l_0_15_52)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57099 (* ?x56957 l_0_15_51)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57097 (* ?x56955 l_0_15_50)))
 (let ((?x57094 (* 2.0 l_0_15_24)))
 (let ((?x57095 (* ?x57094 l_0_15_6)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x57092 (* ?x56856 l_0_15_5)))
 (let ((?x39466 (- (- (+ (+ (* (* 2.0 l_0_15_22) l_0_15_4) ?x57092) ?x57095) ?x57097) ?x57099)))
 (let ((?x39467 (- ?x39466 ?x57101)))
 (= ?x39467 0.0))))))))))))))
(assert
 (let ((?x57138 (* l_0_15_9 l_0_15_9)))
 (let ((?x57136 (* l_0_15_8 l_0_15_8)))
 (let ((?x57134 (* l_0_15_7 l_0_15_7)))
 (let ((?x57132 (* l_0_15_38 l_0_15_38)))
 (let ((?x57130 (* l_0_15_37 l_0_15_37)))
 (let ((?x57128 (* l_0_15_36 l_0_15_36)))
 (let ((?x39507 (- (- (- (* l_0_15_10 l_0_15_10) (* l_0_15_35 l_0_15_35)) ?x57128) ?x57130)))
 (= (+ (+ (+ (- ?x39507 ?x57132) ?x57134) ?x57136) ?x57138) 0.0)))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57169 (* ?x57168 l_0_15_42)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57166 (* ?x57165 l_0_15_41)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57163 (* ?x57162 l_0_15_40)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57160 (* ?x57159 l_0_15_39)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57157 (* ?x57002 l_0_15_9)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57155 (* ?x56118 l_0_15_8)))
 (let ((?x10131 (* 2.0 l_0_15_11)))
 (let ((?x57153 (* ?x10131 l_0_15_7)))
 (let ((?x57187 (* 2.0 l_0_15_10)))
 (let ((?x12491 (* ?x57187 l_0_15_14)))
 (let ((?x13701 (- (- (- (- (+ (+ (+ ?x12491 ?x57153) ?x57155) ?x57157) ?x57160) ?x57163) ?x57166) ?x57169)))
 (= ?x13701 0.0)))))))))))))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57218 (* ?x57168 l_0_15_47)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57215 (* ?x57165 l_0_15_46)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57212 (* ?x57162 l_0_15_45)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57209 (* ?x57159 l_0_15_44)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x57206 (* ?x57035 l_0_15_9)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x57204 (* ?x56725 l_0_15_8)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x57202 (* ?x56722 l_0_15_7)))
 (let ((?x57187 (* 2.0 l_0_15_10)))
 (let ((?x57189 (* ?x57187 l_0_15_19)))
 (let ((?x57901 (- (- (- (- (+ (+ (+ ?x57189 ?x57202) ?x57204) ?x57206) ?x57209) ?x57212) ?x57215) ?x57218)))
 (= ?x57901 0.0)))))))))))))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57252 (* ?x57168 l_0_15_53)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57250 (* ?x57165 l_0_15_52)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57248 (* ?x57162 l_0_15_51)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57246 (* ?x57159 l_0_15_50)))
 (let ((?x57094 (* 2.0 l_0_15_24)))
 (let ((?x57242 (* ?x57094 l_0_15_9)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x57240 (* ?x56856 l_0_15_8)))
 (let ((?x57237 (* 2.0 l_0_15_22)))
 (let ((?x57238 (* ?x57237 l_0_15_7)))
 (let ((?x57187 (* 2.0 l_0_15_10)))
 (let ((?x57620 (* ?x57187 l_0_15_25)))
 (let ((?x39531 (- (- (- (- (+ (+ (+ ?x57620 ?x57238) ?x57240) ?x57242) ?x57246) ?x57248) ?x57250) ?x57252)))
 (= ?x39531 0.0)))))))))))))))))))
(assert
 (let ((?x57294 (* l_0_15_43 l_0_15_43)))
 (let ((?x57292 (* l_0_15_42 l_0_15_42)))
 (let ((?x57290 (* l_0_15_41 l_0_15_41)))
 (let ((?x57288 (* l_0_15_40 l_0_15_40)))
 (let ((?x57286 (* l_0_15_39 l_0_15_39)))
 (let ((?x57284 (* l_0_15_15 l_0_15_15)))
 (let ((?x57282 (* l_0_15_14 l_0_15_14)))
 (let ((?x57273 (* l_0_15_13 l_0_15_13)))
 (let ((?x57906 (+ (+ (+ (* l_0_15_11 l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x57273) ?x57282)))
 (= (- (- (- (- (- (+ ?x57906 ?x57284) ?x57286) ?x57288) ?x57290) ?x57292) ?x57294) 0.0)))))))))))
(assert
 (let ((?x57347 (* 2.0 l_0_15_43)))
 (let ((?x57348 (* ?x57347 l_0_15_48)))
 (let ((?x57343 (* 2.0 l_0_15_42)))
 (let ((?x57344 (* ?x57343 l_0_15_47)))
 (let ((?x57339 (* 2.0 l_0_15_41)))
 (let ((?x57340 (* ?x57339 l_0_15_46)))
 (let ((?x57335 (* 2.0 l_0_15_40)))
 (let ((?x57336 (* ?x57335 l_0_15_45)))
 (let ((?x57331 (* 2.0 l_0_15_39)))
 (let ((?x57332 (* ?x57331 l_0_15_44)))
 (let ((?x57327 (* 2.0 l_0_15_15)))
 (let ((?x57328 (* ?x57327 l_0_15_20)))
 (let ((?x57323 (* 2.0 l_0_15_14)))
 (let ((?x57324 (* ?x57323 l_0_15_19)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57320 (* ?x57002 l_0_15_18)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57317 (* ?x56118 l_0_15_17)))
 (let ((?x38504 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_16) ?x57317) ?x57320) ?x57324) ?x57328)))
 (= (- (- (- (- (- ?x38504 ?x57332) ?x57336) ?x57340) ?x57344) ?x57348) 0.0)))))))))))))))))))))
(assert
 (let ((?x57347 (* 2.0 l_0_15_43)))
 (let ((?x57399 (* ?x57347 l_0_15_54)))
 (let ((?x57343 (* 2.0 l_0_15_42)))
 (let ((?x57397 (* ?x57343 l_0_15_53)))
 (let ((?x57339 (* 2.0 l_0_15_41)))
 (let ((?x57395 (* ?x57339 l_0_15_52)))
 (let ((?x57335 (* 2.0 l_0_15_40)))
 (let ((?x57393 (* ?x57335 l_0_15_51)))
 (let ((?x57331 (* 2.0 l_0_15_39)))
 (let ((?x57391 (* ?x57331 l_0_15_50)))
 (let ((?x57327 (* 2.0 l_0_15_15)))
 (let ((?x57389 (* ?x57327 l_0_15_26)))
 (let ((?x57323 (* 2.0 l_0_15_14)))
 (let ((?x57387 (* ?x57323 l_0_15_25)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57385 (* ?x57002 l_0_15_24)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57383 (* ?x56118 l_0_15_23)))
 (let ((?x38599 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_22) ?x57383) ?x57385) ?x57387) ?x57389)))
 (let ((?x57945 (- (- (- (- (- ?x38599 ?x57391) ?x57393) ?x57395) ?x57397) ?x57399)))
 (= ?x57945 0.0))))))))))))))))))))))
(assert
 (let ((?x57448 (* l_0_15_49 l_0_15_49)))
 (let ((?x57446 (* l_0_15_48 l_0_15_48)))
 (let ((?x57444 (* l_0_15_47 l_0_15_47)))
 (let ((?x57442 (* l_0_15_46 l_0_15_46)))
 (let ((?x57440 (* l_0_15_45 l_0_15_45)))
 (let ((?x57438 (* l_0_15_44 l_0_15_44)))
 (let ((?x57431 (* l_0_15_21 l_0_15_21)))
 (let ((?x57429 (* l_0_15_20 l_0_15_20)))
 (let ((?x57427 (* l_0_15_19 l_0_15_19)))
 (let ((?x57425 (* l_0_15_18 l_0_15_18)))
 (let ((?x57958 (+ (+ (+ (* l_0_15_16 l_0_15_16) (* l_0_15_17 l_0_15_17)) ?x57425) ?x57427)))
 (let ((?x57965 (- (- (- (- (- (+ (+ ?x57958 ?x57429) ?x57431) ?x57438) ?x57440) ?x57442) ?x57444) ?x57446)))
 (= (- ?x57965 ?x57448) 0.0))))))))))))))
(assert
 (let ((?x57488 (* (* 2.0 l_0_15_49) l_0_15_55)))
 (let ((?x57485 (* (* 2.0 l_0_15_48) l_0_15_54)))
 (let ((?x57482 (* (* 2.0 l_0_15_47) l_0_15_53)))
 (let ((?x57479 (* (* 2.0 l_0_15_46) l_0_15_52)))
 (let ((?x57476 (* (* 2.0 l_0_15_45) l_0_15_51)))
 (let ((?x57473 (* (* 2.0 l_0_15_44) l_0_15_50)))
 (let ((?x57465 (* (* 2.0 l_0_15_21) l_0_15_27)))
 (let ((?x57462 (* (* 2.0 l_0_15_20) l_0_15_26)))
 (let ((?x38545 (* (* 2.0 l_0_15_19) l_0_15_25)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x38558 (* ?x57035 l_0_15_24)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x38559 (* ?x56725 l_0_15_23)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x38600 (* ?x56722 l_0_15_22)))
 (let ((?x57969 (- (- (+ (+ (+ (+ (+ ?x38600 ?x38559) ?x38558) ?x38545) ?x57462) ?x57465) ?x57473) ?x57476)))
 (= (- (- (- (- ?x57969 ?x57479) ?x57482) ?x57485) ?x57488) 0.0))))))))))))))))))
(assert
 (let ((?x57535 (* l_0_15_56 l_0_15_56)))
 (let ((?x57533 (* l_0_15_55 l_0_15_55)))
 (let ((?x57531 (* l_0_15_54 l_0_15_54)))
 (let ((?x57529 (* l_0_15_53 l_0_15_53)))
 (let ((?x57527 (* l_0_15_52 l_0_15_52)))
 (let ((?x57525 (* l_0_15_51 l_0_15_51)))
 (let ((?x57523 (* l_0_15_50 l_0_15_50)))
 (let ((?x57521 (* l_0_15_28 l_0_15_28)))
 (let ((?x57519 (* l_0_15_27 l_0_15_27)))
 (let ((?x57517 (* l_0_15_26 l_0_15_26)))
 (let ((?x57515 (* l_0_15_25 l_0_15_25)))
 (let ((?x57513 (* l_0_15_24 l_0_15_24)))
 (let ((?x14139 (+ (+ (+ (* l_0_15_22 l_0_15_22) (* l_0_15_23 l_0_15_23)) ?x57513) ?x57515)))
 (let ((?x14075 (- (- (- (- (+ (+ (+ ?x14139 ?x57517) ?x57519) ?x57521) ?x57523) ?x57525) ?x57527) ?x57529)))
 (= (- (- (- ?x14075 ?x57531) ?x57533) ?x57535) 0.0))))))))))))))))
(assert
 (let ((?x56081 (* l_0_15_29 l_0_15_29)))
 (let ((?x56085 (* l_0_15_1 l_0_15_1)))
 (let ((?x38730 (- ?x56085 ?x56081)))
 (= ?x38730 0.0)))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x9985 (* ?x10013 l_0_15_30)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x12712 (* ?x37011 l_0_15_2)))
 (let ((?x14144 (- (+ ?x12712 (* (* 2.0 l_0_15_141) l_0_15_144)) (* (* 2.0 l_0_15_169) l_0_15_172))))
 (= (- ?x14144 ?x9985) 0.0)))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56139 (* ?x10013 l_0_15_32)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x57619 (* ?x37011 l_0_15_4)))
 (= (- ?x57619 ?x56139) 0.0))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56211 (* ?x10013 l_0_15_35)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x57657 (* ?x37011 l_0_15_7)))
 (let ((?x57658 (- ?x57657 ?x56211)))
 (= ?x57658 0.0)))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56267 (* ?x10013 l_0_15_39)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x36987 (* ?x37011 l_0_15_11)))
 (let ((?x57686 (- ?x36987 ?x56267)))
 (= ?x57686 0.0)))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56310 (* ?x10013 l_0_15_44)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x36989 (* ?x37011 l_0_15_16)))
 (= (- ?x36989 ?x56310) 0.0))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56367 (* ?x10013 l_0_15_50)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x13117 (* ?x37011 l_0_15_22)))
 (let ((?x57984 (- (+ (- ?x13117 ?x56367) (* (* 2.0 l_0_15_57) l_0_15_60)) (* (* 2.0 l_0_15_85) l_0_15_88))))
 (= ?x57984 0.0)))))))
(assert
 (let ((?x56454 (* l_0_15_31 l_0_15_31)))
 (let ((?x56452 (* l_0_15_30 l_0_15_30)))
 (let ((?x56450 (* l_0_15_3 l_0_15_3)))
 (let ((?x56436 (* l_0_15_2 l_0_15_2)))
 (let ((?x14246 (+ (* (* (- 2.0) l_0_15_113) l_0_15_116) (* (* 2.0 l_0_15_142) l_0_15_144))))
 (let ((?x39737 (- (+ ?x14246 (* (* 2.0 l_0_15_143) l_0_15_145)) (* (* 2.0 l_0_15_170) l_0_15_172))))
 (let ((?x57997 (- (- ?x39737 (* (* 2.0 l_0_15_171) l_0_15_173)) (* (* 2.0 l_0_15_197) l_0_15_200))))
 (let ((?x58002 (- (- (+ ?x57997 ?x56436) (* (* 2.0 l_0_15_225) l_0_15_228)) (* (* 2.0 l_0_15_253) l_0_15_256))))
 (= (- (- (+ ?x58002 ?x56450) ?x56452) ?x56454) 0.0))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56501 (* ?x56144 l_0_15_33)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56499 (* ?x56141 l_0_15_32)))
 (let ((?x56496 (* 2.0 l_0_15_3)))
 (let ((?x56497 (* ?x56496 l_0_15_5)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x10630 (* ?x10628 l_0_15_4)))
 (let ((?x58051 (* l_0_15_174 l_0_15_174)))
 (let ((?x58049 (* l_0_15_173 l_0_15_173)))
 (let ((?x58047 (* l_0_15_172 l_0_15_172)))
 (let ((?x58045 (* l_0_15_146 l_0_15_146)))
 (let ((?x58046 (+ (+ (* l_0_15_144 l_0_15_144) (* l_0_15_145 l_0_15_145)) ?x58045)))
 (let ((?x58056 (- (- (+ (+ (- (- (- ?x58046 ?x58047) ?x58049) ?x58051) ?x10630) ?x56497) ?x56499) ?x56501)))
 (= ?x58056 0.0))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56575 (* ?x56144 l_0_15_36)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56573 (* ?x56141 l_0_15_35)))
 (let ((?x56496 (* 2.0 l_0_15_3)))
 (let ((?x56571 (* ?x56496 l_0_15_8)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x56533 (* ?x10628 l_0_15_7)))
 (let ((?x58076 (+ (* (* 2.0 l_0_15_144) l_0_15_147) (* (* 2.0 l_0_15_145) l_0_15_148))))
 (let ((?x58080 (- (+ ?x58076 (* (* 2.0 l_0_15_146) l_0_15_149)) (* (* 2.0 l_0_15_172) l_0_15_175))))
 (let ((?x58084 (- (- ?x58080 (* (* 2.0 l_0_15_173) l_0_15_176)) (* (* 2.0 l_0_15_174) l_0_15_177))))
 (= (- (- (+ (+ ?x58084 ?x56533) ?x56571) ?x56573) ?x56575) 0.0)))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56777 (* ?x56144 l_0_15_45)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56774 (* ?x56141 l_0_15_44)))
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56139 (* ?x10013 l_0_15_32)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x56726 (* ?x56725 l_0_15_3)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x56723 (* ?x56722 l_0_15_2)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x57619 (* ?x37011 l_0_15_4)))
 (let ((?x58107 (+ (+ ?x57619 (* (* 2.0 l_0_15_144) l_0_15_156)) (* (* 2.0 l_0_15_145) l_0_15_157))))
 (let ((?x58113 (- (+ (+ (+ ?x58107 (* (* 2.0 l_0_15_146) l_0_15_158)) ?x56723) ?x56726) (* (* 2.0 l_0_15_172) l_0_15_184))))
 (let ((?x58117 (- (- ?x58113 (* (* 2.0 l_0_15_173) l_0_15_185)) (* (* 2.0 l_0_15_174) l_0_15_186))))
 (= (- (- (- ?x58117 ?x56139) ?x56774) ?x56777) 0.0)))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56881 (* ?x56144 l_0_15_51)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56879 (* ?x56141 l_0_15_50)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x56857 (* ?x56856 l_0_15_3)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x56844 (* ?x10628 l_0_15_22)))
 (let ((?x58156 (+ (* (* 2.0 l_0_15_144) l_0_15_162) (* (* 2.0 l_0_15_145) l_0_15_163))))
 (let ((?x58160 (- (+ ?x58156 (* (* 2.0 l_0_15_146) l_0_15_164)) (* (* 2.0 l_0_15_172) l_0_15_190))))
 (let ((?x58164 (- (- ?x58160 (* (* 2.0 l_0_15_173) l_0_15_191)) (* (* 2.0 l_0_15_174) l_0_15_192))))
 (let ((?x58170 (+ (- (- (+ (+ ?x58164 ?x56844) ?x56857) ?x56879) ?x56881) (* (* 2.0 l_0_15_58) l_0_15_60))))
 (let ((?x58174 (- (+ ?x58170 (* (* 2.0 l_0_15_59) l_0_15_61)) (* (* 2.0 l_0_15_86) l_0_15_88))))
 (= (- ?x58174 (* (* 2.0 l_0_15_87) l_0_15_89)) 0.0)))))))))))))))
(assert
 (let ((?x56941 (* l_0_15_6 l_0_15_6)))
 (let ((?x56939 (* l_0_15_5 l_0_15_5)))
 (let ((?x56937 (* l_0_15_4 l_0_15_4)))
 (let ((?x56935 (* l_0_15_34 l_0_15_34)))
 (let ((?x39328 (- (- (* (- l_0_15_32) l_0_15_32) (* l_0_15_33 l_0_15_33)) ?x56935)))
 (= (+ (+ (+ ?x39328 ?x56937) ?x56939) ?x56941) 0.0)))))))
(assert
 (let ((?x56970 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x56967 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x56964 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x56961 (* ?x56960 l_0_15_37)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x56958 (* ?x56957 l_0_15_36)))
 (let ((?x57879 (+ (+ (- (- (* (* (- 2.0) l_0_15_32) l_0_15_35) ?x56958) ?x56961) ?x56964) ?x56967)))
 (= (+ ?x57879 ?x56970) 0.0))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57009 (* ?x56960 l_0_15_41)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57007 (* ?x56957 l_0_15_40)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57005 (* ?x56955 l_0_15_39)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57003 (* ?x57002 l_0_15_6)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57000 (* ?x56118 l_0_15_5)))
 (let ((?x57030 (+ (+ (* (* 2.0 l_0_15_11) l_0_15_4) ?x57000) ?x57003)))
 (= (- (- (- ?x57030 ?x57005) ?x57007) ?x57009) 0.0)))))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57045 (* ?x56960 l_0_15_46)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57042 (* ?x56957 l_0_15_45)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57039 (* ?x56955 l_0_15_44)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x57036 (* ?x57035 l_0_15_6)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x57033 (* ?x56725 l_0_15_5)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x57031 (* ?x56722 l_0_15_4)))
 (= (- (- (- (+ (+ ?x57031 ?x57033) ?x57036) ?x57039) ?x57042) ?x57045) 0.0))))))))))))))
(assert
 (let ((?x58198 (* l_0_15_90 l_0_15_90)))
 (let ((?x58196 (* l_0_15_89 l_0_15_89)))
 (let ((?x58194 (* l_0_15_88 l_0_15_88)))
 (let ((?x14338 (* l_0_15_62 l_0_15_62)))
 (let ((?x39820 (* l_0_15_61 l_0_15_61)))
 (let ((?x39812 (* l_0_15_60 l_0_15_60)))
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57101 (* ?x56960 l_0_15_52)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57099 (* ?x56957 l_0_15_51)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57097 (* ?x56955 l_0_15_50)))
 (let ((?x57094 (* 2.0 l_0_15_24)))
 (let ((?x57095 (* ?x57094 l_0_15_6)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x57092 (* ?x56856 l_0_15_5)))
 (let ((?x39466 (- (- (+ (+ (* (* 2.0 l_0_15_22) l_0_15_4) ?x57092) ?x57095) ?x57097) ?x57099)))
 (let ((?x39467 (- ?x39466 ?x57101)))
 (= (- (- (- (+ (+ (+ ?x39467 ?x39812) ?x39820) ?x14338) ?x58194) ?x58196) ?x58198) 0.0))))))))))))))))))))
(assert
 (let ((?x57138 (* l_0_15_9 l_0_15_9)))
 (let ((?x57136 (* l_0_15_8 l_0_15_8)))
 (let ((?x57134 (* l_0_15_7 l_0_15_7)))
 (let ((?x57132 (* l_0_15_38 l_0_15_38)))
 (let ((?x57130 (* l_0_15_37 l_0_15_37)))
 (let ((?x57128 (* l_0_15_36 l_0_15_36)))
 (let ((?x39507 (- (- (- (* l_0_15_10 l_0_15_10) (* l_0_15_35 l_0_15_35)) ?x57128) ?x57130)))
 (= (+ (+ (+ (- ?x39507 ?x57132) ?x57134) ?x57136) ?x57138) 0.0)))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57169 (* ?x57168 l_0_15_42)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57166 (* ?x57165 l_0_15_41)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57163 (* ?x57162 l_0_15_40)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57160 (* ?x57159 l_0_15_39)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57157 (* ?x57002 l_0_15_9)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57155 (* ?x56118 l_0_15_8)))
 (let ((?x10131 (* 2.0 l_0_15_11)))
 (let ((?x57153 (* ?x10131 l_0_15_7)))
 (let ((?x57187 (* 2.0 l_0_15_10)))
 (let ((?x12491 (* ?x57187 l_0_15_14)))
 (let ((?x13701 (- (- (- (- (+ (+ (+ ?x12491 ?x57153) ?x57155) ?x57157) ?x57160) ?x57163) ?x57166) ?x57169)))
 (= ?x13701 0.0)))))))))))))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57218 (* ?x57168 l_0_15_47)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57215 (* ?x57165 l_0_15_46)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57212 (* ?x57162 l_0_15_45)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57209 (* ?x57159 l_0_15_44)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x57206 (* ?x57035 l_0_15_9)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x57204 (* ?x56725 l_0_15_8)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x57202 (* ?x56722 l_0_15_7)))
 (let ((?x57187 (* 2.0 l_0_15_10)))
 (let ((?x57189 (* ?x57187 l_0_15_19)))
 (let ((?x57901 (- (- (- (- (+ (+ (+ ?x57189 ?x57202) ?x57204) ?x57206) ?x57209) ?x57212) ?x57215) ?x57218)))
 (= ?x57901 0.0)))))))))))))))))))
(assert
 (let ((?x57294 (* l_0_15_43 l_0_15_43)))
 (let ((?x57292 (* l_0_15_42 l_0_15_42)))
 (let ((?x57290 (* l_0_15_41 l_0_15_41)))
 (let ((?x57288 (* l_0_15_40 l_0_15_40)))
 (let ((?x57286 (* l_0_15_39 l_0_15_39)))
 (let ((?x57284 (* l_0_15_15 l_0_15_15)))
 (let ((?x57282 (* l_0_15_14 l_0_15_14)))
 (let ((?x57273 (* l_0_15_13 l_0_15_13)))
 (let ((?x57906 (+ (+ (+ (* l_0_15_11 l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x57273) ?x57282)))
 (= (- (- (- (- (- (+ ?x57906 ?x57284) ?x57286) ?x57288) ?x57290) ?x57292) ?x57294) 0.0)))))))))))
(assert
 (let ((?x57347 (* 2.0 l_0_15_43)))
 (let ((?x57348 (* ?x57347 l_0_15_48)))
 (let ((?x57343 (* 2.0 l_0_15_42)))
 (let ((?x57344 (* ?x57343 l_0_15_47)))
 (let ((?x57339 (* 2.0 l_0_15_41)))
 (let ((?x57340 (* ?x57339 l_0_15_46)))
 (let ((?x57335 (* 2.0 l_0_15_40)))
 (let ((?x57336 (* ?x57335 l_0_15_45)))
 (let ((?x57331 (* 2.0 l_0_15_39)))
 (let ((?x57332 (* ?x57331 l_0_15_44)))
 (let ((?x57327 (* 2.0 l_0_15_15)))
 (let ((?x57328 (* ?x57327 l_0_15_20)))
 (let ((?x57323 (* 2.0 l_0_15_14)))
 (let ((?x57324 (* ?x57323 l_0_15_19)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57320 (* ?x57002 l_0_15_18)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57317 (* ?x56118 l_0_15_17)))
 (let ((?x38504 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_16) ?x57317) ?x57320) ?x57324) ?x57328)))
 (= (- (- (- (- (- ?x38504 ?x57332) ?x57336) ?x57340) ?x57344) ?x57348) 0.0)))))))))))))))))))))
(assert
 (let ((?x57347 (* 2.0 l_0_15_43)))
 (let ((?x57399 (* ?x57347 l_0_15_54)))
 (let ((?x57343 (* 2.0 l_0_15_42)))
 (let ((?x57397 (* ?x57343 l_0_15_53)))
 (let ((?x57339 (* 2.0 l_0_15_41)))
 (let ((?x57395 (* ?x57339 l_0_15_52)))
 (let ((?x57335 (* 2.0 l_0_15_40)))
 (let ((?x57393 (* ?x57335 l_0_15_51)))
 (let ((?x57331 (* 2.0 l_0_15_39)))
 (let ((?x57391 (* ?x57331 l_0_15_50)))
 (let ((?x57327 (* 2.0 l_0_15_15)))
 (let ((?x57389 (* ?x57327 l_0_15_26)))
 (let ((?x57323 (* 2.0 l_0_15_14)))
 (let ((?x57387 (* ?x57323 l_0_15_25)))
 (let ((?x57002 (* 2.0 l_0_15_13)))
 (let ((?x57385 (* ?x57002 l_0_15_24)))
 (let ((?x56118 (* 2.0 l_0_15_12)))
 (let ((?x57383 (* ?x56118 l_0_15_23)))
 (let ((?x38599 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_22) ?x57383) ?x57385) ?x57387) ?x57389)))
 (let ((?x57945 (- (- (- (- (- ?x38599 ?x57391) ?x57393) ?x57395) ?x57397) ?x57399)))
 (let ((?x58219 (+ (+ ?x57945 (* (* 2.0 l_0_15_60) l_0_15_67)) (* (* 2.0 l_0_15_61) l_0_15_68))))
 (let ((?x58223 (- (+ ?x58219 (* (* 2.0 l_0_15_62) l_0_15_69)) (* (* 2.0 l_0_15_88) l_0_15_95))))
 (let ((?x58227 (- (- ?x58223 (* (* 2.0 l_0_15_89) l_0_15_96)) (* (* 2.0 l_0_15_90) l_0_15_97))))
 (= ?x58227 0.0)))))))))))))))))))))))))
(assert
 (let ((?x57448 (* l_0_15_49 l_0_15_49)))
 (let ((?x57446 (* l_0_15_48 l_0_15_48)))
 (let ((?x57444 (* l_0_15_47 l_0_15_47)))
 (let ((?x57442 (* l_0_15_46 l_0_15_46)))
 (let ((?x57440 (* l_0_15_45 l_0_15_45)))
 (let ((?x57438 (* l_0_15_44 l_0_15_44)))
 (let ((?x57431 (* l_0_15_21 l_0_15_21)))
 (let ((?x57429 (* l_0_15_20 l_0_15_20)))
 (let ((?x57427 (* l_0_15_19 l_0_15_19)))
 (let ((?x57425 (* l_0_15_18 l_0_15_18)))
 (let ((?x57958 (+ (+ (+ (* l_0_15_16 l_0_15_16) (* l_0_15_17 l_0_15_17)) ?x57425) ?x57427)))
 (let ((?x57965 (- (- (- (- (- (+ (+ ?x57958 ?x57429) ?x57431) ?x57438) ?x57440) ?x57442) ?x57444) ?x57446)))
 (= (- ?x57965 ?x57448) 0.0))))))))))))))
(assert
 (let ((?x57488 (* (* 2.0 l_0_15_49) l_0_15_55)))
 (let ((?x57485 (* (* 2.0 l_0_15_48) l_0_15_54)))
 (let ((?x57482 (* (* 2.0 l_0_15_47) l_0_15_53)))
 (let ((?x57479 (* (* 2.0 l_0_15_46) l_0_15_52)))
 (let ((?x57476 (* (* 2.0 l_0_15_45) l_0_15_51)))
 (let ((?x57473 (* (* 2.0 l_0_15_44) l_0_15_50)))
 (let ((?x57465 (* (* 2.0 l_0_15_21) l_0_15_27)))
 (let ((?x57462 (* (* 2.0 l_0_15_20) l_0_15_26)))
 (let ((?x38545 (* (* 2.0 l_0_15_19) l_0_15_25)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x38558 (* ?x57035 l_0_15_24)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x38559 (* ?x56725 l_0_15_23)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x38600 (* ?x56722 l_0_15_22)))
 (let ((?x58258 (- (* (* (- 2.0) l_0_15_100) l_0_15_88) (* (* 2.0 l_0_15_101) l_0_15_89))))
 (let ((?x58263 (+ (+ (+ (- ?x58258 (* (* 2.0 l_0_15_102) l_0_15_90)) ?x38600) ?x38559) ?x38558)))
 (let ((?x58270 (- (- (- (- (+ (+ (+ ?x58263 ?x38545) ?x57462) ?x57465) ?x57473) ?x57476) ?x57479) ?x57482)))
 (let ((?x58276 (+ (+ (- (- ?x58270 ?x57485) ?x57488) (* (* 2.0 l_0_15_60) l_0_15_72)) (* (* 2.0 l_0_15_61) l_0_15_73))))
 (= (+ ?x58276 (* (* 2.0 l_0_15_62) l_0_15_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x57535 (* l_0_15_56 l_0_15_56)))
 (let ((?x57533 (* l_0_15_55 l_0_15_55)))
 (let ((?x57531 (* l_0_15_54 l_0_15_54)))
 (let ((?x57529 (* l_0_15_53 l_0_15_53)))
 (let ((?x57527 (* l_0_15_52 l_0_15_52)))
 (let ((?x57525 (* l_0_15_51 l_0_15_51)))
 (let ((?x57523 (* l_0_15_50 l_0_15_50)))
 (let ((?x57521 (* l_0_15_28 l_0_15_28)))
 (let ((?x57519 (* l_0_15_27 l_0_15_27)))
 (let ((?x57517 (* l_0_15_26 l_0_15_26)))
 (let ((?x57515 (* l_0_15_25 l_0_15_25)))
 (let ((?x57513 (* l_0_15_24 l_0_15_24)))
 (let ((?x57511 (* l_0_15_23 l_0_15_23)))
 (let ((?x57539 (* l_0_15_22 l_0_15_22)))
 (let ((?x58318 (- (* (* (- 2.0) l_0_15_106) l_0_15_88) (* (* 2.0 l_0_15_107) l_0_15_89))))
 (let ((?x58323 (+ (+ (+ (- ?x58318 (* (* 2.0 l_0_15_108) l_0_15_90)) ?x57539) ?x57511) ?x57513)))
 (let ((?x58330 (- (- (- (+ (+ (+ (+ ?x58323 ?x57515) ?x57517) ?x57519) ?x57521) ?x57523) ?x57525) ?x57527)))
 (let ((?x58336 (+ (- (- (- (- ?x58330 ?x57529) ?x57531) ?x57533) ?x57535) (* (* 2.0 l_0_15_60) l_0_15_78))))
 (let ((?x58340 (+ (+ ?x58336 (* (* 2.0 l_0_15_61) l_0_15_79)) (* (* 2.0 l_0_15_62) l_0_15_80))))
 (= ?x58340 0.0)))))))))))))))))))))
(assert
 (let ((?x56081 (* l_0_15_29 l_0_15_29)))
 (let ((?x58382 (- (+ (* l_0_15_1 l_0_15_1) (* (* 2.0 l_0_15_141) l_0_15_156)) (* (* 2.0 l_0_15_169) l_0_15_184))))
 (= (- ?x58382 ?x56081) 0.0))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x9985 (* ?x10013 l_0_15_30)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x12712 (* ?x37011 l_0_15_2)))
 (let ((?x58402 (+ (- ?x12712 (* (* 2.0 l_0_15_113) l_0_15_128)) (* (* 2.0 l_0_15_142) l_0_15_156))))
 (let ((?x58406 (- (+ ?x58402 (* (* 2.0 l_0_15_143) l_0_15_157)) (* (* 2.0 l_0_15_170) l_0_15_184))))
 (let ((?x58410 (- (- ?x58406 (* (* 2.0 l_0_15_171) l_0_15_185)) (* (* 2.0 l_0_15_197) l_0_15_212))))
 (let ((?x58414 (- (- ?x58410 (* (* 2.0 l_0_15_225) l_0_15_240)) (* (* 2.0 l_0_15_253) l_0_15_268))))
 (= (- ?x58414 ?x9985) 0.0))))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56211 (* ?x10013 l_0_15_35)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x57657 (* ?x37011 l_0_15_7)))
 (let ((?x58467 (+ (+ ?x57657 (* (* 2.0 l_0_15_147) l_0_15_156)) (* (* 2.0 l_0_15_148) l_0_15_157))))
 (let ((?x58471 (+ (+ ?x58467 (* (* 2.0 l_0_15_149) l_0_15_158)) (* (* 2.0 l_0_15_150) l_0_15_159))))
 (let ((?x58475 (- (- ?x58471 (* (* 2.0 l_0_15_175) l_0_15_184)) (* (* 2.0 l_0_15_176) l_0_15_185))))
 (let ((?x58479 (- (- ?x58475 (* (* 2.0 l_0_15_177) l_0_15_186)) (* (* 2.0 l_0_15_178) l_0_15_187))))
 (= (- ?x58479 ?x56211) 0.0))))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56310 (* ?x10013 l_0_15_44)))
 (let ((?x58545 (* l_0_15_189 l_0_15_189)))
 (let ((?x58543 (* l_0_15_188 l_0_15_188)))
 (let ((?x58541 (* l_0_15_187 l_0_15_187)))
 (let ((?x58539 (* l_0_15_186 l_0_15_186)))
 (let ((?x58537 (* l_0_15_185 l_0_15_185)))
 (let ((?x58535 (* l_0_15_184 l_0_15_184)))
 (let ((?x58533 (* l_0_15_161 l_0_15_161)))
 (let ((?x58531 (* l_0_15_160 l_0_15_160)))
 (let ((?x58529 (* l_0_15_159 l_0_15_159)))
 (let ((?x58527 (* l_0_15_158 l_0_15_158)))
 (let ((?x58525 (* l_0_15_157 l_0_15_157)))
 (let ((?x58526 (+ (+ (* (* 2.0 l_0_15_1) l_0_15_16) (* l_0_15_156 l_0_15_156)) ?x58525)))
 (let ((?x58540 (- (- (- (+ (+ (+ (+ ?x58526 ?x58527) ?x58529) ?x58531) ?x58533) ?x58535) ?x58537) ?x58539)))
 (= (- (- (- (- ?x58540 ?x58541) ?x58543) ?x58545) ?x56310) 0.0)))))))))))))))))
(assert
 (let ((?x10013 (* 2.0 l_0_15_29)))
 (let ((?x56367 (* ?x10013 l_0_15_50)))
 (let ((?x37011 (* 2.0 l_0_15_1)))
 (let ((?x13117 (* ?x37011 l_0_15_22)))
 (let ((?x58574 (- (- ?x13117 (* (* 2.0 l_0_15_100) l_0_15_86)) (* (* 2.0 l_0_15_101) l_0_15_87))))
 (let ((?x58580 (+ (+ ?x58574 (* (* 2.0 l_0_15_156) l_0_15_162)) (* (* 2.0 l_0_15_157) l_0_15_163))))
 (let ((?x58586 (+ (+ ?x58580 (* (* 2.0 l_0_15_158) l_0_15_164)) (* (* 2.0 l_0_15_159) l_0_15_165))))
 (let ((?x58592 (+ (+ ?x58586 (* (* 2.0 l_0_15_160) l_0_15_166)) (* (* 2.0 l_0_15_161) l_0_15_167))))
 (let ((?x58598 (- (- ?x58592 (* (* 2.0 l_0_15_184) l_0_15_190)) (* (* 2.0 l_0_15_185) l_0_15_191))))
 (let ((?x58604 (- (- ?x58598 (* (* 2.0 l_0_15_186) l_0_15_192)) (* (* 2.0 l_0_15_187) l_0_15_193))))
 (let ((?x58610 (- (- ?x58604 (* (* 2.0 l_0_15_188) l_0_15_194)) (* (* 2.0 l_0_15_189) l_0_15_195))))
 (let ((?x58615 (+ (+ (- ?x58610 ?x56367) (* (* 2.0 l_0_15_58) l_0_15_72)) (* (* 2.0 l_0_15_59) l_0_15_73))))
 (= ?x58615 0.0))))))))))))))
(assert
 (let ((?x56454 (* l_0_15_31 l_0_15_31)))
 (let ((?x56452 (* l_0_15_30 l_0_15_30)))
 (let ((?x56450 (* l_0_15_3 l_0_15_3)))
 (let ((?x56436 (* l_0_15_2 l_0_15_2)))
 (let ((?x58676 (- (* (* (- 2.0) l_0_15_114) l_0_15_128) (* (* 2.0 l_0_15_115) l_0_15_129))))
 (let ((?x58690 (- (- ?x58676 (* (* 2.0 l_0_15_198) l_0_15_212)) (* (* 2.0 l_0_15_199) l_0_15_213))))
 (let ((?x58695 (- (- (+ ?x58690 ?x56436) (* (* 2.0 l_0_15_226) l_0_15_240)) (* (* 2.0 l_0_15_227) l_0_15_241))))
 (let ((?x58699 (- (- ?x58695 (* (* 2.0 l_0_15_254) l_0_15_268)) (* (* 2.0 l_0_15_255) l_0_15_269))))
 (= (- (- (+ ?x58699 ?x56450) ?x56452) ?x56454) 0.0))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56501 (* ?x56144 l_0_15_33)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56499 (* ?x56141 l_0_15_32)))
 (let ((?x56496 (* 2.0 l_0_15_3)))
 (let ((?x56497 (* ?x56496 l_0_15_5)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x10630 (* ?x10628 l_0_15_4)))
 (let ((?x58708 (- (* (* (- 2.0) l_0_15_116) l_0_15_128) (* (* 2.0 l_0_15_117) l_0_15_129))))
 (let ((?x58713 (- (+ (- ?x58708 (* (* 2.0 l_0_15_118) l_0_15_130)) ?x10630) (* (* 2.0 l_0_15_200) l_0_15_212))))
 (let ((?x58717 (- (- ?x58713 (* (* 2.0 l_0_15_201) l_0_15_213)) (* (* 2.0 l_0_15_202) l_0_15_214))))
 (let ((?x58721 (- (- ?x58717 (* (* 2.0 l_0_15_228) l_0_15_240)) (* (* 2.0 l_0_15_229) l_0_15_241))))
 (let ((?x58725 (- (- ?x58721 (* (* 2.0 l_0_15_230) l_0_15_242)) (* (* 2.0 l_0_15_256) l_0_15_268))))
 (let ((?x58729 (- (- ?x58725 (* (* 2.0 l_0_15_257) l_0_15_269)) (* (* 2.0 l_0_15_258) l_0_15_270))))
 (= (- (- (+ ?x58729 ?x56497) ?x56499) ?x56501) 0.0))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56575 (* ?x56144 l_0_15_36)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56573 (* ?x56141 l_0_15_35)))
 (let ((?x56496 (* 2.0 l_0_15_3)))
 (let ((?x56571 (* ?x56496 l_0_15_8)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x56533 (* ?x10628 l_0_15_7)))
 (let ((?x58745 (- (* (* (- 2.0) l_0_15_119) l_0_15_128) (* (* 2.0 l_0_15_120) l_0_15_129))))
 (let ((?x58749 (- (- ?x58745 (* (* 2.0 l_0_15_121) l_0_15_130)) (* (* 2.0 l_0_15_122) l_0_15_131))))
 (let ((?x58754 (- (- (+ ?x58749 ?x56533) (* (* 2.0 l_0_15_203) l_0_15_212)) (* (* 2.0 l_0_15_204) l_0_15_213))))
 (let ((?x58758 (- (- ?x58754 (* (* 2.0 l_0_15_205) l_0_15_214)) (* (* 2.0 l_0_15_206) l_0_15_215))))
 (let ((?x58762 (- (- ?x58758 (* (* 2.0 l_0_15_231) l_0_15_240)) (* (* 2.0 l_0_15_232) l_0_15_241))))
 (let ((?x58766 (- (- ?x58762 (* (* 2.0 l_0_15_233) l_0_15_242)) (* (* 2.0 l_0_15_234) l_0_15_243))))
 (let ((?x58770 (- (- ?x58766 (* (* 2.0 l_0_15_259) l_0_15_268)) (* (* 2.0 l_0_15_260) l_0_15_269))))
 (let ((?x58774 (- (- ?x58770 (* (* 2.0 l_0_15_261) l_0_15_270)) (* (* 2.0 l_0_15_262) l_0_15_271))))
 (= (- (- (+ ?x58774 ?x56571) ?x56573) ?x56575) 0.0))))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56777 (* ?x56144 l_0_15_45)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56774 (* ?x56141 l_0_15_44)))
 (let ((?x58884 (* l_0_15_273 l_0_15_273)))
 (let ((?x58882 (* l_0_15_272 l_0_15_272)))
 (let ((?x58880 (* l_0_15_271 l_0_15_271)))
 (let ((?x58878 (* l_0_15_270 l_0_15_270)))
 (let ((?x58876 (* l_0_15_269 l_0_15_269)))
 (let ((?x58874 (* l_0_15_268 l_0_15_268)))
 (let ((?x58872 (* l_0_15_245 l_0_15_245)))
 (let ((?x58870 (* l_0_15_244 l_0_15_244)))
 (let ((?x58868 (* l_0_15_243 l_0_15_243)))
 (let ((?x58866 (* l_0_15_242 l_0_15_242)))
 (let ((?x58864 (* l_0_15_241 l_0_15_241)))
 (let ((?x58862 (* l_0_15_240 l_0_15_240)))
 (let ((?x58860 (* l_0_15_217 l_0_15_217)))
 (let ((?x58858 (* l_0_15_216 l_0_15_216)))
 (let ((?x58856 (* l_0_15_215 l_0_15_215)))
 (let ((?x58854 (* l_0_15_214 l_0_15_214)))
 (let ((?x58852 (* l_0_15_213 l_0_15_213)))
 (let ((?x58850 (* l_0_15_212 l_0_15_212)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x56726 (* ?x56725 l_0_15_3)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x56723 (* ?x56722 l_0_15_2)))
 (let ((?x58835 (- (* (* (- 1.0) l_0_15_128) l_0_15_128) (* (* 1.0 l_0_15_129) l_0_15_129))))
 (let ((?x58841 (- (- ?x58835 (* (* 1.0 l_0_15_130) l_0_15_130)) (* (* 1.0 l_0_15_131) l_0_15_131))))
 (let ((?x58847 (- (- ?x58841 (* (* 1.0 l_0_15_132) l_0_15_132)) (* (* 1.0 l_0_15_133) l_0_15_133))))
 (let ((?x58859 (- (- (- (- (- (+ (+ ?x58847 ?x56723) ?x56726) ?x58850) ?x58852) ?x58854) ?x58856) ?x58858)))
 (let ((?x58873 (- (- (- (- (- (- (- ?x58859 ?x58860) ?x58862) ?x58864) ?x58866) ?x58868) ?x58870) ?x58872)))
 (let ((?x58886 (- (- (- (- (- (- (- ?x58873 ?x58874) ?x58876) ?x58878) ?x58880) ?x58882) ?x58884) ?x56774)))
 (= (- ?x58886 ?x56777) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x56144 (* 2.0 l_0_15_31)))
 (let ((?x56881 (* ?x56144 l_0_15_51)))
 (let ((?x56141 (* 2.0 l_0_15_30)))
 (let ((?x56879 (* ?x56141 l_0_15_50)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x56857 (* ?x56856 l_0_15_3)))
 (let ((?x10628 (* 2.0 l_0_15_2)))
 (let ((?x56844 (* ?x10628 l_0_15_22)))
 (let ((?x58934 (- (* (* (- 2.0) l_0_15_128) l_0_15_134) (* (* 2.0 l_0_15_129) l_0_15_135))))
 (let ((?x58940 (- (- ?x58934 (* (* 2.0 l_0_15_130) l_0_15_136)) (* (* 2.0 l_0_15_131) l_0_15_137))))
 (let ((?x58946 (- (- ?x58940 (* (* 2.0 l_0_15_132) l_0_15_138)) (* (* 2.0 l_0_15_133) l_0_15_139))))
 (let ((?x58953 (- (- (+ ?x58946 ?x56844) (* (* 2.0 l_0_15_212) l_0_15_218)) (* (* 2.0 l_0_15_213) l_0_15_219))))
 (let ((?x58959 (- (- ?x58953 (* (* 2.0 l_0_15_214) l_0_15_220)) (* (* 2.0 l_0_15_215) l_0_15_221))))
 (let ((?x58965 (- (- ?x58959 (* (* 2.0 l_0_15_216) l_0_15_222)) (* (* 2.0 l_0_15_217) l_0_15_223))))
 (let ((?x58972 (- (- (+ ?x58965 ?x56857) (* (* 2.0 l_0_15_240) l_0_15_246)) (* (* 2.0 l_0_15_241) l_0_15_247))))
 (let ((?x58978 (- (- ?x58972 (* (* 2.0 l_0_15_242) l_0_15_248)) (* (* 2.0 l_0_15_243) l_0_15_249))))
 (let ((?x58984 (- (- ?x58978 (* (* 2.0 l_0_15_244) l_0_15_250)) (* (* 2.0 l_0_15_245) l_0_15_251))))
 (let ((?x58990 (- (- ?x58984 (* (* 2.0 l_0_15_268) l_0_15_274)) (* (* 2.0 l_0_15_269) l_0_15_275))))
 (let ((?x58996 (- (- ?x58990 (* (* 2.0 l_0_15_270) l_0_15_276)) (* (* 2.0 l_0_15_271) l_0_15_277))))
 (let ((?x59002 (- (- ?x58996 (* (* 2.0 l_0_15_272) l_0_15_278)) (* (* 2.0 l_0_15_273) l_0_15_279))))
 (= (- (- ?x59002 ?x56879) ?x56881) 0.0))))))))))))))))))))))
(assert
 (let ((?x56941 (* l_0_15_6 l_0_15_6)))
 (let ((?x56939 (* l_0_15_5 l_0_15_5)))
 (let ((?x56937 (* l_0_15_4 l_0_15_4)))
 (let ((?x56935 (* l_0_15_34 l_0_15_34)))
 (let ((?x39328 (- (- (* (- l_0_15_32) l_0_15_32) (* l_0_15_33 l_0_15_33)) ?x56935)))
 (= (+ (+ (+ ?x39328 ?x56937) ?x56939) ?x56941) 0.0)))))))
(assert
 (let ((?x56970 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x56967 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x56964 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x56961 (* ?x56960 l_0_15_37)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x56958 (* ?x56957 l_0_15_36)))
 (let ((?x57879 (+ (+ (- (- (* (* (- 2.0) l_0_15_32) l_0_15_35) ?x56958) ?x56961) ?x56964) ?x56967)))
 (= (+ ?x57879 ?x56970) 0.0))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57045 (* ?x56960 l_0_15_46)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57042 (* ?x56957 l_0_15_45)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57039 (* ?x56955 l_0_15_44)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x57036 (* ?x57035 l_0_15_6)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x57033 (* ?x56725 l_0_15_5)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x57031 (* ?x56722 l_0_15_4)))
 (= (- (- (- (+ (+ ?x57031 ?x57033) ?x57036) ?x57039) ?x57042) ?x57045) 0.0))))))))))))))
(assert
 (let ((?x56960 (* 2.0 l_0_15_34)))
 (let ((?x57101 (* ?x56960 l_0_15_52)))
 (let ((?x56957 (* 2.0 l_0_15_33)))
 (let ((?x57099 (* ?x56957 l_0_15_51)))
 (let ((?x56955 (* 2.0 l_0_15_32)))
 (let ((?x57097 (* ?x56955 l_0_15_50)))
 (let ((?x57094 (* 2.0 l_0_15_24)))
 (let ((?x57095 (* ?x57094 l_0_15_6)))
 (let ((?x56856 (* 2.0 l_0_15_23)))
 (let ((?x57092 (* ?x56856 l_0_15_5)))
 (let ((?x39466 (- (- (+ (+ (* (* 2.0 l_0_15_22) l_0_15_4) ?x57092) ?x57095) ?x57097) ?x57099)))
 (let ((?x39467 (- ?x39466 ?x57101)))
 (= ?x39467 0.0))))))))))))))
(assert
 (let ((?x57138 (* l_0_15_9 l_0_15_9)))
 (let ((?x57136 (* l_0_15_8 l_0_15_8)))
 (let ((?x57134 (* l_0_15_7 l_0_15_7)))
 (let ((?x57132 (* l_0_15_38 l_0_15_38)))
 (let ((?x57130 (* l_0_15_37 l_0_15_37)))
 (let ((?x57128 (* l_0_15_36 l_0_15_36)))
 (let ((?x39507 (- (- (- (* l_0_15_10 l_0_15_10) (* l_0_15_35 l_0_15_35)) ?x57128) ?x57130)))
 (= (+ (+ (+ (- ?x39507 ?x57132) ?x57134) ?x57136) ?x57138) 0.0)))))))))
(assert
 (let ((?x57168 (* 2.0 l_0_15_38)))
 (let ((?x57218 (* ?x57168 l_0_15_47)))
 (let ((?x57165 (* 2.0 l_0_15_37)))
 (let ((?x57215 (* ?x57165 l_0_15_46)))
 (let ((?x57162 (* 2.0 l_0_15_36)))
 (let ((?x57212 (* ?x57162 l_0_15_45)))
 (let ((?x57159 (* 2.0 l_0_15_35)))
 (let ((?x57209 (* ?x57159 l_0_15_44)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x57206 (* ?x57035 l_0_15_9)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x57204 (* ?x56725 l_0_15_8)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x57202 (* ?x56722 l_0_15_7)))
 (let ((?x57187 (* 2.0 l_0_15_10)))
 (let ((?x57189 (* ?x57187 l_0_15_19)))
 (let ((?x57901 (- (- (- (- (+ (+ (+ ?x57189 ?x57202) ?x57204) ?x57206) ?x57209) ?x57212) ?x57215) ?x57218)))
 (= ?x57901 0.0)))))))))))))))))))
(assert
 (let ((?x57448 (* l_0_15_49 l_0_15_49)))
 (let ((?x57446 (* l_0_15_48 l_0_15_48)))
 (let ((?x57444 (* l_0_15_47 l_0_15_47)))
 (let ((?x57442 (* l_0_15_46 l_0_15_46)))
 (let ((?x57440 (* l_0_15_45 l_0_15_45)))
 (let ((?x57438 (* l_0_15_44 l_0_15_44)))
 (let ((?x57431 (* l_0_15_21 l_0_15_21)))
 (let ((?x57429 (* l_0_15_20 l_0_15_20)))
 (let ((?x57427 (* l_0_15_19 l_0_15_19)))
 (let ((?x57425 (* l_0_15_18 l_0_15_18)))
 (let ((?x57958 (+ (+ (+ (* l_0_15_16 l_0_15_16) (* l_0_15_17 l_0_15_17)) ?x57425) ?x57427)))
 (let ((?x57965 (- (- (- (- (- (+ (+ ?x57958 ?x57429) ?x57431) ?x57438) ?x57440) ?x57442) ?x57444) ?x57446)))
 (= (- ?x57965 ?x57448) 0.0))))))))))))))
(assert
 (let ((?x57488 (* (* 2.0 l_0_15_49) l_0_15_55)))
 (let ((?x57485 (* (* 2.0 l_0_15_48) l_0_15_54)))
 (let ((?x57482 (* (* 2.0 l_0_15_47) l_0_15_53)))
 (let ((?x57479 (* (* 2.0 l_0_15_46) l_0_15_52)))
 (let ((?x57476 (* (* 2.0 l_0_15_45) l_0_15_51)))
 (let ((?x57473 (* (* 2.0 l_0_15_44) l_0_15_50)))
 (let ((?x57465 (* (* 2.0 l_0_15_21) l_0_15_27)))
 (let ((?x57462 (* (* 2.0 l_0_15_20) l_0_15_26)))
 (let ((?x38545 (* (* 2.0 l_0_15_19) l_0_15_25)))
 (let ((?x57035 (* 2.0 l_0_15_18)))
 (let ((?x38558 (* ?x57035 l_0_15_24)))
 (let ((?x56725 (* 2.0 l_0_15_17)))
 (let ((?x38559 (* ?x56725 l_0_15_23)))
 (let ((?x56722 (* 2.0 l_0_15_16)))
 (let ((?x38600 (* ?x56722 l_0_15_22)))
 (let ((?x57969 (- (- (+ (+ (+ (+ (+ ?x38600 ?x38559) ?x38558) ?x38545) ?x57462) ?x57465) ?x57473) ?x57476)))
 (= (- (- (- (- ?x57969 ?x57479) ?x57482) ?x57485) ?x57488) 0.0))))))))))))))))))
(assert
 (let ((?x57535 (* l_0_15_56 l_0_15_56)))
 (let ((?x57533 (* l_0_15_55 l_0_15_55)))
 (let ((?x57531 (* l_0_15_54 l_0_15_54)))
 (let ((?x57529 (* l_0_15_53 l_0_15_53)))
 (let ((?x57527 (* l_0_15_52 l_0_15_52)))
 (let ((?x57525 (* l_0_15_51 l_0_15_51)))
 (let ((?x57523 (* l_0_15_50 l_0_15_50)))
 (let ((?x57521 (* l_0_15_28 l_0_15_28)))
 (let ((?x57519 (* l_0_15_27 l_0_15_27)))
 (let ((?x57517 (* l_0_15_26 l_0_15_26)))
 (let ((?x57515 (* l_0_15_25 l_0_15_25)))
 (let ((?x57513 (* l_0_15_24 l_0_15_24)))
 (let ((?x14139 (+ (+ (+ (* l_0_15_22 l_0_15_22) (* l_0_15_23 l_0_15_23)) ?x57513) ?x57515)))
 (let ((?x14075 (- (- (- (- (+ (+ (+ ?x14139 ?x57517) ?x57519) ?x57521) ?x57523) ?x57525) ?x57527) ?x57529)))
 (= (- (- (- ?x14075 ?x57531) ?x57533) ?x57535) 0.0))))))))))))))))
(assert
 (= (- (* l_0_15_57 l_0_15_57) (* l_0_15_85 l_0_15_85)) 0.0))
(assert
 (let ((?x15182 (- (* (* 2.0 l_0_15_141) l_0_15_162) (* (* 2.0 l_0_15_169) l_0_15_190))))
 (let ((?x15187 (- (+ ?x15182 (* (* 2.0 l_0_15_57) l_0_15_58)) (* (* 2.0 l_0_15_85) l_0_15_86))))
 (= ?x15187 0.0))))
(assert
 (let ((?x59085 (- (* (* 2.0 l_0_15_57) l_0_15_67) (* (* 2.0 l_0_15_85) l_0_15_95))))
 (= ?x59085 0.0)))
(assert
 (let ((?x59098 (+ (* (* (- 2.0) l_0_15_100) l_0_15_85) (* (* 2.0 l_0_15_57) l_0_15_72))))
 (= ?x59098 0.0)))
(assert
 (let ((?x59104 (+ (* (* (- 2.0) l_0_15_106) l_0_15_85) (* (* 2.0 l_0_15_57) l_0_15_78))))
 (= ?x59104 0.0)))
(assert
 (let ((?x59145 (* l_0_15_196 l_0_15_196)))
 (let ((?x59143 (* l_0_15_195 l_0_15_195)))
 (let ((?x59141 (* l_0_15_194 l_0_15_194)))
 (let ((?x59139 (* l_0_15_193 l_0_15_193)))
 (let ((?x59137 (* l_0_15_192 l_0_15_192)))
 (let ((?x59135 (* l_0_15_191 l_0_15_191)))
 (let ((?x59133 (* l_0_15_190 l_0_15_190)))
 (let ((?x59131 (* l_0_15_168 l_0_15_168)))
 (let ((?x59129 (* l_0_15_167 l_0_15_167)))
 (let ((?x59127 (* l_0_15_166 l_0_15_166)))
 (let ((?x59125 (* l_0_15_165 l_0_15_165)))
 (let ((?x59123 (* l_0_15_164 l_0_15_164)))
 (let ((?x59121 (* l_0_15_163 l_0_15_163)))
 (let ((?x59119 (* l_0_15_162 l_0_15_162)))
 (let ((?x59114 (- (* (* (- 2.0) l_0_15_106) l_0_15_86) (* (* 2.0 l_0_15_107) l_0_15_87))))
 (let ((?x59132 (+ (+ (+ (+ (+ (+ (+ ?x59114 ?x59119) ?x59121) ?x59123) ?x59125) ?x59127) ?x59129) ?x59131)))
 (let ((?x59146 (- (- (- (- (- (- (- ?x59132 ?x59133) ?x59135) ?x59137) ?x59139) ?x59141) ?x59143) ?x59145)))
 (let ((?x59150 (+ (+ ?x59146 (* (* 2.0 l_0_15_58) l_0_15_78)) (* (* 2.0 l_0_15_59) l_0_15_79))))
 (= ?x59150 0.0))))))))))))))))))))
(assert
 (let ((?x59193 (* l_0_15_99 l_0_15_99)))
 (let ((?x59191 (* l_0_15_98 l_0_15_98)))
 (let ((?x59189 (* l_0_15_97 l_0_15_97)))
 (let ((?x59187 (* l_0_15_96 l_0_15_96)))
 (let ((?x59185 (* l_0_15_95 l_0_15_95)))
 (let ((?x59183 (* l_0_15_71 l_0_15_71)))
 (let ((?x59181 (* l_0_15_70 l_0_15_70)))
 (let ((?x59179 (* l_0_15_69 l_0_15_69)))
 (let ((?x59182 (+ (+ (+ (* l_0_15_67 l_0_15_67) (* l_0_15_68 l_0_15_68)) ?x59179) ?x59181)))
 (= (- (- (- (- (- (+ ?x59182 ?x59183) ?x59185) ?x59187) ?x59189) ?x59191) ?x59193) 0.0)))))))))))
(assert
 (let ((?x59207 (- (* (* (- 2.0) l_0_15_100) l_0_15_95) (* (* 2.0 l_0_15_101) l_0_15_96))))
 (let ((?x59211 (- (- ?x59207 (* (* 2.0 l_0_15_102) l_0_15_97)) (* (* 2.0 l_0_15_103) l_0_15_98))))
 (let ((?x59217 (+ (- ?x59211 (* (* 2.0 l_0_15_104) l_0_15_99)) (* (* 2.0 l_0_15_67) l_0_15_72))))
 (let ((?x59223 (+ (+ ?x59217 (* (* 2.0 l_0_15_68) l_0_15_73)) (* (* 2.0 l_0_15_69) l_0_15_74))))
 (let ((?x59229 (+ (+ ?x59223 (* (* 2.0 l_0_15_70) l_0_15_75)) (* (* 2.0 l_0_15_71) l_0_15_76))))
 (= ?x59229 0.0)))))))
(assert
 (let ((?x59248 (- (* (* (- 2.0) l_0_15_106) l_0_15_95) (* (* 2.0 l_0_15_107) l_0_15_96))))
 (let ((?x59262 (- (- ?x59248 (* (* 2.0 l_0_15_108) l_0_15_97)) (* (* 2.0 l_0_15_109) l_0_15_98))))
 (let ((?x59267 (+ (- ?x59262 (* (* 2.0 l_0_15_110) l_0_15_99)) (* (* 2.0 l_0_15_67) l_0_15_78))))
 (let ((?x59271 (+ (+ ?x59267 (* (* 2.0 l_0_15_68) l_0_15_79)) (* (* 2.0 l_0_15_69) l_0_15_80))))
 (let ((?x59275 (+ (+ ?x59271 (* (* 2.0 l_0_15_70) l_0_15_81)) (* (* 2.0 l_0_15_71) l_0_15_82))))
 (= ?x59275 0.0)))))))
(assert
 (let ((?x59321 (* l_0_15_77 l_0_15_77)))
 (let ((?x59319 (* l_0_15_76 l_0_15_76)))
 (let ((?x59317 (* l_0_15_75 l_0_15_75)))
 (let ((?x59315 (* l_0_15_74 l_0_15_74)))
 (let ((?x59313 (* l_0_15_73 l_0_15_73)))
 (let ((?x59311 (* l_0_15_72 l_0_15_72)))
 (let ((?x59309 (* l_0_15_105 l_0_15_105)))
 (let ((?x59307 (* l_0_15_104 l_0_15_104)))
 (let ((?x59305 (* l_0_15_103 l_0_15_103)))
 (let ((?x59295 (* l_0_15_102 l_0_15_102)))
 (let ((?x59296 (- (- (* (- l_0_15_100) l_0_15_100) (* l_0_15_101 l_0_15_101)) ?x59295)))
 (let ((?x59318 (+ (+ (+ (+ (- (- (- ?x59296 ?x59305) ?x59307) ?x59309) ?x59311) ?x59313) ?x59315) ?x59317)))
 (= (+ (+ ?x59318 ?x59319) ?x59321) 0.0))))))))))))))
(assert
 (let ((?x59343 (- (* (* (- 2.0) l_0_15_100) l_0_15_106) (* (* 2.0 l_0_15_101) l_0_15_107))))
 (let ((?x59347 (- (- ?x59343 (* (* 2.0 l_0_15_102) l_0_15_108)) (* (* 2.0 l_0_15_103) l_0_15_109))))
 (let ((?x59352 (- (- ?x59347 (* (* 2.0 l_0_15_104) l_0_15_110)) (* (* 2.0 l_0_15_105) l_0_15_111))))
 (let ((?x59358 (+ (+ ?x59352 (* (* 2.0 l_0_15_72) l_0_15_78)) (* (* 2.0 l_0_15_73) l_0_15_79))))
 (let ((?x59364 (+ (+ ?x59358 (* (* 2.0 l_0_15_74) l_0_15_80)) (* (* 2.0 l_0_15_75) l_0_15_81))))
 (let ((?x59370 (+ (+ ?x59364 (* (* 2.0 l_0_15_76) l_0_15_82)) (* (* 2.0 l_0_15_77) l_0_15_83))))
 (= ?x59370 0.0))))))))
(assert
 (let ((?x59433 (* l_0_15_84 l_0_15_84)))
 (let ((?x59431 (* l_0_15_83 l_0_15_83)))
 (let ((?x59429 (* l_0_15_82 l_0_15_82)))
 (let ((?x59427 (* l_0_15_81 l_0_15_81)))
 (let ((?x59425 (* l_0_15_80 l_0_15_80)))
 (let ((?x59423 (* l_0_15_79 l_0_15_79)))
 (let ((?x59421 (* l_0_15_78 l_0_15_78)))
 (let ((?x59419 (* l_0_15_112 l_0_15_112)))
 (let ((?x59417 (* l_0_15_111 l_0_15_111)))
 (let ((?x59415 (* l_0_15_110 l_0_15_110)))
 (let ((?x59404 (* l_0_15_109 l_0_15_109)))
 (let ((?x59401 (* l_0_15_108 l_0_15_108)))
 (let ((?x59403 (- (- (* (- l_0_15_106) l_0_15_106) (* l_0_15_107 l_0_15_107)) ?x59401)))
 (let ((?x59426 (+ (+ (+ (- (- (- (- ?x59403 ?x59404) ?x59415) ?x59417) ?x59419) ?x59421) ?x59423) ?x59425)))
 (= (+ (+ (+ (+ ?x59426 ?x59427) ?x59429) ?x59431) ?x59433) 0.0))))))))))))))))
(assert
 (let ((?x59466 (* l_0_15_253 l_0_15_253)))
 (let ((?x59464 (* l_0_15_225 l_0_15_225)))
 (let ((?x59462 (* l_0_15_197 l_0_15_197)))
 (let ((?x59459 (+ (* (* (- 1.0) l_0_15_113) l_0_15_113) (* (* 2.0 l_0_15_141) l_0_15_142))))
 (let ((?x59467 (- (- (- (- ?x59459 (* (* 2.0 l_0_15_169) l_0_15_170)) ?x59462) ?x59464) ?x59466)))
 (= ?x59467 0.0)))))))
(assert
 (let ((?x59488 (+ (* (* (- 2.0) l_0_15_113) l_0_15_119) (* (* 2.0 l_0_15_142) l_0_15_147))))
 (let ((?x59492 (- (+ ?x59488 (* (* 2.0 l_0_15_143) l_0_15_148)) (* (* 2.0 l_0_15_170) l_0_15_175))))
 (let ((?x59496 (- (- ?x59492 (* (* 2.0 l_0_15_171) l_0_15_176)) (* (* 2.0 l_0_15_197) l_0_15_203))))
 (let ((?x59500 (- (- ?x59496 (* (* 2.0 l_0_15_225) l_0_15_231)) (* (* 2.0 l_0_15_253) l_0_15_259))))
 (= ?x59500 0.0))))))
(assert
 (let ((?x59531 (- (* (* (- 2.0) l_0_15_114) l_0_15_116) (* (* 2.0 l_0_15_115) l_0_15_117))))
 (let ((?x59535 (- (- ?x59531 (* (* 2.0 l_0_15_198) l_0_15_200)) (* (* 2.0 l_0_15_199) l_0_15_201))))
 (let ((?x59539 (- (- ?x59535 (* (* 2.0 l_0_15_226) l_0_15_228)) (* (* 2.0 l_0_15_227) l_0_15_229))))
 (let ((?x59543 (- (- ?x59539 (* (* 2.0 l_0_15_254) l_0_15_256)) (* (* 2.0 l_0_15_255) l_0_15_257))))
 (= ?x59543 0.0))))))
(assert
 (let ((?x40670 (- (* (* (- 2.0) l_0_15_114) l_0_15_119) (* (* 2.0 l_0_15_115) l_0_15_120))))
 (let ((?x59562 (- (- ?x40670 (* (* 2.0 l_0_15_198) l_0_15_203)) (* (* 2.0 l_0_15_199) l_0_15_204))))
 (let ((?x59566 (- (- ?x59562 (* (* 2.0 l_0_15_226) l_0_15_231)) (* (* 2.0 l_0_15_227) l_0_15_232))))
 (let ((?x59570 (- (- ?x59566 (* (* 2.0 l_0_15_254) l_0_15_259)) (* (* 2.0 l_0_15_255) l_0_15_260))))
 (= ?x59570 0.0))))))
(assert
 (let ((?x59599 (- (* (* (- 2.0) l_0_15_114) l_0_15_134) (* (* 2.0 l_0_15_115) l_0_15_135))))
 (let ((?x59603 (- (- ?x59599 (* (* 2.0 l_0_15_198) l_0_15_218)) (* (* 2.0 l_0_15_199) l_0_15_219))))
 (let ((?x59607 (- (- ?x59603 (* (* 2.0 l_0_15_226) l_0_15_246)) (* (* 2.0 l_0_15_227) l_0_15_247))))
 (let ((?x59611 (- (- ?x59607 (* (* 2.0 l_0_15_254) l_0_15_274)) (* (* 2.0 l_0_15_255) l_0_15_275))))
 (= ?x59611 0.0))))))
(assert
 (let ((?x59669 (* l_0_15_258 l_0_15_258)))
 (let ((?x59667 (* l_0_15_257 l_0_15_257)))
 (let ((?x59665 (* l_0_15_256 l_0_15_256)))
 (let ((?x59663 (* l_0_15_230 l_0_15_230)))
 (let ((?x59661 (* l_0_15_229 l_0_15_229)))
 (let ((?x59659 (* l_0_15_228 l_0_15_228)))
 (let ((?x59657 (* l_0_15_202 l_0_15_202)))
 (let ((?x59655 (* l_0_15_201 l_0_15_201)))
 (let ((?x59653 (* l_0_15_200 l_0_15_200)))
 (let ((?x59649 (- (* (* (- 1.0) l_0_15_116) l_0_15_116) (* (* 1.0 l_0_15_117) l_0_15_117))))
 (let ((?x59658 (- (- (- (- ?x59649 (* (* 1.0 l_0_15_118) l_0_15_118)) ?x59653) ?x59655) ?x59657)))
 (= (- (- (- (- (- (- ?x59658 ?x59659) ?x59661) ?x59663) ?x59665) ?x59667) ?x59669) 0.0)))))))))))))
(assert
 (let ((?x59700 (- (* (* (- 2.0) l_0_15_116) l_0_15_119) (* (* 2.0 l_0_15_117) l_0_15_120))))
 (let ((?x59704 (- (- ?x59700 (* (* 2.0 l_0_15_118) l_0_15_121)) (* (* 2.0 l_0_15_200) l_0_15_203))))
 (let ((?x59708 (- (- ?x59704 (* (* 2.0 l_0_15_201) l_0_15_204)) (* (* 2.0 l_0_15_202) l_0_15_205))))
 (let ((?x59712 (- (- ?x59708 (* (* 2.0 l_0_15_228) l_0_15_231)) (* (* 2.0 l_0_15_229) l_0_15_232))))
 (let ((?x59716 (- (- ?x59712 (* (* 2.0 l_0_15_230) l_0_15_233)) (* (* 2.0 l_0_15_256) l_0_15_259))))
 (let ((?x59720 (- (- ?x59716 (* (* 2.0 l_0_15_257) l_0_15_260)) (* (* 2.0 l_0_15_258) l_0_15_261))))
 (= ?x59720 0.0))))))))
(assert
 (let ((?x15874 (- (* (* (- 2.0) l_0_15_116) l_0_15_134) (* (* 2.0 l_0_15_117) l_0_15_135))))
 (let ((?x40760 (- (- ?x15874 (* (* 2.0 l_0_15_118) l_0_15_136)) (* (* 2.0 l_0_15_200) l_0_15_218))))
 (let ((?x15999 (- (- ?x40760 (* (* 2.0 l_0_15_201) l_0_15_219)) (* (* 2.0 l_0_15_202) l_0_15_220))))
 (let ((?x16058 (- (- ?x15999 (* (* 2.0 l_0_15_228) l_0_15_246)) (* (* 2.0 l_0_15_229) l_0_15_247))))
 (let ((?x40747 (- (- ?x16058 (* (* 2.0 l_0_15_230) l_0_15_248)) (* (* 2.0 l_0_15_256) l_0_15_274))))
 (let ((?x40773 (- (- ?x40747 (* (* 2.0 l_0_15_257) l_0_15_275)) (* (* 2.0 l_0_15_258) l_0_15_276))))
 (= ?x40773 0.0))))))))
(assert
 (let ((?x59825 (* l_0_15_262 l_0_15_262)))
 (let ((?x59823 (* l_0_15_261 l_0_15_261)))
 (let ((?x59821 (* l_0_15_260 l_0_15_260)))
 (let ((?x59819 (* l_0_15_259 l_0_15_259)))
 (let ((?x59817 (* l_0_15_234 l_0_15_234)))
 (let ((?x59815 (* l_0_15_233 l_0_15_233)))
 (let ((?x59813 (* l_0_15_232 l_0_15_232)))
 (let ((?x59811 (* l_0_15_231 l_0_15_231)))
 (let ((?x59809 (* l_0_15_206 l_0_15_206)))
 (let ((?x59807 (* l_0_15_205 l_0_15_205)))
 (let ((?x59805 (* l_0_15_204 l_0_15_204)))
 (let ((?x59803 (* l_0_15_203 l_0_15_203)))
 (let ((?x59796 (- (* (* (- 1.0) l_0_15_119) l_0_15_119) (* (* 1.0 l_0_15_120) l_0_15_120))))
 (let ((?x59802 (- (- ?x59796 (* (* 1.0 l_0_15_121) l_0_15_121)) (* (* 1.0 l_0_15_122) l_0_15_122))))
 (let ((?x59816 (- (- (- (- (- (- (- ?x59802 ?x59803) ?x59805) ?x59807) ?x59809) ?x59811) ?x59813) ?x59815)))
 (= (- (- (- (- (- ?x59816 ?x59817) ?x59819) ?x59821) ?x59823) ?x59825) 0.0)))))))))))))))))
(assert
 (let ((?x59913 (* l_0_15_280 l_0_15_280)))
 (let ((?x59911 (* l_0_15_279 l_0_15_279)))
 (let ((?x59909 (* l_0_15_278 l_0_15_278)))
 (let ((?x59907 (* l_0_15_277 l_0_15_277)))
 (let ((?x59905 (* l_0_15_276 l_0_15_276)))
 (let ((?x59903 (* l_0_15_275 l_0_15_275)))
 (let ((?x59901 (* l_0_15_274 l_0_15_274)))
 (let ((?x59899 (* l_0_15_252 l_0_15_252)))
 (let ((?x59897 (* l_0_15_251 l_0_15_251)))
 (let ((?x59895 (* l_0_15_250 l_0_15_250)))
 (let ((?x59893 (* l_0_15_249 l_0_15_249)))
 (let ((?x59891 (* l_0_15_248 l_0_15_248)))
 (let ((?x59889 (* l_0_15_247 l_0_15_247)))
 (let ((?x59887 (* l_0_15_246 l_0_15_246)))
 (let ((?x59885 (* l_0_15_224 l_0_15_224)))
 (let ((?x59883 (* l_0_15_223 l_0_15_223)))
 (let ((?x59881 (* l_0_15_222 l_0_15_222)))
 (let ((?x59879 (* l_0_15_221 l_0_15_221)))
 (let ((?x59877 (* l_0_15_220 l_0_15_220)))
 (let ((?x59875 (* l_0_15_219 l_0_15_219)))
 (let ((?x59873 (* l_0_15_218 l_0_15_218)))
 (let ((?x59857 (- (* (* (- 1.0) l_0_15_134) l_0_15_134) (* (* 1.0 l_0_15_135) l_0_15_135))))
 (let ((?x59863 (- (- ?x59857 (* (* 1.0 l_0_15_136) l_0_15_136)) (* (* 1.0 l_0_15_137) l_0_15_137))))
 (let ((?x59869 (- (- ?x59863 (* (* 1.0 l_0_15_138) l_0_15_138)) (* (* 1.0 l_0_15_139) l_0_15_139))))
 (let ((?x59878 (- (- (- (- ?x59869 (* (* 1.0 l_0_15_140) l_0_15_140)) ?x59873) ?x59875) ?x59877)))
 (let ((?x59892 (- (- (- (- (- (- (- ?x59878 ?x59879) ?x59881) ?x59883) ?x59885) ?x59887) ?x59889) ?x59891)))
 (let ((?x59906 (- (- (- (- (- (- (- ?x59892 ?x59893) ?x59895) ?x59897) ?x59899) ?x59901) ?x59903) ?x59905)))
 (= (- (- (- (- ?x59906 ?x59907) ?x59909) ?x59911) ?x59913) 0.0)))))))))))))))))))))))))))))
(assert
 (= (- (* l_0_15_141 l_0_15_141) (* l_0_15_169 l_0_15_169)) 0.0))
(assert
 (let ((?x59965 (- (* (* 2.0 l_0_15_141) l_0_15_147) (* (* 2.0 l_0_15_169) l_0_15_175))))
 (= ?x59965 0.0)))
(assert
 (let ((?x59986 (* l_0_15_178 l_0_15_178)))
 (let ((?x59984 (* l_0_15_177 l_0_15_177)))
 (let ((?x59982 (* l_0_15_176 l_0_15_176)))
 (let ((?x59980 (* l_0_15_175 l_0_15_175)))
 (let ((?x59978 (* l_0_15_150 l_0_15_150)))
 (let ((?x59976 (* l_0_15_149 l_0_15_149)))
 (let ((?x59977 (+ (+ (* l_0_15_147 l_0_15_147) (* l_0_15_148 l_0_15_148)) ?x59976)))
 (= (- (- (- (- (+ ?x59977 ?x59978) ?x59980) ?x59982) ?x59984) ?x59986) 0.0)))))))))
(assert
 (>= l_0_15_1 0.0))
(assert
 (>= l_0_15_3 0.0))
(assert
 (>= l_0_15_6 0.0))
(assert
 (>= l_0_15_10 0.0))
(assert
 (>= l_0_15_15 0.0))
(assert
 (>= l_0_15_21 0.0))
(assert
 (>= l_0_15_28 0.0))
(assert
 (>= l_0_15_29 0.0))
(assert
 (>= l_0_15_31 0.0))
(assert
 (>= l_0_15_34 0.0))
(assert
 (>= l_0_15_38 0.0))
(assert
 (>= l_0_15_43 0.0))
(assert
 (>= l_0_15_49 0.0))
(assert
 (>= l_0_15_56 0.0))
(assert
 (>= l_0_15_57 0.0))
(assert
 (>= l_0_15_59 0.0))
(assert
 (>= l_0_15_62 0.0))
(assert
 (>= l_0_15_66 0.0))
(assert
 (>= l_0_15_71 0.0))
(assert
 (>= l_0_15_77 0.0))
(assert
 (>= l_0_15_84 0.0))
(assert
 (>= l_0_15_85 0.0))
(assert
 (>= l_0_15_87 0.0))
(assert
 (>= l_0_15_90 0.0))
(assert
 (>= l_0_15_94 0.0))
(assert
 (>= l_0_15_99 0.0))
(assert
 (>= l_0_15_105 0.0))
(assert
 (>= l_0_15_112 0.0))
(assert
 (>= l_0_15_113 0.0))
(assert
 (>= l_0_15_115 0.0))
(assert
 (>= l_0_15_118 0.0))
(assert
 (>= l_0_15_122 0.0))
(assert
 (>= l_0_15_127 0.0))
(assert
 (>= l_0_15_133 0.0))
(assert
 (>= l_0_15_140 0.0))
(assert
 (>= l_0_15_141 0.0))
(assert
 (>= l_0_15_143 0.0))
(assert
 (>= l_0_15_146 0.0))
(assert
 (>= l_0_15_150 0.0))
(assert
 (>= l_0_15_155 0.0))
(assert
 (>= l_0_15_161 0.0))
(assert
 (>= l_0_15_168 0.0))
(assert
 (>= l_0_15_169 0.0))
(assert
 (>= l_0_15_171 0.0))
(assert
 (>= l_0_15_174 0.0))
(assert
 (>= l_0_15_178 0.0))
(assert
 (>= l_0_15_183 0.0))
(assert
 (>= l_0_15_189 0.0))
(assert
 (>= l_0_15_196 0.0))
(assert
 (>= l_0_15_197 0.0))
(assert
 (>= l_0_15_199 0.0))
(assert
 (>= l_0_15_202 0.0))
(assert
 (>= l_0_15_206 0.0))
(assert
 (>= l_0_15_211 0.0))
(assert
 (>= l_0_15_217 0.0))
(assert
 (>= l_0_15_224 0.0))
(assert
 (>= l_0_15_225 0.0))
(assert
 (>= l_0_15_227 0.0))
(assert
 (>= l_0_15_230 0.0))
(assert
 (>= l_0_15_234 0.0))
(assert
 (>= l_0_15_239 0.0))
(assert
 (>= l_0_15_245 0.0))
(assert
 (>= l_0_15_252 0.0))
(assert
 (>= l_0_15_253 0.0))
(assert
 (>= l_0_15_255 0.0))
(assert
 (>= l_0_15_258 0.0))
(assert
 (>= l_0_15_262 0.0))
(assert
 (>= l_0_15_267 0.0))
(assert
 (>= l_0_15_273 0.0))
(assert
 (>= l_0_15_280 0.0))
(assert
 (let ((?x60088 (* l_0_16_87 l_0_16_87)))
 (let ((?x60086 (* l_0_16_86 l_0_16_86)))
 (let ((?x60084 (* l_0_16_59 l_0_16_59)))
 (let ((?x60082 (* l_0_16_58 l_0_16_58)))
 (let ((?x60060 (+ (* (* (- 2.0) l_0_16_113) l_0_16_134) (* (* 2.0 l_0_16_142) l_0_16_162))))
 (let ((?x60066 (- (+ ?x60060 (* (* 2.0 l_0_16_143) l_0_16_163)) (* (* 2.0 l_0_16_170) l_0_16_190))))
 (let ((?x60072 (- (- ?x60066 (* (* 2.0 l_0_16_171) l_0_16_191)) (* (* 2.0 l_0_16_197) l_0_16_218))))
 (let ((?x60078 (- (- ?x60072 (* (* 2.0 l_0_16_225) l_0_16_246)) (* (* 2.0 l_0_16_253) l_0_16_274))))
 (let ((?x60087 (- (+ (+ (- ?x60078 (* (* 2.0 l_0_16_281) l_0_16_302)) ?x60082) ?x60084) ?x60086)))
 (= (+ (- ?x60087 ?x60088) 1.0) 0.0)))))))))))
(assert
 (let ((?x60113 (* l_0_16_171 l_0_16_171)))
 (let ((?x60111 (* l_0_16_170 l_0_16_170)))
 (let ((?x16653 (* l_0_16_143 l_0_16_143)))
 (let ((?x16678 (* l_0_16_142 l_0_16_142)))
 (let ((?x60114 (- (- (+ (+ (* (* (- 2.0) l_0_16_113) l_0_16_114) ?x16678) ?x16653) ?x60111) ?x60113)))
 (let ((?x60118 (- (- ?x60114 (* (* 2.0 l_0_16_197) l_0_16_198)) (* (* 2.0 l_0_16_225) l_0_16_226))))
 (let ((?x60122 (- (- ?x60118 (* (* 2.0 l_0_16_253) l_0_16_254)) (* (* 2.0 l_0_16_281) l_0_16_282))))
 (= (- ?x60122 1.0) 0.0)))))))))
(assert
 (let ((?x60142 (* l_0_16_283 l_0_16_283)))
 (let ((?x60140 (* l_0_16_282 l_0_16_282)))
 (let ((?x60138 (* l_0_16_255 l_0_16_255)))
 (let ((?x60136 (* l_0_16_254 l_0_16_254)))
 (let ((?x16797 (* l_0_16_227 l_0_16_227)))
 (let ((?x16806 (* l_0_16_226 l_0_16_226)))
 (let ((?x41396 (* l_0_16_199 l_0_16_199)))
 (let ((?x16804 (* l_0_16_198 l_0_16_198)))
 (let ((?x16803 (- (* (* (- 1.0) l_0_16_114) l_0_16_114) (* (* 1.0 l_0_16_115) l_0_16_115))))
 (let ((?x60141 (- (- (- (- (- (- (- ?x16803 ?x16804) ?x41396) ?x16806) ?x16797) ?x60136) ?x60138) ?x60140)))
 (= (- ?x60141 ?x60142) 0.0))))))))))))
(assert
 (let ((?x60174 (* l_0_16_29 l_0_16_29)))
 (let ((?x60170 (+ (* (- l_0_16_1) l_0_16_1) (* (* 2.0 l_0_16_141) l_0_16_151))))
 (= (+ (- ?x60170 (* (* 2.0 l_0_16_169) l_0_16_179)) ?x60174) 0.0))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60210 (* ?x60209 l_0_16_30)))
 (let ((?x60192 (- (* (* (- 2.0) l_0_16_1) l_0_16_2) (* (* 2.0 l_0_16_113) l_0_16_123))))
 (let ((?x60196 (+ (+ ?x60192 (* (* 2.0 l_0_16_142) l_0_16_151)) (* (* 2.0 l_0_16_143) l_0_16_152))))
 (let ((?x60200 (- (- ?x60196 (* (* 2.0 l_0_16_170) l_0_16_179)) (* (* 2.0 l_0_16_171) l_0_16_180))))
 (let ((?x60204 (- (- ?x60200 (* (* 2.0 l_0_16_197) l_0_16_207)) (* (* 2.0 l_0_16_225) l_0_16_235))))
 (let ((?x60208 (- (- ?x60204 (* (* 2.0 l_0_16_253) l_0_16_263)) (* (* 2.0 l_0_16_281) l_0_16_291))))
 (= (+ ?x60208 ?x60210) 0.0)))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60279 (* ?x60278 l_0_16_40)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60276 (* ?x60275 l_0_16_39)))
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60273 (* ?x60209 l_0_16_32)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x60253 (* ?x60252 l_0_16_3)))
 (let ((?x60243 (* 2.0 l_0_16_11)))
 (let ((?x60250 (* ?x60243 l_0_16_2)))
 (let ((?x60257 (+ (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_4) ?x60250) ?x60253) (* (* 2.0 l_0_16_144) l_0_16_151))))
 (let ((?x60263 (+ (+ ?x60257 (* (* 2.0 l_0_16_145) l_0_16_152)) (* (* 2.0 l_0_16_146) l_0_16_153))))
 (let ((?x60269 (- (- ?x60263 (* (* 2.0 l_0_16_172) l_0_16_179)) (* (* 2.0 l_0_16_173) l_0_16_180))))
 (let ((?x60280 (- (- (+ (- ?x60269 (* (* 2.0 l_0_16_174) l_0_16_181)) ?x60273) ?x60276) ?x60279)))
 (= ?x60280 0.0))))))))))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60343 (* ?x60209 l_0_16_35)))
 (let ((?x60321 (+ (* (* (- 2.0) l_0_16_1) l_0_16_7) (* (* 2.0 l_0_16_147) l_0_16_151))))
 (let ((?x60327 (+ (+ ?x60321 (* (* 2.0 l_0_16_148) l_0_16_152)) (* (* 2.0 l_0_16_149) l_0_16_153))))
 (let ((?x60333 (- (+ ?x60327 (* (* 2.0 l_0_16_150) l_0_16_154)) (* (* 2.0 l_0_16_175) l_0_16_179))))
 (let ((?x60339 (- (- ?x60333 (* (* 2.0 l_0_16_176) l_0_16_180)) (* (* 2.0 l_0_16_177) l_0_16_181))))
 (= (+ (- ?x60339 (* (* 2.0 l_0_16_178) l_0_16_182)) ?x60343) 0.0))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60402 (* ?x60209 l_0_16_39)))
 (let ((?x60400 (* l_0_16_183 l_0_16_183)))
 (let ((?x60398 (* l_0_16_182 l_0_16_182)))
 (let ((?x60396 (* l_0_16_181 l_0_16_181)))
 (let ((?x60394 (* l_0_16_180 l_0_16_180)))
 (let ((?x60392 (* l_0_16_179 l_0_16_179)))
 (let ((?x60390 (* l_0_16_155 l_0_16_155)))
 (let ((?x60388 (* l_0_16_154 l_0_16_154)))
 (let ((?x60386 (* l_0_16_153 l_0_16_153)))
 (let ((?x60384 (* l_0_16_152 l_0_16_152)))
 (let ((?x60385 (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_11) (* l_0_16_151 l_0_16_151)) ?x60384)))
 (let ((?x60399 (- (- (- (- (+ (+ (+ ?x60385 ?x60386) ?x60388) ?x60390) ?x60392) ?x60394) ?x60396) ?x60398)))
 (= (+ (- ?x60399 ?x60400) ?x60402) 0.0)))))))))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60458 (* ?x60209 l_0_16_44)))
 (let ((?x60402 (* ?x60209 l_0_16_39)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x60425 (* ?x60423 l_0_16_16)))
 (let ((?x60424 (* ?x60423 l_0_16_11)))
 (let ((?x60432 (+ (+ (- ?x60424 ?x60425) (* (* 2.0 l_0_16_151) l_0_16_156)) (* (* 2.0 l_0_16_152) l_0_16_157))))
 (let ((?x60438 (+ (+ ?x60432 (* (* 2.0 l_0_16_153) l_0_16_158)) (* (* 2.0 l_0_16_154) l_0_16_159))))
 (let ((?x60444 (- (+ ?x60438 (* (* 2.0 l_0_16_155) l_0_16_160)) (* (* 2.0 l_0_16_179) l_0_16_184))))
 (let ((?x60450 (- (- ?x60444 (* (* 2.0 l_0_16_180) l_0_16_185)) (* (* 2.0 l_0_16_181) l_0_16_186))))
 (let ((?x60456 (- (- ?x60450 (* (* 2.0 l_0_16_182) l_0_16_187)) (* (* 2.0 l_0_16_183) l_0_16_188))))
 (= (+ (- ?x60456 ?x60402) ?x60458) 0.0)))))))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60519 (* ?x60209 l_0_16_50)))
 (let ((?x60500 (+ (* (* (- 2.0) l_0_16_1) l_0_16_22) (* (* 2.0 l_0_16_151) l_0_16_162))))
 (let ((?x60504 (+ (+ ?x60500 (* (* 2.0 l_0_16_152) l_0_16_163)) (* (* 2.0 l_0_16_153) l_0_16_164))))
 (let ((?x60508 (+ (+ ?x60504 (* (* 2.0 l_0_16_154) l_0_16_165)) (* (* 2.0 l_0_16_155) l_0_16_166))))
 (let ((?x60512 (- (- ?x60508 (* (* 2.0 l_0_16_179) l_0_16_190)) (* (* 2.0 l_0_16_180) l_0_16_191))))
 (let ((?x60516 (- (- ?x60512 (* (* 2.0 l_0_16_181) l_0_16_192)) (* (* 2.0 l_0_16_182) l_0_16_193))))
 (let ((?x60523 (+ (+ (- ?x60516 (* (* 2.0 l_0_16_183) l_0_16_194)) ?x60519) (* (* 2.0 l_0_16_58) l_0_16_67))))
 (let ((?x60529 (- (+ ?x60523 (* (* 2.0 l_0_16_59) l_0_16_68)) (* (* 2.0 l_0_16_86) l_0_16_95))))
 (= (- ?x60529 (* (* 2.0 l_0_16_87) l_0_16_96)) 0.0)))))))))))
(assert
 (let ((?x60589 (* l_0_16_31 l_0_16_31)))
 (let ((?x60587 (* l_0_16_30 l_0_16_30)))
 (let ((?x60585 (* l_0_16_3 l_0_16_3)))
 (let ((?x60565 (* l_0_16_2 l_0_16_2)))
 (let ((?x60558 (- (* (* (- 2.0) l_0_16_114) l_0_16_123) (* (* 2.0 l_0_16_115) l_0_16_124))))
 (let ((?x60564 (- (- ?x60558 (* (* 2.0 l_0_16_198) l_0_16_207)) (* (* 2.0 l_0_16_199) l_0_16_208))))
 (let ((?x60572 (- (- (- ?x60564 ?x60565) (* (* 2.0 l_0_16_226) l_0_16_235)) (* (* 2.0 l_0_16_227) l_0_16_236))))
 (let ((?x60578 (- (- ?x60572 (* (* 2.0 l_0_16_254) l_0_16_263)) (* (* 2.0 l_0_16_255) l_0_16_264))))
 (let ((?x60584 (- (- ?x60578 (* (* 2.0 l_0_16_282) l_0_16_291)) (* (* 2.0 l_0_16_283) l_0_16_292))))
 (= (+ (+ (- ?x60584 ?x60585) ?x60587) ?x60589) 0.0)))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60666 (* ?x60278 l_0_16_33)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60664 (* ?x60275 l_0_16_32)))
 (let ((?x60661 (* 2.0 l_0_16_3)))
 (let ((?x60662 (* ?x60661 l_0_16_5)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x60623 (* ?x60622 l_0_16_4)))
 (let ((?x60618 (- (* (* (- 2.0) l_0_16_116) l_0_16_123) (* (* 2.0 l_0_16_117) l_0_16_124))))
 (let ((?x60627 (- (- (- ?x60618 (* (* 2.0 l_0_16_118) l_0_16_125)) ?x60623) (* (* 2.0 l_0_16_200) l_0_16_207))))
 (let ((?x60633 (- (- ?x60627 (* (* 2.0 l_0_16_201) l_0_16_208)) (* (* 2.0 l_0_16_202) l_0_16_209))))
 (let ((?x60639 (- (- ?x60633 (* (* 2.0 l_0_16_228) l_0_16_235)) (* (* 2.0 l_0_16_229) l_0_16_236))))
 (let ((?x60645 (- (- ?x60639 (* (* 2.0 l_0_16_230) l_0_16_237)) (* (* 2.0 l_0_16_256) l_0_16_263))))
 (let ((?x60651 (- (- ?x60645 (* (* 2.0 l_0_16_257) l_0_16_264)) (* (* 2.0 l_0_16_258) l_0_16_265))))
 (let ((?x60657 (- (- ?x60651 (* (* 2.0 l_0_16_284) l_0_16_291)) (* (* 2.0 l_0_16_285) l_0_16_292))))
 (let ((?x60667 (+ (+ (- (- ?x60657 (* (* 2.0 l_0_16_286) l_0_16_293)) ?x60662) ?x60664) ?x60666)))
 (= ?x60667 0.0))))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60778 (* ?x60278 l_0_16_36)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60776 (* ?x60275 l_0_16_35)))
 (let ((?x60661 (* 2.0 l_0_16_3)))
 (let ((?x60774 (* ?x60661 l_0_16_8)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x60724 (* ?x60622 l_0_16_7)))
 (let ((?x60717 (- (* (* (- 2.0) l_0_16_119) l_0_16_123) (* (* 2.0 l_0_16_120) l_0_16_124))))
 (let ((?x60723 (- (- ?x60717 (* (* 2.0 l_0_16_121) l_0_16_125)) (* (* 2.0 l_0_16_122) l_0_16_126))))
 (let ((?x60731 (- (- (- ?x60723 ?x60724) (* (* 2.0 l_0_16_203) l_0_16_207)) (* (* 2.0 l_0_16_204) l_0_16_208))))
 (let ((?x60737 (- (- ?x60731 (* (* 2.0 l_0_16_205) l_0_16_209)) (* (* 2.0 l_0_16_206) l_0_16_210))))
 (let ((?x60743 (- (- ?x60737 (* (* 2.0 l_0_16_231) l_0_16_235)) (* (* 2.0 l_0_16_232) l_0_16_236))))
 (let ((?x60749 (- (- ?x60743 (* (* 2.0 l_0_16_233) l_0_16_237)) (* (* 2.0 l_0_16_234) l_0_16_238))))
 (let ((?x60755 (- (- ?x60749 (* (* 2.0 l_0_16_259) l_0_16_263)) (* (* 2.0 l_0_16_260) l_0_16_264))))
 (let ((?x60761 (- (- ?x60755 (* (* 2.0 l_0_16_261) l_0_16_265)) (* (* 2.0 l_0_16_262) l_0_16_266))))
 (let ((?x60767 (- (- ?x60761 (* (* 2.0 l_0_16_287) l_0_16_291)) (* (* 2.0 l_0_16_288) l_0_16_292))))
 (let ((?x60773 (- (- ?x60767 (* (* 2.0 l_0_16_289) l_0_16_293)) (* (* 2.0 l_0_16_290) l_0_16_294))))
 (= (+ (+ (- ?x60773 ?x60774) ?x60776) ?x60778) 0.0))))))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60279 (* ?x60278 l_0_16_40)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60276 (* ?x60275 l_0_16_39)))
 (let ((?x60868 (* l_0_16_295 l_0_16_295)))
 (let ((?x60866 (* l_0_16_294 l_0_16_294)))
 (let ((?x60864 (* l_0_16_293 l_0_16_293)))
 (let ((?x60862 (* l_0_16_292 l_0_16_292)))
 (let ((?x60860 (* l_0_16_291 l_0_16_291)))
 (let ((?x60858 (* l_0_16_267 l_0_16_267)))
 (let ((?x60856 (* l_0_16_266 l_0_16_266)))
 (let ((?x60854 (* l_0_16_265 l_0_16_265)))
 (let ((?x60852 (* l_0_16_264 l_0_16_264)))
 (let ((?x60850 (* l_0_16_263 l_0_16_263)))
 (let ((?x60848 (* l_0_16_239 l_0_16_239)))
 (let ((?x60846 (* l_0_16_238 l_0_16_238)))
 (let ((?x60844 (* l_0_16_237 l_0_16_237)))
 (let ((?x60842 (* l_0_16_236 l_0_16_236)))
 (let ((?x60840 (* l_0_16_235 l_0_16_235)))
 (let ((?x60838 (* l_0_16_211 l_0_16_211)))
 (let ((?x60836 (* l_0_16_210 l_0_16_210)))
 (let ((?x60834 (* l_0_16_209 l_0_16_209)))
 (let ((?x60832 (* l_0_16_208 l_0_16_208)))
 (let ((?x60830 (* l_0_16_207 l_0_16_207)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x60253 (* ?x60252 l_0_16_3)))
 (let ((?x60817 (- (- (* (* (- 2.0) l_0_16_11) l_0_16_2) ?x60253) (* (* 1.0 l_0_16_123) l_0_16_123))))
 (let ((?x60823 (- (- ?x60817 (* (* 1.0 l_0_16_124) l_0_16_124)) (* (* 1.0 l_0_16_125) l_0_16_125))))
 (let ((?x60829 (- (- ?x60823 (* (* 1.0 l_0_16_126) l_0_16_126)) (* (* 1.0 l_0_16_127) l_0_16_127))))
 (let ((?x60843 (- (- (- (- (- (- (- ?x60829 ?x60830) ?x60832) ?x60834) ?x60836) ?x60838) ?x60840) ?x60842)))
 (let ((?x60857 (- (- (- (- (- (- (- ?x60843 ?x60844) ?x60846) ?x60848) ?x60850) ?x60852) ?x60854) ?x60856)))
 (let ((?x60870 (+ (- (- (- (- (- (- ?x60857 ?x60858) ?x60860) ?x60862) ?x60864) ?x60866) ?x60868) ?x60276)))
 (= (+ ?x60870 ?x60279) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x61015 (* ?x60278 l_0_16_45)))
 (let ((?x60279 (* ?x60278 l_0_16_40)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x61012 (* ?x60275 l_0_16_44)))
 (let ((?x60276 (* ?x60275 l_0_16_39)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x60949 (* ?x60948 l_0_16_3)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x60946 (* ?x60945 l_0_16_2)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x60253 (* ?x60252 l_0_16_3)))
 (let ((?x60243 (* 2.0 l_0_16_11)))
 (let ((?x60250 (* ?x60243 l_0_16_2)))
 (let ((?x60935 (- (- (+ ?x60250 ?x60253) (* (* 2.0 l_0_16_123) l_0_16_128)) (* (* 2.0 l_0_16_124) l_0_16_129))))
 (let ((?x60941 (- (- ?x60935 (* (* 2.0 l_0_16_125) l_0_16_130)) (* (* 2.0 l_0_16_126) l_0_16_131))))
 (let ((?x60953 (- (- (- (- ?x60941 (* (* 2.0 l_0_16_127) l_0_16_132)) ?x60946) ?x60949) (* (* 2.0 l_0_16_207) l_0_16_212))))
 (let ((?x60959 (- (- ?x60953 (* (* 2.0 l_0_16_208) l_0_16_213)) (* (* 2.0 l_0_16_209) l_0_16_214))))
 (let ((?x60965 (- (- ?x60959 (* (* 2.0 l_0_16_210) l_0_16_215)) (* (* 2.0 l_0_16_211) l_0_16_216))))
 (let ((?x60971 (- (- ?x60965 (* (* 2.0 l_0_16_235) l_0_16_240)) (* (* 2.0 l_0_16_236) l_0_16_241))))
 (let ((?x60977 (- (- ?x60971 (* (* 2.0 l_0_16_237) l_0_16_242)) (* (* 2.0 l_0_16_238) l_0_16_243))))
 (let ((?x60983 (- (- ?x60977 (* (* 2.0 l_0_16_239) l_0_16_244)) (* (* 2.0 l_0_16_263) l_0_16_268))))
 (let ((?x60989 (- (- ?x60983 (* (* 2.0 l_0_16_264) l_0_16_269)) (* (* 2.0 l_0_16_265) l_0_16_270))))
 (let ((?x60995 (- (- ?x60989 (* (* 2.0 l_0_16_266) l_0_16_271)) (* (* 2.0 l_0_16_267) l_0_16_272))))
 (let ((?x61001 (- (- ?x60995 (* (* 2.0 l_0_16_291) l_0_16_296)) (* (* 2.0 l_0_16_292) l_0_16_297))))
 (let ((?x61007 (- (- ?x61001 (* (* 2.0 l_0_16_293) l_0_16_298)) (* (* 2.0 l_0_16_294) l_0_16_299))))
 (let ((?x61014 (- (+ (- (- ?x61007 (* (* 2.0 l_0_16_295) l_0_16_300)) ?x60276) ?x61012) ?x60279)))
 (= (+ ?x61014 ?x61015) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x61182 (* ?x60278 l_0_16_51)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x61180 (* ?x60275 l_0_16_50)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61148 (* ?x61147 l_0_16_3)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x61135 (* ?x60622 l_0_16_22)))
 (let ((?x61128 (- (* (* (- 2.0) l_0_16_123) l_0_16_134) (* (* 2.0 l_0_16_124) l_0_16_135))))
 (let ((?x61132 (- (- ?x61128 (* (* 2.0 l_0_16_125) l_0_16_136)) (* (* 2.0 l_0_16_126) l_0_16_137))))
 (let ((?x61138 (- (- (- ?x61132 (* (* 2.0 l_0_16_127) l_0_16_138)) ?x61135) (* (* 2.0 l_0_16_207) l_0_16_218))))
 (let ((?x61142 (- (- ?x61138 (* (* 2.0 l_0_16_208) l_0_16_219)) (* (* 2.0 l_0_16_209) l_0_16_220))))
 (let ((?x61146 (- (- ?x61142 (* (* 2.0 l_0_16_210) l_0_16_221)) (* (* 2.0 l_0_16_211) l_0_16_222))))
 (let ((?x61153 (- (- (- ?x61146 ?x61148) (* (* 2.0 l_0_16_235) l_0_16_246)) (* (* 2.0 l_0_16_236) l_0_16_247))))
 (let ((?x61157 (- (- ?x61153 (* (* 2.0 l_0_16_237) l_0_16_248)) (* (* 2.0 l_0_16_238) l_0_16_249))))
 (let ((?x61161 (- (- ?x61157 (* (* 2.0 l_0_16_239) l_0_16_250)) (* (* 2.0 l_0_16_263) l_0_16_274))))
 (let ((?x61165 (- (- ?x61161 (* (* 2.0 l_0_16_264) l_0_16_275)) (* (* 2.0 l_0_16_265) l_0_16_276))))
 (let ((?x61169 (- (- ?x61165 (* (* 2.0 l_0_16_266) l_0_16_277)) (* (* 2.0 l_0_16_267) l_0_16_278))))
 (let ((?x61173 (- (- ?x61169 (* (* 2.0 l_0_16_291) l_0_16_302)) (* (* 2.0 l_0_16_292) l_0_16_303))))
 (let ((?x61177 (- (- ?x61173 (* (* 2.0 l_0_16_293) l_0_16_304)) (* (* 2.0 l_0_16_294) l_0_16_305))))
 (= (+ (+ (- ?x61177 (* (* 2.0 l_0_16_295) l_0_16_306)) ?x61180) ?x61182) 0.0))))))))))))))))))))))
(assert
 (let ((?x61222 (* l_0_16_6 l_0_16_6)))
 (let ((?x61220 (* l_0_16_5 l_0_16_5)))
 (let ((?x61218 (* l_0_16_4 l_0_16_4)))
 (let ((?x61216 (* l_0_16_34 l_0_16_34)))
 (let ((?x61219 (- (+ (+ (* l_0_16_32 l_0_16_32) (* l_0_16_33 l_0_16_33)) ?x61216) ?x61218)))
 (= (- (- ?x61219 ?x61220) ?x61222) 0.0)))))))
(assert
 (let ((?x61243 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x61240 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x61237 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61234 (* ?x61233 l_0_16_37)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61231 (* ?x42622 l_0_16_36)))
 (let ((?x61241 (- (- (+ (+ (* (* 2.0 l_0_16_32) l_0_16_35) ?x61231) ?x61234) ?x61237) ?x61240)))
 (= (- ?x61241 ?x61243) 0.0))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61273 (* ?x61233 l_0_16_41)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61271 (* ?x42622 l_0_16_40)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61269 (* ?x42620 l_0_16_39)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61267 (* ?x61266 l_0_16_6)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x42634 (* ?x60252 l_0_16_5)))
 (let ((?x61272 (+ (+ (- (- (* (* (- 2.0) l_0_16_11) l_0_16_4) ?x42634) ?x61267) ?x61269) ?x61271)))
 (= (+ ?x61272 ?x61273) 0.0)))))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61304 (* ?x61233 l_0_16_46)))
 (let ((?x61273 (* ?x61233 l_0_16_41)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61301 (* ?x42622 l_0_16_45)))
 (let ((?x61271 (* ?x42622 l_0_16_40)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61298 (* ?x42620 l_0_16_44)))
 (let ((?x61269 (* ?x42620 l_0_16_39)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61295 (* ?x61294 l_0_16_6)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61292 (* ?x60948 l_0_16_5)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x42681 (* ?x60945 l_0_16_4)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61267 (* ?x61266 l_0_16_6)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x42634 (* ?x60252 l_0_16_5)))
 (let ((?x42689 (+ (+ (* (* 2.0 l_0_16_11) l_0_16_4) ?x42634) ?x61267)))
 (let ((?x61302 (+ (- (+ (- (- (- (- ?x42689 ?x42681) ?x61292) ?x61295) ?x61269) ?x61298) ?x61271) ?x61301)))
 (= (+ (- ?x61302 ?x61273) ?x61304) 0.0)))))))))))))))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61337 (* ?x61233 l_0_16_52)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61335 (* ?x42622 l_0_16_51)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61333 (* ?x42620 l_0_16_50)))
 (let ((?x61330 (* 2.0 l_0_16_24)))
 (let ((?x61331 (* ?x61330 l_0_16_6)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61328 (* ?x61147 l_0_16_5)))
 (let ((?x61336 (+ (+ (- (- (* (* (- 2.0) l_0_16_22) l_0_16_4) ?x61328) ?x61331) ?x61333) ?x61335)))
 (= (+ ?x61336 ?x61337) 0.0)))))))))))))
(assert
 (let ((?x61364 (* l_0_16_9 l_0_16_9)))
 (let ((?x61362 (* l_0_16_8 l_0_16_8)))
 (let ((?x61360 (* l_0_16_7 l_0_16_7)))
 (let ((?x61358 (* l_0_16_38 l_0_16_38)))
 (let ((?x61356 (* l_0_16_37 l_0_16_37)))
 (let ((?x61354 (* l_0_16_36 l_0_16_36)))
 (let ((?x61355 (+ (+ (* (- l_0_16_10) l_0_16_10) (* l_0_16_35 l_0_16_35)) ?x61354)))
 (= (- (- (- (+ (+ ?x61355 ?x61356) ?x61358) ?x61360) ?x61362) ?x61364) 0.0)))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61396 (* ?x61395 l_0_16_42)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61393 (* ?x61392 l_0_16_41)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61390 (* ?x61389 l_0_16_40)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61387 (* ?x61386 l_0_16_39)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61384 (* ?x61266 l_0_16_9)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61382 (* ?x60252 l_0_16_8)))
 (let ((?x60243 (* 2.0 l_0_16_11)))
 (let ((?x61380 (* ?x60243 l_0_16_7)))
 (let ((?x61388 (+ (- (- (- (* (* (- 2.0) l_0_16_10) l_0_16_14) ?x61380) ?x61382) ?x61384) ?x61387)))
 (= (+ (+ (+ ?x61388 ?x61390) ?x61393) ?x61396) 0.0)))))))))))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61440 (* ?x61395 l_0_16_47)))
 (let ((?x61396 (* ?x61395 l_0_16_42)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61437 (* ?x61392 l_0_16_46)))
 (let ((?x61393 (* ?x61392 l_0_16_41)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61434 (* ?x61389 l_0_16_45)))
 (let ((?x61390 (* ?x61389 l_0_16_40)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61431 (* ?x61386 l_0_16_44)))
 (let ((?x61387 (* ?x61386 l_0_16_39)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61428 (* ?x61294 l_0_16_9)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61426 (* ?x60948 l_0_16_8)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x61424 (* ?x60945 l_0_16_7)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61384 (* ?x61266 l_0_16_9)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61382 (* ?x60252 l_0_16_8)))
 (let ((?x60243 (* 2.0 l_0_16_11)))
 (let ((?x61380 (* ?x60243 l_0_16_7)))
 (let ((?x42733 (* 2.0 l_0_16_10)))
 (let ((?x61411 (* ?x42733 l_0_16_19)))
 (let ((?x61409 (* ?x42733 l_0_16_14)))
 (let ((?x61429 (- (- (- (+ (+ (+ (- ?x61409 ?x61411) ?x61380) ?x61382) ?x61384) ?x61424) ?x61426) ?x61428)))
 (let ((?x61439 (- (+ (- (+ (- (+ (- ?x61429 ?x61387) ?x61431) ?x61390) ?x61434) ?x61393) ?x61437) ?x61396)))
 (= (+ ?x61439 ?x61440) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61482 (* ?x61395 l_0_16_53)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61480 (* ?x61392 l_0_16_52)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61478 (* ?x61389 l_0_16_51)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61476 (* ?x61386 l_0_16_50)))
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60279 (* ?x60278 l_0_16_40)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60276 (* ?x60275 l_0_16_39)))
 (let ((?x61330 (* 2.0 l_0_16_24)))
 (let ((?x61472 (* ?x61330 l_0_16_9)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61470 (* ?x61147 l_0_16_8)))
 (let ((?x61467 (* 2.0 l_0_16_22)))
 (let ((?x61468 (* ?x61467 l_0_16_7)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x60253 (* ?x60252 l_0_16_3)))
 (let ((?x60243 (* 2.0 l_0_16_11)))
 (let ((?x60250 (* ?x60243 l_0_16_2)))
 (let ((?x61471 (- (- (+ (+ (* (* (- 2.0) l_0_16_10) l_0_16_25) ?x60250) ?x60253) ?x61468) ?x61470)))
 (let ((?x61483 (+ (+ (+ (+ (- (- (- ?x61471 ?x61472) ?x60276) ?x60279) ?x61476) ?x61478) ?x61480) ?x61482)))
 (= ?x61483 0.0))))))))))))))))))))))))))
(assert
 (let ((?x61524 (* l_0_16_43 l_0_16_43)))
 (let ((?x61522 (* l_0_16_42 l_0_16_42)))
 (let ((?x61520 (* l_0_16_41 l_0_16_41)))
 (let ((?x61518 (* l_0_16_40 l_0_16_40)))
 (let ((?x61516 (* l_0_16_39 l_0_16_39)))
 (let ((?x61514 (* l_0_16_15 l_0_16_15)))
 (let ((?x61512 (* l_0_16_14 l_0_16_14)))
 (let ((?x61510 (* l_0_16_13 l_0_16_13)))
 (let ((?x61511 (- (- (* (- l_0_16_11) l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x61510)))
 (let ((?x61525 (+ (+ (+ (+ (+ (- (- ?x61511 ?x61512) ?x61514) ?x61516) ?x61518) ?x61520) ?x61522) ?x61524)))
 (= ?x61525 0.0))))))))))))
(assert
 (let ((?x61524 (* l_0_16_43 l_0_16_43)))
 (let ((?x61571 (* 2.0 l_0_16_43)))
 (let ((?x61572 (* ?x61571 l_0_16_48)))
 (let ((?x61522 (* l_0_16_42 l_0_16_42)))
 (let ((?x61567 (* 2.0 l_0_16_42)))
 (let ((?x61568 (* ?x61567 l_0_16_47)))
 (let ((?x61520 (* l_0_16_41 l_0_16_41)))
 (let ((?x61563 (* 2.0 l_0_16_41)))
 (let ((?x61564 (* ?x61563 l_0_16_46)))
 (let ((?x61518 (* l_0_16_40 l_0_16_40)))
 (let ((?x61559 (* 2.0 l_0_16_40)))
 (let ((?x61560 (* ?x61559 l_0_16_45)))
 (let ((?x61516 (* l_0_16_39 l_0_16_39)))
 (let ((?x61555 (* 2.0 l_0_16_39)))
 (let ((?x61556 (* ?x61555 l_0_16_44)))
 (let ((?x61514 (* l_0_16_15 l_0_16_15)))
 (let ((?x61551 (* 2.0 l_0_16_15)))
 (let ((?x61552 (* ?x61551 l_0_16_20)))
 (let ((?x61512 (* l_0_16_14 l_0_16_14)))
 (let ((?x61547 (* 2.0 l_0_16_14)))
 (let ((?x61548 (* ?x61547 l_0_16_19)))
 (let ((?x61510 (* l_0_16_13 l_0_16_13)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61544 (* ?x61266 l_0_16_18)))
 (let ((?x61508 (* l_0_16_12 l_0_16_12)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61541 (* ?x60252 l_0_16_17)))
 (let ((?x61542 (- (+ (* (* (- 2.0) l_0_16_11) l_0_16_16) (* l_0_16_11 l_0_16_11)) ?x61541)))
 (let ((?x61554 (+ (- (+ (- (+ (- (+ ?x61542 ?x61508) ?x61544) ?x61510) ?x61548) ?x61512) ?x61552) ?x61514)))
 (let ((?x61569 (+ (- (+ (- (+ (- (+ ?x61554 ?x61556) ?x61516) ?x61560) ?x61518) ?x61564) ?x61520) ?x61568)))
 (= (- (+ (- ?x61569 ?x61522) ?x61572) ?x61524) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x61571 (* 2.0 l_0_16_43)))
 (let ((?x61626 (* ?x61571 l_0_16_54)))
 (let ((?x61567 (* 2.0 l_0_16_42)))
 (let ((?x61624 (* ?x61567 l_0_16_53)))
 (let ((?x61563 (* 2.0 l_0_16_41)))
 (let ((?x61622 (* ?x61563 l_0_16_52)))
 (let ((?x61559 (* 2.0 l_0_16_40)))
 (let ((?x61620 (* ?x61559 l_0_16_51)))
 (let ((?x61555 (* 2.0 l_0_16_39)))
 (let ((?x61618 (* ?x61555 l_0_16_50)))
 (let ((?x61551 (* 2.0 l_0_16_15)))
 (let ((?x61616 (* ?x61551 l_0_16_26)))
 (let ((?x61547 (* 2.0 l_0_16_14)))
 (let ((?x61614 (* ?x61547 l_0_16_25)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61612 (* ?x61266 l_0_16_24)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61610 (* ?x60252 l_0_16_23)))
 (let ((?x61617 (- (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_22) ?x61610) ?x61612) ?x61614) ?x61616)))
 (= (+ (+ (+ (+ (+ ?x61617 ?x61618) ?x61620) ?x61622) ?x61624) ?x61626) 0.0)))))))))))))))))))))
(assert
 (let ((?x61677 (* l_0_16_49 l_0_16_49)))
 (let ((?x61675 (* l_0_16_48 l_0_16_48)))
 (let ((?x61673 (* l_0_16_47 l_0_16_47)))
 (let ((?x61671 (* l_0_16_46 l_0_16_46)))
 (let ((?x61669 (* l_0_16_45 l_0_16_45)))
 (let ((?x61667 (* l_0_16_44 l_0_16_44)))
 (let ((?x61571 (* 2.0 l_0_16_43)))
 (let ((?x61572 (* ?x61571 l_0_16_48)))
 (let ((?x61567 (* 2.0 l_0_16_42)))
 (let ((?x61568 (* ?x61567 l_0_16_47)))
 (let ((?x61563 (* 2.0 l_0_16_41)))
 (let ((?x61564 (* ?x61563 l_0_16_46)))
 (let ((?x61559 (* 2.0 l_0_16_40)))
 (let ((?x61560 (* ?x61559 l_0_16_45)))
 (let ((?x61555 (* 2.0 l_0_16_39)))
 (let ((?x61556 (* ?x61555 l_0_16_44)))
 (let ((?x61660 (* l_0_16_21 l_0_16_21)))
 (let ((?x61658 (* l_0_16_20 l_0_16_20)))
 (let ((?x61656 (* l_0_16_19 l_0_16_19)))
 (let ((?x61654 (* l_0_16_18 l_0_16_18)))
 (let ((?x61652 (* l_0_16_17 l_0_16_17)))
 (let ((?x19476 (* l_0_16_16 l_0_16_16)))
 (let ((?x61551 (* 2.0 l_0_16_15)))
 (let ((?x61552 (* ?x61551 l_0_16_20)))
 (let ((?x61547 (* 2.0 l_0_16_14)))
 (let ((?x61548 (* ?x61547 l_0_16_19)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61544 (* ?x61266 l_0_16_18)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61541 (* ?x60252 l_0_16_17)))
 (let ((?x61643 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_16) ?x61541) ?x61544) ?x61548) ?x61552)))
 (let ((?x61662 (- (- (- (- (- (- (- ?x61643 ?x19476) ?x61652) ?x61654) ?x61656) ?x61658) ?x61660) ?x61556)))
 (let ((?x61672 (+ (+ (+ (- (- (- (- ?x61662 ?x61560) ?x61564) ?x61568) ?x61572) ?x61667) ?x61669) ?x61671)))
 (= (+ (+ (+ ?x61672 ?x61673) ?x61675) ?x61677) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61723 (* (* 2.0 l_0_16_49) l_0_16_55)))
 (let ((?x61720 (* (* 2.0 l_0_16_48) l_0_16_54)))
 (let ((?x61717 (* (* 2.0 l_0_16_47) l_0_16_53)))
 (let ((?x61714 (* (* 2.0 l_0_16_46) l_0_16_52)))
 (let ((?x61711 (* (* 2.0 l_0_16_45) l_0_16_51)))
 (let ((?x61708 (* (* 2.0 l_0_16_44) l_0_16_50)))
 (let ((?x61571 (* 2.0 l_0_16_43)))
 (let ((?x61626 (* ?x61571 l_0_16_54)))
 (let ((?x61567 (* 2.0 l_0_16_42)))
 (let ((?x61624 (* ?x61567 l_0_16_53)))
 (let ((?x61563 (* 2.0 l_0_16_41)))
 (let ((?x61622 (* ?x61563 l_0_16_52)))
 (let ((?x61559 (* 2.0 l_0_16_40)))
 (let ((?x61620 (* ?x61559 l_0_16_51)))
 (let ((?x61555 (* 2.0 l_0_16_39)))
 (let ((?x61618 (* ?x61555 l_0_16_50)))
 (let ((?x61700 (* (* 2.0 l_0_16_21) l_0_16_27)))
 (let ((?x61697 (* (* 2.0 l_0_16_20) l_0_16_26)))
 (let ((?x61694 (* (* 2.0 l_0_16_19) l_0_16_25)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61691 (* ?x61294 l_0_16_24)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61689 (* ?x60948 l_0_16_23)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x61687 (* ?x60945 l_0_16_22)))
 (let ((?x61551 (* 2.0 l_0_16_15)))
 (let ((?x61616 (* ?x61551 l_0_16_26)))
 (let ((?x61547 (* 2.0 l_0_16_14)))
 (let ((?x61614 (* ?x61547 l_0_16_25)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61612 (* ?x61266 l_0_16_24)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61610 (* ?x60252 l_0_16_23)))
 (let ((?x42955 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_22) ?x61610) ?x61612) ?x61614) ?x61616)))
 (let ((?x61702 (- (- (- (- (- (- (- ?x42955 ?x61687) ?x61689) ?x61691) ?x61694) ?x61697) ?x61700) ?x61618)))
 (let ((?x61715 (+ (+ (+ (- (- (- (- ?x61702 ?x61620) ?x61622) ?x61624) ?x61626) ?x61708) ?x61711) ?x61714)))
 (= (+ (+ (+ ?x61715 ?x61717) ?x61720) ?x61723) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61768 (* l_0_16_56 l_0_16_56)))
 (let ((?x61766 (* l_0_16_55 l_0_16_55)))
 (let ((?x61764 (* l_0_16_54 l_0_16_54)))
 (let ((?x61762 (* l_0_16_53 l_0_16_53)))
 (let ((?x61760 (* l_0_16_52 l_0_16_52)))
 (let ((?x61758 (* l_0_16_51 l_0_16_51)))
 (let ((?x61756 (* l_0_16_50 l_0_16_50)))
 (let ((?x61754 (* l_0_16_28 l_0_16_28)))
 (let ((?x61752 (* l_0_16_27 l_0_16_27)))
 (let ((?x61750 (* l_0_16_26 l_0_16_26)))
 (let ((?x61748 (* l_0_16_25 l_0_16_25)))
 (let ((?x61746 (* l_0_16_24 l_0_16_24)))
 (let ((?x61747 (- (- (* (- l_0_16_22) l_0_16_22) (* l_0_16_23 l_0_16_23)) ?x61746)))
 (let ((?x61761 (+ (+ (+ (- (- (- (- ?x61747 ?x61748) ?x61750) ?x61752) ?x61754) ?x61756) ?x61758) ?x61760)))
 (= (+ (+ (+ (+ ?x61761 ?x61762) ?x61764) ?x61766) ?x61768) 0.0))))))))))))))))
(assert
 (let ((?x60174 (* l_0_16_29 l_0_16_29)))
 (let ((?x16916 (* l_0_16_1 l_0_16_1)))
 (let ((?x61783 (- ?x16916 ?x60174)))
 (let ((?x61798 (- (+ ?x61783 (* (* 2.0 l_0_16_57) l_0_16_63)) (* (* 2.0 l_0_16_85) l_0_16_91))))
 (= ?x61798 0.0))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60210 (* ?x60209 l_0_16_30)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x61805 (* ?x60423 l_0_16_2)))
 (let ((?x61809 (+ (+ ?x61805 (* (* 2.0 l_0_16_147) l_0_16_162)) (* (* 2.0 l_0_16_148) l_0_16_163))))
 (let ((?x61813 (+ (+ ?x61809 (* (* 2.0 l_0_16_149) l_0_16_164)) (* (* 2.0 l_0_16_150) l_0_16_165))))
 (let ((?x61817 (- (- ?x61813 (* (* 2.0 l_0_16_175) l_0_16_190)) (* (* 2.0 l_0_16_176) l_0_16_191))))
 (let ((?x61821 (- (- ?x61817 (* (* 2.0 l_0_16_177) l_0_16_192)) (* (* 2.0 l_0_16_178) l_0_16_193))))
 (let ((?x61826 (+ (+ (- ?x61821 ?x60210) (* (* 2.0 l_0_16_58) l_0_16_63)) (* (* 2.0 l_0_16_59) l_0_16_64))))
 (let ((?x61830 (- (- ?x61826 (* (* 2.0 l_0_16_86) l_0_16_91)) (* (* 2.0 l_0_16_87) l_0_16_92))))
 (= ?x61830 0.0))))))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61482 (* ?x61395 l_0_16_53)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61480 (* ?x61392 l_0_16_52)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61478 (* ?x61389 l_0_16_51)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61476 (* ?x61386 l_0_16_50)))
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60273 (* ?x60209 l_0_16_32)))
 (let ((?x61330 (* 2.0 l_0_16_24)))
 (let ((?x61472 (* ?x61330 l_0_16_9)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61470 (* ?x61147 l_0_16_8)))
 (let ((?x61467 (* 2.0 l_0_16_22)))
 (let ((?x61468 (* ?x61467 l_0_16_7)))
 (let ((?x42733 (* 2.0 l_0_16_10)))
 (let ((?x61850 (* ?x42733 l_0_16_25)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x61849 (* ?x60423 l_0_16_4)))
 (let ((?x61857 (- (- (- (+ (+ (+ (+ ?x61849 ?x61850) ?x61468) ?x61470) ?x61472) ?x60273) ?x61476) ?x61478)))
 (let ((?x61865 (+ (+ (- (- ?x61857 ?x61480) ?x61482) (* (* 2.0 l_0_16_60) l_0_16_63)) (* (* 2.0 l_0_16_61) l_0_16_64))))
 (let ((?x61871 (- (+ ?x61865 (* (* 2.0 l_0_16_62) l_0_16_65)) (* (* 2.0 l_0_16_88) l_0_16_91))))
 (let ((?x61877 (- (- ?x61871 (* (* 2.0 l_0_16_89) l_0_16_92)) (* (* 2.0 l_0_16_90) l_0_16_93))))
 (= ?x61877 0.0))))))))))))))))))))))))))
(assert
 (let ((?x61893 (* l_0_16_94 l_0_16_94)))
 (let ((?x61891 (* l_0_16_93 l_0_16_93)))
 (let ((?x61889 (* l_0_16_92 l_0_16_92)))
 (let ((?x61887 (* l_0_16_91 l_0_16_91)))
 (let ((?x61885 (* l_0_16_66 l_0_16_66)))
 (let ((?x61883 (* l_0_16_65 l_0_16_65)))
 (let ((?x61881 (* l_0_16_64 l_0_16_64)))
 (let ((?x43170 (* l_0_16_63 l_0_16_63)))
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60343 (* ?x60209 l_0_16_35)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x43241 (* ?x60423 l_0_16_7)))
 (let ((?x43242 (- ?x43241 ?x60343)))
 (let ((?x61892 (- (- (- (+ (+ (+ (+ ?x43242 ?x43170) ?x61881) ?x61883) ?x61885) ?x61887) ?x61889) ?x61891)))
 (= (- ?x61892 ?x61893) 0.0))))))))))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60402 (* ?x60209 l_0_16_39)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x60424 (* ?x60423 l_0_16_11)))
 (let ((?x61904 (- ?x60424 ?x60402)))
 (let ((?x61910 (+ (+ ?x61904 (* (* 2.0 l_0_16_63) l_0_16_67)) (* (* 2.0 l_0_16_64) l_0_16_68))))
 (let ((?x61916 (+ (+ ?x61910 (* (* 2.0 l_0_16_65) l_0_16_69)) (* (* 2.0 l_0_16_66) l_0_16_70))))
 (let ((?x61922 (- (- ?x61916 (* (* 2.0 l_0_16_91) l_0_16_95)) (* (* 2.0 l_0_16_92) l_0_16_96))))
 (let ((?x61928 (- (- ?x61922 (* (* 2.0 l_0_16_93) l_0_16_97)) (* (* 2.0 l_0_16_94) l_0_16_98))))
 (= ?x61928 0.0)))))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60458 (* ?x60209 l_0_16_44)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x60425 (* ?x60423 l_0_16_16)))
 (let ((?x61957 (- (- ?x60425 (* (* 2.0 l_0_16_100) l_0_16_91)) (* (* 2.0 l_0_16_101) l_0_16_92))))
 (let ((?x61963 (- (- ?x61957 (* (* 2.0 l_0_16_102) l_0_16_93)) (* (* 2.0 l_0_16_103) l_0_16_94))))
 (let ((?x61968 (+ (+ (- ?x61963 ?x60458) (* (* 2.0 l_0_16_63) l_0_16_72)) (* (* 2.0 l_0_16_64) l_0_16_73))))
 (let ((?x61972 (+ (+ ?x61968 (* (* 2.0 l_0_16_65) l_0_16_74)) (* (* 2.0 l_0_16_66) l_0_16_75))))
 (= ?x61972 0.0))))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60519 (* ?x60209 l_0_16_50)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x61986 (* ?x60423 l_0_16_22)))
 (let ((?x61990 (- (- ?x61986 (* (* 2.0 l_0_16_106) l_0_16_91)) (* (* 2.0 l_0_16_107) l_0_16_92))))
 (let ((?x61996 (- (- ?x61990 (* (* 2.0 l_0_16_108) l_0_16_93)) (* (* 2.0 l_0_16_109) l_0_16_94))))
 (let ((?x62001 (+ (+ (- ?x61996 ?x60519) (* (* 2.0 l_0_16_63) l_0_16_78)) (* (* 2.0 l_0_16_64) l_0_16_79))))
 (let ((?x62005 (+ (+ ?x62001 (* (* 2.0 l_0_16_65) l_0_16_80)) (* (* 2.0 l_0_16_66) l_0_16_81))))
 (= ?x62005 0.0))))))))))
(assert
 (let ((?x60589 (* l_0_16_31 l_0_16_31)))
 (let ((?x60587 (* l_0_16_30 l_0_16_30)))
 (let ((?x60585 (* l_0_16_3 l_0_16_3)))
 (let ((?x60565 (* l_0_16_2 l_0_16_2)))
 (let ((?x43470 (- (* (* (- 2.0) l_0_16_119) l_0_16_134) (* (* 2.0 l_0_16_120) l_0_16_135))))
 (let ((?x62031 (- (- ?x43470 (* (* 2.0 l_0_16_121) l_0_16_136)) (* (* 2.0 l_0_16_122) l_0_16_137))))
 (let ((?x62036 (- (- (+ ?x62031 ?x60565) (* (* 2.0 l_0_16_203) l_0_16_218)) (* (* 2.0 l_0_16_204) l_0_16_219))))
 (let ((?x62040 (- (- ?x62036 (* (* 2.0 l_0_16_205) l_0_16_220)) (* (* 2.0 l_0_16_206) l_0_16_221))))
 (let ((?x62044 (- (- ?x62040 (* (* 2.0 l_0_16_231) l_0_16_246)) (* (* 2.0 l_0_16_232) l_0_16_247))))
 (let ((?x62048 (- (- ?x62044 (* (* 2.0 l_0_16_233) l_0_16_248)) (* (* 2.0 l_0_16_234) l_0_16_249))))
 (let ((?x62052 (- (- ?x62048 (* (* 2.0 l_0_16_259) l_0_16_274)) (* (* 2.0 l_0_16_260) l_0_16_275))))
 (let ((?x62056 (- (- ?x62052 (* (* 2.0 l_0_16_261) l_0_16_276)) (* (* 2.0 l_0_16_262) l_0_16_277))))
 (let ((?x62060 (- (- ?x62056 (* (* 2.0 l_0_16_287) l_0_16_302)) (* (* 2.0 l_0_16_288) l_0_16_303))))
 (let ((?x62064 (- (- ?x62060 (* (* 2.0 l_0_16_289) l_0_16_304)) (* (* 2.0 l_0_16_290) l_0_16_305))))
 (= (- (- (+ ?x62064 ?x60585) ?x60587) ?x60589) 0.0))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60666 (* ?x60278 l_0_16_33)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60664 (* ?x60275 l_0_16_32)))
 (let ((?x60661 (* 2.0 l_0_16_3)))
 (let ((?x60662 (* ?x60661 l_0_16_5)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x60623 (* ?x60622 l_0_16_4)))
 (= (- (- (+ ?x60623 ?x60662) ?x60664) ?x60666) 0.0))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60778 (* ?x60278 l_0_16_36)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60776 (* ?x60275 l_0_16_35)))
 (let ((?x60661 (* 2.0 l_0_16_3)))
 (let ((?x60774 (* ?x60661 l_0_16_8)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x60724 (* ?x60622 l_0_16_7)))
 (= (- (- (+ ?x60724 ?x60774) ?x60776) ?x60778) 0.0))))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61482 (* ?x61395 l_0_16_53)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61480 (* ?x61392 l_0_16_52)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61478 (* ?x61389 l_0_16_51)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61476 (* ?x61386 l_0_16_50)))
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x61015 (* ?x60278 l_0_16_45)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x61012 (* ?x60275 l_0_16_44)))
 (let ((?x61330 (* 2.0 l_0_16_24)))
 (let ((?x61472 (* ?x61330 l_0_16_9)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61470 (* ?x61147 l_0_16_8)))
 (let ((?x61467 (* 2.0 l_0_16_22)))
 (let ((?x61468 (* ?x61467 l_0_16_7)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x60949 (* ?x60948 l_0_16_3)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x60946 (* ?x60945 l_0_16_2)))
 (let ((?x42733 (* 2.0 l_0_16_10)))
 (let ((?x61850 (* ?x42733 l_0_16_25)))
 (let ((?x20381 (- (- (+ (+ (+ (+ (+ ?x61850 ?x60946) ?x60949) ?x61468) ?x61470) ?x61472) ?x61012) ?x61015)))
 (= (- (- (- (- ?x20381 ?x61476) ?x61478) ?x61480) ?x61482) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x61182 (* ?x60278 l_0_16_51)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x61180 (* ?x60275 l_0_16_50)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61148 (* ?x61147 l_0_16_3)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x61135 (* ?x60622 l_0_16_22)))
 (= (- (- (+ ?x61135 ?x61148) ?x61180) ?x61182) 0.0))))))))))
(assert
 (let ((?x61222 (* l_0_16_6 l_0_16_6)))
 (let ((?x61220 (* l_0_16_5 l_0_16_5)))
 (let ((?x61218 (* l_0_16_4 l_0_16_4)))
 (let ((?x61216 (* l_0_16_34 l_0_16_34)))
 (let ((?x62102 (- (- (* (- l_0_16_32) l_0_16_32) (* l_0_16_33 l_0_16_33)) ?x61216)))
 (= (+ (+ (+ ?x62102 ?x61218) ?x61220) ?x61222) 0.0)))))))
(assert
 (let ((?x61243 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x61240 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x61237 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61234 (* ?x61233 l_0_16_37)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61231 (* ?x42622 l_0_16_36)))
 (let ((?x62113 (+ (+ (- (- (* (* (- 2.0) l_0_16_32) l_0_16_35) ?x61231) ?x61234) ?x61237) ?x61240)))
 (= (+ ?x62113 ?x61243) 0.0))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61273 (* ?x61233 l_0_16_41)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61271 (* ?x42622 l_0_16_40)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61269 (* ?x42620 l_0_16_39)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61267 (* ?x61266 l_0_16_6)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x42634 (* ?x60252 l_0_16_5)))
 (let ((?x42689 (+ (+ (* (* 2.0 l_0_16_11) l_0_16_4) ?x42634) ?x61267)))
 (= (- (- (- ?x42689 ?x61269) ?x61271) ?x61273) 0.0)))))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61304 (* ?x61233 l_0_16_46)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61301 (* ?x42622 l_0_16_45)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61298 (* ?x42620 l_0_16_44)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61295 (* ?x61294 l_0_16_6)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61292 (* ?x60948 l_0_16_5)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x42681 (* ?x60945 l_0_16_4)))
 (= (- (- (- (+ (+ ?x42681 ?x61292) ?x61295) ?x61298) ?x61301) ?x61304) 0.0))))))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61337 (* ?x61233 l_0_16_52)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61335 (* ?x42622 l_0_16_51)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61333 (* ?x42620 l_0_16_50)))
 (let ((?x61330 (* 2.0 l_0_16_24)))
 (let ((?x61331 (* ?x61330 l_0_16_6)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61328 (* ?x61147 l_0_16_5)))
 (let ((?x43742 (- (- (+ (+ (* (* 2.0 l_0_16_22) l_0_16_4) ?x61328) ?x61331) ?x61333) ?x61335)))
 (let ((?x43743 (- ?x43742 ?x61337)))
 (= ?x43743 0.0))))))))))))))
(assert
 (let ((?x61364 (* l_0_16_9 l_0_16_9)))
 (let ((?x61362 (* l_0_16_8 l_0_16_8)))
 (let ((?x61360 (* l_0_16_7 l_0_16_7)))
 (let ((?x61358 (* l_0_16_38 l_0_16_38)))
 (let ((?x61356 (* l_0_16_37 l_0_16_37)))
 (let ((?x61354 (* l_0_16_36 l_0_16_36)))
 (let ((?x43827 (- (- (- (* l_0_16_10 l_0_16_10) (* l_0_16_35 l_0_16_35)) ?x61354) ?x61356)))
 (= (+ (+ (+ (- ?x43827 ?x61358) ?x61360) ?x61362) ?x61364) 0.0)))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61396 (* ?x61395 l_0_16_42)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61393 (* ?x61392 l_0_16_41)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61390 (* ?x61389 l_0_16_40)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61387 (* ?x61386 l_0_16_39)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61384 (* ?x61266 l_0_16_9)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61382 (* ?x60252 l_0_16_8)))
 (let ((?x60243 (* 2.0 l_0_16_11)))
 (let ((?x61380 (* ?x60243 l_0_16_7)))
 (let ((?x42733 (* 2.0 l_0_16_10)))
 (let ((?x61409 (* ?x42733 l_0_16_14)))
 (let ((?x43810 (- (- (- (- (+ (+ (+ ?x61409 ?x61380) ?x61382) ?x61384) ?x61387) ?x61390) ?x61393) ?x61396)))
 (= ?x43810 0.0)))))))))))))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61440 (* ?x61395 l_0_16_47)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61437 (* ?x61392 l_0_16_46)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61434 (* ?x61389 l_0_16_45)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61431 (* ?x61386 l_0_16_44)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61428 (* ?x61294 l_0_16_9)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61426 (* ?x60948 l_0_16_8)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x61424 (* ?x60945 l_0_16_7)))
 (let ((?x42733 (* 2.0 l_0_16_10)))
 (let ((?x61411 (* ?x42733 l_0_16_19)))
 (let ((?x43833 (- (- (- (- (+ (+ (+ ?x61411 ?x61424) ?x61426) ?x61428) ?x61431) ?x61434) ?x61437) ?x61440)))
 (= ?x43833 0.0)))))))))))))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61482 (* ?x61395 l_0_16_53)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61480 (* ?x61392 l_0_16_52)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61478 (* ?x61389 l_0_16_51)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61476 (* ?x61386 l_0_16_50)))
 (let ((?x61330 (* 2.0 l_0_16_24)))
 (let ((?x61472 (* ?x61330 l_0_16_9)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61470 (* ?x61147 l_0_16_8)))
 (let ((?x61467 (* 2.0 l_0_16_22)))
 (let ((?x61468 (* ?x61467 l_0_16_7)))
 (let ((?x42733 (* 2.0 l_0_16_10)))
 (let ((?x61850 (* ?x42733 l_0_16_25)))
 (let ((?x43899 (- (- (- (- (+ (+ (+ ?x61850 ?x61468) ?x61470) ?x61472) ?x61476) ?x61478) ?x61480) ?x61482)))
 (= ?x43899 0.0)))))))))))))))))))
(assert
 (let ((?x61524 (* l_0_16_43 l_0_16_43)))
 (let ((?x61522 (* l_0_16_42 l_0_16_42)))
 (let ((?x61520 (* l_0_16_41 l_0_16_41)))
 (let ((?x61518 (* l_0_16_40 l_0_16_40)))
 (let ((?x61516 (* l_0_16_39 l_0_16_39)))
 (let ((?x61514 (* l_0_16_15 l_0_16_15)))
 (let ((?x61512 (* l_0_16_14 l_0_16_14)))
 (let ((?x61510 (* l_0_16_13 l_0_16_13)))
 (let ((?x20573 (+ (+ (+ (* l_0_16_11 l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x61510) ?x61512)))
 (= (- (- (- (- (- (+ ?x20573 ?x61514) ?x61516) ?x61518) ?x61520) ?x61522) ?x61524) 0.0)))))))))))
(assert
 (let ((?x61571 (* 2.0 l_0_16_43)))
 (let ((?x61572 (* ?x61571 l_0_16_48)))
 (let ((?x61567 (* 2.0 l_0_16_42)))
 (let ((?x61568 (* ?x61567 l_0_16_47)))
 (let ((?x61563 (* 2.0 l_0_16_41)))
 (let ((?x61564 (* ?x61563 l_0_16_46)))
 (let ((?x61559 (* 2.0 l_0_16_40)))
 (let ((?x61560 (* ?x61559 l_0_16_45)))
 (let ((?x61555 (* 2.0 l_0_16_39)))
 (let ((?x61556 (* ?x61555 l_0_16_44)))
 (let ((?x61551 (* 2.0 l_0_16_15)))
 (let ((?x61552 (* ?x61551 l_0_16_20)))
 (let ((?x61547 (* 2.0 l_0_16_14)))
 (let ((?x61548 (* ?x61547 l_0_16_19)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61544 (* ?x61266 l_0_16_18)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61541 (* ?x60252 l_0_16_17)))
 (let ((?x61643 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_16) ?x61541) ?x61544) ?x61548) ?x61552)))
 (= (- (- (- (- (- ?x61643 ?x61556) ?x61560) ?x61564) ?x61568) ?x61572) 0.0)))))))))))))))))))))
(assert
 (let ((?x61571 (* 2.0 l_0_16_43)))
 (let ((?x61626 (* ?x61571 l_0_16_54)))
 (let ((?x61567 (* 2.0 l_0_16_42)))
 (let ((?x61624 (* ?x61567 l_0_16_53)))
 (let ((?x61563 (* 2.0 l_0_16_41)))
 (let ((?x61622 (* ?x61563 l_0_16_52)))
 (let ((?x61559 (* 2.0 l_0_16_40)))
 (let ((?x61620 (* ?x61559 l_0_16_51)))
 (let ((?x61555 (* 2.0 l_0_16_39)))
 (let ((?x61618 (* ?x61555 l_0_16_50)))
 (let ((?x61551 (* 2.0 l_0_16_15)))
 (let ((?x61616 (* ?x61551 l_0_16_26)))
 (let ((?x61547 (* 2.0 l_0_16_14)))
 (let ((?x61614 (* ?x61547 l_0_16_25)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61612 (* ?x61266 l_0_16_24)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61610 (* ?x60252 l_0_16_23)))
 (let ((?x42955 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_22) ?x61610) ?x61612) ?x61614) ?x61616)))
 (let ((?x62165 (- (- (- (- (- ?x42955 ?x61618) ?x61620) ?x61622) ?x61624) ?x61626)))
 (= ?x62165 0.0))))))))))))))))))))))
(assert
 (let ((?x61677 (* l_0_16_49 l_0_16_49)))
 (let ((?x61675 (* l_0_16_48 l_0_16_48)))
 (let ((?x61673 (* l_0_16_47 l_0_16_47)))
 (let ((?x61671 (* l_0_16_46 l_0_16_46)))
 (let ((?x61669 (* l_0_16_45 l_0_16_45)))
 (let ((?x61667 (* l_0_16_44 l_0_16_44)))
 (let ((?x61660 (* l_0_16_21 l_0_16_21)))
 (let ((?x61658 (* l_0_16_20 l_0_16_20)))
 (let ((?x61656 (* l_0_16_19 l_0_16_19)))
 (let ((?x61654 (* l_0_16_18 l_0_16_18)))
 (let ((?x62178 (+ (+ (+ (* l_0_16_16 l_0_16_16) (* l_0_16_17 l_0_16_17)) ?x61654) ?x61656)))
 (let ((?x62185 (- (- (- (- (- (+ (+ ?x62178 ?x61658) ?x61660) ?x61667) ?x61669) ?x61671) ?x61673) ?x61675)))
 (= (- ?x62185 ?x61677) 0.0))))))))))))))
(assert
 (let ((?x61723 (* (* 2.0 l_0_16_49) l_0_16_55)))
 (let ((?x61720 (* (* 2.0 l_0_16_48) l_0_16_54)))
 (let ((?x61717 (* (* 2.0 l_0_16_47) l_0_16_53)))
 (let ((?x61714 (* (* 2.0 l_0_16_46) l_0_16_52)))
 (let ((?x61711 (* (* 2.0 l_0_16_45) l_0_16_51)))
 (let ((?x61708 (* (* 2.0 l_0_16_44) l_0_16_50)))
 (let ((?x61700 (* (* 2.0 l_0_16_21) l_0_16_27)))
 (let ((?x61697 (* (* 2.0 l_0_16_20) l_0_16_26)))
 (let ((?x61694 (* (* 2.0 l_0_16_19) l_0_16_25)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61691 (* ?x61294 l_0_16_24)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61689 (* ?x60948 l_0_16_23)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x61687 (* ?x60945 l_0_16_22)))
 (let ((?x62193 (- (- (+ (+ (+ (+ (+ ?x61687 ?x61689) ?x61691) ?x61694) ?x61697) ?x61700) ?x61708) ?x61711)))
 (= (- (- (- (- ?x62193 ?x61714) ?x61717) ?x61720) ?x61723) 0.0))))))))))))))))))
(assert
 (let ((?x61768 (* l_0_16_56 l_0_16_56)))
 (let ((?x61766 (* l_0_16_55 l_0_16_55)))
 (let ((?x61764 (* l_0_16_54 l_0_16_54)))
 (let ((?x61762 (* l_0_16_53 l_0_16_53)))
 (let ((?x61760 (* l_0_16_52 l_0_16_52)))
 (let ((?x61758 (* l_0_16_51 l_0_16_51)))
 (let ((?x61756 (* l_0_16_50 l_0_16_50)))
 (let ((?x61754 (* l_0_16_28 l_0_16_28)))
 (let ((?x61752 (* l_0_16_27 l_0_16_27)))
 (let ((?x61750 (* l_0_16_26 l_0_16_26)))
 (let ((?x61748 (* l_0_16_25 l_0_16_25)))
 (let ((?x61746 (* l_0_16_24 l_0_16_24)))
 (let ((?x20533 (+ (+ (+ (* l_0_16_22 l_0_16_22) (* l_0_16_23 l_0_16_23)) ?x61746) ?x61748)))
 (let ((?x20575 (- (- (- (- (+ (+ (+ ?x20533 ?x61750) ?x61752) ?x61754) ?x61756) ?x61758) ?x61760) ?x61762)))
 (= (- (- (- ?x20575 ?x61764) ?x61766) ?x61768) 0.0))))))))))))))))
(assert
 (let ((?x60174 (* l_0_16_29 l_0_16_29)))
 (let ((?x16916 (* l_0_16_1 l_0_16_1)))
 (let ((?x61783 (- ?x16916 ?x60174)))
 (= ?x61783 0.0)))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60210 (* ?x60209 l_0_16_30)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x61805 (* ?x60423 l_0_16_2)))
 (let ((?x44203 (- (+ ?x61805 (* (* 2.0 l_0_16_141) l_0_16_144)) (* (* 2.0 l_0_16_169) l_0_16_172))))
 (= (- ?x44203 ?x60210) 0.0)))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60273 (* ?x60209 l_0_16_32)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x61849 (* ?x60423 l_0_16_4)))
 (= (- ?x61849 ?x60273) 0.0))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60343 (* ?x60209 l_0_16_35)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x43241 (* ?x60423 l_0_16_7)))
 (let ((?x43242 (- ?x43241 ?x60343)))
 (= ?x43242 0.0)))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60402 (* ?x60209 l_0_16_39)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x60424 (* ?x60423 l_0_16_11)))
 (let ((?x61904 (- ?x60424 ?x60402)))
 (= ?x61904 0.0)))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60458 (* ?x60209 l_0_16_44)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x60425 (* ?x60423 l_0_16_16)))
 (= (- ?x60425 ?x60458) 0.0))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60519 (* ?x60209 l_0_16_50)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x61986 (* ?x60423 l_0_16_22)))
 (let ((?x44004 (- (+ (- ?x61986 ?x60519) (* (* 2.0 l_0_16_57) l_0_16_60)) (* (* 2.0 l_0_16_85) l_0_16_88))))
 (= ?x44004 0.0)))))))
(assert
 (let ((?x60589 (* l_0_16_31 l_0_16_31)))
 (let ((?x60587 (* l_0_16_30 l_0_16_30)))
 (let ((?x60585 (* l_0_16_3 l_0_16_3)))
 (let ((?x60565 (* l_0_16_2 l_0_16_2)))
 (let ((?x44216 (+ (* (* (- 2.0) l_0_16_113) l_0_16_116) (* (* 2.0 l_0_16_142) l_0_16_144))))
 (let ((?x21001 (- (+ ?x44216 (* (* 2.0 l_0_16_143) l_0_16_145)) (* (* 2.0 l_0_16_170) l_0_16_172))))
 (let ((?x20743 (- (- ?x21001 (* (* 2.0 l_0_16_171) l_0_16_173)) (* (* 2.0 l_0_16_197) l_0_16_200))))
 (let ((?x20588 (- (- (+ ?x20743 ?x60565) (* (* 2.0 l_0_16_225) l_0_16_228)) (* (* 2.0 l_0_16_253) l_0_16_256))))
 (let ((?x62203 (- (- (+ (- ?x20588 (* (* 2.0 l_0_16_281) l_0_16_284)) ?x60585) ?x60587) ?x60589)))
 (= ?x62203 0.0)))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60666 (* ?x60278 l_0_16_33)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60664 (* ?x60275 l_0_16_32)))
 (let ((?x60661 (* 2.0 l_0_16_3)))
 (let ((?x60662 (* ?x60661 l_0_16_5)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x60623 (* ?x60622 l_0_16_4)))
 (let ((?x62255 (* l_0_16_174 l_0_16_174)))
 (let ((?x62253 (* l_0_16_173 l_0_16_173)))
 (let ((?x62251 (* l_0_16_172 l_0_16_172)))
 (let ((?x62249 (* l_0_16_146 l_0_16_146)))
 (let ((?x62250 (+ (+ (* l_0_16_144 l_0_16_144) (* l_0_16_145 l_0_16_145)) ?x62249)))
 (let ((?x62260 (- (- (+ (+ (- (- (- ?x62250 ?x62251) ?x62253) ?x62255) ?x60623) ?x60662) ?x60664) ?x60666)))
 (= ?x62260 0.0))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60778 (* ?x60278 l_0_16_36)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60776 (* ?x60275 l_0_16_35)))
 (let ((?x60661 (* 2.0 l_0_16_3)))
 (let ((?x60774 (* ?x60661 l_0_16_8)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x60724 (* ?x60622 l_0_16_7)))
 (let ((?x62277 (+ (* (* 2.0 l_0_16_144) l_0_16_147) (* (* 2.0 l_0_16_145) l_0_16_148))))
 (let ((?x62281 (- (+ ?x62277 (* (* 2.0 l_0_16_146) l_0_16_149)) (* (* 2.0 l_0_16_172) l_0_16_175))))
 (let ((?x62285 (- (- ?x62281 (* (* 2.0 l_0_16_173) l_0_16_176)) (* (* 2.0 l_0_16_174) l_0_16_177))))
 (= (- (- (+ (+ ?x62285 ?x60724) ?x60774) ?x60776) ?x60778) 0.0)))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x61015 (* ?x60278 l_0_16_45)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x61012 (* ?x60275 l_0_16_44)))
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60273 (* ?x60209 l_0_16_32)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x60949 (* ?x60948 l_0_16_3)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x60946 (* ?x60945 l_0_16_2)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x61849 (* ?x60423 l_0_16_4)))
 (let ((?x62313 (+ (+ ?x61849 (* (* 2.0 l_0_16_144) l_0_16_156)) (* (* 2.0 l_0_16_145) l_0_16_157))))
 (let ((?x62319 (- (+ (+ (+ ?x62313 (* (* 2.0 l_0_16_146) l_0_16_158)) ?x60946) ?x60949) (* (* 2.0 l_0_16_172) l_0_16_184))))
 (let ((?x62323 (- (- ?x62319 (* (* 2.0 l_0_16_173) l_0_16_185)) (* (* 2.0 l_0_16_174) l_0_16_186))))
 (= (- (- (- ?x62323 ?x60273) ?x61012) ?x61015) 0.0)))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x61182 (* ?x60278 l_0_16_51)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x61180 (* ?x60275 l_0_16_50)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61148 (* ?x61147 l_0_16_3)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x61135 (* ?x60622 l_0_16_22)))
 (let ((?x21185 (+ (* (* 2.0 l_0_16_144) l_0_16_162) (* (* 2.0 l_0_16_145) l_0_16_163))))
 (let ((?x21043 (- (+ ?x21185 (* (* 2.0 l_0_16_146) l_0_16_164)) (* (* 2.0 l_0_16_172) l_0_16_190))))
 (let ((?x21188 (- (- ?x21043 (* (* 2.0 l_0_16_173) l_0_16_191)) (* (* 2.0 l_0_16_174) l_0_16_192))))
 (let ((?x62359 (+ (- (- (+ (+ ?x21188 ?x61135) ?x61148) ?x61180) ?x61182) (* (* 2.0 l_0_16_58) l_0_16_60))))
 (let ((?x62363 (- (+ ?x62359 (* (* 2.0 l_0_16_59) l_0_16_61)) (* (* 2.0 l_0_16_86) l_0_16_88))))
 (= (- ?x62363 (* (* 2.0 l_0_16_87) l_0_16_89)) 0.0)))))))))))))))
(assert
 (let ((?x61222 (* l_0_16_6 l_0_16_6)))
 (let ((?x61220 (* l_0_16_5 l_0_16_5)))
 (let ((?x61218 (* l_0_16_4 l_0_16_4)))
 (let ((?x61216 (* l_0_16_34 l_0_16_34)))
 (let ((?x62102 (- (- (* (- l_0_16_32) l_0_16_32) (* l_0_16_33 l_0_16_33)) ?x61216)))
 (= (+ (+ (+ ?x62102 ?x61218) ?x61220) ?x61222) 0.0)))))))
(assert
 (let ((?x61243 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x61240 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x61237 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61234 (* ?x61233 l_0_16_37)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61231 (* ?x42622 l_0_16_36)))
 (let ((?x62113 (+ (+ (- (- (* (* (- 2.0) l_0_16_32) l_0_16_35) ?x61231) ?x61234) ?x61237) ?x61240)))
 (= (+ ?x62113 ?x61243) 0.0))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61273 (* ?x61233 l_0_16_41)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61271 (* ?x42622 l_0_16_40)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61269 (* ?x42620 l_0_16_39)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61267 (* ?x61266 l_0_16_6)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x42634 (* ?x60252 l_0_16_5)))
 (let ((?x42689 (+ (+ (* (* 2.0 l_0_16_11) l_0_16_4) ?x42634) ?x61267)))
 (= (- (- (- ?x42689 ?x61269) ?x61271) ?x61273) 0.0)))))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61304 (* ?x61233 l_0_16_46)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61301 (* ?x42622 l_0_16_45)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61298 (* ?x42620 l_0_16_44)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61295 (* ?x61294 l_0_16_6)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61292 (* ?x60948 l_0_16_5)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x42681 (* ?x60945 l_0_16_4)))
 (= (- (- (- (+ (+ ?x42681 ?x61292) ?x61295) ?x61298) ?x61301) ?x61304) 0.0))))))))))))))
(assert
 (let ((?x62419 (* l_0_16_90 l_0_16_90)))
 (let ((?x62417 (* l_0_16_89 l_0_16_89)))
 (let ((?x62415 (* l_0_16_88 l_0_16_88)))
 (let ((?x62413 (* l_0_16_62 l_0_16_62)))
 (let ((?x62411 (* l_0_16_61 l_0_16_61)))
 (let ((?x62409 (* l_0_16_60 l_0_16_60)))
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61337 (* ?x61233 l_0_16_52)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61335 (* ?x42622 l_0_16_51)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61333 (* ?x42620 l_0_16_50)))
 (let ((?x61330 (* 2.0 l_0_16_24)))
 (let ((?x61331 (* ?x61330 l_0_16_6)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61328 (* ?x61147 l_0_16_5)))
 (let ((?x43742 (- (- (+ (+ (* (* 2.0 l_0_16_22) l_0_16_4) ?x61328) ?x61331) ?x61333) ?x61335)))
 (let ((?x43743 (- ?x43742 ?x61337)))
 (= (- (- (- (+ (+ (+ ?x43743 ?x62409) ?x62411) ?x62413) ?x62415) ?x62417) ?x62419) 0.0))))))))))))))))))))
(assert
 (let ((?x61364 (* l_0_16_9 l_0_16_9)))
 (let ((?x61362 (* l_0_16_8 l_0_16_8)))
 (let ((?x61360 (* l_0_16_7 l_0_16_7)))
 (let ((?x61358 (* l_0_16_38 l_0_16_38)))
 (let ((?x61356 (* l_0_16_37 l_0_16_37)))
 (let ((?x61354 (* l_0_16_36 l_0_16_36)))
 (let ((?x43827 (- (- (- (* l_0_16_10 l_0_16_10) (* l_0_16_35 l_0_16_35)) ?x61354) ?x61356)))
 (= (+ (+ (+ (- ?x43827 ?x61358) ?x61360) ?x61362) ?x61364) 0.0)))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61396 (* ?x61395 l_0_16_42)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61393 (* ?x61392 l_0_16_41)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61390 (* ?x61389 l_0_16_40)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61387 (* ?x61386 l_0_16_39)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61384 (* ?x61266 l_0_16_9)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61382 (* ?x60252 l_0_16_8)))
 (let ((?x60243 (* 2.0 l_0_16_11)))
 (let ((?x61380 (* ?x60243 l_0_16_7)))
 (let ((?x42733 (* 2.0 l_0_16_10)))
 (let ((?x61409 (* ?x42733 l_0_16_14)))
 (let ((?x43810 (- (- (- (- (+ (+ (+ ?x61409 ?x61380) ?x61382) ?x61384) ?x61387) ?x61390) ?x61393) ?x61396)))
 (= ?x43810 0.0)))))))))))))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61440 (* ?x61395 l_0_16_47)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61437 (* ?x61392 l_0_16_46)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61434 (* ?x61389 l_0_16_45)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61431 (* ?x61386 l_0_16_44)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61428 (* ?x61294 l_0_16_9)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61426 (* ?x60948 l_0_16_8)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x61424 (* ?x60945 l_0_16_7)))
 (let ((?x42733 (* 2.0 l_0_16_10)))
 (let ((?x61411 (* ?x42733 l_0_16_19)))
 (let ((?x43833 (- (- (- (- (+ (+ (+ ?x61411 ?x61424) ?x61426) ?x61428) ?x61431) ?x61434) ?x61437) ?x61440)))
 (= ?x43833 0.0)))))))))))))))))))
(assert
 (let ((?x61524 (* l_0_16_43 l_0_16_43)))
 (let ((?x61522 (* l_0_16_42 l_0_16_42)))
 (let ((?x61520 (* l_0_16_41 l_0_16_41)))
 (let ((?x61518 (* l_0_16_40 l_0_16_40)))
 (let ((?x61516 (* l_0_16_39 l_0_16_39)))
 (let ((?x61514 (* l_0_16_15 l_0_16_15)))
 (let ((?x61512 (* l_0_16_14 l_0_16_14)))
 (let ((?x61510 (* l_0_16_13 l_0_16_13)))
 (let ((?x20573 (+ (+ (+ (* l_0_16_11 l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x61510) ?x61512)))
 (= (- (- (- (- (- (+ ?x20573 ?x61514) ?x61516) ?x61518) ?x61520) ?x61522) ?x61524) 0.0)))))))))))
(assert
 (let ((?x61571 (* 2.0 l_0_16_43)))
 (let ((?x61572 (* ?x61571 l_0_16_48)))
 (let ((?x61567 (* 2.0 l_0_16_42)))
 (let ((?x61568 (* ?x61567 l_0_16_47)))
 (let ((?x61563 (* 2.0 l_0_16_41)))
 (let ((?x61564 (* ?x61563 l_0_16_46)))
 (let ((?x61559 (* 2.0 l_0_16_40)))
 (let ((?x61560 (* ?x61559 l_0_16_45)))
 (let ((?x61555 (* 2.0 l_0_16_39)))
 (let ((?x61556 (* ?x61555 l_0_16_44)))
 (let ((?x61551 (* 2.0 l_0_16_15)))
 (let ((?x61552 (* ?x61551 l_0_16_20)))
 (let ((?x61547 (* 2.0 l_0_16_14)))
 (let ((?x61548 (* ?x61547 l_0_16_19)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61544 (* ?x61266 l_0_16_18)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61541 (* ?x60252 l_0_16_17)))
 (let ((?x61643 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_16) ?x61541) ?x61544) ?x61548) ?x61552)))
 (= (- (- (- (- (- ?x61643 ?x61556) ?x61560) ?x61564) ?x61568) ?x61572) 0.0)))))))))))))))))))))
(assert
 (let ((?x61571 (* 2.0 l_0_16_43)))
 (let ((?x61626 (* ?x61571 l_0_16_54)))
 (let ((?x61567 (* 2.0 l_0_16_42)))
 (let ((?x61624 (* ?x61567 l_0_16_53)))
 (let ((?x61563 (* 2.0 l_0_16_41)))
 (let ((?x61622 (* ?x61563 l_0_16_52)))
 (let ((?x61559 (* 2.0 l_0_16_40)))
 (let ((?x61620 (* ?x61559 l_0_16_51)))
 (let ((?x61555 (* 2.0 l_0_16_39)))
 (let ((?x61618 (* ?x61555 l_0_16_50)))
 (let ((?x61551 (* 2.0 l_0_16_15)))
 (let ((?x61616 (* ?x61551 l_0_16_26)))
 (let ((?x61547 (* 2.0 l_0_16_14)))
 (let ((?x61614 (* ?x61547 l_0_16_25)))
 (let ((?x61266 (* 2.0 l_0_16_13)))
 (let ((?x61612 (* ?x61266 l_0_16_24)))
 (let ((?x60252 (* 2.0 l_0_16_12)))
 (let ((?x61610 (* ?x60252 l_0_16_23)))
 (let ((?x42955 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_22) ?x61610) ?x61612) ?x61614) ?x61616)))
 (let ((?x62165 (- (- (- (- (- ?x42955 ?x61618) ?x61620) ?x61622) ?x61624) ?x61626)))
 (let ((?x62436 (+ (+ ?x62165 (* (* 2.0 l_0_16_60) l_0_16_67)) (* (* 2.0 l_0_16_61) l_0_16_68))))
 (let ((?x62440 (- (+ ?x62436 (* (* 2.0 l_0_16_62) l_0_16_69)) (* (* 2.0 l_0_16_88) l_0_16_95))))
 (let ((?x62444 (- (- ?x62440 (* (* 2.0 l_0_16_89) l_0_16_96)) (* (* 2.0 l_0_16_90) l_0_16_97))))
 (= ?x62444 0.0)))))))))))))))))))))))))
(assert
 (let ((?x61677 (* l_0_16_49 l_0_16_49)))
 (let ((?x61675 (* l_0_16_48 l_0_16_48)))
 (let ((?x61673 (* l_0_16_47 l_0_16_47)))
 (let ((?x61671 (* l_0_16_46 l_0_16_46)))
 (let ((?x61669 (* l_0_16_45 l_0_16_45)))
 (let ((?x61667 (* l_0_16_44 l_0_16_44)))
 (let ((?x61660 (* l_0_16_21 l_0_16_21)))
 (let ((?x61658 (* l_0_16_20 l_0_16_20)))
 (let ((?x61656 (* l_0_16_19 l_0_16_19)))
 (let ((?x61654 (* l_0_16_18 l_0_16_18)))
 (let ((?x62178 (+ (+ (+ (* l_0_16_16 l_0_16_16) (* l_0_16_17 l_0_16_17)) ?x61654) ?x61656)))
 (let ((?x62185 (- (- (- (- (- (+ (+ ?x62178 ?x61658) ?x61660) ?x61667) ?x61669) ?x61671) ?x61673) ?x61675)))
 (= (- ?x62185 ?x61677) 0.0))))))))))))))
(assert
 (let ((?x61723 (* (* 2.0 l_0_16_49) l_0_16_55)))
 (let ((?x61720 (* (* 2.0 l_0_16_48) l_0_16_54)))
 (let ((?x61717 (* (* 2.0 l_0_16_47) l_0_16_53)))
 (let ((?x61714 (* (* 2.0 l_0_16_46) l_0_16_52)))
 (let ((?x61711 (* (* 2.0 l_0_16_45) l_0_16_51)))
 (let ((?x61708 (* (* 2.0 l_0_16_44) l_0_16_50)))
 (let ((?x61700 (* (* 2.0 l_0_16_21) l_0_16_27)))
 (let ((?x61697 (* (* 2.0 l_0_16_20) l_0_16_26)))
 (let ((?x61694 (* (* 2.0 l_0_16_19) l_0_16_25)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61691 (* ?x61294 l_0_16_24)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61689 (* ?x60948 l_0_16_23)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x61687 (* ?x60945 l_0_16_22)))
 (let ((?x62475 (- (* (* (- 2.0) l_0_16_100) l_0_16_88) (* (* 2.0 l_0_16_101) l_0_16_89))))
 (let ((?x62480 (+ (+ (+ (- ?x62475 (* (* 2.0 l_0_16_102) l_0_16_90)) ?x61687) ?x61689) ?x61691)))
 (let ((?x62487 (- (- (- (- (+ (+ (+ ?x62480 ?x61694) ?x61697) ?x61700) ?x61708) ?x61711) ?x61714) ?x61717)))
 (let ((?x62493 (+ (+ (- (- ?x62487 ?x61720) ?x61723) (* (* 2.0 l_0_16_60) l_0_16_72)) (* (* 2.0 l_0_16_61) l_0_16_73))))
 (= (+ ?x62493 (* (* 2.0 l_0_16_62) l_0_16_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x61768 (* l_0_16_56 l_0_16_56)))
 (let ((?x61766 (* l_0_16_55 l_0_16_55)))
 (let ((?x61764 (* l_0_16_54 l_0_16_54)))
 (let ((?x61762 (* l_0_16_53 l_0_16_53)))
 (let ((?x61760 (* l_0_16_52 l_0_16_52)))
 (let ((?x61758 (* l_0_16_51 l_0_16_51)))
 (let ((?x61756 (* l_0_16_50 l_0_16_50)))
 (let ((?x61754 (* l_0_16_28 l_0_16_28)))
 (let ((?x61752 (* l_0_16_27 l_0_16_27)))
 (let ((?x61750 (* l_0_16_26 l_0_16_26)))
 (let ((?x61748 (* l_0_16_25 l_0_16_25)))
 (let ((?x61746 (* l_0_16_24 l_0_16_24)))
 (let ((?x61744 (* l_0_16_23 l_0_16_23)))
 (let ((?x19749 (* l_0_16_22 l_0_16_22)))
 (let ((?x62535 (- (* (* (- 2.0) l_0_16_106) l_0_16_88) (* (* 2.0 l_0_16_107) l_0_16_89))))
 (let ((?x62540 (+ (+ (+ (- ?x62535 (* (* 2.0 l_0_16_108) l_0_16_90)) ?x19749) ?x61744) ?x61746)))
 (let ((?x62547 (- (- (- (+ (+ (+ (+ ?x62540 ?x61748) ?x61750) ?x61752) ?x61754) ?x61756) ?x61758) ?x61760)))
 (let ((?x62553 (+ (- (- (- (- ?x62547 ?x61762) ?x61764) ?x61766) ?x61768) (* (* 2.0 l_0_16_60) l_0_16_78))))
 (let ((?x62557 (+ (+ ?x62553 (* (* 2.0 l_0_16_61) l_0_16_79)) (* (* 2.0 l_0_16_62) l_0_16_80))))
 (= ?x62557 0.0)))))))))))))))))))))
(assert
 (let ((?x60174 (* l_0_16_29 l_0_16_29)))
 (let ((?x62599 (- (+ (* l_0_16_1 l_0_16_1) (* (* 2.0 l_0_16_141) l_0_16_156)) (* (* 2.0 l_0_16_169) l_0_16_184))))
 (= (- ?x62599 ?x60174) 0.0))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60210 (* ?x60209 l_0_16_30)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x61805 (* ?x60423 l_0_16_2)))
 (let ((?x62617 (+ (- ?x61805 (* (* 2.0 l_0_16_113) l_0_16_128)) (* (* 2.0 l_0_16_142) l_0_16_156))))
 (let ((?x62621 (- (+ ?x62617 (* (* 2.0 l_0_16_143) l_0_16_157)) (* (* 2.0 l_0_16_170) l_0_16_184))))
 (let ((?x62625 (- (- ?x62621 (* (* 2.0 l_0_16_171) l_0_16_185)) (* (* 2.0 l_0_16_197) l_0_16_212))))
 (let ((?x62629 (- (- ?x62625 (* (* 2.0 l_0_16_225) l_0_16_240)) (* (* 2.0 l_0_16_253) l_0_16_268))))
 (= (- (- ?x62629 (* (* 2.0 l_0_16_281) l_0_16_296)) ?x60210) 0.0))))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60343 (* ?x60209 l_0_16_35)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x43241 (* ?x60423 l_0_16_7)))
 (let ((?x62687 (+ (+ ?x43241 (* (* 2.0 l_0_16_147) l_0_16_156)) (* (* 2.0 l_0_16_148) l_0_16_157))))
 (let ((?x62691 (+ (+ ?x62687 (* (* 2.0 l_0_16_149) l_0_16_158)) (* (* 2.0 l_0_16_150) l_0_16_159))))
 (let ((?x62695 (- (- ?x62691 (* (* 2.0 l_0_16_175) l_0_16_184)) (* (* 2.0 l_0_16_176) l_0_16_185))))
 (let ((?x62699 (- (- ?x62695 (* (* 2.0 l_0_16_177) l_0_16_186)) (* (* 2.0 l_0_16_178) l_0_16_187))))
 (= (- ?x62699 ?x60343) 0.0))))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60458 (* ?x60209 l_0_16_44)))
 (let ((?x62765 (* l_0_16_189 l_0_16_189)))
 (let ((?x62763 (* l_0_16_188 l_0_16_188)))
 (let ((?x62761 (* l_0_16_187 l_0_16_187)))
 (let ((?x62759 (* l_0_16_186 l_0_16_186)))
 (let ((?x62757 (* l_0_16_185 l_0_16_185)))
 (let ((?x62755 (* l_0_16_184 l_0_16_184)))
 (let ((?x62753 (* l_0_16_161 l_0_16_161)))
 (let ((?x62751 (* l_0_16_160 l_0_16_160)))
 (let ((?x62749 (* l_0_16_159 l_0_16_159)))
 (let ((?x62747 (* l_0_16_158 l_0_16_158)))
 (let ((?x62745 (* l_0_16_157 l_0_16_157)))
 (let ((?x62746 (+ (+ (* (* 2.0 l_0_16_1) l_0_16_16) (* l_0_16_156 l_0_16_156)) ?x62745)))
 (let ((?x62760 (- (- (- (+ (+ (+ (+ ?x62746 ?x62747) ?x62749) ?x62751) ?x62753) ?x62755) ?x62757) ?x62759)))
 (= (- (- (- (- ?x62760 ?x62761) ?x62763) ?x62765) ?x60458) 0.0)))))))))))))))))
(assert
 (let ((?x60209 (* 2.0 l_0_16_29)))
 (let ((?x60519 (* ?x60209 l_0_16_50)))
 (let ((?x60423 (* 2.0 l_0_16_1)))
 (let ((?x61986 (* ?x60423 l_0_16_22)))
 (let ((?x62801 (- (- ?x61986 (* (* 2.0 l_0_16_100) l_0_16_86)) (* (* 2.0 l_0_16_101) l_0_16_87))))
 (let ((?x62807 (+ (+ ?x62801 (* (* 2.0 l_0_16_156) l_0_16_162)) (* (* 2.0 l_0_16_157) l_0_16_163))))
 (let ((?x62813 (+ (+ ?x62807 (* (* 2.0 l_0_16_158) l_0_16_164)) (* (* 2.0 l_0_16_159) l_0_16_165))))
 (let ((?x62819 (+ (+ ?x62813 (* (* 2.0 l_0_16_160) l_0_16_166)) (* (* 2.0 l_0_16_161) l_0_16_167))))
 (let ((?x62825 (- (- ?x62819 (* (* 2.0 l_0_16_184) l_0_16_190)) (* (* 2.0 l_0_16_185) l_0_16_191))))
 (let ((?x62831 (- (- ?x62825 (* (* 2.0 l_0_16_186) l_0_16_192)) (* (* 2.0 l_0_16_187) l_0_16_193))))
 (let ((?x62837 (- (- ?x62831 (* (* 2.0 l_0_16_188) l_0_16_194)) (* (* 2.0 l_0_16_189) l_0_16_195))))
 (let ((?x62842 (+ (+ (- ?x62837 ?x60519) (* (* 2.0 l_0_16_58) l_0_16_72)) (* (* 2.0 l_0_16_59) l_0_16_73))))
 (= ?x62842 0.0))))))))))))))
(assert
 (let ((?x60589 (* l_0_16_31 l_0_16_31)))
 (let ((?x60587 (* l_0_16_30 l_0_16_30)))
 (let ((?x60585 (* l_0_16_3 l_0_16_3)))
 (let ((?x60565 (* l_0_16_2 l_0_16_2)))
 (let ((?x62894 (- (* (* (- 2.0) l_0_16_114) l_0_16_128) (* (* 2.0 l_0_16_115) l_0_16_129))))
 (let ((?x62908 (- (- ?x62894 (* (* 2.0 l_0_16_198) l_0_16_212)) (* (* 2.0 l_0_16_199) l_0_16_213))))
 (let ((?x62913 (- (- (+ ?x62908 ?x60565) (* (* 2.0 l_0_16_226) l_0_16_240)) (* (* 2.0 l_0_16_227) l_0_16_241))))
 (let ((?x62917 (- (- ?x62913 (* (* 2.0 l_0_16_254) l_0_16_268)) (* (* 2.0 l_0_16_255) l_0_16_269))))
 (let ((?x62921 (- (- ?x62917 (* (* 2.0 l_0_16_282) l_0_16_296)) (* (* 2.0 l_0_16_283) l_0_16_297))))
 (= (- (- (+ ?x62921 ?x60585) ?x60587) ?x60589) 0.0)))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60666 (* ?x60278 l_0_16_33)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60664 (* ?x60275 l_0_16_32)))
 (let ((?x60661 (* 2.0 l_0_16_3)))
 (let ((?x60662 (* ?x60661 l_0_16_5)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x60623 (* ?x60622 l_0_16_4)))
 (let ((?x62937 (- (* (* (- 2.0) l_0_16_116) l_0_16_128) (* (* 2.0 l_0_16_117) l_0_16_129))))
 (let ((?x62942 (- (+ (- ?x62937 (* (* 2.0 l_0_16_118) l_0_16_130)) ?x60623) (* (* 2.0 l_0_16_200) l_0_16_212))))
 (let ((?x62946 (- (- ?x62942 (* (* 2.0 l_0_16_201) l_0_16_213)) (* (* 2.0 l_0_16_202) l_0_16_214))))
 (let ((?x62950 (- (- ?x62946 (* (* 2.0 l_0_16_228) l_0_16_240)) (* (* 2.0 l_0_16_229) l_0_16_241))))
 (let ((?x62954 (- (- ?x62950 (* (* 2.0 l_0_16_230) l_0_16_242)) (* (* 2.0 l_0_16_256) l_0_16_268))))
 (let ((?x62958 (- (- ?x62954 (* (* 2.0 l_0_16_257) l_0_16_269)) (* (* 2.0 l_0_16_258) l_0_16_270))))
 (let ((?x62962 (- (- ?x62958 (* (* 2.0 l_0_16_284) l_0_16_296)) (* (* 2.0 l_0_16_285) l_0_16_297))))
 (let ((?x62967 (- (- (+ (- ?x62962 (* (* 2.0 l_0_16_286) l_0_16_298)) ?x60662) ?x60664) ?x60666)))
 (= ?x62967 0.0))))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x60778 (* ?x60278 l_0_16_36)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x60776 (* ?x60275 l_0_16_35)))
 (let ((?x60661 (* 2.0 l_0_16_3)))
 (let ((?x60774 (* ?x60661 l_0_16_8)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x60724 (* ?x60622 l_0_16_7)))
 (let ((?x63001 (- (* (* (- 2.0) l_0_16_119) l_0_16_128) (* (* 2.0 l_0_16_120) l_0_16_129))))
 (let ((?x63005 (- (- ?x63001 (* (* 2.0 l_0_16_121) l_0_16_130)) (* (* 2.0 l_0_16_122) l_0_16_131))))
 (let ((?x63010 (- (- (+ ?x63005 ?x60724) (* (* 2.0 l_0_16_203) l_0_16_212)) (* (* 2.0 l_0_16_204) l_0_16_213))))
 (let ((?x63014 (- (- ?x63010 (* (* 2.0 l_0_16_205) l_0_16_214)) (* (* 2.0 l_0_16_206) l_0_16_215))))
 (let ((?x63018 (- (- ?x63014 (* (* 2.0 l_0_16_231) l_0_16_240)) (* (* 2.0 l_0_16_232) l_0_16_241))))
 (let ((?x63022 (- (- ?x63018 (* (* 2.0 l_0_16_233) l_0_16_242)) (* (* 2.0 l_0_16_234) l_0_16_243))))
 (let ((?x63026 (- (- ?x63022 (* (* 2.0 l_0_16_259) l_0_16_268)) (* (* 2.0 l_0_16_260) l_0_16_269))))
 (let ((?x63030 (- (- ?x63026 (* (* 2.0 l_0_16_261) l_0_16_270)) (* (* 2.0 l_0_16_262) l_0_16_271))))
 (let ((?x63034 (- (- ?x63030 (* (* 2.0 l_0_16_287) l_0_16_296)) (* (* 2.0 l_0_16_288) l_0_16_297))))
 (let ((?x63038 (- (- ?x63034 (* (* 2.0 l_0_16_289) l_0_16_298)) (* (* 2.0 l_0_16_290) l_0_16_299))))
 (= (- (- (+ ?x63038 ?x60774) ?x60776) ?x60778) 0.0))))))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x61015 (* ?x60278 l_0_16_45)))
 (let ((?x63173 (* l_0_16_301 l_0_16_301)))
 (let ((?x63171 (* l_0_16_300 l_0_16_300)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x61012 (* ?x60275 l_0_16_44)))
 (let ((?x63168 (* l_0_16_299 l_0_16_299)))
 (let ((?x63166 (* l_0_16_298 l_0_16_298)))
 (let ((?x63164 (* l_0_16_297 l_0_16_297)))
 (let ((?x63162 (* l_0_16_296 l_0_16_296)))
 (let ((?x63160 (* l_0_16_273 l_0_16_273)))
 (let ((?x63158 (* l_0_16_272 l_0_16_272)))
 (let ((?x63156 (* l_0_16_271 l_0_16_271)))
 (let ((?x63154 (* l_0_16_270 l_0_16_270)))
 (let ((?x63152 (* l_0_16_269 l_0_16_269)))
 (let ((?x63150 (* l_0_16_268 l_0_16_268)))
 (let ((?x63148 (* l_0_16_245 l_0_16_245)))
 (let ((?x63146 (* l_0_16_244 l_0_16_244)))
 (let ((?x63144 (* l_0_16_243 l_0_16_243)))
 (let ((?x63142 (* l_0_16_242 l_0_16_242)))
 (let ((?x63140 (* l_0_16_241 l_0_16_241)))
 (let ((?x63138 (* l_0_16_240 l_0_16_240)))
 (let ((?x63136 (* l_0_16_217 l_0_16_217)))
 (let ((?x63134 (* l_0_16_216 l_0_16_216)))
 (let ((?x63132 (* l_0_16_215 l_0_16_215)))
 (let ((?x63130 (* l_0_16_214 l_0_16_214)))
 (let ((?x63128 (* l_0_16_213 l_0_16_213)))
 (let ((?x63126 (* l_0_16_212 l_0_16_212)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x60949 (* ?x60948 l_0_16_3)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x60946 (* ?x60945 l_0_16_2)))
 (let ((?x63111 (- (* (* (- 1.0) l_0_16_128) l_0_16_128) (* (* 1.0 l_0_16_129) l_0_16_129))))
 (let ((?x63117 (- (- ?x63111 (* (* 1.0 l_0_16_130) l_0_16_130)) (* (* 1.0 l_0_16_131) l_0_16_131))))
 (let ((?x63123 (- (- ?x63117 (* (* 1.0 l_0_16_132) l_0_16_132)) (* (* 1.0 l_0_16_133) l_0_16_133))))
 (let ((?x63135 (- (- (- (- (- (+ (+ ?x63123 ?x60946) ?x60949) ?x63126) ?x63128) ?x63130) ?x63132) ?x63134)))
 (let ((?x63149 (- (- (- (- (- (- (- ?x63135 ?x63136) ?x63138) ?x63140) ?x63142) ?x63144) ?x63146) ?x63148)))
 (let ((?x63163 (- (- (- (- (- (- (- ?x63149 ?x63150) ?x63152) ?x63154) ?x63156) ?x63158) ?x63160) ?x63162)))
 (let ((?x63175 (- (- (- (- (- (- (- ?x63163 ?x63164) ?x63166) ?x63168) ?x61012) ?x63171) ?x63173) ?x61015)))
 (= ?x63175 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x60278 (* 2.0 l_0_16_31)))
 (let ((?x61182 (* ?x60278 l_0_16_51)))
 (let ((?x60275 (* 2.0 l_0_16_30)))
 (let ((?x61180 (* ?x60275 l_0_16_50)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61148 (* ?x61147 l_0_16_3)))
 (let ((?x60622 (* 2.0 l_0_16_2)))
 (let ((?x61135 (* ?x60622 l_0_16_22)))
 (let ((?x21985 (- (* (* (- 2.0) l_0_16_128) l_0_16_134) (* (* 2.0 l_0_16_129) l_0_16_135))))
 (let ((?x21837 (- (- ?x21985 (* (* 2.0 l_0_16_130) l_0_16_136)) (* (* 2.0 l_0_16_131) l_0_16_137))))
 (let ((?x63226 (- (- ?x21837 (* (* 2.0 l_0_16_132) l_0_16_138)) (* (* 2.0 l_0_16_133) l_0_16_139))))
 (let ((?x63233 (- (- (+ ?x63226 ?x61135) (* (* 2.0 l_0_16_212) l_0_16_218)) (* (* 2.0 l_0_16_213) l_0_16_219))))
 (let ((?x63239 (- (- ?x63233 (* (* 2.0 l_0_16_214) l_0_16_220)) (* (* 2.0 l_0_16_215) l_0_16_221))))
 (let ((?x63245 (- (- ?x63239 (* (* 2.0 l_0_16_216) l_0_16_222)) (* (* 2.0 l_0_16_217) l_0_16_223))))
 (let ((?x63252 (- (- (+ ?x63245 ?x61148) (* (* 2.0 l_0_16_240) l_0_16_246)) (* (* 2.0 l_0_16_241) l_0_16_247))))
 (let ((?x63258 (- (- ?x63252 (* (* 2.0 l_0_16_242) l_0_16_248)) (* (* 2.0 l_0_16_243) l_0_16_249))))
 (let ((?x63264 (- (- ?x63258 (* (* 2.0 l_0_16_244) l_0_16_250)) (* (* 2.0 l_0_16_245) l_0_16_251))))
 (let ((?x63270 (- (- ?x63264 (* (* 2.0 l_0_16_268) l_0_16_274)) (* (* 2.0 l_0_16_269) l_0_16_275))))
 (let ((?x63276 (- (- ?x63270 (* (* 2.0 l_0_16_270) l_0_16_276)) (* (* 2.0 l_0_16_271) l_0_16_277))))
 (let ((?x63282 (- (- ?x63276 (* (* 2.0 l_0_16_272) l_0_16_278)) (* (* 2.0 l_0_16_273) l_0_16_279))))
 (let ((?x63288 (- (- ?x63282 (* (* 2.0 l_0_16_296) l_0_16_302)) (* (* 2.0 l_0_16_297) l_0_16_303))))
 (let ((?x63294 (- (- ?x63288 (* (* 2.0 l_0_16_298) l_0_16_304)) (* (* 2.0 l_0_16_299) l_0_16_305))))
 (let ((?x63301 (- (- (- ?x63294 ?x61180) (* (* 2.0 l_0_16_300) l_0_16_306)) (* (* 2.0 l_0_16_301) l_0_16_307))))
 (= (- ?x63301 ?x61182) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x61222 (* l_0_16_6 l_0_16_6)))
 (let ((?x61220 (* l_0_16_5 l_0_16_5)))
 (let ((?x61218 (* l_0_16_4 l_0_16_4)))
 (let ((?x61216 (* l_0_16_34 l_0_16_34)))
 (let ((?x62102 (- (- (* (- l_0_16_32) l_0_16_32) (* l_0_16_33 l_0_16_33)) ?x61216)))
 (= (+ (+ (+ ?x62102 ?x61218) ?x61220) ?x61222) 0.0)))))))
(assert
 (let ((?x61243 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x61240 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x61237 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61234 (* ?x61233 l_0_16_37)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61231 (* ?x42622 l_0_16_36)))
 (let ((?x62113 (+ (+ (- (- (* (* (- 2.0) l_0_16_32) l_0_16_35) ?x61231) ?x61234) ?x61237) ?x61240)))
 (= (+ ?x62113 ?x61243) 0.0))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61304 (* ?x61233 l_0_16_46)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61301 (* ?x42622 l_0_16_45)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61298 (* ?x42620 l_0_16_44)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61295 (* ?x61294 l_0_16_6)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61292 (* ?x60948 l_0_16_5)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x42681 (* ?x60945 l_0_16_4)))
 (= (- (- (- (+ (+ ?x42681 ?x61292) ?x61295) ?x61298) ?x61301) ?x61304) 0.0))))))))))))))
(assert
 (let ((?x61233 (* 2.0 l_0_16_34)))
 (let ((?x61337 (* ?x61233 l_0_16_52)))
 (let ((?x42622 (* 2.0 l_0_16_33)))
 (let ((?x61335 (* ?x42622 l_0_16_51)))
 (let ((?x42620 (* 2.0 l_0_16_32)))
 (let ((?x61333 (* ?x42620 l_0_16_50)))
 (let ((?x61330 (* 2.0 l_0_16_24)))
 (let ((?x61331 (* ?x61330 l_0_16_6)))
 (let ((?x61147 (* 2.0 l_0_16_23)))
 (let ((?x61328 (* ?x61147 l_0_16_5)))
 (let ((?x43742 (- (- (+ (+ (* (* 2.0 l_0_16_22) l_0_16_4) ?x61328) ?x61331) ?x61333) ?x61335)))
 (let ((?x43743 (- ?x43742 ?x61337)))
 (= ?x43743 0.0))))))))))))))
(assert
 (let ((?x61364 (* l_0_16_9 l_0_16_9)))
 (let ((?x61362 (* l_0_16_8 l_0_16_8)))
 (let ((?x61360 (* l_0_16_7 l_0_16_7)))
 (let ((?x61358 (* l_0_16_38 l_0_16_38)))
 (let ((?x61356 (* l_0_16_37 l_0_16_37)))
 (let ((?x61354 (* l_0_16_36 l_0_16_36)))
 (let ((?x43827 (- (- (- (* l_0_16_10 l_0_16_10) (* l_0_16_35 l_0_16_35)) ?x61354) ?x61356)))
 (= (+ (+ (+ (- ?x43827 ?x61358) ?x61360) ?x61362) ?x61364) 0.0)))))))))
(assert
 (let ((?x61395 (* 2.0 l_0_16_38)))
 (let ((?x61440 (* ?x61395 l_0_16_47)))
 (let ((?x61392 (* 2.0 l_0_16_37)))
 (let ((?x61437 (* ?x61392 l_0_16_46)))
 (let ((?x61389 (* 2.0 l_0_16_36)))
 (let ((?x61434 (* ?x61389 l_0_16_45)))
 (let ((?x61386 (* 2.0 l_0_16_35)))
 (let ((?x61431 (* ?x61386 l_0_16_44)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61428 (* ?x61294 l_0_16_9)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61426 (* ?x60948 l_0_16_8)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x61424 (* ?x60945 l_0_16_7)))
 (let ((?x42733 (* 2.0 l_0_16_10)))
 (let ((?x61411 (* ?x42733 l_0_16_19)))
 (let ((?x43833 (- (- (- (- (+ (+ (+ ?x61411 ?x61424) ?x61426) ?x61428) ?x61431) ?x61434) ?x61437) ?x61440)))
 (= ?x43833 0.0)))))))))))))))))))
(assert
 (let ((?x61677 (* l_0_16_49 l_0_16_49)))
 (let ((?x61675 (* l_0_16_48 l_0_16_48)))
 (let ((?x61673 (* l_0_16_47 l_0_16_47)))
 (let ((?x61671 (* l_0_16_46 l_0_16_46)))
 (let ((?x61669 (* l_0_16_45 l_0_16_45)))
 (let ((?x61667 (* l_0_16_44 l_0_16_44)))
 (let ((?x61660 (* l_0_16_21 l_0_16_21)))
 (let ((?x61658 (* l_0_16_20 l_0_16_20)))
 (let ((?x61656 (* l_0_16_19 l_0_16_19)))
 (let ((?x61654 (* l_0_16_18 l_0_16_18)))
 (let ((?x62178 (+ (+ (+ (* l_0_16_16 l_0_16_16) (* l_0_16_17 l_0_16_17)) ?x61654) ?x61656)))
 (let ((?x62185 (- (- (- (- (- (+ (+ ?x62178 ?x61658) ?x61660) ?x61667) ?x61669) ?x61671) ?x61673) ?x61675)))
 (= (- ?x62185 ?x61677) 0.0))))))))))))))
(assert
 (let ((?x61723 (* (* 2.0 l_0_16_49) l_0_16_55)))
 (let ((?x61720 (* (* 2.0 l_0_16_48) l_0_16_54)))
 (let ((?x61717 (* (* 2.0 l_0_16_47) l_0_16_53)))
 (let ((?x61714 (* (* 2.0 l_0_16_46) l_0_16_52)))
 (let ((?x61711 (* (* 2.0 l_0_16_45) l_0_16_51)))
 (let ((?x61708 (* (* 2.0 l_0_16_44) l_0_16_50)))
 (let ((?x61700 (* (* 2.0 l_0_16_21) l_0_16_27)))
 (let ((?x61697 (* (* 2.0 l_0_16_20) l_0_16_26)))
 (let ((?x61694 (* (* 2.0 l_0_16_19) l_0_16_25)))
 (let ((?x61294 (* 2.0 l_0_16_18)))
 (let ((?x61691 (* ?x61294 l_0_16_24)))
 (let ((?x60948 (* 2.0 l_0_16_17)))
 (let ((?x61689 (* ?x60948 l_0_16_23)))
 (let ((?x60945 (* 2.0 l_0_16_16)))
 (let ((?x61687 (* ?x60945 l_0_16_22)))
 (let ((?x62193 (- (- (+ (+ (+ (+ (+ ?x61687 ?x61689) ?x61691) ?x61694) ?x61697) ?x61700) ?x61708) ?x61711)))
 (= (- (- (- (- ?x62193 ?x61714) ?x61717) ?x61720) ?x61723) 0.0))))))))))))))))))
(assert
 (let ((?x61768 (* l_0_16_56 l_0_16_56)))
 (let ((?x61766 (* l_0_16_55 l_0_16_55)))
 (let ((?x61764 (* l_0_16_54 l_0_16_54)))
 (let ((?x61762 (* l_0_16_53 l_0_16_53)))
 (let ((?x61760 (* l_0_16_52 l_0_16_52)))
 (let ((?x61758 (* l_0_16_51 l_0_16_51)))
 (let ((?x61756 (* l_0_16_50 l_0_16_50)))
 (let ((?x61754 (* l_0_16_28 l_0_16_28)))
 (let ((?x61752 (* l_0_16_27 l_0_16_27)))
 (let ((?x61750 (* l_0_16_26 l_0_16_26)))
 (let ((?x61748 (* l_0_16_25 l_0_16_25)))
 (let ((?x61746 (* l_0_16_24 l_0_16_24)))
 (let ((?x20533 (+ (+ (+ (* l_0_16_22 l_0_16_22) (* l_0_16_23 l_0_16_23)) ?x61746) ?x61748)))
 (let ((?x20575 (- (- (- (- (+ (+ (+ ?x20533 ?x61750) ?x61752) ?x61754) ?x61756) ?x61758) ?x61760) ?x61762)))
 (= (- (- (- ?x20575 ?x61764) ?x61766) ?x61768) 0.0))))))))))))))))
(assert
 (= (- (* l_0_16_57 l_0_16_57) (* l_0_16_85 l_0_16_85)) 0.0))
(assert
 (let ((?x63401 (- (* (* 2.0 l_0_16_141) l_0_16_162) (* (* 2.0 l_0_16_169) l_0_16_190))))
 (let ((?x63405 (- (+ ?x63401 (* (* 2.0 l_0_16_57) l_0_16_58)) (* (* 2.0 l_0_16_85) l_0_16_86))))
 (= ?x63405 0.0))))
(assert
 (let ((?x63427 (- (* (* 2.0 l_0_16_57) l_0_16_67) (* (* 2.0 l_0_16_85) l_0_16_95))))
 (= ?x63427 0.0)))
(assert
 (let ((?x63440 (+ (* (* (- 2.0) l_0_16_100) l_0_16_85) (* (* 2.0 l_0_16_57) l_0_16_72))))
 (= ?x63440 0.0)))
(assert
 (let ((?x63446 (+ (* (* (- 2.0) l_0_16_106) l_0_16_85) (* (* 2.0 l_0_16_57) l_0_16_78))))
 (= ?x63446 0.0)))
(assert
 (let ((?x63487 (* l_0_16_196 l_0_16_196)))
 (let ((?x63485 (* l_0_16_195 l_0_16_195)))
 (let ((?x63483 (* l_0_16_194 l_0_16_194)))
 (let ((?x63481 (* l_0_16_193 l_0_16_193)))
 (let ((?x63479 (* l_0_16_192 l_0_16_192)))
 (let ((?x63477 (* l_0_16_191 l_0_16_191)))
 (let ((?x63475 (* l_0_16_190 l_0_16_190)))
 (let ((?x63473 (* l_0_16_168 l_0_16_168)))
 (let ((?x63471 (* l_0_16_167 l_0_16_167)))
 (let ((?x63469 (* l_0_16_166 l_0_16_166)))
 (let ((?x63467 (* l_0_16_165 l_0_16_165)))
 (let ((?x63465 (* l_0_16_164 l_0_16_164)))
 (let ((?x63463 (* l_0_16_163 l_0_16_163)))
 (let ((?x63461 (* l_0_16_162 l_0_16_162)))
 (let ((?x63456 (- (* (* (- 2.0) l_0_16_106) l_0_16_86) (* (* 2.0 l_0_16_107) l_0_16_87))))
 (let ((?x63474 (+ (+ (+ (+ (+ (+ (+ ?x63456 ?x63461) ?x63463) ?x63465) ?x63467) ?x63469) ?x63471) ?x63473)))
 (let ((?x63488 (- (- (- (- (- (- (- ?x63474 ?x63475) ?x63477) ?x63479) ?x63481) ?x63483) ?x63485) ?x63487)))
 (let ((?x63492 (+ (+ ?x63488 (* (* 2.0 l_0_16_58) l_0_16_78)) (* (* 2.0 l_0_16_59) l_0_16_79))))
 (= ?x63492 0.0))))))))))))))))))))
(assert
 (let ((?x63538 (* l_0_16_99 l_0_16_99)))
 (let ((?x63536 (* l_0_16_98 l_0_16_98)))
 (let ((?x63534 (* l_0_16_97 l_0_16_97)))
 (let ((?x63532 (* l_0_16_96 l_0_16_96)))
 (let ((?x63530 (* l_0_16_95 l_0_16_95)))
 (let ((?x63528 (* l_0_16_71 l_0_16_71)))
 (let ((?x63526 (* l_0_16_70 l_0_16_70)))
 (let ((?x63524 (* l_0_16_69 l_0_16_69)))
 (let ((?x63527 (+ (+ (+ (* l_0_16_67 l_0_16_67) (* l_0_16_68 l_0_16_68)) ?x63524) ?x63526)))
 (= (- (- (- (- (- (+ ?x63527 ?x63528) ?x63530) ?x63532) ?x63534) ?x63536) ?x63538) 0.0)))))))))))
(assert
 (let ((?x63554 (- (* (* (- 2.0) l_0_16_100) l_0_16_95) (* (* 2.0 l_0_16_101) l_0_16_96))))
 (let ((?x63558 (- (- ?x63554 (* (* 2.0 l_0_16_102) l_0_16_97)) (* (* 2.0 l_0_16_103) l_0_16_98))))
 (let ((?x63564 (+ (- ?x63558 (* (* 2.0 l_0_16_104) l_0_16_99)) (* (* 2.0 l_0_16_67) l_0_16_72))))
 (let ((?x63570 (+ (+ ?x63564 (* (* 2.0 l_0_16_68) l_0_16_73)) (* (* 2.0 l_0_16_69) l_0_16_74))))
 (let ((?x63576 (+ (+ ?x63570 (* (* 2.0 l_0_16_70) l_0_16_75)) (* (* 2.0 l_0_16_71) l_0_16_76))))
 (= ?x63576 0.0)))))))
(assert
 (let ((?x63597 (- (* (* (- 2.0) l_0_16_106) l_0_16_95) (* (* 2.0 l_0_16_107) l_0_16_96))))
 (let ((?x63611 (- (- ?x63597 (* (* 2.0 l_0_16_108) l_0_16_97)) (* (* 2.0 l_0_16_109) l_0_16_98))))
 (let ((?x63616 (+ (- ?x63611 (* (* 2.0 l_0_16_110) l_0_16_99)) (* (* 2.0 l_0_16_67) l_0_16_78))))
 (let ((?x63620 (+ (+ ?x63616 (* (* 2.0 l_0_16_68) l_0_16_79)) (* (* 2.0 l_0_16_69) l_0_16_80))))
 (let ((?x63624 (+ (+ ?x63620 (* (* 2.0 l_0_16_70) l_0_16_81)) (* (* 2.0 l_0_16_71) l_0_16_82))))
 (= ?x63624 0.0)))))))
(assert
 (let ((?x63645 (* l_0_16_77 l_0_16_77)))
 (let ((?x63643 (* l_0_16_76 l_0_16_76)))
 (let ((?x63641 (* l_0_16_75 l_0_16_75)))
 (let ((?x63639 (* l_0_16_74 l_0_16_74)))
 (let ((?x63637 (* l_0_16_73 l_0_16_73)))
 (let ((?x63635 (* l_0_16_72 l_0_16_72)))
 (let ((?x63633 (* l_0_16_105 l_0_16_105)))
 (let ((?x22528 (* l_0_16_104 l_0_16_104)))
 (let ((?x45051 (* l_0_16_103 l_0_16_103)))
 (let ((?x45052 (* l_0_16_102 l_0_16_102)))
 (let ((?x22524 (- (- (* (- l_0_16_100) l_0_16_100) (* l_0_16_101 l_0_16_101)) ?x45052)))
 (let ((?x63642 (+ (+ (+ (+ (- (- (- ?x22524 ?x45051) ?x22528) ?x63633) ?x63635) ?x63637) ?x63639) ?x63641)))
 (= (+ (+ ?x63642 ?x63643) ?x63645) 0.0))))))))))))))
(assert
 (let ((?x63665 (- (* (* (- 2.0) l_0_16_100) l_0_16_106) (* (* 2.0 l_0_16_101) l_0_16_107))))
 (let ((?x63669 (- (- ?x63665 (* (* 2.0 l_0_16_102) l_0_16_108)) (* (* 2.0 l_0_16_103) l_0_16_109))))
 (let ((?x63674 (- (- ?x63669 (* (* 2.0 l_0_16_104) l_0_16_110)) (* (* 2.0 l_0_16_105) l_0_16_111))))
 (let ((?x63680 (+ (+ ?x63674 (* (* 2.0 l_0_16_72) l_0_16_78)) (* (* 2.0 l_0_16_73) l_0_16_79))))
 (let ((?x63686 (+ (+ ?x63680 (* (* 2.0 l_0_16_74) l_0_16_80)) (* (* 2.0 l_0_16_75) l_0_16_81))))
 (let ((?x63692 (+ (+ ?x63686 (* (* 2.0 l_0_16_76) l_0_16_82)) (* (* 2.0 l_0_16_77) l_0_16_83))))
 (= ?x63692 0.0))))))))
(assert
 (let ((?x63755 (* l_0_16_84 l_0_16_84)))
 (let ((?x63753 (* l_0_16_83 l_0_16_83)))
 (let ((?x63751 (* l_0_16_82 l_0_16_82)))
 (let ((?x63749 (* l_0_16_81 l_0_16_81)))
 (let ((?x63747 (* l_0_16_80 l_0_16_80)))
 (let ((?x63745 (* l_0_16_79 l_0_16_79)))
 (let ((?x63743 (* l_0_16_78 l_0_16_78)))
 (let ((?x63741 (* l_0_16_112 l_0_16_112)))
 (let ((?x63739 (* l_0_16_111 l_0_16_111)))
 (let ((?x63737 (* l_0_16_110 l_0_16_110)))
 (let ((?x63726 (* l_0_16_109 l_0_16_109)))
 (let ((?x63723 (* l_0_16_108 l_0_16_108)))
 (let ((?x63725 (- (- (* (- l_0_16_106) l_0_16_106) (* l_0_16_107 l_0_16_107)) ?x63723)))
 (let ((?x63748 (+ (+ (+ (- (- (- (- ?x63725 ?x63726) ?x63737) ?x63739) ?x63741) ?x63743) ?x63745) ?x63747)))
 (= (+ (+ (+ (+ ?x63748 ?x63749) ?x63751) ?x63753) ?x63755) 0.0))))))))))))))))
(assert
 (let ((?x63794 (* l_0_16_281 l_0_16_281)))
 (let ((?x63792 (* l_0_16_253 l_0_16_253)))
 (let ((?x63790 (* l_0_16_225 l_0_16_225)))
 (let ((?x63788 (* l_0_16_197 l_0_16_197)))
 (let ((?x63785 (+ (* (* (- 1.0) l_0_16_113) l_0_16_113) (* (* 2.0 l_0_16_141) l_0_16_142))))
 (let ((?x63793 (- (- (- (- ?x63785 (* (* 2.0 l_0_16_169) l_0_16_170)) ?x63788) ?x63790) ?x63792)))
 (= (- ?x63793 ?x63794) 0.0))))))))
(assert
 (let ((?x63819 (+ (* (* (- 2.0) l_0_16_113) l_0_16_119) (* (* 2.0 l_0_16_142) l_0_16_147))))
 (let ((?x63823 (- (+ ?x63819 (* (* 2.0 l_0_16_143) l_0_16_148)) (* (* 2.0 l_0_16_170) l_0_16_175))))
 (let ((?x63827 (- (- ?x63823 (* (* 2.0 l_0_16_171) l_0_16_176)) (* (* 2.0 l_0_16_197) l_0_16_203))))
 (let ((?x63831 (- (- ?x63827 (* (* 2.0 l_0_16_225) l_0_16_231)) (* (* 2.0 l_0_16_253) l_0_16_259))))
 (= (- ?x63831 (* (* 2.0 l_0_16_281) l_0_16_287)) 0.0))))))
(assert
 (let ((?x63870 (- (* (* (- 2.0) l_0_16_114) l_0_16_116) (* (* 2.0 l_0_16_115) l_0_16_117))))
 (let ((?x63874 (- (- ?x63870 (* (* 2.0 l_0_16_198) l_0_16_200)) (* (* 2.0 l_0_16_199) l_0_16_201))))
 (let ((?x63878 (- (- ?x63874 (* (* 2.0 l_0_16_226) l_0_16_228)) (* (* 2.0 l_0_16_227) l_0_16_229))))
 (let ((?x63882 (- (- ?x63878 (* (* 2.0 l_0_16_254) l_0_16_256)) (* (* 2.0 l_0_16_255) l_0_16_257))))
 (let ((?x63886 (- (- ?x63882 (* (* 2.0 l_0_16_282) l_0_16_284)) (* (* 2.0 l_0_16_283) l_0_16_285))))
 (= ?x63886 0.0)))))))
(assert
 (let ((?x63934 (- (* (* (- 2.0) l_0_16_114) l_0_16_119) (* (* 2.0 l_0_16_115) l_0_16_120))))
 (let ((?x63938 (- (- ?x63934 (* (* 2.0 l_0_16_198) l_0_16_203)) (* (* 2.0 l_0_16_199) l_0_16_204))))
 (let ((?x63942 (- (- ?x63938 (* (* 2.0 l_0_16_226) l_0_16_231)) (* (* 2.0 l_0_16_227) l_0_16_232))))
 (let ((?x63946 (- (- ?x63942 (* (* 2.0 l_0_16_254) l_0_16_259)) (* (* 2.0 l_0_16_255) l_0_16_260))))
 (let ((?x63950 (- (- ?x63946 (* (* 2.0 l_0_16_282) l_0_16_287)) (* (* 2.0 l_0_16_283) l_0_16_288))))
 (= ?x63950 0.0)))))))
(assert
 (let ((?x22961 (- (* (* (- 2.0) l_0_16_114) l_0_16_134) (* (* 2.0 l_0_16_115) l_0_16_135))))
 (let ((?x22700 (- (- ?x22961 (* (* 2.0 l_0_16_198) l_0_16_218)) (* (* 2.0 l_0_16_199) l_0_16_219))))
 (let ((?x45156 (- (- ?x22700 (* (* 2.0 l_0_16_226) l_0_16_246)) (* (* 2.0 l_0_16_227) l_0_16_247))))
 (let ((?x45162 (- (- ?x45156 (* (* 2.0 l_0_16_254) l_0_16_274)) (* (* 2.0 l_0_16_255) l_0_16_275))))
 (let ((?x22878 (- (- ?x45162 (* (* 2.0 l_0_16_282) l_0_16_302)) (* (* 2.0 l_0_16_283) l_0_16_303))))
 (= ?x22878 0.0)))))))
(assert
 (let ((?x64021 (* l_0_16_286 l_0_16_286)))
 (let ((?x64019 (* l_0_16_285 l_0_16_285)))
 (let ((?x64017 (* l_0_16_284 l_0_16_284)))
 (let ((?x64015 (* l_0_16_258 l_0_16_258)))
 (let ((?x64013 (* l_0_16_257 l_0_16_257)))
 (let ((?x64011 (* l_0_16_256 l_0_16_256)))
 (let ((?x64009 (* l_0_16_230 l_0_16_230)))
 (let ((?x64007 (* l_0_16_229 l_0_16_229)))
 (let ((?x64005 (* l_0_16_228 l_0_16_228)))
 (let ((?x64003 (* l_0_16_202 l_0_16_202)))
 (let ((?x64001 (* l_0_16_201 l_0_16_201)))
 (let ((?x63999 (* l_0_16_200 l_0_16_200)))
 (let ((?x63995 (- (* (* (- 1.0) l_0_16_116) l_0_16_116) (* (* 1.0 l_0_16_117) l_0_16_117))))
 (let ((?x64004 (- (- (- (- ?x63995 (* (* 1.0 l_0_16_118) l_0_16_118)) ?x63999) ?x64001) ?x64003)))
 (let ((?x64018 (- (- (- (- (- (- (- ?x64004 ?x64005) ?x64007) ?x64009) ?x64011) ?x64013) ?x64015) ?x64017)))
 (= (- (- ?x64018 ?x64019) ?x64021) 0.0)))))))))))))))))
(assert
 (let ((?x23167 (- (* (* (- 2.0) l_0_16_116) l_0_16_119) (* (* 2.0 l_0_16_117) l_0_16_120))))
 (let ((?x64046 (- (- ?x23167 (* (* 2.0 l_0_16_118) l_0_16_121)) (* (* 2.0 l_0_16_200) l_0_16_203))))
 (let ((?x64050 (- (- ?x64046 (* (* 2.0 l_0_16_201) l_0_16_204)) (* (* 2.0 l_0_16_202) l_0_16_205))))
 (let ((?x64054 (- (- ?x64050 (* (* 2.0 l_0_16_228) l_0_16_231)) (* (* 2.0 l_0_16_229) l_0_16_232))))
 (let ((?x64058 (- (- ?x64054 (* (* 2.0 l_0_16_230) l_0_16_233)) (* (* 2.0 l_0_16_256) l_0_16_259))))
 (let ((?x64062 (- (- ?x64058 (* (* 2.0 l_0_16_257) l_0_16_260)) (* (* 2.0 l_0_16_258) l_0_16_261))))
 (let ((?x64066 (- (- ?x64062 (* (* 2.0 l_0_16_284) l_0_16_287)) (* (* 2.0 l_0_16_285) l_0_16_288))))
 (= (- ?x64066 (* (* 2.0 l_0_16_286) l_0_16_289)) 0.0)))))))))
(assert
 (let ((?x64120 (- (* (* (- 2.0) l_0_16_116) l_0_16_134) (* (* 2.0 l_0_16_117) l_0_16_135))))
 (let ((?x64124 (- (- ?x64120 (* (* 2.0 l_0_16_118) l_0_16_136)) (* (* 2.0 l_0_16_200) l_0_16_218))))
 (let ((?x64128 (- (- ?x64124 (* (* 2.0 l_0_16_201) l_0_16_219)) (* (* 2.0 l_0_16_202) l_0_16_220))))
 (let ((?x64132 (- (- ?x64128 (* (* 2.0 l_0_16_228) l_0_16_246)) (* (* 2.0 l_0_16_229) l_0_16_247))))
 (let ((?x64136 (- (- ?x64132 (* (* 2.0 l_0_16_230) l_0_16_248)) (* (* 2.0 l_0_16_256) l_0_16_274))))
 (let ((?x64140 (- (- ?x64136 (* (* 2.0 l_0_16_257) l_0_16_275)) (* (* 2.0 l_0_16_258) l_0_16_276))))
 (let ((?x64144 (- (- ?x64140 (* (* 2.0 l_0_16_284) l_0_16_302)) (* (* 2.0 l_0_16_285) l_0_16_303))))
 (= (- ?x64144 (* (* 2.0 l_0_16_286) l_0_16_304)) 0.0)))))))))
(assert
 (let ((?x64201 (* l_0_16_290 l_0_16_290)))
 (let ((?x64199 (* l_0_16_289 l_0_16_289)))
 (let ((?x64197 (* l_0_16_288 l_0_16_288)))
 (let ((?x64195 (* l_0_16_287 l_0_16_287)))
 (let ((?x64193 (* l_0_16_262 l_0_16_262)))
 (let ((?x64191 (* l_0_16_261 l_0_16_261)))
 (let ((?x64189 (* l_0_16_260 l_0_16_260)))
 (let ((?x64187 (* l_0_16_259 l_0_16_259)))
 (let ((?x64185 (* l_0_16_234 l_0_16_234)))
 (let ((?x64183 (* l_0_16_233 l_0_16_233)))
 (let ((?x64181 (* l_0_16_232 l_0_16_232)))
 (let ((?x64179 (* l_0_16_231 l_0_16_231)))
 (let ((?x64177 (* l_0_16_206 l_0_16_206)))
 (let ((?x64175 (* l_0_16_205 l_0_16_205)))
 (let ((?x64173 (* l_0_16_204 l_0_16_204)))
 (let ((?x64171 (* l_0_16_203 l_0_16_203)))
 (let ((?x45505 (- (* (* (- 1.0) l_0_16_119) l_0_16_119) (* (* 1.0 l_0_16_120) l_0_16_120))))
 (let ((?x64170 (- (- ?x45505 (* (* 1.0 l_0_16_121) l_0_16_121)) (* (* 1.0 l_0_16_122) l_0_16_122))))
 (let ((?x64184 (- (- (- (- (- (- (- ?x64170 ?x64171) ?x64173) ?x64175) ?x64177) ?x64179) ?x64181) ?x64183)))
 (let ((?x64198 (- (- (- (- (- (- (- ?x64184 ?x64185) ?x64187) ?x64189) ?x64191) ?x64193) ?x64195) ?x64197)))
 (= (- (- ?x64198 ?x64199) ?x64201) 0.0))))))))))))))))))))))
(assert
 (let ((?x64297 (* l_0_16_308 l_0_16_308)))
 (let ((?x64295 (* l_0_16_307 l_0_16_307)))
 (let ((?x64293 (* l_0_16_306 l_0_16_306)))
 (let ((?x64291 (* l_0_16_305 l_0_16_305)))
 (let ((?x64289 (* l_0_16_304 l_0_16_304)))
 (let ((?x64287 (* l_0_16_303 l_0_16_303)))
 (let ((?x64285 (* l_0_16_302 l_0_16_302)))
 (let ((?x64283 (* l_0_16_280 l_0_16_280)))
 (let ((?x64281 (* l_0_16_279 l_0_16_279)))
 (let ((?x64279 (* l_0_16_278 l_0_16_278)))
 (let ((?x64277 (* l_0_16_277 l_0_16_277)))
 (let ((?x64275 (* l_0_16_276 l_0_16_276)))
 (let ((?x64273 (* l_0_16_275 l_0_16_275)))
 (let ((?x64271 (* l_0_16_274 l_0_16_274)))
 (let ((?x64269 (* l_0_16_252 l_0_16_252)))
 (let ((?x64267 (* l_0_16_251 l_0_16_251)))
 (let ((?x64265 (* l_0_16_250 l_0_16_250)))
 (let ((?x64263 (* l_0_16_249 l_0_16_249)))
 (let ((?x64261 (* l_0_16_248 l_0_16_248)))
 (let ((?x64259 (* l_0_16_247 l_0_16_247)))
 (let ((?x64257 (* l_0_16_246 l_0_16_246)))
 (let ((?x64255 (* l_0_16_224 l_0_16_224)))
 (let ((?x64253 (* l_0_16_223 l_0_16_223)))
 (let ((?x64251 (* l_0_16_222 l_0_16_222)))
 (let ((?x64249 (* l_0_16_221 l_0_16_221)))
 (let ((?x64247 (* l_0_16_220 l_0_16_220)))
 (let ((?x64245 (* l_0_16_219 l_0_16_219)))
 (let ((?x64243 (* l_0_16_218 l_0_16_218)))
 (let ((?x64227 (- (* (* (- 1.0) l_0_16_134) l_0_16_134) (* (* 1.0 l_0_16_135) l_0_16_135))))
 (let ((?x64233 (- (- ?x64227 (* (* 1.0 l_0_16_136) l_0_16_136)) (* (* 1.0 l_0_16_137) l_0_16_137))))
 (let ((?x64239 (- (- ?x64233 (* (* 1.0 l_0_16_138) l_0_16_138)) (* (* 1.0 l_0_16_139) l_0_16_139))))
 (let ((?x64248 (- (- (- (- ?x64239 (* (* 1.0 l_0_16_140) l_0_16_140)) ?x64243) ?x64245) ?x64247)))
 (let ((?x64262 (- (- (- (- (- (- (- ?x64248 ?x64249) ?x64251) ?x64253) ?x64255) ?x64257) ?x64259) ?x64261)))
 (let ((?x64276 (- (- (- (- (- (- (- ?x64262 ?x64263) ?x64265) ?x64267) ?x64269) ?x64271) ?x64273) ?x64275)))
 (let ((?x64290 (- (- (- (- (- (- (- ?x64276 ?x64277) ?x64279) ?x64281) ?x64283) ?x64285) ?x64287) ?x64289)))
 (= (- (- (- (- ?x64290 ?x64291) ?x64293) ?x64295) ?x64297) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (= (- (* l_0_16_141 l_0_16_141) (* l_0_16_169 l_0_16_169)) 0.0))
(assert
 (let ((?x64368 (- (* (* 2.0 l_0_16_141) l_0_16_147) (* (* 2.0 l_0_16_169) l_0_16_175))))
 (= ?x64368 0.0)))
(assert
 (let ((?x64388 (* l_0_16_178 l_0_16_178)))
 (let ((?x64386 (* l_0_16_177 l_0_16_177)))
 (let ((?x64384 (* l_0_16_176 l_0_16_176)))
 (let ((?x64382 (* l_0_16_175 l_0_16_175)))
 (let ((?x64380 (* l_0_16_150 l_0_16_150)))
 (let ((?x64378 (* l_0_16_149 l_0_16_149)))
 (let ((?x64379 (+ (+ (* l_0_16_147 l_0_16_147) (* l_0_16_148 l_0_16_148)) ?x64378)))
 (= (- (- (- (- (+ ?x64379 ?x64380) ?x64382) ?x64384) ?x64386) ?x64388) 0.0)))))))))
(assert
 (>= l_0_16_1 0.0))
(assert
 (>= l_0_16_3 0.0))
(assert
 (>= l_0_16_6 0.0))
(assert
 (>= l_0_16_10 0.0))
(assert
 (>= l_0_16_15 0.0))
(assert
 (>= l_0_16_21 0.0))
(assert
 (>= l_0_16_28 0.0))
(assert
 (>= l_0_16_29 0.0))
(assert
 (>= l_0_16_31 0.0))
(assert
 (>= l_0_16_34 0.0))
(assert
 (>= l_0_16_38 0.0))
(assert
 (>= l_0_16_43 0.0))
(assert
 (>= l_0_16_49 0.0))
(assert
 (>= l_0_16_56 0.0))
(assert
 (>= l_0_16_57 0.0))
(assert
 (>= l_0_16_59 0.0))
(assert
 (>= l_0_16_62 0.0))
(assert
 (>= l_0_16_66 0.0))
(assert
 (>= l_0_16_71 0.0))
(assert
 (>= l_0_16_77 0.0))
(assert
 (>= l_0_16_84 0.0))
(assert
 (>= l_0_16_85 0.0))
(assert
 (>= l_0_16_87 0.0))
(assert
 (>= l_0_16_90 0.0))
(assert
 (>= l_0_16_94 0.0))
(assert
 (>= l_0_16_99 0.0))
(assert
 (>= l_0_16_105 0.0))
(assert
 (>= l_0_16_112 0.0))
(assert
 (>= l_0_16_113 0.0))
(assert
 (>= l_0_16_115 0.0))
(assert
 (>= l_0_16_118 0.0))
(assert
 (>= l_0_16_122 0.0))
(assert
 (>= l_0_16_127 0.0))
(assert
 (>= l_0_16_133 0.0))
(assert
 (>= l_0_16_140 0.0))
(assert
 (>= l_0_16_141 0.0))
(assert
 (>= l_0_16_143 0.0))
(assert
 (>= l_0_16_146 0.0))
(assert
 (>= l_0_16_150 0.0))
(assert
 (>= l_0_16_155 0.0))
(assert
 (>= l_0_16_161 0.0))
(assert
 (>= l_0_16_168 0.0))
(assert
 (>= l_0_16_169 0.0))
(assert
 (>= l_0_16_171 0.0))
(assert
 (>= l_0_16_174 0.0))
(assert
 (>= l_0_16_178 0.0))
(assert
 (>= l_0_16_183 0.0))
(assert
 (>= l_0_16_189 0.0))
(assert
 (>= l_0_16_196 0.0))
(assert
 (>= l_0_16_197 0.0))
(assert
 (>= l_0_16_199 0.0))
(assert
 (>= l_0_16_202 0.0))
(assert
 (>= l_0_16_206 0.0))
(assert
 (>= l_0_16_211 0.0))
(assert
 (>= l_0_16_217 0.0))
(assert
 (>= l_0_16_224 0.0))
(assert
 (>= l_0_16_225 0.0))
(assert
 (>= l_0_16_227 0.0))
(assert
 (>= l_0_16_230 0.0))
(assert
 (>= l_0_16_234 0.0))
(assert
 (>= l_0_16_239 0.0))
(assert
 (>= l_0_16_245 0.0))
(assert
 (>= l_0_16_252 0.0))
(assert
 (>= l_0_16_253 0.0))
(assert
 (>= l_0_16_255 0.0))
(assert
 (>= l_0_16_258 0.0))
(assert
 (>= l_0_16_262 0.0))
(assert
 (>= l_0_16_267 0.0))
(assert
 (>= l_0_16_273 0.0))
(assert
 (>= l_0_16_280 0.0))
(assert
 (>= l_0_16_281 0.0))
(assert
 (>= l_0_16_283 0.0))
(assert
 (>= l_0_16_286 0.0))
(assert
 (>= l_0_16_290 0.0))
(assert
 (>= l_0_16_295 0.0))
(assert
 (>= l_0_16_301 0.0))
(assert
 (>= l_0_16_308 0.0))
(assert
 (let ((?x64495 (* l_0_17_31 l_0_17_31)))
 (let ((?x64493 (* l_0_17_30 l_0_17_30)))
 (let ((?x64491 (* l_0_17_3 l_0_17_3)))
 (let ((?x64489 (* l_0_17_2 l_0_17_2)))
 (let ((?x64482 (- (* (* (- 2.0) l_0_17_114) l_0_17_123) (* (* 2.0 l_0_17_115) l_0_17_124))))
 (let ((?x64488 (- (- ?x64482 (* (* 2.0 l_0_17_198) l_0_17_207)) (* (* 2.0 l_0_17_199) l_0_17_208))))
 (= (+ (+ (+ (- (- ?x64488 ?x64489) ?x64491) ?x64493) ?x64495) 1.0) 0.0))))))))
(assert
 (let ((?x64495 (* l_0_17_31 l_0_17_31)))
 (let ((?x64493 (* l_0_17_30 l_0_17_30)))
 (let ((?x64491 (* l_0_17_3 l_0_17_3)))
 (let ((?x64489 (* l_0_17_2 l_0_17_2)))
 (let ((?x64520 (- (* (* (- 2.0) l_0_17_119) l_0_17_134) (* (* 2.0 l_0_17_120) l_0_17_135))))
 (let ((?x64526 (- (- ?x64520 (* (* 2.0 l_0_17_121) l_0_17_136)) (* (* 2.0 l_0_17_122) l_0_17_137))))
 (let ((?x64532 (+ (+ ?x64526 (* (* 2.0 l_0_17_142) l_0_17_147)) (* (* 2.0 l_0_17_143) l_0_17_148))))
 (let ((?x64538 (- (- ?x64532 (* (* 2.0 l_0_17_170) l_0_17_175)) (* (* 2.0 l_0_17_171) l_0_17_176))))
 (let ((?x64545 (- (- (+ ?x64538 ?x64489) (* (* 2.0 l_0_17_203) l_0_17_218)) (* (* 2.0 l_0_17_204) l_0_17_219))))
 (let ((?x64551 (- (- ?x64545 (* (* 2.0 l_0_17_205) l_0_17_220)) (* (* 2.0 l_0_17_206) l_0_17_221))))
 (= (- (- (- (+ ?x64551 ?x64491) ?x64493) ?x64495) 1.0) 0.0))))))))))))
(assert
 (let ((?x64495 (* l_0_17_31 l_0_17_31)))
 (let ((?x64493 (* l_0_17_30 l_0_17_30)))
 (let ((?x64491 (* l_0_17_3 l_0_17_3)))
 (let ((?x64489 (* l_0_17_2 l_0_17_2)))
 (let ((?x64588 (- (* (* (- 2.0) l_0_17_113) l_0_17_116) (* (* 2.0 l_0_17_197) l_0_17_200))))
 (= (- (- (- (+ (+ ?x64588 ?x64489) ?x64491) ?x64493) ?x64495) 1.0) 0.0)))))))
(assert
 (let ((?x64612 (- (- (- _a_7_) (* (* 2.0 l_0_17_114) l_0_17_116)) (* (* 2.0 l_0_17_115) l_0_17_117))))
 (let ((?x64616 (- (- ?x64612 (* (* 2.0 l_0_17_198) l_0_17_200)) (* (* 2.0 l_0_17_199) l_0_17_201))))
 (= (+ ?x64616 1.0) 0.0))))
(assert
 (let ((?x64639 (* l_0_17_199 l_0_17_199)))
 (let ((?x64637 (* l_0_17_198 l_0_17_198)))
 (let ((?x64636 (- (- (- _a_6_) (* (* 1.0 l_0_17_114) l_0_17_114)) (* (* 1.0 l_0_17_115) l_0_17_115))))
 (= (- (- ?x64636 ?x64637) ?x64639) 0.0)))))
(assert
 (let ((?x64495 (* l_0_17_31 l_0_17_31)))
 (let ((?x64493 (* l_0_17_30 l_0_17_30)))
 (let ((?x64491 (* l_0_17_3 l_0_17_3)))
 (let ((?x64489 (* l_0_17_2 l_0_17_2)))
 (let ((?x64659 (- (- (- _a_8_) (* (* 2.0 l_0_17_114) l_0_17_128)) (* (* 2.0 l_0_17_115) l_0_17_129))))
 (let ((?x64663 (- (- ?x64659 (* (* 2.0 l_0_17_198) l_0_17_212)) (* (* 2.0 l_0_17_199) l_0_17_213))))
 (= (- (- (+ (+ ?x64663 ?x64489) ?x64491) ?x64493) ?x64495) 0.0))))))))
(assert
 (= (+ (* (- l_0_17_1) l_0_17_1) (* l_0_17_29 l_0_17_29)) 0.0))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64696 (* ?x64695 l_0_17_30)))
 (let ((?x64692 (- (* (* (- 2.0) l_0_17_1) l_0_17_2) (* (* 2.0 l_0_17_113) l_0_17_123))))
 (= (+ (- ?x64692 (* (* 2.0 l_0_17_197) l_0_17_207)) ?x64696) 0.0)))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64724 (* ?x64723 l_0_17_40)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64721 (* ?x64720 l_0_17_39)))
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64718 (* ?x64695 l_0_17_32)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x64716 (* ?x64715 l_0_17_3)))
 (let ((?x64712 (* 2.0 l_0_17_11)))
 (let ((?x64713 (* ?x64712 l_0_17_2)))
 (let ((?x64722 (- (+ (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_4) ?x64713) ?x64716) ?x64718) ?x64721)))
 (= (- ?x64722 ?x64724) 0.0)))))))))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64746 (* ?x64695 l_0_17_35)))
 (= (+ (* (* (- 2.0) l_0_17_1) l_0_17_7) ?x64746) 0.0))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64752 (* ?x64695 l_0_17_39)))
 (= (+ (* (* (- 2.0) l_0_17_1) l_0_17_11) ?x64752) 0.0))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64770 (* ?x64695 l_0_17_44)))
 (let ((?x64752 (* ?x64695 l_0_17_39)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x64763 (* ?x64760 l_0_17_16)))
 (let ((?x64762 (* ?x64760 l_0_17_11)))
 (= (+ (- (- ?x64762 ?x64763) ?x64752) ?x64770) 0.0))))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64788 (* ?x64695 l_0_17_50)))
 (let ((?x64784 (+ (* (* (- 2.0) l_0_17_1) l_0_17_22) (* (* 2.0 l_0_17_141) l_0_17_151))))
 (let ((?x64792 (+ (+ (- ?x64784 (* (* 2.0 l_0_17_169) l_0_17_179)) ?x64788) (* (* 2.0 l_0_17_58) l_0_17_67))))
 (let ((?x64798 (- (+ ?x64792 (* (* 2.0 l_0_17_59) l_0_17_68)) (* (* 2.0 l_0_17_86) l_0_17_95))))
 (= (- ?x64798 (* (* 2.0 l_0_17_87) l_0_17_96)) 0.0)))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64853 (* ?x64723 l_0_17_33)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64851 (* ?x64720 l_0_17_32)))
 (let ((?x64848 (* 2.0 l_0_17_3)))
 (let ((?x64849 (* ?x64848 l_0_17_5)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x64837 (* ?x64836 l_0_17_4)))
 (let ((?x64832 (- (* (* (- 2.0) l_0_17_116) l_0_17_123) (* (* 2.0 l_0_17_117) l_0_17_124))))
 (let ((?x64841 (- (- (- ?x64832 (* (* 2.0 l_0_17_118) l_0_17_125)) ?x64837) (* (* 2.0 l_0_17_200) l_0_17_207))))
 (let ((?x64847 (- (- ?x64841 (* (* 2.0 l_0_17_201) l_0_17_208)) (* (* 2.0 l_0_17_202) l_0_17_209))))
 (= (+ (+ (- ?x64847 ?x64849) ?x64851) ?x64853) 0.0)))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64902 (* ?x64723 l_0_17_36)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64900 (* ?x64720 l_0_17_35)))
 (let ((?x64848 (* 2.0 l_0_17_3)))
 (let ((?x64898 (* ?x64848 l_0_17_8)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x64888 (* ?x64836 l_0_17_7)))
 (let ((?x64878 (- (* (* (- 2.0) l_0_17_119) l_0_17_123) (* (* 2.0 l_0_17_120) l_0_17_124))))
 (let ((?x64887 (- (- ?x64878 (* (* 2.0 l_0_17_121) l_0_17_125)) (* (* 2.0 l_0_17_122) l_0_17_126))))
 (let ((?x64893 (- (- (- ?x64887 ?x64888) (* (* 2.0 l_0_17_203) l_0_17_207)) (* (* 2.0 l_0_17_204) l_0_17_208))))
 (let ((?x64897 (- (- ?x64893 (* (* 2.0 l_0_17_205) l_0_17_209)) (* (* 2.0 l_0_17_206) l_0_17_210))))
 (= (+ (+ (- ?x64897 ?x64898) ?x64900) ?x64902) 0.0))))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64724 (* ?x64723 l_0_17_40)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64721 (* ?x64720 l_0_17_39)))
 (let ((?x64961 (* l_0_17_211 l_0_17_211)))
 (let ((?x64959 (* l_0_17_210 l_0_17_210)))
 (let ((?x64957 (* l_0_17_209 l_0_17_209)))
 (let ((?x64955 (* l_0_17_208 l_0_17_208)))
 (let ((?x64953 (* l_0_17_207 l_0_17_207)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x64716 (* ?x64715 l_0_17_3)))
 (let ((?x64940 (- (- (* (* (- 2.0) l_0_17_11) l_0_17_2) ?x64716) (* (* 1.0 l_0_17_123) l_0_17_123))))
 (let ((?x64946 (- (- ?x64940 (* (* 1.0 l_0_17_124) l_0_17_124)) (* (* 1.0 l_0_17_125) l_0_17_125))))
 (let ((?x64952 (- (- ?x64946 (* (* 1.0 l_0_17_126) l_0_17_126)) (* (* 1.0 l_0_17_127) l_0_17_127))))
 (let ((?x64964 (+ (+ (- (- (- (- (- ?x64952 ?x64953) ?x64955) ?x64957) ?x64959) ?x64961) ?x64721) ?x64724)))
 (= ?x64964 0.0)))))))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64993 (* ?x64723 l_0_17_45)))
 (let ((?x64724 (* ?x64723 l_0_17_40)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64990 (* ?x64720 l_0_17_44)))
 (let ((?x64721 (* ?x64720 l_0_17_39)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x64972 (* ?x64971 l_0_17_3)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x64969 (* ?x64968 l_0_17_2)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x64716 (* ?x64715 l_0_17_3)))
 (let ((?x64712 (* 2.0 l_0_17_11)))
 (let ((?x64713 (* ?x64712 l_0_17_2)))
 (let ((?x24685 (- (- (+ ?x64713 ?x64716) (* (* 2.0 l_0_17_123) l_0_17_128)) (* (* 2.0 l_0_17_124) l_0_17_129))))
 (let ((?x24740 (- (- ?x24685 (* (* 2.0 l_0_17_125) l_0_17_130)) (* (* 2.0 l_0_17_126) l_0_17_131))))
 (let ((?x64976 (- (- (- (- ?x24740 (* (* 2.0 l_0_17_127) l_0_17_132)) ?x64969) ?x64972) (* (* 2.0 l_0_17_207) l_0_17_212))))
 (let ((?x64982 (- (- ?x64976 (* (* 2.0 l_0_17_208) l_0_17_213)) (* (* 2.0 l_0_17_209) l_0_17_214))))
 (let ((?x64988 (- (- ?x64982 (* (* 2.0 l_0_17_210) l_0_17_215)) (* (* 2.0 l_0_17_211) l_0_17_216))))
 (= (+ (- (+ (- ?x64988 ?x64721) ?x64990) ?x64724) ?x64993) 0.0)))))))))))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x65066 (* ?x64723 l_0_17_51)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x65064 (* ?x64720 l_0_17_50)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65062 (* ?x65061 l_0_17_3)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x65049 (* ?x64836 l_0_17_22)))
 (let ((?x65034 (- (* (* (- 2.0) l_0_17_123) l_0_17_134) (* (* 2.0 l_0_17_124) l_0_17_135))))
 (let ((?x65038 (- (- ?x65034 (* (* 2.0 l_0_17_125) l_0_17_136)) (* (* 2.0 l_0_17_126) l_0_17_137))))
 (let ((?x65042 (+ (- ?x65038 (* (* 2.0 l_0_17_127) l_0_17_138)) (* (* 2.0 l_0_17_142) l_0_17_151))))
 (let ((?x65046 (- (+ ?x65042 (* (* 2.0 l_0_17_143) l_0_17_152)) (* (* 2.0 l_0_17_170) l_0_17_179))))
 (let ((?x65052 (- (- (- ?x65046 (* (* 2.0 l_0_17_171) l_0_17_180)) ?x65049) (* (* 2.0 l_0_17_207) l_0_17_218))))
 (let ((?x65056 (- (- ?x65052 (* (* 2.0 l_0_17_208) l_0_17_219)) (* (* 2.0 l_0_17_209) l_0_17_220))))
 (let ((?x65060 (- (- ?x65056 (* (* 2.0 l_0_17_210) l_0_17_221)) (* (* 2.0 l_0_17_211) l_0_17_222))))
 (= (+ (+ (- ?x65060 ?x65062) ?x65064) ?x65066) 0.0)))))))))))))))))
(assert
 (let ((?x65155 (* l_0_17_6 l_0_17_6)))
 (let ((?x65153 (* l_0_17_5 l_0_17_5)))
 (let ((?x65151 (* l_0_17_4 l_0_17_4)))
 (let ((?x65149 (* l_0_17_34 l_0_17_34)))
 (let ((?x65152 (- (+ (+ (* l_0_17_32 l_0_17_32) (* l_0_17_33 l_0_17_33)) ?x65149) ?x65151)))
 (= (- (- ?x65152 ?x65153) ?x65155) 0.0)))))))
(assert
 (let ((?x65184 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x65181 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x65178 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65175 (* ?x65174 l_0_17_37)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65172 (* ?x65171 l_0_17_36)))
 (let ((?x65182 (- (- (+ (+ (* (* 2.0 l_0_17_32) l_0_17_35) ?x65172) ?x65175) ?x65178) ?x65181)))
 (= (- ?x65182 ?x65184) 0.0))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65223 (* ?x65174 l_0_17_41)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65221 (* ?x65171 l_0_17_40)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65219 (* ?x65169 l_0_17_39)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65217 (* ?x65216 l_0_17_6)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65214 (* ?x64715 l_0_17_5)))
 (let ((?x65222 (+ (+ (- (- (* (* (- 2.0) l_0_17_11) l_0_17_4) ?x65214) ?x65217) ?x65219) ?x65221)))
 (= (+ ?x65222 ?x65223) 0.0)))))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65266 (* ?x65174 l_0_17_46)))
 (let ((?x65223 (* ?x65174 l_0_17_41)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65263 (* ?x65171 l_0_17_45)))
 (let ((?x65221 (* ?x65171 l_0_17_40)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65260 (* ?x65169 l_0_17_44)))
 (let ((?x65219 (* ?x65169 l_0_17_39)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65257 (* ?x65256 l_0_17_6)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65254 (* ?x64971 l_0_17_5)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65246 (* ?x64968 l_0_17_4)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65217 (* ?x65216 l_0_17_6)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65214 (* ?x64715 l_0_17_5)))
 (let ((?x65245 (+ (+ (* (* 2.0 l_0_17_11) l_0_17_4) ?x65214) ?x65217)))
 (let ((?x65264 (+ (- (+ (- (- (- (- ?x65245 ?x65246) ?x65254) ?x65257) ?x65219) ?x65260) ?x65221) ?x65263)))
 (= (+ (- ?x65264 ?x65223) ?x65266) 0.0)))))))))))))))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65321 (* ?x65174 l_0_17_52)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65319 (* ?x65171 l_0_17_51)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65317 (* ?x65169 l_0_17_50)))
 (let ((?x65314 (* 2.0 l_0_17_24)))
 (let ((?x65315 (* ?x65314 l_0_17_6)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65312 (* ?x65061 l_0_17_5)))
 (let ((?x65309 (* 2.0 l_0_17_22)))
 (let ((?x65310 (* ?x65309 l_0_17_4)))
 (let ((?x65296 (+ (* (* 2.0 l_0_17_144) l_0_17_151) (* (* 2.0 l_0_17_145) l_0_17_152))))
 (let ((?x65302 (- (+ ?x65296 (* (* 2.0 l_0_17_146) l_0_17_153)) (* (* 2.0 l_0_17_172) l_0_17_179))))
 (let ((?x65308 (- (- ?x65302 (* (* 2.0 l_0_17_173) l_0_17_180)) (* (* 2.0 l_0_17_174) l_0_17_181))))
 (= (+ (+ (+ (- (- (- ?x65308 ?x65310) ?x65312) ?x65315) ?x65317) ?x65319) ?x65321) 0.0)))))))))))))))))
(assert
 (let ((?x65366 (* l_0_17_9 l_0_17_9)))
 (let ((?x65364 (* l_0_17_8 l_0_17_8)))
 (let ((?x65362 (* l_0_17_7 l_0_17_7)))
 (let ((?x65360 (* l_0_17_38 l_0_17_38)))
 (let ((?x65358 (* l_0_17_37 l_0_17_37)))
 (let ((?x65356 (* l_0_17_36 l_0_17_36)))
 (let ((?x65357 (+ (+ (* (- l_0_17_10) l_0_17_10) (* l_0_17_35 l_0_17_35)) ?x65356)))
 (= (- (- (- (+ (+ ?x65357 ?x65358) ?x65360) ?x65362) ?x65364) ?x65366) 0.0)))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65395 (* ?x65394 l_0_17_42)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65392 (* ?x65391 l_0_17_41)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65389 (* ?x65388 l_0_17_40)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65386 (* ?x65385 l_0_17_39)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65383 (* ?x65216 l_0_17_9)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65381 (* ?x64715 l_0_17_8)))
 (let ((?x64712 (* 2.0 l_0_17_11)))
 (let ((?x65379 (* ?x64712 l_0_17_7)))
 (let ((?x65387 (+ (- (- (- (* (* (- 2.0) l_0_17_10) l_0_17_14) ?x65379) ?x65381) ?x65383) ?x65386)))
 (= (+ (+ (+ ?x65387 ?x65389) ?x65392) ?x65395) 0.0)))))))))))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65431 (* ?x65394 l_0_17_47)))
 (let ((?x65395 (* ?x65394 l_0_17_42)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65428 (* ?x65391 l_0_17_46)))
 (let ((?x65392 (* ?x65391 l_0_17_41)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65425 (* ?x65388 l_0_17_45)))
 (let ((?x65389 (* ?x65388 l_0_17_40)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65422 (* ?x65385 l_0_17_44)))
 (let ((?x65386 (* ?x65385 l_0_17_39)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65419 (* ?x65256 l_0_17_9)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65417 (* ?x64971 l_0_17_8)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65415 (* ?x64968 l_0_17_7)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65383 (* ?x65216 l_0_17_9)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65381 (* ?x64715 l_0_17_8)))
 (let ((?x64712 (* 2.0 l_0_17_11)))
 (let ((?x65379 (* ?x64712 l_0_17_7)))
 (let ((?x65408 (* 2.0 l_0_17_10)))
 (let ((?x65410 (* ?x65408 l_0_17_19)))
 (let ((?x65409 (* ?x65408 l_0_17_14)))
 (let ((?x65420 (- (- (- (+ (+ (+ (- ?x65409 ?x65410) ?x65379) ?x65381) ?x65383) ?x65415) ?x65417) ?x65419)))
 (let ((?x65430 (- (+ (- (+ (- (+ (- ?x65420 ?x65386) ?x65422) ?x65389) ?x65425) ?x65392) ?x65428) ?x65395)))
 (= (+ ?x65430 ?x65431) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65500 (* ?x65394 l_0_17_53)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65498 (* ?x65391 l_0_17_52)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65496 (* ?x65388 l_0_17_51)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65494 (* ?x65385 l_0_17_50)))
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64724 (* ?x64723 l_0_17_40)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64721 (* ?x64720 l_0_17_39)))
 (let ((?x65314 (* 2.0 l_0_17_24)))
 (let ((?x65490 (* ?x65314 l_0_17_9)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65488 (* ?x65061 l_0_17_8)))
 (let ((?x65309 (* 2.0 l_0_17_22)))
 (let ((?x65486 (* ?x65309 l_0_17_7)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x64716 (* ?x64715 l_0_17_3)))
 (let ((?x64712 (* 2.0 l_0_17_11)))
 (let ((?x64713 (* ?x64712 l_0_17_2)))
 (let ((?x65464 (+ (+ (+ (* (* (- 2.0) l_0_17_10) l_0_17_25) ?x64713) ?x64716) (* (* 2.0 l_0_17_147) l_0_17_151))))
 (let ((?x65470 (+ (+ ?x65464 (* (* 2.0 l_0_17_148) l_0_17_152)) (* (* 2.0 l_0_17_149) l_0_17_153))))
 (let ((?x65476 (- (+ ?x65470 (* (* 2.0 l_0_17_150) l_0_17_154)) (* (* 2.0 l_0_17_175) l_0_17_179))))
 (let ((?x65482 (- (- ?x65476 (* (* 2.0 l_0_17_176) l_0_17_180)) (* (* 2.0 l_0_17_177) l_0_17_181))))
 (let ((?x65491 (- (- (- (- ?x65482 (* (* 2.0 l_0_17_178) l_0_17_182)) ?x65486) ?x65488) ?x65490)))
 (= (+ (+ (+ (+ (- (- ?x65491 ?x64721) ?x64724) ?x65494) ?x65496) ?x65498) ?x65500) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x65558 (* l_0_17_43 l_0_17_43)))
 (let ((?x65556 (* l_0_17_42 l_0_17_42)))
 (let ((?x65554 (* l_0_17_41 l_0_17_41)))
 (let ((?x65552 (* l_0_17_40 l_0_17_40)))
 (let ((?x65550 (* l_0_17_39 l_0_17_39)))
 (let ((?x65548 (* l_0_17_15 l_0_17_15)))
 (let ((?x65546 (* l_0_17_14 l_0_17_14)))
 (let ((?x65533 (* l_0_17_13 l_0_17_13)))
 (let ((?x65545 (- (- (* (- l_0_17_11) l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x65533)))
 (let ((?x65559 (+ (+ (+ (+ (+ (- (- ?x65545 ?x65546) ?x65548) ?x65550) ?x65552) ?x65554) ?x65556) ?x65558)))
 (= ?x65559 0.0))))))))))))
(assert
 (let ((?x65558 (* l_0_17_43 l_0_17_43)))
 (let ((?x65608 (* 2.0 l_0_17_43)))
 (let ((?x65609 (* ?x65608 l_0_17_48)))
 (let ((?x65556 (* l_0_17_42 l_0_17_42)))
 (let ((?x65604 (* 2.0 l_0_17_42)))
 (let ((?x65605 (* ?x65604 l_0_17_47)))
 (let ((?x65554 (* l_0_17_41 l_0_17_41)))
 (let ((?x65600 (* 2.0 l_0_17_41)))
 (let ((?x65601 (* ?x65600 l_0_17_46)))
 (let ((?x65552 (* l_0_17_40 l_0_17_40)))
 (let ((?x65596 (* 2.0 l_0_17_40)))
 (let ((?x65597 (* ?x65596 l_0_17_45)))
 (let ((?x65550 (* l_0_17_39 l_0_17_39)))
 (let ((?x65592 (* 2.0 l_0_17_39)))
 (let ((?x65593 (* ?x65592 l_0_17_44)))
 (let ((?x65548 (* l_0_17_15 l_0_17_15)))
 (let ((?x65588 (* 2.0 l_0_17_15)))
 (let ((?x65589 (* ?x65588 l_0_17_20)))
 (let ((?x65546 (* l_0_17_14 l_0_17_14)))
 (let ((?x65584 (* 2.0 l_0_17_14)))
 (let ((?x65585 (* ?x65584 l_0_17_19)))
 (let ((?x65533 (* l_0_17_13 l_0_17_13)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65581 (* ?x65216 l_0_17_18)))
 (let ((?x65530 (* l_0_17_12 l_0_17_12)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65578 (* ?x64715 l_0_17_17)))
 (let ((?x65579 (- (+ (* (* (- 2.0) l_0_17_11) l_0_17_16) (* l_0_17_11 l_0_17_11)) ?x65578)))
 (let ((?x65591 (+ (- (+ (- (+ (- (+ ?x65579 ?x65530) ?x65581) ?x65533) ?x65585) ?x65546) ?x65589) ?x65548)))
 (let ((?x65606 (+ (- (+ (- (+ (- (+ ?x65591 ?x65593) ?x65550) ?x65597) ?x65552) ?x65601) ?x65554) ?x65605)))
 (= (- (+ (- ?x65606 ?x65556) ?x65609) ?x65558) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x65608 (* 2.0 l_0_17_43)))
 (let ((?x65675 (* ?x65608 l_0_17_54)))
 (let ((?x65604 (* 2.0 l_0_17_42)))
 (let ((?x65673 (* ?x65604 l_0_17_53)))
 (let ((?x65600 (* 2.0 l_0_17_41)))
 (let ((?x65671 (* ?x65600 l_0_17_52)))
 (let ((?x65596 (* 2.0 l_0_17_40)))
 (let ((?x65669 (* ?x65596 l_0_17_51)))
 (let ((?x65592 (* 2.0 l_0_17_39)))
 (let ((?x65667 (* ?x65592 l_0_17_50)))
 (let ((?x65665 (* l_0_17_183 l_0_17_183)))
 (let ((?x65663 (* l_0_17_182 l_0_17_182)))
 (let ((?x65661 (* l_0_17_181 l_0_17_181)))
 (let ((?x65659 (* l_0_17_180 l_0_17_180)))
 (let ((?x65657 (* l_0_17_179 l_0_17_179)))
 (let ((?x65655 (* l_0_17_155 l_0_17_155)))
 (let ((?x65653 (* l_0_17_154 l_0_17_154)))
 (let ((?x65651 (* l_0_17_153 l_0_17_153)))
 (let ((?x65649 (* l_0_17_152 l_0_17_152)))
 (let ((?x65647 (* l_0_17_151 l_0_17_151)))
 (let ((?x65588 (* 2.0 l_0_17_15)))
 (let ((?x65645 (* ?x65588 l_0_17_26)))
 (let ((?x65584 (* 2.0 l_0_17_14)))
 (let ((?x65643 (* ?x65584 l_0_17_25)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65641 (* ?x65216 l_0_17_24)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x46775 (* ?x64715 l_0_17_23)))
 (let ((?x65646 (- (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_22) ?x46775) ?x65641) ?x65643) ?x65645)))
 (let ((?x65660 (- (- (+ (+ (+ (+ (+ ?x65646 ?x65647) ?x65649) ?x65651) ?x65653) ?x65655) ?x65657) ?x65659)))
 (let ((?x65674 (+ (+ (+ (+ (- (- (- ?x65660 ?x65661) ?x65663) ?x65665) ?x65667) ?x65669) ?x65671) ?x65673)))
 (= (+ ?x65674 ?x65675) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x65732 (* l_0_17_49 l_0_17_49)))
 (let ((?x65730 (* l_0_17_48 l_0_17_48)))
 (let ((?x65728 (* l_0_17_47 l_0_17_47)))
 (let ((?x65726 (* l_0_17_46 l_0_17_46)))
 (let ((?x65724 (* l_0_17_45 l_0_17_45)))
 (let ((?x65722 (* l_0_17_44 l_0_17_44)))
 (let ((?x65608 (* 2.0 l_0_17_43)))
 (let ((?x65609 (* ?x65608 l_0_17_48)))
 (let ((?x65604 (* 2.0 l_0_17_42)))
 (let ((?x65605 (* ?x65604 l_0_17_47)))
 (let ((?x65600 (* 2.0 l_0_17_41)))
 (let ((?x65601 (* ?x65600 l_0_17_46)))
 (let ((?x65596 (* 2.0 l_0_17_40)))
 (let ((?x65597 (* ?x65596 l_0_17_45)))
 (let ((?x65592 (* 2.0 l_0_17_39)))
 (let ((?x65593 (* ?x65592 l_0_17_44)))
 (let ((?x65715 (* l_0_17_21 l_0_17_21)))
 (let ((?x65713 (* l_0_17_20 l_0_17_20)))
 (let ((?x65711 (* l_0_17_19 l_0_17_19)))
 (let ((?x65709 (* l_0_17_18 l_0_17_18)))
 (let ((?x65707 (* l_0_17_17 l_0_17_17)))
 (let ((?x46883 (* l_0_17_16 l_0_17_16)))
 (let ((?x65588 (* 2.0 l_0_17_15)))
 (let ((?x65589 (* ?x65588 l_0_17_20)))
 (let ((?x65584 (* 2.0 l_0_17_14)))
 (let ((?x65585 (* ?x65584 l_0_17_19)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65581 (* ?x65216 l_0_17_18)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65578 (* ?x64715 l_0_17_17)))
 (let ((?x65693 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_16) ?x65578) ?x65581) ?x65585) ?x65589)))
 (let ((?x65717 (- (- (- (- (- (- (- ?x65693 ?x46883) ?x65707) ?x65709) ?x65711) ?x65713) ?x65715) ?x65593)))
 (let ((?x65727 (+ (+ (+ (- (- (- (- ?x65717 ?x65597) ?x65601) ?x65605) ?x65609) ?x65722) ?x65724) ?x65726)))
 (= (+ (+ (+ ?x65727 ?x65728) ?x65730) ?x65732) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x65811 (* (* 2.0 l_0_17_49) l_0_17_55)))
 (let ((?x65808 (* (* 2.0 l_0_17_48) l_0_17_54)))
 (let ((?x65805 (* (* 2.0 l_0_17_47) l_0_17_53)))
 (let ((?x65802 (* (* 2.0 l_0_17_46) l_0_17_52)))
 (let ((?x65799 (* (* 2.0 l_0_17_45) l_0_17_51)))
 (let ((?x65796 (* (* 2.0 l_0_17_44) l_0_17_50)))
 (let ((?x65608 (* 2.0 l_0_17_43)))
 (let ((?x65675 (* ?x65608 l_0_17_54)))
 (let ((?x65604 (* 2.0 l_0_17_42)))
 (let ((?x65673 (* ?x65604 l_0_17_53)))
 (let ((?x65600 (* 2.0 l_0_17_41)))
 (let ((?x65671 (* ?x65600 l_0_17_52)))
 (let ((?x65596 (* 2.0 l_0_17_40)))
 (let ((?x65669 (* ?x65596 l_0_17_51)))
 (let ((?x65592 (* 2.0 l_0_17_39)))
 (let ((?x65667 (* ?x65592 l_0_17_50)))
 (let ((?x65788 (* (* 2.0 l_0_17_21) l_0_17_27)))
 (let ((?x65785 (* (* 2.0 l_0_17_20) l_0_17_26)))
 (let ((?x65782 (* (* 2.0 l_0_17_19) l_0_17_25)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65767 (* ?x65256 l_0_17_24)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65762 (* ?x64971 l_0_17_23)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65760 (* ?x64968 l_0_17_22)))
 (let ((?x65588 (* 2.0 l_0_17_15)))
 (let ((?x65645 (* ?x65588 l_0_17_26)))
 (let ((?x65584 (* 2.0 l_0_17_14)))
 (let ((?x65643 (* ?x65584 l_0_17_25)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65641 (* ?x65216 l_0_17_24)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x46775 (* ?x64715 l_0_17_23)))
 (let ((?x25812 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_22) ?x46775) ?x65641) ?x65643) ?x65645)))
 (let ((?x65750 (+ (+ ?x25812 (* (* 2.0 l_0_17_151) l_0_17_156)) (* (* 2.0 l_0_17_152) l_0_17_157))))
 (let ((?x65756 (+ (+ ?x65750 (* (* 2.0 l_0_17_153) l_0_17_158)) (* (* 2.0 l_0_17_154) l_0_17_159))))
 (let ((?x65766 (- (- (- (+ ?x65756 (* (* 2.0 l_0_17_155) l_0_17_160)) ?x65760) ?x65762) (* (* 2.0 l_0_17_179) l_0_17_184))))
 (let ((?x65774 (- (- (- ?x65766 ?x65767) (* (* 2.0 l_0_17_180) l_0_17_185)) (* (* 2.0 l_0_17_181) l_0_17_186))))
 (let ((?x65780 (- (- ?x65774 (* (* 2.0 l_0_17_182) l_0_17_187)) (* (* 2.0 l_0_17_183) l_0_17_188))))
 (let ((?x65793 (- (- (- (- (- (- (- ?x65780 ?x65782) ?x65785) ?x65788) ?x65667) ?x65669) ?x65671) ?x65673)))
 (let ((?x65812 (+ (+ (+ (+ (+ (+ (- ?x65793 ?x65675) ?x65796) ?x65799) ?x65802) ?x65805) ?x65808) ?x65811)))
 (= ?x65812 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x65897 (* l_0_17_56 l_0_17_56)))
 (let ((?x65895 (* l_0_17_55 l_0_17_55)))
 (let ((?x65893 (* l_0_17_54 l_0_17_54)))
 (let ((?x65891 (* l_0_17_53 l_0_17_53)))
 (let ((?x65889 (* l_0_17_52 l_0_17_52)))
 (let ((?x65887 (* l_0_17_51 l_0_17_51)))
 (let ((?x65885 (* l_0_17_50 l_0_17_50)))
 (let ((?x65883 (* l_0_17_28 l_0_17_28)))
 (let ((?x65881 (* l_0_17_27 l_0_17_27)))
 (let ((?x65879 (* l_0_17_26 l_0_17_26)))
 (let ((?x65877 (* l_0_17_25 l_0_17_25)))
 (let ((?x65875 (* l_0_17_24 l_0_17_24)))
 (let ((?x65873 (* l_0_17_23 l_0_17_23)))
 (let ((?x65871 (* l_0_17_22 l_0_17_22)))
 (let ((?x65854 (+ (* (* 2.0 l_0_17_151) l_0_17_162) (* (* 2.0 l_0_17_152) l_0_17_163))))
 (let ((?x65858 (+ (+ ?x65854 (* (* 2.0 l_0_17_153) l_0_17_164)) (* (* 2.0 l_0_17_154) l_0_17_165))))
 (let ((?x65862 (- (+ ?x65858 (* (* 2.0 l_0_17_155) l_0_17_166)) (* (* 2.0 l_0_17_179) l_0_17_190))))
 (let ((?x65866 (- (- ?x65862 (* (* 2.0 l_0_17_180) l_0_17_191)) (* (* 2.0 l_0_17_181) l_0_17_192))))
 (let ((?x65870 (- (- ?x65866 (* (* 2.0 l_0_17_182) l_0_17_193)) (* (* 2.0 l_0_17_183) l_0_17_194))))
 (let ((?x65884 (- (- (- (- (- (- (- ?x65870 ?x65871) ?x65873) ?x65875) ?x65877) ?x65879) ?x65881) ?x65883)))
 (let ((?x65898 (+ (+ (+ (+ (+ (+ (+ ?x65884 ?x65885) ?x65887) ?x65889) ?x65891) ?x65893) ?x65895) ?x65897)))
 (= ?x65898 0.0)))))))))))))))))))))))
(assert
 (let ((?x64683 (* l_0_17_29 l_0_17_29)))
 (let ((?x24324 (* l_0_17_1 l_0_17_1)))
 (let ((?x26150 (- ?x24324 ?x64683)))
 (let ((?x65935 (- (+ ?x26150 (* (* 2.0 l_0_17_57) l_0_17_63)) (* (* 2.0 l_0_17_85) l_0_17_91))))
 (= ?x65935 0.0))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64696 (* ?x64695 l_0_17_30)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x47162 (* ?x64760 l_0_17_2)))
 (let ((?x65946 (- (+ ?x47162 (* (* 2.0 l_0_17_141) l_0_17_147)) (* (* 2.0 l_0_17_169) l_0_17_175))))
 (let ((?x65951 (+ (+ (- ?x65946 ?x64696) (* (* 2.0 l_0_17_58) l_0_17_63)) (* (* 2.0 l_0_17_59) l_0_17_64))))
 (let ((?x65955 (- (- ?x65951 (* (* 2.0 l_0_17_86) l_0_17_91)) (* (* 2.0 l_0_17_87) l_0_17_92))))
 (= ?x65955 0.0)))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65500 (* ?x65394 l_0_17_53)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65498 (* ?x65391 l_0_17_52)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65496 (* ?x65388 l_0_17_51)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65494 (* ?x65385 l_0_17_50)))
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64718 (* ?x64695 l_0_17_32)))
 (let ((?x65314 (* 2.0 l_0_17_24)))
 (let ((?x65490 (* ?x65314 l_0_17_9)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65488 (* ?x65061 l_0_17_8)))
 (let ((?x65309 (* 2.0 l_0_17_22)))
 (let ((?x65486 (* ?x65309 l_0_17_7)))
 (let ((?x65408 (* 2.0 l_0_17_10)))
 (let ((?x65971 (* ?x65408 l_0_17_25)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x65970 (* ?x64760 l_0_17_4)))
 (let ((?x65978 (- (- (- (+ (+ (+ (+ ?x65970 ?x65971) ?x65486) ?x65488) ?x65490) ?x64718) ?x65494) ?x65496)))
 (let ((?x65986 (+ (+ (- (- ?x65978 ?x65498) ?x65500) (* (* 2.0 l_0_17_60) l_0_17_63)) (* (* 2.0 l_0_17_61) l_0_17_64))))
 (let ((?x65992 (- (+ ?x65986 (* (* 2.0 l_0_17_62) l_0_17_65)) (* (* 2.0 l_0_17_88) l_0_17_91))))
 (let ((?x65998 (- (- ?x65992 (* (* 2.0 l_0_17_89) l_0_17_92)) (* (* 2.0 l_0_17_90) l_0_17_93))))
 (= ?x65998 0.0))))))))))))))))))))))))))
(assert
 (let ((?x66028 (* l_0_17_94 l_0_17_94)))
 (let ((?x66026 (* l_0_17_93 l_0_17_93)))
 (let ((?x66024 (* l_0_17_92 l_0_17_92)))
 (let ((?x66022 (* l_0_17_91 l_0_17_91)))
 (let ((?x66020 (* l_0_17_66 l_0_17_66)))
 (let ((?x66018 (* l_0_17_65 l_0_17_65)))
 (let ((?x66016 (* l_0_17_64 l_0_17_64)))
 (let ((?x66014 (* l_0_17_63 l_0_17_63)))
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64746 (* ?x64695 l_0_17_35)))
 (let ((?x66013 (- (* (* 2.0 l_0_17_1) l_0_17_7) ?x64746)))
 (let ((?x66027 (- (- (- (+ (+ (+ (+ ?x66013 ?x66014) ?x66016) ?x66018) ?x66020) ?x66022) ?x66024) ?x66026)))
 (= (- ?x66027 ?x66028) 0.0))))))))))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64752 (* ?x64695 l_0_17_39)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x64762 (* ?x64760 l_0_17_11)))
 (let ((?x66037 (- ?x64762 ?x64752)))
 (let ((?x66043 (+ (+ ?x66037 (* (* 2.0 l_0_17_63) l_0_17_67)) (* (* 2.0 l_0_17_64) l_0_17_68))))
 (let ((?x66049 (+ (+ ?x66043 (* (* 2.0 l_0_17_65) l_0_17_69)) (* (* 2.0 l_0_17_66) l_0_17_70))))
 (let ((?x66055 (- (- ?x66049 (* (* 2.0 l_0_17_91) l_0_17_95)) (* (* 2.0 l_0_17_92) l_0_17_96))))
 (let ((?x66061 (- (- ?x66055 (* (* 2.0 l_0_17_93) l_0_17_97)) (* (* 2.0 l_0_17_94) l_0_17_98))))
 (= ?x66061 0.0)))))))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64770 (* ?x64695 l_0_17_44)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x64763 (* ?x64760 l_0_17_16)))
 (let ((?x66087 (- (- ?x64763 (* (* 2.0 l_0_17_100) l_0_17_91)) (* (* 2.0 l_0_17_101) l_0_17_92))))
 (let ((?x66093 (- (- ?x66087 (* (* 2.0 l_0_17_102) l_0_17_93)) (* (* 2.0 l_0_17_103) l_0_17_94))))
 (let ((?x66098 (+ (+ (- ?x66093 ?x64770) (* (* 2.0 l_0_17_63) l_0_17_72)) (* (* 2.0 l_0_17_64) l_0_17_73))))
 (let ((?x66102 (+ (+ ?x66098 (* (* 2.0 l_0_17_65) l_0_17_74)) (* (* 2.0 l_0_17_66) l_0_17_75))))
 (= ?x66102 0.0))))))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64788 (* ?x64695 l_0_17_50)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x26378 (* ?x64760 l_0_17_22)))
 (let ((?x66123 (- (- ?x26378 (* (* 2.0 l_0_17_106) l_0_17_91)) (* (* 2.0 l_0_17_107) l_0_17_92))))
 (let ((?x66129 (- (- ?x66123 (* (* 2.0 l_0_17_108) l_0_17_93)) (* (* 2.0 l_0_17_109) l_0_17_94))))
 (let ((?x66134 (+ (+ (- ?x66129 ?x64788) (* (* 2.0 l_0_17_63) l_0_17_78)) (* (* 2.0 l_0_17_64) l_0_17_79))))
 (let ((?x66138 (+ (+ ?x66134 (* (* 2.0 l_0_17_65) l_0_17_80)) (* (* 2.0 l_0_17_66) l_0_17_81))))
 (= ?x66138 0.0))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64853 (* ?x64723 l_0_17_33)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64851 (* ?x64720 l_0_17_32)))
 (let ((?x64848 (* 2.0 l_0_17_3)))
 (let ((?x64849 (* ?x64848 l_0_17_5)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x64837 (* ?x64836 l_0_17_4)))
 (let ((?x66155 (+ (* (* 2.0 l_0_17_144) l_0_17_147) (* (* 2.0 l_0_17_145) l_0_17_148))))
 (let ((?x66159 (- (+ ?x66155 (* (* 2.0 l_0_17_146) l_0_17_149)) (* (* 2.0 l_0_17_172) l_0_17_175))))
 (let ((?x66163 (- (- ?x66159 (* (* 2.0 l_0_17_173) l_0_17_176)) (* (* 2.0 l_0_17_174) l_0_17_177))))
 (= (- (- (+ (+ ?x66163 ?x64837) ?x64849) ?x64851) ?x64853) 0.0)))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64902 (* ?x64723 l_0_17_36)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64900 (* ?x64720 l_0_17_35)))
 (let ((?x64848 (* 2.0 l_0_17_3)))
 (let ((?x64898 (* ?x64848 l_0_17_8)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x64888 (* ?x64836 l_0_17_7)))
 (let ((?x66197 (* l_0_17_178 l_0_17_178)))
 (let ((?x66195 (* l_0_17_177 l_0_17_177)))
 (let ((?x66193 (* l_0_17_176 l_0_17_176)))
 (let ((?x66191 (* l_0_17_175 l_0_17_175)))
 (let ((?x66189 (* l_0_17_150 l_0_17_150)))
 (let ((?x66187 (* l_0_17_149 l_0_17_149)))
 (let ((?x66188 (+ (+ (* l_0_17_147 l_0_17_147) (* l_0_17_148 l_0_17_148)) ?x66187)))
 (let ((?x66200 (+ (+ (- (- (- (- (+ ?x66188 ?x66189) ?x66191) ?x66193) ?x66195) ?x66197) ?x64888) ?x64898)))
 (= (- (- ?x66200 ?x64900) ?x64902) 0.0))))))))))))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65500 (* ?x65394 l_0_17_53)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65498 (* ?x65391 l_0_17_52)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65496 (* ?x65388 l_0_17_51)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65494 (* ?x65385 l_0_17_50)))
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64993 (* ?x64723 l_0_17_45)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64990 (* ?x64720 l_0_17_44)))
 (let ((?x65314 (* 2.0 l_0_17_24)))
 (let ((?x65490 (* ?x65314 l_0_17_9)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65488 (* ?x65061 l_0_17_8)))
 (let ((?x65309 (* 2.0 l_0_17_22)))
 (let ((?x65486 (* ?x65309 l_0_17_7)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x64972 (* ?x64971 l_0_17_3)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x64969 (* ?x64968 l_0_17_2)))
 (let ((?x65408 (* 2.0 l_0_17_10)))
 (let ((?x65971 (* ?x65408 l_0_17_25)))
 (let ((?x66212 (+ (+ ?x65971 (* (* 2.0 l_0_17_147) l_0_17_156)) (* (* 2.0 l_0_17_148) l_0_17_157))))
 (let ((?x66216 (+ (+ ?x66212 (* (* 2.0 l_0_17_149) l_0_17_158)) (* (* 2.0 l_0_17_150) l_0_17_159))))
 (let ((?x66222 (- (- (+ (+ ?x66216 ?x64969) ?x64972) (* (* 2.0 l_0_17_175) l_0_17_184)) (* (* 2.0 l_0_17_176) l_0_17_185))))
 (let ((?x66226 (- (- ?x66222 (* (* 2.0 l_0_17_177) l_0_17_186)) (* (* 2.0 l_0_17_178) l_0_17_187))))
 (let ((?x66233 (- (- (- (- (+ (+ (+ ?x66226 ?x65486) ?x65488) ?x65490) ?x64990) ?x64993) ?x65494) ?x65496)))
 (= (- (- ?x66233 ?x65498) ?x65500) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x65066 (* ?x64723 l_0_17_51)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x65064 (* ?x64720 l_0_17_50)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65062 (* ?x65061 l_0_17_3)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x65049 (* ?x64836 l_0_17_22)))
 (let ((?x66250 (+ (* (* 2.0 l_0_17_147) l_0_17_162) (* (* 2.0 l_0_17_148) l_0_17_163))))
 (let ((?x66254 (+ (+ ?x66250 (* (* 2.0 l_0_17_149) l_0_17_164)) (* (* 2.0 l_0_17_150) l_0_17_165))))
 (let ((?x66258 (- (- ?x66254 (* (* 2.0 l_0_17_175) l_0_17_190)) (* (* 2.0 l_0_17_176) l_0_17_191))))
 (let ((?x66262 (- (- ?x66258 (* (* 2.0 l_0_17_177) l_0_17_192)) (* (* 2.0 l_0_17_178) l_0_17_193))))
 (= (- (- (+ (+ ?x66262 ?x65049) ?x65062) ?x65064) ?x65066) 0.0))))))))))))))
(assert
 (let ((?x65155 (* l_0_17_6 l_0_17_6)))
 (let ((?x65153 (* l_0_17_5 l_0_17_5)))
 (let ((?x65151 (* l_0_17_4 l_0_17_4)))
 (let ((?x65149 (* l_0_17_34 l_0_17_34)))
 (let ((?x66301 (- (- (* (- l_0_17_32) l_0_17_32) (* l_0_17_33 l_0_17_33)) ?x65149)))
 (= (+ (+ (+ ?x66301 ?x65151) ?x65153) ?x65155) 0.0)))))))
(assert
 (let ((?x65184 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x65181 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x65178 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65175 (* ?x65174 l_0_17_37)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65172 (* ?x65171 l_0_17_36)))
 (let ((?x66312 (+ (+ (- (- (* (* (- 2.0) l_0_17_32) l_0_17_35) ?x65172) ?x65175) ?x65178) ?x65181)))
 (= (+ ?x66312 ?x65184) 0.0))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65223 (* ?x65174 l_0_17_41)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65221 (* ?x65171 l_0_17_40)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65219 (* ?x65169 l_0_17_39)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65217 (* ?x65216 l_0_17_6)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65214 (* ?x64715 l_0_17_5)))
 (let ((?x65245 (+ (+ (* (* 2.0 l_0_17_11) l_0_17_4) ?x65214) ?x65217)))
 (= (- (- (- ?x65245 ?x65219) ?x65221) ?x65223) 0.0)))))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65266 (* ?x65174 l_0_17_46)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65263 (* ?x65171 l_0_17_45)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65260 (* ?x65169 l_0_17_44)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65257 (* ?x65256 l_0_17_6)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65254 (* ?x64971 l_0_17_5)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65246 (* ?x64968 l_0_17_4)))
 (= (- (- (- (+ (+ ?x65246 ?x65254) ?x65257) ?x65260) ?x65263) ?x65266) 0.0))))))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65321 (* ?x65174 l_0_17_52)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65319 (* ?x65171 l_0_17_51)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65317 (* ?x65169 l_0_17_50)))
 (let ((?x65314 (* 2.0 l_0_17_24)))
 (let ((?x65315 (* ?x65314 l_0_17_6)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65312 (* ?x65061 l_0_17_5)))
 (let ((?x65309 (* 2.0 l_0_17_22)))
 (let ((?x65310 (* ?x65309 l_0_17_4)))
 (let ((?x47492 (- (- (- (+ (+ ?x65310 ?x65312) ?x65315) ?x65317) ?x65319) ?x65321)))
 (= ?x47492 0.0)))))))))))))))
(assert
 (let ((?x65366 (* l_0_17_9 l_0_17_9)))
 (let ((?x65364 (* l_0_17_8 l_0_17_8)))
 (let ((?x65362 (* l_0_17_7 l_0_17_7)))
 (let ((?x65360 (* l_0_17_38 l_0_17_38)))
 (let ((?x65358 (* l_0_17_37 l_0_17_37)))
 (let ((?x65356 (* l_0_17_36 l_0_17_36)))
 (let ((?x47635 (- (- (- (* l_0_17_10 l_0_17_10) (* l_0_17_35 l_0_17_35)) ?x65356) ?x65358)))
 (= (+ (+ (+ (- ?x47635 ?x65360) ?x65362) ?x65364) ?x65366) 0.0)))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65395 (* ?x65394 l_0_17_42)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65392 (* ?x65391 l_0_17_41)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65389 (* ?x65388 l_0_17_40)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65386 (* ?x65385 l_0_17_39)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65383 (* ?x65216 l_0_17_9)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65381 (* ?x64715 l_0_17_8)))
 (let ((?x64712 (* 2.0 l_0_17_11)))
 (let ((?x65379 (* ?x64712 l_0_17_7)))
 (let ((?x65408 (* 2.0 l_0_17_10)))
 (let ((?x65409 (* ?x65408 l_0_17_14)))
 (let ((?x66325 (- (- (- (- (+ (+ (+ ?x65409 ?x65379) ?x65381) ?x65383) ?x65386) ?x65389) ?x65392) ?x65395)))
 (= ?x66325 0.0)))))))))))))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65431 (* ?x65394 l_0_17_47)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65428 (* ?x65391 l_0_17_46)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65425 (* ?x65388 l_0_17_45)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65422 (* ?x65385 l_0_17_44)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65419 (* ?x65256 l_0_17_9)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65417 (* ?x64971 l_0_17_8)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65415 (* ?x64968 l_0_17_7)))
 (let ((?x65408 (* 2.0 l_0_17_10)))
 (let ((?x65410 (* ?x65408 l_0_17_19)))
 (let ((?x66333 (- (- (- (- (+ (+ (+ ?x65410 ?x65415) ?x65417) ?x65419) ?x65422) ?x65425) ?x65428) ?x65431)))
 (= ?x66333 0.0)))))))))))))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65500 (* ?x65394 l_0_17_53)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65498 (* ?x65391 l_0_17_52)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65496 (* ?x65388 l_0_17_51)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65494 (* ?x65385 l_0_17_50)))
 (let ((?x65314 (* 2.0 l_0_17_24)))
 (let ((?x65490 (* ?x65314 l_0_17_9)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65488 (* ?x65061 l_0_17_8)))
 (let ((?x65309 (* 2.0 l_0_17_22)))
 (let ((?x65486 (* ?x65309 l_0_17_7)))
 (let ((?x65408 (* 2.0 l_0_17_10)))
 (let ((?x65971 (* ?x65408 l_0_17_25)))
 (let ((?x66337 (- (- (- (- (+ (+ (+ ?x65971 ?x65486) ?x65488) ?x65490) ?x65494) ?x65496) ?x65498) ?x65500)))
 (= ?x66337 0.0)))))))))))))))))))
(assert
 (let ((?x65558 (* l_0_17_43 l_0_17_43)))
 (let ((?x65556 (* l_0_17_42 l_0_17_42)))
 (let ((?x65554 (* l_0_17_41 l_0_17_41)))
 (let ((?x65552 (* l_0_17_40 l_0_17_40)))
 (let ((?x65550 (* l_0_17_39 l_0_17_39)))
 (let ((?x65548 (* l_0_17_15 l_0_17_15)))
 (let ((?x65546 (* l_0_17_14 l_0_17_14)))
 (let ((?x65533 (* l_0_17_13 l_0_17_13)))
 (let ((?x66349 (+ (+ (+ (* l_0_17_11 l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x65533) ?x65546)))
 (= (- (- (- (- (- (+ ?x66349 ?x65548) ?x65550) ?x65552) ?x65554) ?x65556) ?x65558) 0.0)))))))))))
(assert
 (let ((?x65608 (* 2.0 l_0_17_43)))
 (let ((?x65609 (* ?x65608 l_0_17_48)))
 (let ((?x65604 (* 2.0 l_0_17_42)))
 (let ((?x65605 (* ?x65604 l_0_17_47)))
 (let ((?x65600 (* 2.0 l_0_17_41)))
 (let ((?x65601 (* ?x65600 l_0_17_46)))
 (let ((?x65596 (* 2.0 l_0_17_40)))
 (let ((?x65597 (* ?x65596 l_0_17_45)))
 (let ((?x65592 (* 2.0 l_0_17_39)))
 (let ((?x65593 (* ?x65592 l_0_17_44)))
 (let ((?x65588 (* 2.0 l_0_17_15)))
 (let ((?x65589 (* ?x65588 l_0_17_20)))
 (let ((?x65584 (* 2.0 l_0_17_14)))
 (let ((?x65585 (* ?x65584 l_0_17_19)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65581 (* ?x65216 l_0_17_18)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65578 (* ?x64715 l_0_17_17)))
 (let ((?x65693 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_16) ?x65578) ?x65581) ?x65585) ?x65589)))
 (= (- (- (- (- (- ?x65693 ?x65593) ?x65597) ?x65601) ?x65605) ?x65609) 0.0)))))))))))))))))))))
(assert
 (let ((?x65608 (* 2.0 l_0_17_43)))
 (let ((?x65675 (* ?x65608 l_0_17_54)))
 (let ((?x65604 (* 2.0 l_0_17_42)))
 (let ((?x65673 (* ?x65604 l_0_17_53)))
 (let ((?x65600 (* 2.0 l_0_17_41)))
 (let ((?x65671 (* ?x65600 l_0_17_52)))
 (let ((?x65596 (* 2.0 l_0_17_40)))
 (let ((?x65669 (* ?x65596 l_0_17_51)))
 (let ((?x65592 (* 2.0 l_0_17_39)))
 (let ((?x65667 (* ?x65592 l_0_17_50)))
 (let ((?x65588 (* 2.0 l_0_17_15)))
 (let ((?x65645 (* ?x65588 l_0_17_26)))
 (let ((?x65584 (* 2.0 l_0_17_14)))
 (let ((?x65643 (* ?x65584 l_0_17_25)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65641 (* ?x65216 l_0_17_24)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x46775 (* ?x64715 l_0_17_23)))
 (let ((?x25812 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_22) ?x46775) ?x65641) ?x65643) ?x65645)))
 (let ((?x66388 (- (- (- (- (- ?x25812 ?x65667) ?x65669) ?x65671) ?x65673) ?x65675)))
 (= ?x66388 0.0))))))))))))))))))))))
(assert
 (let ((?x65732 (* l_0_17_49 l_0_17_49)))
 (let ((?x65730 (* l_0_17_48 l_0_17_48)))
 (let ((?x65728 (* l_0_17_47 l_0_17_47)))
 (let ((?x65726 (* l_0_17_46 l_0_17_46)))
 (let ((?x65724 (* l_0_17_45 l_0_17_45)))
 (let ((?x65722 (* l_0_17_44 l_0_17_44)))
 (let ((?x65715 (* l_0_17_21 l_0_17_21)))
 (let ((?x65713 (* l_0_17_20 l_0_17_20)))
 (let ((?x65711 (* l_0_17_19 l_0_17_19)))
 (let ((?x65709 (* l_0_17_18 l_0_17_18)))
 (let ((?x66404 (+ (+ (+ (* l_0_17_16 l_0_17_16) (* l_0_17_17 l_0_17_17)) ?x65709) ?x65711)))
 (let ((?x66411 (- (- (- (- (- (+ (+ ?x66404 ?x65713) ?x65715) ?x65722) ?x65724) ?x65726) ?x65728) ?x65730)))
 (= (- ?x66411 ?x65732) 0.0))))))))))))))
(assert
 (let ((?x65811 (* (* 2.0 l_0_17_49) l_0_17_55)))
 (let ((?x65808 (* (* 2.0 l_0_17_48) l_0_17_54)))
 (let ((?x65805 (* (* 2.0 l_0_17_47) l_0_17_53)))
 (let ((?x65802 (* (* 2.0 l_0_17_46) l_0_17_52)))
 (let ((?x65799 (* (* 2.0 l_0_17_45) l_0_17_51)))
 (let ((?x65796 (* (* 2.0 l_0_17_44) l_0_17_50)))
 (let ((?x65788 (* (* 2.0 l_0_17_21) l_0_17_27)))
 (let ((?x65785 (* (* 2.0 l_0_17_20) l_0_17_26)))
 (let ((?x65782 (* (* 2.0 l_0_17_19) l_0_17_25)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65767 (* ?x65256 l_0_17_24)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65762 (* ?x64971 l_0_17_23)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65760 (* ?x64968 l_0_17_22)))
 (let ((?x66419 (- (- (+ (+ (+ (+ (+ ?x65760 ?x65762) ?x65767) ?x65782) ?x65785) ?x65788) ?x65796) ?x65799)))
 (= (- (- (- (- ?x66419 ?x65802) ?x65805) ?x65808) ?x65811) 0.0))))))))))))))))))
(assert
 (let ((?x65897 (* l_0_17_56 l_0_17_56)))
 (let ((?x65895 (* l_0_17_55 l_0_17_55)))
 (let ((?x65893 (* l_0_17_54 l_0_17_54)))
 (let ((?x65891 (* l_0_17_53 l_0_17_53)))
 (let ((?x65889 (* l_0_17_52 l_0_17_52)))
 (let ((?x65887 (* l_0_17_51 l_0_17_51)))
 (let ((?x65885 (* l_0_17_50 l_0_17_50)))
 (let ((?x65883 (* l_0_17_28 l_0_17_28)))
 (let ((?x65881 (* l_0_17_27 l_0_17_27)))
 (let ((?x65879 (* l_0_17_26 l_0_17_26)))
 (let ((?x65877 (* l_0_17_25 l_0_17_25)))
 (let ((?x65875 (* l_0_17_24 l_0_17_24)))
 (let ((?x47905 (+ (+ (+ (* l_0_17_22 l_0_17_22) (* l_0_17_23 l_0_17_23)) ?x65875) ?x65877)))
 (let ((?x47881 (- (- (- (- (+ (+ (+ ?x47905 ?x65879) ?x65881) ?x65883) ?x65885) ?x65887) ?x65889) ?x65891)))
 (= (- (- (- ?x47881 ?x65893) ?x65895) ?x65897) 0.0))))))))))))))))
(assert
 (let ((?x64683 (* l_0_17_29 l_0_17_29)))
 (let ((?x24324 (* l_0_17_1 l_0_17_1)))
 (let ((?x26150 (- ?x24324 ?x64683)))
 (= ?x26150 0.0)))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64696 (* ?x64695 l_0_17_30)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x47162 (* ?x64760 l_0_17_2)))
 (= (- ?x47162 ?x64696) 0.0))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64718 (* ?x64695 l_0_17_32)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x65970 (* ?x64760 l_0_17_4)))
 (= (- ?x65970 ?x64718) 0.0))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64746 (* ?x64695 l_0_17_35)))
 (let ((?x66013 (- (* (* 2.0 l_0_17_1) l_0_17_7) ?x64746)))
 (= ?x66013 0.0)))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64752 (* ?x64695 l_0_17_39)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x64762 (* ?x64760 l_0_17_11)))
 (let ((?x66037 (- ?x64762 ?x64752)))
 (= ?x66037 0.0)))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64770 (* ?x64695 l_0_17_44)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x64763 (* ?x64760 l_0_17_16)))
 (= (- ?x64763 ?x64770) 0.0))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64788 (* ?x64695 l_0_17_50)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x26378 (* ?x64760 l_0_17_22)))
 (let ((?x47823 (- (+ (- ?x26378 ?x64788) (* (* 2.0 l_0_17_57) l_0_17_60)) (* (* 2.0 l_0_17_85) l_0_17_88))))
 (= ?x47823 0.0)))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64853 (* ?x64723 l_0_17_33)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64851 (* ?x64720 l_0_17_32)))
 (let ((?x64848 (* 2.0 l_0_17_3)))
 (let ((?x64849 (* ?x64848 l_0_17_5)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x64837 (* ?x64836 l_0_17_4)))
 (= (- (- (+ ?x64837 ?x64849) ?x64851) ?x64853) 0.0))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64902 (* ?x64723 l_0_17_36)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64900 (* ?x64720 l_0_17_35)))
 (let ((?x64848 (* 2.0 l_0_17_3)))
 (let ((?x64898 (* ?x64848 l_0_17_8)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x64888 (* ?x64836 l_0_17_7)))
 (= (- (- (+ ?x64888 ?x64898) ?x64900) ?x64902) 0.0))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64993 (* ?x64723 l_0_17_45)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64990 (* ?x64720 l_0_17_44)))
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64718 (* ?x64695 l_0_17_32)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x64972 (* ?x64971 l_0_17_3)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x64969 (* ?x64968 l_0_17_2)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x65970 (* ?x64760 l_0_17_4)))
 (= (- (- (- (+ (+ ?x65970 ?x64969) ?x64972) ?x64718) ?x64990) ?x64993) 0.0))))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x65066 (* ?x64723 l_0_17_51)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x65064 (* ?x64720 l_0_17_50)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65062 (* ?x65061 l_0_17_3)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x65049 (* ?x64836 l_0_17_22)))
 (let ((?x66461 (- (* (* 2.0 l_0_17_141) l_0_17_144) (* (* 2.0 l_0_17_169) l_0_17_172))))
 (let ((?x66467 (+ (- (- (+ (+ ?x66461 ?x65049) ?x65062) ?x65064) ?x65066) (* (* 2.0 l_0_17_58) l_0_17_60))))
 (let ((?x66471 (- (+ ?x66467 (* (* 2.0 l_0_17_59) l_0_17_61)) (* (* 2.0 l_0_17_86) l_0_17_88))))
 (= (- ?x66471 (* (* 2.0 l_0_17_87) l_0_17_89)) 0.0)))))))))))))
(assert
 (let ((?x65155 (* l_0_17_6 l_0_17_6)))
 (let ((?x65153 (* l_0_17_5 l_0_17_5)))
 (let ((?x65151 (* l_0_17_4 l_0_17_4)))
 (let ((?x65149 (* l_0_17_34 l_0_17_34)))
 (let ((?x66301 (- (- (* (- l_0_17_32) l_0_17_32) (* l_0_17_33 l_0_17_33)) ?x65149)))
 (= (+ (+ (+ ?x66301 ?x65151) ?x65153) ?x65155) 0.0)))))))
(assert
 (let ((?x65184 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x65181 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x65178 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65175 (* ?x65174 l_0_17_37)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65172 (* ?x65171 l_0_17_36)))
 (let ((?x66312 (+ (+ (- (- (* (* (- 2.0) l_0_17_32) l_0_17_35) ?x65172) ?x65175) ?x65178) ?x65181)))
 (= (+ ?x66312 ?x65184) 0.0))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65223 (* ?x65174 l_0_17_41)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65221 (* ?x65171 l_0_17_40)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65219 (* ?x65169 l_0_17_39)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65217 (* ?x65216 l_0_17_6)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65214 (* ?x64715 l_0_17_5)))
 (let ((?x65245 (+ (+ (* (* 2.0 l_0_17_11) l_0_17_4) ?x65214) ?x65217)))
 (= (- (- (- ?x65245 ?x65219) ?x65221) ?x65223) 0.0)))))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65266 (* ?x65174 l_0_17_46)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65263 (* ?x65171 l_0_17_45)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65260 (* ?x65169 l_0_17_44)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65257 (* ?x65256 l_0_17_6)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65254 (* ?x64971 l_0_17_5)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65246 (* ?x64968 l_0_17_4)))
 (= (- (- (- (+ (+ ?x65246 ?x65254) ?x65257) ?x65260) ?x65263) ?x65266) 0.0))))))))))))))
(assert
 (let ((?x66516 (* l_0_17_90 l_0_17_90)))
 (let ((?x66514 (* l_0_17_89 l_0_17_89)))
 (let ((?x66512 (* l_0_17_88 l_0_17_88)))
 (let ((?x66510 (* l_0_17_62 l_0_17_62)))
 (let ((?x66508 (* l_0_17_61 l_0_17_61)))
 (let ((?x66506 (* l_0_17_60 l_0_17_60)))
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65321 (* ?x65174 l_0_17_52)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65319 (* ?x65171 l_0_17_51)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65317 (* ?x65169 l_0_17_50)))
 (let ((?x65314 (* 2.0 l_0_17_24)))
 (let ((?x65315 (* ?x65314 l_0_17_6)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65312 (* ?x65061 l_0_17_5)))
 (let ((?x65309 (* 2.0 l_0_17_22)))
 (let ((?x65310 (* ?x65309 l_0_17_4)))
 (let ((?x47492 (- (- (- (+ (+ ?x65310 ?x65312) ?x65315) ?x65317) ?x65319) ?x65321)))
 (= (- (- (- (+ (+ (+ ?x47492 ?x66506) ?x66508) ?x66510) ?x66512) ?x66514) ?x66516) 0.0)))))))))))))))))))))
(assert
 (let ((?x65366 (* l_0_17_9 l_0_17_9)))
 (let ((?x65364 (* l_0_17_8 l_0_17_8)))
 (let ((?x65362 (* l_0_17_7 l_0_17_7)))
 (let ((?x65360 (* l_0_17_38 l_0_17_38)))
 (let ((?x65358 (* l_0_17_37 l_0_17_37)))
 (let ((?x65356 (* l_0_17_36 l_0_17_36)))
 (let ((?x47635 (- (- (- (* l_0_17_10 l_0_17_10) (* l_0_17_35 l_0_17_35)) ?x65356) ?x65358)))
 (= (+ (+ (+ (- ?x47635 ?x65360) ?x65362) ?x65364) ?x65366) 0.0)))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65395 (* ?x65394 l_0_17_42)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65392 (* ?x65391 l_0_17_41)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65389 (* ?x65388 l_0_17_40)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65386 (* ?x65385 l_0_17_39)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65383 (* ?x65216 l_0_17_9)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65381 (* ?x64715 l_0_17_8)))
 (let ((?x64712 (* 2.0 l_0_17_11)))
 (let ((?x65379 (* ?x64712 l_0_17_7)))
 (let ((?x65408 (* 2.0 l_0_17_10)))
 (let ((?x65409 (* ?x65408 l_0_17_14)))
 (let ((?x66325 (- (- (- (- (+ (+ (+ ?x65409 ?x65379) ?x65381) ?x65383) ?x65386) ?x65389) ?x65392) ?x65395)))
 (= ?x66325 0.0)))))))))))))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65431 (* ?x65394 l_0_17_47)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65428 (* ?x65391 l_0_17_46)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65425 (* ?x65388 l_0_17_45)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65422 (* ?x65385 l_0_17_44)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65419 (* ?x65256 l_0_17_9)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65417 (* ?x64971 l_0_17_8)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65415 (* ?x64968 l_0_17_7)))
 (let ((?x65408 (* 2.0 l_0_17_10)))
 (let ((?x65410 (* ?x65408 l_0_17_19)))
 (let ((?x66333 (- (- (- (- (+ (+ (+ ?x65410 ?x65415) ?x65417) ?x65419) ?x65422) ?x65425) ?x65428) ?x65431)))
 (= ?x66333 0.0)))))))))))))))))))
(assert
 (let ((?x65558 (* l_0_17_43 l_0_17_43)))
 (let ((?x65556 (* l_0_17_42 l_0_17_42)))
 (let ((?x65554 (* l_0_17_41 l_0_17_41)))
 (let ((?x65552 (* l_0_17_40 l_0_17_40)))
 (let ((?x65550 (* l_0_17_39 l_0_17_39)))
 (let ((?x65548 (* l_0_17_15 l_0_17_15)))
 (let ((?x65546 (* l_0_17_14 l_0_17_14)))
 (let ((?x65533 (* l_0_17_13 l_0_17_13)))
 (let ((?x66349 (+ (+ (+ (* l_0_17_11 l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x65533) ?x65546)))
 (= (- (- (- (- (- (+ ?x66349 ?x65548) ?x65550) ?x65552) ?x65554) ?x65556) ?x65558) 0.0)))))))))))
(assert
 (let ((?x65608 (* 2.0 l_0_17_43)))
 (let ((?x65609 (* ?x65608 l_0_17_48)))
 (let ((?x65604 (* 2.0 l_0_17_42)))
 (let ((?x65605 (* ?x65604 l_0_17_47)))
 (let ((?x65600 (* 2.0 l_0_17_41)))
 (let ((?x65601 (* ?x65600 l_0_17_46)))
 (let ((?x65596 (* 2.0 l_0_17_40)))
 (let ((?x65597 (* ?x65596 l_0_17_45)))
 (let ((?x65592 (* 2.0 l_0_17_39)))
 (let ((?x65593 (* ?x65592 l_0_17_44)))
 (let ((?x65588 (* 2.0 l_0_17_15)))
 (let ((?x65589 (* ?x65588 l_0_17_20)))
 (let ((?x65584 (* 2.0 l_0_17_14)))
 (let ((?x65585 (* ?x65584 l_0_17_19)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65581 (* ?x65216 l_0_17_18)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x65578 (* ?x64715 l_0_17_17)))
 (let ((?x65693 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_16) ?x65578) ?x65581) ?x65585) ?x65589)))
 (= (- (- (- (- (- ?x65693 ?x65593) ?x65597) ?x65601) ?x65605) ?x65609) 0.0)))))))))))))))))))))
(assert
 (let ((?x65608 (* 2.0 l_0_17_43)))
 (let ((?x65675 (* ?x65608 l_0_17_54)))
 (let ((?x65604 (* 2.0 l_0_17_42)))
 (let ((?x65673 (* ?x65604 l_0_17_53)))
 (let ((?x65600 (* 2.0 l_0_17_41)))
 (let ((?x65671 (* ?x65600 l_0_17_52)))
 (let ((?x65596 (* 2.0 l_0_17_40)))
 (let ((?x65669 (* ?x65596 l_0_17_51)))
 (let ((?x65592 (* 2.0 l_0_17_39)))
 (let ((?x65667 (* ?x65592 l_0_17_50)))
 (let ((?x65588 (* 2.0 l_0_17_15)))
 (let ((?x65645 (* ?x65588 l_0_17_26)))
 (let ((?x65584 (* 2.0 l_0_17_14)))
 (let ((?x65643 (* ?x65584 l_0_17_25)))
 (let ((?x65216 (* 2.0 l_0_17_13)))
 (let ((?x65641 (* ?x65216 l_0_17_24)))
 (let ((?x64715 (* 2.0 l_0_17_12)))
 (let ((?x46775 (* ?x64715 l_0_17_23)))
 (let ((?x25812 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_22) ?x46775) ?x65641) ?x65643) ?x65645)))
 (let ((?x66388 (- (- (- (- (- ?x25812 ?x65667) ?x65669) ?x65671) ?x65673) ?x65675)))
 (let ((?x66533 (+ (+ ?x66388 (* (* 2.0 l_0_17_60) l_0_17_67)) (* (* 2.0 l_0_17_61) l_0_17_68))))
 (let ((?x66537 (- (+ ?x66533 (* (* 2.0 l_0_17_62) l_0_17_69)) (* (* 2.0 l_0_17_88) l_0_17_95))))
 (let ((?x66541 (- (- ?x66537 (* (* 2.0 l_0_17_89) l_0_17_96)) (* (* 2.0 l_0_17_90) l_0_17_97))))
 (= ?x66541 0.0)))))))))))))))))))))))))
(assert
 (let ((?x65732 (* l_0_17_49 l_0_17_49)))
 (let ((?x65730 (* l_0_17_48 l_0_17_48)))
 (let ((?x65728 (* l_0_17_47 l_0_17_47)))
 (let ((?x65726 (* l_0_17_46 l_0_17_46)))
 (let ((?x65724 (* l_0_17_45 l_0_17_45)))
 (let ((?x65722 (* l_0_17_44 l_0_17_44)))
 (let ((?x65715 (* l_0_17_21 l_0_17_21)))
 (let ((?x65713 (* l_0_17_20 l_0_17_20)))
 (let ((?x65711 (* l_0_17_19 l_0_17_19)))
 (let ((?x65709 (* l_0_17_18 l_0_17_18)))
 (let ((?x66404 (+ (+ (+ (* l_0_17_16 l_0_17_16) (* l_0_17_17 l_0_17_17)) ?x65709) ?x65711)))
 (let ((?x66411 (- (- (- (- (- (+ (+ ?x66404 ?x65713) ?x65715) ?x65722) ?x65724) ?x65726) ?x65728) ?x65730)))
 (= (- ?x66411 ?x65732) 0.0))))))))))))))
(assert
 (let ((?x65811 (* (* 2.0 l_0_17_49) l_0_17_55)))
 (let ((?x65808 (* (* 2.0 l_0_17_48) l_0_17_54)))
 (let ((?x65805 (* (* 2.0 l_0_17_47) l_0_17_53)))
 (let ((?x65802 (* (* 2.0 l_0_17_46) l_0_17_52)))
 (let ((?x65799 (* (* 2.0 l_0_17_45) l_0_17_51)))
 (let ((?x65796 (* (* 2.0 l_0_17_44) l_0_17_50)))
 (let ((?x65788 (* (* 2.0 l_0_17_21) l_0_17_27)))
 (let ((?x65785 (* (* 2.0 l_0_17_20) l_0_17_26)))
 (let ((?x65782 (* (* 2.0 l_0_17_19) l_0_17_25)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65767 (* ?x65256 l_0_17_24)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65762 (* ?x64971 l_0_17_23)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65760 (* ?x64968 l_0_17_22)))
 (let ((?x66572 (- (* (* (- 2.0) l_0_17_100) l_0_17_88) (* (* 2.0 l_0_17_101) l_0_17_89))))
 (let ((?x66577 (+ (+ (+ (- ?x66572 (* (* 2.0 l_0_17_102) l_0_17_90)) ?x65760) ?x65762) ?x65767)))
 (let ((?x66584 (- (- (- (- (+ (+ (+ ?x66577 ?x65782) ?x65785) ?x65788) ?x65796) ?x65799) ?x65802) ?x65805)))
 (let ((?x66590 (+ (+ (- (- ?x66584 ?x65808) ?x65811) (* (* 2.0 l_0_17_60) l_0_17_72)) (* (* 2.0 l_0_17_61) l_0_17_73))))
 (= (+ ?x66590 (* (* 2.0 l_0_17_62) l_0_17_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x65897 (* l_0_17_56 l_0_17_56)))
 (let ((?x65895 (* l_0_17_55 l_0_17_55)))
 (let ((?x65893 (* l_0_17_54 l_0_17_54)))
 (let ((?x65891 (* l_0_17_53 l_0_17_53)))
 (let ((?x65889 (* l_0_17_52 l_0_17_52)))
 (let ((?x65887 (* l_0_17_51 l_0_17_51)))
 (let ((?x65885 (* l_0_17_50 l_0_17_50)))
 (let ((?x65883 (* l_0_17_28 l_0_17_28)))
 (let ((?x65881 (* l_0_17_27 l_0_17_27)))
 (let ((?x65879 (* l_0_17_26 l_0_17_26)))
 (let ((?x65877 (* l_0_17_25 l_0_17_25)))
 (let ((?x65875 (* l_0_17_24 l_0_17_24)))
 (let ((?x65873 (* l_0_17_23 l_0_17_23)))
 (let ((?x65871 (* l_0_17_22 l_0_17_22)))
 (let ((?x66632 (- (* (* (- 2.0) l_0_17_106) l_0_17_88) (* (* 2.0 l_0_17_107) l_0_17_89))))
 (let ((?x66637 (+ (+ (+ (- ?x66632 (* (* 2.0 l_0_17_108) l_0_17_90)) ?x65871) ?x65873) ?x65875)))
 (let ((?x66644 (- (- (- (+ (+ (+ (+ ?x66637 ?x65877) ?x65879) ?x65881) ?x65883) ?x65885) ?x65887) ?x65889)))
 (let ((?x66650 (+ (- (- (- (- ?x66644 ?x65891) ?x65893) ?x65895) ?x65897) (* (* 2.0 l_0_17_60) l_0_17_78))))
 (let ((?x66654 (+ (+ ?x66650 (* (* 2.0 l_0_17_61) l_0_17_79)) (* (* 2.0 l_0_17_62) l_0_17_80))))
 (= ?x66654 0.0)))))))))))))))))))))
(assert
 (let ((?x64683 (* l_0_17_29 l_0_17_29)))
 (let ((?x24324 (* l_0_17_1 l_0_17_1)))
 (let ((?x26150 (- ?x24324 ?x64683)))
 (= ?x26150 0.0)))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64696 (* ?x64695 l_0_17_30)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x47162 (* ?x64760 l_0_17_2)))
 (let ((?x66696 (- (- ?x47162 (* (* 2.0 l_0_17_113) l_0_17_128)) (* (* 2.0 l_0_17_197) l_0_17_212))))
 (= (- ?x66696 ?x64696) 0.0)))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64746 (* ?x64695 l_0_17_35)))
 (let ((?x66013 (- (* (* 2.0 l_0_17_1) l_0_17_7) ?x64746)))
 (= ?x66013 0.0)))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64770 (* ?x64695 l_0_17_44)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x64763 (* ?x64760 l_0_17_16)))
 (= (- ?x64763 ?x64770) 0.0))))))
(assert
 (let ((?x64695 (* 2.0 l_0_17_29)))
 (let ((?x64788 (* ?x64695 l_0_17_50)))
 (let ((?x64760 (* 2.0 l_0_17_1)))
 (let ((?x26378 (* ?x64760 l_0_17_22)))
 (let ((?x66718 (- (- ?x26378 (* (* 2.0 l_0_17_100) l_0_17_86)) (* (* 2.0 l_0_17_101) l_0_17_87))))
 (let ((?x66722 (- (+ ?x66718 (* (* 2.0 l_0_17_141) l_0_17_156)) (* (* 2.0 l_0_17_169) l_0_17_184))))
 (let ((?x66727 (+ (+ (- ?x66722 ?x64788) (* (* 2.0 l_0_17_58) l_0_17_72)) (* (* 2.0 l_0_17_59) l_0_17_73))))
 (= ?x66727 0.0)))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64853 (* ?x64723 l_0_17_33)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64851 (* ?x64720 l_0_17_32)))
 (let ((?x64848 (* 2.0 l_0_17_3)))
 (let ((?x64849 (* ?x64848 l_0_17_5)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x64837 (* ?x64836 l_0_17_4)))
 (let ((?x66756 (- (* (* (- 2.0) l_0_17_116) l_0_17_128) (* (* 2.0 l_0_17_117) l_0_17_129))))
 (let ((?x66766 (- (+ (- ?x66756 (* (* 2.0 l_0_17_118) l_0_17_130)) ?x64837) (* (* 2.0 l_0_17_200) l_0_17_212))))
 (let ((?x66770 (- (- ?x66766 (* (* 2.0 l_0_17_201) l_0_17_213)) (* (* 2.0 l_0_17_202) l_0_17_214))))
 (= (- (- (+ ?x66770 ?x64849) ?x64851) ?x64853) 0.0)))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64902 (* ?x64723 l_0_17_36)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64900 (* ?x64720 l_0_17_35)))
 (let ((?x64848 (* 2.0 l_0_17_3)))
 (let ((?x64898 (* ?x64848 l_0_17_8)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x64888 (* ?x64836 l_0_17_7)))
 (let ((?x66816 (- (* (* (- 2.0) l_0_17_119) l_0_17_128) (* (* 2.0 l_0_17_120) l_0_17_129))))
 (let ((?x66820 (- (- ?x66816 (* (* 2.0 l_0_17_121) l_0_17_130)) (* (* 2.0 l_0_17_122) l_0_17_131))))
 (let ((?x66825 (- (- (+ ?x66820 ?x64888) (* (* 2.0 l_0_17_203) l_0_17_212)) (* (* 2.0 l_0_17_204) l_0_17_213))))
 (let ((?x66829 (- (- ?x66825 (* (* 2.0 l_0_17_205) l_0_17_214)) (* (* 2.0 l_0_17_206) l_0_17_215))))
 (= (- (- (+ ?x66829 ?x64898) ?x64900) ?x64902) 0.0))))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x64993 (* ?x64723 l_0_17_45)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x64990 (* ?x64720 l_0_17_44)))
 (let ((?x66914 (* l_0_17_217 l_0_17_217)))
 (let ((?x66912 (* l_0_17_216 l_0_17_216)))
 (let ((?x66910 (* l_0_17_215 l_0_17_215)))
 (let ((?x66908 (* l_0_17_214 l_0_17_214)))
 (let ((?x66906 (* l_0_17_213 l_0_17_213)))
 (let ((?x66904 (* l_0_17_212 l_0_17_212)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x64972 (* ?x64971 l_0_17_3)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x64969 (* ?x64968 l_0_17_2)))
 (let ((?x66889 (- (* (* (- 1.0) l_0_17_128) l_0_17_128) (* (* 1.0 l_0_17_129) l_0_17_129))))
 (let ((?x66895 (- (- ?x66889 (* (* 1.0 l_0_17_130) l_0_17_130)) (* (* 1.0 l_0_17_131) l_0_17_131))))
 (let ((?x66901 (- (- ?x66895 (* (* 1.0 l_0_17_132) l_0_17_132)) (* (* 1.0 l_0_17_133) l_0_17_133))))
 (let ((?x66913 (- (- (- (- (- (+ (+ ?x66901 ?x64969) ?x64972) ?x66904) ?x66906) ?x66908) ?x66910) ?x66912)))
 (= (- (- (- ?x66913 ?x66914) ?x64990) ?x64993) 0.0))))))))))))))))))))
(assert
 (let ((?x64723 (* 2.0 l_0_17_31)))
 (let ((?x65066 (* ?x64723 l_0_17_51)))
 (let ((?x64720 (* 2.0 l_0_17_30)))
 (let ((?x65064 (* ?x64720 l_0_17_50)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65062 (* ?x65061 l_0_17_3)))
 (let ((?x64836 (* 2.0 l_0_17_2)))
 (let ((?x65049 (* ?x64836 l_0_17_22)))
 (let ((?x66962 (- (* (* (- 2.0) l_0_17_128) l_0_17_134) (* (* 2.0 l_0_17_129) l_0_17_135))))
 (let ((?x66968 (- (- ?x66962 (* (* 2.0 l_0_17_130) l_0_17_136)) (* (* 2.0 l_0_17_131) l_0_17_137))))
 (let ((?x66974 (- (- ?x66968 (* (* 2.0 l_0_17_132) l_0_17_138)) (* (* 2.0 l_0_17_133) l_0_17_139))))
 (let ((?x66978 (+ (+ ?x66974 (* (* 2.0 l_0_17_142) l_0_17_156)) (* (* 2.0 l_0_17_143) l_0_17_157))))
 (let ((?x66982 (- (- ?x66978 (* (* 2.0 l_0_17_170) l_0_17_184)) (* (* 2.0 l_0_17_171) l_0_17_185))))
 (let ((?x66989 (- (- (+ ?x66982 ?x65049) (* (* 2.0 l_0_17_212) l_0_17_218)) (* (* 2.0 l_0_17_213) l_0_17_219))))
 (let ((?x66995 (- (- ?x66989 (* (* 2.0 l_0_17_214) l_0_17_220)) (* (* 2.0 l_0_17_215) l_0_17_221))))
 (let ((?x67001 (- (- ?x66995 (* (* 2.0 l_0_17_216) l_0_17_222)) (* (* 2.0 l_0_17_217) l_0_17_223))))
 (= (- (- (+ ?x67001 ?x65062) ?x65064) ?x65066) 0.0))))))))))))))))))
(assert
 (let ((?x65155 (* l_0_17_6 l_0_17_6)))
 (let ((?x65153 (* l_0_17_5 l_0_17_5)))
 (let ((?x65151 (* l_0_17_4 l_0_17_4)))
 (let ((?x65149 (* l_0_17_34 l_0_17_34)))
 (let ((?x66301 (- (- (* (- l_0_17_32) l_0_17_32) (* l_0_17_33 l_0_17_33)) ?x65149)))
 (= (+ (+ (+ ?x66301 ?x65151) ?x65153) ?x65155) 0.0)))))))
(assert
 (let ((?x65184 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x65181 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x65178 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65175 (* ?x65174 l_0_17_37)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65172 (* ?x65171 l_0_17_36)))
 (let ((?x66312 (+ (+ (- (- (* (* (- 2.0) l_0_17_32) l_0_17_35) ?x65172) ?x65175) ?x65178) ?x65181)))
 (= (+ ?x66312 ?x65184) 0.0))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65266 (* ?x65174 l_0_17_46)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65263 (* ?x65171 l_0_17_45)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65260 (* ?x65169 l_0_17_44)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65257 (* ?x65256 l_0_17_6)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65254 (* ?x64971 l_0_17_5)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65246 (* ?x64968 l_0_17_4)))
 (= (- (- (- (+ (+ ?x65246 ?x65254) ?x65257) ?x65260) ?x65263) ?x65266) 0.0))))))))))))))
(assert
 (let ((?x65174 (* 2.0 l_0_17_34)))
 (let ((?x65321 (* ?x65174 l_0_17_52)))
 (let ((?x65171 (* 2.0 l_0_17_33)))
 (let ((?x65319 (* ?x65171 l_0_17_51)))
 (let ((?x65169 (* 2.0 l_0_17_32)))
 (let ((?x65317 (* ?x65169 l_0_17_50)))
 (let ((?x65314 (* 2.0 l_0_17_24)))
 (let ((?x65315 (* ?x65314 l_0_17_6)))
 (let ((?x65061 (* 2.0 l_0_17_23)))
 (let ((?x65312 (* ?x65061 l_0_17_5)))
 (let ((?x65309 (* 2.0 l_0_17_22)))
 (let ((?x65310 (* ?x65309 l_0_17_4)))
 (let ((?x27143 (+ (* (* 2.0 l_0_17_144) l_0_17_156) (* (* 2.0 l_0_17_145) l_0_17_157))))
 (let ((?x67051 (- (+ ?x27143 (* (* 2.0 l_0_17_146) l_0_17_158)) (* (* 2.0 l_0_17_172) l_0_17_184))))
 (let ((?x67055 (- (- ?x67051 (* (* 2.0 l_0_17_173) l_0_17_185)) (* (* 2.0 l_0_17_174) l_0_17_186))))
 (= (- (- (- (+ (+ (+ ?x67055 ?x65310) ?x65312) ?x65315) ?x65317) ?x65319) ?x65321) 0.0)))))))))))))))))
(assert
 (let ((?x65366 (* l_0_17_9 l_0_17_9)))
 (let ((?x65364 (* l_0_17_8 l_0_17_8)))
 (let ((?x65362 (* l_0_17_7 l_0_17_7)))
 (let ((?x65360 (* l_0_17_38 l_0_17_38)))
 (let ((?x65358 (* l_0_17_37 l_0_17_37)))
 (let ((?x65356 (* l_0_17_36 l_0_17_36)))
 (let ((?x47635 (- (- (- (* l_0_17_10 l_0_17_10) (* l_0_17_35 l_0_17_35)) ?x65356) ?x65358)))
 (= (+ (+ (+ (- ?x47635 ?x65360) ?x65362) ?x65364) ?x65366) 0.0)))))))))
(assert
 (let ((?x65394 (* 2.0 l_0_17_38)))
 (let ((?x65431 (* ?x65394 l_0_17_47)))
 (let ((?x65391 (* 2.0 l_0_17_37)))
 (let ((?x65428 (* ?x65391 l_0_17_46)))
 (let ((?x65388 (* 2.0 l_0_17_36)))
 (let ((?x65425 (* ?x65388 l_0_17_45)))
 (let ((?x65385 (* 2.0 l_0_17_35)))
 (let ((?x65422 (* ?x65385 l_0_17_44)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65419 (* ?x65256 l_0_17_9)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65417 (* ?x64971 l_0_17_8)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65415 (* ?x64968 l_0_17_7)))
 (let ((?x65408 (* 2.0 l_0_17_10)))
 (let ((?x65410 (* ?x65408 l_0_17_19)))
 (let ((?x66333 (- (- (- (- (+ (+ (+ ?x65410 ?x65415) ?x65417) ?x65419) ?x65422) ?x65425) ?x65428) ?x65431)))
 (= ?x66333 0.0)))))))))))))))))))
(assert
 (let ((?x65732 (* l_0_17_49 l_0_17_49)))
 (let ((?x65730 (* l_0_17_48 l_0_17_48)))
 (let ((?x65728 (* l_0_17_47 l_0_17_47)))
 (let ((?x65726 (* l_0_17_46 l_0_17_46)))
 (let ((?x65724 (* l_0_17_45 l_0_17_45)))
 (let ((?x65722 (* l_0_17_44 l_0_17_44)))
 (let ((?x65715 (* l_0_17_21 l_0_17_21)))
 (let ((?x65713 (* l_0_17_20 l_0_17_20)))
 (let ((?x65711 (* l_0_17_19 l_0_17_19)))
 (let ((?x65709 (* l_0_17_18 l_0_17_18)))
 (let ((?x66404 (+ (+ (+ (* l_0_17_16 l_0_17_16) (* l_0_17_17 l_0_17_17)) ?x65709) ?x65711)))
 (let ((?x66411 (- (- (- (- (- (+ (+ ?x66404 ?x65713) ?x65715) ?x65722) ?x65724) ?x65726) ?x65728) ?x65730)))
 (= (- ?x66411 ?x65732) 0.0))))))))))))))
(assert
 (let ((?x65811 (* (* 2.0 l_0_17_49) l_0_17_55)))
 (let ((?x65808 (* (* 2.0 l_0_17_48) l_0_17_54)))
 (let ((?x65805 (* (* 2.0 l_0_17_47) l_0_17_53)))
 (let ((?x65802 (* (* 2.0 l_0_17_46) l_0_17_52)))
 (let ((?x65799 (* (* 2.0 l_0_17_45) l_0_17_51)))
 (let ((?x65796 (* (* 2.0 l_0_17_44) l_0_17_50)))
 (let ((?x65788 (* (* 2.0 l_0_17_21) l_0_17_27)))
 (let ((?x65785 (* (* 2.0 l_0_17_20) l_0_17_26)))
 (let ((?x65782 (* (* 2.0 l_0_17_19) l_0_17_25)))
 (let ((?x67110 (* l_0_17_189 l_0_17_189)))
 (let ((?x67108 (* l_0_17_188 l_0_17_188)))
 (let ((?x67106 (* l_0_17_187 l_0_17_187)))
 (let ((?x67104 (* l_0_17_186 l_0_17_186)))
 (let ((?x67102 (* l_0_17_185 l_0_17_185)))
 (let ((?x67100 (* l_0_17_184 l_0_17_184)))
 (let ((?x65256 (* 2.0 l_0_17_18)))
 (let ((?x65767 (* ?x65256 l_0_17_24)))
 (let ((?x64971 (* 2.0 l_0_17_17)))
 (let ((?x65762 (* ?x64971 l_0_17_23)))
 (let ((?x67096 (* l_0_17_161 l_0_17_161)))
 (let ((?x67094 (* l_0_17_160 l_0_17_160)))
 (let ((?x64968 (* 2.0 l_0_17_16)))
 (let ((?x65760 (* ?x64968 l_0_17_22)))
 (let ((?x67091 (* l_0_17_159 l_0_17_159)))
 (let ((?x67089 (* l_0_17_158 l_0_17_158)))
 (let ((?x67090 (+ (+ (* l_0_17_156 l_0_17_156) (* l_0_17_157 l_0_17_157)) ?x67089)))
 (let ((?x67101 (- (+ (+ (+ (+ (+ (+ ?x67090 ?x67091) ?x65760) ?x67094) ?x67096) ?x65762) ?x65767) ?x67100)))
 (let ((?x67113 (+ (+ (- (- (- (- (- ?x67101 ?x67102) ?x67104) ?x67106) ?x67108) ?x67110) ?x65782) ?x65785)))
 (let ((?x67120 (- (- (- (- (- (- (+ ?x67113 ?x65788) ?x65796) ?x65799) ?x65802) ?x65805) ?x65808) ?x65811)))
 (= ?x67120 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x65897 (* l_0_17_56 l_0_17_56)))
 (let ((?x65895 (* l_0_17_55 l_0_17_55)))
 (let ((?x65893 (* l_0_17_54 l_0_17_54)))
 (let ((?x65891 (* l_0_17_53 l_0_17_53)))
 (let ((?x65889 (* l_0_17_52 l_0_17_52)))
 (let ((?x65887 (* l_0_17_51 l_0_17_51)))
 (let ((?x65885 (* l_0_17_50 l_0_17_50)))
 (let ((?x65883 (* l_0_17_28 l_0_17_28)))
 (let ((?x65881 (* l_0_17_27 l_0_17_27)))
 (let ((?x65879 (* l_0_17_26 l_0_17_26)))
 (let ((?x65877 (* l_0_17_25 l_0_17_25)))
 (let ((?x65875 (* l_0_17_24 l_0_17_24)))
 (let ((?x65873 (* l_0_17_23 l_0_17_23)))
 (let ((?x65871 (* l_0_17_22 l_0_17_22)))
 (let ((?x27241 (+ (* (* 2.0 l_0_17_156) l_0_17_162) (* (* 2.0 l_0_17_157) l_0_17_163))))
 (let ((?x67137 (+ (+ ?x27241 (* (* 2.0 l_0_17_158) l_0_17_164)) (* (* 2.0 l_0_17_159) l_0_17_165))))
 (let ((?x67143 (+ (+ ?x67137 (* (* 2.0 l_0_17_160) l_0_17_166)) (* (* 2.0 l_0_17_161) l_0_17_167))))
 (let ((?x67149 (- (- ?x67143 (* (* 2.0 l_0_17_184) l_0_17_190)) (* (* 2.0 l_0_17_185) l_0_17_191))))
 (let ((?x67155 (- (- ?x67149 (* (* 2.0 l_0_17_186) l_0_17_192)) (* (* 2.0 l_0_17_187) l_0_17_193))))
 (let ((?x67161 (- (- ?x67155 (* (* 2.0 l_0_17_188) l_0_17_194)) (* (* 2.0 l_0_17_189) l_0_17_195))))
 (let ((?x67168 (+ (+ (+ (+ (+ (+ (+ ?x67161 ?x65871) ?x65873) ?x65875) ?x65877) ?x65879) ?x65881) ?x65883)))
 (let ((?x67175 (- (- (- (- (- (- (- ?x67168 ?x65885) ?x65887) ?x65889) ?x65891) ?x65893) ?x65895) ?x65897)))
 (= ?x67175 0.0))))))))))))))))))))))))
(assert
 (= (- (* l_0_17_57 l_0_17_57) (* l_0_17_85 l_0_17_85)) 0.0))
(assert
 (let ((?x67233 (+ (- (* l_0_17_141 l_0_17_141) (* l_0_17_169 l_0_17_169)) (* (* 2.0 l_0_17_57) l_0_17_58))))
 (= (- ?x67233 (* (* 2.0 l_0_17_85) l_0_17_86)) 0.0)))
(assert
 (let ((?x67248 (- (* (* 2.0 l_0_17_57) l_0_17_67) (* (* 2.0 l_0_17_85) l_0_17_95))))
 (= ?x67248 0.0)))
(assert
 (let ((?x67258 (+ (* (* (- 2.0) l_0_17_100) l_0_17_85) (* (* 2.0 l_0_17_57) l_0_17_72))))
 (= ?x67258 0.0)))
(assert
 (let ((?x67264 (+ (* (* (- 2.0) l_0_17_106) l_0_17_85) (* (* 2.0 l_0_17_57) l_0_17_78))))
 (= ?x67264 0.0)))
(assert
 (let ((?x67289 (* l_0_17_87 l_0_17_87)))
 (let ((?x67287 (* l_0_17_86 l_0_17_86)))
 (let ((?x67285 (* l_0_17_59 l_0_17_59)))
 (let ((?x67283 (* l_0_17_58 l_0_17_58)))
 (let ((?x67274 (+ (* (* (- 2.0) l_0_17_113) l_0_17_134) (* (* 2.0 l_0_17_141) l_0_17_142))))
 (let ((?x67282 (- (- ?x67274 (* (* 2.0 l_0_17_169) l_0_17_170)) (* (* 2.0 l_0_17_197) l_0_17_218))))
 (= (- (- (+ (+ ?x67282 ?x67283) ?x67285) ?x67287) ?x67289) 0.0))))))))
(assert
 (let ((?x27403 (- (* (* (- 2.0) l_0_17_106) l_0_17_86) (* (* 2.0 l_0_17_107) l_0_17_87))))
 (let ((?x67304 (- (+ ?x27403 (* (* 2.0 l_0_17_141) l_0_17_162)) (* (* 2.0 l_0_17_169) l_0_17_190))))
 (let ((?x67308 (+ (+ ?x67304 (* (* 2.0 l_0_17_58) l_0_17_78)) (* (* 2.0 l_0_17_59) l_0_17_79))))
 (= ?x67308 0.0)))))
(assert
 (let ((?x67343 (* l_0_17_99 l_0_17_99)))
 (let ((?x67341 (* l_0_17_98 l_0_17_98)))
 (let ((?x67339 (* l_0_17_97 l_0_17_97)))
 (let ((?x67337 (* l_0_17_96 l_0_17_96)))
 (let ((?x67335 (* l_0_17_95 l_0_17_95)))
 (let ((?x67333 (* l_0_17_71 l_0_17_71)))
 (let ((?x67331 (* l_0_17_70 l_0_17_70)))
 (let ((?x67329 (* l_0_17_69 l_0_17_69)))
 (let ((?x67332 (+ (+ (+ (* l_0_17_67 l_0_17_67) (* l_0_17_68 l_0_17_68)) ?x67329) ?x67331)))
 (= (- (- (- (- (- (+ ?x67332 ?x67333) ?x67335) ?x67337) ?x67339) ?x67341) ?x67343) 0.0)))))))))))
(assert
 (let ((?x67359 (- (* (* (- 2.0) l_0_17_100) l_0_17_95) (* (* 2.0 l_0_17_101) l_0_17_96))))
 (let ((?x67363 (- (- ?x67359 (* (* 2.0 l_0_17_102) l_0_17_97)) (* (* 2.0 l_0_17_103) l_0_17_98))))
 (let ((?x67369 (+ (- ?x67363 (* (* 2.0 l_0_17_104) l_0_17_99)) (* (* 2.0 l_0_17_67) l_0_17_72))))
 (let ((?x67375 (+ (+ ?x67369 (* (* 2.0 l_0_17_68) l_0_17_73)) (* (* 2.0 l_0_17_69) l_0_17_74))))
 (let ((?x67381 (+ (+ ?x67375 (* (* 2.0 l_0_17_70) l_0_17_75)) (* (* 2.0 l_0_17_71) l_0_17_76))))
 (= ?x67381 0.0)))))))
(assert
 (let ((?x67405 (- (* (* (- 2.0) l_0_17_106) l_0_17_95) (* (* 2.0 l_0_17_107) l_0_17_96))))
 (let ((?x67419 (- (- ?x67405 (* (* 2.0 l_0_17_108) l_0_17_97)) (* (* 2.0 l_0_17_109) l_0_17_98))))
 (let ((?x67424 (+ (- ?x67419 (* (* 2.0 l_0_17_110) l_0_17_99)) (* (* 2.0 l_0_17_67) l_0_17_78))))
 (let ((?x67428 (+ (+ ?x67424 (* (* 2.0 l_0_17_68) l_0_17_79)) (* (* 2.0 l_0_17_69) l_0_17_80))))
 (let ((?x67432 (+ (+ ?x67428 (* (* 2.0 l_0_17_70) l_0_17_81)) (* (* 2.0 l_0_17_71) l_0_17_82))))
 (= ?x67432 0.0)))))))
(assert
 (let ((?x67480 (* l_0_17_77 l_0_17_77)))
 (let ((?x67478 (* l_0_17_76 l_0_17_76)))
 (let ((?x67476 (* l_0_17_75 l_0_17_75)))
 (let ((?x67474 (* l_0_17_74 l_0_17_74)))
 (let ((?x67472 (* l_0_17_73 l_0_17_73)))
 (let ((?x67470 (* l_0_17_72 l_0_17_72)))
 (let ((?x67468 (* l_0_17_105 l_0_17_105)))
 (let ((?x67466 (* l_0_17_104 l_0_17_104)))
 (let ((?x67464 (* l_0_17_103 l_0_17_103)))
 (let ((?x67454 (* l_0_17_102 l_0_17_102)))
 (let ((?x67455 (- (- (* (- l_0_17_100) l_0_17_100) (* l_0_17_101 l_0_17_101)) ?x67454)))
 (let ((?x67477 (+ (+ (+ (+ (- (- (- ?x67455 ?x67464) ?x67466) ?x67468) ?x67470) ?x67472) ?x67474) ?x67476)))
 (= (+ (+ ?x67477 ?x67478) ?x67480) 0.0))))))))))))))
(assert
 (let ((?x67504 (- (* (* (- 2.0) l_0_17_100) l_0_17_106) (* (* 2.0 l_0_17_101) l_0_17_107))))
 (let ((?x67508 (- (- ?x67504 (* (* 2.0 l_0_17_102) l_0_17_108)) (* (* 2.0 l_0_17_103) l_0_17_109))))
 (let ((?x67513 (- (- ?x67508 (* (* 2.0 l_0_17_104) l_0_17_110)) (* (* 2.0 l_0_17_105) l_0_17_111))))
 (let ((?x67519 (+ (+ ?x67513 (* (* 2.0 l_0_17_72) l_0_17_78)) (* (* 2.0 l_0_17_73) l_0_17_79))))
 (let ((?x67525 (+ (+ ?x67519 (* (* 2.0 l_0_17_74) l_0_17_80)) (* (* 2.0 l_0_17_75) l_0_17_81))))
 (let ((?x67531 (+ (+ ?x67525 (* (* 2.0 l_0_17_76) l_0_17_82)) (* (* 2.0 l_0_17_77) l_0_17_83))))
 (= ?x67531 0.0))))))))
(assert
 (let ((?x67565 (* l_0_17_84 l_0_17_84)))
 (let ((?x67563 (* l_0_17_83 l_0_17_83)))
 (let ((?x67561 (* l_0_17_82 l_0_17_82)))
 (let ((?x67559 (* l_0_17_81 l_0_17_81)))
 (let ((?x67557 (* l_0_17_80 l_0_17_80)))
 (let ((?x67555 (* l_0_17_79 l_0_17_79)))
 (let ((?x67553 (* l_0_17_78 l_0_17_78)))
 (let ((?x67551 (* l_0_17_112 l_0_17_112)))
 (let ((?x67549 (* l_0_17_111 l_0_17_111)))
 (let ((?x67547 (* l_0_17_110 l_0_17_110)))
 (let ((?x67545 (* l_0_17_109 l_0_17_109)))
 (let ((?x67543 (* l_0_17_108 l_0_17_108)))
 (let ((?x67544 (- (- (* (- l_0_17_106) l_0_17_106) (* l_0_17_107 l_0_17_107)) ?x67543)))
 (let ((?x67558 (+ (+ (+ (- (- (- (- ?x67544 ?x67545) ?x67547) ?x67549) ?x67551) ?x67553) ?x67555) ?x67557)))
 (= (+ (+ (+ (+ ?x67558 ?x67559) ?x67561) ?x67563) ?x67565) 0.0))))))))))))))))
(assert
 (let ((?x67589 (* l_0_17_197 l_0_17_197)))
 (= (- (* (* (- 1.0) l_0_17_113) l_0_17_113) ?x67589) 0.0)))
(assert
 (let ((?x67599 (- (* (* (- 2.0) l_0_17_113) l_0_17_114) (* (* 2.0 l_0_17_197) l_0_17_198))))
 (= ?x67599 0.0)))
(assert
 (let ((?x67612 (- (* (* (- 2.0) l_0_17_113) l_0_17_119) (* (* 2.0 l_0_17_197) l_0_17_203))))
 (= ?x67612 0.0)))
(assert
 (let ((?x67625 (- (* (* (- 2.0) l_0_17_114) l_0_17_119) (* (* 2.0 l_0_17_115) l_0_17_120))))
 (let ((?x67629 (- (- ?x67625 (* (* 2.0 l_0_17_198) l_0_17_203)) (* (* 2.0 l_0_17_199) l_0_17_204))))
 (= ?x67629 0.0))))
(assert
 (let ((?x67632 (* l_0_17_171 l_0_17_171)))
 (let ((?x27809 (* l_0_17_170 l_0_17_170)))
 (let ((?x27810 (* l_0_17_143 l_0_17_143)))
 (let ((?x27806 (* l_0_17_142 l_0_17_142)))
 (let ((?x48325 (- (* (* (- 2.0) l_0_17_114) l_0_17_134) (* (* 2.0 l_0_17_115) l_0_17_135))))
 (let ((?x67635 (- (- (- (+ (+ ?x48325 ?x27806) ?x27810) ?x27809) ?x67632) (* (* 2.0 l_0_17_198) l_0_17_218))))
 (= (- ?x67635 (* (* 2.0 l_0_17_199) l_0_17_219)) 0.0))))))))
(assert
 (let ((?x67665 (* l_0_17_202 l_0_17_202)))
 (let ((?x67663 (* l_0_17_201 l_0_17_201)))
 (let ((?x67661 (* l_0_17_200 l_0_17_200)))
 (let ((?x67657 (- (* (* (- 1.0) l_0_17_116) l_0_17_116) (* (* 1.0 l_0_17_117) l_0_17_117))))
 (let ((?x67666 (- (- (- (- ?x67657 (* (* 1.0 l_0_17_118) l_0_17_118)) ?x67661) ?x67663) ?x67665)))
 (= ?x67666 0.0)))))))
(assert
 (let ((?x67684 (- (* (* (- 2.0) l_0_17_116) l_0_17_119) (* (* 2.0 l_0_17_117) l_0_17_120))))
 (let ((?x67688 (- (- ?x67684 (* (* 2.0 l_0_17_118) l_0_17_121)) (* (* 2.0 l_0_17_200) l_0_17_203))))
 (let ((?x67692 (- (- ?x67688 (* (* 2.0 l_0_17_201) l_0_17_204)) (* (* 2.0 l_0_17_202) l_0_17_205))))
 (= ?x67692 0.0)))))
(assert
 (let ((?x67717 (- (* (* (- 2.0) l_0_17_116) l_0_17_134) (* (* 2.0 l_0_17_117) l_0_17_135))))
 (let ((?x67721 (+ (- ?x67717 (* (* 2.0 l_0_17_118) l_0_17_136)) (* (* 2.0 l_0_17_142) l_0_17_144))))
 (let ((?x67725 (- (+ ?x67721 (* (* 2.0 l_0_17_143) l_0_17_145)) (* (* 2.0 l_0_17_170) l_0_17_172))))
 (let ((?x67729 (- (- ?x67725 (* (* 2.0 l_0_17_171) l_0_17_173)) (* (* 2.0 l_0_17_200) l_0_17_218))))
 (let ((?x67733 (- (- ?x67729 (* (* 2.0 l_0_17_201) l_0_17_219)) (* (* 2.0 l_0_17_202) l_0_17_220))))
 (= ?x67733 0.0)))))))
(assert
 (let ((?x67780 (* l_0_17_206 l_0_17_206)))
 (let ((?x67778 (* l_0_17_205 l_0_17_205)))
 (let ((?x67776 (* l_0_17_204 l_0_17_204)))
 (let ((?x67774 (* l_0_17_203 l_0_17_203)))
 (let ((?x67767 (- (* (* (- 1.0) l_0_17_119) l_0_17_119) (* (* 1.0 l_0_17_120) l_0_17_120))))
 (let ((?x67773 (- (- ?x67767 (* (* 1.0 l_0_17_121) l_0_17_121)) (* (* 1.0 l_0_17_122) l_0_17_122))))
 (= (- (- (- (- ?x67773 ?x67774) ?x67776) ?x67778) ?x67780) 0.0))))))))
(assert
 (let ((?x67801 (* l_0_17_224 l_0_17_224)))
 (let ((?x67799 (* l_0_17_223 l_0_17_223)))
 (let ((?x67797 (* l_0_17_222 l_0_17_222)))
 (let ((?x67795 (* l_0_17_221 l_0_17_221)))
 (let ((?x48462 (* l_0_17_220 l_0_17_220)))
 (let ((?x48443 (* l_0_17_219 l_0_17_219)))
 (let ((?x48435 (* l_0_17_218 l_0_17_218)))
 (let ((?x27901 (- (* (* (- 1.0) l_0_17_134) l_0_17_134) (* (* 1.0 l_0_17_135) l_0_17_135))))
 (let ((?x27937 (- (- ?x27901 (* (* 1.0 l_0_17_136) l_0_17_136)) (* (* 1.0 l_0_17_137) l_0_17_137))))
 (let ((?x27914 (- (- ?x27937 (* (* 1.0 l_0_17_138) l_0_17_138)) (* (* 1.0 l_0_17_139) l_0_17_139))))
 (let ((?x48460 (+ (- ?x27914 (* (* 1.0 l_0_17_140) l_0_17_140)) (* (* 2.0 l_0_17_142) l_0_17_162))))
 (let ((?x48421 (- (+ ?x48460 (* (* 2.0 l_0_17_143) l_0_17_163)) (* (* 2.0 l_0_17_170) l_0_17_190))))
 (let ((?x28065 (- (- (- (- ?x48421 (* (* 2.0 l_0_17_171) l_0_17_191)) ?x48435) ?x48443) ?x48462)))
 (= (- (- (- (- ?x28065 ?x67795) ?x67797) ?x67799) ?x67801) 0.0)))))))))))))))
(assert
 (let ((?x67848 (* l_0_17_174 l_0_17_174)))
 (let ((?x67846 (* l_0_17_173 l_0_17_173)))
 (let ((?x67844 (* l_0_17_172 l_0_17_172)))
 (let ((?x67842 (* l_0_17_146 l_0_17_146)))
 (let ((?x67843 (+ (+ (* l_0_17_144 l_0_17_144) (* l_0_17_145 l_0_17_145)) ?x67842)))
 (= (- (- (- ?x67843 ?x67844) ?x67846) ?x67848) 0.0)))))))
(assert
 (let ((?x48661 (+ (* (* 2.0 l_0_17_144) l_0_17_162) (* (* 2.0 l_0_17_145) l_0_17_163))))
 (let ((?x67856 (- (+ ?x48661 (* (* 2.0 l_0_17_146) l_0_17_164)) (* (* 2.0 l_0_17_172) l_0_17_190))))
 (let ((?x67860 (- (- ?x67856 (* (* 2.0 l_0_17_173) l_0_17_191)) (* (* 2.0 l_0_17_174) l_0_17_192))))
 (= ?x67860 0.0)))))
(assert
 (let ((?x67908 (* l_0_17_196 l_0_17_196)))
 (let ((?x67906 (* l_0_17_195 l_0_17_195)))
 (let ((?x67904 (* l_0_17_194 l_0_17_194)))
 (let ((?x67902 (* l_0_17_193 l_0_17_193)))
 (let ((?x67900 (* l_0_17_192 l_0_17_192)))
 (let ((?x67898 (* l_0_17_191 l_0_17_191)))
 (let ((?x67896 (* l_0_17_190 l_0_17_190)))
 (let ((?x67894 (* l_0_17_168 l_0_17_168)))
 (let ((?x67892 (* l_0_17_167 l_0_17_167)))
 (let ((?x67890 (* l_0_17_166 l_0_17_166)))
 (let ((?x67888 (* l_0_17_165 l_0_17_165)))
 (let ((?x67886 (* l_0_17_164 l_0_17_164)))
 (let ((?x67887 (+ (+ (* l_0_17_162 l_0_17_162) (* l_0_17_163 l_0_17_163)) ?x67886)))
 (let ((?x67901 (- (- (- (+ (+ (+ (+ ?x67887 ?x67888) ?x67890) ?x67892) ?x67894) ?x67896) ?x67898) ?x67900)))
 (= (- (- (- (- ?x67901 ?x67902) ?x67904) ?x67906) ?x67908) 0.0))))))))))))))))
(assert
 (>= l_0_17_1 0.0))
(assert
 (>= l_0_17_3 0.0))
(assert
 (>= l_0_17_6 0.0))
(assert
 (>= l_0_17_10 0.0))
(assert
 (>= l_0_17_15 0.0))
(assert
 (>= l_0_17_21 0.0))
(assert
 (>= l_0_17_28 0.0))
(assert
 (>= l_0_17_29 0.0))
(assert
 (>= l_0_17_31 0.0))
(assert
 (>= l_0_17_34 0.0))
(assert
 (>= l_0_17_38 0.0))
(assert
 (>= l_0_17_43 0.0))
(assert
 (>= l_0_17_49 0.0))
(assert
 (>= l_0_17_56 0.0))
(assert
 (>= l_0_17_57 0.0))
(assert
 (>= l_0_17_59 0.0))
(assert
 (>= l_0_17_62 0.0))
(assert
 (>= l_0_17_66 0.0))
(assert
 (>= l_0_17_71 0.0))
(assert
 (>= l_0_17_77 0.0))
(assert
 (>= l_0_17_84 0.0))
(assert
 (>= l_0_17_85 0.0))
(assert
 (>= l_0_17_87 0.0))
(assert
 (>= l_0_17_90 0.0))
(assert
 (>= l_0_17_94 0.0))
(assert
 (>= l_0_17_99 0.0))
(assert
 (>= l_0_17_105 0.0))
(assert
 (>= l_0_17_112 0.0))
(assert
 (>= l_0_17_113 0.0))
(assert
 (>= l_0_17_115 0.0))
(assert
 (>= l_0_17_118 0.0))
(assert
 (>= l_0_17_122 0.0))
(assert
 (>= l_0_17_127 0.0))
(assert
 (>= l_0_17_133 0.0))
(assert
 (>= l_0_17_140 0.0))
(assert
 (>= l_0_17_141 0.0))
(assert
 (>= l_0_17_143 0.0))
(assert
 (>= l_0_17_146 0.0))
(assert
 (>= l_0_17_150 0.0))
(assert
 (>= l_0_17_155 0.0))
(assert
 (>= l_0_17_161 0.0))
(assert
 (>= l_0_17_168 0.0))
(assert
 (>= l_0_17_169 0.0))
(assert
 (>= l_0_17_171 0.0))
(assert
 (>= l_0_17_174 0.0))
(assert
 (>= l_0_17_178 0.0))
(assert
 (>= l_0_17_183 0.0))
(assert
 (>= l_0_17_189 0.0))
(assert
 (>= l_0_17_196 0.0))
(assert
 (>= l_0_17_197 0.0))
(assert
 (>= l_0_17_199 0.0))
(assert
 (>= l_0_17_202 0.0))
(assert
 (>= l_0_17_206 0.0))
(assert
 (>= l_0_17_211 0.0))
(assert
 (>= l_0_17_217 0.0))
(assert
 (>= l_0_17_224 0.0))
(assert
 (let ((?x68034 (* l_0_18_31 l_0_18_31)))
 (let ((?x68032 (* l_0_18_30 l_0_18_30)))
 (let ((?x68030 (* l_0_18_3 l_0_18_3)))
 (let ((?x68004 (* l_0_18_2 l_0_18_2)))
 (let ((?x67985 (- (* (* (- 2.0) l_0_18_119) l_0_18_134) (* (* 2.0 l_0_18_120) l_0_18_135))))
 (let ((?x67991 (- (- ?x67985 (* (* 2.0 l_0_18_121) l_0_18_136)) (* (* 2.0 l_0_18_122) l_0_18_137))))
 (let ((?x67997 (+ (+ ?x67991 (* (* 2.0 l_0_18_142) l_0_18_147)) (* (* 2.0 l_0_18_143) l_0_18_148))))
 (let ((?x68003 (- (- ?x67997 (* (* 2.0 l_0_18_170) l_0_18_175)) (* (* 2.0 l_0_18_171) l_0_18_176))))
 (let ((?x68011 (- (- (+ ?x68003 ?x68004) (* (* 2.0 l_0_18_203) l_0_18_218)) (* (* 2.0 l_0_18_204) l_0_18_219))))
 (let ((?x68017 (- (- ?x68011 (* (* 2.0 l_0_18_205) l_0_18_220)) (* (* 2.0 l_0_18_206) l_0_18_221))))
 (let ((?x68023 (- (- ?x68017 (* (* 2.0 l_0_18_231) l_0_18_246)) (* (* 2.0 l_0_18_232) l_0_18_247))))
 (let ((?x68029 (- (- ?x68023 (* (* 2.0 l_0_18_233) l_0_18_248)) (* (* 2.0 l_0_18_234) l_0_18_249))))
 (= (+ (- (- (+ ?x68029 ?x68030) ?x68032) ?x68034) 1.0) 0.0))))))))))))))
(assert
 (let ((?x68034 (* l_0_18_31 l_0_18_31)))
 (let ((?x68032 (* l_0_18_30 l_0_18_30)))
 (let ((?x68030 (* l_0_18_3 l_0_18_3)))
 (let ((?x68004 (* l_0_18_2 l_0_18_2)))
 (let ((?x68070 (- (* (* (- 2.0) l_0_18_113) l_0_18_116) (* (* 2.0 l_0_18_197) l_0_18_200))))
 (let ((?x68076 (- (+ (- (+ ?x68070 ?x68004) (* (* 2.0 l_0_18_225) l_0_18_228)) ?x68030) ?x68032)))
 (= (+ (- ?x68076 ?x68034) 1.0) 0.0))))))))
(assert
 (let ((?x28441 (- (- _a_7_ (* (* 2.0 l_0_18_114) l_0_18_116)) (* (* 2.0 l_0_18_115) l_0_18_117))))
 (let ((?x68092 (- (- ?x28441 (* (* 2.0 l_0_18_198) l_0_18_200)) (* (* 2.0 l_0_18_199) l_0_18_201))))
 (let ((?x68098 (- (- ?x68092 (* (* 2.0 l_0_18_226) l_0_18_228)) (* (* 2.0 l_0_18_227) l_0_18_229))))
 (= (- ?x68098 1.0) 0.0)))))
(assert
 (let ((?x68122 (* l_0_18_227 l_0_18_227)))
 (let ((?x68120 (* l_0_18_226 l_0_18_226)))
 (let ((?x68118 (* l_0_18_199 l_0_18_199)))
 (let ((?x68116 (* l_0_18_198 l_0_18_198)))
 (let ((?x68115 (- (- _a_6_ (* (* 1.0 l_0_18_114) l_0_18_114)) (* (* 1.0 l_0_18_115) l_0_18_115))))
 (= (- (- (- (- ?x68115 ?x68116) ?x68118) ?x68120) ?x68122) 0.0)))))))
(assert
 (let ((?x68034 (* l_0_18_31 l_0_18_31)))
 (let ((?x68032 (* l_0_18_30 l_0_18_30)))
 (let ((?x68030 (* l_0_18_3 l_0_18_3)))
 (let ((?x68004 (* l_0_18_2 l_0_18_2)))
 (let ((?x68141 (- (- _a_8_ (* (* 2.0 l_0_18_114) l_0_18_128)) (* (* 2.0 l_0_18_115) l_0_18_129))))
 (let ((?x68145 (- (- ?x68141 (* (* 2.0 l_0_18_198) l_0_18_212)) (* (* 2.0 l_0_18_199) l_0_18_213))))
 (let ((?x68150 (- (- (+ ?x68145 ?x68004) (* (* 2.0 l_0_18_226) l_0_18_240)) (* (* 2.0 l_0_18_227) l_0_18_241))))
 (= (- (- (+ ?x68150 ?x68030) ?x68032) ?x68034) 0.0)))))))))
(assert
 (let ((?x68034 (* l_0_18_31 l_0_18_31)))
 (let ((?x68032 (* l_0_18_30 l_0_18_30)))
 (let ((?x68030 (* l_0_18_3 l_0_18_3)))
 (let ((?x68004 (* l_0_18_2 l_0_18_2)))
 (let ((?x68165 (- (* (* (- 2.0) l_0_18_114) l_0_18_123) (* (* 2.0 l_0_18_115) l_0_18_124))))
 (let ((?x68169 (- (- ?x68165 (* (* 2.0 l_0_18_198) l_0_18_207)) (* (* 2.0 l_0_18_199) l_0_18_208))))
 (let ((?x68174 (- (- (- ?x68169 ?x68004) (* (* 2.0 l_0_18_226) l_0_18_235)) (* (* 2.0 l_0_18_227) l_0_18_236))))
 (= (- (+ (+ (- ?x68174 ?x68030) ?x68032) ?x68034) 1.0) 0.0)))))))))
(assert
 (= (+ (* (- l_0_18_1) l_0_18_1) (* l_0_18_29 l_0_18_29)) 0.0))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68223 (* ?x68222 l_0_18_30)))
 (let ((?x68217 (- (* (* (- 2.0) l_0_18_1) l_0_18_2) (* (* 2.0 l_0_18_113) l_0_18_123))))
 (let ((?x68221 (- (- ?x68217 (* (* 2.0 l_0_18_197) l_0_18_207)) (* (* 2.0 l_0_18_225) l_0_18_235))))
 (= (+ ?x68221 ?x68223) 0.0))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68258 (* ?x68257 l_0_18_40)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68255 (* ?x68254 l_0_18_39)))
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68252 (* ?x68222 l_0_18_32)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x68250 (* ?x68249 l_0_18_3)))
 (let ((?x68242 (* 2.0 l_0_18_11)))
 (let ((?x68247 (* ?x68242 l_0_18_2)))
 (let ((?x68256 (- (+ (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_4) ?x68247) ?x68250) ?x68252) ?x68255)))
 (= (- ?x68256 ?x68258) 0.0)))))))))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68283 (* ?x68222 l_0_18_35)))
 (= (+ (* (* (- 2.0) l_0_18_1) l_0_18_7) ?x68283) 0.0))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68289 (* ?x68222 l_0_18_39)))
 (= (+ (* (* (- 2.0) l_0_18_1) l_0_18_11) ?x68289) 0.0))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68307 (* ?x68222 l_0_18_44)))
 (let ((?x68289 (* ?x68222 l_0_18_39)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x68300 (* ?x68297 l_0_18_16)))
 (let ((?x68299 (* ?x68297 l_0_18_11)))
 (= (+ (- (- ?x68299 ?x68300) ?x68289) ?x68307) 0.0))))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68324 (* ?x68222 l_0_18_50)))
 (let ((?x68320 (+ (* (* (- 2.0) l_0_18_1) l_0_18_22) (* (* 2.0 l_0_18_141) l_0_18_151))))
 (let ((?x68328 (+ (+ (- ?x68320 (* (* 2.0 l_0_18_169) l_0_18_179)) ?x68324) (* (* 2.0 l_0_18_58) l_0_18_67))))
 (let ((?x68334 (- (+ ?x68328 (* (* 2.0 l_0_18_59) l_0_18_68)) (* (* 2.0 l_0_18_86) l_0_18_95))))
 (= (- ?x68334 (* (* 2.0 l_0_18_87) l_0_18_96)) 0.0)))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68390 (* ?x68257 l_0_18_33)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68388 (* ?x68254 l_0_18_32)))
 (let ((?x68385 (* 2.0 l_0_18_3)))
 (let ((?x68386 (* ?x68385 l_0_18_5)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68365 (* ?x68364 l_0_18_4)))
 (let ((?x49244 (- (* (* (- 2.0) l_0_18_116) l_0_18_123) (* (* 2.0 l_0_18_117) l_0_18_124))))
 (let ((?x68369 (- (- (- ?x49244 (* (* 2.0 l_0_18_118) l_0_18_125)) ?x68365) (* (* 2.0 l_0_18_200) l_0_18_207))))
 (let ((?x68375 (- (- ?x68369 (* (* 2.0 l_0_18_201) l_0_18_208)) (* (* 2.0 l_0_18_202) l_0_18_209))))
 (let ((?x68381 (- (- ?x68375 (* (* 2.0 l_0_18_228) l_0_18_235)) (* (* 2.0 l_0_18_229) l_0_18_236))))
 (let ((?x68391 (+ (+ (- (- ?x68381 (* (* 2.0 l_0_18_230) l_0_18_237)) ?x68386) ?x68388) ?x68390)))
 (= ?x68391 0.0)))))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68452 (* ?x68257 l_0_18_36)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68450 (* ?x68254 l_0_18_35)))
 (let ((?x68385 (* 2.0 l_0_18_3)))
 (let ((?x68448 (* ?x68385 l_0_18_8)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68430 (* ?x68364 l_0_18_7)))
 (let ((?x68420 (- (* (* (- 2.0) l_0_18_119) l_0_18_123) (* (* 2.0 l_0_18_120) l_0_18_124))))
 (let ((?x68429 (- (- ?x68420 (* (* 2.0 l_0_18_121) l_0_18_125)) (* (* 2.0 l_0_18_122) l_0_18_126))))
 (let ((?x68435 (- (- (- ?x68429 ?x68430) (* (* 2.0 l_0_18_203) l_0_18_207)) (* (* 2.0 l_0_18_204) l_0_18_208))))
 (let ((?x68439 (- (- ?x68435 (* (* 2.0 l_0_18_205) l_0_18_209)) (* (* 2.0 l_0_18_206) l_0_18_210))))
 (let ((?x68443 (- (- ?x68439 (* (* 2.0 l_0_18_231) l_0_18_235)) (* (* 2.0 l_0_18_232) l_0_18_236))))
 (let ((?x68447 (- (- ?x68443 (* (* 2.0 l_0_18_233) l_0_18_237)) (* (* 2.0 l_0_18_234) l_0_18_238))))
 (= (+ (+ (- ?x68447 ?x68448) ?x68450) ?x68452) 0.0))))))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68258 (* ?x68257 l_0_18_40)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68255 (* ?x68254 l_0_18_39)))
 (let ((?x68494 (* l_0_18_239 l_0_18_239)))
 (let ((?x68492 (* l_0_18_238 l_0_18_238)))
 (let ((?x68490 (* l_0_18_237 l_0_18_237)))
 (let ((?x68488 (* l_0_18_236 l_0_18_236)))
 (let ((?x68486 (* l_0_18_235 l_0_18_235)))
 (let ((?x68484 (* l_0_18_211 l_0_18_211)))
 (let ((?x68482 (* l_0_18_210 l_0_18_210)))
 (let ((?x68480 (* l_0_18_209 l_0_18_209)))
 (let ((?x68478 (* l_0_18_208 l_0_18_208)))
 (let ((?x68476 (* l_0_18_207 l_0_18_207)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x68250 (* ?x68249 l_0_18_3)))
 (let ((?x28995 (- (- (* (* (- 2.0) l_0_18_11) l_0_18_2) ?x68250) (* (* 1.0 l_0_18_123) l_0_18_123))))
 (let ((?x68469 (- (- ?x28995 (* (* 1.0 l_0_18_124) l_0_18_124)) (* (* 1.0 l_0_18_125) l_0_18_125))))
 (let ((?x68475 (- (- ?x68469 (* (* 1.0 l_0_18_126) l_0_18_126)) (* (* 1.0 l_0_18_127) l_0_18_127))))
 (let ((?x68489 (- (- (- (- (- (- (- ?x68475 ?x68476) ?x68478) ?x68480) ?x68482) ?x68484) ?x68486) ?x68488)))
 (= (+ (+ (- (- (- ?x68489 ?x68490) ?x68492) ?x68494) ?x68255) ?x68258) 0.0))))))))))))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68579 (* ?x68257 l_0_18_45)))
 (let ((?x68258 (* ?x68257 l_0_18_40)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68576 (* ?x68254 l_0_18_44)))
 (let ((?x68255 (* ?x68254 l_0_18_39)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68543 (* ?x68542 l_0_18_3)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68540 (* ?x68539 l_0_18_2)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x68250 (* ?x68249 l_0_18_3)))
 (let ((?x68242 (* 2.0 l_0_18_11)))
 (let ((?x68247 (* ?x68242 l_0_18_2)))
 (let ((?x68529 (- (- (+ ?x68247 ?x68250) (* (* 2.0 l_0_18_123) l_0_18_128)) (* (* 2.0 l_0_18_124) l_0_18_129))))
 (let ((?x68535 (- (- ?x68529 (* (* 2.0 l_0_18_125) l_0_18_130)) (* (* 2.0 l_0_18_126) l_0_18_131))))
 (let ((?x68547 (- (- (- (- ?x68535 (* (* 2.0 l_0_18_127) l_0_18_132)) ?x68540) ?x68543) (* (* 2.0 l_0_18_207) l_0_18_212))))
 (let ((?x68553 (- (- ?x68547 (* (* 2.0 l_0_18_208) l_0_18_213)) (* (* 2.0 l_0_18_209) l_0_18_214))))
 (let ((?x68559 (- (- ?x68553 (* (* 2.0 l_0_18_210) l_0_18_215)) (* (* 2.0 l_0_18_211) l_0_18_216))))
 (let ((?x68565 (- (- ?x68559 (* (* 2.0 l_0_18_235) l_0_18_240)) (* (* 2.0 l_0_18_236) l_0_18_241))))
 (let ((?x68571 (- (- ?x68565 (* (* 2.0 l_0_18_237) l_0_18_242)) (* (* 2.0 l_0_18_238) l_0_18_243))))
 (let ((?x68578 (- (+ (- (- ?x68571 (* (* 2.0 l_0_18_239) l_0_18_244)) ?x68255) ?x68576) ?x68258)))
 (= (+ ?x68578 ?x68579) 0.0))))))))))))))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68671 (* ?x68257 l_0_18_51)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68669 (* ?x68254 l_0_18_50)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x68657 (* ?x68656 l_0_18_3)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68644 (* ?x68364 l_0_18_22)))
 (let ((?x68629 (- (* (* (- 2.0) l_0_18_123) l_0_18_134) (* (* 2.0 l_0_18_124) l_0_18_135))))
 (let ((?x68633 (- (- ?x68629 (* (* 2.0 l_0_18_125) l_0_18_136)) (* (* 2.0 l_0_18_126) l_0_18_137))))
 (let ((?x68637 (+ (- ?x68633 (* (* 2.0 l_0_18_127) l_0_18_138)) (* (* 2.0 l_0_18_142) l_0_18_151))))
 (let ((?x68641 (- (+ ?x68637 (* (* 2.0 l_0_18_143) l_0_18_152)) (* (* 2.0 l_0_18_170) l_0_18_179))))
 (let ((?x68647 (- (- (- ?x68641 (* (* 2.0 l_0_18_171) l_0_18_180)) ?x68644) (* (* 2.0 l_0_18_207) l_0_18_218))))
 (let ((?x68651 (- (- ?x68647 (* (* 2.0 l_0_18_208) l_0_18_219)) (* (* 2.0 l_0_18_209) l_0_18_220))))
 (let ((?x68655 (- (- ?x68651 (* (* 2.0 l_0_18_210) l_0_18_221)) (* (* 2.0 l_0_18_211) l_0_18_222))))
 (let ((?x68662 (- (- (- ?x68655 ?x68657) (* (* 2.0 l_0_18_235) l_0_18_246)) (* (* 2.0 l_0_18_236) l_0_18_247))))
 (let ((?x68666 (- (- ?x68662 (* (* 2.0 l_0_18_237) l_0_18_248)) (* (* 2.0 l_0_18_238) l_0_18_249))))
 (= (+ (+ (- ?x68666 (* (* 2.0 l_0_18_239) l_0_18_250)) ?x68669) ?x68671) 0.0)))))))))))))))))))
(assert
 (let ((?x68712 (* l_0_18_6 l_0_18_6)))
 (let ((?x68710 (* l_0_18_5 l_0_18_5)))
 (let ((?x68708 (* l_0_18_4 l_0_18_4)))
 (let ((?x68706 (* l_0_18_34 l_0_18_34)))
 (let ((?x68709 (- (+ (+ (* l_0_18_32 l_0_18_32) (* l_0_18_33 l_0_18_33)) ?x68706) ?x68708)))
 (= (- (- ?x68709 ?x68710) ?x68712) 0.0)))))))
(assert
 (let ((?x68737 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x68734 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x68731 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68728 (* ?x68727 l_0_18_37)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68725 (* ?x68724 l_0_18_36)))
 (let ((?x68735 (- (- (+ (+ (* (* 2.0 l_0_18_32) l_0_18_35) ?x68725) ?x68728) ?x68731) ?x68734)))
 (= (- ?x68735 ?x68737) 0.0))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x29822 (* ?x68727 l_0_18_41)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x29829 (* ?x68724 l_0_18_40)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x29838 (* ?x68722 l_0_18_39)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x29841 (* ?x49938 l_0_18_6)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x29857 (* ?x68249 l_0_18_5)))
 (let ((?x29833 (+ (+ (- (- (* (* (- 2.0) l_0_18_11) l_0_18_4) ?x29857) ?x29841) ?x29838) ?x29829)))
 (= (+ ?x29833 ?x29822) 0.0)))))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68787 (* ?x68727 l_0_18_46)))
 (let ((?x29822 (* ?x68727 l_0_18_41)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68784 (* ?x68724 l_0_18_45)))
 (let ((?x29829 (* ?x68724 l_0_18_40)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x68781 (* ?x68722 l_0_18_44)))
 (let ((?x29838 (* ?x68722 l_0_18_39)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x68778 (* ?x68777 l_0_18_6)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68775 (* ?x68542 l_0_18_5)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68767 (* ?x68539 l_0_18_4)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x29841 (* ?x49938 l_0_18_6)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x29857 (* ?x68249 l_0_18_5)))
 (let ((?x68766 (+ (+ (* (* 2.0 l_0_18_11) l_0_18_4) ?x29857) ?x29841)))
 (let ((?x68785 (+ (- (+ (- (- (- (- ?x68766 ?x68767) ?x68775) ?x68778) ?x29838) ?x68781) ?x29829) ?x68784)))
 (= (+ (- ?x68785 ?x29822) ?x68787) 0.0)))))))))))))))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68832 (* ?x68727 l_0_18_52)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68830 (* ?x68724 l_0_18_51)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x68828 (* ?x68722 l_0_18_50)))
 (let ((?x68825 (* 2.0 l_0_18_24)))
 (let ((?x68826 (* ?x68825 l_0_18_6)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x68823 (* ?x68656 l_0_18_5)))
 (let ((?x68820 (* 2.0 l_0_18_22)))
 (let ((?x68821 (* ?x68820 l_0_18_4)))
 (let ((?x68807 (+ (* (* 2.0 l_0_18_144) l_0_18_151) (* (* 2.0 l_0_18_145) l_0_18_152))))
 (let ((?x68813 (- (+ ?x68807 (* (* 2.0 l_0_18_146) l_0_18_153)) (* (* 2.0 l_0_18_172) l_0_18_179))))
 (let ((?x68819 (- (- ?x68813 (* (* 2.0 l_0_18_173) l_0_18_180)) (* (* 2.0 l_0_18_174) l_0_18_181))))
 (= (+ (+ (+ (- (- (- ?x68819 ?x68821) ?x68823) ?x68826) ?x68828) ?x68830) ?x68832) 0.0)))))))))))))))))
(assert
 (let ((?x68886 (* l_0_18_9 l_0_18_9)))
 (let ((?x68884 (* l_0_18_8 l_0_18_8)))
 (let ((?x68882 (* l_0_18_7 l_0_18_7)))
 (let ((?x68880 (* l_0_18_38 l_0_18_38)))
 (let ((?x68878 (* l_0_18_37 l_0_18_37)))
 (let ((?x68876 (* l_0_18_36 l_0_18_36)))
 (let ((?x68877 (+ (+ (* (- l_0_18_10) l_0_18_10) (* l_0_18_35 l_0_18_35)) ?x68876)))
 (= (- (- (- (+ (+ ?x68877 ?x68878) ?x68880) ?x68882) ?x68884) ?x68886) 0.0)))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x68921 (* ?x68920 l_0_18_42)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x68918 (* ?x68917 l_0_18_41)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x68915 (* ?x68914 l_0_18_40)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x68912 (* ?x68911 l_0_18_39)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x68909 (* ?x49938 l_0_18_9)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x68907 (* ?x68249 l_0_18_8)))
 (let ((?x68242 (* 2.0 l_0_18_11)))
 (let ((?x68905 (* ?x68242 l_0_18_7)))
 (let ((?x68913 (+ (- (- (- (* (* (- 2.0) l_0_18_10) l_0_18_14) ?x68905) ?x68907) ?x68909) ?x68912)))
 (= (+ (+ (+ ?x68913 ?x68915) ?x68918) ?x68921) 0.0)))))))))))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x68968 (* ?x68920 l_0_18_47)))
 (let ((?x68921 (* ?x68920 l_0_18_42)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x68965 (* ?x68917 l_0_18_46)))
 (let ((?x68918 (* ?x68917 l_0_18_41)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x68962 (* ?x68914 l_0_18_45)))
 (let ((?x68915 (* ?x68914 l_0_18_40)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x68959 (* ?x68911 l_0_18_44)))
 (let ((?x68912 (* ?x68911 l_0_18_39)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x68956 (* ?x68777 l_0_18_9)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68954 (* ?x68542 l_0_18_8)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68952 (* ?x68539 l_0_18_7)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x68909 (* ?x49938 l_0_18_9)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x68907 (* ?x68249 l_0_18_8)))
 (let ((?x68242 (* 2.0 l_0_18_11)))
 (let ((?x68905 (* ?x68242 l_0_18_7)))
 (let ((?x68937 (* 2.0 l_0_18_10)))
 (let ((?x68939 (* ?x68937 l_0_18_19)))
 (let ((?x30056 (* ?x68937 l_0_18_14)))
 (let ((?x68957 (- (- (- (+ (+ (+ (- ?x30056 ?x68939) ?x68905) ?x68907) ?x68909) ?x68952) ?x68954) ?x68956)))
 (let ((?x68967 (- (+ (- (+ (- (+ (- ?x68957 ?x68912) ?x68959) ?x68915) ?x68962) ?x68918) ?x68965) ?x68921)))
 (= (+ ?x68967 ?x68968) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x69026 (* ?x68920 l_0_18_53)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x69024 (* ?x68917 l_0_18_52)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x69022 (* ?x68914 l_0_18_51)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x69020 (* ?x68911 l_0_18_50)))
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68258 (* ?x68257 l_0_18_40)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68255 (* ?x68254 l_0_18_39)))
 (let ((?x68825 (* 2.0 l_0_18_24)))
 (let ((?x69016 (* ?x68825 l_0_18_9)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x69014 (* ?x68656 l_0_18_8)))
 (let ((?x68820 (* 2.0 l_0_18_22)))
 (let ((?x69012 (* ?x68820 l_0_18_7)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x68250 (* ?x68249 l_0_18_3)))
 (let ((?x68242 (* 2.0 l_0_18_11)))
 (let ((?x68247 (* ?x68242 l_0_18_2)))
 (let ((?x68990 (+ (+ (+ (* (* (- 2.0) l_0_18_10) l_0_18_25) ?x68247) ?x68250) (* (* 2.0 l_0_18_147) l_0_18_151))))
 (let ((?x68996 (+ (+ ?x68990 (* (* 2.0 l_0_18_148) l_0_18_152)) (* (* 2.0 l_0_18_149) l_0_18_153))))
 (let ((?x69002 (- (+ ?x68996 (* (* 2.0 l_0_18_150) l_0_18_154)) (* (* 2.0 l_0_18_175) l_0_18_179))))
 (let ((?x69008 (- (- ?x69002 (* (* 2.0 l_0_18_176) l_0_18_180)) (* (* 2.0 l_0_18_177) l_0_18_181))))
 (let ((?x69017 (- (- (- (- ?x69008 (* (* 2.0 l_0_18_178) l_0_18_182)) ?x69012) ?x69014) ?x69016)))
 (= (+ (+ (+ (+ (- (- ?x69017 ?x68255) ?x68258) ?x69020) ?x69022) ?x69024) ?x69026) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x69081 (* l_0_18_43 l_0_18_43)))
 (let ((?x69079 (* l_0_18_42 l_0_18_42)))
 (let ((?x69077 (* l_0_18_41 l_0_18_41)))
 (let ((?x69075 (* l_0_18_40 l_0_18_40)))
 (let ((?x69073 (* l_0_18_39 l_0_18_39)))
 (let ((?x69071 (* l_0_18_15 l_0_18_15)))
 (let ((?x69069 (* l_0_18_14 l_0_18_14)))
 (let ((?x69056 (* l_0_18_13 l_0_18_13)))
 (let ((?x69068 (- (- (* (- l_0_18_11) l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x69056)))
 (let ((?x69082 (+ (+ (+ (+ (+ (- (- ?x69068 ?x69069) ?x69071) ?x69073) ?x69075) ?x69077) ?x69079) ?x69081)))
 (= ?x69082 0.0))))))))))))
(assert
 (let ((?x69081 (* l_0_18_43 l_0_18_43)))
 (let ((?x69129 (* 2.0 l_0_18_43)))
 (let ((?x69130 (* ?x69129 l_0_18_48)))
 (let ((?x69079 (* l_0_18_42 l_0_18_42)))
 (let ((?x69125 (* 2.0 l_0_18_42)))
 (let ((?x69126 (* ?x69125 l_0_18_47)))
 (let ((?x69077 (* l_0_18_41 l_0_18_41)))
 (let ((?x69121 (* 2.0 l_0_18_41)))
 (let ((?x69122 (* ?x69121 l_0_18_46)))
 (let ((?x69075 (* l_0_18_40 l_0_18_40)))
 (let ((?x69117 (* 2.0 l_0_18_40)))
 (let ((?x69118 (* ?x69117 l_0_18_45)))
 (let ((?x69073 (* l_0_18_39 l_0_18_39)))
 (let ((?x69113 (* 2.0 l_0_18_39)))
 (let ((?x69114 (* ?x69113 l_0_18_44)))
 (let ((?x69071 (* l_0_18_15 l_0_18_15)))
 (let ((?x69109 (* 2.0 l_0_18_15)))
 (let ((?x69110 (* ?x69109 l_0_18_20)))
 (let ((?x69069 (* l_0_18_14 l_0_18_14)))
 (let ((?x69105 (* 2.0 l_0_18_14)))
 (let ((?x69106 (* ?x69105 l_0_18_19)))
 (let ((?x69056 (* l_0_18_13 l_0_18_13)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x69102 (* ?x49938 l_0_18_18)))
 (let ((?x69053 (* l_0_18_12 l_0_18_12)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x69099 (* ?x68249 l_0_18_17)))
 (let ((?x69100 (- (+ (* (* (- 2.0) l_0_18_11) l_0_18_16) (* l_0_18_11 l_0_18_11)) ?x69099)))
 (let ((?x69112 (+ (- (+ (- (+ (- (+ ?x69100 ?x69053) ?x69102) ?x69056) ?x69106) ?x69069) ?x69110) ?x69071)))
 (let ((?x69127 (+ (- (+ (- (+ (- (+ ?x69112 ?x69114) ?x69073) ?x69118) ?x69075) ?x69122) ?x69077) ?x69126)))
 (= (- (+ (- ?x69127 ?x69079) ?x69130) ?x69081) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x69129 (* 2.0 l_0_18_43)))
 (let ((?x69197 (* ?x69129 l_0_18_54)))
 (let ((?x69125 (* 2.0 l_0_18_42)))
 (let ((?x69195 (* ?x69125 l_0_18_53)))
 (let ((?x69121 (* 2.0 l_0_18_41)))
 (let ((?x69193 (* ?x69121 l_0_18_52)))
 (let ((?x69117 (* 2.0 l_0_18_40)))
 (let ((?x69191 (* ?x69117 l_0_18_51)))
 (let ((?x69113 (* 2.0 l_0_18_39)))
 (let ((?x69189 (* ?x69113 l_0_18_50)))
 (let ((?x69187 (* l_0_18_183 l_0_18_183)))
 (let ((?x69185 (* l_0_18_182 l_0_18_182)))
 (let ((?x69183 (* l_0_18_181 l_0_18_181)))
 (let ((?x69181 (* l_0_18_180 l_0_18_180)))
 (let ((?x69179 (* l_0_18_179 l_0_18_179)))
 (let ((?x69177 (* l_0_18_155 l_0_18_155)))
 (let ((?x69175 (* l_0_18_154 l_0_18_154)))
 (let ((?x69173 (* l_0_18_153 l_0_18_153)))
 (let ((?x69171 (* l_0_18_152 l_0_18_152)))
 (let ((?x69169 (* l_0_18_151 l_0_18_151)))
 (let ((?x69109 (* 2.0 l_0_18_15)))
 (let ((?x69167 (* ?x69109 l_0_18_26)))
 (let ((?x69105 (* 2.0 l_0_18_14)))
 (let ((?x69165 (* ?x69105 l_0_18_25)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x69163 (* ?x49938 l_0_18_24)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x69161 (* ?x68249 l_0_18_23)))
 (let ((?x69168 (- (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_22) ?x69161) ?x69163) ?x69165) ?x69167)))
 (let ((?x69182 (- (- (+ (+ (+ (+ (+ ?x69168 ?x69169) ?x69171) ?x69173) ?x69175) ?x69177) ?x69179) ?x69181)))
 (let ((?x69196 (+ (+ (+ (+ (- (- (- ?x69182 ?x69183) ?x69185) ?x69187) ?x69189) ?x69191) ?x69193) ?x69195)))
 (= (+ ?x69196 ?x69197) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x69257 (* l_0_18_49 l_0_18_49)))
 (let ((?x69255 (* l_0_18_48 l_0_18_48)))
 (let ((?x69253 (* l_0_18_47 l_0_18_47)))
 (let ((?x69251 (* l_0_18_46 l_0_18_46)))
 (let ((?x69249 (* l_0_18_45 l_0_18_45)))
 (let ((?x69247 (* l_0_18_44 l_0_18_44)))
 (let ((?x69129 (* 2.0 l_0_18_43)))
 (let ((?x69130 (* ?x69129 l_0_18_48)))
 (let ((?x69125 (* 2.0 l_0_18_42)))
 (let ((?x69126 (* ?x69125 l_0_18_47)))
 (let ((?x69121 (* 2.0 l_0_18_41)))
 (let ((?x69122 (* ?x69121 l_0_18_46)))
 (let ((?x69117 (* 2.0 l_0_18_40)))
 (let ((?x69118 (* ?x69117 l_0_18_45)))
 (let ((?x69113 (* 2.0 l_0_18_39)))
 (let ((?x69114 (* ?x69113 l_0_18_44)))
 (let ((?x69240 (* l_0_18_21 l_0_18_21)))
 (let ((?x69238 (* l_0_18_20 l_0_18_20)))
 (let ((?x69236 (* l_0_18_19 l_0_18_19)))
 (let ((?x69234 (* l_0_18_18 l_0_18_18)))
 (let ((?x69232 (* l_0_18_17 l_0_18_17)))
 (let ((?x30504 (* l_0_18_16 l_0_18_16)))
 (let ((?x69109 (* 2.0 l_0_18_15)))
 (let ((?x69110 (* ?x69109 l_0_18_20)))
 (let ((?x69105 (* 2.0 l_0_18_14)))
 (let ((?x69106 (* ?x69105 l_0_18_19)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x69102 (* ?x49938 l_0_18_18)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x69099 (* ?x68249 l_0_18_17)))
 (let ((?x50391 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_16) ?x69099) ?x69102) ?x69106) ?x69110)))
 (let ((?x69242 (- (- (- (- (- (- (- ?x50391 ?x30504) ?x69232) ?x69234) ?x69236) ?x69238) ?x69240) ?x69114)))
 (let ((?x69252 (+ (+ (+ (- (- (- (- ?x69242 ?x69118) ?x69122) ?x69126) ?x69130) ?x69247) ?x69249) ?x69251)))
 (= (+ (+ (+ ?x69252 ?x69253) ?x69255) ?x69257) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x69353 (* (* 2.0 l_0_18_49) l_0_18_55)))
 (let ((?x69350 (* (* 2.0 l_0_18_48) l_0_18_54)))
 (let ((?x69347 (* (* 2.0 l_0_18_47) l_0_18_53)))
 (let ((?x69344 (* (* 2.0 l_0_18_46) l_0_18_52)))
 (let ((?x69341 (* (* 2.0 l_0_18_45) l_0_18_51)))
 (let ((?x69338 (* (* 2.0 l_0_18_44) l_0_18_50)))
 (let ((?x69129 (* 2.0 l_0_18_43)))
 (let ((?x69197 (* ?x69129 l_0_18_54)))
 (let ((?x69125 (* 2.0 l_0_18_42)))
 (let ((?x69195 (* ?x69125 l_0_18_53)))
 (let ((?x69121 (* 2.0 l_0_18_41)))
 (let ((?x69193 (* ?x69121 l_0_18_52)))
 (let ((?x69117 (* 2.0 l_0_18_40)))
 (let ((?x69191 (* ?x69117 l_0_18_51)))
 (let ((?x69113 (* 2.0 l_0_18_39)))
 (let ((?x69189 (* ?x69113 l_0_18_50)))
 (let ((?x69330 (* (* 2.0 l_0_18_21) l_0_18_27)))
 (let ((?x69327 (* (* 2.0 l_0_18_20) l_0_18_26)))
 (let ((?x69324 (* (* 2.0 l_0_18_19) l_0_18_25)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x69309 (* ?x68777 l_0_18_24)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x69304 (* ?x68542 l_0_18_23)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x69302 (* ?x68539 l_0_18_22)))
 (let ((?x69109 (* 2.0 l_0_18_15)))
 (let ((?x69167 (* ?x69109 l_0_18_26)))
 (let ((?x69105 (* 2.0 l_0_18_14)))
 (let ((?x69165 (* ?x69105 l_0_18_25)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x69163 (* ?x49938 l_0_18_24)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x69161 (* ?x68249 l_0_18_23)))
 (let ((?x69286 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_22) ?x69161) ?x69163) ?x69165) ?x69167)))
 (let ((?x69292 (+ (+ ?x69286 (* (* 2.0 l_0_18_151) l_0_18_156)) (* (* 2.0 l_0_18_152) l_0_18_157))))
 (let ((?x69298 (+ (+ ?x69292 (* (* 2.0 l_0_18_153) l_0_18_158)) (* (* 2.0 l_0_18_154) l_0_18_159))))
 (let ((?x69308 (- (- (- (+ ?x69298 (* (* 2.0 l_0_18_155) l_0_18_160)) ?x69302) ?x69304) (* (* 2.0 l_0_18_179) l_0_18_184))))
 (let ((?x69316 (- (- (- ?x69308 ?x69309) (* (* 2.0 l_0_18_180) l_0_18_185)) (* (* 2.0 l_0_18_181) l_0_18_186))))
 (let ((?x69322 (- (- ?x69316 (* (* 2.0 l_0_18_182) l_0_18_187)) (* (* 2.0 l_0_18_183) l_0_18_188))))
 (let ((?x69335 (- (- (- (- (- (- (- ?x69322 ?x69324) ?x69327) ?x69330) ?x69189) ?x69191) ?x69193) ?x69195)))
 (let ((?x69354 (+ (+ (+ (+ (+ (+ (- ?x69335 ?x69197) ?x69338) ?x69341) ?x69344) ?x69347) ?x69350) ?x69353)))
 (= ?x69354 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x69504 (* l_0_18_56 l_0_18_56)))
 (let ((?x69502 (* l_0_18_55 l_0_18_55)))
 (let ((?x69500 (* l_0_18_54 l_0_18_54)))
 (let ((?x69498 (* l_0_18_53 l_0_18_53)))
 (let ((?x69496 (* l_0_18_52 l_0_18_52)))
 (let ((?x69494 (* l_0_18_51 l_0_18_51)))
 (let ((?x69492 (* l_0_18_50 l_0_18_50)))
 (let ((?x69490 (* l_0_18_28 l_0_18_28)))
 (let ((?x69488 (* l_0_18_27 l_0_18_27)))
 (let ((?x69486 (* l_0_18_26 l_0_18_26)))
 (let ((?x69484 (* l_0_18_25 l_0_18_25)))
 (let ((?x69482 (* l_0_18_24 l_0_18_24)))
 (let ((?x69480 (* l_0_18_23 l_0_18_23)))
 (let ((?x69478 (* l_0_18_22 l_0_18_22)))
 (let ((?x69461 (+ (* (* 2.0 l_0_18_151) l_0_18_162) (* (* 2.0 l_0_18_152) l_0_18_163))))
 (let ((?x69465 (+ (+ ?x69461 (* (* 2.0 l_0_18_153) l_0_18_164)) (* (* 2.0 l_0_18_154) l_0_18_165))))
 (let ((?x69469 (- (+ ?x69465 (* (* 2.0 l_0_18_155) l_0_18_166)) (* (* 2.0 l_0_18_179) l_0_18_190))))
 (let ((?x69473 (- (- ?x69469 (* (* 2.0 l_0_18_180) l_0_18_191)) (* (* 2.0 l_0_18_181) l_0_18_192))))
 (let ((?x69477 (- (- ?x69473 (* (* 2.0 l_0_18_182) l_0_18_193)) (* (* 2.0 l_0_18_183) l_0_18_194))))
 (let ((?x69491 (- (- (- (- (- (- (- ?x69477 ?x69478) ?x69480) ?x69482) ?x69484) ?x69486) ?x69488) ?x69490)))
 (let ((?x69505 (+ (+ (+ (+ (+ (+ (+ ?x69491 ?x69492) ?x69494) ?x69496) ?x69498) ?x69500) ?x69502) ?x69504)))
 (= ?x69505 0.0)))))))))))))))))))))))
(assert
 (let ((?x68205 (* l_0_18_29 l_0_18_29)))
 (let ((?x68209 (* l_0_18_1 l_0_18_1)))
 (let ((?x50570 (- ?x68209 ?x68205)))
 (let ((?x69564 (- (+ ?x50570 (* (* 2.0 l_0_18_57) l_0_18_63)) (* (* 2.0 l_0_18_85) l_0_18_91))))
 (= ?x69564 0.0))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68223 (* ?x68222 l_0_18_30)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x69575 (* ?x68297 l_0_18_2)))
 (let ((?x69579 (- (+ ?x69575 (* (* 2.0 l_0_18_141) l_0_18_147)) (* (* 2.0 l_0_18_169) l_0_18_175))))
 (let ((?x69584 (+ (+ (- ?x69579 ?x68223) (* (* 2.0 l_0_18_58) l_0_18_63)) (* (* 2.0 l_0_18_59) l_0_18_64))))
 (let ((?x69588 (- (- ?x69584 (* (* 2.0 l_0_18_86) l_0_18_91)) (* (* 2.0 l_0_18_87) l_0_18_92))))
 (= ?x69588 0.0)))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x69026 (* ?x68920 l_0_18_53)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x69024 (* ?x68917 l_0_18_52)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x69022 (* ?x68914 l_0_18_51)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x69020 (* ?x68911 l_0_18_50)))
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68252 (* ?x68222 l_0_18_32)))
 (let ((?x68825 (* 2.0 l_0_18_24)))
 (let ((?x69016 (* ?x68825 l_0_18_9)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x69014 (* ?x68656 l_0_18_8)))
 (let ((?x68820 (* 2.0 l_0_18_22)))
 (let ((?x69012 (* ?x68820 l_0_18_7)))
 (let ((?x68937 (* 2.0 l_0_18_10)))
 (let ((?x69601 (* ?x68937 l_0_18_25)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x69600 (* ?x68297 l_0_18_4)))
 (let ((?x69608 (- (- (- (+ (+ (+ (+ ?x69600 ?x69601) ?x69012) ?x69014) ?x69016) ?x68252) ?x69020) ?x69022)))
 (let ((?x69616 (+ (+ (- (- ?x69608 ?x69024) ?x69026) (* (* 2.0 l_0_18_60) l_0_18_63)) (* (* 2.0 l_0_18_61) l_0_18_64))))
 (let ((?x69622 (- (+ ?x69616 (* (* 2.0 l_0_18_62) l_0_18_65)) (* (* 2.0 l_0_18_88) l_0_18_91))))
 (let ((?x69628 (- (- ?x69622 (* (* 2.0 l_0_18_89) l_0_18_92)) (* (* 2.0 l_0_18_90) l_0_18_93))))
 (= ?x69628 0.0))))))))))))))))))))))))))
(assert
 (let ((?x69654 (* l_0_18_94 l_0_18_94)))
 (let ((?x69652 (* l_0_18_93 l_0_18_93)))
 (let ((?x69650 (* l_0_18_92 l_0_18_92)))
 (let ((?x69648 (* l_0_18_91 l_0_18_91)))
 (let ((?x69646 (* l_0_18_66 l_0_18_66)))
 (let ((?x69644 (* l_0_18_65 l_0_18_65)))
 (let ((?x69642 (* l_0_18_64 l_0_18_64)))
 (let ((?x69640 (* l_0_18_63 l_0_18_63)))
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68283 (* ?x68222 l_0_18_35)))
 (let ((?x69639 (- (* (* 2.0 l_0_18_1) l_0_18_7) ?x68283)))
 (let ((?x69653 (- (- (- (+ (+ (+ (+ ?x69639 ?x69640) ?x69642) ?x69644) ?x69646) ?x69648) ?x69650) ?x69652)))
 (= (- ?x69653 ?x69654) 0.0))))))))))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68289 (* ?x68222 l_0_18_39)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x68299 (* ?x68297 l_0_18_11)))
 (let ((?x50761 (- ?x68299 ?x68289)))
 (let ((?x69668 (+ (+ ?x50761 (* (* 2.0 l_0_18_63) l_0_18_67)) (* (* 2.0 l_0_18_64) l_0_18_68))))
 (let ((?x69674 (+ (+ ?x69668 (* (* 2.0 l_0_18_65) l_0_18_69)) (* (* 2.0 l_0_18_66) l_0_18_70))))
 (let ((?x69680 (- (- ?x69674 (* (* 2.0 l_0_18_91) l_0_18_95)) (* (* 2.0 l_0_18_92) l_0_18_96))))
 (let ((?x69686 (- (- ?x69680 (* (* 2.0 l_0_18_93) l_0_18_97)) (* (* 2.0 l_0_18_94) l_0_18_98))))
 (= ?x69686 0.0)))))))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68307 (* ?x68222 l_0_18_44)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x68300 (* ?x68297 l_0_18_16)))
 (let ((?x69720 (- (- ?x68300 (* (* 2.0 l_0_18_100) l_0_18_91)) (* (* 2.0 l_0_18_101) l_0_18_92))))
 (let ((?x69726 (- (- ?x69720 (* (* 2.0 l_0_18_102) l_0_18_93)) (* (* 2.0 l_0_18_103) l_0_18_94))))
 (let ((?x69731 (+ (+ (- ?x69726 ?x68307) (* (* 2.0 l_0_18_63) l_0_18_72)) (* (* 2.0 l_0_18_64) l_0_18_73))))
 (let ((?x69735 (+ (+ ?x69731 (* (* 2.0 l_0_18_65) l_0_18_74)) (* (* 2.0 l_0_18_66) l_0_18_75))))
 (= ?x69735 0.0))))))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68324 (* ?x68222 l_0_18_50)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x50866 (* ?x68297 l_0_18_22)))
 (let ((?x69754 (- (- ?x50866 (* (* 2.0 l_0_18_106) l_0_18_91)) (* (* 2.0 l_0_18_107) l_0_18_92))))
 (let ((?x69760 (- (- ?x69754 (* (* 2.0 l_0_18_108) l_0_18_93)) (* (* 2.0 l_0_18_109) l_0_18_94))))
 (let ((?x69765 (+ (+ (- ?x69760 ?x68324) (* (* 2.0 l_0_18_63) l_0_18_78)) (* (* 2.0 l_0_18_64) l_0_18_79))))
 (let ((?x69769 (+ (+ ?x69765 (* (* 2.0 l_0_18_65) l_0_18_80)) (* (* 2.0 l_0_18_66) l_0_18_81))))
 (= ?x69769 0.0))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68390 (* ?x68257 l_0_18_33)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68388 (* ?x68254 l_0_18_32)))
 (let ((?x68385 (* 2.0 l_0_18_3)))
 (let ((?x68386 (* ?x68385 l_0_18_5)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68365 (* ?x68364 l_0_18_4)))
 (let ((?x69783 (+ (* (* 2.0 l_0_18_144) l_0_18_147) (* (* 2.0 l_0_18_145) l_0_18_148))))
 (let ((?x69794 (- (+ ?x69783 (* (* 2.0 l_0_18_146) l_0_18_149)) (* (* 2.0 l_0_18_172) l_0_18_175))))
 (let ((?x69798 (- (- ?x69794 (* (* 2.0 l_0_18_173) l_0_18_176)) (* (* 2.0 l_0_18_174) l_0_18_177))))
 (= (- (- (+ (+ ?x69798 ?x68365) ?x68386) ?x68388) ?x68390) 0.0)))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68452 (* ?x68257 l_0_18_36)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68450 (* ?x68254 l_0_18_35)))
 (let ((?x68385 (* 2.0 l_0_18_3)))
 (let ((?x68448 (* ?x68385 l_0_18_8)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68430 (* ?x68364 l_0_18_7)))
 (let ((?x69832 (* l_0_18_178 l_0_18_178)))
 (let ((?x69830 (* l_0_18_177 l_0_18_177)))
 (let ((?x69828 (* l_0_18_176 l_0_18_176)))
 (let ((?x69826 (* l_0_18_175 l_0_18_175)))
 (let ((?x69824 (* l_0_18_150 l_0_18_150)))
 (let ((?x69822 (* l_0_18_149 l_0_18_149)))
 (let ((?x69823 (+ (+ (* l_0_18_147 l_0_18_147) (* l_0_18_148 l_0_18_148)) ?x69822)))
 (let ((?x69835 (+ (+ (- (- (- (- (+ ?x69823 ?x69824) ?x69826) ?x69828) ?x69830) ?x69832) ?x68430) ?x68448)))
 (= (- (- ?x69835 ?x68450) ?x68452) 0.0))))))))))))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x69026 (* ?x68920 l_0_18_53)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x69024 (* ?x68917 l_0_18_52)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x69022 (* ?x68914 l_0_18_51)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x69020 (* ?x68911 l_0_18_50)))
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68579 (* ?x68257 l_0_18_45)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68576 (* ?x68254 l_0_18_44)))
 (let ((?x68825 (* 2.0 l_0_18_24)))
 (let ((?x69016 (* ?x68825 l_0_18_9)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x69014 (* ?x68656 l_0_18_8)))
 (let ((?x68820 (* 2.0 l_0_18_22)))
 (let ((?x69012 (* ?x68820 l_0_18_7)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68543 (* ?x68542 l_0_18_3)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68540 (* ?x68539 l_0_18_2)))
 (let ((?x68937 (* 2.0 l_0_18_10)))
 (let ((?x69601 (* ?x68937 l_0_18_25)))
 (let ((?x50996 (+ (+ ?x69601 (* (* 2.0 l_0_18_147) l_0_18_156)) (* (* 2.0 l_0_18_148) l_0_18_157))))
 (let ((?x51009 (+ (+ ?x50996 (* (* 2.0 l_0_18_149) l_0_18_158)) (* (* 2.0 l_0_18_150) l_0_18_159))))
 (let ((?x69847 (- (- (+ (+ ?x51009 ?x68540) ?x68543) (* (* 2.0 l_0_18_175) l_0_18_184)) (* (* 2.0 l_0_18_176) l_0_18_185))))
 (let ((?x69851 (- (- ?x69847 (* (* 2.0 l_0_18_177) l_0_18_186)) (* (* 2.0 l_0_18_178) l_0_18_187))))
 (let ((?x69858 (- (- (- (- (+ (+ (+ ?x69851 ?x69012) ?x69014) ?x69016) ?x68576) ?x68579) ?x69020) ?x69022)))
 (= (- (- ?x69858 ?x69024) ?x69026) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68671 (* ?x68257 l_0_18_51)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68669 (* ?x68254 l_0_18_50)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x68657 (* ?x68656 l_0_18_3)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68644 (* ?x68364 l_0_18_22)))
 (let ((?x69881 (+ (* (* 2.0 l_0_18_147) l_0_18_162) (* (* 2.0 l_0_18_148) l_0_18_163))))
 (let ((?x69885 (+ (+ ?x69881 (* (* 2.0 l_0_18_149) l_0_18_164)) (* (* 2.0 l_0_18_150) l_0_18_165))))
 (let ((?x69889 (- (- ?x69885 (* (* 2.0 l_0_18_175) l_0_18_190)) (* (* 2.0 l_0_18_176) l_0_18_191))))
 (let ((?x69893 (- (- ?x69889 (* (* 2.0 l_0_18_177) l_0_18_192)) (* (* 2.0 l_0_18_178) l_0_18_193))))
 (= (- (- (+ (+ ?x69893 ?x68644) ?x68657) ?x68669) ?x68671) 0.0))))))))))))))
(assert
 (let ((?x68712 (* l_0_18_6 l_0_18_6)))
 (let ((?x68710 (* l_0_18_5 l_0_18_5)))
 (let ((?x68708 (* l_0_18_4 l_0_18_4)))
 (let ((?x68706 (* l_0_18_34 l_0_18_34)))
 (let ((?x31476 (- (- (* (- l_0_18_32) l_0_18_32) (* l_0_18_33 l_0_18_33)) ?x68706)))
 (= (+ (+ (+ ?x31476 ?x68708) ?x68710) ?x68712) 0.0)))))))
(assert
 (let ((?x68737 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x68734 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x68731 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68728 (* ?x68727 l_0_18_37)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68725 (* ?x68724 l_0_18_36)))
 (let ((?x51234 (+ (+ (- (- (* (* (- 2.0) l_0_18_32) l_0_18_35) ?x68725) ?x68728) ?x68731) ?x68734)))
 (= (+ ?x51234 ?x68737) 0.0))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x29822 (* ?x68727 l_0_18_41)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x29829 (* ?x68724 l_0_18_40)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x29838 (* ?x68722 l_0_18_39)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x29841 (* ?x49938 l_0_18_6)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x29857 (* ?x68249 l_0_18_5)))
 (let ((?x68766 (+ (+ (* (* 2.0 l_0_18_11) l_0_18_4) ?x29857) ?x29841)))
 (= (- (- (- ?x68766 ?x29838) ?x29829) ?x29822) 0.0)))))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68787 (* ?x68727 l_0_18_46)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68784 (* ?x68724 l_0_18_45)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x68781 (* ?x68722 l_0_18_44)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x68778 (* ?x68777 l_0_18_6)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68775 (* ?x68542 l_0_18_5)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68767 (* ?x68539 l_0_18_4)))
 (= (- (- (- (+ (+ ?x68767 ?x68775) ?x68778) ?x68781) ?x68784) ?x68787) 0.0))))))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68832 (* ?x68727 l_0_18_52)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68830 (* ?x68724 l_0_18_51)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x68828 (* ?x68722 l_0_18_50)))
 (let ((?x68825 (* 2.0 l_0_18_24)))
 (let ((?x68826 (* ?x68825 l_0_18_6)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x68823 (* ?x68656 l_0_18_5)))
 (let ((?x68820 (* 2.0 l_0_18_22)))
 (let ((?x68821 (* ?x68820 l_0_18_4)))
 (let ((?x51312 (- (- (- (+ (+ ?x68821 ?x68823) ?x68826) ?x68828) ?x68830) ?x68832)))
 (= ?x51312 0.0)))))))))))))))
(assert
 (let ((?x68886 (* l_0_18_9 l_0_18_9)))
 (let ((?x68884 (* l_0_18_8 l_0_18_8)))
 (let ((?x68882 (* l_0_18_7 l_0_18_7)))
 (let ((?x68880 (* l_0_18_38 l_0_18_38)))
 (let ((?x68878 (* l_0_18_37 l_0_18_37)))
 (let ((?x68876 (* l_0_18_36 l_0_18_36)))
 (let ((?x69942 (- (- (- (* l_0_18_10 l_0_18_10) (* l_0_18_35 l_0_18_35)) ?x68876) ?x68878)))
 (= (+ (+ (+ (- ?x69942 ?x68880) ?x68882) ?x68884) ?x68886) 0.0)))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x68921 (* ?x68920 l_0_18_42)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x68918 (* ?x68917 l_0_18_41)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x68915 (* ?x68914 l_0_18_40)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x68912 (* ?x68911 l_0_18_39)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x68909 (* ?x49938 l_0_18_9)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x68907 (* ?x68249 l_0_18_8)))
 (let ((?x68242 (* 2.0 l_0_18_11)))
 (let ((?x68905 (* ?x68242 l_0_18_7)))
 (let ((?x68937 (* 2.0 l_0_18_10)))
 (let ((?x30056 (* ?x68937 l_0_18_14)))
 (let ((?x31547 (- (- (- (- (+ (+ (+ ?x30056 ?x68905) ?x68907) ?x68909) ?x68912) ?x68915) ?x68918) ?x68921)))
 (= ?x31547 0.0)))))))))))))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x68968 (* ?x68920 l_0_18_47)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x68965 (* ?x68917 l_0_18_46)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x68962 (* ?x68914 l_0_18_45)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x68959 (* ?x68911 l_0_18_44)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x68956 (* ?x68777 l_0_18_9)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68954 (* ?x68542 l_0_18_8)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68952 (* ?x68539 l_0_18_7)))
 (let ((?x68937 (* 2.0 l_0_18_10)))
 (let ((?x68939 (* ?x68937 l_0_18_19)))
 (let ((?x69956 (- (- (- (- (+ (+ (+ ?x68939 ?x68952) ?x68954) ?x68956) ?x68959) ?x68962) ?x68965) ?x68968)))
 (= ?x69956 0.0)))))))))))))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x69026 (* ?x68920 l_0_18_53)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x69024 (* ?x68917 l_0_18_52)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x69022 (* ?x68914 l_0_18_51)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x69020 (* ?x68911 l_0_18_50)))
 (let ((?x68825 (* 2.0 l_0_18_24)))
 (let ((?x69016 (* ?x68825 l_0_18_9)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x69014 (* ?x68656 l_0_18_8)))
 (let ((?x68820 (* 2.0 l_0_18_22)))
 (let ((?x69012 (* ?x68820 l_0_18_7)))
 (let ((?x68937 (* 2.0 l_0_18_10)))
 (let ((?x69601 (* ?x68937 l_0_18_25)))
 (let ((?x69961 (- (- (- (- (+ (+ (+ ?x69601 ?x69012) ?x69014) ?x69016) ?x69020) ?x69022) ?x69024) ?x69026)))
 (= ?x69961 0.0)))))))))))))))))))
(assert
 (let ((?x69081 (* l_0_18_43 l_0_18_43)))
 (let ((?x69079 (* l_0_18_42 l_0_18_42)))
 (let ((?x69077 (* l_0_18_41 l_0_18_41)))
 (let ((?x69075 (* l_0_18_40 l_0_18_40)))
 (let ((?x69073 (* l_0_18_39 l_0_18_39)))
 (let ((?x69071 (* l_0_18_15 l_0_18_15)))
 (let ((?x69069 (* l_0_18_14 l_0_18_14)))
 (let ((?x69056 (* l_0_18_13 l_0_18_13)))
 (let ((?x69971 (+ (+ (+ (* l_0_18_11 l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x69056) ?x69069)))
 (= (- (- (- (- (- (+ ?x69971 ?x69071) ?x69073) ?x69075) ?x69077) ?x69079) ?x69081) 0.0)))))))))))
(assert
 (let ((?x69129 (* 2.0 l_0_18_43)))
 (let ((?x69130 (* ?x69129 l_0_18_48)))
 (let ((?x69125 (* 2.0 l_0_18_42)))
 (let ((?x69126 (* ?x69125 l_0_18_47)))
 (let ((?x69121 (* 2.0 l_0_18_41)))
 (let ((?x69122 (* ?x69121 l_0_18_46)))
 (let ((?x69117 (* 2.0 l_0_18_40)))
 (let ((?x69118 (* ?x69117 l_0_18_45)))
 (let ((?x69113 (* 2.0 l_0_18_39)))
 (let ((?x69114 (* ?x69113 l_0_18_44)))
 (let ((?x69109 (* 2.0 l_0_18_15)))
 (let ((?x69110 (* ?x69109 l_0_18_20)))
 (let ((?x69105 (* 2.0 l_0_18_14)))
 (let ((?x69106 (* ?x69105 l_0_18_19)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x69102 (* ?x49938 l_0_18_18)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x69099 (* ?x68249 l_0_18_17)))
 (let ((?x50391 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_16) ?x69099) ?x69102) ?x69106) ?x69110)))
 (= (- (- (- (- (- ?x50391 ?x69114) ?x69118) ?x69122) ?x69126) ?x69130) 0.0)))))))))))))))))))))
(assert
 (let ((?x69129 (* 2.0 l_0_18_43)))
 (let ((?x69197 (* ?x69129 l_0_18_54)))
 (let ((?x69125 (* 2.0 l_0_18_42)))
 (let ((?x69195 (* ?x69125 l_0_18_53)))
 (let ((?x69121 (* 2.0 l_0_18_41)))
 (let ((?x69193 (* ?x69121 l_0_18_52)))
 (let ((?x69117 (* 2.0 l_0_18_40)))
 (let ((?x69191 (* ?x69117 l_0_18_51)))
 (let ((?x69113 (* 2.0 l_0_18_39)))
 (let ((?x69189 (* ?x69113 l_0_18_50)))
 (let ((?x69109 (* 2.0 l_0_18_15)))
 (let ((?x69167 (* ?x69109 l_0_18_26)))
 (let ((?x69105 (* 2.0 l_0_18_14)))
 (let ((?x69165 (* ?x69105 l_0_18_25)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x69163 (* ?x49938 l_0_18_24)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x69161 (* ?x68249 l_0_18_23)))
 (let ((?x69286 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_22) ?x69161) ?x69163) ?x69165) ?x69167)))
 (let ((?x70010 (- (- (- (- (- ?x69286 ?x69189) ?x69191) ?x69193) ?x69195) ?x69197)))
 (= ?x70010 0.0))))))))))))))))))))))
(assert
 (let ((?x69257 (* l_0_18_49 l_0_18_49)))
 (let ((?x69255 (* l_0_18_48 l_0_18_48)))
 (let ((?x69253 (* l_0_18_47 l_0_18_47)))
 (let ((?x69251 (* l_0_18_46 l_0_18_46)))
 (let ((?x69249 (* l_0_18_45 l_0_18_45)))
 (let ((?x69247 (* l_0_18_44 l_0_18_44)))
 (let ((?x69240 (* l_0_18_21 l_0_18_21)))
 (let ((?x69238 (* l_0_18_20 l_0_18_20)))
 (let ((?x69236 (* l_0_18_19 l_0_18_19)))
 (let ((?x69234 (* l_0_18_18 l_0_18_18)))
 (let ((?x70026 (+ (+ (+ (* l_0_18_16 l_0_18_16) (* l_0_18_17 l_0_18_17)) ?x69234) ?x69236)))
 (let ((?x70033 (- (- (- (- (- (+ (+ ?x70026 ?x69238) ?x69240) ?x69247) ?x69249) ?x69251) ?x69253) ?x69255)))
 (= (- ?x70033 ?x69257) 0.0))))))))))))))
(assert
 (let ((?x69353 (* (* 2.0 l_0_18_49) l_0_18_55)))
 (let ((?x69350 (* (* 2.0 l_0_18_48) l_0_18_54)))
 (let ((?x69347 (* (* 2.0 l_0_18_47) l_0_18_53)))
 (let ((?x69344 (* (* 2.0 l_0_18_46) l_0_18_52)))
 (let ((?x69341 (* (* 2.0 l_0_18_45) l_0_18_51)))
 (let ((?x69338 (* (* 2.0 l_0_18_44) l_0_18_50)))
 (let ((?x69330 (* (* 2.0 l_0_18_21) l_0_18_27)))
 (let ((?x69327 (* (* 2.0 l_0_18_20) l_0_18_26)))
 (let ((?x69324 (* (* 2.0 l_0_18_19) l_0_18_25)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x69309 (* ?x68777 l_0_18_24)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x69304 (* ?x68542 l_0_18_23)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x69302 (* ?x68539 l_0_18_22)))
 (let ((?x31658 (- (- (+ (+ (+ (+ (+ ?x69302 ?x69304) ?x69309) ?x69324) ?x69327) ?x69330) ?x69338) ?x69341)))
 (= (- (- (- (- ?x31658 ?x69344) ?x69347) ?x69350) ?x69353) 0.0))))))))))))))))))
(assert
 (let ((?x69504 (* l_0_18_56 l_0_18_56)))
 (let ((?x69502 (* l_0_18_55 l_0_18_55)))
 (let ((?x69500 (* l_0_18_54 l_0_18_54)))
 (let ((?x69498 (* l_0_18_53 l_0_18_53)))
 (let ((?x69496 (* l_0_18_52 l_0_18_52)))
 (let ((?x69494 (* l_0_18_51 l_0_18_51)))
 (let ((?x69492 (* l_0_18_50 l_0_18_50)))
 (let ((?x69490 (* l_0_18_28 l_0_18_28)))
 (let ((?x69488 (* l_0_18_27 l_0_18_27)))
 (let ((?x69486 (* l_0_18_26 l_0_18_26)))
 (let ((?x69484 (* l_0_18_25 l_0_18_25)))
 (let ((?x69482 (* l_0_18_24 l_0_18_24)))
 (let ((?x51613 (+ (+ (+ (* l_0_18_22 l_0_18_22) (* l_0_18_23 l_0_18_23)) ?x69482) ?x69484)))
 (let ((?x51555 (- (- (- (- (+ (+ (+ ?x51613 ?x69486) ?x69488) ?x69490) ?x69492) ?x69494) ?x69496) ?x69498)))
 (= (- (- (- ?x51555 ?x69500) ?x69502) ?x69504) 0.0))))))))))))))))
(assert
 (let ((?x68205 (* l_0_18_29 l_0_18_29)))
 (let ((?x68209 (* l_0_18_1 l_0_18_1)))
 (let ((?x50570 (- ?x68209 ?x68205)))
 (= ?x50570 0.0)))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68223 (* ?x68222 l_0_18_30)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x69575 (* ?x68297 l_0_18_2)))
 (= (- ?x69575 ?x68223) 0.0))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68252 (* ?x68222 l_0_18_32)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x69600 (* ?x68297 l_0_18_4)))
 (= (- ?x69600 ?x68252) 0.0))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68283 (* ?x68222 l_0_18_35)))
 (let ((?x69639 (- (* (* 2.0 l_0_18_1) l_0_18_7) ?x68283)))
 (= ?x69639 0.0)))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68289 (* ?x68222 l_0_18_39)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x68299 (* ?x68297 l_0_18_11)))
 (let ((?x50761 (- ?x68299 ?x68289)))
 (= ?x50761 0.0)))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68307 (* ?x68222 l_0_18_44)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x68300 (* ?x68297 l_0_18_16)))
 (= (- ?x68300 ?x68307) 0.0))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68324 (* ?x68222 l_0_18_50)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x50866 (* ?x68297 l_0_18_22)))
 (let ((?x51617 (- (+ (- ?x50866 ?x68324) (* (* 2.0 l_0_18_57) l_0_18_60)) (* (* 2.0 l_0_18_85) l_0_18_88))))
 (= ?x51617 0.0)))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68390 (* ?x68257 l_0_18_33)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68388 (* ?x68254 l_0_18_32)))
 (let ((?x68385 (* 2.0 l_0_18_3)))
 (let ((?x68386 (* ?x68385 l_0_18_5)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68365 (* ?x68364 l_0_18_4)))
 (= (- (- (+ ?x68365 ?x68386) ?x68388) ?x68390) 0.0))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68452 (* ?x68257 l_0_18_36)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68450 (* ?x68254 l_0_18_35)))
 (let ((?x68385 (* 2.0 l_0_18_3)))
 (let ((?x68448 (* ?x68385 l_0_18_8)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68430 (* ?x68364 l_0_18_7)))
 (= (- (- (+ ?x68430 ?x68448) ?x68450) ?x68452) 0.0))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68579 (* ?x68257 l_0_18_45)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68576 (* ?x68254 l_0_18_44)))
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68252 (* ?x68222 l_0_18_32)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68543 (* ?x68542 l_0_18_3)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68540 (* ?x68539 l_0_18_2)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x69600 (* ?x68297 l_0_18_4)))
 (= (- (- (- (+ (+ ?x69600 ?x68540) ?x68543) ?x68252) ?x68576) ?x68579) 0.0))))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68671 (* ?x68257 l_0_18_51)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68669 (* ?x68254 l_0_18_50)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x68657 (* ?x68656 l_0_18_3)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68644 (* ?x68364 l_0_18_22)))
 (let ((?x70089 (- (* (* 2.0 l_0_18_141) l_0_18_144) (* (* 2.0 l_0_18_169) l_0_18_172))))
 (let ((?x70095 (+ (- (- (+ (+ ?x70089 ?x68644) ?x68657) ?x68669) ?x68671) (* (* 2.0 l_0_18_58) l_0_18_60))))
 (let ((?x70099 (- (+ ?x70095 (* (* 2.0 l_0_18_59) l_0_18_61)) (* (* 2.0 l_0_18_86) l_0_18_88))))
 (= (- ?x70099 (* (* 2.0 l_0_18_87) l_0_18_89)) 0.0)))))))))))))
(assert
 (let ((?x68712 (* l_0_18_6 l_0_18_6)))
 (let ((?x68710 (* l_0_18_5 l_0_18_5)))
 (let ((?x68708 (* l_0_18_4 l_0_18_4)))
 (let ((?x68706 (* l_0_18_34 l_0_18_34)))
 (let ((?x31476 (- (- (* (- l_0_18_32) l_0_18_32) (* l_0_18_33 l_0_18_33)) ?x68706)))
 (= (+ (+ (+ ?x31476 ?x68708) ?x68710) ?x68712) 0.0)))))))
(assert
 (let ((?x68737 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x68734 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x68731 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68728 (* ?x68727 l_0_18_37)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68725 (* ?x68724 l_0_18_36)))
 (let ((?x51234 (+ (+ (- (- (* (* (- 2.0) l_0_18_32) l_0_18_35) ?x68725) ?x68728) ?x68731) ?x68734)))
 (= (+ ?x51234 ?x68737) 0.0))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x29822 (* ?x68727 l_0_18_41)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x29829 (* ?x68724 l_0_18_40)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x29838 (* ?x68722 l_0_18_39)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x29841 (* ?x49938 l_0_18_6)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x29857 (* ?x68249 l_0_18_5)))
 (let ((?x68766 (+ (+ (* (* 2.0 l_0_18_11) l_0_18_4) ?x29857) ?x29841)))
 (= (- (- (- ?x68766 ?x29838) ?x29829) ?x29822) 0.0)))))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68787 (* ?x68727 l_0_18_46)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68784 (* ?x68724 l_0_18_45)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x68781 (* ?x68722 l_0_18_44)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x68778 (* ?x68777 l_0_18_6)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68775 (* ?x68542 l_0_18_5)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68767 (* ?x68539 l_0_18_4)))
 (= (- (- (- (+ (+ ?x68767 ?x68775) ?x68778) ?x68781) ?x68784) ?x68787) 0.0))))))))))))))
(assert
 (let ((?x70148 (* l_0_18_90 l_0_18_90)))
 (let ((?x70146 (* l_0_18_89 l_0_18_89)))
 (let ((?x70144 (* l_0_18_88 l_0_18_88)))
 (let ((?x70142 (* l_0_18_62 l_0_18_62)))
 (let ((?x70140 (* l_0_18_61 l_0_18_61)))
 (let ((?x70138 (* l_0_18_60 l_0_18_60)))
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68832 (* ?x68727 l_0_18_52)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68830 (* ?x68724 l_0_18_51)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x68828 (* ?x68722 l_0_18_50)))
 (let ((?x68825 (* 2.0 l_0_18_24)))
 (let ((?x68826 (* ?x68825 l_0_18_6)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x68823 (* ?x68656 l_0_18_5)))
 (let ((?x68820 (* 2.0 l_0_18_22)))
 (let ((?x68821 (* ?x68820 l_0_18_4)))
 (let ((?x51312 (- (- (- (+ (+ ?x68821 ?x68823) ?x68826) ?x68828) ?x68830) ?x68832)))
 (= (- (- (- (+ (+ (+ ?x51312 ?x70138) ?x70140) ?x70142) ?x70144) ?x70146) ?x70148) 0.0)))))))))))))))))))))
(assert
 (let ((?x68886 (* l_0_18_9 l_0_18_9)))
 (let ((?x68884 (* l_0_18_8 l_0_18_8)))
 (let ((?x68882 (* l_0_18_7 l_0_18_7)))
 (let ((?x68880 (* l_0_18_38 l_0_18_38)))
 (let ((?x68878 (* l_0_18_37 l_0_18_37)))
 (let ((?x68876 (* l_0_18_36 l_0_18_36)))
 (let ((?x69942 (- (- (- (* l_0_18_10 l_0_18_10) (* l_0_18_35 l_0_18_35)) ?x68876) ?x68878)))
 (= (+ (+ (+ (- ?x69942 ?x68880) ?x68882) ?x68884) ?x68886) 0.0)))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x68921 (* ?x68920 l_0_18_42)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x68918 (* ?x68917 l_0_18_41)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x68915 (* ?x68914 l_0_18_40)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x68912 (* ?x68911 l_0_18_39)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x68909 (* ?x49938 l_0_18_9)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x68907 (* ?x68249 l_0_18_8)))
 (let ((?x68242 (* 2.0 l_0_18_11)))
 (let ((?x68905 (* ?x68242 l_0_18_7)))
 (let ((?x68937 (* 2.0 l_0_18_10)))
 (let ((?x30056 (* ?x68937 l_0_18_14)))
 (let ((?x31547 (- (- (- (- (+ (+ (+ ?x30056 ?x68905) ?x68907) ?x68909) ?x68912) ?x68915) ?x68918) ?x68921)))
 (= ?x31547 0.0)))))))))))))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x68968 (* ?x68920 l_0_18_47)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x68965 (* ?x68917 l_0_18_46)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x68962 (* ?x68914 l_0_18_45)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x68959 (* ?x68911 l_0_18_44)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x68956 (* ?x68777 l_0_18_9)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68954 (* ?x68542 l_0_18_8)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68952 (* ?x68539 l_0_18_7)))
 (let ((?x68937 (* 2.0 l_0_18_10)))
 (let ((?x68939 (* ?x68937 l_0_18_19)))
 (let ((?x69956 (- (- (- (- (+ (+ (+ ?x68939 ?x68952) ?x68954) ?x68956) ?x68959) ?x68962) ?x68965) ?x68968)))
 (= ?x69956 0.0)))))))))))))))))))
(assert
 (let ((?x69081 (* l_0_18_43 l_0_18_43)))
 (let ((?x69079 (* l_0_18_42 l_0_18_42)))
 (let ((?x69077 (* l_0_18_41 l_0_18_41)))
 (let ((?x69075 (* l_0_18_40 l_0_18_40)))
 (let ((?x69073 (* l_0_18_39 l_0_18_39)))
 (let ((?x69071 (* l_0_18_15 l_0_18_15)))
 (let ((?x69069 (* l_0_18_14 l_0_18_14)))
 (let ((?x69056 (* l_0_18_13 l_0_18_13)))
 (let ((?x69971 (+ (+ (+ (* l_0_18_11 l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x69056) ?x69069)))
 (= (- (- (- (- (- (+ ?x69971 ?x69071) ?x69073) ?x69075) ?x69077) ?x69079) ?x69081) 0.0)))))))))))
(assert
 (let ((?x69129 (* 2.0 l_0_18_43)))
 (let ((?x69130 (* ?x69129 l_0_18_48)))
 (let ((?x69125 (* 2.0 l_0_18_42)))
 (let ((?x69126 (* ?x69125 l_0_18_47)))
 (let ((?x69121 (* 2.0 l_0_18_41)))
 (let ((?x69122 (* ?x69121 l_0_18_46)))
 (let ((?x69117 (* 2.0 l_0_18_40)))
 (let ((?x69118 (* ?x69117 l_0_18_45)))
 (let ((?x69113 (* 2.0 l_0_18_39)))
 (let ((?x69114 (* ?x69113 l_0_18_44)))
 (let ((?x69109 (* 2.0 l_0_18_15)))
 (let ((?x69110 (* ?x69109 l_0_18_20)))
 (let ((?x69105 (* 2.0 l_0_18_14)))
 (let ((?x69106 (* ?x69105 l_0_18_19)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x69102 (* ?x49938 l_0_18_18)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x69099 (* ?x68249 l_0_18_17)))
 (let ((?x50391 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_16) ?x69099) ?x69102) ?x69106) ?x69110)))
 (= (- (- (- (- (- ?x50391 ?x69114) ?x69118) ?x69122) ?x69126) ?x69130) 0.0)))))))))))))))))))))
(assert
 (let ((?x69129 (* 2.0 l_0_18_43)))
 (let ((?x69197 (* ?x69129 l_0_18_54)))
 (let ((?x69125 (* 2.0 l_0_18_42)))
 (let ((?x69195 (* ?x69125 l_0_18_53)))
 (let ((?x69121 (* 2.0 l_0_18_41)))
 (let ((?x69193 (* ?x69121 l_0_18_52)))
 (let ((?x69117 (* 2.0 l_0_18_40)))
 (let ((?x69191 (* ?x69117 l_0_18_51)))
 (let ((?x69113 (* 2.0 l_0_18_39)))
 (let ((?x69189 (* ?x69113 l_0_18_50)))
 (let ((?x69109 (* 2.0 l_0_18_15)))
 (let ((?x69167 (* ?x69109 l_0_18_26)))
 (let ((?x69105 (* 2.0 l_0_18_14)))
 (let ((?x69165 (* ?x69105 l_0_18_25)))
 (let ((?x49938 (* 2.0 l_0_18_13)))
 (let ((?x69163 (* ?x49938 l_0_18_24)))
 (let ((?x68249 (* 2.0 l_0_18_12)))
 (let ((?x69161 (* ?x68249 l_0_18_23)))
 (let ((?x69286 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_22) ?x69161) ?x69163) ?x69165) ?x69167)))
 (let ((?x70010 (- (- (- (- (- ?x69286 ?x69189) ?x69191) ?x69193) ?x69195) ?x69197)))
 (let ((?x70165 (+ (+ ?x70010 (* (* 2.0 l_0_18_60) l_0_18_67)) (* (* 2.0 l_0_18_61) l_0_18_68))))
 (let ((?x70169 (- (+ ?x70165 (* (* 2.0 l_0_18_62) l_0_18_69)) (* (* 2.0 l_0_18_88) l_0_18_95))))
 (let ((?x70173 (- (- ?x70169 (* (* 2.0 l_0_18_89) l_0_18_96)) (* (* 2.0 l_0_18_90) l_0_18_97))))
 (= ?x70173 0.0)))))))))))))))))))))))))
(assert
 (let ((?x69257 (* l_0_18_49 l_0_18_49)))
 (let ((?x69255 (* l_0_18_48 l_0_18_48)))
 (let ((?x69253 (* l_0_18_47 l_0_18_47)))
 (let ((?x69251 (* l_0_18_46 l_0_18_46)))
 (let ((?x69249 (* l_0_18_45 l_0_18_45)))
 (let ((?x69247 (* l_0_18_44 l_0_18_44)))
 (let ((?x69240 (* l_0_18_21 l_0_18_21)))
 (let ((?x69238 (* l_0_18_20 l_0_18_20)))
 (let ((?x69236 (* l_0_18_19 l_0_18_19)))
 (let ((?x69234 (* l_0_18_18 l_0_18_18)))
 (let ((?x70026 (+ (+ (+ (* l_0_18_16 l_0_18_16) (* l_0_18_17 l_0_18_17)) ?x69234) ?x69236)))
 (let ((?x70033 (- (- (- (- (- (+ (+ ?x70026 ?x69238) ?x69240) ?x69247) ?x69249) ?x69251) ?x69253) ?x69255)))
 (= (- ?x70033 ?x69257) 0.0))))))))))))))
(assert
 (let ((?x69353 (* (* 2.0 l_0_18_49) l_0_18_55)))
 (let ((?x69350 (* (* 2.0 l_0_18_48) l_0_18_54)))
 (let ((?x69347 (* (* 2.0 l_0_18_47) l_0_18_53)))
 (let ((?x69344 (* (* 2.0 l_0_18_46) l_0_18_52)))
 (let ((?x69341 (* (* 2.0 l_0_18_45) l_0_18_51)))
 (let ((?x69338 (* (* 2.0 l_0_18_44) l_0_18_50)))
 (let ((?x69330 (* (* 2.0 l_0_18_21) l_0_18_27)))
 (let ((?x69327 (* (* 2.0 l_0_18_20) l_0_18_26)))
 (let ((?x69324 (* (* 2.0 l_0_18_19) l_0_18_25)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x69309 (* ?x68777 l_0_18_24)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x69304 (* ?x68542 l_0_18_23)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x69302 (* ?x68539 l_0_18_22)))
 (let ((?x70204 (- (* (* (- 2.0) l_0_18_100) l_0_18_88) (* (* 2.0 l_0_18_101) l_0_18_89))))
 (let ((?x70209 (+ (+ (+ (- ?x70204 (* (* 2.0 l_0_18_102) l_0_18_90)) ?x69302) ?x69304) ?x69309)))
 (let ((?x70216 (- (- (- (- (+ (+ (+ ?x70209 ?x69324) ?x69327) ?x69330) ?x69338) ?x69341) ?x69344) ?x69347)))
 (let ((?x70222 (+ (+ (- (- ?x70216 ?x69350) ?x69353) (* (* 2.0 l_0_18_60) l_0_18_72)) (* (* 2.0 l_0_18_61) l_0_18_73))))
 (= (+ ?x70222 (* (* 2.0 l_0_18_62) l_0_18_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x69504 (* l_0_18_56 l_0_18_56)))
 (let ((?x69502 (* l_0_18_55 l_0_18_55)))
 (let ((?x69500 (* l_0_18_54 l_0_18_54)))
 (let ((?x69498 (* l_0_18_53 l_0_18_53)))
 (let ((?x69496 (* l_0_18_52 l_0_18_52)))
 (let ((?x69494 (* l_0_18_51 l_0_18_51)))
 (let ((?x69492 (* l_0_18_50 l_0_18_50)))
 (let ((?x69490 (* l_0_18_28 l_0_18_28)))
 (let ((?x69488 (* l_0_18_27 l_0_18_27)))
 (let ((?x69486 (* l_0_18_26 l_0_18_26)))
 (let ((?x69484 (* l_0_18_25 l_0_18_25)))
 (let ((?x69482 (* l_0_18_24 l_0_18_24)))
 (let ((?x69480 (* l_0_18_23 l_0_18_23)))
 (let ((?x69478 (* l_0_18_22 l_0_18_22)))
 (let ((?x70264 (- (* (* (- 2.0) l_0_18_106) l_0_18_88) (* (* 2.0 l_0_18_107) l_0_18_89))))
 (let ((?x70269 (+ (+ (+ (- ?x70264 (* (* 2.0 l_0_18_108) l_0_18_90)) ?x69478) ?x69480) ?x69482)))
 (let ((?x70276 (- (- (- (+ (+ (+ (+ ?x70269 ?x69484) ?x69486) ?x69488) ?x69490) ?x69492) ?x69494) ?x69496)))
 (let ((?x70282 (+ (- (- (- (- ?x70276 ?x69498) ?x69500) ?x69502) ?x69504) (* (* 2.0 l_0_18_60) l_0_18_78))))
 (let ((?x70286 (+ (+ ?x70282 (* (* 2.0 l_0_18_61) l_0_18_79)) (* (* 2.0 l_0_18_62) l_0_18_80))))
 (= ?x70286 0.0)))))))))))))))))))))
(assert
 (let ((?x68205 (* l_0_18_29 l_0_18_29)))
 (let ((?x68209 (* l_0_18_1 l_0_18_1)))
 (let ((?x50570 (- ?x68209 ?x68205)))
 (= ?x50570 0.0)))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68223 (* ?x68222 l_0_18_30)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x69575 (* ?x68297 l_0_18_2)))
 (let ((?x70328 (- (- ?x69575 (* (* 2.0 l_0_18_113) l_0_18_128)) (* (* 2.0 l_0_18_197) l_0_18_212))))
 (= (- (- ?x70328 (* (* 2.0 l_0_18_225) l_0_18_240)) ?x68223) 0.0)))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68283 (* ?x68222 l_0_18_35)))
 (let ((?x69639 (- (* (* 2.0 l_0_18_1) l_0_18_7) ?x68283)))
 (= ?x69639 0.0)))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68307 (* ?x68222 l_0_18_44)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x68300 (* ?x68297 l_0_18_16)))
 (= (- ?x68300 ?x68307) 0.0))))))
(assert
 (let ((?x68222 (* 2.0 l_0_18_29)))
 (let ((?x68324 (* ?x68222 l_0_18_50)))
 (let ((?x68297 (* 2.0 l_0_18_1)))
 (let ((?x50866 (* ?x68297 l_0_18_22)))
 (let ((?x70358 (- (- ?x50866 (* (* 2.0 l_0_18_100) l_0_18_86)) (* (* 2.0 l_0_18_101) l_0_18_87))))
 (let ((?x70362 (- (+ ?x70358 (* (* 2.0 l_0_18_141) l_0_18_156)) (* (* 2.0 l_0_18_169) l_0_18_184))))
 (let ((?x70367 (+ (+ (- ?x70362 ?x68324) (* (* 2.0 l_0_18_58) l_0_18_72)) (* (* 2.0 l_0_18_59) l_0_18_73))))
 (= ?x70367 0.0)))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68390 (* ?x68257 l_0_18_33)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68388 (* ?x68254 l_0_18_32)))
 (let ((?x68385 (* 2.0 l_0_18_3)))
 (let ((?x68386 (* ?x68385 l_0_18_5)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68365 (* ?x68364 l_0_18_4)))
 (let ((?x70400 (- (* (* (- 2.0) l_0_18_116) l_0_18_128) (* (* 2.0 l_0_18_117) l_0_18_129))))
 (let ((?x70405 (- (+ (- ?x70400 (* (* 2.0 l_0_18_118) l_0_18_130)) ?x68365) (* (* 2.0 l_0_18_200) l_0_18_212))))
 (let ((?x70409 (- (- ?x70405 (* (* 2.0 l_0_18_201) l_0_18_213)) (* (* 2.0 l_0_18_202) l_0_18_214))))
 (let ((?x70413 (- (- ?x70409 (* (* 2.0 l_0_18_228) l_0_18_240)) (* (* 2.0 l_0_18_229) l_0_18_241))))
 (let ((?x70418 (- (- (+ (- ?x70413 (* (* 2.0 l_0_18_230) l_0_18_242)) ?x68386) ?x68388) ?x68390)))
 (= ?x70418 0.0)))))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68452 (* ?x68257 l_0_18_36)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68450 (* ?x68254 l_0_18_35)))
 (let ((?x68385 (* 2.0 l_0_18_3)))
 (let ((?x68448 (* ?x68385 l_0_18_8)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68430 (* ?x68364 l_0_18_7)))
 (let ((?x70481 (- (* (* (- 2.0) l_0_18_119) l_0_18_128) (* (* 2.0 l_0_18_120) l_0_18_129))))
 (let ((?x70485 (- (- ?x70481 (* (* 2.0 l_0_18_121) l_0_18_130)) (* (* 2.0 l_0_18_122) l_0_18_131))))
 (let ((?x70490 (- (- (+ ?x70485 ?x68430) (* (* 2.0 l_0_18_203) l_0_18_212)) (* (* 2.0 l_0_18_204) l_0_18_213))))
 (let ((?x70494 (- (- ?x70490 (* (* 2.0 l_0_18_205) l_0_18_214)) (* (* 2.0 l_0_18_206) l_0_18_215))))
 (let ((?x70498 (- (- ?x70494 (* (* 2.0 l_0_18_231) l_0_18_240)) (* (* 2.0 l_0_18_232) l_0_18_241))))
 (let ((?x70502 (- (- ?x70498 (* (* 2.0 l_0_18_233) l_0_18_242)) (* (* 2.0 l_0_18_234) l_0_18_243))))
 (= (- (- (+ ?x70502 ?x68448) ?x68450) ?x68452) 0.0))))))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68579 (* ?x68257 l_0_18_45)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68576 (* ?x68254 l_0_18_44)))
 (let ((?x70602 (* l_0_18_245 l_0_18_245)))
 (let ((?x70600 (* l_0_18_244 l_0_18_244)))
 (let ((?x70598 (* l_0_18_243 l_0_18_243)))
 (let ((?x70596 (* l_0_18_242 l_0_18_242)))
 (let ((?x70594 (* l_0_18_241 l_0_18_241)))
 (let ((?x70592 (* l_0_18_240 l_0_18_240)))
 (let ((?x70590 (* l_0_18_217 l_0_18_217)))
 (let ((?x70588 (* l_0_18_216 l_0_18_216)))
 (let ((?x70586 (* l_0_18_215 l_0_18_215)))
 (let ((?x70584 (* l_0_18_214 l_0_18_214)))
 (let ((?x70582 (* l_0_18_213 l_0_18_213)))
 (let ((?x70580 (* l_0_18_212 l_0_18_212)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68543 (* ?x68542 l_0_18_3)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68540 (* ?x68539 l_0_18_2)))
 (let ((?x51735 (- (* (* (- 1.0) l_0_18_128) l_0_18_128) (* (* 1.0 l_0_18_129) l_0_18_129))))
 (let ((?x70571 (- (- ?x51735 (* (* 1.0 l_0_18_130) l_0_18_130)) (* (* 1.0 l_0_18_131) l_0_18_131))))
 (let ((?x70577 (- (- ?x70571 (* (* 1.0 l_0_18_132) l_0_18_132)) (* (* 1.0 l_0_18_133) l_0_18_133))))
 (let ((?x70589 (- (- (- (- (- (+ (+ ?x70577 ?x68540) ?x68543) ?x70580) ?x70582) ?x70584) ?x70586) ?x70588)))
 (let ((?x70603 (- (- (- (- (- (- (- ?x70589 ?x70590) ?x70592) ?x70594) ?x70596) ?x70598) ?x70600) ?x70602)))
 (= (- (- ?x70603 ?x68576) ?x68579) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x68257 (* 2.0 l_0_18_31)))
 (let ((?x68671 (* ?x68257 l_0_18_51)))
 (let ((?x68254 (* 2.0 l_0_18_30)))
 (let ((?x68669 (* ?x68254 l_0_18_50)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x68657 (* ?x68656 l_0_18_3)))
 (let ((?x68364 (* 2.0 l_0_18_2)))
 (let ((?x68644 (* ?x68364 l_0_18_22)))
 (let ((?x32011 (- (* (* (- 2.0) l_0_18_128) l_0_18_134) (* (* 2.0 l_0_18_129) l_0_18_135))))
 (let ((?x70629 (- (- ?x32011 (* (* 2.0 l_0_18_130) l_0_18_136)) (* (* 2.0 l_0_18_131) l_0_18_137))))
 (let ((?x70635 (- (- ?x70629 (* (* 2.0 l_0_18_132) l_0_18_138)) (* (* 2.0 l_0_18_133) l_0_18_139))))
 (let ((?x70639 (+ (+ ?x70635 (* (* 2.0 l_0_18_142) l_0_18_156)) (* (* 2.0 l_0_18_143) l_0_18_157))))
 (let ((?x70643 (- (- ?x70639 (* (* 2.0 l_0_18_170) l_0_18_184)) (* (* 2.0 l_0_18_171) l_0_18_185))))
 (let ((?x70650 (- (- (+ ?x70643 ?x68644) (* (* 2.0 l_0_18_212) l_0_18_218)) (* (* 2.0 l_0_18_213) l_0_18_219))))
 (let ((?x70656 (- (- ?x70650 (* (* 2.0 l_0_18_214) l_0_18_220)) (* (* 2.0 l_0_18_215) l_0_18_221))))
 (let ((?x70662 (- (- ?x70656 (* (* 2.0 l_0_18_216) l_0_18_222)) (* (* 2.0 l_0_18_217) l_0_18_223))))
 (let ((?x70669 (- (- (+ ?x70662 ?x68657) (* (* 2.0 l_0_18_240) l_0_18_246)) (* (* 2.0 l_0_18_241) l_0_18_247))))
 (let ((?x70675 (- (- ?x70669 (* (* 2.0 l_0_18_242) l_0_18_248)) (* (* 2.0 l_0_18_243) l_0_18_249))))
 (let ((?x70681 (- (- ?x70675 (* (* 2.0 l_0_18_244) l_0_18_250)) (* (* 2.0 l_0_18_245) l_0_18_251))))
 (= (- (- ?x70681 ?x68669) ?x68671) 0.0)))))))))))))))))))))
(assert
 (let ((?x68712 (* l_0_18_6 l_0_18_6)))
 (let ((?x68710 (* l_0_18_5 l_0_18_5)))
 (let ((?x68708 (* l_0_18_4 l_0_18_4)))
 (let ((?x68706 (* l_0_18_34 l_0_18_34)))
 (let ((?x31476 (- (- (* (- l_0_18_32) l_0_18_32) (* l_0_18_33 l_0_18_33)) ?x68706)))
 (= (+ (+ (+ ?x31476 ?x68708) ?x68710) ?x68712) 0.0)))))))
(assert
 (let ((?x68737 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x68734 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x68731 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68728 (* ?x68727 l_0_18_37)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68725 (* ?x68724 l_0_18_36)))
 (let ((?x51234 (+ (+ (- (- (* (* (- 2.0) l_0_18_32) l_0_18_35) ?x68725) ?x68728) ?x68731) ?x68734)))
 (= (+ ?x51234 ?x68737) 0.0))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68787 (* ?x68727 l_0_18_46)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68784 (* ?x68724 l_0_18_45)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x68781 (* ?x68722 l_0_18_44)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x68778 (* ?x68777 l_0_18_6)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68775 (* ?x68542 l_0_18_5)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68767 (* ?x68539 l_0_18_4)))
 (= (- (- (- (+ (+ ?x68767 ?x68775) ?x68778) ?x68781) ?x68784) ?x68787) 0.0))))))))))))))
(assert
 (let ((?x68727 (* 2.0 l_0_18_34)))
 (let ((?x68832 (* ?x68727 l_0_18_52)))
 (let ((?x68724 (* 2.0 l_0_18_33)))
 (let ((?x68830 (* ?x68724 l_0_18_51)))
 (let ((?x68722 (* 2.0 l_0_18_32)))
 (let ((?x68828 (* ?x68722 l_0_18_50)))
 (let ((?x68825 (* 2.0 l_0_18_24)))
 (let ((?x68826 (* ?x68825 l_0_18_6)))
 (let ((?x68656 (* 2.0 l_0_18_23)))
 (let ((?x68823 (* ?x68656 l_0_18_5)))
 (let ((?x68820 (* 2.0 l_0_18_22)))
 (let ((?x68821 (* ?x68820 l_0_18_4)))
 (let ((?x51955 (+ (* (* 2.0 l_0_18_144) l_0_18_156) (* (* 2.0 l_0_18_145) l_0_18_157))))
 (let ((?x70740 (- (+ ?x51955 (* (* 2.0 l_0_18_146) l_0_18_158)) (* (* 2.0 l_0_18_172) l_0_18_184))))
 (let ((?x70744 (- (- ?x70740 (* (* 2.0 l_0_18_173) l_0_18_185)) (* (* 2.0 l_0_18_174) l_0_18_186))))
 (= (- (- (- (+ (+ (+ ?x70744 ?x68821) ?x68823) ?x68826) ?x68828) ?x68830) ?x68832) 0.0)))))))))))))))))
(assert
 (let ((?x68886 (* l_0_18_9 l_0_18_9)))
 (let ((?x68884 (* l_0_18_8 l_0_18_8)))
 (let ((?x68882 (* l_0_18_7 l_0_18_7)))
 (let ((?x68880 (* l_0_18_38 l_0_18_38)))
 (let ((?x68878 (* l_0_18_37 l_0_18_37)))
 (let ((?x68876 (* l_0_18_36 l_0_18_36)))
 (let ((?x69942 (- (- (- (* l_0_18_10 l_0_18_10) (* l_0_18_35 l_0_18_35)) ?x68876) ?x68878)))
 (= (+ (+ (+ (- ?x69942 ?x68880) ?x68882) ?x68884) ?x68886) 0.0)))))))))
(assert
 (let ((?x68920 (* 2.0 l_0_18_38)))
 (let ((?x68968 (* ?x68920 l_0_18_47)))
 (let ((?x68917 (* 2.0 l_0_18_37)))
 (let ((?x68965 (* ?x68917 l_0_18_46)))
 (let ((?x68914 (* 2.0 l_0_18_36)))
 (let ((?x68962 (* ?x68914 l_0_18_45)))
 (let ((?x68911 (* 2.0 l_0_18_35)))
 (let ((?x68959 (* ?x68911 l_0_18_44)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x68956 (* ?x68777 l_0_18_9)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x68954 (* ?x68542 l_0_18_8)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x68952 (* ?x68539 l_0_18_7)))
 (let ((?x68937 (* 2.0 l_0_18_10)))
 (let ((?x68939 (* ?x68937 l_0_18_19)))
 (let ((?x69956 (- (- (- (- (+ (+ (+ ?x68939 ?x68952) ?x68954) ?x68956) ?x68959) ?x68962) ?x68965) ?x68968)))
 (= ?x69956 0.0)))))))))))))))))))
(assert
 (let ((?x69257 (* l_0_18_49 l_0_18_49)))
 (let ((?x69255 (* l_0_18_48 l_0_18_48)))
 (let ((?x69253 (* l_0_18_47 l_0_18_47)))
 (let ((?x69251 (* l_0_18_46 l_0_18_46)))
 (let ((?x69249 (* l_0_18_45 l_0_18_45)))
 (let ((?x69247 (* l_0_18_44 l_0_18_44)))
 (let ((?x69240 (* l_0_18_21 l_0_18_21)))
 (let ((?x69238 (* l_0_18_20 l_0_18_20)))
 (let ((?x69236 (* l_0_18_19 l_0_18_19)))
 (let ((?x69234 (* l_0_18_18 l_0_18_18)))
 (let ((?x70026 (+ (+ (+ (* l_0_18_16 l_0_18_16) (* l_0_18_17 l_0_18_17)) ?x69234) ?x69236)))
 (let ((?x70033 (- (- (- (- (- (+ (+ ?x70026 ?x69238) ?x69240) ?x69247) ?x69249) ?x69251) ?x69253) ?x69255)))
 (= (- ?x70033 ?x69257) 0.0))))))))))))))
(assert
 (let ((?x69353 (* (* 2.0 l_0_18_49) l_0_18_55)))
 (let ((?x69350 (* (* 2.0 l_0_18_48) l_0_18_54)))
 (let ((?x69347 (* (* 2.0 l_0_18_47) l_0_18_53)))
 (let ((?x69344 (* (* 2.0 l_0_18_46) l_0_18_52)))
 (let ((?x69341 (* (* 2.0 l_0_18_45) l_0_18_51)))
 (let ((?x69338 (* (* 2.0 l_0_18_44) l_0_18_50)))
 (let ((?x69330 (* (* 2.0 l_0_18_21) l_0_18_27)))
 (let ((?x69327 (* (* 2.0 l_0_18_20) l_0_18_26)))
 (let ((?x69324 (* (* 2.0 l_0_18_19) l_0_18_25)))
 (let ((?x70793 (* l_0_18_189 l_0_18_189)))
 (let ((?x70791 (* l_0_18_188 l_0_18_188)))
 (let ((?x70789 (* l_0_18_187 l_0_18_187)))
 (let ((?x70787 (* l_0_18_186 l_0_18_186)))
 (let ((?x70785 (* l_0_18_185 l_0_18_185)))
 (let ((?x70783 (* l_0_18_184 l_0_18_184)))
 (let ((?x68777 (* 2.0 l_0_18_18)))
 (let ((?x69309 (* ?x68777 l_0_18_24)))
 (let ((?x68542 (* 2.0 l_0_18_17)))
 (let ((?x69304 (* ?x68542 l_0_18_23)))
 (let ((?x70779 (* l_0_18_161 l_0_18_161)))
 (let ((?x70777 (* l_0_18_160 l_0_18_160)))
 (let ((?x68539 (* 2.0 l_0_18_16)))
 (let ((?x69302 (* ?x68539 l_0_18_22)))
 (let ((?x32330 (* l_0_18_159 l_0_18_159)))
 (let ((?x51986 (* l_0_18_158 l_0_18_158)))
 (let ((?x32304 (+ (+ (* l_0_18_156 l_0_18_156) (* l_0_18_157 l_0_18_157)) ?x51986)))
 (let ((?x70784 (- (+ (+ (+ (+ (+ (+ ?x32304 ?x32330) ?x69302) ?x70777) ?x70779) ?x69304) ?x69309) ?x70783)))
 (let ((?x70796 (+ (+ (- (- (- (- (- ?x70784 ?x70785) ?x70787) ?x70789) ?x70791) ?x70793) ?x69324) ?x69327)))
 (let ((?x70803 (- (- (- (- (- (- (+ ?x70796 ?x69330) ?x69338) ?x69341) ?x69344) ?x69347) ?x69350) ?x69353)))
 (= ?x70803 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x69504 (* l_0_18_56 l_0_18_56)))
 (let ((?x69502 (* l_0_18_55 l_0_18_55)))
 (let ((?x69500 (* l_0_18_54 l_0_18_54)))
 (let ((?x69498 (* l_0_18_53 l_0_18_53)))
 (let ((?x69496 (* l_0_18_52 l_0_18_52)))
 (let ((?x69494 (* l_0_18_51 l_0_18_51)))
 (let ((?x69492 (* l_0_18_50 l_0_18_50)))
 (let ((?x69490 (* l_0_18_28 l_0_18_28)))
 (let ((?x69488 (* l_0_18_27 l_0_18_27)))
 (let ((?x69486 (* l_0_18_26 l_0_18_26)))
 (let ((?x69484 (* l_0_18_25 l_0_18_25)))
 (let ((?x69482 (* l_0_18_24 l_0_18_24)))
 (let ((?x69480 (* l_0_18_23 l_0_18_23)))
 (let ((?x69478 (* l_0_18_22 l_0_18_22)))
 (let ((?x70826 (+ (* (* 2.0 l_0_18_156) l_0_18_162) (* (* 2.0 l_0_18_157) l_0_18_163))))
 (let ((?x70832 (+ (+ ?x70826 (* (* 2.0 l_0_18_158) l_0_18_164)) (* (* 2.0 l_0_18_159) l_0_18_165))))
 (let ((?x70838 (+ (+ ?x70832 (* (* 2.0 l_0_18_160) l_0_18_166)) (* (* 2.0 l_0_18_161) l_0_18_167))))
 (let ((?x70844 (- (- ?x70838 (* (* 2.0 l_0_18_184) l_0_18_190)) (* (* 2.0 l_0_18_185) l_0_18_191))))
 (let ((?x70850 (- (- ?x70844 (* (* 2.0 l_0_18_186) l_0_18_192)) (* (* 2.0 l_0_18_187) l_0_18_193))))
 (let ((?x70856 (- (- ?x70850 (* (* 2.0 l_0_18_188) l_0_18_194)) (* (* 2.0 l_0_18_189) l_0_18_195))))
 (let ((?x70863 (+ (+ (+ (+ (+ (+ (+ ?x70856 ?x69478) ?x69480) ?x69482) ?x69484) ?x69486) ?x69488) ?x69490)))
 (let ((?x70870 (- (- (- (- (- (- (- ?x70863 ?x69492) ?x69494) ?x69496) ?x69498) ?x69500) ?x69502) ?x69504)))
 (= ?x70870 0.0))))))))))))))))))))))))
(assert
 (= (- (* l_0_18_57 l_0_18_57) (* l_0_18_85 l_0_18_85)) 0.0))
(assert
 (let ((?x70910 (+ (- (* l_0_18_141 l_0_18_141) (* l_0_18_169 l_0_18_169)) (* (* 2.0 l_0_18_57) l_0_18_58))))
 (= (- ?x70910 (* (* 2.0 l_0_18_85) l_0_18_86)) 0.0)))
(assert
 (let ((?x70925 (- (* (* 2.0 l_0_18_57) l_0_18_67) (* (* 2.0 l_0_18_85) l_0_18_95))))
 (= ?x70925 0.0)))
(assert
 (let ((?x70935 (+ (* (* (- 2.0) l_0_18_100) l_0_18_85) (* (* 2.0 l_0_18_57) l_0_18_72))))
 (= ?x70935 0.0)))
(assert
 (let ((?x70941 (+ (* (* (- 2.0) l_0_18_106) l_0_18_85) (* (* 2.0 l_0_18_57) l_0_18_78))))
 (= ?x70941 0.0)))
(assert
 (let ((?x70968 (* l_0_18_87 l_0_18_87)))
 (let ((?x70966 (* l_0_18_86 l_0_18_86)))
 (let ((?x70964 (* l_0_18_59 l_0_18_59)))
 (let ((?x70962 (* l_0_18_58 l_0_18_58)))
 (let ((?x70951 (+ (* (* (- 2.0) l_0_18_113) l_0_18_134) (* (* 2.0 l_0_18_141) l_0_18_142))))
 (let ((?x70959 (- (- ?x70951 (* (* 2.0 l_0_18_169) l_0_18_170)) (* (* 2.0 l_0_18_197) l_0_18_218))))
 (let ((?x70967 (- (+ (+ (- ?x70959 (* (* 2.0 l_0_18_225) l_0_18_246)) ?x70962) ?x70964) ?x70966)))
 (= (- ?x70967 ?x70968) 0.0)))))))))
(assert
 (let ((?x70994 (- (* (* (- 2.0) l_0_18_106) l_0_18_86) (* (* 2.0 l_0_18_107) l_0_18_87))))
 (let ((?x70998 (- (+ ?x70994 (* (* 2.0 l_0_18_141) l_0_18_162)) (* (* 2.0 l_0_18_169) l_0_18_190))))
 (let ((?x71002 (+ (+ ?x70998 (* (* 2.0 l_0_18_58) l_0_18_78)) (* (* 2.0 l_0_18_59) l_0_18_79))))
 (= ?x71002 0.0)))))
(assert
 (let ((?x71026 (* l_0_18_99 l_0_18_99)))
 (let ((?x71024 (* l_0_18_98 l_0_18_98)))
 (let ((?x71022 (* l_0_18_97 l_0_18_97)))
 (let ((?x71020 (* l_0_18_96 l_0_18_96)))
 (let ((?x71018 (* l_0_18_95 l_0_18_95)))
 (let ((?x71016 (* l_0_18_71 l_0_18_71)))
 (let ((?x71014 (* l_0_18_70 l_0_18_70)))
 (let ((?x71012 (* l_0_18_69 l_0_18_69)))
 (let ((?x71015 (+ (+ (+ (* l_0_18_67 l_0_18_67) (* l_0_18_68 l_0_18_68)) ?x71012) ?x71014)))
 (= (- (- (- (- (- (+ ?x71015 ?x71016) ?x71018) ?x71020) ?x71022) ?x71024) ?x71026) 0.0)))))))))))
(assert
 (let ((?x71040 (- (* (* (- 2.0) l_0_18_100) l_0_18_95) (* (* 2.0 l_0_18_101) l_0_18_96))))
 (let ((?x71044 (- (- ?x71040 (* (* 2.0 l_0_18_102) l_0_18_97)) (* (* 2.0 l_0_18_103) l_0_18_98))))
 (let ((?x71050 (+ (- ?x71044 (* (* 2.0 l_0_18_104) l_0_18_99)) (* (* 2.0 l_0_18_67) l_0_18_72))))
 (let ((?x71056 (+ (+ ?x71050 (* (* 2.0 l_0_18_68) l_0_18_73)) (* (* 2.0 l_0_18_69) l_0_18_74))))
 (let ((?x71062 (+ (+ ?x71056 (* (* 2.0 l_0_18_70) l_0_18_75)) (* (* 2.0 l_0_18_71) l_0_18_76))))
 (= ?x71062 0.0)))))))
(assert
 (let ((?x71090 (- (* (* (- 2.0) l_0_18_106) l_0_18_95) (* (* 2.0 l_0_18_107) l_0_18_96))))
 (let ((?x71094 (- (- ?x71090 (* (* 2.0 l_0_18_108) l_0_18_97)) (* (* 2.0 l_0_18_109) l_0_18_98))))
 (let ((?x71099 (+ (- ?x71094 (* (* 2.0 l_0_18_110) l_0_18_99)) (* (* 2.0 l_0_18_67) l_0_18_78))))
 (let ((?x71103 (+ (+ ?x71099 (* (* 2.0 l_0_18_68) l_0_18_79)) (* (* 2.0 l_0_18_69) l_0_18_80))))
 (let ((?x71107 (+ (+ ?x71103 (* (* 2.0 l_0_18_70) l_0_18_81)) (* (* 2.0 l_0_18_71) l_0_18_82))))
 (= ?x71107 0.0)))))))
(assert
 (let ((?x71141 (* l_0_18_77 l_0_18_77)))
 (let ((?x71139 (* l_0_18_76 l_0_18_76)))
 (let ((?x71137 (* l_0_18_75 l_0_18_75)))
 (let ((?x71135 (* l_0_18_74 l_0_18_74)))
 (let ((?x71133 (* l_0_18_73 l_0_18_73)))
 (let ((?x71131 (* l_0_18_72 l_0_18_72)))
 (let ((?x71129 (* l_0_18_105 l_0_18_105)))
 (let ((?x71127 (* l_0_18_104 l_0_18_104)))
 (let ((?x71125 (* l_0_18_103 l_0_18_103)))
 (let ((?x52304 (* l_0_18_102 l_0_18_102)))
 (let ((?x32762 (- (- (* (- l_0_18_100) l_0_18_100) (* l_0_18_101 l_0_18_101)) ?x52304)))
 (let ((?x71138 (+ (+ (+ (+ (- (- (- ?x32762 ?x71125) ?x71127) ?x71129) ?x71131) ?x71133) ?x71135) ?x71137)))
 (= (+ (+ ?x71138 ?x71139) ?x71141) 0.0))))))))))))))
(assert
 (let ((?x71163 (- (* (* (- 2.0) l_0_18_100) l_0_18_106) (* (* 2.0 l_0_18_101) l_0_18_107))))
 (let ((?x71167 (- (- ?x71163 (* (* 2.0 l_0_18_102) l_0_18_108)) (* (* 2.0 l_0_18_103) l_0_18_109))))
 (let ((?x71172 (- (- ?x71167 (* (* 2.0 l_0_18_104) l_0_18_110)) (* (* 2.0 l_0_18_105) l_0_18_111))))
 (let ((?x71178 (+ (+ ?x71172 (* (* 2.0 l_0_18_72) l_0_18_78)) (* (* 2.0 l_0_18_73) l_0_18_79))))
 (let ((?x71184 (+ (+ ?x71178 (* (* 2.0 l_0_18_74) l_0_18_80)) (* (* 2.0 l_0_18_75) l_0_18_81))))
 (let ((?x71190 (+ (+ ?x71184 (* (* 2.0 l_0_18_76) l_0_18_82)) (* (* 2.0 l_0_18_77) l_0_18_83))))
 (= ?x71190 0.0))))))))
(assert
 (let ((?x71241 (* l_0_18_84 l_0_18_84)))
 (let ((?x71239 (* l_0_18_83 l_0_18_83)))
 (let ((?x71237 (* l_0_18_82 l_0_18_82)))
 (let ((?x71235 (* l_0_18_81 l_0_18_81)))
 (let ((?x71233 (* l_0_18_80 l_0_18_80)))
 (let ((?x71231 (* l_0_18_79 l_0_18_79)))
 (let ((?x71229 (* l_0_18_78 l_0_18_78)))
 (let ((?x71227 (* l_0_18_112 l_0_18_112)))
 (let ((?x71225 (* l_0_18_111 l_0_18_111)))
 (let ((?x71223 (* l_0_18_110 l_0_18_110)))
 (let ((?x71212 (* l_0_18_109 l_0_18_109)))
 (let ((?x71209 (* l_0_18_108 l_0_18_108)))
 (let ((?x71211 (- (- (* (- l_0_18_106) l_0_18_106) (* l_0_18_107 l_0_18_107)) ?x71209)))
 (let ((?x71234 (+ (+ (+ (- (- (- (- ?x71211 ?x71212) ?x71223) ?x71225) ?x71227) ?x71229) ?x71231) ?x71233)))
 (= (+ (+ (+ (+ ?x71234 ?x71235) ?x71237) ?x71239) ?x71241) 0.0))))))))))))))))
(assert
 (let ((?x71271 (* l_0_18_225 l_0_18_225)))
 (let ((?x71269 (* l_0_18_197 l_0_18_197)))
 (= (- (- (* (* (- 1.0) l_0_18_113) l_0_18_113) ?x71269) ?x71271) 0.0))))
(assert
 (let ((?x71283 (- (* (* (- 2.0) l_0_18_113) l_0_18_114) (* (* 2.0 l_0_18_197) l_0_18_198))))
 (= (- ?x71283 (* (* 2.0 l_0_18_225) l_0_18_226)) 0.0)))
(assert
 (let ((?x71301 (- (* (* (- 2.0) l_0_18_113) l_0_18_119) (* (* 2.0 l_0_18_197) l_0_18_203))))
 (= (- ?x71301 (* (* 2.0 l_0_18_225) l_0_18_231)) 0.0)))
(assert
 (let ((?x52378 (- (* (* (- 2.0) l_0_18_114) l_0_18_119) (* (* 2.0 l_0_18_115) l_0_18_120))))
 (let ((?x52379 (- (- ?x52378 (* (* 2.0 l_0_18_198) l_0_18_203)) (* (* 2.0 l_0_18_199) l_0_18_204))))
 (let ((?x71317 (- (- ?x52379 (* (* 2.0 l_0_18_226) l_0_18_231)) (* (* 2.0 l_0_18_227) l_0_18_232))))
 (= ?x71317 0.0)))))
(assert
 (let ((?x71339 (* l_0_18_171 l_0_18_171)))
 (let ((?x71337 (* l_0_18_170 l_0_18_170)))
 (let ((?x71335 (* l_0_18_143 l_0_18_143)))
 (let ((?x71333 (* l_0_18_142 l_0_18_142)))
 (let ((?x71332 (- (* (* (- 2.0) l_0_18_114) l_0_18_134) (* (* 2.0 l_0_18_115) l_0_18_135))))
 (let ((?x71342 (- (- (- (+ (+ ?x71332 ?x71333) ?x71335) ?x71337) ?x71339) (* (* 2.0 l_0_18_198) l_0_18_218))))
 (let ((?x71346 (- (- ?x71342 (* (* 2.0 l_0_18_199) l_0_18_219)) (* (* 2.0 l_0_18_226) l_0_18_246))))
 (= (- ?x71346 (* (* 2.0 l_0_18_227) l_0_18_247)) 0.0)))))))))
(assert
 (let ((?x71383 (* l_0_18_230 l_0_18_230)))
 (let ((?x71381 (* l_0_18_229 l_0_18_229)))
 (let ((?x71379 (* l_0_18_228 l_0_18_228)))
 (let ((?x71377 (* l_0_18_202 l_0_18_202)))
 (let ((?x71375 (* l_0_18_201 l_0_18_201)))
 (let ((?x71373 (* l_0_18_200 l_0_18_200)))
 (let ((?x52521 (- (* (* (- 1.0) l_0_18_116) l_0_18_116) (* (* 1.0 l_0_18_117) l_0_18_117))))
 (let ((?x71378 (- (- (- (- ?x52521 (* (* 1.0 l_0_18_118) l_0_18_118)) ?x71373) ?x71375) ?x71377)))
 (= (- (- (- ?x71378 ?x71379) ?x71381) ?x71383) 0.0))))))))))
(assert
 (let ((?x52563 (- (* (* (- 2.0) l_0_18_116) l_0_18_119) (* (* 2.0 l_0_18_117) l_0_18_120))))
 (let ((?x32943 (- (- ?x52563 (* (* 2.0 l_0_18_118) l_0_18_121)) (* (* 2.0 l_0_18_200) l_0_18_203))))
 (let ((?x32969 (- (- ?x32943 (* (* 2.0 l_0_18_201) l_0_18_204)) (* (* 2.0 l_0_18_202) l_0_18_205))))
 (let ((?x71409 (- (- ?x32969 (* (* 2.0 l_0_18_228) l_0_18_231)) (* (* 2.0 l_0_18_229) l_0_18_232))))
 (= (- ?x71409 (* (* 2.0 l_0_18_230) l_0_18_233)) 0.0))))))
(assert
 (let ((?x71447 (- (* (* (- 2.0) l_0_18_116) l_0_18_134) (* (* 2.0 l_0_18_117) l_0_18_135))))
 (let ((?x71451 (+ (- ?x71447 (* (* 2.0 l_0_18_118) l_0_18_136)) (* (* 2.0 l_0_18_142) l_0_18_144))))
 (let ((?x71455 (- (+ ?x71451 (* (* 2.0 l_0_18_143) l_0_18_145)) (* (* 2.0 l_0_18_170) l_0_18_172))))
 (let ((?x71459 (- (- ?x71455 (* (* 2.0 l_0_18_171) l_0_18_173)) (* (* 2.0 l_0_18_200) l_0_18_218))))
 (let ((?x71463 (- (- ?x71459 (* (* 2.0 l_0_18_201) l_0_18_219)) (* (* 2.0 l_0_18_202) l_0_18_220))))
 (let ((?x71467 (- (- ?x71463 (* (* 2.0 l_0_18_228) l_0_18_246)) (* (* 2.0 l_0_18_229) l_0_18_247))))
 (= (- ?x71467 (* (* 2.0 l_0_18_230) l_0_18_248)) 0.0))))))))
(assert
 (let ((?x71533 (* l_0_18_234 l_0_18_234)))
 (let ((?x71531 (* l_0_18_233 l_0_18_233)))
 (let ((?x71529 (* l_0_18_232 l_0_18_232)))
 (let ((?x71527 (* l_0_18_231 l_0_18_231)))
 (let ((?x71525 (* l_0_18_206 l_0_18_206)))
 (let ((?x71523 (* l_0_18_205 l_0_18_205)))
 (let ((?x71521 (* l_0_18_204 l_0_18_204)))
 (let ((?x71519 (* l_0_18_203 l_0_18_203)))
 (let ((?x71512 (- (* (* (- 1.0) l_0_18_119) l_0_18_119) (* (* 1.0 l_0_18_120) l_0_18_120))))
 (let ((?x71518 (- (- ?x71512 (* (* 1.0 l_0_18_121) l_0_18_121)) (* (* 1.0 l_0_18_122) l_0_18_122))))
 (let ((?x71532 (- (- (- (- (- (- (- ?x71518 ?x71519) ?x71521) ?x71523) ?x71525) ?x71527) ?x71529) ?x71531)))
 (= (- ?x71532 ?x71533) 0.0)))))))))))))
(assert
 (let ((?x71611 (* l_0_18_252 l_0_18_252)))
 (let ((?x71609 (* l_0_18_251 l_0_18_251)))
 (let ((?x71607 (* l_0_18_250 l_0_18_250)))
 (let ((?x71605 (* l_0_18_249 l_0_18_249)))
 (let ((?x71603 (* l_0_18_248 l_0_18_248)))
 (let ((?x71601 (* l_0_18_247 l_0_18_247)))
 (let ((?x71599 (* l_0_18_246 l_0_18_246)))
 (let ((?x71597 (* l_0_18_224 l_0_18_224)))
 (let ((?x71595 (* l_0_18_223 l_0_18_223)))
 (let ((?x71593 (* l_0_18_222 l_0_18_222)))
 (let ((?x71591 (* l_0_18_221 l_0_18_221)))
 (let ((?x71589 (* l_0_18_220 l_0_18_220)))
 (let ((?x71587 (* l_0_18_219 l_0_18_219)))
 (let ((?x71585 (* l_0_18_218 l_0_18_218)))
 (let ((?x71561 (- (* (* (- 1.0) l_0_18_134) l_0_18_134) (* (* 1.0 l_0_18_135) l_0_18_135))))
 (let ((?x71567 (- (- ?x71561 (* (* 1.0 l_0_18_136) l_0_18_136)) (* (* 1.0 l_0_18_137) l_0_18_137))))
 (let ((?x71573 (- (- ?x71567 (* (* 1.0 l_0_18_138) l_0_18_138)) (* (* 1.0 l_0_18_139) l_0_18_139))))
 (let ((?x71578 (+ (- ?x71573 (* (* 1.0 l_0_18_140) l_0_18_140)) (* (* 2.0 l_0_18_142) l_0_18_162))))
 (let ((?x71582 (- (+ ?x71578 (* (* 2.0 l_0_18_143) l_0_18_163)) (* (* 2.0 l_0_18_170) l_0_18_190))))
 (let ((?x71590 (- (- (- (- ?x71582 (* (* 2.0 l_0_18_171) l_0_18_191)) ?x71585) ?x71587) ?x71589)))
 (let ((?x71604 (- (- (- (- (- (- (- ?x71590 ?x71591) ?x71593) ?x71595) ?x71597) ?x71599) ?x71601) ?x71603)))
 (= (- (- (- (- ?x71604 ?x71605) ?x71607) ?x71609) ?x71611) 0.0)))))))))))))))))))))))
(assert
 (let ((?x71664 (* l_0_18_174 l_0_18_174)))
 (let ((?x71662 (* l_0_18_173 l_0_18_173)))
 (let ((?x71660 (* l_0_18_172 l_0_18_172)))
 (let ((?x71658 (* l_0_18_146 l_0_18_146)))
 (let ((?x71659 (+ (+ (* l_0_18_144 l_0_18_144) (* l_0_18_145 l_0_18_145)) ?x71658)))
 (= (- (- (- ?x71659 ?x71660) ?x71662) ?x71664) 0.0)))))))
(assert
 (let ((?x71677 (+ (* (* 2.0 l_0_18_144) l_0_18_162) (* (* 2.0 l_0_18_145) l_0_18_163))))
 (let ((?x71681 (- (+ ?x71677 (* (* 2.0 l_0_18_146) l_0_18_164)) (* (* 2.0 l_0_18_172) l_0_18_190))))
 (let ((?x71685 (- (- ?x71681 (* (* 2.0 l_0_18_173) l_0_18_191)) (* (* 2.0 l_0_18_174) l_0_18_192))))
 (= ?x71685 0.0)))))
(assert
 (let ((?x71733 (* l_0_18_196 l_0_18_196)))
 (let ((?x71731 (* l_0_18_195 l_0_18_195)))
 (let ((?x71729 (* l_0_18_194 l_0_18_194)))
 (let ((?x71727 (* l_0_18_193 l_0_18_193)))
 (let ((?x71725 (* l_0_18_192 l_0_18_192)))
 (let ((?x71723 (* l_0_18_191 l_0_18_191)))
 (let ((?x71721 (* l_0_18_190 l_0_18_190)))
 (let ((?x71719 (* l_0_18_168 l_0_18_168)))
 (let ((?x71717 (* l_0_18_167 l_0_18_167)))
 (let ((?x71715 (* l_0_18_166 l_0_18_166)))
 (let ((?x71713 (* l_0_18_165 l_0_18_165)))
 (let ((?x71711 (* l_0_18_164 l_0_18_164)))
 (let ((?x71712 (+ (+ (* l_0_18_162 l_0_18_162) (* l_0_18_163 l_0_18_163)) ?x71711)))
 (let ((?x71726 (- (- (- (+ (+ (+ (+ ?x71712 ?x71713) ?x71715) ?x71717) ?x71719) ?x71721) ?x71723) ?x71725)))
 (= (- (- (- (- ?x71726 ?x71727) ?x71729) ?x71731) ?x71733) 0.0))))))))))))))))
(assert
 (>= l_0_18_1 0.0))
(assert
 (>= l_0_18_3 0.0))
(assert
 (>= l_0_18_6 0.0))
(assert
 (>= l_0_18_10 0.0))
(assert
 (>= l_0_18_15 0.0))
(assert
 (>= l_0_18_21 0.0))
(assert
 (>= l_0_18_28 0.0))
(assert
 (>= l_0_18_29 0.0))
(assert
 (>= l_0_18_31 0.0))
(assert
 (>= l_0_18_34 0.0))
(assert
 (>= l_0_18_38 0.0))
(assert
 (>= l_0_18_43 0.0))
(assert
 (>= l_0_18_49 0.0))
(assert
 (>= l_0_18_56 0.0))
(assert
 (>= l_0_18_57 0.0))
(assert
 (>= l_0_18_59 0.0))
(assert
 (>= l_0_18_62 0.0))
(assert
 (>= l_0_18_66 0.0))
(assert
 (>= l_0_18_71 0.0))
(assert
 (>= l_0_18_77 0.0))
(assert
 (>= l_0_18_84 0.0))
(assert
 (>= l_0_18_85 0.0))
(assert
 (>= l_0_18_87 0.0))
(assert
 (>= l_0_18_90 0.0))
(assert
 (>= l_0_18_94 0.0))
(assert
 (>= l_0_18_99 0.0))
(assert
 (>= l_0_18_105 0.0))
(assert
 (>= l_0_18_112 0.0))
(assert
 (>= l_0_18_113 0.0))
(assert
 (>= l_0_18_115 0.0))
(assert
 (>= l_0_18_118 0.0))
(assert
 (>= l_0_18_122 0.0))
(assert
 (>= l_0_18_127 0.0))
(assert
 (>= l_0_18_133 0.0))
(assert
 (>= l_0_18_140 0.0))
(assert
 (>= l_0_18_141 0.0))
(assert
 (>= l_0_18_143 0.0))
(assert
 (>= l_0_18_146 0.0))
(assert
 (>= l_0_18_150 0.0))
(assert
 (>= l_0_18_155 0.0))
(assert
 (>= l_0_18_161 0.0))
(assert
 (>= l_0_18_168 0.0))
(assert
 (>= l_0_18_169 0.0))
(assert
 (>= l_0_18_171 0.0))
(assert
 (>= l_0_18_174 0.0))
(assert
 (>= l_0_18_178 0.0))
(assert
 (>= l_0_18_183 0.0))
(assert
 (>= l_0_18_189 0.0))
(assert
 (>= l_0_18_196 0.0))
(assert
 (>= l_0_18_197 0.0))
(assert
 (>= l_0_18_199 0.0))
(assert
 (>= l_0_18_202 0.0))
(assert
 (>= l_0_18_206 0.0))
(assert
 (>= l_0_18_211 0.0))
(assert
 (>= l_0_18_217 0.0))
(assert
 (>= l_0_18_224 0.0))
(assert
 (>= l_0_18_225 0.0))
(assert
 (>= l_0_18_227 0.0))
(assert
 (>= l_0_18_230 0.0))
(assert
 (>= l_0_18_234 0.0))
(assert
 (>= l_0_18_239 0.0))
(assert
 (>= l_0_18_245 0.0))
(assert
 (>= l_0_18_252 0.0))
(assert
 (let ((?x71828 (* l_0_19_255 l_0_19_255)))
 (let ((?x71826 (* l_0_19_254 l_0_19_254)))
 (let ((?x71824 (* l_0_19_227 l_0_19_227)))
 (let ((?x71822 (* l_0_19_226 l_0_19_226)))
 (let ((?x71820 (* l_0_19_199 l_0_19_199)))
 (let ((?x71818 (* l_0_19_198 l_0_19_198)))
 (let ((?x71817 (- (* (* (- 1.0) l_0_19_114) l_0_19_114) (* (* 1.0 l_0_19_115) l_0_19_115))))
 (= (- (- (- (- (- (- ?x71817 ?x71818) ?x71820) ?x71822) ?x71824) ?x71826) ?x71828) 0.0)))))))))
(assert
 (let ((?x71858 (* l_0_19_87 l_0_19_87)))
 (let ((?x71856 (* l_0_19_86 l_0_19_86)))
 (let ((?x71854 (* l_0_19_59 l_0_19_59)))
 (let ((?x71852 (* l_0_19_58 l_0_19_58)))
 (let ((?x4976 (+ (* (* (- 2.0) l_0_19_113) l_0_19_134) (* (* 2.0 l_0_19_141) l_0_19_142))))
 (let ((?x71845 (- (- ?x4976 (* (* 2.0 l_0_19_169) l_0_19_170)) (* (* 2.0 l_0_19_197) l_0_19_218))))
 (let ((?x71851 (- (- ?x71845 (* (* 2.0 l_0_19_225) l_0_19_246)) (* (* 2.0 l_0_19_253) l_0_19_274))))
 (= (- (- (- (+ (+ ?x71851 ?x71852) ?x71854) ?x71856) ?x71858) 1.0) 0.0)))))))))
(assert
 (let ((?x71897 (* l_0_19_171 l_0_19_171)))
 (let ((?x71895 (* l_0_19_170 l_0_19_170)))
 (let ((?x71893 (* l_0_19_143 l_0_19_143)))
 (let ((?x71891 (* l_0_19_142 l_0_19_142)))
 (let ((?x71890 (- (* (* (- 2.0) l_0_19_114) l_0_19_134) (* (* 2.0 l_0_19_115) l_0_19_135))))
 (let ((?x71901 (- (- (- (+ (+ ?x71890 ?x71891) ?x71893) ?x71895) ?x71897) (* (* 2.0 l_0_19_198) l_0_19_218))))
 (let ((?x71907 (- (- ?x71901 (* (* 2.0 l_0_19_199) l_0_19_219)) (* (* 2.0 l_0_19_226) l_0_19_246))))
 (let ((?x71913 (- (- ?x71907 (* (* 2.0 l_0_19_227) l_0_19_247)) (* (* 2.0 l_0_19_254) l_0_19_274))))
 (= (+ (- ?x71913 (* (* 2.0 l_0_19_255) l_0_19_275)) 1.0) 0.0))))))))))
(assert
 (= (+ (* (- l_0_19_1) l_0_19_1) (* l_0_19_29 l_0_19_29)) 0.0))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x71956 (* ?x71955 l_0_19_30)))
 (let ((?x71948 (- (* (* (- 2.0) l_0_19_1) l_0_19_2) (* (* 2.0 l_0_19_113) l_0_19_123))))
 (let ((?x71952 (- (- ?x71948 (* (* 2.0 l_0_19_197) l_0_19_207)) (* (* 2.0 l_0_19_225) l_0_19_235))))
 (= (+ (- ?x71952 (* (* 2.0 l_0_19_253) l_0_19_263)) ?x71956) 0.0))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x71988 (* ?x71987 l_0_19_40)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x71985 (* ?x71984 l_0_19_39)))
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x71982 (* ?x71955 l_0_19_32)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x71980 (* ?x71979 l_0_19_3)))
 (let ((?x52982 (* 2.0 l_0_19_11)))
 (let ((?x71977 (* ?x52982 l_0_19_2)))
 (let ((?x71986 (- (+ (+ (+ (* (* (- 2.0) l_0_19_1) l_0_19_4) ?x71977) ?x71980) ?x71982) ?x71985)))
 (= (- ?x71986 ?x71988) 0.0)))))))))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72013 (* ?x71955 l_0_19_35)))
 (= (+ (* (* (- 2.0) l_0_19_1) l_0_19_7) ?x72013) 0.0))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72019 (* ?x71955 l_0_19_39)))
 (= (+ (* (* (- 2.0) l_0_19_1) l_0_19_11) ?x72019) 0.0))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72037 (* ?x71955 l_0_19_44)))
 (let ((?x72019 (* ?x71955 l_0_19_39)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x72030 (* ?x72027 l_0_19_16)))
 (let ((?x72029 (* ?x72027 l_0_19_11)))
 (= (+ (- (- ?x72029 ?x72030) ?x72019) ?x72037) 0.0))))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72053 (* ?x71955 l_0_19_50)))
 (let ((?x72050 (+ (* (* (- 2.0) l_0_19_1) l_0_19_22) (* (* 2.0 l_0_19_141) l_0_19_151))))
 (let ((?x72057 (+ (+ (- ?x72050 (* (* 2.0 l_0_19_169) l_0_19_179)) ?x72053) (* (* 2.0 l_0_19_58) l_0_19_67))))
 (let ((?x72063 (- (+ ?x72057 (* (* 2.0 l_0_19_59) l_0_19_68)) (* (* 2.0 l_0_19_86) l_0_19_95))))
 (= (- ?x72063 (* (* 2.0 l_0_19_87) l_0_19_96)) 0.0)))))))
(assert
 (let ((?x72117 (* l_0_19_31 l_0_19_31)))
 (let ((?x72115 (* l_0_19_30 l_0_19_30)))
 (let ((?x72113 (* l_0_19_3 l_0_19_3)))
 (let ((?x72103 (* l_0_19_2 l_0_19_2)))
 (let ((?x72098 (- (* (* (- 2.0) l_0_19_114) l_0_19_123) (* (* 2.0 l_0_19_115) l_0_19_124))))
 (let ((?x72102 (- (- ?x72098 (* (* 2.0 l_0_19_198) l_0_19_207)) (* (* 2.0 l_0_19_199) l_0_19_208))))
 (let ((?x72108 (- (- (- ?x72102 ?x72103) (* (* 2.0 l_0_19_226) l_0_19_235)) (* (* 2.0 l_0_19_227) l_0_19_236))))
 (let ((?x72112 (- (- ?x72108 (* (* 2.0 l_0_19_254) l_0_19_263)) (* (* 2.0 l_0_19_255) l_0_19_264))))
 (= (+ (+ (- ?x72112 ?x72113) ?x72115) ?x72117) 0.0))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72175 (* ?x71987 l_0_19_33)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72173 (* ?x71984 l_0_19_32)))
 (let ((?x72170 (* 2.0 l_0_19_3)))
 (let ((?x72171 (* ?x72170 l_0_19_5)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x72141 (* ?x72140 l_0_19_4)))
 (let ((?x72136 (- (* (* (- 2.0) l_0_19_116) l_0_19_123) (* (* 2.0 l_0_19_117) l_0_19_124))))
 (let ((?x72145 (- (- (- ?x72136 (* (* 2.0 l_0_19_118) l_0_19_125)) ?x72141) (* (* 2.0 l_0_19_200) l_0_19_207))))
 (let ((?x72151 (- (- ?x72145 (* (* 2.0 l_0_19_201) l_0_19_208)) (* (* 2.0 l_0_19_202) l_0_19_209))))
 (let ((?x72157 (- (- ?x72151 (* (* 2.0 l_0_19_228) l_0_19_235)) (* (* 2.0 l_0_19_229) l_0_19_236))))
 (let ((?x72163 (- (- ?x72157 (* (* 2.0 l_0_19_230) l_0_19_237)) (* (* 2.0 l_0_19_256) l_0_19_263))))
 (let ((?x72169 (- (- ?x72163 (* (* 2.0 l_0_19_257) l_0_19_264)) (* (* 2.0 l_0_19_258) l_0_19_265))))
 (= (+ (+ (- ?x72169 ?x72171) ?x72173) ?x72175) 0.0))))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72261 (* ?x71987 l_0_19_36)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72259 (* ?x71984 l_0_19_35)))
 (let ((?x72170 (* 2.0 l_0_19_3)))
 (let ((?x72257 (* ?x72170 l_0_19_8)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x5937 (* ?x72140 l_0_19_7)))
 (let ((?x33905 (- (* (* (- 2.0) l_0_19_119) l_0_19_123) (* (* 2.0 l_0_19_120) l_0_19_124))))
 (let ((?x5931 (- (- ?x33905 (* (* 2.0 l_0_19_121) l_0_19_125)) (* (* 2.0 l_0_19_122) l_0_19_126))))
 (let ((?x72226 (- (- (- ?x5931 ?x5937) (* (* 2.0 l_0_19_203) l_0_19_207)) (* (* 2.0 l_0_19_204) l_0_19_208))))
 (let ((?x72232 (- (- ?x72226 (* (* 2.0 l_0_19_205) l_0_19_209)) (* (* 2.0 l_0_19_206) l_0_19_210))))
 (let ((?x72238 (- (- ?x72232 (* (* 2.0 l_0_19_231) l_0_19_235)) (* (* 2.0 l_0_19_232) l_0_19_236))))
 (let ((?x72244 (- (- ?x72238 (* (* 2.0 l_0_19_233) l_0_19_237)) (* (* 2.0 l_0_19_234) l_0_19_238))))
 (let ((?x72250 (- (- ?x72244 (* (* 2.0 l_0_19_259) l_0_19_263)) (* (* 2.0 l_0_19_260) l_0_19_264))))
 (let ((?x72256 (- (- ?x72250 (* (* 2.0 l_0_19_261) l_0_19_265)) (* (* 2.0 l_0_19_262) l_0_19_266))))
 (= (+ (+ (- ?x72256 ?x72257) ?x72259) ?x72261) 0.0))))))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x71988 (* ?x71987 l_0_19_40)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x71985 (* ?x71984 l_0_19_39)))
 (let ((?x72344 (* l_0_19_267 l_0_19_267)))
 (let ((?x72342 (* l_0_19_266 l_0_19_266)))
 (let ((?x72340 (* l_0_19_265 l_0_19_265)))
 (let ((?x72338 (* l_0_19_264 l_0_19_264)))
 (let ((?x72336 (* l_0_19_263 l_0_19_263)))
 (let ((?x72334 (* l_0_19_239 l_0_19_239)))
 (let ((?x72332 (* l_0_19_238 l_0_19_238)))
 (let ((?x72330 (* l_0_19_237 l_0_19_237)))
 (let ((?x72328 (* l_0_19_236 l_0_19_236)))
 (let ((?x72326 (* l_0_19_235 l_0_19_235)))
 (let ((?x72324 (* l_0_19_211 l_0_19_211)))
 (let ((?x72322 (* l_0_19_210 l_0_19_210)))
 (let ((?x72320 (* l_0_19_209 l_0_19_209)))
 (let ((?x72318 (* l_0_19_208 l_0_19_208)))
 (let ((?x72316 (* l_0_19_207 l_0_19_207)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x71980 (* ?x71979 l_0_19_3)))
 (let ((?x72303 (- (- (* (* (- 2.0) l_0_19_11) l_0_19_2) ?x71980) (* (* 1.0 l_0_19_123) l_0_19_123))))
 (let ((?x72309 (- (- ?x72303 (* (* 1.0 l_0_19_124) l_0_19_124)) (* (* 1.0 l_0_19_125) l_0_19_125))))
 (let ((?x72315 (- (- ?x72309 (* (* 1.0 l_0_19_126) l_0_19_126)) (* (* 1.0 l_0_19_127) l_0_19_127))))
 (let ((?x72329 (- (- (- (- (- (- (- ?x72315 ?x72316) ?x72318) ?x72320) ?x72322) ?x72324) ?x72326) ?x72328)))
 (let ((?x72343 (- (- (- (- (- (- (- ?x72329 ?x72330) ?x72332) ?x72334) ?x72336) ?x72338) ?x72340) ?x72342)))
 (= (+ (+ (- ?x72343 ?x72344) ?x71985) ?x71988) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72429 (* ?x71987 l_0_19_45)))
 (let ((?x71988 (* ?x71987 l_0_19_40)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72426 (* ?x71984 l_0_19_44)))
 (let ((?x71985 (* ?x71984 l_0_19_39)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72378 (* ?x72377 l_0_19_3)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72375 (* ?x72374 l_0_19_2)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x71980 (* ?x71979 l_0_19_3)))
 (let ((?x52982 (* 2.0 l_0_19_11)))
 (let ((?x71977 (* ?x52982 l_0_19_2)))
 (let ((?x53477 (- (- (+ ?x71977 ?x71980) (* (* 2.0 l_0_19_123) l_0_19_128)) (* (* 2.0 l_0_19_124) l_0_19_129))))
 (let ((?x72370 (- (- ?x53477 (* (* 2.0 l_0_19_125) l_0_19_130)) (* (* 2.0 l_0_19_126) l_0_19_131))))
 (let ((?x72382 (- (- (- (- ?x72370 (* (* 2.0 l_0_19_127) l_0_19_132)) ?x72375) ?x72378) (* (* 2.0 l_0_19_207) l_0_19_212))))
 (let ((?x72388 (- (- ?x72382 (* (* 2.0 l_0_19_208) l_0_19_213)) (* (* 2.0 l_0_19_209) l_0_19_214))))
 (let ((?x72394 (- (- ?x72388 (* (* 2.0 l_0_19_210) l_0_19_215)) (* (* 2.0 l_0_19_211) l_0_19_216))))
 (let ((?x72400 (- (- ?x72394 (* (* 2.0 l_0_19_235) l_0_19_240)) (* (* 2.0 l_0_19_236) l_0_19_241))))
 (let ((?x72406 (- (- ?x72400 (* (* 2.0 l_0_19_237) l_0_19_242)) (* (* 2.0 l_0_19_238) l_0_19_243))))
 (let ((?x72412 (- (- ?x72406 (* (* 2.0 l_0_19_239) l_0_19_244)) (* (* 2.0 l_0_19_263) l_0_19_268))))
 (let ((?x72418 (- (- ?x72412 (* (* 2.0 l_0_19_264) l_0_19_269)) (* (* 2.0 l_0_19_265) l_0_19_270))))
 (let ((?x72424 (- (- ?x72418 (* (* 2.0 l_0_19_266) l_0_19_271)) (* (* 2.0 l_0_19_267) l_0_19_272))))
 (= (+ (- (+ (- ?x72424 ?x71985) ?x72426) ?x71988) ?x72429) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72557 (* ?x71987 l_0_19_51)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72555 (* ?x71984 l_0_19_50)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72533 (* ?x72532 l_0_19_3)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x72520 (* ?x72140 l_0_19_22)))
 (let ((?x72501 (- (* (* (- 2.0) l_0_19_123) l_0_19_134) (* (* 2.0 l_0_19_124) l_0_19_135))))
 (let ((?x72505 (- (- ?x72501 (* (* 2.0 l_0_19_125) l_0_19_136)) (* (* 2.0 l_0_19_126) l_0_19_137))))
 (let ((?x72510 (+ (- ?x72505 (* (* 2.0 l_0_19_127) l_0_19_138)) (* (* 2.0 l_0_19_142) l_0_19_151))))
 (let ((?x72516 (- (+ ?x72510 (* (* 2.0 l_0_19_143) l_0_19_152)) (* (* 2.0 l_0_19_170) l_0_19_179))))
 (let ((?x72523 (- (- (- ?x72516 (* (* 2.0 l_0_19_171) l_0_19_180)) ?x72520) (* (* 2.0 l_0_19_207) l_0_19_218))))
 (let ((?x72527 (- (- ?x72523 (* (* 2.0 l_0_19_208) l_0_19_219)) (* (* 2.0 l_0_19_209) l_0_19_220))))
 (let ((?x72531 (- (- ?x72527 (* (* 2.0 l_0_19_210) l_0_19_221)) (* (* 2.0 l_0_19_211) l_0_19_222))))
 (let ((?x72538 (- (- (- ?x72531 ?x72533) (* (* 2.0 l_0_19_235) l_0_19_246)) (* (* 2.0 l_0_19_236) l_0_19_247))))
 (let ((?x72542 (- (- ?x72538 (* (* 2.0 l_0_19_237) l_0_19_248)) (* (* 2.0 l_0_19_238) l_0_19_249))))
 (let ((?x72546 (- (- ?x72542 (* (* 2.0 l_0_19_239) l_0_19_250)) (* (* 2.0 l_0_19_263) l_0_19_274))))
 (let ((?x72550 (- (- ?x72546 (* (* 2.0 l_0_19_264) l_0_19_275)) (* (* 2.0 l_0_19_265) l_0_19_276))))
 (let ((?x72554 (- (- ?x72550 (* (* 2.0 l_0_19_266) l_0_19_277)) (* (* 2.0 l_0_19_267) l_0_19_278))))
 (= (+ (+ ?x72554 ?x72555) ?x72557) 0.0))))))))))))))))))))))
(assert
 (let ((?x72590 (* l_0_19_6 l_0_19_6)))
 (let ((?x72588 (* l_0_19_5 l_0_19_5)))
 (let ((?x72586 (* l_0_19_4 l_0_19_4)))
 (let ((?x72584 (* l_0_19_34 l_0_19_34)))
 (let ((?x72587 (- (+ (+ (* l_0_19_32 l_0_19_32) (* l_0_19_33 l_0_19_33)) ?x72584) ?x72586)))
 (= (- (- ?x72587 ?x72588) ?x72590) 0.0)))))))
(assert
 (let ((?x72613 (* (* 2.0 l_0_19_6) l_0_19_9)))
 (let ((?x72610 (* (* 2.0 l_0_19_5) l_0_19_8)))
 (let ((?x72607 (* (* 2.0 l_0_19_4) l_0_19_7)))
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72604 (* ?x72603 l_0_19_37)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72601 (* ?x72600 l_0_19_36)))
 (let ((?x72611 (- (- (+ (+ (* (* 2.0 l_0_19_32) l_0_19_35) ?x72601) ?x72604) ?x72607) ?x72610)))
 (= (- ?x72611 ?x72613) 0.0))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72644 (* ?x72603 l_0_19_41)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72642 (* ?x72600 l_0_19_40)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72640 (* ?x7080 l_0_19_39)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x72638 (* ?x72637 l_0_19_6)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x72635 (* ?x71979 l_0_19_5)))
 (let ((?x72643 (+ (+ (- (- (* (* (- 2.0) l_0_19_11) l_0_19_4) ?x72635) ?x72638) ?x72640) ?x72642)))
 (= (+ ?x72643 ?x72644) 0.0)))))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72676 (* ?x72603 l_0_19_46)))
 (let ((?x72644 (* ?x72603 l_0_19_41)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72673 (* ?x72600 l_0_19_45)))
 (let ((?x72642 (* ?x72600 l_0_19_40)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72670 (* ?x7080 l_0_19_44)))
 (let ((?x72640 (* ?x7080 l_0_19_39)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x72667 (* ?x72666 l_0_19_6)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72664 (* ?x72377 l_0_19_5)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72656 (* ?x72374 l_0_19_4)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x72638 (* ?x72637 l_0_19_6)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x72635 (* ?x71979 l_0_19_5)))
 (let ((?x53997 (+ (+ (* (* 2.0 l_0_19_11) l_0_19_4) ?x72635) ?x72638)))
 (let ((?x72674 (+ (- (+ (- (- (- (- ?x53997 ?x72656) ?x72664) ?x72667) ?x72640) ?x72670) ?x72642) ?x72673)))
 (= (+ (- ?x72674 ?x72644) ?x72676) 0.0)))))))))))))))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72739 (* ?x72603 l_0_19_52)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72737 (* ?x72600 l_0_19_51)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72735 (* ?x7080 l_0_19_50)))
 (let ((?x72732 (* 2.0 l_0_19_24)))
 (let ((?x72733 (* ?x72732 l_0_19_6)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72730 (* ?x72532 l_0_19_5)))
 (let ((?x72727 (* 2.0 l_0_19_22)))
 (let ((?x72728 (* ?x72727 l_0_19_4)))
 (let ((?x72714 (+ (* (* 2.0 l_0_19_144) l_0_19_151) (* (* 2.0 l_0_19_145) l_0_19_152))))
 (let ((?x72720 (- (+ ?x72714 (* (* 2.0 l_0_19_146) l_0_19_153)) (* (* 2.0 l_0_19_172) l_0_19_179))))
 (let ((?x72726 (- (- ?x72720 (* (* 2.0 l_0_19_173) l_0_19_180)) (* (* 2.0 l_0_19_174) l_0_19_181))))
 (= (+ (+ (+ (- (- (- ?x72726 ?x72728) ?x72730) ?x72733) ?x72735) ?x72737) ?x72739) 0.0)))))))))))))))))
(assert
 (let ((?x72807 (* l_0_19_9 l_0_19_9)))
 (let ((?x72805 (* l_0_19_8 l_0_19_8)))
 (let ((?x72803 (* l_0_19_7 l_0_19_7)))
 (let ((?x72801 (* l_0_19_38 l_0_19_38)))
 (let ((?x72799 (* l_0_19_37 l_0_19_37)))
 (let ((?x72797 (* l_0_19_36 l_0_19_36)))
 (let ((?x72798 (+ (+ (* (- l_0_19_10) l_0_19_10) (* l_0_19_35 l_0_19_35)) ?x72797)))
 (= (- (- (- (+ (+ ?x72798 ?x72799) ?x72801) ?x72803) ?x72805) ?x72807) 0.0)))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72842 (* ?x72841 l_0_19_42)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72839 (* ?x72838 l_0_19_41)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72836 (* ?x72835 l_0_19_40)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72833 (* ?x72832 l_0_19_39)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x72830 (* ?x72637 l_0_19_9)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x72828 (* ?x71979 l_0_19_8)))
 (let ((?x52982 (* 2.0 l_0_19_11)))
 (let ((?x72826 (* ?x52982 l_0_19_7)))
 (let ((?x72834 (+ (- (- (- (* (* (- 2.0) l_0_19_10) l_0_19_14) ?x72826) ?x72828) ?x72830) ?x72833)))
 (= (+ (+ (+ ?x72834 ?x72836) ?x72839) ?x72842) 0.0)))))))))))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72896 (* ?x72841 l_0_19_47)))
 (let ((?x72842 (* ?x72841 l_0_19_42)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72893 (* ?x72838 l_0_19_46)))
 (let ((?x72839 (* ?x72838 l_0_19_41)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72890 (* ?x72835 l_0_19_45)))
 (let ((?x72836 (* ?x72835 l_0_19_40)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72887 (* ?x72832 l_0_19_44)))
 (let ((?x72833 (* ?x72832 l_0_19_39)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x72884 (* ?x72666 l_0_19_9)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72882 (* ?x72377 l_0_19_8)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72880 (* ?x72374 l_0_19_7)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x72830 (* ?x72637 l_0_19_9)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x72828 (* ?x71979 l_0_19_8)))
 (let ((?x52982 (* 2.0 l_0_19_11)))
 (let ((?x72826 (* ?x52982 l_0_19_7)))
 (let ((?x72873 (* 2.0 l_0_19_10)))
 (let ((?x72875 (* ?x72873 l_0_19_19)))
 (let ((?x72874 (* ?x72873 l_0_19_14)))
 (let ((?x72885 (- (- (- (+ (+ (+ (- ?x72874 ?x72875) ?x72826) ?x72828) ?x72830) ?x72880) ?x72882) ?x72884)))
 (let ((?x72895 (- (+ (- (+ (- (+ (- ?x72885 ?x72833) ?x72887) ?x72836) ?x72890) ?x72839) ?x72893) ?x72842)))
 (= (+ ?x72895 ?x72896) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72992 (* ?x72841 l_0_19_53)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72990 (* ?x72838 l_0_19_52)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72988 (* ?x72835 l_0_19_51)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72986 (* ?x72832 l_0_19_50)))
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x71988 (* ?x71987 l_0_19_40)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x71985 (* ?x71984 l_0_19_39)))
 (let ((?x72732 (* 2.0 l_0_19_24)))
 (let ((?x72982 (* ?x72732 l_0_19_9)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72980 (* ?x72532 l_0_19_8)))
 (let ((?x72727 (* 2.0 l_0_19_22)))
 (let ((?x72978 (* ?x72727 l_0_19_7)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x71980 (* ?x71979 l_0_19_3)))
 (let ((?x52982 (* 2.0 l_0_19_11)))
 (let ((?x71977 (* ?x52982 l_0_19_2)))
 (let ((?x72956 (+ (+ (+ (* (* (- 2.0) l_0_19_10) l_0_19_25) ?x71977) ?x71980) (* (* 2.0 l_0_19_147) l_0_19_151))))
 (let ((?x72962 (+ (+ ?x72956 (* (* 2.0 l_0_19_148) l_0_19_152)) (* (* 2.0 l_0_19_149) l_0_19_153))))
 (let ((?x72968 (- (+ ?x72962 (* (* 2.0 l_0_19_150) l_0_19_154)) (* (* 2.0 l_0_19_175) l_0_19_179))))
 (let ((?x72974 (- (- ?x72968 (* (* 2.0 l_0_19_176) l_0_19_180)) (* (* 2.0 l_0_19_177) l_0_19_181))))
 (let ((?x72983 (- (- (- (- ?x72974 (* (* 2.0 l_0_19_178) l_0_19_182)) ?x72978) ?x72980) ?x72982)))
 (= (+ (+ (+ (+ (- (- ?x72983 ?x71985) ?x71988) ?x72986) ?x72988) ?x72990) ?x72992) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x73077 (* l_0_19_43 l_0_19_43)))
 (let ((?x73075 (* l_0_19_42 l_0_19_42)))
 (let ((?x73073 (* l_0_19_41 l_0_19_41)))
 (let ((?x73071 (* l_0_19_40 l_0_19_40)))
 (let ((?x73069 (* l_0_19_39 l_0_19_39)))
 (let ((?x73067 (* l_0_19_15 l_0_19_15)))
 (let ((?x73065 (* l_0_19_14 l_0_19_14)))
 (let ((?x73052 (* l_0_19_13 l_0_19_13)))
 (let ((?x73064 (- (- (* (- l_0_19_11) l_0_19_11) (* l_0_19_12 l_0_19_12)) ?x73052)))
 (let ((?x73078 (+ (+ (+ (+ (+ (- (- ?x73064 ?x73065) ?x73067) ?x73069) ?x73071) ?x73073) ?x73075) ?x73077)))
 (= ?x73078 0.0))))))))))))
(assert
 (let ((?x73077 (* l_0_19_43 l_0_19_43)))
 (let ((?x73121 (* 2.0 l_0_19_43)))
 (let ((?x73122 (* ?x73121 l_0_19_48)))
 (let ((?x73075 (* l_0_19_42 l_0_19_42)))
 (let ((?x73117 (* 2.0 l_0_19_42)))
 (let ((?x73118 (* ?x73117 l_0_19_47)))
 (let ((?x73073 (* l_0_19_41 l_0_19_41)))
 (let ((?x73113 (* 2.0 l_0_19_41)))
 (let ((?x73114 (* ?x73113 l_0_19_46)))
 (let ((?x73071 (* l_0_19_40 l_0_19_40)))
 (let ((?x73109 (* 2.0 l_0_19_40)))
 (let ((?x73110 (* ?x73109 l_0_19_45)))
 (let ((?x73069 (* l_0_19_39 l_0_19_39)))
 (let ((?x73105 (* 2.0 l_0_19_39)))
 (let ((?x73106 (* ?x73105 l_0_19_44)))
 (let ((?x73067 (* l_0_19_15 l_0_19_15)))
 (let ((?x73101 (* 2.0 l_0_19_15)))
 (let ((?x73102 (* ?x73101 l_0_19_20)))
 (let ((?x73065 (* l_0_19_14 l_0_19_14)))
 (let ((?x73097 (* 2.0 l_0_19_14)))
 (let ((?x73098 (* ?x73097 l_0_19_19)))
 (let ((?x73052 (* l_0_19_13 l_0_19_13)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x73094 (* ?x72637 l_0_19_18)))
 (let ((?x73049 (* l_0_19_12 l_0_19_12)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x73091 (* ?x71979 l_0_19_17)))
 (let ((?x73092 (- (+ (* (* (- 2.0) l_0_19_11) l_0_19_16) (* l_0_19_11 l_0_19_11)) ?x73091)))
 (let ((?x73104 (+ (- (+ (- (+ (- (+ ?x73092 ?x73049) ?x73094) ?x73052) ?x73098) ?x73065) ?x73102) ?x73067)))
 (let ((?x73119 (+ (- (+ (- (+ (- (+ ?x73104 ?x73106) ?x73069) ?x73110) ?x73071) ?x73114) ?x73073) ?x73118)))
 (= (- (+ (- ?x73119 ?x73075) ?x73122) ?x73077) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x73121 (* 2.0 l_0_19_43)))
 (let ((?x73188 (* ?x73121 l_0_19_54)))
 (let ((?x73117 (* 2.0 l_0_19_42)))
 (let ((?x73186 (* ?x73117 l_0_19_53)))
 (let ((?x73113 (* 2.0 l_0_19_41)))
 (let ((?x73184 (* ?x73113 l_0_19_52)))
 (let ((?x73109 (* 2.0 l_0_19_40)))
 (let ((?x73182 (* ?x73109 l_0_19_51)))
 (let ((?x73105 (* 2.0 l_0_19_39)))
 (let ((?x73180 (* ?x73105 l_0_19_50)))
 (let ((?x73178 (* l_0_19_183 l_0_19_183)))
 (let ((?x73176 (* l_0_19_182 l_0_19_182)))
 (let ((?x73174 (* l_0_19_181 l_0_19_181)))
 (let ((?x73172 (* l_0_19_180 l_0_19_180)))
 (let ((?x73170 (* l_0_19_179 l_0_19_179)))
 (let ((?x73168 (* l_0_19_155 l_0_19_155)))
 (let ((?x73166 (* l_0_19_154 l_0_19_154)))
 (let ((?x73164 (* l_0_19_153 l_0_19_153)))
 (let ((?x73162 (* l_0_19_152 l_0_19_152)))
 (let ((?x73160 (* l_0_19_151 l_0_19_151)))
 (let ((?x73101 (* 2.0 l_0_19_15)))
 (let ((?x73158 (* ?x73101 l_0_19_26)))
 (let ((?x73097 (* 2.0 l_0_19_14)))
 (let ((?x73156 (* ?x73097 l_0_19_25)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x73154 (* ?x72637 l_0_19_24)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x73152 (* ?x71979 l_0_19_23)))
 (let ((?x73159 (- (- (- (- (* (* (- 2.0) l_0_19_11) l_0_19_22) ?x73152) ?x73154) ?x73156) ?x73158)))
 (let ((?x73173 (- (- (+ (+ (+ (+ (+ ?x73159 ?x73160) ?x73162) ?x73164) ?x73166) ?x73168) ?x73170) ?x73172)))
 (let ((?x73187 (+ (+ (+ (+ (- (- (- ?x73173 ?x73174) ?x73176) ?x73178) ?x73180) ?x73182) ?x73184) ?x73186)))
 (= (+ ?x73187 ?x73188) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x73243 (* l_0_19_49 l_0_19_49)))
 (let ((?x73241 (* l_0_19_48 l_0_19_48)))
 (let ((?x73239 (* l_0_19_47 l_0_19_47)))
 (let ((?x73237 (* l_0_19_46 l_0_19_46)))
 (let ((?x73235 (* l_0_19_45 l_0_19_45)))
 (let ((?x73233 (* l_0_19_44 l_0_19_44)))
 (let ((?x73121 (* 2.0 l_0_19_43)))
 (let ((?x73122 (* ?x73121 l_0_19_48)))
 (let ((?x73117 (* 2.0 l_0_19_42)))
 (let ((?x73118 (* ?x73117 l_0_19_47)))
 (let ((?x73113 (* 2.0 l_0_19_41)))
 (let ((?x73114 (* ?x73113 l_0_19_46)))
 (let ((?x73109 (* 2.0 l_0_19_40)))
 (let ((?x73110 (* ?x73109 l_0_19_45)))
 (let ((?x73105 (* 2.0 l_0_19_39)))
 (let ((?x73106 (* ?x73105 l_0_19_44)))
 (let ((?x73226 (* l_0_19_21 l_0_19_21)))
 (let ((?x73224 (* l_0_19_20 l_0_19_20)))
 (let ((?x73222 (* l_0_19_19 l_0_19_19)))
 (let ((?x73220 (* l_0_19_18 l_0_19_18)))
 (let ((?x73218 (* l_0_19_17 l_0_19_17)))
 (let ((?x73203 (* l_0_19_16 l_0_19_16)))
 (let ((?x73101 (* 2.0 l_0_19_15)))
 (let ((?x73102 (* ?x73101 l_0_19_20)))
 (let ((?x73097 (* 2.0 l_0_19_14)))
 (let ((?x73098 (* ?x73097 l_0_19_19)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x73094 (* ?x72637 l_0_19_18)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x73091 (* ?x71979 l_0_19_17)))
 (let ((?x54273 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_16) ?x73091) ?x73094) ?x73098) ?x73102)))
 (let ((?x73228 (- (- (- (- (- (- (- ?x54273 ?x73203) ?x73218) ?x73220) ?x73222) ?x73224) ?x73226) ?x73106)))
 (let ((?x73238 (+ (+ (+ (- (- (- (- ?x73228 ?x73110) ?x73114) ?x73118) ?x73122) ?x73233) ?x73235) ?x73237)))
 (= (+ (+ (+ ?x73238 ?x73239) ?x73241) ?x73243) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x73321 (* (* 2.0 l_0_19_49) l_0_19_55)))
 (let ((?x73318 (* (* 2.0 l_0_19_48) l_0_19_54)))
 (let ((?x73315 (* (* 2.0 l_0_19_47) l_0_19_53)))
 (let ((?x73312 (* (* 2.0 l_0_19_46) l_0_19_52)))
 (let ((?x73309 (* (* 2.0 l_0_19_45) l_0_19_51)))
 (let ((?x73306 (* (* 2.0 l_0_19_44) l_0_19_50)))
 (let ((?x73121 (* 2.0 l_0_19_43)))
 (let ((?x73188 (* ?x73121 l_0_19_54)))
 (let ((?x73117 (* 2.0 l_0_19_42)))
 (let ((?x73186 (* ?x73117 l_0_19_53)))
 (let ((?x73113 (* 2.0 l_0_19_41)))
 (let ((?x73184 (* ?x73113 l_0_19_52)))
 (let ((?x73109 (* 2.0 l_0_19_40)))
 (let ((?x73182 (* ?x73109 l_0_19_51)))
 (let ((?x73105 (* 2.0 l_0_19_39)))
 (let ((?x73180 (* ?x73105 l_0_19_50)))
 (let ((?x73298 (* (* 2.0 l_0_19_21) l_0_19_27)))
 (let ((?x73295 (* (* 2.0 l_0_19_20) l_0_19_26)))
 (let ((?x73292 (* (* 2.0 l_0_19_19) l_0_19_25)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x73277 (* ?x72666 l_0_19_24)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x73272 (* ?x72377 l_0_19_23)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x73270 (* ?x72374 l_0_19_22)))
 (let ((?x73101 (* 2.0 l_0_19_15)))
 (let ((?x73158 (* ?x73101 l_0_19_26)))
 (let ((?x73097 (* 2.0 l_0_19_14)))
 (let ((?x73156 (* ?x73097 l_0_19_25)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x73154 (* ?x72637 l_0_19_24)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x73152 (* ?x71979 l_0_19_23)))
 (let ((?x54309 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_22) ?x73152) ?x73154) ?x73156) ?x73158)))
 (let ((?x73260 (+ (+ ?x54309 (* (* 2.0 l_0_19_151) l_0_19_156)) (* (* 2.0 l_0_19_152) l_0_19_157))))
 (let ((?x73266 (+ (+ ?x73260 (* (* 2.0 l_0_19_153) l_0_19_158)) (* (* 2.0 l_0_19_154) l_0_19_159))))
 (let ((?x73276 (- (- (- (+ ?x73266 (* (* 2.0 l_0_19_155) l_0_19_160)) ?x73270) ?x73272) (* (* 2.0 l_0_19_179) l_0_19_184))))
 (let ((?x73284 (- (- (- ?x73276 ?x73277) (* (* 2.0 l_0_19_180) l_0_19_185)) (* (* 2.0 l_0_19_181) l_0_19_186))))
 (let ((?x73290 (- (- ?x73284 (* (* 2.0 l_0_19_182) l_0_19_187)) (* (* 2.0 l_0_19_183) l_0_19_188))))
 (let ((?x73303 (- (- (- (- (- (- (- ?x73290 ?x73292) ?x73295) ?x73298) ?x73180) ?x73182) ?x73184) ?x73186)))
 (let ((?x73322 (+ (+ (+ (+ (+ (+ (- ?x73303 ?x73188) ?x73306) ?x73309) ?x73312) ?x73315) ?x73318) ?x73321)))
 (= ?x73322 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x73407 (* l_0_19_56 l_0_19_56)))
 (let ((?x73405 (* l_0_19_55 l_0_19_55)))
 (let ((?x73403 (* l_0_19_54 l_0_19_54)))
 (let ((?x73401 (* l_0_19_53 l_0_19_53)))
 (let ((?x73399 (* l_0_19_52 l_0_19_52)))
 (let ((?x73397 (* l_0_19_51 l_0_19_51)))
 (let ((?x73395 (* l_0_19_50 l_0_19_50)))
 (let ((?x73393 (* l_0_19_28 l_0_19_28)))
 (let ((?x73391 (* l_0_19_27 l_0_19_27)))
 (let ((?x73389 (* l_0_19_26 l_0_19_26)))
 (let ((?x73387 (* l_0_19_25 l_0_19_25)))
 (let ((?x73385 (* l_0_19_24 l_0_19_24)))
 (let ((?x73383 (* l_0_19_23 l_0_19_23)))
 (let ((?x73381 (* l_0_19_22 l_0_19_22)))
 (let ((?x73364 (+ (* (* 2.0 l_0_19_151) l_0_19_162) (* (* 2.0 l_0_19_152) l_0_19_163))))
 (let ((?x73368 (+ (+ ?x73364 (* (* 2.0 l_0_19_153) l_0_19_164)) (* (* 2.0 l_0_19_154) l_0_19_165))))
 (let ((?x73372 (- (+ ?x73368 (* (* 2.0 l_0_19_155) l_0_19_166)) (* (* 2.0 l_0_19_179) l_0_19_190))))
 (let ((?x73376 (- (- ?x73372 (* (* 2.0 l_0_19_180) l_0_19_191)) (* (* 2.0 l_0_19_181) l_0_19_192))))
 (let ((?x73380 (- (- ?x73376 (* (* 2.0 l_0_19_182) l_0_19_193)) (* (* 2.0 l_0_19_183) l_0_19_194))))
 (let ((?x73394 (- (- (- (- (- (- (- ?x73380 ?x73381) ?x73383) ?x73385) ?x73387) ?x73389) ?x73391) ?x73393)))
 (let ((?x73408 (+ (+ (+ (+ (+ (+ (+ ?x73394 ?x73395) ?x73397) ?x73399) ?x73401) ?x73403) ?x73405) ?x73407)))
 (= ?x73408 0.0)))))))))))))))))))))))
(assert
 (let ((?x71936 (* l_0_19_29 l_0_19_29)))
 (let ((?x71940 (* l_0_19_1 l_0_19_1)))
 (let ((?x54733 (- ?x71940 ?x71936)))
 (let ((?x73427 (- (+ ?x54733 (* (* 2.0 l_0_19_57) l_0_19_63)) (* (* 2.0 l_0_19_85) l_0_19_91))))
 (= ?x73427 0.0))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x71956 (* ?x71955 l_0_19_30)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x73441 (* ?x72027 l_0_19_2)))
 (let ((?x73445 (- (+ ?x73441 (* (* 2.0 l_0_19_141) l_0_19_147)) (* (* 2.0 l_0_19_169) l_0_19_175))))
 (let ((?x73450 (+ (+ (- ?x73445 ?x71956) (* (* 2.0 l_0_19_58) l_0_19_63)) (* (* 2.0 l_0_19_59) l_0_19_64))))
 (let ((?x73454 (- (- ?x73450 (* (* 2.0 l_0_19_86) l_0_19_91)) (* (* 2.0 l_0_19_87) l_0_19_92))))
 (= ?x73454 0.0)))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72992 (* ?x72841 l_0_19_53)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72990 (* ?x72838 l_0_19_52)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72988 (* ?x72835 l_0_19_51)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72986 (* ?x72832 l_0_19_50)))
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x71982 (* ?x71955 l_0_19_32)))
 (let ((?x72732 (* 2.0 l_0_19_24)))
 (let ((?x72982 (* ?x72732 l_0_19_9)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72980 (* ?x72532 l_0_19_8)))
 (let ((?x72727 (* 2.0 l_0_19_22)))
 (let ((?x72978 (* ?x72727 l_0_19_7)))
 (let ((?x72873 (* 2.0 l_0_19_10)))
 (let ((?x54728 (* ?x72873 l_0_19_25)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x54722 (* ?x72027 l_0_19_4)))
 (let ((?x73466 (- (- (- (+ (+ (+ (+ ?x54722 ?x54728) ?x72978) ?x72980) ?x72982) ?x71982) ?x72986) ?x72988)))
 (let ((?x73474 (+ (+ (- (- ?x73466 ?x72990) ?x72992) (* (* 2.0 l_0_19_60) l_0_19_63)) (* (* 2.0 l_0_19_61) l_0_19_64))))
 (let ((?x73480 (- (+ ?x73474 (* (* 2.0 l_0_19_62) l_0_19_65)) (* (* 2.0 l_0_19_88) l_0_19_91))))
 (let ((?x73486 (- (- ?x73480 (* (* 2.0 l_0_19_89) l_0_19_92)) (* (* 2.0 l_0_19_90) l_0_19_93))))
 (= ?x73486 0.0))))))))))))))))))))))))))
(assert
 (let ((?x73514 (* l_0_19_94 l_0_19_94)))
 (let ((?x73512 (* l_0_19_93 l_0_19_93)))
 (let ((?x73510 (* l_0_19_92 l_0_19_92)))
 (let ((?x73508 (* l_0_19_91 l_0_19_91)))
 (let ((?x73506 (* l_0_19_66 l_0_19_66)))
 (let ((?x73504 (* l_0_19_65 l_0_19_65)))
 (let ((?x73502 (* l_0_19_64 l_0_19_64)))
 (let ((?x73500 (* l_0_19_63 l_0_19_63)))
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72013 (* ?x71955 l_0_19_35)))
 (let ((?x73499 (- (* (* 2.0 l_0_19_1) l_0_19_7) ?x72013)))
 (let ((?x73513 (- (- (- (+ (+ (+ (+ ?x73499 ?x73500) ?x73502) ?x73504) ?x73506) ?x73508) ?x73510) ?x73512)))
 (= (- ?x73513 ?x73514) 0.0))))))))))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72019 (* ?x71955 l_0_19_39)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x72029 (* ?x72027 l_0_19_11)))
 (let ((?x54838 (- ?x72029 ?x72019)))
 (let ((?x73531 (+ (+ ?x54838 (* (* 2.0 l_0_19_63) l_0_19_67)) (* (* 2.0 l_0_19_64) l_0_19_68))))
 (let ((?x73537 (+ (+ ?x73531 (* (* 2.0 l_0_19_65) l_0_19_69)) (* (* 2.0 l_0_19_66) l_0_19_70))))
 (let ((?x73543 (- (- ?x73537 (* (* 2.0 l_0_19_91) l_0_19_95)) (* (* 2.0 l_0_19_92) l_0_19_96))))
 (let ((?x73549 (- (- ?x73543 (* (* 2.0 l_0_19_93) l_0_19_97)) (* (* 2.0 l_0_19_94) l_0_19_98))))
 (= ?x73549 0.0)))))))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72037 (* ?x71955 l_0_19_44)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x72030 (* ?x72027 l_0_19_16)))
 (let ((?x36010 (- (- ?x72030 (* (* 2.0 l_0_19_100) l_0_19_91)) (* (* 2.0 l_0_19_101) l_0_19_92))))
 (let ((?x73575 (- (- ?x36010 (* (* 2.0 l_0_19_102) l_0_19_93)) (* (* 2.0 l_0_19_103) l_0_19_94))))
 (let ((?x73580 (+ (+ (- ?x73575 ?x72037) (* (* 2.0 l_0_19_63) l_0_19_72)) (* (* 2.0 l_0_19_64) l_0_19_73))))
 (let ((?x73584 (+ (+ ?x73580 (* (* 2.0 l_0_19_65) l_0_19_74)) (* (* 2.0 l_0_19_66) l_0_19_75))))
 (= ?x73584 0.0))))))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72053 (* ?x71955 l_0_19_50)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x36059 (* ?x72027 l_0_19_22)))
 (let ((?x73603 (- (- ?x36059 (* (* 2.0 l_0_19_106) l_0_19_91)) (* (* 2.0 l_0_19_107) l_0_19_92))))
 (let ((?x73609 (- (- ?x73603 (* (* 2.0 l_0_19_108) l_0_19_93)) (* (* 2.0 l_0_19_109) l_0_19_94))))
 (let ((?x73614 (+ (+ (- ?x73609 ?x72053) (* (* 2.0 l_0_19_63) l_0_19_78)) (* (* 2.0 l_0_19_64) l_0_19_79))))
 (let ((?x73618 (+ (+ ?x73614 (* (* 2.0 l_0_19_65) l_0_19_80)) (* (* 2.0 l_0_19_66) l_0_19_81))))
 (= ?x73618 0.0))))))))))
(assert
 (let ((?x72117 (* l_0_19_31 l_0_19_31)))
 (let ((?x72115 (* l_0_19_30 l_0_19_30)))
 (let ((?x72113 (* l_0_19_3 l_0_19_3)))
 (let ((?x72103 (* l_0_19_2 l_0_19_2)))
 (let ((?x73633 (- (* (* (- 2.0) l_0_19_119) l_0_19_134) (* (* 2.0 l_0_19_120) l_0_19_135))))
 (let ((?x73644 (- (- ?x73633 (* (* 2.0 l_0_19_121) l_0_19_136)) (* (* 2.0 l_0_19_122) l_0_19_137))))
 (let ((?x73648 (+ (+ ?x73644 (* (* 2.0 l_0_19_142) l_0_19_147)) (* (* 2.0 l_0_19_143) l_0_19_148))))
 (let ((?x73652 (- (- ?x73648 (* (* 2.0 l_0_19_170) l_0_19_175)) (* (* 2.0 l_0_19_171) l_0_19_176))))
 (let ((?x73657 (- (- (+ ?x73652 ?x72103) (* (* 2.0 l_0_19_203) l_0_19_218)) (* (* 2.0 l_0_19_204) l_0_19_219))))
 (let ((?x73661 (- (- ?x73657 (* (* 2.0 l_0_19_205) l_0_19_220)) (* (* 2.0 l_0_19_206) l_0_19_221))))
 (let ((?x73665 (- (- ?x73661 (* (* 2.0 l_0_19_231) l_0_19_246)) (* (* 2.0 l_0_19_232) l_0_19_247))))
 (let ((?x73669 (- (- ?x73665 (* (* 2.0 l_0_19_233) l_0_19_248)) (* (* 2.0 l_0_19_234) l_0_19_249))))
 (let ((?x73673 (- (- ?x73669 (* (* 2.0 l_0_19_259) l_0_19_274)) (* (* 2.0 l_0_19_260) l_0_19_275))))
 (let ((?x73677 (- (- ?x73673 (* (* 2.0 l_0_19_261) l_0_19_276)) (* (* 2.0 l_0_19_262) l_0_19_277))))
 (= (- (- (+ ?x73677 ?x72113) ?x72115) ?x72117) 0.0))))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72175 (* ?x71987 l_0_19_33)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72173 (* ?x71984 l_0_19_32)))
 (let ((?x72170 (* 2.0 l_0_19_3)))
 (let ((?x72171 (* ?x72170 l_0_19_5)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x72141 (* ?x72140 l_0_19_4)))
 (let ((?x55110 (+ (* (* 2.0 l_0_19_144) l_0_19_147) (* (* 2.0 l_0_19_145) l_0_19_148))))
 (let ((?x55095 (- (+ ?x55110 (* (* 2.0 l_0_19_146) l_0_19_149)) (* (* 2.0 l_0_19_172) l_0_19_175))))
 (let ((?x55111 (- (- ?x55095 (* (* 2.0 l_0_19_173) l_0_19_176)) (* (* 2.0 l_0_19_174) l_0_19_177))))
 (= (- (- (+ (+ ?x55111 ?x72141) ?x72171) ?x72173) ?x72175) 0.0)))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72261 (* ?x71987 l_0_19_36)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72259 (* ?x71984 l_0_19_35)))
 (let ((?x72170 (* 2.0 l_0_19_3)))
 (let ((?x72257 (* ?x72170 l_0_19_8)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x5937 (* ?x72140 l_0_19_7)))
 (let ((?x73729 (* l_0_19_178 l_0_19_178)))
 (let ((?x73727 (* l_0_19_177 l_0_19_177)))
 (let ((?x73725 (* l_0_19_176 l_0_19_176)))
 (let ((?x73723 (* l_0_19_175 l_0_19_175)))
 (let ((?x73721 (* l_0_19_150 l_0_19_150)))
 (let ((?x73719 (* l_0_19_149 l_0_19_149)))
 (let ((?x73720 (+ (+ (* l_0_19_147 l_0_19_147) (* l_0_19_148 l_0_19_148)) ?x73719)))
 (let ((?x73732 (+ (+ (- (- (- (- (+ ?x73720 ?x73721) ?x73723) ?x73725) ?x73727) ?x73729) ?x5937) ?x72257)))
 (= (- (- ?x73732 ?x72259) ?x72261) 0.0))))))))))))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72992 (* ?x72841 l_0_19_53)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72990 (* ?x72838 l_0_19_52)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72988 (* ?x72835 l_0_19_51)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72986 (* ?x72832 l_0_19_50)))
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72429 (* ?x71987 l_0_19_45)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72426 (* ?x71984 l_0_19_44)))
 (let ((?x72732 (* 2.0 l_0_19_24)))
 (let ((?x72982 (* ?x72732 l_0_19_9)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72980 (* ?x72532 l_0_19_8)))
 (let ((?x72727 (* 2.0 l_0_19_22)))
 (let ((?x72978 (* ?x72727 l_0_19_7)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72378 (* ?x72377 l_0_19_3)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72375 (* ?x72374 l_0_19_2)))
 (let ((?x72873 (* 2.0 l_0_19_10)))
 (let ((?x54728 (* ?x72873 l_0_19_25)))
 (let ((?x55233 (+ (+ ?x54728 (* (* 2.0 l_0_19_147) l_0_19_156)) (* (* 2.0 l_0_19_148) l_0_19_157))))
 (let ((?x73749 (+ (+ ?x55233 (* (* 2.0 l_0_19_149) l_0_19_158)) (* (* 2.0 l_0_19_150) l_0_19_159))))
 (let ((?x73755 (- (- (+ (+ ?x73749 ?x72375) ?x72378) (* (* 2.0 l_0_19_175) l_0_19_184)) (* (* 2.0 l_0_19_176) l_0_19_185))))
 (let ((?x73759 (- (- ?x73755 (* (* 2.0 l_0_19_177) l_0_19_186)) (* (* 2.0 l_0_19_178) l_0_19_187))))
 (let ((?x73766 (- (- (- (- (+ (+ (+ ?x73759 ?x72978) ?x72980) ?x72982) ?x72426) ?x72429) ?x72986) ?x72988)))
 (= (- (- ?x73766 ?x72990) ?x72992) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72557 (* ?x71987 l_0_19_51)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72555 (* ?x71984 l_0_19_50)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72533 (* ?x72532 l_0_19_3)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x72520 (* ?x72140 l_0_19_22)))
 (let ((?x73782 (+ (* (* 2.0 l_0_19_147) l_0_19_162) (* (* 2.0 l_0_19_148) l_0_19_163))))
 (let ((?x73786 (+ (+ ?x73782 (* (* 2.0 l_0_19_149) l_0_19_164)) (* (* 2.0 l_0_19_150) l_0_19_165))))
 (let ((?x73790 (- (- ?x73786 (* (* 2.0 l_0_19_175) l_0_19_190)) (* (* 2.0 l_0_19_176) l_0_19_191))))
 (let ((?x73794 (- (- ?x73790 (* (* 2.0 l_0_19_177) l_0_19_192)) (* (* 2.0 l_0_19_178) l_0_19_193))))
 (= (- (- (+ (+ ?x73794 ?x72520) ?x72533) ?x72555) ?x72557) 0.0))))))))))))))
(assert
 (let ((?x72590 (* l_0_19_6 l_0_19_6)))
 (let ((?x72588 (* l_0_19_5 l_0_19_5)))
 (let ((?x72586 (* l_0_19_4 l_0_19_4)))
 (let ((?x72584 (* l_0_19_34 l_0_19_34)))
 (let ((?x55419 (- (- (* (- l_0_19_32) l_0_19_32) (* l_0_19_33 l_0_19_33)) ?x72584)))
 (= (+ (+ (+ ?x55419 ?x72586) ?x72588) ?x72590) 0.0)))))))
(assert
 (let ((?x72613 (* (* 2.0 l_0_19_6) l_0_19_9)))
 (let ((?x72610 (* (* 2.0 l_0_19_5) l_0_19_8)))
 (let ((?x72607 (* (* 2.0 l_0_19_4) l_0_19_7)))
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72604 (* ?x72603 l_0_19_37)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72601 (* ?x72600 l_0_19_36)))
 (let ((?x55448 (+ (+ (- (- (* (* (- 2.0) l_0_19_32) l_0_19_35) ?x72601) ?x72604) ?x72607) ?x72610)))
 (= (+ ?x55448 ?x72613) 0.0))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72644 (* ?x72603 l_0_19_41)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72642 (* ?x72600 l_0_19_40)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72640 (* ?x7080 l_0_19_39)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x72638 (* ?x72637 l_0_19_6)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x72635 (* ?x71979 l_0_19_5)))
 (let ((?x53997 (+ (+ (* (* 2.0 l_0_19_11) l_0_19_4) ?x72635) ?x72638)))
 (= (- (- (- ?x53997 ?x72640) ?x72642) ?x72644) 0.0)))))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72676 (* ?x72603 l_0_19_46)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72673 (* ?x72600 l_0_19_45)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72670 (* ?x7080 l_0_19_44)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x72667 (* ?x72666 l_0_19_6)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72664 (* ?x72377 l_0_19_5)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72656 (* ?x72374 l_0_19_4)))
 (= (- (- (- (+ (+ ?x72656 ?x72664) ?x72667) ?x72670) ?x72673) ?x72676) 0.0))))))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72739 (* ?x72603 l_0_19_52)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72737 (* ?x72600 l_0_19_51)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72735 (* ?x7080 l_0_19_50)))
 (let ((?x72732 (* 2.0 l_0_19_24)))
 (let ((?x72733 (* ?x72732 l_0_19_6)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72730 (* ?x72532 l_0_19_5)))
 (let ((?x72727 (* 2.0 l_0_19_22)))
 (let ((?x72728 (* ?x72727 l_0_19_4)))
 (let ((?x36601 (- (- (- (+ (+ ?x72728 ?x72730) ?x72733) ?x72735) ?x72737) ?x72739)))
 (= ?x36601 0.0)))))))))))))))
(assert
 (let ((?x72807 (* l_0_19_9 l_0_19_9)))
 (let ((?x72805 (* l_0_19_8 l_0_19_8)))
 (let ((?x72803 (* l_0_19_7 l_0_19_7)))
 (let ((?x72801 (* l_0_19_38 l_0_19_38)))
 (let ((?x72799 (* l_0_19_37 l_0_19_37)))
 (let ((?x72797 (* l_0_19_36 l_0_19_36)))
 (let ((?x55527 (- (- (- (* l_0_19_10 l_0_19_10) (* l_0_19_35 l_0_19_35)) ?x72797) ?x72799)))
 (= (+ (+ (+ (- ?x55527 ?x72801) ?x72803) ?x72805) ?x72807) 0.0)))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72842 (* ?x72841 l_0_19_42)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72839 (* ?x72838 l_0_19_41)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72836 (* ?x72835 l_0_19_40)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72833 (* ?x72832 l_0_19_39)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x72830 (* ?x72637 l_0_19_9)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x72828 (* ?x71979 l_0_19_8)))
 (let ((?x52982 (* 2.0 l_0_19_11)))
 (let ((?x72826 (* ?x52982 l_0_19_7)))
 (let ((?x72873 (* 2.0 l_0_19_10)))
 (let ((?x72874 (* ?x72873 l_0_19_14)))
 (let ((?x55576 (- (- (- (- (+ (+ (+ ?x72874 ?x72826) ?x72828) ?x72830) ?x72833) ?x72836) ?x72839) ?x72842)))
 (= ?x55576 0.0)))))))))))))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72896 (* ?x72841 l_0_19_47)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72893 (* ?x72838 l_0_19_46)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72890 (* ?x72835 l_0_19_45)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72887 (* ?x72832 l_0_19_44)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x72884 (* ?x72666 l_0_19_9)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72882 (* ?x72377 l_0_19_8)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72880 (* ?x72374 l_0_19_7)))
 (let ((?x72873 (* 2.0 l_0_19_10)))
 (let ((?x72875 (* ?x72873 l_0_19_19)))
 (let ((?x73842 (- (- (- (- (+ (+ (+ ?x72875 ?x72880) ?x72882) ?x72884) ?x72887) ?x72890) ?x72893) ?x72896)))
 (= ?x73842 0.0)))))))))))))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72992 (* ?x72841 l_0_19_53)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72990 (* ?x72838 l_0_19_52)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72988 (* ?x72835 l_0_19_51)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72986 (* ?x72832 l_0_19_50)))
 (let ((?x72732 (* 2.0 l_0_19_24)))
 (let ((?x72982 (* ?x72732 l_0_19_9)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72980 (* ?x72532 l_0_19_8)))
 (let ((?x72727 (* 2.0 l_0_19_22)))
 (let ((?x72978 (* ?x72727 l_0_19_7)))
 (let ((?x72873 (* 2.0 l_0_19_10)))
 (let ((?x54728 (* ?x72873 l_0_19_25)))
 (let ((?x36615 (- (- (- (- (+ (+ (+ ?x54728 ?x72978) ?x72980) ?x72982) ?x72986) ?x72988) ?x72990) ?x72992)))
 (= ?x36615 0.0)))))))))))))))))))
(assert
 (let ((?x73077 (* l_0_19_43 l_0_19_43)))
 (let ((?x73075 (* l_0_19_42 l_0_19_42)))
 (let ((?x73073 (* l_0_19_41 l_0_19_41)))
 (let ((?x73071 (* l_0_19_40 l_0_19_40)))
 (let ((?x73069 (* l_0_19_39 l_0_19_39)))
 (let ((?x73067 (* l_0_19_15 l_0_19_15)))
 (let ((?x73065 (* l_0_19_14 l_0_19_14)))
 (let ((?x73052 (* l_0_19_13 l_0_19_13)))
 (let ((?x73850 (+ (+ (+ (* l_0_19_11 l_0_19_11) (* l_0_19_12 l_0_19_12)) ?x73052) ?x73065)))
 (= (- (- (- (- (- (+ ?x73850 ?x73067) ?x73069) ?x73071) ?x73073) ?x73075) ?x73077) 0.0)))))))))))
(assert
 (let ((?x73121 (* 2.0 l_0_19_43)))
 (let ((?x73122 (* ?x73121 l_0_19_48)))
 (let ((?x73117 (* 2.0 l_0_19_42)))
 (let ((?x73118 (* ?x73117 l_0_19_47)))
 (let ((?x73113 (* 2.0 l_0_19_41)))
 (let ((?x73114 (* ?x73113 l_0_19_46)))
 (let ((?x73109 (* 2.0 l_0_19_40)))
 (let ((?x73110 (* ?x73109 l_0_19_45)))
 (let ((?x73105 (* 2.0 l_0_19_39)))
 (let ((?x73106 (* ?x73105 l_0_19_44)))
 (let ((?x73101 (* 2.0 l_0_19_15)))
 (let ((?x73102 (* ?x73101 l_0_19_20)))
 (let ((?x73097 (* 2.0 l_0_19_14)))
 (let ((?x73098 (* ?x73097 l_0_19_19)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x73094 (* ?x72637 l_0_19_18)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x73091 (* ?x71979 l_0_19_17)))
 (let ((?x54273 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_16) ?x73091) ?x73094) ?x73098) ?x73102)))
 (= (- (- (- (- (- ?x54273 ?x73106) ?x73110) ?x73114) ?x73118) ?x73122) 0.0)))))))))))))))))))))
(assert
 (let ((?x73121 (* 2.0 l_0_19_43)))
 (let ((?x73188 (* ?x73121 l_0_19_54)))
 (let ((?x73117 (* 2.0 l_0_19_42)))
 (let ((?x73186 (* ?x73117 l_0_19_53)))
 (let ((?x73113 (* 2.0 l_0_19_41)))
 (let ((?x73184 (* ?x73113 l_0_19_52)))
 (let ((?x73109 (* 2.0 l_0_19_40)))
 (let ((?x73182 (* ?x73109 l_0_19_51)))
 (let ((?x73105 (* 2.0 l_0_19_39)))
 (let ((?x73180 (* ?x73105 l_0_19_50)))
 (let ((?x73101 (* 2.0 l_0_19_15)))
 (let ((?x73158 (* ?x73101 l_0_19_26)))
 (let ((?x73097 (* 2.0 l_0_19_14)))
 (let ((?x73156 (* ?x73097 l_0_19_25)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x73154 (* ?x72637 l_0_19_24)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x73152 (* ?x71979 l_0_19_23)))
 (let ((?x54309 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_22) ?x73152) ?x73154) ?x73156) ?x73158)))
 (let ((?x73889 (- (- (- (- (- ?x54309 ?x73180) ?x73182) ?x73184) ?x73186) ?x73188)))
 (= ?x73889 0.0))))))))))))))))))))))
(assert
 (let ((?x73243 (* l_0_19_49 l_0_19_49)))
 (let ((?x73241 (* l_0_19_48 l_0_19_48)))
 (let ((?x73239 (* l_0_19_47 l_0_19_47)))
 (let ((?x73237 (* l_0_19_46 l_0_19_46)))
 (let ((?x73235 (* l_0_19_45 l_0_19_45)))
 (let ((?x73233 (* l_0_19_44 l_0_19_44)))
 (let ((?x73226 (* l_0_19_21 l_0_19_21)))
 (let ((?x73224 (* l_0_19_20 l_0_19_20)))
 (let ((?x73222 (* l_0_19_19 l_0_19_19)))
 (let ((?x73220 (* l_0_19_18 l_0_19_18)))
 (let ((?x73905 (+ (+ (+ (* l_0_19_16 l_0_19_16) (* l_0_19_17 l_0_19_17)) ?x73220) ?x73222)))
 (let ((?x73912 (- (- (- (- (- (+ (+ ?x73905 ?x73224) ?x73226) ?x73233) ?x73235) ?x73237) ?x73239) ?x73241)))
 (= (- ?x73912 ?x73243) 0.0))))))))))))))
(assert
 (let ((?x73321 (* (* 2.0 l_0_19_49) l_0_19_55)))
 (let ((?x73318 (* (* 2.0 l_0_19_48) l_0_19_54)))
 (let ((?x73315 (* (* 2.0 l_0_19_47) l_0_19_53)))
 (let ((?x73312 (* (* 2.0 l_0_19_46) l_0_19_52)))
 (let ((?x73309 (* (* 2.0 l_0_19_45) l_0_19_51)))
 (let ((?x73306 (* (* 2.0 l_0_19_44) l_0_19_50)))
 (let ((?x73298 (* (* 2.0 l_0_19_21) l_0_19_27)))
 (let ((?x73295 (* (* 2.0 l_0_19_20) l_0_19_26)))
 (let ((?x73292 (* (* 2.0 l_0_19_19) l_0_19_25)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x73277 (* ?x72666 l_0_19_24)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x73272 (* ?x72377 l_0_19_23)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x73270 (* ?x72374 l_0_19_22)))
 (let ((?x36667 (- (- (+ (+ (+ (+ (+ ?x73270 ?x73272) ?x73277) ?x73292) ?x73295) ?x73298) ?x73306) ?x73309)))
 (= (- (- (- (- ?x36667 ?x73312) ?x73315) ?x73318) ?x73321) 0.0))))))))))))))))))
(assert
 (let ((?x73407 (* l_0_19_56 l_0_19_56)))
 (let ((?x73405 (* l_0_19_55 l_0_19_55)))
 (let ((?x73403 (* l_0_19_54 l_0_19_54)))
 (let ((?x73401 (* l_0_19_53 l_0_19_53)))
 (let ((?x73399 (* l_0_19_52 l_0_19_52)))
 (let ((?x73397 (* l_0_19_51 l_0_19_51)))
 (let ((?x73395 (* l_0_19_50 l_0_19_50)))
 (let ((?x73393 (* l_0_19_28 l_0_19_28)))
 (let ((?x73391 (* l_0_19_27 l_0_19_27)))
 (let ((?x73389 (* l_0_19_26 l_0_19_26)))
 (let ((?x73387 (* l_0_19_25 l_0_19_25)))
 (let ((?x73385 (* l_0_19_24 l_0_19_24)))
 (let ((?x55690 (+ (+ (+ (* l_0_19_22 l_0_19_22) (* l_0_19_23 l_0_19_23)) ?x73385) ?x73387)))
 (let ((?x9564 (- (- (- (- (+ (+ (+ ?x55690 ?x73389) ?x73391) ?x73393) ?x73395) ?x73397) ?x73399) ?x73401)))
 (= (- (- (- ?x9564 ?x73403) ?x73405) ?x73407) 0.0))))))))))))))))
(assert
 (let ((?x71936 (* l_0_19_29 l_0_19_29)))
 (let ((?x71940 (* l_0_19_1 l_0_19_1)))
 (let ((?x54733 (- ?x71940 ?x71936)))
 (= ?x54733 0.0)))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x71956 (* ?x71955 l_0_19_30)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x73441 (* ?x72027 l_0_19_2)))
 (= (- ?x73441 ?x71956) 0.0))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x71982 (* ?x71955 l_0_19_32)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x54722 (* ?x72027 l_0_19_4)))
 (= (- ?x54722 ?x71982) 0.0))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72013 (* ?x71955 l_0_19_35)))
 (let ((?x73499 (- (* (* 2.0 l_0_19_1) l_0_19_7) ?x72013)))
 (= ?x73499 0.0)))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72019 (* ?x71955 l_0_19_39)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x72029 (* ?x72027 l_0_19_11)))
 (let ((?x54838 (- ?x72029 ?x72019)))
 (= ?x54838 0.0)))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72037 (* ?x71955 l_0_19_44)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x72030 (* ?x72027 l_0_19_16)))
 (= (- ?x72030 ?x72037) 0.0))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72053 (* ?x71955 l_0_19_50)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x36059 (* ?x72027 l_0_19_22)))
 (let ((?x73928 (- (+ (- ?x36059 ?x72053) (* (* 2.0 l_0_19_57) l_0_19_60)) (* (* 2.0 l_0_19_85) l_0_19_88))))
 (= ?x73928 0.0)))))))
(assert
 (let ((?x72117 (* l_0_19_31 l_0_19_31)))
 (let ((?x72115 (* l_0_19_30 l_0_19_30)))
 (let ((?x72113 (* l_0_19_3 l_0_19_3)))
 (let ((?x72103 (* l_0_19_2 l_0_19_2)))
 (let ((?x73946 (- (* (* (- 2.0) l_0_19_113) l_0_19_116) (* (* 2.0 l_0_19_197) l_0_19_200))))
 (let ((?x73951 (- (- (+ ?x73946 ?x72103) (* (* 2.0 l_0_19_225) l_0_19_228)) (* (* 2.0 l_0_19_253) l_0_19_256))))
 (= (- (- (+ ?x73951 ?x72113) ?x72115) ?x72117) 0.0))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72175 (* ?x71987 l_0_19_33)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72173 (* ?x71984 l_0_19_32)))
 (let ((?x72170 (* 2.0 l_0_19_3)))
 (let ((?x72171 (* ?x72170 l_0_19_5)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x72141 (* ?x72140 l_0_19_4)))
 (= (- (- (+ ?x72141 ?x72171) ?x72173) ?x72175) 0.0))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72261 (* ?x71987 l_0_19_36)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72259 (* ?x71984 l_0_19_35)))
 (let ((?x72170 (* 2.0 l_0_19_3)))
 (let ((?x72257 (* ?x72170 l_0_19_8)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x5937 (* ?x72140 l_0_19_7)))
 (= (- (- (+ ?x5937 ?x72257) ?x72259) ?x72261) 0.0))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72429 (* ?x71987 l_0_19_45)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72426 (* ?x71984 l_0_19_44)))
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x71982 (* ?x71955 l_0_19_32)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72378 (* ?x72377 l_0_19_3)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72375 (* ?x72374 l_0_19_2)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x54722 (* ?x72027 l_0_19_4)))
 (= (- (- (- (+ (+ ?x54722 ?x72375) ?x72378) ?x71982) ?x72426) ?x72429) 0.0))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72557 (* ?x71987 l_0_19_51)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72555 (* ?x71984 l_0_19_50)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72533 (* ?x72532 l_0_19_3)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x72520 (* ?x72140 l_0_19_22)))
 (let ((?x74013 (- (* (* 2.0 l_0_19_141) l_0_19_144) (* (* 2.0 l_0_19_169) l_0_19_172))))
 (let ((?x74019 (+ (- (- (+ (+ ?x74013 ?x72520) ?x72533) ?x72555) ?x72557) (* (* 2.0 l_0_19_58) l_0_19_60))))
 (let ((?x74023 (- (+ ?x74019 (* (* 2.0 l_0_19_59) l_0_19_61)) (* (* 2.0 l_0_19_86) l_0_19_88))))
 (= (- ?x74023 (* (* 2.0 l_0_19_87) l_0_19_89)) 0.0)))))))))))))
(assert
 (let ((?x72590 (* l_0_19_6 l_0_19_6)))
 (let ((?x72588 (* l_0_19_5 l_0_19_5)))
 (let ((?x72586 (* l_0_19_4 l_0_19_4)))
 (let ((?x72584 (* l_0_19_34 l_0_19_34)))
 (let ((?x55419 (- (- (* (- l_0_19_32) l_0_19_32) (* l_0_19_33 l_0_19_33)) ?x72584)))
 (= (+ (+ (+ ?x55419 ?x72586) ?x72588) ?x72590) 0.0)))))))
(assert
 (let ((?x72613 (* (* 2.0 l_0_19_6) l_0_19_9)))
 (let ((?x72610 (* (* 2.0 l_0_19_5) l_0_19_8)))
 (let ((?x72607 (* (* 2.0 l_0_19_4) l_0_19_7)))
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72604 (* ?x72603 l_0_19_37)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72601 (* ?x72600 l_0_19_36)))
 (let ((?x55448 (+ (+ (- (- (* (* (- 2.0) l_0_19_32) l_0_19_35) ?x72601) ?x72604) ?x72607) ?x72610)))
 (= (+ ?x55448 ?x72613) 0.0))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72644 (* ?x72603 l_0_19_41)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72642 (* ?x72600 l_0_19_40)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72640 (* ?x7080 l_0_19_39)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x72638 (* ?x72637 l_0_19_6)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x72635 (* ?x71979 l_0_19_5)))
 (let ((?x53997 (+ (+ (* (* 2.0 l_0_19_11) l_0_19_4) ?x72635) ?x72638)))
 (= (- (- (- ?x53997 ?x72640) ?x72642) ?x72644) 0.0)))))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72676 (* ?x72603 l_0_19_46)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72673 (* ?x72600 l_0_19_45)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72670 (* ?x7080 l_0_19_44)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x72667 (* ?x72666 l_0_19_6)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72664 (* ?x72377 l_0_19_5)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72656 (* ?x72374 l_0_19_4)))
 (= (- (- (- (+ (+ ?x72656 ?x72664) ?x72667) ?x72670) ?x72673) ?x72676) 0.0))))))))))))))
(assert
 (let ((?x74068 (* l_0_19_90 l_0_19_90)))
 (let ((?x74066 (* l_0_19_89 l_0_19_89)))
 (let ((?x74064 (* l_0_19_88 l_0_19_88)))
 (let ((?x74062 (* l_0_19_62 l_0_19_62)))
 (let ((?x74060 (* l_0_19_61 l_0_19_61)))
 (let ((?x74058 (* l_0_19_60 l_0_19_60)))
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72739 (* ?x72603 l_0_19_52)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72737 (* ?x72600 l_0_19_51)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72735 (* ?x7080 l_0_19_50)))
 (let ((?x72732 (* 2.0 l_0_19_24)))
 (let ((?x72733 (* ?x72732 l_0_19_6)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72730 (* ?x72532 l_0_19_5)))
 (let ((?x72727 (* 2.0 l_0_19_22)))
 (let ((?x72728 (* ?x72727 l_0_19_4)))
 (let ((?x36601 (- (- (- (+ (+ ?x72728 ?x72730) ?x72733) ?x72735) ?x72737) ?x72739)))
 (= (- (- (- (+ (+ (+ ?x36601 ?x74058) ?x74060) ?x74062) ?x74064) ?x74066) ?x74068) 0.0)))))))))))))))))))))
(assert
 (let ((?x72807 (* l_0_19_9 l_0_19_9)))
 (let ((?x72805 (* l_0_19_8 l_0_19_8)))
 (let ((?x72803 (* l_0_19_7 l_0_19_7)))
 (let ((?x72801 (* l_0_19_38 l_0_19_38)))
 (let ((?x72799 (* l_0_19_37 l_0_19_37)))
 (let ((?x72797 (* l_0_19_36 l_0_19_36)))
 (let ((?x55527 (- (- (- (* l_0_19_10 l_0_19_10) (* l_0_19_35 l_0_19_35)) ?x72797) ?x72799)))
 (= (+ (+ (+ (- ?x55527 ?x72801) ?x72803) ?x72805) ?x72807) 0.0)))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72842 (* ?x72841 l_0_19_42)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72839 (* ?x72838 l_0_19_41)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72836 (* ?x72835 l_0_19_40)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72833 (* ?x72832 l_0_19_39)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x72830 (* ?x72637 l_0_19_9)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x72828 (* ?x71979 l_0_19_8)))
 (let ((?x52982 (* 2.0 l_0_19_11)))
 (let ((?x72826 (* ?x52982 l_0_19_7)))
 (let ((?x72873 (* 2.0 l_0_19_10)))
 (let ((?x72874 (* ?x72873 l_0_19_14)))
 (let ((?x55576 (- (- (- (- (+ (+ (+ ?x72874 ?x72826) ?x72828) ?x72830) ?x72833) ?x72836) ?x72839) ?x72842)))
 (= ?x55576 0.0)))))))))))))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72896 (* ?x72841 l_0_19_47)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72893 (* ?x72838 l_0_19_46)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72890 (* ?x72835 l_0_19_45)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72887 (* ?x72832 l_0_19_44)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x72884 (* ?x72666 l_0_19_9)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72882 (* ?x72377 l_0_19_8)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72880 (* ?x72374 l_0_19_7)))
 (let ((?x72873 (* 2.0 l_0_19_10)))
 (let ((?x72875 (* ?x72873 l_0_19_19)))
 (let ((?x73842 (- (- (- (- (+ (+ (+ ?x72875 ?x72880) ?x72882) ?x72884) ?x72887) ?x72890) ?x72893) ?x72896)))
 (= ?x73842 0.0)))))))))))))))))))
(assert
 (let ((?x73077 (* l_0_19_43 l_0_19_43)))
 (let ((?x73075 (* l_0_19_42 l_0_19_42)))
 (let ((?x73073 (* l_0_19_41 l_0_19_41)))
 (let ((?x73071 (* l_0_19_40 l_0_19_40)))
 (let ((?x73069 (* l_0_19_39 l_0_19_39)))
 (let ((?x73067 (* l_0_19_15 l_0_19_15)))
 (let ((?x73065 (* l_0_19_14 l_0_19_14)))
 (let ((?x73052 (* l_0_19_13 l_0_19_13)))
 (let ((?x73850 (+ (+ (+ (* l_0_19_11 l_0_19_11) (* l_0_19_12 l_0_19_12)) ?x73052) ?x73065)))
 (= (- (- (- (- (- (+ ?x73850 ?x73067) ?x73069) ?x73071) ?x73073) ?x73075) ?x73077) 0.0)))))))))))
(assert
 (let ((?x73121 (* 2.0 l_0_19_43)))
 (let ((?x73122 (* ?x73121 l_0_19_48)))
 (let ((?x73117 (* 2.0 l_0_19_42)))
 (let ((?x73118 (* ?x73117 l_0_19_47)))
 (let ((?x73113 (* 2.0 l_0_19_41)))
 (let ((?x73114 (* ?x73113 l_0_19_46)))
 (let ((?x73109 (* 2.0 l_0_19_40)))
 (let ((?x73110 (* ?x73109 l_0_19_45)))
 (let ((?x73105 (* 2.0 l_0_19_39)))
 (let ((?x73106 (* ?x73105 l_0_19_44)))
 (let ((?x73101 (* 2.0 l_0_19_15)))
 (let ((?x73102 (* ?x73101 l_0_19_20)))
 (let ((?x73097 (* 2.0 l_0_19_14)))
 (let ((?x73098 (* ?x73097 l_0_19_19)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x73094 (* ?x72637 l_0_19_18)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x73091 (* ?x71979 l_0_19_17)))
 (let ((?x54273 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_16) ?x73091) ?x73094) ?x73098) ?x73102)))
 (= (- (- (- (- (- ?x54273 ?x73106) ?x73110) ?x73114) ?x73118) ?x73122) 0.0)))))))))))))))))))))
(assert
 (let ((?x73121 (* 2.0 l_0_19_43)))
 (let ((?x73188 (* ?x73121 l_0_19_54)))
 (let ((?x73117 (* 2.0 l_0_19_42)))
 (let ((?x73186 (* ?x73117 l_0_19_53)))
 (let ((?x73113 (* 2.0 l_0_19_41)))
 (let ((?x73184 (* ?x73113 l_0_19_52)))
 (let ((?x73109 (* 2.0 l_0_19_40)))
 (let ((?x73182 (* ?x73109 l_0_19_51)))
 (let ((?x73105 (* 2.0 l_0_19_39)))
 (let ((?x73180 (* ?x73105 l_0_19_50)))
 (let ((?x73101 (* 2.0 l_0_19_15)))
 (let ((?x73158 (* ?x73101 l_0_19_26)))
 (let ((?x73097 (* 2.0 l_0_19_14)))
 (let ((?x73156 (* ?x73097 l_0_19_25)))
 (let ((?x72637 (* 2.0 l_0_19_13)))
 (let ((?x73154 (* ?x72637 l_0_19_24)))
 (let ((?x71979 (* 2.0 l_0_19_12)))
 (let ((?x73152 (* ?x71979 l_0_19_23)))
 (let ((?x54309 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_22) ?x73152) ?x73154) ?x73156) ?x73158)))
 (let ((?x73889 (- (- (- (- (- ?x54309 ?x73180) ?x73182) ?x73184) ?x73186) ?x73188)))
 (let ((?x74085 (+ (+ ?x73889 (* (* 2.0 l_0_19_60) l_0_19_67)) (* (* 2.0 l_0_19_61) l_0_19_68))))
 (let ((?x74089 (- (+ ?x74085 (* (* 2.0 l_0_19_62) l_0_19_69)) (* (* 2.0 l_0_19_88) l_0_19_95))))
 (let ((?x74093 (- (- ?x74089 (* (* 2.0 l_0_19_89) l_0_19_96)) (* (* 2.0 l_0_19_90) l_0_19_97))))
 (= ?x74093 0.0)))))))))))))))))))))))))
(assert
 (let ((?x73243 (* l_0_19_49 l_0_19_49)))
 (let ((?x73241 (* l_0_19_48 l_0_19_48)))
 (let ((?x73239 (* l_0_19_47 l_0_19_47)))
 (let ((?x73237 (* l_0_19_46 l_0_19_46)))
 (let ((?x73235 (* l_0_19_45 l_0_19_45)))
 (let ((?x73233 (* l_0_19_44 l_0_19_44)))
 (let ((?x73226 (* l_0_19_21 l_0_19_21)))
 (let ((?x73224 (* l_0_19_20 l_0_19_20)))
 (let ((?x73222 (* l_0_19_19 l_0_19_19)))
 (let ((?x73220 (* l_0_19_18 l_0_19_18)))
 (let ((?x73905 (+ (+ (+ (* l_0_19_16 l_0_19_16) (* l_0_19_17 l_0_19_17)) ?x73220) ?x73222)))
 (let ((?x73912 (- (- (- (- (- (+ (+ ?x73905 ?x73224) ?x73226) ?x73233) ?x73235) ?x73237) ?x73239) ?x73241)))
 (= (- ?x73912 ?x73243) 0.0))))))))))))))
(assert
 (let ((?x73321 (* (* 2.0 l_0_19_49) l_0_19_55)))
 (let ((?x73318 (* (* 2.0 l_0_19_48) l_0_19_54)))
 (let ((?x73315 (* (* 2.0 l_0_19_47) l_0_19_53)))
 (let ((?x73312 (* (* 2.0 l_0_19_46) l_0_19_52)))
 (let ((?x73309 (* (* 2.0 l_0_19_45) l_0_19_51)))
 (let ((?x73306 (* (* 2.0 l_0_19_44) l_0_19_50)))
 (let ((?x73298 (* (* 2.0 l_0_19_21) l_0_19_27)))
 (let ((?x73295 (* (* 2.0 l_0_19_20) l_0_19_26)))
 (let ((?x73292 (* (* 2.0 l_0_19_19) l_0_19_25)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x73277 (* ?x72666 l_0_19_24)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x73272 (* ?x72377 l_0_19_23)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x73270 (* ?x72374 l_0_19_22)))
 (let ((?x74124 (- (* (* (- 2.0) l_0_19_100) l_0_19_88) (* (* 2.0 l_0_19_101) l_0_19_89))))
 (let ((?x74129 (+ (+ (+ (- ?x74124 (* (* 2.0 l_0_19_102) l_0_19_90)) ?x73270) ?x73272) ?x73277)))
 (let ((?x74136 (- (- (- (- (+ (+ (+ ?x74129 ?x73292) ?x73295) ?x73298) ?x73306) ?x73309) ?x73312) ?x73315)))
 (let ((?x74142 (+ (+ (- (- ?x74136 ?x73318) ?x73321) (* (* 2.0 l_0_19_60) l_0_19_72)) (* (* 2.0 l_0_19_61) l_0_19_73))))
 (= (+ ?x74142 (* (* 2.0 l_0_19_62) l_0_19_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x73407 (* l_0_19_56 l_0_19_56)))
 (let ((?x73405 (* l_0_19_55 l_0_19_55)))
 (let ((?x73403 (* l_0_19_54 l_0_19_54)))
 (let ((?x73401 (* l_0_19_53 l_0_19_53)))
 (let ((?x73399 (* l_0_19_52 l_0_19_52)))
 (let ((?x73397 (* l_0_19_51 l_0_19_51)))
 (let ((?x73395 (* l_0_19_50 l_0_19_50)))
 (let ((?x73393 (* l_0_19_28 l_0_19_28)))
 (let ((?x73391 (* l_0_19_27 l_0_19_27)))
 (let ((?x73389 (* l_0_19_26 l_0_19_26)))
 (let ((?x73387 (* l_0_19_25 l_0_19_25)))
 (let ((?x73385 (* l_0_19_24 l_0_19_24)))
 (let ((?x73383 (* l_0_19_23 l_0_19_23)))
 (let ((?x73381 (* l_0_19_22 l_0_19_22)))
 (let ((?x74184 (- (* (* (- 2.0) l_0_19_106) l_0_19_88) (* (* 2.0 l_0_19_107) l_0_19_89))))
 (let ((?x74189 (+ (+ (+ (- ?x74184 (* (* 2.0 l_0_19_108) l_0_19_90)) ?x73381) ?x73383) ?x73385)))
 (let ((?x74196 (- (- (- (+ (+ (+ (+ ?x74189 ?x73387) ?x73389) ?x73391) ?x73393) ?x73395) ?x73397) ?x73399)))
 (let ((?x74202 (+ (- (- (- (- ?x74196 ?x73401) ?x73403) ?x73405) ?x73407) (* (* 2.0 l_0_19_60) l_0_19_78))))
 (let ((?x74206 (+ (+ ?x74202 (* (* 2.0 l_0_19_61) l_0_19_79)) (* (* 2.0 l_0_19_62) l_0_19_80))))
 (= ?x74206 0.0)))))))))))))))))))))
(assert
 (let ((?x71936 (* l_0_19_29 l_0_19_29)))
 (let ((?x71940 (* l_0_19_1 l_0_19_1)))
 (let ((?x54733 (- ?x71940 ?x71936)))
 (= ?x54733 0.0)))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x71956 (* ?x71955 l_0_19_30)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x73441 (* ?x72027 l_0_19_2)))
 (let ((?x74248 (- (- ?x73441 (* (* 2.0 l_0_19_113) l_0_19_128)) (* (* 2.0 l_0_19_197) l_0_19_212))))
 (let ((?x74252 (- (- ?x74248 (* (* 2.0 l_0_19_225) l_0_19_240)) (* (* 2.0 l_0_19_253) l_0_19_268))))
 (= (- ?x74252 ?x71956) 0.0))))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72013 (* ?x71955 l_0_19_35)))
 (let ((?x73499 (- (* (* 2.0 l_0_19_1) l_0_19_7) ?x72013)))
 (= ?x73499 0.0)))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72037 (* ?x71955 l_0_19_44)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x72030 (* ?x72027 l_0_19_16)))
 (= (- ?x72030 ?x72037) 0.0))))))
(assert
 (let ((?x71955 (* 2.0 l_0_19_29)))
 (let ((?x72053 (* ?x71955 l_0_19_50)))
 (let ((?x72027 (* 2.0 l_0_19_1)))
 (let ((?x36059 (* ?x72027 l_0_19_22)))
 (let ((?x74286 (- (- ?x36059 (* (* 2.0 l_0_19_100) l_0_19_86)) (* (* 2.0 l_0_19_101) l_0_19_87))))
 (let ((?x74290 (- (+ ?x74286 (* (* 2.0 l_0_19_141) l_0_19_156)) (* (* 2.0 l_0_19_169) l_0_19_184))))
 (let ((?x74295 (+ (+ (- ?x74290 ?x72053) (* (* 2.0 l_0_19_58) l_0_19_72)) (* (* 2.0 l_0_19_59) l_0_19_73))))
 (= ?x74295 0.0)))))))))
(assert
 (let ((?x72117 (* l_0_19_31 l_0_19_31)))
 (let ((?x72115 (* l_0_19_30 l_0_19_30)))
 (let ((?x72113 (* l_0_19_3 l_0_19_3)))
 (let ((?x72103 (* l_0_19_2 l_0_19_2)))
 (let ((?x74324 (- (* (* (- 2.0) l_0_19_114) l_0_19_128) (* (* 2.0 l_0_19_115) l_0_19_129))))
 (let ((?x74333 (- (- ?x74324 (* (* 2.0 l_0_19_198) l_0_19_212)) (* (* 2.0 l_0_19_199) l_0_19_213))))
 (let ((?x74338 (- (- (+ ?x74333 ?x72103) (* (* 2.0 l_0_19_226) l_0_19_240)) (* (* 2.0 l_0_19_227) l_0_19_241))))
 (let ((?x74342 (- (- ?x74338 (* (* 2.0 l_0_19_254) l_0_19_268)) (* (* 2.0 l_0_19_255) l_0_19_269))))
 (= (- (- (+ ?x74342 ?x72113) ?x72115) ?x72117) 0.0))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72175 (* ?x71987 l_0_19_33)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72173 (* ?x71984 l_0_19_32)))
 (let ((?x72170 (* 2.0 l_0_19_3)))
 (let ((?x72171 (* ?x72170 l_0_19_5)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x72141 (* ?x72140 l_0_19_4)))
 (let ((?x74400 (- (* (* (- 2.0) l_0_19_116) l_0_19_128) (* (* 2.0 l_0_19_117) l_0_19_129))))
 (let ((?x74405 (- (+ (- ?x74400 (* (* 2.0 l_0_19_118) l_0_19_130)) ?x72141) (* (* 2.0 l_0_19_200) l_0_19_212))))
 (let ((?x74409 (- (- ?x74405 (* (* 2.0 l_0_19_201) l_0_19_213)) (* (* 2.0 l_0_19_202) l_0_19_214))))
 (let ((?x74413 (- (- ?x74409 (* (* 2.0 l_0_19_228) l_0_19_240)) (* (* 2.0 l_0_19_229) l_0_19_241))))
 (let ((?x74417 (- (- ?x74413 (* (* 2.0 l_0_19_230) l_0_19_242)) (* (* 2.0 l_0_19_256) l_0_19_268))))
 (let ((?x74421 (- (- ?x74417 (* (* 2.0 l_0_19_257) l_0_19_269)) (* (* 2.0 l_0_19_258) l_0_19_270))))
 (= (- (- (+ ?x74421 ?x72171) ?x72173) ?x72175) 0.0))))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72261 (* ?x71987 l_0_19_36)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72259 (* ?x71984 l_0_19_35)))
 (let ((?x72170 (* 2.0 l_0_19_3)))
 (let ((?x72257 (* ?x72170 l_0_19_8)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x5937 (* ?x72140 l_0_19_7)))
 (let ((?x36764 (- (* (* (- 2.0) l_0_19_119) l_0_19_128) (* (* 2.0 l_0_19_120) l_0_19_129))))
 (let ((?x55805 (- (- ?x36764 (* (* 2.0 l_0_19_121) l_0_19_130)) (* (* 2.0 l_0_19_122) l_0_19_131))))
 (let ((?x9563 (- (- (+ ?x55805 ?x5937) (* (* 2.0 l_0_19_203) l_0_19_212)) (* (* 2.0 l_0_19_204) l_0_19_213))))
 (let ((?x74449 (- (- ?x9563 (* (* 2.0 l_0_19_205) l_0_19_214)) (* (* 2.0 l_0_19_206) l_0_19_215))))
 (let ((?x74453 (- (- ?x74449 (* (* 2.0 l_0_19_231) l_0_19_240)) (* (* 2.0 l_0_19_232) l_0_19_241))))
 (let ((?x74457 (- (- ?x74453 (* (* 2.0 l_0_19_233) l_0_19_242)) (* (* 2.0 l_0_19_234) l_0_19_243))))
 (let ((?x74461 (- (- ?x74457 (* (* 2.0 l_0_19_259) l_0_19_268)) (* (* 2.0 l_0_19_260) l_0_19_269))))
 (let ((?x74465 (- (- ?x74461 (* (* 2.0 l_0_19_261) l_0_19_270)) (* (* 2.0 l_0_19_262) l_0_19_271))))
 (= (- (- (+ ?x74465 ?x72257) ?x72259) ?x72261) 0.0))))))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72429 (* ?x71987 l_0_19_45)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72426 (* ?x71984 l_0_19_44)))
 (let ((?x74560 (* l_0_19_273 l_0_19_273)))
 (let ((?x74558 (* l_0_19_272 l_0_19_272)))
 (let ((?x74556 (* l_0_19_271 l_0_19_271)))
 (let ((?x74554 (* l_0_19_270 l_0_19_270)))
 (let ((?x74552 (* l_0_19_269 l_0_19_269)))
 (let ((?x74550 (* l_0_19_268 l_0_19_268)))
 (let ((?x74548 (* l_0_19_245 l_0_19_245)))
 (let ((?x74546 (* l_0_19_244 l_0_19_244)))
 (let ((?x74544 (* l_0_19_243 l_0_19_243)))
 (let ((?x74542 (* l_0_19_242 l_0_19_242)))
 (let ((?x74540 (* l_0_19_241 l_0_19_241)))
 (let ((?x74538 (* l_0_19_240 l_0_19_240)))
 (let ((?x74536 (* l_0_19_217 l_0_19_217)))
 (let ((?x74534 (* l_0_19_216 l_0_19_216)))
 (let ((?x74532 (* l_0_19_215 l_0_19_215)))
 (let ((?x74530 (* l_0_19_214 l_0_19_214)))
 (let ((?x74528 (* l_0_19_213 l_0_19_213)))
 (let ((?x74526 (* l_0_19_212 l_0_19_212)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72378 (* ?x72377 l_0_19_3)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72375 (* ?x72374 l_0_19_2)))
 (let ((?x74511 (- (* (* (- 1.0) l_0_19_128) l_0_19_128) (* (* 1.0 l_0_19_129) l_0_19_129))))
 (let ((?x74517 (- (- ?x74511 (* (* 1.0 l_0_19_130) l_0_19_130)) (* (* 1.0 l_0_19_131) l_0_19_131))))
 (let ((?x74523 (- (- ?x74517 (* (* 1.0 l_0_19_132) l_0_19_132)) (* (* 1.0 l_0_19_133) l_0_19_133))))
 (let ((?x74535 (- (- (- (- (- (+ (+ ?x74523 ?x72375) ?x72378) ?x74526) ?x74528) ?x74530) ?x74532) ?x74534)))
 (let ((?x74549 (- (- (- (- (- (- (- ?x74535 ?x74536) ?x74538) ?x74540) ?x74542) ?x74544) ?x74546) ?x74548)))
 (let ((?x74562 (- (- (- (- (- (- (- ?x74549 ?x74550) ?x74552) ?x74554) ?x74556) ?x74558) ?x74560) ?x72426)))
 (= (- ?x74562 ?x72429) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x71987 (* 2.0 l_0_19_31)))
 (let ((?x72557 (* ?x71987 l_0_19_51)))
 (let ((?x71984 (* 2.0 l_0_19_30)))
 (let ((?x72555 (* ?x71984 l_0_19_50)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72533 (* ?x72532 l_0_19_3)))
 (let ((?x72140 (* 2.0 l_0_19_2)))
 (let ((?x72520 (* ?x72140 l_0_19_22)))
 (let ((?x56223 (- (* (* (- 2.0) l_0_19_128) l_0_19_134) (* (* 2.0 l_0_19_129) l_0_19_135))))
 (let ((?x74597 (- (- ?x56223 (* (* 2.0 l_0_19_130) l_0_19_136)) (* (* 2.0 l_0_19_131) l_0_19_137))))
 (let ((?x74603 (- (- ?x74597 (* (* 2.0 l_0_19_132) l_0_19_138)) (* (* 2.0 l_0_19_133) l_0_19_139))))
 (let ((?x74607 (+ (+ ?x74603 (* (* 2.0 l_0_19_142) l_0_19_156)) (* (* 2.0 l_0_19_143) l_0_19_157))))
 (let ((?x74611 (- (- ?x74607 (* (* 2.0 l_0_19_170) l_0_19_184)) (* (* 2.0 l_0_19_171) l_0_19_185))))
 (let ((?x74618 (- (- (+ ?x74611 ?x72520) (* (* 2.0 l_0_19_212) l_0_19_218)) (* (* 2.0 l_0_19_213) l_0_19_219))))
 (let ((?x74624 (- (- ?x74618 (* (* 2.0 l_0_19_214) l_0_19_220)) (* (* 2.0 l_0_19_215) l_0_19_221))))
 (let ((?x74630 (- (- ?x74624 (* (* 2.0 l_0_19_216) l_0_19_222)) (* (* 2.0 l_0_19_217) l_0_19_223))))
 (let ((?x74637 (- (- (+ ?x74630 ?x72533) (* (* 2.0 l_0_19_240) l_0_19_246)) (* (* 2.0 l_0_19_241) l_0_19_247))))
 (let ((?x74643 (- (- ?x74637 (* (* 2.0 l_0_19_242) l_0_19_248)) (* (* 2.0 l_0_19_243) l_0_19_249))))
 (let ((?x74649 (- (- ?x74643 (* (* 2.0 l_0_19_244) l_0_19_250)) (* (* 2.0 l_0_19_245) l_0_19_251))))
 (let ((?x74655 (- (- ?x74649 (* (* 2.0 l_0_19_268) l_0_19_274)) (* (* 2.0 l_0_19_269) l_0_19_275))))
 (let ((?x74661 (- (- ?x74655 (* (* 2.0 l_0_19_270) l_0_19_276)) (* (* 2.0 l_0_19_271) l_0_19_277))))
 (let ((?x74667 (- (- ?x74661 (* (* 2.0 l_0_19_272) l_0_19_278)) (* (* 2.0 l_0_19_273) l_0_19_279))))
 (= (- (- ?x74667 ?x72555) ?x72557) 0.0))))))))))))))))))))))))
(assert
 (let ((?x72590 (* l_0_19_6 l_0_19_6)))
 (let ((?x72588 (* l_0_19_5 l_0_19_5)))
 (let ((?x72586 (* l_0_19_4 l_0_19_4)))
 (let ((?x72584 (* l_0_19_34 l_0_19_34)))
 (let ((?x55419 (- (- (* (- l_0_19_32) l_0_19_32) (* l_0_19_33 l_0_19_33)) ?x72584)))
 (= (+ (+ (+ ?x55419 ?x72586) ?x72588) ?x72590) 0.0)))))))
(assert
 (let ((?x72613 (* (* 2.0 l_0_19_6) l_0_19_9)))
 (let ((?x72610 (* (* 2.0 l_0_19_5) l_0_19_8)))
 (let ((?x72607 (* (* 2.0 l_0_19_4) l_0_19_7)))
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72604 (* ?x72603 l_0_19_37)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72601 (* ?x72600 l_0_19_36)))
 (let ((?x55448 (+ (+ (- (- (* (* (- 2.0) l_0_19_32) l_0_19_35) ?x72601) ?x72604) ?x72607) ?x72610)))
 (= (+ ?x55448 ?x72613) 0.0))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72676 (* ?x72603 l_0_19_46)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72673 (* ?x72600 l_0_19_45)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72670 (* ?x7080 l_0_19_44)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x72667 (* ?x72666 l_0_19_6)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72664 (* ?x72377 l_0_19_5)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72656 (* ?x72374 l_0_19_4)))
 (= (- (- (- (+ (+ ?x72656 ?x72664) ?x72667) ?x72670) ?x72673) ?x72676) 0.0))))))))))))))
(assert
 (let ((?x72603 (* 2.0 l_0_19_34)))
 (let ((?x72739 (* ?x72603 l_0_19_52)))
 (let ((?x72600 (* 2.0 l_0_19_33)))
 (let ((?x72737 (* ?x72600 l_0_19_51)))
 (let ((?x7080 (* 2.0 l_0_19_32)))
 (let ((?x72735 (* ?x7080 l_0_19_50)))
 (let ((?x72732 (* 2.0 l_0_19_24)))
 (let ((?x72733 (* ?x72732 l_0_19_6)))
 (let ((?x72532 (* 2.0 l_0_19_23)))
 (let ((?x72730 (* ?x72532 l_0_19_5)))
 (let ((?x72727 (* 2.0 l_0_19_22)))
 (let ((?x72728 (* ?x72727 l_0_19_4)))
 (let ((?x74747 (+ (* (* 2.0 l_0_19_144) l_0_19_156) (* (* 2.0 l_0_19_145) l_0_19_157))))
 (let ((?x74751 (- (+ ?x74747 (* (* 2.0 l_0_19_146) l_0_19_158)) (* (* 2.0 l_0_19_172) l_0_19_184))))
 (let ((?x74755 (- (- ?x74751 (* (* 2.0 l_0_19_173) l_0_19_185)) (* (* 2.0 l_0_19_174) l_0_19_186))))
 (= (- (- (- (+ (+ (+ ?x74755 ?x72728) ?x72730) ?x72733) ?x72735) ?x72737) ?x72739) 0.0)))))))))))))))))
(assert
 (let ((?x72807 (* l_0_19_9 l_0_19_9)))
 (let ((?x72805 (* l_0_19_8 l_0_19_8)))
 (let ((?x72803 (* l_0_19_7 l_0_19_7)))
 (let ((?x72801 (* l_0_19_38 l_0_19_38)))
 (let ((?x72799 (* l_0_19_37 l_0_19_37)))
 (let ((?x72797 (* l_0_19_36 l_0_19_36)))
 (let ((?x55527 (- (- (- (* l_0_19_10 l_0_19_10) (* l_0_19_35 l_0_19_35)) ?x72797) ?x72799)))
 (= (+ (+ (+ (- ?x55527 ?x72801) ?x72803) ?x72805) ?x72807) 0.0)))))))))
(assert
 (let ((?x72841 (* 2.0 l_0_19_38)))
 (let ((?x72896 (* ?x72841 l_0_19_47)))
 (let ((?x72838 (* 2.0 l_0_19_37)))
 (let ((?x72893 (* ?x72838 l_0_19_46)))
 (let ((?x72835 (* 2.0 l_0_19_36)))
 (let ((?x72890 (* ?x72835 l_0_19_45)))
 (let ((?x72832 (* 2.0 l_0_19_35)))
 (let ((?x72887 (* ?x72832 l_0_19_44)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x72884 (* ?x72666 l_0_19_9)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x72882 (* ?x72377 l_0_19_8)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x72880 (* ?x72374 l_0_19_7)))
 (let ((?x72873 (* 2.0 l_0_19_10)))
 (let ((?x72875 (* ?x72873 l_0_19_19)))
 (let ((?x73842 (- (- (- (- (+ (+ (+ ?x72875 ?x72880) ?x72882) ?x72884) ?x72887) ?x72890) ?x72893) ?x72896)))
 (= ?x73842 0.0)))))))))))))))))))
(assert
 (let ((?x73243 (* l_0_19_49 l_0_19_49)))
 (let ((?x73241 (* l_0_19_48 l_0_19_48)))
 (let ((?x73239 (* l_0_19_47 l_0_19_47)))
 (let ((?x73237 (* l_0_19_46 l_0_19_46)))
 (let ((?x73235 (* l_0_19_45 l_0_19_45)))
 (let ((?x73233 (* l_0_19_44 l_0_19_44)))
 (let ((?x73226 (* l_0_19_21 l_0_19_21)))
 (let ((?x73224 (* l_0_19_20 l_0_19_20)))
 (let ((?x73222 (* l_0_19_19 l_0_19_19)))
 (let ((?x73220 (* l_0_19_18 l_0_19_18)))
 (let ((?x73905 (+ (+ (+ (* l_0_19_16 l_0_19_16) (* l_0_19_17 l_0_19_17)) ?x73220) ?x73222)))
 (let ((?x73912 (- (- (- (- (- (+ (+ ?x73905 ?x73224) ?x73226) ?x73233) ?x73235) ?x73237) ?x73239) ?x73241)))
 (= (- ?x73912 ?x73243) 0.0))))))))))))))
(assert
 (let ((?x73321 (* (* 2.0 l_0_19_49) l_0_19_55)))
 (let ((?x73318 (* (* 2.0 l_0_19_48) l_0_19_54)))
 (let ((?x73315 (* (* 2.0 l_0_19_47) l_0_19_53)))
 (let ((?x73312 (* (* 2.0 l_0_19_46) l_0_19_52)))
 (let ((?x73309 (* (* 2.0 l_0_19_45) l_0_19_51)))
 (let ((?x73306 (* (* 2.0 l_0_19_44) l_0_19_50)))
 (let ((?x73298 (* (* 2.0 l_0_19_21) l_0_19_27)))
 (let ((?x73295 (* (* 2.0 l_0_19_20) l_0_19_26)))
 (let ((?x73292 (* (* 2.0 l_0_19_19) l_0_19_25)))
 (let ((?x74808 (* l_0_19_189 l_0_19_189)))
 (let ((?x74806 (* l_0_19_188 l_0_19_188)))
 (let ((?x74804 (* l_0_19_187 l_0_19_187)))
 (let ((?x74802 (* l_0_19_186 l_0_19_186)))
 (let ((?x74800 (* l_0_19_185 l_0_19_185)))
 (let ((?x74798 (* l_0_19_184 l_0_19_184)))
 (let ((?x72666 (* 2.0 l_0_19_18)))
 (let ((?x73277 (* ?x72666 l_0_19_24)))
 (let ((?x72377 (* 2.0 l_0_19_17)))
 (let ((?x73272 (* ?x72377 l_0_19_23)))
 (let ((?x74794 (* l_0_19_161 l_0_19_161)))
 (let ((?x74792 (* l_0_19_160 l_0_19_160)))
 (let ((?x72374 (* 2.0 l_0_19_16)))
 (let ((?x73270 (* ?x72374 l_0_19_22)))
 (let ((?x74789 (* l_0_19_159 l_0_19_159)))
 (let ((?x74787 (* l_0_19_158 l_0_19_158)))
 (let ((?x74788 (+ (+ (* l_0_19_156 l_0_19_156) (* l_0_19_157 l_0_19_157)) ?x74787)))
 (let ((?x74799 (- (+ (+ (+ (+ (+ (+ ?x74788 ?x74789) ?x73270) ?x74792) ?x74794) ?x73272) ?x73277) ?x74798)))
 (let ((?x74811 (+ (+ (- (- (- (- (- ?x74799 ?x74800) ?x74802) ?x74804) ?x74806) ?x74808) ?x73292) ?x73295)))
 (let ((?x74818 (- (- (- (- (- (- (+ ?x74811 ?x73298) ?x73306) ?x73309) ?x73312) ?x73315) ?x73318) ?x73321)))
 (= ?x74818 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x73407 (* l_0_19_56 l_0_19_56)))
 (let ((?x73405 (* l_0_19_55 l_0_19_55)))
 (let ((?x73403 (* l_0_19_54 l_0_19_54)))
 (let ((?x73401 (* l_0_19_53 l_0_19_53)))
 (let ((?x73399 (* l_0_19_52 l_0_19_52)))
 (let ((?x73397 (* l_0_19_51 l_0_19_51)))
 (let ((?x73395 (* l_0_19_50 l_0_19_50)))
 (let ((?x73393 (* l_0_19_28 l_0_19_28)))
 (let ((?x73391 (* l_0_19_27 l_0_19_27)))
 (let ((?x73389 (* l_0_19_26 l_0_19_26)))
 (let ((?x73387 (* l_0_19_25 l_0_19_25)))
 (let ((?x73385 (* l_0_19_24 l_0_19_24)))
 (let ((?x73383 (* l_0_19_23 l_0_19_23)))
 (let ((?x73381 (* l_0_19_22 l_0_19_22)))
 (let ((?x74845 (+ (* (* 2.0 l_0_19_156) l_0_19_162) (* (* 2.0 l_0_19_157) l_0_19_163))))
 (let ((?x74851 (+ (+ ?x74845 (* (* 2.0 l_0_19_158) l_0_19_164)) (* (* 2.0 l_0_19_159) l_0_19_165))))
 (let ((?x74857 (+ (+ ?x74851 (* (* 2.0 l_0_19_160) l_0_19_166)) (* (* 2.0 l_0_19_161) l_0_19_167))))
 (let ((?x74863 (- (- ?x74857 (* (* 2.0 l_0_19_184) l_0_19_190)) (* (* 2.0 l_0_19_185) l_0_19_191))))
 (let ((?x74869 (- (- ?x74863 (* (* 2.0 l_0_19_186) l_0_19_192)) (* (* 2.0 l_0_19_187) l_0_19_193))))
 (let ((?x74875 (- (- ?x74869 (* (* 2.0 l_0_19_188) l_0_19_194)) (* (* 2.0 l_0_19_189) l_0_19_195))))
 (let ((?x74882 (+ (+ (+ (+ (+ (+ (+ ?x74875 ?x73381) ?x73383) ?x73385) ?x73387) ?x73389) ?x73391) ?x73393)))
 (let ((?x74889 (- (- (- (- (- (- (- ?x74882 ?x73395) ?x73397) ?x73399) ?x73401) ?x73403) ?x73405) ?x73407)))
 (= ?x74889 0.0))))))))))))))))))))))))
(assert
 (= (- (* l_0_19_57 l_0_19_57) (* l_0_19_85 l_0_19_85)) 0.0))
(assert
 (let ((?x74935 (+ (- (* l_0_19_141 l_0_19_141) (* l_0_19_169 l_0_19_169)) (* (* 2.0 l_0_19_57) l_0_19_58))))
 (= (- ?x74935 (* (* 2.0 l_0_19_85) l_0_19_86)) 0.0)))
(assert
 (let ((?x74951 (- (* (* 2.0 l_0_19_57) l_0_19_67) (* (* 2.0 l_0_19_85) l_0_19_95))))
 (= ?x74951 0.0)))
(assert
 (let ((?x74961 (+ (* (* (- 2.0) l_0_19_100) l_0_19_85) (* (* 2.0 l_0_19_57) l_0_19_72))))
 (= ?x74961 0.0)))
(assert
 (let ((?x74967 (+ (* (* (- 2.0) l_0_19_106) l_0_19_85) (* (* 2.0 l_0_19_57) l_0_19_78))))
 (= ?x74967 0.0)))
(assert
 (let ((?x74977 (- (* (* (- 2.0) l_0_19_106) l_0_19_86) (* (* 2.0 l_0_19_107) l_0_19_87))))
 (let ((?x74985 (- (+ ?x74977 (* (* 2.0 l_0_19_141) l_0_19_162)) (* (* 2.0 l_0_19_169) l_0_19_190))))
 (let ((?x74989 (+ (+ ?x74985 (* (* 2.0 l_0_19_58) l_0_19_78)) (* (* 2.0 l_0_19_59) l_0_19_79))))
 (= ?x74989 0.0)))))
(assert
 (let ((?x75028 (* l_0_19_99 l_0_19_99)))
 (let ((?x75026 (* l_0_19_98 l_0_19_98)))
 (let ((?x75024 (* l_0_19_97 l_0_19_97)))
 (let ((?x75022 (* l_0_19_96 l_0_19_96)))
 (let ((?x75020 (* l_0_19_95 l_0_19_95)))
 (let ((?x75018 (* l_0_19_71 l_0_19_71)))
 (let ((?x75016 (* l_0_19_70 l_0_19_70)))
 (let ((?x75014 (* l_0_19_69 l_0_19_69)))
 (let ((?x75017 (+ (+ (+ (* l_0_19_67 l_0_19_67) (* l_0_19_68 l_0_19_68)) ?x75014) ?x75016)))
 (= (- (- (- (- (- (+ ?x75017 ?x75018) ?x75020) ?x75022) ?x75024) ?x75026) ?x75028) 0.0)))))))))))
(assert
 (let ((?x75041 (- (* (* (- 2.0) l_0_19_100) l_0_19_95) (* (* 2.0 l_0_19_101) l_0_19_96))))
 (let ((?x75045 (- (- ?x75041 (* (* 2.0 l_0_19_102) l_0_19_97)) (* (* 2.0 l_0_19_103) l_0_19_98))))
 (let ((?x75051 (+ (- ?x75045 (* (* 2.0 l_0_19_104) l_0_19_99)) (* (* 2.0 l_0_19_67) l_0_19_72))))
 (let ((?x75057 (+ (+ ?x75051 (* (* 2.0 l_0_19_68) l_0_19_73)) (* (* 2.0 l_0_19_69) l_0_19_74))))
 (let ((?x75063 (+ (+ ?x75057 (* (* 2.0 l_0_19_70) l_0_19_75)) (* (* 2.0 l_0_19_71) l_0_19_76))))
 (= ?x75063 0.0)))))))
(assert
 (let ((?x75087 (- (* (* (- 2.0) l_0_19_106) l_0_19_95) (* (* 2.0 l_0_19_107) l_0_19_96))))
 (let ((?x75101 (- (- ?x75087 (* (* 2.0 l_0_19_108) l_0_19_97)) (* (* 2.0 l_0_19_109) l_0_19_98))))
 (let ((?x75106 (+ (- ?x75101 (* (* 2.0 l_0_19_110) l_0_19_99)) (* (* 2.0 l_0_19_67) l_0_19_78))))
 (let ((?x75110 (+ (+ ?x75106 (* (* 2.0 l_0_19_68) l_0_19_79)) (* (* 2.0 l_0_19_69) l_0_19_80))))
 (let ((?x75114 (+ (+ ?x75110 (* (* 2.0 l_0_19_70) l_0_19_81)) (* (* 2.0 l_0_19_71) l_0_19_82))))
 (= ?x75114 0.0)))))))
(assert
 (let ((?x75162 (* l_0_19_77 l_0_19_77)))
 (let ((?x75160 (* l_0_19_76 l_0_19_76)))
 (let ((?x75158 (* l_0_19_75 l_0_19_75)))
 (let ((?x75156 (* l_0_19_74 l_0_19_74)))
 (let ((?x75154 (* l_0_19_73 l_0_19_73)))
 (let ((?x75152 (* l_0_19_72 l_0_19_72)))
 (let ((?x75150 (* l_0_19_105 l_0_19_105)))
 (let ((?x75148 (* l_0_19_104 l_0_19_104)))
 (let ((?x75146 (* l_0_19_103 l_0_19_103)))
 (let ((?x75136 (* l_0_19_102 l_0_19_102)))
 (let ((?x75137 (- (- (* (- l_0_19_100) l_0_19_100) (* l_0_19_101 l_0_19_101)) ?x75136)))
 (let ((?x75159 (+ (+ (+ (+ (- (- (- ?x75137 ?x75146) ?x75148) ?x75150) ?x75152) ?x75154) ?x75156) ?x75158)))
 (= (+ (+ ?x75159 ?x75160) ?x75162) 0.0))))))))))))))
(assert
 (let ((?x56606 (- (* (* (- 2.0) l_0_19_100) l_0_19_106) (* (* 2.0 l_0_19_101) l_0_19_107))))
 (let ((?x56618 (- (- ?x56606 (* (* 2.0 l_0_19_102) l_0_19_108)) (* (* 2.0 l_0_19_103) l_0_19_109))))
 (let ((?x56626 (- (- ?x56618 (* (* 2.0 l_0_19_104) l_0_19_110)) (* (* 2.0 l_0_19_105) l_0_19_111))))
 (let ((?x75180 (+ (+ ?x56626 (* (* 2.0 l_0_19_72) l_0_19_78)) (* (* 2.0 l_0_19_73) l_0_19_79))))
 (let ((?x75186 (+ (+ ?x75180 (* (* 2.0 l_0_19_74) l_0_19_80)) (* (* 2.0 l_0_19_75) l_0_19_81))))
 (let ((?x75192 (+ (+ ?x75186 (* (* 2.0 l_0_19_76) l_0_19_82)) (* (* 2.0 l_0_19_77) l_0_19_83))))
 (= ?x75192 0.0))))))))
(assert
 (let ((?x75251 (* l_0_19_84 l_0_19_84)))
 (let ((?x75249 (* l_0_19_83 l_0_19_83)))
 (let ((?x75247 (* l_0_19_82 l_0_19_82)))
 (let ((?x75245 (* l_0_19_81 l_0_19_81)))
 (let ((?x75243 (* l_0_19_80 l_0_19_80)))
 (let ((?x75241 (* l_0_19_79 l_0_19_79)))
 (let ((?x75239 (* l_0_19_78 l_0_19_78)))
 (let ((?x75237 (* l_0_19_112 l_0_19_112)))
 (let ((?x75235 (* l_0_19_111 l_0_19_111)))
 (let ((?x75233 (* l_0_19_110 l_0_19_110)))
 (let ((?x75222 (* l_0_19_109 l_0_19_109)))
 (let ((?x75219 (* l_0_19_108 l_0_19_108)))
 (let ((?x75221 (- (- (* (- l_0_19_106) l_0_19_106) (* l_0_19_107 l_0_19_107)) ?x75219)))
 (let ((?x75244 (+ (+ (+ (- (- (- (- ?x75221 ?x75222) ?x75233) ?x75235) ?x75237) ?x75239) ?x75241) ?x75243)))
 (= (+ (+ (+ (+ ?x75244 ?x75245) ?x75247) ?x75249) ?x75251) 0.0))))))))))))))))
(assert
 (let ((?x75279 (* l_0_19_253 l_0_19_253)))
 (let ((?x75277 (* l_0_19_225 l_0_19_225)))
 (let ((?x75275 (* l_0_19_197 l_0_19_197)))
 (= (- (- (- (* (* (- 1.0) l_0_19_113) l_0_19_113) ?x75275) ?x75277) ?x75279) 0.0)))))
(assert
 (let ((?x75291 (- (* (* (- 2.0) l_0_19_113) l_0_19_114) (* (* 2.0 l_0_19_197) l_0_19_198))))
 (let ((?x75295 (- (- ?x75291 (* (* 2.0 l_0_19_225) l_0_19_226)) (* (* 2.0 l_0_19_253) l_0_19_254))))
 (= ?x75295 0.0))))
(assert
 (let ((?x75311 (- (* (* (- 2.0) l_0_19_113) l_0_19_119) (* (* 2.0 l_0_19_197) l_0_19_203))))
 (let ((?x75315 (- (- ?x75311 (* (* 2.0 l_0_19_225) l_0_19_231)) (* (* 2.0 l_0_19_253) l_0_19_259))))
 (= ?x75315 0.0))))
(assert
 (let ((?x75333 (- (* (* (- 2.0) l_0_19_114) l_0_19_116) (* (* 2.0 l_0_19_115) l_0_19_117))))
 (let ((?x75337 (- (- ?x75333 (* (* 2.0 l_0_19_198) l_0_19_200)) (* (* 2.0 l_0_19_199) l_0_19_201))))
 (let ((?x75341 (- (- ?x75337 (* (* 2.0 l_0_19_226) l_0_19_228)) (* (* 2.0 l_0_19_227) l_0_19_229))))
 (let ((?x75345 (- (- ?x75341 (* (* 2.0 l_0_19_254) l_0_19_256)) (* (* 2.0 l_0_19_255) l_0_19_257))))
 (= ?x75345 0.0))))))
(assert
 (let ((?x75378 (- (* (* (- 2.0) l_0_19_114) l_0_19_119) (* (* 2.0 l_0_19_115) l_0_19_120))))
 (let ((?x75382 (- (- ?x75378 (* (* 2.0 l_0_19_198) l_0_19_203)) (* (* 2.0 l_0_19_199) l_0_19_204))))
 (let ((?x75386 (- (- ?x75382 (* (* 2.0 l_0_19_226) l_0_19_231)) (* (* 2.0 l_0_19_227) l_0_19_232))))
 (let ((?x75390 (- (- ?x75386 (* (* 2.0 l_0_19_254) l_0_19_259)) (* (* 2.0 l_0_19_255) l_0_19_260))))
 (= ?x75390 0.0))))))
(assert
 (let ((?x75442 (* l_0_19_258 l_0_19_258)))
 (let ((?x75440 (* l_0_19_257 l_0_19_257)))
 (let ((?x75438 (* l_0_19_256 l_0_19_256)))
 (let ((?x75436 (* l_0_19_230 l_0_19_230)))
 (let ((?x75434 (* l_0_19_229 l_0_19_229)))
 (let ((?x75432 (* l_0_19_228 l_0_19_228)))
 (let ((?x75430 (* l_0_19_202 l_0_19_202)))
 (let ((?x75428 (* l_0_19_201 l_0_19_201)))
 (let ((?x75426 (* l_0_19_200 l_0_19_200)))
 (let ((?x75422 (- (* (* (- 1.0) l_0_19_116) l_0_19_116) (* (* 1.0 l_0_19_117) l_0_19_117))))
 (let ((?x75431 (- (- (- (- ?x75422 (* (* 1.0 l_0_19_118) l_0_19_118)) ?x75426) ?x75428) ?x75430)))
 (= (- (- (- (- (- (- ?x75431 ?x75432) ?x75434) ?x75436) ?x75438) ?x75440) ?x75442) 0.0)))))))))))))
(assert
 (let ((?x75470 (- (* (* (- 2.0) l_0_19_116) l_0_19_119) (* (* 2.0 l_0_19_117) l_0_19_120))))
 (let ((?x75474 (- (- ?x75470 (* (* 2.0 l_0_19_118) l_0_19_121)) (* (* 2.0 l_0_19_200) l_0_19_203))))
 (let ((?x75478 (- (- ?x75474 (* (* 2.0 l_0_19_201) l_0_19_204)) (* (* 2.0 l_0_19_202) l_0_19_205))))
 (let ((?x75482 (- (- ?x75478 (* (* 2.0 l_0_19_228) l_0_19_231)) (* (* 2.0 l_0_19_229) l_0_19_232))))
 (let ((?x75486 (- (- ?x75482 (* (* 2.0 l_0_19_230) l_0_19_233)) (* (* 2.0 l_0_19_256) l_0_19_259))))
 (let ((?x75490 (- (- ?x75486 (* (* 2.0 l_0_19_257) l_0_19_260)) (* (* 2.0 l_0_19_258) l_0_19_261))))
 (= ?x75490 0.0))))))))
(assert
 (let ((?x75522 (- (* (* (- 2.0) l_0_19_116) l_0_19_134) (* (* 2.0 l_0_19_117) l_0_19_135))))
 (let ((?x75526 (+ (- ?x75522 (* (* 2.0 l_0_19_118) l_0_19_136)) (* (* 2.0 l_0_19_142) l_0_19_144))))
 (let ((?x75530 (- (+ ?x75526 (* (* 2.0 l_0_19_143) l_0_19_145)) (* (* 2.0 l_0_19_170) l_0_19_172))))
 (let ((?x75534 (- (- ?x75530 (* (* 2.0 l_0_19_171) l_0_19_173)) (* (* 2.0 l_0_19_200) l_0_19_218))))
 (let ((?x75538 (- (- ?x75534 (* (* 2.0 l_0_19_201) l_0_19_219)) (* (* 2.0 l_0_19_202) l_0_19_220))))
 (let ((?x75542 (- (- ?x75538 (* (* 2.0 l_0_19_228) l_0_19_246)) (* (* 2.0 l_0_19_229) l_0_19_247))))
 (let ((?x75546 (- (- ?x75542 (* (* 2.0 l_0_19_230) l_0_19_248)) (* (* 2.0 l_0_19_256) l_0_19_274))))
 (let ((?x75550 (- (- ?x75546 (* (* 2.0 l_0_19_257) l_0_19_275)) (* (* 2.0 l_0_19_258) l_0_19_276))))
 (= ?x75550 0.0))))))))))
(assert
 (let ((?x75645 (* l_0_19_262 l_0_19_262)))
 (let ((?x75643 (* l_0_19_261 l_0_19_261)))
 (let ((?x75641 (* l_0_19_260 l_0_19_260)))
 (let ((?x75639 (* l_0_19_259 l_0_19_259)))
 (let ((?x75637 (* l_0_19_234 l_0_19_234)))
 (let ((?x75635 (* l_0_19_233 l_0_19_233)))
 (let ((?x75633 (* l_0_19_232 l_0_19_232)))
 (let ((?x75631 (* l_0_19_231 l_0_19_231)))
 (let ((?x75629 (* l_0_19_206 l_0_19_206)))
 (let ((?x75627 (* l_0_19_205 l_0_19_205)))
 (let ((?x75625 (* l_0_19_204 l_0_19_204)))
 (let ((?x75623 (* l_0_19_203 l_0_19_203)))
 (let ((?x75616 (- (* (* (- 1.0) l_0_19_119) l_0_19_119) (* (* 1.0 l_0_19_120) l_0_19_120))))
 (let ((?x75622 (- (- ?x75616 (* (* 1.0 l_0_19_121) l_0_19_121)) (* (* 1.0 l_0_19_122) l_0_19_122))))
 (let ((?x75636 (- (- (- (- (- (- (- ?x75622 ?x75623) ?x75625) ?x75627) ?x75629) ?x75631) ?x75633) ?x75635)))
 (= (- (- (- (- (- ?x75636 ?x75637) ?x75639) ?x75641) ?x75643) ?x75645) 0.0)))))))))))))))))
(assert
 (let ((?x75726 (* l_0_19_280 l_0_19_280)))
 (let ((?x75724 (* l_0_19_279 l_0_19_279)))
 (let ((?x75722 (* l_0_19_278 l_0_19_278)))
 (let ((?x75720 (* l_0_19_277 l_0_19_277)))
 (let ((?x75718 (* l_0_19_276 l_0_19_276)))
 (let ((?x75716 (* l_0_19_275 l_0_19_275)))
 (let ((?x75714 (* l_0_19_274 l_0_19_274)))
 (let ((?x75712 (* l_0_19_252 l_0_19_252)))
 (let ((?x75710 (* l_0_19_251 l_0_19_251)))
 (let ((?x75708 (* l_0_19_250 l_0_19_250)))
 (let ((?x75706 (* l_0_19_249 l_0_19_249)))
 (let ((?x75704 (* l_0_19_248 l_0_19_248)))
 (let ((?x75702 (* l_0_19_247 l_0_19_247)))
 (let ((?x75700 (* l_0_19_246 l_0_19_246)))
 (let ((?x75698 (* l_0_19_224 l_0_19_224)))
 (let ((?x75696 (* l_0_19_223 l_0_19_223)))
 (let ((?x75694 (* l_0_19_222 l_0_19_222)))
 (let ((?x75692 (* l_0_19_221 l_0_19_221)))
 (let ((?x75690 (* l_0_19_220 l_0_19_220)))
 (let ((?x75688 (* l_0_19_219 l_0_19_219)))
 (let ((?x75686 (* l_0_19_218 l_0_19_218)))
 (let ((?x56896 (- (* (* (- 1.0) l_0_19_134) l_0_19_134) (* (* 1.0 l_0_19_135) l_0_19_135))))
 (let ((?x11968 (- (- ?x56896 (* (* 1.0 l_0_19_136) l_0_19_136)) (* (* 1.0 l_0_19_137) l_0_19_137))))
 (let ((?x56890 (- (- ?x11968 (* (* 1.0 l_0_19_138) l_0_19_138)) (* (* 1.0 l_0_19_139) l_0_19_139))))
 (let ((?x56918 (+ (- ?x56890 (* (* 1.0 l_0_19_140) l_0_19_140)) (* (* 2.0 l_0_19_142) l_0_19_162))))
 (let ((?x75683 (- (+ ?x56918 (* (* 2.0 l_0_19_143) l_0_19_163)) (* (* 2.0 l_0_19_170) l_0_19_190))))
 (let ((?x75691 (- (- (- (- ?x75683 (* (* 2.0 l_0_19_171) l_0_19_191)) ?x75686) ?x75688) ?x75690)))
 (let ((?x75705 (- (- (- (- (- (- (- ?x75691 ?x75692) ?x75694) ?x75696) ?x75698) ?x75700) ?x75702) ?x75704)))
 (let ((?x75719 (- (- (- (- (- (- (- ?x75705 ?x75706) ?x75708) ?x75710) ?x75712) ?x75714) ?x75716) ?x75718)))
 (= (- (- (- (- ?x75719 ?x75720) ?x75722) ?x75724) ?x75726) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x75791 (* l_0_19_174 l_0_19_174)))
 (let ((?x75789 (* l_0_19_173 l_0_19_173)))
 (let ((?x75787 (* l_0_19_172 l_0_19_172)))
 (let ((?x75785 (* l_0_19_146 l_0_19_146)))
 (let ((?x75786 (+ (+ (* l_0_19_144 l_0_19_144) (* l_0_19_145 l_0_19_145)) ?x75785)))
 (= (- (- (- ?x75786 ?x75787) ?x75789) ?x75791) 0.0)))))))
(assert
 (let ((?x75804 (+ (* (* 2.0 l_0_19_144) l_0_19_162) (* (* 2.0 l_0_19_145) l_0_19_163))))
 (let ((?x75808 (- (+ ?x75804 (* (* 2.0 l_0_19_146) l_0_19_164)) (* (* 2.0 l_0_19_172) l_0_19_190))))
 (let ((?x75812 (- (- ?x75808 (* (* 2.0 l_0_19_173) l_0_19_191)) (* (* 2.0 l_0_19_174) l_0_19_192))))
 (= ?x75812 0.0)))))
(assert
 (let ((?x75855 (* l_0_19_196 l_0_19_196)))
 (let ((?x75853 (* l_0_19_195 l_0_19_195)))
 (let ((?x75851 (* l_0_19_194 l_0_19_194)))
 (let ((?x75849 (* l_0_19_193 l_0_19_193)))
 (let ((?x75847 (* l_0_19_192 l_0_19_192)))
 (let ((?x75845 (* l_0_19_191 l_0_19_191)))
 (let ((?x75843 (* l_0_19_190 l_0_19_190)))
 (let ((?x75841 (* l_0_19_168 l_0_19_168)))
 (let ((?x75839 (* l_0_19_167 l_0_19_167)))
 (let ((?x75837 (* l_0_19_166 l_0_19_166)))
 (let ((?x75835 (* l_0_19_165 l_0_19_165)))
 (let ((?x75833 (* l_0_19_164 l_0_19_164)))
 (let ((?x75834 (+ (+ (* l_0_19_162 l_0_19_162) (* l_0_19_163 l_0_19_163)) ?x75833)))
 (let ((?x75848 (- (- (- (+ (+ (+ (+ ?x75834 ?x75835) ?x75837) ?x75839) ?x75841) ?x75843) ?x75845) ?x75847)))
 (= (- (- (- (- ?x75848 ?x75849) ?x75851) ?x75853) ?x75855) 0.0))))))))))))))))
(assert
 (>= l_0_19_1 0.0))
(assert
 (>= l_0_19_3 0.0))
(assert
 (>= l_0_19_6 0.0))
(assert
 (>= l_0_19_10 0.0))
(assert
 (>= l_0_19_15 0.0))
(assert
 (>= l_0_19_21 0.0))
(assert
 (>= l_0_19_28 0.0))
(assert
 (>= l_0_19_29 0.0))
(assert
 (>= l_0_19_31 0.0))
(assert
 (>= l_0_19_34 0.0))
(assert
 (>= l_0_19_38 0.0))
(assert
 (>= l_0_19_43 0.0))
(assert
 (>= l_0_19_49 0.0))
(assert
 (>= l_0_19_56 0.0))
(assert
 (>= l_0_19_57 0.0))
(assert
 (>= l_0_19_59 0.0))
(assert
 (>= l_0_19_62 0.0))
(assert
 (>= l_0_19_66 0.0))
(assert
 (>= l_0_19_71 0.0))
(assert
 (>= l_0_19_77 0.0))
(assert
 (>= l_0_19_84 0.0))
(assert
 (>= l_0_19_85 0.0))
(assert
 (>= l_0_19_87 0.0))
(assert
 (>= l_0_19_90 0.0))
(assert
 (>= l_0_19_94 0.0))
(assert
 (>= l_0_19_99 0.0))
(assert
 (>= l_0_19_105 0.0))
(assert
 (>= l_0_19_112 0.0))
(assert
 (>= l_0_19_113 0.0))
(assert
 (>= l_0_19_115 0.0))
(assert
 (>= l_0_19_118 0.0))
(assert
 (>= l_0_19_122 0.0))
(assert
 (>= l_0_19_127 0.0))
(assert
 (>= l_0_19_133 0.0))
(assert
 (>= l_0_19_140 0.0))
(assert
 (>= l_0_19_141 0.0))
(assert
 (>= l_0_19_143 0.0))
(assert
 (>= l_0_19_146 0.0))
(assert
 (>= l_0_19_150 0.0))
(assert
 (>= l_0_19_155 0.0))
(assert
 (>= l_0_19_161 0.0))
(assert
 (>= l_0_19_168 0.0))
(assert
 (>= l_0_19_169 0.0))
(assert
 (>= l_0_19_171 0.0))
(assert
 (>= l_0_19_174 0.0))
(assert
 (>= l_0_19_178 0.0))
(assert
 (>= l_0_19_183 0.0))
(assert
 (>= l_0_19_189 0.0))
(assert
 (>= l_0_19_196 0.0))
(assert
 (>= l_0_19_197 0.0))
(assert
 (>= l_0_19_199 0.0))
(assert
 (>= l_0_19_202 0.0))
(assert
 (>= l_0_19_206 0.0))
(assert
 (>= l_0_19_211 0.0))
(assert
 (>= l_0_19_217 0.0))
(assert
 (>= l_0_19_224 0.0))
(assert
 (>= l_0_19_225 0.0))
(assert
 (>= l_0_19_227 0.0))
(assert
 (>= l_0_19_230 0.0))
(assert
 (>= l_0_19_234 0.0))
(assert
 (>= l_0_19_239 0.0))
(assert
 (>= l_0_19_245 0.0))
(assert
 (>= l_0_19_252 0.0))
(assert
 (>= l_0_19_253 0.0))
(assert
 (>= l_0_19_255 0.0))
(assert
 (>= l_0_19_258 0.0))
(assert
 (>= l_0_19_262 0.0))
(assert
 (>= l_0_19_267 0.0))
(assert
 (>= l_0_19_273 0.0))
(assert
 (>= l_0_19_280 0.0))
(assert
 (let ((?x75962 (* l_0_20_87 l_0_20_87)))
 (let ((?x75960 (* l_0_20_86 l_0_20_86)))
 (let ((?x75958 (* l_0_20_59 l_0_20_59)))
 (let ((?x75956 (* l_0_20_58 l_0_20_58)))
 (let ((?x75940 (+ (* (* (- 2.0) l_0_20_113) l_0_20_134) (* (* 2.0 l_0_20_141) l_0_20_142))))
 (let ((?x75946 (- (- ?x75940 (* (* 2.0 l_0_20_169) l_0_20_170)) (* (* 2.0 l_0_20_197) l_0_20_218))))
 (let ((?x75952 (- (- ?x75946 (* (* 2.0 l_0_20_225) l_0_20_246)) (* (* 2.0 l_0_20_253) l_0_20_274))))
 (let ((?x75961 (- (+ (+ (- ?x75952 (* (* 2.0 l_0_20_281) l_0_20_302)) ?x75956) ?x75958) ?x75960)))
 (= (+ (- ?x75961 ?x75962) 1.0) 0.0))))))))))
(assert
 (let ((?x76004 (* l_0_20_171 l_0_20_171)))
 (let ((?x76002 (* l_0_20_170 l_0_20_170)))
 (let ((?x76000 (* l_0_20_143 l_0_20_143)))
 (let ((?x75998 (* l_0_20_142 l_0_20_142)))
 (let ((?x75997 (- (* (* (- 2.0) l_0_20_114) l_0_20_134) (* (* 2.0 l_0_20_115) l_0_20_135))))
 (let ((?x76008 (- (- (- (+ (+ ?x75997 ?x75998) ?x76000) ?x76002) ?x76004) (* (* 2.0 l_0_20_198) l_0_20_218))))
 (let ((?x76014 (- (- ?x76008 (* (* 2.0 l_0_20_199) l_0_20_219)) (* (* 2.0 l_0_20_226) l_0_20_246))))
 (let ((?x76020 (- (- ?x76014 (* (* 2.0 l_0_20_227) l_0_20_247)) (* (* 2.0 l_0_20_254) l_0_20_274))))
 (let ((?x76026 (- (- ?x76020 (* (* 2.0 l_0_20_255) l_0_20_275)) (* (* 2.0 l_0_20_282) l_0_20_302))))
 (= (- (- ?x76026 (* (* 2.0 l_0_20_283) l_0_20_303)) 1.0) 0.0)))))))))))
(assert
 (let ((?x76060 (* l_0_20_283 l_0_20_283)))
 (let ((?x76058 (* l_0_20_282 l_0_20_282)))
 (let ((?x76056 (* l_0_20_255 l_0_20_255)))
 (let ((?x76054 (* l_0_20_254 l_0_20_254)))
 (let ((?x76052 (* l_0_20_227 l_0_20_227)))
 (let ((?x76050 (* l_0_20_226 l_0_20_226)))
 (let ((?x76048 (* l_0_20_199 l_0_20_199)))
 (let ((?x57367 (* l_0_20_198 l_0_20_198)))
 (let ((?x38365 (- (* (* (- 1.0) l_0_20_114) l_0_20_114) (* (* 1.0 l_0_20_115) l_0_20_115))))
 (let ((?x76059 (- (- (- (- (- (- (- ?x38365 ?x57367) ?x76048) ?x76050) ?x76052) ?x76054) ?x76056) ?x76058)))
 (= (- ?x76059 ?x76060) 0.0))))))))))))
(assert
 (= (+ (* (- l_0_20_1) l_0_20_1) (* l_0_20_29 l_0_20_29)) 0.0))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76104 (* ?x76103 l_0_20_30)))
 (let ((?x76094 (- (* (* (- 2.0) l_0_20_1) l_0_20_2) (* (* 2.0 l_0_20_113) l_0_20_123))))
 (let ((?x76098 (- (- ?x76094 (* (* 2.0 l_0_20_197) l_0_20_207)) (* (* 2.0 l_0_20_225) l_0_20_235))))
 (let ((?x76102 (- (- ?x76098 (* (* 2.0 l_0_20_253) l_0_20_263)) (* (* 2.0 l_0_20_281) l_0_20_291))))
 (= (+ ?x76102 ?x76104) 0.0)))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76141 (* ?x76140 l_0_20_40)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76138 (* ?x76137 l_0_20_39)))
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76135 (* ?x76103 l_0_20_32)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x76133 (* ?x76132 l_0_20_3)))
 (let ((?x76125 (* 2.0 l_0_20_11)))
 (let ((?x76130 (* ?x76125 l_0_20_2)))
 (let ((?x76139 (- (+ (+ (+ (* (* (- 2.0) l_0_20_1) l_0_20_4) ?x76130) ?x76133) ?x76135) ?x76138)))
 (= (- ?x76139 ?x76141) 0.0)))))))))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x38635 (* ?x76103 l_0_20_35)))
 (= (+ (* (* (- 2.0) l_0_20_1) l_0_20_7) ?x38635) 0.0))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76165 (* ?x76103 l_0_20_39)))
 (= (+ (* (* (- 2.0) l_0_20_1) l_0_20_11) ?x76165) 0.0))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76183 (* ?x76103 l_0_20_44)))
 (let ((?x76165 (* ?x76103 l_0_20_39)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x76176 (* ?x76173 l_0_20_16)))
 (let ((?x76175 (* ?x76173 l_0_20_11)))
 (= (+ (- (- ?x76175 ?x76176) ?x76165) ?x76183) 0.0))))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76201 (* ?x76103 l_0_20_50)))
 (let ((?x76198 (+ (* (* (- 2.0) l_0_20_1) l_0_20_22) (* (* 2.0 l_0_20_141) l_0_20_151))))
 (let ((?x76205 (+ (+ (- ?x76198 (* (* 2.0 l_0_20_169) l_0_20_179)) ?x76201) (* (* 2.0 l_0_20_58) l_0_20_67))))
 (let ((?x76211 (- (+ ?x76205 (* (* 2.0 l_0_20_59) l_0_20_68)) (* (* 2.0 l_0_20_86) l_0_20_95))))
 (= (- ?x76211 (* (* 2.0 l_0_20_87) l_0_20_96)) 0.0)))))))
(assert
 (let ((?x76267 (* l_0_20_31 l_0_20_31)))
 (let ((?x76265 (* l_0_20_30 l_0_20_30)))
 (let ((?x76263 (* l_0_20_3 l_0_20_3)))
 (let ((?x76249 (* l_0_20_2 l_0_20_2)))
 (let ((?x76244 (- (* (* (- 2.0) l_0_20_114) l_0_20_123) (* (* 2.0 l_0_20_115) l_0_20_124))))
 (let ((?x76248 (- (- ?x76244 (* (* 2.0 l_0_20_198) l_0_20_207)) (* (* 2.0 l_0_20_199) l_0_20_208))))
 (let ((?x76254 (- (- (- ?x76248 ?x76249) (* (* 2.0 l_0_20_226) l_0_20_235)) (* (* 2.0 l_0_20_227) l_0_20_236))))
 (let ((?x76258 (- (- ?x76254 (* (* 2.0 l_0_20_254) l_0_20_263)) (* (* 2.0 l_0_20_255) l_0_20_264))))
 (let ((?x76262 (- (- ?x76258 (* (* 2.0 l_0_20_282) l_0_20_291)) (* (* 2.0 l_0_20_283) l_0_20_292))))
 (= (+ (+ (- ?x76262 ?x76263) ?x76265) ?x76267) 0.0)))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76326 (* ?x76140 l_0_20_33)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76324 (* ?x76137 l_0_20_32)))
 (let ((?x76321 (* 2.0 l_0_20_3)))
 (let ((?x76322 (* ?x76321 l_0_20_5)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76283 (* ?x76282 l_0_20_4)))
 (let ((?x76278 (- (* (* (- 2.0) l_0_20_116) l_0_20_123) (* (* 2.0 l_0_20_117) l_0_20_124))))
 (let ((?x76287 (- (- (- ?x76278 (* (* 2.0 l_0_20_118) l_0_20_125)) ?x76283) (* (* 2.0 l_0_20_200) l_0_20_207))))
 (let ((?x76293 (- (- ?x76287 (* (* 2.0 l_0_20_201) l_0_20_208)) (* (* 2.0 l_0_20_202) l_0_20_209))))
 (let ((?x76299 (- (- ?x76293 (* (* 2.0 l_0_20_228) l_0_20_235)) (* (* 2.0 l_0_20_229) l_0_20_236))))
 (let ((?x76305 (- (- ?x76299 (* (* 2.0 l_0_20_230) l_0_20_237)) (* (* 2.0 l_0_20_256) l_0_20_263))))
 (let ((?x76311 (- (- ?x76305 (* (* 2.0 l_0_20_257) l_0_20_264)) (* (* 2.0 l_0_20_258) l_0_20_265))))
 (let ((?x76317 (- (- ?x76311 (* (* 2.0 l_0_20_284) l_0_20_291)) (* (* 2.0 l_0_20_285) l_0_20_292))))
 (let ((?x76327 (+ (+ (- (- ?x76317 (* (* 2.0 l_0_20_286) l_0_20_293)) ?x76322) ?x76324) ?x76326)))
 (= ?x76327 0.0))))))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76423 (* ?x76140 l_0_20_36)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76421 (* ?x76137 l_0_20_35)))
 (let ((?x76321 (* 2.0 l_0_20_3)))
 (let ((?x76419 (* ?x76321 l_0_20_8)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76369 (* ?x76282 l_0_20_7)))
 (let ((?x76362 (- (* (* (- 2.0) l_0_20_119) l_0_20_123) (* (* 2.0 l_0_20_120) l_0_20_124))))
 (let ((?x76368 (- (- ?x76362 (* (* 2.0 l_0_20_121) l_0_20_125)) (* (* 2.0 l_0_20_122) l_0_20_126))))
 (let ((?x76376 (- (- (- ?x76368 ?x76369) (* (* 2.0 l_0_20_203) l_0_20_207)) (* (* 2.0 l_0_20_204) l_0_20_208))))
 (let ((?x76382 (- (- ?x76376 (* (* 2.0 l_0_20_205) l_0_20_209)) (* (* 2.0 l_0_20_206) l_0_20_210))))
 (let ((?x76388 (- (- ?x76382 (* (* 2.0 l_0_20_231) l_0_20_235)) (* (* 2.0 l_0_20_232) l_0_20_236))))
 (let ((?x76394 (- (- ?x76388 (* (* 2.0 l_0_20_233) l_0_20_237)) (* (* 2.0 l_0_20_234) l_0_20_238))))
 (let ((?x76400 (- (- ?x76394 (* (* 2.0 l_0_20_259) l_0_20_263)) (* (* 2.0 l_0_20_260) l_0_20_264))))
 (let ((?x76406 (- (- ?x76400 (* (* 2.0 l_0_20_261) l_0_20_265)) (* (* 2.0 l_0_20_262) l_0_20_266))))
 (let ((?x76412 (- (- ?x76406 (* (* 2.0 l_0_20_287) l_0_20_291)) (* (* 2.0 l_0_20_288) l_0_20_292))))
 (let ((?x76418 (- (- ?x76412 (* (* 2.0 l_0_20_289) l_0_20_293)) (* (* 2.0 l_0_20_290) l_0_20_294))))
 (= (+ (+ (- ?x76418 ?x76419) ?x76421) ?x76423) 0.0))))))))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76141 (* ?x76140 l_0_20_40)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76138 (* ?x76137 l_0_20_39)))
 (let ((?x76526 (* l_0_20_295 l_0_20_295)))
 (let ((?x76524 (* l_0_20_294 l_0_20_294)))
 (let ((?x76522 (* l_0_20_293 l_0_20_293)))
 (let ((?x76520 (* l_0_20_292 l_0_20_292)))
 (let ((?x76518 (* l_0_20_291 l_0_20_291)))
 (let ((?x76516 (* l_0_20_267 l_0_20_267)))
 (let ((?x76514 (* l_0_20_266 l_0_20_266)))
 (let ((?x76512 (* l_0_20_265 l_0_20_265)))
 (let ((?x76510 (* l_0_20_264 l_0_20_264)))
 (let ((?x76508 (* l_0_20_263 l_0_20_263)))
 (let ((?x76506 (* l_0_20_239 l_0_20_239)))
 (let ((?x76504 (* l_0_20_238 l_0_20_238)))
 (let ((?x76502 (* l_0_20_237 l_0_20_237)))
 (let ((?x76500 (* l_0_20_236 l_0_20_236)))
 (let ((?x76498 (* l_0_20_235 l_0_20_235)))
 (let ((?x76496 (* l_0_20_211 l_0_20_211)))
 (let ((?x76494 (* l_0_20_210 l_0_20_210)))
 (let ((?x76492 (* l_0_20_209 l_0_20_209)))
 (let ((?x76490 (* l_0_20_208 l_0_20_208)))
 (let ((?x76488 (* l_0_20_207 l_0_20_207)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x76133 (* ?x76132 l_0_20_3)))
 (let ((?x76475 (- (- (* (* (- 2.0) l_0_20_11) l_0_20_2) ?x76133) (* (* 1.0 l_0_20_123) l_0_20_123))))
 (let ((?x76481 (- (- ?x76475 (* (* 1.0 l_0_20_124) l_0_20_124)) (* (* 1.0 l_0_20_125) l_0_20_125))))
 (let ((?x76487 (- (- ?x76481 (* (* 1.0 l_0_20_126) l_0_20_126)) (* (* 1.0 l_0_20_127) l_0_20_127))))
 (let ((?x76501 (- (- (- (- (- (- (- ?x76487 ?x76488) ?x76490) ?x76492) ?x76494) ?x76496) ?x76498) ?x76500)))
 (let ((?x76515 (- (- (- (- (- (- (- ?x76501 ?x76502) ?x76504) ?x76506) ?x76508) ?x76510) ?x76512) ?x76514)))
 (let ((?x76528 (+ (- (- (- (- (- (- ?x76515 ?x76516) ?x76518) ?x76520) ?x76522) ?x76524) ?x76526) ?x76138)))
 (= (+ ?x76528 ?x76141) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76694 (* ?x76140 l_0_20_45)))
 (let ((?x76141 (* ?x76140 l_0_20_40)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76691 (* ?x76137 l_0_20_44)))
 (let ((?x76138 (* ?x76137 l_0_20_39)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x76628 (* ?x76627 l_0_20_3)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x76625 (* ?x76624 l_0_20_2)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x76133 (* ?x76132 l_0_20_3)))
 (let ((?x76125 (* 2.0 l_0_20_11)))
 (let ((?x76130 (* ?x76125 l_0_20_2)))
 (let ((?x76614 (- (- (+ ?x76130 ?x76133) (* (* 2.0 l_0_20_123) l_0_20_128)) (* (* 2.0 l_0_20_124) l_0_20_129))))
 (let ((?x76620 (- (- ?x76614 (* (* 2.0 l_0_20_125) l_0_20_130)) (* (* 2.0 l_0_20_126) l_0_20_131))))
 (let ((?x76632 (- (- (- (- ?x76620 (* (* 2.0 l_0_20_127) l_0_20_132)) ?x76625) ?x76628) (* (* 2.0 l_0_20_207) l_0_20_212))))
 (let ((?x76638 (- (- ?x76632 (* (* 2.0 l_0_20_208) l_0_20_213)) (* (* 2.0 l_0_20_209) l_0_20_214))))
 (let ((?x76644 (- (- ?x76638 (* (* 2.0 l_0_20_210) l_0_20_215)) (* (* 2.0 l_0_20_211) l_0_20_216))))
 (let ((?x76650 (- (- ?x76644 (* (* 2.0 l_0_20_235) l_0_20_240)) (* (* 2.0 l_0_20_236) l_0_20_241))))
 (let ((?x76656 (- (- ?x76650 (* (* 2.0 l_0_20_237) l_0_20_242)) (* (* 2.0 l_0_20_238) l_0_20_243))))
 (let ((?x76662 (- (- ?x76656 (* (* 2.0 l_0_20_239) l_0_20_244)) (* (* 2.0 l_0_20_263) l_0_20_268))))
 (let ((?x76668 (- (- ?x76662 (* (* 2.0 l_0_20_264) l_0_20_269)) (* (* 2.0 l_0_20_265) l_0_20_270))))
 (let ((?x76674 (- (- ?x76668 (* (* 2.0 l_0_20_266) l_0_20_271)) (* (* 2.0 l_0_20_267) l_0_20_272))))
 (let ((?x76680 (- (- ?x76674 (* (* 2.0 l_0_20_291) l_0_20_296)) (* (* 2.0 l_0_20_292) l_0_20_297))))
 (let ((?x76686 (- (- ?x76680 (* (* 2.0 l_0_20_293) l_0_20_298)) (* (* 2.0 l_0_20_294) l_0_20_299))))
 (let ((?x76693 (- (+ (- (- ?x76686 (* (* 2.0 l_0_20_295) l_0_20_300)) ?x76138) ?x76691) ?x76141)))
 (= (+ ?x76693 ?x76694) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76865 (* ?x76140 l_0_20_51)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76863 (* ?x76137 l_0_20_50)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x76831 (* ?x76830 l_0_20_3)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76818 (* ?x76282 l_0_20_22)))
 (let ((?x76799 (- (* (* (- 2.0) l_0_20_123) l_0_20_134) (* (* 2.0 l_0_20_124) l_0_20_135))))
 (let ((?x76803 (- (- ?x76799 (* (* 2.0 l_0_20_125) l_0_20_136)) (* (* 2.0 l_0_20_126) l_0_20_137))))
 (let ((?x76808 (+ (- ?x76803 (* (* 2.0 l_0_20_127) l_0_20_138)) (* (* 2.0 l_0_20_142) l_0_20_151))))
 (let ((?x76814 (- (+ ?x76808 (* (* 2.0 l_0_20_143) l_0_20_152)) (* (* 2.0 l_0_20_170) l_0_20_179))))
 (let ((?x76821 (- (- (- ?x76814 (* (* 2.0 l_0_20_171) l_0_20_180)) ?x76818) (* (* 2.0 l_0_20_207) l_0_20_218))))
 (let ((?x76825 (- (- ?x76821 (* (* 2.0 l_0_20_208) l_0_20_219)) (* (* 2.0 l_0_20_209) l_0_20_220))))
 (let ((?x76829 (- (- ?x76825 (* (* 2.0 l_0_20_210) l_0_20_221)) (* (* 2.0 l_0_20_211) l_0_20_222))))
 (let ((?x76836 (- (- (- ?x76829 ?x76831) (* (* 2.0 l_0_20_235) l_0_20_246)) (* (* 2.0 l_0_20_236) l_0_20_247))))
 (let ((?x76840 (- (- ?x76836 (* (* 2.0 l_0_20_237) l_0_20_248)) (* (* 2.0 l_0_20_238) l_0_20_249))))
 (let ((?x76844 (- (- ?x76840 (* (* 2.0 l_0_20_239) l_0_20_250)) (* (* 2.0 l_0_20_263) l_0_20_274))))
 (let ((?x76848 (- (- ?x76844 (* (* 2.0 l_0_20_264) l_0_20_275)) (* (* 2.0 l_0_20_265) l_0_20_276))))
 (let ((?x76852 (- (- ?x76848 (* (* 2.0 l_0_20_266) l_0_20_277)) (* (* 2.0 l_0_20_267) l_0_20_278))))
 (let ((?x76856 (- (- ?x76852 (* (* 2.0 l_0_20_291) l_0_20_302)) (* (* 2.0 l_0_20_292) l_0_20_303))))
 (let ((?x76860 (- (- ?x76856 (* (* 2.0 l_0_20_293) l_0_20_304)) (* (* 2.0 l_0_20_294) l_0_20_305))))
 (= (+ (+ (- ?x76860 (* (* 2.0 l_0_20_295) l_0_20_306)) ?x76863) ?x76865) 0.0))))))))))))))))))))))))
(assert
 (let ((?x76918 (* l_0_20_6 l_0_20_6)))
 (let ((?x76916 (* l_0_20_5 l_0_20_5)))
 (let ((?x76914 (* l_0_20_4 l_0_20_4)))
 (let ((?x76912 (* l_0_20_34 l_0_20_34)))
 (let ((?x76915 (- (+ (+ (* l_0_20_32 l_0_20_32) (* l_0_20_33 l_0_20_33)) ?x76912) ?x76914)))
 (= (- (- ?x76915 ?x76916) ?x76918) 0.0)))))))
(assert
 (let ((?x76944 (* (* 2.0 l_0_20_6) l_0_20_9)))
 (let ((?x76941 (* (* 2.0 l_0_20_5) l_0_20_8)))
 (let ((?x76938 (* (* 2.0 l_0_20_4) l_0_20_7)))
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76935 (* ?x76934 l_0_20_37)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76932 (* ?x76931 l_0_20_36)))
 (let ((?x76942 (- (- (+ (+ (* (* 2.0 l_0_20_32) l_0_20_35) ?x76932) ?x76935) ?x76938) ?x76941)))
 (= (- ?x76942 ?x76944) 0.0))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76967 (* ?x76934 l_0_20_41)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76965 (* ?x76931 l_0_20_40)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x76963 (* ?x76929 l_0_20_39)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x76961 (* ?x76960 l_0_20_6)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x58455 (* ?x76132 l_0_20_5)))
 (let ((?x76966 (+ (+ (- (- (* (* (- 2.0) l_0_20_11) l_0_20_4) ?x58455) ?x76961) ?x76963) ?x76965)))
 (= (+ ?x76966 ?x76967) 0.0)))))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76990 (* ?x76934 l_0_20_46)))
 (let ((?x76967 (* ?x76934 l_0_20_41)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76987 (* ?x76931 l_0_20_45)))
 (let ((?x76965 (* ?x76931 l_0_20_40)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x76984 (* ?x76929 l_0_20_44)))
 (let ((?x76963 (* ?x76929 l_0_20_39)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x76981 (* ?x76980 l_0_20_6)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x58514 (* ?x76627 l_0_20_5)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x58513 (* ?x76624 l_0_20_4)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x76961 (* ?x76960 l_0_20_6)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x58455 (* ?x76132 l_0_20_5)))
 (let ((?x58507 (+ (+ (* (* 2.0 l_0_20_11) l_0_20_4) ?x58455) ?x76961)))
 (let ((?x76988 (+ (- (+ (- (- (- (- ?x58507 ?x58513) ?x58514) ?x76981) ?x76963) ?x76984) ?x76965) ?x76987)))
 (= (+ (- ?x76988 ?x76967) ?x76990) 0.0)))))))))))))))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x77045 (* ?x76934 l_0_20_52)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x77043 (* ?x76931 l_0_20_51)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x77041 (* ?x76929 l_0_20_50)))
 (let ((?x77038 (* 2.0 l_0_20_24)))
 (let ((?x77039 (* ?x77038 l_0_20_6)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x77036 (* ?x76830 l_0_20_5)))
 (let ((?x77033 (* 2.0 l_0_20_22)))
 (let ((?x77034 (* ?x77033 l_0_20_4)))
 (let ((?x77020 (+ (* (* 2.0 l_0_20_144) l_0_20_151) (* (* 2.0 l_0_20_145) l_0_20_152))))
 (let ((?x77026 (- (+ ?x77020 (* (* 2.0 l_0_20_146) l_0_20_153)) (* (* 2.0 l_0_20_172) l_0_20_179))))
 (let ((?x77032 (- (- ?x77026 (* (* 2.0 l_0_20_173) l_0_20_180)) (* (* 2.0 l_0_20_174) l_0_20_181))))
 (= (+ (+ (+ (- (- (- ?x77032 ?x77034) ?x77036) ?x77039) ?x77041) ?x77043) ?x77045) 0.0)))))))))))))))))
(assert
 (let ((?x77079 (* l_0_20_9 l_0_20_9)))
 (let ((?x77077 (* l_0_20_8 l_0_20_8)))
 (let ((?x77075 (* l_0_20_7 l_0_20_7)))
 (let ((?x77073 (* l_0_20_38 l_0_20_38)))
 (let ((?x58670 (* l_0_20_37 l_0_20_37)))
 (let ((?x39880 (* l_0_20_36 l_0_20_36)))
 (let ((?x58669 (+ (+ (* (- l_0_20_10) l_0_20_10) (* l_0_20_35 l_0_20_35)) ?x39880)))
 (= (- (- (- (+ (+ ?x58669 ?x58670) ?x77073) ?x77075) ?x77077) ?x77079) 0.0)))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77111 (* ?x77110 l_0_20_42)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77108 (* ?x77107 l_0_20_41)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77105 (* ?x77104 l_0_20_40)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77102 (* ?x77101 l_0_20_39)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77099 (* ?x76960 l_0_20_9)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x77097 (* ?x76132 l_0_20_8)))
 (let ((?x76125 (* 2.0 l_0_20_11)))
 (let ((?x77095 (* ?x76125 l_0_20_7)))
 (let ((?x77103 (+ (- (- (- (* (* (- 2.0) l_0_20_10) l_0_20_14) ?x77095) ?x77097) ?x77099) ?x77102)))
 (= (+ (+ (+ ?x77103 ?x77105) ?x77108) ?x77111) 0.0)))))))))))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77158 (* ?x77110 l_0_20_47)))
 (let ((?x77111 (* ?x77110 l_0_20_42)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77155 (* ?x77107 l_0_20_46)))
 (let ((?x77108 (* ?x77107 l_0_20_41)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77152 (* ?x77104 l_0_20_45)))
 (let ((?x77105 (* ?x77104 l_0_20_40)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77149 (* ?x77101 l_0_20_44)))
 (let ((?x77102 (* ?x77101 l_0_20_39)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x77146 (* ?x76980 l_0_20_9)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x77144 (* ?x76627 l_0_20_8)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x77142 (* ?x76624 l_0_20_7)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77099 (* ?x76960 l_0_20_9)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x77097 (* ?x76132 l_0_20_8)))
 (let ((?x76125 (* 2.0 l_0_20_11)))
 (let ((?x77095 (* ?x76125 l_0_20_7)))
 (let ((?x77125 (* 2.0 l_0_20_10)))
 (let ((?x77129 (* ?x77125 l_0_20_19)))
 (let ((?x77127 (* ?x77125 l_0_20_14)))
 (let ((?x77147 (- (- (- (+ (+ (+ (- ?x77127 ?x77129) ?x77095) ?x77097) ?x77099) ?x77142) ?x77144) ?x77146)))
 (let ((?x77157 (- (+ (- (+ (- (+ (- ?x77147 ?x77102) ?x77149) ?x77105) ?x77152) ?x77108) ?x77155) ?x77111)))
 (= (+ ?x77157 ?x77158) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77211 (* ?x77110 l_0_20_53)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77209 (* ?x77107 l_0_20_52)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77207 (* ?x77104 l_0_20_51)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77205 (* ?x77101 l_0_20_50)))
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76141 (* ?x76140 l_0_20_40)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76138 (* ?x76137 l_0_20_39)))
 (let ((?x77038 (* 2.0 l_0_20_24)))
 (let ((?x77201 (* ?x77038 l_0_20_9)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x77199 (* ?x76830 l_0_20_8)))
 (let ((?x77033 (* 2.0 l_0_20_22)))
 (let ((?x77197 (* ?x77033 l_0_20_7)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x76133 (* ?x76132 l_0_20_3)))
 (let ((?x76125 (* 2.0 l_0_20_11)))
 (let ((?x76130 (* ?x76125 l_0_20_2)))
 (let ((?x77175 (+ (+ (+ (* (* (- 2.0) l_0_20_10) l_0_20_25) ?x76130) ?x76133) (* (* 2.0 l_0_20_147) l_0_20_151))))
 (let ((?x77181 (+ (+ ?x77175 (* (* 2.0 l_0_20_148) l_0_20_152)) (* (* 2.0 l_0_20_149) l_0_20_153))))
 (let ((?x77187 (- (+ ?x77181 (* (* 2.0 l_0_20_150) l_0_20_154)) (* (* 2.0 l_0_20_175) l_0_20_179))))
 (let ((?x77193 (- (- ?x77187 (* (* 2.0 l_0_20_176) l_0_20_180)) (* (* 2.0 l_0_20_177) l_0_20_181))))
 (let ((?x77202 (- (- (- (- ?x77193 (* (* 2.0 l_0_20_178) l_0_20_182)) ?x77197) ?x77199) ?x77201)))
 (= (+ (+ (+ (+ (- (- ?x77202 ?x76138) ?x76141) ?x77205) ?x77207) ?x77209) ?x77211) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x77276 (* l_0_20_43 l_0_20_43)))
 (let ((?x77274 (* l_0_20_42 l_0_20_42)))
 (let ((?x77272 (* l_0_20_41 l_0_20_41)))
 (let ((?x77270 (* l_0_20_40 l_0_20_40)))
 (let ((?x77268 (* l_0_20_39 l_0_20_39)))
 (let ((?x77266 (* l_0_20_15 l_0_20_15)))
 (let ((?x77264 (* l_0_20_14 l_0_20_14)))
 (let ((?x77251 (* l_0_20_13 l_0_20_13)))
 (let ((?x77263 (- (- (* (- l_0_20_11) l_0_20_11) (* l_0_20_12 l_0_20_12)) ?x77251)))
 (let ((?x77277 (+ (+ (+ (+ (+ (- (- ?x77263 ?x77264) ?x77266) ?x77268) ?x77270) ?x77272) ?x77274) ?x77276)))
 (= ?x77277 0.0))))))))))))
(assert
 (let ((?x77276 (* l_0_20_43 l_0_20_43)))
 (let ((?x77323 (* 2.0 l_0_20_43)))
 (let ((?x77324 (* ?x77323 l_0_20_48)))
 (let ((?x77274 (* l_0_20_42 l_0_20_42)))
 (let ((?x77319 (* 2.0 l_0_20_42)))
 (let ((?x77320 (* ?x77319 l_0_20_47)))
 (let ((?x77272 (* l_0_20_41 l_0_20_41)))
 (let ((?x77315 (* 2.0 l_0_20_41)))
 (let ((?x77316 (* ?x77315 l_0_20_46)))
 (let ((?x77270 (* l_0_20_40 l_0_20_40)))
 (let ((?x77311 (* 2.0 l_0_20_40)))
 (let ((?x77312 (* ?x77311 l_0_20_45)))
 (let ((?x77268 (* l_0_20_39 l_0_20_39)))
 (let ((?x77307 (* 2.0 l_0_20_39)))
 (let ((?x77308 (* ?x77307 l_0_20_44)))
 (let ((?x77266 (* l_0_20_15 l_0_20_15)))
 (let ((?x77303 (* 2.0 l_0_20_15)))
 (let ((?x77304 (* ?x77303 l_0_20_20)))
 (let ((?x77264 (* l_0_20_14 l_0_20_14)))
 (let ((?x77299 (* 2.0 l_0_20_14)))
 (let ((?x77300 (* ?x77299 l_0_20_19)))
 (let ((?x77251 (* l_0_20_13 l_0_20_13)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77296 (* ?x76960 l_0_20_18)))
 (let ((?x77248 (* l_0_20_12 l_0_20_12)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x77293 (* ?x76132 l_0_20_17)))
 (let ((?x77294 (- (+ (* (* (- 2.0) l_0_20_11) l_0_20_16) (* l_0_20_11 l_0_20_11)) ?x77293)))
 (let ((?x77306 (+ (- (+ (- (+ (- (+ ?x77294 ?x77248) ?x77296) ?x77251) ?x77300) ?x77264) ?x77304) ?x77266)))
 (let ((?x77321 (+ (- (+ (- (+ (- (+ ?x77306 ?x77308) ?x77268) ?x77312) ?x77270) ?x77316) ?x77272) ?x77320)))
 (= (- (+ (- ?x77321 ?x77274) ?x77324) ?x77276) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x77323 (* 2.0 l_0_20_43)))
 (let ((?x77389 (* ?x77323 l_0_20_54)))
 (let ((?x77319 (* 2.0 l_0_20_42)))
 (let ((?x77387 (* ?x77319 l_0_20_53)))
 (let ((?x77315 (* 2.0 l_0_20_41)))
 (let ((?x77385 (* ?x77315 l_0_20_52)))
 (let ((?x77311 (* 2.0 l_0_20_40)))
 (let ((?x77383 (* ?x77311 l_0_20_51)))
 (let ((?x77307 (* 2.0 l_0_20_39)))
 (let ((?x77381 (* ?x77307 l_0_20_50)))
 (let ((?x77379 (* l_0_20_183 l_0_20_183)))
 (let ((?x77377 (* l_0_20_182 l_0_20_182)))
 (let ((?x77375 (* l_0_20_181 l_0_20_181)))
 (let ((?x77373 (* l_0_20_180 l_0_20_180)))
 (let ((?x77371 (* l_0_20_179 l_0_20_179)))
 (let ((?x77369 (* l_0_20_155 l_0_20_155)))
 (let ((?x77367 (* l_0_20_154 l_0_20_154)))
 (let ((?x77365 (* l_0_20_153 l_0_20_153)))
 (let ((?x77363 (* l_0_20_152 l_0_20_152)))
 (let ((?x77361 (* l_0_20_151 l_0_20_151)))
 (let ((?x77303 (* 2.0 l_0_20_15)))
 (let ((?x77359 (* ?x77303 l_0_20_26)))
 (let ((?x77299 (* 2.0 l_0_20_14)))
 (let ((?x77357 (* ?x77299 l_0_20_25)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77355 (* ?x76960 l_0_20_24)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x58815 (* ?x76132 l_0_20_23)))
 (let ((?x77360 (- (- (- (- (* (* (- 2.0) l_0_20_11) l_0_20_22) ?x58815) ?x77355) ?x77357) ?x77359)))
 (let ((?x77374 (- (- (+ (+ (+ (+ (+ ?x77360 ?x77361) ?x77363) ?x77365) ?x77367) ?x77369) ?x77371) ?x77373)))
 (let ((?x77388 (+ (+ (+ (+ (- (- (- ?x77374 ?x77375) ?x77377) ?x77379) ?x77381) ?x77383) ?x77385) ?x77387)))
 (= (+ ?x77388 ?x77389) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x77443 (* l_0_20_49 l_0_20_49)))
 (let ((?x77441 (* l_0_20_48 l_0_20_48)))
 (let ((?x77439 (* l_0_20_47 l_0_20_47)))
 (let ((?x77437 (* l_0_20_46 l_0_20_46)))
 (let ((?x77435 (* l_0_20_45 l_0_20_45)))
 (let ((?x77433 (* l_0_20_44 l_0_20_44)))
 (let ((?x77323 (* 2.0 l_0_20_43)))
 (let ((?x77324 (* ?x77323 l_0_20_48)))
 (let ((?x77319 (* 2.0 l_0_20_42)))
 (let ((?x77320 (* ?x77319 l_0_20_47)))
 (let ((?x77315 (* 2.0 l_0_20_41)))
 (let ((?x77316 (* ?x77315 l_0_20_46)))
 (let ((?x77311 (* 2.0 l_0_20_40)))
 (let ((?x77312 (* ?x77311 l_0_20_45)))
 (let ((?x77307 (* 2.0 l_0_20_39)))
 (let ((?x77308 (* ?x77307 l_0_20_44)))
 (let ((?x77426 (* l_0_20_21 l_0_20_21)))
 (let ((?x77424 (* l_0_20_20 l_0_20_20)))
 (let ((?x77422 (* l_0_20_19 l_0_20_19)))
 (let ((?x77420 (* l_0_20_18 l_0_20_18)))
 (let ((?x77418 (* l_0_20_17 l_0_20_17)))
 (let ((?x77416 (* l_0_20_16 l_0_20_16)))
 (let ((?x77303 (* 2.0 l_0_20_15)))
 (let ((?x77304 (* ?x77303 l_0_20_20)))
 (let ((?x77299 (* 2.0 l_0_20_14)))
 (let ((?x77300 (* ?x77299 l_0_20_19)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77296 (* ?x76960 l_0_20_18)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x77293 (* ?x76132 l_0_20_17)))
 (let ((?x77415 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_16) ?x77293) ?x77296) ?x77300) ?x77304)))
 (let ((?x77428 (- (- (- (- (- (- (- ?x77415 ?x77416) ?x77418) ?x77420) ?x77422) ?x77424) ?x77426) ?x77308)))
 (let ((?x77438 (+ (+ (+ (- (- (- (- ?x77428 ?x77312) ?x77316) ?x77320) ?x77324) ?x77433) ?x77435) ?x77437)))
 (= (+ (+ (+ ?x77438 ?x77439) ?x77441) ?x77443) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77526 (* (* 2.0 l_0_20_49) l_0_20_55)))
 (let ((?x77523 (* (* 2.0 l_0_20_48) l_0_20_54)))
 (let ((?x77520 (* (* 2.0 l_0_20_47) l_0_20_53)))
 (let ((?x77517 (* (* 2.0 l_0_20_46) l_0_20_52)))
 (let ((?x77514 (* (* 2.0 l_0_20_45) l_0_20_51)))
 (let ((?x77511 (* (* 2.0 l_0_20_44) l_0_20_50)))
 (let ((?x77323 (* 2.0 l_0_20_43)))
 (let ((?x77389 (* ?x77323 l_0_20_54)))
 (let ((?x77319 (* 2.0 l_0_20_42)))
 (let ((?x77387 (* ?x77319 l_0_20_53)))
 (let ((?x77315 (* 2.0 l_0_20_41)))
 (let ((?x77385 (* ?x77315 l_0_20_52)))
 (let ((?x77311 (* 2.0 l_0_20_40)))
 (let ((?x77383 (* ?x77311 l_0_20_51)))
 (let ((?x77307 (* 2.0 l_0_20_39)))
 (let ((?x77381 (* ?x77307 l_0_20_50)))
 (let ((?x77503 (* (* 2.0 l_0_20_21) l_0_20_27)))
 (let ((?x77500 (* (* 2.0 l_0_20_20) l_0_20_26)))
 (let ((?x77497 (* (* 2.0 l_0_20_19) l_0_20_25)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x77482 (* ?x76980 l_0_20_24)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x77477 (* ?x76627 l_0_20_23)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x77475 (* ?x76624 l_0_20_22)))
 (let ((?x77303 (* 2.0 l_0_20_15)))
 (let ((?x77359 (* ?x77303 l_0_20_26)))
 (let ((?x77299 (* 2.0 l_0_20_14)))
 (let ((?x77357 (* ?x77299 l_0_20_25)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77355 (* ?x76960 l_0_20_24)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x58815 (* ?x76132 l_0_20_23)))
 (let ((?x77459 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_22) ?x58815) ?x77355) ?x77357) ?x77359)))
 (let ((?x77465 (+ (+ ?x77459 (* (* 2.0 l_0_20_151) l_0_20_156)) (* (* 2.0 l_0_20_152) l_0_20_157))))
 (let ((?x77471 (+ (+ ?x77465 (* (* 2.0 l_0_20_153) l_0_20_158)) (* (* 2.0 l_0_20_154) l_0_20_159))))
 (let ((?x77481 (- (- (- (+ ?x77471 (* (* 2.0 l_0_20_155) l_0_20_160)) ?x77475) ?x77477) (* (* 2.0 l_0_20_179) l_0_20_184))))
 (let ((?x77489 (- (- (- ?x77481 ?x77482) (* (* 2.0 l_0_20_180) l_0_20_185)) (* (* 2.0 l_0_20_181) l_0_20_186))))
 (let ((?x77495 (- (- ?x77489 (* (* 2.0 l_0_20_182) l_0_20_187)) (* (* 2.0 l_0_20_183) l_0_20_188))))
 (let ((?x77508 (- (- (- (- (- (- (- ?x77495 ?x77497) ?x77500) ?x77503) ?x77381) ?x77383) ?x77385) ?x77387)))
 (let ((?x77527 (+ (+ (+ (+ (+ (+ (- ?x77508 ?x77389) ?x77511) ?x77514) ?x77517) ?x77520) ?x77523) ?x77526)))
 (= ?x77527 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77617 (* l_0_20_56 l_0_20_56)))
 (let ((?x77615 (* l_0_20_55 l_0_20_55)))
 (let ((?x77613 (* l_0_20_54 l_0_20_54)))
 (let ((?x77611 (* l_0_20_53 l_0_20_53)))
 (let ((?x77609 (* l_0_20_52 l_0_20_52)))
 (let ((?x77607 (* l_0_20_51 l_0_20_51)))
 (let ((?x77605 (* l_0_20_50 l_0_20_50)))
 (let ((?x77603 (* l_0_20_28 l_0_20_28)))
 (let ((?x77601 (* l_0_20_27 l_0_20_27)))
 (let ((?x77599 (* l_0_20_26 l_0_20_26)))
 (let ((?x77597 (* l_0_20_25 l_0_20_25)))
 (let ((?x77595 (* l_0_20_24 l_0_20_24)))
 (let ((?x77593 (* l_0_20_23 l_0_20_23)))
 (let ((?x77591 (* l_0_20_22 l_0_20_22)))
 (let ((?x59041 (+ (* (* 2.0 l_0_20_151) l_0_20_162) (* (* 2.0 l_0_20_152) l_0_20_163))))
 (let ((?x77565 (+ (+ ?x59041 (* (* 2.0 l_0_20_153) l_0_20_164)) (* (* 2.0 l_0_20_154) l_0_20_165))))
 (let ((?x77582 (- (+ ?x77565 (* (* 2.0 l_0_20_155) l_0_20_166)) (* (* 2.0 l_0_20_179) l_0_20_190))))
 (let ((?x77586 (- (- ?x77582 (* (* 2.0 l_0_20_180) l_0_20_191)) (* (* 2.0 l_0_20_181) l_0_20_192))))
 (let ((?x77590 (- (- ?x77586 (* (* 2.0 l_0_20_182) l_0_20_193)) (* (* 2.0 l_0_20_183) l_0_20_194))))
 (let ((?x77604 (- (- (- (- (- (- (- ?x77590 ?x77591) ?x77593) ?x77595) ?x77597) ?x77599) ?x77601) ?x77603)))
 (let ((?x77618 (+ (+ (+ (+ (+ (+ (+ ?x77604 ?x77605) ?x77607) ?x77609) ?x77611) ?x77613) ?x77615) ?x77617)))
 (= ?x77618 0.0)))))))))))))))))))))))
(assert
 (let ((?x76084 (* l_0_20_29 l_0_20_29)))
 (let ((?x38548 (* l_0_20_1 l_0_20_1)))
 (let ((?x59169 (- ?x38548 ?x76084)))
 (let ((?x77655 (- (+ ?x59169 (* (* 2.0 l_0_20_57) l_0_20_63)) (* (* 2.0 l_0_20_85) l_0_20_91))))
 (= ?x77655 0.0))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76104 (* ?x76103 l_0_20_30)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x59201 (* ?x76173 l_0_20_2)))
 (let ((?x77664 (- (+ ?x59201 (* (* 2.0 l_0_20_141) l_0_20_147)) (* (* 2.0 l_0_20_169) l_0_20_175))))
 (let ((?x77669 (+ (+ (- ?x77664 ?x76104) (* (* 2.0 l_0_20_58) l_0_20_63)) (* (* 2.0 l_0_20_59) l_0_20_64))))
 (let ((?x77673 (- (- ?x77669 (* (* 2.0 l_0_20_86) l_0_20_91)) (* (* 2.0 l_0_20_87) l_0_20_92))))
 (= ?x77673 0.0)))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77211 (* ?x77110 l_0_20_53)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77209 (* ?x77107 l_0_20_52)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77207 (* ?x77104 l_0_20_51)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77205 (* ?x77101 l_0_20_50)))
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76135 (* ?x76103 l_0_20_32)))
 (let ((?x77038 (* 2.0 l_0_20_24)))
 (let ((?x77201 (* ?x77038 l_0_20_9)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x77199 (* ?x76830 l_0_20_8)))
 (let ((?x77033 (* 2.0 l_0_20_22)))
 (let ((?x77197 (* ?x77033 l_0_20_7)))
 (let ((?x77125 (* 2.0 l_0_20_10)))
 (let ((?x59242 (* ?x77125 l_0_20_25)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x40551 (* ?x76173 l_0_20_4)))
 (let ((?x77700 (- (- (- (+ (+ (+ (+ ?x40551 ?x59242) ?x77197) ?x77199) ?x77201) ?x76135) ?x77205) ?x77207)))
 (let ((?x77708 (+ (+ (- (- ?x77700 ?x77209) ?x77211) (* (* 2.0 l_0_20_60) l_0_20_63)) (* (* 2.0 l_0_20_61) l_0_20_64))))
 (let ((?x77714 (- (+ ?x77708 (* (* 2.0 l_0_20_62) l_0_20_65)) (* (* 2.0 l_0_20_88) l_0_20_91))))
 (let ((?x77720 (- (- ?x77714 (* (* 2.0 l_0_20_89) l_0_20_92)) (* (* 2.0 l_0_20_90) l_0_20_93))))
 (= ?x77720 0.0))))))))))))))))))))))))))
(assert
 (let ((?x77743 (* l_0_20_94 l_0_20_94)))
 (let ((?x77741 (* l_0_20_93 l_0_20_93)))
 (let ((?x77739 (* l_0_20_92 l_0_20_92)))
 (let ((?x77737 (* l_0_20_91 l_0_20_91)))
 (let ((?x77735 (* l_0_20_66 l_0_20_66)))
 (let ((?x59334 (* l_0_20_65 l_0_20_65)))
 (let ((?x59335 (* l_0_20_64 l_0_20_64)))
 (let ((?x59333 (* l_0_20_63 l_0_20_63)))
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x38635 (* ?x76103 l_0_20_35)))
 (let ((?x15460 (- (* (* 2.0 l_0_20_1) l_0_20_7) ?x38635)))
 (let ((?x77742 (- (- (- (+ (+ (+ (+ ?x15460 ?x59333) ?x59335) ?x59334) ?x77735) ?x77737) ?x77739) ?x77741)))
 (= (- ?x77742 ?x77743) 0.0))))))))))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76165 (* ?x76103 l_0_20_39)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x76175 (* ?x76173 l_0_20_11)))
 (let ((?x77755 (- ?x76175 ?x76165)))
 (let ((?x77761 (+ (+ ?x77755 (* (* 2.0 l_0_20_63) l_0_20_67)) (* (* 2.0 l_0_20_64) l_0_20_68))))
 (let ((?x77767 (+ (+ ?x77761 (* (* 2.0 l_0_20_65) l_0_20_69)) (* (* 2.0 l_0_20_66) l_0_20_70))))
 (let ((?x77773 (- (- ?x77767 (* (* 2.0 l_0_20_91) l_0_20_95)) (* (* 2.0 l_0_20_92) l_0_20_96))))
 (let ((?x77779 (- (- ?x77773 (* (* 2.0 l_0_20_93) l_0_20_97)) (* (* 2.0 l_0_20_94) l_0_20_98))))
 (= ?x77779 0.0)))))))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76183 (* ?x76103 l_0_20_44)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x76176 (* ?x76173 l_0_20_16)))
 (let ((?x77806 (- (- ?x76176 (* (* 2.0 l_0_20_100) l_0_20_91)) (* (* 2.0 l_0_20_101) l_0_20_92))))
 (let ((?x77812 (- (- ?x77806 (* (* 2.0 l_0_20_102) l_0_20_93)) (* (* 2.0 l_0_20_103) l_0_20_94))))
 (let ((?x77817 (+ (+ (- ?x77812 ?x76183) (* (* 2.0 l_0_20_63) l_0_20_72)) (* (* 2.0 l_0_20_64) l_0_20_73))))
 (let ((?x77821 (+ (+ ?x77817 (* (* 2.0 l_0_20_65) l_0_20_74)) (* (* 2.0 l_0_20_66) l_0_20_75))))
 (= ?x77821 0.0))))))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76201 (* ?x76103 l_0_20_50)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x59446 (* ?x76173 l_0_20_22)))
 (let ((?x77831 (- (- ?x59446 (* (* 2.0 l_0_20_106) l_0_20_91)) (* (* 2.0 l_0_20_107) l_0_20_92))))
 (let ((?x77837 (- (- ?x77831 (* (* 2.0 l_0_20_108) l_0_20_93)) (* (* 2.0 l_0_20_109) l_0_20_94))))
 (let ((?x77842 (+ (+ (- ?x77837 ?x76201) (* (* 2.0 l_0_20_63) l_0_20_78)) (* (* 2.0 l_0_20_64) l_0_20_79))))
 (let ((?x77846 (+ (+ ?x77842 (* (* 2.0 l_0_20_65) l_0_20_80)) (* (* 2.0 l_0_20_66) l_0_20_81))))
 (= ?x77846 0.0))))))))))
(assert
 (let ((?x76267 (* l_0_20_31 l_0_20_31)))
 (let ((?x76265 (* l_0_20_30 l_0_20_30)))
 (let ((?x76263 (* l_0_20_3 l_0_20_3)))
 (let ((?x76249 (* l_0_20_2 l_0_20_2)))
 (let ((?x77864 (- (* (* (- 2.0) l_0_20_119) l_0_20_134) (* (* 2.0 l_0_20_120) l_0_20_135))))
 (let ((?x77868 (- (- ?x77864 (* (* 2.0 l_0_20_121) l_0_20_136)) (* (* 2.0 l_0_20_122) l_0_20_137))))
 (let ((?x77872 (+ (+ ?x77868 (* (* 2.0 l_0_20_142) l_0_20_147)) (* (* 2.0 l_0_20_143) l_0_20_148))))
 (let ((?x77876 (- (- ?x77872 (* (* 2.0 l_0_20_170) l_0_20_175)) (* (* 2.0 l_0_20_171) l_0_20_176))))
 (let ((?x77881 (- (- (+ ?x77876 ?x76249) (* (* 2.0 l_0_20_203) l_0_20_218)) (* (* 2.0 l_0_20_204) l_0_20_219))))
 (let ((?x77885 (- (- ?x77881 (* (* 2.0 l_0_20_205) l_0_20_220)) (* (* 2.0 l_0_20_206) l_0_20_221))))
 (let ((?x77889 (- (- ?x77885 (* (* 2.0 l_0_20_231) l_0_20_246)) (* (* 2.0 l_0_20_232) l_0_20_247))))
 (let ((?x77893 (- (- ?x77889 (* (* 2.0 l_0_20_233) l_0_20_248)) (* (* 2.0 l_0_20_234) l_0_20_249))))
 (let ((?x77897 (- (- ?x77893 (* (* 2.0 l_0_20_259) l_0_20_274)) (* (* 2.0 l_0_20_260) l_0_20_275))))
 (let ((?x77901 (- (- ?x77897 (* (* 2.0 l_0_20_261) l_0_20_276)) (* (* 2.0 l_0_20_262) l_0_20_277))))
 (let ((?x77905 (- (- ?x77901 (* (* 2.0 l_0_20_287) l_0_20_302)) (* (* 2.0 l_0_20_288) l_0_20_303))))
 (let ((?x77909 (- (- ?x77905 (* (* 2.0 l_0_20_289) l_0_20_304)) (* (* 2.0 l_0_20_290) l_0_20_305))))
 (= (- (- (+ ?x77909 ?x76263) ?x76265) ?x76267) 0.0))))))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76326 (* ?x76140 l_0_20_33)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76324 (* ?x76137 l_0_20_32)))
 (let ((?x76321 (* 2.0 l_0_20_3)))
 (let ((?x76322 (* ?x76321 l_0_20_5)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76283 (* ?x76282 l_0_20_4)))
 (let ((?x59625 (+ (* (* 2.0 l_0_20_144) l_0_20_147) (* (* 2.0 l_0_20_145) l_0_20_148))))
 (let ((?x59641 (- (+ ?x59625 (* (* 2.0 l_0_20_146) l_0_20_149)) (* (* 2.0 l_0_20_172) l_0_20_175))))
 (let ((?x77942 (- (- ?x59641 (* (* 2.0 l_0_20_173) l_0_20_176)) (* (* 2.0 l_0_20_174) l_0_20_177))))
 (= (- (- (+ (+ ?x77942 ?x76283) ?x76322) ?x76324) ?x76326) 0.0)))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76423 (* ?x76140 l_0_20_36)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76421 (* ?x76137 l_0_20_35)))
 (let ((?x76321 (* 2.0 l_0_20_3)))
 (let ((?x76419 (* ?x76321 l_0_20_8)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76369 (* ?x76282 l_0_20_7)))
 (let ((?x77963 (* l_0_20_178 l_0_20_178)))
 (let ((?x16110 (* l_0_20_177 l_0_20_177)))
 (let ((?x15771 (* l_0_20_176 l_0_20_176)))
 (let ((?x59755 (* l_0_20_175 l_0_20_175)))
 (let ((?x59734 (* l_0_20_150 l_0_20_150)))
 (let ((?x59723 (* l_0_20_149 l_0_20_149)))
 (let ((?x59728 (+ (+ (* l_0_20_147 l_0_20_147) (* l_0_20_148 l_0_20_148)) ?x59723)))
 (let ((?x77966 (+ (+ (- (- (- (- (+ ?x59728 ?x59734) ?x59755) ?x15771) ?x16110) ?x77963) ?x76369) ?x76419)))
 (= (- (- ?x77966 ?x76421) ?x76423) 0.0))))))))))))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77211 (* ?x77110 l_0_20_53)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77209 (* ?x77107 l_0_20_52)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77207 (* ?x77104 l_0_20_51)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77205 (* ?x77101 l_0_20_50)))
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76694 (* ?x76140 l_0_20_45)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76691 (* ?x76137 l_0_20_44)))
 (let ((?x77038 (* 2.0 l_0_20_24)))
 (let ((?x77201 (* ?x77038 l_0_20_9)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x77199 (* ?x76830 l_0_20_8)))
 (let ((?x77033 (* 2.0 l_0_20_22)))
 (let ((?x77197 (* ?x77033 l_0_20_7)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x76628 (* ?x76627 l_0_20_3)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x76625 (* ?x76624 l_0_20_2)))
 (let ((?x77125 (* 2.0 l_0_20_10)))
 (let ((?x59242 (* ?x77125 l_0_20_25)))
 (let ((?x77984 (+ (+ ?x59242 (* (* 2.0 l_0_20_147) l_0_20_156)) (* (* 2.0 l_0_20_148) l_0_20_157))))
 (let ((?x77988 (+ (+ ?x77984 (* (* 2.0 l_0_20_149) l_0_20_158)) (* (* 2.0 l_0_20_150) l_0_20_159))))
 (let ((?x77994 (- (- (+ (+ ?x77988 ?x76625) ?x76628) (* (* 2.0 l_0_20_175) l_0_20_184)) (* (* 2.0 l_0_20_176) l_0_20_185))))
 (let ((?x77998 (- (- ?x77994 (* (* 2.0 l_0_20_177) l_0_20_186)) (* (* 2.0 l_0_20_178) l_0_20_187))))
 (let ((?x78005 (- (- (- (- (+ (+ (+ ?x77998 ?x77197) ?x77199) ?x77201) ?x76691) ?x76694) ?x77205) ?x77207)))
 (= (- (- ?x78005 ?x77209) ?x77211) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76865 (* ?x76140 l_0_20_51)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76863 (* ?x76137 l_0_20_50)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x76831 (* ?x76830 l_0_20_3)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76818 (* ?x76282 l_0_20_22)))
 (let ((?x16153 (+ (* (* 2.0 l_0_20_147) l_0_20_162) (* (* 2.0 l_0_20_148) l_0_20_163))))
 (let ((?x59790 (+ (+ ?x16153 (* (* 2.0 l_0_20_149) l_0_20_164)) (* (* 2.0 l_0_20_150) l_0_20_165))))
 (let ((?x78023 (- (- ?x59790 (* (* 2.0 l_0_20_175) l_0_20_190)) (* (* 2.0 l_0_20_176) l_0_20_191))))
 (let ((?x78027 (- (- ?x78023 (* (* 2.0 l_0_20_177) l_0_20_192)) (* (* 2.0 l_0_20_178) l_0_20_193))))
 (= (- (- (+ (+ ?x78027 ?x76818) ?x76831) ?x76863) ?x76865) 0.0))))))))))))))
(assert
 (let ((?x76918 (* l_0_20_6 l_0_20_6)))
 (let ((?x76916 (* l_0_20_5 l_0_20_5)))
 (let ((?x76914 (* l_0_20_4 l_0_20_4)))
 (let ((?x76912 (* l_0_20_34 l_0_20_34)))
 (let ((?x59837 (- (- (* (- l_0_20_32) l_0_20_32) (* l_0_20_33 l_0_20_33)) ?x76912)))
 (= (+ (+ (+ ?x59837 ?x76914) ?x76916) ?x76918) 0.0)))))))
(assert
 (let ((?x76944 (* (* 2.0 l_0_20_6) l_0_20_9)))
 (let ((?x76941 (* (* 2.0 l_0_20_5) l_0_20_8)))
 (let ((?x76938 (* (* 2.0 l_0_20_4) l_0_20_7)))
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76935 (* ?x76934 l_0_20_37)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76932 (* ?x76931 l_0_20_36)))
 (let ((?x59851 (+ (+ (- (- (* (* (- 2.0) l_0_20_32) l_0_20_35) ?x76932) ?x76935) ?x76938) ?x76941)))
 (= (+ ?x59851 ?x76944) 0.0))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76967 (* ?x76934 l_0_20_41)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76965 (* ?x76931 l_0_20_40)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x76963 (* ?x76929 l_0_20_39)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x76961 (* ?x76960 l_0_20_6)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x58455 (* ?x76132 l_0_20_5)))
 (let ((?x58507 (+ (+ (* (* 2.0 l_0_20_11) l_0_20_4) ?x58455) ?x76961)))
 (= (- (- (- ?x58507 ?x76963) ?x76965) ?x76967) 0.0)))))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76990 (* ?x76934 l_0_20_46)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76987 (* ?x76931 l_0_20_45)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x76984 (* ?x76929 l_0_20_44)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x76981 (* ?x76980 l_0_20_6)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x58514 (* ?x76627 l_0_20_5)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x58513 (* ?x76624 l_0_20_4)))
 (= (- (- (- (+ (+ ?x58513 ?x58514) ?x76981) ?x76984) ?x76987) ?x76990) 0.0))))))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x77045 (* ?x76934 l_0_20_52)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x77043 (* ?x76931 l_0_20_51)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x77041 (* ?x76929 l_0_20_50)))
 (let ((?x77038 (* 2.0 l_0_20_24)))
 (let ((?x77039 (* ?x77038 l_0_20_6)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x77036 (* ?x76830 l_0_20_5)))
 (let ((?x77033 (* 2.0 l_0_20_22)))
 (let ((?x77034 (* ?x77033 l_0_20_4)))
 (let ((?x59940 (- (- (- (+ (+ ?x77034 ?x77036) ?x77039) ?x77041) ?x77043) ?x77045)))
 (= ?x59940 0.0)))))))))))))))
(assert
 (let ((?x77079 (* l_0_20_9 l_0_20_9)))
 (let ((?x77077 (* l_0_20_8 l_0_20_8)))
 (let ((?x77075 (* l_0_20_7 l_0_20_7)))
 (let ((?x77073 (* l_0_20_38 l_0_20_38)))
 (let ((?x58670 (* l_0_20_37 l_0_20_37)))
 (let ((?x39880 (* l_0_20_36 l_0_20_36)))
 (let ((?x41101 (- (- (- (* l_0_20_10 l_0_20_10) (* l_0_20_35 l_0_20_35)) ?x39880) ?x58670)))
 (= (+ (+ (+ (- ?x41101 ?x77073) ?x77075) ?x77077) ?x77079) 0.0)))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77111 (* ?x77110 l_0_20_42)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77108 (* ?x77107 l_0_20_41)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77105 (* ?x77104 l_0_20_40)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77102 (* ?x77101 l_0_20_39)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77099 (* ?x76960 l_0_20_9)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x77097 (* ?x76132 l_0_20_8)))
 (let ((?x76125 (* 2.0 l_0_20_11)))
 (let ((?x77095 (* ?x76125 l_0_20_7)))
 (let ((?x77125 (* 2.0 l_0_20_10)))
 (let ((?x77127 (* ?x77125 l_0_20_14)))
 (let ((?x59922 (- (- (- (- (+ (+ (+ ?x77127 ?x77095) ?x77097) ?x77099) ?x77102) ?x77105) ?x77108) ?x77111)))
 (= ?x59922 0.0)))))))))))))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77158 (* ?x77110 l_0_20_47)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77155 (* ?x77107 l_0_20_46)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77152 (* ?x77104 l_0_20_45)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77149 (* ?x77101 l_0_20_44)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x77146 (* ?x76980 l_0_20_9)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x77144 (* ?x76627 l_0_20_8)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x77142 (* ?x76624 l_0_20_7)))
 (let ((?x77125 (* 2.0 l_0_20_10)))
 (let ((?x77129 (* ?x77125 l_0_20_19)))
 (let ((?x78071 (- (- (- (- (+ (+ (+ ?x77129 ?x77142) ?x77144) ?x77146) ?x77149) ?x77152) ?x77155) ?x77158)))
 (= ?x78071 0.0)))))))))))))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77211 (* ?x77110 l_0_20_53)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77209 (* ?x77107 l_0_20_52)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77207 (* ?x77104 l_0_20_51)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77205 (* ?x77101 l_0_20_50)))
 (let ((?x77038 (* 2.0 l_0_20_24)))
 (let ((?x77201 (* ?x77038 l_0_20_9)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x77199 (* ?x76830 l_0_20_8)))
 (let ((?x77033 (* 2.0 l_0_20_22)))
 (let ((?x77197 (* ?x77033 l_0_20_7)))
 (let ((?x77125 (* 2.0 l_0_20_10)))
 (let ((?x59242 (* ?x77125 l_0_20_25)))
 (let ((?x41282 (- (- (- (- (+ (+ (+ ?x59242 ?x77197) ?x77199) ?x77201) ?x77205) ?x77207) ?x77209) ?x77211)))
 (= ?x41282 0.0)))))))))))))))))))
(assert
 (let ((?x77276 (* l_0_20_43 l_0_20_43)))
 (let ((?x77274 (* l_0_20_42 l_0_20_42)))
 (let ((?x77272 (* l_0_20_41 l_0_20_41)))
 (let ((?x77270 (* l_0_20_40 l_0_20_40)))
 (let ((?x77268 (* l_0_20_39 l_0_20_39)))
 (let ((?x77266 (* l_0_20_15 l_0_20_15)))
 (let ((?x77264 (* l_0_20_14 l_0_20_14)))
 (let ((?x77251 (* l_0_20_13 l_0_20_13)))
 (let ((?x41328 (+ (+ (+ (* l_0_20_11 l_0_20_11) (* l_0_20_12 l_0_20_12)) ?x77251) ?x77264)))
 (= (- (- (- (- (- (+ ?x41328 ?x77266) ?x77268) ?x77270) ?x77272) ?x77274) ?x77276) 0.0)))))))))))
(assert
 (let ((?x77323 (* 2.0 l_0_20_43)))
 (let ((?x77324 (* ?x77323 l_0_20_48)))
 (let ((?x77319 (* 2.0 l_0_20_42)))
 (let ((?x77320 (* ?x77319 l_0_20_47)))
 (let ((?x77315 (* 2.0 l_0_20_41)))
 (let ((?x77316 (* ?x77315 l_0_20_46)))
 (let ((?x77311 (* 2.0 l_0_20_40)))
 (let ((?x77312 (* ?x77311 l_0_20_45)))
 (let ((?x77307 (* 2.0 l_0_20_39)))
 (let ((?x77308 (* ?x77307 l_0_20_44)))
 (let ((?x77303 (* 2.0 l_0_20_15)))
 (let ((?x77304 (* ?x77303 l_0_20_20)))
 (let ((?x77299 (* 2.0 l_0_20_14)))
 (let ((?x77300 (* ?x77299 l_0_20_19)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77296 (* ?x76960 l_0_20_18)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x77293 (* ?x76132 l_0_20_17)))
 (let ((?x77415 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_16) ?x77293) ?x77296) ?x77300) ?x77304)))
 (= (- (- (- (- (- ?x77415 ?x77308) ?x77312) ?x77316) ?x77320) ?x77324) 0.0)))))))))))))))))))))
(assert
 (let ((?x77323 (* 2.0 l_0_20_43)))
 (let ((?x77389 (* ?x77323 l_0_20_54)))
 (let ((?x77319 (* 2.0 l_0_20_42)))
 (let ((?x77387 (* ?x77319 l_0_20_53)))
 (let ((?x77315 (* 2.0 l_0_20_41)))
 (let ((?x77385 (* ?x77315 l_0_20_52)))
 (let ((?x77311 (* 2.0 l_0_20_40)))
 (let ((?x77383 (* ?x77311 l_0_20_51)))
 (let ((?x77307 (* 2.0 l_0_20_39)))
 (let ((?x77381 (* ?x77307 l_0_20_50)))
 (let ((?x77303 (* 2.0 l_0_20_15)))
 (let ((?x77359 (* ?x77303 l_0_20_26)))
 (let ((?x77299 (* 2.0 l_0_20_14)))
 (let ((?x77357 (* ?x77299 l_0_20_25)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77355 (* ?x76960 l_0_20_24)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x58815 (* ?x76132 l_0_20_23)))
 (let ((?x77459 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_22) ?x58815) ?x77355) ?x77357) ?x77359)))
 (let ((?x78107 (- (- (- (- (- ?x77459 ?x77381) ?x77383) ?x77385) ?x77387) ?x77389)))
 (= ?x78107 0.0))))))))))))))))))))))
(assert
 (let ((?x77443 (* l_0_20_49 l_0_20_49)))
 (let ((?x77441 (* l_0_20_48 l_0_20_48)))
 (let ((?x77439 (* l_0_20_47 l_0_20_47)))
 (let ((?x77437 (* l_0_20_46 l_0_20_46)))
 (let ((?x77435 (* l_0_20_45 l_0_20_45)))
 (let ((?x77433 (* l_0_20_44 l_0_20_44)))
 (let ((?x77426 (* l_0_20_21 l_0_20_21)))
 (let ((?x77424 (* l_0_20_20 l_0_20_20)))
 (let ((?x77422 (* l_0_20_19 l_0_20_19)))
 (let ((?x77420 (* l_0_20_18 l_0_20_18)))
 (let ((?x78124 (+ (+ (+ (* l_0_20_16 l_0_20_16) (* l_0_20_17 l_0_20_17)) ?x77420) ?x77422)))
 (let ((?x78131 (- (- (- (- (- (+ (+ ?x78124 ?x77424) ?x77426) ?x77433) ?x77435) ?x77437) ?x77439) ?x77441)))
 (= (- ?x78131 ?x77443) 0.0))))))))))))))
(assert
 (let ((?x77526 (* (* 2.0 l_0_20_49) l_0_20_55)))
 (let ((?x77523 (* (* 2.0 l_0_20_48) l_0_20_54)))
 (let ((?x77520 (* (* 2.0 l_0_20_47) l_0_20_53)))
 (let ((?x77517 (* (* 2.0 l_0_20_46) l_0_20_52)))
 (let ((?x77514 (* (* 2.0 l_0_20_45) l_0_20_51)))
 (let ((?x77511 (* (* 2.0 l_0_20_44) l_0_20_50)))
 (let ((?x77503 (* (* 2.0 l_0_20_21) l_0_20_27)))
 (let ((?x77500 (* (* 2.0 l_0_20_20) l_0_20_26)))
 (let ((?x77497 (* (* 2.0 l_0_20_19) l_0_20_25)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x77482 (* ?x76980 l_0_20_24)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x77477 (* ?x76627 l_0_20_23)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x77475 (* ?x76624 l_0_20_22)))
 (let ((?x60159 (- (- (+ (+ (+ (+ (+ ?x77475 ?x77477) ?x77482) ?x77497) ?x77500) ?x77503) ?x77511) ?x77514)))
 (= (- (- (- (- ?x60159 ?x77517) ?x77520) ?x77523) ?x77526) 0.0))))))))))))))))))
(assert
 (let ((?x77617 (* l_0_20_56 l_0_20_56)))
 (let ((?x77615 (* l_0_20_55 l_0_20_55)))
 (let ((?x77613 (* l_0_20_54 l_0_20_54)))
 (let ((?x77611 (* l_0_20_53 l_0_20_53)))
 (let ((?x77609 (* l_0_20_52 l_0_20_52)))
 (let ((?x77607 (* l_0_20_51 l_0_20_51)))
 (let ((?x77605 (* l_0_20_50 l_0_20_50)))
 (let ((?x77603 (* l_0_20_28 l_0_20_28)))
 (let ((?x77601 (* l_0_20_27 l_0_20_27)))
 (let ((?x77599 (* l_0_20_26 l_0_20_26)))
 (let ((?x77597 (* l_0_20_25 l_0_20_25)))
 (let ((?x77595 (* l_0_20_24 l_0_20_24)))
 (let ((?x60232 (+ (+ (+ (* l_0_20_22 l_0_20_22) (* l_0_20_23 l_0_20_23)) ?x77595) ?x77597)))
 (let ((?x16986 (- (- (- (- (+ (+ (+ ?x60232 ?x77599) ?x77601) ?x77603) ?x77605) ?x77607) ?x77609) ?x77611)))
 (= (- (- (- ?x16986 ?x77613) ?x77615) ?x77617) 0.0))))))))))))))))
(assert
 (let ((?x76084 (* l_0_20_29 l_0_20_29)))
 (let ((?x38548 (* l_0_20_1 l_0_20_1)))
 (let ((?x59169 (- ?x38548 ?x76084)))
 (= ?x59169 0.0)))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76104 (* ?x76103 l_0_20_30)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x59201 (* ?x76173 l_0_20_2)))
 (= (- ?x59201 ?x76104) 0.0))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76135 (* ?x76103 l_0_20_32)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x40551 (* ?x76173 l_0_20_4)))
 (= (- ?x40551 ?x76135) 0.0))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x38635 (* ?x76103 l_0_20_35)))
 (let ((?x15460 (- (* (* 2.0 l_0_20_1) l_0_20_7) ?x38635)))
 (= ?x15460 0.0)))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76165 (* ?x76103 l_0_20_39)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x76175 (* ?x76173 l_0_20_11)))
 (let ((?x77755 (- ?x76175 ?x76165)))
 (= ?x77755 0.0)))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76183 (* ?x76103 l_0_20_44)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x76176 (* ?x76173 l_0_20_16)))
 (= (- ?x76176 ?x76183) 0.0))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76201 (* ?x76103 l_0_20_50)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x59446 (* ?x76173 l_0_20_22)))
 (let ((?x60287 (- (+ (- ?x59446 ?x76201) (* (* 2.0 l_0_20_57) l_0_20_60)) (* (* 2.0 l_0_20_85) l_0_20_88))))
 (= ?x60287 0.0)))))))
(assert
 (let ((?x76267 (* l_0_20_31 l_0_20_31)))
 (let ((?x76265 (* l_0_20_30 l_0_20_30)))
 (let ((?x76263 (* l_0_20_3 l_0_20_3)))
 (let ((?x76249 (* l_0_20_2 l_0_20_2)))
 (let ((?x78140 (- (* (* (- 2.0) l_0_20_113) l_0_20_116) (* (* 2.0 l_0_20_197) l_0_20_200))))
 (let ((?x78145 (- (- (+ ?x78140 ?x76249) (* (* 2.0 l_0_20_225) l_0_20_228)) (* (* 2.0 l_0_20_253) l_0_20_256))))
 (let ((?x78150 (- (- (+ (- ?x78145 (* (* 2.0 l_0_20_281) l_0_20_284)) ?x76263) ?x76265) ?x76267)))
 (= ?x78150 0.0)))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76326 (* ?x76140 l_0_20_33)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76324 (* ?x76137 l_0_20_32)))
 (let ((?x76321 (* 2.0 l_0_20_3)))
 (let ((?x76322 (* ?x76321 l_0_20_5)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76283 (* ?x76282 l_0_20_4)))
 (= (- (- (+ ?x76283 ?x76322) ?x76324) ?x76326) 0.0))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76423 (* ?x76140 l_0_20_36)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76421 (* ?x76137 l_0_20_35)))
 (let ((?x76321 (* 2.0 l_0_20_3)))
 (let ((?x76419 (* ?x76321 l_0_20_8)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76369 (* ?x76282 l_0_20_7)))
 (= (- (- (+ ?x76369 ?x76419) ?x76421) ?x76423) 0.0))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76694 (* ?x76140 l_0_20_45)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76691 (* ?x76137 l_0_20_44)))
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76135 (* ?x76103 l_0_20_32)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x76628 (* ?x76627 l_0_20_3)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x76625 (* ?x76624 l_0_20_2)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x40551 (* ?x76173 l_0_20_4)))
 (= (- (- (- (+ (+ ?x40551 ?x76625) ?x76628) ?x76135) ?x76691) ?x76694) 0.0))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76865 (* ?x76140 l_0_20_51)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76863 (* ?x76137 l_0_20_50)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x76831 (* ?x76830 l_0_20_3)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76818 (* ?x76282 l_0_20_22)))
 (let ((?x78215 (- (* (* 2.0 l_0_20_141) l_0_20_144) (* (* 2.0 l_0_20_169) l_0_20_172))))
 (let ((?x78221 (+ (- (- (+ (+ ?x78215 ?x76818) ?x76831) ?x76863) ?x76865) (* (* 2.0 l_0_20_58) l_0_20_60))))
 (let ((?x78225 (- (+ ?x78221 (* (* 2.0 l_0_20_59) l_0_20_61)) (* (* 2.0 l_0_20_86) l_0_20_88))))
 (= (- ?x78225 (* (* 2.0 l_0_20_87) l_0_20_89)) 0.0)))))))))))))
(assert
 (let ((?x76918 (* l_0_20_6 l_0_20_6)))
 (let ((?x76916 (* l_0_20_5 l_0_20_5)))
 (let ((?x76914 (* l_0_20_4 l_0_20_4)))
 (let ((?x76912 (* l_0_20_34 l_0_20_34)))
 (let ((?x59837 (- (- (* (- l_0_20_32) l_0_20_32) (* l_0_20_33 l_0_20_33)) ?x76912)))
 (= (+ (+ (+ ?x59837 ?x76914) ?x76916) ?x76918) 0.0)))))))
(assert
 (let ((?x76944 (* (* 2.0 l_0_20_6) l_0_20_9)))
 (let ((?x76941 (* (* 2.0 l_0_20_5) l_0_20_8)))
 (let ((?x76938 (* (* 2.0 l_0_20_4) l_0_20_7)))
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76935 (* ?x76934 l_0_20_37)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76932 (* ?x76931 l_0_20_36)))
 (let ((?x59851 (+ (+ (- (- (* (* (- 2.0) l_0_20_32) l_0_20_35) ?x76932) ?x76935) ?x76938) ?x76941)))
 (= (+ ?x59851 ?x76944) 0.0))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76967 (* ?x76934 l_0_20_41)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76965 (* ?x76931 l_0_20_40)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x76963 (* ?x76929 l_0_20_39)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x76961 (* ?x76960 l_0_20_6)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x58455 (* ?x76132 l_0_20_5)))
 (let ((?x58507 (+ (+ (* (* 2.0 l_0_20_11) l_0_20_4) ?x58455) ?x76961)))
 (= (- (- (- ?x58507 ?x76963) ?x76965) ?x76967) 0.0)))))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76990 (* ?x76934 l_0_20_46)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76987 (* ?x76931 l_0_20_45)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x76984 (* ?x76929 l_0_20_44)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x76981 (* ?x76980 l_0_20_6)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x58514 (* ?x76627 l_0_20_5)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x58513 (* ?x76624 l_0_20_4)))
 (= (- (- (- (+ (+ ?x58513 ?x58514) ?x76981) ?x76984) ?x76987) ?x76990) 0.0))))))))))))))
(assert
 (let ((?x78270 (* l_0_20_90 l_0_20_90)))
 (let ((?x78268 (* l_0_20_89 l_0_20_89)))
 (let ((?x78266 (* l_0_20_88 l_0_20_88)))
 (let ((?x78264 (* l_0_20_62 l_0_20_62)))
 (let ((?x78262 (* l_0_20_61 l_0_20_61)))
 (let ((?x78260 (* l_0_20_60 l_0_20_60)))
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x77045 (* ?x76934 l_0_20_52)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x77043 (* ?x76931 l_0_20_51)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x77041 (* ?x76929 l_0_20_50)))
 (let ((?x77038 (* 2.0 l_0_20_24)))
 (let ((?x77039 (* ?x77038 l_0_20_6)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x77036 (* ?x76830 l_0_20_5)))
 (let ((?x77033 (* 2.0 l_0_20_22)))
 (let ((?x77034 (* ?x77033 l_0_20_4)))
 (let ((?x59940 (- (- (- (+ (+ ?x77034 ?x77036) ?x77039) ?x77041) ?x77043) ?x77045)))
 (= (- (- (- (+ (+ (+ ?x59940 ?x78260) ?x78262) ?x78264) ?x78266) ?x78268) ?x78270) 0.0)))))))))))))))))))))
(assert
 (let ((?x77079 (* l_0_20_9 l_0_20_9)))
 (let ((?x77077 (* l_0_20_8 l_0_20_8)))
 (let ((?x77075 (* l_0_20_7 l_0_20_7)))
 (let ((?x77073 (* l_0_20_38 l_0_20_38)))
 (let ((?x58670 (* l_0_20_37 l_0_20_37)))
 (let ((?x39880 (* l_0_20_36 l_0_20_36)))
 (let ((?x41101 (- (- (- (* l_0_20_10 l_0_20_10) (* l_0_20_35 l_0_20_35)) ?x39880) ?x58670)))
 (= (+ (+ (+ (- ?x41101 ?x77073) ?x77075) ?x77077) ?x77079) 0.0)))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77111 (* ?x77110 l_0_20_42)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77108 (* ?x77107 l_0_20_41)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77105 (* ?x77104 l_0_20_40)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77102 (* ?x77101 l_0_20_39)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77099 (* ?x76960 l_0_20_9)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x77097 (* ?x76132 l_0_20_8)))
 (let ((?x76125 (* 2.0 l_0_20_11)))
 (let ((?x77095 (* ?x76125 l_0_20_7)))
 (let ((?x77125 (* 2.0 l_0_20_10)))
 (let ((?x77127 (* ?x77125 l_0_20_14)))
 (let ((?x59922 (- (- (- (- (+ (+ (+ ?x77127 ?x77095) ?x77097) ?x77099) ?x77102) ?x77105) ?x77108) ?x77111)))
 (= ?x59922 0.0)))))))))))))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77158 (* ?x77110 l_0_20_47)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77155 (* ?x77107 l_0_20_46)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77152 (* ?x77104 l_0_20_45)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77149 (* ?x77101 l_0_20_44)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x77146 (* ?x76980 l_0_20_9)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x77144 (* ?x76627 l_0_20_8)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x77142 (* ?x76624 l_0_20_7)))
 (let ((?x77125 (* 2.0 l_0_20_10)))
 (let ((?x77129 (* ?x77125 l_0_20_19)))
 (let ((?x78071 (- (- (- (- (+ (+ (+ ?x77129 ?x77142) ?x77144) ?x77146) ?x77149) ?x77152) ?x77155) ?x77158)))
 (= ?x78071 0.0)))))))))))))))))))
(assert
 (let ((?x77276 (* l_0_20_43 l_0_20_43)))
 (let ((?x77274 (* l_0_20_42 l_0_20_42)))
 (let ((?x77272 (* l_0_20_41 l_0_20_41)))
 (let ((?x77270 (* l_0_20_40 l_0_20_40)))
 (let ((?x77268 (* l_0_20_39 l_0_20_39)))
 (let ((?x77266 (* l_0_20_15 l_0_20_15)))
 (let ((?x77264 (* l_0_20_14 l_0_20_14)))
 (let ((?x77251 (* l_0_20_13 l_0_20_13)))
 (let ((?x41328 (+ (+ (+ (* l_0_20_11 l_0_20_11) (* l_0_20_12 l_0_20_12)) ?x77251) ?x77264)))
 (= (- (- (- (- (- (+ ?x41328 ?x77266) ?x77268) ?x77270) ?x77272) ?x77274) ?x77276) 0.0)))))))))))
(assert
 (let ((?x77323 (* 2.0 l_0_20_43)))
 (let ((?x77324 (* ?x77323 l_0_20_48)))
 (let ((?x77319 (* 2.0 l_0_20_42)))
 (let ((?x77320 (* ?x77319 l_0_20_47)))
 (let ((?x77315 (* 2.0 l_0_20_41)))
 (let ((?x77316 (* ?x77315 l_0_20_46)))
 (let ((?x77311 (* 2.0 l_0_20_40)))
 (let ((?x77312 (* ?x77311 l_0_20_45)))
 (let ((?x77307 (* 2.0 l_0_20_39)))
 (let ((?x77308 (* ?x77307 l_0_20_44)))
 (let ((?x77303 (* 2.0 l_0_20_15)))
 (let ((?x77304 (* ?x77303 l_0_20_20)))
 (let ((?x77299 (* 2.0 l_0_20_14)))
 (let ((?x77300 (* ?x77299 l_0_20_19)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77296 (* ?x76960 l_0_20_18)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x77293 (* ?x76132 l_0_20_17)))
 (let ((?x77415 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_16) ?x77293) ?x77296) ?x77300) ?x77304)))
 (= (- (- (- (- (- ?x77415 ?x77308) ?x77312) ?x77316) ?x77320) ?x77324) 0.0)))))))))))))))))))))
(assert
 (let ((?x77323 (* 2.0 l_0_20_43)))
 (let ((?x77389 (* ?x77323 l_0_20_54)))
 (let ((?x77319 (* 2.0 l_0_20_42)))
 (let ((?x77387 (* ?x77319 l_0_20_53)))
 (let ((?x77315 (* 2.0 l_0_20_41)))
 (let ((?x77385 (* ?x77315 l_0_20_52)))
 (let ((?x77311 (* 2.0 l_0_20_40)))
 (let ((?x77383 (* ?x77311 l_0_20_51)))
 (let ((?x77307 (* 2.0 l_0_20_39)))
 (let ((?x77381 (* ?x77307 l_0_20_50)))
 (let ((?x77303 (* 2.0 l_0_20_15)))
 (let ((?x77359 (* ?x77303 l_0_20_26)))
 (let ((?x77299 (* 2.0 l_0_20_14)))
 (let ((?x77357 (* ?x77299 l_0_20_25)))
 (let ((?x76960 (* 2.0 l_0_20_13)))
 (let ((?x77355 (* ?x76960 l_0_20_24)))
 (let ((?x76132 (* 2.0 l_0_20_12)))
 (let ((?x58815 (* ?x76132 l_0_20_23)))
 (let ((?x77459 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_22) ?x58815) ?x77355) ?x77357) ?x77359)))
 (let ((?x78107 (- (- (- (- (- ?x77459 ?x77381) ?x77383) ?x77385) ?x77387) ?x77389)))
 (let ((?x78291 (+ (+ ?x78107 (* (* 2.0 l_0_20_60) l_0_20_67)) (* (* 2.0 l_0_20_61) l_0_20_68))))
 (let ((?x78295 (- (+ ?x78291 (* (* 2.0 l_0_20_62) l_0_20_69)) (* (* 2.0 l_0_20_88) l_0_20_95))))
 (let ((?x78299 (- (- ?x78295 (* (* 2.0 l_0_20_89) l_0_20_96)) (* (* 2.0 l_0_20_90) l_0_20_97))))
 (= ?x78299 0.0)))))))))))))))))))))))))
(assert
 (let ((?x77443 (* l_0_20_49 l_0_20_49)))
 (let ((?x77441 (* l_0_20_48 l_0_20_48)))
 (let ((?x77439 (* l_0_20_47 l_0_20_47)))
 (let ((?x77437 (* l_0_20_46 l_0_20_46)))
 (let ((?x77435 (* l_0_20_45 l_0_20_45)))
 (let ((?x77433 (* l_0_20_44 l_0_20_44)))
 (let ((?x77426 (* l_0_20_21 l_0_20_21)))
 (let ((?x77424 (* l_0_20_20 l_0_20_20)))
 (let ((?x77422 (* l_0_20_19 l_0_20_19)))
 (let ((?x77420 (* l_0_20_18 l_0_20_18)))
 (let ((?x78124 (+ (+ (+ (* l_0_20_16 l_0_20_16) (* l_0_20_17 l_0_20_17)) ?x77420) ?x77422)))
 (let ((?x78131 (- (- (- (- (- (+ (+ ?x78124 ?x77424) ?x77426) ?x77433) ?x77435) ?x77437) ?x77439) ?x77441)))
 (= (- ?x78131 ?x77443) 0.0))))))))))))))
(assert
 (let ((?x77526 (* (* 2.0 l_0_20_49) l_0_20_55)))
 (let ((?x77523 (* (* 2.0 l_0_20_48) l_0_20_54)))
 (let ((?x77520 (* (* 2.0 l_0_20_47) l_0_20_53)))
 (let ((?x77517 (* (* 2.0 l_0_20_46) l_0_20_52)))
 (let ((?x77514 (* (* 2.0 l_0_20_45) l_0_20_51)))
 (let ((?x77511 (* (* 2.0 l_0_20_44) l_0_20_50)))
 (let ((?x77503 (* (* 2.0 l_0_20_21) l_0_20_27)))
 (let ((?x77500 (* (* 2.0 l_0_20_20) l_0_20_26)))
 (let ((?x77497 (* (* 2.0 l_0_20_19) l_0_20_25)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x77482 (* ?x76980 l_0_20_24)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x77477 (* ?x76627 l_0_20_23)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x77475 (* ?x76624 l_0_20_22)))
 (let ((?x78334 (- (* (* (- 2.0) l_0_20_100) l_0_20_88) (* (* 2.0 l_0_20_101) l_0_20_89))))
 (let ((?x78339 (+ (+ (+ (- ?x78334 (* (* 2.0 l_0_20_102) l_0_20_90)) ?x77475) ?x77477) ?x77482)))
 (let ((?x78346 (- (- (- (- (+ (+ (+ ?x78339 ?x77497) ?x77500) ?x77503) ?x77511) ?x77514) ?x77517) ?x77520)))
 (let ((?x78352 (+ (+ (- (- ?x78346 ?x77523) ?x77526) (* (* 2.0 l_0_20_60) l_0_20_72)) (* (* 2.0 l_0_20_61) l_0_20_73))))
 (= (+ ?x78352 (* (* 2.0 l_0_20_62) l_0_20_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x77617 (* l_0_20_56 l_0_20_56)))
 (let ((?x77615 (* l_0_20_55 l_0_20_55)))
 (let ((?x77613 (* l_0_20_54 l_0_20_54)))
 (let ((?x77611 (* l_0_20_53 l_0_20_53)))
 (let ((?x77609 (* l_0_20_52 l_0_20_52)))
 (let ((?x77607 (* l_0_20_51 l_0_20_51)))
 (let ((?x77605 (* l_0_20_50 l_0_20_50)))
 (let ((?x77603 (* l_0_20_28 l_0_20_28)))
 (let ((?x77601 (* l_0_20_27 l_0_20_27)))
 (let ((?x77599 (* l_0_20_26 l_0_20_26)))
 (let ((?x77597 (* l_0_20_25 l_0_20_25)))
 (let ((?x77595 (* l_0_20_24 l_0_20_24)))
 (let ((?x77593 (* l_0_20_23 l_0_20_23)))
 (let ((?x77591 (* l_0_20_22 l_0_20_22)))
 (let ((?x78394 (- (* (* (- 2.0) l_0_20_106) l_0_20_88) (* (* 2.0 l_0_20_107) l_0_20_89))))
 (let ((?x78399 (+ (+ (+ (- ?x78394 (* (* 2.0 l_0_20_108) l_0_20_90)) ?x77591) ?x77593) ?x77595)))
 (let ((?x78406 (- (- (- (+ (+ (+ (+ ?x78399 ?x77597) ?x77599) ?x77601) ?x77603) ?x77605) ?x77607) ?x77609)))
 (let ((?x78412 (+ (- (- (- (- ?x78406 ?x77611) ?x77613) ?x77615) ?x77617) (* (* 2.0 l_0_20_60) l_0_20_78))))
 (let ((?x78416 (+ (+ ?x78412 (* (* 2.0 l_0_20_61) l_0_20_79)) (* (* 2.0 l_0_20_62) l_0_20_80))))
 (= ?x78416 0.0)))))))))))))))))))))
(assert
 (let ((?x76084 (* l_0_20_29 l_0_20_29)))
 (let ((?x38548 (* l_0_20_1 l_0_20_1)))
 (let ((?x59169 (- ?x38548 ?x76084)))
 (= ?x59169 0.0)))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76104 (* ?x76103 l_0_20_30)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x59201 (* ?x76173 l_0_20_2)))
 (let ((?x78458 (- (- ?x59201 (* (* 2.0 l_0_20_113) l_0_20_128)) (* (* 2.0 l_0_20_197) l_0_20_212))))
 (let ((?x78462 (- (- ?x78458 (* (* 2.0 l_0_20_225) l_0_20_240)) (* (* 2.0 l_0_20_253) l_0_20_268))))
 (= (- (- ?x78462 (* (* 2.0 l_0_20_281) l_0_20_296)) ?x76104) 0.0))))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x38635 (* ?x76103 l_0_20_35)))
 (let ((?x15460 (- (* (* 2.0 l_0_20_1) l_0_20_7) ?x38635)))
 (= ?x15460 0.0)))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76183 (* ?x76103 l_0_20_44)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x76176 (* ?x76173 l_0_20_16)))
 (= (- ?x76176 ?x76183) 0.0))))))
(assert
 (let ((?x76103 (* 2.0 l_0_20_29)))
 (let ((?x76201 (* ?x76103 l_0_20_50)))
 (let ((?x76173 (* 2.0 l_0_20_1)))
 (let ((?x59446 (* ?x76173 l_0_20_22)))
 (let ((?x78504 (- (- ?x59446 (* (* 2.0 l_0_20_100) l_0_20_86)) (* (* 2.0 l_0_20_101) l_0_20_87))))
 (let ((?x78508 (- (+ ?x78504 (* (* 2.0 l_0_20_141) l_0_20_156)) (* (* 2.0 l_0_20_169) l_0_20_184))))
 (let ((?x78513 (+ (+ (- ?x78508 ?x76201) (* (* 2.0 l_0_20_58) l_0_20_72)) (* (* 2.0 l_0_20_59) l_0_20_73))))
 (= ?x78513 0.0)))))))))
(assert
 (let ((?x76267 (* l_0_20_31 l_0_20_31)))
 (let ((?x76265 (* l_0_20_30 l_0_20_30)))
 (let ((?x76263 (* l_0_20_3 l_0_20_3)))
 (let ((?x76249 (* l_0_20_2 l_0_20_2)))
 (let ((?x78542 (- (* (* (- 2.0) l_0_20_114) l_0_20_128) (* (* 2.0 l_0_20_115) l_0_20_129))))
 (let ((?x78551 (- (- ?x78542 (* (* 2.0 l_0_20_198) l_0_20_212)) (* (* 2.0 l_0_20_199) l_0_20_213))))
 (let ((?x78556 (- (- (+ ?x78551 ?x76249) (* (* 2.0 l_0_20_226) l_0_20_240)) (* (* 2.0 l_0_20_227) l_0_20_241))))
 (let ((?x78560 (- (- ?x78556 (* (* 2.0 l_0_20_254) l_0_20_268)) (* (* 2.0 l_0_20_255) l_0_20_269))))
 (let ((?x78564 (- (- ?x78560 (* (* 2.0 l_0_20_282) l_0_20_296)) (* (* 2.0 l_0_20_283) l_0_20_297))))
 (= (- (- (+ ?x78564 ?x76263) ?x76265) ?x76267) 0.0)))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76326 (* ?x76140 l_0_20_33)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76324 (* ?x76137 l_0_20_32)))
 (let ((?x76321 (* 2.0 l_0_20_3)))
 (let ((?x76322 (* ?x76321 l_0_20_5)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76283 (* ?x76282 l_0_20_4)))
 (let ((?x78634 (- (* (* (- 2.0) l_0_20_116) l_0_20_128) (* (* 2.0 l_0_20_117) l_0_20_129))))
 (let ((?x78639 (- (+ (- ?x78634 (* (* 2.0 l_0_20_118) l_0_20_130)) ?x76283) (* (* 2.0 l_0_20_200) l_0_20_212))))
 (let ((?x78643 (- (- ?x78639 (* (* 2.0 l_0_20_201) l_0_20_213)) (* (* 2.0 l_0_20_202) l_0_20_214))))
 (let ((?x78647 (- (- ?x78643 (* (* 2.0 l_0_20_228) l_0_20_240)) (* (* 2.0 l_0_20_229) l_0_20_241))))
 (let ((?x78651 (- (- ?x78647 (* (* 2.0 l_0_20_230) l_0_20_242)) (* (* 2.0 l_0_20_256) l_0_20_268))))
 (let ((?x78655 (- (- ?x78651 (* (* 2.0 l_0_20_257) l_0_20_269)) (* (* 2.0 l_0_20_258) l_0_20_270))))
 (let ((?x78659 (- (- ?x78655 (* (* 2.0 l_0_20_284) l_0_20_296)) (* (* 2.0 l_0_20_285) l_0_20_297))))
 (let ((?x78664 (- (- (+ (- ?x78659 (* (* 2.0 l_0_20_286) l_0_20_298)) ?x76322) ?x76324) ?x76326)))
 (= ?x78664 0.0))))))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76423 (* ?x76140 l_0_20_36)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76421 (* ?x76137 l_0_20_35)))
 (let ((?x76321 (* 2.0 l_0_20_3)))
 (let ((?x76419 (* ?x76321 l_0_20_8)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76369 (* ?x76282 l_0_20_7)))
 (let ((?x78708 (- (* (* (- 2.0) l_0_20_119) l_0_20_128) (* (* 2.0 l_0_20_120) l_0_20_129))))
 (let ((?x78712 (- (- ?x78708 (* (* 2.0 l_0_20_121) l_0_20_130)) (* (* 2.0 l_0_20_122) l_0_20_131))))
 (let ((?x78717 (- (- (+ ?x78712 ?x76369) (* (* 2.0 l_0_20_203) l_0_20_212)) (* (* 2.0 l_0_20_204) l_0_20_213))))
 (let ((?x78721 (- (- ?x78717 (* (* 2.0 l_0_20_205) l_0_20_214)) (* (* 2.0 l_0_20_206) l_0_20_215))))
 (let ((?x78725 (- (- ?x78721 (* (* 2.0 l_0_20_231) l_0_20_240)) (* (* 2.0 l_0_20_232) l_0_20_241))))
 (let ((?x78729 (- (- ?x78725 (* (* 2.0 l_0_20_233) l_0_20_242)) (* (* 2.0 l_0_20_234) l_0_20_243))))
 (let ((?x78733 (- (- ?x78729 (* (* 2.0 l_0_20_259) l_0_20_268)) (* (* 2.0 l_0_20_260) l_0_20_269))))
 (let ((?x78737 (- (- ?x78733 (* (* 2.0 l_0_20_261) l_0_20_270)) (* (* 2.0 l_0_20_262) l_0_20_271))))
 (let ((?x78741 (- (- ?x78737 (* (* 2.0 l_0_20_287) l_0_20_296)) (* (* 2.0 l_0_20_288) l_0_20_297))))
 (let ((?x78745 (- (- ?x78741 (* (* 2.0 l_0_20_289) l_0_20_298)) (* (* 2.0 l_0_20_290) l_0_20_299))))
 (= (- (- (+ ?x78745 ?x76419) ?x76421) ?x76423) 0.0))))))))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76694 (* ?x76140 l_0_20_45)))
 (let ((?x78886 (* l_0_20_301 l_0_20_301)))
 (let ((?x78884 (* l_0_20_300 l_0_20_300)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76691 (* ?x76137 l_0_20_44)))
 (let ((?x78881 (* l_0_20_299 l_0_20_299)))
 (let ((?x78879 (* l_0_20_298 l_0_20_298)))
 (let ((?x78877 (* l_0_20_297 l_0_20_297)))
 (let ((?x78875 (* l_0_20_296 l_0_20_296)))
 (let ((?x78873 (* l_0_20_273 l_0_20_273)))
 (let ((?x78871 (* l_0_20_272 l_0_20_272)))
 (let ((?x78869 (* l_0_20_271 l_0_20_271)))
 (let ((?x78867 (* l_0_20_270 l_0_20_270)))
 (let ((?x78865 (* l_0_20_269 l_0_20_269)))
 (let ((?x78863 (* l_0_20_268 l_0_20_268)))
 (let ((?x78861 (* l_0_20_245 l_0_20_245)))
 (let ((?x78859 (* l_0_20_244 l_0_20_244)))
 (let ((?x78857 (* l_0_20_243 l_0_20_243)))
 (let ((?x78855 (* l_0_20_242 l_0_20_242)))
 (let ((?x78853 (* l_0_20_241 l_0_20_241)))
 (let ((?x78851 (* l_0_20_240 l_0_20_240)))
 (let ((?x78849 (* l_0_20_217 l_0_20_217)))
 (let ((?x78847 (* l_0_20_216 l_0_20_216)))
 (let ((?x78845 (* l_0_20_215 l_0_20_215)))
 (let ((?x78843 (* l_0_20_214 l_0_20_214)))
 (let ((?x78841 (* l_0_20_213 l_0_20_213)))
 (let ((?x78839 (* l_0_20_212 l_0_20_212)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x76628 (* ?x76627 l_0_20_3)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x76625 (* ?x76624 l_0_20_2)))
 (let ((?x78824 (- (* (* (- 1.0) l_0_20_128) l_0_20_128) (* (* 1.0 l_0_20_129) l_0_20_129))))
 (let ((?x78830 (- (- ?x78824 (* (* 1.0 l_0_20_130) l_0_20_130)) (* (* 1.0 l_0_20_131) l_0_20_131))))
 (let ((?x78836 (- (- ?x78830 (* (* 1.0 l_0_20_132) l_0_20_132)) (* (* 1.0 l_0_20_133) l_0_20_133))))
 (let ((?x78848 (- (- (- (- (- (+ (+ ?x78836 ?x76625) ?x76628) ?x78839) ?x78841) ?x78843) ?x78845) ?x78847)))
 (let ((?x78862 (- (- (- (- (- (- (- ?x78848 ?x78849) ?x78851) ?x78853) ?x78855) ?x78857) ?x78859) ?x78861)))
 (let ((?x78876 (- (- (- (- (- (- (- ?x78862 ?x78863) ?x78865) ?x78867) ?x78869) ?x78871) ?x78873) ?x78875)))
 (let ((?x78888 (- (- (- (- (- (- (- ?x78876 ?x78877) ?x78879) ?x78881) ?x76691) ?x78884) ?x78886) ?x76694)))
 (= ?x78888 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76140 (* 2.0 l_0_20_31)))
 (let ((?x76865 (* ?x76140 l_0_20_51)))
 (let ((?x76137 (* 2.0 l_0_20_30)))
 (let ((?x76863 (* ?x76137 l_0_20_50)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x76831 (* ?x76830 l_0_20_3)))
 (let ((?x76282 (* 2.0 l_0_20_2)))
 (let ((?x76818 (* ?x76282 l_0_20_22)))
 (let ((?x78935 (- (* (* (- 2.0) l_0_20_128) l_0_20_134) (* (* 2.0 l_0_20_129) l_0_20_135))))
 (let ((?x78941 (- (- ?x78935 (* (* 2.0 l_0_20_130) l_0_20_136)) (* (* 2.0 l_0_20_131) l_0_20_137))))
 (let ((?x78947 (- (- ?x78941 (* (* 2.0 l_0_20_132) l_0_20_138)) (* (* 2.0 l_0_20_133) l_0_20_139))))
 (let ((?x78951 (+ (+ ?x78947 (* (* 2.0 l_0_20_142) l_0_20_156)) (* (* 2.0 l_0_20_143) l_0_20_157))))
 (let ((?x78955 (- (- ?x78951 (* (* 2.0 l_0_20_170) l_0_20_184)) (* (* 2.0 l_0_20_171) l_0_20_185))))
 (let ((?x78962 (- (- (+ ?x78955 ?x76818) (* (* 2.0 l_0_20_212) l_0_20_218)) (* (* 2.0 l_0_20_213) l_0_20_219))))
 (let ((?x78968 (- (- ?x78962 (* (* 2.0 l_0_20_214) l_0_20_220)) (* (* 2.0 l_0_20_215) l_0_20_221))))
 (let ((?x78974 (- (- ?x78968 (* (* 2.0 l_0_20_216) l_0_20_222)) (* (* 2.0 l_0_20_217) l_0_20_223))))
 (let ((?x78981 (- (- (+ ?x78974 ?x76831) (* (* 2.0 l_0_20_240) l_0_20_246)) (* (* 2.0 l_0_20_241) l_0_20_247))))
 (let ((?x78987 (- (- ?x78981 (* (* 2.0 l_0_20_242) l_0_20_248)) (* (* 2.0 l_0_20_243) l_0_20_249))))
 (let ((?x78993 (- (- ?x78987 (* (* 2.0 l_0_20_244) l_0_20_250)) (* (* 2.0 l_0_20_245) l_0_20_251))))
 (let ((?x78999 (- (- ?x78993 (* (* 2.0 l_0_20_268) l_0_20_274)) (* (* 2.0 l_0_20_269) l_0_20_275))))
 (let ((?x79005 (- (- ?x78999 (* (* 2.0 l_0_20_270) l_0_20_276)) (* (* 2.0 l_0_20_271) l_0_20_277))))
 (let ((?x79011 (- (- ?x79005 (* (* 2.0 l_0_20_272) l_0_20_278)) (* (* 2.0 l_0_20_273) l_0_20_279))))
 (let ((?x79017 (- (- ?x79011 (* (* 2.0 l_0_20_296) l_0_20_302)) (* (* 2.0 l_0_20_297) l_0_20_303))))
 (let ((?x79023 (- (- ?x79017 (* (* 2.0 l_0_20_298) l_0_20_304)) (* (* 2.0 l_0_20_299) l_0_20_305))))
 (let ((?x79030 (- (- (- ?x79023 ?x76863) (* (* 2.0 l_0_20_300) l_0_20_306)) (* (* 2.0 l_0_20_301) l_0_20_307))))
 (= (- ?x79030 ?x76865) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x76918 (* l_0_20_6 l_0_20_6)))
 (let ((?x76916 (* l_0_20_5 l_0_20_5)))
 (let ((?x76914 (* l_0_20_4 l_0_20_4)))
 (let ((?x76912 (* l_0_20_34 l_0_20_34)))
 (let ((?x59837 (- (- (* (- l_0_20_32) l_0_20_32) (* l_0_20_33 l_0_20_33)) ?x76912)))
 (= (+ (+ (+ ?x59837 ?x76914) ?x76916) ?x76918) 0.0)))))))
(assert
 (let ((?x76944 (* (* 2.0 l_0_20_6) l_0_20_9)))
 (let ((?x76941 (* (* 2.0 l_0_20_5) l_0_20_8)))
 (let ((?x76938 (* (* 2.0 l_0_20_4) l_0_20_7)))
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76935 (* ?x76934 l_0_20_37)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76932 (* ?x76931 l_0_20_36)))
 (let ((?x59851 (+ (+ (- (- (* (* (- 2.0) l_0_20_32) l_0_20_35) ?x76932) ?x76935) ?x76938) ?x76941)))
 (= (+ ?x59851 ?x76944) 0.0))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x76990 (* ?x76934 l_0_20_46)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x76987 (* ?x76931 l_0_20_45)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x76984 (* ?x76929 l_0_20_44)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x76981 (* ?x76980 l_0_20_6)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x58514 (* ?x76627 l_0_20_5)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x58513 (* ?x76624 l_0_20_4)))
 (= (- (- (- (+ (+ ?x58513 ?x58514) ?x76981) ?x76984) ?x76987) ?x76990) 0.0))))))))))))))
(assert
 (let ((?x76934 (* 2.0 l_0_20_34)))
 (let ((?x77045 (* ?x76934 l_0_20_52)))
 (let ((?x76931 (* 2.0 l_0_20_33)))
 (let ((?x77043 (* ?x76931 l_0_20_51)))
 (let ((?x76929 (* 2.0 l_0_20_32)))
 (let ((?x77041 (* ?x76929 l_0_20_50)))
 (let ((?x77038 (* 2.0 l_0_20_24)))
 (let ((?x77039 (* ?x77038 l_0_20_6)))
 (let ((?x76830 (* 2.0 l_0_20_23)))
 (let ((?x77036 (* ?x76830 l_0_20_5)))
 (let ((?x77033 (* 2.0 l_0_20_22)))
 (let ((?x77034 (* ?x77033 l_0_20_4)))
 (let ((?x42066 (+ (* (* 2.0 l_0_20_144) l_0_20_156) (* (* 2.0 l_0_20_145) l_0_20_157))))
 (let ((?x18292 (- (+ ?x42066 (* (* 2.0 l_0_20_146) l_0_20_158)) (* (* 2.0 l_0_20_172) l_0_20_184))))
 (let ((?x60903 (- (- ?x18292 (* (* 2.0 l_0_20_173) l_0_20_185)) (* (* 2.0 l_0_20_174) l_0_20_186))))
 (= (- (- (- (+ (+ (+ ?x60903 ?x77034) ?x77036) ?x77039) ?x77041) ?x77043) ?x77045) 0.0)))))))))))))))))
(assert
 (let ((?x77079 (* l_0_20_9 l_0_20_9)))
 (let ((?x77077 (* l_0_20_8 l_0_20_8)))
 (let ((?x77075 (* l_0_20_7 l_0_20_7)))
 (let ((?x77073 (* l_0_20_38 l_0_20_38)))
 (let ((?x58670 (* l_0_20_37 l_0_20_37)))
 (let ((?x39880 (* l_0_20_36 l_0_20_36)))
 (let ((?x41101 (- (- (- (* l_0_20_10 l_0_20_10) (* l_0_20_35 l_0_20_35)) ?x39880) ?x58670)))
 (= (+ (+ (+ (- ?x41101 ?x77073) ?x77075) ?x77077) ?x77079) 0.0)))))))))
(assert
 (let ((?x77110 (* 2.0 l_0_20_38)))
 (let ((?x77158 (* ?x77110 l_0_20_47)))
 (let ((?x77107 (* 2.0 l_0_20_37)))
 (let ((?x77155 (* ?x77107 l_0_20_46)))
 (let ((?x77104 (* 2.0 l_0_20_36)))
 (let ((?x77152 (* ?x77104 l_0_20_45)))
 (let ((?x77101 (* 2.0 l_0_20_35)))
 (let ((?x77149 (* ?x77101 l_0_20_44)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x77146 (* ?x76980 l_0_20_9)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x77144 (* ?x76627 l_0_20_8)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x77142 (* ?x76624 l_0_20_7)))
 (let ((?x77125 (* 2.0 l_0_20_10)))
 (let ((?x77129 (* ?x77125 l_0_20_19)))
 (let ((?x78071 (- (- (- (- (+ (+ (+ ?x77129 ?x77142) ?x77144) ?x77146) ?x77149) ?x77152) ?x77155) ?x77158)))
 (= ?x78071 0.0)))))))))))))))))))
(assert
 (let ((?x77443 (* l_0_20_49 l_0_20_49)))
 (let ((?x77441 (* l_0_20_48 l_0_20_48)))
 (let ((?x77439 (* l_0_20_47 l_0_20_47)))
 (let ((?x77437 (* l_0_20_46 l_0_20_46)))
 (let ((?x77435 (* l_0_20_45 l_0_20_45)))
 (let ((?x77433 (* l_0_20_44 l_0_20_44)))
 (let ((?x77426 (* l_0_20_21 l_0_20_21)))
 (let ((?x77424 (* l_0_20_20 l_0_20_20)))
 (let ((?x77422 (* l_0_20_19 l_0_20_19)))
 (let ((?x77420 (* l_0_20_18 l_0_20_18)))
 (let ((?x78124 (+ (+ (+ (* l_0_20_16 l_0_20_16) (* l_0_20_17 l_0_20_17)) ?x77420) ?x77422)))
 (let ((?x78131 (- (- (- (- (- (+ (+ ?x78124 ?x77424) ?x77426) ?x77433) ?x77435) ?x77437) ?x77439) ?x77441)))
 (= (- ?x78131 ?x77443) 0.0))))))))))))))
(assert
 (let ((?x77526 (* (* 2.0 l_0_20_49) l_0_20_55)))
 (let ((?x77523 (* (* 2.0 l_0_20_48) l_0_20_54)))
 (let ((?x77520 (* (* 2.0 l_0_20_47) l_0_20_53)))
 (let ((?x77517 (* (* 2.0 l_0_20_46) l_0_20_52)))
 (let ((?x77514 (* (* 2.0 l_0_20_45) l_0_20_51)))
 (let ((?x77511 (* (* 2.0 l_0_20_44) l_0_20_50)))
 (let ((?x77503 (* (* 2.0 l_0_20_21) l_0_20_27)))
 (let ((?x77500 (* (* 2.0 l_0_20_20) l_0_20_26)))
 (let ((?x77497 (* (* 2.0 l_0_20_19) l_0_20_25)))
 (let ((?x79155 (* l_0_20_189 l_0_20_189)))
 (let ((?x79153 (* l_0_20_188 l_0_20_188)))
 (let ((?x79151 (* l_0_20_187 l_0_20_187)))
 (let ((?x79149 (* l_0_20_186 l_0_20_186)))
 (let ((?x79147 (* l_0_20_185 l_0_20_185)))
 (let ((?x79145 (* l_0_20_184 l_0_20_184)))
 (let ((?x76980 (* 2.0 l_0_20_18)))
 (let ((?x77482 (* ?x76980 l_0_20_24)))
 (let ((?x76627 (* 2.0 l_0_20_17)))
 (let ((?x77477 (* ?x76627 l_0_20_23)))
 (let ((?x79141 (* l_0_20_161 l_0_20_161)))
 (let ((?x79139 (* l_0_20_160 l_0_20_160)))
 (let ((?x76624 (* 2.0 l_0_20_16)))
 (let ((?x77475 (* ?x76624 l_0_20_22)))
 (let ((?x79136 (* l_0_20_159 l_0_20_159)))
 (let ((?x79134 (* l_0_20_158 l_0_20_158)))
 (let ((?x79135 (+ (+ (* l_0_20_156 l_0_20_156) (* l_0_20_157 l_0_20_157)) ?x79134)))
 (let ((?x79146 (- (+ (+ (+ (+ (+ (+ ?x79135 ?x79136) ?x77475) ?x79139) ?x79141) ?x77477) ?x77482) ?x79145)))
 (let ((?x79158 (+ (+ (- (- (- (- (- ?x79146 ?x79147) ?x79149) ?x79151) ?x79153) ?x79155) ?x77497) ?x77500)))
 (let ((?x79165 (- (- (- (- (- (- (+ ?x79158 ?x77503) ?x77511) ?x77514) ?x77517) ?x77520) ?x77523) ?x77526)))
 (= ?x79165 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x77617 (* l_0_20_56 l_0_20_56)))
 (let ((?x77615 (* l_0_20_55 l_0_20_55)))
 (let ((?x77613 (* l_0_20_54 l_0_20_54)))
 (let ((?x77611 (* l_0_20_53 l_0_20_53)))
 (let ((?x77609 (* l_0_20_52 l_0_20_52)))
 (let ((?x77607 (* l_0_20_51 l_0_20_51)))
 (let ((?x77605 (* l_0_20_50 l_0_20_50)))
 (let ((?x77603 (* l_0_20_28 l_0_20_28)))
 (let ((?x77601 (* l_0_20_27 l_0_20_27)))
 (let ((?x77599 (* l_0_20_26 l_0_20_26)))
 (let ((?x77597 (* l_0_20_25 l_0_20_25)))
 (let ((?x77595 (* l_0_20_24 l_0_20_24)))
 (let ((?x77593 (* l_0_20_23 l_0_20_23)))
 (let ((?x77591 (* l_0_20_22 l_0_20_22)))
 (let ((?x79190 (+ (* (* 2.0 l_0_20_156) l_0_20_162) (* (* 2.0 l_0_20_157) l_0_20_163))))
 (let ((?x79196 (+ (+ ?x79190 (* (* 2.0 l_0_20_158) l_0_20_164)) (* (* 2.0 l_0_20_159) l_0_20_165))))
 (let ((?x79202 (+ (+ ?x79196 (* (* 2.0 l_0_20_160) l_0_20_166)) (* (* 2.0 l_0_20_161) l_0_20_167))))
 (let ((?x79208 (- (- ?x79202 (* (* 2.0 l_0_20_184) l_0_20_190)) (* (* 2.0 l_0_20_185) l_0_20_191))))
 (let ((?x79214 (- (- ?x79208 (* (* 2.0 l_0_20_186) l_0_20_192)) (* (* 2.0 l_0_20_187) l_0_20_193))))
 (let ((?x79220 (- (- ?x79214 (* (* 2.0 l_0_20_188) l_0_20_194)) (* (* 2.0 l_0_20_189) l_0_20_195))))
 (let ((?x79227 (+ (+ (+ (+ (+ (+ (+ ?x79220 ?x77591) ?x77593) ?x77595) ?x77597) ?x77599) ?x77601) ?x77603)))
 (let ((?x79234 (- (- (- (- (- (- (- ?x79227 ?x77605) ?x77607) ?x77609) ?x77611) ?x77613) ?x77615) ?x77617)))
 (= ?x79234 0.0))))))))))))))))))))))))
(assert
 (= (- (* l_0_20_57 l_0_20_57) (* l_0_20_85 l_0_20_85)) 0.0))
(assert
 (let ((?x79283 (+ (- (* l_0_20_141 l_0_20_141) (* l_0_20_169 l_0_20_169)) (* (* 2.0 l_0_20_57) l_0_20_58))))
 (= (- ?x79283 (* (* 2.0 l_0_20_85) l_0_20_86)) 0.0)))
(assert
 (let ((?x79297 (- (* (* 2.0 l_0_20_57) l_0_20_67) (* (* 2.0 l_0_20_85) l_0_20_95))))
 (= ?x79297 0.0)))
(assert
 (let ((?x61107 (+ (* (* (- 2.0) l_0_20_100) l_0_20_85) (* (* 2.0 l_0_20_57) l_0_20_72))))
 (= ?x61107 0.0)))
(assert
 (let ((?x79312 (+ (* (* (- 2.0) l_0_20_106) l_0_20_85) (* (* 2.0 l_0_20_57) l_0_20_78))))
 (= ?x79312 0.0)))
(assert
 (let ((?x79322 (- (* (* (- 2.0) l_0_20_106) l_0_20_86) (* (* 2.0 l_0_20_107) l_0_20_87))))
 (let ((?x79330 (- (+ ?x79322 (* (* 2.0 l_0_20_141) l_0_20_162)) (* (* 2.0 l_0_20_169) l_0_20_190))))
 (let ((?x79334 (+ (+ ?x79330 (* (* 2.0 l_0_20_58) l_0_20_78)) (* (* 2.0 l_0_20_59) l_0_20_79))))
 (= ?x79334 0.0)))))
(assert
 (let ((?x79372 (* l_0_20_99 l_0_20_99)))
 (let ((?x79370 (* l_0_20_98 l_0_20_98)))
 (let ((?x79368 (* l_0_20_97 l_0_20_97)))
 (let ((?x79366 (* l_0_20_96 l_0_20_96)))
 (let ((?x79364 (* l_0_20_95 l_0_20_95)))
 (let ((?x79362 (* l_0_20_71 l_0_20_71)))
 (let ((?x79360 (* l_0_20_70 l_0_20_70)))
 (let ((?x79358 (* l_0_20_69 l_0_20_69)))
 (let ((?x79361 (+ (+ (+ (* l_0_20_67 l_0_20_67) (* l_0_20_68 l_0_20_68)) ?x79358) ?x79360)))
 (= (- (- (- (- (- (+ ?x79361 ?x79362) ?x79364) ?x79366) ?x79368) ?x79370) ?x79372) 0.0)))))))))))
(assert
 (let ((?x79386 (- (* (* (- 2.0) l_0_20_100) l_0_20_95) (* (* 2.0 l_0_20_101) l_0_20_96))))
 (let ((?x79390 (- (- ?x79386 (* (* 2.0 l_0_20_102) l_0_20_97)) (* (* 2.0 l_0_20_103) l_0_20_98))))
 (let ((?x79396 (+ (- ?x79390 (* (* 2.0 l_0_20_104) l_0_20_99)) (* (* 2.0 l_0_20_67) l_0_20_72))))
 (let ((?x79402 (+ (+ ?x79396 (* (* 2.0 l_0_20_68) l_0_20_73)) (* (* 2.0 l_0_20_69) l_0_20_74))))
 (let ((?x79408 (+ (+ ?x79402 (* (* 2.0 l_0_20_70) l_0_20_75)) (* (* 2.0 l_0_20_71) l_0_20_76))))
 (= ?x79408 0.0)))))))
(assert
 (let ((?x79425 (- (* (* (- 2.0) l_0_20_106) l_0_20_95) (* (* 2.0 l_0_20_107) l_0_20_96))))
 (let ((?x79439 (- (- ?x79425 (* (* 2.0 l_0_20_108) l_0_20_97)) (* (* 2.0 l_0_20_109) l_0_20_98))))
 (let ((?x79444 (+ (- ?x79439 (* (* 2.0 l_0_20_110) l_0_20_99)) (* (* 2.0 l_0_20_67) l_0_20_78))))
 (let ((?x79448 (+ (+ ?x79444 (* (* 2.0 l_0_20_68) l_0_20_79)) (* (* 2.0 l_0_20_69) l_0_20_80))))
 (let ((?x79452 (+ (+ ?x79448 (* (* 2.0 l_0_20_70) l_0_20_81)) (* (* 2.0 l_0_20_71) l_0_20_82))))
 (= ?x79452 0.0)))))))
(assert
 (let ((?x79496 (* l_0_20_77 l_0_20_77)))
 (let ((?x79494 (* l_0_20_76 l_0_20_76)))
 (let ((?x79492 (* l_0_20_75 l_0_20_75)))
 (let ((?x79490 (* l_0_20_74 l_0_20_74)))
 (let ((?x79488 (* l_0_20_73 l_0_20_73)))
 (let ((?x79486 (* l_0_20_72 l_0_20_72)))
 (let ((?x79484 (* l_0_20_105 l_0_20_105)))
 (let ((?x79482 (* l_0_20_104 l_0_20_104)))
 (let ((?x79480 (* l_0_20_103 l_0_20_103)))
 (let ((?x79469 (* l_0_20_102 l_0_20_102)))
 (let ((?x79471 (- (- (* (- l_0_20_100) l_0_20_100) (* l_0_20_101 l_0_20_101)) ?x79469)))
 (let ((?x79493 (+ (+ (+ (+ (- (- (- ?x79471 ?x79480) ?x79482) ?x79484) ?x79486) ?x79488) ?x79490) ?x79492)))
 (= (+ (+ ?x79493 ?x79494) ?x79496) 0.0))))))))))))))
(assert
 (let ((?x79521 (- (* (* (- 2.0) l_0_20_100) l_0_20_106) (* (* 2.0 l_0_20_101) l_0_20_107))))
 (let ((?x79525 (- (- ?x79521 (* (* 2.0 l_0_20_102) l_0_20_108)) (* (* 2.0 l_0_20_103) l_0_20_109))))
 (let ((?x79530 (- (- ?x79525 (* (* 2.0 l_0_20_104) l_0_20_110)) (* (* 2.0 l_0_20_105) l_0_20_111))))
 (let ((?x79536 (+ (+ ?x79530 (* (* 2.0 l_0_20_72) l_0_20_78)) (* (* 2.0 l_0_20_73) l_0_20_79))))
 (let ((?x79542 (+ (+ ?x79536 (* (* 2.0 l_0_20_74) l_0_20_80)) (* (* 2.0 l_0_20_75) l_0_20_81))))
 (let ((?x79548 (+ (+ ?x79542 (* (* 2.0 l_0_20_76) l_0_20_82)) (* (* 2.0 l_0_20_77) l_0_20_83))))
 (= ?x79548 0.0))))))))
(assert
 (let ((?x79611 (* l_0_20_84 l_0_20_84)))
 (let ((?x79609 (* l_0_20_83 l_0_20_83)))
 (let ((?x79607 (* l_0_20_82 l_0_20_82)))
 (let ((?x79605 (* l_0_20_81 l_0_20_81)))
 (let ((?x79603 (* l_0_20_80 l_0_20_80)))
 (let ((?x79601 (* l_0_20_79 l_0_20_79)))
 (let ((?x79599 (* l_0_20_78 l_0_20_78)))
 (let ((?x79597 (* l_0_20_112 l_0_20_112)))
 (let ((?x79595 (* l_0_20_111 l_0_20_111)))
 (let ((?x79593 (* l_0_20_110 l_0_20_110)))
 (let ((?x79582 (* l_0_20_109 l_0_20_109)))
 (let ((?x79579 (* l_0_20_108 l_0_20_108)))
 (let ((?x79581 (- (- (* (- l_0_20_106) l_0_20_106) (* l_0_20_107 l_0_20_107)) ?x79579)))
 (let ((?x79604 (+ (+ (+ (- (- (- (- ?x79581 ?x79582) ?x79593) ?x79595) ?x79597) ?x79599) ?x79601) ?x79603)))
 (= (+ (+ (+ (+ ?x79604 ?x79605) ?x79607) ?x79609) ?x79611) 0.0))))))))))))))))
(assert
 (let ((?x79646 (* l_0_20_281 l_0_20_281)))
 (let ((?x79644 (* l_0_20_253 l_0_20_253)))
 (let ((?x79642 (* l_0_20_225 l_0_20_225)))
 (let ((?x79640 (* l_0_20_197 l_0_20_197)))
 (let ((?x79647 (- (- (- (- (* (* (- 1.0) l_0_20_113) l_0_20_113) ?x79640) ?x79642) ?x79644) ?x79646)))
 (= ?x79647 0.0)))))))
(assert
 (let ((?x79661 (- (* (* (- 2.0) l_0_20_113) l_0_20_114) (* (* 2.0 l_0_20_197) l_0_20_198))))
 (let ((?x79665 (- (- ?x79661 (* (* 2.0 l_0_20_225) l_0_20_226)) (* (* 2.0 l_0_20_253) l_0_20_254))))
 (= (- ?x79665 (* (* 2.0 l_0_20_281) l_0_20_282)) 0.0))))
(assert
 (let ((?x79691 (- (* (* (- 2.0) l_0_20_113) l_0_20_119) (* (* 2.0 l_0_20_197) l_0_20_203))))
 (let ((?x79695 (- (- ?x79691 (* (* 2.0 l_0_20_225) l_0_20_231)) (* (* 2.0 l_0_20_253) l_0_20_259))))
 (= (- ?x79695 (* (* 2.0 l_0_20_281) l_0_20_287)) 0.0))))
(assert
 (let ((?x79721 (- (* (* (- 2.0) l_0_20_114) l_0_20_116) (* (* 2.0 l_0_20_115) l_0_20_117))))
 (let ((?x79725 (- (- ?x79721 (* (* 2.0 l_0_20_198) l_0_20_200)) (* (* 2.0 l_0_20_199) l_0_20_201))))
 (let ((?x79729 (- (- ?x79725 (* (* 2.0 l_0_20_226) l_0_20_228)) (* (* 2.0 l_0_20_227) l_0_20_229))))
 (let ((?x79733 (- (- ?x79729 (* (* 2.0 l_0_20_254) l_0_20_256)) (* (* 2.0 l_0_20_255) l_0_20_257))))
 (let ((?x79737 (- (- ?x79733 (* (* 2.0 l_0_20_282) l_0_20_284)) (* (* 2.0 l_0_20_283) l_0_20_285))))
 (= ?x79737 0.0)))))))
(assert
 (let ((?x79779 (- (* (* (- 2.0) l_0_20_114) l_0_20_119) (* (* 2.0 l_0_20_115) l_0_20_120))))
 (let ((?x79783 (- (- ?x79779 (* (* 2.0 l_0_20_198) l_0_20_203)) (* (* 2.0 l_0_20_199) l_0_20_204))))
 (let ((?x79787 (- (- ?x79783 (* (* 2.0 l_0_20_226) l_0_20_231)) (* (* 2.0 l_0_20_227) l_0_20_232))))
 (let ((?x79791 (- (- ?x79787 (* (* 2.0 l_0_20_254) l_0_20_259)) (* (* 2.0 l_0_20_255) l_0_20_260))))
 (let ((?x79795 (- (- ?x79791 (* (* 2.0 l_0_20_282) l_0_20_287)) (* (* 2.0 l_0_20_283) l_0_20_288))))
 (= ?x79795 0.0)))))))
(assert
 (let ((?x79826 (* l_0_20_286 l_0_20_286)))
 (let ((?x79824 (* l_0_20_285 l_0_20_285)))
 (let ((?x79822 (* l_0_20_284 l_0_20_284)))
 (let ((?x79820 (* l_0_20_258 l_0_20_258)))
 (let ((?x79818 (* l_0_20_257 l_0_20_257)))
 (let ((?x79816 (* l_0_20_256 l_0_20_256)))
 (let ((?x79814 (* l_0_20_230 l_0_20_230)))
 (let ((?x79812 (* l_0_20_229 l_0_20_229)))
 (let ((?x79810 (* l_0_20_228 l_0_20_228)))
 (let ((?x42603 (* l_0_20_202 l_0_20_202)))
 (let ((?x42611 (* l_0_20_201 l_0_20_201)))
 (let ((?x61191 (* l_0_20_200 l_0_20_200)))
 (let ((?x42546 (- (* (* (- 1.0) l_0_20_116) l_0_20_116) (* (* 1.0 l_0_20_117) l_0_20_117))))
 (let ((?x42564 (- (- (- (- ?x42546 (* (* 1.0 l_0_20_118) l_0_20_118)) ?x61191) ?x42611) ?x42603)))
 (let ((?x79823 (- (- (- (- (- (- (- ?x42564 ?x79810) ?x79812) ?x79814) ?x79816) ?x79818) ?x79820) ?x79822)))
 (= (- (- ?x79823 ?x79824) ?x79826) 0.0)))))))))))))))))
(assert
 (let ((?x79847 (- (* (* (- 2.0) l_0_20_116) l_0_20_119) (* (* 2.0 l_0_20_117) l_0_20_120))))
 (let ((?x79851 (- (- ?x79847 (* (* 2.0 l_0_20_118) l_0_20_121)) (* (* 2.0 l_0_20_200) l_0_20_203))))
 (let ((?x79855 (- (- ?x79851 (* (* 2.0 l_0_20_201) l_0_20_204)) (* (* 2.0 l_0_20_202) l_0_20_205))))
 (let ((?x79859 (- (- ?x79855 (* (* 2.0 l_0_20_228) l_0_20_231)) (* (* 2.0 l_0_20_229) l_0_20_232))))
 (let ((?x79863 (- (- ?x79859 (* (* 2.0 l_0_20_230) l_0_20_233)) (* (* 2.0 l_0_20_256) l_0_20_259))))
 (let ((?x79867 (- (- ?x79863 (* (* 2.0 l_0_20_257) l_0_20_260)) (* (* 2.0 l_0_20_258) l_0_20_261))))
 (let ((?x79871 (- (- ?x79867 (* (* 2.0 l_0_20_284) l_0_20_287)) (* (* 2.0 l_0_20_285) l_0_20_288))))
 (= (- ?x79871 (* (* 2.0 l_0_20_286) l_0_20_289)) 0.0)))))))))
(assert
 (let ((?x79926 (- (* (* (- 2.0) l_0_20_116) l_0_20_134) (* (* 2.0 l_0_20_117) l_0_20_135))))
 (let ((?x79930 (+ (- ?x79926 (* (* 2.0 l_0_20_118) l_0_20_136)) (* (* 2.0 l_0_20_142) l_0_20_144))))
 (let ((?x79934 (- (+ ?x79930 (* (* 2.0 l_0_20_143) l_0_20_145)) (* (* 2.0 l_0_20_170) l_0_20_172))))
 (let ((?x79938 (- (- ?x79934 (* (* 2.0 l_0_20_171) l_0_20_173)) (* (* 2.0 l_0_20_200) l_0_20_218))))
 (let ((?x79942 (- (- ?x79938 (* (* 2.0 l_0_20_201) l_0_20_219)) (* (* 2.0 l_0_20_202) l_0_20_220))))
 (let ((?x79946 (- (- ?x79942 (* (* 2.0 l_0_20_228) l_0_20_246)) (* (* 2.0 l_0_20_229) l_0_20_247))))
 (let ((?x79950 (- (- ?x79946 (* (* 2.0 l_0_20_230) l_0_20_248)) (* (* 2.0 l_0_20_256) l_0_20_274))))
 (let ((?x79954 (- (- ?x79950 (* (* 2.0 l_0_20_257) l_0_20_275)) (* (* 2.0 l_0_20_258) l_0_20_276))))
 (let ((?x79958 (- (- ?x79954 (* (* 2.0 l_0_20_284) l_0_20_302)) (* (* 2.0 l_0_20_285) l_0_20_303))))
 (= (- ?x79958 (* (* 2.0 l_0_20_286) l_0_20_304)) 0.0)))))))))))
(assert
 (let ((?x80027 (* l_0_20_290 l_0_20_290)))
 (let ((?x80025 (* l_0_20_289 l_0_20_289)))
 (let ((?x80023 (* l_0_20_288 l_0_20_288)))
 (let ((?x80021 (* l_0_20_287 l_0_20_287)))
 (let ((?x80019 (* l_0_20_262 l_0_20_262)))
 (let ((?x80017 (* l_0_20_261 l_0_20_261)))
 (let ((?x80015 (* l_0_20_260 l_0_20_260)))
 (let ((?x80013 (* l_0_20_259 l_0_20_259)))
 (let ((?x80011 (* l_0_20_234 l_0_20_234)))
 (let ((?x80009 (* l_0_20_233 l_0_20_233)))
 (let ((?x80007 (* l_0_20_232 l_0_20_232)))
 (let ((?x80005 (* l_0_20_231 l_0_20_231)))
 (let ((?x80003 (* l_0_20_206 l_0_20_206)))
 (let ((?x80001 (* l_0_20_205 l_0_20_205)))
 (let ((?x79999 (* l_0_20_204 l_0_20_204)))
 (let ((?x79997 (* l_0_20_203 l_0_20_203)))
 (let ((?x79990 (- (* (* (- 1.0) l_0_20_119) l_0_20_119) (* (* 1.0 l_0_20_120) l_0_20_120))))
 (let ((?x79996 (- (- ?x79990 (* (* 1.0 l_0_20_121) l_0_20_121)) (* (* 1.0 l_0_20_122) l_0_20_122))))
 (let ((?x80010 (- (- (- (- (- (- (- ?x79996 ?x79997) ?x79999) ?x80001) ?x80003) ?x80005) ?x80007) ?x80009)))
 (let ((?x80024 (- (- (- (- (- (- (- ?x80010 ?x80011) ?x80013) ?x80015) ?x80017) ?x80019) ?x80021) ?x80023)))
 (= (- (- ?x80024 ?x80025) ?x80027) 0.0))))))))))))))))))))))
(assert
 (let ((?x80149 (* l_0_20_308 l_0_20_308)))
 (let ((?x80147 (* l_0_20_307 l_0_20_307)))
 (let ((?x80145 (* l_0_20_306 l_0_20_306)))
 (let ((?x80143 (* l_0_20_305 l_0_20_305)))
 (let ((?x80141 (* l_0_20_304 l_0_20_304)))
 (let ((?x80139 (* l_0_20_303 l_0_20_303)))
 (let ((?x80137 (* l_0_20_302 l_0_20_302)))
 (let ((?x80135 (* l_0_20_280 l_0_20_280)))
 (let ((?x80133 (* l_0_20_279 l_0_20_279)))
 (let ((?x80131 (* l_0_20_278 l_0_20_278)))
 (let ((?x80129 (* l_0_20_277 l_0_20_277)))
 (let ((?x80127 (* l_0_20_276 l_0_20_276)))
 (let ((?x80125 (* l_0_20_275 l_0_20_275)))
 (let ((?x80123 (* l_0_20_274 l_0_20_274)))
 (let ((?x80121 (* l_0_20_252 l_0_20_252)))
 (let ((?x80119 (* l_0_20_251 l_0_20_251)))
 (let ((?x80117 (* l_0_20_250 l_0_20_250)))
 (let ((?x80115 (* l_0_20_249 l_0_20_249)))
 (let ((?x80113 (* l_0_20_248 l_0_20_248)))
 (let ((?x80111 (* l_0_20_247 l_0_20_247)))
 (let ((?x80109 (* l_0_20_246 l_0_20_246)))
 (let ((?x80107 (* l_0_20_224 l_0_20_224)))
 (let ((?x80105 (* l_0_20_223 l_0_20_223)))
 (let ((?x80103 (* l_0_20_222 l_0_20_222)))
 (let ((?x80101 (* l_0_20_221 l_0_20_221)))
 (let ((?x80099 (* l_0_20_220 l_0_20_220)))
 (let ((?x80097 (* l_0_20_219 l_0_20_219)))
 (let ((?x80095 (* l_0_20_218 l_0_20_218)))
 (let ((?x80071 (- (* (* (- 1.0) l_0_20_134) l_0_20_134) (* (* 1.0 l_0_20_135) l_0_20_135))))
 (let ((?x80077 (- (- ?x80071 (* (* 1.0 l_0_20_136) l_0_20_136)) (* (* 1.0 l_0_20_137) l_0_20_137))))
 (let ((?x80083 (- (- ?x80077 (* (* 1.0 l_0_20_138) l_0_20_138)) (* (* 1.0 l_0_20_139) l_0_20_139))))
 (let ((?x80088 (+ (- ?x80083 (* (* 1.0 l_0_20_140) l_0_20_140)) (* (* 2.0 l_0_20_142) l_0_20_162))))
 (let ((?x80092 (- (+ ?x80088 (* (* 2.0 l_0_20_143) l_0_20_163)) (* (* 2.0 l_0_20_170) l_0_20_190))))
 (let ((?x80100 (- (- (- (- ?x80092 (* (* 2.0 l_0_20_171) l_0_20_191)) ?x80095) ?x80097) ?x80099)))
 (let ((?x80114 (- (- (- (- (- (- (- ?x80100 ?x80101) ?x80103) ?x80105) ?x80107) ?x80109) ?x80111) ?x80113)))
 (let ((?x80128 (- (- (- (- (- (- (- ?x80114 ?x80115) ?x80117) ?x80119) ?x80121) ?x80123) ?x80125) ?x80127)))
 (let ((?x80142 (- (- (- (- (- (- (- ?x80128 ?x80129) ?x80131) ?x80133) ?x80135) ?x80137) ?x80139) ?x80141)))
 (= (- (- (- (- ?x80142 ?x80143) ?x80145) ?x80147) ?x80149) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x80211 (* l_0_20_174 l_0_20_174)))
 (let ((?x80209 (* l_0_20_173 l_0_20_173)))
 (let ((?x80207 (* l_0_20_172 l_0_20_172)))
 (let ((?x80205 (* l_0_20_146 l_0_20_146)))
 (let ((?x80206 (+ (+ (* l_0_20_144 l_0_20_144) (* l_0_20_145 l_0_20_145)) ?x80205)))
 (= (- (- (- ?x80206 ?x80207) ?x80209) ?x80211) 0.0)))))))
(assert
 (let ((?x80223 (+ (* (* 2.0 l_0_20_144) l_0_20_162) (* (* 2.0 l_0_20_145) l_0_20_163))))
 (let ((?x80227 (- (+ ?x80223 (* (* 2.0 l_0_20_146) l_0_20_164)) (* (* 2.0 l_0_20_172) l_0_20_190))))
 (let ((?x80231 (- (- ?x80227 (* (* 2.0 l_0_20_173) l_0_20_191)) (* (* 2.0 l_0_20_174) l_0_20_192))))
 (= ?x80231 0.0)))))
(assert
 (let ((?x80271 (* l_0_20_196 l_0_20_196)))
 (let ((?x80269 (* l_0_20_195 l_0_20_195)))
 (let ((?x80267 (* l_0_20_194 l_0_20_194)))
 (let ((?x80265 (* l_0_20_193 l_0_20_193)))
 (let ((?x80263 (* l_0_20_192 l_0_20_192)))
 (let ((?x80261 (* l_0_20_191 l_0_20_191)))
 (let ((?x80259 (* l_0_20_190 l_0_20_190)))
 (let ((?x80257 (* l_0_20_168 l_0_20_168)))
 (let ((?x80255 (* l_0_20_167 l_0_20_167)))
 (let ((?x80253 (* l_0_20_166 l_0_20_166)))
 (let ((?x80251 (* l_0_20_165 l_0_20_165)))
 (let ((?x80249 (* l_0_20_164 l_0_20_164)))
 (let ((?x80250 (+ (+ (* l_0_20_162 l_0_20_162) (* l_0_20_163 l_0_20_163)) ?x80249)))
 (let ((?x80264 (- (- (- (+ (+ (+ (+ ?x80250 ?x80251) ?x80253) ?x80255) ?x80257) ?x80259) ?x80261) ?x80263)))
 (= (- (- (- (- ?x80264 ?x80265) ?x80267) ?x80269) ?x80271) 0.0))))))))))))))))
(assert
 (>= l_0_20_1 0.0))
(assert
 (>= l_0_20_3 0.0))
(assert
 (>= l_0_20_6 0.0))
(assert
 (>= l_0_20_10 0.0))
(assert
 (>= l_0_20_15 0.0))
(assert
 (>= l_0_20_21 0.0))
(assert
 (>= l_0_20_28 0.0))
(assert
 (>= l_0_20_29 0.0))
(assert
 (>= l_0_20_31 0.0))
(assert
 (>= l_0_20_34 0.0))
(assert
 (>= l_0_20_38 0.0))
(assert
 (>= l_0_20_43 0.0))
(assert
 (>= l_0_20_49 0.0))
(assert
 (>= l_0_20_56 0.0))
(assert
 (>= l_0_20_57 0.0))
(assert
 (>= l_0_20_59 0.0))
(assert
 (>= l_0_20_62 0.0))
(assert
 (>= l_0_20_66 0.0))
(assert
 (>= l_0_20_71 0.0))
(assert
 (>= l_0_20_77 0.0))
(assert
 (>= l_0_20_84 0.0))
(assert
 (>= l_0_20_85 0.0))
(assert
 (>= l_0_20_87 0.0))
(assert
 (>= l_0_20_90 0.0))
(assert
 (>= l_0_20_94 0.0))
(assert
 (>= l_0_20_99 0.0))
(assert
 (>= l_0_20_105 0.0))
(assert
 (>= l_0_20_112 0.0))
(assert
 (>= l_0_20_113 0.0))
(assert
 (>= l_0_20_115 0.0))
(assert
 (>= l_0_20_118 0.0))
(assert
 (>= l_0_20_122 0.0))
(assert
 (>= l_0_20_127 0.0))
(assert
 (>= l_0_20_133 0.0))
(assert
 (>= l_0_20_140 0.0))
(assert
 (>= l_0_20_141 0.0))
(assert
 (>= l_0_20_143 0.0))
(assert
 (>= l_0_20_146 0.0))
(assert
 (>= l_0_20_150 0.0))
(assert
 (>= l_0_20_155 0.0))
(assert
 (>= l_0_20_161 0.0))
(assert
 (>= l_0_20_168 0.0))
(assert
 (>= l_0_20_169 0.0))
(assert
 (>= l_0_20_171 0.0))
(assert
 (>= l_0_20_174 0.0))
(assert
 (>= l_0_20_178 0.0))
(assert
 (>= l_0_20_183 0.0))
(assert
 (>= l_0_20_189 0.0))
(assert
 (>= l_0_20_196 0.0))
(assert
 (>= l_0_20_197 0.0))
(assert
 (>= l_0_20_199 0.0))
(assert
 (>= l_0_20_202 0.0))
(assert
 (>= l_0_20_206 0.0))
(assert
 (>= l_0_20_211 0.0))
(assert
 (>= l_0_20_217 0.0))
(assert
 (>= l_0_20_224 0.0))
(assert
 (>= l_0_20_225 0.0))
(assert
 (>= l_0_20_227 0.0))
(assert
 (>= l_0_20_230 0.0))
(assert
 (>= l_0_20_234 0.0))
(assert
 (>= l_0_20_239 0.0))
(assert
 (>= l_0_20_245 0.0))
(assert
 (>= l_0_20_252 0.0))
(assert
 (>= l_0_20_253 0.0))
(assert
 (>= l_0_20_255 0.0))
(assert
 (>= l_0_20_258 0.0))
(assert
 (>= l_0_20_262 0.0))
(assert
 (>= l_0_20_267 0.0))
(assert
 (>= l_0_20_273 0.0))
(assert
 (>= l_0_20_280 0.0))
(assert
 (>= l_0_20_281 0.0))
(assert
 (>= l_0_20_283 0.0))
(assert
 (>= l_0_20_286 0.0))
(assert
 (>= l_0_20_290 0.0))
(assert
 (>= l_0_20_295 0.0))
(assert
 (>= l_0_20_301 0.0))
(assert
 (>= l_0_20_308 0.0))
(check-sat)
(get-model)