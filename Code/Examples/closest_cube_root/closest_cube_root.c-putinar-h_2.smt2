(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun _a_5_ () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_165 () Real)
(declare-fun l_0_11_164 () Real)
(declare-fun l_0_11_163 () Real)
(declare-fun l_0_11_162 () Real)
(declare-fun l_0_11_161 () Real)
(declare-fun l_0_11_150 () Real)
(declare-fun l_0_11_149 () Real)
(declare-fun l_0_11_148 () Real)
(declare-fun l_0_11_147 () Real)
(declare-fun l_0_11_146 () Real)
(declare-fun l_0_11_135 () Real)
(declare-fun l_0_11_134 () Real)
(declare-fun l_0_11_133 () Real)
(declare-fun l_0_11_132 () Real)
(declare-fun l_0_11_131 () Real)
(declare-fun l_0_11_120 () Real)
(declare-fun l_0_11_119 () Real)
(declare-fun l_0_11_118 () Real)
(declare-fun l_0_11_117 () Real)
(declare-fun l_0_11_116 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_151 () Real)
(declare-fun l_0_11_136 () Real)
(declare-fun l_0_11_121 () Real)
(declare-fun l_0_11_106 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_157 () Real)
(declare-fun l_0_11_142 () Real)
(declare-fun l_0_11_127 () Real)
(declare-fun l_0_11_112 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_152 () Real)
(declare-fun l_0_11_137 () Real)
(declare-fun l_0_11_122 () Real)
(declare-fun l_0_11_107 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_154 () Real)
(declare-fun l_0_11_139 () Real)
(declare-fun l_0_11_124 () Real)
(declare-fun l_0_11_109 () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_158 () Real)
(declare-fun l_0_11_153 () Real)
(declare-fun l_0_11_143 () Real)
(declare-fun l_0_11_138 () Real)
(declare-fun l_0_11_128 () Real)
(declare-fun l_0_11_123 () Real)
(declare-fun l_0_11_113 () Real)
(declare-fun l_0_11_108 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_159 () Real)
(declare-fun l_0_11_156 () Real)
(declare-fun l_0_11_155 () Real)
(declare-fun l_0_11_144 () Real)
(declare-fun l_0_11_141 () Real)
(declare-fun l_0_11_140 () Real)
(declare-fun l_0_11_129 () Real)
(declare-fun l_0_11_126 () Real)
(declare-fun l_0_11_125 () Real)
(declare-fun l_0_11_114 () Real)
(declare-fun l_0_11_111 () Real)
(declare-fun l_0_11_110 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_160 () Real)
(declare-fun l_0_11_145 () Real)
(declare-fun l_0_11_130 () Real)
(declare-fun l_0_11_115 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_15 () Real)
(assert
 (= (- 1.0 l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (- (- (- (- (- l_0_2_2) l_0_2_3) l_0_2_4) l_0_2_5) l_0_2_6) 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (let ((?x1028 (- (- (- (- (- (- l_0_3_2) l_0_3_3) l_0_3_4) l_0_3_5) l_0_3_6) l_0_3_7)))
 (= (- ?x1028 l_0_3_8) 0.0)))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_7 0.0))
(assert
 (>= l_0_3_8 0.0))
(assert
 (let ((?x1068 (- (- (- (- (- (- l_0_4_10) l_0_4_2) l_0_4_3) l_0_4_4) l_0_4_5) l_0_4_6)))
 (= (- (- (- ?x1068 l_0_4_7) l_0_4_8) l_0_4_9) 0.0)))
(assert
 (= (- l_0_4_1) 0.0))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_2 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_4 0.0))
(assert
 (>= l_0_4_5 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_7 0.0))
(assert
 (>= l_0_4_8 0.0))
(assert
 (>= l_0_4_9 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (let ((?x1149 (* (* 4.0 l_0_5_61) l_0_5_61)))
 (let ((?x1142 (* l_0_5_60 l_0_5_60)))
 (let ((?x1143 (* 3.0 ?x1142)))
 (let ((?x1139 (* l_0_5_59 l_0_5_59)))
 (let ((?x1140 (* 3.0 ?x1139)))
 (let ((?x1136 (* l_0_5_58 l_0_5_58)))
 (let ((?x1137 (* 3.0 ?x1136)))
 (let ((?x1133 (* l_0_5_57 l_0_5_57)))
 (let ((?x1134 (* 3.0 ?x1133)))
 (let ((?x1129 (* l_0_5_56 l_0_5_56)))
 (let ((?x1131 (* 3.0 ?x1129)))
 (let ((?x1125 (* l_0_5_46 l_0_5_46)))
 (let ((?x1127 (* 4.0 ?x1125)))
 (let ((?x1120 (+ (* (* (- 24.0) l_0_5_16) l_0_5_26) (* (* 24.0 l_0_5_31) l_0_5_41))))
 (let ((?x1135 (+ (+ (+ (- ?x1120 (* (* 12.0 l_0_5_46) l_0_5_56)) ?x1127) ?x1131) ?x1134)))
 (let ((?x1147 (+ (+ (+ (+ ?x1135 ?x1137) ?x1140) ?x1143) (* (* 12.0 l_0_5_61) l_0_5_71))))
 (let ((?x1156 (- (- (- ?x1147 ?x1149) (* (* 3.0 l_0_5_71) l_0_5_71)) (* (* 3.0 l_0_5_72) l_0_5_72))))
 (let ((?x1162 (- (- ?x1156 (* (* 3.0 l_0_5_73) l_0_5_73)) (* (* 3.0 l_0_5_74) l_0_5_74))))
 (= (+ (- ?x1162 (* (* 3.0 l_0_5_75) l_0_5_75)) 4.0) 0.0))))))))))))))))))))
(assert
 (let ((?x1230 (* l_0_5_105 l_0_5_105)))
 (let ((?x1228 (* l_0_5_104 l_0_5_104)))
 (let ((?x1226 (* l_0_5_103 l_0_5_103)))
 (let ((?x1227 (- (- (* (- l_0_5_101) l_0_5_101) (* l_0_5_102 l_0_5_102)) ?x1226)))
 (let ((?x1237 (- (- (- (- ?x1227 ?x1228) ?x1230) (* (* 12.0 l_0_5_16) l_0_5_16)) (* (* 1.0 l_0_5_26) l_0_5_26))))
 (let ((?x1243 (- (- ?x1237 (* (* 1.0 l_0_5_27) l_0_5_27)) (* (* 1.0 l_0_5_28) l_0_5_28))))
 (let ((?x1249 (- (- ?x1243 (* (* 1.0 l_0_5_29) l_0_5_29)) (* (* 1.0 l_0_5_30) l_0_5_30))))
 (let ((?x1255 (+ (+ ?x1249 (* 12.0 (* l_0_5_31 l_0_5_31))) (* 1.0 (* l_0_5_41 l_0_5_41)))))
 (let ((?x1261 (+ (+ ?x1255 (* 1.0 (* l_0_5_42 l_0_5_42))) (* 1.0 (* l_0_5_43 l_0_5_43)))))
 (let ((?x1267 (+ (+ ?x1261 (* 1.0 (* l_0_5_44 l_0_5_44))) (* 1.0 (* l_0_5_45 l_0_5_45)))))
 (let ((?x1273 (- (+ ?x1267 (* (* 6.0 l_0_5_46) l_0_5_56)) (* (* 6.0 l_0_5_46) l_0_5_46))))
 (let ((?x1279 (- (- ?x1273 (* (* 1.0 l_0_5_56) l_0_5_56)) (* (* 1.0 l_0_5_57) l_0_5_57))))
 (let ((?x1285 (- (- ?x1279 (* (* 1.0 l_0_5_58) l_0_5_58)) (* (* 1.0 l_0_5_59) l_0_5_59))))
 (let ((?x1291 (- (- ?x1285 (* (* 1.0 l_0_5_60) l_0_5_60)) (* (* 6.0 l_0_5_61) l_0_5_71))))
 (let ((?x1295 (+ (+ ?x1291 (* 6.0 (* l_0_5_61 l_0_5_61))) (* 1.0 (* l_0_5_71 l_0_5_71)))))
 (let ((?x1299 (+ (+ ?x1295 (* 1.0 (* l_0_5_72 l_0_5_72))) (* 1.0 (* l_0_5_73 l_0_5_73)))))
 (let ((?x1303 (+ (+ ?x1299 (* 1.0 (* l_0_5_74 l_0_5_74))) (* 1.0 (* l_0_5_75 l_0_5_75)))))
 (= (+ ?x1303 6.0) 0.0)))))))))))))))))))
(assert
 (let ((?x1125 (* l_0_5_46 l_0_5_46)))
 (let ((?x1403 (* 3.0 ?x1125)))
 (let ((?x1396 (- (* (* (- 2.0) l_0_5_101) l_0_5_91) (* (* 2.0 l_0_5_16) l_0_5_26))))
 (let ((?x1402 (- (+ ?x1396 (* (* 2.0 l_0_5_31) l_0_5_41)) (* (* 2.0 l_0_5_46) l_0_5_56))))
 (let ((?x1410 (- (+ (+ ?x1402 ?x1403) (* (* 2.0 l_0_5_61) l_0_5_71)) (* (* 3.0 l_0_5_61) l_0_5_61))))
 (= (+ ?x1410 3.0) 0.0)))))))
(assert
 (let ((?x1438 (+ (* (* (- 2.0) l_0_5_16) l_0_5_19) (* (* 2.0 l_0_5_31) l_0_5_34))))
 (let ((?x1443 (- (- ?x1438 (* (* 2.0 l_0_5_46) l_0_5_49)) (* (* 4.0 l_0_5_46) l_0_5_46))))
 (let ((?x1446 (+ (+ ?x1443 (* (* 2.0 l_0_5_61) l_0_5_64)) (* 4.0 (* l_0_5_61 l_0_5_61)))))
 (= (- (- ?x1446 (* (* 2.0 l_0_5_91) l_0_5_94)) 4.0) 0.0)))))
(assert
 (let ((?x1496 (* l_0_5_76 l_0_5_76)))
 (let ((?x1149 (* (* 4.0 l_0_5_61) l_0_5_61)))
 (let ((?x1125 (* l_0_5_46 l_0_5_46)))
 (let ((?x1127 (* 4.0 ?x1125)))
 (let ((?x1489 (+ (- (* (- l_0_5_1) l_0_5_1) (* (* 2.0 l_0_5_16) l_0_5_22)) (* (* 2.0 l_0_5_31) l_0_5_37))))
 (let ((?x1494 (+ (+ (- ?x1489 (* (* 2.0 l_0_5_46) l_0_5_52)) ?x1127) (* (* 2.0 l_0_5_61) l_0_5_67))))
 (= (- (+ (- ?x1494 ?x1149) ?x1496) (* (* 2.0 l_0_5_91) l_0_5_97)) 0.0))))))))
(assert
 (let ((?x1571 (* 2.0 l_0_5_76)))
 (let ((?x1574 (* ?x1571 l_0_5_82)))
 (let ((?x1572 (* ?x1571 l_0_5_77)))
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1563 (* ?x1562 l_0_5_62)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1554 (* ?x1553 l_0_5_47)))
 (let ((?x1537 (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) (* (* 8.0 l_0_5_16) l_0_5_22))))
 (let ((?x1543 (- (- ?x1537 (* (* 2.0 l_0_5_17) l_0_5_22)) (* (* 2.0 l_0_5_18) l_0_5_23))))
 (let ((?x1549 (+ (- ?x1543 (* (* 8.0 l_0_5_31) l_0_5_37)) (* (* 2.0 l_0_5_32) l_0_5_37))))
 (let ((?x1558 (- (+ (+ ?x1549 (* (* 2.0 l_0_5_33) l_0_5_38)) ?x1554) (* (* 2.0 l_0_5_47) l_0_5_52))))
 (let ((?x1567 (+ (- (- ?x1558 (* (* 2.0 l_0_5_48) l_0_5_53)) ?x1563) (* (* 2.0 l_0_5_62) l_0_5_67))))
 (let ((?x1578 (- (- (+ (+ ?x1567 (* (* 2.0 l_0_5_63) l_0_5_68)) ?x1572) ?x1574) (* (* 2.0 l_0_5_92) l_0_5_97))))
 (= (- ?x1578 (* (* 2.0 l_0_5_93) l_0_5_98)) 0.0)))))))))))))))
(assert
 (let ((?x1571 (* 2.0 l_0_5_76)))
 (let ((?x1701 (* ?x1571 l_0_5_79)))
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1690 (* ?x1562 l_0_5_67)))
 (let ((?x1688 (* ?x1562 l_0_5_64)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1677 (* ?x1553 l_0_5_52)))
 (let ((?x1675 (* ?x1553 l_0_5_49)))
 (let ((?x1659 (- (* (* (- 2.0) l_0_5_1) l_0_5_4) (* (* 2.0 l_0_5_19) l_0_5_22))))
 (let ((?x1665 (- (- ?x1659 (* (* 2.0 l_0_5_20) l_0_5_23)) (* (* 2.0 l_0_5_21) l_0_5_24))))
 (let ((?x1671 (+ (+ ?x1665 (* (* 2.0 l_0_5_34) l_0_5_37)) (* (* 2.0 l_0_5_35) l_0_5_38))))
 (let ((?x1681 (- (- (+ (+ ?x1671 (* (* 2.0 l_0_5_36) l_0_5_39)) ?x1675) ?x1677) (* (* 2.0 l_0_5_49) l_0_5_52))))
 (let ((?x1687 (- (- ?x1681 (* (* 2.0 l_0_5_50) l_0_5_53)) (* (* 2.0 l_0_5_51) l_0_5_54))))
 (let ((?x1697 (+ (+ (+ (- ?x1687 ?x1688) ?x1690) (* (* 2.0 l_0_5_64) l_0_5_67)) (* (* 2.0 l_0_5_65) l_0_5_68))))
 (let ((?x1705 (- (+ (+ ?x1697 (* (* 2.0 l_0_5_66) l_0_5_69)) ?x1701) (* (* 2.0 l_0_5_94) l_0_5_97))))
 (let ((?x1711 (- (- ?x1705 (* (* 2.0 l_0_5_95) l_0_5_98)) (* (* 2.0 l_0_5_96) l_0_5_99))))
 (= ?x1711 0.0))))))))))))))))))
(assert
 (let ((?x1856 (* l_0_5_99 l_0_5_99)))
 (let ((?x1854 (* l_0_5_98 l_0_5_98)))
 (let ((?x1852 (* l_0_5_97 l_0_5_97)))
 (let ((?x1571 (* 2.0 l_0_5_76)))
 (let ((?x1574 (* ?x1571 l_0_5_82)))
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1690 (* ?x1562 l_0_5_67)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1677 (* ?x1553 l_0_5_52)))
 (let ((?x1803 (- (- (* (* (- 2.0) l_0_5_1) l_0_5_7) (* l_0_5_100 l_0_5_100)) (* (* 1.0 l_0_5_22) l_0_5_22))))
 (let ((?x1809 (- (- ?x1803 (* (* 1.0 l_0_5_23) l_0_5_23)) (* (* 1.0 l_0_5_24) l_0_5_24))))
 (let ((?x1815 (+ (- ?x1809 (* (* 1.0 l_0_5_25) l_0_5_25)) (* 1.0 (* l_0_5_37 l_0_5_37)))))
 (let ((?x1821 (+ (+ ?x1815 (* 1.0 (* l_0_5_38 l_0_5_38))) (* 1.0 (* l_0_5_39 l_0_5_39)))))
 (let ((?x1828 (- (+ (+ ?x1821 (* 1.0 (* l_0_5_40 l_0_5_40))) ?x1677) (* (* 1.0 l_0_5_52) l_0_5_52))))
 (let ((?x1834 (- (- ?x1828 (* (* 1.0 l_0_5_53) l_0_5_53)) (* (* 1.0 l_0_5_54) l_0_5_54))))
 (let ((?x1841 (+ (- (- ?x1834 (* (* 1.0 l_0_5_55) l_0_5_55)) ?x1690) (* 1.0 (* l_0_5_67 l_0_5_67)))))
 (let ((?x1847 (+ (+ ?x1841 (* 1.0 (* l_0_5_68 l_0_5_68))) (* 1.0 (* l_0_5_69 l_0_5_69)))))
 (let ((?x1855 (- (- (+ (+ ?x1847 (* 1.0 (* l_0_5_70 l_0_5_70))) ?x1574) ?x1852) ?x1854)))
 (= (- ?x1855 ?x1856) 0.0))))))))))))))))))))
(assert
 (let ((?x1571 (* 2.0 l_0_5_76)))
 (let ((?x1981 (* ?x1571 l_0_5_86)))
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1967 (* ?x1562 l_0_5_71)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1951 (* ?x1553 l_0_5_56)))
 (let ((?x1915 (- (* (* (- 2.0) l_0_5_1) l_0_5_11) (* (* 2.0 l_0_5_100) l_0_5_104))))
 (let ((?x1921 (- (- ?x1915 (* (* 2.0 l_0_5_101) l_0_5_97)) (* (* 2.0 l_0_5_102) l_0_5_98))))
 (let ((?x1927 (- (- ?x1921 (* (* 2.0 l_0_5_103) l_0_5_99)) (* (* 2.0 l_0_5_22) l_0_5_26))))
 (let ((?x1933 (- (- ?x1927 (* (* 2.0 l_0_5_23) l_0_5_27)) (* (* 2.0 l_0_5_24) l_0_5_28))))
 (let ((?x1939 (+ (- ?x1933 (* (* 2.0 l_0_5_25) l_0_5_29)) (* (* 2.0 l_0_5_37) l_0_5_41))))
 (let ((?x1945 (+ (+ ?x1939 (* (* 2.0 l_0_5_38) l_0_5_42)) (* (* 2.0 l_0_5_39) l_0_5_43))))
 (let ((?x1950 (+ (+ ?x1945 (* (* 2.0 l_0_5_40) l_0_5_44)) (* (* 6.0 l_0_5_46) l_0_5_52))))
 (let ((?x1958 (- (- (+ ?x1950 ?x1951) (* (* 2.0 l_0_5_52) l_0_5_56)) (* (* 2.0 l_0_5_53) l_0_5_57))))
 (let ((?x1964 (- (- ?x1958 (* (* 2.0 l_0_5_54) l_0_5_58)) (* (* 2.0 l_0_5_55) l_0_5_59))))
 (let ((?x1971 (+ (- (- ?x1964 (* (* 6.0 l_0_5_61) l_0_5_67)) ?x1967) (* (* 2.0 l_0_5_67) l_0_5_71))))
 (let ((?x1977 (+ (+ ?x1971 (* (* 2.0 l_0_5_68) l_0_5_72)) (* (* 2.0 l_0_5_69) l_0_5_73))))
 (= (+ (+ ?x1977 (* (* 2.0 l_0_5_70) l_0_5_74)) ?x1981) 0.0)))))))))))))))))))
(assert
 (let ((?x2126 (* l_0_5_78 l_0_5_78)))
 (let ((?x2123 (* 2.0 l_0_5_78)))
 (let ((?x2124 (* ?x2123 l_0_5_83)))
 (let ((?x2121 (* l_0_5_77 l_0_5_77)))
 (let ((?x2118 (* 2.0 l_0_5_77)))
 (let ((?x2119 (* ?x2118 l_0_5_82)))
 (let ((?x2116 (* (* 4.0 l_0_5_63) l_0_5_63)))
 (let ((?x2113 (* (* 4.0 l_0_5_62) l_0_5_62)))
 (let ((?x2109 (* l_0_5_48 l_0_5_48)))
 (let ((?x2110 (* 4.0 ?x2109)))
 (let ((?x2106 (* l_0_5_47 l_0_5_47)))
 (let ((?x2107 (* 4.0 ?x2106)))
 (let ((?x2098 (* l_0_5_3 l_0_5_3)))
 (let ((?x2096 (* l_0_5_2 l_0_5_2)))
 (let ((?x2095 (+ (* (* 8.0 l_0_5_17) l_0_5_22) (* (* 8.0 l_0_5_18) l_0_5_23))))
 (let ((?x2105 (- (- (- (- ?x2095 ?x2096) ?x2098) (* (* 8.0 l_0_5_32) l_0_5_37)) (* (* 8.0 l_0_5_33) l_0_5_38))))
 (let ((?x2125 (- (+ (- (- (- (+ (+ ?x2105 ?x2107) ?x2110) ?x2113) ?x2116) ?x2119) ?x2121) ?x2124)))
 (= (+ ?x2125 ?x2126) 0.0)))))))))))))))))))
(assert
 (let ((?x2229 (* 2.0 l_0_5_81)))
 (let ((?x2230 (* ?x2229 l_0_5_84)))
 (let ((?x2226 (* 2.0 l_0_5_80)))
 (let ((?x2227 (* ?x2226 l_0_5_83)))
 (let ((?x2223 (* 2.0 l_0_5_79)))
 (let ((?x2224 (* ?x2223 l_0_5_82)))
 (let ((?x2123 (* 2.0 l_0_5_78)))
 (let ((?x2221 (* ?x2123 l_0_5_80)))
 (let ((?x2118 (* 2.0 l_0_5_77)))
 (let ((?x2219 (* ?x2118 l_0_5_79)))
 (let ((?x2214 (* 8.0 l_0_5_63)))
 (let ((?x2217 (* ?x2214 l_0_5_68)))
 (let ((?x2215 (* ?x2214 l_0_5_65)))
 (let ((?x2209 (* 8.0 l_0_5_62)))
 (let ((?x2212 (* ?x2209 l_0_5_67)))
 (let ((?x2210 (* ?x2209 l_0_5_64)))
 (let ((?x2204 (* 8.0 l_0_5_48)))
 (let ((?x2207 (* ?x2204 l_0_5_53)))
 (let ((?x2205 (* ?x2204 l_0_5_50)))
 (let ((?x2199 (* 8.0 l_0_5_47)))
 (let ((?x2202 (* ?x2199 l_0_5_52)))
 (let ((?x2200 (* ?x2199 l_0_5_49)))
 (let ((?x2180 (- (* (* 8.0 l_0_5_19) l_0_5_22) (* (* 2.0 l_0_5_2) l_0_5_4))))
 (let ((?x2186 (+ (+ ?x2180 (* (* 8.0 l_0_5_20) l_0_5_23)) (* (* 8.0 l_0_5_21) l_0_5_24))))
 (let ((?x2192 (- (- ?x2186 (* (* 2.0 l_0_5_3) l_0_5_5)) (* (* 8.0 l_0_5_34) l_0_5_37))))
 (let ((?x2198 (- (- ?x2192 (* (* 8.0 l_0_5_35) l_0_5_38)) (* (* 8.0 l_0_5_36) l_0_5_39))))
 (let ((?x2216 (- (+ (- (- (+ (- (+ ?x2198 ?x2200) ?x2202) ?x2205) ?x2207) ?x2210) ?x2212) ?x2215)))
 (= (- (- (- (+ (+ (+ ?x2216 ?x2217) ?x2219) ?x2221) ?x2224) ?x2227) ?x2230) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x2365 (* l_0_5_85 l_0_5_85)))
 (let ((?x2363 (* l_0_5_84 l_0_5_84)))
 (let ((?x2361 (* l_0_5_83 l_0_5_83)))
 (let ((?x2359 (* l_0_5_82 l_0_5_82)))
 (let ((?x2123 (* 2.0 l_0_5_78)))
 (let ((?x2124 (* ?x2123 l_0_5_83)))
 (let ((?x2118 (* 2.0 l_0_5_77)))
 (let ((?x2119 (* ?x2118 l_0_5_82)))
 (let ((?x2214 (* 8.0 l_0_5_63)))
 (let ((?x2217 (* ?x2214 l_0_5_68)))
 (let ((?x2209 (* 8.0 l_0_5_62)))
 (let ((?x2212 (* ?x2209 l_0_5_67)))
 (let ((?x2204 (* 8.0 l_0_5_48)))
 (let ((?x2207 (* ?x2204 l_0_5_53)))
 (let ((?x2199 (* 8.0 l_0_5_47)))
 (let ((?x2202 (* ?x2199 l_0_5_52)))
 (let ((?x1876 (* l_0_5_25 l_0_5_25)))
 (let ((?x2337 (* 4.0 ?x1876)))
 (let ((?x1872 (* l_0_5_24 l_0_5_24)))
 (let ((?x2335 (* 4.0 ?x1872)))
 (let ((?x1868 (* l_0_5_23 l_0_5_23)))
 (let ((?x2333 (* 4.0 ?x1868)))
 (let ((?x1864 (* l_0_5_22 l_0_5_22)))
 (let ((?x2331 (* 4.0 ?x1864)))
 (let ((?x2338 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_2) l_0_5_7) ?x2331) ?x2333) ?x2335) ?x2337)))
 (let ((?x2343 (- (- ?x2338 (* (* 2.0 l_0_5_3) l_0_5_8)) (* (* 4.0 l_0_5_37) l_0_5_37))))
 (let ((?x2349 (- (- ?x2343 (* (* 4.0 l_0_5_38) l_0_5_38)) (* (* 4.0 l_0_5_39) l_0_5_39))))
 (let ((?x2355 (- (+ (+ (- ?x2349 (* (* 4.0 l_0_5_40) l_0_5_40)) ?x2202) ?x2207) ?x2212)))
 (let ((?x2366 (- (- (- (- (+ (+ (- ?x2355 ?x2217) ?x2119) ?x2124) ?x2359) ?x2361) ?x2363) ?x2365)))
 (= ?x2366 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x2481 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x2478 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x2475 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x2472 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x2123 (* 2.0 l_0_5_78)))
 (let ((?x2469 (* ?x2123 l_0_5_87)))
 (let ((?x2118 (* 2.0 l_0_5_77)))
 (let ((?x2467 (* ?x2118 l_0_5_86)))
 (let ((?x2214 (* 8.0 l_0_5_63)))
 (let ((?x2465 (* ?x2214 l_0_5_72)))
 (let ((?x2209 (* 8.0 l_0_5_62)))
 (let ((?x2460 (* ?x2209 l_0_5_71)))
 (let ((?x2204 (* 8.0 l_0_5_48)))
 (let ((?x2455 (* ?x2204 l_0_5_57)))
 (let ((?x2199 (* 8.0 l_0_5_47)))
 (let ((?x2450 (* ?x2199 l_0_5_56)))
 (let ((?x2422 (- (* (* (- 2.0) l_0_5_11) l_0_5_2) (* (* 2.0 l_0_5_12) l_0_5_3))))
 (let ((?x2428 (+ (+ ?x2422 (* (* 8.0 l_0_5_22) l_0_5_26)) (* (* 8.0 l_0_5_23) l_0_5_27))))
 (let ((?x2434 (+ (+ ?x2428 (* (* 8.0 l_0_5_24) l_0_5_28)) (* (* 8.0 l_0_5_25) l_0_5_29))))
 (let ((?x2440 (- (- ?x2434 (* (* 8.0 l_0_5_37) l_0_5_41)) (* (* 8.0 l_0_5_38) l_0_5_42))))
 (let ((?x2446 (- (- ?x2440 (* (* 8.0 l_0_5_39) l_0_5_43)) (* (* 8.0 l_0_5_40) l_0_5_44))))
 (let ((?x2454 (+ (+ (+ ?x2446 (* (* 6.0 l_0_5_47) l_0_5_52)) ?x2450) (* (* 6.0 l_0_5_48) l_0_5_53))))
 (let ((?x2464 (- (- (- (+ ?x2454 ?x2455) (* (* 6.0 l_0_5_62) l_0_5_67)) ?x2460) (* (* 6.0 l_0_5_63) l_0_5_68))))
 (let ((?x2482 (- (- (- (- (+ (+ (- ?x2464 ?x2465) ?x2467) ?x2469) ?x2472) ?x2475) ?x2478) ?x2481)))
 (= ?x2482 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2622 (* l_0_5_81 l_0_5_81)))
 (let ((?x2620 (* l_0_5_80 l_0_5_80)))
 (let ((?x2618 (* l_0_5_79 l_0_5_79)))
 (let ((?x2616 (* (* 4.0 l_0_5_66) l_0_5_66)))
 (let ((?x2612 (* 8.0 l_0_5_66)))
 (let ((?x2613 (* ?x2612 l_0_5_69)))
 (let ((?x2610 (* (* 4.0 l_0_5_65) l_0_5_65)))
 (let ((?x2606 (* 8.0 l_0_5_65)))
 (let ((?x2607 (* ?x2606 l_0_5_68)))
 (let ((?x2604 (* (* 4.0 l_0_5_64) l_0_5_64)))
 (let ((?x2600 (* 8.0 l_0_5_64)))
 (let ((?x2601 (* ?x2600 l_0_5_67)))
 (let ((?x2598 (* l_0_5_6 l_0_5_6)))
 (let ((?x2595 (* l_0_5_51 l_0_5_51)))
 (let ((?x2596 (* 4.0 ?x2595)))
 (let ((?x2592 (* 8.0 l_0_5_51)))
 (let ((?x2593 (* ?x2592 l_0_5_54)))
 (let ((?x2589 (* l_0_5_50 l_0_5_50)))
 (let ((?x2590 (* 4.0 ?x2589)))
 (let ((?x2586 (* 8.0 l_0_5_50)))
 (let ((?x2587 (* ?x2586 l_0_5_53)))
 (let ((?x2584 (* l_0_5_5 l_0_5_5)))
 (let ((?x2581 (* l_0_5_49 l_0_5_49)))
 (let ((?x2582 (* 4.0 ?x2581)))
 (let ((?x2583 (+ (- (* (- l_0_5_4) l_0_5_4) (* (* 8.0 l_0_5_49) l_0_5_52)) ?x2582)))
 (let ((?x2602 (+ (- (+ (- (+ (- (- ?x2583 ?x2584) ?x2587) ?x2590) ?x2593) ?x2596) ?x2598) ?x2601)))
 (let ((?x2621 (+ (+ (- (+ (- (+ (- ?x2602 ?x2604) ?x2607) ?x2610) ?x2613) ?x2616) ?x2618) ?x2620)))
 (= (+ ?x2621 ?x2622) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x2229 (* 2.0 l_0_5_81)))
 (let ((?x2230 (* ?x2229 l_0_5_84)))
 (let ((?x2226 (* 2.0 l_0_5_80)))
 (let ((?x2227 (* ?x2226 l_0_5_83)))
 (let ((?x2223 (* 2.0 l_0_5_79)))
 (let ((?x2224 (* ?x2223 l_0_5_82)))
 (let ((?x1848 (* l_0_5_70 l_0_5_70)))
 (let ((?x2719 (* 4.0 ?x1848)))
 (let ((?x1845 (* l_0_5_69 l_0_5_69)))
 (let ((?x2717 (* 4.0 ?x1845)))
 (let ((?x1842 (* l_0_5_68 l_0_5_68)))
 (let ((?x2715 (* 4.0 ?x1842)))
 (let ((?x1839 (* l_0_5_67 l_0_5_67)))
 (let ((?x2713 (* 4.0 ?x1839)))
 (let ((?x2612 (* 8.0 l_0_5_66)))
 (let ((?x2613 (* ?x2612 l_0_5_69)))
 (let ((?x2606 (* 8.0 l_0_5_65)))
 (let ((?x2607 (* ?x2606 l_0_5_68)))
 (let ((?x2600 (* 8.0 l_0_5_64)))
 (let ((?x2601 (* ?x2600 l_0_5_67)))
 (let ((?x2592 (* 8.0 l_0_5_51)))
 (let ((?x2593 (* ?x2592 l_0_5_54)))
 (let ((?x2586 (* 8.0 l_0_5_50)))
 (let ((?x2587 (* ?x2586 l_0_5_53)))
 (let ((?x2578 (* 8.0 l_0_5_49)))
 (let ((?x2579 (* ?x2578 l_0_5_52)))
 (let ((?x2692 (- (+ (* (* (- 2.0) l_0_5_4) l_0_5_7) ?x2579) (* (* 2.0 l_0_5_5) l_0_5_8))))
 (let ((?x2700 (- (- (+ (+ ?x2692 ?x2587) ?x2593) (* (* 4.0 l_0_5_52) l_0_5_52)) (* (* 4.0 l_0_5_53) l_0_5_53))))
 (let ((?x2706 (- (- ?x2700 (* (* 4.0 l_0_5_54) l_0_5_54)) (* (* 4.0 l_0_5_55) l_0_5_55))))
 (let ((?x2712 (- (- (- (- ?x2706 (* (* 2.0 l_0_5_6) l_0_5_9)) ?x2601) ?x2607) ?x2613)))
 (let ((?x2723 (+ (+ (+ (+ (+ (+ (+ ?x2712 ?x2713) ?x2715) ?x2717) ?x2719) ?x2224) ?x2227) ?x2230)))
 (= ?x2723 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x2229 (* 2.0 l_0_5_81)))
 (let ((?x2836 (* ?x2229 l_0_5_88)))
 (let ((?x2226 (* 2.0 l_0_5_80)))
 (let ((?x2834 (* ?x2226 l_0_5_87)))
 (let ((?x2223 (* 2.0 l_0_5_79)))
 (let ((?x2832 (* ?x2223 l_0_5_86)))
 (let ((?x2830 (* (* 8.0 l_0_5_70) l_0_5_74)))
 (let ((?x2827 (* (* 8.0 l_0_5_69) l_0_5_73)))
 (let ((?x2824 (* (* 8.0 l_0_5_68) l_0_5_72)))
 (let ((?x2821 (* (* 8.0 l_0_5_67) l_0_5_71)))
 (let ((?x2612 (* 8.0 l_0_5_66)))
 (let ((?x2818 (* ?x2612 l_0_5_73)))
 (let ((?x2606 (* 8.0 l_0_5_65)))
 (let ((?x2813 (* ?x2606 l_0_5_72)))
 (let ((?x2600 (* 8.0 l_0_5_64)))
 (let ((?x2808 (* ?x2600 l_0_5_71)))
 (let ((?x2803 (* (* 8.0 l_0_5_55) l_0_5_59)))
 (let ((?x2800 (* (* 8.0 l_0_5_54) l_0_5_58)))
 (let ((?x2797 (* (* 8.0 l_0_5_53) l_0_5_57)))
 (let ((?x2794 (* (* 8.0 l_0_5_52) l_0_5_56)))
 (let ((?x2592 (* 8.0 l_0_5_51)))
 (let ((?x2791 (* ?x2592 l_0_5_58)))
 (let ((?x2586 (* 8.0 l_0_5_50)))
 (let ((?x2786 (* ?x2586 l_0_5_57)))
 (let ((?x2578 (* 8.0 l_0_5_49)))
 (let ((?x2781 (* ?x2578 l_0_5_56)))
 (let ((?x2774 (- (* (* (- 2.0) l_0_5_11) l_0_5_4) (* (* 2.0 l_0_5_12) l_0_5_5))))
 (let ((?x2780 (+ (- ?x2774 (* (* 2.0 l_0_5_13) l_0_5_6)) (* (* 6.0 l_0_5_49) l_0_5_52))))
 (let ((?x2790 (+ (+ (+ (+ ?x2780 ?x2781) (* (* 6.0 l_0_5_50) l_0_5_53)) ?x2786) (* (* 6.0 l_0_5_51) l_0_5_54))))
 (let ((?x2807 (- (- (- (- (- (+ ?x2790 ?x2791) ?x2794) ?x2797) ?x2800) ?x2803) (* (* 6.0 l_0_5_64) l_0_5_67))))
 (let ((?x2817 (- (- (- (- ?x2807 ?x2808) (* (* 6.0 l_0_5_65) l_0_5_68)) ?x2813) (* (* 6.0 l_0_5_66) l_0_5_69))))
 (let ((?x2835 (+ (+ (+ (+ (+ (+ (- ?x2817 ?x2818) ?x2821) ?x2824) ?x2827) ?x2830) ?x2832) ?x2834)))
 (= (+ ?x2835 ?x2836) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2954 (* l_0_5_9 l_0_5_9)))
 (let ((?x2365 (* l_0_5_85 l_0_5_85)))
 (let ((?x2363 (* l_0_5_84 l_0_5_84)))
 (let ((?x2361 (* l_0_5_83 l_0_5_83)))
 (let ((?x2359 (* l_0_5_82 l_0_5_82)))
 (let ((?x2948 (* l_0_5_8 l_0_5_8)))
 (let ((?x2946 (* (* 4.0 l_0_5_70) l_0_5_70)))
 (let ((?x2943 (* l_0_5_7 l_0_5_7)))
 (let ((?x2941 (* (* 4.0 l_0_5_69) l_0_5_69)))
 (let ((?x2938 (* (* 4.0 l_0_5_68) l_0_5_68)))
 (let ((?x2935 (* (* 4.0 l_0_5_67) l_0_5_67)))
 (let ((?x1893 (* l_0_5_55 l_0_5_55)))
 (let ((?x2750 (* 4.0 ?x1893)))
 (let ((?x1889 (* l_0_5_54 l_0_5_54)))
 (let ((?x2745 (* 4.0 ?x1889)))
 (let ((?x1885 (* l_0_5_53 l_0_5_53)))
 (let ((?x2740 (* 4.0 ?x1885)))
 (let ((?x2931 (+ (+ (* (- l_0_5_10) l_0_5_10) (* 4.0 (* l_0_5_52 l_0_5_52))) ?x2740)))
 (let ((?x2947 (- (- (- (- (- (+ (+ ?x2931 ?x2745) ?x2750) ?x2935) ?x2938) ?x2941) ?x2943) ?x2946)))
 (= (- (+ (+ (+ (+ (- ?x2947 ?x2948) ?x2359) ?x2361) ?x2363) ?x2365) ?x2954) 0.0)))))))))))))))))))))
(assert
 (let ((?x2481 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x2478 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x2475 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x2472 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x2830 (* (* 8.0 l_0_5_70) l_0_5_74)))
 (let ((?x2827 (* (* 8.0 l_0_5_69) l_0_5_73)))
 (let ((?x2824 (* (* 8.0 l_0_5_68) l_0_5_72)))
 (let ((?x2821 (* (* 8.0 l_0_5_67) l_0_5_71)))
 (let ((?x2803 (* (* 8.0 l_0_5_55) l_0_5_59)))
 (let ((?x2800 (* (* 8.0 l_0_5_54) l_0_5_58)))
 (let ((?x2797 (* (* 8.0 l_0_5_53) l_0_5_57)))
 (let ((?x2794 (* (* 8.0 l_0_5_52) l_0_5_56)))
 (let ((?x2993 (- (* (* (- 2.0) l_0_5_10) l_0_5_14) (* (* 2.0 l_0_5_11) l_0_5_7))))
 (let ((?x2997 (- (- ?x2993 (* (* 2.0 l_0_5_12) l_0_5_8)) (* (* 2.0 l_0_5_13) l_0_5_9))))
 (let ((?x3003 (+ (+ (+ (+ ?x2997 ?x2794) (* 3.0 (* l_0_5_52 l_0_5_52))) ?x2797) (* 3.0 (* l_0_5_53 l_0_5_53)))))
 (let ((?x3009 (+ (+ (+ (+ ?x3003 ?x2800) (* 3.0 (* l_0_5_54 l_0_5_54))) ?x2803) (* 3.0 (* l_0_5_55 l_0_5_55)))))
 (let ((?x3017 (- (- (- (- ?x3009 ?x2821) (* (* 3.0 l_0_5_67) l_0_5_67)) ?x2824) (* (* 3.0 l_0_5_68) l_0_5_68))))
 (let ((?x3025 (- (- (- (- ?x3017 ?x2827) (* (* 3.0 l_0_5_69) l_0_5_69)) ?x2830) (* (* 3.0 l_0_5_70) l_0_5_70))))
 (= (+ (+ (+ (+ ?x3025 ?x2472) ?x2475) ?x2478) ?x2481) 0.0))))))))))))))))))))
(assert
 (let ((?x3171 (* l_0_5_90 l_0_5_90)))
 (let ((?x3169 (* l_0_5_89 l_0_5_89)))
 (let ((?x3167 (* l_0_5_88 l_0_5_88)))
 (let ((?x3165 (* l_0_5_87 l_0_5_87)))
 (let ((?x3163 (* l_0_5_86 l_0_5_86)))
 (let ((?x3161 (* (* 4.0 l_0_5_75) l_0_5_75)))
 (let ((?x3158 (* (* 4.0 l_0_5_74) l_0_5_74)))
 (let ((?x3155 (* (* 4.0 l_0_5_73) l_0_5_73)))
 (let ((?x3152 (* (* 4.0 l_0_5_72) l_0_5_72)))
 (let ((?x3149 (* (* 4.0 l_0_5_71) l_0_5_71)))
 (let ((?x1142 (* l_0_5_60 l_0_5_60)))
 (let ((?x3132 (* 4.0 ?x1142)))
 (let ((?x1139 (* l_0_5_59 l_0_5_59)))
 (let ((?x3130 (* 4.0 ?x1139)))
 (let ((?x1136 (* l_0_5_58 l_0_5_58)))
 (let ((?x3128 (* 4.0 ?x1136)))
 (let ((?x1133 (* l_0_5_57 l_0_5_57)))
 (let ((?x3126 (* 4.0 ?x1133)))
 (let ((?x1129 (* l_0_5_56 l_0_5_56)))
 (let ((?x3124 (* 4.0 ?x1129)))
 (let ((?x3103 (* l_0_5_15 l_0_5_15)))
 (let ((?x3101 (* l_0_5_14 l_0_5_14)))
 (let ((?x3099 (* l_0_5_13 l_0_5_13)))
 (let ((?x3102 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x3099) ?x3101)))
 (let ((?x3109 (+ (- (- ?x3102 ?x3103) (* (* 24.0 l_0_5_16) l_0_5_22)) (* (* 24.0 l_0_5_31) l_0_5_37))))
 (let ((?x3114 (+ (- ?x3109 (* (* 12.0 l_0_5_46) l_0_5_52)) (* (* 6.0 l_0_5_52) l_0_5_56))))
 (let ((?x3120 (+ (+ ?x3114 (* (* 6.0 l_0_5_53) l_0_5_57)) (* (* 6.0 l_0_5_54) l_0_5_58))))
 (let ((?x3129 (+ (+ (+ (+ ?x3120 (* (* 6.0 l_0_5_55) l_0_5_59)) ?x3124) ?x3126) ?x3128)))
 (let ((?x3138 (- (+ (+ (+ ?x3129 ?x3130) ?x3132) (* (* 12.0 l_0_5_61) l_0_5_67)) (* (* 6.0 l_0_5_67) l_0_5_71))))
 (let ((?x3144 (- (- ?x3138 (* (* 6.0 l_0_5_68) l_0_5_72)) (* (* 6.0 l_0_5_69) l_0_5_73))))
 (let ((?x3156 (- (- (- (- ?x3144 (* (* 6.0 l_0_5_70) l_0_5_74)) ?x3149) ?x3152) ?x3155)))
 (let ((?x3172 (+ (+ (+ (+ (+ (- (- ?x3156 ?x3158) ?x3161) ?x3163) ?x3165) ?x3167) ?x3169) ?x3171)))
 (= ?x3172 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3263 (* l_0_5_91 l_0_5_91)))
 (let ((?x3257 (+ (* (* (- 1.0) l_0_5_16) l_0_5_16) (* 1.0 (* l_0_5_31 l_0_5_31)))))
 (let ((?x3262 (+ (- ?x3257 (* (* 1.0 l_0_5_46) l_0_5_46)) (* 1.0 (* l_0_5_61 l_0_5_61)))))
 (= (- ?x3262 ?x3263) 0.0)))))
(assert
 (let ((?x1496 (* l_0_5_76 l_0_5_76)))
 (let ((?x3281 (+ (* (* (- 2.0) l_0_5_16) l_0_5_17) (* 4.0 (* l_0_5_16 l_0_5_16)))))
 (let ((?x3286 (- (+ ?x3281 (* (* 2.0 l_0_5_31) l_0_5_32)) (* (* 4.0 l_0_5_31) l_0_5_31))))
 (let ((?x3290 (+ (- ?x3286 (* (* 2.0 l_0_5_46) l_0_5_47)) (* (* 2.0 l_0_5_61) l_0_5_62))))
 (= (- (- ?x3290 ?x1496) (* (* 2.0 l_0_5_91) l_0_5_92)) 0.0))))))
(assert
 (let ((?x3355 (* l_0_5_93 l_0_5_93)))
 (let ((?x3353 (* l_0_5_92 l_0_5_92)))
 (let ((?x1571 (* 2.0 l_0_5_76)))
 (let ((?x1572 (* ?x1571 l_0_5_77)))
 (let ((?x3330 (- (* (* 8.0 l_0_5_16) l_0_5_17) (* (* 1.0 l_0_5_17) l_0_5_17))))
 (let ((?x3335 (- (- ?x3330 (* (* 1.0 l_0_5_18) l_0_5_18)) (* (* 8.0 l_0_5_31) l_0_5_32))))
 (let ((?x3341 (+ (+ ?x3335 (* 1.0 (* l_0_5_32 l_0_5_32))) (* 1.0 (* l_0_5_33 l_0_5_33)))))
 (let ((?x3347 (- (- ?x3341 (* (* 1.0 l_0_5_47) l_0_5_47)) (* (* 1.0 l_0_5_48) l_0_5_48))))
 (let ((?x3351 (+ (+ ?x3347 (* 1.0 (* l_0_5_62 l_0_5_62))) (* 1.0 (* l_0_5_63 l_0_5_63)))))
 (= (- (- (- ?x3351 ?x1572) ?x3353) ?x3355) 0.0)))))))))))
(assert
 (let ((?x1571 (* 2.0 l_0_5_76)))
 (let ((?x1701 (* ?x1571 l_0_5_79)))
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1563 (* ?x1562 l_0_5_62)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1554 (* ?x1553 l_0_5_47)))
 (let ((?x3398 (- (* (* 8.0 l_0_5_16) l_0_5_19) (* (* 2.0 l_0_5_17) l_0_5_19))))
 (let ((?x3402 (- (- ?x3398 (* (* 2.0 l_0_5_18) l_0_5_20)) (* (* 8.0 l_0_5_31) l_0_5_34))))
 (let ((?x3406 (+ (+ ?x3402 (* (* 2.0 l_0_5_32) l_0_5_34)) (* (* 2.0 l_0_5_33) l_0_5_35))))
 (let ((?x3411 (- (- (- ?x3406 ?x1554) (* (* 2.0 l_0_5_47) l_0_5_49)) (* (* 2.0 l_0_5_48) l_0_5_50))))
 (let ((?x3416 (+ (+ (+ ?x3411 ?x1563) (* (* 2.0 l_0_5_62) l_0_5_64)) (* (* 2.0 l_0_5_63) l_0_5_65))))
 (let ((?x3421 (- (- (- ?x3416 ?x1701) (* (* 2.0 l_0_5_92) l_0_5_94)) (* (* 2.0 l_0_5_93) l_0_5_95))))
 (= ?x3421 0.0))))))))))))))
(assert
 (let ((?x1571 (* 2.0 l_0_5_76)))
 (let ((?x1981 (* ?x1571 l_0_5_86)))
 (let ((?x3482 (- (* (* (- 2.0) l_0_5_101) l_0_5_92) (* (* 2.0 l_0_5_102) l_0_5_93))))
 (let ((?x3486 (- (+ ?x3482 (* (* 8.0 l_0_5_16) l_0_5_26)) (* (* 2.0 l_0_5_17) l_0_5_26))))
 (let ((?x3490 (- (- ?x3486 (* (* 2.0 l_0_5_18) l_0_5_27)) (* (* 8.0 l_0_5_31) l_0_5_41))))
 (let ((?x3494 (+ (+ ?x3490 (* (* 2.0 l_0_5_32) l_0_5_41)) (* (* 2.0 l_0_5_33) l_0_5_42))))
 (let ((?x3498 (- (+ ?x3494 (* (* 6.0 l_0_5_46) l_0_5_47)) (* (* 2.0 l_0_5_47) l_0_5_56))))
 (let ((?x3502 (- (- ?x3498 (* (* 2.0 l_0_5_48) l_0_5_57)) (* (* 6.0 l_0_5_61) l_0_5_62))))
 (let ((?x3506 (+ (+ ?x3502 (* (* 2.0 l_0_5_62) l_0_5_71)) (* (* 2.0 l_0_5_63) l_0_5_72))))
 (= (- ?x3506 ?x1981) 0.0)))))))))))
(assert
 (let ((?x3603 (* l_0_5_96 l_0_5_96)))
 (let ((?x3601 (* l_0_5_95 l_0_5_95)))
 (let ((?x3599 (* l_0_5_94 l_0_5_94)))
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1688 (* ?x1562 l_0_5_64)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1675 (* ?x1553 l_0_5_49)))
 (let ((?x3569 (- (* (* (- 1.0) l_0_5_19) l_0_5_19) (* (* 1.0 l_0_5_20) l_0_5_20))))
 (let ((?x3575 (+ (- ?x3569 (* (* 1.0 l_0_5_21) l_0_5_21)) (* 1.0 (* l_0_5_34 l_0_5_34)))))
 (let ((?x3581 (+ (+ ?x3575 (* 1.0 (* l_0_5_35 l_0_5_35))) (* 1.0 (* l_0_5_36 l_0_5_36)))))
 (let ((?x3588 (- (- (- ?x3581 ?x1675) (* (* 1.0 l_0_5_49) l_0_5_49)) (* (* 1.0 l_0_5_50) l_0_5_50))))
 (let ((?x3594 (+ (+ (- ?x3588 (* (* 1.0 l_0_5_51) l_0_5_51)) ?x1688) (* 1.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x3598 (+ (+ ?x3594 (* 1.0 (* l_0_5_65 l_0_5_65))) (* 1.0 (* l_0_5_66 l_0_5_66)))))
 (= (- (- (- ?x3598 ?x3599) ?x3601) ?x3603) 0.0)))))))))))))))
(assert
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1967 (* ?x1562 l_0_5_71)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1951 (* ?x1553 l_0_5_56)))
 (let ((?x3649 (- (* (* (- 2.0) l_0_5_101) l_0_5_94) (* (* 2.0 l_0_5_102) l_0_5_95))))
 (let ((?x3653 (- (- ?x3649 (* (* 2.0 l_0_5_103) l_0_5_96)) (* (* 2.0 l_0_5_19) l_0_5_26))))
 (let ((?x3657 (- (- ?x3653 (* (* 2.0 l_0_5_20) l_0_5_27)) (* (* 2.0 l_0_5_21) l_0_5_28))))
 (let ((?x3661 (+ (+ ?x3657 (* (* 2.0 l_0_5_34) l_0_5_41)) (* (* 2.0 l_0_5_35) l_0_5_42))))
 (let ((?x3665 (+ (+ ?x3661 (* (* 2.0 l_0_5_36) l_0_5_43)) (* (* 6.0 l_0_5_46) l_0_5_49))))
 (let ((?x3670 (- (- (- ?x3665 ?x1951) (* (* 2.0 l_0_5_49) l_0_5_56)) (* (* 2.0 l_0_5_50) l_0_5_57))))
 (let ((?x3674 (- (- ?x3670 (* (* 2.0 l_0_5_51) l_0_5_58)) (* (* 6.0 l_0_5_61) l_0_5_64))))
 (let ((?x3679 (+ (+ (+ ?x3674 ?x1967) (* (* 2.0 l_0_5_64) l_0_5_71)) (* (* 2.0 l_0_5_65) l_0_5_72))))
 (= (+ ?x3679 (* (* 2.0 l_0_5_66) l_0_5_73)) 0.0))))))))))))))
(assert
 (let ((?x3171 (* l_0_5_90 l_0_5_90)))
 (let ((?x3169 (* l_0_5_89 l_0_5_89)))
 (let ((?x3167 (* l_0_5_88 l_0_5_88)))
 (let ((?x3165 (* l_0_5_87 l_0_5_87)))
 (let ((?x3163 (* l_0_5_86 l_0_5_86)))
 (let ((?x3749 (+ (* (* (- 24.0) l_0_5_16) l_0_5_17) (* 4.0 (* l_0_5_26 l_0_5_26)))))
 (let ((?x3763 (+ (+ ?x3749 (* 4.0 (* l_0_5_27 l_0_5_27))) (* 4.0 (* l_0_5_28 l_0_5_28)))))
 (let ((?x3767 (+ (+ ?x3763 (* 4.0 (* l_0_5_29 l_0_5_29))) (* 4.0 (* l_0_5_30 l_0_5_30)))))
 (let ((?x3772 (- (+ ?x3767 (* (* 24.0 l_0_5_31) l_0_5_32)) (* (* 4.0 l_0_5_41) l_0_5_41))))
 (let ((?x3778 (- (- ?x3772 (* (* 4.0 l_0_5_42) l_0_5_42)) (* (* 4.0 l_0_5_43) l_0_5_43))))
 (let ((?x3784 (- (- ?x3778 (* (* 4.0 l_0_5_44) l_0_5_44)) (* (* 4.0 l_0_5_45) l_0_5_45))))
 (let ((?x3788 (+ (- ?x3784 (* (* 12.0 l_0_5_46) l_0_5_47)) (* (* 6.0 l_0_5_47) l_0_5_56))))
 (let ((?x3792 (+ (+ ?x3788 (* (* 6.0 l_0_5_48) l_0_5_57)) (* (* 12.0 l_0_5_61) l_0_5_62))))
 (let ((?x3796 (- (- ?x3792 (* (* 6.0 l_0_5_62) l_0_5_71)) (* (* 6.0 l_0_5_63) l_0_5_72))))
 (= (- (- (- (- (- ?x3796 ?x3163) ?x3165) ?x3167) ?x3169) ?x3171) 0.0))))))))))))))))
(assert
 (let ((?x3879 (+ (* (* (- 24.0) l_0_5_16) l_0_5_19) (* (* 24.0 l_0_5_31) l_0_5_34))))
 (let ((?x3883 (+ (- ?x3879 (* (* 12.0 l_0_5_46) l_0_5_49)) (* (* 6.0 l_0_5_49) l_0_5_56))))
 (let ((?x3887 (+ (+ ?x3883 (* (* 6.0 l_0_5_50) l_0_5_57)) (* (* 6.0 l_0_5_51) l_0_5_58))))
 (let ((?x3893 (- (- ?x3887 (* (* 4.0 l_0_5_56) l_0_5_56)) (* (* 4.0 l_0_5_57) l_0_5_57))))
 (let ((?x3899 (- (- ?x3893 (* (* 4.0 l_0_5_58) l_0_5_58)) (* (* 4.0 l_0_5_59) l_0_5_59))))
 (let ((?x3904 (+ (- ?x3899 (* (* 4.0 l_0_5_60) l_0_5_60)) (* (* 12.0 l_0_5_61) l_0_5_64))))
 (let ((?x3908 (- (- ?x3904 (* (* 6.0 l_0_5_64) l_0_5_71)) (* (* 6.0 l_0_5_65) l_0_5_72))))
 (let ((?x3911 (+ (- ?x3908 (* (* 6.0 l_0_5_66) l_0_5_73)) (* 4.0 (* l_0_5_71 l_0_5_71)))))
 (let ((?x3913 (+ (+ ?x3911 (* 4.0 (* l_0_5_72 l_0_5_72))) (* 4.0 (* l_0_5_73 l_0_5_73)))))
 (let ((?x3915 (+ (+ ?x3913 (* 4.0 (* l_0_5_74 l_0_5_74))) (* 4.0 (* l_0_5_75 l_0_5_75)))))
 (= ?x3915 0.0))))))))))))
(assert
 (let ((?x3978 (- (* (* (- 12.0) l_0_5_17) l_0_5_17) (* (* 12.0 l_0_5_18) l_0_5_18))))
 (let ((?x3982 (+ (+ ?x3978 (* 12.0 (* l_0_5_32 l_0_5_32))) (* 12.0 (* l_0_5_33 l_0_5_33)))))
 (let ((?x3986 (- (- ?x3982 (* (* 6.0 l_0_5_47) l_0_5_47)) (* (* 6.0 l_0_5_48) l_0_5_48))))
 (let ((?x3990 (+ (+ ?x3986 (* 6.0 (* l_0_5_62 l_0_5_62))) (* 6.0 (* l_0_5_63 l_0_5_63)))))
 (= ?x3990 0.0))))))
(assert
 (let ((?x4020 (- (* (* (- 24.0) l_0_5_17) l_0_5_19) (* (* 24.0 l_0_5_18) l_0_5_20))))
 (let ((?x4026 (+ (+ ?x4020 (* (* 24.0 l_0_5_32) l_0_5_34)) (* (* 24.0 l_0_5_33) l_0_5_35))))
 (let ((?x4032 (- (- ?x4026 (* (* 12.0 l_0_5_47) l_0_5_49)) (* (* 12.0 l_0_5_48) l_0_5_50))))
 (let ((?x4038 (+ (+ ?x4032 (* (* 12.0 l_0_5_62) l_0_5_64)) (* (* 12.0 l_0_5_63) l_0_5_65))))
 (= ?x4038 0.0))))))
(assert
 (let ((?x4061 (- (* (* (- 24.0) l_0_5_17) l_0_5_22) (* (* 24.0 l_0_5_18) l_0_5_23))))
 (let ((?x4072 (+ (+ ?x4061 (* (* 24.0 l_0_5_32) l_0_5_37)) (* (* 24.0 l_0_5_33) l_0_5_38))))
 (let ((?x4076 (- (- ?x4072 (* (* 12.0 l_0_5_47) l_0_5_52)) (* (* 12.0 l_0_5_48) l_0_5_53))))
 (let ((?x4080 (+ (+ ?x4076 (* (* 12.0 l_0_5_62) l_0_5_67)) (* (* 12.0 l_0_5_63) l_0_5_68))))
 (= ?x4080 0.0))))))
(assert
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1563 (* ?x1562 l_0_5_62)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1554 (* ?x1553 l_0_5_47)))
 (let ((?x4103 (- (* (* (- 24.0) l_0_5_17) l_0_5_26) (* (* 24.0 l_0_5_18) l_0_5_27))))
 (let ((?x4114 (+ (+ ?x4103 (* (* 24.0 l_0_5_32) l_0_5_41)) (* (* 24.0 l_0_5_33) l_0_5_42))))
 (let ((?x4119 (- (- (+ ?x4114 ?x1554) (* (* 12.0 l_0_5_47) l_0_5_56)) (* (* 12.0 l_0_5_48) l_0_5_57))))
 (let ((?x4124 (+ (+ (- ?x4119 ?x1563) (* (* 12.0 l_0_5_62) l_0_5_71)) (* (* 12.0 l_0_5_63) l_0_5_72))))
 (= ?x4124 0.0))))))))))
(assert
 (let ((?x4155 (- (* (* (- 12.0) l_0_5_19) l_0_5_19) (* (* 12.0 l_0_5_20) l_0_5_20))))
 (let ((?x4160 (+ (- ?x4155 (* (* 12.0 l_0_5_21) l_0_5_21)) (* 12.0 (* l_0_5_34 l_0_5_34)))))
 (let ((?x4164 (+ (+ ?x4160 (* 12.0 (* l_0_5_35 l_0_5_35))) (* 12.0 (* l_0_5_36 l_0_5_36)))))
 (let ((?x4168 (- (- ?x4164 (* (* 6.0 l_0_5_49) l_0_5_49)) (* (* 6.0 l_0_5_50) l_0_5_50))))
 (let ((?x4172 (+ (- ?x4168 (* (* 6.0 l_0_5_51) l_0_5_51)) (* 6.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x4176 (+ (+ ?x4172 (* 6.0 (* l_0_5_65 l_0_5_65))) (* 6.0 (* l_0_5_66 l_0_5_66)))))
 (= ?x4176 0.0))))))))
(assert
 (let ((?x4218 (- (* (* (- 24.0) l_0_5_19) l_0_5_22) (* (* 24.0 l_0_5_20) l_0_5_23))))
 (let ((?x4224 (+ (- ?x4218 (* (* 24.0 l_0_5_21) l_0_5_24)) (* (* 24.0 l_0_5_34) l_0_5_37))))
 (let ((?x4230 (+ (+ ?x4224 (* (* 24.0 l_0_5_35) l_0_5_38)) (* (* 24.0 l_0_5_36) l_0_5_39))))
 (let ((?x4236 (- (- ?x4230 (* (* 12.0 l_0_5_49) l_0_5_52)) (* (* 12.0 l_0_5_50) l_0_5_53))))
 (let ((?x4242 (+ (- ?x4236 (* (* 12.0 l_0_5_51) l_0_5_54)) (* (* 12.0 l_0_5_64) l_0_5_67))))
 (let ((?x4248 (+ (+ ?x4242 (* (* 12.0 l_0_5_65) l_0_5_68)) (* (* 12.0 l_0_5_66) l_0_5_69))))
 (= ?x4248 0.0))))))))
(assert
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1688 (* ?x1562 l_0_5_64)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1675 (* ?x1553 l_0_5_49)))
 (let ((?x4282 (- (* (* (- 24.0) l_0_5_19) l_0_5_26) (* (* 24.0 l_0_5_20) l_0_5_27))))
 (let ((?x4295 (+ (- ?x4282 (* (* 24.0 l_0_5_21) l_0_5_28)) (* (* 24.0 l_0_5_34) l_0_5_41))))
 (let ((?x4299 (+ (+ ?x4295 (* (* 24.0 l_0_5_35) l_0_5_42)) (* (* 24.0 l_0_5_36) l_0_5_43))))
 (let ((?x4304 (- (- (+ ?x4299 ?x1675) (* (* 12.0 l_0_5_49) l_0_5_56)) (* (* 12.0 l_0_5_50) l_0_5_57))))
 (let ((?x4309 (+ (- (- ?x4304 (* (* 12.0 l_0_5_51) l_0_5_58)) ?x1688) (* (* 12.0 l_0_5_64) l_0_5_71))))
 (let ((?x4313 (+ (+ ?x4309 (* (* 12.0 l_0_5_65) l_0_5_72)) (* (* 12.0 l_0_5_66) l_0_5_73))))
 (= ?x4313 0.0))))))))))))
(assert
 (let ((?x1848 (* l_0_5_70 l_0_5_70)))
 (let ((?x4385 (* 6.0 ?x1848)))
 (let ((?x1845 (* l_0_5_69 l_0_5_69)))
 (let ((?x4383 (* 6.0 ?x1845)))
 (let ((?x1842 (* l_0_5_68 l_0_5_68)))
 (let ((?x4381 (* 6.0 ?x1842)))
 (let ((?x1839 (* l_0_5_67 l_0_5_67)))
 (let ((?x4379 (* 6.0 ?x1839)))
 (let ((?x1822 (* l_0_5_40 l_0_5_40)))
 (let ((?x4369 (* 12.0 ?x1822)))
 (let ((?x1819 (* l_0_5_39 l_0_5_39)))
 (let ((?x4367 (* 12.0 ?x1819)))
 (let ((?x1816 (* l_0_5_38 l_0_5_38)))
 (let ((?x4365 (* 12.0 ?x1816)))
 (let ((?x1813 (* l_0_5_37 l_0_5_37)))
 (let ((?x4363 (* 12.0 ?x1813)))
 (let ((?x4356 (- (* (* (- 12.0) l_0_5_22) l_0_5_22) (* (* 12.0 l_0_5_23) l_0_5_23))))
 (let ((?x4362 (- (- ?x4356 (* (* 12.0 l_0_5_24) l_0_5_24)) (* (* 12.0 l_0_5_25) l_0_5_25))))
 (let ((?x4372 (- (+ (+ (+ (+ ?x4362 ?x4363) ?x4365) ?x4367) ?x4369) (* (* 6.0 l_0_5_52) l_0_5_52))))
 (let ((?x4376 (- (- ?x4372 (* (* 6.0 l_0_5_53) l_0_5_53)) (* (* 6.0 l_0_5_54) l_0_5_54))))
 (let ((?x4384 (+ (+ (+ (- ?x4376 (* (* 6.0 l_0_5_55) l_0_5_55)) ?x4379) ?x4381) ?x4383)))
 (= (+ ?x4384 ?x4385) 0.0)))))))))))))))))))))))
(assert
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1690 (* ?x1562 l_0_5_67)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1677 (* ?x1553 l_0_5_52)))
 (let ((?x4431 (- (* (* (- 24.0) l_0_5_22) l_0_5_26) (* (* 24.0 l_0_5_23) l_0_5_27))))
 (let ((?x4437 (- (- ?x4431 (* (* 24.0 l_0_5_24) l_0_5_28)) (* (* 24.0 l_0_5_25) l_0_5_29))))
 (let ((?x4443 (+ (+ ?x4437 (* (* 24.0 l_0_5_37) l_0_5_41)) (* (* 24.0 l_0_5_38) l_0_5_42))))
 (let ((?x4449 (+ (+ ?x4443 (* (* 24.0 l_0_5_39) l_0_5_43)) (* (* 24.0 l_0_5_40) l_0_5_44))))
 (let ((?x4456 (- (- (+ ?x4449 ?x1677) (* (* 12.0 l_0_5_52) l_0_5_56)) (* (* 12.0 l_0_5_53) l_0_5_57))))
 (let ((?x4462 (- (- ?x4456 (* (* 12.0 l_0_5_54) l_0_5_58)) (* (* 12.0 l_0_5_55) l_0_5_59))))
 (let ((?x4469 (+ (+ (- ?x4462 ?x1690) (* (* 12.0 l_0_5_67) l_0_5_71)) (* (* 12.0 l_0_5_68) l_0_5_72))))
 (let ((?x4475 (+ (+ ?x4469 (* (* 12.0 l_0_5_69) l_0_5_73)) (* (* 12.0 l_0_5_70) l_0_5_74))))
 (= ?x4475 0.0))))))))))))))
(assert
 (let ((?x1562 (* 8.0 l_0_5_61)))
 (let ((?x1967 (* ?x1562 l_0_5_71)))
 (let ((?x1553 (* 8.0 l_0_5_46)))
 (let ((?x1951 (* ?x1553 l_0_5_56)))
 (let ((?x4530 (- (* (* (- 12.0) l_0_5_26) l_0_5_26) (* (* 12.0 l_0_5_27) l_0_5_27))))
 (let ((?x4536 (- (- ?x4530 (* (* 12.0 l_0_5_28) l_0_5_28)) (* (* 12.0 l_0_5_29) l_0_5_29))))
 (let ((?x4541 (+ (- ?x4536 (* (* 12.0 l_0_5_30) l_0_5_30)) (* 12.0 (* l_0_5_41 l_0_5_41)))))
 (let ((?x4545 (+ (+ ?x4541 (* 12.0 (* l_0_5_42 l_0_5_42))) (* 12.0 (* l_0_5_43 l_0_5_43)))))
 (let ((?x4549 (+ (+ ?x4545 (* 12.0 (* l_0_5_44 l_0_5_44))) (* 12.0 (* l_0_5_45 l_0_5_45)))))
 (let ((?x4556 (- (- (+ ?x4549 ?x1951) (* (* 6.0 l_0_5_56) l_0_5_56)) (* (* 6.0 l_0_5_57) l_0_5_57))))
 (let ((?x4562 (- (- ?x4556 (* (* 6.0 l_0_5_58) l_0_5_58)) (* (* 6.0 l_0_5_59) l_0_5_59))))
 (let ((?x4568 (+ (- (- ?x4562 (* (* 6.0 l_0_5_60) l_0_5_60)) ?x1967) (* 6.0 (* l_0_5_71 l_0_5_71)))))
 (let ((?x4572 (+ (+ ?x4568 (* 6.0 (* l_0_5_72 l_0_5_72))) (* 6.0 (* l_0_5_73 l_0_5_73)))))
 (let ((?x4576 (+ (+ ?x4572 (* 6.0 (* l_0_5_74 l_0_5_74))) (* 6.0 (* l_0_5_75 l_0_5_75)))))
 (= ?x4576 0.0))))))))))))))))
(assert
 (let ((?x2126 (* l_0_5_78 l_0_5_78)))
 (let ((?x2121 (* l_0_5_77 l_0_5_77)))
 (let ((?x4642 (+ (* 4.0 (* l_0_5_17 l_0_5_17)) (* 4.0 (* l_0_5_18 l_0_5_18)))))
 (let ((?x4648 (- (- ?x4642 (* (* 4.0 l_0_5_32) l_0_5_32)) (* (* 4.0 l_0_5_33) l_0_5_33))))
 (= (- (- ?x4648 ?x2121) ?x2126) 0.0))))))
(assert
 (let ((?x2123 (* 2.0 l_0_5_78)))
 (let ((?x2221 (* ?x2123 l_0_5_80)))
 (let ((?x2118 (* 2.0 l_0_5_77)))
 (let ((?x2219 (* ?x2118 l_0_5_79)))
 (let ((?x4674 (+ (* (* 8.0 l_0_5_17) l_0_5_19) (* (* 8.0 l_0_5_18) l_0_5_20))))
 (let ((?x4678 (- (- ?x4674 (* (* 8.0 l_0_5_32) l_0_5_34)) (* (* 8.0 l_0_5_33) l_0_5_35))))
 (let ((?x4684 (- (- ?x4678 (* (* 4.0 l_0_5_47) l_0_5_47)) (* (* 4.0 l_0_5_48) l_0_5_48))))
 (let ((?x4686 (+ (+ ?x4684 (* 4.0 (* l_0_5_62 l_0_5_62))) (* 4.0 (* l_0_5_63 l_0_5_63)))))
 (= (- (- ?x4686 ?x2219) ?x2221) 0.0))))))))))
(assert
 (let ((?x2123 (* 2.0 l_0_5_78)))
 (let ((?x2469 (* ?x2123 l_0_5_87)))
 (let ((?x2118 (* 2.0 l_0_5_77)))
 (let ((?x2467 (* ?x2118 l_0_5_86)))
 (let ((?x2109 (* l_0_5_48 l_0_5_48)))
 (let ((?x4731 (* 3.0 ?x2109)))
 (let ((?x2106 (* l_0_5_47 l_0_5_47)))
 (let ((?x4729 (* 3.0 ?x2106)))
 (let ((?x4724 (+ (* (* 8.0 l_0_5_17) l_0_5_26) (* (* 8.0 l_0_5_18) l_0_5_27))))
 (let ((?x4728 (- (- ?x4724 (* (* 8.0 l_0_5_32) l_0_5_41)) (* (* 8.0 l_0_5_33) l_0_5_42))))
 (let ((?x4738 (- (- (+ (+ ?x4728 ?x4729) ?x4731) (* (* 3.0 l_0_5_62) l_0_5_62)) (* (* 3.0 l_0_5_63) l_0_5_63))))
 (= (- (- ?x4738 ?x2467) ?x2469) 0.0)))))))))))))
(assert
 (let ((?x2622 (* l_0_5_81 l_0_5_81)))
 (let ((?x2620 (* l_0_5_80 l_0_5_80)))
 (let ((?x2618 (* l_0_5_79 l_0_5_79)))
 (let ((?x2214 (* 8.0 l_0_5_63)))
 (let ((?x2215 (* ?x2214 l_0_5_65)))
 (let ((?x2209 (* 8.0 l_0_5_62)))
 (let ((?x2210 (* ?x2209 l_0_5_64)))
 (let ((?x2204 (* 8.0 l_0_5_48)))
 (let ((?x2205 (* ?x2204 l_0_5_50)))
 (let ((?x2199 (* 8.0 l_0_5_47)))
 (let ((?x2200 (* ?x2199 l_0_5_49)))
 (let ((?x4777 (+ (* 4.0 (* l_0_5_19 l_0_5_19)) (* 4.0 (* l_0_5_20 l_0_5_20)))))
 (let ((?x4782 (- (+ ?x4777 (* 4.0 (* l_0_5_21 l_0_5_21))) (* (* 4.0 l_0_5_34) l_0_5_34))))
 (let ((?x4788 (- (- ?x4782 (* (* 4.0 l_0_5_35) l_0_5_35)) (* (* 4.0 l_0_5_36) l_0_5_36))))
 (let ((?x4795 (- (- (- (+ (+ (- (- ?x4788 ?x2200) ?x2205) ?x2210) ?x2215) ?x2618) ?x2620) ?x2622)))
 (= ?x4795 0.0)))))))))))))))))
(assert
 (let ((?x2229 (* 2.0 l_0_5_81)))
 (let ((?x2836 (* ?x2229 l_0_5_88)))
 (let ((?x2226 (* 2.0 l_0_5_80)))
 (let ((?x2834 (* ?x2226 l_0_5_87)))
 (let ((?x2223 (* 2.0 l_0_5_79)))
 (let ((?x2832 (* ?x2223 l_0_5_86)))
 (let ((?x2214 (* 8.0 l_0_5_63)))
 (let ((?x2465 (* ?x2214 l_0_5_72)))
 (let ((?x2209 (* 8.0 l_0_5_62)))
 (let ((?x2460 (* ?x2209 l_0_5_71)))
 (let ((?x2204 (* 8.0 l_0_5_48)))
 (let ((?x2455 (* ?x2204 l_0_5_57)))
 (let ((?x2199 (* 8.0 l_0_5_47)))
 (let ((?x2450 (* ?x2199 l_0_5_56)))
 (let ((?x4833 (+ (* (* 8.0 l_0_5_19) l_0_5_26) (* (* 8.0 l_0_5_20) l_0_5_27))))
 (let ((?x4837 (- (+ ?x4833 (* (* 8.0 l_0_5_21) l_0_5_28)) (* (* 8.0 l_0_5_34) l_0_5_41))))
 (let ((?x4841 (- (- ?x4837 (* (* 8.0 l_0_5_35) l_0_5_42)) (* (* 8.0 l_0_5_36) l_0_5_43))))
 (let ((?x4846 (+ (- (+ ?x4841 (* (* 6.0 l_0_5_47) l_0_5_49)) ?x2450) (* (* 6.0 l_0_5_48) l_0_5_50))))
 (let ((?x4852 (- (+ (- (- ?x4846 ?x2455) (* (* 6.0 l_0_5_62) l_0_5_64)) ?x2460) (* (* 6.0 l_0_5_63) l_0_5_65))))
 (= (- (- (- (+ ?x4852 ?x2465) ?x2832) ?x2834) ?x2836) 0.0)))))))))))))))))))))
(assert
 (let ((?x2116 (* (* 4.0 l_0_5_63) l_0_5_63)))
 (let ((?x2113 (* (* 4.0 l_0_5_62) l_0_5_62)))
 (let ((?x2109 (* l_0_5_48 l_0_5_48)))
 (let ((?x2110 (* 4.0 ?x2109)))
 (let ((?x2106 (* l_0_5_47 l_0_5_47)))
 (let ((?x2107 (* 4.0 ?x2106)))
 (= (- (- (+ ?x2107 ?x2110) ?x2113) ?x2116) 0.0))))))))
(assert
 (let ((?x2214 (* 8.0 l_0_5_63)))
 (let ((?x2215 (* ?x2214 l_0_5_65)))
 (let ((?x2209 (* 8.0 l_0_5_62)))
 (let ((?x2210 (* ?x2209 l_0_5_64)))
 (let ((?x2204 (* 8.0 l_0_5_48)))
 (let ((?x2205 (* ?x2204 l_0_5_50)))
 (let ((?x2199 (* 8.0 l_0_5_47)))
 (let ((?x2200 (* ?x2199 l_0_5_49)))
 (= (- (- (+ ?x2200 ?x2205) ?x2210) ?x2215) 0.0))))))))))
(assert
 (let ((?x2214 (* 8.0 l_0_5_63)))
 (let ((?x2217 (* ?x2214 l_0_5_68)))
 (let ((?x2209 (* 8.0 l_0_5_62)))
 (let ((?x2212 (* ?x2209 l_0_5_67)))
 (let ((?x2204 (* 8.0 l_0_5_48)))
 (let ((?x2207 (* ?x2204 l_0_5_53)))
 (let ((?x2199 (* 8.0 l_0_5_47)))
 (let ((?x2202 (* ?x2199 l_0_5_52)))
 (= (- (- (+ ?x2202 ?x2207) ?x2212) ?x2217) 0.0))))))))))
(assert
 (let ((?x2214 (* 8.0 l_0_5_63)))
 (let ((?x2465 (* ?x2214 l_0_5_72)))
 (let ((?x2209 (* 8.0 l_0_5_62)))
 (let ((?x2460 (* ?x2209 l_0_5_71)))
 (let ((?x2204 (* 8.0 l_0_5_48)))
 (let ((?x2455 (* ?x2204 l_0_5_57)))
 (let ((?x2199 (* 8.0 l_0_5_47)))
 (let ((?x2450 (* ?x2199 l_0_5_56)))
 (= (- (- (+ ?x2450 ?x2455) ?x2460) ?x2465) 0.0))))))))))
(assert
 (let ((?x2616 (* (* 4.0 l_0_5_66) l_0_5_66)))
 (let ((?x2610 (* (* 4.0 l_0_5_65) l_0_5_65)))
 (let ((?x2604 (* (* 4.0 l_0_5_64) l_0_5_64)))
 (let ((?x2595 (* l_0_5_51 l_0_5_51)))
 (let ((?x2596 (* 4.0 ?x2595)))
 (let ((?x2589 (* l_0_5_50 l_0_5_50)))
 (let ((?x2590 (* 4.0 ?x2589)))
 (let ((?x2581 (* l_0_5_49 l_0_5_49)))
 (let ((?x2582 (* 4.0 ?x2581)))
 (= (- (- (- (+ (+ ?x2582 ?x2590) ?x2596) ?x2604) ?x2610) ?x2616) 0.0)))))))))))
(assert
 (let ((?x2612 (* 8.0 l_0_5_66)))
 (let ((?x2613 (* ?x2612 l_0_5_69)))
 (let ((?x2606 (* 8.0 l_0_5_65)))
 (let ((?x2607 (* ?x2606 l_0_5_68)))
 (let ((?x2600 (* 8.0 l_0_5_64)))
 (let ((?x2601 (* ?x2600 l_0_5_67)))
 (let ((?x2592 (* 8.0 l_0_5_51)))
 (let ((?x2593 (* ?x2592 l_0_5_54)))
 (let ((?x2586 (* 8.0 l_0_5_50)))
 (let ((?x2587 (* ?x2586 l_0_5_53)))
 (let ((?x2578 (* 8.0 l_0_5_49)))
 (let ((?x2579 (* ?x2578 l_0_5_52)))
 (= (- (- (- (+ (+ ?x2579 ?x2587) ?x2593) ?x2601) ?x2607) ?x2613) 0.0))))))))))))))
(assert
 (let ((?x2612 (* 8.0 l_0_5_66)))
 (let ((?x2818 (* ?x2612 l_0_5_73)))
 (let ((?x2606 (* 8.0 l_0_5_65)))
 (let ((?x2813 (* ?x2606 l_0_5_72)))
 (let ((?x2600 (* 8.0 l_0_5_64)))
 (let ((?x2808 (* ?x2600 l_0_5_71)))
 (let ((?x2592 (* 8.0 l_0_5_51)))
 (let ((?x2791 (* ?x2592 l_0_5_58)))
 (let ((?x2586 (* 8.0 l_0_5_50)))
 (let ((?x2786 (* ?x2586 l_0_5_57)))
 (let ((?x2578 (* 8.0 l_0_5_49)))
 (let ((?x2781 (* ?x2578 l_0_5_56)))
 (= (- (- (- (+ (+ ?x2781 ?x2786) ?x2791) ?x2808) ?x2813) ?x2818) 0.0))))))))))))))
(assert
 (let ((?x2946 (* (* 4.0 l_0_5_70) l_0_5_70)))
 (let ((?x2941 (* (* 4.0 l_0_5_69) l_0_5_69)))
 (let ((?x2938 (* (* 4.0 l_0_5_68) l_0_5_68)))
 (let ((?x2935 (* (* 4.0 l_0_5_67) l_0_5_67)))
 (let ((?x1893 (* l_0_5_55 l_0_5_55)))
 (let ((?x2750 (* 4.0 ?x1893)))
 (let ((?x1889 (* l_0_5_54 l_0_5_54)))
 (let ((?x2745 (* 4.0 ?x1889)))
 (let ((?x1885 (* l_0_5_53 l_0_5_53)))
 (let ((?x2740 (* 4.0 ?x1885)))
 (let ((?x1881 (* l_0_5_52 l_0_5_52)))
 (let ((?x2735 (* 4.0 ?x1881)))
 (let ((?x5001 (- (- (- (- (+ (+ (+ ?x2735 ?x2740) ?x2745) ?x2750) ?x2935) ?x2938) ?x2941) ?x2946)))
 (= ?x5001 0.0)))))))))))))))
(assert
 (let ((?x2830 (* (* 8.0 l_0_5_70) l_0_5_74)))
 (let ((?x2827 (* (* 8.0 l_0_5_69) l_0_5_73)))
 (let ((?x2824 (* (* 8.0 l_0_5_68) l_0_5_72)))
 (let ((?x2821 (* (* 8.0 l_0_5_67) l_0_5_71)))
 (let ((?x2803 (* (* 8.0 l_0_5_55) l_0_5_59)))
 (let ((?x2800 (* (* 8.0 l_0_5_54) l_0_5_58)))
 (let ((?x2797 (* (* 8.0 l_0_5_53) l_0_5_57)))
 (let ((?x2794 (* (* 8.0 l_0_5_52) l_0_5_56)))
 (let ((?x5020 (- (- (- (- (+ (+ (+ ?x2794 ?x2797) ?x2800) ?x2803) ?x2821) ?x2824) ?x2827) ?x2830)))
 (= ?x5020 0.0)))))))))))
(assert
 (let ((?x3161 (* (* 4.0 l_0_5_75) l_0_5_75)))
 (let ((?x3158 (* (* 4.0 l_0_5_74) l_0_5_74)))
 (let ((?x3155 (* (* 4.0 l_0_5_73) l_0_5_73)))
 (let ((?x3152 (* (* 4.0 l_0_5_72) l_0_5_72)))
 (let ((?x3149 (* (* 4.0 l_0_5_71) l_0_5_71)))
 (let ((?x1142 (* l_0_5_60 l_0_5_60)))
 (let ((?x3132 (* 4.0 ?x1142)))
 (let ((?x1139 (* l_0_5_59 l_0_5_59)))
 (let ((?x3130 (* 4.0 ?x1139)))
 (let ((?x1136 (* l_0_5_58 l_0_5_58)))
 (let ((?x3128 (* 4.0 ?x1136)))
 (let ((?x1133 (* l_0_5_57 l_0_5_57)))
 (let ((?x3126 (* 4.0 ?x1133)))
 (let ((?x1129 (* l_0_5_56 l_0_5_56)))
 (let ((?x3124 (* 4.0 ?x1129)))
 (let ((?x5038 (- (- (- (+ (+ (+ (+ ?x3124 ?x3126) ?x3128) ?x3130) ?x3132) ?x3149) ?x3152) ?x3155)))
 (= (- (- ?x5038 ?x3158) ?x3161) 0.0))))))))))))))))))
(assert
 (let ((?x2612 (* 8.0 l_0_5_66)))
 (let ((?x2818 (* ?x2612 l_0_5_73)))
 (let ((?x2606 (* 8.0 l_0_5_65)))
 (let ((?x2813 (* ?x2606 l_0_5_72)))
 (let ((?x2600 (* 8.0 l_0_5_64)))
 (let ((?x2808 (* ?x2600 l_0_5_71)))
 (let ((?x2595 (* l_0_5_51 l_0_5_51)))
 (let ((?x5062 (* 3.0 ?x2595)))
 (let ((?x2592 (* 8.0 l_0_5_51)))
 (let ((?x2791 (* ?x2592 l_0_5_58)))
 (let ((?x2589 (* l_0_5_50 l_0_5_50)))
 (let ((?x5059 (* 3.0 ?x2589)))
 (let ((?x2586 (* 8.0 l_0_5_50)))
 (let ((?x2786 (* ?x2586 l_0_5_57)))
 (let ((?x2581 (* l_0_5_49 l_0_5_49)))
 (let ((?x5056 (* 3.0 ?x2581)))
 (let ((?x5061 (- (+ (- (+ (* (* (- 8.0) l_0_5_49) l_0_5_56) ?x5056) ?x2786) ?x5059) ?x2791)))
 (let ((?x5068 (+ (- (+ (+ ?x5061 ?x5062) ?x2808) (* (* 3.0 l_0_5_64) l_0_5_64)) ?x2813)))
 (let ((?x5075 (- (+ (- ?x5068 (* (* 3.0 l_0_5_65) l_0_5_65)) ?x2818) (* (* 3.0 l_0_5_66) l_0_5_66))))
 (= ?x5075 0.0)))))))))))))))))))))
(assert
 (let ((?x2670 (* l_0_5_66 l_0_5_66)))
 (let ((?x2671 (* 4.0 ?x2670)))
 (let ((?x2662 (* l_0_5_65 l_0_5_65)))
 (let ((?x2663 (* 4.0 ?x2662)))
 (let ((?x2654 (* l_0_5_64 l_0_5_64)))
 (let ((?x2655 (* 4.0 ?x2654)))
 (let ((?x5111 (- (* (* (- 4.0) l_0_5_49) l_0_5_49) (* (* 4.0 l_0_5_50) l_0_5_50))))
 (let ((?x5117 (+ (+ (+ (- ?x5111 (* (* 4.0 l_0_5_51) l_0_5_51)) ?x2655) ?x2663) ?x2671)))
 (= ?x5117 0.0))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_91 0.0))
(assert
 (>= l_0_5_93 0.0))
(assert
 (>= l_0_5_96 0.0))
(assert
 (>= l_0_5_100 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (let ((?x5177 (* l_0_6_61 l_0_6_61)))
 (let ((?x5178 (* 4.0 ?x5177)))
 (let ((?x5164 (- (* (* (- 2.0) l_0_6_106) l_0_6_109) (* (* 2.0 l_0_6_16) l_0_6_19))))
 (let ((?x5170 (- (+ ?x5164 (* (* 2.0 l_0_6_31) l_0_6_34)) (* (* 2.0 l_0_6_46) l_0_6_49))))
 (let ((?x5176 (+ (- ?x5170 (* (* 4.0 l_0_6_46) l_0_6_46)) (* (* 2.0 l_0_6_61) l_0_6_64))))
 (= (+ (- (+ ?x5176 ?x5178) (* (* 2.0 l_0_6_91) l_0_6_94)) 4.0) 0.0)))))))
(assert
 (let ((?x5246 (* (* 4.0 l_0_6_61) l_0_6_61)))
 (let ((?x5202 (* l_0_6_46 l_0_6_46)))
 (let ((?x5203 (* 4.0 ?x5202)))
 (let ((?x5222 (+ (* (* (- 24.0) l_0_6_16) l_0_6_26) (* (* 24.0 l_0_6_31) l_0_6_41))))
 (let ((?x5229 (+ (+ (- ?x5222 (* (* 12.0 l_0_6_46) l_0_6_56)) ?x5203) (* 3.0 (* l_0_6_56 l_0_6_56)))))
 (let ((?x5235 (+ (+ ?x5229 (* 3.0 (* l_0_6_57 l_0_6_57))) (* 3.0 (* l_0_6_58 l_0_6_58)))))
 (let ((?x5241 (+ (+ ?x5235 (* 3.0 (* l_0_6_59 l_0_6_59))) (* 3.0 (* l_0_6_60 l_0_6_60)))))
 (let ((?x5250 (- (- (+ ?x5241 (* (* 12.0 l_0_6_61) l_0_6_71)) ?x5246) (* (* 3.0 l_0_6_71) l_0_6_71))))
 (let ((?x5256 (- (- ?x5250 (* (* 3.0 l_0_6_72) l_0_6_72)) (* (* 3.0 l_0_6_73) l_0_6_73))))
 (let ((?x5262 (- (- ?x5256 (* (* 3.0 l_0_6_74) l_0_6_74)) (* (* 3.0 l_0_6_75) l_0_6_75))))
 (= (- ?x5262 4.0) 0.0))))))))))))
(assert
 (let ((?x5177 (* l_0_6_61 l_0_6_61)))
 (let ((?x5404 (* 6.0 ?x5177)))
 (let ((?x5363 (* l_0_6_31 l_0_6_31)))
 (let ((?x5364 (* 12.0 ?x5363)))
 (let ((?x5343 (* l_0_6_120 l_0_6_120)))
 (let ((?x5341 (* l_0_6_119 l_0_6_119)))
 (let ((?x5339 (* l_0_6_118 l_0_6_118)))
 (let ((?x5337 (* l_0_6_117 l_0_6_117)))
 (let ((?x5335 (* l_0_6_116 l_0_6_116)))
 (let ((?x5333 (* l_0_6_105 l_0_6_105)))
 (let ((?x5331 (* l_0_6_104 l_0_6_104)))
 (let ((?x5329 (* l_0_6_103 l_0_6_103)))
 (let ((?x5330 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x5329)))
 (let ((?x5344 (- (- (- (- (- (- (- ?x5330 ?x5331) ?x5333) ?x5335) ?x5337) ?x5339) ?x5341) ?x5343)))
 (let ((?x5350 (- (- ?x5344 (* (* 12.0 l_0_6_16) l_0_6_16)) (* (* 1.0 l_0_6_26) l_0_6_26))))
 (let ((?x5356 (- (- ?x5350 (* (* 1.0 l_0_6_27) l_0_6_27)) (* (* 1.0 l_0_6_28) l_0_6_28))))
 (let ((?x5362 (- (- ?x5356 (* (* 1.0 l_0_6_29) l_0_6_29)) (* (* 1.0 l_0_6_30) l_0_6_30))))
 (let ((?x5371 (+ (+ (+ ?x5362 ?x5364) (* 1.0 (* l_0_6_41 l_0_6_41))) (* 1.0 (* l_0_6_42 l_0_6_42)))))
 (let ((?x5377 (+ (+ ?x5371 (* 1.0 (* l_0_6_43 l_0_6_43))) (* 1.0 (* l_0_6_44 l_0_6_44)))))
 (let ((?x5383 (+ (+ ?x5377 (* 1.0 (* l_0_6_45 l_0_6_45))) (* (* 6.0 l_0_6_46) l_0_6_56))))
 (let ((?x5388 (- (- ?x5383 (* (* 6.0 l_0_6_46) l_0_6_46)) (* (* 1.0 l_0_6_56) l_0_6_56))))
 (let ((?x5394 (- (- ?x5388 (* (* 1.0 l_0_6_57) l_0_6_57)) (* (* 1.0 l_0_6_58) l_0_6_58))))
 (let ((?x5400 (- (- ?x5394 (* (* 1.0 l_0_6_59) l_0_6_59)) (* (* 1.0 l_0_6_60) l_0_6_60))))
 (let ((?x5407 (+ (+ (- ?x5400 (* (* 6.0 l_0_6_61) l_0_6_71)) ?x5404) (* 1.0 (* l_0_6_71 l_0_6_71)))))
 (let ((?x5411 (+ (+ ?x5407 (* 1.0 (* l_0_6_72 l_0_6_72))) (* 1.0 (* l_0_6_73 l_0_6_73)))))
 (let ((?x5415 (+ (+ ?x5411 (* 1.0 (* l_0_6_74 l_0_6_74))) (* 1.0 (* l_0_6_75 l_0_6_75)))))
 (= (+ ?x5415 6.0) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x5507 (- (* (* (- 2.0) l_0_6_101) l_0_6_91) (* (* 2.0 l_0_6_106) l_0_6_116))))
 (let ((?x5511 (+ (- ?x5507 (* (* 2.0 l_0_6_16) l_0_6_26)) (* (* 2.0 l_0_6_31) l_0_6_41))))
 (let ((?x5515 (+ (- ?x5511 (* (* 2.0 l_0_6_46) l_0_6_56)) (* 3.0 (* l_0_6_46 l_0_6_46)))))
 (let ((?x5520 (- (+ ?x5515 (* (* 2.0 l_0_6_61) l_0_6_71)) (* (* 3.0 l_0_6_61) l_0_6_61))))
 (= (- ?x5520 3.0) 0.0))))))
(assert
 (let ((?x5571 (* l_0_6_91 l_0_6_91)))
 (let ((?x5563 (- (* (- l_0_6_106) l_0_6_106) (* (* 1.0 l_0_6_16) l_0_6_16))))
 (let ((?x5568 (- (+ ?x5563 (* 1.0 (* l_0_6_31 l_0_6_31))) (* (* 1.0 l_0_6_46) l_0_6_46))))
 (= (+ (- (+ ?x5568 (* 1.0 (* l_0_6_61 l_0_6_61))) ?x5571) 1.0) 0.0)))))
(assert
 (let ((?x5604 (* l_0_6_76 l_0_6_76)))
 (let ((?x5246 (* (* 4.0 l_0_6_61) l_0_6_61)))
 (let ((?x5202 (* l_0_6_46 l_0_6_46)))
 (let ((?x5203 (* 4.0 ?x5202)))
 (let ((?x5595 (- (- (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_106) l_0_6_112)) (* (* 2.0 l_0_6_16) l_0_6_22))))
 (let ((?x5599 (- (+ ?x5595 (* (* 2.0 l_0_6_31) l_0_6_37)) (* (* 2.0 l_0_6_46) l_0_6_52))))
 (let ((?x5605 (+ (- (+ (+ ?x5599 ?x5203) (* (* 2.0 l_0_6_61) l_0_6_67)) ?x5246) ?x5604)))
 (= (- ?x5605 (* (* 2.0 l_0_6_91) l_0_6_97)) 0.0)))))))))
(assert
 (let ((?x5694 (* 2.0 l_0_6_76)))
 (let ((?x5697 (* ?x5694 l_0_6_82)))
 (let ((?x5695 (* ?x5694 l_0_6_77)))
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x5686 (* ?x5685 l_0_6_62)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x5677 (* ?x5676 l_0_6_47)))
 (let ((?x5654 (- (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 2.0 l_0_6_107) l_0_6_112))))
 (let ((?x5660 (+ (- ?x5654 (* (* 2.0 l_0_6_108) l_0_6_113)) (* (* 8.0 l_0_6_16) l_0_6_22))))
 (let ((?x5666 (- (- ?x5660 (* (* 2.0 l_0_6_17) l_0_6_22)) (* (* 2.0 l_0_6_18) l_0_6_23))))
 (let ((?x5672 (+ (- ?x5666 (* (* 8.0 l_0_6_31) l_0_6_37)) (* (* 2.0 l_0_6_32) l_0_6_37))))
 (let ((?x5681 (- (+ (+ ?x5672 (* (* 2.0 l_0_6_33) l_0_6_38)) ?x5677) (* (* 2.0 l_0_6_47) l_0_6_52))))
 (let ((?x5690 (+ (- (- ?x5681 (* (* 2.0 l_0_6_48) l_0_6_53)) ?x5686) (* (* 2.0 l_0_6_62) l_0_6_67))))
 (let ((?x5701 (- (- (+ (+ ?x5690 (* (* 2.0 l_0_6_63) l_0_6_68)) ?x5695) ?x5697) (* (* 2.0 l_0_6_92) l_0_6_97))))
 (= (- ?x5701 (* (* 2.0 l_0_6_93) l_0_6_98)) 0.0))))))))))))))))
(assert
 (let ((?x5694 (* 2.0 l_0_6_76)))
 (let ((?x5844 (* ?x5694 l_0_6_79)))
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x5833 (* ?x5685 l_0_6_67)))
 (let ((?x5831 (* ?x5685 l_0_6_64)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x5820 (* ?x5676 l_0_6_52)))
 (let ((?x5818 (* ?x5676 l_0_6_49)))
 (let ((?x5793 (- (* (* (- 2.0) l_0_6_1) l_0_6_4) (* (* 2.0 l_0_6_109) l_0_6_112))))
 (let ((?x5799 (- (- ?x5793 (* (* 2.0 l_0_6_110) l_0_6_113)) (* (* 2.0 l_0_6_111) l_0_6_114))))
 (let ((?x5805 (- (- ?x5799 (* (* 2.0 l_0_6_19) l_0_6_22)) (* (* 2.0 l_0_6_20) l_0_6_23))))
 (let ((?x5811 (+ (- ?x5805 (* (* 2.0 l_0_6_21) l_0_6_24)) (* (* 2.0 l_0_6_34) l_0_6_37))))
 (let ((?x5817 (+ (+ ?x5811 (* (* 2.0 l_0_6_35) l_0_6_38)) (* (* 2.0 l_0_6_36) l_0_6_39))))
 (let ((?x5827 (- (- (- (+ ?x5817 ?x5818) ?x5820) (* (* 2.0 l_0_6_49) l_0_6_52)) (* (* 2.0 l_0_6_50) l_0_6_53))))
 (let ((?x5837 (+ (+ (- (- ?x5827 (* (* 2.0 l_0_6_51) l_0_6_54)) ?x5831) ?x5833) (* (* 2.0 l_0_6_64) l_0_6_67))))
 (let ((?x5843 (+ (+ ?x5837 (* (* 2.0 l_0_6_65) l_0_6_68)) (* (* 2.0 l_0_6_66) l_0_6_69))))
 (let ((?x5851 (- (- (+ ?x5843 ?x5844) (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x5851 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0)))))))))))))))))))
(assert
 (let ((?x6025 (* l_0_6_99 l_0_6_99)))
 (let ((?x6023 (* l_0_6_98 l_0_6_98)))
 (let ((?x6021 (* l_0_6_97 l_0_6_97)))
 (let ((?x5694 (* 2.0 l_0_6_76)))
 (let ((?x5697 (* ?x5694 l_0_6_82)))
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x5833 (* ?x5685 l_0_6_67)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x5820 (* ?x5676 l_0_6_52)))
 (let ((?x5968 (* l_0_6_115 l_0_6_115)))
 (let ((?x5966 (* l_0_6_114 l_0_6_114)))
 (let ((?x5964 (* l_0_6_113 l_0_6_113)))
 (let ((?x5962 (* l_0_6_112 l_0_6_112)))
 (let ((?x5963 (- (- (* (* (- 2.0) l_0_6_1) l_0_6_7) (* l_0_6_100 l_0_6_100)) ?x5962)))
 (let ((?x5972 (- (- (- (- ?x5963 ?x5964) ?x5966) ?x5968) (* (* 1.0 l_0_6_22) l_0_6_22))))
 (let ((?x5978 (- (- ?x5972 (* (* 1.0 l_0_6_23) l_0_6_23)) (* (* 1.0 l_0_6_24) l_0_6_24))))
 (let ((?x5984 (+ (- ?x5978 (* (* 1.0 l_0_6_25) l_0_6_25)) (* 1.0 (* l_0_6_37 l_0_6_37)))))
 (let ((?x5990 (+ (+ ?x5984 (* 1.0 (* l_0_6_38 l_0_6_38))) (* 1.0 (* l_0_6_39 l_0_6_39)))))
 (let ((?x5997 (- (+ (+ ?x5990 (* 1.0 (* l_0_6_40 l_0_6_40))) ?x5820) (* (* 1.0 l_0_6_52) l_0_6_52))))
 (let ((?x6003 (- (- ?x5997 (* (* 1.0 l_0_6_53) l_0_6_53)) (* (* 1.0 l_0_6_54) l_0_6_54))))
 (let ((?x6010 (+ (- (- ?x6003 (* (* 1.0 l_0_6_55) l_0_6_55)) ?x5833) (* 1.0 (* l_0_6_67 l_0_6_67)))))
 (let ((?x6016 (+ (+ ?x6010 (* 1.0 (* l_0_6_68 l_0_6_68))) (* 1.0 (* l_0_6_69 l_0_6_69)))))
 (let ((?x6024 (- (- (+ (+ ?x6016 (* 1.0 (* l_0_6_70 l_0_6_70))) ?x5697) ?x6021) ?x6023)))
 (= (- ?x6024 ?x6025) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5694 (* 2.0 l_0_6_76)))
 (let ((?x6174 (* ?x5694 l_0_6_86)))
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x6160 (* ?x5685 l_0_6_71)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x6144 (* ?x5676 l_0_6_56)))
 (let ((?x6096 (- (* (* (- 2.0) l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_100) l_0_6_104))))
 (let ((?x6102 (- (- ?x6096 (* (* 2.0 l_0_6_101) l_0_6_97)) (* (* 2.0 l_0_6_102) l_0_6_98))))
 (let ((?x6108 (- (- ?x6102 (* (* 2.0 l_0_6_103) l_0_6_99)) (* (* 2.0 l_0_6_112) l_0_6_116))))
 (let ((?x6114 (- (- ?x6108 (* (* 2.0 l_0_6_113) l_0_6_117)) (* (* 2.0 l_0_6_114) l_0_6_118))))
 (let ((?x6120 (- (- ?x6114 (* (* 2.0 l_0_6_115) l_0_6_119)) (* (* 2.0 l_0_6_22) l_0_6_26))))
 (let ((?x6126 (- (- ?x6120 (* (* 2.0 l_0_6_23) l_0_6_27)) (* (* 2.0 l_0_6_24) l_0_6_28))))
 (let ((?x6132 (+ (- ?x6126 (* (* 2.0 l_0_6_25) l_0_6_29)) (* (* 2.0 l_0_6_37) l_0_6_41))))
 (let ((?x6138 (+ (+ ?x6132 (* (* 2.0 l_0_6_38) l_0_6_42)) (* (* 2.0 l_0_6_39) l_0_6_43))))
 (let ((?x6143 (+ (+ ?x6138 (* (* 2.0 l_0_6_40) l_0_6_44)) (* (* 6.0 l_0_6_46) l_0_6_52))))
 (let ((?x6151 (- (- (+ ?x6143 ?x6144) (* (* 2.0 l_0_6_52) l_0_6_56)) (* (* 2.0 l_0_6_53) l_0_6_57))))
 (let ((?x6157 (- (- ?x6151 (* (* 2.0 l_0_6_54) l_0_6_58)) (* (* 2.0 l_0_6_55) l_0_6_59))))
 (let ((?x6164 (+ (- (- ?x6157 (* (* 6.0 l_0_6_61) l_0_6_67)) ?x6160) (* (* 2.0 l_0_6_67) l_0_6_71))))
 (let ((?x6170 (+ (+ ?x6164 (* (* 2.0 l_0_6_68) l_0_6_72)) (* (* 2.0 l_0_6_69) l_0_6_73))))
 (= (+ (+ ?x6170 (* (* 2.0 l_0_6_70) l_0_6_74)) ?x6174) 0.0)))))))))))))))))))))
(assert
 (let ((?x6343 (* l_0_6_78 l_0_6_78)))
 (let ((?x6340 (* 2.0 l_0_6_78)))
 (let ((?x6341 (* ?x6340 l_0_6_83)))
 (let ((?x6338 (* l_0_6_77 l_0_6_77)))
 (let ((?x6335 (* 2.0 l_0_6_77)))
 (let ((?x6336 (* ?x6335 l_0_6_82)))
 (let ((?x6333 (* (* 4.0 l_0_6_63) l_0_6_63)))
 (let ((?x6330 (* (* 4.0 l_0_6_62) l_0_6_62)))
 (let ((?x6326 (* l_0_6_48 l_0_6_48)))
 (let ((?x6327 (* 4.0 ?x6326)))
 (let ((?x6323 (* l_0_6_47 l_0_6_47)))
 (let ((?x6324 (* 4.0 ?x6323)))
 (let ((?x6315 (* l_0_6_3 l_0_6_3)))
 (let ((?x6313 (* l_0_6_2 l_0_6_2)))
 (let ((?x6312 (+ (* (* 8.0 l_0_6_17) l_0_6_22) (* (* 8.0 l_0_6_18) l_0_6_23))))
 (let ((?x6322 (- (- (- (- ?x6312 ?x6313) ?x6315) (* (* 8.0 l_0_6_32) l_0_6_37)) (* (* 8.0 l_0_6_33) l_0_6_38))))
 (let ((?x6342 (- (+ (- (- (- (+ (+ ?x6322 ?x6324) ?x6327) ?x6330) ?x6333) ?x6336) ?x6338) ?x6341)))
 (= (+ ?x6342 ?x6343) 0.0)))))))))))))))))))
(assert
 (let ((?x6446 (* 2.0 l_0_6_81)))
 (let ((?x6447 (* ?x6446 l_0_6_84)))
 (let ((?x6443 (* 2.0 l_0_6_80)))
 (let ((?x6444 (* ?x6443 l_0_6_83)))
 (let ((?x6440 (* 2.0 l_0_6_79)))
 (let ((?x6441 (* ?x6440 l_0_6_82)))
 (let ((?x6340 (* 2.0 l_0_6_78)))
 (let ((?x6438 (* ?x6340 l_0_6_80)))
 (let ((?x6335 (* 2.0 l_0_6_77)))
 (let ((?x6436 (* ?x6335 l_0_6_79)))
 (let ((?x6431 (* 8.0 l_0_6_63)))
 (let ((?x6434 (* ?x6431 l_0_6_68)))
 (let ((?x6432 (* ?x6431 l_0_6_65)))
 (let ((?x6426 (* 8.0 l_0_6_62)))
 (let ((?x6429 (* ?x6426 l_0_6_67)))
 (let ((?x6427 (* ?x6426 l_0_6_64)))
 (let ((?x6421 (* 8.0 l_0_6_48)))
 (let ((?x6424 (* ?x6421 l_0_6_53)))
 (let ((?x6422 (* ?x6421 l_0_6_50)))
 (let ((?x6416 (* 8.0 l_0_6_47)))
 (let ((?x6419 (* ?x6416 l_0_6_52)))
 (let ((?x6417 (* ?x6416 l_0_6_49)))
 (let ((?x6397 (- (* (* 8.0 l_0_6_19) l_0_6_22) (* (* 2.0 l_0_6_2) l_0_6_4))))
 (let ((?x6403 (+ (+ ?x6397 (* (* 8.0 l_0_6_20) l_0_6_23)) (* (* 8.0 l_0_6_21) l_0_6_24))))
 (let ((?x6409 (- (- ?x6403 (* (* 2.0 l_0_6_3) l_0_6_5)) (* (* 8.0 l_0_6_34) l_0_6_37))))
 (let ((?x6415 (- (- ?x6409 (* (* 8.0 l_0_6_35) l_0_6_38)) (* (* 8.0 l_0_6_36) l_0_6_39))))
 (let ((?x6433 (- (+ (- (- (+ (- (+ ?x6415 ?x6417) ?x6419) ?x6422) ?x6424) ?x6427) ?x6429) ?x6432)))
 (= (- (- (- (+ (+ (+ ?x6433 ?x6434) ?x6436) ?x6438) ?x6441) ?x6444) ?x6447) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x6582 (* l_0_6_85 l_0_6_85)))
 (let ((?x6580 (* l_0_6_84 l_0_6_84)))
 (let ((?x6578 (* l_0_6_83 l_0_6_83)))
 (let ((?x6576 (* l_0_6_82 l_0_6_82)))
 (let ((?x6340 (* 2.0 l_0_6_78)))
 (let ((?x6341 (* ?x6340 l_0_6_83)))
 (let ((?x6335 (* 2.0 l_0_6_77)))
 (let ((?x6336 (* ?x6335 l_0_6_82)))
 (let ((?x6431 (* 8.0 l_0_6_63)))
 (let ((?x6434 (* ?x6431 l_0_6_68)))
 (let ((?x6426 (* 8.0 l_0_6_62)))
 (let ((?x6429 (* ?x6426 l_0_6_67)))
 (let ((?x6421 (* 8.0 l_0_6_48)))
 (let ((?x6424 (* ?x6421 l_0_6_53)))
 (let ((?x6416 (* 8.0 l_0_6_47)))
 (let ((?x6419 (* ?x6416 l_0_6_52)))
 (let ((?x6057 (* l_0_6_25 l_0_6_25)))
 (let ((?x6554 (* 4.0 ?x6057)))
 (let ((?x6053 (* l_0_6_24 l_0_6_24)))
 (let ((?x6552 (* 4.0 ?x6053)))
 (let ((?x6049 (* l_0_6_23 l_0_6_23)))
 (let ((?x6550 (* 4.0 ?x6049)))
 (let ((?x6045 (* l_0_6_22 l_0_6_22)))
 (let ((?x6548 (* 4.0 ?x6045)))
 (let ((?x6555 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_2) l_0_6_7) ?x6548) ?x6550) ?x6552) ?x6554)))
 (let ((?x6560 (- (- ?x6555 (* (* 2.0 l_0_6_3) l_0_6_8)) (* (* 4.0 l_0_6_37) l_0_6_37))))
 (let ((?x6566 (- (- ?x6560 (* (* 4.0 l_0_6_38) l_0_6_38)) (* (* 4.0 l_0_6_39) l_0_6_39))))
 (let ((?x6572 (- (+ (+ (- ?x6566 (* (* 4.0 l_0_6_40) l_0_6_40)) ?x6419) ?x6424) ?x6429)))
 (let ((?x6583 (- (- (- (- (+ (+ (- ?x6572 ?x6434) ?x6336) ?x6341) ?x6576) ?x6578) ?x6580) ?x6582)))
 (= ?x6583 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x6698 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x6695 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x6692 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x6689 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x6340 (* 2.0 l_0_6_78)))
 (let ((?x6686 (* ?x6340 l_0_6_87)))
 (let ((?x6335 (* 2.0 l_0_6_77)))
 (let ((?x6684 (* ?x6335 l_0_6_86)))
 (let ((?x6431 (* 8.0 l_0_6_63)))
 (let ((?x6682 (* ?x6431 l_0_6_72)))
 (let ((?x6426 (* 8.0 l_0_6_62)))
 (let ((?x6677 (* ?x6426 l_0_6_71)))
 (let ((?x6421 (* 8.0 l_0_6_48)))
 (let ((?x6672 (* ?x6421 l_0_6_57)))
 (let ((?x6416 (* 8.0 l_0_6_47)))
 (let ((?x6667 (* ?x6416 l_0_6_56)))
 (let ((?x6639 (- (* (* (- 2.0) l_0_6_11) l_0_6_2) (* (* 2.0 l_0_6_12) l_0_6_3))))
 (let ((?x6645 (+ (+ ?x6639 (* (* 8.0 l_0_6_22) l_0_6_26)) (* (* 8.0 l_0_6_23) l_0_6_27))))
 (let ((?x6651 (+ (+ ?x6645 (* (* 8.0 l_0_6_24) l_0_6_28)) (* (* 8.0 l_0_6_25) l_0_6_29))))
 (let ((?x6657 (- (- ?x6651 (* (* 8.0 l_0_6_37) l_0_6_41)) (* (* 8.0 l_0_6_38) l_0_6_42))))
 (let ((?x6663 (- (- ?x6657 (* (* 8.0 l_0_6_39) l_0_6_43)) (* (* 8.0 l_0_6_40) l_0_6_44))))
 (let ((?x6671 (+ (+ (+ ?x6663 (* (* 6.0 l_0_6_47) l_0_6_52)) ?x6667) (* (* 6.0 l_0_6_48) l_0_6_53))))
 (let ((?x6681 (- (- (- (+ ?x6671 ?x6672) (* (* 6.0 l_0_6_62) l_0_6_67)) ?x6677) (* (* 6.0 l_0_6_63) l_0_6_68))))
 (let ((?x6699 (- (- (- (- (+ (+ (- ?x6681 ?x6682) ?x6684) ?x6686) ?x6689) ?x6692) ?x6695) ?x6698)))
 (= ?x6699 0.0))))))))))))))))))))))))))
(assert
 (let ((?x6839 (* l_0_6_81 l_0_6_81)))
 (let ((?x6837 (* l_0_6_80 l_0_6_80)))
 (let ((?x6835 (* l_0_6_79 l_0_6_79)))
 (let ((?x6833 (* (* 4.0 l_0_6_66) l_0_6_66)))
 (let ((?x6829 (* 8.0 l_0_6_66)))
 (let ((?x6830 (* ?x6829 l_0_6_69)))
 (let ((?x6827 (* (* 4.0 l_0_6_65) l_0_6_65)))
 (let ((?x6823 (* 8.0 l_0_6_65)))
 (let ((?x6824 (* ?x6823 l_0_6_68)))
 (let ((?x6821 (* (* 4.0 l_0_6_64) l_0_6_64)))
 (let ((?x6817 (* 8.0 l_0_6_64)))
 (let ((?x6818 (* ?x6817 l_0_6_67)))
 (let ((?x6815 (* l_0_6_6 l_0_6_6)))
 (let ((?x6812 (* l_0_6_51 l_0_6_51)))
 (let ((?x6813 (* 4.0 ?x6812)))
 (let ((?x6809 (* 8.0 l_0_6_51)))
 (let ((?x6810 (* ?x6809 l_0_6_54)))
 (let ((?x6806 (* l_0_6_50 l_0_6_50)))
 (let ((?x6807 (* 4.0 ?x6806)))
 (let ((?x6803 (* 8.0 l_0_6_50)))
 (let ((?x6804 (* ?x6803 l_0_6_53)))
 (let ((?x6801 (* l_0_6_5 l_0_6_5)))
 (let ((?x6798 (* l_0_6_49 l_0_6_49)))
 (let ((?x6799 (* 4.0 ?x6798)))
 (let ((?x6800 (+ (- (* (- l_0_6_4) l_0_6_4) (* (* 8.0 l_0_6_49) l_0_6_52)) ?x6799)))
 (let ((?x6819 (+ (- (+ (- (+ (- (- ?x6800 ?x6801) ?x6804) ?x6807) ?x6810) ?x6813) ?x6815) ?x6818)))
 (let ((?x6838 (+ (+ (- (+ (- (+ (- ?x6819 ?x6821) ?x6824) ?x6827) ?x6830) ?x6833) ?x6835) ?x6837)))
 (= (+ ?x6838 ?x6839) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x6446 (* 2.0 l_0_6_81)))
 (let ((?x6447 (* ?x6446 l_0_6_84)))
 (let ((?x6443 (* 2.0 l_0_6_80)))
 (let ((?x6444 (* ?x6443 l_0_6_83)))
 (let ((?x6440 (* 2.0 l_0_6_79)))
 (let ((?x6441 (* ?x6440 l_0_6_82)))
 (let ((?x6017 (* l_0_6_70 l_0_6_70)))
 (let ((?x6936 (* 4.0 ?x6017)))
 (let ((?x6014 (* l_0_6_69 l_0_6_69)))
 (let ((?x6934 (* 4.0 ?x6014)))
 (let ((?x6011 (* l_0_6_68 l_0_6_68)))
 (let ((?x6932 (* 4.0 ?x6011)))
 (let ((?x6008 (* l_0_6_67 l_0_6_67)))
 (let ((?x6930 (* 4.0 ?x6008)))
 (let ((?x6829 (* 8.0 l_0_6_66)))
 (let ((?x6830 (* ?x6829 l_0_6_69)))
 (let ((?x6823 (* 8.0 l_0_6_65)))
 (let ((?x6824 (* ?x6823 l_0_6_68)))
 (let ((?x6817 (* 8.0 l_0_6_64)))
 (let ((?x6818 (* ?x6817 l_0_6_67)))
 (let ((?x6809 (* 8.0 l_0_6_51)))
 (let ((?x6810 (* ?x6809 l_0_6_54)))
 (let ((?x6803 (* 8.0 l_0_6_50)))
 (let ((?x6804 (* ?x6803 l_0_6_53)))
 (let ((?x6795 (* 8.0 l_0_6_49)))
 (let ((?x6796 (* ?x6795 l_0_6_52)))
 (let ((?x6909 (- (+ (* (* (- 2.0) l_0_6_4) l_0_6_7) ?x6796) (* (* 2.0 l_0_6_5) l_0_6_8))))
 (let ((?x6917 (- (- (+ (+ ?x6909 ?x6804) ?x6810) (* (* 4.0 l_0_6_52) l_0_6_52)) (* (* 4.0 l_0_6_53) l_0_6_53))))
 (let ((?x6923 (- (- ?x6917 (* (* 4.0 l_0_6_54) l_0_6_54)) (* (* 4.0 l_0_6_55) l_0_6_55))))
 (let ((?x6929 (- (- (- (- ?x6923 (* (* 2.0 l_0_6_6) l_0_6_9)) ?x6818) ?x6824) ?x6830)))
 (let ((?x6940 (+ (+ (+ (+ (+ (+ (+ ?x6929 ?x6930) ?x6932) ?x6934) ?x6936) ?x6441) ?x6444) ?x6447)))
 (= ?x6940 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x6446 (* 2.0 l_0_6_81)))
 (let ((?x7053 (* ?x6446 l_0_6_88)))
 (let ((?x6443 (* 2.0 l_0_6_80)))
 (let ((?x7051 (* ?x6443 l_0_6_87)))
 (let ((?x6440 (* 2.0 l_0_6_79)))
 (let ((?x7049 (* ?x6440 l_0_6_86)))
 (let ((?x7047 (* (* 8.0 l_0_6_70) l_0_6_74)))
 (let ((?x7044 (* (* 8.0 l_0_6_69) l_0_6_73)))
 (let ((?x7041 (* (* 8.0 l_0_6_68) l_0_6_72)))
 (let ((?x7038 (* (* 8.0 l_0_6_67) l_0_6_71)))
 (let ((?x6829 (* 8.0 l_0_6_66)))
 (let ((?x7035 (* ?x6829 l_0_6_73)))
 (let ((?x6823 (* 8.0 l_0_6_65)))
 (let ((?x7030 (* ?x6823 l_0_6_72)))
 (let ((?x6817 (* 8.0 l_0_6_64)))
 (let ((?x7025 (* ?x6817 l_0_6_71)))
 (let ((?x7020 (* (* 8.0 l_0_6_55) l_0_6_59)))
 (let ((?x7017 (* (* 8.0 l_0_6_54) l_0_6_58)))
 (let ((?x7014 (* (* 8.0 l_0_6_53) l_0_6_57)))
 (let ((?x7011 (* (* 8.0 l_0_6_52) l_0_6_56)))
 (let ((?x6809 (* 8.0 l_0_6_51)))
 (let ((?x7008 (* ?x6809 l_0_6_58)))
 (let ((?x6803 (* 8.0 l_0_6_50)))
 (let ((?x7003 (* ?x6803 l_0_6_57)))
 (let ((?x6795 (* 8.0 l_0_6_49)))
 (let ((?x6998 (* ?x6795 l_0_6_56)))
 (let ((?x6991 (- (* (* (- 2.0) l_0_6_11) l_0_6_4) (* (* 2.0 l_0_6_12) l_0_6_5))))
 (let ((?x6997 (+ (- ?x6991 (* (* 2.0 l_0_6_13) l_0_6_6)) (* (* 6.0 l_0_6_49) l_0_6_52))))
 (let ((?x7007 (+ (+ (+ (+ ?x6997 ?x6998) (* (* 6.0 l_0_6_50) l_0_6_53)) ?x7003) (* (* 6.0 l_0_6_51) l_0_6_54))))
 (let ((?x7024 (- (- (- (- (- (+ ?x7007 ?x7008) ?x7011) ?x7014) ?x7017) ?x7020) (* (* 6.0 l_0_6_64) l_0_6_67))))
 (let ((?x7034 (- (- (- (- ?x7024 ?x7025) (* (* 6.0 l_0_6_65) l_0_6_68)) ?x7030) (* (* 6.0 l_0_6_66) l_0_6_69))))
 (let ((?x7052 (+ (+ (+ (+ (+ (+ (- ?x7034 ?x7035) ?x7038) ?x7041) ?x7044) ?x7047) ?x7049) ?x7051)))
 (= (+ ?x7052 ?x7053) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7171 (* l_0_6_9 l_0_6_9)))
 (let ((?x6582 (* l_0_6_85 l_0_6_85)))
 (let ((?x6580 (* l_0_6_84 l_0_6_84)))
 (let ((?x6578 (* l_0_6_83 l_0_6_83)))
 (let ((?x6576 (* l_0_6_82 l_0_6_82)))
 (let ((?x7165 (* l_0_6_8 l_0_6_8)))
 (let ((?x7163 (* (* 4.0 l_0_6_70) l_0_6_70)))
 (let ((?x7160 (* l_0_6_7 l_0_6_7)))
 (let ((?x7158 (* (* 4.0 l_0_6_69) l_0_6_69)))
 (let ((?x7155 (* (* 4.0 l_0_6_68) l_0_6_68)))
 (let ((?x7152 (* (* 4.0 l_0_6_67) l_0_6_67)))
 (let ((?x6074 (* l_0_6_55 l_0_6_55)))
 (let ((?x6967 (* 4.0 ?x6074)))
 (let ((?x6070 (* l_0_6_54 l_0_6_54)))
 (let ((?x6962 (* 4.0 ?x6070)))
 (let ((?x6066 (* l_0_6_53 l_0_6_53)))
 (let ((?x6957 (* 4.0 ?x6066)))
 (let ((?x7148 (+ (+ (* (- l_0_6_10) l_0_6_10) (* 4.0 (* l_0_6_52 l_0_6_52))) ?x6957)))
 (let ((?x7164 (- (- (- (- (- (+ (+ ?x7148 ?x6962) ?x6967) ?x7152) ?x7155) ?x7158) ?x7160) ?x7163)))
 (= (- (+ (+ (+ (+ (- ?x7164 ?x7165) ?x6576) ?x6578) ?x6580) ?x6582) ?x7171) 0.0)))))))))))))))))))))
(assert
 (let ((?x6698 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x6695 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x6692 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x6689 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x7047 (* (* 8.0 l_0_6_70) l_0_6_74)))
 (let ((?x7044 (* (* 8.0 l_0_6_69) l_0_6_73)))
 (let ((?x7041 (* (* 8.0 l_0_6_68) l_0_6_72)))
 (let ((?x7038 (* (* 8.0 l_0_6_67) l_0_6_71)))
 (let ((?x7020 (* (* 8.0 l_0_6_55) l_0_6_59)))
 (let ((?x7017 (* (* 8.0 l_0_6_54) l_0_6_58)))
 (let ((?x7014 (* (* 8.0 l_0_6_53) l_0_6_57)))
 (let ((?x7011 (* (* 8.0 l_0_6_52) l_0_6_56)))
 (let ((?x7210 (- (* (* (- 2.0) l_0_6_10) l_0_6_14) (* (* 2.0 l_0_6_11) l_0_6_7))))
 (let ((?x7214 (- (- ?x7210 (* (* 2.0 l_0_6_12) l_0_6_8)) (* (* 2.0 l_0_6_13) l_0_6_9))))
 (let ((?x7220 (+ (+ (+ (+ ?x7214 ?x7011) (* 3.0 (* l_0_6_52 l_0_6_52))) ?x7014) (* 3.0 (* l_0_6_53 l_0_6_53)))))
 (let ((?x7226 (+ (+ (+ (+ ?x7220 ?x7017) (* 3.0 (* l_0_6_54 l_0_6_54))) ?x7020) (* 3.0 (* l_0_6_55 l_0_6_55)))))
 (let ((?x7234 (- (- (- (- ?x7226 ?x7038) (* (* 3.0 l_0_6_67) l_0_6_67)) ?x7041) (* (* 3.0 l_0_6_68) l_0_6_68))))
 (let ((?x7242 (- (- (- (- ?x7234 ?x7044) (* (* 3.0 l_0_6_69) l_0_6_69)) ?x7047) (* (* 3.0 l_0_6_70) l_0_6_70))))
 (= (+ (+ (+ (+ ?x7242 ?x6689) ?x6692) ?x6695) ?x6698) 0.0))))))))))))))))))))
(assert
 (let ((?x7388 (* l_0_6_90 l_0_6_90)))
 (let ((?x7386 (* l_0_6_89 l_0_6_89)))
 (let ((?x7384 (* l_0_6_88 l_0_6_88)))
 (let ((?x7382 (* l_0_6_87 l_0_6_87)))
 (let ((?x7380 (* l_0_6_86 l_0_6_86)))
 (let ((?x7378 (* (* 4.0 l_0_6_75) l_0_6_75)))
 (let ((?x7375 (* (* 4.0 l_0_6_74) l_0_6_74)))
 (let ((?x7372 (* (* 4.0 l_0_6_73) l_0_6_73)))
 (let ((?x7369 (* (* 4.0 l_0_6_72) l_0_6_72)))
 (let ((?x7366 (* (* 4.0 l_0_6_71) l_0_6_71)))
 (let ((?x5239 (* l_0_6_60 l_0_6_60)))
 (let ((?x7349 (* 4.0 ?x5239)))
 (let ((?x5236 (* l_0_6_59 l_0_6_59)))
 (let ((?x7347 (* 4.0 ?x5236)))
 (let ((?x5233 (* l_0_6_58 l_0_6_58)))
 (let ((?x7345 (* 4.0 ?x5233)))
 (let ((?x5230 (* l_0_6_57 l_0_6_57)))
 (let ((?x7343 (* 4.0 ?x5230)))
 (let ((?x5227 (* l_0_6_56 l_0_6_56)))
 (let ((?x7341 (* 4.0 ?x5227)))
 (let ((?x7320 (* l_0_6_15 l_0_6_15)))
 (let ((?x7318 (* l_0_6_14 l_0_6_14)))
 (let ((?x7316 (* l_0_6_13 l_0_6_13)))
 (let ((?x7319 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x7316) ?x7318)))
 (let ((?x7326 (+ (- (- ?x7319 ?x7320) (* (* 24.0 l_0_6_16) l_0_6_22)) (* (* 24.0 l_0_6_31) l_0_6_37))))
 (let ((?x7331 (+ (- ?x7326 (* (* 12.0 l_0_6_46) l_0_6_52)) (* (* 6.0 l_0_6_52) l_0_6_56))))
 (let ((?x7337 (+ (+ ?x7331 (* (* 6.0 l_0_6_53) l_0_6_57)) (* (* 6.0 l_0_6_54) l_0_6_58))))
 (let ((?x7346 (+ (+ (+ (+ ?x7337 (* (* 6.0 l_0_6_55) l_0_6_59)) ?x7341) ?x7343) ?x7345)))
 (let ((?x7355 (- (+ (+ (+ ?x7346 ?x7347) ?x7349) (* (* 12.0 l_0_6_61) l_0_6_67)) (* (* 6.0 l_0_6_67) l_0_6_71))))
 (let ((?x7361 (- (- ?x7355 (* (* 6.0 l_0_6_68) l_0_6_72)) (* (* 6.0 l_0_6_69) l_0_6_73))))
 (let ((?x7373 (- (- (- (- ?x7361 (* (* 6.0 l_0_6_70) l_0_6_74)) ?x7366) ?x7369) ?x7372)))
 (let ((?x7389 (+ (+ (+ (+ (+ (- (- ?x7373 ?x7375) ?x7378) ?x7380) ?x7382) ?x7384) ?x7386) ?x7388)))
 (= ?x7389 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5604 (* l_0_6_76 l_0_6_76)))
 (let ((?x7473 (- (* (* (- 2.0) l_0_6_106) l_0_6_107) (* (* 2.0 l_0_6_16) l_0_6_17))))
 (let ((?x7477 (+ (+ ?x7473 (* 4.0 (* l_0_6_16 l_0_6_16))) (* (* 2.0 l_0_6_31) l_0_6_32))))
 (let ((?x7482 (- (- ?x7477 (* (* 4.0 l_0_6_31) l_0_6_31)) (* (* 2.0 l_0_6_46) l_0_6_47))))
 (let ((?x7487 (- (- (+ ?x7482 (* (* 2.0 l_0_6_61) l_0_6_62)) ?x5604) (* (* 2.0 l_0_6_91) l_0_6_92))))
 (= ?x7487 0.0)))))))
(assert
 (let ((?x7559 (* l_0_6_93 l_0_6_93)))
 (let ((?x7557 (* l_0_6_92 l_0_6_92)))
 (let ((?x5694 (* 2.0 l_0_6_76)))
 (let ((?x5695 (* ?x5694 l_0_6_77)))
 (let ((?x7531 (+ (- (* (- l_0_6_107) l_0_6_107) (* l_0_6_108 l_0_6_108)) (* (* 8.0 l_0_6_16) l_0_6_17))))
 (let ((?x7537 (- (- ?x7531 (* (* 1.0 l_0_6_17) l_0_6_17)) (* (* 1.0 l_0_6_18) l_0_6_18))))
 (let ((?x7542 (+ (- ?x7537 (* (* 8.0 l_0_6_31) l_0_6_32)) (* 1.0 (* l_0_6_32 l_0_6_32)))))
 (let ((?x7548 (- (+ ?x7542 (* 1.0 (* l_0_6_33 l_0_6_33))) (* (* 1.0 l_0_6_47) l_0_6_47))))
 (let ((?x7553 (+ (- ?x7548 (* (* 1.0 l_0_6_48) l_0_6_48)) (* 1.0 (* l_0_6_62 l_0_6_62)))))
 (let ((?x7560 (- (- (- (+ ?x7553 (* 1.0 (* l_0_6_63 l_0_6_63))) ?x5695) ?x7557) ?x7559)))
 (= ?x7560 0.0))))))))))))
(assert
 (let ((?x5694 (* 2.0 l_0_6_76)))
 (let ((?x5844 (* ?x5694 l_0_6_79)))
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x5686 (* ?x5685 l_0_6_62)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x5677 (* ?x5676 l_0_6_47)))
 (let ((?x7611 (- (* (* (- 2.0) l_0_6_107) l_0_6_109) (* (* 2.0 l_0_6_108) l_0_6_110))))
 (let ((?x7615 (- (+ ?x7611 (* (* 8.0 l_0_6_16) l_0_6_19)) (* (* 2.0 l_0_6_17) l_0_6_19))))
 (let ((?x7619 (- (- ?x7615 (* (* 2.0 l_0_6_18) l_0_6_20)) (* (* 8.0 l_0_6_31) l_0_6_34))))
 (let ((?x7623 (+ (+ ?x7619 (* (* 2.0 l_0_6_32) l_0_6_34)) (* (* 2.0 l_0_6_33) l_0_6_35))))
 (let ((?x7628 (- (- (- ?x7623 ?x5677) (* (* 2.0 l_0_6_47) l_0_6_49)) (* (* 2.0 l_0_6_48) l_0_6_50))))
 (let ((?x7633 (+ (+ (+ ?x7628 ?x5686) (* (* 2.0 l_0_6_62) l_0_6_64)) (* (* 2.0 l_0_6_63) l_0_6_65))))
 (let ((?x7638 (- (- (- ?x7633 ?x5844) (* (* 2.0 l_0_6_92) l_0_6_94)) (* (* 2.0 l_0_6_93) l_0_6_95))))
 (= ?x7638 0.0)))))))))))))))
(assert
 (let ((?x5694 (* 2.0 l_0_6_76)))
 (let ((?x6174 (* ?x5694 l_0_6_86)))
 (let ((?x7708 (- (* (* (- 2.0) l_0_6_101) l_0_6_92) (* (* 2.0 l_0_6_102) l_0_6_93))))
 (let ((?x7712 (- (- ?x7708 (* (* 2.0 l_0_6_107) l_0_6_116)) (* (* 2.0 l_0_6_108) l_0_6_117))))
 (let ((?x7716 (- (+ ?x7712 (* (* 8.0 l_0_6_16) l_0_6_26)) (* (* 2.0 l_0_6_17) l_0_6_26))))
 (let ((?x7720 (- (- ?x7716 (* (* 2.0 l_0_6_18) l_0_6_27)) (* (* 8.0 l_0_6_31) l_0_6_41))))
 (let ((?x7724 (+ (+ ?x7720 (* (* 2.0 l_0_6_32) l_0_6_41)) (* (* 2.0 l_0_6_33) l_0_6_42))))
 (let ((?x7728 (- (+ ?x7724 (* (* 6.0 l_0_6_46) l_0_6_47)) (* (* 2.0 l_0_6_47) l_0_6_56))))
 (let ((?x7732 (- (- ?x7728 (* (* 2.0 l_0_6_48) l_0_6_57)) (* (* 6.0 l_0_6_61) l_0_6_62))))
 (let ((?x7736 (+ (+ ?x7732 (* (* 2.0 l_0_6_62) l_0_6_71)) (* (* 2.0 l_0_6_63) l_0_6_72))))
 (= (- ?x7736 ?x6174) 0.0))))))))))))
(assert
 (let ((?x7852 (* l_0_6_96 l_0_6_96)))
 (let ((?x7850 (* l_0_6_95 l_0_6_95)))
 (let ((?x7848 (* l_0_6_94 l_0_6_94)))
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x5831 (* ?x5685 l_0_6_64)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x5818 (* ?x5676 l_0_6_49)))
 (let ((?x7811 (* l_0_6_111 l_0_6_111)))
 (let ((?x7812 (- (- (* (- l_0_6_109) l_0_6_109) (* l_0_6_110 l_0_6_110)) ?x7811)))
 (let ((?x7818 (- (- ?x7812 (* (* 1.0 l_0_6_19) l_0_6_19)) (* (* 1.0 l_0_6_20) l_0_6_20))))
 (let ((?x7824 (+ (- ?x7818 (* (* 1.0 l_0_6_21) l_0_6_21)) (* 1.0 (* l_0_6_34 l_0_6_34)))))
 (let ((?x7830 (+ (+ ?x7824 (* 1.0 (* l_0_6_35 l_0_6_35))) (* 1.0 (* l_0_6_36 l_0_6_36)))))
 (let ((?x7837 (- (- (- ?x7830 ?x5818) (* (* 1.0 l_0_6_49) l_0_6_49)) (* (* 1.0 l_0_6_50) l_0_6_50))))
 (let ((?x7843 (+ (+ (- ?x7837 (* (* 1.0 l_0_6_51) l_0_6_51)) ?x5831) (* 1.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x7847 (+ (+ ?x7843 (* 1.0 (* l_0_6_65 l_0_6_65))) (* 1.0 (* l_0_6_66 l_0_6_66)))))
 (= (- (- (- ?x7847 ?x7848) ?x7850) ?x7852) 0.0)))))))))))))))))
(assert
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x6160 (* ?x5685 l_0_6_71)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x6144 (* ?x5676 l_0_6_56)))
 (let ((?x7910 (- (* (* (- 2.0) l_0_6_101) l_0_6_94) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x7914 (- (- ?x7910 (* (* 2.0 l_0_6_103) l_0_6_96)) (* (* 2.0 l_0_6_109) l_0_6_116))))
 (let ((?x7918 (- (- ?x7914 (* (* 2.0 l_0_6_110) l_0_6_117)) (* (* 2.0 l_0_6_111) l_0_6_118))))
 (let ((?x7922 (- (- ?x7918 (* (* 2.0 l_0_6_19) l_0_6_26)) (* (* 2.0 l_0_6_20) l_0_6_27))))
 (let ((?x7926 (+ (- ?x7922 (* (* 2.0 l_0_6_21) l_0_6_28)) (* (* 2.0 l_0_6_34) l_0_6_41))))
 (let ((?x7930 (+ (+ ?x7926 (* (* 2.0 l_0_6_35) l_0_6_42)) (* (* 2.0 l_0_6_36) l_0_6_43))))
 (let ((?x7935 (- (- (+ ?x7930 (* (* 6.0 l_0_6_46) l_0_6_49)) ?x6144) (* (* 2.0 l_0_6_49) l_0_6_56))))
 (let ((?x7939 (- (- ?x7935 (* (* 2.0 l_0_6_50) l_0_6_57)) (* (* 2.0 l_0_6_51) l_0_6_58))))
 (let ((?x7944 (+ (+ (- ?x7939 (* (* 6.0 l_0_6_61) l_0_6_64)) ?x6160) (* (* 2.0 l_0_6_64) l_0_6_71))))
 (let ((?x7948 (+ (+ ?x7944 (* (* 2.0 l_0_6_65) l_0_6_72)) (* (* 2.0 l_0_6_66) l_0_6_73))))
 (= ?x7948 0.0))))))))))))))))
(assert
 (let ((?x7388 (* l_0_6_90 l_0_6_90)))
 (let ((?x7386 (* l_0_6_89 l_0_6_89)))
 (let ((?x7384 (* l_0_6_88 l_0_6_88)))
 (let ((?x7382 (* l_0_6_87 l_0_6_87)))
 (let ((?x7380 (* l_0_6_86 l_0_6_86)))
 (let ((?x1009 (+ (* (* (- 24.0) l_0_6_16) l_0_6_17) (* 4.0 (* l_0_6_26 l_0_6_26)))))
 (let ((?x8019 (+ (+ ?x1009 (* 4.0 (* l_0_6_27 l_0_6_27))) (* 4.0 (* l_0_6_28 l_0_6_28)))))
 (let ((?x8023 (+ (+ ?x8019 (* 4.0 (* l_0_6_29 l_0_6_29))) (* 4.0 (* l_0_6_30 l_0_6_30)))))
 (let ((?x8028 (- (+ ?x8023 (* (* 24.0 l_0_6_31) l_0_6_32)) (* (* 4.0 l_0_6_41) l_0_6_41))))
 (let ((?x8034 (- (- ?x8028 (* (* 4.0 l_0_6_42) l_0_6_42)) (* (* 4.0 l_0_6_43) l_0_6_43))))
 (let ((?x8040 (- (- ?x8034 (* (* 4.0 l_0_6_44) l_0_6_44)) (* (* 4.0 l_0_6_45) l_0_6_45))))
 (let ((?x8044 (+ (- ?x8040 (* (* 12.0 l_0_6_46) l_0_6_47)) (* (* 6.0 l_0_6_47) l_0_6_56))))
 (let ((?x8048 (+ (+ ?x8044 (* (* 6.0 l_0_6_48) l_0_6_57)) (* (* 12.0 l_0_6_61) l_0_6_62))))
 (let ((?x8052 (- (- ?x8048 (* (* 6.0 l_0_6_62) l_0_6_71)) (* (* 6.0 l_0_6_63) l_0_6_72))))
 (= (- (- (- (- (- ?x8052 ?x7380) ?x7382) ?x7384) ?x7386) ?x7388) 0.0))))))))))))))))
(assert
 (let ((?x8066 (+ (* (* (- 24.0) l_0_6_16) l_0_6_19) (* (* 24.0 l_0_6_31) l_0_6_34))))
 (let ((?x8070 (+ (- ?x8066 (* (* 12.0 l_0_6_46) l_0_6_49)) (* (* 6.0 l_0_6_49) l_0_6_56))))
 (let ((?x8074 (+ (+ ?x8070 (* (* 6.0 l_0_6_50) l_0_6_57)) (* (* 6.0 l_0_6_51) l_0_6_58))))
 (let ((?x8080 (- (- ?x8074 (* (* 4.0 l_0_6_56) l_0_6_56)) (* (* 4.0 l_0_6_57) l_0_6_57))))
 (let ((?x8086 (- (- ?x8080 (* (* 4.0 l_0_6_58) l_0_6_58)) (* (* 4.0 l_0_6_59) l_0_6_59))))
 (let ((?x8091 (+ (- ?x8086 (* (* 4.0 l_0_6_60) l_0_6_60)) (* (* 12.0 l_0_6_61) l_0_6_64))))
 (let ((?x8095 (- (- ?x8091 (* (* 6.0 l_0_6_64) l_0_6_71)) (* (* 6.0 l_0_6_65) l_0_6_72))))
 (let ((?x8098 (+ (- ?x8095 (* (* 6.0 l_0_6_66) l_0_6_73)) (* 4.0 (* l_0_6_71 l_0_6_71)))))
 (let ((?x8100 (+ (+ ?x8098 (* 4.0 (* l_0_6_72 l_0_6_72))) (* 4.0 (* l_0_6_73 l_0_6_73)))))
 (let ((?x8102 (+ (+ ?x8100 (* 4.0 (* l_0_6_74 l_0_6_74))) (* 4.0 (* l_0_6_75 l_0_6_75)))))
 (= ?x8102 0.0))))))))))))
(assert
 (let ((?x1308 (- (* (* (- 12.0) l_0_6_17) l_0_6_17) (* (* 12.0 l_0_6_18) l_0_6_18))))
 (let ((?x1336 (+ (+ ?x1308 (* 12.0 (* l_0_6_32 l_0_6_32))) (* 12.0 (* l_0_6_33 l_0_6_33)))))
 (let ((?x1369 (- (- ?x1336 (* (* 6.0 l_0_6_47) l_0_6_47)) (* (* 6.0 l_0_6_48) l_0_6_48))))
 (let ((?x1368 (+ (+ ?x1369 (* 6.0 (* l_0_6_62 l_0_6_62))) (* 6.0 (* l_0_6_63 l_0_6_63)))))
 (= ?x1368 0.0))))))
(assert
 (let ((?x8141 (- (* (* (- 24.0) l_0_6_17) l_0_6_19) (* (* 24.0 l_0_6_18) l_0_6_20))))
 (let ((?x8147 (+ (+ ?x8141 (* (* 24.0 l_0_6_32) l_0_6_34)) (* (* 24.0 l_0_6_33) l_0_6_35))))
 (let ((?x8153 (- (- ?x8147 (* (* 12.0 l_0_6_47) l_0_6_49)) (* (* 12.0 l_0_6_48) l_0_6_50))))
 (let ((?x8159 (+ (+ ?x8153 (* (* 12.0 l_0_6_62) l_0_6_64)) (* (* 12.0 l_0_6_63) l_0_6_65))))
 (= ?x8159 0.0))))))
(assert
 (let ((?x8178 (- (* (* (- 24.0) l_0_6_17) l_0_6_22) (* (* 24.0 l_0_6_18) l_0_6_23))))
 (let ((?x8189 (+ (+ ?x8178 (* (* 24.0 l_0_6_32) l_0_6_37)) (* (* 24.0 l_0_6_33) l_0_6_38))))
 (let ((?x8193 (- (- ?x8189 (* (* 12.0 l_0_6_47) l_0_6_52)) (* (* 12.0 l_0_6_48) l_0_6_53))))
 (let ((?x8197 (+ (+ ?x8193 (* (* 12.0 l_0_6_62) l_0_6_67)) (* (* 12.0 l_0_6_63) l_0_6_68))))
 (= ?x8197 0.0))))))
(assert
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x5686 (* ?x5685 l_0_6_62)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x5677 (* ?x5676 l_0_6_47)))
 (let ((?x1521 (- (* (* (- 24.0) l_0_6_17) l_0_6_26) (* (* 24.0 l_0_6_18) l_0_6_27))))
 (let ((?x8205 (+ (+ ?x1521 (* (* 24.0 l_0_6_32) l_0_6_41)) (* (* 24.0 l_0_6_33) l_0_6_42))))
 (let ((?x8210 (- (- (+ ?x8205 ?x5677) (* (* 12.0 l_0_6_47) l_0_6_56)) (* (* 12.0 l_0_6_48) l_0_6_57))))
 (let ((?x8215 (+ (+ (- ?x8210 ?x5686) (* (* 12.0 l_0_6_62) l_0_6_71)) (* (* 12.0 l_0_6_63) l_0_6_72))))
 (= ?x8215 0.0))))))))))
(assert
 (let ((?x8246 (- (* (* (- 12.0) l_0_6_19) l_0_6_19) (* (* 12.0 l_0_6_20) l_0_6_20))))
 (let ((?x8251 (+ (- ?x8246 (* (* 12.0 l_0_6_21) l_0_6_21)) (* 12.0 (* l_0_6_34 l_0_6_34)))))
 (let ((?x8255 (+ (+ ?x8251 (* 12.0 (* l_0_6_35 l_0_6_35))) (* 12.0 (* l_0_6_36 l_0_6_36)))))
 (let ((?x8259 (- (- ?x8255 (* (* 6.0 l_0_6_49) l_0_6_49)) (* (* 6.0 l_0_6_50) l_0_6_50))))
 (let ((?x8263 (+ (- ?x8259 (* (* 6.0 l_0_6_51) l_0_6_51)) (* 6.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x8267 (+ (+ ?x8263 (* 6.0 (* l_0_6_65 l_0_6_65))) (* 6.0 (* l_0_6_66 l_0_6_66)))))
 (= ?x8267 0.0))))))))
(assert
 (let ((?x8292 (- (* (* (- 24.0) l_0_6_19) l_0_6_22) (* (* 24.0 l_0_6_20) l_0_6_23))))
 (let ((?x8298 (+ (- ?x8292 (* (* 24.0 l_0_6_21) l_0_6_24)) (* (* 24.0 l_0_6_34) l_0_6_37))))
 (let ((?x8304 (+ (+ ?x8298 (* (* 24.0 l_0_6_35) l_0_6_38)) (* (* 24.0 l_0_6_36) l_0_6_39))))
 (let ((?x8310 (- (- ?x8304 (* (* 12.0 l_0_6_49) l_0_6_52)) (* (* 12.0 l_0_6_50) l_0_6_53))))
 (let ((?x8316 (+ (- ?x8310 (* (* 12.0 l_0_6_51) l_0_6_54)) (* (* 12.0 l_0_6_64) l_0_6_67))))
 (let ((?x8322 (+ (+ ?x8316 (* (* 12.0 l_0_6_65) l_0_6_68)) (* (* 12.0 l_0_6_66) l_0_6_69))))
 (= ?x8322 0.0))))))))
(assert
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x5831 (* ?x5685 l_0_6_64)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x5818 (* ?x5676 l_0_6_49)))
 (let ((?x8342 (- (* (* (- 24.0) l_0_6_19) l_0_6_26) (* (* 24.0 l_0_6_20) l_0_6_27))))
 (let ((?x8355 (+ (- ?x8342 (* (* 24.0 l_0_6_21) l_0_6_28)) (* (* 24.0 l_0_6_34) l_0_6_41))))
 (let ((?x8359 (+ (+ ?x8355 (* (* 24.0 l_0_6_35) l_0_6_42)) (* (* 24.0 l_0_6_36) l_0_6_43))))
 (let ((?x8364 (- (- (+ ?x8359 ?x5818) (* (* 12.0 l_0_6_49) l_0_6_56)) (* (* 12.0 l_0_6_50) l_0_6_57))))
 (let ((?x8369 (+ (- (- ?x8364 (* (* 12.0 l_0_6_51) l_0_6_58)) ?x5831) (* (* 12.0 l_0_6_64) l_0_6_71))))
 (let ((?x8373 (+ (+ ?x8369 (* (* 12.0 l_0_6_65) l_0_6_72)) (* (* 12.0 l_0_6_66) l_0_6_73))))
 (= ?x8373 0.0))))))))))))
(assert
 (let ((?x6017 (* l_0_6_70 l_0_6_70)))
 (let ((?x8418 (* 6.0 ?x6017)))
 (let ((?x6014 (* l_0_6_69 l_0_6_69)))
 (let ((?x8416 (* 6.0 ?x6014)))
 (let ((?x6011 (* l_0_6_68 l_0_6_68)))
 (let ((?x8414 (* 6.0 ?x6011)))
 (let ((?x6008 (* l_0_6_67 l_0_6_67)))
 (let ((?x8412 (* 6.0 ?x6008)))
 (let ((?x5991 (* l_0_6_40 l_0_6_40)))
 (let ((?x8402 (* 12.0 ?x5991)))
 (let ((?x5988 (* l_0_6_39 l_0_6_39)))
 (let ((?x8400 (* 12.0 ?x5988)))
 (let ((?x5985 (* l_0_6_38 l_0_6_38)))
 (let ((?x8398 (* 12.0 ?x5985)))
 (let ((?x5982 (* l_0_6_37 l_0_6_37)))
 (let ((?x8396 (* 12.0 ?x5982)))
 (let ((?x8389 (- (* (* (- 12.0) l_0_6_22) l_0_6_22) (* (* 12.0 l_0_6_23) l_0_6_23))))
 (let ((?x8395 (- (- ?x8389 (* (* 12.0 l_0_6_24) l_0_6_24)) (* (* 12.0 l_0_6_25) l_0_6_25))))
 (let ((?x8405 (- (+ (+ (+ (+ ?x8395 ?x8396) ?x8398) ?x8400) ?x8402) (* (* 6.0 l_0_6_52) l_0_6_52))))
 (let ((?x8409 (- (- ?x8405 (* (* 6.0 l_0_6_53) l_0_6_53)) (* (* 6.0 l_0_6_54) l_0_6_54))))
 (let ((?x8417 (+ (+ (+ (- ?x8409 (* (* 6.0 l_0_6_55) l_0_6_55)) ?x8412) ?x8414) ?x8416)))
 (= (+ ?x8417 ?x8418) 0.0)))))))))))))))))))))))
(assert
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x5833 (* ?x5685 l_0_6_67)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x5820 (* ?x5676 l_0_6_52)))
 (let ((?x8445 (- (* (* (- 24.0) l_0_6_22) l_0_6_26) (* (* 24.0 l_0_6_23) l_0_6_27))))
 (let ((?x8451 (- (- ?x8445 (* (* 24.0 l_0_6_24) l_0_6_28)) (* (* 24.0 l_0_6_25) l_0_6_29))))
 (let ((?x8457 (+ (+ ?x8451 (* (* 24.0 l_0_6_37) l_0_6_41)) (* (* 24.0 l_0_6_38) l_0_6_42))))
 (let ((?x8463 (+ (+ ?x8457 (* (* 24.0 l_0_6_39) l_0_6_43)) (* (* 24.0 l_0_6_40) l_0_6_44))))
 (let ((?x8470 (- (- (+ ?x8463 ?x5820) (* (* 12.0 l_0_6_52) l_0_6_56)) (* (* 12.0 l_0_6_53) l_0_6_57))))
 (let ((?x8476 (- (- ?x8470 (* (* 12.0 l_0_6_54) l_0_6_58)) (* (* 12.0 l_0_6_55) l_0_6_59))))
 (let ((?x8483 (+ (+ (- ?x8476 ?x5833) (* (* 12.0 l_0_6_67) l_0_6_71)) (* (* 12.0 l_0_6_68) l_0_6_72))))
 (let ((?x8489 (+ (+ ?x8483 (* (* 12.0 l_0_6_69) l_0_6_73)) (* (* 12.0 l_0_6_70) l_0_6_74))))
 (= ?x8489 0.0))))))))))))))
(assert
 (let ((?x5685 (* 8.0 l_0_6_61)))
 (let ((?x6160 (* ?x5685 l_0_6_71)))
 (let ((?x5676 (* 8.0 l_0_6_46)))
 (let ((?x6144 (* ?x5676 l_0_6_56)))
 (let ((?x8526 (- (* (* (- 12.0) l_0_6_26) l_0_6_26) (* (* 12.0 l_0_6_27) l_0_6_27))))
 (let ((?x8532 (- (- ?x8526 (* (* 12.0 l_0_6_28) l_0_6_28)) (* (* 12.0 l_0_6_29) l_0_6_29))))
 (let ((?x8537 (+ (- ?x8532 (* (* 12.0 l_0_6_30) l_0_6_30)) (* 12.0 (* l_0_6_41 l_0_6_41)))))
 (let ((?x8541 (+ (+ ?x8537 (* 12.0 (* l_0_6_42 l_0_6_42))) (* 12.0 (* l_0_6_43 l_0_6_43)))))
 (let ((?x8545 (+ (+ ?x8541 (* 12.0 (* l_0_6_44 l_0_6_44))) (* 12.0 (* l_0_6_45 l_0_6_45)))))
 (let ((?x8552 (- (- (+ ?x8545 ?x6144) (* (* 6.0 l_0_6_56) l_0_6_56)) (* (* 6.0 l_0_6_57) l_0_6_57))))
 (let ((?x8558 (- (- ?x8552 (* (* 6.0 l_0_6_58) l_0_6_58)) (* (* 6.0 l_0_6_59) l_0_6_59))))
 (let ((?x8564 (+ (- (- ?x8558 (* (* 6.0 l_0_6_60) l_0_6_60)) ?x6160) (* 6.0 (* l_0_6_71 l_0_6_71)))))
 (let ((?x8568 (+ (+ ?x8564 (* 6.0 (* l_0_6_72 l_0_6_72))) (* 6.0 (* l_0_6_73 l_0_6_73)))))
 (let ((?x8572 (+ (+ ?x8568 (* 6.0 (* l_0_6_74 l_0_6_74))) (* 6.0 (* l_0_6_75 l_0_6_75)))))
 (= ?x8572 0.0))))))))))))))))
(assert
 (let ((?x6343 (* l_0_6_78 l_0_6_78)))
 (let ((?x6338 (* l_0_6_77 l_0_6_77)))
 (let ((?x8622 (+ (* 4.0 (* l_0_6_17 l_0_6_17)) (* 4.0 (* l_0_6_18 l_0_6_18)))))
 (let ((?x8628 (- (- ?x8622 (* (* 4.0 l_0_6_32) l_0_6_32)) (* (* 4.0 l_0_6_33) l_0_6_33))))
 (= (- (- ?x8628 ?x6338) ?x6343) 0.0))))))
(assert
 (let ((?x6340 (* 2.0 l_0_6_78)))
 (let ((?x6438 (* ?x6340 l_0_6_80)))
 (let ((?x6335 (* 2.0 l_0_6_77)))
 (let ((?x6436 (* ?x6335 l_0_6_79)))
 (let ((?x8642 (+ (* (* 8.0 l_0_6_17) l_0_6_19) (* (* 8.0 l_0_6_18) l_0_6_20))))
 (let ((?x8646 (- (- ?x8642 (* (* 8.0 l_0_6_32) l_0_6_34)) (* (* 8.0 l_0_6_33) l_0_6_35))))
 (let ((?x8652 (- (- ?x8646 (* (* 4.0 l_0_6_47) l_0_6_47)) (* (* 4.0 l_0_6_48) l_0_6_48))))
 (let ((?x8654 (+ (+ ?x8652 (* 4.0 (* l_0_6_62 l_0_6_62))) (* 4.0 (* l_0_6_63 l_0_6_63)))))
 (= (- (- ?x8654 ?x6436) ?x6438) 0.0))))))))))
(assert
 (let ((?x6340 (* 2.0 l_0_6_78)))
 (let ((?x6686 (* ?x6340 l_0_6_87)))
 (let ((?x6335 (* 2.0 l_0_6_77)))
 (let ((?x6684 (* ?x6335 l_0_6_86)))
 (let ((?x6326 (* l_0_6_48 l_0_6_48)))
 (let ((?x8666 (* 3.0 ?x6326)))
 (let ((?x6323 (* l_0_6_47 l_0_6_47)))
 (let ((?x2013 (* 3.0 ?x6323)))
 (let ((?x2046 (+ (* (* 8.0 l_0_6_17) l_0_6_26) (* (* 8.0 l_0_6_18) l_0_6_27))))
 (let ((?x2012 (- (- ?x2046 (* (* 8.0 l_0_6_32) l_0_6_41)) (* (* 8.0 l_0_6_33) l_0_6_42))))
 (let ((?x8673 (- (- (+ (+ ?x2012 ?x2013) ?x8666) (* (* 3.0 l_0_6_62) l_0_6_62)) (* (* 3.0 l_0_6_63) l_0_6_63))))
 (= (- (- ?x8673 ?x6684) ?x6686) 0.0)))))))))))))
(assert
 (let ((?x6839 (* l_0_6_81 l_0_6_81)))
 (let ((?x6837 (* l_0_6_80 l_0_6_80)))
 (let ((?x6835 (* l_0_6_79 l_0_6_79)))
 (let ((?x6431 (* 8.0 l_0_6_63)))
 (let ((?x6432 (* ?x6431 l_0_6_65)))
 (let ((?x6426 (* 8.0 l_0_6_62)))
 (let ((?x6427 (* ?x6426 l_0_6_64)))
 (let ((?x6421 (* 8.0 l_0_6_48)))
 (let ((?x6422 (* ?x6421 l_0_6_50)))
 (let ((?x6416 (* 8.0 l_0_6_47)))
 (let ((?x6417 (* ?x6416 l_0_6_49)))
 (let ((?x2144 (+ (* 4.0 (* l_0_6_19 l_0_6_19)) (* 4.0 (* l_0_6_20 l_0_6_20)))))
 (let ((?x8693 (- (+ ?x2144 (* 4.0 (* l_0_6_21 l_0_6_21))) (* (* 4.0 l_0_6_34) l_0_6_34))))
 (let ((?x8699 (- (- ?x8693 (* (* 4.0 l_0_6_35) l_0_6_35)) (* (* 4.0 l_0_6_36) l_0_6_36))))
 (let ((?x8706 (- (- (- (+ (+ (- (- ?x8699 ?x6417) ?x6422) ?x6427) ?x6432) ?x6835) ?x6837) ?x6839)))
 (= ?x8706 0.0)))))))))))))))))
(assert
 (let ((?x6446 (* 2.0 l_0_6_81)))
 (let ((?x7053 (* ?x6446 l_0_6_88)))
 (let ((?x6443 (* 2.0 l_0_6_80)))
 (let ((?x7051 (* ?x6443 l_0_6_87)))
 (let ((?x6440 (* 2.0 l_0_6_79)))
 (let ((?x7049 (* ?x6440 l_0_6_86)))
 (let ((?x6431 (* 8.0 l_0_6_63)))
 (let ((?x6682 (* ?x6431 l_0_6_72)))
 (let ((?x6426 (* 8.0 l_0_6_62)))
 (let ((?x6677 (* ?x6426 l_0_6_71)))
 (let ((?x6421 (* 8.0 l_0_6_48)))
 (let ((?x6672 (* ?x6421 l_0_6_57)))
 (let ((?x6416 (* 8.0 l_0_6_47)))
 (let ((?x6667 (* ?x6416 l_0_6_56)))
 (let ((?x2170 (+ (* (* 8.0 l_0_6_19) l_0_6_26) (* (* 8.0 l_0_6_20) l_0_6_27))))
 (let ((?x8724 (- (+ ?x2170 (* (* 8.0 l_0_6_21) l_0_6_28)) (* (* 8.0 l_0_6_34) l_0_6_41))))
 (let ((?x8728 (- (- ?x8724 (* (* 8.0 l_0_6_35) l_0_6_42)) (* (* 8.0 l_0_6_36) l_0_6_43))))
 (let ((?x8733 (+ (- (+ ?x8728 (* (* 6.0 l_0_6_47) l_0_6_49)) ?x6667) (* (* 6.0 l_0_6_48) l_0_6_50))))
 (let ((?x8739 (- (+ (- (- ?x8733 ?x6672) (* (* 6.0 l_0_6_62) l_0_6_64)) ?x6677) (* (* 6.0 l_0_6_63) l_0_6_65))))
 (= (- (- (- (+ ?x8739 ?x6682) ?x7049) ?x7051) ?x7053) 0.0)))))))))))))))))))))
(assert
 (let ((?x6333 (* (* 4.0 l_0_6_63) l_0_6_63)))
 (let ((?x6330 (* (* 4.0 l_0_6_62) l_0_6_62)))
 (let ((?x6326 (* l_0_6_48 l_0_6_48)))
 (let ((?x6327 (* 4.0 ?x6326)))
 (let ((?x6323 (* l_0_6_47 l_0_6_47)))
 (let ((?x6324 (* 4.0 ?x6323)))
 (= (- (- (+ ?x6324 ?x6327) ?x6330) ?x6333) 0.0))))))))
(assert
 (let ((?x6431 (* 8.0 l_0_6_63)))
 (let ((?x6432 (* ?x6431 l_0_6_65)))
 (let ((?x6426 (* 8.0 l_0_6_62)))
 (let ((?x6427 (* ?x6426 l_0_6_64)))
 (let ((?x6421 (* 8.0 l_0_6_48)))
 (let ((?x6422 (* ?x6421 l_0_6_50)))
 (let ((?x6416 (* 8.0 l_0_6_47)))
 (let ((?x6417 (* ?x6416 l_0_6_49)))
 (= (- (- (+ ?x6417 ?x6422) ?x6427) ?x6432) 0.0))))))))))
(assert
 (let ((?x6431 (* 8.0 l_0_6_63)))
 (let ((?x6434 (* ?x6431 l_0_6_68)))
 (let ((?x6426 (* 8.0 l_0_6_62)))
 (let ((?x6429 (* ?x6426 l_0_6_67)))
 (let ((?x6421 (* 8.0 l_0_6_48)))
 (let ((?x6424 (* ?x6421 l_0_6_53)))
 (let ((?x6416 (* 8.0 l_0_6_47)))
 (let ((?x6419 (* ?x6416 l_0_6_52)))
 (= (- (- (+ ?x6419 ?x6424) ?x6429) ?x6434) 0.0))))))))))
(assert
 (let ((?x6431 (* 8.0 l_0_6_63)))
 (let ((?x6682 (* ?x6431 l_0_6_72)))
 (let ((?x6426 (* 8.0 l_0_6_62)))
 (let ((?x6677 (* ?x6426 l_0_6_71)))
 (let ((?x6421 (* 8.0 l_0_6_48)))
 (let ((?x6672 (* ?x6421 l_0_6_57)))
 (let ((?x6416 (* 8.0 l_0_6_47)))
 (let ((?x6667 (* ?x6416 l_0_6_56)))
 (= (- (- (+ ?x6667 ?x6672) ?x6677) ?x6682) 0.0))))))))))
(assert
 (let ((?x6833 (* (* 4.0 l_0_6_66) l_0_6_66)))
 (let ((?x6827 (* (* 4.0 l_0_6_65) l_0_6_65)))
 (let ((?x6821 (* (* 4.0 l_0_6_64) l_0_6_64)))
 (let ((?x6812 (* l_0_6_51 l_0_6_51)))
 (let ((?x6813 (* 4.0 ?x6812)))
 (let ((?x6806 (* l_0_6_50 l_0_6_50)))
 (let ((?x6807 (* 4.0 ?x6806)))
 (let ((?x6798 (* l_0_6_49 l_0_6_49)))
 (let ((?x6799 (* 4.0 ?x6798)))
 (= (- (- (- (+ (+ ?x6799 ?x6807) ?x6813) ?x6821) ?x6827) ?x6833) 0.0)))))))))))
(assert
 (let ((?x6829 (* 8.0 l_0_6_66)))
 (let ((?x6830 (* ?x6829 l_0_6_69)))
 (let ((?x6823 (* 8.0 l_0_6_65)))
 (let ((?x6824 (* ?x6823 l_0_6_68)))
 (let ((?x6817 (* 8.0 l_0_6_64)))
 (let ((?x6818 (* ?x6817 l_0_6_67)))
 (let ((?x6809 (* 8.0 l_0_6_51)))
 (let ((?x6810 (* ?x6809 l_0_6_54)))
 (let ((?x6803 (* 8.0 l_0_6_50)))
 (let ((?x6804 (* ?x6803 l_0_6_53)))
 (let ((?x6795 (* 8.0 l_0_6_49)))
 (let ((?x6796 (* ?x6795 l_0_6_52)))
 (= (- (- (- (+ (+ ?x6796 ?x6804) ?x6810) ?x6818) ?x6824) ?x6830) 0.0))))))))))))))
(assert
 (let ((?x6829 (* 8.0 l_0_6_66)))
 (let ((?x7035 (* ?x6829 l_0_6_73)))
 (let ((?x6823 (* 8.0 l_0_6_65)))
 (let ((?x7030 (* ?x6823 l_0_6_72)))
 (let ((?x6817 (* 8.0 l_0_6_64)))
 (let ((?x7025 (* ?x6817 l_0_6_71)))
 (let ((?x6809 (* 8.0 l_0_6_51)))
 (let ((?x7008 (* ?x6809 l_0_6_58)))
 (let ((?x6803 (* 8.0 l_0_6_50)))
 (let ((?x7003 (* ?x6803 l_0_6_57)))
 (let ((?x6795 (* 8.0 l_0_6_49)))
 (let ((?x6998 (* ?x6795 l_0_6_56)))
 (= (- (- (- (+ (+ ?x6998 ?x7003) ?x7008) ?x7025) ?x7030) ?x7035) 0.0))))))))))))))
(assert
 (let ((?x7163 (* (* 4.0 l_0_6_70) l_0_6_70)))
 (let ((?x7158 (* (* 4.0 l_0_6_69) l_0_6_69)))
 (let ((?x7155 (* (* 4.0 l_0_6_68) l_0_6_68)))
 (let ((?x7152 (* (* 4.0 l_0_6_67) l_0_6_67)))
 (let ((?x6074 (* l_0_6_55 l_0_6_55)))
 (let ((?x6967 (* 4.0 ?x6074)))
 (let ((?x6070 (* l_0_6_54 l_0_6_54)))
 (let ((?x6962 (* 4.0 ?x6070)))
 (let ((?x6066 (* l_0_6_53 l_0_6_53)))
 (let ((?x6957 (* 4.0 ?x6066)))
 (let ((?x6062 (* l_0_6_52 l_0_6_52)))
 (let ((?x6952 (* 4.0 ?x6062)))
 (let ((?x8810 (- (- (- (- (+ (+ (+ ?x6952 ?x6957) ?x6962) ?x6967) ?x7152) ?x7155) ?x7158) ?x7163)))
 (= ?x8810 0.0)))))))))))))))
(assert
 (let ((?x7047 (* (* 8.0 l_0_6_70) l_0_6_74)))
 (let ((?x7044 (* (* 8.0 l_0_6_69) l_0_6_73)))
 (let ((?x7041 (* (* 8.0 l_0_6_68) l_0_6_72)))
 (let ((?x7038 (* (* 8.0 l_0_6_67) l_0_6_71)))
 (let ((?x7020 (* (* 8.0 l_0_6_55) l_0_6_59)))
 (let ((?x7017 (* (* 8.0 l_0_6_54) l_0_6_58)))
 (let ((?x7014 (* (* 8.0 l_0_6_53) l_0_6_57)))
 (let ((?x7011 (* (* 8.0 l_0_6_52) l_0_6_56)))
 (let ((?x8821 (- (- (- (- (+ (+ (+ ?x7011 ?x7014) ?x7017) ?x7020) ?x7038) ?x7041) ?x7044) ?x7047)))
 (= ?x8821 0.0)))))))))))
(assert
 (let ((?x7378 (* (* 4.0 l_0_6_75) l_0_6_75)))
 (let ((?x7375 (* (* 4.0 l_0_6_74) l_0_6_74)))
 (let ((?x7372 (* (* 4.0 l_0_6_73) l_0_6_73)))
 (let ((?x7369 (* (* 4.0 l_0_6_72) l_0_6_72)))
 (let ((?x7366 (* (* 4.0 l_0_6_71) l_0_6_71)))
 (let ((?x5239 (* l_0_6_60 l_0_6_60)))
 (let ((?x7349 (* 4.0 ?x5239)))
 (let ((?x5236 (* l_0_6_59 l_0_6_59)))
 (let ((?x7347 (* 4.0 ?x5236)))
 (let ((?x5233 (* l_0_6_58 l_0_6_58)))
 (let ((?x7345 (* 4.0 ?x5233)))
 (let ((?x5230 (* l_0_6_57 l_0_6_57)))
 (let ((?x7343 (* 4.0 ?x5230)))
 (let ((?x5227 (* l_0_6_56 l_0_6_56)))
 (let ((?x7341 (* 4.0 ?x5227)))
 (let ((?x8839 (- (- (- (+ (+ (+ (+ ?x7341 ?x7343) ?x7345) ?x7347) ?x7349) ?x7366) ?x7369) ?x7372)))
 (= (- (- ?x8839 ?x7375) ?x7378) 0.0))))))))))))))))))
(assert
 (let ((?x6829 (* 8.0 l_0_6_66)))
 (let ((?x7035 (* ?x6829 l_0_6_73)))
 (let ((?x6823 (* 8.0 l_0_6_65)))
 (let ((?x7030 (* ?x6823 l_0_6_72)))
 (let ((?x6817 (* 8.0 l_0_6_64)))
 (let ((?x7025 (* ?x6817 l_0_6_71)))
 (let ((?x6812 (* l_0_6_51 l_0_6_51)))
 (let ((?x2514 (* 3.0 ?x6812)))
 (let ((?x6809 (* 8.0 l_0_6_51)))
 (let ((?x7008 (* ?x6809 l_0_6_58)))
 (let ((?x6806 (* l_0_6_50 l_0_6_50)))
 (let ((?x2511 (* 3.0 ?x6806)))
 (let ((?x6803 (* 8.0 l_0_6_50)))
 (let ((?x7003 (* ?x6803 l_0_6_57)))
 (let ((?x6798 (* l_0_6_49 l_0_6_49)))
 (let ((?x2537 (* 3.0 ?x6798)))
 (let ((?x2513 (- (+ (- (+ (* (* (- 8.0) l_0_6_49) l_0_6_56) ?x2537) ?x7003) ?x2511) ?x7008)))
 (let ((?x8848 (+ (- (+ (+ ?x2513 ?x2514) ?x7025) (* (* 3.0 l_0_6_64) l_0_6_64)) ?x7030)))
 (let ((?x8855 (- (+ (- ?x8848 (* (* 3.0 l_0_6_65) l_0_6_65)) ?x7035) (* (* 3.0 l_0_6_66) l_0_6_66))))
 (= ?x8855 0.0)))))))))))))))))))))
(assert
 (let ((?x6887 (* l_0_6_66 l_0_6_66)))
 (let ((?x6888 (* 4.0 ?x6887)))
 (let ((?x6879 (* l_0_6_65 l_0_6_65)))
 (let ((?x6880 (* 4.0 ?x6879)))
 (let ((?x6871 (* l_0_6_64 l_0_6_64)))
 (let ((?x6872 (* 4.0 ?x6871)))
 (let ((?x8885 (- (* (* (- 4.0) l_0_6_49) l_0_6_49) (* (* 4.0 l_0_6_50) l_0_6_50))))
 (let ((?x8891 (+ (+ (+ (- ?x8885 (* (* 4.0 l_0_6_51) l_0_6_51)) ?x6872) ?x6880) ?x6888)))
 (= ?x8891 0.0))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_106 0.0))
(assert
 (>= l_0_6_108 0.0))
(assert
 (>= l_0_6_111 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_120 0.0))
(assert
 (let ((?x8942 (* l_0_7_91 l_0_7_91)))
 (let ((?x8935 (+ (- _a_0_ (* (* 1.0 l_0_7_16) l_0_7_16)) (* 1.0 (* l_0_7_31 l_0_7_31)))))
 (let ((?x8941 (+ (- ?x8935 (* (* 1.0 l_0_7_46) l_0_7_46)) (* 1.0 (* l_0_7_61 l_0_7_61)))))
 (= (- ?x8941 ?x8942) 0.0)))))
(assert
 (let ((?x8973 (* l_0_7_76 l_0_7_76)))
 (let ((?x8971 (* (* 4.0 l_0_7_61) l_0_7_61)))
 (let ((?x8949 (* l_0_7_46 l_0_7_46)))
 (let ((?x8965 (* 4.0 ?x8949)))
 (let ((?x8958 (- (- _a_1_ (* l_0_7_1 l_0_7_1)) (* (* 2.0 l_0_7_16) l_0_7_22))))
 (let ((?x8964 (- (+ ?x8958 (* (* 2.0 l_0_7_31) l_0_7_37)) (* (* 2.0 l_0_7_46) l_0_7_52))))
 (let ((?x8974 (- (- (+ (+ ?x8964 ?x8965) (* (* 2.0 l_0_7_61) l_0_7_67)) ?x8971) ?x8973)))
 (= (- ?x8974 (* (* 2.0 l_0_7_91) l_0_7_97)) 0.0)))))))))
(assert
 (let ((?x8973 (* l_0_7_76 l_0_7_76)))
 (let ((?x8945 (* l_0_7_16 l_0_7_16)))
 (let ((?x2742 (* 4.0 ?x8945)))
 (let ((?x2661 (+ (+ (- _a_2_ (* (* 2.0 l_0_7_16) l_0_7_17)) ?x2742) (* (* 2.0 l_0_7_31) l_0_7_32))))
 (let ((?x8988 (- (- ?x2661 (* (* 4.0 l_0_7_31) l_0_7_31)) (* (* 2.0 l_0_7_46) l_0_7_47))))
 (let ((?x8993 (- (+ (+ ?x8988 (* (* 2.0 l_0_7_61) l_0_7_62)) ?x8973) (* (* 2.0 l_0_7_91) l_0_7_92))))
 (= ?x8993 0.0))))))))
(assert
 (let ((?x9046 (* 2.0 l_0_7_76)))
 (let ((?x9049 (* ?x9046 l_0_7_82)))
 (let ((?x9047 (* ?x9046 l_0_7_77)))
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9038 (* ?x9037 l_0_7_62)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9029 (* ?x9028 l_0_7_47)))
 (let ((?x9012 (+ (* (* (- 2.0) l_0_7_1) l_0_7_2) (* (* 8.0 l_0_7_16) l_0_7_22))))
 (let ((?x9018 (- (- ?x9012 (* (* 2.0 l_0_7_17) l_0_7_22)) (* (* 2.0 l_0_7_18) l_0_7_23))))
 (let ((?x9024 (+ (- ?x9018 (* (* 8.0 l_0_7_31) l_0_7_37)) (* (* 2.0 l_0_7_32) l_0_7_37))))
 (let ((?x9033 (- (+ (+ ?x9024 (* (* 2.0 l_0_7_33) l_0_7_38)) ?x9029) (* (* 2.0 l_0_7_47) l_0_7_52))))
 (let ((?x9042 (+ (- (- ?x9033 (* (* 2.0 l_0_7_48) l_0_7_53)) ?x9038) (* (* 2.0 l_0_7_62) l_0_7_67))))
 (let ((?x9053 (- (+ (- (+ ?x9042 (* (* 2.0 l_0_7_63) l_0_7_68)) ?x9047) ?x9049) (* (* 2.0 l_0_7_92) l_0_7_97))))
 (= (- ?x9053 (* (* 2.0 l_0_7_93) l_0_7_98)) 0.0)))))))))))))))
(assert
 (let ((?x9046 (* 2.0 l_0_7_76)))
 (let ((?x9135 (* ?x9046 l_0_7_79)))
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9124 (* ?x9037 l_0_7_67)))
 (let ((?x9122 (* ?x9037 l_0_7_64)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9111 (* ?x9028 l_0_7_52)))
 (let ((?x9109 (* ?x9028 l_0_7_49)))
 (let ((?x2913 (- (* (* (- 2.0) l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_19) l_0_7_22))))
 (let ((?x9099 (- (- ?x2913 (* (* 2.0 l_0_7_20) l_0_7_23)) (* (* 2.0 l_0_7_21) l_0_7_24))))
 (let ((?x9105 (+ (+ ?x9099 (* (* 2.0 l_0_7_34) l_0_7_37)) (* (* 2.0 l_0_7_35) l_0_7_38))))
 (let ((?x9115 (- (- (+ (+ ?x9105 (* (* 2.0 l_0_7_36) l_0_7_39)) ?x9109) ?x9111) (* (* 2.0 l_0_7_49) l_0_7_52))))
 (let ((?x9121 (- (- ?x9115 (* (* 2.0 l_0_7_50) l_0_7_53)) (* (* 2.0 l_0_7_51) l_0_7_54))))
 (let ((?x9131 (+ (+ (+ (- ?x9121 ?x9122) ?x9124) (* (* 2.0 l_0_7_64) l_0_7_67)) (* (* 2.0 l_0_7_65) l_0_7_68))))
 (let ((?x9139 (- (- (+ ?x9131 (* (* 2.0 l_0_7_66) l_0_7_69)) ?x9135) (* (* 2.0 l_0_7_94) l_0_7_97))))
 (let ((?x9145 (- (- ?x9139 (* (* 2.0 l_0_7_95) l_0_7_98)) (* (* 2.0 l_0_7_96) l_0_7_99))))
 (= ?x9145 0.0))))))))))))))))))
(assert
 (let ((?x9252 (* l_0_7_99 l_0_7_99)))
 (let ((?x9250 (* l_0_7_98 l_0_7_98)))
 (let ((?x9248 (* l_0_7_97 l_0_7_97)))
 (let ((?x9046 (* 2.0 l_0_7_76)))
 (let ((?x9049 (* ?x9046 l_0_7_82)))
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9124 (* ?x9037 l_0_7_67)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9111 (* ?x9028 l_0_7_52)))
 (let ((?x9199 (- (- (* (* (- 2.0) l_0_7_1) l_0_7_7) (* l_0_7_100 l_0_7_100)) (* (* 1.0 l_0_7_22) l_0_7_22))))
 (let ((?x9205 (- (- ?x9199 (* (* 1.0 l_0_7_23) l_0_7_23)) (* (* 1.0 l_0_7_24) l_0_7_24))))
 (let ((?x9211 (+ (- ?x9205 (* (* 1.0 l_0_7_25) l_0_7_25)) (* 1.0 (* l_0_7_37 l_0_7_37)))))
 (let ((?x9217 (+ (+ ?x9211 (* 1.0 (* l_0_7_38 l_0_7_38))) (* 1.0 (* l_0_7_39 l_0_7_39)))))
 (let ((?x9224 (- (+ (+ ?x9217 (* 1.0 (* l_0_7_40 l_0_7_40))) ?x9111) (* (* 1.0 l_0_7_52) l_0_7_52))))
 (let ((?x9230 (- (- ?x9224 (* (* 1.0 l_0_7_53) l_0_7_53)) (* (* 1.0 l_0_7_54) l_0_7_54))))
 (let ((?x9237 (+ (- (- ?x9230 (* (* 1.0 l_0_7_55) l_0_7_55)) ?x9124) (* 1.0 (* l_0_7_67 l_0_7_67)))))
 (let ((?x9243 (+ (+ ?x9237 (* 1.0 (* l_0_7_68 l_0_7_68))) (* 1.0 (* l_0_7_69 l_0_7_69)))))
 (let ((?x9251 (- (- (- (+ ?x9243 (* 1.0 (* l_0_7_70 l_0_7_70))) ?x9049) ?x9248) ?x9250)))
 (= (- ?x9251 ?x9252) 0.0))))))))))))))))))))
(assert
 (let ((?x9046 (* 2.0 l_0_7_76)))
 (let ((?x9343 (* ?x9046 l_0_7_86)))
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9329 (* ?x9037 l_0_7_71)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9312 (* ?x9028 l_0_7_56)))
 (let ((?x9275 (- (* (* (- 2.0) l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_100) l_0_7_104))))
 (let ((?x9281 (- (- ?x9275 (* (* 2.0 l_0_7_101) l_0_7_97)) (* (* 2.0 l_0_7_102) l_0_7_98))))
 (let ((?x9287 (- (- ?x9281 (* (* 2.0 l_0_7_103) l_0_7_99)) (* (* 2.0 l_0_7_22) l_0_7_26))))
 (let ((?x9293 (- (- ?x9287 (* (* 2.0 l_0_7_23) l_0_7_27)) (* (* 2.0 l_0_7_24) l_0_7_28))))
 (let ((?x9299 (+ (- ?x9293 (* (* 2.0 l_0_7_25) l_0_7_29)) (* (* 2.0 l_0_7_37) l_0_7_41))))
 (let ((?x9305 (+ (+ ?x9299 (* (* 2.0 l_0_7_38) l_0_7_42)) (* (* 2.0 l_0_7_39) l_0_7_43))))
 (let ((?x9311 (+ (+ ?x9305 (* (* 2.0 l_0_7_40) l_0_7_44)) (* (* 6.0 l_0_7_46) l_0_7_52))))
 (let ((?x9319 (- (- (+ ?x9311 ?x9312) (* (* 2.0 l_0_7_52) l_0_7_56)) (* (* 2.0 l_0_7_53) l_0_7_57))))
 (let ((?x9325 (- (- ?x9319 (* (* 2.0 l_0_7_54) l_0_7_58)) (* (* 2.0 l_0_7_55) l_0_7_59))))
 (let ((?x9333 (+ (- (- ?x9325 (* (* 6.0 l_0_7_61) l_0_7_67)) ?x9329) (* (* 2.0 l_0_7_67) l_0_7_71))))
 (let ((?x9339 (+ (+ ?x9333 (* (* 2.0 l_0_7_68) l_0_7_72)) (* (* 2.0 l_0_7_69) l_0_7_73))))
 (= (- (+ ?x9339 (* (* 2.0 l_0_7_70) l_0_7_74)) ?x9343) 0.0)))))))))))))))))))
(assert
 (let ((?x9422 (* l_0_7_78 l_0_7_78)))
 (let ((?x9419 (* 2.0 l_0_7_78)))
 (let ((?x9420 (* ?x9419 l_0_7_83)))
 (let ((?x9417 (* l_0_7_77 l_0_7_77)))
 (let ((?x9414 (* 2.0 l_0_7_77)))
 (let ((?x9415 (* ?x9414 l_0_7_82)))
 (let ((?x9412 (* (* 4.0 l_0_7_63) l_0_7_63)))
 (let ((?x9409 (* (* 4.0 l_0_7_62) l_0_7_62)))
 (let ((?x9405 (* l_0_7_48 l_0_7_48)))
 (let ((?x9406 (* 4.0 ?x9405)))
 (let ((?x9402 (* l_0_7_47 l_0_7_47)))
 (let ((?x9403 (* 4.0 ?x9402)))
 (let ((?x9394 (* l_0_7_3 l_0_7_3)))
 (let ((?x9392 (* l_0_7_2 l_0_7_2)))
 (let ((?x9391 (+ (* (* 8.0 l_0_7_17) l_0_7_22) (* (* 8.0 l_0_7_18) l_0_7_23))))
 (let ((?x9401 (- (- (- (- ?x9391 ?x9392) ?x9394) (* (* 8.0 l_0_7_32) l_0_7_37)) (* (* 8.0 l_0_7_33) l_0_7_38))))
 (let ((?x9421 (+ (- (+ (- (- (+ (+ ?x9401 ?x9403) ?x9406) ?x9409) ?x9412) ?x9415) ?x9417) ?x9420)))
 (= (- ?x9421 ?x9422) 0.0)))))))))))))))))))
(assert
 (let ((?x9510 (* 2.0 l_0_7_81)))
 (let ((?x9511 (* ?x9510 l_0_7_84)))
 (let ((?x9507 (* 2.0 l_0_7_80)))
 (let ((?x9508 (* ?x9507 l_0_7_83)))
 (let ((?x9504 (* 2.0 l_0_7_79)))
 (let ((?x9505 (* ?x9504 l_0_7_82)))
 (let ((?x9419 (* 2.0 l_0_7_78)))
 (let ((?x9502 (* ?x9419 l_0_7_80)))
 (let ((?x9414 (* 2.0 l_0_7_77)))
 (let ((?x9500 (* ?x9414 l_0_7_79)))
 (let ((?x9495 (* 8.0 l_0_7_63)))
 (let ((?x9498 (* ?x9495 l_0_7_68)))
 (let ((?x9496 (* ?x9495 l_0_7_65)))
 (let ((?x9490 (* 8.0 l_0_7_62)))
 (let ((?x9493 (* ?x9490 l_0_7_67)))
 (let ((?x9491 (* ?x9490 l_0_7_64)))
 (let ((?x9485 (* 8.0 l_0_7_48)))
 (let ((?x9488 (* ?x9485 l_0_7_53)))
 (let ((?x9486 (* ?x9485 l_0_7_50)))
 (let ((?x9480 (* 8.0 l_0_7_47)))
 (let ((?x9483 (* ?x9480 l_0_7_52)))
 (let ((?x9481 (* ?x9480 l_0_7_49)))
 (let ((?x9461 (- (* (* 8.0 l_0_7_19) l_0_7_22) (* (* 2.0 l_0_7_2) l_0_7_4))))
 (let ((?x9467 (+ (+ ?x9461 (* (* 8.0 l_0_7_20) l_0_7_23)) (* (* 8.0 l_0_7_21) l_0_7_24))))
 (let ((?x9473 (- (- ?x9467 (* (* 2.0 l_0_7_3) l_0_7_5)) (* (* 8.0 l_0_7_34) l_0_7_37))))
 (let ((?x9479 (- (- ?x9473 (* (* 8.0 l_0_7_35) l_0_7_38)) (* (* 8.0 l_0_7_36) l_0_7_39))))
 (let ((?x9497 (- (+ (- (- (+ (- (+ ?x9479 ?x9481) ?x9483) ?x9486) ?x9488) ?x9491) ?x9493) ?x9496)))
 (= (+ (+ (+ (- (- (+ ?x9497 ?x9498) ?x9500) ?x9502) ?x9505) ?x9508) ?x9511) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x9584 (* l_0_7_85 l_0_7_85)))
 (let ((?x9582 (* l_0_7_84 l_0_7_84)))
 (let ((?x9580 (* l_0_7_83 l_0_7_83)))
 (let ((?x9578 (* l_0_7_82 l_0_7_82)))
 (let ((?x9419 (* 2.0 l_0_7_78)))
 (let ((?x9420 (* ?x9419 l_0_7_83)))
 (let ((?x9414 (* 2.0 l_0_7_77)))
 (let ((?x9415 (* ?x9414 l_0_7_82)))
 (let ((?x9495 (* 8.0 l_0_7_63)))
 (let ((?x9498 (* ?x9495 l_0_7_68)))
 (let ((?x9490 (* 8.0 l_0_7_62)))
 (let ((?x9493 (* ?x9490 l_0_7_67)))
 (let ((?x9485 (* 8.0 l_0_7_48)))
 (let ((?x9488 (* ?x9485 l_0_7_53)))
 (let ((?x9480 (* 8.0 l_0_7_47)))
 (let ((?x9483 (* ?x9480 l_0_7_52)))
 (let ((?x2570 (* l_0_7_25 l_0_7_25)))
 (let ((?x9556 (* 4.0 ?x2570)))
 (let ((?x2558 (* l_0_7_24 l_0_7_24)))
 (let ((?x9554 (* 4.0 ?x2558)))
 (let ((?x3059 (* l_0_7_23 l_0_7_23)))
 (let ((?x9552 (* 4.0 ?x3059)))
 (let ((?x9260 (* l_0_7_22 l_0_7_22)))
 (let ((?x3636 (* 4.0 ?x9260)))
 (let ((?x9557 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_2) l_0_7_7) ?x3636) ?x9552) ?x9554) ?x9556)))
 (let ((?x9562 (- (- ?x9557 (* (* 2.0 l_0_7_3) l_0_7_8)) (* (* 4.0 l_0_7_37) l_0_7_37))))
 (let ((?x9568 (- (- ?x9562 (* (* 4.0 l_0_7_38) l_0_7_38)) (* (* 4.0 l_0_7_39) l_0_7_39))))
 (let ((?x9574 (- (+ (+ (- ?x9568 (* (* 4.0 l_0_7_40) l_0_7_40)) ?x9483) ?x9488) ?x9493)))
 (let ((?x9585 (+ (+ (+ (+ (- (- (- ?x9574 ?x9498) ?x9415) ?x9420) ?x9578) ?x9580) ?x9582) ?x9584)))
 (= ?x9585 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x9649 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x9646 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x9643 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x9640 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x9419 (* 2.0 l_0_7_78)))
 (let ((?x9637 (* ?x9419 l_0_7_87)))
 (let ((?x9414 (* 2.0 l_0_7_77)))
 (let ((?x9635 (* ?x9414 l_0_7_86)))
 (let ((?x9495 (* 8.0 l_0_7_63)))
 (let ((?x9633 (* ?x9495 l_0_7_72)))
 (let ((?x9490 (* 8.0 l_0_7_62)))
 (let ((?x9628 (* ?x9490 l_0_7_71)))
 (let ((?x9485 (* 8.0 l_0_7_48)))
 (let ((?x9623 (* ?x9485 l_0_7_57)))
 (let ((?x9480 (* 8.0 l_0_7_47)))
 (let ((?x9618 (* ?x9480 l_0_7_56)))
 (let ((?x3695 (- (* (* (- 2.0) l_0_7_11) l_0_7_2) (* (* 2.0 l_0_7_12) l_0_7_3))))
 (let ((?x3720 (+ (+ ?x3695 (* (* 8.0 l_0_7_22) l_0_7_26)) (* (* 8.0 l_0_7_23) l_0_7_27))))
 (let ((?x9602 (+ (+ ?x3720 (* (* 8.0 l_0_7_24) l_0_7_28)) (* (* 8.0 l_0_7_25) l_0_7_29))))
 (let ((?x9608 (- (- ?x9602 (* (* 8.0 l_0_7_37) l_0_7_41)) (* (* 8.0 l_0_7_38) l_0_7_42))))
 (let ((?x9614 (- (- ?x9608 (* (* 8.0 l_0_7_39) l_0_7_43)) (* (* 8.0 l_0_7_40) l_0_7_44))))
 (let ((?x9622 (+ (+ (+ ?x9614 (* (* 6.0 l_0_7_47) l_0_7_52)) ?x9618) (* (* 6.0 l_0_7_48) l_0_7_53))))
 (let ((?x9632 (- (- (- (+ ?x9622 ?x9623) (* (* 6.0 l_0_7_62) l_0_7_67)) ?x9628) (* (* 6.0 l_0_7_63) l_0_7_68))))
 (let ((?x9650 (+ (+ (+ (+ (- (- (- ?x9632 ?x9633) ?x9635) ?x9637) ?x9640) ?x9643) ?x9646) ?x9649)))
 (= ?x9650 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9749 (* l_0_7_81 l_0_7_81)))
 (let ((?x9747 (* l_0_7_80 l_0_7_80)))
 (let ((?x9745 (* l_0_7_79 l_0_7_79)))
 (let ((?x9743 (* (* 4.0 l_0_7_66) l_0_7_66)))
 (let ((?x9739 (* 8.0 l_0_7_66)))
 (let ((?x9740 (* ?x9739 l_0_7_69)))
 (let ((?x9737 (* (* 4.0 l_0_7_65) l_0_7_65)))
 (let ((?x9733 (* 8.0 l_0_7_65)))
 (let ((?x9734 (* ?x9733 l_0_7_68)))
 (let ((?x9731 (* (* 4.0 l_0_7_64) l_0_7_64)))
 (let ((?x9727 (* 8.0 l_0_7_64)))
 (let ((?x9728 (* ?x9727 l_0_7_67)))
 (let ((?x9725 (* l_0_7_6 l_0_7_6)))
 (let ((?x9722 (* l_0_7_51 l_0_7_51)))
 (let ((?x9723 (* 4.0 ?x9722)))
 (let ((?x9719 (* 8.0 l_0_7_51)))
 (let ((?x9720 (* ?x9719 l_0_7_54)))
 (let ((?x9716 (* l_0_7_50 l_0_7_50)))
 (let ((?x9717 (* 4.0 ?x9716)))
 (let ((?x9713 (* 8.0 l_0_7_50)))
 (let ((?x9714 (* ?x9713 l_0_7_53)))
 (let ((?x9711 (* l_0_7_5 l_0_7_5)))
 (let ((?x9708 (* l_0_7_49 l_0_7_49)))
 (let ((?x9709 (* 4.0 ?x9708)))
 (let ((?x9710 (+ (- (* (- l_0_7_4) l_0_7_4) (* (* 8.0 l_0_7_49) l_0_7_52)) ?x9709)))
 (let ((?x9729 (+ (- (+ (- (+ (- (- ?x9710 ?x9711) ?x9714) ?x9717) ?x9720) ?x9723) ?x9725) ?x9728)))
 (let ((?x9748 (- (- (- (+ (- (+ (- ?x9729 ?x9731) ?x9734) ?x9737) ?x9740) ?x9743) ?x9745) ?x9747)))
 (= (- ?x9748 ?x9749) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x9510 (* 2.0 l_0_7_81)))
 (let ((?x9511 (* ?x9510 l_0_7_84)))
 (let ((?x9507 (* 2.0 l_0_7_80)))
 (let ((?x9508 (* ?x9507 l_0_7_83)))
 (let ((?x9504 (* 2.0 l_0_7_79)))
 (let ((?x9505 (* ?x9504 l_0_7_82)))
 (let ((?x9244 (* l_0_7_70 l_0_7_70)))
 (let ((?x9808 (* 4.0 ?x9244)))
 (let ((?x9241 (* l_0_7_69 l_0_7_69)))
 (let ((?x9806 (* 4.0 ?x9241)))
 (let ((?x9238 (* l_0_7_68 l_0_7_68)))
 (let ((?x9804 (* 4.0 ?x9238)))
 (let ((?x9235 (* l_0_7_67 l_0_7_67)))
 (let ((?x9802 (* 4.0 ?x9235)))
 (let ((?x9739 (* 8.0 l_0_7_66)))
 (let ((?x9740 (* ?x9739 l_0_7_69)))
 (let ((?x9733 (* 8.0 l_0_7_65)))
 (let ((?x9734 (* ?x9733 l_0_7_68)))
 (let ((?x9727 (* 8.0 l_0_7_64)))
 (let ((?x9728 (* ?x9727 l_0_7_67)))
 (let ((?x9719 (* 8.0 l_0_7_51)))
 (let ((?x9720 (* ?x9719 l_0_7_54)))
 (let ((?x9713 (* 8.0 l_0_7_50)))
 (let ((?x9714 (* ?x9713 l_0_7_53)))
 (let ((?x9705 (* 8.0 l_0_7_49)))
 (let ((?x9706 (* ?x9705 l_0_7_52)))
 (let ((?x9781 (- (+ (* (* (- 2.0) l_0_7_4) l_0_7_7) ?x9706) (* (* 2.0 l_0_7_5) l_0_7_8))))
 (let ((?x9789 (- (- (+ (+ ?x9781 ?x9714) ?x9720) (* (* 4.0 l_0_7_52) l_0_7_52)) (* (* 4.0 l_0_7_53) l_0_7_53))))
 (let ((?x9795 (- (- ?x9789 (* (* 4.0 l_0_7_54) l_0_7_54)) (* (* 4.0 l_0_7_55) l_0_7_55))))
 (let ((?x9801 (- (- (- (- ?x9795 (* (* 2.0 l_0_7_6) l_0_7_9)) ?x9728) ?x9734) ?x9740)))
 (let ((?x9812 (- (- (- (+ (+ (+ (+ ?x9801 ?x9802) ?x9804) ?x9806) ?x9808) ?x9505) ?x9508) ?x9511)))
 (= ?x9812 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x9510 (* 2.0 l_0_7_81)))
 (let ((?x9829 (* ?x9510 l_0_7_88)))
 (let ((?x9507 (* 2.0 l_0_7_80)))
 (let ((?x9827 (* ?x9507 l_0_7_87)))
 (let ((?x9504 (* 2.0 l_0_7_79)))
 (let ((?x9825 (* ?x9504 l_0_7_86)))
 (let ((?x9823 (* (* 8.0 l_0_7_70) l_0_7_74)))
 (let ((?x3957 (* (* 8.0 l_0_7_69) l_0_7_73)))
 (let ((?x3960 (* (* 8.0 l_0_7_68) l_0_7_72)))
 (let ((?x3959 (* (* 8.0 l_0_7_67) l_0_7_71)))
 (let ((?x9739 (* 8.0 l_0_7_66)))
 (let ((?x4003 (* ?x9739 l_0_7_73)))
 (let ((?x9733 (* 8.0 l_0_7_65)))
 (let ((?x4055 (* ?x9733 l_0_7_72)))
 (let ((?x9727 (* 8.0 l_0_7_64)))
 (let ((?x4044 (* ?x9727 l_0_7_71)))
 (let ((?x4098 (* (* 8.0 l_0_7_55) l_0_7_59)))
 (let ((?x4100 (* (* 8.0 l_0_7_54) l_0_7_58)))
 (let ((?x4089 (* (* 8.0 l_0_7_53) l_0_7_57)))
 (let ((?x4082 (* (* 8.0 l_0_7_52) l_0_7_56)))
 (let ((?x9719 (* 8.0 l_0_7_51)))
 (let ((?x4127 (* ?x9719 l_0_7_58)))
 (let ((?x9713 (* 8.0 l_0_7_50)))
 (let ((?x4140 (* ?x9713 l_0_7_57)))
 (let ((?x9705 (* 8.0 l_0_7_49)))
 (let ((?x4202 (* ?x9705 l_0_7_56)))
 (let ((?x4203 (- (* (* (- 2.0) l_0_7_11) l_0_7_4) (* (* 2.0 l_0_7_12) l_0_7_5))))
 (let ((?x4201 (+ (- ?x4203 (* (* 2.0 l_0_7_13) l_0_7_6)) (* (* 6.0 l_0_7_49) l_0_7_52))))
 (let ((?x4137 (+ (+ (+ (+ ?x4201 ?x4202) (* (* 6.0 l_0_7_50) l_0_7_53)) ?x4140) (* (* 6.0 l_0_7_51) l_0_7_54))))
 (let ((?x4040 (- (- (- (- (- (+ ?x4137 ?x4127) ?x4082) ?x4089) ?x4100) ?x4098) (* (* 6.0 l_0_7_64) l_0_7_67))))
 (let ((?x4008 (- (- (- (- ?x4040 ?x4044) (* (* 6.0 l_0_7_65) l_0_7_68)) ?x4055) (* (* 6.0 l_0_7_66) l_0_7_69))))
 (let ((?x9828 (- (- (+ (+ (+ (+ (- ?x4008 ?x4003) ?x3959) ?x3960) ?x3957) ?x9823) ?x9825) ?x9827)))
 (= (- ?x9828 ?x9829) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9892 (* l_0_7_9 l_0_7_9)))
 (let ((?x9584 (* l_0_7_85 l_0_7_85)))
 (let ((?x9582 (* l_0_7_84 l_0_7_84)))
 (let ((?x9580 (* l_0_7_83 l_0_7_83)))
 (let ((?x9578 (* l_0_7_82 l_0_7_82)))
 (let ((?x9886 (* l_0_7_8 l_0_7_8)))
 (let ((?x9884 (* (* 4.0 l_0_7_70) l_0_7_70)))
 (let ((?x9881 (* l_0_7_7 l_0_7_7)))
 (let ((?x9879 (* (* 4.0 l_0_7_69) l_0_7_69)))
 (let ((?x9876 (* (* 4.0 l_0_7_68) l_0_7_68)))
 (let ((?x9873 (* (* 4.0 l_0_7_67) l_0_7_67)))
 (let ((?x3185 (* l_0_7_55 l_0_7_55)))
 (let ((?x4000 (* 4.0 ?x3185)))
 (let ((?x3182 (* l_0_7_54 l_0_7_54)))
 (let ((?x3997 (* 4.0 ?x3182)))
 (let ((?x3179 (* l_0_7_53 l_0_7_53)))
 (let ((?x3918 (* 4.0 ?x3179)))
 (let ((?x4401 (+ (+ (* (- l_0_7_10) l_0_7_10) (* 4.0 (* l_0_7_52 l_0_7_52))) ?x3918)))
 (let ((?x9885 (- (- (- (- (- (+ (+ ?x4401 ?x3997) ?x4000) ?x9873) ?x9876) ?x9879) ?x9881) ?x9884)))
 (= (- (- (- (- (- (- ?x9885 ?x9886) ?x9578) ?x9580) ?x9582) ?x9584) ?x9892) 0.0)))))))))))))))))))))
(assert
 (let ((?x9649 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x9646 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x9643 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x9640 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x9823 (* (* 8.0 l_0_7_70) l_0_7_74)))
 (let ((?x3957 (* (* 8.0 l_0_7_69) l_0_7_73)))
 (let ((?x3960 (* (* 8.0 l_0_7_68) l_0_7_72)))
 (let ((?x3959 (* (* 8.0 l_0_7_67) l_0_7_71)))
 (let ((?x3185 (* l_0_7_55 l_0_7_55)))
 (let ((?x9919 (* 3.0 ?x3185)))
 (let ((?x4098 (* (* 8.0 l_0_7_55) l_0_7_59)))
 (let ((?x3182 (* l_0_7_54 l_0_7_54)))
 (let ((?x9916 (* 3.0 ?x3182)))
 (let ((?x4100 (* (* 8.0 l_0_7_54) l_0_7_58)))
 (let ((?x3179 (* l_0_7_53 l_0_7_53)))
 (let ((?x9913 (* 3.0 ?x3179)))
 (let ((?x4089 (* (* 8.0 l_0_7_53) l_0_7_57)))
 (let ((?x3049 (* l_0_7_52 l_0_7_52)))
 (let ((?x9910 (* 3.0 ?x3049)))
 (let ((?x4082 (* (* 8.0 l_0_7_52) l_0_7_56)))
 (let ((?x4500 (- (* (* (- 2.0) l_0_7_10) l_0_7_14) (* (* 2.0 l_0_7_11) l_0_7_7))))
 (let ((?x4485 (- (- ?x4500 (* (* 2.0 l_0_7_12) l_0_7_8)) (* (* 2.0 l_0_7_13) l_0_7_9))))
 (let ((?x9918 (+ (+ (+ (+ (+ (+ (+ ?x4485 ?x4082) ?x9910) ?x4089) ?x9913) ?x4100) ?x9916) ?x4098)))
 (let ((?x9925 (- (- (- (+ ?x9918 ?x9919) ?x3959) (* (* 3.0 l_0_7_67) l_0_7_67)) ?x3960)))
 (let ((?x9932 (- (- (- ?x9925 (* (* 3.0 l_0_7_68) l_0_7_68)) ?x3957) (* (* 3.0 l_0_7_69) l_0_7_69))))
 (let ((?x9938 (- (- (- (- ?x9932 ?x9823) (* (* 3.0 l_0_7_70) l_0_7_70)) ?x9640) ?x9643)))
 (= (- (- ?x9938 ?x9646) ?x9649) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x10025 (* l_0_7_90 l_0_7_90)))
 (let ((?x10023 (* l_0_7_89 l_0_7_89)))
 (let ((?x10021 (* l_0_7_88 l_0_7_88)))
 (let ((?x10019 (* l_0_7_87 l_0_7_87)))
 (let ((?x10017 (* l_0_7_86 l_0_7_86)))
 (let ((?x10015 (* (* 4.0 l_0_7_75) l_0_7_75)))
 (let ((?x10012 (* (* 4.0 l_0_7_74) l_0_7_74)))
 (let ((?x10009 (* (* 4.0 l_0_7_73) l_0_7_73)))
 (let ((?x10006 (* (* 4.0 l_0_7_72) l_0_7_72)))
 (let ((?x10003 (* (* 4.0 l_0_7_71) l_0_7_71)))
 (let ((?x9984 (* l_0_7_60 l_0_7_60)))
 (let ((?x9985 (* 4.0 ?x9984)))
 (let ((?x9981 (* l_0_7_59 l_0_7_59)))
 (let ((?x9982 (* 4.0 ?x9981)))
 (let ((?x9978 (* l_0_7_58 l_0_7_58)))
 (let ((?x9979 (* 4.0 ?x9978)))
 (let ((?x9975 (* l_0_7_57 l_0_7_57)))
 (let ((?x9976 (* 4.0 ?x9975)))
 (let ((?x9972 (* l_0_7_56 l_0_7_56)))
 (let ((?x9973 (* 4.0 ?x9972)))
 (let ((?x4625 (* l_0_7_15 l_0_7_15)))
 (let ((?x4624 (* l_0_7_14 l_0_7_14)))
 (let ((?x4597 (* l_0_7_13 l_0_7_13)))
 (let ((?x2075 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x4597) ?x4624)))
 (let ((?x9956 (+ (- (- ?x2075 ?x4625) (* (* 24.0 l_0_7_16) l_0_7_22)) (* (* 24.0 l_0_7_31) l_0_7_37))))
 (let ((?x9962 (+ (- ?x9956 (* (* 12.0 l_0_7_46) l_0_7_52)) (* (* 6.0 l_0_7_52) l_0_7_56))))
 (let ((?x9968 (+ (+ ?x9962 (* (* 6.0 l_0_7_53) l_0_7_57)) (* (* 6.0 l_0_7_54) l_0_7_58))))
 (let ((?x9980 (+ (+ (+ (+ ?x9968 (* (* 6.0 l_0_7_55) l_0_7_59)) ?x9973) ?x9976) ?x9979)))
 (let ((?x9992 (- (+ (+ (+ ?x9980 ?x9982) ?x9985) (* (* 12.0 l_0_7_61) l_0_7_67)) (* (* 6.0 l_0_7_67) l_0_7_71))))
 (let ((?x9998 (- (- ?x9992 (* (* 6.0 l_0_7_68) l_0_7_72)) (* (* 6.0 l_0_7_69) l_0_7_73))))
 (let ((?x10010 (- (- (- (- ?x9998 (* (* 6.0 l_0_7_70) l_0_7_74)) ?x10003) ?x10006) ?x10009)))
 (let ((?x10026 (- (- (- (- (- (- (- ?x10010 ?x10012) ?x10015) ?x10017) ?x10019) ?x10021) ?x10023) ?x10025)))
 (= ?x10026 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8939 (* l_0_7_61 l_0_7_61)))
 (let ((?x2649 (* 4.0 ?x8939)))
 (let ((?x10077 (+ (* (* (- 2.0) l_0_7_16) l_0_7_19) (* (* 2.0 l_0_7_31) l_0_7_34))))
 (let ((?x10082 (- (- ?x10077 (* (* 2.0 l_0_7_46) l_0_7_49)) (* (* 4.0 l_0_7_46) l_0_7_46))))
 (let ((?x10087 (- (+ (+ ?x10082 (* (* 2.0 l_0_7_61) l_0_7_64)) ?x2649) (* (* 2.0 l_0_7_91) l_0_7_94))))
 (= ?x10087 0.0)))))))
(assert
 (let ((?x10109 (- (* (* (- 2.0) l_0_7_101) l_0_7_91) (* (* 2.0 l_0_7_16) l_0_7_26))))
 (let ((?x10113 (- (+ ?x10109 (* (* 2.0 l_0_7_31) l_0_7_41)) (* (* 2.0 l_0_7_46) l_0_7_56))))
 (let ((?x10117 (+ (+ ?x10113 (* 3.0 (* l_0_7_46 l_0_7_46))) (* (* 2.0 l_0_7_61) l_0_7_71))))
 (= (- ?x10117 (* (* 3.0 l_0_7_61) l_0_7_61)) 0.0)))))
(assert
 (let ((?x10175 (* l_0_7_93 l_0_7_93)))
 (let ((?x10173 (* l_0_7_92 l_0_7_92)))
 (let ((?x9046 (* 2.0 l_0_7_76)))
 (let ((?x9047 (* ?x9046 l_0_7_77)))
 (let ((?x10150 (- (* (* 8.0 l_0_7_16) l_0_7_17) (* (* 1.0 l_0_7_17) l_0_7_17))))
 (let ((?x10155 (- (- ?x10150 (* (* 1.0 l_0_7_18) l_0_7_18)) (* (* 8.0 l_0_7_31) l_0_7_32))))
 (let ((?x10161 (+ (+ ?x10155 (* 1.0 (* l_0_7_32 l_0_7_32))) (* 1.0 (* l_0_7_33 l_0_7_33)))))
 (let ((?x10167 (- (- ?x10161 (* (* 1.0 l_0_7_47) l_0_7_47)) (* (* 1.0 l_0_7_48) l_0_7_48))))
 (let ((?x10171 (+ (+ ?x10167 (* 1.0 (* l_0_7_62 l_0_7_62))) (* 1.0 (* l_0_7_63 l_0_7_63)))))
 (= (- (- (+ ?x10171 ?x9047) ?x10173) ?x10175) 0.0)))))))))))
(assert
 (let ((?x9046 (* 2.0 l_0_7_76)))
 (let ((?x9135 (* ?x9046 l_0_7_79)))
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9038 (* ?x9037 l_0_7_62)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9029 (* ?x9028 l_0_7_47)))
 (let ((?x10198 (- (* (* 8.0 l_0_7_16) l_0_7_19) (* (* 2.0 l_0_7_17) l_0_7_19))))
 (let ((?x10202 (- (- ?x10198 (* (* 2.0 l_0_7_18) l_0_7_20)) (* (* 8.0 l_0_7_31) l_0_7_34))))
 (let ((?x10206 (+ (+ ?x10202 (* (* 2.0 l_0_7_32) l_0_7_34)) (* (* 2.0 l_0_7_33) l_0_7_35))))
 (let ((?x10211 (- (- (- ?x10206 ?x9029) (* (* 2.0 l_0_7_47) l_0_7_49)) (* (* 2.0 l_0_7_48) l_0_7_50))))
 (let ((?x10216 (+ (+ (+ ?x10211 ?x9038) (* (* 2.0 l_0_7_62) l_0_7_64)) (* (* 2.0 l_0_7_63) l_0_7_65))))
 (let ((?x10221 (- (- (+ ?x10216 ?x9135) (* (* 2.0 l_0_7_92) l_0_7_94)) (* (* 2.0 l_0_7_93) l_0_7_95))))
 (= ?x10221 0.0))))))))))))))
(assert
 (let ((?x9046 (* 2.0 l_0_7_76)))
 (let ((?x9343 (* ?x9046 l_0_7_86)))
 (let ((?x10248 (- (* (* (- 2.0) l_0_7_101) l_0_7_92) (* (* 2.0 l_0_7_102) l_0_7_93))))
 (let ((?x10252 (- (+ ?x10248 (* (* 8.0 l_0_7_16) l_0_7_26)) (* (* 2.0 l_0_7_17) l_0_7_26))))
 (let ((?x10256 (- (- ?x10252 (* (* 2.0 l_0_7_18) l_0_7_27)) (* (* 8.0 l_0_7_31) l_0_7_41))))
 (let ((?x10260 (+ (+ ?x10256 (* (* 2.0 l_0_7_32) l_0_7_41)) (* (* 2.0 l_0_7_33) l_0_7_42))))
 (let ((?x10264 (- (+ ?x10260 (* (* 6.0 l_0_7_46) l_0_7_47)) (* (* 2.0 l_0_7_47) l_0_7_56))))
 (let ((?x10268 (- (- ?x10264 (* (* 2.0 l_0_7_48) l_0_7_57)) (* (* 6.0 l_0_7_61) l_0_7_62))))
 (let ((?x10272 (+ (+ ?x10268 (* (* 2.0 l_0_7_62) l_0_7_71)) (* (* 2.0 l_0_7_63) l_0_7_72))))
 (= (+ ?x10272 ?x9343) 0.0)))))))))))
(assert
 (let ((?x10347 (* l_0_7_96 l_0_7_96)))
 (let ((?x10345 (* l_0_7_95 l_0_7_95)))
 (let ((?x10343 (* l_0_7_94 l_0_7_94)))
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9122 (* ?x9037 l_0_7_64)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9109 (* ?x9028 l_0_7_49)))
 (let ((?x10313 (- (* (* (- 1.0) l_0_7_19) l_0_7_19) (* (* 1.0 l_0_7_20) l_0_7_20))))
 (let ((?x10319 (+ (- ?x10313 (* (* 1.0 l_0_7_21) l_0_7_21)) (* 1.0 (* l_0_7_34 l_0_7_34)))))
 (let ((?x10325 (+ (+ ?x10319 (* 1.0 (* l_0_7_35 l_0_7_35))) (* 1.0 (* l_0_7_36 l_0_7_36)))))
 (let ((?x10332 (- (- (- ?x10325 ?x9109) (* (* 1.0 l_0_7_49) l_0_7_49)) (* (* 1.0 l_0_7_50) l_0_7_50))))
 (let ((?x10338 (+ (+ (- ?x10332 (* (* 1.0 l_0_7_51) l_0_7_51)) ?x9122) (* 1.0 (* l_0_7_64 l_0_7_64)))))
 (let ((?x10342 (+ (+ ?x10338 (* 1.0 (* l_0_7_65 l_0_7_65))) (* 1.0 (* l_0_7_66 l_0_7_66)))))
 (= (- (- (- ?x10342 ?x10343) ?x10345) ?x10347) 0.0)))))))))))))))
(assert
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9329 (* ?x9037 l_0_7_71)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9312 (* ?x9028 l_0_7_56)))
 (let ((?x10377 (- (* (* (- 2.0) l_0_7_101) l_0_7_94) (* (* 2.0 l_0_7_102) l_0_7_95))))
 (let ((?x10381 (- (- ?x10377 (* (* 2.0 l_0_7_103) l_0_7_96)) (* (* 2.0 l_0_7_19) l_0_7_26))))
 (let ((?x10385 (- (- ?x10381 (* (* 2.0 l_0_7_20) l_0_7_27)) (* (* 2.0 l_0_7_21) l_0_7_28))))
 (let ((?x10389 (+ (+ ?x10385 (* (* 2.0 l_0_7_34) l_0_7_41)) (* (* 2.0 l_0_7_35) l_0_7_42))))
 (let ((?x10393 (+ (+ ?x10389 (* (* 2.0 l_0_7_36) l_0_7_43)) (* (* 6.0 l_0_7_46) l_0_7_49))))
 (let ((?x10398 (- (- (- ?x10393 ?x9312) (* (* 2.0 l_0_7_49) l_0_7_56)) (* (* 2.0 l_0_7_50) l_0_7_57))))
 (let ((?x10402 (- (- ?x10398 (* (* 2.0 l_0_7_51) l_0_7_58)) (* (* 6.0 l_0_7_61) l_0_7_64))))
 (let ((?x10407 (+ (+ (+ ?x10402 ?x9329) (* (* 2.0 l_0_7_64) l_0_7_71)) (* (* 2.0 l_0_7_65) l_0_7_72))))
 (= (+ ?x10407 (* (* 2.0 l_0_7_66) l_0_7_73)) 0.0))))))))))))))
(assert
 (let ((?x8939 (* l_0_7_61 l_0_7_61)))
 (let ((?x10513 (* 6.0 ?x8939)))
 (let ((?x8933 (* l_0_7_31 l_0_7_31)))
 (let ((?x10475 (* 12.0 ?x8933)))
 (let ((?x10455 (* l_0_7_105 l_0_7_105)))
 (let ((?x10453 (* l_0_7_104 l_0_7_104)))
 (let ((?x10451 (* l_0_7_103 l_0_7_103)))
 (let ((?x10452 (- (- (* (- l_0_7_101) l_0_7_101) (* l_0_7_102 l_0_7_102)) ?x10451)))
 (let ((?x10462 (- (- (- (- ?x10452 ?x10453) ?x10455) (* (* 12.0 l_0_7_16) l_0_7_16)) (* (* 1.0 l_0_7_26) l_0_7_26))))
 (let ((?x10468 (- (- ?x10462 (* (* 1.0 l_0_7_27) l_0_7_27)) (* (* 1.0 l_0_7_28) l_0_7_28))))
 (let ((?x10474 (- (- ?x10468 (* (* 1.0 l_0_7_29) l_0_7_29)) (* (* 1.0 l_0_7_30) l_0_7_30))))
 (let ((?x10482 (+ (+ (+ ?x10474 ?x10475) (* 1.0 (* l_0_7_41 l_0_7_41))) (* 1.0 (* l_0_7_42 l_0_7_42)))))
 (let ((?x10488 (+ (+ ?x10482 (* 1.0 (* l_0_7_43 l_0_7_43))) (* 1.0 (* l_0_7_44 l_0_7_44)))))
 (let ((?x10493 (+ (+ ?x10488 (* 1.0 (* l_0_7_45 l_0_7_45))) (* (* 6.0 l_0_7_46) l_0_7_56))))
 (let ((?x10498 (- (- ?x10493 (* (* 6.0 l_0_7_46) l_0_7_46)) (* (* 1.0 l_0_7_56) l_0_7_56))))
 (let ((?x10504 (- (- ?x10498 (* (* 1.0 l_0_7_57) l_0_7_57)) (* (* 1.0 l_0_7_58) l_0_7_58))))
 (let ((?x10510 (- (- ?x10504 (* (* 1.0 l_0_7_59) l_0_7_59)) (* (* 1.0 l_0_7_60) l_0_7_60))))
 (let ((?x10516 (+ (+ (- ?x10510 (* (* 6.0 l_0_7_61) l_0_7_71)) ?x10513) (* 1.0 (* l_0_7_71 l_0_7_71)))))
 (let ((?x10520 (+ (+ ?x10516 (* 1.0 (* l_0_7_72 l_0_7_72))) (* 1.0 (* l_0_7_73 l_0_7_73)))))
 (let ((?x10524 (+ (+ ?x10520 (* 1.0 (* l_0_7_74 l_0_7_74))) (* 1.0 (* l_0_7_75 l_0_7_75)))))
 (= ?x10524 0.0))))))))))))))))))))))
(assert
 (let ((?x10025 (* l_0_7_90 l_0_7_90)))
 (let ((?x10023 (* l_0_7_89 l_0_7_89)))
 (let ((?x10021 (* l_0_7_88 l_0_7_88)))
 (let ((?x10019 (* l_0_7_87 l_0_7_87)))
 (let ((?x10017 (* l_0_7_86 l_0_7_86)))
 (let ((?x5094 (* l_0_7_30 l_0_7_30)))
 (let ((?x10560 (* 4.0 ?x5094)))
 (let ((?x5088 (* l_0_7_29 l_0_7_29)))
 (let ((?x10558 (* 4.0 ?x5088)))
 (let ((?x5083 (* l_0_7_28 l_0_7_28)))
 (let ((?x10556 (* 4.0 ?x5083)))
 (let ((?x5078 (* l_0_7_27 l_0_7_27)))
 (let ((?x10554 (* 4.0 ?x5078)))
 (let ((?x5051 (* l_0_7_26 l_0_7_26)))
 (let ((?x10552 (* 4.0 ?x5051)))
 (let ((?x10559 (+ (+ (+ (+ (* (* (- 24.0) l_0_7_16) l_0_7_17) ?x10552) ?x10554) ?x10556) ?x10558)))
 (let ((?x10566 (- (+ (+ ?x10559 ?x10560) (* (* 24.0 l_0_7_31) l_0_7_32)) (* (* 4.0 l_0_7_41) l_0_7_41))))
 (let ((?x10572 (- (- ?x10566 (* (* 4.0 l_0_7_42) l_0_7_42)) (* (* 4.0 l_0_7_43) l_0_7_43))))
 (let ((?x10578 (- (- ?x10572 (* (* 4.0 l_0_7_44) l_0_7_44)) (* (* 4.0 l_0_7_45) l_0_7_45))))
 (let ((?x10582 (+ (- ?x10578 (* (* 12.0 l_0_7_46) l_0_7_47)) (* (* 6.0 l_0_7_47) l_0_7_56))))
 (let ((?x10586 (+ (+ ?x10582 (* (* 6.0 l_0_7_48) l_0_7_57)) (* (* 12.0 l_0_7_61) l_0_7_62))))
 (let ((?x10590 (- (- ?x10586 (* (* 6.0 l_0_7_62) l_0_7_71)) (* (* 6.0 l_0_7_63) l_0_7_72))))
 (= (+ (+ (+ (+ (+ ?x10590 ?x10017) ?x10019) ?x10021) ?x10023) ?x10025) 0.0))))))))))))))))))))))))
(assert
 (let ((?x4809 (* l_0_7_75 l_0_7_75)))
 (let ((?x4810 (* 4.0 ?x4809)))
 (let ((?x4804 (* l_0_7_74 l_0_7_74)))
 (let ((?x4805 (* 4.0 ?x4804)))
 (let ((?x4797 (* l_0_7_73 l_0_7_73)))
 (let ((?x4799 (* 4.0 ?x4797)))
 (let ((?x10057 (* l_0_7_72 l_0_7_72)))
 (let ((?x10058 (* 4.0 ?x10057)))
 (let ((?x4765 (* l_0_7_71 l_0_7_71)))
 (let ((?x4766 (* 4.0 ?x4765)))
 (let ((?x5426 (+ (* (* (- 24.0) l_0_7_16) l_0_7_19) (* (* 24.0 l_0_7_31) l_0_7_34))))
 (let ((?x5312 (+ (- ?x5426 (* (* 12.0 l_0_7_46) l_0_7_49)) (* (* 6.0 l_0_7_49) l_0_7_56))))
 (let ((?x5214 (+ (+ ?x5312 (* (* 6.0 l_0_7_50) l_0_7_57)) (* (* 6.0 l_0_7_51) l_0_7_58))))
 (let ((?x10610 (- (- ?x5214 (* (* 4.0 l_0_7_56) l_0_7_56)) (* (* 4.0 l_0_7_57) l_0_7_57))))
 (let ((?x10616 (- (- ?x10610 (* (* 4.0 l_0_7_58) l_0_7_58)) (* (* 4.0 l_0_7_59) l_0_7_59))))
 (let ((?x10621 (+ (- ?x10616 (* (* 4.0 l_0_7_60) l_0_7_60)) (* (* 12.0 l_0_7_61) l_0_7_64))))
 (let ((?x10625 (- (- ?x10621 (* (* 6.0 l_0_7_64) l_0_7_71)) (* (* 6.0 l_0_7_65) l_0_7_72))))
 (let ((?x10630 (+ (+ (+ (- ?x10625 (* (* 6.0 l_0_7_66) l_0_7_73)) ?x4766) ?x10058) ?x4799)))
 (= (+ (+ ?x10630 ?x4805) ?x4810) 0.0))))))))))))))))))))
(assert
 (let ((?x8971 (* (* 4.0 l_0_7_61) l_0_7_61)))
 (let ((?x8949 (* l_0_7_46 l_0_7_46)))
 (let ((?x8965 (* 4.0 ?x8949)))
 (let ((?x10650 (+ (* (* (- 24.0) l_0_7_16) l_0_7_26) (* (* 24.0 l_0_7_31) l_0_7_41))))
 (let ((?x10655 (+ (+ (- ?x10650 (* (* 12.0 l_0_7_46) l_0_7_56)) ?x8965) (* 3.0 (* l_0_7_56 l_0_7_56)))))
 (let ((?x10659 (+ (+ ?x10655 (* 3.0 (* l_0_7_57 l_0_7_57))) (* 3.0 (* l_0_7_58 l_0_7_58)))))
 (let ((?x10663 (+ (+ ?x10659 (* 3.0 (* l_0_7_59 l_0_7_59))) (* 3.0 (* l_0_7_60 l_0_7_60)))))
 (let ((?x10669 (- (- (+ ?x10663 (* (* 12.0 l_0_7_61) l_0_7_71)) ?x8971) (* (* 3.0 l_0_7_71) l_0_7_71))))
 (let ((?x10675 (- (- ?x10669 (* (* 3.0 l_0_7_72) l_0_7_72)) (* (* 3.0 l_0_7_73) l_0_7_73))))
 (let ((?x10681 (- (- ?x10675 (* (* 3.0 l_0_7_74) l_0_7_74)) (* (* 3.0 l_0_7_75) l_0_7_75))))
 (= ?x10681 0.0))))))))))))
(assert
 (let ((?x9439 (* l_0_7_63 l_0_7_63)))
 (let ((?x10716 (* 6.0 ?x9439)))
 (let ((?x3468 (* l_0_7_62 l_0_7_62)))
 (let ((?x10714 (* 6.0 ?x3468)))
 (let ((?x10159 (* l_0_7_33 l_0_7_33)))
 (let ((?x10708 (* 12.0 ?x10159)))
 (let ((?x10156 (* l_0_7_32 l_0_7_32)))
 (let ((?x10706 (* 12.0 ?x10156)))
 (let ((?x10705 (- (* (* (- 12.0) l_0_7_17) l_0_7_17) (* (* 12.0 l_0_7_18) l_0_7_18))))
 (let ((?x10713 (- (- (+ (+ ?x10705 ?x10706) ?x10708) (* (* 6.0 l_0_7_47) l_0_7_47)) (* (* 6.0 l_0_7_48) l_0_7_48))))
 (= (+ (+ ?x10713 ?x10714) ?x10716) 0.0))))))))))))
(assert
 (let ((?x10731 (- (* (* (- 24.0) l_0_7_17) l_0_7_19) (* (* 24.0 l_0_7_18) l_0_7_20))))
 (let ((?x10737 (+ (+ ?x10731 (* (* 24.0 l_0_7_32) l_0_7_34)) (* (* 24.0 l_0_7_33) l_0_7_35))))
 (let ((?x10743 (- (- ?x10737 (* (* 12.0 l_0_7_47) l_0_7_49)) (* (* 12.0 l_0_7_48) l_0_7_50))))
 (let ((?x10749 (+ (+ ?x10743 (* (* 12.0 l_0_7_62) l_0_7_64)) (* (* 12.0 l_0_7_63) l_0_7_65))))
 (= ?x10749 0.0))))))
(assert
 (let ((?x5629 (- (* (* (- 24.0) l_0_7_17) l_0_7_22) (* (* 24.0 l_0_7_18) l_0_7_23))))
 (let ((?x10775 (+ (+ ?x5629 (* (* 24.0 l_0_7_32) l_0_7_37)) (* (* 24.0 l_0_7_33) l_0_7_38))))
 (let ((?x10779 (- (- ?x10775 (* (* 12.0 l_0_7_47) l_0_7_52)) (* (* 12.0 l_0_7_48) l_0_7_53))))
 (let ((?x10783 (+ (+ ?x10779 (* (* 12.0 l_0_7_62) l_0_7_67)) (* (* 12.0 l_0_7_63) l_0_7_68))))
 (= ?x10783 0.0))))))
(assert
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9038 (* ?x9037 l_0_7_62)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9029 (* ?x9028 l_0_7_47)))
 (let ((?x5638 (- (* (* (- 24.0) l_0_7_17) l_0_7_26) (* (* 24.0 l_0_7_18) l_0_7_27))))
 (let ((?x10791 (+ (+ ?x5638 (* (* 24.0 l_0_7_32) l_0_7_41)) (* (* 24.0 l_0_7_33) l_0_7_42))))
 (let ((?x10796 (- (- (+ ?x10791 ?x9029) (* (* 12.0 l_0_7_47) l_0_7_56)) (* (* 12.0 l_0_7_48) l_0_7_57))))
 (let ((?x10801 (+ (+ (- ?x10796 ?x9038) (* (* 12.0 l_0_7_62) l_0_7_71)) (* (* 12.0 l_0_7_63) l_0_7_72))))
 (= ?x10801 0.0))))))))))
(assert
 (let ((?x10832 (- (* (* (- 12.0) l_0_7_19) l_0_7_19) (* (* 12.0 l_0_7_20) l_0_7_20))))
 (let ((?x10837 (+ (- ?x10832 (* (* 12.0 l_0_7_21) l_0_7_21)) (* 12.0 (* l_0_7_34 l_0_7_34)))))
 (let ((?x10841 (+ (+ ?x10837 (* 12.0 (* l_0_7_35 l_0_7_35))) (* 12.0 (* l_0_7_36 l_0_7_36)))))
 (let ((?x10845 (- (- ?x10841 (* (* 6.0 l_0_7_49) l_0_7_49)) (* (* 6.0 l_0_7_50) l_0_7_50))))
 (let ((?x10849 (+ (- ?x10845 (* (* 6.0 l_0_7_51) l_0_7_51)) (* 6.0 (* l_0_7_64 l_0_7_64)))))
 (let ((?x10853 (+ (+ ?x10849 (* 6.0 (* l_0_7_65 l_0_7_65))) (* 6.0 (* l_0_7_66 l_0_7_66)))))
 (= ?x10853 0.0))))))))
(assert
 (let ((?x10874 (- (* (* (- 24.0) l_0_7_19) l_0_7_22) (* (* 24.0 l_0_7_20) l_0_7_23))))
 (let ((?x10880 (+ (- ?x10874 (* (* 24.0 l_0_7_21) l_0_7_24)) (* (* 24.0 l_0_7_34) l_0_7_37))))
 (let ((?x10886 (+ (+ ?x10880 (* (* 24.0 l_0_7_35) l_0_7_38)) (* (* 24.0 l_0_7_36) l_0_7_39))))
 (let ((?x10892 (- (- ?x10886 (* (* 12.0 l_0_7_49) l_0_7_52)) (* (* 12.0 l_0_7_50) l_0_7_53))))
 (let ((?x10898 (+ (- ?x10892 (* (* 12.0 l_0_7_51) l_0_7_54)) (* (* 12.0 l_0_7_64) l_0_7_67))))
 (let ((?x10904 (+ (+ ?x10898 (* (* 12.0 l_0_7_65) l_0_7_68)) (* (* 12.0 l_0_7_66) l_0_7_69))))
 (= ?x10904 0.0))))))))
(assert
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9122 (* ?x9037 l_0_7_64)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9109 (* ?x9028 l_0_7_49)))
 (let ((?x10928 (- (* (* (- 24.0) l_0_7_19) l_0_7_26) (* (* 24.0 l_0_7_20) l_0_7_27))))
 (let ((?x10941 (+ (- ?x10928 (* (* 24.0 l_0_7_21) l_0_7_28)) (* (* 24.0 l_0_7_34) l_0_7_41))))
 (let ((?x10945 (+ (+ ?x10941 (* (* 24.0 l_0_7_35) l_0_7_42)) (* (* 24.0 l_0_7_36) l_0_7_43))))
 (let ((?x10950 (- (- (+ ?x10945 ?x9109) (* (* 12.0 l_0_7_49) l_0_7_56)) (* (* 12.0 l_0_7_50) l_0_7_57))))
 (let ((?x10955 (+ (- (- ?x10950 (* (* 12.0 l_0_7_51) l_0_7_58)) ?x9122) (* (* 12.0 l_0_7_64) l_0_7_71))))
 (let ((?x10959 (+ (+ ?x10955 (* (* 12.0 l_0_7_65) l_0_7_72)) (* (* 12.0 l_0_7_66) l_0_7_73))))
 (= ?x10959 0.0))))))))))))
(assert
 (let ((?x10983 (- (* (* (- 12.0) l_0_7_22) l_0_7_22) (* (* 12.0 l_0_7_23) l_0_7_23))))
 (let ((?x10989 (- (- ?x10983 (* (* 12.0 l_0_7_24) l_0_7_24)) (* (* 12.0 l_0_7_25) l_0_7_25))))
 (let ((?x10993 (+ (+ ?x10989 (* 12.0 (* l_0_7_37 l_0_7_37))) (* 12.0 (* l_0_7_38 l_0_7_38)))))
 (let ((?x10997 (+ (+ ?x10993 (* 12.0 (* l_0_7_39 l_0_7_39))) (* 12.0 (* l_0_7_40 l_0_7_40)))))
 (let ((?x11001 (- (- ?x10997 (* (* 6.0 l_0_7_52) l_0_7_52)) (* (* 6.0 l_0_7_53) l_0_7_53))))
 (let ((?x11005 (- (- ?x11001 (* (* 6.0 l_0_7_54) l_0_7_54)) (* (* 6.0 l_0_7_55) l_0_7_55))))
 (let ((?x11009 (+ (+ ?x11005 (* 6.0 (* l_0_7_67 l_0_7_67))) (* 6.0 (* l_0_7_68 l_0_7_68)))))
 (let ((?x11013 (+ (+ ?x11009 (* 6.0 (* l_0_7_69 l_0_7_69))) (* 6.0 (* l_0_7_70 l_0_7_70)))))
 (= ?x11013 0.0))))))))))
(assert
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9124 (* ?x9037 l_0_7_67)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9111 (* ?x9028 l_0_7_52)))
 (let ((?x11044 (- (* (* (- 24.0) l_0_7_22) l_0_7_26) (* (* 24.0 l_0_7_23) l_0_7_27))))
 (let ((?x11050 (- (- ?x11044 (* (* 24.0 l_0_7_24) l_0_7_28)) (* (* 24.0 l_0_7_25) l_0_7_29))))
 (let ((?x11056 (+ (+ ?x11050 (* (* 24.0 l_0_7_37) l_0_7_41)) (* (* 24.0 l_0_7_38) l_0_7_42))))
 (let ((?x11062 (+ (+ ?x11056 (* (* 24.0 l_0_7_39) l_0_7_43)) (* (* 24.0 l_0_7_40) l_0_7_44))))
 (let ((?x11069 (- (- (+ ?x11062 ?x9111) (* (* 12.0 l_0_7_52) l_0_7_56)) (* (* 12.0 l_0_7_53) l_0_7_57))))
 (let ((?x11075 (- (- ?x11069 (* (* 12.0 l_0_7_54) l_0_7_58)) (* (* 12.0 l_0_7_55) l_0_7_59))))
 (let ((?x11082 (+ (+ (- ?x11075 ?x9124) (* (* 12.0 l_0_7_67) l_0_7_71)) (* (* 12.0 l_0_7_68) l_0_7_72))))
 (let ((?x11088 (+ (+ ?x11082 (* (* 12.0 l_0_7_69) l_0_7_73)) (* (* 12.0 l_0_7_70) l_0_7_74))))
 (= ?x11088 0.0))))))))))))))
(assert
 (let ((?x4809 (* l_0_7_75 l_0_7_75)))
 (let ((?x11176 (* 6.0 ?x4809)))
 (let ((?x4804 (* l_0_7_74 l_0_7_74)))
 (let ((?x11174 (* 6.0 ?x4804)))
 (let ((?x4797 (* l_0_7_73 l_0_7_73)))
 (let ((?x11172 (* 6.0 ?x4797)))
 (let ((?x10057 (* l_0_7_72 l_0_7_72)))
 (let ((?x11170 (* 6.0 ?x10057)))
 (let ((?x4765 (* l_0_7_71 l_0_7_71)))
 (let ((?x11168 (* 6.0 ?x4765)))
 (let ((?x9037 (* 8.0 l_0_7_61)))
 (let ((?x9329 (* ?x9037 l_0_7_71)))
 (let ((?x9028 (* 8.0 l_0_7_46)))
 (let ((?x9312 (* ?x9028 l_0_7_56)))
 (let ((?x10489 (* l_0_7_45 l_0_7_45)))
 (let ((?x11149 (* 12.0 ?x10489)))
 (let ((?x10486 (* l_0_7_44 l_0_7_44)))
 (let ((?x11147 (* 12.0 ?x10486)))
 (let ((?x10483 (* l_0_7_43 l_0_7_43)))
 (let ((?x11145 (* 12.0 ?x10483)))
 (let ((?x10480 (* l_0_7_42 l_0_7_42)))
 (let ((?x11143 (* 12.0 ?x10480)))
 (let ((?x10477 (* l_0_7_41 l_0_7_41)))
 (let ((?x11141 (* 12.0 ?x10477)))
 (let ((?x11120 (- (* (* (- 12.0) l_0_7_26) l_0_7_26) (* (* 12.0 l_0_7_27) l_0_7_27))))
 (let ((?x11137 (- (- ?x11120 (* (* 12.0 l_0_7_28) l_0_7_28)) (* (* 12.0 l_0_7_29) l_0_7_29))))
 (let ((?x11146 (+ (+ (+ (- ?x11137 (* (* 12.0 l_0_7_30) l_0_7_30)) ?x11141) ?x11143) ?x11145)))
 (let ((?x11154 (- (+ (+ (+ ?x11146 ?x11147) ?x11149) ?x9312) (* (* 6.0 l_0_7_56) l_0_7_56))))
 (let ((?x11160 (- (- ?x11154 (* (* 6.0 l_0_7_57) l_0_7_57)) (* (* 6.0 l_0_7_58) l_0_7_58))))
 (let ((?x11166 (- (- ?x11160 (* (* 6.0 l_0_7_59) l_0_7_59)) (* (* 6.0 l_0_7_60) l_0_7_60))))
 (= (+ (+ (+ (+ (+ (- ?x11166 ?x9329) ?x11168) ?x11170) ?x11172) ?x11174) ?x11176) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x9422 (* l_0_7_78 l_0_7_78)))
 (let ((?x9417 (* l_0_7_77 l_0_7_77)))
 (let ((?x4866 (* l_0_7_18 l_0_7_18)))
 (let ((?x11214 (* 4.0 ?x4866)))
 (let ((?x10179 (* l_0_7_17 l_0_7_17)))
 (let ((?x11213 (* 4.0 ?x10179)))
 (let ((?x11221 (- (- (+ ?x11213 ?x11214) (* (* 4.0 l_0_7_32) l_0_7_32)) (* (* 4.0 l_0_7_33) l_0_7_33))))
 (= (+ (+ ?x11221 ?x9417) ?x9422) 0.0)))))))))
(assert
 (let ((?x9419 (* 2.0 l_0_7_78)))
 (let ((?x9502 (* ?x9419 l_0_7_80)))
 (let ((?x9414 (* 2.0 l_0_7_77)))
 (let ((?x9500 (* ?x9414 l_0_7_79)))
 (let ((?x9439 (* l_0_7_63 l_0_7_63)))
 (let ((?x9440 (* 4.0 ?x9439)))
 (let ((?x3468 (* l_0_7_62 l_0_7_62)))
 (let ((?x3469 (* 4.0 ?x3468)))
 (let ((?x6076 (+ (* (* 8.0 l_0_7_17) l_0_7_19) (* (* 8.0 l_0_7_18) l_0_7_20))))
 (let ((?x11237 (- (- ?x6076 (* (* 8.0 l_0_7_32) l_0_7_34)) (* (* 8.0 l_0_7_33) l_0_7_35))))
 (let ((?x11243 (- (- ?x11237 (* (* 4.0 l_0_7_47) l_0_7_47)) (* (* 4.0 l_0_7_48) l_0_7_48))))
 (= (+ (+ (+ (+ ?x11243 ?x3469) ?x9440) ?x9500) ?x9502) 0.0)))))))))))))
(assert
 (let ((?x9419 (* 2.0 l_0_7_78)))
 (let ((?x9637 (* ?x9419 l_0_7_87)))
 (let ((?x9414 (* 2.0 l_0_7_77)))
 (let ((?x9635 (* ?x9414 l_0_7_86)))
 (let ((?x6188 (+ (* (* 8.0 l_0_7_17) l_0_7_26) (* (* 8.0 l_0_7_18) l_0_7_27))))
 (let ((?x11259 (- (- ?x6188 (* (* 8.0 l_0_7_32) l_0_7_41)) (* (* 8.0 l_0_7_33) l_0_7_42))))
 (let ((?x11263 (+ (+ ?x11259 (* 3.0 (* l_0_7_47 l_0_7_47))) (* 3.0 (* l_0_7_48 l_0_7_48)))))
 (let ((?x11269 (- (- ?x11263 (* (* 3.0 l_0_7_62) l_0_7_62)) (* (* 3.0 l_0_7_63) l_0_7_63))))
 (= (+ (+ ?x11269 ?x9635) ?x9637) 0.0))))))))))
(assert
 (let ((?x9749 (* l_0_7_81 l_0_7_81)))
 (let ((?x9747 (* l_0_7_80 l_0_7_80)))
 (let ((?x9745 (* l_0_7_79 l_0_7_79)))
 (let ((?x9495 (* 8.0 l_0_7_63)))
 (let ((?x9496 (* ?x9495 l_0_7_65)))
 (let ((?x9490 (* 8.0 l_0_7_62)))
 (let ((?x9491 (* ?x9490 l_0_7_64)))
 (let ((?x9485 (* 8.0 l_0_7_48)))
 (let ((?x9486 (* ?x9485 l_0_7_50)))
 (let ((?x9480 (* 8.0 l_0_7_47)))
 (let ((?x9481 (* ?x9480 l_0_7_49)))
 (let ((?x11293 (+ (* 4.0 (* l_0_7_19 l_0_7_19)) (* 4.0 (* l_0_7_20 l_0_7_20)))))
 (let ((?x11298 (- (+ ?x11293 (* 4.0 (* l_0_7_21 l_0_7_21))) (* (* 4.0 l_0_7_34) l_0_7_34))))
 (let ((?x11304 (- (- ?x11298 (* (* 4.0 l_0_7_35) l_0_7_35)) (* (* 4.0 l_0_7_36) l_0_7_36))))
 (let ((?x11311 (+ (+ (+ (+ (+ (- (- ?x11304 ?x9481) ?x9486) ?x9491) ?x9496) ?x9745) ?x9747) ?x9749)))
 (= ?x11311 0.0)))))))))))))))))
(assert
 (let ((?x9510 (* 2.0 l_0_7_81)))
 (let ((?x9829 (* ?x9510 l_0_7_88)))
 (let ((?x9507 (* 2.0 l_0_7_80)))
 (let ((?x9827 (* ?x9507 l_0_7_87)))
 (let ((?x9504 (* 2.0 l_0_7_79)))
 (let ((?x9825 (* ?x9504 l_0_7_86)))
 (let ((?x9495 (* 8.0 l_0_7_63)))
 (let ((?x9633 (* ?x9495 l_0_7_72)))
 (let ((?x9490 (* 8.0 l_0_7_62)))
 (let ((?x9628 (* ?x9490 l_0_7_71)))
 (let ((?x9485 (* 8.0 l_0_7_48)))
 (let ((?x9623 (* ?x9485 l_0_7_57)))
 (let ((?x9480 (* 8.0 l_0_7_47)))
 (let ((?x9618 (* ?x9480 l_0_7_56)))
 (let ((?x6230 (+ (* (* 8.0 l_0_7_19) l_0_7_26) (* (* 8.0 l_0_7_20) l_0_7_27))))
 (let ((?x11330 (- (+ ?x6230 (* (* 8.0 l_0_7_21) l_0_7_28)) (* (* 8.0 l_0_7_34) l_0_7_41))))
 (let ((?x11334 (- (- ?x11330 (* (* 8.0 l_0_7_35) l_0_7_42)) (* (* 8.0 l_0_7_36) l_0_7_43))))
 (let ((?x11339 (+ (- (+ ?x11334 (* (* 6.0 l_0_7_47) l_0_7_49)) ?x9618) (* (* 6.0 l_0_7_48) l_0_7_50))))
 (let ((?x11345 (- (+ (- (- ?x11339 ?x9623) (* (* 6.0 l_0_7_62) l_0_7_64)) ?x9628) (* (* 6.0 l_0_7_63) l_0_7_65))))
 (= (+ (+ (+ (+ ?x11345 ?x9633) ?x9825) ?x9827) ?x9829) 0.0)))))))))))))))))))))
(assert
 (let ((?x9412 (* (* 4.0 l_0_7_63) l_0_7_63)))
 (let ((?x9409 (* (* 4.0 l_0_7_62) l_0_7_62)))
 (let ((?x9405 (* l_0_7_48 l_0_7_48)))
 (let ((?x9406 (* 4.0 ?x9405)))
 (let ((?x9402 (* l_0_7_47 l_0_7_47)))
 (let ((?x9403 (* 4.0 ?x9402)))
 (= (- (- (+ ?x9403 ?x9406) ?x9409) ?x9412) 0.0))))))))
(assert
 (let ((?x9495 (* 8.0 l_0_7_63)))
 (let ((?x9496 (* ?x9495 l_0_7_65)))
 (let ((?x9490 (* 8.0 l_0_7_62)))
 (let ((?x9491 (* ?x9490 l_0_7_64)))
 (let ((?x9485 (* 8.0 l_0_7_48)))
 (let ((?x9486 (* ?x9485 l_0_7_50)))
 (let ((?x9480 (* 8.0 l_0_7_47)))
 (let ((?x9481 (* ?x9480 l_0_7_49)))
 (= (- (- (+ ?x9481 ?x9486) ?x9491) ?x9496) 0.0))))))))))
(assert
 (let ((?x9495 (* 8.0 l_0_7_63)))
 (let ((?x9498 (* ?x9495 l_0_7_68)))
 (let ((?x9490 (* 8.0 l_0_7_62)))
 (let ((?x9493 (* ?x9490 l_0_7_67)))
 (let ((?x9485 (* 8.0 l_0_7_48)))
 (let ((?x9488 (* ?x9485 l_0_7_53)))
 (let ((?x9480 (* 8.0 l_0_7_47)))
 (let ((?x9483 (* ?x9480 l_0_7_52)))
 (= (- (- (+ ?x9483 ?x9488) ?x9493) ?x9498) 0.0))))))))))
(assert
 (let ((?x9495 (* 8.0 l_0_7_63)))
 (let ((?x9633 (* ?x9495 l_0_7_72)))
 (let ((?x9490 (* 8.0 l_0_7_62)))
 (let ((?x9628 (* ?x9490 l_0_7_71)))
 (let ((?x9485 (* 8.0 l_0_7_48)))
 (let ((?x9623 (* ?x9485 l_0_7_57)))
 (let ((?x9480 (* 8.0 l_0_7_47)))
 (let ((?x9618 (* ?x9480 l_0_7_56)))
 (= (- (- (+ ?x9618 ?x9623) ?x9628) ?x9633) 0.0))))))))))
(assert
 (let ((?x9743 (* (* 4.0 l_0_7_66) l_0_7_66)))
 (let ((?x9737 (* (* 4.0 l_0_7_65) l_0_7_65)))
 (let ((?x9731 (* (* 4.0 l_0_7_64) l_0_7_64)))
 (let ((?x9722 (* l_0_7_51 l_0_7_51)))
 (let ((?x9723 (* 4.0 ?x9722)))
 (let ((?x9716 (* l_0_7_50 l_0_7_50)))
 (let ((?x9717 (* 4.0 ?x9716)))
 (let ((?x9708 (* l_0_7_49 l_0_7_49)))
 (let ((?x9709 (* 4.0 ?x9708)))
 (= (- (- (- (+ (+ ?x9709 ?x9717) ?x9723) ?x9731) ?x9737) ?x9743) 0.0)))))))))))
(assert
 (let ((?x9739 (* 8.0 l_0_7_66)))
 (let ((?x9740 (* ?x9739 l_0_7_69)))
 (let ((?x9733 (* 8.0 l_0_7_65)))
 (let ((?x9734 (* ?x9733 l_0_7_68)))
 (let ((?x9727 (* 8.0 l_0_7_64)))
 (let ((?x9728 (* ?x9727 l_0_7_67)))
 (let ((?x9719 (* 8.0 l_0_7_51)))
 (let ((?x9720 (* ?x9719 l_0_7_54)))
 (let ((?x9713 (* 8.0 l_0_7_50)))
 (let ((?x9714 (* ?x9713 l_0_7_53)))
 (let ((?x9705 (* 8.0 l_0_7_49)))
 (let ((?x9706 (* ?x9705 l_0_7_52)))
 (= (- (- (- (+ (+ ?x9706 ?x9714) ?x9720) ?x9728) ?x9734) ?x9740) 0.0))))))))))))))
(assert
 (let ((?x9739 (* 8.0 l_0_7_66)))
 (let ((?x4003 (* ?x9739 l_0_7_73)))
 (let ((?x9733 (* 8.0 l_0_7_65)))
 (let ((?x4055 (* ?x9733 l_0_7_72)))
 (let ((?x9727 (* 8.0 l_0_7_64)))
 (let ((?x4044 (* ?x9727 l_0_7_71)))
 (let ((?x9719 (* 8.0 l_0_7_51)))
 (let ((?x4127 (* ?x9719 l_0_7_58)))
 (let ((?x9713 (* 8.0 l_0_7_50)))
 (let ((?x4140 (* ?x9713 l_0_7_57)))
 (let ((?x9705 (* 8.0 l_0_7_49)))
 (let ((?x4202 (* ?x9705 l_0_7_56)))
 (= (- (- (- (+ (+ ?x4202 ?x4140) ?x4127) ?x4044) ?x4055) ?x4003) 0.0))))))))))))))
(assert
 (let ((?x9884 (* (* 4.0 l_0_7_70) l_0_7_70)))
 (let ((?x9879 (* (* 4.0 l_0_7_69) l_0_7_69)))
 (let ((?x9876 (* (* 4.0 l_0_7_68) l_0_7_68)))
 (let ((?x9873 (* (* 4.0 l_0_7_67) l_0_7_67)))
 (let ((?x3185 (* l_0_7_55 l_0_7_55)))
 (let ((?x4000 (* 4.0 ?x3185)))
 (let ((?x3182 (* l_0_7_54 l_0_7_54)))
 (let ((?x3997 (* 4.0 ?x3182)))
 (let ((?x3179 (* l_0_7_53 l_0_7_53)))
 (let ((?x3918 (* 4.0 ?x3179)))
 (let ((?x3049 (* l_0_7_52 l_0_7_52)))
 (let ((?x3935 (* 4.0 ?x3049)))
 (let ((?x11426 (- (- (- (- (+ (+ (+ ?x3935 ?x3918) ?x3997) ?x4000) ?x9873) ?x9876) ?x9879) ?x9884)))
 (= ?x11426 0.0)))))))))))))))
(assert
 (let ((?x9823 (* (* 8.0 l_0_7_70) l_0_7_74)))
 (let ((?x3957 (* (* 8.0 l_0_7_69) l_0_7_73)))
 (let ((?x3960 (* (* 8.0 l_0_7_68) l_0_7_72)))
 (let ((?x3959 (* (* 8.0 l_0_7_67) l_0_7_71)))
 (let ((?x4098 (* (* 8.0 l_0_7_55) l_0_7_59)))
 (let ((?x4100 (* (* 8.0 l_0_7_54) l_0_7_58)))
 (let ((?x4089 (* (* 8.0 l_0_7_53) l_0_7_57)))
 (let ((?x4082 (* (* 8.0 l_0_7_52) l_0_7_56)))
 (let ((?x11438 (- (- (- (- (+ (+ (+ ?x4082 ?x4089) ?x4100) ?x4098) ?x3959) ?x3960) ?x3957) ?x9823)))
 (= ?x11438 0.0)))))))))))
(assert
 (let ((?x10015 (* (* 4.0 l_0_7_75) l_0_7_75)))
 (let ((?x10012 (* (* 4.0 l_0_7_74) l_0_7_74)))
 (let ((?x10009 (* (* 4.0 l_0_7_73) l_0_7_73)))
 (let ((?x10006 (* (* 4.0 l_0_7_72) l_0_7_72)))
 (let ((?x10003 (* (* 4.0 l_0_7_71) l_0_7_71)))
 (let ((?x9984 (* l_0_7_60 l_0_7_60)))
 (let ((?x9985 (* 4.0 ?x9984)))
 (let ((?x9981 (* l_0_7_59 l_0_7_59)))
 (let ((?x9982 (* 4.0 ?x9981)))
 (let ((?x9978 (* l_0_7_58 l_0_7_58)))
 (let ((?x9979 (* 4.0 ?x9978)))
 (let ((?x9975 (* l_0_7_57 l_0_7_57)))
 (let ((?x9976 (* 4.0 ?x9975)))
 (let ((?x9972 (* l_0_7_56 l_0_7_56)))
 (let ((?x9973 (* 4.0 ?x9972)))
 (let ((?x11456 (- (- (- (+ (+ (+ (+ ?x9973 ?x9976) ?x9979) ?x9982) ?x9985) ?x10003) ?x10006) ?x10009)))
 (= (- (- ?x11456 ?x10012) ?x10015) 0.0))))))))))))))))))
(assert
 (let ((?x9739 (* 8.0 l_0_7_66)))
 (let ((?x4003 (* ?x9739 l_0_7_73)))
 (let ((?x9733 (* 8.0 l_0_7_65)))
 (let ((?x4055 (* ?x9733 l_0_7_72)))
 (let ((?x9727 (* 8.0 l_0_7_64)))
 (let ((?x4044 (* ?x9727 l_0_7_71)))
 (let ((?x9719 (* 8.0 l_0_7_51)))
 (let ((?x4127 (* ?x9719 l_0_7_58)))
 (let ((?x9713 (* 8.0 l_0_7_50)))
 (let ((?x4140 (* ?x9713 l_0_7_57)))
 (let ((?x6483 (+ (* (* (- 8.0) l_0_7_49) l_0_7_56) (* 3.0 (* l_0_7_49 l_0_7_49)))))
 (let ((?x6468 (+ (- (+ (- ?x6483 ?x4140) (* 3.0 (* l_0_7_50 l_0_7_50))) ?x4127) (* 3.0 (* l_0_7_51 l_0_7_51)))))
 (let ((?x11467 (- (+ (- (+ ?x6468 ?x4044) (* (* 3.0 l_0_7_64) l_0_7_64)) ?x4055) (* (* 3.0 l_0_7_65) l_0_7_65))))
 (= (- (+ ?x11467 ?x4003) (* (* 3.0 l_0_7_66) l_0_7_66)) 0.0)))))))))))))))
(assert
 (let ((?x9763 (* l_0_7_66 l_0_7_66)))
 (let ((?x9764 (* 4.0 ?x9763)))
 (let ((?x9758 (* l_0_7_65 l_0_7_65)))
 (let ((?x9759 (* 4.0 ?x9758)))
 (let ((?x9753 (* l_0_7_64 l_0_7_64)))
 (let ((?x9754 (* 4.0 ?x9753)))
 (let ((?x11505 (- (* (* (- 4.0) l_0_7_49) l_0_7_49) (* (* 4.0 l_0_7_50) l_0_7_50))))
 (let ((?x11511 (+ (+ (+ (- ?x11505 (* (* 4.0 l_0_7_51) l_0_7_51)) ?x9754) ?x9759) ?x9764)))
 (= ?x11511 0.0))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_91 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_96 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (let ((?x11548 (* l_0_8_91 l_0_8_91)))
 (let ((?x11538 (- (- (* (- 4.0) _a_3_) (* l_0_8_106 l_0_8_106)) (* (* 1.0 l_0_8_16) l_0_8_16))))
 (let ((?x11544 (- (+ ?x11538 (* 1.0 (* l_0_8_31 l_0_8_31))) (* (* 1.0 l_0_8_46) l_0_8_46))))
 (= (+ (- (+ ?x11544 (* 1.0 (* l_0_8_61 l_0_8_61))) ?x11548) 13.0) 0.0)))))
(assert
 (let ((?x11587 (* l_0_8_120 l_0_8_120)))
 (let ((?x11585 (* l_0_8_119 l_0_8_119)))
 (let ((?x11583 (* l_0_8_118 l_0_8_118)))
 (let ((?x11581 (* l_0_8_117 l_0_8_117)))
 (let ((?x11579 (* l_0_8_116 l_0_8_116)))
 (let ((?x11577 (* l_0_8_105 l_0_8_105)))
 (let ((?x11575 (* l_0_8_104 l_0_8_104)))
 (let ((?x11573 (* l_0_8_103 l_0_8_103)))
 (let ((?x11574 (- (- (* (- l_0_8_101) l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x11573)))
 (let ((?x11588 (- (- (- (- (- (- (- ?x11574 ?x11575) ?x11577) ?x11579) ?x11581) ?x11583) ?x11585) ?x11587)))
 (let ((?x11594 (- (- ?x11588 (* (* 12.0 l_0_8_16) l_0_8_16)) (* (* 1.0 l_0_8_26) l_0_8_26))))
 (let ((?x11600 (- (- ?x11594 (* (* 1.0 l_0_8_27) l_0_8_27)) (* (* 1.0 l_0_8_28) l_0_8_28))))
 (let ((?x11606 (- (- ?x11600 (* (* 1.0 l_0_8_29) l_0_8_29)) (* (* 1.0 l_0_8_30) l_0_8_30))))
 (let ((?x11611 (+ (+ ?x11606 (* 12.0 (* l_0_8_31 l_0_8_31))) (* 1.0 (* l_0_8_41 l_0_8_41)))))
 (let ((?x11617 (+ (+ ?x11611 (* 1.0 (* l_0_8_42 l_0_8_42))) (* 1.0 (* l_0_8_43 l_0_8_43)))))
 (let ((?x11623 (+ (+ ?x11617 (* 1.0 (* l_0_8_44 l_0_8_44))) (* 1.0 (* l_0_8_45 l_0_8_45)))))
 (let ((?x11628 (- (+ ?x11623 (* (* 6.0 l_0_8_46) l_0_8_56)) (* (* 6.0 l_0_8_46) l_0_8_46))))
 (let ((?x11634 (- (- ?x11628 (* (* 1.0 l_0_8_56) l_0_8_56)) (* (* 1.0 l_0_8_57) l_0_8_57))))
 (let ((?x11640 (- (- ?x11634 (* (* 1.0 l_0_8_58) l_0_8_58)) (* (* 1.0 l_0_8_59) l_0_8_59))))
 (let ((?x11646 (- (- ?x11640 (* (* 1.0 l_0_8_60) l_0_8_60)) (* (* 6.0 l_0_8_61) l_0_8_71))))
 (let ((?x11651 (+ (+ ?x11646 (* 6.0 (* l_0_8_61 l_0_8_61))) (* 1.0 (* l_0_8_71 l_0_8_71)))))
 (let ((?x11657 (+ (+ ?x11651 (* 1.0 (* l_0_8_72 l_0_8_72))) (* 1.0 (* l_0_8_73 l_0_8_73)))))
 (let ((?x11663 (+ (+ ?x11657 (* 1.0 (* l_0_8_74 l_0_8_74))) (* 1.0 (* l_0_8_75 l_0_8_75)))))
 (= (+ ?x11663 12.0) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x11713 (- (- (* (- 4.0) _a_5_) (* (* 2.0 l_0_8_101) l_0_8_91)) (* (* 2.0 l_0_8_106) l_0_8_116))))
 (let ((?x11719 (+ (- ?x11713 (* (* 2.0 l_0_8_16) l_0_8_26)) (* (* 2.0 l_0_8_31) l_0_8_41))))
 (let ((?x11724 (+ (- ?x11719 (* (* 2.0 l_0_8_46) l_0_8_56)) (* 3.0 (* l_0_8_46 l_0_8_46)))))
 (let ((?x11730 (- (+ ?x11724 (* (* 2.0 l_0_8_61) l_0_8_71)) (* (* 3.0 l_0_8_61) l_0_8_61))))
 (= (+ ?x11730 24.0) 0.0))))))
(assert
 (let ((?x11773 (* l_0_8_76 l_0_8_76)))
 (let ((?x11761 (- (- (* (- 4.0) _a_4_) (* (* 2.0 l_0_8_106) l_0_8_107)) (* (* 2.0 l_0_8_16) l_0_8_17))))
 (let ((?x11765 (+ (+ ?x11761 (* 4.0 (* l_0_8_16 l_0_8_16))) (* (* 2.0 l_0_8_31) l_0_8_32))))
 (let ((?x11770 (- (- ?x11765 (* (* 4.0 l_0_8_31) l_0_8_31)) (* (* 2.0 l_0_8_46) l_0_8_47))))
 (let ((?x11777 (- (+ (+ ?x11770 (* (* 2.0 l_0_8_61) l_0_8_62)) ?x11773) (* (* 2.0 l_0_8_91) l_0_8_92))))
 (= ?x11777 0.0)))))))
(assert
 (let ((?x11773 (* l_0_8_76 l_0_8_76)))
 (let ((?x11796 (* (* 4.0 l_0_8_61) l_0_8_61)))
 (let ((?x11560 (* l_0_8_46 l_0_8_46)))
 (let ((?x11791 (* 4.0 ?x11560)))
 (let ((?x11786 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_106) l_0_8_112)) (* (* 2.0 l_0_8_16) l_0_8_22))))
 (let ((?x11790 (- (+ ?x11786 (* (* 2.0 l_0_8_31) l_0_8_37)) (* (* 2.0 l_0_8_46) l_0_8_52))))
 (let ((?x11798 (- (- (+ (+ ?x11790 ?x11791) (* (* 2.0 l_0_8_61) l_0_8_67)) ?x11796) ?x11773)))
 (= (- ?x11798 (* (* 2.0 l_0_8_91) l_0_8_97)) 0.0)))))))))
(assert
 (let ((?x11877 (* 2.0 l_0_8_76)))
 (let ((?x11880 (* ?x11877 l_0_8_82)))
 (let ((?x11878 (* ?x11877 l_0_8_77)))
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x11869 (* ?x11868 l_0_8_62)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x11860 (* ?x11859 l_0_8_47)))
 (let ((?x11837 (- (* (* (- 2.0) l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_107) l_0_8_112))))
 (let ((?x11843 (+ (- ?x11837 (* (* 2.0 l_0_8_108) l_0_8_113)) (* (* 8.0 l_0_8_16) l_0_8_22))))
 (let ((?x11849 (- (- ?x11843 (* (* 2.0 l_0_8_17) l_0_8_22)) (* (* 2.0 l_0_8_18) l_0_8_23))))
 (let ((?x11855 (+ (- ?x11849 (* (* 8.0 l_0_8_31) l_0_8_37)) (* (* 2.0 l_0_8_32) l_0_8_37))))
 (let ((?x11864 (- (+ (+ ?x11855 (* (* 2.0 l_0_8_33) l_0_8_38)) ?x11860) (* (* 2.0 l_0_8_47) l_0_8_52))))
 (let ((?x11873 (+ (- (- ?x11864 (* (* 2.0 l_0_8_48) l_0_8_53)) ?x11869) (* (* 2.0 l_0_8_62) l_0_8_67))))
 (let ((?x11884 (- (+ (- (+ ?x11873 (* (* 2.0 l_0_8_63) l_0_8_68)) ?x11878) ?x11880) (* (* 2.0 l_0_8_92) l_0_8_97))))
 (= (- ?x11884 (* (* 2.0 l_0_8_93) l_0_8_98)) 0.0))))))))))))))))
(assert
 (let ((?x11877 (* 2.0 l_0_8_76)))
 (let ((?x11980 (* ?x11877 l_0_8_79)))
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x11969 (* ?x11868 l_0_8_67)))
 (let ((?x11967 (* ?x11868 l_0_8_64)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x11956 (* ?x11859 l_0_8_52)))
 (let ((?x11954 (* ?x11859 l_0_8_49)))
 (let ((?x11929 (- (* (* (- 2.0) l_0_8_1) l_0_8_4) (* (* 2.0 l_0_8_109) l_0_8_112))))
 (let ((?x11935 (- (- ?x11929 (* (* 2.0 l_0_8_110) l_0_8_113)) (* (* 2.0 l_0_8_111) l_0_8_114))))
 (let ((?x11941 (- (- ?x11935 (* (* 2.0 l_0_8_19) l_0_8_22)) (* (* 2.0 l_0_8_20) l_0_8_23))))
 (let ((?x11947 (+ (- ?x11941 (* (* 2.0 l_0_8_21) l_0_8_24)) (* (* 2.0 l_0_8_34) l_0_8_37))))
 (let ((?x11953 (+ (+ ?x11947 (* (* 2.0 l_0_8_35) l_0_8_38)) (* (* 2.0 l_0_8_36) l_0_8_39))))
 (let ((?x11963 (- (- (- (+ ?x11953 ?x11954) ?x11956) (* (* 2.0 l_0_8_49) l_0_8_52)) (* (* 2.0 l_0_8_50) l_0_8_53))))
 (let ((?x11973 (+ (+ (- (- ?x11963 (* (* 2.0 l_0_8_51) l_0_8_54)) ?x11967) ?x11969) (* (* 2.0 l_0_8_64) l_0_8_67))))
 (let ((?x11979 (+ (+ ?x11973 (* (* 2.0 l_0_8_65) l_0_8_68)) (* (* 2.0 l_0_8_66) l_0_8_69))))
 (let ((?x11987 (- (- (- ?x11979 ?x11980) (* (* 2.0 l_0_8_94) l_0_8_97)) (* (* 2.0 l_0_8_95) l_0_8_98))))
 (= (- ?x11987 (* (* 2.0 l_0_8_96) l_0_8_99)) 0.0)))))))))))))))))))
(assert
 (let ((?x12113 (* l_0_8_99 l_0_8_99)))
 (let ((?x12111 (* l_0_8_98 l_0_8_98)))
 (let ((?x12109 (* l_0_8_97 l_0_8_97)))
 (let ((?x11877 (* 2.0 l_0_8_76)))
 (let ((?x11880 (* ?x11877 l_0_8_82)))
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x11969 (* ?x11868 l_0_8_67)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x11956 (* ?x11859 l_0_8_52)))
 (let ((?x12056 (* l_0_8_115 l_0_8_115)))
 (let ((?x12054 (* l_0_8_114 l_0_8_114)))
 (let ((?x12052 (* l_0_8_113 l_0_8_113)))
 (let ((?x12050 (* l_0_8_112 l_0_8_112)))
 (let ((?x12051 (- (- (* (* (- 2.0) l_0_8_1) l_0_8_7) (* l_0_8_100 l_0_8_100)) ?x12050)))
 (let ((?x12060 (- (- (- (- ?x12051 ?x12052) ?x12054) ?x12056) (* (* 1.0 l_0_8_22) l_0_8_22))))
 (let ((?x12066 (- (- ?x12060 (* (* 1.0 l_0_8_23) l_0_8_23)) (* (* 1.0 l_0_8_24) l_0_8_24))))
 (let ((?x12072 (+ (- ?x12066 (* (* 1.0 l_0_8_25) l_0_8_25)) (* 1.0 (* l_0_8_37 l_0_8_37)))))
 (let ((?x12078 (+ (+ ?x12072 (* 1.0 (* l_0_8_38 l_0_8_38))) (* 1.0 (* l_0_8_39 l_0_8_39)))))
 (let ((?x12085 (- (+ (+ ?x12078 (* 1.0 (* l_0_8_40 l_0_8_40))) ?x11956) (* (* 1.0 l_0_8_52) l_0_8_52))))
 (let ((?x12091 (- (- ?x12085 (* (* 1.0 l_0_8_53) l_0_8_53)) (* (* 1.0 l_0_8_54) l_0_8_54))))
 (let ((?x12098 (+ (- (- ?x12091 (* (* 1.0 l_0_8_55) l_0_8_55)) ?x11969) (* 1.0 (* l_0_8_67 l_0_8_67)))))
 (let ((?x12104 (+ (+ ?x12098 (* 1.0 (* l_0_8_68 l_0_8_68))) (* 1.0 (* l_0_8_69 l_0_8_69)))))
 (let ((?x12112 (- (- (- (+ ?x12104 (* 1.0 (* l_0_8_70 l_0_8_70))) ?x11880) ?x12109) ?x12111)))
 (= (- ?x12112 ?x12113) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x11877 (* 2.0 l_0_8_76)))
 (let ((?x12225 (* ?x11877 l_0_8_86)))
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x12211 (* ?x11868 l_0_8_71)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x12195 (* ?x11859 l_0_8_56)))
 (let ((?x12148 (- (* (* (- 2.0) l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_100) l_0_8_104))))
 (let ((?x12153 (- (- ?x12148 (* (* 2.0 l_0_8_101) l_0_8_97)) (* (* 2.0 l_0_8_102) l_0_8_98))))
 (let ((?x12159 (- (- ?x12153 (* (* 2.0 l_0_8_103) l_0_8_99)) (* (* 2.0 l_0_8_112) l_0_8_116))))
 (let ((?x12165 (- (- ?x12159 (* (* 2.0 l_0_8_113) l_0_8_117)) (* (* 2.0 l_0_8_114) l_0_8_118))))
 (let ((?x12171 (- (- ?x12165 (* (* 2.0 l_0_8_115) l_0_8_119)) (* (* 2.0 l_0_8_22) l_0_8_26))))
 (let ((?x12177 (- (- ?x12171 (* (* 2.0 l_0_8_23) l_0_8_27)) (* (* 2.0 l_0_8_24) l_0_8_28))))
 (let ((?x12183 (+ (- ?x12177 (* (* 2.0 l_0_8_25) l_0_8_29)) (* (* 2.0 l_0_8_37) l_0_8_41))))
 (let ((?x12189 (+ (+ ?x12183 (* (* 2.0 l_0_8_38) l_0_8_42)) (* (* 2.0 l_0_8_39) l_0_8_43))))
 (let ((?x12194 (+ (+ ?x12189 (* (* 2.0 l_0_8_40) l_0_8_44)) (* (* 6.0 l_0_8_46) l_0_8_52))))
 (let ((?x12202 (- (- (+ ?x12194 ?x12195) (* (* 2.0 l_0_8_52) l_0_8_56)) (* (* 2.0 l_0_8_53) l_0_8_57))))
 (let ((?x12208 (- (- ?x12202 (* (* 2.0 l_0_8_54) l_0_8_58)) (* (* 2.0 l_0_8_55) l_0_8_59))))
 (let ((?x12215 (+ (- (- ?x12208 (* (* 6.0 l_0_8_61) l_0_8_67)) ?x12211) (* (* 2.0 l_0_8_67) l_0_8_71))))
 (let ((?x12221 (+ (+ ?x12215 (* (* 2.0 l_0_8_68) l_0_8_72)) (* (* 2.0 l_0_8_69) l_0_8_73))))
 (= (- (+ ?x12221 (* (* 2.0 l_0_8_70) l_0_8_74)) ?x12225) 0.0)))))))))))))))))))))
(assert
 (let ((?x12296 (* l_0_8_78 l_0_8_78)))
 (let ((?x12293 (* 2.0 l_0_8_78)))
 (let ((?x12294 (* ?x12293 l_0_8_83)))
 (let ((?x12291 (* l_0_8_77 l_0_8_77)))
 (let ((?x12288 (* 2.0 l_0_8_77)))
 (let ((?x12289 (* ?x12288 l_0_8_82)))
 (let ((?x12286 (* (* 4.0 l_0_8_63) l_0_8_63)))
 (let ((?x12283 (* (* 4.0 l_0_8_62) l_0_8_62)))
 (let ((?x12279 (* l_0_8_48 l_0_8_48)))
 (let ((?x12280 (* 4.0 ?x12279)))
 (let ((?x12276 (* l_0_8_47 l_0_8_47)))
 (let ((?x12277 (* 4.0 ?x12276)))
 (let ((?x12268 (* l_0_8_3 l_0_8_3)))
 (let ((?x12266 (* l_0_8_2 l_0_8_2)))
 (let ((?x12265 (+ (* (* 8.0 l_0_8_17) l_0_8_22) (* (* 8.0 l_0_8_18) l_0_8_23))))
 (let ((?x12275 (- (- (- (- ?x12265 ?x12266) ?x12268) (* (* 8.0 l_0_8_32) l_0_8_37)) (* (* 8.0 l_0_8_33) l_0_8_38))))
 (let ((?x12295 (+ (- (+ (- (- (+ (+ ?x12275 ?x12277) ?x12280) ?x12283) ?x12286) ?x12289) ?x12291) ?x12294)))
 (= (- ?x12295 ?x12296) 0.0)))))))))))))))))))
(assert
 (let ((?x12371 (* 2.0 l_0_8_81)))
 (let ((?x12372 (* ?x12371 l_0_8_84)))
 (let ((?x12368 (* 2.0 l_0_8_80)))
 (let ((?x12369 (* ?x12368 l_0_8_83)))
 (let ((?x12365 (* 2.0 l_0_8_79)))
 (let ((?x12366 (* ?x12365 l_0_8_82)))
 (let ((?x12293 (* 2.0 l_0_8_78)))
 (let ((?x12363 (* ?x12293 l_0_8_80)))
 (let ((?x12288 (* 2.0 l_0_8_77)))
 (let ((?x12361 (* ?x12288 l_0_8_79)))
 (let ((?x12356 (* 8.0 l_0_8_63)))
 (let ((?x12359 (* ?x12356 l_0_8_68)))
 (let ((?x12357 (* ?x12356 l_0_8_65)))
 (let ((?x12351 (* 8.0 l_0_8_62)))
 (let ((?x12354 (* ?x12351 l_0_8_67)))
 (let ((?x12352 (* ?x12351 l_0_8_64)))
 (let ((?x12346 (* 8.0 l_0_8_48)))
 (let ((?x12349 (* ?x12346 l_0_8_53)))
 (let ((?x12347 (* ?x12346 l_0_8_50)))
 (let ((?x12341 (* 8.0 l_0_8_47)))
 (let ((?x12344 (* ?x12341 l_0_8_52)))
 (let ((?x12342 (* ?x12341 l_0_8_49)))
 (let ((?x12322 (- (* (* 8.0 l_0_8_19) l_0_8_22) (* (* 2.0 l_0_8_2) l_0_8_4))))
 (let ((?x12328 (+ (+ ?x12322 (* (* 8.0 l_0_8_20) l_0_8_23)) (* (* 8.0 l_0_8_21) l_0_8_24))))
 (let ((?x12334 (- (- ?x12328 (* (* 2.0 l_0_8_3) l_0_8_5)) (* (* 8.0 l_0_8_34) l_0_8_37))))
 (let ((?x12340 (- (- ?x12334 (* (* 8.0 l_0_8_35) l_0_8_38)) (* (* 8.0 l_0_8_36) l_0_8_39))))
 (let ((?x12358 (- (+ (- (- (+ (- (+ ?x12340 ?x12342) ?x12344) ?x12347) ?x12349) ?x12352) ?x12354) ?x12357)))
 (= (+ (+ (+ (- (- (+ ?x12358 ?x12359) ?x12361) ?x12363) ?x12366) ?x12369) ?x12372) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x12450 (* l_0_8_85 l_0_8_85)))
 (let ((?x12448 (* l_0_8_84 l_0_8_84)))
 (let ((?x12446 (* l_0_8_83 l_0_8_83)))
 (let ((?x12444 (* l_0_8_82 l_0_8_82)))
 (let ((?x12293 (* 2.0 l_0_8_78)))
 (let ((?x12294 (* ?x12293 l_0_8_83)))
 (let ((?x12288 (* 2.0 l_0_8_77)))
 (let ((?x12289 (* ?x12288 l_0_8_82)))
 (let ((?x12356 (* 8.0 l_0_8_63)))
 (let ((?x12359 (* ?x12356 l_0_8_68)))
 (let ((?x12351 (* 8.0 l_0_8_62)))
 (let ((?x12354 (* ?x12351 l_0_8_67)))
 (let ((?x12346 (* 8.0 l_0_8_48)))
 (let ((?x12349 (* ?x12346 l_0_8_53)))
 (let ((?x12341 (* 8.0 l_0_8_47)))
 (let ((?x12344 (* ?x12341 l_0_8_52)))
 (let ((?x7438 (* l_0_8_25 l_0_8_25)))
 (let ((?x12422 (* 4.0 ?x7438)))
 (let ((?x7434 (* l_0_8_24 l_0_8_24)))
 (let ((?x12420 (* 4.0 ?x7434)))
 (let ((?x7414 (* l_0_8_23 l_0_8_23)))
 (let ((?x12418 (* 4.0 ?x7414)))
 (let ((?x7428 (* l_0_8_22 l_0_8_22)))
 (let ((?x12404 (* 4.0 ?x7428)))
 (let ((?x12423 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_2) l_0_8_7) ?x12404) ?x12418) ?x12420) ?x12422)))
 (let ((?x12428 (- (- ?x12423 (* (* 2.0 l_0_8_3) l_0_8_8)) (* (* 4.0 l_0_8_37) l_0_8_37))))
 (let ((?x12434 (- (- ?x12428 (* (* 4.0 l_0_8_38) l_0_8_38)) (* (* 4.0 l_0_8_39) l_0_8_39))))
 (let ((?x12440 (- (+ (+ (- ?x12434 (* (* 4.0 l_0_8_40) l_0_8_40)) ?x12344) ?x12349) ?x12354)))
 (let ((?x12451 (+ (+ (+ (+ (- (- (- ?x12440 ?x12359) ?x12289) ?x12294) ?x12444) ?x12446) ?x12448) ?x12450)))
 (= ?x12451 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x12521 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x12518 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x12515 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x12512 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x12293 (* 2.0 l_0_8_78)))
 (let ((?x12509 (* ?x12293 l_0_8_87)))
 (let ((?x12288 (* 2.0 l_0_8_77)))
 (let ((?x12507 (* ?x12288 l_0_8_86)))
 (let ((?x12356 (* 8.0 l_0_8_63)))
 (let ((?x12505 (* ?x12356 l_0_8_72)))
 (let ((?x12351 (* 8.0 l_0_8_62)))
 (let ((?x12500 (* ?x12351 l_0_8_71)))
 (let ((?x12346 (* 8.0 l_0_8_48)))
 (let ((?x12495 (* ?x12346 l_0_8_57)))
 (let ((?x12341 (* 8.0 l_0_8_47)))
 (let ((?x12490 (* ?x12341 l_0_8_56)))
 (let ((?x7995 (- (* (* (- 2.0) l_0_8_11) l_0_8_2) (* (* 2.0 l_0_8_12) l_0_8_3))))
 (let ((?x12468 (+ (+ ?x7995 (* (* 8.0 l_0_8_22) l_0_8_26)) (* (* 8.0 l_0_8_23) l_0_8_27))))
 (let ((?x12474 (+ (+ ?x12468 (* (* 8.0 l_0_8_24) l_0_8_28)) (* (* 8.0 l_0_8_25) l_0_8_29))))
 (let ((?x12480 (- (- ?x12474 (* (* 8.0 l_0_8_37) l_0_8_41)) (* (* 8.0 l_0_8_38) l_0_8_42))))
 (let ((?x12486 (- (- ?x12480 (* (* 8.0 l_0_8_39) l_0_8_43)) (* (* 8.0 l_0_8_40) l_0_8_44))))
 (let ((?x12494 (+ (+ (+ ?x12486 (* (* 6.0 l_0_8_47) l_0_8_52)) ?x12490) (* (* 6.0 l_0_8_48) l_0_8_53))))
 (let ((?x12504 (- (- (- (+ ?x12494 ?x12495) (* (* 6.0 l_0_8_62) l_0_8_67)) ?x12500) (* (* 6.0 l_0_8_63) l_0_8_68))))
 (let ((?x12522 (+ (+ (+ (+ (- (- (- ?x12504 ?x12505) ?x12507) ?x12509) ?x12512) ?x12515) ?x12518) ?x12521)))
 (= ?x12522 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12621 (* l_0_8_81 l_0_8_81)))
 (let ((?x12619 (* l_0_8_80 l_0_8_80)))
 (let ((?x12617 (* l_0_8_79 l_0_8_79)))
 (let ((?x12615 (* (* 4.0 l_0_8_66) l_0_8_66)))
 (let ((?x12611 (* 8.0 l_0_8_66)))
 (let ((?x12612 (* ?x12611 l_0_8_69)))
 (let ((?x12609 (* (* 4.0 l_0_8_65) l_0_8_65)))
 (let ((?x12605 (* 8.0 l_0_8_65)))
 (let ((?x12606 (* ?x12605 l_0_8_68)))
 (let ((?x12603 (* (* 4.0 l_0_8_64) l_0_8_64)))
 (let ((?x12599 (* 8.0 l_0_8_64)))
 (let ((?x12600 (* ?x12599 l_0_8_67)))
 (let ((?x12597 (* l_0_8_6 l_0_8_6)))
 (let ((?x12594 (* l_0_8_51 l_0_8_51)))
 (let ((?x12595 (* 4.0 ?x12594)))
 (let ((?x12591 (* 8.0 l_0_8_51)))
 (let ((?x12592 (* ?x12591 l_0_8_54)))
 (let ((?x12588 (* l_0_8_50 l_0_8_50)))
 (let ((?x12589 (* 4.0 ?x12588)))
 (let ((?x12585 (* 8.0 l_0_8_50)))
 (let ((?x12586 (* ?x12585 l_0_8_53)))
 (let ((?x12583 (* l_0_8_5 l_0_8_5)))
 (let ((?x12580 (* l_0_8_49 l_0_8_49)))
 (let ((?x12581 (* 4.0 ?x12580)))
 (let ((?x12582 (+ (- (* (- l_0_8_4) l_0_8_4) (* (* 8.0 l_0_8_49) l_0_8_52)) ?x12581)))
 (let ((?x12601 (+ (- (+ (- (+ (- (- ?x12582 ?x12583) ?x12586) ?x12589) ?x12592) ?x12595) ?x12597) ?x12600)))
 (let ((?x12620 (- (- (- (+ (- (+ (- ?x12601 ?x12603) ?x12606) ?x12609) ?x12612) ?x12615) ?x12617) ?x12619)))
 (= (- ?x12620 ?x12621) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x12371 (* 2.0 l_0_8_81)))
 (let ((?x12372 (* ?x12371 l_0_8_84)))
 (let ((?x12368 (* 2.0 l_0_8_80)))
 (let ((?x12369 (* ?x12368 l_0_8_83)))
 (let ((?x12365 (* 2.0 l_0_8_79)))
 (let ((?x12366 (* ?x12365 l_0_8_82)))
 (let ((?x12611 (* 8.0 l_0_8_66)))
 (let ((?x12612 (* ?x12611 l_0_8_69)))
 (let ((?x12605 (* 8.0 l_0_8_65)))
 (let ((?x12606 (* ?x12605 l_0_8_68)))
 (let ((?x12599 (* 8.0 l_0_8_64)))
 (let ((?x12600 (* ?x12599 l_0_8_67)))
 (let ((?x12591 (* 8.0 l_0_8_51)))
 (let ((?x12592 (* ?x12591 l_0_8_54)))
 (let ((?x12585 (* 8.0 l_0_8_50)))
 (let ((?x12586 (* ?x12585 l_0_8_53)))
 (let ((?x12577 (* 8.0 l_0_8_49)))
 (let ((?x12578 (* ?x12577 l_0_8_52)))
 (let ((?x12653 (- (+ (* (* (- 2.0) l_0_8_4) l_0_8_7) ?x12578) (* (* 2.0 l_0_8_5) l_0_8_8))))
 (let ((?x12661 (- (- (+ (+ ?x12653 ?x12586) ?x12592) (* (* 4.0 l_0_8_52) l_0_8_52)) (* (* 4.0 l_0_8_53) l_0_8_53))))
 (let ((?x12667 (- (- ?x12661 (* (* 4.0 l_0_8_54) l_0_8_54)) (* (* 4.0 l_0_8_55) l_0_8_55))))
 (let ((?x12673 (- (- (- (- ?x12667 (* (* 2.0 l_0_8_6) l_0_8_9)) ?x12600) ?x12606) ?x12612)))
 (let ((?x12677 (+ (+ ?x12673 (* 4.0 (* l_0_8_67 l_0_8_67))) (* 4.0 (* l_0_8_68 l_0_8_68)))))
 (let ((?x12681 (+ (+ ?x12677 (* 4.0 (* l_0_8_69 l_0_8_69))) (* 4.0 (* l_0_8_70 l_0_8_70)))))
 (= (- (- (- ?x12681 ?x12366) ?x12369) ?x12372) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12371 (* 2.0 l_0_8_81)))
 (let ((?x12709 (* ?x12371 l_0_8_88)))
 (let ((?x12368 (* 2.0 l_0_8_80)))
 (let ((?x12707 (* ?x12368 l_0_8_87)))
 (let ((?x12365 (* 2.0 l_0_8_79)))
 (let ((?x12705 (* ?x12365 l_0_8_86)))
 (let ((?x12703 (* (* 8.0 l_0_8_70) l_0_8_74)))
 (let ((?x12700 (* (* 8.0 l_0_8_69) l_0_8_73)))
 (let ((?x12697 (* (* 8.0 l_0_8_68) l_0_8_72)))
 (let ((?x1359 (* (* 8.0 l_0_8_67) l_0_8_71)))
 (let ((?x12611 (* 8.0 l_0_8_66)))
 (let ((?x1357 (* ?x12611 l_0_8_73)))
 (let ((?x12605 (* 8.0 l_0_8_65)))
 (let ((?x1430 (* ?x12605 l_0_8_72)))
 (let ((?x12599 (* 8.0 l_0_8_64)))
 (let ((?x1463 (* ?x12599 l_0_8_71)))
 (let ((?x8167 (* (* 8.0 l_0_8_55) l_0_8_59)))
 (let ((?x1464 (* (* 8.0 l_0_8_54) l_0_8_58)))
 (let ((?x1472 (* (* 8.0 l_0_8_53) l_0_8_57)))
 (let ((?x1505 (* (* 8.0 l_0_8_52) l_0_8_56)))
 (let ((?x12591 (* 8.0 l_0_8_51)))
 (let ((?x1518 (* ?x12591 l_0_8_58)))
 (let ((?x12585 (* 8.0 l_0_8_50)))
 (let ((?x8220 (* ?x12585 l_0_8_57)))
 (let ((?x12577 (* 8.0 l_0_8_49)))
 (let ((?x8233 (* ?x12577 l_0_8_56)))
 (let ((?x8280 (- (* (* (- 2.0) l_0_8_11) l_0_8_4) (* (* 2.0 l_0_8_12) l_0_8_5))))
 (let ((?x8232 (+ (- ?x8280 (* (* 2.0 l_0_8_13) l_0_8_6)) (* (* 6.0 l_0_8_49) l_0_8_52))))
 (let ((?x1474 (+ (+ (+ (+ ?x8232 ?x8233) (* (* 6.0 l_0_8_50) l_0_8_53)) ?x8220) (* (* 6.0 l_0_8_51) l_0_8_54))))
 (let ((?x1462 (- (- (- (- (- (+ ?x1474 ?x1518) ?x1505) ?x1472) ?x1464) ?x8167) (* (* 6.0 l_0_8_64) l_0_8_67))))
 (let ((?x8124 (- (- (- (- ?x1462 ?x1463) (* (* 6.0 l_0_8_65) l_0_8_68)) ?x1430) (* (* 6.0 l_0_8_66) l_0_8_69))))
 (let ((?x12708 (- (- (+ (+ (+ (+ (- ?x8124 ?x1357) ?x1359) ?x12697) ?x12700) ?x12703) ?x12705) ?x12707)))
 (= (- ?x12708 ?x12709) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12774 (* l_0_8_9 l_0_8_9)))
 (let ((?x12450 (* l_0_8_85 l_0_8_85)))
 (let ((?x12448 (* l_0_8_84 l_0_8_84)))
 (let ((?x12446 (* l_0_8_83 l_0_8_83)))
 (let ((?x12444 (* l_0_8_82 l_0_8_82)))
 (let ((?x12768 (* l_0_8_8 l_0_8_8)))
 (let ((?x12766 (* (* 4.0 l_0_8_70) l_0_8_70)))
 (let ((?x12763 (* l_0_8_7 l_0_8_7)))
 (let ((?x12761 (* (* 4.0 l_0_8_69) l_0_8_69)))
 (let ((?x12758 (* (* 4.0 l_0_8_68) l_0_8_68)))
 (let ((?x12755 (* (* 4.0 l_0_8_67) l_0_8_67)))
 (let ((?x7458 (* l_0_8_55 l_0_8_55)))
 (let ((?x1426 (* 4.0 ?x7458)))
 (let ((?x7453 (* l_0_8_54 l_0_8_54)))
 (let ((?x8117 (* 4.0 ?x7453)))
 (let ((?x7448 (* l_0_8_53 l_0_8_53)))
 (let ((?x8105 (* 4.0 ?x7448)))
 (let ((?x12751 (+ (+ (* (- l_0_8_10) l_0_8_10) (* 4.0 (* l_0_8_52 l_0_8_52))) ?x8105)))
 (let ((?x12767 (- (- (- (- (- (+ (+ ?x12751 ?x8117) ?x1426) ?x12755) ?x12758) ?x12761) ?x12763) ?x12766)))
 (= (- (- (- (- (- (- ?x12767 ?x12768) ?x12444) ?x12446) ?x12448) ?x12450) ?x12774) 0.0)))))))))))))))))))))
(assert
 (let ((?x12521 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x12518 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x12515 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x12512 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x12703 (* (* 8.0 l_0_8_70) l_0_8_74)))
 (let ((?x12700 (* (* 8.0 l_0_8_69) l_0_8_73)))
 (let ((?x12697 (* (* 8.0 l_0_8_68) l_0_8_72)))
 (let ((?x1359 (* (* 8.0 l_0_8_67) l_0_8_71)))
 (let ((?x8167 (* (* 8.0 l_0_8_55) l_0_8_59)))
 (let ((?x1464 (* (* 8.0 l_0_8_54) l_0_8_58)))
 (let ((?x1472 (* (* 8.0 l_0_8_53) l_0_8_57)))
 (let ((?x1505 (* (* 8.0 l_0_8_52) l_0_8_56)))
 (let ((?x1792 (- (* (* (- 2.0) l_0_8_10) l_0_8_14) (* (* 2.0 l_0_8_11) l_0_8_7))))
 (let ((?x1782 (- (- ?x1792 (* (* 2.0 l_0_8_12) l_0_8_8)) (* (* 2.0 l_0_8_13) l_0_8_9))))
 (let ((?x12792 (+ (+ (+ (+ ?x1782 ?x1505) (* 3.0 (* l_0_8_52 l_0_8_52))) ?x1472) (* 3.0 (* l_0_8_53 l_0_8_53)))))
 (let ((?x12798 (+ (+ (+ (+ ?x12792 ?x1464) (* 3.0 (* l_0_8_54 l_0_8_54))) ?x8167) (* 3.0 (* l_0_8_55 l_0_8_55)))))
 (let ((?x12806 (- (- (- (- ?x12798 ?x1359) (* (* 3.0 l_0_8_67) l_0_8_67)) ?x12697) (* (* 3.0 l_0_8_68) l_0_8_68))))
 (let ((?x12814 (- (- (- (- ?x12806 ?x12700) (* (* 3.0 l_0_8_69) l_0_8_69)) ?x12703) (* (* 3.0 l_0_8_70) l_0_8_70))))
 (= (- (- (- (- ?x12814 ?x12512) ?x12515) ?x12518) ?x12521) 0.0))))))))))))))))))))
(assert
 (let ((?x12900 (* l_0_8_90 l_0_8_90)))
 (let ((?x12898 (* l_0_8_89 l_0_8_89)))
 (let ((?x12896 (* l_0_8_88 l_0_8_88)))
 (let ((?x12894 (* l_0_8_87 l_0_8_87)))
 (let ((?x12892 (* l_0_8_86 l_0_8_86)))
 (let ((?x12890 (* (* 4.0 l_0_8_75) l_0_8_75)))
 (let ((?x12887 (* (* 4.0 l_0_8_74) l_0_8_74)))
 (let ((?x12884 (* (* 4.0 l_0_8_73) l_0_8_73)))
 (let ((?x12881 (* (* 4.0 l_0_8_72) l_0_8_72)))
 (let ((?x12878 (* (* 4.0 l_0_8_71) l_0_8_71)))
 (let ((?x11692 (* l_0_8_60 l_0_8_60)))
 (let ((?x12860 (* 4.0 ?x11692)))
 (let ((?x6745 (* l_0_8_59 l_0_8_59)))
 (let ((?x12858 (* 4.0 ?x6745)))
 (let ((?x6740 (* l_0_8_58 l_0_8_58)))
 (let ((?x12856 (* 4.0 ?x6740)))
 (let ((?x6733 (* l_0_8_57 l_0_8_57)))
 (let ((?x12854 (* 4.0 ?x6733)))
 (let ((?x11687 (* l_0_8_56 l_0_8_56)))
 (let ((?x12852 (* 4.0 ?x11687)))
 (let ((?x12829 (* l_0_8_15 l_0_8_15)))
 (let ((?x1891 (* l_0_8_14 l_0_8_14)))
 (let ((?x6292 (* l_0_8_13 l_0_8_13)))
 (let ((?x8580 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x6292) ?x1891)))
 (let ((?x12836 (+ (- (- ?x8580 ?x12829) (* (* 24.0 l_0_8_16) l_0_8_22)) (* (* 24.0 l_0_8_31) l_0_8_37))))
 (let ((?x12842 (+ (- ?x12836 (* (* 12.0 l_0_8_46) l_0_8_52)) (* (* 6.0 l_0_8_52) l_0_8_56))))
 (let ((?x12848 (+ (+ ?x12842 (* (* 6.0 l_0_8_53) l_0_8_57)) (* (* 6.0 l_0_8_54) l_0_8_58))))
 (let ((?x12857 (+ (+ (+ (+ ?x12848 (* (* 6.0 l_0_8_55) l_0_8_59)) ?x12852) ?x12854) ?x12856)))
 (let ((?x12867 (- (+ (+ (+ ?x12857 ?x12858) ?x12860) (* (* 12.0 l_0_8_61) l_0_8_67)) (* (* 6.0 l_0_8_67) l_0_8_71))))
 (let ((?x12873 (- (- ?x12867 (* (* 6.0 l_0_8_68) l_0_8_72)) (* (* 6.0 l_0_8_69) l_0_8_73))))
 (let ((?x12885 (- (- (- (- ?x12873 (* (* 6.0 l_0_8_70) l_0_8_74)) ?x12878) ?x12881) ?x12884)))
 (let ((?x12901 (- (- (- (- (- (- (- ?x12885 ?x12887) ?x12890) ?x12892) ?x12894) ?x12896) ?x12898) ?x12900)))
 (= ?x12901 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11545 (* l_0_8_61 l_0_8_61)))
 (let ((?x6975 (* 4.0 ?x11545)))
 (let ((?x12953 (- (* (* (- 2.0) l_0_8_106) l_0_8_109) (* (* 2.0 l_0_8_16) l_0_8_19))))
 (let ((?x12957 (- (+ ?x12953 (* (* 2.0 l_0_8_31) l_0_8_34)) (* (* 2.0 l_0_8_46) l_0_8_49))))
 (let ((?x12962 (+ (- ?x12957 (* (* 4.0 l_0_8_46) l_0_8_46)) (* (* 2.0 l_0_8_61) l_0_8_64))))
 (= (- (+ ?x12962 ?x6975) (* (* 2.0 l_0_8_91) l_0_8_94)) 0.0)))))))
(assert
 (let ((?x13024 (* l_0_8_93 l_0_8_93)))
 (let ((?x13022 (* l_0_8_92 l_0_8_92)))
 (let ((?x11877 (* 2.0 l_0_8_76)))
 (let ((?x11878 (* ?x11877 l_0_8_77)))
 (let ((?x12996 (+ (- (* (- l_0_8_107) l_0_8_107) (* l_0_8_108 l_0_8_108)) (* (* 8.0 l_0_8_16) l_0_8_17))))
 (let ((?x13002 (- (- ?x12996 (* (* 1.0 l_0_8_17) l_0_8_17)) (* (* 1.0 l_0_8_18) l_0_8_18))))
 (let ((?x13007 (+ (- ?x13002 (* (* 8.0 l_0_8_31) l_0_8_32)) (* 1.0 (* l_0_8_32 l_0_8_32)))))
 (let ((?x13013 (- (+ ?x13007 (* 1.0 (* l_0_8_33 l_0_8_33))) (* (* 1.0 l_0_8_47) l_0_8_47))))
 (let ((?x13018 (+ (- ?x13013 (* (* 1.0 l_0_8_48) l_0_8_48)) (* 1.0 (* l_0_8_62 l_0_8_62)))))
 (let ((?x13025 (- (- (+ (+ ?x13018 (* 1.0 (* l_0_8_63 l_0_8_63))) ?x11878) ?x13022) ?x13024)))
 (= ?x13025 0.0))))))))))))
(assert
 (let ((?x11877 (* 2.0 l_0_8_76)))
 (let ((?x11980 (* ?x11877 l_0_8_79)))
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x11869 (* ?x11868 l_0_8_62)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x11860 (* ?x11859 l_0_8_47)))
 (let ((?x13047 (- (* (* (- 2.0) l_0_8_107) l_0_8_109) (* (* 2.0 l_0_8_108) l_0_8_110))))
 (let ((?x13051 (- (+ ?x13047 (* (* 8.0 l_0_8_16) l_0_8_19)) (* (* 2.0 l_0_8_17) l_0_8_19))))
 (let ((?x13055 (- (- ?x13051 (* (* 2.0 l_0_8_18) l_0_8_20)) (* (* 8.0 l_0_8_31) l_0_8_34))))
 (let ((?x13059 (+ (+ ?x13055 (* (* 2.0 l_0_8_32) l_0_8_34)) (* (* 2.0 l_0_8_33) l_0_8_35))))
 (let ((?x13064 (- (- (- ?x13059 ?x11860) (* (* 2.0 l_0_8_47) l_0_8_49)) (* (* 2.0 l_0_8_48) l_0_8_50))))
 (let ((?x13069 (+ (+ (+ ?x13064 ?x11869) (* (* 2.0 l_0_8_62) l_0_8_64)) (* (* 2.0 l_0_8_63) l_0_8_65))))
 (let ((?x13074 (- (- (+ ?x13069 ?x11980) (* (* 2.0 l_0_8_92) l_0_8_94)) (* (* 2.0 l_0_8_93) l_0_8_95))))
 (= ?x13074 0.0)))))))))))))))
(assert
 (let ((?x11877 (* 2.0 l_0_8_76)))
 (let ((?x12225 (* ?x11877 l_0_8_86)))
 (let ((?x13116 (- (* (* (- 2.0) l_0_8_101) l_0_8_92) (* (* 2.0 l_0_8_102) l_0_8_93))))
 (let ((?x13120 (- (- ?x13116 (* (* 2.0 l_0_8_107) l_0_8_116)) (* (* 2.0 l_0_8_108) l_0_8_117))))
 (let ((?x13124 (- (+ ?x13120 (* (* 8.0 l_0_8_16) l_0_8_26)) (* (* 2.0 l_0_8_17) l_0_8_26))))
 (let ((?x13128 (- (- ?x13124 (* (* 2.0 l_0_8_18) l_0_8_27)) (* (* 8.0 l_0_8_31) l_0_8_41))))
 (let ((?x13132 (+ (+ ?x13128 (* (* 2.0 l_0_8_32) l_0_8_41)) (* (* 2.0 l_0_8_33) l_0_8_42))))
 (let ((?x13136 (- (+ ?x13132 (* (* 6.0 l_0_8_46) l_0_8_47)) (* (* 2.0 l_0_8_47) l_0_8_56))))
 (let ((?x13140 (- (- ?x13136 (* (* 2.0 l_0_8_48) l_0_8_57)) (* (* 6.0 l_0_8_61) l_0_8_62))))
 (let ((?x13144 (+ (+ ?x13140 (* (* 2.0 l_0_8_62) l_0_8_71)) (* (* 2.0 l_0_8_63) l_0_8_72))))
 (= (+ ?x13144 ?x12225) 0.0))))))))))))
(assert
 (let ((?x13237 (* l_0_8_96 l_0_8_96)))
 (let ((?x13235 (* l_0_8_95 l_0_8_95)))
 (let ((?x13233 (* l_0_8_94 l_0_8_94)))
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x11967 (* ?x11868 l_0_8_64)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x11954 (* ?x11859 l_0_8_49)))
 (let ((?x13196 (* l_0_8_111 l_0_8_111)))
 (let ((?x13197 (- (- (* (- l_0_8_109) l_0_8_109) (* l_0_8_110 l_0_8_110)) ?x13196)))
 (let ((?x13203 (- (- ?x13197 (* (* 1.0 l_0_8_19) l_0_8_19)) (* (* 1.0 l_0_8_20) l_0_8_20))))
 (let ((?x13209 (+ (- ?x13203 (* (* 1.0 l_0_8_21) l_0_8_21)) (* 1.0 (* l_0_8_34 l_0_8_34)))))
 (let ((?x13215 (+ (+ ?x13209 (* 1.0 (* l_0_8_35 l_0_8_35))) (* 1.0 (* l_0_8_36 l_0_8_36)))))
 (let ((?x13222 (- (- (- ?x13215 ?x11954) (* (* 1.0 l_0_8_49) l_0_8_49)) (* (* 1.0 l_0_8_50) l_0_8_50))))
 (let ((?x13228 (+ (+ (- ?x13222 (* (* 1.0 l_0_8_51) l_0_8_51)) ?x11967) (* 1.0 (* l_0_8_64 l_0_8_64)))))
 (let ((?x13232 (+ (+ ?x13228 (* 1.0 (* l_0_8_65 l_0_8_65))) (* 1.0 (* l_0_8_66 l_0_8_66)))))
 (= (- (- (- ?x13232 ?x13233) ?x13235) ?x13237) 0.0)))))))))))))))))
(assert
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x12211 (* ?x11868 l_0_8_71)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x12195 (* ?x11859 l_0_8_56)))
 (let ((?x13268 (- (* (* (- 2.0) l_0_8_101) l_0_8_94) (* (* 2.0 l_0_8_102) l_0_8_95))))
 (let ((?x13272 (- (- ?x13268 (* (* 2.0 l_0_8_103) l_0_8_96)) (* (* 2.0 l_0_8_109) l_0_8_116))))
 (let ((?x13276 (- (- ?x13272 (* (* 2.0 l_0_8_110) l_0_8_117)) (* (* 2.0 l_0_8_111) l_0_8_118))))
 (let ((?x13280 (- (- ?x13276 (* (* 2.0 l_0_8_19) l_0_8_26)) (* (* 2.0 l_0_8_20) l_0_8_27))))
 (let ((?x13284 (+ (- ?x13280 (* (* 2.0 l_0_8_21) l_0_8_28)) (* (* 2.0 l_0_8_34) l_0_8_41))))
 (let ((?x13288 (+ (+ ?x13284 (* (* 2.0 l_0_8_35) l_0_8_42)) (* (* 2.0 l_0_8_36) l_0_8_43))))
 (let ((?x13293 (- (- (+ ?x13288 (* (* 6.0 l_0_8_46) l_0_8_49)) ?x12195) (* (* 2.0 l_0_8_49) l_0_8_56))))
 (let ((?x13297 (- (- ?x13293 (* (* 2.0 l_0_8_50) l_0_8_57)) (* (* 2.0 l_0_8_51) l_0_8_58))))
 (let ((?x13302 (+ (+ (- ?x13297 (* (* 6.0 l_0_8_61) l_0_8_64)) ?x12211) (* (* 2.0 l_0_8_64) l_0_8_71))))
 (let ((?x13306 (+ (+ ?x13302 (* (* 2.0 l_0_8_65) l_0_8_72)) (* (* 2.0 l_0_8_66) l_0_8_73))))
 (= ?x13306 0.0))))))))))))))))
(assert
 (let ((?x12900 (* l_0_8_90 l_0_8_90)))
 (let ((?x12898 (* l_0_8_89 l_0_8_89)))
 (let ((?x12896 (* l_0_8_88 l_0_8_88)))
 (let ((?x12894 (* l_0_8_87 l_0_8_87)))
 (let ((?x12892 (* l_0_8_86 l_0_8_86)))
 (let ((?x6718 (* l_0_8_30 l_0_8_30)))
 (let ((?x13338 (* 4.0 ?x6718)))
 (let ((?x11679 (* l_0_8_29 l_0_8_29)))
 (let ((?x13336 (* 4.0 ?x11679)))
 (let ((?x6713 (* l_0_8_28 l_0_8_28)))
 (let ((?x13334 (* 4.0 ?x6713)))
 (let ((?x6704 (* l_0_8_27 l_0_8_27)))
 (let ((?x13332 (* 4.0 ?x6704)))
 (let ((?x6632 (* l_0_8_26 l_0_8_26)))
 (let ((?x2729 (* 4.0 ?x6632)))
 (let ((?x13337 (+ (+ (+ (+ (* (* (- 24.0) l_0_8_16) l_0_8_17) ?x2729) ?x13332) ?x13334) ?x13336)))
 (let ((?x13344 (- (+ (+ ?x13337 ?x13338) (* (* 24.0 l_0_8_31) l_0_8_32)) (* (* 4.0 l_0_8_41) l_0_8_41))))
 (let ((?x13350 (- (- ?x13344 (* (* 4.0 l_0_8_42) l_0_8_42)) (* (* 4.0 l_0_8_43) l_0_8_43))))
 (let ((?x13356 (- (- ?x13350 (* (* 4.0 l_0_8_44) l_0_8_44)) (* (* 4.0 l_0_8_45) l_0_8_45))))
 (let ((?x13360 (+ (- ?x13356 (* (* 12.0 l_0_8_46) l_0_8_47)) (* (* 6.0 l_0_8_47) l_0_8_56))))
 (let ((?x13364 (+ (+ ?x13360 (* (* 6.0 l_0_8_48) l_0_8_57)) (* (* 12.0 l_0_8_61) l_0_8_62))))
 (let ((?x13368 (- (- ?x13364 (* (* 6.0 l_0_8_62) l_0_8_71)) (* (* 6.0 l_0_8_63) l_0_8_72))))
 (= (+ (+ (+ (+ (+ ?x13368 ?x12892) ?x12894) ?x12896) ?x12898) ?x12900) 0.0))))))))))))))))))))))))
(assert
 (let ((?x11661 (* l_0_8_75 l_0_8_75)))
 (let ((?x2163 (* 4.0 ?x11661)))
 (let ((?x11658 (* l_0_8_74 l_0_8_74)))
 (let ((?x8720 (* 4.0 ?x11658)))
 (let ((?x11655 (* l_0_8_73 l_0_8_73)))
 (let ((?x8713 (* 4.0 ?x11655)))
 (let ((?x11652 (* l_0_8_72 l_0_8_72)))
 (let ((?x2147 (* 4.0 ?x11652)))
 (let ((?x11649 (* l_0_8_71 l_0_8_71)))
 (let ((?x12926 (* 4.0 ?x11649)))
 (let ((?x2905 (+ (* (* (- 24.0) l_0_8_16) l_0_8_19) (* (* 24.0 l_0_8_31) l_0_8_34))))
 (let ((?x8997 (+ (- ?x2905 (* (* 12.0 l_0_8_46) l_0_8_49)) (* (* 6.0 l_0_8_49) l_0_8_56))))
 (let ((?x13378 (+ (+ ?x8997 (* (* 6.0 l_0_8_50) l_0_8_57)) (* (* 6.0 l_0_8_51) l_0_8_58))))
 (let ((?x13384 (- (- ?x13378 (* (* 4.0 l_0_8_56) l_0_8_56)) (* (* 4.0 l_0_8_57) l_0_8_57))))
 (let ((?x13390 (- (- ?x13384 (* (* 4.0 l_0_8_58) l_0_8_58)) (* (* 4.0 l_0_8_59) l_0_8_59))))
 (let ((?x13395 (+ (- ?x13390 (* (* 4.0 l_0_8_60) l_0_8_60)) (* (* 12.0 l_0_8_61) l_0_8_64))))
 (let ((?x13399 (- (- ?x13395 (* (* 6.0 l_0_8_64) l_0_8_71)) (* (* 6.0 l_0_8_65) l_0_8_72))))
 (let ((?x13404 (+ (+ (+ (- ?x13399 (* (* 6.0 l_0_8_66) l_0_8_73)) ?x12926) ?x2147) ?x8713)))
 (= (+ (+ ?x13404 ?x8720) ?x2163) 0.0))))))))))))))))))))
(assert
 (let ((?x11796 (* (* 4.0 l_0_8_61) l_0_8_61)))
 (let ((?x11560 (* l_0_8_46 l_0_8_46)))
 (let ((?x11791 (* 4.0 ?x11560)))
 (let ((?x13426 (+ (* (* (- 24.0) l_0_8_16) l_0_8_26) (* (* 24.0 l_0_8_31) l_0_8_41))))
 (let ((?x13431 (+ (+ (- ?x13426 (* (* 12.0 l_0_8_46) l_0_8_56)) ?x11791) (* 3.0 (* l_0_8_56 l_0_8_56)))))
 (let ((?x13435 (+ (+ ?x13431 (* 3.0 (* l_0_8_57 l_0_8_57))) (* 3.0 (* l_0_8_58 l_0_8_58)))))
 (let ((?x13439 (+ (+ ?x13435 (* 3.0 (* l_0_8_59 l_0_8_59))) (* 3.0 (* l_0_8_60 l_0_8_60)))))
 (let ((?x13445 (- (- (+ ?x13439 (* (* 12.0 l_0_8_61) l_0_8_71)) ?x11796) (* (* 3.0 l_0_8_71) l_0_8_71))))
 (let ((?x13451 (- (- ?x13445 (* (* 3.0 l_0_8_72) l_0_8_72)) (* (* 3.0 l_0_8_73) l_0_8_73))))
 (let ((?x13457 (- (- ?x13451 (* (* 3.0 l_0_8_74) l_0_8_74)) (* (* 3.0 l_0_8_75) l_0_8_75))))
 (= ?x13457 0.0))))))))))))
(assert
 (let ((?x13491 (- (* (* (- 12.0) l_0_8_17) l_0_8_17) (* (* 12.0 l_0_8_18) l_0_8_18))))
 (let ((?x13495 (+ (+ ?x13491 (* 12.0 (* l_0_8_32 l_0_8_32))) (* 12.0 (* l_0_8_33 l_0_8_33)))))
 (let ((?x13499 (- (- ?x13495 (* (* 6.0 l_0_8_47) l_0_8_47)) (* (* 6.0 l_0_8_48) l_0_8_48))))
 (let ((?x13503 (+ (+ ?x13499 (* 6.0 (* l_0_8_62 l_0_8_62))) (* 6.0 (* l_0_8_63 l_0_8_63)))))
 (= ?x13503 0.0))))))
(assert
 (let ((?x13522 (- (* (* (- 24.0) l_0_8_17) l_0_8_19) (* (* 24.0 l_0_8_18) l_0_8_20))))
 (let ((?x13528 (+ (+ ?x13522 (* (* 24.0 l_0_8_32) l_0_8_34)) (* (* 24.0 l_0_8_33) l_0_8_35))))
 (let ((?x13534 (- (- ?x13528 (* (* 12.0 l_0_8_47) l_0_8_49)) (* (* 12.0 l_0_8_48) l_0_8_50))))
 (let ((?x13540 (+ (+ ?x13534 (* (* 12.0 l_0_8_62) l_0_8_64)) (* (* 12.0 l_0_8_63) l_0_8_65))))
 (= ?x13540 0.0))))))
(assert
 (let ((?x13560 (- (* (* (- 24.0) l_0_8_17) l_0_8_22) (* (* 24.0 l_0_8_18) l_0_8_23))))
 (let ((?x13571 (+ (+ ?x13560 (* (* 24.0 l_0_8_32) l_0_8_37)) (* (* 24.0 l_0_8_33) l_0_8_38))))
 (let ((?x13575 (- (- ?x13571 (* (* 12.0 l_0_8_47) l_0_8_52)) (* (* 12.0 l_0_8_48) l_0_8_53))))
 (let ((?x13579 (+ (+ ?x13575 (* (* 12.0 l_0_8_62) l_0_8_67)) (* (* 12.0 l_0_8_63) l_0_8_68))))
 (= ?x13579 0.0))))))
(assert
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x11869 (* ?x11868 l_0_8_62)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x11860 (* ?x11859 l_0_8_47)))
 (let ((?x3229 (- (* (* (- 24.0) l_0_8_17) l_0_8_26) (* (* 24.0 l_0_8_18) l_0_8_27))))
 (let ((?x3221 (+ (+ ?x3229 (* (* 24.0 l_0_8_32) l_0_8_41)) (* (* 24.0 l_0_8_33) l_0_8_42))))
 (let ((?x13589 (- (- (+ ?x3221 ?x11860) (* (* 12.0 l_0_8_47) l_0_8_56)) (* (* 12.0 l_0_8_48) l_0_8_57))))
 (let ((?x13594 (+ (+ (- ?x13589 ?x11869) (* (* 12.0 l_0_8_62) l_0_8_71)) (* (* 12.0 l_0_8_63) l_0_8_72))))
 (= ?x13594 0.0))))))))))
(assert
 (let ((?x1337 (* l_0_8_66 l_0_8_66)))
 (let ((?x13648 (* 6.0 ?x1337)))
 (let ((?x1333 (* l_0_8_65 l_0_8_65)))
 (let ((?x13646 (* 6.0 ?x1333)))
 (let ((?x8112 (* l_0_8_64 l_0_8_64)))
 (let ((?x13644 (* 6.0 ?x8112)))
 (let ((?x13213 (* l_0_8_36 l_0_8_36)))
 (let ((?x13636 (* 12.0 ?x13213)))
 (let ((?x13210 (* l_0_8_35 l_0_8_35)))
 (let ((?x13634 (* 12.0 ?x13210)))
 (let ((?x13207 (* l_0_8_34 l_0_8_34)))
 (let ((?x13632 (* 12.0 ?x13207)))
 (let ((?x13628 (- (* (* (- 12.0) l_0_8_19) l_0_8_19) (* (* 12.0 l_0_8_20) l_0_8_20))))
 (let ((?x13637 (+ (+ (+ (- ?x13628 (* (* 12.0 l_0_8_21) l_0_8_21)) ?x13632) ?x13634) ?x13636)))
 (let ((?x13641 (- (- ?x13637 (* (* 6.0 l_0_8_49) l_0_8_49)) (* (* 6.0 l_0_8_50) l_0_8_50))))
 (let ((?x13649 (+ (+ (+ (- ?x13641 (* (* 6.0 l_0_8_51) l_0_8_51)) ?x13644) ?x13646) ?x13648)))
 (= ?x13649 0.0))))))))))))))))))
(assert
 (let ((?x13675 (- (* (* (- 24.0) l_0_8_19) l_0_8_22) (* (* 24.0 l_0_8_20) l_0_8_23))))
 (let ((?x13681 (+ (- ?x13675 (* (* 24.0 l_0_8_21) l_0_8_24)) (* (* 24.0 l_0_8_34) l_0_8_37))))
 (let ((?x13687 (+ (+ ?x13681 (* (* 24.0 l_0_8_35) l_0_8_38)) (* (* 24.0 l_0_8_36) l_0_8_39))))
 (let ((?x13693 (- (- ?x13687 (* (* 12.0 l_0_8_49) l_0_8_52)) (* (* 12.0 l_0_8_50) l_0_8_53))))
 (let ((?x13699 (+ (- ?x13693 (* (* 12.0 l_0_8_51) l_0_8_54)) (* (* 12.0 l_0_8_64) l_0_8_67))))
 (let ((?x13705 (+ (+ ?x13699 (* (* 12.0 l_0_8_65) l_0_8_68)) (* (* 12.0 l_0_8_66) l_0_8_69))))
 (= ?x13705 0.0))))))))
(assert
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x11967 (* ?x11868 l_0_8_64)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x11954 (* ?x11859 l_0_8_49)))
 (let ((?x13725 (- (* (* (- 24.0) l_0_8_19) l_0_8_26) (* (* 24.0 l_0_8_20) l_0_8_27))))
 (let ((?x13739 (+ (- ?x13725 (* (* 24.0 l_0_8_21) l_0_8_28)) (* (* 24.0 l_0_8_34) l_0_8_41))))
 (let ((?x13743 (+ (+ ?x13739 (* (* 24.0 l_0_8_35) l_0_8_42)) (* (* 24.0 l_0_8_36) l_0_8_43))))
 (let ((?x13748 (- (- (+ ?x13743 ?x11954) (* (* 12.0 l_0_8_49) l_0_8_56)) (* (* 12.0 l_0_8_50) l_0_8_57))))
 (let ((?x13753 (+ (- (- ?x13748 (* (* 12.0 l_0_8_51) l_0_8_58)) ?x11967) (* (* 12.0 l_0_8_64) l_0_8_71))))
 (let ((?x13757 (+ (+ ?x13753 (* (* 12.0 l_0_8_65) l_0_8_72)) (* (* 12.0 l_0_8_66) l_0_8_73))))
 (= ?x13757 0.0))))))))))))
(assert
 (let ((?x3381 (- (* (* (- 12.0) l_0_8_22) l_0_8_22) (* (* 12.0 l_0_8_23) l_0_8_23))))
 (let ((?x9352 (- (- ?x3381 (* (* 12.0 l_0_8_24) l_0_8_24)) (* (* 12.0 l_0_8_25) l_0_8_25))))
 (let ((?x9376 (+ (+ ?x9352 (* 12.0 (* l_0_8_37 l_0_8_37))) (* 12.0 (* l_0_8_38 l_0_8_38)))))
 (let ((?x9375 (+ (+ ?x9376 (* 12.0 (* l_0_8_39 l_0_8_39))) (* 12.0 (* l_0_8_40 l_0_8_40)))))
 (let ((?x13775 (- (- ?x9375 (* (* 6.0 l_0_8_52) l_0_8_52)) (* (* 6.0 l_0_8_53) l_0_8_53))))
 (let ((?x13779 (- (- ?x13775 (* (* 6.0 l_0_8_54) l_0_8_54)) (* (* 6.0 l_0_8_55) l_0_8_55))))
 (let ((?x13783 (+ (+ ?x13779 (* 6.0 (* l_0_8_67 l_0_8_67))) (* 6.0 (* l_0_8_68 l_0_8_68)))))
 (let ((?x13787 (+ (+ ?x13783 (* 6.0 (* l_0_8_69 l_0_8_69))) (* 6.0 (* l_0_8_70 l_0_8_70)))))
 (= ?x13787 0.0))))))))))
(assert
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x11969 (* ?x11868 l_0_8_67)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x11956 (* ?x11859 l_0_8_52)))
 (let ((?x13812 (- (* (* (- 24.0) l_0_8_22) l_0_8_26) (* (* 24.0 l_0_8_23) l_0_8_27))))
 (let ((?x13818 (- (- ?x13812 (* (* 24.0 l_0_8_24) l_0_8_28)) (* (* 24.0 l_0_8_25) l_0_8_29))))
 (let ((?x13824 (+ (+ ?x13818 (* (* 24.0 l_0_8_37) l_0_8_41)) (* (* 24.0 l_0_8_38) l_0_8_42))))
 (let ((?x13830 (+ (+ ?x13824 (* (* 24.0 l_0_8_39) l_0_8_43)) (* (* 24.0 l_0_8_40) l_0_8_44))))
 (let ((?x13837 (- (- (+ ?x13830 ?x11956) (* (* 12.0 l_0_8_52) l_0_8_56)) (* (* 12.0 l_0_8_53) l_0_8_57))))
 (let ((?x13843 (- (- ?x13837 (* (* 12.0 l_0_8_54) l_0_8_58)) (* (* 12.0 l_0_8_55) l_0_8_59))))
 (let ((?x13850 (+ (+ (- ?x13843 ?x11969) (* (* 12.0 l_0_8_67) l_0_8_71)) (* (* 12.0 l_0_8_68) l_0_8_72))))
 (let ((?x13856 (+ (+ ?x13850 (* (* 12.0 l_0_8_69) l_0_8_73)) (* (* 12.0 l_0_8_70) l_0_8_74))))
 (= ?x13856 0.0))))))))))))))
(assert
 (let ((?x11868 (* 8.0 l_0_8_61)))
 (let ((?x12211 (* ?x11868 l_0_8_71)))
 (let ((?x11859 (* 8.0 l_0_8_46)))
 (let ((?x12195 (* ?x11859 l_0_8_56)))
 (let ((?x13888 (- (* (* (- 12.0) l_0_8_26) l_0_8_26) (* (* 12.0 l_0_8_27) l_0_8_27))))
 (let ((?x13905 (- (- ?x13888 (* (* 12.0 l_0_8_28) l_0_8_28)) (* (* 12.0 l_0_8_29) l_0_8_29))))
 (let ((?x13910 (+ (- ?x13905 (* (* 12.0 l_0_8_30) l_0_8_30)) (* 12.0 (* l_0_8_41 l_0_8_41)))))
 (let ((?x13914 (+ (+ ?x13910 (* 12.0 (* l_0_8_42 l_0_8_42))) (* 12.0 (* l_0_8_43 l_0_8_43)))))
 (let ((?x13918 (+ (+ ?x13914 (* 12.0 (* l_0_8_44 l_0_8_44))) (* 12.0 (* l_0_8_45 l_0_8_45)))))
 (let ((?x13925 (- (- (+ ?x13918 ?x12195) (* (* 6.0 l_0_8_56) l_0_8_56)) (* (* 6.0 l_0_8_57) l_0_8_57))))
 (let ((?x13931 (- (- ?x13925 (* (* 6.0 l_0_8_58) l_0_8_58)) (* (* 6.0 l_0_8_59) l_0_8_59))))
 (let ((?x13937 (+ (- (- ?x13931 (* (* 6.0 l_0_8_60) l_0_8_60)) ?x12211) (* 6.0 (* l_0_8_71 l_0_8_71)))))
 (let ((?x13941 (+ (+ ?x13937 (* 6.0 (* l_0_8_72 l_0_8_72))) (* 6.0 (* l_0_8_73 l_0_8_73)))))
 (let ((?x13945 (+ (+ ?x13941 (* 6.0 (* l_0_8_74 l_0_8_74))) (* 6.0 (* l_0_8_75 l_0_8_75)))))
 (= ?x13945 0.0))))))))))))))))
(assert
 (let ((?x12296 (* l_0_8_78 l_0_8_78)))
 (let ((?x12291 (* l_0_8_77 l_0_8_77)))
 (let ((?x13034 (* l_0_8_18 l_0_8_18)))
 (let ((?x13978 (* 4.0 ?x13034)))
 (let ((?x2305 (* l_0_8_17 l_0_8_17)))
 (let ((?x3687 (* 4.0 ?x2305)))
 (let ((?x13985 (- (- (+ ?x3687 ?x13978) (* (* 4.0 l_0_8_32) l_0_8_32)) (* (* 4.0 l_0_8_33) l_0_8_33))))
 (= (+ (+ ?x13985 ?x12291) ?x12296) 0.0)))))))))
(assert
 (let ((?x12293 (* 2.0 l_0_8_78)))
 (let ((?x12363 (* ?x12293 l_0_8_80)))
 (let ((?x12288 (* 2.0 l_0_8_77)))
 (let ((?x12361 (* ?x12288 l_0_8_79)))
 (let ((?x7789 (* l_0_8_63 l_0_8_63)))
 (let ((?x7790 (* 4.0 ?x7789)))
 (let ((?x7785 (* l_0_8_62 l_0_8_62)))
 (let ((?x7786 (* 4.0 ?x7785)))
 (let ((?x3694 (+ (* (* 8.0 l_0_8_17) l_0_8_19) (* (* 8.0 l_0_8_18) l_0_8_20))))
 (let ((?x13999 (- (- ?x3694 (* (* 8.0 l_0_8_32) l_0_8_34)) (* (* 8.0 l_0_8_33) l_0_8_35))))
 (let ((?x14005 (- (- ?x13999 (* (* 4.0 l_0_8_47) l_0_8_47)) (* (* 4.0 l_0_8_48) l_0_8_48))))
 (= (+ (+ (+ (+ ?x14005 ?x7786) ?x7790) ?x12361) ?x12363) 0.0)))))))))))))
(assert
 (let ((?x12293 (* 2.0 l_0_8_78)))
 (let ((?x12509 (* ?x12293 l_0_8_87)))
 (let ((?x12288 (* 2.0 l_0_8_77)))
 (let ((?x12507 (* ?x12288 l_0_8_86)))
 (let ((?x12279 (* l_0_8_48 l_0_8_48)))
 (let ((?x14021 (* 3.0 ?x12279)))
 (let ((?x12276 (* l_0_8_47 l_0_8_47)))
 (let ((?x14019 (* 3.0 ?x12276)))
 (let ((?x3739 (+ (* (* 8.0 l_0_8_17) l_0_8_26) (* (* 8.0 l_0_8_18) l_0_8_27))))
 (let ((?x14018 (- (- ?x3739 (* (* 8.0 l_0_8_32) l_0_8_41)) (* (* 8.0 l_0_8_33) l_0_8_42))))
 (let ((?x14028 (- (- (+ (+ ?x14018 ?x14019) ?x14021) (* (* 3.0 l_0_8_62) l_0_8_62)) (* (* 3.0 l_0_8_63) l_0_8_63))))
 (= (+ (+ ?x14028 ?x12507) ?x12509) 0.0)))))))))))))
(assert
 (let ((?x12621 (* l_0_8_81 l_0_8_81)))
 (let ((?x12619 (* l_0_8_80 l_0_8_80)))
 (let ((?x12617 (* l_0_8_79 l_0_8_79)))
 (let ((?x12356 (* 8.0 l_0_8_63)))
 (let ((?x12357 (* ?x12356 l_0_8_65)))
 (let ((?x12351 (* 8.0 l_0_8_62)))
 (let ((?x12352 (* ?x12351 l_0_8_64)))
 (let ((?x12346 (* 8.0 l_0_8_48)))
 (let ((?x12347 (* ?x12346 l_0_8_50)))
 (let ((?x12341 (* 8.0 l_0_8_47)))
 (let ((?x12342 (* ?x12341 l_0_8_49)))
 (let ((?x7182 (* l_0_8_21 l_0_8_21)))
 (let ((?x9664 (* 4.0 ?x7182)))
 (let ((?x13250 (* l_0_8_20 l_0_8_20)))
 (let ((?x3813 (* 4.0 ?x13250)))
 (let ((?x7178 (* l_0_8_19 l_0_8_19)))
 (let ((?x3812 (* 4.0 ?x7178)))
 (let ((?x14056 (- (- (+ (+ ?x3812 ?x3813) ?x9664) (* (* 4.0 l_0_8_34) l_0_8_34)) (* (* 4.0 l_0_8_35) l_0_8_35))))
 (let ((?x14062 (+ (- (- (- ?x14056 (* (* 4.0 l_0_8_36) l_0_8_36)) ?x12342) ?x12347) ?x12352)))
 (= (+ (+ (+ (+ ?x14062 ?x12357) ?x12617) ?x12619) ?x12621) 0.0)))))))))))))))))))))
(assert
 (let ((?x12371 (* 2.0 l_0_8_81)))
 (let ((?x12709 (* ?x12371 l_0_8_88)))
 (let ((?x12368 (* 2.0 l_0_8_80)))
 (let ((?x12707 (* ?x12368 l_0_8_87)))
 (let ((?x12365 (* 2.0 l_0_8_79)))
 (let ((?x12705 (* ?x12365 l_0_8_86)))
 (let ((?x12356 (* 8.0 l_0_8_63)))
 (let ((?x12505 (* ?x12356 l_0_8_72)))
 (let ((?x12351 (* 8.0 l_0_8_62)))
 (let ((?x12500 (* ?x12351 l_0_8_71)))
 (let ((?x12346 (* 8.0 l_0_8_48)))
 (let ((?x12495 (* ?x12346 l_0_8_57)))
 (let ((?x12341 (* 8.0 l_0_8_47)))
 (let ((?x12490 (* ?x12341 l_0_8_56)))
 (let ((?x3846 (+ (* (* 8.0 l_0_8_19) l_0_8_26) (* (* 8.0 l_0_8_20) l_0_8_27))))
 (let ((?x9673 (- (+ ?x3846 (* (* 8.0 l_0_8_21) l_0_8_28)) (* (* 8.0 l_0_8_34) l_0_8_41))))
 (let ((?x3823 (- (- ?x9673 (* (* 8.0 l_0_8_35) l_0_8_42)) (* (* 8.0 l_0_8_36) l_0_8_43))))
 (let ((?x14086 (+ (- (+ ?x3823 (* (* 6.0 l_0_8_47) l_0_8_49)) ?x12490) (* (* 6.0 l_0_8_48) l_0_8_50))))
 (let ((?x14092 (- (+ (- (- ?x14086 ?x12495) (* (* 6.0 l_0_8_62) l_0_8_64)) ?x12500) (* (* 6.0 l_0_8_63) l_0_8_65))))
 (= (+ (+ (+ (+ ?x14092 ?x12505) ?x12705) ?x12707) ?x12709) 0.0)))))))))))))))))))))
(assert
 (let ((?x12286 (* (* 4.0 l_0_8_63) l_0_8_63)))
 (let ((?x12283 (* (* 4.0 l_0_8_62) l_0_8_62)))
 (let ((?x12279 (* l_0_8_48 l_0_8_48)))
 (let ((?x12280 (* 4.0 ?x12279)))
 (let ((?x12276 (* l_0_8_47 l_0_8_47)))
 (let ((?x12277 (* 4.0 ?x12276)))
 (= (- (- (+ ?x12277 ?x12280) ?x12283) ?x12286) 0.0))))))))
(assert
 (let ((?x12356 (* 8.0 l_0_8_63)))
 (let ((?x12357 (* ?x12356 l_0_8_65)))
 (let ((?x12351 (* 8.0 l_0_8_62)))
 (let ((?x12352 (* ?x12351 l_0_8_64)))
 (let ((?x12346 (* 8.0 l_0_8_48)))
 (let ((?x12347 (* ?x12346 l_0_8_50)))
 (let ((?x12341 (* 8.0 l_0_8_47)))
 (let ((?x12342 (* ?x12341 l_0_8_49)))
 (= (- (- (+ ?x12342 ?x12347) ?x12352) ?x12357) 0.0))))))))))
(assert
 (let ((?x12356 (* 8.0 l_0_8_63)))
 (let ((?x12359 (* ?x12356 l_0_8_68)))
 (let ((?x12351 (* 8.0 l_0_8_62)))
 (let ((?x12354 (* ?x12351 l_0_8_67)))
 (let ((?x12346 (* 8.0 l_0_8_48)))
 (let ((?x12349 (* ?x12346 l_0_8_53)))
 (let ((?x12341 (* 8.0 l_0_8_47)))
 (let ((?x12344 (* ?x12341 l_0_8_52)))
 (= (- (- (+ ?x12344 ?x12349) ?x12354) ?x12359) 0.0))))))))))
(assert
 (let ((?x12356 (* 8.0 l_0_8_63)))
 (let ((?x12505 (* ?x12356 l_0_8_72)))
 (let ((?x12351 (* 8.0 l_0_8_62)))
 (let ((?x12500 (* ?x12351 l_0_8_71)))
 (let ((?x12346 (* 8.0 l_0_8_48)))
 (let ((?x12495 (* ?x12346 l_0_8_57)))
 (let ((?x12341 (* 8.0 l_0_8_47)))
 (let ((?x12490 (* ?x12341 l_0_8_56)))
 (= (- (- (+ ?x12490 ?x12495) ?x12500) ?x12505) 0.0))))))))))
(assert
 (let ((?x12615 (* (* 4.0 l_0_8_66) l_0_8_66)))
 (let ((?x12609 (* (* 4.0 l_0_8_65) l_0_8_65)))
 (let ((?x12603 (* (* 4.0 l_0_8_64) l_0_8_64)))
 (let ((?x12594 (* l_0_8_51 l_0_8_51)))
 (let ((?x12595 (* 4.0 ?x12594)))
 (let ((?x12588 (* l_0_8_50 l_0_8_50)))
 (let ((?x12589 (* 4.0 ?x12588)))
 (let ((?x12580 (* l_0_8_49 l_0_8_49)))
 (let ((?x12581 (* 4.0 ?x12580)))
 (= (- (- (- (+ (+ ?x12581 ?x12589) ?x12595) ?x12603) ?x12609) ?x12615) 0.0)))))))))))
(assert
 (let ((?x12611 (* 8.0 l_0_8_66)))
 (let ((?x12612 (* ?x12611 l_0_8_69)))
 (let ((?x12605 (* 8.0 l_0_8_65)))
 (let ((?x12606 (* ?x12605 l_0_8_68)))
 (let ((?x12599 (* 8.0 l_0_8_64)))
 (let ((?x12600 (* ?x12599 l_0_8_67)))
 (let ((?x12591 (* 8.0 l_0_8_51)))
 (let ((?x12592 (* ?x12591 l_0_8_54)))
 (let ((?x12585 (* 8.0 l_0_8_50)))
 (let ((?x12586 (* ?x12585 l_0_8_53)))
 (let ((?x12577 (* 8.0 l_0_8_49)))
 (let ((?x12578 (* ?x12577 l_0_8_52)))
 (= (- (- (- (+ (+ ?x12578 ?x12586) ?x12592) ?x12600) ?x12606) ?x12612) 0.0))))))))))))))
(assert
 (let ((?x12611 (* 8.0 l_0_8_66)))
 (let ((?x1357 (* ?x12611 l_0_8_73)))
 (let ((?x12605 (* 8.0 l_0_8_65)))
 (let ((?x1430 (* ?x12605 l_0_8_72)))
 (let ((?x12599 (* 8.0 l_0_8_64)))
 (let ((?x1463 (* ?x12599 l_0_8_71)))
 (let ((?x12591 (* 8.0 l_0_8_51)))
 (let ((?x1518 (* ?x12591 l_0_8_58)))
 (let ((?x12585 (* 8.0 l_0_8_50)))
 (let ((?x8220 (* ?x12585 l_0_8_57)))
 (let ((?x12577 (* 8.0 l_0_8_49)))
 (let ((?x8233 (* ?x12577 l_0_8_56)))
 (= (- (- (- (+ (+ ?x8233 ?x8220) ?x1518) ?x1463) ?x1430) ?x1357) 0.0))))))))))))))
(assert
 (let ((?x12766 (* (* 4.0 l_0_8_70) l_0_8_70)))
 (let ((?x12761 (* (* 4.0 l_0_8_69) l_0_8_69)))
 (let ((?x12758 (* (* 4.0 l_0_8_68) l_0_8_68)))
 (let ((?x12755 (* (* 4.0 l_0_8_67) l_0_8_67)))
 (let ((?x7458 (* l_0_8_55 l_0_8_55)))
 (let ((?x1426 (* 4.0 ?x7458)))
 (let ((?x7453 (* l_0_8_54 l_0_8_54)))
 (let ((?x8117 (* 4.0 ?x7453)))
 (let ((?x7448 (* l_0_8_53 l_0_8_53)))
 (let ((?x8105 (* 4.0 ?x7448)))
 (let ((?x7446 (* l_0_8_52 l_0_8_52)))
 (let ((?x1356 (* 4.0 ?x7446)))
 (let ((?x14175 (- (- (- (- (+ (+ (+ ?x1356 ?x8105) ?x8117) ?x1426) ?x12755) ?x12758) ?x12761) ?x12766)))
 (= ?x14175 0.0)))))))))))))))
(assert
 (let ((?x12703 (* (* 8.0 l_0_8_70) l_0_8_74)))
 (let ((?x12700 (* (* 8.0 l_0_8_69) l_0_8_73)))
 (let ((?x12697 (* (* 8.0 l_0_8_68) l_0_8_72)))
 (let ((?x1359 (* (* 8.0 l_0_8_67) l_0_8_71)))
 (let ((?x8167 (* (* 8.0 l_0_8_55) l_0_8_59)))
 (let ((?x1464 (* (* 8.0 l_0_8_54) l_0_8_58)))
 (let ((?x1472 (* (* 8.0 l_0_8_53) l_0_8_57)))
 (let ((?x1505 (* (* 8.0 l_0_8_52) l_0_8_56)))
 (let ((?x14185 (- (- (- (- (+ (+ (+ ?x1505 ?x1472) ?x1464) ?x8167) ?x1359) ?x12697) ?x12700) ?x12703)))
 (= ?x14185 0.0)))))))))))
(assert
 (let ((?x12890 (* (* 4.0 l_0_8_75) l_0_8_75)))
 (let ((?x12887 (* (* 4.0 l_0_8_74) l_0_8_74)))
 (let ((?x12884 (* (* 4.0 l_0_8_73) l_0_8_73)))
 (let ((?x12881 (* (* 4.0 l_0_8_72) l_0_8_72)))
 (let ((?x12878 (* (* 4.0 l_0_8_71) l_0_8_71)))
 (let ((?x11692 (* l_0_8_60 l_0_8_60)))
 (let ((?x12860 (* 4.0 ?x11692)))
 (let ((?x6745 (* l_0_8_59 l_0_8_59)))
 (let ((?x12858 (* 4.0 ?x6745)))
 (let ((?x6740 (* l_0_8_58 l_0_8_58)))
 (let ((?x12856 (* 4.0 ?x6740)))
 (let ((?x6733 (* l_0_8_57 l_0_8_57)))
 (let ((?x12854 (* 4.0 ?x6733)))
 (let ((?x11687 (* l_0_8_56 l_0_8_56)))
 (let ((?x12852 (* 4.0 ?x11687)))
 (let ((?x14203 (- (- (- (+ (+ (+ (+ ?x12852 ?x12854) ?x12856) ?x12858) ?x12860) ?x12878) ?x12881) ?x12884)))
 (= (- (- ?x14203 ?x12887) ?x12890) 0.0))))))))))))))))))
(assert
 (let ((?x12611 (* 8.0 l_0_8_66)))
 (let ((?x1357 (* ?x12611 l_0_8_73)))
 (let ((?x12605 (* 8.0 l_0_8_65)))
 (let ((?x1430 (* ?x12605 l_0_8_72)))
 (let ((?x12599 (* 8.0 l_0_8_64)))
 (let ((?x1463 (* ?x12599 l_0_8_71)))
 (let ((?x12591 (* 8.0 l_0_8_51)))
 (let ((?x1518 (* ?x12591 l_0_8_58)))
 (let ((?x12585 (* 8.0 l_0_8_50)))
 (let ((?x8220 (* ?x12585 l_0_8_57)))
 (let ((?x14207 (+ (* (* (- 8.0) l_0_8_49) l_0_8_56) (* 3.0 (* l_0_8_49 l_0_8_49)))))
 (let ((?x14213 (+ (- (+ (- ?x14207 ?x8220) (* 3.0 (* l_0_8_50 l_0_8_50))) ?x1518) (* 3.0 (* l_0_8_51 l_0_8_51)))))
 (let ((?x14221 (- (+ (- (+ ?x14213 ?x1463) (* (* 3.0 l_0_8_64) l_0_8_64)) ?x1430) (* (* 3.0 l_0_8_65) l_0_8_65))))
 (= (- (+ ?x14221 ?x1357) (* (* 3.0 l_0_8_66) l_0_8_66)) 0.0)))))))))))))))
(assert
 (let ((?x1337 (* l_0_8_66 l_0_8_66)))
 (let ((?x12636 (* 4.0 ?x1337)))
 (let ((?x1333 (* l_0_8_65 l_0_8_65)))
 (let ((?x8059 (* 4.0 ?x1333)))
 (let ((?x8112 (* l_0_8_64 l_0_8_64)))
 (let ((?x1205 (* 4.0 ?x8112)))
 (let ((?x14257 (- (* (* (- 4.0) l_0_8_49) l_0_8_49) (* (* 4.0 l_0_8_50) l_0_8_50))))
 (let ((?x14263 (+ (+ (+ (- ?x14257 (* (* 4.0 l_0_8_51) l_0_8_51)) ?x1205) ?x8059) ?x12636)))
 (= ?x14263 0.0))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (let ((?x14330 (* l_0_9_135 l_0_9_135)))
 (let ((?x14328 (* l_0_9_134 l_0_9_134)))
 (let ((?x14326 (* l_0_9_133 l_0_9_133)))
 (let ((?x14324 (* l_0_9_132 l_0_9_132)))
 (let ((?x14322 (* l_0_9_131 l_0_9_131)))
 (let ((?x14320 (* l_0_9_120 l_0_9_120)))
 (let ((?x14318 (* l_0_9_119 l_0_9_119)))
 (let ((?x14316 (* l_0_9_118 l_0_9_118)))
 (let ((?x14314 (* l_0_9_117 l_0_9_117)))
 (let ((?x14312 (* l_0_9_116 l_0_9_116)))
 (let ((?x14310 (* l_0_9_105 l_0_9_105)))
 (let ((?x14308 (* l_0_9_104 l_0_9_104)))
 (let ((?x14306 (* l_0_9_103 l_0_9_103)))
 (let ((?x14307 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x14306)))
 (let ((?x14321 (- (- (- (- (- (- (- ?x14307 ?x14308) ?x14310) ?x14312) ?x14314) ?x14316) ?x14318) ?x14320)))
 (let ((?x14334 (- (- (- (- (- (- ?x14321 ?x14322) ?x14324) ?x14326) ?x14328) ?x14330) (* (* 12.0 l_0_9_16) l_0_9_16))))
 (let ((?x14340 (- (- ?x14334 (* (* 1.0 l_0_9_26) l_0_9_26)) (* (* 1.0 l_0_9_27) l_0_9_27))))
 (let ((?x14346 (- (- ?x14340 (* (* 1.0 l_0_9_28) l_0_9_28)) (* (* 1.0 l_0_9_29) l_0_9_29))))
 (let ((?x14352 (+ (- ?x14346 (* (* 1.0 l_0_9_30) l_0_9_30)) (* 12.0 (* l_0_9_31 l_0_9_31)))))
 (let ((?x14358 (+ (+ ?x14352 (* 1.0 (* l_0_9_41 l_0_9_41))) (* 1.0 (* l_0_9_42 l_0_9_42)))))
 (let ((?x14364 (+ (+ ?x14358 (* 1.0 (* l_0_9_43 l_0_9_43))) (* 1.0 (* l_0_9_44 l_0_9_44)))))
 (let ((?x14370 (+ (+ ?x14364 (* 1.0 (* l_0_9_45 l_0_9_45))) (* (* 6.0 l_0_9_46) l_0_9_56))))
 (let ((?x14375 (- (- ?x14370 (* (* 6.0 l_0_9_46) l_0_9_46)) (* (* 1.0 l_0_9_56) l_0_9_56))))
 (let ((?x14381 (- (- ?x14375 (* (* 1.0 l_0_9_57) l_0_9_57)) (* (* 1.0 l_0_9_58) l_0_9_58))))
 (let ((?x14387 (- (- ?x14381 (* (* 1.0 l_0_9_59) l_0_9_59)) (* (* 1.0 l_0_9_60) l_0_9_60))))
 (let ((?x14393 (+ (- ?x14387 (* (* 6.0 l_0_9_61) l_0_9_71)) (* 6.0 (* l_0_9_61 l_0_9_61)))))
 (let ((?x14399 (+ (+ ?x14393 (* 1.0 (* l_0_9_71 l_0_9_71))) (* 1.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x14405 (+ (+ ?x14399 (* 1.0 (* l_0_9_73 l_0_9_73))) (* 1.0 (* l_0_9_74 l_0_9_74)))))
 (= (- (+ ?x14405 (* 1.0 (* l_0_9_75 l_0_9_75))) 12.0) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x14439 (* l_0_9_46 l_0_9_46)))
 (let ((?x14497 (* 3.0 ?x14439)))
 (let ((?x14484 (- (- (* 4.0 _a_5_) (* (* 2.0 l_0_9_101) l_0_9_91)) (* (* 2.0 l_0_9_106) l_0_9_116))))
 (let ((?x14490 (- (- ?x14484 (* (* 2.0 l_0_9_121) l_0_9_131)) (* (* 2.0 l_0_9_16) l_0_9_26))))
 (let ((?x14496 (- (+ ?x14490 (* (* 2.0 l_0_9_31) l_0_9_41)) (* (* 2.0 l_0_9_46) l_0_9_56))))
 (let ((?x14504 (- (+ (+ ?x14496 ?x14497) (* (* 2.0 l_0_9_61) l_0_9_71)) (* (* 3.0 l_0_9_61) l_0_9_61))))
 (= (- ?x14504 24.0) 0.0))))))))
(assert
 (let ((?x14535 (* l_0_9_91 l_0_9_91)))
 (let ((?x14523 (* l_0_9_121 l_0_9_121)))
 (let ((?x14527 (- (- (- (* 4.0 _a_3_) (* l_0_9_106 l_0_9_106)) ?x14523) (* (* 1.0 l_0_9_16) l_0_9_16))))
 (let ((?x14532 (- (+ ?x14527 (* 1.0 (* l_0_9_31 l_0_9_31))) (* (* 1.0 l_0_9_46) l_0_9_46))))
 (= (- (- (+ ?x14532 (* 1.0 (* l_0_9_61 l_0_9_61))) ?x14535) 13.0) 0.0))))))
(assert
 (let ((?x14573 (* l_0_9_76 l_0_9_76)))
 (let ((?x4398 (* l_0_9_16 l_0_9_16)))
 (let ((?x14562 (* 4.0 ?x4398)))
 (let ((?x14559 (- (- (* 4.0 _a_4_) (* (* 2.0 l_0_9_106) l_0_9_107)) (* (* 2.0 l_0_9_121) l_0_9_122))))
 (let ((?x14565 (+ (+ (- ?x14559 (* (* 2.0 l_0_9_16) l_0_9_17)) ?x14562) (* (* 2.0 l_0_9_31) l_0_9_32))))
 (let ((?x14570 (- (- ?x14565 (* (* 4.0 l_0_9_31) l_0_9_31)) (* (* 2.0 l_0_9_46) l_0_9_47))))
 (let ((?x14577 (- (+ (+ ?x14570 (* (* 2.0 l_0_9_61) l_0_9_62)) ?x14573) (* (* 2.0 l_0_9_91) l_0_9_92))))
 (= ?x14577 0.0)))))))))
(assert
 (let ((?x14573 (* l_0_9_76 l_0_9_76)))
 (let ((?x14618 (* (* 4.0 l_0_9_61) l_0_9_61)))
 (let ((?x14439 (* l_0_9_46 l_0_9_46)))
 (let ((?x14613 (* 4.0 ?x14439)))
 (let ((?x14606 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_106) l_0_9_112)) (* (* 2.0 l_0_9_121) l_0_9_127))))
 (let ((?x14610 (+ (- ?x14606 (* (* 2.0 l_0_9_16) l_0_9_22)) (* (* 2.0 l_0_9_31) l_0_9_37))))
 (let ((?x14616 (+ (+ (- ?x14610 (* (* 2.0 l_0_9_46) l_0_9_52)) ?x14613) (* (* 2.0 l_0_9_61) l_0_9_67))))
 (= (- (- (- ?x14616 ?x14618) ?x14573) (* (* 2.0 l_0_9_91) l_0_9_97)) 0.0)))))))))
(assert
 (let ((?x14698 (* 2.0 l_0_9_76)))
 (let ((?x14701 (* ?x14698 l_0_9_82)))
 (let ((?x14699 (* ?x14698 l_0_9_77)))
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x14690 (* ?x14689 l_0_9_62)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x14681 (* ?x14680 l_0_9_47)))
 (let ((?x14652 (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_107) l_0_9_112))))
 (let ((?x14658 (- (- ?x14652 (* (* 2.0 l_0_9_108) l_0_9_113)) (* (* 2.0 l_0_9_122) l_0_9_127))))
 (let ((?x14664 (+ (- ?x14658 (* (* 2.0 l_0_9_123) l_0_9_128)) (* (* 8.0 l_0_9_16) l_0_9_22))))
 (let ((?x14670 (- (- ?x14664 (* (* 2.0 l_0_9_17) l_0_9_22)) (* (* 2.0 l_0_9_18) l_0_9_23))))
 (let ((?x14676 (+ (- ?x14670 (* (* 8.0 l_0_9_31) l_0_9_37)) (* (* 2.0 l_0_9_32) l_0_9_37))))
 (let ((?x14685 (- (+ (+ ?x14676 (* (* 2.0 l_0_9_33) l_0_9_38)) ?x14681) (* (* 2.0 l_0_9_47) l_0_9_52))))
 (let ((?x14694 (+ (- (- ?x14685 (* (* 2.0 l_0_9_48) l_0_9_53)) ?x14690) (* (* 2.0 l_0_9_62) l_0_9_67))))
 (let ((?x14705 (- (+ (- (+ ?x14694 (* (* 2.0 l_0_9_63) l_0_9_68)) ?x14699) ?x14701) (* (* 2.0 l_0_9_92) l_0_9_97))))
 (= (- ?x14705 (* (* 2.0 l_0_9_93) l_0_9_98)) 0.0)))))))))))))))))
(assert
 (let ((?x14698 (* 2.0 l_0_9_76)))
 (let ((?x14799 (* ?x14698 l_0_9_79)))
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x14788 (* ?x14689 l_0_9_67)))
 (let ((?x14786 (* ?x14689 l_0_9_64)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x14775 (* ?x14680 l_0_9_52)))
 (let ((?x14773 (* ?x14680 l_0_9_49)))
 (let ((?x4879 (- (* (* (- 2.0) l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_109) l_0_9_112))))
 (let ((?x14745 (- (- ?x4879 (* (* 2.0 l_0_9_110) l_0_9_113)) (* (* 2.0 l_0_9_111) l_0_9_114))))
 (let ((?x14751 (- (- ?x14745 (* (* 2.0 l_0_9_124) l_0_9_127)) (* (* 2.0 l_0_9_125) l_0_9_128))))
 (let ((?x14757 (- (- ?x14751 (* (* 2.0 l_0_9_126) l_0_9_129)) (* (* 2.0 l_0_9_19) l_0_9_22))))
 (let ((?x14763 (- (- ?x14757 (* (* 2.0 l_0_9_20) l_0_9_23)) (* (* 2.0 l_0_9_21) l_0_9_24))))
 (let ((?x14769 (+ (+ ?x14763 (* (* 2.0 l_0_9_34) l_0_9_37)) (* (* 2.0 l_0_9_35) l_0_9_38))))
 (let ((?x14779 (- (- (+ (+ ?x14769 (* (* 2.0 l_0_9_36) l_0_9_39)) ?x14773) ?x14775) (* (* 2.0 l_0_9_49) l_0_9_52))))
 (let ((?x14785 (- (- ?x14779 (* (* 2.0 l_0_9_50) l_0_9_53)) (* (* 2.0 l_0_9_51) l_0_9_54))))
 (let ((?x14795 (+ (+ (+ (- ?x14785 ?x14786) ?x14788) (* (* 2.0 l_0_9_64) l_0_9_67)) (* (* 2.0 l_0_9_65) l_0_9_68))))
 (let ((?x14803 (- (- (+ ?x14795 (* (* 2.0 l_0_9_66) l_0_9_69)) ?x14799) (* (* 2.0 l_0_9_94) l_0_9_97))))
 (let ((?x14809 (- (- ?x14803 (* (* 2.0 l_0_9_95) l_0_9_98)) (* (* 2.0 l_0_9_96) l_0_9_99))))
 (= ?x14809 0.0)))))))))))))))))))))
(assert
 (let ((?x14932 (* l_0_9_99 l_0_9_99)))
 (let ((?x14930 (* l_0_9_98 l_0_9_98)))
 (let ((?x14928 (* l_0_9_97 l_0_9_97)))
 (let ((?x14698 (* 2.0 l_0_9_76)))
 (let ((?x14701 (* ?x14698 l_0_9_82)))
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x14788 (* ?x14689 l_0_9_67)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x14775 (* ?x14680 l_0_9_52)))
 (let ((?x14875 (* l_0_9_130 l_0_9_130)))
 (let ((?x14873 (* l_0_9_129 l_0_9_129)))
 (let ((?x14871 (* l_0_9_128 l_0_9_128)))
 (let ((?x14869 (* l_0_9_127 l_0_9_127)))
 (let ((?x14867 (* l_0_9_115 l_0_9_115)))
 (let ((?x14865 (* l_0_9_114 l_0_9_114)))
 (let ((?x14863 (* l_0_9_113 l_0_9_113)))
 (let ((?x14861 (* l_0_9_112 l_0_9_112)))
 (let ((?x14862 (- (- (* (* (- 2.0) l_0_9_1) l_0_9_7) (* l_0_9_100 l_0_9_100)) ?x14861)))
 (let ((?x14876 (- (- (- (- (- (- (- ?x14862 ?x14863) ?x14865) ?x14867) ?x14869) ?x14871) ?x14873) ?x14875)))
 (let ((?x14882 (- (- ?x14876 (* (* 1.0 l_0_9_22) l_0_9_22)) (* (* 1.0 l_0_9_23) l_0_9_23))))
 (let ((?x14888 (- (- ?x14882 (* (* 1.0 l_0_9_24) l_0_9_24)) (* (* 1.0 l_0_9_25) l_0_9_25))))
 (let ((?x14894 (+ (+ ?x14888 (* 1.0 (* l_0_9_37 l_0_9_37))) (* 1.0 (* l_0_9_38 l_0_9_38)))))
 (let ((?x14900 (+ (+ ?x14894 (* 1.0 (* l_0_9_39 l_0_9_39))) (* 1.0 (* l_0_9_40 l_0_9_40)))))
 (let ((?x14907 (- (- (+ ?x14900 ?x14775) (* (* 1.0 l_0_9_52) l_0_9_52)) (* (* 1.0 l_0_9_53) l_0_9_53))))
 (let ((?x14913 (- (- ?x14907 (* (* 1.0 l_0_9_54) l_0_9_54)) (* (* 1.0 l_0_9_55) l_0_9_55))))
 (let ((?x14920 (+ (+ (- ?x14913 ?x14788) (* 1.0 (* l_0_9_67 l_0_9_67))) (* 1.0 (* l_0_9_68 l_0_9_68)))))
 (let ((?x14926 (+ (+ ?x14920 (* 1.0 (* l_0_9_69 l_0_9_69))) (* 1.0 (* l_0_9_70 l_0_9_70)))))
 (= (- (- (- (- ?x14926 ?x14701) ?x14928) ?x14930) ?x14932) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x14698 (* 2.0 l_0_9_76)))
 (let ((?x15066 (* ?x14698 l_0_9_86)))
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x15052 (* ?x14689 l_0_9_71)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x15036 (* ?x14680 l_0_9_56)))
 (let ((?x14977 (- (* (* (- 2.0) l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_100) l_0_9_104))))
 (let ((?x14982 (- (- ?x14977 (* (* 2.0 l_0_9_101) l_0_9_97)) (* (* 2.0 l_0_9_102) l_0_9_98))))
 (let ((?x14988 (- (- ?x14982 (* (* 2.0 l_0_9_103) l_0_9_99)) (* (* 2.0 l_0_9_112) l_0_9_116))))
 (let ((?x14994 (- (- ?x14988 (* (* 2.0 l_0_9_113) l_0_9_117)) (* (* 2.0 l_0_9_114) l_0_9_118))))
 (let ((?x15000 (- (- ?x14994 (* (* 2.0 l_0_9_115) l_0_9_119)) (* (* 2.0 l_0_9_127) l_0_9_131))))
 (let ((?x15006 (- (- ?x15000 (* (* 2.0 l_0_9_128) l_0_9_132)) (* (* 2.0 l_0_9_129) l_0_9_133))))
 (let ((?x15012 (- (- ?x15006 (* (* 2.0 l_0_9_130) l_0_9_134)) (* (* 2.0 l_0_9_22) l_0_9_26))))
 (let ((?x15018 (- (- ?x15012 (* (* 2.0 l_0_9_23) l_0_9_27)) (* (* 2.0 l_0_9_24) l_0_9_28))))
 (let ((?x15024 (+ (- ?x15018 (* (* 2.0 l_0_9_25) l_0_9_29)) (* (* 2.0 l_0_9_37) l_0_9_41))))
 (let ((?x15030 (+ (+ ?x15024 (* (* 2.0 l_0_9_38) l_0_9_42)) (* (* 2.0 l_0_9_39) l_0_9_43))))
 (let ((?x15035 (+ (+ ?x15030 (* (* 2.0 l_0_9_40) l_0_9_44)) (* (* 6.0 l_0_9_46) l_0_9_52))))
 (let ((?x15043 (- (- (+ ?x15035 ?x15036) (* (* 2.0 l_0_9_52) l_0_9_56)) (* (* 2.0 l_0_9_53) l_0_9_57))))
 (let ((?x15049 (- (- ?x15043 (* (* 2.0 l_0_9_54) l_0_9_58)) (* (* 2.0 l_0_9_55) l_0_9_59))))
 (let ((?x15056 (+ (- (- ?x15049 (* (* 6.0 l_0_9_61) l_0_9_67)) ?x15052) (* (* 2.0 l_0_9_67) l_0_9_71))))
 (let ((?x15062 (+ (+ ?x15056 (* (* 2.0 l_0_9_68) l_0_9_72)) (* (* 2.0 l_0_9_69) l_0_9_73))))
 (= (- (+ ?x15062 (* (* 2.0 l_0_9_70) l_0_9_74)) ?x15066) 0.0)))))))))))))))))))))))
(assert
 (let ((?x15173 (* l_0_9_78 l_0_9_78)))
 (let ((?x15170 (* 2.0 l_0_9_78)))
 (let ((?x15171 (* ?x15170 l_0_9_83)))
 (let ((?x15168 (* l_0_9_77 l_0_9_77)))
 (let ((?x15165 (* 2.0 l_0_9_77)))
 (let ((?x15166 (* ?x15165 l_0_9_82)))
 (let ((?x15163 (* (* 4.0 l_0_9_63) l_0_9_63)))
 (let ((?x15160 (* (* 4.0 l_0_9_62) l_0_9_62)))
 (let ((?x15156 (* l_0_9_48 l_0_9_48)))
 (let ((?x15157 (* 4.0 ?x15156)))
 (let ((?x15153 (* l_0_9_47 l_0_9_47)))
 (let ((?x15154 (* 4.0 ?x15153)))
 (let ((?x15145 (* l_0_9_3 l_0_9_3)))
 (let ((?x15143 (* l_0_9_2 l_0_9_2)))
 (let ((?x15142 (+ (* (* 8.0 l_0_9_17) l_0_9_22) (* (* 8.0 l_0_9_18) l_0_9_23))))
 (let ((?x15152 (- (- (- (- ?x15142 ?x15143) ?x15145) (* (* 8.0 l_0_9_32) l_0_9_37)) (* (* 8.0 l_0_9_33) l_0_9_38))))
 (let ((?x15172 (+ (- (+ (- (- (+ (+ ?x15152 ?x15154) ?x15157) ?x15160) ?x15163) ?x15166) ?x15168) ?x15171)))
 (= (- ?x15172 ?x15173) 0.0)))))))))))))))))))
(assert
 (let ((?x15262 (* 2.0 l_0_9_81)))
 (let ((?x15263 (* ?x15262 l_0_9_84)))
 (let ((?x15259 (* 2.0 l_0_9_80)))
 (let ((?x15260 (* ?x15259 l_0_9_83)))
 (let ((?x15256 (* 2.0 l_0_9_79)))
 (let ((?x15257 (* ?x15256 l_0_9_82)))
 (let ((?x15170 (* 2.0 l_0_9_78)))
 (let ((?x15254 (* ?x15170 l_0_9_80)))
 (let ((?x15165 (* 2.0 l_0_9_77)))
 (let ((?x15252 (* ?x15165 l_0_9_79)))
 (let ((?x15247 (* 8.0 l_0_9_63)))
 (let ((?x15250 (* ?x15247 l_0_9_68)))
 (let ((?x15248 (* ?x15247 l_0_9_65)))
 (let ((?x15242 (* 8.0 l_0_9_62)))
 (let ((?x15245 (* ?x15242 l_0_9_67)))
 (let ((?x15243 (* ?x15242 l_0_9_64)))
 (let ((?x15237 (* 8.0 l_0_9_48)))
 (let ((?x15240 (* ?x15237 l_0_9_53)))
 (let ((?x15238 (* ?x15237 l_0_9_50)))
 (let ((?x15232 (* 8.0 l_0_9_47)))
 (let ((?x15235 (* ?x15232 l_0_9_52)))
 (let ((?x15233 (* ?x15232 l_0_9_49)))
 (let ((?x15213 (- (* (* 8.0 l_0_9_19) l_0_9_22) (* (* 2.0 l_0_9_2) l_0_9_4))))
 (let ((?x15219 (+ (+ ?x15213 (* (* 8.0 l_0_9_20) l_0_9_23)) (* (* 8.0 l_0_9_21) l_0_9_24))))
 (let ((?x15225 (- (- ?x15219 (* (* 2.0 l_0_9_3) l_0_9_5)) (* (* 8.0 l_0_9_34) l_0_9_37))))
 (let ((?x15231 (- (- ?x15225 (* (* 8.0 l_0_9_35) l_0_9_38)) (* (* 8.0 l_0_9_36) l_0_9_39))))
 (let ((?x15249 (- (+ (- (- (+ (- (+ ?x15231 ?x15233) ?x15235) ?x15238) ?x15240) ?x15243) ?x15245) ?x15248)))
 (= (+ (+ (+ (- (- (+ ?x15249 ?x15250) ?x15252) ?x15254) ?x15257) ?x15260) ?x15263) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x15312 (* l_0_9_85 l_0_9_85)))
 (let ((?x15310 (* l_0_9_84 l_0_9_84)))
 (let ((?x15308 (* l_0_9_83 l_0_9_83)))
 (let ((?x15306 (* l_0_9_82 l_0_9_82)))
 (let ((?x15170 (* 2.0 l_0_9_78)))
 (let ((?x15171 (* ?x15170 l_0_9_83)))
 (let ((?x15165 (* 2.0 l_0_9_77)))
 (let ((?x15166 (* ?x15165 l_0_9_82)))
 (let ((?x15247 (* 8.0 l_0_9_63)))
 (let ((?x15250 (* ?x15247 l_0_9_68)))
 (let ((?x15242 (* 8.0 l_0_9_62)))
 (let ((?x15245 (* ?x15242 l_0_9_67)))
 (let ((?x15237 (* 8.0 l_0_9_48)))
 (let ((?x15240 (* ?x15237 l_0_9_53)))
 (let ((?x15232 (* 8.0 l_0_9_47)))
 (let ((?x15235 (* ?x15232 l_0_9_52)))
 (let ((?x14960 (* l_0_9_25 l_0_9_25)))
 (let ((?x15284 (* 4.0 ?x14960)))
 (let ((?x2976 (* l_0_9_24 l_0_9_24)))
 (let ((?x15282 (* 4.0 ?x2976)))
 (let ((?x14955 (* l_0_9_23 l_0_9_23)))
 (let ((?x15280 (* 4.0 ?x14955)))
 (let ((?x5007 (* l_0_9_22 l_0_9_22)))
 (let ((?x15278 (* 4.0 ?x5007)))
 (let ((?x15285 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_2) l_0_9_7) ?x15278) ?x15280) ?x15282) ?x15284)))
 (let ((?x15290 (- (- ?x15285 (* (* 2.0 l_0_9_3) l_0_9_8)) (* (* 4.0 l_0_9_37) l_0_9_37))))
 (let ((?x15296 (- (- ?x15290 (* (* 4.0 l_0_9_38) l_0_9_38)) (* (* 4.0 l_0_9_39) l_0_9_39))))
 (let ((?x15302 (- (+ (+ (- ?x15296 (* (* 4.0 l_0_9_40) l_0_9_40)) ?x15235) ?x15240) ?x15245)))
 (let ((?x15313 (+ (+ (+ (+ (- (- (- ?x15302 ?x15250) ?x15166) ?x15171) ?x15306) ?x15308) ?x15310) ?x15312)))
 (= ?x15313 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x15367 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x15364 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x15361 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x15358 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x15170 (* 2.0 l_0_9_78)))
 (let ((?x15355 (* ?x15170 l_0_9_87)))
 (let ((?x15165 (* 2.0 l_0_9_77)))
 (let ((?x15353 (* ?x15165 l_0_9_86)))
 (let ((?x15247 (* 8.0 l_0_9_63)))
 (let ((?x15351 (* ?x15247 l_0_9_72)))
 (let ((?x15242 (* 8.0 l_0_9_62)))
 (let ((?x15346 (* ?x15242 l_0_9_71)))
 (let ((?x15237 (* 8.0 l_0_9_48)))
 (let ((?x15341 (* ?x15237 l_0_9_57)))
 (let ((?x15232 (* 8.0 l_0_9_47)))
 (let ((?x15336 (* ?x15232 l_0_9_56)))
 (let ((?x10924 (- (* (* (- 2.0) l_0_9_11) l_0_9_2) (* (* 2.0 l_0_9_12) l_0_9_3))))
 (let ((?x5738 (+ (+ ?x10924 (* (* 8.0 l_0_9_22) l_0_9_26)) (* (* 8.0 l_0_9_23) l_0_9_27))))
 (let ((?x15320 (+ (+ ?x5738 (* (* 8.0 l_0_9_24) l_0_9_28)) (* (* 8.0 l_0_9_25) l_0_9_29))))
 (let ((?x15326 (- (- ?x15320 (* (* 8.0 l_0_9_37) l_0_9_41)) (* (* 8.0 l_0_9_38) l_0_9_42))))
 (let ((?x15332 (- (- ?x15326 (* (* 8.0 l_0_9_39) l_0_9_43)) (* (* 8.0 l_0_9_40) l_0_9_44))))
 (let ((?x15340 (+ (+ (+ ?x15332 (* (* 6.0 l_0_9_47) l_0_9_52)) ?x15336) (* (* 6.0 l_0_9_48) l_0_9_53))))
 (let ((?x15350 (- (- (- (+ ?x15340 ?x15341) (* (* 6.0 l_0_9_62) l_0_9_67)) ?x15346) (* (* 6.0 l_0_9_63) l_0_9_68))))
 (let ((?x15368 (+ (+ (+ (+ (- (- (- ?x15350 ?x15351) ?x15353) ?x15355) ?x15358) ?x15361) ?x15364) ?x15367)))
 (= ?x15368 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15449 (* l_0_9_81 l_0_9_81)))
 (let ((?x15447 (* l_0_9_80 l_0_9_80)))
 (let ((?x15445 (* l_0_9_79 l_0_9_79)))
 (let ((?x15443 (* (* 4.0 l_0_9_66) l_0_9_66)))
 (let ((?x15439 (* 8.0 l_0_9_66)))
 (let ((?x15440 (* ?x15439 l_0_9_69)))
 (let ((?x15437 (* (* 4.0 l_0_9_65) l_0_9_65)))
 (let ((?x15433 (* 8.0 l_0_9_65)))
 (let ((?x15434 (* ?x15433 l_0_9_68)))
 (let ((?x15431 (* (* 4.0 l_0_9_64) l_0_9_64)))
 (let ((?x15427 (* 8.0 l_0_9_64)))
 (let ((?x15428 (* ?x15427 l_0_9_67)))
 (let ((?x15425 (* l_0_9_6 l_0_9_6)))
 (let ((?x15422 (* l_0_9_51 l_0_9_51)))
 (let ((?x15423 (* 4.0 ?x15422)))
 (let ((?x15419 (* 8.0 l_0_9_51)))
 (let ((?x15420 (* ?x15419 l_0_9_54)))
 (let ((?x15416 (* l_0_9_50 l_0_9_50)))
 (let ((?x15417 (* 4.0 ?x15416)))
 (let ((?x15413 (* 8.0 l_0_9_50)))
 (let ((?x15414 (* ?x15413 l_0_9_53)))
 (let ((?x15411 (* l_0_9_5 l_0_9_5)))
 (let ((?x15408 (* l_0_9_49 l_0_9_49)))
 (let ((?x15409 (* 4.0 ?x15408)))
 (let ((?x15410 (+ (- (* (- l_0_9_4) l_0_9_4) (* (* 8.0 l_0_9_49) l_0_9_52)) ?x15409)))
 (let ((?x15429 (+ (- (+ (- (+ (- (- ?x15410 ?x15411) ?x15414) ?x15417) ?x15420) ?x15423) ?x15425) ?x15428)))
 (let ((?x15448 (- (- (- (+ (- (+ (- ?x15429 ?x15431) ?x15434) ?x15437) ?x15440) ?x15443) ?x15445) ?x15447)))
 (= (- ?x15448 ?x15449) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x15262 (* 2.0 l_0_9_81)))
 (let ((?x15263 (* ?x15262 l_0_9_84)))
 (let ((?x15259 (* 2.0 l_0_9_80)))
 (let ((?x15260 (* ?x15259 l_0_9_83)))
 (let ((?x15256 (* 2.0 l_0_9_79)))
 (let ((?x15257 (* ?x15256 l_0_9_82)))
 (let ((?x15439 (* 8.0 l_0_9_66)))
 (let ((?x15440 (* ?x15439 l_0_9_69)))
 (let ((?x15433 (* 8.0 l_0_9_65)))
 (let ((?x15434 (* ?x15433 l_0_9_68)))
 (let ((?x15427 (* 8.0 l_0_9_64)))
 (let ((?x15428 (* ?x15427 l_0_9_67)))
 (let ((?x15419 (* 8.0 l_0_9_51)))
 (let ((?x15420 (* ?x15419 l_0_9_54)))
 (let ((?x15413 (* 8.0 l_0_9_50)))
 (let ((?x15414 (* ?x15413 l_0_9_53)))
 (let ((?x15405 (* 8.0 l_0_9_49)))
 (let ((?x15406 (* ?x15405 l_0_9_52)))
 (let ((?x5955 (- (+ (* (* (- 2.0) l_0_9_4) l_0_9_7) ?x15406) (* (* 2.0 l_0_9_5) l_0_9_8))))
 (let ((?x15487 (- (- (+ (+ ?x5955 ?x15414) ?x15420) (* (* 4.0 l_0_9_52) l_0_9_52)) (* (* 4.0 l_0_9_53) l_0_9_53))))
 (let ((?x15493 (- (- ?x15487 (* (* 4.0 l_0_9_54) l_0_9_54)) (* (* 4.0 l_0_9_55) l_0_9_55))))
 (let ((?x15499 (- (- (- (- ?x15493 (* (* 2.0 l_0_9_6) l_0_9_9)) ?x15428) ?x15434) ?x15440)))
 (let ((?x15503 (+ (+ ?x15499 (* 4.0 (* l_0_9_67 l_0_9_67))) (* 4.0 (* l_0_9_68 l_0_9_68)))))
 (let ((?x15507 (+ (+ ?x15503 (* 4.0 (* l_0_9_69 l_0_9_69))) (* 4.0 (* l_0_9_70 l_0_9_70)))))
 (= (- (- (- ?x15507 ?x15257) ?x15260) ?x15263) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15262 (* 2.0 l_0_9_81)))
 (let ((?x15567 (* ?x15262 l_0_9_88)))
 (let ((?x15259 (* 2.0 l_0_9_80)))
 (let ((?x15565 (* ?x15259 l_0_9_87)))
 (let ((?x15256 (* 2.0 l_0_9_79)))
 (let ((?x15563 (* ?x15256 l_0_9_86)))
 (let ((?x15561 (* (* 8.0 l_0_9_70) l_0_9_74)))
 (let ((?x15558 (* (* 8.0 l_0_9_69) l_0_9_73)))
 (let ((?x15555 (* (* 8.0 l_0_9_68) l_0_9_72)))
 (let ((?x15552 (* (* 8.0 l_0_9_67) l_0_9_71)))
 (let ((?x15439 (* 8.0 l_0_9_66)))
 (let ((?x15549 (* ?x15439 l_0_9_73)))
 (let ((?x15433 (* 8.0 l_0_9_65)))
 (let ((?x15544 (* ?x15433 l_0_9_72)))
 (let ((?x15427 (* 8.0 l_0_9_64)))
 (let ((?x15539 (* ?x15427 l_0_9_71)))
 (let ((?x15534 (* (* 8.0 l_0_9_55) l_0_9_59)))
 (let ((?x15531 (* (* 8.0 l_0_9_54) l_0_9_58)))
 (let ((?x15528 (* (* 8.0 l_0_9_53) l_0_9_57)))
 (let ((?x15525 (* (* 8.0 l_0_9_52) l_0_9_56)))
 (let ((?x15419 (* 8.0 l_0_9_51)))
 (let ((?x15522 (* ?x15419 l_0_9_58)))
 (let ((?x15413 (* 8.0 l_0_9_50)))
 (let ((?x15517 (* ?x15413 l_0_9_57)))
 (let ((?x15405 (* 8.0 l_0_9_49)))
 (let ((?x11231 (* ?x15405 l_0_9_56)))
 (let ((?x11290 (- (* (* (- 2.0) l_0_9_11) l_0_9_4) (* (* 2.0 l_0_9_12) l_0_9_5))))
 (let ((?x11252 (+ (- ?x11290 (* (* 2.0 l_0_9_13) l_0_9_6)) (* (* 6.0 l_0_9_49) l_0_9_52))))
 (let ((?x15521 (+ (+ (+ (+ ?x11252 ?x11231) (* (* 6.0 l_0_9_50) l_0_9_53)) ?x15517) (* (* 6.0 l_0_9_51) l_0_9_54))))
 (let ((?x15538 (- (- (- (- (- (+ ?x15521 ?x15522) ?x15525) ?x15528) ?x15531) ?x15534) (* (* 6.0 l_0_9_64) l_0_9_67))))
 (let ((?x15548 (- (- (- (- ?x15538 ?x15539) (* (* 6.0 l_0_9_65) l_0_9_68)) ?x15544) (* (* 6.0 l_0_9_66) l_0_9_69))))
 (let ((?x15566 (- (- (+ (+ (+ (+ (- ?x15548 ?x15549) ?x15552) ?x15555) ?x15558) ?x15561) ?x15563) ?x15565)))
 (= (- ?x15566 ?x15567) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15658 (* l_0_9_9 l_0_9_9)))
 (let ((?x15312 (* l_0_9_85 l_0_9_85)))
 (let ((?x15310 (* l_0_9_84 l_0_9_84)))
 (let ((?x15308 (* l_0_9_83 l_0_9_83)))
 (let ((?x15306 (* l_0_9_82 l_0_9_82)))
 (let ((?x15652 (* l_0_9_8 l_0_9_8)))
 (let ((?x15650 (* (* 4.0 l_0_9_70) l_0_9_70)))
 (let ((?x15647 (* l_0_9_7 l_0_9_7)))
 (let ((?x15645 (* (* 4.0 l_0_9_69) l_0_9_69)))
 (let ((?x15642 (* (* 4.0 l_0_9_68) l_0_9_68)))
 (let ((?x15639 (* (* 4.0 l_0_9_67) l_0_9_67)))
 (let ((?x14971 (* l_0_9_55 l_0_9_55)))
 (let ((?x6051 (* 4.0 ?x14971)))
 (let ((?x3070 (* l_0_9_54 l_0_9_54)))
 (let ((?x11205 (* 4.0 ?x3070)))
 (let ((?x14966 (* l_0_9_53 l_0_9_53)))
 (let ((?x11199 (* 4.0 ?x14966)))
 (let ((?x15635 (+ (+ (* (- l_0_9_10) l_0_9_10) (* 4.0 (* l_0_9_52 l_0_9_52))) ?x11199)))
 (let ((?x15651 (- (- (- (- (- (+ (+ ?x15635 ?x11205) ?x6051) ?x15639) ?x15642) ?x15645) ?x15647) ?x15650)))
 (= (- (- (- (- (- (- ?x15651 ?x15652) ?x15306) ?x15308) ?x15310) ?x15312) ?x15658) 0.0)))))))))))))))))))))
(assert
 (let ((?x15367 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x15364 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x15361 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x15358 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x15561 (* (* 8.0 l_0_9_70) l_0_9_74)))
 (let ((?x15558 (* (* 8.0 l_0_9_69) l_0_9_73)))
 (let ((?x15555 (* (* 8.0 l_0_9_68) l_0_9_72)))
 (let ((?x15552 (* (* 8.0 l_0_9_67) l_0_9_71)))
 (let ((?x14971 (* l_0_9_55 l_0_9_55)))
 (let ((?x15691 (* 3.0 ?x14971)))
 (let ((?x15534 (* (* 8.0 l_0_9_55) l_0_9_59)))
 (let ((?x3070 (* l_0_9_54 l_0_9_54)))
 (let ((?x15688 (* 3.0 ?x3070)))
 (let ((?x15531 (* (* 8.0 l_0_9_54) l_0_9_58)))
 (let ((?x14966 (* l_0_9_53 l_0_9_53)))
 (let ((?x15685 (* 3.0 ?x14966)))
 (let ((?x15528 (* (* 8.0 l_0_9_53) l_0_9_57)))
 (let ((?x10430 (* l_0_9_52 l_0_9_52)))
 (let ((?x15682 (* 3.0 ?x10430)))
 (let ((?x15525 (* (* 8.0 l_0_9_52) l_0_9_56)))
 (let ((?x15676 (- (* (* (- 2.0) l_0_9_10) l_0_9_14) (* (* 2.0 l_0_9_11) l_0_9_7))))
 (let ((?x15680 (- (- ?x15676 (* (* 2.0 l_0_9_12) l_0_9_8)) (* (* 2.0 l_0_9_13) l_0_9_9))))
 (let ((?x15690 (+ (+ (+ (+ (+ (+ (+ ?x15680 ?x15525) ?x15682) ?x15528) ?x15685) ?x15531) ?x15688) ?x15534)))
 (let ((?x15697 (- (- (- (+ ?x15690 ?x15691) ?x15552) (* (* 3.0 l_0_9_67) l_0_9_67)) ?x15555)))
 (let ((?x15704 (- (- (- ?x15697 (* (* 3.0 l_0_9_68) l_0_9_68)) ?x15558) (* (* 3.0 l_0_9_69) l_0_9_69))))
 (let ((?x15710 (- (- (- (- ?x15704 ?x15561) (* (* 3.0 l_0_9_70) l_0_9_70)) ?x15358) ?x15361)))
 (= (- (- ?x15710 ?x15364) ?x15367) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x15809 (* l_0_9_90 l_0_9_90)))
 (let ((?x15807 (* l_0_9_89 l_0_9_89)))
 (let ((?x15805 (* l_0_9_88 l_0_9_88)))
 (let ((?x15803 (* l_0_9_87 l_0_9_87)))
 (let ((?x15801 (* l_0_9_86 l_0_9_86)))
 (let ((?x15799 (* (* 4.0 l_0_9_75) l_0_9_75)))
 (let ((?x15796 (* (* 4.0 l_0_9_74) l_0_9_74)))
 (let ((?x15793 (* (* 4.0 l_0_9_73) l_0_9_73)))
 (let ((?x15790 (* (* 4.0 l_0_9_72) l_0_9_72)))
 (let ((?x15787 (* (* 4.0 l_0_9_71) l_0_9_71)))
 (let ((?x4504 (* l_0_9_60 l_0_9_60)))
 (let ((?x15769 (* 4.0 ?x4504)))
 (let ((?x14453 (* l_0_9_59 l_0_9_59)))
 (let ((?x15767 (* 4.0 ?x14453)))
 (let ((?x4497 (* l_0_9_58 l_0_9_58)))
 (let ((?x15765 (* 4.0 ?x4497)))
 (let ((?x4487 (* l_0_9_57 l_0_9_57)))
 (let ((?x15763 (* 4.0 ?x4487)))
 (let ((?x14445 (* l_0_9_56 l_0_9_56)))
 (let ((?x15761 (* 4.0 ?x14445)))
 (let ((?x15738 (* l_0_9_15 l_0_9_15)))
 (let ((?x15736 (* l_0_9_14 l_0_9_14)))
 (let ((?x15734 (* l_0_9_13 l_0_9_13)))
 (let ((?x15737 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15734) ?x15736)))
 (let ((?x15745 (+ (- (- ?x15737 ?x15738) (* (* 24.0 l_0_9_16) l_0_9_22)) (* (* 24.0 l_0_9_31) l_0_9_37))))
 (let ((?x15751 (+ (- ?x15745 (* (* 12.0 l_0_9_46) l_0_9_52)) (* (* 6.0 l_0_9_52) l_0_9_56))))
 (let ((?x15757 (+ (+ ?x15751 (* (* 6.0 l_0_9_53) l_0_9_57)) (* (* 6.0 l_0_9_54) l_0_9_58))))
 (let ((?x15766 (+ (+ (+ (+ ?x15757 (* (* 6.0 l_0_9_55) l_0_9_59)) ?x15761) ?x15763) ?x15765)))
 (let ((?x15776 (- (+ (+ (+ ?x15766 ?x15767) ?x15769) (* (* 12.0 l_0_9_61) l_0_9_67)) (* (* 6.0 l_0_9_67) l_0_9_71))))
 (let ((?x15782 (- (- ?x15776 (* (* 6.0 l_0_9_68) l_0_9_72)) (* (* 6.0 l_0_9_69) l_0_9_73))))
 (let ((?x15794 (- (- (- (- ?x15782 (* (* 6.0 l_0_9_70) l_0_9_74)) ?x15787) ?x15790) ?x15793)))
 (let ((?x15810 (- (- (- (- (- (- (- ?x15794 ?x15796) ?x15799) ?x15801) ?x15803) ?x15805) ?x15807) ?x15809)))
 (= ?x15810 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14391 (* l_0_9_61 l_0_9_61)))
 (let ((?x10045 (* 4.0 ?x14391)))
 (let ((?x15837 (- (* (* (- 2.0) l_0_9_106) l_0_9_109) (* (* 2.0 l_0_9_121) l_0_9_124))))
 (let ((?x15841 (+ (- ?x15837 (* (* 2.0 l_0_9_16) l_0_9_19)) (* (* 2.0 l_0_9_31) l_0_9_34))))
 (let ((?x15846 (- (- ?x15841 (* (* 2.0 l_0_9_46) l_0_9_49)) (* (* 4.0 l_0_9_46) l_0_9_46))))
 (let ((?x15851 (- (+ (+ ?x15846 (* (* 2.0 l_0_9_61) l_0_9_64)) ?x10045) (* (* 2.0 l_0_9_91) l_0_9_94))))
 (= ?x15851 0.0))))))))
(assert
 (let ((?x15909 (* l_0_9_93 l_0_9_93)))
 (let ((?x15907 (* l_0_9_92 l_0_9_92)))
 (let ((?x14698 (* 2.0 l_0_9_76)))
 (let ((?x14699 (* ?x14698 l_0_9_77)))
 (let ((?x15878 (* l_0_9_123 l_0_9_123)))
 (let ((?x15876 (* l_0_9_122 l_0_9_122)))
 (let ((?x15877 (- (- (* (- l_0_9_107) l_0_9_107) (* l_0_9_108 l_0_9_108)) ?x15876)))
 (let ((?x15884 (- (+ (- ?x15877 ?x15878) (* (* 8.0 l_0_9_16) l_0_9_17)) (* (* 1.0 l_0_9_17) l_0_9_17))))
 (let ((?x15889 (- (- ?x15884 (* (* 1.0 l_0_9_18) l_0_9_18)) (* (* 8.0 l_0_9_31) l_0_9_32))))
 (let ((?x15895 (+ (+ ?x15889 (* 1.0 (* l_0_9_32 l_0_9_32))) (* 1.0 (* l_0_9_33 l_0_9_33)))))
 (let ((?x15901 (- (- ?x15895 (* (* 1.0 l_0_9_47) l_0_9_47)) (* (* 1.0 l_0_9_48) l_0_9_48))))
 (let ((?x15905 (+ (+ ?x15901 (* 1.0 (* l_0_9_62 l_0_9_62))) (* 1.0 (* l_0_9_63 l_0_9_63)))))
 (= (- (- (+ ?x15905 ?x14699) ?x15907) ?x15909) 0.0))))))))))))))
(assert
 (let ((?x14698 (* 2.0 l_0_9_76)))
 (let ((?x14799 (* ?x14698 l_0_9_79)))
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x14690 (* ?x14689 l_0_9_62)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x14681 (* ?x14680 l_0_9_47)))
 (let ((?x6613 (- (* (* (- 2.0) l_0_9_107) l_0_9_109) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x6624 (- (- ?x6613 (* (* 2.0 l_0_9_122) l_0_9_124)) (* (* 2.0 l_0_9_123) l_0_9_125))))
 (let ((?x11693 (- (+ ?x6624 (* (* 8.0 l_0_9_16) l_0_9_19)) (* (* 2.0 l_0_9_17) l_0_9_19))))
 (let ((?x11695 (- (- ?x11693 (* (* 2.0 l_0_9_18) l_0_9_20)) (* (* 8.0 l_0_9_31) l_0_9_34))))
 (let ((?x15931 (+ (+ ?x11695 (* (* 2.0 l_0_9_32) l_0_9_34)) (* (* 2.0 l_0_9_33) l_0_9_35))))
 (let ((?x15936 (- (- (- ?x15931 ?x14681) (* (* 2.0 l_0_9_47) l_0_9_49)) (* (* 2.0 l_0_9_48) l_0_9_50))))
 (let ((?x15941 (+ (+ (+ ?x15936 ?x14690) (* (* 2.0 l_0_9_62) l_0_9_64)) (* (* 2.0 l_0_9_63) l_0_9_65))))
 (let ((?x15946 (- (- (+ ?x15941 ?x14799) (* (* 2.0 l_0_9_92) l_0_9_94)) (* (* 2.0 l_0_9_93) l_0_9_95))))
 (= ?x15946 0.0))))))))))))))))
(assert
 (let ((?x14698 (* 2.0 l_0_9_76)))
 (let ((?x15066 (* ?x14698 l_0_9_86)))
 (let ((?x6969 (- (* (* (- 2.0) l_0_9_101) l_0_9_92) (* (* 2.0 l_0_9_102) l_0_9_93))))
 (let ((?x11746 (- (- ?x6969 (* (* 2.0 l_0_9_107) l_0_9_116)) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x15959 (- (- ?x11746 (* (* 2.0 l_0_9_122) l_0_9_131)) (* (* 2.0 l_0_9_123) l_0_9_132))))
 (let ((?x15963 (- (+ ?x15959 (* (* 8.0 l_0_9_16) l_0_9_26)) (* (* 2.0 l_0_9_17) l_0_9_26))))
 (let ((?x15967 (- (- ?x15963 (* (* 2.0 l_0_9_18) l_0_9_27)) (* (* 8.0 l_0_9_31) l_0_9_41))))
 (let ((?x15971 (+ (+ ?x15967 (* (* 2.0 l_0_9_32) l_0_9_41)) (* (* 2.0 l_0_9_33) l_0_9_42))))
 (let ((?x15975 (- (+ ?x15971 (* (* 6.0 l_0_9_46) l_0_9_47)) (* (* 2.0 l_0_9_47) l_0_9_56))))
 (let ((?x15979 (- (- ?x15975 (* (* 2.0 l_0_9_48) l_0_9_57)) (* (* 6.0 l_0_9_61) l_0_9_62))))
 (let ((?x15983 (+ (+ ?x15979 (* (* 2.0 l_0_9_62) l_0_9_71)) (* (* 2.0 l_0_9_63) l_0_9_72))))
 (= (+ ?x15983 ?x15066) 0.0)))))))))))))
(assert
 (let ((?x16076 (* l_0_9_96 l_0_9_96)))
 (let ((?x16074 (* l_0_9_95 l_0_9_95)))
 (let ((?x16072 (* l_0_9_94 l_0_9_94)))
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x14786 (* ?x14689 l_0_9_64)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x14773 (* ?x14680 l_0_9_49)))
 (let ((?x16035 (* l_0_9_126 l_0_9_126)))
 (let ((?x16033 (* l_0_9_125 l_0_9_125)))
 (let ((?x16031 (* l_0_9_124 l_0_9_124)))
 (let ((?x16029 (* l_0_9_111 l_0_9_111)))
 (let ((?x16030 (- (- (* (- l_0_9_109) l_0_9_109) (* l_0_9_110 l_0_9_110)) ?x16029)))
 (let ((?x16039 (- (- (- (- ?x16030 ?x16031) ?x16033) ?x16035) (* (* 1.0 l_0_9_19) l_0_9_19))))
 (let ((?x16045 (- (- ?x16039 (* (* 1.0 l_0_9_20) l_0_9_20)) (* (* 1.0 l_0_9_21) l_0_9_21))))
 (let ((?x16051 (+ (+ ?x16045 (* 1.0 (* l_0_9_34 l_0_9_34))) (* 1.0 (* l_0_9_35 l_0_9_35)))))
 (let ((?x16058 (- (- (+ ?x16051 (* 1.0 (* l_0_9_36 l_0_9_36))) ?x14773) (* (* 1.0 l_0_9_49) l_0_9_49))))
 (let ((?x16064 (- (- ?x16058 (* (* 1.0 l_0_9_50) l_0_9_50)) (* (* 1.0 l_0_9_51) l_0_9_51))))
 (let ((?x16069 (+ (+ (+ ?x16064 ?x14786) (* 1.0 (* l_0_9_64 l_0_9_64))) (* 1.0 (* l_0_9_65 l_0_9_65)))))
 (let ((?x16077 (- (- (- (+ ?x16069 (* 1.0 (* l_0_9_66 l_0_9_66))) ?x16072) ?x16074) ?x16076)))
 (= ?x16077 0.0)))))))))))))))))))))
(assert
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x15052 (* ?x14689 l_0_9_71)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x15036 (* ?x14680 l_0_9_56)))
 (let ((?x16117 (- (* (* (- 2.0) l_0_9_101) l_0_9_94) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x16121 (- (- ?x16117 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_109) l_0_9_116))))
 (let ((?x16125 (- (- ?x16121 (* (* 2.0 l_0_9_110) l_0_9_117)) (* (* 2.0 l_0_9_111) l_0_9_118))))
 (let ((?x16129 (- (- ?x16125 (* (* 2.0 l_0_9_124) l_0_9_131)) (* (* 2.0 l_0_9_125) l_0_9_132))))
 (let ((?x16133 (- (- ?x16129 (* (* 2.0 l_0_9_126) l_0_9_133)) (* (* 2.0 l_0_9_19) l_0_9_26))))
 (let ((?x16137 (- (- ?x16133 (* (* 2.0 l_0_9_20) l_0_9_27)) (* (* 2.0 l_0_9_21) l_0_9_28))))
 (let ((?x16141 (+ (+ ?x16137 (* (* 2.0 l_0_9_34) l_0_9_41)) (* (* 2.0 l_0_9_35) l_0_9_42))))
 (let ((?x16145 (+ (+ ?x16141 (* (* 2.0 l_0_9_36) l_0_9_43)) (* (* 6.0 l_0_9_46) l_0_9_49))))
 (let ((?x16150 (- (- (- ?x16145 ?x15036) (* (* 2.0 l_0_9_49) l_0_9_56)) (* (* 2.0 l_0_9_50) l_0_9_57))))
 (let ((?x16154 (- (- ?x16150 (* (* 2.0 l_0_9_51) l_0_9_58)) (* (* 6.0 l_0_9_61) l_0_9_64))))
 (let ((?x16159 (+ (+ (+ ?x16154 ?x15052) (* (* 2.0 l_0_9_64) l_0_9_71)) (* (* 2.0 l_0_9_65) l_0_9_72))))
 (= (+ ?x16159 (* (* 2.0 l_0_9_66) l_0_9_73)) 0.0)))))))))))))))))
(assert
 (let ((?x15809 (* l_0_9_90 l_0_9_90)))
 (let ((?x15807 (* l_0_9_89 l_0_9_89)))
 (let ((?x15805 (* l_0_9_88 l_0_9_88)))
 (let ((?x15803 (* l_0_9_87 l_0_9_87)))
 (let ((?x15801 (* l_0_9_86 l_0_9_86)))
 (let ((?x4479 (* l_0_9_30 l_0_9_30)))
 (let ((?x12034 (* 4.0 ?x4479)))
 (let ((?x4424 (* l_0_9_29 l_0_9_29)))
 (let ((?x7294 (* 4.0 ?x4424)))
 (let ((?x9906 (* l_0_9_28 l_0_9_28)))
 (let ((?x12024 (* 4.0 ?x9906)))
 (let ((?x4415 (* l_0_9_27 l_0_9_27)))
 (let ((?x12010 (* 4.0 ?x4415)))
 (let ((?x9902 (* l_0_9_26 l_0_9_26)))
 (let ((?x7592 (* 4.0 ?x9902)))
 (let ((?x7249 (+ (+ (+ (+ (* (* (- 24.0) l_0_9_16) l_0_9_17) ?x7592) ?x12010) ?x12024) ?x7294)))
 (let ((?x7396 (- (+ (+ ?x7249 ?x12034) (* (* 24.0 l_0_9_31) l_0_9_32)) (* (* 4.0 l_0_9_41) l_0_9_41))))
 (let ((?x16179 (- (- ?x7396 (* (* 4.0 l_0_9_42) l_0_9_42)) (* (* 4.0 l_0_9_43) l_0_9_43))))
 (let ((?x16185 (- (- ?x16179 (* (* 4.0 l_0_9_44) l_0_9_44)) (* (* 4.0 l_0_9_45) l_0_9_45))))
 (let ((?x16189 (+ (- ?x16185 (* (* 12.0 l_0_9_46) l_0_9_47)) (* (* 6.0 l_0_9_47) l_0_9_56))))
 (let ((?x16193 (+ (+ ?x16189 (* (* 6.0 l_0_9_48) l_0_9_57)) (* (* 12.0 l_0_9_61) l_0_9_62))))
 (let ((?x16197 (- (- ?x16193 (* (* 6.0 l_0_9_62) l_0_9_71)) (* (* 6.0 l_0_9_63) l_0_9_72))))
 (= (+ (+ (+ (+ (+ ?x16197 ?x15801) ?x15803) ?x15805) ?x15807) ?x15809) 0.0))))))))))))))))))))))))
(assert
 (let ((?x12257 (+ (* (* (- 24.0) l_0_9_16) l_0_9_19) (* (* 24.0 l_0_9_31) l_0_9_34))))
 (let ((?x7683 (+ (- ?x12257 (* (* 12.0 l_0_9_46) l_0_9_49)) (* (* 6.0 l_0_9_49) l_0_9_56))))
 (let ((?x16208 (+ (+ ?x7683 (* (* 6.0 l_0_9_50) l_0_9_57)) (* (* 6.0 l_0_9_51) l_0_9_58))))
 (let ((?x16214 (- (- ?x16208 (* (* 4.0 l_0_9_56) l_0_9_56)) (* (* 4.0 l_0_9_57) l_0_9_57))))
 (let ((?x16220 (- (- ?x16214 (* (* 4.0 l_0_9_58) l_0_9_58)) (* (* 4.0 l_0_9_59) l_0_9_59))))
 (let ((?x16225 (+ (- ?x16220 (* (* 4.0 l_0_9_60) l_0_9_60)) (* (* 12.0 l_0_9_61) l_0_9_64))))
 (let ((?x16229 (- (- ?x16225 (* (* 6.0 l_0_9_64) l_0_9_71)) (* (* 6.0 l_0_9_65) l_0_9_72))))
 (let ((?x16232 (+ (- ?x16229 (* (* 6.0 l_0_9_66) l_0_9_73)) (* 4.0 (* l_0_9_71 l_0_9_71)))))
 (let ((?x16234 (+ (+ ?x16232 (* 4.0 (* l_0_9_72 l_0_9_72))) (* 4.0 (* l_0_9_73 l_0_9_73)))))
 (let ((?x16236 (+ (+ ?x16234 (* 4.0 (* l_0_9_74 l_0_9_74))) (* 4.0 (* l_0_9_75 l_0_9_75)))))
 (= ?x16236 0.0))))))))))))
(assert
 (let ((?x14618 (* (* 4.0 l_0_9_61) l_0_9_61)))
 (let ((?x14439 (* l_0_9_46 l_0_9_46)))
 (let ((?x14613 (* 4.0 ?x14439)))
 (let ((?x16272 (+ (* (* (- 24.0) l_0_9_16) l_0_9_26) (* (* 24.0 l_0_9_31) l_0_9_41))))
 (let ((?x16277 (+ (+ (- ?x16272 (* (* 12.0 l_0_9_46) l_0_9_56)) ?x14613) (* 3.0 (* l_0_9_56 l_0_9_56)))))
 (let ((?x16281 (+ (+ ?x16277 (* 3.0 (* l_0_9_57 l_0_9_57))) (* 3.0 (* l_0_9_58 l_0_9_58)))))
 (let ((?x16285 (+ (+ ?x16281 (* 3.0 (* l_0_9_59 l_0_9_59))) (* 3.0 (* l_0_9_60 l_0_9_60)))))
 (let ((?x16291 (- (- (+ ?x16285 (* (* 12.0 l_0_9_61) l_0_9_71)) ?x14618) (* (* 3.0 l_0_9_71) l_0_9_71))))
 (let ((?x16297 (- (- ?x16291 (* (* 3.0 l_0_9_72) l_0_9_72)) (* (* 3.0 l_0_9_73) l_0_9_73))))
 (let ((?x16303 (- (- ?x16297 (* (* 3.0 l_0_9_74) l_0_9_74)) (* (* 3.0 l_0_9_75) l_0_9_75))))
 (= ?x16303 0.0))))))))))))
(assert
 (let ((?x16330 (- (* (* (- 12.0) l_0_9_17) l_0_9_17) (* (* 12.0 l_0_9_18) l_0_9_18))))
 (let ((?x16334 (+ (+ ?x16330 (* 12.0 (* l_0_9_32 l_0_9_32))) (* 12.0 (* l_0_9_33 l_0_9_33)))))
 (let ((?x16338 (- (- ?x16334 (* (* 6.0 l_0_9_47) l_0_9_47)) (* (* 6.0 l_0_9_48) l_0_9_48))))
 (let ((?x16342 (+ (+ ?x16338 (* 6.0 (* l_0_9_62 l_0_9_62))) (* 6.0 (* l_0_9_63 l_0_9_63)))))
 (= ?x16342 0.0))))))
(assert
 (let ((?x16352 (- (* (* (- 24.0) l_0_9_17) l_0_9_19) (* (* 24.0 l_0_9_18) l_0_9_20))))
 (let ((?x16358 (+ (+ ?x16352 (* (* 24.0 l_0_9_32) l_0_9_34)) (* (* 24.0 l_0_9_33) l_0_9_35))))
 (let ((?x16364 (- (- ?x16358 (* (* 12.0 l_0_9_47) l_0_9_49)) (* (* 12.0 l_0_9_48) l_0_9_50))))
 (let ((?x16370 (+ (+ ?x16364 (* (* 12.0 l_0_9_62) l_0_9_64)) (* (* 12.0 l_0_9_63) l_0_9_65))))
 (= ?x16370 0.0))))))
(assert
 (let ((?x16389 (- (* (* (- 24.0) l_0_9_17) l_0_9_22) (* (* 24.0 l_0_9_18) l_0_9_23))))
 (let ((?x16400 (+ (+ ?x16389 (* (* 24.0 l_0_9_32) l_0_9_37)) (* (* 24.0 l_0_9_33) l_0_9_38))))
 (let ((?x16404 (- (- ?x16400 (* (* 12.0 l_0_9_47) l_0_9_52)) (* (* 12.0 l_0_9_48) l_0_9_53))))
 (let ((?x16408 (+ (+ ?x16404 (* (* 12.0 l_0_9_62) l_0_9_67)) (* (* 12.0 l_0_9_63) l_0_9_68))))
 (= ?x16408 0.0))))))
(assert
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x14690 (* ?x14689 l_0_9_62)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x14681 (* ?x14680 l_0_9_47)))
 (let ((?x16418 (- (* (* (- 24.0) l_0_9_17) l_0_9_26) (* (* 24.0 l_0_9_18) l_0_9_27))))
 (let ((?x16422 (+ (+ ?x16418 (* (* 24.0 l_0_9_32) l_0_9_41)) (* (* 24.0 l_0_9_33) l_0_9_42))))
 (let ((?x16427 (- (- (+ ?x16422 ?x14681) (* (* 12.0 l_0_9_47) l_0_9_56)) (* (* 12.0 l_0_9_48) l_0_9_57))))
 (let ((?x16432 (+ (+ (- ?x16427 ?x14690) (* (* 12.0 l_0_9_62) l_0_9_71)) (* (* 12.0 l_0_9_63) l_0_9_72))))
 (= ?x16432 0.0))))))))))
(assert
 (let ((?x16463 (- (* (* (- 12.0) l_0_9_19) l_0_9_19) (* (* 12.0 l_0_9_20) l_0_9_20))))
 (let ((?x16468 (+ (- ?x16463 (* (* 12.0 l_0_9_21) l_0_9_21)) (* 12.0 (* l_0_9_34 l_0_9_34)))))
 (let ((?x16472 (+ (+ ?x16468 (* 12.0 (* l_0_9_35 l_0_9_35))) (* 12.0 (* l_0_9_36 l_0_9_36)))))
 (let ((?x16476 (- (- ?x16472 (* (* 6.0 l_0_9_49) l_0_9_49)) (* (* 6.0 l_0_9_50) l_0_9_50))))
 (let ((?x16480 (+ (- ?x16476 (* (* 6.0 l_0_9_51) l_0_9_51)) (* 6.0 (* l_0_9_64 l_0_9_64)))))
 (let ((?x16484 (+ (+ ?x16480 (* 6.0 (* l_0_9_65 l_0_9_65))) (* 6.0 (* l_0_9_66 l_0_9_66)))))
 (= ?x16484 0.0))))))))
(assert
 (let ((?x16511 (- (* (* (- 24.0) l_0_9_19) l_0_9_22) (* (* 24.0 l_0_9_20) l_0_9_23))))
 (let ((?x16517 (+ (- ?x16511 (* (* 24.0 l_0_9_21) l_0_9_24)) (* (* 24.0 l_0_9_34) l_0_9_37))))
 (let ((?x16523 (+ (+ ?x16517 (* (* 24.0 l_0_9_35) l_0_9_38)) (* (* 24.0 l_0_9_36) l_0_9_39))))
 (let ((?x16529 (- (- ?x16523 (* (* 12.0 l_0_9_49) l_0_9_52)) (* (* 12.0 l_0_9_50) l_0_9_53))))
 (let ((?x16535 (+ (- ?x16529 (* (* 12.0 l_0_9_51) l_0_9_54)) (* (* 12.0 l_0_9_64) l_0_9_67))))
 (let ((?x16541 (+ (+ ?x16535 (* (* 12.0 l_0_9_65) l_0_9_68)) (* (* 12.0 l_0_9_66) l_0_9_69))))
 (= ?x16541 0.0))))))))
(assert
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x14786 (* ?x14689 l_0_9_64)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x14773 (* ?x14680 l_0_9_49)))
 (let ((?x1087 (- (* (* (- 24.0) l_0_9_19) l_0_9_26) (* (* 24.0 l_0_9_20) l_0_9_27))))
 (let ((?x16575 (+ (- ?x1087 (* (* 24.0 l_0_9_21) l_0_9_28)) (* (* 24.0 l_0_9_34) l_0_9_41))))
 (let ((?x16579 (+ (+ ?x16575 (* (* 24.0 l_0_9_35) l_0_9_42)) (* (* 24.0 l_0_9_36) l_0_9_43))))
 (let ((?x16584 (- (- (+ ?x16579 ?x14773) (* (* 12.0 l_0_9_49) l_0_9_56)) (* (* 12.0 l_0_9_50) l_0_9_57))))
 (let ((?x16589 (+ (- (- ?x16584 (* (* 12.0 l_0_9_51) l_0_9_58)) ?x14786) (* (* 12.0 l_0_9_64) l_0_9_71))))
 (let ((?x16593 (+ (+ ?x16589 (* (* 12.0 l_0_9_65) l_0_9_72)) (* (* 12.0 l_0_9_66) l_0_9_73))))
 (= ?x16593 0.0))))))))))))
(assert
 (let ((?x16611 (- (* (* (- 12.0) l_0_9_22) l_0_9_22) (* (* 12.0 l_0_9_23) l_0_9_23))))
 (let ((?x16617 (- (- ?x16611 (* (* 12.0 l_0_9_24) l_0_9_24)) (* (* 12.0 l_0_9_25) l_0_9_25))))
 (let ((?x16621 (+ (+ ?x16617 (* 12.0 (* l_0_9_37 l_0_9_37))) (* 12.0 (* l_0_9_38 l_0_9_38)))))
 (let ((?x16625 (+ (+ ?x16621 (* 12.0 (* l_0_9_39 l_0_9_39))) (* 12.0 (* l_0_9_40 l_0_9_40)))))
 (let ((?x16629 (- (- ?x16625 (* (* 6.0 l_0_9_52) l_0_9_52)) (* (* 6.0 l_0_9_53) l_0_9_53))))
 (let ((?x16633 (- (- ?x16629 (* (* 6.0 l_0_9_54) l_0_9_54)) (* (* 6.0 l_0_9_55) l_0_9_55))))
 (let ((?x16637 (+ (+ ?x16633 (* 6.0 (* l_0_9_67 l_0_9_67))) (* 6.0 (* l_0_9_68 l_0_9_68)))))
 (let ((?x16641 (+ (+ ?x16637 (* 6.0 (* l_0_9_69 l_0_9_69))) (* 6.0 (* l_0_9_70 l_0_9_70)))))
 (= ?x16641 0.0))))))))))
(assert
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x14788 (* ?x14689 l_0_9_67)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x14775 (* ?x14680 l_0_9_52)))
 (let ((?x16663 (- (* (* (- 24.0) l_0_9_22) l_0_9_26) (* (* 24.0 l_0_9_23) l_0_9_27))))
 (let ((?x16669 (- (- ?x16663 (* (* 24.0 l_0_9_24) l_0_9_28)) (* (* 24.0 l_0_9_25) l_0_9_29))))
 (let ((?x16675 (+ (+ ?x16669 (* (* 24.0 l_0_9_37) l_0_9_41)) (* (* 24.0 l_0_9_38) l_0_9_42))))
 (let ((?x16681 (+ (+ ?x16675 (* (* 24.0 l_0_9_39) l_0_9_43)) (* (* 24.0 l_0_9_40) l_0_9_44))))
 (let ((?x16688 (- (- (+ ?x16681 ?x14775) (* (* 12.0 l_0_9_52) l_0_9_56)) (* (* 12.0 l_0_9_53) l_0_9_57))))
 (let ((?x16694 (- (- ?x16688 (* (* 12.0 l_0_9_54) l_0_9_58)) (* (* 12.0 l_0_9_55) l_0_9_59))))
 (let ((?x16701 (+ (+ (- ?x16694 ?x14788) (* (* 12.0 l_0_9_67) l_0_9_71)) (* (* 12.0 l_0_9_68) l_0_9_72))))
 (let ((?x16707 (+ (+ ?x16701 (* (* 12.0 l_0_9_69) l_0_9_73)) (* (* 12.0 l_0_9_70) l_0_9_74))))
 (= ?x16707 0.0))))))))))))))
(assert
 (let ((?x14689 (* 8.0 l_0_9_61)))
 (let ((?x15052 (* ?x14689 l_0_9_71)))
 (let ((?x14680 (* 8.0 l_0_9_46)))
 (let ((?x15036 (* ?x14680 l_0_9_56)))
 (let ((?x16740 (- (* (* (- 12.0) l_0_9_26) l_0_9_26) (* (* 12.0 l_0_9_27) l_0_9_27))))
 (let ((?x16757 (- (- ?x16740 (* (* 12.0 l_0_9_28) l_0_9_28)) (* (* 12.0 l_0_9_29) l_0_9_29))))
 (let ((?x16762 (+ (- ?x16757 (* (* 12.0 l_0_9_30) l_0_9_30)) (* 12.0 (* l_0_9_41 l_0_9_41)))))
 (let ((?x16766 (+ (+ ?x16762 (* 12.0 (* l_0_9_42 l_0_9_42))) (* 12.0 (* l_0_9_43 l_0_9_43)))))
 (let ((?x16770 (+ (+ ?x16766 (* 12.0 (* l_0_9_44 l_0_9_44))) (* 12.0 (* l_0_9_45 l_0_9_45)))))
 (let ((?x16777 (- (- (+ ?x16770 ?x15036) (* (* 6.0 l_0_9_56) l_0_9_56)) (* (* 6.0 l_0_9_57) l_0_9_57))))
 (let ((?x16783 (- (- ?x16777 (* (* 6.0 l_0_9_58) l_0_9_58)) (* (* 6.0 l_0_9_59) l_0_9_59))))
 (let ((?x16789 (+ (- (- ?x16783 (* (* 6.0 l_0_9_60) l_0_9_60)) ?x15052) (* 6.0 (* l_0_9_71 l_0_9_71)))))
 (let ((?x16793 (+ (+ ?x16789 (* 6.0 (* l_0_9_72 l_0_9_72))) (* 6.0 (* l_0_9_73 l_0_9_73)))))
 (let ((?x16797 (+ (+ ?x16793 (* 6.0 (* l_0_9_74 l_0_9_74))) (* 6.0 (* l_0_9_75 l_0_9_75)))))
 (= ?x16797 0.0))))))))))))))))
(assert
 (let ((?x15173 (* l_0_9_78 l_0_9_78)))
 (let ((?x15168 (* l_0_9_77 l_0_9_77)))
 (let ((?x15923 (* l_0_9_18 l_0_9_18)))
 (let ((?x16846 (* 4.0 ?x15923)))
 (let ((?x6742 (* l_0_9_17 l_0_9_17)))
 (let ((?x8271 (* 4.0 ?x6742)))
 (let ((?x16853 (- (- (+ ?x8271 ?x16846) (* (* 4.0 l_0_9_32) l_0_9_32)) (* (* 4.0 l_0_9_33) l_0_9_33))))
 (= (+ (+ ?x16853 ?x15168) ?x15173) 0.0)))))))))
(assert
 (let ((?x15170 (* 2.0 l_0_9_78)))
 (let ((?x15254 (* ?x15170 l_0_9_80)))
 (let ((?x15165 (* 2.0 l_0_9_77)))
 (let ((?x15252 (* ?x15165 l_0_9_79)))
 (let ((?x10696 (* l_0_9_63 l_0_9_63)))
 (let ((?x10697 (* 4.0 ?x10696)))
 (let ((?x10692 (* l_0_9_62 l_0_9_62)))
 (let ((?x15187 (* 4.0 ?x10692)))
 (let ((?x8131 (+ (* (* 8.0 l_0_9_17) l_0_9_19) (* (* 8.0 l_0_9_18) l_0_9_20))))
 (let ((?x1586 (- (- ?x8131 (* (* 8.0 l_0_9_32) l_0_9_34)) (* (* 8.0 l_0_9_33) l_0_9_35))))
 (let ((?x16870 (- (- ?x1586 (* (* 4.0 l_0_9_47) l_0_9_47)) (* (* 4.0 l_0_9_48) l_0_9_48))))
 (= (+ (+ (+ (+ ?x16870 ?x15187) ?x10697) ?x15252) ?x15254) 0.0)))))))))))))
(assert
 (let ((?x15170 (* 2.0 l_0_9_78)))
 (let ((?x15355 (* ?x15170 l_0_9_87)))
 (let ((?x15165 (* 2.0 l_0_9_77)))
 (let ((?x15353 (* ?x15165 l_0_9_86)))
 (let ((?x15156 (* l_0_9_48 l_0_9_48)))
 (let ((?x16886 (* 3.0 ?x15156)))
 (let ((?x15153 (* l_0_9_47 l_0_9_47)))
 (let ((?x16884 (* 3.0 ?x15153)))
 (let ((?x12722 (+ (* (* 8.0 l_0_9_17) l_0_9_26) (* (* 8.0 l_0_9_18) l_0_9_27))))
 (let ((?x16883 (- (- ?x12722 (* (* 8.0 l_0_9_32) l_0_9_41)) (* (* 8.0 l_0_9_33) l_0_9_42))))
 (let ((?x16893 (- (- (+ (+ ?x16883 ?x16884) ?x16886) (* (* 3.0 l_0_9_62) l_0_9_62)) (* (* 3.0 l_0_9_63) l_0_9_63))))
 (= (+ (+ ?x16893 ?x15353) ?x15355) 0.0)))))))))))))
(assert
 (let ((?x15449 (* l_0_9_81 l_0_9_81)))
 (let ((?x15447 (* l_0_9_80 l_0_9_80)))
 (let ((?x15445 (* l_0_9_79 l_0_9_79)))
 (let ((?x15247 (* 8.0 l_0_9_63)))
 (let ((?x15248 (* ?x15247 l_0_9_65)))
 (let ((?x15242 (* 8.0 l_0_9_62)))
 (let ((?x15243 (* ?x15242 l_0_9_64)))
 (let ((?x15237 (* 8.0 l_0_9_48)))
 (let ((?x15238 (* ?x15237 l_0_9_50)))
 (let ((?x15232 (* 8.0 l_0_9_47)))
 (let ((?x15233 (* ?x15232 l_0_9_49)))
 (let ((?x1651 (+ (* 4.0 (* l_0_9_19 l_0_9_19)) (* 4.0 (* l_0_9_20 l_0_9_20)))))
 (let ((?x16918 (- (+ ?x1651 (* 4.0 (* l_0_9_21 l_0_9_21))) (* (* 4.0 l_0_9_34) l_0_9_34))))
 (let ((?x16924 (- (- ?x16918 (* (* 4.0 l_0_9_35) l_0_9_35)) (* (* 4.0 l_0_9_36) l_0_9_36))))
 (let ((?x16931 (+ (+ (+ (+ (+ (- (- ?x16924 ?x15233) ?x15238) ?x15243) ?x15248) ?x15445) ?x15447) ?x15449)))
 (= ?x16931 0.0)))))))))))))))))
(assert
 (let ((?x15262 (* 2.0 l_0_9_81)))
 (let ((?x15567 (* ?x15262 l_0_9_88)))
 (let ((?x15259 (* 2.0 l_0_9_80)))
 (let ((?x15565 (* ?x15259 l_0_9_87)))
 (let ((?x15256 (* 2.0 l_0_9_79)))
 (let ((?x15563 (* ?x15256 l_0_9_86)))
 (let ((?x15247 (* 8.0 l_0_9_63)))
 (let ((?x15351 (* ?x15247 l_0_9_72)))
 (let ((?x15242 (* 8.0 l_0_9_62)))
 (let ((?x15346 (* ?x15242 l_0_9_71)))
 (let ((?x15237 (* 8.0 l_0_9_48)))
 (let ((?x15341 (* ?x15237 l_0_9_57)))
 (let ((?x15232 (* 8.0 l_0_9_47)))
 (let ((?x15336 (* ?x15232 l_0_9_56)))
 (let ((?x8429 (+ (* (* 8.0 l_0_9_19) l_0_9_26) (* (* 8.0 l_0_9_20) l_0_9_27))))
 (let ((?x16949 (- (+ ?x8429 (* (* 8.0 l_0_9_21) l_0_9_28)) (* (* 8.0 l_0_9_34) l_0_9_41))))
 (let ((?x16953 (- (- ?x16949 (* (* 8.0 l_0_9_35) l_0_9_42)) (* (* 8.0 l_0_9_36) l_0_9_43))))
 (let ((?x16958 (+ (- (+ ?x16953 (* (* 6.0 l_0_9_47) l_0_9_49)) ?x15336) (* (* 6.0 l_0_9_48) l_0_9_50))))
 (let ((?x16964 (- (+ (- (- ?x16958 ?x15341) (* (* 6.0 l_0_9_62) l_0_9_64)) ?x15346) (* (* 6.0 l_0_9_63) l_0_9_65))))
 (= (+ (+ (+ (+ ?x16964 ?x15351) ?x15563) ?x15565) ?x15567) 0.0)))))))))))))))))))))
(assert
 (let ((?x15163 (* (* 4.0 l_0_9_63) l_0_9_63)))
 (let ((?x15160 (* (* 4.0 l_0_9_62) l_0_9_62)))
 (let ((?x15156 (* l_0_9_48 l_0_9_48)))
 (let ((?x15157 (* 4.0 ?x15156)))
 (let ((?x15153 (* l_0_9_47 l_0_9_47)))
 (let ((?x15154 (* 4.0 ?x15153)))
 (= (- (- (+ ?x15154 ?x15157) ?x15160) ?x15163) 0.0))))))))
(assert
 (let ((?x15247 (* 8.0 l_0_9_63)))
 (let ((?x15248 (* ?x15247 l_0_9_65)))
 (let ((?x15242 (* 8.0 l_0_9_62)))
 (let ((?x15243 (* ?x15242 l_0_9_64)))
 (let ((?x15237 (* 8.0 l_0_9_48)))
 (let ((?x15238 (* ?x15237 l_0_9_50)))
 (let ((?x15232 (* 8.0 l_0_9_47)))
 (let ((?x15233 (* ?x15232 l_0_9_49)))
 (= (- (- (+ ?x15233 ?x15238) ?x15243) ?x15248) 0.0))))))))))
(assert
 (let ((?x15247 (* 8.0 l_0_9_63)))
 (let ((?x15250 (* ?x15247 l_0_9_68)))
 (let ((?x15242 (* 8.0 l_0_9_62)))
 (let ((?x15245 (* ?x15242 l_0_9_67)))
 (let ((?x15237 (* 8.0 l_0_9_48)))
 (let ((?x15240 (* ?x15237 l_0_9_53)))
 (let ((?x15232 (* 8.0 l_0_9_47)))
 (let ((?x15235 (* ?x15232 l_0_9_52)))
 (= (- (- (+ ?x15235 ?x15240) ?x15245) ?x15250) 0.0))))))))))
(assert
 (let ((?x15247 (* 8.0 l_0_9_63)))
 (let ((?x15351 (* ?x15247 l_0_9_72)))
 (let ((?x15242 (* 8.0 l_0_9_62)))
 (let ((?x15346 (* ?x15242 l_0_9_71)))
 (let ((?x15237 (* 8.0 l_0_9_48)))
 (let ((?x15341 (* ?x15237 l_0_9_57)))
 (let ((?x15232 (* 8.0 l_0_9_47)))
 (let ((?x15336 (* ?x15232 l_0_9_56)))
 (= (- (- (+ ?x15336 ?x15341) ?x15346) ?x15351) 0.0))))))))))
(assert
 (let ((?x15443 (* (* 4.0 l_0_9_66) l_0_9_66)))
 (let ((?x15437 (* (* 4.0 l_0_9_65) l_0_9_65)))
 (let ((?x15431 (* (* 4.0 l_0_9_64) l_0_9_64)))
 (let ((?x15422 (* l_0_9_51 l_0_9_51)))
 (let ((?x15423 (* 4.0 ?x15422)))
 (let ((?x15416 (* l_0_9_50 l_0_9_50)))
 (let ((?x15417 (* 4.0 ?x15416)))
 (let ((?x15408 (* l_0_9_49 l_0_9_49)))
 (let ((?x15409 (* 4.0 ?x15408)))
 (= (- (- (- (+ (+ ?x15409 ?x15417) ?x15423) ?x15431) ?x15437) ?x15443) 0.0)))))))))))
(assert
 (let ((?x15439 (* 8.0 l_0_9_66)))
 (let ((?x15440 (* ?x15439 l_0_9_69)))
 (let ((?x15433 (* 8.0 l_0_9_65)))
 (let ((?x15434 (* ?x15433 l_0_9_68)))
 (let ((?x15427 (* 8.0 l_0_9_64)))
 (let ((?x15428 (* ?x15427 l_0_9_67)))
 (let ((?x15419 (* 8.0 l_0_9_51)))
 (let ((?x15420 (* ?x15419 l_0_9_54)))
 (let ((?x15413 (* 8.0 l_0_9_50)))
 (let ((?x15414 (* ?x15413 l_0_9_53)))
 (let ((?x15405 (* 8.0 l_0_9_49)))
 (let ((?x15406 (* ?x15405 l_0_9_52)))
 (= (- (- (- (+ (+ ?x15406 ?x15414) ?x15420) ?x15428) ?x15434) ?x15440) 0.0))))))))))))))
(assert
 (let ((?x15439 (* 8.0 l_0_9_66)))
 (let ((?x15549 (* ?x15439 l_0_9_73)))
 (let ((?x15433 (* 8.0 l_0_9_65)))
 (let ((?x15544 (* ?x15433 l_0_9_72)))
 (let ((?x15427 (* 8.0 l_0_9_64)))
 (let ((?x15539 (* ?x15427 l_0_9_71)))
 (let ((?x15419 (* 8.0 l_0_9_51)))
 (let ((?x15522 (* ?x15419 l_0_9_58)))
 (let ((?x15413 (* 8.0 l_0_9_50)))
 (let ((?x15517 (* ?x15413 l_0_9_57)))
 (let ((?x15405 (* 8.0 l_0_9_49)))
 (let ((?x11231 (* ?x15405 l_0_9_56)))
 (= (- (- (- (+ (+ ?x11231 ?x15517) ?x15522) ?x15539) ?x15544) ?x15549) 0.0))))))))))))))
(assert
 (let ((?x15650 (* (* 4.0 l_0_9_70) l_0_9_70)))
 (let ((?x15645 (* (* 4.0 l_0_9_69) l_0_9_69)))
 (let ((?x15642 (* (* 4.0 l_0_9_68) l_0_9_68)))
 (let ((?x15639 (* (* 4.0 l_0_9_67) l_0_9_67)))
 (let ((?x14971 (* l_0_9_55 l_0_9_55)))
 (let ((?x6051 (* 4.0 ?x14971)))
 (let ((?x3070 (* l_0_9_54 l_0_9_54)))
 (let ((?x11205 (* 4.0 ?x3070)))
 (let ((?x14966 (* l_0_9_53 l_0_9_53)))
 (let ((?x11199 (* 4.0 ?x14966)))
 (let ((?x10430 (* l_0_9_52 l_0_9_52)))
 (let ((?x11195 (* 4.0 ?x10430)))
 (let ((?x17069 (- (- (- (- (+ (+ (+ ?x11195 ?x11199) ?x11205) ?x6051) ?x15639) ?x15642) ?x15645) ?x15650)))
 (= ?x17069 0.0)))))))))))))))
(assert
 (let ((?x15561 (* (* 8.0 l_0_9_70) l_0_9_74)))
 (let ((?x15558 (* (* 8.0 l_0_9_69) l_0_9_73)))
 (let ((?x15555 (* (* 8.0 l_0_9_68) l_0_9_72)))
 (let ((?x15552 (* (* 8.0 l_0_9_67) l_0_9_71)))
 (let ((?x15534 (* (* 8.0 l_0_9_55) l_0_9_59)))
 (let ((?x15531 (* (* 8.0 l_0_9_54) l_0_9_58)))
 (let ((?x15528 (* (* 8.0 l_0_9_53) l_0_9_57)))
 (let ((?x15525 (* (* 8.0 l_0_9_52) l_0_9_56)))
 (let ((?x17079 (- (- (- (- (+ (+ (+ ?x15525 ?x15528) ?x15531) ?x15534) ?x15552) ?x15555) ?x15558) ?x15561)))
 (= ?x17079 0.0)))))))))))
(assert
 (let ((?x15799 (* (* 4.0 l_0_9_75) l_0_9_75)))
 (let ((?x15796 (* (* 4.0 l_0_9_74) l_0_9_74)))
 (let ((?x15793 (* (* 4.0 l_0_9_73) l_0_9_73)))
 (let ((?x15790 (* (* 4.0 l_0_9_72) l_0_9_72)))
 (let ((?x15787 (* (* 4.0 l_0_9_71) l_0_9_71)))
 (let ((?x4504 (* l_0_9_60 l_0_9_60)))
 (let ((?x15769 (* 4.0 ?x4504)))
 (let ((?x14453 (* l_0_9_59 l_0_9_59)))
 (let ((?x15767 (* 4.0 ?x14453)))
 (let ((?x4497 (* l_0_9_58 l_0_9_58)))
 (let ((?x15765 (* 4.0 ?x4497)))
 (let ((?x4487 (* l_0_9_57 l_0_9_57)))
 (let ((?x15763 (* 4.0 ?x4487)))
 (let ((?x14445 (* l_0_9_56 l_0_9_56)))
 (let ((?x15761 (* 4.0 ?x14445)))
 (let ((?x17097 (- (- (- (+ (+ (+ (+ ?x15761 ?x15763) ?x15765) ?x15767) ?x15769) ?x15787) ?x15790) ?x15793)))
 (= (- (- ?x17097 ?x15796) ?x15799) 0.0))))))))))))))))))
(assert
 (let ((?x15439 (* 8.0 l_0_9_66)))
 (let ((?x15549 (* ?x15439 l_0_9_73)))
 (let ((?x15433 (* 8.0 l_0_9_65)))
 (let ((?x15544 (* ?x15433 l_0_9_72)))
 (let ((?x15427 (* 8.0 l_0_9_64)))
 (let ((?x15539 (* ?x15427 l_0_9_71)))
 (let ((?x15422 (* l_0_9_51 l_0_9_51)))
 (let ((?x17110 (* 3.0 ?x15422)))
 (let ((?x15419 (* 8.0 l_0_9_51)))
 (let ((?x15522 (* ?x15419 l_0_9_58)))
 (let ((?x15416 (* l_0_9_50 l_0_9_50)))
 (let ((?x17107 (* 3.0 ?x15416)))
 (let ((?x15413 (* 8.0 l_0_9_50)))
 (let ((?x15517 (* ?x15413 l_0_9_57)))
 (let ((?x15408 (* l_0_9_49 l_0_9_49)))
 (let ((?x17104 (* 3.0 ?x15408)))
 (let ((?x17109 (- (+ (- (+ (* (* (- 8.0) l_0_9_49) l_0_9_56) ?x17104) ?x15517) ?x17107) ?x15522)))
 (let ((?x17116 (+ (- (+ (+ ?x17109 ?x17110) ?x15539) (* (* 3.0 l_0_9_64) l_0_9_64)) ?x15544)))
 (let ((?x17123 (- (+ (- ?x17116 (* (* 3.0 l_0_9_65) l_0_9_65)) ?x15549) (* (* 3.0 l_0_9_66) l_0_9_66))))
 (= ?x17123 0.0)))))))))))))))))))))
(assert
 (let ((?x17153 (- (* (* (- 4.0) l_0_9_49) l_0_9_49) (* (* 4.0 l_0_9_50) l_0_9_50))))
 (let ((?x17157 (+ (- ?x17153 (* (* 4.0 l_0_9_51) l_0_9_51)) (* 4.0 (* l_0_9_64 l_0_9_64)))))
 (let ((?x17159 (+ (+ ?x17157 (* 4.0 (* l_0_9_65 l_0_9_65))) (* 4.0 (* l_0_9_66 l_0_9_66)))))
 (= ?x17159 0.0)))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_121 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_130 0.0))
(assert
 (>= l_0_9_135 0.0))
(assert
 (let ((?x17212 (* l_0_10_91 l_0_10_91)))
 (let ((?x17198 (* l_0_10_136 l_0_10_136)))
 (let ((?x17196 (* l_0_10_121 l_0_10_121)))
 (let ((?x17199 (- (- (- (* (- 4.0) _a_0_) (* l_0_10_106 l_0_10_106)) ?x17196) ?x17198)))
 (let ((?x17205 (+ (- ?x17199 (* (* 1.0 l_0_10_16) l_0_10_16)) (* 1.0 (* l_0_10_31 l_0_10_31)))))
 (let ((?x17211 (+ (- ?x17205 (* (* 1.0 l_0_10_46) l_0_10_46)) (* 1.0 (* l_0_10_61 l_0_10_61)))))
 (= (- ?x17211 ?x17212) 0.0))))))))
(assert
 (let ((?x17260 (* (* 4.0 l_0_10_61) l_0_10_61)))
 (let ((?x17253 (* l_0_10_60 l_0_10_60)))
 (let ((?x17254 (* 3.0 ?x17253)))
 (let ((?x17250 (* l_0_10_59 l_0_10_59)))
 (let ((?x17251 (* 3.0 ?x17250)))
 (let ((?x17247 (* l_0_10_58 l_0_10_58)))
 (let ((?x17248 (* 3.0 ?x17247)))
 (let ((?x17244 (* l_0_10_57 l_0_10_57)))
 (let ((?x17245 (* 3.0 ?x17244)))
 (let ((?x17241 (* l_0_10_56 l_0_10_56)))
 (let ((?x17242 (* 3.0 ?x17241)))
 (let ((?x8681 (* l_0_10_46 l_0_10_46)))
 (let ((?x17239 (* 4.0 ?x8681)))
 (let ((?x17235 (+ (* (* (- 24.0) l_0_10_16) l_0_10_26) (* (* 24.0 l_0_10_31) l_0_10_41))))
 (let ((?x17246 (+ (+ (+ (- ?x17235 (* (* 12.0 l_0_10_46) l_0_10_56)) ?x17239) ?x17242) ?x17245)))
 (let ((?x17258 (+ (+ (+ (+ ?x17246 ?x17248) ?x17251) ?x17254) (* (* 12.0 l_0_10_61) l_0_10_71))))
 (let ((?x17267 (- (- (- ?x17258 ?x17260) (* (* 3.0 l_0_10_71) l_0_10_71)) (* (* 3.0 l_0_10_72) l_0_10_72))))
 (let ((?x17273 (- (- ?x17267 (* (* 3.0 l_0_10_73) l_0_10_73)) (* (* 3.0 l_0_10_74) l_0_10_74))))
 (= (- (- ?x17273 (* (* 3.0 l_0_10_75) l_0_10_75)) 4.0) 0.0))))))))))))))))))))
(assert
 (let ((?x17340 (* l_0_10_150 l_0_10_150)))
 (let ((?x17338 (* l_0_10_149 l_0_10_149)))
 (let ((?x17336 (* l_0_10_148 l_0_10_148)))
 (let ((?x17334 (* l_0_10_147 l_0_10_147)))
 (let ((?x17332 (* l_0_10_146 l_0_10_146)))
 (let ((?x17330 (* l_0_10_135 l_0_10_135)))
 (let ((?x17328 (* l_0_10_134 l_0_10_134)))
 (let ((?x17326 (* l_0_10_133 l_0_10_133)))
 (let ((?x17324 (* l_0_10_132 l_0_10_132)))
 (let ((?x17322 (* l_0_10_131 l_0_10_131)))
 (let ((?x17320 (* l_0_10_120 l_0_10_120)))
 (let ((?x17318 (* l_0_10_119 l_0_10_119)))
 (let ((?x17316 (* l_0_10_118 l_0_10_118)))
 (let ((?x17314 (* l_0_10_117 l_0_10_117)))
 (let ((?x17312 (* l_0_10_116 l_0_10_116)))
 (let ((?x17310 (* l_0_10_105 l_0_10_105)))
 (let ((?x17308 (* l_0_10_104 l_0_10_104)))
 (let ((?x17306 (* l_0_10_103 l_0_10_103)))
 (let ((?x17307 (- (- (* (- l_0_10_101) l_0_10_101) (* l_0_10_102 l_0_10_102)) ?x17306)))
 (let ((?x17321 (- (- (- (- (- (- (- ?x17307 ?x17308) ?x17310) ?x17312) ?x17314) ?x17316) ?x17318) ?x17320)))
 (let ((?x17335 (- (- (- (- (- (- (- ?x17321 ?x17322) ?x17324) ?x17326) ?x17328) ?x17330) ?x17332) ?x17334)))
 (let ((?x17344 (- (- (- (- ?x17335 ?x17336) ?x17338) ?x17340) (* (* 12.0 l_0_10_16) l_0_10_16))))
 (let ((?x17350 (- (- ?x17344 (* (* 1.0 l_0_10_26) l_0_10_26)) (* (* 1.0 l_0_10_27) l_0_10_27))))
 (let ((?x17356 (- (- ?x17350 (* (* 1.0 l_0_10_28) l_0_10_28)) (* (* 1.0 l_0_10_29) l_0_10_29))))
 (let ((?x17361 (+ (- ?x17356 (* (* 1.0 l_0_10_30) l_0_10_30)) (* 12.0 (* l_0_10_31 l_0_10_31)))))
 (let ((?x17367 (+ (+ ?x17361 (* 1.0 (* l_0_10_41 l_0_10_41))) (* 1.0 (* l_0_10_42 l_0_10_42)))))
 (let ((?x17373 (+ (+ ?x17367 (* 1.0 (* l_0_10_43 l_0_10_43))) (* 1.0 (* l_0_10_44 l_0_10_44)))))
 (let ((?x17379 (+ (+ ?x17373 (* 1.0 (* l_0_10_45 l_0_10_45))) (* (* 6.0 l_0_10_46) l_0_10_56))))
 (let ((?x17384 (- (- ?x17379 (* (* 6.0 l_0_10_46) l_0_10_46)) (* (* 1.0 l_0_10_56) l_0_10_56))))
 (let ((?x17390 (- (- ?x17384 (* (* 1.0 l_0_10_57) l_0_10_57)) (* (* 1.0 l_0_10_58) l_0_10_58))))
 (let ((?x17396 (- (- ?x17390 (* (* 1.0 l_0_10_59) l_0_10_59)) (* (* 1.0 l_0_10_60) l_0_10_60))))
 (let ((?x17401 (+ (- ?x17396 (* (* 6.0 l_0_10_61) l_0_10_71)) (* 6.0 (* l_0_10_61 l_0_10_61)))))
 (let ((?x17405 (+ (+ ?x17401 (* 1.0 (* l_0_10_71 l_0_10_71))) (* 1.0 (* l_0_10_72 l_0_10_72)))))
 (let ((?x17409 (+ (+ ?x17405 (* 1.0 (* l_0_10_73 l_0_10_73))) (* 1.0 (* l_0_10_74 l_0_10_74)))))
 (= (- (+ ?x17409 (* 1.0 (* l_0_10_75 l_0_10_75))) 6.0) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8681 (* l_0_10_46 l_0_10_46)))
 (let ((?x17441 (* 3.0 ?x8681)))
 (let ((?x17425 (- (* (* (- 2.0) l_0_10_101) l_0_10_91) (* (* 2.0 l_0_10_106) l_0_10_116))))
 (let ((?x17431 (- (- ?x17425 (* (* 2.0 l_0_10_121) l_0_10_131)) (* (* 2.0 l_0_10_136) l_0_10_146))))
 (let ((?x17437 (+ (- ?x17431 (* (* 2.0 l_0_10_16) l_0_10_26)) (* (* 2.0 l_0_10_31) l_0_10_41))))
 (let ((?x17445 (+ (+ (- ?x17437 (* (* 2.0 l_0_10_46) l_0_10_56)) ?x17441) (* (* 2.0 l_0_10_61) l_0_10_71))))
 (= (- (- ?x17445 (* (* 3.0 l_0_10_61) l_0_10_61)) 3.0) 0.0))))))))
(assert
 (let ((?x17500 (* l_0_10_76 l_0_10_76)))
 (let ((?x17260 (* (* 4.0 l_0_10_61) l_0_10_61)))
 (let ((?x8681 (* l_0_10_46 l_0_10_46)))
 (let ((?x17239 (* 4.0 ?x8681)))
 (let ((?x17485 (- (- (* (- 4.0) _a_1_) (* l_0_10_1 l_0_10_1)) (* (* 2.0 l_0_10_106) l_0_10_112))))
 (let ((?x17489 (- (- ?x17485 (* (* 2.0 l_0_10_121) l_0_10_127)) (* (* 2.0 l_0_10_136) l_0_10_142))))
 (let ((?x17493 (+ (- ?x17489 (* (* 2.0 l_0_10_16) l_0_10_22)) (* (* 2.0 l_0_10_31) l_0_10_37))))
 (let ((?x17498 (+ (+ (- ?x17493 (* (* 2.0 l_0_10_46) l_0_10_52)) ?x17239) (* (* 2.0 l_0_10_61) l_0_10_67))))
 (= (- (- (- ?x17498 ?x17260) ?x17500) (* (* 2.0 l_0_10_91) l_0_10_97)) 0.0))))))))))
(assert
 (let ((?x17500 (* l_0_10_76 l_0_10_76)))
 (let ((?x17509 (- (- (* (- 4.0) _a_2_) (* (* 2.0 l_0_10_106) l_0_10_107)) (* (* 2.0 l_0_10_121) l_0_10_122))))
 (let ((?x17513 (- (- ?x17509 (* (* 2.0 l_0_10_136) l_0_10_137)) (* (* 2.0 l_0_10_16) l_0_10_17))))
 (let ((?x17517 (+ (+ ?x17513 (* 4.0 (* l_0_10_16 l_0_10_16))) (* (* 2.0 l_0_10_31) l_0_10_32))))
 (let ((?x17522 (- (- ?x17517 (* (* 4.0 l_0_10_31) l_0_10_31)) (* (* 2.0 l_0_10_46) l_0_10_47))))
 (let ((?x17527 (- (+ (+ ?x17522 (* (* 2.0 l_0_10_61) l_0_10_62)) ?x17500) (* (* 2.0 l_0_10_91) l_0_10_92))))
 (= ?x17527 0.0))))))))
(assert
 (let ((?x17209 (* l_0_10_61 l_0_10_61)))
 (let ((?x8689 (* 4.0 ?x17209)))
 (let ((?x17574 (- (* (* (- 2.0) l_0_10_106) l_0_10_109) (* (* 2.0 l_0_10_121) l_0_10_124))))
 (let ((?x17578 (- (- ?x17574 (* (* 2.0 l_0_10_136) l_0_10_139)) (* (* 2.0 l_0_10_16) l_0_10_19))))
 (let ((?x17582 (- (+ ?x17578 (* (* 2.0 l_0_10_31) l_0_10_34)) (* (* 2.0 l_0_10_46) l_0_10_49))))
 (let ((?x17587 (+ (- ?x17582 (* (* 4.0 l_0_10_46) l_0_10_46)) (* (* 2.0 l_0_10_61) l_0_10_64))))
 (= (+ (- (+ ?x17587 ?x8689) (* (* 2.0 l_0_10_91) l_0_10_94)) 4.0) 0.0))))))))
(assert
 (let ((?x17682 (* 2.0 l_0_10_76)))
 (let ((?x17685 (* ?x17682 l_0_10_82)))
 (let ((?x17683 (* ?x17682 l_0_10_77)))
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x17674 (* ?x17673 l_0_10_62)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x17665 (* ?x17664 l_0_10_47)))
 (let ((?x17630 (- (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_107) l_0_10_112))))
 (let ((?x17636 (- (- ?x17630 (* (* 2.0 l_0_10_108) l_0_10_113)) (* (* 2.0 l_0_10_122) l_0_10_127))))
 (let ((?x17642 (- (- ?x17636 (* (* 2.0 l_0_10_123) l_0_10_128)) (* (* 2.0 l_0_10_137) l_0_10_142))))
 (let ((?x17648 (+ (- ?x17642 (* (* 2.0 l_0_10_138) l_0_10_143)) (* (* 8.0 l_0_10_16) l_0_10_22))))
 (let ((?x17654 (- (- ?x17648 (* (* 2.0 l_0_10_17) l_0_10_22)) (* (* 2.0 l_0_10_18) l_0_10_23))))
 (let ((?x17660 (+ (- ?x17654 (* (* 8.0 l_0_10_31) l_0_10_37)) (* (* 2.0 l_0_10_32) l_0_10_37))))
 (let ((?x17669 (- (+ (+ ?x17660 (* (* 2.0 l_0_10_33) l_0_10_38)) ?x17665) (* (* 2.0 l_0_10_47) l_0_10_52))))
 (let ((?x17678 (+ (- (- ?x17669 (* (* 2.0 l_0_10_48) l_0_10_53)) ?x17674) (* (* 2.0 l_0_10_62) l_0_10_67))))
 (let ((?x17689 (- (+ (- (+ ?x17678 (* (* 2.0 l_0_10_63) l_0_10_68)) ?x17683) ?x17685) (* (* 2.0 l_0_10_92) l_0_10_97))))
 (= (- ?x17689 (* (* 2.0 l_0_10_93) l_0_10_98)) 0.0))))))))))))))))))
(assert
 (let ((?x17682 (* 2.0 l_0_10_76)))
 (let ((?x17804 (* ?x17682 l_0_10_79)))
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x17793 (* ?x17673 l_0_10_67)))
 (let ((?x17791 (* ?x17673 l_0_10_64)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x17780 (* ?x17664 l_0_10_52)))
 (let ((?x17778 (* ?x17664 l_0_10_49)))
 (let ((?x17735 (- (* (* (- 2.0) l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_109) l_0_10_112))))
 (let ((?x17741 (- (- ?x17735 (* (* 2.0 l_0_10_110) l_0_10_113)) (* (* 2.0 l_0_10_111) l_0_10_114))))
 (let ((?x17747 (- (- ?x17741 (* (* 2.0 l_0_10_124) l_0_10_127)) (* (* 2.0 l_0_10_125) l_0_10_128))))
 (let ((?x17753 (- (- ?x17747 (* (* 2.0 l_0_10_126) l_0_10_129)) (* (* 2.0 l_0_10_139) l_0_10_142))))
 (let ((?x17759 (- (- ?x17753 (* (* 2.0 l_0_10_140) l_0_10_143)) (* (* 2.0 l_0_10_141) l_0_10_144))))
 (let ((?x17765 (- (- ?x17759 (* (* 2.0 l_0_10_19) l_0_10_22)) (* (* 2.0 l_0_10_20) l_0_10_23))))
 (let ((?x17771 (+ (- ?x17765 (* (* 2.0 l_0_10_21) l_0_10_24)) (* (* 2.0 l_0_10_34) l_0_10_37))))
 (let ((?x17777 (+ (+ ?x17771 (* (* 2.0 l_0_10_35) l_0_10_38)) (* (* 2.0 l_0_10_36) l_0_10_39))))
 (let ((?x17787 (- (- (- (+ ?x17777 ?x17778) ?x17780) (* (* 2.0 l_0_10_49) l_0_10_52)) (* (* 2.0 l_0_10_50) l_0_10_53))))
 (let ((?x17797 (+ (+ (- (- ?x17787 (* (* 2.0 l_0_10_51) l_0_10_54)) ?x17791) ?x17793) (* (* 2.0 l_0_10_64) l_0_10_67))))
 (let ((?x17803 (+ (+ ?x17797 (* (* 2.0 l_0_10_65) l_0_10_68)) (* (* 2.0 l_0_10_66) l_0_10_69))))
 (let ((?x17811 (- (- (- ?x17803 ?x17804) (* (* 2.0 l_0_10_94) l_0_10_97)) (* (* 2.0 l_0_10_95) l_0_10_98))))
 (= (- ?x17811 (* (* 2.0 l_0_10_96) l_0_10_99)) 0.0))))))))))))))))))))))
(assert
 (let ((?x17928 (* l_0_10_99 l_0_10_99)))
 (let ((?x17926 (* l_0_10_98 l_0_10_98)))
 (let ((?x17924 (* l_0_10_97 l_0_10_97)))
 (let ((?x17682 (* 2.0 l_0_10_76)))
 (let ((?x17685 (* ?x17682 l_0_10_82)))
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x17793 (* ?x17673 l_0_10_67)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x17780 (* ?x17664 l_0_10_52)))
 (let ((?x17871 (* l_0_10_145 l_0_10_145)))
 (let ((?x17869 (* l_0_10_144 l_0_10_144)))
 (let ((?x17867 (* l_0_10_143 l_0_10_143)))
 (let ((?x17865 (* l_0_10_142 l_0_10_142)))
 (let ((?x17863 (* l_0_10_130 l_0_10_130)))
 (let ((?x17861 (* l_0_10_129 l_0_10_129)))
 (let ((?x17859 (* l_0_10_128 l_0_10_128)))
 (let ((?x17857 (* l_0_10_127 l_0_10_127)))
 (let ((?x17855 (* l_0_10_115 l_0_10_115)))
 (let ((?x17853 (* l_0_10_114 l_0_10_114)))
 (let ((?x17851 (* l_0_10_113 l_0_10_113)))
 (let ((?x17849 (* l_0_10_112 l_0_10_112)))
 (let ((?x17850 (- (- (* (* (- 2.0) l_0_10_1) l_0_10_7) (* l_0_10_100 l_0_10_100)) ?x17849)))
 (let ((?x17864 (- (- (- (- (- (- (- ?x17850 ?x17851) ?x17853) ?x17855) ?x17857) ?x17859) ?x17861) ?x17863)))
 (let ((?x17875 (- (- (- (- (- ?x17864 ?x17865) ?x17867) ?x17869) ?x17871) (* (* 1.0 l_0_10_22) l_0_10_22))))
 (let ((?x17881 (- (- ?x17875 (* (* 1.0 l_0_10_23) l_0_10_23)) (* (* 1.0 l_0_10_24) l_0_10_24))))
 (let ((?x17887 (+ (- ?x17881 (* (* 1.0 l_0_10_25) l_0_10_25)) (* 1.0 (* l_0_10_37 l_0_10_37)))))
 (let ((?x17893 (+ (+ ?x17887 (* 1.0 (* l_0_10_38 l_0_10_38))) (* 1.0 (* l_0_10_39 l_0_10_39)))))
 (let ((?x17900 (- (+ (+ ?x17893 (* 1.0 (* l_0_10_40 l_0_10_40))) ?x17780) (* (* 1.0 l_0_10_52) l_0_10_52))))
 (let ((?x17906 (- (- ?x17900 (* (* 1.0 l_0_10_53) l_0_10_53)) (* (* 1.0 l_0_10_54) l_0_10_54))))
 (let ((?x17913 (+ (- (- ?x17906 (* (* 1.0 l_0_10_55) l_0_10_55)) ?x17793) (* 1.0 (* l_0_10_67 l_0_10_67)))))
 (let ((?x17919 (+ (+ ?x17913 (* 1.0 (* l_0_10_68 l_0_10_68))) (* 1.0 (* l_0_10_69 l_0_10_69)))))
 (let ((?x17927 (- (- (- (+ ?x17919 (* 1.0 (* l_0_10_70 l_0_10_70))) ?x17685) ?x17924) ?x17926)))
 (= (- ?x17927 ?x17928) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x17682 (* 2.0 l_0_10_76)))
 (let ((?x18064 (* ?x17682 l_0_10_86)))
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x18050 (* ?x17673 l_0_10_71)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x18034 (* ?x17664 l_0_10_56)))
 (let ((?x17962 (- (* (* (- 2.0) l_0_10_1) l_0_10_11) (* (* 2.0 l_0_10_100) l_0_10_104))))
 (let ((?x17968 (- (- ?x17962 (* (* 2.0 l_0_10_101) l_0_10_97)) (* (* 2.0 l_0_10_102) l_0_10_98))))
 (let ((?x17974 (- (- ?x17968 (* (* 2.0 l_0_10_103) l_0_10_99)) (* (* 2.0 l_0_10_112) l_0_10_116))))
 (let ((?x17980 (- (- ?x17974 (* (* 2.0 l_0_10_113) l_0_10_117)) (* (* 2.0 l_0_10_114) l_0_10_118))))
 (let ((?x17986 (- (- ?x17980 (* (* 2.0 l_0_10_115) l_0_10_119)) (* (* 2.0 l_0_10_127) l_0_10_131))))
 (let ((?x17992 (- (- ?x17986 (* (* 2.0 l_0_10_128) l_0_10_132)) (* (* 2.0 l_0_10_129) l_0_10_133))))
 (let ((?x17998 (- (- ?x17992 (* (* 2.0 l_0_10_130) l_0_10_134)) (* (* 2.0 l_0_10_142) l_0_10_146))))
 (let ((?x18004 (- (- ?x17998 (* (* 2.0 l_0_10_143) l_0_10_147)) (* (* 2.0 l_0_10_144) l_0_10_148))))
 (let ((?x18010 (- (- ?x18004 (* (* 2.0 l_0_10_145) l_0_10_149)) (* (* 2.0 l_0_10_22) l_0_10_26))))
 (let ((?x18016 (- (- ?x18010 (* (* 2.0 l_0_10_23) l_0_10_27)) (* (* 2.0 l_0_10_24) l_0_10_28))))
 (let ((?x18022 (+ (- ?x18016 (* (* 2.0 l_0_10_25) l_0_10_29)) (* (* 2.0 l_0_10_37) l_0_10_41))))
 (let ((?x18028 (+ (+ ?x18022 (* (* 2.0 l_0_10_38) l_0_10_42)) (* (* 2.0 l_0_10_39) l_0_10_43))))
 (let ((?x18033 (+ (+ ?x18028 (* (* 2.0 l_0_10_40) l_0_10_44)) (* (* 6.0 l_0_10_46) l_0_10_52))))
 (let ((?x18041 (- (- (+ ?x18033 ?x18034) (* (* 2.0 l_0_10_52) l_0_10_56)) (* (* 2.0 l_0_10_53) l_0_10_57))))
 (let ((?x18047 (- (- ?x18041 (* (* 2.0 l_0_10_54) l_0_10_58)) (* (* 2.0 l_0_10_55) l_0_10_59))))
 (let ((?x18054 (+ (- (- ?x18047 (* (* 6.0 l_0_10_61) l_0_10_67)) ?x18050) (* (* 2.0 l_0_10_67) l_0_10_71))))
 (let ((?x18060 (+ (+ ?x18054 (* (* 2.0 l_0_10_68) l_0_10_72)) (* (* 2.0 l_0_10_69) l_0_10_73))))
 (= (- (+ ?x18060 (* (* 2.0 l_0_10_70) l_0_10_74)) ?x18064) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x18159 (* l_0_10_78 l_0_10_78)))
 (let ((?x18156 (* 2.0 l_0_10_78)))
 (let ((?x18157 (* ?x18156 l_0_10_83)))
 (let ((?x18154 (* l_0_10_77 l_0_10_77)))
 (let ((?x18151 (* 2.0 l_0_10_77)))
 (let ((?x18152 (* ?x18151 l_0_10_82)))
 (let ((?x18149 (* (* 4.0 l_0_10_63) l_0_10_63)))
 (let ((?x18146 (* (* 4.0 l_0_10_62) l_0_10_62)))
 (let ((?x18142 (* l_0_10_48 l_0_10_48)))
 (let ((?x18143 (* 4.0 ?x18142)))
 (let ((?x18139 (* l_0_10_47 l_0_10_47)))
 (let ((?x18140 (* 4.0 ?x18139)))
 (let ((?x18131 (* l_0_10_3 l_0_10_3)))
 (let ((?x18129 (* l_0_10_2 l_0_10_2)))
 (let ((?x18128 (+ (* (* 8.0 l_0_10_17) l_0_10_22) (* (* 8.0 l_0_10_18) l_0_10_23))))
 (let ((?x18138 (- (- (- (- ?x18128 ?x18129) ?x18131) (* (* 8.0 l_0_10_32) l_0_10_37)) (* (* 8.0 l_0_10_33) l_0_10_38))))
 (let ((?x18158 (+ (- (+ (- (- (+ (+ ?x18138 ?x18140) ?x18143) ?x18146) ?x18149) ?x18152) ?x18154) ?x18157)))
 (= (- ?x18158 ?x18159) 0.0)))))))))))))))))))
(assert
 (let ((?x18236 (* 2.0 l_0_10_81)))
 (let ((?x18237 (* ?x18236 l_0_10_84)))
 (let ((?x18233 (* 2.0 l_0_10_80)))
 (let ((?x18234 (* ?x18233 l_0_10_83)))
 (let ((?x18230 (* 2.0 l_0_10_79)))
 (let ((?x18231 (* ?x18230 l_0_10_82)))
 (let ((?x18156 (* 2.0 l_0_10_78)))
 (let ((?x18228 (* ?x18156 l_0_10_80)))
 (let ((?x18151 (* 2.0 l_0_10_77)))
 (let ((?x18226 (* ?x18151 l_0_10_79)))
 (let ((?x18221 (* 8.0 l_0_10_63)))
 (let ((?x18224 (* ?x18221 l_0_10_68)))
 (let ((?x18222 (* ?x18221 l_0_10_65)))
 (let ((?x18216 (* 8.0 l_0_10_62)))
 (let ((?x18219 (* ?x18216 l_0_10_67)))
 (let ((?x18217 (* ?x18216 l_0_10_64)))
 (let ((?x18211 (* 8.0 l_0_10_48)))
 (let ((?x18214 (* ?x18211 l_0_10_53)))
 (let ((?x18212 (* ?x18211 l_0_10_50)))
 (let ((?x18206 (* 8.0 l_0_10_47)))
 (let ((?x18209 (* ?x18206 l_0_10_52)))
 (let ((?x18207 (* ?x18206 l_0_10_49)))
 (let ((?x18187 (- (* (* 8.0 l_0_10_19) l_0_10_22) (* (* 2.0 l_0_10_2) l_0_10_4))))
 (let ((?x18193 (+ (+ ?x18187 (* (* 8.0 l_0_10_20) l_0_10_23)) (* (* 8.0 l_0_10_21) l_0_10_24))))
 (let ((?x18199 (- (- ?x18193 (* (* 2.0 l_0_10_3) l_0_10_5)) (* (* 8.0 l_0_10_34) l_0_10_37))))
 (let ((?x18205 (- (- ?x18199 (* (* 8.0 l_0_10_35) l_0_10_38)) (* (* 8.0 l_0_10_36) l_0_10_39))))
 (let ((?x18223 (- (+ (- (- (+ (- (+ ?x18205 ?x18207) ?x18209) ?x18212) ?x18214) ?x18217) ?x18219) ?x18222)))
 (= (+ (+ (+ (- (- (+ ?x18223 ?x18224) ?x18226) ?x18228) ?x18231) ?x18234) ?x18237) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x18322 (* l_0_10_85 l_0_10_85)))
 (let ((?x18320 (* l_0_10_84 l_0_10_84)))
 (let ((?x18318 (* l_0_10_83 l_0_10_83)))
 (let ((?x18316 (* l_0_10_82 l_0_10_82)))
 (let ((?x18156 (* 2.0 l_0_10_78)))
 (let ((?x18157 (* ?x18156 l_0_10_83)))
 (let ((?x18151 (* 2.0 l_0_10_77)))
 (let ((?x18152 (* ?x18151 l_0_10_82)))
 (let ((?x18221 (* 8.0 l_0_10_63)))
 (let ((?x18224 (* ?x18221 l_0_10_68)))
 (let ((?x18216 (* 8.0 l_0_10_62)))
 (let ((?x18219 (* ?x18216 l_0_10_67)))
 (let ((?x18211 (* 8.0 l_0_10_48)))
 (let ((?x18214 (* ?x18211 l_0_10_53)))
 (let ((?x18206 (* 8.0 l_0_10_47)))
 (let ((?x18209 (* ?x18206 l_0_10_52)))
 (let ((?x3320 (* l_0_10_25 l_0_10_25)))
 (let ((?x18294 (* 4.0 ?x3320)))
 (let ((?x13759 (* l_0_10_24 l_0_10_24)))
 (let ((?x18292 (* 4.0 ?x13759)))
 (let ((?x13715 (* l_0_10_23 l_0_10_23)))
 (let ((?x18290 (* 4.0 ?x13715)))
 (let ((?x13711 (* l_0_10_22 l_0_10_22)))
 (let ((?x14100 (* 4.0 ?x13711)))
 (let ((?x18295 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_2) l_0_10_7) ?x14100) ?x18290) ?x18292) ?x18294)))
 (let ((?x18300 (- (- ?x18295 (* (* 2.0 l_0_10_3) l_0_10_8)) (* (* 4.0 l_0_10_37) l_0_10_37))))
 (let ((?x18306 (- (- ?x18300 (* (* 4.0 l_0_10_38) l_0_10_38)) (* (* 4.0 l_0_10_39) l_0_10_39))))
 (let ((?x18312 (- (+ (+ (- ?x18306 (* (* 4.0 l_0_10_40) l_0_10_40)) ?x18209) ?x18214) ?x18219)))
 (let ((?x18323 (+ (+ (+ (+ (- (- (- ?x18312 ?x18224) ?x18152) ?x18157) ?x18316) ?x18318) ?x18320) ?x18322)))
 (= ?x18323 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18394 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x18391 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x18388 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x18385 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x18156 (* 2.0 l_0_10_78)))
 (let ((?x18382 (* ?x18156 l_0_10_87)))
 (let ((?x18151 (* 2.0 l_0_10_77)))
 (let ((?x18380 (* ?x18151 l_0_10_86)))
 (let ((?x18221 (* 8.0 l_0_10_63)))
 (let ((?x18378 (* ?x18221 l_0_10_72)))
 (let ((?x18216 (* 8.0 l_0_10_62)))
 (let ((?x18373 (* ?x18216 l_0_10_71)))
 (let ((?x18211 (* 8.0 l_0_10_48)))
 (let ((?x18368 (* ?x18211 l_0_10_57)))
 (let ((?x18206 (* 8.0 l_0_10_47)))
 (let ((?x18363 (* ?x18206 l_0_10_56)))
 (let ((?x18335 (- (* (* (- 2.0) l_0_10_11) l_0_10_2) (* (* 2.0 l_0_10_12) l_0_10_3))))
 (let ((?x18341 (+ (+ ?x18335 (* (* 8.0 l_0_10_22) l_0_10_26)) (* (* 8.0 l_0_10_23) l_0_10_27))))
 (let ((?x18347 (+ (+ ?x18341 (* (* 8.0 l_0_10_24) l_0_10_28)) (* (* 8.0 l_0_10_25) l_0_10_29))))
 (let ((?x18353 (- (- ?x18347 (* (* 8.0 l_0_10_37) l_0_10_41)) (* (* 8.0 l_0_10_38) l_0_10_42))))
 (let ((?x18359 (- (- ?x18353 (* (* 8.0 l_0_10_39) l_0_10_43)) (* (* 8.0 l_0_10_40) l_0_10_44))))
 (let ((?x18367 (+ (+ (+ ?x18359 (* (* 6.0 l_0_10_47) l_0_10_52)) ?x18363) (* (* 6.0 l_0_10_48) l_0_10_53))))
 (let ((?x18377 (- (- (- (+ ?x18367 ?x18368) (* (* 6.0 l_0_10_62) l_0_10_67)) ?x18373) (* (* 6.0 l_0_10_63) l_0_10_68))))
 (let ((?x18395 (+ (+ (+ (+ (- (- (- ?x18377 ?x18378) ?x18380) ?x18382) ?x18385) ?x18388) ?x18391) ?x18394)))
 (= ?x18395 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18490 (* l_0_10_81 l_0_10_81)))
 (let ((?x18488 (* l_0_10_80 l_0_10_80)))
 (let ((?x18486 (* l_0_10_79 l_0_10_79)))
 (let ((?x18484 (* (* 4.0 l_0_10_66) l_0_10_66)))
 (let ((?x18480 (* 8.0 l_0_10_66)))
 (let ((?x18481 (* ?x18480 l_0_10_69)))
 (let ((?x18478 (* (* 4.0 l_0_10_65) l_0_10_65)))
 (let ((?x18474 (* 8.0 l_0_10_65)))
 (let ((?x18475 (* ?x18474 l_0_10_68)))
 (let ((?x18472 (* (* 4.0 l_0_10_64) l_0_10_64)))
 (let ((?x18468 (* 8.0 l_0_10_64)))
 (let ((?x18469 (* ?x18468 l_0_10_67)))
 (let ((?x18466 (* l_0_10_6 l_0_10_6)))
 (let ((?x18463 (* l_0_10_51 l_0_10_51)))
 (let ((?x18464 (* 4.0 ?x18463)))
 (let ((?x18460 (* 8.0 l_0_10_51)))
 (let ((?x18461 (* ?x18460 l_0_10_54)))
 (let ((?x18457 (* l_0_10_50 l_0_10_50)))
 (let ((?x18458 (* 4.0 ?x18457)))
 (let ((?x18454 (* 8.0 l_0_10_50)))
 (let ((?x18455 (* ?x18454 l_0_10_53)))
 (let ((?x18452 (* l_0_10_5 l_0_10_5)))
 (let ((?x18449 (* l_0_10_49 l_0_10_49)))
 (let ((?x18450 (* 4.0 ?x18449)))
 (let ((?x18446 (* 8.0 l_0_10_49)))
 (let ((?x18447 (* ?x18446 l_0_10_52)))
 (let ((?x18459 (+ (- (- (+ (- (* (- l_0_10_4) l_0_10_4) ?x18447) ?x18450) ?x18452) ?x18455) ?x18458)))
 (let ((?x18479 (- (+ (- (+ (- (+ (- ?x18459 ?x18461) ?x18464) ?x18466) ?x18469) ?x18472) ?x18475) ?x18478)))
 (= (- (- (- (- (+ ?x18479 ?x18481) ?x18484) ?x18486) ?x18488) ?x18490) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x18236 (* 2.0 l_0_10_81)))
 (let ((?x18237 (* ?x18236 l_0_10_84)))
 (let ((?x18233 (* 2.0 l_0_10_80)))
 (let ((?x18234 (* ?x18233 l_0_10_83)))
 (let ((?x18230 (* 2.0 l_0_10_79)))
 (let ((?x18231 (* ?x18230 l_0_10_82)))
 (let ((?x17920 (* l_0_10_70 l_0_10_70)))
 (let ((?x18581 (* 4.0 ?x17920)))
 (let ((?x17917 (* l_0_10_69 l_0_10_69)))
 (let ((?x18579 (* 4.0 ?x17917)))
 (let ((?x17914 (* l_0_10_68 l_0_10_68)))
 (let ((?x18577 (* 4.0 ?x17914)))
 (let ((?x17911 (* l_0_10_67 l_0_10_67)))
 (let ((?x18575 (* 4.0 ?x17911)))
 (let ((?x18480 (* 8.0 l_0_10_66)))
 (let ((?x18481 (* ?x18480 l_0_10_69)))
 (let ((?x18474 (* 8.0 l_0_10_65)))
 (let ((?x18475 (* ?x18474 l_0_10_68)))
 (let ((?x18468 (* 8.0 l_0_10_64)))
 (let ((?x18469 (* ?x18468 l_0_10_67)))
 (let ((?x18460 (* 8.0 l_0_10_51)))
 (let ((?x18461 (* ?x18460 l_0_10_54)))
 (let ((?x18454 (* 8.0 l_0_10_50)))
 (let ((?x18455 (* ?x18454 l_0_10_53)))
 (let ((?x18446 (* 8.0 l_0_10_49)))
 (let ((?x18447 (* ?x18446 l_0_10_52)))
 (let ((?x18554 (- (+ (* (* (- 2.0) l_0_10_4) l_0_10_7) ?x18447) (* (* 2.0 l_0_10_5) l_0_10_8))))
 (let ((?x18562 (- (- (+ (+ ?x18554 ?x18455) ?x18461) (* (* 4.0 l_0_10_52) l_0_10_52)) (* (* 4.0 l_0_10_53) l_0_10_53))))
 (let ((?x18568 (- (- ?x18562 (* (* 4.0 l_0_10_54) l_0_10_54)) (* (* 4.0 l_0_10_55) l_0_10_55))))
 (let ((?x18574 (- (- (- (- ?x18568 (* (* 2.0 l_0_10_6) l_0_10_9)) ?x18469) ?x18475) ?x18481)))
 (let ((?x18585 (- (- (- (+ (+ (+ (+ ?x18574 ?x18575) ?x18577) ?x18579) ?x18581) ?x18231) ?x18234) ?x18237)))
 (= ?x18585 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x18236 (* 2.0 l_0_10_81)))
 (let ((?x18638 (* ?x18236 l_0_10_88)))
 (let ((?x18233 (* 2.0 l_0_10_80)))
 (let ((?x18636 (* ?x18233 l_0_10_87)))
 (let ((?x18230 (* 2.0 l_0_10_79)))
 (let ((?x18634 (* ?x18230 l_0_10_86)))
 (let ((?x18632 (* (* 8.0 l_0_10_70) l_0_10_74)))
 (let ((?x18629 (* (* 8.0 l_0_10_69) l_0_10_73)))
 (let ((?x18626 (* (* 8.0 l_0_10_68) l_0_10_72)))
 (let ((?x18623 (* (* 8.0 l_0_10_67) l_0_10_71)))
 (let ((?x18480 (* 8.0 l_0_10_66)))
 (let ((?x18620 (* ?x18480 l_0_10_73)))
 (let ((?x18474 (* 8.0 l_0_10_65)))
 (let ((?x18615 (* ?x18474 l_0_10_72)))
 (let ((?x18468 (* 8.0 l_0_10_64)))
 (let ((?x18610 (* ?x18468 l_0_10_71)))
 (let ((?x18605 (* (* 8.0 l_0_10_55) l_0_10_59)))
 (let ((?x18602 (* (* 8.0 l_0_10_54) l_0_10_58)))
 (let ((?x18599 (* (* 8.0 l_0_10_53) l_0_10_57)))
 (let ((?x18596 (* (* 8.0 l_0_10_52) l_0_10_56)))
 (let ((?x18460 (* 8.0 l_0_10_51)))
 (let ((?x2164 (* ?x18460 l_0_10_58)))
 (let ((?x18454 (* 8.0 l_0_10_50)))
 (let ((?x14243 (* ?x18454 l_0_10_57)))
 (let ((?x18446 (* 8.0 l_0_10_49)))
 (let ((?x4322 (* ?x18446 l_0_10_56)))
 (let ((?x14428 (- (* (* (- 2.0) l_0_10_11) l_0_10_4) (* (* 2.0 l_0_10_12) l_0_10_5))))
 (let ((?x4330 (+ (- ?x14428 (* (* 2.0 l_0_10_13) l_0_10_6)) (* (* 6.0 l_0_10_49) l_0_10_52))))
 (let ((?x14230 (+ (+ (+ (+ ?x4330 ?x4322) (* (* 6.0 l_0_10_50) l_0_10_53)) ?x14243) (* (* 6.0 l_0_10_51) l_0_10_54))))
 (let ((?x18609 (- (- (- (- (- (+ ?x14230 ?x2164) ?x18596) ?x18599) ?x18602) ?x18605) (* (* 6.0 l_0_10_64) l_0_10_67))))
 (let ((?x18619 (- (- (- (- ?x18609 ?x18610) (* (* 6.0 l_0_10_65) l_0_10_68)) ?x18615) (* (* 6.0 l_0_10_66) l_0_10_69))))
 (let ((?x18637 (- (- (+ (+ (+ (+ (- ?x18619 ?x18620) ?x18623) ?x18626) ?x18629) ?x18632) ?x18634) ?x18636)))
 (= (- ?x18637 ?x18638) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18669 (* l_0_10_9 l_0_10_9)))
 (let ((?x18322 (* l_0_10_85 l_0_10_85)))
 (let ((?x18320 (* l_0_10_84 l_0_10_84)))
 (let ((?x18318 (* l_0_10_83 l_0_10_83)))
 (let ((?x18316 (* l_0_10_82 l_0_10_82)))
 (let ((?x9946 (* l_0_10_8 l_0_10_8)))
 (let ((?x14454 (* (* 4.0 l_0_10_70) l_0_10_70)))
 (let ((?x14413 (* l_0_10_7 l_0_10_7)))
 (let ((?x4393 (* (* 4.0 l_0_10_69) l_0_10_69)))
 (let ((?x9859 (* (* 4.0 l_0_10_68) l_0_10_68)))
 (let ((?x9856 (* (* 4.0 l_0_10_67) l_0_10_67)))
 (let ((?x13766 (* l_0_10_55 l_0_10_55)))
 (let ((?x14266 (* 4.0 ?x13766)))
 (let ((?x17948 (* l_0_10_54 l_0_10_54)))
 (let ((?x14251 (* 4.0 ?x17948)))
 (let ((?x17944 (* l_0_10_53 l_0_10_53)))
 (let ((?x14235 (* 4.0 ?x17944)))
 (let ((?x3380 (* l_0_10_52 l_0_10_52)))
 (let ((?x4255 (* 4.0 ?x3380)))
 (let ((?x14420 (- (+ (+ (+ (+ (* (- l_0_10_10) l_0_10_10) ?x4255) ?x14235) ?x14251) ?x14266) ?x9856)))
 (let ((?x14460 (- (- (- (- (- (- (- ?x14420 ?x9859) ?x4393) ?x14413) ?x14454) ?x9946) ?x18316) ?x18318)))
 (= (- (- (- ?x14460 ?x18320) ?x18322) ?x18669) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18394 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x18391 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x18388 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x18385 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x18632 (* (* 8.0 l_0_10_70) l_0_10_74)))
 (let ((?x18629 (* (* 8.0 l_0_10_69) l_0_10_73)))
 (let ((?x18626 (* (* 8.0 l_0_10_68) l_0_10_72)))
 (let ((?x18623 (* (* 8.0 l_0_10_67) l_0_10_71)))
 (let ((?x13766 (* l_0_10_55 l_0_10_55)))
 (let ((?x18697 (* 3.0 ?x13766)))
 (let ((?x18605 (* (* 8.0 l_0_10_55) l_0_10_59)))
 (let ((?x17948 (* l_0_10_54 l_0_10_54)))
 (let ((?x18694 (* 3.0 ?x17948)))
 (let ((?x18602 (* (* 8.0 l_0_10_54) l_0_10_58)))
 (let ((?x17944 (* l_0_10_53 l_0_10_53)))
 (let ((?x18691 (* 3.0 ?x17944)))
 (let ((?x18599 (* (* 8.0 l_0_10_53) l_0_10_57)))
 (let ((?x3380 (* l_0_10_52 l_0_10_52)))
 (let ((?x18688 (* 3.0 ?x3380)))
 (let ((?x18596 (* (* 8.0 l_0_10_52) l_0_10_56)))
 (let ((?x18682 (- (* (* (- 2.0) l_0_10_10) l_0_10_14) (* (* 2.0 l_0_10_11) l_0_10_7))))
 (let ((?x18686 (- (- ?x18682 (* (* 2.0 l_0_10_12) l_0_10_8)) (* (* 2.0 l_0_10_13) l_0_10_9))))
 (let ((?x18696 (+ (+ (+ (+ (+ (+ (+ ?x18686 ?x18596) ?x18688) ?x18599) ?x18691) ?x18602) ?x18694) ?x18605)))
 (let ((?x18703 (- (- (- (+ ?x18696 ?x18697) ?x18623) (* (* 3.0 l_0_10_67) l_0_10_67)) ?x18626)))
 (let ((?x18710 (- (- (- ?x18703 (* (* 3.0 l_0_10_68) l_0_10_68)) ?x18629) (* (* 3.0 l_0_10_69) l_0_10_69))))
 (let ((?x18716 (- (- (- (- ?x18710 ?x18632) (* (* 3.0 l_0_10_70) l_0_10_70)) ?x18385) ?x18388)))
 (= (- (- ?x18716 ?x18391) ?x18394) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x18790 (* l_0_10_90 l_0_10_90)))
 (let ((?x18788 (* l_0_10_89 l_0_10_89)))
 (let ((?x18786 (* l_0_10_88 l_0_10_88)))
 (let ((?x18784 (* l_0_10_87 l_0_10_87)))
 (let ((?x18782 (* l_0_10_86 l_0_10_86)))
 (let ((?x18780 (* (* 4.0 l_0_10_75) l_0_10_75)))
 (let ((?x18777 (* (* 4.0 l_0_10_74) l_0_10_74)))
 (let ((?x18774 (* (* 4.0 l_0_10_73) l_0_10_73)))
 (let ((?x18771 (* (* 4.0 l_0_10_72) l_0_10_72)))
 (let ((?x18768 (* (* 4.0 l_0_10_71) l_0_10_71)))
 (let ((?x17253 (* l_0_10_60 l_0_10_60)))
 (let ((?x18751 (* 4.0 ?x17253)))
 (let ((?x17250 (* l_0_10_59 l_0_10_59)))
 (let ((?x18749 (* 4.0 ?x17250)))
 (let ((?x17247 (* l_0_10_58 l_0_10_58)))
 (let ((?x18747 (* 4.0 ?x17247)))
 (let ((?x17244 (* l_0_10_57 l_0_10_57)))
 (let ((?x18745 (* 4.0 ?x17244)))
 (let ((?x17241 (* l_0_10_56 l_0_10_56)))
 (let ((?x18743 (* 4.0 ?x17241)))
 (let ((?x14715 (* l_0_10_15 l_0_10_15)))
 (let ((?x4801 (* l_0_10_14 l_0_10_14)))
 (let ((?x4825 (* l_0_10_13 l_0_10_13)))
 (let ((?x10098 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x4825)))
 (let ((?x14631 (+ (- (- (- ?x10098 ?x4801) ?x14715) (* (* 24.0 l_0_10_16) l_0_10_22)) (* (* 24.0 l_0_10_31) l_0_10_37))))
 (let ((?x14646 (+ (- ?x14631 (* (* 12.0 l_0_10_46) l_0_10_52)) (* (* 6.0 l_0_10_52) l_0_10_56))))
 (let ((?x18739 (+ (+ ?x14646 (* (* 6.0 l_0_10_53) l_0_10_57)) (* (* 6.0 l_0_10_54) l_0_10_58))))
 (let ((?x18748 (+ (+ (+ (+ ?x18739 (* (* 6.0 l_0_10_55) l_0_10_59)) ?x18743) ?x18745) ?x18747)))
 (let ((?x18757 (- (+ (+ (+ ?x18748 ?x18749) ?x18751) (* (* 12.0 l_0_10_61) l_0_10_67)) (* (* 6.0 l_0_10_67) l_0_10_71))))
 (let ((?x18763 (- (- ?x18757 (* (* 6.0 l_0_10_68) l_0_10_72)) (* (* 6.0 l_0_10_69) l_0_10_73))))
 (let ((?x18775 (- (- (- (- ?x18763 (* (* 6.0 l_0_10_70) l_0_10_74)) ?x18768) ?x18771) ?x18774)))
 (let ((?x18791 (- (- (- (- (- (- (- ?x18775 ?x18777) ?x18780) ?x18782) ?x18784) ?x18786) ?x18788) ?x18790)))
 (= ?x18791 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18867 (* l_0_10_93 l_0_10_93)))
 (let ((?x18865 (* l_0_10_92 l_0_10_92)))
 (let ((?x17682 (* 2.0 l_0_10_76)))
 (let ((?x17683 (* ?x17682 l_0_10_77)))
 (let ((?x18836 (* l_0_10_138 l_0_10_138)))
 (let ((?x14845 (* l_0_10_137 l_0_10_137)))
 (let ((?x10416 (* l_0_10_123 l_0_10_123)))
 (let ((?x14815 (* l_0_10_122 l_0_10_122)))
 (let ((?x2157 (- (- (* (- l_0_10_107) l_0_10_107) (* l_0_10_108 l_0_10_108)) ?x14815)))
 (let ((?x18839 (+ (- (- (- ?x2157 ?x10416) ?x14845) ?x18836) (* (* 8.0 l_0_10_16) l_0_10_17))))
 (let ((?x18845 (- (- ?x18839 (* (* 1.0 l_0_10_17) l_0_10_17)) (* (* 1.0 l_0_10_18) l_0_10_18))))
 (let ((?x18850 (+ (- ?x18845 (* (* 8.0 l_0_10_31) l_0_10_32)) (* 1.0 (* l_0_10_32 l_0_10_32)))))
 (let ((?x18856 (- (+ ?x18850 (* 1.0 (* l_0_10_33 l_0_10_33))) (* (* 1.0 l_0_10_47) l_0_10_47))))
 (let ((?x18861 (+ (- ?x18856 (* (* 1.0 l_0_10_48) l_0_10_48)) (* 1.0 (* l_0_10_62 l_0_10_62)))))
 (let ((?x18868 (- (- (+ (+ ?x18861 (* 1.0 (* l_0_10_63 l_0_10_63))) ?x17683) ?x18865) ?x18867)))
 (= ?x18868 0.0)))))))))))))))))
(assert
 (let ((?x17682 (* 2.0 l_0_10_76)))
 (let ((?x17804 (* ?x17682 l_0_10_79)))
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x17674 (* ?x17673 l_0_10_62)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x17665 (* ?x17664 l_0_10_47)))
 (let ((?x18902 (- (* (* (- 2.0) l_0_10_107) l_0_10_109) (* (* 2.0 l_0_10_108) l_0_10_110))))
 (let ((?x18906 (- (- ?x18902 (* (* 2.0 l_0_10_122) l_0_10_124)) (* (* 2.0 l_0_10_123) l_0_10_125))))
 (let ((?x18910 (- (- ?x18906 (* (* 2.0 l_0_10_137) l_0_10_139)) (* (* 2.0 l_0_10_138) l_0_10_140))))
 (let ((?x18914 (- (+ ?x18910 (* (* 8.0 l_0_10_16) l_0_10_19)) (* (* 2.0 l_0_10_17) l_0_10_19))))
 (let ((?x18918 (- (- ?x18914 (* (* 2.0 l_0_10_18) l_0_10_20)) (* (* 8.0 l_0_10_31) l_0_10_34))))
 (let ((?x18922 (+ (+ ?x18918 (* (* 2.0 l_0_10_32) l_0_10_34)) (* (* 2.0 l_0_10_33) l_0_10_35))))
 (let ((?x18927 (- (- (- ?x18922 ?x17665) (* (* 2.0 l_0_10_47) l_0_10_49)) (* (* 2.0 l_0_10_48) l_0_10_50))))
 (let ((?x18932 (+ (+ (+ ?x18927 ?x17674) (* (* 2.0 l_0_10_62) l_0_10_64)) (* (* 2.0 l_0_10_63) l_0_10_65))))
 (let ((?x18937 (- (- (+ ?x18932 ?x17804) (* (* 2.0 l_0_10_92) l_0_10_94)) (* (* 2.0 l_0_10_93) l_0_10_95))))
 (= ?x18937 0.0)))))))))))))))))
(assert
 (let ((?x17682 (* 2.0 l_0_10_76)))
 (let ((?x18064 (* ?x17682 l_0_10_86)))
 (let ((?x18961 (- (* (* (- 2.0) l_0_10_101) l_0_10_92) (* (* 2.0 l_0_10_102) l_0_10_93))))
 (let ((?x18965 (- (- ?x18961 (* (* 2.0 l_0_10_107) l_0_10_116)) (* (* 2.0 l_0_10_108) l_0_10_117))))
 (let ((?x18969 (- (- ?x18965 (* (* 2.0 l_0_10_122) l_0_10_131)) (* (* 2.0 l_0_10_123) l_0_10_132))))
 (let ((?x18973 (- (- ?x18969 (* (* 2.0 l_0_10_137) l_0_10_146)) (* (* 2.0 l_0_10_138) l_0_10_147))))
 (let ((?x18977 (- (+ ?x18973 (* (* 8.0 l_0_10_16) l_0_10_26)) (* (* 2.0 l_0_10_17) l_0_10_26))))
 (let ((?x18981 (- (- ?x18977 (* (* 2.0 l_0_10_18) l_0_10_27)) (* (* 8.0 l_0_10_31) l_0_10_41))))
 (let ((?x18985 (+ (+ ?x18981 (* (* 2.0 l_0_10_32) l_0_10_41)) (* (* 2.0 l_0_10_33) l_0_10_42))))
 (let ((?x18989 (- (+ ?x18985 (* (* 6.0 l_0_10_46) l_0_10_47)) (* (* 2.0 l_0_10_47) l_0_10_56))))
 (let ((?x18993 (- (- ?x18989 (* (* 2.0 l_0_10_48) l_0_10_57)) (* (* 6.0 l_0_10_61) l_0_10_62))))
 (let ((?x18997 (+ (+ ?x18993 (* (* 2.0 l_0_10_62) l_0_10_71)) (* (* 2.0 l_0_10_63) l_0_10_72))))
 (= (+ ?x18997 ?x18064) 0.0))))))))))))))
(assert
 (let ((?x19076 (* l_0_10_96 l_0_10_96)))
 (let ((?x19074 (* l_0_10_95 l_0_10_95)))
 (let ((?x19072 (* l_0_10_94 l_0_10_94)))
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x17791 (* ?x17673 l_0_10_64)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x17778 (* ?x17664 l_0_10_49)))
 (let ((?x19035 (* l_0_10_141 l_0_10_141)))
 (let ((?x19033 (* l_0_10_140 l_0_10_140)))
 (let ((?x19031 (* l_0_10_139 l_0_10_139)))
 (let ((?x15122 (* l_0_10_126 l_0_10_126)))
 (let ((?x15118 (* l_0_10_125 l_0_10_125)))
 (let ((?x15123 (* l_0_10_124 l_0_10_124)))
 (let ((?x15115 (* l_0_10_111 l_0_10_111)))
 (let ((?x15117 (- (- (* (- l_0_10_109) l_0_10_109) (* l_0_10_110 l_0_10_110)) ?x15115)))
 (let ((?x19039 (- (- (- (- (- (- (- ?x15117 ?x15123) ?x15118) ?x15122) ?x19031) ?x19033) ?x19035) (* (* 1.0 l_0_10_19) l_0_10_19))))
 (let ((?x19045 (- (- ?x19039 (* (* 1.0 l_0_10_20) l_0_10_20)) (* (* 1.0 l_0_10_21) l_0_10_21))))
 (let ((?x19051 (+ (+ ?x19045 (* 1.0 (* l_0_10_34 l_0_10_34))) (* 1.0 (* l_0_10_35 l_0_10_35)))))
 (let ((?x19058 (- (- (+ ?x19051 (* 1.0 (* l_0_10_36 l_0_10_36))) ?x17778) (* (* 1.0 l_0_10_49) l_0_10_49))))
 (let ((?x19064 (- (- ?x19058 (* (* 1.0 l_0_10_50) l_0_10_50)) (* (* 1.0 l_0_10_51) l_0_10_51))))
 (let ((?x19069 (+ (+ (+ ?x19064 ?x17791) (* 1.0 (* l_0_10_64 l_0_10_64))) (* 1.0 (* l_0_10_65 l_0_10_65)))))
 (let ((?x19077 (- (- (- (+ ?x19069 (* 1.0 (* l_0_10_66 l_0_10_66))) ?x19072) ?x19074) ?x19076)))
 (= ?x19077 0.0))))))))))))))))))))))))
(assert
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x18050 (* ?x17673 l_0_10_71)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x18034 (* ?x17664 l_0_10_56)))
 (let ((?x19100 (- (* (* (- 2.0) l_0_10_101) l_0_10_94) (* (* 2.0 l_0_10_102) l_0_10_95))))
 (let ((?x19104 (- (- ?x19100 (* (* 2.0 l_0_10_103) l_0_10_96)) (* (* 2.0 l_0_10_109) l_0_10_116))))
 (let ((?x19108 (- (- ?x19104 (* (* 2.0 l_0_10_110) l_0_10_117)) (* (* 2.0 l_0_10_111) l_0_10_118))))
 (let ((?x19112 (- (- ?x19108 (* (* 2.0 l_0_10_124) l_0_10_131)) (* (* 2.0 l_0_10_125) l_0_10_132))))
 (let ((?x19116 (- (- ?x19112 (* (* 2.0 l_0_10_126) l_0_10_133)) (* (* 2.0 l_0_10_139) l_0_10_146))))
 (let ((?x19120 (- (- ?x19116 (* (* 2.0 l_0_10_140) l_0_10_147)) (* (* 2.0 l_0_10_141) l_0_10_148))))
 (let ((?x19124 (- (- ?x19120 (* (* 2.0 l_0_10_19) l_0_10_26)) (* (* 2.0 l_0_10_20) l_0_10_27))))
 (let ((?x19128 (+ (- ?x19124 (* (* 2.0 l_0_10_21) l_0_10_28)) (* (* 2.0 l_0_10_34) l_0_10_41))))
 (let ((?x19132 (+ (+ ?x19128 (* (* 2.0 l_0_10_35) l_0_10_42)) (* (* 2.0 l_0_10_36) l_0_10_43))))
 (let ((?x19137 (- (- (+ ?x19132 (* (* 6.0 l_0_10_46) l_0_10_49)) ?x18034) (* (* 2.0 l_0_10_49) l_0_10_56))))
 (let ((?x19141 (- (- ?x19137 (* (* 2.0 l_0_10_50) l_0_10_57)) (* (* 2.0 l_0_10_51) l_0_10_58))))
 (let ((?x19146 (+ (+ (- ?x19141 (* (* 6.0 l_0_10_61) l_0_10_64)) ?x18050) (* (* 2.0 l_0_10_64) l_0_10_71))))
 (let ((?x19150 (+ (+ ?x19146 (* (* 2.0 l_0_10_65) l_0_10_72)) (* (* 2.0 l_0_10_66) l_0_10_73))))
 (= ?x19150 0.0)))))))))))))))))))
(assert
 (let ((?x18790 (* l_0_10_90 l_0_10_90)))
 (let ((?x18788 (* l_0_10_89 l_0_10_89)))
 (let ((?x18786 (* l_0_10_88 l_0_10_88)))
 (let ((?x18784 (* l_0_10_87 l_0_10_87)))
 (let ((?x18782 (* l_0_10_86 l_0_10_86)))
 (let ((?x6374 (* l_0_10_30 l_0_10_30)))
 (let ((?x15453 (* 4.0 ?x6374)))
 (let ((?x13039 (* l_0_10_29 l_0_10_29)))
 (let ((?x11108 (* 4.0 ?x13039)))
 (let ((?x13099 (* l_0_10_28 l_0_10_28)))
 (let ((?x15465 (* 4.0 ?x13099)))
 (let ((?x13096 (* l_0_10_27 l_0_10_27)))
 (let ((?x11111 (* 4.0 ?x13096)))
 (let ((?x13091 (* l_0_10_26 l_0_10_26)))
 (let ((?x15470 (* 4.0 ?x13091)))
 (let ((?x11109 (+ (+ (+ (+ (* (* (- 24.0) l_0_10_16) l_0_10_17) ?x15470) ?x11111) ?x15465) ?x11108)))
 (let ((?x19171 (- (+ (+ ?x11109 ?x15453) (* (* 24.0 l_0_10_31) l_0_10_32)) (* (* 4.0 l_0_10_41) l_0_10_41))))
 (let ((?x19177 (- (- ?x19171 (* (* 4.0 l_0_10_42) l_0_10_42)) (* (* 4.0 l_0_10_43) l_0_10_43))))
 (let ((?x19183 (- (- ?x19177 (* (* 4.0 l_0_10_44) l_0_10_44)) (* (* 4.0 l_0_10_45) l_0_10_45))))
 (let ((?x19187 (+ (- ?x19183 (* (* 12.0 l_0_10_46) l_0_10_47)) (* (* 6.0 l_0_10_47) l_0_10_56))))
 (let ((?x19191 (+ (+ ?x19187 (* (* 6.0 l_0_10_48) l_0_10_57)) (* (* 12.0 l_0_10_61) l_0_10_62))))
 (let ((?x19195 (- (- ?x19191 (* (* 6.0 l_0_10_62) l_0_10_71)) (* (* 6.0 l_0_10_63) l_0_10_72))))
 (= (+ (+ (+ (+ (+ ?x19195 ?x18782) ?x18784) ?x18786) ?x18788) ?x18790) 0.0))))))))))))))))))))))))
(assert
 (let ((?x2245 (* l_0_10_75 l_0_10_75)))
 (let ((?x14843 (* 4.0 ?x2245)))
 (let ((?x12931 (* l_0_10_74 l_0_10_74)))
 (let ((?x18827 (* 4.0 ?x12931)))
 (let ((?x12930 (* l_0_10_73 l_0_10_73)))
 (let ((?x14835 (* 4.0 ?x12930)))
 (let ((?x12922 (* l_0_10_72 l_0_10_72)))
 (let ((?x10363 (* 4.0 ?x12922)))
 (let ((?x12918 (* l_0_10_71 l_0_10_71)))
 (let ((?x18821 (* 4.0 ?x12918)))
 (let ((?x19221 (+ (* (* (- 24.0) l_0_10_16) l_0_10_19) (* (* 24.0 l_0_10_31) l_0_10_34))))
 (let ((?x19225 (+ (- ?x19221 (* (* 12.0 l_0_10_46) l_0_10_49)) (* (* 6.0 l_0_10_49) l_0_10_56))))
 (let ((?x19229 (+ (+ ?x19225 (* (* 6.0 l_0_10_50) l_0_10_57)) (* (* 6.0 l_0_10_51) l_0_10_58))))
 (let ((?x19235 (- (- ?x19229 (* (* 4.0 l_0_10_56) l_0_10_56)) (* (* 4.0 l_0_10_57) l_0_10_57))))
 (let ((?x19241 (- (- ?x19235 (* (* 4.0 l_0_10_58) l_0_10_58)) (* (* 4.0 l_0_10_59) l_0_10_59))))
 (let ((?x19246 (+ (- ?x19241 (* (* 4.0 l_0_10_60) l_0_10_60)) (* (* 12.0 l_0_10_61) l_0_10_64))))
 (let ((?x19250 (- (- ?x19246 (* (* 6.0 l_0_10_64) l_0_10_71)) (* (* 6.0 l_0_10_65) l_0_10_72))))
 (let ((?x19255 (+ (+ (+ (- ?x19250 (* (* 6.0 l_0_10_66) l_0_10_73)) ?x18821) ?x10363) ?x14835)))
 (= (+ (+ ?x19255 ?x18827) ?x14843) 0.0))))))))))))))))))))
(assert
 (let ((?x18851 (* l_0_10_33 l_0_10_33)))
 (let ((?x19275 (* 12.0 ?x18851)))
 (let ((?x18848 (* l_0_10_32 l_0_10_32)))
 (let ((?x19273 (* 12.0 ?x18848)))
 (let ((?x19272 (- (* (* (- 12.0) l_0_10_17) l_0_10_17) (* (* 12.0 l_0_10_18) l_0_10_18))))
 (let ((?x19280 (- (- (+ (+ ?x19272 ?x19273) ?x19275) (* (* 6.0 l_0_10_47) l_0_10_47)) (* (* 6.0 l_0_10_48) l_0_10_48))))
 (let ((?x19284 (+ (+ ?x19280 (* 6.0 (* l_0_10_62 l_0_10_62))) (* 6.0 (* l_0_10_63 l_0_10_63)))))
 (= ?x19284 0.0)))))))))
(assert
 (let ((?x19303 (- (* (* (- 24.0) l_0_10_17) l_0_10_19) (* (* 24.0 l_0_10_18) l_0_10_20))))
 (let ((?x19309 (+ (+ ?x19303 (* (* 24.0 l_0_10_32) l_0_10_34)) (* (* 24.0 l_0_10_33) l_0_10_35))))
 (let ((?x19315 (- (- ?x19309 (* (* 12.0 l_0_10_47) l_0_10_49)) (* (* 12.0 l_0_10_48) l_0_10_50))))
 (let ((?x19321 (+ (+ ?x19315 (* (* 12.0 l_0_10_62) l_0_10_64)) (* (* 12.0 l_0_10_63) l_0_10_65))))
 (= ?x19321 0.0))))))
(assert
 (let ((?x19341 (- (* (* (- 24.0) l_0_10_17) l_0_10_22) (* (* 24.0 l_0_10_18) l_0_10_23))))
 (let ((?x19352 (+ (+ ?x19341 (* (* 24.0 l_0_10_32) l_0_10_37)) (* (* 24.0 l_0_10_33) l_0_10_38))))
 (let ((?x19356 (- (- ?x19352 (* (* 12.0 l_0_10_47) l_0_10_52)) (* (* 12.0 l_0_10_48) l_0_10_53))))
 (let ((?x19360 (+ (+ ?x19356 (* (* 12.0 l_0_10_62) l_0_10_67)) (* (* 12.0 l_0_10_63) l_0_10_68))))
 (= ?x19360 0.0))))))
(assert
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x17674 (* ?x17673 l_0_10_62)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x17665 (* ?x17664 l_0_10_47)))
 (let ((?x9441 (- (* (* (- 24.0) l_0_10_17) l_0_10_26) (* (* 24.0 l_0_10_18) l_0_10_27))))
 (let ((?x15617 (+ (+ ?x9441 (* (* 24.0 l_0_10_32) l_0_10_41)) (* (* 24.0 l_0_10_33) l_0_10_42))))
 (let ((?x6270 (- (- (+ ?x15617 ?x17665) (* (* 12.0 l_0_10_47) l_0_10_56)) (* (* 12.0 l_0_10_48) l_0_10_57))))
 (let ((?x19372 (+ (+ (- ?x6270 ?x17674) (* (* 12.0 l_0_10_62) l_0_10_71)) (* (* 12.0 l_0_10_63) l_0_10_72))))
 (= ?x19372 0.0))))))))))
(assert
 (let ((?x19052 (* l_0_10_36 l_0_10_36)))
 (let ((?x19414 (* 12.0 ?x19052)))
 (let ((?x19049 (* l_0_10_35 l_0_10_35)))
 (let ((?x19412 (* 12.0 ?x19049)))
 (let ((?x19046 (* l_0_10_34 l_0_10_34)))
 (let ((?x19410 (* 12.0 ?x19046)))
 (let ((?x19406 (- (* (* (- 12.0) l_0_10_19) l_0_10_19) (* (* 12.0 l_0_10_20) l_0_10_20))))
 (let ((?x19415 (+ (+ (+ (- ?x19406 (* (* 12.0 l_0_10_21) l_0_10_21)) ?x19410) ?x19412) ?x19414)))
 (let ((?x19419 (- (- ?x19415 (* (* 6.0 l_0_10_49) l_0_10_49)) (* (* 6.0 l_0_10_50) l_0_10_50))))
 (let ((?x19423 (+ (- ?x19419 (* (* 6.0 l_0_10_51) l_0_10_51)) (* 6.0 (* l_0_10_64 l_0_10_64)))))
 (let ((?x19427 (+ (+ ?x19423 (* 6.0 (* l_0_10_65 l_0_10_65))) (* 6.0 (* l_0_10_66 l_0_10_66)))))
 (= ?x19427 0.0)))))))))))))
(assert
 (let ((?x19459 (- (* (* (- 24.0) l_0_10_19) l_0_10_22) (* (* 24.0 l_0_10_20) l_0_10_23))))
 (let ((?x19465 (+ (- ?x19459 (* (* 24.0 l_0_10_21) l_0_10_24)) (* (* 24.0 l_0_10_34) l_0_10_37))))
 (let ((?x19471 (+ (+ ?x19465 (* (* 24.0 l_0_10_35) l_0_10_38)) (* (* 24.0 l_0_10_36) l_0_10_39))))
 (let ((?x19477 (- (- ?x19471 (* (* 12.0 l_0_10_49) l_0_10_52)) (* (* 12.0 l_0_10_50) l_0_10_53))))
 (let ((?x19483 (+ (- ?x19477 (* (* 12.0 l_0_10_51) l_0_10_54)) (* (* 12.0 l_0_10_64) l_0_10_67))))
 (let ((?x19489 (+ (+ ?x19483 (* (* 12.0 l_0_10_65) l_0_10_68)) (* (* 12.0 l_0_10_66) l_0_10_69))))
 (= ?x19489 0.0))))))))
(assert
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x17791 (* ?x17673 l_0_10_64)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x17778 (* ?x17664 l_0_10_49)))
 (let ((?x15721 (- (* (* (- 24.0) l_0_10_19) l_0_10_26) (* (* 24.0 l_0_10_20) l_0_10_27))))
 (let ((?x19525 (+ (- ?x15721 (* (* 24.0 l_0_10_21) l_0_10_28)) (* (* 24.0 l_0_10_34) l_0_10_41))))
 (let ((?x19529 (+ (+ ?x19525 (* (* 24.0 l_0_10_35) l_0_10_42)) (* (* 24.0 l_0_10_36) l_0_10_43))))
 (let ((?x19534 (- (- (+ ?x19529 ?x17778) (* (* 12.0 l_0_10_49) l_0_10_56)) (* (* 12.0 l_0_10_50) l_0_10_57))))
 (let ((?x19539 (+ (- (- ?x19534 (* (* 12.0 l_0_10_51) l_0_10_58)) ?x17791) (* (* 12.0 l_0_10_64) l_0_10_71))))
 (let ((?x19543 (+ (+ ?x19539 (* (* 12.0 l_0_10_65) l_0_10_72)) (* (* 12.0 l_0_10_66) l_0_10_73))))
 (= ?x19543 0.0))))))))))))
(assert
 (let ((?x17894 (* l_0_10_40 l_0_10_40)))
 (let ((?x19576 (* 12.0 ?x17894)))
 (let ((?x17891 (* l_0_10_39 l_0_10_39)))
 (let ((?x19574 (* 12.0 ?x17891)))
 (let ((?x17888 (* l_0_10_38 l_0_10_38)))
 (let ((?x19572 (* 12.0 ?x17888)))
 (let ((?x17885 (* l_0_10_37 l_0_10_37)))
 (let ((?x19570 (* 12.0 ?x17885)))
 (let ((?x19563 (- (* (* (- 12.0) l_0_10_22) l_0_10_22) (* (* 12.0 l_0_10_23) l_0_10_23))))
 (let ((?x19569 (- (- ?x19563 (* (* 12.0 l_0_10_24) l_0_10_24)) (* (* 12.0 l_0_10_25) l_0_10_25))))
 (let ((?x19579 (- (+ (+ (+ (+ ?x19569 ?x19570) ?x19572) ?x19574) ?x19576) (* (* 6.0 l_0_10_52) l_0_10_52))))
 (let ((?x19583 (- (- ?x19579 (* (* 6.0 l_0_10_53) l_0_10_53)) (* (* 6.0 l_0_10_54) l_0_10_54))))
 (let ((?x19587 (+ (- ?x19583 (* (* 6.0 l_0_10_55) l_0_10_55)) (* 6.0 (* l_0_10_67 l_0_10_67)))))
 (let ((?x19591 (+ (+ ?x19587 (* 6.0 (* l_0_10_68 l_0_10_68))) (* 6.0 (* l_0_10_69 l_0_10_69)))))
 (= (+ ?x19591 (* 6.0 (* l_0_10_70 l_0_10_70))) 0.0))))))))))))))))
(assert
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x17793 (* ?x17673 l_0_10_67)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x17780 (* ?x17664 l_0_10_52)))
 (let ((?x19635 (- (* (* (- 24.0) l_0_10_22) l_0_10_26) (* (* 24.0 l_0_10_23) l_0_10_27))))
 (let ((?x19641 (- (- ?x19635 (* (* 24.0 l_0_10_24) l_0_10_28)) (* (* 24.0 l_0_10_25) l_0_10_29))))
 (let ((?x19647 (+ (+ ?x19641 (* (* 24.0 l_0_10_37) l_0_10_41)) (* (* 24.0 l_0_10_38) l_0_10_42))))
 (let ((?x19653 (+ (+ ?x19647 (* (* 24.0 l_0_10_39) l_0_10_43)) (* (* 24.0 l_0_10_40) l_0_10_44))))
 (let ((?x19660 (- (- (+ ?x19653 ?x17780) (* (* 12.0 l_0_10_52) l_0_10_56)) (* (* 12.0 l_0_10_53) l_0_10_57))))
 (let ((?x19666 (- (- ?x19660 (* (* 12.0 l_0_10_54) l_0_10_58)) (* (* 12.0 l_0_10_55) l_0_10_59))))
 (let ((?x19673 (+ (+ (- ?x19666 ?x17793) (* (* 12.0 l_0_10_67) l_0_10_71)) (* (* 12.0 l_0_10_68) l_0_10_72))))
 (let ((?x19679 (+ (+ ?x19673 (* (* 12.0 l_0_10_69) l_0_10_73)) (* (* 12.0 l_0_10_70) l_0_10_74))))
 (= ?x19679 0.0))))))))))))))
(assert
 (let ((?x17673 (* 8.0 l_0_10_61)))
 (let ((?x18050 (* ?x17673 l_0_10_71)))
 (let ((?x17664 (* 8.0 l_0_10_46)))
 (let ((?x18034 (* ?x17664 l_0_10_56)))
 (let ((?x17374 (* l_0_10_45 l_0_10_45)))
 (let ((?x19745 (* 12.0 ?x17374)))
 (let ((?x17371 (* l_0_10_44 l_0_10_44)))
 (let ((?x19743 (* 12.0 ?x17371)))
 (let ((?x17368 (* l_0_10_43 l_0_10_43)))
 (let ((?x19741 (* 12.0 ?x17368)))
 (let ((?x17365 (* l_0_10_42 l_0_10_42)))
 (let ((?x19739 (* 12.0 ?x17365)))
 (let ((?x17362 (* l_0_10_41 l_0_10_41)))
 (let ((?x19737 (* 12.0 ?x17362)))
 (let ((?x19716 (- (* (* (- 12.0) l_0_10_26) l_0_10_26) (* (* 12.0 l_0_10_27) l_0_10_27))))
 (let ((?x19733 (- (- ?x19716 (* (* 12.0 l_0_10_28) l_0_10_28)) (* (* 12.0 l_0_10_29) l_0_10_29))))
 (let ((?x19742 (+ (+ (+ (- ?x19733 (* (* 12.0 l_0_10_30) l_0_10_30)) ?x19737) ?x19739) ?x19741)))
 (let ((?x19750 (- (+ (+ (+ ?x19742 ?x19743) ?x19745) ?x18034) (* (* 6.0 l_0_10_56) l_0_10_56))))
 (let ((?x19756 (- (- ?x19750 (* (* 6.0 l_0_10_57) l_0_10_57)) (* (* 6.0 l_0_10_58) l_0_10_58))))
 (let ((?x19762 (- (- ?x19756 (* (* 6.0 l_0_10_59) l_0_10_59)) (* (* 6.0 l_0_10_60) l_0_10_60))))
 (let ((?x19767 (+ (+ (- ?x19762 ?x18050) (* 6.0 (* l_0_10_71 l_0_10_71))) (* 6.0 (* l_0_10_72 l_0_10_72)))))
 (let ((?x19771 (+ (+ ?x19767 (* 6.0 (* l_0_10_73 l_0_10_73))) (* 6.0 (* l_0_10_74 l_0_10_74)))))
 (= (+ ?x19771 (* 6.0 (* l_0_10_75 l_0_10_75))) 0.0))))))))))))))))))))))))
(assert
 (let ((?x18159 (* l_0_10_78 l_0_10_78)))
 (let ((?x18154 (* l_0_10_77 l_0_10_77)))
 (let ((?x5011 (* l_0_10_18 l_0_10_18)))
 (let ((?x19810 (* 4.0 ?x5011)))
 (let ((?x18880 (* l_0_10_17 l_0_10_17)))
 (let ((?x11498 (* 4.0 ?x18880)))
 (let ((?x19817 (- (- (+ ?x11498 ?x19810) (* (* 4.0 l_0_10_32) l_0_10_32)) (* (* 4.0 l_0_10_33) l_0_10_33))))
 (= (+ (+ ?x19817 ?x18154) ?x18159) 0.0)))))))))
(assert
 (let ((?x18156 (* 2.0 l_0_10_78)))
 (let ((?x18228 (* ?x18156 l_0_10_80)))
 (let ((?x18151 (* 2.0 l_0_10_77)))
 (let ((?x18226 (* ?x18151 l_0_10_79)))
 (let ((?x14074 (* l_0_10_63 l_0_10_63)))
 (let ((?x14075 (* 4.0 ?x14074)))
 (let ((?x14070 (* l_0_10_62 l_0_10_62)))
 (let ((?x14071 (* 4.0 ?x14070)))
 (let ((?x19832 (+ (* (* 8.0 l_0_10_17) l_0_10_19) (* (* 8.0 l_0_10_18) l_0_10_20))))
 (let ((?x19836 (- (- ?x19832 (* (* 8.0 l_0_10_32) l_0_10_34)) (* (* 8.0 l_0_10_33) l_0_10_35))))
 (let ((?x19842 (- (- ?x19836 (* (* 4.0 l_0_10_47) l_0_10_47)) (* (* 4.0 l_0_10_48) l_0_10_48))))
 (= (+ (+ (+ (+ ?x19842 ?x14071) ?x14075) ?x18226) ?x18228) 0.0)))))))))))))
(assert
 (let ((?x18156 (* 2.0 l_0_10_78)))
 (let ((?x18382 (* ?x18156 l_0_10_87)))
 (let ((?x18151 (* 2.0 l_0_10_77)))
 (let ((?x18380 (* ?x18151 l_0_10_86)))
 (let ((?x18142 (* l_0_10_48 l_0_10_48)))
 (let ((?x19864 (* 3.0 ?x18142)))
 (let ((?x18139 (* l_0_10_47 l_0_10_47)))
 (let ((?x19862 (* 3.0 ?x18139)))
 (let ((?x19857 (+ (* (* 8.0 l_0_10_17) l_0_10_26) (* (* 8.0 l_0_10_18) l_0_10_27))))
 (let ((?x19861 (- (- ?x19857 (* (* 8.0 l_0_10_32) l_0_10_41)) (* (* 8.0 l_0_10_33) l_0_10_42))))
 (let ((?x19871 (- (- (+ (+ ?x19861 ?x19862) ?x19864) (* (* 3.0 l_0_10_62) l_0_10_62)) (* (* 3.0 l_0_10_63) l_0_10_63))))
 (= (+ (+ ?x19871 ?x18380) ?x18382) 0.0)))))))))))))
(assert
 (let ((?x18490 (* l_0_10_81 l_0_10_81)))
 (let ((?x18488 (* l_0_10_80 l_0_10_80)))
 (let ((?x18486 (* l_0_10_79 l_0_10_79)))
 (let ((?x18221 (* 8.0 l_0_10_63)))
 (let ((?x18222 (* ?x18221 l_0_10_65)))
 (let ((?x18216 (* 8.0 l_0_10_62)))
 (let ((?x18217 (* ?x18216 l_0_10_64)))
 (let ((?x18211 (* 8.0 l_0_10_48)))
 (let ((?x18212 (* ?x18211 l_0_10_50)))
 (let ((?x18206 (* 8.0 l_0_10_47)))
 (let ((?x18207 (* ?x18206 l_0_10_49)))
 (let ((?x5609 (* l_0_10_21 l_0_10_21)))
 (let ((?x15854 (* 4.0 ?x5609)))
 (let ((?x15182 (* l_0_10_20 l_0_10_20)))
 (let ((?x6715 (* 4.0 ?x15182)))
 (let ((?x10721 (* l_0_10_19 l_0_10_19)))
 (let ((?x6725 (* 4.0 ?x10721)))
 (let ((?x15865 (- (- (+ (+ ?x6725 ?x6715) ?x15854) (* (* 4.0 l_0_10_34) l_0_10_34)) (* (* 4.0 l_0_10_35) l_0_10_35))))
 (let ((?x19895 (+ (- (- (- ?x15865 (* (* 4.0 l_0_10_36) l_0_10_36)) ?x18207) ?x18212) ?x18217)))
 (= (+ (+ (+ (+ ?x19895 ?x18222) ?x18486) ?x18488) ?x18490) 0.0)))))))))))))))))))))
(assert
 (let ((?x18236 (* 2.0 l_0_10_81)))
 (let ((?x18638 (* ?x18236 l_0_10_88)))
 (let ((?x18233 (* 2.0 l_0_10_80)))
 (let ((?x18636 (* ?x18233 l_0_10_87)))
 (let ((?x18230 (* 2.0 l_0_10_79)))
 (let ((?x18634 (* ?x18230 l_0_10_86)))
 (let ((?x18221 (* 8.0 l_0_10_63)))
 (let ((?x18378 (* ?x18221 l_0_10_72)))
 (let ((?x18216 (* 8.0 l_0_10_62)))
 (let ((?x18373 (* ?x18216 l_0_10_71)))
 (let ((?x18211 (* 8.0 l_0_10_48)))
 (let ((?x18368 (* ?x18211 l_0_10_57)))
 (let ((?x18206 (* 8.0 l_0_10_47)))
 (let ((?x18363 (* ?x18206 l_0_10_56)))
 (let ((?x11691 (+ (* (* 8.0 l_0_10_19) l_0_10_26) (* (* 8.0 l_0_10_20) l_0_10_27))))
 (let ((?x15917 (- (+ ?x11691 (* (* 8.0 l_0_10_21) l_0_10_28)) (* (* 8.0 l_0_10_34) l_0_10_41))))
 (let ((?x19917 (- (- ?x15917 (* (* 8.0 l_0_10_35) l_0_10_42)) (* (* 8.0 l_0_10_36) l_0_10_43))))
 (let ((?x19922 (+ (- (+ ?x19917 (* (* 6.0 l_0_10_47) l_0_10_49)) ?x18363) (* (* 6.0 l_0_10_48) l_0_10_50))))
 (let ((?x19928 (- (+ (- (- ?x19922 ?x18368) (* (* 6.0 l_0_10_62) l_0_10_64)) ?x18373) (* (* 6.0 l_0_10_63) l_0_10_65))))
 (= (+ (+ (+ (+ ?x19928 ?x18378) ?x18634) ?x18636) ?x18638) 0.0)))))))))))))))))))))
(assert
 (let ((?x18149 (* (* 4.0 l_0_10_63) l_0_10_63)))
 (let ((?x18146 (* (* 4.0 l_0_10_62) l_0_10_62)))
 (let ((?x18142 (* l_0_10_48 l_0_10_48)))
 (let ((?x18143 (* 4.0 ?x18142)))
 (let ((?x18139 (* l_0_10_47 l_0_10_47)))
 (let ((?x18140 (* 4.0 ?x18139)))
 (let ((?x19954 (+ ?x18140 ?x18143)))
 (= (- (- ?x19954 ?x18146) ?x18149) 0.0)))))))))
(assert
 (let ((?x18221 (* 8.0 l_0_10_63)))
 (let ((?x18222 (* ?x18221 l_0_10_65)))
 (let ((?x18216 (* 8.0 l_0_10_62)))
 (let ((?x18217 (* ?x18216 l_0_10_64)))
 (let ((?x18211 (* 8.0 l_0_10_48)))
 (let ((?x18212 (* ?x18211 l_0_10_50)))
 (let ((?x18206 (* 8.0 l_0_10_47)))
 (let ((?x18207 (* ?x18206 l_0_10_49)))
 (= (- (- (+ ?x18207 ?x18212) ?x18217) ?x18222) 0.0))))))))))
(assert
 (let ((?x18221 (* 8.0 l_0_10_63)))
 (let ((?x18224 (* ?x18221 l_0_10_68)))
 (let ((?x18216 (* 8.0 l_0_10_62)))
 (let ((?x18219 (* ?x18216 l_0_10_67)))
 (let ((?x18211 (* 8.0 l_0_10_48)))
 (let ((?x18214 (* ?x18211 l_0_10_53)))
 (let ((?x18206 (* 8.0 l_0_10_47)))
 (let ((?x18209 (* ?x18206 l_0_10_52)))
 (= (- (- (+ ?x18209 ?x18214) ?x18219) ?x18224) 0.0))))))))))
(assert
 (let ((?x18221 (* 8.0 l_0_10_63)))
 (let ((?x18378 (* ?x18221 l_0_10_72)))
 (let ((?x18216 (* 8.0 l_0_10_62)))
 (let ((?x18373 (* ?x18216 l_0_10_71)))
 (let ((?x18211 (* 8.0 l_0_10_48)))
 (let ((?x18368 (* ?x18211 l_0_10_57)))
 (let ((?x18206 (* 8.0 l_0_10_47)))
 (let ((?x18363 (* ?x18206 l_0_10_56)))
 (= (- (- (+ ?x18363 ?x18368) ?x18373) ?x18378) 0.0))))))))))
(assert
 (let ((?x18484 (* (* 4.0 l_0_10_66) l_0_10_66)))
 (let ((?x18478 (* (* 4.0 l_0_10_65) l_0_10_65)))
 (let ((?x18472 (* (* 4.0 l_0_10_64) l_0_10_64)))
 (let ((?x18463 (* l_0_10_51 l_0_10_51)))
 (let ((?x18464 (* 4.0 ?x18463)))
 (let ((?x18457 (* l_0_10_50 l_0_10_50)))
 (let ((?x18458 (* 4.0 ?x18457)))
 (let ((?x18449 (* l_0_10_49 l_0_10_49)))
 (let ((?x18450 (* 4.0 ?x18449)))
 (= (- (- (- (+ (+ ?x18450 ?x18458) ?x18464) ?x18472) ?x18478) ?x18484) 0.0)))))))))))
(assert
 (let ((?x18480 (* 8.0 l_0_10_66)))
 (let ((?x18481 (* ?x18480 l_0_10_69)))
 (let ((?x18474 (* 8.0 l_0_10_65)))
 (let ((?x18475 (* ?x18474 l_0_10_68)))
 (let ((?x18468 (* 8.0 l_0_10_64)))
 (let ((?x18469 (* ?x18468 l_0_10_67)))
 (let ((?x18460 (* 8.0 l_0_10_51)))
 (let ((?x18461 (* ?x18460 l_0_10_54)))
 (let ((?x18454 (* 8.0 l_0_10_50)))
 (let ((?x18455 (* ?x18454 l_0_10_53)))
 (let ((?x18446 (* 8.0 l_0_10_49)))
 (let ((?x18447 (* ?x18446 l_0_10_52)))
 (= (- (- (- (+ (+ ?x18447 ?x18455) ?x18461) ?x18469) ?x18475) ?x18481) 0.0))))))))))))))
(assert
 (let ((?x18480 (* 8.0 l_0_10_66)))
 (let ((?x18620 (* ?x18480 l_0_10_73)))
 (let ((?x18474 (* 8.0 l_0_10_65)))
 (let ((?x18615 (* ?x18474 l_0_10_72)))
 (let ((?x18468 (* 8.0 l_0_10_64)))
 (let ((?x18610 (* ?x18468 l_0_10_71)))
 (let ((?x18460 (* 8.0 l_0_10_51)))
 (let ((?x2164 (* ?x18460 l_0_10_58)))
 (let ((?x18454 (* 8.0 l_0_10_50)))
 (let ((?x14243 (* ?x18454 l_0_10_57)))
 (let ((?x18446 (* 8.0 l_0_10_49)))
 (let ((?x4322 (* ?x18446 l_0_10_56)))
 (= (- (- (- (+ (+ ?x4322 ?x14243) ?x2164) ?x18610) ?x18615) ?x18620) 0.0))))))))))))))
(assert
 (let ((?x14454 (* (* 4.0 l_0_10_70) l_0_10_70)))
 (let ((?x4393 (* (* 4.0 l_0_10_69) l_0_10_69)))
 (let ((?x9859 (* (* 4.0 l_0_10_68) l_0_10_68)))
 (let ((?x9856 (* (* 4.0 l_0_10_67) l_0_10_67)))
 (let ((?x13766 (* l_0_10_55 l_0_10_55)))
 (let ((?x14266 (* 4.0 ?x13766)))
 (let ((?x17948 (* l_0_10_54 l_0_10_54)))
 (let ((?x14251 (* 4.0 ?x17948)))
 (let ((?x17944 (* l_0_10_53 l_0_10_53)))
 (let ((?x14235 (* 4.0 ?x17944)))
 (let ((?x3380 (* l_0_10_52 l_0_10_52)))
 (let ((?x4255 (* 4.0 ?x3380)))
 (let ((?x6864 (- (- (- (- (+ (+ (+ ?x4255 ?x14235) ?x14251) ?x14266) ?x9856) ?x9859) ?x4393) ?x14454)))
 (= ?x6864 0.0)))))))))))))))
(assert
 (let ((?x18632 (* (* 8.0 l_0_10_70) l_0_10_74)))
 (let ((?x18629 (* (* 8.0 l_0_10_69) l_0_10_73)))
 (let ((?x18626 (* (* 8.0 l_0_10_68) l_0_10_72)))
 (let ((?x18623 (* (* 8.0 l_0_10_67) l_0_10_71)))
 (let ((?x18605 (* (* 8.0 l_0_10_55) l_0_10_59)))
 (let ((?x18602 (* (* 8.0 l_0_10_54) l_0_10_58)))
 (let ((?x18599 (* (* 8.0 l_0_10_53) l_0_10_57)))
 (let ((?x18596 (* (* 8.0 l_0_10_52) l_0_10_56)))
 (let ((?x20026 (- (- (- (- (+ (+ (+ ?x18596 ?x18599) ?x18602) ?x18605) ?x18623) ?x18626) ?x18629) ?x18632)))
 (= ?x20026 0.0)))))))))))
(assert
 (let ((?x18780 (* (* 4.0 l_0_10_75) l_0_10_75)))
 (let ((?x18777 (* (* 4.0 l_0_10_74) l_0_10_74)))
 (let ((?x18774 (* (* 4.0 l_0_10_73) l_0_10_73)))
 (let ((?x18771 (* (* 4.0 l_0_10_72) l_0_10_72)))
 (let ((?x18768 (* (* 4.0 l_0_10_71) l_0_10_71)))
 (let ((?x17253 (* l_0_10_60 l_0_10_60)))
 (let ((?x18751 (* 4.0 ?x17253)))
 (let ((?x17250 (* l_0_10_59 l_0_10_59)))
 (let ((?x18749 (* 4.0 ?x17250)))
 (let ((?x17247 (* l_0_10_58 l_0_10_58)))
 (let ((?x18747 (* 4.0 ?x17247)))
 (let ((?x17244 (* l_0_10_57 l_0_10_57)))
 (let ((?x18745 (* 4.0 ?x17244)))
 (let ((?x17241 (* l_0_10_56 l_0_10_56)))
 (let ((?x18743 (* 4.0 ?x17241)))
 (let ((?x20044 (- (- (- (+ (+ (+ (+ ?x18743 ?x18745) ?x18747) ?x18749) ?x18751) ?x18768) ?x18771) ?x18774)))
 (= (- (- ?x20044 ?x18777) ?x18780) 0.0))))))))))))))))))
(assert
 (let ((?x18480 (* 8.0 l_0_10_66)))
 (let ((?x18620 (* ?x18480 l_0_10_73)))
 (let ((?x18474 (* 8.0 l_0_10_65)))
 (let ((?x18615 (* ?x18474 l_0_10_72)))
 (let ((?x18468 (* 8.0 l_0_10_64)))
 (let ((?x18610 (* ?x18468 l_0_10_71)))
 (let ((?x18463 (* l_0_10_51 l_0_10_51)))
 (let ((?x20048 (* 3.0 ?x18463)))
 (let ((?x18460 (* 8.0 l_0_10_51)))
 (let ((?x2164 (* ?x18460 l_0_10_58)))
 (let ((?x18457 (* l_0_10_50 l_0_10_50)))
 (let ((?x7101 (* 3.0 ?x18457)))
 (let ((?x18454 (* 8.0 l_0_10_50)))
 (let ((?x14243 (* ?x18454 l_0_10_57)))
 (let ((?x18449 (* l_0_10_49 l_0_10_49)))
 (let ((?x11916 (* 3.0 ?x18449)))
 (let ((?x11911 (- (+ (- (+ (* (* (- 8.0) l_0_10_49) l_0_10_56) ?x11916) ?x14243) ?x7101) ?x2164)))
 (let ((?x20054 (+ (- (+ (+ ?x11911 ?x20048) ?x18610) (* (* 3.0 l_0_10_64) l_0_10_64)) ?x18615)))
 (let ((?x20061 (- (+ (- ?x20054 (* (* 3.0 l_0_10_65) l_0_10_65)) ?x18620) (* (* 3.0 l_0_10_66) l_0_10_66))))
 (= ?x20061 0.0)))))))))))))))))))))
(assert
 (let ((?x18532 (* l_0_10_66 l_0_10_66)))
 (let ((?x18533 (* 4.0 ?x18532)))
 (let ((?x18527 (* l_0_10_65 l_0_10_65)))
 (let ((?x18528 (* 4.0 ?x18527)))
 (let ((?x18522 (* l_0_10_64 l_0_10_64)))
 (let ((?x18523 (* 4.0 ?x18522)))
 (let ((?x20085 (- (* (* (- 4.0) l_0_10_49) l_0_10_49) (* (* 4.0 l_0_10_50) l_0_10_50))))
 (let ((?x20091 (+ (+ (+ (- ?x20085 (* (* 4.0 l_0_10_51) l_0_10_51)) ?x18523) ?x18528) ?x18533)))
 (= ?x20091 0.0))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_16 0.0))
(assert
 (>= l_0_10_18 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_25 0.0))
(assert
 (>= l_0_10_30 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_33 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_40 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_55 0.0))
(assert
 (>= l_0_10_60 0.0))
(assert
 (>= l_0_10_61 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_70 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (>= l_0_10_76 0.0))
(assert
 (>= l_0_10_78 0.0))
(assert
 (>= l_0_10_81 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_91 0.0))
(assert
 (>= l_0_10_93 0.0))
(assert
 (>= l_0_10_96 0.0))
(assert
 (>= l_0_10_100 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_106 0.0))
(assert
 (>= l_0_10_108 0.0))
(assert
 (>= l_0_10_111 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_120 0.0))
(assert
 (>= l_0_10_121 0.0))
(assert
 (>= l_0_10_123 0.0))
(assert
 (>= l_0_10_126 0.0))
(assert
 (>= l_0_10_130 0.0))
(assert
 (>= l_0_10_135 0.0))
(assert
 (>= l_0_10_136 0.0))
(assert
 (>= l_0_10_138 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_145 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (let ((?x20168 (* (* 4.0 l_0_11_61) l_0_11_61)))
 (let ((?x20161 (* l_0_11_60 l_0_11_60)))
 (let ((?x20162 (* 3.0 ?x20161)))
 (let ((?x20158 (* l_0_11_59 l_0_11_59)))
 (let ((?x20159 (* 3.0 ?x20158)))
 (let ((?x20155 (* l_0_11_58 l_0_11_58)))
 (let ((?x20156 (* 3.0 ?x20155)))
 (let ((?x20152 (* l_0_11_57 l_0_11_57)))
 (let ((?x20153 (* 3.0 ?x20152)))
 (let ((?x20149 (* l_0_11_56 l_0_11_56)))
 (let ((?x20150 (* 3.0 ?x20149)))
 (let ((?x20146 (* l_0_11_46 l_0_11_46)))
 (let ((?x20147 (* 4.0 ?x20146)))
 (let ((?x20142 (+ (* (* (- 24.0) l_0_11_16) l_0_11_26) (* (* 24.0 l_0_11_31) l_0_11_41))))
 (let ((?x20154 (+ (+ (+ (- ?x20142 (* (* 12.0 l_0_11_46) l_0_11_56)) ?x20147) ?x20150) ?x20153)))
 (let ((?x20166 (+ (+ (+ (+ ?x20154 ?x20156) ?x20159) ?x20162) (* (* 12.0 l_0_11_61) l_0_11_71))))
 (let ((?x20175 (- (- (- ?x20166 ?x20168) (* (* 3.0 l_0_11_71) l_0_11_71)) (* (* 3.0 l_0_11_72) l_0_11_72))))
 (let ((?x20181 (- (- ?x20175 (* (* 3.0 l_0_11_73) l_0_11_73)) (* (* 3.0 l_0_11_74) l_0_11_74))))
 (= (+ (- ?x20181 (* (* 3.0 l_0_11_75) l_0_11_75)) 4.0) 0.0))))))))))))))))))))
(assert
 (let ((?x20197 (* l_0_11_61 l_0_11_61)))
 (let ((?x20310 (* 6.0 ?x20197)))
 (let ((?x20269 (* l_0_11_31 l_0_11_31)))
 (let ((?x20270 (* 12.0 ?x20269)))
 (let ((?x20252 (* l_0_11_165 l_0_11_165)))
 (let ((?x20250 (* l_0_11_164 l_0_11_164)))
 (let ((?x20248 (* l_0_11_163 l_0_11_163)))
 (let ((?x20246 (* l_0_11_162 l_0_11_162)))
 (let ((?x20244 (* l_0_11_161 l_0_11_161)))
 (let ((?x20239 (* l_0_11_150 l_0_11_150)))
 (let ((?x20237 (* l_0_11_149 l_0_11_149)))
 (let ((?x20235 (* l_0_11_148 l_0_11_148)))
 (let ((?x20233 (* l_0_11_147 l_0_11_147)))
 (let ((?x20231 (* l_0_11_146 l_0_11_146)))
 (let ((?x20229 (* l_0_11_135 l_0_11_135)))
 (let ((?x20227 (* l_0_11_134 l_0_11_134)))
 (let ((?x20225 (* l_0_11_133 l_0_11_133)))
 (let ((?x20223 (* l_0_11_132 l_0_11_132)))
 (let ((?x20221 (* l_0_11_131 l_0_11_131)))
 (let ((?x20219 (* l_0_11_120 l_0_11_120)))
 (let ((?x20217 (* l_0_11_119 l_0_11_119)))
 (let ((?x20215 (* l_0_11_118 l_0_11_118)))
 (let ((?x20213 (* l_0_11_117 l_0_11_117)))
 (let ((?x20211 (* l_0_11_116 l_0_11_116)))
 (let ((?x20209 (* l_0_11_105 l_0_11_105)))
 (let ((?x16108 (* l_0_11_104 l_0_11_104)))
 (let ((?x7281 (* l_0_11_103 l_0_11_103)))
 (let ((?x16106 (- (- (* (- l_0_11_101) l_0_11_101) (* l_0_11_102 l_0_11_102)) ?x7281)))
 (let ((?x20220 (- (- (- (- (- (- (- ?x16106 ?x16108) ?x20209) ?x20211) ?x20213) ?x20215) ?x20217) ?x20219)))
 (let ((?x20234 (- (- (- (- (- (- (- ?x20220 ?x20221) ?x20223) ?x20225) ?x20227) ?x20229) ?x20231) ?x20233)))
 (let ((?x20243 (- (- (- (- ?x20234 ?x20235) ?x20237) ?x20239) (* (* 12.0 l_0_11_16) l_0_11_16))))
 (let ((?x20256 (- (- (- (- (- (- ?x20243 ?x20244) ?x20246) ?x20248) ?x20250) ?x20252) (* (* 1.0 l_0_11_26) l_0_11_26))))
 (let ((?x20262 (- (- ?x20256 (* (* 1.0 l_0_11_27) l_0_11_27)) (* (* 1.0 l_0_11_28) l_0_11_28))))
 (let ((?x20268 (- (- ?x20262 (* (* 1.0 l_0_11_29) l_0_11_29)) (* (* 1.0 l_0_11_30) l_0_11_30))))
 (let ((?x20277 (+ (+ (+ ?x20268 ?x20270) (* 1.0 (* l_0_11_41 l_0_11_41))) (* 1.0 (* l_0_11_42 l_0_11_42)))))
 (let ((?x20283 (+ (+ ?x20277 (* 1.0 (* l_0_11_43 l_0_11_43))) (* 1.0 (* l_0_11_44 l_0_11_44)))))
 (let ((?x20289 (+ (+ ?x20283 (* 1.0 (* l_0_11_45 l_0_11_45))) (* (* 6.0 l_0_11_46) l_0_11_56))))
 (let ((?x20294 (- (- ?x20289 (* (* 6.0 l_0_11_46) l_0_11_46)) (* (* 1.0 l_0_11_56) l_0_11_56))))
 (let ((?x20300 (- (- ?x20294 (* (* 1.0 l_0_11_57) l_0_11_57)) (* (* 1.0 l_0_11_58) l_0_11_58))))
 (let ((?x20306 (- (- ?x20300 (* (* 1.0 l_0_11_59) l_0_11_59)) (* (* 1.0 l_0_11_60) l_0_11_60))))
 (let ((?x20313 (+ (+ (- ?x20306 (* (* 6.0 l_0_11_61) l_0_11_71)) ?x20310) (* 1.0 (* l_0_11_71 l_0_11_71)))))
 (let ((?x20317 (+ (+ ?x20313 (* 1.0 (* l_0_11_72 l_0_11_72))) (* 1.0 (* l_0_11_73 l_0_11_73)))))
 (let ((?x20321 (+ (+ ?x20317 (* 1.0 (* l_0_11_74 l_0_11_74))) (* 1.0 (* l_0_11_75 l_0_11_75)))))
 (= (+ ?x20321 6.0) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20146 (* l_0_11_46 l_0_11_46)))
 (let ((?x20404 (* 3.0 ?x20146)))
 (let ((?x7490 (- (* (* (- 2.0) l_0_11_101) l_0_11_91) (* (* 2.0 l_0_11_106) l_0_11_116))))
 (let ((?x12232 (- (- ?x7490 (* (* 2.0 l_0_11_121) l_0_11_131)) (* (* 2.0 l_0_11_136) l_0_11_146))))
 (let ((?x7518 (- (- ?x12232 (* (* 2.0 l_0_11_151) l_0_11_161)) (* (* 2.0 l_0_11_16) l_0_11_26))))
 (let ((?x20403 (- (+ ?x7518 (* (* 2.0 l_0_11_31) l_0_11_41)) (* (* 2.0 l_0_11_46) l_0_11_56))))
 (let ((?x20411 (- (+ (+ ?x20403 ?x20404) (* (* 2.0 l_0_11_61) l_0_11_71)) (* (* 3.0 l_0_11_61) l_0_11_61))))
 (= (+ ?x20411 3.0) 0.0)))))))))
(assert
 (let ((?x20462 (* l_0_11_91 l_0_11_91)))
 (let ((?x20450 (* l_0_11_151 l_0_11_151)))
 (let ((?x20448 (* l_0_11_136 l_0_11_136)))
 (let ((?x20446 (* l_0_11_121 l_0_11_121)))
 (let ((?x20449 (- (- (- (* 4.0 _a_0_) (* l_0_11_106 l_0_11_106)) ?x20446) ?x20448)))
 (let ((?x20456 (+ (- (- ?x20449 ?x20450) (* (* 1.0 l_0_11_16) l_0_11_16)) (* 1.0 (* l_0_11_31 l_0_11_31)))))
 (let ((?x20461 (+ (- ?x20456 (* (* 1.0 l_0_11_46) l_0_11_46)) (* 1.0 (* l_0_11_61 l_0_11_61)))))
 (= (- ?x20461 ?x20462) 0.0)))))))))
(assert
 (let ((?x20499 (* l_0_11_76 l_0_11_76)))
 (let ((?x20168 (* (* 4.0 l_0_11_61) l_0_11_61)))
 (let ((?x20146 (* l_0_11_46 l_0_11_46)))
 (let ((?x20147 (* 4.0 ?x20146)))
 (let ((?x20482 (- (- (* 4.0 _a_1_) (* l_0_11_1 l_0_11_1)) (* (* 2.0 l_0_11_106) l_0_11_112))))
 (let ((?x20486 (- (- ?x20482 (* (* 2.0 l_0_11_121) l_0_11_127)) (* (* 2.0 l_0_11_136) l_0_11_142))))
 (let ((?x20490 (- (- ?x20486 (* (* 2.0 l_0_11_151) l_0_11_157)) (* (* 2.0 l_0_11_16) l_0_11_22))))
 (let ((?x20494 (- (+ ?x20490 (* (* 2.0 l_0_11_31) l_0_11_37)) (* (* 2.0 l_0_11_46) l_0_11_52))))
 (let ((?x20500 (- (- (+ (+ ?x20494 ?x20147) (* (* 2.0 l_0_11_61) l_0_11_67)) ?x20168) ?x20499)))
 (= (- ?x20500 (* (* 2.0 l_0_11_91) l_0_11_97)) 0.0)))))))))))
(assert
 (let ((?x20499 (* l_0_11_76 l_0_11_76)))
 (let ((?x20364 (* l_0_11_16 l_0_11_16)))
 (let ((?x20519 (* 4.0 ?x20364)))
 (let ((?x12384 (- (- (* 4.0 _a_2_) (* (* 2.0 l_0_11_106) l_0_11_107)) (* (* 2.0 l_0_11_121) l_0_11_122))))
 (let ((?x20516 (- (- ?x12384 (* (* 2.0 l_0_11_136) l_0_11_137)) (* (* 2.0 l_0_11_151) l_0_11_152))))
 (let ((?x20522 (+ (+ (- ?x20516 (* (* 2.0 l_0_11_16) l_0_11_17)) ?x20519) (* (* 2.0 l_0_11_31) l_0_11_32))))
 (let ((?x20527 (- (- ?x20522 (* (* 4.0 l_0_11_31) l_0_11_31)) (* (* 2.0 l_0_11_46) l_0_11_47))))
 (let ((?x20532 (- (+ (+ ?x20527 (* (* 2.0 l_0_11_61) l_0_11_62)) ?x20499) (* (* 2.0 l_0_11_91) l_0_11_92))))
 (= ?x20532 0.0))))))))))
(assert
 (let ((?x20197 (* l_0_11_61 l_0_11_61)))
 (let ((?x20198 (* 4.0 ?x20197)))
 (let ((?x7969 (- (* (* (- 2.0) l_0_11_106) l_0_11_109) (* (* 2.0 l_0_11_121) l_0_11_124))))
 (let ((?x20556 (- (- ?x7969 (* (* 2.0 l_0_11_136) l_0_11_139)) (* (* 2.0 l_0_11_151) l_0_11_154))))
 (let ((?x20560 (+ (- ?x20556 (* (* 2.0 l_0_11_16) l_0_11_19)) (* (* 2.0 l_0_11_31) l_0_11_34))))
 (let ((?x20565 (- (- ?x20560 (* (* 2.0 l_0_11_46) l_0_11_49)) (* (* 4.0 l_0_11_46) l_0_11_46))))
 (let ((?x20570 (- (+ (+ ?x20565 (* (* 2.0 l_0_11_61) l_0_11_64)) ?x20198) (* (* 2.0 l_0_11_91) l_0_11_94))))
 (= (- ?x20570 4.0) 0.0)))))))))
(assert
 (let ((?x20642 (* 2.0 l_0_11_76)))
 (let ((?x20645 (* ?x20642 l_0_11_82)))
 (let ((?x20643 (* ?x20642 l_0_11_77)))
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x20634 (* ?x20633 l_0_11_62)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x20625 (* ?x20624 l_0_11_47)))
 (let ((?x20584 (- (* (* (- 2.0) l_0_11_1) l_0_11_2) (* (* 2.0 l_0_11_107) l_0_11_112))))
 (let ((?x20590 (- (- ?x20584 (* (* 2.0 l_0_11_108) l_0_11_113)) (* (* 2.0 l_0_11_122) l_0_11_127))))
 (let ((?x20596 (- (- ?x20590 (* (* 2.0 l_0_11_123) l_0_11_128)) (* (* 2.0 l_0_11_137) l_0_11_142))))
 (let ((?x20602 (- (- ?x20596 (* (* 2.0 l_0_11_138) l_0_11_143)) (* (* 2.0 l_0_11_152) l_0_11_157))))
 (let ((?x20608 (+ (- ?x20602 (* (* 2.0 l_0_11_153) l_0_11_158)) (* (* 8.0 l_0_11_16) l_0_11_22))))
 (let ((?x20614 (- (- ?x20608 (* (* 2.0 l_0_11_17) l_0_11_22)) (* (* 2.0 l_0_11_18) l_0_11_23))))
 (let ((?x20620 (+ (- ?x20614 (* (* 8.0 l_0_11_31) l_0_11_37)) (* (* 2.0 l_0_11_32) l_0_11_37))))
 (let ((?x20629 (- (+ (+ ?x20620 (* (* 2.0 l_0_11_33) l_0_11_38)) ?x20625) (* (* 2.0 l_0_11_47) l_0_11_52))))
 (let ((?x20638 (+ (- (- ?x20629 (* (* 2.0 l_0_11_48) l_0_11_53)) ?x20634) (* (* 2.0 l_0_11_62) l_0_11_67))))
 (let ((?x20649 (- (+ (- (+ ?x20638 (* (* 2.0 l_0_11_63) l_0_11_68)) ?x20643) ?x20645) (* (* 2.0 l_0_11_92) l_0_11_97))))
 (= (- ?x20649 (* (* 2.0 l_0_11_93) l_0_11_98)) 0.0)))))))))))))))))))
(assert
 (let ((?x20642 (* 2.0 l_0_11_76)))
 (let ((?x20782 (* ?x20642 l_0_11_79)))
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x20771 (* ?x20633 l_0_11_67)))
 (let ((?x20769 (* ?x20633 l_0_11_64)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x20758 (* ?x20624 l_0_11_52)))
 (let ((?x20756 (* ?x20624 l_0_11_49)))
 (let ((?x20704 (- (* (* (- 2.0) l_0_11_1) l_0_11_4) (* (* 2.0 l_0_11_109) l_0_11_112))))
 (let ((?x20710 (- (- ?x20704 (* (* 2.0 l_0_11_110) l_0_11_113)) (* (* 2.0 l_0_11_111) l_0_11_114))))
 (let ((?x20716 (- (- ?x20710 (* (* 2.0 l_0_11_124) l_0_11_127)) (* (* 2.0 l_0_11_125) l_0_11_128))))
 (let ((?x20722 (- (- ?x20716 (* (* 2.0 l_0_11_126) l_0_11_129)) (* (* 2.0 l_0_11_139) l_0_11_142))))
 (let ((?x20728 (- (- ?x20722 (* (* 2.0 l_0_11_140) l_0_11_143)) (* (* 2.0 l_0_11_141) l_0_11_144))))
 (let ((?x20734 (- (- ?x20728 (* (* 2.0 l_0_11_154) l_0_11_157)) (* (* 2.0 l_0_11_155) l_0_11_158))))
 (let ((?x20740 (- (- ?x20734 (* (* 2.0 l_0_11_156) l_0_11_159)) (* (* 2.0 l_0_11_19) l_0_11_22))))
 (let ((?x20746 (- (- ?x20740 (* (* 2.0 l_0_11_20) l_0_11_23)) (* (* 2.0 l_0_11_21) l_0_11_24))))
 (let ((?x20752 (+ (+ ?x20746 (* (* 2.0 l_0_11_34) l_0_11_37)) (* (* 2.0 l_0_11_35) l_0_11_38))))
 (let ((?x20762 (- (- (+ (+ ?x20752 (* (* 2.0 l_0_11_36) l_0_11_39)) ?x20756) ?x20758) (* (* 2.0 l_0_11_49) l_0_11_52))))
 (let ((?x20768 (- (- ?x20762 (* (* 2.0 l_0_11_50) l_0_11_53)) (* (* 2.0 l_0_11_51) l_0_11_54))))
 (let ((?x20778 (+ (+ (+ (- ?x20768 ?x20769) ?x20771) (* (* 2.0 l_0_11_64) l_0_11_67)) (* (* 2.0 l_0_11_65) l_0_11_68))))
 (let ((?x20786 (- (- (+ ?x20778 (* (* 2.0 l_0_11_66) l_0_11_69)) ?x20782) (* (* 2.0 l_0_11_94) l_0_11_97))))
 (let ((?x20792 (- (- ?x20786 (* (* 2.0 l_0_11_95) l_0_11_98)) (* (* 2.0 l_0_11_96) l_0_11_99))))
 (= ?x20792 0.0))))))))))))))))))))))))
(assert
 (let ((?x20932 (* l_0_11_99 l_0_11_99)))
 (let ((?x20930 (* l_0_11_98 l_0_11_98)))
 (let ((?x20928 (* l_0_11_97 l_0_11_97)))
 (let ((?x20642 (* 2.0 l_0_11_76)))
 (let ((?x20645 (* ?x20642 l_0_11_82)))
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x20771 (* ?x20633 l_0_11_67)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x20758 (* ?x20624 l_0_11_52)))
 (let ((?x20875 (* l_0_11_160 l_0_11_160)))
 (let ((?x20873 (* l_0_11_159 l_0_11_159)))
 (let ((?x20871 (* l_0_11_158 l_0_11_158)))
 (let ((?x20869 (* l_0_11_157 l_0_11_157)))
 (let ((?x20867 (* l_0_11_145 l_0_11_145)))
 (let ((?x20865 (* l_0_11_144 l_0_11_144)))
 (let ((?x20863 (* l_0_11_143 l_0_11_143)))
 (let ((?x20861 (* l_0_11_142 l_0_11_142)))
 (let ((?x20859 (* l_0_11_130 l_0_11_130)))
 (let ((?x20857 (* l_0_11_129 l_0_11_129)))
 (let ((?x20855 (* l_0_11_128 l_0_11_128)))
 (let ((?x20853 (* l_0_11_127 l_0_11_127)))
 (let ((?x20851 (* l_0_11_115 l_0_11_115)))
 (let ((?x20849 (* l_0_11_114 l_0_11_114)))
 (let ((?x20847 (* l_0_11_113 l_0_11_113)))
 (let ((?x20845 (* l_0_11_112 l_0_11_112)))
 (let ((?x20846 (- (- (* (* (- 2.0) l_0_11_1) l_0_11_7) (* l_0_11_100 l_0_11_100)) ?x20845)))
 (let ((?x20860 (- (- (- (- (- (- (- ?x20846 ?x20847) ?x20849) ?x20851) ?x20853) ?x20855) ?x20857) ?x20859)))
 (let ((?x20874 (- (- (- (- (- (- (- ?x20860 ?x20861) ?x20863) ?x20865) ?x20867) ?x20869) ?x20871) ?x20873)))
 (let ((?x20882 (- (- (- ?x20874 ?x20875) (* (* 1.0 l_0_11_22) l_0_11_22)) (* (* 1.0 l_0_11_23) l_0_11_23))))
 (let ((?x20888 (- (- ?x20882 (* (* 1.0 l_0_11_24) l_0_11_24)) (* (* 1.0 l_0_11_25) l_0_11_25))))
 (let ((?x20894 (+ (+ ?x20888 (* 1.0 (* l_0_11_37 l_0_11_37))) (* 1.0 (* l_0_11_38 l_0_11_38)))))
 (let ((?x20900 (+ (+ ?x20894 (* 1.0 (* l_0_11_39 l_0_11_39))) (* 1.0 (* l_0_11_40 l_0_11_40)))))
 (let ((?x20907 (- (- (+ ?x20900 ?x20758) (* (* 1.0 l_0_11_52) l_0_11_52)) (* (* 1.0 l_0_11_53) l_0_11_53))))
 (let ((?x20913 (- (- ?x20907 (* (* 1.0 l_0_11_54) l_0_11_54)) (* (* 1.0 l_0_11_55) l_0_11_55))))
 (let ((?x20920 (+ (+ (- ?x20913 ?x20771) (* 1.0 (* l_0_11_67 l_0_11_67))) (* 1.0 (* l_0_11_68 l_0_11_68)))))
 (let ((?x20926 (+ (+ ?x20920 (* 1.0 (* l_0_11_69 l_0_11_69))) (* 1.0 (* l_0_11_70 l_0_11_70)))))
 (= (- (- (- (- ?x20926 ?x20645) ?x20928) ?x20930) ?x20932) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20642 (* 2.0 l_0_11_76)))
 (let ((?x21098 (* ?x20642 l_0_11_86)))
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x21084 (* ?x20633 l_0_11_71)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x21068 (* ?x20624 l_0_11_56)))
 (let ((?x20984 (- (* (* (- 2.0) l_0_11_1) l_0_11_11) (* (* 2.0 l_0_11_100) l_0_11_104))))
 (let ((?x20990 (- (- ?x20984 (* (* 2.0 l_0_11_101) l_0_11_97)) (* (* 2.0 l_0_11_102) l_0_11_98))))
 (let ((?x20996 (- (- ?x20990 (* (* 2.0 l_0_11_103) l_0_11_99)) (* (* 2.0 l_0_11_112) l_0_11_116))))
 (let ((?x21002 (- (- ?x20996 (* (* 2.0 l_0_11_113) l_0_11_117)) (* (* 2.0 l_0_11_114) l_0_11_118))))
 (let ((?x21008 (- (- ?x21002 (* (* 2.0 l_0_11_115) l_0_11_119)) (* (* 2.0 l_0_11_127) l_0_11_131))))
 (let ((?x21014 (- (- ?x21008 (* (* 2.0 l_0_11_128) l_0_11_132)) (* (* 2.0 l_0_11_129) l_0_11_133))))
 (let ((?x21020 (- (- ?x21014 (* (* 2.0 l_0_11_130) l_0_11_134)) (* (* 2.0 l_0_11_142) l_0_11_146))))
 (let ((?x21026 (- (- ?x21020 (* (* 2.0 l_0_11_143) l_0_11_147)) (* (* 2.0 l_0_11_144) l_0_11_148))))
 (let ((?x21032 (- (- ?x21026 (* (* 2.0 l_0_11_145) l_0_11_149)) (* (* 2.0 l_0_11_157) l_0_11_161))))
 (let ((?x21038 (- (- ?x21032 (* (* 2.0 l_0_11_158) l_0_11_162)) (* (* 2.0 l_0_11_159) l_0_11_163))))
 (let ((?x21044 (- (- ?x21038 (* (* 2.0 l_0_11_160) l_0_11_164)) (* (* 2.0 l_0_11_22) l_0_11_26))))
 (let ((?x21050 (- (- ?x21044 (* (* 2.0 l_0_11_23) l_0_11_27)) (* (* 2.0 l_0_11_24) l_0_11_28))))
 (let ((?x21056 (+ (- ?x21050 (* (* 2.0 l_0_11_25) l_0_11_29)) (* (* 2.0 l_0_11_37) l_0_11_41))))
 (let ((?x21062 (+ (+ ?x21056 (* (* 2.0 l_0_11_38) l_0_11_42)) (* (* 2.0 l_0_11_39) l_0_11_43))))
 (let ((?x21067 (+ (+ ?x21062 (* (* 2.0 l_0_11_40) l_0_11_44)) (* (* 6.0 l_0_11_46) l_0_11_52))))
 (let ((?x21075 (- (- (+ ?x21067 ?x21068) (* (* 2.0 l_0_11_52) l_0_11_56)) (* (* 2.0 l_0_11_53) l_0_11_57))))
 (let ((?x21081 (- (- ?x21075 (* (* 2.0 l_0_11_54) l_0_11_58)) (* (* 2.0 l_0_11_55) l_0_11_59))))
 (let ((?x21088 (+ (- (- ?x21081 (* (* 6.0 l_0_11_61) l_0_11_67)) ?x21084) (* (* 2.0 l_0_11_67) l_0_11_71))))
 (let ((?x21094 (+ (+ ?x21088 (* (* 2.0 l_0_11_68) l_0_11_72)) (* (* 2.0 l_0_11_69) l_0_11_73))))
 (= (- (+ ?x21094 (* (* 2.0 l_0_11_70) l_0_11_74)) ?x21098) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x21232 (* l_0_11_78 l_0_11_78)))
 (let ((?x21229 (* 2.0 l_0_11_78)))
 (let ((?x21230 (* ?x21229 l_0_11_83)))
 (let ((?x21227 (* l_0_11_77 l_0_11_77)))
 (let ((?x21224 (* 2.0 l_0_11_77)))
 (let ((?x21225 (* ?x21224 l_0_11_82)))
 (let ((?x21222 (* (* 4.0 l_0_11_63) l_0_11_63)))
 (let ((?x21219 (* (* 4.0 l_0_11_62) l_0_11_62)))
 (let ((?x21215 (* l_0_11_48 l_0_11_48)))
 (let ((?x21216 (* 4.0 ?x21215)))
 (let ((?x21212 (* l_0_11_47 l_0_11_47)))
 (let ((?x21213 (* 4.0 ?x21212)))
 (let ((?x21204 (* l_0_11_3 l_0_11_3)))
 (let ((?x21202 (* l_0_11_2 l_0_11_2)))
 (let ((?x21201 (+ (* (* 8.0 l_0_11_17) l_0_11_22) (* (* 8.0 l_0_11_18) l_0_11_23))))
 (let ((?x21211 (- (- (- (- ?x21201 ?x21202) ?x21204) (* (* 8.0 l_0_11_32) l_0_11_37)) (* (* 8.0 l_0_11_33) l_0_11_38))))
 (let ((?x21231 (+ (- (+ (- (- (+ (+ ?x21211 ?x21213) ?x21216) ?x21219) ?x21222) ?x21225) ?x21227) ?x21230)))
 (= (- ?x21231 ?x21232) 0.0)))))))))))))))))))
(assert
 (let ((?x21304 (* 2.0 l_0_11_81)))
 (let ((?x21305 (* ?x21304 l_0_11_84)))
 (let ((?x21301 (* 2.0 l_0_11_80)))
 (let ((?x21302 (* ?x21301 l_0_11_83)))
 (let ((?x21298 (* 2.0 l_0_11_79)))
 (let ((?x21299 (* ?x21298 l_0_11_82)))
 (let ((?x21229 (* 2.0 l_0_11_78)))
 (let ((?x21296 (* ?x21229 l_0_11_80)))
 (let ((?x21224 (* 2.0 l_0_11_77)))
 (let ((?x21294 (* ?x21224 l_0_11_79)))
 (let ((?x21289 (* 8.0 l_0_11_63)))
 (let ((?x21292 (* ?x21289 l_0_11_68)))
 (let ((?x21290 (* ?x21289 l_0_11_65)))
 (let ((?x21284 (* 8.0 l_0_11_62)))
 (let ((?x21287 (* ?x21284 l_0_11_67)))
 (let ((?x21285 (* ?x21284 l_0_11_64)))
 (let ((?x21279 (* 8.0 l_0_11_48)))
 (let ((?x21282 (* ?x21279 l_0_11_53)))
 (let ((?x21280 (* ?x21279 l_0_11_50)))
 (let ((?x21274 (* 8.0 l_0_11_47)))
 (let ((?x21277 (* ?x21274 l_0_11_52)))
 (let ((?x21275 (* ?x21274 l_0_11_49)))
 (let ((?x21255 (- (* (* 8.0 l_0_11_19) l_0_11_22) (* (* 2.0 l_0_11_2) l_0_11_4))))
 (let ((?x21261 (+ (+ ?x21255 (* (* 8.0 l_0_11_20) l_0_11_23)) (* (* 8.0 l_0_11_21) l_0_11_24))))
 (let ((?x21267 (- (- ?x21261 (* (* 2.0 l_0_11_3) l_0_11_5)) (* (* 8.0 l_0_11_34) l_0_11_37))))
 (let ((?x21273 (- (- ?x21267 (* (* 8.0 l_0_11_35) l_0_11_38)) (* (* 8.0 l_0_11_36) l_0_11_39))))
 (let ((?x21291 (- (+ (- (- (+ (- (+ ?x21273 ?x21275) ?x21277) ?x21280) ?x21282) ?x21285) ?x21287) ?x21290)))
 (= (+ (+ (+ (- (- (+ ?x21291 ?x21292) ?x21294) ?x21296) ?x21299) ?x21302) ?x21305) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x21396 (* l_0_11_85 l_0_11_85)))
 (let ((?x21394 (* l_0_11_84 l_0_11_84)))
 (let ((?x21392 (* l_0_11_83 l_0_11_83)))
 (let ((?x21390 (* l_0_11_82 l_0_11_82)))
 (let ((?x21229 (* 2.0 l_0_11_78)))
 (let ((?x21230 (* ?x21229 l_0_11_83)))
 (let ((?x21224 (* 2.0 l_0_11_77)))
 (let ((?x21225 (* ?x21224 l_0_11_82)))
 (let ((?x21289 (* 8.0 l_0_11_63)))
 (let ((?x21292 (* ?x21289 l_0_11_68)))
 (let ((?x21284 (* 8.0 l_0_11_62)))
 (let ((?x21287 (* ?x21284 l_0_11_67)))
 (let ((?x21279 (* 8.0 l_0_11_48)))
 (let ((?x21282 (* ?x21279 l_0_11_53)))
 (let ((?x21274 (* 8.0 l_0_11_47)))
 (let ((?x21277 (* ?x21274 l_0_11_52)))
 (let ((?x20961 (* l_0_11_25 l_0_11_25)))
 (let ((?x21368 (* 4.0 ?x20961)))
 (let ((?x20957 (* l_0_11_24 l_0_11_24)))
 (let ((?x21366 (* 4.0 ?x20957)))
 (let ((?x16971 (* l_0_11_23 l_0_11_23)))
 (let ((?x21364 (* 4.0 ?x16971)))
 (let ((?x20953 (* l_0_11_22 l_0_11_22)))
 (let ((?x21350 (* 4.0 ?x20953)))
 (let ((?x21369 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_2) l_0_11_7) ?x21350) ?x21364) ?x21366) ?x21368)))
 (let ((?x21374 (- (- ?x21369 (* (* 2.0 l_0_11_3) l_0_11_8)) (* (* 4.0 l_0_11_37) l_0_11_37))))
 (let ((?x21380 (- (- ?x21374 (* (* 4.0 l_0_11_38) l_0_11_38)) (* (* 4.0 l_0_11_39) l_0_11_39))))
 (let ((?x21386 (- (+ (+ (- ?x21380 (* (* 4.0 l_0_11_40) l_0_11_40)) ?x21277) ?x21282) ?x21287)))
 (let ((?x21397 (+ (+ (+ (+ (- (- (- ?x21386 ?x21292) ?x21225) ?x21230) ?x21390) ?x21392) ?x21394) ?x21396)))
 (= ?x21397 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x21433 (* (* 2.0 l_0_11_85) l_0_11_89)))
 (let ((?x21430 (* (* 2.0 l_0_11_84) l_0_11_88)))
 (let ((?x21427 (* (* 2.0 l_0_11_83) l_0_11_87)))
 (let ((?x21424 (* (* 2.0 l_0_11_82) l_0_11_86)))
 (let ((?x21229 (* 2.0 l_0_11_78)))
 (let ((?x21421 (* ?x21229 l_0_11_87)))
 (let ((?x21224 (* 2.0 l_0_11_77)))
 (let ((?x21419 (* ?x21224 l_0_11_86)))
 (let ((?x21289 (* 8.0 l_0_11_63)))
 (let ((?x21417 (* ?x21289 l_0_11_72)))
 (let ((?x21284 (* 8.0 l_0_11_62)))
 (let ((?x21412 (* ?x21284 l_0_11_71)))
 (let ((?x21279 (* 8.0 l_0_11_48)))
 (let ((?x21407 (* ?x21279 l_0_11_57)))
 (let ((?x21274 (* 8.0 l_0_11_47)))
 (let ((?x2242 (* ?x21274 l_0_11_56)))
 (let ((?x13093 (- (* (* (- 2.0) l_0_11_11) l_0_11_2) (* (* 2.0 l_0_11_12) l_0_11_3))))
 (let ((?x2053 (+ (+ ?x13093 (* (* 8.0 l_0_11_22) l_0_11_26)) (* (* 8.0 l_0_11_23) l_0_11_27))))
 (let ((?x12968 (+ (+ ?x2053 (* (* 8.0 l_0_11_24) l_0_11_28)) (* (* 8.0 l_0_11_25) l_0_11_29))))
 (let ((?x13083 (- (- ?x12968 (* (* 8.0 l_0_11_37) l_0_11_41)) (* (* 8.0 l_0_11_38) l_0_11_42))))
 (let ((?x6499 (- (- ?x13083 (* (* 8.0 l_0_11_39) l_0_11_43)) (* (* 8.0 l_0_11_40) l_0_11_44))))
 (let ((?x21406 (+ (+ (+ ?x6499 (* (* 6.0 l_0_11_47) l_0_11_52)) ?x2242) (* (* 6.0 l_0_11_48) l_0_11_53))))
 (let ((?x21416 (- (- (- (+ ?x21406 ?x21407) (* (* 6.0 l_0_11_62) l_0_11_67)) ?x21412) (* (* 6.0 l_0_11_63) l_0_11_68))))
 (let ((?x21434 (+ (+ (+ (+ (- (- (- ?x21416 ?x21417) ?x21419) ?x21421) ?x21424) ?x21427) ?x21430) ?x21433)))
 (= ?x21434 0.0))))))))))))))))))))))))))
(assert
 (let ((?x21533 (* l_0_11_81 l_0_11_81)))
 (let ((?x21531 (* l_0_11_80 l_0_11_80)))
 (let ((?x21529 (* l_0_11_79 l_0_11_79)))
 (let ((?x21527 (* (* 4.0 l_0_11_66) l_0_11_66)))
 (let ((?x21523 (* 8.0 l_0_11_66)))
 (let ((?x21524 (* ?x21523 l_0_11_69)))
 (let ((?x21521 (* (* 4.0 l_0_11_65) l_0_11_65)))
 (let ((?x21517 (* 8.0 l_0_11_65)))
 (let ((?x21518 (* ?x21517 l_0_11_68)))
 (let ((?x21515 (* (* 4.0 l_0_11_64) l_0_11_64)))
 (let ((?x21511 (* 8.0 l_0_11_64)))
 (let ((?x21512 (* ?x21511 l_0_11_67)))
 (let ((?x21509 (* l_0_11_6 l_0_11_6)))
 (let ((?x21506 (* l_0_11_51 l_0_11_51)))
 (let ((?x21507 (* 4.0 ?x21506)))
 (let ((?x21503 (* 8.0 l_0_11_51)))
 (let ((?x21504 (* ?x21503 l_0_11_54)))
 (let ((?x21500 (* l_0_11_50 l_0_11_50)))
 (let ((?x21501 (* 4.0 ?x21500)))
 (let ((?x21497 (* 8.0 l_0_11_50)))
 (let ((?x21498 (* ?x21497 l_0_11_53)))
 (let ((?x21495 (* l_0_11_5 l_0_11_5)))
 (let ((?x21492 (* l_0_11_49 l_0_11_49)))
 (let ((?x21493 (* 4.0 ?x21492)))
 (let ((?x21473 (* 8.0 l_0_11_49)))
 (let ((?x21475 (* ?x21473 l_0_11_52)))
 (let ((?x21502 (+ (- (- (+ (- (* (- l_0_11_4) l_0_11_4) ?x21475) ?x21493) ?x21495) ?x21498) ?x21501)))
 (let ((?x21522 (- (+ (- (+ (- (+ (- ?x21502 ?x21504) ?x21507) ?x21509) ?x21512) ?x21515) ?x21518) ?x21521)))
 (= (- (- (- (- (+ ?x21522 ?x21524) ?x21527) ?x21529) ?x21531) ?x21533) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x21304 (* 2.0 l_0_11_81)))
 (let ((?x21305 (* ?x21304 l_0_11_84)))
 (let ((?x21301 (* 2.0 l_0_11_80)))
 (let ((?x21302 (* ?x21301 l_0_11_83)))
 (let ((?x21298 (* 2.0 l_0_11_79)))
 (let ((?x21299 (* ?x21298 l_0_11_82)))
 (let ((?x20924 (* l_0_11_70 l_0_11_70)))
 (let ((?x21602 (* 4.0 ?x20924)))
 (let ((?x20921 (* l_0_11_69 l_0_11_69)))
 (let ((?x21600 (* 4.0 ?x20921)))
 (let ((?x20918 (* l_0_11_68 l_0_11_68)))
 (let ((?x21598 (* 4.0 ?x20918)))
 (let ((?x20915 (* l_0_11_67 l_0_11_67)))
 (let ((?x21596 (* 4.0 ?x20915)))
 (let ((?x21523 (* 8.0 l_0_11_66)))
 (let ((?x21524 (* ?x21523 l_0_11_69)))
 (let ((?x21517 (* 8.0 l_0_11_65)))
 (let ((?x21518 (* ?x21517 l_0_11_68)))
 (let ((?x21511 (* 8.0 l_0_11_64)))
 (let ((?x21512 (* ?x21511 l_0_11_67)))
 (let ((?x21503 (* 8.0 l_0_11_51)))
 (let ((?x21504 (* ?x21503 l_0_11_54)))
 (let ((?x21497 (* 8.0 l_0_11_50)))
 (let ((?x21498 (* ?x21497 l_0_11_53)))
 (let ((?x21473 (* 8.0 l_0_11_49)))
 (let ((?x21475 (* ?x21473 l_0_11_52)))
 (let ((?x21575 (- (+ (* (* (- 2.0) l_0_11_4) l_0_11_7) ?x21475) (* (* 2.0 l_0_11_5) l_0_11_8))))
 (let ((?x21583 (- (- (+ (+ ?x21575 ?x21498) ?x21504) (* (* 4.0 l_0_11_52) l_0_11_52)) (* (* 4.0 l_0_11_53) l_0_11_53))))
 (let ((?x21589 (- (- ?x21583 (* (* 4.0 l_0_11_54) l_0_11_54)) (* (* 4.0 l_0_11_55) l_0_11_55))))
 (let ((?x21595 (- (- (- (- ?x21589 (* (* 2.0 l_0_11_6) l_0_11_9)) ?x21512) ?x21518) ?x21524)))
 (let ((?x21606 (- (- (- (+ (+ (+ (+ ?x21595 ?x21596) ?x21598) ?x21600) ?x21602) ?x21299) ?x21302) ?x21305)))
 (= ?x21606 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x21304 (* 2.0 l_0_11_81)))
 (let ((?x21671 (* ?x21304 l_0_11_88)))
 (let ((?x21301 (* 2.0 l_0_11_80)))
 (let ((?x21669 (* ?x21301 l_0_11_87)))
 (let ((?x21298 (* 2.0 l_0_11_79)))
 (let ((?x21667 (* ?x21298 l_0_11_86)))
 (let ((?x21665 (* (* 8.0 l_0_11_70) l_0_11_74)))
 (let ((?x21662 (* (* 8.0 l_0_11_69) l_0_11_73)))
 (let ((?x21659 (* (* 8.0 l_0_11_68) l_0_11_72)))
 (let ((?x21656 (* (* 8.0 l_0_11_67) l_0_11_71)))
 (let ((?x21523 (* 8.0 l_0_11_66)))
 (let ((?x21653 (* ?x21523 l_0_11_73)))
 (let ((?x21517 (* 8.0 l_0_11_65)))
 (let ((?x21648 (* ?x21517 l_0_11_72)))
 (let ((?x21511 (* 8.0 l_0_11_64)))
 (let ((?x21643 (* ?x21511 l_0_11_71)))
 (let ((?x21638 (* (* 8.0 l_0_11_55) l_0_11_59)))
 (let ((?x21635 (* (* 8.0 l_0_11_54) l_0_11_58)))
 (let ((?x21632 (* (* 8.0 l_0_11_53) l_0_11_57)))
 (let ((?x21629 (* (* 8.0 l_0_11_52) l_0_11_56)))
 (let ((?x21503 (* 8.0 l_0_11_51)))
 (let ((?x21626 (* ?x21503 l_0_11_58)))
 (let ((?x21497 (* 8.0 l_0_11_50)))
 (let ((?x21621 (* ?x21497 l_0_11_57)))
 (let ((?x21473 (* 8.0 l_0_11_49)))
 (let ((?x17564 (* ?x21473 l_0_11_56)))
 (let ((?x17620 (- (* (* (- 2.0) l_0_11_11) l_0_11_4) (* (* 2.0 l_0_11_12) l_0_11_5))))
 (let ((?x17561 (+ (- ?x17620 (* (* 2.0 l_0_11_13) l_0_11_6)) (* (* 6.0 l_0_11_49) l_0_11_52))))
 (let ((?x21625 (+ (+ (+ (+ ?x17561 ?x17564) (* (* 6.0 l_0_11_50) l_0_11_53)) ?x21621) (* (* 6.0 l_0_11_51) l_0_11_54))))
 (let ((?x21642 (- (- (- (- (- (+ ?x21625 ?x21626) ?x21629) ?x21632) ?x21635) ?x21638) (* (* 6.0 l_0_11_64) l_0_11_67))))
 (let ((?x21652 (- (- (- (- ?x21642 ?x21643) (* (* 6.0 l_0_11_65) l_0_11_68)) ?x21648) (* (* 6.0 l_0_11_66) l_0_11_69))))
 (let ((?x21670 (- (- (+ (+ (+ (+ (- ?x21652 ?x21653) ?x21656) ?x21659) ?x21662) ?x21665) ?x21667) ?x21669)))
 (= (- ?x21670 ?x21671) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21744 (* l_0_11_9 l_0_11_9)))
 (let ((?x21396 (* l_0_11_85 l_0_11_85)))
 (let ((?x21394 (* l_0_11_84 l_0_11_84)))
 (let ((?x21392 (* l_0_11_83 l_0_11_83)))
 (let ((?x21390 (* l_0_11_82 l_0_11_82)))
 (let ((?x21738 (* l_0_11_8 l_0_11_8)))
 (let ((?x21736 (* (* 4.0 l_0_11_70) l_0_11_70)))
 (let ((?x21733 (* l_0_11_7 l_0_11_7)))
 (let ((?x21731 (* (* 4.0 l_0_11_69) l_0_11_69)))
 (let ((?x21728 (* (* 4.0 l_0_11_68) l_0_11_68)))
 (let ((?x21725 (* (* 4.0 l_0_11_67) l_0_11_67)))
 (let ((?x1794 (* l_0_11_55 l_0_11_55)))
 (let ((?x17604 (* 4.0 ?x1794)))
 (let ((?x8496 (* l_0_11_54 l_0_11_54)))
 (let ((?x17533 (* 4.0 ?x8496)))
 (let ((?x20966 (* l_0_11_53 l_0_11_53)))
 (let ((?x17537 (* 4.0 ?x20966)))
 (let ((?x12786 (* l_0_11_52 l_0_11_52)))
 (let ((?x17555 (* 4.0 ?x12786)))
 (let ((?x21726 (- (+ (+ (+ (+ (* (- l_0_11_10) l_0_11_10) ?x17555) ?x17537) ?x17533) ?x17604) ?x21725)))
 (let ((?x21741 (- (- (- (- (- (- (- ?x21726 ?x21728) ?x21731) ?x21733) ?x21736) ?x21738) ?x21390) ?x21392)))
 (= (- (- (- ?x21741 ?x21394) ?x21396) ?x21744) 0.0)))))))))))))))))))))))
(assert
 (let ((?x21433 (* (* 2.0 l_0_11_85) l_0_11_89)))
 (let ((?x21430 (* (* 2.0 l_0_11_84) l_0_11_88)))
 (let ((?x21427 (* (* 2.0 l_0_11_83) l_0_11_87)))
 (let ((?x21424 (* (* 2.0 l_0_11_82) l_0_11_86)))
 (let ((?x21665 (* (* 8.0 l_0_11_70) l_0_11_74)))
 (let ((?x21662 (* (* 8.0 l_0_11_69) l_0_11_73)))
 (let ((?x21659 (* (* 8.0 l_0_11_68) l_0_11_72)))
 (let ((?x21656 (* (* 8.0 l_0_11_67) l_0_11_71)))
 (let ((?x1794 (* l_0_11_55 l_0_11_55)))
 (let ((?x21769 (* 3.0 ?x1794)))
 (let ((?x21638 (* (* 8.0 l_0_11_55) l_0_11_59)))
 (let ((?x8496 (* l_0_11_54 l_0_11_54)))
 (let ((?x21766 (* 3.0 ?x8496)))
 (let ((?x21635 (* (* 8.0 l_0_11_54) l_0_11_58)))
 (let ((?x20966 (* l_0_11_53 l_0_11_53)))
 (let ((?x21763 (* 3.0 ?x20966)))
 (let ((?x21632 (* (* 8.0 l_0_11_53) l_0_11_57)))
 (let ((?x12786 (* l_0_11_52 l_0_11_52)))
 (let ((?x21760 (* 3.0 ?x12786)))
 (let ((?x21629 (* (* 8.0 l_0_11_52) l_0_11_56)))
 (let ((?x13511 (- (* (* (- 2.0) l_0_11_10) l_0_11_14) (* (* 2.0 l_0_11_11) l_0_11_7))))
 (let ((?x9263 (- (- ?x13511 (* (* 2.0 l_0_11_12) l_0_11_8)) (* (* 2.0 l_0_11_13) l_0_11_9))))
 (let ((?x21768 (+ (+ (+ (+ (+ (+ (+ ?x9263 ?x21629) ?x21760) ?x21632) ?x21763) ?x21635) ?x21766) ?x21638)))
 (let ((?x21775 (- (- (- (+ ?x21768 ?x21769) ?x21656) (* (* 3.0 l_0_11_67) l_0_11_67)) ?x21659)))
 (let ((?x21782 (- (- (- ?x21775 (* (* 3.0 l_0_11_68) l_0_11_68)) ?x21662) (* (* 3.0 l_0_11_69) l_0_11_69))))
 (let ((?x21788 (- (- (- (- ?x21782 ?x21665) (* (* 3.0 l_0_11_70) l_0_11_70)) ?x21424) ?x21427)))
 (= (- (- ?x21788 ?x21430) ?x21433) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x21824 (* l_0_11_90 l_0_11_90)))
 (let ((?x21822 (* l_0_11_89 l_0_11_89)))
 (let ((?x21820 (* l_0_11_88 l_0_11_88)))
 (let ((?x21818 (* l_0_11_87 l_0_11_87)))
 (let ((?x21816 (* l_0_11_86 l_0_11_86)))
 (let ((?x21814 (* (* 4.0 l_0_11_75) l_0_11_75)))
 (let ((?x21811 (* (* 4.0 l_0_11_74) l_0_11_74)))
 (let ((?x21808 (* (* 4.0 l_0_11_73) l_0_11_73)))
 (let ((?x9351 (* (* 4.0 l_0_11_72) l_0_11_72)))
 (let ((?x17835 (* (* 4.0 l_0_11_71) l_0_11_71)))
 (let ((?x20161 (* l_0_11_60 l_0_11_60)))
 (let ((?x17846 (* 4.0 ?x20161)))
 (let ((?x20158 (* l_0_11_59 l_0_11_59)))
 (let ((?x17825 (* 4.0 ?x20158)))
 (let ((?x20155 (* l_0_11_58 l_0_11_58)))
 (let ((?x13507 (* 4.0 ?x20155)))
 (let ((?x20152 (* l_0_11_57 l_0_11_57)))
 (let ((?x13471 (* 4.0 ?x20152)))
 (let ((?x20149 (* l_0_11_56 l_0_11_56)))
 (let ((?x17935 (* 4.0 ?x20149)))
 (let ((?x3299 (* l_0_11_15 l_0_11_15)))
 (let ((?x13662 (* l_0_11_14 l_0_11_14)))
 (let ((?x13661 (* l_0_11_13 l_0_11_13)))
 (let ((?x3236 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x13661)))
 (let ((?x17939 (+ (- (- (- ?x3236 ?x13662) ?x3299) (* (* 24.0 l_0_11_16) l_0_11_22)) (* (* 24.0 l_0_11_31) l_0_11_37))))
 (let ((?x17945 (+ (- ?x17939 (* (* 12.0 l_0_11_46) l_0_11_52)) (* (* 6.0 l_0_11_52) l_0_11_56))))
 (let ((?x3375 (+ (+ ?x17945 (* (* 6.0 l_0_11_53) l_0_11_57)) (* (* 6.0 l_0_11_54) l_0_11_58))))
 (let ((?x13545 (+ (+ (+ (+ ?x3375 (* (* 6.0 l_0_11_55) l_0_11_59)) ?x17935) ?x13471) ?x13507)))
 (let ((?x17837 (- (+ (+ (+ ?x13545 ?x17825) ?x17846) (* (* 12.0 l_0_11_61) l_0_11_67)) (* (* 6.0 l_0_11_67) l_0_11_71))))
 (let ((?x13551 (- (- ?x17837 (* (* 6.0 l_0_11_68) l_0_11_72)) (* (* 6.0 l_0_11_69) l_0_11_73))))
 (let ((?x21809 (- (- (- (- ?x13551 (* (* 6.0 l_0_11_70) l_0_11_74)) ?x17835) ?x9351) ?x21808)))
 (let ((?x21825 (- (- (- (- (- (- (- ?x21809 ?x21811) ?x21814) ?x21816) ?x21818) ?x21820) ?x21822) ?x21824)))
 (= ?x21825 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21927 (* l_0_11_93 l_0_11_93)))
 (let ((?x21925 (* l_0_11_92 l_0_11_92)))
 (let ((?x20642 (* 2.0 l_0_11_76)))
 (let ((?x20643 (* ?x20642 l_0_11_77)))
 (let ((?x21896 (* l_0_11_153 l_0_11_153)))
 (let ((?x21894 (* l_0_11_152 l_0_11_152)))
 (let ((?x21892 (* l_0_11_138 l_0_11_138)))
 (let ((?x21890 (* l_0_11_137 l_0_11_137)))
 (let ((?x21888 (* l_0_11_123 l_0_11_123)))
 (let ((?x21886 (* l_0_11_122 l_0_11_122)))
 (let ((?x21887 (- (- (* (- l_0_11_107) l_0_11_107) (* l_0_11_108 l_0_11_108)) ?x21886)))
 (let ((?x21899 (+ (- (- (- (- (- ?x21887 ?x21888) ?x21890) ?x21892) ?x21894) ?x21896) (* (* 8.0 l_0_11_16) l_0_11_17))))
 (let ((?x21905 (- (- ?x21899 (* (* 1.0 l_0_11_17) l_0_11_17)) (* (* 1.0 l_0_11_18) l_0_11_18))))
 (let ((?x21910 (+ (- ?x21905 (* (* 8.0 l_0_11_31) l_0_11_32)) (* 1.0 (* l_0_11_32 l_0_11_32)))))
 (let ((?x21916 (- (+ ?x21910 (* 1.0 (* l_0_11_33 l_0_11_33))) (* (* 1.0 l_0_11_47) l_0_11_47))))
 (let ((?x21921 (+ (- ?x21916 (* (* 1.0 l_0_11_48) l_0_11_48)) (* 1.0 (* l_0_11_62 l_0_11_62)))))
 (let ((?x21928 (- (- (+ (+ ?x21921 (* 1.0 (* l_0_11_63 l_0_11_63))) ?x20643) ?x21925) ?x21927)))
 (= ?x21928 0.0)))))))))))))))))))
(assert
 (let ((?x20642 (* 2.0 l_0_11_76)))
 (let ((?x20782 (* ?x20642 l_0_11_79)))
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x20634 (* ?x20633 l_0_11_62)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x20625 (* ?x20624 l_0_11_47)))
 (let ((?x21958 (- (* (* (- 2.0) l_0_11_107) l_0_11_109) (* (* 2.0 l_0_11_108) l_0_11_110))))
 (let ((?x21962 (- (- ?x21958 (* (* 2.0 l_0_11_122) l_0_11_124)) (* (* 2.0 l_0_11_123) l_0_11_125))))
 (let ((?x21966 (- (- ?x21962 (* (* 2.0 l_0_11_137) l_0_11_139)) (* (* 2.0 l_0_11_138) l_0_11_140))))
 (let ((?x21970 (- (- ?x21966 (* (* 2.0 l_0_11_152) l_0_11_154)) (* (* 2.0 l_0_11_153) l_0_11_155))))
 (let ((?x21974 (- (+ ?x21970 (* (* 8.0 l_0_11_16) l_0_11_19)) (* (* 2.0 l_0_11_17) l_0_11_19))))
 (let ((?x21978 (- (- ?x21974 (* (* 2.0 l_0_11_18) l_0_11_20)) (* (* 8.0 l_0_11_31) l_0_11_34))))
 (let ((?x21982 (+ (+ ?x21978 (* (* 2.0 l_0_11_32) l_0_11_34)) (* (* 2.0 l_0_11_33) l_0_11_35))))
 (let ((?x21987 (- (- (- ?x21982 ?x20625) (* (* 2.0 l_0_11_47) l_0_11_49)) (* (* 2.0 l_0_11_48) l_0_11_50))))
 (let ((?x21992 (+ (+ (+ ?x21987 ?x20634) (* (* 2.0 l_0_11_62) l_0_11_64)) (* (* 2.0 l_0_11_63) l_0_11_65))))
 (let ((?x21997 (- (- (+ ?x21992 ?x20782) (* (* 2.0 l_0_11_92) l_0_11_94)) (* (* 2.0 l_0_11_93) l_0_11_95))))
 (= ?x21997 0.0))))))))))))))))))
(assert
 (let ((?x20642 (* 2.0 l_0_11_76)))
 (let ((?x21098 (* ?x20642 l_0_11_86)))
 (let ((?x18267 (- (* (* (- 2.0) l_0_11_101) l_0_11_92) (* (* 2.0 l_0_11_102) l_0_11_93))))
 (let ((?x18250 (- (- ?x18267 (* (* 2.0 l_0_11_107) l_0_11_116)) (* (* 2.0 l_0_11_108) l_0_11_117))))
 (let ((?x14099 (- (- ?x18250 (* (* 2.0 l_0_11_122) l_0_11_131)) (* (* 2.0 l_0_11_123) l_0_11_132))))
 (let ((?x3533 (- (- ?x14099 (* (* 2.0 l_0_11_137) l_0_11_146)) (* (* 2.0 l_0_11_138) l_0_11_147))))
 (let ((?x13799 (- (- ?x3533 (* (* 2.0 l_0_11_152) l_0_11_161)) (* (* 2.0 l_0_11_153) l_0_11_162))))
 (let ((?x13877 (- (+ ?x13799 (* (* 8.0 l_0_11_16) l_0_11_26)) (* (* 2.0 l_0_11_17) l_0_11_26))))
 (let ((?x13970 (- (- ?x13877 (* (* 2.0 l_0_11_18) l_0_11_27)) (* (* 8.0 l_0_11_31) l_0_11_41))))
 (let ((?x13995 (+ (+ ?x13970 (* (* 2.0 l_0_11_32) l_0_11_41)) (* (* 2.0 l_0_11_33) l_0_11_42))))
 (let ((?x18073 (- (+ ?x13995 (* (* 6.0 l_0_11_46) l_0_11_47)) (* (* 2.0 l_0_11_47) l_0_11_56))))
 (let ((?x18108 (- (- ?x18073 (* (* 2.0 l_0_11_48) l_0_11_57)) (* (* 6.0 l_0_11_61) l_0_11_62))))
 (let ((?x18113 (+ (+ ?x18108 (* (* 2.0 l_0_11_62) l_0_11_71)) (* (* 2.0 l_0_11_63) l_0_11_72))))
 (= (+ ?x18113 ?x21098) 0.0)))))))))))))))
(assert
 (let ((?x22125 (* l_0_11_96 l_0_11_96)))
 (let ((?x22123 (* l_0_11_95 l_0_11_95)))
 (let ((?x22121 (* l_0_11_94 l_0_11_94)))
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x20769 (* ?x20633 l_0_11_64)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x20756 (* ?x20624 l_0_11_49)))
 (let ((?x22084 (* l_0_11_156 l_0_11_156)))
 (let ((?x22082 (* l_0_11_155 l_0_11_155)))
 (let ((?x22080 (* l_0_11_154 l_0_11_154)))
 (let ((?x22078 (* l_0_11_141 l_0_11_141)))
 (let ((?x22076 (* l_0_11_140 l_0_11_140)))
 (let ((?x22074 (* l_0_11_139 l_0_11_139)))
 (let ((?x22072 (* l_0_11_126 l_0_11_126)))
 (let ((?x22070 (* l_0_11_125 l_0_11_125)))
 (let ((?x22068 (* l_0_11_124 l_0_11_124)))
 (let ((?x22066 (* l_0_11_111 l_0_11_111)))
 (let ((?x22067 (- (- (* (- l_0_11_109) l_0_11_109) (* l_0_11_110 l_0_11_110)) ?x22066)))
 (let ((?x22081 (- (- (- (- (- (- (- ?x22067 ?x22068) ?x22070) ?x22072) ?x22074) ?x22076) ?x22078) ?x22080)))
 (let ((?x22091 (- (- (- (- ?x22081 ?x22082) ?x22084) (* (* 1.0 l_0_11_19) l_0_11_19)) (* (* 1.0 l_0_11_20) l_0_11_20))))
 (let ((?x22097 (+ (- ?x22091 (* (* 1.0 l_0_11_21) l_0_11_21)) (* 1.0 (* l_0_11_34 l_0_11_34)))))
 (let ((?x22103 (+ (+ ?x22097 (* 1.0 (* l_0_11_35 l_0_11_35))) (* 1.0 (* l_0_11_36 l_0_11_36)))))
 (let ((?x22110 (- (- (- ?x22103 ?x20756) (* (* 1.0 l_0_11_49) l_0_11_49)) (* (* 1.0 l_0_11_50) l_0_11_50))))
 (let ((?x22116 (+ (+ (- ?x22110 (* (* 1.0 l_0_11_51) l_0_11_51)) ?x20769) (* 1.0 (* l_0_11_64 l_0_11_64)))))
 (let ((?x22120 (+ (+ ?x22116 (* 1.0 (* l_0_11_65 l_0_11_65))) (* 1.0 (* l_0_11_66 l_0_11_66)))))
 (= (- (- (- ?x22120 ?x22121) ?x22123) ?x22125) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x21084 (* ?x20633 l_0_11_71)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x21068 (* ?x20624 l_0_11_56)))
 (let ((?x22150 (- (* (* (- 2.0) l_0_11_101) l_0_11_94) (* (* 2.0 l_0_11_102) l_0_11_95))))
 (let ((?x22154 (- (- ?x22150 (* (* 2.0 l_0_11_103) l_0_11_96)) (* (* 2.0 l_0_11_109) l_0_11_116))))
 (let ((?x22158 (- (- ?x22154 (* (* 2.0 l_0_11_110) l_0_11_117)) (* (* 2.0 l_0_11_111) l_0_11_118))))
 (let ((?x22162 (- (- ?x22158 (* (* 2.0 l_0_11_124) l_0_11_131)) (* (* 2.0 l_0_11_125) l_0_11_132))))
 (let ((?x22166 (- (- ?x22162 (* (* 2.0 l_0_11_126) l_0_11_133)) (* (* 2.0 l_0_11_139) l_0_11_146))))
 (let ((?x22170 (- (- ?x22166 (* (* 2.0 l_0_11_140) l_0_11_147)) (* (* 2.0 l_0_11_141) l_0_11_148))))
 (let ((?x22174 (- (- ?x22170 (* (* 2.0 l_0_11_154) l_0_11_161)) (* (* 2.0 l_0_11_155) l_0_11_162))))
 (let ((?x22178 (- (- ?x22174 (* (* 2.0 l_0_11_156) l_0_11_163)) (* (* 2.0 l_0_11_19) l_0_11_26))))
 (let ((?x22182 (- (- ?x22178 (* (* 2.0 l_0_11_20) l_0_11_27)) (* (* 2.0 l_0_11_21) l_0_11_28))))
 (let ((?x22186 (+ (+ ?x22182 (* (* 2.0 l_0_11_34) l_0_11_41)) (* (* 2.0 l_0_11_35) l_0_11_42))))
 (let ((?x22190 (+ (+ ?x22186 (* (* 2.0 l_0_11_36) l_0_11_43)) (* (* 6.0 l_0_11_46) l_0_11_49))))
 (let ((?x22195 (- (- (- ?x22190 ?x21068) (* (* 2.0 l_0_11_49) l_0_11_56)) (* (* 2.0 l_0_11_50) l_0_11_57))))
 (let ((?x22199 (- (- ?x22195 (* (* 2.0 l_0_11_51) l_0_11_58)) (* (* 6.0 l_0_11_61) l_0_11_64))))
 (let ((?x22204 (+ (+ (+ ?x22199 ?x21084) (* (* 2.0 l_0_11_64) l_0_11_71)) (* (* 2.0 l_0_11_65) l_0_11_72))))
 (= (+ ?x22204 (* (* 2.0 l_0_11_66) l_0_11_73)) 0.0))))))))))))))))))))
(assert
 (let ((?x21824 (* l_0_11_90 l_0_11_90)))
 (let ((?x21822 (* l_0_11_89 l_0_11_89)))
 (let ((?x21820 (* l_0_11_88 l_0_11_88)))
 (let ((?x21818 (* l_0_11_87 l_0_11_87)))
 (let ((?x21816 (* l_0_11_86 l_0_11_86)))
 (let ((?x20385 (* l_0_11_30 l_0_11_30)))
 (let ((?x22258 (* 4.0 ?x20385)))
 (let ((?x7451 (* l_0_11_29 l_0_11_29)))
 (let ((?x22256 (* 4.0 ?x7451)))
 (let ((?x20380 (* l_0_11_28 l_0_11_28)))
 (let ((?x22254 (* 4.0 ?x20380)))
 (let ((?x20376 (* l_0_11_27 l_0_11_27)))
 (let ((?x18729 (* 4.0 ?x20376)))
 (let ((?x7502 (* l_0_11_26 l_0_11_26)))
 (let ((?x18728 (* 4.0 ?x7502)))
 (let ((?x22257 (+ (+ (+ (+ (* (* (- 24.0) l_0_11_16) l_0_11_17) ?x18728) ?x18729) ?x22254) ?x22256)))
 (let ((?x22264 (- (+ (+ ?x22257 ?x22258) (* (* 24.0 l_0_11_31) l_0_11_32)) (* (* 4.0 l_0_11_41) l_0_11_41))))
 (let ((?x22270 (- (- ?x22264 (* (* 4.0 l_0_11_42) l_0_11_42)) (* (* 4.0 l_0_11_43) l_0_11_43))))
 (let ((?x22276 (- (- ?x22270 (* (* 4.0 l_0_11_44) l_0_11_44)) (* (* 4.0 l_0_11_45) l_0_11_45))))
 (let ((?x22280 (+ (- ?x22276 (* (* 12.0 l_0_11_46) l_0_11_47)) (* (* 6.0 l_0_11_47) l_0_11_56))))
 (let ((?x22284 (+ (+ ?x22280 (* (* 6.0 l_0_11_48) l_0_11_57)) (* (* 12.0 l_0_11_61) l_0_11_62))))
 (let ((?x22288 (- (- ?x22284 (* (* 6.0 l_0_11_62) l_0_11_71)) (* (* 6.0 l_0_11_63) l_0_11_72))))
 (= (+ (+ (+ (+ (+ ?x22288 ?x21816) ?x21818) ?x21820) ?x21822) ?x21824) 0.0))))))))))))))))))))))))
(assert
 (let ((?x7274 (* l_0_11_75 l_0_11_75)))
 (let ((?x18083 (* 4.0 ?x7274)))
 (let ((?x12008 (* l_0_11_74 l_0_11_74)))
 (let ((?x21868 (* 4.0 ?x12008)))
 (let ((?x16095 (* l_0_11_73 l_0_11_73)))
 (let ((?x13879 (* 4.0 ?x16095)))
 (let ((?x16093 (* l_0_11_72 l_0_11_72)))
 (let ((?x9517 (* 4.0 ?x16093)))
 (let ((?x12002 (* l_0_11_71 l_0_11_71)))
 (let ((?x21859 (* 4.0 ?x12002)))
 (let ((?x22308 (+ (* (* (- 24.0) l_0_11_16) l_0_11_19) (* (* 24.0 l_0_11_31) l_0_11_34))))
 (let ((?x22312 (+ (- ?x22308 (* (* 12.0 l_0_11_46) l_0_11_49)) (* (* 6.0 l_0_11_49) l_0_11_56))))
 (let ((?x22316 (+ (+ ?x22312 (* (* 6.0 l_0_11_50) l_0_11_57)) (* (* 6.0 l_0_11_51) l_0_11_58))))
 (let ((?x22322 (- (- ?x22316 (* (* 4.0 l_0_11_56) l_0_11_56)) (* (* 4.0 l_0_11_57) l_0_11_57))))
 (let ((?x22328 (- (- ?x22322 (* (* 4.0 l_0_11_58) l_0_11_58)) (* (* 4.0 l_0_11_59) l_0_11_59))))
 (let ((?x22333 (+ (- ?x22328 (* (* 4.0 l_0_11_60) l_0_11_60)) (* (* 12.0 l_0_11_61) l_0_11_64))))
 (let ((?x22337 (- (- ?x22333 (* (* 6.0 l_0_11_64) l_0_11_71)) (* (* 6.0 l_0_11_65) l_0_11_72))))
 (let ((?x22342 (+ (+ (+ (- ?x22337 (* (* 6.0 l_0_11_66) l_0_11_73)) ?x21859) ?x9517) ?x13879)))
 (= (+ (+ ?x22342 ?x21868) ?x18083) 0.0))))))))))))))))))))
(assert
 (let ((?x12920 (* l_0_11_63 l_0_11_63)))
 (let ((?x22384 (* 6.0 ?x12920)))
 (let ((?x2133 (* l_0_11_62 l_0_11_62)))
 (let ((?x22382 (* 6.0 ?x2133)))
 (let ((?x21911 (* l_0_11_33 l_0_11_33)))
 (let ((?x22376 (* 12.0 ?x21911)))
 (let ((?x21908 (* l_0_11_32 l_0_11_32)))
 (let ((?x22374 (* 12.0 ?x21908)))
 (let ((?x18804 (- (* (* (- 12.0) l_0_11_17) l_0_11_17) (* (* 12.0 l_0_11_18) l_0_11_18))))
 (let ((?x22381 (- (- (+ (+ ?x18804 ?x22374) ?x22376) (* (* 6.0 l_0_11_47) l_0_11_47)) (* (* 6.0 l_0_11_48) l_0_11_48))))
 (= (+ (+ ?x22381 ?x22382) ?x22384) 0.0))))))))))))
(assert
 (let ((?x22399 (- (* (* (- 24.0) l_0_11_17) l_0_11_19) (* (* 24.0 l_0_11_18) l_0_11_20))))
 (let ((?x22405 (+ (+ ?x22399 (* (* 24.0 l_0_11_32) l_0_11_34)) (* (* 24.0 l_0_11_33) l_0_11_35))))
 (let ((?x22411 (- (- ?x22405 (* (* 12.0 l_0_11_47) l_0_11_49)) (* (* 12.0 l_0_11_48) l_0_11_50))))
 (let ((?x22417 (+ (+ ?x22411 (* (* 12.0 l_0_11_62) l_0_11_64)) (* (* 12.0 l_0_11_63) l_0_11_65))))
 (= ?x22417 0.0))))))
(assert
 (let ((?x22440 (- (* (* (- 24.0) l_0_11_17) l_0_11_22) (* (* 24.0 l_0_11_18) l_0_11_23))))
 (let ((?x22444 (+ (+ ?x22440 (* (* 24.0 l_0_11_32) l_0_11_37)) (* (* 24.0 l_0_11_33) l_0_11_38))))
 (let ((?x22448 (- (- ?x22444 (* (* 12.0 l_0_11_47) l_0_11_52)) (* (* 12.0 l_0_11_48) l_0_11_53))))
 (let ((?x22452 (+ (+ ?x22448 (* (* 12.0 l_0_11_62) l_0_11_67)) (* (* 12.0 l_0_11_63) l_0_11_68))))
 (= ?x22452 0.0))))))
(assert
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x20634 (* ?x20633 l_0_11_62)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x20625 (* ?x20624 l_0_11_47)))
 (let ((?x2912 (- (* (* (- 24.0) l_0_11_17) l_0_11_26) (* (* 24.0 l_0_11_18) l_0_11_27))))
 (let ((?x10232 (+ (+ ?x2912 (* (* 24.0 l_0_11_32) l_0_11_41)) (* (* 24.0 l_0_11_33) l_0_11_42))))
 (let ((?x18834 (- (- (+ ?x10232 ?x20625) (* (* 12.0 l_0_11_47) l_0_11_56)) (* (* 12.0 l_0_11_48) l_0_11_57))))
 (let ((?x14818 (+ (+ (- ?x18834 ?x20634) (* (* 12.0 l_0_11_62) l_0_11_71)) (* (* 12.0 l_0_11_63) l_0_11_72))))
 (= ?x14818 0.0))))))))))
(assert
 (let ((?x22101 (* l_0_11_36 l_0_11_36)))
 (let ((?x22501 (* 12.0 ?x22101)))
 (let ((?x22098 (* l_0_11_35 l_0_11_35)))
 (let ((?x22499 (* 12.0 ?x22098)))
 (let ((?x22095 (* l_0_11_34 l_0_11_34)))
 (let ((?x22497 (* 12.0 ?x22095)))
 (let ((?x22493 (- (* (* (- 12.0) l_0_11_19) l_0_11_19) (* (* 12.0 l_0_11_20) l_0_11_20))))
 (let ((?x22502 (+ (+ (+ (- ?x22493 (* (* 12.0 l_0_11_21) l_0_11_21)) ?x22497) ?x22499) ?x22501)))
 (let ((?x22506 (- (- ?x22502 (* (* 6.0 l_0_11_49) l_0_11_49)) (* (* 6.0 l_0_11_50) l_0_11_50))))
 (let ((?x22510 (+ (- ?x22506 (* (* 6.0 l_0_11_51) l_0_11_51)) (* 6.0 (* l_0_11_64 l_0_11_64)))))
 (let ((?x22514 (+ (+ ?x22510 (* 6.0 (* l_0_11_65 l_0_11_65))) (* 6.0 (* l_0_11_66 l_0_11_66)))))
 (= ?x22514 0.0)))))))))))))
(assert
 (let ((?x22538 (- (* (* (- 24.0) l_0_11_19) l_0_11_22) (* (* 24.0 l_0_11_20) l_0_11_23))))
 (let ((?x22544 (+ (- ?x22538 (* (* 24.0 l_0_11_21) l_0_11_24)) (* (* 24.0 l_0_11_34) l_0_11_37))))
 (let ((?x22550 (+ (+ ?x22544 (* (* 24.0 l_0_11_35) l_0_11_38)) (* (* 24.0 l_0_11_36) l_0_11_39))))
 (let ((?x22556 (- (- ?x22550 (* (* 12.0 l_0_11_49) l_0_11_52)) (* (* 12.0 l_0_11_50) l_0_11_53))))
 (let ((?x22562 (+ (- ?x22556 (* (* 12.0 l_0_11_51) l_0_11_54)) (* (* 12.0 l_0_11_64) l_0_11_67))))
 (let ((?x22568 (+ (+ ?x22562 (* (* 12.0 l_0_11_65) l_0_11_68)) (* (* 12.0 l_0_11_66) l_0_11_69))))
 (= ?x22568 0.0))))))))
(assert
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x20769 (* ?x20633 l_0_11_64)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x20756 (* ?x20624 l_0_11_49)))
 (let ((?x18881 (- (* (* (- 24.0) l_0_11_19) l_0_11_26) (* (* 24.0 l_0_11_20) l_0_11_27))))
 (let ((?x22587 (+ (- ?x18881 (* (* 24.0 l_0_11_21) l_0_11_28)) (* (* 24.0 l_0_11_34) l_0_11_41))))
 (let ((?x22591 (+ (+ ?x22587 (* (* 24.0 l_0_11_35) l_0_11_42)) (* (* 24.0 l_0_11_36) l_0_11_43))))
 (let ((?x22596 (- (- (+ ?x22591 ?x20756) (* (* 12.0 l_0_11_49) l_0_11_56)) (* (* 12.0 l_0_11_50) l_0_11_57))))
 (let ((?x22601 (+ (- (- ?x22596 (* (* 12.0 l_0_11_51) l_0_11_58)) ?x20769) (* (* 12.0 l_0_11_64) l_0_11_71))))
 (let ((?x22605 (+ (+ ?x22601 (* (* 12.0 l_0_11_65) l_0_11_72)) (* (* 12.0 l_0_11_66) l_0_11_73))))
 (= ?x22605 0.0))))))))))))
(assert
 (let ((?x20898 (* l_0_11_40 l_0_11_40)))
 (let ((?x22649 (* 12.0 ?x20898)))
 (let ((?x20895 (* l_0_11_39 l_0_11_39)))
 (let ((?x22647 (* 12.0 ?x20895)))
 (let ((?x20892 (* l_0_11_38 l_0_11_38)))
 (let ((?x22645 (* 12.0 ?x20892)))
 (let ((?x20889 (* l_0_11_37 l_0_11_37)))
 (let ((?x22643 (* 12.0 ?x20889)))
 (let ((?x22636 (- (* (* (- 12.0) l_0_11_22) l_0_11_22) (* (* 12.0 l_0_11_23) l_0_11_23))))
 (let ((?x22642 (- (- ?x22636 (* (* 12.0 l_0_11_24) l_0_11_24)) (* (* 12.0 l_0_11_25) l_0_11_25))))
 (let ((?x22652 (- (+ (+ (+ (+ ?x22642 ?x22643) ?x22645) ?x22647) ?x22649) (* (* 6.0 l_0_11_52) l_0_11_52))))
 (let ((?x22656 (- (- ?x22652 (* (* 6.0 l_0_11_53) l_0_11_53)) (* (* 6.0 l_0_11_54) l_0_11_54))))
 (let ((?x22660 (+ (- ?x22656 (* (* 6.0 l_0_11_55) l_0_11_55)) (* 6.0 (* l_0_11_67 l_0_11_67)))))
 (let ((?x22664 (+ (+ ?x22660 (* 6.0 (* l_0_11_68 l_0_11_68))) (* 6.0 (* l_0_11_69 l_0_11_69)))))
 (= (+ ?x22664 (* 6.0 (* l_0_11_70 l_0_11_70))) 0.0))))))))))))))))
(assert
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x20771 (* ?x20633 l_0_11_67)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x20758 (* ?x20624 l_0_11_52)))
 (let ((?x22703 (- (* (* (- 24.0) l_0_11_22) l_0_11_26) (* (* 24.0 l_0_11_23) l_0_11_27))))
 (let ((?x22709 (- (- ?x22703 (* (* 24.0 l_0_11_24) l_0_11_28)) (* (* 24.0 l_0_11_25) l_0_11_29))))
 (let ((?x22715 (+ (+ ?x22709 (* (* 24.0 l_0_11_37) l_0_11_41)) (* (* 24.0 l_0_11_38) l_0_11_42))))
 (let ((?x22721 (+ (+ ?x22715 (* (* 24.0 l_0_11_39) l_0_11_43)) (* (* 24.0 l_0_11_40) l_0_11_44))))
 (let ((?x22728 (- (- (+ ?x22721 ?x20758) (* (* 12.0 l_0_11_52) l_0_11_56)) (* (* 12.0 l_0_11_53) l_0_11_57))))
 (let ((?x22734 (- (- ?x22728 (* (* 12.0 l_0_11_54) l_0_11_58)) (* (* 12.0 l_0_11_55) l_0_11_59))))
 (let ((?x22741 (+ (+ (- ?x22734 ?x20771) (* (* 12.0 l_0_11_67) l_0_11_71)) (* (* 12.0 l_0_11_68) l_0_11_72))))
 (let ((?x22747 (+ (+ ?x22741 (* (* 12.0 l_0_11_69) l_0_11_73)) (* (* 12.0 l_0_11_70) l_0_11_74))))
 (= ?x22747 0.0))))))))))))))
(assert
 (let ((?x7274 (* l_0_11_75 l_0_11_75)))
 (let ((?x22817 (* 6.0 ?x7274)))
 (let ((?x12008 (* l_0_11_74 l_0_11_74)))
 (let ((?x22815 (* 6.0 ?x12008)))
 (let ((?x16095 (* l_0_11_73 l_0_11_73)))
 (let ((?x22813 (* 6.0 ?x16095)))
 (let ((?x16093 (* l_0_11_72 l_0_11_72)))
 (let ((?x22811 (* 6.0 ?x16093)))
 (let ((?x12002 (* l_0_11_71 l_0_11_71)))
 (let ((?x22809 (* 6.0 ?x12002)))
 (let ((?x20633 (* 8.0 l_0_11_61)))
 (let ((?x21084 (* ?x20633 l_0_11_71)))
 (let ((?x20624 (* 8.0 l_0_11_46)))
 (let ((?x21068 (* ?x20624 l_0_11_56)))
 (let ((?x20284 (* l_0_11_45 l_0_11_45)))
 (let ((?x22790 (* 12.0 ?x20284)))
 (let ((?x20281 (* l_0_11_44 l_0_11_44)))
 (let ((?x22788 (* 12.0 ?x20281)))
 (let ((?x20278 (* l_0_11_43 l_0_11_43)))
 (let ((?x22786 (* 12.0 ?x20278)))
 (let ((?x20275 (* l_0_11_42 l_0_11_42)))
 (let ((?x22784 (* 12.0 ?x20275)))
 (let ((?x20272 (* l_0_11_41 l_0_11_41)))
 (let ((?x22782 (* 12.0 ?x20272)))
 (let ((?x22772 (- (* (* (- 12.0) l_0_11_26) l_0_11_26) (* (* 12.0 l_0_11_27) l_0_11_27))))
 (let ((?x22778 (- (- ?x22772 (* (* 12.0 l_0_11_28) l_0_11_28)) (* (* 12.0 l_0_11_29) l_0_11_29))))
 (let ((?x22787 (+ (+ (+ (- ?x22778 (* (* 12.0 l_0_11_30) l_0_11_30)) ?x22782) ?x22784) ?x22786)))
 (let ((?x22795 (- (+ (+ (+ ?x22787 ?x22788) ?x22790) ?x21068) (* (* 6.0 l_0_11_56) l_0_11_56))))
 (let ((?x22801 (- (- ?x22795 (* (* 6.0 l_0_11_57) l_0_11_57)) (* (* 6.0 l_0_11_58) l_0_11_58))))
 (let ((?x22807 (- (- ?x22801 (* (* 6.0 l_0_11_59) l_0_11_59)) (* (* 6.0 l_0_11_60) l_0_11_60))))
 (= (+ (+ (+ (+ (+ (- ?x22807 ?x21084) ?x22809) ?x22811) ?x22813) ?x22815) ?x22817) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x21232 (* l_0_11_78 l_0_11_78)))
 (let ((?x21227 (* l_0_11_77 l_0_11_77)))
 (let ((?x21947 (* l_0_11_18 l_0_11_18)))
 (let ((?x19019 (* 4.0 ?x21947)))
 (let ((?x3542 (* l_0_11_17 l_0_11_17)))
 (let ((?x19018 (* 4.0 ?x3542)))
 (let ((?x22860 (+ ?x19018 ?x19019)))
 (let ((?x22866 (- (- ?x22860 (* (* 4.0 l_0_11_32) l_0_11_32)) (* (* 4.0 l_0_11_33) l_0_11_33))))
 (= (+ (+ ?x22866 ?x21227) ?x21232) 0.0))))))))))
(assert
 (let ((?x21229 (* 2.0 l_0_11_78)))
 (let ((?x21296 (* ?x21229 l_0_11_80)))
 (let ((?x21224 (* 2.0 l_0_11_77)))
 (let ((?x21294 (* ?x21224 l_0_11_79)))
 (let ((?x12920 (* l_0_11_63 l_0_11_63)))
 (let ((?x12921 (* 4.0 ?x12920)))
 (let ((?x2133 (* l_0_11_62 l_0_11_62)))
 (let ((?x17283 (* 4.0 ?x2133)))
 (let ((?x22878 (+ (* (* 8.0 l_0_11_17) l_0_11_19) (* (* 8.0 l_0_11_18) l_0_11_20))))
 (let ((?x22882 (- (- ?x22878 (* (* 8.0 l_0_11_32) l_0_11_34)) (* (* 8.0 l_0_11_33) l_0_11_35))))
 (let ((?x22888 (- (- ?x22882 (* (* 4.0 l_0_11_47) l_0_11_47)) (* (* 4.0 l_0_11_48) l_0_11_48))))
 (= (+ (+ (+ (+ ?x22888 ?x17283) ?x12921) ?x21294) ?x21296) 0.0)))))))))))))
(assert
 (let ((?x21229 (* 2.0 l_0_11_78)))
 (let ((?x21421 (* ?x21229 l_0_11_87)))
 (let ((?x21224 (* 2.0 l_0_11_77)))
 (let ((?x21419 (* ?x21224 l_0_11_86)))
 (let ((?x21215 (* l_0_11_48 l_0_11_48)))
 (let ((?x15183 (* 3.0 ?x21215)))
 (let ((?x21212 (* l_0_11_47 l_0_11_47)))
 (let ((?x19017 (* 3.0 ?x21212)))
 (let ((?x19083 (+ (* (* 8.0 l_0_11_17) l_0_11_26) (* (* 8.0 l_0_11_18) l_0_11_27))))
 (let ((?x19014 (- (- ?x19083 (* (* 8.0 l_0_11_32) l_0_11_41)) (* (* 8.0 l_0_11_33) l_0_11_42))))
 (let ((?x19006 (- (- (+ (+ ?x19014 ?x19017) ?x15183) (* (* 3.0 l_0_11_62) l_0_11_62)) (* (* 3.0 l_0_11_63) l_0_11_63))))
 (= (+ (+ ?x19006 ?x21419) ?x21421) 0.0)))))))))))))
(assert
 (let ((?x21533 (* l_0_11_81 l_0_11_81)))
 (let ((?x21531 (* l_0_11_80 l_0_11_80)))
 (let ((?x21529 (* l_0_11_79 l_0_11_79)))
 (let ((?x21289 (* 8.0 l_0_11_63)))
 (let ((?x21290 (* ?x21289 l_0_11_65)))
 (let ((?x21284 (* 8.0 l_0_11_62)))
 (let ((?x21285 (* ?x21284 l_0_11_64)))
 (let ((?x21279 (* 8.0 l_0_11_48)))
 (let ((?x21280 (* ?x21279 l_0_11_50)))
 (let ((?x21274 (* 8.0 l_0_11_47)))
 (let ((?x21275 (* ?x21274 l_0_11_49)))
 (let ((?x4188 (* l_0_11_21 l_0_11_21)))
 (let ((?x22920 (* 4.0 ?x4188)))
 (let ((?x18537 (* l_0_11_20 l_0_11_20)))
 (let ((?x22918 (* 4.0 ?x18537)))
 (let ((?x4146 (* l_0_11_19 l_0_11_19)))
 (let ((?x10689 (* 4.0 ?x4146)))
 (let ((?x22927 (- (- (+ (+ ?x10689 ?x22918) ?x22920) (* (* 4.0 l_0_11_34) l_0_11_34)) (* (* 4.0 l_0_11_35) l_0_11_35))))
 (let ((?x22933 (+ (- (- (- ?x22927 (* (* 4.0 l_0_11_36) l_0_11_36)) ?x21275) ?x21280) ?x21285)))
 (= (+ (+ (+ (+ ?x22933 ?x21290) ?x21529) ?x21531) ?x21533) 0.0)))))))))))))))))))))
(assert
 (let ((?x21304 (* 2.0 l_0_11_81)))
 (let ((?x21671 (* ?x21304 l_0_11_88)))
 (let ((?x21301 (* 2.0 l_0_11_80)))
 (let ((?x21669 (* ?x21301 l_0_11_87)))
 (let ((?x21298 (* 2.0 l_0_11_79)))
 (let ((?x21667 (* ?x21298 l_0_11_86)))
 (let ((?x21289 (* 8.0 l_0_11_63)))
 (let ((?x21417 (* ?x21289 l_0_11_72)))
 (let ((?x21284 (* 8.0 l_0_11_62)))
 (let ((?x21412 (* ?x21284 l_0_11_71)))
 (let ((?x21279 (* 8.0 l_0_11_48)))
 (let ((?x21407 (* ?x21279 l_0_11_57)))
 (let ((?x21274 (* 8.0 l_0_11_47)))
 (let ((?x2242 (* ?x21274 l_0_11_56)))
 (let ((?x10761 (+ (* (* 8.0 l_0_11_19) l_0_11_26) (* (* 8.0 l_0_11_20) l_0_11_27))))
 (let ((?x15192 (- (+ ?x10761 (* (* 8.0 l_0_11_21) l_0_11_28)) (* (* 8.0 l_0_11_34) l_0_11_41))))
 (let ((?x5587 (- (- ?x15192 (* (* 8.0 l_0_11_35) l_0_11_42)) (* (* 8.0 l_0_11_36) l_0_11_43))))
 (let ((?x22957 (+ (- (+ ?x5587 (* (* 6.0 l_0_11_47) l_0_11_49)) ?x2242) (* (* 6.0 l_0_11_48) l_0_11_50))))
 (let ((?x22963 (- (+ (- (- ?x22957 ?x21407) (* (* 6.0 l_0_11_62) l_0_11_64)) ?x21412) (* (* 6.0 l_0_11_63) l_0_11_65))))
 (= (+ (+ (+ (+ ?x22963 ?x21417) ?x21667) ?x21669) ?x21671) 0.0)))))))))))))))))))))
(assert
 (let ((?x21222 (* (* 4.0 l_0_11_63) l_0_11_63)))
 (let ((?x21219 (* (* 4.0 l_0_11_62) l_0_11_62)))
 (let ((?x21215 (* l_0_11_48 l_0_11_48)))
 (let ((?x21216 (* 4.0 ?x21215)))
 (let ((?x21212 (* l_0_11_47 l_0_11_47)))
 (let ((?x21213 (* 4.0 ?x21212)))
 (let ((?x19091 (+ ?x21213 ?x21216)))
 (= (- (- ?x19091 ?x21219) ?x21222) 0.0)))))))))
(assert
 (let ((?x21289 (* 8.0 l_0_11_63)))
 (let ((?x21290 (* ?x21289 l_0_11_65)))
 (let ((?x21284 (* 8.0 l_0_11_62)))
 (let ((?x21285 (* ?x21284 l_0_11_64)))
 (let ((?x21279 (* 8.0 l_0_11_48)))
 (let ((?x21280 (* ?x21279 l_0_11_50)))
 (let ((?x21274 (* 8.0 l_0_11_47)))
 (let ((?x21275 (* ?x21274 l_0_11_49)))
 (= (- (- (+ ?x21275 ?x21280) ?x21285) ?x21290) 0.0))))))))))
(assert
 (let ((?x21289 (* 8.0 l_0_11_63)))
 (let ((?x21292 (* ?x21289 l_0_11_68)))
 (let ((?x21284 (* 8.0 l_0_11_62)))
 (let ((?x21287 (* ?x21284 l_0_11_67)))
 (let ((?x21279 (* 8.0 l_0_11_48)))
 (let ((?x21282 (* ?x21279 l_0_11_53)))
 (let ((?x21274 (* 8.0 l_0_11_47)))
 (let ((?x21277 (* ?x21274 l_0_11_52)))
 (= (- (- (+ ?x21277 ?x21282) ?x21287) ?x21292) 0.0))))))))))
(assert
 (let ((?x21289 (* 8.0 l_0_11_63)))
 (let ((?x21417 (* ?x21289 l_0_11_72)))
 (let ((?x21284 (* 8.0 l_0_11_62)))
 (let ((?x21412 (* ?x21284 l_0_11_71)))
 (let ((?x21279 (* 8.0 l_0_11_48)))
 (let ((?x21407 (* ?x21279 l_0_11_57)))
 (let ((?x21274 (* 8.0 l_0_11_47)))
 (let ((?x2242 (* ?x21274 l_0_11_56)))
 (= (- (- (+ ?x2242 ?x21407) ?x21412) ?x21417) 0.0))))))))))
(assert
 (let ((?x21527 (* (* 4.0 l_0_11_66) l_0_11_66)))
 (let ((?x21521 (* (* 4.0 l_0_11_65) l_0_11_65)))
 (let ((?x21515 (* (* 4.0 l_0_11_64) l_0_11_64)))
 (let ((?x21506 (* l_0_11_51 l_0_11_51)))
 (let ((?x21507 (* 4.0 ?x21506)))
 (let ((?x21500 (* l_0_11_50 l_0_11_50)))
 (let ((?x21501 (* 4.0 ?x21500)))
 (let ((?x21492 (* l_0_11_49 l_0_11_49)))
 (let ((?x21493 (* 4.0 ?x21492)))
 (= (- (- (- (+ (+ ?x21493 ?x21501) ?x21507) ?x21515) ?x21521) ?x21527) 0.0)))))))))))
(assert
 (let ((?x21523 (* 8.0 l_0_11_66)))
 (let ((?x21524 (* ?x21523 l_0_11_69)))
 (let ((?x21517 (* 8.0 l_0_11_65)))
 (let ((?x21518 (* ?x21517 l_0_11_68)))
 (let ((?x21511 (* 8.0 l_0_11_64)))
 (let ((?x21512 (* ?x21511 l_0_11_67)))
 (let ((?x21503 (* 8.0 l_0_11_51)))
 (let ((?x21504 (* ?x21503 l_0_11_54)))
 (let ((?x21497 (* 8.0 l_0_11_50)))
 (let ((?x21498 (* ?x21497 l_0_11_53)))
 (let ((?x21473 (* 8.0 l_0_11_49)))
 (let ((?x21475 (* ?x21473 l_0_11_52)))
 (= (- (- (- (+ (+ ?x21475 ?x21498) ?x21504) ?x21512) ?x21518) ?x21524) 0.0))))))))))))))
(assert
 (let ((?x21523 (* 8.0 l_0_11_66)))
 (let ((?x21653 (* ?x21523 l_0_11_73)))
 (let ((?x21517 (* 8.0 l_0_11_65)))
 (let ((?x21648 (* ?x21517 l_0_11_72)))
 (let ((?x21511 (* 8.0 l_0_11_64)))
 (let ((?x21643 (* ?x21511 l_0_11_71)))
 (let ((?x21503 (* 8.0 l_0_11_51)))
 (let ((?x21626 (* ?x21503 l_0_11_58)))
 (let ((?x21497 (* 8.0 l_0_11_50)))
 (let ((?x21621 (* ?x21497 l_0_11_57)))
 (let ((?x21473 (* 8.0 l_0_11_49)))
 (let ((?x17564 (* ?x21473 l_0_11_56)))
 (= (- (- (- (+ (+ ?x17564 ?x21621) ?x21626) ?x21643) ?x21648) ?x21653) 0.0))))))))))))))
(assert
 (let ((?x21736 (* (* 4.0 l_0_11_70) l_0_11_70)))
 (let ((?x21731 (* (* 4.0 l_0_11_69) l_0_11_69)))
 (let ((?x21728 (* (* 4.0 l_0_11_68) l_0_11_68)))
 (let ((?x21725 (* (* 4.0 l_0_11_67) l_0_11_67)))
 (let ((?x1794 (* l_0_11_55 l_0_11_55)))
 (let ((?x17604 (* 4.0 ?x1794)))
 (let ((?x8496 (* l_0_11_54 l_0_11_54)))
 (let ((?x17533 (* 4.0 ?x8496)))
 (let ((?x20966 (* l_0_11_53 l_0_11_53)))
 (let ((?x17537 (* 4.0 ?x20966)))
 (let ((?x12786 (* l_0_11_52 l_0_11_52)))
 (let ((?x17555 (* 4.0 ?x12786)))
 (let ((?x23054 (- (- (- (- (+ (+ (+ ?x17555 ?x17537) ?x17533) ?x17604) ?x21725) ?x21728) ?x21731) ?x21736)))
 (= ?x23054 0.0)))))))))))))))
(assert
 (let ((?x21665 (* (* 8.0 l_0_11_70) l_0_11_74)))
 (let ((?x21662 (* (* 8.0 l_0_11_69) l_0_11_73)))
 (let ((?x21659 (* (* 8.0 l_0_11_68) l_0_11_72)))
 (let ((?x21656 (* (* 8.0 l_0_11_67) l_0_11_71)))
 (let ((?x21638 (* (* 8.0 l_0_11_55) l_0_11_59)))
 (let ((?x21635 (* (* 8.0 l_0_11_54) l_0_11_58)))
 (let ((?x21632 (* (* 8.0 l_0_11_53) l_0_11_57)))
 (let ((?x21629 (* (* 8.0 l_0_11_52) l_0_11_56)))
 (let ((?x23064 (- (- (- (- (+ (+ (+ ?x21629 ?x21632) ?x21635) ?x21638) ?x21656) ?x21659) ?x21662) ?x21665)))
 (= ?x23064 0.0)))))))))))
(assert
 (let ((?x21814 (* (* 4.0 l_0_11_75) l_0_11_75)))
 (let ((?x21811 (* (* 4.0 l_0_11_74) l_0_11_74)))
 (let ((?x21808 (* (* 4.0 l_0_11_73) l_0_11_73)))
 (let ((?x9351 (* (* 4.0 l_0_11_72) l_0_11_72)))
 (let ((?x17835 (* (* 4.0 l_0_11_71) l_0_11_71)))
 (let ((?x20161 (* l_0_11_60 l_0_11_60)))
 (let ((?x17846 (* 4.0 ?x20161)))
 (let ((?x20158 (* l_0_11_59 l_0_11_59)))
 (let ((?x17825 (* 4.0 ?x20158)))
 (let ((?x20155 (* l_0_11_58 l_0_11_58)))
 (let ((?x13507 (* 4.0 ?x20155)))
 (let ((?x20152 (* l_0_11_57 l_0_11_57)))
 (let ((?x13471 (* 4.0 ?x20152)))
 (let ((?x20149 (* l_0_11_56 l_0_11_56)))
 (let ((?x17935 (* 4.0 ?x20149)))
 (let ((?x23082 (- (- (- (+ (+ (+ (+ ?x17935 ?x13471) ?x13507) ?x17825) ?x17846) ?x17835) ?x9351) ?x21808)))
 (= (- (- ?x23082 ?x21811) ?x21814) 0.0))))))))))))))))))
(assert
 (let ((?x21523 (* 8.0 l_0_11_66)))
 (let ((?x21653 (* ?x21523 l_0_11_73)))
 (let ((?x21517 (* 8.0 l_0_11_65)))
 (let ((?x21648 (* ?x21517 l_0_11_72)))
 (let ((?x21511 (* 8.0 l_0_11_64)))
 (let ((?x21643 (* ?x21511 l_0_11_71)))
 (let ((?x21506 (* l_0_11_51 l_0_11_51)))
 (let ((?x23090 (* 3.0 ?x21506)))
 (let ((?x21503 (* 8.0 l_0_11_51)))
 (let ((?x21626 (* ?x21503 l_0_11_58)))
 (let ((?x21500 (* l_0_11_50 l_0_11_50)))
 (let ((?x23087 (* 3.0 ?x21500)))
 (let ((?x21497 (* 8.0 l_0_11_50)))
 (let ((?x21621 (* ?x21497 l_0_11_57)))
 (let ((?x21492 (* l_0_11_49 l_0_11_49)))
 (let ((?x10976 (* 3.0 ?x21492)))
 (let ((?x23089 (- (+ (- (+ (* (* (- 8.0) l_0_11_49) l_0_11_56) ?x10976) ?x21621) ?x23087) ?x21626)))
 (let ((?x23096 (+ (- (+ (+ ?x23089 ?x23090) ?x21643) (* (* 3.0 l_0_11_64) l_0_11_64)) ?x21648)))
 (let ((?x23103 (- (+ (- ?x23096 (* (* 3.0 l_0_11_65) l_0_11_65)) ?x21653) (* (* 3.0 l_0_11_66) l_0_11_66))))
 (= ?x23103 0.0)))))))))))))))))))))
(assert
 (let ((?x21564 (* l_0_11_66 l_0_11_66)))
 (let ((?x21565 (* 4.0 ?x21564)))
 (let ((?x21559 (* l_0_11_65 l_0_11_65)))
 (let ((?x21560 (* 4.0 ?x21559)))
 (let ((?x21553 (* l_0_11_64 l_0_11_64)))
 (let ((?x21554 (* 4.0 ?x21553)))
 (let ((?x23137 (- (* (* (- 4.0) l_0_11_49) l_0_11_49) (* (* 4.0 l_0_11_50) l_0_11_50))))
 (let ((?x23143 (+ (+ (+ (- ?x23137 (* (* 4.0 l_0_11_51) l_0_11_51)) ?x21554) ?x21560) ?x21565)))
 (= ?x23143 0.0))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_16 0.0))
(assert
 (>= l_0_11_18 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_25 0.0))
(assert
 (>= l_0_11_30 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_33 0.0))
(assert
 (>= l_0_11_36 0.0))
(assert
 (>= l_0_11_40 0.0))
(assert
 (>= l_0_11_45 0.0))
(assert
 (>= l_0_11_46 0.0))
(assert
 (>= l_0_11_48 0.0))
(assert
 (>= l_0_11_51 0.0))
(assert
 (>= l_0_11_55 0.0))
(assert
 (>= l_0_11_60 0.0))
(assert
 (>= l_0_11_61 0.0))
(assert
 (>= l_0_11_63 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_70 0.0))
(assert
 (>= l_0_11_75 0.0))
(assert
 (>= l_0_11_76 0.0))
(assert
 (>= l_0_11_78 0.0))
(assert
 (>= l_0_11_81 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_91 0.0))
(assert
 (>= l_0_11_93 0.0))
(assert
 (>= l_0_11_96 0.0))
(assert
 (>= l_0_11_100 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (>= l_0_11_106 0.0))
(assert
 (>= l_0_11_108 0.0))
(assert
 (>= l_0_11_111 0.0))
(assert
 (>= l_0_11_115 0.0))
(assert
 (>= l_0_11_120 0.0))
(assert
 (>= l_0_11_121 0.0))
(assert
 (>= l_0_11_123 0.0))
(assert
 (>= l_0_11_126 0.0))
(assert
 (>= l_0_11_130 0.0))
(assert
 (>= l_0_11_135 0.0))
(assert
 (>= l_0_11_136 0.0))
(assert
 (>= l_0_11_138 0.0))
(assert
 (>= l_0_11_141 0.0))
(assert
 (>= l_0_11_145 0.0))
(assert
 (>= l_0_11_150 0.0))
(assert
 (>= l_0_11_151 0.0))
(assert
 (>= l_0_11_153 0.0))
(assert
 (>= l_0_11_156 0.0))
(assert
 (>= l_0_11_160 0.0))
(assert
 (>= l_0_11_165 0.0))
(check-sat)
(get-model)