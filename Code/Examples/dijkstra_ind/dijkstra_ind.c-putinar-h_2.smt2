(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_83 () Real)
(declare-fun l_0_0_78 () Real)
(declare-fun l_0_0_82 () Real)
(declare-fun l_0_0_77 () Real)
(declare-fun l_0_0_68 () Real)
(declare-fun l_0_0_63 () Real)
(declare-fun l_0_0_67 () Real)
(declare-fun l_0_0_62 () Real)
(declare-fun l_0_0_23 () Real)
(declare-fun l_0_0_18 () Real)
(declare-fun l_0_0_22 () Real)
(declare-fun l_0_0_17 () Real)
(declare-fun l_0_0_81 () Real)
(declare-fun l_0_0_80 () Real)
(declare-fun l_0_0_79 () Real)
(declare-fun l_0_0_66 () Real)
(declare-fun l_0_0_65 () Real)
(declare-fun l_0_0_64 () Real)
(declare-fun l_0_0_48 () Real)
(declare-fun l_0_0_47 () Real)
(declare-fun l_0_0_33 () Real)
(declare-fun l_0_0_32 () Real)
(declare-fun l_0_0_21 () Real)
(declare-fun l_0_0_20 () Real)
(declare-fun l_0_0_19 () Real)
(declare-fun l_0_0_71 () Real)
(declare-fun l_0_0_61 () Real)
(declare-fun l_0_0_46 () Real)
(declare-fun l_0_0_31 () Real)
(declare-fun l_0_0_16 () Real)
(declare-fun l_0_0_26 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_86 () Real)
(declare-fun l_0_0_76 () Real)
(declare-fun l_0_0_72 () Real)
(declare-fun l_0_0_27 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_73 () Real)
(declare-fun l_0_0_50 () Real)
(declare-fun l_0_0_49 () Real)
(declare-fun l_0_0_35 () Real)
(declare-fun l_0_0_34 () Real)
(declare-fun l_0_0_28 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_0_74 () Real)
(declare-fun l_0_0_70 () Real)
(declare-fun l_0_0_69 () Real)
(declare-fun l_0_0_57 () Real)
(declare-fun l_0_0_53 () Real)
(declare-fun l_0_0_56 () Real)
(declare-fun l_0_0_52 () Real)
(declare-fun l_0_0_42 () Real)
(declare-fun l_0_0_38 () Real)
(declare-fun l_0_0_41 () Real)
(declare-fun l_0_0_37 () Real)
(declare-fun l_0_0_29 () Real)
(declare-fun l_0_0_25 () Real)
(declare-fun l_0_0_24 () Real)
(declare-fun l_0_0_7 () Real)
(declare-fun l_0_0_75 () Real)
(declare-fun l_0_0_30 () Real)
(declare-fun l_0_0_11 () Real)
(declare-fun l_0_0_87 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_88 () Real)
(declare-fun l_0_0_5 () Real)
(declare-fun l_0_0_89 () Real)
(declare-fun l_0_0_85 () Real)
(declare-fun l_0_0_84 () Real)
(declare-fun l_0_0_8 () Real)
(declare-fun l_0_0_90 () Real)
(declare-fun l_0_0_12 () Real)
(declare-fun l_0_0_6 () Real)
(declare-fun l_0_0_9 () Real)
(declare-fun l_0_0_13 () Real)
(declare-fun l_0_0_10 () Real)
(declare-fun l_0_0_14 () Real)
(declare-fun l_0_0_15 () Real)
(declare-fun l_0_0_51 () Real)
(declare-fun l_0_0_36 () Real)
(declare-fun l_0_0_54 () Real)
(declare-fun l_0_0_39 () Real)
(declare-fun l_0_0_58 () Real)
(declare-fun l_0_0_43 () Real)
(declare-fun l_0_0_55 () Real)
(declare-fun l_0_0_40 () Real)
(declare-fun l_0_0_59 () Real)
(declare-fun l_0_0_44 () Real)
(declare-fun l_0_0_60 () Real)
(declare-fun l_0_0_45 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun _a_2_ () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_110 () Real)
(declare-fun l_0_12_108 () Real)
(declare-fun l_0_12_109 () Real)
(declare-fun l_0_12_107 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_106 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_117 () Real)
(declare-fun l_0_12_116 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_118 () Real)
(declare-fun l_0_12_111 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_119 () Real)
(declare-fun l_0_12_115 () Real)
(declare-fun l_0_12_114 () Real)
(declare-fun l_0_12_113 () Real)
(declare-fun l_0_12_112 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_120 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_13_97 () Real)
(declare-fun l_0_13_91 () Real)
(declare-fun l_0_13_83 () Real)
(declare-fun l_0_13_78 () Real)
(declare-fun l_0_13_82 () Real)
(declare-fun l_0_13_77 () Real)
(declare-fun l_0_13_68 () Real)
(declare-fun l_0_13_63 () Real)
(declare-fun l_0_13_67 () Real)
(declare-fun l_0_13_62 () Real)
(declare-fun l_0_13_61 () Real)
(declare-fun l_0_13_48 () Real)
(declare-fun l_0_13_47 () Real)
(declare-fun l_0_13_33 () Real)
(declare-fun l_0_13_32 () Real)
(declare-fun l_0_13_23 () Real)
(declare-fun l_0_13_18 () Real)
(declare-fun l_0_13_22 () Real)
(declare-fun l_0_13_17 () Real)
(declare-fun l_0_13_16 () Real)
(declare-fun l_0_13_127 () Real)
(declare-fun l_0_13_121 () Real)
(declare-fun l_0_13_112 () Real)
(declare-fun l_0_13_106 () Real)
(declare-fun l_0_13_96 () Real)
(declare-fun l_0_13_95 () Real)
(declare-fun l_0_13_94 () Real)
(declare-fun l_0_13_80 () Real)
(declare-fun l_0_13_79 () Real)
(declare-fun l_0_13_66 () Real)
(declare-fun l_0_13_65 () Real)
(declare-fun l_0_13_64 () Real)
(declare-fun l_0_13_21 () Real)
(declare-fun l_0_13_20 () Real)
(declare-fun l_0_13_19 () Real)
(declare-fun l_0_13_126 () Real)
(declare-fun l_0_13_125 () Real)
(declare-fun l_0_13_124 () Real)
(declare-fun l_0_13_111 () Real)
(declare-fun l_0_13_110 () Real)
(declare-fun l_0_13_109 () Real)
(declare-fun l_0_13_87 () Real)
(declare-fun l_0_13_86 () Real)
(declare-fun l_0_13_76 () Real)
(declare-fun l_0_13_72 () Real)
(declare-fun l_0_13_71 () Real)
(declare-fun l_0_13_27 () Real)
(declare-fun l_0_13_26 () Real)
(declare-fun l_0_13_131 () Real)
(declare-fun l_0_13_116 () Real)
(declare-fun l_0_13_101 () Real)
(declare-fun l_0_13_2 () Real)
(declare-fun l_0_13_1 () Real)
(declare-fun l_0_13_46 () Real)
(declare-fun l_0_13_31 () Real)
(declare-fun l_0_13_88 () Real)
(declare-fun l_0_13_81 () Real)
(declare-fun l_0_13_73 () Real)
(declare-fun l_0_13_50 () Real)
(declare-fun l_0_13_49 () Real)
(declare-fun l_0_13_35 () Real)
(declare-fun l_0_13_34 () Real)
(declare-fun l_0_13_28 () Real)
(declare-fun l_0_13_4 () Real)
(declare-fun l_0_13_89 () Real)
(declare-fun l_0_13_85 () Real)
(declare-fun l_0_13_84 () Real)
(declare-fun l_0_13_74 () Real)
(declare-fun l_0_13_70 () Real)
(declare-fun l_0_13_69 () Real)
(declare-fun l_0_13_57 () Real)
(declare-fun l_0_13_53 () Real)
(declare-fun l_0_13_56 () Real)
(declare-fun l_0_13_52 () Real)
(declare-fun l_0_13_42 () Real)
(declare-fun l_0_13_38 () Real)
(declare-fun l_0_13_41 () Real)
(declare-fun l_0_13_37 () Real)
(declare-fun l_0_13_29 () Real)
(declare-fun l_0_13_25 () Real)
(declare-fun l_0_13_24 () Real)
(declare-fun l_0_13_7 () Real)
(declare-fun l_0_13_90 () Real)
(declare-fun l_0_13_75 () Real)
(declare-fun l_0_13_30 () Real)
(declare-fun l_0_13_11 () Real)
(declare-fun l_0_13_3 () Real)
(declare-fun l_0_13_132 () Real)
(declare-fun l_0_13_123 () Real)
(declare-fun l_0_13_122 () Real)
(declare-fun l_0_13_117 () Real)
(declare-fun l_0_13_108 () Real)
(declare-fun l_0_13_107 () Real)
(declare-fun l_0_13_93 () Real)
(declare-fun l_0_13_102 () Real)
(declare-fun l_0_13_92 () Real)
(declare-fun l_0_13_5 () Real)
(declare-fun l_0_13_133 () Real)
(declare-fun l_0_13_118 () Real)
(declare-fun l_0_13_103 () Real)
(declare-fun l_0_13_8 () Real)
(declare-fun l_0_13_134 () Real)
(declare-fun l_0_13_130 () Real)
(declare-fun l_0_13_129 () Real)
(declare-fun l_0_13_128 () Real)
(declare-fun l_0_13_119 () Real)
(declare-fun l_0_13_115 () Real)
(declare-fun l_0_13_114 () Real)
(declare-fun l_0_13_113 () Real)
(declare-fun l_0_13_99 () Real)
(declare-fun l_0_13_98 () Real)
(declare-fun l_0_13_104 () Real)
(declare-fun l_0_13_100 () Real)
(declare-fun l_0_13_135 () Real)
(declare-fun l_0_13_120 () Real)
(declare-fun l_0_13_12 () Real)
(declare-fun l_0_13_105 () Real)
(declare-fun l_0_13_6 () Real)
(declare-fun l_0_13_9 () Real)
(declare-fun l_0_13_13 () Real)
(declare-fun l_0_13_10 () Real)
(declare-fun l_0_13_14 () Real)
(declare-fun l_0_13_15 () Real)
(declare-fun l_0_13_51 () Real)
(declare-fun l_0_13_36 () Real)
(declare-fun l_0_13_54 () Real)
(declare-fun l_0_13_39 () Real)
(declare-fun l_0_13_58 () Real)
(declare-fun l_0_13_43 () Real)
(declare-fun l_0_13_55 () Real)
(declare-fun l_0_13_40 () Real)
(declare-fun l_0_13_59 () Real)
(declare-fun l_0_13_44 () Real)
(declare-fun l_0_13_60 () Real)
(declare-fun l_0_13_45 () Real)
(declare-fun l_0_14_96 () Real)
(declare-fun l_0_14_95 () Real)
(declare-fun l_0_14_94 () Real)
(declare-fun l_0_14_80 () Real)
(declare-fun l_0_14_78 () Real)
(declare-fun l_0_14_79 () Real)
(declare-fun l_0_14_77 () Real)
(declare-fun l_0_14_66 () Real)
(declare-fun l_0_14_65 () Real)
(declare-fun l_0_14_64 () Real)
(declare-fun l_0_14_48 () Real)
(declare-fun l_0_14_47 () Real)
(declare-fun l_0_14_33 () Real)
(declare-fun l_0_14_32 () Real)
(declare-fun l_0_14_21 () Real)
(declare-fun l_0_14_20 () Real)
(declare-fun l_0_14_19 () Real)
(declare-fun l_0_14_18 () Real)
(declare-fun l_0_14_17 () Real)
(declare-fun l_0_14_141 () Real)
(declare-fun l_0_14_140 () Real)
(declare-fun l_0_14_139 () Real)
(declare-fun l_0_14_126 () Real)
(declare-fun l_0_14_125 () Real)
(declare-fun l_0_14_124 () Real)
(declare-fun l_0_14_111 () Real)
(declare-fun l_0_14_110 () Real)
(declare-fun l_0_14_109 () Real)
(declare-fun l_0_14_87 () Real)
(declare-fun l_0_14_86 () Real)
(declare-fun l_0_14_76 () Real)
(declare-fun l_0_14_72 () Real)
(declare-fun l_0_14_63 () Real)
(declare-fun l_0_14_71 () Real)
(declare-fun l_0_14_62 () Real)
(declare-fun l_0_14_61 () Real)
(declare-fun l_0_14_27 () Real)
(declare-fun l_0_14_26 () Real)
(declare-fun l_0_14_16 () Real)
(declare-fun l_0_14_146 () Real)
(declare-fun l_0_14_136 () Real)
(declare-fun l_0_14_131 () Real)
(declare-fun l_0_14_121 () Real)
(declare-fun l_0_14_116 () Real)
(declare-fun l_0_14_106 () Real)
(declare-fun l_0_14_91 () Real)
(declare-fun l_0_14_101 () Real)
(declare-fun l_0_14_2 () Real)
(declare-fun l_0_14_1 () Real)
(declare-fun l_0_14_97 () Real)
(declare-fun l_0_14_83 () Real)
(declare-fun l_0_14_82 () Real)
(declare-fun l_0_14_68 () Real)
(declare-fun l_0_14_67 () Real)
(declare-fun l_0_14_23 () Real)
(declare-fun l_0_14_22 () Real)
(declare-fun l_0_14_142 () Real)
(declare-fun l_0_14_127 () Real)
(declare-fun l_0_14_112 () Real)
(declare-fun l_0_14_46 () Real)
(declare-fun l_0_14_31 () Real)
(declare-fun l_0_14_88 () Real)
(declare-fun l_0_14_81 () Real)
(declare-fun l_0_14_73 () Real)
(declare-fun l_0_14_50 () Real)
(declare-fun l_0_14_49 () Real)
(declare-fun l_0_14_35 () Real)
(declare-fun l_0_14_34 () Real)
(declare-fun l_0_14_28 () Real)
(declare-fun l_0_14_4 () Real)
(declare-fun l_0_14_89 () Real)
(declare-fun l_0_14_85 () Real)
(declare-fun l_0_14_84 () Real)
(declare-fun l_0_14_74 () Real)
(declare-fun l_0_14_70 () Real)
(declare-fun l_0_14_69 () Real)
(declare-fun l_0_14_57 () Real)
(declare-fun l_0_14_53 () Real)
(declare-fun l_0_14_56 () Real)
(declare-fun l_0_14_52 () Real)
(declare-fun l_0_14_42 () Real)
(declare-fun l_0_14_38 () Real)
(declare-fun l_0_14_41 () Real)
(declare-fun l_0_14_37 () Real)
(declare-fun l_0_14_29 () Real)
(declare-fun l_0_14_25 () Real)
(declare-fun l_0_14_24 () Real)
(declare-fun l_0_14_7 () Real)
(declare-fun l_0_14_90 () Real)
(declare-fun l_0_14_75 () Real)
(declare-fun l_0_14_30 () Real)
(declare-fun l_0_14_11 () Real)
(declare-fun l_0_14_3 () Real)
(declare-fun l_0_14_147 () Real)
(declare-fun l_0_14_138 () Real)
(declare-fun l_0_14_137 () Real)
(declare-fun l_0_14_132 () Real)
(declare-fun l_0_14_123 () Real)
(declare-fun l_0_14_122 () Real)
(declare-fun l_0_14_117 () Real)
(declare-fun l_0_14_108 () Real)
(declare-fun l_0_14_107 () Real)
(declare-fun l_0_14_93 () Real)
(declare-fun l_0_14_102 () Real)
(declare-fun l_0_14_92 () Real)
(declare-fun l_0_14_5 () Real)
(declare-fun l_0_14_148 () Real)
(declare-fun l_0_14_133 () Real)
(declare-fun l_0_14_118 () Real)
(declare-fun l_0_14_103 () Real)
(declare-fun l_0_14_8 () Real)
(declare-fun l_0_14_149 () Real)
(declare-fun l_0_14_145 () Real)
(declare-fun l_0_14_144 () Real)
(declare-fun l_0_14_143 () Real)
(declare-fun l_0_14_134 () Real)
(declare-fun l_0_14_130 () Real)
(declare-fun l_0_14_129 () Real)
(declare-fun l_0_14_128 () Real)
(declare-fun l_0_14_119 () Real)
(declare-fun l_0_14_115 () Real)
(declare-fun l_0_14_114 () Real)
(declare-fun l_0_14_113 () Real)
(declare-fun l_0_14_99 () Real)
(declare-fun l_0_14_98 () Real)
(declare-fun l_0_14_104 () Real)
(declare-fun l_0_14_100 () Real)
(declare-fun l_0_14_150 () Real)
(declare-fun l_0_14_135 () Real)
(declare-fun l_0_14_120 () Real)
(declare-fun l_0_14_12 () Real)
(declare-fun l_0_14_105 () Real)
(declare-fun l_0_14_6 () Real)
(declare-fun l_0_14_9 () Real)
(declare-fun l_0_14_13 () Real)
(declare-fun l_0_14_10 () Real)
(declare-fun l_0_14_14 () Real)
(declare-fun l_0_14_15 () Real)
(declare-fun l_0_14_51 () Real)
(declare-fun l_0_14_36 () Real)
(declare-fun l_0_14_54 () Real)
(declare-fun l_0_14_39 () Real)
(declare-fun l_0_14_58 () Real)
(declare-fun l_0_14_43 () Real)
(declare-fun l_0_14_55 () Real)
(declare-fun l_0_14_40 () Real)
(declare-fun l_0_14_59 () Real)
(declare-fun l_0_14_44 () Real)
(declare-fun l_0_14_60 () Real)
(declare-fun l_0_14_45 () Real)
(declare-fun l_0_15_4 () Real)
(declare-fun l_0_15_3 () Real)
(declare-fun l_0_15_8 () Real)
(declare-fun l_0_15_6 () Real)
(declare-fun l_0_15_2 () Real)
(declare-fun l_0_15_1 () Real)
(declare-fun l_0_15_7 () Real)
(declare-fun l_0_15_5 () Real)
(declare-fun l_0_16_2 () Real)
(declare-fun l_0_16_1 () Real)
(declare-fun l_0_16_7 () Real)
(declare-fun l_0_16_6 () Real)
(declare-fun l_0_16_9 () Real)
(declare-fun l_0_16_8 () Real)
(declare-fun l_0_16_10 () Real)
(declare-fun l_0_16_4 () Real)
(declare-fun l_0_16_3 () Real)
(declare-fun l_0_16_5 () Real)
(declare-fun l_0_17_98 () Real)
(declare-fun l_0_17_93 () Real)
(declare-fun l_0_17_97 () Real)
(declare-fun l_0_17_92 () Real)
(declare-fun l_0_17_91 () Real)
(declare-fun l_0_17_62 () Real)
(declare-fun l_0_17_61 () Real)
(declare-fun l_0_17_47 () Real)
(declare-fun l_0_17_46 () Real)
(declare-fun l_0_17_32 () Real)
(declare-fun l_0_17_31 () Real)
(declare-fun l_0_17_172 () Real)
(declare-fun l_0_17_166 () Real)
(declare-fun l_0_17_157 () Real)
(declare-fun l_0_17_151 () Real)
(declare-fun l_0_17_142 () Real)
(declare-fun l_0_17_136 () Real)
(declare-fun l_0_17_127 () Real)
(declare-fun l_0_17_121 () Real)
(declare-fun l_0_17_112 () Real)
(declare-fun l_0_17_106 () Real)
(declare-fun l_0_17_83 () Real)
(declare-fun l_0_17_78 () Real)
(declare-fun l_0_17_82 () Real)
(declare-fun l_0_17_77 () Real)
(declare-fun l_0_17_76 () Real)
(declare-fun l_0_17_5 () Real)
(declare-fun l_0_17_3 () Real)
(declare-fun l_0_17_4 () Real)
(declare-fun l_0_17_2 () Real)
(declare-fun l_0_17_20 () Real)
(declare-fun l_0_17_18 () Real)
(declare-fun l_0_17_171 () Real)
(declare-fun l_0_17_170 () Real)
(declare-fun l_0_17_19 () Real)
(declare-fun l_0_17_17 () Real)
(declare-fun l_0_17_169 () Real)
(declare-fun l_0_17_156 () Real)
(declare-fun l_0_17_155 () Real)
(declare-fun l_0_17_154 () Real)
(declare-fun l_0_17_141 () Real)
(declare-fun l_0_17_140 () Real)
(declare-fun l_0_17_139 () Real)
(declare-fun l_0_17_126 () Real)
(declare-fun l_0_17_125 () Real)
(declare-fun l_0_17_124 () Real)
(declare-fun l_0_17_111 () Real)
(declare-fun l_0_17_110 () Real)
(declare-fun l_0_17_109 () Real)
(declare-fun l_0_17_81 () Real)
(declare-fun l_0_17_80 () Real)
(declare-fun l_0_17_79 () Real)
(declare-fun l_0_17_176 () Real)
(declare-fun l_0_17_161 () Real)
(declare-fun l_0_17_146 () Real)
(declare-fun l_0_17_131 () Real)
(declare-fun l_0_17_116 () Real)
(declare-fun l_0_17_102 () Real)
(declare-fun l_0_17_101 () Real)
(declare-fun l_0_17_87 () Real)
(declare-fun l_0_17_86 () Real)
(declare-fun l_0_17_94 () Real)
(declare-fun l_0_17_16 () Real)
(declare-fun l_0_17_1 () Real)
(declare-fun l_0_17_95 () Real)
(declare-fun l_0_17_96 () Real)
(declare-fun l_0_17_99 () Real)
(declare-fun l_0_17_64 () Real)
(declare-fun l_0_17_49 () Real)
(declare-fun l_0_17_34 () Real)
(declare-fun l_0_17_22 () Real)
(declare-fun l_0_17_7 () Real)
(declare-fun l_0_17_84 () Real)
(declare-fun l_0_17_26 () Real)
(declare-fun l_0_17_103 () Real)
(declare-fun l_0_17_11 () Real)
(declare-fun l_0_17_88 () Real)
(declare-fun l_0_17_168 () Real)
(declare-fun l_0_17_167 () Real)
(declare-fun l_0_17_153 () Real)
(declare-fun l_0_17_152 () Real)
(declare-fun l_0_17_138 () Real)
(declare-fun l_0_17_137 () Real)
(declare-fun l_0_17_123 () Real)
(declare-fun l_0_17_122 () Real)
(declare-fun l_0_17_108 () Real)
(declare-fun l_0_17_107 () Real)
(declare-fun l_0_17_65 () Real)
(declare-fun l_0_17_63 () Real)
(declare-fun l_0_17_50 () Real)
(declare-fun l_0_17_48 () Real)
(declare-fun l_0_17_35 () Real)
(declare-fun l_0_17_33 () Real)
(declare-fun l_0_17_8 () Real)
(declare-fun l_0_17_23 () Real)
(declare-fun l_0_17_174 () Real)
(declare-fun l_0_17_173 () Real)
(declare-fun l_0_17_159 () Real)
(declare-fun l_0_17_158 () Real)
(declare-fun l_0_17_144 () Real)
(declare-fun l_0_17_143 () Real)
(declare-fun l_0_17_129 () Real)
(declare-fun l_0_17_128 () Real)
(declare-fun l_0_17_114 () Real)
(declare-fun l_0_17_113 () Real)
(declare-fun l_0_17_27 () Real)
(declare-fun l_0_17_178 () Real)
(declare-fun l_0_17_177 () Real)
(declare-fun l_0_17_163 () Real)
(declare-fun l_0_17_162 () Real)
(declare-fun l_0_17_148 () Real)
(declare-fun l_0_17_147 () Real)
(declare-fun l_0_17_133 () Real)
(declare-fun l_0_17_132 () Real)
(declare-fun l_0_17_12 () Real)
(declare-fun l_0_17_118 () Real)
(declare-fun l_0_17_117 () Real)
(declare-fun l_0_17_6 () Real)
(declare-fun l_0_17_21 () Real)
(declare-fun l_0_17_66 () Real)
(declare-fun l_0_17_9 () Real)
(declare-fun l_0_17_51 () Real)
(declare-fun l_0_17_36 () Real)
(declare-fun l_0_17_24 () Real)
(declare-fun l_0_17_28 () Real)
(declare-fun l_0_17_13 () Real)
(declare-fun l_0_17_69 () Real)
(declare-fun l_0_17_68 () Real)
(declare-fun l_0_17_67 () Real)
(declare-fun l_0_17_54 () Real)
(declare-fun l_0_17_53 () Real)
(declare-fun l_0_17_52 () Real)
(declare-fun l_0_17_39 () Real)
(declare-fun l_0_17_38 () Real)
(declare-fun l_0_17_37 () Real)
(declare-fun l_0_17_25 () Real)
(declare-fun l_0_17_10 () Real)
(declare-fun l_0_17_73 () Real)
(declare-fun l_0_17_72 () Real)
(declare-fun l_0_17_71 () Real)
(declare-fun l_0_17_58 () Real)
(declare-fun l_0_17_57 () Real)
(declare-fun l_0_17_56 () Real)
(declare-fun l_0_17_43 () Real)
(declare-fun l_0_17_42 () Real)
(declare-fun l_0_17_41 () Real)
(declare-fun l_0_17_29 () Real)
(declare-fun l_0_17_14 () Real)
(declare-fun l_0_17_30 () Real)
(declare-fun l_0_17_15 () Real)
(declare-fun l_0_17_100 () Real)
(declare-fun l_0_17_85 () Real)
(declare-fun l_0_17_104 () Real)
(declare-fun l_0_17_89 () Real)
(declare-fun l_0_17_175 () Real)
(declare-fun l_0_17_160 () Real)
(declare-fun l_0_17_145 () Real)
(declare-fun l_0_17_130 () Real)
(declare-fun l_0_17_115 () Real)
(declare-fun l_0_17_179 () Real)
(declare-fun l_0_17_164 () Real)
(declare-fun l_0_17_149 () Real)
(declare-fun l_0_17_134 () Real)
(declare-fun l_0_17_119 () Real)
(declare-fun l_0_17_70 () Real)
(declare-fun l_0_17_55 () Real)
(declare-fun l_0_17_40 () Real)
(declare-fun l_0_17_74 () Real)
(declare-fun l_0_17_59 () Real)
(declare-fun l_0_17_44 () Real)
(declare-fun l_0_17_75 () Real)
(declare-fun l_0_17_60 () Real)
(declare-fun l_0_17_45 () Real)
(declare-fun l_0_17_105 () Real)
(declare-fun l_0_17_90 () Real)
(declare-fun l_0_17_180 () Real)
(declare-fun l_0_17_165 () Real)
(declare-fun l_0_17_150 () Real)
(declare-fun l_0_17_135 () Real)
(declare-fun l_0_17_120 () Real)
(declare-fun l_0_18_5 () Real)
(declare-fun l_0_18_3 () Real)
(declare-fun l_0_18_4 () Real)
(declare-fun l_0_18_2 () Real)
(declare-fun l_0_18_186 () Real)
(declare-fun l_0_18_185 () Real)
(declare-fun l_0_18_184 () Real)
(declare-fun l_0_18_20 () Real)
(declare-fun l_0_18_18 () Real)
(declare-fun l_0_18_171 () Real)
(declare-fun l_0_18_170 () Real)
(declare-fun l_0_18_19 () Real)
(declare-fun l_0_18_17 () Real)
(declare-fun l_0_18_169 () Real)
(declare-fun l_0_18_156 () Real)
(declare-fun l_0_18_155 () Real)
(declare-fun l_0_18_154 () Real)
(declare-fun l_0_18_141 () Real)
(declare-fun l_0_18_140 () Real)
(declare-fun l_0_18_139 () Real)
(declare-fun l_0_18_126 () Real)
(declare-fun l_0_18_125 () Real)
(declare-fun l_0_18_124 () Real)
(declare-fun l_0_18_111 () Real)
(declare-fun l_0_18_110 () Real)
(declare-fun l_0_18_109 () Real)
(declare-fun l_0_18_81 () Real)
(declare-fun l_0_18_80 () Real)
(declare-fun l_0_18_79 () Real)
(declare-fun l_0_18_47 () Real)
(declare-fun l_0_18_46 () Real)
(declare-fun l_0_18_32 () Real)
(declare-fun l_0_18_31 () Real)
(declare-fun l_0_18_191 () Real)
(declare-fun l_0_18_181 () Real)
(declare-fun l_0_18_176 () Real)
(declare-fun l_0_18_166 () Real)
(declare-fun l_0_18_161 () Real)
(declare-fun l_0_18_151 () Real)
(declare-fun l_0_18_146 () Real)
(declare-fun l_0_18_136 () Real)
(declare-fun l_0_18_131 () Real)
(declare-fun l_0_18_121 () Real)
(declare-fun l_0_18_116 () Real)
(declare-fun l_0_18_106 () Real)
(declare-fun l_0_18_93 () Real)
(declare-fun l_0_18_102 () Real)
(declare-fun l_0_18_92 () Real)
(declare-fun l_0_18_101 () Real)
(declare-fun l_0_18_87 () Real)
(declare-fun l_0_18_78 () Real)
(declare-fun l_0_18_86 () Real)
(declare-fun l_0_18_77 () Real)
(declare-fun l_0_18_76 () Real)
(declare-fun l_0_18_98 () Real)
(declare-fun l_0_18_97 () Real)
(declare-fun l_0_18_91 () Real)
(declare-fun l_0_18_62 () Real)
(declare-fun l_0_18_61 () Real)
(declare-fun l_0_18_187 () Real)
(declare-fun l_0_18_172 () Real)
(declare-fun l_0_18_157 () Real)
(declare-fun l_0_18_142 () Real)
(declare-fun l_0_18_127 () Real)
(declare-fun l_0_18_112 () Real)
(declare-fun l_0_18_83 () Real)
(declare-fun l_0_18_82 () Real)
(declare-fun l_0_18_94 () Real)
(declare-fun l_0_18_16 () Real)
(declare-fun l_0_18_1 () Real)
(declare-fun l_0_18_95 () Real)
(declare-fun l_0_18_96 () Real)
(declare-fun l_0_18_99 () Real)
(declare-fun l_0_18_64 () Real)
(declare-fun l_0_18_49 () Real)
(declare-fun l_0_18_34 () Real)
(declare-fun l_0_18_22 () Real)
(declare-fun l_0_18_7 () Real)
(declare-fun l_0_18_84 () Real)
(declare-fun l_0_18_26 () Real)
(declare-fun l_0_18_103 () Real)
(declare-fun l_0_18_11 () Real)
(declare-fun l_0_18_88 () Real)
(declare-fun l_0_18_183 () Real)
(declare-fun l_0_18_182 () Real)
(declare-fun l_0_18_168 () Real)
(declare-fun l_0_18_167 () Real)
(declare-fun l_0_18_153 () Real)
(declare-fun l_0_18_152 () Real)
(declare-fun l_0_18_138 () Real)
(declare-fun l_0_18_137 () Real)
(declare-fun l_0_18_123 () Real)
(declare-fun l_0_18_122 () Real)
(declare-fun l_0_18_108 () Real)
(declare-fun l_0_18_107 () Real)
(declare-fun l_0_18_65 () Real)
(declare-fun l_0_18_63 () Real)
(declare-fun l_0_18_50 () Real)
(declare-fun l_0_18_48 () Real)
(declare-fun l_0_18_35 () Real)
(declare-fun l_0_18_33 () Real)
(declare-fun l_0_18_8 () Real)
(declare-fun l_0_18_189 () Real)
(declare-fun l_0_18_188 () Real)
(declare-fun l_0_18_23 () Real)
(declare-fun l_0_18_174 () Real)
(declare-fun l_0_18_173 () Real)
(declare-fun l_0_18_159 () Real)
(declare-fun l_0_18_158 () Real)
(declare-fun l_0_18_144 () Real)
(declare-fun l_0_18_143 () Real)
(declare-fun l_0_18_129 () Real)
(declare-fun l_0_18_128 () Real)
(declare-fun l_0_18_114 () Real)
(declare-fun l_0_18_113 () Real)
(declare-fun l_0_18_193 () Real)
(declare-fun l_0_18_192 () Real)
(declare-fun l_0_18_27 () Real)
(declare-fun l_0_18_178 () Real)
(declare-fun l_0_18_177 () Real)
(declare-fun l_0_18_163 () Real)
(declare-fun l_0_18_162 () Real)
(declare-fun l_0_18_148 () Real)
(declare-fun l_0_18_147 () Real)
(declare-fun l_0_18_133 () Real)
(declare-fun l_0_18_132 () Real)
(declare-fun l_0_18_12 () Real)
(declare-fun l_0_18_118 () Real)
(declare-fun l_0_18_117 () Real)
(declare-fun l_0_18_6 () Real)
(declare-fun l_0_18_21 () Real)
(declare-fun l_0_18_66 () Real)
(declare-fun l_0_18_9 () Real)
(declare-fun l_0_18_51 () Real)
(declare-fun l_0_18_36 () Real)
(declare-fun l_0_18_24 () Real)
(declare-fun l_0_18_28 () Real)
(declare-fun l_0_18_13 () Real)
(declare-fun l_0_18_69 () Real)
(declare-fun l_0_18_68 () Real)
(declare-fun l_0_18_67 () Real)
(declare-fun l_0_18_54 () Real)
(declare-fun l_0_18_53 () Real)
(declare-fun l_0_18_52 () Real)
(declare-fun l_0_18_39 () Real)
(declare-fun l_0_18_38 () Real)
(declare-fun l_0_18_37 () Real)
(declare-fun l_0_18_25 () Real)
(declare-fun l_0_18_10 () Real)
(declare-fun l_0_18_73 () Real)
(declare-fun l_0_18_72 () Real)
(declare-fun l_0_18_71 () Real)
(declare-fun l_0_18_58 () Real)
(declare-fun l_0_18_57 () Real)
(declare-fun l_0_18_56 () Real)
(declare-fun l_0_18_43 () Real)
(declare-fun l_0_18_42 () Real)
(declare-fun l_0_18_41 () Real)
(declare-fun l_0_18_29 () Real)
(declare-fun l_0_18_14 () Real)
(declare-fun l_0_18_30 () Real)
(declare-fun l_0_18_15 () Real)
(declare-fun l_0_18_100 () Real)
(declare-fun l_0_18_85 () Real)
(declare-fun l_0_18_104 () Real)
(declare-fun l_0_18_89 () Real)
(declare-fun l_0_18_190 () Real)
(declare-fun l_0_18_175 () Real)
(declare-fun l_0_18_160 () Real)
(declare-fun l_0_18_145 () Real)
(declare-fun l_0_18_130 () Real)
(declare-fun l_0_18_115 () Real)
(declare-fun l_0_18_194 () Real)
(declare-fun l_0_18_179 () Real)
(declare-fun l_0_18_164 () Real)
(declare-fun l_0_18_149 () Real)
(declare-fun l_0_18_134 () Real)
(declare-fun l_0_18_119 () Real)
(declare-fun l_0_18_70 () Real)
(declare-fun l_0_18_55 () Real)
(declare-fun l_0_18_40 () Real)
(declare-fun l_0_18_74 () Real)
(declare-fun l_0_18_59 () Real)
(declare-fun l_0_18_44 () Real)
(declare-fun l_0_18_75 () Real)
(declare-fun l_0_18_60 () Real)
(declare-fun l_0_18_45 () Real)
(declare-fun l_0_18_105 () Real)
(declare-fun l_0_18_90 () Real)
(declare-fun l_0_18_195 () Real)
(declare-fun l_0_18_180 () Real)
(declare-fun l_0_18_165 () Real)
(declare-fun l_0_18_150 () Real)
(declare-fun l_0_18_135 () Real)
(declare-fun l_0_18_120 () Real)
(declare-fun l_0_19_8 () Real)
(declare-fun l_0_19_6 () Real)
(declare-fun l_0_19_2 () Real)
(declare-fun l_0_19_1 () Real)
(declare-fun l_0_19_7 () Real)
(declare-fun l_0_19_5 () Real)
(declare-fun l_0_19_4 () Real)
(declare-fun l_0_19_3 () Real)
(declare-fun l_0_20_2 () Real)
(declare-fun l_0_20_1 () Real)
(declare-fun l_0_20_9 () Real)
(declare-fun l_0_20_8 () Real)
(declare-fun l_0_20_10 () Real)
(declare-fun l_0_20_6 () Real)
(declare-fun l_0_20_7 () Real)
(declare-fun l_0_20_5 () Real)
(declare-fun l_0_20_4 () Real)
(declare-fun l_0_20_3 () Real)
(declare-fun l_0_21_7 () Real)
(declare-fun l_0_21_5 () Real)
(declare-fun l_0_21_4 () Real)
(declare-fun l_0_21_3 () Real)
(declare-fun l_0_21_6 () Real)
(declare-fun l_0_21_2 () Real)
(declare-fun l_0_21_1 () Real)
(declare-fun l_0_21_9 () Real)
(declare-fun l_0_21_8 () Real)
(declare-fun l_0_21_12 () Real)
(declare-fun l_0_21_11 () Real)
(declare-fun l_0_21_10 () Real)
(declare-fun l_0_22_4 () Real)
(declare-fun l_0_22_3 () Real)
(declare-fun l_0_22_7 () Real)
(declare-fun l_0_22_5 () Real)
(declare-fun l_0_22_6 () Real)
(declare-fun l_0_22_2 () Real)
(declare-fun l_0_22_1 () Real)
(declare-fun l_0_22_9 () Real)
(declare-fun l_0_22_8 () Real)
(declare-fun l_0_22_14 () Real)
(declare-fun l_0_22_13 () Real)
(declare-fun l_0_22_12 () Real)
(declare-fun l_0_22_11 () Real)
(declare-fun l_0_22_10 () Real)
(declare-fun l_0_23_7 () Real)
(declare-fun l_0_23_5 () Real)
(declare-fun l_0_23_4 () Real)
(declare-fun l_0_23_3 () Real)
(declare-fun l_0_23_6 () Real)
(declare-fun l_0_23_9 () Real)
(declare-fun l_0_23_8 () Real)
(declare-fun l_0_23_16 () Real)
(declare-fun l_0_23_15 () Real)
(declare-fun l_0_23_14 () Real)
(declare-fun l_0_23_13 () Real)
(declare-fun l_0_23_12 () Real)
(declare-fun l_0_23_11 () Real)
(declare-fun l_0_23_10 () Real)
(declare-fun l_0_23_2 () Real)
(declare-fun l_0_23_1 () Real)
(declare-fun l_0_24_9 () Real)
(declare-fun l_0_24_8 () Real)
(declare-fun l_0_24_18 () Real)
(declare-fun l_0_24_17 () Real)
(declare-fun l_0_24_16 () Real)
(declare-fun l_0_24_15 () Real)
(declare-fun l_0_24_14 () Real)
(declare-fun l_0_24_13 () Real)
(declare-fun l_0_24_12 () Real)
(declare-fun l_0_24_11 () Real)
(declare-fun l_0_24_10 () Real)
(declare-fun l_0_24_6 () Real)
(declare-fun l_0_24_7 () Real)
(declare-fun l_0_24_5 () Real)
(declare-fun l_0_24_4 () Real)
(declare-fun l_0_24_3 () Real)
(declare-fun l_0_24_2 () Real)
(declare-fun l_0_24_1 () Real)
(assert
 (let ((?x1634 (* 2.0 l_0_0_18)))
 (let ((?x1635 (* ?x1634 l_0_0_23)))
 (let ((?x1632 (* 2.0 l_0_0_17)))
 (let ((?x1633 (* ?x1632 l_0_0_22)))
 (let ((?x1636 (+ ?x1633 ?x1635)))
 (let ((?x1643 (- (- ?x1636 (* (* 8.0 l_0_0_62) l_0_0_67)) (* (* 8.0 l_0_0_63) l_0_0_68))))
 (let ((?x1649 (- (- ?x1643 (* (* 2.0 l_0_0_77) l_0_0_82)) (* (* 2.0 l_0_0_78) l_0_0_83))))
 (= (+ ?x1649 1.0) 0.0)))))))))
(assert
 (let ((?x1742 (* l_0_0_81 l_0_0_81)))
 (let ((?x1740 (* l_0_0_80 l_0_0_80)))
 (let ((?x1738 (* l_0_0_79 l_0_0_79)))
 (let ((?x1727 (* l_0_0_48 l_0_0_48)))
 (let ((?x1725 (* l_0_0_47 l_0_0_47)))
 (let ((?x1723 (* l_0_0_33 l_0_0_33)))
 (let ((?x1721 (* l_0_0_32 l_0_0_32)))
 (let ((?x1711 (- (* (* (- 4.0) l_0_0_17) l_0_0_19) (* (* 4.0 l_0_0_18) l_0_0_20))))
 (let ((?x1717 (+ (+ ?x1711 (* 1.0 (* l_0_0_19 l_0_0_19))) (* 1.0 (* l_0_0_20 l_0_0_20)))))
 (let ((?x1726 (- (+ (+ (+ ?x1717 (* 1.0 (* l_0_0_21 l_0_0_21))) ?x1721) ?x1723) ?x1725)))
 (let ((?x1734 (- (- (- ?x1726 ?x1727) (* (* 4.0 l_0_0_64) l_0_0_64)) (* (* 4.0 l_0_0_65) l_0_0_65))))
 (let ((?x1743 (- (- (- (- ?x1734 (* (* 4.0 l_0_0_66) l_0_0_66)) ?x1738) ?x1740) ?x1742)))
 (= (- ?x1743 1.0) 0.0))))))))))))))
(assert
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x1803 (* ?x1802 l_0_0_47)))
 (let ((?x1799 (* 2.0 l_0_0_31)))
 (let ((?x1800 (* ?x1799 l_0_0_32)))
 (let ((?x1797 (* l_0_0_16 l_0_0_16)))
 (let ((?x1798 (+ (- (* (- l_0_0_1) l_0_0_1) (* (* 2.0 l_0_0_16) l_0_0_26)) ?x1797)))
 (= (+ (- (+ ?x1798 ?x1800) ?x1803) (* (* 2.0 l_0_0_61) l_0_0_71)) 0.0))))))))
(assert
 (let ((?x1727 (* l_0_0_48 l_0_0_48)))
 (let ((?x1725 (* l_0_0_47 l_0_0_47)))
 (let ((?x1723 (* l_0_0_33 l_0_0_33)))
 (let ((?x1721 (* l_0_0_32 l_0_0_32)))
 (let ((?x1634 (* 2.0 l_0_0_18)))
 (let ((?x1838 (* ?x1634 l_0_0_27)))
 (let ((?x1632 (* 2.0 l_0_0_17)))
 (let ((?x1836 (* ?x1632 l_0_0_26)))
 (let ((?x1794 (* 2.0 l_0_0_16)))
 (let ((?x1795 (* ?x1794 l_0_0_26)))
 (let ((?x1837 (- (+ (+ (* (* (- 2.0) l_0_0_1) l_0_0_2) (* ?x1794 l_0_0_17)) ?x1795) ?x1836)))
 (let ((?x1846 (- (- (- (+ (+ (- ?x1837 ?x1838) ?x1721) ?x1723) ?x1725) ?x1727) (* (* 8.0 l_0_0_61) l_0_0_71))))
 (let ((?x1852 (+ (+ ?x1846 (* (* 2.0 l_0_0_62) l_0_0_71)) (* (* 2.0 l_0_0_63) l_0_0_72))))
 (= (- ?x1852 (* (* 2.0 l_0_0_76) l_0_0_86)) 0.0)))))))))))))))
(assert
 (let ((?x1920 (* 2.0 l_0_0_48)))
 (let ((?x1921 (* ?x1920 l_0_0_50)))
 (let ((?x1917 (* 2.0 l_0_0_47)))
 (let ((?x1918 (* ?x1917 l_0_0_49)))
 (let ((?x1914 (* 2.0 l_0_0_33)))
 (let ((?x1915 (* ?x1914 l_0_0_35)))
 (let ((?x1911 (* 2.0 l_0_0_32)))
 (let ((?x1912 (* ?x1911 l_0_0_34)))
 (let ((?x1908 (* 2.0 l_0_0_21)))
 (let ((?x1909 (* ?x1908 l_0_0_28)))
 (let ((?x1905 (* 2.0 l_0_0_20)))
 (let ((?x1906 (* ?x1905 l_0_0_27)))
 (let ((?x1902 (* 2.0 l_0_0_19)))
 (let ((?x1903 (* ?x1902 l_0_0_26)))
 (let ((?x1794 (* 2.0 l_0_0_16)))
 (let ((?x1897 (* ?x1794 l_0_0_19)))
 (let ((?x1901 (- (+ (* (* (- 2.0) l_0_0_1) l_0_0_4) ?x1897) (* (* 4.0 l_0_0_16) l_0_0_26))))
 (let ((?x1922 (- (- (+ (+ (- (- (- ?x1901 ?x1903) ?x1906) ?x1909) ?x1912) ?x1915) ?x1918) ?x1921)))
 (let ((?x1928 (+ (+ ?x1922 (* (* 2.0 l_0_0_64) l_0_0_71)) (* (* 2.0 l_0_0_65) l_0_0_72))))
 (= (+ ?x1928 (* (* 2.0 l_0_0_66) l_0_0_73)) 0.0)))))))))))))))))))))
(assert
 (let ((?x1920 (* 2.0 l_0_0_48)))
 (let ((?x2019 (* ?x1920 l_0_0_57)))
 (let ((?x2017 (* ?x1920 l_0_0_53)))
 (let ((?x1917 (* 2.0 l_0_0_47)))
 (let ((?x2015 (* ?x1917 l_0_0_56)))
 (let ((?x2013 (* ?x1917 l_0_0_52)))
 (let ((?x1914 (* 2.0 l_0_0_33)))
 (let ((?x2011 (* ?x1914 l_0_0_42)))
 (let ((?x2009 (* ?x1914 l_0_0_38)))
 (let ((?x1911 (* 2.0 l_0_0_32)))
 (let ((?x2007 (* ?x1911 l_0_0_41)))
 (let ((?x2005 (* ?x1911 l_0_0_37)))
 (let ((?x2002 (* 2.0 l_0_0_25)))
 (let ((?x2003 (* ?x2002 l_0_0_29)))
 (let ((?x1999 (* 2.0 l_0_0_24)))
 (let ((?x2000 (* ?x1999 l_0_0_28)))
 (let ((?x1996 (* 2.0 l_0_0_23)))
 (let ((?x1997 (* ?x1996 l_0_0_27)))
 (let ((?x1994 (* (* 2.0 l_0_0_22) l_0_0_26)))
 (let ((?x1794 (* 2.0 l_0_0_16)))
 (let ((?x1981 (* ?x1794 l_0_0_22)))
 (let ((?x2001 (- (- (- (+ (* (* (- 2.0) l_0_0_1) l_0_0_7) ?x1981) ?x1994) ?x1997) ?x2000)))
 (let ((?x2016 (+ (- (- (+ (- (+ (- ?x2001 ?x2003) ?x2005) ?x2007) ?x2009) ?x2011) ?x2013) ?x2015)))
 (let ((?x2026 (+ (+ (+ (- ?x2016 ?x2017) ?x2019) (* (* 2.0 l_0_0_67) l_0_0_71)) (* (* 2.0 l_0_0_68) l_0_0_72))))
 (let ((?x2032 (+ (+ ?x2026 (* (* 2.0 l_0_0_69) l_0_0_73)) (* (* 2.0 l_0_0_70) l_0_0_74))))
 (= ?x2032 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x2137 (* l_0_0_75 l_0_0_75)))
 (let ((?x2135 (* l_0_0_74 l_0_0_74)))
 (let ((?x2133 (* l_0_0_73 l_0_0_73)))
 (let ((?x2131 (* l_0_0_72 l_0_0_72)))
 (let ((?x2129 (* l_0_0_71 l_0_0_71)))
 (let ((?x1920 (* 2.0 l_0_0_48)))
 (let ((?x2019 (* ?x1920 l_0_0_57)))
 (let ((?x1917 (* 2.0 l_0_0_47)))
 (let ((?x2015 (* ?x1917 l_0_0_56)))
 (let ((?x1914 (* 2.0 l_0_0_33)))
 (let ((?x2011 (* ?x1914 l_0_0_42)))
 (let ((?x1911 (* 2.0 l_0_0_32)))
 (let ((?x2007 (* ?x1911 l_0_0_41)))
 (let ((?x2123 (* l_0_0_30 l_0_0_30)))
 (let ((?x2121 (* l_0_0_29 l_0_0_29)))
 (let ((?x2119 (* l_0_0_28 l_0_0_28)))
 (let ((?x2105 (* l_0_0_27 l_0_0_27)))
 (let ((?x2101 (* l_0_0_26 l_0_0_26)))
 (let ((?x1794 (* 2.0 l_0_0_16)))
 (let ((?x1795 (* ?x1794 l_0_0_26)))
 (let ((?x2120 (- (- (- (+ (* (* (- 2.0) l_0_0_1) l_0_0_11) ?x1795) ?x2101) ?x2105) ?x2119)))
 (let ((?x2130 (+ (- (- (+ (+ (- (- ?x2120 ?x2121) ?x2123) ?x2007) ?x2011) ?x2015) ?x2019) ?x2129)))
 (= (+ (+ (+ (+ ?x2130 ?x2131) ?x2133) ?x2135) ?x2137) 0.0))))))))))))))))))))))))
(assert
 (let ((?x2175 (* l_0_0_3 l_0_0_3)))
 (let ((?x2173 (* l_0_0_2 l_0_0_2)))
 (let ((?x2171 (* l_0_0_18 l_0_0_18)))
 (let ((?x1634 (* 2.0 l_0_0_18)))
 (let ((?x1838 (* ?x1634 l_0_0_27)))
 (let ((?x2170 (+ (+ (* (* 2.0 l_0_0_17) l_0_0_26) (* l_0_0_17 l_0_0_17)) ?x1838)))
 (let ((?x2178 (- (- (- (+ ?x2170 ?x2171) ?x2173) ?x2175) (* (* 8.0 l_0_0_62) l_0_0_71))))
 (let ((?x2182 (- (- ?x2178 (* (* 8.0 l_0_0_63) l_0_0_72)) (* (* 2.0 l_0_0_77) l_0_0_86))))
 (= (- ?x2182 (* (* 2.0 l_0_0_78) l_0_0_87)) 0.0))))))))))
(assert
 (let ((?x1908 (* 2.0 l_0_0_21)))
 (let ((?x1909 (* ?x1908 l_0_0_28)))
 (let ((?x1905 (* 2.0 l_0_0_20)))
 (let ((?x1906 (* ?x1905 l_0_0_27)))
 (let ((?x1902 (* 2.0 l_0_0_19)))
 (let ((?x1903 (* ?x1902 l_0_0_26)))
 (let ((?x1634 (* 2.0 l_0_0_18)))
 (let ((?x2220 (* ?x1634 l_0_0_20)))
 (let ((?x1632 (* 2.0 l_0_0_17)))
 (let ((?x2216 (* ?x1632 l_0_0_19)))
 (let ((?x2223 (- (+ (- ?x2216 (* (* 4.0 l_0_0_17) l_0_0_26)) ?x2220) (* (* 4.0 l_0_0_18) l_0_0_27))))
 (let ((?x2229 (+ (+ (- (+ ?x2223 ?x1903) (* (* 2.0 l_0_0_2) l_0_0_4)) ?x1906) ?x1909)))
 (let ((?x2235 (- (- ?x2229 (* (* 2.0 l_0_0_3) l_0_0_5)) (* (* 8.0 l_0_0_64) l_0_0_71))))
 (let ((?x2241 (- (- ?x2235 (* (* 8.0 l_0_0_65) l_0_0_72)) (* (* 8.0 l_0_0_66) l_0_0_73))))
 (let ((?x2247 (- (- ?x2241 (* (* 2.0 l_0_0_79) l_0_0_86)) (* (* 2.0 l_0_0_80) l_0_0_87))))
 (= (- ?x2247 (* (* 2.0 l_0_0_81) l_0_0_88)) 0.0)))))))))))))))))
(assert
 (let ((?x2002 (* 2.0 l_0_0_25)))
 (let ((?x2003 (* ?x2002 l_0_0_29)))
 (let ((?x1999 (* 2.0 l_0_0_24)))
 (let ((?x2000 (* ?x1999 l_0_0_28)))
 (let ((?x1996 (* 2.0 l_0_0_23)))
 (let ((?x1997 (* ?x1996 l_0_0_27)))
 (let ((?x1994 (* (* 2.0 l_0_0_22) l_0_0_26)))
 (let ((?x1634 (* 2.0 l_0_0_18)))
 (let ((?x1635 (* ?x1634 l_0_0_23)))
 (let ((?x1632 (* 2.0 l_0_0_17)))
 (let ((?x1633 (* ?x1632 l_0_0_22)))
 (let ((?x1636 (+ ?x1633 ?x1635)))
 (let ((?x2317 (+ (+ (+ (- ?x1636 (* (* 2.0 l_0_0_2) l_0_0_7)) ?x1994) ?x1997) ?x2000)))
 (let ((?x2323 (- (- (+ ?x2317 ?x2003) (* (* 2.0 l_0_0_3) l_0_0_8)) (* (* 8.0 l_0_0_67) l_0_0_71))))
 (let ((?x2329 (- (- ?x2323 (* (* 8.0 l_0_0_68) l_0_0_72)) (* (* 8.0 l_0_0_69) l_0_0_73))))
 (let ((?x2335 (- (- ?x2329 (* (* 8.0 l_0_0_70) l_0_0_74)) (* (* 2.0 l_0_0_82) l_0_0_86))))
 (let ((?x2341 (- (- ?x2335 (* (* 2.0 l_0_0_83) l_0_0_87)) (* (* 2.0 l_0_0_84) l_0_0_88))))
 (= (- ?x2341 (* (* 2.0 l_0_0_85) l_0_0_89)) 0.0)))))))))))))))))))
(assert
 (let ((?x2444 (* l_0_0_90 l_0_0_90)))
 (let ((?x2442 (* l_0_0_89 l_0_0_89)))
 (let ((?x2440 (* l_0_0_88 l_0_0_88)))
 (let ((?x2438 (* l_0_0_87 l_0_0_87)))
 (let ((?x2436 (* l_0_0_86 l_0_0_86)))
 (let ((?x1634 (* 2.0 l_0_0_18)))
 (let ((?x1838 (* ?x1634 l_0_0_27)))
 (let ((?x1632 (* 2.0 l_0_0_17)))
 (let ((?x1836 (* ?x1632 l_0_0_26)))
 (let ((?x2408 (- (* (* (- 2.0) l_0_0_11) l_0_0_2) (* (* 2.0 l_0_0_12) l_0_0_3))))
 (let ((?x2414 (+ (+ (+ (+ ?x2408 ?x1836) ?x1838) (* 1.0 (* l_0_0_26 l_0_0_26))) (* 1.0 (* l_0_0_27 l_0_0_27)))))
 (let ((?x2418 (+ (+ ?x2414 (* 1.0 (* l_0_0_28 l_0_0_28))) (* 1.0 (* l_0_0_29 l_0_0_29)))))
 (let ((?x2423 (- (+ ?x2418 (* 1.0 (* l_0_0_30 l_0_0_30))) (* (* 4.0 l_0_0_71) l_0_0_71))))
 (let ((?x2429 (- (- ?x2423 (* (* 4.0 l_0_0_72) l_0_0_72)) (* (* 4.0 l_0_0_73) l_0_0_73))))
 (let ((?x2435 (- (- ?x2429 (* (* 4.0 l_0_0_74) l_0_0_74)) (* (* 4.0 l_0_0_75) l_0_0_75))))
 (= (- (- (- (- (- ?x2435 ?x2436) ?x2438) ?x2440) ?x2442) ?x2444) 0.0)))))))))))))))))
(assert
 (let ((?x2516 (* l_0_0_6 l_0_0_6)))
 (let ((?x2514 (* l_0_0_5 l_0_0_5)))
 (let ((?x1920 (* 2.0 l_0_0_48)))
 (let ((?x2019 (* ?x1920 l_0_0_57)))
 (let ((?x1917 (* 2.0 l_0_0_47)))
 (let ((?x2015 (* ?x1917 l_0_0_56)))
 (let ((?x2510 (* l_0_0_4 l_0_0_4)))
 (let ((?x1914 (* 2.0 l_0_0_33)))
 (let ((?x2011 (* ?x1914 l_0_0_42)))
 (let ((?x1911 (* 2.0 l_0_0_32)))
 (let ((?x2007 (* ?x1911 l_0_0_41)))
 (let ((?x1718 (* l_0_0_21 l_0_0_21)))
 (let ((?x1715 (* l_0_0_20 l_0_0_20)))
 (let ((?x2502 (- (+ (* (* (- 4.0) l_0_0_19) l_0_0_26) (* l_0_0_19 l_0_0_19)) (* (* 4.0 l_0_0_20) l_0_0_27))))
 (let ((?x2508 (+ (+ (- (+ ?x2502 ?x1715) (* (* 4.0 l_0_0_21) l_0_0_28)) ?x1718) ?x2007)))
 (= (- (- (- (- (- (+ ?x2508 ?x2011) ?x2510) ?x2015) ?x2019) ?x2514) ?x2516) 0.0)))))))))))))))))
(assert
 (let ((?x1908 (* 2.0 l_0_0_21)))
 (let ((?x2550 (* ?x1908 l_0_0_24)))
 (let ((?x1905 (* 2.0 l_0_0_20)))
 (let ((?x2548 (* ?x1905 l_0_0_23)))
 (let ((?x1902 (* 2.0 l_0_0_19)))
 (let ((?x2547 (* ?x1902 l_0_0_22)))
 (let ((?x2557 (- (- (+ (+ ?x2547 ?x2548) ?x2550) (* (* 4.0 l_0_0_22) l_0_0_26)) (* (* 4.0 l_0_0_23) l_0_0_27))))
 (let ((?x2563 (- (- ?x2557 (* (* 4.0 l_0_0_24) l_0_0_28)) (* (* 4.0 l_0_0_25) l_0_0_29))))
 (let ((?x2569 (- (- ?x2563 (* (* 2.0 l_0_0_4) l_0_0_7)) (* (* 2.0 l_0_0_5) l_0_0_8))))
 (= (- ?x2569 (* (* 2.0 l_0_0_6) l_0_0_9)) 0.0)))))))))))
(assert
 (let ((?x1908 (* 2.0 l_0_0_21)))
 (let ((?x1909 (* ?x1908 l_0_0_28)))
 (let ((?x1905 (* 2.0 l_0_0_20)))
 (let ((?x1906 (* ?x1905 l_0_0_27)))
 (let ((?x1902 (* 2.0 l_0_0_19)))
 (let ((?x1903 (* ?x1902 l_0_0_26)))
 (let ((?x2626 (- (* (* (- 2.0) l_0_0_11) l_0_0_4) (* (* 2.0 l_0_0_12) l_0_0_5))))
 (let ((?x2632 (+ (+ (+ (- ?x2626 (* (* 2.0 l_0_0_13) l_0_0_6)) ?x1903) ?x1906) ?x1909)))
 (let ((?x2638 (- (- ?x2632 (* (* 2.0 l_0_0_26) l_0_0_26)) (* (* 2.0 l_0_0_27) l_0_0_27))))
 (let ((?x2644 (- (- ?x2638 (* (* 2.0 l_0_0_28) l_0_0_28)) (* (* 2.0 l_0_0_29) l_0_0_29))))
 (= (- ?x2644 (* (* 2.0 l_0_0_30) l_0_0_30)) 0.0))))))))))))
(assert
 (let ((?x2704 (* l_0_0_9 l_0_0_9)))
 (let ((?x2702 (* l_0_0_8 l_0_0_8)))
 (let ((?x2700 (* l_0_0_7 l_0_0_7)))
 (let ((?x2698 (* l_0_0_25 l_0_0_25)))
 (let ((?x2696 (* l_0_0_24 l_0_0_24)))
 (let ((?x2694 (* l_0_0_23 l_0_0_23)))
 (let ((?x2697 (+ (+ (+ (* (- l_0_0_10) l_0_0_10) (* l_0_0_22 l_0_0_22)) ?x2694) ?x2696)))
 (= (- (- (- (+ ?x2697 ?x2698) ?x2700) ?x2702) ?x2704) 0.0)))))))))
(assert
 (let ((?x2002 (* 2.0 l_0_0_25)))
 (let ((?x2003 (* ?x2002 l_0_0_29)))
 (let ((?x1999 (* 2.0 l_0_0_24)))
 (let ((?x2000 (* ?x1999 l_0_0_28)))
 (let ((?x1996 (* 2.0 l_0_0_23)))
 (let ((?x1997 (* ?x1996 l_0_0_27)))
 (let ((?x1994 (* (* 2.0 l_0_0_22) l_0_0_26)))
 (let ((?x2725 (- (* (* (- 2.0) l_0_0_10) l_0_0_14) (* (* 2.0 l_0_0_11) l_0_0_7))))
 (let ((?x2729 (- (- ?x2725 (* (* 2.0 l_0_0_12) l_0_0_8)) (* (* 2.0 l_0_0_13) l_0_0_9))))
 (= (+ (+ (+ (+ ?x2729 ?x1994) ?x1997) ?x2000) ?x2003) 0.0)))))))))))
(assert
 (let ((?x2123 (* l_0_0_30 l_0_0_30)))
 (let ((?x2121 (* l_0_0_29 l_0_0_29)))
 (let ((?x2119 (* l_0_0_28 l_0_0_28)))
 (let ((?x2105 (* l_0_0_27 l_0_0_27)))
 (let ((?x2101 (* l_0_0_26 l_0_0_26)))
 (let ((?x2765 (* l_0_0_15 l_0_0_15)))
 (let ((?x2763 (* l_0_0_14 l_0_0_14)))
 (let ((?x2761 (* l_0_0_13 l_0_0_13)))
 (let ((?x2764 (- (- (- (* (- l_0_0_11) l_0_0_11) (* l_0_0_12 l_0_0_12)) ?x2761) ?x2763)))
 (= (+ (+ (+ (+ (+ (- ?x2764 ?x2765) ?x2101) ?x2105) ?x2119) ?x2121) ?x2123) 0.0)))))))))))
(assert
 (let ((?x2793 (- (* (* (- 2.0) l_0_0_16) l_0_0_19) (* (* 2.0 l_0_0_16) l_0_0_16))))
 (= (+ ?x2793 (* (* 2.0 l_0_0_61) l_0_0_64)) 0.0)))
(assert
 (let ((?x1634 (* 2.0 l_0_0_18)))
 (let ((?x2220 (* ?x1634 l_0_0_20)))
 (let ((?x1632 (* 2.0 l_0_0_17)))
 (let ((?x2216 (* ?x1632 l_0_0_19)))
 (let ((?x1794 (* 2.0 l_0_0_16)))
 (let ((?x1897 (* ?x1794 l_0_0_19)))
 (let ((?x2812 (- (- (- (+ (* (* (- 4.0) l_0_0_16) l_0_0_17) ?x1897) ?x2216) ?x2220) (* (* 8.0 l_0_0_61) l_0_0_64))))
 (let ((?x2816 (+ (+ ?x2812 (* (* 2.0 l_0_0_62) l_0_0_64)) (* (* 2.0 l_0_0_63) l_0_0_65))))
 (= (- ?x2816 (* (* 2.0 l_0_0_76) l_0_0_79)) 0.0))))))))))
(assert
 (let ((?x1773 (* l_0_0_66 l_0_0_66)))
 (let ((?x1767 (* l_0_0_65 l_0_0_65)))
 (let ((?x1761 (* l_0_0_64 l_0_0_64)))
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x1803 (* ?x1802 l_0_0_47)))
 (let ((?x1799 (* 2.0 l_0_0_31)))
 (let ((?x1800 (* ?x1799 l_0_0_32)))
 (let ((?x1718 (* l_0_0_21 l_0_0_21)))
 (let ((?x1715 (* l_0_0_20 l_0_0_20)))
 (let ((?x2853 (- (- (* (* (- 4.0) l_0_0_16) l_0_0_19) (* l_0_0_19 l_0_0_19)) ?x1715)))
 (= (+ (+ (+ (- (+ (- ?x2853 ?x1718) ?x1800) ?x1803) ?x1761) ?x1767) ?x1773) 0.0))))))))))))
(assert
 (let ((?x1920 (* 2.0 l_0_0_48)))
 (let ((?x1921 (* ?x1920 l_0_0_50)))
 (let ((?x1917 (* 2.0 l_0_0_47)))
 (let ((?x1918 (* ?x1917 l_0_0_49)))
 (let ((?x1914 (* 2.0 l_0_0_33)))
 (let ((?x1915 (* ?x1914 l_0_0_35)))
 (let ((?x1911 (* 2.0 l_0_0_32)))
 (let ((?x1912 (* ?x1911 l_0_0_34)))
 (let ((?x1908 (* 2.0 l_0_0_21)))
 (let ((?x2550 (* ?x1908 l_0_0_24)))
 (let ((?x1905 (* 2.0 l_0_0_20)))
 (let ((?x2548 (* ?x1905 l_0_0_23)))
 (let ((?x1902 (* 2.0 l_0_0_19)))
 (let ((?x2547 (* ?x1902 l_0_0_22)))
 (let ((?x2885 (- (- (- (- (* (* (- 4.0) l_0_0_16) l_0_0_22) ?x2547) ?x2548) ?x2550) ?x1912)))
 (let ((?x2890 (+ (+ (+ (- ?x2885 ?x1915) ?x1918) ?x1921) (* (* 2.0 l_0_0_64) l_0_0_67))))
 (let ((?x2894 (+ (+ ?x2890 (* (* 2.0 l_0_0_65) l_0_0_68)) (* (* 2.0 l_0_0_66) l_0_0_69))))
 (= ?x2894 0.0)))))))))))))))))))
(assert
 (let ((?x1634 (* 2.0 l_0_0_18)))
 (let ((?x2220 (* ?x1634 l_0_0_20)))
 (let ((?x1632 (* 2.0 l_0_0_17)))
 (let ((?x2216 (* ?x1632 l_0_0_19)))
 (let ((?x2927 (- (- (+ (- ?x2216 (* ?x1632 l_0_0_17)) ?x2220) (* ?x1634 l_0_0_18)) (* (* 8.0 l_0_0_62) l_0_0_64))))
 (let ((?x2931 (- (- ?x2927 (* (* 8.0 l_0_0_63) l_0_0_65)) (* (* 2.0 l_0_0_77) l_0_0_79))))
 (= (- ?x2931 (* (* 2.0 l_0_0_78) l_0_0_80)) 0.0))))))))
(assert
 (let ((?x1908 (* 2.0 l_0_0_21)))
 (let ((?x2550 (* ?x1908 l_0_0_24)))
 (let ((?x1905 (* 2.0 l_0_0_20)))
 (let ((?x2548 (* ?x1905 l_0_0_23)))
 (let ((?x1902 (* 2.0 l_0_0_19)))
 (let ((?x2547 (* ?x1902 l_0_0_22)))
 (let ((?x2971 (- (* (* (- 4.0) l_0_0_17) l_0_0_22) (* (* 4.0 l_0_0_18) l_0_0_23))))
 (let ((?x2976 (- (+ (+ (+ ?x2971 ?x2547) ?x2548) ?x2550) (* (* 8.0 l_0_0_64) l_0_0_67))))
 (let ((?x2980 (- (- ?x2976 (* (* 8.0 l_0_0_65) l_0_0_68)) (* (* 8.0 l_0_0_66) l_0_0_69))))
 (let ((?x2984 (- (- ?x2980 (* (* 2.0 l_0_0_79) l_0_0_82)) (* (* 2.0 l_0_0_80) l_0_0_83))))
 (= (- ?x2984 (* (* 2.0 l_0_0_81) l_0_0_84)) 0.0))))))))))))
(assert
 (let ((?x1920 (* 2.0 l_0_0_48)))
 (let ((?x1921 (* ?x1920 l_0_0_50)))
 (let ((?x1917 (* 2.0 l_0_0_47)))
 (let ((?x1918 (* ?x1917 l_0_0_49)))
 (let ((?x1914 (* 2.0 l_0_0_33)))
 (let ((?x1915 (* ?x1914 l_0_0_35)))
 (let ((?x1911 (* 2.0 l_0_0_32)))
 (let ((?x1912 (* ?x1911 l_0_0_34)))
 (let ((?x3034 (- (* (* (- 2.0) l_0_0_19) l_0_0_19) (* (* 2.0 l_0_0_20) l_0_0_20))))
 (let ((?x3039 (- (+ (+ (- ?x3034 (* (* 2.0 l_0_0_21) l_0_0_21)) ?x1912) ?x1915) ?x1918)))
 (= (- ?x3039 ?x1921) 0.0))))))))))))
(assert
 (let ((?x1920 (* 2.0 l_0_0_48)))
 (let ((?x2017 (* ?x1920 l_0_0_53)))
 (let ((?x1917 (* 2.0 l_0_0_47)))
 (let ((?x2013 (* ?x1917 l_0_0_52)))
 (let ((?x1914 (* 2.0 l_0_0_33)))
 (let ((?x2009 (* ?x1914 l_0_0_38)))
 (let ((?x1911 (* 2.0 l_0_0_32)))
 (let ((?x2005 (* ?x1911 l_0_0_37)))
 (let ((?x3063 (- (* (* (- 4.0) l_0_0_19) l_0_0_22) (* (* 4.0 l_0_0_20) l_0_0_23))))
 (let ((?x3068 (- (+ (+ (- ?x3063 (* (* 4.0 l_0_0_21) l_0_0_24)) ?x2005) ?x2009) ?x2013)))
 (= (- ?x3068 ?x2017) 0.0))))))))))))
(assert
 (let ((?x3091 (- (* (* (- 2.0) l_0_0_22) l_0_0_22) (* (* 2.0 l_0_0_23) l_0_0_23))))
 (let ((?x3095 (- (- ?x3091 (* (* 2.0 l_0_0_24) l_0_0_24)) (* (* 2.0 l_0_0_25) l_0_0_25))))
 (= ?x3095 0.0))))
(assert
 (= (+ (* (- l_0_0_16) l_0_0_16) (* l_0_0_61 l_0_0_61)) 0.0))
(assert
 (let ((?x3133 (* l_0_0_76 l_0_0_76)))
 (let ((?x3127 (+ (* (* (- 2.0) l_0_0_16) l_0_0_17) (* 1.0 (* l_0_0_16 l_0_0_16)))))
 (let ((?x3132 (- (+ ?x3127 (* (* 2.0 l_0_0_61) l_0_0_62)) (* (* 4.0 l_0_0_61) l_0_0_61))))
 (= (- ?x3132 ?x3133) 0.0)))))
(assert
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x1803 (* ?x1802 l_0_0_47)))
 (let ((?x1799 (* 2.0 l_0_0_31)))
 (let ((?x1800 (* ?x1799 l_0_0_32)))
 (let ((?x3153 (+ (+ (- (* (* (- 2.0) l_0_0_16) l_0_0_22) ?x1800) ?x1803) (* (* 2.0 l_0_0_61) l_0_0_67))))
 (= ?x3153 0.0)))))))
(assert
 (let ((?x3168 (* l_0_0_63 l_0_0_63)))
 (let ((?x3166 (* l_0_0_62 l_0_0_62)))
 (let ((?x2171 (* l_0_0_18 l_0_0_18)))
 (let ((?x3160 (- (- (* (* 2.0 l_0_0_16) l_0_0_17) (* l_0_0_17 l_0_0_17)) ?x2171)))
 (let ((?x3171 (- (+ (+ (- ?x3160 (* (* 8.0 l_0_0_61) l_0_0_62)) ?x3166) ?x3168) (* (* 2.0 l_0_0_76) l_0_0_77))))
 (= ?x3171 0.0)))))))
(assert
 (let ((?x1727 (* l_0_0_48 l_0_0_48)))
 (let ((?x1725 (* l_0_0_47 l_0_0_47)))
 (let ((?x1723 (* l_0_0_33 l_0_0_33)))
 (let ((?x1721 (* l_0_0_32 l_0_0_32)))
 (let ((?x1634 (* 2.0 l_0_0_18)))
 (let ((?x1635 (* ?x1634 l_0_0_23)))
 (let ((?x1632 (* 2.0 l_0_0_17)))
 (let ((?x1633 (* ?x1632 l_0_0_22)))
 (let ((?x1794 (* 2.0 l_0_0_16)))
 (let ((?x1981 (* ?x1794 l_0_0_22)))
 (let ((?x3198 (- (+ (+ (- (- (- (- ?x1981 ?x1633) ?x1635) ?x1721) ?x1723) ?x1725) ?x1727) (* (* 8.0 l_0_0_61) l_0_0_67))))
 (let ((?x3202 (+ (+ ?x3198 (* (* 2.0 l_0_0_62) l_0_0_67)) (* (* 2.0 l_0_0_63) l_0_0_68))))
 (= (- ?x3202 (* (* 2.0 l_0_0_76) l_0_0_82)) 0.0))))))))))))))
(assert
 (let ((?x3254 (* l_0_0_70 l_0_0_70)))
 (let ((?x3252 (* l_0_0_69 l_0_0_69)))
 (let ((?x3250 (* l_0_0_68 l_0_0_68)))
 (let ((?x3248 (* l_0_0_67 l_0_0_67)))
 (let ((?x1920 (* 2.0 l_0_0_48)))
 (let ((?x2017 (* ?x1920 l_0_0_53)))
 (let ((?x1917 (* 2.0 l_0_0_47)))
 (let ((?x2013 (* ?x1917 l_0_0_52)))
 (let ((?x1914 (* 2.0 l_0_0_33)))
 (let ((?x2009 (* ?x1914 l_0_0_38)))
 (let ((?x1911 (* 2.0 l_0_0_32)))
 (let ((?x2005 (* ?x1911 l_0_0_37)))
 (let ((?x2698 (* l_0_0_25 l_0_0_25)))
 (let ((?x2696 (* l_0_0_24 l_0_0_24)))
 (let ((?x3243 (- (- (- (* (- l_0_0_22) l_0_0_22) (* l_0_0_23 l_0_0_23)) ?x2696) ?x2698)))
 (let ((?x3253 (+ (+ (+ (+ (+ (- (- ?x3243 ?x2005) ?x2009) ?x2013) ?x2017) ?x3248) ?x3250) ?x3252)))
 (= (+ ?x3253 ?x3254) 0.0))))))))))))))))))
(assert
 (let ((?x3290 (* l_0_0_78 l_0_0_78)))
 (let ((?x3288 (* l_0_0_77 l_0_0_77)))
 (let ((?x3281 (+ (* 1.0 (* l_0_0_17 l_0_0_17)) (* 1.0 (* l_0_0_18 l_0_0_18)))))
 (let ((?x3287 (- (- ?x3281 (* (* 4.0 l_0_0_62) l_0_0_62)) (* (* 4.0 l_0_0_63) l_0_0_63))))
 (= (- (- ?x3287 ?x3288) ?x3290) 0.0))))))
(assert
 (let ((?x3336 (* l_0_0_85 l_0_0_85)))
 (let ((?x3334 (* l_0_0_84 l_0_0_84)))
 (let ((?x3332 (* l_0_0_83 l_0_0_83)))
 (let ((?x3330 (* l_0_0_82 l_0_0_82)))
 (let ((?x3313 (+ (* 1.0 (* l_0_0_22 l_0_0_22)) (* 1.0 (* l_0_0_23 l_0_0_23)))))
 (let ((?x3317 (+ (+ ?x3313 (* 1.0 (* l_0_0_24 l_0_0_24))) (* 1.0 (* l_0_0_25 l_0_0_25)))))
 (let ((?x3323 (- (- ?x3317 (* (* 4.0 l_0_0_67) l_0_0_67)) (* (* 4.0 l_0_0_68) l_0_0_68))))
 (let ((?x3329 (- (- ?x3323 (* (* 4.0 l_0_0_69) l_0_0_69)) (* (* 4.0 l_0_0_70) l_0_0_70))))
 (= (- (- (- (- ?x3329 ?x3330) ?x3332) ?x3334) ?x3336) 0.0))))))))))
(assert
 (= (+ (* (- l_0_0_31) l_0_0_31) (* l_0_0_46 l_0_0_46)) 0.0))
(assert
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x3385 (* ?x1802 l_0_0_49)))
 (= (+ (* (* (- 2.0) l_0_0_31) l_0_0_34) ?x3385) 0.0))))
(assert
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x3391 (* ?x1802 l_0_0_52)))
 (= (+ (* (* (- 2.0) l_0_0_31) l_0_0_37) ?x3391) 0.0))))
(assert
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x3408 (* ?x1802 l_0_0_56)))
 (let ((?x3391 (* ?x1802 l_0_0_52)))
 (let ((?x1799 (* 2.0 l_0_0_31)))
 (let ((?x3401 (* ?x1799 l_0_0_41)))
 (let ((?x3399 (* ?x1799 l_0_0_37)))
 (= (+ (- (- ?x3399 ?x3401) ?x3391) ?x3408) 0.0))))))))
(assert
 (let ((?x3436 (* l_0_0_51 l_0_0_51)))
 (let ((?x3434 (* l_0_0_50 l_0_0_50)))
 (let ((?x3432 (* l_0_0_49 l_0_0_49)))
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x3391 (* ?x1802 l_0_0_52)))
 (let ((?x3429 (* l_0_0_36 l_0_0_36)))
 (let ((?x3427 (* l_0_0_35 l_0_0_35)))
 (let ((?x3428 (- (- (* (* 2.0 l_0_0_31) l_0_0_37) (* l_0_0_34 l_0_0_34)) ?x3427)))
 (= (+ (+ (+ (- (- ?x3428 ?x3429) ?x3391) ?x3432) ?x3434) ?x3436) 0.0))))))))))
(assert
 (let ((?x3465 (* 2.0 l_0_0_51)))
 (let ((?x3466 (* ?x3465 l_0_0_54)))
 (let ((?x3462 (* 2.0 l_0_0_50)))
 (let ((?x3463 (* ?x3462 l_0_0_53)))
 (let ((?x3459 (* 2.0 l_0_0_49)))
 (let ((?x3460 (* ?x3459 l_0_0_52)))
 (let ((?x3456 (* 2.0 l_0_0_36)))
 (let ((?x3457 (* ?x3456 l_0_0_39)))
 (let ((?x3453 (* 2.0 l_0_0_35)))
 (let ((?x3454 (* ?x3453 l_0_0_38)))
 (let ((?x3464 (+ (+ (- (- (* (* (- 2.0) l_0_0_34) l_0_0_37) ?x3454) ?x3457) ?x3460) ?x3463)))
 (= (+ ?x3464 ?x3466) 0.0)))))))))))))
(assert
 (let ((?x3465 (* 2.0 l_0_0_51)))
 (let ((?x3509 (* ?x3465 l_0_0_58)))
 (let ((?x3466 (* ?x3465 l_0_0_54)))
 (let ((?x3462 (* 2.0 l_0_0_50)))
 (let ((?x3506 (* ?x3462 l_0_0_57)))
 (let ((?x3463 (* ?x3462 l_0_0_53)))
 (let ((?x3459 (* 2.0 l_0_0_49)))
 (let ((?x3503 (* ?x3459 l_0_0_56)))
 (let ((?x3460 (* ?x3459 l_0_0_52)))
 (let ((?x3456 (* 2.0 l_0_0_36)))
 (let ((?x3500 (* ?x3456 l_0_0_43)))
 (let ((?x3457 (* ?x3456 l_0_0_39)))
 (let ((?x3453 (* 2.0 l_0_0_35)))
 (let ((?x3497 (* ?x3453 l_0_0_42)))
 (let ((?x3454 (* ?x3453 l_0_0_38)))
 (let ((?x3484 (* 2.0 l_0_0_34)))
 (let ((?x3488 (* ?x3484 l_0_0_41)))
 (let ((?x3486 (* ?x3484 l_0_0_37)))
 (let ((?x3504 (+ (- (- (+ (- (+ (- ?x3486 ?x3488) ?x3454) ?x3497) ?x3457) ?x3500) ?x3460) ?x3503)))
 (= (+ (- (+ (- ?x3504 ?x3463) ?x3506) ?x3466) ?x3509) 0.0)))))))))))))))))))))
(assert
 (let ((?x3568 (* l_0_0_55 l_0_0_55)))
 (let ((?x3566 (* l_0_0_54 l_0_0_54)))
 (let ((?x3564 (* l_0_0_53 l_0_0_53)))
 (let ((?x3562 (* l_0_0_52 l_0_0_52)))
 (let ((?x3560 (* l_0_0_40 l_0_0_40)))
 (let ((?x3558 (* l_0_0_39 l_0_0_39)))
 (let ((?x3561 (- (- (- (* (- l_0_0_37) l_0_0_37) (* l_0_0_38 l_0_0_38)) ?x3558) ?x3560)))
 (= (+ (+ (+ (+ ?x3561 ?x3562) ?x3564) ?x3566) ?x3568) 0.0)))))))))
(assert
 (let ((?x3568 (* l_0_0_55 l_0_0_55)))
 (let ((?x3617 (* (* 2.0 l_0_0_55) l_0_0_59)))
 (let ((?x3566 (* l_0_0_54 l_0_0_54)))
 (let ((?x3613 (* (* 2.0 l_0_0_54) l_0_0_58)))
 (let ((?x3564 (* l_0_0_53 l_0_0_53)))
 (let ((?x3609 (* (* 2.0 l_0_0_53) l_0_0_57)))
 (let ((?x3562 (* l_0_0_52 l_0_0_52)))
 (let ((?x3605 (* (* 2.0 l_0_0_52) l_0_0_56)))
 (let ((?x3560 (* l_0_0_40 l_0_0_40)))
 (let ((?x3601 (* (* 2.0 l_0_0_40) l_0_0_44)))
 (let ((?x3558 (* l_0_0_39 l_0_0_39)))
 (let ((?x3597 (* (* 2.0 l_0_0_39) l_0_0_43)))
 (let ((?x3556 (* l_0_0_38 l_0_0_38)))
 (let ((?x3593 (* (* 2.0 l_0_0_38) l_0_0_42)))
 (let ((?x3594 (- (+ (* (* (- 2.0) l_0_0_37) l_0_0_41) (* l_0_0_37 l_0_0_37)) ?x3593)))
 (let ((?x3607 (- (+ (+ (- (+ (- (+ ?x3594 ?x3556) ?x3597) ?x3558) ?x3601) ?x3560) ?x3605) ?x3562)))
 (= (- (+ (- (+ (- (+ ?x3607 ?x3609) ?x3564) ?x3613) ?x3566) ?x3617) ?x3568) 0.0))))))))))))))))))
(assert
 (let ((?x3692 (* l_0_0_60 l_0_0_60)))
 (let ((?x3690 (* l_0_0_59 l_0_0_59)))
 (let ((?x3688 (* l_0_0_58 l_0_0_58)))
 (let ((?x3686 (* l_0_0_57 l_0_0_57)))
 (let ((?x3684 (* l_0_0_56 l_0_0_56)))
 (let ((?x3617 (* (* 2.0 l_0_0_55) l_0_0_59)))
 (let ((?x3613 (* (* 2.0 l_0_0_54) l_0_0_58)))
 (let ((?x3609 (* (* 2.0 l_0_0_53) l_0_0_57)))
 (let ((?x3605 (* (* 2.0 l_0_0_52) l_0_0_56)))
 (let ((?x3678 (* l_0_0_45 l_0_0_45)))
 (let ((?x3676 (* l_0_0_44 l_0_0_44)))
 (let ((?x3674 (* l_0_0_43 l_0_0_43)))
 (let ((?x3672 (* l_0_0_42 l_0_0_42)))
 (let ((?x3670 (* l_0_0_41 l_0_0_41)))
 (let ((?x3601 (* (* 2.0 l_0_0_40) l_0_0_44)))
 (let ((?x3597 (* (* 2.0 l_0_0_39) l_0_0_43)))
 (let ((?x3593 (* (* 2.0 l_0_0_38) l_0_0_42)))
 (let ((?x3669 (+ (+ (+ (* (* 2.0 l_0_0_37) l_0_0_41) ?x3593) ?x3597) ?x3601)))
 (let ((?x3681 (- (- (- (- (- (- (- ?x3669 ?x3670) ?x3672) ?x3674) ?x3676) ?x3678) ?x3605) ?x3609)))
 (let ((?x3693 (+ (+ (+ (+ (+ (- (- ?x3681 ?x3613) ?x3617) ?x3684) ?x3686) ?x3688) ?x3690) ?x3692)))
 (= ?x3693 0.0))))))))))))))))))))))
(assert
 (= (- (* l_0_0_31 l_0_0_31) (* l_0_0_46 l_0_0_46)) 0.0))
(assert
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x3385 (* ?x1802 l_0_0_49)))
 (= (- (* (* 2.0 l_0_0_31) l_0_0_34) ?x3385) 0.0))))
(assert
 (let ((?x3436 (* l_0_0_51 l_0_0_51)))
 (let ((?x3434 (* l_0_0_50 l_0_0_50)))
 (let ((?x3432 (* l_0_0_49 l_0_0_49)))
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x3408 (* ?x1802 l_0_0_56)))
 (let ((?x3429 (* l_0_0_36 l_0_0_36)))
 (let ((?x3427 (* l_0_0_35 l_0_0_35)))
 (let ((?x3742 (+ (+ (* (* 2.0 l_0_0_31) l_0_0_41) (* l_0_0_34 l_0_0_34)) ?x3427)))
 (= (- (- (- (- (+ ?x3742 ?x3429) ?x3408) ?x3432) ?x3434) ?x3436) 0.0))))))))))
(assert
 (let ((?x3436 (* l_0_0_51 l_0_0_51)))
 (let ((?x3434 (* l_0_0_50 l_0_0_50)))
 (let ((?x3432 (* l_0_0_49 l_0_0_49)))
 (let ((?x3429 (* l_0_0_36 l_0_0_36)))
 (let ((?x3766 (- (+ (+ (* l_0_0_34 l_0_0_34) (* l_0_0_35 l_0_0_35)) ?x3429) ?x3432)))
 (= (- (- ?x3766 ?x3434) ?x3436) 0.0)))))))
(assert
 (let ((?x3465 (* 2.0 l_0_0_51)))
 (let ((?x3466 (* ?x3465 l_0_0_54)))
 (let ((?x3462 (* 2.0 l_0_0_50)))
 (let ((?x3463 (* ?x3462 l_0_0_53)))
 (let ((?x3459 (* 2.0 l_0_0_49)))
 (let ((?x3460 (* ?x3459 l_0_0_52)))
 (let ((?x3456 (* 2.0 l_0_0_36)))
 (let ((?x3457 (* ?x3456 l_0_0_39)))
 (let ((?x3453 (* 2.0 l_0_0_35)))
 (let ((?x3454 (* ?x3453 l_0_0_38)))
 (let ((?x3484 (* 2.0 l_0_0_34)))
 (let ((?x3486 (* ?x3484 l_0_0_37)))
 (= (- (- (- (+ (+ ?x3486 ?x3454) ?x3457) ?x3460) ?x3463) ?x3466) 0.0))))))))))))))
(assert
 (let ((?x3465 (* 2.0 l_0_0_51)))
 (let ((?x3509 (* ?x3465 l_0_0_58)))
 (let ((?x3462 (* 2.0 l_0_0_50)))
 (let ((?x3506 (* ?x3462 l_0_0_57)))
 (let ((?x3459 (* 2.0 l_0_0_49)))
 (let ((?x3503 (* ?x3459 l_0_0_56)))
 (let ((?x3456 (* 2.0 l_0_0_36)))
 (let ((?x3500 (* ?x3456 l_0_0_43)))
 (let ((?x3453 (* 2.0 l_0_0_35)))
 (let ((?x3497 (* ?x3453 l_0_0_42)))
 (let ((?x3484 (* 2.0 l_0_0_34)))
 (let ((?x3488 (* ?x3484 l_0_0_41)))
 (= (- (- (- (+ (+ ?x3488 ?x3497) ?x3500) ?x3503) ?x3506) ?x3509) 0.0))))))))))))))
(assert
 (let ((?x3568 (* l_0_0_55 l_0_0_55)))
 (let ((?x3566 (* l_0_0_54 l_0_0_54)))
 (let ((?x3564 (* l_0_0_53 l_0_0_53)))
 (let ((?x3562 (* l_0_0_52 l_0_0_52)))
 (let ((?x3560 (* l_0_0_40 l_0_0_40)))
 (let ((?x3558 (* l_0_0_39 l_0_0_39)))
 (let ((?x3812 (+ (+ (+ (* l_0_0_37 l_0_0_37) (* l_0_0_38 l_0_0_38)) ?x3558) ?x3560)))
 (= (- (- (- (- ?x3812 ?x3562) ?x3564) ?x3566) ?x3568) 0.0)))))))))
(assert
 (let ((?x3617 (* (* 2.0 l_0_0_55) l_0_0_59)))
 (let ((?x3613 (* (* 2.0 l_0_0_54) l_0_0_58)))
 (let ((?x3609 (* (* 2.0 l_0_0_53) l_0_0_57)))
 (let ((?x3605 (* (* 2.0 l_0_0_52) l_0_0_56)))
 (let ((?x3601 (* (* 2.0 l_0_0_40) l_0_0_44)))
 (let ((?x3597 (* (* 2.0 l_0_0_39) l_0_0_43)))
 (let ((?x3593 (* (* 2.0 l_0_0_38) l_0_0_42)))
 (let ((?x3669 (+ (+ (+ (* (* 2.0 l_0_0_37) l_0_0_41) ?x3593) ?x3597) ?x3601)))
 (= (- (- (- (- ?x3669 ?x3605) ?x3609) ?x3613) ?x3617) 0.0))))))))))
(assert
 (let ((?x3692 (* l_0_0_60 l_0_0_60)))
 (let ((?x3690 (* l_0_0_59 l_0_0_59)))
 (let ((?x3688 (* l_0_0_58 l_0_0_58)))
 (let ((?x3686 (* l_0_0_57 l_0_0_57)))
 (let ((?x3684 (* l_0_0_56 l_0_0_56)))
 (let ((?x3678 (* l_0_0_45 l_0_0_45)))
 (let ((?x3676 (* l_0_0_44 l_0_0_44)))
 (let ((?x3674 (* l_0_0_43 l_0_0_43)))
 (let ((?x3842 (+ (+ (+ (* l_0_0_41 l_0_0_41) (* l_0_0_42 l_0_0_42)) ?x3674) ?x3676)))
 (= (- (- (- (- (- (+ ?x3842 ?x3678) ?x3684) ?x3686) ?x3688) ?x3690) ?x3692) 0.0)))))))))))
(assert
 (= (- (* l_0_0_31 l_0_0_31) (* l_0_0_46 l_0_0_46)) 0.0))
(assert
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x3385 (* ?x1802 l_0_0_49)))
 (= (- (* (* 2.0 l_0_0_31) l_0_0_34) ?x3385) 0.0))))
(assert
 (let ((?x1802 (* 2.0 l_0_0_46)))
 (let ((?x3408 (* ?x1802 l_0_0_56)))
 (let ((?x1799 (* 2.0 l_0_0_31)))
 (let ((?x3401 (* ?x1799 l_0_0_41)))
 (= (- ?x3401 ?x3408) 0.0))))))
(assert
 (let ((?x3465 (* 2.0 l_0_0_51)))
 (let ((?x3509 (* ?x3465 l_0_0_58)))
 (let ((?x3462 (* 2.0 l_0_0_50)))
 (let ((?x3506 (* ?x3462 l_0_0_57)))
 (let ((?x3459 (* 2.0 l_0_0_49)))
 (let ((?x3503 (* ?x3459 l_0_0_56)))
 (let ((?x3456 (* 2.0 l_0_0_36)))
 (let ((?x3500 (* ?x3456 l_0_0_43)))
 (let ((?x3453 (* 2.0 l_0_0_35)))
 (let ((?x3497 (* ?x3453 l_0_0_42)))
 (let ((?x3484 (* 2.0 l_0_0_34)))
 (let ((?x3488 (* ?x3484 l_0_0_41)))
 (= (- (- (- (+ (+ ?x3488 ?x3497) ?x3500) ?x3503) ?x3506) ?x3509) 0.0))))))))))))))
(assert
 (let ((?x3692 (* l_0_0_60 l_0_0_60)))
 (let ((?x3690 (* l_0_0_59 l_0_0_59)))
 (let ((?x3688 (* l_0_0_58 l_0_0_58)))
 (let ((?x3686 (* l_0_0_57 l_0_0_57)))
 (let ((?x3684 (* l_0_0_56 l_0_0_56)))
 (let ((?x3678 (* l_0_0_45 l_0_0_45)))
 (let ((?x3676 (* l_0_0_44 l_0_0_44)))
 (let ((?x3674 (* l_0_0_43 l_0_0_43)))
 (let ((?x3842 (+ (+ (+ (* l_0_0_41 l_0_0_41) (* l_0_0_42 l_0_0_42)) ?x3674) ?x3676)))
 (= (- (- (- (- (- (+ ?x3842 ?x3678) ?x3684) ?x3686) ?x3688) ?x3690) ?x3692) 0.0)))))))))))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_6 0.0))
(assert
 (>= l_0_0_10 0.0))
(assert
 (>= l_0_0_15 0.0))
(assert
 (>= l_0_0_16 0.0))
(assert
 (>= l_0_0_18 0.0))
(assert
 (>= l_0_0_21 0.0))
(assert
 (>= l_0_0_25 0.0))
(assert
 (>= l_0_0_30 0.0))
(assert
 (>= l_0_0_31 0.0))
(assert
 (>= l_0_0_33 0.0))
(assert
 (>= l_0_0_36 0.0))
(assert
 (>= l_0_0_40 0.0))
(assert
 (>= l_0_0_45 0.0))
(assert
 (>= l_0_0_46 0.0))
(assert
 (>= l_0_0_48 0.0))
(assert
 (>= l_0_0_51 0.0))
(assert
 (>= l_0_0_55 0.0))
(assert
 (>= l_0_0_60 0.0))
(assert
 (>= l_0_0_61 0.0))
(assert
 (>= l_0_0_63 0.0))
(assert
 (>= l_0_0_66 0.0))
(assert
 (>= l_0_0_70 0.0))
(assert
 (>= l_0_0_75 0.0))
(assert
 (>= l_0_0_76 0.0))
(assert
 (>= l_0_0_78 0.0))
(assert
 (>= l_0_0_81 0.0))
(assert
 (>= l_0_0_85 0.0))
(assert
 (>= l_0_0_90 0.0))
(assert
 (= (- l_0_1_2) 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (= (- (- (- l_0_2_2) l_0_2_3) l_0_2_4) 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (= (- (- (- (- (- l_0_3_2) l_0_3_3) l_0_3_4) l_0_3_5) l_0_3_6) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (= (- l_0_4_1) 0.0))
(assert
 (let ((?x3971 (- (- (- (- (- (- l_0_4_2) l_0_4_3) l_0_4_4) l_0_4_5) l_0_4_6) l_0_4_7)))
 (= (- ?x3971 l_0_4_8) 0.0)))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_2 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_4 0.0))
(assert
 (>= l_0_4_5 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_7 0.0))
(assert
 (>= l_0_4_8 0.0))
(assert
 (= (- 1.0 l_0_5_1) 0.0))
(assert
 (let ((?x4012 (- (- (- (- (- (- l_0_5_10) l_0_5_2) l_0_5_3) l_0_5_4) l_0_5_5) l_0_5_6)))
 (= (- (- (- ?x4012 l_0_5_7) l_0_5_8) l_0_5_9) 0.0)))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_2 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_4 0.0))
(assert
 (>= l_0_5_5 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_7 0.0))
(assert
 (>= l_0_5_8 0.0))
(assert
 (>= l_0_5_9 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (let ((?x4058 (- (- (- (+ _a_0_ (* 1.0 _a_2_)) l_0_6_10) l_0_6_11) l_0_6_12)))
 (let ((?x4063 (- (- (- (- (- ?x4058 l_0_6_2) l_0_6_3) l_0_6_4) l_0_6_5) l_0_6_6)))
 (= (- (- (- ?x4063 l_0_6_7) l_0_6_8) l_0_6_9) 0.0))))
(assert
 (= (- _a_1_ l_0_6_1) 0.0))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_2 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_4 0.0))
(assert
 (>= l_0_6_5 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_7 0.0))
(assert
 (>= l_0_6_8 0.0))
(assert
 (>= l_0_6_9 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_11 0.0))
(assert
 (>= l_0_6_12 0.0))
(assert
 (let ((?x4147 (* l_0_7_78 l_0_7_78)))
 (let ((?x4145 (* l_0_7_77 l_0_7_77)))
 (let ((?x4137 (* l_0_7_3 l_0_7_3)))
 (let ((?x4135 (* l_0_7_2 l_0_7_2)))
 (let ((?x4133 (* l_0_7_18 l_0_7_18)))
 (let ((?x4130 (* 2.0 l_0_7_18)))
 (let ((?x4131 (* ?x4130 l_0_7_27)))
 (let ((?x4128 (* l_0_7_17 l_0_7_17)))
 (let ((?x4125 (* 2.0 l_0_7_17)))
 (let ((?x4126 (* ?x4125 l_0_7_26)))
 (let ((?x4124 (- (* (* (- 2.0) l_0_7_101) l_0_7_92) (* (* 2.0 l_0_7_102) l_0_7_93))))
 (let ((?x4141 (+ (- (- (+ (+ (+ (+ ?x4124 ?x4126) ?x4128) ?x4131) ?x4133) ?x4135) ?x4137) (* (* 8.0 l_0_7_62) l_0_7_71))))
 (let ((?x4149 (+ (- (- (+ ?x4141 (* (* 8.0 l_0_7_63) l_0_7_72)) ?x4145) ?x4147) 1.0)))
 (= ?x4149 0.0)))))))))))))))
(assert
 (let ((?x4147 (* l_0_7_78 l_0_7_78)))
 (let ((?x4145 (* l_0_7_77 l_0_7_77)))
 (let ((?x4130 (* 2.0 l_0_7_18)))
 (let ((?x4185 (* ?x4130 l_0_7_20)))
 (let ((?x4125 (* 2.0 l_0_7_17)))
 (let ((?x4181 (* ?x4125 l_0_7_19)))
 (let ((?x4190 (+ (- (+ (- ?x4181 (* ?x4125 l_0_7_17)) ?x4185) (* ?x4130 l_0_7_18)) (* (* 8.0 l_0_7_62) l_0_7_64))))
 (let ((?x4197 (- (+ (+ (+ ?x4190 (* (* 8.0 l_0_7_63) l_0_7_65)) ?x4145) ?x4147) (* (* 2.0 l_0_7_92) l_0_7_94))))
 (= (- (- ?x4197 (* (* 2.0 l_0_7_93) l_0_7_95)) 1.0) 0.0))))))))))
(assert
 (let ((?x4252 (* l_0_7_63 l_0_7_63)))
 (let ((?x4250 (* l_0_7_62 l_0_7_62)))
 (let ((?x4133 (* l_0_7_18 l_0_7_18)))
 (let ((?x4246 (- (- (* (* 2.0 l_0_7_16) l_0_7_17) (* l_0_7_17 l_0_7_17)) ?x4133)))
 (let ((?x4256 (+ (- (- (+ ?x4246 (* (* 8.0 l_0_7_61) l_0_7_62)) ?x4250) ?x4252) (* (/ 1.0 4.0) (* l_0_7_77 l_0_7_77)))))
 (let ((?x4261 (- (+ ?x4256 (* (/ 1.0 4.0) (* l_0_7_78 l_0_7_78))) (* (* 2.0 l_0_7_91) l_0_7_92))))
 (= (- ?x4261 (/ 1.0 4.0)) 0.0))))))))
(assert
 (let ((?x4307 (* l_0_7_93 l_0_7_93)))
 (let ((?x4305 (* l_0_7_92 l_0_7_92)))
 (let ((?x4252 (* l_0_7_63 l_0_7_63)))
 (let ((?x4303 (* 4.0 ?x4252)))
 (let ((?x4250 (* l_0_7_62 l_0_7_62)))
 (let ((?x4301 (* 4.0 ?x4250)))
 (let ((?x4300 (+ (* 1.0 (* l_0_7_17 l_0_7_17)) (* 1.0 (* l_0_7_18 l_0_7_18)))))
 (= (- (- (+ (+ ?x4300 ?x4301) ?x4303) ?x4305) ?x4307) 0.0)))))))))
(assert
 (let ((?x4337 (* l_0_7_76 l_0_7_76)))
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x4328 (* ?x4327 l_0_7_47)))
 (let ((?x4324 (* 2.0 l_0_7_31)))
 (let ((?x4325 (* ?x4324 l_0_7_32)))
 (let ((?x4322 (* l_0_7_16 l_0_7_16)))
 (let ((?x4323 (+ (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_16) l_0_7_26)) ?x4322)))
 (let ((?x4336 (+ (- (- (+ ?x4323 ?x4325) ?x4328) (* (* 2.0 l_0_7_61) l_0_7_71)) (* (* (/ 1.0 2.0) l_0_7_76) l_0_7_86))))
 (= (- ?x4336 ?x4337) 0.0))))))))))
(assert
 (let ((?x4396 (* 2.0 l_0_7_76)))
 (let ((?x4397 (* ?x4396 l_0_7_77)))
 (let ((?x4386 (* l_0_7_48 l_0_7_48)))
 (let ((?x4384 (* l_0_7_47 l_0_7_47)))
 (let ((?x4382 (* l_0_7_33 l_0_7_33)))
 (let ((?x4380 (* l_0_7_32 l_0_7_32)))
 (let ((?x4130 (* 2.0 l_0_7_18)))
 (let ((?x4131 (* ?x4130 l_0_7_27)))
 (let ((?x4125 (* 2.0 l_0_7_17)))
 (let ((?x4126 (* ?x4125 l_0_7_26)))
 (let ((?x4243 (* 2.0 l_0_7_16)))
 (let ((?x4320 (* ?x4243 l_0_7_26)))
 (let ((?x4244 (* ?x4243 l_0_7_17)))
 (let ((?x4375 (- (* (* (- 2.0) l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_101) l_0_7_91))))
 (let ((?x4385 (- (+ (+ (- (- (+ (+ ?x4375 ?x4244) ?x4320) ?x4126) ?x4131) ?x4380) ?x4382) ?x4384)))
 (let ((?x4392 (- (+ (- ?x4385 ?x4386) (* (* 8.0 l_0_7_61) l_0_7_71)) (* (* 2.0 l_0_7_62) l_0_7_71))))
 (let ((?x4401 (+ (- (- ?x4392 (* (* 2.0 l_0_7_63) l_0_7_72)) ?x4397) (* (* (/ 1.0 2.0) l_0_7_77) l_0_7_86))))
 (= (+ ?x4401 (* (* (/ 1.0 2.0) l_0_7_78) l_0_7_87)) 0.0)))))))))))))))))))
(assert
 (let ((?x4396 (* 2.0 l_0_7_76)))
 (let ((?x4497 (* ?x4396 l_0_7_86)))
 (let ((?x4495 (* ?x4396 l_0_7_79)))
 (let ((?x4483 (* 2.0 l_0_7_48)))
 (let ((?x4484 (* ?x4483 l_0_7_50)))
 (let ((?x4480 (* 2.0 l_0_7_47)))
 (let ((?x4481 (* ?x4480 l_0_7_49)))
 (let ((?x4477 (* 2.0 l_0_7_33)))
 (let ((?x4478 (* ?x4477 l_0_7_35)))
 (let ((?x4474 (* 2.0 l_0_7_32)))
 (let ((?x4475 (* ?x4474 l_0_7_34)))
 (let ((?x4471 (* 2.0 l_0_7_21)))
 (let ((?x4472 (* ?x4471 l_0_7_28)))
 (let ((?x4468 (* 2.0 l_0_7_20)))
 (let ((?x4469 (* ?x4468 l_0_7_27)))
 (let ((?x4465 (* 2.0 l_0_7_19)))
 (let ((?x4466 (* ?x4465 l_0_7_26)))
 (let ((?x4243 (* 2.0 l_0_7_16)))
 (let ((?x4451 (* ?x4243 l_0_7_19)))
 (let ((?x4464 (- (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x4451) (* (* 4.0 l_0_7_16) l_0_7_26))))
 (let ((?x4485 (- (- (+ (+ (- (- (- ?x4464 ?x4466) ?x4469) ?x4472) ?x4475) ?x4478) ?x4481) ?x4484)))
 (let ((?x4491 (- (- ?x4485 (* (* 2.0 l_0_7_64) l_0_7_71)) (* (* 2.0 l_0_7_65) l_0_7_72))))
 (let ((?x4501 (+ (+ (- (- ?x4491 (* (* 2.0 l_0_7_66) l_0_7_73)) ?x4495) ?x4497) (* (* (/ 1.0 2.0) l_0_7_79) l_0_7_86))))
 (let ((?x4507 (+ (+ ?x4501 (* (* (/ 1.0 2.0) l_0_7_80) l_0_7_87)) (* (* (/ 1.0 2.0) l_0_7_81) l_0_7_88))))
 (= ?x4507 0.0))))))))))))))))))))))))))
(assert
 (let ((?x4396 (* 2.0 l_0_7_76)))
 (let ((?x4634 (* ?x4396 l_0_7_82)))
 (let ((?x4483 (* 2.0 l_0_7_48)))
 (let ((?x4620 (* ?x4483 l_0_7_57)))
 (let ((?x4618 (* ?x4483 l_0_7_53)))
 (let ((?x4480 (* 2.0 l_0_7_47)))
 (let ((?x4616 (* ?x4480 l_0_7_56)))
 (let ((?x4614 (* ?x4480 l_0_7_52)))
 (let ((?x4477 (* 2.0 l_0_7_33)))
 (let ((?x4612 (* ?x4477 l_0_7_42)))
 (let ((?x4610 (* ?x4477 l_0_7_38)))
 (let ((?x4474 (* 2.0 l_0_7_32)))
 (let ((?x4608 (* ?x4474 l_0_7_41)))
 (let ((?x4606 (* ?x4474 l_0_7_37)))
 (let ((?x4603 (* 2.0 l_0_7_25)))
 (let ((?x4604 (* ?x4603 l_0_7_29)))
 (let ((?x4600 (* 2.0 l_0_7_24)))
 (let ((?x4601 (* ?x4600 l_0_7_28)))
 (let ((?x4597 (* 2.0 l_0_7_23)))
 (let ((?x4598 (* ?x4597 l_0_7_27)))
 (let ((?x4585 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x4243 (* 2.0 l_0_7_16)))
 (let ((?x4580 (* ?x4243 l_0_7_22)))
 (let ((?x4602 (- (- (- (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) ?x4580) ?x4585) ?x4598) ?x4601)))
 (let ((?x4617 (+ (- (- (+ (- (+ (- ?x4602 ?x4604) ?x4606) ?x4608) ?x4610) ?x4612) ?x4614) ?x4616)))
 (let ((?x4627 (- (- (+ (- ?x4617 ?x4618) ?x4620) (* (* 2.0 l_0_7_67) l_0_7_71)) (* (* 2.0 l_0_7_68) l_0_7_72))))
 (let ((?x4633 (- (- ?x4627 (* (* 2.0 l_0_7_69) l_0_7_73)) (* (* 2.0 l_0_7_70) l_0_7_74))))
 (let ((?x4641 (+ (+ (- ?x4633 ?x4634) (* (* (/ 1.0 2.0) l_0_7_82) l_0_7_86)) (* (* (/ 1.0 2.0) l_0_7_83) l_0_7_87))))
 (let ((?x4647 (+ (+ ?x4641 (* (* (/ 1.0 2.0) l_0_7_84) l_0_7_88)) (* (* (/ 1.0 2.0) l_0_7_85) l_0_7_89))))
 (= ?x4647 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x4799 (* l_0_7_90 l_0_7_90)))
 (let ((?x4800 (* (/ 1.0 4.0) ?x4799)))
 (let ((?x4796 (* l_0_7_89 l_0_7_89)))
 (let ((?x4797 (* (/ 1.0 4.0) ?x4796)))
 (let ((?x4793 (* l_0_7_88 l_0_7_88)))
 (let ((?x4794 (* (/ 1.0 4.0) ?x4793)))
 (let ((?x4790 (* l_0_7_87 l_0_7_87)))
 (let ((?x4791 (* (/ 1.0 4.0) ?x4790)))
 (let ((?x4787 (* l_0_7_86 l_0_7_86)))
 (let ((?x4788 (* (/ 1.0 4.0) ?x4787)))
 (let ((?x4396 (* 2.0 l_0_7_76)))
 (let ((?x4497 (* ?x4396 l_0_7_86)))
 (let ((?x4784 (* l_0_7_75 l_0_7_75)))
 (let ((?x4782 (* l_0_7_74 l_0_7_74)))
 (let ((?x4780 (* l_0_7_73 l_0_7_73)))
 (let ((?x4778 (* l_0_7_72 l_0_7_72)))
 (let ((?x4776 (* l_0_7_71 l_0_7_71)))
 (let ((?x4483 (* 2.0 l_0_7_48)))
 (let ((?x4620 (* ?x4483 l_0_7_57)))
 (let ((?x4480 (* 2.0 l_0_7_47)))
 (let ((?x4616 (* ?x4480 l_0_7_56)))
 (let ((?x4477 (* 2.0 l_0_7_33)))
 (let ((?x4612 (* ?x4477 l_0_7_42)))
 (let ((?x4474 (* 2.0 l_0_7_32)))
 (let ((?x4608 (* ?x4474 l_0_7_41)))
 (let ((?x4770 (* l_0_7_30 l_0_7_30)))
 (let ((?x4768 (* l_0_7_29 l_0_7_29)))
 (let ((?x4766 (* l_0_7_28 l_0_7_28)))
 (let ((?x4752 (* l_0_7_27 l_0_7_27)))
 (let ((?x4749 (* l_0_7_26 l_0_7_26)))
 (let ((?x4243 (* 2.0 l_0_7_16)))
 (let ((?x4320 (* ?x4243 l_0_7_26)))
 (let ((?x4767 (- (- (- (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) ?x4320) ?x4749) ?x4752) ?x4766)))
 (let ((?x4777 (- (- (- (+ (+ (- (- ?x4767 ?x4768) ?x4770) ?x4608) ?x4612) ?x4616) ?x4620) ?x4776)))
 (let ((?x4792 (+ (+ (- (- (- (- (- ?x4777 ?x4778) ?x4780) ?x4782) ?x4784) ?x4497) ?x4788) ?x4791)))
 (= (+ (+ (+ ?x4792 ?x4794) ?x4797) ?x4800) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4886 (* 2.0 l_0_7_78)))
 (let ((?x4889 (* ?x4886 l_0_7_87)))
 (let ((?x4887 (* ?x4886 l_0_7_80)))
 (let ((?x4881 (* 2.0 l_0_7_77)))
 (let ((?x4884 (* ?x4881 l_0_7_86)))
 (let ((?x4882 (* ?x4881 l_0_7_79)))
 (let ((?x4471 (* 2.0 l_0_7_21)))
 (let ((?x4472 (* ?x4471 l_0_7_28)))
 (let ((?x4468 (* 2.0 l_0_7_20)))
 (let ((?x4469 (* ?x4468 l_0_7_27)))
 (let ((?x4465 (* 2.0 l_0_7_19)))
 (let ((?x4466 (* ?x4465 l_0_7_26)))
 (let ((?x4130 (* 2.0 l_0_7_18)))
 (let ((?x4185 (* ?x4130 l_0_7_20)))
 (let ((?x4125 (* 2.0 l_0_7_17)))
 (let ((?x4181 (* ?x4125 l_0_7_19)))
 (let ((?x4851 (- (* (* (- 2.0) l_0_7_101) l_0_7_94) (* (* 2.0 l_0_7_102) l_0_7_95))))
 (let ((?x4858 (- (+ (- ?x4851 (* (* 2.0 l_0_7_103) l_0_7_96)) ?x4181) (* (* 4.0 l_0_7_17) l_0_7_26))))
 (let ((?x4866 (- (+ (- (+ ?x4858 ?x4185) (* (* 4.0 l_0_7_18) l_0_7_27)) ?x4466) (* (* 2.0 l_0_7_2) l_0_7_4))))
 (let ((?x4874 (+ (- (+ (+ ?x4866 ?x4469) ?x4472) (* (* 2.0 l_0_7_3) l_0_7_5)) (* (* 8.0 l_0_7_64) l_0_7_71))))
 (let ((?x4880 (+ (+ ?x4874 (* (* 8.0 l_0_7_65) l_0_7_72)) (* (* 8.0 l_0_7_66) l_0_7_73))))
 (= (+ (- (+ (- ?x4880 ?x4882) ?x4884) ?x4887) ?x4889) 0.0)))))))))))))))))))))))
(assert
 (let ((?x4886 (* 2.0 l_0_7_78)))
 (let ((?x4992 (* ?x4886 l_0_7_83)))
 (let ((?x4881 (* 2.0 l_0_7_77)))
 (let ((?x4990 (* ?x4881 l_0_7_82)))
 (let ((?x4603 (* 2.0 l_0_7_25)))
 (let ((?x4604 (* ?x4603 l_0_7_29)))
 (let ((?x4600 (* 2.0 l_0_7_24)))
 (let ((?x4601 (* ?x4600 l_0_7_28)))
 (let ((?x4597 (* 2.0 l_0_7_23)))
 (let ((?x4598 (* ?x4597 l_0_7_27)))
 (let ((?x4585 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x4130 (* 2.0 l_0_7_18)))
 (let ((?x4968 (* ?x4130 l_0_7_23)))
 (let ((?x4125 (* 2.0 l_0_7_17)))
 (let ((?x4966 (* ?x4125 l_0_7_22)))
 (let ((?x4961 (- (* (* (- 2.0) l_0_7_100) l_0_7_104) (* (* 2.0 l_0_7_101) l_0_7_97))))
 (let ((?x4965 (- (- ?x4961 (* (* 2.0 l_0_7_102) l_0_7_98)) (* (* 2.0 l_0_7_103) l_0_7_99))))
 (let ((?x4972 (+ (- (+ (+ ?x4965 ?x4966) ?x4968) (* (* 2.0 l_0_7_2) l_0_7_7)) ?x4585)))
 (let ((?x4977 (- (+ (+ (+ ?x4972 ?x4598) ?x4601) ?x4604) (* (* 2.0 l_0_7_3) l_0_7_8))))
 (let ((?x4983 (+ (+ ?x4977 (* (* 8.0 l_0_7_67) l_0_7_71)) (* (* 8.0 l_0_7_68) l_0_7_72))))
 (let ((?x4989 (+ (+ ?x4983 (* (* 8.0 l_0_7_69) l_0_7_73)) (* (* 8.0 l_0_7_70) l_0_7_74))))
 (= (- (- ?x4989 ?x4990) ?x4992) 0.0)))))))))))))))))))))))
(assert
 (let ((?x4886 (* 2.0 l_0_7_78)))
 (let ((?x4889 (* ?x4886 l_0_7_87)))
 (let ((?x4881 (* 2.0 l_0_7_77)))
 (let ((?x4884 (* ?x4881 l_0_7_86)))
 (let ((?x4784 (* l_0_7_75 l_0_7_75)))
 (let ((?x5087 (* 4.0 ?x4784)))
 (let ((?x4782 (* l_0_7_74 l_0_7_74)))
 (let ((?x5085 (* 4.0 ?x4782)))
 (let ((?x4780 (* l_0_7_73 l_0_7_73)))
 (let ((?x5083 (* 4.0 ?x4780)))
 (let ((?x4778 (* l_0_7_72 l_0_7_72)))
 (let ((?x5081 (* 4.0 ?x4778)))
 (let ((?x4776 (* l_0_7_71 l_0_7_71)))
 (let ((?x5079 (* 4.0 ?x4776)))
 (let ((?x4130 (* 2.0 l_0_7_18)))
 (let ((?x4131 (* ?x4130 l_0_7_27)))
 (let ((?x4125 (* 2.0 l_0_7_17)))
 (let ((?x4126 (* ?x4125 l_0_7_26)))
 (let ((?x5059 (* l_0_7_105 l_0_7_105)))
 (let ((?x5057 (* l_0_7_104 l_0_7_104)))
 (let ((?x5055 (* l_0_7_103 l_0_7_103)))
 (let ((?x5056 (- (- (* (- l_0_7_101) l_0_7_101) (* l_0_7_102 l_0_7_102)) ?x5055)))
 (let ((?x5066 (- (- (- (- ?x5056 ?x5057) ?x5059) (* (* 2.0 l_0_7_11) l_0_7_2)) (* (* 2.0 l_0_7_12) l_0_7_3))))
 (let ((?x5072 (+ (+ (+ (+ ?x5066 ?x4126) ?x4131) (* 1.0 (* l_0_7_26 l_0_7_26))) (* 1.0 (* l_0_7_27 l_0_7_27)))))
 (let ((?x5076 (+ (+ ?x5072 (* 1.0 (* l_0_7_28 l_0_7_28))) (* 1.0 (* l_0_7_29 l_0_7_29)))))
 (let ((?x5084 (+ (+ (+ (+ ?x5076 (* 1.0 (* l_0_7_30 l_0_7_30))) ?x5079) ?x5081) ?x5083)))
 (= (- (- (+ (+ ?x5084 ?x5085) ?x5087) ?x4884) ?x4889) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x5165 (* l_0_7_81 l_0_7_81)))
 (let ((?x5162 (* 2.0 l_0_7_81)))
 (let ((?x5163 (* ?x5162 l_0_7_88)))
 (let ((?x5160 (* l_0_7_80 l_0_7_80)))
 (let ((?x5157 (* 2.0 l_0_7_80)))
 (let ((?x5158 (* ?x5157 l_0_7_87)))
 (let ((?x5155 (* l_0_7_79 l_0_7_79)))
 (let ((?x5152 (* 2.0 l_0_7_79)))
 (let ((?x5153 (* ?x5152 l_0_7_86)))
 (let ((?x5150 (* l_0_7_6 l_0_7_6)))
 (let ((?x5148 (* l_0_7_5 l_0_7_5)))
 (let ((?x4483 (* 2.0 l_0_7_48)))
 (let ((?x4620 (* ?x4483 l_0_7_57)))
 (let ((?x4480 (* 2.0 l_0_7_47)))
 (let ((?x4616 (* ?x4480 l_0_7_56)))
 (let ((?x5144 (* l_0_7_4 l_0_7_4)))
 (let ((?x4477 (* 2.0 l_0_7_33)))
 (let ((?x4612 (* ?x4477 l_0_7_42)))
 (let ((?x4474 (* 2.0 l_0_7_32)))
 (let ((?x4608 (* ?x4474 l_0_7_41)))
 (let ((?x5140 (* l_0_7_21 l_0_7_21)))
 (let ((?x5135 (* l_0_7_20 l_0_7_20)))
 (let ((?x5134 (- (+ (* (* (- 4.0) l_0_7_19) l_0_7_26) (* l_0_7_19 l_0_7_19)) (* (* 4.0 l_0_7_20) l_0_7_27))))
 (let ((?x5142 (+ (+ (- (+ ?x5134 ?x5135) (* (* 4.0 l_0_7_21) l_0_7_28)) ?x5140) ?x4608)))
 (let ((?x5154 (+ (- (- (- (- (- (+ ?x5142 ?x4612) ?x5144) ?x4616) ?x4620) ?x5148) ?x5150) ?x5153)))
 (= (- (+ (- (+ (- ?x5154 ?x5155) ?x5158) ?x5160) ?x5163) ?x5165) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x5261 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x5258 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x5255 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x5252 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x5162 (* 2.0 l_0_7_81)))
 (let ((?x5249 (* ?x5162 l_0_7_84)))
 (let ((?x5157 (* 2.0 l_0_7_80)))
 (let ((?x5247 (* ?x5157 l_0_7_83)))
 (let ((?x5152 (* 2.0 l_0_7_79)))
 (let ((?x5245 (* ?x5152 l_0_7_82)))
 (let ((?x4471 (* 2.0 l_0_7_21)))
 (let ((?x5222 (* ?x4471 l_0_7_24)))
 (let ((?x4468 (* 2.0 l_0_7_20)))
 (let ((?x5220 (* ?x4468 l_0_7_23)))
 (let ((?x4465 (* 2.0 l_0_7_19)))
 (let ((?x5219 (* ?x4465 l_0_7_22)))
 (let ((?x5229 (- (- (+ (+ ?x5219 ?x5220) ?x5222) (* (* 4.0 l_0_7_22) l_0_7_26)) (* (* 4.0 l_0_7_23) l_0_7_27))))
 (let ((?x5235 (- (- ?x5229 (* (* 4.0 l_0_7_24) l_0_7_28)) (* (* 4.0 l_0_7_25) l_0_7_29))))
 (let ((?x5241 (- (- ?x5235 (* (* 2.0 l_0_7_4) l_0_7_7)) (* (* 2.0 l_0_7_5) l_0_7_8))))
 (let ((?x5250 (- (- (- (- ?x5241 (* (* 2.0 l_0_7_6) l_0_7_9)) ?x5245) ?x5247) ?x5249)))
 (= (+ (+ (+ (+ ?x5250 ?x5252) ?x5255) ?x5258) ?x5261) 0.0))))))))))))))))))))))
(assert
 (let ((?x4799 (* l_0_7_90 l_0_7_90)))
 (let ((?x4796 (* l_0_7_89 l_0_7_89)))
 (let ((?x4793 (* l_0_7_88 l_0_7_88)))
 (let ((?x4790 (* l_0_7_87 l_0_7_87)))
 (let ((?x4787 (* l_0_7_86 l_0_7_86)))
 (let ((?x5162 (* 2.0 l_0_7_81)))
 (let ((?x5163 (* ?x5162 l_0_7_88)))
 (let ((?x5157 (* 2.0 l_0_7_80)))
 (let ((?x5158 (* ?x5157 l_0_7_87)))
 (let ((?x5152 (* 2.0 l_0_7_79)))
 (let ((?x5153 (* ?x5152 l_0_7_86)))
 (let ((?x4471 (* 2.0 l_0_7_21)))
 (let ((?x4472 (* ?x4471 l_0_7_28)))
 (let ((?x4468 (* 2.0 l_0_7_20)))
 (let ((?x4469 (* ?x4468 l_0_7_27)))
 (let ((?x4465 (* 2.0 l_0_7_19)))
 (let ((?x4466 (* ?x4465 l_0_7_26)))
 (let ((?x5330 (- (* (* (- 2.0) l_0_7_11) l_0_7_4) (* (* 2.0 l_0_7_12) l_0_7_5))))
 (let ((?x5345 (+ (+ (+ (- ?x5330 (* (* 2.0 l_0_7_13) l_0_7_6)) ?x4466) ?x4469) ?x4472)))
 (let ((?x5351 (- (- ?x5345 (* (* 2.0 l_0_7_26) l_0_7_26)) (* (* 2.0 l_0_7_27) l_0_7_27))))
 (let ((?x5357 (- (- ?x5351 (* (* 2.0 l_0_7_28) l_0_7_28)) (* (* 2.0 l_0_7_29) l_0_7_29))))
 (let ((?x5363 (- (- (- (- ?x5357 (* (* 2.0 l_0_7_30) l_0_7_30)) ?x5153) ?x5158) ?x5163)))
 (= (+ (+ (+ (+ (+ ?x5363 ?x4787) ?x4790) ?x4793) ?x4796) ?x4799) 0.0))))))))))))))))))))))))
(assert
 (let ((?x5443 (* l_0_7_9 l_0_7_9)))
 (let ((?x5441 (* l_0_7_85 l_0_7_85)))
 (let ((?x5439 (* l_0_7_84 l_0_7_84)))
 (let ((?x5437 (* l_0_7_83 l_0_7_83)))
 (let ((?x5435 (* l_0_7_82 l_0_7_82)))
 (let ((?x5433 (* l_0_7_8 l_0_7_8)))
 (let ((?x5431 (* l_0_7_7 l_0_7_7)))
 (let ((?x5429 (* l_0_7_25 l_0_7_25)))
 (let ((?x5427 (* l_0_7_24 l_0_7_24)))
 (let ((?x5425 (* l_0_7_23 l_0_7_23)))
 (let ((?x5428 (+ (+ (+ (* (- l_0_7_10) l_0_7_10) (* l_0_7_22 l_0_7_22)) ?x5425) ?x5427)))
 (let ((?x5442 (- (- (- (- (- (- (+ ?x5428 ?x5429) ?x5431) ?x5433) ?x5435) ?x5437) ?x5439) ?x5441)))
 (= (- ?x5442 ?x5443) 0.0))))))))))))))
(assert
 (let ((?x5261 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x5258 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x5255 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x5252 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x4603 (* 2.0 l_0_7_25)))
 (let ((?x4604 (* ?x4603 l_0_7_29)))
 (let ((?x4600 (* 2.0 l_0_7_24)))
 (let ((?x4601 (* ?x4600 l_0_7_28)))
 (let ((?x4597 (* 2.0 l_0_7_23)))
 (let ((?x4598 (* ?x4597 l_0_7_27)))
 (let ((?x4585 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x5475 (- (* (* (- 2.0) l_0_7_10) l_0_7_14) (* (* 2.0 l_0_7_11) l_0_7_7))))
 (let ((?x5479 (- (- ?x5475 (* (* 2.0 l_0_7_12) l_0_7_8)) (* (* 2.0 l_0_7_13) l_0_7_9))))
 (let ((?x5486 (- (- (- (+ (+ (+ (+ ?x5479 ?x4585) ?x4598) ?x4601) ?x4604) ?x5252) ?x5255) ?x5258)))
 (= (- ?x5486 ?x5261) 0.0))))))))))))))))
(assert
 (let ((?x4799 (* l_0_7_90 l_0_7_90)))
 (let ((?x4796 (* l_0_7_89 l_0_7_89)))
 (let ((?x4793 (* l_0_7_88 l_0_7_88)))
 (let ((?x4790 (* l_0_7_87 l_0_7_87)))
 (let ((?x4787 (* l_0_7_86 l_0_7_86)))
 (let ((?x4770 (* l_0_7_30 l_0_7_30)))
 (let ((?x4768 (* l_0_7_29 l_0_7_29)))
 (let ((?x4766 (* l_0_7_28 l_0_7_28)))
 (let ((?x4752 (* l_0_7_27 l_0_7_27)))
 (let ((?x4749 (* l_0_7_26 l_0_7_26)))
 (let ((?x5535 (* l_0_7_15 l_0_7_15)))
 (let ((?x5533 (* l_0_7_14 l_0_7_14)))
 (let ((?x5531 (* l_0_7_13 l_0_7_13)))
 (let ((?x5534 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x5531) ?x5533)))
 (let ((?x5542 (- (+ (+ (+ (+ (+ (- ?x5534 ?x5535) ?x4749) ?x4752) ?x4766) ?x4768) ?x4770) ?x4787)))
 (= (- (- (- (- ?x5542 ?x4790) ?x4793) ?x4796) ?x4799) 0.0)))))))))))))))))
(assert
 (let ((?x4337 (* l_0_7_76 l_0_7_76)))
 (let ((?x5583 (- (* (* (- 2.0) l_0_7_16) l_0_7_19) (* (* 2.0 l_0_7_16) l_0_7_16))))
 (let ((?x5587 (+ (- ?x5583 (* (* 2.0 l_0_7_61) l_0_7_64)) (* (* (/ 1.0 2.0) l_0_7_76) l_0_7_79))))
 (= (+ ?x5587 ?x4337) 0.0)))))
(assert
 (let ((?x4396 (* 2.0 l_0_7_76)))
 (let ((?x4397 (* ?x4396 l_0_7_77)))
 (let ((?x4130 (* 2.0 l_0_7_18)))
 (let ((?x4185 (* ?x4130 l_0_7_20)))
 (let ((?x4125 (* 2.0 l_0_7_17)))
 (let ((?x4181 (* ?x4125 l_0_7_19)))
 (let ((?x4243 (* 2.0 l_0_7_16)))
 (let ((?x4451 (* ?x4243 l_0_7_19)))
 (let ((?x5610 (+ (- (- (+ (* (* (- 4.0) l_0_7_16) l_0_7_17) ?x4451) ?x4181) ?x4185) (* (* 8.0 l_0_7_61) l_0_7_64))))
 (let ((?x5614 (- (- ?x5610 (* (* 2.0 l_0_7_62) l_0_7_64)) (* (* 2.0 l_0_7_63) l_0_7_65))))
 (let ((?x5619 (+ (+ (+ ?x5614 ?x4397) (* (* (/ 1.0 2.0) l_0_7_77) l_0_7_79)) (* (* (/ 1.0 2.0) l_0_7_78) l_0_7_80))))
 (= (- ?x5619 (* (* 2.0 l_0_7_91) l_0_7_94)) 0.0)))))))))))))
(assert
 (let ((?x5165 (* l_0_7_81 l_0_7_81)))
 (let ((?x5675 (* (/ 1.0 4.0) ?x5165)))
 (let ((?x5160 (* l_0_7_80 l_0_7_80)))
 (let ((?x5673 (* (/ 1.0 4.0) ?x5160)))
 (let ((?x5155 (* l_0_7_79 l_0_7_79)))
 (let ((?x5671 (* (/ 1.0 4.0) ?x5155)))
 (let ((?x4396 (* 2.0 l_0_7_76)))
 (let ((?x4495 (* ?x4396 l_0_7_79)))
 (let ((?x5668 (* l_0_7_66 l_0_7_66)))
 (let ((?x5666 (* l_0_7_65 l_0_7_65)))
 (let ((?x5664 (* l_0_7_64 l_0_7_64)))
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x4328 (* ?x4327 l_0_7_47)))
 (let ((?x4324 (* 2.0 l_0_7_31)))
 (let ((?x4325 (* ?x4324 l_0_7_32)))
 (let ((?x5140 (* l_0_7_21 l_0_7_21)))
 (let ((?x5135 (* l_0_7_20 l_0_7_20)))
 (let ((?x5660 (- (- (* (* (- 4.0) l_0_7_16) l_0_7_19) (* l_0_7_19 l_0_7_19)) ?x5135)))
 (let ((?x5670 (+ (- (- (- (- (+ (- ?x5660 ?x5140) ?x4325) ?x4328) ?x5664) ?x5666) ?x5668) ?x4495)))
 (= (+ (+ (+ ?x5670 ?x5671) ?x5673) ?x5675) 0.0)))))))))))))))))))))
(assert
 (let ((?x4396 (* 2.0 l_0_7_76)))
 (let ((?x4634 (* ?x4396 l_0_7_82)))
 (let ((?x4483 (* 2.0 l_0_7_48)))
 (let ((?x4484 (* ?x4483 l_0_7_50)))
 (let ((?x4480 (* 2.0 l_0_7_47)))
 (let ((?x4481 (* ?x4480 l_0_7_49)))
 (let ((?x4477 (* 2.0 l_0_7_33)))
 (let ((?x4478 (* ?x4477 l_0_7_35)))
 (let ((?x4474 (* 2.0 l_0_7_32)))
 (let ((?x4475 (* ?x4474 l_0_7_34)))
 (let ((?x4471 (* 2.0 l_0_7_21)))
 (let ((?x5222 (* ?x4471 l_0_7_24)))
 (let ((?x4468 (* 2.0 l_0_7_20)))
 (let ((?x5220 (* ?x4468 l_0_7_23)))
 (let ((?x4465 (* 2.0 l_0_7_19)))
 (let ((?x5219 (* ?x4465 l_0_7_22)))
 (let ((?x5702 (- (- (- (- (* (* (- 4.0) l_0_7_16) l_0_7_22) ?x5219) ?x5220) ?x5222) ?x4475)))
 (let ((?x5707 (- (+ (+ (- ?x5702 ?x4478) ?x4481) ?x4484) (* (* 2.0 l_0_7_64) l_0_7_67))))
 (let ((?x5711 (- (- ?x5707 (* (* 2.0 l_0_7_65) l_0_7_68)) (* (* 2.0 l_0_7_66) l_0_7_69))))
 (let ((?x5716 (+ (+ (+ ?x5711 ?x4634) (* (* (/ 1.0 2.0) l_0_7_79) l_0_7_82)) (* (* (/ 1.0 2.0) l_0_7_80) l_0_7_83))))
 (= (+ ?x5716 (* (* (/ 1.0 2.0) l_0_7_81) l_0_7_84)) 0.0))))))))))))))))))))))
(assert
 (let ((?x5787 (* l_0_7_96 l_0_7_96)))
 (let ((?x5785 (* l_0_7_95 l_0_7_95)))
 (let ((?x5783 (* l_0_7_94 l_0_7_94)))
 (let ((?x4886 (* 2.0 l_0_7_78)))
 (let ((?x4887 (* ?x4886 l_0_7_80)))
 (let ((?x4881 (* 2.0 l_0_7_77)))
 (let ((?x4882 (* ?x4881 l_0_7_79)))
 (let ((?x4386 (* l_0_7_48 l_0_7_48)))
 (let ((?x4384 (* l_0_7_47 l_0_7_47)))
 (let ((?x4382 (* l_0_7_33 l_0_7_33)))
 (let ((?x4380 (* l_0_7_32 l_0_7_32)))
 (let ((?x5758 (- (* (* (- 4.0) l_0_7_17) l_0_7_19) (* (* 4.0 l_0_7_18) l_0_7_20))))
 (let ((?x5768 (+ (+ ?x5758 (* 1.0 (* l_0_7_19 l_0_7_19))) (* 1.0 (* l_0_7_20 l_0_7_20)))))
 (let ((?x5773 (- (+ (+ (+ ?x5768 (* 1.0 (* l_0_7_21 l_0_7_21))) ?x4380) ?x4382) ?x4384)))
 (let ((?x5778 (+ (+ (- ?x5773 ?x4386) (* 4.0 (* l_0_7_64 l_0_7_64))) (* 4.0 (* l_0_7_65 l_0_7_65)))))
 (let ((?x5784 (- (+ (+ (+ ?x5778 (* 4.0 (* l_0_7_66 l_0_7_66))) ?x4882) ?x4887) ?x5783)))
 (= (- (- ?x5784 ?x5785) ?x5787) 0.0))))))))))))))))))
(assert
 (let ((?x4886 (* 2.0 l_0_7_78)))
 (let ((?x4992 (* ?x4886 l_0_7_83)))
 (let ((?x4881 (* 2.0 l_0_7_77)))
 (let ((?x4990 (* ?x4881 l_0_7_82)))
 (let ((?x4471 (* 2.0 l_0_7_21)))
 (let ((?x5222 (* ?x4471 l_0_7_24)))
 (let ((?x4468 (* 2.0 l_0_7_20)))
 (let ((?x5220 (* ?x4468 l_0_7_23)))
 (let ((?x4465 (* 2.0 l_0_7_19)))
 (let ((?x5219 (* ?x4465 l_0_7_22)))
 (let ((?x5819 (- (* (* (- 4.0) l_0_7_17) l_0_7_22) (* (* 4.0 l_0_7_18) l_0_7_23))))
 (let ((?x5824 (+ (+ (+ (+ ?x5819 ?x5219) ?x5220) ?x5222) (* (* 8.0 l_0_7_64) l_0_7_67))))
 (let ((?x5828 (+ (+ ?x5824 (* (* 8.0 l_0_7_65) l_0_7_68)) (* (* 8.0 l_0_7_66) l_0_7_69))))
 (let ((?x5836 (- (- (+ (+ ?x5828 ?x4990) ?x4992) (* (* 2.0 l_0_7_94) l_0_7_97)) (* (* 2.0 l_0_7_95) l_0_7_98))))
 (= (- ?x5836 (* (* 2.0 l_0_7_96) l_0_7_99)) 0.0))))))))))))))))
(assert
 (let ((?x5165 (* l_0_7_81 l_0_7_81)))
 (let ((?x5160 (* l_0_7_80 l_0_7_80)))
 (let ((?x5155 (* l_0_7_79 l_0_7_79)))
 (let ((?x4483 (* 2.0 l_0_7_48)))
 (let ((?x4484 (* ?x4483 l_0_7_50)))
 (let ((?x4480 (* 2.0 l_0_7_47)))
 (let ((?x4481 (* ?x4480 l_0_7_49)))
 (let ((?x4477 (* 2.0 l_0_7_33)))
 (let ((?x4478 (* ?x4477 l_0_7_35)))
 (let ((?x4474 (* 2.0 l_0_7_32)))
 (let ((?x4475 (* ?x4474 l_0_7_34)))
 (let ((?x5878 (- (* (* (- 2.0) l_0_7_19) l_0_7_19) (* (* 2.0 l_0_7_20) l_0_7_20))))
 (let ((?x5883 (- (+ (+ (- ?x5878 (* (* 2.0 l_0_7_21) l_0_7_21)) ?x4475) ?x4478) ?x4481)))
 (= (+ (+ (+ (- ?x5883 ?x4484) ?x5155) ?x5160) ?x5165) 0.0)))))))))))))))
(assert
 (let ((?x5162 (* 2.0 l_0_7_81)))
 (let ((?x5249 (* ?x5162 l_0_7_84)))
 (let ((?x5157 (* 2.0 l_0_7_80)))
 (let ((?x5247 (* ?x5157 l_0_7_83)))
 (let ((?x5152 (* 2.0 l_0_7_79)))
 (let ((?x5245 (* ?x5152 l_0_7_82)))
 (let ((?x4483 (* 2.0 l_0_7_48)))
 (let ((?x4618 (* ?x4483 l_0_7_53)))
 (let ((?x4480 (* 2.0 l_0_7_47)))
 (let ((?x4614 (* ?x4480 l_0_7_52)))
 (let ((?x4477 (* 2.0 l_0_7_33)))
 (let ((?x4610 (* ?x4477 l_0_7_38)))
 (let ((?x4474 (* 2.0 l_0_7_32)))
 (let ((?x4606 (* ?x4474 l_0_7_37)))
 (let ((?x5909 (- (* (* (- 4.0) l_0_7_19) l_0_7_22) (* (* 4.0 l_0_7_20) l_0_7_23))))
 (let ((?x5914 (- (+ (+ (- ?x5909 (* (* 4.0 l_0_7_21) l_0_7_24)) ?x4606) ?x4610) ?x4614)))
 (= (+ (+ (+ (- ?x5914 ?x4618) ?x5245) ?x5247) ?x5249) 0.0))))))))))))))))))
(assert
 (let ((?x5441 (* l_0_7_85 l_0_7_85)))
 (let ((?x5439 (* l_0_7_84 l_0_7_84)))
 (let ((?x5437 (* l_0_7_83 l_0_7_83)))
 (let ((?x5435 (* l_0_7_82 l_0_7_82)))
 (let ((?x5941 (- (* (* (- 2.0) l_0_7_22) l_0_7_22) (* (* 2.0 l_0_7_23) l_0_7_23))))
 (let ((?x5945 (- (- ?x5941 (* (* 2.0 l_0_7_24) l_0_7_24)) (* (* 2.0 l_0_7_25) l_0_7_25))))
 (= (+ (+ (+ (+ ?x5945 ?x5435) ?x5437) ?x5439) ?x5441) 0.0))))))))
(assert
 (let ((?x5975 (+ (- (* (- l_0_7_16) l_0_7_16) (* l_0_7_61 l_0_7_61)) (* (/ 1.0 4.0) (* l_0_7_76 l_0_7_76)))))
 (= ?x5975 0.0)))
(assert
 (let ((?x5993 (* l_0_7_91 l_0_7_91)))
 (let ((?x5986 (+ (* (* (- 2.0) l_0_7_16) l_0_7_17) (* 1.0 (* l_0_7_16 l_0_7_16)))))
 (let ((?x5990 (+ (- ?x5986 (* (* 2.0 l_0_7_61) l_0_7_62)) (* 4.0 (* l_0_7_61 l_0_7_61)))))
 (= (- (+ ?x5990 (* (* (/ 1.0 2.0) l_0_7_76) l_0_7_77)) ?x5993) 0.0)))))
(assert
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x4328 (* ?x4327 l_0_7_47)))
 (let ((?x4324 (* 2.0 l_0_7_31)))
 (let ((?x4325 (* ?x4324 l_0_7_32)))
 (let ((?x6015 (- (+ (- (* (* (- 2.0) l_0_7_16) l_0_7_22) ?x4325) ?x4328) (* (* 2.0 l_0_7_61) l_0_7_67))))
 (= (+ ?x6015 (* (* (/ 1.0 2.0) l_0_7_76) l_0_7_82)) 0.0)))))))
(assert
 (let ((?x4386 (* l_0_7_48 l_0_7_48)))
 (let ((?x4384 (* l_0_7_47 l_0_7_47)))
 (let ((?x4382 (* l_0_7_33 l_0_7_33)))
 (let ((?x4380 (* l_0_7_32 l_0_7_32)))
 (let ((?x4130 (* 2.0 l_0_7_18)))
 (let ((?x4968 (* ?x4130 l_0_7_23)))
 (let ((?x4125 (* 2.0 l_0_7_17)))
 (let ((?x4966 (* ?x4125 l_0_7_22)))
 (let ((?x4243 (* 2.0 l_0_7_16)))
 (let ((?x4580 (* ?x4243 l_0_7_22)))
 (let ((?x6040 (+ (+ (+ (- (- (- (- ?x4580 ?x4966) ?x4968) ?x4380) ?x4382) ?x4384) ?x4386) (* (* 8.0 l_0_7_61) l_0_7_67))))
 (let ((?x6044 (- (- ?x6040 (* (* 2.0 l_0_7_62) l_0_7_67)) (* (* 2.0 l_0_7_63) l_0_7_68))))
 (let ((?x6048 (+ (+ ?x6044 (* (* (/ 1.0 2.0) l_0_7_77) l_0_7_82)) (* (* (/ 1.0 2.0) l_0_7_78) l_0_7_83))))
 (= (- ?x6048 (* (* 2.0 l_0_7_91) l_0_7_97)) 0.0)))))))))))))))
(assert
 (let ((?x6107 (* l_0_7_70 l_0_7_70)))
 (let ((?x6105 (* l_0_7_69 l_0_7_69)))
 (let ((?x6103 (* l_0_7_68 l_0_7_68)))
 (let ((?x6101 (* l_0_7_67 l_0_7_67)))
 (let ((?x4483 (* 2.0 l_0_7_48)))
 (let ((?x4618 (* ?x4483 l_0_7_53)))
 (let ((?x4480 (* 2.0 l_0_7_47)))
 (let ((?x4614 (* ?x4480 l_0_7_52)))
 (let ((?x4477 (* 2.0 l_0_7_33)))
 (let ((?x4610 (* ?x4477 l_0_7_38)))
 (let ((?x4474 (* 2.0 l_0_7_32)))
 (let ((?x4606 (* ?x4474 l_0_7_37)))
 (let ((?x5429 (* l_0_7_25 l_0_7_25)))
 (let ((?x5427 (* l_0_7_24 l_0_7_24)))
 (let ((?x6096 (- (- (- (* (- l_0_7_22) l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x5427) ?x5429)))
 (let ((?x6106 (- (- (- (+ (+ (- (- ?x6096 ?x4606) ?x4610) ?x4614) ?x4618) ?x6101) ?x6103) ?x6105)))
 (let ((?x6112 (+ (+ (- ?x6106 ?x6107) (* (/ 1.0 4.0) (* l_0_7_82 l_0_7_82))) (* (/ 1.0 4.0) (* l_0_7_83 l_0_7_83)))))
 (let ((?x6116 (+ (+ ?x6112 (* (/ 1.0 4.0) (* l_0_7_84 l_0_7_84))) (* (/ 1.0 4.0) (* l_0_7_85 l_0_7_85)))))
 (= ?x6116 0.0))))))))))))))))))))
(assert
 (let ((?x4130 (* 2.0 l_0_7_18)))
 (let ((?x4968 (* ?x4130 l_0_7_23)))
 (let ((?x4125 (* 2.0 l_0_7_17)))
 (let ((?x4966 (* ?x4125 l_0_7_22)))
 (let ((?x6157 (+ (+ (+ ?x4966 ?x4968) (* (* 8.0 l_0_7_62) l_0_7_67)) (* (* 8.0 l_0_7_63) l_0_7_68))))
 (let ((?x6161 (- (- ?x6157 (* (* 2.0 l_0_7_92) l_0_7_97)) (* (* 2.0 l_0_7_93) l_0_7_98))))
 (= ?x6161 0.0))))))))
(assert
 (let ((?x6201 (* l_0_7_99 l_0_7_99)))
 (let ((?x6199 (* l_0_7_98 l_0_7_98)))
 (let ((?x6197 (* l_0_7_97 l_0_7_97)))
 (let ((?x6107 (* l_0_7_70 l_0_7_70)))
 (let ((?x6195 (* 4.0 ?x6107)))
 (let ((?x6105 (* l_0_7_69 l_0_7_69)))
 (let ((?x6193 (* 4.0 ?x6105)))
 (let ((?x6103 (* l_0_7_68 l_0_7_68)))
 (let ((?x6191 (* 4.0 ?x6103)))
 (let ((?x6101 (* l_0_7_67 l_0_7_67)))
 (let ((?x6189 (* 4.0 ?x6101)))
 (let ((?x6182 (+ (* (- l_0_7_100) l_0_7_100) (* 1.0 (* l_0_7_22 l_0_7_22)))))
 (let ((?x6186 (+ (+ ?x6182 (* 1.0 (* l_0_7_23 l_0_7_23))) (* 1.0 (* l_0_7_24 l_0_7_24)))))
 (let ((?x6194 (+ (+ (+ (+ ?x6186 (* 1.0 (* l_0_7_25 l_0_7_25))) ?x6189) ?x6191) ?x6193)))
 (= (- (- (- (+ ?x6194 ?x6195) ?x6197) ?x6199) ?x6201) 0.0))))))))))))))))
(assert
 (= (+ (* (- l_0_7_31) l_0_7_31) (* l_0_7_46 l_0_7_46)) 0.0))
(assert
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x6230 (* ?x4327 l_0_7_49)))
 (= (+ (* (* (- 2.0) l_0_7_31) l_0_7_34) ?x6230) 0.0))))
(assert
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x6236 (* ?x4327 l_0_7_52)))
 (= (+ (* (* (- 2.0) l_0_7_31) l_0_7_37) ?x6236) 0.0))))
(assert
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x6253 (* ?x4327 l_0_7_56)))
 (let ((?x6236 (* ?x4327 l_0_7_52)))
 (let ((?x4324 (* 2.0 l_0_7_31)))
 (let ((?x6246 (* ?x4324 l_0_7_41)))
 (let ((?x6244 (* ?x4324 l_0_7_37)))
 (= (+ (- (- ?x6244 ?x6246) ?x6236) ?x6253) 0.0))))))))
(assert
 (let ((?x6281 (* l_0_7_51 l_0_7_51)))
 (let ((?x6279 (* l_0_7_50 l_0_7_50)))
 (let ((?x6277 (* l_0_7_49 l_0_7_49)))
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x6236 (* ?x4327 l_0_7_52)))
 (let ((?x6274 (* l_0_7_36 l_0_7_36)))
 (let ((?x6272 (* l_0_7_35 l_0_7_35)))
 (let ((?x6273 (- (- (* (* 2.0 l_0_7_31) l_0_7_37) (* l_0_7_34 l_0_7_34)) ?x6272)))
 (= (+ (+ (+ (- (- ?x6273 ?x6274) ?x6236) ?x6277) ?x6279) ?x6281) 0.0))))))))))
(assert
 (let ((?x6310 (* 2.0 l_0_7_51)))
 (let ((?x6311 (* ?x6310 l_0_7_54)))
 (let ((?x6307 (* 2.0 l_0_7_50)))
 (let ((?x6308 (* ?x6307 l_0_7_53)))
 (let ((?x6304 (* 2.0 l_0_7_49)))
 (let ((?x6305 (* ?x6304 l_0_7_52)))
 (let ((?x6301 (* 2.0 l_0_7_36)))
 (let ((?x6302 (* ?x6301 l_0_7_39)))
 (let ((?x6298 (* 2.0 l_0_7_35)))
 (let ((?x6299 (* ?x6298 l_0_7_38)))
 (let ((?x6309 (+ (+ (- (- (* (* (- 2.0) l_0_7_34) l_0_7_37) ?x6299) ?x6302) ?x6305) ?x6308)))
 (= (+ ?x6309 ?x6311) 0.0)))))))))))))
(assert
 (let ((?x6310 (* 2.0 l_0_7_51)))
 (let ((?x6354 (* ?x6310 l_0_7_58)))
 (let ((?x6311 (* ?x6310 l_0_7_54)))
 (let ((?x6307 (* 2.0 l_0_7_50)))
 (let ((?x6351 (* ?x6307 l_0_7_57)))
 (let ((?x6308 (* ?x6307 l_0_7_53)))
 (let ((?x6304 (* 2.0 l_0_7_49)))
 (let ((?x6348 (* ?x6304 l_0_7_56)))
 (let ((?x6305 (* ?x6304 l_0_7_52)))
 (let ((?x6301 (* 2.0 l_0_7_36)))
 (let ((?x6345 (* ?x6301 l_0_7_43)))
 (let ((?x6302 (* ?x6301 l_0_7_39)))
 (let ((?x6298 (* 2.0 l_0_7_35)))
 (let ((?x6342 (* ?x6298 l_0_7_42)))
 (let ((?x6299 (* ?x6298 l_0_7_38)))
 (let ((?x6329 (* 2.0 l_0_7_34)))
 (let ((?x6333 (* ?x6329 l_0_7_41)))
 (let ((?x6331 (* ?x6329 l_0_7_37)))
 (let ((?x6349 (+ (- (- (+ (- (+ (- ?x6331 ?x6333) ?x6299) ?x6342) ?x6302) ?x6345) ?x6305) ?x6348)))
 (= (+ (- (+ (- ?x6349 ?x6308) ?x6351) ?x6311) ?x6354) 0.0)))))))))))))))))))))
(assert
 (let ((?x6413 (* l_0_7_55 l_0_7_55)))
 (let ((?x6411 (* l_0_7_54 l_0_7_54)))
 (let ((?x6409 (* l_0_7_53 l_0_7_53)))
 (let ((?x6407 (* l_0_7_52 l_0_7_52)))
 (let ((?x6405 (* l_0_7_40 l_0_7_40)))
 (let ((?x6403 (* l_0_7_39 l_0_7_39)))
 (let ((?x6406 (- (- (- (* (- l_0_7_37) l_0_7_37) (* l_0_7_38 l_0_7_38)) ?x6403) ?x6405)))
 (= (+ (+ (+ (+ ?x6406 ?x6407) ?x6409) ?x6411) ?x6413) 0.0)))))))))
(assert
 (let ((?x6413 (* l_0_7_55 l_0_7_55)))
 (let ((?x6462 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x6411 (* l_0_7_54 l_0_7_54)))
 (let ((?x6458 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x6409 (* l_0_7_53 l_0_7_53)))
 (let ((?x6454 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x6407 (* l_0_7_52 l_0_7_52)))
 (let ((?x6450 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x6405 (* l_0_7_40 l_0_7_40)))
 (let ((?x6446 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x6403 (* l_0_7_39 l_0_7_39)))
 (let ((?x6442 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x6401 (* l_0_7_38 l_0_7_38)))
 (let ((?x6438 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x6439 (- (+ (* (* (- 2.0) l_0_7_37) l_0_7_41) (* l_0_7_37 l_0_7_37)) ?x6438)))
 (let ((?x6452 (- (+ (+ (- (+ (- (+ ?x6439 ?x6401) ?x6442) ?x6403) ?x6446) ?x6405) ?x6450) ?x6407)))
 (= (- (+ (- (+ (- (+ ?x6452 ?x6454) ?x6409) ?x6458) ?x6411) ?x6462) ?x6413) 0.0))))))))))))))))))
(assert
 (let ((?x6537 (* l_0_7_60 l_0_7_60)))
 (let ((?x6535 (* l_0_7_59 l_0_7_59)))
 (let ((?x6533 (* l_0_7_58 l_0_7_58)))
 (let ((?x6531 (* l_0_7_57 l_0_7_57)))
 (let ((?x6529 (* l_0_7_56 l_0_7_56)))
 (let ((?x6462 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x6458 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x6454 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x6450 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x6523 (* l_0_7_45 l_0_7_45)))
 (let ((?x6521 (* l_0_7_44 l_0_7_44)))
 (let ((?x6519 (* l_0_7_43 l_0_7_43)))
 (let ((?x6517 (* l_0_7_42 l_0_7_42)))
 (let ((?x6515 (* l_0_7_41 l_0_7_41)))
 (let ((?x6446 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x6442 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x6438 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x6514 (+ (+ (+ (* (* 2.0 l_0_7_37) l_0_7_41) ?x6438) ?x6442) ?x6446)))
 (let ((?x6526 (- (- (- (- (- (- (- ?x6514 ?x6515) ?x6517) ?x6519) ?x6521) ?x6523) ?x6450) ?x6454)))
 (let ((?x6538 (+ (+ (+ (+ (+ (- (- ?x6526 ?x6458) ?x6462) ?x6529) ?x6531) ?x6533) ?x6535) ?x6537)))
 (= ?x6538 0.0))))))))))))))))))))))
(assert
 (= (- (* l_0_7_31 l_0_7_31) (* l_0_7_46 l_0_7_46)) 0.0))
(assert
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x6230 (* ?x4327 l_0_7_49)))
 (= (- (* (* 2.0 l_0_7_31) l_0_7_34) ?x6230) 0.0))))
(assert
 (let ((?x6281 (* l_0_7_51 l_0_7_51)))
 (let ((?x6279 (* l_0_7_50 l_0_7_50)))
 (let ((?x6277 (* l_0_7_49 l_0_7_49)))
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x6253 (* ?x4327 l_0_7_56)))
 (let ((?x6274 (* l_0_7_36 l_0_7_36)))
 (let ((?x6272 (* l_0_7_35 l_0_7_35)))
 (let ((?x6587 (+ (+ (* (* 2.0 l_0_7_31) l_0_7_41) (* l_0_7_34 l_0_7_34)) ?x6272)))
 (= (- (- (- (- (+ ?x6587 ?x6274) ?x6253) ?x6277) ?x6279) ?x6281) 0.0))))))))))
(assert
 (let ((?x6281 (* l_0_7_51 l_0_7_51)))
 (let ((?x6279 (* l_0_7_50 l_0_7_50)))
 (let ((?x6277 (* l_0_7_49 l_0_7_49)))
 (let ((?x6274 (* l_0_7_36 l_0_7_36)))
 (let ((?x6611 (- (+ (+ (* l_0_7_34 l_0_7_34) (* l_0_7_35 l_0_7_35)) ?x6274) ?x6277)))
 (= (- (- ?x6611 ?x6279) ?x6281) 0.0)))))))
(assert
 (let ((?x6310 (* 2.0 l_0_7_51)))
 (let ((?x6311 (* ?x6310 l_0_7_54)))
 (let ((?x6307 (* 2.0 l_0_7_50)))
 (let ((?x6308 (* ?x6307 l_0_7_53)))
 (let ((?x6304 (* 2.0 l_0_7_49)))
 (let ((?x6305 (* ?x6304 l_0_7_52)))
 (let ((?x6301 (* 2.0 l_0_7_36)))
 (let ((?x6302 (* ?x6301 l_0_7_39)))
 (let ((?x6298 (* 2.0 l_0_7_35)))
 (let ((?x6299 (* ?x6298 l_0_7_38)))
 (let ((?x6329 (* 2.0 l_0_7_34)))
 (let ((?x6331 (* ?x6329 l_0_7_37)))
 (= (- (- (- (+ (+ ?x6331 ?x6299) ?x6302) ?x6305) ?x6308) ?x6311) 0.0))))))))))))))
(assert
 (let ((?x6310 (* 2.0 l_0_7_51)))
 (let ((?x6354 (* ?x6310 l_0_7_58)))
 (let ((?x6307 (* 2.0 l_0_7_50)))
 (let ((?x6351 (* ?x6307 l_0_7_57)))
 (let ((?x6304 (* 2.0 l_0_7_49)))
 (let ((?x6348 (* ?x6304 l_0_7_56)))
 (let ((?x6301 (* 2.0 l_0_7_36)))
 (let ((?x6345 (* ?x6301 l_0_7_43)))
 (let ((?x6298 (* 2.0 l_0_7_35)))
 (let ((?x6342 (* ?x6298 l_0_7_42)))
 (let ((?x6329 (* 2.0 l_0_7_34)))
 (let ((?x6333 (* ?x6329 l_0_7_41)))
 (= (- (- (- (+ (+ ?x6333 ?x6342) ?x6345) ?x6348) ?x6351) ?x6354) 0.0))))))))))))))
(assert
 (let ((?x6413 (* l_0_7_55 l_0_7_55)))
 (let ((?x6411 (* l_0_7_54 l_0_7_54)))
 (let ((?x6409 (* l_0_7_53 l_0_7_53)))
 (let ((?x6407 (* l_0_7_52 l_0_7_52)))
 (let ((?x6405 (* l_0_7_40 l_0_7_40)))
 (let ((?x6403 (* l_0_7_39 l_0_7_39)))
 (let ((?x6657 (+ (+ (+ (* l_0_7_37 l_0_7_37) (* l_0_7_38 l_0_7_38)) ?x6403) ?x6405)))
 (= (- (- (- (- ?x6657 ?x6407) ?x6409) ?x6411) ?x6413) 0.0)))))))))
(assert
 (let ((?x6462 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x6458 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x6454 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x6450 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x6446 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x6442 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x6438 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x6514 (+ (+ (+ (* (* 2.0 l_0_7_37) l_0_7_41) ?x6438) ?x6442) ?x6446)))
 (= (- (- (- (- ?x6514 ?x6450) ?x6454) ?x6458) ?x6462) 0.0))))))))))
(assert
 (let ((?x6537 (* l_0_7_60 l_0_7_60)))
 (let ((?x6535 (* l_0_7_59 l_0_7_59)))
 (let ((?x6533 (* l_0_7_58 l_0_7_58)))
 (let ((?x6531 (* l_0_7_57 l_0_7_57)))
 (let ((?x6529 (* l_0_7_56 l_0_7_56)))
 (let ((?x6523 (* l_0_7_45 l_0_7_45)))
 (let ((?x6521 (* l_0_7_44 l_0_7_44)))
 (let ((?x6519 (* l_0_7_43 l_0_7_43)))
 (let ((?x6687 (+ (+ (+ (* l_0_7_41 l_0_7_41) (* l_0_7_42 l_0_7_42)) ?x6519) ?x6521)))
 (= (- (- (- (- (- (+ ?x6687 ?x6523) ?x6529) ?x6531) ?x6533) ?x6535) ?x6537) 0.0)))))))))))
(assert
 (= (- (* l_0_7_31 l_0_7_31) (* l_0_7_46 l_0_7_46)) 0.0))
(assert
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x6230 (* ?x4327 l_0_7_49)))
 (= (- (* (* 2.0 l_0_7_31) l_0_7_34) ?x6230) 0.0))))
(assert
 (let ((?x4327 (* 2.0 l_0_7_46)))
 (let ((?x6253 (* ?x4327 l_0_7_56)))
 (let ((?x4324 (* 2.0 l_0_7_31)))
 (let ((?x6246 (* ?x4324 l_0_7_41)))
 (= (- ?x6246 ?x6253) 0.0))))))
(assert
 (let ((?x6310 (* 2.0 l_0_7_51)))
 (let ((?x6354 (* ?x6310 l_0_7_58)))
 (let ((?x6307 (* 2.0 l_0_7_50)))
 (let ((?x6351 (* ?x6307 l_0_7_57)))
 (let ((?x6304 (* 2.0 l_0_7_49)))
 (let ((?x6348 (* ?x6304 l_0_7_56)))
 (let ((?x6301 (* 2.0 l_0_7_36)))
 (let ((?x6345 (* ?x6301 l_0_7_43)))
 (let ((?x6298 (* 2.0 l_0_7_35)))
 (let ((?x6342 (* ?x6298 l_0_7_42)))
 (let ((?x6329 (* 2.0 l_0_7_34)))
 (let ((?x6333 (* ?x6329 l_0_7_41)))
 (= (- (- (- (+ (+ ?x6333 ?x6342) ?x6345) ?x6348) ?x6351) ?x6354) 0.0))))))))))))))
(assert
 (let ((?x6537 (* l_0_7_60 l_0_7_60)))
 (let ((?x6535 (* l_0_7_59 l_0_7_59)))
 (let ((?x6533 (* l_0_7_58 l_0_7_58)))
 (let ((?x6531 (* l_0_7_57 l_0_7_57)))
 (let ((?x6529 (* l_0_7_56 l_0_7_56)))
 (let ((?x6523 (* l_0_7_45 l_0_7_45)))
 (let ((?x6521 (* l_0_7_44 l_0_7_44)))
 (let ((?x6519 (* l_0_7_43 l_0_7_43)))
 (let ((?x6687 (+ (+ (+ (* l_0_7_41 l_0_7_41) (* l_0_7_42 l_0_7_42)) ?x6519) ?x6521)))
 (= (- (- (- (- (- (+ ?x6687 ?x6523) ?x6529) ?x6531) ?x6533) ?x6535) ?x6537) 0.0)))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_91 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_96 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (let ((?x6775 (* l_0_8_78 l_0_8_78)))
 (let ((?x6773 (* l_0_8_77 l_0_8_77)))
 (let ((?x6762 (* 2.0 l_0_8_18)))
 (let ((?x6763 (* ?x6762 l_0_8_20)))
 (let ((?x6757 (* 2.0 l_0_8_17)))
 (let ((?x6758 (* ?x6757 l_0_8_19)))
 (let ((?x6756 (- (* (* (- 2.0) l_0_8_107) l_0_8_109) (* (* 2.0 l_0_8_108) l_0_8_110))))
 (let ((?x6766 (- (+ (- (+ ?x6756 ?x6758) (* ?x6757 l_0_8_17)) ?x6763) (* ?x6762 l_0_8_18))))
 (let ((?x6772 (+ (+ ?x6766 (* (* 8.0 l_0_8_62) l_0_8_64)) (* (* 8.0 l_0_8_63) l_0_8_65))))
 (let ((?x6782 (- (- (+ (+ ?x6772 ?x6773) ?x6775) (* (* 2.0 l_0_8_92) l_0_8_94)) (* (* 2.0 l_0_8_93) l_0_8_95))))
 (= (+ ?x6782 2.0) 0.0))))))))))))
(assert
 (let ((?x6775 (* l_0_8_78 l_0_8_78)))
 (let ((?x6845 (* (/ 1.0 4.0) ?x6775)))
 (let ((?x6773 (* l_0_8_77 l_0_8_77)))
 (let ((?x6843 (* (/ 1.0 4.0) ?x6773)))
 (let ((?x6841 (* l_0_8_63 l_0_8_63)))
 (let ((?x6839 (* l_0_8_62 l_0_8_62)))
 (let ((?x6805 (* l_0_8_18 l_0_8_18)))
 (let ((?x6796 (* l_0_8_17 l_0_8_17)))
 (let ((?x6831 (* 2.0 l_0_8_16)))
 (let ((?x6832 (* ?x6831 l_0_8_17)))
 (let ((?x6838 (+ (- (- (+ (* (* (- 2.0) l_0_8_106) l_0_8_107) ?x6832) ?x6796) ?x6805) (* (* 8.0 l_0_8_61) l_0_8_62))))
 (let ((?x6849 (- (+ (+ (- (- ?x6838 ?x6839) ?x6841) ?x6843) ?x6845) (* (* 2.0 l_0_8_91) l_0_8_92))))
 (= (+ ?x6849 1.0) 0.0))))))))))))))
(assert
 (let ((?x6894 (* l_0_8_93 l_0_8_93)))
 (let ((?x6892 (* l_0_8_92 l_0_8_92)))
 (let ((?x6841 (* l_0_8_63 l_0_8_63)))
 (let ((?x6890 (* 4.0 ?x6841)))
 (let ((?x6839 (* l_0_8_62 l_0_8_62)))
 (let ((?x6888 (* 4.0 ?x6839)))
 (let ((?x6885 (+ (- (* (- l_0_8_107) l_0_8_107) (* l_0_8_108 l_0_8_108)) (* 1.0 (* l_0_8_17 l_0_8_17)))))
 (let ((?x6893 (- (+ (+ (+ ?x6885 (* 1.0 (* l_0_8_18 l_0_8_18))) ?x6888) ?x6890) ?x6892)))
 (= (- (- ?x6893 ?x6894) 1.0) 0.0))))))))))
(assert
 (let ((?x6775 (* l_0_8_78 l_0_8_78)))
 (let ((?x6773 (* l_0_8_77 l_0_8_77)))
 (let ((?x6932 (* l_0_8_3 l_0_8_3)))
 (let ((?x6930 (* l_0_8_2 l_0_8_2)))
 (let ((?x6805 (* l_0_8_18 l_0_8_18)))
 (let ((?x6762 (* 2.0 l_0_8_18)))
 (let ((?x6927 (* ?x6762 l_0_8_27)))
 (let ((?x6796 (* l_0_8_17 l_0_8_17)))
 (let ((?x6757 (* 2.0 l_0_8_17)))
 (let ((?x6924 (* ?x6757 l_0_8_26)))
 (let ((?x6918 (- (* (* (- 2.0) l_0_8_101) l_0_8_92) (* (* 2.0 l_0_8_102) l_0_8_93))))
 (let ((?x6923 (- (- ?x6918 (* (* 2.0 l_0_8_107) l_0_8_116)) (* (* 2.0 l_0_8_108) l_0_8_117))))
 (let ((?x6935 (+ (- (- (+ (+ (+ (+ ?x6923 ?x6924) ?x6796) ?x6927) ?x6805) ?x6930) ?x6932) (* (* 8.0 l_0_8_62) l_0_8_71))))
 (let ((?x6940 (- (- (- (+ ?x6935 (* (* 8.0 l_0_8_63) l_0_8_72)) ?x6773) ?x6775) 1.0)))
 (= ?x6940 0.0))))))))))))))))
(assert
 (let ((?x7011 (* l_0_8_76 l_0_8_76)))
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x7003 (* ?x7002 l_0_8_47)))
 (let ((?x6999 (* 2.0 l_0_8_31)))
 (let ((?x7000 (* ?x6999 l_0_8_32)))
 (let ((?x6997 (* l_0_8_16 l_0_8_16)))
 (let ((?x6998 (+ (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_16) l_0_8_26)) ?x6997)))
 (let ((?x7010 (+ (- (- (+ ?x6998 ?x7000) ?x7003) (* (* 2.0 l_0_8_61) l_0_8_71)) (* (* (/ 1.0 2.0) l_0_8_76) l_0_8_86))))
 (= (- ?x7010 ?x7011) 0.0))))))))))
(assert
 (let ((?x7073 (* 2.0 l_0_8_76)))
 (let ((?x7074 (* ?x7073 l_0_8_77)))
 (let ((?x7063 (* l_0_8_48 l_0_8_48)))
 (let ((?x7061 (* l_0_8_47 l_0_8_47)))
 (let ((?x7059 (* l_0_8_33 l_0_8_33)))
 (let ((?x7057 (* l_0_8_32 l_0_8_32)))
 (let ((?x6762 (* 2.0 l_0_8_18)))
 (let ((?x6927 (* ?x6762 l_0_8_27)))
 (let ((?x6757 (* 2.0 l_0_8_17)))
 (let ((?x6924 (* ?x6757 l_0_8_26)))
 (let ((?x6831 (* 2.0 l_0_8_16)))
 (let ((?x6995 (* ?x6831 l_0_8_26)))
 (let ((?x6832 (* ?x6831 l_0_8_17)))
 (let ((?x7049 (- (* (* (- 2.0) l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_101) l_0_8_91))))
 (let ((?x7055 (- (+ (+ (- ?x7049 (* (* 2.0 l_0_8_106) l_0_8_116)) ?x6832) ?x6995) ?x6924)))
 (let ((?x7066 (+ (- (- (+ (+ (- ?x7055 ?x6927) ?x7057) ?x7059) ?x7061) ?x7063) (* (* 8.0 l_0_8_61) l_0_8_71))))
 (let ((?x7072 (- (- ?x7066 (* (* 2.0 l_0_8_62) l_0_8_71)) (* (* 2.0 l_0_8_63) l_0_8_72))))
 (let ((?x7081 (+ (+ (- ?x7072 ?x7074) (* (* (/ 1.0 2.0) l_0_8_77) l_0_8_86)) (* (* (/ 1.0 2.0) l_0_8_78) l_0_8_87))))
 (= ?x7081 0.0))))))))))))))))))))
(assert
 (let ((?x7073 (* 2.0 l_0_8_76)))
 (let ((?x7173 (* ?x7073 l_0_8_86)))
 (let ((?x7171 (* ?x7073 l_0_8_79)))
 (let ((?x7159 (* 2.0 l_0_8_48)))
 (let ((?x7160 (* ?x7159 l_0_8_50)))
 (let ((?x7156 (* 2.0 l_0_8_47)))
 (let ((?x7157 (* ?x7156 l_0_8_49)))
 (let ((?x7153 (* 2.0 l_0_8_33)))
 (let ((?x7154 (* ?x7153 l_0_8_35)))
 (let ((?x7150 (* 2.0 l_0_8_32)))
 (let ((?x7151 (* ?x7150 l_0_8_34)))
 (let ((?x7147 (* 2.0 l_0_8_21)))
 (let ((?x7148 (* ?x7147 l_0_8_28)))
 (let ((?x7144 (* 2.0 l_0_8_20)))
 (let ((?x7145 (* ?x7144 l_0_8_27)))
 (let ((?x7141 (* 2.0 l_0_8_19)))
 (let ((?x7142 (* ?x7141 l_0_8_26)))
 (let ((?x6831 (* 2.0 l_0_8_16)))
 (let ((?x7136 (* ?x6831 l_0_8_19)))
 (let ((?x7140 (- (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x7136) (* (* 4.0 l_0_8_16) l_0_8_26))))
 (let ((?x7161 (- (- (+ (+ (- (- (- ?x7140 ?x7142) ?x7145) ?x7148) ?x7151) ?x7154) ?x7157) ?x7160)))
 (let ((?x7167 (- (- ?x7161 (* (* 2.0 l_0_8_64) l_0_8_71)) (* (* 2.0 l_0_8_65) l_0_8_72))))
 (let ((?x7177 (+ (+ (- (- ?x7167 (* (* 2.0 l_0_8_66) l_0_8_73)) ?x7171) ?x7173) (* (* (/ 1.0 2.0) l_0_8_79) l_0_8_86))))
 (let ((?x7183 (+ (+ ?x7177 (* (* (/ 1.0 2.0) l_0_8_80) l_0_8_87)) (* (* (/ 1.0 2.0) l_0_8_81) l_0_8_88))))
 (= ?x7183 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7073 (* 2.0 l_0_8_76)))
 (let ((?x7310 (* ?x7073 l_0_8_82)))
 (let ((?x7159 (* 2.0 l_0_8_48)))
 (let ((?x7296 (* ?x7159 l_0_8_57)))
 (let ((?x7294 (* ?x7159 l_0_8_53)))
 (let ((?x7156 (* 2.0 l_0_8_47)))
 (let ((?x7292 (* ?x7156 l_0_8_56)))
 (let ((?x7290 (* ?x7156 l_0_8_52)))
 (let ((?x7153 (* 2.0 l_0_8_33)))
 (let ((?x7288 (* ?x7153 l_0_8_42)))
 (let ((?x7286 (* ?x7153 l_0_8_38)))
 (let ((?x7150 (* 2.0 l_0_8_32)))
 (let ((?x7284 (* ?x7150 l_0_8_41)))
 (let ((?x7282 (* ?x7150 l_0_8_37)))
 (let ((?x7279 (* 2.0 l_0_8_25)))
 (let ((?x7280 (* ?x7279 l_0_8_29)))
 (let ((?x7276 (* 2.0 l_0_8_24)))
 (let ((?x7277 (* ?x7276 l_0_8_28)))
 (let ((?x7273 (* 2.0 l_0_8_23)))
 (let ((?x7274 (* ?x7273 l_0_8_27)))
 (let ((?x7261 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x6831 (* 2.0 l_0_8_16)))
 (let ((?x7256 (* ?x6831 l_0_8_22)))
 (let ((?x7278 (- (- (- (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) ?x7256) ?x7261) ?x7274) ?x7277)))
 (let ((?x7293 (+ (- (- (+ (- (+ (- ?x7278 ?x7280) ?x7282) ?x7284) ?x7286) ?x7288) ?x7290) ?x7292)))
 (let ((?x7303 (- (- (+ (- ?x7293 ?x7294) ?x7296) (* (* 2.0 l_0_8_67) l_0_8_71)) (* (* 2.0 l_0_8_68) l_0_8_72))))
 (let ((?x7309 (- (- ?x7303 (* (* 2.0 l_0_8_69) l_0_8_73)) (* (* 2.0 l_0_8_70) l_0_8_74))))
 (let ((?x7317 (+ (+ (- ?x7309 ?x7310) (* (* (/ 1.0 2.0) l_0_8_82) l_0_8_86)) (* (* (/ 1.0 2.0) l_0_8_83) l_0_8_87))))
 (let ((?x7323 (+ (+ ?x7317 (* (* (/ 1.0 2.0) l_0_8_84) l_0_8_88)) (* (* (/ 1.0 2.0) l_0_8_85) l_0_8_89))))
 (= ?x7323 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x7475 (* l_0_8_90 l_0_8_90)))
 (let ((?x7476 (* (/ 1.0 4.0) ?x7475)))
 (let ((?x7472 (* l_0_8_89 l_0_8_89)))
 (let ((?x7473 (* (/ 1.0 4.0) ?x7472)))
 (let ((?x7469 (* l_0_8_88 l_0_8_88)))
 (let ((?x7470 (* (/ 1.0 4.0) ?x7469)))
 (let ((?x7466 (* l_0_8_87 l_0_8_87)))
 (let ((?x7467 (* (/ 1.0 4.0) ?x7466)))
 (let ((?x7463 (* l_0_8_86 l_0_8_86)))
 (let ((?x7464 (* (/ 1.0 4.0) ?x7463)))
 (let ((?x7073 (* 2.0 l_0_8_76)))
 (let ((?x7173 (* ?x7073 l_0_8_86)))
 (let ((?x7460 (* l_0_8_75 l_0_8_75)))
 (let ((?x7458 (* l_0_8_74 l_0_8_74)))
 (let ((?x7456 (* l_0_8_73 l_0_8_73)))
 (let ((?x7454 (* l_0_8_72 l_0_8_72)))
 (let ((?x7452 (* l_0_8_71 l_0_8_71)))
 (let ((?x7159 (* 2.0 l_0_8_48)))
 (let ((?x7296 (* ?x7159 l_0_8_57)))
 (let ((?x7156 (* 2.0 l_0_8_47)))
 (let ((?x7292 (* ?x7156 l_0_8_56)))
 (let ((?x7153 (* 2.0 l_0_8_33)))
 (let ((?x7288 (* ?x7153 l_0_8_42)))
 (let ((?x7150 (* 2.0 l_0_8_32)))
 (let ((?x7284 (* ?x7150 l_0_8_41)))
 (let ((?x7446 (* l_0_8_30 l_0_8_30)))
 (let ((?x7444 (* l_0_8_29 l_0_8_29)))
 (let ((?x7442 (* l_0_8_28 l_0_8_28)))
 (let ((?x7428 (* l_0_8_27 l_0_8_27)))
 (let ((?x7425 (* l_0_8_26 l_0_8_26)))
 (let ((?x6831 (* 2.0 l_0_8_16)))
 (let ((?x6995 (* ?x6831 l_0_8_26)))
 (let ((?x7443 (- (- (- (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) ?x6995) ?x7425) ?x7428) ?x7442)))
 (let ((?x7453 (- (- (- (+ (+ (- (- ?x7443 ?x7444) ?x7446) ?x7284) ?x7288) ?x7292) ?x7296) ?x7452)))
 (let ((?x7468 (+ (+ (- (- (- (- (- ?x7453 ?x7454) ?x7456) ?x7458) ?x7460) ?x7173) ?x7464) ?x7467)))
 (= (+ (+ (+ ?x7468 ?x7470) ?x7473) ?x7476) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7571 (* 2.0 l_0_8_78)))
 (let ((?x7574 (* ?x7571 l_0_8_87)))
 (let ((?x7572 (* ?x7571 l_0_8_80)))
 (let ((?x7566 (* 2.0 l_0_8_77)))
 (let ((?x7569 (* ?x7566 l_0_8_86)))
 (let ((?x7567 (* ?x7566 l_0_8_79)))
 (let ((?x7147 (* 2.0 l_0_8_21)))
 (let ((?x7148 (* ?x7147 l_0_8_28)))
 (let ((?x7144 (* 2.0 l_0_8_20)))
 (let ((?x7145 (* ?x7144 l_0_8_27)))
 (let ((?x7141 (* 2.0 l_0_8_19)))
 (let ((?x7142 (* ?x7141 l_0_8_26)))
 (let ((?x6762 (* 2.0 l_0_8_18)))
 (let ((?x6763 (* ?x6762 l_0_8_20)))
 (let ((?x6757 (* 2.0 l_0_8_17)))
 (let ((?x6758 (* ?x6757 l_0_8_19)))
 (let ((?x7527 (- (* (* (- 2.0) l_0_8_101) l_0_8_94) (* (* 2.0 l_0_8_102) l_0_8_95))))
 (let ((?x7533 (- (- ?x7527 (* (* 2.0 l_0_8_103) l_0_8_96)) (* (* 2.0 l_0_8_109) l_0_8_116))))
 (let ((?x7539 (- (- ?x7533 (* (* 2.0 l_0_8_110) l_0_8_117)) (* (* 2.0 l_0_8_111) l_0_8_118))))
 (let ((?x7547 (- (+ (- (+ ?x7539 ?x6758) (* (* 4.0 l_0_8_17) l_0_8_26)) ?x6763) (* (* 4.0 l_0_8_18) l_0_8_27))))
 (let ((?x7553 (+ (+ (- (+ ?x7547 ?x7142) (* (* 2.0 l_0_8_2) l_0_8_4)) ?x7145) ?x7148)))
 (let ((?x7559 (+ (- ?x7553 (* (* 2.0 l_0_8_3) l_0_8_5)) (* (* 8.0 l_0_8_64) l_0_8_71))))
 (let ((?x7565 (+ (+ ?x7559 (* (* 8.0 l_0_8_65) l_0_8_72)) (* (* 8.0 l_0_8_66) l_0_8_73))))
 (= (+ (- (+ (- ?x7565 ?x7567) ?x7569) ?x7572) ?x7574) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7571 (* 2.0 l_0_8_78)))
 (let ((?x7702 (* ?x7571 l_0_8_83)))
 (let ((?x7566 (* 2.0 l_0_8_77)))
 (let ((?x7700 (* ?x7566 l_0_8_82)))
 (let ((?x7279 (* 2.0 l_0_8_25)))
 (let ((?x7280 (* ?x7279 l_0_8_29)))
 (let ((?x7276 (* 2.0 l_0_8_24)))
 (let ((?x7277 (* ?x7276 l_0_8_28)))
 (let ((?x7273 (* 2.0 l_0_8_23)))
 (let ((?x7274 (* ?x7273 l_0_8_27)))
 (let ((?x7261 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x6762 (* 2.0 l_0_8_18)))
 (let ((?x7678 (* ?x6762 l_0_8_23)))
 (let ((?x6757 (* 2.0 l_0_8_17)))
 (let ((?x7676 (* ?x6757 l_0_8_22)))
 (let ((?x7659 (- (* (* (- 2.0) l_0_8_100) l_0_8_104) (* (* 2.0 l_0_8_101) l_0_8_97))))
 (let ((?x7663 (- (- ?x7659 (* (* 2.0 l_0_8_102) l_0_8_98)) (* (* 2.0 l_0_8_103) l_0_8_99))))
 (let ((?x7669 (- (- ?x7663 (* (* 2.0 l_0_8_112) l_0_8_116)) (* (* 2.0 l_0_8_113) l_0_8_117))))
 (let ((?x7675 (- (- ?x7669 (* (* 2.0 l_0_8_114) l_0_8_118)) (* (* 2.0 l_0_8_115) l_0_8_119))))
 (let ((?x7682 (+ (- (+ (+ ?x7675 ?x7676) ?x7678) (* (* 2.0 l_0_8_2) l_0_8_7)) ?x7261)))
 (let ((?x7687 (- (+ (+ (+ ?x7682 ?x7274) ?x7277) ?x7280) (* (* 2.0 l_0_8_3) l_0_8_8))))
 (let ((?x7693 (+ (+ ?x7687 (* (* 8.0 l_0_8_67) l_0_8_71)) (* (* 8.0 l_0_8_68) l_0_8_72))))
 (let ((?x7699 (+ (+ ?x7693 (* (* 8.0 l_0_8_69) l_0_8_73)) (* (* 8.0 l_0_8_70) l_0_8_74))))
 (= (- (- ?x7699 ?x7700) ?x7702) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7571 (* 2.0 l_0_8_78)))
 (let ((?x7574 (* ?x7571 l_0_8_87)))
 (let ((?x7566 (* 2.0 l_0_8_77)))
 (let ((?x7569 (* ?x7566 l_0_8_86)))
 (let ((?x7460 (* l_0_8_75 l_0_8_75)))
 (let ((?x7831 (* 4.0 ?x7460)))
 (let ((?x7458 (* l_0_8_74 l_0_8_74)))
 (let ((?x7829 (* 4.0 ?x7458)))
 (let ((?x7456 (* l_0_8_73 l_0_8_73)))
 (let ((?x7827 (* 4.0 ?x7456)))
 (let ((?x7454 (* l_0_8_72 l_0_8_72)))
 (let ((?x7825 (* 4.0 ?x7454)))
 (let ((?x7452 (* l_0_8_71 l_0_8_71)))
 (let ((?x7823 (* 4.0 ?x7452)))
 (let ((?x6762 (* 2.0 l_0_8_18)))
 (let ((?x6927 (* ?x6762 l_0_8_27)))
 (let ((?x6757 (* 2.0 l_0_8_17)))
 (let ((?x6924 (* ?x6757 l_0_8_26)))
 (let ((?x7809 (* l_0_8_120 l_0_8_120)))
 (let ((?x7804 (* l_0_8_119 l_0_8_119)))
 (let ((?x7802 (* l_0_8_118 l_0_8_118)))
 (let ((?x7800 (* l_0_8_117 l_0_8_117)))
 (let ((?x7798 (* l_0_8_116 l_0_8_116)))
 (let ((?x7793 (* l_0_8_105 l_0_8_105)))
 (let ((?x7791 (* l_0_8_104 l_0_8_104)))
 (let ((?x7789 (* l_0_8_103 l_0_8_103)))
 (let ((?x7790 (- (- (* (- l_0_8_101) l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x7789)))
 (let ((?x7799 (- (- (- (- ?x7790 ?x7791) ?x7793) (* (* 2.0 l_0_8_11) l_0_8_2)) ?x7798)))
 (let ((?x7808 (- (- (- (- ?x7799 ?x7800) ?x7802) ?x7804) (* (* 2.0 l_0_8_12) l_0_8_3))))
 (let ((?x7814 (+ (+ (+ (- ?x7808 ?x7809) ?x6924) ?x6927) (* 1.0 (* l_0_8_26 l_0_8_26)))))
 (let ((?x7818 (+ (+ ?x7814 (* 1.0 (* l_0_8_27 l_0_8_27))) (* 1.0 (* l_0_8_28 l_0_8_28)))))
 (let ((?x7822 (+ (+ ?x7818 (* 1.0 (* l_0_8_29 l_0_8_29))) (* 1.0 (* l_0_8_30 l_0_8_30)))))
 (let ((?x7834 (- (- (+ (+ (+ (+ (+ ?x7822 ?x7823) ?x7825) ?x7827) ?x7829) ?x7831) ?x7569) ?x7574)))
 (= ?x7834 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7925 (* l_0_8_81 l_0_8_81)))
 (let ((?x7922 (* 2.0 l_0_8_81)))
 (let ((?x7923 (* ?x7922 l_0_8_88)))
 (let ((?x7920 (* l_0_8_80 l_0_8_80)))
 (let ((?x7917 (* 2.0 l_0_8_80)))
 (let ((?x7918 (* ?x7917 l_0_8_87)))
 (let ((?x7915 (* l_0_8_79 l_0_8_79)))
 (let ((?x7912 (* 2.0 l_0_8_79)))
 (let ((?x7913 (* ?x7912 l_0_8_86)))
 (let ((?x7910 (* l_0_8_6 l_0_8_6)))
 (let ((?x7908 (* l_0_8_5 l_0_8_5)))
 (let ((?x7159 (* 2.0 l_0_8_48)))
 (let ((?x7296 (* ?x7159 l_0_8_57)))
 (let ((?x7156 (* 2.0 l_0_8_47)))
 (let ((?x7292 (* ?x7156 l_0_8_56)))
 (let ((?x7904 (* l_0_8_4 l_0_8_4)))
 (let ((?x7153 (* 2.0 l_0_8_33)))
 (let ((?x7288 (* ?x7153 l_0_8_42)))
 (let ((?x7150 (* 2.0 l_0_8_32)))
 (let ((?x7284 (* ?x7150 l_0_8_41)))
 (let ((?x7900 (* l_0_8_21 l_0_8_21)))
 (let ((?x7895 (* l_0_8_20 l_0_8_20)))
 (let ((?x7894 (- (+ (* (* (- 4.0) l_0_8_19) l_0_8_26) (* l_0_8_19 l_0_8_19)) (* (* 4.0 l_0_8_20) l_0_8_27))))
 (let ((?x7902 (+ (+ (- (+ ?x7894 ?x7895) (* (* 4.0 l_0_8_21) l_0_8_28)) ?x7900) ?x7284)))
 (let ((?x7914 (+ (- (- (- (- (- (+ ?x7902 ?x7288) ?x7904) ?x7292) ?x7296) ?x7908) ?x7910) ?x7913)))
 (= (- (+ (- (+ (- ?x7914 ?x7915) ?x7918) ?x7920) ?x7923) ?x7925) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x8021 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x8018 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x8015 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x8012 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x7922 (* 2.0 l_0_8_81)))
 (let ((?x8009 (* ?x7922 l_0_8_84)))
 (let ((?x7917 (* 2.0 l_0_8_80)))
 (let ((?x8007 (* ?x7917 l_0_8_83)))
 (let ((?x7912 (* 2.0 l_0_8_79)))
 (let ((?x8005 (* ?x7912 l_0_8_82)))
 (let ((?x7147 (* 2.0 l_0_8_21)))
 (let ((?x7982 (* ?x7147 l_0_8_24)))
 (let ((?x7144 (* 2.0 l_0_8_20)))
 (let ((?x7980 (* ?x7144 l_0_8_23)))
 (let ((?x7141 (* 2.0 l_0_8_19)))
 (let ((?x7979 (* ?x7141 l_0_8_22)))
 (let ((?x7989 (- (- (+ (+ ?x7979 ?x7980) ?x7982) (* (* 4.0 l_0_8_22) l_0_8_26)) (* (* 4.0 l_0_8_23) l_0_8_27))))
 (let ((?x7995 (- (- ?x7989 (* (* 4.0 l_0_8_24) l_0_8_28)) (* (* 4.0 l_0_8_25) l_0_8_29))))
 (let ((?x8001 (- (- ?x7995 (* (* 2.0 l_0_8_4) l_0_8_7)) (* (* 2.0 l_0_8_5) l_0_8_8))))
 (let ((?x8010 (- (- (- (- ?x8001 (* (* 2.0 l_0_8_6) l_0_8_9)) ?x8005) ?x8007) ?x8009)))
 (= (+ (+ (+ (+ ?x8010 ?x8012) ?x8015) ?x8018) ?x8021) 0.0))))))))))))))))))))))
(assert
 (let ((?x7475 (* l_0_8_90 l_0_8_90)))
 (let ((?x7472 (* l_0_8_89 l_0_8_89)))
 (let ((?x7469 (* l_0_8_88 l_0_8_88)))
 (let ((?x7466 (* l_0_8_87 l_0_8_87)))
 (let ((?x7463 (* l_0_8_86 l_0_8_86)))
 (let ((?x7922 (* 2.0 l_0_8_81)))
 (let ((?x7923 (* ?x7922 l_0_8_88)))
 (let ((?x7917 (* 2.0 l_0_8_80)))
 (let ((?x7918 (* ?x7917 l_0_8_87)))
 (let ((?x7912 (* 2.0 l_0_8_79)))
 (let ((?x7913 (* ?x7912 l_0_8_86)))
 (let ((?x7147 (* 2.0 l_0_8_21)))
 (let ((?x7148 (* ?x7147 l_0_8_28)))
 (let ((?x7144 (* 2.0 l_0_8_20)))
 (let ((?x7145 (* ?x7144 l_0_8_27)))
 (let ((?x7141 (* 2.0 l_0_8_19)))
 (let ((?x7142 (* ?x7141 l_0_8_26)))
 (let ((?x8090 (- (* (* (- 2.0) l_0_8_11) l_0_8_4) (* (* 2.0 l_0_8_12) l_0_8_5))))
 (let ((?x8105 (+ (+ (+ (- ?x8090 (* (* 2.0 l_0_8_13) l_0_8_6)) ?x7142) ?x7145) ?x7148)))
 (let ((?x8111 (- (- ?x8105 (* (* 2.0 l_0_8_26) l_0_8_26)) (* (* 2.0 l_0_8_27) l_0_8_27))))
 (let ((?x8117 (- (- ?x8111 (* (* 2.0 l_0_8_28) l_0_8_28)) (* (* 2.0 l_0_8_29) l_0_8_29))))
 (let ((?x8123 (- (- (- (- ?x8117 (* (* 2.0 l_0_8_30) l_0_8_30)) ?x7913) ?x7918) ?x7923)))
 (= (+ (+ (+ (+ (+ ?x8123 ?x7463) ?x7466) ?x7469) ?x7472) ?x7475) 0.0))))))))))))))))))))))))
(assert
 (let ((?x8203 (* l_0_8_9 l_0_8_9)))
 (let ((?x8201 (* l_0_8_85 l_0_8_85)))
 (let ((?x8199 (* l_0_8_84 l_0_8_84)))
 (let ((?x8197 (* l_0_8_83 l_0_8_83)))
 (let ((?x8195 (* l_0_8_82 l_0_8_82)))
 (let ((?x8193 (* l_0_8_8 l_0_8_8)))
 (let ((?x8191 (* l_0_8_7 l_0_8_7)))
 (let ((?x8189 (* l_0_8_25 l_0_8_25)))
 (let ((?x8187 (* l_0_8_24 l_0_8_24)))
 (let ((?x8185 (* l_0_8_23 l_0_8_23)))
 (let ((?x8188 (+ (+ (+ (* (- l_0_8_10) l_0_8_10) (* l_0_8_22 l_0_8_22)) ?x8185) ?x8187)))
 (let ((?x8202 (- (- (- (- (- (- (+ ?x8188 ?x8189) ?x8191) ?x8193) ?x8195) ?x8197) ?x8199) ?x8201)))
 (= (- ?x8202 ?x8203) 0.0))))))))))))))
(assert
 (let ((?x8021 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x8018 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x8015 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x8012 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x7279 (* 2.0 l_0_8_25)))
 (let ((?x7280 (* ?x7279 l_0_8_29)))
 (let ((?x7276 (* 2.0 l_0_8_24)))
 (let ((?x7277 (* ?x7276 l_0_8_28)))
 (let ((?x7273 (* 2.0 l_0_8_23)))
 (let ((?x7274 (* ?x7273 l_0_8_27)))
 (let ((?x7261 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x8235 (- (* (* (- 2.0) l_0_8_10) l_0_8_14) (* (* 2.0 l_0_8_11) l_0_8_7))))
 (let ((?x8239 (- (- ?x8235 (* (* 2.0 l_0_8_12) l_0_8_8)) (* (* 2.0 l_0_8_13) l_0_8_9))))
 (let ((?x8246 (- (- (- (+ (+ (+ (+ ?x8239 ?x7261) ?x7274) ?x7277) ?x7280) ?x8012) ?x8015) ?x8018)))
 (= (- ?x8246 ?x8021) 0.0))))))))))))))))
(assert
 (let ((?x7475 (* l_0_8_90 l_0_8_90)))
 (let ((?x7472 (* l_0_8_89 l_0_8_89)))
 (let ((?x7469 (* l_0_8_88 l_0_8_88)))
 (let ((?x7466 (* l_0_8_87 l_0_8_87)))
 (let ((?x7463 (* l_0_8_86 l_0_8_86)))
 (let ((?x7446 (* l_0_8_30 l_0_8_30)))
 (let ((?x7444 (* l_0_8_29 l_0_8_29)))
 (let ((?x7442 (* l_0_8_28 l_0_8_28)))
 (let ((?x7428 (* l_0_8_27 l_0_8_27)))
 (let ((?x7425 (* l_0_8_26 l_0_8_26)))
 (let ((?x8295 (* l_0_8_15 l_0_8_15)))
 (let ((?x8293 (* l_0_8_14 l_0_8_14)))
 (let ((?x8291 (* l_0_8_13 l_0_8_13)))
 (let ((?x8294 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x8291) ?x8293)))
 (let ((?x8302 (- (+ (+ (+ (+ (+ (- ?x8294 ?x8295) ?x7425) ?x7428) ?x7442) ?x7444) ?x7446) ?x7463)))
 (= (- (- (- (- ?x8302 ?x7466) ?x7469) ?x7472) ?x7475) 0.0)))))))))))))))))
(assert
 (let ((?x7011 (* l_0_8_76 l_0_8_76)))
 (let ((?x8343 (- (* (* (- 2.0) l_0_8_16) l_0_8_19) (* (* 2.0 l_0_8_16) l_0_8_16))))
 (let ((?x8347 (+ (- ?x8343 (* (* 2.0 l_0_8_61) l_0_8_64)) (* (* (/ 1.0 2.0) l_0_8_76) l_0_8_79))))
 (= (+ ?x8347 ?x7011) 0.0)))))
(assert
 (let ((?x7073 (* 2.0 l_0_8_76)))
 (let ((?x7074 (* ?x7073 l_0_8_77)))
 (let ((?x6762 (* 2.0 l_0_8_18)))
 (let ((?x6763 (* ?x6762 l_0_8_20)))
 (let ((?x6757 (* 2.0 l_0_8_17)))
 (let ((?x6758 (* ?x6757 l_0_8_19)))
 (let ((?x6831 (* 2.0 l_0_8_16)))
 (let ((?x7136 (* ?x6831 l_0_8_19)))
 (let ((?x8366 (- (* (* (- 2.0) l_0_8_106) l_0_8_109) (* (* 4.0 l_0_8_16) l_0_8_17))))
 (let ((?x8371 (+ (- (- (+ ?x8366 ?x7136) ?x6758) ?x6763) (* (* 8.0 l_0_8_61) l_0_8_64))))
 (let ((?x8375 (- (- ?x8371 (* (* 2.0 l_0_8_62) l_0_8_64)) (* (* 2.0 l_0_8_63) l_0_8_65))))
 (let ((?x8380 (+ (+ (+ ?x8375 ?x7074) (* (* (/ 1.0 2.0) l_0_8_77) l_0_8_79)) (* (* (/ 1.0 2.0) l_0_8_78) l_0_8_80))))
 (= (- ?x8380 (* (* 2.0 l_0_8_91) l_0_8_94)) 0.0))))))))))))))
(assert
 (let ((?x7925 (* l_0_8_81 l_0_8_81)))
 (let ((?x8445 (* (/ 1.0 4.0) ?x7925)))
 (let ((?x7920 (* l_0_8_80 l_0_8_80)))
 (let ((?x8443 (* (/ 1.0 4.0) ?x7920)))
 (let ((?x7915 (* l_0_8_79 l_0_8_79)))
 (let ((?x8441 (* (/ 1.0 4.0) ?x7915)))
 (let ((?x7073 (* 2.0 l_0_8_76)))
 (let ((?x7171 (* ?x7073 l_0_8_79)))
 (let ((?x8438 (* l_0_8_66 l_0_8_66)))
 (let ((?x8436 (* l_0_8_65 l_0_8_65)))
 (let ((?x8434 (* l_0_8_64 l_0_8_64)))
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x7003 (* ?x7002 l_0_8_47)))
 (let ((?x6999 (* 2.0 l_0_8_31)))
 (let ((?x7000 (* ?x6999 l_0_8_32)))
 (let ((?x7900 (* l_0_8_21 l_0_8_21)))
 (let ((?x7895 (* l_0_8_20 l_0_8_20)))
 (let ((?x8430 (- (- (* (* (- 4.0) l_0_8_16) l_0_8_19) (* l_0_8_19 l_0_8_19)) ?x7895)))
 (let ((?x8440 (+ (- (- (- (- (+ (- ?x8430 ?x7900) ?x7000) ?x7003) ?x8434) ?x8436) ?x8438) ?x7171)))
 (= (+ (+ (+ ?x8440 ?x8441) ?x8443) ?x8445) 0.0)))))))))))))))))))))
(assert
 (let ((?x7073 (* 2.0 l_0_8_76)))
 (let ((?x7310 (* ?x7073 l_0_8_82)))
 (let ((?x7159 (* 2.0 l_0_8_48)))
 (let ((?x7160 (* ?x7159 l_0_8_50)))
 (let ((?x7156 (* 2.0 l_0_8_47)))
 (let ((?x7157 (* ?x7156 l_0_8_49)))
 (let ((?x7153 (* 2.0 l_0_8_33)))
 (let ((?x7154 (* ?x7153 l_0_8_35)))
 (let ((?x7150 (* 2.0 l_0_8_32)))
 (let ((?x7151 (* ?x7150 l_0_8_34)))
 (let ((?x7147 (* 2.0 l_0_8_21)))
 (let ((?x7982 (* ?x7147 l_0_8_24)))
 (let ((?x7144 (* 2.0 l_0_8_20)))
 (let ((?x7980 (* ?x7144 l_0_8_23)))
 (let ((?x7141 (* 2.0 l_0_8_19)))
 (let ((?x7979 (* ?x7141 l_0_8_22)))
 (let ((?x8472 (- (- (- (- (* (* (- 4.0) l_0_8_16) l_0_8_22) ?x7979) ?x7980) ?x7982) ?x7151)))
 (let ((?x8477 (- (+ (+ (- ?x8472 ?x7154) ?x7157) ?x7160) (* (* 2.0 l_0_8_64) l_0_8_67))))
 (let ((?x8481 (- (- ?x8477 (* (* 2.0 l_0_8_65) l_0_8_68)) (* (* 2.0 l_0_8_66) l_0_8_69))))
 (let ((?x8486 (+ (+ (+ ?x8481 ?x7310) (* (* (/ 1.0 2.0) l_0_8_79) l_0_8_82)) (* (* (/ 1.0 2.0) l_0_8_80) l_0_8_83))))
 (= (+ ?x8486 (* (* (/ 1.0 2.0) l_0_8_81) l_0_8_84)) 0.0))))))))))))))))))))))
(assert
 (let ((?x8563 (* l_0_8_96 l_0_8_96)))
 (let ((?x8561 (* l_0_8_95 l_0_8_95)))
 (let ((?x8559 (* l_0_8_94 l_0_8_94)))
 (let ((?x7571 (* 2.0 l_0_8_78)))
 (let ((?x7572 (* ?x7571 l_0_8_80)))
 (let ((?x7566 (* 2.0 l_0_8_77)))
 (let ((?x7567 (* ?x7566 l_0_8_79)))
 (let ((?x7063 (* l_0_8_48 l_0_8_48)))
 (let ((?x7061 (* l_0_8_47 l_0_8_47)))
 (let ((?x7059 (* l_0_8_33 l_0_8_33)))
 (let ((?x7057 (* l_0_8_32 l_0_8_32)))
 (let ((?x8535 (* l_0_8_111 l_0_8_111)))
 (let ((?x8536 (- (- (* (- l_0_8_109) l_0_8_109) (* l_0_8_110 l_0_8_110)) ?x8535)))
 (let ((?x8540 (- (- ?x8536 (* (* 4.0 l_0_8_17) l_0_8_19)) (* (* 4.0 l_0_8_18) l_0_8_20))))
 (let ((?x8544 (+ (+ ?x8540 (* 1.0 (* l_0_8_19 l_0_8_19))) (* 1.0 (* l_0_8_20 l_0_8_20)))))
 (let ((?x8549 (- (+ (+ (+ ?x8544 (* 1.0 (* l_0_8_21 l_0_8_21))) ?x7057) ?x7059) ?x7061)))
 (let ((?x8554 (+ (+ (- ?x8549 ?x7063) (* 4.0 (* l_0_8_64 l_0_8_64))) (* 4.0 (* l_0_8_65 l_0_8_65)))))
 (let ((?x8560 (- (+ (+ (+ ?x8554 (* 4.0 (* l_0_8_66 l_0_8_66))) ?x7567) ?x7572) ?x8559)))
 (= (- (- ?x8560 ?x8561) ?x8563) 0.0))))))))))))))))))))
(assert
 (let ((?x7571 (* 2.0 l_0_8_78)))
 (let ((?x7702 (* ?x7571 l_0_8_83)))
 (let ((?x7566 (* 2.0 l_0_8_77)))
 (let ((?x7700 (* ?x7566 l_0_8_82)))
 (let ((?x7147 (* 2.0 l_0_8_21)))
 (let ((?x7982 (* ?x7147 l_0_8_24)))
 (let ((?x7144 (* 2.0 l_0_8_20)))
 (let ((?x7980 (* ?x7144 l_0_8_23)))
 (let ((?x7141 (* 2.0 l_0_8_19)))
 (let ((?x7979 (* ?x7141 l_0_8_22)))
 (let ((?x8610 (- (* (* (- 2.0) l_0_8_109) l_0_8_112) (* (* 2.0 l_0_8_110) l_0_8_113))))
 (let ((?x8614 (- (- ?x8610 (* (* 2.0 l_0_8_111) l_0_8_114)) (* (* 4.0 l_0_8_17) l_0_8_22))))
 (let ((?x8619 (+ (+ (+ (- ?x8614 (* (* 4.0 l_0_8_18) l_0_8_23)) ?x7979) ?x7980) ?x7982)))
 (let ((?x8623 (+ (+ ?x8619 (* (* 8.0 l_0_8_64) l_0_8_67)) (* (* 8.0 l_0_8_65) l_0_8_68))))
 (let ((?x8630 (- (+ (+ (+ ?x8623 (* (* 8.0 l_0_8_66) l_0_8_69)) ?x7700) ?x7702) (* (* 2.0 l_0_8_94) l_0_8_97))))
 (let ((?x8636 (- (- ?x8630 (* (* 2.0 l_0_8_95) l_0_8_98)) (* (* 2.0 l_0_8_96) l_0_8_99))))
 (= ?x8636 0.0))))))))))))))))))
(assert
 (let ((?x7925 (* l_0_8_81 l_0_8_81)))
 (let ((?x7920 (* l_0_8_80 l_0_8_80)))
 (let ((?x7915 (* l_0_8_79 l_0_8_79)))
 (let ((?x7159 (* 2.0 l_0_8_48)))
 (let ((?x7160 (* ?x7159 l_0_8_50)))
 (let ((?x7156 (* 2.0 l_0_8_47)))
 (let ((?x7157 (* ?x7156 l_0_8_49)))
 (let ((?x7153 (* 2.0 l_0_8_33)))
 (let ((?x7154 (* ?x7153 l_0_8_35)))
 (let ((?x7150 (* 2.0 l_0_8_32)))
 (let ((?x7151 (* ?x7150 l_0_8_34)))
 (let ((?x8693 (- (* (* (- 2.0) l_0_8_19) l_0_8_19) (* (* 2.0 l_0_8_20) l_0_8_20))))
 (let ((?x8698 (- (+ (+ (- ?x8693 (* (* 2.0 l_0_8_21) l_0_8_21)) ?x7151) ?x7154) ?x7157)))
 (= (+ (+ (+ (- ?x8698 ?x7160) ?x7915) ?x7920) ?x7925) 0.0)))))))))))))))
(assert
 (let ((?x7922 (* 2.0 l_0_8_81)))
 (let ((?x8009 (* ?x7922 l_0_8_84)))
 (let ((?x7917 (* 2.0 l_0_8_80)))
 (let ((?x8007 (* ?x7917 l_0_8_83)))
 (let ((?x7912 (* 2.0 l_0_8_79)))
 (let ((?x8005 (* ?x7912 l_0_8_82)))
 (let ((?x7159 (* 2.0 l_0_8_48)))
 (let ((?x7294 (* ?x7159 l_0_8_53)))
 (let ((?x7156 (* 2.0 l_0_8_47)))
 (let ((?x7290 (* ?x7156 l_0_8_52)))
 (let ((?x7153 (* 2.0 l_0_8_33)))
 (let ((?x7286 (* ?x7153 l_0_8_38)))
 (let ((?x7150 (* 2.0 l_0_8_32)))
 (let ((?x7282 (* ?x7150 l_0_8_37)))
 (let ((?x8724 (- (* (* (- 4.0) l_0_8_19) l_0_8_22) (* (* 4.0 l_0_8_20) l_0_8_23))))
 (let ((?x8729 (- (+ (+ (- ?x8724 (* (* 4.0 l_0_8_21) l_0_8_24)) ?x7282) ?x7286) ?x7290)))
 (= (+ (+ (+ (- ?x8729 ?x7294) ?x8005) ?x8007) ?x8009) 0.0))))))))))))))))))
(assert
 (let ((?x8201 (* l_0_8_85 l_0_8_85)))
 (let ((?x8199 (* l_0_8_84 l_0_8_84)))
 (let ((?x8197 (* l_0_8_83 l_0_8_83)))
 (let ((?x8195 (* l_0_8_82 l_0_8_82)))
 (let ((?x8756 (- (* (* (- 2.0) l_0_8_22) l_0_8_22) (* (* 2.0 l_0_8_23) l_0_8_23))))
 (let ((?x8760 (- (- ?x8756 (* (* 2.0 l_0_8_24) l_0_8_24)) (* (* 2.0 l_0_8_25) l_0_8_25))))
 (= (+ (+ (+ (+ ?x8760 ?x8195) ?x8197) ?x8199) ?x8201) 0.0))))))))
(assert
 (let ((?x8790 (+ (- (* (- l_0_8_16) l_0_8_16) (* l_0_8_61 l_0_8_61)) (* (/ 1.0 4.0) (* l_0_8_76 l_0_8_76)))))
 (= ?x8790 0.0)))
(assert
 (let ((?x8810 (* l_0_8_91 l_0_8_91)))
 (let ((?x6831 (* 2.0 l_0_8_16)))
 (let ((?x6832 (* ?x6831 l_0_8_17)))
 (let ((?x8803 (+ (- (* (- l_0_8_106) l_0_8_106) ?x6832) (* 1.0 (* l_0_8_16 l_0_8_16)))))
 (let ((?x8807 (+ (- ?x8803 (* (* 2.0 l_0_8_61) l_0_8_62)) (* 4.0 (* l_0_8_61 l_0_8_61)))))
 (= (- (+ ?x8807 (* (* (/ 1.0 2.0) l_0_8_76) l_0_8_77)) ?x8810) 0.0)))))))
(assert
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x7003 (* ?x7002 l_0_8_47)))
 (let ((?x6999 (* 2.0 l_0_8_31)))
 (let ((?x7000 (* ?x6999 l_0_8_32)))
 (let ((?x8839 (- (+ (- (* (* (- 2.0) l_0_8_16) l_0_8_22) ?x7000) ?x7003) (* (* 2.0 l_0_8_61) l_0_8_67))))
 (= (+ ?x8839 (* (* (/ 1.0 2.0) l_0_8_76) l_0_8_82)) 0.0)))))))
(assert
 (let ((?x7063 (* l_0_8_48 l_0_8_48)))
 (let ((?x7061 (* l_0_8_47 l_0_8_47)))
 (let ((?x7059 (* l_0_8_33 l_0_8_33)))
 (let ((?x7057 (* l_0_8_32 l_0_8_32)))
 (let ((?x6762 (* 2.0 l_0_8_18)))
 (let ((?x7678 (* ?x6762 l_0_8_23)))
 (let ((?x6757 (* 2.0 l_0_8_17)))
 (let ((?x7676 (* ?x6757 l_0_8_22)))
 (let ((?x6831 (* 2.0 l_0_8_16)))
 (let ((?x7256 (* ?x6831 l_0_8_22)))
 (let ((?x8861 (- (- (- (+ (* (* (- 2.0) l_0_8_106) l_0_8_112) ?x7256) ?x7676) ?x7678) ?x7057)))
 (let ((?x8866 (+ (+ (+ (- ?x8861 ?x7059) ?x7061) ?x7063) (* (* 8.0 l_0_8_61) l_0_8_67))))
 (let ((?x8870 (- (- ?x8866 (* (* 2.0 l_0_8_62) l_0_8_67)) (* (* 2.0 l_0_8_63) l_0_8_68))))
 (let ((?x8874 (+ (+ ?x8870 (* (* (/ 1.0 2.0) l_0_8_77) l_0_8_82)) (* (* (/ 1.0 2.0) l_0_8_78) l_0_8_83))))
 (= (- ?x8874 (* (* 2.0 l_0_8_91) l_0_8_97)) 0.0))))))))))))))))
(assert
 (let ((?x8937 (* l_0_8_70 l_0_8_70)))
 (let ((?x8935 (* l_0_8_69 l_0_8_69)))
 (let ((?x8933 (* l_0_8_68 l_0_8_68)))
 (let ((?x8931 (* l_0_8_67 l_0_8_67)))
 (let ((?x7159 (* 2.0 l_0_8_48)))
 (let ((?x7294 (* ?x7159 l_0_8_53)))
 (let ((?x7156 (* 2.0 l_0_8_47)))
 (let ((?x7290 (* ?x7156 l_0_8_52)))
 (let ((?x7153 (* 2.0 l_0_8_33)))
 (let ((?x7286 (* ?x7153 l_0_8_38)))
 (let ((?x7150 (* 2.0 l_0_8_32)))
 (let ((?x7282 (* ?x7150 l_0_8_37)))
 (let ((?x8189 (* l_0_8_25 l_0_8_25)))
 (let ((?x8187 (* l_0_8_24 l_0_8_24)))
 (let ((?x8926 (- (- (- (* (- l_0_8_22) l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x8187) ?x8189)))
 (let ((?x8936 (- (- (- (+ (+ (- (- ?x8926 ?x7282) ?x7286) ?x7290) ?x7294) ?x8931) ?x8933) ?x8935)))
 (let ((?x8942 (+ (+ (- ?x8936 ?x8937) (* (/ 1.0 4.0) (* l_0_8_82 l_0_8_82))) (* (/ 1.0 4.0) (* l_0_8_83 l_0_8_83)))))
 (let ((?x8946 (+ (+ ?x8942 (* (/ 1.0 4.0) (* l_0_8_84 l_0_8_84))) (* (/ 1.0 4.0) (* l_0_8_85 l_0_8_85)))))
 (= ?x8946 0.0))))))))))))))))))))
(assert
 (let ((?x6762 (* 2.0 l_0_8_18)))
 (let ((?x7678 (* ?x6762 l_0_8_23)))
 (let ((?x6757 (* 2.0 l_0_8_17)))
 (let ((?x7676 (* ?x6757 l_0_8_22)))
 (let ((?x8985 (- (* (* (- 2.0) l_0_8_107) l_0_8_112) (* (* 2.0 l_0_8_108) l_0_8_113))))
 (let ((?x8991 (+ (+ (+ (+ ?x8985 ?x7676) ?x7678) (* (* 8.0 l_0_8_62) l_0_8_67)) (* (* 8.0 l_0_8_63) l_0_8_68))))
 (let ((?x8995 (- (- ?x8991 (* (* 2.0 l_0_8_92) l_0_8_97)) (* (* 2.0 l_0_8_93) l_0_8_98))))
 (= ?x8995 0.0)))))))))
(assert
 (let ((?x9051 (* l_0_8_99 l_0_8_99)))
 (let ((?x9049 (* l_0_8_98 l_0_8_98)))
 (let ((?x9047 (* l_0_8_97 l_0_8_97)))
 (let ((?x8937 (* l_0_8_70 l_0_8_70)))
 (let ((?x9045 (* 4.0 ?x8937)))
 (let ((?x8935 (* l_0_8_69 l_0_8_69)))
 (let ((?x9043 (* 4.0 ?x8935)))
 (let ((?x8933 (* l_0_8_68 l_0_8_68)))
 (let ((?x9041 (* 4.0 ?x8933)))
 (let ((?x8931 (* l_0_8_67 l_0_8_67)))
 (let ((?x9039 (* 4.0 ?x8931)))
 (let ((?x9029 (* l_0_8_115 l_0_8_115)))
 (let ((?x9027 (* l_0_8_114 l_0_8_114)))
 (let ((?x9025 (* l_0_8_113 l_0_8_113)))
 (let ((?x9026 (- (- (* (- l_0_8_100) l_0_8_100) (* l_0_8_112 l_0_8_112)) ?x9025)))
 (let ((?x9034 (+ (+ (- (- ?x9026 ?x9027) ?x9029) (* 1.0 (* l_0_8_22 l_0_8_22))) (* 1.0 (* l_0_8_23 l_0_8_23)))))
 (let ((?x9038 (+ (+ ?x9034 (* 1.0 (* l_0_8_24 l_0_8_24))) (* 1.0 (* l_0_8_25 l_0_8_25)))))
 (let ((?x9052 (- (- (- (+ (+ (+ (+ ?x9038 ?x9039) ?x9041) ?x9043) ?x9045) ?x9047) ?x9049) ?x9051)))
 (= ?x9052 0.0))))))))))))))))))))
(assert
 (= (+ (* (- l_0_8_31) l_0_8_31) (* l_0_8_46 l_0_8_46)) 0.0))
(assert
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x9092 (* ?x7002 l_0_8_49)))
 (= (+ (* (* (- 2.0) l_0_8_31) l_0_8_34) ?x9092) 0.0))))
(assert
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x9098 (* ?x7002 l_0_8_52)))
 (= (+ (* (* (- 2.0) l_0_8_31) l_0_8_37) ?x9098) 0.0))))
(assert
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x9115 (* ?x7002 l_0_8_56)))
 (let ((?x9098 (* ?x7002 l_0_8_52)))
 (let ((?x6999 (* 2.0 l_0_8_31)))
 (let ((?x9108 (* ?x6999 l_0_8_41)))
 (let ((?x9106 (* ?x6999 l_0_8_37)))
 (= (+ (- (- ?x9106 ?x9108) ?x9098) ?x9115) 0.0))))))))
(assert
 (let ((?x9143 (* l_0_8_51 l_0_8_51)))
 (let ((?x9141 (* l_0_8_50 l_0_8_50)))
 (let ((?x9139 (* l_0_8_49 l_0_8_49)))
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x9098 (* ?x7002 l_0_8_52)))
 (let ((?x9136 (* l_0_8_36 l_0_8_36)))
 (let ((?x9134 (* l_0_8_35 l_0_8_35)))
 (let ((?x9135 (- (- (* (* 2.0 l_0_8_31) l_0_8_37) (* l_0_8_34 l_0_8_34)) ?x9134)))
 (= (+ (+ (+ (- (- ?x9135 ?x9136) ?x9098) ?x9139) ?x9141) ?x9143) 0.0))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_8_51)))
 (let ((?x9173 (* ?x9172 l_0_8_54)))
 (let ((?x9169 (* 2.0 l_0_8_50)))
 (let ((?x9170 (* ?x9169 l_0_8_53)))
 (let ((?x9166 (* 2.0 l_0_8_49)))
 (let ((?x9167 (* ?x9166 l_0_8_52)))
 (let ((?x9163 (* 2.0 l_0_8_36)))
 (let ((?x9164 (* ?x9163 l_0_8_39)))
 (let ((?x9160 (* 2.0 l_0_8_35)))
 (let ((?x9161 (* ?x9160 l_0_8_38)))
 (let ((?x9171 (+ (+ (- (- (* (* (- 2.0) l_0_8_34) l_0_8_37) ?x9161) ?x9164) ?x9167) ?x9170)))
 (= (+ ?x9171 ?x9173) 0.0)))))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_8_51)))
 (let ((?x9216 (* ?x9172 l_0_8_58)))
 (let ((?x9173 (* ?x9172 l_0_8_54)))
 (let ((?x9169 (* 2.0 l_0_8_50)))
 (let ((?x9213 (* ?x9169 l_0_8_57)))
 (let ((?x9170 (* ?x9169 l_0_8_53)))
 (let ((?x9166 (* 2.0 l_0_8_49)))
 (let ((?x9210 (* ?x9166 l_0_8_56)))
 (let ((?x9167 (* ?x9166 l_0_8_52)))
 (let ((?x9163 (* 2.0 l_0_8_36)))
 (let ((?x9207 (* ?x9163 l_0_8_43)))
 (let ((?x9164 (* ?x9163 l_0_8_39)))
 (let ((?x9160 (* 2.0 l_0_8_35)))
 (let ((?x9204 (* ?x9160 l_0_8_42)))
 (let ((?x9161 (* ?x9160 l_0_8_38)))
 (let ((?x9191 (* 2.0 l_0_8_34)))
 (let ((?x9195 (* ?x9191 l_0_8_41)))
 (let ((?x9193 (* ?x9191 l_0_8_37)))
 (let ((?x9211 (+ (- (- (+ (- (+ (- ?x9193 ?x9195) ?x9161) ?x9204) ?x9164) ?x9207) ?x9167) ?x9210)))
 (= (+ (- (+ (- ?x9211 ?x9170) ?x9213) ?x9173) ?x9216) 0.0)))))))))))))))))))))
(assert
 (let ((?x9275 (* l_0_8_55 l_0_8_55)))
 (let ((?x9273 (* l_0_8_54 l_0_8_54)))
 (let ((?x9271 (* l_0_8_53 l_0_8_53)))
 (let ((?x9269 (* l_0_8_52 l_0_8_52)))
 (let ((?x9267 (* l_0_8_40 l_0_8_40)))
 (let ((?x9265 (* l_0_8_39 l_0_8_39)))
 (let ((?x9268 (- (- (- (* (- l_0_8_37) l_0_8_37) (* l_0_8_38 l_0_8_38)) ?x9265) ?x9267)))
 (= (+ (+ (+ (+ ?x9268 ?x9269) ?x9271) ?x9273) ?x9275) 0.0)))))))))
(assert
 (let ((?x9275 (* l_0_8_55 l_0_8_55)))
 (let ((?x9324 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x9273 (* l_0_8_54 l_0_8_54)))
 (let ((?x9320 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x9271 (* l_0_8_53 l_0_8_53)))
 (let ((?x9316 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x9269 (* l_0_8_52 l_0_8_52)))
 (let ((?x9312 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x9267 (* l_0_8_40 l_0_8_40)))
 (let ((?x9308 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9265 (* l_0_8_39 l_0_8_39)))
 (let ((?x9304 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9263 (* l_0_8_38 l_0_8_38)))
 (let ((?x9300 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9301 (- (+ (* (* (- 2.0) l_0_8_37) l_0_8_41) (* l_0_8_37 l_0_8_37)) ?x9300)))
 (let ((?x9314 (- (+ (+ (- (+ (- (+ ?x9301 ?x9263) ?x9304) ?x9265) ?x9308) ?x9267) ?x9312) ?x9269)))
 (= (- (+ (- (+ (- (+ ?x9314 ?x9316) ?x9271) ?x9320) ?x9273) ?x9324) ?x9275) 0.0))))))))))))))))))
(assert
 (let ((?x9399 (* l_0_8_60 l_0_8_60)))
 (let ((?x9397 (* l_0_8_59 l_0_8_59)))
 (let ((?x9395 (* l_0_8_58 l_0_8_58)))
 (let ((?x9393 (* l_0_8_57 l_0_8_57)))
 (let ((?x9391 (* l_0_8_56 l_0_8_56)))
 (let ((?x9324 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x9320 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x9316 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x9312 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x9385 (* l_0_8_45 l_0_8_45)))
 (let ((?x9383 (* l_0_8_44 l_0_8_44)))
 (let ((?x9381 (* l_0_8_43 l_0_8_43)))
 (let ((?x9379 (* l_0_8_42 l_0_8_42)))
 (let ((?x9377 (* l_0_8_41 l_0_8_41)))
 (let ((?x9308 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9304 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9300 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9376 (+ (+ (+ (* (* 2.0 l_0_8_37) l_0_8_41) ?x9300) ?x9304) ?x9308)))
 (let ((?x9388 (- (- (- (- (- (- (- ?x9376 ?x9377) ?x9379) ?x9381) ?x9383) ?x9385) ?x9312) ?x9316)))
 (let ((?x9400 (+ (+ (+ (+ (+ (- (- ?x9388 ?x9320) ?x9324) ?x9391) ?x9393) ?x9395) ?x9397) ?x9399)))
 (= ?x9400 0.0))))))))))))))))))))))
(assert
 (= (- (* l_0_8_31 l_0_8_31) (* l_0_8_46 l_0_8_46)) 0.0))
(assert
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x9092 (* ?x7002 l_0_8_49)))
 (= (- (* (* 2.0 l_0_8_31) l_0_8_34) ?x9092) 0.0))))
(assert
 (let ((?x9143 (* l_0_8_51 l_0_8_51)))
 (let ((?x9141 (* l_0_8_50 l_0_8_50)))
 (let ((?x9139 (* l_0_8_49 l_0_8_49)))
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x9115 (* ?x7002 l_0_8_56)))
 (let ((?x9136 (* l_0_8_36 l_0_8_36)))
 (let ((?x9134 (* l_0_8_35 l_0_8_35)))
 (let ((?x9449 (+ (+ (* (* 2.0 l_0_8_31) l_0_8_41) (* l_0_8_34 l_0_8_34)) ?x9134)))
 (= (- (- (- (- (+ ?x9449 ?x9136) ?x9115) ?x9139) ?x9141) ?x9143) 0.0))))))))))
(assert
 (let ((?x9143 (* l_0_8_51 l_0_8_51)))
 (let ((?x9141 (* l_0_8_50 l_0_8_50)))
 (let ((?x9139 (* l_0_8_49 l_0_8_49)))
 (let ((?x9136 (* l_0_8_36 l_0_8_36)))
 (let ((?x9473 (- (+ (+ (* l_0_8_34 l_0_8_34) (* l_0_8_35 l_0_8_35)) ?x9136) ?x9139)))
 (= (- (- ?x9473 ?x9141) ?x9143) 0.0)))))))
(assert
 (let ((?x9172 (* 2.0 l_0_8_51)))
 (let ((?x9173 (* ?x9172 l_0_8_54)))
 (let ((?x9169 (* 2.0 l_0_8_50)))
 (let ((?x9170 (* ?x9169 l_0_8_53)))
 (let ((?x9166 (* 2.0 l_0_8_49)))
 (let ((?x9167 (* ?x9166 l_0_8_52)))
 (let ((?x9163 (* 2.0 l_0_8_36)))
 (let ((?x9164 (* ?x9163 l_0_8_39)))
 (let ((?x9160 (* 2.0 l_0_8_35)))
 (let ((?x9161 (* ?x9160 l_0_8_38)))
 (let ((?x9191 (* 2.0 l_0_8_34)))
 (let ((?x9193 (* ?x9191 l_0_8_37)))
 (= (- (- (- (+ (+ ?x9193 ?x9161) ?x9164) ?x9167) ?x9170) ?x9173) 0.0))))))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_8_51)))
 (let ((?x9216 (* ?x9172 l_0_8_58)))
 (let ((?x9169 (* 2.0 l_0_8_50)))
 (let ((?x9213 (* ?x9169 l_0_8_57)))
 (let ((?x9166 (* 2.0 l_0_8_49)))
 (let ((?x9210 (* ?x9166 l_0_8_56)))
 (let ((?x9163 (* 2.0 l_0_8_36)))
 (let ((?x9207 (* ?x9163 l_0_8_43)))
 (let ((?x9160 (* 2.0 l_0_8_35)))
 (let ((?x9204 (* ?x9160 l_0_8_42)))
 (let ((?x9191 (* 2.0 l_0_8_34)))
 (let ((?x9195 (* ?x9191 l_0_8_41)))
 (= (- (- (- (+ (+ ?x9195 ?x9204) ?x9207) ?x9210) ?x9213) ?x9216) 0.0))))))))))))))
(assert
 (let ((?x9275 (* l_0_8_55 l_0_8_55)))
 (let ((?x9273 (* l_0_8_54 l_0_8_54)))
 (let ((?x9271 (* l_0_8_53 l_0_8_53)))
 (let ((?x9269 (* l_0_8_52 l_0_8_52)))
 (let ((?x9267 (* l_0_8_40 l_0_8_40)))
 (let ((?x9265 (* l_0_8_39 l_0_8_39)))
 (let ((?x9519 (+ (+ (+ (* l_0_8_37 l_0_8_37) (* l_0_8_38 l_0_8_38)) ?x9265) ?x9267)))
 (= (- (- (- (- ?x9519 ?x9269) ?x9271) ?x9273) ?x9275) 0.0)))))))))
(assert
 (let ((?x9324 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x9320 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x9316 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x9312 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x9308 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9304 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9300 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9376 (+ (+ (+ (* (* 2.0 l_0_8_37) l_0_8_41) ?x9300) ?x9304) ?x9308)))
 (= (- (- (- (- ?x9376 ?x9312) ?x9316) ?x9320) ?x9324) 0.0))))))))))
(assert
 (let ((?x9399 (* l_0_8_60 l_0_8_60)))
 (let ((?x9397 (* l_0_8_59 l_0_8_59)))
 (let ((?x9395 (* l_0_8_58 l_0_8_58)))
 (let ((?x9393 (* l_0_8_57 l_0_8_57)))
 (let ((?x9391 (* l_0_8_56 l_0_8_56)))
 (let ((?x9385 (* l_0_8_45 l_0_8_45)))
 (let ((?x9383 (* l_0_8_44 l_0_8_44)))
 (let ((?x9381 (* l_0_8_43 l_0_8_43)))
 (let ((?x9549 (+ (+ (+ (* l_0_8_41 l_0_8_41) (* l_0_8_42 l_0_8_42)) ?x9381) ?x9383)))
 (= (- (- (- (- (- (+ ?x9549 ?x9385) ?x9391) ?x9393) ?x9395) ?x9397) ?x9399) 0.0)))))))))))
(assert
 (= (- (* l_0_8_31 l_0_8_31) (* l_0_8_46 l_0_8_46)) 0.0))
(assert
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x9092 (* ?x7002 l_0_8_49)))
 (= (- (* (* 2.0 l_0_8_31) l_0_8_34) ?x9092) 0.0))))
(assert
 (let ((?x7002 (* 2.0 l_0_8_46)))
 (let ((?x9115 (* ?x7002 l_0_8_56)))
 (let ((?x6999 (* 2.0 l_0_8_31)))
 (let ((?x9108 (* ?x6999 l_0_8_41)))
 (= (- ?x9108 ?x9115) 0.0))))))
(assert
 (let ((?x9172 (* 2.0 l_0_8_51)))
 (let ((?x9216 (* ?x9172 l_0_8_58)))
 (let ((?x9169 (* 2.0 l_0_8_50)))
 (let ((?x9213 (* ?x9169 l_0_8_57)))
 (let ((?x9166 (* 2.0 l_0_8_49)))
 (let ((?x9210 (* ?x9166 l_0_8_56)))
 (let ((?x9163 (* 2.0 l_0_8_36)))
 (let ((?x9207 (* ?x9163 l_0_8_43)))
 (let ((?x9160 (* 2.0 l_0_8_35)))
 (let ((?x9204 (* ?x9160 l_0_8_42)))
 (let ((?x9191 (* 2.0 l_0_8_34)))
 (let ((?x9195 (* ?x9191 l_0_8_41)))
 (= (- (- (- (+ (+ ?x9195 ?x9204) ?x9207) ?x9210) ?x9213) ?x9216) 0.0))))))))))))))
(assert
 (let ((?x9399 (* l_0_8_60 l_0_8_60)))
 (let ((?x9397 (* l_0_8_59 l_0_8_59)))
 (let ((?x9395 (* l_0_8_58 l_0_8_58)))
 (let ((?x9393 (* l_0_8_57 l_0_8_57)))
 (let ((?x9391 (* l_0_8_56 l_0_8_56)))
 (let ((?x9385 (* l_0_8_45 l_0_8_45)))
 (let ((?x9383 (* l_0_8_44 l_0_8_44)))
 (let ((?x9381 (* l_0_8_43 l_0_8_43)))
 (let ((?x9549 (+ (+ (+ (* l_0_8_41 l_0_8_41) (* l_0_8_42 l_0_8_42)) ?x9381) ?x9383)))
 (= (- (- (- (- (- (+ ?x9549 ?x9385) ?x9391) ?x9393) ?x9395) ?x9397) ?x9399) 0.0)))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (let ((?x9639 (* l_0_9_48 l_0_9_48)))
 (let ((?x9637 (* l_0_9_47 l_0_9_47)))
 (let ((?x9635 (* l_0_9_33 l_0_9_33)))
 (let ((?x9633 (* l_0_9_32 l_0_9_32)))
 (let ((?x9630 (* 2.0 l_0_9_18)))
 (let ((?x9631 (* ?x9630 l_0_9_23)))
 (let ((?x9627 (* 2.0 l_0_9_17)))
 (let ((?x9628 (* ?x9627 l_0_9_22)))
 (let ((?x9624 (* 2.0 l_0_9_16)))
 (let ((?x9625 (* ?x9624 l_0_9_22)))
 (let ((?x9623 (- (* (* (- 2.0) l_0_9_106) l_0_9_112) (* (* 2.0 l_0_9_121) l_0_9_127))))
 (let ((?x9640 (+ (+ (- (- (- (- (+ ?x9623 ?x9625) ?x9628) ?x9631) ?x9633) ?x9635) ?x9637) ?x9639)))
 (let ((?x9646 (- (+ ?x9640 (* (* 8.0 l_0_9_61) l_0_9_67)) (* (* 2.0 l_0_9_62) l_0_9_67))))
 (let ((?x9652 (+ (- ?x9646 (* (* 2.0 l_0_9_63) l_0_9_68)) (* (* (/ 1.0 2.0) l_0_9_77) l_0_9_82))))
 (let ((?x9658 (- (+ ?x9652 (* (* (/ 1.0 2.0) l_0_9_78) l_0_9_83)) (* (* 2.0 l_0_9_91) l_0_9_97))))
 (= (+ ?x9658 (/ 1.0 4.0)) 0.0)))))))))))))))))
(assert
 (let ((?x9775 (* l_0_9_96 l_0_9_96)))
 (let ((?x9773 (* l_0_9_95 l_0_9_95)))
 (let ((?x9771 (* l_0_9_94 l_0_9_94)))
 (let ((?x9768 (* 2.0 l_0_9_78)))
 (let ((?x9769 (* ?x9768 l_0_9_80)))
 (let ((?x9765 (* 2.0 l_0_9_77)))
 (let ((?x9766 (* ?x9765 l_0_9_79)))
 (let ((?x9762 (* l_0_9_66 l_0_9_66)))
 (let ((?x9763 (* 4.0 ?x9762)))
 (let ((?x9759 (* l_0_9_65 l_0_9_65)))
 (let ((?x9760 (* 4.0 ?x9759)))
 (let ((?x9756 (* l_0_9_64 l_0_9_64)))
 (let ((?x9757 (* 4.0 ?x9756)))
 (let ((?x9639 (* l_0_9_48 l_0_9_48)))
 (let ((?x9637 (* l_0_9_47 l_0_9_47)))
 (let ((?x9635 (* l_0_9_33 l_0_9_33)))
 (let ((?x9633 (* l_0_9_32 l_0_9_32)))
 (let ((?x9735 (* l_0_9_126 l_0_9_126)))
 (let ((?x9733 (* l_0_9_125 l_0_9_125)))
 (let ((?x9731 (* l_0_9_124 l_0_9_124)))
 (let ((?x9729 (* l_0_9_111 l_0_9_111)))
 (let ((?x9730 (- (- (* (- l_0_9_109) l_0_9_109) (* l_0_9_110 l_0_9_110)) ?x9729)))
 (let ((?x9739 (- (- (- (- ?x9730 ?x9731) ?x9733) ?x9735) (* (* 4.0 l_0_9_17) l_0_9_19))))
 (let ((?x9745 (+ (- ?x9739 (* (* 4.0 l_0_9_18) l_0_9_20)) (* 1.0 (* l_0_9_19 l_0_9_19)))))
 (let ((?x9751 (+ (+ ?x9745 (* 1.0 (* l_0_9_20 l_0_9_20))) (* 1.0 (* l_0_9_21 l_0_9_21)))))
 (let ((?x9764 (+ (+ (+ (- (- (+ (+ ?x9751 ?x9633) ?x9635) ?x9637) ?x9639) ?x9757) ?x9760) ?x9763)))
 (= (- (- (- (- (+ (+ ?x9764 ?x9766) ?x9769) ?x9771) ?x9773) ?x9775) (/ 1.0 4.0)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9849 (* 2.0 l_0_9_76)))
 (let ((?x9850 (* ?x9849 l_0_9_77)))
 (let ((?x9630 (* 2.0 l_0_9_18)))
 (let ((?x9841 (* ?x9630 l_0_9_20)))
 (let ((?x9627 (* 2.0 l_0_9_17)))
 (let ((?x9839 (* ?x9627 l_0_9_19)))
 (let ((?x9624 (* 2.0 l_0_9_16)))
 (let ((?x9837 (* ?x9624 l_0_9_19)))
 (let ((?x9833 (- (* (* (- 2.0) l_0_9_106) l_0_9_109) (* (* 2.0 l_0_9_121) l_0_9_124))))
 (let ((?x9842 (- (- (+ (- ?x9833 (* (* 4.0 l_0_9_16) l_0_9_17)) ?x9837) ?x9839) ?x9841)))
 (let ((?x9846 (- (+ ?x9842 (* (* 8.0 l_0_9_61) l_0_9_64)) (* (* 2.0 l_0_9_62) l_0_9_64))))
 (let ((?x9853 (+ (+ (- ?x9846 (* (* 2.0 l_0_9_63) l_0_9_65)) ?x9850) (* (* (/ 1.0 2.0) l_0_9_77) l_0_9_79))))
 (let ((?x9857 (- (+ ?x9853 (* (* (/ 1.0 2.0) l_0_9_78) l_0_9_80)) (* (* 2.0 l_0_9_91) l_0_9_94))))
 (= ?x9857 0.0)))))))))))))))
(assert
 (let ((?x9938 (* l_0_9_91 l_0_9_91)))
 (let ((?x9624 (* 2.0 l_0_9_16)))
 (let ((?x9924 (* ?x9624 l_0_9_17)))
 (let ((?x9925 (- (- (* (- l_0_9_106) l_0_9_106) (* l_0_9_121 l_0_9_121)) ?x9924)))
 (let ((?x9931 (- (+ ?x9925 (* 1.0 (* l_0_9_16 l_0_9_16))) (* (* 2.0 l_0_9_61) l_0_9_62))))
 (let ((?x9937 (+ (+ ?x9931 (* 4.0 (* l_0_9_61 l_0_9_61))) (* (* (/ 1.0 2.0) l_0_9_76) l_0_9_77))))
 (= (- ?x9937 ?x9938) 0.0))))))))
(assert
 (let ((?x9849 (* 2.0 l_0_9_76)))
 (let ((?x9850 (* ?x9849 l_0_9_77)))
 (let ((?x9639 (* l_0_9_48 l_0_9_48)))
 (let ((?x9637 (* l_0_9_47 l_0_9_47)))
 (let ((?x9635 (* l_0_9_33 l_0_9_33)))
 (let ((?x9633 (* l_0_9_32 l_0_9_32)))
 (let ((?x9630 (* 2.0 l_0_9_18)))
 (let ((?x9984 (* ?x9630 l_0_9_27)))
 (let ((?x9627 (* 2.0 l_0_9_17)))
 (let ((?x9982 (* ?x9627 l_0_9_26)))
 (let ((?x9624 (* 2.0 l_0_9_16)))
 (let ((?x9980 (* ?x9624 l_0_9_26)))
 (let ((?x9924 (* ?x9624 l_0_9_17)))
 (let ((?x9973 (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_101) l_0_9_91))))
 (let ((?x9978 (- (- ?x9973 (* (* 2.0 l_0_9_106) l_0_9_116)) (* (* 2.0 l_0_9_121) l_0_9_131))))
 (let ((?x9988 (- (+ (+ (- (- (+ (+ ?x9978 ?x9924) ?x9980) ?x9982) ?x9984) ?x9633) ?x9635) ?x9637)))
 (let ((?x9993 (- (+ (- ?x9988 ?x9639) (* (* 8.0 l_0_9_61) l_0_9_71)) (* (* 2.0 l_0_9_62) l_0_9_71))))
 (let ((?x9998 (+ (- (- ?x9993 (* (* 2.0 l_0_9_63) l_0_9_72)) ?x9850) (* (* (/ 1.0 2.0) l_0_9_77) l_0_9_86))))
 (= (- (+ ?x9998 (* (* (/ 1.0 2.0) l_0_9_78) l_0_9_87)) (/ 1.0 4.0)) 0.0))))))))))))))))))))
(assert
 (let ((?x10083 (* l_0_9_76 l_0_9_76)))
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x10077 (* ?x10076 l_0_9_47)))
 (let ((?x10073 (* 2.0 l_0_9_31)))
 (let ((?x10074 (* ?x10073 l_0_9_32)))
 (let ((?x9926 (* l_0_9_16 l_0_9_16)))
 (let ((?x10072 (+ (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_16) l_0_9_26)) ?x9926)))
 (let ((?x10082 (+ (- (- (+ ?x10072 ?x10074) ?x10077) (* (* 2.0 l_0_9_61) l_0_9_71)) (* (* (/ 1.0 2.0) l_0_9_76) l_0_9_86))))
 (= (- ?x10082 ?x10083) 0.0))))))))))
(assert
 (let ((?x9849 (* 2.0 l_0_9_76)))
 (let ((?x10150 (* ?x9849 l_0_9_86)))
 (let ((?x10148 (* ?x9849 l_0_9_79)))
 (let ((?x10136 (* 2.0 l_0_9_48)))
 (let ((?x10137 (* ?x10136 l_0_9_50)))
 (let ((?x10133 (* 2.0 l_0_9_47)))
 (let ((?x10134 (* ?x10133 l_0_9_49)))
 (let ((?x10130 (* 2.0 l_0_9_33)))
 (let ((?x10131 (* ?x10130 l_0_9_35)))
 (let ((?x10127 (* 2.0 l_0_9_32)))
 (let ((?x10128 (* ?x10127 l_0_9_34)))
 (let ((?x10124 (* 2.0 l_0_9_21)))
 (let ((?x10125 (* ?x10124 l_0_9_28)))
 (let ((?x10121 (* 2.0 l_0_9_20)))
 (let ((?x10122 (* ?x10121 l_0_9_27)))
 (let ((?x10118 (* 2.0 l_0_9_19)))
 (let ((?x10119 (* ?x10118 l_0_9_26)))
 (let ((?x9624 (* 2.0 l_0_9_16)))
 (let ((?x9837 (* ?x9624 l_0_9_19)))
 (let ((?x10117 (- (+ (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x9837) (* (* 4.0 l_0_9_16) l_0_9_26))))
 (let ((?x10138 (- (- (+ (+ (- (- (- ?x10117 ?x10119) ?x10122) ?x10125) ?x10128) ?x10131) ?x10134) ?x10137)))
 (let ((?x10144 (- (- ?x10138 (* (* 2.0 l_0_9_64) l_0_9_71)) (* (* 2.0 l_0_9_65) l_0_9_72))))
 (let ((?x10154 (+ (+ (- (- ?x10144 (* (* 2.0 l_0_9_66) l_0_9_73)) ?x10148) ?x10150) (* (* (/ 1.0 2.0) l_0_9_79) l_0_9_86))))
 (let ((?x10160 (+ (+ ?x10154 (* (* (/ 1.0 2.0) l_0_9_80) l_0_9_87)) (* (* (/ 1.0 2.0) l_0_9_81) l_0_9_88))))
 (= ?x10160 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9849 (* 2.0 l_0_9_76)))
 (let ((?x10280 (* ?x9849 l_0_9_82)))
 (let ((?x10136 (* 2.0 l_0_9_48)))
 (let ((?x10266 (* ?x10136 l_0_9_57)))
 (let ((?x10264 (* ?x10136 l_0_9_53)))
 (let ((?x10133 (* 2.0 l_0_9_47)))
 (let ((?x10262 (* ?x10133 l_0_9_56)))
 (let ((?x10260 (* ?x10133 l_0_9_52)))
 (let ((?x10130 (* 2.0 l_0_9_33)))
 (let ((?x10258 (* ?x10130 l_0_9_42)))
 (let ((?x10256 (* ?x10130 l_0_9_38)))
 (let ((?x10127 (* 2.0 l_0_9_32)))
 (let ((?x10254 (* ?x10127 l_0_9_41)))
 (let ((?x10252 (* ?x10127 l_0_9_37)))
 (let ((?x10249 (* 2.0 l_0_9_25)))
 (let ((?x10250 (* ?x10249 l_0_9_29)))
 (let ((?x10246 (* 2.0 l_0_9_24)))
 (let ((?x10247 (* ?x10246 l_0_9_28)))
 (let ((?x10243 (* 2.0 l_0_9_23)))
 (let ((?x10244 (* ?x10243 l_0_9_27)))
 (let ((?x10241 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x9624 (* 2.0 l_0_9_16)))
 (let ((?x9625 (* ?x9624 l_0_9_22)))
 (let ((?x10248 (- (- (- (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) ?x9625) ?x10241) ?x10244) ?x10247)))
 (let ((?x10263 (+ (- (- (+ (- (+ (- ?x10248 ?x10250) ?x10252) ?x10254) ?x10256) ?x10258) ?x10260) ?x10262)))
 (let ((?x10273 (- (- (+ (- ?x10263 ?x10264) ?x10266) (* (* 2.0 l_0_9_67) l_0_9_71)) (* (* 2.0 l_0_9_68) l_0_9_72))))
 (let ((?x10279 (- (- ?x10273 (* (* 2.0 l_0_9_69) l_0_9_73)) (* (* 2.0 l_0_9_70) l_0_9_74))))
 (let ((?x10287 (+ (+ (- ?x10279 ?x10280) (* (* (/ 1.0 2.0) l_0_9_82) l_0_9_86)) (* (* (/ 1.0 2.0) l_0_9_83) l_0_9_87))))
 (let ((?x10293 (+ (+ ?x10287 (* (* (/ 1.0 2.0) l_0_9_84) l_0_9_88)) (* (* (/ 1.0 2.0) l_0_9_85) l_0_9_89))))
 (= ?x10293 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x10437 (* l_0_9_90 l_0_9_90)))
 (let ((?x10438 (* (/ 1.0 4.0) ?x10437)))
 (let ((?x10434 (* l_0_9_89 l_0_9_89)))
 (let ((?x10435 (* (/ 1.0 4.0) ?x10434)))
 (let ((?x10431 (* l_0_9_88 l_0_9_88)))
 (let ((?x10432 (* (/ 1.0 4.0) ?x10431)))
 (let ((?x10428 (* l_0_9_87 l_0_9_87)))
 (let ((?x10429 (* (/ 1.0 4.0) ?x10428)))
 (let ((?x10425 (* l_0_9_86 l_0_9_86)))
 (let ((?x10426 (* (/ 1.0 4.0) ?x10425)))
 (let ((?x9849 (* 2.0 l_0_9_76)))
 (let ((?x10150 (* ?x9849 l_0_9_86)))
 (let ((?x10422 (* l_0_9_75 l_0_9_75)))
 (let ((?x10420 (* l_0_9_74 l_0_9_74)))
 (let ((?x10418 (* l_0_9_73 l_0_9_73)))
 (let ((?x10416 (* l_0_9_72 l_0_9_72)))
 (let ((?x10414 (* l_0_9_71 l_0_9_71)))
 (let ((?x10136 (* 2.0 l_0_9_48)))
 (let ((?x10266 (* ?x10136 l_0_9_57)))
 (let ((?x10133 (* 2.0 l_0_9_47)))
 (let ((?x10262 (* ?x10133 l_0_9_56)))
 (let ((?x10130 (* 2.0 l_0_9_33)))
 (let ((?x10258 (* ?x10130 l_0_9_42)))
 (let ((?x10127 (* 2.0 l_0_9_32)))
 (let ((?x10254 (* ?x10127 l_0_9_41)))
 (let ((?x10408 (* l_0_9_30 l_0_9_30)))
 (let ((?x10406 (* l_0_9_29 l_0_9_29)))
 (let ((?x10404 (* l_0_9_28 l_0_9_28)))
 (let ((?x10402 (* l_0_9_27 l_0_9_27)))
 (let ((?x10400 (* l_0_9_26 l_0_9_26)))
 (let ((?x9624 (* 2.0 l_0_9_16)))
 (let ((?x9980 (* ?x9624 l_0_9_26)))
 (let ((?x10405 (- (- (- (+ (* (* (- 2.0) l_0_9_1) l_0_9_11) ?x9980) ?x10400) ?x10402) ?x10404)))
 (let ((?x10415 (- (- (- (+ (+ (- (- ?x10405 ?x10406) ?x10408) ?x10254) ?x10258) ?x10262) ?x10266) ?x10414)))
 (let ((?x10430 (+ (+ (- (- (- (- (- ?x10415 ?x10416) ?x10418) ?x10420) ?x10422) ?x10150) ?x10426) ?x10429)))
 (= (+ (+ (+ ?x10430 ?x10432) ?x10435) ?x10438) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10524 (* l_0_9_78 l_0_9_78)))
 (let ((?x10522 (* l_0_9_77 l_0_9_77)))
 (let ((?x10514 (* l_0_9_3 l_0_9_3)))
 (let ((?x10512 (* l_0_9_2 l_0_9_2)))
 (let ((?x10510 (* l_0_9_18 l_0_9_18)))
 (let ((?x9630 (* 2.0 l_0_9_18)))
 (let ((?x9984 (* ?x9630 l_0_9_27)))
 (let ((?x10507 (* l_0_9_17 l_0_9_17)))
 (let ((?x9627 (* 2.0 l_0_9_17)))
 (let ((?x9982 (* ?x9627 l_0_9_26)))
 (let ((?x10493 (- (* (* (- 2.0) l_0_9_101) l_0_9_92) (* (* 2.0 l_0_9_102) l_0_9_93))))
 (let ((?x10499 (- (- ?x10493 (* (* 2.0 l_0_9_107) l_0_9_116)) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x10505 (- (- ?x10499 (* (* 2.0 l_0_9_122) l_0_9_131)) (* (* 2.0 l_0_9_123) l_0_9_132))))
 (let ((?x10518 (+ (- (- (+ (+ (+ (+ ?x10505 ?x9982) ?x10507) ?x9984) ?x10510) ?x10512) ?x10514) (* (* 8.0 l_0_9_62) l_0_9_71))))
 (= (- (- (+ ?x10518 (* (* 8.0 l_0_9_63) l_0_9_72)) ?x10522) ?x10524) 0.0))))))))))))))))
(assert
 (let ((?x9768 (* 2.0 l_0_9_78)))
 (let ((?x10628 (* ?x9768 l_0_9_87)))
 (let ((?x9769 (* ?x9768 l_0_9_80)))
 (let ((?x9765 (* 2.0 l_0_9_77)))
 (let ((?x10625 (* ?x9765 l_0_9_86)))
 (let ((?x9766 (* ?x9765 l_0_9_79)))
 (let ((?x10124 (* 2.0 l_0_9_21)))
 (let ((?x10125 (* ?x10124 l_0_9_28)))
 (let ((?x10121 (* 2.0 l_0_9_20)))
 (let ((?x10122 (* ?x10121 l_0_9_27)))
 (let ((?x10118 (* 2.0 l_0_9_19)))
 (let ((?x10119 (* ?x10118 l_0_9_26)))
 (let ((?x9630 (* 2.0 l_0_9_18)))
 (let ((?x9841 (* ?x9630 l_0_9_20)))
 (let ((?x9627 (* 2.0 l_0_9_17)))
 (let ((?x9839 (* ?x9627 l_0_9_19)))
 (let ((?x10578 (- (* (* (- 2.0) l_0_9_101) l_0_9_94) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x10584 (- (- ?x10578 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_109) l_0_9_116))))
 (let ((?x10590 (- (- ?x10584 (* (* 2.0 l_0_9_110) l_0_9_117)) (* (* 2.0 l_0_9_111) l_0_9_118))))
 (let ((?x10596 (- (- ?x10590 (* (* 2.0 l_0_9_124) l_0_9_131)) (* (* 2.0 l_0_9_125) l_0_9_132))))
 (let ((?x10602 (- (+ (- ?x10596 (* (* 2.0 l_0_9_126) l_0_9_133)) ?x9839) (* (* 4.0 l_0_9_17) l_0_9_26))))
 (let ((?x10609 (- (+ (- (+ ?x10602 ?x9841) (* (* 4.0 l_0_9_18) l_0_9_27)) ?x10119) (* (* 2.0 l_0_9_2) l_0_9_4))))
 (let ((?x10617 (+ (- (+ (+ ?x10609 ?x10122) ?x10125) (* (* 2.0 l_0_9_3) l_0_9_5)) (* (* 8.0 l_0_9_64) l_0_9_71))))
 (let ((?x10623 (+ (+ ?x10617 (* (* 8.0 l_0_9_65) l_0_9_72)) (* (* 8.0 l_0_9_66) l_0_9_73))))
 (= (+ (- (+ (- ?x10623 ?x9766) ?x10625) ?x9769) ?x10628) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9768 (* 2.0 l_0_9_78)))
 (let ((?x10780 (* ?x9768 l_0_9_83)))
 (let ((?x9765 (* 2.0 l_0_9_77)))
 (let ((?x10778 (* ?x9765 l_0_9_82)))
 (let ((?x10249 (* 2.0 l_0_9_25)))
 (let ((?x10250 (* ?x10249 l_0_9_29)))
 (let ((?x10246 (* 2.0 l_0_9_24)))
 (let ((?x10247 (* ?x10246 l_0_9_28)))
 (let ((?x10243 (* 2.0 l_0_9_23)))
 (let ((?x10244 (* ?x10243 l_0_9_27)))
 (let ((?x10241 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x9630 (* 2.0 l_0_9_18)))
 (let ((?x9631 (* ?x9630 l_0_9_23)))
 (let ((?x9627 (* 2.0 l_0_9_17)))
 (let ((?x9628 (* ?x9627 l_0_9_22)))
 (let ((?x10727 (- (* (* (- 2.0) l_0_9_100) l_0_9_104) (* (* 2.0 l_0_9_101) l_0_9_97))))
 (let ((?x10731 (- (- ?x10727 (* (* 2.0 l_0_9_102) l_0_9_98)) (* (* 2.0 l_0_9_103) l_0_9_99))))
 (let ((?x10737 (- (- ?x10731 (* (* 2.0 l_0_9_112) l_0_9_116)) (* (* 2.0 l_0_9_113) l_0_9_117))))
 (let ((?x10743 (- (- ?x10737 (* (* 2.0 l_0_9_114) l_0_9_118)) (* (* 2.0 l_0_9_115) l_0_9_119))))
 (let ((?x10749 (- (- ?x10743 (* (* 2.0 l_0_9_127) l_0_9_131)) (* (* 2.0 l_0_9_128) l_0_9_132))))
 (let ((?x10755 (- (- ?x10749 (* (* 2.0 l_0_9_129) l_0_9_133)) (* (* 2.0 l_0_9_130) l_0_9_134))))
 (let ((?x10760 (+ (- (+ (+ ?x10755 ?x9628) ?x9631) (* (* 2.0 l_0_9_2) l_0_9_7)) ?x10241)))
 (let ((?x10765 (- (+ (+ (+ ?x10760 ?x10244) ?x10247) ?x10250) (* (* 2.0 l_0_9_3) l_0_9_8))))
 (let ((?x10771 (+ (+ ?x10765 (* (* 8.0 l_0_9_67) l_0_9_71)) (* (* 8.0 l_0_9_68) l_0_9_72))))
 (let ((?x10777 (+ (+ ?x10771 (* (* 8.0 l_0_9_69) l_0_9_73)) (* (* 8.0 l_0_9_70) l_0_9_74))))
 (= (- (- ?x10777 ?x10778) ?x10780) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x9768 (* 2.0 l_0_9_78)))
 (let ((?x10628 (* ?x9768 l_0_9_87)))
 (let ((?x9765 (* 2.0 l_0_9_77)))
 (let ((?x10625 (* ?x9765 l_0_9_86)))
 (let ((?x10422 (* l_0_9_75 l_0_9_75)))
 (let ((?x10937 (* 4.0 ?x10422)))
 (let ((?x10420 (* l_0_9_74 l_0_9_74)))
 (let ((?x10935 (* 4.0 ?x10420)))
 (let ((?x10418 (* l_0_9_73 l_0_9_73)))
 (let ((?x10933 (* 4.0 ?x10418)))
 (let ((?x10416 (* l_0_9_72 l_0_9_72)))
 (let ((?x10931 (* 4.0 ?x10416)))
 (let ((?x10414 (* l_0_9_71 l_0_9_71)))
 (let ((?x10929 (* 4.0 ?x10414)))
 (let ((?x9630 (* 2.0 l_0_9_18)))
 (let ((?x9984 (* ?x9630 l_0_9_27)))
 (let ((?x9627 (* 2.0 l_0_9_17)))
 (let ((?x9982 (* ?x9627 l_0_9_26)))
 (let ((?x10915 (* l_0_9_135 l_0_9_135)))
 (let ((?x10913 (* l_0_9_134 l_0_9_134)))
 (let ((?x10911 (* l_0_9_133 l_0_9_133)))
 (let ((?x10909 (* l_0_9_132 l_0_9_132)))
 (let ((?x10907 (* l_0_9_131 l_0_9_131)))
 (let ((?x10905 (* l_0_9_120 l_0_9_120)))
 (let ((?x10900 (* l_0_9_119 l_0_9_119)))
 (let ((?x10898 (* l_0_9_118 l_0_9_118)))
 (let ((?x10896 (* l_0_9_117 l_0_9_117)))
 (let ((?x10894 (* l_0_9_116 l_0_9_116)))
 (let ((?x10889 (* l_0_9_105 l_0_9_105)))
 (let ((?x10887 (* l_0_9_104 l_0_9_104)))
 (let ((?x10885 (* l_0_9_103 l_0_9_103)))
 (let ((?x10886 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x10885)))
 (let ((?x10895 (- (- (- (- ?x10886 ?x10887) ?x10889) (* (* 2.0 l_0_9_11) l_0_9_2)) ?x10894)))
 (let ((?x10904 (- (- (- (- ?x10895 ?x10896) ?x10898) ?x10900) (* (* 2.0 l_0_9_12) l_0_9_3))))
 (let ((?x10917 (+ (- (- (- (- (- (- ?x10904 ?x10905) ?x10907) ?x10909) ?x10911) ?x10913) ?x10915) ?x9982)))
 (let ((?x10922 (+ (+ (+ ?x10917 ?x9984) (* 1.0 (* l_0_9_26 l_0_9_26))) (* 1.0 (* l_0_9_27 l_0_9_27)))))
 (let ((?x10926 (+ (+ ?x10922 (* 1.0 (* l_0_9_28 l_0_9_28))) (* 1.0 (* l_0_9_29 l_0_9_29)))))
 (let ((?x10934 (+ (+ (+ (+ ?x10926 (* 1.0 (* l_0_9_30 l_0_9_30))) ?x10929) ?x10931) ?x10933)))
 (= (- (- (+ (+ ?x10934 ?x10935) ?x10937) ?x10625) ?x10628) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11043 (* l_0_9_81 l_0_9_81)))
 (let ((?x11040 (* 2.0 l_0_9_81)))
 (let ((?x11041 (* ?x11040 l_0_9_88)))
 (let ((?x11038 (* l_0_9_80 l_0_9_80)))
 (let ((?x11035 (* 2.0 l_0_9_80)))
 (let ((?x11036 (* ?x11035 l_0_9_87)))
 (let ((?x11033 (* l_0_9_79 l_0_9_79)))
 (let ((?x11030 (* 2.0 l_0_9_79)))
 (let ((?x11031 (* ?x11030 l_0_9_86)))
 (let ((?x11028 (* l_0_9_6 l_0_9_6)))
 (let ((?x11026 (* l_0_9_5 l_0_9_5)))
 (let ((?x10136 (* 2.0 l_0_9_48)))
 (let ((?x10266 (* ?x10136 l_0_9_57)))
 (let ((?x10133 (* 2.0 l_0_9_47)))
 (let ((?x10262 (* ?x10133 l_0_9_56)))
 (let ((?x11022 (* l_0_9_4 l_0_9_4)))
 (let ((?x10130 (* 2.0 l_0_9_33)))
 (let ((?x10258 (* ?x10130 l_0_9_42)))
 (let ((?x10127 (* 2.0 l_0_9_32)))
 (let ((?x10254 (* ?x10127 l_0_9_41)))
 (let ((?x9749 (* l_0_9_21 l_0_9_21)))
 (let ((?x9746 (* l_0_9_20 l_0_9_20)))
 (let ((?x11014 (- (+ (* (* (- 4.0) l_0_9_19) l_0_9_26) (* l_0_9_19 l_0_9_19)) (* (* 4.0 l_0_9_20) l_0_9_27))))
 (let ((?x11020 (+ (+ (- (+ ?x11014 ?x9746) (* (* 4.0 l_0_9_21) l_0_9_28)) ?x9749) ?x10254)))
 (let ((?x11032 (+ (- (- (- (- (- (+ ?x11020 ?x10258) ?x11022) ?x10262) ?x10266) ?x11026) ?x11028) ?x11031)))
 (= (- (+ (- (+ (- ?x11032 ?x11033) ?x11036) ?x11038) ?x11041) ?x11043) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x11131 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x11128 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x11125 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x11122 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x11040 (* 2.0 l_0_9_81)))
 (let ((?x11119 (* ?x11040 l_0_9_84)))
 (let ((?x11035 (* 2.0 l_0_9_80)))
 (let ((?x11117 (* ?x11035 l_0_9_83)))
 (let ((?x11030 (* 2.0 l_0_9_79)))
 (let ((?x11115 (* ?x11030 l_0_9_82)))
 (let ((?x10124 (* 2.0 l_0_9_21)))
 (let ((?x11092 (* ?x10124 l_0_9_24)))
 (let ((?x10121 (* 2.0 l_0_9_20)))
 (let ((?x11090 (* ?x10121 l_0_9_23)))
 (let ((?x10118 (* 2.0 l_0_9_19)))
 (let ((?x11089 (* ?x10118 l_0_9_22)))
 (let ((?x11099 (- (- (+ (+ ?x11089 ?x11090) ?x11092) (* (* 4.0 l_0_9_22) l_0_9_26)) (* (* 4.0 l_0_9_23) l_0_9_27))))
 (let ((?x11105 (- (- ?x11099 (* (* 4.0 l_0_9_24) l_0_9_28)) (* (* 4.0 l_0_9_25) l_0_9_29))))
 (let ((?x11111 (- (- ?x11105 (* (* 2.0 l_0_9_4) l_0_9_7)) (* (* 2.0 l_0_9_5) l_0_9_8))))
 (let ((?x11120 (- (- (- (- ?x11111 (* (* 2.0 l_0_9_6) l_0_9_9)) ?x11115) ?x11117) ?x11119)))
 (= (+ (+ (+ (+ ?x11120 ?x11122) ?x11125) ?x11128) ?x11131) 0.0))))))))))))))))))))))
(assert
 (let ((?x10437 (* l_0_9_90 l_0_9_90)))
 (let ((?x10434 (* l_0_9_89 l_0_9_89)))
 (let ((?x10431 (* l_0_9_88 l_0_9_88)))
 (let ((?x10428 (* l_0_9_87 l_0_9_87)))
 (let ((?x10425 (* l_0_9_86 l_0_9_86)))
 (let ((?x11040 (* 2.0 l_0_9_81)))
 (let ((?x11041 (* ?x11040 l_0_9_88)))
 (let ((?x11035 (* 2.0 l_0_9_80)))
 (let ((?x11036 (* ?x11035 l_0_9_87)))
 (let ((?x11030 (* 2.0 l_0_9_79)))
 (let ((?x11031 (* ?x11030 l_0_9_86)))
 (let ((?x10124 (* 2.0 l_0_9_21)))
 (let ((?x10125 (* ?x10124 l_0_9_28)))
 (let ((?x10121 (* 2.0 l_0_9_20)))
 (let ((?x10122 (* ?x10121 l_0_9_27)))
 (let ((?x10118 (* 2.0 l_0_9_19)))
 (let ((?x10119 (* ?x10118 l_0_9_26)))
 (let ((?x11200 (- (* (* (- 2.0) l_0_9_11) l_0_9_4) (* (* 2.0 l_0_9_12) l_0_9_5))))
 (let ((?x11215 (+ (+ (+ (- ?x11200 (* (* 2.0 l_0_9_13) l_0_9_6)) ?x10119) ?x10122) ?x10125)))
 (let ((?x11221 (- (- ?x11215 (* (* 2.0 l_0_9_26) l_0_9_26)) (* (* 2.0 l_0_9_27) l_0_9_27))))
 (let ((?x11227 (- (- ?x11221 (* (* 2.0 l_0_9_28) l_0_9_28)) (* (* 2.0 l_0_9_29) l_0_9_29))))
 (let ((?x11233 (- (- (- (- ?x11227 (* (* 2.0 l_0_9_30) l_0_9_30)) ?x11031) ?x11036) ?x11041)))
 (= (+ (+ (+ (+ (+ ?x11233 ?x10425) ?x10428) ?x10431) ?x10434) ?x10437) 0.0))))))))))))))))))))))))
(assert
 (let ((?x11316 (* l_0_9_9 l_0_9_9)))
 (let ((?x11314 (* l_0_9_85 l_0_9_85)))
 (let ((?x11312 (* l_0_9_84 l_0_9_84)))
 (let ((?x11310 (* l_0_9_83 l_0_9_83)))
 (let ((?x11308 (* l_0_9_82 l_0_9_82)))
 (let ((?x11306 (* l_0_9_8 l_0_9_8)))
 (let ((?x11304 (* l_0_9_7 l_0_9_7)))
 (let ((?x11302 (* l_0_9_25 l_0_9_25)))
 (let ((?x11300 (* l_0_9_24 l_0_9_24)))
 (let ((?x11298 (* l_0_9_23 l_0_9_23)))
 (let ((?x11301 (+ (+ (+ (* (- l_0_9_10) l_0_9_10) (* l_0_9_22 l_0_9_22)) ?x11298) ?x11300)))
 (let ((?x11315 (- (- (- (- (- (- (+ ?x11301 ?x11302) ?x11304) ?x11306) ?x11308) ?x11310) ?x11312) ?x11314)))
 (= (- ?x11315 ?x11316) 0.0))))))))))))))
(assert
 (let ((?x11131 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x11128 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x11125 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x11122 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x10249 (* 2.0 l_0_9_25)))
 (let ((?x10250 (* ?x10249 l_0_9_29)))
 (let ((?x10246 (* 2.0 l_0_9_24)))
 (let ((?x10247 (* ?x10246 l_0_9_28)))
 (let ((?x10243 (* 2.0 l_0_9_23)))
 (let ((?x10244 (* ?x10243 l_0_9_27)))
 (let ((?x10241 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x11348 (- (* (* (- 2.0) l_0_9_10) l_0_9_14) (* (* 2.0 l_0_9_11) l_0_9_7))))
 (let ((?x11352 (- (- ?x11348 (* (* 2.0 l_0_9_12) l_0_9_8)) (* (* 2.0 l_0_9_13) l_0_9_9))))
 (let ((?x11359 (- (- (- (+ (+ (+ (+ ?x11352 ?x10241) ?x10244) ?x10247) ?x10250) ?x11122) ?x11125) ?x11128)))
 (= (- ?x11359 ?x11131) 0.0))))))))))))))))
(assert
 (let ((?x10437 (* l_0_9_90 l_0_9_90)))
 (let ((?x10434 (* l_0_9_89 l_0_9_89)))
 (let ((?x10431 (* l_0_9_88 l_0_9_88)))
 (let ((?x10428 (* l_0_9_87 l_0_9_87)))
 (let ((?x10425 (* l_0_9_86 l_0_9_86)))
 (let ((?x10408 (* l_0_9_30 l_0_9_30)))
 (let ((?x10406 (* l_0_9_29 l_0_9_29)))
 (let ((?x10404 (* l_0_9_28 l_0_9_28)))
 (let ((?x10402 (* l_0_9_27 l_0_9_27)))
 (let ((?x10400 (* l_0_9_26 l_0_9_26)))
 (let ((?x11408 (* l_0_9_15 l_0_9_15)))
 (let ((?x11406 (* l_0_9_14 l_0_9_14)))
 (let ((?x11404 (* l_0_9_13 l_0_9_13)))
 (let ((?x11407 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x11404) ?x11406)))
 (let ((?x11415 (- (+ (+ (+ (+ (+ (- ?x11407 ?x11408) ?x10400) ?x10402) ?x10404) ?x10406) ?x10408) ?x10425)))
 (= (- (- (- (- ?x11415 ?x10428) ?x10431) ?x10434) ?x10437) 0.0)))))))))))))))))
(assert
 (let ((?x10083 (* l_0_9_76 l_0_9_76)))
 (let ((?x11456 (- (* (* (- 2.0) l_0_9_16) l_0_9_19) (* (* 2.0 l_0_9_16) l_0_9_16))))
 (let ((?x11460 (+ (- ?x11456 (* (* 2.0 l_0_9_61) l_0_9_64)) (* (* (/ 1.0 2.0) l_0_9_76) l_0_9_79))))
 (= (+ ?x11460 ?x10083) 0.0)))))
(assert
 (let ((?x9849 (* 2.0 l_0_9_76)))
 (let ((?x10148 (* ?x9849 l_0_9_79)))
 (let ((?x9762 (* l_0_9_66 l_0_9_66)))
 (let ((?x9759 (* l_0_9_65 l_0_9_65)))
 (let ((?x9756 (* l_0_9_64 l_0_9_64)))
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x10077 (* ?x10076 l_0_9_47)))
 (let ((?x10073 (* 2.0 l_0_9_31)))
 (let ((?x10074 (* ?x10073 l_0_9_32)))
 (let ((?x9749 (* l_0_9_21 l_0_9_21)))
 (let ((?x9746 (* l_0_9_20 l_0_9_20)))
 (let ((?x11479 (- (- (* (* (- 4.0) l_0_9_16) l_0_9_19) (* l_0_9_19 l_0_9_19)) ?x9746)))
 (let ((?x11486 (+ (- (- (- (- (+ (- ?x11479 ?x9749) ?x10074) ?x10077) ?x9756) ?x9759) ?x9762) ?x10148)))
 (let ((?x11490 (+ (+ ?x11486 (* (/ 1.0 4.0) (* l_0_9_79 l_0_9_79))) (* (/ 1.0 4.0) (* l_0_9_80 l_0_9_80)))))
 (= (+ ?x11490 (* (/ 1.0 4.0) (* l_0_9_81 l_0_9_81))) 0.0))))))))))))))))
(assert
 (let ((?x9849 (* 2.0 l_0_9_76)))
 (let ((?x10280 (* ?x9849 l_0_9_82)))
 (let ((?x10136 (* 2.0 l_0_9_48)))
 (let ((?x10137 (* ?x10136 l_0_9_50)))
 (let ((?x10133 (* 2.0 l_0_9_47)))
 (let ((?x10134 (* ?x10133 l_0_9_49)))
 (let ((?x10130 (* 2.0 l_0_9_33)))
 (let ((?x10131 (* ?x10130 l_0_9_35)))
 (let ((?x10127 (* 2.0 l_0_9_32)))
 (let ((?x10128 (* ?x10127 l_0_9_34)))
 (let ((?x10124 (* 2.0 l_0_9_21)))
 (let ((?x11092 (* ?x10124 l_0_9_24)))
 (let ((?x10121 (* 2.0 l_0_9_20)))
 (let ((?x11090 (* ?x10121 l_0_9_23)))
 (let ((?x10118 (* 2.0 l_0_9_19)))
 (let ((?x11089 (* ?x10118 l_0_9_22)))
 (let ((?x11527 (- (- (- (- (* (* (- 4.0) l_0_9_16) l_0_9_22) ?x11089) ?x11090) ?x11092) ?x10128)))
 (let ((?x11532 (- (+ (+ (- ?x11527 ?x10131) ?x10134) ?x10137) (* (* 2.0 l_0_9_64) l_0_9_67))))
 (let ((?x11536 (- (- ?x11532 (* (* 2.0 l_0_9_65) l_0_9_68)) (* (* 2.0 l_0_9_66) l_0_9_69))))
 (let ((?x11541 (+ (+ (+ ?x11536 ?x10280) (* (* (/ 1.0 2.0) l_0_9_79) l_0_9_82)) (* (* (/ 1.0 2.0) l_0_9_80) l_0_9_83))))
 (= (+ ?x11541 (* (* (/ 1.0 2.0) l_0_9_81) l_0_9_84)) 0.0))))))))))))))))))))))
(assert
 (let ((?x10524 (* l_0_9_78 l_0_9_78)))
 (let ((?x10522 (* l_0_9_77 l_0_9_77)))
 (let ((?x9630 (* 2.0 l_0_9_18)))
 (let ((?x9841 (* ?x9630 l_0_9_20)))
 (let ((?x9627 (* 2.0 l_0_9_17)))
 (let ((?x9839 (* ?x9627 l_0_9_19)))
 (let ((?x11585 (- (* (* (- 2.0) l_0_9_107) l_0_9_109) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x11595 (- (- ?x11585 (* (* 2.0 l_0_9_122) l_0_9_124)) (* (* 2.0 l_0_9_123) l_0_9_125))))
 (let ((?x11601 (- (+ (- (+ ?x11595 ?x9839) (* ?x9627 l_0_9_17)) ?x9841) (* ?x9630 l_0_9_18))))
 (let ((?x11605 (+ (+ ?x11601 (* (* 8.0 l_0_9_62) l_0_9_64)) (* (* 8.0 l_0_9_63) l_0_9_65))))
 (let ((?x11613 (- (- (+ (+ ?x11605 ?x10522) ?x10524) (* (* 2.0 l_0_9_92) l_0_9_94)) (* (* 2.0 l_0_9_93) l_0_9_95))))
 (= ?x11613 0.0)))))))))))))
(assert
 (let ((?x9768 (* 2.0 l_0_9_78)))
 (let ((?x10780 (* ?x9768 l_0_9_83)))
 (let ((?x9765 (* 2.0 l_0_9_77)))
 (let ((?x10778 (* ?x9765 l_0_9_82)))
 (let ((?x10124 (* 2.0 l_0_9_21)))
 (let ((?x11092 (* ?x10124 l_0_9_24)))
 (let ((?x10121 (* 2.0 l_0_9_20)))
 (let ((?x11090 (* ?x10121 l_0_9_23)))
 (let ((?x10118 (* 2.0 l_0_9_19)))
 (let ((?x11089 (* ?x10118 l_0_9_22)))
 (let ((?x11666 (- (* (* (- 2.0) l_0_9_109) l_0_9_112) (* (* 2.0 l_0_9_110) l_0_9_113))))
 (let ((?x11670 (- (- ?x11666 (* (* 2.0 l_0_9_111) l_0_9_114)) (* (* 2.0 l_0_9_124) l_0_9_127))))
 (let ((?x11674 (- (- ?x11670 (* (* 2.0 l_0_9_125) l_0_9_128)) (* (* 2.0 l_0_9_126) l_0_9_129))))
 (let ((?x11678 (- (- ?x11674 (* (* 4.0 l_0_9_17) l_0_9_22)) (* (* 4.0 l_0_9_18) l_0_9_23))))
 (let ((?x11683 (+ (+ (+ (+ ?x11678 ?x11089) ?x11090) ?x11092) (* (* 8.0 l_0_9_64) l_0_9_67))))
 (let ((?x11687 (+ (+ ?x11683 (* (* 8.0 l_0_9_65) l_0_9_68)) (* (* 8.0 l_0_9_66) l_0_9_69))))
 (let ((?x11695 (- (- (+ (+ ?x11687 ?x10778) ?x10780) (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x11695 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0)))))))))))))))))))
(assert
 (let ((?x11043 (* l_0_9_81 l_0_9_81)))
 (let ((?x11038 (* l_0_9_80 l_0_9_80)))
 (let ((?x11033 (* l_0_9_79 l_0_9_79)))
 (let ((?x10136 (* 2.0 l_0_9_48)))
 (let ((?x10137 (* ?x10136 l_0_9_50)))
 (let ((?x10133 (* 2.0 l_0_9_47)))
 (let ((?x10134 (* ?x10133 l_0_9_49)))
 (let ((?x10130 (* 2.0 l_0_9_33)))
 (let ((?x10131 (* ?x10130 l_0_9_35)))
 (let ((?x10127 (* 2.0 l_0_9_32)))
 (let ((?x10128 (* ?x10127 l_0_9_34)))
 (let ((?x11773 (- (* (* (- 2.0) l_0_9_19) l_0_9_19) (* (* 2.0 l_0_9_20) l_0_9_20))))
 (let ((?x11778 (- (+ (+ (- ?x11773 (* (* 2.0 l_0_9_21) l_0_9_21)) ?x10128) ?x10131) ?x10134)))
 (= (+ (+ (+ (- ?x11778 ?x10137) ?x11033) ?x11038) ?x11043) 0.0)))))))))))))))
(assert
 (let ((?x11040 (* 2.0 l_0_9_81)))
 (let ((?x11119 (* ?x11040 l_0_9_84)))
 (let ((?x11035 (* 2.0 l_0_9_80)))
 (let ((?x11117 (* ?x11035 l_0_9_83)))
 (let ((?x11030 (* 2.0 l_0_9_79)))
 (let ((?x11115 (* ?x11030 l_0_9_82)))
 (let ((?x10136 (* 2.0 l_0_9_48)))
 (let ((?x10264 (* ?x10136 l_0_9_53)))
 (let ((?x10133 (* 2.0 l_0_9_47)))
 (let ((?x10260 (* ?x10133 l_0_9_52)))
 (let ((?x10130 (* 2.0 l_0_9_33)))
 (let ((?x10256 (* ?x10130 l_0_9_38)))
 (let ((?x10127 (* 2.0 l_0_9_32)))
 (let ((?x10252 (* ?x10127 l_0_9_37)))
 (let ((?x11805 (- (* (* (- 4.0) l_0_9_19) l_0_9_22) (* (* 4.0 l_0_9_20) l_0_9_23))))
 (let ((?x11810 (- (+ (+ (- ?x11805 (* (* 4.0 l_0_9_21) l_0_9_24)) ?x10252) ?x10256) ?x10260)))
 (= (+ (+ (+ (- ?x11810 ?x10264) ?x11115) ?x11117) ?x11119) 0.0))))))))))))))))))
(assert
 (let ((?x11314 (* l_0_9_85 l_0_9_85)))
 (let ((?x11312 (* l_0_9_84 l_0_9_84)))
 (let ((?x11310 (* l_0_9_83 l_0_9_83)))
 (let ((?x11308 (* l_0_9_82 l_0_9_82)))
 (let ((?x11837 (- (* (* (- 2.0) l_0_9_22) l_0_9_22) (* (* 2.0 l_0_9_23) l_0_9_23))))
 (let ((?x11841 (- (- ?x11837 (* (* 2.0 l_0_9_24) l_0_9_24)) (* (* 2.0 l_0_9_25) l_0_9_25))))
 (= (+ (+ (+ (+ ?x11841 ?x11308) ?x11310) ?x11312) ?x11314) 0.0))))))))
(assert
 (let ((?x11870 (+ (- (* (- l_0_9_16) l_0_9_16) (* l_0_9_61 l_0_9_61)) (* (/ 1.0 4.0) (* l_0_9_76 l_0_9_76)))))
 (= ?x11870 0.0)))
(assert
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x10077 (* ?x10076 l_0_9_47)))
 (let ((?x10073 (* 2.0 l_0_9_31)))
 (let ((?x10074 (* ?x10073 l_0_9_32)))
 (let ((?x11882 (- (+ (- (* (* (- 2.0) l_0_9_16) l_0_9_22) ?x10074) ?x10077) (* (* 2.0 l_0_9_61) l_0_9_67))))
 (= (+ ?x11882 (* (* (/ 1.0 2.0) l_0_9_76) l_0_9_82)) 0.0)))))))
(assert
 (let ((?x10524 (* l_0_9_78 l_0_9_78)))
 (let ((?x11912 (* (/ 1.0 4.0) ?x10524)))
 (let ((?x10522 (* l_0_9_77 l_0_9_77)))
 (let ((?x11910 (* (/ 1.0 4.0) ?x10522)))
 (let ((?x11908 (* l_0_9_63 l_0_9_63)))
 (let ((?x11906 (* l_0_9_62 l_0_9_62)))
 (let ((?x10510 (* l_0_9_18 l_0_9_18)))
 (let ((?x10507 (* l_0_9_17 l_0_9_17)))
 (let ((?x9624 (* 2.0 l_0_9_16)))
 (let ((?x9924 (* ?x9624 l_0_9_17)))
 (let ((?x11900 (- (* (* (- 2.0) l_0_9_106) l_0_9_107) (* (* 2.0 l_0_9_121) l_0_9_122))))
 (let ((?x11905 (+ (- (- (+ ?x11900 ?x9924) ?x10507) ?x10510) (* (* 8.0 l_0_9_61) l_0_9_62))))
 (let ((?x11915 (- (+ (+ (- (- ?x11905 ?x11906) ?x11908) ?x11910) ?x11912) (* (* 2.0 l_0_9_91) l_0_9_92))))
 (= ?x11915 0.0)))))))))))))))
(assert
 (let ((?x11963 (* l_0_9_70 l_0_9_70)))
 (let ((?x11961 (* l_0_9_69 l_0_9_69)))
 (let ((?x11959 (* l_0_9_68 l_0_9_68)))
 (let ((?x11957 (* l_0_9_67 l_0_9_67)))
 (let ((?x10136 (* 2.0 l_0_9_48)))
 (let ((?x10264 (* ?x10136 l_0_9_53)))
 (let ((?x10133 (* 2.0 l_0_9_47)))
 (let ((?x10260 (* ?x10133 l_0_9_52)))
 (let ((?x10130 (* 2.0 l_0_9_33)))
 (let ((?x10256 (* ?x10130 l_0_9_38)))
 (let ((?x10127 (* 2.0 l_0_9_32)))
 (let ((?x10252 (* ?x10127 l_0_9_37)))
 (let ((?x11302 (* l_0_9_25 l_0_9_25)))
 (let ((?x11300 (* l_0_9_24 l_0_9_24)))
 (let ((?x11952 (- (- (- (* (- l_0_9_22) l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x11300) ?x11302)))
 (let ((?x11962 (- (- (- (+ (+ (- (- ?x11952 ?x10252) ?x10256) ?x10260) ?x10264) ?x11957) ?x11959) ?x11961)))
 (let ((?x11968 (+ (+ (- ?x11962 ?x11963) (* (/ 1.0 4.0) (* l_0_9_82 l_0_9_82))) (* (/ 1.0 4.0) (* l_0_9_83 l_0_9_83)))))
 (let ((?x11972 (+ (+ ?x11968 (* (/ 1.0 4.0) (* l_0_9_84 l_0_9_84))) (* (/ 1.0 4.0) (* l_0_9_85 l_0_9_85)))))
 (= ?x11972 0.0))))))))))))))))))))
(assert
 (let ((?x12029 (* l_0_9_93 l_0_9_93)))
 (let ((?x12027 (* l_0_9_92 l_0_9_92)))
 (let ((?x11908 (* l_0_9_63 l_0_9_63)))
 (let ((?x12025 (* 4.0 ?x11908)))
 (let ((?x11906 (* l_0_9_62 l_0_9_62)))
 (let ((?x12023 (* 4.0 ?x11906)))
 (let ((?x12017 (* l_0_9_123 l_0_9_123)))
 (let ((?x12015 (* l_0_9_122 l_0_9_122)))
 (let ((?x12016 (- (- (* (- l_0_9_107) l_0_9_107) (* l_0_9_108 l_0_9_108)) ?x12015)))
 (let ((?x12022 (+ (+ (- ?x12016 ?x12017) (* 1.0 (* l_0_9_17 l_0_9_17))) (* 1.0 (* l_0_9_18 l_0_9_18)))))
 (= (- (- (+ (+ ?x12022 ?x12023) ?x12025) ?x12027) ?x12029) 0.0))))))))))))
(assert
 (let ((?x9630 (* 2.0 l_0_9_18)))
 (let ((?x9631 (* ?x9630 l_0_9_23)))
 (let ((?x9627 (* 2.0 l_0_9_17)))
 (let ((?x9628 (* ?x9627 l_0_9_22)))
 (let ((?x12054 (- (* (* (- 2.0) l_0_9_107) l_0_9_112) (* (* 2.0 l_0_9_108) l_0_9_113))))
 (let ((?x12058 (- (- ?x12054 (* (* 2.0 l_0_9_122) l_0_9_127)) (* (* 2.0 l_0_9_123) l_0_9_128))))
 (let ((?x12064 (+ (+ (+ (+ ?x12058 ?x9628) ?x9631) (* (* 8.0 l_0_9_62) l_0_9_67)) (* (* 8.0 l_0_9_63) l_0_9_68))))
 (let ((?x12068 (- (- ?x12064 (* (* 2.0 l_0_9_92) l_0_9_97)) (* (* 2.0 l_0_9_93) l_0_9_98))))
 (= ?x12068 0.0))))))))))
(assert
 (let ((?x12144 (* l_0_9_99 l_0_9_99)))
 (let ((?x12142 (* l_0_9_98 l_0_9_98)))
 (let ((?x12140 (* l_0_9_97 l_0_9_97)))
 (let ((?x11963 (* l_0_9_70 l_0_9_70)))
 (let ((?x12138 (* 4.0 ?x11963)))
 (let ((?x11961 (* l_0_9_69 l_0_9_69)))
 (let ((?x12136 (* 4.0 ?x11961)))
 (let ((?x11959 (* l_0_9_68 l_0_9_68)))
 (let ((?x12134 (* 4.0 ?x11959)))
 (let ((?x11957 (* l_0_9_67 l_0_9_67)))
 (let ((?x12132 (* 4.0 ?x11957)))
 (let ((?x12122 (* l_0_9_130 l_0_9_130)))
 (let ((?x12120 (* l_0_9_129 l_0_9_129)))
 (let ((?x12118 (* l_0_9_128 l_0_9_128)))
 (let ((?x12116 (* l_0_9_127 l_0_9_127)))
 (let ((?x12114 (* l_0_9_115 l_0_9_115)))
 (let ((?x12112 (* l_0_9_114 l_0_9_114)))
 (let ((?x12110 (* l_0_9_113 l_0_9_113)))
 (let ((?x12111 (- (- (* (- l_0_9_100) l_0_9_100) (* l_0_9_112 l_0_9_112)) ?x12110)))
 (let ((?x12125 (+ (- (- (- (- (- (- ?x12111 ?x12112) ?x12114) ?x12116) ?x12118) ?x12120) ?x12122) (* 1.0 (* l_0_9_22 l_0_9_22)))))
 (let ((?x12129 (+ (+ ?x12125 (* 1.0 (* l_0_9_23 l_0_9_23))) (* 1.0 (* l_0_9_24 l_0_9_24)))))
 (let ((?x12137 (+ (+ (+ (+ ?x12129 (* 1.0 (* l_0_9_25 l_0_9_25))) ?x12132) ?x12134) ?x12136)))
 (= (- (- (- (+ ?x12137 ?x12138) ?x12140) ?x12142) ?x12144) 0.0))))))))))))))))))))))))
(assert
 (= (+ (* (- l_0_9_31) l_0_9_31) (* l_0_9_46 l_0_9_46)) 0.0))
(assert
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x12197 (* ?x10076 l_0_9_49)))
 (= (+ (* (* (- 2.0) l_0_9_31) l_0_9_34) ?x12197) 0.0))))
(assert
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x12203 (* ?x10076 l_0_9_52)))
 (= (+ (* (* (- 2.0) l_0_9_31) l_0_9_37) ?x12203) 0.0))))
(assert
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x12220 (* ?x10076 l_0_9_56)))
 (let ((?x12203 (* ?x10076 l_0_9_52)))
 (let ((?x10073 (* 2.0 l_0_9_31)))
 (let ((?x12213 (* ?x10073 l_0_9_41)))
 (let ((?x12211 (* ?x10073 l_0_9_37)))
 (= (+ (- (- ?x12211 ?x12213) ?x12203) ?x12220) 0.0))))))))
(assert
 (let ((?x12248 (* l_0_9_51 l_0_9_51)))
 (let ((?x12246 (* l_0_9_50 l_0_9_50)))
 (let ((?x12244 (* l_0_9_49 l_0_9_49)))
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x12203 (* ?x10076 l_0_9_52)))
 (let ((?x12241 (* l_0_9_36 l_0_9_36)))
 (let ((?x12239 (* l_0_9_35 l_0_9_35)))
 (let ((?x12240 (- (- (* (* 2.0 l_0_9_31) l_0_9_37) (* l_0_9_34 l_0_9_34)) ?x12239)))
 (= (+ (+ (+ (- (- ?x12240 ?x12241) ?x12203) ?x12244) ?x12246) ?x12248) 0.0))))))))))
(assert
 (let ((?x12277 (* 2.0 l_0_9_51)))
 (let ((?x12278 (* ?x12277 l_0_9_54)))
 (let ((?x12274 (* 2.0 l_0_9_50)))
 (let ((?x12275 (* ?x12274 l_0_9_53)))
 (let ((?x12271 (* 2.0 l_0_9_49)))
 (let ((?x12272 (* ?x12271 l_0_9_52)))
 (let ((?x12268 (* 2.0 l_0_9_36)))
 (let ((?x12269 (* ?x12268 l_0_9_39)))
 (let ((?x12265 (* 2.0 l_0_9_35)))
 (let ((?x12266 (* ?x12265 l_0_9_38)))
 (let ((?x12276 (+ (+ (- (- (* (* (- 2.0) l_0_9_34) l_0_9_37) ?x12266) ?x12269) ?x12272) ?x12275)))
 (= (+ ?x12276 ?x12278) 0.0)))))))))))))
(assert
 (let ((?x12277 (* 2.0 l_0_9_51)))
 (let ((?x12321 (* ?x12277 l_0_9_58)))
 (let ((?x12278 (* ?x12277 l_0_9_54)))
 (let ((?x12274 (* 2.0 l_0_9_50)))
 (let ((?x12318 (* ?x12274 l_0_9_57)))
 (let ((?x12275 (* ?x12274 l_0_9_53)))
 (let ((?x12271 (* 2.0 l_0_9_49)))
 (let ((?x12315 (* ?x12271 l_0_9_56)))
 (let ((?x12272 (* ?x12271 l_0_9_52)))
 (let ((?x12268 (* 2.0 l_0_9_36)))
 (let ((?x12312 (* ?x12268 l_0_9_43)))
 (let ((?x12269 (* ?x12268 l_0_9_39)))
 (let ((?x12265 (* 2.0 l_0_9_35)))
 (let ((?x12309 (* ?x12265 l_0_9_42)))
 (let ((?x12266 (* ?x12265 l_0_9_38)))
 (let ((?x12296 (* 2.0 l_0_9_34)))
 (let ((?x12300 (* ?x12296 l_0_9_41)))
 (let ((?x12298 (* ?x12296 l_0_9_37)))
 (let ((?x12316 (+ (- (- (+ (- (+ (- ?x12298 ?x12300) ?x12266) ?x12309) ?x12269) ?x12312) ?x12272) ?x12315)))
 (= (+ (- (+ (- ?x12316 ?x12275) ?x12318) ?x12278) ?x12321) 0.0)))))))))))))))))))))
(assert
 (let ((?x12380 (* l_0_9_55 l_0_9_55)))
 (let ((?x12378 (* l_0_9_54 l_0_9_54)))
 (let ((?x12376 (* l_0_9_53 l_0_9_53)))
 (let ((?x12374 (* l_0_9_52 l_0_9_52)))
 (let ((?x12372 (* l_0_9_40 l_0_9_40)))
 (let ((?x12370 (* l_0_9_39 l_0_9_39)))
 (let ((?x12373 (- (- (- (* (- l_0_9_37) l_0_9_37) (* l_0_9_38 l_0_9_38)) ?x12370) ?x12372)))
 (= (+ (+ (+ (+ ?x12373 ?x12374) ?x12376) ?x12378) ?x12380) 0.0)))))))))
(assert
 (let ((?x12380 (* l_0_9_55 l_0_9_55)))
 (let ((?x12429 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x12378 (* l_0_9_54 l_0_9_54)))
 (let ((?x12425 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x12376 (* l_0_9_53 l_0_9_53)))
 (let ((?x12421 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x12374 (* l_0_9_52 l_0_9_52)))
 (let ((?x12417 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x12372 (* l_0_9_40 l_0_9_40)))
 (let ((?x12413 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x12370 (* l_0_9_39 l_0_9_39)))
 (let ((?x12409 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x12368 (* l_0_9_38 l_0_9_38)))
 (let ((?x12405 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x12406 (- (+ (* (* (- 2.0) l_0_9_37) l_0_9_41) (* l_0_9_37 l_0_9_37)) ?x12405)))
 (let ((?x12419 (- (+ (+ (- (+ (- (+ ?x12406 ?x12368) ?x12409) ?x12370) ?x12413) ?x12372) ?x12417) ?x12374)))
 (= (- (+ (- (+ (- (+ ?x12419 ?x12421) ?x12376) ?x12425) ?x12378) ?x12429) ?x12380) 0.0))))))))))))))))))
(assert
 (let ((?x12504 (* l_0_9_60 l_0_9_60)))
 (let ((?x12502 (* l_0_9_59 l_0_9_59)))
 (let ((?x12500 (* l_0_9_58 l_0_9_58)))
 (let ((?x12498 (* l_0_9_57 l_0_9_57)))
 (let ((?x12496 (* l_0_9_56 l_0_9_56)))
 (let ((?x12429 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x12425 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x12421 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x12417 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x12490 (* l_0_9_45 l_0_9_45)))
 (let ((?x12488 (* l_0_9_44 l_0_9_44)))
 (let ((?x12486 (* l_0_9_43 l_0_9_43)))
 (let ((?x12484 (* l_0_9_42 l_0_9_42)))
 (let ((?x12482 (* l_0_9_41 l_0_9_41)))
 (let ((?x12413 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x12409 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x12405 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x12481 (+ (+ (+ (* (* 2.0 l_0_9_37) l_0_9_41) ?x12405) ?x12409) ?x12413)))
 (let ((?x12493 (- (- (- (- (- (- (- ?x12481 ?x12482) ?x12484) ?x12486) ?x12488) ?x12490) ?x12417) ?x12421)))
 (let ((?x12505 (+ (+ (+ (+ (+ (- (- ?x12493 ?x12425) ?x12429) ?x12496) ?x12498) ?x12500) ?x12502) ?x12504)))
 (= ?x12505 0.0))))))))))))))))))))))
(assert
 (= (- (* l_0_9_31 l_0_9_31) (* l_0_9_46 l_0_9_46)) 0.0))
(assert
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x12197 (* ?x10076 l_0_9_49)))
 (= (- (* (* 2.0 l_0_9_31) l_0_9_34) ?x12197) 0.0))))
(assert
 (let ((?x12248 (* l_0_9_51 l_0_9_51)))
 (let ((?x12246 (* l_0_9_50 l_0_9_50)))
 (let ((?x12244 (* l_0_9_49 l_0_9_49)))
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x12220 (* ?x10076 l_0_9_56)))
 (let ((?x12241 (* l_0_9_36 l_0_9_36)))
 (let ((?x12239 (* l_0_9_35 l_0_9_35)))
 (let ((?x12554 (+ (+ (* (* 2.0 l_0_9_31) l_0_9_41) (* l_0_9_34 l_0_9_34)) ?x12239)))
 (= (- (- (- (- (+ ?x12554 ?x12241) ?x12220) ?x12244) ?x12246) ?x12248) 0.0))))))))))
(assert
 (let ((?x12248 (* l_0_9_51 l_0_9_51)))
 (let ((?x12246 (* l_0_9_50 l_0_9_50)))
 (let ((?x12244 (* l_0_9_49 l_0_9_49)))
 (let ((?x12241 (* l_0_9_36 l_0_9_36)))
 (let ((?x12578 (- (+ (+ (* l_0_9_34 l_0_9_34) (* l_0_9_35 l_0_9_35)) ?x12241) ?x12244)))
 (= (- (- ?x12578 ?x12246) ?x12248) 0.0)))))))
(assert
 (let ((?x12277 (* 2.0 l_0_9_51)))
 (let ((?x12278 (* ?x12277 l_0_9_54)))
 (let ((?x12274 (* 2.0 l_0_9_50)))
 (let ((?x12275 (* ?x12274 l_0_9_53)))
 (let ((?x12271 (* 2.0 l_0_9_49)))
 (let ((?x12272 (* ?x12271 l_0_9_52)))
 (let ((?x12268 (* 2.0 l_0_9_36)))
 (let ((?x12269 (* ?x12268 l_0_9_39)))
 (let ((?x12265 (* 2.0 l_0_9_35)))
 (let ((?x12266 (* ?x12265 l_0_9_38)))
 (let ((?x12296 (* 2.0 l_0_9_34)))
 (let ((?x12298 (* ?x12296 l_0_9_37)))
 (= (- (- (- (+ (+ ?x12298 ?x12266) ?x12269) ?x12272) ?x12275) ?x12278) 0.0))))))))))))))
(assert
 (let ((?x12277 (* 2.0 l_0_9_51)))
 (let ((?x12321 (* ?x12277 l_0_9_58)))
 (let ((?x12274 (* 2.0 l_0_9_50)))
 (let ((?x12318 (* ?x12274 l_0_9_57)))
 (let ((?x12271 (* 2.0 l_0_9_49)))
 (let ((?x12315 (* ?x12271 l_0_9_56)))
 (let ((?x12268 (* 2.0 l_0_9_36)))
 (let ((?x12312 (* ?x12268 l_0_9_43)))
 (let ((?x12265 (* 2.0 l_0_9_35)))
 (let ((?x12309 (* ?x12265 l_0_9_42)))
 (let ((?x12296 (* 2.0 l_0_9_34)))
 (let ((?x12300 (* ?x12296 l_0_9_41)))
 (= (- (- (- (+ (+ ?x12300 ?x12309) ?x12312) ?x12315) ?x12318) ?x12321) 0.0))))))))))))))
(assert
 (let ((?x12380 (* l_0_9_55 l_0_9_55)))
 (let ((?x12378 (* l_0_9_54 l_0_9_54)))
 (let ((?x12376 (* l_0_9_53 l_0_9_53)))
 (let ((?x12374 (* l_0_9_52 l_0_9_52)))
 (let ((?x12372 (* l_0_9_40 l_0_9_40)))
 (let ((?x12370 (* l_0_9_39 l_0_9_39)))
 (let ((?x12624 (+ (+ (+ (* l_0_9_37 l_0_9_37) (* l_0_9_38 l_0_9_38)) ?x12370) ?x12372)))
 (= (- (- (- (- ?x12624 ?x12374) ?x12376) ?x12378) ?x12380) 0.0)))))))))
(assert
 (let ((?x12429 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x12425 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x12421 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x12417 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x12413 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x12409 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x12405 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x12481 (+ (+ (+ (* (* 2.0 l_0_9_37) l_0_9_41) ?x12405) ?x12409) ?x12413)))
 (= (- (- (- (- ?x12481 ?x12417) ?x12421) ?x12425) ?x12429) 0.0))))))))))
(assert
 (let ((?x12504 (* l_0_9_60 l_0_9_60)))
 (let ((?x12502 (* l_0_9_59 l_0_9_59)))
 (let ((?x12500 (* l_0_9_58 l_0_9_58)))
 (let ((?x12498 (* l_0_9_57 l_0_9_57)))
 (let ((?x12496 (* l_0_9_56 l_0_9_56)))
 (let ((?x12490 (* l_0_9_45 l_0_9_45)))
 (let ((?x12488 (* l_0_9_44 l_0_9_44)))
 (let ((?x12486 (* l_0_9_43 l_0_9_43)))
 (let ((?x12654 (+ (+ (+ (* l_0_9_41 l_0_9_41) (* l_0_9_42 l_0_9_42)) ?x12486) ?x12488)))
 (= (- (- (- (- (- (+ ?x12654 ?x12490) ?x12496) ?x12498) ?x12500) ?x12502) ?x12504) 0.0)))))))))))
(assert
 (= (- (* l_0_9_31 l_0_9_31) (* l_0_9_46 l_0_9_46)) 0.0))
(assert
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x12197 (* ?x10076 l_0_9_49)))
 (= (- (* (* 2.0 l_0_9_31) l_0_9_34) ?x12197) 0.0))))
(assert
 (let ((?x10076 (* 2.0 l_0_9_46)))
 (let ((?x12220 (* ?x10076 l_0_9_56)))
 (let ((?x10073 (* 2.0 l_0_9_31)))
 (let ((?x12213 (* ?x10073 l_0_9_41)))
 (= (- ?x12213 ?x12220) 0.0))))))
(assert
 (let ((?x12277 (* 2.0 l_0_9_51)))
 (let ((?x12321 (* ?x12277 l_0_9_58)))
 (let ((?x12274 (* 2.0 l_0_9_50)))
 (let ((?x12318 (* ?x12274 l_0_9_57)))
 (let ((?x12271 (* 2.0 l_0_9_49)))
 (let ((?x12315 (* ?x12271 l_0_9_56)))
 (let ((?x12268 (* 2.0 l_0_9_36)))
 (let ((?x12312 (* ?x12268 l_0_9_43)))
 (let ((?x12265 (* 2.0 l_0_9_35)))
 (let ((?x12309 (* ?x12265 l_0_9_42)))
 (let ((?x12296 (* 2.0 l_0_9_34)))
 (let ((?x12300 (* ?x12296 l_0_9_41)))
 (= (- (- (- (+ (+ ?x12300 ?x12309) ?x12312) ?x12315) ?x12318) ?x12321) 0.0))))))))))))))
(assert
 (let ((?x12504 (* l_0_9_60 l_0_9_60)))
 (let ((?x12502 (* l_0_9_59 l_0_9_59)))
 (let ((?x12500 (* l_0_9_58 l_0_9_58)))
 (let ((?x12498 (* l_0_9_57 l_0_9_57)))
 (let ((?x12496 (* l_0_9_56 l_0_9_56)))
 (let ((?x12490 (* l_0_9_45 l_0_9_45)))
 (let ((?x12488 (* l_0_9_44 l_0_9_44)))
 (let ((?x12486 (* l_0_9_43 l_0_9_43)))
 (let ((?x12654 (+ (+ (+ (* l_0_9_41 l_0_9_41) (* l_0_9_42 l_0_9_42)) ?x12486) ?x12488)))
 (= (- (- (- (- (- (+ ?x12654 ?x12490) ?x12496) ?x12498) ?x12500) ?x12502) ?x12504) 0.0)))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_121 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_130 0.0))
(assert
 (>= l_0_9_135 0.0))
(assert
 (let ((?x12789 (* l_0_10_96 l_0_10_96)))
 (let ((?x12787 (* l_0_10_95 l_0_10_95)))
 (let ((?x12785 (* l_0_10_94 l_0_10_94)))
 (let ((?x12782 (* 2.0 l_0_10_78)))
 (let ((?x12783 (* ?x12782 l_0_10_80)))
 (let ((?x12779 (* 2.0 l_0_10_77)))
 (let ((?x12780 (* ?x12779 l_0_10_79)))
 (let ((?x12768 (* l_0_10_48 l_0_10_48)))
 (let ((?x12766 (* l_0_10_47 l_0_10_47)))
 (let ((?x12764 (* l_0_10_33 l_0_10_33)))
 (let ((?x12762 (* l_0_10_32 l_0_10_32)))
 (let ((?x12745 (* l_0_10_141 l_0_10_141)))
 (let ((?x12743 (* l_0_10_140 l_0_10_140)))
 (let ((?x12741 (* l_0_10_139 l_0_10_139)))
 (let ((?x12739 (* l_0_10_126 l_0_10_126)))
 (let ((?x12737 (* l_0_10_125 l_0_10_125)))
 (let ((?x12735 (* l_0_10_124 l_0_10_124)))
 (let ((?x12733 (* l_0_10_111 l_0_10_111)))
 (let ((?x12734 (- (- (* (- l_0_10_109) l_0_10_109) (* l_0_10_110 l_0_10_110)) ?x12733)))
 (let ((?x12749 (- (- (- (- (- (- (- ?x12734 ?x12735) ?x12737) ?x12739) ?x12741) ?x12743) ?x12745) (* (* 4.0 l_0_10_17) l_0_10_19))))
 (let ((?x12755 (+ (- ?x12749 (* (* 4.0 l_0_10_18) l_0_10_20)) (* 1.0 (* l_0_10_19 l_0_10_19)))))
 (let ((?x12761 (+ (+ ?x12755 (* 1.0 (* l_0_10_20 l_0_10_20))) (* 1.0 (* l_0_10_21 l_0_10_21)))))
 (let ((?x12772 (+ (- (- (+ (+ ?x12761 ?x12762) ?x12764) ?x12766) ?x12768) (* 4.0 (* l_0_10_64 l_0_10_64)))))
 (let ((?x12778 (+ (+ ?x12772 (* 4.0 (* l_0_10_65 l_0_10_65))) (* 4.0 (* l_0_10_66 l_0_10_66)))))
 (= (+ (- (- (- (+ (+ ?x12778 ?x12780) ?x12783) ?x12785) ?x12787) ?x12789) (/ 1.0 4.0)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12894 (* 2.0 l_0_10_76)))
 (let ((?x12895 (* ?x12894 l_0_10_77)))
 (let ((?x12882 (* 2.0 l_0_10_18)))
 (let ((?x12883 (* ?x12882 l_0_10_20)))
 (let ((?x12879 (* 2.0 l_0_10_17)))
 (let ((?x12880 (* ?x12879 l_0_10_19)))
 (let ((?x12876 (* 2.0 l_0_10_16)))
 (let ((?x12877 (* ?x12876 l_0_10_19)))
 (let ((?x12869 (- (* (* (- 2.0) l_0_10_106) l_0_10_109) (* (* 2.0 l_0_10_121) l_0_10_124))))
 (let ((?x12875 (- (- ?x12869 (* (* 2.0 l_0_10_136) l_0_10_139)) (* (* 4.0 l_0_10_16) l_0_10_17))))
 (let ((?x12887 (+ (- (- (+ ?x12875 ?x12877) ?x12880) ?x12883) (* (* 8.0 l_0_10_61) l_0_10_64))))
 (let ((?x12893 (- (- ?x12887 (* (* 2.0 l_0_10_62) l_0_10_64)) (* (* 2.0 l_0_10_63) l_0_10_65))))
 (let ((?x12902 (+ (+ (+ ?x12893 ?x12895) (* (* (/ 1.0 2.0) l_0_10_77) l_0_10_79)) (* (* (/ 1.0 2.0) l_0_10_78) l_0_10_80))))
 (= (- ?x12902 (* (* 2.0 l_0_10_91) l_0_10_94)) 0.0)))))))))))))))
(assert
 (let ((?x12994 (* l_0_10_91 l_0_10_91)))
 (let ((?x12876 (* 2.0 l_0_10_16)))
 (let ((?x12980 (* ?x12876 l_0_10_17)))
 (let ((?x12978 (* l_0_10_136 l_0_10_136)))
 (let ((?x12979 (- (- (* (- l_0_10_106) l_0_10_106) (* l_0_10_121 l_0_10_121)) ?x12978)))
 (let ((?x12987 (- (+ (- ?x12979 ?x12980) (* 1.0 (* l_0_10_16 l_0_10_16))) (* (* 2.0 l_0_10_61) l_0_10_62))))
 (let ((?x12993 (+ (+ ?x12987 (* 4.0 (* l_0_10_61 l_0_10_61))) (* (* (/ 1.0 2.0) l_0_10_76) l_0_10_77))))
 (= (- ?x12993 ?x12994) 0.0)))))))))
(assert
 (let ((?x12894 (* 2.0 l_0_10_76)))
 (let ((?x12895 (* ?x12894 l_0_10_77)))
 (let ((?x12768 (* l_0_10_48 l_0_10_48)))
 (let ((?x12766 (* l_0_10_47 l_0_10_47)))
 (let ((?x12764 (* l_0_10_33 l_0_10_33)))
 (let ((?x12762 (* l_0_10_32 l_0_10_32)))
 (let ((?x12882 (* 2.0 l_0_10_18)))
 (let ((?x13042 (* ?x12882 l_0_10_27)))
 (let ((?x12879 (* 2.0 l_0_10_17)))
 (let ((?x13040 (* ?x12879 l_0_10_26)))
 (let ((?x12876 (* 2.0 l_0_10_16)))
 (let ((?x13038 (* ?x12876 l_0_10_26)))
 (let ((?x12980 (* ?x12876 l_0_10_17)))
 (let ((?x13029 (- (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_101) l_0_10_91))))
 (let ((?x13034 (- (- ?x13029 (* (* 2.0 l_0_10_106) l_0_10_116)) (* (* 2.0 l_0_10_121) l_0_10_131))))
 (let ((?x13041 (- (+ (+ (- ?x13034 (* (* 2.0 l_0_10_136) l_0_10_146)) ?x12980) ?x13038) ?x13040)))
 (let ((?x13049 (+ (- (- (+ (+ (- ?x13041 ?x13042) ?x12762) ?x12764) ?x12766) ?x12768) (* (* 8.0 l_0_10_61) l_0_10_71))))
 (let ((?x13053 (- (- ?x13049 (* (* 2.0 l_0_10_62) l_0_10_71)) (* (* 2.0 l_0_10_63) l_0_10_72))))
 (let ((?x13058 (+ (+ (- ?x13053 ?x12895) (* (* (/ 1.0 2.0) l_0_10_77) l_0_10_86)) (* (* (/ 1.0 2.0) l_0_10_78) l_0_10_87))))
 (= (+ ?x13058 (/ 1.0 4.0)) 0.0)))))))))))))))))))))
(assert
 (let ((?x12768 (* l_0_10_48 l_0_10_48)))
 (let ((?x12766 (* l_0_10_47 l_0_10_47)))
 (let ((?x12764 (* l_0_10_33 l_0_10_33)))
 (let ((?x12762 (* l_0_10_32 l_0_10_32)))
 (let ((?x12882 (* 2.0 l_0_10_18)))
 (let ((?x13080 (* ?x12882 l_0_10_23)))
 (let ((?x12879 (* 2.0 l_0_10_17)))
 (let ((?x13078 (* ?x12879 l_0_10_22)))
 (let ((?x12876 (* 2.0 l_0_10_16)))
 (let ((?x13076 (* ?x12876 l_0_10_22)))
 (let ((?x1881 (- (* (* (- 2.0) l_0_10_106) l_0_10_112) (* (* 2.0 l_0_10_121) l_0_10_127))))
 (let ((?x13081 (- (- (+ (- ?x1881 (* (* 2.0 l_0_10_136) l_0_10_142)) ?x13076) ?x13078) ?x13080)))
 (let ((?x13087 (+ (+ (+ (- (- ?x13081 ?x12762) ?x12764) ?x12766) ?x12768) (* (* 8.0 l_0_10_61) l_0_10_67))))
 (let ((?x13091 (- (- ?x13087 (* (* 2.0 l_0_10_62) l_0_10_67)) (* (* 2.0 l_0_10_63) l_0_10_68))))
 (let ((?x13095 (+ (+ ?x13091 (* (* (/ 1.0 2.0) l_0_10_77) l_0_10_82)) (* (* (/ 1.0 2.0) l_0_10_78) l_0_10_83))))
 (= (- (- ?x13095 (* (* 2.0 l_0_10_91) l_0_10_97)) (/ 1.0 4.0)) 0.0)))))))))))))))))
(assert
 (let ((?x13152 (* l_0_10_76 l_0_10_76)))
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x13146 (* ?x13145 l_0_10_47)))
 (let ((?x13142 (* 2.0 l_0_10_31)))
 (let ((?x13143 (* ?x13142 l_0_10_32)))
 (let ((?x12982 (* l_0_10_16 l_0_10_16)))
 (let ((?x12876 (* 2.0 l_0_10_16)))
 (let ((?x13038 (* ?x12876 l_0_10_26)))
 (let ((?x13149 (- (- (+ (+ (- (* (- l_0_10_1) l_0_10_1) ?x13038) ?x12982) ?x13143) ?x13146) (* (* 2.0 l_0_10_61) l_0_10_71))))
 (= (- (+ ?x13149 (* (* (/ 1.0 2.0) l_0_10_76) l_0_10_86)) ?x13152) 0.0)))))))))))
(assert
 (let ((?x12894 (* 2.0 l_0_10_76)))
 (let ((?x13204 (* ?x12894 l_0_10_86)))
 (let ((?x13202 (* ?x12894 l_0_10_79)))
 (let ((?x13190 (* 2.0 l_0_10_48)))
 (let ((?x13191 (* ?x13190 l_0_10_50)))
 (let ((?x13187 (* 2.0 l_0_10_47)))
 (let ((?x13188 (* ?x13187 l_0_10_49)))
 (let ((?x13184 (* 2.0 l_0_10_33)))
 (let ((?x13185 (* ?x13184 l_0_10_35)))
 (let ((?x13181 (* 2.0 l_0_10_32)))
 (let ((?x13182 (* ?x13181 l_0_10_34)))
 (let ((?x13178 (* 2.0 l_0_10_21)))
 (let ((?x13179 (* ?x13178 l_0_10_28)))
 (let ((?x13175 (* 2.0 l_0_10_20)))
 (let ((?x13176 (* ?x13175 l_0_10_27)))
 (let ((?x13172 (* 2.0 l_0_10_19)))
 (let ((?x13173 (* ?x13172 l_0_10_26)))
 (let ((?x12876 (* 2.0 l_0_10_16)))
 (let ((?x12877 (* ?x12876 l_0_10_19)))
 (let ((?x13171 (- (+ (* (* (- 2.0) l_0_10_1) l_0_10_4) ?x12877) (* (* 4.0 l_0_10_16) l_0_10_26))))
 (let ((?x13192 (- (- (+ (+ (- (- (- ?x13171 ?x13173) ?x13176) ?x13179) ?x13182) ?x13185) ?x13188) ?x13191)))
 (let ((?x13198 (- (- ?x13192 (* (* 2.0 l_0_10_64) l_0_10_71)) (* (* 2.0 l_0_10_65) l_0_10_72))))
 (let ((?x13208 (+ (+ (- (- ?x13198 (* (* 2.0 l_0_10_66) l_0_10_73)) ?x13202) ?x13204) (* (* (/ 1.0 2.0) l_0_10_79) l_0_10_86))))
 (let ((?x13214 (+ (+ ?x13208 (* (* (/ 1.0 2.0) l_0_10_80) l_0_10_87)) (* (* (/ 1.0 2.0) l_0_10_81) l_0_10_88))))
 (= ?x13214 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12894 (* 2.0 l_0_10_76)))
 (let ((?x13279 (* ?x12894 l_0_10_82)))
 (let ((?x13190 (* 2.0 l_0_10_48)))
 (let ((?x13265 (* ?x13190 l_0_10_57)))
 (let ((?x13263 (* ?x13190 l_0_10_53)))
 (let ((?x13187 (* 2.0 l_0_10_47)))
 (let ((?x13261 (* ?x13187 l_0_10_56)))
 (let ((?x13259 (* ?x13187 l_0_10_52)))
 (let ((?x13184 (* 2.0 l_0_10_33)))
 (let ((?x13257 (* ?x13184 l_0_10_42)))
 (let ((?x13255 (* ?x13184 l_0_10_38)))
 (let ((?x13181 (* 2.0 l_0_10_32)))
 (let ((?x13253 (* ?x13181 l_0_10_41)))
 (let ((?x13251 (* ?x13181 l_0_10_37)))
 (let ((?x13248 (* 2.0 l_0_10_25)))
 (let ((?x13249 (* ?x13248 l_0_10_29)))
 (let ((?x13245 (* 2.0 l_0_10_24)))
 (let ((?x13246 (* ?x13245 l_0_10_28)))
 (let ((?x13242 (* 2.0 l_0_10_23)))
 (let ((?x13243 (* ?x13242 l_0_10_27)))
 (let ((?x2262 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x12876 (* 2.0 l_0_10_16)))
 (let ((?x13076 (* ?x12876 l_0_10_22)))
 (let ((?x13247 (- (- (- (+ (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x13076) ?x2262) ?x13243) ?x13246)))
 (let ((?x13262 (+ (- (- (+ (- (+ (- ?x13247 ?x13249) ?x13251) ?x13253) ?x13255) ?x13257) ?x13259) ?x13261)))
 (let ((?x13272 (- (- (+ (- ?x13262 ?x13263) ?x13265) (* (* 2.0 l_0_10_67) l_0_10_71)) (* (* 2.0 l_0_10_68) l_0_10_72))))
 (let ((?x13278 (- (- ?x13272 (* (* 2.0 l_0_10_69) l_0_10_73)) (* (* 2.0 l_0_10_70) l_0_10_74))))
 (let ((?x13286 (+ (+ (- ?x13278 ?x13279) (* (* (/ 1.0 2.0) l_0_10_82) l_0_10_86)) (* (* (/ 1.0 2.0) l_0_10_83) l_0_10_87))))
 (let ((?x13292 (+ (+ ?x13286 (* (* (/ 1.0 2.0) l_0_10_84) l_0_10_88)) (* (* (/ 1.0 2.0) l_0_10_85) l_0_10_89))))
 (= ?x13292 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x13395 (* l_0_10_90 l_0_10_90)))
 (let ((?x13396 (* (/ 1.0 4.0) ?x13395)))
 (let ((?x13392 (* l_0_10_89 l_0_10_89)))
 (let ((?x13393 (* (/ 1.0 4.0) ?x13392)))
 (let ((?x13389 (* l_0_10_88 l_0_10_88)))
 (let ((?x13390 (* (/ 1.0 4.0) ?x13389)))
 (let ((?x13386 (* l_0_10_87 l_0_10_87)))
 (let ((?x13387 (* (/ 1.0 4.0) ?x13386)))
 (let ((?x13383 (* l_0_10_86 l_0_10_86)))
 (let ((?x13384 (* (/ 1.0 4.0) ?x13383)))
 (let ((?x12894 (* 2.0 l_0_10_76)))
 (let ((?x13204 (* ?x12894 l_0_10_86)))
 (let ((?x13380 (* l_0_10_75 l_0_10_75)))
 (let ((?x13378 (* l_0_10_74 l_0_10_74)))
 (let ((?x13376 (* l_0_10_73 l_0_10_73)))
 (let ((?x13374 (* l_0_10_72 l_0_10_72)))
 (let ((?x13372 (* l_0_10_71 l_0_10_71)))
 (let ((?x13190 (* 2.0 l_0_10_48)))
 (let ((?x13265 (* ?x13190 l_0_10_57)))
 (let ((?x13187 (* 2.0 l_0_10_47)))
 (let ((?x13261 (* ?x13187 l_0_10_56)))
 (let ((?x13184 (* 2.0 l_0_10_33)))
 (let ((?x13257 (* ?x13184 l_0_10_42)))
 (let ((?x13181 (* 2.0 l_0_10_32)))
 (let ((?x13253 (* ?x13181 l_0_10_41)))
 (let ((?x13366 (* l_0_10_30 l_0_10_30)))
 (let ((?x13364 (* l_0_10_29 l_0_10_29)))
 (let ((?x13362 (* l_0_10_28 l_0_10_28)))
 (let ((?x13349 (* l_0_10_27 l_0_10_27)))
 (let ((?x13346 (* l_0_10_26 l_0_10_26)))
 (let ((?x12876 (* 2.0 l_0_10_16)))
 (let ((?x13038 (* ?x12876 l_0_10_26)))
 (let ((?x13363 (- (- (- (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) ?x13038) ?x13346) ?x13349) ?x13362)))
 (let ((?x13373 (- (- (- (+ (+ (- (- ?x13363 ?x13364) ?x13366) ?x13253) ?x13257) ?x13261) ?x13265) ?x13372)))
 (let ((?x13388 (+ (+ (- (- (- (- (- ?x13373 ?x13374) ?x13376) ?x13378) ?x13380) ?x13204) ?x13384) ?x13387)))
 (= (+ (+ (+ ?x13388 ?x13390) ?x13393) ?x13396) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13450 (* l_0_10_78 l_0_10_78)))
 (let ((?x13448 (* l_0_10_77 l_0_10_77)))
 (let ((?x13440 (* l_0_10_3 l_0_10_3)))
 (let ((?x13438 (* l_0_10_2 l_0_10_2)))
 (let ((?x13436 (* l_0_10_18 l_0_10_18)))
 (let ((?x12882 (* 2.0 l_0_10_18)))
 (let ((?x13042 (* ?x12882 l_0_10_27)))
 (let ((?x13433 (* l_0_10_17 l_0_10_17)))
 (let ((?x12879 (* 2.0 l_0_10_17)))
 (let ((?x13040 (* ?x12879 l_0_10_26)))
 (let ((?x13413 (- (* (* (- 2.0) l_0_10_101) l_0_10_92) (* (* 2.0 l_0_10_102) l_0_10_93))))
 (let ((?x13419 (- (- ?x13413 (* (* 2.0 l_0_10_107) l_0_10_116)) (* (* 2.0 l_0_10_108) l_0_10_117))))
 (let ((?x13425 (- (- ?x13419 (* (* 2.0 l_0_10_122) l_0_10_131)) (* (* 2.0 l_0_10_123) l_0_10_132))))
 (let ((?x13431 (- (- ?x13425 (* (* 2.0 l_0_10_137) l_0_10_146)) (* (* 2.0 l_0_10_138) l_0_10_147))))
 (let ((?x13444 (+ (- (- (+ (+ (+ (+ ?x13431 ?x13040) ?x13433) ?x13042) ?x13436) ?x13438) ?x13440) (* (* 8.0 l_0_10_62) l_0_10_71))))
 (= (- (- (+ ?x13444 (* (* 8.0 l_0_10_63) l_0_10_72)) ?x13448) ?x13450) 0.0)))))))))))))))))
(assert
 (let ((?x12782 (* 2.0 l_0_10_78)))
 (let ((?x13531 (* ?x12782 l_0_10_87)))
 (let ((?x12783 (* ?x12782 l_0_10_80)))
 (let ((?x12779 (* 2.0 l_0_10_77)))
 (let ((?x13528 (* ?x12779 l_0_10_86)))
 (let ((?x12780 (* ?x12779 l_0_10_79)))
 (let ((?x13178 (* 2.0 l_0_10_21)))
 (let ((?x13179 (* ?x13178 l_0_10_28)))
 (let ((?x13175 (* 2.0 l_0_10_20)))
 (let ((?x13176 (* ?x13175 l_0_10_27)))
 (let ((?x13172 (* 2.0 l_0_10_19)))
 (let ((?x13173 (* ?x13172 l_0_10_26)))
 (let ((?x12882 (* 2.0 l_0_10_18)))
 (let ((?x12883 (* ?x12882 l_0_10_20)))
 (let ((?x12879 (* 2.0 l_0_10_17)))
 (let ((?x12880 (* ?x12879 l_0_10_19)))
 (let ((?x13472 (- (* (* (- 2.0) l_0_10_101) l_0_10_94) (* (* 2.0 l_0_10_102) l_0_10_95))))
 (let ((?x13478 (- (- ?x13472 (* (* 2.0 l_0_10_103) l_0_10_96)) (* (* 2.0 l_0_10_109) l_0_10_116))))
 (let ((?x13484 (- (- ?x13478 (* (* 2.0 l_0_10_110) l_0_10_117)) (* (* 2.0 l_0_10_111) l_0_10_118))))
 (let ((?x13490 (- (- ?x13484 (* (* 2.0 l_0_10_124) l_0_10_131)) (* (* 2.0 l_0_10_125) l_0_10_132))))
 (let ((?x13496 (- (- ?x13490 (* (* 2.0 l_0_10_126) l_0_10_133)) (* (* 2.0 l_0_10_139) l_0_10_146))))
 (let ((?x13502 (- (- ?x13496 (* (* 2.0 l_0_10_140) l_0_10_147)) (* (* 2.0 l_0_10_141) l_0_10_148))))
 (let ((?x13508 (- (+ (- (+ ?x13502 ?x12880) (* (* 4.0 l_0_10_17) l_0_10_26)) ?x12883) (* (* 4.0 l_0_10_18) l_0_10_27))))
 (let ((?x13514 (+ (+ (- (+ ?x13508 ?x13173) (* (* 2.0 l_0_10_2) l_0_10_4)) ?x13176) ?x13179)))
 (let ((?x13520 (+ (- ?x13514 (* (* 2.0 l_0_10_3) l_0_10_5)) (* (* 8.0 l_0_10_64) l_0_10_71))))
 (let ((?x13526 (+ (+ ?x13520 (* (* 8.0 l_0_10_65) l_0_10_72)) (* (* 8.0 l_0_10_66) l_0_10_73))))
 (= (+ (- (+ (- ?x13526 ?x12780) ?x13528) ?x12783) ?x13531) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x12782 (* 2.0 l_0_10_78)))
 (let ((?x13634 (* ?x12782 l_0_10_83)))
 (let ((?x12779 (* 2.0 l_0_10_77)))
 (let ((?x13632 (* ?x12779 l_0_10_82)))
 (let ((?x13248 (* 2.0 l_0_10_25)))
 (let ((?x13249 (* ?x13248 l_0_10_29)))
 (let ((?x13245 (* 2.0 l_0_10_24)))
 (let ((?x13246 (* ?x13245 l_0_10_28)))
 (let ((?x13242 (* 2.0 l_0_10_23)))
 (let ((?x13243 (* ?x13242 l_0_10_27)))
 (let ((?x2262 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x12882 (* 2.0 l_0_10_18)))
 (let ((?x13080 (* ?x12882 l_0_10_23)))
 (let ((?x12879 (* 2.0 l_0_10_17)))
 (let ((?x13078 (* ?x12879 l_0_10_22)))
 (let ((?x13569 (- (* (* (- 2.0) l_0_10_100) l_0_10_104) (* (* 2.0 l_0_10_101) l_0_10_97))))
 (let ((?x13573 (- (- ?x13569 (* (* 2.0 l_0_10_102) l_0_10_98)) (* (* 2.0 l_0_10_103) l_0_10_99))))
 (let ((?x13579 (- (- ?x13573 (* (* 2.0 l_0_10_112) l_0_10_116)) (* (* 2.0 l_0_10_113) l_0_10_117))))
 (let ((?x13585 (- (- ?x13579 (* (* 2.0 l_0_10_114) l_0_10_118)) (* (* 2.0 l_0_10_115) l_0_10_119))))
 (let ((?x13591 (- (- ?x13585 (* (* 2.0 l_0_10_127) l_0_10_131)) (* (* 2.0 l_0_10_128) l_0_10_132))))
 (let ((?x13597 (- (- ?x13591 (* (* 2.0 l_0_10_129) l_0_10_133)) (* (* 2.0 l_0_10_130) l_0_10_134))))
 (let ((?x13603 (- (- ?x13597 (* (* 2.0 l_0_10_142) l_0_10_146)) (* (* 2.0 l_0_10_143) l_0_10_147))))
 (let ((?x13609 (- (- ?x13603 (* (* 2.0 l_0_10_144) l_0_10_148)) (* (* 2.0 l_0_10_145) l_0_10_149))))
 (let ((?x13614 (+ (- (+ (+ ?x13609 ?x13078) ?x13080) (* (* 2.0 l_0_10_2) l_0_10_7)) ?x2262)))
 (let ((?x13619 (- (+ (+ (+ ?x13614 ?x13243) ?x13246) ?x13249) (* (* 2.0 l_0_10_3) l_0_10_8))))
 (let ((?x13625 (+ (+ ?x13619 (* (* 8.0 l_0_10_67) l_0_10_71)) (* (* 8.0 l_0_10_68) l_0_10_72))))
 (let ((?x13631 (+ (+ ?x13625 (* (* 8.0 l_0_10_69) l_0_10_73)) (* (* 8.0 l_0_10_70) l_0_10_74))))
 (= (- (- ?x13631 ?x13632) ?x13634) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x12782 (* 2.0 l_0_10_78)))
 (let ((?x13531 (* ?x12782 l_0_10_87)))
 (let ((?x12779 (* 2.0 l_0_10_77)))
 (let ((?x13528 (* ?x12779 l_0_10_86)))
 (let ((?x13380 (* l_0_10_75 l_0_10_75)))
 (let ((?x13733 (* 4.0 ?x13380)))
 (let ((?x13378 (* l_0_10_74 l_0_10_74)))
 (let ((?x13731 (* 4.0 ?x13378)))
 (let ((?x13376 (* l_0_10_73 l_0_10_73)))
 (let ((?x13729 (* 4.0 ?x13376)))
 (let ((?x13374 (* l_0_10_72 l_0_10_72)))
 (let ((?x13727 (* 4.0 ?x13374)))
 (let ((?x13372 (* l_0_10_71 l_0_10_71)))
 (let ((?x13725 (* 4.0 ?x13372)))
 (let ((?x12882 (* 2.0 l_0_10_18)))
 (let ((?x13042 (* ?x12882 l_0_10_27)))
 (let ((?x12879 (* 2.0 l_0_10_17)))
 (let ((?x13040 (* ?x12879 l_0_10_26)))
 (let ((?x13711 (* l_0_10_150 l_0_10_150)))
 (let ((?x13709 (* l_0_10_149 l_0_10_149)))
 (let ((?x13707 (* l_0_10_148 l_0_10_148)))
 (let ((?x13705 (* l_0_10_147 l_0_10_147)))
 (let ((?x13703 (* l_0_10_146 l_0_10_146)))
 (let ((?x13701 (* l_0_10_135 l_0_10_135)))
 (let ((?x13699 (* l_0_10_134 l_0_10_134)))
 (let ((?x13697 (* l_0_10_133 l_0_10_133)))
 (let ((?x13695 (* l_0_10_132 l_0_10_132)))
 (let ((?x13693 (* l_0_10_131 l_0_10_131)))
 (let ((?x13691 (* l_0_10_120 l_0_10_120)))
 (let ((?x13686 (* l_0_10_119 l_0_10_119)))
 (let ((?x13684 (* l_0_10_118 l_0_10_118)))
 (let ((?x13682 (* l_0_10_117 l_0_10_117)))
 (let ((?x13680 (* l_0_10_116 l_0_10_116)))
 (let ((?x13675 (* l_0_10_105 l_0_10_105)))
 (let ((?x13673 (* l_0_10_104 l_0_10_104)))
 (let ((?x13671 (* l_0_10_103 l_0_10_103)))
 (let ((?x13672 (- (- (* (- l_0_10_101) l_0_10_101) (* l_0_10_102 l_0_10_102)) ?x13671)))
 (let ((?x13681 (- (- (- (- ?x13672 ?x13673) ?x13675) (* (* 2.0 l_0_10_11) l_0_10_2)) ?x13680)))
 (let ((?x13690 (- (- (- (- ?x13681 ?x13682) ?x13684) ?x13686) (* (* 2.0 l_0_10_12) l_0_10_3))))
 (let ((?x13704 (- (- (- (- (- (- (- ?x13690 ?x13691) ?x13693) ?x13695) ?x13697) ?x13699) ?x13701) ?x13703)))
 (let ((?x13716 (+ (+ (+ (- (- (- (- ?x13704 ?x13705) ?x13707) ?x13709) ?x13711) ?x13040) ?x13042) (* 1.0 (* l_0_10_26 l_0_10_26)))))
 (let ((?x13720 (+ (+ ?x13716 (* 1.0 (* l_0_10_27 l_0_10_27))) (* 1.0 (* l_0_10_28 l_0_10_28)))))
 (let ((?x13724 (+ (+ ?x13720 (* 1.0 (* l_0_10_29 l_0_10_29))) (* 1.0 (* l_0_10_30 l_0_10_30)))))
 (let ((?x13736 (- (- (+ (+ (+ (+ (+ ?x13724 ?x13725) ?x13727) ?x13729) ?x13731) ?x13733) ?x13528) ?x13531)))
 (= ?x13736 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13779 (* l_0_10_81 l_0_10_81)))
 (let ((?x13776 (* 2.0 l_0_10_81)))
 (let ((?x13777 (* ?x13776 l_0_10_88)))
 (let ((?x13774 (* l_0_10_80 l_0_10_80)))
 (let ((?x13771 (* 2.0 l_0_10_80)))
 (let ((?x13772 (* ?x13771 l_0_10_87)))
 (let ((?x13769 (* l_0_10_79 l_0_10_79)))
 (let ((?x13766 (* 2.0 l_0_10_79)))
 (let ((?x13767 (* ?x13766 l_0_10_86)))
 (let ((?x13764 (* l_0_10_6 l_0_10_6)))
 (let ((?x3024 (* l_0_10_5 l_0_10_5)))
 (let ((?x13190 (* 2.0 l_0_10_48)))
 (let ((?x13265 (* ?x13190 l_0_10_57)))
 (let ((?x13187 (* 2.0 l_0_10_47)))
 (let ((?x13261 (* ?x13187 l_0_10_56)))
 (let ((?x3085 (* l_0_10_4 l_0_10_4)))
 (let ((?x13184 (* 2.0 l_0_10_33)))
 (let ((?x13257 (* ?x13184 l_0_10_42)))
 (let ((?x13181 (* 2.0 l_0_10_32)))
 (let ((?x13253 (* ?x13181 l_0_10_41)))
 (let ((?x12759 (* l_0_10_21 l_0_10_21)))
 (let ((?x12756 (* l_0_10_20 l_0_10_20)))
 (let ((?x3112 (- (+ (* (* (- 4.0) l_0_10_19) l_0_10_26) (* l_0_10_19 l_0_10_19)) (* (* 4.0 l_0_10_20) l_0_10_27))))
 (let ((?x3084 (+ (+ (- (+ ?x3112 ?x12756) (* (* 4.0 l_0_10_21) l_0_10_28)) ?x12759) ?x13253)))
 (let ((?x13768 (+ (- (- (- (- (- (+ ?x3084 ?x13257) ?x3085) ?x13261) ?x13265) ?x3024) ?x13764) ?x13767)))
 (= (- (+ (- (+ (- ?x13768 ?x13769) ?x13772) ?x13774) ?x13777) ?x13779) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x13863 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x13860 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x13857 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x13854 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x13776 (* 2.0 l_0_10_81)))
 (let ((?x13851 (* ?x13776 l_0_10_84)))
 (let ((?x13771 (* 2.0 l_0_10_80)))
 (let ((?x13849 (* ?x13771 l_0_10_83)))
 (let ((?x13766 (* 2.0 l_0_10_79)))
 (let ((?x13847 (* ?x13766 l_0_10_82)))
 (let ((?x13178 (* 2.0 l_0_10_21)))
 (let ((?x13824 (* ?x13178 l_0_10_24)))
 (let ((?x13175 (* 2.0 l_0_10_20)))
 (let ((?x13822 (* ?x13175 l_0_10_23)))
 (let ((?x13172 (* 2.0 l_0_10_19)))
 (let ((?x13821 (* ?x13172 l_0_10_22)))
 (let ((?x13831 (- (- (+ (+ ?x13821 ?x13822) ?x13824) (* (* 4.0 l_0_10_22) l_0_10_26)) (* (* 4.0 l_0_10_23) l_0_10_27))))
 (let ((?x13837 (- (- ?x13831 (* (* 4.0 l_0_10_24) l_0_10_28)) (* (* 4.0 l_0_10_25) l_0_10_29))))
 (let ((?x13843 (- (- ?x13837 (* (* 2.0 l_0_10_4) l_0_10_7)) (* (* 2.0 l_0_10_5) l_0_10_8))))
 (let ((?x13852 (- (- (- (- ?x13843 (* (* 2.0 l_0_10_6) l_0_10_9)) ?x13847) ?x13849) ?x13851)))
 (= (+ (+ (+ (+ ?x13852 ?x13854) ?x13857) ?x13860) ?x13863) 0.0))))))))))))))))))))))
(assert
 (let ((?x13395 (* l_0_10_90 l_0_10_90)))
 (let ((?x13392 (* l_0_10_89 l_0_10_89)))
 (let ((?x13389 (* l_0_10_88 l_0_10_88)))
 (let ((?x13386 (* l_0_10_87 l_0_10_87)))
 (let ((?x13383 (* l_0_10_86 l_0_10_86)))
 (let ((?x13776 (* 2.0 l_0_10_81)))
 (let ((?x13777 (* ?x13776 l_0_10_88)))
 (let ((?x13771 (* 2.0 l_0_10_80)))
 (let ((?x13772 (* ?x13771 l_0_10_87)))
 (let ((?x13766 (* 2.0 l_0_10_79)))
 (let ((?x13767 (* ?x13766 l_0_10_86)))
 (let ((?x13178 (* 2.0 l_0_10_21)))
 (let ((?x13179 (* ?x13178 l_0_10_28)))
 (let ((?x13175 (* 2.0 l_0_10_20)))
 (let ((?x13176 (* ?x13175 l_0_10_27)))
 (let ((?x13172 (* 2.0 l_0_10_19)))
 (let ((?x13173 (* ?x13172 l_0_10_26)))
 (let ((?x3271 (- (* (* (- 2.0) l_0_10_11) l_0_10_4) (* (* 2.0 l_0_10_12) l_0_10_5))))
 (let ((?x13900 (+ (+ (+ (- ?x3271 (* (* 2.0 l_0_10_13) l_0_10_6)) ?x13173) ?x13176) ?x13179)))
 (let ((?x13906 (- (- ?x13900 (* (* 2.0 l_0_10_26) l_0_10_26)) (* (* 2.0 l_0_10_27) l_0_10_27))))
 (let ((?x13912 (- (- ?x13906 (* (* 2.0 l_0_10_28) l_0_10_28)) (* (* 2.0 l_0_10_29) l_0_10_29))))
 (let ((?x13918 (- (- (- (- ?x13912 (* (* 2.0 l_0_10_30) l_0_10_30)) ?x13767) ?x13772) ?x13777)))
 (= (+ (+ (+ (+ (+ ?x13918 ?x13383) ?x13386) ?x13389) ?x13392) ?x13395) 0.0))))))))))))))))))))))))
(assert
 (let ((?x13966 (* l_0_10_9 l_0_10_9)))
 (let ((?x13964 (* l_0_10_85 l_0_10_85)))
 (let ((?x13962 (* l_0_10_84 l_0_10_84)))
 (let ((?x13960 (* l_0_10_83 l_0_10_83)))
 (let ((?x13958 (* l_0_10_82 l_0_10_82)))
 (let ((?x13956 (* l_0_10_8 l_0_10_8)))
 (let ((?x3347 (* l_0_10_7 l_0_10_7)))
 (let ((?x3357 (* l_0_10_25 l_0_10_25)))
 (let ((?x3355 (* l_0_10_24 l_0_10_24)))
 (let ((?x3361 (* l_0_10_23 l_0_10_23)))
 (let ((?x3354 (+ (+ (* (- l_0_10_10) l_0_10_10) (* l_0_10_22 l_0_10_22)) ?x3361)))
 (let ((?x13963 (- (- (- (- (- (+ (+ ?x3354 ?x3355) ?x3357) ?x3347) ?x13956) ?x13958) ?x13960) ?x13962)))
 (= (- (- ?x13963 ?x13964) ?x13966) 0.0))))))))))))))
(assert
 (let ((?x13863 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x13860 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x13857 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x13854 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x13248 (* 2.0 l_0_10_25)))
 (let ((?x13249 (* ?x13248 l_0_10_29)))
 (let ((?x13245 (* 2.0 l_0_10_24)))
 (let ((?x13246 (* ?x13245 l_0_10_28)))
 (let ((?x13242 (* 2.0 l_0_10_23)))
 (let ((?x13243 (* ?x13242 l_0_10_27)))
 (let ((?x2262 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x13994 (- (* (* (- 2.0) l_0_10_10) l_0_10_14) (* (* 2.0 l_0_10_11) l_0_10_7))))
 (let ((?x13998 (- (- ?x13994 (* (* 2.0 l_0_10_12) l_0_10_8)) (* (* 2.0 l_0_10_13) l_0_10_9))))
 (let ((?x14005 (- (- (- (+ (+ (+ (+ ?x13998 ?x2262) ?x13243) ?x13246) ?x13249) ?x13854) ?x13857) ?x13860)))
 (= (- ?x14005 ?x13863) 0.0))))))))))))))))
(assert
 (let ((?x13395 (* l_0_10_90 l_0_10_90)))
 (let ((?x13392 (* l_0_10_89 l_0_10_89)))
 (let ((?x13389 (* l_0_10_88 l_0_10_88)))
 (let ((?x13386 (* l_0_10_87 l_0_10_87)))
 (let ((?x13383 (* l_0_10_86 l_0_10_86)))
 (let ((?x13366 (* l_0_10_30 l_0_10_30)))
 (let ((?x13364 (* l_0_10_29 l_0_10_29)))
 (let ((?x13362 (* l_0_10_28 l_0_10_28)))
 (let ((?x13349 (* l_0_10_27 l_0_10_27)))
 (let ((?x13346 (* l_0_10_26 l_0_10_26)))
 (let ((?x14020 (* l_0_10_15 l_0_10_15)))
 (let ((?x3521 (* l_0_10_14 l_0_10_14)))
 (let ((?x3534 (* l_0_10_13 l_0_10_13)))
 (let ((?x3529 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x3534)))
 (let ((?x14026 (+ (+ (+ (+ (+ (- (- ?x3529 ?x3521) ?x14020) ?x13346) ?x13349) ?x13362) ?x13364) ?x13366)))
 (= (- (- (- (- (- ?x14026 ?x13383) ?x13386) ?x13389) ?x13392) ?x13395) 0.0)))))))))))))))))
(assert
 (let ((?x13152 (* l_0_10_76 l_0_10_76)))
 (let ((?x14052 (- (* (* (- 2.0) l_0_10_16) l_0_10_19) (* (* 2.0 l_0_10_16) l_0_10_16))))
 (let ((?x14056 (+ (- ?x14052 (* (* 2.0 l_0_10_61) l_0_10_64)) (* (* (/ 1.0 2.0) l_0_10_76) l_0_10_79))))
 (= (+ ?x14056 ?x13152) 0.0)))))
(assert
 (let ((?x13779 (* l_0_10_81 l_0_10_81)))
 (let ((?x14072 (* (/ 1.0 4.0) ?x13779)))
 (let ((?x13774 (* l_0_10_80 l_0_10_80)))
 (let ((?x14070 (* (/ 1.0 4.0) ?x13774)))
 (let ((?x13769 (* l_0_10_79 l_0_10_79)))
 (let ((?x14068 (* (/ 1.0 4.0) ?x13769)))
 (let ((?x12894 (* 2.0 l_0_10_76)))
 (let ((?x13202 (* ?x12894 l_0_10_79)))
 (let ((?x12776 (* l_0_10_66 l_0_10_66)))
 (let ((?x12773 (* l_0_10_65 l_0_10_65)))
 (let ((?x12770 (* l_0_10_64 l_0_10_64)))
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x13146 (* ?x13145 l_0_10_47)))
 (let ((?x13142 (* 2.0 l_0_10_31)))
 (let ((?x13143 (* ?x13142 l_0_10_32)))
 (let ((?x12759 (* l_0_10_21 l_0_10_21)))
 (let ((?x12756 (* l_0_10_20 l_0_10_20)))
 (let ((?x3652 (- (- (* (* (- 4.0) l_0_10_16) l_0_10_19) (* l_0_10_19 l_0_10_19)) ?x12756)))
 (let ((?x14067 (+ (- (- (- (- (+ (- ?x3652 ?x12759) ?x13143) ?x13146) ?x12770) ?x12773) ?x12776) ?x13202)))
 (= (+ (+ (+ ?x14067 ?x14068) ?x14070) ?x14072) 0.0)))))))))))))))))))))
(assert
 (let ((?x12894 (* 2.0 l_0_10_76)))
 (let ((?x13279 (* ?x12894 l_0_10_82)))
 (let ((?x13190 (* 2.0 l_0_10_48)))
 (let ((?x13191 (* ?x13190 l_0_10_50)))
 (let ((?x13187 (* 2.0 l_0_10_47)))
 (let ((?x13188 (* ?x13187 l_0_10_49)))
 (let ((?x13184 (* 2.0 l_0_10_33)))
 (let ((?x13185 (* ?x13184 l_0_10_35)))
 (let ((?x13181 (* 2.0 l_0_10_32)))
 (let ((?x13182 (* ?x13181 l_0_10_34)))
 (let ((?x13178 (* 2.0 l_0_10_21)))
 (let ((?x13824 (* ?x13178 l_0_10_24)))
 (let ((?x13175 (* 2.0 l_0_10_20)))
 (let ((?x13822 (* ?x13175 l_0_10_23)))
 (let ((?x13172 (* 2.0 l_0_10_19)))
 (let ((?x13821 (* ?x13172 l_0_10_22)))
 (let ((?x14082 (- (- (- (- (* (* (- 4.0) l_0_10_16) l_0_10_22) ?x13821) ?x13822) ?x13824) ?x13182)))
 (let ((?x14087 (- (+ (+ (- ?x14082 ?x13185) ?x13188) ?x13191) (* (* 2.0 l_0_10_64) l_0_10_67))))
 (let ((?x14091 (- (- ?x14087 (* (* 2.0 l_0_10_65) l_0_10_68)) (* (* 2.0 l_0_10_66) l_0_10_69))))
 (let ((?x14096 (+ (+ (+ ?x14091 ?x13279) (* (* (/ 1.0 2.0) l_0_10_79) l_0_10_82)) (* (* (/ 1.0 2.0) l_0_10_80) l_0_10_83))))
 (= (+ ?x14096 (* (* (/ 1.0 2.0) l_0_10_81) l_0_10_84)) 0.0))))))))))))))))))))))
(assert
 (let ((?x13450 (* l_0_10_78 l_0_10_78)))
 (let ((?x13448 (* l_0_10_77 l_0_10_77)))
 (let ((?x12882 (* 2.0 l_0_10_18)))
 (let ((?x12883 (* ?x12882 l_0_10_20)))
 (let ((?x12879 (* 2.0 l_0_10_17)))
 (let ((?x12880 (* ?x12879 l_0_10_19)))
 (let ((?x3821 (- (* (* (- 2.0) l_0_10_107) l_0_10_109) (* (* 2.0 l_0_10_108) l_0_10_110))))
 (let ((?x14119 (- (- ?x3821 (* (* 2.0 l_0_10_122) l_0_10_124)) (* (* 2.0 l_0_10_123) l_0_10_125))))
 (let ((?x14123 (- (- ?x14119 (* (* 2.0 l_0_10_137) l_0_10_139)) (* (* 2.0 l_0_10_138) l_0_10_140))))
 (let ((?x14129 (- (+ (- (+ ?x14123 ?x12880) (* ?x12879 l_0_10_17)) ?x12883) (* ?x12882 l_0_10_18))))
 (let ((?x14133 (+ (+ ?x14129 (* (* 8.0 l_0_10_62) l_0_10_64)) (* (* 8.0 l_0_10_63) l_0_10_65))))
 (let ((?x14141 (- (- (+ (+ ?x14133 ?x13448) ?x13450) (* (* 2.0 l_0_10_92) l_0_10_94)) (* (* 2.0 l_0_10_93) l_0_10_95))))
 (= ?x14141 0.0))))))))))))))
(assert
 (let ((?x12782 (* 2.0 l_0_10_78)))
 (let ((?x13634 (* ?x12782 l_0_10_83)))
 (let ((?x12779 (* 2.0 l_0_10_77)))
 (let ((?x13632 (* ?x12779 l_0_10_82)))
 (let ((?x13178 (* 2.0 l_0_10_21)))
 (let ((?x13824 (* ?x13178 l_0_10_24)))
 (let ((?x13175 (* 2.0 l_0_10_20)))
 (let ((?x13822 (* ?x13175 l_0_10_23)))
 (let ((?x13172 (* 2.0 l_0_10_19)))
 (let ((?x13821 (* ?x13172 l_0_10_22)))
 (let ((?x14170 (- (* (* (- 2.0) l_0_10_109) l_0_10_112) (* (* 2.0 l_0_10_110) l_0_10_113))))
 (let ((?x14174 (- (- ?x14170 (* (* 2.0 l_0_10_111) l_0_10_114)) (* (* 2.0 l_0_10_124) l_0_10_127))))
 (let ((?x14178 (- (- ?x14174 (* (* 2.0 l_0_10_125) l_0_10_128)) (* (* 2.0 l_0_10_126) l_0_10_129))))
 (let ((?x14182 (- (- ?x14178 (* (* 2.0 l_0_10_139) l_0_10_142)) (* (* 2.0 l_0_10_140) l_0_10_143))))
 (let ((?x14186 (- (- ?x14182 (* (* 2.0 l_0_10_141) l_0_10_144)) (* (* 4.0 l_0_10_17) l_0_10_22))))
 (let ((?x14191 (+ (+ (+ (- ?x14186 (* (* 4.0 l_0_10_18) l_0_10_23)) ?x13821) ?x13822) ?x13824)))
 (let ((?x14195 (+ (+ ?x14191 (* (* 8.0 l_0_10_64) l_0_10_67)) (* (* 8.0 l_0_10_65) l_0_10_68))))
 (let ((?x14202 (- (+ (+ (+ ?x14195 (* (* 8.0 l_0_10_66) l_0_10_69)) ?x13632) ?x13634) (* (* 2.0 l_0_10_94) l_0_10_97))))
 (let ((?x14208 (- (- ?x14202 (* (* 2.0 l_0_10_95) l_0_10_98)) (* (* 2.0 l_0_10_96) l_0_10_99))))
 (= ?x14208 0.0)))))))))))))))))))))
(assert
 (let ((?x13779 (* l_0_10_81 l_0_10_81)))
 (let ((?x13774 (* l_0_10_80 l_0_10_80)))
 (let ((?x13769 (* l_0_10_79 l_0_10_79)))
 (let ((?x13190 (* 2.0 l_0_10_48)))
 (let ((?x13191 (* ?x13190 l_0_10_50)))
 (let ((?x13187 (* 2.0 l_0_10_47)))
 (let ((?x13188 (* ?x13187 l_0_10_49)))
 (let ((?x13184 (* 2.0 l_0_10_33)))
 (let ((?x13185 (* ?x13184 l_0_10_35)))
 (let ((?x13181 (* 2.0 l_0_10_32)))
 (let ((?x13182 (* ?x13181 l_0_10_34)))
 (let ((?x14225 (- (* (* (- 2.0) l_0_10_19) l_0_10_19) (* (* 2.0 l_0_10_20) l_0_10_20))))
 (let ((?x14230 (- (+ (+ (- ?x14225 (* (* 2.0 l_0_10_21) l_0_10_21)) ?x13182) ?x13185) ?x13188)))
 (= (+ (+ (+ (- ?x14230 ?x13191) ?x13769) ?x13774) ?x13779) 0.0)))))))))))))))
(assert
 (let ((?x13776 (* 2.0 l_0_10_81)))
 (let ((?x13851 (* ?x13776 l_0_10_84)))
 (let ((?x13771 (* 2.0 l_0_10_80)))
 (let ((?x13849 (* ?x13771 l_0_10_83)))
 (let ((?x13766 (* 2.0 l_0_10_79)))
 (let ((?x13847 (* ?x13766 l_0_10_82)))
 (let ((?x13190 (* 2.0 l_0_10_48)))
 (let ((?x13263 (* ?x13190 l_0_10_53)))
 (let ((?x13187 (* 2.0 l_0_10_47)))
 (let ((?x13259 (* ?x13187 l_0_10_52)))
 (let ((?x13184 (* 2.0 l_0_10_33)))
 (let ((?x13255 (* ?x13184 l_0_10_38)))
 (let ((?x13181 (* 2.0 l_0_10_32)))
 (let ((?x13251 (* ?x13181 l_0_10_37)))
 (let ((?x14253 (- (* (* (- 4.0) l_0_10_19) l_0_10_22) (* (* 4.0 l_0_10_20) l_0_10_23))))
 (let ((?x14258 (- (+ (+ (- ?x14253 (* (* 4.0 l_0_10_21) l_0_10_24)) ?x13251) ?x13255) ?x13259)))
 (= (+ (+ (+ (- ?x14258 ?x13263) ?x13847) ?x13849) ?x13851) 0.0))))))))))))))))))
(assert
 (let ((?x13964 (* l_0_10_85 l_0_10_85)))
 (let ((?x13962 (* l_0_10_84 l_0_10_84)))
 (let ((?x13960 (* l_0_10_83 l_0_10_83)))
 (let ((?x13958 (* l_0_10_82 l_0_10_82)))
 (let ((?x4279 (- (* (* (- 2.0) l_0_10_22) l_0_10_22) (* (* 2.0 l_0_10_23) l_0_10_23))))
 (let ((?x4219 (- (- ?x4279 (* (* 2.0 l_0_10_24) l_0_10_24)) (* (* 2.0 l_0_10_25) l_0_10_25))))
 (= (+ (+ (+ (+ ?x4219 ?x13958) ?x13960) ?x13962) ?x13964) 0.0))))))))
(assert
 (let ((?x4355 (+ (- (* (- l_0_10_16) l_0_10_16) (* l_0_10_61 l_0_10_61)) (* (/ 1.0 4.0) (* l_0_10_76 l_0_10_76)))))
 (= ?x4355 0.0)))
(assert
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x13146 (* ?x13145 l_0_10_47)))
 (let ((?x13142 (* 2.0 l_0_10_31)))
 (let ((?x13143 (* ?x13142 l_0_10_32)))
 (let ((?x14277 (- (+ (- (* (* (- 2.0) l_0_10_16) l_0_10_22) ?x13143) ?x13146) (* (* 2.0 l_0_10_61) l_0_10_67))))
 (= (+ ?x14277 (* (* (/ 1.0 2.0) l_0_10_76) l_0_10_82)) 0.0)))))))
(assert
 (let ((?x14296 (* l_0_10_63 l_0_10_63)))
 (let ((?x14294 (* l_0_10_62 l_0_10_62)))
 (let ((?x13436 (* l_0_10_18 l_0_10_18)))
 (let ((?x13433 (* l_0_10_17 l_0_10_17)))
 (let ((?x12876 (* 2.0 l_0_10_16)))
 (let ((?x12980 (* ?x12876 l_0_10_17)))
 (let ((?x14286 (- (* (* (- 2.0) l_0_10_106) l_0_10_107) (* (* 2.0 l_0_10_121) l_0_10_122))))
 (let ((?x14291 (- (- (+ (- ?x14286 (* (* 2.0 l_0_10_136) l_0_10_137)) ?x12980) ?x13433) ?x13436)))
 (let ((?x14299 (+ (- (- (+ ?x14291 (* (* 8.0 l_0_10_61) l_0_10_62)) ?x14294) ?x14296) (* (/ 1.0 4.0) (* l_0_10_77 l_0_10_77)))))
 (let ((?x14303 (- (+ ?x14299 (* (/ 1.0 4.0) (* l_0_10_78 l_0_10_78))) (* (* 2.0 l_0_10_91) l_0_10_92))))
 (= ?x14303 0.0))))))))))))
(assert
 (let ((?x14353 (* l_0_10_70 l_0_10_70)))
 (let ((?x14351 (* l_0_10_69 l_0_10_69)))
 (let ((?x14349 (* l_0_10_68 l_0_10_68)))
 (let ((?x14347 (* l_0_10_67 l_0_10_67)))
 (let ((?x13190 (* 2.0 l_0_10_48)))
 (let ((?x13263 (* ?x13190 l_0_10_53)))
 (let ((?x13187 (* 2.0 l_0_10_47)))
 (let ((?x13259 (* ?x13187 l_0_10_52)))
 (let ((?x13184 (* 2.0 l_0_10_33)))
 (let ((?x13255 (* ?x13184 l_0_10_38)))
 (let ((?x13181 (* 2.0 l_0_10_32)))
 (let ((?x13251 (* ?x13181 l_0_10_37)))
 (let ((?x3357 (* l_0_10_25 l_0_10_25)))
 (let ((?x3355 (* l_0_10_24 l_0_10_24)))
 (let ((?x14341 (- (- (* (- l_0_10_22) l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x3355)))
 (let ((?x14350 (- (- (+ (+ (- (- (- ?x14341 ?x3357) ?x13251) ?x13255) ?x13259) ?x13263) ?x14347) ?x14349)))
 (let ((?x14358 (+ (+ (- (- ?x14350 ?x14351) ?x14353) (* (/ 1.0 4.0) (* l_0_10_82 l_0_10_82))) (* (/ 1.0 4.0) (* l_0_10_83 l_0_10_83)))))
 (let ((?x14362 (+ (+ ?x14358 (* (/ 1.0 4.0) (* l_0_10_84 l_0_10_84))) (* (/ 1.0 4.0) (* l_0_10_85 l_0_10_85)))))
 (= ?x14362 0.0))))))))))))))))))))
(assert
 (let ((?x14392 (* l_0_10_93 l_0_10_93)))
 (let ((?x14390 (* l_0_10_92 l_0_10_92)))
 (let ((?x14296 (* l_0_10_63 l_0_10_63)))
 (let ((?x14388 (* 4.0 ?x14296)))
 (let ((?x14294 (* l_0_10_62 l_0_10_62)))
 (let ((?x14386 (* 4.0 ?x14294)))
 (let ((?x14380 (* l_0_10_138 l_0_10_138)))
 (let ((?x14378 (* l_0_10_137 l_0_10_137)))
 (let ((?x14376 (* l_0_10_123 l_0_10_123)))
 (let ((?x14374 (* l_0_10_122 l_0_10_122)))
 (let ((?x14375 (- (- (* (- l_0_10_107) l_0_10_107) (* l_0_10_108 l_0_10_108)) ?x14374)))
 (let ((?x14383 (+ (- (- (- ?x14375 ?x14376) ?x14378) ?x14380) (* 1.0 (* l_0_10_17 l_0_10_17)))))
 (let ((?x14391 (- (+ (+ (+ ?x14383 (* 1.0 (* l_0_10_18 l_0_10_18))) ?x14386) ?x14388) ?x14390)))
 (= (- ?x14391 ?x14392) 0.0)))))))))))))))
(assert
 (let ((?x12882 (* 2.0 l_0_10_18)))
 (let ((?x13080 (* ?x12882 l_0_10_23)))
 (let ((?x12879 (* 2.0 l_0_10_17)))
 (let ((?x13078 (* ?x12879 l_0_10_22)))
 (let ((?x14415 (- (* (* (- 2.0) l_0_10_107) l_0_10_112) (* (* 2.0 l_0_10_108) l_0_10_113))))
 (let ((?x14419 (- (- ?x14415 (* (* 2.0 l_0_10_122) l_0_10_127)) (* (* 2.0 l_0_10_123) l_0_10_128))))
 (let ((?x14423 (- (- ?x14419 (* (* 2.0 l_0_10_137) l_0_10_142)) (* (* 2.0 l_0_10_138) l_0_10_143))))
 (let ((?x14429 (+ (+ (+ (+ ?x14423 ?x13078) ?x13080) (* (* 8.0 l_0_10_62) l_0_10_67)) (* (* 8.0 l_0_10_63) l_0_10_68))))
 (let ((?x14433 (- (- ?x14429 (* (* 2.0 l_0_10_92) l_0_10_97)) (* (* 2.0 l_0_10_93) l_0_10_98))))
 (= ?x14433 0.0)))))))))))
(assert
 (let ((?x14503 (* l_0_10_99 l_0_10_99)))
 (let ((?x14501 (* l_0_10_98 l_0_10_98)))
 (let ((?x14499 (* l_0_10_97 l_0_10_97)))
 (let ((?x14353 (* l_0_10_70 l_0_10_70)))
 (let ((?x14497 (* 4.0 ?x14353)))
 (let ((?x14351 (* l_0_10_69 l_0_10_69)))
 (let ((?x14495 (* 4.0 ?x14351)))
 (let ((?x14349 (* l_0_10_68 l_0_10_68)))
 (let ((?x14493 (* 4.0 ?x14349)))
 (let ((?x14347 (* l_0_10_67 l_0_10_67)))
 (let ((?x14491 (* 4.0 ?x14347)))
 (let ((?x14481 (* l_0_10_145 l_0_10_145)))
 (let ((?x14479 (* l_0_10_144 l_0_10_144)))
 (let ((?x14477 (* l_0_10_143 l_0_10_143)))
 (let ((?x14475 (* l_0_10_142 l_0_10_142)))
 (let ((?x14473 (* l_0_10_130 l_0_10_130)))
 (let ((?x14471 (* l_0_10_129 l_0_10_129)))
 (let ((?x14469 (* l_0_10_128 l_0_10_128)))
 (let ((?x14467 (* l_0_10_127 l_0_10_127)))
 (let ((?x14465 (* l_0_10_115 l_0_10_115)))
 (let ((?x14463 (* l_0_10_114 l_0_10_114)))
 (let ((?x14461 (* l_0_10_113 l_0_10_113)))
 (let ((?x14462 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_112 l_0_10_112)) ?x14461)))
 (let ((?x14476 (- (- (- (- (- (- (- ?x14462 ?x14463) ?x14465) ?x14467) ?x14469) ?x14471) ?x14473) ?x14475)))
 (let ((?x14484 (+ (- (- (- ?x14476 ?x14477) ?x14479) ?x14481) (* 1.0 (* l_0_10_22 l_0_10_22)))))
 (let ((?x14488 (+ (+ ?x14484 (* 1.0 (* l_0_10_23 l_0_10_23))) (* 1.0 (* l_0_10_24 l_0_10_24)))))
 (let ((?x14496 (+ (+ (+ (+ ?x14488 (* 1.0 (* l_0_10_25 l_0_10_25))) ?x14491) ?x14493) ?x14495)))
 (= (- (- (- (+ ?x14496 ?x14497) ?x14499) ?x14501) ?x14503) 0.0)))))))))))))))))))))))))))))
(assert
 (= (+ (* (- l_0_10_31) l_0_10_31) (* l_0_10_46 l_0_10_46)) 0.0))
(assert
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x14524 (* ?x13145 l_0_10_49)))
 (= (+ (* (* (- 2.0) l_0_10_31) l_0_10_34) ?x14524) 0.0))))
(assert
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x14532 (* ?x13145 l_0_10_52)))
 (= (+ (* (* (- 2.0) l_0_10_31) l_0_10_37) ?x14532) 0.0))))
(assert
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x14545 (* ?x13145 l_0_10_56)))
 (let ((?x14532 (* ?x13145 l_0_10_52)))
 (let ((?x13142 (* 2.0 l_0_10_31)))
 (let ((?x14538 (* ?x13142 l_0_10_41)))
 (let ((?x14536 (* ?x13142 l_0_10_37)))
 (= (+ (- (- ?x14536 ?x14538) ?x14532) ?x14545) 0.0))))))))
(assert
 (let ((?x14564 (* l_0_10_51 l_0_10_51)))
 (let ((?x14562 (* l_0_10_50 l_0_10_50)))
 (let ((?x14560 (* l_0_10_49 l_0_10_49)))
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x14532 (* ?x13145 l_0_10_52)))
 (let ((?x14557 (* l_0_10_36 l_0_10_36)))
 (let ((?x14555 (* l_0_10_35 l_0_10_35)))
 (let ((?x14556 (- (- (* (* 2.0 l_0_10_31) l_0_10_37) (* l_0_10_34 l_0_10_34)) ?x14555)))
 (= (+ (+ (+ (- (- ?x14556 ?x14557) ?x14532) ?x14560) ?x14562) ?x14564) 0.0))))))))))
(assert
 (let ((?x14589 (* 2.0 l_0_10_51)))
 (let ((?x14590 (* ?x14589 l_0_10_54)))
 (let ((?x14586 (* 2.0 l_0_10_50)))
 (let ((?x14587 (* ?x14586 l_0_10_53)))
 (let ((?x14583 (* 2.0 l_0_10_49)))
 (let ((?x14584 (* ?x14583 l_0_10_52)))
 (let ((?x14580 (* 2.0 l_0_10_36)))
 (let ((?x14581 (* ?x14580 l_0_10_39)))
 (let ((?x14577 (* 2.0 l_0_10_35)))
 (let ((?x14578 (* ?x14577 l_0_10_38)))
 (let ((?x14588 (+ (+ (- (- (* (* (- 2.0) l_0_10_34) l_0_10_37) ?x14578) ?x14581) ?x14584) ?x14587)))
 (= (+ ?x14588 ?x14590) 0.0)))))))))))))
(assert
 (let ((?x14589 (* 2.0 l_0_10_51)))
 (let ((?x14629 (* ?x14589 l_0_10_58)))
 (let ((?x14590 (* ?x14589 l_0_10_54)))
 (let ((?x14586 (* 2.0 l_0_10_50)))
 (let ((?x14626 (* ?x14586 l_0_10_57)))
 (let ((?x14587 (* ?x14586 l_0_10_53)))
 (let ((?x14583 (* 2.0 l_0_10_49)))
 (let ((?x14623 (* ?x14583 l_0_10_56)))
 (let ((?x14584 (* ?x14583 l_0_10_52)))
 (let ((?x14580 (* 2.0 l_0_10_36)))
 (let ((?x14620 (* ?x14580 l_0_10_43)))
 (let ((?x14581 (* ?x14580 l_0_10_39)))
 (let ((?x14577 (* 2.0 l_0_10_35)))
 (let ((?x14617 (* ?x14577 l_0_10_42)))
 (let ((?x14578 (* ?x14577 l_0_10_38)))
 (let ((?x14604 (* 2.0 l_0_10_34)))
 (let ((?x14608 (* ?x14604 l_0_10_41)))
 (let ((?x14606 (* ?x14604 l_0_10_37)))
 (let ((?x14624 (+ (- (- (+ (- (+ (- ?x14606 ?x14608) ?x14578) ?x14617) ?x14581) ?x14620) ?x14584) ?x14623)))
 (= (+ (- (+ (- ?x14624 ?x14587) ?x14626) ?x14590) ?x14629) 0.0)))))))))))))))))))))
(assert
 (let ((?x14643 (* l_0_10_55 l_0_10_55)))
 (let ((?x14641 (* l_0_10_54 l_0_10_54)))
 (let ((?x4939 (* l_0_10_53 l_0_10_53)))
 (let ((?x4946 (* l_0_10_52 l_0_10_52)))
 (let ((?x4949 (* l_0_10_40 l_0_10_40)))
 (let ((?x4923 (* l_0_10_39 l_0_10_39)))
 (let ((?x4930 (- (- (* (- l_0_10_37) l_0_10_37) (* l_0_10_38 l_0_10_38)) ?x4923)))
 (= (+ (+ (+ (+ (- ?x4930 ?x4949) ?x4946) ?x4939) ?x14641) ?x14643) 0.0)))))))))
(assert
 (let ((?x14643 (* l_0_10_55 l_0_10_55)))
 (let ((?x14689 (* (* 2.0 l_0_10_55) l_0_10_59)))
 (let ((?x14641 (* l_0_10_54 l_0_10_54)))
 (let ((?x14685 (* (* 2.0 l_0_10_54) l_0_10_58)))
 (let ((?x4939 (* l_0_10_53 l_0_10_53)))
 (let ((?x14681 (* (* 2.0 l_0_10_53) l_0_10_57)))
 (let ((?x4946 (* l_0_10_52 l_0_10_52)))
 (let ((?x14677 (* (* 2.0 l_0_10_52) l_0_10_56)))
 (let ((?x4949 (* l_0_10_40 l_0_10_40)))
 (let ((?x14673 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x4923 (* l_0_10_39 l_0_10_39)))
 (let ((?x14669 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x4898 (* l_0_10_38 l_0_10_38)))
 (let ((?x14665 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14666 (- (+ (* (* (- 2.0) l_0_10_37) l_0_10_41) (* l_0_10_37 l_0_10_37)) ?x14665)))
 (let ((?x14679 (- (+ (+ (- (+ (- (+ ?x14666 ?x4898) ?x14669) ?x4923) ?x14673) ?x4949) ?x14677) ?x4946)))
 (= (- (+ (- (+ (- (+ ?x14679 ?x14681) ?x4939) ?x14685) ?x14641) ?x14689) ?x14643) 0.0))))))))))))))))))
(assert
 (let ((?x14737 (* l_0_10_60 l_0_10_60)))
 (let ((?x14735 (* l_0_10_59 l_0_10_59)))
 (let ((?x14733 (* l_0_10_58 l_0_10_58)))
 (let ((?x14731 (* l_0_10_57 l_0_10_57)))
 (let ((?x14729 (* l_0_10_56 l_0_10_56)))
 (let ((?x14689 (* (* 2.0 l_0_10_55) l_0_10_59)))
 (let ((?x14685 (* (* 2.0 l_0_10_54) l_0_10_58)))
 (let ((?x14681 (* (* 2.0 l_0_10_53) l_0_10_57)))
 (let ((?x14677 (* (* 2.0 l_0_10_52) l_0_10_56)))
 (let ((?x14723 (* l_0_10_45 l_0_10_45)))
 (let ((?x14721 (* l_0_10_44 l_0_10_44)))
 (let ((?x14719 (* l_0_10_43 l_0_10_43)))
 (let ((?x14717 (* l_0_10_42 l_0_10_42)))
 (let ((?x14715 (* l_0_10_41 l_0_10_41)))
 (let ((?x14673 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x14669 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x14665 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14714 (+ (+ (+ (* (* 2.0 l_0_10_37) l_0_10_41) ?x14665) ?x14669) ?x14673)))
 (let ((?x14726 (- (- (- (- (- (- (- ?x14714 ?x14715) ?x14717) ?x14719) ?x14721) ?x14723) ?x14677) ?x14681)))
 (let ((?x14738 (+ (+ (+ (+ (+ (- (- ?x14726 ?x14685) ?x14689) ?x14729) ?x14731) ?x14733) ?x14735) ?x14737)))
 (= ?x14738 0.0))))))))))))))))))))))
(assert
 (= (- (* l_0_10_31 l_0_10_31) (* l_0_10_46 l_0_10_46)) 0.0))
(assert
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x14524 (* ?x13145 l_0_10_49)))
 (= (- (* (* 2.0 l_0_10_31) l_0_10_34) ?x14524) 0.0))))
(assert
 (let ((?x14564 (* l_0_10_51 l_0_10_51)))
 (let ((?x14562 (* l_0_10_50 l_0_10_50)))
 (let ((?x14560 (* l_0_10_49 l_0_10_49)))
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x14545 (* ?x13145 l_0_10_56)))
 (let ((?x14557 (* l_0_10_36 l_0_10_36)))
 (let ((?x14555 (* l_0_10_35 l_0_10_35)))
 (let ((?x5185 (+ (+ (* (* 2.0 l_0_10_31) l_0_10_41) (* l_0_10_34 l_0_10_34)) ?x14555)))
 (= (- (- (- (- (+ ?x5185 ?x14557) ?x14545) ?x14560) ?x14562) ?x14564) 0.0))))))))))
(assert
 (let ((?x14564 (* l_0_10_51 l_0_10_51)))
 (let ((?x14562 (* l_0_10_50 l_0_10_50)))
 (let ((?x14560 (* l_0_10_49 l_0_10_49)))
 (let ((?x14557 (* l_0_10_36 l_0_10_36)))
 (let ((?x5189 (- (+ (+ (* l_0_10_34 l_0_10_34) (* l_0_10_35 l_0_10_35)) ?x14557) ?x14560)))
 (= (- (- ?x5189 ?x14562) ?x14564) 0.0)))))))
(assert
 (let ((?x14589 (* 2.0 l_0_10_51)))
 (let ((?x14590 (* ?x14589 l_0_10_54)))
 (let ((?x14586 (* 2.0 l_0_10_50)))
 (let ((?x14587 (* ?x14586 l_0_10_53)))
 (let ((?x14583 (* 2.0 l_0_10_49)))
 (let ((?x14584 (* ?x14583 l_0_10_52)))
 (let ((?x14580 (* 2.0 l_0_10_36)))
 (let ((?x14581 (* ?x14580 l_0_10_39)))
 (let ((?x14577 (* 2.0 l_0_10_35)))
 (let ((?x14578 (* ?x14577 l_0_10_38)))
 (let ((?x14604 (* 2.0 l_0_10_34)))
 (let ((?x14606 (* ?x14604 l_0_10_37)))
 (= (- (- (- (+ (+ ?x14606 ?x14578) ?x14581) ?x14584) ?x14587) ?x14590) 0.0))))))))))))))
(assert
 (let ((?x14589 (* 2.0 l_0_10_51)))
 (let ((?x14629 (* ?x14589 l_0_10_58)))
 (let ((?x14586 (* 2.0 l_0_10_50)))
 (let ((?x14626 (* ?x14586 l_0_10_57)))
 (let ((?x14583 (* 2.0 l_0_10_49)))
 (let ((?x14623 (* ?x14583 l_0_10_56)))
 (let ((?x14580 (* 2.0 l_0_10_36)))
 (let ((?x14620 (* ?x14580 l_0_10_43)))
 (let ((?x14577 (* 2.0 l_0_10_35)))
 (let ((?x14617 (* ?x14577 l_0_10_42)))
 (let ((?x14604 (* 2.0 l_0_10_34)))
 (let ((?x14608 (* ?x14604 l_0_10_41)))
 (= (- (- (- (+ (+ ?x14608 ?x14617) ?x14620) ?x14623) ?x14626) ?x14629) 0.0))))))))))))))
(assert
 (let ((?x14643 (* l_0_10_55 l_0_10_55)))
 (let ((?x14641 (* l_0_10_54 l_0_10_54)))
 (let ((?x4939 (* l_0_10_53 l_0_10_53)))
 (let ((?x4946 (* l_0_10_52 l_0_10_52)))
 (let ((?x4949 (* l_0_10_40 l_0_10_40)))
 (let ((?x4923 (* l_0_10_39 l_0_10_39)))
 (let ((?x14774 (+ (+ (+ (* l_0_10_37 l_0_10_37) (* l_0_10_38 l_0_10_38)) ?x4923) ?x4949)))
 (= (- (- (- (- ?x14774 ?x4946) ?x4939) ?x14641) ?x14643) 0.0)))))))))
(assert
 (let ((?x14689 (* (* 2.0 l_0_10_55) l_0_10_59)))
 (let ((?x14685 (* (* 2.0 l_0_10_54) l_0_10_58)))
 (let ((?x14681 (* (* 2.0 l_0_10_53) l_0_10_57)))
 (let ((?x14677 (* (* 2.0 l_0_10_52) l_0_10_56)))
 (let ((?x14673 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x14669 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x14665 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14714 (+ (+ (+ (* (* 2.0 l_0_10_37) l_0_10_41) ?x14665) ?x14669) ?x14673)))
 (= (- (- (- (- ?x14714 ?x14677) ?x14681) ?x14685) ?x14689) 0.0))))))))))
(assert
 (let ((?x14737 (* l_0_10_60 l_0_10_60)))
 (let ((?x14735 (* l_0_10_59 l_0_10_59)))
 (let ((?x14733 (* l_0_10_58 l_0_10_58)))
 (let ((?x14731 (* l_0_10_57 l_0_10_57)))
 (let ((?x14729 (* l_0_10_56 l_0_10_56)))
 (let ((?x14723 (* l_0_10_45 l_0_10_45)))
 (let ((?x14721 (* l_0_10_44 l_0_10_44)))
 (let ((?x14719 (* l_0_10_43 l_0_10_43)))
 (let ((?x14804 (+ (+ (+ (* l_0_10_41 l_0_10_41) (* l_0_10_42 l_0_10_42)) ?x14719) ?x14721)))
 (= (- (- (- (- (- (+ ?x14804 ?x14723) ?x14729) ?x14731) ?x14733) ?x14735) ?x14737) 0.0)))))))))))
(assert
 (= (- (* l_0_10_31 l_0_10_31) (* l_0_10_46 l_0_10_46)) 0.0))
(assert
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x14524 (* ?x13145 l_0_10_49)))
 (= (- (* (* 2.0 l_0_10_31) l_0_10_34) ?x14524) 0.0))))
(assert
 (let ((?x13145 (* 2.0 l_0_10_46)))
 (let ((?x14545 (* ?x13145 l_0_10_56)))
 (let ((?x13142 (* 2.0 l_0_10_31)))
 (let ((?x14538 (* ?x13142 l_0_10_41)))
 (= (- ?x14538 ?x14545) 0.0))))))
(assert
 (let ((?x14589 (* 2.0 l_0_10_51)))
 (let ((?x14629 (* ?x14589 l_0_10_58)))
 (let ((?x14586 (* 2.0 l_0_10_50)))
 (let ((?x14626 (* ?x14586 l_0_10_57)))
 (let ((?x14583 (* 2.0 l_0_10_49)))
 (let ((?x14623 (* ?x14583 l_0_10_56)))
 (let ((?x14580 (* 2.0 l_0_10_36)))
 (let ((?x14620 (* ?x14580 l_0_10_43)))
 (let ((?x14577 (* 2.0 l_0_10_35)))
 (let ((?x14617 (* ?x14577 l_0_10_42)))
 (let ((?x14604 (* 2.0 l_0_10_34)))
 (let ((?x14608 (* ?x14604 l_0_10_41)))
 (= (- (- (- (+ (+ ?x14608 ?x14617) ?x14620) ?x14623) ?x14626) ?x14629) 0.0))))))))))))))
(assert
 (let ((?x14737 (* l_0_10_60 l_0_10_60)))
 (let ((?x14735 (* l_0_10_59 l_0_10_59)))
 (let ((?x14733 (* l_0_10_58 l_0_10_58)))
 (let ((?x14731 (* l_0_10_57 l_0_10_57)))
 (let ((?x14729 (* l_0_10_56 l_0_10_56)))
 (let ((?x14723 (* l_0_10_45 l_0_10_45)))
 (let ((?x14721 (* l_0_10_44 l_0_10_44)))
 (let ((?x14719 (* l_0_10_43 l_0_10_43)))
 (let ((?x14804 (+ (+ (+ (* l_0_10_41 l_0_10_41) (* l_0_10_42 l_0_10_42)) ?x14719) ?x14721)))
 (= (- (- (- (- (- (+ ?x14804 ?x14723) ?x14729) ?x14731) ?x14733) ?x14735) ?x14737) 0.0)))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_16 0.0))
(assert
 (>= l_0_10_18 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_25 0.0))
(assert
 (>= l_0_10_30 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_33 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_40 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_55 0.0))
(assert
 (>= l_0_10_60 0.0))
(assert
 (>= l_0_10_61 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_70 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (>= l_0_10_76 0.0))
(assert
 (>= l_0_10_78 0.0))
(assert
 (>= l_0_10_81 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_91 0.0))
(assert
 (>= l_0_10_93 0.0))
(assert
 (>= l_0_10_96 0.0))
(assert
 (>= l_0_10_100 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_106 0.0))
(assert
 (>= l_0_10_108 0.0))
(assert
 (>= l_0_10_111 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_120 0.0))
(assert
 (>= l_0_10_121 0.0))
(assert
 (>= l_0_10_123 0.0))
(assert
 (>= l_0_10_126 0.0))
(assert
 (>= l_0_10_130 0.0))
(assert
 (>= l_0_10_135 0.0))
(assert
 (>= l_0_10_136 0.0))
(assert
 (>= l_0_10_138 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_145 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (let ((?x14883 (* l_0_11_78 l_0_11_78)))
 (let ((?x14881 (* l_0_11_77 l_0_11_77)))
 (let ((?x14873 (* l_0_11_3 l_0_11_3)))
 (let ((?x14871 (* l_0_11_2 l_0_11_2)))
 (let ((?x14869 (* l_0_11_18 l_0_11_18)))
 (let ((?x14866 (* 2.0 l_0_11_18)))
 (let ((?x14867 (* ?x14866 l_0_11_27)))
 (let ((?x14864 (* l_0_11_17 l_0_11_17)))
 (let ((?x14861 (* 2.0 l_0_11_17)))
 (let ((?x14862 (* ?x14861 l_0_11_26)))
 (let ((?x14860 (- (* (* (- 2.0) l_0_11_101) l_0_11_92) (* (* 2.0 l_0_11_102) l_0_11_93))))
 (let ((?x14877 (+ (- (- (+ (+ (+ (+ ?x14860 ?x14862) ?x14864) ?x14867) ?x14869) ?x14871) ?x14873) (* (* 8.0 l_0_11_62) l_0_11_71))))
 (let ((?x14885 (+ (+ (+ (+ ?x14877 (* (* 8.0 l_0_11_63) l_0_11_72)) ?x14881) ?x14883) 1.0)))
 (= ?x14885 0.0)))))))))))))))
(assert
 (let ((?x14923 (* l_0_11_93 l_0_11_93)))
 (let ((?x14921 (* l_0_11_92 l_0_11_92)))
 (let ((?x14918 (* l_0_11_63 l_0_11_63)))
 (let ((?x14919 (* 4.0 ?x14918)))
 (let ((?x14915 (* l_0_11_62 l_0_11_62)))
 (let ((?x14916 (* 4.0 ?x14915)))
 (let ((?x14914 (+ (* 1.0 (* l_0_11_17 l_0_11_17)) (* 1.0 (* l_0_11_18 l_0_11_18)))))
 (= (- (- (+ (+ ?x14914 ?x14916) ?x14919) ?x14921) ?x14923) 0.0)))))))))
(assert
 (let ((?x14953 (* l_0_11_76 l_0_11_76)))
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x14945 (* ?x14944 l_0_11_47)))
 (let ((?x14941 (* 2.0 l_0_11_31)))
 (let ((?x14942 (* ?x14941 l_0_11_32)))
 (let ((?x14939 (* l_0_11_16 l_0_11_16)))
 (let ((?x14936 (* 2.0 l_0_11_16)))
 (let ((?x14937 (* ?x14936 l_0_11_26)))
 (let ((?x14949 (- (- (+ (+ (- (* (- l_0_11_1) l_0_11_1) ?x14937) ?x14939) ?x14942) ?x14945) (* (* 2.0 l_0_11_61) l_0_11_71))))
 (= (+ (- ?x14949 (* (* (/ 1.0 2.0) l_0_11_76) l_0_11_86)) ?x14953) 0.0)))))))))))
(assert
 (let ((?x15015 (* 2.0 l_0_11_76)))
 (let ((?x15016 (* ?x15015 l_0_11_77)))
 (let ((?x15004 (* l_0_11_48 l_0_11_48)))
 (let ((?x15002 (* l_0_11_47 l_0_11_47)))
 (let ((?x15000 (* l_0_11_33 l_0_11_33)))
 (let ((?x14998 (* l_0_11_32 l_0_11_32)))
 (let ((?x14866 (* 2.0 l_0_11_18)))
 (let ((?x14867 (* ?x14866 l_0_11_27)))
 (let ((?x14861 (* 2.0 l_0_11_17)))
 (let ((?x14862 (* ?x14861 l_0_11_26)))
 (let ((?x14936 (* 2.0 l_0_11_16)))
 (let ((?x14937 (* ?x14936 l_0_11_26)))
 (let ((?x14993 (* ?x14936 l_0_11_17)))
 (let ((?x14992 (- (* (* (- 2.0) l_0_11_1) l_0_11_2) (* (* 2.0 l_0_11_101) l_0_11_91))))
 (let ((?x15003 (- (+ (+ (- (- (+ (+ ?x14992 ?x14993) ?x14937) ?x14862) ?x14867) ?x14998) ?x15000) ?x15002)))
 (let ((?x15011 (- (+ (- ?x15003 ?x15004) (* (* 8.0 l_0_11_61) l_0_11_71)) (* (* 2.0 l_0_11_62) l_0_11_71))))
 (let ((?x15020 (- (+ (- ?x15011 (* (* 2.0 l_0_11_63) l_0_11_72)) ?x15016) (* (* (/ 1.0 2.0) l_0_11_77) l_0_11_86))))
 (= (- ?x15020 (* (* (/ 1.0 2.0) l_0_11_78) l_0_11_87)) 0.0)))))))))))))))))))
(assert
 (let ((?x15015 (* 2.0 l_0_11_76)))
 (let ((?x15085 (* ?x15015 l_0_11_86)))
 (let ((?x15083 (* ?x15015 l_0_11_79)))
 (let ((?x15071 (* 2.0 l_0_11_48)))
 (let ((?x15072 (* ?x15071 l_0_11_50)))
 (let ((?x15068 (* 2.0 l_0_11_47)))
 (let ((?x15069 (* ?x15068 l_0_11_49)))
 (let ((?x15065 (* 2.0 l_0_11_33)))
 (let ((?x15066 (* ?x15065 l_0_11_35)))
 (let ((?x15062 (* 2.0 l_0_11_32)))
 (let ((?x15063 (* ?x15062 l_0_11_34)))
 (let ((?x15059 (* 2.0 l_0_11_21)))
 (let ((?x15060 (* ?x15059 l_0_11_28)))
 (let ((?x15056 (* 2.0 l_0_11_20)))
 (let ((?x15057 (* ?x15056 l_0_11_27)))
 (let ((?x15053 (* 2.0 l_0_11_19)))
 (let ((?x15054 (* ?x15053 l_0_11_26)))
 (let ((?x14936 (* 2.0 l_0_11_16)))
 (let ((?x5418 (* ?x14936 l_0_11_19)))
 (let ((?x5417 (- (+ (* (* (- 2.0) l_0_11_1) l_0_11_4) ?x5418) (* (* 4.0 l_0_11_16) l_0_11_26))))
 (let ((?x15073 (- (- (+ (+ (- (- (- ?x5417 ?x15054) ?x15057) ?x15060) ?x15063) ?x15066) ?x15069) ?x15072)))
 (let ((?x15079 (- (- ?x15073 (* (* 2.0 l_0_11_64) l_0_11_71)) (* (* 2.0 l_0_11_65) l_0_11_72))))
 (let ((?x15089 (- (- (+ (- ?x15079 (* (* 2.0 l_0_11_66) l_0_11_73)) ?x15083) ?x15085) (* (* (/ 1.0 2.0) l_0_11_79) l_0_11_86))))
 (let ((?x15095 (- (- ?x15089 (* (* (/ 1.0 2.0) l_0_11_80) l_0_11_87)) (* (* (/ 1.0 2.0) l_0_11_81) l_0_11_88))))
 (= ?x15095 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15015 (* 2.0 l_0_11_76)))
 (let ((?x15194 (* ?x15015 l_0_11_82)))
 (let ((?x15071 (* 2.0 l_0_11_48)))
 (let ((?x15180 (* ?x15071 l_0_11_57)))
 (let ((?x15178 (* ?x15071 l_0_11_53)))
 (let ((?x15068 (* 2.0 l_0_11_47)))
 (let ((?x15176 (* ?x15068 l_0_11_56)))
 (let ((?x15174 (* ?x15068 l_0_11_52)))
 (let ((?x15065 (* 2.0 l_0_11_33)))
 (let ((?x15172 (* ?x15065 l_0_11_42)))
 (let ((?x15170 (* ?x15065 l_0_11_38)))
 (let ((?x15062 (* 2.0 l_0_11_32)))
 (let ((?x15168 (* ?x15062 l_0_11_41)))
 (let ((?x15166 (* ?x15062 l_0_11_37)))
 (let ((?x15163 (* 2.0 l_0_11_25)))
 (let ((?x15164 (* ?x15163 l_0_11_29)))
 (let ((?x15160 (* 2.0 l_0_11_24)))
 (let ((?x15161 (* ?x15160 l_0_11_28)))
 (let ((?x15157 (* 2.0 l_0_11_23)))
 (let ((?x15158 (* ?x15157 l_0_11_27)))
 (let ((?x15155 (* (* 2.0 l_0_11_22) l_0_11_26)))
 (let ((?x14936 (* 2.0 l_0_11_16)))
 (let ((?x15152 (* ?x14936 l_0_11_22)))
 (let ((?x15162 (- (- (- (+ (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x15152) ?x15155) ?x15158) ?x15161)))
 (let ((?x15177 (+ (- (- (+ (- (+ (- ?x15162 ?x15164) ?x15166) ?x15168) ?x15170) ?x15172) ?x15174) ?x15176)))
 (let ((?x15187 (- (- (+ (- ?x15177 ?x15178) ?x15180) (* (* 2.0 l_0_11_67) l_0_11_71)) (* (* 2.0 l_0_11_68) l_0_11_72))))
 (let ((?x15193 (- (- ?x15187 (* (* 2.0 l_0_11_69) l_0_11_73)) (* (* 2.0 l_0_11_70) l_0_11_74))))
 (let ((?x15201 (- (- (+ ?x15193 ?x15194) (* (* (/ 1.0 2.0) l_0_11_82) l_0_11_86)) (* (* (/ 1.0 2.0) l_0_11_83) l_0_11_87))))
 (let ((?x15207 (- (- ?x15201 (* (* (/ 1.0 2.0) l_0_11_84) l_0_11_88)) (* (* (/ 1.0 2.0) l_0_11_85) l_0_11_89))))
 (= ?x15207 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x15015 (* 2.0 l_0_11_76)))
 (let ((?x15085 (* ?x15015 l_0_11_86)))
 (let ((?x15294 (* l_0_11_75 l_0_11_75)))
 (let ((?x15292 (* l_0_11_74 l_0_11_74)))
 (let ((?x15290 (* l_0_11_73 l_0_11_73)))
 (let ((?x15288 (* l_0_11_72 l_0_11_72)))
 (let ((?x15286 (* l_0_11_71 l_0_11_71)))
 (let ((?x15071 (* 2.0 l_0_11_48)))
 (let ((?x15180 (* ?x15071 l_0_11_57)))
 (let ((?x15068 (* 2.0 l_0_11_47)))
 (let ((?x15176 (* ?x15068 l_0_11_56)))
 (let ((?x15065 (* 2.0 l_0_11_33)))
 (let ((?x15172 (* ?x15065 l_0_11_42)))
 (let ((?x15062 (* 2.0 l_0_11_32)))
 (let ((?x15168 (* ?x15062 l_0_11_41)))
 (let ((?x15280 (* l_0_11_30 l_0_11_30)))
 (let ((?x15278 (* l_0_11_29 l_0_11_29)))
 (let ((?x15276 (* l_0_11_28 l_0_11_28)))
 (let ((?x15274 (* l_0_11_27 l_0_11_27)))
 (let ((?x15272 (* l_0_11_26 l_0_11_26)))
 (let ((?x14936 (* 2.0 l_0_11_16)))
 (let ((?x14937 (* ?x14936 l_0_11_26)))
 (let ((?x15277 (- (- (- (+ (* (* (- 2.0) l_0_11_1) l_0_11_11) ?x14937) ?x15272) ?x15274) ?x15276)))
 (let ((?x15287 (- (- (- (+ (+ (- (- ?x15277 ?x15278) ?x15280) ?x15168) ?x15172) ?x15176) ?x15180) ?x15286)))
 (let ((?x15299 (- (+ (- (- (- (- ?x15287 ?x15288) ?x15290) ?x15292) ?x15294) ?x15085) (* (* (/ 1.0 4.0) l_0_11_86) l_0_11_86))))
 (let ((?x15305 (- (- ?x15299 (* (* (/ 1.0 4.0) l_0_11_87) l_0_11_87)) (* (* (/ 1.0 4.0) l_0_11_88) l_0_11_88))))
 (let ((?x15311 (- (- ?x15305 (* (* (/ 1.0 4.0) l_0_11_89) l_0_11_89)) (* (* (/ 1.0 4.0) l_0_11_90) l_0_11_90))))
 (= ?x15311 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x15383 (* 2.0 l_0_11_78)))
 (let ((?x15386 (* ?x15383 l_0_11_87)))
 (let ((?x15384 (* ?x15383 l_0_11_80)))
 (let ((?x15378 (* 2.0 l_0_11_77)))
 (let ((?x15381 (* ?x15378 l_0_11_86)))
 (let ((?x15379 (* ?x15378 l_0_11_79)))
 (let ((?x15059 (* 2.0 l_0_11_21)))
 (let ((?x15060 (* ?x15059 l_0_11_28)))
 (let ((?x15056 (* 2.0 l_0_11_20)))
 (let ((?x15057 (* ?x15056 l_0_11_27)))
 (let ((?x15053 (* 2.0 l_0_11_19)))
 (let ((?x15054 (* ?x15053 l_0_11_26)))
 (let ((?x14866 (* 2.0 l_0_11_18)))
 (let ((?x15355 (* ?x14866 l_0_11_20)))
 (let ((?x14861 (* 2.0 l_0_11_17)))
 (let ((?x15350 (* ?x14861 l_0_11_19)))
 (let ((?x15346 (- (* (* (- 2.0) l_0_11_101) l_0_11_94) (* (* 2.0 l_0_11_102) l_0_11_95))))
 (let ((?x15354 (- (+ (- ?x15346 (* (* 2.0 l_0_11_103) l_0_11_96)) ?x15350) (* (* 4.0 l_0_11_17) l_0_11_26))))
 (let ((?x15363 (- (+ (- (+ ?x15354 ?x15355) (* (* 4.0 l_0_11_18) l_0_11_27)) ?x15054) (* (* 2.0 l_0_11_2) l_0_11_4))))
 (let ((?x15371 (+ (- (+ (+ ?x15363 ?x15057) ?x15060) (* (* 2.0 l_0_11_3) l_0_11_5)) (* (* 8.0 l_0_11_64) l_0_11_71))))
 (let ((?x15377 (+ (+ ?x15371 (* (* 8.0 l_0_11_65) l_0_11_72)) (* (* 8.0 l_0_11_66) l_0_11_73))))
 (= (- (+ (- (+ ?x15377 ?x15379) ?x15381) ?x15384) ?x15386) 0.0)))))))))))))))))))))))
(assert
 (let ((?x15383 (* 2.0 l_0_11_78)))
 (let ((?x15462 (* ?x15383 l_0_11_83)))
 (let ((?x15378 (* 2.0 l_0_11_77)))
 (let ((?x15460 (* ?x15378 l_0_11_82)))
 (let ((?x15163 (* 2.0 l_0_11_25)))
 (let ((?x15164 (* ?x15163 l_0_11_29)))
 (let ((?x15160 (* 2.0 l_0_11_24)))
 (let ((?x15161 (* ?x15160 l_0_11_28)))
 (let ((?x15157 (* 2.0 l_0_11_23)))
 (let ((?x15158 (* ?x15157 l_0_11_27)))
 (let ((?x15155 (* (* 2.0 l_0_11_22) l_0_11_26)))
 (let ((?x14866 (* 2.0 l_0_11_18)))
 (let ((?x15438 (* ?x14866 l_0_11_23)))
 (let ((?x14861 (* 2.0 l_0_11_17)))
 (let ((?x15436 (* ?x14861 l_0_11_22)))
 (let ((?x15431 (- (* (* (- 2.0) l_0_11_100) l_0_11_104) (* (* 2.0 l_0_11_101) l_0_11_97))))
 (let ((?x15435 (- (- ?x15431 (* (* 2.0 l_0_11_102) l_0_11_98)) (* (* 2.0 l_0_11_103) l_0_11_99))))
 (let ((?x15442 (+ (- (+ (+ ?x15435 ?x15436) ?x15438) (* (* 2.0 l_0_11_2) l_0_11_7)) ?x15155)))
 (let ((?x15447 (- (+ (+ (+ ?x15442 ?x15158) ?x15161) ?x15164) (* (* 2.0 l_0_11_3) l_0_11_8))))
 (let ((?x15453 (+ (+ ?x15447 (* (* 8.0 l_0_11_67) l_0_11_71)) (* (* 8.0 l_0_11_68) l_0_11_72))))
 (let ((?x15459 (+ (+ ?x15453 (* (* 8.0 l_0_11_69) l_0_11_73)) (* (* 8.0 l_0_11_70) l_0_11_74))))
 (= (+ (+ ?x15459 ?x15460) ?x15462) 0.0)))))))))))))))))))))))
(assert
 (let ((?x15383 (* 2.0 l_0_11_78)))
 (let ((?x15386 (* ?x15383 l_0_11_87)))
 (let ((?x15378 (* 2.0 l_0_11_77)))
 (let ((?x15381 (* ?x15378 l_0_11_86)))
 (let ((?x15294 (* l_0_11_75 l_0_11_75)))
 (let ((?x15525 (* 4.0 ?x15294)))
 (let ((?x15292 (* l_0_11_74 l_0_11_74)))
 (let ((?x15523 (* 4.0 ?x15292)))
 (let ((?x15290 (* l_0_11_73 l_0_11_73)))
 (let ((?x15521 (* 4.0 ?x15290)))
 (let ((?x15288 (* l_0_11_72 l_0_11_72)))
 (let ((?x15519 (* 4.0 ?x15288)))
 (let ((?x15286 (* l_0_11_71 l_0_11_71)))
 (let ((?x15517 (* 4.0 ?x15286)))
 (let ((?x14866 (* 2.0 l_0_11_18)))
 (let ((?x14867 (* ?x14866 l_0_11_27)))
 (let ((?x14861 (* 2.0 l_0_11_17)))
 (let ((?x14862 (* ?x14861 l_0_11_26)))
 (let ((?x15497 (* l_0_11_105 l_0_11_105)))
 (let ((?x15484 (* l_0_11_104 l_0_11_104)))
 (let ((?x5930 (* l_0_11_103 l_0_11_103)))
 (let ((?x15483 (- (- (* (- l_0_11_101) l_0_11_101) (* l_0_11_102 l_0_11_102)) ?x5930)))
 (let ((?x15504 (- (- (- (- ?x15483 ?x15484) ?x15497) (* (* 2.0 l_0_11_11) l_0_11_2)) (* (* 2.0 l_0_11_12) l_0_11_3))))
 (let ((?x15510 (+ (+ (+ (+ ?x15504 ?x14862) ?x14867) (* 1.0 (* l_0_11_26 l_0_11_26))) (* 1.0 (* l_0_11_27 l_0_11_27)))))
 (let ((?x15514 (+ (+ ?x15510 (* 1.0 (* l_0_11_28 l_0_11_28))) (* 1.0 (* l_0_11_29 l_0_11_29)))))
 (let ((?x15522 (+ (+ (+ (+ ?x15514 (* 1.0 (* l_0_11_30 l_0_11_30))) ?x15517) ?x15519) ?x15521)))
 (= (+ (+ (+ (+ ?x15522 ?x15523) ?x15525) ?x15381) ?x15386) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x15561 (* l_0_11_81 l_0_11_81)))
 (let ((?x15558 (* 2.0 l_0_11_81)))
 (let ((?x15559 (* ?x15558 l_0_11_88)))
 (let ((?x15556 (* l_0_11_80 l_0_11_80)))
 (let ((?x15553 (* 2.0 l_0_11_80)))
 (let ((?x15554 (* ?x15553 l_0_11_87)))
 (let ((?x15551 (* l_0_11_79 l_0_11_79)))
 (let ((?x15548 (* 2.0 l_0_11_79)))
 (let ((?x15549 (* ?x15548 l_0_11_86)))
 (let ((?x15546 (* l_0_11_6 l_0_11_6)))
 (let ((?x5964 (* l_0_11_5 l_0_11_5)))
 (let ((?x15071 (* 2.0 l_0_11_48)))
 (let ((?x15180 (* ?x15071 l_0_11_57)))
 (let ((?x15068 (* 2.0 l_0_11_47)))
 (let ((?x15176 (* ?x15068 l_0_11_56)))
 (let ((?x5999 (* l_0_11_4 l_0_11_4)))
 (let ((?x15065 (* 2.0 l_0_11_33)))
 (let ((?x15172 (* ?x15065 l_0_11_42)))
 (let ((?x15062 (* 2.0 l_0_11_32)))
 (let ((?x15168 (* ?x15062 l_0_11_41)))
 (let ((?x6005 (* l_0_11_21 l_0_11_21)))
 (let ((?x6000 (* l_0_11_20 l_0_11_20)))
 (let ((?x6020 (- (+ (* (* (- 4.0) l_0_11_19) l_0_11_26) (* l_0_11_19 l_0_11_19)) (* (* 4.0 l_0_11_20) l_0_11_27))))
 (let ((?x5996 (+ (+ (- (+ ?x6020 ?x6000) (* (* 4.0 l_0_11_21) l_0_11_28)) ?x6005) ?x15168)))
 (let ((?x15550 (- (- (- (- (- (- (+ ?x5996 ?x15172) ?x5999) ?x15176) ?x15180) ?x5964) ?x15546) ?x15549)))
 (= (+ (- (+ (- (+ ?x15550 ?x15551) ?x15554) ?x15556) ?x15559) ?x15561) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x15652 (* (* 2.0 l_0_11_85) l_0_11_89)))
 (let ((?x15649 (* (* 2.0 l_0_11_84) l_0_11_88)))
 (let ((?x15646 (* (* 2.0 l_0_11_83) l_0_11_87)))
 (let ((?x15643 (* (* 2.0 l_0_11_82) l_0_11_86)))
 (let ((?x15558 (* 2.0 l_0_11_81)))
 (let ((?x15640 (* ?x15558 l_0_11_84)))
 (let ((?x15553 (* 2.0 l_0_11_80)))
 (let ((?x15638 (* ?x15553 l_0_11_83)))
 (let ((?x15548 (* 2.0 l_0_11_79)))
 (let ((?x15636 (* ?x15548 l_0_11_82)))
 (let ((?x15059 (* 2.0 l_0_11_21)))
 (let ((?x15613 (* ?x15059 l_0_11_24)))
 (let ((?x15056 (* 2.0 l_0_11_20)))
 (let ((?x15611 (* ?x15056 l_0_11_23)))
 (let ((?x15053 (* 2.0 l_0_11_19)))
 (let ((?x15601 (* ?x15053 l_0_11_22)))
 (let ((?x15620 (- (- (+ (+ ?x15601 ?x15611) ?x15613) (* (* 4.0 l_0_11_22) l_0_11_26)) (* (* 4.0 l_0_11_23) l_0_11_27))))
 (let ((?x15626 (- (- ?x15620 (* (* 4.0 l_0_11_24) l_0_11_28)) (* (* 4.0 l_0_11_25) l_0_11_29))))
 (let ((?x15632 (- (- ?x15626 (* (* 2.0 l_0_11_4) l_0_11_7)) (* (* 2.0 l_0_11_5) l_0_11_8))))
 (let ((?x15641 (+ (+ (+ (- ?x15632 (* (* 2.0 l_0_11_6) l_0_11_9)) ?x15636) ?x15638) ?x15640)))
 (= (- (- (- (- ?x15641 ?x15643) ?x15646) ?x15649) ?x15652) 0.0))))))))))))))))))))))
(assert
 (let ((?x15341 (* l_0_11_90 l_0_11_90)))
 (let ((?x5798 (* l_0_11_89 l_0_11_89)))
 (let ((?x5796 (* l_0_11_88 l_0_11_88)))
 (let ((?x5752 (* l_0_11_87 l_0_11_87)))
 (let ((?x5741 (* l_0_11_86 l_0_11_86)))
 (let ((?x15558 (* 2.0 l_0_11_81)))
 (let ((?x15559 (* ?x15558 l_0_11_88)))
 (let ((?x15553 (* 2.0 l_0_11_80)))
 (let ((?x15554 (* ?x15553 l_0_11_87)))
 (let ((?x15548 (* 2.0 l_0_11_79)))
 (let ((?x15549 (* ?x15548 l_0_11_86)))
 (let ((?x15059 (* 2.0 l_0_11_21)))
 (let ((?x15060 (* ?x15059 l_0_11_28)))
 (let ((?x15056 (* 2.0 l_0_11_20)))
 (let ((?x15057 (* ?x15056 l_0_11_27)))
 (let ((?x15053 (* 2.0 l_0_11_19)))
 (let ((?x15054 (* ?x15053 l_0_11_26)))
 (let ((?x15690 (- (* (* (- 2.0) l_0_11_11) l_0_11_4) (* (* 2.0 l_0_11_12) l_0_11_5))))
 (let ((?x15696 (+ (+ (+ (- ?x15690 (* (* 2.0 l_0_11_13) l_0_11_6)) ?x15054) ?x15057) ?x15060)))
 (let ((?x15702 (- (- ?x15696 (* (* 2.0 l_0_11_26) l_0_11_26)) (* (* 2.0 l_0_11_27) l_0_11_27))))
 (let ((?x15708 (- (- ?x15702 (* (* 2.0 l_0_11_28) l_0_11_28)) (* (* 2.0 l_0_11_29) l_0_11_29))))
 (let ((?x15714 (+ (+ (+ (- ?x15708 (* (* 2.0 l_0_11_30) l_0_11_30)) ?x15549) ?x15554) ?x15559)))
 (= (- (- (- (- (- ?x15714 ?x5741) ?x5752) ?x5796) ?x5798) ?x15341) 0.0))))))))))))))))))))))))
(assert
 (let ((?x15787 (* l_0_11_9 l_0_11_9)))
 (let ((?x15785 (* l_0_11_85 l_0_11_85)))
 (let ((?x15783 (* l_0_11_84 l_0_11_84)))
 (let ((?x15781 (* l_0_11_83 l_0_11_83)))
 (let ((?x15779 (* l_0_11_82 l_0_11_82)))
 (let ((?x15777 (* l_0_11_8 l_0_11_8)))
 (let ((?x15775 (* l_0_11_7 l_0_11_7)))
 (let ((?x15773 (* l_0_11_25 l_0_11_25)))
 (let ((?x15771 (* l_0_11_24 l_0_11_24)))
 (let ((?x15769 (* l_0_11_23 l_0_11_23)))
 (let ((?x15770 (+ (+ (* (- l_0_11_10) l_0_11_10) (* l_0_11_22 l_0_11_22)) ?x15769)))
 (let ((?x15784 (+ (+ (+ (- (- (+ (+ ?x15770 ?x15771) ?x15773) ?x15775) ?x15777) ?x15779) ?x15781) ?x15783)))
 (= (- (+ ?x15784 ?x15785) ?x15787) 0.0))))))))))))))
(assert
 (let ((?x15652 (* (* 2.0 l_0_11_85) l_0_11_89)))
 (let ((?x15649 (* (* 2.0 l_0_11_84) l_0_11_88)))
 (let ((?x15646 (* (* 2.0 l_0_11_83) l_0_11_87)))
 (let ((?x15643 (* (* 2.0 l_0_11_82) l_0_11_86)))
 (let ((?x15163 (* 2.0 l_0_11_25)))
 (let ((?x15164 (* ?x15163 l_0_11_29)))
 (let ((?x15160 (* 2.0 l_0_11_24)))
 (let ((?x15161 (* ?x15160 l_0_11_28)))
 (let ((?x15157 (* 2.0 l_0_11_23)))
 (let ((?x15158 (* ?x15157 l_0_11_27)))
 (let ((?x15155 (* (* 2.0 l_0_11_22) l_0_11_26)))
 (let ((?x15814 (- (* (* (- 2.0) l_0_11_10) l_0_11_14) (* (* 2.0 l_0_11_11) l_0_11_7))))
 (let ((?x15818 (- (- ?x15814 (* (* 2.0 l_0_11_12) l_0_11_8)) (* (* 2.0 l_0_11_13) l_0_11_9))))
 (let ((?x15825 (+ (+ (+ (+ (+ (+ (+ ?x15818 ?x15155) ?x15158) ?x15161) ?x15164) ?x15643) ?x15646) ?x15649)))
 (= (+ ?x15825 ?x15652) 0.0))))))))))))))))
(assert
 (let ((?x15341 (* l_0_11_90 l_0_11_90)))
 (let ((?x5798 (* l_0_11_89 l_0_11_89)))
 (let ((?x5796 (* l_0_11_88 l_0_11_88)))
 (let ((?x5752 (* l_0_11_87 l_0_11_87)))
 (let ((?x5741 (* l_0_11_86 l_0_11_86)))
 (let ((?x15280 (* l_0_11_30 l_0_11_30)))
 (let ((?x15278 (* l_0_11_29 l_0_11_29)))
 (let ((?x15276 (* l_0_11_28 l_0_11_28)))
 (let ((?x15274 (* l_0_11_27 l_0_11_27)))
 (let ((?x15272 (* l_0_11_26 l_0_11_26)))
 (let ((?x15846 (* l_0_11_15 l_0_11_15)))
 (let ((?x15844 (* l_0_11_14 l_0_11_14)))
 (let ((?x15842 (* l_0_11_13 l_0_11_13)))
 (let ((?x15843 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x15842)))
 (let ((?x15852 (+ (+ (+ (+ (+ (- (- ?x15843 ?x15844) ?x15846) ?x15272) ?x15274) ?x15276) ?x15278) ?x15280)))
 (= (+ (+ (+ (+ (+ ?x15852 ?x5741) ?x5752) ?x5796) ?x5798) ?x15341) 0.0)))))))))))))))))
(assert
 (let ((?x14953 (* l_0_11_76 l_0_11_76)))
 (let ((?x15870 (- (* (* (- 2.0) l_0_11_16) l_0_11_19) (* (* 2.0 l_0_11_16) l_0_11_16))))
 (let ((?x15874 (- (- ?x15870 (* (* 2.0 l_0_11_61) l_0_11_64)) (* (* (/ 1.0 2.0) l_0_11_76) l_0_11_79))))
 (= (- ?x15874 ?x14953) 0.0)))))
(assert
 (let ((?x15015 (* 2.0 l_0_11_76)))
 (let ((?x15016 (* ?x15015 l_0_11_77)))
 (let ((?x14866 (* 2.0 l_0_11_18)))
 (let ((?x15355 (* ?x14866 l_0_11_20)))
 (let ((?x14861 (* 2.0 l_0_11_17)))
 (let ((?x15350 (* ?x14861 l_0_11_19)))
 (let ((?x14936 (* 2.0 l_0_11_16)))
 (let ((?x5418 (* ?x14936 l_0_11_19)))
 (let ((?x15883 (+ (- (- (+ (* (* (- 4.0) l_0_11_16) l_0_11_17) ?x5418) ?x15350) ?x15355) (* (* 8.0 l_0_11_61) l_0_11_64))))
 (let ((?x15887 (- (- ?x15883 (* (* 2.0 l_0_11_62) l_0_11_64)) (* (* 2.0 l_0_11_63) l_0_11_65))))
 (let ((?x15892 (- (- (- ?x15887 ?x15016) (* (* (/ 1.0 2.0) l_0_11_77) l_0_11_79)) (* (* (/ 1.0 2.0) l_0_11_78) l_0_11_80))))
 (= (- ?x15892 (* (* 2.0 l_0_11_91) l_0_11_94)) 0.0)))))))))))))
(assert
 (let ((?x15015 (* 2.0 l_0_11_76)))
 (let ((?x15083 (* ?x15015 l_0_11_79)))
 (let ((?x15903 (* l_0_11_66 l_0_11_66)))
 (let ((?x15901 (* l_0_11_65 l_0_11_65)))
 (let ((?x15899 (* l_0_11_64 l_0_11_64)))
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x14945 (* ?x14944 l_0_11_47)))
 (let ((?x14941 (* 2.0 l_0_11_31)))
 (let ((?x14942 (* ?x14941 l_0_11_32)))
 (let ((?x6005 (* l_0_11_21 l_0_11_21)))
 (let ((?x6000 (* l_0_11_20 l_0_11_20)))
 (let ((?x6418 (- (- (* (* (- 4.0) l_0_11_16) l_0_11_19) (* l_0_11_19 l_0_11_19)) ?x6000)))
 (let ((?x15905 (- (- (- (- (- (+ (- ?x6418 ?x6005) ?x14942) ?x14945) ?x15899) ?x15901) ?x15903) ?x15083)))
 (let ((?x15911 (- (- ?x15905 (* (* (/ 1.0 4.0) l_0_11_79) l_0_11_79)) (* (* (/ 1.0 4.0) l_0_11_80) l_0_11_80))))
 (= (- ?x15911 (* (* (/ 1.0 4.0) l_0_11_81) l_0_11_81)) 0.0))))))))))))))))
(assert
 (let ((?x15015 (* 2.0 l_0_11_76)))
 (let ((?x15194 (* ?x15015 l_0_11_82)))
 (let ((?x15071 (* 2.0 l_0_11_48)))
 (let ((?x15072 (* ?x15071 l_0_11_50)))
 (let ((?x15068 (* 2.0 l_0_11_47)))
 (let ((?x15069 (* ?x15068 l_0_11_49)))
 (let ((?x15065 (* 2.0 l_0_11_33)))
 (let ((?x15066 (* ?x15065 l_0_11_35)))
 (let ((?x15062 (* 2.0 l_0_11_32)))
 (let ((?x15063 (* ?x15062 l_0_11_34)))
 (let ((?x15059 (* 2.0 l_0_11_21)))
 (let ((?x15613 (* ?x15059 l_0_11_24)))
 (let ((?x15056 (* 2.0 l_0_11_20)))
 (let ((?x15611 (* ?x15056 l_0_11_23)))
 (let ((?x15053 (* 2.0 l_0_11_19)))
 (let ((?x15601 (* ?x15053 l_0_11_22)))
 (let ((?x15936 (- (- (- (- (* (* (- 4.0) l_0_11_16) l_0_11_22) ?x15601) ?x15611) ?x15613) ?x15063)))
 (let ((?x15941 (- (+ (+ (- ?x15936 ?x15066) ?x15069) ?x15072) (* (* 2.0 l_0_11_64) l_0_11_67))))
 (let ((?x15945 (- (- ?x15941 (* (* 2.0 l_0_11_65) l_0_11_68)) (* (* 2.0 l_0_11_66) l_0_11_69))))
 (let ((?x15950 (- (- (- ?x15945 ?x15194) (* (* (/ 1.0 2.0) l_0_11_79) l_0_11_82)) (* (* (/ 1.0 2.0) l_0_11_80) l_0_11_83))))
 (= (- ?x15950 (* (* (/ 1.0 2.0) l_0_11_81) l_0_11_84)) 0.0))))))))))))))))))))))
(assert
 (let ((?x14883 (* l_0_11_78 l_0_11_78)))
 (let ((?x14881 (* l_0_11_77 l_0_11_77)))
 (let ((?x14866 (* 2.0 l_0_11_18)))
 (let ((?x15355 (* ?x14866 l_0_11_20)))
 (let ((?x14861 (* 2.0 l_0_11_17)))
 (let ((?x15350 (* ?x14861 l_0_11_19)))
 (let ((?x6818 (+ (- (+ (- ?x15350 (* ?x14861 l_0_11_17)) ?x15355) (* ?x14866 l_0_11_18)) (* (* 8.0 l_0_11_62) l_0_11_64))))
 (let ((?x6789 (- (- (- (+ ?x6818 (* (* 8.0 l_0_11_63) l_0_11_65)) ?x14881) ?x14883) (* (* 2.0 l_0_11_92) l_0_11_94))))
 (= (- ?x6789 (* (* 2.0 l_0_11_93) l_0_11_95)) 0.0))))))))))
(assert
 (let ((?x16008 (* l_0_11_96 l_0_11_96)))
 (let ((?x16006 (* l_0_11_95 l_0_11_95)))
 (let ((?x16004 (* l_0_11_94 l_0_11_94)))
 (let ((?x15383 (* 2.0 l_0_11_78)))
 (let ((?x15384 (* ?x15383 l_0_11_80)))
 (let ((?x15378 (* 2.0 l_0_11_77)))
 (let ((?x15379 (* ?x15378 l_0_11_79)))
 (let ((?x15004 (* l_0_11_48 l_0_11_48)))
 (let ((?x15002 (* l_0_11_47 l_0_11_47)))
 (let ((?x15000 (* l_0_11_33 l_0_11_33)))
 (let ((?x14998 (* l_0_11_32 l_0_11_32)))
 (let ((?x6955 (- (* (* (- 4.0) l_0_11_17) l_0_11_19) (* (* 4.0 l_0_11_18) l_0_11_20))))
 (let ((?x15989 (+ (+ ?x6955 (* 1.0 (* l_0_11_19 l_0_11_19))) (* 1.0 (* l_0_11_20 l_0_11_20)))))
 (let ((?x15994 (- (+ (+ (+ ?x15989 (* 1.0 (* l_0_11_21 l_0_11_21))) ?x14998) ?x15000) ?x15002)))
 (let ((?x15999 (+ (+ (- ?x15994 ?x15004) (* 4.0 (* l_0_11_64 l_0_11_64))) (* 4.0 (* l_0_11_65 l_0_11_65)))))
 (let ((?x16005 (- (- (- (+ ?x15999 (* 4.0 (* l_0_11_66 l_0_11_66))) ?x15379) ?x15384) ?x16004)))
 (= (- (- ?x16005 ?x16006) ?x16008) 0.0))))))))))))))))))
(assert
 (let ((?x15383 (* 2.0 l_0_11_78)))
 (let ((?x15462 (* ?x15383 l_0_11_83)))
 (let ((?x15378 (* 2.0 l_0_11_77)))
 (let ((?x15460 (* ?x15378 l_0_11_82)))
 (let ((?x15059 (* 2.0 l_0_11_21)))
 (let ((?x15613 (* ?x15059 l_0_11_24)))
 (let ((?x15056 (* 2.0 l_0_11_20)))
 (let ((?x15611 (* ?x15056 l_0_11_23)))
 (let ((?x15053 (* 2.0 l_0_11_19)))
 (let ((?x15601 (* ?x15053 l_0_11_22)))
 (let ((?x6960 (- (* (* (- 4.0) l_0_11_17) l_0_11_22) (* (* 4.0 l_0_11_18) l_0_11_23))))
 (let ((?x6984 (+ (+ (+ (+ ?x6960 ?x15601) ?x15611) ?x15613) (* (* 8.0 l_0_11_64) l_0_11_67))))
 (let ((?x16019 (+ (+ ?x6984 (* (* 8.0 l_0_11_65) l_0_11_68)) (* (* 8.0 l_0_11_66) l_0_11_69))))
 (let ((?x16027 (- (- (- (- ?x16019 ?x15460) ?x15462) (* (* 2.0 l_0_11_94) l_0_11_97)) (* (* 2.0 l_0_11_95) l_0_11_98))))
 (= (- ?x16027 (* (* 2.0 l_0_11_96) l_0_11_99)) 0.0))))))))))))))))
(assert
 (let ((?x15561 (* l_0_11_81 l_0_11_81)))
 (let ((?x15556 (* l_0_11_80 l_0_11_80)))
 (let ((?x15551 (* l_0_11_79 l_0_11_79)))
 (let ((?x15071 (* 2.0 l_0_11_48)))
 (let ((?x15072 (* ?x15071 l_0_11_50)))
 (let ((?x15068 (* 2.0 l_0_11_47)))
 (let ((?x15069 (* ?x15068 l_0_11_49)))
 (let ((?x15065 (* 2.0 l_0_11_33)))
 (let ((?x15066 (* ?x15065 l_0_11_35)))
 (let ((?x15062 (* 2.0 l_0_11_32)))
 (let ((?x15063 (* ?x15062 l_0_11_34)))
 (let ((?x16050 (- (* (* (- 2.0) l_0_11_19) l_0_11_19) (* (* 2.0 l_0_11_20) l_0_11_20))))
 (let ((?x16055 (- (+ (+ (- ?x16050 (* (* 2.0 l_0_11_21) l_0_11_21)) ?x15063) ?x15066) ?x15069)))
 (= (- (- (- (- ?x16055 ?x15072) ?x15551) ?x15556) ?x15561) 0.0)))))))))))))))
(assert
 (let ((?x15558 (* 2.0 l_0_11_81)))
 (let ((?x15640 (* ?x15558 l_0_11_84)))
 (let ((?x15553 (* 2.0 l_0_11_80)))
 (let ((?x15638 (* ?x15553 l_0_11_83)))
 (let ((?x15548 (* 2.0 l_0_11_79)))
 (let ((?x15636 (* ?x15548 l_0_11_82)))
 (let ((?x15071 (* 2.0 l_0_11_48)))
 (let ((?x15178 (* ?x15071 l_0_11_53)))
 (let ((?x15068 (* 2.0 l_0_11_47)))
 (let ((?x15174 (* ?x15068 l_0_11_52)))
 (let ((?x15065 (* 2.0 l_0_11_33)))
 (let ((?x15170 (* ?x15065 l_0_11_38)))
 (let ((?x15062 (* 2.0 l_0_11_32)))
 (let ((?x15166 (* ?x15062 l_0_11_37)))
 (let ((?x16074 (- (* (* (- 4.0) l_0_11_19) l_0_11_22) (* (* 4.0 l_0_11_20) l_0_11_23))))
 (let ((?x16079 (- (+ (+ (- ?x16074 (* (* 4.0 l_0_11_21) l_0_11_24)) ?x15166) ?x15170) ?x15174)))
 (= (- (- (- (- ?x16079 ?x15178) ?x15636) ?x15638) ?x15640) 0.0))))))))))))))))))
(assert
 (let ((?x15785 (* l_0_11_85 l_0_11_85)))
 (let ((?x15783 (* l_0_11_84 l_0_11_84)))
 (let ((?x15781 (* l_0_11_83 l_0_11_83)))
 (let ((?x15779 (* l_0_11_82 l_0_11_82)))
 (let ((?x7234 (- (* (* (- 2.0) l_0_11_22) l_0_11_22) (* (* 2.0 l_0_11_23) l_0_11_23))))
 (let ((?x7253 (- (- ?x7234 (* (* 2.0 l_0_11_24) l_0_11_24)) (* (* 2.0 l_0_11_25) l_0_11_25))))
 (= (- (- (- (- ?x7253 ?x15779) ?x15781) ?x15783) ?x15785) 0.0))))))))
(assert
 (let ((?x7347 (- (- (* (- l_0_11_16) l_0_11_16) (* l_0_11_61 l_0_11_61)) (* (* (/ 1.0 4.0) l_0_11_76) l_0_11_76))))
 (= ?x7347 0.0)))
(assert
 (let ((?x16118 (* l_0_11_91 l_0_11_91)))
 (let ((?x16111 (+ (* (* (- 2.0) l_0_11_16) l_0_11_17) (* 1.0 (* l_0_11_16 l_0_11_16)))))
 (let ((?x16115 (+ (- ?x16111 (* (* 2.0 l_0_11_61) l_0_11_62)) (* 4.0 (* l_0_11_61 l_0_11_61)))))
 (= (- (- ?x16115 (* (* (/ 1.0 2.0) l_0_11_76) l_0_11_77)) ?x16118) 0.0)))))
(assert
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x14945 (* ?x14944 l_0_11_47)))
 (let ((?x14941 (* 2.0 l_0_11_31)))
 (let ((?x14942 (* ?x14941 l_0_11_32)))
 (let ((?x16130 (- (+ (- (* (* (- 2.0) l_0_11_16) l_0_11_22) ?x14942) ?x14945) (* (* 2.0 l_0_11_61) l_0_11_67))))
 (= (- ?x16130 (* (* (/ 1.0 2.0) l_0_11_76) l_0_11_82)) 0.0)))))))
(assert
 (let ((?x14918 (* l_0_11_63 l_0_11_63)))
 (let ((?x14915 (* l_0_11_62 l_0_11_62)))
 (let ((?x14869 (* l_0_11_18 l_0_11_18)))
 (let ((?x16146 (- (- (* (* 2.0 l_0_11_16) l_0_11_17) (* l_0_11_17 l_0_11_17)) ?x14869)))
 (let ((?x16153 (- (- (- (+ ?x16146 (* (* 8.0 l_0_11_61) l_0_11_62)) ?x14915) ?x14918) (* (* (/ 1.0 4.0) l_0_11_77) l_0_11_77))))
 (let ((?x16158 (- (- ?x16153 (* (* (/ 1.0 4.0) l_0_11_78) l_0_11_78)) (* (* 2.0 l_0_11_91) l_0_11_92))))
 (= ?x16158 0.0))))))))
(assert
 (let ((?x15004 (* l_0_11_48 l_0_11_48)))
 (let ((?x15002 (* l_0_11_47 l_0_11_47)))
 (let ((?x15000 (* l_0_11_33 l_0_11_33)))
 (let ((?x14998 (* l_0_11_32 l_0_11_32)))
 (let ((?x14866 (* 2.0 l_0_11_18)))
 (let ((?x15438 (* ?x14866 l_0_11_23)))
 (let ((?x14861 (* 2.0 l_0_11_17)))
 (let ((?x15436 (* ?x14861 l_0_11_22)))
 (let ((?x14936 (* 2.0 l_0_11_16)))
 (let ((?x15152 (* ?x14936 l_0_11_22)))
 (let ((?x16180 (+ (+ (+ (- (- (- (- ?x15152 ?x15436) ?x15438) ?x14998) ?x15000) ?x15002) ?x15004) (* (* 8.0 l_0_11_61) l_0_11_67))))
 (let ((?x16184 (- (- ?x16180 (* (* 2.0 l_0_11_62) l_0_11_67)) (* (* 2.0 l_0_11_63) l_0_11_68))))
 (let ((?x16188 (- (- ?x16184 (* (* (/ 1.0 2.0) l_0_11_77) l_0_11_82)) (* (* (/ 1.0 2.0) l_0_11_78) l_0_11_83))))
 (= (- ?x16188 (* (* 2.0 l_0_11_91) l_0_11_97)) 0.0)))))))))))))))
(assert
 (let ((?x16230 (* l_0_11_70 l_0_11_70)))
 (let ((?x16228 (* l_0_11_69 l_0_11_69)))
 (let ((?x16226 (* l_0_11_68 l_0_11_68)))
 (let ((?x16224 (* l_0_11_67 l_0_11_67)))
 (let ((?x15071 (* 2.0 l_0_11_48)))
 (let ((?x15178 (* ?x15071 l_0_11_53)))
 (let ((?x15068 (* 2.0 l_0_11_47)))
 (let ((?x15174 (* ?x15068 l_0_11_52)))
 (let ((?x15065 (* 2.0 l_0_11_33)))
 (let ((?x15170 (* ?x15065 l_0_11_38)))
 (let ((?x15062 (* 2.0 l_0_11_32)))
 (let ((?x15166 (* ?x15062 l_0_11_37)))
 (let ((?x15773 (* l_0_11_25 l_0_11_25)))
 (let ((?x15771 (* l_0_11_24 l_0_11_24)))
 (let ((?x16218 (- (- (* (- l_0_11_22) l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x15771)))
 (let ((?x16227 (- (- (+ (+ (- (- (- ?x16218 ?x15773) ?x15166) ?x15170) ?x15174) ?x15178) ?x16224) ?x16226)))
 (let ((?x16237 (- (- (- (- ?x16227 ?x16228) ?x16230) (* (* (/ 1.0 4.0) l_0_11_82) l_0_11_82)) (* (* (/ 1.0 4.0) l_0_11_83) l_0_11_83))))
 (let ((?x16243 (- (- ?x16237 (* (* (/ 1.0 4.0) l_0_11_84) l_0_11_84)) (* (* (/ 1.0 4.0) l_0_11_85) l_0_11_85))))
 (= ?x16243 0.0))))))))))))))))))))
(assert
 (let ((?x14866 (* 2.0 l_0_11_18)))
 (let ((?x15438 (* ?x14866 l_0_11_23)))
 (let ((?x14861 (* 2.0 l_0_11_17)))
 (let ((?x15436 (* ?x14861 l_0_11_22)))
 (let ((?x16260 (+ (+ (+ ?x15436 ?x15438) (* (* 8.0 l_0_11_62) l_0_11_67)) (* (* 8.0 l_0_11_63) l_0_11_68))))
 (let ((?x16264 (- (- ?x16260 (* (* 2.0 l_0_11_92) l_0_11_97)) (* (* 2.0 l_0_11_93) l_0_11_98))))
 (= ?x16264 0.0))))))))
(assert
 (let ((?x16300 (* l_0_11_99 l_0_11_99)))
 (let ((?x16298 (* l_0_11_98 l_0_11_98)))
 (let ((?x16296 (* l_0_11_97 l_0_11_97)))
 (let ((?x16230 (* l_0_11_70 l_0_11_70)))
 (let ((?x16294 (* 4.0 ?x16230)))
 (let ((?x16228 (* l_0_11_69 l_0_11_69)))
 (let ((?x16292 (* 4.0 ?x16228)))
 (let ((?x16226 (* l_0_11_68 l_0_11_68)))
 (let ((?x16290 (* 4.0 ?x16226)))
 (let ((?x16224 (* l_0_11_67 l_0_11_67)))
 (let ((?x16288 (* 4.0 ?x16224)))
 (let ((?x16281 (+ (* (- l_0_11_100) l_0_11_100) (* 1.0 (* l_0_11_22 l_0_11_22)))))
 (let ((?x16285 (+ (+ ?x16281 (* 1.0 (* l_0_11_23 l_0_11_23))) (* 1.0 (* l_0_11_24 l_0_11_24)))))
 (let ((?x16293 (+ (+ (+ (+ ?x16285 (* 1.0 (* l_0_11_25 l_0_11_25))) ?x16288) ?x16290) ?x16292)))
 (= (- (- (- (+ ?x16293 ?x16294) ?x16296) ?x16298) ?x16300) 0.0))))))))))))))))
(assert
 (= (+ (* (- l_0_11_31) l_0_11_31) (* l_0_11_46 l_0_11_46)) 0.0))
(assert
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x16317 (* ?x14944 l_0_11_49)))
 (= (+ (* (* (- 2.0) l_0_11_31) l_0_11_34) ?x16317) 0.0))))
(assert
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x16323 (* ?x14944 l_0_11_52)))
 (= (+ (* (* (- 2.0) l_0_11_31) l_0_11_37) ?x16323) 0.0))))
(assert
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x16340 (* ?x14944 l_0_11_56)))
 (let ((?x16323 (* ?x14944 l_0_11_52)))
 (let ((?x14941 (* 2.0 l_0_11_31)))
 (let ((?x16333 (* ?x14941 l_0_11_41)))
 (let ((?x16331 (* ?x14941 l_0_11_37)))
 (= (+ (- (- ?x16331 ?x16333) ?x16323) ?x16340) 0.0))))))))
(assert
 (let ((?x16359 (* l_0_11_51 l_0_11_51)))
 (let ((?x16357 (* l_0_11_50 l_0_11_50)))
 (let ((?x16355 (* l_0_11_49 l_0_11_49)))
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x16323 (* ?x14944 l_0_11_52)))
 (let ((?x16352 (* l_0_11_36 l_0_11_36)))
 (let ((?x16350 (* l_0_11_35 l_0_11_35)))
 (let ((?x16351 (- (- (* (* 2.0 l_0_11_31) l_0_11_37) (* l_0_11_34 l_0_11_34)) ?x16350)))
 (= (+ (+ (+ (- (- ?x16351 ?x16352) ?x16323) ?x16355) ?x16357) ?x16359) 0.0))))))))))
(assert
 (let ((?x16383 (* 2.0 l_0_11_51)))
 (let ((?x16384 (* ?x16383 l_0_11_54)))
 (let ((?x16380 (* 2.0 l_0_11_50)))
 (let ((?x16381 (* ?x16380 l_0_11_53)))
 (let ((?x16377 (* 2.0 l_0_11_49)))
 (let ((?x16378 (* ?x16377 l_0_11_52)))
 (let ((?x16374 (* 2.0 l_0_11_36)))
 (let ((?x16375 (* ?x16374 l_0_11_39)))
 (let ((?x16371 (* 2.0 l_0_11_35)))
 (let ((?x16372 (* ?x16371 l_0_11_38)))
 (let ((?x16382 (+ (+ (- (- (* (* (- 2.0) l_0_11_34) l_0_11_37) ?x16372) ?x16375) ?x16378) ?x16381)))
 (= (+ ?x16382 ?x16384) 0.0)))))))))))))
(assert
 (let ((?x16383 (* 2.0 l_0_11_51)))
 (let ((?x16419 (* ?x16383 l_0_11_58)))
 (let ((?x16384 (* ?x16383 l_0_11_54)))
 (let ((?x16380 (* 2.0 l_0_11_50)))
 (let ((?x16416 (* ?x16380 l_0_11_57)))
 (let ((?x16381 (* ?x16380 l_0_11_53)))
 (let ((?x16377 (* 2.0 l_0_11_49)))
 (let ((?x16413 (* ?x16377 l_0_11_56)))
 (let ((?x16378 (* ?x16377 l_0_11_52)))
 (let ((?x16374 (* 2.0 l_0_11_36)))
 (let ((?x16410 (* ?x16374 l_0_11_43)))
 (let ((?x16375 (* ?x16374 l_0_11_39)))
 (let ((?x16371 (* 2.0 l_0_11_35)))
 (let ((?x16407 (* ?x16371 l_0_11_42)))
 (let ((?x16372 (* ?x16371 l_0_11_38)))
 (let ((?x7775 (* 2.0 l_0_11_34)))
 (let ((?x16398 (* ?x7775 l_0_11_41)))
 (let ((?x16396 (* ?x7775 l_0_11_37)))
 (let ((?x16414 (+ (- (- (+ (- (+ (- ?x16396 ?x16398) ?x16372) ?x16407) ?x16375) ?x16410) ?x16378) ?x16413)))
 (= (+ (- (+ (- ?x16414 ?x16381) ?x16416) ?x16384) ?x16419) 0.0)))))))))))))))))))))
(assert
 (let ((?x16451 (* l_0_11_55 l_0_11_55)))
 (let ((?x16449 (* l_0_11_54 l_0_11_54)))
 (let ((?x16447 (* l_0_11_53 l_0_11_53)))
 (let ((?x16445 (* l_0_11_52 l_0_11_52)))
 (let ((?x16443 (* l_0_11_40 l_0_11_40)))
 (let ((?x16441 (* l_0_11_39 l_0_11_39)))
 (let ((?x16442 (- (- (* (- l_0_11_37) l_0_11_37) (* l_0_11_38 l_0_11_38)) ?x16441)))
 (= (+ (+ (+ (+ (- ?x16442 ?x16443) ?x16445) ?x16447) ?x16449) ?x16451) 0.0)))))))))
(assert
 (let ((?x16451 (* l_0_11_55 l_0_11_55)))
 (let ((?x16497 (* (* 2.0 l_0_11_55) l_0_11_59)))
 (let ((?x16449 (* l_0_11_54 l_0_11_54)))
 (let ((?x16493 (* (* 2.0 l_0_11_54) l_0_11_58)))
 (let ((?x16447 (* l_0_11_53 l_0_11_53)))
 (let ((?x16489 (* (* 2.0 l_0_11_53) l_0_11_57)))
 (let ((?x16445 (* l_0_11_52 l_0_11_52)))
 (let ((?x16485 (* (* 2.0 l_0_11_52) l_0_11_56)))
 (let ((?x16443 (* l_0_11_40 l_0_11_40)))
 (let ((?x16481 (* (* 2.0 l_0_11_40) l_0_11_44)))
 (let ((?x16441 (* l_0_11_39 l_0_11_39)))
 (let ((?x16477 (* (* 2.0 l_0_11_39) l_0_11_43)))
 (let ((?x16439 (* l_0_11_38 l_0_11_38)))
 (let ((?x16473 (* (* 2.0 l_0_11_38) l_0_11_42)))
 (let ((?x16474 (- (+ (* (* (- 2.0) l_0_11_37) l_0_11_41) (* l_0_11_37 l_0_11_37)) ?x16473)))
 (let ((?x16487 (- (+ (+ (- (+ (- (+ ?x16474 ?x16439) ?x16477) ?x16441) ?x16481) ?x16443) ?x16485) ?x16445)))
 (= (- (+ (- (+ (- (+ ?x16487 ?x16489) ?x16447) ?x16493) ?x16449) ?x16497) ?x16451) 0.0))))))))))))))))))
(assert
 (let ((?x16554 (* l_0_11_60 l_0_11_60)))
 (let ((?x16552 (* l_0_11_59 l_0_11_59)))
 (let ((?x16550 (* l_0_11_58 l_0_11_58)))
 (let ((?x16548 (* l_0_11_57 l_0_11_57)))
 (let ((?x16546 (* l_0_11_56 l_0_11_56)))
 (let ((?x16497 (* (* 2.0 l_0_11_55) l_0_11_59)))
 (let ((?x16493 (* (* 2.0 l_0_11_54) l_0_11_58)))
 (let ((?x16489 (* (* 2.0 l_0_11_53) l_0_11_57)))
 (let ((?x16485 (* (* 2.0 l_0_11_52) l_0_11_56)))
 (let ((?x16540 (* l_0_11_45 l_0_11_45)))
 (let ((?x16538 (* l_0_11_44 l_0_11_44)))
 (let ((?x16536 (* l_0_11_43 l_0_11_43)))
 (let ((?x16534 (* l_0_11_42 l_0_11_42)))
 (let ((?x16532 (* l_0_11_41 l_0_11_41)))
 (let ((?x16481 (* (* 2.0 l_0_11_40) l_0_11_44)))
 (let ((?x16477 (* (* 2.0 l_0_11_39) l_0_11_43)))
 (let ((?x16473 (* (* 2.0 l_0_11_38) l_0_11_42)))
 (let ((?x16531 (+ (+ (+ (* (* 2.0 l_0_11_37) l_0_11_41) ?x16473) ?x16477) ?x16481)))
 (let ((?x16543 (- (- (- (- (- (- (- ?x16531 ?x16532) ?x16534) ?x16536) ?x16538) ?x16540) ?x16485) ?x16489)))
 (let ((?x16555 (+ (+ (+ (+ (+ (- (- ?x16543 ?x16493) ?x16497) ?x16546) ?x16548) ?x16550) ?x16552) ?x16554)))
 (= ?x16555 0.0))))))))))))))))))))))
(assert
 (= (- (* l_0_11_31 l_0_11_31) (* l_0_11_46 l_0_11_46)) 0.0))
(assert
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x16317 (* ?x14944 l_0_11_49)))
 (= (- (* (* 2.0 l_0_11_31) l_0_11_34) ?x16317) 0.0))))
(assert
 (let ((?x16359 (* l_0_11_51 l_0_11_51)))
 (let ((?x16357 (* l_0_11_50 l_0_11_50)))
 (let ((?x16355 (* l_0_11_49 l_0_11_49)))
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x16340 (* ?x14944 l_0_11_56)))
 (let ((?x16352 (* l_0_11_36 l_0_11_36)))
 (let ((?x16350 (* l_0_11_35 l_0_11_35)))
 (let ((?x8039 (+ (+ (* (* 2.0 l_0_11_31) l_0_11_41) (* l_0_11_34 l_0_11_34)) ?x16350)))
 (= (- (- (- (- (+ ?x8039 ?x16352) ?x16340) ?x16355) ?x16357) ?x16359) 0.0))))))))))
(assert
 (let ((?x16359 (* l_0_11_51 l_0_11_51)))
 (let ((?x16357 (* l_0_11_50 l_0_11_50)))
 (let ((?x16355 (* l_0_11_49 l_0_11_49)))
 (let ((?x16352 (* l_0_11_36 l_0_11_36)))
 (let ((?x8139 (- (+ (+ (* l_0_11_34 l_0_11_34) (* l_0_11_35 l_0_11_35)) ?x16352) ?x16355)))
 (= (- (- ?x8139 ?x16357) ?x16359) 0.0)))))))
(assert
 (let ((?x16383 (* 2.0 l_0_11_51)))
 (let ((?x16384 (* ?x16383 l_0_11_54)))
 (let ((?x16380 (* 2.0 l_0_11_50)))
 (let ((?x16381 (* ?x16380 l_0_11_53)))
 (let ((?x16377 (* 2.0 l_0_11_49)))
 (let ((?x16378 (* ?x16377 l_0_11_52)))
 (let ((?x16374 (* 2.0 l_0_11_36)))
 (let ((?x16375 (* ?x16374 l_0_11_39)))
 (let ((?x16371 (* 2.0 l_0_11_35)))
 (let ((?x16372 (* ?x16371 l_0_11_38)))
 (let ((?x7775 (* 2.0 l_0_11_34)))
 (let ((?x16396 (* ?x7775 l_0_11_37)))
 (= (- (- (- (+ (+ ?x16396 ?x16372) ?x16375) ?x16378) ?x16381) ?x16384) 0.0))))))))))))))
(assert
 (let ((?x16383 (* 2.0 l_0_11_51)))
 (let ((?x16419 (* ?x16383 l_0_11_58)))
 (let ((?x16380 (* 2.0 l_0_11_50)))
 (let ((?x16416 (* ?x16380 l_0_11_57)))
 (let ((?x16377 (* 2.0 l_0_11_49)))
 (let ((?x16413 (* ?x16377 l_0_11_56)))
 (let ((?x16374 (* 2.0 l_0_11_36)))
 (let ((?x16410 (* ?x16374 l_0_11_43)))
 (let ((?x16371 (* 2.0 l_0_11_35)))
 (let ((?x16407 (* ?x16371 l_0_11_42)))
 (let ((?x7775 (* 2.0 l_0_11_34)))
 (let ((?x16398 (* ?x7775 l_0_11_41)))
 (= (- (- (- (+ (+ ?x16398 ?x16407) ?x16410) ?x16413) ?x16416) ?x16419) 0.0))))))))))))))
(assert
 (let ((?x16451 (* l_0_11_55 l_0_11_55)))
 (let ((?x16449 (* l_0_11_54 l_0_11_54)))
 (let ((?x16447 (* l_0_11_53 l_0_11_53)))
 (let ((?x16445 (* l_0_11_52 l_0_11_52)))
 (let ((?x16443 (* l_0_11_40 l_0_11_40)))
 (let ((?x16441 (* l_0_11_39 l_0_11_39)))
 (let ((?x8176 (+ (+ (+ (* l_0_11_37 l_0_11_37) (* l_0_11_38 l_0_11_38)) ?x16441) ?x16443)))
 (= (- (- (- (- ?x8176 ?x16445) ?x16447) ?x16449) ?x16451) 0.0)))))))))
(assert
 (let ((?x16497 (* (* 2.0 l_0_11_55) l_0_11_59)))
 (let ((?x16493 (* (* 2.0 l_0_11_54) l_0_11_58)))
 (let ((?x16489 (* (* 2.0 l_0_11_53) l_0_11_57)))
 (let ((?x16485 (* (* 2.0 l_0_11_52) l_0_11_56)))
 (let ((?x16481 (* (* 2.0 l_0_11_40) l_0_11_44)))
 (let ((?x16477 (* (* 2.0 l_0_11_39) l_0_11_43)))
 (let ((?x16473 (* (* 2.0 l_0_11_38) l_0_11_42)))
 (let ((?x16531 (+ (+ (+ (* (* 2.0 l_0_11_37) l_0_11_41) ?x16473) ?x16477) ?x16481)))
 (= (- (- (- (- ?x16531 ?x16485) ?x16489) ?x16493) ?x16497) 0.0))))))))))
(assert
 (let ((?x16554 (* l_0_11_60 l_0_11_60)))
 (let ((?x16552 (* l_0_11_59 l_0_11_59)))
 (let ((?x16550 (* l_0_11_58 l_0_11_58)))
 (let ((?x16548 (* l_0_11_57 l_0_11_57)))
 (let ((?x16546 (* l_0_11_56 l_0_11_56)))
 (let ((?x16540 (* l_0_11_45 l_0_11_45)))
 (let ((?x16538 (* l_0_11_44 l_0_11_44)))
 (let ((?x16536 (* l_0_11_43 l_0_11_43)))
 (let ((?x16593 (+ (+ (+ (* l_0_11_41 l_0_11_41) (* l_0_11_42 l_0_11_42)) ?x16536) ?x16538)))
 (= (- (- (- (- (- (+ ?x16593 ?x16540) ?x16546) ?x16548) ?x16550) ?x16552) ?x16554) 0.0)))))))))))
(assert
 (= (- (* l_0_11_31 l_0_11_31) (* l_0_11_46 l_0_11_46)) 0.0))
(assert
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x16317 (* ?x14944 l_0_11_49)))
 (= (- (* (* 2.0 l_0_11_31) l_0_11_34) ?x16317) 0.0))))
(assert
 (let ((?x14944 (* 2.0 l_0_11_46)))
 (let ((?x16340 (* ?x14944 l_0_11_56)))
 (let ((?x14941 (* 2.0 l_0_11_31)))
 (let ((?x16333 (* ?x14941 l_0_11_41)))
 (= (- ?x16333 ?x16340) 0.0))))))
(assert
 (let ((?x16383 (* 2.0 l_0_11_51)))
 (let ((?x16419 (* ?x16383 l_0_11_58)))
 (let ((?x16380 (* 2.0 l_0_11_50)))
 (let ((?x16416 (* ?x16380 l_0_11_57)))
 (let ((?x16377 (* 2.0 l_0_11_49)))
 (let ((?x16413 (* ?x16377 l_0_11_56)))
 (let ((?x16374 (* 2.0 l_0_11_36)))
 (let ((?x16410 (* ?x16374 l_0_11_43)))
 (let ((?x16371 (* 2.0 l_0_11_35)))
 (let ((?x16407 (* ?x16371 l_0_11_42)))
 (let ((?x7775 (* 2.0 l_0_11_34)))
 (let ((?x16398 (* ?x7775 l_0_11_41)))
 (= (- (- (- (+ (+ ?x16398 ?x16407) ?x16410) ?x16413) ?x16416) ?x16419) 0.0))))))))))))))
(assert
 (let ((?x16554 (* l_0_11_60 l_0_11_60)))
 (let ((?x16552 (* l_0_11_59 l_0_11_59)))
 (let ((?x16550 (* l_0_11_58 l_0_11_58)))
 (let ((?x16548 (* l_0_11_57 l_0_11_57)))
 (let ((?x16546 (* l_0_11_56 l_0_11_56)))
 (let ((?x16540 (* l_0_11_45 l_0_11_45)))
 (let ((?x16538 (* l_0_11_44 l_0_11_44)))
 (let ((?x16536 (* l_0_11_43 l_0_11_43)))
 (let ((?x16593 (+ (+ (+ (* l_0_11_41 l_0_11_41) (* l_0_11_42 l_0_11_42)) ?x16536) ?x16538)))
 (= (- (- (- (- (- (+ ?x16593 ?x16540) ?x16546) ?x16548) ?x16550) ?x16552) ?x16554) 0.0)))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_16 0.0))
(assert
 (>= l_0_11_18 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_25 0.0))
(assert
 (>= l_0_11_30 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_33 0.0))
(assert
 (>= l_0_11_36 0.0))
(assert
 (>= l_0_11_40 0.0))
(assert
 (>= l_0_11_45 0.0))
(assert
 (>= l_0_11_46 0.0))
(assert
 (>= l_0_11_48 0.0))
(assert
 (>= l_0_11_51 0.0))
(assert
 (>= l_0_11_55 0.0))
(assert
 (>= l_0_11_60 0.0))
(assert
 (>= l_0_11_61 0.0))
(assert
 (>= l_0_11_63 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_70 0.0))
(assert
 (>= l_0_11_75 0.0))
(assert
 (>= l_0_11_76 0.0))
(assert
 (>= l_0_11_78 0.0))
(assert
 (>= l_0_11_81 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_91 0.0))
(assert
 (>= l_0_11_93 0.0))
(assert
 (>= l_0_11_96 0.0))
(assert
 (>= l_0_11_100 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (let ((?x16668 (* l_0_12_78 l_0_12_78)))
 (let ((?x16666 (* l_0_12_77 l_0_12_77)))
 (let ((?x16655 (* 2.0 l_0_12_18)))
 (let ((?x16656 (* ?x16655 l_0_12_20)))
 (let ((?x16650 (* 2.0 l_0_12_17)))
 (let ((?x16651 (* ?x16650 l_0_12_19)))
 (let ((?x16649 (- (* (* (- 2.0) l_0_12_107) l_0_12_109) (* (* 2.0 l_0_12_108) l_0_12_110))))
 (let ((?x16659 (- (+ (- (+ ?x16649 ?x16651) (* ?x16650 l_0_12_17)) ?x16656) (* ?x16655 l_0_12_18))))
 (let ((?x16665 (+ (+ ?x16659 (* (* 8.0 l_0_12_62) l_0_12_64)) (* (* 8.0 l_0_12_63) l_0_12_65))))
 (let ((?x16675 (- (- (- (- ?x16665 ?x16666) ?x16668) (* (* 2.0 l_0_12_92) l_0_12_94)) (* (* 2.0 l_0_12_93) l_0_12_95))))
 (= (+ ?x16675 1.0) 0.0))))))))))))
(assert
 (let ((?x16746 (* l_0_12_63 l_0_12_63)))
 (let ((?x16744 (* l_0_12_62 l_0_12_62)))
 (let ((?x16698 (* l_0_12_18 l_0_12_18)))
 (let ((?x16689 (* l_0_12_17 l_0_12_17)))
 (let ((?x16736 (* 2.0 l_0_12_16)))
 (let ((?x16737 (* ?x16736 l_0_12_17)))
 (let ((?x16743 (+ (- (- (+ (* (* (- 2.0) l_0_12_106) l_0_12_107) ?x16737) ?x16689) ?x16698) (* (* 8.0 l_0_12_61) l_0_12_62))))
 (let ((?x16753 (- (- (- (- ?x16743 ?x16744) ?x16746) (* (* (/ 1.0 4.0) l_0_12_77) l_0_12_77)) (* (* (/ 1.0 4.0) l_0_12_78) l_0_12_78))))
 (= (+ (- ?x16753 (* (* 2.0 l_0_12_91) l_0_12_92)) (/ 1.0 4.0)) 0.0))))))))))
(assert
 (let ((?x16807 (* l_0_12_93 l_0_12_93)))
 (let ((?x16805 (* l_0_12_92 l_0_12_92)))
 (let ((?x16746 (* l_0_12_63 l_0_12_63)))
 (let ((?x16803 (* 4.0 ?x16746)))
 (let ((?x16744 (* l_0_12_62 l_0_12_62)))
 (let ((?x16801 (* 4.0 ?x16744)))
 (let ((?x16798 (+ (- (* (- l_0_12_107) l_0_12_107) (* l_0_12_108 l_0_12_108)) (* 1.0 (* l_0_12_17 l_0_12_17)))))
 (let ((?x16806 (- (+ (+ (+ ?x16798 (* 1.0 (* l_0_12_18 l_0_12_18))) ?x16801) ?x16803) ?x16805)))
 (= (- (- ?x16806 ?x16807) 1.0) 0.0))))))))))
(assert
 (let ((?x16668 (* l_0_12_78 l_0_12_78)))
 (let ((?x16666 (* l_0_12_77 l_0_12_77)))
 (let ((?x16836 (* l_0_12_3 l_0_12_3)))
 (let ((?x16834 (* l_0_12_2 l_0_12_2)))
 (let ((?x16698 (* l_0_12_18 l_0_12_18)))
 (let ((?x16655 (* 2.0 l_0_12_18)))
 (let ((?x16831 (* ?x16655 l_0_12_27)))
 (let ((?x16689 (* l_0_12_17 l_0_12_17)))
 (let ((?x16650 (* 2.0 l_0_12_17)))
 (let ((?x16828 (* ?x16650 l_0_12_26)))
 (let ((?x16822 (- (* (* (- 2.0) l_0_12_101) l_0_12_92) (* (* 2.0 l_0_12_102) l_0_12_93))))
 (let ((?x16827 (- (- ?x16822 (* (* 2.0 l_0_12_107) l_0_12_116)) (* (* 2.0 l_0_12_108) l_0_12_117))))
 (let ((?x16839 (+ (- (- (+ (+ (+ (+ ?x16827 ?x16828) ?x16689) ?x16831) ?x16698) ?x16834) ?x16836) (* (* 8.0 l_0_12_62) l_0_12_71))))
 (let ((?x16844 (- (+ (+ (+ ?x16839 (* (* 8.0 l_0_12_63) l_0_12_72)) ?x16666) ?x16668) 1.0)))
 (= ?x16844 0.0))))))))))))))))
(assert
 (let ((?x16893 (* l_0_12_76 l_0_12_76)))
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x16885 (* ?x16884 l_0_12_47)))
 (let ((?x16881 (* 2.0 l_0_12_31)))
 (let ((?x16882 (* ?x16881 l_0_12_32)))
 (let ((?x16879 (* l_0_12_16 l_0_12_16)))
 (let ((?x16736 (* 2.0 l_0_12_16)))
 (let ((?x16877 (* ?x16736 l_0_12_26)))
 (let ((?x16889 (- (- (+ (+ (- (* (- l_0_12_1) l_0_12_1) ?x16877) ?x16879) ?x16882) ?x16885) (* (* 2.0 l_0_12_61) l_0_12_71))))
 (= (+ (- ?x16889 (* (* (/ 1.0 2.0) l_0_12_76) l_0_12_86)) ?x16893) 0.0)))))))))))
(assert
 (let ((?x16942 (* 2.0 l_0_12_76)))
 (let ((?x16943 (* ?x16942 l_0_12_77)))
 (let ((?x16932 (* l_0_12_48 l_0_12_48)))
 (let ((?x16930 (* l_0_12_47 l_0_12_47)))
 (let ((?x16928 (* l_0_12_33 l_0_12_33)))
 (let ((?x16926 (* l_0_12_32 l_0_12_32)))
 (let ((?x16655 (* 2.0 l_0_12_18)))
 (let ((?x16831 (* ?x16655 l_0_12_27)))
 (let ((?x16650 (* 2.0 l_0_12_17)))
 (let ((?x16828 (* ?x16650 l_0_12_26)))
 (let ((?x16736 (* 2.0 l_0_12_16)))
 (let ((?x16877 (* ?x16736 l_0_12_26)))
 (let ((?x16737 (* ?x16736 l_0_12_17)))
 (let ((?x16918 (- (* (* (- 2.0) l_0_12_1) l_0_12_2) (* (* 2.0 l_0_12_101) l_0_12_91))))
 (let ((?x16924 (- (+ (+ (- ?x16918 (* (* 2.0 l_0_12_106) l_0_12_116)) ?x16737) ?x16877) ?x16828)))
 (let ((?x16935 (+ (- (- (+ (+ (- ?x16924 ?x16831) ?x16926) ?x16928) ?x16930) ?x16932) (* (* 8.0 l_0_12_61) l_0_12_71))))
 (let ((?x16941 (- (- ?x16935 (* (* 2.0 l_0_12_62) l_0_12_71)) (* (* 2.0 l_0_12_63) l_0_12_72))))
 (let ((?x16950 (- (- (+ ?x16941 ?x16943) (* (* (/ 1.0 2.0) l_0_12_77) l_0_12_86)) (* (* (/ 1.0 2.0) l_0_12_78) l_0_12_87))))
 (= ?x16950 0.0))))))))))))))))))))
(assert
 (let ((?x16942 (* 2.0 l_0_12_76)))
 (let ((?x17005 (* ?x16942 l_0_12_86)))
 (let ((?x17003 (* ?x16942 l_0_12_79)))
 (let ((?x16991 (* 2.0 l_0_12_48)))
 (let ((?x16992 (* ?x16991 l_0_12_50)))
 (let ((?x16988 (* 2.0 l_0_12_47)))
 (let ((?x16989 (* ?x16988 l_0_12_49)))
 (let ((?x16985 (* 2.0 l_0_12_33)))
 (let ((?x16986 (* ?x16985 l_0_12_35)))
 (let ((?x16982 (* 2.0 l_0_12_32)))
 (let ((?x16983 (* ?x16982 l_0_12_34)))
 (let ((?x16979 (* 2.0 l_0_12_21)))
 (let ((?x16980 (* ?x16979 l_0_12_28)))
 (let ((?x16976 (* 2.0 l_0_12_20)))
 (let ((?x16977 (* ?x16976 l_0_12_27)))
 (let ((?x16973 (* 2.0 l_0_12_19)))
 (let ((?x16974 (* ?x16973 l_0_12_26)))
 (let ((?x16736 (* 2.0 l_0_12_16)))
 (let ((?x16968 (* ?x16736 l_0_12_19)))
 (let ((?x16972 (- (+ (* (* (- 2.0) l_0_12_1) l_0_12_4) ?x16968) (* (* 4.0 l_0_12_16) l_0_12_26))))
 (let ((?x16993 (- (- (+ (+ (- (- (- ?x16972 ?x16974) ?x16977) ?x16980) ?x16983) ?x16986) ?x16989) ?x16992)))
 (let ((?x16999 (- (- ?x16993 (* (* 2.0 l_0_12_64) l_0_12_71)) (* (* 2.0 l_0_12_65) l_0_12_72))))
 (let ((?x17009 (- (- (+ (- ?x16999 (* (* 2.0 l_0_12_66) l_0_12_73)) ?x17003) ?x17005) (* (* (/ 1.0 2.0) l_0_12_79) l_0_12_86))))
 (let ((?x17015 (- (- ?x17009 (* (* (/ 1.0 2.0) l_0_12_80) l_0_12_87)) (* (* (/ 1.0 2.0) l_0_12_81) l_0_12_88))))
 (= ?x17015 0.0))))))))))))))))))))))))))
(assert
 (let ((?x16942 (* 2.0 l_0_12_76)))
 (let ((?x17118 (* ?x16942 l_0_12_82)))
 (let ((?x16991 (* 2.0 l_0_12_48)))
 (let ((?x17104 (* ?x16991 l_0_12_57)))
 (let ((?x17102 (* ?x16991 l_0_12_53)))
 (let ((?x16988 (* 2.0 l_0_12_47)))
 (let ((?x17100 (* ?x16988 l_0_12_56)))
 (let ((?x17098 (* ?x16988 l_0_12_52)))
 (let ((?x16985 (* 2.0 l_0_12_33)))
 (let ((?x17096 (* ?x16985 l_0_12_42)))
 (let ((?x17094 (* ?x16985 l_0_12_38)))
 (let ((?x16982 (* 2.0 l_0_12_32)))
 (let ((?x17092 (* ?x16982 l_0_12_41)))
 (let ((?x17090 (* ?x16982 l_0_12_37)))
 (let ((?x17087 (* 2.0 l_0_12_25)))
 (let ((?x17088 (* ?x17087 l_0_12_29)))
 (let ((?x17084 (* 2.0 l_0_12_24)))
 (let ((?x17085 (* ?x17084 l_0_12_28)))
 (let ((?x17081 (* 2.0 l_0_12_23)))
 (let ((?x17082 (* ?x17081 l_0_12_27)))
 (let ((?x17079 (* (* 2.0 l_0_12_22) l_0_12_26)))
 (let ((?x16736 (* 2.0 l_0_12_16)))
 (let ((?x17076 (* ?x16736 l_0_12_22)))
 (let ((?x17086 (- (- (- (+ (* (* (- 2.0) l_0_12_1) l_0_12_7) ?x17076) ?x17079) ?x17082) ?x17085)))
 (let ((?x17101 (+ (- (- (+ (- (+ (- ?x17086 ?x17088) ?x17090) ?x17092) ?x17094) ?x17096) ?x17098) ?x17100)))
 (let ((?x17111 (- (- (+ (- ?x17101 ?x17102) ?x17104) (* (* 2.0 l_0_12_67) l_0_12_71)) (* (* 2.0 l_0_12_68) l_0_12_72))))
 (let ((?x17117 (- (- ?x17111 (* (* 2.0 l_0_12_69) l_0_12_73)) (* (* 2.0 l_0_12_70) l_0_12_74))))
 (let ((?x17125 (- (- (+ ?x17117 ?x17118) (* (* (/ 1.0 2.0) l_0_12_82) l_0_12_86)) (* (* (/ 1.0 2.0) l_0_12_83) l_0_12_87))))
 (let ((?x17131 (- (- ?x17125 (* (* (/ 1.0 2.0) l_0_12_84) l_0_12_88)) (* (* (/ 1.0 2.0) l_0_12_85) l_0_12_89))))
 (= ?x17131 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x16942 (* 2.0 l_0_12_76)))
 (let ((?x17005 (* ?x16942 l_0_12_86)))
 (let ((?x17207 (* l_0_12_75 l_0_12_75)))
 (let ((?x17205 (* l_0_12_74 l_0_12_74)))
 (let ((?x17203 (* l_0_12_73 l_0_12_73)))
 (let ((?x17201 (* l_0_12_72 l_0_12_72)))
 (let ((?x17199 (* l_0_12_71 l_0_12_71)))
 (let ((?x16991 (* 2.0 l_0_12_48)))
 (let ((?x17104 (* ?x16991 l_0_12_57)))
 (let ((?x16988 (* 2.0 l_0_12_47)))
 (let ((?x17100 (* ?x16988 l_0_12_56)))
 (let ((?x16985 (* 2.0 l_0_12_33)))
 (let ((?x17096 (* ?x16985 l_0_12_42)))
 (let ((?x16982 (* 2.0 l_0_12_32)))
 (let ((?x17092 (* ?x16982 l_0_12_41)))
 (let ((?x8681 (* l_0_12_30 l_0_12_30)))
 (let ((?x8677 (* l_0_12_29 l_0_12_29)))
 (let ((?x8682 (* l_0_12_28 l_0_12_28)))
 (let ((?x8670 (* l_0_12_27 l_0_12_27)))
 (let ((?x8644 (* l_0_12_26 l_0_12_26)))
 (let ((?x16736 (* 2.0 l_0_12_16)))
 (let ((?x16877 (* ?x16736 l_0_12_26)))
 (let ((?x8683 (- (- (- (+ (* (* (- 2.0) l_0_12_1) l_0_12_11) ?x16877) ?x8644) ?x8670) ?x8682)))
 (let ((?x17200 (- (- (- (+ (+ (- (- ?x8683 ?x8677) ?x8681) ?x17092) ?x17096) ?x17100) ?x17104) ?x17199)))
 (let ((?x17212 (- (+ (- (- (- (- ?x17200 ?x17201) ?x17203) ?x17205) ?x17207) ?x17005) (* (* (/ 1.0 4.0) l_0_12_86) l_0_12_86))))
 (let ((?x17218 (- (- ?x17212 (* (* (/ 1.0 4.0) l_0_12_87) l_0_12_87)) (* (* (/ 1.0 4.0) l_0_12_88) l_0_12_88))))
 (let ((?x17224 (- (- ?x17218 (* (* (/ 1.0 4.0) l_0_12_89) l_0_12_89)) (* (* (/ 1.0 4.0) l_0_12_90) l_0_12_90))))
 (= ?x17224 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x17284 (* 2.0 l_0_12_78)))
 (let ((?x17287 (* ?x17284 l_0_12_87)))
 (let ((?x17285 (* ?x17284 l_0_12_80)))
 (let ((?x17279 (* 2.0 l_0_12_77)))
 (let ((?x17282 (* ?x17279 l_0_12_86)))
 (let ((?x17280 (* ?x17279 l_0_12_79)))
 (let ((?x16979 (* 2.0 l_0_12_21)))
 (let ((?x16980 (* ?x16979 l_0_12_28)))
 (let ((?x16976 (* 2.0 l_0_12_20)))
 (let ((?x16977 (* ?x16976 l_0_12_27)))
 (let ((?x16973 (* 2.0 l_0_12_19)))
 (let ((?x16974 (* ?x16973 l_0_12_26)))
 (let ((?x16655 (* 2.0 l_0_12_18)))
 (let ((?x16656 (* ?x16655 l_0_12_20)))
 (let ((?x16650 (* 2.0 l_0_12_17)))
 (let ((?x16651 (* ?x16650 l_0_12_19)))
 (let ((?x8850 (- (* (* (- 2.0) l_0_12_101) l_0_12_94) (* (* 2.0 l_0_12_102) l_0_12_95))))
 (let ((?x17246 (- (- ?x8850 (* (* 2.0 l_0_12_103) l_0_12_96)) (* (* 2.0 l_0_12_109) l_0_12_116))))
 (let ((?x17252 (- (- ?x17246 (* (* 2.0 l_0_12_110) l_0_12_117)) (* (* 2.0 l_0_12_111) l_0_12_118))))
 (let ((?x17260 (- (+ (- (+ ?x17252 ?x16651) (* (* 4.0 l_0_12_17) l_0_12_26)) ?x16656) (* (* 4.0 l_0_12_18) l_0_12_27))))
 (let ((?x17266 (+ (+ (- (+ ?x17260 ?x16974) (* (* 2.0 l_0_12_2) l_0_12_4)) ?x16977) ?x16980)))
 (let ((?x17272 (+ (- ?x17266 (* (* 2.0 l_0_12_3) l_0_12_5)) (* (* 8.0 l_0_12_64) l_0_12_71))))
 (let ((?x17278 (+ (+ ?x17272 (* (* 8.0 l_0_12_65) l_0_12_72)) (* (* 8.0 l_0_12_66) l_0_12_73))))
 (= (- (+ (- (+ ?x17278 ?x17280) ?x17282) ?x17285) ?x17287) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x17284 (* 2.0 l_0_12_78)))
 (let ((?x17375 (* ?x17284 l_0_12_83)))
 (let ((?x17279 (* 2.0 l_0_12_77)))
 (let ((?x17373 (* ?x17279 l_0_12_82)))
 (let ((?x17087 (* 2.0 l_0_12_25)))
 (let ((?x17088 (* ?x17087 l_0_12_29)))
 (let ((?x17084 (* 2.0 l_0_12_24)))
 (let ((?x17085 (* ?x17084 l_0_12_28)))
 (let ((?x17081 (* 2.0 l_0_12_23)))
 (let ((?x17082 (* ?x17081 l_0_12_27)))
 (let ((?x17079 (* (* 2.0 l_0_12_22) l_0_12_26)))
 (let ((?x16655 (* 2.0 l_0_12_18)))
 (let ((?x17351 (* ?x16655 l_0_12_23)))
 (let ((?x16650 (* 2.0 l_0_12_17)))
 (let ((?x17349 (* ?x16650 l_0_12_22)))
 (let ((?x17332 (- (* (* (- 2.0) l_0_12_100) l_0_12_104) (* (* 2.0 l_0_12_101) l_0_12_97))))
 (let ((?x17336 (- (- ?x17332 (* (* 2.0 l_0_12_102) l_0_12_98)) (* (* 2.0 l_0_12_103) l_0_12_99))))
 (let ((?x17342 (- (- ?x17336 (* (* 2.0 l_0_12_112) l_0_12_116)) (* (* 2.0 l_0_12_113) l_0_12_117))))
 (let ((?x17348 (- (- ?x17342 (* (* 2.0 l_0_12_114) l_0_12_118)) (* (* 2.0 l_0_12_115) l_0_12_119))))
 (let ((?x17355 (+ (- (+ (+ ?x17348 ?x17349) ?x17351) (* (* 2.0 l_0_12_2) l_0_12_7)) ?x17079)))
 (let ((?x17360 (- (+ (+ (+ ?x17355 ?x17082) ?x17085) ?x17088) (* (* 2.0 l_0_12_3) l_0_12_8))))
 (let ((?x17366 (+ (+ ?x17360 (* (* 8.0 l_0_12_67) l_0_12_71)) (* (* 8.0 l_0_12_68) l_0_12_72))))
 (let ((?x17372 (+ (+ ?x17366 (* (* 8.0 l_0_12_69) l_0_12_73)) (* (* 8.0 l_0_12_70) l_0_12_74))))
 (= (+ (+ ?x17372 ?x17373) ?x17375) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x17284 (* 2.0 l_0_12_78)))
 (let ((?x17287 (* ?x17284 l_0_12_87)))
 (let ((?x17279 (* 2.0 l_0_12_77)))
 (let ((?x17282 (* ?x17279 l_0_12_86)))
 (let ((?x17207 (* l_0_12_75 l_0_12_75)))
 (let ((?x17455 (* 4.0 ?x17207)))
 (let ((?x17205 (* l_0_12_74 l_0_12_74)))
 (let ((?x17453 (* 4.0 ?x17205)))
 (let ((?x17203 (* l_0_12_73 l_0_12_73)))
 (let ((?x17451 (* 4.0 ?x17203)))
 (let ((?x17201 (* l_0_12_72 l_0_12_72)))
 (let ((?x17449 (* 4.0 ?x17201)))
 (let ((?x17199 (* l_0_12_71 l_0_12_71)))
 (let ((?x17447 (* 4.0 ?x17199)))
 (let ((?x16655 (* 2.0 l_0_12_18)))
 (let ((?x16831 (* ?x16655 l_0_12_27)))
 (let ((?x16650 (* 2.0 l_0_12_17)))
 (let ((?x16828 (* ?x16650 l_0_12_26)))
 (let ((?x17433 (* l_0_12_120 l_0_12_120)))
 (let ((?x17428 (* l_0_12_119 l_0_12_119)))
 (let ((?x17426 (* l_0_12_118 l_0_12_118)))
 (let ((?x17424 (* l_0_12_117 l_0_12_117)))
 (let ((?x17422 (* l_0_12_116 l_0_12_116)))
 (let ((?x17417 (* l_0_12_105 l_0_12_105)))
 (let ((?x17415 (* l_0_12_104 l_0_12_104)))
 (let ((?x17413 (* l_0_12_103 l_0_12_103)))
 (let ((?x17414 (- (- (* (- l_0_12_101) l_0_12_101) (* l_0_12_102 l_0_12_102)) ?x17413)))
 (let ((?x17423 (- (- (- (- ?x17414 ?x17415) ?x17417) (* (* 2.0 l_0_12_11) l_0_12_2)) ?x17422)))
 (let ((?x17432 (- (- (- (- ?x17423 ?x17424) ?x17426) ?x17428) (* (* 2.0 l_0_12_12) l_0_12_3))))
 (let ((?x17438 (+ (+ (+ (- ?x17432 ?x17433) ?x16828) ?x16831) (* 1.0 (* l_0_12_26 l_0_12_26)))))
 (let ((?x17442 (+ (+ ?x17438 (* 1.0 (* l_0_12_27 l_0_12_27))) (* 1.0 (* l_0_12_28 l_0_12_28)))))
 (let ((?x17446 (+ (+ ?x17442 (* 1.0 (* l_0_12_29 l_0_12_29))) (* 1.0 (* l_0_12_30 l_0_12_30)))))
 (let ((?x17458 (+ (+ (+ (+ (+ (+ (+ ?x17446 ?x17447) ?x17449) ?x17451) ?x17453) ?x17455) ?x17282) ?x17287)))
 (= ?x17458 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x17501 (* l_0_12_81 l_0_12_81)))
 (let ((?x17498 (* 2.0 l_0_12_81)))
 (let ((?x17499 (* ?x17498 l_0_12_88)))
 (let ((?x17496 (* l_0_12_80 l_0_12_80)))
 (let ((?x17493 (* 2.0 l_0_12_80)))
 (let ((?x17494 (* ?x17493 l_0_12_87)))
 (let ((?x17491 (* l_0_12_79 l_0_12_79)))
 (let ((?x17488 (* 2.0 l_0_12_79)))
 (let ((?x17489 (* ?x17488 l_0_12_86)))
 (let ((?x17486 (* l_0_12_6 l_0_12_6)))
 (let ((?x17484 (* l_0_12_5 l_0_12_5)))
 (let ((?x16991 (* 2.0 l_0_12_48)))
 (let ((?x17104 (* ?x16991 l_0_12_57)))
 (let ((?x16988 (* 2.0 l_0_12_47)))
 (let ((?x17100 (* ?x16988 l_0_12_56)))
 (let ((?x17480 (* l_0_12_4 l_0_12_4)))
 (let ((?x16985 (* 2.0 l_0_12_33)))
 (let ((?x17096 (* ?x16985 l_0_12_42)))
 (let ((?x16982 (* 2.0 l_0_12_32)))
 (let ((?x17092 (* ?x16982 l_0_12_41)))
 (let ((?x9229 (* l_0_12_21 l_0_12_21)))
 (let ((?x9238 (* l_0_12_20 l_0_12_20)))
 (let ((?x9242 (- (+ (* (* (- 4.0) l_0_12_19) l_0_12_26) (* l_0_12_19 l_0_12_19)) (* (* 4.0 l_0_12_20) l_0_12_27))))
 (let ((?x17478 (+ (+ (- (+ ?x9242 ?x9238) (* (* 4.0 l_0_12_21) l_0_12_28)) ?x9229) ?x17092)))
 (let ((?x17490 (- (- (- (- (- (- (+ ?x17478 ?x17096) ?x17480) ?x17100) ?x17104) ?x17484) ?x17486) ?x17489)))
 (= (+ (- (+ (- (+ ?x17490 ?x17491) ?x17494) ?x17496) ?x17499) ?x17501) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x17582 (* (* 2.0 l_0_12_85) l_0_12_89)))
 (let ((?x17579 (* (* 2.0 l_0_12_84) l_0_12_88)))
 (let ((?x17576 (* (* 2.0 l_0_12_83) l_0_12_87)))
 (let ((?x17573 (* (* 2.0 l_0_12_82) l_0_12_86)))
 (let ((?x17498 (* 2.0 l_0_12_81)))
 (let ((?x17570 (* ?x17498 l_0_12_84)))
 (let ((?x17493 (* 2.0 l_0_12_80)))
 (let ((?x17568 (* ?x17493 l_0_12_83)))
 (let ((?x17488 (* 2.0 l_0_12_79)))
 (let ((?x17566 (* ?x17488 l_0_12_82)))
 (let ((?x16979 (* 2.0 l_0_12_21)))
 (let ((?x17543 (* ?x16979 l_0_12_24)))
 (let ((?x16976 (* 2.0 l_0_12_20)))
 (let ((?x17541 (* ?x16976 l_0_12_23)))
 (let ((?x16973 (* 2.0 l_0_12_19)))
 (let ((?x17531 (* ?x16973 l_0_12_22)))
 (let ((?x17550 (- (- (+ (+ ?x17531 ?x17541) ?x17543) (* (* 4.0 l_0_12_22) l_0_12_26)) (* (* 4.0 l_0_12_23) l_0_12_27))))
 (let ((?x17556 (- (- ?x17550 (* (* 4.0 l_0_12_24) l_0_12_28)) (* (* 4.0 l_0_12_25) l_0_12_29))))
 (let ((?x17562 (- (- ?x17556 (* (* 2.0 l_0_12_4) l_0_12_7)) (* (* 2.0 l_0_12_5) l_0_12_8))))
 (let ((?x17571 (+ (+ (+ (- ?x17562 (* (* 2.0 l_0_12_6) l_0_12_9)) ?x17566) ?x17568) ?x17570)))
 (= (- (- (- (- ?x17571 ?x17573) ?x17576) ?x17579) ?x17582) 0.0))))))))))))))))))))))
(assert
 (let ((?x8846 (* l_0_12_90 l_0_12_90)))
 (let ((?x8824 (* l_0_12_89 l_0_12_89)))
 (let ((?x8816 (* l_0_12_88 l_0_12_88)))
 (let ((?x8813 (* l_0_12_87 l_0_12_87)))
 (let ((?x8770 (* l_0_12_86 l_0_12_86)))
 (let ((?x17498 (* 2.0 l_0_12_81)))
 (let ((?x17499 (* ?x17498 l_0_12_88)))
 (let ((?x17493 (* 2.0 l_0_12_80)))
 (let ((?x17494 (* ?x17493 l_0_12_87)))
 (let ((?x17488 (* 2.0 l_0_12_79)))
 (let ((?x17489 (* ?x17488 l_0_12_86)))
 (let ((?x16979 (* 2.0 l_0_12_21)))
 (let ((?x16980 (* ?x16979 l_0_12_28)))
 (let ((?x16976 (* 2.0 l_0_12_20)))
 (let ((?x16977 (* ?x16976 l_0_12_27)))
 (let ((?x16973 (* 2.0 l_0_12_19)))
 (let ((?x16974 (* ?x16973 l_0_12_26)))
 (let ((?x17633 (- (* (* (- 2.0) l_0_12_11) l_0_12_4) (* (* 2.0 l_0_12_12) l_0_12_5))))
 (let ((?x17639 (+ (+ (+ (- ?x17633 (* (* 2.0 l_0_12_13) l_0_12_6)) ?x16974) ?x16977) ?x16980)))
 (let ((?x17645 (- (- ?x17639 (* (* 2.0 l_0_12_26) l_0_12_26)) (* (* 2.0 l_0_12_27) l_0_12_27))))
 (let ((?x17651 (- (- ?x17645 (* (* 2.0 l_0_12_28) l_0_12_28)) (* (* 2.0 l_0_12_29) l_0_12_29))))
 (let ((?x17657 (+ (+ (+ (- ?x17651 (* (* 2.0 l_0_12_30) l_0_12_30)) ?x17489) ?x17494) ?x17499)))
 (= (- (- (- (- (- ?x17657 ?x8770) ?x8813) ?x8816) ?x8824) ?x8846) 0.0))))))))))))))))))))))))
(assert
 (let ((?x17728 (* l_0_12_9 l_0_12_9)))
 (let ((?x17726 (* l_0_12_85 l_0_12_85)))
 (let ((?x17724 (* l_0_12_84 l_0_12_84)))
 (let ((?x17722 (* l_0_12_83 l_0_12_83)))
 (let ((?x17720 (* l_0_12_82 l_0_12_82)))
 (let ((?x17718 (* l_0_12_8 l_0_12_8)))
 (let ((?x17716 (* l_0_12_7 l_0_12_7)))
 (let ((?x17714 (* l_0_12_25 l_0_12_25)))
 (let ((?x17712 (* l_0_12_24 l_0_12_24)))
 (let ((?x17710 (* l_0_12_23 l_0_12_23)))
 (let ((?x17711 (+ (+ (* (- l_0_12_10) l_0_12_10) (* l_0_12_22 l_0_12_22)) ?x17710)))
 (let ((?x17725 (+ (+ (+ (- (- (+ (+ ?x17711 ?x17712) ?x17714) ?x17716) ?x17718) ?x17720) ?x17722) ?x17724)))
 (= (- (+ ?x17725 ?x17726) ?x17728) 0.0))))))))))))))
(assert
 (let ((?x17582 (* (* 2.0 l_0_12_85) l_0_12_89)))
 (let ((?x17579 (* (* 2.0 l_0_12_84) l_0_12_88)))
 (let ((?x17576 (* (* 2.0 l_0_12_83) l_0_12_87)))
 (let ((?x17573 (* (* 2.0 l_0_12_82) l_0_12_86)))
 (let ((?x17087 (* 2.0 l_0_12_25)))
 (let ((?x17088 (* ?x17087 l_0_12_29)))
 (let ((?x17084 (* 2.0 l_0_12_24)))
 (let ((?x17085 (* ?x17084 l_0_12_28)))
 (let ((?x17081 (* 2.0 l_0_12_23)))
 (let ((?x17082 (* ?x17081 l_0_12_27)))
 (let ((?x17079 (* (* 2.0 l_0_12_22) l_0_12_26)))
 (let ((?x17743 (- (* (* (- 2.0) l_0_12_10) l_0_12_14) (* (* 2.0 l_0_12_11) l_0_12_7))))
 (let ((?x17747 (- (- ?x17743 (* (* 2.0 l_0_12_12) l_0_12_8)) (* (* 2.0 l_0_12_13) l_0_12_9))))
 (let ((?x17754 (+ (+ (+ (+ (+ (+ (+ ?x17747 ?x17079) ?x17082) ?x17085) ?x17088) ?x17573) ?x17576) ?x17579)))
 (= (+ ?x17754 ?x17582) 0.0))))))))))))))))
(assert
 (let ((?x8846 (* l_0_12_90 l_0_12_90)))
 (let ((?x8824 (* l_0_12_89 l_0_12_89)))
 (let ((?x8816 (* l_0_12_88 l_0_12_88)))
 (let ((?x8813 (* l_0_12_87 l_0_12_87)))
 (let ((?x8770 (* l_0_12_86 l_0_12_86)))
 (let ((?x8681 (* l_0_12_30 l_0_12_30)))
 (let ((?x8677 (* l_0_12_29 l_0_12_29)))
 (let ((?x8682 (* l_0_12_28 l_0_12_28)))
 (let ((?x8670 (* l_0_12_27 l_0_12_27)))
 (let ((?x8644 (* l_0_12_26 l_0_12_26)))
 (let ((?x17783 (* l_0_12_15 l_0_12_15)))
 (let ((?x17781 (* l_0_12_14 l_0_12_14)))
 (let ((?x17779 (* l_0_12_13 l_0_12_13)))
 (let ((?x17780 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x17779)))
 (let ((?x17789 (+ (+ (+ (+ (+ (- (- ?x17780 ?x17781) ?x17783) ?x8644) ?x8670) ?x8682) ?x8677) ?x8681)))
 (= (+ (+ (+ (+ (+ ?x17789 ?x8770) ?x8813) ?x8816) ?x8824) ?x8846) 0.0)))))))))))))))))
(assert
 (let ((?x16893 (* l_0_12_76 l_0_12_76)))
 (let ((?x17811 (- (* (* (- 2.0) l_0_12_16) l_0_12_19) (* (* 2.0 l_0_12_16) l_0_12_16))))
 (let ((?x17815 (- (- ?x17811 (* (* 2.0 l_0_12_61) l_0_12_64)) (* (* (/ 1.0 2.0) l_0_12_76) l_0_12_79))))
 (= (- ?x17815 ?x16893) 0.0)))))
(assert
 (let ((?x16942 (* 2.0 l_0_12_76)))
 (let ((?x16943 (* ?x16942 l_0_12_77)))
 (let ((?x16655 (* 2.0 l_0_12_18)))
 (let ((?x16656 (* ?x16655 l_0_12_20)))
 (let ((?x16650 (* 2.0 l_0_12_17)))
 (let ((?x16651 (* ?x16650 l_0_12_19)))
 (let ((?x16736 (* 2.0 l_0_12_16)))
 (let ((?x16968 (* ?x16736 l_0_12_19)))
 (let ((?x17826 (- (* (* (- 2.0) l_0_12_106) l_0_12_109) (* (* 4.0 l_0_12_16) l_0_12_17))))
 (let ((?x17831 (+ (- (- (+ ?x17826 ?x16968) ?x16651) ?x16656) (* (* 8.0 l_0_12_61) l_0_12_64))))
 (let ((?x17835 (- (- ?x17831 (* (* 2.0 l_0_12_62) l_0_12_64)) (* (* 2.0 l_0_12_63) l_0_12_65))))
 (let ((?x17840 (- (- (- ?x17835 ?x16943) (* (* (/ 1.0 2.0) l_0_12_77) l_0_12_79)) (* (* (/ 1.0 2.0) l_0_12_78) l_0_12_80))))
 (= (- ?x17840 (* (* 2.0 l_0_12_91) l_0_12_94)) 0.0))))))))))))))
(assert
 (let ((?x16942 (* 2.0 l_0_12_76)))
 (let ((?x17003 (* ?x16942 l_0_12_79)))
 (let ((?x9714 (* l_0_12_66 l_0_12_66)))
 (let ((?x9706 (* l_0_12_65 l_0_12_65)))
 (let ((?x9697 (* l_0_12_64 l_0_12_64)))
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x16885 (* ?x16884 l_0_12_47)))
 (let ((?x16881 (* 2.0 l_0_12_31)))
 (let ((?x16882 (* ?x16881 l_0_12_32)))
 (let ((?x9229 (* l_0_12_21 l_0_12_21)))
 (let ((?x9238 (* l_0_12_20 l_0_12_20)))
 (let ((?x9667 (- (- (* (* (- 4.0) l_0_12_16) l_0_12_19) (* l_0_12_19 l_0_12_19)) ?x9238)))
 (let ((?x9709 (- (- (- (- (- (+ (- ?x9667 ?x9229) ?x16882) ?x16885) ?x9697) ?x9706) ?x9714) ?x17003)))
 (let ((?x17854 (- (- ?x9709 (* (* (/ 1.0 4.0) l_0_12_79) l_0_12_79)) (* (* (/ 1.0 4.0) l_0_12_80) l_0_12_80))))
 (= (- ?x17854 (* (* (/ 1.0 4.0) l_0_12_81) l_0_12_81)) 0.0))))))))))))))))
(assert
 (let ((?x16942 (* 2.0 l_0_12_76)))
 (let ((?x17118 (* ?x16942 l_0_12_82)))
 (let ((?x16991 (* 2.0 l_0_12_48)))
 (let ((?x16992 (* ?x16991 l_0_12_50)))
 (let ((?x16988 (* 2.0 l_0_12_47)))
 (let ((?x16989 (* ?x16988 l_0_12_49)))
 (let ((?x16985 (* 2.0 l_0_12_33)))
 (let ((?x16986 (* ?x16985 l_0_12_35)))
 (let ((?x16982 (* 2.0 l_0_12_32)))
 (let ((?x16983 (* ?x16982 l_0_12_34)))
 (let ((?x16979 (* 2.0 l_0_12_21)))
 (let ((?x17543 (* ?x16979 l_0_12_24)))
 (let ((?x16976 (* 2.0 l_0_12_20)))
 (let ((?x17541 (* ?x16976 l_0_12_23)))
 (let ((?x16973 (* 2.0 l_0_12_19)))
 (let ((?x17531 (* ?x16973 l_0_12_22)))
 (let ((?x9887 (- (- (- (- (* (* (- 4.0) l_0_12_16) l_0_12_22) ?x17531) ?x17541) ?x17543) ?x16983)))
 (let ((?x9905 (- (+ (+ (- ?x9887 ?x16986) ?x16989) ?x16992) (* (* 2.0 l_0_12_64) l_0_12_67))))
 (let ((?x17860 (- (- ?x9905 (* (* 2.0 l_0_12_65) l_0_12_68)) (* (* 2.0 l_0_12_66) l_0_12_69))))
 (let ((?x17865 (- (- (- ?x17860 ?x17118) (* (* (/ 1.0 2.0) l_0_12_79) l_0_12_82)) (* (* (/ 1.0 2.0) l_0_12_80) l_0_12_83))))
 (= (- ?x17865 (* (* (/ 1.0 2.0) l_0_12_81) l_0_12_84)) 0.0))))))))))))))))))))))
(assert
 (let ((?x17882 (* l_0_12_96 l_0_12_96)))
 (let ((?x17880 (* l_0_12_95 l_0_12_95)))
 (let ((?x17878 (* l_0_12_94 l_0_12_94)))
 (let ((?x17284 (* 2.0 l_0_12_78)))
 (let ((?x17285 (* ?x17284 l_0_12_80)))
 (let ((?x17279 (* 2.0 l_0_12_77)))
 (let ((?x17280 (* ?x17279 l_0_12_79)))
 (let ((?x16932 (* l_0_12_48 l_0_12_48)))
 (let ((?x16930 (* l_0_12_47 l_0_12_47)))
 (let ((?x16928 (* l_0_12_33 l_0_12_33)))
 (let ((?x16926 (* l_0_12_32 l_0_12_32)))
 (let ((?x10034 (* l_0_12_111 l_0_12_111)))
 (let ((?x10035 (- (- (* (- l_0_12_109) l_0_12_109) (* l_0_12_110 l_0_12_110)) ?x10034)))
 (let ((?x10019 (- (- ?x10035 (* (* 4.0 l_0_12_17) l_0_12_19)) (* (* 4.0 l_0_12_18) l_0_12_20))))
 (let ((?x9943 (+ (+ ?x10019 (* 1.0 (* l_0_12_19 l_0_12_19))) (* 1.0 (* l_0_12_20 l_0_12_20)))))
 (let ((?x9958 (- (+ (+ (+ ?x9943 (* 1.0 (* l_0_12_21 l_0_12_21))) ?x16926) ?x16928) ?x16930)))
 (let ((?x17873 (+ (+ (- ?x9958 ?x16932) (* 4.0 (* l_0_12_64 l_0_12_64))) (* 4.0 (* l_0_12_65 l_0_12_65)))))
 (let ((?x17879 (- (- (- (+ ?x17873 (* 4.0 (* l_0_12_66 l_0_12_66))) ?x17280) ?x17285) ?x17878)))
 (= (- (- ?x17879 ?x17880) ?x17882) 0.0))))))))))))))))))))
(assert
 (let ((?x17284 (* 2.0 l_0_12_78)))
 (let ((?x17375 (* ?x17284 l_0_12_83)))
 (let ((?x17279 (* 2.0 l_0_12_77)))
 (let ((?x17373 (* ?x17279 l_0_12_82)))
 (let ((?x16979 (* 2.0 l_0_12_21)))
 (let ((?x17543 (* ?x16979 l_0_12_24)))
 (let ((?x16976 (* 2.0 l_0_12_20)))
 (let ((?x17541 (* ?x16976 l_0_12_23)))
 (let ((?x16973 (* 2.0 l_0_12_19)))
 (let ((?x17531 (* ?x16973 l_0_12_22)))
 (let ((?x17903 (- (* (* (- 2.0) l_0_12_109) l_0_12_112) (* (* 2.0 l_0_12_110) l_0_12_113))))
 (let ((?x17907 (- (- ?x17903 (* (* 2.0 l_0_12_111) l_0_12_114)) (* (* 4.0 l_0_12_17) l_0_12_22))))
 (let ((?x17912 (+ (+ (+ (- ?x17907 (* (* 4.0 l_0_12_18) l_0_12_23)) ?x17531) ?x17541) ?x17543)))
 (let ((?x17916 (+ (+ ?x17912 (* (* 8.0 l_0_12_64) l_0_12_67)) (* (* 8.0 l_0_12_65) l_0_12_68))))
 (let ((?x17923 (- (- (- (+ ?x17916 (* (* 8.0 l_0_12_66) l_0_12_69)) ?x17373) ?x17375) (* (* 2.0 l_0_12_94) l_0_12_97))))
 (let ((?x17929 (- (- ?x17923 (* (* 2.0 l_0_12_95) l_0_12_98)) (* (* 2.0 l_0_12_96) l_0_12_99))))
 (= ?x17929 0.0))))))))))))))))))
(assert
 (let ((?x17501 (* l_0_12_81 l_0_12_81)))
 (let ((?x17496 (* l_0_12_80 l_0_12_80)))
 (let ((?x17491 (* l_0_12_79 l_0_12_79)))
 (let ((?x16991 (* 2.0 l_0_12_48)))
 (let ((?x16992 (* ?x16991 l_0_12_50)))
 (let ((?x16988 (* 2.0 l_0_12_47)))
 (let ((?x16989 (* ?x16988 l_0_12_49)))
 (let ((?x16985 (* 2.0 l_0_12_33)))
 (let ((?x16986 (* ?x16985 l_0_12_35)))
 (let ((?x16982 (* 2.0 l_0_12_32)))
 (let ((?x16983 (* ?x16982 l_0_12_34)))
 (let ((?x17952 (- (* (* (- 2.0) l_0_12_19) l_0_12_19) (* (* 2.0 l_0_12_20) l_0_12_20))))
 (let ((?x17957 (- (+ (+ (- ?x17952 (* (* 2.0 l_0_12_21) l_0_12_21)) ?x16983) ?x16986) ?x16989)))
 (= (- (- (- (- ?x17957 ?x16992) ?x17491) ?x17496) ?x17501) 0.0)))))))))))))))
(assert
 (let ((?x17498 (* 2.0 l_0_12_81)))
 (let ((?x17570 (* ?x17498 l_0_12_84)))
 (let ((?x17493 (* 2.0 l_0_12_80)))
 (let ((?x17568 (* ?x17493 l_0_12_83)))
 (let ((?x17488 (* 2.0 l_0_12_79)))
 (let ((?x17566 (* ?x17488 l_0_12_82)))
 (let ((?x16991 (* 2.0 l_0_12_48)))
 (let ((?x17102 (* ?x16991 l_0_12_53)))
 (let ((?x16988 (* 2.0 l_0_12_47)))
 (let ((?x17098 (* ?x16988 l_0_12_52)))
 (let ((?x16985 (* 2.0 l_0_12_33)))
 (let ((?x17094 (* ?x16985 l_0_12_38)))
 (let ((?x16982 (* 2.0 l_0_12_32)))
 (let ((?x17090 (* ?x16982 l_0_12_37)))
 (let ((?x17977 (- (* (* (- 4.0) l_0_12_19) l_0_12_22) (* (* 4.0 l_0_12_20) l_0_12_23))))
 (let ((?x17982 (- (+ (+ (- ?x17977 (* (* 4.0 l_0_12_21) l_0_12_24)) ?x17090) ?x17094) ?x17098)))
 (= (- (- (- (- ?x17982 ?x17102) ?x17566) ?x17568) ?x17570) 0.0))))))))))))))))))
(assert
 (let ((?x17726 (* l_0_12_85 l_0_12_85)))
 (let ((?x17724 (* l_0_12_84 l_0_12_84)))
 (let ((?x17722 (* l_0_12_83 l_0_12_83)))
 (let ((?x17720 (* l_0_12_82 l_0_12_82)))
 (let ((?x18000 (- (* (* (- 2.0) l_0_12_22) l_0_12_22) (* (* 2.0 l_0_12_23) l_0_12_23))))
 (let ((?x18004 (- (- ?x18000 (* (* 2.0 l_0_12_24) l_0_12_24)) (* (* 2.0 l_0_12_25) l_0_12_25))))
 (= (- (- (- (- ?x18004 ?x17720) ?x17722) ?x17724) ?x17726) 0.0))))))))
(assert
 (let ((?x18018 (- (- (* (- l_0_12_16) l_0_12_16) (* l_0_12_61 l_0_12_61)) (* (* (/ 1.0 4.0) l_0_12_76) l_0_12_76))))
 (= ?x18018 0.0)))
(assert
 (let ((?x18038 (* l_0_12_91 l_0_12_91)))
 (let ((?x16736 (* 2.0 l_0_12_16)))
 (let ((?x16737 (* ?x16736 l_0_12_17)))
 (let ((?x18031 (+ (- (* (- l_0_12_106) l_0_12_106) ?x16737) (* 1.0 (* l_0_12_16 l_0_12_16)))))
 (let ((?x18035 (+ (- ?x18031 (* (* 2.0 l_0_12_61) l_0_12_62)) (* 4.0 (* l_0_12_61 l_0_12_61)))))
 (= (- (- ?x18035 (* (* (/ 1.0 2.0) l_0_12_76) l_0_12_77)) ?x18038) 0.0)))))))
(assert
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x16885 (* ?x16884 l_0_12_47)))
 (let ((?x16881 (* 2.0 l_0_12_31)))
 (let ((?x16882 (* ?x16881 l_0_12_32)))
 (let ((?x18061 (- (+ (- (* (* (- 2.0) l_0_12_16) l_0_12_22) ?x16882) ?x16885) (* (* 2.0 l_0_12_61) l_0_12_67))))
 (= (- ?x18061 (* (* (/ 1.0 2.0) l_0_12_76) l_0_12_82)) 0.0)))))))
(assert
 (let ((?x16932 (* l_0_12_48 l_0_12_48)))
 (let ((?x16930 (* l_0_12_47 l_0_12_47)))
 (let ((?x16928 (* l_0_12_33 l_0_12_33)))
 (let ((?x16926 (* l_0_12_32 l_0_12_32)))
 (let ((?x16655 (* 2.0 l_0_12_18)))
 (let ((?x17351 (* ?x16655 l_0_12_23)))
 (let ((?x16650 (* 2.0 l_0_12_17)))
 (let ((?x17349 (* ?x16650 l_0_12_22)))
 (let ((?x16736 (* 2.0 l_0_12_16)))
 (let ((?x17076 (* ?x16736 l_0_12_22)))
 (let ((?x18077 (- (- (- (+ (* (* (- 2.0) l_0_12_106) l_0_12_112) ?x17076) ?x17349) ?x17351) ?x16926)))
 (let ((?x18082 (+ (+ (+ (- ?x18077 ?x16928) ?x16930) ?x16932) (* (* 8.0 l_0_12_61) l_0_12_67))))
 (let ((?x18086 (- (- ?x18082 (* (* 2.0 l_0_12_62) l_0_12_67)) (* (* 2.0 l_0_12_63) l_0_12_68))))
 (let ((?x18090 (- (- ?x18086 (* (* (/ 1.0 2.0) l_0_12_77) l_0_12_82)) (* (* (/ 1.0 2.0) l_0_12_78) l_0_12_83))))
 (= (- ?x18090 (* (* 2.0 l_0_12_91) l_0_12_97)) 0.0))))))))))))))))
(assert
 (let ((?x18134 (* l_0_12_70 l_0_12_70)))
 (let ((?x18132 (* l_0_12_69 l_0_12_69)))
 (let ((?x18130 (* l_0_12_68 l_0_12_68)))
 (let ((?x18128 (* l_0_12_67 l_0_12_67)))
 (let ((?x16991 (* 2.0 l_0_12_48)))
 (let ((?x17102 (* ?x16991 l_0_12_53)))
 (let ((?x16988 (* 2.0 l_0_12_47)))
 (let ((?x17098 (* ?x16988 l_0_12_52)))
 (let ((?x16985 (* 2.0 l_0_12_33)))
 (let ((?x17094 (* ?x16985 l_0_12_38)))
 (let ((?x16982 (* 2.0 l_0_12_32)))
 (let ((?x17090 (* ?x16982 l_0_12_37)))
 (let ((?x17714 (* l_0_12_25 l_0_12_25)))
 (let ((?x17712 (* l_0_12_24 l_0_12_24)))
 (let ((?x18122 (- (- (* (- l_0_12_22) l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x17712)))
 (let ((?x18131 (- (- (+ (+ (- (- (- ?x18122 ?x17714) ?x17090) ?x17094) ?x17098) ?x17102) ?x18128) ?x18130)))
 (let ((?x18141 (- (- (- (- ?x18131 ?x18132) ?x18134) (* (* (/ 1.0 4.0) l_0_12_82) l_0_12_82)) (* (* (/ 1.0 4.0) l_0_12_83) l_0_12_83))))
 (let ((?x18147 (- (- ?x18141 (* (* (/ 1.0 4.0) l_0_12_84) l_0_12_84)) (* (* (/ 1.0 4.0) l_0_12_85) l_0_12_85))))
 (= ?x18147 0.0))))))))))))))))))))
(assert
 (let ((?x16655 (* 2.0 l_0_12_18)))
 (let ((?x17351 (* ?x16655 l_0_12_23)))
 (let ((?x16650 (* 2.0 l_0_12_17)))
 (let ((?x17349 (* ?x16650 l_0_12_22)))
 (let ((?x18181 (- (* (* (- 2.0) l_0_12_107) l_0_12_112) (* (* 2.0 l_0_12_108) l_0_12_113))))
 (let ((?x18187 (+ (+ (+ (+ ?x18181 ?x17349) ?x17351) (* (* 8.0 l_0_12_62) l_0_12_67)) (* (* 8.0 l_0_12_63) l_0_12_68))))
 (let ((?x18191 (- (- ?x18187 (* (* 2.0 l_0_12_92) l_0_12_97)) (* (* 2.0 l_0_12_93) l_0_12_98))))
 (= ?x18191 0.0)))))))))
(assert
 (let ((?x18239 (* l_0_12_99 l_0_12_99)))
 (let ((?x18237 (* l_0_12_98 l_0_12_98)))
 (let ((?x18235 (* l_0_12_97 l_0_12_97)))
 (let ((?x18134 (* l_0_12_70 l_0_12_70)))
 (let ((?x18233 (* 4.0 ?x18134)))
 (let ((?x18132 (* l_0_12_69 l_0_12_69)))
 (let ((?x18231 (* 4.0 ?x18132)))
 (let ((?x18130 (* l_0_12_68 l_0_12_68)))
 (let ((?x18229 (* 4.0 ?x18130)))
 (let ((?x18128 (* l_0_12_67 l_0_12_67)))
 (let ((?x18227 (* 4.0 ?x18128)))
 (let ((?x18217 (* l_0_12_115 l_0_12_115)))
 (let ((?x18215 (* l_0_12_114 l_0_12_114)))
 (let ((?x18213 (* l_0_12_113 l_0_12_113)))
 (let ((?x18214 (- (- (* (- l_0_12_100) l_0_12_100) (* l_0_12_112 l_0_12_112)) ?x18213)))
 (let ((?x18222 (+ (+ (- (- ?x18214 ?x18215) ?x18217) (* 1.0 (* l_0_12_22 l_0_12_22))) (* 1.0 (* l_0_12_23 l_0_12_23)))))
 (let ((?x18226 (+ (+ ?x18222 (* 1.0 (* l_0_12_24 l_0_12_24))) (* 1.0 (* l_0_12_25 l_0_12_25)))))
 (let ((?x18240 (- (- (- (+ (+ (+ (+ ?x18226 ?x18227) ?x18229) ?x18231) ?x18233) ?x18235) ?x18237) ?x18239)))
 (= ?x18240 0.0))))))))))))))))))))
(assert
 (= (+ (* (- l_0_12_31) l_0_12_31) (* l_0_12_46 l_0_12_46)) 0.0))
(assert
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x18260 (* ?x16884 l_0_12_49)))
 (= (+ (* (* (- 2.0) l_0_12_31) l_0_12_34) ?x18260) 0.0))))
(assert
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x18266 (* ?x16884 l_0_12_52)))
 (= (+ (* (* (- 2.0) l_0_12_31) l_0_12_37) ?x18266) 0.0))))
(assert
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x18283 (* ?x16884 l_0_12_56)))
 (let ((?x18266 (* ?x16884 l_0_12_52)))
 (let ((?x16881 (* 2.0 l_0_12_31)))
 (let ((?x18276 (* ?x16881 l_0_12_41)))
 (let ((?x18274 (* ?x16881 l_0_12_37)))
 (= (+ (- (- ?x18274 ?x18276) ?x18266) ?x18283) 0.0))))))))
(assert
 (let ((?x18302 (* l_0_12_51 l_0_12_51)))
 (let ((?x18300 (* l_0_12_50 l_0_12_50)))
 (let ((?x18298 (* l_0_12_49 l_0_12_49)))
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x18266 (* ?x16884 l_0_12_52)))
 (let ((?x18295 (* l_0_12_36 l_0_12_36)))
 (let ((?x18293 (* l_0_12_35 l_0_12_35)))
 (let ((?x18294 (- (- (* (* 2.0 l_0_12_31) l_0_12_37) (* l_0_12_34 l_0_12_34)) ?x18293)))
 (= (+ (+ (+ (- (- ?x18294 ?x18295) ?x18266) ?x18298) ?x18300) ?x18302) 0.0))))))))))
(assert
 (let ((?x18326 (* 2.0 l_0_12_51)))
 (let ((?x18327 (* ?x18326 l_0_12_54)))
 (let ((?x18323 (* 2.0 l_0_12_50)))
 (let ((?x18324 (* ?x18323 l_0_12_53)))
 (let ((?x18320 (* 2.0 l_0_12_49)))
 (let ((?x18321 (* ?x18320 l_0_12_52)))
 (let ((?x18317 (* 2.0 l_0_12_36)))
 (let ((?x18318 (* ?x18317 l_0_12_39)))
 (let ((?x18314 (* 2.0 l_0_12_35)))
 (let ((?x18315 (* ?x18314 l_0_12_38)))
 (let ((?x18325 (+ (+ (- (- (* (* (- 2.0) l_0_12_34) l_0_12_37) ?x18315) ?x18318) ?x18321) ?x18324)))
 (= (+ ?x18325 ?x18327) 0.0)))))))))))))
(assert
 (let ((?x18326 (* 2.0 l_0_12_51)))
 (let ((?x18362 (* ?x18326 l_0_12_58)))
 (let ((?x18327 (* ?x18326 l_0_12_54)))
 (let ((?x18323 (* 2.0 l_0_12_50)))
 (let ((?x18359 (* ?x18323 l_0_12_57)))
 (let ((?x18324 (* ?x18323 l_0_12_53)))
 (let ((?x18320 (* 2.0 l_0_12_49)))
 (let ((?x18356 (* ?x18320 l_0_12_56)))
 (let ((?x18321 (* ?x18320 l_0_12_52)))
 (let ((?x18317 (* 2.0 l_0_12_36)))
 (let ((?x18353 (* ?x18317 l_0_12_43)))
 (let ((?x18318 (* ?x18317 l_0_12_39)))
 (let ((?x18314 (* 2.0 l_0_12_35)))
 (let ((?x18350 (* ?x18314 l_0_12_42)))
 (let ((?x18315 (* ?x18314 l_0_12_38)))
 (let ((?x18337 (* 2.0 l_0_12_34)))
 (let ((?x18341 (* ?x18337 l_0_12_41)))
 (let ((?x18339 (* ?x18337 l_0_12_37)))
 (let ((?x18357 (+ (- (- (+ (- (+ (- ?x18339 ?x18341) ?x18315) ?x18350) ?x18318) ?x18353) ?x18321) ?x18356)))
 (= (+ (- (+ (- ?x18357 ?x18324) ?x18359) ?x18327) ?x18362) 0.0)))))))))))))))))))))
(assert
 (let ((?x18394 (* l_0_12_55 l_0_12_55)))
 (let ((?x18392 (* l_0_12_54 l_0_12_54)))
 (let ((?x18390 (* l_0_12_53 l_0_12_53)))
 (let ((?x18388 (* l_0_12_52 l_0_12_52)))
 (let ((?x18386 (* l_0_12_40 l_0_12_40)))
 (let ((?x18384 (* l_0_12_39 l_0_12_39)))
 (let ((?x18385 (- (- (* (- l_0_12_37) l_0_12_37) (* l_0_12_38 l_0_12_38)) ?x18384)))
 (= (+ (+ (+ (+ (- ?x18385 ?x18386) ?x18388) ?x18390) ?x18392) ?x18394) 0.0)))))))))
(assert
 (let ((?x18394 (* l_0_12_55 l_0_12_55)))
 (let ((?x18437 (* (* 2.0 l_0_12_55) l_0_12_59)))
 (let ((?x18392 (* l_0_12_54 l_0_12_54)))
 (let ((?x18433 (* (* 2.0 l_0_12_54) l_0_12_58)))
 (let ((?x18390 (* l_0_12_53 l_0_12_53)))
 (let ((?x18429 (* (* 2.0 l_0_12_53) l_0_12_57)))
 (let ((?x18388 (* l_0_12_52 l_0_12_52)))
 (let ((?x18425 (* (* 2.0 l_0_12_52) l_0_12_56)))
 (let ((?x18386 (* l_0_12_40 l_0_12_40)))
 (let ((?x18421 (* (* 2.0 l_0_12_40) l_0_12_44)))
 (let ((?x18384 (* l_0_12_39 l_0_12_39)))
 (let ((?x18417 (* (* 2.0 l_0_12_39) l_0_12_43)))
 (let ((?x18382 (* l_0_12_38 l_0_12_38)))
 (let ((?x18413 (* (* 2.0 l_0_12_38) l_0_12_42)))
 (let ((?x18414 (- (+ (* (* (- 2.0) l_0_12_37) l_0_12_41) (* l_0_12_37 l_0_12_37)) ?x18413)))
 (let ((?x18427 (- (+ (+ (- (+ (- (+ ?x18414 ?x18382) ?x18417) ?x18384) ?x18421) ?x18386) ?x18425) ?x18388)))
 (= (- (+ (- (+ (- (+ ?x18427 ?x18429) ?x18390) ?x18433) ?x18392) ?x18437) ?x18394) 0.0))))))))))))))))))
(assert
 (let ((?x18493 (* l_0_12_60 l_0_12_60)))
 (let ((?x18491 (* l_0_12_59 l_0_12_59)))
 (let ((?x18489 (* l_0_12_58 l_0_12_58)))
 (let ((?x18487 (* l_0_12_57 l_0_12_57)))
 (let ((?x18485 (* l_0_12_56 l_0_12_56)))
 (let ((?x18437 (* (* 2.0 l_0_12_55) l_0_12_59)))
 (let ((?x18433 (* (* 2.0 l_0_12_54) l_0_12_58)))
 (let ((?x18429 (* (* 2.0 l_0_12_53) l_0_12_57)))
 (let ((?x18425 (* (* 2.0 l_0_12_52) l_0_12_56)))
 (let ((?x18479 (* l_0_12_45 l_0_12_45)))
 (let ((?x18477 (* l_0_12_44 l_0_12_44)))
 (let ((?x18475 (* l_0_12_43 l_0_12_43)))
 (let ((?x18473 (* l_0_12_42 l_0_12_42)))
 (let ((?x18471 (* l_0_12_41 l_0_12_41)))
 (let ((?x18421 (* (* 2.0 l_0_12_40) l_0_12_44)))
 (let ((?x18417 (* (* 2.0 l_0_12_39) l_0_12_43)))
 (let ((?x18413 (* (* 2.0 l_0_12_38) l_0_12_42)))
 (let ((?x18470 (+ (+ (+ (* (* 2.0 l_0_12_37) l_0_12_41) ?x18413) ?x18417) ?x18421)))
 (let ((?x18482 (- (- (- (- (- (- (- ?x18470 ?x18471) ?x18473) ?x18475) ?x18477) ?x18479) ?x18425) ?x18429)))
 (let ((?x18494 (+ (+ (+ (+ (+ (- (- ?x18482 ?x18433) ?x18437) ?x18485) ?x18487) ?x18489) ?x18491) ?x18493)))
 (= ?x18494 0.0))))))))))))))))))))))
(assert
 (= (- (* l_0_12_31 l_0_12_31) (* l_0_12_46 l_0_12_46)) 0.0))
(assert
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x18260 (* ?x16884 l_0_12_49)))
 (= (- (* (* 2.0 l_0_12_31) l_0_12_34) ?x18260) 0.0))))
(assert
 (let ((?x18302 (* l_0_12_51 l_0_12_51)))
 (let ((?x18300 (* l_0_12_50 l_0_12_50)))
 (let ((?x18298 (* l_0_12_49 l_0_12_49)))
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x18283 (* ?x16884 l_0_12_56)))
 (let ((?x18295 (* l_0_12_36 l_0_12_36)))
 (let ((?x18293 (* l_0_12_35 l_0_12_35)))
 (let ((?x11175 (+ (+ (* (* 2.0 l_0_12_31) l_0_12_41) (* l_0_12_34 l_0_12_34)) ?x18293)))
 (= (- (- (- (- (+ ?x11175 ?x18295) ?x18283) ?x18298) ?x18300) ?x18302) 0.0))))))))))
(assert
 (let ((?x18302 (* l_0_12_51 l_0_12_51)))
 (let ((?x18300 (* l_0_12_50 l_0_12_50)))
 (let ((?x18298 (* l_0_12_49 l_0_12_49)))
 (let ((?x18295 (* l_0_12_36 l_0_12_36)))
 (let ((?x11171 (- (+ (+ (* l_0_12_34 l_0_12_34) (* l_0_12_35 l_0_12_35)) ?x18295) ?x18298)))
 (= (- (- ?x11171 ?x18300) ?x18302) 0.0)))))))
(assert
 (let ((?x18326 (* 2.0 l_0_12_51)))
 (let ((?x18327 (* ?x18326 l_0_12_54)))
 (let ((?x18323 (* 2.0 l_0_12_50)))
 (let ((?x18324 (* ?x18323 l_0_12_53)))
 (let ((?x18320 (* 2.0 l_0_12_49)))
 (let ((?x18321 (* ?x18320 l_0_12_52)))
 (let ((?x18317 (* 2.0 l_0_12_36)))
 (let ((?x18318 (* ?x18317 l_0_12_39)))
 (let ((?x18314 (* 2.0 l_0_12_35)))
 (let ((?x18315 (* ?x18314 l_0_12_38)))
 (let ((?x18337 (* 2.0 l_0_12_34)))
 (let ((?x18339 (* ?x18337 l_0_12_37)))
 (= (- (- (- (+ (+ ?x18339 ?x18315) ?x18318) ?x18321) ?x18324) ?x18327) 0.0))))))))))))))
(assert
 (let ((?x18326 (* 2.0 l_0_12_51)))
 (let ((?x18362 (* ?x18326 l_0_12_58)))
 (let ((?x18323 (* 2.0 l_0_12_50)))
 (let ((?x18359 (* ?x18323 l_0_12_57)))
 (let ((?x18320 (* 2.0 l_0_12_49)))
 (let ((?x18356 (* ?x18320 l_0_12_56)))
 (let ((?x18317 (* 2.0 l_0_12_36)))
 (let ((?x18353 (* ?x18317 l_0_12_43)))
 (let ((?x18314 (* 2.0 l_0_12_35)))
 (let ((?x18350 (* ?x18314 l_0_12_42)))
 (let ((?x18337 (* 2.0 l_0_12_34)))
 (let ((?x18341 (* ?x18337 l_0_12_41)))
 (= (- (- (- (+ (+ ?x18341 ?x18350) ?x18353) ?x18356) ?x18359) ?x18362) 0.0))))))))))))))
(assert
 (let ((?x18394 (* l_0_12_55 l_0_12_55)))
 (let ((?x18392 (* l_0_12_54 l_0_12_54)))
 (let ((?x18390 (* l_0_12_53 l_0_12_53)))
 (let ((?x18388 (* l_0_12_52 l_0_12_52)))
 (let ((?x18386 (* l_0_12_40 l_0_12_40)))
 (let ((?x18384 (* l_0_12_39 l_0_12_39)))
 (let ((?x11260 (+ (+ (+ (* l_0_12_37 l_0_12_37) (* l_0_12_38 l_0_12_38)) ?x18384) ?x18386)))
 (= (- (- (- (- ?x11260 ?x18388) ?x18390) ?x18392) ?x18394) 0.0)))))))))
(assert
 (let ((?x18437 (* (* 2.0 l_0_12_55) l_0_12_59)))
 (let ((?x18433 (* (* 2.0 l_0_12_54) l_0_12_58)))
 (let ((?x18429 (* (* 2.0 l_0_12_53) l_0_12_57)))
 (let ((?x18425 (* (* 2.0 l_0_12_52) l_0_12_56)))
 (let ((?x18421 (* (* 2.0 l_0_12_40) l_0_12_44)))
 (let ((?x18417 (* (* 2.0 l_0_12_39) l_0_12_43)))
 (let ((?x18413 (* (* 2.0 l_0_12_38) l_0_12_42)))
 (let ((?x18470 (+ (+ (+ (* (* 2.0 l_0_12_37) l_0_12_41) ?x18413) ?x18417) ?x18421)))
 (= (- (- (- (- ?x18470 ?x18425) ?x18429) ?x18433) ?x18437) 0.0))))))))))
(assert
 (let ((?x18493 (* l_0_12_60 l_0_12_60)))
 (let ((?x18491 (* l_0_12_59 l_0_12_59)))
 (let ((?x18489 (* l_0_12_58 l_0_12_58)))
 (let ((?x18487 (* l_0_12_57 l_0_12_57)))
 (let ((?x18485 (* l_0_12_56 l_0_12_56)))
 (let ((?x18479 (* l_0_12_45 l_0_12_45)))
 (let ((?x18477 (* l_0_12_44 l_0_12_44)))
 (let ((?x18475 (* l_0_12_43 l_0_12_43)))
 (let ((?x18548 (+ (+ (+ (* l_0_12_41 l_0_12_41) (* l_0_12_42 l_0_12_42)) ?x18475) ?x18477)))
 (= (- (- (- (- (- (+ ?x18548 ?x18479) ?x18485) ?x18487) ?x18489) ?x18491) ?x18493) 0.0)))))))))))
(assert
 (= (- (* l_0_12_31 l_0_12_31) (* l_0_12_46 l_0_12_46)) 0.0))
(assert
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x18260 (* ?x16884 l_0_12_49)))
 (= (- (* (* 2.0 l_0_12_31) l_0_12_34) ?x18260) 0.0))))
(assert
 (let ((?x16884 (* 2.0 l_0_12_46)))
 (let ((?x18283 (* ?x16884 l_0_12_56)))
 (let ((?x16881 (* 2.0 l_0_12_31)))
 (let ((?x18276 (* ?x16881 l_0_12_41)))
 (= (- ?x18276 ?x18283) 0.0))))))
(assert
 (let ((?x18326 (* 2.0 l_0_12_51)))
 (let ((?x18362 (* ?x18326 l_0_12_58)))
 (let ((?x18323 (* 2.0 l_0_12_50)))
 (let ((?x18359 (* ?x18323 l_0_12_57)))
 (let ((?x18320 (* 2.0 l_0_12_49)))
 (let ((?x18356 (* ?x18320 l_0_12_56)))
 (let ((?x18317 (* 2.0 l_0_12_36)))
 (let ((?x18353 (* ?x18317 l_0_12_43)))
 (let ((?x18314 (* 2.0 l_0_12_35)))
 (let ((?x18350 (* ?x18314 l_0_12_42)))
 (let ((?x18337 (* 2.0 l_0_12_34)))
 (let ((?x18341 (* ?x18337 l_0_12_41)))
 (= (- (- (- (+ (+ ?x18341 ?x18350) ?x18353) ?x18356) ?x18359) ?x18362) 0.0))))))))))))))
(assert
 (let ((?x18493 (* l_0_12_60 l_0_12_60)))
 (let ((?x18491 (* l_0_12_59 l_0_12_59)))
 (let ((?x18489 (* l_0_12_58 l_0_12_58)))
 (let ((?x18487 (* l_0_12_57 l_0_12_57)))
 (let ((?x18485 (* l_0_12_56 l_0_12_56)))
 (let ((?x18479 (* l_0_12_45 l_0_12_45)))
 (let ((?x18477 (* l_0_12_44 l_0_12_44)))
 (let ((?x18475 (* l_0_12_43 l_0_12_43)))
 (let ((?x18548 (+ (+ (+ (* l_0_12_41 l_0_12_41) (* l_0_12_42 l_0_12_42)) ?x18475) ?x18477)))
 (= (- (- (- (- (- (+ ?x18548 ?x18479) ?x18485) ?x18487) ?x18489) ?x18491) ?x18493) 0.0)))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_16 0.0))
(assert
 (>= l_0_12_18 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_25 0.0))
(assert
 (>= l_0_12_30 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_33 0.0))
(assert
 (>= l_0_12_36 0.0))
(assert
 (>= l_0_12_40 0.0))
(assert
 (>= l_0_12_45 0.0))
(assert
 (>= l_0_12_46 0.0))
(assert
 (>= l_0_12_48 0.0))
(assert
 (>= l_0_12_51 0.0))
(assert
 (>= l_0_12_55 0.0))
(assert
 (>= l_0_12_60 0.0))
(assert
 (>= l_0_12_61 0.0))
(assert
 (>= l_0_12_63 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_70 0.0))
(assert
 (>= l_0_12_75 0.0))
(assert
 (>= l_0_12_76 0.0))
(assert
 (>= l_0_12_78 0.0))
(assert
 (>= l_0_12_81 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_91 0.0))
(assert
 (>= l_0_12_93 0.0))
(assert
 (>= l_0_12_96 0.0))
(assert
 (>= l_0_12_100 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (>= l_0_12_106 0.0))
(assert
 (>= l_0_12_108 0.0))
(assert
 (>= l_0_12_111 0.0))
(assert
 (>= l_0_12_115 0.0))
(assert
 (>= l_0_12_120 0.0))
(assert
 (let ((?x18623 (* l_0_13_48 l_0_13_48)))
 (let ((?x18621 (* l_0_13_47 l_0_13_47)))
 (let ((?x18619 (* l_0_13_33 l_0_13_33)))
 (let ((?x18617 (* l_0_13_32 l_0_13_32)))
 (let ((?x18614 (* 2.0 l_0_13_18)))
 (let ((?x18615 (* ?x18614 l_0_13_23)))
 (let ((?x18611 (* 2.0 l_0_13_17)))
 (let ((?x18612 (* ?x18611 l_0_13_22)))
 (let ((?x18608 (* 2.0 l_0_13_16)))
 (let ((?x18609 (* ?x18608 l_0_13_22)))
 (let ((?x18607 (- (* (* (- 2.0) l_0_13_106) l_0_13_112) (* (* 2.0 l_0_13_121) l_0_13_127))))
 (let ((?x18624 (+ (+ (- (- (- (- (+ ?x18607 ?x18609) ?x18612) ?x18615) ?x18617) ?x18619) ?x18621) ?x18623)))
 (let ((?x18630 (- (+ ?x18624 (* (* 8.0 l_0_13_61) l_0_13_67)) (* (* 2.0 l_0_13_62) l_0_13_67))))
 (let ((?x18636 (- (- ?x18630 (* (* 2.0 l_0_13_63) l_0_13_68)) (* (* (/ 1.0 2.0) l_0_13_77) l_0_13_82))))
 (let ((?x18642 (- (- ?x18636 (* (* (/ 1.0 2.0) l_0_13_78) l_0_13_83)) (* (* 2.0 l_0_13_91) l_0_13_97))))
 (= (+ ?x18642 (/ 1.0 4.0)) 0.0)))))))))))))))))
(assert
 (let ((?x18760 (* l_0_13_96 l_0_13_96)))
 (let ((?x18758 (* l_0_13_95 l_0_13_95)))
 (let ((?x18756 (* l_0_13_94 l_0_13_94)))
 (let ((?x18753 (* 2.0 l_0_13_78)))
 (let ((?x18754 (* ?x18753 l_0_13_80)))
 (let ((?x18750 (* 2.0 l_0_13_77)))
 (let ((?x18751 (* ?x18750 l_0_13_79)))
 (let ((?x18623 (* l_0_13_48 l_0_13_48)))
 (let ((?x18621 (* l_0_13_47 l_0_13_47)))
 (let ((?x18619 (* l_0_13_33 l_0_13_33)))
 (let ((?x18617 (* l_0_13_32 l_0_13_32)))
 (let ((?x18720 (* l_0_13_126 l_0_13_126)))
 (let ((?x18718 (* l_0_13_125 l_0_13_125)))
 (let ((?x18716 (* l_0_13_124 l_0_13_124)))
 (let ((?x18714 (* l_0_13_111 l_0_13_111)))
 (let ((?x18715 (- (- (* (- l_0_13_109) l_0_13_109) (* l_0_13_110 l_0_13_110)) ?x18714)))
 (let ((?x18724 (- (- (- (- ?x18715 ?x18716) ?x18718) ?x18720) (* (* 4.0 l_0_13_17) l_0_13_19))))
 (let ((?x18730 (+ (- ?x18724 (* (* 4.0 l_0_13_18) l_0_13_20)) (* 1.0 (* l_0_13_19 l_0_13_19)))))
 (let ((?x18736 (+ (+ ?x18730 (* 1.0 (* l_0_13_20 l_0_13_20))) (* 1.0 (* l_0_13_21 l_0_13_21)))))
 (let ((?x18743 (+ (- (- (+ (+ ?x18736 ?x18617) ?x18619) ?x18621) ?x18623) (* 4.0 (* l_0_13_64 l_0_13_64)))))
 (let ((?x18749 (+ (+ ?x18743 (* 4.0 (* l_0_13_65 l_0_13_65))) (* 4.0 (* l_0_13_66 l_0_13_66)))))
 (= (- (- (- (- (- (- ?x18749 ?x18751) ?x18754) ?x18756) ?x18758) ?x18760) (/ 1.0 4.0)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18822 (* 2.0 l_0_13_76)))
 (let ((?x18823 (* ?x18822 l_0_13_77)))
 (let ((?x18623 (* l_0_13_48 l_0_13_48)))
 (let ((?x18621 (* l_0_13_47 l_0_13_47)))
 (let ((?x18619 (* l_0_13_33 l_0_13_33)))
 (let ((?x18617 (* l_0_13_32 l_0_13_32)))
 (let ((?x18614 (* 2.0 l_0_13_18)))
 (let ((?x18810 (* ?x18614 l_0_13_27)))
 (let ((?x18611 (* 2.0 l_0_13_17)))
 (let ((?x18808 (* ?x18611 l_0_13_26)))
 (let ((?x18608 (* 2.0 l_0_13_16)))
 (let ((?x18806 (* ?x18608 l_0_13_26)))
 (let ((?x18804 (* ?x18608 l_0_13_17)))
 (let ((?x18798 (- (* (* (- 2.0) l_0_13_1) l_0_13_2) (* (* 2.0 l_0_13_101) l_0_13_91))))
 (let ((?x18803 (- (- ?x18798 (* (* 2.0 l_0_13_106) l_0_13_116)) (* (* 2.0 l_0_13_121) l_0_13_131))))
 (let ((?x18814 (- (+ (+ (- (- (+ (+ ?x18803 ?x18804) ?x18806) ?x18808) ?x18810) ?x18617) ?x18619) ?x18621)))
 (let ((?x18819 (- (+ (- ?x18814 ?x18623) (* (* 8.0 l_0_13_61) l_0_13_71)) (* (* 2.0 l_0_13_62) l_0_13_71))))
 (let ((?x18826 (- (+ (- ?x18819 (* (* 2.0 l_0_13_63) l_0_13_72)) ?x18823) (* (* (/ 1.0 2.0) l_0_13_77) l_0_13_86))))
 (= (- (- ?x18826 (* (* (/ 1.0 2.0) l_0_13_78) l_0_13_87)) (/ 1.0 4.0)) 0.0))))))))))))))))))))
(assert
 (let ((?x18882 (* l_0_13_76 l_0_13_76)))
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x18874 (* ?x18873 l_0_13_47)))
 (let ((?x18870 (* 2.0 l_0_13_31)))
 (let ((?x18871 (* ?x18870 l_0_13_32)))
 (let ((?x18868 (* l_0_13_16 l_0_13_16)))
 (let ((?x18608 (* 2.0 l_0_13_16)))
 (let ((?x18806 (* ?x18608 l_0_13_26)))
 (let ((?x18878 (- (- (+ (+ (- (* (- l_0_13_1) l_0_13_1) ?x18806) ?x18868) ?x18871) ?x18874) (* (* 2.0 l_0_13_61) l_0_13_71))))
 (= (+ (- ?x18878 (* (* (/ 1.0 2.0) l_0_13_76) l_0_13_86)) ?x18882) 0.0)))))))))))
(assert
 (let ((?x18822 (* 2.0 l_0_13_76)))
 (let ((?x18941 (* ?x18822 l_0_13_86)))
 (let ((?x18939 (* ?x18822 l_0_13_79)))
 (let ((?x18927 (* 2.0 l_0_13_48)))
 (let ((?x18928 (* ?x18927 l_0_13_50)))
 (let ((?x18924 (* 2.0 l_0_13_47)))
 (let ((?x18925 (* ?x18924 l_0_13_49)))
 (let ((?x18921 (* 2.0 l_0_13_33)))
 (let ((?x18922 (* ?x18921 l_0_13_35)))
 (let ((?x18918 (* 2.0 l_0_13_32)))
 (let ((?x18919 (* ?x18918 l_0_13_34)))
 (let ((?x18915 (* 2.0 l_0_13_21)))
 (let ((?x18916 (* ?x18915 l_0_13_28)))
 (let ((?x18912 (* 2.0 l_0_13_20)))
 (let ((?x18913 (* ?x18912 l_0_13_27)))
 (let ((?x18909 (* 2.0 l_0_13_19)))
 (let ((?x18910 (* ?x18909 l_0_13_26)))
 (let ((?x18608 (* 2.0 l_0_13_16)))
 (let ((?x18904 (* ?x18608 l_0_13_19)))
 (let ((?x18908 (- (+ (* (* (- 2.0) l_0_13_1) l_0_13_4) ?x18904) (* (* 4.0 l_0_13_16) l_0_13_26))))
 (let ((?x18929 (- (- (+ (+ (- (- (- ?x18908 ?x18910) ?x18913) ?x18916) ?x18919) ?x18922) ?x18925) ?x18928)))
 (let ((?x18935 (- (- ?x18929 (* (* 2.0 l_0_13_64) l_0_13_71)) (* (* 2.0 l_0_13_65) l_0_13_72))))
 (let ((?x18945 (- (- (+ (- ?x18935 (* (* 2.0 l_0_13_66) l_0_13_73)) ?x18939) ?x18941) (* (* (/ 1.0 2.0) l_0_13_79) l_0_13_86))))
 (let ((?x18951 (- (- ?x18945 (* (* (/ 1.0 2.0) l_0_13_80) l_0_13_87)) (* (* (/ 1.0 2.0) l_0_13_81) l_0_13_88))))
 (= ?x18951 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18822 (* 2.0 l_0_13_76)))
 (let ((?x19041 (* ?x18822 l_0_13_82)))
 (let ((?x18927 (* 2.0 l_0_13_48)))
 (let ((?x19027 (* ?x18927 l_0_13_57)))
 (let ((?x19025 (* ?x18927 l_0_13_53)))
 (let ((?x18924 (* 2.0 l_0_13_47)))
 (let ((?x19023 (* ?x18924 l_0_13_56)))
 (let ((?x19021 (* ?x18924 l_0_13_52)))
 (let ((?x18921 (* 2.0 l_0_13_33)))
 (let ((?x19019 (* ?x18921 l_0_13_42)))
 (let ((?x19017 (* ?x18921 l_0_13_38)))
 (let ((?x18918 (* 2.0 l_0_13_32)))
 (let ((?x19015 (* ?x18918 l_0_13_41)))
 (let ((?x19013 (* ?x18918 l_0_13_37)))
 (let ((?x19010 (* 2.0 l_0_13_25)))
 (let ((?x19011 (* ?x19010 l_0_13_29)))
 (let ((?x19007 (* 2.0 l_0_13_24)))
 (let ((?x19008 (* ?x19007 l_0_13_28)))
 (let ((?x19004 (* 2.0 l_0_13_23)))
 (let ((?x19005 (* ?x19004 l_0_13_27)))
 (let ((?x19002 (* (* 2.0 l_0_13_22) l_0_13_26)))
 (let ((?x18608 (* 2.0 l_0_13_16)))
 (let ((?x18609 (* ?x18608 l_0_13_22)))
 (let ((?x19009 (- (- (- (+ (* (* (- 2.0) l_0_13_1) l_0_13_7) ?x18609) ?x19002) ?x19005) ?x19008)))
 (let ((?x19024 (+ (- (- (+ (- (+ (- ?x19009 ?x19011) ?x19013) ?x19015) ?x19017) ?x19019) ?x19021) ?x19023)))
 (let ((?x19034 (- (- (+ (- ?x19024 ?x19025) ?x19027) (* (* 2.0 l_0_13_67) l_0_13_71)) (* (* 2.0 l_0_13_68) l_0_13_72))))
 (let ((?x19040 (- (- ?x19034 (* (* 2.0 l_0_13_69) l_0_13_73)) (* (* 2.0 l_0_13_70) l_0_13_74))))
 (let ((?x19048 (- (- (+ ?x19040 ?x19041) (* (* (/ 1.0 2.0) l_0_13_82) l_0_13_86)) (* (* (/ 1.0 2.0) l_0_13_83) l_0_13_87))))
 (let ((?x19054 (- (- ?x19048 (* (* (/ 1.0 2.0) l_0_13_84) l_0_13_88)) (* (* (/ 1.0 2.0) l_0_13_85) l_0_13_89))))
 (= ?x19054 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18822 (* 2.0 l_0_13_76)))
 (let ((?x18941 (* ?x18822 l_0_13_86)))
 (let ((?x19133 (* l_0_13_75 l_0_13_75)))
 (let ((?x19131 (* l_0_13_74 l_0_13_74)))
 (let ((?x19129 (* l_0_13_73 l_0_13_73)))
 (let ((?x19127 (* l_0_13_72 l_0_13_72)))
 (let ((?x19125 (* l_0_13_71 l_0_13_71)))
 (let ((?x18927 (* 2.0 l_0_13_48)))
 (let ((?x19027 (* ?x18927 l_0_13_57)))
 (let ((?x18924 (* 2.0 l_0_13_47)))
 (let ((?x19023 (* ?x18924 l_0_13_56)))
 (let ((?x18921 (* 2.0 l_0_13_33)))
 (let ((?x19019 (* ?x18921 l_0_13_42)))
 (let ((?x18918 (* 2.0 l_0_13_32)))
 (let ((?x19015 (* ?x18918 l_0_13_41)))
 (let ((?x19119 (* l_0_13_30 l_0_13_30)))
 (let ((?x19117 (* l_0_13_29 l_0_13_29)))
 (let ((?x19115 (* l_0_13_28 l_0_13_28)))
 (let ((?x11761 (* l_0_13_27 l_0_13_27)))
 (let ((?x11757 (* l_0_13_26 l_0_13_26)))
 (let ((?x18608 (* 2.0 l_0_13_16)))
 (let ((?x18806 (* ?x18608 l_0_13_26)))
 (let ((?x19116 (- (- (- (+ (* (* (- 2.0) l_0_13_1) l_0_13_11) ?x18806) ?x11757) ?x11761) ?x19115)))
 (let ((?x19126 (- (- (- (+ (+ (- (- ?x19116 ?x19117) ?x19119) ?x19015) ?x19019) ?x19023) ?x19027) ?x19125)))
 (let ((?x19138 (- (+ (- (- (- (- ?x19126 ?x19127) ?x19129) ?x19131) ?x19133) ?x18941) (* (* (/ 1.0 4.0) l_0_13_86) l_0_13_86))))
 (let ((?x19144 (- (- ?x19138 (* (* (/ 1.0 4.0) l_0_13_87) l_0_13_87)) (* (* (/ 1.0 4.0) l_0_13_88) l_0_13_88))))
 (let ((?x19150 (- (- ?x19144 (* (* (/ 1.0 4.0) l_0_13_89) l_0_13_89)) (* (* (/ 1.0 4.0) l_0_13_90) l_0_13_90))))
 (= ?x19150 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x19206 (* l_0_13_78 l_0_13_78)))
 (let ((?x19204 (* l_0_13_77 l_0_13_77)))
 (let ((?x19196 (* l_0_13_3 l_0_13_3)))
 (let ((?x19194 (* l_0_13_2 l_0_13_2)))
 (let ((?x19192 (* l_0_13_18 l_0_13_18)))
 (let ((?x18614 (* 2.0 l_0_13_18)))
 (let ((?x18810 (* ?x18614 l_0_13_27)))
 (let ((?x19189 (* l_0_13_17 l_0_13_17)))
 (let ((?x18611 (* 2.0 l_0_13_17)))
 (let ((?x18808 (* ?x18611 l_0_13_26)))
 (let ((?x19175 (- (* (* (- 2.0) l_0_13_101) l_0_13_92) (* (* 2.0 l_0_13_102) l_0_13_93))))
 (let ((?x19181 (- (- ?x19175 (* (* 2.0 l_0_13_107) l_0_13_116)) (* (* 2.0 l_0_13_108) l_0_13_117))))
 (let ((?x19187 (- (- ?x19181 (* (* 2.0 l_0_13_122) l_0_13_131)) (* (* 2.0 l_0_13_123) l_0_13_132))))
 (let ((?x19200 (+ (- (- (+ (+ (+ (+ ?x19187 ?x18808) ?x19189) ?x18810) ?x19192) ?x19194) ?x19196) (* (* 8.0 l_0_13_62) l_0_13_71))))
 (= (+ (+ (+ ?x19200 (* (* 8.0 l_0_13_63) l_0_13_72)) ?x19204) ?x19206) 0.0))))))))))))))))
(assert
 (let ((?x18753 (* 2.0 l_0_13_78)))
 (let ((?x19274 (* ?x18753 l_0_13_87)))
 (let ((?x18754 (* ?x18753 l_0_13_80)))
 (let ((?x18750 (* 2.0 l_0_13_77)))
 (let ((?x19271 (* ?x18750 l_0_13_86)))
 (let ((?x18751 (* ?x18750 l_0_13_79)))
 (let ((?x18915 (* 2.0 l_0_13_21)))
 (let ((?x18916 (* ?x18915 l_0_13_28)))
 (let ((?x18912 (* 2.0 l_0_13_20)))
 (let ((?x18913 (* ?x18912 l_0_13_27)))
 (let ((?x18909 (* 2.0 l_0_13_19)))
 (let ((?x18910 (* ?x18909 l_0_13_26)))
 (let ((?x18614 (* 2.0 l_0_13_18)))
 (let ((?x19248 (* ?x18614 l_0_13_20)))
 (let ((?x18611 (* 2.0 l_0_13_17)))
 (let ((?x19244 (* ?x18611 l_0_13_19)))
 (let ((?x19222 (- (* (* (- 2.0) l_0_13_101) l_0_13_94) (* (* 2.0 l_0_13_102) l_0_13_95))))
 (let ((?x19228 (- (- ?x19222 (* (* 2.0 l_0_13_103) l_0_13_96)) (* (* 2.0 l_0_13_109) l_0_13_116))))
 (let ((?x19234 (- (- ?x19228 (* (* 2.0 l_0_13_110) l_0_13_117)) (* (* 2.0 l_0_13_111) l_0_13_118))))
 (let ((?x19240 (- (- ?x19234 (* (* 2.0 l_0_13_124) l_0_13_131)) (* (* 2.0 l_0_13_125) l_0_13_132))))
 (let ((?x19247 (- (+ (- ?x19240 (* (* 2.0 l_0_13_126) l_0_13_133)) ?x19244) (* (* 4.0 l_0_13_17) l_0_13_26))))
 (let ((?x19255 (- (+ (- (+ ?x19247 ?x19248) (* (* 4.0 l_0_13_18) l_0_13_27)) ?x18910) (* (* 2.0 l_0_13_2) l_0_13_4))))
 (let ((?x19263 (+ (- (+ (+ ?x19255 ?x18913) ?x18916) (* (* 2.0 l_0_13_3) l_0_13_5)) (* (* 8.0 l_0_13_64) l_0_13_71))))
 (let ((?x19269 (+ (+ ?x19263 (* (* 8.0 l_0_13_65) l_0_13_72)) (* (* 8.0 l_0_13_66) l_0_13_73))))
 (= (- (+ (- (+ ?x19269 ?x18751) ?x19271) ?x18754) ?x19274) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18753 (* 2.0 l_0_13_78)))
 (let ((?x19383 (* ?x18753 l_0_13_83)))
 (let ((?x18750 (* 2.0 l_0_13_77)))
 (let ((?x19381 (* ?x18750 l_0_13_82)))
 (let ((?x19010 (* 2.0 l_0_13_25)))
 (let ((?x19011 (* ?x19010 l_0_13_29)))
 (let ((?x19007 (* 2.0 l_0_13_24)))
 (let ((?x19008 (* ?x19007 l_0_13_28)))
 (let ((?x19004 (* 2.0 l_0_13_23)))
 (let ((?x19005 (* ?x19004 l_0_13_27)))
 (let ((?x19002 (* (* 2.0 l_0_13_22) l_0_13_26)))
 (let ((?x18614 (* 2.0 l_0_13_18)))
 (let ((?x18615 (* ?x18614 l_0_13_23)))
 (let ((?x18611 (* 2.0 l_0_13_17)))
 (let ((?x18612 (* ?x18611 l_0_13_22)))
 (let ((?x19330 (- (* (* (- 2.0) l_0_13_100) l_0_13_104) (* (* 2.0 l_0_13_101) l_0_13_97))))
 (let ((?x19334 (- (- ?x19330 (* (* 2.0 l_0_13_102) l_0_13_98)) (* (* 2.0 l_0_13_103) l_0_13_99))))
 (let ((?x19340 (- (- ?x19334 (* (* 2.0 l_0_13_112) l_0_13_116)) (* (* 2.0 l_0_13_113) l_0_13_117))))
 (let ((?x19346 (- (- ?x19340 (* (* 2.0 l_0_13_114) l_0_13_118)) (* (* 2.0 l_0_13_115) l_0_13_119))))
 (let ((?x19352 (- (- ?x19346 (* (* 2.0 l_0_13_127) l_0_13_131)) (* (* 2.0 l_0_13_128) l_0_13_132))))
 (let ((?x19358 (- (- ?x19352 (* (* 2.0 l_0_13_129) l_0_13_133)) (* (* 2.0 l_0_13_130) l_0_13_134))))
 (let ((?x19363 (+ (- (+ (+ ?x19358 ?x18612) ?x18615) (* (* 2.0 l_0_13_2) l_0_13_7)) ?x19002)))
 (let ((?x19368 (- (+ (+ (+ ?x19363 ?x19005) ?x19008) ?x19011) (* (* 2.0 l_0_13_3) l_0_13_8))))
 (let ((?x19374 (+ (+ ?x19368 (* (* 8.0 l_0_13_67) l_0_13_71)) (* (* 8.0 l_0_13_68) l_0_13_72))))
 (let ((?x19380 (+ (+ ?x19374 (* (* 8.0 l_0_13_69) l_0_13_73)) (* (* 8.0 l_0_13_70) l_0_13_74))))
 (= (+ (+ ?x19380 ?x19381) ?x19383) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x18753 (* 2.0 l_0_13_78)))
 (let ((?x19274 (* ?x18753 l_0_13_87)))
 (let ((?x18750 (* 2.0 l_0_13_77)))
 (let ((?x19271 (* ?x18750 l_0_13_86)))
 (let ((?x19133 (* l_0_13_75 l_0_13_75)))
 (let ((?x19455 (* 4.0 ?x19133)))
 (let ((?x19131 (* l_0_13_74 l_0_13_74)))
 (let ((?x19453 (* 4.0 ?x19131)))
 (let ((?x19129 (* l_0_13_73 l_0_13_73)))
 (let ((?x19451 (* 4.0 ?x19129)))
 (let ((?x19127 (* l_0_13_72 l_0_13_72)))
 (let ((?x19449 (* 4.0 ?x19127)))
 (let ((?x19125 (* l_0_13_71 l_0_13_71)))
 (let ((?x19447 (* 4.0 ?x19125)))
 (let ((?x18614 (* 2.0 l_0_13_18)))
 (let ((?x18810 (* ?x18614 l_0_13_27)))
 (let ((?x18611 (* 2.0 l_0_13_17)))
 (let ((?x18808 (* ?x18611 l_0_13_26)))
 (let ((?x19433 (* l_0_13_135 l_0_13_135)))
 (let ((?x19431 (* l_0_13_134 l_0_13_134)))
 (let ((?x19429 (* l_0_13_133 l_0_13_133)))
 (let ((?x19427 (* l_0_13_132 l_0_13_132)))
 (let ((?x19425 (* l_0_13_131 l_0_13_131)))
 (let ((?x19423 (* l_0_13_120 l_0_13_120)))
 (let ((?x19418 (* l_0_13_119 l_0_13_119)))
 (let ((?x19416 (* l_0_13_118 l_0_13_118)))
 (let ((?x19414 (* l_0_13_117 l_0_13_117)))
 (let ((?x19412 (* l_0_13_116 l_0_13_116)))
 (let ((?x12393 (* l_0_13_105 l_0_13_105)))
 (let ((?x12394 (* l_0_13_104 l_0_13_104)))
 (let ((?x12392 (* l_0_13_103 l_0_13_103)))
 (let ((?x12385 (- (- (* (- l_0_13_101) l_0_13_101) (* l_0_13_102 l_0_13_102)) ?x12392)))
 (let ((?x19413 (- (- (- (- ?x12385 ?x12394) ?x12393) (* (* 2.0 l_0_13_11) l_0_13_2)) ?x19412)))
 (let ((?x19422 (- (- (- (- ?x19413 ?x19414) ?x19416) ?x19418) (* (* 2.0 l_0_13_12) l_0_13_3))))
 (let ((?x19435 (+ (- (- (- (- (- (- ?x19422 ?x19423) ?x19425) ?x19427) ?x19429) ?x19431) ?x19433) ?x18808)))
 (let ((?x19440 (+ (+ (+ ?x19435 ?x18810) (* 1.0 (* l_0_13_26 l_0_13_26))) (* 1.0 (* l_0_13_27 l_0_13_27)))))
 (let ((?x19444 (+ (+ ?x19440 (* 1.0 (* l_0_13_28 l_0_13_28))) (* 1.0 (* l_0_13_29 l_0_13_29)))))
 (let ((?x19452 (+ (+ (+ (+ ?x19444 (* 1.0 (* l_0_13_30 l_0_13_30))) ?x19447) ?x19449) ?x19451)))
 (= (+ (+ (+ (+ ?x19452 ?x19453) ?x19455) ?x19271) ?x19274) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19515 (* l_0_13_81 l_0_13_81)))
 (let ((?x19512 (* 2.0 l_0_13_81)))
 (let ((?x19513 (* ?x19512 l_0_13_88)))
 (let ((?x19510 (* l_0_13_80 l_0_13_80)))
 (let ((?x19507 (* 2.0 l_0_13_80)))
 (let ((?x19508 (* ?x19507 l_0_13_87)))
 (let ((?x19505 (* l_0_13_79 l_0_13_79)))
 (let ((?x19502 (* 2.0 l_0_13_79)))
 (let ((?x19503 (* ?x19502 l_0_13_86)))
 (let ((?x19500 (* l_0_13_6 l_0_13_6)))
 (let ((?x19498 (* l_0_13_5 l_0_13_5)))
 (let ((?x18927 (* 2.0 l_0_13_48)))
 (let ((?x19027 (* ?x18927 l_0_13_57)))
 (let ((?x18924 (* 2.0 l_0_13_47)))
 (let ((?x19023 (* ?x18924 l_0_13_56)))
 (let ((?x19494 (* l_0_13_4 l_0_13_4)))
 (let ((?x18921 (* 2.0 l_0_13_33)))
 (let ((?x19019 (* ?x18921 l_0_13_42)))
 (let ((?x18918 (* 2.0 l_0_13_32)))
 (let ((?x19015 (* ?x18918 l_0_13_41)))
 (let ((?x18734 (* l_0_13_21 l_0_13_21)))
 (let ((?x18731 (* l_0_13_20 l_0_13_20)))
 (let ((?x12345 (- (+ (* (* (- 4.0) l_0_13_19) l_0_13_26) (* l_0_13_19 l_0_13_19)) (* (* 4.0 l_0_13_20) l_0_13_27))))
 (let ((?x19492 (+ (+ (- (+ ?x12345 ?x18731) (* (* 4.0 l_0_13_21) l_0_13_28)) ?x18734) ?x19015)))
 (let ((?x19504 (- (- (- (- (- (- (+ ?x19492 ?x19019) ?x19494) ?x19023) ?x19027) ?x19498) ?x19500) ?x19503)))
 (= (+ (- (+ (- (+ ?x19504 ?x19505) ?x19508) ?x19510) ?x19513) ?x19515) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x19602 (* (* 2.0 l_0_13_85) l_0_13_89)))
 (let ((?x19599 (* (* 2.0 l_0_13_84) l_0_13_88)))
 (let ((?x19596 (* (* 2.0 l_0_13_83) l_0_13_87)))
 (let ((?x19593 (* (* 2.0 l_0_13_82) l_0_13_86)))
 (let ((?x19512 (* 2.0 l_0_13_81)))
 (let ((?x19590 (* ?x19512 l_0_13_84)))
 (let ((?x19507 (* 2.0 l_0_13_80)))
 (let ((?x19588 (* ?x19507 l_0_13_83)))
 (let ((?x19502 (* 2.0 l_0_13_79)))
 (let ((?x19586 (* ?x19502 l_0_13_82)))
 (let ((?x18915 (* 2.0 l_0_13_21)))
 (let ((?x19563 (* ?x18915 l_0_13_24)))
 (let ((?x18912 (* 2.0 l_0_13_20)))
 (let ((?x19561 (* ?x18912 l_0_13_23)))
 (let ((?x18909 (* 2.0 l_0_13_19)))
 (let ((?x12636 (* ?x18909 l_0_13_22)))
 (let ((?x19570 (- (- (+ (+ ?x12636 ?x19561) ?x19563) (* (* 4.0 l_0_13_22) l_0_13_26)) (* (* 4.0 l_0_13_23) l_0_13_27))))
 (let ((?x19576 (- (- ?x19570 (* (* 4.0 l_0_13_24) l_0_13_28)) (* (* 4.0 l_0_13_25) l_0_13_29))))
 (let ((?x19582 (- (- ?x19576 (* (* 2.0 l_0_13_4) l_0_13_7)) (* (* 2.0 l_0_13_5) l_0_13_8))))
 (let ((?x19591 (+ (+ (+ (- ?x19582 (* (* 2.0 l_0_13_6) l_0_13_9)) ?x19586) ?x19588) ?x19590)))
 (= (- (- (- (- ?x19591 ?x19593) ?x19596) ?x19599) ?x19602) 0.0))))))))))))))))))))))
(assert
 (let ((?x11982 (* l_0_13_90 l_0_13_90)))
 (let ((?x11974 (* l_0_13_89 l_0_13_89)))
 (let ((?x11939 (* l_0_13_88 l_0_13_88)))
 (let ((?x11927 (* l_0_13_87 l_0_13_87)))
 (let ((?x11889 (* l_0_13_86 l_0_13_86)))
 (let ((?x19512 (* 2.0 l_0_13_81)))
 (let ((?x19513 (* ?x19512 l_0_13_88)))
 (let ((?x19507 (* 2.0 l_0_13_80)))
 (let ((?x19508 (* ?x19507 l_0_13_87)))
 (let ((?x19502 (* 2.0 l_0_13_79)))
 (let ((?x19503 (* ?x19502 l_0_13_86)))
 (let ((?x18915 (* 2.0 l_0_13_21)))
 (let ((?x18916 (* ?x18915 l_0_13_28)))
 (let ((?x18912 (* 2.0 l_0_13_20)))
 (let ((?x18913 (* ?x18912 l_0_13_27)))
 (let ((?x18909 (* 2.0 l_0_13_19)))
 (let ((?x18910 (* ?x18909 l_0_13_26)))
 (let ((?x19662 (- (* (* (- 2.0) l_0_13_11) l_0_13_4) (* (* 2.0 l_0_13_12) l_0_13_5))))
 (let ((?x19668 (+ (+ (+ (- ?x19662 (* (* 2.0 l_0_13_13) l_0_13_6)) ?x18910) ?x18913) ?x18916)))
 (let ((?x19674 (- (- ?x19668 (* (* 2.0 l_0_13_26) l_0_13_26)) (* (* 2.0 l_0_13_27) l_0_13_27))))
 (let ((?x19680 (- (- ?x19674 (* (* 2.0 l_0_13_28) l_0_13_28)) (* (* 2.0 l_0_13_29) l_0_13_29))))
 (let ((?x19686 (+ (+ (+ (- ?x19680 (* (* 2.0 l_0_13_30) l_0_13_30)) ?x19503) ?x19508) ?x19513)))
 (= (- (- (- (- (- ?x19686 ?x11889) ?x11927) ?x11939) ?x11974) ?x11982) 0.0))))))))))))))))))))))))
(assert
 (let ((?x19735 (* l_0_13_9 l_0_13_9)))
 (let ((?x19733 (* l_0_13_85 l_0_13_85)))
 (let ((?x19731 (* l_0_13_84 l_0_13_84)))
 (let ((?x19729 (* l_0_13_83 l_0_13_83)))
 (let ((?x12849 (* l_0_13_82 l_0_13_82)))
 (let ((?x12830 (* l_0_13_8 l_0_13_8)))
 (let ((?x12795 (* l_0_13_7 l_0_13_7)))
 (let ((?x12847 (* l_0_13_25 l_0_13_25)))
 (let ((?x12817 (* l_0_13_24 l_0_13_24)))
 (let ((?x12811 (* l_0_13_23 l_0_13_23)))
 (let ((?x12814 (+ (+ (* (- l_0_13_10) l_0_13_10) (* l_0_13_22 l_0_13_22)) ?x12811)))
 (let ((?x19732 (+ (+ (+ (- (- (+ (+ ?x12814 ?x12817) ?x12847) ?x12795) ?x12830) ?x12849) ?x19729) ?x19731)))
 (= (- (+ ?x19732 ?x19733) ?x19735) 0.0))))))))))))))
(assert
 (let ((?x19602 (* (* 2.0 l_0_13_85) l_0_13_89)))
 (let ((?x19599 (* (* 2.0 l_0_13_84) l_0_13_88)))
 (let ((?x19596 (* (* 2.0 l_0_13_83) l_0_13_87)))
 (let ((?x19593 (* (* 2.0 l_0_13_82) l_0_13_86)))
 (let ((?x19010 (* 2.0 l_0_13_25)))
 (let ((?x19011 (* ?x19010 l_0_13_29)))
 (let ((?x19007 (* 2.0 l_0_13_24)))
 (let ((?x19008 (* ?x19007 l_0_13_28)))
 (let ((?x19004 (* 2.0 l_0_13_23)))
 (let ((?x19005 (* ?x19004 l_0_13_27)))
 (let ((?x19002 (* (* 2.0 l_0_13_22) l_0_13_26)))
 (let ((?x19763 (- (* (* (- 2.0) l_0_13_10) l_0_13_14) (* (* 2.0 l_0_13_11) l_0_13_7))))
 (let ((?x19767 (- (- ?x19763 (* (* 2.0 l_0_13_12) l_0_13_8)) (* (* 2.0 l_0_13_13) l_0_13_9))))
 (let ((?x19774 (+ (+ (+ (+ (+ (+ (+ ?x19767 ?x19002) ?x19005) ?x19008) ?x19011) ?x19593) ?x19596) ?x19599)))
 (= (+ ?x19774 ?x19602) 0.0))))))))))))))))
(assert
 (let ((?x11982 (* l_0_13_90 l_0_13_90)))
 (let ((?x11974 (* l_0_13_89 l_0_13_89)))
 (let ((?x11939 (* l_0_13_88 l_0_13_88)))
 (let ((?x11927 (* l_0_13_87 l_0_13_87)))
 (let ((?x11889 (* l_0_13_86 l_0_13_86)))
 (let ((?x19119 (* l_0_13_30 l_0_13_30)))
 (let ((?x19117 (* l_0_13_29 l_0_13_29)))
 (let ((?x19115 (* l_0_13_28 l_0_13_28)))
 (let ((?x11761 (* l_0_13_27 l_0_13_27)))
 (let ((?x11757 (* l_0_13_26 l_0_13_26)))
 (let ((?x19793 (* l_0_13_15 l_0_13_15)))
 (let ((?x19791 (* l_0_13_14 l_0_13_14)))
 (let ((?x19789 (* l_0_13_13 l_0_13_13)))
 (let ((?x19790 (- (- (* (- l_0_13_11) l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x19789)))
 (let ((?x19799 (+ (+ (+ (+ (+ (- (- ?x19790 ?x19791) ?x19793) ?x11757) ?x11761) ?x19115) ?x19117) ?x19119)))
 (= (+ (+ (+ (+ (+ ?x19799 ?x11889) ?x11927) ?x11939) ?x11974) ?x11982) 0.0)))))))))))))))))
(assert
 (let ((?x18882 (* l_0_13_76 l_0_13_76)))
 (let ((?x19818 (- (* (* (- 2.0) l_0_13_16) l_0_13_19) (* (* 2.0 l_0_13_16) l_0_13_16))))
 (let ((?x19822 (- (- ?x19818 (* (* 2.0 l_0_13_61) l_0_13_64)) (* (* (/ 1.0 2.0) l_0_13_76) l_0_13_79))))
 (= (- ?x19822 ?x18882) 0.0)))))
(assert
 (let ((?x18822 (* 2.0 l_0_13_76)))
 (let ((?x18823 (* ?x18822 l_0_13_77)))
 (let ((?x18614 (* 2.0 l_0_13_18)))
 (let ((?x19248 (* ?x18614 l_0_13_20)))
 (let ((?x18611 (* 2.0 l_0_13_17)))
 (let ((?x19244 (* ?x18611 l_0_13_19)))
 (let ((?x18608 (* 2.0 l_0_13_16)))
 (let ((?x18904 (* ?x18608 l_0_13_19)))
 (let ((?x13016 (- (* (* (- 2.0) l_0_13_106) l_0_13_109) (* (* 2.0 l_0_13_121) l_0_13_124))))
 (let ((?x13011 (- (- (+ (- ?x13016 (* (* 4.0 l_0_13_16) l_0_13_17)) ?x18904) ?x19244) ?x19248)))
 (let ((?x12919 (- (+ ?x13011 (* (* 8.0 l_0_13_61) l_0_13_64)) (* (* 2.0 l_0_13_62) l_0_13_64))))
 (let ((?x12964 (- (- (- ?x12919 (* (* 2.0 l_0_13_63) l_0_13_65)) ?x18823) (* (* (/ 1.0 2.0) l_0_13_77) l_0_13_79))))
 (let ((?x12963 (- (- ?x12964 (* (* (/ 1.0 2.0) l_0_13_78) l_0_13_80)) (* (* 2.0 l_0_13_91) l_0_13_94))))
 (= ?x12963 0.0)))))))))))))))
(assert
 (let ((?x18822 (* 2.0 l_0_13_76)))
 (let ((?x18939 (* ?x18822 l_0_13_79)))
 (let ((?x18747 (* l_0_13_66 l_0_13_66)))
 (let ((?x18744 (* l_0_13_65 l_0_13_65)))
 (let ((?x18741 (* l_0_13_64 l_0_13_64)))
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x18874 (* ?x18873 l_0_13_47)))
 (let ((?x18870 (* 2.0 l_0_13_31)))
 (let ((?x18871 (* ?x18870 l_0_13_32)))
 (let ((?x18734 (* l_0_13_21 l_0_13_21)))
 (let ((?x18731 (* l_0_13_20 l_0_13_20)))
 (let ((?x19864 (- (- (* (* (- 4.0) l_0_13_16) l_0_13_19) (* l_0_13_19 l_0_13_19)) ?x18731)))
 (let ((?x19871 (- (- (- (- (- (+ (- ?x19864 ?x18734) ?x18871) ?x18874) ?x18741) ?x18744) ?x18747) ?x18939)))
 (let ((?x19877 (- (- ?x19871 (* (* (/ 1.0 4.0) l_0_13_79) l_0_13_79)) (* (* (/ 1.0 4.0) l_0_13_80) l_0_13_80))))
 (= (- ?x19877 (* (* (/ 1.0 4.0) l_0_13_81) l_0_13_81)) 0.0))))))))))))))))
(assert
 (let ((?x18822 (* 2.0 l_0_13_76)))
 (let ((?x19041 (* ?x18822 l_0_13_82)))
 (let ((?x18927 (* 2.0 l_0_13_48)))
 (let ((?x18928 (* ?x18927 l_0_13_50)))
 (let ((?x18924 (* 2.0 l_0_13_47)))
 (let ((?x18925 (* ?x18924 l_0_13_49)))
 (let ((?x18921 (* 2.0 l_0_13_33)))
 (let ((?x18922 (* ?x18921 l_0_13_35)))
 (let ((?x18918 (* 2.0 l_0_13_32)))
 (let ((?x18919 (* ?x18918 l_0_13_34)))
 (let ((?x18915 (* 2.0 l_0_13_21)))
 (let ((?x19563 (* ?x18915 l_0_13_24)))
 (let ((?x18912 (* 2.0 l_0_13_20)))
 (let ((?x19561 (* ?x18912 l_0_13_23)))
 (let ((?x18909 (* 2.0 l_0_13_19)))
 (let ((?x12636 (* ?x18909 l_0_13_22)))
 (let ((?x13067 (- (- (- (- (* (* (- 4.0) l_0_13_16) l_0_13_22) ?x12636) ?x19561) ?x19563) ?x18919)))
 (let ((?x19887 (- (+ (+ (- ?x13067 ?x18922) ?x18925) ?x18928) (* (* 2.0 l_0_13_64) l_0_13_67))))
 (let ((?x19891 (- (- ?x19887 (* (* 2.0 l_0_13_65) l_0_13_68)) (* (* 2.0 l_0_13_66) l_0_13_69))))
 (let ((?x19896 (- (- (- ?x19891 ?x19041) (* (* (/ 1.0 2.0) l_0_13_79) l_0_13_82)) (* (* (/ 1.0 2.0) l_0_13_80) l_0_13_83))))
 (= (- ?x19896 (* (* (/ 1.0 2.0) l_0_13_81) l_0_13_84)) 0.0))))))))))))))))))))))
(assert
 (let ((?x19206 (* l_0_13_78 l_0_13_78)))
 (let ((?x19204 (* l_0_13_77 l_0_13_77)))
 (let ((?x18614 (* 2.0 l_0_13_18)))
 (let ((?x19248 (* ?x18614 l_0_13_20)))
 (let ((?x18611 (* 2.0 l_0_13_17)))
 (let ((?x19244 (* ?x18611 l_0_13_19)))
 (let ((?x2204 (- (* (* (- 2.0) l_0_13_107) l_0_13_109) (* (* 2.0 l_0_13_108) l_0_13_110))))
 (let ((?x2062 (- (- ?x2204 (* (* 2.0 l_0_13_122) l_0_13_124)) (* (* 2.0 l_0_13_123) l_0_13_125))))
 (let ((?x13117 (- (+ (- (+ ?x2062 ?x19244) (* ?x18611 l_0_13_17)) ?x19248) (* ?x18614 l_0_13_18))))
 (let ((?x13127 (+ (+ ?x13117 (* (* 8.0 l_0_13_62) l_0_13_64)) (* (* 8.0 l_0_13_63) l_0_13_65))))
 (let ((?x19904 (- (- (- (- ?x13127 ?x19204) ?x19206) (* (* 2.0 l_0_13_92) l_0_13_94)) (* (* 2.0 l_0_13_93) l_0_13_95))))
 (= ?x19904 0.0)))))))))))))
(assert
 (let ((?x18753 (* 2.0 l_0_13_78)))
 (let ((?x19383 (* ?x18753 l_0_13_83)))
 (let ((?x18750 (* 2.0 l_0_13_77)))
 (let ((?x19381 (* ?x18750 l_0_13_82)))
 (let ((?x18915 (* 2.0 l_0_13_21)))
 (let ((?x19563 (* ?x18915 l_0_13_24)))
 (let ((?x18912 (* 2.0 l_0_13_20)))
 (let ((?x19561 (* ?x18912 l_0_13_23)))
 (let ((?x18909 (* 2.0 l_0_13_19)))
 (let ((?x12636 (* ?x18909 l_0_13_22)))
 (let ((?x13334 (- (* (* (- 2.0) l_0_13_109) l_0_13_112) (* (* 2.0 l_0_13_110) l_0_13_113))))
 (let ((?x13332 (- (- ?x13334 (* (* 2.0 l_0_13_111) l_0_13_114)) (* (* 2.0 l_0_13_124) l_0_13_127))))
 (let ((?x2356 (- (- ?x13332 (* (* 2.0 l_0_13_125) l_0_13_128)) (* (* 2.0 l_0_13_126) l_0_13_129))))
 (let ((?x19931 (- (- ?x2356 (* (* 4.0 l_0_13_17) l_0_13_22)) (* (* 4.0 l_0_13_18) l_0_13_23))))
 (let ((?x19936 (+ (+ (+ (+ ?x19931 ?x12636) ?x19561) ?x19563) (* (* 8.0 l_0_13_64) l_0_13_67))))
 (let ((?x19940 (+ (+ ?x19936 (* (* 8.0 l_0_13_65) l_0_13_68)) (* (* 8.0 l_0_13_66) l_0_13_69))))
 (let ((?x19948 (- (- (- (- ?x19940 ?x19381) ?x19383) (* (* 2.0 l_0_13_94) l_0_13_97)) (* (* 2.0 l_0_13_95) l_0_13_98))))
 (= (- ?x19948 (* (* 2.0 l_0_13_96) l_0_13_99)) 0.0)))))))))))))))))))
(assert
 (let ((?x19515 (* l_0_13_81 l_0_13_81)))
 (let ((?x19510 (* l_0_13_80 l_0_13_80)))
 (let ((?x19505 (* l_0_13_79 l_0_13_79)))
 (let ((?x18927 (* 2.0 l_0_13_48)))
 (let ((?x18928 (* ?x18927 l_0_13_50)))
 (let ((?x18924 (* 2.0 l_0_13_47)))
 (let ((?x18925 (* ?x18924 l_0_13_49)))
 (let ((?x18921 (* 2.0 l_0_13_33)))
 (let ((?x18922 (* ?x18921 l_0_13_35)))
 (let ((?x18918 (* 2.0 l_0_13_32)))
 (let ((?x18919 (* ?x18918 l_0_13_34)))
 (let ((?x19986 (- (* (* (- 2.0) l_0_13_19) l_0_13_19) (* (* 2.0 l_0_13_20) l_0_13_20))))
 (let ((?x19991 (- (+ (+ (- ?x19986 (* (* 2.0 l_0_13_21) l_0_13_21)) ?x18919) ?x18922) ?x18925)))
 (= (- (- (- (- ?x19991 ?x18928) ?x19505) ?x19510) ?x19515) 0.0)))))))))))))))
(assert
 (let ((?x19512 (* 2.0 l_0_13_81)))
 (let ((?x19590 (* ?x19512 l_0_13_84)))
 (let ((?x19507 (* 2.0 l_0_13_80)))
 (let ((?x19588 (* ?x19507 l_0_13_83)))
 (let ((?x19502 (* 2.0 l_0_13_79)))
 (let ((?x19586 (* ?x19502 l_0_13_82)))
 (let ((?x18927 (* 2.0 l_0_13_48)))
 (let ((?x19025 (* ?x18927 l_0_13_53)))
 (let ((?x18924 (* 2.0 l_0_13_47)))
 (let ((?x19021 (* ?x18924 l_0_13_52)))
 (let ((?x18921 (* 2.0 l_0_13_33)))
 (let ((?x19017 (* ?x18921 l_0_13_38)))
 (let ((?x18918 (* 2.0 l_0_13_32)))
 (let ((?x19013 (* ?x18918 l_0_13_37)))
 (let ((?x20014 (- (* (* (- 4.0) l_0_13_19) l_0_13_22) (* (* 4.0 l_0_13_20) l_0_13_23))))
 (let ((?x20019 (- (+ (+ (- ?x20014 (* (* 4.0 l_0_13_21) l_0_13_24)) ?x19013) ?x19017) ?x19021)))
 (= (- (- (- (- ?x20019 ?x19025) ?x19586) ?x19588) ?x19590) 0.0))))))))))))))))))
(assert
 (let ((?x19733 (* l_0_13_85 l_0_13_85)))
 (let ((?x19731 (* l_0_13_84 l_0_13_84)))
 (let ((?x19729 (* l_0_13_83 l_0_13_83)))
 (let ((?x12849 (* l_0_13_82 l_0_13_82)))
 (let ((?x20032 (- (* (* (- 2.0) l_0_13_22) l_0_13_22) (* (* 2.0 l_0_13_23) l_0_13_23))))
 (let ((?x20036 (- (- ?x20032 (* (* 2.0 l_0_13_24) l_0_13_24)) (* (* 2.0 l_0_13_25) l_0_13_25))))
 (= (- (- (- (- ?x20036 ?x12849) ?x19729) ?x19731) ?x19733) 0.0))))))))
(assert
 (let ((?x20050 (- (- (* (- l_0_13_16) l_0_13_16) (* l_0_13_61 l_0_13_61)) (* (* (/ 1.0 4.0) l_0_13_76) l_0_13_76))))
 (= ?x20050 0.0)))
(assert
 (let ((?x20068 (* l_0_13_91 l_0_13_91)))
 (let ((?x2605 (* l_0_13_61 l_0_13_61)))
 (let ((?x20064 (* 4.0 ?x2605)))
 (let ((?x18608 (* 2.0 l_0_13_16)))
 (let ((?x18804 (* ?x18608 l_0_13_17)))
 (let ((?x20059 (- (- (* (- l_0_13_106) l_0_13_106) (* l_0_13_121 l_0_13_121)) ?x18804)))
 (let ((?x20063 (- (+ ?x20059 (* 1.0 (* l_0_13_16 l_0_13_16))) (* (* 2.0 l_0_13_61) l_0_13_62))))
 (= (- (- (+ ?x20063 ?x20064) (* (* (/ 1.0 2.0) l_0_13_76) l_0_13_77)) ?x20068) 0.0)))))))))
(assert
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x18874 (* ?x18873 l_0_13_47)))
 (let ((?x18870 (* 2.0 l_0_13_31)))
 (let ((?x18871 (* ?x18870 l_0_13_32)))
 (let ((?x20092 (- (+ (- (* (* (- 2.0) l_0_13_16) l_0_13_22) ?x18871) ?x18874) (* (* 2.0 l_0_13_61) l_0_13_67))))
 (= (- ?x20092 (* (* (/ 1.0 2.0) l_0_13_76) l_0_13_82)) 0.0)))))))
(assert
 (let ((?x13535 (* l_0_13_63 l_0_13_63)))
 (let ((?x13558 (* l_0_13_62 l_0_13_62)))
 (let ((?x19192 (* l_0_13_18 l_0_13_18)))
 (let ((?x19189 (* l_0_13_17 l_0_13_17)))
 (let ((?x18608 (* 2.0 l_0_13_16)))
 (let ((?x18804 (* ?x18608 l_0_13_17)))
 (let ((?x13551 (- (* (* (- 2.0) l_0_13_106) l_0_13_107) (* (* 2.0 l_0_13_121) l_0_13_122))))
 (let ((?x13555 (+ (- (- (+ ?x13551 ?x18804) ?x19189) ?x19192) (* (* 8.0 l_0_13_61) l_0_13_62))))
 (let ((?x20102 (- (- (- (- ?x13555 ?x13558) ?x13535) (* (* (/ 1.0 4.0) l_0_13_77) l_0_13_77)) (* (* (/ 1.0 4.0) l_0_13_78) l_0_13_78))))
 (= (- ?x20102 (* (* 2.0 l_0_13_91) l_0_13_92)) 0.0)))))))))))
(assert
 (let ((?x20150 (* l_0_13_70 l_0_13_70)))
 (let ((?x20148 (* l_0_13_69 l_0_13_69)))
 (let ((?x20146 (* l_0_13_68 l_0_13_68)))
 (let ((?x20144 (* l_0_13_67 l_0_13_67)))
 (let ((?x18927 (* 2.0 l_0_13_48)))
 (let ((?x19025 (* ?x18927 l_0_13_53)))
 (let ((?x18924 (* 2.0 l_0_13_47)))
 (let ((?x19021 (* ?x18924 l_0_13_52)))
 (let ((?x18921 (* 2.0 l_0_13_33)))
 (let ((?x19017 (* ?x18921 l_0_13_38)))
 (let ((?x18918 (* 2.0 l_0_13_32)))
 (let ((?x19013 (* ?x18918 l_0_13_37)))
 (let ((?x12847 (* l_0_13_25 l_0_13_25)))
 (let ((?x12817 (* l_0_13_24 l_0_13_24)))
 (let ((?x20138 (- (- (* (- l_0_13_22) l_0_13_22) (* l_0_13_23 l_0_13_23)) ?x12817)))
 (let ((?x20147 (- (- (+ (+ (- (- (- ?x20138 ?x12847) ?x19013) ?x19017) ?x19021) ?x19025) ?x20144) ?x20146)))
 (let ((?x20157 (- (- (- (- ?x20147 ?x20148) ?x20150) (* (* (/ 1.0 4.0) l_0_13_82) l_0_13_82)) (* (* (/ 1.0 4.0) l_0_13_83) l_0_13_83))))
 (let ((?x20163 (- (- ?x20157 (* (* (/ 1.0 4.0) l_0_13_84) l_0_13_84)) (* (* (/ 1.0 4.0) l_0_13_85) l_0_13_85))))
 (= ?x20163 0.0))))))))))))))))))))
(assert
 (let ((?x20206 (* l_0_13_93 l_0_13_93)))
 (let ((?x20204 (* l_0_13_92 l_0_13_92)))
 (let ((?x13535 (* l_0_13_63 l_0_13_63)))
 (let ((?x20202 (* 4.0 ?x13535)))
 (let ((?x13558 (* l_0_13_62 l_0_13_62)))
 (let ((?x20200 (* 4.0 ?x13558)))
 (let ((?x20194 (* l_0_13_123 l_0_13_123)))
 (let ((?x20192 (* l_0_13_122 l_0_13_122)))
 (let ((?x20193 (- (- (* (- l_0_13_107) l_0_13_107) (* l_0_13_108 l_0_13_108)) ?x20192)))
 (let ((?x20199 (+ (+ (- ?x20193 ?x20194) (* 1.0 (* l_0_13_17 l_0_13_17))) (* 1.0 (* l_0_13_18 l_0_13_18)))))
 (= (- (- (+ (+ ?x20199 ?x20200) ?x20202) ?x20204) ?x20206) 0.0))))))))))))
(assert
 (let ((?x18614 (* 2.0 l_0_13_18)))
 (let ((?x18615 (* ?x18614 l_0_13_23)))
 (let ((?x18611 (* 2.0 l_0_13_17)))
 (let ((?x18612 (* ?x18611 l_0_13_22)))
 (let ((?x20219 (- (* (* (- 2.0) l_0_13_107) l_0_13_112) (* (* 2.0 l_0_13_108) l_0_13_113))))
 (let ((?x20223 (- (- ?x20219 (* (* 2.0 l_0_13_122) l_0_13_127)) (* (* 2.0 l_0_13_123) l_0_13_128))))
 (let ((?x20229 (+ (+ (+ (+ ?x20223 ?x18612) ?x18615) (* (* 8.0 l_0_13_62) l_0_13_67)) (* (* 8.0 l_0_13_63) l_0_13_68))))
 (let ((?x20233 (- (- ?x20229 (* (* 2.0 l_0_13_92) l_0_13_97)) (* (* 2.0 l_0_13_93) l_0_13_98))))
 (= ?x20233 0.0))))))))))
(assert
 (let ((?x20300 (* l_0_13_99 l_0_13_99)))
 (let ((?x20298 (* l_0_13_98 l_0_13_98)))
 (let ((?x20296 (* l_0_13_97 l_0_13_97)))
 (let ((?x20278 (* l_0_13_130 l_0_13_130)))
 (let ((?x20276 (* l_0_13_129 l_0_13_129)))
 (let ((?x20274 (* l_0_13_128 l_0_13_128)))
 (let ((?x20272 (* l_0_13_127 l_0_13_127)))
 (let ((?x20270 (* l_0_13_115 l_0_13_115)))
 (let ((?x20268 (* l_0_13_114 l_0_13_114)))
 (let ((?x20266 (* l_0_13_113 l_0_13_113)))
 (let ((?x20267 (- (- (* (- l_0_13_100) l_0_13_100) (* l_0_13_112 l_0_13_112)) ?x20266)))
 (let ((?x20281 (+ (- (- (- (- (- (- ?x20267 ?x20268) ?x20270) ?x20272) ?x20274) ?x20276) ?x20278) (* 1.0 (* l_0_13_22 l_0_13_22)))))
 (let ((?x20285 (+ (+ ?x20281 (* 1.0 (* l_0_13_23 l_0_13_23))) (* 1.0 (* l_0_13_24 l_0_13_24)))))
 (let ((?x20289 (+ (+ ?x20285 (* 1.0 (* l_0_13_25 l_0_13_25))) (* 4.0 (* l_0_13_67 l_0_13_67)))))
 (let ((?x20293 (+ (+ ?x20289 (* 4.0 (* l_0_13_68 l_0_13_68))) (* 4.0 (* l_0_13_69 l_0_13_69)))))
 (let ((?x20301 (- (- (- (+ ?x20293 (* 4.0 (* l_0_13_70 l_0_13_70))) ?x20296) ?x20298) ?x20300)))
 (= ?x20301 0.0))))))))))))))))))
(assert
 (= (+ (* (- l_0_13_31) l_0_13_31) (* l_0_13_46 l_0_13_46)) 0.0))
(assert
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x20329 (* ?x18873 l_0_13_49)))
 (= (+ (* (* (- 2.0) l_0_13_31) l_0_13_34) ?x20329) 0.0))))
(assert
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x20337 (* ?x18873 l_0_13_52)))
 (= (+ (* (* (- 2.0) l_0_13_31) l_0_13_37) ?x20337) 0.0))))
(assert
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x20350 (* ?x18873 l_0_13_56)))
 (let ((?x20337 (* ?x18873 l_0_13_52)))
 (let ((?x18870 (* 2.0 l_0_13_31)))
 (let ((?x20343 (* ?x18870 l_0_13_41)))
 (let ((?x20341 (* ?x18870 l_0_13_37)))
 (= (+ (- (- ?x20341 ?x20343) ?x20337) ?x20350) 0.0))))))))
(assert
 (let ((?x20372 (* l_0_13_51 l_0_13_51)))
 (let ((?x20370 (* l_0_13_50 l_0_13_50)))
 (let ((?x20368 (* l_0_13_49 l_0_13_49)))
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x20337 (* ?x18873 l_0_13_52)))
 (let ((?x20365 (* l_0_13_36 l_0_13_36)))
 (let ((?x20363 (* l_0_13_35 l_0_13_35)))
 (let ((?x20364 (- (- (* (* 2.0 l_0_13_31) l_0_13_37) (* l_0_13_34 l_0_13_34)) ?x20363)))
 (= (+ (+ (+ (- (- ?x20364 ?x20365) ?x20337) ?x20368) ?x20370) ?x20372) 0.0))))))))))
(assert
 (let ((?x20395 (* 2.0 l_0_13_51)))
 (let ((?x20396 (* ?x20395 l_0_13_54)))
 (let ((?x20392 (* 2.0 l_0_13_50)))
 (let ((?x20393 (* ?x20392 l_0_13_53)))
 (let ((?x20389 (* 2.0 l_0_13_49)))
 (let ((?x20390 (* ?x20389 l_0_13_52)))
 (let ((?x20386 (* 2.0 l_0_13_36)))
 (let ((?x20387 (* ?x20386 l_0_13_39)))
 (let ((?x20383 (* 2.0 l_0_13_35)))
 (let ((?x20384 (* ?x20383 l_0_13_38)))
 (let ((?x20394 (+ (+ (- (- (* (* (- 2.0) l_0_13_34) l_0_13_37) ?x20384) ?x20387) ?x20390) ?x20393)))
 (= (+ ?x20394 ?x20396) 0.0)))))))))))))
(assert
 (let ((?x20395 (* 2.0 l_0_13_51)))
 (let ((?x20430 (* ?x20395 l_0_13_58)))
 (let ((?x20396 (* ?x20395 l_0_13_54)))
 (let ((?x20392 (* 2.0 l_0_13_50)))
 (let ((?x20427 (* ?x20392 l_0_13_57)))
 (let ((?x20393 (* ?x20392 l_0_13_53)))
 (let ((?x20389 (* 2.0 l_0_13_49)))
 (let ((?x20424 (* ?x20389 l_0_13_56)))
 (let ((?x20390 (* ?x20389 l_0_13_52)))
 (let ((?x20386 (* 2.0 l_0_13_36)))
 (let ((?x20421 (* ?x20386 l_0_13_43)))
 (let ((?x20387 (* ?x20386 l_0_13_39)))
 (let ((?x20383 (* 2.0 l_0_13_35)))
 (let ((?x20418 (* ?x20383 l_0_13_42)))
 (let ((?x20384 (* ?x20383 l_0_13_38)))
 (let ((?x20413 (* 2.0 l_0_13_34)))
 (let ((?x20415 (* ?x20413 l_0_13_41)))
 (let ((?x20414 (* ?x20413 l_0_13_37)))
 (let ((?x20425 (+ (- (- (+ (- (+ (- ?x20414 ?x20415) ?x20384) ?x20418) ?x20387) ?x20421) ?x20390) ?x20424)))
 (= (+ (- (+ (- ?x20425 ?x20393) ?x20427) ?x20396) ?x20430) 0.0)))))))))))))))))))))
(assert
 (let ((?x20475 (* l_0_13_55 l_0_13_55)))
 (let ((?x20473 (* l_0_13_54 l_0_13_54)))
 (let ((?x20471 (* l_0_13_53 l_0_13_53)))
 (let ((?x20469 (* l_0_13_52 l_0_13_52)))
 (let ((?x20467 (* l_0_13_40 l_0_13_40)))
 (let ((?x20465 (* l_0_13_39 l_0_13_39)))
 (let ((?x20466 (- (- (* (- l_0_13_37) l_0_13_37) (* l_0_13_38 l_0_13_38)) ?x20465)))
 (= (+ (+ (+ (+ (- ?x20466 ?x20467) ?x20469) ?x20471) ?x20473) ?x20475) 0.0)))))))))
(assert
 (let ((?x20475 (* l_0_13_55 l_0_13_55)))
 (let ((?x20512 (* (* 2.0 l_0_13_55) l_0_13_59)))
 (let ((?x20473 (* l_0_13_54 l_0_13_54)))
 (let ((?x20508 (* (* 2.0 l_0_13_54) l_0_13_58)))
 (let ((?x20471 (* l_0_13_53 l_0_13_53)))
 (let ((?x20504 (* (* 2.0 l_0_13_53) l_0_13_57)))
 (let ((?x20469 (* l_0_13_52 l_0_13_52)))
 (let ((?x20500 (* (* 2.0 l_0_13_52) l_0_13_56)))
 (let ((?x20467 (* l_0_13_40 l_0_13_40)))
 (let ((?x20496 (* (* 2.0 l_0_13_40) l_0_13_44)))
 (let ((?x20465 (* l_0_13_39 l_0_13_39)))
 (let ((?x20492 (* (* 2.0 l_0_13_39) l_0_13_43)))
 (let ((?x20463 (* l_0_13_38 l_0_13_38)))
 (let ((?x20488 (* (* 2.0 l_0_13_38) l_0_13_42)))
 (let ((?x20489 (- (+ (* (* (- 2.0) l_0_13_37) l_0_13_41) (* l_0_13_37 l_0_13_37)) ?x20488)))
 (let ((?x20502 (- (+ (+ (- (+ (- (+ ?x20489 ?x20463) ?x20492) ?x20465) ?x20496) ?x20467) ?x20500) ?x20469)))
 (= (- (+ (- (+ (- (+ ?x20502 ?x20504) ?x20471) ?x20508) ?x20473) ?x20512) ?x20475) 0.0))))))))))))))))))
(assert
 (let ((?x20550 (* l_0_13_60 l_0_13_60)))
 (let ((?x20548 (* l_0_13_59 l_0_13_59)))
 (let ((?x20546 (* l_0_13_58 l_0_13_58)))
 (let ((?x20544 (* l_0_13_57 l_0_13_57)))
 (let ((?x20542 (* l_0_13_56 l_0_13_56)))
 (let ((?x20512 (* (* 2.0 l_0_13_55) l_0_13_59)))
 (let ((?x20508 (* (* 2.0 l_0_13_54) l_0_13_58)))
 (let ((?x20504 (* (* 2.0 l_0_13_53) l_0_13_57)))
 (let ((?x20500 (* (* 2.0 l_0_13_52) l_0_13_56)))
 (let ((?x20536 (* l_0_13_45 l_0_13_45)))
 (let ((?x20534 (* l_0_13_44 l_0_13_44)))
 (let ((?x20532 (* l_0_13_43 l_0_13_43)))
 (let ((?x20530 (* l_0_13_42 l_0_13_42)))
 (let ((?x20528 (* l_0_13_41 l_0_13_41)))
 (let ((?x20496 (* (* 2.0 l_0_13_40) l_0_13_44)))
 (let ((?x20492 (* (* 2.0 l_0_13_39) l_0_13_43)))
 (let ((?x20488 (* (* 2.0 l_0_13_38) l_0_13_42)))
 (let ((?x13803 (+ (+ (+ (* (* 2.0 l_0_13_37) l_0_13_41) ?x20488) ?x20492) ?x20496)))
 (let ((?x20539 (- (- (- (- (- (- (- ?x13803 ?x20528) ?x20530) ?x20532) ?x20534) ?x20536) ?x20500) ?x20504)))
 (let ((?x20551 (+ (+ (+ (+ (+ (- (- ?x20539 ?x20508) ?x20512) ?x20542) ?x20544) ?x20546) ?x20548) ?x20550)))
 (= ?x20551 0.0))))))))))))))))))))))
(assert
 (= (- (* l_0_13_31 l_0_13_31) (* l_0_13_46 l_0_13_46)) 0.0))
(assert
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x20329 (* ?x18873 l_0_13_49)))
 (= (- (* (* 2.0 l_0_13_31) l_0_13_34) ?x20329) 0.0))))
(assert
 (let ((?x20372 (* l_0_13_51 l_0_13_51)))
 (let ((?x20370 (* l_0_13_50 l_0_13_50)))
 (let ((?x20368 (* l_0_13_49 l_0_13_49)))
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x20350 (* ?x18873 l_0_13_56)))
 (let ((?x20365 (* l_0_13_36 l_0_13_36)))
 (let ((?x20363 (* l_0_13_35 l_0_13_35)))
 (let ((?x13938 (+ (+ (* (* 2.0 l_0_13_31) l_0_13_41) (* l_0_13_34 l_0_13_34)) ?x20363)))
 (= (- (- (- (- (+ ?x13938 ?x20365) ?x20350) ?x20368) ?x20370) ?x20372) 0.0))))))))))
(assert
 (let ((?x20372 (* l_0_13_51 l_0_13_51)))
 (let ((?x20370 (* l_0_13_50 l_0_13_50)))
 (let ((?x20368 (* l_0_13_49 l_0_13_49)))
 (let ((?x20365 (* l_0_13_36 l_0_13_36)))
 (let ((?x13943 (- (+ (+ (* l_0_13_34 l_0_13_34) (* l_0_13_35 l_0_13_35)) ?x20365) ?x20368)))
 (= (- (- ?x13943 ?x20370) ?x20372) 0.0)))))))
(assert
 (let ((?x20395 (* 2.0 l_0_13_51)))
 (let ((?x20396 (* ?x20395 l_0_13_54)))
 (let ((?x20392 (* 2.0 l_0_13_50)))
 (let ((?x20393 (* ?x20392 l_0_13_53)))
 (let ((?x20389 (* 2.0 l_0_13_49)))
 (let ((?x20390 (* ?x20389 l_0_13_52)))
 (let ((?x20386 (* 2.0 l_0_13_36)))
 (let ((?x20387 (* ?x20386 l_0_13_39)))
 (let ((?x20383 (* 2.0 l_0_13_35)))
 (let ((?x20384 (* ?x20383 l_0_13_38)))
 (let ((?x20413 (* 2.0 l_0_13_34)))
 (let ((?x20414 (* ?x20413 l_0_13_37)))
 (= (- (- (- (+ (+ ?x20414 ?x20384) ?x20387) ?x20390) ?x20393) ?x20396) 0.0))))))))))))))
(assert
 (let ((?x20395 (* 2.0 l_0_13_51)))
 (let ((?x20430 (* ?x20395 l_0_13_58)))
 (let ((?x20392 (* 2.0 l_0_13_50)))
 (let ((?x20427 (* ?x20392 l_0_13_57)))
 (let ((?x20389 (* 2.0 l_0_13_49)))
 (let ((?x20424 (* ?x20389 l_0_13_56)))
 (let ((?x20386 (* 2.0 l_0_13_36)))
 (let ((?x20421 (* ?x20386 l_0_13_43)))
 (let ((?x20383 (* 2.0 l_0_13_35)))
 (let ((?x20418 (* ?x20383 l_0_13_42)))
 (let ((?x20413 (* 2.0 l_0_13_34)))
 (let ((?x20415 (* ?x20413 l_0_13_41)))
 (= (- (- (- (+ (+ ?x20415 ?x20418) ?x20421) ?x20424) ?x20427) ?x20430) 0.0))))))))))))))
(assert
 (let ((?x20475 (* l_0_13_55 l_0_13_55)))
 (let ((?x20473 (* l_0_13_54 l_0_13_54)))
 (let ((?x20471 (* l_0_13_53 l_0_13_53)))
 (let ((?x20469 (* l_0_13_52 l_0_13_52)))
 (let ((?x20467 (* l_0_13_40 l_0_13_40)))
 (let ((?x20465 (* l_0_13_39 l_0_13_39)))
 (let ((?x13984 (+ (+ (+ (* l_0_13_37 l_0_13_37) (* l_0_13_38 l_0_13_38)) ?x20465) ?x20467)))
 (= (- (- (- (- ?x13984 ?x20469) ?x20471) ?x20473) ?x20475) 0.0)))))))))
(assert
 (let ((?x20512 (* (* 2.0 l_0_13_55) l_0_13_59)))
 (let ((?x20508 (* (* 2.0 l_0_13_54) l_0_13_58)))
 (let ((?x20504 (* (* 2.0 l_0_13_53) l_0_13_57)))
 (let ((?x20500 (* (* 2.0 l_0_13_52) l_0_13_56)))
 (let ((?x20496 (* (* 2.0 l_0_13_40) l_0_13_44)))
 (let ((?x20492 (* (* 2.0 l_0_13_39) l_0_13_43)))
 (let ((?x20488 (* (* 2.0 l_0_13_38) l_0_13_42)))
 (let ((?x13803 (+ (+ (+ (* (* 2.0 l_0_13_37) l_0_13_41) ?x20488) ?x20492) ?x20496)))
 (= (- (- (- (- ?x13803 ?x20500) ?x20504) ?x20508) ?x20512) 0.0))))))))))
(assert
 (let ((?x20550 (* l_0_13_60 l_0_13_60)))
 (let ((?x20548 (* l_0_13_59 l_0_13_59)))
 (let ((?x20546 (* l_0_13_58 l_0_13_58)))
 (let ((?x20544 (* l_0_13_57 l_0_13_57)))
 (let ((?x20542 (* l_0_13_56 l_0_13_56)))
 (let ((?x20536 (* l_0_13_45 l_0_13_45)))
 (let ((?x20534 (* l_0_13_44 l_0_13_44)))
 (let ((?x20532 (* l_0_13_43 l_0_13_43)))
 (let ((?x20607 (+ (+ (+ (* l_0_13_41 l_0_13_41) (* l_0_13_42 l_0_13_42)) ?x20532) ?x20534)))
 (= (- (- (- (- (- (+ ?x20607 ?x20536) ?x20542) ?x20544) ?x20546) ?x20548) ?x20550) 0.0)))))))))))
(assert
 (= (- (* l_0_13_31 l_0_13_31) (* l_0_13_46 l_0_13_46)) 0.0))
(assert
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x20329 (* ?x18873 l_0_13_49)))
 (= (- (* (* 2.0 l_0_13_31) l_0_13_34) ?x20329) 0.0))))
(assert
 (let ((?x18873 (* 2.0 l_0_13_46)))
 (let ((?x20350 (* ?x18873 l_0_13_56)))
 (let ((?x18870 (* 2.0 l_0_13_31)))
 (let ((?x20343 (* ?x18870 l_0_13_41)))
 (= (- ?x20343 ?x20350) 0.0))))))
(assert
 (let ((?x20395 (* 2.0 l_0_13_51)))
 (let ((?x20430 (* ?x20395 l_0_13_58)))
 (let ((?x20392 (* 2.0 l_0_13_50)))
 (let ((?x20427 (* ?x20392 l_0_13_57)))
 (let ((?x20389 (* 2.0 l_0_13_49)))
 (let ((?x20424 (* ?x20389 l_0_13_56)))
 (let ((?x20386 (* 2.0 l_0_13_36)))
 (let ((?x20421 (* ?x20386 l_0_13_43)))
 (let ((?x20383 (* 2.0 l_0_13_35)))
 (let ((?x20418 (* ?x20383 l_0_13_42)))
 (let ((?x20413 (* 2.0 l_0_13_34)))
 (let ((?x20415 (* ?x20413 l_0_13_41)))
 (= (- (- (- (+ (+ ?x20415 ?x20418) ?x20421) ?x20424) ?x20427) ?x20430) 0.0))))))))))))))
(assert
 (let ((?x20550 (* l_0_13_60 l_0_13_60)))
 (let ((?x20548 (* l_0_13_59 l_0_13_59)))
 (let ((?x20546 (* l_0_13_58 l_0_13_58)))
 (let ((?x20544 (* l_0_13_57 l_0_13_57)))
 (let ((?x20542 (* l_0_13_56 l_0_13_56)))
 (let ((?x20536 (* l_0_13_45 l_0_13_45)))
 (let ((?x20534 (* l_0_13_44 l_0_13_44)))
 (let ((?x20532 (* l_0_13_43 l_0_13_43)))
 (let ((?x20607 (+ (+ (+ (* l_0_13_41 l_0_13_41) (* l_0_13_42 l_0_13_42)) ?x20532) ?x20534)))
 (= (- (- (- (- (- (+ ?x20607 ?x20536) ?x20542) ?x20544) ?x20546) ?x20548) ?x20550) 0.0)))))))))))
(assert
 (>= l_0_13_1 0.0))
(assert
 (>= l_0_13_3 0.0))
(assert
 (>= l_0_13_6 0.0))
(assert
 (>= l_0_13_10 0.0))
(assert
 (>= l_0_13_15 0.0))
(assert
 (>= l_0_13_16 0.0))
(assert
 (>= l_0_13_18 0.0))
(assert
 (>= l_0_13_21 0.0))
(assert
 (>= l_0_13_25 0.0))
(assert
 (>= l_0_13_30 0.0))
(assert
 (>= l_0_13_31 0.0))
(assert
 (>= l_0_13_33 0.0))
(assert
 (>= l_0_13_36 0.0))
(assert
 (>= l_0_13_40 0.0))
(assert
 (>= l_0_13_45 0.0))
(assert
 (>= l_0_13_46 0.0))
(assert
 (>= l_0_13_48 0.0))
(assert
 (>= l_0_13_51 0.0))
(assert
 (>= l_0_13_55 0.0))
(assert
 (>= l_0_13_60 0.0))
(assert
 (>= l_0_13_61 0.0))
(assert
 (>= l_0_13_63 0.0))
(assert
 (>= l_0_13_66 0.0))
(assert
 (>= l_0_13_70 0.0))
(assert
 (>= l_0_13_75 0.0))
(assert
 (>= l_0_13_76 0.0))
(assert
 (>= l_0_13_78 0.0))
(assert
 (>= l_0_13_81 0.0))
(assert
 (>= l_0_13_85 0.0))
(assert
 (>= l_0_13_90 0.0))
(assert
 (>= l_0_13_91 0.0))
(assert
 (>= l_0_13_93 0.0))
(assert
 (>= l_0_13_96 0.0))
(assert
 (>= l_0_13_100 0.0))
(assert
 (>= l_0_13_105 0.0))
(assert
 (>= l_0_13_106 0.0))
(assert
 (>= l_0_13_108 0.0))
(assert
 (>= l_0_13_111 0.0))
(assert
 (>= l_0_13_115 0.0))
(assert
 (>= l_0_13_120 0.0))
(assert
 (>= l_0_13_121 0.0))
(assert
 (>= l_0_13_123 0.0))
(assert
 (>= l_0_13_126 0.0))
(assert
 (>= l_0_13_130 0.0))
(assert
 (>= l_0_13_135 0.0))
(assert
 (let ((?x20727 (* l_0_14_96 l_0_14_96)))
 (let ((?x20725 (* l_0_14_95 l_0_14_95)))
 (let ((?x20723 (* l_0_14_94 l_0_14_94)))
 (let ((?x20720 (* 2.0 l_0_14_78)))
 (let ((?x20721 (* ?x20720 l_0_14_80)))
 (let ((?x20717 (* 2.0 l_0_14_77)))
 (let ((?x20718 (* ?x20717 l_0_14_79)))
 (let ((?x20706 (* l_0_14_48 l_0_14_48)))
 (let ((?x20704 (* l_0_14_47 l_0_14_47)))
 (let ((?x20702 (* l_0_14_33 l_0_14_33)))
 (let ((?x20700 (* l_0_14_32 l_0_14_32)))
 (let ((?x20683 (* l_0_14_141 l_0_14_141)))
 (let ((?x20681 (* l_0_14_140 l_0_14_140)))
 (let ((?x20679 (* l_0_14_139 l_0_14_139)))
 (let ((?x20677 (* l_0_14_126 l_0_14_126)))
 (let ((?x20675 (* l_0_14_125 l_0_14_125)))
 (let ((?x20673 (* l_0_14_124 l_0_14_124)))
 (let ((?x20671 (* l_0_14_111 l_0_14_111)))
 (let ((?x20672 (- (- (* (- l_0_14_109) l_0_14_109) (* l_0_14_110 l_0_14_110)) ?x20671)))
 (let ((?x20687 (- (- (- (- (- (- (- ?x20672 ?x20673) ?x20675) ?x20677) ?x20679) ?x20681) ?x20683) (* (* 4.0 l_0_14_17) l_0_14_19))))
 (let ((?x20693 (+ (- ?x20687 (* (* 4.0 l_0_14_18) l_0_14_20)) (* 1.0 (* l_0_14_19 l_0_14_19)))))
 (let ((?x20699 (+ (+ ?x20693 (* 1.0 (* l_0_14_20 l_0_14_20))) (* 1.0 (* l_0_14_21 l_0_14_21)))))
 (let ((?x20710 (+ (- (- (+ (+ ?x20699 ?x20700) ?x20702) ?x20704) ?x20706) (* 4.0 (* l_0_14_64 l_0_14_64)))))
 (let ((?x20716 (+ (+ ?x20710 (* 4.0 (* l_0_14_65 l_0_14_65))) (* 4.0 (* l_0_14_66 l_0_14_66)))))
 (= (+ (- (- (- (- (- ?x20716 ?x20718) ?x20721) ?x20723) ?x20725) ?x20727) (/ 1.0 4.0)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x20839 (* 2.0 l_0_14_76)))
 (let ((?x20840 (* ?x20839 l_0_14_77)))
 (let ((?x20706 (* l_0_14_48 l_0_14_48)))
 (let ((?x20704 (* l_0_14_47 l_0_14_47)))
 (let ((?x20702 (* l_0_14_33 l_0_14_33)))
 (let ((?x20700 (* l_0_14_32 l_0_14_32)))
 (let ((?x20823 (* 2.0 l_0_14_18)))
 (let ((?x20824 (* ?x20823 l_0_14_27)))
 (let ((?x20820 (* 2.0 l_0_14_17)))
 (let ((?x20821 (* ?x20820 l_0_14_26)))
 (let ((?x20815 (* 2.0 l_0_14_16)))
 (let ((?x20818 (* ?x20815 l_0_14_26)))
 (let ((?x20816 (* ?x20815 l_0_14_17)))
 (let ((?x20805 (- (* (* (- 2.0) l_0_14_1) l_0_14_2) (* (* 2.0 l_0_14_101) l_0_14_91))))
 (let ((?x20811 (- (- ?x20805 (* (* 2.0 l_0_14_106) l_0_14_116)) (* (* 2.0 l_0_14_121) l_0_14_131))))
 (let ((?x20822 (- (+ (+ (- ?x20811 (* (* 2.0 l_0_14_136) l_0_14_146)) ?x20816) ?x20818) ?x20821)))
 (let ((?x20832 (+ (- (- (+ (+ (- ?x20822 ?x20824) ?x20700) ?x20702) ?x20704) ?x20706) (* (* 8.0 l_0_14_61) l_0_14_71))))
 (let ((?x20838 (- (- ?x20832 (* (* 2.0 l_0_14_62) l_0_14_71)) (* (* 2.0 l_0_14_63) l_0_14_72))))
 (let ((?x20847 (- (- (+ ?x20838 ?x20840) (* (* (/ 1.0 2.0) l_0_14_77) l_0_14_86)) (* (* (/ 1.0 2.0) l_0_14_78) l_0_14_87))))
 (= (+ ?x20847 (/ 1.0 4.0)) 0.0)))))))))))))))))))))
(assert
 (let ((?x20706 (* l_0_14_48 l_0_14_48)))
 (let ((?x20704 (* l_0_14_47 l_0_14_47)))
 (let ((?x20702 (* l_0_14_33 l_0_14_33)))
 (let ((?x20700 (* l_0_14_32 l_0_14_32)))
 (let ((?x20823 (* 2.0 l_0_14_18)))
 (let ((?x20890 (* ?x20823 l_0_14_23)))
 (let ((?x20820 (* 2.0 l_0_14_17)))
 (let ((?x20888 (* ?x20820 l_0_14_22)))
 (let ((?x20815 (* 2.0 l_0_14_16)))
 (let ((?x20886 (* ?x20815 l_0_14_22)))
 (let ((?x20883 (- (* (* (- 2.0) l_0_14_106) l_0_14_112) (* (* 2.0 l_0_14_121) l_0_14_127))))
 (let ((?x20891 (- (- (+ (- ?x20883 (* (* 2.0 l_0_14_136) l_0_14_142)) ?x20886) ?x20888) ?x20890)))
 (let ((?x20897 (+ (+ (+ (- (- ?x20891 ?x20700) ?x20702) ?x20704) ?x20706) (* (* 8.0 l_0_14_61) l_0_14_67))))
 (let ((?x20901 (- (- ?x20897 (* (* 2.0 l_0_14_62) l_0_14_67)) (* (* 2.0 l_0_14_63) l_0_14_68))))
 (let ((?x20905 (- (- ?x20901 (* (* (/ 1.0 2.0) l_0_14_77) l_0_14_82)) (* (* (/ 1.0 2.0) l_0_14_78) l_0_14_83))))
 (= (- (- ?x20905 (* (* 2.0 l_0_14_91) l_0_14_97)) (/ 1.0 4.0)) 0.0)))))))))))))))))
(assert
 (let ((?x20964 (* l_0_14_76 l_0_14_76)))
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x20956 (* ?x20955 l_0_14_47)))
 (let ((?x20952 (* 2.0 l_0_14_31)))
 (let ((?x20953 (* ?x20952 l_0_14_32)))
 (let ((?x20950 (* l_0_14_16 l_0_14_16)))
 (let ((?x20815 (* 2.0 l_0_14_16)))
 (let ((?x20818 (* ?x20815 l_0_14_26)))
 (let ((?x20960 (- (- (+ (+ (- (* (- l_0_14_1) l_0_14_1) ?x20818) ?x20950) ?x20953) ?x20956) (* (* 2.0 l_0_14_61) l_0_14_71))))
 (= (+ (- ?x20960 (* (* (/ 1.0 2.0) l_0_14_76) l_0_14_86)) ?x20964) 0.0)))))))))))
(assert
 (let ((?x20839 (* 2.0 l_0_14_76)))
 (let ((?x21018 (* ?x20839 l_0_14_86)))
 (let ((?x21016 (* ?x20839 l_0_14_79)))
 (let ((?x21004 (* 2.0 l_0_14_48)))
 (let ((?x21005 (* ?x21004 l_0_14_50)))
 (let ((?x21001 (* 2.0 l_0_14_47)))
 (let ((?x21002 (* ?x21001 l_0_14_49)))
 (let ((?x20998 (* 2.0 l_0_14_33)))
 (let ((?x20999 (* ?x20998 l_0_14_35)))
 (let ((?x20995 (* 2.0 l_0_14_32)))
 (let ((?x20996 (* ?x20995 l_0_14_34)))
 (let ((?x20992 (* 2.0 l_0_14_21)))
 (let ((?x20993 (* ?x20992 l_0_14_28)))
 (let ((?x20989 (* 2.0 l_0_14_20)))
 (let ((?x20990 (* ?x20989 l_0_14_27)))
 (let ((?x20986 (* 2.0 l_0_14_19)))
 (let ((?x20987 (* ?x20986 l_0_14_26)))
 (let ((?x20815 (* 2.0 l_0_14_16)))
 (let ((?x20981 (* ?x20815 l_0_14_19)))
 (let ((?x20985 (- (+ (* (* (- 2.0) l_0_14_1) l_0_14_4) ?x20981) (* (* 4.0 l_0_14_16) l_0_14_26))))
 (let ((?x21006 (- (- (+ (+ (- (- (- ?x20985 ?x20987) ?x20990) ?x20993) ?x20996) ?x20999) ?x21002) ?x21005)))
 (let ((?x21012 (- (- ?x21006 (* (* 2.0 l_0_14_64) l_0_14_71)) (* (* 2.0 l_0_14_65) l_0_14_72))))
 (let ((?x21022 (- (- (+ (- ?x21012 (* (* 2.0 l_0_14_66) l_0_14_73)) ?x21016) ?x21018) (* (* (/ 1.0 2.0) l_0_14_79) l_0_14_86))))
 (let ((?x21028 (- (- ?x21022 (* (* (/ 1.0 2.0) l_0_14_80) l_0_14_87)) (* (* (/ 1.0 2.0) l_0_14_81) l_0_14_88))))
 (= ?x21028 0.0))))))))))))))))))))))))))
(assert
 (let ((?x20839 (* 2.0 l_0_14_76)))
 (let ((?x21126 (* ?x20839 l_0_14_82)))
 (let ((?x21004 (* 2.0 l_0_14_48)))
 (let ((?x21112 (* ?x21004 l_0_14_57)))
 (let ((?x21110 (* ?x21004 l_0_14_53)))
 (let ((?x21001 (* 2.0 l_0_14_47)))
 (let ((?x21108 (* ?x21001 l_0_14_56)))
 (let ((?x21106 (* ?x21001 l_0_14_52)))
 (let ((?x20998 (* 2.0 l_0_14_33)))
 (let ((?x21104 (* ?x20998 l_0_14_42)))
 (let ((?x21102 (* ?x20998 l_0_14_38)))
 (let ((?x20995 (* 2.0 l_0_14_32)))
 (let ((?x21100 (* ?x20995 l_0_14_41)))
 (let ((?x21098 (* ?x20995 l_0_14_37)))
 (let ((?x21095 (* 2.0 l_0_14_25)))
 (let ((?x21096 (* ?x21095 l_0_14_29)))
 (let ((?x21092 (* 2.0 l_0_14_24)))
 (let ((?x21093 (* ?x21092 l_0_14_28)))
 (let ((?x21089 (* 2.0 l_0_14_23)))
 (let ((?x21090 (* ?x21089 l_0_14_27)))
 (let ((?x21087 (* (* 2.0 l_0_14_22) l_0_14_26)))
 (let ((?x20815 (* 2.0 l_0_14_16)))
 (let ((?x20886 (* ?x20815 l_0_14_22)))
 (let ((?x21094 (- (- (- (+ (* (* (- 2.0) l_0_14_1) l_0_14_7) ?x20886) ?x21087) ?x21090) ?x21093)))
 (let ((?x21109 (+ (- (- (+ (- (+ (- ?x21094 ?x21096) ?x21098) ?x21100) ?x21102) ?x21104) ?x21106) ?x21108)))
 (let ((?x21119 (- (- (+ (- ?x21109 ?x21110) ?x21112) (* (* 2.0 l_0_14_67) l_0_14_71)) (* (* 2.0 l_0_14_68) l_0_14_72))))
 (let ((?x21125 (- (- ?x21119 (* (* 2.0 l_0_14_69) l_0_14_73)) (* (* 2.0 l_0_14_70) l_0_14_74))))
 (let ((?x21133 (- (- (+ ?x21125 ?x21126) (* (* (/ 1.0 2.0) l_0_14_82) l_0_14_86)) (* (* (/ 1.0 2.0) l_0_14_83) l_0_14_87))))
 (let ((?x21139 (- (- ?x21133 (* (* (/ 1.0 2.0) l_0_14_84) l_0_14_88)) (* (* (/ 1.0 2.0) l_0_14_85) l_0_14_89))))
 (= ?x21139 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x20839 (* 2.0 l_0_14_76)))
 (let ((?x21018 (* ?x20839 l_0_14_86)))
 (let ((?x21208 (* l_0_14_75 l_0_14_75)))
 (let ((?x21206 (* l_0_14_74 l_0_14_74)))
 (let ((?x21204 (* l_0_14_73 l_0_14_73)))
 (let ((?x21202 (* l_0_14_72 l_0_14_72)))
 (let ((?x21200 (* l_0_14_71 l_0_14_71)))
 (let ((?x21004 (* 2.0 l_0_14_48)))
 (let ((?x21112 (* ?x21004 l_0_14_57)))
 (let ((?x21001 (* 2.0 l_0_14_47)))
 (let ((?x21108 (* ?x21001 l_0_14_56)))
 (let ((?x20998 (* 2.0 l_0_14_33)))
 (let ((?x21104 (* ?x20998 l_0_14_42)))
 (let ((?x20995 (* 2.0 l_0_14_32)))
 (let ((?x21100 (* ?x20995 l_0_14_41)))
 (let ((?x21194 (* l_0_14_30 l_0_14_30)))
 (let ((?x21192 (* l_0_14_29 l_0_14_29)))
 (let ((?x21190 (* l_0_14_28 l_0_14_28)))
 (let ((?x21188 (* l_0_14_27 l_0_14_27)))
 (let ((?x21186 (* l_0_14_26 l_0_14_26)))
 (let ((?x20815 (* 2.0 l_0_14_16)))
 (let ((?x20818 (* ?x20815 l_0_14_26)))
 (let ((?x21191 (- (- (- (+ (* (* (- 2.0) l_0_14_1) l_0_14_11) ?x20818) ?x21186) ?x21188) ?x21190)))
 (let ((?x21201 (- (- (- (+ (+ (- (- ?x21191 ?x21192) ?x21194) ?x21100) ?x21104) ?x21108) ?x21112) ?x21200)))
 (let ((?x21213 (- (+ (- (- (- (- ?x21201 ?x21202) ?x21204) ?x21206) ?x21208) ?x21018) (* (* (/ 1.0 4.0) l_0_14_86) l_0_14_86))))
 (let ((?x21219 (- (- ?x21213 (* (* (/ 1.0 4.0) l_0_14_87) l_0_14_87)) (* (* (/ 1.0 4.0) l_0_14_88) l_0_14_88))))
 (let ((?x21225 (- (- ?x21219 (* (* (/ 1.0 4.0) l_0_14_89) l_0_14_89)) (* (* (/ 1.0 4.0) l_0_14_90) l_0_14_90))))
 (= ?x21225 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x21285 (* l_0_14_78 l_0_14_78)))
 (let ((?x21283 (* l_0_14_77 l_0_14_77)))
 (let ((?x21275 (* l_0_14_3 l_0_14_3)))
 (let ((?x21273 (* l_0_14_2 l_0_14_2)))
 (let ((?x21271 (* l_0_14_18 l_0_14_18)))
 (let ((?x20823 (* 2.0 l_0_14_18)))
 (let ((?x20824 (* ?x20823 l_0_14_27)))
 (let ((?x21268 (* l_0_14_17 l_0_14_17)))
 (let ((?x20820 (* 2.0 l_0_14_17)))
 (let ((?x20821 (* ?x20820 l_0_14_26)))
 (let ((?x21248 (- (* (* (- 2.0) l_0_14_101) l_0_14_92) (* (* 2.0 l_0_14_102) l_0_14_93))))
 (let ((?x21254 (- (- ?x21248 (* (* 2.0 l_0_14_107) l_0_14_116)) (* (* 2.0 l_0_14_108) l_0_14_117))))
 (let ((?x21260 (- (- ?x21254 (* (* 2.0 l_0_14_122) l_0_14_131)) (* (* 2.0 l_0_14_123) l_0_14_132))))
 (let ((?x21266 (- (- ?x21260 (* (* 2.0 l_0_14_137) l_0_14_146)) (* (* 2.0 l_0_14_138) l_0_14_147))))
 (let ((?x21279 (+ (- (- (+ (+ (+ (+ ?x21266 ?x20821) ?x21268) ?x20824) ?x21271) ?x21273) ?x21275) (* (* 8.0 l_0_14_62) l_0_14_71))))
 (= (+ (+ (+ ?x21279 (* (* 8.0 l_0_14_63) l_0_14_72)) ?x21283) ?x21285) 0.0)))))))))))))))))
(assert
 (let ((?x20720 (* 2.0 l_0_14_78)))
 (let ((?x21375 (* ?x20720 l_0_14_87)))
 (let ((?x20721 (* ?x20720 l_0_14_80)))
 (let ((?x20717 (* 2.0 l_0_14_77)))
 (let ((?x21372 (* ?x20717 l_0_14_86)))
 (let ((?x20718 (* ?x20717 l_0_14_79)))
 (let ((?x20992 (* 2.0 l_0_14_21)))
 (let ((?x20993 (* ?x20992 l_0_14_28)))
 (let ((?x20989 (* 2.0 l_0_14_20)))
 (let ((?x20990 (* ?x20989 l_0_14_27)))
 (let ((?x20986 (* 2.0 l_0_14_19)))
 (let ((?x20987 (* ?x20986 l_0_14_26)))
 (let ((?x20823 (* 2.0 l_0_14_18)))
 (let ((?x21349 (* ?x20823 l_0_14_20)))
 (let ((?x20820 (* 2.0 l_0_14_17)))
 (let ((?x21345 (* ?x20820 l_0_14_19)))
 (let ((?x21314 (- (* (* (- 2.0) l_0_14_101) l_0_14_94) (* (* 2.0 l_0_14_102) l_0_14_95))))
 (let ((?x21320 (- (- ?x21314 (* (* 2.0 l_0_14_103) l_0_14_96)) (* (* 2.0 l_0_14_109) l_0_14_116))))
 (let ((?x21326 (- (- ?x21320 (* (* 2.0 l_0_14_110) l_0_14_117)) (* (* 2.0 l_0_14_111) l_0_14_118))))
 (let ((?x21332 (- (- ?x21326 (* (* 2.0 l_0_14_124) l_0_14_131)) (* (* 2.0 l_0_14_125) l_0_14_132))))
 (let ((?x21338 (- (- ?x21332 (* (* 2.0 l_0_14_126) l_0_14_133)) (* (* 2.0 l_0_14_139) l_0_14_146))))
 (let ((?x21344 (- (- ?x21338 (* (* 2.0 l_0_14_140) l_0_14_147)) (* (* 2.0 l_0_14_141) l_0_14_148))))
 (let ((?x21352 (- (+ (- (+ ?x21344 ?x21345) (* (* 4.0 l_0_14_17) l_0_14_26)) ?x21349) (* (* 4.0 l_0_14_18) l_0_14_27))))
 (let ((?x21358 (+ (+ (- (+ ?x21352 ?x20987) (* (* 2.0 l_0_14_2) l_0_14_4)) ?x20990) ?x20993)))
 (let ((?x21364 (+ (- ?x21358 (* (* 2.0 l_0_14_3) l_0_14_5)) (* (* 8.0 l_0_14_64) l_0_14_71))))
 (let ((?x21370 (+ (+ ?x21364 (* (* 8.0 l_0_14_65) l_0_14_72)) (* (* 8.0 l_0_14_66) l_0_14_73))))
 (= (- (+ (- (+ ?x21370 ?x20718) ?x21372) ?x20721) ?x21375) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x20720 (* 2.0 l_0_14_78)))
 (let ((?x21506 (* ?x20720 l_0_14_83)))
 (let ((?x20717 (* 2.0 l_0_14_77)))
 (let ((?x21504 (* ?x20717 l_0_14_82)))
 (let ((?x21095 (* 2.0 l_0_14_25)))
 (let ((?x21096 (* ?x21095 l_0_14_29)))
 (let ((?x21092 (* 2.0 l_0_14_24)))
 (let ((?x21093 (* ?x21092 l_0_14_28)))
 (let ((?x21089 (* 2.0 l_0_14_23)))
 (let ((?x21090 (* ?x21089 l_0_14_27)))
 (let ((?x21087 (* (* 2.0 l_0_14_22) l_0_14_26)))
 (let ((?x20823 (* 2.0 l_0_14_18)))
 (let ((?x20890 (* ?x20823 l_0_14_23)))
 (let ((?x20820 (* 2.0 l_0_14_17)))
 (let ((?x20888 (* ?x20820 l_0_14_22)))
 (let ((?x21441 (- (* (* (- 2.0) l_0_14_100) l_0_14_104) (* (* 2.0 l_0_14_101) l_0_14_97))))
 (let ((?x21445 (- (- ?x21441 (* (* 2.0 l_0_14_102) l_0_14_98)) (* (* 2.0 l_0_14_103) l_0_14_99))))
 (let ((?x21451 (- (- ?x21445 (* (* 2.0 l_0_14_112) l_0_14_116)) (* (* 2.0 l_0_14_113) l_0_14_117))))
 (let ((?x21457 (- (- ?x21451 (* (* 2.0 l_0_14_114) l_0_14_118)) (* (* 2.0 l_0_14_115) l_0_14_119))))
 (let ((?x21463 (- (- ?x21457 (* (* 2.0 l_0_14_127) l_0_14_131)) (* (* 2.0 l_0_14_128) l_0_14_132))))
 (let ((?x21469 (- (- ?x21463 (* (* 2.0 l_0_14_129) l_0_14_133)) (* (* 2.0 l_0_14_130) l_0_14_134))))
 (let ((?x21475 (- (- ?x21469 (* (* 2.0 l_0_14_142) l_0_14_146)) (* (* 2.0 l_0_14_143) l_0_14_147))))
 (let ((?x21481 (- (- ?x21475 (* (* 2.0 l_0_14_144) l_0_14_148)) (* (* 2.0 l_0_14_145) l_0_14_149))))
 (let ((?x21486 (+ (- (+ (+ ?x21481 ?x20888) ?x20890) (* (* 2.0 l_0_14_2) l_0_14_7)) ?x21087)))
 (let ((?x21491 (- (+ (+ (+ ?x21486 ?x21090) ?x21093) ?x21096) (* (* 2.0 l_0_14_3) l_0_14_8))))
 (let ((?x21497 (+ (+ ?x21491 (* (* 8.0 l_0_14_67) l_0_14_71)) (* (* 8.0 l_0_14_68) l_0_14_72))))
 (let ((?x21503 (+ (+ ?x21497 (* (* 8.0 l_0_14_69) l_0_14_73)) (* (* 8.0 l_0_14_70) l_0_14_74))))
 (= (+ (+ ?x21503 ?x21504) ?x21506) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x20720 (* 2.0 l_0_14_78)))
 (let ((?x21375 (* ?x20720 l_0_14_87)))
 (let ((?x20717 (* 2.0 l_0_14_77)))
 (let ((?x21372 (* ?x20717 l_0_14_86)))
 (let ((?x21208 (* l_0_14_75 l_0_14_75)))
 (let ((?x21601 (* 4.0 ?x21208)))
 (let ((?x21206 (* l_0_14_74 l_0_14_74)))
 (let ((?x21599 (* 4.0 ?x21206)))
 (let ((?x21204 (* l_0_14_73 l_0_14_73)))
 (let ((?x21597 (* 4.0 ?x21204)))
 (let ((?x21202 (* l_0_14_72 l_0_14_72)))
 (let ((?x21595 (* 4.0 ?x21202)))
 (let ((?x21200 (* l_0_14_71 l_0_14_71)))
 (let ((?x21593 (* 4.0 ?x21200)))
 (let ((?x20823 (* 2.0 l_0_14_18)))
 (let ((?x20824 (* ?x20823 l_0_14_27)))
 (let ((?x20820 (* 2.0 l_0_14_17)))
 (let ((?x20821 (* ?x20820 l_0_14_26)))
 (let ((?x21579 (* l_0_14_150 l_0_14_150)))
 (let ((?x21577 (* l_0_14_149 l_0_14_149)))
 (let ((?x21575 (* l_0_14_148 l_0_14_148)))
 (let ((?x21573 (* l_0_14_147 l_0_14_147)))
 (let ((?x21571 (* l_0_14_146 l_0_14_146)))
 (let ((?x21569 (* l_0_14_135 l_0_14_135)))
 (let ((?x21567 (* l_0_14_134 l_0_14_134)))
 (let ((?x21565 (* l_0_14_133 l_0_14_133)))
 (let ((?x21563 (* l_0_14_132 l_0_14_132)))
 (let ((?x21561 (* l_0_14_131 l_0_14_131)))
 (let ((?x21559 (* l_0_14_120 l_0_14_120)))
 (let ((?x21554 (* l_0_14_119 l_0_14_119)))
 (let ((?x21552 (* l_0_14_118 l_0_14_118)))
 (let ((?x21550 (* l_0_14_117 l_0_14_117)))
 (let ((?x21548 (* l_0_14_116 l_0_14_116)))
 (let ((?x21543 (* l_0_14_105 l_0_14_105)))
 (let ((?x21541 (* l_0_14_104 l_0_14_104)))
 (let ((?x21539 (* l_0_14_103 l_0_14_103)))
 (let ((?x21540 (- (- (* (- l_0_14_101) l_0_14_101) (* l_0_14_102 l_0_14_102)) ?x21539)))
 (let ((?x21549 (- (- (- (- ?x21540 ?x21541) ?x21543) (* (* 2.0 l_0_14_11) l_0_14_2)) ?x21548)))
 (let ((?x21558 (- (- (- (- ?x21549 ?x21550) ?x21552) ?x21554) (* (* 2.0 l_0_14_12) l_0_14_3))))
 (let ((?x21572 (- (- (- (- (- (- (- ?x21558 ?x21559) ?x21561) ?x21563) ?x21565) ?x21567) ?x21569) ?x21571)))
 (let ((?x21584 (+ (+ (+ (- (- (- (- ?x21572 ?x21573) ?x21575) ?x21577) ?x21579) ?x20821) ?x20824) (* 1.0 (* l_0_14_26 l_0_14_26)))))
 (let ((?x21588 (+ (+ ?x21584 (* 1.0 (* l_0_14_27 l_0_14_27))) (* 1.0 (* l_0_14_28 l_0_14_28)))))
 (let ((?x21592 (+ (+ ?x21588 (* 1.0 (* l_0_14_29 l_0_14_29))) (* 1.0 (* l_0_14_30 l_0_14_30)))))
 (let ((?x21604 (+ (+ (+ (+ (+ (+ (+ ?x21592 ?x21593) ?x21595) ?x21597) ?x21599) ?x21601) ?x21372) ?x21375)))
 (= ?x21604 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21671 (* l_0_14_81 l_0_14_81)))
 (let ((?x21668 (* 2.0 l_0_14_81)))
 (let ((?x21669 (* ?x21668 l_0_14_88)))
 (let ((?x21666 (* l_0_14_80 l_0_14_80)))
 (let ((?x21663 (* 2.0 l_0_14_80)))
 (let ((?x21664 (* ?x21663 l_0_14_87)))
 (let ((?x21661 (* l_0_14_79 l_0_14_79)))
 (let ((?x21658 (* 2.0 l_0_14_79)))
 (let ((?x21659 (* ?x21658 l_0_14_86)))
 (let ((?x21656 (* l_0_14_6 l_0_14_6)))
 (let ((?x21654 (* l_0_14_5 l_0_14_5)))
 (let ((?x21004 (* 2.0 l_0_14_48)))
 (let ((?x21112 (* ?x21004 l_0_14_57)))
 (let ((?x21001 (* 2.0 l_0_14_47)))
 (let ((?x21108 (* ?x21001 l_0_14_56)))
 (let ((?x21650 (* l_0_14_4 l_0_14_4)))
 (let ((?x20998 (* 2.0 l_0_14_33)))
 (let ((?x21104 (* ?x20998 l_0_14_42)))
 (let ((?x20995 (* 2.0 l_0_14_32)))
 (let ((?x21100 (* ?x20995 l_0_14_41)))
 (let ((?x20697 (* l_0_14_21 l_0_14_21)))
 (let ((?x20694 (* l_0_14_20 l_0_14_20)))
 (let ((?x5114 (- (+ (* (* (- 4.0) l_0_14_19) l_0_14_26) (* l_0_14_19 l_0_14_19)) (* (* 4.0 l_0_14_20) l_0_14_27))))
 (let ((?x21648 (+ (+ (- (+ ?x5114 ?x20694) (* (* 4.0 l_0_14_21) l_0_14_28)) ?x20697) ?x21100)))
 (let ((?x21660 (- (- (- (- (- (- (+ ?x21648 ?x21104) ?x21650) ?x21108) ?x21112) ?x21654) ?x21656) ?x21659)))
 (= (+ (- (+ (- (+ ?x21660 ?x21661) ?x21664) ?x21666) ?x21669) ?x21671) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x21749 (* (* 2.0 l_0_14_85) l_0_14_89)))
 (let ((?x21746 (* (* 2.0 l_0_14_84) l_0_14_88)))
 (let ((?x21743 (* (* 2.0 l_0_14_83) l_0_14_87)))
 (let ((?x21740 (* (* 2.0 l_0_14_82) l_0_14_86)))
 (let ((?x21668 (* 2.0 l_0_14_81)))
 (let ((?x21737 (* ?x21668 l_0_14_84)))
 (let ((?x21663 (* 2.0 l_0_14_80)))
 (let ((?x21735 (* ?x21663 l_0_14_83)))
 (let ((?x21658 (* 2.0 l_0_14_79)))
 (let ((?x21733 (* ?x21658 l_0_14_82)))
 (let ((?x20992 (* 2.0 l_0_14_21)))
 (let ((?x21710 (* ?x20992 l_0_14_24)))
 (let ((?x20989 (* 2.0 l_0_14_20)))
 (let ((?x21708 (* ?x20989 l_0_14_23)))
 (let ((?x20986 (* 2.0 l_0_14_19)))
 (let ((?x21701 (* ?x20986 l_0_14_22)))
 (let ((?x21717 (- (- (+ (+ ?x21701 ?x21708) ?x21710) (* (* 4.0 l_0_14_22) l_0_14_26)) (* (* 4.0 l_0_14_23) l_0_14_27))))
 (let ((?x21723 (- (- ?x21717 (* (* 4.0 l_0_14_24) l_0_14_28)) (* (* 4.0 l_0_14_25) l_0_14_29))))
 (let ((?x21729 (- (- ?x21723 (* (* 2.0 l_0_14_4) l_0_14_7)) (* (* 2.0 l_0_14_5) l_0_14_8))))
 (let ((?x21738 (+ (+ (+ (- ?x21729 (* (* 2.0 l_0_14_6) l_0_14_9)) ?x21733) ?x21735) ?x21737)))
 (= (- (- (- (- ?x21738 ?x21740) ?x21743) ?x21746) ?x21749) 0.0))))))))))))))))))))))
(assert
 (let ((?x4516 (* l_0_14_90 l_0_14_90)))
 (let ((?x14283 (* l_0_14_89 l_0_14_89)))
 (let ((?x14367 (* l_0_14_88 l_0_14_88)))
 (let ((?x14325 (* l_0_14_87 l_0_14_87)))
 (let ((?x14330 (* l_0_14_86 l_0_14_86)))
 (let ((?x21668 (* 2.0 l_0_14_81)))
 (let ((?x21669 (* ?x21668 l_0_14_88)))
 (let ((?x21663 (* 2.0 l_0_14_80)))
 (let ((?x21664 (* ?x21663 l_0_14_87)))
 (let ((?x21658 (* 2.0 l_0_14_79)))
 (let ((?x21659 (* ?x21658 l_0_14_86)))
 (let ((?x20992 (* 2.0 l_0_14_21)))
 (let ((?x20993 (* ?x20992 l_0_14_28)))
 (let ((?x20989 (* 2.0 l_0_14_20)))
 (let ((?x20990 (* ?x20989 l_0_14_27)))
 (let ((?x20986 (* 2.0 l_0_14_19)))
 (let ((?x20987 (* ?x20986 l_0_14_26)))
 (let ((?x21792 (- (* (* (- 2.0) l_0_14_11) l_0_14_4) (* (* 2.0 l_0_14_12) l_0_14_5))))
 (let ((?x21798 (+ (+ (+ (- ?x21792 (* (* 2.0 l_0_14_13) l_0_14_6)) ?x20987) ?x20990) ?x20993)))
 (let ((?x21804 (- (- ?x21798 (* (* 2.0 l_0_14_26) l_0_14_26)) (* (* 2.0 l_0_14_27) l_0_14_27))))
 (let ((?x21810 (- (- ?x21804 (* (* 2.0 l_0_14_28) l_0_14_28)) (* (* 2.0 l_0_14_29) l_0_14_29))))
 (let ((?x21816 (+ (+ (+ (- ?x21810 (* (* 2.0 l_0_14_30) l_0_14_30)) ?x21659) ?x21664) ?x21669)))
 (= (- (- (- (- (- ?x21816 ?x14330) ?x14325) ?x14367) ?x14283) ?x4516) 0.0))))))))))))))))))))))))
(assert
 (let ((?x21881 (* l_0_14_9 l_0_14_9)))
 (let ((?x21879 (* l_0_14_85 l_0_14_85)))
 (let ((?x21877 (* l_0_14_84 l_0_14_84)))
 (let ((?x21875 (* l_0_14_83 l_0_14_83)))
 (let ((?x21873 (* l_0_14_82 l_0_14_82)))
 (let ((?x21871 (* l_0_14_8 l_0_14_8)))
 (let ((?x21869 (* l_0_14_7 l_0_14_7)))
 (let ((?x21867 (* l_0_14_25 l_0_14_25)))
 (let ((?x21865 (* l_0_14_24 l_0_14_24)))
 (let ((?x21863 (* l_0_14_23 l_0_14_23)))
 (let ((?x21864 (+ (+ (* (- l_0_14_10) l_0_14_10) (* l_0_14_22 l_0_14_22)) ?x21863)))
 (let ((?x21878 (+ (+ (+ (- (- (+ (+ ?x21864 ?x21865) ?x21867) ?x21869) ?x21871) ?x21873) ?x21875) ?x21877)))
 (= (- (+ ?x21878 ?x21879) ?x21881) 0.0))))))))))))))
(assert
 (let ((?x21749 (* (* 2.0 l_0_14_85) l_0_14_89)))
 (let ((?x21746 (* (* 2.0 l_0_14_84) l_0_14_88)))
 (let ((?x21743 (* (* 2.0 l_0_14_83) l_0_14_87)))
 (let ((?x21740 (* (* 2.0 l_0_14_82) l_0_14_86)))
 (let ((?x21095 (* 2.0 l_0_14_25)))
 (let ((?x21096 (* ?x21095 l_0_14_29)))
 (let ((?x21092 (* 2.0 l_0_14_24)))
 (let ((?x21093 (* ?x21092 l_0_14_28)))
 (let ((?x21089 (* 2.0 l_0_14_23)))
 (let ((?x21090 (* ?x21089 l_0_14_27)))
 (let ((?x21087 (* (* 2.0 l_0_14_22) l_0_14_26)))
 (let ((?x21899 (- (* (* (- 2.0) l_0_14_10) l_0_14_14) (* (* 2.0 l_0_14_11) l_0_14_7))))
 (let ((?x21903 (- (- ?x21899 (* (* 2.0 l_0_14_12) l_0_14_8)) (* (* 2.0 l_0_14_13) l_0_14_9))))
 (let ((?x21910 (+ (+ (+ (+ (+ (+ (+ ?x21903 ?x21087) ?x21090) ?x21093) ?x21096) ?x21740) ?x21743) ?x21746)))
 (= (+ ?x21910 ?x21749) 0.0))))))))))))))))
(assert
 (let ((?x4516 (* l_0_14_90 l_0_14_90)))
 (let ((?x14283 (* l_0_14_89 l_0_14_89)))
 (let ((?x14367 (* l_0_14_88 l_0_14_88)))
 (let ((?x14325 (* l_0_14_87 l_0_14_87)))
 (let ((?x14330 (* l_0_14_86 l_0_14_86)))
 (let ((?x21194 (* l_0_14_30 l_0_14_30)))
 (let ((?x21192 (* l_0_14_29 l_0_14_29)))
 (let ((?x21190 (* l_0_14_28 l_0_14_28)))
 (let ((?x21188 (* l_0_14_27 l_0_14_27)))
 (let ((?x21186 (* l_0_14_26 l_0_14_26)))
 (let ((?x21930 (* l_0_14_15 l_0_14_15)))
 (let ((?x21928 (* l_0_14_14 l_0_14_14)))
 (let ((?x21926 (* l_0_14_13 l_0_14_13)))
 (let ((?x21927 (- (- (* (- l_0_14_11) l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x21926)))
 (let ((?x21936 (+ (+ (+ (+ (+ (- (- ?x21927 ?x21928) ?x21930) ?x21186) ?x21188) ?x21190) ?x21192) ?x21194)))
 (= (+ (+ (+ (+ (+ ?x21936 ?x14330) ?x14325) ?x14367) ?x14283) ?x4516) 0.0)))))))))))))))))
(assert
 (let ((?x20964 (* l_0_14_76 l_0_14_76)))
 (let ((?x15134 (- (* (* (- 2.0) l_0_14_16) l_0_14_19) (* (* 2.0 l_0_14_16) l_0_14_16))))
 (let ((?x5548 (- (- ?x15134 (* (* 2.0 l_0_14_61) l_0_14_64)) (* (* (/ 1.0 2.0) l_0_14_76) l_0_14_79))))
 (= (- ?x5548 ?x20964) 0.0)))))
(assert
 (let ((?x20839 (* 2.0 l_0_14_76)))
 (let ((?x20840 (* ?x20839 l_0_14_77)))
 (let ((?x20823 (* 2.0 l_0_14_18)))
 (let ((?x21349 (* ?x20823 l_0_14_20)))
 (let ((?x20820 (* 2.0 l_0_14_17)))
 (let ((?x21345 (* ?x20820 l_0_14_19)))
 (let ((?x20815 (* 2.0 l_0_14_16)))
 (let ((?x20981 (* ?x20815 l_0_14_19)))
 (let ((?x5574 (- (* (* (- 2.0) l_0_14_106) l_0_14_109) (* (* 2.0 l_0_14_121) l_0_14_124))))
 (let ((?x21957 (- (- ?x5574 (* (* 2.0 l_0_14_136) l_0_14_139)) (* (* 4.0 l_0_14_16) l_0_14_17))))
 (let ((?x21962 (+ (- (- (+ ?x21957 ?x20981) ?x21345) ?x21349) (* (* 8.0 l_0_14_61) l_0_14_64))))
 (let ((?x21966 (- (- ?x21962 (* (* 2.0 l_0_14_62) l_0_14_64)) (* (* 2.0 l_0_14_63) l_0_14_65))))
 (let ((?x21971 (- (- (- ?x21966 ?x20840) (* (* (/ 1.0 2.0) l_0_14_77) l_0_14_79)) (* (* (/ 1.0 2.0) l_0_14_78) l_0_14_80))))
 (= (- ?x21971 (* (* 2.0 l_0_14_91) l_0_14_94)) 0.0)))))))))))))))
(assert
 (let ((?x20839 (* 2.0 l_0_14_76)))
 (let ((?x21016 (* ?x20839 l_0_14_79)))
 (let ((?x20714 (* l_0_14_66 l_0_14_66)))
 (let ((?x20711 (* l_0_14_65 l_0_14_65)))
 (let ((?x20708 (* l_0_14_64 l_0_14_64)))
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x20956 (* ?x20955 l_0_14_47)))
 (let ((?x20952 (* 2.0 l_0_14_31)))
 (let ((?x20953 (* ?x20952 l_0_14_32)))
 (let ((?x20697 (* l_0_14_21 l_0_14_21)))
 (let ((?x20694 (* l_0_14_20 l_0_14_20)))
 (let ((?x15210 (- (- (* (* (- 4.0) l_0_14_16) l_0_14_19) (* l_0_14_19 l_0_14_19)) ?x20694)))
 (let ((?x22004 (- (- (- (- (- (+ (- ?x15210 ?x20697) ?x20953) ?x20956) ?x20708) ?x20711) ?x20714) ?x21016)))
 (let ((?x22010 (- (- ?x22004 (* (* (/ 1.0 4.0) l_0_14_79) l_0_14_79)) (* (* (/ 1.0 4.0) l_0_14_80) l_0_14_80))))
 (= (- ?x22010 (* (* (/ 1.0 4.0) l_0_14_81) l_0_14_81)) 0.0))))))))))))))))
(assert
 (let ((?x20839 (* 2.0 l_0_14_76)))
 (let ((?x21126 (* ?x20839 l_0_14_82)))
 (let ((?x21004 (* 2.0 l_0_14_48)))
 (let ((?x21005 (* ?x21004 l_0_14_50)))
 (let ((?x21001 (* 2.0 l_0_14_47)))
 (let ((?x21002 (* ?x21001 l_0_14_49)))
 (let ((?x20998 (* 2.0 l_0_14_33)))
 (let ((?x20999 (* ?x20998 l_0_14_35)))
 (let ((?x20995 (* 2.0 l_0_14_32)))
 (let ((?x20996 (* ?x20995 l_0_14_34)))
 (let ((?x20992 (* 2.0 l_0_14_21)))
 (let ((?x21710 (* ?x20992 l_0_14_24)))
 (let ((?x20989 (* 2.0 l_0_14_20)))
 (let ((?x21708 (* ?x20989 l_0_14_23)))
 (let ((?x20986 (* 2.0 l_0_14_19)))
 (let ((?x21701 (* ?x20986 l_0_14_22)))
 (let ((?x22023 (- (- (- (- (* (* (- 4.0) l_0_14_16) l_0_14_22) ?x21701) ?x21708) ?x21710) ?x20996)))
 (let ((?x22028 (- (+ (+ (- ?x22023 ?x20999) ?x21002) ?x21005) (* (* 2.0 l_0_14_64) l_0_14_67))))
 (let ((?x22032 (- (- ?x22028 (* (* 2.0 l_0_14_65) l_0_14_68)) (* (* 2.0 l_0_14_66) l_0_14_69))))
 (let ((?x22037 (- (- (- ?x22032 ?x21126) (* (* (/ 1.0 2.0) l_0_14_79) l_0_14_82)) (* (* (/ 1.0 2.0) l_0_14_80) l_0_14_83))))
 (= (- ?x22037 (* (* (/ 1.0 2.0) l_0_14_81) l_0_14_84)) 0.0))))))))))))))))))))))
(assert
 (let ((?x21285 (* l_0_14_78 l_0_14_78)))
 (let ((?x21283 (* l_0_14_77 l_0_14_77)))
 (let ((?x20823 (* 2.0 l_0_14_18)))
 (let ((?x21349 (* ?x20823 l_0_14_20)))
 (let ((?x20820 (* 2.0 l_0_14_17)))
 (let ((?x21345 (* ?x20820 l_0_14_19)))
 (let ((?x15466 (- (* (* (- 2.0) l_0_14_107) l_0_14_109) (* (* 2.0 l_0_14_108) l_0_14_110))))
 (let ((?x4707 (- (- ?x15466 (* (* 2.0 l_0_14_122) l_0_14_124)) (* (* 2.0 l_0_14_123) l_0_14_125))))
 (let ((?x5866 (- (- ?x4707 (* (* 2.0 l_0_14_137) l_0_14_139)) (* (* 2.0 l_0_14_138) l_0_14_140))))
 (let ((?x5859 (- (+ (- (+ ?x5866 ?x21345) (* ?x20820 l_0_14_17)) ?x21349) (* ?x20823 l_0_14_18))))
 (let ((?x15409 (+ (+ ?x5859 (* (* 8.0 l_0_14_62) l_0_14_64)) (* (* 8.0 l_0_14_63) l_0_14_65))))
 (let ((?x15389 (- (- (- (- ?x15409 ?x21283) ?x21285) (* (* 2.0 l_0_14_92) l_0_14_94)) (* (* 2.0 l_0_14_93) l_0_14_95))))
 (= ?x15389 0.0))))))))))))))
(assert
 (let ((?x20720 (* 2.0 l_0_14_78)))
 (let ((?x21506 (* ?x20720 l_0_14_83)))
 (let ((?x20717 (* 2.0 l_0_14_77)))
 (let ((?x21504 (* ?x20717 l_0_14_82)))
 (let ((?x20992 (* 2.0 l_0_14_21)))
 (let ((?x21710 (* ?x20992 l_0_14_24)))
 (let ((?x20989 (* 2.0 l_0_14_20)))
 (let ((?x21708 (* ?x20989 l_0_14_23)))
 (let ((?x20986 (* 2.0 l_0_14_19)))
 (let ((?x21701 (* ?x20986 l_0_14_22)))
 (let ((?x15595 (- (* (* (- 2.0) l_0_14_109) l_0_14_112) (* (* 2.0 l_0_14_110) l_0_14_113))))
 (let ((?x15597 (- (- ?x15595 (* (* 2.0 l_0_14_111) l_0_14_114)) (* (* 2.0 l_0_14_124) l_0_14_127))))
 (let ((?x22064 (- (- ?x15597 (* (* 2.0 l_0_14_125) l_0_14_128)) (* (* 2.0 l_0_14_126) l_0_14_129))))
 (let ((?x22068 (- (- ?x22064 (* (* 2.0 l_0_14_139) l_0_14_142)) (* (* 2.0 l_0_14_140) l_0_14_143))))
 (let ((?x22072 (- (- ?x22068 (* (* 2.0 l_0_14_141) l_0_14_144)) (* (* 4.0 l_0_14_17) l_0_14_22))))
 (let ((?x22077 (+ (+ (+ (- ?x22072 (* (* 4.0 l_0_14_18) l_0_14_23)) ?x21701) ?x21708) ?x21710)))
 (let ((?x22081 (+ (+ ?x22077 (* (* 8.0 l_0_14_64) l_0_14_67)) (* (* 8.0 l_0_14_65) l_0_14_68))))
 (let ((?x22088 (- (- (- (+ ?x22081 (* (* 8.0 l_0_14_66) l_0_14_69)) ?x21504) ?x21506) (* (* 2.0 l_0_14_94) l_0_14_97))))
 (let ((?x22094 (- (- ?x22088 (* (* 2.0 l_0_14_95) l_0_14_98)) (* (* 2.0 l_0_14_96) l_0_14_99))))
 (= ?x22094 0.0)))))))))))))))))))))
(assert
 (let ((?x21671 (* l_0_14_81 l_0_14_81)))
 (let ((?x21666 (* l_0_14_80 l_0_14_80)))
 (let ((?x21661 (* l_0_14_79 l_0_14_79)))
 (let ((?x21004 (* 2.0 l_0_14_48)))
 (let ((?x21005 (* ?x21004 l_0_14_50)))
 (let ((?x21001 (* 2.0 l_0_14_47)))
 (let ((?x21002 (* ?x21001 l_0_14_49)))
 (let ((?x20998 (* 2.0 l_0_14_33)))
 (let ((?x20999 (* ?x20998 l_0_14_35)))
 (let ((?x20995 (* 2.0 l_0_14_32)))
 (let ((?x20996 (* ?x20995 l_0_14_34)))
 (let ((?x22119 (- (* (* (- 2.0) l_0_14_19) l_0_14_19) (* (* 2.0 l_0_14_20) l_0_14_20))))
 (let ((?x22124 (- (+ (+ (- ?x22119 (* (* 2.0 l_0_14_21) l_0_14_21)) ?x20996) ?x20999) ?x21002)))
 (= (- (- (- (- ?x22124 ?x21005) ?x21661) ?x21666) ?x21671) 0.0)))))))))))))))
(assert
 (let ((?x21668 (* 2.0 l_0_14_81)))
 (let ((?x21737 (* ?x21668 l_0_14_84)))
 (let ((?x21663 (* 2.0 l_0_14_80)))
 (let ((?x21735 (* ?x21663 l_0_14_83)))
 (let ((?x21658 (* 2.0 l_0_14_79)))
 (let ((?x21733 (* ?x21658 l_0_14_82)))
 (let ((?x21004 (* 2.0 l_0_14_48)))
 (let ((?x21110 (* ?x21004 l_0_14_53)))
 (let ((?x21001 (* 2.0 l_0_14_47)))
 (let ((?x21106 (* ?x21001 l_0_14_52)))
 (let ((?x20998 (* 2.0 l_0_14_33)))
 (let ((?x21102 (* ?x20998 l_0_14_38)))
 (let ((?x20995 (* 2.0 l_0_14_32)))
 (let ((?x21098 (* ?x20995 l_0_14_37)))
 (let ((?x22144 (- (* (* (- 4.0) l_0_14_19) l_0_14_22) (* (* 4.0 l_0_14_20) l_0_14_23))))
 (let ((?x22149 (- (+ (+ (- ?x22144 (* (* 4.0 l_0_14_21) l_0_14_24)) ?x21098) ?x21102) ?x21106)))
 (= (- (- (- (- ?x22149 ?x21110) ?x21733) ?x21735) ?x21737) 0.0))))))))))))))))))
(assert
 (let ((?x21879 (* l_0_14_85 l_0_14_85)))
 (let ((?x21877 (* l_0_14_84 l_0_14_84)))
 (let ((?x21875 (* l_0_14_83 l_0_14_83)))
 (let ((?x21873 (* l_0_14_82 l_0_14_82)))
 (let ((?x22166 (- (* (* (- 2.0) l_0_14_22) l_0_14_22) (* (* 2.0 l_0_14_23) l_0_14_23))))
 (let ((?x22170 (- (- ?x22166 (* (* 2.0 l_0_14_24) l_0_14_24)) (* (* 2.0 l_0_14_25) l_0_14_25))))
 (= (- (- (- (- ?x22170 ?x21873) ?x21875) ?x21877) ?x21879) 0.0))))))))
(assert
 (let ((?x22184 (- (- (* (- l_0_14_16) l_0_14_16) (* l_0_14_61 l_0_14_61)) (* (* (/ 1.0 4.0) l_0_14_76) l_0_14_76))))
 (= ?x22184 0.0)))
(assert
 (let ((?x22209 (* l_0_14_91 l_0_14_91)))
 (let ((?x6374 (* l_0_14_61 l_0_14_61)))
 (let ((?x22205 (* 4.0 ?x6374)))
 (let ((?x20815 (* 2.0 l_0_14_16)))
 (let ((?x20816 (* ?x20815 l_0_14_17)))
 (let ((?x22198 (* l_0_14_136 l_0_14_136)))
 (let ((?x22199 (- (- (* (- l_0_14_106) l_0_14_106) (* l_0_14_121 l_0_14_121)) ?x22198)))
 (let ((?x22204 (- (+ (- ?x22199 ?x20816) (* 1.0 (* l_0_14_16 l_0_14_16))) (* (* 2.0 l_0_14_61) l_0_14_62))))
 (= (- (- (+ ?x22204 ?x22205) (* (* (/ 1.0 2.0) l_0_14_76) l_0_14_77)) ?x22209) 0.0))))))))))
(assert
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x20956 (* ?x20955 l_0_14_47)))
 (let ((?x20952 (* 2.0 l_0_14_31)))
 (let ((?x20953 (* ?x20952 l_0_14_32)))
 (let ((?x22228 (- (+ (- (* (* (- 2.0) l_0_14_16) l_0_14_22) ?x20953) ?x20956) (* (* 2.0 l_0_14_61) l_0_14_67))))
 (= (- ?x22228 (* (* (/ 1.0 2.0) l_0_14_76) l_0_14_82)) 0.0)))))))
(assert
 (let ((?x22250 (* l_0_14_63 l_0_14_63)))
 (let ((?x22248 (* l_0_14_62 l_0_14_62)))
 (let ((?x21271 (* l_0_14_18 l_0_14_18)))
 (let ((?x21268 (* l_0_14_17 l_0_14_17)))
 (let ((?x20815 (* 2.0 l_0_14_16)))
 (let ((?x20816 (* ?x20815 l_0_14_17)))
 (let ((?x22240 (- (* (* (- 2.0) l_0_14_106) l_0_14_107) (* (* 2.0 l_0_14_121) l_0_14_122))))
 (let ((?x22245 (- (- (+ (- ?x22240 (* (* 2.0 l_0_14_136) l_0_14_137)) ?x20816) ?x21268) ?x21271)))
 (let ((?x22254 (- (- (- (+ ?x22245 (* (* 8.0 l_0_14_61) l_0_14_62)) ?x22248) ?x22250) (* (* (/ 1.0 4.0) l_0_14_77) l_0_14_77))))
 (let ((?x22259 (- (- ?x22254 (* (* (/ 1.0 4.0) l_0_14_78) l_0_14_78)) (* (* 2.0 l_0_14_91) l_0_14_92))))
 (= ?x22259 0.0))))))))))))
(assert
 (let ((?x22309 (* l_0_14_70 l_0_14_70)))
 (let ((?x22307 (* l_0_14_69 l_0_14_69)))
 (let ((?x22305 (* l_0_14_68 l_0_14_68)))
 (let ((?x22303 (* l_0_14_67 l_0_14_67)))
 (let ((?x21004 (* 2.0 l_0_14_48)))
 (let ((?x21110 (* ?x21004 l_0_14_53)))
 (let ((?x21001 (* 2.0 l_0_14_47)))
 (let ((?x21106 (* ?x21001 l_0_14_52)))
 (let ((?x20998 (* 2.0 l_0_14_33)))
 (let ((?x21102 (* ?x20998 l_0_14_38)))
 (let ((?x20995 (* 2.0 l_0_14_32)))
 (let ((?x21098 (* ?x20995 l_0_14_37)))
 (let ((?x21867 (* l_0_14_25 l_0_14_25)))
 (let ((?x21865 (* l_0_14_24 l_0_14_24)))
 (let ((?x22297 (- (- (* (- l_0_14_22) l_0_14_22) (* l_0_14_23 l_0_14_23)) ?x21865)))
 (let ((?x22306 (- (- (+ (+ (- (- (- ?x22297 ?x21867) ?x21098) ?x21102) ?x21106) ?x21110) ?x22303) ?x22305)))
 (let ((?x22316 (- (- (- (- ?x22306 ?x22307) ?x22309) (* (* (/ 1.0 4.0) l_0_14_82) l_0_14_82)) (* (* (/ 1.0 4.0) l_0_14_83) l_0_14_83))))
 (let ((?x22322 (- (- ?x22316 (* (* (/ 1.0 4.0) l_0_14_84) l_0_14_84)) (* (* (/ 1.0 4.0) l_0_14_85) l_0_14_85))))
 (= ?x22322 0.0))))))))))))))))))))
(assert
 (let ((?x22370 (* l_0_14_93 l_0_14_93)))
 (let ((?x22368 (* l_0_14_92 l_0_14_92)))
 (let ((?x22250 (* l_0_14_63 l_0_14_63)))
 (let ((?x22366 (* 4.0 ?x22250)))
 (let ((?x22248 (* l_0_14_62 l_0_14_62)))
 (let ((?x22364 (* 4.0 ?x22248)))
 (let ((?x22358 (* l_0_14_138 l_0_14_138)))
 (let ((?x22356 (* l_0_14_137 l_0_14_137)))
 (let ((?x22354 (* l_0_14_123 l_0_14_123)))
 (let ((?x22352 (* l_0_14_122 l_0_14_122)))
 (let ((?x22353 (- (- (* (- l_0_14_107) l_0_14_107) (* l_0_14_108 l_0_14_108)) ?x22352)))
 (let ((?x22361 (+ (- (- (- ?x22353 ?x22354) ?x22356) ?x22358) (* 1.0 (* l_0_14_17 l_0_14_17)))))
 (let ((?x22369 (- (+ (+ (+ ?x22361 (* 1.0 (* l_0_14_18 l_0_14_18))) ?x22364) ?x22366) ?x22368)))
 (= (- ?x22369 ?x22370) 0.0)))))))))))))))
(assert
 (let ((?x20823 (* 2.0 l_0_14_18)))
 (let ((?x20890 (* ?x20823 l_0_14_23)))
 (let ((?x20820 (* 2.0 l_0_14_17)))
 (let ((?x20888 (* ?x20820 l_0_14_22)))
 (let ((?x22392 (- (* (* (- 2.0) l_0_14_107) l_0_14_112) (* (* 2.0 l_0_14_108) l_0_14_113))))
 (let ((?x22396 (- (- ?x22392 (* (* 2.0 l_0_14_122) l_0_14_127)) (* (* 2.0 l_0_14_123) l_0_14_128))))
 (let ((?x22400 (- (- ?x22396 (* (* 2.0 l_0_14_137) l_0_14_142)) (* (* 2.0 l_0_14_138) l_0_14_143))))
 (let ((?x22406 (+ (+ (+ (+ ?x22400 ?x20888) ?x20890) (* (* 8.0 l_0_14_62) l_0_14_67)) (* (* 8.0 l_0_14_63) l_0_14_68))))
 (let ((?x22410 (- (- ?x22406 (* (* 2.0 l_0_14_92) l_0_14_97)) (* (* 2.0 l_0_14_93) l_0_14_98))))
 (= ?x22410 0.0)))))))))))
(assert
 (let ((?x22475 (* l_0_14_99 l_0_14_99)))
 (let ((?x22473 (* l_0_14_98 l_0_14_98)))
 (let ((?x22471 (* l_0_14_97 l_0_14_97)))
 (let ((?x22309 (* l_0_14_70 l_0_14_70)))
 (let ((?x22469 (* 4.0 ?x22309)))
 (let ((?x22307 (* l_0_14_69 l_0_14_69)))
 (let ((?x22467 (* 4.0 ?x22307)))
 (let ((?x22305 (* l_0_14_68 l_0_14_68)))
 (let ((?x22465 (* 4.0 ?x22305)))
 (let ((?x22303 (* l_0_14_67 l_0_14_67)))
 (let ((?x22463 (* 4.0 ?x22303)))
 (let ((?x22453 (* l_0_14_145 l_0_14_145)))
 (let ((?x22451 (* l_0_14_144 l_0_14_144)))
 (let ((?x22449 (* l_0_14_143 l_0_14_143)))
 (let ((?x22447 (* l_0_14_142 l_0_14_142)))
 (let ((?x22445 (* l_0_14_130 l_0_14_130)))
 (let ((?x22443 (* l_0_14_129 l_0_14_129)))
 (let ((?x22441 (* l_0_14_128 l_0_14_128)))
 (let ((?x22439 (* l_0_14_127 l_0_14_127)))
 (let ((?x22437 (* l_0_14_115 l_0_14_115)))
 (let ((?x22435 (* l_0_14_114 l_0_14_114)))
 (let ((?x15973 (* l_0_14_113 l_0_14_113)))
 (let ((?x22434 (- (- (* (- l_0_14_100) l_0_14_100) (* l_0_14_112 l_0_14_112)) ?x15973)))
 (let ((?x22448 (- (- (- (- (- (- (- ?x22434 ?x22435) ?x22437) ?x22439) ?x22441) ?x22443) ?x22445) ?x22447)))
 (let ((?x22456 (+ (- (- (- ?x22448 ?x22449) ?x22451) ?x22453) (* 1.0 (* l_0_14_22 l_0_14_22)))))
 (let ((?x22460 (+ (+ ?x22456 (* 1.0 (* l_0_14_23 l_0_14_23))) (* 1.0 (* l_0_14_24 l_0_14_24)))))
 (let ((?x22468 (+ (+ (+ (+ ?x22460 (* 1.0 (* l_0_14_25 l_0_14_25))) ?x22463) ?x22465) ?x22467)))
 (= (- (- (- (+ ?x22468 ?x22469) ?x22471) ?x22473) ?x22475) 0.0)))))))))))))))))))))))))))))
(assert
 (= (+ (* (- l_0_14_31) l_0_14_31) (* l_0_14_46 l_0_14_46)) 0.0))
(assert
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x22506 (* ?x20955 l_0_14_49)))
 (= (+ (* (* (- 2.0) l_0_14_31) l_0_14_34) ?x22506) 0.0))))
(assert
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x22512 (* ?x20955 l_0_14_52)))
 (= (+ (* (* (- 2.0) l_0_14_31) l_0_14_37) ?x22512) 0.0))))
(assert
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x22529 (* ?x20955 l_0_14_56)))
 (let ((?x22512 (* ?x20955 l_0_14_52)))
 (let ((?x20952 (* 2.0 l_0_14_31)))
 (let ((?x22522 (* ?x20952 l_0_14_41)))
 (let ((?x22520 (* ?x20952 l_0_14_37)))
 (= (+ (- (- ?x22520 ?x22522) ?x22512) ?x22529) 0.0))))))))
(assert
 (let ((?x22551 (* l_0_14_51 l_0_14_51)))
 (let ((?x22549 (* l_0_14_50 l_0_14_50)))
 (let ((?x22547 (* l_0_14_49 l_0_14_49)))
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x22512 (* ?x20955 l_0_14_52)))
 (let ((?x22544 (* l_0_14_36 l_0_14_36)))
 (let ((?x22542 (* l_0_14_35 l_0_14_35)))
 (let ((?x22543 (- (- (* (* 2.0 l_0_14_31) l_0_14_37) (* l_0_14_34 l_0_14_34)) ?x22542)))
 (= (+ (+ (+ (- (- ?x22543 ?x22544) ?x22512) ?x22547) ?x22549) ?x22551) 0.0))))))))))
(assert
 (let ((?x22577 (* 2.0 l_0_14_51)))
 (let ((?x22578 (* ?x22577 l_0_14_54)))
 (let ((?x22574 (* 2.0 l_0_14_50)))
 (let ((?x22575 (* ?x22574 l_0_14_53)))
 (let ((?x22571 (* 2.0 l_0_14_49)))
 (let ((?x22572 (* ?x22571 l_0_14_52)))
 (let ((?x22568 (* 2.0 l_0_14_36)))
 (let ((?x22569 (* ?x22568 l_0_14_39)))
 (let ((?x22565 (* 2.0 l_0_14_35)))
 (let ((?x22566 (* ?x22565 l_0_14_38)))
 (let ((?x22576 (+ (+ (- (- (* (* (- 2.0) l_0_14_34) l_0_14_37) ?x22566) ?x22569) ?x22572) ?x22575)))
 (= (+ ?x22576 ?x22578) 0.0)))))))))))))
(assert
 (let ((?x22577 (* 2.0 l_0_14_51)))
 (let ((?x22617 (* ?x22577 l_0_14_58)))
 (let ((?x22578 (* ?x22577 l_0_14_54)))
 (let ((?x22574 (* 2.0 l_0_14_50)))
 (let ((?x22614 (* ?x22574 l_0_14_57)))
 (let ((?x22575 (* ?x22574 l_0_14_53)))
 (let ((?x22571 (* 2.0 l_0_14_49)))
 (let ((?x22611 (* ?x22571 l_0_14_56)))
 (let ((?x22572 (* ?x22571 l_0_14_52)))
 (let ((?x22568 (* 2.0 l_0_14_36)))
 (let ((?x22608 (* ?x22568 l_0_14_43)))
 (let ((?x22569 (* ?x22568 l_0_14_39)))
 (let ((?x22565 (* 2.0 l_0_14_35)))
 (let ((?x22605 (* ?x22565 l_0_14_42)))
 (let ((?x22566 (* ?x22565 l_0_14_38)))
 (let ((?x22600 (* 2.0 l_0_14_34)))
 (let ((?x22602 (* ?x22600 l_0_14_41)))
 (let ((?x22601 (* ?x22600 l_0_14_37)))
 (let ((?x22612 (+ (- (- (+ (- (+ (- ?x22601 ?x22602) ?x22566) ?x22605) ?x22569) ?x22608) ?x22572) ?x22611)))
 (= (+ (- (+ (- ?x22612 ?x22575) ?x22614) ?x22578) ?x22617) 0.0)))))))))))))))))))))
(assert
 (let ((?x22644 (* l_0_14_55 l_0_14_55)))
 (let ((?x22642 (* l_0_14_54 l_0_14_54)))
 (let ((?x22640 (* l_0_14_53 l_0_14_53)))
 (let ((?x22638 (* l_0_14_52 l_0_14_52)))
 (let ((?x22636 (* l_0_14_40 l_0_14_40)))
 (let ((?x22634 (* l_0_14_39 l_0_14_39)))
 (let ((?x22635 (- (- (* (- l_0_14_37) l_0_14_37) (* l_0_14_38 l_0_14_38)) ?x22634)))
 (= (+ (+ (+ (+ (- ?x22635 ?x22636) ?x22638) ?x22640) ?x22642) ?x22644) 0.0)))))))))
(assert
 (let ((?x22644 (* l_0_14_55 l_0_14_55)))
 (let ((?x22685 (* (* 2.0 l_0_14_55) l_0_14_59)))
 (let ((?x22642 (* l_0_14_54 l_0_14_54)))
 (let ((?x22681 (* (* 2.0 l_0_14_54) l_0_14_58)))
 (let ((?x22640 (* l_0_14_53 l_0_14_53)))
 (let ((?x22677 (* (* 2.0 l_0_14_53) l_0_14_57)))
 (let ((?x22638 (* l_0_14_52 l_0_14_52)))
 (let ((?x22673 (* (* 2.0 l_0_14_52) l_0_14_56)))
 (let ((?x22636 (* l_0_14_40 l_0_14_40)))
 (let ((?x22669 (* (* 2.0 l_0_14_40) l_0_14_44)))
 (let ((?x22634 (* l_0_14_39 l_0_14_39)))
 (let ((?x22665 (* (* 2.0 l_0_14_39) l_0_14_43)))
 (let ((?x22632 (* l_0_14_38 l_0_14_38)))
 (let ((?x22661 (* (* 2.0 l_0_14_38) l_0_14_42)))
 (let ((?x22662 (- (+ (* (* (- 2.0) l_0_14_37) l_0_14_41) (* l_0_14_37 l_0_14_37)) ?x22661)))
 (let ((?x22675 (- (+ (+ (- (+ (- (+ ?x22662 ?x22632) ?x22665) ?x22634) ?x22669) ?x22636) ?x22673) ?x22638)))
 (= (- (+ (- (+ (- (+ ?x22675 ?x22677) ?x22640) ?x22681) ?x22642) ?x22685) ?x22644) 0.0))))))))))))))))))
(assert
 (let ((?x22740 (* l_0_14_60 l_0_14_60)))
 (let ((?x22738 (* l_0_14_59 l_0_14_59)))
 (let ((?x22736 (* l_0_14_58 l_0_14_58)))
 (let ((?x22734 (* l_0_14_57 l_0_14_57)))
 (let ((?x22732 (* l_0_14_56 l_0_14_56)))
 (let ((?x22685 (* (* 2.0 l_0_14_55) l_0_14_59)))
 (let ((?x22681 (* (* 2.0 l_0_14_54) l_0_14_58)))
 (let ((?x22677 (* (* 2.0 l_0_14_53) l_0_14_57)))
 (let ((?x22673 (* (* 2.0 l_0_14_52) l_0_14_56)))
 (let ((?x22726 (* l_0_14_45 l_0_14_45)))
 (let ((?x22724 (* l_0_14_44 l_0_14_44)))
 (let ((?x22722 (* l_0_14_43 l_0_14_43)))
 (let ((?x22720 (* l_0_14_42 l_0_14_42)))
 (let ((?x22718 (* l_0_14_41 l_0_14_41)))
 (let ((?x22669 (* (* 2.0 l_0_14_40) l_0_14_44)))
 (let ((?x22665 (* (* 2.0 l_0_14_39) l_0_14_43)))
 (let ((?x22661 (* (* 2.0 l_0_14_38) l_0_14_42)))
 (let ((?x22717 (+ (+ (+ (* (* 2.0 l_0_14_37) l_0_14_41) ?x22661) ?x22665) ?x22669)))
 (let ((?x22729 (- (- (- (- (- (- (- ?x22717 ?x22718) ?x22720) ?x22722) ?x22724) ?x22726) ?x22673) ?x22677)))
 (let ((?x22741 (+ (+ (+ (+ (+ (- (- ?x22729 ?x22681) ?x22685) ?x22732) ?x22734) ?x22736) ?x22738) ?x22740)))
 (= ?x22741 0.0))))))))))))))))))))))
(assert
 (= (- (* l_0_14_31 l_0_14_31) (* l_0_14_46 l_0_14_46)) 0.0))
(assert
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x22506 (* ?x20955 l_0_14_49)))
 (= (- (* (* 2.0 l_0_14_31) l_0_14_34) ?x22506) 0.0))))
(assert
 (let ((?x22551 (* l_0_14_51 l_0_14_51)))
 (let ((?x22549 (* l_0_14_50 l_0_14_50)))
 (let ((?x22547 (* l_0_14_49 l_0_14_49)))
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x22529 (* ?x20955 l_0_14_56)))
 (let ((?x22544 (* l_0_14_36 l_0_14_36)))
 (let ((?x22542 (* l_0_14_35 l_0_14_35)))
 (let ((?x7499 (+ (+ (* (* 2.0 l_0_14_31) l_0_14_41) (* l_0_14_34 l_0_14_34)) ?x22542)))
 (= (- (- (- (- (+ ?x7499 ?x22544) ?x22529) ?x22547) ?x22549) ?x22551) 0.0))))))))))
(assert
 (let ((?x22551 (* l_0_14_51 l_0_14_51)))
 (let ((?x22549 (* l_0_14_50 l_0_14_50)))
 (let ((?x22547 (* l_0_14_49 l_0_14_49)))
 (let ((?x22544 (* l_0_14_36 l_0_14_36)))
 (let ((?x7395 (- (+ (+ (* l_0_14_34 l_0_14_34) (* l_0_14_35 l_0_14_35)) ?x22544) ?x22547)))
 (= (- (- ?x7395 ?x22549) ?x22551) 0.0)))))))
(assert
 (let ((?x22577 (* 2.0 l_0_14_51)))
 (let ((?x22578 (* ?x22577 l_0_14_54)))
 (let ((?x22574 (* 2.0 l_0_14_50)))
 (let ((?x22575 (* ?x22574 l_0_14_53)))
 (let ((?x22571 (* 2.0 l_0_14_49)))
 (let ((?x22572 (* ?x22571 l_0_14_52)))
 (let ((?x22568 (* 2.0 l_0_14_36)))
 (let ((?x22569 (* ?x22568 l_0_14_39)))
 (let ((?x22565 (* 2.0 l_0_14_35)))
 (let ((?x22566 (* ?x22565 l_0_14_38)))
 (let ((?x22600 (* 2.0 l_0_14_34)))
 (let ((?x22601 (* ?x22600 l_0_14_37)))
 (= (- (- (- (+ (+ ?x22601 ?x22566) ?x22569) ?x22572) ?x22575) ?x22578) 0.0))))))))))))))
(assert
 (let ((?x22577 (* 2.0 l_0_14_51)))
 (let ((?x22617 (* ?x22577 l_0_14_58)))
 (let ((?x22574 (* 2.0 l_0_14_50)))
 (let ((?x22614 (* ?x22574 l_0_14_57)))
 (let ((?x22571 (* 2.0 l_0_14_49)))
 (let ((?x22611 (* ?x22571 l_0_14_56)))
 (let ((?x22568 (* 2.0 l_0_14_36)))
 (let ((?x22608 (* ?x22568 l_0_14_43)))
 (let ((?x22565 (* 2.0 l_0_14_35)))
 (let ((?x22605 (* ?x22565 l_0_14_42)))
 (let ((?x22600 (* 2.0 l_0_14_34)))
 (let ((?x22602 (* ?x22600 l_0_14_41)))
 (= (- (- (- (+ (+ ?x22602 ?x22605) ?x22608) ?x22611) ?x22614) ?x22617) 0.0))))))))))))))
(assert
 (let ((?x22644 (* l_0_14_55 l_0_14_55)))
 (let ((?x22642 (* l_0_14_54 l_0_14_54)))
 (let ((?x22640 (* l_0_14_53 l_0_14_53)))
 (let ((?x22638 (* l_0_14_52 l_0_14_52)))
 (let ((?x22636 (* l_0_14_40 l_0_14_40)))
 (let ((?x22634 (* l_0_14_39 l_0_14_39)))
 (let ((?x7582 (+ (+ (+ (* l_0_14_37 l_0_14_37) (* l_0_14_38 l_0_14_38)) ?x22634) ?x22636)))
 (= (- (- (- (- ?x7582 ?x22638) ?x22640) ?x22642) ?x22644) 0.0)))))))))
(assert
 (let ((?x22685 (* (* 2.0 l_0_14_55) l_0_14_59)))
 (let ((?x22681 (* (* 2.0 l_0_14_54) l_0_14_58)))
 (let ((?x22677 (* (* 2.0 l_0_14_53) l_0_14_57)))
 (let ((?x22673 (* (* 2.0 l_0_14_52) l_0_14_56)))
 (let ((?x22669 (* (* 2.0 l_0_14_40) l_0_14_44)))
 (let ((?x22665 (* (* 2.0 l_0_14_39) l_0_14_43)))
 (let ((?x22661 (* (* 2.0 l_0_14_38) l_0_14_42)))
 (let ((?x22717 (+ (+ (+ (* (* 2.0 l_0_14_37) l_0_14_41) ?x22661) ?x22665) ?x22669)))
 (= (- (- (- (- ?x22717 ?x22673) ?x22677) ?x22681) ?x22685) 0.0))))))))))
(assert
 (let ((?x22740 (* l_0_14_60 l_0_14_60)))
 (let ((?x22738 (* l_0_14_59 l_0_14_59)))
 (let ((?x22736 (* l_0_14_58 l_0_14_58)))
 (let ((?x22734 (* l_0_14_57 l_0_14_57)))
 (let ((?x22732 (* l_0_14_56 l_0_14_56)))
 (let ((?x22726 (* l_0_14_45 l_0_14_45)))
 (let ((?x22724 (* l_0_14_44 l_0_14_44)))
 (let ((?x22722 (* l_0_14_43 l_0_14_43)))
 (let ((?x22809 (+ (+ (+ (* l_0_14_41 l_0_14_41) (* l_0_14_42 l_0_14_42)) ?x22722) ?x22724)))
 (= (- (- (- (- (- (+ ?x22809 ?x22726) ?x22732) ?x22734) ?x22736) ?x22738) ?x22740) 0.0)))))))))))
(assert
 (= (- (* l_0_14_31 l_0_14_31) (* l_0_14_46 l_0_14_46)) 0.0))
(assert
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x22506 (* ?x20955 l_0_14_49)))
 (= (- (* (* 2.0 l_0_14_31) l_0_14_34) ?x22506) 0.0))))
(assert
 (let ((?x20955 (* 2.0 l_0_14_46)))
 (let ((?x22529 (* ?x20955 l_0_14_56)))
 (let ((?x20952 (* 2.0 l_0_14_31)))
 (let ((?x22522 (* ?x20952 l_0_14_41)))
 (= (- ?x22522 ?x22529) 0.0))))))
(assert
 (let ((?x22577 (* 2.0 l_0_14_51)))
 (let ((?x22617 (* ?x22577 l_0_14_58)))
 (let ((?x22574 (* 2.0 l_0_14_50)))
 (let ((?x22614 (* ?x22574 l_0_14_57)))
 (let ((?x22571 (* 2.0 l_0_14_49)))
 (let ((?x22611 (* ?x22571 l_0_14_56)))
 (let ((?x22568 (* 2.0 l_0_14_36)))
 (let ((?x22608 (* ?x22568 l_0_14_43)))
 (let ((?x22565 (* 2.0 l_0_14_35)))
 (let ((?x22605 (* ?x22565 l_0_14_42)))
 (let ((?x22600 (* 2.0 l_0_14_34)))
 (let ((?x22602 (* ?x22600 l_0_14_41)))
 (= (- (- (- (+ (+ ?x22602 ?x22605) ?x22608) ?x22611) ?x22614) ?x22617) 0.0))))))))))))))
(assert
 (let ((?x22740 (* l_0_14_60 l_0_14_60)))
 (let ((?x22738 (* l_0_14_59 l_0_14_59)))
 (let ((?x22736 (* l_0_14_58 l_0_14_58)))
 (let ((?x22734 (* l_0_14_57 l_0_14_57)))
 (let ((?x22732 (* l_0_14_56 l_0_14_56)))
 (let ((?x22726 (* l_0_14_45 l_0_14_45)))
 (let ((?x22724 (* l_0_14_44 l_0_14_44)))
 (let ((?x22722 (* l_0_14_43 l_0_14_43)))
 (let ((?x22809 (+ (+ (+ (* l_0_14_41 l_0_14_41) (* l_0_14_42 l_0_14_42)) ?x22722) ?x22724)))
 (= (- (- (- (- (- (+ ?x22809 ?x22726) ?x22732) ?x22734) ?x22736) ?x22738) ?x22740) 0.0)))))))))))
(assert
 (>= l_0_14_1 0.0))
(assert
 (>= l_0_14_3 0.0))
(assert
 (>= l_0_14_6 0.0))
(assert
 (>= l_0_14_10 0.0))
(assert
 (>= l_0_14_15 0.0))
(assert
 (>= l_0_14_16 0.0))
(assert
 (>= l_0_14_18 0.0))
(assert
 (>= l_0_14_21 0.0))
(assert
 (>= l_0_14_25 0.0))
(assert
 (>= l_0_14_30 0.0))
(assert
 (>= l_0_14_31 0.0))
(assert
 (>= l_0_14_33 0.0))
(assert
 (>= l_0_14_36 0.0))
(assert
 (>= l_0_14_40 0.0))
(assert
 (>= l_0_14_45 0.0))
(assert
 (>= l_0_14_46 0.0))
(assert
 (>= l_0_14_48 0.0))
(assert
 (>= l_0_14_51 0.0))
(assert
 (>= l_0_14_55 0.0))
(assert
 (>= l_0_14_60 0.0))
(assert
 (>= l_0_14_61 0.0))
(assert
 (>= l_0_14_63 0.0))
(assert
 (>= l_0_14_66 0.0))
(assert
 (>= l_0_14_70 0.0))
(assert
 (>= l_0_14_75 0.0))
(assert
 (>= l_0_14_76 0.0))
(assert
 (>= l_0_14_78 0.0))
(assert
 (>= l_0_14_81 0.0))
(assert
 (>= l_0_14_85 0.0))
(assert
 (>= l_0_14_90 0.0))
(assert
 (>= l_0_14_91 0.0))
(assert
 (>= l_0_14_93 0.0))
(assert
 (>= l_0_14_96 0.0))
(assert
 (>= l_0_14_100 0.0))
(assert
 (>= l_0_14_105 0.0))
(assert
 (>= l_0_14_106 0.0))
(assert
 (>= l_0_14_108 0.0))
(assert
 (>= l_0_14_111 0.0))
(assert
 (>= l_0_14_115 0.0))
(assert
 (>= l_0_14_120 0.0))
(assert
 (>= l_0_14_121 0.0))
(assert
 (>= l_0_14_123 0.0))
(assert
 (>= l_0_14_126 0.0))
(assert
 (>= l_0_14_130 0.0))
(assert
 (>= l_0_14_135 0.0))
(assert
 (>= l_0_14_136 0.0))
(assert
 (>= l_0_14_138 0.0))
(assert
 (>= l_0_14_141 0.0))
(assert
 (>= l_0_14_145 0.0))
(assert
 (>= l_0_14_150 0.0))
(assert
 (= (+ (- l_0_15_3 l_0_15_4) 1.0) 0.0))
(assert
 (= (- (* (- _a_0_) l_0_15_6) l_0_15_8) 0.0))
(assert
 (= (- l_0_15_1 l_0_15_2) 0.0))
(assert
 (let ((?x22889 (- (+ (- (* (- _a_1_) l_0_15_6) l_0_15_3) l_0_15_4) l_0_15_5)))
 (= (+ ?x22889 l_0_15_7) 0.0)))
(assert
 (= (- (* (- _a_2_) l_0_15_6) l_0_15_7) 0.0))
(assert
 (>= l_0_15_1 0.0))
(assert
 (>= l_0_15_2 0.0))
(assert
 (>= l_0_15_3 0.0))
(assert
 (>= l_0_15_4 0.0))
(assert
 (>= l_0_15_5 0.0))
(assert
 (>= l_0_15_6 0.0))
(assert
 (>= l_0_15_7 0.0))
(assert
 (>= l_0_15_8 0.0))
(assert
 (= (+ (- l_0_16_1 l_0_16_2) 2.0) 0.0))
(assert
 (= (+ (- (* (- _a_2_) l_0_16_6) l_0_16_7) 1.0) 0.0))
(assert
 (let ((?x22944 (- (- (- (* (- _a_0_) l_0_16_6) l_0_16_10) l_0_16_8) l_0_16_9)))
 (= (- ?x22944 1.0) 0.0)))
(assert
 (= (- (- l_0_16_3 l_0_16_4) 1.0) 0.0))
(assert
 (let ((?x22973 (- (+ (- (* (- _a_1_) l_0_16_6) l_0_16_3) l_0_16_4) l_0_16_5)))
 (= (+ ?x22973 l_0_16_7) 0.0)))
(assert
 (>= l_0_16_1 0.0))
(assert
 (>= l_0_16_2 0.0))
(assert
 (>= l_0_16_3 0.0))
(assert
 (>= l_0_16_4 0.0))
(assert
 (>= l_0_16_5 0.0))
(assert
 (>= l_0_16_6 0.0))
(assert
 (>= l_0_16_7 0.0))
(assert
 (>= l_0_16_8 0.0))
(assert
 (>= l_0_16_9 0.0))
(assert
 (>= l_0_16_10 0.0))
(assert
 (let ((?x23041 (* 2.0 l_0_17_93)))
 (let ((?x23042 (* ?x23041 l_0_17_98)))
 (let ((?x23038 (* 2.0 l_0_17_92)))
 (let ((?x23039 (* ?x23038 l_0_17_97)))
 (let ((?x23035 (* 2.0 l_0_17_91)))
 (let ((?x23036 (* ?x23035 l_0_17_92)))
 (let ((?x23029 (* 2.0 l_0_17_46)))
 (let ((?x23030 (* ?x23029 l_0_17_47)))
 (let ((?x23026 (* 2.0 l_0_17_31)))
 (let ((?x23027 (* ?x23026 l_0_17_32)))
 (let ((?x23008 (+ (* (* 2.0 l_0_17_77) l_0_17_82) (* (* 2.0 l_0_17_78) l_0_17_83))))
 (let ((?x23003 (- (* (* (* (- 2.0) _a_0_) l_0_17_76) l_0_17_82) (* (* (* 2.0 _a_1_) l_0_17_76) l_0_17_77))))
 (let ((?x23013 (- (- ?x23003 (* _a_2_ ?x23008)) (* (* 2.0 l_0_17_106) l_0_17_112))))
 (let ((?x23019 (- (- ?x23013 (* (* 2.0 l_0_17_121) l_0_17_127)) (* (* 2.0 l_0_17_136) l_0_17_142))))
 (let ((?x23025 (- (- ?x23019 (* (* 2.0 l_0_17_151) l_0_17_157)) (* (* 2.0 l_0_17_166) l_0_17_172))))
 (let ((?x23037 (+ (- (+ (- ?x23025 ?x23027) ?x23030) (* (* 2.0 l_0_17_61) l_0_17_62)) ?x23036)))
 (= (+ (- (- ?x23037 ?x23039) ?x23042) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x23131 (* l_0_17_171 l_0_17_171)))
 (let ((?x23129 (* l_0_17_170 l_0_17_170)))
 (let ((?x23124 (* l_0_17_169 l_0_17_169)))
 (let ((?x23122 (* l_0_17_156 l_0_17_156)))
 (let ((?x23120 (* l_0_17_155 l_0_17_155)))
 (let ((?x23118 (* l_0_17_154 l_0_17_154)))
 (let ((?x23116 (* l_0_17_141 l_0_17_141)))
 (let ((?x23114 (* l_0_17_140 l_0_17_140)))
 (let ((?x23112 (* l_0_17_139 l_0_17_139)))
 (let ((?x23110 (* l_0_17_126 l_0_17_126)))
 (let ((?x23108 (* l_0_17_125 l_0_17_125)))
 (let ((?x23106 (* l_0_17_124 l_0_17_124)))
 (let ((?x23104 (* l_0_17_111 l_0_17_111)))
 (let ((?x23102 (* l_0_17_110 l_0_17_110)))
 (let ((?x23100 (* l_0_17_109 l_0_17_109)))
 (let ((?x23097 (* l_0_17_81 l_0_17_81)))
 (let ((?x23098 (+ (+ (* l_0_17_79 l_0_17_79) (* l_0_17_80 l_0_17_80)) ?x23097)))
 (let ((?x22867 (- _a_0_)))
 (let ((?x23111 (- (- (- (- (- (- (* ?x22867 ?x23098) ?x23100) ?x23102) ?x23104) ?x23106) ?x23108) ?x23110)))
 (let ((?x23125 (- (- (- (- (- (- (- ?x23111 ?x23112) ?x23114) ?x23116) ?x23118) ?x23120) ?x23122) ?x23124)))
 (let ((?x23135 (- (- (- (- ?x23125 (* (* 2.0 l_0_17_17) l_0_17_19)) ?x23129) ?x23131) (* (* 2.0 l_0_17_18) l_0_17_20))))
 (let ((?x23141 (+ (+ ?x23135 (* (* 2.0 l_0_17_2) l_0_17_4)) (* (* 2.0 l_0_17_3) l_0_17_5))))
 (= (- ?x23141 1.0) 0.0))))))))))))))))))))))))
(assert
 (let ((?x23029 (* 2.0 l_0_17_46)))
 (let ((?x23030 (* ?x23029 l_0_17_47)))
 (let ((?x23026 (* 2.0 l_0_17_31)))
 (let ((?x23027 (* ?x23026 l_0_17_32)))
 (let ((?x23191 (* 2.0 l_0_17_102)))
 (let ((?x23192 (* ?x23191 l_0_17_93)))
 (let ((?x23188 (* 2.0 l_0_17_101)))
 (let ((?x23189 (* ?x23188 l_0_17_92)))
 (let ((?x23185 (+ (* (* 2.0 l_0_17_77) l_0_17_86) (* (* 2.0 l_0_17_78) l_0_17_87))))
 (let ((?x23187 (- (* (* (* (- 2.0) _a_0_) l_0_17_76) l_0_17_86) (* _a_2_ ?x23185))))
 (let ((?x23197 (- (- (- (- ?x23187 ?x23189) ?x23192) (* (* 2.0 l_0_17_106) l_0_17_116)) (* (* 2.0 l_0_17_121) l_0_17_131))))
 (let ((?x23201 (- (- ?x23197 (* (* 2.0 l_0_17_136) l_0_17_146)) (* (* 2.0 l_0_17_151) l_0_17_161))))
 (let ((?x23206 (- (- (+ (- ?x23201 (* (* 2.0 l_0_17_166) l_0_17_176)) ?x23027) ?x23030) 1.0)))
 (= ?x23206 0.0)))))))))))))))
(assert
 (let ((?x23035 (* 2.0 l_0_17_91)))
 (let ((?x23228 (* ?x23035 l_0_17_94)))
 (let ((?x23226 (* l_0_17_16 l_0_17_16)))
 (let ((?x23224 (* l_0_17_1 l_0_17_1)))
 (let ((?x23229 (- (- (+ (* (* (* (- 2.0) _a_2_) l_0_17_76) l_0_17_79) ?x23224) ?x23226) ?x23228)))
 (= ?x23229 0.0)))))))
(assert
 (let ((?x23041 (* 2.0 l_0_17_93)))
 (let ((?x23264 (* ?x23041 l_0_17_95)))
 (let ((?x23038 (* 2.0 l_0_17_92)))
 (let ((?x23262 (* ?x23038 l_0_17_94)))
 (let ((?x23243 (+ (* (* 2.0 l_0_17_77) l_0_17_79) (* (* 2.0 l_0_17_78) l_0_17_80))))
 (let ((?x23245 (- (* (* (* (- 2.0) _a_0_) l_0_17_76) l_0_17_79) (* _a_2_ ?x23243))))
 (let ((?x23250 (- (+ ?x23245 (* (* 2.0 l_0_17_1) l_0_17_2)) (* (* 2.0 l_0_17_106) l_0_17_109))))
 (let ((?x23254 (- (- ?x23250 (* (* 2.0 l_0_17_121) l_0_17_124)) (* (* 2.0 l_0_17_136) l_0_17_139))))
 (let ((?x23259 (- (- ?x23254 (* (* 2.0 l_0_17_151) l_0_17_154)) (* (* 2.0 l_0_17_16) l_0_17_17))))
 (= (- (- (- ?x23259 (* (* 2.0 l_0_17_166) l_0_17_169)) ?x23262) ?x23264) 0.0)))))))))))
(assert
 (let ((?x23330 (* l_0_17_96 l_0_17_96)))
 (let ((?x23328 (* l_0_17_95 l_0_17_95)))
 (let ((?x23326 (* l_0_17_94 l_0_17_94)))
 (let ((?x23097 (* l_0_17_81 l_0_17_81)))
 (let ((?x23098 (+ (+ (* l_0_17_79 l_0_17_79) (* l_0_17_80 l_0_17_80)) ?x23097)))
 (let ((?x22902 (- _a_2_)))
 (let ((?x23325 (- (+ (* ?x22902 ?x23098) (* (* 2.0 l_0_17_1) l_0_17_4)) (* (* 2.0 l_0_17_16) l_0_17_19))))
 (= (- (- (- ?x23325 ?x23326) ?x23328) ?x23330) 0.0)))))))))
(assert
 (let ((?x23381 (* (* 2.0 l_0_17_96) l_0_17_99)))
 (let ((?x23378 (* (* 2.0 l_0_17_95) l_0_17_98)))
 (let ((?x23375 (* (* 2.0 l_0_17_94) l_0_17_97)))
 (let ((?x23035 (* 2.0 l_0_17_91)))
 (let ((?x23228 (* ?x23035 l_0_17_94)))
 (let ((?x23029 (* 2.0 l_0_17_46)))
 (let ((?x23369 (* ?x23029 l_0_17_49)))
 (let ((?x23026 (* 2.0 l_0_17_31)))
 (let ((?x23367 (* ?x23026 l_0_17_34)))
 (let ((?x23357 (+ (* (* 2.0 l_0_17_79) l_0_17_82) (* (* 2.0 l_0_17_80) l_0_17_83))))
 (let ((?x23360 (+ ?x23357 (* (* 2.0 l_0_17_81) l_0_17_84))))
 (let ((?x23362 (- (* (* (* (- 2.0) _a_1_) l_0_17_76) l_0_17_79) (* _a_2_ ?x23360))))
 (let ((?x23366 (- (+ ?x23362 (* (* 2.0 l_0_17_1) l_0_17_7)) (* (* 2.0 l_0_17_16) l_0_17_22))))
 (let ((?x23373 (+ (- (+ (- ?x23366 ?x23367) ?x23369) (* (* 2.0 l_0_17_61) l_0_17_64)) ?x23228)))
 (= (- (- (- ?x23373 ?x23375) ?x23378) ?x23381) 0.0))))))))))))))))
(assert
 (let ((?x23029 (* 2.0 l_0_17_46)))
 (let ((?x23369 (* ?x23029 l_0_17_49)))
 (let ((?x23026 (* 2.0 l_0_17_31)))
 (let ((?x23367 (* ?x23026 l_0_17_34)))
 (let ((?x23414 (* 2.0 l_0_17_103)))
 (let ((?x23415 (* ?x23414 l_0_17_96)))
 (let ((?x23191 (* 2.0 l_0_17_102)))
 (let ((?x23412 (* ?x23191 l_0_17_95)))
 (let ((?x23188 (* 2.0 l_0_17_101)))
 (let ((?x16788 (* ?x23188 l_0_17_94)))
 (let ((?x16773 (+ (* (* 2.0 l_0_17_79) l_0_17_86) (* (* 2.0 l_0_17_80) l_0_17_87))))
 (let ((?x16760 (+ ?x16773 (* (* 2.0 l_0_17_81) l_0_17_88))))
 (let ((?x22902 (- _a_2_)))
 (let ((?x23413 (- (- (+ (* ?x22902 ?x16760) (* (* 2.0 l_0_17_1) l_0_17_11)) ?x16788) ?x23412)))
 (let ((?x23420 (- (+ (- (- ?x23413 ?x23415) (* (* 2.0 l_0_17_16) l_0_17_26)) ?x23367) ?x23369)))
 (= ?x23420 0.0)))))))))))))))))
(assert
 (let ((?x23473 (* l_0_17_3 l_0_17_3)))
 (let ((?x23471 (* l_0_17_2 l_0_17_2)))
 (let ((?x23469 (* l_0_17_18 l_0_17_18)))
 (let ((?x23467 (* l_0_17_17 l_0_17_17)))
 (let ((?x23243 (+ (* (* 2.0 l_0_17_77) l_0_17_79) (* (* 2.0 l_0_17_78) l_0_17_80))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x16865 (- (- (* ?x22867 ?x23243) (* (* 2.0 l_0_17_107) l_0_17_109)) (* (* 2.0 l_0_17_108) l_0_17_110))))
 (let ((?x23448 (- (- ?x16865 (* (* 2.0 l_0_17_122) l_0_17_124)) (* (* 2.0 l_0_17_123) l_0_17_125))))
 (let ((?x23454 (- (- ?x23448 (* (* 2.0 l_0_17_137) l_0_17_139)) (* (* 2.0 l_0_17_138) l_0_17_140))))
 (let ((?x23460 (- (- ?x23454 (* (* 2.0 l_0_17_152) l_0_17_154)) (* (* 2.0 l_0_17_153) l_0_17_155))))
 (let ((?x23466 (- (- ?x23460 (* (* 2.0 l_0_17_167) l_0_17_169)) (* (* 2.0 l_0_17_168) l_0_17_170))))
 (= (+ (+ (- (- ?x23466 ?x23467) ?x23469) ?x23471) ?x23473) 0.0)))))))))))))
(assert
 (let ((?x23041 (* 2.0 l_0_17_93)))
 (let ((?x23264 (* ?x23041 l_0_17_95)))
 (let ((?x23038 (* 2.0 l_0_17_92)))
 (let ((?x23262 (* ?x23038 l_0_17_94)))
 (let ((?x23558 (* 2.0 l_0_17_48)))
 (let ((?x23559 (* ?x23558 l_0_17_50)))
 (let ((?x23555 (* 2.0 l_0_17_47)))
 (let ((?x23556 (* ?x23555 l_0_17_49)))
 (let ((?x23552 (* 2.0 l_0_17_33)))
 (let ((?x23553 (* ?x23552 l_0_17_35)))
 (let ((?x23549 (* 2.0 l_0_17_32)))
 (let ((?x23550 (* ?x23549 l_0_17_34)))
 (let ((?x23243 (+ (* (* 2.0 l_0_17_77) l_0_17_79) (* (* 2.0 l_0_17_78) l_0_17_80))))
 (let ((?x23357 (+ (* (* 2.0 l_0_17_79) l_0_17_82) (* (* 2.0 l_0_17_80) l_0_17_83))))
 (let ((?x23360 (+ ?x23357 (* (* 2.0 l_0_17_81) l_0_17_84))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x23498 (- (- (* ?x22867 ?x23360) (* _a_1_ ?x23243)) (* (* 2.0 l_0_17_109) l_0_17_112))))
 (let ((?x23504 (- (- ?x23498 (* (* 2.0 l_0_17_110) l_0_17_113)) (* (* 2.0 l_0_17_111) l_0_17_114))))
 (let ((?x23510 (- (- ?x23504 (* (* 2.0 l_0_17_124) l_0_17_127)) (* (* 2.0 l_0_17_125) l_0_17_128))))
 (let ((?x23516 (- (- ?x23510 (* (* 2.0 l_0_17_126) l_0_17_129)) (* (* 2.0 l_0_17_139) l_0_17_142))))
 (let ((?x23522 (- (- ?x23516 (* (* 2.0 l_0_17_140) l_0_17_143)) (* (* 2.0 l_0_17_141) l_0_17_144))))
 (let ((?x23528 (- (- ?x23522 (* (* 2.0 l_0_17_154) l_0_17_157)) (* (* 2.0 l_0_17_155) l_0_17_158))))
 (let ((?x23534 (- (- ?x23528 (* (* 2.0 l_0_17_156) l_0_17_159)) (* (* 2.0 l_0_17_169) l_0_17_172))))
 (let ((?x23539 (- (- ?x23534 (* (* 2.0 l_0_17_17) l_0_17_22)) (* (* 2.0 l_0_17_170) l_0_17_173))))
 (let ((?x23544 (- (- ?x23539 (* (* 2.0 l_0_17_171) l_0_17_174)) (* (* 2.0 l_0_17_18) l_0_17_23))))
 (let ((?x23548 (+ (+ ?x23544 (* (* 2.0 l_0_17_2) l_0_17_7)) (* (* 2.0 l_0_17_3) l_0_17_8))))
 (let ((?x23563 (- (+ (+ (- (- ?x23548 ?x23550) ?x23553) ?x23556) ?x23559) (* (* 2.0 l_0_17_62) l_0_17_64))))
 (= (+ (+ (- ?x23563 (* (* 2.0 l_0_17_63) l_0_17_65)) ?x23262) ?x23264) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x23558 (* 2.0 l_0_17_48)))
 (let ((?x23559 (* ?x23558 l_0_17_50)))
 (let ((?x23555 (* 2.0 l_0_17_47)))
 (let ((?x23556 (* ?x23555 l_0_17_49)))
 (let ((?x23552 (* 2.0 l_0_17_33)))
 (let ((?x23553 (* ?x23552 l_0_17_35)))
 (let ((?x23549 (* 2.0 l_0_17_32)))
 (let ((?x23550 (* ?x23549 l_0_17_34)))
 (let ((?x16773 (+ (* (* 2.0 l_0_17_79) l_0_17_86) (* (* 2.0 l_0_17_80) l_0_17_87))))
 (let ((?x16760 (+ ?x16773 (* (* 2.0 l_0_17_81) l_0_17_88))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x23620 (+ (- (* ?x22867 ?x16760) (* (* 2.0 l_0_17_109) l_0_17_116)) (* (* 2.0 l_0_17_11) l_0_17_2))))
 (let ((?x23624 (- (- ?x23620 (* (* 2.0 l_0_17_110) l_0_17_117)) (* (* 2.0 l_0_17_111) l_0_17_118))))
 (let ((?x23629 (- (+ ?x23624 (* (* 2.0 l_0_17_12) l_0_17_3)) (* (* 2.0 l_0_17_124) l_0_17_131))))
 (let ((?x23633 (- (- ?x23629 (* (* 2.0 l_0_17_125) l_0_17_132)) (* (* 2.0 l_0_17_126) l_0_17_133))))
 (let ((?x23637 (- (- ?x23633 (* (* 2.0 l_0_17_139) l_0_17_146)) (* (* 2.0 l_0_17_140) l_0_17_147))))
 (let ((?x23641 (- (- ?x23637 (* (* 2.0 l_0_17_141) l_0_17_148)) (* (* 2.0 l_0_17_154) l_0_17_161))))
 (let ((?x23645 (- (- ?x23641 (* (* 2.0 l_0_17_155) l_0_17_162)) (* (* 2.0 l_0_17_156) l_0_17_163))))
 (let ((?x23649 (- (- ?x23645 (* (* 2.0 l_0_17_169) l_0_17_176)) (* (* 2.0 l_0_17_17) l_0_17_26))))
 (let ((?x23653 (- (- ?x23649 (* (* 2.0 l_0_17_170) l_0_17_177)) (* (* 2.0 l_0_17_171) l_0_17_178))))
 (let ((?x23658 (- (+ (+ (- ?x23653 (* (* 2.0 l_0_17_18) l_0_17_27)) ?x23550) ?x23553) ?x23556)))
 (= (- ?x23658 ?x23559) 0.0)))))))))))))))))))))))
(assert
 (let ((?x17317 (* l_0_17_6 l_0_17_6)))
 (let ((?x17320 (* l_0_17_5 l_0_17_5)))
 (let ((?x17308 (* l_0_17_4 l_0_17_4)))
 (let ((?x8906 (* l_0_17_21 l_0_17_21)))
 (let ((?x8903 (- (- (* (- l_0_17_19) l_0_17_19) (* l_0_17_20 l_0_17_20)) ?x8906)))
 (= (+ (+ (+ ?x8903 ?x17308) ?x17320) ?x17317) 0.0)))))))
(assert
 (let ((?x23330 (* l_0_17_96 l_0_17_96)))
 (let ((?x23328 (* l_0_17_95 l_0_17_95)))
 (let ((?x23326 (* l_0_17_94 l_0_17_94)))
 (let ((?x23737 (* l_0_17_66 l_0_17_66)))
 (let ((?x23735 (* l_0_17_65 l_0_17_65)))
 (let ((?x23733 (* l_0_17_64 l_0_17_64)))
 (let ((?x23728 (* l_0_17_51 l_0_17_51)))
 (let ((?x23726 (* l_0_17_50 l_0_17_50)))
 (let ((?x23721 (* l_0_17_49 l_0_17_49)))
 (let ((?x23716 (* l_0_17_36 l_0_17_36)))
 (let ((?x23714 (* l_0_17_35 l_0_17_35)))
 (let ((?x23712 (* l_0_17_34 l_0_17_34)))
 (let ((?x23097 (* l_0_17_81 l_0_17_81)))
 (let ((?x23098 (+ (+ (* l_0_17_79 l_0_17_79) (* l_0_17_80 l_0_17_80)) ?x23097)))
 (let ((?x22885 (- _a_1_)))
 (let ((?x23708 (- (- (* ?x22885 ?x23098) (* (* 2.0 l_0_17_19) l_0_17_22)) (* (* 2.0 l_0_17_20) l_0_17_23))))
 (let ((?x23717 (- (- (- (- ?x23708 (* (* 2.0 l_0_17_21) l_0_17_24)) ?x23712) ?x23714) ?x23716)))
 (let ((?x23725 (+ (+ (+ ?x23717 (* (* 2.0 l_0_17_4) l_0_17_7)) ?x23721) (* (* 2.0 l_0_17_5) l_0_17_8))))
 (let ((?x23734 (- (+ (+ (+ ?x23725 ?x23726) ?x23728) (* (* 2.0 l_0_17_6) l_0_17_9)) ?x23733)))
 (= (+ (+ (+ (- (- ?x23734 ?x23735) ?x23737) ?x23326) ?x23328) ?x23330) 0.0)))))))))))))))))))))
(assert
 (let ((?x23728 (* l_0_17_51 l_0_17_51)))
 (let ((?x23726 (* l_0_17_50 l_0_17_50)))
 (let ((?x23721 (* l_0_17_49 l_0_17_49)))
 (let ((?x23716 (* l_0_17_36 l_0_17_36)))
 (let ((?x23714 (* l_0_17_35 l_0_17_35)))
 (let ((?x23712 (* l_0_17_34 l_0_17_34)))
 (let ((?x23774 (+ (* (* 2.0 l_0_17_11) l_0_17_4) (* (* 2.0 l_0_17_12) l_0_17_5))))
 (let ((?x23779 (- (+ ?x23774 (* (* 2.0 l_0_17_13) l_0_17_6)) (* (* 2.0 l_0_17_19) l_0_17_26))))
 (let ((?x23783 (- (- ?x23779 (* (* 2.0 l_0_17_20) l_0_17_27)) (* (* 2.0 l_0_17_21) l_0_17_28))))
 (= (- (- (- (+ (+ (+ ?x23783 ?x23712) ?x23714) ?x23716) ?x23721) ?x23726) ?x23728) 0.0)))))))))))
(assert
 (let ((?x23381 (* (* 2.0 l_0_17_96) l_0_17_99)))
 (let ((?x23378 (* (* 2.0 l_0_17_95) l_0_17_98)))
 (let ((?x23375 (* (* 2.0 l_0_17_94) l_0_17_97)))
 (let ((?x23841 (* l_0_17_9 l_0_17_9)))
 (let ((?x23839 (* l_0_17_8 l_0_17_8)))
 (let ((?x23837 (* l_0_17_7 l_0_17_7)))
 (let ((?x23825 (* 2.0 l_0_17_51)))
 (let ((?x23826 (* ?x23825 l_0_17_54)))
 (let ((?x23822 (* 2.0 l_0_17_50)))
 (let ((?x23823 (* ?x23822 l_0_17_53)))
 (let ((?x23819 (* 2.0 l_0_17_49)))
 (let ((?x23820 (* ?x23819 l_0_17_52)))
 (let ((?x23816 (* 2.0 l_0_17_36)))
 (let ((?x23817 (* ?x23816 l_0_17_39)))
 (let ((?x23813 (* 2.0 l_0_17_35)))
 (let ((?x23814 (* ?x23813 l_0_17_38)))
 (let ((?x23810 (* 2.0 l_0_17_34)))
 (let ((?x23811 (* ?x23810 l_0_17_37)))
 (let ((?x23808 (* l_0_17_25 l_0_17_25)))
 (let ((?x23806 (* l_0_17_24 l_0_17_24)))
 (let ((?x17508 (* l_0_17_23 l_0_17_23)))
 (let ((?x17505 (* l_0_17_22 l_0_17_22)))
 (let ((?x17513 (* l_0_17_10 l_0_17_10)))
 (let ((?x23357 (+ (* (* 2.0 l_0_17_79) l_0_17_82) (* (* 2.0 l_0_17_80) l_0_17_83))))
 (let ((?x23360 (+ ?x23357 (* (* 2.0 l_0_17_81) l_0_17_84))))
 (let ((?x22885 (- _a_1_)))
 (let ((?x23812 (- (- (- (- (- (+ (* ?x22885 ?x23360) ?x17513) ?x17505) ?x17508) ?x23806) ?x23808) ?x23811)))
 (let ((?x23830 (- (+ (+ (+ (- (- ?x23812 ?x23814) ?x23817) ?x23820) ?x23823) ?x23826) (* (* 2.0 l_0_17_64) l_0_17_67))))
 (let ((?x23836 (- (- ?x23830 (* (* 2.0 l_0_17_65) l_0_17_68)) (* (* 2.0 l_0_17_66) l_0_17_69))))
 (= (+ (+ (+ (+ (+ (+ ?x23836 ?x23837) ?x23839) ?x23841) ?x23375) ?x23378) ?x23381) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x23825 (* 2.0 l_0_17_51)))
 (let ((?x23917 (* ?x23825 l_0_17_58)))
 (let ((?x23826 (* ?x23825 l_0_17_54)))
 (let ((?x23822 (* 2.0 l_0_17_50)))
 (let ((?x23914 (* ?x23822 l_0_17_57)))
 (let ((?x23823 (* ?x23822 l_0_17_53)))
 (let ((?x23819 (* 2.0 l_0_17_49)))
 (let ((?x23911 (* ?x23819 l_0_17_56)))
 (let ((?x23820 (* ?x23819 l_0_17_52)))
 (let ((?x23816 (* 2.0 l_0_17_36)))
 (let ((?x23908 (* ?x23816 l_0_17_43)))
 (let ((?x23817 (* ?x23816 l_0_17_39)))
 (let ((?x23813 (* 2.0 l_0_17_35)))
 (let ((?x23905 (* ?x23813 l_0_17_42)))
 (let ((?x23814 (* ?x23813 l_0_17_38)))
 (let ((?x23810 (* 2.0 l_0_17_34)))
 (let ((?x23902 (* ?x23810 l_0_17_41)))
 (let ((?x23811 (* ?x23810 l_0_17_37)))
 (let ((?x23414 (* 2.0 l_0_17_103)))
 (let ((?x23415 (* ?x23414 l_0_17_96)))
 (let ((?x23191 (* 2.0 l_0_17_102)))
 (let ((?x23412 (* ?x23191 l_0_17_95)))
 (let ((?x23188 (* 2.0 l_0_17_101)))
 (let ((?x16788 (* ?x23188 l_0_17_94)))
 (let ((?x16773 (+ (* (* 2.0 l_0_17_79) l_0_17_86) (* (* 2.0 l_0_17_80) l_0_17_87))))
 (let ((?x16760 (+ ?x16773 (* (* 2.0 l_0_17_81) l_0_17_88))))
 (let ((?x22885 (- _a_1_)))
 (let ((?x23881 (+ (+ (+ (* ?x22885 ?x16760) (* (* 2.0 l_0_17_10) l_0_17_14)) ?x16788) ?x23412)))
 (let ((?x23886 (+ (+ (+ ?x23881 ?x23415) (* (* 2.0 l_0_17_11) l_0_17_7)) (* (* 2.0 l_0_17_12) l_0_17_8))))
 (let ((?x23891 (- (+ ?x23886 (* (* 2.0 l_0_17_13) l_0_17_9)) (* (* 2.0 l_0_17_22) l_0_17_26))))
 (let ((?x23897 (- (- ?x23891 (* (* 2.0 l_0_17_23) l_0_17_27)) (* (* 2.0 l_0_17_24) l_0_17_28))))
 (let ((?x23904 (+ (- (+ (- ?x23897 (* (* 2.0 l_0_17_25) l_0_17_29)) ?x23811) ?x23902) ?x23814)))
 (let ((?x23915 (+ (- (+ (- (- (+ (- ?x23904 ?x23905) ?x23817) ?x23908) ?x23820) ?x23911) ?x23823) ?x23914)))
 (let ((?x23922 (- (- (+ (- ?x23915 ?x23826) ?x23917) (* (* 2.0 l_0_17_64) l_0_17_71)) (* (* 2.0 l_0_17_65) l_0_17_72))))
 (= (- ?x23922 (* (* 2.0 l_0_17_66) l_0_17_73)) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23825 (* 2.0 l_0_17_51)))
 (let ((?x23917 (* ?x23825 l_0_17_58)))
 (let ((?x23822 (* 2.0 l_0_17_50)))
 (let ((?x23914 (* ?x23822 l_0_17_57)))
 (let ((?x23819 (* 2.0 l_0_17_49)))
 (let ((?x23911 (* ?x23819 l_0_17_56)))
 (let ((?x23816 (* 2.0 l_0_17_36)))
 (let ((?x23908 (* ?x23816 l_0_17_43)))
 (let ((?x23813 (* 2.0 l_0_17_35)))
 (let ((?x23905 (* ?x23813 l_0_17_42)))
 (let ((?x23810 (* 2.0 l_0_17_34)))
 (let ((?x23902 (* ?x23810 l_0_17_41)))
 (let ((?x23963 (* l_0_17_30 l_0_17_30)))
 (let ((?x23961 (* l_0_17_29 l_0_17_29)))
 (let ((?x23959 (* l_0_17_28 l_0_17_28)))
 (let ((?x23957 (* l_0_17_27 l_0_17_27)))
 (let ((?x23955 (* l_0_17_26 l_0_17_26)))
 (let ((?x23953 (* l_0_17_15 l_0_17_15)))
 (let ((?x23951 (* l_0_17_14 l_0_17_14)))
 (let ((?x17620 (* l_0_17_13 l_0_17_13)))
 (let ((?x23952 (+ (+ (+ (* l_0_17_11 l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x17620) ?x23951)))
 (let ((?x23965 (+ (- (- (- (- (- (+ ?x23952 ?x23953) ?x23955) ?x23957) ?x23959) ?x23961) ?x23963) ?x23902)))
 (= (- (- (- (+ (+ ?x23965 ?x23905) ?x23908) ?x23911) ?x23914) ?x23917) 0.0))))))))))))))))))))))))
(assert
 (let ((?x23995 (* l_0_17_91 l_0_17_91)))
 (let ((?x23035 (* 2.0 l_0_17_91)))
 (let ((?x23993 (* ?x23035 l_0_17_97)))
 (let ((?x23991 (* l_0_17_61 l_0_17_61)))
 (let ((?x23989 (* l_0_17_46 l_0_17_46)))
 (let ((?x23987 (* l_0_17_31 l_0_17_31)))
 (let ((?x23986 (- (* (* (- _a_1_) l_0_17_76) l_0_17_76) (* (* (* 2.0 _a_2_) l_0_17_76) l_0_17_82))))
 (= (+ (- (- (+ (- ?x23986 ?x23987) ?x23989) ?x23991) ?x23993) ?x23995) 0.0)))))))))
(assert
 (let ((?x24034 (* l_0_17_99 l_0_17_99)))
 (let ((?x24032 (* l_0_17_98 l_0_17_98)))
 (let ((?x24030 (* l_0_17_97 l_0_17_97)))
 (let ((?x23035 (* 2.0 l_0_17_91)))
 (let ((?x23993 (* ?x23035 l_0_17_97)))
 (let ((?x23029 (* 2.0 l_0_17_46)))
 (let ((?x24025 (* ?x23029 l_0_17_52)))
 (let ((?x23026 (* 2.0 l_0_17_31)))
 (let ((?x24023 (* ?x23026 l_0_17_37)))
 (let ((?x24021 (* l_0_17_100 l_0_17_100)))
 (let ((?x24017 (* l_0_17_85 l_0_17_85)))
 (let ((?x24015 (* l_0_17_84 l_0_17_84)))
 (let ((?x24018 (+ (+ (+ (* l_0_17_82 l_0_17_82) (* l_0_17_83 l_0_17_83)) ?x24015) ?x24017)))
 (let ((?x24020 (- (* (* (* (- 2.0) _a_1_) l_0_17_76) l_0_17_82) (* _a_2_ ?x24018))))
 (let ((?x24028 (- (+ (- (- ?x24020 ?x24021) ?x24023) ?x24025) (* (* 2.0 l_0_17_61) l_0_17_67))))
 (= (- (- (- (+ ?x24028 ?x23993) ?x24030) ?x24032) ?x24034) 0.0)))))))))))))))))
(assert
 (let ((?x23029 (* 2.0 l_0_17_46)))
 (let ((?x24101 (* ?x23029 l_0_17_56)))
 (let ((?x24025 (* ?x23029 l_0_17_52)))
 (let ((?x23026 (* 2.0 l_0_17_31)))
 (let ((?x24098 (* ?x23026 l_0_17_41)))
 (let ((?x24023 (* ?x23026 l_0_17_37)))
 (let ((?x23414 (* 2.0 l_0_17_103)))
 (let ((?x24095 (* ?x23414 l_0_17_99)))
 (let ((?x23191 (* 2.0 l_0_17_102)))
 (let ((?x24093 (* ?x23191 l_0_17_98)))
 (let ((?x23188 (* 2.0 l_0_17_101)))
 (let ((?x24091 (* ?x23188 l_0_17_97)))
 (let ((?x24089 (* ?x23188 l_0_17_91)))
 (let ((?x24087 (* (* 2.0 l_0_17_100) l_0_17_104)))
 (let ((?x24077 (+ (* (* 2.0 l_0_17_82) l_0_17_86) (* (* 2.0 l_0_17_83) l_0_17_87))))
 (let ((?x24083 (+ (+ ?x24077 (* (* 2.0 l_0_17_84) l_0_17_88)) (* (* 2.0 l_0_17_85) l_0_17_89))))
 (let ((?x24085 (- (* (* (* (- 2.0) _a_1_) l_0_17_76) l_0_17_86) (* _a_2_ ?x24083))))
 (let ((?x24099 (- (+ (- (- (- (+ (- ?x24085 ?x24087) ?x24089) ?x24091) ?x24093) ?x24095) ?x24023) ?x24098)))
 (= (- (+ (- ?x24099 ?x24025) ?x24101) (* (* 2.0 l_0_17_61) l_0_17_71)) 0.0))))))))))))))))))))
(assert
 (let ((?x24176 (* l_0_17_93 l_0_17_93)))
 (let ((?x24174 (* l_0_17_92 l_0_17_92)))
 (let ((?x24172 (* l_0_17_63 l_0_17_63)))
 (let ((?x24170 (* l_0_17_62 l_0_17_62)))
 (let ((?x24168 (* l_0_17_48 l_0_17_48)))
 (let ((?x24166 (* l_0_17_47 l_0_17_47)))
 (let ((?x24164 (* l_0_17_33 l_0_17_33)))
 (let ((?x24162 (* l_0_17_32 l_0_17_32)))
 (let ((?x23008 (+ (* (* 2.0 l_0_17_77) l_0_17_82) (* (* 2.0 l_0_17_78) l_0_17_83))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x24141 (- (* ?x22867 ?x23008) (* _a_1_ (+ (* l_0_17_77 l_0_17_77) (* l_0_17_78 l_0_17_78))))))
 (let ((?x24145 (- (- ?x24141 (* (* 2.0 l_0_17_107) l_0_17_112)) (* (* 2.0 l_0_17_108) l_0_17_113))))
 (let ((?x24149 (- (- ?x24145 (* (* 2.0 l_0_17_122) l_0_17_127)) (* (* 2.0 l_0_17_123) l_0_17_128))))
 (let ((?x24153 (- (- ?x24149 (* (* 2.0 l_0_17_137) l_0_17_142)) (* (* 2.0 l_0_17_138) l_0_17_143))))
 (let ((?x24157 (- (- ?x24153 (* (* 2.0 l_0_17_152) l_0_17_157)) (* (* 2.0 l_0_17_153) l_0_17_158))))
 (let ((?x24161 (- (- ?x24157 (* (* 2.0 l_0_17_167) l_0_17_172)) (* (* 2.0 l_0_17_168) l_0_17_173))))
 (let ((?x24175 (+ (- (- (+ (+ (- (- ?x24161 ?x24162) ?x24164) ?x24166) ?x24168) ?x24170) ?x24172) ?x24174)))
 (= (+ ?x24175 ?x24176) 0.0)))))))))))))))))))
(assert
 (let ((?x23041 (* 2.0 l_0_17_93)))
 (let ((?x23042 (* ?x23041 l_0_17_98)))
 (let ((?x23038 (* 2.0 l_0_17_92)))
 (let ((?x23039 (* ?x23038 l_0_17_97)))
 (let ((?x23558 (* 2.0 l_0_17_48)))
 (let ((?x24267 (* ?x23558 l_0_17_53)))
 (let ((?x23555 (* 2.0 l_0_17_47)))
 (let ((?x24265 (* ?x23555 l_0_17_52)))
 (let ((?x23552 (* 2.0 l_0_17_33)))
 (let ((?x24263 (* ?x23552 l_0_17_38)))
 (let ((?x23549 (* 2.0 l_0_17_32)))
 (let ((?x24261 (* ?x23549 l_0_17_37)))
 (let ((?x24259 (* l_0_17_175 l_0_17_175)))
 (let ((?x24257 (* l_0_17_174 l_0_17_174)))
 (let ((?x24255 (* l_0_17_173 l_0_17_173)))
 (let ((?x24253 (* l_0_17_172 l_0_17_172)))
 (let ((?x24251 (* l_0_17_160 l_0_17_160)))
 (let ((?x24249 (* l_0_17_159 l_0_17_159)))
 (let ((?x24247 (* l_0_17_158 l_0_17_158)))
 (let ((?x24245 (* l_0_17_157 l_0_17_157)))
 (let ((?x24243 (* l_0_17_145 l_0_17_145)))
 (let ((?x24241 (* l_0_17_144 l_0_17_144)))
 (let ((?x24239 (* l_0_17_143 l_0_17_143)))
 (let ((?x24237 (* l_0_17_142 l_0_17_142)))
 (let ((?x24235 (* l_0_17_130 l_0_17_130)))
 (let ((?x24233 (* l_0_17_129 l_0_17_129)))
 (let ((?x24231 (* l_0_17_128 l_0_17_128)))
 (let ((?x24229 (* l_0_17_127 l_0_17_127)))
 (let ((?x24227 (* l_0_17_115 l_0_17_115)))
 (let ((?x24225 (* l_0_17_114 l_0_17_114)))
 (let ((?x24223 (* l_0_17_113 l_0_17_113)))
 (let ((?x24221 (* l_0_17_112 l_0_17_112)))
 (let ((?x23008 (+ (* (* 2.0 l_0_17_77) l_0_17_82) (* (* 2.0 l_0_17_78) l_0_17_83))))
 (let ((?x24017 (* l_0_17_85 l_0_17_85)))
 (let ((?x24015 (* l_0_17_84 l_0_17_84)))
 (let ((?x24018 (+ (+ (+ (* l_0_17_82 l_0_17_82) (* l_0_17_83 l_0_17_83)) ?x24015) ?x24017)))
 (let ((?x22867 (- _a_0_)))
 (let ((?x24228 (- (- (- (- (- (* ?x22867 ?x24018) (* _a_1_ ?x23008)) ?x24221) ?x24223) ?x24225) ?x24227)))
 (let ((?x24242 (- (- (- (- (- (- (- ?x24228 ?x24229) ?x24231) ?x24233) ?x24235) ?x24237) ?x24239) ?x24241)))
 (let ((?x24256 (- (- (- (- (- (- (- ?x24242 ?x24243) ?x24245) ?x24247) ?x24249) ?x24251) ?x24253) ?x24255)))
 (let ((?x24270 (- (+ (+ (- (- (- (- ?x24256 ?x24257) ?x24259) ?x24261) ?x24263) ?x24265) ?x24267) (* (* 2.0 l_0_17_62) l_0_17_67))))
 (= (+ (+ (- ?x24270 (* (* 2.0 l_0_17_63) l_0_17_68)) ?x23039) ?x23042) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23558 (* 2.0 l_0_17_48)))
 (let ((?x24387 (* ?x23558 l_0_17_57)))
 (let ((?x24267 (* ?x23558 l_0_17_53)))
 (let ((?x23555 (* 2.0 l_0_17_47)))
 (let ((?x24384 (* ?x23555 l_0_17_56)))
 (let ((?x24265 (* ?x23555 l_0_17_52)))
 (let ((?x23552 (* 2.0 l_0_17_33)))
 (let ((?x24381 (* ?x23552 l_0_17_42)))
 (let ((?x24263 (* ?x23552 l_0_17_38)))
 (let ((?x23549 (* 2.0 l_0_17_32)))
 (let ((?x24378 (* ?x23549 l_0_17_41)))
 (let ((?x24261 (* ?x23549 l_0_17_37)))
 (let ((?x23191 (* 2.0 l_0_17_102)))
 (let ((?x23192 (* ?x23191 l_0_17_93)))
 (let ((?x23188 (* 2.0 l_0_17_101)))
 (let ((?x23189 (* ?x23188 l_0_17_92)))
 (let ((?x23185 (+ (* (* 2.0 l_0_17_77) l_0_17_86) (* (* 2.0 l_0_17_78) l_0_17_87))))
 (let ((?x24077 (+ (* (* 2.0 l_0_17_82) l_0_17_86) (* (* 2.0 l_0_17_83) l_0_17_87))))
 (let ((?x24083 (+ (+ ?x24077 (* (* 2.0 l_0_17_84) l_0_17_88)) (* (* 2.0 l_0_17_85) l_0_17_89))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x24319 (- (+ (+ (- (* ?x22867 ?x24083) (* _a_1_ ?x23185)) ?x23189) ?x23192) (* (* 2.0 l_0_17_112) l_0_17_116))))
 (let ((?x24325 (- (- ?x24319 (* (* 2.0 l_0_17_113) l_0_17_117)) (* (* 2.0 l_0_17_114) l_0_17_118))))
 (let ((?x24331 (- (- ?x24325 (* (* 2.0 l_0_17_115) l_0_17_119)) (* (* 2.0 l_0_17_127) l_0_17_131))))
 (let ((?x24337 (- (- ?x24331 (* (* 2.0 l_0_17_128) l_0_17_132)) (* (* 2.0 l_0_17_129) l_0_17_133))))
 (let ((?x24343 (- (- ?x24337 (* (* 2.0 l_0_17_130) l_0_17_134)) (* (* 2.0 l_0_17_142) l_0_17_146))))
 (let ((?x24349 (- (- ?x24343 (* (* 2.0 l_0_17_143) l_0_17_147)) (* (* 2.0 l_0_17_144) l_0_17_148))))
 (let ((?x24355 (- (- ?x24349 (* (* 2.0 l_0_17_145) l_0_17_149)) (* (* 2.0 l_0_17_157) l_0_17_161))))
 (let ((?x24361 (- (- ?x24355 (* (* 2.0 l_0_17_158) l_0_17_162)) (* (* 2.0 l_0_17_159) l_0_17_163))))
 (let ((?x24367 (- (- ?x24361 (* (* 2.0 l_0_17_160) l_0_17_164)) (* (* 2.0 l_0_17_172) l_0_17_176))))
 (let ((?x24373 (- (- ?x24367 (* (* 2.0 l_0_17_173) l_0_17_177)) (* (* 2.0 l_0_17_174) l_0_17_178))))
 (let ((?x24380 (+ (- (+ (- ?x24373 (* (* 2.0 l_0_17_175) l_0_17_179)) ?x24261) ?x24378) ?x24263)))
 (let ((?x24390 (- (+ (- (+ (- (- ?x24380 ?x24381) ?x24265) ?x24384) ?x24267) ?x24387) (* (* 2.0 l_0_17_62) l_0_17_71))))
 (= (- ?x24390 (* (* 2.0 l_0_17_63) l_0_17_72)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24034 (* l_0_17_99 l_0_17_99)))
 (let ((?x24032 (* l_0_17_98 l_0_17_98)))
 (let ((?x24030 (* l_0_17_97 l_0_17_97)))
 (let ((?x24468 (* l_0_17_70 l_0_17_70)))
 (let ((?x24466 (* l_0_17_69 l_0_17_69)))
 (let ((?x24464 (* l_0_17_68 l_0_17_68)))
 (let ((?x24462 (* l_0_17_67 l_0_17_67)))
 (let ((?x24460 (* l_0_17_55 l_0_17_55)))
 (let ((?x24458 (* l_0_17_54 l_0_17_54)))
 (let ((?x24456 (* l_0_17_53 l_0_17_53)))
 (let ((?x24454 (* l_0_17_52 l_0_17_52)))
 (let ((?x24452 (* l_0_17_40 l_0_17_40)))
 (let ((?x24450 (* l_0_17_39 l_0_17_39)))
 (let ((?x24448 (* l_0_17_38 l_0_17_38)))
 (let ((?x24446 (* l_0_17_37 l_0_17_37)))
 (let ((?x24021 (* l_0_17_100 l_0_17_100)))
 (let ((?x24017 (* l_0_17_85 l_0_17_85)))
 (let ((?x24015 (* l_0_17_84 l_0_17_84)))
 (let ((?x24018 (+ (+ (+ (* l_0_17_82 l_0_17_82) (* l_0_17_83 l_0_17_83)) ?x24015) ?x24017)))
 (let ((?x22885 (- _a_1_)))
 (let ((?x24455 (+ (- (- (- (- (+ (* ?x22885 ?x24018) ?x24021) ?x24446) ?x24448) ?x24450) ?x24452) ?x24454)))
 (let ((?x24469 (- (- (- (- (+ (+ (+ ?x24455 ?x24456) ?x24458) ?x24460) ?x24462) ?x24464) ?x24466) ?x24468)))
 (= (+ (+ (+ ?x24469 ?x24030) ?x24032) ?x24034) 0.0))))))))))))))))))))))))
(assert
 (let ((?x24460 (* l_0_17_55 l_0_17_55)))
 (let ((?x24523 (* (* 2.0 l_0_17_55) l_0_17_59)))
 (let ((?x24458 (* l_0_17_54 l_0_17_54)))
 (let ((?x24519 (* (* 2.0 l_0_17_54) l_0_17_58)))
 (let ((?x24456 (* l_0_17_53 l_0_17_53)))
 (let ((?x24515 (* (* 2.0 l_0_17_53) l_0_17_57)))
 (let ((?x24454 (* l_0_17_52 l_0_17_52)))
 (let ((?x24511 (* (* 2.0 l_0_17_52) l_0_17_56)))
 (let ((?x24452 (* l_0_17_40 l_0_17_40)))
 (let ((?x24507 (* (* 2.0 l_0_17_40) l_0_17_44)))
 (let ((?x24450 (* l_0_17_39 l_0_17_39)))
 (let ((?x24503 (* (* 2.0 l_0_17_39) l_0_17_43)))
 (let ((?x24448 (* l_0_17_38 l_0_17_38)))
 (let ((?x24499 (* (* 2.0 l_0_17_38) l_0_17_42)))
 (let ((?x24446 (* l_0_17_37 l_0_17_37)))
 (let ((?x24495 (* (* 2.0 l_0_17_37) l_0_17_41)))
 (let ((?x23414 (* 2.0 l_0_17_103)))
 (let ((?x24095 (* ?x23414 l_0_17_99)))
 (let ((?x23191 (* 2.0 l_0_17_102)))
 (let ((?x24093 (* ?x23191 l_0_17_98)))
 (let ((?x23188 (* 2.0 l_0_17_101)))
 (let ((?x24091 (* ?x23188 l_0_17_97)))
 (let ((?x24087 (* (* 2.0 l_0_17_100) l_0_17_104)))
 (let ((?x24077 (+ (* (* 2.0 l_0_17_82) l_0_17_86) (* (* 2.0 l_0_17_83) l_0_17_87))))
 (let ((?x24083 (+ (+ ?x24077 (* (* 2.0 l_0_17_84) l_0_17_88)) (* (* 2.0 l_0_17_85) l_0_17_89))))
 (let ((?x22885 (- _a_1_)))
 (let ((?x24497 (+ (- (+ (+ (+ (+ (* ?x22885 ?x24083) ?x24087) ?x24091) ?x24093) ?x24095) ?x24495) ?x24446)))
 (let ((?x24512 (+ (+ (- (+ (- (+ (- ?x24497 ?x24499) ?x24448) ?x24503) ?x24450) ?x24507) ?x24452) ?x24511)))
 (let ((?x24525 (- (+ (- (+ (- (+ (- ?x24512 ?x24454) ?x24515) ?x24456) ?x24519) ?x24458) ?x24523) ?x24460)))
 (let ((?x24531 (- (- ?x24525 (* (* 2.0 l_0_17_67) l_0_17_71)) (* (* 2.0 l_0_17_68) l_0_17_72))))
 (let ((?x24537 (- (- ?x24531 (* (* 2.0 l_0_17_69) l_0_17_73)) (* (* 2.0 l_0_17_70) l_0_17_74))))
 (= ?x24537 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x24645 (* l_0_17_75 l_0_17_75)))
 (let ((?x24643 (* l_0_17_74 l_0_17_74)))
 (let ((?x24641 (* l_0_17_73 l_0_17_73)))
 (let ((?x24639 (* l_0_17_72 l_0_17_72)))
 (let ((?x24637 (* l_0_17_71 l_0_17_71)))
 (let ((?x24635 (* l_0_17_60 l_0_17_60)))
 (let ((?x24633 (* l_0_17_59 l_0_17_59)))
 (let ((?x24631 (* l_0_17_58 l_0_17_58)))
 (let ((?x24629 (* l_0_17_57 l_0_17_57)))
 (let ((?x24627 (* l_0_17_56 l_0_17_56)))
 (let ((?x24523 (* (* 2.0 l_0_17_55) l_0_17_59)))
 (let ((?x24519 (* (* 2.0 l_0_17_54) l_0_17_58)))
 (let ((?x24515 (* (* 2.0 l_0_17_53) l_0_17_57)))
 (let ((?x24511 (* (* 2.0 l_0_17_52) l_0_17_56)))
 (let ((?x24621 (* l_0_17_45 l_0_17_45)))
 (let ((?x24619 (* l_0_17_44 l_0_17_44)))
 (let ((?x24617 (* l_0_17_43 l_0_17_43)))
 (let ((?x24615 (* l_0_17_42 l_0_17_42)))
 (let ((?x24613 (* l_0_17_41 l_0_17_41)))
 (let ((?x24507 (* (* 2.0 l_0_17_40) l_0_17_44)))
 (let ((?x24503 (* (* 2.0 l_0_17_39) l_0_17_43)))
 (let ((?x24499 (* (* 2.0 l_0_17_38) l_0_17_42)))
 (let ((?x24495 (* (* 2.0 l_0_17_37) l_0_17_41)))
 (let ((?x24607 (* l_0_17_105 l_0_17_105)))
 (let ((?x24605 (* l_0_17_104 l_0_17_104)))
 (let ((?x24603 (* l_0_17_103 l_0_17_103)))
 (let ((?x24601 (* l_0_17_102 l_0_17_102)))
 (let ((?x24599 (* l_0_17_101 l_0_17_101)))
 (let ((?x24596 (* l_0_17_90 l_0_17_90)))
 (let ((?x24594 (* l_0_17_89 l_0_17_89)))
 (let ((?x24592 (* l_0_17_88 l_0_17_88)))
 (let ((?x24595 (+ (+ (+ (* l_0_17_86 l_0_17_86) (* l_0_17_87 l_0_17_87)) ?x24592) ?x24594)))
 (let ((?x24597 (+ ?x24595 ?x24596)))
 (let ((?x22885 (- _a_1_)))
 (let ((?x24609 (+ (+ (+ (+ (+ (+ (* ?x22885 ?x24597) ?x24599) ?x24601) ?x24603) ?x24605) ?x24607) ?x24495)))
 (let ((?x24620 (- (- (- (- (+ (+ (+ ?x24609 ?x24499) ?x24503) ?x24507) ?x24613) ?x24615) ?x24617) ?x24619)))
 (let ((?x24630 (+ (+ (- (- (- (- (- ?x24620 ?x24621) ?x24511) ?x24515) ?x24519) ?x24523) ?x24627) ?x24629)))
 (let ((?x24644 (- (- (- (- (+ (+ (+ ?x24630 ?x24631) ?x24633) ?x24635) ?x24637) ?x24639) ?x24641) ?x24643)))
 (= (- ?x24644 ?x24645) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23989 (* l_0_17_46 l_0_17_46)))
 (let ((?x23987 (* l_0_17_31 l_0_17_31)))
 (let ((?x23188 (* 2.0 l_0_17_101)))
 (let ((?x24089 (* ?x23188 l_0_17_91)))
 (let ((?x11049 (- (+ (- (* (* (* (- 2.0) _a_2_) l_0_17_76) l_0_17_86) ?x24089) ?x23987) ?x23989)))
 (= ?x11049 0.0)))))))
(assert
 (let ((?x23029 (* 2.0 l_0_17_46)))
 (let ((?x24101 (* ?x23029 l_0_17_56)))
 (let ((?x23026 (* 2.0 l_0_17_31)))
 (let ((?x24098 (* ?x23026 l_0_17_41)))
 (let ((?x24607 (* l_0_17_105 l_0_17_105)))
 (let ((?x24605 (* l_0_17_104 l_0_17_104)))
 (let ((?x24603 (* l_0_17_103 l_0_17_103)))
 (let ((?x24601 (* l_0_17_102 l_0_17_102)))
 (let ((?x24599 (* l_0_17_101 l_0_17_101)))
 (let ((?x24596 (* l_0_17_90 l_0_17_90)))
 (let ((?x24594 (* l_0_17_89 l_0_17_89)))
 (let ((?x24592 (* l_0_17_88 l_0_17_88)))
 (let ((?x24595 (+ (+ (+ (* l_0_17_86 l_0_17_86) (* l_0_17_87 l_0_17_87)) ?x24592) ?x24594)))
 (let ((?x24597 (+ ?x24595 ?x24596)))
 (let ((?x22902 (- _a_2_)))
 (let ((?x24661 (+ (- (- (- (- (- (* ?x22902 ?x24597) ?x24599) ?x24601) ?x24603) ?x24605) ?x24607) ?x24098)))
 (= (- ?x24661 ?x24101) 0.0))))))))))))))))))
(assert
 (let ((?x24168 (* l_0_17_48 l_0_17_48)))
 (let ((?x24166 (* l_0_17_47 l_0_17_47)))
 (let ((?x24164 (* l_0_17_33 l_0_17_33)))
 (let ((?x24162 (* l_0_17_32 l_0_17_32)))
 (let ((?x23185 (+ (* (* 2.0 l_0_17_77) l_0_17_86) (* (* 2.0 l_0_17_78) l_0_17_87))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x24681 (- (- (* ?x22867 ?x23185) (* (* 2.0 l_0_17_107) l_0_17_116)) (* (* 2.0 l_0_17_108) l_0_17_117))))
 (let ((?x24685 (- (- ?x24681 (* (* 2.0 l_0_17_122) l_0_17_131)) (* (* 2.0 l_0_17_123) l_0_17_132))))
 (let ((?x24689 (- (- ?x24685 (* (* 2.0 l_0_17_137) l_0_17_146)) (* (* 2.0 l_0_17_138) l_0_17_147))))
 (let ((?x24693 (- (- ?x24689 (* (* 2.0 l_0_17_152) l_0_17_161)) (* (* 2.0 l_0_17_153) l_0_17_162))))
 (let ((?x24697 (- (- ?x24693 (* (* 2.0 l_0_17_167) l_0_17_176)) (* (* 2.0 l_0_17_168) l_0_17_177))))
 (= (- (- (+ (+ ?x24697 ?x24162) ?x24164) ?x24166) ?x24168) 0.0)))))))))))))
(assert
 (let ((?x23558 (* 2.0 l_0_17_48)))
 (let ((?x24387 (* ?x23558 l_0_17_57)))
 (let ((?x23555 (* 2.0 l_0_17_47)))
 (let ((?x24384 (* ?x23555 l_0_17_56)))
 (let ((?x23552 (* 2.0 l_0_17_33)))
 (let ((?x24381 (* ?x23552 l_0_17_42)))
 (let ((?x23549 (* 2.0 l_0_17_32)))
 (let ((?x24378 (* ?x23549 l_0_17_41)))
 (let ((?x24796 (* l_0_17_180 l_0_17_180)))
 (let ((?x24794 (* l_0_17_179 l_0_17_179)))
 (let ((?x24792 (* l_0_17_178 l_0_17_178)))
 (let ((?x24790 (* l_0_17_177 l_0_17_177)))
 (let ((?x24788 (* l_0_17_176 l_0_17_176)))
 (let ((?x24786 (* l_0_17_165 l_0_17_165)))
 (let ((?x24784 (* l_0_17_164 l_0_17_164)))
 (let ((?x24782 (* l_0_17_163 l_0_17_163)))
 (let ((?x24780 (* l_0_17_162 l_0_17_162)))
 (let ((?x24778 (* l_0_17_161 l_0_17_161)))
 (let ((?x24776 (* l_0_17_150 l_0_17_150)))
 (let ((?x24774 (* l_0_17_149 l_0_17_149)))
 (let ((?x24772 (* l_0_17_148 l_0_17_148)))
 (let ((?x24770 (* l_0_17_147 l_0_17_147)))
 (let ((?x24768 (* l_0_17_146 l_0_17_146)))
 (let ((?x24766 (* l_0_17_135 l_0_17_135)))
 (let ((?x24764 (* l_0_17_134 l_0_17_134)))
 (let ((?x24762 (* l_0_17_133 l_0_17_133)))
 (let ((?x24760 (* l_0_17_132 l_0_17_132)))
 (let ((?x24758 (* l_0_17_131 l_0_17_131)))
 (let ((?x24756 (* l_0_17_120 l_0_17_120)))
 (let ((?x24754 (* l_0_17_119 l_0_17_119)))
 (let ((?x24752 (* l_0_17_118 l_0_17_118)))
 (let ((?x24750 (* l_0_17_117 l_0_17_117)))
 (let ((?x18539 (* l_0_17_116 l_0_17_116)))
 (let ((?x24596 (* l_0_17_90 l_0_17_90)))
 (let ((?x24594 (* l_0_17_89 l_0_17_89)))
 (let ((?x24592 (* l_0_17_88 l_0_17_88)))
 (let ((?x24595 (+ (+ (+ (* l_0_17_86 l_0_17_86) (* l_0_17_87 l_0_17_87)) ?x24592) ?x24594)))
 (let ((?x24597 (+ ?x24595 ?x24596)))
 (let ((?x22867 (- _a_0_)))
 (let ((?x24759 (- (- (- (- (- (- (* ?x22867 ?x24597) ?x18539) ?x24750) ?x24752) ?x24754) ?x24756) ?x24758)))
 (let ((?x24773 (- (- (- (- (- (- (- ?x24759 ?x24760) ?x24762) ?x24764) ?x24766) ?x24768) ?x24770) ?x24772)))
 (let ((?x24787 (- (- (- (- (- (- (- ?x24773 ?x24774) ?x24776) ?x24778) ?x24780) ?x24782) ?x24784) ?x24786)))
 (let ((?x24799 (+ (+ (- (- (- (- (- ?x24787 ?x24788) ?x24790) ?x24792) ?x24794) ?x24796) ?x24378) ?x24381)))
 (= (- (- ?x24799 ?x24384) ?x24387) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24635 (* l_0_17_60 l_0_17_60)))
 (let ((?x24633 (* l_0_17_59 l_0_17_59)))
 (let ((?x24631 (* l_0_17_58 l_0_17_58)))
 (let ((?x24629 (* l_0_17_57 l_0_17_57)))
 (let ((?x24627 (* l_0_17_56 l_0_17_56)))
 (let ((?x24621 (* l_0_17_45 l_0_17_45)))
 (let ((?x24619 (* l_0_17_44 l_0_17_44)))
 (let ((?x24617 (* l_0_17_43 l_0_17_43)))
 (let ((?x11381 (+ (+ (+ (* l_0_17_41 l_0_17_41) (* l_0_17_42 l_0_17_42)) ?x24617) ?x24619)))
 (= (- (- (- (- (- (+ ?x11381 ?x24621) ?x24627) ?x24629) ?x24631) ?x24633) ?x24635) 0.0)))))))))))
(assert
 (let ((?x23035 (* 2.0 l_0_17_91)))
 (let ((?x23036 (* ?x23035 l_0_17_92)))
 (let ((?x24843 (* l_0_17_166 l_0_17_166)))
 (let ((?x11393 (* l_0_17_151 l_0_17_151)))
 (let ((?x11379 (* l_0_17_136 l_0_17_136)))
 (let ((?x11426 (* l_0_17_121 l_0_17_121)))
 (let ((?x11369 (* l_0_17_106 l_0_17_106)))
 (let ((?x11396 (- (* (* (- _a_0_) l_0_17_76) l_0_17_76) (* (* (* 2.0 _a_2_) l_0_17_76) l_0_17_77))))
 (= (- (- (- (- (- (- ?x11396 ?x11369) ?x11426) ?x11379) ?x11393) ?x24843) ?x23036) 0.0))))))))))
(assert
 (let ((?x24176 (* l_0_17_93 l_0_17_93)))
 (let ((?x24174 (* l_0_17_92 l_0_17_92)))
 (let ((?x11505 (- (* (* (* (- 2.0) _a_0_) l_0_17_76) l_0_17_77) (* _a_2_ (+ (* l_0_17_77 l_0_17_77) (* l_0_17_78 l_0_17_78))))))
 (let ((?x24856 (- (- ?x11505 (* (* 2.0 l_0_17_106) l_0_17_107)) (* (* 2.0 l_0_17_121) l_0_17_122))))
 (let ((?x24860 (- (- ?x24856 (* (* 2.0 l_0_17_136) l_0_17_137)) (* (* 2.0 l_0_17_151) l_0_17_152))))
 (= (- (- (- ?x24860 (* (* 2.0 l_0_17_166) l_0_17_167)) ?x24174) ?x24176) 0.0)))))))
(assert
 (let ((?x24886 (* l_0_17_168 l_0_17_168)))
 (let ((?x24884 (* l_0_17_167 l_0_17_167)))
 (let ((?x24882 (* l_0_17_153 l_0_17_153)))
 (let ((?x24880 (* l_0_17_152 l_0_17_152)))
 (let ((?x24878 (* l_0_17_138 l_0_17_138)))
 (let ((?x24876 (* l_0_17_137 l_0_17_137)))
 (let ((?x24874 (* l_0_17_123 l_0_17_123)))
 (let ((?x24872 (* l_0_17_122 l_0_17_122)))
 (let ((?x18899 (* l_0_17_108 l_0_17_108)))
 (let ((?x18972 (* l_0_17_107 l_0_17_107)))
 (let ((?x24138 (* l_0_17_78 l_0_17_78)))
 (let ((?x9884 (* l_0_17_77 l_0_17_77)))
 (let ((?x24139 (+ ?x9884 ?x24138)))
 (let ((?x22867 (- _a_0_)))
 (let ((?x24879 (- (- (- (- (- (- (* ?x22867 ?x24139) ?x18972) ?x18899) ?x24872) ?x24874) ?x24876) ?x24878)))
 (= (- (- (- (- ?x24879 ?x24880) ?x24882) ?x24884) ?x24886) 0.0)))))))))))))))))
(assert
 (let ((?x23995 (* l_0_17_91 l_0_17_91)))
 (= (- (* (* (- _a_2_) l_0_17_76) l_0_17_76) ?x23995) 0.0)))
(assert
 (>= l_0_17_1 0.0))
(assert
 (>= l_0_17_3 0.0))
(assert
 (>= l_0_17_6 0.0))
(assert
 (>= l_0_17_10 0.0))
(assert
 (>= l_0_17_15 0.0))
(assert
 (>= l_0_17_16 0.0))
(assert
 (>= l_0_17_18 0.0))
(assert
 (>= l_0_17_21 0.0))
(assert
 (>= l_0_17_25 0.0))
(assert
 (>= l_0_17_30 0.0))
(assert
 (>= l_0_17_31 0.0))
(assert
 (>= l_0_17_33 0.0))
(assert
 (>= l_0_17_36 0.0))
(assert
 (>= l_0_17_40 0.0))
(assert
 (>= l_0_17_45 0.0))
(assert
 (>= l_0_17_46 0.0))
(assert
 (>= l_0_17_48 0.0))
(assert
 (>= l_0_17_51 0.0))
(assert
 (>= l_0_17_55 0.0))
(assert
 (>= l_0_17_60 0.0))
(assert
 (>= l_0_17_61 0.0))
(assert
 (>= l_0_17_63 0.0))
(assert
 (>= l_0_17_66 0.0))
(assert
 (>= l_0_17_70 0.0))
(assert
 (>= l_0_17_75 0.0))
(assert
 (>= l_0_17_76 0.0))
(assert
 (>= l_0_17_78 0.0))
(assert
 (>= l_0_17_81 0.0))
(assert
 (>= l_0_17_85 0.0))
(assert
 (>= l_0_17_90 0.0))
(assert
 (>= l_0_17_91 0.0))
(assert
 (>= l_0_17_93 0.0))
(assert
 (>= l_0_17_96 0.0))
(assert
 (>= l_0_17_100 0.0))
(assert
 (>= l_0_17_105 0.0))
(assert
 (>= l_0_17_106 0.0))
(assert
 (>= l_0_17_108 0.0))
(assert
 (>= l_0_17_111 0.0))
(assert
 (>= l_0_17_115 0.0))
(assert
 (>= l_0_17_120 0.0))
(assert
 (>= l_0_17_121 0.0))
(assert
 (>= l_0_17_123 0.0))
(assert
 (>= l_0_17_126 0.0))
(assert
 (>= l_0_17_130 0.0))
(assert
 (>= l_0_17_135 0.0))
(assert
 (>= l_0_17_136 0.0))
(assert
 (>= l_0_17_138 0.0))
(assert
 (>= l_0_17_141 0.0))
(assert
 (>= l_0_17_145 0.0))
(assert
 (>= l_0_17_150 0.0))
(assert
 (>= l_0_17_151 0.0))
(assert
 (>= l_0_17_153 0.0))
(assert
 (>= l_0_17_156 0.0))
(assert
 (>= l_0_17_160 0.0))
(assert
 (>= l_0_17_165 0.0))
(assert
 (>= l_0_17_166 0.0))
(assert
 (>= l_0_17_168 0.0))
(assert
 (>= l_0_17_171 0.0))
(assert
 (>= l_0_17_175 0.0))
(assert
 (>= l_0_17_180 0.0))
(assert
 (let ((?x25023 (* l_0_18_186 l_0_18_186)))
 (let ((?x25021 (* l_0_18_185 l_0_18_185)))
 (let ((?x25019 (* l_0_18_184 l_0_18_184)))
 (let ((?x25014 (* l_0_18_171 l_0_18_171)))
 (let ((?x25012 (* l_0_18_170 l_0_18_170)))
 (let ((?x25007 (* l_0_18_169 l_0_18_169)))
 (let ((?x25005 (* l_0_18_156 l_0_18_156)))
 (let ((?x25003 (* l_0_18_155 l_0_18_155)))
 (let ((?x25001 (* l_0_18_154 l_0_18_154)))
 (let ((?x24999 (* l_0_18_141 l_0_18_141)))
 (let ((?x24997 (* l_0_18_140 l_0_18_140)))
 (let ((?x24995 (* l_0_18_139 l_0_18_139)))
 (let ((?x24993 (* l_0_18_126 l_0_18_126)))
 (let ((?x24991 (* l_0_18_125 l_0_18_125)))
 (let ((?x24989 (* l_0_18_124 l_0_18_124)))
 (let ((?x24987 (* l_0_18_111 l_0_18_111)))
 (let ((?x24985 (* l_0_18_110 l_0_18_110)))
 (let ((?x24983 (* l_0_18_109 l_0_18_109)))
 (let ((?x24980 (* l_0_18_81 l_0_18_81)))
 (let ((?x24981 (+ (+ (* l_0_18_79 l_0_18_79) (* l_0_18_80 l_0_18_80)) ?x24980)))
 (let ((?x22867 (- _a_0_)))
 (let ((?x24994 (- (- (- (- (- (- (* ?x22867 ?x24981) ?x24983) ?x24985) ?x24987) ?x24989) ?x24991) ?x24993)))
 (let ((?x25008 (- (- (- (- (- (- (- ?x24994 ?x24995) ?x24997) ?x24999) ?x25001) ?x25003) ?x25005) ?x25007)))
 (let ((?x25018 (- (- (- (- ?x25008 (* (* 2.0 l_0_18_17) l_0_18_19)) ?x25012) ?x25014) (* (* 2.0 l_0_18_18) l_0_18_20))))
 (let ((?x25027 (+ (- (- (- ?x25018 ?x25019) ?x25021) ?x25023) (* (* 2.0 l_0_18_2) l_0_18_4))))
 (= (+ (+ ?x25027 (* (* 2.0 l_0_18_3) l_0_18_5)) 1.0) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x25090 (* 2.0 l_0_18_46)))
 (let ((?x25091 (* ?x25090 l_0_18_47)))
 (let ((?x25087 (* 2.0 l_0_18_31)))
 (let ((?x25088 (* ?x25087 l_0_18_32)))
 (let ((?x25066 (* 2.0 l_0_18_102)))
 (let ((?x25067 (* ?x25066 l_0_18_93)))
 (let ((?x25063 (* 2.0 l_0_18_101)))
 (let ((?x25064 (* ?x25063 l_0_18_92)))
 (let ((?x25060 (+ (* (* 2.0 l_0_18_77) l_0_18_86) (* (* 2.0 l_0_18_78) l_0_18_87))))
 (let ((?x25062 (- (* (* (* (- 2.0) _a_0_) l_0_18_76) l_0_18_86) (* _a_2_ ?x25060))))
 (let ((?x25074 (- (- (- (- ?x25062 ?x25064) ?x25067) (* (* 2.0 l_0_18_106) l_0_18_116)) (* (* 2.0 l_0_18_121) l_0_18_131))))
 (let ((?x25080 (- (- ?x25074 (* (* 2.0 l_0_18_136) l_0_18_146)) (* (* 2.0 l_0_18_151) l_0_18_161))))
 (let ((?x25086 (- (- ?x25080 (* (* 2.0 l_0_18_166) l_0_18_176)) (* (* 2.0 l_0_18_181) l_0_18_191))))
 (= (+ (- (+ ?x25086 ?x25088) ?x25091) 1.0) 0.0)))))))))))))))
(assert
 (let ((?x25146 (* 2.0 l_0_18_93)))
 (let ((?x25147 (* ?x25146 l_0_18_98)))
 (let ((?x25143 (* 2.0 l_0_18_92)))
 (let ((?x25144 (* ?x25143 l_0_18_97)))
 (let ((?x25140 (* 2.0 l_0_18_91)))
 (let ((?x25141 (* ?x25140 l_0_18_92)))
 (let ((?x25090 (* 2.0 l_0_18_46)))
 (let ((?x25091 (* ?x25090 l_0_18_47)))
 (let ((?x25087 (* 2.0 l_0_18_31)))
 (let ((?x25088 (* ?x25087 l_0_18_32)))
 (let ((?x25120 (+ (* (* 2.0 l_0_18_77) l_0_18_82) (* (* 2.0 l_0_18_78) l_0_18_83))))
 (let ((?x25117 (- (* (* (* (- 2.0) _a_0_) l_0_18_76) l_0_18_82) (* (* (* 2.0 _a_1_) l_0_18_76) l_0_18_77))))
 (let ((?x25124 (- (- ?x25117 (* _a_2_ ?x25120)) (* (* 2.0 l_0_18_106) l_0_18_112))))
 (let ((?x25128 (- (- ?x25124 (* (* 2.0 l_0_18_121) l_0_18_127)) (* (* 2.0 l_0_18_136) l_0_18_142))))
 (let ((?x25132 (- (- ?x25128 (* (* 2.0 l_0_18_151) l_0_18_157)) (* (* 2.0 l_0_18_166) l_0_18_172))))
 (let ((?x25139 (- (+ (- (- ?x25132 (* (* 2.0 l_0_18_181) l_0_18_187)) ?x25088) ?x25091) (* (* 2.0 l_0_18_61) l_0_18_62))))
 (= (- (- (- (+ ?x25139 ?x25141) ?x25144) ?x25147) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x25140 (* 2.0 l_0_18_91)))
 (let ((?x25176 (* ?x25140 l_0_18_94)))
 (let ((?x12172 (* l_0_18_16 l_0_18_16)))
 (let ((?x12173 (* l_0_18_1 l_0_18_1)))
 (let ((?x25177 (- (- (+ (* (* (* (- 2.0) _a_2_) l_0_18_76) l_0_18_79) ?x12173) ?x12172) ?x25176)))
 (= ?x25177 0.0)))))))
(assert
 (let ((?x25146 (* 2.0 l_0_18_93)))
 (let ((?x25209 (* ?x25146 l_0_18_95)))
 (let ((?x25143 (* 2.0 l_0_18_92)))
 (let ((?x25207 (* ?x25143 l_0_18_94)))
 (let ((?x25186 (+ (* (* 2.0 l_0_18_77) l_0_18_79) (* (* 2.0 l_0_18_78) l_0_18_80))))
 (let ((?x25188 (- (* (* (* (- 2.0) _a_0_) l_0_18_76) l_0_18_79) (* _a_2_ ?x25186))))
 (let ((?x25193 (- (+ ?x25188 (* (* 2.0 l_0_18_1) l_0_18_2)) (* (* 2.0 l_0_18_106) l_0_18_109))))
 (let ((?x25197 (- (- ?x25193 (* (* 2.0 l_0_18_121) l_0_18_124)) (* (* 2.0 l_0_18_136) l_0_18_139))))
 (let ((?x25202 (- (- ?x25197 (* (* 2.0 l_0_18_151) l_0_18_154)) (* (* 2.0 l_0_18_16) l_0_18_17))))
 (let ((?x25206 (- (- ?x25202 (* (* 2.0 l_0_18_166) l_0_18_169)) (* (* 2.0 l_0_18_181) l_0_18_184))))
 (= (- (- ?x25206 ?x25207) ?x25209) 0.0))))))))))))
(assert
 (let ((?x25270 (* l_0_18_96 l_0_18_96)))
 (let ((?x25268 (* l_0_18_95 l_0_18_95)))
 (let ((?x25266 (* l_0_18_94 l_0_18_94)))
 (let ((?x24980 (* l_0_18_81 l_0_18_81)))
 (let ((?x24981 (+ (+ (* l_0_18_79 l_0_18_79) (* l_0_18_80 l_0_18_80)) ?x24980)))
 (let ((?x22902 (- _a_2_)))
 (let ((?x25265 (- (+ (* ?x22902 ?x24981) (* (* 2.0 l_0_18_1) l_0_18_4)) (* (* 2.0 l_0_18_16) l_0_18_19))))
 (= (- (- (- ?x25265 ?x25266) ?x25268) ?x25270) 0.0)))))))))
(assert
 (let ((?x25314 (* (* 2.0 l_0_18_96) l_0_18_99)))
 (let ((?x25311 (* (* 2.0 l_0_18_95) l_0_18_98)))
 (let ((?x25308 (* (* 2.0 l_0_18_94) l_0_18_97)))
 (let ((?x25140 (* 2.0 l_0_18_91)))
 (let ((?x25176 (* ?x25140 l_0_18_94)))
 (let ((?x25090 (* 2.0 l_0_18_46)))
 (let ((?x25302 (* ?x25090 l_0_18_49)))
 (let ((?x25087 (* 2.0 l_0_18_31)))
 (let ((?x25300 (* ?x25087 l_0_18_34)))
 (let ((?x25290 (+ (* (* 2.0 l_0_18_79) l_0_18_82) (* (* 2.0 l_0_18_80) l_0_18_83))))
 (let ((?x25293 (+ ?x25290 (* (* 2.0 l_0_18_81) l_0_18_84))))
 (let ((?x25295 (- (* (* (* (- 2.0) _a_1_) l_0_18_76) l_0_18_79) (* _a_2_ ?x25293))))
 (let ((?x25299 (- (+ ?x25295 (* (* 2.0 l_0_18_1) l_0_18_7)) (* (* 2.0 l_0_18_16) l_0_18_22))))
 (let ((?x25306 (+ (- (+ (- ?x25299 ?x25300) ?x25302) (* (* 2.0 l_0_18_61) l_0_18_64)) ?x25176)))
 (= (- (- (- ?x25306 ?x25308) ?x25311) ?x25314) 0.0))))))))))))))))
(assert
 (let ((?x25090 (* 2.0 l_0_18_46)))
 (let ((?x25302 (* ?x25090 l_0_18_49)))
 (let ((?x25087 (* 2.0 l_0_18_31)))
 (let ((?x25300 (* ?x25087 l_0_18_34)))
 (let ((?x25369 (* 2.0 l_0_18_103)))
 (let ((?x25370 (* ?x25369 l_0_18_96)))
 (let ((?x25066 (* 2.0 l_0_18_102)))
 (let ((?x25367 (* ?x25066 l_0_18_95)))
 (let ((?x25063 (* 2.0 l_0_18_101)))
 (let ((?x25365 (* ?x25063 l_0_18_94)))
 (let ((?x25359 (+ (* (* 2.0 l_0_18_79) l_0_18_86) (* (* 2.0 l_0_18_80) l_0_18_87))))
 (let ((?x25361 (+ ?x25359 (* (* 2.0 l_0_18_81) l_0_18_88))))
 (let ((?x22902 (- _a_2_)))
 (let ((?x25368 (- (- (+ (* ?x22902 ?x25361) (* (* 2.0 l_0_18_1) l_0_18_11)) ?x25365) ?x25367)))
 (let ((?x25375 (- (+ (- (- ?x25368 ?x25370) (* (* 2.0 l_0_18_16) l_0_18_26)) ?x25300) ?x25302)))
 (= ?x25375 0.0)))))))))))))))))
(assert
 (let ((?x25445 (* l_0_18_3 l_0_18_3)))
 (let ((?x25443 (* l_0_18_2 l_0_18_2)))
 (let ((?x25435 (* l_0_18_18 l_0_18_18)))
 (let ((?x25433 (* l_0_18_17 l_0_18_17)))
 (let ((?x25186 (+ (* (* 2.0 l_0_18_77) l_0_18_79) (* (* 2.0 l_0_18_78) l_0_18_80))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x25408 (- (- (* ?x22867 ?x25186) (* (* 2.0 l_0_18_107) l_0_18_109)) (* (* 2.0 l_0_18_108) l_0_18_110))))
 (let ((?x25414 (- (- ?x25408 (* (* 2.0 l_0_18_122) l_0_18_124)) (* (* 2.0 l_0_18_123) l_0_18_125))))
 (let ((?x25420 (- (- ?x25414 (* (* 2.0 l_0_18_137) l_0_18_139)) (* (* 2.0 l_0_18_138) l_0_18_140))))
 (let ((?x25426 (- (- ?x25420 (* (* 2.0 l_0_18_152) l_0_18_154)) (* (* 2.0 l_0_18_153) l_0_18_155))))
 (let ((?x25432 (- (- ?x25426 (* (* 2.0 l_0_18_167) l_0_18_169)) (* (* 2.0 l_0_18_168) l_0_18_170))))
 (let ((?x25442 (- (- (- (- ?x25432 ?x25433) ?x25435) (* (* 2.0 l_0_18_182) l_0_18_184)) (* (* 2.0 l_0_18_183) l_0_18_185))))
 (= (+ (+ ?x25442 ?x25443) ?x25445) 0.0))))))))))))))
(assert
 (let ((?x25146 (* 2.0 l_0_18_93)))
 (let ((?x25209 (* ?x25146 l_0_18_95)))
 (let ((?x25143 (* 2.0 l_0_18_92)))
 (let ((?x25207 (* ?x25143 l_0_18_94)))
 (let ((?x25527 (* 2.0 l_0_18_48)))
 (let ((?x25528 (* ?x25527 l_0_18_50)))
 (let ((?x25524 (* 2.0 l_0_18_47)))
 (let ((?x25525 (* ?x25524 l_0_18_49)))
 (let ((?x25521 (* 2.0 l_0_18_33)))
 (let ((?x25522 (* ?x25521 l_0_18_35)))
 (let ((?x25518 (* 2.0 l_0_18_32)))
 (let ((?x25519 (* ?x25518 l_0_18_34)))
 (let ((?x25186 (+ (* (* 2.0 l_0_18_77) l_0_18_79) (* (* 2.0 l_0_18_78) l_0_18_80))))
 (let ((?x25290 (+ (* (* 2.0 l_0_18_79) l_0_18_82) (* (* 2.0 l_0_18_80) l_0_18_83))))
 (let ((?x25293 (+ ?x25290 (* (* 2.0 l_0_18_81) l_0_18_84))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x19652 (- (- (* ?x22867 ?x25293) (* _a_1_ ?x25186)) (* (* 2.0 l_0_18_109) l_0_18_112))))
 (let ((?x25464 (- (- ?x19652 (* (* 2.0 l_0_18_110) l_0_18_113)) (* (* 2.0 l_0_18_111) l_0_18_114))))
 (let ((?x25470 (- (- ?x25464 (* (* 2.0 l_0_18_124) l_0_18_127)) (* (* 2.0 l_0_18_125) l_0_18_128))))
 (let ((?x25476 (- (- ?x25470 (* (* 2.0 l_0_18_126) l_0_18_129)) (* (* 2.0 l_0_18_139) l_0_18_142))))
 (let ((?x25482 (- (- ?x25476 (* (* 2.0 l_0_18_140) l_0_18_143)) (* (* 2.0 l_0_18_141) l_0_18_144))))
 (let ((?x25488 (- (- ?x25482 (* (* 2.0 l_0_18_154) l_0_18_157)) (* (* 2.0 l_0_18_155) l_0_18_158))))
 (let ((?x25494 (- (- ?x25488 (* (* 2.0 l_0_18_156) l_0_18_159)) (* (* 2.0 l_0_18_169) l_0_18_172))))
 (let ((?x25499 (- (- ?x25494 (* (* 2.0 l_0_18_17) l_0_18_22)) (* (* 2.0 l_0_18_170) l_0_18_173))))
 (let ((?x25504 (- (- ?x25499 (* (* 2.0 l_0_18_171) l_0_18_174)) (* (* 2.0 l_0_18_18) l_0_18_23))))
 (let ((?x25510 (- (- ?x25504 (* (* 2.0 l_0_18_184) l_0_18_187)) (* (* 2.0 l_0_18_185) l_0_18_188))))
 (let ((?x25515 (+ (- ?x25510 (* (* 2.0 l_0_18_186) l_0_18_189)) (* (* 2.0 l_0_18_2) l_0_18_7))))
 (let ((?x25526 (+ (- (- (+ ?x25515 (* (* 2.0 l_0_18_3) l_0_18_8)) ?x25519) ?x25522) ?x25525)))
 (let ((?x25535 (- (- (+ ?x25526 ?x25528) (* (* 2.0 l_0_18_62) l_0_18_64)) (* (* 2.0 l_0_18_63) l_0_18_65))))
 (= (+ (+ ?x25535 ?x25207) ?x25209) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x25527 (* 2.0 l_0_18_48)))
 (let ((?x25528 (* ?x25527 l_0_18_50)))
 (let ((?x25524 (* 2.0 l_0_18_47)))
 (let ((?x25525 (* ?x25524 l_0_18_49)))
 (let ((?x25521 (* 2.0 l_0_18_33)))
 (let ((?x25522 (* ?x25521 l_0_18_35)))
 (let ((?x25518 (* 2.0 l_0_18_32)))
 (let ((?x25519 (* ?x25518 l_0_18_34)))
 (let ((?x25359 (+ (* (* 2.0 l_0_18_79) l_0_18_86) (* (* 2.0 l_0_18_80) l_0_18_87))))
 (let ((?x25361 (+ ?x25359 (* (* 2.0 l_0_18_81) l_0_18_88))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x25610 (+ (- (* ?x22867 ?x25361) (* (* 2.0 l_0_18_109) l_0_18_116)) (* (* 2.0 l_0_18_11) l_0_18_2))))
 (let ((?x25614 (- (- ?x25610 (* (* 2.0 l_0_18_110) l_0_18_117)) (* (* 2.0 l_0_18_111) l_0_18_118))))
 (let ((?x25619 (- (+ ?x25614 (* (* 2.0 l_0_18_12) l_0_18_3)) (* (* 2.0 l_0_18_124) l_0_18_131))))
 (let ((?x25623 (- (- ?x25619 (* (* 2.0 l_0_18_125) l_0_18_132)) (* (* 2.0 l_0_18_126) l_0_18_133))))
 (let ((?x25627 (- (- ?x25623 (* (* 2.0 l_0_18_139) l_0_18_146)) (* (* 2.0 l_0_18_140) l_0_18_147))))
 (let ((?x25631 (- (- ?x25627 (* (* 2.0 l_0_18_141) l_0_18_148)) (* (* 2.0 l_0_18_154) l_0_18_161))))
 (let ((?x25635 (- (- ?x25631 (* (* 2.0 l_0_18_155) l_0_18_162)) (* (* 2.0 l_0_18_156) l_0_18_163))))
 (let ((?x25639 (- (- ?x25635 (* (* 2.0 l_0_18_169) l_0_18_176)) (* (* 2.0 l_0_18_17) l_0_18_26))))
 (let ((?x25643 (- (- ?x25639 (* (* 2.0 l_0_18_170) l_0_18_177)) (* (* 2.0 l_0_18_171) l_0_18_178))))
 (let ((?x25647 (- (- ?x25643 (* (* 2.0 l_0_18_18) l_0_18_27)) (* (* 2.0 l_0_18_184) l_0_18_191))))
 (let ((?x25651 (- (- ?x25647 (* (* 2.0 l_0_18_185) l_0_18_192)) (* (* 2.0 l_0_18_186) l_0_18_193))))
 (= (- (- (+ (+ ?x25651 ?x25519) ?x25522) ?x25525) ?x25528) 0.0))))))))))))))))))))))))
(assert
 (let ((?x25705 (* l_0_18_6 l_0_18_6)))
 (let ((?x13314 (* l_0_18_5 l_0_18_5)))
 (let ((?x13317 (* l_0_18_4 l_0_18_4)))
 (let ((?x19912 (* l_0_18_21 l_0_18_21)))
 (let ((?x2290 (- (- (* (- l_0_18_19) l_0_18_19) (* l_0_18_20 l_0_18_20)) ?x19912)))
 (= (+ (+ (+ ?x2290 ?x13317) ?x13314) ?x25705) 0.0)))))))
(assert
 (let ((?x25270 (* l_0_18_96 l_0_18_96)))
 (let ((?x25268 (* l_0_18_95 l_0_18_95)))
 (let ((?x25266 (* l_0_18_94 l_0_18_94)))
 (let ((?x25754 (* l_0_18_66 l_0_18_66)))
 (let ((?x25752 (* l_0_18_65 l_0_18_65)))
 (let ((?x25750 (* l_0_18_64 l_0_18_64)))
 (let ((?x25745 (* l_0_18_51 l_0_18_51)))
 (let ((?x25743 (* l_0_18_50 l_0_18_50)))
 (let ((?x25738 (* l_0_18_49 l_0_18_49)))
 (let ((?x25733 (* l_0_18_36 l_0_18_36)))
 (let ((?x25731 (* l_0_18_35 l_0_18_35)))
 (let ((?x25729 (* l_0_18_34 l_0_18_34)))
 (let ((?x24980 (* l_0_18_81 l_0_18_81)))
 (let ((?x24981 (+ (+ (* l_0_18_79 l_0_18_79) (* l_0_18_80 l_0_18_80)) ?x24980)))
 (let ((?x22885 (- _a_1_)))
 (let ((?x25725 (- (- (* ?x22885 ?x24981) (* (* 2.0 l_0_18_19) l_0_18_22)) (* (* 2.0 l_0_18_20) l_0_18_23))))
 (let ((?x25734 (- (- (- (- ?x25725 (* (* 2.0 l_0_18_21) l_0_18_24)) ?x25729) ?x25731) ?x25733)))
 (let ((?x25742 (+ (+ (+ ?x25734 (* (* 2.0 l_0_18_4) l_0_18_7)) ?x25738) (* (* 2.0 l_0_18_5) l_0_18_8))))
 (let ((?x25751 (- (+ (+ (+ ?x25742 ?x25743) ?x25745) (* (* 2.0 l_0_18_6) l_0_18_9)) ?x25750)))
 (= (+ (+ (+ (- (- ?x25751 ?x25752) ?x25754) ?x25266) ?x25268) ?x25270) 0.0)))))))))))))))))))))
(assert
 (let ((?x25745 (* l_0_18_51 l_0_18_51)))
 (let ((?x25743 (* l_0_18_50 l_0_18_50)))
 (let ((?x25738 (* l_0_18_49 l_0_18_49)))
 (let ((?x25733 (* l_0_18_36 l_0_18_36)))
 (let ((?x25731 (* l_0_18_35 l_0_18_35)))
 (let ((?x25729 (* l_0_18_34 l_0_18_34)))
 (let ((?x25796 (+ (* (* 2.0 l_0_18_11) l_0_18_4) (* (* 2.0 l_0_18_12) l_0_18_5))))
 (let ((?x25801 (- (+ ?x25796 (* (* 2.0 l_0_18_13) l_0_18_6)) (* (* 2.0 l_0_18_19) l_0_18_26))))
 (let ((?x25805 (- (- ?x25801 (* (* 2.0 l_0_18_20) l_0_18_27)) (* (* 2.0 l_0_18_21) l_0_18_28))))
 (= (- (- (- (+ (+ (+ ?x25805 ?x25729) ?x25731) ?x25733) ?x25738) ?x25743) ?x25745) 0.0)))))))))))
(assert
 (let ((?x25314 (* (* 2.0 l_0_18_96) l_0_18_99)))
 (let ((?x25311 (* (* 2.0 l_0_18_95) l_0_18_98)))
 (let ((?x25308 (* (* 2.0 l_0_18_94) l_0_18_97)))
 (let ((?x25861 (* l_0_18_9 l_0_18_9)))
 (let ((?x25859 (* l_0_18_8 l_0_18_8)))
 (let ((?x25857 (* l_0_18_7 l_0_18_7)))
 (let ((?x25845 (* 2.0 l_0_18_51)))
 (let ((?x25846 (* ?x25845 l_0_18_54)))
 (let ((?x25842 (* 2.0 l_0_18_50)))
 (let ((?x25843 (* ?x25842 l_0_18_53)))
 (let ((?x25839 (* 2.0 l_0_18_49)))
 (let ((?x25840 (* ?x25839 l_0_18_52)))
 (let ((?x25836 (* 2.0 l_0_18_36)))
 (let ((?x25837 (* ?x25836 l_0_18_39)))
 (let ((?x25833 (* 2.0 l_0_18_35)))
 (let ((?x25834 (* ?x25833 l_0_18_38)))
 (let ((?x25830 (* 2.0 l_0_18_34)))
 (let ((?x25831 (* ?x25830 l_0_18_37)))
 (let ((?x25828 (* l_0_18_25 l_0_18_25)))
 (let ((?x25826 (* l_0_18_24 l_0_18_24)))
 (let ((?x13462 (* l_0_18_23 l_0_18_23)))
 (let ((?x20000 (* l_0_18_22 l_0_18_22)))
 (let ((?x20005 (* l_0_18_10 l_0_18_10)))
 (let ((?x25290 (+ (* (* 2.0 l_0_18_79) l_0_18_82) (* (* 2.0 l_0_18_80) l_0_18_83))))
 (let ((?x25293 (+ ?x25290 (* (* 2.0 l_0_18_81) l_0_18_84))))
 (let ((?x22885 (- _a_1_)))
 (let ((?x25832 (- (- (- (- (- (+ (* ?x22885 ?x25293) ?x20005) ?x20000) ?x13462) ?x25826) ?x25828) ?x25831)))
 (let ((?x25850 (- (+ (+ (+ (- (- ?x25832 ?x25834) ?x25837) ?x25840) ?x25843) ?x25846) (* (* 2.0 l_0_18_64) l_0_18_67))))
 (let ((?x25856 (- (- ?x25850 (* (* 2.0 l_0_18_65) l_0_18_68)) (* (* 2.0 l_0_18_66) l_0_18_69))))
 (= (+ (+ (+ (+ (+ (+ ?x25856 ?x25857) ?x25859) ?x25861) ?x25308) ?x25311) ?x25314) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x25845 (* 2.0 l_0_18_51)))
 (let ((?x25948 (* ?x25845 l_0_18_58)))
 (let ((?x25846 (* ?x25845 l_0_18_54)))
 (let ((?x25842 (* 2.0 l_0_18_50)))
 (let ((?x25945 (* ?x25842 l_0_18_57)))
 (let ((?x25843 (* ?x25842 l_0_18_53)))
 (let ((?x25839 (* 2.0 l_0_18_49)))
 (let ((?x25942 (* ?x25839 l_0_18_56)))
 (let ((?x25840 (* ?x25839 l_0_18_52)))
 (let ((?x25836 (* 2.0 l_0_18_36)))
 (let ((?x25939 (* ?x25836 l_0_18_43)))
 (let ((?x25837 (* ?x25836 l_0_18_39)))
 (let ((?x25833 (* 2.0 l_0_18_35)))
 (let ((?x25936 (* ?x25833 l_0_18_42)))
 (let ((?x25834 (* ?x25833 l_0_18_38)))
 (let ((?x25830 (* 2.0 l_0_18_34)))
 (let ((?x25933 (* ?x25830 l_0_18_41)))
 (let ((?x25831 (* ?x25830 l_0_18_37)))
 (let ((?x25369 (* 2.0 l_0_18_103)))
 (let ((?x25370 (* ?x25369 l_0_18_96)))
 (let ((?x25066 (* 2.0 l_0_18_102)))
 (let ((?x25367 (* ?x25066 l_0_18_95)))
 (let ((?x25063 (* 2.0 l_0_18_101)))
 (let ((?x25365 (* ?x25063 l_0_18_94)))
 (let ((?x25359 (+ (* (* 2.0 l_0_18_79) l_0_18_86) (* (* 2.0 l_0_18_80) l_0_18_87))))
 (let ((?x25361 (+ ?x25359 (* (* 2.0 l_0_18_81) l_0_18_88))))
 (let ((?x22885 (- _a_1_)))
 (let ((?x25912 (+ (+ (+ (* ?x22885 ?x25361) (* (* 2.0 l_0_18_10) l_0_18_14)) ?x25365) ?x25367)))
 (let ((?x25917 (+ (+ (+ ?x25912 ?x25370) (* (* 2.0 l_0_18_11) l_0_18_7)) (* (* 2.0 l_0_18_12) l_0_18_8))))
 (let ((?x25922 (- (+ ?x25917 (* (* 2.0 l_0_18_13) l_0_18_9)) (* (* 2.0 l_0_18_22) l_0_18_26))))
 (let ((?x25928 (- (- ?x25922 (* (* 2.0 l_0_18_23) l_0_18_27)) (* (* 2.0 l_0_18_24) l_0_18_28))))
 (let ((?x25935 (+ (- (+ (- ?x25928 (* (* 2.0 l_0_18_25) l_0_18_29)) ?x25831) ?x25933) ?x25834)))
 (let ((?x25946 (+ (- (+ (- (- (+ (- ?x25935 ?x25936) ?x25837) ?x25939) ?x25840) ?x25942) ?x25843) ?x25945)))
 (let ((?x25953 (- (- (+ (- ?x25946 ?x25846) ?x25948) (* (* 2.0 l_0_18_64) l_0_18_71)) (* (* 2.0 l_0_18_65) l_0_18_72))))
 (= (- ?x25953 (* (* 2.0 l_0_18_66) l_0_18_73)) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25845 (* 2.0 l_0_18_51)))
 (let ((?x25948 (* ?x25845 l_0_18_58)))
 (let ((?x25842 (* 2.0 l_0_18_50)))
 (let ((?x25945 (* ?x25842 l_0_18_57)))
 (let ((?x25839 (* 2.0 l_0_18_49)))
 (let ((?x25942 (* ?x25839 l_0_18_56)))
 (let ((?x25836 (* 2.0 l_0_18_36)))
 (let ((?x25939 (* ?x25836 l_0_18_43)))
 (let ((?x25833 (* 2.0 l_0_18_35)))
 (let ((?x25936 (* ?x25833 l_0_18_42)))
 (let ((?x25830 (* 2.0 l_0_18_34)))
 (let ((?x25933 (* ?x25830 l_0_18_41)))
 (let ((?x26007 (* l_0_18_30 l_0_18_30)))
 (let ((?x26005 (* l_0_18_29 l_0_18_29)))
 (let ((?x26003 (* l_0_18_28 l_0_18_28)))
 (let ((?x26001 (* l_0_18_27 l_0_18_27)))
 (let ((?x25999 (* l_0_18_26 l_0_18_26)))
 (let ((?x2740 (* l_0_18_15 l_0_18_15)))
 (let ((?x2580 (* l_0_18_14 l_0_18_14)))
 (let ((?x20113 (* l_0_18_13 l_0_18_13)))
 (let ((?x2674 (+ (+ (+ (* l_0_18_11 l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x20113) ?x2580)))
 (let ((?x26009 (+ (- (- (- (- (- (+ ?x2674 ?x2740) ?x25999) ?x26001) ?x26003) ?x26005) ?x26007) ?x25933)))
 (= (- (- (- (+ (+ ?x26009 ?x25936) ?x25939) ?x25942) ?x25945) ?x25948) 0.0))))))))))))))))))))))))
(assert
 (let ((?x26038 (* l_0_18_91 l_0_18_91)))
 (let ((?x25140 (* 2.0 l_0_18_91)))
 (let ((?x26036 (* ?x25140 l_0_18_97)))
 (let ((?x26034 (* l_0_18_61 l_0_18_61)))
 (let ((?x26032 (* l_0_18_46 l_0_18_46)))
 (let ((?x26030 (* l_0_18_31 l_0_18_31)))
 (let ((?x26029 (- (* (* (- _a_1_) l_0_18_76) l_0_18_76) (* (* (* 2.0 _a_2_) l_0_18_76) l_0_18_82))))
 (= (+ (- (- (+ (- ?x26029 ?x26030) ?x26032) ?x26034) ?x26036) ?x26038) 0.0)))))))))
(assert
 (let ((?x26077 (* l_0_18_99 l_0_18_99)))
 (let ((?x26075 (* l_0_18_98 l_0_18_98)))
 (let ((?x26073 (* l_0_18_97 l_0_18_97)))
 (let ((?x25140 (* 2.0 l_0_18_91)))
 (let ((?x26036 (* ?x25140 l_0_18_97)))
 (let ((?x25090 (* 2.0 l_0_18_46)))
 (let ((?x26068 (* ?x25090 l_0_18_52)))
 (let ((?x25087 (* 2.0 l_0_18_31)))
 (let ((?x26066 (* ?x25087 l_0_18_37)))
 (let ((?x26064 (* l_0_18_100 l_0_18_100)))
 (let ((?x26060 (* l_0_18_85 l_0_18_85)))
 (let ((?x26058 (* l_0_18_84 l_0_18_84)))
 (let ((?x26061 (+ (+ (+ (* l_0_18_82 l_0_18_82) (* l_0_18_83 l_0_18_83)) ?x26058) ?x26060)))
 (let ((?x26063 (- (* (* (* (- 2.0) _a_1_) l_0_18_76) l_0_18_82) (* _a_2_ ?x26061))))
 (let ((?x26071 (- (+ (- (- ?x26063 ?x26064) ?x26066) ?x26068) (* (* 2.0 l_0_18_61) l_0_18_67))))
 (= (- (- (- (+ ?x26071 ?x26036) ?x26073) ?x26075) ?x26077) 0.0)))))))))))))))))
(assert
 (let ((?x25090 (* 2.0 l_0_18_46)))
 (let ((?x26135 (* ?x25090 l_0_18_56)))
 (let ((?x26068 (* ?x25090 l_0_18_52)))
 (let ((?x25087 (* 2.0 l_0_18_31)))
 (let ((?x26132 (* ?x25087 l_0_18_41)))
 (let ((?x26066 (* ?x25087 l_0_18_37)))
 (let ((?x25369 (* 2.0 l_0_18_103)))
 (let ((?x26129 (* ?x25369 l_0_18_99)))
 (let ((?x25066 (* 2.0 l_0_18_102)))
 (let ((?x26127 (* ?x25066 l_0_18_98)))
 (let ((?x25063 (* 2.0 l_0_18_101)))
 (let ((?x26125 (* ?x25063 l_0_18_97)))
 (let ((?x26123 (* ?x25063 l_0_18_91)))
 (let ((?x26121 (* (* 2.0 l_0_18_100) l_0_18_104)))
 (let ((?x26111 (+ (* (* 2.0 l_0_18_82) l_0_18_86) (* (* 2.0 l_0_18_83) l_0_18_87))))
 (let ((?x26117 (+ (+ ?x26111 (* (* 2.0 l_0_18_84) l_0_18_88)) (* (* 2.0 l_0_18_85) l_0_18_89))))
 (let ((?x26119 (- (* (* (* (- 2.0) _a_1_) l_0_18_76) l_0_18_86) (* _a_2_ ?x26117))))
 (let ((?x26133 (- (+ (- (- (- (+ (- ?x26119 ?x26121) ?x26123) ?x26125) ?x26127) ?x26129) ?x26066) ?x26132)))
 (= (- (+ (- ?x26133 ?x26068) ?x26135) (* (* 2.0 l_0_18_61) l_0_18_71)) 0.0))))))))))))))))))))
(assert
 (let ((?x26225 (* l_0_18_93 l_0_18_93)))
 (let ((?x26223 (* l_0_18_92 l_0_18_92)))
 (let ((?x26221 (* l_0_18_63 l_0_18_63)))
 (let ((?x26219 (* l_0_18_62 l_0_18_62)))
 (let ((?x26217 (* l_0_18_48 l_0_18_48)))
 (let ((?x26215 (* l_0_18_47 l_0_18_47)))
 (let ((?x26213 (* l_0_18_33 l_0_18_33)))
 (let ((?x26211 (* l_0_18_32 l_0_18_32)))
 (let ((?x25120 (+ (* (* 2.0 l_0_18_77) l_0_18_82) (* (* 2.0 l_0_18_78) l_0_18_83))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x26186 (- (* ?x22867 ?x25120) (* _a_1_ (+ (* l_0_18_77 l_0_18_77) (* l_0_18_78 l_0_18_78))))))
 (let ((?x26190 (- (- ?x26186 (* (* 2.0 l_0_18_107) l_0_18_112)) (* (* 2.0 l_0_18_108) l_0_18_113))))
 (let ((?x26194 (- (- ?x26190 (* (* 2.0 l_0_18_122) l_0_18_127)) (* (* 2.0 l_0_18_123) l_0_18_128))))
 (let ((?x26198 (- (- ?x26194 (* (* 2.0 l_0_18_137) l_0_18_142)) (* (* 2.0 l_0_18_138) l_0_18_143))))
 (let ((?x26202 (- (- ?x26198 (* (* 2.0 l_0_18_152) l_0_18_157)) (* (* 2.0 l_0_18_153) l_0_18_158))))
 (let ((?x26206 (- (- ?x26202 (* (* 2.0 l_0_18_167) l_0_18_172)) (* (* 2.0 l_0_18_168) l_0_18_173))))
 (let ((?x26210 (- (- ?x26206 (* (* 2.0 l_0_18_182) l_0_18_187)) (* (* 2.0 l_0_18_183) l_0_18_188))))
 (let ((?x26224 (+ (- (- (+ (+ (- (- ?x26210 ?x26211) ?x26213) ?x26215) ?x26217) ?x26219) ?x26221) ?x26223)))
 (= (+ ?x26224 ?x26225) 0.0))))))))))))))))))))
(assert
 (let ((?x25146 (* 2.0 l_0_18_93)))
 (let ((?x25147 (* ?x25146 l_0_18_98)))
 (let ((?x25143 (* 2.0 l_0_18_92)))
 (let ((?x25144 (* ?x25143 l_0_18_97)))
 (let ((?x25527 (* 2.0 l_0_18_48)))
 (let ((?x26294 (* ?x25527 l_0_18_53)))
 (let ((?x25524 (* 2.0 l_0_18_47)))
 (let ((?x26292 (* ?x25524 l_0_18_52)))
 (let ((?x25521 (* 2.0 l_0_18_33)))
 (let ((?x26290 (* ?x25521 l_0_18_38)))
 (let ((?x25518 (* 2.0 l_0_18_32)))
 (let ((?x26288 (* ?x25518 l_0_18_37)))
 (let ((?x26286 (* l_0_18_190 l_0_18_190)))
 (let ((?x26284 (* l_0_18_189 l_0_18_189)))
 (let ((?x26282 (* l_0_18_188 l_0_18_188)))
 (let ((?x26280 (* l_0_18_187 l_0_18_187)))
 (let ((?x26278 (* l_0_18_175 l_0_18_175)))
 (let ((?x26276 (* l_0_18_174 l_0_18_174)))
 (let ((?x26274 (* l_0_18_173 l_0_18_173)))
 (let ((?x26272 (* l_0_18_172 l_0_18_172)))
 (let ((?x26270 (* l_0_18_160 l_0_18_160)))
 (let ((?x26268 (* l_0_18_159 l_0_18_159)))
 (let ((?x26266 (* l_0_18_158 l_0_18_158)))
 (let ((?x26264 (* l_0_18_157 l_0_18_157)))
 (let ((?x26262 (* l_0_18_145 l_0_18_145)))
 (let ((?x26260 (* l_0_18_144 l_0_18_144)))
 (let ((?x26258 (* l_0_18_143 l_0_18_143)))
 (let ((?x26256 (* l_0_18_142 l_0_18_142)))
 (let ((?x26254 (* l_0_18_130 l_0_18_130)))
 (let ((?x26252 (* l_0_18_129 l_0_18_129)))
 (let ((?x26250 (* l_0_18_128 l_0_18_128)))
 (let ((?x26248 (* l_0_18_127 l_0_18_127)))
 (let ((?x20313 (* l_0_18_115 l_0_18_115)))
 (let ((?x3081 (* l_0_18_114 l_0_18_114)))
 (let ((?x20447 (* l_0_18_113 l_0_18_113)))
 (let ((?x20523 (* l_0_18_112 l_0_18_112)))
 (let ((?x25120 (+ (* (* 2.0 l_0_18_77) l_0_18_82) (* (* 2.0 l_0_18_78) l_0_18_83))))
 (let ((?x26060 (* l_0_18_85 l_0_18_85)))
 (let ((?x26058 (* l_0_18_84 l_0_18_84)))
 (let ((?x26061 (+ (+ (+ (* l_0_18_82 l_0_18_82) (* l_0_18_83 l_0_18_83)) ?x26058) ?x26060)))
 (let ((?x22867 (- _a_0_)))
 (let ((?x26247 (- (- (- (- (- (* ?x22867 ?x26061) (* _a_1_ ?x25120)) ?x20523) ?x20447) ?x3081) ?x20313)))
 (let ((?x26261 (- (- (- (- (- (- (- ?x26247 ?x26248) ?x26250) ?x26252) ?x26254) ?x26256) ?x26258) ?x26260)))
 (let ((?x26275 (- (- (- (- (- (- (- ?x26261 ?x26262) ?x26264) ?x26266) ?x26268) ?x26270) ?x26272) ?x26274)))
 (let ((?x26289 (- (- (- (- (- (- (- ?x26275 ?x26276) ?x26278) ?x26280) ?x26282) ?x26284) ?x26286) ?x26288)))
 (let ((?x26297 (- (+ (+ (- ?x26289 ?x26290) ?x26292) ?x26294) (* (* 2.0 l_0_18_62) l_0_18_67))))
 (= (+ (+ (- ?x26297 (* (* 2.0 l_0_18_63) l_0_18_68)) ?x25144) ?x25147) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25527 (* 2.0 l_0_18_48)))
 (let ((?x26453 (* ?x25527 l_0_18_57)))
 (let ((?x26294 (* ?x25527 l_0_18_53)))
 (let ((?x25524 (* 2.0 l_0_18_47)))
 (let ((?x26450 (* ?x25524 l_0_18_56)))
 (let ((?x26292 (* ?x25524 l_0_18_52)))
 (let ((?x25521 (* 2.0 l_0_18_33)))
 (let ((?x26447 (* ?x25521 l_0_18_42)))
 (let ((?x26290 (* ?x25521 l_0_18_38)))
 (let ((?x25518 (* 2.0 l_0_18_32)))
 (let ((?x26444 (* ?x25518 l_0_18_41)))
 (let ((?x26288 (* ?x25518 l_0_18_37)))
 (let ((?x25066 (* 2.0 l_0_18_102)))
 (let ((?x25067 (* ?x25066 l_0_18_93)))
 (let ((?x25063 (* 2.0 l_0_18_101)))
 (let ((?x25064 (* ?x25063 l_0_18_92)))
 (let ((?x25060 (+ (* (* 2.0 l_0_18_77) l_0_18_86) (* (* 2.0 l_0_18_78) l_0_18_87))))
 (let ((?x26111 (+ (* (* 2.0 l_0_18_82) l_0_18_86) (* (* 2.0 l_0_18_83) l_0_18_87))))
 (let ((?x26117 (+ (+ ?x26111 (* (* 2.0 l_0_18_84) l_0_18_88)) (* (* 2.0 l_0_18_85) l_0_18_89))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x26373 (- (+ (+ (- (* ?x22867 ?x26117) (* _a_1_ ?x25060)) ?x25064) ?x25067) (* (* 2.0 l_0_18_112) l_0_18_116))))
 (let ((?x26379 (- (- ?x26373 (* (* 2.0 l_0_18_113) l_0_18_117)) (* (* 2.0 l_0_18_114) l_0_18_118))))
 (let ((?x26385 (- (- ?x26379 (* (* 2.0 l_0_18_115) l_0_18_119)) (* (* 2.0 l_0_18_127) l_0_18_131))))
 (let ((?x26391 (- (- ?x26385 (* (* 2.0 l_0_18_128) l_0_18_132)) (* (* 2.0 l_0_18_129) l_0_18_133))))
 (let ((?x26397 (- (- ?x26391 (* (* 2.0 l_0_18_130) l_0_18_134)) (* (* 2.0 l_0_18_142) l_0_18_146))))
 (let ((?x26403 (- (- ?x26397 (* (* 2.0 l_0_18_143) l_0_18_147)) (* (* 2.0 l_0_18_144) l_0_18_148))))
 (let ((?x26409 (- (- ?x26403 (* (* 2.0 l_0_18_145) l_0_18_149)) (* (* 2.0 l_0_18_157) l_0_18_161))))
 (let ((?x26415 (- (- ?x26409 (* (* 2.0 l_0_18_158) l_0_18_162)) (* (* 2.0 l_0_18_159) l_0_18_163))))
 (let ((?x26421 (- (- ?x26415 (* (* 2.0 l_0_18_160) l_0_18_164)) (* (* 2.0 l_0_18_172) l_0_18_176))))
 (let ((?x26427 (- (- ?x26421 (* (* 2.0 l_0_18_173) l_0_18_177)) (* (* 2.0 l_0_18_174) l_0_18_178))))
 (let ((?x26433 (- (- ?x26427 (* (* 2.0 l_0_18_175) l_0_18_179)) (* (* 2.0 l_0_18_187) l_0_18_191))))
 (let ((?x26439 (- (- ?x26433 (* (* 2.0 l_0_18_188) l_0_18_192)) (* (* 2.0 l_0_18_189) l_0_18_193))))
 (let ((?x26446 (+ (- (+ (- ?x26439 (* (* 2.0 l_0_18_190) l_0_18_194)) ?x26288) ?x26444) ?x26290)))
 (let ((?x26456 (- (+ (- (+ (- (- ?x26446 ?x26447) ?x26292) ?x26450) ?x26294) ?x26453) (* (* 2.0 l_0_18_62) l_0_18_71))))
 (= (- ?x26456 (* (* 2.0 l_0_18_63) l_0_18_72)) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x26077 (* l_0_18_99 l_0_18_99)))
 (let ((?x26075 (* l_0_18_98 l_0_18_98)))
 (let ((?x26073 (* l_0_18_97 l_0_18_97)))
 (let ((?x26527 (* l_0_18_70 l_0_18_70)))
 (let ((?x26525 (* l_0_18_69 l_0_18_69)))
 (let ((?x26523 (* l_0_18_68 l_0_18_68)))
 (let ((?x26521 (* l_0_18_67 l_0_18_67)))
 (let ((?x26519 (* l_0_18_55 l_0_18_55)))
 (let ((?x26517 (* l_0_18_54 l_0_18_54)))
 (let ((?x26515 (* l_0_18_53 l_0_18_53)))
 (let ((?x26513 (* l_0_18_52 l_0_18_52)))
 (let ((?x26511 (* l_0_18_40 l_0_18_40)))
 (let ((?x26509 (* l_0_18_39 l_0_18_39)))
 (let ((?x26507 (* l_0_18_38 l_0_18_38)))
 (let ((?x26505 (* l_0_18_37 l_0_18_37)))
 (let ((?x26064 (* l_0_18_100 l_0_18_100)))
 (let ((?x26060 (* l_0_18_85 l_0_18_85)))
 (let ((?x26058 (* l_0_18_84 l_0_18_84)))
 (let ((?x26061 (+ (+ (+ (* l_0_18_82 l_0_18_82) (* l_0_18_83 l_0_18_83)) ?x26058) ?x26060)))
 (let ((?x22885 (- _a_1_)))
 (let ((?x26514 (+ (- (- (- (- (+ (* ?x22885 ?x26061) ?x26064) ?x26505) ?x26507) ?x26509) ?x26511) ?x26513)))
 (let ((?x26528 (- (- (- (- (+ (+ (+ ?x26514 ?x26515) ?x26517) ?x26519) ?x26521) ?x26523) ?x26525) ?x26527)))
 (= (+ (+ (+ ?x26528 ?x26073) ?x26075) ?x26077) 0.0))))))))))))))))))))))))
(assert
 (let ((?x26519 (* l_0_18_55 l_0_18_55)))
 (let ((?x26589 (* (* 2.0 l_0_18_55) l_0_18_59)))
 (let ((?x26517 (* l_0_18_54 l_0_18_54)))
 (let ((?x26585 (* (* 2.0 l_0_18_54) l_0_18_58)))
 (let ((?x26515 (* l_0_18_53 l_0_18_53)))
 (let ((?x26581 (* (* 2.0 l_0_18_53) l_0_18_57)))
 (let ((?x26513 (* l_0_18_52 l_0_18_52)))
 (let ((?x26577 (* (* 2.0 l_0_18_52) l_0_18_56)))
 (let ((?x26511 (* l_0_18_40 l_0_18_40)))
 (let ((?x26573 (* (* 2.0 l_0_18_40) l_0_18_44)))
 (let ((?x26509 (* l_0_18_39 l_0_18_39)))
 (let ((?x26569 (* (* 2.0 l_0_18_39) l_0_18_43)))
 (let ((?x26507 (* l_0_18_38 l_0_18_38)))
 (let ((?x26565 (* (* 2.0 l_0_18_38) l_0_18_42)))
 (let ((?x26505 (* l_0_18_37 l_0_18_37)))
 (let ((?x26561 (* (* 2.0 l_0_18_37) l_0_18_41)))
 (let ((?x25369 (* 2.0 l_0_18_103)))
 (let ((?x26129 (* ?x25369 l_0_18_99)))
 (let ((?x25066 (* 2.0 l_0_18_102)))
 (let ((?x26127 (* ?x25066 l_0_18_98)))
 (let ((?x25063 (* 2.0 l_0_18_101)))
 (let ((?x26125 (* ?x25063 l_0_18_97)))
 (let ((?x26121 (* (* 2.0 l_0_18_100) l_0_18_104)))
 (let ((?x26111 (+ (* (* 2.0 l_0_18_82) l_0_18_86) (* (* 2.0 l_0_18_83) l_0_18_87))))
 (let ((?x26117 (+ (+ ?x26111 (* (* 2.0 l_0_18_84) l_0_18_88)) (* (* 2.0 l_0_18_85) l_0_18_89))))
 (let ((?x22885 (- _a_1_)))
 (let ((?x26563 (+ (- (+ (+ (+ (+ (* ?x22885 ?x26117) ?x26121) ?x26125) ?x26127) ?x26129) ?x26561) ?x26505)))
 (let ((?x26578 (+ (+ (- (+ (- (+ (- ?x26563 ?x26565) ?x26507) ?x26569) ?x26509) ?x26573) ?x26511) ?x26577)))
 (let ((?x26591 (- (+ (- (+ (- (+ (- ?x26578 ?x26513) ?x26581) ?x26515) ?x26585) ?x26517) ?x26589) ?x26519)))
 (let ((?x26597 (- (- ?x26591 (* (* 2.0 l_0_18_67) l_0_18_71)) (* (* 2.0 l_0_18_68) l_0_18_72))))
 (let ((?x26603 (- (- ?x26597 (* (* 2.0 l_0_18_69) l_0_18_73)) (* (* 2.0 l_0_18_70) l_0_18_74))))
 (= ?x26603 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x26699 (* l_0_18_75 l_0_18_75)))
 (let ((?x26697 (* l_0_18_74 l_0_18_74)))
 (let ((?x26695 (* l_0_18_73 l_0_18_73)))
 (let ((?x26693 (* l_0_18_72 l_0_18_72)))
 (let ((?x26691 (* l_0_18_71 l_0_18_71)))
 (let ((?x26689 (* l_0_18_60 l_0_18_60)))
 (let ((?x26687 (* l_0_18_59 l_0_18_59)))
 (let ((?x26685 (* l_0_18_58 l_0_18_58)))
 (let ((?x26683 (* l_0_18_57 l_0_18_57)))
 (let ((?x26681 (* l_0_18_56 l_0_18_56)))
 (let ((?x26589 (* (* 2.0 l_0_18_55) l_0_18_59)))
 (let ((?x26585 (* (* 2.0 l_0_18_54) l_0_18_58)))
 (let ((?x26581 (* (* 2.0 l_0_18_53) l_0_18_57)))
 (let ((?x26577 (* (* 2.0 l_0_18_52) l_0_18_56)))
 (let ((?x26675 (* l_0_18_45 l_0_18_45)))
 (let ((?x26673 (* l_0_18_44 l_0_18_44)))
 (let ((?x26671 (* l_0_18_43 l_0_18_43)))
 (let ((?x26669 (* l_0_18_42 l_0_18_42)))
 (let ((?x26667 (* l_0_18_41 l_0_18_41)))
 (let ((?x26573 (* (* 2.0 l_0_18_40) l_0_18_44)))
 (let ((?x26569 (* (* 2.0 l_0_18_39) l_0_18_43)))
 (let ((?x26565 (* (* 2.0 l_0_18_38) l_0_18_42)))
 (let ((?x26561 (* (* 2.0 l_0_18_37) l_0_18_41)))
 (let ((?x26661 (* l_0_18_105 l_0_18_105)))
 (let ((?x26659 (* l_0_18_104 l_0_18_104)))
 (let ((?x26657 (* l_0_18_103 l_0_18_103)))
 (let ((?x26655 (* l_0_18_102 l_0_18_102)))
 (let ((?x26653 (* l_0_18_101 l_0_18_101)))
 (let ((?x26650 (* l_0_18_90 l_0_18_90)))
 (let ((?x26648 (* l_0_18_89 l_0_18_89)))
 (let ((?x26646 (* l_0_18_88 l_0_18_88)))
 (let ((?x26649 (+ (+ (+ (* l_0_18_86 l_0_18_86) (* l_0_18_87 l_0_18_87)) ?x26646) ?x26648)))
 (let ((?x26651 (+ ?x26649 ?x26650)))
 (let ((?x22885 (- _a_1_)))
 (let ((?x26663 (+ (+ (+ (+ (+ (+ (* ?x22885 ?x26651) ?x26653) ?x26655) ?x26657) ?x26659) ?x26661) ?x26561)))
 (let ((?x26674 (- (- (- (- (+ (+ (+ ?x26663 ?x26565) ?x26569) ?x26573) ?x26667) ?x26669) ?x26671) ?x26673)))
 (let ((?x26684 (+ (+ (- (- (- (- (- ?x26674 ?x26675) ?x26577) ?x26581) ?x26585) ?x26589) ?x26681) ?x26683)))
 (let ((?x26698 (- (- (- (- (+ (+ (+ ?x26684 ?x26685) ?x26687) ?x26689) ?x26691) ?x26693) ?x26695) ?x26697)))
 (= (- ?x26698 ?x26699) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x26032 (* l_0_18_46 l_0_18_46)))
 (let ((?x26030 (* l_0_18_31 l_0_18_31)))
 (let ((?x25063 (* 2.0 l_0_18_101)))
 (let ((?x26123 (* ?x25063 l_0_18_91)))
 (let ((?x21180 (- (+ (- (* (* (* (- 2.0) _a_2_) l_0_18_76) l_0_18_86) ?x26123) ?x26030) ?x26032)))
 (= ?x21180 0.0)))))))
(assert
 (let ((?x25090 (* 2.0 l_0_18_46)))
 (let ((?x26135 (* ?x25090 l_0_18_56)))
 (let ((?x25087 (* 2.0 l_0_18_31)))
 (let ((?x26132 (* ?x25087 l_0_18_41)))
 (let ((?x26661 (* l_0_18_105 l_0_18_105)))
 (let ((?x26659 (* l_0_18_104 l_0_18_104)))
 (let ((?x26657 (* l_0_18_103 l_0_18_103)))
 (let ((?x26655 (* l_0_18_102 l_0_18_102)))
 (let ((?x26653 (* l_0_18_101 l_0_18_101)))
 (let ((?x26650 (* l_0_18_90 l_0_18_90)))
 (let ((?x26648 (* l_0_18_89 l_0_18_89)))
 (let ((?x26646 (* l_0_18_88 l_0_18_88)))
 (let ((?x26649 (+ (+ (+ (* l_0_18_86 l_0_18_86) (* l_0_18_87 l_0_18_87)) ?x26646) ?x26648)))
 (let ((?x26651 (+ ?x26649 ?x26650)))
 (let ((?x22902 (- _a_2_)))
 (let ((?x26726 (+ (- (- (- (- (- (* ?x22902 ?x26651) ?x26653) ?x26655) ?x26657) ?x26659) ?x26661) ?x26132)))
 (= (- ?x26726 ?x26135) 0.0))))))))))))))))))
(assert
 (let ((?x26217 (* l_0_18_48 l_0_18_48)))
 (let ((?x26215 (* l_0_18_47 l_0_18_47)))
 (let ((?x26213 (* l_0_18_33 l_0_18_33)))
 (let ((?x26211 (* l_0_18_32 l_0_18_32)))
 (let ((?x25060 (+ (* (* 2.0 l_0_18_77) l_0_18_86) (* (* 2.0 l_0_18_78) l_0_18_87))))
 (let ((?x22867 (- _a_0_)))
 (let ((?x4557 (- (- (* ?x22867 ?x25060) (* (* 2.0 l_0_18_107) l_0_18_116)) (* (* 2.0 l_0_18_108) l_0_18_117))))
 (let ((?x4533 (- (- ?x4557 (* (* 2.0 l_0_18_122) l_0_18_131)) (* (* 2.0 l_0_18_123) l_0_18_132))))
 (let ((?x21296 (- (- ?x4533 (* (* 2.0 l_0_18_137) l_0_18_146)) (* (* 2.0 l_0_18_138) l_0_18_147))))
 (let ((?x14327 (- (- ?x21296 (* (* 2.0 l_0_18_152) l_0_18_161)) (* (* 2.0 l_0_18_153) l_0_18_162))))
 (let ((?x4515 (- (- ?x14327 (* (* 2.0 l_0_18_167) l_0_18_176)) (* (* 2.0 l_0_18_168) l_0_18_177))))
 (let ((?x26730 (- (- ?x4515 (* (* 2.0 l_0_18_182) l_0_18_191)) (* (* 2.0 l_0_18_183) l_0_18_192))))
 (= (- (- (+ (+ ?x26730 ?x26211) ?x26213) ?x26215) ?x26217) 0.0))))))))))))))
(assert
 (let ((?x25527 (* 2.0 l_0_18_48)))
 (let ((?x26453 (* ?x25527 l_0_18_57)))
 (let ((?x25524 (* 2.0 l_0_18_47)))
 (let ((?x26450 (* ?x25524 l_0_18_56)))
 (let ((?x25521 (* 2.0 l_0_18_33)))
 (let ((?x26447 (* ?x25521 l_0_18_42)))
 (let ((?x25518 (* 2.0 l_0_18_32)))
 (let ((?x26444 (* ?x25518 l_0_18_41)))
 (let ((?x26850 (* l_0_18_195 l_0_18_195)))
 (let ((?x26848 (* l_0_18_194 l_0_18_194)))
 (let ((?x26846 (* l_0_18_193 l_0_18_193)))
 (let ((?x26844 (* l_0_18_192 l_0_18_192)))
 (let ((?x26842 (* l_0_18_191 l_0_18_191)))
 (let ((?x26840 (* l_0_18_180 l_0_18_180)))
 (let ((?x26838 (* l_0_18_179 l_0_18_179)))
 (let ((?x26836 (* l_0_18_178 l_0_18_178)))
 (let ((?x26834 (* l_0_18_177 l_0_18_177)))
 (let ((?x26832 (* l_0_18_176 l_0_18_176)))
 (let ((?x26830 (* l_0_18_165 l_0_18_165)))
 (let ((?x26828 (* l_0_18_164 l_0_18_164)))
 (let ((?x26826 (* l_0_18_163 l_0_18_163)))
 (let ((?x26824 (* l_0_18_162 l_0_18_162)))
 (let ((?x26822 (* l_0_18_161 l_0_18_161)))
 (let ((?x26820 (* l_0_18_150 l_0_18_150)))
 (let ((?x26818 (* l_0_18_149 l_0_18_149)))
 (let ((?x26816 (* l_0_18_148 l_0_18_148)))
 (let ((?x26814 (* l_0_18_147 l_0_18_147)))
 (let ((?x26812 (* l_0_18_146 l_0_18_146)))
 (let ((?x26810 (* l_0_18_135 l_0_18_135)))
 (let ((?x26808 (* l_0_18_134 l_0_18_134)))
 (let ((?x26806 (* l_0_18_133 l_0_18_133)))
 (let ((?x26804 (* l_0_18_132 l_0_18_132)))
 (let ((?x26802 (* l_0_18_131 l_0_18_131)))
 (let ((?x26800 (* l_0_18_120 l_0_18_120)))
 (let ((?x26798 (* l_0_18_119 l_0_18_119)))
 (let ((?x26796 (* l_0_18_118 l_0_18_118)))
 (let ((?x26794 (* l_0_18_117 l_0_18_117)))
 (let ((?x26792 (* l_0_18_116 l_0_18_116)))
 (let ((?x26650 (* l_0_18_90 l_0_18_90)))
 (let ((?x26648 (* l_0_18_89 l_0_18_89)))
 (let ((?x26646 (* l_0_18_88 l_0_18_88)))
 (let ((?x26649 (+ (+ (+ (* l_0_18_86 l_0_18_86) (* l_0_18_87 l_0_18_87)) ?x26646) ?x26648)))
 (let ((?x26651 (+ ?x26649 ?x26650)))
 (let ((?x22867 (- _a_0_)))
 (let ((?x26803 (- (- (- (- (- (- (* ?x22867 ?x26651) ?x26792) ?x26794) ?x26796) ?x26798) ?x26800) ?x26802)))
 (let ((?x26817 (- (- (- (- (- (- (- ?x26803 ?x26804) ?x26806) ?x26808) ?x26810) ?x26812) ?x26814) ?x26816)))
 (let ((?x26831 (- (- (- (- (- (- (- ?x26817 ?x26818) ?x26820) ?x26822) ?x26824) ?x26826) ?x26828) ?x26830)))
 (let ((?x26845 (- (- (- (- (- (- (- ?x26831 ?x26832) ?x26834) ?x26836) ?x26838) ?x26840) ?x26842) ?x26844)))
 (let ((?x26855 (- (- (+ (+ (- (- (- ?x26845 ?x26846) ?x26848) ?x26850) ?x26444) ?x26447) ?x26450) ?x26453)))
 (= ?x26855 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x26689 (* l_0_18_60 l_0_18_60)))
 (let ((?x26687 (* l_0_18_59 l_0_18_59)))
 (let ((?x26685 (* l_0_18_58 l_0_18_58)))
 (let ((?x26683 (* l_0_18_57 l_0_18_57)))
 (let ((?x26681 (* l_0_18_56 l_0_18_56)))
 (let ((?x26675 (* l_0_18_45 l_0_18_45)))
 (let ((?x26673 (* l_0_18_44 l_0_18_44)))
 (let ((?x26671 (* l_0_18_43 l_0_18_43)))
 (let ((?x14656 (+ (+ (+ (* l_0_18_41 l_0_18_41) (* l_0_18_42 l_0_18_42)) ?x26671) ?x26673)))
 (= (- (- (- (- (- (+ ?x14656 ?x26675) ?x26681) ?x26683) ?x26685) ?x26687) ?x26689) 0.0)))))))))))
(assert
 (let ((?x25140 (* 2.0 l_0_18_91)))
 (let ((?x25141 (* ?x25140 l_0_18_92)))
 (let ((?x5043 (* l_0_18_181 l_0_18_181)))
 (let ((?x5029 (* l_0_18_166 l_0_18_166)))
 (let ((?x5021 (* l_0_18_151 l_0_18_151)))
 (let ((?x14701 (* l_0_18_136 l_0_18_136)))
 (let ((?x5115 (* l_0_18_121 l_0_18_121)))
 (let ((?x14749 (* l_0_18_106 l_0_18_106)))
 (let ((?x5123 (- (* (* (- _a_0_) l_0_18_76) l_0_18_76) (* (* (* 2.0 _a_2_) l_0_18_76) l_0_18_77))))
 (let ((?x14707 (- (- (- (- (- (- (- ?x5123 ?x14749) ?x5115) ?x14701) ?x5021) ?x5029) ?x5043) ?x25141)))
 (= ?x14707 0.0))))))))))))
(assert
 (let ((?x26225 (* l_0_18_93 l_0_18_93)))
 (let ((?x26223 (* l_0_18_92 l_0_18_92)))
 (let ((?x26896 (- (* (* (* (- 2.0) _a_0_) l_0_18_76) l_0_18_77) (* _a_2_ (+ (* l_0_18_77 l_0_18_77) (* l_0_18_78 l_0_18_78))))))
 (let ((?x26900 (- (- ?x26896 (* (* 2.0 l_0_18_106) l_0_18_107)) (* (* 2.0 l_0_18_121) l_0_18_122))))
 (let ((?x26904 (- (- ?x26900 (* (* 2.0 l_0_18_136) l_0_18_137)) (* (* 2.0 l_0_18_151) l_0_18_152))))
 (let ((?x26908 (- (- ?x26904 (* (* 2.0 l_0_18_166) l_0_18_167)) (* (* 2.0 l_0_18_181) l_0_18_182))))
 (= (- (- ?x26908 ?x26223) ?x26225) 0.0))))))))
(assert
 (let ((?x26955 (* l_0_18_183 l_0_18_183)))
 (let ((?x26953 (* l_0_18_182 l_0_18_182)))
 (let ((?x26951 (* l_0_18_168 l_0_18_168)))
 (let ((?x26949 (* l_0_18_167 l_0_18_167)))
 (let ((?x26947 (* l_0_18_153 l_0_18_153)))
 (let ((?x26945 (* l_0_18_152 l_0_18_152)))
 (let ((?x26943 (* l_0_18_138 l_0_18_138)))
 (let ((?x26941 (* l_0_18_137 l_0_18_137)))
 (let ((?x26939 (* l_0_18_123 l_0_18_123)))
 (let ((?x21681 (* l_0_18_122 l_0_18_122)))
 (let ((?x5380 (* l_0_18_108 l_0_18_108)))
 (let ((?x21688 (* l_0_18_107 l_0_18_107)))
 (let ((?x26183 (* l_0_18_78 l_0_18_78)))
 (let ((?x26182 (* l_0_18_77 l_0_18_77)))
 (let ((?x26184 (+ ?x26182 ?x26183)))
 (let ((?x22867 (- _a_0_)))
 (let ((?x26944 (- (- (- (- (- (- (* ?x22867 ?x26184) ?x21688) ?x5380) ?x21681) ?x26939) ?x26941) ?x26943)))
 (= (- (- (- (- (- (- ?x26944 ?x26945) ?x26947) ?x26949) ?x26951) ?x26953) ?x26955) 0.0)))))))))))))))))))
(assert
 (let ((?x26038 (* l_0_18_91 l_0_18_91)))
 (= (- (* (* (- _a_2_) l_0_18_76) l_0_18_76) ?x26038) 0.0)))
(assert
 (>= l_0_18_1 0.0))
(assert
 (>= l_0_18_3 0.0))
(assert
 (>= l_0_18_6 0.0))
(assert
 (>= l_0_18_10 0.0))
(assert
 (>= l_0_18_15 0.0))
(assert
 (>= l_0_18_16 0.0))
(assert
 (>= l_0_18_18 0.0))
(assert
 (>= l_0_18_21 0.0))
(assert
 (>= l_0_18_25 0.0))
(assert
 (>= l_0_18_30 0.0))
(assert
 (>= l_0_18_31 0.0))
(assert
 (>= l_0_18_33 0.0))
(assert
 (>= l_0_18_36 0.0))
(assert
 (>= l_0_18_40 0.0))
(assert
 (>= l_0_18_45 0.0))
(assert
 (>= l_0_18_46 0.0))
(assert
 (>= l_0_18_48 0.0))
(assert
 (>= l_0_18_51 0.0))
(assert
 (>= l_0_18_55 0.0))
(assert
 (>= l_0_18_60 0.0))
(assert
 (>= l_0_18_61 0.0))
(assert
 (>= l_0_18_63 0.0))
(assert
 (>= l_0_18_66 0.0))
(assert
 (>= l_0_18_70 0.0))
(assert
 (>= l_0_18_75 0.0))
(assert
 (>= l_0_18_76 0.0))
(assert
 (>= l_0_18_78 0.0))
(assert
 (>= l_0_18_81 0.0))
(assert
 (>= l_0_18_85 0.0))
(assert
 (>= l_0_18_90 0.0))
(assert
 (>= l_0_18_91 0.0))
(assert
 (>= l_0_18_93 0.0))
(assert
 (>= l_0_18_96 0.0))
(assert
 (>= l_0_18_100 0.0))
(assert
 (>= l_0_18_105 0.0))
(assert
 (>= l_0_18_106 0.0))
(assert
 (>= l_0_18_108 0.0))
(assert
 (>= l_0_18_111 0.0))
(assert
 (>= l_0_18_115 0.0))
(assert
 (>= l_0_18_120 0.0))
(assert
 (>= l_0_18_121 0.0))
(assert
 (>= l_0_18_123 0.0))
(assert
 (>= l_0_18_126 0.0))
(assert
 (>= l_0_18_130 0.0))
(assert
 (>= l_0_18_135 0.0))
(assert
 (>= l_0_18_136 0.0))
(assert
 (>= l_0_18_138 0.0))
(assert
 (>= l_0_18_141 0.0))
(assert
 (>= l_0_18_145 0.0))
(assert
 (>= l_0_18_150 0.0))
(assert
 (>= l_0_18_151 0.0))
(assert
 (>= l_0_18_153 0.0))
(assert
 (>= l_0_18_156 0.0))
(assert
 (>= l_0_18_160 0.0))
(assert
 (>= l_0_18_165 0.0))
(assert
 (>= l_0_18_166 0.0))
(assert
 (>= l_0_18_168 0.0))
(assert
 (>= l_0_18_171 0.0))
(assert
 (>= l_0_18_175 0.0))
(assert
 (>= l_0_18_180 0.0))
(assert
 (>= l_0_18_181 0.0))
(assert
 (>= l_0_18_183 0.0))
(assert
 (>= l_0_18_186 0.0))
(assert
 (>= l_0_18_190 0.0))
(assert
 (>= l_0_18_195 0.0))
(assert
 (= (- (* (- _a_0_) l_0_19_6) l_0_19_8) 0.0))
(assert
 (= (- (- l_0_19_1 l_0_19_2) 1.0) 0.0))
(assert
 (let ((?x27056 (- (+ (- (* (- _a_1_) l_0_19_6) l_0_19_3) l_0_19_4) l_0_19_5)))
 (= (- ?x27056 l_0_19_7) 0.0)))
(assert
 (= (- l_0_19_3 l_0_19_4) 0.0))
(assert
 (= (+ (* (- _a_2_) l_0_19_6) l_0_19_7) 0.0))
(assert
 (>= l_0_19_1 0.0))
(assert
 (>= l_0_19_2 0.0))
(assert
 (>= l_0_19_3 0.0))
(assert
 (>= l_0_19_4 0.0))
(assert
 (>= l_0_19_5 0.0))
(assert
 (>= l_0_19_6 0.0))
(assert
 (>= l_0_19_7 0.0))
(assert
 (>= l_0_19_8 0.0))
(assert
 (= (+ (- l_0_20_1 l_0_20_2) 1.0) 0.0))
(assert
 (let ((?x27095 (- (- (- (* (- _a_0_) l_0_20_6) l_0_20_10) l_0_20_8) l_0_20_9)))
 (= ?x27095 0.0)))
(assert
 (let ((?x27107 (- (+ (- (* (- _a_1_) l_0_20_6) l_0_20_3) l_0_20_4) l_0_20_5)))
 (= (- ?x27107 l_0_20_7) 0.0)))
(assert
 (= (- l_0_20_3 l_0_20_4) 0.0))
(assert
 (= (+ (* (- _a_2_) l_0_20_6) l_0_20_7) 0.0))
(assert
 (>= l_0_20_1 0.0))
(assert
 (>= l_0_20_2 0.0))
(assert
 (>= l_0_20_3 0.0))
(assert
 (>= l_0_20_4 0.0))
(assert
 (>= l_0_20_5 0.0))
(assert
 (>= l_0_20_6 0.0))
(assert
 (>= l_0_20_7 0.0))
(assert
 (>= l_0_20_8 0.0))
(assert
 (>= l_0_20_9 0.0))
(assert
 (>= l_0_20_10 0.0))
(assert
 (let ((?x27131 (- (+ (- (* (- _a_1_) l_0_21_6) l_0_21_3) l_0_21_4) l_0_21_5)))
 (= (+ (- ?x27131 l_0_21_7) 1.0) 0.0)))
(assert
 (= (- (- l_0_21_3 l_0_21_4) 1.0) 0.0))
(assert
 (= (- l_0_21_1 l_0_21_2) 0.0))
(assert
 (let ((?x27156 (- (- (- (* (- _a_0_) l_0_21_6) l_0_21_10) l_0_21_11) l_0_21_12)))
 (= (- (- ?x27156 l_0_21_8) l_0_21_9) 0.0)))
(assert
 (= (+ (* (- _a_2_) l_0_21_6) l_0_21_7) 0.0))
(assert
 (>= l_0_21_1 0.0))
(assert
 (>= l_0_21_2 0.0))
(assert
 (>= l_0_21_3 0.0))
(assert
 (>= l_0_21_4 0.0))
(assert
 (>= l_0_21_5 0.0))
(assert
 (>= l_0_21_6 0.0))
(assert
 (>= l_0_21_7 0.0))
(assert
 (>= l_0_21_8 0.0))
(assert
 (>= l_0_21_9 0.0))
(assert
 (>= l_0_21_10 0.0))
(assert
 (>= l_0_21_11 0.0))
(assert
 (>= l_0_21_12 0.0))
(assert
 (= (+ (- l_0_22_3 l_0_22_4) 1.0) 0.0))
(assert
 (let ((?x27195 (- (+ (- (* (- _a_1_) l_0_22_6) l_0_22_3) l_0_22_4) l_0_22_5)))
 (= (- (- ?x27195 l_0_22_7) 1.0) 0.0)))
(assert
 (= (- l_0_22_1 l_0_22_2) 0.0))
(assert
 (let ((?x27214 (- (- (- (* (- _a_0_) l_0_22_6) l_0_22_10) l_0_22_11) l_0_22_12)))
 (= (- (- (- (- ?x27214 l_0_22_13) l_0_22_14) l_0_22_8) l_0_22_9) 0.0)))
(assert
 (= (+ (* (- _a_2_) l_0_22_6) l_0_22_7) 0.0))
(assert
 (>= l_0_22_1 0.0))
(assert
 (>= l_0_22_2 0.0))
(assert
 (>= l_0_22_3 0.0))
(assert
 (>= l_0_22_4 0.0))
(assert
 (>= l_0_22_5 0.0))
(assert
 (>= l_0_22_6 0.0))
(assert
 (>= l_0_22_7 0.0))
(assert
 (>= l_0_22_8 0.0))
(assert
 (>= l_0_22_9 0.0))
(assert
 (>= l_0_22_10 0.0))
(assert
 (>= l_0_22_11 0.0))
(assert
 (>= l_0_22_12 0.0))
(assert
 (>= l_0_22_13 0.0))
(assert
 (>= l_0_22_14 0.0))
(assert
 (let ((?x27255 (- (+ (- (* (- _a_1_) l_0_23_6) l_0_23_3) l_0_23_4) l_0_23_5)))
 (= (+ (- ?x27255 l_0_23_7) 1.0) 0.0)))
(assert
 (let ((?x27274 (- (- (- (* (- _a_0_) l_0_23_6) l_0_23_10) l_0_23_11) l_0_23_12)))
 (let ((?x27279 (- (- (- (- (- ?x27274 l_0_23_13) l_0_23_14) l_0_23_15) l_0_23_16) l_0_23_8)))
 (= (- ?x27279 l_0_23_9) 0.0))))
(assert
 (= (- l_0_23_1 l_0_23_2) 0.0))
(assert
 (= (- l_0_23_3 l_0_23_4) 0.0))
(assert
 (= (+ (* (- _a_2_) l_0_23_6) l_0_23_7) 0.0))
(assert
 (>= l_0_23_1 0.0))
(assert
 (>= l_0_23_2 0.0))
(assert
 (>= l_0_23_3 0.0))
(assert
 (>= l_0_23_4 0.0))
(assert
 (>= l_0_23_5 0.0))
(assert
 (>= l_0_23_6 0.0))
(assert
 (>= l_0_23_7 0.0))
(assert
 (>= l_0_23_8 0.0))
(assert
 (>= l_0_23_9 0.0))
(assert
 (>= l_0_23_10 0.0))
(assert
 (>= l_0_23_11 0.0))
(assert
 (>= l_0_23_12 0.0))
(assert
 (>= l_0_23_13 0.0))
(assert
 (>= l_0_23_14 0.0))
(assert
 (>= l_0_23_15 0.0))
(assert
 (>= l_0_23_16 0.0))
(assert
 (let ((?x27331 (- (- (- (+ (* (- _a_0_) l_0_24_6) _a_0_) l_0_24_10) l_0_24_11) l_0_24_12)))
 (let ((?x27336 (- (- (- (- (- ?x27331 l_0_24_13) l_0_24_14) l_0_24_15) l_0_24_16) l_0_24_17)))
 (= (- (- (- ?x27336 l_0_24_18) l_0_24_8) l_0_24_9) 0.0))))
(assert
 (let ((?x27363 (- (+ (- (+ (* (- _a_1_) l_0_24_6) _a_1_) l_0_24_3) l_0_24_4) l_0_24_5)))
 (= (- ?x27363 l_0_24_7) 0.0)))
(assert
 (= (+ (+ (* (- _a_2_) l_0_24_6) (* 4.0 _a_2_)) l_0_24_7) 0.0))
(assert
 (= (- l_0_24_1 l_0_24_2) 0.0))
(assert
 (= (- l_0_24_3 l_0_24_4) 0.0))
(assert
 (>= l_0_24_1 0.0))
(assert
 (>= l_0_24_2 0.0))
(assert
 (>= l_0_24_3 0.0))
(assert
 (>= l_0_24_4 0.0))
(assert
 (>= l_0_24_5 0.0))
(assert
 (>= l_0_24_6 0.0))
(assert
 (>= l_0_24_7 0.0))
(assert
 (>= l_0_24_8 0.0))
(assert
 (>= l_0_24_9 0.0))
(assert
 (>= l_0_24_10 0.0))
(assert
 (>= l_0_24_11 0.0))
(assert
 (>= l_0_24_12 0.0))
(assert
 (>= l_0_24_13 0.0))
(assert
 (>= l_0_24_14 0.0))
(assert
 (>= l_0_24_15 0.0))
(assert
 (>= l_0_24_16 0.0))
(assert
 (>= l_0_24_17 0.0))
(assert
 (>= l_0_24_18 0.0))
(check-sat)
(get-model)