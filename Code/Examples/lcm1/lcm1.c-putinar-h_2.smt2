(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_8 () Real)
(declare-fun l_0_0_7 () Real)
(declare-fun l_0_0_5 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_16 () Real)
(declare-fun l_0_0_13 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_14 () Real)
(declare-fun l_0_0_6 () Real)
(declare-fun l_0_0_10 () Real)
(declare-fun l_0_0_9 () Real)
(declare-fun l_0_0_17 () Real)
(declare-fun l_0_0_15 () Real)
(declare-fun l_0_0_18 () Real)
(declare-fun l_0_0_11 () Real)
(declare-fun l_0_0_12 () Real)
(declare-fun l_0_1_8 () Real)
(declare-fun l_0_1_7 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_22 () Real)
(declare-fun l_0_1_19 () Real)
(declare-fun l_0_1_16 () Real)
(declare-fun l_0_1_13 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_20 () Real)
(declare-fun l_0_1_14 () Real)
(declare-fun l_0_1_6 () Real)
(declare-fun l_0_1_10 () Real)
(declare-fun l_0_1_9 () Real)
(declare-fun l_0_1_23 () Real)
(declare-fun l_0_1_21 () Real)
(declare-fun l_0_1_17 () Real)
(declare-fun l_0_1_15 () Real)
(declare-fun l_0_1_24 () Real)
(declare-fun l_0_1_18 () Real)
(declare-fun l_0_1_11 () Real)
(declare-fun l_0_1_12 () Real)
(declare-fun l_0_2_85 () Real)
(declare-fun l_0_2_57 () Real)
(declare-fun l_0_2_74 () Real)
(declare-fun l_0_2_62 () Real)
(declare-fun l_0_2_73 () Real)
(declare-fun l_0_2_61 () Real)
(declare-fun l_0_2_72 () Real)
(declare-fun l_0_2_60 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_90 () Real)
(declare-fun l_0_2_102 () Real)
(declare-fun l_0_2_89 () Real)
(declare-fun l_0_2_101 () Real)
(declare-fun l_0_2_88 () Real)
(declare-fun l_0_2_100 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_39 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_44 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_50 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_40 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_45 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_46 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_51 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_37 () Real)
(declare-fun l_0_2_41 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_52 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_38 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_42 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_47 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_53 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_43 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_48 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_54 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_49 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_55 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_56 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_79 () Real)
(declare-fun l_0_2_59 () Real)
(declare-fun l_0_2_78 () Real)
(declare-fun l_0_2_58 () Real)
(declare-fun l_0_2_87 () Real)
(declare-fun l_0_2_107 () Real)
(declare-fun l_0_2_86 () Real)
(declare-fun l_0_2_106 () Real)
(declare-fun l_0_2_98 () Real)
(declare-fun l_0_2_94 () Real)
(declare-fun l_0_2_97 () Real)
(declare-fun l_0_2_93 () Real)
(declare-fun l_0_2_96 () Real)
(declare-fun l_0_2_92 () Real)
(declare-fun l_0_2_95 () Real)
(declare-fun l_0_2_91 () Real)
(declare-fun l_0_2_70 () Real)
(declare-fun l_0_2_66 () Real)
(declare-fun l_0_2_69 () Real)
(declare-fun l_0_2_65 () Real)
(declare-fun l_0_2_68 () Real)
(declare-fun l_0_2_64 () Real)
(declare-fun l_0_2_67 () Real)
(declare-fun l_0_2_63 () Real)
(declare-fun l_0_2_80 () Real)
(declare-fun l_0_2_108 () Real)
(declare-fun l_0_2_75 () Real)
(declare-fun l_0_2_103 () Real)
(declare-fun l_0_2_81 () Real)
(declare-fun l_0_2_109 () Real)
(declare-fun l_0_2_99 () Real)
(declare-fun l_0_2_71 () Real)
(declare-fun l_0_2_76 () Real)
(declare-fun l_0_2_104 () Real)
(declare-fun l_0_2_82 () Real)
(declare-fun l_0_2_110 () Real)
(declare-fun l_0_2_77 () Real)
(declare-fun l_0_2_105 () Real)
(declare-fun l_0_2_83 () Real)
(declare-fun l_0_2_111 () Real)
(declare-fun l_0_2_84 () Real)
(declare-fun l_0_2_112 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_90 () Real)
(declare-fun l_0_3_102 () Real)
(declare-fun l_0_3_89 () Real)
(declare-fun l_0_3_101 () Real)
(declare-fun l_0_3_88 () Real)
(declare-fun l_0_3_100 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_86 () Real)
(declare-fun l_0_3_85 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_3_96 () Real)
(declare-fun l_0_3_87 () Real)
(declare-fun l_0_3_95 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_3_79 () Real)
(declare-fun l_0_3_78 () Real)
(declare-fun l_0_3_107 () Real)
(declare-fun l_0_3_106 () Real)
(declare-fun _a_5_ () Real)
(declare-fun l_0_3_98 () Real)
(declare-fun l_0_3_94 () Real)
(declare-fun l_0_3_97 () Real)
(declare-fun l_0_3_93 () Real)
(declare-fun l_0_3_92 () Real)
(declare-fun l_0_3_91 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_80 () Real)
(declare-fun l_0_3_108 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_103 () Real)
(declare-fun l_0_3_81 () Real)
(declare-fun l_0_3_109 () Real)
(declare-fun l_0_3_99 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_76 () Real)
(declare-fun l_0_3_104 () Real)
(declare-fun l_0_3_82 () Real)
(declare-fun l_0_3_110 () Real)
(declare-fun l_0_3_77 () Real)
(declare-fun l_0_3_105 () Real)
(declare-fun l_0_3_83 () Real)
(declare-fun l_0_3_111 () Real)
(declare-fun l_0_3_84 () Real)
(declare-fun l_0_3_112 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_114 () Real)
(declare-fun l_0_4_113 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_124 () Real)
(declare-fun l_0_4_115 () Real)
(declare-fun l_0_4_123 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_135 () Real)
(declare-fun l_0_4_134 () Real)
(declare-fun l_0_4_107 () Real)
(declare-fun l_0_4_106 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_126 () Real)
(declare-fun l_0_4_122 () Real)
(declare-fun l_0_4_125 () Real)
(declare-fun l_0_4_121 () Real)
(declare-fun l_0_4_120 () Real)
(declare-fun l_0_4_119 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_130 () Real)
(declare-fun l_0_4_118 () Real)
(declare-fun l_0_4_129 () Real)
(declare-fun l_0_4_117 () Real)
(declare-fun l_0_4_128 () Real)
(declare-fun l_0_4_116 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_136 () Real)
(declare-fun l_0_4_108 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_131 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_137 () Real)
(declare-fun l_0_4_109 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_127 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_132 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_138 () Real)
(declare-fun l_0_4_110 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_133 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_139 () Real)
(declare-fun l_0_4_111 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_140 () Real)
(declare-fun l_0_4_112 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_107 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_106 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_108 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_109 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_110 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_111 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_112 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_135 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_134 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_126 () Real)
(declare-fun l_0_6_122 () Real)
(declare-fun l_0_6_125 () Real)
(declare-fun l_0_6_121 () Real)
(declare-fun l_0_6_124 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_123 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_130 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_129 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_128 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_136 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_131 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_137 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_127 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_132 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_138 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_133 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_139 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_140 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_136 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_137 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_138 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_139 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_140 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_106 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_109 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_108 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_107 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_110 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_111 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_112 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_134 () Real)
(declare-fun l_0_12_113 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_106 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_137 () Real)
(declare-fun l_0_12_122 () Real)
(declare-fun l_0_12_136 () Real)
(declare-fun l_0_12_121 () Real)
(declare-fun l_0_12_135 () Real)
(declare-fun l_0_12_120 () Real)
(declare-fun l_0_12_119 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_109 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_108 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_107 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_115 () Real)
(declare-fun l_0_12_114 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_126 () Real)
(declare-fun l_0_12_125 () Real)
(declare-fun l_0_12_124 () Real)
(declare-fun l_0_12_123 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_130 () Real)
(declare-fun l_0_12_118 () Real)
(declare-fun l_0_12_129 () Real)
(declare-fun l_0_12_117 () Real)
(declare-fun l_0_12_128 () Real)
(declare-fun l_0_12_116 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_131 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_127 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_132 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_138 () Real)
(declare-fun l_0_12_110 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_133 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_139 () Real)
(declare-fun l_0_12_111 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_140 () Real)
(declare-fun l_0_12_112 () Real)
(assert
 (let ((?x1431 (- (* (* (- 2.0) l_0_0_13) l_0_0_16) (* (* 2.0 l_0_0_2) l_0_0_4))))
 (let ((?x1437 (- (- ?x1431 (* (* 2.0 l_0_0_3) l_0_0_5)) (* (* 2.0 l_0_0_7) l_0_0_8))))
 (= ?x1437 0.0))))
(assert
 (= (* (- l_0_0_1) l_0_0_1) 0.0))
(assert
 (= (- (* (* (- 2.0) l_0_0_1) l_0_0_2) (* l_0_0_13 l_0_0_13)) 0.0))
(assert
 (= (- (* (* (- 2.0) l_0_0_1) l_0_0_4) (* l_0_0_7 l_0_0_7)) 0.0))
(assert
 (let ((?x1516 (* l_0_0_3 l_0_0_3)))
 (let ((?x1517 (- (- (* (* (- 2.0) l_0_0_13) l_0_0_14) (* l_0_0_2 l_0_0_2)) ?x1516)))
 (= ?x1517 0.0))))
(assert
 (let ((?x1536 (* l_0_0_6 l_0_0_6)))
 (let ((?x1534 (* l_0_0_5 l_0_0_5)))
 (let ((?x1535 (- (- (* (* (- 2.0) l_0_0_10) l_0_0_7) (* l_0_0_4 l_0_0_4)) ?x1534)))
 (= (- ?x1535 ?x1536) 0.0)))))
(assert
 (let ((?x1560 (* l_0_0_9 l_0_0_9)))
 (let ((?x1558 (* l_0_0_8 l_0_0_8)))
 (let ((?x1557 (- (* (* (- 2.0) l_0_0_14) l_0_0_16) (* (* 2.0 l_0_0_15) l_0_0_17))))
 (= (- (- ?x1557 ?x1558) ?x1560) 0.0)))))
(assert
 (let ((?x1588 (* l_0_0_18 l_0_0_18)))
 (let ((?x1586 (* l_0_0_17 l_0_0_17)))
 (let ((?x1584 (* l_0_0_16 l_0_0_16)))
 (let ((?x1583 (- (* (* (- 2.0) l_0_0_10) l_0_0_8) (* (* 2.0 l_0_0_11) l_0_0_9))))
 (= (- (- (- ?x1583 ?x1584) ?x1586) ?x1588) 0.0))))))
(assert
 (let ((?x1615 (* l_0_0_12 l_0_0_12)))
 (= (- (- (* (- l_0_0_10) l_0_0_10) (* l_0_0_11 l_0_0_11)) ?x1615) 0.0)))
(assert
 (= (- (* (- l_0_0_14) l_0_0_14) (* l_0_0_15 l_0_0_15)) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_6 0.0))
(assert
 (>= l_0_0_7 0.0))
(assert
 (>= l_0_0_9 0.0))
(assert
 (>= l_0_0_12 0.0))
(assert
 (>= l_0_0_13 0.0))
(assert
 (>= l_0_0_15 0.0))
(assert
 (>= l_0_0_18 0.0))
(assert
 (let ((?x1655 (- (* (* (- 2.0) l_0_1_13) l_0_1_16) (* (* 2.0 l_0_1_19) l_0_1_22))))
 (let ((?x1661 (- (- ?x1655 (* (* 2.0 l_0_1_2) l_0_1_4)) (* (* 2.0 l_0_1_3) l_0_1_5))))
 (= (- ?x1661 (* (* 2.0 l_0_1_7) l_0_1_8)) 0.0))))
(assert
 (= (* (- l_0_1_1) l_0_1_1) 0.0))
(assert
 (let ((?x1705 (* l_0_1_19 l_0_1_19)))
 (let ((?x1706 (- (- (* (* (- 2.0) l_0_1_1) l_0_1_2) (* l_0_1_13 l_0_1_13)) ?x1705)))
 (= ?x1706 0.0))))
(assert
 (= (- (* (* (- 2.0) l_0_1_1) l_0_1_4) (* l_0_1_7 l_0_1_7)) 0.0))
(assert
 (let ((?x1736 (* l_0_1_3 l_0_1_3)))
 (let ((?x1734 (* l_0_1_2 l_0_1_2)))
 (let ((?x1733 (- (* (* (- 2.0) l_0_1_13) l_0_1_14) (* (* 2.0 l_0_1_19) l_0_1_20))))
 (= (- (- ?x1733 ?x1734) ?x1736) 0.0)))))
(assert
 (let ((?x1762 (* l_0_1_6 l_0_1_6)))
 (let ((?x1760 (* l_0_1_5 l_0_1_5)))
 (let ((?x1761 (- (- (* (* (- 2.0) l_0_1_10) l_0_1_7) (* l_0_1_4 l_0_1_4)) ?x1760)))
 (= (- ?x1761 ?x1762) 0.0)))))
(assert
 (let ((?x1792 (* l_0_1_9 l_0_1_9)))
 (let ((?x1790 (* l_0_1_8 l_0_1_8)))
 (let ((?x1783 (- (* (* (- 2.0) l_0_1_14) l_0_1_16) (* (* 2.0 l_0_1_15) l_0_1_17))))
 (let ((?x1789 (- (- ?x1783 (* (* 2.0 l_0_1_20) l_0_1_22)) (* (* 2.0 l_0_1_21) l_0_1_23))))
 (= (- (- ?x1789 ?x1790) ?x1792) 0.0))))))
(assert
 (let ((?x1838 (* l_0_1_24 l_0_1_24)))
 (let ((?x1836 (* l_0_1_23 l_0_1_23)))
 (let ((?x1834 (* l_0_1_22 l_0_1_22)))
 (let ((?x1832 (* l_0_1_18 l_0_1_18)))
 (let ((?x1830 (* l_0_1_17 l_0_1_17)))
 (let ((?x1828 (* l_0_1_16 l_0_1_16)))
 (let ((?x1827 (- (* (* (- 2.0) l_0_1_10) l_0_1_8) (* (* 2.0 l_0_1_11) l_0_1_9))))
 (= (- (- (- (- (- (- ?x1827 ?x1828) ?x1830) ?x1832) ?x1834) ?x1836) ?x1838) 0.0)))))))))
(assert
 (let ((?x1874 (* l_0_1_12 l_0_1_12)))
 (= (- (- (* (- l_0_1_10) l_0_1_10) (* l_0_1_11 l_0_1_11)) ?x1874) 0.0)))
(assert
 (let ((?x1894 (* l_0_1_21 l_0_1_21)))
 (let ((?x1892 (* l_0_1_20 l_0_1_20)))
 (let ((?x1895 (- (- (- (* (- l_0_1_14) l_0_1_14) (* l_0_1_15 l_0_1_15)) ?x1892) ?x1894)))
 (= ?x1895 0.0)))))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_6 0.0))
(assert
 (>= l_0_1_7 0.0))
(assert
 (>= l_0_1_9 0.0))
(assert
 (>= l_0_1_12 0.0))
(assert
 (>= l_0_1_13 0.0))
(assert
 (>= l_0_1_15 0.0))
(assert
 (>= l_0_1_18 0.0))
(assert
 (>= l_0_1_19 0.0))
(assert
 (>= l_0_1_21 0.0))
(assert
 (>= l_0_1_24 0.0))
(assert
 (let ((?x1928 (+ (- (* 1.0 (* l_0_2_57 l_0_2_57)) (* l_0_2_85 l_0_2_85)) 1.0)))
 (= ?x1928 0.0)))
(assert
 (let ((?x1944 (* l_0_2_29 l_0_2_29)))
 (let ((?x1940 (- (- (* (- l_0_2_1) l_0_2_1) (* (* 2.0 l_0_2_100) l_0_2_88)) (* (* 2.0 l_0_2_101) l_0_2_89))))
 (let ((?x1948 (+ (+ (- ?x1940 (* (* 2.0 l_0_2_102) l_0_2_90)) ?x1944) (* (* 2.0 l_0_2_60) l_0_2_72))))
 (let ((?x1954 (+ (+ ?x1948 (* (* 2.0 l_0_2_61) l_0_2_73)) (* (* 2.0 l_0_2_62) l_0_2_74))))
 (= ?x1954 0.0))))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x1988 (* ?x1987 l_0_2_30)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) ?x1988) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x1994 (* ?x1987 l_0_2_32)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x1994) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2004 (* ?x1987 l_0_2_35)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_7) ?x2004) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2014 (* ?x1987 l_0_2_39)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_11) ?x2014) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2024 (* ?x1987 l_0_2_44)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_16) ?x2024) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2034 (* ?x1987 l_0_2_50)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_22) ?x2034) 0.0))))
(assert
 (let ((?x2053 (* l_0_2_31 l_0_2_31)))
 (let ((?x2051 (* l_0_2_30 l_0_2_30)))
 (let ((?x2054 (+ (+ (- (* (- l_0_2_2) l_0_2_2) (* l_0_2_3 l_0_2_3)) ?x2051) ?x2053)))
 (= ?x2054 0.0)))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2075 (* ?x2074 l_0_2_33)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2072 (* ?x2071 l_0_2_32)))
 (let ((?x2068 (* 2.0 l_0_2_3)))
 (let ((?x2069 (* ?x2068 l_0_2_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_2) l_0_2_4) ?x2069) ?x2072) ?x2075) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2098 (* ?x2074 l_0_2_36)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2096 (* ?x2071 l_0_2_35)))
 (let ((?x2068 (* 2.0 l_0_2_3)))
 (let ((?x2089 (* ?x2068 l_0_2_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_2) l_0_2_7) ?x2089) ?x2096) ?x2098) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2123 (* ?x2074 l_0_2_40)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2121 (* ?x2071 l_0_2_39)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2119 (* ?x2113 l_0_2_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_11) l_0_2_2) ?x2119) ?x2121) ?x2123) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2148 (* ?x2074 l_0_2_45)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2146 (* ?x2071 l_0_2_44)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2144 (* ?x2138 l_0_2_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_16) l_0_2_2) ?x2144) ?x2146) ?x2148) 0.0))))))))
(assert
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2190 (* ?x2189 l_0_2_46)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2187 (* ?x2186 l_0_2_45)))
 (let ((?x2183 (* 2.0 l_0_2_32)))
 (let ((?x2184 (* ?x2183 l_0_2_44)))
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2181 (* ?x2074 l_0_2_51)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2179 (* ?x2071 l_0_2_50)))
 (let ((?x2176 (* 2.0 l_0_2_23)))
 (let ((?x2177 (* ?x2176 l_0_2_3)))
 (let ((?x2173 (* 2.0 l_0_2_2)))
 (let ((?x2174 (* ?x2173 l_0_2_22)))
 (let ((?x2170 (* 2.0 l_0_2_18)))
 (let ((?x2171 (* ?x2170 l_0_2_6)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2163 (* ?x2138 l_0_2_5)))
 (let ((?x2160 (* 2.0 l_0_2_16)))
 (let ((?x2162 (* ?x2160 l_0_2_4)))
 (let ((?x2185 (- (+ (+ (- (- (+ (+ ?x2162 ?x2163) ?x2171) ?x2174) ?x2177) ?x2179) ?x2181) ?x2184)))
 (= (- (- ?x2185 ?x2187) ?x2190) 0.0)))))))))))))))))))))))
(assert
 (let ((?x2245 (* l_0_2_6 l_0_2_6)))
 (let ((?x2243 (* l_0_2_5 l_0_2_5)))
 (let ((?x2241 (* l_0_2_4 l_0_2_4)))
 (let ((?x2239 (* l_0_2_34 l_0_2_34)))
 (let ((?x2242 (- (+ (+ (* l_0_2_32 l_0_2_32) (* l_0_2_33 l_0_2_33)) ?x2239) ?x2241)))
 (= (- (- ?x2242 ?x2243) ?x2245) 0.0)))))))
(assert
 (let ((?x2271 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x2268 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x2265 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2262 (* ?x2189 l_0_2_37)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2260 (* ?x2186 l_0_2_36)))
 (let ((?x2269 (- (- (+ (+ (* (* 2.0 l_0_2_32) l_0_2_35) ?x2260) ?x2262) ?x2265) ?x2268)))
 (= (- ?x2269 ?x2271) 0.0))))))))))
(assert
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2310 (* ?x2189 l_0_2_41)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2308 (* ?x2186 l_0_2_40)))
 (let ((?x2183 (* 2.0 l_0_2_32)))
 (let ((?x2306 (* ?x2183 l_0_2_39)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2304 (* ?x2303 l_0_2_6)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2301 (* ?x2113 l_0_2_5)))
 (let ((?x2309 (+ (+ (- (- (* (* (- 2.0) l_0_2_11) l_0_2_4) ?x2301) ?x2304) ?x2306) ?x2308)))
 (= (+ ?x2309 ?x2310) 0.0)))))))))))))
(assert
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2190 (* ?x2189 l_0_2_46)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2187 (* ?x2186 l_0_2_45)))
 (let ((?x2183 (* 2.0 l_0_2_32)))
 (let ((?x2184 (* ?x2183 l_0_2_44)))
 (let ((?x2170 (* 2.0 l_0_2_18)))
 (let ((?x2171 (* ?x2170 l_0_2_6)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2163 (* ?x2138 l_0_2_5)))
 (let ((?x2340 (+ (+ (- (- (* (* (- 2.0) l_0_2_16) l_0_2_4) ?x2163) ?x2171) ?x2184) ?x2187)))
 (= (+ ?x2340 ?x2190) 0.0)))))))))))))
(assert
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2365 (* ?x2189 l_0_2_52)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2363 (* ?x2186 l_0_2_51)))
 (let ((?x2183 (* 2.0 l_0_2_32)))
 (let ((?x2361 (* ?x2183 l_0_2_50)))
 (let ((?x2358 (* 2.0 l_0_2_24)))
 (let ((?x2359 (* ?x2358 l_0_2_6)))
 (let ((?x2176 (* 2.0 l_0_2_23)))
 (let ((?x2356 (* ?x2176 l_0_2_5)))
 (let ((?x2364 (+ (+ (- (- (* (* (- 2.0) l_0_2_22) l_0_2_4) ?x2356) ?x2359) ?x2361) ?x2363)))
 (= (+ ?x2364 ?x2365) 0.0)))))))))))))
(assert
 (let ((?x2405 (* l_0_2_9 l_0_2_9)))
 (let ((?x2403 (* l_0_2_8 l_0_2_8)))
 (let ((?x2401 (* l_0_2_7 l_0_2_7)))
 (let ((?x2399 (* l_0_2_38 l_0_2_38)))
 (let ((?x2397 (* l_0_2_37 l_0_2_37)))
 (let ((?x2395 (* l_0_2_36 l_0_2_36)))
 (let ((?x2398 (+ (+ (+ (* (- l_0_2_10) l_0_2_10) (* l_0_2_35 l_0_2_35)) ?x2395) ?x2397)))
 (= (- (- (- (+ ?x2398 ?x2399) ?x2401) ?x2403) ?x2405) 0.0)))))))))
(assert
 (let ((?x2446 (* 2.0 l_0_2_38)))
 (let ((?x2447 (* ?x2446 l_0_2_42)))
 (let ((?x2443 (* 2.0 l_0_2_37)))
 (let ((?x2444 (* ?x2443 l_0_2_41)))
 (let ((?x2440 (* 2.0 l_0_2_36)))
 (let ((?x2441 (* ?x2440 l_0_2_40)))
 (let ((?x2437 (* 2.0 l_0_2_35)))
 (let ((?x2438 (* ?x2437 l_0_2_39)))
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2190 (* ?x2189 l_0_2_46)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2187 (* ?x2186 l_0_2_45)))
 (let ((?x2183 (* 2.0 l_0_2_32)))
 (let ((?x2184 (* ?x2183 l_0_2_44)))
 (let ((?x2170 (* 2.0 l_0_2_18)))
 (let ((?x2171 (* ?x2170 l_0_2_6)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2163 (* ?x2138 l_0_2_5)))
 (let ((?x2160 (* 2.0 l_0_2_16)))
 (let ((?x2162 (* ?x2160 l_0_2_4)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2429 (* ?x2303 l_0_2_9)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2427 (* ?x2113 l_0_2_8)))
 (let ((?x2424 (* 2.0 l_0_2_11)))
 (let ((?x2425 (* ?x2424 l_0_2_7)))
 (let ((?x2431 (+ (- (- (- (* (* (- 2.0) l_0_2_10) l_0_2_14) ?x2425) ?x2427) ?x2429) ?x2162)))
 (let ((?x2442 (+ (+ (- (- (- (+ (+ ?x2431 ?x2163) ?x2171) ?x2184) ?x2187) ?x2190) ?x2438) ?x2441)))
 (= (+ (+ ?x2442 ?x2444) ?x2447) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x2446 (* 2.0 l_0_2_38)))
 (let ((?x2500 (* ?x2446 l_0_2_47)))
 (let ((?x2443 (* 2.0 l_0_2_37)))
 (let ((?x2498 (* ?x2443 l_0_2_46)))
 (let ((?x2440 (* 2.0 l_0_2_36)))
 (let ((?x2496 (* ?x2440 l_0_2_45)))
 (let ((?x2437 (* 2.0 l_0_2_35)))
 (let ((?x2494 (* ?x2437 l_0_2_44)))
 (let ((?x2170 (* 2.0 l_0_2_18)))
 (let ((?x2492 (* ?x2170 l_0_2_9)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2490 (* ?x2138 l_0_2_8)))
 (let ((?x2160 (* 2.0 l_0_2_16)))
 (let ((?x2488 (* ?x2160 l_0_2_7)))
 (let ((?x2495 (+ (- (- (- (* (* (- 2.0) l_0_2_10) l_0_2_19) ?x2488) ?x2490) ?x2492) ?x2494)))
 (= (+ (+ (+ ?x2495 ?x2496) ?x2498) ?x2500) 0.0)))))))))))))))))
(assert
 (let ((?x2446 (* 2.0 l_0_2_38)))
 (let ((?x2548 (* ?x2446 l_0_2_53)))
 (let ((?x2443 (* 2.0 l_0_2_37)))
 (let ((?x2546 (* ?x2443 l_0_2_52)))
 (let ((?x2440 (* 2.0 l_0_2_36)))
 (let ((?x2544 (* ?x2440 l_0_2_51)))
 (let ((?x2437 (* 2.0 l_0_2_35)))
 (let ((?x2542 (* ?x2437 l_0_2_50)))
 (let ((?x2358 (* 2.0 l_0_2_24)))
 (let ((?x2540 (* ?x2358 l_0_2_9)))
 (let ((?x2176 (* 2.0 l_0_2_23)))
 (let ((?x2531 (* ?x2176 l_0_2_8)))
 (let ((?x2526 (* 2.0 l_0_2_22)))
 (let ((?x2528 (* ?x2526 l_0_2_7)))
 (let ((?x2543 (+ (- (- (- (* (* (- 2.0) l_0_2_10) l_0_2_25) ?x2528) ?x2531) ?x2540) ?x2542)))
 (= (+ (+ (+ ?x2543 ?x2544) ?x2546) ?x2548) 0.0)))))))))))))))))
(assert
 (let ((?x2600 (* l_0_2_43 l_0_2_43)))
 (let ((?x2598 (* l_0_2_42 l_0_2_42)))
 (let ((?x2596 (* l_0_2_41 l_0_2_41)))
 (let ((?x2594 (* l_0_2_40 l_0_2_40)))
 (let ((?x2592 (* l_0_2_39 l_0_2_39)))
 (let ((?x2590 (* l_0_2_15 l_0_2_15)))
 (let ((?x2588 (* l_0_2_14 l_0_2_14)))
 (let ((?x2579 (* l_0_2_13 l_0_2_13)))
 (let ((?x2589 (- (- (- (* (- l_0_2_11) l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x2579) ?x2588)))
 (= (+ (+ (+ (+ (+ (- ?x2589 ?x2590) ?x2592) ?x2594) ?x2596) ?x2598) ?x2600) 0.0)))))))))))
(assert
 (let ((?x2648 (* 2.0 l_0_2_43)))
 (let ((?x2649 (* ?x2648 l_0_2_48)))
 (let ((?x2645 (* 2.0 l_0_2_42)))
 (let ((?x2646 (* ?x2645 l_0_2_47)))
 (let ((?x2642 (* 2.0 l_0_2_41)))
 (let ((?x2643 (* ?x2642 l_0_2_46)))
 (let ((?x2639 (* 2.0 l_0_2_40)))
 (let ((?x2640 (* ?x2639 l_0_2_45)))
 (let ((?x2636 (* 2.0 l_0_2_39)))
 (let ((?x2637 (* ?x2636 l_0_2_44)))
 (let ((?x2633 (* 2.0 l_0_2_15)))
 (let ((?x2634 (* ?x2633 l_0_2_20)))
 (let ((?x2630 (* 2.0 l_0_2_14)))
 (let ((?x2631 (* ?x2630 l_0_2_19)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2628 (* ?x2303 l_0_2_18)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2626 (* ?x2113 l_0_2_17)))
 (let ((?x2635 (- (- (- (- (* (* (- 2.0) l_0_2_11) l_0_2_16) ?x2626) ?x2628) ?x2631) ?x2634)))
 (= (+ (+ (+ (+ (+ ?x2635 ?x2637) ?x2640) ?x2643) ?x2646) ?x2649) 0.0)))))))))))))))))))))
(assert
 (let ((?x2648 (* 2.0 l_0_2_43)))
 (let ((?x2708 (* ?x2648 l_0_2_54)))
 (let ((?x2645 (* 2.0 l_0_2_42)))
 (let ((?x2706 (* ?x2645 l_0_2_53)))
 (let ((?x2642 (* 2.0 l_0_2_41)))
 (let ((?x2704 (* ?x2642 l_0_2_52)))
 (let ((?x2639 (* 2.0 l_0_2_40)))
 (let ((?x2702 (* ?x2639 l_0_2_51)))
 (let ((?x2636 (* 2.0 l_0_2_39)))
 (let ((?x2700 (* ?x2636 l_0_2_50)))
 (let ((?x2633 (* 2.0 l_0_2_15)))
 (let ((?x2698 (* ?x2633 l_0_2_26)))
 (let ((?x2630 (* 2.0 l_0_2_14)))
 (let ((?x2688 (* ?x2630 l_0_2_25)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2685 (* ?x2303 l_0_2_24)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2681 (* ?x2113 l_0_2_23)))
 (let ((?x2699 (- (- (- (- (* (* (- 2.0) l_0_2_11) l_0_2_22) ?x2681) ?x2685) ?x2688) ?x2698)))
 (= (+ (+ (+ (+ (+ ?x2699 ?x2700) ?x2702) ?x2704) ?x2706) ?x2708) 0.0)))))))))))))))))))))
(assert
 (let ((?x2772 (* l_0_2_49 l_0_2_49)))
 (let ((?x2770 (* l_0_2_48 l_0_2_48)))
 (let ((?x2768 (* l_0_2_47 l_0_2_47)))
 (let ((?x2766 (* l_0_2_46 l_0_2_46)))
 (let ((?x2764 (* l_0_2_45 l_0_2_45)))
 (let ((?x2762 (* l_0_2_44 l_0_2_44)))
 (let ((?x2760 (* l_0_2_21 l_0_2_21)))
 (let ((?x2758 (* l_0_2_20 l_0_2_20)))
 (let ((?x2756 (* l_0_2_19 l_0_2_19)))
 (let ((?x2746 (* l_0_2_18 l_0_2_18)))
 (let ((?x2757 (- (- (- (* (- l_0_2_16) l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x2746) ?x2756)))
 (let ((?x2771 (+ (+ (+ (+ (+ (- (- ?x2757 ?x2758) ?x2760) ?x2762) ?x2764) ?x2766) ?x2768) ?x2770)))
 (= (+ ?x2771 ?x2772) 0.0))))))))))))))
(assert
 (let ((?x2831 (* (* 2.0 l_0_2_49) l_0_2_55)))
 (let ((?x2828 (* (* 2.0 l_0_2_48) l_0_2_54)))
 (let ((?x2825 (* (* 2.0 l_0_2_47) l_0_2_53)))
 (let ((?x2822 (* (* 2.0 l_0_2_46) l_0_2_52)))
 (let ((?x2819 (* (* 2.0 l_0_2_45) l_0_2_51)))
 (let ((?x2816 (* (* 2.0 l_0_2_44) l_0_2_50)))
 (let ((?x2813 (* (* 2.0 l_0_2_21) l_0_2_27)))
 (let ((?x2810 (* (* 2.0 l_0_2_20) l_0_2_26)))
 (let ((?x2807 (* (* 2.0 l_0_2_19) l_0_2_25)))
 (let ((?x2170 (* 2.0 l_0_2_18)))
 (let ((?x2804 (* ?x2170 l_0_2_24)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2802 (* ?x2138 l_0_2_23)))
 (let ((?x2811 (- (- (- (- (* (* (- 2.0) l_0_2_16) l_0_2_22) ?x2802) ?x2804) ?x2807) ?x2810)))
 (let ((?x2832 (+ (+ (+ (+ (+ (+ (- ?x2811 ?x2813) ?x2816) ?x2819) ?x2822) ?x2825) ?x2828) ?x2831)))
 (= ?x2832 0.0)))))))))))))))))
(assert
 (let ((?x2907 (* l_0_2_56 l_0_2_56)))
 (let ((?x2905 (* l_0_2_55 l_0_2_55)))
 (let ((?x2903 (* l_0_2_54 l_0_2_54)))
 (let ((?x2901 (* l_0_2_53 l_0_2_53)))
 (let ((?x2899 (* l_0_2_52 l_0_2_52)))
 (let ((?x2897 (* l_0_2_51 l_0_2_51)))
 (let ((?x2895 (* l_0_2_50 l_0_2_50)))
 (let ((?x2893 (* l_0_2_28 l_0_2_28)))
 (let ((?x2891 (* l_0_2_27 l_0_2_27)))
 (let ((?x2889 (* l_0_2_26 l_0_2_26)))
 (let ((?x2878 (* l_0_2_25 l_0_2_25)))
 (let ((?x2875 (* l_0_2_24 l_0_2_24)))
 (let ((?x2888 (- (- (- (* (- l_0_2_22) l_0_2_22) (* l_0_2_23 l_0_2_23)) ?x2875) ?x2878)))
 (let ((?x2902 (+ (+ (+ (+ (- (- (- ?x2888 ?x2889) ?x2891) ?x2893) ?x2895) ?x2897) ?x2899) ?x2901)))
 (= (+ (+ (+ ?x2902 ?x2903) ?x2905) ?x2907) 0.0))))))))))))))))
(assert
 (let ((?x1944 (* l_0_2_29 l_0_2_29)))
 (let ((?x2945 (- (- (* l_0_2_1 l_0_2_1) (* (* 2.0 l_0_2_106) l_0_2_86)) (* (* 2.0 l_0_2_107) l_0_2_87))))
 (let ((?x2952 (+ (+ (- ?x2945 ?x1944) (* (* 2.0 l_0_2_58) l_0_2_78)) (* (* 2.0 l_0_2_59) l_0_2_79))))
 (= ?x2952 0.0)))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x1988 (* ?x1987 l_0_2_30)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_2) ?x1988) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x1994 (* ?x1987 l_0_2_32)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_4) ?x1994) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2004 (* ?x1987 l_0_2_35)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_7) ?x2004) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2014 (* ?x1987 l_0_2_39)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_11) ?x2014) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2024 (* ?x1987 l_0_2_44)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_16) ?x2024) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2034 (* ?x1987 l_0_2_50)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_22) ?x2034) 0.0))))
(assert
 (let ((?x2053 (* l_0_2_31 l_0_2_31)))
 (let ((?x2051 (* l_0_2_30 l_0_2_30)))
 (= (- (- (+ (* l_0_2_2 l_0_2_2) (* l_0_2_3 l_0_2_3)) ?x2051) ?x2053) 0.0))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2075 (* ?x2074 l_0_2_33)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2072 (* ?x2071 l_0_2_32)))
 (let ((?x2068 (* 2.0 l_0_2_3)))
 (let ((?x2069 (* ?x2068 l_0_2_5)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_4) ?x2069) ?x2072) ?x2075) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2098 (* ?x2074 l_0_2_36)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2096 (* ?x2071 l_0_2_35)))
 (let ((?x2068 (* 2.0 l_0_2_3)))
 (let ((?x2089 (* ?x2068 l_0_2_8)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_7) ?x2089) ?x2096) ?x2098) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2123 (* ?x2074 l_0_2_40)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2121 (* ?x2071 l_0_2_39)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2119 (* ?x2113 l_0_2_3)))
 (= (- (- (+ (* (* 2.0 l_0_2_11) l_0_2_2) ?x2119) ?x2121) ?x2123) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2148 (* ?x2074 l_0_2_45)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2146 (* ?x2071 l_0_2_44)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2144 (* ?x2138 l_0_2_3)))
 (= (- (- (+ (* (* 2.0 l_0_2_16) l_0_2_2) ?x2144) ?x2146) ?x2148) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2181 (* ?x2074 l_0_2_51)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2179 (* ?x2071 l_0_2_50)))
 (let ((?x2176 (* 2.0 l_0_2_23)))
 (let ((?x2177 (* ?x2176 l_0_2_3)))
 (let ((?x2173 (* 2.0 l_0_2_2)))
 (let ((?x2174 (* ?x2173 l_0_2_22)))
 (= (- (- (+ ?x2174 ?x2177) ?x2179) ?x2181) 0.0))))))))))
(assert
 (let ((?x2245 (* l_0_2_6 l_0_2_6)))
 (let ((?x2243 (* l_0_2_5 l_0_2_5)))
 (let ((?x2241 (* l_0_2_4 l_0_2_4)))
 (let ((?x2239 (* l_0_2_34 l_0_2_34)))
 (let ((?x3090 (+ (- (- (* (- l_0_2_32) l_0_2_32) (* l_0_2_33 l_0_2_33)) ?x2239) ?x2241)))
 (= (+ (+ ?x3090 ?x2243) ?x2245) 0.0)))))))
(assert
 (let ((?x2271 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x2268 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x2265 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2262 (* ?x2189 l_0_2_37)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2260 (* ?x2186 l_0_2_36)))
 (let ((?x3106 (+ (+ (- (- (* (* (- 2.0) l_0_2_32) l_0_2_35) ?x2260) ?x2262) ?x2265) ?x2268)))
 (= (+ ?x3106 ?x2271) 0.0))))))))))
(assert
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2310 (* ?x2189 l_0_2_41)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2308 (* ?x2186 l_0_2_40)))
 (let ((?x2183 (* 2.0 l_0_2_32)))
 (let ((?x2306 (* ?x2183 l_0_2_39)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2304 (* ?x2303 l_0_2_6)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2301 (* ?x2113 l_0_2_5)))
 (let ((?x3122 (- (- (+ (+ (* (* 2.0 l_0_2_11) l_0_2_4) ?x2301) ?x2304) ?x2306) ?x2308)))
 (= (- ?x3122 ?x2310) 0.0)))))))))))))
(assert
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2365 (* ?x2189 l_0_2_52)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2363 (* ?x2186 l_0_2_51)))
 (let ((?x2183 (* 2.0 l_0_2_32)))
 (let ((?x2361 (* ?x2183 l_0_2_50)))
 (let ((?x2358 (* 2.0 l_0_2_24)))
 (let ((?x2359 (* ?x2358 l_0_2_6)))
 (let ((?x2176 (* 2.0 l_0_2_23)))
 (let ((?x2356 (* ?x2176 l_0_2_5)))
 (let ((?x3141 (- (- (+ (+ (* (* 2.0 l_0_2_22) l_0_2_4) ?x2356) ?x2359) ?x2361) ?x2363)))
 (= (- ?x3141 ?x2365) 0.0)))))))))))))
(assert
 (let ((?x2405 (* l_0_2_9 l_0_2_9)))
 (let ((?x2403 (* l_0_2_8 l_0_2_8)))
 (let ((?x2401 (* l_0_2_7 l_0_2_7)))
 (let ((?x2399 (* l_0_2_38 l_0_2_38)))
 (let ((?x2397 (* l_0_2_37 l_0_2_37)))
 (let ((?x2395 (* l_0_2_36 l_0_2_36)))
 (let ((?x3158 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_35 l_0_2_35)) ?x2395) ?x2397)))
 (= (+ (+ (+ (- ?x3158 ?x2399) ?x2401) ?x2403) ?x2405) 0.0)))))))))
(assert
 (let ((?x2446 (* 2.0 l_0_2_38)))
 (let ((?x2447 (* ?x2446 l_0_2_42)))
 (let ((?x2443 (* 2.0 l_0_2_37)))
 (let ((?x2444 (* ?x2443 l_0_2_41)))
 (let ((?x2440 (* 2.0 l_0_2_36)))
 (let ((?x2441 (* ?x2440 l_0_2_40)))
 (let ((?x2437 (* 2.0 l_0_2_35)))
 (let ((?x2438 (* ?x2437 l_0_2_39)))
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2181 (* ?x2074 l_0_2_51)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2179 (* ?x2071 l_0_2_50)))
 (let ((?x2176 (* 2.0 l_0_2_23)))
 (let ((?x2177 (* ?x2176 l_0_2_3)))
 (let ((?x2173 (* 2.0 l_0_2_2)))
 (let ((?x2174 (* ?x2173 l_0_2_22)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2429 (* ?x2303 l_0_2_9)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2427 (* ?x2113 l_0_2_8)))
 (let ((?x2424 (* 2.0 l_0_2_11)))
 (let ((?x2425 (* ?x2424 l_0_2_7)))
 (let ((?x3180 (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x2425) ?x2427) ?x2429)))
 (let ((?x3187 (- (- (- (- (- (+ (+ ?x3180 ?x2174) ?x2177) ?x2179) ?x2181) ?x2438) ?x2441) ?x2444)))
 (= (- ?x3187 ?x2447) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2446 (* 2.0 l_0_2_38)))
 (let ((?x2500 (* ?x2446 l_0_2_47)))
 (let ((?x2443 (* 2.0 l_0_2_37)))
 (let ((?x2498 (* ?x2443 l_0_2_46)))
 (let ((?x2440 (* 2.0 l_0_2_36)))
 (let ((?x2496 (* ?x2440 l_0_2_45)))
 (let ((?x2437 (* 2.0 l_0_2_35)))
 (let ((?x2494 (* ?x2437 l_0_2_44)))
 (let ((?x2170 (* 2.0 l_0_2_18)))
 (let ((?x2492 (* ?x2170 l_0_2_9)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2490 (* ?x2138 l_0_2_8)))
 (let ((?x2160 (* 2.0 l_0_2_16)))
 (let ((?x2488 (* ?x2160 l_0_2_7)))
 (let ((?x3217 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_19) ?x2488) ?x2490) ?x2492) ?x2494)))
 (= (- (- (- ?x3217 ?x2496) ?x2498) ?x2500) 0.0)))))))))))))))))
(assert
 (let ((?x2446 (* 2.0 l_0_2_38)))
 (let ((?x2548 (* ?x2446 l_0_2_53)))
 (let ((?x2443 (* 2.0 l_0_2_37)))
 (let ((?x2546 (* ?x2443 l_0_2_52)))
 (let ((?x2440 (* 2.0 l_0_2_36)))
 (let ((?x2544 (* ?x2440 l_0_2_51)))
 (let ((?x2437 (* 2.0 l_0_2_35)))
 (let ((?x2542 (* ?x2437 l_0_2_50)))
 (let ((?x2358 (* 2.0 l_0_2_24)))
 (let ((?x2540 (* ?x2358 l_0_2_9)))
 (let ((?x2176 (* 2.0 l_0_2_23)))
 (let ((?x2531 (* ?x2176 l_0_2_8)))
 (let ((?x2526 (* 2.0 l_0_2_22)))
 (let ((?x2528 (* ?x2526 l_0_2_7)))
 (let ((?x3242 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_25) ?x2528) ?x2531) ?x2540) ?x2542)))
 (= (- (- (- ?x3242 ?x2544) ?x2546) ?x2548) 0.0)))))))))))))))))
(assert
 (let ((?x2600 (* l_0_2_43 l_0_2_43)))
 (let ((?x2598 (* l_0_2_42 l_0_2_42)))
 (let ((?x2596 (* l_0_2_41 l_0_2_41)))
 (let ((?x2594 (* l_0_2_40 l_0_2_40)))
 (let ((?x2592 (* l_0_2_39 l_0_2_39)))
 (let ((?x2590 (* l_0_2_15 l_0_2_15)))
 (let ((?x2588 (* l_0_2_14 l_0_2_14)))
 (let ((?x2579 (* l_0_2_13 l_0_2_13)))
 (let ((?x3265 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x2579) ?x2588)))
 (= (- (- (- (- (- (+ ?x3265 ?x2590) ?x2592) ?x2594) ?x2596) ?x2598) ?x2600) 0.0)))))))))))
(assert
 (let ((?x2648 (* 2.0 l_0_2_43)))
 (let ((?x2649 (* ?x2648 l_0_2_48)))
 (let ((?x2645 (* 2.0 l_0_2_42)))
 (let ((?x2646 (* ?x2645 l_0_2_47)))
 (let ((?x2642 (* 2.0 l_0_2_41)))
 (let ((?x2643 (* ?x2642 l_0_2_46)))
 (let ((?x2639 (* 2.0 l_0_2_40)))
 (let ((?x2640 (* ?x2639 l_0_2_45)))
 (let ((?x2636 (* 2.0 l_0_2_39)))
 (let ((?x2637 (* ?x2636 l_0_2_44)))
 (let ((?x2633 (* 2.0 l_0_2_15)))
 (let ((?x2634 (* ?x2633 l_0_2_20)))
 (let ((?x2630 (* 2.0 l_0_2_14)))
 (let ((?x2631 (* ?x2630 l_0_2_19)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2628 (* ?x2303 l_0_2_18)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2626 (* ?x2113 l_0_2_17)))
 (let ((?x3287 (+ (+ (+ (+ (* (* 2.0 l_0_2_11) l_0_2_16) ?x2626) ?x2628) ?x2631) ?x2634)))
 (= (- (- (- (- (- ?x3287 ?x2637) ?x2640) ?x2643) ?x2646) ?x2649) 0.0)))))))))))))))))))))
(assert
 (let ((?x2648 (* 2.0 l_0_2_43)))
 (let ((?x2708 (* ?x2648 l_0_2_54)))
 (let ((?x2645 (* 2.0 l_0_2_42)))
 (let ((?x2706 (* ?x2645 l_0_2_53)))
 (let ((?x2642 (* 2.0 l_0_2_41)))
 (let ((?x2704 (* ?x2642 l_0_2_52)))
 (let ((?x2639 (* 2.0 l_0_2_40)))
 (let ((?x2702 (* ?x2639 l_0_2_51)))
 (let ((?x2636 (* 2.0 l_0_2_39)))
 (let ((?x2700 (* ?x2636 l_0_2_50)))
 (let ((?x2633 (* 2.0 l_0_2_15)))
 (let ((?x2698 (* ?x2633 l_0_2_26)))
 (let ((?x2630 (* 2.0 l_0_2_14)))
 (let ((?x2688 (* ?x2630 l_0_2_25)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2685 (* ?x2303 l_0_2_24)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2681 (* ?x2113 l_0_2_23)))
 (let ((?x3318 (+ (+ (+ (+ (* (* 2.0 l_0_2_11) l_0_2_22) ?x2681) ?x2685) ?x2688) ?x2698)))
 (= (- (- (- (- (- ?x3318 ?x2700) ?x2702) ?x2704) ?x2706) ?x2708) 0.0)))))))))))))))))))))
(assert
 (let ((?x2772 (* l_0_2_49 l_0_2_49)))
 (let ((?x2770 (* l_0_2_48 l_0_2_48)))
 (let ((?x2768 (* l_0_2_47 l_0_2_47)))
 (let ((?x2766 (* l_0_2_46 l_0_2_46)))
 (let ((?x2764 (* l_0_2_45 l_0_2_45)))
 (let ((?x2762 (* l_0_2_44 l_0_2_44)))
 (let ((?x2760 (* l_0_2_21 l_0_2_21)))
 (let ((?x2758 (* l_0_2_20 l_0_2_20)))
 (let ((?x2756 (* l_0_2_19 l_0_2_19)))
 (let ((?x2746 (* l_0_2_18 l_0_2_18)))
 (let ((?x3347 (+ (+ (+ (* l_0_2_16 l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x2746) ?x2756)))
 (let ((?x3354 (- (- (- (- (- (+ (+ ?x3347 ?x2758) ?x2760) ?x2762) ?x2764) ?x2766) ?x2768) ?x2770)))
 (= (- ?x3354 ?x2772) 0.0))))))))))))))
(assert
 (let ((?x2831 (* (* 2.0 l_0_2_49) l_0_2_55)))
 (let ((?x2828 (* (* 2.0 l_0_2_48) l_0_2_54)))
 (let ((?x2825 (* (* 2.0 l_0_2_47) l_0_2_53)))
 (let ((?x2822 (* (* 2.0 l_0_2_46) l_0_2_52)))
 (let ((?x2819 (* (* 2.0 l_0_2_45) l_0_2_51)))
 (let ((?x2816 (* (* 2.0 l_0_2_44) l_0_2_50)))
 (let ((?x2813 (* (* 2.0 l_0_2_21) l_0_2_27)))
 (let ((?x2810 (* (* 2.0 l_0_2_20) l_0_2_26)))
 (let ((?x2807 (* (* 2.0 l_0_2_19) l_0_2_25)))
 (let ((?x2170 (* 2.0 l_0_2_18)))
 (let ((?x2804 (* ?x2170 l_0_2_24)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2802 (* ?x2138 l_0_2_23)))
 (let ((?x3373 (+ (+ (+ (+ (* (* 2.0 l_0_2_16) l_0_2_22) ?x2802) ?x2804) ?x2807) ?x2810)))
 (let ((?x3380 (- (- (- (- (- (- (+ ?x3373 ?x2813) ?x2816) ?x2819) ?x2822) ?x2825) ?x2828) ?x2831)))
 (= ?x3380 0.0)))))))))))))))))
(assert
 (let ((?x2907 (* l_0_2_56 l_0_2_56)))
 (let ((?x2905 (* l_0_2_55 l_0_2_55)))
 (let ((?x2903 (* l_0_2_54 l_0_2_54)))
 (let ((?x2901 (* l_0_2_53 l_0_2_53)))
 (let ((?x2899 (* l_0_2_52 l_0_2_52)))
 (let ((?x2897 (* l_0_2_51 l_0_2_51)))
 (let ((?x2895 (* l_0_2_50 l_0_2_50)))
 (let ((?x2893 (* l_0_2_28 l_0_2_28)))
 (let ((?x2891 (* l_0_2_27 l_0_2_27)))
 (let ((?x2889 (* l_0_2_26 l_0_2_26)))
 (let ((?x2878 (* l_0_2_25 l_0_2_25)))
 (let ((?x2875 (* l_0_2_24 l_0_2_24)))
 (let ((?x3408 (+ (+ (+ (* l_0_2_22 l_0_2_22) (* l_0_2_23 l_0_2_23)) ?x2875) ?x2878)))
 (let ((?x3415 (- (- (- (- (+ (+ (+ ?x3408 ?x2889) ?x2891) ?x2893) ?x2895) ?x2897) ?x2899) ?x2901)))
 (= (- (- (- ?x3415 ?x2903) ?x2905) ?x2907) 0.0))))))))))))))))
(assert
 (let ((?x3437 (+ (- (* l_0_2_1 l_0_2_1) (* l_0_2_29 l_0_2_29)) (* (* 2.0 l_0_2_63) l_0_2_67))))
 (let ((?x3443 (+ (+ ?x3437 (* (* 2.0 l_0_2_64) l_0_2_68)) (* (* 2.0 l_0_2_65) l_0_2_69))))
 (let ((?x3449 (- (+ ?x3443 (* (* 2.0 l_0_2_66) l_0_2_70)) (* (* 2.0 l_0_2_91) l_0_2_95))))
 (let ((?x3455 (- (- ?x3449 (* (* 2.0 l_0_2_92) l_0_2_96)) (* (* 2.0 l_0_2_93) l_0_2_97))))
 (= (- ?x3455 (* (* 2.0 l_0_2_94) l_0_2_98)) 0.0))))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x1988 (* ?x1987 l_0_2_30)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_2) ?x1988) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x1994 (* ?x1987 l_0_2_32)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_4) ?x1994) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2004 (* ?x1987 l_0_2_35)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_7) ?x2004) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2014 (* ?x1987 l_0_2_39)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_11) ?x2014) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2024 (* ?x1987 l_0_2_44)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_16) ?x2024) 0.0))))
(assert
 (let ((?x1987 (* 2.0 l_0_2_29)))
 (let ((?x2034 (* ?x1987 l_0_2_50)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_22) ?x2034) 0.0))))
(assert
 (let ((?x2053 (* l_0_2_31 l_0_2_31)))
 (let ((?x2051 (* l_0_2_30 l_0_2_30)))
 (= (- (- (+ (* l_0_2_2 l_0_2_2) (* l_0_2_3 l_0_2_3)) ?x2051) ?x2053) 0.0))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2075 (* ?x2074 l_0_2_33)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2072 (* ?x2071 l_0_2_32)))
 (let ((?x2068 (* 2.0 l_0_2_3)))
 (let ((?x2069 (* ?x2068 l_0_2_5)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_4) ?x2069) ?x2072) ?x2075) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2098 (* ?x2074 l_0_2_36)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2096 (* ?x2071 l_0_2_35)))
 (let ((?x2068 (* 2.0 l_0_2_3)))
 (let ((?x2089 (* ?x2068 l_0_2_8)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_7) ?x2089) ?x2096) ?x2098) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2123 (* ?x2074 l_0_2_40)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2121 (* ?x2071 l_0_2_39)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2119 (* ?x2113 l_0_2_3)))
 (= (- (- (+ (* (* 2.0 l_0_2_11) l_0_2_2) ?x2119) ?x2121) ?x2123) 0.0))))))))
(assert
 (let ((?x2074 (* 2.0 l_0_2_31)))
 (let ((?x2148 (* ?x2074 l_0_2_45)))
 (let ((?x2071 (* 2.0 l_0_2_30)))
 (let ((?x2146 (* ?x2071 l_0_2_44)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2144 (* ?x2138 l_0_2_3)))
 (= (- (- (+ (* (* 2.0 l_0_2_16) l_0_2_2) ?x2144) ?x2146) ?x2148) 0.0))))))))
(assert
 (let ((?x2245 (* l_0_2_6 l_0_2_6)))
 (let ((?x2243 (* l_0_2_5 l_0_2_5)))
 (let ((?x2241 (* l_0_2_4 l_0_2_4)))
 (let ((?x2239 (* l_0_2_34 l_0_2_34)))
 (let ((?x3090 (+ (- (- (* (- l_0_2_32) l_0_2_32) (* l_0_2_33 l_0_2_33)) ?x2239) ?x2241)))
 (= (+ (+ ?x3090 ?x2243) ?x2245) 0.0)))))))
(assert
 (let ((?x2271 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x2268 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x2265 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2262 (* ?x2189 l_0_2_37)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2260 (* ?x2186 l_0_2_36)))
 (let ((?x3106 (+ (+ (- (- (* (* (- 2.0) l_0_2_32) l_0_2_35) ?x2260) ?x2262) ?x2265) ?x2268)))
 (= (+ ?x3106 ?x2271) 0.0))))))))))
(assert
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2310 (* ?x2189 l_0_2_41)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2308 (* ?x2186 l_0_2_40)))
 (let ((?x2183 (* 2.0 l_0_2_32)))
 (let ((?x2306 (* ?x2183 l_0_2_39)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2304 (* ?x2303 l_0_2_6)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2301 (* ?x2113 l_0_2_5)))
 (let ((?x3122 (- (- (+ (+ (* (* 2.0 l_0_2_11) l_0_2_4) ?x2301) ?x2304) ?x2306) ?x2308)))
 (= (- ?x3122 ?x2310) 0.0)))))))))))))
(assert
 (let ((?x2189 (* 2.0 l_0_2_34)))
 (let ((?x2365 (* ?x2189 l_0_2_52)))
 (let ((?x2186 (* 2.0 l_0_2_33)))
 (let ((?x2363 (* ?x2186 l_0_2_51)))
 (let ((?x2183 (* 2.0 l_0_2_32)))
 (let ((?x2361 (* ?x2183 l_0_2_50)))
 (let ((?x2358 (* 2.0 l_0_2_24)))
 (let ((?x2359 (* ?x2358 l_0_2_6)))
 (let ((?x2176 (* 2.0 l_0_2_23)))
 (let ((?x2356 (* ?x2176 l_0_2_5)))
 (let ((?x3141 (- (- (+ (+ (* (* 2.0 l_0_2_22) l_0_2_4) ?x2356) ?x2359) ?x2361) ?x2363)))
 (= (- ?x3141 ?x2365) 0.0)))))))))))))
(assert
 (let ((?x2405 (* l_0_2_9 l_0_2_9)))
 (let ((?x2403 (* l_0_2_8 l_0_2_8)))
 (let ((?x2401 (* l_0_2_7 l_0_2_7)))
 (let ((?x2399 (* l_0_2_38 l_0_2_38)))
 (let ((?x2397 (* l_0_2_37 l_0_2_37)))
 (let ((?x2395 (* l_0_2_36 l_0_2_36)))
 (let ((?x3158 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_35 l_0_2_35)) ?x2395) ?x2397)))
 (= (+ (+ (+ (- ?x3158 ?x2399) ?x2401) ?x2403) ?x2405) 0.0)))))))))
(assert
 (let ((?x2446 (* 2.0 l_0_2_38)))
 (let ((?x2447 (* ?x2446 l_0_2_42)))
 (let ((?x2443 (* 2.0 l_0_2_37)))
 (let ((?x2444 (* ?x2443 l_0_2_41)))
 (let ((?x2440 (* 2.0 l_0_2_36)))
 (let ((?x2441 (* ?x2440 l_0_2_40)))
 (let ((?x2437 (* 2.0 l_0_2_35)))
 (let ((?x2438 (* ?x2437 l_0_2_39)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2429 (* ?x2303 l_0_2_9)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2427 (* ?x2113 l_0_2_8)))
 (let ((?x2424 (* 2.0 l_0_2_11)))
 (let ((?x2425 (* ?x2424 l_0_2_7)))
 (let ((?x3180 (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x2425) ?x2427) ?x2429)))
 (= (- (- (- (- ?x3180 ?x2438) ?x2441) ?x2444) ?x2447) 0.0)))))))))))))))))
(assert
 (let ((?x2446 (* 2.0 l_0_2_38)))
 (let ((?x2500 (* ?x2446 l_0_2_47)))
 (let ((?x2443 (* 2.0 l_0_2_37)))
 (let ((?x2498 (* ?x2443 l_0_2_46)))
 (let ((?x2440 (* 2.0 l_0_2_36)))
 (let ((?x2496 (* ?x2440 l_0_2_45)))
 (let ((?x2437 (* 2.0 l_0_2_35)))
 (let ((?x2494 (* ?x2437 l_0_2_44)))
 (let ((?x2170 (* 2.0 l_0_2_18)))
 (let ((?x2492 (* ?x2170 l_0_2_9)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2490 (* ?x2138 l_0_2_8)))
 (let ((?x2160 (* 2.0 l_0_2_16)))
 (let ((?x2488 (* ?x2160 l_0_2_7)))
 (let ((?x3217 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_19) ?x2488) ?x2490) ?x2492) ?x2494)))
 (= (- (- (- ?x3217 ?x2496) ?x2498) ?x2500) 0.0)))))))))))))))))
(assert
 (let ((?x2446 (* 2.0 l_0_2_38)))
 (let ((?x2548 (* ?x2446 l_0_2_53)))
 (let ((?x2443 (* 2.0 l_0_2_37)))
 (let ((?x2546 (* ?x2443 l_0_2_52)))
 (let ((?x2440 (* 2.0 l_0_2_36)))
 (let ((?x2544 (* ?x2440 l_0_2_51)))
 (let ((?x2437 (* 2.0 l_0_2_35)))
 (let ((?x2542 (* ?x2437 l_0_2_50)))
 (let ((?x2358 (* 2.0 l_0_2_24)))
 (let ((?x2540 (* ?x2358 l_0_2_9)))
 (let ((?x2176 (* 2.0 l_0_2_23)))
 (let ((?x2531 (* ?x2176 l_0_2_8)))
 (let ((?x2526 (* 2.0 l_0_2_22)))
 (let ((?x2528 (* ?x2526 l_0_2_7)))
 (let ((?x3242 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_25) ?x2528) ?x2531) ?x2540) ?x2542)))
 (= (- (- (- ?x3242 ?x2544) ?x2546) ?x2548) 0.0)))))))))))))))))
(assert
 (let ((?x2600 (* l_0_2_43 l_0_2_43)))
 (let ((?x2598 (* l_0_2_42 l_0_2_42)))
 (let ((?x2596 (* l_0_2_41 l_0_2_41)))
 (let ((?x2594 (* l_0_2_40 l_0_2_40)))
 (let ((?x2592 (* l_0_2_39 l_0_2_39)))
 (let ((?x2590 (* l_0_2_15 l_0_2_15)))
 (let ((?x2588 (* l_0_2_14 l_0_2_14)))
 (let ((?x2579 (* l_0_2_13 l_0_2_13)))
 (let ((?x3265 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x2579) ?x2588)))
 (= (- (- (- (- (- (+ ?x3265 ?x2590) ?x2592) ?x2594) ?x2596) ?x2598) ?x2600) 0.0)))))))))))
(assert
 (let ((?x2648 (* 2.0 l_0_2_43)))
 (let ((?x2649 (* ?x2648 l_0_2_48)))
 (let ((?x2645 (* 2.0 l_0_2_42)))
 (let ((?x2646 (* ?x2645 l_0_2_47)))
 (let ((?x2642 (* 2.0 l_0_2_41)))
 (let ((?x2643 (* ?x2642 l_0_2_46)))
 (let ((?x2639 (* 2.0 l_0_2_40)))
 (let ((?x2640 (* ?x2639 l_0_2_45)))
 (let ((?x2636 (* 2.0 l_0_2_39)))
 (let ((?x2637 (* ?x2636 l_0_2_44)))
 (let ((?x2633 (* 2.0 l_0_2_15)))
 (let ((?x2634 (* ?x2633 l_0_2_20)))
 (let ((?x2630 (* 2.0 l_0_2_14)))
 (let ((?x2631 (* ?x2630 l_0_2_19)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2628 (* ?x2303 l_0_2_18)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2626 (* ?x2113 l_0_2_17)))
 (let ((?x3287 (+ (+ (+ (+ (* (* 2.0 l_0_2_11) l_0_2_16) ?x2626) ?x2628) ?x2631) ?x2634)))
 (= (- (- (- (- (- ?x3287 ?x2637) ?x2640) ?x2643) ?x2646) ?x2649) 0.0)))))))))))))))))))))
(assert
 (let ((?x2648 (* 2.0 l_0_2_43)))
 (let ((?x2708 (* ?x2648 l_0_2_54)))
 (let ((?x2645 (* 2.0 l_0_2_42)))
 (let ((?x2706 (* ?x2645 l_0_2_53)))
 (let ((?x2642 (* 2.0 l_0_2_41)))
 (let ((?x2704 (* ?x2642 l_0_2_52)))
 (let ((?x2639 (* 2.0 l_0_2_40)))
 (let ((?x2702 (* ?x2639 l_0_2_51)))
 (let ((?x2636 (* 2.0 l_0_2_39)))
 (let ((?x2700 (* ?x2636 l_0_2_50)))
 (let ((?x2633 (* 2.0 l_0_2_15)))
 (let ((?x2698 (* ?x2633 l_0_2_26)))
 (let ((?x2630 (* 2.0 l_0_2_14)))
 (let ((?x2688 (* ?x2630 l_0_2_25)))
 (let ((?x2303 (* 2.0 l_0_2_13)))
 (let ((?x2685 (* ?x2303 l_0_2_24)))
 (let ((?x2113 (* 2.0 l_0_2_12)))
 (let ((?x2681 (* ?x2113 l_0_2_23)))
 (let ((?x3318 (+ (+ (+ (+ (* (* 2.0 l_0_2_11) l_0_2_22) ?x2681) ?x2685) ?x2688) ?x2698)))
 (= (- (- (- (- (- ?x3318 ?x2700) ?x2702) ?x2704) ?x2706) ?x2708) 0.0)))))))))))))))))))))
(assert
 (let ((?x2772 (* l_0_2_49 l_0_2_49)))
 (let ((?x2770 (* l_0_2_48 l_0_2_48)))
 (let ((?x2768 (* l_0_2_47 l_0_2_47)))
 (let ((?x2766 (* l_0_2_46 l_0_2_46)))
 (let ((?x2764 (* l_0_2_45 l_0_2_45)))
 (let ((?x2762 (* l_0_2_44 l_0_2_44)))
 (let ((?x2760 (* l_0_2_21 l_0_2_21)))
 (let ((?x2758 (* l_0_2_20 l_0_2_20)))
 (let ((?x2756 (* l_0_2_19 l_0_2_19)))
 (let ((?x2746 (* l_0_2_18 l_0_2_18)))
 (let ((?x3347 (+ (+ (+ (* l_0_2_16 l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x2746) ?x2756)))
 (let ((?x3354 (- (- (- (- (- (+ (+ ?x3347 ?x2758) ?x2760) ?x2762) ?x2764) ?x2766) ?x2768) ?x2770)))
 (= (- ?x3354 ?x2772) 0.0))))))))))))))
(assert
 (let ((?x2831 (* (* 2.0 l_0_2_49) l_0_2_55)))
 (let ((?x2828 (* (* 2.0 l_0_2_48) l_0_2_54)))
 (let ((?x2825 (* (* 2.0 l_0_2_47) l_0_2_53)))
 (let ((?x2822 (* (* 2.0 l_0_2_46) l_0_2_52)))
 (let ((?x2819 (* (* 2.0 l_0_2_45) l_0_2_51)))
 (let ((?x2816 (* (* 2.0 l_0_2_44) l_0_2_50)))
 (let ((?x2813 (* (* 2.0 l_0_2_21) l_0_2_27)))
 (let ((?x2810 (* (* 2.0 l_0_2_20) l_0_2_26)))
 (let ((?x2807 (* (* 2.0 l_0_2_19) l_0_2_25)))
 (let ((?x2170 (* 2.0 l_0_2_18)))
 (let ((?x2804 (* ?x2170 l_0_2_24)))
 (let ((?x2138 (* 2.0 l_0_2_17)))
 (let ((?x2802 (* ?x2138 l_0_2_23)))
 (let ((?x3373 (+ (+ (+ (+ (* (* 2.0 l_0_2_16) l_0_2_22) ?x2802) ?x2804) ?x2807) ?x2810)))
 (let ((?x3380 (- (- (- (- (- (- (+ ?x3373 ?x2813) ?x2816) ?x2819) ?x2822) ?x2825) ?x2828) ?x2831)))
 (= ?x3380 0.0)))))))))))))))))
(assert
 (let ((?x2907 (* l_0_2_56 l_0_2_56)))
 (let ((?x2905 (* l_0_2_55 l_0_2_55)))
 (let ((?x2903 (* l_0_2_54 l_0_2_54)))
 (let ((?x2901 (* l_0_2_53 l_0_2_53)))
 (let ((?x2899 (* l_0_2_52 l_0_2_52)))
 (let ((?x2897 (* l_0_2_51 l_0_2_51)))
 (let ((?x2895 (* l_0_2_50 l_0_2_50)))
 (let ((?x2893 (* l_0_2_28 l_0_2_28)))
 (let ((?x2891 (* l_0_2_27 l_0_2_27)))
 (let ((?x2889 (* l_0_2_26 l_0_2_26)))
 (let ((?x2878 (* l_0_2_25 l_0_2_25)))
 (let ((?x2875 (* l_0_2_24 l_0_2_24)))
 (let ((?x3408 (+ (+ (+ (* l_0_2_22 l_0_2_22) (* l_0_2_23 l_0_2_23)) ?x2875) ?x2878)))
 (let ((?x3415 (- (- (- (- (+ (+ (+ ?x3408 ?x2889) ?x2891) ?x2893) ?x2895) ?x2897) ?x2899) ?x2901)))
 (= (- (- (- ?x3415 ?x2903) ?x2905) ?x2907) 0.0))))))))))))))))
(assert
 (let ((?x3520 (- (* (* 2.0 l_0_2_57) l_0_2_58) (* (* 2.0 l_0_2_85) l_0_2_86))))
 (= ?x3520 0.0)))
(assert
 (let ((?x3533 (- (* (* 2.0 l_0_2_57) l_0_2_60) (* (* 2.0 l_0_2_85) l_0_2_88))))
 (= ?x3533 0.0)))
(assert
 (let ((?x3546 (- (* (* 2.0 l_0_2_57) l_0_2_63) (* (* 2.0 l_0_2_85) l_0_2_91))))
 (= ?x3546 0.0)))
(assert
 (let ((?x3559 (- (* (* 2.0 l_0_2_57) l_0_2_67) (* (* 2.0 l_0_2_85) l_0_2_95))))
 (= ?x3559 0.0)))
(assert
 (let ((?x3573 (+ (* (* (- 2.0) l_0_2_100) l_0_2_85) (* (* 2.0 l_0_2_57) l_0_2_72))))
 (= ?x3573 0.0)))
(assert
 (let ((?x3584 (+ (* (* (- 2.0) l_0_2_106) l_0_2_85) (* (* 2.0 l_0_2_57) l_0_2_78))))
 (= ?x3584 0.0)))
(assert
 (let ((?x3599 (* l_0_2_87 l_0_2_87)))
 (let ((?x3597 (* l_0_2_86 l_0_2_86)))
 (let ((?x3596 (+ (* 1.0 (* l_0_2_58 l_0_2_58)) (* 1.0 (* l_0_2_59 l_0_2_59)))))
 (= (- (- ?x3596 ?x3597) ?x3599) 0.0)))))
(assert
 (let ((?x3612 (+ (* (* 2.0 l_0_2_58) l_0_2_60) (* (* 2.0 l_0_2_59) l_0_2_61))))
 (let ((?x3618 (- (- ?x3612 (* (* 2.0 l_0_2_86) l_0_2_88)) (* (* 2.0 l_0_2_87) l_0_2_89))))
 (= ?x3618 0.0))))
(assert
 (let ((?x3640 (+ (* (* 2.0 l_0_2_58) l_0_2_63) (* (* 2.0 l_0_2_59) l_0_2_64))))
 (let ((?x3644 (- (- ?x3640 (* (* 2.0 l_0_2_86) l_0_2_91)) (* (* 2.0 l_0_2_87) l_0_2_92))))
 (= ?x3644 0.0))))
(assert
 (let ((?x3666 (+ (* (* 2.0 l_0_2_58) l_0_2_67) (* (* 2.0 l_0_2_59) l_0_2_68))))
 (let ((?x3670 (- (- ?x3666 (* (* 2.0 l_0_2_86) l_0_2_95)) (* (* 2.0 l_0_2_87) l_0_2_96))))
 (= ?x3670 0.0))))
(assert
 (let ((?x3692 (- (* (* (- 2.0) l_0_2_100) l_0_2_86) (* (* 2.0 l_0_2_101) l_0_2_87))))
 (let ((?x3696 (+ (+ ?x3692 (* (* 2.0 l_0_2_58) l_0_2_72)) (* (* 2.0 l_0_2_59) l_0_2_73))))
 (= ?x3696 0.0))))
(assert
 (let ((?x3725 (* l_0_2_90 l_0_2_90)))
 (let ((?x3723 (* l_0_2_89 l_0_2_89)))
 (let ((?x3721 (* l_0_2_88 l_0_2_88)))
 (let ((?x3717 (+ (* 1.0 (* l_0_2_60 l_0_2_60)) (* 1.0 (* l_0_2_61 l_0_2_61)))))
 (let ((?x3726 (- (- (- (+ ?x3717 (* 1.0 (* l_0_2_62 l_0_2_62))) ?x3721) ?x3723) ?x3725)))
 (= ?x3726 0.0)))))))
(assert
 (let ((?x3741 (+ (* (* 2.0 l_0_2_60) l_0_2_63) (* (* 2.0 l_0_2_61) l_0_2_64))))
 (let ((?x3746 (- (+ ?x3741 (* (* 2.0 l_0_2_62) l_0_2_65)) (* (* 2.0 l_0_2_88) l_0_2_91))))
 (let ((?x3752 (- (- ?x3746 (* (* 2.0 l_0_2_89) l_0_2_92)) (* (* 2.0 l_0_2_90) l_0_2_93))))
 (= ?x3752 0.0)))))
(assert
 (let ((?x3782 (+ (* (* 2.0 l_0_2_60) l_0_2_67) (* (* 2.0 l_0_2_61) l_0_2_68))))
 (let ((?x3786 (- (+ ?x3782 (* (* 2.0 l_0_2_62) l_0_2_69)) (* (* 2.0 l_0_2_88) l_0_2_95))))
 (let ((?x3790 (- (- ?x3786 (* (* 2.0 l_0_2_89) l_0_2_96)) (* (* 2.0 l_0_2_90) l_0_2_97))))
 (= ?x3790 0.0)))))
(assert
 (let ((?x3820 (- (* (* (- 2.0) l_0_2_106) l_0_2_88) (* (* 2.0 l_0_2_107) l_0_2_89))))
 (let ((?x3825 (+ (- ?x3820 (* (* 2.0 l_0_2_108) l_0_2_90)) (* (* 2.0 l_0_2_60) l_0_2_78))))
 (let ((?x3829 (+ (+ ?x3825 (* (* 2.0 l_0_2_61) l_0_2_79)) (* (* 2.0 l_0_2_62) l_0_2_80))))
 (= ?x3829 0.0)))))
(assert
 (let ((?x3871 (* l_0_2_94 l_0_2_94)))
 (let ((?x3869 (* l_0_2_93 l_0_2_93)))
 (let ((?x3867 (* l_0_2_92 l_0_2_92)))
 (let ((?x3865 (* l_0_2_91 l_0_2_91)))
 (let ((?x3858 (+ (* 1.0 (* l_0_2_63 l_0_2_63)) (* 1.0 (* l_0_2_64 l_0_2_64)))))
 (let ((?x3864 (+ (+ ?x3858 (* 1.0 (* l_0_2_65 l_0_2_65))) (* 1.0 (* l_0_2_66 l_0_2_66)))))
 (= (- (- (- (- ?x3864 ?x3865) ?x3867) ?x3869) ?x3871) 0.0))))))))
(assert
 (let ((?x3890 (- (* (* (- 2.0) l_0_2_100) l_0_2_91) (* (* 2.0 l_0_2_101) l_0_2_92))))
 (let ((?x3895 (- (- ?x3890 (* (* 2.0 l_0_2_102) l_0_2_93)) (* (* 2.0 l_0_2_103) l_0_2_94))))
 (let ((?x3899 (+ (+ ?x3895 (* (* 2.0 l_0_2_63) l_0_2_72)) (* (* 2.0 l_0_2_64) l_0_2_73))))
 (let ((?x3903 (+ (+ ?x3899 (* (* 2.0 l_0_2_65) l_0_2_74)) (* (* 2.0 l_0_2_66) l_0_2_75))))
 (= ?x3903 0.0))))))
(assert
 (let ((?x3930 (- (* (* (- 2.0) l_0_2_106) l_0_2_91) (* (* 2.0 l_0_2_107) l_0_2_92))))
 (let ((?x3943 (- (- ?x3930 (* (* 2.0 l_0_2_108) l_0_2_93)) (* (* 2.0 l_0_2_109) l_0_2_94))))
 (let ((?x3947 (+ (+ ?x3943 (* (* 2.0 l_0_2_63) l_0_2_78)) (* (* 2.0 l_0_2_64) l_0_2_79))))
 (let ((?x3951 (+ (+ ?x3947 (* (* 2.0 l_0_2_65) l_0_2_80)) (* (* 2.0 l_0_2_66) l_0_2_81))))
 (= ?x3951 0.0))))))
(assert
 (let ((?x4006 (* l_0_2_99 l_0_2_99)))
 (let ((?x4004 (* l_0_2_98 l_0_2_98)))
 (let ((?x4002 (* l_0_2_97 l_0_2_97)))
 (let ((?x4000 (* l_0_2_96 l_0_2_96)))
 (let ((?x3998 (* l_0_2_95 l_0_2_95)))
 (let ((?x3981 (+ (* 1.0 (* l_0_2_67 l_0_2_67)) (* 1.0 (* l_0_2_68 l_0_2_68)))))
 (let ((?x3994 (+ (+ ?x3981 (* 1.0 (* l_0_2_69 l_0_2_69))) (* 1.0 (* l_0_2_70 l_0_2_70)))))
 (let ((?x4003 (- (- (- (+ ?x3994 (* 1.0 (* l_0_2_71 l_0_2_71))) ?x3998) ?x4000) ?x4002)))
 (= (- (- ?x4003 ?x4004) ?x4006) 0.0))))))))))
(assert
 (let ((?x4028 (- (* (* (- 2.0) l_0_2_100) l_0_2_95) (* (* 2.0 l_0_2_101) l_0_2_96))))
 (let ((?x4032 (- (- ?x4028 (* (* 2.0 l_0_2_102) l_0_2_97)) (* (* 2.0 l_0_2_103) l_0_2_98))))
 (let ((?x4038 (+ (- ?x4032 (* (* 2.0 l_0_2_104) l_0_2_99)) (* (* 2.0 l_0_2_67) l_0_2_72))))
 (let ((?x4044 (+ (+ ?x4038 (* (* 2.0 l_0_2_68) l_0_2_73)) (* (* 2.0 l_0_2_69) l_0_2_74))))
 (let ((?x4050 (+ (+ ?x4044 (* (* 2.0 l_0_2_70) l_0_2_75)) (* (* 2.0 l_0_2_71) l_0_2_76))))
 (= ?x4050 0.0)))))))
(assert
 (let ((?x4083 (- (* (* (- 2.0) l_0_2_106) l_0_2_95) (* (* 2.0 l_0_2_107) l_0_2_96))))
 (let ((?x4097 (- (- ?x4083 (* (* 2.0 l_0_2_108) l_0_2_97)) (* (* 2.0 l_0_2_109) l_0_2_98))))
 (let ((?x4102 (+ (- ?x4097 (* (* 2.0 l_0_2_110) l_0_2_99)) (* (* 2.0 l_0_2_67) l_0_2_78))))
 (let ((?x4106 (+ (+ ?x4102 (* (* 2.0 l_0_2_68) l_0_2_79)) (* (* 2.0 l_0_2_69) l_0_2_80))))
 (let ((?x4110 (+ (+ ?x4106 (* (* 2.0 l_0_2_70) l_0_2_81)) (* (* 2.0 l_0_2_71) l_0_2_82))))
 (= ?x4110 0.0)))))))
(assert
 (let ((?x4161 (* l_0_2_105 l_0_2_105)))
 (let ((?x4159 (* l_0_2_104 l_0_2_104)))
 (let ((?x4157 (* l_0_2_103 l_0_2_103)))
 (let ((?x4147 (* l_0_2_102 l_0_2_102)))
 (let ((?x4148 (- (- (* (- l_0_2_100) l_0_2_100) (* l_0_2_101 l_0_2_101)) ?x4147)))
 (let ((?x4165 (+ (- (- (- ?x4148 ?x4157) ?x4159) ?x4161) (* 1.0 (* l_0_2_72 l_0_2_72)))))
 (let ((?x4171 (+ (+ ?x4165 (* 1.0 (* l_0_2_73 l_0_2_73))) (* 1.0 (* l_0_2_74 l_0_2_74)))))
 (let ((?x4177 (+ (+ ?x4171 (* 1.0 (* l_0_2_75 l_0_2_75))) (* 1.0 (* l_0_2_76 l_0_2_76)))))
 (= (+ ?x4177 (* 1.0 (* l_0_2_77 l_0_2_77))) 0.0))))))))))
(assert
 (let ((?x4210 (- (* (* (- 2.0) l_0_2_100) l_0_2_106) (* (* 2.0 l_0_2_101) l_0_2_107))))
 (let ((?x4214 (- (- ?x4210 (* (* 2.0 l_0_2_102) l_0_2_108)) (* (* 2.0 l_0_2_103) l_0_2_109))))
 (let ((?x4219 (- (- ?x4214 (* (* 2.0 l_0_2_104) l_0_2_110)) (* (* 2.0 l_0_2_105) l_0_2_111))))
 (let ((?x4225 (+ (+ ?x4219 (* (* 2.0 l_0_2_72) l_0_2_78)) (* (* 2.0 l_0_2_73) l_0_2_79))))
 (let ((?x4231 (+ (+ ?x4225 (* (* 2.0 l_0_2_74) l_0_2_80)) (* (* 2.0 l_0_2_75) l_0_2_81))))
 (let ((?x4237 (+ (+ ?x4231 (* (* 2.0 l_0_2_76) l_0_2_82)) (* (* 2.0 l_0_2_77) l_0_2_83))))
 (= ?x4237 0.0))))))))
(assert
 (let ((?x4298 (* l_0_2_112 l_0_2_112)))
 (let ((?x4296 (* l_0_2_111 l_0_2_111)))
 (let ((?x4294 (* l_0_2_110 l_0_2_110)))
 (let ((?x4283 (* l_0_2_109 l_0_2_109)))
 (let ((?x4280 (* l_0_2_108 l_0_2_108)))
 (let ((?x4282 (- (- (* (- l_0_2_106) l_0_2_106) (* l_0_2_107 l_0_2_107)) ?x4280)))
 (let ((?x4302 (+ (- (- (- (- ?x4282 ?x4283) ?x4294) ?x4296) ?x4298) (* 1.0 (* l_0_2_78 l_0_2_78)))))
 (let ((?x4308 (+ (+ ?x4302 (* 1.0 (* l_0_2_79 l_0_2_79))) (* 1.0 (* l_0_2_80 l_0_2_80)))))
 (let ((?x4314 (+ (+ ?x4308 (* 1.0 (* l_0_2_81 l_0_2_81))) (* 1.0 (* l_0_2_82 l_0_2_82)))))
 (let ((?x4320 (+ (+ ?x4314 (* 1.0 (* l_0_2_83 l_0_2_83))) (* 1.0 (* l_0_2_84 l_0_2_84)))))
 (= ?x4320 0.0))))))))))))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_10 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_28 0.0))
(assert
 (>= l_0_2_29 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_34 0.0))
(assert
 (>= l_0_2_38 0.0))
(assert
 (>= l_0_2_43 0.0))
(assert
 (>= l_0_2_49 0.0))
(assert
 (>= l_0_2_56 0.0))
(assert
 (>= l_0_2_57 0.0))
(assert
 (>= l_0_2_59 0.0))
(assert
 (>= l_0_2_62 0.0))
(assert
 (>= l_0_2_66 0.0))
(assert
 (>= l_0_2_71 0.0))
(assert
 (>= l_0_2_77 0.0))
(assert
 (>= l_0_2_84 0.0))
(assert
 (>= l_0_2_85 0.0))
(assert
 (>= l_0_2_87 0.0))
(assert
 (>= l_0_2_90 0.0))
(assert
 (>= l_0_2_94 0.0))
(assert
 (>= l_0_2_99 0.0))
(assert
 (>= l_0_2_105 0.0))
(assert
 (>= l_0_2_112 0.0))
(assert
 (let ((?x4391 (* l_0_3_29 l_0_3_29)))
 (let ((?x4387 (- (- (* (- l_0_3_1) l_0_3_1) (* (* 2.0 l_0_3_100) l_0_3_88)) (* (* 2.0 l_0_3_101) l_0_3_89))))
 (let ((?x4395 (- (+ (- ?x4387 (* (* 2.0 l_0_3_102) l_0_3_90)) ?x4391) (* (* 2.0 l_0_3_60) l_0_3_72))))
 (let ((?x4401 (- (- ?x4395 (* (* 2.0 l_0_3_61) l_0_3_73)) (* (* 2.0 l_0_3_62) l_0_3_74))))
 (= (+ ?x4401 1.0) 0.0))))))
(assert
 (let ((?x4451 (- (- (- _a_3_) (* (* 2.0 l_0_3_57) l_0_3_58)) (* (* 2.0 l_0_3_85) l_0_3_86))))
 (= ?x4451 0.0)))
(assert
 (let ((?x4474 (- (- (- _a_4_) (* (* 2.0 l_0_3_58) l_0_3_67)) (* (* 2.0 l_0_3_59) l_0_3_68))))
 (let ((?x4480 (- (- ?x4474 (* (* 2.0 l_0_3_86) l_0_3_95)) (* (* 2.0 l_0_3_87) l_0_3_96))))
 (= (+ ?x4480 1.0) 0.0))))
(assert
 (let ((?x4391 (* l_0_3_29 l_0_3_29)))
 (let ((?x4514 (- (+ (- _a_5_) (* l_0_3_1 l_0_3_1)) (* (* 2.0 l_0_3_106) l_0_3_86))))
 (let ((?x4520 (- (- (- ?x4514 (* (* 2.0 l_0_3_107) l_0_3_87)) ?x4391) (* (* 2.0 l_0_3_58) l_0_3_78))))
 (= (- ?x4520 (* (* 2.0 l_0_3_59) l_0_3_79)) 0.0)))))
(assert
 (let ((?x4558 (- (- (* l_0_3_1 l_0_3_1) (* l_0_3_29 l_0_3_29)) (* (* 2.0 l_0_3_63) l_0_3_67))))
 (let ((?x4564 (- (- ?x4558 (* (* 2.0 l_0_3_64) l_0_3_68)) (* (* 2.0 l_0_3_65) l_0_3_69))))
 (let ((?x4570 (- (- ?x4564 (* (* 2.0 l_0_3_66) l_0_3_70)) (* (* 2.0 l_0_3_91) l_0_3_95))))
 (let ((?x4576 (- (- ?x4570 (* (* 2.0 l_0_3_92) l_0_3_96)) (* (* 2.0 l_0_3_93) l_0_3_97))))
 (= (- (- ?x4576 (* (* 2.0 l_0_3_94) l_0_3_98)) 1.0) 0.0))))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4640 (* ?x4639 l_0_3_30)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) ?x4640) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4646 (* ?x4639 l_0_3_32)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x4646) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4656 (* ?x4639 l_0_3_35)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x4656) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4666 (* ?x4639 l_0_3_39)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x4666) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4676 (* ?x4639 l_0_3_44)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_16) ?x4676) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4686 (* ?x4639 l_0_3_50)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_22) ?x4686) 0.0))))
(assert
 (let ((?x4705 (* l_0_3_31 l_0_3_31)))
 (let ((?x4703 (* l_0_3_30 l_0_3_30)))
 (let ((?x4706 (+ (+ (- (* (- l_0_3_2) l_0_3_2) (* l_0_3_3 l_0_3_3)) ?x4703) ?x4705)))
 (= ?x4706 0.0)))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4727 (* ?x4726 l_0_3_33)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4724 (* ?x4723 l_0_3_32)))
 (let ((?x4720 (* 2.0 l_0_3_3)))
 (let ((?x4721 (* ?x4720 l_0_3_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_2) l_0_3_4) ?x4721) ?x4724) ?x4727) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4750 (* ?x4726 l_0_3_36)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4748 (* ?x4723 l_0_3_35)))
 (let ((?x4720 (* 2.0 l_0_3_3)))
 (let ((?x4741 (* ?x4720 l_0_3_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_2) l_0_3_7) ?x4741) ?x4748) ?x4750) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4775 (* ?x4726 l_0_3_40)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4773 (* ?x4723 l_0_3_39)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x4771 (* ?x4765 l_0_3_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_11) l_0_3_2) ?x4771) ?x4773) ?x4775) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4800 (* ?x4726 l_0_3_45)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4798 (* ?x4723 l_0_3_44)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x4796 (* ?x4790 l_0_3_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_16) l_0_3_2) ?x4796) ?x4798) ?x4800) 0.0))))))))
(assert
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x4842 (* ?x4841 l_0_3_46)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x4839 (* ?x4838 l_0_3_45)))
 (let ((?x4835 (* 2.0 l_0_3_32)))
 (let ((?x4836 (* ?x4835 l_0_3_44)))
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4833 (* ?x4726 l_0_3_51)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4831 (* ?x4723 l_0_3_50)))
 (let ((?x4828 (* 2.0 l_0_3_23)))
 (let ((?x4829 (* ?x4828 l_0_3_3)))
 (let ((?x4825 (* 2.0 l_0_3_2)))
 (let ((?x4826 (* ?x4825 l_0_3_22)))
 (let ((?x4822 (* 2.0 l_0_3_18)))
 (let ((?x4823 (* ?x4822 l_0_3_6)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x4815 (* ?x4790 l_0_3_5)))
 (let ((?x4812 (* 2.0 l_0_3_16)))
 (let ((?x4814 (* ?x4812 l_0_3_4)))
 (let ((?x4837 (- (+ (+ (- (- (+ (+ ?x4814 ?x4815) ?x4823) ?x4826) ?x4829) ?x4831) ?x4833) ?x4836)))
 (= (- (- ?x4837 ?x4839) ?x4842) 0.0)))))))))))))))))))))))
(assert
 (let ((?x4897 (* l_0_3_6 l_0_3_6)))
 (let ((?x4895 (* l_0_3_5 l_0_3_5)))
 (let ((?x4893 (* l_0_3_4 l_0_3_4)))
 (let ((?x4891 (* l_0_3_34 l_0_3_34)))
 (let ((?x4894 (- (+ (+ (* l_0_3_32 l_0_3_32) (* l_0_3_33 l_0_3_33)) ?x4891) ?x4893)))
 (= (- (- ?x4894 ?x4895) ?x4897) 0.0)))))))
(assert
 (let ((?x4923 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x4920 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x4917 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x4914 (* ?x4841 l_0_3_37)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x4912 (* ?x4838 l_0_3_36)))
 (let ((?x4921 (- (- (+ (+ (* (* 2.0 l_0_3_32) l_0_3_35) ?x4912) ?x4914) ?x4917) ?x4920)))
 (= (- ?x4921 ?x4923) 0.0))))))))))
(assert
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x4962 (* ?x4841 l_0_3_41)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x4960 (* ?x4838 l_0_3_40)))
 (let ((?x4835 (* 2.0 l_0_3_32)))
 (let ((?x4958 (* ?x4835 l_0_3_39)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x4956 (* ?x4955 l_0_3_6)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x4953 (* ?x4765 l_0_3_5)))
 (let ((?x4961 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x4953) ?x4956) ?x4958) ?x4960)))
 (= (+ ?x4961 ?x4962) 0.0)))))))))))))
(assert
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x4842 (* ?x4841 l_0_3_46)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x4839 (* ?x4838 l_0_3_45)))
 (let ((?x4835 (* 2.0 l_0_3_32)))
 (let ((?x4836 (* ?x4835 l_0_3_44)))
 (let ((?x4822 (* 2.0 l_0_3_18)))
 (let ((?x4823 (* ?x4822 l_0_3_6)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x4815 (* ?x4790 l_0_3_5)))
 (let ((?x4992 (+ (+ (- (- (* (* (- 2.0) l_0_3_16) l_0_3_4) ?x4815) ?x4823) ?x4836) ?x4839)))
 (= (+ ?x4992 ?x4842) 0.0)))))))))))))
(assert
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x5017 (* ?x4841 l_0_3_52)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x5015 (* ?x4838 l_0_3_51)))
 (let ((?x4835 (* 2.0 l_0_3_32)))
 (let ((?x5013 (* ?x4835 l_0_3_50)))
 (let ((?x5010 (* 2.0 l_0_3_24)))
 (let ((?x5011 (* ?x5010 l_0_3_6)))
 (let ((?x4828 (* 2.0 l_0_3_23)))
 (let ((?x5008 (* ?x4828 l_0_3_5)))
 (let ((?x5016 (+ (+ (- (- (* (* (- 2.0) l_0_3_22) l_0_3_4) ?x5008) ?x5011) ?x5013) ?x5015)))
 (= (+ ?x5016 ?x5017) 0.0)))))))))))))
(assert
 (let ((?x5057 (* l_0_3_9 l_0_3_9)))
 (let ((?x5055 (* l_0_3_8 l_0_3_8)))
 (let ((?x5053 (* l_0_3_7 l_0_3_7)))
 (let ((?x5051 (* l_0_3_38 l_0_3_38)))
 (let ((?x5049 (* l_0_3_37 l_0_3_37)))
 (let ((?x5047 (* l_0_3_36 l_0_3_36)))
 (let ((?x5050 (+ (+ (+ (* (- l_0_3_10) l_0_3_10) (* l_0_3_35 l_0_3_35)) ?x5047) ?x5049)))
 (= (- (- (- (+ ?x5050 ?x5051) ?x5053) ?x5055) ?x5057) 0.0)))))))))
(assert
 (let ((?x5098 (* 2.0 l_0_3_38)))
 (let ((?x5099 (* ?x5098 l_0_3_42)))
 (let ((?x5095 (* 2.0 l_0_3_37)))
 (let ((?x5096 (* ?x5095 l_0_3_41)))
 (let ((?x5092 (* 2.0 l_0_3_36)))
 (let ((?x5093 (* ?x5092 l_0_3_40)))
 (let ((?x5089 (* 2.0 l_0_3_35)))
 (let ((?x5090 (* ?x5089 l_0_3_39)))
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x4842 (* ?x4841 l_0_3_46)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x4839 (* ?x4838 l_0_3_45)))
 (let ((?x4835 (* 2.0 l_0_3_32)))
 (let ((?x4836 (* ?x4835 l_0_3_44)))
 (let ((?x4822 (* 2.0 l_0_3_18)))
 (let ((?x4823 (* ?x4822 l_0_3_6)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x4815 (* ?x4790 l_0_3_5)))
 (let ((?x4812 (* 2.0 l_0_3_16)))
 (let ((?x4814 (* ?x4812 l_0_3_4)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x5081 (* ?x4955 l_0_3_9)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x5079 (* ?x4765 l_0_3_8)))
 (let ((?x5076 (* 2.0 l_0_3_11)))
 (let ((?x5077 (* ?x5076 l_0_3_7)))
 (let ((?x5083 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_14) ?x5077) ?x5079) ?x5081) ?x4814)))
 (let ((?x5094 (+ (+ (- (- (- (+ (+ ?x5083 ?x4815) ?x4823) ?x4836) ?x4839) ?x4842) ?x5090) ?x5093)))
 (= (+ (+ ?x5094 ?x5096) ?x5099) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x5098 (* 2.0 l_0_3_38)))
 (let ((?x5152 (* ?x5098 l_0_3_47)))
 (let ((?x5095 (* 2.0 l_0_3_37)))
 (let ((?x5150 (* ?x5095 l_0_3_46)))
 (let ((?x5092 (* 2.0 l_0_3_36)))
 (let ((?x5148 (* ?x5092 l_0_3_45)))
 (let ((?x5089 (* 2.0 l_0_3_35)))
 (let ((?x5146 (* ?x5089 l_0_3_44)))
 (let ((?x4822 (* 2.0 l_0_3_18)))
 (let ((?x5144 (* ?x4822 l_0_3_9)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x5142 (* ?x4790 l_0_3_8)))
 (let ((?x4812 (* 2.0 l_0_3_16)))
 (let ((?x5140 (* ?x4812 l_0_3_7)))
 (let ((?x5147 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_19) ?x5140) ?x5142) ?x5144) ?x5146)))
 (= (+ (+ (+ ?x5147 ?x5148) ?x5150) ?x5152) 0.0)))))))))))))))))
(assert
 (let ((?x5098 (* 2.0 l_0_3_38)))
 (let ((?x5200 (* ?x5098 l_0_3_53)))
 (let ((?x5095 (* 2.0 l_0_3_37)))
 (let ((?x5198 (* ?x5095 l_0_3_52)))
 (let ((?x5092 (* 2.0 l_0_3_36)))
 (let ((?x5196 (* ?x5092 l_0_3_51)))
 (let ((?x5089 (* 2.0 l_0_3_35)))
 (let ((?x5194 (* ?x5089 l_0_3_50)))
 (let ((?x5010 (* 2.0 l_0_3_24)))
 (let ((?x5192 (* ?x5010 l_0_3_9)))
 (let ((?x4828 (* 2.0 l_0_3_23)))
 (let ((?x5183 (* ?x4828 l_0_3_8)))
 (let ((?x5178 (* 2.0 l_0_3_22)))
 (let ((?x5180 (* ?x5178 l_0_3_7)))
 (let ((?x5195 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_25) ?x5180) ?x5183) ?x5192) ?x5194)))
 (= (+ (+ (+ ?x5195 ?x5196) ?x5198) ?x5200) 0.0)))))))))))))))))
(assert
 (let ((?x5252 (* l_0_3_43 l_0_3_43)))
 (let ((?x5250 (* l_0_3_42 l_0_3_42)))
 (let ((?x5248 (* l_0_3_41 l_0_3_41)))
 (let ((?x5246 (* l_0_3_40 l_0_3_40)))
 (let ((?x5244 (* l_0_3_39 l_0_3_39)))
 (let ((?x5242 (* l_0_3_15 l_0_3_15)))
 (let ((?x5240 (* l_0_3_14 l_0_3_14)))
 (let ((?x5231 (* l_0_3_13 l_0_3_13)))
 (let ((?x5241 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x5231) ?x5240)))
 (= (+ (+ (+ (+ (+ (- ?x5241 ?x5242) ?x5244) ?x5246) ?x5248) ?x5250) ?x5252) 0.0)))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_3_43)))
 (let ((?x5301 (* ?x5300 l_0_3_48)))
 (let ((?x5297 (* 2.0 l_0_3_42)))
 (let ((?x5298 (* ?x5297 l_0_3_47)))
 (let ((?x5294 (* 2.0 l_0_3_41)))
 (let ((?x5295 (* ?x5294 l_0_3_46)))
 (let ((?x5291 (* 2.0 l_0_3_40)))
 (let ((?x5292 (* ?x5291 l_0_3_45)))
 (let ((?x5288 (* 2.0 l_0_3_39)))
 (let ((?x5289 (* ?x5288 l_0_3_44)))
 (let ((?x5285 (* 2.0 l_0_3_15)))
 (let ((?x5286 (* ?x5285 l_0_3_20)))
 (let ((?x5282 (* 2.0 l_0_3_14)))
 (let ((?x5283 (* ?x5282 l_0_3_19)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x5280 (* ?x4955 l_0_3_18)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x5278 (* ?x4765 l_0_3_17)))
 (let ((?x5287 (- (- (- (- (* (* (- 2.0) l_0_3_11) l_0_3_16) ?x5278) ?x5280) ?x5283) ?x5286)))
 (= (+ (+ (+ (+ (+ ?x5287 ?x5289) ?x5292) ?x5295) ?x5298) ?x5301) 0.0)))))))))))))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_3_43)))
 (let ((?x5360 (* ?x5300 l_0_3_54)))
 (let ((?x5297 (* 2.0 l_0_3_42)))
 (let ((?x5358 (* ?x5297 l_0_3_53)))
 (let ((?x5294 (* 2.0 l_0_3_41)))
 (let ((?x5356 (* ?x5294 l_0_3_52)))
 (let ((?x5291 (* 2.0 l_0_3_40)))
 (let ((?x5354 (* ?x5291 l_0_3_51)))
 (let ((?x5288 (* 2.0 l_0_3_39)))
 (let ((?x5352 (* ?x5288 l_0_3_50)))
 (let ((?x5285 (* 2.0 l_0_3_15)))
 (let ((?x5350 (* ?x5285 l_0_3_26)))
 (let ((?x5282 (* 2.0 l_0_3_14)))
 (let ((?x5340 (* ?x5282 l_0_3_25)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x5337 (* ?x4955 l_0_3_24)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x5333 (* ?x4765 l_0_3_23)))
 (let ((?x5351 (- (- (- (- (* (* (- 2.0) l_0_3_11) l_0_3_22) ?x5333) ?x5337) ?x5340) ?x5350)))
 (= (+ (+ (+ (+ (+ ?x5351 ?x5352) ?x5354) ?x5356) ?x5358) ?x5360) 0.0)))))))))))))))))))))
(assert
 (let ((?x5424 (* l_0_3_49 l_0_3_49)))
 (let ((?x5422 (* l_0_3_48 l_0_3_48)))
 (let ((?x5420 (* l_0_3_47 l_0_3_47)))
 (let ((?x5418 (* l_0_3_46 l_0_3_46)))
 (let ((?x5416 (* l_0_3_45 l_0_3_45)))
 (let ((?x5414 (* l_0_3_44 l_0_3_44)))
 (let ((?x5412 (* l_0_3_21 l_0_3_21)))
 (let ((?x5410 (* l_0_3_20 l_0_3_20)))
 (let ((?x5408 (* l_0_3_19 l_0_3_19)))
 (let ((?x5398 (* l_0_3_18 l_0_3_18)))
 (let ((?x5409 (- (- (- (* (- l_0_3_16) l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x5398) ?x5408)))
 (let ((?x5423 (+ (+ (+ (+ (+ (- (- ?x5409 ?x5410) ?x5412) ?x5414) ?x5416) ?x5418) ?x5420) ?x5422)))
 (= (+ ?x5423 ?x5424) 0.0))))))))))))))
(assert
 (let ((?x5483 (* (* 2.0 l_0_3_49) l_0_3_55)))
 (let ((?x5480 (* (* 2.0 l_0_3_48) l_0_3_54)))
 (let ((?x5477 (* (* 2.0 l_0_3_47) l_0_3_53)))
 (let ((?x5474 (* (* 2.0 l_0_3_46) l_0_3_52)))
 (let ((?x5471 (* (* 2.0 l_0_3_45) l_0_3_51)))
 (let ((?x5468 (* (* 2.0 l_0_3_44) l_0_3_50)))
 (let ((?x5465 (* (* 2.0 l_0_3_21) l_0_3_27)))
 (let ((?x5462 (* (* 2.0 l_0_3_20) l_0_3_26)))
 (let ((?x5459 (* (* 2.0 l_0_3_19) l_0_3_25)))
 (let ((?x4822 (* 2.0 l_0_3_18)))
 (let ((?x5456 (* ?x4822 l_0_3_24)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x5454 (* ?x4790 l_0_3_23)))
 (let ((?x5463 (- (- (- (- (* (* (- 2.0) l_0_3_16) l_0_3_22) ?x5454) ?x5456) ?x5459) ?x5462)))
 (let ((?x5484 (+ (+ (+ (+ (+ (+ (- ?x5463 ?x5465) ?x5468) ?x5471) ?x5474) ?x5477) ?x5480) ?x5483)))
 (= ?x5484 0.0)))))))))))))))))
(assert
 (let ((?x5559 (* l_0_3_56 l_0_3_56)))
 (let ((?x5557 (* l_0_3_55 l_0_3_55)))
 (let ((?x5555 (* l_0_3_54 l_0_3_54)))
 (let ((?x5553 (* l_0_3_53 l_0_3_53)))
 (let ((?x5551 (* l_0_3_52 l_0_3_52)))
 (let ((?x5549 (* l_0_3_51 l_0_3_51)))
 (let ((?x5547 (* l_0_3_50 l_0_3_50)))
 (let ((?x5545 (* l_0_3_28 l_0_3_28)))
 (let ((?x5543 (* l_0_3_27 l_0_3_27)))
 (let ((?x5541 (* l_0_3_26 l_0_3_26)))
 (let ((?x5530 (* l_0_3_25 l_0_3_25)))
 (let ((?x5527 (* l_0_3_24 l_0_3_24)))
 (let ((?x5540 (- (- (- (* (- l_0_3_22) l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x5527) ?x5530)))
 (let ((?x5554 (+ (+ (+ (+ (- (- (- ?x5540 ?x5541) ?x5543) ?x5545) ?x5547) ?x5549) ?x5551) ?x5553)))
 (= (+ (+ (+ ?x5554 ?x5555) ?x5557) ?x5559) 0.0))))))))))))))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4640 (* ?x4639 l_0_3_30)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_2) ?x4640) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4646 (* ?x4639 l_0_3_32)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x4646) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4656 (* ?x4639 l_0_3_35)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_7) ?x4656) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4666 (* ?x4639 l_0_3_39)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x4666) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4676 (* ?x4639 l_0_3_44)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_16) ?x4676) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4686 (* ?x4639 l_0_3_50)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_22) ?x4686) 0.0))))
(assert
 (let ((?x4705 (* l_0_3_31 l_0_3_31)))
 (let ((?x4703 (* l_0_3_30 l_0_3_30)))
 (= (- (- (+ (* l_0_3_2 l_0_3_2) (* l_0_3_3 l_0_3_3)) ?x4703) ?x4705) 0.0))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4727 (* ?x4726 l_0_3_33)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4724 (* ?x4723 l_0_3_32)))
 (let ((?x4720 (* 2.0 l_0_3_3)))
 (let ((?x4721 (* ?x4720 l_0_3_5)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_4) ?x4721) ?x4724) ?x4727) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4750 (* ?x4726 l_0_3_36)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4748 (* ?x4723 l_0_3_35)))
 (let ((?x4720 (* 2.0 l_0_3_3)))
 (let ((?x4741 (* ?x4720 l_0_3_8)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_7) ?x4741) ?x4748) ?x4750) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4775 (* ?x4726 l_0_3_40)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4773 (* ?x4723 l_0_3_39)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x4771 (* ?x4765 l_0_3_3)))
 (= (- (- (+ (* (* 2.0 l_0_3_11) l_0_3_2) ?x4771) ?x4773) ?x4775) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4800 (* ?x4726 l_0_3_45)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4798 (* ?x4723 l_0_3_44)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x4796 (* ?x4790 l_0_3_3)))
 (= (- (- (+ (* (* 2.0 l_0_3_16) l_0_3_2) ?x4796) ?x4798) ?x4800) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4833 (* ?x4726 l_0_3_51)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4831 (* ?x4723 l_0_3_50)))
 (let ((?x4828 (* 2.0 l_0_3_23)))
 (let ((?x4829 (* ?x4828 l_0_3_3)))
 (let ((?x4825 (* 2.0 l_0_3_2)))
 (let ((?x4826 (* ?x4825 l_0_3_22)))
 (= (- (- (+ ?x4826 ?x4829) ?x4831) ?x4833) 0.0))))))))))
(assert
 (let ((?x4897 (* l_0_3_6 l_0_3_6)))
 (let ((?x4895 (* l_0_3_5 l_0_3_5)))
 (let ((?x4893 (* l_0_3_4 l_0_3_4)))
 (let ((?x4891 (* l_0_3_34 l_0_3_34)))
 (let ((?x5707 (+ (- (- (* (- l_0_3_32) l_0_3_32) (* l_0_3_33 l_0_3_33)) ?x4891) ?x4893)))
 (= (+ (+ ?x5707 ?x4895) ?x4897) 0.0)))))))
(assert
 (let ((?x4923 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x4920 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x4917 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x4914 (* ?x4841 l_0_3_37)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x4912 (* ?x4838 l_0_3_36)))
 (let ((?x5723 (+ (+ (- (- (* (* (- 2.0) l_0_3_32) l_0_3_35) ?x4912) ?x4914) ?x4917) ?x4920)))
 (= (+ ?x5723 ?x4923) 0.0))))))))))
(assert
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x4962 (* ?x4841 l_0_3_41)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x4960 (* ?x4838 l_0_3_40)))
 (let ((?x4835 (* 2.0 l_0_3_32)))
 (let ((?x4958 (* ?x4835 l_0_3_39)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x4956 (* ?x4955 l_0_3_6)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x4953 (* ?x4765 l_0_3_5)))
 (let ((?x5739 (- (- (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x4953) ?x4956) ?x4958) ?x4960)))
 (= (- ?x5739 ?x4962) 0.0)))))))))))))
(assert
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x5017 (* ?x4841 l_0_3_52)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x5015 (* ?x4838 l_0_3_51)))
 (let ((?x4835 (* 2.0 l_0_3_32)))
 (let ((?x5013 (* ?x4835 l_0_3_50)))
 (let ((?x5010 (* 2.0 l_0_3_24)))
 (let ((?x5011 (* ?x5010 l_0_3_6)))
 (let ((?x4828 (* 2.0 l_0_3_23)))
 (let ((?x5008 (* ?x4828 l_0_3_5)))
 (let ((?x5758 (- (- (+ (+ (* (* 2.0 l_0_3_22) l_0_3_4) ?x5008) ?x5011) ?x5013) ?x5015)))
 (= (- ?x5758 ?x5017) 0.0)))))))))))))
(assert
 (let ((?x5057 (* l_0_3_9 l_0_3_9)))
 (let ((?x5055 (* l_0_3_8 l_0_3_8)))
 (let ((?x5053 (* l_0_3_7 l_0_3_7)))
 (let ((?x5051 (* l_0_3_38 l_0_3_38)))
 (let ((?x5049 (* l_0_3_37 l_0_3_37)))
 (let ((?x5047 (* l_0_3_36 l_0_3_36)))
 (let ((?x5775 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_35 l_0_3_35)) ?x5047) ?x5049)))
 (= (+ (+ (+ (- ?x5775 ?x5051) ?x5053) ?x5055) ?x5057) 0.0)))))))))
(assert
 (let ((?x5098 (* 2.0 l_0_3_38)))
 (let ((?x5099 (* ?x5098 l_0_3_42)))
 (let ((?x5095 (* 2.0 l_0_3_37)))
 (let ((?x5096 (* ?x5095 l_0_3_41)))
 (let ((?x5092 (* 2.0 l_0_3_36)))
 (let ((?x5093 (* ?x5092 l_0_3_40)))
 (let ((?x5089 (* 2.0 l_0_3_35)))
 (let ((?x5090 (* ?x5089 l_0_3_39)))
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4833 (* ?x4726 l_0_3_51)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4831 (* ?x4723 l_0_3_50)))
 (let ((?x4828 (* 2.0 l_0_3_23)))
 (let ((?x4829 (* ?x4828 l_0_3_3)))
 (let ((?x4825 (* 2.0 l_0_3_2)))
 (let ((?x4826 (* ?x4825 l_0_3_22)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x5081 (* ?x4955 l_0_3_9)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x5079 (* ?x4765 l_0_3_8)))
 (let ((?x5076 (* 2.0 l_0_3_11)))
 (let ((?x5077 (* ?x5076 l_0_3_7)))
 (let ((?x5797 (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x5077) ?x5079) ?x5081)))
 (let ((?x5804 (- (- (- (- (- (+ (+ ?x5797 ?x4826) ?x4829) ?x4831) ?x4833) ?x5090) ?x5093) ?x5096)))
 (= (- ?x5804 ?x5099) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x5098 (* 2.0 l_0_3_38)))
 (let ((?x5152 (* ?x5098 l_0_3_47)))
 (let ((?x5095 (* 2.0 l_0_3_37)))
 (let ((?x5150 (* ?x5095 l_0_3_46)))
 (let ((?x5092 (* 2.0 l_0_3_36)))
 (let ((?x5148 (* ?x5092 l_0_3_45)))
 (let ((?x5089 (* 2.0 l_0_3_35)))
 (let ((?x5146 (* ?x5089 l_0_3_44)))
 (let ((?x4822 (* 2.0 l_0_3_18)))
 (let ((?x5144 (* ?x4822 l_0_3_9)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x5142 (* ?x4790 l_0_3_8)))
 (let ((?x4812 (* 2.0 l_0_3_16)))
 (let ((?x5140 (* ?x4812 l_0_3_7)))
 (let ((?x5834 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_19) ?x5140) ?x5142) ?x5144) ?x5146)))
 (= (- (- (- ?x5834 ?x5148) ?x5150) ?x5152) 0.0)))))))))))))))))
(assert
 (let ((?x5098 (* 2.0 l_0_3_38)))
 (let ((?x5200 (* ?x5098 l_0_3_53)))
 (let ((?x5095 (* 2.0 l_0_3_37)))
 (let ((?x5198 (* ?x5095 l_0_3_52)))
 (let ((?x5092 (* 2.0 l_0_3_36)))
 (let ((?x5196 (* ?x5092 l_0_3_51)))
 (let ((?x5089 (* 2.0 l_0_3_35)))
 (let ((?x5194 (* ?x5089 l_0_3_50)))
 (let ((?x5010 (* 2.0 l_0_3_24)))
 (let ((?x5192 (* ?x5010 l_0_3_9)))
 (let ((?x4828 (* 2.0 l_0_3_23)))
 (let ((?x5183 (* ?x4828 l_0_3_8)))
 (let ((?x5178 (* 2.0 l_0_3_22)))
 (let ((?x5180 (* ?x5178 l_0_3_7)))
 (let ((?x5859 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_25) ?x5180) ?x5183) ?x5192) ?x5194)))
 (= (- (- (- ?x5859 ?x5196) ?x5198) ?x5200) 0.0)))))))))))))))))
(assert
 (let ((?x5252 (* l_0_3_43 l_0_3_43)))
 (let ((?x5250 (* l_0_3_42 l_0_3_42)))
 (let ((?x5248 (* l_0_3_41 l_0_3_41)))
 (let ((?x5246 (* l_0_3_40 l_0_3_40)))
 (let ((?x5244 (* l_0_3_39 l_0_3_39)))
 (let ((?x5242 (* l_0_3_15 l_0_3_15)))
 (let ((?x5240 (* l_0_3_14 l_0_3_14)))
 (let ((?x5231 (* l_0_3_13 l_0_3_13)))
 (let ((?x5882 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x5231) ?x5240)))
 (= (- (- (- (- (- (+ ?x5882 ?x5242) ?x5244) ?x5246) ?x5248) ?x5250) ?x5252) 0.0)))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_3_43)))
 (let ((?x5301 (* ?x5300 l_0_3_48)))
 (let ((?x5297 (* 2.0 l_0_3_42)))
 (let ((?x5298 (* ?x5297 l_0_3_47)))
 (let ((?x5294 (* 2.0 l_0_3_41)))
 (let ((?x5295 (* ?x5294 l_0_3_46)))
 (let ((?x5291 (* 2.0 l_0_3_40)))
 (let ((?x5292 (* ?x5291 l_0_3_45)))
 (let ((?x5288 (* 2.0 l_0_3_39)))
 (let ((?x5289 (* ?x5288 l_0_3_44)))
 (let ((?x5285 (* 2.0 l_0_3_15)))
 (let ((?x5286 (* ?x5285 l_0_3_20)))
 (let ((?x5282 (* 2.0 l_0_3_14)))
 (let ((?x5283 (* ?x5282 l_0_3_19)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x5280 (* ?x4955 l_0_3_18)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x5278 (* ?x4765 l_0_3_17)))
 (let ((?x5904 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_16) ?x5278) ?x5280) ?x5283) ?x5286)))
 (= (- (- (- (- (- ?x5904 ?x5289) ?x5292) ?x5295) ?x5298) ?x5301) 0.0)))))))))))))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_3_43)))
 (let ((?x5360 (* ?x5300 l_0_3_54)))
 (let ((?x5297 (* 2.0 l_0_3_42)))
 (let ((?x5358 (* ?x5297 l_0_3_53)))
 (let ((?x5294 (* 2.0 l_0_3_41)))
 (let ((?x5356 (* ?x5294 l_0_3_52)))
 (let ((?x5291 (* 2.0 l_0_3_40)))
 (let ((?x5354 (* ?x5291 l_0_3_51)))
 (let ((?x5288 (* 2.0 l_0_3_39)))
 (let ((?x5352 (* ?x5288 l_0_3_50)))
 (let ((?x5285 (* 2.0 l_0_3_15)))
 (let ((?x5350 (* ?x5285 l_0_3_26)))
 (let ((?x5282 (* 2.0 l_0_3_14)))
 (let ((?x5340 (* ?x5282 l_0_3_25)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x5337 (* ?x4955 l_0_3_24)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x5333 (* ?x4765 l_0_3_23)))
 (let ((?x5935 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_22) ?x5333) ?x5337) ?x5340) ?x5350)))
 (= (- (- (- (- (- ?x5935 ?x5352) ?x5354) ?x5356) ?x5358) ?x5360) 0.0)))))))))))))))))))))
(assert
 (let ((?x5424 (* l_0_3_49 l_0_3_49)))
 (let ((?x5422 (* l_0_3_48 l_0_3_48)))
 (let ((?x5420 (* l_0_3_47 l_0_3_47)))
 (let ((?x5418 (* l_0_3_46 l_0_3_46)))
 (let ((?x5416 (* l_0_3_45 l_0_3_45)))
 (let ((?x5414 (* l_0_3_44 l_0_3_44)))
 (let ((?x5412 (* l_0_3_21 l_0_3_21)))
 (let ((?x5410 (* l_0_3_20 l_0_3_20)))
 (let ((?x5408 (* l_0_3_19 l_0_3_19)))
 (let ((?x5398 (* l_0_3_18 l_0_3_18)))
 (let ((?x5964 (+ (+ (+ (* l_0_3_16 l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x5398) ?x5408)))
 (let ((?x5971 (- (- (- (- (- (+ (+ ?x5964 ?x5410) ?x5412) ?x5414) ?x5416) ?x5418) ?x5420) ?x5422)))
 (= (- ?x5971 ?x5424) 0.0))))))))))))))
(assert
 (let ((?x5483 (* (* 2.0 l_0_3_49) l_0_3_55)))
 (let ((?x5480 (* (* 2.0 l_0_3_48) l_0_3_54)))
 (let ((?x5477 (* (* 2.0 l_0_3_47) l_0_3_53)))
 (let ((?x5474 (* (* 2.0 l_0_3_46) l_0_3_52)))
 (let ((?x5471 (* (* 2.0 l_0_3_45) l_0_3_51)))
 (let ((?x5468 (* (* 2.0 l_0_3_44) l_0_3_50)))
 (let ((?x5465 (* (* 2.0 l_0_3_21) l_0_3_27)))
 (let ((?x5462 (* (* 2.0 l_0_3_20) l_0_3_26)))
 (let ((?x5459 (* (* 2.0 l_0_3_19) l_0_3_25)))
 (let ((?x4822 (* 2.0 l_0_3_18)))
 (let ((?x5456 (* ?x4822 l_0_3_24)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x5454 (* ?x4790 l_0_3_23)))
 (let ((?x5990 (+ (+ (+ (+ (* (* 2.0 l_0_3_16) l_0_3_22) ?x5454) ?x5456) ?x5459) ?x5462)))
 (let ((?x5997 (- (- (- (- (- (- (+ ?x5990 ?x5465) ?x5468) ?x5471) ?x5474) ?x5477) ?x5480) ?x5483)))
 (= ?x5997 0.0)))))))))))))))))
(assert
 (let ((?x5559 (* l_0_3_56 l_0_3_56)))
 (let ((?x5557 (* l_0_3_55 l_0_3_55)))
 (let ((?x5555 (* l_0_3_54 l_0_3_54)))
 (let ((?x5553 (* l_0_3_53 l_0_3_53)))
 (let ((?x5551 (* l_0_3_52 l_0_3_52)))
 (let ((?x5549 (* l_0_3_51 l_0_3_51)))
 (let ((?x5547 (* l_0_3_50 l_0_3_50)))
 (let ((?x5545 (* l_0_3_28 l_0_3_28)))
 (let ((?x5543 (* l_0_3_27 l_0_3_27)))
 (let ((?x5541 (* l_0_3_26 l_0_3_26)))
 (let ((?x5530 (* l_0_3_25 l_0_3_25)))
 (let ((?x5527 (* l_0_3_24 l_0_3_24)))
 (let ((?x6025 (+ (+ (+ (* l_0_3_22 l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x5527) ?x5530)))
 (let ((?x6032 (- (- (- (- (+ (+ (+ ?x6025 ?x5541) ?x5543) ?x5545) ?x5547) ?x5549) ?x5551) ?x5553)))
 (= (- (- (- ?x6032 ?x5555) ?x5557) ?x5559) 0.0))))))))))))))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4640 (* ?x4639 l_0_3_30)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_2) ?x4640) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4646 (* ?x4639 l_0_3_32)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x4646) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4656 (* ?x4639 l_0_3_35)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_7) ?x4656) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4666 (* ?x4639 l_0_3_39)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x4666) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4676 (* ?x4639 l_0_3_44)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_16) ?x4676) 0.0))))
(assert
 (let ((?x4639 (* 2.0 l_0_3_29)))
 (let ((?x4686 (* ?x4639 l_0_3_50)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_22) ?x4686) 0.0))))
(assert
 (let ((?x4705 (* l_0_3_31 l_0_3_31)))
 (let ((?x4703 (* l_0_3_30 l_0_3_30)))
 (= (- (- (+ (* l_0_3_2 l_0_3_2) (* l_0_3_3 l_0_3_3)) ?x4703) ?x4705) 0.0))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4727 (* ?x4726 l_0_3_33)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4724 (* ?x4723 l_0_3_32)))
 (let ((?x4720 (* 2.0 l_0_3_3)))
 (let ((?x4721 (* ?x4720 l_0_3_5)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_4) ?x4721) ?x4724) ?x4727) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4750 (* ?x4726 l_0_3_36)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4748 (* ?x4723 l_0_3_35)))
 (let ((?x4720 (* 2.0 l_0_3_3)))
 (let ((?x4741 (* ?x4720 l_0_3_8)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_7) ?x4741) ?x4748) ?x4750) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4775 (* ?x4726 l_0_3_40)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4773 (* ?x4723 l_0_3_39)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x4771 (* ?x4765 l_0_3_3)))
 (= (- (- (+ (* (* 2.0 l_0_3_11) l_0_3_2) ?x4771) ?x4773) ?x4775) 0.0))))))))
(assert
 (let ((?x4726 (* 2.0 l_0_3_31)))
 (let ((?x4800 (* ?x4726 l_0_3_45)))
 (let ((?x4723 (* 2.0 l_0_3_30)))
 (let ((?x4798 (* ?x4723 l_0_3_44)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x4796 (* ?x4790 l_0_3_3)))
 (= (- (- (+ (* (* 2.0 l_0_3_16) l_0_3_2) ?x4796) ?x4798) ?x4800) 0.0))))))))
(assert
 (let ((?x4897 (* l_0_3_6 l_0_3_6)))
 (let ((?x4895 (* l_0_3_5 l_0_3_5)))
 (let ((?x4893 (* l_0_3_4 l_0_3_4)))
 (let ((?x4891 (* l_0_3_34 l_0_3_34)))
 (let ((?x5707 (+ (- (- (* (- l_0_3_32) l_0_3_32) (* l_0_3_33 l_0_3_33)) ?x4891) ?x4893)))
 (= (+ (+ ?x5707 ?x4895) ?x4897) 0.0)))))))
(assert
 (let ((?x4923 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x4920 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x4917 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x4914 (* ?x4841 l_0_3_37)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x4912 (* ?x4838 l_0_3_36)))
 (let ((?x5723 (+ (+ (- (- (* (* (- 2.0) l_0_3_32) l_0_3_35) ?x4912) ?x4914) ?x4917) ?x4920)))
 (= (+ ?x5723 ?x4923) 0.0))))))))))
(assert
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x4962 (* ?x4841 l_0_3_41)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x4960 (* ?x4838 l_0_3_40)))
 (let ((?x4835 (* 2.0 l_0_3_32)))
 (let ((?x4958 (* ?x4835 l_0_3_39)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x4956 (* ?x4955 l_0_3_6)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x4953 (* ?x4765 l_0_3_5)))
 (let ((?x5739 (- (- (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x4953) ?x4956) ?x4958) ?x4960)))
 (= (- ?x5739 ?x4962) 0.0)))))))))))))
(assert
 (let ((?x4841 (* 2.0 l_0_3_34)))
 (let ((?x5017 (* ?x4841 l_0_3_52)))
 (let ((?x4838 (* 2.0 l_0_3_33)))
 (let ((?x5015 (* ?x4838 l_0_3_51)))
 (let ((?x4835 (* 2.0 l_0_3_32)))
 (let ((?x5013 (* ?x4835 l_0_3_50)))
 (let ((?x5010 (* 2.0 l_0_3_24)))
 (let ((?x5011 (* ?x5010 l_0_3_6)))
 (let ((?x4828 (* 2.0 l_0_3_23)))
 (let ((?x5008 (* ?x4828 l_0_3_5)))
 (let ((?x5758 (- (- (+ (+ (* (* 2.0 l_0_3_22) l_0_3_4) ?x5008) ?x5011) ?x5013) ?x5015)))
 (= (- ?x5758 ?x5017) 0.0)))))))))))))
(assert
 (let ((?x5057 (* l_0_3_9 l_0_3_9)))
 (let ((?x5055 (* l_0_3_8 l_0_3_8)))
 (let ((?x5053 (* l_0_3_7 l_0_3_7)))
 (let ((?x5051 (* l_0_3_38 l_0_3_38)))
 (let ((?x5049 (* l_0_3_37 l_0_3_37)))
 (let ((?x5047 (* l_0_3_36 l_0_3_36)))
 (let ((?x5775 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_35 l_0_3_35)) ?x5047) ?x5049)))
 (= (+ (+ (+ (- ?x5775 ?x5051) ?x5053) ?x5055) ?x5057) 0.0)))))))))
(assert
 (let ((?x5098 (* 2.0 l_0_3_38)))
 (let ((?x5099 (* ?x5098 l_0_3_42)))
 (let ((?x5095 (* 2.0 l_0_3_37)))
 (let ((?x5096 (* ?x5095 l_0_3_41)))
 (let ((?x5092 (* 2.0 l_0_3_36)))
 (let ((?x5093 (* ?x5092 l_0_3_40)))
 (let ((?x5089 (* 2.0 l_0_3_35)))
 (let ((?x5090 (* ?x5089 l_0_3_39)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x5081 (* ?x4955 l_0_3_9)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x5079 (* ?x4765 l_0_3_8)))
 (let ((?x5076 (* 2.0 l_0_3_11)))
 (let ((?x5077 (* ?x5076 l_0_3_7)))
 (let ((?x5797 (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x5077) ?x5079) ?x5081)))
 (= (- (- (- (- ?x5797 ?x5090) ?x5093) ?x5096) ?x5099) 0.0)))))))))))))))))
(assert
 (let ((?x5098 (* 2.0 l_0_3_38)))
 (let ((?x5152 (* ?x5098 l_0_3_47)))
 (let ((?x5095 (* 2.0 l_0_3_37)))
 (let ((?x5150 (* ?x5095 l_0_3_46)))
 (let ((?x5092 (* 2.0 l_0_3_36)))
 (let ((?x5148 (* ?x5092 l_0_3_45)))
 (let ((?x5089 (* 2.0 l_0_3_35)))
 (let ((?x5146 (* ?x5089 l_0_3_44)))
 (let ((?x4822 (* 2.0 l_0_3_18)))
 (let ((?x5144 (* ?x4822 l_0_3_9)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x5142 (* ?x4790 l_0_3_8)))
 (let ((?x4812 (* 2.0 l_0_3_16)))
 (let ((?x5140 (* ?x4812 l_0_3_7)))
 (let ((?x5834 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_19) ?x5140) ?x5142) ?x5144) ?x5146)))
 (= (- (- (- ?x5834 ?x5148) ?x5150) ?x5152) 0.0)))))))))))))))))
(assert
 (let ((?x5098 (* 2.0 l_0_3_38)))
 (let ((?x5200 (* ?x5098 l_0_3_53)))
 (let ((?x5095 (* 2.0 l_0_3_37)))
 (let ((?x5198 (* ?x5095 l_0_3_52)))
 (let ((?x5092 (* 2.0 l_0_3_36)))
 (let ((?x5196 (* ?x5092 l_0_3_51)))
 (let ((?x5089 (* 2.0 l_0_3_35)))
 (let ((?x5194 (* ?x5089 l_0_3_50)))
 (let ((?x5010 (* 2.0 l_0_3_24)))
 (let ((?x5192 (* ?x5010 l_0_3_9)))
 (let ((?x4828 (* 2.0 l_0_3_23)))
 (let ((?x5183 (* ?x4828 l_0_3_8)))
 (let ((?x5178 (* 2.0 l_0_3_22)))
 (let ((?x5180 (* ?x5178 l_0_3_7)))
 (let ((?x5859 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_25) ?x5180) ?x5183) ?x5192) ?x5194)))
 (= (- (- (- ?x5859 ?x5196) ?x5198) ?x5200) 0.0)))))))))))))))))
(assert
 (let ((?x5252 (* l_0_3_43 l_0_3_43)))
 (let ((?x5250 (* l_0_3_42 l_0_3_42)))
 (let ((?x5248 (* l_0_3_41 l_0_3_41)))
 (let ((?x5246 (* l_0_3_40 l_0_3_40)))
 (let ((?x5244 (* l_0_3_39 l_0_3_39)))
 (let ((?x5242 (* l_0_3_15 l_0_3_15)))
 (let ((?x5240 (* l_0_3_14 l_0_3_14)))
 (let ((?x5231 (* l_0_3_13 l_0_3_13)))
 (let ((?x5882 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x5231) ?x5240)))
 (= (- (- (- (- (- (+ ?x5882 ?x5242) ?x5244) ?x5246) ?x5248) ?x5250) ?x5252) 0.0)))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_3_43)))
 (let ((?x5301 (* ?x5300 l_0_3_48)))
 (let ((?x5297 (* 2.0 l_0_3_42)))
 (let ((?x5298 (* ?x5297 l_0_3_47)))
 (let ((?x5294 (* 2.0 l_0_3_41)))
 (let ((?x5295 (* ?x5294 l_0_3_46)))
 (let ((?x5291 (* 2.0 l_0_3_40)))
 (let ((?x5292 (* ?x5291 l_0_3_45)))
 (let ((?x5288 (* 2.0 l_0_3_39)))
 (let ((?x5289 (* ?x5288 l_0_3_44)))
 (let ((?x5285 (* 2.0 l_0_3_15)))
 (let ((?x5286 (* ?x5285 l_0_3_20)))
 (let ((?x5282 (* 2.0 l_0_3_14)))
 (let ((?x5283 (* ?x5282 l_0_3_19)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x5280 (* ?x4955 l_0_3_18)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x5278 (* ?x4765 l_0_3_17)))
 (let ((?x5904 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_16) ?x5278) ?x5280) ?x5283) ?x5286)))
 (= (- (- (- (- (- ?x5904 ?x5289) ?x5292) ?x5295) ?x5298) ?x5301) 0.0)))))))))))))))))))))
(assert
 (let ((?x5300 (* 2.0 l_0_3_43)))
 (let ((?x5360 (* ?x5300 l_0_3_54)))
 (let ((?x5297 (* 2.0 l_0_3_42)))
 (let ((?x5358 (* ?x5297 l_0_3_53)))
 (let ((?x5294 (* 2.0 l_0_3_41)))
 (let ((?x5356 (* ?x5294 l_0_3_52)))
 (let ((?x5291 (* 2.0 l_0_3_40)))
 (let ((?x5354 (* ?x5291 l_0_3_51)))
 (let ((?x5288 (* 2.0 l_0_3_39)))
 (let ((?x5352 (* ?x5288 l_0_3_50)))
 (let ((?x5285 (* 2.0 l_0_3_15)))
 (let ((?x5350 (* ?x5285 l_0_3_26)))
 (let ((?x5282 (* 2.0 l_0_3_14)))
 (let ((?x5340 (* ?x5282 l_0_3_25)))
 (let ((?x4955 (* 2.0 l_0_3_13)))
 (let ((?x5337 (* ?x4955 l_0_3_24)))
 (let ((?x4765 (* 2.0 l_0_3_12)))
 (let ((?x5333 (* ?x4765 l_0_3_23)))
 (let ((?x5935 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_22) ?x5333) ?x5337) ?x5340) ?x5350)))
 (= (- (- (- (- (- ?x5935 ?x5352) ?x5354) ?x5356) ?x5358) ?x5360) 0.0)))))))))))))))))))))
(assert
 (let ((?x5424 (* l_0_3_49 l_0_3_49)))
 (let ((?x5422 (* l_0_3_48 l_0_3_48)))
 (let ((?x5420 (* l_0_3_47 l_0_3_47)))
 (let ((?x5418 (* l_0_3_46 l_0_3_46)))
 (let ((?x5416 (* l_0_3_45 l_0_3_45)))
 (let ((?x5414 (* l_0_3_44 l_0_3_44)))
 (let ((?x5412 (* l_0_3_21 l_0_3_21)))
 (let ((?x5410 (* l_0_3_20 l_0_3_20)))
 (let ((?x5408 (* l_0_3_19 l_0_3_19)))
 (let ((?x5398 (* l_0_3_18 l_0_3_18)))
 (let ((?x5964 (+ (+ (+ (* l_0_3_16 l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x5398) ?x5408)))
 (let ((?x5971 (- (- (- (- (- (+ (+ ?x5964 ?x5410) ?x5412) ?x5414) ?x5416) ?x5418) ?x5420) ?x5422)))
 (= (- ?x5971 ?x5424) 0.0))))))))))))))
(assert
 (let ((?x5483 (* (* 2.0 l_0_3_49) l_0_3_55)))
 (let ((?x5480 (* (* 2.0 l_0_3_48) l_0_3_54)))
 (let ((?x5477 (* (* 2.0 l_0_3_47) l_0_3_53)))
 (let ((?x5474 (* (* 2.0 l_0_3_46) l_0_3_52)))
 (let ((?x5471 (* (* 2.0 l_0_3_45) l_0_3_51)))
 (let ((?x5468 (* (* 2.0 l_0_3_44) l_0_3_50)))
 (let ((?x5465 (* (* 2.0 l_0_3_21) l_0_3_27)))
 (let ((?x5462 (* (* 2.0 l_0_3_20) l_0_3_26)))
 (let ((?x5459 (* (* 2.0 l_0_3_19) l_0_3_25)))
 (let ((?x4822 (* 2.0 l_0_3_18)))
 (let ((?x5456 (* ?x4822 l_0_3_24)))
 (let ((?x4790 (* 2.0 l_0_3_17)))
 (let ((?x5454 (* ?x4790 l_0_3_23)))
 (let ((?x5990 (+ (+ (+ (+ (* (* 2.0 l_0_3_16) l_0_3_22) ?x5454) ?x5456) ?x5459) ?x5462)))
 (let ((?x5997 (- (- (- (- (- (- (+ ?x5990 ?x5465) ?x5468) ?x5471) ?x5474) ?x5477) ?x5480) ?x5483)))
 (= ?x5997 0.0)))))))))))))))))
(assert
 (let ((?x5559 (* l_0_3_56 l_0_3_56)))
 (let ((?x5557 (* l_0_3_55 l_0_3_55)))
 (let ((?x5555 (* l_0_3_54 l_0_3_54)))
 (let ((?x5553 (* l_0_3_53 l_0_3_53)))
 (let ((?x5551 (* l_0_3_52 l_0_3_52)))
 (let ((?x5549 (* l_0_3_51 l_0_3_51)))
 (let ((?x5547 (* l_0_3_50 l_0_3_50)))
 (let ((?x5545 (* l_0_3_28 l_0_3_28)))
 (let ((?x5543 (* l_0_3_27 l_0_3_27)))
 (let ((?x5541 (* l_0_3_26 l_0_3_26)))
 (let ((?x5530 (* l_0_3_25 l_0_3_25)))
 (let ((?x5527 (* l_0_3_24 l_0_3_24)))
 (let ((?x6025 (+ (+ (+ (* l_0_3_22 l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x5527) ?x5530)))
 (let ((?x6032 (- (- (- (- (+ (+ (+ ?x6025 ?x5541) ?x5543) ?x5545) ?x5547) ?x5549) ?x5551) ?x5553)))
 (= (- (- (- ?x6032 ?x5555) ?x5557) ?x5559) 0.0))))))))))))))))
(assert
 (= (- (* (* (- 1.0) l_0_3_57) l_0_3_57) (* l_0_3_85 l_0_3_85)) 0.0))
(assert
 (let ((?x6081 (- (* (* (- 2.0) l_0_3_57) l_0_3_60) (* (* 2.0 l_0_3_85) l_0_3_88))))
 (= ?x6081 0.0)))
(assert
 (let ((?x6096 (- (* (* (- 2.0) l_0_3_57) l_0_3_63) (* (* 2.0 l_0_3_85) l_0_3_91))))
 (= ?x6096 0.0)))
(assert
 (let ((?x6111 (- (* (* (- 2.0) l_0_3_57) l_0_3_67) (* (* 2.0 l_0_3_85) l_0_3_95))))
 (= ?x6111 0.0)))
(assert
 (let ((?x6127 (- (* (* (- 2.0) l_0_3_100) l_0_3_85) (* (* 2.0 l_0_3_57) l_0_3_72))))
 (= ?x6127 0.0)))
(assert
 (let ((?x6143 (- (* (* (- 2.0) l_0_3_106) l_0_3_85) (* (* 2.0 l_0_3_57) l_0_3_78))))
 (= ?x6143 0.0)))
(assert
 (let ((?x6163 (* l_0_3_87 l_0_3_87)))
 (let ((?x6161 (* l_0_3_86 l_0_3_86)))
 (let ((?x6160 (- (* (* (- 1.0) l_0_3_58) l_0_3_58) (* (* 1.0 l_0_3_59) l_0_3_59))))
 (= (- (- ?x6160 ?x6161) ?x6163) 0.0)))))
(assert
 (let ((?x6182 (- (* (* (- 2.0) l_0_3_58) l_0_3_60) (* (* 2.0 l_0_3_59) l_0_3_61))))
 (let ((?x6186 (- (- ?x6182 (* (* 2.0 l_0_3_86) l_0_3_88)) (* (* 2.0 l_0_3_87) l_0_3_89))))
 (= ?x6186 0.0))))
(assert
 (let ((?x6213 (- (* (* (- 2.0) l_0_3_58) l_0_3_63) (* (* 2.0 l_0_3_59) l_0_3_64))))
 (let ((?x6217 (- (- ?x6213 (* (* 2.0 l_0_3_86) l_0_3_91)) (* (* 2.0 l_0_3_87) l_0_3_92))))
 (= ?x6217 0.0))))
(assert
 (let ((?x6244 (- (* (* (- 2.0) l_0_3_100) l_0_3_86) (* (* 2.0 l_0_3_101) l_0_3_87))))
 (let ((?x6248 (- (- ?x6244 (* (* 2.0 l_0_3_58) l_0_3_72)) (* (* 2.0 l_0_3_59) l_0_3_73))))
 (= ?x6248 0.0))))
(assert
 (let ((?x6285 (* l_0_3_90 l_0_3_90)))
 (let ((?x6283 (* l_0_3_89 l_0_3_89)))
 (let ((?x6281 (* l_0_3_88 l_0_3_88)))
 (let ((?x6277 (- (* (* (- 1.0) l_0_3_60) l_0_3_60) (* (* 1.0 l_0_3_61) l_0_3_61))))
 (let ((?x6286 (- (- (- (- ?x6277 (* (* 1.0 l_0_3_62) l_0_3_62)) ?x6281) ?x6283) ?x6285)))
 (= ?x6286 0.0)))))))
(assert
 (let ((?x6311 (- (* (* (- 2.0) l_0_3_60) l_0_3_63) (* (* 2.0 l_0_3_61) l_0_3_64))))
 (let ((?x6316 (- (- ?x6311 (* (* 2.0 l_0_3_62) l_0_3_65)) (* (* 2.0 l_0_3_88) l_0_3_91))))
 (let ((?x6322 (- (- ?x6316 (* (* 2.0 l_0_3_89) l_0_3_92)) (* (* 2.0 l_0_3_90) l_0_3_93))))
 (= ?x6322 0.0)))))
(assert
 (let ((?x6361 (- (* (* (- 2.0) l_0_3_60) l_0_3_67) (* (* 2.0 l_0_3_61) l_0_3_68))))
 (let ((?x6365 (- (- ?x6361 (* (* 2.0 l_0_3_62) l_0_3_69)) (* (* 2.0 l_0_3_88) l_0_3_95))))
 (let ((?x6369 (- (- ?x6365 (* (* 2.0 l_0_3_89) l_0_3_96)) (* (* 2.0 l_0_3_90) l_0_3_97))))
 (= ?x6369 0.0)))))
(assert
 (let ((?x6408 (- (* (* (- 2.0) l_0_3_106) l_0_3_88) (* (* 2.0 l_0_3_107) l_0_3_89))))
 (let ((?x6413 (- (- ?x6408 (* (* 2.0 l_0_3_108) l_0_3_90)) (* (* 2.0 l_0_3_60) l_0_3_78))))
 (let ((?x6417 (- (- ?x6413 (* (* 2.0 l_0_3_61) l_0_3_79)) (* (* 2.0 l_0_3_62) l_0_3_80))))
 (= ?x6417 0.0)))))
(assert
 (let ((?x6471 (* l_0_3_94 l_0_3_94)))
 (let ((?x6469 (* l_0_3_93 l_0_3_93)))
 (let ((?x6467 (* l_0_3_92 l_0_3_92)))
 (let ((?x6465 (* l_0_3_91 l_0_3_91)))
 (let ((?x6458 (- (* (* (- 1.0) l_0_3_63) l_0_3_63) (* (* 1.0 l_0_3_64) l_0_3_64))))
 (let ((?x6464 (- (- ?x6458 (* (* 1.0 l_0_3_65) l_0_3_65)) (* (* 1.0 l_0_3_66) l_0_3_66))))
 (= (- (- (- (- ?x6464 ?x6465) ?x6467) ?x6469) ?x6471) 0.0))))))))
(assert
 (let ((?x6503 (- (* (* (- 2.0) l_0_3_100) l_0_3_91) (* (* 2.0 l_0_3_101) l_0_3_92))))
 (let ((?x6508 (- (- ?x6503 (* (* 2.0 l_0_3_102) l_0_3_93)) (* (* 2.0 l_0_3_103) l_0_3_94))))
 (let ((?x6512 (- (- ?x6508 (* (* 2.0 l_0_3_63) l_0_3_72)) (* (* 2.0 l_0_3_64) l_0_3_73))))
 (let ((?x6516 (- (- ?x6512 (* (* 2.0 l_0_3_65) l_0_3_74)) (* (* 2.0 l_0_3_66) l_0_3_75))))
 (= ?x6516 0.0))))))
(assert
 (let ((?x6567 (- (* (* (- 2.0) l_0_3_106) l_0_3_91) (* (* 2.0 l_0_3_107) l_0_3_92))))
 (let ((?x6572 (- (- ?x6567 (* (* 2.0 l_0_3_108) l_0_3_93)) (* (* 2.0 l_0_3_109) l_0_3_94))))
 (let ((?x6576 (- (- ?x6572 (* (* 2.0 l_0_3_63) l_0_3_78)) (* (* 2.0 l_0_3_64) l_0_3_79))))
 (let ((?x6580 (- (- ?x6576 (* (* 2.0 l_0_3_65) l_0_3_80)) (* (* 2.0 l_0_3_66) l_0_3_81))))
 (= ?x6580 0.0))))))
(assert
 (let ((?x6651 (* l_0_3_99 l_0_3_99)))
 (let ((?x6649 (* l_0_3_98 l_0_3_98)))
 (let ((?x6647 (* l_0_3_97 l_0_3_97)))
 (let ((?x6645 (* l_0_3_96 l_0_3_96)))
 (let ((?x6643 (* l_0_3_95 l_0_3_95)))
 (let ((?x6633 (- (* (* (- 1.0) l_0_3_67) l_0_3_67) (* (* 1.0 l_0_3_68) l_0_3_68))))
 (let ((?x6639 (- (- ?x6633 (* (* 1.0 l_0_3_69) l_0_3_69)) (* (* 1.0 l_0_3_70) l_0_3_70))))
 (let ((?x6648 (- (- (- (- ?x6639 (* (* 1.0 l_0_3_71) l_0_3_71)) ?x6643) ?x6645) ?x6647)))
 (= (- (- ?x6648 ?x6649) ?x6651) 0.0))))))))))
(assert
 (let ((?x6690 (- (* (* (- 2.0) l_0_3_100) l_0_3_95) (* (* 2.0 l_0_3_101) l_0_3_96))))
 (let ((?x6694 (- (- ?x6690 (* (* 2.0 l_0_3_102) l_0_3_97)) (* (* 2.0 l_0_3_103) l_0_3_98))))
 (let ((?x6700 (- (- ?x6694 (* (* 2.0 l_0_3_104) l_0_3_99)) (* (* 2.0 l_0_3_67) l_0_3_72))))
 (let ((?x6706 (- (- ?x6700 (* (* 2.0 l_0_3_68) l_0_3_73)) (* (* 2.0 l_0_3_69) l_0_3_74))))
 (let ((?x6712 (- (- ?x6706 (* (* 2.0 l_0_3_70) l_0_3_75)) (* (* 2.0 l_0_3_71) l_0_3_76))))
 (= ?x6712 0.0)))))))
(assert
 (let ((?x6775 (- (* (* (- 2.0) l_0_3_106) l_0_3_95) (* (* 2.0 l_0_3_107) l_0_3_96))))
 (let ((?x6779 (- (- ?x6775 (* (* 2.0 l_0_3_108) l_0_3_97)) (* (* 2.0 l_0_3_109) l_0_3_98))))
 (let ((?x6784 (- (- ?x6779 (* (* 2.0 l_0_3_110) l_0_3_99)) (* (* 2.0 l_0_3_67) l_0_3_78))))
 (let ((?x6788 (- (- ?x6784 (* (* 2.0 l_0_3_68) l_0_3_79)) (* (* 2.0 l_0_3_69) l_0_3_80))))
 (let ((?x6792 (- (- ?x6788 (* (* 2.0 l_0_3_70) l_0_3_81)) (* (* 2.0 l_0_3_71) l_0_3_82))))
 (= ?x6792 0.0)))))))
(assert
 (let ((?x6863 (* l_0_3_105 l_0_3_105)))
 (let ((?x6861 (* l_0_3_104 l_0_3_104)))
 (let ((?x6859 (* l_0_3_103 l_0_3_103)))
 (let ((?x6857 (* l_0_3_102 l_0_3_102)))
 (let ((?x6858 (- (- (* (- l_0_3_100) l_0_3_100) (* l_0_3_101 l_0_3_101)) ?x6857)))
 (let ((?x6867 (- (- (- (- ?x6858 ?x6859) ?x6861) ?x6863) (* (* 1.0 l_0_3_72) l_0_3_72))))
 (let ((?x6873 (- (- ?x6867 (* (* 1.0 l_0_3_73) l_0_3_73)) (* (* 1.0 l_0_3_74) l_0_3_74))))
 (let ((?x6879 (- (- ?x6873 (* (* 1.0 l_0_3_75) l_0_3_75)) (* (* 1.0 l_0_3_76) l_0_3_76))))
 (= (- ?x6879 (* (* 1.0 l_0_3_77) l_0_3_77)) 0.0))))))))))
(assert
 (let ((?x6930 (- (* (* (- 2.0) l_0_3_100) l_0_3_106) (* (* 2.0 l_0_3_101) l_0_3_107))))
 (let ((?x6934 (- (- ?x6930 (* (* 2.0 l_0_3_102) l_0_3_108)) (* (* 2.0 l_0_3_103) l_0_3_109))))
 (let ((?x6939 (- (- ?x6934 (* (* 2.0 l_0_3_104) l_0_3_110)) (* (* 2.0 l_0_3_105) l_0_3_111))))
 (let ((?x6945 (- (- ?x6939 (* (* 2.0 l_0_3_72) l_0_3_78)) (* (* 2.0 l_0_3_73) l_0_3_79))))
 (let ((?x6951 (- (- ?x6945 (* (* 2.0 l_0_3_74) l_0_3_80)) (* (* 2.0 l_0_3_75) l_0_3_81))))
 (let ((?x6957 (- (- ?x6951 (* (* 2.0 l_0_3_76) l_0_3_82)) (* (* 2.0 l_0_3_77) l_0_3_83))))
 (= ?x6957 0.0))))))))
(assert
 (let ((?x7042 (* l_0_3_112 l_0_3_112)))
 (let ((?x7040 (* l_0_3_111 l_0_3_111)))
 (let ((?x7038 (* l_0_3_110 l_0_3_110)))
 (let ((?x7036 (* l_0_3_109 l_0_3_109)))
 (let ((?x7034 (* l_0_3_108 l_0_3_108)))
 (let ((?x7035 (- (- (* (- l_0_3_106) l_0_3_106) (* l_0_3_107 l_0_3_107)) ?x7034)))
 (let ((?x7046 (- (- (- (- (- ?x7035 ?x7036) ?x7038) ?x7040) ?x7042) (* (* 1.0 l_0_3_78) l_0_3_78))))
 (let ((?x7052 (- (- ?x7046 (* (* 1.0 l_0_3_79) l_0_3_79)) (* (* 1.0 l_0_3_80) l_0_3_80))))
 (let ((?x7058 (- (- ?x7052 (* (* 1.0 l_0_3_81) l_0_3_81)) (* (* 1.0 l_0_3_82) l_0_3_82))))
 (let ((?x7064 (- (- ?x7058 (* (* 1.0 l_0_3_83) l_0_3_83)) (* (* 1.0 l_0_3_84) l_0_3_84))))
 (= ?x7064 0.0))))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_28 0.0))
(assert
 (>= l_0_3_29 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_34 0.0))
(assert
 (>= l_0_3_38 0.0))
(assert
 (>= l_0_3_43 0.0))
(assert
 (>= l_0_3_49 0.0))
(assert
 (>= l_0_3_56 0.0))
(assert
 (>= l_0_3_57 0.0))
(assert
 (>= l_0_3_59 0.0))
(assert
 (>= l_0_3_62 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_71 0.0))
(assert
 (>= l_0_3_77 0.0))
(assert
 (>= l_0_3_84 0.0))
(assert
 (>= l_0_3_85 0.0))
(assert
 (>= l_0_3_87 0.0))
(assert
 (>= l_0_3_90 0.0))
(assert
 (>= l_0_3_94 0.0))
(assert
 (>= l_0_3_99 0.0))
(assert
 (>= l_0_3_105 0.0))
(assert
 (>= l_0_3_112 0.0))
(assert
 (let ((?x7150 (- (- _a_3_ (* (* 2.0 l_0_4_113) l_0_4_114)) (* (* 2.0 l_0_4_57) l_0_4_58))))
 (= (- ?x7150 (* (* 2.0 l_0_4_85) l_0_4_86)) 0.0)))
(assert
 (let ((?x7179 (- (- _a_4_ (* (* 2.0 l_0_4_114) l_0_4_123)) (* (* 2.0 l_0_4_115) l_0_4_124))))
 (let ((?x7185 (- (- ?x7179 (* (* 2.0 l_0_4_58) l_0_4_67)) (* (* 2.0 l_0_4_59) l_0_4_68))))
 (let ((?x7191 (- (- ?x7185 (* (* 2.0 l_0_4_86) l_0_4_95)) (* (* 2.0 l_0_4_87) l_0_4_96))))
 (= (- ?x7191 1.0) 0.0)))))
(assert
 (let ((?x7245 (* l_0_4_29 l_0_4_29)))
 (let ((?x7237 (- (+ _a_5_ (* l_0_4_1 l_0_4_1)) (* (* 2.0 l_0_4_106) l_0_4_86))))
 (let ((?x7242 (- (- ?x7237 (* (* 2.0 l_0_4_107) l_0_4_87)) (* (* 2.0 l_0_4_114) l_0_4_134))))
 (let ((?x7248 (- (- (- ?x7242 (* (* 2.0 l_0_4_115) l_0_4_135)) ?x7245) (* (* 2.0 l_0_4_58) l_0_4_78))))
 (= (- ?x7248 (* (* 2.0 l_0_4_59) l_0_4_79)) 0.0))))))
(assert
 (let ((?x7245 (* l_0_4_29 l_0_4_29)))
 (let ((?x7297 (- (- (* l_0_4_1 l_0_4_1) (* (* 2.0 l_0_4_119) l_0_4_123)) (* (* 2.0 l_0_4_120) l_0_4_124))))
 (let ((?x7303 (- (- ?x7297 (* (* 2.0 l_0_4_121) l_0_4_125)) (* (* 2.0 l_0_4_122) l_0_4_126))))
 (let ((?x7310 (- (- (- ?x7303 ?x7245) (* (* 2.0 l_0_4_63) l_0_4_67)) (* (* 2.0 l_0_4_64) l_0_4_68))))
 (let ((?x7316 (- (- ?x7310 (* (* 2.0 l_0_4_65) l_0_4_69)) (* (* 2.0 l_0_4_66) l_0_4_70))))
 (let ((?x7322 (- (- ?x7316 (* (* 2.0 l_0_4_91) l_0_4_95)) (* (* 2.0 l_0_4_92) l_0_4_96))))
 (let ((?x7328 (- (- ?x7322 (* (* 2.0 l_0_4_93) l_0_4_97)) (* (* 2.0 l_0_4_94) l_0_4_98))))
 (= (+ ?x7328 1.0) 0.0)))))))))
(assert
 (let ((?x7245 (* l_0_4_29 l_0_4_29)))
 (let ((?x7413 (- (- (* (- l_0_4_1) l_0_4_1) (* (* 2.0 l_0_4_100) l_0_4_88)) (* (* 2.0 l_0_4_101) l_0_4_89))))
 (let ((?x7419 (- (- ?x7413 (* (* 2.0 l_0_4_102) l_0_4_90)) (* (* 2.0 l_0_4_116) l_0_4_128))))
 (let ((?x7425 (- (- ?x7419 (* (* 2.0 l_0_4_117) l_0_4_129)) (* (* 2.0 l_0_4_118) l_0_4_130))))
 (let ((?x7432 (- (- (+ ?x7425 ?x7245) (* (* 2.0 l_0_4_60) l_0_4_72)) (* (* 2.0 l_0_4_61) l_0_4_73))))
 (= (- (- ?x7432 (* (* 2.0 l_0_4_62) l_0_4_74)) 1.0) 0.0)))))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7502 (* ?x7501 l_0_4_30)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) ?x7502) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7508 (* ?x7501 l_0_4_32)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x7508) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7518 (* ?x7501 l_0_4_35)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) ?x7518) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7528 (* ?x7501 l_0_4_39)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) ?x7528) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7538 (* ?x7501 l_0_4_44)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_16) ?x7538) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7548 (* ?x7501 l_0_4_50)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_22) ?x7548) 0.0))))
(assert
 (let ((?x7567 (* l_0_4_31 l_0_4_31)))
 (let ((?x7565 (* l_0_4_30 l_0_4_30)))
 (let ((?x7568 (+ (+ (- (* (- l_0_4_2) l_0_4_2) (* l_0_4_3 l_0_4_3)) ?x7565) ?x7567)))
 (= ?x7568 0.0)))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7589 (* ?x7588 l_0_4_33)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7586 (* ?x7585 l_0_4_32)))
 (let ((?x7582 (* 2.0 l_0_4_3)))
 (let ((?x7583 (* ?x7582 l_0_4_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_2) l_0_4_4) ?x7583) ?x7586) ?x7589) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7612 (* ?x7588 l_0_4_36)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7610 (* ?x7585 l_0_4_35)))
 (let ((?x7582 (* 2.0 l_0_4_3)))
 (let ((?x7603 (* ?x7582 l_0_4_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_2) l_0_4_7) ?x7603) ?x7610) ?x7612) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7637 (* ?x7588 l_0_4_40)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7635 (* ?x7585 l_0_4_39)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x7633 (* ?x7627 l_0_4_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x7633) ?x7635) ?x7637) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7662 (* ?x7588 l_0_4_45)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7660 (* ?x7585 l_0_4_44)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x7658 (* ?x7652 l_0_4_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_16) l_0_4_2) ?x7658) ?x7660) ?x7662) 0.0))))))))
(assert
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7704 (* ?x7703 l_0_4_46)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7701 (* ?x7700 l_0_4_45)))
 (let ((?x7697 (* 2.0 l_0_4_32)))
 (let ((?x7698 (* ?x7697 l_0_4_44)))
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7695 (* ?x7588 l_0_4_51)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7693 (* ?x7585 l_0_4_50)))
 (let ((?x7690 (* 2.0 l_0_4_23)))
 (let ((?x7691 (* ?x7690 l_0_4_3)))
 (let ((?x7687 (* 2.0 l_0_4_2)))
 (let ((?x7688 (* ?x7687 l_0_4_22)))
 (let ((?x7684 (* 2.0 l_0_4_18)))
 (let ((?x7685 (* ?x7684 l_0_4_6)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x7677 (* ?x7652 l_0_4_5)))
 (let ((?x7674 (* 2.0 l_0_4_16)))
 (let ((?x7676 (* ?x7674 l_0_4_4)))
 (let ((?x7699 (- (+ (+ (- (- (+ (+ ?x7676 ?x7677) ?x7685) ?x7688) ?x7691) ?x7693) ?x7695) ?x7698)))
 (= (- (- ?x7699 ?x7701) ?x7704) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7759 (* l_0_4_6 l_0_4_6)))
 (let ((?x7757 (* l_0_4_5 l_0_4_5)))
 (let ((?x7755 (* l_0_4_4 l_0_4_4)))
 (let ((?x7753 (* l_0_4_34 l_0_4_34)))
 (let ((?x7756 (- (+ (+ (* l_0_4_32 l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x7753) ?x7755)))
 (= (- (- ?x7756 ?x7757) ?x7759) 0.0)))))))
(assert
 (let ((?x7785 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x7782 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x7779 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7776 (* ?x7703 l_0_4_37)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7774 (* ?x7700 l_0_4_36)))
 (let ((?x7783 (- (- (+ (+ (* (* 2.0 l_0_4_32) l_0_4_35) ?x7774) ?x7776) ?x7779) ?x7782)))
 (= (- ?x7783 ?x7785) 0.0))))))))))
(assert
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7824 (* ?x7703 l_0_4_41)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7822 (* ?x7700 l_0_4_40)))
 (let ((?x7697 (* 2.0 l_0_4_32)))
 (let ((?x7820 (* ?x7697 l_0_4_39)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x7818 (* ?x7817 l_0_4_6)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x7815 (* ?x7627 l_0_4_5)))
 (let ((?x7823 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x7815) ?x7818) ?x7820) ?x7822)))
 (= (+ ?x7823 ?x7824) 0.0)))))))))))))
(assert
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7704 (* ?x7703 l_0_4_46)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7701 (* ?x7700 l_0_4_45)))
 (let ((?x7697 (* 2.0 l_0_4_32)))
 (let ((?x7698 (* ?x7697 l_0_4_44)))
 (let ((?x7684 (* 2.0 l_0_4_18)))
 (let ((?x7685 (* ?x7684 l_0_4_6)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x7677 (* ?x7652 l_0_4_5)))
 (let ((?x7854 (+ (+ (- (- (* (* (- 2.0) l_0_4_16) l_0_4_4) ?x7677) ?x7685) ?x7698) ?x7701)))
 (= (+ ?x7854 ?x7704) 0.0)))))))))))))
(assert
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7879 (* ?x7703 l_0_4_52)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7877 (* ?x7700 l_0_4_51)))
 (let ((?x7697 (* 2.0 l_0_4_32)))
 (let ((?x7875 (* ?x7697 l_0_4_50)))
 (let ((?x7872 (* 2.0 l_0_4_24)))
 (let ((?x7873 (* ?x7872 l_0_4_6)))
 (let ((?x7690 (* 2.0 l_0_4_23)))
 (let ((?x7870 (* ?x7690 l_0_4_5)))
 (let ((?x7878 (+ (+ (- (- (* (* (- 2.0) l_0_4_22) l_0_4_4) ?x7870) ?x7873) ?x7875) ?x7877)))
 (= (+ ?x7878 ?x7879) 0.0)))))))))))))
(assert
 (let ((?x7919 (* l_0_4_9 l_0_4_9)))
 (let ((?x7917 (* l_0_4_8 l_0_4_8)))
 (let ((?x7915 (* l_0_4_7 l_0_4_7)))
 (let ((?x7913 (* l_0_4_38 l_0_4_38)))
 (let ((?x7911 (* l_0_4_37 l_0_4_37)))
 (let ((?x7909 (* l_0_4_36 l_0_4_36)))
 (let ((?x7912 (+ (+ (+ (* (- l_0_4_10) l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x7909) ?x7911)))
 (= (- (- (- (+ ?x7912 ?x7913) ?x7915) ?x7917) ?x7919) 0.0)))))))))
(assert
 (let ((?x7960 (* 2.0 l_0_4_38)))
 (let ((?x7961 (* ?x7960 l_0_4_42)))
 (let ((?x7957 (* 2.0 l_0_4_37)))
 (let ((?x7958 (* ?x7957 l_0_4_41)))
 (let ((?x7954 (* 2.0 l_0_4_36)))
 (let ((?x7955 (* ?x7954 l_0_4_40)))
 (let ((?x7951 (* 2.0 l_0_4_35)))
 (let ((?x7952 (* ?x7951 l_0_4_39)))
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7704 (* ?x7703 l_0_4_46)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7701 (* ?x7700 l_0_4_45)))
 (let ((?x7697 (* 2.0 l_0_4_32)))
 (let ((?x7698 (* ?x7697 l_0_4_44)))
 (let ((?x7684 (* 2.0 l_0_4_18)))
 (let ((?x7685 (* ?x7684 l_0_4_6)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x7677 (* ?x7652 l_0_4_5)))
 (let ((?x7674 (* 2.0 l_0_4_16)))
 (let ((?x7676 (* ?x7674 l_0_4_4)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x7943 (* ?x7817 l_0_4_9)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x7941 (* ?x7627 l_0_4_8)))
 (let ((?x7938 (* 2.0 l_0_4_11)))
 (let ((?x7939 (* ?x7938 l_0_4_7)))
 (let ((?x7945 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x7939) ?x7941) ?x7943) ?x7676)))
 (let ((?x7956 (+ (+ (- (- (- (+ (+ ?x7945 ?x7677) ?x7685) ?x7698) ?x7701) ?x7704) ?x7952) ?x7955)))
 (= (+ (+ ?x7956 ?x7958) ?x7961) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x7960 (* 2.0 l_0_4_38)))
 (let ((?x8014 (* ?x7960 l_0_4_47)))
 (let ((?x7957 (* 2.0 l_0_4_37)))
 (let ((?x8012 (* ?x7957 l_0_4_46)))
 (let ((?x7954 (* 2.0 l_0_4_36)))
 (let ((?x8010 (* ?x7954 l_0_4_45)))
 (let ((?x7951 (* 2.0 l_0_4_35)))
 (let ((?x8008 (* ?x7951 l_0_4_44)))
 (let ((?x7684 (* 2.0 l_0_4_18)))
 (let ((?x8006 (* ?x7684 l_0_4_9)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x8004 (* ?x7652 l_0_4_8)))
 (let ((?x7674 (* 2.0 l_0_4_16)))
 (let ((?x8002 (* ?x7674 l_0_4_7)))
 (let ((?x8009 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_19) ?x8002) ?x8004) ?x8006) ?x8008)))
 (= (+ (+ (+ ?x8009 ?x8010) ?x8012) ?x8014) 0.0)))))))))))))))))
(assert
 (let ((?x7960 (* 2.0 l_0_4_38)))
 (let ((?x8062 (* ?x7960 l_0_4_53)))
 (let ((?x7957 (* 2.0 l_0_4_37)))
 (let ((?x8060 (* ?x7957 l_0_4_52)))
 (let ((?x7954 (* 2.0 l_0_4_36)))
 (let ((?x8058 (* ?x7954 l_0_4_51)))
 (let ((?x7951 (* 2.0 l_0_4_35)))
 (let ((?x8056 (* ?x7951 l_0_4_50)))
 (let ((?x7872 (* 2.0 l_0_4_24)))
 (let ((?x8054 (* ?x7872 l_0_4_9)))
 (let ((?x7690 (* 2.0 l_0_4_23)))
 (let ((?x8045 (* ?x7690 l_0_4_8)))
 (let ((?x8040 (* 2.0 l_0_4_22)))
 (let ((?x8042 (* ?x8040 l_0_4_7)))
 (let ((?x8057 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_25) ?x8042) ?x8045) ?x8054) ?x8056)))
 (= (+ (+ (+ ?x8057 ?x8058) ?x8060) ?x8062) 0.0)))))))))))))))))
(assert
 (let ((?x8114 (* l_0_4_43 l_0_4_43)))
 (let ((?x8112 (* l_0_4_42 l_0_4_42)))
 (let ((?x8110 (* l_0_4_41 l_0_4_41)))
 (let ((?x8108 (* l_0_4_40 l_0_4_40)))
 (let ((?x8106 (* l_0_4_39 l_0_4_39)))
 (let ((?x8104 (* l_0_4_15 l_0_4_15)))
 (let ((?x8102 (* l_0_4_14 l_0_4_14)))
 (let ((?x8093 (* l_0_4_13 l_0_4_13)))
 (let ((?x8103 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x8093) ?x8102)))
 (= (+ (+ (+ (+ (+ (- ?x8103 ?x8104) ?x8106) ?x8108) ?x8110) ?x8112) ?x8114) 0.0)))))))))))
(assert
 (let ((?x8162 (* 2.0 l_0_4_43)))
 (let ((?x8163 (* ?x8162 l_0_4_48)))
 (let ((?x8159 (* 2.0 l_0_4_42)))
 (let ((?x8160 (* ?x8159 l_0_4_47)))
 (let ((?x8156 (* 2.0 l_0_4_41)))
 (let ((?x8157 (* ?x8156 l_0_4_46)))
 (let ((?x8153 (* 2.0 l_0_4_40)))
 (let ((?x8154 (* ?x8153 l_0_4_45)))
 (let ((?x8150 (* 2.0 l_0_4_39)))
 (let ((?x8151 (* ?x8150 l_0_4_44)))
 (let ((?x8147 (* 2.0 l_0_4_15)))
 (let ((?x8148 (* ?x8147 l_0_4_20)))
 (let ((?x8144 (* 2.0 l_0_4_14)))
 (let ((?x8145 (* ?x8144 l_0_4_19)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x8142 (* ?x7817 l_0_4_18)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x8140 (* ?x7627 l_0_4_17)))
 (let ((?x8149 (- (- (- (- (* (* (- 2.0) l_0_4_11) l_0_4_16) ?x8140) ?x8142) ?x8145) ?x8148)))
 (= (+ (+ (+ (+ (+ ?x8149 ?x8151) ?x8154) ?x8157) ?x8160) ?x8163) 0.0)))))))))))))))))))))
(assert
 (let ((?x8162 (* 2.0 l_0_4_43)))
 (let ((?x8222 (* ?x8162 l_0_4_54)))
 (let ((?x8159 (* 2.0 l_0_4_42)))
 (let ((?x8220 (* ?x8159 l_0_4_53)))
 (let ((?x8156 (* 2.0 l_0_4_41)))
 (let ((?x8218 (* ?x8156 l_0_4_52)))
 (let ((?x8153 (* 2.0 l_0_4_40)))
 (let ((?x8216 (* ?x8153 l_0_4_51)))
 (let ((?x8150 (* 2.0 l_0_4_39)))
 (let ((?x8214 (* ?x8150 l_0_4_50)))
 (let ((?x8147 (* 2.0 l_0_4_15)))
 (let ((?x8212 (* ?x8147 l_0_4_26)))
 (let ((?x8144 (* 2.0 l_0_4_14)))
 (let ((?x8202 (* ?x8144 l_0_4_25)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x8199 (* ?x7817 l_0_4_24)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x8195 (* ?x7627 l_0_4_23)))
 (let ((?x8213 (- (- (- (- (* (* (- 2.0) l_0_4_11) l_0_4_22) ?x8195) ?x8199) ?x8202) ?x8212)))
 (= (+ (+ (+ (+ (+ ?x8213 ?x8214) ?x8216) ?x8218) ?x8220) ?x8222) 0.0)))))))))))))))))))))
(assert
 (let ((?x8286 (* l_0_4_49 l_0_4_49)))
 (let ((?x8284 (* l_0_4_48 l_0_4_48)))
 (let ((?x8282 (* l_0_4_47 l_0_4_47)))
 (let ((?x8280 (* l_0_4_46 l_0_4_46)))
 (let ((?x8278 (* l_0_4_45 l_0_4_45)))
 (let ((?x8276 (* l_0_4_44 l_0_4_44)))
 (let ((?x8274 (* l_0_4_21 l_0_4_21)))
 (let ((?x8272 (* l_0_4_20 l_0_4_20)))
 (let ((?x8270 (* l_0_4_19 l_0_4_19)))
 (let ((?x8260 (* l_0_4_18 l_0_4_18)))
 (let ((?x8271 (- (- (- (* (- l_0_4_16) l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x8260) ?x8270)))
 (let ((?x8285 (+ (+ (+ (+ (+ (- (- ?x8271 ?x8272) ?x8274) ?x8276) ?x8278) ?x8280) ?x8282) ?x8284)))
 (= (+ ?x8285 ?x8286) 0.0))))))))))))))
(assert
 (let ((?x8345 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x8342 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x8339 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x8336 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x8333 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x8330 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x8327 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x8324 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x8321 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x7684 (* 2.0 l_0_4_18)))
 (let ((?x8318 (* ?x7684 l_0_4_24)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x8316 (* ?x7652 l_0_4_23)))
 (let ((?x8325 (- (- (- (- (* (* (- 2.0) l_0_4_16) l_0_4_22) ?x8316) ?x8318) ?x8321) ?x8324)))
 (let ((?x8346 (+ (+ (+ (+ (+ (+ (- ?x8325 ?x8327) ?x8330) ?x8333) ?x8336) ?x8339) ?x8342) ?x8345)))
 (= ?x8346 0.0)))))))))))))))))
(assert
 (let ((?x8421 (* l_0_4_56 l_0_4_56)))
 (let ((?x8419 (* l_0_4_55 l_0_4_55)))
 (let ((?x8417 (* l_0_4_54 l_0_4_54)))
 (let ((?x8415 (* l_0_4_53 l_0_4_53)))
 (let ((?x8413 (* l_0_4_52 l_0_4_52)))
 (let ((?x8411 (* l_0_4_51 l_0_4_51)))
 (let ((?x8409 (* l_0_4_50 l_0_4_50)))
 (let ((?x8407 (* l_0_4_28 l_0_4_28)))
 (let ((?x8405 (* l_0_4_27 l_0_4_27)))
 (let ((?x8403 (* l_0_4_26 l_0_4_26)))
 (let ((?x8392 (* l_0_4_25 l_0_4_25)))
 (let ((?x8389 (* l_0_4_24 l_0_4_24)))
 (let ((?x8402 (- (- (- (* (- l_0_4_22) l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x8389) ?x8392)))
 (let ((?x8416 (+ (+ (+ (+ (- (- (- ?x8402 ?x8403) ?x8405) ?x8407) ?x8409) ?x8411) ?x8413) ?x8415)))
 (= (+ (+ (+ ?x8416 ?x8417) ?x8419) ?x8421) 0.0))))))))))))))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7502 (* ?x7501 l_0_4_30)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_2) ?x7502) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7508 (* ?x7501 l_0_4_32)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_4) ?x7508) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7518 (* ?x7501 l_0_4_35)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x7518) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7528 (* ?x7501 l_0_4_39)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_11) ?x7528) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7538 (* ?x7501 l_0_4_44)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_16) ?x7538) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7548 (* ?x7501 l_0_4_50)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_22) ?x7548) 0.0))))
(assert
 (let ((?x7567 (* l_0_4_31 l_0_4_31)))
 (let ((?x7565 (* l_0_4_30 l_0_4_30)))
 (= (- (- (+ (* l_0_4_2 l_0_4_2) (* l_0_4_3 l_0_4_3)) ?x7565) ?x7567) 0.0))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7589 (* ?x7588 l_0_4_33)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7586 (* ?x7585 l_0_4_32)))
 (let ((?x7582 (* 2.0 l_0_4_3)))
 (let ((?x7583 (* ?x7582 l_0_4_5)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_4) ?x7583) ?x7586) ?x7589) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7612 (* ?x7588 l_0_4_36)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7610 (* ?x7585 l_0_4_35)))
 (let ((?x7582 (* 2.0 l_0_4_3)))
 (let ((?x7603 (* ?x7582 l_0_4_8)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_7) ?x7603) ?x7610) ?x7612) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7637 (* ?x7588 l_0_4_40)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7635 (* ?x7585 l_0_4_39)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x7633 (* ?x7627 l_0_4_3)))
 (= (- (- (+ (* (* 2.0 l_0_4_11) l_0_4_2) ?x7633) ?x7635) ?x7637) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7662 (* ?x7588 l_0_4_45)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7660 (* ?x7585 l_0_4_44)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x7658 (* ?x7652 l_0_4_3)))
 (= (- (- (+ (* (* 2.0 l_0_4_16) l_0_4_2) ?x7658) ?x7660) ?x7662) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7695 (* ?x7588 l_0_4_51)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7693 (* ?x7585 l_0_4_50)))
 (let ((?x7690 (* 2.0 l_0_4_23)))
 (let ((?x7691 (* ?x7690 l_0_4_3)))
 (let ((?x7687 (* 2.0 l_0_4_2)))
 (let ((?x7688 (* ?x7687 l_0_4_22)))
 (= (- (- (+ ?x7688 ?x7691) ?x7693) ?x7695) 0.0))))))))))
(assert
 (let ((?x7759 (* l_0_4_6 l_0_4_6)))
 (let ((?x7757 (* l_0_4_5 l_0_4_5)))
 (let ((?x7755 (* l_0_4_4 l_0_4_4)))
 (let ((?x7753 (* l_0_4_34 l_0_4_34)))
 (let ((?x8569 (+ (- (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x7753) ?x7755)))
 (= (+ (+ ?x8569 ?x7757) ?x7759) 0.0)))))))
(assert
 (let ((?x7785 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x7782 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x7779 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7776 (* ?x7703 l_0_4_37)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7774 (* ?x7700 l_0_4_36)))
 (let ((?x8585 (+ (+ (- (- (* (* (- 2.0) l_0_4_32) l_0_4_35) ?x7774) ?x7776) ?x7779) ?x7782)))
 (= (+ ?x8585 ?x7785) 0.0))))))))))
(assert
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7824 (* ?x7703 l_0_4_41)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7822 (* ?x7700 l_0_4_40)))
 (let ((?x7697 (* 2.0 l_0_4_32)))
 (let ((?x7820 (* ?x7697 l_0_4_39)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x7818 (* ?x7817 l_0_4_6)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x7815 (* ?x7627 l_0_4_5)))
 (let ((?x8601 (- (- (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x7815) ?x7818) ?x7820) ?x7822)))
 (= (- ?x8601 ?x7824) 0.0)))))))))))))
(assert
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7879 (* ?x7703 l_0_4_52)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7877 (* ?x7700 l_0_4_51)))
 (let ((?x7697 (* 2.0 l_0_4_32)))
 (let ((?x7875 (* ?x7697 l_0_4_50)))
 (let ((?x7872 (* 2.0 l_0_4_24)))
 (let ((?x7873 (* ?x7872 l_0_4_6)))
 (let ((?x7690 (* 2.0 l_0_4_23)))
 (let ((?x7870 (* ?x7690 l_0_4_5)))
 (let ((?x8620 (- (- (+ (+ (* (* 2.0 l_0_4_22) l_0_4_4) ?x7870) ?x7873) ?x7875) ?x7877)))
 (= (- ?x8620 ?x7879) 0.0)))))))))))))
(assert
 (let ((?x7919 (* l_0_4_9 l_0_4_9)))
 (let ((?x7917 (* l_0_4_8 l_0_4_8)))
 (let ((?x7915 (* l_0_4_7 l_0_4_7)))
 (let ((?x7913 (* l_0_4_38 l_0_4_38)))
 (let ((?x7911 (* l_0_4_37 l_0_4_37)))
 (let ((?x7909 (* l_0_4_36 l_0_4_36)))
 (let ((?x8637 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x7909) ?x7911)))
 (= (+ (+ (+ (- ?x8637 ?x7913) ?x7915) ?x7917) ?x7919) 0.0)))))))))
(assert
 (let ((?x7960 (* 2.0 l_0_4_38)))
 (let ((?x7961 (* ?x7960 l_0_4_42)))
 (let ((?x7957 (* 2.0 l_0_4_37)))
 (let ((?x7958 (* ?x7957 l_0_4_41)))
 (let ((?x7954 (* 2.0 l_0_4_36)))
 (let ((?x7955 (* ?x7954 l_0_4_40)))
 (let ((?x7951 (* 2.0 l_0_4_35)))
 (let ((?x7952 (* ?x7951 l_0_4_39)))
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7695 (* ?x7588 l_0_4_51)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7693 (* ?x7585 l_0_4_50)))
 (let ((?x7690 (* 2.0 l_0_4_23)))
 (let ((?x7691 (* ?x7690 l_0_4_3)))
 (let ((?x7687 (* 2.0 l_0_4_2)))
 (let ((?x7688 (* ?x7687 l_0_4_22)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x7943 (* ?x7817 l_0_4_9)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x7941 (* ?x7627 l_0_4_8)))
 (let ((?x7938 (* 2.0 l_0_4_11)))
 (let ((?x7939 (* ?x7938 l_0_4_7)))
 (let ((?x8659 (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x7939) ?x7941) ?x7943)))
 (let ((?x8666 (- (- (- (- (- (+ (+ ?x8659 ?x7688) ?x7691) ?x7693) ?x7695) ?x7952) ?x7955) ?x7958)))
 (= (- ?x8666 ?x7961) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7960 (* 2.0 l_0_4_38)))
 (let ((?x8014 (* ?x7960 l_0_4_47)))
 (let ((?x7957 (* 2.0 l_0_4_37)))
 (let ((?x8012 (* ?x7957 l_0_4_46)))
 (let ((?x7954 (* 2.0 l_0_4_36)))
 (let ((?x8010 (* ?x7954 l_0_4_45)))
 (let ((?x7951 (* 2.0 l_0_4_35)))
 (let ((?x8008 (* ?x7951 l_0_4_44)))
 (let ((?x7684 (* 2.0 l_0_4_18)))
 (let ((?x8006 (* ?x7684 l_0_4_9)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x8004 (* ?x7652 l_0_4_8)))
 (let ((?x7674 (* 2.0 l_0_4_16)))
 (let ((?x8002 (* ?x7674 l_0_4_7)))
 (let ((?x8696 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_19) ?x8002) ?x8004) ?x8006) ?x8008)))
 (= (- (- (- ?x8696 ?x8010) ?x8012) ?x8014) 0.0)))))))))))))))))
(assert
 (let ((?x7960 (* 2.0 l_0_4_38)))
 (let ((?x8062 (* ?x7960 l_0_4_53)))
 (let ((?x7957 (* 2.0 l_0_4_37)))
 (let ((?x8060 (* ?x7957 l_0_4_52)))
 (let ((?x7954 (* 2.0 l_0_4_36)))
 (let ((?x8058 (* ?x7954 l_0_4_51)))
 (let ((?x7951 (* 2.0 l_0_4_35)))
 (let ((?x8056 (* ?x7951 l_0_4_50)))
 (let ((?x7872 (* 2.0 l_0_4_24)))
 (let ((?x8054 (* ?x7872 l_0_4_9)))
 (let ((?x7690 (* 2.0 l_0_4_23)))
 (let ((?x8045 (* ?x7690 l_0_4_8)))
 (let ((?x8040 (* 2.0 l_0_4_22)))
 (let ((?x8042 (* ?x8040 l_0_4_7)))
 (let ((?x8721 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_25) ?x8042) ?x8045) ?x8054) ?x8056)))
 (= (- (- (- ?x8721 ?x8058) ?x8060) ?x8062) 0.0)))))))))))))))))
(assert
 (let ((?x8114 (* l_0_4_43 l_0_4_43)))
 (let ((?x8112 (* l_0_4_42 l_0_4_42)))
 (let ((?x8110 (* l_0_4_41 l_0_4_41)))
 (let ((?x8108 (* l_0_4_40 l_0_4_40)))
 (let ((?x8106 (* l_0_4_39 l_0_4_39)))
 (let ((?x8104 (* l_0_4_15 l_0_4_15)))
 (let ((?x8102 (* l_0_4_14 l_0_4_14)))
 (let ((?x8093 (* l_0_4_13 l_0_4_13)))
 (let ((?x8744 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x8093) ?x8102)))
 (= (- (- (- (- (- (+ ?x8744 ?x8104) ?x8106) ?x8108) ?x8110) ?x8112) ?x8114) 0.0)))))))))))
(assert
 (let ((?x8162 (* 2.0 l_0_4_43)))
 (let ((?x8163 (* ?x8162 l_0_4_48)))
 (let ((?x8159 (* 2.0 l_0_4_42)))
 (let ((?x8160 (* ?x8159 l_0_4_47)))
 (let ((?x8156 (* 2.0 l_0_4_41)))
 (let ((?x8157 (* ?x8156 l_0_4_46)))
 (let ((?x8153 (* 2.0 l_0_4_40)))
 (let ((?x8154 (* ?x8153 l_0_4_45)))
 (let ((?x8150 (* 2.0 l_0_4_39)))
 (let ((?x8151 (* ?x8150 l_0_4_44)))
 (let ((?x8147 (* 2.0 l_0_4_15)))
 (let ((?x8148 (* ?x8147 l_0_4_20)))
 (let ((?x8144 (* 2.0 l_0_4_14)))
 (let ((?x8145 (* ?x8144 l_0_4_19)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x8142 (* ?x7817 l_0_4_18)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x8140 (* ?x7627 l_0_4_17)))
 (let ((?x8766 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_16) ?x8140) ?x8142) ?x8145) ?x8148)))
 (= (- (- (- (- (- ?x8766 ?x8151) ?x8154) ?x8157) ?x8160) ?x8163) 0.0)))))))))))))))))))))
(assert
 (let ((?x8162 (* 2.0 l_0_4_43)))
 (let ((?x8222 (* ?x8162 l_0_4_54)))
 (let ((?x8159 (* 2.0 l_0_4_42)))
 (let ((?x8220 (* ?x8159 l_0_4_53)))
 (let ((?x8156 (* 2.0 l_0_4_41)))
 (let ((?x8218 (* ?x8156 l_0_4_52)))
 (let ((?x8153 (* 2.0 l_0_4_40)))
 (let ((?x8216 (* ?x8153 l_0_4_51)))
 (let ((?x8150 (* 2.0 l_0_4_39)))
 (let ((?x8214 (* ?x8150 l_0_4_50)))
 (let ((?x8147 (* 2.0 l_0_4_15)))
 (let ((?x8212 (* ?x8147 l_0_4_26)))
 (let ((?x8144 (* 2.0 l_0_4_14)))
 (let ((?x8202 (* ?x8144 l_0_4_25)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x8199 (* ?x7817 l_0_4_24)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x8195 (* ?x7627 l_0_4_23)))
 (let ((?x8797 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_22) ?x8195) ?x8199) ?x8202) ?x8212)))
 (= (- (- (- (- (- ?x8797 ?x8214) ?x8216) ?x8218) ?x8220) ?x8222) 0.0)))))))))))))))))))))
(assert
 (let ((?x8286 (* l_0_4_49 l_0_4_49)))
 (let ((?x8284 (* l_0_4_48 l_0_4_48)))
 (let ((?x8282 (* l_0_4_47 l_0_4_47)))
 (let ((?x8280 (* l_0_4_46 l_0_4_46)))
 (let ((?x8278 (* l_0_4_45 l_0_4_45)))
 (let ((?x8276 (* l_0_4_44 l_0_4_44)))
 (let ((?x8274 (* l_0_4_21 l_0_4_21)))
 (let ((?x8272 (* l_0_4_20 l_0_4_20)))
 (let ((?x8270 (* l_0_4_19 l_0_4_19)))
 (let ((?x8260 (* l_0_4_18 l_0_4_18)))
 (let ((?x8826 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x8260) ?x8270)))
 (let ((?x8833 (- (- (- (- (- (+ (+ ?x8826 ?x8272) ?x8274) ?x8276) ?x8278) ?x8280) ?x8282) ?x8284)))
 (= (- ?x8833 ?x8286) 0.0))))))))))))))
(assert
 (let ((?x8345 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x8342 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x8339 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x8336 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x8333 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x8330 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x8327 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x8324 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x8321 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x7684 (* 2.0 l_0_4_18)))
 (let ((?x8318 (* ?x7684 l_0_4_24)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x8316 (* ?x7652 l_0_4_23)))
 (let ((?x8852 (+ (+ (+ (+ (* (* 2.0 l_0_4_16) l_0_4_22) ?x8316) ?x8318) ?x8321) ?x8324)))
 (let ((?x8859 (- (- (- (- (- (- (+ ?x8852 ?x8327) ?x8330) ?x8333) ?x8336) ?x8339) ?x8342) ?x8345)))
 (= ?x8859 0.0)))))))))))))))))
(assert
 (let ((?x8421 (* l_0_4_56 l_0_4_56)))
 (let ((?x8419 (* l_0_4_55 l_0_4_55)))
 (let ((?x8417 (* l_0_4_54 l_0_4_54)))
 (let ((?x8415 (* l_0_4_53 l_0_4_53)))
 (let ((?x8413 (* l_0_4_52 l_0_4_52)))
 (let ((?x8411 (* l_0_4_51 l_0_4_51)))
 (let ((?x8409 (* l_0_4_50 l_0_4_50)))
 (let ((?x8407 (* l_0_4_28 l_0_4_28)))
 (let ((?x8405 (* l_0_4_27 l_0_4_27)))
 (let ((?x8403 (* l_0_4_26 l_0_4_26)))
 (let ((?x8392 (* l_0_4_25 l_0_4_25)))
 (let ((?x8389 (* l_0_4_24 l_0_4_24)))
 (let ((?x8887 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x8389) ?x8392)))
 (let ((?x8894 (- (- (- (- (+ (+ (+ ?x8887 ?x8403) ?x8405) ?x8407) ?x8409) ?x8411) ?x8413) ?x8415)))
 (= (- (- (- ?x8894 ?x8417) ?x8419) ?x8421) 0.0))))))))))))))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7502 (* ?x7501 l_0_4_30)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_2) ?x7502) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7508 (* ?x7501 l_0_4_32)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_4) ?x7508) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7518 (* ?x7501 l_0_4_35)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x7518) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7528 (* ?x7501 l_0_4_39)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_11) ?x7528) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7538 (* ?x7501 l_0_4_44)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_16) ?x7538) 0.0))))
(assert
 (let ((?x7501 (* 2.0 l_0_4_29)))
 (let ((?x7548 (* ?x7501 l_0_4_50)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_22) ?x7548) 0.0))))
(assert
 (let ((?x7567 (* l_0_4_31 l_0_4_31)))
 (let ((?x7565 (* l_0_4_30 l_0_4_30)))
 (= (- (- (+ (* l_0_4_2 l_0_4_2) (* l_0_4_3 l_0_4_3)) ?x7565) ?x7567) 0.0))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7589 (* ?x7588 l_0_4_33)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7586 (* ?x7585 l_0_4_32)))
 (let ((?x7582 (* 2.0 l_0_4_3)))
 (let ((?x7583 (* ?x7582 l_0_4_5)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_4) ?x7583) ?x7586) ?x7589) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7612 (* ?x7588 l_0_4_36)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7610 (* ?x7585 l_0_4_35)))
 (let ((?x7582 (* 2.0 l_0_4_3)))
 (let ((?x7603 (* ?x7582 l_0_4_8)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_7) ?x7603) ?x7610) ?x7612) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7637 (* ?x7588 l_0_4_40)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7635 (* ?x7585 l_0_4_39)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x7633 (* ?x7627 l_0_4_3)))
 (= (- (- (+ (* (* 2.0 l_0_4_11) l_0_4_2) ?x7633) ?x7635) ?x7637) 0.0))))))))
(assert
 (let ((?x7588 (* 2.0 l_0_4_31)))
 (let ((?x7662 (* ?x7588 l_0_4_45)))
 (let ((?x7585 (* 2.0 l_0_4_30)))
 (let ((?x7660 (* ?x7585 l_0_4_44)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x7658 (* ?x7652 l_0_4_3)))
 (= (- (- (+ (* (* 2.0 l_0_4_16) l_0_4_2) ?x7658) ?x7660) ?x7662) 0.0))))))))
(assert
 (let ((?x7759 (* l_0_4_6 l_0_4_6)))
 (let ((?x7757 (* l_0_4_5 l_0_4_5)))
 (let ((?x7755 (* l_0_4_4 l_0_4_4)))
 (let ((?x7753 (* l_0_4_34 l_0_4_34)))
 (let ((?x8569 (+ (- (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x7753) ?x7755)))
 (= (+ (+ ?x8569 ?x7757) ?x7759) 0.0)))))))
(assert
 (let ((?x7785 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x7782 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x7779 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7776 (* ?x7703 l_0_4_37)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7774 (* ?x7700 l_0_4_36)))
 (let ((?x8585 (+ (+ (- (- (* (* (- 2.0) l_0_4_32) l_0_4_35) ?x7774) ?x7776) ?x7779) ?x7782)))
 (= (+ ?x8585 ?x7785) 0.0))))))))))
(assert
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7824 (* ?x7703 l_0_4_41)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7822 (* ?x7700 l_0_4_40)))
 (let ((?x7697 (* 2.0 l_0_4_32)))
 (let ((?x7820 (* ?x7697 l_0_4_39)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x7818 (* ?x7817 l_0_4_6)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x7815 (* ?x7627 l_0_4_5)))
 (let ((?x8601 (- (- (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x7815) ?x7818) ?x7820) ?x7822)))
 (= (- ?x8601 ?x7824) 0.0)))))))))))))
(assert
 (let ((?x7703 (* 2.0 l_0_4_34)))
 (let ((?x7879 (* ?x7703 l_0_4_52)))
 (let ((?x7700 (* 2.0 l_0_4_33)))
 (let ((?x7877 (* ?x7700 l_0_4_51)))
 (let ((?x7697 (* 2.0 l_0_4_32)))
 (let ((?x7875 (* ?x7697 l_0_4_50)))
 (let ((?x7872 (* 2.0 l_0_4_24)))
 (let ((?x7873 (* ?x7872 l_0_4_6)))
 (let ((?x7690 (* 2.0 l_0_4_23)))
 (let ((?x7870 (* ?x7690 l_0_4_5)))
 (let ((?x8620 (- (- (+ (+ (* (* 2.0 l_0_4_22) l_0_4_4) ?x7870) ?x7873) ?x7875) ?x7877)))
 (= (- ?x8620 ?x7879) 0.0)))))))))))))
(assert
 (let ((?x7919 (* l_0_4_9 l_0_4_9)))
 (let ((?x7917 (* l_0_4_8 l_0_4_8)))
 (let ((?x7915 (* l_0_4_7 l_0_4_7)))
 (let ((?x7913 (* l_0_4_38 l_0_4_38)))
 (let ((?x7911 (* l_0_4_37 l_0_4_37)))
 (let ((?x7909 (* l_0_4_36 l_0_4_36)))
 (let ((?x8637 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x7909) ?x7911)))
 (= (+ (+ (+ (- ?x8637 ?x7913) ?x7915) ?x7917) ?x7919) 0.0)))))))))
(assert
 (let ((?x7960 (* 2.0 l_0_4_38)))
 (let ((?x7961 (* ?x7960 l_0_4_42)))
 (let ((?x7957 (* 2.0 l_0_4_37)))
 (let ((?x7958 (* ?x7957 l_0_4_41)))
 (let ((?x7954 (* 2.0 l_0_4_36)))
 (let ((?x7955 (* ?x7954 l_0_4_40)))
 (let ((?x7951 (* 2.0 l_0_4_35)))
 (let ((?x7952 (* ?x7951 l_0_4_39)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x7943 (* ?x7817 l_0_4_9)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x7941 (* ?x7627 l_0_4_8)))
 (let ((?x7938 (* 2.0 l_0_4_11)))
 (let ((?x7939 (* ?x7938 l_0_4_7)))
 (let ((?x8659 (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x7939) ?x7941) ?x7943)))
 (= (- (- (- (- ?x8659 ?x7952) ?x7955) ?x7958) ?x7961) 0.0)))))))))))))))))
(assert
 (let ((?x7960 (* 2.0 l_0_4_38)))
 (let ((?x8014 (* ?x7960 l_0_4_47)))
 (let ((?x7957 (* 2.0 l_0_4_37)))
 (let ((?x8012 (* ?x7957 l_0_4_46)))
 (let ((?x7954 (* 2.0 l_0_4_36)))
 (let ((?x8010 (* ?x7954 l_0_4_45)))
 (let ((?x7951 (* 2.0 l_0_4_35)))
 (let ((?x8008 (* ?x7951 l_0_4_44)))
 (let ((?x7684 (* 2.0 l_0_4_18)))
 (let ((?x8006 (* ?x7684 l_0_4_9)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x8004 (* ?x7652 l_0_4_8)))
 (let ((?x7674 (* 2.0 l_0_4_16)))
 (let ((?x8002 (* ?x7674 l_0_4_7)))
 (let ((?x8696 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_19) ?x8002) ?x8004) ?x8006) ?x8008)))
 (= (- (- (- ?x8696 ?x8010) ?x8012) ?x8014) 0.0)))))))))))))))))
(assert
 (let ((?x7960 (* 2.0 l_0_4_38)))
 (let ((?x8062 (* ?x7960 l_0_4_53)))
 (let ((?x7957 (* 2.0 l_0_4_37)))
 (let ((?x8060 (* ?x7957 l_0_4_52)))
 (let ((?x7954 (* 2.0 l_0_4_36)))
 (let ((?x8058 (* ?x7954 l_0_4_51)))
 (let ((?x7951 (* 2.0 l_0_4_35)))
 (let ((?x8056 (* ?x7951 l_0_4_50)))
 (let ((?x7872 (* 2.0 l_0_4_24)))
 (let ((?x8054 (* ?x7872 l_0_4_9)))
 (let ((?x7690 (* 2.0 l_0_4_23)))
 (let ((?x8045 (* ?x7690 l_0_4_8)))
 (let ((?x8040 (* 2.0 l_0_4_22)))
 (let ((?x8042 (* ?x8040 l_0_4_7)))
 (let ((?x8721 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_25) ?x8042) ?x8045) ?x8054) ?x8056)))
 (= (- (- (- ?x8721 ?x8058) ?x8060) ?x8062) 0.0)))))))))))))))))
(assert
 (let ((?x8114 (* l_0_4_43 l_0_4_43)))
 (let ((?x8112 (* l_0_4_42 l_0_4_42)))
 (let ((?x8110 (* l_0_4_41 l_0_4_41)))
 (let ((?x8108 (* l_0_4_40 l_0_4_40)))
 (let ((?x8106 (* l_0_4_39 l_0_4_39)))
 (let ((?x8104 (* l_0_4_15 l_0_4_15)))
 (let ((?x8102 (* l_0_4_14 l_0_4_14)))
 (let ((?x8093 (* l_0_4_13 l_0_4_13)))
 (let ((?x8744 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x8093) ?x8102)))
 (= (- (- (- (- (- (+ ?x8744 ?x8104) ?x8106) ?x8108) ?x8110) ?x8112) ?x8114) 0.0)))))))))))
(assert
 (let ((?x8162 (* 2.0 l_0_4_43)))
 (let ((?x8163 (* ?x8162 l_0_4_48)))
 (let ((?x8159 (* 2.0 l_0_4_42)))
 (let ((?x8160 (* ?x8159 l_0_4_47)))
 (let ((?x8156 (* 2.0 l_0_4_41)))
 (let ((?x8157 (* ?x8156 l_0_4_46)))
 (let ((?x8153 (* 2.0 l_0_4_40)))
 (let ((?x8154 (* ?x8153 l_0_4_45)))
 (let ((?x8150 (* 2.0 l_0_4_39)))
 (let ((?x8151 (* ?x8150 l_0_4_44)))
 (let ((?x8147 (* 2.0 l_0_4_15)))
 (let ((?x8148 (* ?x8147 l_0_4_20)))
 (let ((?x8144 (* 2.0 l_0_4_14)))
 (let ((?x8145 (* ?x8144 l_0_4_19)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x8142 (* ?x7817 l_0_4_18)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x8140 (* ?x7627 l_0_4_17)))
 (let ((?x8766 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_16) ?x8140) ?x8142) ?x8145) ?x8148)))
 (= (- (- (- (- (- ?x8766 ?x8151) ?x8154) ?x8157) ?x8160) ?x8163) 0.0)))))))))))))))))))))
(assert
 (let ((?x8162 (* 2.0 l_0_4_43)))
 (let ((?x8222 (* ?x8162 l_0_4_54)))
 (let ((?x8159 (* 2.0 l_0_4_42)))
 (let ((?x8220 (* ?x8159 l_0_4_53)))
 (let ((?x8156 (* 2.0 l_0_4_41)))
 (let ((?x8218 (* ?x8156 l_0_4_52)))
 (let ((?x8153 (* 2.0 l_0_4_40)))
 (let ((?x8216 (* ?x8153 l_0_4_51)))
 (let ((?x8150 (* 2.0 l_0_4_39)))
 (let ((?x8214 (* ?x8150 l_0_4_50)))
 (let ((?x8147 (* 2.0 l_0_4_15)))
 (let ((?x8212 (* ?x8147 l_0_4_26)))
 (let ((?x8144 (* 2.0 l_0_4_14)))
 (let ((?x8202 (* ?x8144 l_0_4_25)))
 (let ((?x7817 (* 2.0 l_0_4_13)))
 (let ((?x8199 (* ?x7817 l_0_4_24)))
 (let ((?x7627 (* 2.0 l_0_4_12)))
 (let ((?x8195 (* ?x7627 l_0_4_23)))
 (let ((?x8797 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_22) ?x8195) ?x8199) ?x8202) ?x8212)))
 (= (- (- (- (- (- ?x8797 ?x8214) ?x8216) ?x8218) ?x8220) ?x8222) 0.0)))))))))))))))))))))
(assert
 (let ((?x8286 (* l_0_4_49 l_0_4_49)))
 (let ((?x8284 (* l_0_4_48 l_0_4_48)))
 (let ((?x8282 (* l_0_4_47 l_0_4_47)))
 (let ((?x8280 (* l_0_4_46 l_0_4_46)))
 (let ((?x8278 (* l_0_4_45 l_0_4_45)))
 (let ((?x8276 (* l_0_4_44 l_0_4_44)))
 (let ((?x8274 (* l_0_4_21 l_0_4_21)))
 (let ((?x8272 (* l_0_4_20 l_0_4_20)))
 (let ((?x8270 (* l_0_4_19 l_0_4_19)))
 (let ((?x8260 (* l_0_4_18 l_0_4_18)))
 (let ((?x8826 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x8260) ?x8270)))
 (let ((?x8833 (- (- (- (- (- (+ (+ ?x8826 ?x8272) ?x8274) ?x8276) ?x8278) ?x8280) ?x8282) ?x8284)))
 (= (- ?x8833 ?x8286) 0.0))))))))))))))
(assert
 (let ((?x8345 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x8342 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x8339 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x8336 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x8333 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x8330 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x8327 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x8324 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x8321 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x7684 (* 2.0 l_0_4_18)))
 (let ((?x8318 (* ?x7684 l_0_4_24)))
 (let ((?x7652 (* 2.0 l_0_4_17)))
 (let ((?x8316 (* ?x7652 l_0_4_23)))
 (let ((?x8852 (+ (+ (+ (+ (* (* 2.0 l_0_4_16) l_0_4_22) ?x8316) ?x8318) ?x8321) ?x8324)))
 (let ((?x8859 (- (- (- (- (- (- (+ ?x8852 ?x8327) ?x8330) ?x8333) ?x8336) ?x8339) ?x8342) ?x8345)))
 (= ?x8859 0.0)))))))))))))))))
(assert
 (let ((?x8421 (* l_0_4_56 l_0_4_56)))
 (let ((?x8419 (* l_0_4_55 l_0_4_55)))
 (let ((?x8417 (* l_0_4_54 l_0_4_54)))
 (let ((?x8415 (* l_0_4_53 l_0_4_53)))
 (let ((?x8413 (* l_0_4_52 l_0_4_52)))
 (let ((?x8411 (* l_0_4_51 l_0_4_51)))
 (let ((?x8409 (* l_0_4_50 l_0_4_50)))
 (let ((?x8407 (* l_0_4_28 l_0_4_28)))
 (let ((?x8405 (* l_0_4_27 l_0_4_27)))
 (let ((?x8403 (* l_0_4_26 l_0_4_26)))
 (let ((?x8392 (* l_0_4_25 l_0_4_25)))
 (let ((?x8389 (* l_0_4_24 l_0_4_24)))
 (let ((?x8887 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x8389) ?x8392)))
 (let ((?x8894 (- (- (- (- (+ (+ (+ ?x8887 ?x8403) ?x8405) ?x8407) ?x8409) ?x8411) ?x8413) ?x8415)))
 (= (- (- (- ?x8894 ?x8417) ?x8419) ?x8421) 0.0))))))))))))))))
(assert
 (let ((?x8933 (* l_0_4_85 l_0_4_85)))
 (let ((?x8932 (- (* (- l_0_4_113) l_0_4_113) (* (* 1.0 l_0_4_57) l_0_4_57))))
 (= (- ?x8932 ?x8933) 0.0))))
(assert
 (let ((?x8950 (- (* (* (- 2.0) l_0_4_113) l_0_4_116) (* (* 2.0 l_0_4_57) l_0_4_60))))
 (= (- ?x8950 (* (* 2.0 l_0_4_85) l_0_4_88)) 0.0)))
(assert
 (let ((?x8973 (- (* (* (- 2.0) l_0_4_113) l_0_4_119) (* (* 2.0 l_0_4_57) l_0_4_63))))
 (= (- ?x8973 (* (* 2.0 l_0_4_85) l_0_4_91)) 0.0)))
(assert
 (let ((?x8996 (- (* (* (- 2.0) l_0_4_113) l_0_4_123) (* (* 2.0 l_0_4_57) l_0_4_67))))
 (= (- ?x8996 (* (* 2.0 l_0_4_85) l_0_4_95)) 0.0)))
(assert
 (let ((?x9020 (- (* (* (- 2.0) l_0_4_100) l_0_4_85) (* (* 2.0 l_0_4_113) l_0_4_128))))
 (= (- ?x9020 (* (* 2.0 l_0_4_57) l_0_4_72)) 0.0)))
(assert
 (let ((?x9044 (- (* (* (- 2.0) l_0_4_106) l_0_4_85) (* (* 2.0 l_0_4_113) l_0_4_134))))
 (= (- ?x9044 (* (* 2.0 l_0_4_57) l_0_4_78)) 0.0)))
(assert
 (let ((?x9077 (* l_0_4_87 l_0_4_87)))
 (let ((?x9075 (* l_0_4_86 l_0_4_86)))
 (let ((?x9071 (- (- (* (- l_0_4_114) l_0_4_114) (* l_0_4_115 l_0_4_115)) (* (* 1.0 l_0_4_58) l_0_4_58))))
 (= (- (- (- ?x9071 (* (* 1.0 l_0_4_59) l_0_4_59)) ?x9075) ?x9077) 0.0)))))
(assert
 (let ((?x9105 (- (* (* (- 2.0) l_0_4_114) l_0_4_116) (* (* 2.0 l_0_4_115) l_0_4_117))))
 (let ((?x9109 (- (- ?x9105 (* (* 2.0 l_0_4_58) l_0_4_60)) (* (* 2.0 l_0_4_59) l_0_4_61))))
 (let ((?x9113 (- (- ?x9109 (* (* 2.0 l_0_4_86) l_0_4_88)) (* (* 2.0 l_0_4_87) l_0_4_89))))
 (= ?x9113 0.0)))))
(assert
 (let ((?x9152 (- (* (* (- 2.0) l_0_4_114) l_0_4_119) (* (* 2.0 l_0_4_115) l_0_4_120))))
 (let ((?x9156 (- (- ?x9152 (* (* 2.0 l_0_4_58) l_0_4_63)) (* (* 2.0 l_0_4_59) l_0_4_64))))
 (let ((?x9160 (- (- ?x9156 (* (* 2.0 l_0_4_86) l_0_4_91)) (* (* 2.0 l_0_4_87) l_0_4_92))))
 (= ?x9160 0.0)))))
(assert
 (let ((?x9199 (- (* (* (- 2.0) l_0_4_100) l_0_4_86) (* (* 2.0 l_0_4_101) l_0_4_87))))
 (let ((?x9203 (- (- ?x9199 (* (* 2.0 l_0_4_114) l_0_4_128)) (* (* 2.0 l_0_4_115) l_0_4_129))))
 (let ((?x9207 (- (- ?x9203 (* (* 2.0 l_0_4_58) l_0_4_72)) (* (* 2.0 l_0_4_59) l_0_4_73))))
 (= ?x9207 0.0)))))
(assert
 (let ((?x9263 (* l_0_4_90 l_0_4_90)))
 (let ((?x9261 (* l_0_4_89 l_0_4_89)))
 (let ((?x9259 (* l_0_4_88 l_0_4_88)))
 (let ((?x9248 (* l_0_4_118 l_0_4_118)))
 (let ((?x9249 (- (- (* (- l_0_4_116) l_0_4_116) (* l_0_4_117 l_0_4_117)) ?x9248)))
 (let ((?x9255 (- (- ?x9249 (* (* 1.0 l_0_4_60) l_0_4_60)) (* (* 1.0 l_0_4_61) l_0_4_61))))
 (let ((?x9264 (- (- (- (- ?x9255 (* (* 1.0 l_0_4_62) l_0_4_62)) ?x9259) ?x9261) ?x9263)))
 (= ?x9264 0.0)))))))))
(assert
 (let ((?x9301 (- (* (* (- 2.0) l_0_4_116) l_0_4_119) (* (* 2.0 l_0_4_117) l_0_4_120))))
 (let ((?x9305 (- (- ?x9301 (* (* 2.0 l_0_4_118) l_0_4_121)) (* (* 2.0 l_0_4_60) l_0_4_63))))
 (let ((?x9309 (- (- ?x9305 (* (* 2.0 l_0_4_61) l_0_4_64)) (* (* 2.0 l_0_4_62) l_0_4_65))))
 (let ((?x9315 (- (- ?x9309 (* (* 2.0 l_0_4_88) l_0_4_91)) (* (* 2.0 l_0_4_89) l_0_4_92))))
 (= (- ?x9315 (* (* 2.0 l_0_4_90) l_0_4_93)) 0.0))))))
(assert
 (let ((?x9375 (- (* (* (- 2.0) l_0_4_116) l_0_4_123) (* (* 2.0 l_0_4_117) l_0_4_124))))
 (let ((?x9379 (- (- ?x9375 (* (* 2.0 l_0_4_118) l_0_4_125)) (* (* 2.0 l_0_4_60) l_0_4_67))))
 (let ((?x9383 (- (- ?x9379 (* (* 2.0 l_0_4_61) l_0_4_68)) (* (* 2.0 l_0_4_62) l_0_4_69))))
 (let ((?x9387 (- (- ?x9383 (* (* 2.0 l_0_4_88) l_0_4_95)) (* (* 2.0 l_0_4_89) l_0_4_96))))
 (= (- ?x9387 (* (* 2.0 l_0_4_90) l_0_4_97)) 0.0))))))
(assert
 (let ((?x9446 (- (* (* (- 2.0) l_0_4_106) l_0_4_88) (* (* 2.0 l_0_4_107) l_0_4_89))))
 (let ((?x9451 (- (- ?x9446 (* (* 2.0 l_0_4_108) l_0_4_90)) (* (* 2.0 l_0_4_116) l_0_4_134))))
 (let ((?x9455 (- (- ?x9451 (* (* 2.0 l_0_4_117) l_0_4_135)) (* (* 2.0 l_0_4_118) l_0_4_136))))
 (let ((?x9459 (- (- ?x9455 (* (* 2.0 l_0_4_60) l_0_4_78)) (* (* 2.0 l_0_4_61) l_0_4_79))))
 (= (- ?x9459 (* (* 2.0 l_0_4_62) l_0_4_80)) 0.0))))))
(assert
 (let ((?x9542 (* l_0_4_94 l_0_4_94)))
 (let ((?x9540 (* l_0_4_93 l_0_4_93)))
 (let ((?x9538 (* l_0_4_92 l_0_4_92)))
 (let ((?x9536 (* l_0_4_91 l_0_4_91)))
 (let ((?x9522 (* l_0_4_122 l_0_4_122)))
 (let ((?x9520 (* l_0_4_121 l_0_4_121)))
 (let ((?x9521 (- (- (* (- l_0_4_119) l_0_4_119) (* l_0_4_120 l_0_4_120)) ?x9520)))
 (let ((?x9529 (- (- (- ?x9521 ?x9522) (* (* 1.0 l_0_4_63) l_0_4_63)) (* (* 1.0 l_0_4_64) l_0_4_64))))
 (let ((?x9535 (- (- ?x9529 (* (* 1.0 l_0_4_65) l_0_4_65)) (* (* 1.0 l_0_4_66) l_0_4_66))))
 (= (- (- (- (- ?x9535 ?x9536) ?x9538) ?x9540) ?x9542) 0.0)))))))))))
(assert
 (let ((?x9589 (- (* (* (- 2.0) l_0_4_100) l_0_4_91) (* (* 2.0 l_0_4_101) l_0_4_92))))
 (let ((?x9594 (- (- ?x9589 (* (* 2.0 l_0_4_102) l_0_4_93)) (* (* 2.0 l_0_4_103) l_0_4_94))))
 (let ((?x9598 (- (- ?x9594 (* (* 2.0 l_0_4_119) l_0_4_128)) (* (* 2.0 l_0_4_120) l_0_4_129))))
 (let ((?x9602 (- (- ?x9598 (* (* 2.0 l_0_4_121) l_0_4_130)) (* (* 2.0 l_0_4_122) l_0_4_131))))
 (let ((?x9606 (- (- ?x9602 (* (* 2.0 l_0_4_63) l_0_4_72)) (* (* 2.0 l_0_4_64) l_0_4_73))))
 (let ((?x9610 (- (- ?x9606 (* (* 2.0 l_0_4_65) l_0_4_74)) (* (* 2.0 l_0_4_66) l_0_4_75))))
 (= ?x9610 0.0))))))))
(assert
 (let ((?x9685 (- (* (* (- 2.0) l_0_4_106) l_0_4_91) (* (* 2.0 l_0_4_107) l_0_4_92))))
 (let ((?x9690 (- (- ?x9685 (* (* 2.0 l_0_4_108) l_0_4_93)) (* (* 2.0 l_0_4_109) l_0_4_94))))
 (let ((?x9694 (- (- ?x9690 (* (* 2.0 l_0_4_119) l_0_4_134)) (* (* 2.0 l_0_4_120) l_0_4_135))))
 (let ((?x9698 (- (- ?x9694 (* (* 2.0 l_0_4_121) l_0_4_136)) (* (* 2.0 l_0_4_122) l_0_4_137))))
 (let ((?x9702 (- (- ?x9698 (* (* 2.0 l_0_4_63) l_0_4_78)) (* (* 2.0 l_0_4_64) l_0_4_79))))
 (let ((?x9706 (- (- ?x9702 (* (* 2.0 l_0_4_65) l_0_4_80)) (* (* 2.0 l_0_4_66) l_0_4_81))))
 (= ?x9706 0.0))))))))
(assert
 (let ((?x9812 (* l_0_4_99 l_0_4_99)))
 (let ((?x9810 (* l_0_4_98 l_0_4_98)))
 (let ((?x9808 (* l_0_4_97 l_0_4_97)))
 (let ((?x9806 (* l_0_4_96 l_0_4_96)))
 (let ((?x9804 (* l_0_4_95 l_0_4_95)))
 (let ((?x9787 (* l_0_4_127 l_0_4_127)))
 (let ((?x9785 (* l_0_4_126 l_0_4_126)))
 (let ((?x9783 (* l_0_4_125 l_0_4_125)))
 (let ((?x9784 (- (- (* (- l_0_4_123) l_0_4_123) (* l_0_4_124 l_0_4_124)) ?x9783)))
 (let ((?x9794 (- (- (- (- ?x9784 ?x9785) ?x9787) (* (* 1.0 l_0_4_67) l_0_4_67)) (* (* 1.0 l_0_4_68) l_0_4_68))))
 (let ((?x9800 (- (- ?x9794 (* (* 1.0 l_0_4_69) l_0_4_69)) (* (* 1.0 l_0_4_70) l_0_4_70))))
 (let ((?x9809 (- (- (- (- ?x9800 (* (* 1.0 l_0_4_71) l_0_4_71)) ?x9804) ?x9806) ?x9808)))
 (= (- (- ?x9809 ?x9810) ?x9812) 0.0))))))))))))))
(assert
 (let ((?x9869 (- (* (* (- 2.0) l_0_4_100) l_0_4_95) (* (* 2.0 l_0_4_101) l_0_4_96))))
 (let ((?x9873 (- (- ?x9869 (* (* 2.0 l_0_4_102) l_0_4_97)) (* (* 2.0 l_0_4_103) l_0_4_98))))
 (let ((?x9879 (- (- ?x9873 (* (* 2.0 l_0_4_104) l_0_4_99)) (* (* 2.0 l_0_4_123) l_0_4_128))))
 (let ((?x9885 (- (- ?x9879 (* (* 2.0 l_0_4_124) l_0_4_129)) (* (* 2.0 l_0_4_125) l_0_4_130))))
 (let ((?x9891 (- (- ?x9885 (* (* 2.0 l_0_4_126) l_0_4_131)) (* (* 2.0 l_0_4_127) l_0_4_132))))
 (let ((?x9897 (- (- ?x9891 (* (* 2.0 l_0_4_67) l_0_4_72)) (* (* 2.0 l_0_4_68) l_0_4_73))))
 (let ((?x9903 (- (- ?x9897 (* (* 2.0 l_0_4_69) l_0_4_74)) (* (* 2.0 l_0_4_70) l_0_4_75))))
 (= (- ?x9903 (* (* 2.0 l_0_4_71) l_0_4_76)) 0.0)))))))))
(assert
 (let ((?x9999 (- (* (* (- 2.0) l_0_4_106) l_0_4_95) (* (* 2.0 l_0_4_107) l_0_4_96))))
 (let ((?x10003 (- (- ?x9999 (* (* 2.0 l_0_4_108) l_0_4_97)) (* (* 2.0 l_0_4_109) l_0_4_98))))
 (let ((?x10008 (- (- ?x10003 (* (* 2.0 l_0_4_110) l_0_4_99)) (* (* 2.0 l_0_4_123) l_0_4_134))))
 (let ((?x10012 (- (- ?x10008 (* (* 2.0 l_0_4_124) l_0_4_135)) (* (* 2.0 l_0_4_125) l_0_4_136))))
 (let ((?x10016 (- (- ?x10012 (* (* 2.0 l_0_4_126) l_0_4_137)) (* (* 2.0 l_0_4_127) l_0_4_138))))
 (let ((?x10020 (- (- ?x10016 (* (* 2.0 l_0_4_67) l_0_4_78)) (* (* 2.0 l_0_4_68) l_0_4_79))))
 (let ((?x10024 (- (- ?x10020 (* (* 2.0 l_0_4_69) l_0_4_80)) (* (* 2.0 l_0_4_70) l_0_4_81))))
 (= (- ?x10024 (* (* 2.0 l_0_4_71) l_0_4_82)) 0.0)))))))))
(assert
 (let ((?x10139 (* l_0_4_133 l_0_4_133)))
 (let ((?x10137 (* l_0_4_132 l_0_4_132)))
 (let ((?x10135 (* l_0_4_131 l_0_4_131)))
 (let ((?x10133 (* l_0_4_130 l_0_4_130)))
 (let ((?x10131 (* l_0_4_129 l_0_4_129)))
 (let ((?x10129 (* l_0_4_128 l_0_4_128)))
 (let ((?x10127 (* l_0_4_105 l_0_4_105)))
 (let ((?x10125 (* l_0_4_104 l_0_4_104)))
 (let ((?x10123 (* l_0_4_103 l_0_4_103)))
 (let ((?x10121 (* l_0_4_102 l_0_4_102)))
 (let ((?x10122 (- (- (* (- l_0_4_100) l_0_4_100) (* l_0_4_101 l_0_4_101)) ?x10121)))
 (let ((?x10136 (- (- (- (- (- (- (- ?x10122 ?x10123) ?x10125) ?x10127) ?x10129) ?x10131) ?x10133) ?x10135)))
 (let ((?x10146 (- (- (- (- ?x10136 ?x10137) ?x10139) (* (* 1.0 l_0_4_72) l_0_4_72)) (* (* 1.0 l_0_4_73) l_0_4_73))))
 (let ((?x10152 (- (- ?x10146 (* (* 1.0 l_0_4_74) l_0_4_74)) (* (* 1.0 l_0_4_75) l_0_4_75))))
 (let ((?x10158 (- (- ?x10152 (* (* 1.0 l_0_4_76) l_0_4_76)) (* (* 1.0 l_0_4_77) l_0_4_77))))
 (= ?x10158 0.0)))))))))))))))))
(assert
 (let ((?x10224 (- (* (* (- 2.0) l_0_4_100) l_0_4_106) (* (* 2.0 l_0_4_101) l_0_4_107))))
 (let ((?x10228 (- (- ?x10224 (* (* 2.0 l_0_4_102) l_0_4_108)) (* (* 2.0 l_0_4_103) l_0_4_109))))
 (let ((?x10233 (- (- ?x10228 (* (* 2.0 l_0_4_104) l_0_4_110)) (* (* 2.0 l_0_4_105) l_0_4_111))))
 (let ((?x10239 (- (- ?x10233 (* (* 2.0 l_0_4_128) l_0_4_134)) (* (* 2.0 l_0_4_129) l_0_4_135))))
 (let ((?x10245 (- (- ?x10239 (* (* 2.0 l_0_4_130) l_0_4_136)) (* (* 2.0 l_0_4_131) l_0_4_137))))
 (let ((?x10251 (- (- ?x10245 (* (* 2.0 l_0_4_132) l_0_4_138)) (* (* 2.0 l_0_4_133) l_0_4_139))))
 (let ((?x10257 (- (- ?x10251 (* (* 2.0 l_0_4_72) l_0_4_78)) (* (* 2.0 l_0_4_73) l_0_4_79))))
 (let ((?x10263 (- (- ?x10257 (* (* 2.0 l_0_4_74) l_0_4_80)) (* (* 2.0 l_0_4_75) l_0_4_81))))
 (let ((?x10269 (- (- ?x10263 (* (* 2.0 l_0_4_76) l_0_4_82)) (* (* 2.0 l_0_4_77) l_0_4_83))))
 (= ?x10269 0.0)))))))))))
(assert
 (let ((?x10404 (* l_0_4_140 l_0_4_140)))
 (let ((?x10402 (* l_0_4_139 l_0_4_139)))
 (let ((?x10400 (* l_0_4_138 l_0_4_138)))
 (let ((?x10398 (* l_0_4_137 l_0_4_137)))
 (let ((?x10396 (* l_0_4_136 l_0_4_136)))
 (let ((?x10394 (* l_0_4_135 l_0_4_135)))
 (let ((?x10392 (* l_0_4_134 l_0_4_134)))
 (let ((?x10390 (* l_0_4_112 l_0_4_112)))
 (let ((?x10388 (* l_0_4_111 l_0_4_111)))
 (let ((?x10386 (* l_0_4_110 l_0_4_110)))
 (let ((?x10384 (* l_0_4_109 l_0_4_109)))
 (let ((?x10382 (* l_0_4_108 l_0_4_108)))
 (let ((?x10383 (- (- (* (- l_0_4_106) l_0_4_106) (* l_0_4_107 l_0_4_107)) ?x10382)))
 (let ((?x10397 (- (- (- (- (- (- (- ?x10383 ?x10384) ?x10386) ?x10388) ?x10390) ?x10392) ?x10394) ?x10396)))
 (let ((?x10408 (- (- (- (- (- ?x10397 ?x10398) ?x10400) ?x10402) ?x10404) (* (* 1.0 l_0_4_78) l_0_4_78))))
 (let ((?x10414 (- (- ?x10408 (* (* 1.0 l_0_4_79) l_0_4_79)) (* (* 1.0 l_0_4_80) l_0_4_80))))
 (let ((?x10420 (- (- ?x10414 (* (* 1.0 l_0_4_81) l_0_4_81)) (* (* 1.0 l_0_4_82) l_0_4_82))))
 (let ((?x10426 (- (- ?x10420 (* (* 1.0 l_0_4_83) l_0_4_83)) (* (* 1.0 l_0_4_84) l_0_4_84))))
 (= ?x10426 0.0))))))))))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_28 0.0))
(assert
 (>= l_0_4_29 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_34 0.0))
(assert
 (>= l_0_4_38 0.0))
(assert
 (>= l_0_4_43 0.0))
(assert
 (>= l_0_4_49 0.0))
(assert
 (>= l_0_4_56 0.0))
(assert
 (>= l_0_4_57 0.0))
(assert
 (>= l_0_4_59 0.0))
(assert
 (>= l_0_4_62 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_71 0.0))
(assert
 (>= l_0_4_77 0.0))
(assert
 (>= l_0_4_84 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_87 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_94 0.0))
(assert
 (>= l_0_4_99 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (>= l_0_4_112 0.0))
(assert
 (>= l_0_4_113 0.0))
(assert
 (>= l_0_4_115 0.0))
(assert
 (>= l_0_4_118 0.0))
(assert
 (>= l_0_4_122 0.0))
(assert
 (>= l_0_4_127 0.0))
(assert
 (>= l_0_4_133 0.0))
(assert
 (>= l_0_4_140 0.0))
(assert
 (let ((?x10546 (* l_0_5_29 l_0_5_29)))
 (let ((?x10542 (- (- (* (- l_0_5_1) l_0_5_1) (* (* 2.0 l_0_5_100) l_0_5_88)) (* (* 2.0 l_0_5_101) l_0_5_89))))
 (let ((?x10550 (+ (+ (- ?x10542 (* (* 2.0 l_0_5_102) l_0_5_90)) ?x10546) (* (* 2.0 l_0_5_60) l_0_5_72))))
 (let ((?x10556 (+ (+ ?x10550 (* (* 2.0 l_0_5_61) l_0_5_73)) (* (* 2.0 l_0_5_62) l_0_5_74))))
 (= (+ ?x10556 1.0) 0.0))))))
(assert
 (let ((?x10546 (* l_0_5_29 l_0_5_29)))
 (let ((?x10593 (- (- (* l_0_5_1 l_0_5_1) (* (* 2.0 l_0_5_106) l_0_5_86)) (* (* 2.0 l_0_5_107) l_0_5_87))))
 (let ((?x10600 (+ (+ (- ?x10593 ?x10546) (* (* 2.0 l_0_5_58) l_0_5_78)) (* (* 2.0 l_0_5_59) l_0_5_79))))
 (= (- ?x10600 1.0) 0.0)))))
(assert
 (let ((?x10632 (+ (- (* l_0_5_1 l_0_5_1) (* l_0_5_29 l_0_5_29)) (* (* 2.0 l_0_5_63) l_0_5_67))))
 (let ((?x10638 (+ (+ ?x10632 (* (* 2.0 l_0_5_64) l_0_5_68)) (* (* 2.0 l_0_5_65) l_0_5_69))))
 (let ((?x10644 (- (+ ?x10638 (* (* 2.0 l_0_5_66) l_0_5_70)) (* (* 2.0 l_0_5_91) l_0_5_95))))
 (let ((?x10650 (- (- ?x10644 (* (* 2.0 l_0_5_92) l_0_5_96)) (* (* 2.0 l_0_5_93) l_0_5_97))))
 (= (- (- ?x10650 (* (* 2.0 l_0_5_94) l_0_5_98)) 1.0) 0.0))))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10702 (* ?x10701 l_0_5_30)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) ?x10702) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10708 (* ?x10701 l_0_5_32)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x10708) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10718 (* ?x10701 l_0_5_35)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x10718) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10728 (* ?x10701 l_0_5_39)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x10728) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10738 (* ?x10701 l_0_5_44)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_16) ?x10738) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10748 (* ?x10701 l_0_5_50)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_22) ?x10748) 0.0))))
(assert
 (let ((?x10767 (* l_0_5_31 l_0_5_31)))
 (let ((?x10765 (* l_0_5_30 l_0_5_30)))
 (let ((?x10768 (+ (+ (- (* (- l_0_5_2) l_0_5_2) (* l_0_5_3 l_0_5_3)) ?x10765) ?x10767)))
 (= ?x10768 0.0)))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10789 (* ?x10788 l_0_5_33)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10786 (* ?x10785 l_0_5_32)))
 (let ((?x10782 (* 2.0 l_0_5_3)))
 (let ((?x10783 (* ?x10782 l_0_5_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_2) l_0_5_4) ?x10783) ?x10786) ?x10789) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10812 (* ?x10788 l_0_5_36)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10810 (* ?x10785 l_0_5_35)))
 (let ((?x10782 (* 2.0 l_0_5_3)))
 (let ((?x10803 (* ?x10782 l_0_5_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_2) l_0_5_7) ?x10803) ?x10810) ?x10812) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10837 (* ?x10788 l_0_5_40)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10835 (* ?x10785 l_0_5_39)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x10833 (* ?x10827 l_0_5_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x10833) ?x10835) ?x10837) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10862 (* ?x10788 l_0_5_45)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10860 (* ?x10785 l_0_5_44)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x10858 (* ?x10852 l_0_5_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_16) l_0_5_2) ?x10858) ?x10860) ?x10862) 0.0))))))))
(assert
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x10904 (* ?x10903 l_0_5_46)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x10901 (* ?x10900 l_0_5_45)))
 (let ((?x10897 (* 2.0 l_0_5_32)))
 (let ((?x10898 (* ?x10897 l_0_5_44)))
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10895 (* ?x10788 l_0_5_51)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10893 (* ?x10785 l_0_5_50)))
 (let ((?x10890 (* 2.0 l_0_5_23)))
 (let ((?x10891 (* ?x10890 l_0_5_3)))
 (let ((?x10887 (* 2.0 l_0_5_2)))
 (let ((?x10888 (* ?x10887 l_0_5_22)))
 (let ((?x10884 (* 2.0 l_0_5_18)))
 (let ((?x10885 (* ?x10884 l_0_5_6)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x10877 (* ?x10852 l_0_5_5)))
 (let ((?x10874 (* 2.0 l_0_5_16)))
 (let ((?x10876 (* ?x10874 l_0_5_4)))
 (let ((?x10899 (- (+ (+ (- (- (+ (+ ?x10876 ?x10877) ?x10885) ?x10888) ?x10891) ?x10893) ?x10895) ?x10898)))
 (= (- (- ?x10899 ?x10901) ?x10904) 0.0)))))))))))))))))))))))
(assert
 (let ((?x10959 (* l_0_5_6 l_0_5_6)))
 (let ((?x10957 (* l_0_5_5 l_0_5_5)))
 (let ((?x10955 (* l_0_5_4 l_0_5_4)))
 (let ((?x10953 (* l_0_5_34 l_0_5_34)))
 (let ((?x10956 (- (+ (+ (* l_0_5_32 l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x10953) ?x10955)))
 (= (- (- ?x10956 ?x10957) ?x10959) 0.0)))))))
(assert
 (let ((?x10985 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x10982 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x10979 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x10976 (* ?x10903 l_0_5_37)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x10974 (* ?x10900 l_0_5_36)))
 (let ((?x10983 (- (- (+ (+ (* (* 2.0 l_0_5_32) l_0_5_35) ?x10974) ?x10976) ?x10979) ?x10982)))
 (= (- ?x10983 ?x10985) 0.0))))))))))
(assert
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x11024 (* ?x10903 l_0_5_41)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x11022 (* ?x10900 l_0_5_40)))
 (let ((?x10897 (* 2.0 l_0_5_32)))
 (let ((?x11020 (* ?x10897 l_0_5_39)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11018 (* ?x11017 l_0_5_6)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11015 (* ?x10827 l_0_5_5)))
 (let ((?x11023 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x11015) ?x11018) ?x11020) ?x11022)))
 (= (+ ?x11023 ?x11024) 0.0)))))))))))))
(assert
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x10904 (* ?x10903 l_0_5_46)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x10901 (* ?x10900 l_0_5_45)))
 (let ((?x10897 (* 2.0 l_0_5_32)))
 (let ((?x10898 (* ?x10897 l_0_5_44)))
 (let ((?x10884 (* 2.0 l_0_5_18)))
 (let ((?x10885 (* ?x10884 l_0_5_6)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x10877 (* ?x10852 l_0_5_5)))
 (let ((?x11054 (+ (+ (- (- (* (* (- 2.0) l_0_5_16) l_0_5_4) ?x10877) ?x10885) ?x10898) ?x10901)))
 (= (+ ?x11054 ?x10904) 0.0)))))))))))))
(assert
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x11079 (* ?x10903 l_0_5_52)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x11077 (* ?x10900 l_0_5_51)))
 (let ((?x10897 (* 2.0 l_0_5_32)))
 (let ((?x11075 (* ?x10897 l_0_5_50)))
 (let ((?x11072 (* 2.0 l_0_5_24)))
 (let ((?x11073 (* ?x11072 l_0_5_6)))
 (let ((?x10890 (* 2.0 l_0_5_23)))
 (let ((?x11070 (* ?x10890 l_0_5_5)))
 (let ((?x11078 (+ (+ (- (- (* (* (- 2.0) l_0_5_22) l_0_5_4) ?x11070) ?x11073) ?x11075) ?x11077)))
 (= (+ ?x11078 ?x11079) 0.0)))))))))))))
(assert
 (let ((?x11119 (* l_0_5_9 l_0_5_9)))
 (let ((?x11117 (* l_0_5_8 l_0_5_8)))
 (let ((?x11115 (* l_0_5_7 l_0_5_7)))
 (let ((?x11113 (* l_0_5_38 l_0_5_38)))
 (let ((?x11111 (* l_0_5_37 l_0_5_37)))
 (let ((?x11109 (* l_0_5_36 l_0_5_36)))
 (let ((?x11112 (+ (+ (+ (* (- l_0_5_10) l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x11109) ?x11111)))
 (= (- (- (- (+ ?x11112 ?x11113) ?x11115) ?x11117) ?x11119) 0.0)))))))))
(assert
 (let ((?x11160 (* 2.0 l_0_5_38)))
 (let ((?x11161 (* ?x11160 l_0_5_42)))
 (let ((?x11157 (* 2.0 l_0_5_37)))
 (let ((?x11158 (* ?x11157 l_0_5_41)))
 (let ((?x11154 (* 2.0 l_0_5_36)))
 (let ((?x11155 (* ?x11154 l_0_5_40)))
 (let ((?x11151 (* 2.0 l_0_5_35)))
 (let ((?x11152 (* ?x11151 l_0_5_39)))
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x10904 (* ?x10903 l_0_5_46)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x10901 (* ?x10900 l_0_5_45)))
 (let ((?x10897 (* 2.0 l_0_5_32)))
 (let ((?x10898 (* ?x10897 l_0_5_44)))
 (let ((?x10884 (* 2.0 l_0_5_18)))
 (let ((?x10885 (* ?x10884 l_0_5_6)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x10877 (* ?x10852 l_0_5_5)))
 (let ((?x10874 (* 2.0 l_0_5_16)))
 (let ((?x10876 (* ?x10874 l_0_5_4)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11143 (* ?x11017 l_0_5_9)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11141 (* ?x10827 l_0_5_8)))
 (let ((?x11138 (* 2.0 l_0_5_11)))
 (let ((?x11139 (* ?x11138 l_0_5_7)))
 (let ((?x11145 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x11139) ?x11141) ?x11143) ?x10876)))
 (let ((?x11156 (+ (+ (- (- (- (+ (+ ?x11145 ?x10877) ?x10885) ?x10898) ?x10901) ?x10904) ?x11152) ?x11155)))
 (= (+ (+ ?x11156 ?x11158) ?x11161) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x11160 (* 2.0 l_0_5_38)))
 (let ((?x11214 (* ?x11160 l_0_5_47)))
 (let ((?x11157 (* 2.0 l_0_5_37)))
 (let ((?x11212 (* ?x11157 l_0_5_46)))
 (let ((?x11154 (* 2.0 l_0_5_36)))
 (let ((?x11210 (* ?x11154 l_0_5_45)))
 (let ((?x11151 (* 2.0 l_0_5_35)))
 (let ((?x11208 (* ?x11151 l_0_5_44)))
 (let ((?x10884 (* 2.0 l_0_5_18)))
 (let ((?x11206 (* ?x10884 l_0_5_9)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x11204 (* ?x10852 l_0_5_8)))
 (let ((?x10874 (* 2.0 l_0_5_16)))
 (let ((?x11202 (* ?x10874 l_0_5_7)))
 (let ((?x11209 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_19) ?x11202) ?x11204) ?x11206) ?x11208)))
 (= (+ (+ (+ ?x11209 ?x11210) ?x11212) ?x11214) 0.0)))))))))))))))))
(assert
 (let ((?x11160 (* 2.0 l_0_5_38)))
 (let ((?x11262 (* ?x11160 l_0_5_53)))
 (let ((?x11157 (* 2.0 l_0_5_37)))
 (let ((?x11260 (* ?x11157 l_0_5_52)))
 (let ((?x11154 (* 2.0 l_0_5_36)))
 (let ((?x11258 (* ?x11154 l_0_5_51)))
 (let ((?x11151 (* 2.0 l_0_5_35)))
 (let ((?x11256 (* ?x11151 l_0_5_50)))
 (let ((?x11072 (* 2.0 l_0_5_24)))
 (let ((?x11254 (* ?x11072 l_0_5_9)))
 (let ((?x10890 (* 2.0 l_0_5_23)))
 (let ((?x11245 (* ?x10890 l_0_5_8)))
 (let ((?x11240 (* 2.0 l_0_5_22)))
 (let ((?x11242 (* ?x11240 l_0_5_7)))
 (let ((?x11257 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_25) ?x11242) ?x11245) ?x11254) ?x11256)))
 (= (+ (+ (+ ?x11257 ?x11258) ?x11260) ?x11262) 0.0)))))))))))))))))
(assert
 (let ((?x11314 (* l_0_5_43 l_0_5_43)))
 (let ((?x11312 (* l_0_5_42 l_0_5_42)))
 (let ((?x11310 (* l_0_5_41 l_0_5_41)))
 (let ((?x11308 (* l_0_5_40 l_0_5_40)))
 (let ((?x11306 (* l_0_5_39 l_0_5_39)))
 (let ((?x11304 (* l_0_5_15 l_0_5_15)))
 (let ((?x11302 (* l_0_5_14 l_0_5_14)))
 (let ((?x11293 (* l_0_5_13 l_0_5_13)))
 (let ((?x11303 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x11293) ?x11302)))
 (= (+ (+ (+ (+ (+ (- ?x11303 ?x11304) ?x11306) ?x11308) ?x11310) ?x11312) ?x11314) 0.0)))))))))))
(assert
 (let ((?x11362 (* 2.0 l_0_5_43)))
 (let ((?x11363 (* ?x11362 l_0_5_48)))
 (let ((?x11359 (* 2.0 l_0_5_42)))
 (let ((?x11360 (* ?x11359 l_0_5_47)))
 (let ((?x11356 (* 2.0 l_0_5_41)))
 (let ((?x11357 (* ?x11356 l_0_5_46)))
 (let ((?x11353 (* 2.0 l_0_5_40)))
 (let ((?x11354 (* ?x11353 l_0_5_45)))
 (let ((?x11350 (* 2.0 l_0_5_39)))
 (let ((?x11351 (* ?x11350 l_0_5_44)))
 (let ((?x11347 (* 2.0 l_0_5_15)))
 (let ((?x11348 (* ?x11347 l_0_5_20)))
 (let ((?x11344 (* 2.0 l_0_5_14)))
 (let ((?x11345 (* ?x11344 l_0_5_19)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11342 (* ?x11017 l_0_5_18)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11340 (* ?x10827 l_0_5_17)))
 (let ((?x11349 (- (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_16) ?x11340) ?x11342) ?x11345) ?x11348)))
 (= (+ (+ (+ (+ (+ ?x11349 ?x11351) ?x11354) ?x11357) ?x11360) ?x11363) 0.0)))))))))))))))))))))
(assert
 (let ((?x11362 (* 2.0 l_0_5_43)))
 (let ((?x11422 (* ?x11362 l_0_5_54)))
 (let ((?x11359 (* 2.0 l_0_5_42)))
 (let ((?x11420 (* ?x11359 l_0_5_53)))
 (let ((?x11356 (* 2.0 l_0_5_41)))
 (let ((?x11418 (* ?x11356 l_0_5_52)))
 (let ((?x11353 (* 2.0 l_0_5_40)))
 (let ((?x11416 (* ?x11353 l_0_5_51)))
 (let ((?x11350 (* 2.0 l_0_5_39)))
 (let ((?x11414 (* ?x11350 l_0_5_50)))
 (let ((?x11347 (* 2.0 l_0_5_15)))
 (let ((?x11412 (* ?x11347 l_0_5_26)))
 (let ((?x11344 (* 2.0 l_0_5_14)))
 (let ((?x11402 (* ?x11344 l_0_5_25)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11399 (* ?x11017 l_0_5_24)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11395 (* ?x10827 l_0_5_23)))
 (let ((?x11413 (- (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_22) ?x11395) ?x11399) ?x11402) ?x11412)))
 (= (+ (+ (+ (+ (+ ?x11413 ?x11414) ?x11416) ?x11418) ?x11420) ?x11422) 0.0)))))))))))))))))))))
(assert
 (let ((?x11486 (* l_0_5_49 l_0_5_49)))
 (let ((?x11484 (* l_0_5_48 l_0_5_48)))
 (let ((?x11482 (* l_0_5_47 l_0_5_47)))
 (let ((?x11480 (* l_0_5_46 l_0_5_46)))
 (let ((?x11478 (* l_0_5_45 l_0_5_45)))
 (let ((?x11476 (* l_0_5_44 l_0_5_44)))
 (let ((?x11474 (* l_0_5_21 l_0_5_21)))
 (let ((?x11472 (* l_0_5_20 l_0_5_20)))
 (let ((?x11470 (* l_0_5_19 l_0_5_19)))
 (let ((?x11460 (* l_0_5_18 l_0_5_18)))
 (let ((?x11471 (- (- (- (* (- l_0_5_16) l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x11460) ?x11470)))
 (let ((?x11485 (+ (+ (+ (+ (+ (- (- ?x11471 ?x11472) ?x11474) ?x11476) ?x11478) ?x11480) ?x11482) ?x11484)))
 (= (+ ?x11485 ?x11486) 0.0))))))))))))))
(assert
 (let ((?x11545 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x11542 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x11539 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x11536 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x11533 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x11530 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x11527 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x11524 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x11521 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x10884 (* 2.0 l_0_5_18)))
 (let ((?x11518 (* ?x10884 l_0_5_24)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x11516 (* ?x10852 l_0_5_23)))
 (let ((?x11525 (- (- (- (- (* (* (- 2.0) l_0_5_16) l_0_5_22) ?x11516) ?x11518) ?x11521) ?x11524)))
 (let ((?x11546 (+ (+ (+ (+ (+ (+ (- ?x11525 ?x11527) ?x11530) ?x11533) ?x11536) ?x11539) ?x11542) ?x11545)))
 (= ?x11546 0.0)))))))))))))))))
(assert
 (let ((?x11607 (* l_0_5_56 l_0_5_56)))
 (let ((?x11605 (* l_0_5_55 l_0_5_55)))
 (let ((?x11603 (* l_0_5_54 l_0_5_54)))
 (let ((?x11601 (* l_0_5_53 l_0_5_53)))
 (let ((?x11599 (* l_0_5_52 l_0_5_52)))
 (let ((?x11597 (* l_0_5_51 l_0_5_51)))
 (let ((?x11595 (* l_0_5_50 l_0_5_50)))
 (let ((?x11593 (* l_0_5_28 l_0_5_28)))
 (let ((?x11591 (* l_0_5_27 l_0_5_27)))
 (let ((?x11589 (* l_0_5_26 l_0_5_26)))
 (let ((?x11578 (* l_0_5_25 l_0_5_25)))
 (let ((?x11575 (* l_0_5_24 l_0_5_24)))
 (let ((?x11588 (- (- (- (* (- l_0_5_22) l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x11575) ?x11578)))
 (let ((?x11602 (+ (+ (+ (+ (- (- (- ?x11588 ?x11589) ?x11591) ?x11593) ?x11595) ?x11597) ?x11599) ?x11601)))
 (= (+ (+ (+ ?x11602 ?x11603) ?x11605) ?x11607) 0.0))))))))))))))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10702 (* ?x10701 l_0_5_30)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_2) ?x10702) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10708 (* ?x10701 l_0_5_32)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x10708) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10718 (* ?x10701 l_0_5_35)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_7) ?x10718) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10728 (* ?x10701 l_0_5_39)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x10728) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10738 (* ?x10701 l_0_5_44)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_16) ?x10738) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10748 (* ?x10701 l_0_5_50)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_22) ?x10748) 0.0))))
(assert
 (let ((?x10767 (* l_0_5_31 l_0_5_31)))
 (let ((?x10765 (* l_0_5_30 l_0_5_30)))
 (= (- (- (+ (* l_0_5_2 l_0_5_2) (* l_0_5_3 l_0_5_3)) ?x10765) ?x10767) 0.0))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10789 (* ?x10788 l_0_5_33)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10786 (* ?x10785 l_0_5_32)))
 (let ((?x10782 (* 2.0 l_0_5_3)))
 (let ((?x10783 (* ?x10782 l_0_5_5)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_4) ?x10783) ?x10786) ?x10789) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10812 (* ?x10788 l_0_5_36)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10810 (* ?x10785 l_0_5_35)))
 (let ((?x10782 (* 2.0 l_0_5_3)))
 (let ((?x10803 (* ?x10782 l_0_5_8)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_7) ?x10803) ?x10810) ?x10812) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10837 (* ?x10788 l_0_5_40)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10835 (* ?x10785 l_0_5_39)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x10833 (* ?x10827 l_0_5_3)))
 (= (- (- (+ (* (* 2.0 l_0_5_11) l_0_5_2) ?x10833) ?x10835) ?x10837) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10862 (* ?x10788 l_0_5_45)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10860 (* ?x10785 l_0_5_44)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x10858 (* ?x10852 l_0_5_3)))
 (= (- (- (+ (* (* 2.0 l_0_5_16) l_0_5_2) ?x10858) ?x10860) ?x10862) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10895 (* ?x10788 l_0_5_51)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10893 (* ?x10785 l_0_5_50)))
 (let ((?x10890 (* 2.0 l_0_5_23)))
 (let ((?x10891 (* ?x10890 l_0_5_3)))
 (let ((?x10887 (* 2.0 l_0_5_2)))
 (let ((?x10888 (* ?x10887 l_0_5_22)))
 (= (- (- (+ ?x10888 ?x10891) ?x10893) ?x10895) 0.0))))))))))
(assert
 (let ((?x10959 (* l_0_5_6 l_0_5_6)))
 (let ((?x10957 (* l_0_5_5 l_0_5_5)))
 (let ((?x10955 (* l_0_5_4 l_0_5_4)))
 (let ((?x10953 (* l_0_5_34 l_0_5_34)))
 (let ((?x1864 (+ (- (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x10953) ?x10955)))
 (= (+ (+ ?x1864 ?x10957) ?x10959) 0.0)))))))
(assert
 (let ((?x10985 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x10982 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x10979 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x10976 (* ?x10903 l_0_5_37)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x10974 (* ?x10900 l_0_5_36)))
 (let ((?x1862 (+ (+ (- (- (* (* (- 2.0) l_0_5_32) l_0_5_35) ?x10974) ?x10976) ?x10979) ?x10982)))
 (= (+ ?x1862 ?x10985) 0.0))))))))))
(assert
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x11024 (* ?x10903 l_0_5_41)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x11022 (* ?x10900 l_0_5_40)))
 (let ((?x10897 (* 2.0 l_0_5_32)))
 (let ((?x11020 (* ?x10897 l_0_5_39)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11018 (* ?x11017 l_0_5_6)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11015 (* ?x10827 l_0_5_5)))
 (let ((?x1905 (- (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x11015) ?x11018) ?x11020) ?x11022)))
 (= (- ?x1905 ?x11024) 0.0)))))))))))))
(assert
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x11079 (* ?x10903 l_0_5_52)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x11077 (* ?x10900 l_0_5_51)))
 (let ((?x10897 (* 2.0 l_0_5_32)))
 (let ((?x11075 (* ?x10897 l_0_5_50)))
 (let ((?x11072 (* 2.0 l_0_5_24)))
 (let ((?x11073 (* ?x11072 l_0_5_6)))
 (let ((?x10890 (* 2.0 l_0_5_23)))
 (let ((?x11070 (* ?x10890 l_0_5_5)))
 (let ((?x2106 (- (- (+ (+ (* (* 2.0 l_0_5_22) l_0_5_4) ?x11070) ?x11073) ?x11075) ?x11077)))
 (= (- ?x2106 ?x11079) 0.0)))))))))))))
(assert
 (let ((?x11119 (* l_0_5_9 l_0_5_9)))
 (let ((?x11117 (* l_0_5_8 l_0_5_8)))
 (let ((?x11115 (* l_0_5_7 l_0_5_7)))
 (let ((?x11113 (* l_0_5_38 l_0_5_38)))
 (let ((?x11111 (* l_0_5_37 l_0_5_37)))
 (let ((?x11109 (* l_0_5_36 l_0_5_36)))
 (let ((?x2208 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x11109) ?x11111)))
 (= (+ (+ (+ (- ?x2208 ?x11113) ?x11115) ?x11117) ?x11119) 0.0)))))))))
(assert
 (let ((?x11160 (* 2.0 l_0_5_38)))
 (let ((?x11161 (* ?x11160 l_0_5_42)))
 (let ((?x11157 (* 2.0 l_0_5_37)))
 (let ((?x11158 (* ?x11157 l_0_5_41)))
 (let ((?x11154 (* 2.0 l_0_5_36)))
 (let ((?x11155 (* ?x11154 l_0_5_40)))
 (let ((?x11151 (* 2.0 l_0_5_35)))
 (let ((?x11152 (* ?x11151 l_0_5_39)))
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10895 (* ?x10788 l_0_5_51)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10893 (* ?x10785 l_0_5_50)))
 (let ((?x10890 (* 2.0 l_0_5_23)))
 (let ((?x10891 (* ?x10890 l_0_5_3)))
 (let ((?x10887 (* 2.0 l_0_5_2)))
 (let ((?x10888 (* ?x10887 l_0_5_22)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11143 (* ?x11017 l_0_5_9)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11141 (* ?x10827 l_0_5_8)))
 (let ((?x11138 (* 2.0 l_0_5_11)))
 (let ((?x11139 (* ?x11138 l_0_5_7)))
 (let ((?x1973 (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x11139) ?x11141) ?x11143)))
 (let ((?x1592 (- (- (- (- (- (+ (+ ?x1973 ?x10888) ?x10891) ?x10893) ?x10895) ?x11152) ?x11155) ?x11158)))
 (= (- ?x1592 ?x11161) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x11160 (* 2.0 l_0_5_38)))
 (let ((?x11214 (* ?x11160 l_0_5_47)))
 (let ((?x11157 (* 2.0 l_0_5_37)))
 (let ((?x11212 (* ?x11157 l_0_5_46)))
 (let ((?x11154 (* 2.0 l_0_5_36)))
 (let ((?x11210 (* ?x11154 l_0_5_45)))
 (let ((?x11151 (* 2.0 l_0_5_35)))
 (let ((?x11208 (* ?x11151 l_0_5_44)))
 (let ((?x10884 (* 2.0 l_0_5_18)))
 (let ((?x11206 (* ?x10884 l_0_5_9)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x11204 (* ?x10852 l_0_5_8)))
 (let ((?x10874 (* 2.0 l_0_5_16)))
 (let ((?x11202 (* ?x10874 l_0_5_7)))
 (let ((?x2349 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_19) ?x11202) ?x11204) ?x11206) ?x11208)))
 (= (- (- (- ?x2349 ?x11210) ?x11212) ?x11214) 0.0)))))))))))))))))
(assert
 (let ((?x11160 (* 2.0 l_0_5_38)))
 (let ((?x11262 (* ?x11160 l_0_5_53)))
 (let ((?x11157 (* 2.0 l_0_5_37)))
 (let ((?x11260 (* ?x11157 l_0_5_52)))
 (let ((?x11154 (* 2.0 l_0_5_36)))
 (let ((?x11258 (* ?x11154 l_0_5_51)))
 (let ((?x11151 (* 2.0 l_0_5_35)))
 (let ((?x11256 (* ?x11151 l_0_5_50)))
 (let ((?x11072 (* 2.0 l_0_5_24)))
 (let ((?x11254 (* ?x11072 l_0_5_9)))
 (let ((?x10890 (* 2.0 l_0_5_23)))
 (let ((?x11245 (* ?x10890 l_0_5_8)))
 (let ((?x11240 (* 2.0 l_0_5_22)))
 (let ((?x11242 (* ?x11240 l_0_5_7)))
 (let ((?x2380 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_25) ?x11242) ?x11245) ?x11254) ?x11256)))
 (= (- (- (- ?x2380 ?x11258) ?x11260) ?x11262) 0.0)))))))))))))))))
(assert
 (let ((?x11314 (* l_0_5_43 l_0_5_43)))
 (let ((?x11312 (* l_0_5_42 l_0_5_42)))
 (let ((?x11310 (* l_0_5_41 l_0_5_41)))
 (let ((?x11308 (* l_0_5_40 l_0_5_40)))
 (let ((?x11306 (* l_0_5_39 l_0_5_39)))
 (let ((?x11304 (* l_0_5_15 l_0_5_15)))
 (let ((?x11302 (* l_0_5_14 l_0_5_14)))
 (let ((?x11293 (* l_0_5_13 l_0_5_13)))
 (let ((?x2515 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x11293) ?x11302)))
 (= (- (- (- (- (- (+ ?x2515 ?x11304) ?x11306) ?x11308) ?x11310) ?x11312) ?x11314) 0.0)))))))))))
(assert
 (let ((?x11362 (* 2.0 l_0_5_43)))
 (let ((?x11363 (* ?x11362 l_0_5_48)))
 (let ((?x11359 (* 2.0 l_0_5_42)))
 (let ((?x11360 (* ?x11359 l_0_5_47)))
 (let ((?x11356 (* 2.0 l_0_5_41)))
 (let ((?x11357 (* ?x11356 l_0_5_46)))
 (let ((?x11353 (* 2.0 l_0_5_40)))
 (let ((?x11354 (* ?x11353 l_0_5_45)))
 (let ((?x11350 (* 2.0 l_0_5_39)))
 (let ((?x11351 (* ?x11350 l_0_5_44)))
 (let ((?x11347 (* 2.0 l_0_5_15)))
 (let ((?x11348 (* ?x11347 l_0_5_20)))
 (let ((?x11344 (* 2.0 l_0_5_14)))
 (let ((?x11345 (* ?x11344 l_0_5_19)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11342 (* ?x11017 l_0_5_18)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11340 (* ?x10827 l_0_5_17)))
 (let ((?x2605 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_16) ?x11340) ?x11342) ?x11345) ?x11348)))
 (= (- (- (- (- (- ?x2605 ?x11351) ?x11354) ?x11357) ?x11360) ?x11363) 0.0)))))))))))))))))))))
(assert
 (let ((?x11362 (* 2.0 l_0_5_43)))
 (let ((?x11422 (* ?x11362 l_0_5_54)))
 (let ((?x11359 (* 2.0 l_0_5_42)))
 (let ((?x11420 (* ?x11359 l_0_5_53)))
 (let ((?x11356 (* 2.0 l_0_5_41)))
 (let ((?x11418 (* ?x11356 l_0_5_52)))
 (let ((?x11353 (* 2.0 l_0_5_40)))
 (let ((?x11416 (* ?x11353 l_0_5_51)))
 (let ((?x11350 (* 2.0 l_0_5_39)))
 (let ((?x11414 (* ?x11350 l_0_5_50)))
 (let ((?x11347 (* 2.0 l_0_5_15)))
 (let ((?x11412 (* ?x11347 l_0_5_26)))
 (let ((?x11344 (* 2.0 l_0_5_14)))
 (let ((?x11402 (* ?x11344 l_0_5_25)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11399 (* ?x11017 l_0_5_24)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11395 (* ?x10827 l_0_5_23)))
 (let ((?x2674 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_22) ?x11395) ?x11399) ?x11402) ?x11412)))
 (= (- (- (- (- (- ?x2674 ?x11414) ?x11416) ?x11418) ?x11420) ?x11422) 0.0)))))))))))))))))))))
(assert
 (let ((?x11486 (* l_0_5_49 l_0_5_49)))
 (let ((?x11484 (* l_0_5_48 l_0_5_48)))
 (let ((?x11482 (* l_0_5_47 l_0_5_47)))
 (let ((?x11480 (* l_0_5_46 l_0_5_46)))
 (let ((?x11478 (* l_0_5_45 l_0_5_45)))
 (let ((?x11476 (* l_0_5_44 l_0_5_44)))
 (let ((?x11474 (* l_0_5_21 l_0_5_21)))
 (let ((?x11472 (* l_0_5_20 l_0_5_20)))
 (let ((?x11470 (* l_0_5_19 l_0_5_19)))
 (let ((?x11460 (* l_0_5_18 l_0_5_18)))
 (let ((?x2857 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x11460) ?x11470)))
 (let ((?x2788 (- (- (- (- (- (+ (+ ?x2857 ?x11472) ?x11474) ?x11476) ?x11478) ?x11480) ?x11482) ?x11484)))
 (= (- ?x2788 ?x11486) 0.0))))))))))))))
(assert
 (let ((?x11545 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x11542 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x11539 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x11536 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x11533 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x11530 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x11527 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x11524 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x11521 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x10884 (* 2.0 l_0_5_18)))
 (let ((?x11518 (* ?x10884 l_0_5_24)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x11516 (* ?x10852 l_0_5_23)))
 (let ((?x2962 (+ (+ (+ (+ (* (* 2.0 l_0_5_16) l_0_5_22) ?x11516) ?x11518) ?x11521) ?x11524)))
 (let ((?x2930 (- (- (- (- (- (- (+ ?x2962 ?x11527) ?x11530) ?x11533) ?x11536) ?x11539) ?x11542) ?x11545)))
 (= ?x2930 0.0)))))))))))))))))
(assert
 (let ((?x11607 (* l_0_5_56 l_0_5_56)))
 (let ((?x11605 (* l_0_5_55 l_0_5_55)))
 (let ((?x11603 (* l_0_5_54 l_0_5_54)))
 (let ((?x11601 (* l_0_5_53 l_0_5_53)))
 (let ((?x11599 (* l_0_5_52 l_0_5_52)))
 (let ((?x11597 (* l_0_5_51 l_0_5_51)))
 (let ((?x11595 (* l_0_5_50 l_0_5_50)))
 (let ((?x11593 (* l_0_5_28 l_0_5_28)))
 (let ((?x11591 (* l_0_5_27 l_0_5_27)))
 (let ((?x11589 (* l_0_5_26 l_0_5_26)))
 (let ((?x11578 (* l_0_5_25 l_0_5_25)))
 (let ((?x11575 (* l_0_5_24 l_0_5_24)))
 (let ((?x11638 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x11575) ?x11578)))
 (let ((?x11645 (- (- (- (- (+ (+ (+ ?x11638 ?x11589) ?x11591) ?x11593) ?x11595) ?x11597) ?x11599) ?x11601)))
 (= (- (- (- ?x11645 ?x11603) ?x11605) ?x11607) 0.0))))))))))))))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10702 (* ?x10701 l_0_5_30)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_2) ?x10702) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10708 (* ?x10701 l_0_5_32)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x10708) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10718 (* ?x10701 l_0_5_35)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_7) ?x10718) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10728 (* ?x10701 l_0_5_39)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x10728) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10738 (* ?x10701 l_0_5_44)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_16) ?x10738) 0.0))))
(assert
 (let ((?x10701 (* 2.0 l_0_5_29)))
 (let ((?x10748 (* ?x10701 l_0_5_50)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_22) ?x10748) 0.0))))
(assert
 (let ((?x10767 (* l_0_5_31 l_0_5_31)))
 (let ((?x10765 (* l_0_5_30 l_0_5_30)))
 (= (- (- (+ (* l_0_5_2 l_0_5_2) (* l_0_5_3 l_0_5_3)) ?x10765) ?x10767) 0.0))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10789 (* ?x10788 l_0_5_33)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10786 (* ?x10785 l_0_5_32)))
 (let ((?x10782 (* 2.0 l_0_5_3)))
 (let ((?x10783 (* ?x10782 l_0_5_5)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_4) ?x10783) ?x10786) ?x10789) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10812 (* ?x10788 l_0_5_36)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10810 (* ?x10785 l_0_5_35)))
 (let ((?x10782 (* 2.0 l_0_5_3)))
 (let ((?x10803 (* ?x10782 l_0_5_8)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_7) ?x10803) ?x10810) ?x10812) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10837 (* ?x10788 l_0_5_40)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10835 (* ?x10785 l_0_5_39)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x10833 (* ?x10827 l_0_5_3)))
 (= (- (- (+ (* (* 2.0 l_0_5_11) l_0_5_2) ?x10833) ?x10835) ?x10837) 0.0))))))))
(assert
 (let ((?x10788 (* 2.0 l_0_5_31)))
 (let ((?x10862 (* ?x10788 l_0_5_45)))
 (let ((?x10785 (* 2.0 l_0_5_30)))
 (let ((?x10860 (* ?x10785 l_0_5_44)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x10858 (* ?x10852 l_0_5_3)))
 (= (- (- (+ (* (* 2.0 l_0_5_16) l_0_5_2) ?x10858) ?x10860) ?x10862) 0.0))))))))
(assert
 (let ((?x10959 (* l_0_5_6 l_0_5_6)))
 (let ((?x10957 (* l_0_5_5 l_0_5_5)))
 (let ((?x10955 (* l_0_5_4 l_0_5_4)))
 (let ((?x10953 (* l_0_5_34 l_0_5_34)))
 (let ((?x1864 (+ (- (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x10953) ?x10955)))
 (= (+ (+ ?x1864 ?x10957) ?x10959) 0.0)))))))
(assert
 (let ((?x10985 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x10982 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x10979 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x10976 (* ?x10903 l_0_5_37)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x10974 (* ?x10900 l_0_5_36)))
 (let ((?x1862 (+ (+ (- (- (* (* (- 2.0) l_0_5_32) l_0_5_35) ?x10974) ?x10976) ?x10979) ?x10982)))
 (= (+ ?x1862 ?x10985) 0.0))))))))))
(assert
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x11024 (* ?x10903 l_0_5_41)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x11022 (* ?x10900 l_0_5_40)))
 (let ((?x10897 (* 2.0 l_0_5_32)))
 (let ((?x11020 (* ?x10897 l_0_5_39)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11018 (* ?x11017 l_0_5_6)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11015 (* ?x10827 l_0_5_5)))
 (let ((?x1905 (- (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x11015) ?x11018) ?x11020) ?x11022)))
 (= (- ?x1905 ?x11024) 0.0)))))))))))))
(assert
 (let ((?x10903 (* 2.0 l_0_5_34)))
 (let ((?x11079 (* ?x10903 l_0_5_52)))
 (let ((?x10900 (* 2.0 l_0_5_33)))
 (let ((?x11077 (* ?x10900 l_0_5_51)))
 (let ((?x10897 (* 2.0 l_0_5_32)))
 (let ((?x11075 (* ?x10897 l_0_5_50)))
 (let ((?x11072 (* 2.0 l_0_5_24)))
 (let ((?x11073 (* ?x11072 l_0_5_6)))
 (let ((?x10890 (* 2.0 l_0_5_23)))
 (let ((?x11070 (* ?x10890 l_0_5_5)))
 (let ((?x2106 (- (- (+ (+ (* (* 2.0 l_0_5_22) l_0_5_4) ?x11070) ?x11073) ?x11075) ?x11077)))
 (= (- ?x2106 ?x11079) 0.0)))))))))))))
(assert
 (let ((?x11119 (* l_0_5_9 l_0_5_9)))
 (let ((?x11117 (* l_0_5_8 l_0_5_8)))
 (let ((?x11115 (* l_0_5_7 l_0_5_7)))
 (let ((?x11113 (* l_0_5_38 l_0_5_38)))
 (let ((?x11111 (* l_0_5_37 l_0_5_37)))
 (let ((?x11109 (* l_0_5_36 l_0_5_36)))
 (let ((?x2208 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x11109) ?x11111)))
 (= (+ (+ (+ (- ?x2208 ?x11113) ?x11115) ?x11117) ?x11119) 0.0)))))))))
(assert
 (let ((?x11160 (* 2.0 l_0_5_38)))
 (let ((?x11161 (* ?x11160 l_0_5_42)))
 (let ((?x11157 (* 2.0 l_0_5_37)))
 (let ((?x11158 (* ?x11157 l_0_5_41)))
 (let ((?x11154 (* 2.0 l_0_5_36)))
 (let ((?x11155 (* ?x11154 l_0_5_40)))
 (let ((?x11151 (* 2.0 l_0_5_35)))
 (let ((?x11152 (* ?x11151 l_0_5_39)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11143 (* ?x11017 l_0_5_9)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11141 (* ?x10827 l_0_5_8)))
 (let ((?x11138 (* 2.0 l_0_5_11)))
 (let ((?x11139 (* ?x11138 l_0_5_7)))
 (let ((?x1973 (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x11139) ?x11141) ?x11143)))
 (= (- (- (- (- ?x1973 ?x11152) ?x11155) ?x11158) ?x11161) 0.0)))))))))))))))))
(assert
 (let ((?x11160 (* 2.0 l_0_5_38)))
 (let ((?x11214 (* ?x11160 l_0_5_47)))
 (let ((?x11157 (* 2.0 l_0_5_37)))
 (let ((?x11212 (* ?x11157 l_0_5_46)))
 (let ((?x11154 (* 2.0 l_0_5_36)))
 (let ((?x11210 (* ?x11154 l_0_5_45)))
 (let ((?x11151 (* 2.0 l_0_5_35)))
 (let ((?x11208 (* ?x11151 l_0_5_44)))
 (let ((?x10884 (* 2.0 l_0_5_18)))
 (let ((?x11206 (* ?x10884 l_0_5_9)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x11204 (* ?x10852 l_0_5_8)))
 (let ((?x10874 (* 2.0 l_0_5_16)))
 (let ((?x11202 (* ?x10874 l_0_5_7)))
 (let ((?x2349 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_19) ?x11202) ?x11204) ?x11206) ?x11208)))
 (= (- (- (- ?x2349 ?x11210) ?x11212) ?x11214) 0.0)))))))))))))))))
(assert
 (let ((?x11160 (* 2.0 l_0_5_38)))
 (let ((?x11262 (* ?x11160 l_0_5_53)))
 (let ((?x11157 (* 2.0 l_0_5_37)))
 (let ((?x11260 (* ?x11157 l_0_5_52)))
 (let ((?x11154 (* 2.0 l_0_5_36)))
 (let ((?x11258 (* ?x11154 l_0_5_51)))
 (let ((?x11151 (* 2.0 l_0_5_35)))
 (let ((?x11256 (* ?x11151 l_0_5_50)))
 (let ((?x11072 (* 2.0 l_0_5_24)))
 (let ((?x11254 (* ?x11072 l_0_5_9)))
 (let ((?x10890 (* 2.0 l_0_5_23)))
 (let ((?x11245 (* ?x10890 l_0_5_8)))
 (let ((?x11240 (* 2.0 l_0_5_22)))
 (let ((?x11242 (* ?x11240 l_0_5_7)))
 (let ((?x2380 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_25) ?x11242) ?x11245) ?x11254) ?x11256)))
 (= (- (- (- ?x2380 ?x11258) ?x11260) ?x11262) 0.0)))))))))))))))))
(assert
 (let ((?x11314 (* l_0_5_43 l_0_5_43)))
 (let ((?x11312 (* l_0_5_42 l_0_5_42)))
 (let ((?x11310 (* l_0_5_41 l_0_5_41)))
 (let ((?x11308 (* l_0_5_40 l_0_5_40)))
 (let ((?x11306 (* l_0_5_39 l_0_5_39)))
 (let ((?x11304 (* l_0_5_15 l_0_5_15)))
 (let ((?x11302 (* l_0_5_14 l_0_5_14)))
 (let ((?x11293 (* l_0_5_13 l_0_5_13)))
 (let ((?x2515 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x11293) ?x11302)))
 (= (- (- (- (- (- (+ ?x2515 ?x11304) ?x11306) ?x11308) ?x11310) ?x11312) ?x11314) 0.0)))))))))))
(assert
 (let ((?x11362 (* 2.0 l_0_5_43)))
 (let ((?x11363 (* ?x11362 l_0_5_48)))
 (let ((?x11359 (* 2.0 l_0_5_42)))
 (let ((?x11360 (* ?x11359 l_0_5_47)))
 (let ((?x11356 (* 2.0 l_0_5_41)))
 (let ((?x11357 (* ?x11356 l_0_5_46)))
 (let ((?x11353 (* 2.0 l_0_5_40)))
 (let ((?x11354 (* ?x11353 l_0_5_45)))
 (let ((?x11350 (* 2.0 l_0_5_39)))
 (let ((?x11351 (* ?x11350 l_0_5_44)))
 (let ((?x11347 (* 2.0 l_0_5_15)))
 (let ((?x11348 (* ?x11347 l_0_5_20)))
 (let ((?x11344 (* 2.0 l_0_5_14)))
 (let ((?x11345 (* ?x11344 l_0_5_19)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11342 (* ?x11017 l_0_5_18)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11340 (* ?x10827 l_0_5_17)))
 (let ((?x2605 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_16) ?x11340) ?x11342) ?x11345) ?x11348)))
 (= (- (- (- (- (- ?x2605 ?x11351) ?x11354) ?x11357) ?x11360) ?x11363) 0.0)))))))))))))))))))))
(assert
 (let ((?x11362 (* 2.0 l_0_5_43)))
 (let ((?x11422 (* ?x11362 l_0_5_54)))
 (let ((?x11359 (* 2.0 l_0_5_42)))
 (let ((?x11420 (* ?x11359 l_0_5_53)))
 (let ((?x11356 (* 2.0 l_0_5_41)))
 (let ((?x11418 (* ?x11356 l_0_5_52)))
 (let ((?x11353 (* 2.0 l_0_5_40)))
 (let ((?x11416 (* ?x11353 l_0_5_51)))
 (let ((?x11350 (* 2.0 l_0_5_39)))
 (let ((?x11414 (* ?x11350 l_0_5_50)))
 (let ((?x11347 (* 2.0 l_0_5_15)))
 (let ((?x11412 (* ?x11347 l_0_5_26)))
 (let ((?x11344 (* 2.0 l_0_5_14)))
 (let ((?x11402 (* ?x11344 l_0_5_25)))
 (let ((?x11017 (* 2.0 l_0_5_13)))
 (let ((?x11399 (* ?x11017 l_0_5_24)))
 (let ((?x10827 (* 2.0 l_0_5_12)))
 (let ((?x11395 (* ?x10827 l_0_5_23)))
 (let ((?x2674 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_22) ?x11395) ?x11399) ?x11402) ?x11412)))
 (= (- (- (- (- (- ?x2674 ?x11414) ?x11416) ?x11418) ?x11420) ?x11422) 0.0)))))))))))))))))))))
(assert
 (let ((?x11486 (* l_0_5_49 l_0_5_49)))
 (let ((?x11484 (* l_0_5_48 l_0_5_48)))
 (let ((?x11482 (* l_0_5_47 l_0_5_47)))
 (let ((?x11480 (* l_0_5_46 l_0_5_46)))
 (let ((?x11478 (* l_0_5_45 l_0_5_45)))
 (let ((?x11476 (* l_0_5_44 l_0_5_44)))
 (let ((?x11474 (* l_0_5_21 l_0_5_21)))
 (let ((?x11472 (* l_0_5_20 l_0_5_20)))
 (let ((?x11470 (* l_0_5_19 l_0_5_19)))
 (let ((?x11460 (* l_0_5_18 l_0_5_18)))
 (let ((?x2857 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x11460) ?x11470)))
 (let ((?x2788 (- (- (- (- (- (+ (+ ?x2857 ?x11472) ?x11474) ?x11476) ?x11478) ?x11480) ?x11482) ?x11484)))
 (= (- ?x2788 ?x11486) 0.0))))))))))))))
(assert
 (let ((?x11545 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x11542 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x11539 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x11536 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x11533 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x11530 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x11527 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x11524 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x11521 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x10884 (* 2.0 l_0_5_18)))
 (let ((?x11518 (* ?x10884 l_0_5_24)))
 (let ((?x10852 (* 2.0 l_0_5_17)))
 (let ((?x11516 (* ?x10852 l_0_5_23)))
 (let ((?x2962 (+ (+ (+ (+ (* (* 2.0 l_0_5_16) l_0_5_22) ?x11516) ?x11518) ?x11521) ?x11524)))
 (let ((?x2930 (- (- (- (- (- (- (+ ?x2962 ?x11527) ?x11530) ?x11533) ?x11536) ?x11539) ?x11542) ?x11545)))
 (= ?x2930 0.0)))))))))))))))))
(assert
 (let ((?x11607 (* l_0_5_56 l_0_5_56)))
 (let ((?x11605 (* l_0_5_55 l_0_5_55)))
 (let ((?x11603 (* l_0_5_54 l_0_5_54)))
 (let ((?x11601 (* l_0_5_53 l_0_5_53)))
 (let ((?x11599 (* l_0_5_52 l_0_5_52)))
 (let ((?x11597 (* l_0_5_51 l_0_5_51)))
 (let ((?x11595 (* l_0_5_50 l_0_5_50)))
 (let ((?x11593 (* l_0_5_28 l_0_5_28)))
 (let ((?x11591 (* l_0_5_27 l_0_5_27)))
 (let ((?x11589 (* l_0_5_26 l_0_5_26)))
 (let ((?x11578 (* l_0_5_25 l_0_5_25)))
 (let ((?x11575 (* l_0_5_24 l_0_5_24)))
 (let ((?x11638 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x11575) ?x11578)))
 (let ((?x11645 (- (- (- (- (+ (+ (+ ?x11638 ?x11589) ?x11591) ?x11593) ?x11595) ?x11597) ?x11599) ?x11601)))
 (= (- (- (- ?x11645 ?x11603) ?x11605) ?x11607) 0.0))))))))))))))))
(assert
 (= (- (* 1.0 (* l_0_5_57 l_0_5_57)) (* l_0_5_85 l_0_5_85)) 0.0))
(assert
 (let ((?x11684 (- (* (* 2.0 l_0_5_57) l_0_5_58) (* (* 2.0 l_0_5_85) l_0_5_86))))
 (= ?x11684 0.0)))
(assert
 (let ((?x11697 (- (* (* 2.0 l_0_5_57) l_0_5_60) (* (* 2.0 l_0_5_85) l_0_5_88))))
 (= ?x11697 0.0)))
(assert
 (let ((?x11710 (- (* (* 2.0 l_0_5_57) l_0_5_63) (* (* 2.0 l_0_5_85) l_0_5_91))))
 (= ?x11710 0.0)))
(assert
 (let ((?x11723 (- (* (* 2.0 l_0_5_57) l_0_5_67) (* (* 2.0 l_0_5_85) l_0_5_95))))
 (= ?x11723 0.0)))
(assert
 (let ((?x11737 (+ (* (* (- 2.0) l_0_5_100) l_0_5_85) (* (* 2.0 l_0_5_57) l_0_5_72))))
 (= ?x11737 0.0)))
(assert
 (let ((?x11748 (+ (* (* (- 2.0) l_0_5_106) l_0_5_85) (* (* 2.0 l_0_5_57) l_0_5_78))))
 (= ?x11748 0.0)))
(assert
 (let ((?x11763 (* l_0_5_87 l_0_5_87)))
 (let ((?x11761 (* l_0_5_86 l_0_5_86)))
 (let ((?x11760 (+ (* 1.0 (* l_0_5_58 l_0_5_58)) (* 1.0 (* l_0_5_59 l_0_5_59)))))
 (= (- (- ?x11760 ?x11761) ?x11763) 0.0)))))
(assert
 (let ((?x11776 (+ (* (* 2.0 l_0_5_58) l_0_5_60) (* (* 2.0 l_0_5_59) l_0_5_61))))
 (let ((?x11782 (- (- ?x11776 (* (* 2.0 l_0_5_86) l_0_5_88)) (* (* 2.0 l_0_5_87) l_0_5_89))))
 (= ?x11782 0.0))))
(assert
 (let ((?x11804 (+ (* (* 2.0 l_0_5_58) l_0_5_63) (* (* 2.0 l_0_5_59) l_0_5_64))))
 (let ((?x11808 (- (- ?x11804 (* (* 2.0 l_0_5_86) l_0_5_91)) (* (* 2.0 l_0_5_87) l_0_5_92))))
 (= ?x11808 0.0))))
(assert
 (let ((?x11830 (+ (* (* 2.0 l_0_5_58) l_0_5_67) (* (* 2.0 l_0_5_59) l_0_5_68))))
 (let ((?x11834 (- (- ?x11830 (* (* 2.0 l_0_5_86) l_0_5_95)) (* (* 2.0 l_0_5_87) l_0_5_96))))
 (= ?x11834 0.0))))
(assert
 (let ((?x11856 (- (* (* (- 2.0) l_0_5_100) l_0_5_86) (* (* 2.0 l_0_5_101) l_0_5_87))))
 (let ((?x11860 (+ (+ ?x11856 (* (* 2.0 l_0_5_58) l_0_5_72)) (* (* 2.0 l_0_5_59) l_0_5_73))))
 (= ?x11860 0.0))))
(assert
 (let ((?x11889 (* l_0_5_90 l_0_5_90)))
 (let ((?x11887 (* l_0_5_89 l_0_5_89)))
 (let ((?x11885 (* l_0_5_88 l_0_5_88)))
 (let ((?x11881 (+ (* 1.0 (* l_0_5_60 l_0_5_60)) (* 1.0 (* l_0_5_61 l_0_5_61)))))
 (let ((?x11890 (- (- (- (+ ?x11881 (* 1.0 (* l_0_5_62 l_0_5_62))) ?x11885) ?x11887) ?x11889)))
 (= ?x11890 0.0)))))))
(assert
 (let ((?x11905 (+ (* (* 2.0 l_0_5_60) l_0_5_63) (* (* 2.0 l_0_5_61) l_0_5_64))))
 (let ((?x11910 (- (+ ?x11905 (* (* 2.0 l_0_5_62) l_0_5_65)) (* (* 2.0 l_0_5_88) l_0_5_91))))
 (let ((?x11916 (- (- ?x11910 (* (* 2.0 l_0_5_89) l_0_5_92)) (* (* 2.0 l_0_5_90) l_0_5_93))))
 (= ?x11916 0.0)))))
(assert
 (let ((?x11946 (+ (* (* 2.0 l_0_5_60) l_0_5_67) (* (* 2.0 l_0_5_61) l_0_5_68))))
 (let ((?x11950 (- (+ ?x11946 (* (* 2.0 l_0_5_62) l_0_5_69)) (* (* 2.0 l_0_5_88) l_0_5_95))))
 (let ((?x11954 (- (- ?x11950 (* (* 2.0 l_0_5_89) l_0_5_96)) (* (* 2.0 l_0_5_90) l_0_5_97))))
 (= ?x11954 0.0)))))
(assert
 (let ((?x11984 (- (* (* (- 2.0) l_0_5_106) l_0_5_88) (* (* 2.0 l_0_5_107) l_0_5_89))))
 (let ((?x11989 (+ (- ?x11984 (* (* 2.0 l_0_5_108) l_0_5_90)) (* (* 2.0 l_0_5_60) l_0_5_78))))
 (let ((?x11993 (+ (+ ?x11989 (* (* 2.0 l_0_5_61) l_0_5_79)) (* (* 2.0 l_0_5_62) l_0_5_80))))
 (= ?x11993 0.0)))))
(assert
 (let ((?x12035 (* l_0_5_94 l_0_5_94)))
 (let ((?x12033 (* l_0_5_93 l_0_5_93)))
 (let ((?x12031 (* l_0_5_92 l_0_5_92)))
 (let ((?x12029 (* l_0_5_91 l_0_5_91)))
 (let ((?x12022 (+ (* 1.0 (* l_0_5_63 l_0_5_63)) (* 1.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x12028 (+ (+ ?x12022 (* 1.0 (* l_0_5_65 l_0_5_65))) (* 1.0 (* l_0_5_66 l_0_5_66)))))
 (= (- (- (- (- ?x12028 ?x12029) ?x12031) ?x12033) ?x12035) 0.0))))))))
(assert
 (let ((?x12054 (- (* (* (- 2.0) l_0_5_100) l_0_5_91) (* (* 2.0 l_0_5_101) l_0_5_92))))
 (let ((?x12059 (- (- ?x12054 (* (* 2.0 l_0_5_102) l_0_5_93)) (* (* 2.0 l_0_5_103) l_0_5_94))))
 (let ((?x12063 (+ (+ ?x12059 (* (* 2.0 l_0_5_63) l_0_5_72)) (* (* 2.0 l_0_5_64) l_0_5_73))))
 (let ((?x12067 (+ (+ ?x12063 (* (* 2.0 l_0_5_65) l_0_5_74)) (* (* 2.0 l_0_5_66) l_0_5_75))))
 (= ?x12067 0.0))))))
(assert
 (let ((?x12094 (- (* (* (- 2.0) l_0_5_106) l_0_5_91) (* (* 2.0 l_0_5_107) l_0_5_92))))
 (let ((?x12107 (- (- ?x12094 (* (* 2.0 l_0_5_108) l_0_5_93)) (* (* 2.0 l_0_5_109) l_0_5_94))))
 (let ((?x12111 (+ (+ ?x12107 (* (* 2.0 l_0_5_63) l_0_5_78)) (* (* 2.0 l_0_5_64) l_0_5_79))))
 (let ((?x12115 (+ (+ ?x12111 (* (* 2.0 l_0_5_65) l_0_5_80)) (* (* 2.0 l_0_5_66) l_0_5_81))))
 (= ?x12115 0.0))))))
(assert
 (let ((?x12170 (* l_0_5_99 l_0_5_99)))
 (let ((?x12168 (* l_0_5_98 l_0_5_98)))
 (let ((?x12166 (* l_0_5_97 l_0_5_97)))
 (let ((?x12164 (* l_0_5_96 l_0_5_96)))
 (let ((?x12162 (* l_0_5_95 l_0_5_95)))
 (let ((?x12145 (+ (* 1.0 (* l_0_5_67 l_0_5_67)) (* 1.0 (* l_0_5_68 l_0_5_68)))))
 (let ((?x12158 (+ (+ ?x12145 (* 1.0 (* l_0_5_69 l_0_5_69))) (* 1.0 (* l_0_5_70 l_0_5_70)))))
 (let ((?x12167 (- (- (- (+ ?x12158 (* 1.0 (* l_0_5_71 l_0_5_71))) ?x12162) ?x12164) ?x12166)))
 (= (- (- ?x12167 ?x12168) ?x12170) 0.0))))))))))
(assert
 (let ((?x12192 (- (* (* (- 2.0) l_0_5_100) l_0_5_95) (* (* 2.0 l_0_5_101) l_0_5_96))))
 (let ((?x12196 (- (- ?x12192 (* (* 2.0 l_0_5_102) l_0_5_97)) (* (* 2.0 l_0_5_103) l_0_5_98))))
 (let ((?x12202 (+ (- ?x12196 (* (* 2.0 l_0_5_104) l_0_5_99)) (* (* 2.0 l_0_5_67) l_0_5_72))))
 (let ((?x12208 (+ (+ ?x12202 (* (* 2.0 l_0_5_68) l_0_5_73)) (* (* 2.0 l_0_5_69) l_0_5_74))))
 (let ((?x12214 (+ (+ ?x12208 (* (* 2.0 l_0_5_70) l_0_5_75)) (* (* 2.0 l_0_5_71) l_0_5_76))))
 (= ?x12214 0.0)))))))
(assert
 (let ((?x12247 (- (* (* (- 2.0) l_0_5_106) l_0_5_95) (* (* 2.0 l_0_5_107) l_0_5_96))))
 (let ((?x12261 (- (- ?x12247 (* (* 2.0 l_0_5_108) l_0_5_97)) (* (* 2.0 l_0_5_109) l_0_5_98))))
 (let ((?x12266 (+ (- ?x12261 (* (* 2.0 l_0_5_110) l_0_5_99)) (* (* 2.0 l_0_5_67) l_0_5_78))))
 (let ((?x12270 (+ (+ ?x12266 (* (* 2.0 l_0_5_68) l_0_5_79)) (* (* 2.0 l_0_5_69) l_0_5_80))))
 (let ((?x12274 (+ (+ ?x12270 (* (* 2.0 l_0_5_70) l_0_5_81)) (* (* 2.0 l_0_5_71) l_0_5_82))))
 (= ?x12274 0.0)))))))
(assert
 (let ((?x12325 (* l_0_5_105 l_0_5_105)))
 (let ((?x12323 (* l_0_5_104 l_0_5_104)))
 (let ((?x12321 (* l_0_5_103 l_0_5_103)))
 (let ((?x12311 (* l_0_5_102 l_0_5_102)))
 (let ((?x12312 (- (- (* (- l_0_5_100) l_0_5_100) (* l_0_5_101 l_0_5_101)) ?x12311)))
 (let ((?x12329 (+ (- (- (- ?x12312 ?x12321) ?x12323) ?x12325) (* 1.0 (* l_0_5_72 l_0_5_72)))))
 (let ((?x12335 (+ (+ ?x12329 (* 1.0 (* l_0_5_73 l_0_5_73))) (* 1.0 (* l_0_5_74 l_0_5_74)))))
 (let ((?x12341 (+ (+ ?x12335 (* 1.0 (* l_0_5_75 l_0_5_75))) (* 1.0 (* l_0_5_76 l_0_5_76)))))
 (= (+ ?x12341 (* 1.0 (* l_0_5_77 l_0_5_77))) 0.0))))))))))
(assert
 (let ((?x12374 (- (* (* (- 2.0) l_0_5_100) l_0_5_106) (* (* 2.0 l_0_5_101) l_0_5_107))))
 (let ((?x12378 (- (- ?x12374 (* (* 2.0 l_0_5_102) l_0_5_108)) (* (* 2.0 l_0_5_103) l_0_5_109))))
 (let ((?x12383 (- (- ?x12378 (* (* 2.0 l_0_5_104) l_0_5_110)) (* (* 2.0 l_0_5_105) l_0_5_111))))
 (let ((?x12389 (+ (+ ?x12383 (* (* 2.0 l_0_5_72) l_0_5_78)) (* (* 2.0 l_0_5_73) l_0_5_79))))
 (let ((?x12395 (+ (+ ?x12389 (* (* 2.0 l_0_5_74) l_0_5_80)) (* (* 2.0 l_0_5_75) l_0_5_81))))
 (let ((?x12401 (+ (+ ?x12395 (* (* 2.0 l_0_5_76) l_0_5_82)) (* (* 2.0 l_0_5_77) l_0_5_83))))
 (= ?x12401 0.0))))))))
(assert
 (let ((?x12462 (* l_0_5_112 l_0_5_112)))
 (let ((?x12460 (* l_0_5_111 l_0_5_111)))
 (let ((?x12458 (* l_0_5_110 l_0_5_110)))
 (let ((?x12447 (* l_0_5_109 l_0_5_109)))
 (let ((?x12444 (* l_0_5_108 l_0_5_108)))
 (let ((?x12446 (- (- (* (- l_0_5_106) l_0_5_106) (* l_0_5_107 l_0_5_107)) ?x12444)))
 (let ((?x12466 (+ (- (- (- (- ?x12446 ?x12447) ?x12458) ?x12460) ?x12462) (* 1.0 (* l_0_5_78 l_0_5_78)))))
 (let ((?x12472 (+ (+ ?x12466 (* 1.0 (* l_0_5_79 l_0_5_79))) (* 1.0 (* l_0_5_80 l_0_5_80)))))
 (let ((?x12478 (+ (+ ?x12472 (* 1.0 (* l_0_5_81 l_0_5_81))) (* 1.0 (* l_0_5_82 l_0_5_82)))))
 (let ((?x12484 (+ (+ ?x12478 (* 1.0 (* l_0_5_83 l_0_5_83))) (* 1.0 (* l_0_5_84 l_0_5_84)))))
 (= ?x12484 0.0))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_28 0.0))
(assert
 (>= l_0_5_29 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_34 0.0))
(assert
 (>= l_0_5_38 0.0))
(assert
 (>= l_0_5_43 0.0))
(assert
 (>= l_0_5_49 0.0))
(assert
 (>= l_0_5_56 0.0))
(assert
 (>= l_0_5_57 0.0))
(assert
 (>= l_0_5_59 0.0))
(assert
 (>= l_0_5_62 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_71 0.0))
(assert
 (>= l_0_5_77 0.0))
(assert
 (>= l_0_5_84 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_87 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_94 0.0))
(assert
 (>= l_0_5_99 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (>= l_0_5_112 0.0))
(assert
 (let ((?x12557 (* l_0_6_29 l_0_6_29)))
 (let ((?x12550 (- (- (* l_0_6_1 l_0_6_1) (* (* 2.0 l_0_6_106) l_0_6_86)) (* (* 2.0 l_0_6_107) l_0_6_87))))
 (let ((?x12556 (- (- ?x12550 (* (* 2.0 l_0_6_114) l_0_6_134)) (* (* 2.0 l_0_6_115) l_0_6_135))))
 (let ((?x12564 (+ (+ (- ?x12556 ?x12557) (* (* 2.0 l_0_6_58) l_0_6_78)) (* (* 2.0 l_0_6_59) l_0_6_79))))
 (= (+ ?x12564 1.0) 0.0))))))
(assert
 (let ((?x12557 (* l_0_6_29 l_0_6_29)))
 (let ((?x12597 (- (- (* l_0_6_1 l_0_6_1) (* (* 2.0 l_0_6_119) l_0_6_123)) (* (* 2.0 l_0_6_120) l_0_6_124))))
 (let ((?x12603 (- (- ?x12597 (* (* 2.0 l_0_6_121) l_0_6_125)) (* (* 2.0 l_0_6_122) l_0_6_126))))
 (let ((?x12610 (+ (+ (- ?x12603 ?x12557) (* (* 2.0 l_0_6_63) l_0_6_67)) (* (* 2.0 l_0_6_64) l_0_6_68))))
 (let ((?x12616 (+ (+ ?x12610 (* (* 2.0 l_0_6_65) l_0_6_69)) (* (* 2.0 l_0_6_66) l_0_6_70))))
 (let ((?x12622 (- (- ?x12616 (* (* 2.0 l_0_6_91) l_0_6_95)) (* (* 2.0 l_0_6_92) l_0_6_96))))
 (let ((?x12628 (- (- ?x12622 (* (* 2.0 l_0_6_93) l_0_6_97)) (* (* 2.0 l_0_6_94) l_0_6_98))))
 (= (+ ?x12628 1.0) 0.0)))))))))
(assert
 (let ((?x12557 (* l_0_6_29 l_0_6_29)))
 (let ((?x12701 (- (- (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_100) l_0_6_88)) (* (* 2.0 l_0_6_101) l_0_6_89))))
 (let ((?x12707 (- (- ?x12701 (* (* 2.0 l_0_6_102) l_0_6_90)) (* (* 2.0 l_0_6_116) l_0_6_128))))
 (let ((?x12713 (- (- ?x12707 (* (* 2.0 l_0_6_117) l_0_6_129)) (* (* 2.0 l_0_6_118) l_0_6_130))))
 (let ((?x12720 (+ (+ (+ ?x12713 ?x12557) (* (* 2.0 l_0_6_60) l_0_6_72)) (* (* 2.0 l_0_6_61) l_0_6_73))))
 (= (- (+ ?x12720 (* (* 2.0 l_0_6_62) l_0_6_74)) 1.0) 0.0)))))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12780 (* ?x12779 l_0_6_30)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) ?x12780) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12786 (* ?x12779 l_0_6_32)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x12786) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12796 (* ?x12779 l_0_6_35)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x12796) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12806 (* ?x12779 l_0_6_39)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) ?x12806) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12816 (* ?x12779 l_0_6_44)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_16) ?x12816) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12826 (* ?x12779 l_0_6_50)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_22) ?x12826) 0.0))))
(assert
 (let ((?x12845 (* l_0_6_31 l_0_6_31)))
 (let ((?x12843 (* l_0_6_30 l_0_6_30)))
 (let ((?x12846 (+ (+ (- (* (- l_0_6_2) l_0_6_2) (* l_0_6_3 l_0_6_3)) ?x12843) ?x12845)))
 (= ?x12846 0.0)))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12867 (* ?x12866 l_0_6_33)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12864 (* ?x12863 l_0_6_32)))
 (let ((?x12860 (* 2.0 l_0_6_3)))
 (let ((?x12861 (* ?x12860 l_0_6_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_2) l_0_6_4) ?x12861) ?x12864) ?x12867) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12890 (* ?x12866 l_0_6_36)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12888 (* ?x12863 l_0_6_35)))
 (let ((?x12860 (* 2.0 l_0_6_3)))
 (let ((?x12881 (* ?x12860 l_0_6_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_2) l_0_6_7) ?x12881) ?x12888) ?x12890) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12915 (* ?x12866 l_0_6_40)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12913 (* ?x12863 l_0_6_39)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x12911 (* ?x12905 l_0_6_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x12911) ?x12913) ?x12915) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12940 (* ?x12866 l_0_6_45)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12938 (* ?x12863 l_0_6_44)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x12936 (* ?x12930 l_0_6_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_16) l_0_6_2) ?x12936) ?x12938) ?x12940) 0.0))))))))
(assert
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x12982 (* ?x12981 l_0_6_46)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x12979 (* ?x12978 l_0_6_45)))
 (let ((?x12975 (* 2.0 l_0_6_32)))
 (let ((?x12976 (* ?x12975 l_0_6_44)))
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12973 (* ?x12866 l_0_6_51)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12971 (* ?x12863 l_0_6_50)))
 (let ((?x12968 (* 2.0 l_0_6_23)))
 (let ((?x12969 (* ?x12968 l_0_6_3)))
 (let ((?x12965 (* 2.0 l_0_6_2)))
 (let ((?x12966 (* ?x12965 l_0_6_22)))
 (let ((?x12962 (* 2.0 l_0_6_18)))
 (let ((?x12963 (* ?x12962 l_0_6_6)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x12955 (* ?x12930 l_0_6_5)))
 (let ((?x12952 (* 2.0 l_0_6_16)))
 (let ((?x12954 (* ?x12952 l_0_6_4)))
 (let ((?x12977 (- (+ (+ (- (- (+ (+ ?x12954 ?x12955) ?x12963) ?x12966) ?x12969) ?x12971) ?x12973) ?x12976)))
 (= (- (- ?x12977 ?x12979) ?x12982) 0.0)))))))))))))))))))))))
(assert
 (let ((?x13037 (* l_0_6_6 l_0_6_6)))
 (let ((?x13035 (* l_0_6_5 l_0_6_5)))
 (let ((?x13033 (* l_0_6_4 l_0_6_4)))
 (let ((?x13031 (* l_0_6_34 l_0_6_34)))
 (let ((?x13034 (- (+ (+ (* l_0_6_32 l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x13031) ?x13033)))
 (= (- (- ?x13034 ?x13035) ?x13037) 0.0)))))))
(assert
 (let ((?x13063 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x13060 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x13057 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x13054 (* ?x12981 l_0_6_37)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x13052 (* ?x12978 l_0_6_36)))
 (let ((?x13061 (- (- (+ (+ (* (* 2.0 l_0_6_32) l_0_6_35) ?x13052) ?x13054) ?x13057) ?x13060)))
 (= (- ?x13061 ?x13063) 0.0))))))))))
(assert
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x13098 (* ?x12981 l_0_6_41)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x13096 (* ?x12978 l_0_6_40)))
 (let ((?x12975 (* 2.0 l_0_6_32)))
 (let ((?x13094 (* ?x12975 l_0_6_39)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13092 (* ?x13091 l_0_6_6)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13089 (* ?x12905 l_0_6_5)))
 (let ((?x13097 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x13089) ?x13092) ?x13094) ?x13096)))
 (= (+ ?x13097 ?x13098) 0.0)))))))))))))
(assert
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x12982 (* ?x12981 l_0_6_46)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x12979 (* ?x12978 l_0_6_45)))
 (let ((?x12975 (* 2.0 l_0_6_32)))
 (let ((?x12976 (* ?x12975 l_0_6_44)))
 (let ((?x12962 (* 2.0 l_0_6_18)))
 (let ((?x12963 (* ?x12962 l_0_6_6)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x12955 (* ?x12930 l_0_6_5)))
 (let ((?x13111 (+ (+ (- (- (* (* (- 2.0) l_0_6_16) l_0_6_4) ?x12955) ?x12963) ?x12976) ?x12979)))
 (= (+ ?x13111 ?x12982) 0.0)))))))))))))
(assert
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x13127 (* ?x12981 l_0_6_52)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x13125 (* ?x12978 l_0_6_51)))
 (let ((?x12975 (* 2.0 l_0_6_32)))
 (let ((?x13123 (* ?x12975 l_0_6_50)))
 (let ((?x13120 (* 2.0 l_0_6_24)))
 (let ((?x13121 (* ?x13120 l_0_6_6)))
 (let ((?x12968 (* 2.0 l_0_6_23)))
 (let ((?x3509 (* ?x12968 l_0_6_5)))
 (let ((?x13126 (+ (+ (- (- (* (* (- 2.0) l_0_6_22) l_0_6_4) ?x3509) ?x13121) ?x13123) ?x13125)))
 (= (+ ?x13126 ?x13127) 0.0)))))))))))))
(assert
 (let ((?x13158 (* l_0_6_9 l_0_6_9)))
 (let ((?x13156 (* l_0_6_8 l_0_6_8)))
 (let ((?x13154 (* l_0_6_7 l_0_6_7)))
 (let ((?x13152 (* l_0_6_38 l_0_6_38)))
 (let ((?x13150 (* l_0_6_37 l_0_6_37)))
 (let ((?x13148 (* l_0_6_36 l_0_6_36)))
 (let ((?x13151 (+ (+ (+ (* (- l_0_6_10) l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x13148) ?x13150)))
 (= (- (- (- (+ ?x13151 ?x13152) ?x13154) ?x13156) ?x13158) 0.0)))))))))
(assert
 (let ((?x13191 (* 2.0 l_0_6_38)))
 (let ((?x13192 (* ?x13191 l_0_6_42)))
 (let ((?x13188 (* 2.0 l_0_6_37)))
 (let ((?x13189 (* ?x13188 l_0_6_41)))
 (let ((?x13185 (* 2.0 l_0_6_36)))
 (let ((?x13186 (* ?x13185 l_0_6_40)))
 (let ((?x13182 (* 2.0 l_0_6_35)))
 (let ((?x13183 (* ?x13182 l_0_6_39)))
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x12982 (* ?x12981 l_0_6_46)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x12979 (* ?x12978 l_0_6_45)))
 (let ((?x12975 (* 2.0 l_0_6_32)))
 (let ((?x12976 (* ?x12975 l_0_6_44)))
 (let ((?x12962 (* 2.0 l_0_6_18)))
 (let ((?x12963 (* ?x12962 l_0_6_6)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x12955 (* ?x12930 l_0_6_5)))
 (let ((?x12952 (* 2.0 l_0_6_16)))
 (let ((?x12954 (* ?x12952 l_0_6_4)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13174 (* ?x13091 l_0_6_9)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13172 (* ?x12905 l_0_6_8)))
 (let ((?x3566 (* 2.0 l_0_6_11)))
 (let ((?x13170 (* ?x3566 l_0_6_7)))
 (let ((?x13176 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x13170) ?x13172) ?x13174) ?x12954)))
 (let ((?x13187 (+ (+ (- (- (- (+ (+ ?x13176 ?x12955) ?x12963) ?x12976) ?x12979) ?x12982) ?x13183) ?x13186)))
 (= (+ (+ ?x13187 ?x13189) ?x13192) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x13191 (* 2.0 l_0_6_38)))
 (let ((?x13232 (* ?x13191 l_0_6_47)))
 (let ((?x13188 (* 2.0 l_0_6_37)))
 (let ((?x13230 (* ?x13188 l_0_6_46)))
 (let ((?x13185 (* 2.0 l_0_6_36)))
 (let ((?x13228 (* ?x13185 l_0_6_45)))
 (let ((?x13182 (* 2.0 l_0_6_35)))
 (let ((?x13226 (* ?x13182 l_0_6_44)))
 (let ((?x12962 (* 2.0 l_0_6_18)))
 (let ((?x13224 (* ?x12962 l_0_6_9)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x13215 (* ?x12930 l_0_6_8)))
 (let ((?x12952 (* 2.0 l_0_6_16)))
 (let ((?x13211 (* ?x12952 l_0_6_7)))
 (let ((?x13227 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_19) ?x13211) ?x13215) ?x13224) ?x13226)))
 (= (+ (+ (+ ?x13227 ?x13228) ?x13230) ?x13232) 0.0)))))))))))))))))
(assert
 (let ((?x13191 (* 2.0 l_0_6_38)))
 (let ((?x13259 (* ?x13191 l_0_6_53)))
 (let ((?x13188 (* 2.0 l_0_6_37)))
 (let ((?x13257 (* ?x13188 l_0_6_52)))
 (let ((?x13185 (* 2.0 l_0_6_36)))
 (let ((?x13255 (* ?x13185 l_0_6_51)))
 (let ((?x13182 (* 2.0 l_0_6_35)))
 (let ((?x13253 (* ?x13182 l_0_6_50)))
 (let ((?x13120 (* 2.0 l_0_6_24)))
 (let ((?x13251 (* ?x13120 l_0_6_9)))
 (let ((?x12968 (* 2.0 l_0_6_23)))
 (let ((?x3703 (* ?x12968 l_0_6_8)))
 (let ((?x3702 (* 2.0 l_0_6_22)))
 (let ((?x3730 (* ?x3702 l_0_6_7)))
 (let ((?x13254 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_25) ?x3730) ?x3703) ?x13251) ?x13253)))
 (= (+ (+ (+ ?x13254 ?x13255) ?x13257) ?x13259) 0.0)))))))))))))))))
(assert
 (let ((?x13301 (* l_0_6_43 l_0_6_43)))
 (let ((?x13299 (* l_0_6_42 l_0_6_42)))
 (let ((?x13297 (* l_0_6_41 l_0_6_41)))
 (let ((?x13295 (* l_0_6_40 l_0_6_40)))
 (let ((?x13293 (* l_0_6_39 l_0_6_39)))
 (let ((?x13291 (* l_0_6_15 l_0_6_15)))
 (let ((?x13289 (* l_0_6_14 l_0_6_14)))
 (let ((?x13280 (* l_0_6_13 l_0_6_13)))
 (let ((?x13290 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x13280) ?x13289)))
 (= (+ (+ (+ (+ (+ (- ?x13290 ?x13291) ?x13293) ?x13295) ?x13297) ?x13299) ?x13301) 0.0)))))))))))
(assert
 (let ((?x13345 (* 2.0 l_0_6_43)))
 (let ((?x13346 (* ?x13345 l_0_6_48)))
 (let ((?x13342 (* 2.0 l_0_6_42)))
 (let ((?x13343 (* ?x13342 l_0_6_47)))
 (let ((?x13339 (* 2.0 l_0_6_41)))
 (let ((?x13340 (* ?x13339 l_0_6_46)))
 (let ((?x13336 (* 2.0 l_0_6_40)))
 (let ((?x13337 (* ?x13336 l_0_6_45)))
 (let ((?x13333 (* 2.0 l_0_6_39)))
 (let ((?x13334 (* ?x13333 l_0_6_44)))
 (let ((?x13330 (* 2.0 l_0_6_15)))
 (let ((?x13331 (* ?x13330 l_0_6_20)))
 (let ((?x13327 (* 2.0 l_0_6_14)))
 (let ((?x13328 (* ?x13327 l_0_6_19)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13325 (* ?x13091 l_0_6_18)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13323 (* ?x12905 l_0_6_17)))
 (let ((?x13332 (- (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_16) ?x13323) ?x13325) ?x13328) ?x13331)))
 (= (+ (+ (+ (+ (+ ?x13332 ?x13334) ?x13337) ?x13340) ?x13343) ?x13346) 0.0)))))))))))))))))))))
(assert
 (let ((?x13345 (* 2.0 l_0_6_43)))
 (let ((?x13393 (* ?x13345 l_0_6_54)))
 (let ((?x13342 (* 2.0 l_0_6_42)))
 (let ((?x13391 (* ?x13342 l_0_6_53)))
 (let ((?x13339 (* 2.0 l_0_6_41)))
 (let ((?x13389 (* ?x13339 l_0_6_52)))
 (let ((?x13336 (* 2.0 l_0_6_40)))
 (let ((?x13387 (* ?x13336 l_0_6_51)))
 (let ((?x13333 (* 2.0 l_0_6_39)))
 (let ((?x13385 (* ?x13333 l_0_6_50)))
 (let ((?x13330 (* 2.0 l_0_6_15)))
 (let ((?x13383 (* ?x13330 l_0_6_26)))
 (let ((?x13327 (* 2.0 l_0_6_14)))
 (let ((?x13373 (* ?x13327 l_0_6_25)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13370 (* ?x13091 l_0_6_24)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13366 (* ?x12905 l_0_6_23)))
 (let ((?x13384 (- (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_22) ?x13366) ?x13370) ?x13373) ?x13383)))
 (= (+ (+ (+ (+ (+ ?x13384 ?x13385) ?x13387) ?x13389) ?x13391) ?x13393) 0.0)))))))))))))))))))))
(assert
 (let ((?x13435 (* l_0_6_49 l_0_6_49)))
 (let ((?x13433 (* l_0_6_48 l_0_6_48)))
 (let ((?x13431 (* l_0_6_47 l_0_6_47)))
 (let ((?x13429 (* l_0_6_46 l_0_6_46)))
 (let ((?x13427 (* l_0_6_45 l_0_6_45)))
 (let ((?x13425 (* l_0_6_44 l_0_6_44)))
 (let ((?x13423 (* l_0_6_21 l_0_6_21)))
 (let ((?x13421 (* l_0_6_20 l_0_6_20)))
 (let ((?x13419 (* l_0_6_19 l_0_6_19)))
 (let ((?x13409 (* l_0_6_18 l_0_6_18)))
 (let ((?x13420 (- (- (- (* (- l_0_6_16) l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x13409) ?x13419)))
 (let ((?x13434 (+ (+ (+ (+ (+ (- (- ?x13420 ?x13421) ?x13423) ?x13425) ?x13427) ?x13429) ?x13431) ?x13433)))
 (= (+ ?x13434 ?x13435) 0.0))))))))))))))
(assert
 (let ((?x13481 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x13478 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x13475 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x13472 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x13469 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x13466 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x13463 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x13460 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x13457 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x12962 (* 2.0 l_0_6_18)))
 (let ((?x13454 (* ?x12962 l_0_6_24)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x13452 (* ?x12930 l_0_6_23)))
 (let ((?x13461 (- (- (- (- (* (* (- 2.0) l_0_6_16) l_0_6_22) ?x13452) ?x13454) ?x13457) ?x13460)))
 (let ((?x13482 (+ (+ (+ (+ (+ (+ (- ?x13461 ?x13463) ?x13466) ?x13469) ?x13472) ?x13475) ?x13478) ?x13481)))
 (= ?x13482 0.0)))))))))))))))))
(assert
 (let ((?x13537 (* l_0_6_56 l_0_6_56)))
 (let ((?x13535 (* l_0_6_55 l_0_6_55)))
 (let ((?x13533 (* l_0_6_54 l_0_6_54)))
 (let ((?x13531 (* l_0_6_53 l_0_6_53)))
 (let ((?x13529 (* l_0_6_52 l_0_6_52)))
 (let ((?x13527 (* l_0_6_51 l_0_6_51)))
 (let ((?x13525 (* l_0_6_50 l_0_6_50)))
 (let ((?x13523 (* l_0_6_28 l_0_6_28)))
 (let ((?x13521 (* l_0_6_27 l_0_6_27)))
 (let ((?x13519 (* l_0_6_26 l_0_6_26)))
 (let ((?x13508 (* l_0_6_25 l_0_6_25)))
 (let ((?x13505 (* l_0_6_24 l_0_6_24)))
 (let ((?x13518 (- (- (- (* (- l_0_6_22) l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x13505) ?x13508)))
 (let ((?x13532 (+ (+ (+ (+ (- (- (- ?x13518 ?x13519) ?x13521) ?x13523) ?x13525) ?x13527) ?x13529) ?x13531)))
 (= (+ (+ (+ ?x13532 ?x13533) ?x13535) ?x13537) 0.0))))))))))))))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12780 (* ?x12779 l_0_6_30)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_2) ?x12780) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12786 (* ?x12779 l_0_6_32)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_4) ?x12786) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12796 (* ?x12779 l_0_6_35)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_7) ?x12796) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12806 (* ?x12779 l_0_6_39)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_11) ?x12806) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12816 (* ?x12779 l_0_6_44)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_16) ?x12816) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12826 (* ?x12779 l_0_6_50)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_22) ?x12826) 0.0))))
(assert
 (let ((?x12845 (* l_0_6_31 l_0_6_31)))
 (let ((?x12843 (* l_0_6_30 l_0_6_30)))
 (= (- (- (+ (* l_0_6_2 l_0_6_2) (* l_0_6_3 l_0_6_3)) ?x12843) ?x12845) 0.0))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12867 (* ?x12866 l_0_6_33)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12864 (* ?x12863 l_0_6_32)))
 (let ((?x12860 (* 2.0 l_0_6_3)))
 (let ((?x12861 (* ?x12860 l_0_6_5)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_4) ?x12861) ?x12864) ?x12867) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12890 (* ?x12866 l_0_6_36)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12888 (* ?x12863 l_0_6_35)))
 (let ((?x12860 (* 2.0 l_0_6_3)))
 (let ((?x12881 (* ?x12860 l_0_6_8)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_7) ?x12881) ?x12888) ?x12890) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12915 (* ?x12866 l_0_6_40)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12913 (* ?x12863 l_0_6_39)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x12911 (* ?x12905 l_0_6_3)))
 (= (- (- (+ (* (* 2.0 l_0_6_11) l_0_6_2) ?x12911) ?x12913) ?x12915) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12940 (* ?x12866 l_0_6_45)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12938 (* ?x12863 l_0_6_44)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x12936 (* ?x12930 l_0_6_3)))
 (= (- (- (+ (* (* 2.0 l_0_6_16) l_0_6_2) ?x12936) ?x12938) ?x12940) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12973 (* ?x12866 l_0_6_51)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12971 (* ?x12863 l_0_6_50)))
 (let ((?x12968 (* 2.0 l_0_6_23)))
 (let ((?x12969 (* ?x12968 l_0_6_3)))
 (let ((?x12965 (* 2.0 l_0_6_2)))
 (let ((?x12966 (* ?x12965 l_0_6_22)))
 (= (- (- (+ ?x12966 ?x12969) ?x12971) ?x12973) 0.0))))))))))
(assert
 (let ((?x13037 (* l_0_6_6 l_0_6_6)))
 (let ((?x13035 (* l_0_6_5 l_0_6_5)))
 (let ((?x13033 (* l_0_6_4 l_0_6_4)))
 (let ((?x13031 (* l_0_6_34 l_0_6_34)))
 (let ((?x4262 (+ (- (- (* (- l_0_6_32) l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x13031) ?x13033)))
 (= (+ (+ ?x4262 ?x13035) ?x13037) 0.0)))))))
(assert
 (let ((?x13063 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x13060 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x13057 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x13054 (* ?x12981 l_0_6_37)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x13052 (* ?x12978 l_0_6_36)))
 (let ((?x13576 (+ (+ (- (- (* (* (- 2.0) l_0_6_32) l_0_6_35) ?x13052) ?x13054) ?x13057) ?x13060)))
 (= (+ ?x13576 ?x13063) 0.0))))))))))
(assert
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x13098 (* ?x12981 l_0_6_41)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x13096 (* ?x12978 l_0_6_40)))
 (let ((?x12975 (* 2.0 l_0_6_32)))
 (let ((?x13094 (* ?x12975 l_0_6_39)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13092 (* ?x13091 l_0_6_6)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13089 (* ?x12905 l_0_6_5)))
 (let ((?x4507 (- (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x13089) ?x13092) ?x13094) ?x13096)))
 (= (- ?x4507 ?x13098) 0.0)))))))))))))
(assert
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x13127 (* ?x12981 l_0_6_52)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x13125 (* ?x12978 l_0_6_51)))
 (let ((?x12975 (* 2.0 l_0_6_32)))
 (let ((?x13123 (* ?x12975 l_0_6_50)))
 (let ((?x13120 (* 2.0 l_0_6_24)))
 (let ((?x13121 (* ?x13120 l_0_6_6)))
 (let ((?x12968 (* 2.0 l_0_6_23)))
 (let ((?x3509 (* ?x12968 l_0_6_5)))
 (let ((?x4551 (- (- (+ (+ (* (* 2.0 l_0_6_22) l_0_6_4) ?x3509) ?x13121) ?x13123) ?x13125)))
 (= (- ?x4551 ?x13127) 0.0)))))))))))))
(assert
 (let ((?x13158 (* l_0_6_9 l_0_6_9)))
 (let ((?x13156 (* l_0_6_8 l_0_6_8)))
 (let ((?x13154 (* l_0_6_7 l_0_6_7)))
 (let ((?x13152 (* l_0_6_38 l_0_6_38)))
 (let ((?x13150 (* l_0_6_37 l_0_6_37)))
 (let ((?x13148 (* l_0_6_36 l_0_6_36)))
 (let ((?x4599 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x13148) ?x13150)))
 (= (+ (+ (+ (- ?x4599 ?x13152) ?x13154) ?x13156) ?x13158) 0.0)))))))))
(assert
 (let ((?x13191 (* 2.0 l_0_6_38)))
 (let ((?x13192 (* ?x13191 l_0_6_42)))
 (let ((?x13188 (* 2.0 l_0_6_37)))
 (let ((?x13189 (* ?x13188 l_0_6_41)))
 (let ((?x13185 (* 2.0 l_0_6_36)))
 (let ((?x13186 (* ?x13185 l_0_6_40)))
 (let ((?x13182 (* 2.0 l_0_6_35)))
 (let ((?x13183 (* ?x13182 l_0_6_39)))
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12973 (* ?x12866 l_0_6_51)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12971 (* ?x12863 l_0_6_50)))
 (let ((?x12968 (* 2.0 l_0_6_23)))
 (let ((?x12969 (* ?x12968 l_0_6_3)))
 (let ((?x12965 (* 2.0 l_0_6_2)))
 (let ((?x12966 (* ?x12965 l_0_6_22)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13174 (* ?x13091 l_0_6_9)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13172 (* ?x12905 l_0_6_8)))
 (let ((?x3566 (* 2.0 l_0_6_11)))
 (let ((?x13170 (* ?x3566 l_0_6_7)))
 (let ((?x4617 (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x13170) ?x13172) ?x13174)))
 (let ((?x13600 (- (- (- (- (- (+ (+ ?x4617 ?x12966) ?x12969) ?x12971) ?x12973) ?x13183) ?x13186) ?x13189)))
 (= (- ?x13600 ?x13192) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x13191 (* 2.0 l_0_6_38)))
 (let ((?x13232 (* ?x13191 l_0_6_47)))
 (let ((?x13188 (* 2.0 l_0_6_37)))
 (let ((?x13230 (* ?x13188 l_0_6_46)))
 (let ((?x13185 (* 2.0 l_0_6_36)))
 (let ((?x13228 (* ?x13185 l_0_6_45)))
 (let ((?x13182 (* 2.0 l_0_6_35)))
 (let ((?x13226 (* ?x13182 l_0_6_44)))
 (let ((?x12962 (* 2.0 l_0_6_18)))
 (let ((?x13224 (* ?x12962 l_0_6_9)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x13215 (* ?x12930 l_0_6_8)))
 (let ((?x12952 (* 2.0 l_0_6_16)))
 (let ((?x13211 (* ?x12952 l_0_6_7)))
 (let ((?x4782 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_19) ?x13211) ?x13215) ?x13224) ?x13226)))
 (= (- (- (- ?x4782 ?x13228) ?x13230) ?x13232) 0.0)))))))))))))))))
(assert
 (let ((?x13191 (* 2.0 l_0_6_38)))
 (let ((?x13259 (* ?x13191 l_0_6_53)))
 (let ((?x13188 (* 2.0 l_0_6_37)))
 (let ((?x13257 (* ?x13188 l_0_6_52)))
 (let ((?x13185 (* 2.0 l_0_6_36)))
 (let ((?x13255 (* ?x13185 l_0_6_51)))
 (let ((?x13182 (* 2.0 l_0_6_35)))
 (let ((?x13253 (* ?x13182 l_0_6_50)))
 (let ((?x13120 (* 2.0 l_0_6_24)))
 (let ((?x13251 (* ?x13120 l_0_6_9)))
 (let ((?x12968 (* 2.0 l_0_6_23)))
 (let ((?x3703 (* ?x12968 l_0_6_8)))
 (let ((?x3702 (* 2.0 l_0_6_22)))
 (let ((?x3730 (* ?x3702 l_0_6_7)))
 (let ((?x4902 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_25) ?x3730) ?x3703) ?x13251) ?x13253)))
 (= (- (- (- ?x4902 ?x13255) ?x13257) ?x13259) 0.0)))))))))))))))))
(assert
 (let ((?x13301 (* l_0_6_43 l_0_6_43)))
 (let ((?x13299 (* l_0_6_42 l_0_6_42)))
 (let ((?x13297 (* l_0_6_41 l_0_6_41)))
 (let ((?x13295 (* l_0_6_40 l_0_6_40)))
 (let ((?x13293 (* l_0_6_39 l_0_6_39)))
 (let ((?x13291 (* l_0_6_15 l_0_6_15)))
 (let ((?x13289 (* l_0_6_14 l_0_6_14)))
 (let ((?x13280 (* l_0_6_13 l_0_6_13)))
 (let ((?x4972 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x13280) ?x13289)))
 (= (- (- (- (- (- (+ ?x4972 ?x13291) ?x13293) ?x13295) ?x13297) ?x13299) ?x13301) 0.0)))))))))))
(assert
 (let ((?x13345 (* 2.0 l_0_6_43)))
 (let ((?x13346 (* ?x13345 l_0_6_48)))
 (let ((?x13342 (* 2.0 l_0_6_42)))
 (let ((?x13343 (* ?x13342 l_0_6_47)))
 (let ((?x13339 (* 2.0 l_0_6_41)))
 (let ((?x13340 (* ?x13339 l_0_6_46)))
 (let ((?x13336 (* 2.0 l_0_6_40)))
 (let ((?x13337 (* ?x13336 l_0_6_45)))
 (let ((?x13333 (* 2.0 l_0_6_39)))
 (let ((?x13334 (* ?x13333 l_0_6_44)))
 (let ((?x13330 (* 2.0 l_0_6_15)))
 (let ((?x13331 (* ?x13330 l_0_6_20)))
 (let ((?x13327 (* 2.0 l_0_6_14)))
 (let ((?x13328 (* ?x13327 l_0_6_19)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13325 (* ?x13091 l_0_6_18)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13323 (* ?x12905 l_0_6_17)))
 (let ((?x5065 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_16) ?x13323) ?x13325) ?x13328) ?x13331)))
 (= (- (- (- (- (- ?x5065 ?x13334) ?x13337) ?x13340) ?x13343) ?x13346) 0.0)))))))))))))))))))))
(assert
 (let ((?x13345 (* 2.0 l_0_6_43)))
 (let ((?x13393 (* ?x13345 l_0_6_54)))
 (let ((?x13342 (* 2.0 l_0_6_42)))
 (let ((?x13391 (* ?x13342 l_0_6_53)))
 (let ((?x13339 (* 2.0 l_0_6_41)))
 (let ((?x13389 (* ?x13339 l_0_6_52)))
 (let ((?x13336 (* 2.0 l_0_6_40)))
 (let ((?x13387 (* ?x13336 l_0_6_51)))
 (let ((?x13333 (* 2.0 l_0_6_39)))
 (let ((?x13385 (* ?x13333 l_0_6_50)))
 (let ((?x13330 (* 2.0 l_0_6_15)))
 (let ((?x13383 (* ?x13330 l_0_6_26)))
 (let ((?x13327 (* 2.0 l_0_6_14)))
 (let ((?x13373 (* ?x13327 l_0_6_25)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13370 (* ?x13091 l_0_6_24)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13366 (* ?x12905 l_0_6_23)))
 (let ((?x5174 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_22) ?x13366) ?x13370) ?x13373) ?x13383)))
 (= (- (- (- (- (- ?x5174 ?x13385) ?x13387) ?x13389) ?x13391) ?x13393) 0.0)))))))))))))))))))))
(assert
 (let ((?x13435 (* l_0_6_49 l_0_6_49)))
 (let ((?x13433 (* l_0_6_48 l_0_6_48)))
 (let ((?x13431 (* l_0_6_47 l_0_6_47)))
 (let ((?x13429 (* l_0_6_46 l_0_6_46)))
 (let ((?x13427 (* l_0_6_45 l_0_6_45)))
 (let ((?x13425 (* l_0_6_44 l_0_6_44)))
 (let ((?x13423 (* l_0_6_21 l_0_6_21)))
 (let ((?x13421 (* l_0_6_20 l_0_6_20)))
 (let ((?x13419 (* l_0_6_19 l_0_6_19)))
 (let ((?x13409 (* l_0_6_18 l_0_6_18)))
 (let ((?x5315 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x13409) ?x13419)))
 (let ((?x5215 (- (- (- (- (- (+ (+ ?x5315 ?x13421) ?x13423) ?x13425) ?x13427) ?x13429) ?x13431) ?x13433)))
 (= (- ?x5215 ?x13435) 0.0))))))))))))))
(assert
 (let ((?x13481 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x13478 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x13475 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x13472 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x13469 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x13466 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x13463 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x13460 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x13457 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x12962 (* 2.0 l_0_6_18)))
 (let ((?x13454 (* ?x12962 l_0_6_24)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x13452 (* ?x12930 l_0_6_23)))
 (let ((?x5434 (+ (+ (+ (+ (* (* 2.0 l_0_6_16) l_0_6_22) ?x13452) ?x13454) ?x13457) ?x13460)))
 (let ((?x5382 (- (- (- (- (- (- (+ ?x5434 ?x13463) ?x13466) ?x13469) ?x13472) ?x13475) ?x13478) ?x13481)))
 (= ?x5382 0.0)))))))))))))))))
(assert
 (let ((?x13537 (* l_0_6_56 l_0_6_56)))
 (let ((?x13535 (* l_0_6_55 l_0_6_55)))
 (let ((?x13533 (* l_0_6_54 l_0_6_54)))
 (let ((?x13531 (* l_0_6_53 l_0_6_53)))
 (let ((?x13529 (* l_0_6_52 l_0_6_52)))
 (let ((?x13527 (* l_0_6_51 l_0_6_51)))
 (let ((?x13525 (* l_0_6_50 l_0_6_50)))
 (let ((?x13523 (* l_0_6_28 l_0_6_28)))
 (let ((?x13521 (* l_0_6_27 l_0_6_27)))
 (let ((?x13519 (* l_0_6_26 l_0_6_26)))
 (let ((?x13508 (* l_0_6_25 l_0_6_25)))
 (let ((?x13505 (* l_0_6_24 l_0_6_24)))
 (let ((?x5571 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x13505) ?x13508)))
 (let ((?x5581 (- (- (- (- (+ (+ (+ ?x5571 ?x13519) ?x13521) ?x13523) ?x13525) ?x13527) ?x13529) ?x13531)))
 (= (- (- (- ?x5581 ?x13533) ?x13535) ?x13537) 0.0))))))))))))))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12780 (* ?x12779 l_0_6_30)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_2) ?x12780) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12786 (* ?x12779 l_0_6_32)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_4) ?x12786) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12796 (* ?x12779 l_0_6_35)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_7) ?x12796) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12806 (* ?x12779 l_0_6_39)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_11) ?x12806) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12816 (* ?x12779 l_0_6_44)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_16) ?x12816) 0.0))))
(assert
 (let ((?x12779 (* 2.0 l_0_6_29)))
 (let ((?x12826 (* ?x12779 l_0_6_50)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_22) ?x12826) 0.0))))
(assert
 (let ((?x12845 (* l_0_6_31 l_0_6_31)))
 (let ((?x12843 (* l_0_6_30 l_0_6_30)))
 (= (- (- (+ (* l_0_6_2 l_0_6_2) (* l_0_6_3 l_0_6_3)) ?x12843) ?x12845) 0.0))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12867 (* ?x12866 l_0_6_33)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12864 (* ?x12863 l_0_6_32)))
 (let ((?x12860 (* 2.0 l_0_6_3)))
 (let ((?x12861 (* ?x12860 l_0_6_5)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_4) ?x12861) ?x12864) ?x12867) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12890 (* ?x12866 l_0_6_36)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12888 (* ?x12863 l_0_6_35)))
 (let ((?x12860 (* 2.0 l_0_6_3)))
 (let ((?x12881 (* ?x12860 l_0_6_8)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_7) ?x12881) ?x12888) ?x12890) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12915 (* ?x12866 l_0_6_40)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12913 (* ?x12863 l_0_6_39)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x12911 (* ?x12905 l_0_6_3)))
 (= (- (- (+ (* (* 2.0 l_0_6_11) l_0_6_2) ?x12911) ?x12913) ?x12915) 0.0))))))))
(assert
 (let ((?x12866 (* 2.0 l_0_6_31)))
 (let ((?x12940 (* ?x12866 l_0_6_45)))
 (let ((?x12863 (* 2.0 l_0_6_30)))
 (let ((?x12938 (* ?x12863 l_0_6_44)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x12936 (* ?x12930 l_0_6_3)))
 (= (- (- (+ (* (* 2.0 l_0_6_16) l_0_6_2) ?x12936) ?x12938) ?x12940) 0.0))))))))
(assert
 (let ((?x13037 (* l_0_6_6 l_0_6_6)))
 (let ((?x13035 (* l_0_6_5 l_0_6_5)))
 (let ((?x13033 (* l_0_6_4 l_0_6_4)))
 (let ((?x13031 (* l_0_6_34 l_0_6_34)))
 (let ((?x4262 (+ (- (- (* (- l_0_6_32) l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x13031) ?x13033)))
 (= (+ (+ ?x4262 ?x13035) ?x13037) 0.0)))))))
(assert
 (let ((?x13063 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x13060 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x13057 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x13054 (* ?x12981 l_0_6_37)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x13052 (* ?x12978 l_0_6_36)))
 (let ((?x13576 (+ (+ (- (- (* (* (- 2.0) l_0_6_32) l_0_6_35) ?x13052) ?x13054) ?x13057) ?x13060)))
 (= (+ ?x13576 ?x13063) 0.0))))))))))
(assert
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x13098 (* ?x12981 l_0_6_41)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x13096 (* ?x12978 l_0_6_40)))
 (let ((?x12975 (* 2.0 l_0_6_32)))
 (let ((?x13094 (* ?x12975 l_0_6_39)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13092 (* ?x13091 l_0_6_6)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13089 (* ?x12905 l_0_6_5)))
 (let ((?x4507 (- (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x13089) ?x13092) ?x13094) ?x13096)))
 (= (- ?x4507 ?x13098) 0.0)))))))))))))
(assert
 (let ((?x12981 (* 2.0 l_0_6_34)))
 (let ((?x13127 (* ?x12981 l_0_6_52)))
 (let ((?x12978 (* 2.0 l_0_6_33)))
 (let ((?x13125 (* ?x12978 l_0_6_51)))
 (let ((?x12975 (* 2.0 l_0_6_32)))
 (let ((?x13123 (* ?x12975 l_0_6_50)))
 (let ((?x13120 (* 2.0 l_0_6_24)))
 (let ((?x13121 (* ?x13120 l_0_6_6)))
 (let ((?x12968 (* 2.0 l_0_6_23)))
 (let ((?x3509 (* ?x12968 l_0_6_5)))
 (let ((?x4551 (- (- (+ (+ (* (* 2.0 l_0_6_22) l_0_6_4) ?x3509) ?x13121) ?x13123) ?x13125)))
 (= (- ?x4551 ?x13127) 0.0)))))))))))))
(assert
 (let ((?x13158 (* l_0_6_9 l_0_6_9)))
 (let ((?x13156 (* l_0_6_8 l_0_6_8)))
 (let ((?x13154 (* l_0_6_7 l_0_6_7)))
 (let ((?x13152 (* l_0_6_38 l_0_6_38)))
 (let ((?x13150 (* l_0_6_37 l_0_6_37)))
 (let ((?x13148 (* l_0_6_36 l_0_6_36)))
 (let ((?x4599 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x13148) ?x13150)))
 (= (+ (+ (+ (- ?x4599 ?x13152) ?x13154) ?x13156) ?x13158) 0.0)))))))))
(assert
 (let ((?x13191 (* 2.0 l_0_6_38)))
 (let ((?x13192 (* ?x13191 l_0_6_42)))
 (let ((?x13188 (* 2.0 l_0_6_37)))
 (let ((?x13189 (* ?x13188 l_0_6_41)))
 (let ((?x13185 (* 2.0 l_0_6_36)))
 (let ((?x13186 (* ?x13185 l_0_6_40)))
 (let ((?x13182 (* 2.0 l_0_6_35)))
 (let ((?x13183 (* ?x13182 l_0_6_39)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13174 (* ?x13091 l_0_6_9)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13172 (* ?x12905 l_0_6_8)))
 (let ((?x3566 (* 2.0 l_0_6_11)))
 (let ((?x13170 (* ?x3566 l_0_6_7)))
 (let ((?x4617 (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x13170) ?x13172) ?x13174)))
 (= (- (- (- (- ?x4617 ?x13183) ?x13186) ?x13189) ?x13192) 0.0)))))))))))))))))
(assert
 (let ((?x13191 (* 2.0 l_0_6_38)))
 (let ((?x13232 (* ?x13191 l_0_6_47)))
 (let ((?x13188 (* 2.0 l_0_6_37)))
 (let ((?x13230 (* ?x13188 l_0_6_46)))
 (let ((?x13185 (* 2.0 l_0_6_36)))
 (let ((?x13228 (* ?x13185 l_0_6_45)))
 (let ((?x13182 (* 2.0 l_0_6_35)))
 (let ((?x13226 (* ?x13182 l_0_6_44)))
 (let ((?x12962 (* 2.0 l_0_6_18)))
 (let ((?x13224 (* ?x12962 l_0_6_9)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x13215 (* ?x12930 l_0_6_8)))
 (let ((?x12952 (* 2.0 l_0_6_16)))
 (let ((?x13211 (* ?x12952 l_0_6_7)))
 (let ((?x4782 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_19) ?x13211) ?x13215) ?x13224) ?x13226)))
 (= (- (- (- ?x4782 ?x13228) ?x13230) ?x13232) 0.0)))))))))))))))))
(assert
 (let ((?x13191 (* 2.0 l_0_6_38)))
 (let ((?x13259 (* ?x13191 l_0_6_53)))
 (let ((?x13188 (* 2.0 l_0_6_37)))
 (let ((?x13257 (* ?x13188 l_0_6_52)))
 (let ((?x13185 (* 2.0 l_0_6_36)))
 (let ((?x13255 (* ?x13185 l_0_6_51)))
 (let ((?x13182 (* 2.0 l_0_6_35)))
 (let ((?x13253 (* ?x13182 l_0_6_50)))
 (let ((?x13120 (* 2.0 l_0_6_24)))
 (let ((?x13251 (* ?x13120 l_0_6_9)))
 (let ((?x12968 (* 2.0 l_0_6_23)))
 (let ((?x3703 (* ?x12968 l_0_6_8)))
 (let ((?x3702 (* 2.0 l_0_6_22)))
 (let ((?x3730 (* ?x3702 l_0_6_7)))
 (let ((?x4902 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_25) ?x3730) ?x3703) ?x13251) ?x13253)))
 (= (- (- (- ?x4902 ?x13255) ?x13257) ?x13259) 0.0)))))))))))))))))
(assert
 (let ((?x13301 (* l_0_6_43 l_0_6_43)))
 (let ((?x13299 (* l_0_6_42 l_0_6_42)))
 (let ((?x13297 (* l_0_6_41 l_0_6_41)))
 (let ((?x13295 (* l_0_6_40 l_0_6_40)))
 (let ((?x13293 (* l_0_6_39 l_0_6_39)))
 (let ((?x13291 (* l_0_6_15 l_0_6_15)))
 (let ((?x13289 (* l_0_6_14 l_0_6_14)))
 (let ((?x13280 (* l_0_6_13 l_0_6_13)))
 (let ((?x4972 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x13280) ?x13289)))
 (= (- (- (- (- (- (+ ?x4972 ?x13291) ?x13293) ?x13295) ?x13297) ?x13299) ?x13301) 0.0)))))))))))
(assert
 (let ((?x13345 (* 2.0 l_0_6_43)))
 (let ((?x13346 (* ?x13345 l_0_6_48)))
 (let ((?x13342 (* 2.0 l_0_6_42)))
 (let ((?x13343 (* ?x13342 l_0_6_47)))
 (let ((?x13339 (* 2.0 l_0_6_41)))
 (let ((?x13340 (* ?x13339 l_0_6_46)))
 (let ((?x13336 (* 2.0 l_0_6_40)))
 (let ((?x13337 (* ?x13336 l_0_6_45)))
 (let ((?x13333 (* 2.0 l_0_6_39)))
 (let ((?x13334 (* ?x13333 l_0_6_44)))
 (let ((?x13330 (* 2.0 l_0_6_15)))
 (let ((?x13331 (* ?x13330 l_0_6_20)))
 (let ((?x13327 (* 2.0 l_0_6_14)))
 (let ((?x13328 (* ?x13327 l_0_6_19)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13325 (* ?x13091 l_0_6_18)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13323 (* ?x12905 l_0_6_17)))
 (let ((?x5065 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_16) ?x13323) ?x13325) ?x13328) ?x13331)))
 (= (- (- (- (- (- ?x5065 ?x13334) ?x13337) ?x13340) ?x13343) ?x13346) 0.0)))))))))))))))))))))
(assert
 (let ((?x13345 (* 2.0 l_0_6_43)))
 (let ((?x13393 (* ?x13345 l_0_6_54)))
 (let ((?x13342 (* 2.0 l_0_6_42)))
 (let ((?x13391 (* ?x13342 l_0_6_53)))
 (let ((?x13339 (* 2.0 l_0_6_41)))
 (let ((?x13389 (* ?x13339 l_0_6_52)))
 (let ((?x13336 (* 2.0 l_0_6_40)))
 (let ((?x13387 (* ?x13336 l_0_6_51)))
 (let ((?x13333 (* 2.0 l_0_6_39)))
 (let ((?x13385 (* ?x13333 l_0_6_50)))
 (let ((?x13330 (* 2.0 l_0_6_15)))
 (let ((?x13383 (* ?x13330 l_0_6_26)))
 (let ((?x13327 (* 2.0 l_0_6_14)))
 (let ((?x13373 (* ?x13327 l_0_6_25)))
 (let ((?x13091 (* 2.0 l_0_6_13)))
 (let ((?x13370 (* ?x13091 l_0_6_24)))
 (let ((?x12905 (* 2.0 l_0_6_12)))
 (let ((?x13366 (* ?x12905 l_0_6_23)))
 (let ((?x5174 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_22) ?x13366) ?x13370) ?x13373) ?x13383)))
 (= (- (- (- (- (- ?x5174 ?x13385) ?x13387) ?x13389) ?x13391) ?x13393) 0.0)))))))))))))))))))))
(assert
 (let ((?x13435 (* l_0_6_49 l_0_6_49)))
 (let ((?x13433 (* l_0_6_48 l_0_6_48)))
 (let ((?x13431 (* l_0_6_47 l_0_6_47)))
 (let ((?x13429 (* l_0_6_46 l_0_6_46)))
 (let ((?x13427 (* l_0_6_45 l_0_6_45)))
 (let ((?x13425 (* l_0_6_44 l_0_6_44)))
 (let ((?x13423 (* l_0_6_21 l_0_6_21)))
 (let ((?x13421 (* l_0_6_20 l_0_6_20)))
 (let ((?x13419 (* l_0_6_19 l_0_6_19)))
 (let ((?x13409 (* l_0_6_18 l_0_6_18)))
 (let ((?x5315 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x13409) ?x13419)))
 (let ((?x5215 (- (- (- (- (- (+ (+ ?x5315 ?x13421) ?x13423) ?x13425) ?x13427) ?x13429) ?x13431) ?x13433)))
 (= (- ?x5215 ?x13435) 0.0))))))))))))))
(assert
 (let ((?x13481 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x13478 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x13475 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x13472 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x13469 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x13466 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x13463 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x13460 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x13457 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x12962 (* 2.0 l_0_6_18)))
 (let ((?x13454 (* ?x12962 l_0_6_24)))
 (let ((?x12930 (* 2.0 l_0_6_17)))
 (let ((?x13452 (* ?x12930 l_0_6_23)))
 (let ((?x5434 (+ (+ (+ (+ (* (* 2.0 l_0_6_16) l_0_6_22) ?x13452) ?x13454) ?x13457) ?x13460)))
 (let ((?x5382 (- (- (- (- (- (- (+ ?x5434 ?x13463) ?x13466) ?x13469) ?x13472) ?x13475) ?x13478) ?x13481)))
 (= ?x5382 0.0)))))))))))))))))
(assert
 (let ((?x13537 (* l_0_6_56 l_0_6_56)))
 (let ((?x13535 (* l_0_6_55 l_0_6_55)))
 (let ((?x13533 (* l_0_6_54 l_0_6_54)))
 (let ((?x13531 (* l_0_6_53 l_0_6_53)))
 (let ((?x13529 (* l_0_6_52 l_0_6_52)))
 (let ((?x13527 (* l_0_6_51 l_0_6_51)))
 (let ((?x13525 (* l_0_6_50 l_0_6_50)))
 (let ((?x13523 (* l_0_6_28 l_0_6_28)))
 (let ((?x13521 (* l_0_6_27 l_0_6_27)))
 (let ((?x13519 (* l_0_6_26 l_0_6_26)))
 (let ((?x13508 (* l_0_6_25 l_0_6_25)))
 (let ((?x13505 (* l_0_6_24 l_0_6_24)))
 (let ((?x5571 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x13505) ?x13508)))
 (let ((?x5581 (- (- (- (- (+ (+ (+ ?x5571 ?x13519) ?x13521) ?x13523) ?x13525) ?x13527) ?x13529) ?x13531)))
 (= (- (- (- ?x5581 ?x13533) ?x13535) ?x13537) 0.0))))))))))))))))
(assert
 (let ((?x13613 (* l_0_6_85 l_0_6_85)))
 (let ((?x13612 (+ (* (- l_0_6_113) l_0_6_113) (* 1.0 (* l_0_6_57 l_0_6_57)))))
 (= (- ?x13612 ?x13613) 0.0))))
(assert
 (let ((?x13628 (+ (* (* (- 2.0) l_0_6_113) l_0_6_114) (* (* 2.0 l_0_6_57) l_0_6_58))))
 (= (- ?x13628 (* (* 2.0 l_0_6_85) l_0_6_86)) 0.0)))
(assert
 (let ((?x13650 (+ (* (* (- 2.0) l_0_6_113) l_0_6_116) (* (* 2.0 l_0_6_57) l_0_6_60))))
 (= (- ?x13650 (* (* 2.0 l_0_6_85) l_0_6_88)) 0.0)))
(assert
 (let ((?x13671 (+ (* (* (- 2.0) l_0_6_113) l_0_6_119) (* (* 2.0 l_0_6_57) l_0_6_63))))
 (= (- ?x13671 (* (* 2.0 l_0_6_85) l_0_6_91)) 0.0)))
(assert
 (let ((?x13692 (+ (* (* (- 2.0) l_0_6_113) l_0_6_123) (* (* 2.0 l_0_6_57) l_0_6_67))))
 (= (- ?x13692 (* (* 2.0 l_0_6_85) l_0_6_95)) 0.0)))
(assert
 (let ((?x13715 (- (* (* (- 2.0) l_0_6_100) l_0_6_85) (* (* 2.0 l_0_6_113) l_0_6_128))))
 (= (+ ?x13715 (* (* 2.0 l_0_6_57) l_0_6_72)) 0.0)))
(assert
 (let ((?x13735 (- (* (* (- 2.0) l_0_6_106) l_0_6_85) (* (* 2.0 l_0_6_113) l_0_6_134))))
 (= (+ ?x13735 (* (* 2.0 l_0_6_57) l_0_6_78)) 0.0)))
(assert
 (let ((?x13764 (* l_0_6_87 l_0_6_87)))
 (let ((?x13762 (* l_0_6_86 l_0_6_86)))
 (let ((?x13758 (+ (- (* (- l_0_6_114) l_0_6_114) (* l_0_6_115 l_0_6_115)) (* 1.0 (* l_0_6_58 l_0_6_58)))))
 (= (- (- (+ ?x13758 (* 1.0 (* l_0_6_59 l_0_6_59))) ?x13762) ?x13764) 0.0)))))
(assert
 (let ((?x13787 (- (* (* (- 2.0) l_0_6_114) l_0_6_116) (* (* 2.0 l_0_6_115) l_0_6_117))))
 (let ((?x13791 (+ (+ ?x13787 (* (* 2.0 l_0_6_58) l_0_6_60)) (* (* 2.0 l_0_6_59) l_0_6_61))))
 (let ((?x13797 (- (- ?x13791 (* (* 2.0 l_0_6_86) l_0_6_88)) (* (* 2.0 l_0_6_87) l_0_6_89))))
 (= ?x13797 0.0)))))
(assert
 (let ((?x13831 (- (* (* (- 2.0) l_0_6_114) l_0_6_119) (* (* 2.0 l_0_6_115) l_0_6_120))))
 (let ((?x13835 (+ (+ ?x13831 (* (* 2.0 l_0_6_58) l_0_6_63)) (* (* 2.0 l_0_6_59) l_0_6_64))))
 (let ((?x13839 (- (- ?x13835 (* (* 2.0 l_0_6_86) l_0_6_91)) (* (* 2.0 l_0_6_87) l_0_6_92))))
 (= ?x13839 0.0)))))
(assert
 (let ((?x13873 (- (* (* (- 2.0) l_0_6_114) l_0_6_123) (* (* 2.0 l_0_6_115) l_0_6_124))))
 (let ((?x13877 (+ (+ ?x13873 (* (* 2.0 l_0_6_58) l_0_6_67)) (* (* 2.0 l_0_6_59) l_0_6_68))))
 (let ((?x13881 (- (- ?x13877 (* (* 2.0 l_0_6_86) l_0_6_95)) (* (* 2.0 l_0_6_87) l_0_6_96))))
 (= ?x13881 0.0)))))
(assert
 (let ((?x13915 (- (* (* (- 2.0) l_0_6_100) l_0_6_86) (* (* 2.0 l_0_6_101) l_0_6_87))))
 (let ((?x13919 (- (- ?x13915 (* (* 2.0 l_0_6_114) l_0_6_128)) (* (* 2.0 l_0_6_115) l_0_6_129))))
 (let ((?x13923 (+ (+ ?x13919 (* (* 2.0 l_0_6_58) l_0_6_72)) (* (* 2.0 l_0_6_59) l_0_6_73))))
 (= ?x13923 0.0)))))
(assert
 (let ((?x13971 (* l_0_6_90 l_0_6_90)))
 (let ((?x13969 (* l_0_6_89 l_0_6_89)))
 (let ((?x13967 (* l_0_6_88 l_0_6_88)))
 (let ((?x13956 (* l_0_6_118 l_0_6_118)))
 (let ((?x13957 (- (- (* (- l_0_6_116) l_0_6_116) (* l_0_6_117 l_0_6_117)) ?x13956)))
 (let ((?x13963 (+ (+ ?x13957 (* 1.0 (* l_0_6_60 l_0_6_60))) (* 1.0 (* l_0_6_61 l_0_6_61)))))
 (let ((?x13972 (- (- (- (+ ?x13963 (* 1.0 (* l_0_6_62 l_0_6_62))) ?x13967) ?x13969) ?x13971)))
 (= ?x13972 0.0)))))))))
(assert
 (let ((?x14001 (- (* (* (- 2.0) l_0_6_116) l_0_6_119) (* (* 2.0 l_0_6_117) l_0_6_120))))
 (let ((?x14005 (+ (- ?x14001 (* (* 2.0 l_0_6_118) l_0_6_121)) (* (* 2.0 l_0_6_60) l_0_6_63))))
 (let ((?x14009 (+ (+ ?x14005 (* (* 2.0 l_0_6_61) l_0_6_64)) (* (* 2.0 l_0_6_62) l_0_6_65))))
 (let ((?x14015 (- (- ?x14009 (* (* 2.0 l_0_6_88) l_0_6_91)) (* (* 2.0 l_0_6_89) l_0_6_92))))
 (= (- ?x14015 (* (* 2.0 l_0_6_90) l_0_6_93)) 0.0))))))
(assert
 (let ((?x14067 (- (* (* (- 2.0) l_0_6_116) l_0_6_123) (* (* 2.0 l_0_6_117) l_0_6_124))))
 (let ((?x14071 (+ (- ?x14067 (* (* 2.0 l_0_6_118) l_0_6_125)) (* (* 2.0 l_0_6_60) l_0_6_67))))
 (let ((?x14075 (+ (+ ?x14071 (* (* 2.0 l_0_6_61) l_0_6_68)) (* (* 2.0 l_0_6_62) l_0_6_69))))
 (let ((?x14079 (- (- ?x14075 (* (* 2.0 l_0_6_88) l_0_6_95)) (* (* 2.0 l_0_6_89) l_0_6_96))))
 (= (- ?x14079 (* (* 2.0 l_0_6_90) l_0_6_97)) 0.0))))))
(assert
 (let ((?x14130 (- (* (* (- 2.0) l_0_6_106) l_0_6_88) (* (* 2.0 l_0_6_107) l_0_6_89))))
 (let ((?x14135 (- (- ?x14130 (* (* 2.0 l_0_6_108) l_0_6_90)) (* (* 2.0 l_0_6_116) l_0_6_134))))
 (let ((?x14139 (- (- ?x14135 (* (* 2.0 l_0_6_117) l_0_6_135)) (* (* 2.0 l_0_6_118) l_0_6_136))))
 (let ((?x14143 (+ (+ ?x14139 (* (* 2.0 l_0_6_60) l_0_6_78)) (* (* 2.0 l_0_6_61) l_0_6_79))))
 (= (+ ?x14143 (* (* 2.0 l_0_6_62) l_0_6_80)) 0.0))))))
(assert
 (let ((?x14214 (* l_0_6_94 l_0_6_94)))
 (let ((?x14212 (* l_0_6_93 l_0_6_93)))
 (let ((?x14210 (* l_0_6_92 l_0_6_92)))
 (let ((?x14208 (* l_0_6_91 l_0_6_91)))
 (let ((?x14194 (* l_0_6_122 l_0_6_122)))
 (let ((?x14192 (* l_0_6_121 l_0_6_121)))
 (let ((?x14193 (- (- (* (- l_0_6_119) l_0_6_119) (* l_0_6_120 l_0_6_120)) ?x14192)))
 (let ((?x14201 (+ (+ (- ?x14193 ?x14194) (* 1.0 (* l_0_6_63 l_0_6_63))) (* 1.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x14207 (+ (+ ?x14201 (* 1.0 (* l_0_6_65 l_0_6_65))) (* 1.0 (* l_0_6_66 l_0_6_66)))))
 (= (- (- (- (- ?x14207 ?x14208) ?x14210) ?x14212) ?x14214) 0.0)))))))))))
(assert
 (let ((?x14250 (- (* (* (- 2.0) l_0_6_100) l_0_6_91) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x14255 (- (- ?x14250 (* (* 2.0 l_0_6_102) l_0_6_93)) (* (* 2.0 l_0_6_103) l_0_6_94))))
 (let ((?x14259 (- (- ?x14255 (* (* 2.0 l_0_6_119) l_0_6_128)) (* (* 2.0 l_0_6_120) l_0_6_129))))
 (let ((?x14263 (- (- ?x14259 (* (* 2.0 l_0_6_121) l_0_6_130)) (* (* 2.0 l_0_6_122) l_0_6_131))))
 (let ((?x14267 (+ (+ ?x14263 (* (* 2.0 l_0_6_63) l_0_6_72)) (* (* 2.0 l_0_6_64) l_0_6_73))))
 (let ((?x14271 (+ (+ ?x14267 (* (* 2.0 l_0_6_65) l_0_6_74)) (* (* 2.0 l_0_6_66) l_0_6_75))))
 (= ?x14271 0.0))))))))
(assert
 (let ((?x14322 (- (* (* (- 2.0) l_0_6_106) l_0_6_91) (* (* 2.0 l_0_6_107) l_0_6_92))))
 (let ((?x14335 (- (- ?x14322 (* (* 2.0 l_0_6_108) l_0_6_93)) (* (* 2.0 l_0_6_109) l_0_6_94))))
 (let ((?x14339 (- (- ?x14335 (* (* 2.0 l_0_6_119) l_0_6_134)) (* (* 2.0 l_0_6_120) l_0_6_135))))
 (let ((?x14343 (- (- ?x14339 (* (* 2.0 l_0_6_121) l_0_6_136)) (* (* 2.0 l_0_6_122) l_0_6_137))))
 (let ((?x14347 (+ (+ ?x14343 (* (* 2.0 l_0_6_63) l_0_6_78)) (* (* 2.0 l_0_6_64) l_0_6_79))))
 (let ((?x14351 (+ (+ ?x14347 (* (* 2.0 l_0_6_65) l_0_6_80)) (* (* 2.0 l_0_6_66) l_0_6_81))))
 (= ?x14351 0.0))))))))
(assert
 (let ((?x14437 (* l_0_6_99 l_0_6_99)))
 (let ((?x14435 (* l_0_6_98 l_0_6_98)))
 (let ((?x14433 (* l_0_6_97 l_0_6_97)))
 (let ((?x14431 (* l_0_6_96 l_0_6_96)))
 (let ((?x14429 (* l_0_6_95 l_0_6_95)))
 (let ((?x14412 (* l_0_6_127 l_0_6_127)))
 (let ((?x14410 (* l_0_6_126 l_0_6_126)))
 (let ((?x14401 (* l_0_6_125 l_0_6_125)))
 (let ((?x14409 (- (- (* (- l_0_6_123) l_0_6_123) (* l_0_6_124 l_0_6_124)) ?x14401)))
 (let ((?x14419 (+ (+ (- (- ?x14409 ?x14410) ?x14412) (* 1.0 (* l_0_6_67 l_0_6_67))) (* 1.0 (* l_0_6_68 l_0_6_68)))))
 (let ((?x14425 (+ (+ ?x14419 (* 1.0 (* l_0_6_69 l_0_6_69))) (* 1.0 (* l_0_6_70 l_0_6_70)))))
 (let ((?x14434 (- (- (- (+ ?x14425 (* 1.0 (* l_0_6_71 l_0_6_71))) ?x14429) ?x14431) ?x14433)))
 (= (- (- ?x14434 ?x14435) ?x14437) 0.0))))))))))))))
(assert
 (let ((?x14480 (- (* (* (- 2.0) l_0_6_100) l_0_6_95) (* (* 2.0 l_0_6_101) l_0_6_96))))
 (let ((?x14484 (- (- ?x14480 (* (* 2.0 l_0_6_102) l_0_6_97)) (* (* 2.0 l_0_6_103) l_0_6_98))))
 (let ((?x14490 (- (- ?x14484 (* (* 2.0 l_0_6_104) l_0_6_99)) (* (* 2.0 l_0_6_123) l_0_6_128))))
 (let ((?x14496 (- (- ?x14490 (* (* 2.0 l_0_6_124) l_0_6_129)) (* (* 2.0 l_0_6_125) l_0_6_130))))
 (let ((?x14502 (- (- ?x14496 (* (* 2.0 l_0_6_126) l_0_6_131)) (* (* 2.0 l_0_6_127) l_0_6_132))))
 (let ((?x14508 (+ (+ ?x14502 (* (* 2.0 l_0_6_67) l_0_6_72)) (* (* 2.0 l_0_6_68) l_0_6_73))))
 (let ((?x14514 (+ (+ ?x14508 (* (* 2.0 l_0_6_69) l_0_6_74)) (* (* 2.0 l_0_6_70) l_0_6_75))))
 (= (+ ?x14514 (* (* 2.0 l_0_6_71) l_0_6_76)) 0.0)))))))))
(assert
 (let ((?x14566 (- (* (* (- 2.0) l_0_6_106) l_0_6_95) (* (* 2.0 l_0_6_107) l_0_6_96))))
 (let ((?x14580 (- (- ?x14566 (* (* 2.0 l_0_6_108) l_0_6_97)) (* (* 2.0 l_0_6_109) l_0_6_98))))
 (let ((?x14585 (- (- ?x14580 (* (* 2.0 l_0_6_110) l_0_6_99)) (* (* 2.0 l_0_6_123) l_0_6_134))))
 (let ((?x14589 (- (- ?x14585 (* (* 2.0 l_0_6_124) l_0_6_135)) (* (* 2.0 l_0_6_125) l_0_6_136))))
 (let ((?x14593 (- (- ?x14589 (* (* 2.0 l_0_6_126) l_0_6_137)) (* (* 2.0 l_0_6_127) l_0_6_138))))
 (let ((?x14597 (+ (+ ?x14593 (* (* 2.0 l_0_6_67) l_0_6_78)) (* (* 2.0 l_0_6_68) l_0_6_79))))
 (let ((?x14601 (+ (+ ?x14597 (* (* 2.0 l_0_6_69) l_0_6_80)) (* (* 2.0 l_0_6_70) l_0_6_81))))
 (= (+ ?x14601 (* (* 2.0 l_0_6_71) l_0_6_82)) 0.0)))))))))
(assert
 (let ((?x14696 (* l_0_6_133 l_0_6_133)))
 (let ((?x14694 (* l_0_6_132 l_0_6_132)))
 (let ((?x14692 (* l_0_6_131 l_0_6_131)))
 (let ((?x14690 (* l_0_6_130 l_0_6_130)))
 (let ((?x14688 (* l_0_6_129 l_0_6_129)))
 (let ((?x14686 (* l_0_6_128 l_0_6_128)))
 (let ((?x14684 (* l_0_6_105 l_0_6_105)))
 (let ((?x14682 (* l_0_6_104 l_0_6_104)))
 (let ((?x14680 (* l_0_6_103 l_0_6_103)))
 (let ((?x14670 (* l_0_6_102 l_0_6_102)))
 (let ((?x14671 (- (- (* (- l_0_6_100) l_0_6_100) (* l_0_6_101 l_0_6_101)) ?x14670)))
 (let ((?x14693 (- (- (- (- (- (- (- ?x14671 ?x14680) ?x14682) ?x14684) ?x14686) ?x14688) ?x14690) ?x14692)))
 (let ((?x14703 (+ (+ (- (- ?x14693 ?x14694) ?x14696) (* 1.0 (* l_0_6_72 l_0_6_72))) (* 1.0 (* l_0_6_73 l_0_6_73)))))
 (let ((?x14709 (+ (+ ?x14703 (* 1.0 (* l_0_6_74 l_0_6_74))) (* 1.0 (* l_0_6_75 l_0_6_75)))))
 (let ((?x14715 (+ (+ ?x14709 (* 1.0 (* l_0_6_76 l_0_6_76))) (* 1.0 (* l_0_6_77 l_0_6_77)))))
 (= ?x14715 0.0)))))))))))))))))
(assert
 (let ((?x14763 (- (* (* (- 2.0) l_0_6_100) l_0_6_106) (* (* 2.0 l_0_6_101) l_0_6_107))))
 (let ((?x14767 (- (- ?x14763 (* (* 2.0 l_0_6_102) l_0_6_108)) (* (* 2.0 l_0_6_103) l_0_6_109))))
 (let ((?x14772 (- (- ?x14767 (* (* 2.0 l_0_6_104) l_0_6_110)) (* (* 2.0 l_0_6_105) l_0_6_111))))
 (let ((?x14778 (- (- ?x14772 (* (* 2.0 l_0_6_128) l_0_6_134)) (* (* 2.0 l_0_6_129) l_0_6_135))))
 (let ((?x14784 (- (- ?x14778 (* (* 2.0 l_0_6_130) l_0_6_136)) (* (* 2.0 l_0_6_131) l_0_6_137))))
 (let ((?x14790 (- (- ?x14784 (* (* 2.0 l_0_6_132) l_0_6_138)) (* (* 2.0 l_0_6_133) l_0_6_139))))
 (let ((?x14796 (+ (+ ?x14790 (* (* 2.0 l_0_6_72) l_0_6_78)) (* (* 2.0 l_0_6_73) l_0_6_79))))
 (let ((?x14802 (+ (+ ?x14796 (* (* 2.0 l_0_6_74) l_0_6_80)) (* (* 2.0 l_0_6_75) l_0_6_81))))
 (let ((?x14808 (+ (+ ?x14802 (* (* 2.0 l_0_6_76) l_0_6_82)) (* (* 2.0 l_0_6_77) l_0_6_83))))
 (= ?x14808 0.0)))))))))))
(assert
 (let ((?x14898 (* l_0_6_140 l_0_6_140)))
 (let ((?x14896 (* l_0_6_139 l_0_6_139)))
 (let ((?x14894 (* l_0_6_138 l_0_6_138)))
 (let ((?x14892 (* l_0_6_137 l_0_6_137)))
 (let ((?x14890 (* l_0_6_136 l_0_6_136)))
 (let ((?x14888 (* l_0_6_135 l_0_6_135)))
 (let ((?x14886 (* l_0_6_134 l_0_6_134)))
 (let ((?x14884 (* l_0_6_112 l_0_6_112)))
 (let ((?x14882 (* l_0_6_111 l_0_6_111)))
 (let ((?x14880 (* l_0_6_110 l_0_6_110)))
 (let ((?x14869 (* l_0_6_109 l_0_6_109)))
 (let ((?x14866 (* l_0_6_108 l_0_6_108)))
 (let ((?x14868 (- (- (* (- l_0_6_106) l_0_6_106) (* l_0_6_107 l_0_6_107)) ?x14866)))
 (let ((?x14891 (- (- (- (- (- (- (- ?x14868 ?x14869) ?x14880) ?x14882) ?x14884) ?x14886) ?x14888) ?x14890)))
 (let ((?x14902 (+ (- (- (- (- ?x14891 ?x14892) ?x14894) ?x14896) ?x14898) (* 1.0 (* l_0_6_78 l_0_6_78)))))
 (let ((?x14908 (+ (+ ?x14902 (* 1.0 (* l_0_6_79 l_0_6_79))) (* 1.0 (* l_0_6_80 l_0_6_80)))))
 (let ((?x14914 (+ (+ ?x14908 (* 1.0 (* l_0_6_81 l_0_6_81))) (* 1.0 (* l_0_6_82 l_0_6_82)))))
 (let ((?x14920 (+ (+ ?x14914 (* 1.0 (* l_0_6_83 l_0_6_83))) (* 1.0 (* l_0_6_84 l_0_6_84)))))
 (= ?x14920 0.0))))))))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_28 0.0))
(assert
 (>= l_0_6_29 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_34 0.0))
(assert
 (>= l_0_6_38 0.0))
(assert
 (>= l_0_6_43 0.0))
(assert
 (>= l_0_6_49 0.0))
(assert
 (>= l_0_6_56 0.0))
(assert
 (>= l_0_6_57 0.0))
(assert
 (>= l_0_6_59 0.0))
(assert
 (>= l_0_6_62 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_71 0.0))
(assert
 (>= l_0_6_77 0.0))
(assert
 (>= l_0_6_84 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_87 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_94 0.0))
(assert
 (>= l_0_6_99 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_112 0.0))
(assert
 (>= l_0_6_113 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_118 0.0))
(assert
 (>= l_0_6_122 0.0))
(assert
 (>= l_0_6_127 0.0))
(assert
 (>= l_0_6_133 0.0))
(assert
 (>= l_0_6_140 0.0))
(assert
 (let ((?x14980 (* l_0_7_29 l_0_7_29)))
 (let ((?x14976 (- (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_100) l_0_7_88)) (* (* 2.0 l_0_7_101) l_0_7_89))))
 (let ((?x14984 (- (+ (- ?x14976 (* (* 2.0 l_0_7_102) l_0_7_90)) ?x14980) (* (* 2.0 l_0_7_60) l_0_7_72))))
 (let ((?x14990 (- (- ?x14984 (* (* 2.0 l_0_7_61) l_0_7_73)) (* (* 2.0 l_0_7_62) l_0_7_74))))
 (= (+ ?x14990 1.0) 0.0))))))
(assert
 (let ((?x14980 (* l_0_7_29 l_0_7_29)))
 (let ((?x15014 (- (- (* l_0_7_1 l_0_7_1) (* (* 2.0 l_0_7_106) l_0_7_86)) (* (* 2.0 l_0_7_107) l_0_7_87))))
 (let ((?x15021 (- (- (- ?x15014 ?x14980) (* (* 2.0 l_0_7_58) l_0_7_78)) (* (* 2.0 l_0_7_59) l_0_7_79))))
 (= (- ?x15021 1.0) 0.0)))))
(assert
 (let ((?x15035 (- (- (* l_0_7_1 l_0_7_1) (* l_0_7_29 l_0_7_29)) (* (* 2.0 l_0_7_63) l_0_7_67))))
 (let ((?x15041 (- (- ?x15035 (* (* 2.0 l_0_7_64) l_0_7_68)) (* (* 2.0 l_0_7_65) l_0_7_69))))
 (let ((?x15047 (- (- ?x15041 (* (* 2.0 l_0_7_66) l_0_7_70)) (* (* 2.0 l_0_7_91) l_0_7_95))))
 (let ((?x15053 (- (- ?x15047 (* (* 2.0 l_0_7_92) l_0_7_96)) (* (* 2.0 l_0_7_93) l_0_7_97))))
 (= (- (- ?x15053 (* (* 2.0 l_0_7_94) l_0_7_98)) 1.0) 0.0))))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15083 (* ?x15082 l_0_7_30)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_2) ?x15083) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15089 (* ?x15082 l_0_7_32)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x15089) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15096 (* ?x15082 l_0_7_35)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) ?x15096) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15106 (* ?x15082 l_0_7_39)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) ?x15106) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15116 (* ?x15082 l_0_7_44)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_16) ?x15116) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15126 (* ?x15082 l_0_7_50)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_22) ?x15126) 0.0))))
(assert
 (let ((?x15145 (* l_0_7_31 l_0_7_31)))
 (let ((?x15143 (* l_0_7_30 l_0_7_30)))
 (let ((?x15146 (+ (+ (- (* (- l_0_7_2) l_0_7_2) (* l_0_7_3 l_0_7_3)) ?x15143) ?x15145)))
 (= ?x15146 0.0)))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15167 (* ?x15166 l_0_7_33)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15164 (* ?x15163 l_0_7_32)))
 (let ((?x15160 (* 2.0 l_0_7_3)))
 (let ((?x15161 (* ?x15160 l_0_7_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_2) l_0_7_4) ?x15161) ?x15164) ?x15167) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15190 (* ?x15166 l_0_7_36)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15188 (* ?x15163 l_0_7_35)))
 (let ((?x15160 (* 2.0 l_0_7_3)))
 (let ((?x15181 (* ?x15160 l_0_7_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_2) l_0_7_7) ?x15181) ?x15188) ?x15190) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15209 (* ?x15166 l_0_7_40)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15207 (* ?x15163 l_0_7_39)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x15205 (* ?x15199 l_0_7_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x15205) ?x15207) ?x15209) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15222 (* ?x15166 l_0_7_45)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15220 (* ?x15163 l_0_7_44)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x6448 (* ?x6447 l_0_7_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_16) l_0_7_2) ?x6448) ?x15220) ?x15222) 0.0))))))))
(assert
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15264 (* ?x15263 l_0_7_46)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x15261 (* ?x15260 l_0_7_45)))
 (let ((?x15257 (* 2.0 l_0_7_32)))
 (let ((?x15258 (* ?x15257 l_0_7_44)))
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15255 (* ?x15166 l_0_7_51)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15253 (* ?x15163 l_0_7_50)))
 (let ((?x15250 (* 2.0 l_0_7_23)))
 (let ((?x15251 (* ?x15250 l_0_7_3)))
 (let ((?x15247 (* 2.0 l_0_7_2)))
 (let ((?x15248 (* ?x15247 l_0_7_22)))
 (let ((?x15244 (* 2.0 l_0_7_18)))
 (let ((?x15245 (* ?x15244 l_0_7_6)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x15237 (* ?x6447 l_0_7_5)))
 (let ((?x15234 (* 2.0 l_0_7_16)))
 (let ((?x15236 (* ?x15234 l_0_7_4)))
 (let ((?x15259 (- (+ (+ (- (- (+ (+ ?x15236 ?x15237) ?x15245) ?x15248) ?x15251) ?x15253) ?x15255) ?x15258)))
 (= (- (- ?x15259 ?x15261) ?x15264) 0.0)))))))))))))))))))))))
(assert
 (let ((?x15297 (* l_0_7_6 l_0_7_6)))
 (let ((?x15295 (* l_0_7_5 l_0_7_5)))
 (let ((?x15293 (* l_0_7_4 l_0_7_4)))
 (let ((?x15291 (* l_0_7_34 l_0_7_34)))
 (let ((?x15294 (- (+ (+ (* l_0_7_32 l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x15291) ?x15293)))
 (= (- (- ?x15294 ?x15295) ?x15297) 0.0)))))))
(assert
 (let ((?x15317 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x15314 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x15311 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15308 (* ?x15263 l_0_7_37)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x6541 (* ?x15260 l_0_7_36)))
 (let ((?x15315 (- (- (+ (+ (* (* 2.0 l_0_7_32) l_0_7_35) ?x6541) ?x15308) ?x15311) ?x15314)))
 (= (- ?x15315 ?x15317) 0.0))))))))))
(assert
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15342 (* ?x15263 l_0_7_41)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x15340 (* ?x15260 l_0_7_40)))
 (let ((?x15257 (* 2.0 l_0_7_32)))
 (let ((?x15338 (* ?x15257 l_0_7_39)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x6558 (* ?x6555 l_0_7_6)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x6560 (* ?x15199 l_0_7_5)))
 (let ((?x15341 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x6560) ?x6558) ?x15338) ?x15340)))
 (= (+ ?x15341 ?x15342) 0.0)))))))))))))
(assert
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15264 (* ?x15263 l_0_7_46)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x15261 (* ?x15260 l_0_7_45)))
 (let ((?x15257 (* 2.0 l_0_7_32)))
 (let ((?x15258 (* ?x15257 l_0_7_44)))
 (let ((?x15244 (* 2.0 l_0_7_18)))
 (let ((?x15245 (* ?x15244 l_0_7_6)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x15237 (* ?x6447 l_0_7_5)))
 (let ((?x15364 (+ (+ (- (- (* (* (- 2.0) l_0_7_16) l_0_7_4) ?x15237) ?x15245) ?x15258) ?x15261)))
 (= (+ ?x15364 ?x15264) 0.0)))))))))))))
(assert
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15383 (* ?x15263 l_0_7_52)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x15381 (* ?x15260 l_0_7_51)))
 (let ((?x15257 (* 2.0 l_0_7_32)))
 (let ((?x15379 (* ?x15257 l_0_7_50)))
 (let ((?x15376 (* 2.0 l_0_7_24)))
 (let ((?x15377 (* ?x15376 l_0_7_6)))
 (let ((?x15250 (* 2.0 l_0_7_23)))
 (let ((?x6605 (* ?x15250 l_0_7_5)))
 (let ((?x15382 (+ (+ (- (- (* (* (- 2.0) l_0_7_22) l_0_7_4) ?x6605) ?x15377) ?x15379) ?x15381)))
 (= (+ ?x15382 ?x15383) 0.0)))))))))))))
(assert
 (let ((?x15406 (* l_0_7_9 l_0_7_9)))
 (let ((?x15404 (* l_0_7_8 l_0_7_8)))
 (let ((?x15402 (* l_0_7_7 l_0_7_7)))
 (let ((?x15400 (* l_0_7_38 l_0_7_38)))
 (let ((?x15398 (* l_0_7_37 l_0_7_37)))
 (let ((?x15396 (* l_0_7_36 l_0_7_36)))
 (let ((?x15399 (+ (+ (+ (* (- l_0_7_10) l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x15396) ?x15398)))
 (= (- (- (- (+ ?x15399 ?x15400) ?x15402) ?x15404) ?x15406) 0.0)))))))))
(assert
 (let ((?x15441 (* 2.0 l_0_7_38)))
 (let ((?x15442 (* ?x15441 l_0_7_42)))
 (let ((?x15438 (* 2.0 l_0_7_37)))
 (let ((?x15439 (* ?x15438 l_0_7_41)))
 (let ((?x15435 (* 2.0 l_0_7_36)))
 (let ((?x15436 (* ?x15435 l_0_7_40)))
 (let ((?x15432 (* 2.0 l_0_7_35)))
 (let ((?x15433 (* ?x15432 l_0_7_39)))
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15264 (* ?x15263 l_0_7_46)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x15261 (* ?x15260 l_0_7_45)))
 (let ((?x15257 (* 2.0 l_0_7_32)))
 (let ((?x15258 (* ?x15257 l_0_7_44)))
 (let ((?x15244 (* 2.0 l_0_7_18)))
 (let ((?x15245 (* ?x15244 l_0_7_6)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x15237 (* ?x6447 l_0_7_5)))
 (let ((?x15234 (* 2.0 l_0_7_16)))
 (let ((?x15236 (* ?x15234 l_0_7_4)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x15424 (* ?x6555 l_0_7_9)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x15422 (* ?x15199 l_0_7_8)))
 (let ((?x15419 (* 2.0 l_0_7_11)))
 (let ((?x15420 (* ?x15419 l_0_7_7)))
 (let ((?x15426 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x15420) ?x15422) ?x15424) ?x15236)))
 (let ((?x15437 (+ (+ (- (- (- (+ (+ ?x15426 ?x15237) ?x15245) ?x15258) ?x15261) ?x15264) ?x15433) ?x15436)))
 (= (+ (+ ?x15437 ?x15439) ?x15442) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x15441 (* 2.0 l_0_7_38)))
 (let ((?x15476 (* ?x15441 l_0_7_47)))
 (let ((?x15438 (* 2.0 l_0_7_37)))
 (let ((?x15474 (* ?x15438 l_0_7_46)))
 (let ((?x15435 (* 2.0 l_0_7_36)))
 (let ((?x15472 (* ?x15435 l_0_7_45)))
 (let ((?x15432 (* 2.0 l_0_7_35)))
 (let ((?x15470 (* ?x15432 l_0_7_44)))
 (let ((?x15244 (* 2.0 l_0_7_18)))
 (let ((?x15468 (* ?x15244 l_0_7_9)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x15466 (* ?x6447 l_0_7_8)))
 (let ((?x15234 (* 2.0 l_0_7_16)))
 (let ((?x15464 (* ?x15234 l_0_7_7)))
 (let ((?x15471 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_19) ?x15464) ?x15466) ?x15468) ?x15470)))
 (= (+ (+ (+ ?x15471 ?x15472) ?x15474) ?x15476) 0.0)))))))))))))))))
(assert
 (let ((?x15441 (* 2.0 l_0_7_38)))
 (let ((?x15512 (* ?x15441 l_0_7_53)))
 (let ((?x15438 (* 2.0 l_0_7_37)))
 (let ((?x15510 (* ?x15438 l_0_7_52)))
 (let ((?x15435 (* 2.0 l_0_7_36)))
 (let ((?x15508 (* ?x15435 l_0_7_51)))
 (let ((?x15432 (* 2.0 l_0_7_35)))
 (let ((?x15506 (* ?x15432 l_0_7_50)))
 (let ((?x15376 (* 2.0 l_0_7_24)))
 (let ((?x15504 (* ?x15376 l_0_7_9)))
 (let ((?x15250 (* 2.0 l_0_7_23)))
 (let ((?x15495 (* ?x15250 l_0_7_8)))
 (let ((?x6737 (* 2.0 l_0_7_22)))
 (let ((?x15492 (* ?x6737 l_0_7_7)))
 (let ((?x15507 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_25) ?x15492) ?x15495) ?x15504) ?x15506)))
 (= (+ (+ (+ ?x15507 ?x15508) ?x15510) ?x15512) 0.0)))))))))))))))))
(assert
 (let ((?x15555 (* l_0_7_43 l_0_7_43)))
 (let ((?x15553 (* l_0_7_42 l_0_7_42)))
 (let ((?x15551 (* l_0_7_41 l_0_7_41)))
 (let ((?x15549 (* l_0_7_40 l_0_7_40)))
 (let ((?x15547 (* l_0_7_39 l_0_7_39)))
 (let ((?x15545 (* l_0_7_15 l_0_7_15)))
 (let ((?x15543 (* l_0_7_14 l_0_7_14)))
 (let ((?x15534 (* l_0_7_13 l_0_7_13)))
 (let ((?x15544 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x15534) ?x15543)))
 (= (+ (+ (+ (+ (+ (- ?x15544 ?x15545) ?x15547) ?x15549) ?x15551) ?x15553) ?x15555) 0.0)))))))))))
(assert
 (let ((?x15589 (* 2.0 l_0_7_43)))
 (let ((?x15590 (* ?x15589 l_0_7_48)))
 (let ((?x15586 (* 2.0 l_0_7_42)))
 (let ((?x15587 (* ?x15586 l_0_7_47)))
 (let ((?x15583 (* 2.0 l_0_7_41)))
 (let ((?x15584 (* ?x15583 l_0_7_46)))
 (let ((?x15580 (* 2.0 l_0_7_40)))
 (let ((?x15581 (* ?x15580 l_0_7_45)))
 (let ((?x15577 (* 2.0 l_0_7_39)))
 (let ((?x15578 (* ?x15577 l_0_7_44)))
 (let ((?x15574 (* 2.0 l_0_7_15)))
 (let ((?x15575 (* ?x15574 l_0_7_20)))
 (let ((?x6767 (* 2.0 l_0_7_14)))
 (let ((?x15572 (* ?x6767 l_0_7_19)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x6763 (* ?x6555 l_0_7_18)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x6768 (* ?x15199 l_0_7_17)))
 (let ((?x15576 (- (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_16) ?x6768) ?x6763) ?x15572) ?x15575)))
 (= (+ (+ (+ (+ (+ ?x15576 ?x15578) ?x15581) ?x15584) ?x15587) ?x15590) 0.0)))))))))))))))))))))
(assert
 (let ((?x15589 (* 2.0 l_0_7_43)))
 (let ((?x15641 (* ?x15589 l_0_7_54)))
 (let ((?x15586 (* 2.0 l_0_7_42)))
 (let ((?x15639 (* ?x15586 l_0_7_53)))
 (let ((?x15583 (* 2.0 l_0_7_41)))
 (let ((?x15637 (* ?x15583 l_0_7_52)))
 (let ((?x15580 (* 2.0 l_0_7_40)))
 (let ((?x15635 (* ?x15580 l_0_7_51)))
 (let ((?x15577 (* 2.0 l_0_7_39)))
 (let ((?x15633 (* ?x15577 l_0_7_50)))
 (let ((?x15574 (* 2.0 l_0_7_15)))
 (let ((?x15631 (* ?x15574 l_0_7_26)))
 (let ((?x6767 (* 2.0 l_0_7_14)))
 (let ((?x15621 (* ?x6767 l_0_7_25)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x15618 (* ?x6555 l_0_7_24)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x15614 (* ?x15199 l_0_7_23)))
 (let ((?x15632 (- (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_22) ?x15614) ?x15618) ?x15621) ?x15631)))
 (= (+ (+ (+ (+ (+ ?x15632 ?x15633) ?x15635) ?x15637) ?x15639) ?x15641) 0.0)))))))))))))))))))))
(assert
 (let ((?x15690 (* l_0_7_49 l_0_7_49)))
 (let ((?x15688 (* l_0_7_48 l_0_7_48)))
 (let ((?x15686 (* l_0_7_47 l_0_7_47)))
 (let ((?x15684 (* l_0_7_46 l_0_7_46)))
 (let ((?x15682 (* l_0_7_45 l_0_7_45)))
 (let ((?x15680 (* l_0_7_44 l_0_7_44)))
 (let ((?x15678 (* l_0_7_21 l_0_7_21)))
 (let ((?x15676 (* l_0_7_20 l_0_7_20)))
 (let ((?x15674 (* l_0_7_19 l_0_7_19)))
 (let ((?x15665 (* l_0_7_18 l_0_7_18)))
 (let ((?x15675 (- (- (- (* (- l_0_7_16) l_0_7_16) (* l_0_7_17 l_0_7_17)) ?x15665) ?x15674)))
 (let ((?x15689 (+ (+ (+ (+ (+ (- (- ?x15675 ?x15676) ?x15678) ?x15680) ?x15682) ?x15684) ?x15686) ?x15688)))
 (= (+ ?x15689 ?x15690) 0.0))))))))))))))
(assert
 (let ((?x15731 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x15728 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x15725 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x15722 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x15719 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x15716 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x15713 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x15710 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x15707 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x15244 (* 2.0 l_0_7_18)))
 (let ((?x15704 (* ?x15244 l_0_7_24)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x6846 (* ?x6447 l_0_7_23)))
 (let ((?x15711 (- (- (- (- (* (* (- 2.0) l_0_7_16) l_0_7_22) ?x6846) ?x15704) ?x15707) ?x15710)))
 (let ((?x15732 (+ (+ (+ (+ (+ (+ (- ?x15711 ?x15713) ?x15716) ?x15719) ?x15722) ?x15725) ?x15728) ?x15731)))
 (= ?x15732 0.0)))))))))))))))))
(assert
 (let ((?x15775 (* l_0_7_56 l_0_7_56)))
 (let ((?x15773 (* l_0_7_55 l_0_7_55)))
 (let ((?x15771 (* l_0_7_54 l_0_7_54)))
 (let ((?x15769 (* l_0_7_53 l_0_7_53)))
 (let ((?x15767 (* l_0_7_52 l_0_7_52)))
 (let ((?x15765 (* l_0_7_51 l_0_7_51)))
 (let ((?x15763 (* l_0_7_50 l_0_7_50)))
 (let ((?x15761 (* l_0_7_28 l_0_7_28)))
 (let ((?x15759 (* l_0_7_27 l_0_7_27)))
 (let ((?x15757 (* l_0_7_26 l_0_7_26)))
 (let ((?x15755 (* l_0_7_25 l_0_7_25)))
 (let ((?x15753 (* l_0_7_24 l_0_7_24)))
 (let ((?x15756 (- (- (- (* (- l_0_7_22) l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x15753) ?x15755)))
 (let ((?x15770 (+ (+ (+ (+ (- (- (- ?x15756 ?x15757) ?x15759) ?x15761) ?x15763) ?x15765) ?x15767) ?x15769)))
 (= (+ (+ (+ ?x15770 ?x15771) ?x15773) ?x15775) 0.0))))))))))))))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15083 (* ?x15082 l_0_7_30)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_2) ?x15083) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15089 (* ?x15082 l_0_7_32)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_4) ?x15089) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15096 (* ?x15082 l_0_7_35)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_7) ?x15096) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15106 (* ?x15082 l_0_7_39)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_11) ?x15106) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15116 (* ?x15082 l_0_7_44)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_16) ?x15116) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15126 (* ?x15082 l_0_7_50)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_22) ?x15126) 0.0))))
(assert
 (let ((?x15145 (* l_0_7_31 l_0_7_31)))
 (let ((?x15143 (* l_0_7_30 l_0_7_30)))
 (= (- (- (+ (* l_0_7_2 l_0_7_2) (* l_0_7_3 l_0_7_3)) ?x15143) ?x15145) 0.0))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15167 (* ?x15166 l_0_7_33)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15164 (* ?x15163 l_0_7_32)))
 (let ((?x15160 (* 2.0 l_0_7_3)))
 (let ((?x15161 (* ?x15160 l_0_7_5)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_4) ?x15161) ?x15164) ?x15167) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15190 (* ?x15166 l_0_7_36)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15188 (* ?x15163 l_0_7_35)))
 (let ((?x15160 (* 2.0 l_0_7_3)))
 (let ((?x15181 (* ?x15160 l_0_7_8)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_7) ?x15181) ?x15188) ?x15190) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15209 (* ?x15166 l_0_7_40)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15207 (* ?x15163 l_0_7_39)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x15205 (* ?x15199 l_0_7_3)))
 (= (- (- (+ (* (* 2.0 l_0_7_11) l_0_7_2) ?x15205) ?x15207) ?x15209) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15222 (* ?x15166 l_0_7_45)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15220 (* ?x15163 l_0_7_44)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x6448 (* ?x6447 l_0_7_3)))
 (= (- (- (+ (* (* 2.0 l_0_7_16) l_0_7_2) ?x6448) ?x15220) ?x15222) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15255 (* ?x15166 l_0_7_51)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15253 (* ?x15163 l_0_7_50)))
 (let ((?x15250 (* 2.0 l_0_7_23)))
 (let ((?x15251 (* ?x15250 l_0_7_3)))
 (let ((?x15247 (* 2.0 l_0_7_2)))
 (let ((?x15248 (* ?x15247 l_0_7_22)))
 (= (- (- (+ ?x15248 ?x15251) ?x15253) ?x15255) 0.0))))))))))
(assert
 (let ((?x15297 (* l_0_7_6 l_0_7_6)))
 (let ((?x15295 (* l_0_7_5 l_0_7_5)))
 (let ((?x15293 (* l_0_7_4 l_0_7_4)))
 (let ((?x15291 (* l_0_7_34 l_0_7_34)))
 (let ((?x7113 (+ (- (- (* (- l_0_7_32) l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x15291) ?x15293)))
 (= (+ (+ ?x7113 ?x15295) ?x15297) 0.0)))))))
(assert
 (let ((?x15317 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x15314 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x15311 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15308 (* ?x15263 l_0_7_37)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x6541 (* ?x15260 l_0_7_36)))
 (let ((?x7024 (+ (+ (- (- (* (* (- 2.0) l_0_7_32) l_0_7_35) ?x6541) ?x15308) ?x15311) ?x15314)))
 (= (+ ?x7024 ?x15317) 0.0))))))))))
(assert
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15342 (* ?x15263 l_0_7_41)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x15340 (* ?x15260 l_0_7_40)))
 (let ((?x15257 (* 2.0 l_0_7_32)))
 (let ((?x15338 (* ?x15257 l_0_7_39)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x6558 (* ?x6555 l_0_7_6)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x6560 (* ?x15199 l_0_7_5)))
 (let ((?x7261 (- (- (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x6560) ?x6558) ?x15338) ?x15340)))
 (= (- ?x7261 ?x15342) 0.0)))))))))))))
(assert
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15383 (* ?x15263 l_0_7_52)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x15381 (* ?x15260 l_0_7_51)))
 (let ((?x15257 (* 2.0 l_0_7_32)))
 (let ((?x15379 (* ?x15257 l_0_7_50)))
 (let ((?x15376 (* 2.0 l_0_7_24)))
 (let ((?x15377 (* ?x15376 l_0_7_6)))
 (let ((?x15250 (* 2.0 l_0_7_23)))
 (let ((?x6605 (* ?x15250 l_0_7_5)))
 (let ((?x7288 (- (- (+ (+ (* (* 2.0 l_0_7_22) l_0_7_4) ?x6605) ?x15377) ?x15379) ?x15381)))
 (= (- ?x7288 ?x15383) 0.0)))))))))))))
(assert
 (let ((?x15406 (* l_0_7_9 l_0_7_9)))
 (let ((?x15404 (* l_0_7_8 l_0_7_8)))
 (let ((?x15402 (* l_0_7_7 l_0_7_7)))
 (let ((?x15400 (* l_0_7_38 l_0_7_38)))
 (let ((?x15398 (* l_0_7_37 l_0_7_37)))
 (let ((?x15396 (* l_0_7_36 l_0_7_36)))
 (let ((?x15828 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x15396) ?x15398)))
 (= (+ (+ (+ (- ?x15828 ?x15400) ?x15402) ?x15404) ?x15406) 0.0)))))))))
(assert
 (let ((?x15441 (* 2.0 l_0_7_38)))
 (let ((?x15442 (* ?x15441 l_0_7_42)))
 (let ((?x15438 (* 2.0 l_0_7_37)))
 (let ((?x15439 (* ?x15438 l_0_7_41)))
 (let ((?x15435 (* 2.0 l_0_7_36)))
 (let ((?x15436 (* ?x15435 l_0_7_40)))
 (let ((?x15432 (* 2.0 l_0_7_35)))
 (let ((?x15433 (* ?x15432 l_0_7_39)))
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15255 (* ?x15166 l_0_7_51)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15253 (* ?x15163 l_0_7_50)))
 (let ((?x15250 (* 2.0 l_0_7_23)))
 (let ((?x15251 (* ?x15250 l_0_7_3)))
 (let ((?x15247 (* 2.0 l_0_7_2)))
 (let ((?x15248 (* ?x15247 l_0_7_22)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x15424 (* ?x6555 l_0_7_9)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x15422 (* ?x15199 l_0_7_8)))
 (let ((?x15419 (* 2.0 l_0_7_11)))
 (let ((?x15420 (* ?x15419 l_0_7_7)))
 (let ((?x7370 (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x15420) ?x15422) ?x15424)))
 (let ((?x15841 (- (- (- (- (- (+ (+ ?x7370 ?x15248) ?x15251) ?x15253) ?x15255) ?x15433) ?x15436) ?x15439)))
 (= (- ?x15841 ?x15442) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15441 (* 2.0 l_0_7_38)))
 (let ((?x15476 (* ?x15441 l_0_7_47)))
 (let ((?x15438 (* 2.0 l_0_7_37)))
 (let ((?x15474 (* ?x15438 l_0_7_46)))
 (let ((?x15435 (* 2.0 l_0_7_36)))
 (let ((?x15472 (* ?x15435 l_0_7_45)))
 (let ((?x15432 (* 2.0 l_0_7_35)))
 (let ((?x15470 (* ?x15432 l_0_7_44)))
 (let ((?x15244 (* 2.0 l_0_7_18)))
 (let ((?x15468 (* ?x15244 l_0_7_9)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x15466 (* ?x6447 l_0_7_8)))
 (let ((?x15234 (* 2.0 l_0_7_16)))
 (let ((?x15464 (* ?x15234 l_0_7_7)))
 (let ((?x15852 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_19) ?x15464) ?x15466) ?x15468) ?x15470)))
 (= (- (- (- ?x15852 ?x15472) ?x15474) ?x15476) 0.0)))))))))))))))))
(assert
 (let ((?x15441 (* 2.0 l_0_7_38)))
 (let ((?x15512 (* ?x15441 l_0_7_53)))
 (let ((?x15438 (* 2.0 l_0_7_37)))
 (let ((?x15510 (* ?x15438 l_0_7_52)))
 (let ((?x15435 (* 2.0 l_0_7_36)))
 (let ((?x15508 (* ?x15435 l_0_7_51)))
 (let ((?x15432 (* 2.0 l_0_7_35)))
 (let ((?x15506 (* ?x15432 l_0_7_50)))
 (let ((?x15376 (* 2.0 l_0_7_24)))
 (let ((?x15504 (* ?x15376 l_0_7_9)))
 (let ((?x15250 (* 2.0 l_0_7_23)))
 (let ((?x15495 (* ?x15250 l_0_7_8)))
 (let ((?x6737 (* 2.0 l_0_7_22)))
 (let ((?x15492 (* ?x6737 l_0_7_7)))
 (let ((?x7461 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_25) ?x15492) ?x15495) ?x15504) ?x15506)))
 (= (- (- (- ?x7461 ?x15508) ?x15510) ?x15512) 0.0)))))))))))))))))
(assert
 (let ((?x15555 (* l_0_7_43 l_0_7_43)))
 (let ((?x15553 (* l_0_7_42 l_0_7_42)))
 (let ((?x15551 (* l_0_7_41 l_0_7_41)))
 (let ((?x15549 (* l_0_7_40 l_0_7_40)))
 (let ((?x15547 (* l_0_7_39 l_0_7_39)))
 (let ((?x15545 (* l_0_7_15 l_0_7_15)))
 (let ((?x15543 (* l_0_7_14 l_0_7_14)))
 (let ((?x15534 (* l_0_7_13 l_0_7_13)))
 (let ((?x7647 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x15534) ?x15543)))
 (= (- (- (- (- (- (+ ?x7647 ?x15545) ?x15547) ?x15549) ?x15551) ?x15553) ?x15555) 0.0)))))))))))
(assert
 (let ((?x15589 (* 2.0 l_0_7_43)))
 (let ((?x15590 (* ?x15589 l_0_7_48)))
 (let ((?x15586 (* 2.0 l_0_7_42)))
 (let ((?x15587 (* ?x15586 l_0_7_47)))
 (let ((?x15583 (* 2.0 l_0_7_41)))
 (let ((?x15584 (* ?x15583 l_0_7_46)))
 (let ((?x15580 (* 2.0 l_0_7_40)))
 (let ((?x15581 (* ?x15580 l_0_7_45)))
 (let ((?x15577 (* 2.0 l_0_7_39)))
 (let ((?x15578 (* ?x15577 l_0_7_44)))
 (let ((?x15574 (* 2.0 l_0_7_15)))
 (let ((?x15575 (* ?x15574 l_0_7_20)))
 (let ((?x6767 (* 2.0 l_0_7_14)))
 (let ((?x15572 (* ?x6767 l_0_7_19)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x6763 (* ?x6555 l_0_7_18)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x6768 (* ?x15199 l_0_7_17)))
 (let ((?x7742 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_16) ?x6768) ?x6763) ?x15572) ?x15575)))
 (= (- (- (- (- (- ?x7742 ?x15578) ?x15581) ?x15584) ?x15587) ?x15590) 0.0)))))))))))))))))))))
(assert
 (let ((?x15589 (* 2.0 l_0_7_43)))
 (let ((?x15641 (* ?x15589 l_0_7_54)))
 (let ((?x15586 (* 2.0 l_0_7_42)))
 (let ((?x15639 (* ?x15586 l_0_7_53)))
 (let ((?x15583 (* 2.0 l_0_7_41)))
 (let ((?x15637 (* ?x15583 l_0_7_52)))
 (let ((?x15580 (* 2.0 l_0_7_40)))
 (let ((?x15635 (* ?x15580 l_0_7_51)))
 (let ((?x15577 (* 2.0 l_0_7_39)))
 (let ((?x15633 (* ?x15577 l_0_7_50)))
 (let ((?x15574 (* 2.0 l_0_7_15)))
 (let ((?x15631 (* ?x15574 l_0_7_26)))
 (let ((?x6767 (* 2.0 l_0_7_14)))
 (let ((?x15621 (* ?x6767 l_0_7_25)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x15618 (* ?x6555 l_0_7_24)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x15614 (* ?x15199 l_0_7_23)))
 (let ((?x7837 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_22) ?x15614) ?x15618) ?x15621) ?x15631)))
 (= (- (- (- (- (- ?x7837 ?x15633) ?x15635) ?x15637) ?x15639) ?x15641) 0.0)))))))))))))))))))))
(assert
 (let ((?x15690 (* l_0_7_49 l_0_7_49)))
 (let ((?x15688 (* l_0_7_48 l_0_7_48)))
 (let ((?x15686 (* l_0_7_47 l_0_7_47)))
 (let ((?x15684 (* l_0_7_46 l_0_7_46)))
 (let ((?x15682 (* l_0_7_45 l_0_7_45)))
 (let ((?x15680 (* l_0_7_44 l_0_7_44)))
 (let ((?x15678 (* l_0_7_21 l_0_7_21)))
 (let ((?x15676 (* l_0_7_20 l_0_7_20)))
 (let ((?x15674 (* l_0_7_19 l_0_7_19)))
 (let ((?x15665 (* l_0_7_18 l_0_7_18)))
 (let ((?x7980 (+ (+ (+ (* l_0_7_16 l_0_7_16) (* l_0_7_17 l_0_7_17)) ?x15665) ?x15674)))
 (let ((?x7892 (- (- (- (- (- (+ (+ ?x7980 ?x15676) ?x15678) ?x15680) ?x15682) ?x15684) ?x15686) ?x15688)))
 (= (- ?x7892 ?x15690) 0.0))))))))))))))
(assert
 (let ((?x15731 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x15728 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x15725 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x15722 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x15719 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x15716 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x15713 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x15710 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x15707 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x15244 (* 2.0 l_0_7_18)))
 (let ((?x15704 (* ?x15244 l_0_7_24)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x6846 (* ?x6447 l_0_7_23)))
 (let ((?x8035 (+ (+ (+ (+ (* (* 2.0 l_0_7_16) l_0_7_22) ?x6846) ?x15704) ?x15707) ?x15710)))
 (let ((?x7989 (- (- (- (- (- (- (+ ?x8035 ?x15713) ?x15716) ?x15719) ?x15722) ?x15725) ?x15728) ?x15731)))
 (= ?x7989 0.0)))))))))))))))))
(assert
 (let ((?x15775 (* l_0_7_56 l_0_7_56)))
 (let ((?x15773 (* l_0_7_55 l_0_7_55)))
 (let ((?x15771 (* l_0_7_54 l_0_7_54)))
 (let ((?x15769 (* l_0_7_53 l_0_7_53)))
 (let ((?x15767 (* l_0_7_52 l_0_7_52)))
 (let ((?x15765 (* l_0_7_51 l_0_7_51)))
 (let ((?x15763 (* l_0_7_50 l_0_7_50)))
 (let ((?x15761 (* l_0_7_28 l_0_7_28)))
 (let ((?x15759 (* l_0_7_27 l_0_7_27)))
 (let ((?x15757 (* l_0_7_26 l_0_7_26)))
 (let ((?x15755 (* l_0_7_25 l_0_7_25)))
 (let ((?x15753 (* l_0_7_24 l_0_7_24)))
 (let ((?x8191 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x15753) ?x15755)))
 (let ((?x8130 (- (- (- (- (+ (+ (+ ?x8191 ?x15757) ?x15759) ?x15761) ?x15763) ?x15765) ?x15767) ?x15769)))
 (= (- (- (- ?x8130 ?x15771) ?x15773) ?x15775) 0.0))))))))))))))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15083 (* ?x15082 l_0_7_30)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_2) ?x15083) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15089 (* ?x15082 l_0_7_32)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_4) ?x15089) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15096 (* ?x15082 l_0_7_35)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_7) ?x15096) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15106 (* ?x15082 l_0_7_39)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_11) ?x15106) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15116 (* ?x15082 l_0_7_44)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_16) ?x15116) 0.0))))
(assert
 (let ((?x15082 (* 2.0 l_0_7_29)))
 (let ((?x15126 (* ?x15082 l_0_7_50)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_22) ?x15126) 0.0))))
(assert
 (let ((?x15145 (* l_0_7_31 l_0_7_31)))
 (let ((?x15143 (* l_0_7_30 l_0_7_30)))
 (= (- (- (+ (* l_0_7_2 l_0_7_2) (* l_0_7_3 l_0_7_3)) ?x15143) ?x15145) 0.0))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15167 (* ?x15166 l_0_7_33)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15164 (* ?x15163 l_0_7_32)))
 (let ((?x15160 (* 2.0 l_0_7_3)))
 (let ((?x15161 (* ?x15160 l_0_7_5)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_4) ?x15161) ?x15164) ?x15167) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15190 (* ?x15166 l_0_7_36)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15188 (* ?x15163 l_0_7_35)))
 (let ((?x15160 (* 2.0 l_0_7_3)))
 (let ((?x15181 (* ?x15160 l_0_7_8)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_7) ?x15181) ?x15188) ?x15190) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15209 (* ?x15166 l_0_7_40)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15207 (* ?x15163 l_0_7_39)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x15205 (* ?x15199 l_0_7_3)))
 (= (- (- (+ (* (* 2.0 l_0_7_11) l_0_7_2) ?x15205) ?x15207) ?x15209) 0.0))))))))
(assert
 (let ((?x15166 (* 2.0 l_0_7_31)))
 (let ((?x15222 (* ?x15166 l_0_7_45)))
 (let ((?x15163 (* 2.0 l_0_7_30)))
 (let ((?x15220 (* ?x15163 l_0_7_44)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x6448 (* ?x6447 l_0_7_3)))
 (= (- (- (+ (* (* 2.0 l_0_7_16) l_0_7_2) ?x6448) ?x15220) ?x15222) 0.0))))))))
(assert
 (let ((?x15297 (* l_0_7_6 l_0_7_6)))
 (let ((?x15295 (* l_0_7_5 l_0_7_5)))
 (let ((?x15293 (* l_0_7_4 l_0_7_4)))
 (let ((?x15291 (* l_0_7_34 l_0_7_34)))
 (let ((?x7113 (+ (- (- (* (- l_0_7_32) l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x15291) ?x15293)))
 (= (+ (+ ?x7113 ?x15295) ?x15297) 0.0)))))))
(assert
 (let ((?x15317 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x15314 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x15311 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15308 (* ?x15263 l_0_7_37)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x6541 (* ?x15260 l_0_7_36)))
 (let ((?x7024 (+ (+ (- (- (* (* (- 2.0) l_0_7_32) l_0_7_35) ?x6541) ?x15308) ?x15311) ?x15314)))
 (= (+ ?x7024 ?x15317) 0.0))))))))))
(assert
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15342 (* ?x15263 l_0_7_41)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x15340 (* ?x15260 l_0_7_40)))
 (let ((?x15257 (* 2.0 l_0_7_32)))
 (let ((?x15338 (* ?x15257 l_0_7_39)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x6558 (* ?x6555 l_0_7_6)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x6560 (* ?x15199 l_0_7_5)))
 (let ((?x7261 (- (- (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x6560) ?x6558) ?x15338) ?x15340)))
 (= (- ?x7261 ?x15342) 0.0)))))))))))))
(assert
 (let ((?x15263 (* 2.0 l_0_7_34)))
 (let ((?x15383 (* ?x15263 l_0_7_52)))
 (let ((?x15260 (* 2.0 l_0_7_33)))
 (let ((?x15381 (* ?x15260 l_0_7_51)))
 (let ((?x15257 (* 2.0 l_0_7_32)))
 (let ((?x15379 (* ?x15257 l_0_7_50)))
 (let ((?x15376 (* 2.0 l_0_7_24)))
 (let ((?x15377 (* ?x15376 l_0_7_6)))
 (let ((?x15250 (* 2.0 l_0_7_23)))
 (let ((?x6605 (* ?x15250 l_0_7_5)))
 (let ((?x7288 (- (- (+ (+ (* (* 2.0 l_0_7_22) l_0_7_4) ?x6605) ?x15377) ?x15379) ?x15381)))
 (= (- ?x7288 ?x15383) 0.0)))))))))))))
(assert
 (let ((?x15406 (* l_0_7_9 l_0_7_9)))
 (let ((?x15404 (* l_0_7_8 l_0_7_8)))
 (let ((?x15402 (* l_0_7_7 l_0_7_7)))
 (let ((?x15400 (* l_0_7_38 l_0_7_38)))
 (let ((?x15398 (* l_0_7_37 l_0_7_37)))
 (let ((?x15396 (* l_0_7_36 l_0_7_36)))
 (let ((?x15828 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x15396) ?x15398)))
 (= (+ (+ (+ (- ?x15828 ?x15400) ?x15402) ?x15404) ?x15406) 0.0)))))))))
(assert
 (let ((?x15441 (* 2.0 l_0_7_38)))
 (let ((?x15442 (* ?x15441 l_0_7_42)))
 (let ((?x15438 (* 2.0 l_0_7_37)))
 (let ((?x15439 (* ?x15438 l_0_7_41)))
 (let ((?x15435 (* 2.0 l_0_7_36)))
 (let ((?x15436 (* ?x15435 l_0_7_40)))
 (let ((?x15432 (* 2.0 l_0_7_35)))
 (let ((?x15433 (* ?x15432 l_0_7_39)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x15424 (* ?x6555 l_0_7_9)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x15422 (* ?x15199 l_0_7_8)))
 (let ((?x15419 (* 2.0 l_0_7_11)))
 (let ((?x15420 (* ?x15419 l_0_7_7)))
 (let ((?x7370 (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x15420) ?x15422) ?x15424)))
 (= (- (- (- (- ?x7370 ?x15433) ?x15436) ?x15439) ?x15442) 0.0)))))))))))))))))
(assert
 (let ((?x15441 (* 2.0 l_0_7_38)))
 (let ((?x15476 (* ?x15441 l_0_7_47)))
 (let ((?x15438 (* 2.0 l_0_7_37)))
 (let ((?x15474 (* ?x15438 l_0_7_46)))
 (let ((?x15435 (* 2.0 l_0_7_36)))
 (let ((?x15472 (* ?x15435 l_0_7_45)))
 (let ((?x15432 (* 2.0 l_0_7_35)))
 (let ((?x15470 (* ?x15432 l_0_7_44)))
 (let ((?x15244 (* 2.0 l_0_7_18)))
 (let ((?x15468 (* ?x15244 l_0_7_9)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x15466 (* ?x6447 l_0_7_8)))
 (let ((?x15234 (* 2.0 l_0_7_16)))
 (let ((?x15464 (* ?x15234 l_0_7_7)))
 (let ((?x15852 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_19) ?x15464) ?x15466) ?x15468) ?x15470)))
 (= (- (- (- ?x15852 ?x15472) ?x15474) ?x15476) 0.0)))))))))))))))))
(assert
 (let ((?x15441 (* 2.0 l_0_7_38)))
 (let ((?x15512 (* ?x15441 l_0_7_53)))
 (let ((?x15438 (* 2.0 l_0_7_37)))
 (let ((?x15510 (* ?x15438 l_0_7_52)))
 (let ((?x15435 (* 2.0 l_0_7_36)))
 (let ((?x15508 (* ?x15435 l_0_7_51)))
 (let ((?x15432 (* 2.0 l_0_7_35)))
 (let ((?x15506 (* ?x15432 l_0_7_50)))
 (let ((?x15376 (* 2.0 l_0_7_24)))
 (let ((?x15504 (* ?x15376 l_0_7_9)))
 (let ((?x15250 (* 2.0 l_0_7_23)))
 (let ((?x15495 (* ?x15250 l_0_7_8)))
 (let ((?x6737 (* 2.0 l_0_7_22)))
 (let ((?x15492 (* ?x6737 l_0_7_7)))
 (let ((?x7461 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_25) ?x15492) ?x15495) ?x15504) ?x15506)))
 (= (- (- (- ?x7461 ?x15508) ?x15510) ?x15512) 0.0)))))))))))))))))
(assert
 (let ((?x15555 (* l_0_7_43 l_0_7_43)))
 (let ((?x15553 (* l_0_7_42 l_0_7_42)))
 (let ((?x15551 (* l_0_7_41 l_0_7_41)))
 (let ((?x15549 (* l_0_7_40 l_0_7_40)))
 (let ((?x15547 (* l_0_7_39 l_0_7_39)))
 (let ((?x15545 (* l_0_7_15 l_0_7_15)))
 (let ((?x15543 (* l_0_7_14 l_0_7_14)))
 (let ((?x15534 (* l_0_7_13 l_0_7_13)))
 (let ((?x7647 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x15534) ?x15543)))
 (= (- (- (- (- (- (+ ?x7647 ?x15545) ?x15547) ?x15549) ?x15551) ?x15553) ?x15555) 0.0)))))))))))
(assert
 (let ((?x15589 (* 2.0 l_0_7_43)))
 (let ((?x15590 (* ?x15589 l_0_7_48)))
 (let ((?x15586 (* 2.0 l_0_7_42)))
 (let ((?x15587 (* ?x15586 l_0_7_47)))
 (let ((?x15583 (* 2.0 l_0_7_41)))
 (let ((?x15584 (* ?x15583 l_0_7_46)))
 (let ((?x15580 (* 2.0 l_0_7_40)))
 (let ((?x15581 (* ?x15580 l_0_7_45)))
 (let ((?x15577 (* 2.0 l_0_7_39)))
 (let ((?x15578 (* ?x15577 l_0_7_44)))
 (let ((?x15574 (* 2.0 l_0_7_15)))
 (let ((?x15575 (* ?x15574 l_0_7_20)))
 (let ((?x6767 (* 2.0 l_0_7_14)))
 (let ((?x15572 (* ?x6767 l_0_7_19)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x6763 (* ?x6555 l_0_7_18)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x6768 (* ?x15199 l_0_7_17)))
 (let ((?x7742 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_16) ?x6768) ?x6763) ?x15572) ?x15575)))
 (= (- (- (- (- (- ?x7742 ?x15578) ?x15581) ?x15584) ?x15587) ?x15590) 0.0)))))))))))))))))))))
(assert
 (let ((?x15589 (* 2.0 l_0_7_43)))
 (let ((?x15641 (* ?x15589 l_0_7_54)))
 (let ((?x15586 (* 2.0 l_0_7_42)))
 (let ((?x15639 (* ?x15586 l_0_7_53)))
 (let ((?x15583 (* 2.0 l_0_7_41)))
 (let ((?x15637 (* ?x15583 l_0_7_52)))
 (let ((?x15580 (* 2.0 l_0_7_40)))
 (let ((?x15635 (* ?x15580 l_0_7_51)))
 (let ((?x15577 (* 2.0 l_0_7_39)))
 (let ((?x15633 (* ?x15577 l_0_7_50)))
 (let ((?x15574 (* 2.0 l_0_7_15)))
 (let ((?x15631 (* ?x15574 l_0_7_26)))
 (let ((?x6767 (* 2.0 l_0_7_14)))
 (let ((?x15621 (* ?x6767 l_0_7_25)))
 (let ((?x6555 (* 2.0 l_0_7_13)))
 (let ((?x15618 (* ?x6555 l_0_7_24)))
 (let ((?x15199 (* 2.0 l_0_7_12)))
 (let ((?x15614 (* ?x15199 l_0_7_23)))
 (let ((?x7837 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_22) ?x15614) ?x15618) ?x15621) ?x15631)))
 (= (- (- (- (- (- ?x7837 ?x15633) ?x15635) ?x15637) ?x15639) ?x15641) 0.0)))))))))))))))))))))
(assert
 (let ((?x15690 (* l_0_7_49 l_0_7_49)))
 (let ((?x15688 (* l_0_7_48 l_0_7_48)))
 (let ((?x15686 (* l_0_7_47 l_0_7_47)))
 (let ((?x15684 (* l_0_7_46 l_0_7_46)))
 (let ((?x15682 (* l_0_7_45 l_0_7_45)))
 (let ((?x15680 (* l_0_7_44 l_0_7_44)))
 (let ((?x15678 (* l_0_7_21 l_0_7_21)))
 (let ((?x15676 (* l_0_7_20 l_0_7_20)))
 (let ((?x15674 (* l_0_7_19 l_0_7_19)))
 (let ((?x15665 (* l_0_7_18 l_0_7_18)))
 (let ((?x7980 (+ (+ (+ (* l_0_7_16 l_0_7_16) (* l_0_7_17 l_0_7_17)) ?x15665) ?x15674)))
 (let ((?x7892 (- (- (- (- (- (+ (+ ?x7980 ?x15676) ?x15678) ?x15680) ?x15682) ?x15684) ?x15686) ?x15688)))
 (= (- ?x7892 ?x15690) 0.0))))))))))))))
(assert
 (let ((?x15731 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x15728 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x15725 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x15722 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x15719 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x15716 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x15713 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x15710 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x15707 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x15244 (* 2.0 l_0_7_18)))
 (let ((?x15704 (* ?x15244 l_0_7_24)))
 (let ((?x6447 (* 2.0 l_0_7_17)))
 (let ((?x6846 (* ?x6447 l_0_7_23)))
 (let ((?x8035 (+ (+ (+ (+ (* (* 2.0 l_0_7_16) l_0_7_22) ?x6846) ?x15704) ?x15707) ?x15710)))
 (let ((?x7989 (- (- (- (- (- (- (+ ?x8035 ?x15713) ?x15716) ?x15719) ?x15722) ?x15725) ?x15728) ?x15731)))
 (= ?x7989 0.0)))))))))))))))))
(assert
 (let ((?x15775 (* l_0_7_56 l_0_7_56)))
 (let ((?x15773 (* l_0_7_55 l_0_7_55)))
 (let ((?x15771 (* l_0_7_54 l_0_7_54)))
 (let ((?x15769 (* l_0_7_53 l_0_7_53)))
 (let ((?x15767 (* l_0_7_52 l_0_7_52)))
 (let ((?x15765 (* l_0_7_51 l_0_7_51)))
 (let ((?x15763 (* l_0_7_50 l_0_7_50)))
 (let ((?x15761 (* l_0_7_28 l_0_7_28)))
 (let ((?x15759 (* l_0_7_27 l_0_7_27)))
 (let ((?x15757 (* l_0_7_26 l_0_7_26)))
 (let ((?x15755 (* l_0_7_25 l_0_7_25)))
 (let ((?x15753 (* l_0_7_24 l_0_7_24)))
 (let ((?x8191 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x15753) ?x15755)))
 (let ((?x8130 (- (- (- (- (+ (+ (+ ?x8191 ?x15757) ?x15759) ?x15761) ?x15763) ?x15765) ?x15767) ?x15769)))
 (= (- (- (- ?x8130 ?x15771) ?x15773) ?x15775) 0.0))))))))))))))))
(assert
 (= (- (* (* (- 1.0) l_0_7_57) l_0_7_57) (* l_0_7_85 l_0_7_85)) 0.0))
(assert
 (let ((?x8247 (- (* (* (- 2.0) l_0_7_57) l_0_7_58) (* (* 2.0 l_0_7_85) l_0_7_86))))
 (= ?x8247 0.0)))
(assert
 (let ((?x7493 (- (* (* (- 2.0) l_0_7_57) l_0_7_60) (* (* 2.0 l_0_7_85) l_0_7_88))))
 (= ?x7493 0.0)))
(assert
 (let ((?x15876 (- (* (* (- 2.0) l_0_7_57) l_0_7_63) (* (* 2.0 l_0_7_85) l_0_7_91))))
 (= ?x15876 0.0)))
(assert
 (let ((?x15891 (- (* (* (- 2.0) l_0_7_57) l_0_7_67) (* (* 2.0 l_0_7_85) l_0_7_95))))
 (= ?x15891 0.0)))
(assert
 (let ((?x15908 (- (* (* (- 2.0) l_0_7_100) l_0_7_85) (* (* 2.0 l_0_7_57) l_0_7_72))))
 (= ?x15908 0.0)))
(assert
 (let ((?x15924 (- (* (* (- 2.0) l_0_7_106) l_0_7_85) (* (* 2.0 l_0_7_57) l_0_7_78))))
 (= ?x15924 0.0)))
(assert
 (let ((?x15944 (* l_0_7_87 l_0_7_87)))
 (let ((?x15942 (* l_0_7_86 l_0_7_86)))
 (let ((?x15941 (- (* (* (- 1.0) l_0_7_58) l_0_7_58) (* (* 1.0 l_0_7_59) l_0_7_59))))
 (= (- (- ?x15941 ?x15942) ?x15944) 0.0)))))
(assert
 (let ((?x15963 (- (* (* (- 2.0) l_0_7_58) l_0_7_60) (* (* 2.0 l_0_7_59) l_0_7_61))))
 (let ((?x15969 (- (- ?x15963 (* (* 2.0 l_0_7_86) l_0_7_88)) (* (* 2.0 l_0_7_87) l_0_7_89))))
 (= ?x15969 0.0))))
(assert
 (let ((?x15996 (- (* (* (- 2.0) l_0_7_58) l_0_7_63) (* (* 2.0 l_0_7_59) l_0_7_64))))
 (let ((?x16000 (- (- ?x15996 (* (* 2.0 l_0_7_86) l_0_7_91)) (* (* 2.0 l_0_7_87) l_0_7_92))))
 (= ?x16000 0.0))))
(assert
 (let ((?x16027 (- (* (* (- 2.0) l_0_7_58) l_0_7_67) (* (* 2.0 l_0_7_59) l_0_7_68))))
 (let ((?x16031 (- (- ?x16027 (* (* 2.0 l_0_7_86) l_0_7_95)) (* (* 2.0 l_0_7_87) l_0_7_96))))
 (= ?x16031 0.0))))
(assert
 (let ((?x16058 (- (* (* (- 2.0) l_0_7_100) l_0_7_86) (* (* 2.0 l_0_7_101) l_0_7_87))))
 (let ((?x16062 (- (- ?x16058 (* (* 2.0 l_0_7_58) l_0_7_72)) (* (* 2.0 l_0_7_59) l_0_7_73))))
 (= ?x16062 0.0))))
(assert
 (let ((?x16099 (* l_0_7_90 l_0_7_90)))
 (let ((?x16097 (* l_0_7_89 l_0_7_89)))
 (let ((?x16095 (* l_0_7_88 l_0_7_88)))
 (let ((?x16091 (- (* (* (- 1.0) l_0_7_60) l_0_7_60) (* (* 1.0 l_0_7_61) l_0_7_61))))
 (let ((?x16100 (- (- (- (- ?x16091 (* (* 1.0 l_0_7_62) l_0_7_62)) ?x16095) ?x16097) ?x16099)))
 (= ?x16100 0.0)))))))
(assert
 (let ((?x16125 (- (* (* (- 2.0) l_0_7_60) l_0_7_63) (* (* 2.0 l_0_7_61) l_0_7_64))))
 (let ((?x16130 (- (- ?x16125 (* (* 2.0 l_0_7_62) l_0_7_65)) (* (* 2.0 l_0_7_88) l_0_7_91))))
 (let ((?x16136 (- (- ?x16130 (* (* 2.0 l_0_7_89) l_0_7_92)) (* (* 2.0 l_0_7_90) l_0_7_93))))
 (= ?x16136 0.0)))))
(assert
 (let ((?x16175 (- (* (* (- 2.0) l_0_7_60) l_0_7_67) (* (* 2.0 l_0_7_61) l_0_7_68))))
 (let ((?x16179 (- (- ?x16175 (* (* 2.0 l_0_7_62) l_0_7_69)) (* (* 2.0 l_0_7_88) l_0_7_95))))
 (let ((?x16183 (- (- ?x16179 (* (* 2.0 l_0_7_89) l_0_7_96)) (* (* 2.0 l_0_7_90) l_0_7_97))))
 (= ?x16183 0.0)))))
(assert
 (let ((?x16222 (- (* (* (- 2.0) l_0_7_106) l_0_7_88) (* (* 2.0 l_0_7_107) l_0_7_89))))
 (let ((?x16227 (- (- ?x16222 (* (* 2.0 l_0_7_108) l_0_7_90)) (* (* 2.0 l_0_7_60) l_0_7_78))))
 (let ((?x16231 (- (- ?x16227 (* (* 2.0 l_0_7_61) l_0_7_79)) (* (* 2.0 l_0_7_62) l_0_7_80))))
 (= ?x16231 0.0)))))
(assert
 (let ((?x16285 (* l_0_7_94 l_0_7_94)))
 (let ((?x16283 (* l_0_7_93 l_0_7_93)))
 (let ((?x16281 (* l_0_7_92 l_0_7_92)))
 (let ((?x16279 (* l_0_7_91 l_0_7_91)))
 (let ((?x16272 (- (* (* (- 1.0) l_0_7_63) l_0_7_63) (* (* 1.0 l_0_7_64) l_0_7_64))))
 (let ((?x16278 (- (- ?x16272 (* (* 1.0 l_0_7_65) l_0_7_65)) (* (* 1.0 l_0_7_66) l_0_7_66))))
 (= (- (- (- (- ?x16278 ?x16279) ?x16281) ?x16283) ?x16285) 0.0))))))))
(assert
 (let ((?x16317 (- (* (* (- 2.0) l_0_7_100) l_0_7_91) (* (* 2.0 l_0_7_101) l_0_7_92))))
 (let ((?x16322 (- (- ?x16317 (* (* 2.0 l_0_7_102) l_0_7_93)) (* (* 2.0 l_0_7_103) l_0_7_94))))
 (let ((?x16326 (- (- ?x16322 (* (* 2.0 l_0_7_63) l_0_7_72)) (* (* 2.0 l_0_7_64) l_0_7_73))))
 (let ((?x16330 (- (- ?x16326 (* (* 2.0 l_0_7_65) l_0_7_74)) (* (* 2.0 l_0_7_66) l_0_7_75))))
 (= ?x16330 0.0))))))
(assert
 (let ((?x16381 (- (* (* (- 2.0) l_0_7_106) l_0_7_91) (* (* 2.0 l_0_7_107) l_0_7_92))))
 (let ((?x16386 (- (- ?x16381 (* (* 2.0 l_0_7_108) l_0_7_93)) (* (* 2.0 l_0_7_109) l_0_7_94))))
 (let ((?x16390 (- (- ?x16386 (* (* 2.0 l_0_7_63) l_0_7_78)) (* (* 2.0 l_0_7_64) l_0_7_79))))
 (let ((?x16394 (- (- ?x16390 (* (* 2.0 l_0_7_65) l_0_7_80)) (* (* 2.0 l_0_7_66) l_0_7_81))))
 (= ?x16394 0.0))))))
(assert
 (let ((?x16459 (* l_0_7_99 l_0_7_99)))
 (let ((?x16457 (* l_0_7_98 l_0_7_98)))
 (let ((?x16455 (* l_0_7_97 l_0_7_97)))
 (let ((?x16453 (* l_0_7_96 l_0_7_96)))
 (let ((?x16451 (* l_0_7_95 l_0_7_95)))
 (let ((?x16441 (- (* (* (- 1.0) l_0_7_67) l_0_7_67) (* (* 1.0 l_0_7_68) l_0_7_68))))
 (let ((?x16447 (- (- ?x16441 (* (* 1.0 l_0_7_69) l_0_7_69)) (* (* 1.0 l_0_7_70) l_0_7_70))))
 (let ((?x16456 (- (- (- (- ?x16447 (* (* 1.0 l_0_7_71) l_0_7_71)) ?x16451) ?x16453) ?x16455)))
 (= (- (- ?x16456 ?x16457) ?x16459) 0.0))))))))))
(assert
 (let ((?x16484 (- (* (* (- 2.0) l_0_7_100) l_0_7_95) (* (* 2.0 l_0_7_101) l_0_7_96))))
 (let ((?x16488 (- (- ?x16484 (* (* 2.0 l_0_7_102) l_0_7_97)) (* (* 2.0 l_0_7_103) l_0_7_98))))
 (let ((?x16494 (- (- ?x16488 (* (* 2.0 l_0_7_104) l_0_7_99)) (* (* 2.0 l_0_7_67) l_0_7_72))))
 (let ((?x16500 (- (- ?x16494 (* (* 2.0 l_0_7_68) l_0_7_73)) (* (* 2.0 l_0_7_69) l_0_7_74))))
 (let ((?x16506 (- (- ?x16500 (* (* 2.0 l_0_7_70) l_0_7_75)) (* (* 2.0 l_0_7_71) l_0_7_76))))
 (= ?x16506 0.0)))))))
(assert
 (let ((?x16567 (- (* (* (- 2.0) l_0_7_106) l_0_7_95) (* (* 2.0 l_0_7_107) l_0_7_96))))
 (let ((?x16571 (- (- ?x16567 (* (* 2.0 l_0_7_108) l_0_7_97)) (* (* 2.0 l_0_7_109) l_0_7_98))))
 (let ((?x16576 (- (- ?x16571 (* (* 2.0 l_0_7_110) l_0_7_99)) (* (* 2.0 l_0_7_67) l_0_7_78))))
 (let ((?x16580 (- (- ?x16576 (* (* 2.0 l_0_7_68) l_0_7_79)) (* (* 2.0 l_0_7_69) l_0_7_80))))
 (let ((?x16584 (- (- ?x16580 (* (* 2.0 l_0_7_70) l_0_7_81)) (* (* 2.0 l_0_7_71) l_0_7_82))))
 (= ?x16584 0.0)))))))
(assert
 (let ((?x16641 (* l_0_7_105 l_0_7_105)))
 (let ((?x16639 (* l_0_7_104 l_0_7_104)))
 (let ((?x16637 (* l_0_7_103 l_0_7_103)))
 (let ((?x16635 (* l_0_7_102 l_0_7_102)))
 (let ((?x16636 (- (- (* (- l_0_7_100) l_0_7_100) (* l_0_7_101 l_0_7_101)) ?x16635)))
 (let ((?x16645 (- (- (- (- ?x16636 ?x16637) ?x16639) ?x16641) (* (* 1.0 l_0_7_72) l_0_7_72))))
 (let ((?x16651 (- (- ?x16645 (* (* 1.0 l_0_7_73) l_0_7_73)) (* (* 1.0 l_0_7_74) l_0_7_74))))
 (let ((?x16657 (- (- ?x16651 (* (* 1.0 l_0_7_75) l_0_7_75)) (* (* 1.0 l_0_7_76) l_0_7_76))))
 (= (- ?x16657 (* (* 1.0 l_0_7_77) l_0_7_77)) 0.0))))))))))
(assert
 (let ((?x16706 (- (* (* (- 2.0) l_0_7_100) l_0_7_106) (* (* 2.0 l_0_7_101) l_0_7_107))))
 (let ((?x16710 (- (- ?x16706 (* (* 2.0 l_0_7_102) l_0_7_108)) (* (* 2.0 l_0_7_103) l_0_7_109))))
 (let ((?x16715 (- (- ?x16710 (* (* 2.0 l_0_7_104) l_0_7_110)) (* (* 2.0 l_0_7_105) l_0_7_111))))
 (let ((?x16721 (- (- ?x16715 (* (* 2.0 l_0_7_72) l_0_7_78)) (* (* 2.0 l_0_7_73) l_0_7_79))))
 (let ((?x16727 (- (- ?x16721 (* (* 2.0 l_0_7_74) l_0_7_80)) (* (* 2.0 l_0_7_75) l_0_7_81))))
 (let ((?x16733 (- (- ?x16727 (* (* 2.0 l_0_7_76) l_0_7_82)) (* (* 2.0 l_0_7_77) l_0_7_83))))
 (= ?x16733 0.0))))))))
(assert
 (let ((?x16818 (* l_0_7_112 l_0_7_112)))
 (let ((?x16816 (* l_0_7_111 l_0_7_111)))
 (let ((?x16814 (* l_0_7_110 l_0_7_110)))
 (let ((?x16812 (* l_0_7_109 l_0_7_109)))
 (let ((?x16810 (* l_0_7_108 l_0_7_108)))
 (let ((?x16811 (- (- (* (- l_0_7_106) l_0_7_106) (* l_0_7_107 l_0_7_107)) ?x16810)))
 (let ((?x16822 (- (- (- (- (- ?x16811 ?x16812) ?x16814) ?x16816) ?x16818) (* (* 1.0 l_0_7_78) l_0_7_78))))
 (let ((?x16828 (- (- ?x16822 (* (* 1.0 l_0_7_79) l_0_7_79)) (* (* 1.0 l_0_7_80) l_0_7_80))))
 (let ((?x16834 (- (- ?x16828 (* (* 1.0 l_0_7_81) l_0_7_81)) (* (* 1.0 l_0_7_82) l_0_7_82))))
 (let ((?x16840 (- (- ?x16834 (* (* 1.0 l_0_7_83) l_0_7_83)) (* (* 1.0 l_0_7_84) l_0_7_84))))
 (= ?x16840 0.0))))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_28 0.0))
(assert
 (>= l_0_7_29 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_34 0.0))
(assert
 (>= l_0_7_38 0.0))
(assert
 (>= l_0_7_43 0.0))
(assert
 (>= l_0_7_49 0.0))
(assert
 (>= l_0_7_56 0.0))
(assert
 (>= l_0_7_57 0.0))
(assert
 (>= l_0_7_59 0.0))
(assert
 (>= l_0_7_62 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_71 0.0))
(assert
 (>= l_0_7_77 0.0))
(assert
 (>= l_0_7_84 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_87 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_94 0.0))
(assert
 (>= l_0_7_99 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (>= l_0_7_112 0.0))
(assert
 (let ((?x16934 (* l_0_8_29 l_0_8_29)))
 (let ((?x16927 (- (- (* l_0_8_1 l_0_8_1) (* (* 2.0 l_0_8_106) l_0_8_86)) (* (* 2.0 l_0_8_107) l_0_8_87))))
 (let ((?x16933 (- (- ?x16927 (* (* 2.0 l_0_8_114) l_0_8_134)) (* (* 2.0 l_0_8_115) l_0_8_135))))
 (let ((?x16941 (- (- (- ?x16933 ?x16934) (* (* 2.0 l_0_8_58) l_0_8_78)) (* (* 2.0 l_0_8_59) l_0_8_79))))
 (= (+ ?x16941 1.0) 0.0))))))
(assert
 (let ((?x16934 (* l_0_8_29 l_0_8_29)))
 (let ((?x16978 (- (- (* l_0_8_1 l_0_8_1) (* (* 2.0 l_0_8_119) l_0_8_123)) (* (* 2.0 l_0_8_120) l_0_8_124))))
 (let ((?x16984 (- (- ?x16978 (* (* 2.0 l_0_8_121) l_0_8_125)) (* (* 2.0 l_0_8_122) l_0_8_126))))
 (let ((?x16991 (- (- (- ?x16984 ?x16934) (* (* 2.0 l_0_8_63) l_0_8_67)) (* (* 2.0 l_0_8_64) l_0_8_68))))
 (let ((?x16997 (- (- ?x16991 (* (* 2.0 l_0_8_65) l_0_8_69)) (* (* 2.0 l_0_8_66) l_0_8_70))))
 (let ((?x17003 (- (- ?x16997 (* (* 2.0 l_0_8_91) l_0_8_95)) (* (* 2.0 l_0_8_92) l_0_8_96))))
 (let ((?x17009 (- (- ?x17003 (* (* 2.0 l_0_8_93) l_0_8_97)) (* (* 2.0 l_0_8_94) l_0_8_98))))
 (= (+ ?x17009 1.0) 0.0)))))))))
(assert
 (let ((?x16934 (* l_0_8_29 l_0_8_29)))
 (let ((?x17028 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_100) l_0_8_88)) (* (* 2.0 l_0_8_101) l_0_8_89))))
 (let ((?x17034 (- (- ?x17028 (* (* 2.0 l_0_8_102) l_0_8_90)) (* (* 2.0 l_0_8_116) l_0_8_128))))
 (let ((?x17040 (- (- ?x17034 (* (* 2.0 l_0_8_117) l_0_8_129)) (* (* 2.0 l_0_8_118) l_0_8_130))))
 (let ((?x17047 (- (- (+ ?x17040 ?x16934) (* (* 2.0 l_0_8_60) l_0_8_72)) (* (* 2.0 l_0_8_61) l_0_8_73))))
 (= (- (- ?x17047 (* (* 2.0 l_0_8_62) l_0_8_74)) 1.0) 0.0)))))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x9187 (* ?x9193 l_0_8_30)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_2) ?x9187) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17082 (* ?x9193 l_0_8_32)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x17082) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17090 (* ?x9193 l_0_8_35)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) ?x17090) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17100 (* ?x9193 l_0_8_39)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) ?x17100) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17110 (* ?x9193 l_0_8_44)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_16) ?x17110) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17120 (* ?x9193 l_0_8_50)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_22) ?x17120) 0.0))))
(assert
 (let ((?x17139 (* l_0_8_31 l_0_8_31)))
 (let ((?x17137 (* l_0_8_30 l_0_8_30)))
 (let ((?x17140 (+ (+ (- (* (- l_0_8_2) l_0_8_2) (* l_0_8_3 l_0_8_3)) ?x17137) ?x17139)))
 (= ?x17140 0.0)))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17161 (* ?x17160 l_0_8_33)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17158 (* ?x17157 l_0_8_32)))
 (let ((?x17154 (* 2.0 l_0_8_3)))
 (let ((?x17155 (* ?x17154 l_0_8_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_2) l_0_8_4) ?x17155) ?x17158) ?x17161) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17180 (* ?x17160 l_0_8_36)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17178 (* ?x17157 l_0_8_35)))
 (let ((?x17154 (* 2.0 l_0_8_3)))
 (let ((?x17176 (* ?x17154 l_0_8_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_2) l_0_8_7) ?x17176) ?x17178) ?x17180) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17201 (* ?x17160 l_0_8_40)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17199 (* ?x17157 l_0_8_39)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17197 (* ?x17196 l_0_8_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x17197) ?x17199) ?x17201) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17222 (* ?x17160 l_0_8_45)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17220 (* ?x17157 l_0_8_44)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17218 (* ?x17217 l_0_8_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_16) l_0_8_2) ?x17218) ?x17220) ?x17222) 0.0))))))))
(assert
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x17264 (* ?x17263 l_0_8_46)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x17261 (* ?x17260 l_0_8_45)))
 (let ((?x17257 (* 2.0 l_0_8_32)))
 (let ((?x17258 (* ?x17257 l_0_8_44)))
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17255 (* ?x17160 l_0_8_51)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17253 (* ?x17157 l_0_8_50)))
 (let ((?x17250 (* 2.0 l_0_8_23)))
 (let ((?x17251 (* ?x17250 l_0_8_3)))
 (let ((?x17247 (* 2.0 l_0_8_2)))
 (let ((?x17248 (* ?x17247 l_0_8_22)))
 (let ((?x17244 (* 2.0 l_0_8_18)))
 (let ((?x17245 (* ?x17244 l_0_8_6)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17237 (* ?x17217 l_0_8_5)))
 (let ((?x17234 (* 2.0 l_0_8_16)))
 (let ((?x17236 (* ?x17234 l_0_8_4)))
 (let ((?x17259 (- (+ (+ (- (- (+ (+ ?x17236 ?x17237) ?x17245) ?x17248) ?x17251) ?x17253) ?x17255) ?x17258)))
 (= (- (- ?x17259 ?x17261) ?x17264) 0.0)))))))))))))))))))))))
(assert
 (let ((?x9294 (* l_0_8_6 l_0_8_6)))
 (let ((?x9295 (* l_0_8_5 l_0_8_5)))
 (let ((?x9280 (* l_0_8_4 l_0_8_4)))
 (let ((?x9268 (* l_0_8_34 l_0_8_34)))
 (let ((?x9284 (- (+ (+ (* l_0_8_32 l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x9268) ?x9280)))
 (= (- (- ?x9284 ?x9295) ?x9294) 0.0)))))))
(assert
 (let ((?x17304 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x17301 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x17298 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x17295 (* ?x17263 l_0_8_37)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x9331 (* ?x17260 l_0_8_36)))
 (let ((?x17302 (- (- (+ (+ (* (* 2.0 l_0_8_32) l_0_8_35) ?x9331) ?x17295) ?x17298) ?x17301)))
 (= (- ?x17302 ?x17304) 0.0))))))))))
(assert
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x17338 (* ?x17263 l_0_8_41)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x17336 (* ?x17260 l_0_8_40)))
 (let ((?x17257 (* 2.0 l_0_8_32)))
 (let ((?x17334 (* ?x17257 l_0_8_39)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17332 (* ?x17331 l_0_8_6)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17329 (* ?x17196 l_0_8_5)))
 (let ((?x17337 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x17329) ?x17332) ?x17334) ?x17336)))
 (= (+ ?x17337 ?x17338) 0.0)))))))))))))
(assert
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x17264 (* ?x17263 l_0_8_46)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x17261 (* ?x17260 l_0_8_45)))
 (let ((?x17257 (* 2.0 l_0_8_32)))
 (let ((?x17258 (* ?x17257 l_0_8_44)))
 (let ((?x17244 (* 2.0 l_0_8_18)))
 (let ((?x17245 (* ?x17244 l_0_8_6)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17237 (* ?x17217 l_0_8_5)))
 (let ((?x17362 (+ (+ (- (- (* (* (- 2.0) l_0_8_16) l_0_8_4) ?x17237) ?x17245) ?x17258) ?x17261)))
 (= (+ ?x17362 ?x17264) 0.0)))))))))))))
(assert
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x9367 (* ?x17263 l_0_8_52)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x9363 (* ?x17260 l_0_8_51)))
 (let ((?x17257 (* 2.0 l_0_8_32)))
 (let ((?x9368 (* ?x17257 l_0_8_50)))
 (let ((?x9350 (* 2.0 l_0_8_24)))
 (let ((?x9356 (* ?x9350 l_0_8_6)))
 (let ((?x17250 (* 2.0 l_0_8_23)))
 (let ((?x9338 (* ?x17250 l_0_8_5)))
 (let ((?x9366 (+ (+ (- (- (* (* (- 2.0) l_0_8_22) l_0_8_4) ?x9338) ?x9356) ?x9368) ?x9363)))
 (= (+ ?x9366 ?x9367) 0.0)))))))))))))
(assert
 (let ((?x17403 (* l_0_8_9 l_0_8_9)))
 (let ((?x17401 (* l_0_8_8 l_0_8_8)))
 (let ((?x17399 (* l_0_8_7 l_0_8_7)))
 (let ((?x17397 (* l_0_8_38 l_0_8_38)))
 (let ((?x17395 (* l_0_8_37 l_0_8_37)))
 (let ((?x17393 (* l_0_8_36 l_0_8_36)))
 (let ((?x17396 (+ (+ (+ (* (- l_0_8_10) l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x17393) ?x17395)))
 (= (- (- (- (+ ?x17396 ?x17397) ?x17399) ?x17401) ?x17403) 0.0)))))))))
(assert
 (let ((?x17441 (* 2.0 l_0_8_38)))
 (let ((?x17442 (* ?x17441 l_0_8_42)))
 (let ((?x17438 (* 2.0 l_0_8_37)))
 (let ((?x17439 (* ?x17438 l_0_8_41)))
 (let ((?x17435 (* 2.0 l_0_8_36)))
 (let ((?x17436 (* ?x17435 l_0_8_40)))
 (let ((?x17432 (* 2.0 l_0_8_35)))
 (let ((?x17433 (* ?x17432 l_0_8_39)))
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x17264 (* ?x17263 l_0_8_46)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x17261 (* ?x17260 l_0_8_45)))
 (let ((?x17257 (* 2.0 l_0_8_32)))
 (let ((?x17258 (* ?x17257 l_0_8_44)))
 (let ((?x17244 (* 2.0 l_0_8_18)))
 (let ((?x17245 (* ?x17244 l_0_8_6)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17237 (* ?x17217 l_0_8_5)))
 (let ((?x17234 (* 2.0 l_0_8_16)))
 (let ((?x17236 (* ?x17234 l_0_8_4)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17424 (* ?x17331 l_0_8_9)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17422 (* ?x17196 l_0_8_8)))
 (let ((?x17419 (* 2.0 l_0_8_11)))
 (let ((?x17420 (* ?x17419 l_0_8_7)))
 (let ((?x17426 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x17420) ?x17422) ?x17424) ?x17236)))
 (let ((?x17437 (+ (+ (- (- (- (+ (+ ?x17426 ?x17237) ?x17245) ?x17258) ?x17261) ?x17264) ?x17433) ?x17436)))
 (= (+ (+ ?x17437 ?x17439) ?x17442) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x17441 (* 2.0 l_0_8_38)))
 (let ((?x17489 (* ?x17441 l_0_8_47)))
 (let ((?x17438 (* 2.0 l_0_8_37)))
 (let ((?x17487 (* ?x17438 l_0_8_46)))
 (let ((?x17435 (* 2.0 l_0_8_36)))
 (let ((?x17485 (* ?x17435 l_0_8_45)))
 (let ((?x17432 (* 2.0 l_0_8_35)))
 (let ((?x17483 (* ?x17432 l_0_8_44)))
 (let ((?x17244 (* 2.0 l_0_8_18)))
 (let ((?x17481 (* ?x17244 l_0_8_9)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17479 (* ?x17217 l_0_8_8)))
 (let ((?x17234 (* 2.0 l_0_8_16)))
 (let ((?x17477 (* ?x17234 l_0_8_7)))
 (let ((?x17484 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_19) ?x17477) ?x17479) ?x17481) ?x17483)))
 (= (+ (+ (+ ?x17484 ?x17485) ?x17487) ?x17489) 0.0)))))))))))))))))
(assert
 (let ((?x17441 (* 2.0 l_0_8_38)))
 (let ((?x17513 (* ?x17441 l_0_8_53)))
 (let ((?x17438 (* 2.0 l_0_8_37)))
 (let ((?x17511 (* ?x17438 l_0_8_52)))
 (let ((?x17435 (* 2.0 l_0_8_36)))
 (let ((?x17509 (* ?x17435 l_0_8_51)))
 (let ((?x17432 (* 2.0 l_0_8_35)))
 (let ((?x17507 (* ?x17432 l_0_8_50)))
 (let ((?x9350 (* 2.0 l_0_8_24)))
 (let ((?x17505 (* ?x9350 l_0_8_9)))
 (let ((?x17250 (* 2.0 l_0_8_23)))
 (let ((?x17496 (* ?x17250 l_0_8_8)))
 (let ((?x9485 (* 2.0 l_0_8_22)))
 (let ((?x17495 (* ?x9485 l_0_8_7)))
 (let ((?x17508 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_25) ?x17495) ?x17496) ?x17505) ?x17507)))
 (= (+ (+ (+ ?x17508 ?x17509) ?x17511) ?x17513) 0.0)))))))))))))))))
(assert
 (let ((?x17559 (* l_0_8_43 l_0_8_43)))
 (let ((?x17557 (* l_0_8_42 l_0_8_42)))
 (let ((?x17555 (* l_0_8_41 l_0_8_41)))
 (let ((?x17553 (* l_0_8_40 l_0_8_40)))
 (let ((?x17551 (* l_0_8_39 l_0_8_39)))
 (let ((?x17549 (* l_0_8_15 l_0_8_15)))
 (let ((?x17547 (* l_0_8_14 l_0_8_14)))
 (let ((?x17538 (* l_0_8_13 l_0_8_13)))
 (let ((?x17548 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x17538) ?x17547)))
 (= (+ (+ (+ (+ (+ (- ?x17548 ?x17549) ?x17551) ?x17553) ?x17555) ?x17557) ?x17559) 0.0)))))))))))
(assert
 (let ((?x17604 (* 2.0 l_0_8_43)))
 (let ((?x17605 (* ?x17604 l_0_8_48)))
 (let ((?x17601 (* 2.0 l_0_8_42)))
 (let ((?x17602 (* ?x17601 l_0_8_47)))
 (let ((?x17598 (* 2.0 l_0_8_41)))
 (let ((?x17599 (* ?x17598 l_0_8_46)))
 (let ((?x17595 (* 2.0 l_0_8_40)))
 (let ((?x17596 (* ?x17595 l_0_8_45)))
 (let ((?x17592 (* 2.0 l_0_8_39)))
 (let ((?x17593 (* ?x17592 l_0_8_44)))
 (let ((?x17589 (* 2.0 l_0_8_15)))
 (let ((?x17590 (* ?x17589 l_0_8_20)))
 (let ((?x17586 (* 2.0 l_0_8_14)))
 (let ((?x17587 (* ?x17586 l_0_8_19)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17584 (* ?x17331 l_0_8_18)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17582 (* ?x17196 l_0_8_17)))
 (let ((?x17591 (- (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_16) ?x17582) ?x17584) ?x17587) ?x17590)))
 (= (+ (+ (+ (+ (+ ?x17591 ?x17593) ?x17596) ?x17599) ?x17602) ?x17605) 0.0)))))))))))))))))))))
(assert
 (let ((?x17604 (* 2.0 l_0_8_43)))
 (let ((?x17638 (* ?x17604 l_0_8_54)))
 (let ((?x17601 (* 2.0 l_0_8_42)))
 (let ((?x17636 (* ?x17601 l_0_8_53)))
 (let ((?x17598 (* 2.0 l_0_8_41)))
 (let ((?x17634 (* ?x17598 l_0_8_52)))
 (let ((?x17595 (* 2.0 l_0_8_40)))
 (let ((?x17632 (* ?x17595 l_0_8_51)))
 (let ((?x17592 (* 2.0 l_0_8_39)))
 (let ((?x17630 (* ?x17592 l_0_8_50)))
 (let ((?x17589 (* 2.0 l_0_8_15)))
 (let ((?x17628 (* ?x17589 l_0_8_26)))
 (let ((?x17586 (* 2.0 l_0_8_14)))
 (let ((?x17626 (* ?x17586 l_0_8_25)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17624 (* ?x17331 l_0_8_24)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17622 (* ?x17196 l_0_8_23)))
 (let ((?x17629 (- (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_22) ?x17622) ?x17624) ?x17626) ?x17628)))
 (= (+ (+ (+ (+ (+ ?x17629 ?x17630) ?x17632) ?x17634) ?x17636) ?x17638) 0.0)))))))))))))))))))))
(assert
 (let ((?x17671 (* l_0_8_49 l_0_8_49)))
 (let ((?x17669 (* l_0_8_48 l_0_8_48)))
 (let ((?x17667 (* l_0_8_47 l_0_8_47)))
 (let ((?x17665 (* l_0_8_46 l_0_8_46)))
 (let ((?x17663 (* l_0_8_45 l_0_8_45)))
 (let ((?x17661 (* l_0_8_44 l_0_8_44)))
 (let ((?x17659 (* l_0_8_21 l_0_8_21)))
 (let ((?x17657 (* l_0_8_20 l_0_8_20)))
 (let ((?x17655 (* l_0_8_19 l_0_8_19)))
 (let ((?x9558 (* l_0_8_18 l_0_8_18)))
 (let ((?x17656 (- (- (- (* (- l_0_8_16) l_0_8_16) (* l_0_8_17 l_0_8_17)) ?x9558) ?x17655)))
 (let ((?x17670 (+ (+ (+ (+ (+ (- (- ?x17656 ?x17657) ?x17659) ?x17661) ?x17663) ?x17665) ?x17667) ?x17669)))
 (= (+ ?x17670 ?x17671) 0.0))))))))))))))
(assert
 (let ((?x17724 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x17721 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x17718 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x17715 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x17712 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x17709 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x17706 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x17703 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x17700 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x17244 (* 2.0 l_0_8_18)))
 (let ((?x17697 (* ?x17244 l_0_8_24)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17695 (* ?x17217 l_0_8_23)))
 (let ((?x17704 (- (- (- (- (* (* (- 2.0) l_0_8_16) l_0_8_22) ?x17695) ?x17697) ?x17700) ?x17703)))
 (let ((?x17725 (+ (+ (+ (+ (+ (+ (- ?x17704 ?x17706) ?x17709) ?x17712) ?x17715) ?x17718) ?x17721) ?x17724)))
 (= ?x17725 0.0)))))))))))))))))
(assert
 (let ((?x17785 (* l_0_8_56 l_0_8_56)))
 (let ((?x17783 (* l_0_8_55 l_0_8_55)))
 (let ((?x17781 (* l_0_8_54 l_0_8_54)))
 (let ((?x17779 (* l_0_8_53 l_0_8_53)))
 (let ((?x17777 (* l_0_8_52 l_0_8_52)))
 (let ((?x17775 (* l_0_8_51 l_0_8_51)))
 (let ((?x17773 (* l_0_8_50 l_0_8_50)))
 (let ((?x17771 (* l_0_8_28 l_0_8_28)))
 (let ((?x17769 (* l_0_8_27 l_0_8_27)))
 (let ((?x17767 (* l_0_8_26 l_0_8_26)))
 (let ((?x17756 (* l_0_8_25 l_0_8_25)))
 (let ((?x17753 (* l_0_8_24 l_0_8_24)))
 (let ((?x17766 (- (- (- (* (- l_0_8_22) l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x17753) ?x17756)))
 (let ((?x17780 (+ (+ (+ (+ (- (- (- ?x17766 ?x17767) ?x17769) ?x17771) ?x17773) ?x17775) ?x17777) ?x17779)))
 (= (+ (+ (+ ?x17780 ?x17781) ?x17783) ?x17785) 0.0))))))))))))))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x9187 (* ?x9193 l_0_8_30)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_2) ?x9187) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17082 (* ?x9193 l_0_8_32)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_4) ?x17082) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17090 (* ?x9193 l_0_8_35)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_7) ?x17090) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17100 (* ?x9193 l_0_8_39)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_11) ?x17100) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17110 (* ?x9193 l_0_8_44)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_16) ?x17110) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17120 (* ?x9193 l_0_8_50)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_22) ?x17120) 0.0))))
(assert
 (let ((?x17139 (* l_0_8_31 l_0_8_31)))
 (let ((?x17137 (* l_0_8_30 l_0_8_30)))
 (= (- (- (+ (* l_0_8_2 l_0_8_2) (* l_0_8_3 l_0_8_3)) ?x17137) ?x17139) 0.0))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17161 (* ?x17160 l_0_8_33)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17158 (* ?x17157 l_0_8_32)))
 (let ((?x17154 (* 2.0 l_0_8_3)))
 (let ((?x17155 (* ?x17154 l_0_8_5)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_4) ?x17155) ?x17158) ?x17161) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17180 (* ?x17160 l_0_8_36)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17178 (* ?x17157 l_0_8_35)))
 (let ((?x17154 (* 2.0 l_0_8_3)))
 (let ((?x17176 (* ?x17154 l_0_8_8)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_7) ?x17176) ?x17178) ?x17180) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17201 (* ?x17160 l_0_8_40)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17199 (* ?x17157 l_0_8_39)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17197 (* ?x17196 l_0_8_3)))
 (= (- (- (+ (* (* 2.0 l_0_8_11) l_0_8_2) ?x17197) ?x17199) ?x17201) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17222 (* ?x17160 l_0_8_45)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17220 (* ?x17157 l_0_8_44)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17218 (* ?x17217 l_0_8_3)))
 (= (- (- (+ (* (* 2.0 l_0_8_16) l_0_8_2) ?x17218) ?x17220) ?x17222) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17255 (* ?x17160 l_0_8_51)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17253 (* ?x17157 l_0_8_50)))
 (let ((?x17250 (* 2.0 l_0_8_23)))
 (let ((?x17251 (* ?x17250 l_0_8_3)))
 (let ((?x17247 (* 2.0 l_0_8_2)))
 (let ((?x17248 (* ?x17247 l_0_8_22)))
 (= (- (- (+ ?x17248 ?x17251) ?x17253) ?x17255) 0.0))))))))))
(assert
 (let ((?x9294 (* l_0_8_6 l_0_8_6)))
 (let ((?x9295 (* l_0_8_5 l_0_8_5)))
 (let ((?x9280 (* l_0_8_4 l_0_8_4)))
 (let ((?x9268 (* l_0_8_34 l_0_8_34)))
 (let ((?x17817 (+ (- (- (* (- l_0_8_32) l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x9268) ?x9280)))
 (= (+ (+ ?x17817 ?x9295) ?x9294) 0.0)))))))
(assert
 (let ((?x17304 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x17301 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x17298 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x17295 (* ?x17263 l_0_8_37)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x9331 (* ?x17260 l_0_8_36)))
 (let ((?x17827 (+ (+ (- (- (* (* (- 2.0) l_0_8_32) l_0_8_35) ?x9331) ?x17295) ?x17298) ?x17301)))
 (= (+ ?x17827 ?x17304) 0.0))))))))))
(assert
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x17338 (* ?x17263 l_0_8_41)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x17336 (* ?x17260 l_0_8_40)))
 (let ((?x17257 (* 2.0 l_0_8_32)))
 (let ((?x17334 (* ?x17257 l_0_8_39)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17332 (* ?x17331 l_0_8_6)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17329 (* ?x17196 l_0_8_5)))
 (let ((?x9961 (- (- (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x17329) ?x17332) ?x17334) ?x17336)))
 (= (- ?x9961 ?x17338) 0.0)))))))))))))
(assert
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x9367 (* ?x17263 l_0_8_52)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x9363 (* ?x17260 l_0_8_51)))
 (let ((?x17257 (* 2.0 l_0_8_32)))
 (let ((?x9368 (* ?x17257 l_0_8_50)))
 (let ((?x9350 (* 2.0 l_0_8_24)))
 (let ((?x9356 (* ?x9350 l_0_8_6)))
 (let ((?x17250 (* 2.0 l_0_8_23)))
 (let ((?x9338 (* ?x17250 l_0_8_5)))
 (let ((?x9944 (- (- (+ (+ (* (* 2.0 l_0_8_22) l_0_8_4) ?x9338) ?x9356) ?x9368) ?x9363)))
 (= (- ?x9944 ?x9367) 0.0)))))))))))))
(assert
 (let ((?x17403 (* l_0_8_9 l_0_8_9)))
 (let ((?x17401 (* l_0_8_8 l_0_8_8)))
 (let ((?x17399 (* l_0_8_7 l_0_8_7)))
 (let ((?x17397 (* l_0_8_38 l_0_8_38)))
 (let ((?x17395 (* l_0_8_37 l_0_8_37)))
 (let ((?x17393 (* l_0_8_36 l_0_8_36)))
 (let ((?x10057 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x17393) ?x17395)))
 (= (+ (+ (+ (- ?x10057 ?x17397) ?x17399) ?x17401) ?x17403) 0.0)))))))))
(assert
 (let ((?x17441 (* 2.0 l_0_8_38)))
 (let ((?x17442 (* ?x17441 l_0_8_42)))
 (let ((?x17438 (* 2.0 l_0_8_37)))
 (let ((?x17439 (* ?x17438 l_0_8_41)))
 (let ((?x17435 (* 2.0 l_0_8_36)))
 (let ((?x17436 (* ?x17435 l_0_8_40)))
 (let ((?x17432 (* 2.0 l_0_8_35)))
 (let ((?x17433 (* ?x17432 l_0_8_39)))
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17255 (* ?x17160 l_0_8_51)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17253 (* ?x17157 l_0_8_50)))
 (let ((?x17250 (* 2.0 l_0_8_23)))
 (let ((?x17251 (* ?x17250 l_0_8_3)))
 (let ((?x17247 (* 2.0 l_0_8_2)))
 (let ((?x17248 (* ?x17247 l_0_8_22)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17424 (* ?x17331 l_0_8_9)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17422 (* ?x17196 l_0_8_8)))
 (let ((?x17419 (* 2.0 l_0_8_11)))
 (let ((?x17420 (* ?x17419 l_0_8_7)))
 (let ((?x17841 (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x17420) ?x17422) ?x17424)))
 (let ((?x17848 (- (- (- (- (- (+ (+ ?x17841 ?x17248) ?x17251) ?x17253) ?x17255) ?x17433) ?x17436) ?x17439)))
 (= (- ?x17848 ?x17442) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x17441 (* 2.0 l_0_8_38)))
 (let ((?x17489 (* ?x17441 l_0_8_47)))
 (let ((?x17438 (* 2.0 l_0_8_37)))
 (let ((?x17487 (* ?x17438 l_0_8_46)))
 (let ((?x17435 (* 2.0 l_0_8_36)))
 (let ((?x17485 (* ?x17435 l_0_8_45)))
 (let ((?x17432 (* 2.0 l_0_8_35)))
 (let ((?x17483 (* ?x17432 l_0_8_44)))
 (let ((?x17244 (* 2.0 l_0_8_18)))
 (let ((?x17481 (* ?x17244 l_0_8_9)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17479 (* ?x17217 l_0_8_8)))
 (let ((?x17234 (* 2.0 l_0_8_16)))
 (let ((?x17477 (* ?x17234 l_0_8_7)))
 (let ((?x17866 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_19) ?x17477) ?x17479) ?x17481) ?x17483)))
 (= (- (- (- ?x17866 ?x17485) ?x17487) ?x17489) 0.0)))))))))))))))))
(assert
 (let ((?x17441 (* 2.0 l_0_8_38)))
 (let ((?x17513 (* ?x17441 l_0_8_53)))
 (let ((?x17438 (* 2.0 l_0_8_37)))
 (let ((?x17511 (* ?x17438 l_0_8_52)))
 (let ((?x17435 (* 2.0 l_0_8_36)))
 (let ((?x17509 (* ?x17435 l_0_8_51)))
 (let ((?x17432 (* 2.0 l_0_8_35)))
 (let ((?x17507 (* ?x17432 l_0_8_50)))
 (let ((?x9350 (* 2.0 l_0_8_24)))
 (let ((?x17505 (* ?x9350 l_0_8_9)))
 (let ((?x17250 (* 2.0 l_0_8_23)))
 (let ((?x17496 (* ?x17250 l_0_8_8)))
 (let ((?x9485 (* 2.0 l_0_8_22)))
 (let ((?x17495 (* ?x9485 l_0_8_7)))
 (let ((?x10164 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_25) ?x17495) ?x17496) ?x17505) ?x17507)))
 (= (- (- (- ?x10164 ?x17509) ?x17511) ?x17513) 0.0)))))))))))))))))
(assert
 (let ((?x17559 (* l_0_8_43 l_0_8_43)))
 (let ((?x17557 (* l_0_8_42 l_0_8_42)))
 (let ((?x17555 (* l_0_8_41 l_0_8_41)))
 (let ((?x17553 (* l_0_8_40 l_0_8_40)))
 (let ((?x17551 (* l_0_8_39 l_0_8_39)))
 (let ((?x17549 (* l_0_8_15 l_0_8_15)))
 (let ((?x17547 (* l_0_8_14 l_0_8_14)))
 (let ((?x17538 (* l_0_8_13 l_0_8_13)))
 (let ((?x10169 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x17538) ?x17547)))
 (= (- (- (- (- (- (+ ?x10169 ?x17549) ?x17551) ?x17553) ?x17555) ?x17557) ?x17559) 0.0)))))))))))
(assert
 (let ((?x17604 (* 2.0 l_0_8_43)))
 (let ((?x17605 (* ?x17604 l_0_8_48)))
 (let ((?x17601 (* 2.0 l_0_8_42)))
 (let ((?x17602 (* ?x17601 l_0_8_47)))
 (let ((?x17598 (* 2.0 l_0_8_41)))
 (let ((?x17599 (* ?x17598 l_0_8_46)))
 (let ((?x17595 (* 2.0 l_0_8_40)))
 (let ((?x17596 (* ?x17595 l_0_8_45)))
 (let ((?x17592 (* 2.0 l_0_8_39)))
 (let ((?x17593 (* ?x17592 l_0_8_44)))
 (let ((?x17589 (* 2.0 l_0_8_15)))
 (let ((?x17590 (* ?x17589 l_0_8_20)))
 (let ((?x17586 (* 2.0 l_0_8_14)))
 (let ((?x17587 (* ?x17586 l_0_8_19)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17584 (* ?x17331 l_0_8_18)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17582 (* ?x17196 l_0_8_17)))
 (let ((?x10294 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_16) ?x17582) ?x17584) ?x17587) ?x17590)))
 (= (- (- (- (- (- ?x10294 ?x17593) ?x17596) ?x17599) ?x17602) ?x17605) 0.0)))))))))))))))))))))
(assert
 (let ((?x17604 (* 2.0 l_0_8_43)))
 (let ((?x17638 (* ?x17604 l_0_8_54)))
 (let ((?x17601 (* 2.0 l_0_8_42)))
 (let ((?x17636 (* ?x17601 l_0_8_53)))
 (let ((?x17598 (* 2.0 l_0_8_41)))
 (let ((?x17634 (* ?x17598 l_0_8_52)))
 (let ((?x17595 (* 2.0 l_0_8_40)))
 (let ((?x17632 (* ?x17595 l_0_8_51)))
 (let ((?x17592 (* 2.0 l_0_8_39)))
 (let ((?x17630 (* ?x17592 l_0_8_50)))
 (let ((?x17589 (* 2.0 l_0_8_15)))
 (let ((?x17628 (* ?x17589 l_0_8_26)))
 (let ((?x17586 (* 2.0 l_0_8_14)))
 (let ((?x17626 (* ?x17586 l_0_8_25)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17624 (* ?x17331 l_0_8_24)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17622 (* ?x17196 l_0_8_23)))
 (let ((?x10076 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_22) ?x17622) ?x17624) ?x17626) ?x17628)))
 (= (- (- (- (- (- ?x10076 ?x17630) ?x17632) ?x17634) ?x17636) ?x17638) 0.0)))))))))))))))))))))
(assert
 (let ((?x17671 (* l_0_8_49 l_0_8_49)))
 (let ((?x17669 (* l_0_8_48 l_0_8_48)))
 (let ((?x17667 (* l_0_8_47 l_0_8_47)))
 (let ((?x17665 (* l_0_8_46 l_0_8_46)))
 (let ((?x17663 (* l_0_8_45 l_0_8_45)))
 (let ((?x17661 (* l_0_8_44 l_0_8_44)))
 (let ((?x17659 (* l_0_8_21 l_0_8_21)))
 (let ((?x17657 (* l_0_8_20 l_0_8_20)))
 (let ((?x17655 (* l_0_8_19 l_0_8_19)))
 (let ((?x9558 (* l_0_8_18 l_0_8_18)))
 (let ((?x10433 (+ (+ (+ (* l_0_8_16 l_0_8_16) (* l_0_8_17 l_0_8_17)) ?x9558) ?x17655)))
 (let ((?x10313 (- (- (- (- (- (+ (+ ?x10433 ?x17657) ?x17659) ?x17661) ?x17663) ?x17665) ?x17667) ?x17669)))
 (= (- ?x10313 ?x17671) 0.0))))))))))))))
(assert
 (let ((?x17724 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x17721 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x17718 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x17715 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x17712 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x17709 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x17706 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x17703 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x17700 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x17244 (* 2.0 l_0_8_18)))
 (let ((?x17697 (* ?x17244 l_0_8_24)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17695 (* ?x17217 l_0_8_23)))
 (let ((?x10472 (+ (+ (+ (+ (* (* 2.0 l_0_8_16) l_0_8_22) ?x17695) ?x17697) ?x17700) ?x17703)))
 (let ((?x10450 (- (- (- (- (- (- (+ ?x10472 ?x17706) ?x17709) ?x17712) ?x17715) ?x17718) ?x17721) ?x17724)))
 (= ?x10450 0.0)))))))))))))))))
(assert
 (let ((?x17785 (* l_0_8_56 l_0_8_56)))
 (let ((?x17783 (* l_0_8_55 l_0_8_55)))
 (let ((?x17781 (* l_0_8_54 l_0_8_54)))
 (let ((?x17779 (* l_0_8_53 l_0_8_53)))
 (let ((?x17777 (* l_0_8_52 l_0_8_52)))
 (let ((?x17775 (* l_0_8_51 l_0_8_51)))
 (let ((?x17773 (* l_0_8_50 l_0_8_50)))
 (let ((?x17771 (* l_0_8_28 l_0_8_28)))
 (let ((?x17769 (* l_0_8_27 l_0_8_27)))
 (let ((?x17767 (* l_0_8_26 l_0_8_26)))
 (let ((?x17756 (* l_0_8_25 l_0_8_25)))
 (let ((?x17753 (* l_0_8_24 l_0_8_24)))
 (let ((?x10670 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x17753) ?x17756)))
 (let ((?x10614 (- (- (- (- (+ (+ (+ ?x10670 ?x17767) ?x17769) ?x17771) ?x17773) ?x17775) ?x17777) ?x17779)))
 (= (- (- (- ?x10614 ?x17781) ?x17783) ?x17785) 0.0))))))))))))))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x9187 (* ?x9193 l_0_8_30)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_2) ?x9187) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17082 (* ?x9193 l_0_8_32)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_4) ?x17082) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17090 (* ?x9193 l_0_8_35)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_7) ?x17090) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17100 (* ?x9193 l_0_8_39)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_11) ?x17100) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17110 (* ?x9193 l_0_8_44)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_16) ?x17110) 0.0))))
(assert
 (let ((?x9193 (* 2.0 l_0_8_29)))
 (let ((?x17120 (* ?x9193 l_0_8_50)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_22) ?x17120) 0.0))))
(assert
 (let ((?x17139 (* l_0_8_31 l_0_8_31)))
 (let ((?x17137 (* l_0_8_30 l_0_8_30)))
 (= (- (- (+ (* l_0_8_2 l_0_8_2) (* l_0_8_3 l_0_8_3)) ?x17137) ?x17139) 0.0))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17161 (* ?x17160 l_0_8_33)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17158 (* ?x17157 l_0_8_32)))
 (let ((?x17154 (* 2.0 l_0_8_3)))
 (let ((?x17155 (* ?x17154 l_0_8_5)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_4) ?x17155) ?x17158) ?x17161) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17180 (* ?x17160 l_0_8_36)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17178 (* ?x17157 l_0_8_35)))
 (let ((?x17154 (* 2.0 l_0_8_3)))
 (let ((?x17176 (* ?x17154 l_0_8_8)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_7) ?x17176) ?x17178) ?x17180) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17201 (* ?x17160 l_0_8_40)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17199 (* ?x17157 l_0_8_39)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17197 (* ?x17196 l_0_8_3)))
 (= (- (- (+ (* (* 2.0 l_0_8_11) l_0_8_2) ?x17197) ?x17199) ?x17201) 0.0))))))))
(assert
 (let ((?x17160 (* 2.0 l_0_8_31)))
 (let ((?x17222 (* ?x17160 l_0_8_45)))
 (let ((?x17157 (* 2.0 l_0_8_30)))
 (let ((?x17220 (* ?x17157 l_0_8_44)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17218 (* ?x17217 l_0_8_3)))
 (= (- (- (+ (* (* 2.0 l_0_8_16) l_0_8_2) ?x17218) ?x17220) ?x17222) 0.0))))))))
(assert
 (let ((?x9294 (* l_0_8_6 l_0_8_6)))
 (let ((?x9295 (* l_0_8_5 l_0_8_5)))
 (let ((?x9280 (* l_0_8_4 l_0_8_4)))
 (let ((?x9268 (* l_0_8_34 l_0_8_34)))
 (let ((?x17817 (+ (- (- (* (- l_0_8_32) l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x9268) ?x9280)))
 (= (+ (+ ?x17817 ?x9295) ?x9294) 0.0)))))))
(assert
 (let ((?x17304 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x17301 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x17298 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x17295 (* ?x17263 l_0_8_37)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x9331 (* ?x17260 l_0_8_36)))
 (let ((?x17827 (+ (+ (- (- (* (* (- 2.0) l_0_8_32) l_0_8_35) ?x9331) ?x17295) ?x17298) ?x17301)))
 (= (+ ?x17827 ?x17304) 0.0))))))))))
(assert
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x17338 (* ?x17263 l_0_8_41)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x17336 (* ?x17260 l_0_8_40)))
 (let ((?x17257 (* 2.0 l_0_8_32)))
 (let ((?x17334 (* ?x17257 l_0_8_39)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17332 (* ?x17331 l_0_8_6)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17329 (* ?x17196 l_0_8_5)))
 (let ((?x9961 (- (- (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x17329) ?x17332) ?x17334) ?x17336)))
 (= (- ?x9961 ?x17338) 0.0)))))))))))))
(assert
 (let ((?x17263 (* 2.0 l_0_8_34)))
 (let ((?x9367 (* ?x17263 l_0_8_52)))
 (let ((?x17260 (* 2.0 l_0_8_33)))
 (let ((?x9363 (* ?x17260 l_0_8_51)))
 (let ((?x17257 (* 2.0 l_0_8_32)))
 (let ((?x9368 (* ?x17257 l_0_8_50)))
 (let ((?x9350 (* 2.0 l_0_8_24)))
 (let ((?x9356 (* ?x9350 l_0_8_6)))
 (let ((?x17250 (* 2.0 l_0_8_23)))
 (let ((?x9338 (* ?x17250 l_0_8_5)))
 (let ((?x9944 (- (- (+ (+ (* (* 2.0 l_0_8_22) l_0_8_4) ?x9338) ?x9356) ?x9368) ?x9363)))
 (= (- ?x9944 ?x9367) 0.0)))))))))))))
(assert
 (let ((?x17403 (* l_0_8_9 l_0_8_9)))
 (let ((?x17401 (* l_0_8_8 l_0_8_8)))
 (let ((?x17399 (* l_0_8_7 l_0_8_7)))
 (let ((?x17397 (* l_0_8_38 l_0_8_38)))
 (let ((?x17395 (* l_0_8_37 l_0_8_37)))
 (let ((?x17393 (* l_0_8_36 l_0_8_36)))
 (let ((?x10057 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x17393) ?x17395)))
 (= (+ (+ (+ (- ?x10057 ?x17397) ?x17399) ?x17401) ?x17403) 0.0)))))))))
(assert
 (let ((?x17441 (* 2.0 l_0_8_38)))
 (let ((?x17442 (* ?x17441 l_0_8_42)))
 (let ((?x17438 (* 2.0 l_0_8_37)))
 (let ((?x17439 (* ?x17438 l_0_8_41)))
 (let ((?x17435 (* 2.0 l_0_8_36)))
 (let ((?x17436 (* ?x17435 l_0_8_40)))
 (let ((?x17432 (* 2.0 l_0_8_35)))
 (let ((?x17433 (* ?x17432 l_0_8_39)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17424 (* ?x17331 l_0_8_9)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17422 (* ?x17196 l_0_8_8)))
 (let ((?x17419 (* 2.0 l_0_8_11)))
 (let ((?x17420 (* ?x17419 l_0_8_7)))
 (let ((?x17841 (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x17420) ?x17422) ?x17424)))
 (= (- (- (- (- ?x17841 ?x17433) ?x17436) ?x17439) ?x17442) 0.0)))))))))))))))))
(assert
 (let ((?x17441 (* 2.0 l_0_8_38)))
 (let ((?x17489 (* ?x17441 l_0_8_47)))
 (let ((?x17438 (* 2.0 l_0_8_37)))
 (let ((?x17487 (* ?x17438 l_0_8_46)))
 (let ((?x17435 (* 2.0 l_0_8_36)))
 (let ((?x17485 (* ?x17435 l_0_8_45)))
 (let ((?x17432 (* 2.0 l_0_8_35)))
 (let ((?x17483 (* ?x17432 l_0_8_44)))
 (let ((?x17244 (* 2.0 l_0_8_18)))
 (let ((?x17481 (* ?x17244 l_0_8_9)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17479 (* ?x17217 l_0_8_8)))
 (let ((?x17234 (* 2.0 l_0_8_16)))
 (let ((?x17477 (* ?x17234 l_0_8_7)))
 (let ((?x17866 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_19) ?x17477) ?x17479) ?x17481) ?x17483)))
 (= (- (- (- ?x17866 ?x17485) ?x17487) ?x17489) 0.0)))))))))))))))))
(assert
 (let ((?x17441 (* 2.0 l_0_8_38)))
 (let ((?x17513 (* ?x17441 l_0_8_53)))
 (let ((?x17438 (* 2.0 l_0_8_37)))
 (let ((?x17511 (* ?x17438 l_0_8_52)))
 (let ((?x17435 (* 2.0 l_0_8_36)))
 (let ((?x17509 (* ?x17435 l_0_8_51)))
 (let ((?x17432 (* 2.0 l_0_8_35)))
 (let ((?x17507 (* ?x17432 l_0_8_50)))
 (let ((?x9350 (* 2.0 l_0_8_24)))
 (let ((?x17505 (* ?x9350 l_0_8_9)))
 (let ((?x17250 (* 2.0 l_0_8_23)))
 (let ((?x17496 (* ?x17250 l_0_8_8)))
 (let ((?x9485 (* 2.0 l_0_8_22)))
 (let ((?x17495 (* ?x9485 l_0_8_7)))
 (let ((?x10164 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_25) ?x17495) ?x17496) ?x17505) ?x17507)))
 (= (- (- (- ?x10164 ?x17509) ?x17511) ?x17513) 0.0)))))))))))))))))
(assert
 (let ((?x17559 (* l_0_8_43 l_0_8_43)))
 (let ((?x17557 (* l_0_8_42 l_0_8_42)))
 (let ((?x17555 (* l_0_8_41 l_0_8_41)))
 (let ((?x17553 (* l_0_8_40 l_0_8_40)))
 (let ((?x17551 (* l_0_8_39 l_0_8_39)))
 (let ((?x17549 (* l_0_8_15 l_0_8_15)))
 (let ((?x17547 (* l_0_8_14 l_0_8_14)))
 (let ((?x17538 (* l_0_8_13 l_0_8_13)))
 (let ((?x10169 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x17538) ?x17547)))
 (= (- (- (- (- (- (+ ?x10169 ?x17549) ?x17551) ?x17553) ?x17555) ?x17557) ?x17559) 0.0)))))))))))
(assert
 (let ((?x17604 (* 2.0 l_0_8_43)))
 (let ((?x17605 (* ?x17604 l_0_8_48)))
 (let ((?x17601 (* 2.0 l_0_8_42)))
 (let ((?x17602 (* ?x17601 l_0_8_47)))
 (let ((?x17598 (* 2.0 l_0_8_41)))
 (let ((?x17599 (* ?x17598 l_0_8_46)))
 (let ((?x17595 (* 2.0 l_0_8_40)))
 (let ((?x17596 (* ?x17595 l_0_8_45)))
 (let ((?x17592 (* 2.0 l_0_8_39)))
 (let ((?x17593 (* ?x17592 l_0_8_44)))
 (let ((?x17589 (* 2.0 l_0_8_15)))
 (let ((?x17590 (* ?x17589 l_0_8_20)))
 (let ((?x17586 (* 2.0 l_0_8_14)))
 (let ((?x17587 (* ?x17586 l_0_8_19)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17584 (* ?x17331 l_0_8_18)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17582 (* ?x17196 l_0_8_17)))
 (let ((?x10294 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_16) ?x17582) ?x17584) ?x17587) ?x17590)))
 (= (- (- (- (- (- ?x10294 ?x17593) ?x17596) ?x17599) ?x17602) ?x17605) 0.0)))))))))))))))))))))
(assert
 (let ((?x17604 (* 2.0 l_0_8_43)))
 (let ((?x17638 (* ?x17604 l_0_8_54)))
 (let ((?x17601 (* 2.0 l_0_8_42)))
 (let ((?x17636 (* ?x17601 l_0_8_53)))
 (let ((?x17598 (* 2.0 l_0_8_41)))
 (let ((?x17634 (* ?x17598 l_0_8_52)))
 (let ((?x17595 (* 2.0 l_0_8_40)))
 (let ((?x17632 (* ?x17595 l_0_8_51)))
 (let ((?x17592 (* 2.0 l_0_8_39)))
 (let ((?x17630 (* ?x17592 l_0_8_50)))
 (let ((?x17589 (* 2.0 l_0_8_15)))
 (let ((?x17628 (* ?x17589 l_0_8_26)))
 (let ((?x17586 (* 2.0 l_0_8_14)))
 (let ((?x17626 (* ?x17586 l_0_8_25)))
 (let ((?x17331 (* 2.0 l_0_8_13)))
 (let ((?x17624 (* ?x17331 l_0_8_24)))
 (let ((?x17196 (* 2.0 l_0_8_12)))
 (let ((?x17622 (* ?x17196 l_0_8_23)))
 (let ((?x10076 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_22) ?x17622) ?x17624) ?x17626) ?x17628)))
 (= (- (- (- (- (- ?x10076 ?x17630) ?x17632) ?x17634) ?x17636) ?x17638) 0.0)))))))))))))))))))))
(assert
 (let ((?x17671 (* l_0_8_49 l_0_8_49)))
 (let ((?x17669 (* l_0_8_48 l_0_8_48)))
 (let ((?x17667 (* l_0_8_47 l_0_8_47)))
 (let ((?x17665 (* l_0_8_46 l_0_8_46)))
 (let ((?x17663 (* l_0_8_45 l_0_8_45)))
 (let ((?x17661 (* l_0_8_44 l_0_8_44)))
 (let ((?x17659 (* l_0_8_21 l_0_8_21)))
 (let ((?x17657 (* l_0_8_20 l_0_8_20)))
 (let ((?x17655 (* l_0_8_19 l_0_8_19)))
 (let ((?x9558 (* l_0_8_18 l_0_8_18)))
 (let ((?x10433 (+ (+ (+ (* l_0_8_16 l_0_8_16) (* l_0_8_17 l_0_8_17)) ?x9558) ?x17655)))
 (let ((?x10313 (- (- (- (- (- (+ (+ ?x10433 ?x17657) ?x17659) ?x17661) ?x17663) ?x17665) ?x17667) ?x17669)))
 (= (- ?x10313 ?x17671) 0.0))))))))))))))
(assert
 (let ((?x17724 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x17721 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x17718 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x17715 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x17712 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x17709 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x17706 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x17703 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x17700 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x17244 (* 2.0 l_0_8_18)))
 (let ((?x17697 (* ?x17244 l_0_8_24)))
 (let ((?x17217 (* 2.0 l_0_8_17)))
 (let ((?x17695 (* ?x17217 l_0_8_23)))
 (let ((?x10472 (+ (+ (+ (+ (* (* 2.0 l_0_8_16) l_0_8_22) ?x17695) ?x17697) ?x17700) ?x17703)))
 (let ((?x10450 (- (- (- (- (- (- (+ ?x10472 ?x17706) ?x17709) ?x17712) ?x17715) ?x17718) ?x17721) ?x17724)))
 (= ?x10450 0.0)))))))))))))))))
(assert
 (let ((?x17785 (* l_0_8_56 l_0_8_56)))
 (let ((?x17783 (* l_0_8_55 l_0_8_55)))
 (let ((?x17781 (* l_0_8_54 l_0_8_54)))
 (let ((?x17779 (* l_0_8_53 l_0_8_53)))
 (let ((?x17777 (* l_0_8_52 l_0_8_52)))
 (let ((?x17775 (* l_0_8_51 l_0_8_51)))
 (let ((?x17773 (* l_0_8_50 l_0_8_50)))
 (let ((?x17771 (* l_0_8_28 l_0_8_28)))
 (let ((?x17769 (* l_0_8_27 l_0_8_27)))
 (let ((?x17767 (* l_0_8_26 l_0_8_26)))
 (let ((?x17756 (* l_0_8_25 l_0_8_25)))
 (let ((?x17753 (* l_0_8_24 l_0_8_24)))
 (let ((?x10670 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x17753) ?x17756)))
 (let ((?x10614 (- (- (- (- (+ (+ (+ ?x10670 ?x17767) ?x17769) ?x17771) ?x17773) ?x17775) ?x17777) ?x17779)))
 (= (- (- (- ?x10614 ?x17781) ?x17783) ?x17785) 0.0))))))))))))))))
(assert
 (let ((?x10775 (* l_0_8_85 l_0_8_85)))
 (let ((?x10772 (- (* (- l_0_8_113) l_0_8_113) (* (* 1.0 l_0_8_57) l_0_8_57))))
 (= (- ?x10772 ?x10775) 0.0))))
(assert
 (let ((?x10676 (- (* (* (- 2.0) l_0_8_113) l_0_8_114) (* (* 2.0 l_0_8_57) l_0_8_58))))
 (= (- ?x10676 (* (* 2.0 l_0_8_85) l_0_8_86)) 0.0)))
(assert
 (let ((?x10444 (- (* (* (- 2.0) l_0_8_113) l_0_8_116) (* (* 2.0 l_0_8_57) l_0_8_60))))
 (= (- ?x10444 (* (* 2.0 l_0_8_85) l_0_8_88)) 0.0)))
(assert
 (let ((?x17878 (- (* (* (- 2.0) l_0_8_113) l_0_8_119) (* (* 2.0 l_0_8_57) l_0_8_63))))
 (= (- ?x17878 (* (* 2.0 l_0_8_85) l_0_8_91)) 0.0)))
(assert
 (let ((?x17901 (- (* (* (- 2.0) l_0_8_113) l_0_8_123) (* (* 2.0 l_0_8_57) l_0_8_67))))
 (= (- ?x17901 (* (* 2.0 l_0_8_85) l_0_8_95)) 0.0)))
(assert
 (let ((?x17926 (- (* (* (- 2.0) l_0_8_100) l_0_8_85) (* (* 2.0 l_0_8_113) l_0_8_128))))
 (= (- ?x17926 (* (* 2.0 l_0_8_57) l_0_8_72)) 0.0)))
(assert
 (let ((?x17950 (- (* (* (- 2.0) l_0_8_106) l_0_8_85) (* (* 2.0 l_0_8_113) l_0_8_134))))
 (= (- ?x17950 (* (* 2.0 l_0_8_57) l_0_8_78)) 0.0)))
(assert
 (let ((?x17983 (* l_0_8_87 l_0_8_87)))
 (let ((?x17981 (* l_0_8_86 l_0_8_86)))
 (let ((?x17977 (- (- (* (- l_0_8_114) l_0_8_114) (* l_0_8_115 l_0_8_115)) (* (* 1.0 l_0_8_58) l_0_8_58))))
 (= (- (- (- ?x17977 (* (* 1.0 l_0_8_59) l_0_8_59)) ?x17981) ?x17983) 0.0)))))
(assert
 (let ((?x18011 (- (* (* (- 2.0) l_0_8_114) l_0_8_116) (* (* 2.0 l_0_8_115) l_0_8_117))))
 (let ((?x18015 (- (- ?x18011 (* (* 2.0 l_0_8_58) l_0_8_60)) (* (* 2.0 l_0_8_59) l_0_8_61))))
 (let ((?x18021 (- (- ?x18015 (* (* 2.0 l_0_8_86) l_0_8_88)) (* (* 2.0 l_0_8_87) l_0_8_89))))
 (= ?x18021 0.0)))))
(assert
 (let ((?x18060 (- (* (* (- 2.0) l_0_8_114) l_0_8_119) (* (* 2.0 l_0_8_115) l_0_8_120))))
 (let ((?x18064 (- (- ?x18060 (* (* 2.0 l_0_8_58) l_0_8_63)) (* (* 2.0 l_0_8_59) l_0_8_64))))
 (let ((?x18068 (- (- ?x18064 (* (* 2.0 l_0_8_86) l_0_8_91)) (* (* 2.0 l_0_8_87) l_0_8_92))))
 (= ?x18068 0.0)))))
(assert
 (let ((?x18107 (- (* (* (- 2.0) l_0_8_114) l_0_8_123) (* (* 2.0 l_0_8_115) l_0_8_124))))
 (let ((?x18111 (- (- ?x18107 (* (* 2.0 l_0_8_58) l_0_8_67)) (* (* 2.0 l_0_8_59) l_0_8_68))))
 (let ((?x18115 (- (- ?x18111 (* (* 2.0 l_0_8_86) l_0_8_95)) (* (* 2.0 l_0_8_87) l_0_8_96))))
 (= ?x18115 0.0)))))
(assert
 (let ((?x18154 (- (* (* (- 2.0) l_0_8_100) l_0_8_86) (* (* 2.0 l_0_8_101) l_0_8_87))))
 (let ((?x18158 (- (- ?x18154 (* (* 2.0 l_0_8_114) l_0_8_128)) (* (* 2.0 l_0_8_115) l_0_8_129))))
 (let ((?x18162 (- (- ?x18158 (* (* 2.0 l_0_8_58) l_0_8_72)) (* (* 2.0 l_0_8_59) l_0_8_73))))
 (= ?x18162 0.0)))))
(assert
 (let ((?x18218 (* l_0_8_90 l_0_8_90)))
 (let ((?x18216 (* l_0_8_89 l_0_8_89)))
 (let ((?x18214 (* l_0_8_88 l_0_8_88)))
 (let ((?x18203 (* l_0_8_118 l_0_8_118)))
 (let ((?x18204 (- (- (* (- l_0_8_116) l_0_8_116) (* l_0_8_117 l_0_8_117)) ?x18203)))
 (let ((?x18210 (- (- ?x18204 (* (* 1.0 l_0_8_60) l_0_8_60)) (* (* 1.0 l_0_8_61) l_0_8_61))))
 (let ((?x18219 (- (- (- (- ?x18210 (* (* 1.0 l_0_8_62) l_0_8_62)) ?x18214) ?x18216) ?x18218)))
 (= ?x18219 0.0)))))))))
(assert
 (let ((?x18256 (- (* (* (- 2.0) l_0_8_116) l_0_8_119) (* (* 2.0 l_0_8_117) l_0_8_120))))
 (let ((?x18260 (- (- ?x18256 (* (* 2.0 l_0_8_118) l_0_8_121)) (* (* 2.0 l_0_8_60) l_0_8_63))))
 (let ((?x18264 (- (- ?x18260 (* (* 2.0 l_0_8_61) l_0_8_64)) (* (* 2.0 l_0_8_62) l_0_8_65))))
 (let ((?x18270 (- (- ?x18264 (* (* 2.0 l_0_8_88) l_0_8_91)) (* (* 2.0 l_0_8_89) l_0_8_92))))
 (= (- ?x18270 (* (* 2.0 l_0_8_90) l_0_8_93)) 0.0))))))
(assert
 (let ((?x18330 (- (* (* (- 2.0) l_0_8_116) l_0_8_123) (* (* 2.0 l_0_8_117) l_0_8_124))))
 (let ((?x18334 (- (- ?x18330 (* (* 2.0 l_0_8_118) l_0_8_125)) (* (* 2.0 l_0_8_60) l_0_8_67))))
 (let ((?x18338 (- (- ?x18334 (* (* 2.0 l_0_8_61) l_0_8_68)) (* (* 2.0 l_0_8_62) l_0_8_69))))
 (let ((?x18342 (- (- ?x18338 (* (* 2.0 l_0_8_88) l_0_8_95)) (* (* 2.0 l_0_8_89) l_0_8_96))))
 (= (- ?x18342 (* (* 2.0 l_0_8_90) l_0_8_97)) 0.0))))))
(assert
 (let ((?x18386 (- (* (* (- 2.0) l_0_8_106) l_0_8_88) (* (* 2.0 l_0_8_107) l_0_8_89))))
 (let ((?x18391 (- (- ?x18386 (* (* 2.0 l_0_8_108) l_0_8_90)) (* (* 2.0 l_0_8_116) l_0_8_134))))
 (let ((?x18395 (- (- ?x18391 (* (* 2.0 l_0_8_117) l_0_8_135)) (* (* 2.0 l_0_8_118) l_0_8_136))))
 (let ((?x18399 (- (- ?x18395 (* (* 2.0 l_0_8_60) l_0_8_78)) (* (* 2.0 l_0_8_61) l_0_8_79))))
 (= (- ?x18399 (* (* 2.0 l_0_8_62) l_0_8_80)) 0.0))))))
(assert
 (let ((?x18442 (* l_0_8_94 l_0_8_94)))
 (let ((?x18440 (* l_0_8_93 l_0_8_93)))
 (let ((?x18438 (* l_0_8_92 l_0_8_92)))
 (let ((?x18436 (* l_0_8_91 l_0_8_91)))
 (let ((?x18422 (* l_0_8_122 l_0_8_122)))
 (let ((?x18420 (* l_0_8_121 l_0_8_121)))
 (let ((?x18421 (- (- (* (- l_0_8_119) l_0_8_119) (* l_0_8_120 l_0_8_120)) ?x18420)))
 (let ((?x18429 (- (- (- ?x18421 ?x18422) (* (* 1.0 l_0_8_63) l_0_8_63)) (* (* 1.0 l_0_8_64) l_0_8_64))))
 (let ((?x18435 (- (- ?x18429 (* (* 1.0 l_0_8_65) l_0_8_65)) (* (* 1.0 l_0_8_66) l_0_8_66))))
 (= (- (- (- (- ?x18435 ?x18436) ?x18438) ?x18440) ?x18442) 0.0)))))))))))
(assert
 (let ((?x18468 (- (* (* (- 2.0) l_0_8_100) l_0_8_91) (* (* 2.0 l_0_8_101) l_0_8_92))))
 (let ((?x18473 (- (- ?x18468 (* (* 2.0 l_0_8_102) l_0_8_93)) (* (* 2.0 l_0_8_103) l_0_8_94))))
 (let ((?x18477 (- (- ?x18473 (* (* 2.0 l_0_8_119) l_0_8_128)) (* (* 2.0 l_0_8_120) l_0_8_129))))
 (let ((?x18481 (- (- ?x18477 (* (* 2.0 l_0_8_121) l_0_8_130)) (* (* 2.0 l_0_8_122) l_0_8_131))))
 (let ((?x18485 (- (- ?x18481 (* (* 2.0 l_0_8_63) l_0_8_72)) (* (* 2.0 l_0_8_64) l_0_8_73))))
 (let ((?x18489 (- (- ?x18485 (* (* 2.0 l_0_8_65) l_0_8_74)) (* (* 2.0 l_0_8_66) l_0_8_75))))
 (= ?x18489 0.0))))))))
(assert
 (let ((?x11389 (- (* (* (- 2.0) l_0_8_106) l_0_8_91) (* (* 2.0 l_0_8_107) l_0_8_92))))
 (let ((?x18509 (- (- ?x11389 (* (* 2.0 l_0_8_108) l_0_8_93)) (* (* 2.0 l_0_8_109) l_0_8_94))))
 (let ((?x18513 (- (- ?x18509 (* (* 2.0 l_0_8_119) l_0_8_134)) (* (* 2.0 l_0_8_120) l_0_8_135))))
 (let ((?x18517 (- (- ?x18513 (* (* 2.0 l_0_8_121) l_0_8_136)) (* (* 2.0 l_0_8_122) l_0_8_137))))
 (let ((?x18521 (- (- ?x18517 (* (* 2.0 l_0_8_63) l_0_8_78)) (* (* 2.0 l_0_8_64) l_0_8_79))))
 (let ((?x18525 (- (- ?x18521 (* (* 2.0 l_0_8_65) l_0_8_80)) (* (* 2.0 l_0_8_66) l_0_8_81))))
 (= ?x18525 0.0))))))))
(assert
 (let ((?x18591 (* l_0_8_99 l_0_8_99)))
 (let ((?x18589 (* l_0_8_98 l_0_8_98)))
 (let ((?x18587 (* l_0_8_97 l_0_8_97)))
 (let ((?x18585 (* l_0_8_96 l_0_8_96)))
 (let ((?x18583 (* l_0_8_95 l_0_8_95)))
 (let ((?x18566 (* l_0_8_127 l_0_8_127)))
 (let ((?x18564 (* l_0_8_126 l_0_8_126)))
 (let ((?x18562 (* l_0_8_125 l_0_8_125)))
 (let ((?x18563 (- (- (* (- l_0_8_123) l_0_8_123) (* l_0_8_124 l_0_8_124)) ?x18562)))
 (let ((?x18573 (- (- (- (- ?x18563 ?x18564) ?x18566) (* (* 1.0 l_0_8_67) l_0_8_67)) (* (* 1.0 l_0_8_68) l_0_8_68))))
 (let ((?x18579 (- (- ?x18573 (* (* 1.0 l_0_8_69) l_0_8_69)) (* (* 1.0 l_0_8_70) l_0_8_70))))
 (let ((?x18588 (- (- (- (- ?x18579 (* (* 1.0 l_0_8_71) l_0_8_71)) ?x18583) ?x18585) ?x18587)))
 (= (- (- ?x18588 ?x18589) ?x18591) 0.0))))))))))))))
(assert
 (let ((?x18618 (- (* (* (- 2.0) l_0_8_100) l_0_8_95) (* (* 2.0 l_0_8_101) l_0_8_96))))
 (let ((?x18622 (- (- ?x18618 (* (* 2.0 l_0_8_102) l_0_8_97)) (* (* 2.0 l_0_8_103) l_0_8_98))))
 (let ((?x18628 (- (- ?x18622 (* (* 2.0 l_0_8_104) l_0_8_99)) (* (* 2.0 l_0_8_123) l_0_8_128))))
 (let ((?x18634 (- (- ?x18628 (* (* 2.0 l_0_8_124) l_0_8_129)) (* (* 2.0 l_0_8_125) l_0_8_130))))
 (let ((?x18640 (- (- ?x18634 (* (* 2.0 l_0_8_126) l_0_8_131)) (* (* 2.0 l_0_8_127) l_0_8_132))))
 (let ((?x18646 (- (- ?x18640 (* (* 2.0 l_0_8_67) l_0_8_72)) (* (* 2.0 l_0_8_68) l_0_8_73))))
 (let ((?x18652 (- (- ?x18646 (* (* 2.0 l_0_8_69) l_0_8_74)) (* (* 2.0 l_0_8_70) l_0_8_75))))
 (= (- ?x18652 (* (* 2.0 l_0_8_71) l_0_8_76)) 0.0)))))))))
(assert
 (let ((?x18744 (- (* (* (- 2.0) l_0_8_106) l_0_8_95) (* (* 2.0 l_0_8_107) l_0_8_96))))
 (let ((?x18748 (- (- ?x18744 (* (* 2.0 l_0_8_108) l_0_8_97)) (* (* 2.0 l_0_8_109) l_0_8_98))))
 (let ((?x18753 (- (- ?x18748 (* (* 2.0 l_0_8_110) l_0_8_99)) (* (* 2.0 l_0_8_123) l_0_8_134))))
 (let ((?x18757 (- (- ?x18753 (* (* 2.0 l_0_8_124) l_0_8_135)) (* (* 2.0 l_0_8_125) l_0_8_136))))
 (let ((?x18761 (- (- ?x18757 (* (* 2.0 l_0_8_126) l_0_8_137)) (* (* 2.0 l_0_8_127) l_0_8_138))))
 (let ((?x18765 (- (- ?x18761 (* (* 2.0 l_0_8_67) l_0_8_78)) (* (* 2.0 l_0_8_68) l_0_8_79))))
 (let ((?x18769 (- (- ?x18765 (* (* 2.0 l_0_8_69) l_0_8_80)) (* (* 2.0 l_0_8_70) l_0_8_81))))
 (= (- ?x18769 (* (* 2.0 l_0_8_71) l_0_8_82)) 0.0)))))))))
(assert
 (let ((?x18870 (* l_0_8_133 l_0_8_133)))
 (let ((?x18868 (* l_0_8_132 l_0_8_132)))
 (let ((?x18866 (* l_0_8_131 l_0_8_131)))
 (let ((?x18864 (* l_0_8_130 l_0_8_130)))
 (let ((?x18862 (* l_0_8_129 l_0_8_129)))
 (let ((?x18860 (* l_0_8_128 l_0_8_128)))
 (let ((?x18858 (* l_0_8_105 l_0_8_105)))
 (let ((?x18856 (* l_0_8_104 l_0_8_104)))
 (let ((?x18854 (* l_0_8_103 l_0_8_103)))
 (let ((?x18852 (* l_0_8_102 l_0_8_102)))
 (let ((?x18853 (- (- (* (- l_0_8_100) l_0_8_100) (* l_0_8_101 l_0_8_101)) ?x18852)))
 (let ((?x18867 (- (- (- (- (- (- (- ?x18853 ?x18854) ?x18856) ?x18858) ?x18860) ?x18862) ?x18864) ?x18866)))
 (let ((?x18877 (- (- (- (- ?x18867 ?x18868) ?x18870) (* (* 1.0 l_0_8_72) l_0_8_72)) (* (* 1.0 l_0_8_73) l_0_8_73))))
 (let ((?x18883 (- (- ?x18877 (* (* 1.0 l_0_8_74) l_0_8_74)) (* (* 1.0 l_0_8_75) l_0_8_75))))
 (let ((?x18889 (- (- ?x18883 (* (* 1.0 l_0_8_76) l_0_8_76)) (* (* 1.0 l_0_8_77) l_0_8_77))))
 (= ?x18889 0.0)))))))))))))))))
(assert
 (let ((?x18955 (- (* (* (- 2.0) l_0_8_100) l_0_8_106) (* (* 2.0 l_0_8_101) l_0_8_107))))
 (let ((?x18959 (- (- ?x18955 (* (* 2.0 l_0_8_102) l_0_8_108)) (* (* 2.0 l_0_8_103) l_0_8_109))))
 (let ((?x18964 (- (- ?x18959 (* (* 2.0 l_0_8_104) l_0_8_110)) (* (* 2.0 l_0_8_105) l_0_8_111))))
 (let ((?x18970 (- (- ?x18964 (* (* 2.0 l_0_8_128) l_0_8_134)) (* (* 2.0 l_0_8_129) l_0_8_135))))
 (let ((?x18976 (- (- ?x18970 (* (* 2.0 l_0_8_130) l_0_8_136)) (* (* 2.0 l_0_8_131) l_0_8_137))))
 (let ((?x18982 (- (- ?x18976 (* (* 2.0 l_0_8_132) l_0_8_138)) (* (* 2.0 l_0_8_133) l_0_8_139))))
 (let ((?x18988 (- (- ?x18982 (* (* 2.0 l_0_8_72) l_0_8_78)) (* (* 2.0 l_0_8_73) l_0_8_79))))
 (let ((?x18994 (- (- ?x18988 (* (* 2.0 l_0_8_74) l_0_8_80)) (* (* 2.0 l_0_8_75) l_0_8_81))))
 (let ((?x19000 (- (- ?x18994 (* (* 2.0 l_0_8_76) l_0_8_82)) (* (* 2.0 l_0_8_77) l_0_8_83))))
 (= ?x19000 0.0)))))))))))
(assert
 (let ((?x19087 (* l_0_8_140 l_0_8_140)))
 (let ((?x19085 (* l_0_8_139 l_0_8_139)))
 (let ((?x19083 (* l_0_8_138 l_0_8_138)))
 (let ((?x19081 (* l_0_8_137 l_0_8_137)))
 (let ((?x19079 (* l_0_8_136 l_0_8_136)))
 (let ((?x19077 (* l_0_8_135 l_0_8_135)))
 (let ((?x19075 (* l_0_8_134 l_0_8_134)))
 (let ((?x19073 (* l_0_8_112 l_0_8_112)))
 (let ((?x19071 (* l_0_8_111 l_0_8_111)))
 (let ((?x19069 (* l_0_8_110 l_0_8_110)))
 (let ((?x19067 (* l_0_8_109 l_0_8_109)))
 (let ((?x19065 (* l_0_8_108 l_0_8_108)))
 (let ((?x19066 (- (- (* (- l_0_8_106) l_0_8_106) (* l_0_8_107 l_0_8_107)) ?x19065)))
 (let ((?x19080 (- (- (- (- (- (- (- ?x19066 ?x19067) ?x19069) ?x19071) ?x19073) ?x19075) ?x19077) ?x19079)))
 (let ((?x19091 (- (- (- (- (- ?x19080 ?x19081) ?x19083) ?x19085) ?x19087) (* (* 1.0 l_0_8_78) l_0_8_78))))
 (let ((?x19097 (- (- ?x19091 (* (* 1.0 l_0_8_79) l_0_8_79)) (* (* 1.0 l_0_8_80) l_0_8_80))))
 (let ((?x19103 (- (- ?x19097 (* (* 1.0 l_0_8_81) l_0_8_81)) (* (* 1.0 l_0_8_82) l_0_8_82))))
 (let ((?x19109 (- (- ?x19103 (* (* 1.0 l_0_8_83) l_0_8_83)) (* (* 1.0 l_0_8_84) l_0_8_84))))
 (= ?x19109 0.0))))))))))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_28 0.0))
(assert
 (>= l_0_8_29 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_34 0.0))
(assert
 (>= l_0_8_38 0.0))
(assert
 (>= l_0_8_43 0.0))
(assert
 (>= l_0_8_49 0.0))
(assert
 (>= l_0_8_56 0.0))
(assert
 (>= l_0_8_57 0.0))
(assert
 (>= l_0_8_59 0.0))
(assert
 (>= l_0_8_62 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_71 0.0))
(assert
 (>= l_0_8_77 0.0))
(assert
 (>= l_0_8_84 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_87 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_94 0.0))
(assert
 (>= l_0_8_99 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_112 0.0))
(assert
 (>= l_0_8_113 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_118 0.0))
(assert
 (>= l_0_8_122 0.0))
(assert
 (>= l_0_8_127 0.0))
(assert
 (>= l_0_8_133 0.0))
(assert
 (>= l_0_8_140 0.0))
(assert
 (let ((?x19188 (* l_0_9_29 l_0_9_29)))
 (let ((?x19184 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_100) l_0_9_88)) (* (* 2.0 l_0_9_101) l_0_9_89))))
 (let ((?x19192 (+ (+ (- ?x19184 (* (* 2.0 l_0_9_102) l_0_9_90)) ?x19188) (* (* 2.0 l_0_9_60) l_0_9_72))))
 (let ((?x19198 (+ (+ ?x19192 (* (* 2.0 l_0_9_61) l_0_9_73)) (* (* 2.0 l_0_9_62) l_0_9_74))))
 (= (+ ?x19198 1.0) 0.0))))))
(assert
 (let ((?x19188 (* l_0_9_29 l_0_9_29)))
 (let ((?x19221 (- (- (* l_0_9_1 l_0_9_1) (* (* 2.0 l_0_9_106) l_0_9_86)) (* (* 2.0 l_0_9_107) l_0_9_87))))
 (let ((?x19228 (+ (+ (- ?x19221 ?x19188) (* (* 2.0 l_0_9_58) l_0_9_78)) (* (* 2.0 l_0_9_59) l_0_9_79))))
 (= (- ?x19228 1.0) 0.0)))))
(assert
 (let ((?x19244 (+ (- (* l_0_9_1 l_0_9_1) (* l_0_9_29 l_0_9_29)) (* (* 2.0 l_0_9_63) l_0_9_67))))
 (let ((?x19250 (+ (+ ?x19244 (* (* 2.0 l_0_9_64) l_0_9_68)) (* (* 2.0 l_0_9_65) l_0_9_69))))
 (let ((?x19256 (- (+ ?x19250 (* (* 2.0 l_0_9_66) l_0_9_70)) (* (* 2.0 l_0_9_91) l_0_9_95))))
 (let ((?x19262 (- (- ?x19256 (* (* 2.0 l_0_9_92) l_0_9_96)) (* (* 2.0 l_0_9_93) l_0_9_97))))
 (= (- (- ?x19262 (* (* 2.0 l_0_9_94) l_0_9_98)) 1.0) 0.0))))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19295 (* ?x19294 l_0_9_30)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_2) ?x19295) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19301 (* ?x19294 l_0_9_32)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x19301) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19309 (* ?x19294 l_0_9_35)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) ?x19309) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19319 (* ?x19294 l_0_9_39)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_11) ?x19319) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19329 (* ?x19294 l_0_9_44)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_16) ?x19329) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19339 (* ?x19294 l_0_9_50)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_22) ?x19339) 0.0))))
(assert
 (let ((?x19358 (* l_0_9_31 l_0_9_31)))
 (let ((?x19356 (* l_0_9_30 l_0_9_30)))
 (let ((?x19359 (+ (+ (- (* (- l_0_9_2) l_0_9_2) (* l_0_9_3 l_0_9_3)) ?x19356) ?x19358)))
 (= ?x19359 0.0)))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19380 (* ?x19379 l_0_9_33)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19377 (* ?x19376 l_0_9_32)))
 (let ((?x19373 (* 2.0 l_0_9_3)))
 (let ((?x19374 (* ?x19373 l_0_9_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_2) l_0_9_4) ?x19374) ?x19377) ?x19380) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19400 (* ?x19379 l_0_9_36)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19398 (* ?x19376 l_0_9_35)))
 (let ((?x19373 (* 2.0 l_0_9_3)))
 (let ((?x19396 (* ?x19373 l_0_9_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_2) l_0_9_7) ?x19396) ?x19398) ?x19400) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19418 (* ?x19379 l_0_9_40)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19416 (* ?x19376 l_0_9_39)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x19414 (* ?x19413 l_0_9_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x19414) ?x19416) ?x19418) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19443 (* ?x19379 l_0_9_45)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19441 (* ?x19376 l_0_9_44)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x19439 (* ?x19433 l_0_9_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_16) l_0_9_2) ?x19439) ?x19441) ?x19443) 0.0))))))))
(assert
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x19475 (* ?x19474 l_0_9_46)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x19472 (* ?x19471 l_0_9_45)))
 (let ((?x19468 (* 2.0 l_0_9_32)))
 (let ((?x19469 (* ?x19468 l_0_9_44)))
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19466 (* ?x19379 l_0_9_51)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19464 (* ?x19376 l_0_9_50)))
 (let ((?x19461 (* 2.0 l_0_9_23)))
 (let ((?x19462 (* ?x19461 l_0_9_3)))
 (let ((?x19458 (* 2.0 l_0_9_2)))
 (let ((?x19459 (* ?x19458 l_0_9_22)))
 (let ((?x19455 (* 2.0 l_0_9_18)))
 (let ((?x19456 (* ?x19455 l_0_9_6)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x12239 (* ?x19433 l_0_9_5)))
 (let ((?x12235 (* 2.0 l_0_9_16)))
 (let ((?x12238 (* ?x12235 l_0_9_4)))
 (let ((?x19470 (- (+ (+ (- (- (+ (+ ?x12238 ?x12239) ?x19456) ?x19459) ?x19462) ?x19464) ?x19466) ?x19469)))
 (= (- (- ?x19470 ?x19472) ?x19475) 0.0)))))))))))))))))))))))
(assert
 (let ((?x19519 (* l_0_9_6 l_0_9_6)))
 (let ((?x19517 (* l_0_9_5 l_0_9_5)))
 (let ((?x19515 (* l_0_9_4 l_0_9_4)))
 (let ((?x19513 (* l_0_9_34 l_0_9_34)))
 (let ((?x19516 (- (+ (+ (* l_0_9_32 l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x19513) ?x19515)))
 (= (- (- ?x19516 ?x19517) ?x19519) 0.0)))))))
(assert
 (let ((?x19543 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x19540 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x19537 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x19534 (* ?x19474 l_0_9_37)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x19532 (* ?x19471 l_0_9_36)))
 (let ((?x19541 (- (- (+ (+ (* (* 2.0 l_0_9_32) l_0_9_35) ?x19532) ?x19534) ?x19537) ?x19540)))
 (= (- ?x19541 ?x19543) 0.0))))))))))
(assert
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x19562 (* ?x19474 l_0_9_41)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x19560 (* ?x19471 l_0_9_40)))
 (let ((?x19468 (* 2.0 l_0_9_32)))
 (let ((?x19558 (* ?x19468 l_0_9_39)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x12362 (* ?x12360 l_0_9_6)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x12414 (* ?x19413 l_0_9_5)))
 (let ((?x19561 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x12414) ?x12362) ?x19558) ?x19560)))
 (= (+ ?x19561 ?x19562) 0.0)))))))))))))
(assert
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x19475 (* ?x19474 l_0_9_46)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x19472 (* ?x19471 l_0_9_45)))
 (let ((?x19468 (* 2.0 l_0_9_32)))
 (let ((?x19469 (* ?x19468 l_0_9_44)))
 (let ((?x19455 (* 2.0 l_0_9_18)))
 (let ((?x19456 (* ?x19455 l_0_9_6)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x12239 (* ?x19433 l_0_9_5)))
 (let ((?x19586 (+ (+ (- (- (* (* (- 2.0) l_0_9_16) l_0_9_4) ?x12239) ?x19456) ?x19469) ?x19472)))
 (= (+ ?x19586 ?x19475) 0.0)))))))))))))
(assert
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x12431 (* ?x19474 l_0_9_52)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x12434 (* ?x19471 l_0_9_51)))
 (let ((?x19468 (* 2.0 l_0_9_32)))
 (let ((?x12427 (* ?x19468 l_0_9_50)))
 (let ((?x12409 (* 2.0 l_0_9_24)))
 (let ((?x12415 (* ?x12409 l_0_9_6)))
 (let ((?x19461 (* 2.0 l_0_9_23)))
 (let ((?x12486 (* ?x19461 l_0_9_5)))
 (let ((?x12428 (+ (+ (- (- (* (* (- 2.0) l_0_9_22) l_0_9_4) ?x12486) ?x12415) ?x12427) ?x12434)))
 (= (+ ?x12428 ?x12431) 0.0)))))))))))))
(assert
 (let ((?x19617 (* l_0_9_9 l_0_9_9)))
 (let ((?x19615 (* l_0_9_8 l_0_9_8)))
 (let ((?x19613 (* l_0_9_7 l_0_9_7)))
 (let ((?x19611 (* l_0_9_38 l_0_9_38)))
 (let ((?x19609 (* l_0_9_37 l_0_9_37)))
 (let ((?x19607 (* l_0_9_36 l_0_9_36)))
 (let ((?x19610 (+ (+ (+ (* (- l_0_9_10) l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x19607) ?x19609)))
 (= (- (- (- (+ ?x19610 ?x19611) ?x19613) ?x19615) ?x19617) 0.0)))))))))
(assert
 (let ((?x19658 (* 2.0 l_0_9_38)))
 (let ((?x19659 (* ?x19658 l_0_9_42)))
 (let ((?x19655 (* 2.0 l_0_9_37)))
 (let ((?x19656 (* ?x19655 l_0_9_41)))
 (let ((?x19652 (* 2.0 l_0_9_36)))
 (let ((?x19653 (* ?x19652 l_0_9_40)))
 (let ((?x19649 (* 2.0 l_0_9_35)))
 (let ((?x19650 (* ?x19649 l_0_9_39)))
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x19475 (* ?x19474 l_0_9_46)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x19472 (* ?x19471 l_0_9_45)))
 (let ((?x19468 (* 2.0 l_0_9_32)))
 (let ((?x19469 (* ?x19468 l_0_9_44)))
 (let ((?x19455 (* 2.0 l_0_9_18)))
 (let ((?x19456 (* ?x19455 l_0_9_6)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x12239 (* ?x19433 l_0_9_5)))
 (let ((?x12235 (* 2.0 l_0_9_16)))
 (let ((?x12238 (* ?x12235 l_0_9_4)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x19641 (* ?x12360 l_0_9_9)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x19639 (* ?x19413 l_0_9_8)))
 (let ((?x19636 (* 2.0 l_0_9_11)))
 (let ((?x19637 (* ?x19636 l_0_9_7)))
 (let ((?x19643 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x19637) ?x19639) ?x19641) ?x12238)))
 (let ((?x19654 (+ (+ (- (- (- (+ (+ ?x19643 ?x12239) ?x19456) ?x19469) ?x19472) ?x19475) ?x19650) ?x19653)))
 (= (+ (+ ?x19654 ?x19656) ?x19659) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x19658 (* 2.0 l_0_9_38)))
 (let ((?x19698 (* ?x19658 l_0_9_47)))
 (let ((?x19655 (* 2.0 l_0_9_37)))
 (let ((?x19696 (* ?x19655 l_0_9_46)))
 (let ((?x19652 (* 2.0 l_0_9_36)))
 (let ((?x19694 (* ?x19652 l_0_9_45)))
 (let ((?x19649 (* 2.0 l_0_9_35)))
 (let ((?x19692 (* ?x19649 l_0_9_44)))
 (let ((?x19455 (* 2.0 l_0_9_18)))
 (let ((?x19690 (* ?x19455 l_0_9_9)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x19681 (* ?x19433 l_0_9_8)))
 (let ((?x12235 (* 2.0 l_0_9_16)))
 (let ((?x19677 (* ?x12235 l_0_9_7)))
 (let ((?x19693 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_19) ?x19677) ?x19681) ?x19690) ?x19692)))
 (= (+ (+ (+ ?x19693 ?x19694) ?x19696) ?x19698) 0.0)))))))))))))))))
(assert
 (let ((?x19658 (* 2.0 l_0_9_38)))
 (let ((?x19731 (* ?x19658 l_0_9_53)))
 (let ((?x19655 (* 2.0 l_0_9_37)))
 (let ((?x19729 (* ?x19655 l_0_9_52)))
 (let ((?x19652 (* 2.0 l_0_9_36)))
 (let ((?x19727 (* ?x19652 l_0_9_51)))
 (let ((?x19649 (* 2.0 l_0_9_35)))
 (let ((?x19725 (* ?x19649 l_0_9_50)))
 (let ((?x12409 (* 2.0 l_0_9_24)))
 (let ((?x19723 (* ?x12409 l_0_9_9)))
 (let ((?x19461 (* 2.0 l_0_9_23)))
 (let ((?x12667 (* ?x19461 l_0_9_8)))
 (let ((?x12649 (* 2.0 l_0_9_22)))
 (let ((?x12652 (* ?x12649 l_0_9_7)))
 (let ((?x19726 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_25) ?x12652) ?x12667) ?x19723) ?x19725)))
 (= (+ (+ (+ ?x19726 ?x19727) ?x19729) ?x19731) 0.0)))))))))))))))))
(assert
 (let ((?x19777 (* l_0_9_43 l_0_9_43)))
 (let ((?x19775 (* l_0_9_42 l_0_9_42)))
 (let ((?x19773 (* l_0_9_41 l_0_9_41)))
 (let ((?x19771 (* l_0_9_40 l_0_9_40)))
 (let ((?x19769 (* l_0_9_39 l_0_9_39)))
 (let ((?x19767 (* l_0_9_15 l_0_9_15)))
 (let ((?x19765 (* l_0_9_14 l_0_9_14)))
 (let ((?x19756 (* l_0_9_13 l_0_9_13)))
 (let ((?x19766 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x19756) ?x19765)))
 (= (+ (+ (+ (+ (+ (- ?x19766 ?x19767) ?x19769) ?x19771) ?x19773) ?x19775) ?x19777) 0.0)))))))))))
(assert
 (let ((?x19808 (* 2.0 l_0_9_43)))
 (let ((?x19809 (* ?x19808 l_0_9_48)))
 (let ((?x19805 (* 2.0 l_0_9_42)))
 (let ((?x19806 (* ?x19805 l_0_9_47)))
 (let ((?x19802 (* 2.0 l_0_9_41)))
 (let ((?x19803 (* ?x19802 l_0_9_46)))
 (let ((?x19799 (* 2.0 l_0_9_40)))
 (let ((?x19800 (* ?x19799 l_0_9_45)))
 (let ((?x19796 (* 2.0 l_0_9_39)))
 (let ((?x19797 (* ?x19796 l_0_9_44)))
 (let ((?x19793 (* 2.0 l_0_9_15)))
 (let ((?x19794 (* ?x19793 l_0_9_20)))
 (let ((?x12684 (* 2.0 l_0_9_14)))
 (let ((?x12685 (* ?x12684 l_0_9_19)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x12687 (* ?x12360 l_0_9_18)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x12680 (* ?x19413 l_0_9_17)))
 (let ((?x19795 (- (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_16) ?x12680) ?x12687) ?x12685) ?x19794)))
 (= (+ (+ (+ (+ (+ ?x19795 ?x19797) ?x19800) ?x19803) ?x19806) ?x19809) 0.0)))))))))))))))))))))
(assert
 (let ((?x19808 (* 2.0 l_0_9_43)))
 (let ((?x19860 (* ?x19808 l_0_9_54)))
 (let ((?x19805 (* 2.0 l_0_9_42)))
 (let ((?x19858 (* ?x19805 l_0_9_53)))
 (let ((?x19802 (* 2.0 l_0_9_41)))
 (let ((?x19856 (* ?x19802 l_0_9_52)))
 (let ((?x19799 (* 2.0 l_0_9_40)))
 (let ((?x19854 (* ?x19799 l_0_9_51)))
 (let ((?x19796 (* 2.0 l_0_9_39)))
 (let ((?x19852 (* ?x19796 l_0_9_50)))
 (let ((?x19793 (* 2.0 l_0_9_15)))
 (let ((?x19850 (* ?x19793 l_0_9_26)))
 (let ((?x12684 (* 2.0 l_0_9_14)))
 (let ((?x19840 (* ?x12684 l_0_9_25)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x19837 (* ?x12360 l_0_9_24)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x19833 (* ?x19413 l_0_9_23)))
 (let ((?x19851 (- (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_22) ?x19833) ?x19837) ?x19840) ?x19850)))
 (= (+ (+ (+ (+ (+ ?x19851 ?x19852) ?x19854) ?x19856) ?x19858) ?x19860) 0.0)))))))))))))))))))))
(assert
 (let ((?x19887 (* l_0_9_49 l_0_9_49)))
 (let ((?x19885 (* l_0_9_48 l_0_9_48)))
 (let ((?x19883 (* l_0_9_47 l_0_9_47)))
 (let ((?x19881 (* l_0_9_46 l_0_9_46)))
 (let ((?x19879 (* l_0_9_45 l_0_9_45)))
 (let ((?x19877 (* l_0_9_44 l_0_9_44)))
 (let ((?x12760 (* l_0_9_21 l_0_9_21)))
 (let ((?x12756 (* l_0_9_20 l_0_9_20)))
 (let ((?x12770 (* l_0_9_19 l_0_9_19)))
 (let ((?x12897 (* l_0_9_18 l_0_9_18)))
 (let ((?x12762 (- (- (- (* (- l_0_9_16) l_0_9_16) (* l_0_9_17 l_0_9_17)) ?x12897) ?x12770)))
 (let ((?x19886 (+ (+ (+ (+ (+ (- (- ?x12762 ?x12756) ?x12760) ?x19877) ?x19879) ?x19881) ?x19883) ?x19885)))
 (= (+ ?x19886 ?x19887) 0.0))))))))))))))
(assert
 (let ((?x19933 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x19930 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x19927 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x19924 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x19921 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x19918 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x19915 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x19912 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x19909 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x19455 (* 2.0 l_0_9_18)))
 (let ((?x19906 (* ?x19455 l_0_9_24)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x19904 (* ?x19433 l_0_9_23)))
 (let ((?x19913 (- (- (- (- (* (* (- 2.0) l_0_9_16) l_0_9_22) ?x19904) ?x19906) ?x19909) ?x19912)))
 (let ((?x19934 (+ (+ (+ (+ (+ (+ (- ?x19913 ?x19915) ?x19918) ?x19921) ?x19924) ?x19927) ?x19930) ?x19933)))
 (= ?x19934 0.0)))))))))))))))))
(assert
 (let ((?x19990 (* l_0_9_56 l_0_9_56)))
 (let ((?x19988 (* l_0_9_55 l_0_9_55)))
 (let ((?x19986 (* l_0_9_54 l_0_9_54)))
 (let ((?x19984 (* l_0_9_53 l_0_9_53)))
 (let ((?x19982 (* l_0_9_52 l_0_9_52)))
 (let ((?x19980 (* l_0_9_51 l_0_9_51)))
 (let ((?x19978 (* l_0_9_50 l_0_9_50)))
 (let ((?x19976 (* l_0_9_28 l_0_9_28)))
 (let ((?x19974 (* l_0_9_27 l_0_9_27)))
 (let ((?x19972 (* l_0_9_26 l_0_9_26)))
 (let ((?x19961 (* l_0_9_25 l_0_9_25)))
 (let ((?x19958 (* l_0_9_24 l_0_9_24)))
 (let ((?x19971 (- (- (- (* (- l_0_9_22) l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x19958) ?x19961)))
 (let ((?x19985 (+ (+ (+ (+ (- (- (- ?x19971 ?x19972) ?x19974) ?x19976) ?x19978) ?x19980) ?x19982) ?x19984)))
 (= (+ (+ (+ ?x19985 ?x19986) ?x19988) ?x19990) 0.0))))))))))))))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19295 (* ?x19294 l_0_9_30)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_2) ?x19295) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19301 (* ?x19294 l_0_9_32)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_4) ?x19301) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19309 (* ?x19294 l_0_9_35)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_7) ?x19309) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19319 (* ?x19294 l_0_9_39)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_11) ?x19319) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19329 (* ?x19294 l_0_9_44)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_16) ?x19329) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19339 (* ?x19294 l_0_9_50)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_22) ?x19339) 0.0))))
(assert
 (let ((?x19358 (* l_0_9_31 l_0_9_31)))
 (let ((?x19356 (* l_0_9_30 l_0_9_30)))
 (= (- (- (+ (* l_0_9_2 l_0_9_2) (* l_0_9_3 l_0_9_3)) ?x19356) ?x19358) 0.0))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19380 (* ?x19379 l_0_9_33)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19377 (* ?x19376 l_0_9_32)))
 (let ((?x19373 (* 2.0 l_0_9_3)))
 (let ((?x19374 (* ?x19373 l_0_9_5)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_4) ?x19374) ?x19377) ?x19380) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19400 (* ?x19379 l_0_9_36)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19398 (* ?x19376 l_0_9_35)))
 (let ((?x19373 (* 2.0 l_0_9_3)))
 (let ((?x19396 (* ?x19373 l_0_9_8)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_7) ?x19396) ?x19398) ?x19400) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19418 (* ?x19379 l_0_9_40)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19416 (* ?x19376 l_0_9_39)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x19414 (* ?x19413 l_0_9_3)))
 (= (- (- (+ (* (* 2.0 l_0_9_11) l_0_9_2) ?x19414) ?x19416) ?x19418) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19443 (* ?x19379 l_0_9_45)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19441 (* ?x19376 l_0_9_44)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x19439 (* ?x19433 l_0_9_3)))
 (= (- (- (+ (* (* 2.0 l_0_9_16) l_0_9_2) ?x19439) ?x19441) ?x19443) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19466 (* ?x19379 l_0_9_51)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19464 (* ?x19376 l_0_9_50)))
 (let ((?x19461 (* 2.0 l_0_9_23)))
 (let ((?x19462 (* ?x19461 l_0_9_3)))
 (let ((?x19458 (* 2.0 l_0_9_2)))
 (let ((?x19459 (* ?x19458 l_0_9_22)))
 (= (- (- (+ ?x19459 ?x19462) ?x19464) ?x19466) 0.0))))))))))
(assert
 (let ((?x19519 (* l_0_9_6 l_0_9_6)))
 (let ((?x19517 (* l_0_9_5 l_0_9_5)))
 (let ((?x19515 (* l_0_9_4 l_0_9_4)))
 (let ((?x19513 (* l_0_9_34 l_0_9_34)))
 (let ((?x3804 (+ (- (- (* (- l_0_9_32) l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x19513) ?x19515)))
 (= (+ (+ ?x3804 ?x19517) ?x19519) 0.0)))))))
(assert
 (let ((?x19543 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x19540 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x19537 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x19534 (* ?x19474 l_0_9_37)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x19532 (* ?x19471 l_0_9_36)))
 (let ((?x20034 (+ (+ (- (- (* (* (- 2.0) l_0_9_32) l_0_9_35) ?x19532) ?x19534) ?x19537) ?x19540)))
 (= (+ ?x20034 ?x19543) 0.0))))))))))
(assert
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x19562 (* ?x19474 l_0_9_41)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x19560 (* ?x19471 l_0_9_40)))
 (let ((?x19468 (* 2.0 l_0_9_32)))
 (let ((?x19558 (* ?x19468 l_0_9_39)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x12362 (* ?x12360 l_0_9_6)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x12414 (* ?x19413 l_0_9_5)))
 (let ((?x3877 (- (- (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x12414) ?x12362) ?x19558) ?x19560)))
 (= (- ?x3877 ?x19562) 0.0)))))))))))))
(assert
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x12431 (* ?x19474 l_0_9_52)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x12434 (* ?x19471 l_0_9_51)))
 (let ((?x19468 (* 2.0 l_0_9_32)))
 (let ((?x12427 (* ?x19468 l_0_9_50)))
 (let ((?x12409 (* 2.0 l_0_9_24)))
 (let ((?x12415 (* ?x12409 l_0_9_6)))
 (let ((?x19461 (* 2.0 l_0_9_23)))
 (let ((?x12486 (* ?x19461 l_0_9_5)))
 (let ((?x3960 (- (- (+ (+ (* (* 2.0 l_0_9_22) l_0_9_4) ?x12486) ?x12415) ?x12427) ?x12434)))
 (= (- ?x3960 ?x12431) 0.0)))))))))))))
(assert
 (let ((?x19617 (* l_0_9_9 l_0_9_9)))
 (let ((?x19615 (* l_0_9_8 l_0_9_8)))
 (let ((?x19613 (* l_0_9_7 l_0_9_7)))
 (let ((?x19611 (* l_0_9_38 l_0_9_38)))
 (let ((?x19609 (* l_0_9_37 l_0_9_37)))
 (let ((?x19607 (* l_0_9_36 l_0_9_36)))
 (let ((?x4018 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x19607) ?x19609)))
 (= (+ (+ (+ (- ?x4018 ?x19611) ?x19613) ?x19615) ?x19617) 0.0)))))))))
(assert
 (let ((?x19658 (* 2.0 l_0_9_38)))
 (let ((?x19659 (* ?x19658 l_0_9_42)))
 (let ((?x19655 (* 2.0 l_0_9_37)))
 (let ((?x19656 (* ?x19655 l_0_9_41)))
 (let ((?x19652 (* 2.0 l_0_9_36)))
 (let ((?x19653 (* ?x19652 l_0_9_40)))
 (let ((?x19649 (* 2.0 l_0_9_35)))
 (let ((?x19650 (* ?x19649 l_0_9_39)))
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19466 (* ?x19379 l_0_9_51)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19464 (* ?x19376 l_0_9_50)))
 (let ((?x19461 (* 2.0 l_0_9_23)))
 (let ((?x19462 (* ?x19461 l_0_9_3)))
 (let ((?x19458 (* 2.0 l_0_9_2)))
 (let ((?x19459 (* ?x19458 l_0_9_22)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x19641 (* ?x12360 l_0_9_9)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x19639 (* ?x19413 l_0_9_8)))
 (let ((?x19636 (* 2.0 l_0_9_11)))
 (let ((?x19637 (* ?x19636 l_0_9_7)))
 (let ((?x13551 (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_14) ?x19637) ?x19639) ?x19641)))
 (let ((?x20042 (- (- (- (- (- (+ (+ ?x13551 ?x19459) ?x19462) ?x19464) ?x19466) ?x19650) ?x19653) ?x19656)))
 (= (- ?x20042 ?x19659) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x19658 (* 2.0 l_0_9_38)))
 (let ((?x19698 (* ?x19658 l_0_9_47)))
 (let ((?x19655 (* 2.0 l_0_9_37)))
 (let ((?x19696 (* ?x19655 l_0_9_46)))
 (let ((?x19652 (* 2.0 l_0_9_36)))
 (let ((?x19694 (* ?x19652 l_0_9_45)))
 (let ((?x19649 (* 2.0 l_0_9_35)))
 (let ((?x19692 (* ?x19649 l_0_9_44)))
 (let ((?x19455 (* 2.0 l_0_9_18)))
 (let ((?x19690 (* ?x19455 l_0_9_9)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x19681 (* ?x19433 l_0_9_8)))
 (let ((?x12235 (* 2.0 l_0_9_16)))
 (let ((?x19677 (* ?x12235 l_0_9_7)))
 (let ((?x20071 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_19) ?x19677) ?x19681) ?x19690) ?x19692)))
 (= (- (- (- ?x20071 ?x19694) ?x19696) ?x19698) 0.0)))))))))))))))))
(assert
 (let ((?x19658 (* 2.0 l_0_9_38)))
 (let ((?x19731 (* ?x19658 l_0_9_53)))
 (let ((?x19655 (* 2.0 l_0_9_37)))
 (let ((?x19729 (* ?x19655 l_0_9_52)))
 (let ((?x19652 (* 2.0 l_0_9_36)))
 (let ((?x19727 (* ?x19652 l_0_9_51)))
 (let ((?x19649 (* 2.0 l_0_9_35)))
 (let ((?x19725 (* ?x19649 l_0_9_50)))
 (let ((?x12409 (* 2.0 l_0_9_24)))
 (let ((?x19723 (* ?x12409 l_0_9_9)))
 (let ((?x19461 (* 2.0 l_0_9_23)))
 (let ((?x12667 (* ?x19461 l_0_9_8)))
 (let ((?x12649 (* 2.0 l_0_9_22)))
 (let ((?x12652 (* ?x12649 l_0_9_7)))
 (let ((?x20092 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_25) ?x12652) ?x12667) ?x19723) ?x19725)))
 (= (- (- (- ?x20092 ?x19727) ?x19729) ?x19731) 0.0)))))))))))))))))
(assert
 (let ((?x19777 (* l_0_9_43 l_0_9_43)))
 (let ((?x19775 (* l_0_9_42 l_0_9_42)))
 (let ((?x19773 (* l_0_9_41 l_0_9_41)))
 (let ((?x19771 (* l_0_9_40 l_0_9_40)))
 (let ((?x19769 (* l_0_9_39 l_0_9_39)))
 (let ((?x19767 (* l_0_9_15 l_0_9_15)))
 (let ((?x19765 (* l_0_9_14 l_0_9_14)))
 (let ((?x19756 (* l_0_9_13 l_0_9_13)))
 (let ((?x13606 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x19756) ?x19765)))
 (= (- (- (- (- (- (+ ?x13606 ?x19767) ?x19769) ?x19771) ?x19773) ?x19775) ?x19777) 0.0)))))))))))
(assert
 (let ((?x19808 (* 2.0 l_0_9_43)))
 (let ((?x19809 (* ?x19808 l_0_9_48)))
 (let ((?x19805 (* 2.0 l_0_9_42)))
 (let ((?x19806 (* ?x19805 l_0_9_47)))
 (let ((?x19802 (* 2.0 l_0_9_41)))
 (let ((?x19803 (* ?x19802 l_0_9_46)))
 (let ((?x19799 (* 2.0 l_0_9_40)))
 (let ((?x19800 (* ?x19799 l_0_9_45)))
 (let ((?x19796 (* 2.0 l_0_9_39)))
 (let ((?x19797 (* ?x19796 l_0_9_44)))
 (let ((?x19793 (* 2.0 l_0_9_15)))
 (let ((?x19794 (* ?x19793 l_0_9_20)))
 (let ((?x12684 (* 2.0 l_0_9_14)))
 (let ((?x12685 (* ?x12684 l_0_9_19)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x12687 (* ?x12360 l_0_9_18)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x12680 (* ?x19413 l_0_9_17)))
 (let ((?x20123 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_16) ?x12680) ?x12687) ?x12685) ?x19794)))
 (= (- (- (- (- (- ?x20123 ?x19797) ?x19800) ?x19803) ?x19806) ?x19809) 0.0)))))))))))))))))))))
(assert
 (let ((?x19808 (* 2.0 l_0_9_43)))
 (let ((?x19860 (* ?x19808 l_0_9_54)))
 (let ((?x19805 (* 2.0 l_0_9_42)))
 (let ((?x19858 (* ?x19805 l_0_9_53)))
 (let ((?x19802 (* 2.0 l_0_9_41)))
 (let ((?x19856 (* ?x19802 l_0_9_52)))
 (let ((?x19799 (* 2.0 l_0_9_40)))
 (let ((?x19854 (* ?x19799 l_0_9_51)))
 (let ((?x19796 (* 2.0 l_0_9_39)))
 (let ((?x19852 (* ?x19796 l_0_9_50)))
 (let ((?x19793 (* 2.0 l_0_9_15)))
 (let ((?x19850 (* ?x19793 l_0_9_26)))
 (let ((?x12684 (* 2.0 l_0_9_14)))
 (let ((?x19840 (* ?x12684 l_0_9_25)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x19837 (* ?x12360 l_0_9_24)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x19833 (* ?x19413 l_0_9_23)))
 (let ((?x20154 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_22) ?x19833) ?x19837) ?x19840) ?x19850)))
 (= (- (- (- (- (- ?x20154 ?x19852) ?x19854) ?x19856) ?x19858) ?x19860) 0.0)))))))))))))))))))))
(assert
 (let ((?x19887 (* l_0_9_49 l_0_9_49)))
 (let ((?x19885 (* l_0_9_48 l_0_9_48)))
 (let ((?x19883 (* l_0_9_47 l_0_9_47)))
 (let ((?x19881 (* l_0_9_46 l_0_9_46)))
 (let ((?x19879 (* l_0_9_45 l_0_9_45)))
 (let ((?x19877 (* l_0_9_44 l_0_9_44)))
 (let ((?x12760 (* l_0_9_21 l_0_9_21)))
 (let ((?x12756 (* l_0_9_20 l_0_9_20)))
 (let ((?x12770 (* l_0_9_19 l_0_9_19)))
 (let ((?x12897 (* l_0_9_18 l_0_9_18)))
 (let ((?x20183 (+ (+ (+ (* l_0_9_16 l_0_9_16) (* l_0_9_17 l_0_9_17)) ?x12897) ?x12770)))
 (let ((?x20190 (- (- (- (- (- (+ (+ ?x20183 ?x12756) ?x12760) ?x19877) ?x19879) ?x19881) ?x19883) ?x19885)))
 (= (- ?x20190 ?x19887) 0.0))))))))))))))
(assert
 (let ((?x19933 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x19930 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x19927 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x19924 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x19921 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x19918 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x19915 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x19912 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x19909 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x19455 (* 2.0 l_0_9_18)))
 (let ((?x19906 (* ?x19455 l_0_9_24)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x19904 (* ?x19433 l_0_9_23)))
 (let ((?x20209 (+ (+ (+ (+ (* (* 2.0 l_0_9_16) l_0_9_22) ?x19904) ?x19906) ?x19909) ?x19912)))
 (let ((?x20216 (- (- (- (- (- (- (+ ?x20209 ?x19915) ?x19918) ?x19921) ?x19924) ?x19927) ?x19930) ?x19933)))
 (= ?x20216 0.0)))))))))))))))))
(assert
 (let ((?x19990 (* l_0_9_56 l_0_9_56)))
 (let ((?x19988 (* l_0_9_55 l_0_9_55)))
 (let ((?x19986 (* l_0_9_54 l_0_9_54)))
 (let ((?x19984 (* l_0_9_53 l_0_9_53)))
 (let ((?x19982 (* l_0_9_52 l_0_9_52)))
 (let ((?x19980 (* l_0_9_51 l_0_9_51)))
 (let ((?x19978 (* l_0_9_50 l_0_9_50)))
 (let ((?x19976 (* l_0_9_28 l_0_9_28)))
 (let ((?x19974 (* l_0_9_27 l_0_9_27)))
 (let ((?x19972 (* l_0_9_26 l_0_9_26)))
 (let ((?x19961 (* l_0_9_25 l_0_9_25)))
 (let ((?x19958 (* l_0_9_24 l_0_9_24)))
 (let ((?x13684 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x19958) ?x19961)))
 (let ((?x13663 (- (- (- (- (+ (+ (+ ?x13684 ?x19972) ?x19974) ?x19976) ?x19978) ?x19980) ?x19982) ?x19984)))
 (= (- (- (- ?x13663 ?x19986) ?x19988) ?x19990) 0.0))))))))))))))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19295 (* ?x19294 l_0_9_30)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_2) ?x19295) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19301 (* ?x19294 l_0_9_32)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_4) ?x19301) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19309 (* ?x19294 l_0_9_35)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_7) ?x19309) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19319 (* ?x19294 l_0_9_39)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_11) ?x19319) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19329 (* ?x19294 l_0_9_44)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_16) ?x19329) 0.0))))
(assert
 (let ((?x19294 (* 2.0 l_0_9_29)))
 (let ((?x19339 (* ?x19294 l_0_9_50)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_22) ?x19339) 0.0))))
(assert
 (let ((?x19358 (* l_0_9_31 l_0_9_31)))
 (let ((?x19356 (* l_0_9_30 l_0_9_30)))
 (= (- (- (+ (* l_0_9_2 l_0_9_2) (* l_0_9_3 l_0_9_3)) ?x19356) ?x19358) 0.0))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19380 (* ?x19379 l_0_9_33)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19377 (* ?x19376 l_0_9_32)))
 (let ((?x19373 (* 2.0 l_0_9_3)))
 (let ((?x19374 (* ?x19373 l_0_9_5)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_4) ?x19374) ?x19377) ?x19380) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19400 (* ?x19379 l_0_9_36)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19398 (* ?x19376 l_0_9_35)))
 (let ((?x19373 (* 2.0 l_0_9_3)))
 (let ((?x19396 (* ?x19373 l_0_9_8)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_7) ?x19396) ?x19398) ?x19400) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19418 (* ?x19379 l_0_9_40)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19416 (* ?x19376 l_0_9_39)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x19414 (* ?x19413 l_0_9_3)))
 (= (- (- (+ (* (* 2.0 l_0_9_11) l_0_9_2) ?x19414) ?x19416) ?x19418) 0.0))))))))
(assert
 (let ((?x19379 (* 2.0 l_0_9_31)))
 (let ((?x19443 (* ?x19379 l_0_9_45)))
 (let ((?x19376 (* 2.0 l_0_9_30)))
 (let ((?x19441 (* ?x19376 l_0_9_44)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x19439 (* ?x19433 l_0_9_3)))
 (= (- (- (+ (* (* 2.0 l_0_9_16) l_0_9_2) ?x19439) ?x19441) ?x19443) 0.0))))))))
(assert
 (let ((?x19519 (* l_0_9_6 l_0_9_6)))
 (let ((?x19517 (* l_0_9_5 l_0_9_5)))
 (let ((?x19515 (* l_0_9_4 l_0_9_4)))
 (let ((?x19513 (* l_0_9_34 l_0_9_34)))
 (let ((?x3804 (+ (- (- (* (- l_0_9_32) l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x19513) ?x19515)))
 (= (+ (+ ?x3804 ?x19517) ?x19519) 0.0)))))))
(assert
 (let ((?x19543 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x19540 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x19537 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x19534 (* ?x19474 l_0_9_37)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x19532 (* ?x19471 l_0_9_36)))
 (let ((?x20034 (+ (+ (- (- (* (* (- 2.0) l_0_9_32) l_0_9_35) ?x19532) ?x19534) ?x19537) ?x19540)))
 (= (+ ?x20034 ?x19543) 0.0))))))))))
(assert
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x19562 (* ?x19474 l_0_9_41)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x19560 (* ?x19471 l_0_9_40)))
 (let ((?x19468 (* 2.0 l_0_9_32)))
 (let ((?x19558 (* ?x19468 l_0_9_39)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x12362 (* ?x12360 l_0_9_6)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x12414 (* ?x19413 l_0_9_5)))
 (let ((?x3877 (- (- (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x12414) ?x12362) ?x19558) ?x19560)))
 (= (- ?x3877 ?x19562) 0.0)))))))))))))
(assert
 (let ((?x19474 (* 2.0 l_0_9_34)))
 (let ((?x12431 (* ?x19474 l_0_9_52)))
 (let ((?x19471 (* 2.0 l_0_9_33)))
 (let ((?x12434 (* ?x19471 l_0_9_51)))
 (let ((?x19468 (* 2.0 l_0_9_32)))
 (let ((?x12427 (* ?x19468 l_0_9_50)))
 (let ((?x12409 (* 2.0 l_0_9_24)))
 (let ((?x12415 (* ?x12409 l_0_9_6)))
 (let ((?x19461 (* 2.0 l_0_9_23)))
 (let ((?x12486 (* ?x19461 l_0_9_5)))
 (let ((?x3960 (- (- (+ (+ (* (* 2.0 l_0_9_22) l_0_9_4) ?x12486) ?x12415) ?x12427) ?x12434)))
 (= (- ?x3960 ?x12431) 0.0)))))))))))))
(assert
 (let ((?x19617 (* l_0_9_9 l_0_9_9)))
 (let ((?x19615 (* l_0_9_8 l_0_9_8)))
 (let ((?x19613 (* l_0_9_7 l_0_9_7)))
 (let ((?x19611 (* l_0_9_38 l_0_9_38)))
 (let ((?x19609 (* l_0_9_37 l_0_9_37)))
 (let ((?x19607 (* l_0_9_36 l_0_9_36)))
 (let ((?x4018 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x19607) ?x19609)))
 (= (+ (+ (+ (- ?x4018 ?x19611) ?x19613) ?x19615) ?x19617) 0.0)))))))))
(assert
 (let ((?x19658 (* 2.0 l_0_9_38)))
 (let ((?x19659 (* ?x19658 l_0_9_42)))
 (let ((?x19655 (* 2.0 l_0_9_37)))
 (let ((?x19656 (* ?x19655 l_0_9_41)))
 (let ((?x19652 (* 2.0 l_0_9_36)))
 (let ((?x19653 (* ?x19652 l_0_9_40)))
 (let ((?x19649 (* 2.0 l_0_9_35)))
 (let ((?x19650 (* ?x19649 l_0_9_39)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x19641 (* ?x12360 l_0_9_9)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x19639 (* ?x19413 l_0_9_8)))
 (let ((?x19636 (* 2.0 l_0_9_11)))
 (let ((?x19637 (* ?x19636 l_0_9_7)))
 (let ((?x13551 (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_14) ?x19637) ?x19639) ?x19641)))
 (= (- (- (- (- ?x13551 ?x19650) ?x19653) ?x19656) ?x19659) 0.0)))))))))))))))))
(assert
 (let ((?x19658 (* 2.0 l_0_9_38)))
 (let ((?x19698 (* ?x19658 l_0_9_47)))
 (let ((?x19655 (* 2.0 l_0_9_37)))
 (let ((?x19696 (* ?x19655 l_0_9_46)))
 (let ((?x19652 (* 2.0 l_0_9_36)))
 (let ((?x19694 (* ?x19652 l_0_9_45)))
 (let ((?x19649 (* 2.0 l_0_9_35)))
 (let ((?x19692 (* ?x19649 l_0_9_44)))
 (let ((?x19455 (* 2.0 l_0_9_18)))
 (let ((?x19690 (* ?x19455 l_0_9_9)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x19681 (* ?x19433 l_0_9_8)))
 (let ((?x12235 (* 2.0 l_0_9_16)))
 (let ((?x19677 (* ?x12235 l_0_9_7)))
 (let ((?x20071 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_19) ?x19677) ?x19681) ?x19690) ?x19692)))
 (= (- (- (- ?x20071 ?x19694) ?x19696) ?x19698) 0.0)))))))))))))))))
(assert
 (let ((?x19658 (* 2.0 l_0_9_38)))
 (let ((?x19731 (* ?x19658 l_0_9_53)))
 (let ((?x19655 (* 2.0 l_0_9_37)))
 (let ((?x19729 (* ?x19655 l_0_9_52)))
 (let ((?x19652 (* 2.0 l_0_9_36)))
 (let ((?x19727 (* ?x19652 l_0_9_51)))
 (let ((?x19649 (* 2.0 l_0_9_35)))
 (let ((?x19725 (* ?x19649 l_0_9_50)))
 (let ((?x12409 (* 2.0 l_0_9_24)))
 (let ((?x19723 (* ?x12409 l_0_9_9)))
 (let ((?x19461 (* 2.0 l_0_9_23)))
 (let ((?x12667 (* ?x19461 l_0_9_8)))
 (let ((?x12649 (* 2.0 l_0_9_22)))
 (let ((?x12652 (* ?x12649 l_0_9_7)))
 (let ((?x20092 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_25) ?x12652) ?x12667) ?x19723) ?x19725)))
 (= (- (- (- ?x20092 ?x19727) ?x19729) ?x19731) 0.0)))))))))))))))))
(assert
 (let ((?x19777 (* l_0_9_43 l_0_9_43)))
 (let ((?x19775 (* l_0_9_42 l_0_9_42)))
 (let ((?x19773 (* l_0_9_41 l_0_9_41)))
 (let ((?x19771 (* l_0_9_40 l_0_9_40)))
 (let ((?x19769 (* l_0_9_39 l_0_9_39)))
 (let ((?x19767 (* l_0_9_15 l_0_9_15)))
 (let ((?x19765 (* l_0_9_14 l_0_9_14)))
 (let ((?x19756 (* l_0_9_13 l_0_9_13)))
 (let ((?x13606 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x19756) ?x19765)))
 (= (- (- (- (- (- (+ ?x13606 ?x19767) ?x19769) ?x19771) ?x19773) ?x19775) ?x19777) 0.0)))))))))))
(assert
 (let ((?x19808 (* 2.0 l_0_9_43)))
 (let ((?x19809 (* ?x19808 l_0_9_48)))
 (let ((?x19805 (* 2.0 l_0_9_42)))
 (let ((?x19806 (* ?x19805 l_0_9_47)))
 (let ((?x19802 (* 2.0 l_0_9_41)))
 (let ((?x19803 (* ?x19802 l_0_9_46)))
 (let ((?x19799 (* 2.0 l_0_9_40)))
 (let ((?x19800 (* ?x19799 l_0_9_45)))
 (let ((?x19796 (* 2.0 l_0_9_39)))
 (let ((?x19797 (* ?x19796 l_0_9_44)))
 (let ((?x19793 (* 2.0 l_0_9_15)))
 (let ((?x19794 (* ?x19793 l_0_9_20)))
 (let ((?x12684 (* 2.0 l_0_9_14)))
 (let ((?x12685 (* ?x12684 l_0_9_19)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x12687 (* ?x12360 l_0_9_18)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x12680 (* ?x19413 l_0_9_17)))
 (let ((?x20123 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_16) ?x12680) ?x12687) ?x12685) ?x19794)))
 (= (- (- (- (- (- ?x20123 ?x19797) ?x19800) ?x19803) ?x19806) ?x19809) 0.0)))))))))))))))))))))
(assert
 (let ((?x19808 (* 2.0 l_0_9_43)))
 (let ((?x19860 (* ?x19808 l_0_9_54)))
 (let ((?x19805 (* 2.0 l_0_9_42)))
 (let ((?x19858 (* ?x19805 l_0_9_53)))
 (let ((?x19802 (* 2.0 l_0_9_41)))
 (let ((?x19856 (* ?x19802 l_0_9_52)))
 (let ((?x19799 (* 2.0 l_0_9_40)))
 (let ((?x19854 (* ?x19799 l_0_9_51)))
 (let ((?x19796 (* 2.0 l_0_9_39)))
 (let ((?x19852 (* ?x19796 l_0_9_50)))
 (let ((?x19793 (* 2.0 l_0_9_15)))
 (let ((?x19850 (* ?x19793 l_0_9_26)))
 (let ((?x12684 (* 2.0 l_0_9_14)))
 (let ((?x19840 (* ?x12684 l_0_9_25)))
 (let ((?x12360 (* 2.0 l_0_9_13)))
 (let ((?x19837 (* ?x12360 l_0_9_24)))
 (let ((?x19413 (* 2.0 l_0_9_12)))
 (let ((?x19833 (* ?x19413 l_0_9_23)))
 (let ((?x20154 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_22) ?x19833) ?x19837) ?x19840) ?x19850)))
 (= (- (- (- (- (- ?x20154 ?x19852) ?x19854) ?x19856) ?x19858) ?x19860) 0.0)))))))))))))))))))))
(assert
 (let ((?x19887 (* l_0_9_49 l_0_9_49)))
 (let ((?x19885 (* l_0_9_48 l_0_9_48)))
 (let ((?x19883 (* l_0_9_47 l_0_9_47)))
 (let ((?x19881 (* l_0_9_46 l_0_9_46)))
 (let ((?x19879 (* l_0_9_45 l_0_9_45)))
 (let ((?x19877 (* l_0_9_44 l_0_9_44)))
 (let ((?x12760 (* l_0_9_21 l_0_9_21)))
 (let ((?x12756 (* l_0_9_20 l_0_9_20)))
 (let ((?x12770 (* l_0_9_19 l_0_9_19)))
 (let ((?x12897 (* l_0_9_18 l_0_9_18)))
 (let ((?x20183 (+ (+ (+ (* l_0_9_16 l_0_9_16) (* l_0_9_17 l_0_9_17)) ?x12897) ?x12770)))
 (let ((?x20190 (- (- (- (- (- (+ (+ ?x20183 ?x12756) ?x12760) ?x19877) ?x19879) ?x19881) ?x19883) ?x19885)))
 (= (- ?x20190 ?x19887) 0.0))))))))))))))
(assert
 (let ((?x19933 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x19930 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x19927 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x19924 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x19921 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x19918 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x19915 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x19912 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x19909 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x19455 (* 2.0 l_0_9_18)))
 (let ((?x19906 (* ?x19455 l_0_9_24)))
 (let ((?x19433 (* 2.0 l_0_9_17)))
 (let ((?x19904 (* ?x19433 l_0_9_23)))
 (let ((?x20209 (+ (+ (+ (+ (* (* 2.0 l_0_9_16) l_0_9_22) ?x19904) ?x19906) ?x19909) ?x19912)))
 (let ((?x20216 (- (- (- (- (- (- (+ ?x20209 ?x19915) ?x19918) ?x19921) ?x19924) ?x19927) ?x19930) ?x19933)))
 (= ?x20216 0.0)))))))))))))))))
(assert
 (let ((?x19990 (* l_0_9_56 l_0_9_56)))
 (let ((?x19988 (* l_0_9_55 l_0_9_55)))
 (let ((?x19986 (* l_0_9_54 l_0_9_54)))
 (let ((?x19984 (* l_0_9_53 l_0_9_53)))
 (let ((?x19982 (* l_0_9_52 l_0_9_52)))
 (let ((?x19980 (* l_0_9_51 l_0_9_51)))
 (let ((?x19978 (* l_0_9_50 l_0_9_50)))
 (let ((?x19976 (* l_0_9_28 l_0_9_28)))
 (let ((?x19974 (* l_0_9_27 l_0_9_27)))
 (let ((?x19972 (* l_0_9_26 l_0_9_26)))
 (let ((?x19961 (* l_0_9_25 l_0_9_25)))
 (let ((?x19958 (* l_0_9_24 l_0_9_24)))
 (let ((?x13684 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x19958) ?x19961)))
 (let ((?x13663 (- (- (- (- (+ (+ (+ ?x13684 ?x19972) ?x19974) ?x19976) ?x19978) ?x19980) ?x19982) ?x19984)))
 (= (- (- (- ?x13663 ?x19986) ?x19988) ?x19990) 0.0))))))))))))))))
(assert
 (= (- (* 1.0 (* l_0_9_57 l_0_9_57)) (* l_0_9_85 l_0_9_85)) 0.0))
(assert
 (let ((?x13744 (- (* (* 2.0 l_0_9_57) l_0_9_58) (* (* 2.0 l_0_9_85) l_0_9_86))))
 (= ?x13744 0.0)))
(assert
 (let ((?x5216 (- (* (* 2.0 l_0_9_57) l_0_9_60) (* (* 2.0 l_0_9_85) l_0_9_88))))
 (= ?x5216 0.0)))
(assert
 (let ((?x20238 (- (* (* 2.0 l_0_9_57) l_0_9_63) (* (* 2.0 l_0_9_85) l_0_9_91))))
 (= ?x20238 0.0)))
(assert
 (let ((?x20251 (- (* (* 2.0 l_0_9_57) l_0_9_67) (* (* 2.0 l_0_9_85) l_0_9_95))))
 (= ?x20251 0.0)))
(assert
 (let ((?x20265 (+ (* (* (- 2.0) l_0_9_100) l_0_9_85) (* (* 2.0 l_0_9_57) l_0_9_72))))
 (= ?x20265 0.0)))
(assert
 (let ((?x20276 (+ (* (* (- 2.0) l_0_9_106) l_0_9_85) (* (* 2.0 l_0_9_57) l_0_9_78))))
 (= ?x20276 0.0)))
(assert
 (let ((?x20291 (* l_0_9_87 l_0_9_87)))
 (let ((?x20289 (* l_0_9_86 l_0_9_86)))
 (let ((?x20288 (+ (* 1.0 (* l_0_9_58 l_0_9_58)) (* 1.0 (* l_0_9_59 l_0_9_59)))))
 (= (- (- ?x20288 ?x20289) ?x20291) 0.0)))))
(assert
 (let ((?x20304 (+ (* (* 2.0 l_0_9_58) l_0_9_60) (* (* 2.0 l_0_9_59) l_0_9_61))))
 (let ((?x20310 (- (- ?x20304 (* (* 2.0 l_0_9_86) l_0_9_88)) (* (* 2.0 l_0_9_87) l_0_9_89))))
 (= ?x20310 0.0))))
(assert
 (let ((?x20332 (+ (* (* 2.0 l_0_9_58) l_0_9_63) (* (* 2.0 l_0_9_59) l_0_9_64))))
 (let ((?x20336 (- (- ?x20332 (* (* 2.0 l_0_9_86) l_0_9_91)) (* (* 2.0 l_0_9_87) l_0_9_92))))
 (= ?x20336 0.0))))
(assert
 (let ((?x20358 (+ (* (* 2.0 l_0_9_58) l_0_9_67) (* (* 2.0 l_0_9_59) l_0_9_68))))
 (let ((?x20362 (- (- ?x20358 (* (* 2.0 l_0_9_86) l_0_9_95)) (* (* 2.0 l_0_9_87) l_0_9_96))))
 (= ?x20362 0.0))))
(assert
 (let ((?x20384 (- (* (* (- 2.0) l_0_9_100) l_0_9_86) (* (* 2.0 l_0_9_101) l_0_9_87))))
 (let ((?x20388 (+ (+ ?x20384 (* (* 2.0 l_0_9_58) l_0_9_72)) (* (* 2.0 l_0_9_59) l_0_9_73))))
 (= ?x20388 0.0))))
(assert
 (let ((?x20417 (* l_0_9_90 l_0_9_90)))
 (let ((?x20415 (* l_0_9_89 l_0_9_89)))
 (let ((?x20413 (* l_0_9_88 l_0_9_88)))
 (let ((?x20409 (+ (* 1.0 (* l_0_9_60 l_0_9_60)) (* 1.0 (* l_0_9_61 l_0_9_61)))))
 (let ((?x20418 (- (- (- (+ ?x20409 (* 1.0 (* l_0_9_62 l_0_9_62))) ?x20413) ?x20415) ?x20417)))
 (= ?x20418 0.0)))))))
(assert
 (let ((?x20433 (+ (* (* 2.0 l_0_9_60) l_0_9_63) (* (* 2.0 l_0_9_61) l_0_9_64))))
 (let ((?x20438 (- (+ ?x20433 (* (* 2.0 l_0_9_62) l_0_9_65)) (* (* 2.0 l_0_9_88) l_0_9_91))))
 (let ((?x20444 (- (- ?x20438 (* (* 2.0 l_0_9_89) l_0_9_92)) (* (* 2.0 l_0_9_90) l_0_9_93))))
 (= ?x20444 0.0)))))
(assert
 (let ((?x20474 (+ (* (* 2.0 l_0_9_60) l_0_9_67) (* (* 2.0 l_0_9_61) l_0_9_68))))
 (let ((?x20478 (- (+ ?x20474 (* (* 2.0 l_0_9_62) l_0_9_69)) (* (* 2.0 l_0_9_88) l_0_9_95))))
 (let ((?x20482 (- (- ?x20478 (* (* 2.0 l_0_9_89) l_0_9_96)) (* (* 2.0 l_0_9_90) l_0_9_97))))
 (= ?x20482 0.0)))))
(assert
 (let ((?x20512 (- (* (* (- 2.0) l_0_9_106) l_0_9_88) (* (* 2.0 l_0_9_107) l_0_9_89))))
 (let ((?x20517 (+ (- ?x20512 (* (* 2.0 l_0_9_108) l_0_9_90)) (* (* 2.0 l_0_9_60) l_0_9_78))))
 (let ((?x20521 (+ (+ ?x20517 (* (* 2.0 l_0_9_61) l_0_9_79)) (* (* 2.0 l_0_9_62) l_0_9_80))))
 (= ?x20521 0.0)))))
(assert
 (let ((?x20563 (* l_0_9_94 l_0_9_94)))
 (let ((?x20561 (* l_0_9_93 l_0_9_93)))
 (let ((?x20559 (* l_0_9_92 l_0_9_92)))
 (let ((?x20557 (* l_0_9_91 l_0_9_91)))
 (let ((?x20550 (+ (* 1.0 (* l_0_9_63 l_0_9_63)) (* 1.0 (* l_0_9_64 l_0_9_64)))))
 (let ((?x20556 (+ (+ ?x20550 (* 1.0 (* l_0_9_65 l_0_9_65))) (* 1.0 (* l_0_9_66 l_0_9_66)))))
 (= (- (- (- (- ?x20556 ?x20557) ?x20559) ?x20561) ?x20563) 0.0))))))))
(assert
 (let ((?x20582 (- (* (* (- 2.0) l_0_9_100) l_0_9_91) (* (* 2.0 l_0_9_101) l_0_9_92))))
 (let ((?x20587 (- (- ?x20582 (* (* 2.0 l_0_9_102) l_0_9_93)) (* (* 2.0 l_0_9_103) l_0_9_94))))
 (let ((?x20591 (+ (+ ?x20587 (* (* 2.0 l_0_9_63) l_0_9_72)) (* (* 2.0 l_0_9_64) l_0_9_73))))
 (let ((?x20595 (+ (+ ?x20591 (* (* 2.0 l_0_9_65) l_0_9_74)) (* (* 2.0 l_0_9_66) l_0_9_75))))
 (= ?x20595 0.0))))))
(assert
 (let ((?x20622 (- (* (* (- 2.0) l_0_9_106) l_0_9_91) (* (* 2.0 l_0_9_107) l_0_9_92))))
 (let ((?x20635 (- (- ?x20622 (* (* 2.0 l_0_9_108) l_0_9_93)) (* (* 2.0 l_0_9_109) l_0_9_94))))
 (let ((?x20639 (+ (+ ?x20635 (* (* 2.0 l_0_9_63) l_0_9_78)) (* (* 2.0 l_0_9_64) l_0_9_79))))
 (let ((?x20643 (+ (+ ?x20639 (* (* 2.0 l_0_9_65) l_0_9_80)) (* (* 2.0 l_0_9_66) l_0_9_81))))
 (= ?x20643 0.0))))))
(assert
 (let ((?x20698 (* l_0_9_99 l_0_9_99)))
 (let ((?x20696 (* l_0_9_98 l_0_9_98)))
 (let ((?x20694 (* l_0_9_97 l_0_9_97)))
 (let ((?x20692 (* l_0_9_96 l_0_9_96)))
 (let ((?x20690 (* l_0_9_95 l_0_9_95)))
 (let ((?x20673 (+ (* 1.0 (* l_0_9_67 l_0_9_67)) (* 1.0 (* l_0_9_68 l_0_9_68)))))
 (let ((?x20686 (+ (+ ?x20673 (* 1.0 (* l_0_9_69 l_0_9_69))) (* 1.0 (* l_0_9_70 l_0_9_70)))))
 (let ((?x20695 (- (- (- (+ ?x20686 (* 1.0 (* l_0_9_71 l_0_9_71))) ?x20690) ?x20692) ?x20694)))
 (= (- (- ?x20695 ?x20696) ?x20698) 0.0))))))))))
(assert
 (let ((?x20720 (- (* (* (- 2.0) l_0_9_100) l_0_9_95) (* (* 2.0 l_0_9_101) l_0_9_96))))
 (let ((?x20724 (- (- ?x20720 (* (* 2.0 l_0_9_102) l_0_9_97)) (* (* 2.0 l_0_9_103) l_0_9_98))))
 (let ((?x20730 (+ (- ?x20724 (* (* 2.0 l_0_9_104) l_0_9_99)) (* (* 2.0 l_0_9_67) l_0_9_72))))
 (let ((?x20736 (+ (+ ?x20730 (* (* 2.0 l_0_9_68) l_0_9_73)) (* (* 2.0 l_0_9_69) l_0_9_74))))
 (let ((?x20742 (+ (+ ?x20736 (* (* 2.0 l_0_9_70) l_0_9_75)) (* (* 2.0 l_0_9_71) l_0_9_76))))
 (= ?x20742 0.0)))))))
(assert
 (let ((?x20775 (- (* (* (- 2.0) l_0_9_106) l_0_9_95) (* (* 2.0 l_0_9_107) l_0_9_96))))
 (let ((?x20789 (- (- ?x20775 (* (* 2.0 l_0_9_108) l_0_9_97)) (* (* 2.0 l_0_9_109) l_0_9_98))))
 (let ((?x20794 (+ (- ?x20789 (* (* 2.0 l_0_9_110) l_0_9_99)) (* (* 2.0 l_0_9_67) l_0_9_78))))
 (let ((?x20798 (+ (+ ?x20794 (* (* 2.0 l_0_9_68) l_0_9_79)) (* (* 2.0 l_0_9_69) l_0_9_80))))
 (let ((?x20802 (+ (+ ?x20798 (* (* 2.0 l_0_9_70) l_0_9_81)) (* (* 2.0 l_0_9_71) l_0_9_82))))
 (= ?x20802 0.0)))))))
(assert
 (let ((?x20853 (* l_0_9_105 l_0_9_105)))
 (let ((?x20851 (* l_0_9_104 l_0_9_104)))
 (let ((?x20849 (* l_0_9_103 l_0_9_103)))
 (let ((?x20839 (* l_0_9_102 l_0_9_102)))
 (let ((?x20840 (- (- (* (- l_0_9_100) l_0_9_100) (* l_0_9_101 l_0_9_101)) ?x20839)))
 (let ((?x20857 (+ (- (- (- ?x20840 ?x20849) ?x20851) ?x20853) (* 1.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x20863 (+ (+ ?x20857 (* 1.0 (* l_0_9_73 l_0_9_73))) (* 1.0 (* l_0_9_74 l_0_9_74)))))
 (let ((?x20869 (+ (+ ?x20863 (* 1.0 (* l_0_9_75 l_0_9_75))) (* 1.0 (* l_0_9_76 l_0_9_76)))))
 (= (+ ?x20869 (* 1.0 (* l_0_9_77 l_0_9_77))) 0.0))))))))))
(assert
 (let ((?x20902 (- (* (* (- 2.0) l_0_9_100) l_0_9_106) (* (* 2.0 l_0_9_101) l_0_9_107))))
 (let ((?x20906 (- (- ?x20902 (* (* 2.0 l_0_9_102) l_0_9_108)) (* (* 2.0 l_0_9_103) l_0_9_109))))
 (let ((?x20911 (- (- ?x20906 (* (* 2.0 l_0_9_104) l_0_9_110)) (* (* 2.0 l_0_9_105) l_0_9_111))))
 (let ((?x20917 (+ (+ ?x20911 (* (* 2.0 l_0_9_72) l_0_9_78)) (* (* 2.0 l_0_9_73) l_0_9_79))))
 (let ((?x20923 (+ (+ ?x20917 (* (* 2.0 l_0_9_74) l_0_9_80)) (* (* 2.0 l_0_9_75) l_0_9_81))))
 (let ((?x20929 (+ (+ ?x20923 (* (* 2.0 l_0_9_76) l_0_9_82)) (* (* 2.0 l_0_9_77) l_0_9_83))))
 (= ?x20929 0.0))))))))
(assert
 (let ((?x20990 (* l_0_9_112 l_0_9_112)))
 (let ((?x20988 (* l_0_9_111 l_0_9_111)))
 (let ((?x20986 (* l_0_9_110 l_0_9_110)))
 (let ((?x20975 (* l_0_9_109 l_0_9_109)))
 (let ((?x20972 (* l_0_9_108 l_0_9_108)))
 (let ((?x20974 (- (- (* (- l_0_9_106) l_0_9_106) (* l_0_9_107 l_0_9_107)) ?x20972)))
 (let ((?x20994 (+ (- (- (- (- ?x20974 ?x20975) ?x20986) ?x20988) ?x20990) (* 1.0 (* l_0_9_78 l_0_9_78)))))
 (let ((?x21000 (+ (+ ?x20994 (* 1.0 (* l_0_9_79 l_0_9_79))) (* 1.0 (* l_0_9_80 l_0_9_80)))))
 (let ((?x21006 (+ (+ ?x21000 (* 1.0 (* l_0_9_81 l_0_9_81))) (* 1.0 (* l_0_9_82 l_0_9_82)))))
 (let ((?x21012 (+ (+ ?x21006 (* 1.0 (* l_0_9_83 l_0_9_83))) (* 1.0 (* l_0_9_84 l_0_9_84)))))
 (= ?x21012 0.0))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_28 0.0))
(assert
 (>= l_0_9_29 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_34 0.0))
(assert
 (>= l_0_9_38 0.0))
(assert
 (>= l_0_9_43 0.0))
(assert
 (>= l_0_9_49 0.0))
(assert
 (>= l_0_9_56 0.0))
(assert
 (>= l_0_9_57 0.0))
(assert
 (>= l_0_9_59 0.0))
(assert
 (>= l_0_9_62 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_71 0.0))
(assert
 (>= l_0_9_77 0.0))
(assert
 (>= l_0_9_84 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_87 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_94 0.0))
(assert
 (>= l_0_9_99 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_112 0.0))
(assert
 (let ((?x21085 (* l_0_10_29 l_0_10_29)))
 (let ((?x21078 (- (- (* l_0_10_1 l_0_10_1) (* (* 2.0 l_0_10_106) l_0_10_86)) (* (* 2.0 l_0_10_107) l_0_10_87))))
 (let ((?x21084 (- (- ?x21078 (* (* 2.0 l_0_10_114) l_0_10_134)) (* (* 2.0 l_0_10_115) l_0_10_135))))
 (let ((?x21092 (+ (+ (- ?x21084 ?x21085) (* (* 2.0 l_0_10_58) l_0_10_78)) (* (* 2.0 l_0_10_59) l_0_10_79))))
 (= (+ ?x21092 1.0) 0.0))))))
(assert
 (let ((?x21085 (* l_0_10_29 l_0_10_29)))
 (let ((?x21106 (- (- (* l_0_10_1 l_0_10_1) (* (* 2.0 l_0_10_119) l_0_10_123)) (* (* 2.0 l_0_10_120) l_0_10_124))))
 (let ((?x21112 (- (- ?x21106 (* (* 2.0 l_0_10_121) l_0_10_125)) (* (* 2.0 l_0_10_122) l_0_10_126))))
 (let ((?x21119 (+ (+ (- ?x21112 ?x21085) (* (* 2.0 l_0_10_63) l_0_10_67)) (* (* 2.0 l_0_10_64) l_0_10_68))))
 (let ((?x21125 (+ (+ ?x21119 (* (* 2.0 l_0_10_65) l_0_10_69)) (* (* 2.0 l_0_10_66) l_0_10_70))))
 (let ((?x21131 (- (- ?x21125 (* (* 2.0 l_0_10_91) l_0_10_95)) (* (* 2.0 l_0_10_92) l_0_10_96))))
 (let ((?x21137 (- (- ?x21131 (* (* 2.0 l_0_10_93) l_0_10_97)) (* (* 2.0 l_0_10_94) l_0_10_98))))
 (= (+ ?x21137 1.0) 0.0)))))))))
(assert
 (let ((?x21085 (* l_0_10_29 l_0_10_29)))
 (let ((?x21168 (- (* (- l_0_10_1) l_0_10_1) (* (* 2.0 l_0_10_100) l_0_10_88))))
 (let ((?x21174 (- (- ?x21168 (* (* 2.0 l_0_10_101) l_0_10_89)) (* (* 2.0 l_0_10_102) l_0_10_90))))
 (let ((?x21180 (- (- ?x21174 (* (* 2.0 l_0_10_116) l_0_10_128)) (* (* 2.0 l_0_10_117) l_0_10_129))))
 (let ((?x21187 (+ (+ (- ?x21180 (* (* 2.0 l_0_10_118) l_0_10_130)) ?x21085) (* (* 2.0 l_0_10_60) l_0_10_72))))
 (let ((?x21193 (+ (+ ?x21187 (* (* 2.0 l_0_10_61) l_0_10_73)) (* (* 2.0 l_0_10_62) l_0_10_74))))
 (= (- ?x21193 1.0) 0.0))))))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21212 (* ?x21211 l_0_10_30)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_2) ?x21212) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21218 (* ?x21211 l_0_10_32)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_4) ?x21218) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21230 (* ?x21211 l_0_10_35)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x21230) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21236 (* ?x21211 l_0_10_39)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) ?x21236) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21246 (* ?x21211 l_0_10_44)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_16) ?x21246) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21256 (* ?x21211 l_0_10_50)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_22) ?x21256) 0.0))))
(assert
 (let ((?x21275 (* l_0_10_31 l_0_10_31)))
 (let ((?x21273 (* l_0_10_30 l_0_10_30)))
 (let ((?x21276 (+ (+ (- (* (- l_0_10_2) l_0_10_2) (* l_0_10_3 l_0_10_3)) ?x21273) ?x21275)))
 (= ?x21276 0.0)))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21297 (* ?x21296 l_0_10_33)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21294 (* ?x21293 l_0_10_32)))
 (let ((?x21290 (* 2.0 l_0_10_3)))
 (let ((?x21291 (* ?x21290 l_0_10_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_2) l_0_10_4) ?x21291) ?x21294) ?x21297) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21320 (* ?x21296 l_0_10_36)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21318 (* ?x21293 l_0_10_35)))
 (let ((?x21290 (* 2.0 l_0_10_3)))
 (let ((?x21311 (* ?x21290 l_0_10_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_2) l_0_10_7) ?x21311) ?x21318) ?x21320) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21339 (* ?x21296 l_0_10_40)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21337 (* ?x21293 l_0_10_39)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21335 (* ?x21329 l_0_10_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x21335) ?x21337) ?x21339) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21360 (* ?x21296 l_0_10_45)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21358 (* ?x21293 l_0_10_44)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21356 (* ?x21355 l_0_10_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_16) l_0_10_2) ?x21356) ?x21358) ?x21360) 0.0))))))))
(assert
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21402 (* ?x21401 l_0_10_46)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21399 (* ?x21398 l_0_10_45)))
 (let ((?x21395 (* 2.0 l_0_10_32)))
 (let ((?x21396 (* ?x21395 l_0_10_44)))
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21393 (* ?x21296 l_0_10_51)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21391 (* ?x21293 l_0_10_50)))
 (let ((?x21388 (* 2.0 l_0_10_23)))
 (let ((?x21389 (* ?x21388 l_0_10_3)))
 (let ((?x21385 (* 2.0 l_0_10_2)))
 (let ((?x21386 (* ?x21385 l_0_10_22)))
 (let ((?x21382 (* 2.0 l_0_10_18)))
 (let ((?x21383 (* ?x21382 l_0_10_6)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21375 (* ?x21355 l_0_10_5)))
 (let ((?x21372 (* 2.0 l_0_10_16)))
 (let ((?x21374 (* ?x21372 l_0_10_4)))
 (let ((?x21397 (- (+ (+ (- (- (+ (+ ?x21374 ?x21375) ?x21383) ?x21386) ?x21389) ?x21391) ?x21393) ?x21396)))
 (= (- (- ?x21397 ?x21399) ?x21402) 0.0)))))))))))))))))))))))
(assert
 (let ((?x21427 (* l_0_10_6 l_0_10_6)))
 (let ((?x21425 (* l_0_10_5 l_0_10_5)))
 (let ((?x21423 (* l_0_10_4 l_0_10_4)))
 (let ((?x14240 (* l_0_10_34 l_0_10_34)))
 (let ((?x21424 (- (+ (+ (* l_0_10_32 l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x14240) ?x21423)))
 (= (- (- ?x21424 ?x21425) ?x21427) 0.0)))))))
(assert
 (let ((?x21450 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x21447 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x21444 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21441 (* ?x21401 l_0_10_37)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21439 (* ?x21398 l_0_10_36)))
 (let ((?x21448 (- (- (+ (+ (* (* 2.0 l_0_10_32) l_0_10_35) ?x21439) ?x21441) ?x21444) ?x21447)))
 (= (- ?x21448 ?x21450) 0.0))))))))))
(assert
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21480 (* ?x21401 l_0_10_41)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21478 (* ?x21398 l_0_10_40)))
 (let ((?x21395 (* 2.0 l_0_10_32)))
 (let ((?x21476 (* ?x21395 l_0_10_39)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21474 (* ?x21473 l_0_10_6)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21471 (* ?x21329 l_0_10_5)))
 (let ((?x21479 (+ (+ (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x21471) ?x21474) ?x21476) ?x21478)))
 (= (+ ?x21479 ?x21480) 0.0)))))))))))))
(assert
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21402 (* ?x21401 l_0_10_46)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21399 (* ?x21398 l_0_10_45)))
 (let ((?x21395 (* 2.0 l_0_10_32)))
 (let ((?x21396 (* ?x21395 l_0_10_44)))
 (let ((?x21382 (* 2.0 l_0_10_18)))
 (let ((?x21383 (* ?x21382 l_0_10_6)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21375 (* ?x21355 l_0_10_5)))
 (let ((?x21493 (+ (+ (- (- (* (* (- 2.0) l_0_10_16) l_0_10_4) ?x21375) ?x21383) ?x21396) ?x21399)))
 (= (+ ?x21493 ?x21402) 0.0)))))))))))))
(assert
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21509 (* ?x21401 l_0_10_52)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21507 (* ?x21398 l_0_10_51)))
 (let ((?x21395 (* 2.0 l_0_10_32)))
 (let ((?x21505 (* ?x21395 l_0_10_50)))
 (let ((?x21502 (* 2.0 l_0_10_24)))
 (let ((?x21503 (* ?x21502 l_0_10_6)))
 (let ((?x21388 (* 2.0 l_0_10_23)))
 (let ((?x21500 (* ?x21388 l_0_10_5)))
 (let ((?x21508 (+ (+ (- (- (* (* (- 2.0) l_0_10_22) l_0_10_4) ?x21500) ?x21503) ?x21505) ?x21507)))
 (= (+ ?x21508 ?x21509) 0.0)))))))))))))
(assert
 (let ((?x21543 (* l_0_10_9 l_0_10_9)))
 (let ((?x21541 (* l_0_10_8 l_0_10_8)))
 (let ((?x21539 (* l_0_10_7 l_0_10_7)))
 (let ((?x21537 (* l_0_10_38 l_0_10_38)))
 (let ((?x21535 (* l_0_10_37 l_0_10_37)))
 (let ((?x21533 (* l_0_10_36 l_0_10_36)))
 (let ((?x21534 (+ (+ (* (- l_0_10_10) l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x21533)))
 (= (- (- (- (+ (+ ?x21534 ?x21535) ?x21537) ?x21539) ?x21541) ?x21543) 0.0)))))))))
(assert
 (let ((?x21573 (* 2.0 l_0_10_38)))
 (let ((?x21574 (* ?x21573 l_0_10_42)))
 (let ((?x21570 (* 2.0 l_0_10_37)))
 (let ((?x21571 (* ?x21570 l_0_10_41)))
 (let ((?x21567 (* 2.0 l_0_10_36)))
 (let ((?x21568 (* ?x21567 l_0_10_40)))
 (let ((?x21564 (* 2.0 l_0_10_35)))
 (let ((?x21565 (* ?x21564 l_0_10_39)))
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21402 (* ?x21401 l_0_10_46)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21399 (* ?x21398 l_0_10_45)))
 (let ((?x21395 (* 2.0 l_0_10_32)))
 (let ((?x21396 (* ?x21395 l_0_10_44)))
 (let ((?x21382 (* 2.0 l_0_10_18)))
 (let ((?x21383 (* ?x21382 l_0_10_6)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21375 (* ?x21355 l_0_10_5)))
 (let ((?x21372 (* 2.0 l_0_10_16)))
 (let ((?x21374 (* ?x21372 l_0_10_4)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21556 (* ?x21473 l_0_10_9)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x14392 (* ?x21329 l_0_10_8)))
 (let ((?x5697 (* 2.0 l_0_10_11)))
 (let ((?x5693 (* ?x5697 l_0_10_7)))
 (let ((?x21558 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x5693) ?x14392) ?x21556) ?x21374)))
 (let ((?x21569 (+ (+ (- (- (- (+ (+ ?x21558 ?x21375) ?x21383) ?x21396) ?x21399) ?x21402) ?x21565) ?x21568)))
 (= (+ (+ ?x21569 ?x21571) ?x21574) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x21573 (* 2.0 l_0_10_38)))
 (let ((?x21614 (* ?x21573 l_0_10_47)))
 (let ((?x21570 (* 2.0 l_0_10_37)))
 (let ((?x21612 (* ?x21570 l_0_10_46)))
 (let ((?x21567 (* 2.0 l_0_10_36)))
 (let ((?x21610 (* ?x21567 l_0_10_45)))
 (let ((?x21564 (* 2.0 l_0_10_35)))
 (let ((?x21608 (* ?x21564 l_0_10_44)))
 (let ((?x21382 (* 2.0 l_0_10_18)))
 (let ((?x21606 (* ?x21382 l_0_10_9)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21597 (* ?x21355 l_0_10_8)))
 (let ((?x21372 (* 2.0 l_0_10_16)))
 (let ((?x21593 (* ?x21372 l_0_10_7)))
 (let ((?x21609 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_19) ?x21593) ?x21597) ?x21606) ?x21608)))
 (= (+ (+ (+ ?x21609 ?x21610) ?x21612) ?x21614) 0.0)))))))))))))))))
(assert
 (let ((?x21573 (* 2.0 l_0_10_38)))
 (let ((?x21638 (* ?x21573 l_0_10_53)))
 (let ((?x21570 (* 2.0 l_0_10_37)))
 (let ((?x21636 (* ?x21570 l_0_10_52)))
 (let ((?x21567 (* 2.0 l_0_10_36)))
 (let ((?x21634 (* ?x21567 l_0_10_51)))
 (let ((?x21564 (* 2.0 l_0_10_35)))
 (let ((?x21632 (* ?x21564 l_0_10_50)))
 (let ((?x21502 (* 2.0 l_0_10_24)))
 (let ((?x21630 (* ?x21502 l_0_10_9)))
 (let ((?x21388 (* 2.0 l_0_10_23)))
 (let ((?x21628 (* ?x21388 l_0_10_8)))
 (let ((?x21625 (* 2.0 l_0_10_22)))
 (let ((?x21626 (* ?x21625 l_0_10_7)))
 (let ((?x21633 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_25) ?x21626) ?x21628) ?x21630) ?x21632)))
 (= (+ (+ (+ ?x21633 ?x21634) ?x21636) ?x21638) 0.0)))))))))))))))))
(assert
 (let ((?x21681 (* l_0_10_43 l_0_10_43)))
 (let ((?x21679 (* l_0_10_42 l_0_10_42)))
 (let ((?x21677 (* l_0_10_41 l_0_10_41)))
 (let ((?x21675 (* l_0_10_40 l_0_10_40)))
 (let ((?x21673 (* l_0_10_39 l_0_10_39)))
 (let ((?x21671 (* l_0_10_15 l_0_10_15)))
 (let ((?x21669 (* l_0_10_14 l_0_10_14)))
 (let ((?x21660 (* l_0_10_13 l_0_10_13)))
 (let ((?x21668 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x21660)))
 (let ((?x21682 (+ (+ (+ (+ (+ (- (- ?x21668 ?x21669) ?x21671) ?x21673) ?x21675) ?x21677) ?x21679) ?x21681)))
 (= ?x21682 0.0))))))))))))
(assert
 (let ((?x21726 (* 2.0 l_0_10_43)))
 (let ((?x21727 (* ?x21726 l_0_10_48)))
 (let ((?x21723 (* 2.0 l_0_10_42)))
 (let ((?x21724 (* ?x21723 l_0_10_47)))
 (let ((?x21720 (* 2.0 l_0_10_41)))
 (let ((?x21721 (* ?x21720 l_0_10_46)))
 (let ((?x21717 (* 2.0 l_0_10_40)))
 (let ((?x21718 (* ?x21717 l_0_10_45)))
 (let ((?x21714 (* 2.0 l_0_10_39)))
 (let ((?x21715 (* ?x21714 l_0_10_44)))
 (let ((?x21711 (* 2.0 l_0_10_15)))
 (let ((?x21712 (* ?x21711 l_0_10_20)))
 (let ((?x21708 (* 2.0 l_0_10_14)))
 (let ((?x21709 (* ?x21708 l_0_10_19)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21706 (* ?x21473 l_0_10_18)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21704 (* ?x21329 l_0_10_17)))
 (let ((?x21713 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_16) ?x21704) ?x21706) ?x21709) ?x21712)))
 (= (+ (+ (+ (+ (+ ?x21713 ?x21715) ?x21718) ?x21721) ?x21724) ?x21727) 0.0)))))))))))))))))))))
(assert
 (let ((?x21726 (* 2.0 l_0_10_43)))
 (let ((?x21766 (* ?x21726 l_0_10_54)))
 (let ((?x21723 (* 2.0 l_0_10_42)))
 (let ((?x21764 (* ?x21723 l_0_10_53)))
 (let ((?x21720 (* 2.0 l_0_10_41)))
 (let ((?x21762 (* ?x21720 l_0_10_52)))
 (let ((?x21717 (* 2.0 l_0_10_40)))
 (let ((?x21760 (* ?x21717 l_0_10_51)))
 (let ((?x21714 (* 2.0 l_0_10_39)))
 (let ((?x21758 (* ?x21714 l_0_10_50)))
 (let ((?x21711 (* 2.0 l_0_10_15)))
 (let ((?x21756 (* ?x21711 l_0_10_26)))
 (let ((?x21708 (* 2.0 l_0_10_14)))
 (let ((?x21754 (* ?x21708 l_0_10_25)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21752 (* ?x21473 l_0_10_24)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21750 (* ?x21329 l_0_10_23)))
 (let ((?x21757 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_22) ?x21750) ?x21752) ?x21754) ?x21756)))
 (= (+ (+ (+ (+ (+ ?x21757 ?x21758) ?x21760) ?x21762) ?x21764) ?x21766) 0.0)))))))))))))))))))))
(assert
 (let ((?x21815 (* l_0_10_49 l_0_10_49)))
 (let ((?x21813 (* l_0_10_48 l_0_10_48)))
 (let ((?x21811 (* l_0_10_47 l_0_10_47)))
 (let ((?x21809 (* l_0_10_46 l_0_10_46)))
 (let ((?x21807 (* l_0_10_45 l_0_10_45)))
 (let ((?x21805 (* l_0_10_44 l_0_10_44)))
 (let ((?x21803 (* l_0_10_21 l_0_10_21)))
 (let ((?x21801 (* l_0_10_20 l_0_10_20)))
 (let ((?x21799 (* l_0_10_19 l_0_10_19)))
 (let ((?x21789 (* l_0_10_18 l_0_10_18)))
 (let ((?x21790 (- (- (* (- l_0_10_16) l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x21789)))
 (let ((?x21812 (+ (+ (+ (+ (- (- (- ?x21790 ?x21799) ?x21801) ?x21803) ?x21805) ?x21807) ?x21809) ?x21811)))
 (= (+ (+ ?x21812 ?x21813) ?x21815) 0.0))))))))))))))
(assert
 (let ((?x21868 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x21865 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x21862 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x21859 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x21856 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x21853 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x21850 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x21847 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x21844 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x21382 (* 2.0 l_0_10_18)))
 (let ((?x21841 (* ?x21382 l_0_10_24)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21839 (* ?x21355 l_0_10_23)))
 (let ((?x21848 (- (- (- (- (* (* (- 2.0) l_0_10_16) l_0_10_22) ?x21839) ?x21841) ?x21844) ?x21847)))
 (let ((?x21869 (+ (+ (+ (+ (+ (+ (- ?x21848 ?x21850) ?x21853) ?x21856) ?x21859) ?x21862) ?x21865) ?x21868)))
 (= ?x21869 0.0)))))))))))))))))
(assert
 (let ((?x21922 (* l_0_10_56 l_0_10_56)))
 (let ((?x21920 (* l_0_10_55 l_0_10_55)))
 (let ((?x21918 (* l_0_10_54 l_0_10_54)))
 (let ((?x21916 (* l_0_10_53 l_0_10_53)))
 (let ((?x21914 (* l_0_10_52 l_0_10_52)))
 (let ((?x21912 (* l_0_10_51 l_0_10_51)))
 (let ((?x21910 (* l_0_10_50 l_0_10_50)))
 (let ((?x21908 (* l_0_10_28 l_0_10_28)))
 (let ((?x21906 (* l_0_10_27 l_0_10_27)))
 (let ((?x21904 (* l_0_10_26 l_0_10_26)))
 (let ((?x21893 (* l_0_10_25 l_0_10_25)))
 (let ((?x21890 (* l_0_10_24 l_0_10_24)))
 (let ((?x21892 (- (- (* (- l_0_10_22) l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x21890)))
 (let ((?x21915 (+ (+ (+ (- (- (- (- ?x21892 ?x21893) ?x21904) ?x21906) ?x21908) ?x21910) ?x21912) ?x21914)))
 (= (+ (+ (+ (+ ?x21915 ?x21916) ?x21918) ?x21920) ?x21922) 0.0))))))))))))))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21212 (* ?x21211 l_0_10_30)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_2) ?x21212) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21218 (* ?x21211 l_0_10_32)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_4) ?x21218) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21230 (* ?x21211 l_0_10_35)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_7) ?x21230) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21236 (* ?x21211 l_0_10_39)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_11) ?x21236) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21246 (* ?x21211 l_0_10_44)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_16) ?x21246) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21256 (* ?x21211 l_0_10_50)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_22) ?x21256) 0.0))))
(assert
 (let ((?x21275 (* l_0_10_31 l_0_10_31)))
 (let ((?x21273 (* l_0_10_30 l_0_10_30)))
 (let ((?x14845 (- (- (+ (* l_0_10_2 l_0_10_2) (* l_0_10_3 l_0_10_3)) ?x21273) ?x21275)))
 (= ?x14845 0.0)))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21297 (* ?x21296 l_0_10_33)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21294 (* ?x21293 l_0_10_32)))
 (let ((?x21290 (* 2.0 l_0_10_3)))
 (let ((?x21291 (* ?x21290 l_0_10_5)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_4) ?x21291) ?x21294) ?x21297) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21320 (* ?x21296 l_0_10_36)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21318 (* ?x21293 l_0_10_35)))
 (let ((?x21290 (* 2.0 l_0_10_3)))
 (let ((?x21311 (* ?x21290 l_0_10_8)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_7) ?x21311) ?x21318) ?x21320) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21339 (* ?x21296 l_0_10_40)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21337 (* ?x21293 l_0_10_39)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21335 (* ?x21329 l_0_10_3)))
 (= (- (- (+ (* (* 2.0 l_0_10_11) l_0_10_2) ?x21335) ?x21337) ?x21339) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21360 (* ?x21296 l_0_10_45)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21358 (* ?x21293 l_0_10_44)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21356 (* ?x21355 l_0_10_3)))
 (= (- (- (+ (* (* 2.0 l_0_10_16) l_0_10_2) ?x21356) ?x21358) ?x21360) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21393 (* ?x21296 l_0_10_51)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21391 (* ?x21293 l_0_10_50)))
 (let ((?x21388 (* 2.0 l_0_10_23)))
 (let ((?x21389 (* ?x21388 l_0_10_3)))
 (let ((?x21385 (* 2.0 l_0_10_2)))
 (let ((?x21386 (* ?x21385 l_0_10_22)))
 (= (- (- (+ ?x21386 ?x21389) ?x21391) ?x21393) 0.0))))))))))
(assert
 (let ((?x21427 (* l_0_10_6 l_0_10_6)))
 (let ((?x21425 (* l_0_10_5 l_0_10_5)))
 (let ((?x21423 (* l_0_10_4 l_0_10_4)))
 (let ((?x14240 (* l_0_10_34 l_0_10_34)))
 (let ((?x15006 (- (- (* (- l_0_10_32) l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x14240)))
 (= (+ (+ (+ ?x15006 ?x21423) ?x21425) ?x21427) 0.0)))))))
(assert
 (let ((?x21450 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x21447 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x21444 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21441 (* ?x21401 l_0_10_37)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21439 (* ?x21398 l_0_10_36)))
 (let ((?x21959 (+ (+ (- (- (* (* (- 2.0) l_0_10_32) l_0_10_35) ?x21439) ?x21441) ?x21444) ?x21447)))
 (= (+ ?x21959 ?x21450) 0.0))))))))))
(assert
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21480 (* ?x21401 l_0_10_41)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21478 (* ?x21398 l_0_10_40)))
 (let ((?x21395 (* 2.0 l_0_10_32)))
 (let ((?x21476 (* ?x21395 l_0_10_39)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21474 (* ?x21473 l_0_10_6)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21471 (* ?x21329 l_0_10_5)))
 (let ((?x15000 (- (- (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x21471) ?x21474) ?x21476) ?x21478)))
 (= (- ?x15000 ?x21480) 0.0)))))))))))))
(assert
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21509 (* ?x21401 l_0_10_52)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21507 (* ?x21398 l_0_10_51)))
 (let ((?x21395 (* 2.0 l_0_10_32)))
 (let ((?x21505 (* ?x21395 l_0_10_50)))
 (let ((?x21502 (* 2.0 l_0_10_24)))
 (let ((?x21503 (* ?x21502 l_0_10_6)))
 (let ((?x21388 (* 2.0 l_0_10_23)))
 (let ((?x21500 (* ?x21388 l_0_10_5)))
 (let ((?x6341 (- (- (+ (+ (* (* 2.0 l_0_10_22) l_0_10_4) ?x21500) ?x21503) ?x21505) ?x21507)))
 (= (- ?x6341 ?x21509) 0.0)))))))))))))
(assert
 (let ((?x21543 (* l_0_10_9 l_0_10_9)))
 (let ((?x21541 (* l_0_10_8 l_0_10_8)))
 (let ((?x21539 (* l_0_10_7 l_0_10_7)))
 (let ((?x21537 (* l_0_10_38 l_0_10_38)))
 (let ((?x21535 (* l_0_10_37 l_0_10_37)))
 (let ((?x21533 (* l_0_10_36 l_0_10_36)))
 (let ((?x15073 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x21533) ?x21535)))
 (= (+ (+ (+ (- ?x15073 ?x21537) ?x21539) ?x21541) ?x21543) 0.0)))))))))
(assert
 (let ((?x21573 (* 2.0 l_0_10_38)))
 (let ((?x21574 (* ?x21573 l_0_10_42)))
 (let ((?x21570 (* 2.0 l_0_10_37)))
 (let ((?x21571 (* ?x21570 l_0_10_41)))
 (let ((?x21567 (* 2.0 l_0_10_36)))
 (let ((?x21568 (* ?x21567 l_0_10_40)))
 (let ((?x21564 (* 2.0 l_0_10_35)))
 (let ((?x21565 (* ?x21564 l_0_10_39)))
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21393 (* ?x21296 l_0_10_51)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21391 (* ?x21293 l_0_10_50)))
 (let ((?x21388 (* 2.0 l_0_10_23)))
 (let ((?x21389 (* ?x21388 l_0_10_3)))
 (let ((?x21385 (* 2.0 l_0_10_2)))
 (let ((?x21386 (* ?x21385 l_0_10_22)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21556 (* ?x21473 l_0_10_9)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x14392 (* ?x21329 l_0_10_8)))
 (let ((?x5697 (* 2.0 l_0_10_11)))
 (let ((?x5693 (* ?x5697 l_0_10_7)))
 (let ((?x15148 (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x5693) ?x14392) ?x21556)))
 (let ((?x6325 (- (- (- (- (- (+ (+ ?x15148 ?x21386) ?x21389) ?x21391) ?x21393) ?x21565) ?x21568) ?x21571)))
 (= (- ?x6325 ?x21574) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x21573 (* 2.0 l_0_10_38)))
 (let ((?x21614 (* ?x21573 l_0_10_47)))
 (let ((?x21570 (* 2.0 l_0_10_37)))
 (let ((?x21612 (* ?x21570 l_0_10_46)))
 (let ((?x21567 (* 2.0 l_0_10_36)))
 (let ((?x21610 (* ?x21567 l_0_10_45)))
 (let ((?x21564 (* 2.0 l_0_10_35)))
 (let ((?x21608 (* ?x21564 l_0_10_44)))
 (let ((?x21382 (* 2.0 l_0_10_18)))
 (let ((?x21606 (* ?x21382 l_0_10_9)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21597 (* ?x21355 l_0_10_8)))
 (let ((?x21372 (* 2.0 l_0_10_16)))
 (let ((?x21593 (* ?x21372 l_0_10_7)))
 (let ((?x15197 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_19) ?x21593) ?x21597) ?x21606) ?x21608)))
 (= (- (- (- ?x15197 ?x21610) ?x21612) ?x21614) 0.0)))))))))))))))))
(assert
 (let ((?x21573 (* 2.0 l_0_10_38)))
 (let ((?x21638 (* ?x21573 l_0_10_53)))
 (let ((?x21570 (* 2.0 l_0_10_37)))
 (let ((?x21636 (* ?x21570 l_0_10_52)))
 (let ((?x21567 (* 2.0 l_0_10_36)))
 (let ((?x21634 (* ?x21567 l_0_10_51)))
 (let ((?x21564 (* 2.0 l_0_10_35)))
 (let ((?x21632 (* ?x21564 l_0_10_50)))
 (let ((?x21502 (* 2.0 l_0_10_24)))
 (let ((?x21630 (* ?x21502 l_0_10_9)))
 (let ((?x21388 (* 2.0 l_0_10_23)))
 (let ((?x21628 (* ?x21388 l_0_10_8)))
 (let ((?x21625 (* 2.0 l_0_10_22)))
 (let ((?x21626 (* ?x21625 l_0_10_7)))
 (let ((?x6519 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_25) ?x21626) ?x21628) ?x21630) ?x21632)))
 (= (- (- (- ?x6519 ?x21634) ?x21636) ?x21638) 0.0)))))))))))))))))
(assert
 (let ((?x21681 (* l_0_10_43 l_0_10_43)))
 (let ((?x21679 (* l_0_10_42 l_0_10_42)))
 (let ((?x21677 (* l_0_10_41 l_0_10_41)))
 (let ((?x21675 (* l_0_10_40 l_0_10_40)))
 (let ((?x21673 (* l_0_10_39 l_0_10_39)))
 (let ((?x21671 (* l_0_10_15 l_0_10_15)))
 (let ((?x21669 (* l_0_10_14 l_0_10_14)))
 (let ((?x21660 (* l_0_10_13 l_0_10_13)))
 (let ((?x15409 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x21660) ?x21669)))
 (= (- (- (- (- (- (+ ?x15409 ?x21671) ?x21673) ?x21675) ?x21677) ?x21679) ?x21681) 0.0)))))))))))
(assert
 (let ((?x21726 (* 2.0 l_0_10_43)))
 (let ((?x21727 (* ?x21726 l_0_10_48)))
 (let ((?x21723 (* 2.0 l_0_10_42)))
 (let ((?x21724 (* ?x21723 l_0_10_47)))
 (let ((?x21720 (* 2.0 l_0_10_41)))
 (let ((?x21721 (* ?x21720 l_0_10_46)))
 (let ((?x21717 (* 2.0 l_0_10_40)))
 (let ((?x21718 (* ?x21717 l_0_10_45)))
 (let ((?x21714 (* 2.0 l_0_10_39)))
 (let ((?x21715 (* ?x21714 l_0_10_44)))
 (let ((?x21711 (* 2.0 l_0_10_15)))
 (let ((?x21712 (* ?x21711 l_0_10_20)))
 (let ((?x21708 (* 2.0 l_0_10_14)))
 (let ((?x21709 (* ?x21708 l_0_10_19)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21706 (* ?x21473 l_0_10_18)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21704 (* ?x21329 l_0_10_17)))
 (let ((?x6496 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_16) ?x21704) ?x21706) ?x21709) ?x21712)))
 (= (- (- (- (- (- ?x6496 ?x21715) ?x21718) ?x21721) ?x21724) ?x21727) 0.0)))))))))))))))))))))
(assert
 (let ((?x21726 (* 2.0 l_0_10_43)))
 (let ((?x21766 (* ?x21726 l_0_10_54)))
 (let ((?x21723 (* 2.0 l_0_10_42)))
 (let ((?x21764 (* ?x21723 l_0_10_53)))
 (let ((?x21720 (* 2.0 l_0_10_41)))
 (let ((?x21762 (* ?x21720 l_0_10_52)))
 (let ((?x21717 (* 2.0 l_0_10_40)))
 (let ((?x21760 (* ?x21717 l_0_10_51)))
 (let ((?x21714 (* 2.0 l_0_10_39)))
 (let ((?x21758 (* ?x21714 l_0_10_50)))
 (let ((?x21711 (* 2.0 l_0_10_15)))
 (let ((?x21756 (* ?x21711 l_0_10_26)))
 (let ((?x21708 (* 2.0 l_0_10_14)))
 (let ((?x21754 (* ?x21708 l_0_10_25)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21752 (* ?x21473 l_0_10_24)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21750 (* ?x21329 l_0_10_23)))
 (let ((?x21980 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_22) ?x21750) ?x21752) ?x21754) ?x21756)))
 (= (- (- (- (- (- ?x21980 ?x21758) ?x21760) ?x21762) ?x21764) ?x21766) 0.0)))))))))))))))))))))
(assert
 (let ((?x21815 (* l_0_10_49 l_0_10_49)))
 (let ((?x21813 (* l_0_10_48 l_0_10_48)))
 (let ((?x21811 (* l_0_10_47 l_0_10_47)))
 (let ((?x21809 (* l_0_10_46 l_0_10_46)))
 (let ((?x21807 (* l_0_10_45 l_0_10_45)))
 (let ((?x21805 (* l_0_10_44 l_0_10_44)))
 (let ((?x21803 (* l_0_10_21 l_0_10_21)))
 (let ((?x21801 (* l_0_10_20 l_0_10_20)))
 (let ((?x21799 (* l_0_10_19 l_0_10_19)))
 (let ((?x21789 (* l_0_10_18 l_0_10_18)))
 (let ((?x15594 (+ (+ (+ (* l_0_10_16 l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x21789) ?x21799)))
 (let ((?x15608 (- (- (- (- (- (+ (+ ?x15594 ?x21801) ?x21803) ?x21805) ?x21807) ?x21809) ?x21811) ?x21813)))
 (= (- ?x15608 ?x21815) 0.0))))))))))))))
(assert
 (let ((?x21868 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x21865 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x21862 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x21859 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x21856 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x21853 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x21850 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x21847 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x21844 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x21382 (* 2.0 l_0_10_18)))
 (let ((?x21841 (* ?x21382 l_0_10_24)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21839 (* ?x21355 l_0_10_23)))
 (let ((?x15702 (+ (+ (+ (+ (* (* 2.0 l_0_10_16) l_0_10_22) ?x21839) ?x21841) ?x21844) ?x21847)))
 (let ((?x6800 (- (- (- (- (- (- (+ ?x15702 ?x21850) ?x21853) ?x21856) ?x21859) ?x21862) ?x21865) ?x21868)))
 (= ?x6800 0.0)))))))))))))))))
(assert
 (let ((?x21922 (* l_0_10_56 l_0_10_56)))
 (let ((?x21920 (* l_0_10_55 l_0_10_55)))
 (let ((?x21918 (* l_0_10_54 l_0_10_54)))
 (let ((?x21916 (* l_0_10_53 l_0_10_53)))
 (let ((?x21914 (* l_0_10_52 l_0_10_52)))
 (let ((?x21912 (* l_0_10_51 l_0_10_51)))
 (let ((?x21910 (* l_0_10_50 l_0_10_50)))
 (let ((?x21908 (* l_0_10_28 l_0_10_28)))
 (let ((?x21906 (* l_0_10_27 l_0_10_27)))
 (let ((?x21904 (* l_0_10_26 l_0_10_26)))
 (let ((?x21893 (* l_0_10_25 l_0_10_25)))
 (let ((?x21890 (* l_0_10_24 l_0_10_24)))
 (let ((?x6966 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x21890) ?x21893)))
 (let ((?x15659 (- (- (- (- (+ (+ (+ ?x6966 ?x21904) ?x21906) ?x21908) ?x21910) ?x21912) ?x21914) ?x21916)))
 (= (- (- (- ?x15659 ?x21918) ?x21920) ?x21922) 0.0))))))))))))))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21212 (* ?x21211 l_0_10_30)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_2) ?x21212) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21218 (* ?x21211 l_0_10_32)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_4) ?x21218) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21230 (* ?x21211 l_0_10_35)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_7) ?x21230) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21236 (* ?x21211 l_0_10_39)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_11) ?x21236) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21246 (* ?x21211 l_0_10_44)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_16) ?x21246) 0.0))))
(assert
 (let ((?x21211 (* 2.0 l_0_10_29)))
 (let ((?x21256 (* ?x21211 l_0_10_50)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_22) ?x21256) 0.0))))
(assert
 (let ((?x21275 (* l_0_10_31 l_0_10_31)))
 (let ((?x21273 (* l_0_10_30 l_0_10_30)))
 (let ((?x14845 (- (- (+ (* l_0_10_2 l_0_10_2) (* l_0_10_3 l_0_10_3)) ?x21273) ?x21275)))
 (= ?x14845 0.0)))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21297 (* ?x21296 l_0_10_33)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21294 (* ?x21293 l_0_10_32)))
 (let ((?x21290 (* 2.0 l_0_10_3)))
 (let ((?x21291 (* ?x21290 l_0_10_5)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_4) ?x21291) ?x21294) ?x21297) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21320 (* ?x21296 l_0_10_36)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21318 (* ?x21293 l_0_10_35)))
 (let ((?x21290 (* 2.0 l_0_10_3)))
 (let ((?x21311 (* ?x21290 l_0_10_8)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_7) ?x21311) ?x21318) ?x21320) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21339 (* ?x21296 l_0_10_40)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21337 (* ?x21293 l_0_10_39)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21335 (* ?x21329 l_0_10_3)))
 (= (- (- (+ (* (* 2.0 l_0_10_11) l_0_10_2) ?x21335) ?x21337) ?x21339) 0.0))))))))
(assert
 (let ((?x21296 (* 2.0 l_0_10_31)))
 (let ((?x21360 (* ?x21296 l_0_10_45)))
 (let ((?x21293 (* 2.0 l_0_10_30)))
 (let ((?x21358 (* ?x21293 l_0_10_44)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21356 (* ?x21355 l_0_10_3)))
 (= (- (- (+ (* (* 2.0 l_0_10_16) l_0_10_2) ?x21356) ?x21358) ?x21360) 0.0))))))))
(assert
 (let ((?x21427 (* l_0_10_6 l_0_10_6)))
 (let ((?x21425 (* l_0_10_5 l_0_10_5)))
 (let ((?x21423 (* l_0_10_4 l_0_10_4)))
 (let ((?x14240 (* l_0_10_34 l_0_10_34)))
 (let ((?x15006 (- (- (* (- l_0_10_32) l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x14240)))
 (= (+ (+ (+ ?x15006 ?x21423) ?x21425) ?x21427) 0.0)))))))
(assert
 (let ((?x21450 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x21447 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x21444 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21441 (* ?x21401 l_0_10_37)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21439 (* ?x21398 l_0_10_36)))
 (let ((?x21959 (+ (+ (- (- (* (* (- 2.0) l_0_10_32) l_0_10_35) ?x21439) ?x21441) ?x21444) ?x21447)))
 (= (+ ?x21959 ?x21450) 0.0))))))))))
(assert
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21480 (* ?x21401 l_0_10_41)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21478 (* ?x21398 l_0_10_40)))
 (let ((?x21395 (* 2.0 l_0_10_32)))
 (let ((?x21476 (* ?x21395 l_0_10_39)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21474 (* ?x21473 l_0_10_6)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21471 (* ?x21329 l_0_10_5)))
 (let ((?x15000 (- (- (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x21471) ?x21474) ?x21476) ?x21478)))
 (= (- ?x15000 ?x21480) 0.0)))))))))))))
(assert
 (let ((?x21401 (* 2.0 l_0_10_34)))
 (let ((?x21509 (* ?x21401 l_0_10_52)))
 (let ((?x21398 (* 2.0 l_0_10_33)))
 (let ((?x21507 (* ?x21398 l_0_10_51)))
 (let ((?x21395 (* 2.0 l_0_10_32)))
 (let ((?x21505 (* ?x21395 l_0_10_50)))
 (let ((?x21502 (* 2.0 l_0_10_24)))
 (let ((?x21503 (* ?x21502 l_0_10_6)))
 (let ((?x21388 (* 2.0 l_0_10_23)))
 (let ((?x21500 (* ?x21388 l_0_10_5)))
 (let ((?x6341 (- (- (+ (+ (* (* 2.0 l_0_10_22) l_0_10_4) ?x21500) ?x21503) ?x21505) ?x21507)))
 (= (- ?x6341 ?x21509) 0.0)))))))))))))
(assert
 (let ((?x21543 (* l_0_10_9 l_0_10_9)))
 (let ((?x21541 (* l_0_10_8 l_0_10_8)))
 (let ((?x21539 (* l_0_10_7 l_0_10_7)))
 (let ((?x21537 (* l_0_10_38 l_0_10_38)))
 (let ((?x21535 (* l_0_10_37 l_0_10_37)))
 (let ((?x21533 (* l_0_10_36 l_0_10_36)))
 (let ((?x15073 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x21533) ?x21535)))
 (= (+ (+ (+ (- ?x15073 ?x21537) ?x21539) ?x21541) ?x21543) 0.0)))))))))
(assert
 (let ((?x21573 (* 2.0 l_0_10_38)))
 (let ((?x21574 (* ?x21573 l_0_10_42)))
 (let ((?x21570 (* 2.0 l_0_10_37)))
 (let ((?x21571 (* ?x21570 l_0_10_41)))
 (let ((?x21567 (* 2.0 l_0_10_36)))
 (let ((?x21568 (* ?x21567 l_0_10_40)))
 (let ((?x21564 (* 2.0 l_0_10_35)))
 (let ((?x21565 (* ?x21564 l_0_10_39)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21556 (* ?x21473 l_0_10_9)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x14392 (* ?x21329 l_0_10_8)))
 (let ((?x5697 (* 2.0 l_0_10_11)))
 (let ((?x5693 (* ?x5697 l_0_10_7)))
 (let ((?x15148 (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x5693) ?x14392) ?x21556)))
 (= (- (- (- (- ?x15148 ?x21565) ?x21568) ?x21571) ?x21574) 0.0)))))))))))))))))
(assert
 (let ((?x21573 (* 2.0 l_0_10_38)))
 (let ((?x21614 (* ?x21573 l_0_10_47)))
 (let ((?x21570 (* 2.0 l_0_10_37)))
 (let ((?x21612 (* ?x21570 l_0_10_46)))
 (let ((?x21567 (* 2.0 l_0_10_36)))
 (let ((?x21610 (* ?x21567 l_0_10_45)))
 (let ((?x21564 (* 2.0 l_0_10_35)))
 (let ((?x21608 (* ?x21564 l_0_10_44)))
 (let ((?x21382 (* 2.0 l_0_10_18)))
 (let ((?x21606 (* ?x21382 l_0_10_9)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21597 (* ?x21355 l_0_10_8)))
 (let ((?x21372 (* 2.0 l_0_10_16)))
 (let ((?x21593 (* ?x21372 l_0_10_7)))
 (let ((?x15197 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_19) ?x21593) ?x21597) ?x21606) ?x21608)))
 (= (- (- (- ?x15197 ?x21610) ?x21612) ?x21614) 0.0)))))))))))))))))
(assert
 (let ((?x21573 (* 2.0 l_0_10_38)))
 (let ((?x21638 (* ?x21573 l_0_10_53)))
 (let ((?x21570 (* 2.0 l_0_10_37)))
 (let ((?x21636 (* ?x21570 l_0_10_52)))
 (let ((?x21567 (* 2.0 l_0_10_36)))
 (let ((?x21634 (* ?x21567 l_0_10_51)))
 (let ((?x21564 (* 2.0 l_0_10_35)))
 (let ((?x21632 (* ?x21564 l_0_10_50)))
 (let ((?x21502 (* 2.0 l_0_10_24)))
 (let ((?x21630 (* ?x21502 l_0_10_9)))
 (let ((?x21388 (* 2.0 l_0_10_23)))
 (let ((?x21628 (* ?x21388 l_0_10_8)))
 (let ((?x21625 (* 2.0 l_0_10_22)))
 (let ((?x21626 (* ?x21625 l_0_10_7)))
 (let ((?x6519 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_25) ?x21626) ?x21628) ?x21630) ?x21632)))
 (= (- (- (- ?x6519 ?x21634) ?x21636) ?x21638) 0.0)))))))))))))))))
(assert
 (let ((?x21681 (* l_0_10_43 l_0_10_43)))
 (let ((?x21679 (* l_0_10_42 l_0_10_42)))
 (let ((?x21677 (* l_0_10_41 l_0_10_41)))
 (let ((?x21675 (* l_0_10_40 l_0_10_40)))
 (let ((?x21673 (* l_0_10_39 l_0_10_39)))
 (let ((?x21671 (* l_0_10_15 l_0_10_15)))
 (let ((?x21669 (* l_0_10_14 l_0_10_14)))
 (let ((?x21660 (* l_0_10_13 l_0_10_13)))
 (let ((?x15409 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x21660) ?x21669)))
 (= (- (- (- (- (- (+ ?x15409 ?x21671) ?x21673) ?x21675) ?x21677) ?x21679) ?x21681) 0.0)))))))))))
(assert
 (let ((?x21726 (* 2.0 l_0_10_43)))
 (let ((?x21727 (* ?x21726 l_0_10_48)))
 (let ((?x21723 (* 2.0 l_0_10_42)))
 (let ((?x21724 (* ?x21723 l_0_10_47)))
 (let ((?x21720 (* 2.0 l_0_10_41)))
 (let ((?x21721 (* ?x21720 l_0_10_46)))
 (let ((?x21717 (* 2.0 l_0_10_40)))
 (let ((?x21718 (* ?x21717 l_0_10_45)))
 (let ((?x21714 (* 2.0 l_0_10_39)))
 (let ((?x21715 (* ?x21714 l_0_10_44)))
 (let ((?x21711 (* 2.0 l_0_10_15)))
 (let ((?x21712 (* ?x21711 l_0_10_20)))
 (let ((?x21708 (* 2.0 l_0_10_14)))
 (let ((?x21709 (* ?x21708 l_0_10_19)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21706 (* ?x21473 l_0_10_18)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21704 (* ?x21329 l_0_10_17)))
 (let ((?x6496 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_16) ?x21704) ?x21706) ?x21709) ?x21712)))
 (= (- (- (- (- (- ?x6496 ?x21715) ?x21718) ?x21721) ?x21724) ?x21727) 0.0)))))))))))))))))))))
(assert
 (let ((?x21726 (* 2.0 l_0_10_43)))
 (let ((?x21766 (* ?x21726 l_0_10_54)))
 (let ((?x21723 (* 2.0 l_0_10_42)))
 (let ((?x21764 (* ?x21723 l_0_10_53)))
 (let ((?x21720 (* 2.0 l_0_10_41)))
 (let ((?x21762 (* ?x21720 l_0_10_52)))
 (let ((?x21717 (* 2.0 l_0_10_40)))
 (let ((?x21760 (* ?x21717 l_0_10_51)))
 (let ((?x21714 (* 2.0 l_0_10_39)))
 (let ((?x21758 (* ?x21714 l_0_10_50)))
 (let ((?x21711 (* 2.0 l_0_10_15)))
 (let ((?x21756 (* ?x21711 l_0_10_26)))
 (let ((?x21708 (* 2.0 l_0_10_14)))
 (let ((?x21754 (* ?x21708 l_0_10_25)))
 (let ((?x21473 (* 2.0 l_0_10_13)))
 (let ((?x21752 (* ?x21473 l_0_10_24)))
 (let ((?x21329 (* 2.0 l_0_10_12)))
 (let ((?x21750 (* ?x21329 l_0_10_23)))
 (let ((?x21980 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_22) ?x21750) ?x21752) ?x21754) ?x21756)))
 (= (- (- (- (- (- ?x21980 ?x21758) ?x21760) ?x21762) ?x21764) ?x21766) 0.0)))))))))))))))))))))
(assert
 (let ((?x21815 (* l_0_10_49 l_0_10_49)))
 (let ((?x21813 (* l_0_10_48 l_0_10_48)))
 (let ((?x21811 (* l_0_10_47 l_0_10_47)))
 (let ((?x21809 (* l_0_10_46 l_0_10_46)))
 (let ((?x21807 (* l_0_10_45 l_0_10_45)))
 (let ((?x21805 (* l_0_10_44 l_0_10_44)))
 (let ((?x21803 (* l_0_10_21 l_0_10_21)))
 (let ((?x21801 (* l_0_10_20 l_0_10_20)))
 (let ((?x21799 (* l_0_10_19 l_0_10_19)))
 (let ((?x21789 (* l_0_10_18 l_0_10_18)))
 (let ((?x15594 (+ (+ (+ (* l_0_10_16 l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x21789) ?x21799)))
 (let ((?x15608 (- (- (- (- (- (+ (+ ?x15594 ?x21801) ?x21803) ?x21805) ?x21807) ?x21809) ?x21811) ?x21813)))
 (= (- ?x15608 ?x21815) 0.0))))))))))))))
(assert
 (let ((?x21868 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x21865 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x21862 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x21859 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x21856 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x21853 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x21850 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x21847 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x21844 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x21382 (* 2.0 l_0_10_18)))
 (let ((?x21841 (* ?x21382 l_0_10_24)))
 (let ((?x21355 (* 2.0 l_0_10_17)))
 (let ((?x21839 (* ?x21355 l_0_10_23)))
 (let ((?x15702 (+ (+ (+ (+ (* (* 2.0 l_0_10_16) l_0_10_22) ?x21839) ?x21841) ?x21844) ?x21847)))
 (let ((?x6800 (- (- (- (- (- (- (+ ?x15702 ?x21850) ?x21853) ?x21856) ?x21859) ?x21862) ?x21865) ?x21868)))
 (= ?x6800 0.0)))))))))))))))))
(assert
 (let ((?x21922 (* l_0_10_56 l_0_10_56)))
 (let ((?x21920 (* l_0_10_55 l_0_10_55)))
 (let ((?x21918 (* l_0_10_54 l_0_10_54)))
 (let ((?x21916 (* l_0_10_53 l_0_10_53)))
 (let ((?x21914 (* l_0_10_52 l_0_10_52)))
 (let ((?x21912 (* l_0_10_51 l_0_10_51)))
 (let ((?x21910 (* l_0_10_50 l_0_10_50)))
 (let ((?x21908 (* l_0_10_28 l_0_10_28)))
 (let ((?x21906 (* l_0_10_27 l_0_10_27)))
 (let ((?x21904 (* l_0_10_26 l_0_10_26)))
 (let ((?x21893 (* l_0_10_25 l_0_10_25)))
 (let ((?x21890 (* l_0_10_24 l_0_10_24)))
 (let ((?x6966 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x21890) ?x21893)))
 (let ((?x15659 (- (- (- (- (+ (+ (+ ?x6966 ?x21904) ?x21906) ?x21908) ?x21910) ?x21912) ?x21914) ?x21916)))
 (= (- (- (- ?x15659 ?x21918) ?x21920) ?x21922) 0.0))))))))))))))))
(assert
 (let ((?x22006 (* l_0_10_85 l_0_10_85)))
 (let ((?x22005 (+ (* (- l_0_10_113) l_0_10_113) (* 1.0 (* l_0_10_57 l_0_10_57)))))
 (= (- ?x22005 ?x22006) 0.0))))
(assert
 (let ((?x22021 (+ (* (* (- 2.0) l_0_10_113) l_0_10_114) (* (* 2.0 l_0_10_57) l_0_10_58))))
 (= (- ?x22021 (* (* 2.0 l_0_10_85) l_0_10_86)) 0.0)))
(assert
 (let ((?x22043 (+ (* (* (- 2.0) l_0_10_113) l_0_10_116) (* (* 2.0 l_0_10_57) l_0_10_60))))
 (= (- ?x22043 (* (* 2.0 l_0_10_85) l_0_10_88)) 0.0)))
(assert
 (let ((?x22064 (+ (* (* (- 2.0) l_0_10_113) l_0_10_119) (* (* 2.0 l_0_10_57) l_0_10_63))))
 (= (- ?x22064 (* (* 2.0 l_0_10_85) l_0_10_91)) 0.0)))
(assert
 (let ((?x22085 (+ (* (* (- 2.0) l_0_10_113) l_0_10_123) (* (* 2.0 l_0_10_57) l_0_10_67))))
 (= (- ?x22085 (* (* 2.0 l_0_10_85) l_0_10_95)) 0.0)))
(assert
 (let ((?x22108 (- (* (* (- 2.0) l_0_10_100) l_0_10_85) (* (* 2.0 l_0_10_113) l_0_10_128))))
 (= (+ ?x22108 (* (* 2.0 l_0_10_57) l_0_10_72)) 0.0)))
(assert
 (let ((?x22128 (- (* (* (- 2.0) l_0_10_106) l_0_10_85) (* (* 2.0 l_0_10_113) l_0_10_134))))
 (= (+ ?x22128 (* (* 2.0 l_0_10_57) l_0_10_78)) 0.0)))
(assert
 (let ((?x22157 (* l_0_10_87 l_0_10_87)))
 (let ((?x22155 (* l_0_10_86 l_0_10_86)))
 (let ((?x22151 (+ (- (* (- l_0_10_114) l_0_10_114) (* l_0_10_115 l_0_10_115)) (* 1.0 (* l_0_10_58 l_0_10_58)))))
 (= (- (- (+ ?x22151 (* 1.0 (* l_0_10_59 l_0_10_59))) ?x22155) ?x22157) 0.0)))))
(assert
 (let ((?x22180 (- (* (* (- 2.0) l_0_10_114) l_0_10_116) (* (* 2.0 l_0_10_115) l_0_10_117))))
 (let ((?x22184 (+ (+ ?x22180 (* (* 2.0 l_0_10_58) l_0_10_60)) (* (* 2.0 l_0_10_59) l_0_10_61))))
 (let ((?x22190 (- (- ?x22184 (* (* 2.0 l_0_10_86) l_0_10_88)) (* (* 2.0 l_0_10_87) l_0_10_89))))
 (= ?x22190 0.0)))))
(assert
 (let ((?x22224 (- (* (* (- 2.0) l_0_10_114) l_0_10_119) (* (* 2.0 l_0_10_115) l_0_10_120))))
 (let ((?x22228 (+ (+ ?x22224 (* (* 2.0 l_0_10_58) l_0_10_63)) (* (* 2.0 l_0_10_59) l_0_10_64))))
 (let ((?x22232 (- (- ?x22228 (* (* 2.0 l_0_10_86) l_0_10_91)) (* (* 2.0 l_0_10_87) l_0_10_92))))
 (= ?x22232 0.0)))))
(assert
 (let ((?x22266 (- (* (* (- 2.0) l_0_10_114) l_0_10_123) (* (* 2.0 l_0_10_115) l_0_10_124))))
 (let ((?x22270 (+ (+ ?x22266 (* (* 2.0 l_0_10_58) l_0_10_67)) (* (* 2.0 l_0_10_59) l_0_10_68))))
 (let ((?x22274 (- (- ?x22270 (* (* 2.0 l_0_10_86) l_0_10_95)) (* (* 2.0 l_0_10_87) l_0_10_96))))
 (= ?x22274 0.0)))))
(assert
 (let ((?x22308 (- (* (* (- 2.0) l_0_10_100) l_0_10_86) (* (* 2.0 l_0_10_101) l_0_10_87))))
 (let ((?x22312 (- (- ?x22308 (* (* 2.0 l_0_10_114) l_0_10_128)) (* (* 2.0 l_0_10_115) l_0_10_129))))
 (let ((?x22316 (+ (+ ?x22312 (* (* 2.0 l_0_10_58) l_0_10_72)) (* (* 2.0 l_0_10_59) l_0_10_73))))
 (= ?x22316 0.0)))))
(assert
 (let ((?x22364 (* l_0_10_90 l_0_10_90)))
 (let ((?x22362 (* l_0_10_89 l_0_10_89)))
 (let ((?x22360 (* l_0_10_88 l_0_10_88)))
 (let ((?x22349 (* l_0_10_118 l_0_10_118)))
 (let ((?x22350 (- (- (* (- l_0_10_116) l_0_10_116) (* l_0_10_117 l_0_10_117)) ?x22349)))
 (let ((?x22356 (+ (+ ?x22350 (* 1.0 (* l_0_10_60 l_0_10_60))) (* 1.0 (* l_0_10_61 l_0_10_61)))))
 (let ((?x22365 (- (- (- (+ ?x22356 (* 1.0 (* l_0_10_62 l_0_10_62))) ?x22360) ?x22362) ?x22364)))
 (= ?x22365 0.0)))))))))
(assert
 (let ((?x22394 (- (* (* (- 2.0) l_0_10_116) l_0_10_119) (* (* 2.0 l_0_10_117) l_0_10_120))))
 (let ((?x22398 (+ (- ?x22394 (* (* 2.0 l_0_10_118) l_0_10_121)) (* (* 2.0 l_0_10_60) l_0_10_63))))
 (let ((?x22402 (+ (+ ?x22398 (* (* 2.0 l_0_10_61) l_0_10_64)) (* (* 2.0 l_0_10_62) l_0_10_65))))
 (let ((?x22408 (- (- ?x22402 (* (* 2.0 l_0_10_88) l_0_10_91)) (* (* 2.0 l_0_10_89) l_0_10_92))))
 (= (- ?x22408 (* (* 2.0 l_0_10_90) l_0_10_93)) 0.0))))))
(assert
 (let ((?x22460 (- (* (* (- 2.0) l_0_10_116) l_0_10_123) (* (* 2.0 l_0_10_117) l_0_10_124))))
 (let ((?x22464 (+ (- ?x22460 (* (* 2.0 l_0_10_118) l_0_10_125)) (* (* 2.0 l_0_10_60) l_0_10_67))))
 (let ((?x22468 (+ (+ ?x22464 (* (* 2.0 l_0_10_61) l_0_10_68)) (* (* 2.0 l_0_10_62) l_0_10_69))))
 (let ((?x22472 (- (- ?x22468 (* (* 2.0 l_0_10_88) l_0_10_95)) (* (* 2.0 l_0_10_89) l_0_10_96))))
 (= (- ?x22472 (* (* 2.0 l_0_10_90) l_0_10_97)) 0.0))))))
(assert
 (let ((?x22523 (- (* (* (- 2.0) l_0_10_106) l_0_10_88) (* (* 2.0 l_0_10_107) l_0_10_89))))
 (let ((?x22528 (- (- ?x22523 (* (* 2.0 l_0_10_108) l_0_10_90)) (* (* 2.0 l_0_10_116) l_0_10_134))))
 (let ((?x22532 (- (- ?x22528 (* (* 2.0 l_0_10_117) l_0_10_135)) (* (* 2.0 l_0_10_118) l_0_10_136))))
 (let ((?x22536 (+ (+ ?x22532 (* (* 2.0 l_0_10_60) l_0_10_78)) (* (* 2.0 l_0_10_61) l_0_10_79))))
 (= (+ ?x22536 (* (* 2.0 l_0_10_62) l_0_10_80)) 0.0))))))
(assert
 (let ((?x22607 (* l_0_10_94 l_0_10_94)))
 (let ((?x22605 (* l_0_10_93 l_0_10_93)))
 (let ((?x22603 (* l_0_10_92 l_0_10_92)))
 (let ((?x22601 (* l_0_10_91 l_0_10_91)))
 (let ((?x22587 (* l_0_10_122 l_0_10_122)))
 (let ((?x22585 (* l_0_10_121 l_0_10_121)))
 (let ((?x22586 (- (- (* (- l_0_10_119) l_0_10_119) (* l_0_10_120 l_0_10_120)) ?x22585)))
 (let ((?x22594 (+ (+ (- ?x22586 ?x22587) (* 1.0 (* l_0_10_63 l_0_10_63))) (* 1.0 (* l_0_10_64 l_0_10_64)))))
 (let ((?x22600 (+ (+ ?x22594 (* 1.0 (* l_0_10_65 l_0_10_65))) (* 1.0 (* l_0_10_66 l_0_10_66)))))
 (= (- (- (- (- ?x22600 ?x22601) ?x22603) ?x22605) ?x22607) 0.0)))))))))))
(assert
 (let ((?x22643 (- (* (* (- 2.0) l_0_10_100) l_0_10_91) (* (* 2.0 l_0_10_101) l_0_10_92))))
 (let ((?x22648 (- (- ?x22643 (* (* 2.0 l_0_10_102) l_0_10_93)) (* (* 2.0 l_0_10_103) l_0_10_94))))
 (let ((?x22652 (- (- ?x22648 (* (* 2.0 l_0_10_119) l_0_10_128)) (* (* 2.0 l_0_10_120) l_0_10_129))))
 (let ((?x22656 (- (- ?x22652 (* (* 2.0 l_0_10_121) l_0_10_130)) (* (* 2.0 l_0_10_122) l_0_10_131))))
 (let ((?x22660 (+ (+ ?x22656 (* (* 2.0 l_0_10_63) l_0_10_72)) (* (* 2.0 l_0_10_64) l_0_10_73))))
 (let ((?x22664 (+ (+ ?x22660 (* (* 2.0 l_0_10_65) l_0_10_74)) (* (* 2.0 l_0_10_66) l_0_10_75))))
 (= ?x22664 0.0))))))))
(assert
 (let ((?x22715 (- (* (* (- 2.0) l_0_10_106) l_0_10_91) (* (* 2.0 l_0_10_107) l_0_10_92))))
 (let ((?x22728 (- (- ?x22715 (* (* 2.0 l_0_10_108) l_0_10_93)) (* (* 2.0 l_0_10_109) l_0_10_94))))
 (let ((?x22732 (- (- ?x22728 (* (* 2.0 l_0_10_119) l_0_10_134)) (* (* 2.0 l_0_10_120) l_0_10_135))))
 (let ((?x22736 (- (- ?x22732 (* (* 2.0 l_0_10_121) l_0_10_136)) (* (* 2.0 l_0_10_122) l_0_10_137))))
 (let ((?x22740 (+ (+ ?x22736 (* (* 2.0 l_0_10_63) l_0_10_78)) (* (* 2.0 l_0_10_64) l_0_10_79))))
 (let ((?x22744 (+ (+ ?x22740 (* (* 2.0 l_0_10_65) l_0_10_80)) (* (* 2.0 l_0_10_66) l_0_10_81))))
 (= ?x22744 0.0))))))))
(assert
 (let ((?x22832 (* l_0_10_99 l_0_10_99)))
 (let ((?x22830 (* l_0_10_98 l_0_10_98)))
 (let ((?x22828 (* l_0_10_97 l_0_10_97)))
 (let ((?x22826 (* l_0_10_96 l_0_10_96)))
 (let ((?x22824 (* l_0_10_95 l_0_10_95)))
 (let ((?x22807 (* l_0_10_127 l_0_10_127)))
 (let ((?x22805 (* l_0_10_126 l_0_10_126)))
 (let ((?x22796 (* l_0_10_125 l_0_10_125)))
 (let ((?x22804 (- (- (* (- l_0_10_123) l_0_10_123) (* l_0_10_124 l_0_10_124)) ?x22796)))
 (let ((?x22814 (+ (+ (- (- ?x22804 ?x22805) ?x22807) (* 1.0 (* l_0_10_67 l_0_10_67))) (* 1.0 (* l_0_10_68 l_0_10_68)))))
 (let ((?x22820 (+ (+ ?x22814 (* 1.0 (* l_0_10_69 l_0_10_69))) (* 1.0 (* l_0_10_70 l_0_10_70)))))
 (let ((?x22829 (- (- (- (+ ?x22820 (* 1.0 (* l_0_10_71 l_0_10_71))) ?x22824) ?x22826) ?x22828)))
 (= (- (- ?x22829 ?x22830) ?x22832) 0.0))))))))))))))
(assert
 (let ((?x22875 (- (* (* (- 2.0) l_0_10_100) l_0_10_95) (* (* 2.0 l_0_10_101) l_0_10_96))))
 (let ((?x22879 (- (- ?x22875 (* (* 2.0 l_0_10_102) l_0_10_97)) (* (* 2.0 l_0_10_103) l_0_10_98))))
 (let ((?x22885 (- (- ?x22879 (* (* 2.0 l_0_10_104) l_0_10_99)) (* (* 2.0 l_0_10_123) l_0_10_128))))
 (let ((?x22891 (- (- ?x22885 (* (* 2.0 l_0_10_124) l_0_10_129)) (* (* 2.0 l_0_10_125) l_0_10_130))))
 (let ((?x22897 (- (- ?x22891 (* (* 2.0 l_0_10_126) l_0_10_131)) (* (* 2.0 l_0_10_127) l_0_10_132))))
 (let ((?x22903 (+ (+ ?x22897 (* (* 2.0 l_0_10_67) l_0_10_72)) (* (* 2.0 l_0_10_68) l_0_10_73))))
 (let ((?x22909 (+ (+ ?x22903 (* (* 2.0 l_0_10_69) l_0_10_74)) (* (* 2.0 l_0_10_70) l_0_10_75))))
 (= (+ ?x22909 (* (* 2.0 l_0_10_71) l_0_10_76)) 0.0)))))))))
(assert
 (let ((?x22961 (- (* (* (- 2.0) l_0_10_106) l_0_10_95) (* (* 2.0 l_0_10_107) l_0_10_96))))
 (let ((?x22975 (- (- ?x22961 (* (* 2.0 l_0_10_108) l_0_10_97)) (* (* 2.0 l_0_10_109) l_0_10_98))))
 (let ((?x22980 (- (- ?x22975 (* (* 2.0 l_0_10_110) l_0_10_99)) (* (* 2.0 l_0_10_123) l_0_10_134))))
 (let ((?x22984 (- (- ?x22980 (* (* 2.0 l_0_10_124) l_0_10_135)) (* (* 2.0 l_0_10_125) l_0_10_136))))
 (let ((?x22988 (- (- ?x22984 (* (* 2.0 l_0_10_126) l_0_10_137)) (* (* 2.0 l_0_10_127) l_0_10_138))))
 (let ((?x22992 (+ (+ ?x22988 (* (* 2.0 l_0_10_67) l_0_10_78)) (* (* 2.0 l_0_10_68) l_0_10_79))))
 (let ((?x22996 (+ (+ ?x22992 (* (* 2.0 l_0_10_69) l_0_10_80)) (* (* 2.0 l_0_10_70) l_0_10_81))))
 (= (+ ?x22996 (* (* 2.0 l_0_10_71) l_0_10_82)) 0.0)))))))))
(assert
 (let ((?x23091 (* l_0_10_133 l_0_10_133)))
 (let ((?x23089 (* l_0_10_132 l_0_10_132)))
 (let ((?x23087 (* l_0_10_131 l_0_10_131)))
 (let ((?x23085 (* l_0_10_130 l_0_10_130)))
 (let ((?x23083 (* l_0_10_129 l_0_10_129)))
 (let ((?x23081 (* l_0_10_128 l_0_10_128)))
 (let ((?x23079 (* l_0_10_105 l_0_10_105)))
 (let ((?x23077 (* l_0_10_104 l_0_10_104)))
 (let ((?x23075 (* l_0_10_103 l_0_10_103)))
 (let ((?x23065 (* l_0_10_102 l_0_10_102)))
 (let ((?x23066 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_101 l_0_10_101)) ?x23065)))
 (let ((?x23088 (- (- (- (- (- (- (- ?x23066 ?x23075) ?x23077) ?x23079) ?x23081) ?x23083) ?x23085) ?x23087)))
 (let ((?x23098 (+ (+ (- (- ?x23088 ?x23089) ?x23091) (* 1.0 (* l_0_10_72 l_0_10_72))) (* 1.0 (* l_0_10_73 l_0_10_73)))))
 (let ((?x23104 (+ (+ ?x23098 (* 1.0 (* l_0_10_74 l_0_10_74))) (* 1.0 (* l_0_10_75 l_0_10_75)))))
 (let ((?x23110 (+ (+ ?x23104 (* 1.0 (* l_0_10_76 l_0_10_76))) (* 1.0 (* l_0_10_77 l_0_10_77)))))
 (= ?x23110 0.0)))))))))))))))))
(assert
 (let ((?x23158 (- (* (* (- 2.0) l_0_10_100) l_0_10_106) (* (* 2.0 l_0_10_101) l_0_10_107))))
 (let ((?x23162 (- (- ?x23158 (* (* 2.0 l_0_10_102) l_0_10_108)) (* (* 2.0 l_0_10_103) l_0_10_109))))
 (let ((?x23167 (- (- ?x23162 (* (* 2.0 l_0_10_104) l_0_10_110)) (* (* 2.0 l_0_10_105) l_0_10_111))))
 (let ((?x23173 (- (- ?x23167 (* (* 2.0 l_0_10_128) l_0_10_134)) (* (* 2.0 l_0_10_129) l_0_10_135))))
 (let ((?x23179 (- (- ?x23173 (* (* 2.0 l_0_10_130) l_0_10_136)) (* (* 2.0 l_0_10_131) l_0_10_137))))
 (let ((?x23185 (- (- ?x23179 (* (* 2.0 l_0_10_132) l_0_10_138)) (* (* 2.0 l_0_10_133) l_0_10_139))))
 (let ((?x23191 (+ (+ ?x23185 (* (* 2.0 l_0_10_72) l_0_10_78)) (* (* 2.0 l_0_10_73) l_0_10_79))))
 (let ((?x23197 (+ (+ ?x23191 (* (* 2.0 l_0_10_74) l_0_10_80)) (* (* 2.0 l_0_10_75) l_0_10_81))))
 (let ((?x23203 (+ (+ ?x23197 (* (* 2.0 l_0_10_76) l_0_10_82)) (* (* 2.0 l_0_10_77) l_0_10_83))))
 (= ?x23203 0.0)))))))))))
(assert
 (let ((?x23278 (* l_0_10_140 l_0_10_140)))
 (let ((?x23276 (* l_0_10_139 l_0_10_139)))
 (let ((?x23274 (* l_0_10_138 l_0_10_138)))
 (let ((?x23272 (* l_0_10_137 l_0_10_137)))
 (let ((?x23270 (* l_0_10_136 l_0_10_136)))
 (let ((?x23268 (* l_0_10_135 l_0_10_135)))
 (let ((?x23266 (* l_0_10_134 l_0_10_134)))
 (let ((?x23264 (* l_0_10_112 l_0_10_112)))
 (let ((?x23262 (* l_0_10_111 l_0_10_111)))
 (let ((?x23260 (* l_0_10_110 l_0_10_110)))
 (let ((?x23249 (* l_0_10_109 l_0_10_109)))
 (let ((?x23246 (* l_0_10_108 l_0_10_108)))
 (let ((?x23248 (- (- (* (- l_0_10_106) l_0_10_106) (* l_0_10_107 l_0_10_107)) ?x23246)))
 (let ((?x23271 (- (- (- (- (- (- (- ?x23248 ?x23249) ?x23260) ?x23262) ?x23264) ?x23266) ?x23268) ?x23270)))
 (let ((?x23282 (+ (- (- (- (- ?x23271 ?x23272) ?x23274) ?x23276) ?x23278) (* 1.0 (* l_0_10_78 l_0_10_78)))))
 (let ((?x23288 (+ (+ ?x23282 (* 1.0 (* l_0_10_79 l_0_10_79))) (* 1.0 (* l_0_10_80 l_0_10_80)))))
 (let ((?x23294 (+ (+ ?x23288 (* 1.0 (* l_0_10_81 l_0_10_81))) (* 1.0 (* l_0_10_82 l_0_10_82)))))
 (let ((?x23300 (+ (+ ?x23294 (* 1.0 (* l_0_10_83 l_0_10_83))) (* 1.0 (* l_0_10_84 l_0_10_84)))))
 (= ?x23300 0.0))))))))))))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_28 0.0))
(assert
 (>= l_0_10_29 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_34 0.0))
(assert
 (>= l_0_10_38 0.0))
(assert
 (>= l_0_10_43 0.0))
(assert
 (>= l_0_10_49 0.0))
(assert
 (>= l_0_10_56 0.0))
(assert
 (>= l_0_10_57 0.0))
(assert
 (>= l_0_10_59 0.0))
(assert
 (>= l_0_10_62 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_71 0.0))
(assert
 (>= l_0_10_77 0.0))
(assert
 (>= l_0_10_84 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_87 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_94 0.0))
(assert
 (>= l_0_10_99 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_112 0.0))
(assert
 (>= l_0_10_113 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_118 0.0))
(assert
 (>= l_0_10_122 0.0))
(assert
 (>= l_0_10_127 0.0))
(assert
 (>= l_0_10_133 0.0))
(assert
 (>= l_0_10_140 0.0))
(assert
 (let ((?x23365 (* l_0_11_29 l_0_11_29)))
 (let ((?x23358 (- (* (- l_0_11_1) l_0_11_1) (* (* 2.0 l_0_11_100) l_0_11_88))))
 (let ((?x23364 (- (- ?x23358 (* (* 2.0 l_0_11_101) l_0_11_89)) (* (* 2.0 l_0_11_102) l_0_11_90))))
 (let ((?x23372 (- (- (+ ?x23364 ?x23365) (* (* 2.0 l_0_11_60) l_0_11_72)) (* (* 2.0 l_0_11_61) l_0_11_73))))
 (= (+ (- ?x23372 (* (* 2.0 l_0_11_62) l_0_11_74)) 1.0) 0.0))))))
(assert
 (let ((?x23401 (- (- (- _a_0_) (* (* 2.0 l_0_11_106) l_0_11_85)) (* (* 2.0 l_0_11_57) l_0_11_78))))
 (= ?x23401 0.0)))
(assert
 (let ((?x16080 (- (- (- _a_1_) (* (* 2.0 l_0_11_106) l_0_11_91)) (* (* 2.0 l_0_11_107) l_0_11_92))))
 (let ((?x23418 (- (- ?x16080 (* (* 2.0 l_0_11_108) l_0_11_93)) (* (* 2.0 l_0_11_109) l_0_11_94))))
 (let ((?x23424 (- (- ?x23418 (* (* 2.0 l_0_11_63) l_0_11_78)) (* (* 2.0 l_0_11_64) l_0_11_79))))
 (let ((?x23430 (- (- ?x23424 (* (* 2.0 l_0_11_65) l_0_11_80)) (* (* 2.0 l_0_11_66) l_0_11_81))))
 (= (- ?x23430 1.0) 0.0))))))
(assert
 (let ((?x23365 (* l_0_11_29 l_0_11_29)))
 (let ((?x23454 (- (+ (- _a_2_) (* l_0_11_1 l_0_11_1)) (* (* 2.0 l_0_11_106) l_0_11_86))))
 (let ((?x23460 (- (- (- ?x23454 (* (* 2.0 l_0_11_107) l_0_11_87)) ?x23365) (* (* 2.0 l_0_11_58) l_0_11_78))))
 (= (- ?x23460 (* (* 2.0 l_0_11_59) l_0_11_79)) 0.0)))))
(assert
 (let ((?x23476 (- (- (* l_0_11_1 l_0_11_1) (* l_0_11_29 l_0_11_29)) (* (* 2.0 l_0_11_63) l_0_11_67))))
 (let ((?x23480 (- (- ?x23476 (* (* 2.0 l_0_11_64) l_0_11_68)) (* (* 2.0 l_0_11_65) l_0_11_69))))
 (let ((?x23485 (- (- ?x23480 (* (* 2.0 l_0_11_66) l_0_11_70)) (* (* 2.0 l_0_11_91) l_0_11_95))))
 (let ((?x23491 (- (- ?x23485 (* (* 2.0 l_0_11_92) l_0_11_96)) (* (* 2.0 l_0_11_93) l_0_11_97))))
 (= (- (- ?x23491 (* (* 2.0 l_0_11_94) l_0_11_98)) 1.0) 0.0))))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23512 (* ?x23511 l_0_11_30)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_2) ?x23512) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23518 (* ?x23511 l_0_11_32)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_4) ?x23518) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23525 (* ?x23511 l_0_11_35)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x23525) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23535 (* ?x23511 l_0_11_39)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_11) ?x23535) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23545 (* ?x23511 l_0_11_44)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_16) ?x23545) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23555 (* ?x23511 l_0_11_50)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_22) ?x23555) 0.0))))
(assert
 (let ((?x23574 (* l_0_11_31 l_0_11_31)))
 (let ((?x23572 (* l_0_11_30 l_0_11_30)))
 (let ((?x23575 (+ (+ (- (* (- l_0_11_2) l_0_11_2) (* l_0_11_3 l_0_11_3)) ?x23572) ?x23574)))
 (= ?x23575 0.0)))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23596 (* ?x23595 l_0_11_33)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23593 (* ?x23592 l_0_11_32)))
 (let ((?x23589 (* 2.0 l_0_11_3)))
 (let ((?x23590 (* ?x23589 l_0_11_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_2) l_0_11_4) ?x23590) ?x23593) ?x23596) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23615 (* ?x23595 l_0_11_36)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23613 (* ?x23592 l_0_11_35)))
 (let ((?x23589 (* 2.0 l_0_11_3)))
 (let ((?x23611 (* ?x23589 l_0_11_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_2) l_0_11_7) ?x23611) ?x23613) ?x23615) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23636 (* ?x23595 l_0_11_40)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23634 (* ?x23592 l_0_11_39)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x23632 (* ?x23631 l_0_11_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_11) l_0_11_2) ?x23632) ?x23634) ?x23636) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23648 (* ?x23595 l_0_11_45)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23646 (* ?x23592 l_0_11_44)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x16372 (* ?x16369 l_0_11_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_16) l_0_11_2) ?x16372) ?x23646) ?x23648) 0.0))))))))
(assert
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x23687 (* ?x23686 l_0_11_46)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x23684 (* ?x23683 l_0_11_45)))
 (let ((?x23680 (* 2.0 l_0_11_32)))
 (let ((?x23681 (* ?x23680 l_0_11_44)))
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23678 (* ?x23595 l_0_11_51)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23676 (* ?x23592 l_0_11_50)))
 (let ((?x23673 (* 2.0 l_0_11_23)))
 (let ((?x23674 (* ?x23673 l_0_11_3)))
 (let ((?x23670 (* 2.0 l_0_11_2)))
 (let ((?x23671 (* ?x23670 l_0_11_22)))
 (let ((?x23667 (* 2.0 l_0_11_18)))
 (let ((?x23668 (* ?x23667 l_0_11_6)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x23665 (* ?x16369 l_0_11_5)))
 (let ((?x23663 (* 2.0 l_0_11_16)))
 (let ((?x23664 (* ?x23663 l_0_11_4)))
 (let ((?x23682 (- (+ (+ (- (- (+ (+ ?x23664 ?x23665) ?x23668) ?x23671) ?x23674) ?x23676) ?x23678) ?x23681)))
 (= (- (- ?x23682 ?x23684) ?x23687) 0.0)))))))))))))))))))))))
(assert
 (let ((?x23736 (* l_0_11_6 l_0_11_6)))
 (let ((?x23734 (* l_0_11_5 l_0_11_5)))
 (let ((?x23732 (* l_0_11_4 l_0_11_4)))
 (let ((?x23730 (* l_0_11_34 l_0_11_34)))
 (let ((?x23733 (- (+ (+ (* l_0_11_32 l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x23730) ?x23732)))
 (= (- (- ?x23733 ?x23734) ?x23736) 0.0)))))))
(assert
 (let ((?x23747 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x16434 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x16432 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x16414 (* ?x23686 l_0_11_37)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x16402 (* ?x23683 l_0_11_36)))
 (let ((?x16435 (- (- (+ (+ (* (* 2.0 l_0_11_32) l_0_11_35) ?x16402) ?x16414) ?x16432) ?x16434)))
 (= (- ?x16435 ?x23747) 0.0))))))))))
(assert
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x23777 (* ?x23686 l_0_11_41)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x23775 (* ?x23683 l_0_11_40)))
 (let ((?x23680 (* 2.0 l_0_11_32)))
 (let ((?x23773 (* ?x23680 l_0_11_39)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x23771 (* ?x23770 l_0_11_6)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x23768 (* ?x23631 l_0_11_5)))
 (let ((?x23776 (+ (+ (- (- (* (* (- 2.0) l_0_11_11) l_0_11_4) ?x23768) ?x23771) ?x23773) ?x23775)))
 (= (+ ?x23776 ?x23777) 0.0)))))))))))))
(assert
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x23687 (* ?x23686 l_0_11_46)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x23684 (* ?x23683 l_0_11_45)))
 (let ((?x23680 (* 2.0 l_0_11_32)))
 (let ((?x23681 (* ?x23680 l_0_11_44)))
 (let ((?x23667 (* 2.0 l_0_11_18)))
 (let ((?x23668 (* ?x23667 l_0_11_6)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x23665 (* ?x16369 l_0_11_5)))
 (let ((?x23791 (+ (+ (- (- (* (* (- 2.0) l_0_11_16) l_0_11_4) ?x23665) ?x23668) ?x23681) ?x23684)))
 (= (+ ?x23791 ?x23687) 0.0)))))))))))))
(assert
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x23807 (* ?x23686 l_0_11_52)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x23805 (* ?x23683 l_0_11_51)))
 (let ((?x23680 (* 2.0 l_0_11_32)))
 (let ((?x23803 (* ?x23680 l_0_11_50)))
 (let ((?x23800 (* 2.0 l_0_11_24)))
 (let ((?x23801 (* ?x23800 l_0_11_6)))
 (let ((?x23673 (* 2.0 l_0_11_23)))
 (let ((?x23798 (* ?x23673 l_0_11_5)))
 (let ((?x23806 (+ (+ (- (- (* (* (- 2.0) l_0_11_22) l_0_11_4) ?x23798) ?x23801) ?x23803) ?x23805)))
 (= (+ ?x23806 ?x23807) 0.0)))))))))))))
(assert
 (let ((?x23841 (* l_0_11_9 l_0_11_9)))
 (let ((?x23839 (* l_0_11_8 l_0_11_8)))
 (let ((?x23837 (* l_0_11_7 l_0_11_7)))
 (let ((?x23835 (* l_0_11_38 l_0_11_38)))
 (let ((?x23833 (* l_0_11_37 l_0_11_37)))
 (let ((?x23831 (* l_0_11_36 l_0_11_36)))
 (let ((?x23832 (+ (+ (* (- l_0_11_10) l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x23831)))
 (= (- (- (- (+ (+ ?x23832 ?x23833) ?x23835) ?x23837) ?x23839) ?x23841) 0.0)))))))))
(assert
 (let ((?x23881 (* 2.0 l_0_11_38)))
 (let ((?x23882 (* ?x23881 l_0_11_42)))
 (let ((?x23878 (* 2.0 l_0_11_37)))
 (let ((?x23879 (* ?x23878 l_0_11_41)))
 (let ((?x23875 (* 2.0 l_0_11_36)))
 (let ((?x23876 (* ?x23875 l_0_11_40)))
 (let ((?x23872 (* 2.0 l_0_11_35)))
 (let ((?x23873 (* ?x23872 l_0_11_39)))
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x23687 (* ?x23686 l_0_11_46)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x23684 (* ?x23683 l_0_11_45)))
 (let ((?x23680 (* 2.0 l_0_11_32)))
 (let ((?x23681 (* ?x23680 l_0_11_44)))
 (let ((?x23667 (* 2.0 l_0_11_18)))
 (let ((?x23668 (* ?x23667 l_0_11_6)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x23665 (* ?x16369 l_0_11_5)))
 (let ((?x23663 (* 2.0 l_0_11_16)))
 (let ((?x23664 (* ?x23663 l_0_11_4)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x23864 (* ?x23770 l_0_11_9)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x23862 (* ?x23631 l_0_11_8)))
 (let ((?x23859 (* 2.0 l_0_11_11)))
 (let ((?x23860 (* ?x23859 l_0_11_7)))
 (let ((?x23866 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_14) ?x23860) ?x23862) ?x23864) ?x23664)))
 (let ((?x23877 (+ (+ (- (- (- (+ (+ ?x23866 ?x23665) ?x23668) ?x23681) ?x23684) ?x23687) ?x23873) ?x23876)))
 (= (+ (+ ?x23877 ?x23879) ?x23882) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x23881 (* 2.0 l_0_11_38)))
 (let ((?x23917 (* ?x23881 l_0_11_47)))
 (let ((?x23878 (* 2.0 l_0_11_37)))
 (let ((?x23915 (* ?x23878 l_0_11_46)))
 (let ((?x23875 (* 2.0 l_0_11_36)))
 (let ((?x23913 (* ?x23875 l_0_11_45)))
 (let ((?x23872 (* 2.0 l_0_11_35)))
 (let ((?x23911 (* ?x23872 l_0_11_44)))
 (let ((?x23667 (* 2.0 l_0_11_18)))
 (let ((?x23909 (* ?x23667 l_0_11_9)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x23900 (* ?x16369 l_0_11_8)))
 (let ((?x23663 (* 2.0 l_0_11_16)))
 (let ((?x23896 (* ?x23663 l_0_11_7)))
 (let ((?x23912 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_19) ?x23896) ?x23900) ?x23909) ?x23911)))
 (= (+ (+ (+ ?x23912 ?x23913) ?x23915) ?x23917) 0.0)))))))))))))))))
(assert
 (let ((?x23881 (* 2.0 l_0_11_38)))
 (let ((?x23953 (* ?x23881 l_0_11_53)))
 (let ((?x23878 (* 2.0 l_0_11_37)))
 (let ((?x23951 (* ?x23878 l_0_11_52)))
 (let ((?x23875 (* 2.0 l_0_11_36)))
 (let ((?x23949 (* ?x23875 l_0_11_51)))
 (let ((?x23872 (* 2.0 l_0_11_35)))
 (let ((?x23947 (* ?x23872 l_0_11_50)))
 (let ((?x23800 (* 2.0 l_0_11_24)))
 (let ((?x23945 (* ?x23800 l_0_11_9)))
 (let ((?x23673 (* 2.0 l_0_11_23)))
 (let ((?x23936 (* ?x23673 l_0_11_8)))
 (let ((?x16618 (* 2.0 l_0_11_22)))
 (let ((?x23935 (* ?x16618 l_0_11_7)))
 (let ((?x23948 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_25) ?x23935) ?x23936) ?x23945) ?x23947)))
 (= (+ (+ (+ ?x23948 ?x23949) ?x23951) ?x23953) 0.0)))))))))))))))))
(assert
 (let ((?x23998 (* l_0_11_43 l_0_11_43)))
 (let ((?x23996 (* l_0_11_42 l_0_11_42)))
 (let ((?x23994 (* l_0_11_41 l_0_11_41)))
 (let ((?x23992 (* l_0_11_40 l_0_11_40)))
 (let ((?x23990 (* l_0_11_39 l_0_11_39)))
 (let ((?x23988 (* l_0_11_15 l_0_11_15)))
 (let ((?x23986 (* l_0_11_14 l_0_11_14)))
 (let ((?x23984 (* l_0_11_13 l_0_11_13)))
 (let ((?x23985 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x23984)))
 (let ((?x23999 (+ (+ (+ (+ (+ (- (- ?x23985 ?x23986) ?x23988) ?x23990) ?x23992) ?x23994) ?x23996) ?x23998)))
 (= ?x23999 0.0))))))))))))
(assert
 (let ((?x24032 (* 2.0 l_0_11_43)))
 (let ((?x24033 (* ?x24032 l_0_11_48)))
 (let ((?x24029 (* 2.0 l_0_11_42)))
 (let ((?x24030 (* ?x24029 l_0_11_47)))
 (let ((?x24026 (* 2.0 l_0_11_41)))
 (let ((?x24027 (* ?x24026 l_0_11_46)))
 (let ((?x24023 (* 2.0 l_0_11_40)))
 (let ((?x24024 (* ?x24023 l_0_11_45)))
 (let ((?x24020 (* 2.0 l_0_11_39)))
 (let ((?x24021 (* ?x24020 l_0_11_44)))
 (let ((?x24017 (* 2.0 l_0_11_15)))
 (let ((?x24018 (* ?x24017 l_0_11_20)))
 (let ((?x16628 (* 2.0 l_0_11_14)))
 (let ((?x16629 (* ?x16628 l_0_11_19)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x8680 (* ?x23770 l_0_11_18)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x16620 (* ?x23631 l_0_11_17)))
 (let ((?x24019 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_16) ?x16620) ?x8680) ?x16629) ?x24018)))
 (= (+ (+ (+ (+ (+ ?x24019 ?x24021) ?x24024) ?x24027) ?x24030) ?x24033) 0.0)))))))))))))))))))))
(assert
 (let ((?x24032 (* 2.0 l_0_11_43)))
 (let ((?x24080 (* ?x24032 l_0_11_54)))
 (let ((?x24029 (* 2.0 l_0_11_42)))
 (let ((?x24078 (* ?x24029 l_0_11_53)))
 (let ((?x24026 (* 2.0 l_0_11_41)))
 (let ((?x24076 (* ?x24026 l_0_11_52)))
 (let ((?x24023 (* 2.0 l_0_11_40)))
 (let ((?x24074 (* ?x24023 l_0_11_51)))
 (let ((?x24020 (* 2.0 l_0_11_39)))
 (let ((?x24072 (* ?x24020 l_0_11_50)))
 (let ((?x24017 (* 2.0 l_0_11_15)))
 (let ((?x24070 (* ?x24017 l_0_11_26)))
 (let ((?x16628 (* 2.0 l_0_11_14)))
 (let ((?x24060 (* ?x16628 l_0_11_25)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x24057 (* ?x23770 l_0_11_24)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x24053 (* ?x23631 l_0_11_23)))
 (let ((?x24071 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_22) ?x24053) ?x24057) ?x24060) ?x24070)))
 (= (+ (+ (+ (+ (+ ?x24071 ?x24072) ?x24074) ?x24076) ?x24078) ?x24080) 0.0)))))))))))))))))))))
(assert
 (let ((?x24112 (* l_0_11_49 l_0_11_49)))
 (let ((?x24110 (* l_0_11_48 l_0_11_48)))
 (let ((?x24108 (* l_0_11_47 l_0_11_47)))
 (let ((?x24106 (* l_0_11_46 l_0_11_46)))
 (let ((?x24104 (* l_0_11_45 l_0_11_45)))
 (let ((?x24102 (* l_0_11_44 l_0_11_44)))
 (let ((?x24100 (* l_0_11_21 l_0_11_21)))
 (let ((?x24098 (* l_0_11_20 l_0_11_20)))
 (let ((?x24096 (* l_0_11_19 l_0_11_19)))
 (let ((?x24094 (* l_0_11_18 l_0_11_18)))
 (let ((?x24095 (- (- (* (- l_0_11_16) l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x24094)))
 (let ((?x24109 (+ (+ (+ (+ (- (- (- ?x24095 ?x24096) ?x24098) ?x24100) ?x24102) ?x24104) ?x24106) ?x24108)))
 (= (+ (+ ?x24109 ?x24110) ?x24112) 0.0))))))))))))))
(assert
 (let ((?x24165 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24162 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24159 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24156 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24153 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24150 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24147 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24144 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24141 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23667 (* 2.0 l_0_11_18)))
 (let ((?x24138 (* ?x23667 l_0_11_24)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x24136 (* ?x16369 l_0_11_23)))
 (let ((?x24145 (- (- (- (- (* (* (- 2.0) l_0_11_16) l_0_11_22) ?x24136) ?x24138) ?x24141) ?x24144)))
 (let ((?x24166 (+ (+ (+ (+ (+ (+ (- ?x24145 ?x24147) ?x24150) ?x24153) ?x24156) ?x24159) ?x24162) ?x24165)))
 (= ?x24166 0.0)))))))))))))))))
(assert
 (let ((?x24226 (* l_0_11_56 l_0_11_56)))
 (let ((?x24224 (* l_0_11_55 l_0_11_55)))
 (let ((?x24222 (* l_0_11_54 l_0_11_54)))
 (let ((?x24220 (* l_0_11_53 l_0_11_53)))
 (let ((?x24218 (* l_0_11_52 l_0_11_52)))
 (let ((?x24216 (* l_0_11_51 l_0_11_51)))
 (let ((?x24214 (* l_0_11_50 l_0_11_50)))
 (let ((?x24212 (* l_0_11_28 l_0_11_28)))
 (let ((?x24210 (* l_0_11_27 l_0_11_27)))
 (let ((?x24208 (* l_0_11_26 l_0_11_26)))
 (let ((?x24197 (* l_0_11_25 l_0_11_25)))
 (let ((?x24194 (* l_0_11_24 l_0_11_24)))
 (let ((?x24196 (- (- (* (- l_0_11_22) l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x24194)))
 (let ((?x24219 (+ (+ (+ (- (- (- (- ?x24196 ?x24197) ?x24208) ?x24210) ?x24212) ?x24214) ?x24216) ?x24218)))
 (= (+ (+ (+ (+ ?x24219 ?x24220) ?x24222) ?x24224) ?x24226) 0.0))))))))))))))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23512 (* ?x23511 l_0_11_30)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_2) ?x23512) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23518 (* ?x23511 l_0_11_32)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_4) ?x23518) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23525 (* ?x23511 l_0_11_35)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_7) ?x23525) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23535 (* ?x23511 l_0_11_39)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_11) ?x23535) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23545 (* ?x23511 l_0_11_44)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_16) ?x23545) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23555 (* ?x23511 l_0_11_50)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_22) ?x23555) 0.0))))
(assert
 (let ((?x23574 (* l_0_11_31 l_0_11_31)))
 (let ((?x23572 (* l_0_11_30 l_0_11_30)))
 (let ((?x16959 (- (- (+ (* l_0_11_2 l_0_11_2) (* l_0_11_3 l_0_11_3)) ?x23572) ?x23574)))
 (= ?x16959 0.0)))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23596 (* ?x23595 l_0_11_33)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23593 (* ?x23592 l_0_11_32)))
 (let ((?x23589 (* 2.0 l_0_11_3)))
 (let ((?x23590 (* ?x23589 l_0_11_5)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_4) ?x23590) ?x23593) ?x23596) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23615 (* ?x23595 l_0_11_36)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23613 (* ?x23592 l_0_11_35)))
 (let ((?x23589 (* 2.0 l_0_11_3)))
 (let ((?x23611 (* ?x23589 l_0_11_8)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_7) ?x23611) ?x23613) ?x23615) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23636 (* ?x23595 l_0_11_40)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23634 (* ?x23592 l_0_11_39)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x23632 (* ?x23631 l_0_11_3)))
 (= (- (- (+ (* (* 2.0 l_0_11_11) l_0_11_2) ?x23632) ?x23634) ?x23636) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23648 (* ?x23595 l_0_11_45)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23646 (* ?x23592 l_0_11_44)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x16372 (* ?x16369 l_0_11_3)))
 (= (- (- (+ (* (* 2.0 l_0_11_16) l_0_11_2) ?x16372) ?x23646) ?x23648) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23678 (* ?x23595 l_0_11_51)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23676 (* ?x23592 l_0_11_50)))
 (let ((?x23673 (* 2.0 l_0_11_23)))
 (let ((?x23674 (* ?x23673 l_0_11_3)))
 (let ((?x23670 (* 2.0 l_0_11_2)))
 (let ((?x23671 (* ?x23670 l_0_11_22)))
 (= (- (- (+ ?x23671 ?x23674) ?x23676) ?x23678) 0.0))))))))))
(assert
 (let ((?x23736 (* l_0_11_6 l_0_11_6)))
 (let ((?x23734 (* l_0_11_5 l_0_11_5)))
 (let ((?x23732 (* l_0_11_4 l_0_11_4)))
 (let ((?x23730 (* l_0_11_34 l_0_11_34)))
 (let ((?x24262 (- (- (* (- l_0_11_32) l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x23730)))
 (= (+ (+ (+ ?x24262 ?x23732) ?x23734) ?x23736) 0.0)))))))
(assert
 (let ((?x23747 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x16434 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x16432 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x16414 (* ?x23686 l_0_11_37)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x16402 (* ?x23683 l_0_11_36)))
 (let ((?x17025 (+ (+ (- (- (* (* (- 2.0) l_0_11_32) l_0_11_35) ?x16402) ?x16414) ?x16432) ?x16434)))
 (= (+ ?x17025 ?x23747) 0.0))))))))))
(assert
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x23777 (* ?x23686 l_0_11_41)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x23775 (* ?x23683 l_0_11_40)))
 (let ((?x23680 (* 2.0 l_0_11_32)))
 (let ((?x23773 (* ?x23680 l_0_11_39)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x23771 (* ?x23770 l_0_11_6)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x23768 (* ?x23631 l_0_11_5)))
 (let ((?x9119 (- (- (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x23768) ?x23771) ?x23773) ?x23775)))
 (= (- ?x9119 ?x23777) 0.0)))))))))))))
(assert
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x23807 (* ?x23686 l_0_11_52)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x23805 (* ?x23683 l_0_11_51)))
 (let ((?x23680 (* 2.0 l_0_11_32)))
 (let ((?x23803 (* ?x23680 l_0_11_50)))
 (let ((?x23800 (* 2.0 l_0_11_24)))
 (let ((?x23801 (* ?x23800 l_0_11_6)))
 (let ((?x23673 (* 2.0 l_0_11_23)))
 (let ((?x23798 (* ?x23673 l_0_11_5)))
 (let ((?x24273 (- (- (+ (+ (* (* 2.0 l_0_11_22) l_0_11_4) ?x23798) ?x23801) ?x23803) ?x23805)))
 (= (- ?x24273 ?x23807) 0.0)))))))))))))
(assert
 (let ((?x23841 (* l_0_11_9 l_0_11_9)))
 (let ((?x23839 (* l_0_11_8 l_0_11_8)))
 (let ((?x23837 (* l_0_11_7 l_0_11_7)))
 (let ((?x23835 (* l_0_11_38 l_0_11_38)))
 (let ((?x23833 (* l_0_11_37 l_0_11_37)))
 (let ((?x23831 (* l_0_11_36 l_0_11_36)))
 (let ((?x17188 (- (- (- (* l_0_11_10 l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x23831) ?x23833)))
 (= (+ (+ (+ (- ?x17188 ?x23835) ?x23837) ?x23839) ?x23841) 0.0)))))))))
(assert
 (let ((?x23881 (* 2.0 l_0_11_38)))
 (let ((?x23882 (* ?x23881 l_0_11_42)))
 (let ((?x23878 (* 2.0 l_0_11_37)))
 (let ((?x23879 (* ?x23878 l_0_11_41)))
 (let ((?x23875 (* 2.0 l_0_11_36)))
 (let ((?x23876 (* ?x23875 l_0_11_40)))
 (let ((?x23872 (* 2.0 l_0_11_35)))
 (let ((?x23873 (* ?x23872 l_0_11_39)))
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23678 (* ?x23595 l_0_11_51)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23676 (* ?x23592 l_0_11_50)))
 (let ((?x23673 (* 2.0 l_0_11_23)))
 (let ((?x23674 (* ?x23673 l_0_11_3)))
 (let ((?x23670 (* 2.0 l_0_11_2)))
 (let ((?x23671 (* ?x23670 l_0_11_22)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x23864 (* ?x23770 l_0_11_9)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x23862 (* ?x23631 l_0_11_8)))
 (let ((?x23859 (* 2.0 l_0_11_11)))
 (let ((?x23860 (* ?x23859 l_0_11_7)))
 (let ((?x17270 (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_14) ?x23860) ?x23862) ?x23864)))
 (let ((?x9144 (- (- (- (- (- (+ (+ ?x17270 ?x23671) ?x23674) ?x23676) ?x23678) ?x23873) ?x23876) ?x23879)))
 (= (- ?x9144 ?x23882) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x23881 (* 2.0 l_0_11_38)))
 (let ((?x23917 (* ?x23881 l_0_11_47)))
 (let ((?x23878 (* 2.0 l_0_11_37)))
 (let ((?x23915 (* ?x23878 l_0_11_46)))
 (let ((?x23875 (* 2.0 l_0_11_36)))
 (let ((?x23913 (* ?x23875 l_0_11_45)))
 (let ((?x23872 (* 2.0 l_0_11_35)))
 (let ((?x23911 (* ?x23872 l_0_11_44)))
 (let ((?x23667 (* 2.0 l_0_11_18)))
 (let ((?x23909 (* ?x23667 l_0_11_9)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x23900 (* ?x16369 l_0_11_8)))
 (let ((?x23663 (* 2.0 l_0_11_16)))
 (let ((?x23896 (* ?x23663 l_0_11_7)))
 (let ((?x17322 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_19) ?x23896) ?x23900) ?x23909) ?x23911)))
 (= (- (- (- ?x17322 ?x23913) ?x23915) ?x23917) 0.0)))))))))))))))))
(assert
 (let ((?x23881 (* 2.0 l_0_11_38)))
 (let ((?x23953 (* ?x23881 l_0_11_53)))
 (let ((?x23878 (* 2.0 l_0_11_37)))
 (let ((?x23951 (* ?x23878 l_0_11_52)))
 (let ((?x23875 (* 2.0 l_0_11_36)))
 (let ((?x23949 (* ?x23875 l_0_11_51)))
 (let ((?x23872 (* 2.0 l_0_11_35)))
 (let ((?x23947 (* ?x23872 l_0_11_50)))
 (let ((?x23800 (* 2.0 l_0_11_24)))
 (let ((?x23945 (* ?x23800 l_0_11_9)))
 (let ((?x23673 (* 2.0 l_0_11_23)))
 (let ((?x23936 (* ?x23673 l_0_11_8)))
 (let ((?x16618 (* 2.0 l_0_11_22)))
 (let ((?x23935 (* ?x16618 l_0_11_7)))
 (let ((?x17373 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_25) ?x23935) ?x23936) ?x23945) ?x23947)))
 (= (- (- (- ?x17373 ?x23949) ?x23951) ?x23953) 0.0)))))))))))))))))
(assert
 (let ((?x23998 (* l_0_11_43 l_0_11_43)))
 (let ((?x23996 (* l_0_11_42 l_0_11_42)))
 (let ((?x23994 (* l_0_11_41 l_0_11_41)))
 (let ((?x23992 (* l_0_11_40 l_0_11_40)))
 (let ((?x23990 (* l_0_11_39 l_0_11_39)))
 (let ((?x23988 (* l_0_11_15 l_0_11_15)))
 (let ((?x23986 (* l_0_11_14 l_0_11_14)))
 (let ((?x23984 (* l_0_11_13 l_0_11_13)))
 (let ((?x17462 (+ (+ (+ (* l_0_11_11 l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x23984) ?x23986)))
 (= (- (- (- (- (- (+ ?x17462 ?x23988) ?x23990) ?x23992) ?x23994) ?x23996) ?x23998) 0.0)))))))))))
(assert
 (let ((?x24032 (* 2.0 l_0_11_43)))
 (let ((?x24033 (* ?x24032 l_0_11_48)))
 (let ((?x24029 (* 2.0 l_0_11_42)))
 (let ((?x24030 (* ?x24029 l_0_11_47)))
 (let ((?x24026 (* 2.0 l_0_11_41)))
 (let ((?x24027 (* ?x24026 l_0_11_46)))
 (let ((?x24023 (* 2.0 l_0_11_40)))
 (let ((?x24024 (* ?x24023 l_0_11_45)))
 (let ((?x24020 (* 2.0 l_0_11_39)))
 (let ((?x24021 (* ?x24020 l_0_11_44)))
 (let ((?x24017 (* 2.0 l_0_11_15)))
 (let ((?x24018 (* ?x24017 l_0_11_20)))
 (let ((?x16628 (* 2.0 l_0_11_14)))
 (let ((?x16629 (* ?x16628 l_0_11_19)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x8680 (* ?x23770 l_0_11_18)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x16620 (* ?x23631 l_0_11_17)))
 (let ((?x17492 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_16) ?x16620) ?x8680) ?x16629) ?x24018)))
 (= (- (- (- (- (- ?x17492 ?x24021) ?x24024) ?x24027) ?x24030) ?x24033) 0.0)))))))))))))))))))))
(assert
 (let ((?x24032 (* 2.0 l_0_11_43)))
 (let ((?x24080 (* ?x24032 l_0_11_54)))
 (let ((?x24029 (* 2.0 l_0_11_42)))
 (let ((?x24078 (* ?x24029 l_0_11_53)))
 (let ((?x24026 (* 2.0 l_0_11_41)))
 (let ((?x24076 (* ?x24026 l_0_11_52)))
 (let ((?x24023 (* 2.0 l_0_11_40)))
 (let ((?x24074 (* ?x24023 l_0_11_51)))
 (let ((?x24020 (* 2.0 l_0_11_39)))
 (let ((?x24072 (* ?x24020 l_0_11_50)))
 (let ((?x24017 (* 2.0 l_0_11_15)))
 (let ((?x24070 (* ?x24017 l_0_11_26)))
 (let ((?x16628 (* 2.0 l_0_11_14)))
 (let ((?x24060 (* ?x16628 l_0_11_25)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x24057 (* ?x23770 l_0_11_24)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x24053 (* ?x23631 l_0_11_23)))
 (let ((?x9504 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_22) ?x24053) ?x24057) ?x24060) ?x24070)))
 (= (- (- (- (- (- ?x9504 ?x24072) ?x24074) ?x24076) ?x24078) ?x24080) 0.0)))))))))))))))))))))
(assert
 (let ((?x24112 (* l_0_11_49 l_0_11_49)))
 (let ((?x24110 (* l_0_11_48 l_0_11_48)))
 (let ((?x24108 (* l_0_11_47 l_0_11_47)))
 (let ((?x24106 (* l_0_11_46 l_0_11_46)))
 (let ((?x24104 (* l_0_11_45 l_0_11_45)))
 (let ((?x24102 (* l_0_11_44 l_0_11_44)))
 (let ((?x24100 (* l_0_11_21 l_0_11_21)))
 (let ((?x24098 (* l_0_11_20 l_0_11_20)))
 (let ((?x24096 (* l_0_11_19 l_0_11_19)))
 (let ((?x24094 (* l_0_11_18 l_0_11_18)))
 (let ((?x9634 (+ (+ (+ (* l_0_11_16 l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x24094) ?x24096)))
 (let ((?x17684 (- (- (- (- (- (+ (+ ?x9634 ?x24098) ?x24100) ?x24102) ?x24104) ?x24106) ?x24108) ?x24110)))
 (= (- ?x17684 ?x24112) 0.0))))))))))))))
(assert
 (let ((?x24165 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24162 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24159 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24156 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24153 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24150 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24147 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24144 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24141 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23667 (* 2.0 l_0_11_18)))
 (let ((?x24138 (* ?x23667 l_0_11_24)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x24136 (* ?x16369 l_0_11_23)))
 (let ((?x9618 (+ (+ (+ (+ (* (* 2.0 l_0_11_16) l_0_11_22) ?x24136) ?x24138) ?x24141) ?x24144)))
 (let ((?x17733 (- (- (- (- (- (- (+ ?x9618 ?x24147) ?x24150) ?x24153) ?x24156) ?x24159) ?x24162) ?x24165)))
 (= ?x17733 0.0)))))))))))))))))
(assert
 (let ((?x24226 (* l_0_11_56 l_0_11_56)))
 (let ((?x24224 (* l_0_11_55 l_0_11_55)))
 (let ((?x24222 (* l_0_11_54 l_0_11_54)))
 (let ((?x24220 (* l_0_11_53 l_0_11_53)))
 (let ((?x24218 (* l_0_11_52 l_0_11_52)))
 (let ((?x24216 (* l_0_11_51 l_0_11_51)))
 (let ((?x24214 (* l_0_11_50 l_0_11_50)))
 (let ((?x24212 (* l_0_11_28 l_0_11_28)))
 (let ((?x24210 (* l_0_11_27 l_0_11_27)))
 (let ((?x24208 (* l_0_11_26 l_0_11_26)))
 (let ((?x24197 (* l_0_11_25 l_0_11_25)))
 (let ((?x24194 (* l_0_11_24 l_0_11_24)))
 (let ((?x24288 (+ (+ (+ (* l_0_11_22 l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x24194) ?x24197)))
 (let ((?x24295 (- (- (- (- (+ (+ (+ ?x24288 ?x24208) ?x24210) ?x24212) ?x24214) ?x24216) ?x24218) ?x24220)))
 (= (- (- (- ?x24295 ?x24222) ?x24224) ?x24226) 0.0))))))))))))))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23512 (* ?x23511 l_0_11_30)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_2) ?x23512) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23518 (* ?x23511 l_0_11_32)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_4) ?x23518) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23525 (* ?x23511 l_0_11_35)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_7) ?x23525) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23535 (* ?x23511 l_0_11_39)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_11) ?x23535) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23545 (* ?x23511 l_0_11_44)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_16) ?x23545) 0.0))))
(assert
 (let ((?x23511 (* 2.0 l_0_11_29)))
 (let ((?x23555 (* ?x23511 l_0_11_50)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_22) ?x23555) 0.0))))
(assert
 (let ((?x23574 (* l_0_11_31 l_0_11_31)))
 (let ((?x23572 (* l_0_11_30 l_0_11_30)))
 (let ((?x16959 (- (- (+ (* l_0_11_2 l_0_11_2) (* l_0_11_3 l_0_11_3)) ?x23572) ?x23574)))
 (= ?x16959 0.0)))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23596 (* ?x23595 l_0_11_33)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23593 (* ?x23592 l_0_11_32)))
 (let ((?x23589 (* 2.0 l_0_11_3)))
 (let ((?x23590 (* ?x23589 l_0_11_5)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_4) ?x23590) ?x23593) ?x23596) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23615 (* ?x23595 l_0_11_36)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23613 (* ?x23592 l_0_11_35)))
 (let ((?x23589 (* 2.0 l_0_11_3)))
 (let ((?x23611 (* ?x23589 l_0_11_8)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_7) ?x23611) ?x23613) ?x23615) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23636 (* ?x23595 l_0_11_40)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23634 (* ?x23592 l_0_11_39)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x23632 (* ?x23631 l_0_11_3)))
 (= (- (- (+ (* (* 2.0 l_0_11_11) l_0_11_2) ?x23632) ?x23634) ?x23636) 0.0))))))))
(assert
 (let ((?x23595 (* 2.0 l_0_11_31)))
 (let ((?x23648 (* ?x23595 l_0_11_45)))
 (let ((?x23592 (* 2.0 l_0_11_30)))
 (let ((?x23646 (* ?x23592 l_0_11_44)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x16372 (* ?x16369 l_0_11_3)))
 (= (- (- (+ (* (* 2.0 l_0_11_16) l_0_11_2) ?x16372) ?x23646) ?x23648) 0.0))))))))
(assert
 (let ((?x23736 (* l_0_11_6 l_0_11_6)))
 (let ((?x23734 (* l_0_11_5 l_0_11_5)))
 (let ((?x23732 (* l_0_11_4 l_0_11_4)))
 (let ((?x23730 (* l_0_11_34 l_0_11_34)))
 (let ((?x24262 (- (- (* (- l_0_11_32) l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x23730)))
 (= (+ (+ (+ ?x24262 ?x23732) ?x23734) ?x23736) 0.0)))))))
(assert
 (let ((?x23747 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x16434 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x16432 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x16414 (* ?x23686 l_0_11_37)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x16402 (* ?x23683 l_0_11_36)))
 (let ((?x17025 (+ (+ (- (- (* (* (- 2.0) l_0_11_32) l_0_11_35) ?x16402) ?x16414) ?x16432) ?x16434)))
 (= (+ ?x17025 ?x23747) 0.0))))))))))
(assert
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x23777 (* ?x23686 l_0_11_41)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x23775 (* ?x23683 l_0_11_40)))
 (let ((?x23680 (* 2.0 l_0_11_32)))
 (let ((?x23773 (* ?x23680 l_0_11_39)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x23771 (* ?x23770 l_0_11_6)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x23768 (* ?x23631 l_0_11_5)))
 (let ((?x9119 (- (- (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x23768) ?x23771) ?x23773) ?x23775)))
 (= (- ?x9119 ?x23777) 0.0)))))))))))))
(assert
 (let ((?x23686 (* 2.0 l_0_11_34)))
 (let ((?x23807 (* ?x23686 l_0_11_52)))
 (let ((?x23683 (* 2.0 l_0_11_33)))
 (let ((?x23805 (* ?x23683 l_0_11_51)))
 (let ((?x23680 (* 2.0 l_0_11_32)))
 (let ((?x23803 (* ?x23680 l_0_11_50)))
 (let ((?x23800 (* 2.0 l_0_11_24)))
 (let ((?x23801 (* ?x23800 l_0_11_6)))
 (let ((?x23673 (* 2.0 l_0_11_23)))
 (let ((?x23798 (* ?x23673 l_0_11_5)))
 (let ((?x24273 (- (- (+ (+ (* (* 2.0 l_0_11_22) l_0_11_4) ?x23798) ?x23801) ?x23803) ?x23805)))
 (= (- ?x24273 ?x23807) 0.0)))))))))))))
(assert
 (let ((?x23841 (* l_0_11_9 l_0_11_9)))
 (let ((?x23839 (* l_0_11_8 l_0_11_8)))
 (let ((?x23837 (* l_0_11_7 l_0_11_7)))
 (let ((?x23835 (* l_0_11_38 l_0_11_38)))
 (let ((?x23833 (* l_0_11_37 l_0_11_37)))
 (let ((?x23831 (* l_0_11_36 l_0_11_36)))
 (let ((?x17188 (- (- (- (* l_0_11_10 l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x23831) ?x23833)))
 (= (+ (+ (+ (- ?x17188 ?x23835) ?x23837) ?x23839) ?x23841) 0.0)))))))))
(assert
 (let ((?x23881 (* 2.0 l_0_11_38)))
 (let ((?x23882 (* ?x23881 l_0_11_42)))
 (let ((?x23878 (* 2.0 l_0_11_37)))
 (let ((?x23879 (* ?x23878 l_0_11_41)))
 (let ((?x23875 (* 2.0 l_0_11_36)))
 (let ((?x23876 (* ?x23875 l_0_11_40)))
 (let ((?x23872 (* 2.0 l_0_11_35)))
 (let ((?x23873 (* ?x23872 l_0_11_39)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x23864 (* ?x23770 l_0_11_9)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x23862 (* ?x23631 l_0_11_8)))
 (let ((?x23859 (* 2.0 l_0_11_11)))
 (let ((?x23860 (* ?x23859 l_0_11_7)))
 (let ((?x17270 (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_14) ?x23860) ?x23862) ?x23864)))
 (= (- (- (- (- ?x17270 ?x23873) ?x23876) ?x23879) ?x23882) 0.0)))))))))))))))))
(assert
 (let ((?x23881 (* 2.0 l_0_11_38)))
 (let ((?x23917 (* ?x23881 l_0_11_47)))
 (let ((?x23878 (* 2.0 l_0_11_37)))
 (let ((?x23915 (* ?x23878 l_0_11_46)))
 (let ((?x23875 (* 2.0 l_0_11_36)))
 (let ((?x23913 (* ?x23875 l_0_11_45)))
 (let ((?x23872 (* 2.0 l_0_11_35)))
 (let ((?x23911 (* ?x23872 l_0_11_44)))
 (let ((?x23667 (* 2.0 l_0_11_18)))
 (let ((?x23909 (* ?x23667 l_0_11_9)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x23900 (* ?x16369 l_0_11_8)))
 (let ((?x23663 (* 2.0 l_0_11_16)))
 (let ((?x23896 (* ?x23663 l_0_11_7)))
 (let ((?x17322 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_19) ?x23896) ?x23900) ?x23909) ?x23911)))
 (= (- (- (- ?x17322 ?x23913) ?x23915) ?x23917) 0.0)))))))))))))))))
(assert
 (let ((?x23881 (* 2.0 l_0_11_38)))
 (let ((?x23953 (* ?x23881 l_0_11_53)))
 (let ((?x23878 (* 2.0 l_0_11_37)))
 (let ((?x23951 (* ?x23878 l_0_11_52)))
 (let ((?x23875 (* 2.0 l_0_11_36)))
 (let ((?x23949 (* ?x23875 l_0_11_51)))
 (let ((?x23872 (* 2.0 l_0_11_35)))
 (let ((?x23947 (* ?x23872 l_0_11_50)))
 (let ((?x23800 (* 2.0 l_0_11_24)))
 (let ((?x23945 (* ?x23800 l_0_11_9)))
 (let ((?x23673 (* 2.0 l_0_11_23)))
 (let ((?x23936 (* ?x23673 l_0_11_8)))
 (let ((?x16618 (* 2.0 l_0_11_22)))
 (let ((?x23935 (* ?x16618 l_0_11_7)))
 (let ((?x17373 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_25) ?x23935) ?x23936) ?x23945) ?x23947)))
 (= (- (- (- ?x17373 ?x23949) ?x23951) ?x23953) 0.0)))))))))))))))))
(assert
 (let ((?x23998 (* l_0_11_43 l_0_11_43)))
 (let ((?x23996 (* l_0_11_42 l_0_11_42)))
 (let ((?x23994 (* l_0_11_41 l_0_11_41)))
 (let ((?x23992 (* l_0_11_40 l_0_11_40)))
 (let ((?x23990 (* l_0_11_39 l_0_11_39)))
 (let ((?x23988 (* l_0_11_15 l_0_11_15)))
 (let ((?x23986 (* l_0_11_14 l_0_11_14)))
 (let ((?x23984 (* l_0_11_13 l_0_11_13)))
 (let ((?x17462 (+ (+ (+ (* l_0_11_11 l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x23984) ?x23986)))
 (= (- (- (- (- (- (+ ?x17462 ?x23988) ?x23990) ?x23992) ?x23994) ?x23996) ?x23998) 0.0)))))))))))
(assert
 (let ((?x24032 (* 2.0 l_0_11_43)))
 (let ((?x24033 (* ?x24032 l_0_11_48)))
 (let ((?x24029 (* 2.0 l_0_11_42)))
 (let ((?x24030 (* ?x24029 l_0_11_47)))
 (let ((?x24026 (* 2.0 l_0_11_41)))
 (let ((?x24027 (* ?x24026 l_0_11_46)))
 (let ((?x24023 (* 2.0 l_0_11_40)))
 (let ((?x24024 (* ?x24023 l_0_11_45)))
 (let ((?x24020 (* 2.0 l_0_11_39)))
 (let ((?x24021 (* ?x24020 l_0_11_44)))
 (let ((?x24017 (* 2.0 l_0_11_15)))
 (let ((?x24018 (* ?x24017 l_0_11_20)))
 (let ((?x16628 (* 2.0 l_0_11_14)))
 (let ((?x16629 (* ?x16628 l_0_11_19)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x8680 (* ?x23770 l_0_11_18)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x16620 (* ?x23631 l_0_11_17)))
 (let ((?x17492 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_16) ?x16620) ?x8680) ?x16629) ?x24018)))
 (= (- (- (- (- (- ?x17492 ?x24021) ?x24024) ?x24027) ?x24030) ?x24033) 0.0)))))))))))))))))))))
(assert
 (let ((?x24032 (* 2.0 l_0_11_43)))
 (let ((?x24080 (* ?x24032 l_0_11_54)))
 (let ((?x24029 (* 2.0 l_0_11_42)))
 (let ((?x24078 (* ?x24029 l_0_11_53)))
 (let ((?x24026 (* 2.0 l_0_11_41)))
 (let ((?x24076 (* ?x24026 l_0_11_52)))
 (let ((?x24023 (* 2.0 l_0_11_40)))
 (let ((?x24074 (* ?x24023 l_0_11_51)))
 (let ((?x24020 (* 2.0 l_0_11_39)))
 (let ((?x24072 (* ?x24020 l_0_11_50)))
 (let ((?x24017 (* 2.0 l_0_11_15)))
 (let ((?x24070 (* ?x24017 l_0_11_26)))
 (let ((?x16628 (* 2.0 l_0_11_14)))
 (let ((?x24060 (* ?x16628 l_0_11_25)))
 (let ((?x23770 (* 2.0 l_0_11_13)))
 (let ((?x24057 (* ?x23770 l_0_11_24)))
 (let ((?x23631 (* 2.0 l_0_11_12)))
 (let ((?x24053 (* ?x23631 l_0_11_23)))
 (let ((?x9504 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_22) ?x24053) ?x24057) ?x24060) ?x24070)))
 (= (- (- (- (- (- ?x9504 ?x24072) ?x24074) ?x24076) ?x24078) ?x24080) 0.0)))))))))))))))))))))
(assert
 (let ((?x24112 (* l_0_11_49 l_0_11_49)))
 (let ((?x24110 (* l_0_11_48 l_0_11_48)))
 (let ((?x24108 (* l_0_11_47 l_0_11_47)))
 (let ((?x24106 (* l_0_11_46 l_0_11_46)))
 (let ((?x24104 (* l_0_11_45 l_0_11_45)))
 (let ((?x24102 (* l_0_11_44 l_0_11_44)))
 (let ((?x24100 (* l_0_11_21 l_0_11_21)))
 (let ((?x24098 (* l_0_11_20 l_0_11_20)))
 (let ((?x24096 (* l_0_11_19 l_0_11_19)))
 (let ((?x24094 (* l_0_11_18 l_0_11_18)))
 (let ((?x9634 (+ (+ (+ (* l_0_11_16 l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x24094) ?x24096)))
 (let ((?x17684 (- (- (- (- (- (+ (+ ?x9634 ?x24098) ?x24100) ?x24102) ?x24104) ?x24106) ?x24108) ?x24110)))
 (= (- ?x17684 ?x24112) 0.0))))))))))))))
(assert
 (let ((?x24165 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24162 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24159 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24156 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24153 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24150 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24147 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24144 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24141 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23667 (* 2.0 l_0_11_18)))
 (let ((?x24138 (* ?x23667 l_0_11_24)))
 (let ((?x16369 (* 2.0 l_0_11_17)))
 (let ((?x24136 (* ?x16369 l_0_11_23)))
 (let ((?x9618 (+ (+ (+ (+ (* (* 2.0 l_0_11_16) l_0_11_22) ?x24136) ?x24138) ?x24141) ?x24144)))
 (let ((?x17733 (- (- (- (- (- (- (+ ?x9618 ?x24147) ?x24150) ?x24153) ?x24156) ?x24159) ?x24162) ?x24165)))
 (= ?x17733 0.0)))))))))))))))))
(assert
 (let ((?x24226 (* l_0_11_56 l_0_11_56)))
 (let ((?x24224 (* l_0_11_55 l_0_11_55)))
 (let ((?x24222 (* l_0_11_54 l_0_11_54)))
 (let ((?x24220 (* l_0_11_53 l_0_11_53)))
 (let ((?x24218 (* l_0_11_52 l_0_11_52)))
 (let ((?x24216 (* l_0_11_51 l_0_11_51)))
 (let ((?x24214 (* l_0_11_50 l_0_11_50)))
 (let ((?x24212 (* l_0_11_28 l_0_11_28)))
 (let ((?x24210 (* l_0_11_27 l_0_11_27)))
 (let ((?x24208 (* l_0_11_26 l_0_11_26)))
 (let ((?x24197 (* l_0_11_25 l_0_11_25)))
 (let ((?x24194 (* l_0_11_24 l_0_11_24)))
 (let ((?x24288 (+ (+ (+ (* l_0_11_22 l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x24194) ?x24197)))
 (let ((?x24295 (- (- (- (- (+ (+ (+ ?x24288 ?x24208) ?x24210) ?x24212) ?x24214) ?x24216) ?x24218) ?x24220)))
 (= (- (- (- ?x24295 ?x24222) ?x24224) ?x24226) 0.0))))))))))))))))
(assert
 (= (- (* (* (- 1.0) l_0_11_57) l_0_11_57) (* l_0_11_85 l_0_11_85)) 0.0))
(assert
 (let ((?x24341 (- (* (* (- 2.0) l_0_11_57) l_0_11_58) (* (* 2.0 l_0_11_85) l_0_11_86))))
 (= ?x24341 0.0)))
(assert
 (let ((?x24356 (- (* (* (- 2.0) l_0_11_57) l_0_11_60) (* (* 2.0 l_0_11_85) l_0_11_88))))
 (= ?x24356 0.0)))
(assert
 (let ((?x24371 (- (* (* (- 2.0) l_0_11_57) l_0_11_63) (* (* 2.0 l_0_11_85) l_0_11_91))))
 (= ?x24371 0.0)))
(assert
 (let ((?x24386 (- (* (* (- 2.0) l_0_11_57) l_0_11_67) (* (* 2.0 l_0_11_85) l_0_11_95))))
 (= ?x24386 0.0)))
(assert
 (let ((?x24402 (- (* (* (- 2.0) l_0_11_100) l_0_11_85) (* (* 2.0 l_0_11_57) l_0_11_72))))
 (= ?x24402 0.0)))
(assert
 (let ((?x24422 (* l_0_11_87 l_0_11_87)))
 (let ((?x24420 (* l_0_11_86 l_0_11_86)))
 (let ((?x24419 (- (* (* (- 1.0) l_0_11_58) l_0_11_58) (* (* 1.0 l_0_11_59) l_0_11_59))))
 (= (- (- ?x24419 ?x24420) ?x24422) 0.0)))))
(assert
 (let ((?x24441 (- (* (* (- 2.0) l_0_11_58) l_0_11_60) (* (* 2.0 l_0_11_59) l_0_11_61))))
 (let ((?x24447 (- (- ?x24441 (* (* 2.0 l_0_11_86) l_0_11_88)) (* (* 2.0 l_0_11_87) l_0_11_89))))
 (= ?x24447 0.0))))
(assert
 (let ((?x24474 (- (* (* (- 2.0) l_0_11_58) l_0_11_63) (* (* 2.0 l_0_11_59) l_0_11_64))))
 (let ((?x24478 (- (- ?x24474 (* (* 2.0 l_0_11_86) l_0_11_91)) (* (* 2.0 l_0_11_87) l_0_11_92))))
 (= ?x24478 0.0))))
(assert
 (let ((?x24505 (- (* (* (- 2.0) l_0_11_58) l_0_11_67) (* (* 2.0 l_0_11_59) l_0_11_68))))
 (let ((?x24509 (- (- ?x24505 (* (* 2.0 l_0_11_86) l_0_11_95)) (* (* 2.0 l_0_11_87) l_0_11_96))))
 (= ?x24509 0.0))))
(assert
 (let ((?x24536 (- (* (* (- 2.0) l_0_11_100) l_0_11_86) (* (* 2.0 l_0_11_101) l_0_11_87))))
 (let ((?x24540 (- (- ?x24536 (* (* 2.0 l_0_11_58) l_0_11_72)) (* (* 2.0 l_0_11_59) l_0_11_73))))
 (= ?x24540 0.0))))
(assert
 (let ((?x24577 (* l_0_11_90 l_0_11_90)))
 (let ((?x24575 (* l_0_11_89 l_0_11_89)))
 (let ((?x24573 (* l_0_11_88 l_0_11_88)))
 (let ((?x24569 (- (* (* (- 1.0) l_0_11_60) l_0_11_60) (* (* 1.0 l_0_11_61) l_0_11_61))))
 (let ((?x24578 (- (- (- (- ?x24569 (* (* 1.0 l_0_11_62) l_0_11_62)) ?x24573) ?x24575) ?x24577)))
 (= ?x24578 0.0)))))))
(assert
 (let ((?x24603 (- (* (* (- 2.0) l_0_11_60) l_0_11_63) (* (* 2.0 l_0_11_61) l_0_11_64))))
 (let ((?x24608 (- (- ?x24603 (* (* 2.0 l_0_11_62) l_0_11_65)) (* (* 2.0 l_0_11_88) l_0_11_91))))
 (let ((?x24614 (- (- ?x24608 (* (* 2.0 l_0_11_89) l_0_11_92)) (* (* 2.0 l_0_11_90) l_0_11_93))))
 (= ?x24614 0.0)))))
(assert
 (let ((?x24653 (- (* (* (- 2.0) l_0_11_60) l_0_11_67) (* (* 2.0 l_0_11_61) l_0_11_68))))
 (let ((?x24657 (- (- ?x24653 (* (* 2.0 l_0_11_62) l_0_11_69)) (* (* 2.0 l_0_11_88) l_0_11_95))))
 (let ((?x24661 (- (- ?x24657 (* (* 2.0 l_0_11_89) l_0_11_96)) (* (* 2.0 l_0_11_90) l_0_11_97))))
 (= ?x24661 0.0)))))
(assert
 (let ((?x24701 (- (* (* (- 2.0) l_0_11_106) l_0_11_88) (* (* 2.0 l_0_11_107) l_0_11_89))))
 (let ((?x24705 (- (- ?x24701 (* (* 2.0 l_0_11_108) l_0_11_90)) (* (* 2.0 l_0_11_60) l_0_11_78))))
 (let ((?x24709 (- (- ?x24705 (* (* 2.0 l_0_11_61) l_0_11_79)) (* (* 2.0 l_0_11_62) l_0_11_80))))
 (= ?x24709 0.0)))))
(assert
 (let ((?x24763 (* l_0_11_94 l_0_11_94)))
 (let ((?x24761 (* l_0_11_93 l_0_11_93)))
 (let ((?x24759 (* l_0_11_92 l_0_11_92)))
 (let ((?x24757 (* l_0_11_91 l_0_11_91)))
 (let ((?x24750 (- (* (* (- 1.0) l_0_11_63) l_0_11_63) (* (* 1.0 l_0_11_64) l_0_11_64))))
 (let ((?x24756 (- (- ?x24750 (* (* 1.0 l_0_11_65) l_0_11_65)) (* (* 1.0 l_0_11_66) l_0_11_66))))
 (= (- (- (- (- ?x24756 ?x24757) ?x24759) ?x24761) ?x24763) 0.0))))))))
(assert
 (let ((?x24795 (- (* (* (- 2.0) l_0_11_100) l_0_11_91) (* (* 2.0 l_0_11_101) l_0_11_92))))
 (let ((?x24800 (- (- ?x24795 (* (* 2.0 l_0_11_102) l_0_11_93)) (* (* 2.0 l_0_11_103) l_0_11_94))))
 (let ((?x24804 (- (- ?x24800 (* (* 2.0 l_0_11_63) l_0_11_72)) (* (* 2.0 l_0_11_64) l_0_11_73))))
 (let ((?x24808 (- (- ?x24804 (* (* 2.0 l_0_11_65) l_0_11_74)) (* (* 2.0 l_0_11_66) l_0_11_75))))
 (= ?x24808 0.0))))))
(assert
 (let ((?x24879 (* l_0_11_99 l_0_11_99)))
 (let ((?x24877 (* l_0_11_98 l_0_11_98)))
 (let ((?x24875 (* l_0_11_97 l_0_11_97)))
 (let ((?x24873 (* l_0_11_96 l_0_11_96)))
 (let ((?x24871 (* l_0_11_95 l_0_11_95)))
 (let ((?x24861 (- (* (* (- 1.0) l_0_11_67) l_0_11_67) (* (* 1.0 l_0_11_68) l_0_11_68))))
 (let ((?x24867 (- (- ?x24861 (* (* 1.0 l_0_11_69) l_0_11_69)) (* (* 1.0 l_0_11_70) l_0_11_70))))
 (let ((?x24876 (- (- (- (- ?x24867 (* (* 1.0 l_0_11_71) l_0_11_71)) ?x24871) ?x24873) ?x24875)))
 (= (- (- ?x24876 ?x24877) ?x24879) 0.0))))))))))
(assert
 (let ((?x24918 (- (* (* (- 2.0) l_0_11_100) l_0_11_95) (* (* 2.0 l_0_11_101) l_0_11_96))))
 (let ((?x24922 (- (- ?x24918 (* (* 2.0 l_0_11_102) l_0_11_97)) (* (* 2.0 l_0_11_103) l_0_11_98))))
 (let ((?x24928 (- (- ?x24922 (* (* 2.0 l_0_11_104) l_0_11_99)) (* (* 2.0 l_0_11_67) l_0_11_72))))
 (let ((?x24934 (- (- ?x24928 (* (* 2.0 l_0_11_68) l_0_11_73)) (* (* 2.0 l_0_11_69) l_0_11_74))))
 (let ((?x24940 (- (- ?x24934 (* (* 2.0 l_0_11_70) l_0_11_75)) (* (* 2.0 l_0_11_71) l_0_11_76))))
 (= ?x24940 0.0)))))))
(assert
 (let ((?x24989 (- (* (* (- 2.0) l_0_11_106) l_0_11_95) (* (* 2.0 l_0_11_107) l_0_11_96))))
 (let ((?x24993 (- (- ?x24989 (* (* 2.0 l_0_11_108) l_0_11_97)) (* (* 2.0 l_0_11_109) l_0_11_98))))
 (let ((?x24998 (- (- ?x24993 (* (* 2.0 l_0_11_110) l_0_11_99)) (* (* 2.0 l_0_11_67) l_0_11_78))))
 (let ((?x25002 (- (- ?x24998 (* (* 2.0 l_0_11_68) l_0_11_79)) (* (* 2.0 l_0_11_69) l_0_11_80))))
 (let ((?x25006 (- (- ?x25002 (* (* 2.0 l_0_11_70) l_0_11_81)) (* (* 2.0 l_0_11_71) l_0_11_82))))
 (= ?x25006 0.0)))))))
(assert
 (let ((?x25077 (* l_0_11_105 l_0_11_105)))
 (let ((?x25075 (* l_0_11_104 l_0_11_104)))
 (let ((?x25073 (* l_0_11_103 l_0_11_103)))
 (let ((?x25071 (* l_0_11_102 l_0_11_102)))
 (let ((?x25072 (- (- (* (- l_0_11_100) l_0_11_100) (* l_0_11_101 l_0_11_101)) ?x25071)))
 (let ((?x25081 (- (- (- (- ?x25072 ?x25073) ?x25075) ?x25077) (* (* 1.0 l_0_11_72) l_0_11_72))))
 (let ((?x25087 (- (- ?x25081 (* (* 1.0 l_0_11_73) l_0_11_73)) (* (* 1.0 l_0_11_74) l_0_11_74))))
 (let ((?x25093 (- (- ?x25087 (* (* 1.0 l_0_11_75) l_0_11_75)) (* (* 1.0 l_0_11_76) l_0_11_76))))
 (= (- ?x25093 (* (* 1.0 l_0_11_77) l_0_11_77)) 0.0))))))))))
(assert
 (let ((?x25144 (- (* (* (- 2.0) l_0_11_100) l_0_11_106) (* (* 2.0 l_0_11_101) l_0_11_107))))
 (let ((?x25148 (- (- ?x25144 (* (* 2.0 l_0_11_102) l_0_11_108)) (* (* 2.0 l_0_11_103) l_0_11_109))))
 (let ((?x25153 (- (- ?x25148 (* (* 2.0 l_0_11_104) l_0_11_110)) (* (* 2.0 l_0_11_105) l_0_11_111))))
 (let ((?x25159 (- (- ?x25153 (* (* 2.0 l_0_11_72) l_0_11_78)) (* (* 2.0 l_0_11_73) l_0_11_79))))
 (let ((?x25165 (- (- ?x25159 (* (* 2.0 l_0_11_74) l_0_11_80)) (* (* 2.0 l_0_11_75) l_0_11_81))))
 (let ((?x25171 (- (- ?x25165 (* (* 2.0 l_0_11_76) l_0_11_82)) (* (* 2.0 l_0_11_77) l_0_11_83))))
 (= ?x25171 0.0))))))))
(assert
 (let ((?x25253 (* l_0_11_112 l_0_11_112)))
 (let ((?x25251 (* l_0_11_111 l_0_11_111)))
 (let ((?x25249 (* l_0_11_110 l_0_11_110)))
 (let ((?x25247 (* l_0_11_109 l_0_11_109)))
 (let ((?x25245 (* l_0_11_108 l_0_11_108)))
 (let ((?x25246 (- (- (* (- l_0_11_106) l_0_11_106) (* l_0_11_107 l_0_11_107)) ?x25245)))
 (let ((?x25257 (- (- (- (- (- ?x25246 ?x25247) ?x25249) ?x25251) ?x25253) (* (* 1.0 l_0_11_78) l_0_11_78))))
 (let ((?x25263 (- (- ?x25257 (* (* 1.0 l_0_11_79) l_0_11_79)) (* (* 1.0 l_0_11_80) l_0_11_80))))
 (let ((?x25269 (- (- ?x25263 (* (* 1.0 l_0_11_81) l_0_11_81)) (* (* 1.0 l_0_11_82) l_0_11_82))))
 (let ((?x25275 (- (- ?x25269 (* (* 1.0 l_0_11_83) l_0_11_83)) (* (* 1.0 l_0_11_84) l_0_11_84))))
 (= ?x25275 0.0))))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_28 0.0))
(assert
 (>= l_0_11_29 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_34 0.0))
(assert
 (>= l_0_11_38 0.0))
(assert
 (>= l_0_11_43 0.0))
(assert
 (>= l_0_11_49 0.0))
(assert
 (>= l_0_11_56 0.0))
(assert
 (>= l_0_11_57 0.0))
(assert
 (>= l_0_11_59 0.0))
(assert
 (>= l_0_11_62 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_71 0.0))
(assert
 (>= l_0_11_77 0.0))
(assert
 (>= l_0_11_84 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_87 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_94 0.0))
(assert
 (>= l_0_11_99 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (>= l_0_11_112 0.0))
(assert
 (let ((?x25329 (- (- _a_0_ (* (* 2.0 l_0_12_106) l_0_12_85)) (* (* 2.0 l_0_12_113) l_0_12_134))))
 (= (- ?x25329 (* (* 2.0 l_0_12_57) l_0_12_78)) 0.0)))
(assert
 (let ((?x25346 (- (- _a_1_ (* (* 2.0 l_0_12_106) l_0_12_91)) (* (* 2.0 l_0_12_107) l_0_12_92))))
 (let ((?x25352 (- (- ?x25346 (* (* 2.0 l_0_12_108) l_0_12_93)) (* (* 2.0 l_0_12_109) l_0_12_94))))
 (let ((?x25358 (- (- ?x25352 (* (* 2.0 l_0_12_119) l_0_12_134)) (* (* 2.0 l_0_12_120) l_0_12_135))))
 (let ((?x25364 (- (- ?x25358 (* (* 2.0 l_0_12_121) l_0_12_136)) (* (* 2.0 l_0_12_122) l_0_12_137))))
 (let ((?x25370 (- (- ?x25364 (* (* 2.0 l_0_12_63) l_0_12_78)) (* (* 2.0 l_0_12_64) l_0_12_79))))
 (let ((?x25376 (- (- ?x25370 (* (* 2.0 l_0_12_65) l_0_12_80)) (* (* 2.0 l_0_12_66) l_0_12_81))))
 (= (+ ?x25376 1.0) 0.0))))))))
(assert
 (let ((?x25401 (* l_0_12_29 l_0_12_29)))
 (let ((?x18029 (* l_0_12_1 l_0_12_1)))
 (let ((?x18041 (+ _a_2_ ?x18029)))
 (let ((?x18048 (- (- ?x18041 (* (* 2.0 l_0_12_106) l_0_12_86)) (* (* 2.0 l_0_12_107) l_0_12_87))))
 (let ((?x25400 (- (- ?x18048 (* (* 2.0 l_0_12_114) l_0_12_134)) (* (* 2.0 l_0_12_115) l_0_12_135))))
 (let ((?x25408 (- (- (- ?x25400 ?x25401) (* (* 2.0 l_0_12_58) l_0_12_78)) (* (* 2.0 l_0_12_59) l_0_12_79))))
 (= ?x25408 0.0))))))))
(assert
 (let ((?x25401 (* l_0_12_29 l_0_12_29)))
 (let ((?x25427 (- (- (* l_0_12_1 l_0_12_1) (* (* 2.0 l_0_12_119) l_0_12_123)) (* (* 2.0 l_0_12_120) l_0_12_124))))
 (let ((?x25431 (- (- ?x25427 (* (* 2.0 l_0_12_121) l_0_12_125)) (* (* 2.0 l_0_12_122) l_0_12_126))))
 (let ((?x25436 (- (- (- ?x25431 ?x25401) (* (* 2.0 l_0_12_63) l_0_12_67)) (* (* 2.0 l_0_12_64) l_0_12_68))))
 (let ((?x25440 (- (- ?x25436 (* (* 2.0 l_0_12_65) l_0_12_69)) (* (* 2.0 l_0_12_66) l_0_12_70))))
 (let ((?x25446 (- (- ?x25440 (* (* 2.0 l_0_12_91) l_0_12_95)) (* (* 2.0 l_0_12_92) l_0_12_96))))
 (let ((?x25452 (- (- ?x25446 (* (* 2.0 l_0_12_93) l_0_12_97)) (* (* 2.0 l_0_12_94) l_0_12_98))))
 (= (+ ?x25452 1.0) 0.0)))))))))
(assert
 (let ((?x25401 (* l_0_12_29 l_0_12_29)))
 (let ((?x18193 (- (* (- l_0_12_1) l_0_12_1) (* (* 2.0 l_0_12_100) l_0_12_88))))
 (let ((?x25469 (- (- ?x18193 (* (* 2.0 l_0_12_101) l_0_12_89)) (* (* 2.0 l_0_12_102) l_0_12_90))))
 (let ((?x25475 (- (- ?x25469 (* (* 2.0 l_0_12_116) l_0_12_128)) (* (* 2.0 l_0_12_117) l_0_12_129))))
 (let ((?x25482 (- (+ (- ?x25475 (* (* 2.0 l_0_12_118) l_0_12_130)) ?x25401) (* (* 2.0 l_0_12_60) l_0_12_72))))
 (let ((?x25488 (- (- ?x25482 (* (* 2.0 l_0_12_61) l_0_12_73)) (* (* 2.0 l_0_12_62) l_0_12_74))))
 (= (- ?x25488 1.0) 0.0))))))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25519 (* ?x25518 l_0_12_30)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_2) ?x25519) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25525 (* ?x25518 l_0_12_32)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_4) ?x25525) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25536 (* ?x25518 l_0_12_35)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_7) ?x25536) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25542 (* ?x25518 l_0_12_39)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_11) ?x25542) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25552 (* ?x25518 l_0_12_44)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_16) ?x25552) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25562 (* ?x25518 l_0_12_50)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_22) ?x25562) 0.0))))
(assert
 (let ((?x25581 (* l_0_12_31 l_0_12_31)))
 (let ((?x25579 (* l_0_12_30 l_0_12_30)))
 (let ((?x25582 (+ (+ (- (* (- l_0_12_2) l_0_12_2) (* l_0_12_3 l_0_12_3)) ?x25579) ?x25581)))
 (= ?x25582 0.0)))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25603 (* ?x25602 l_0_12_33)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25600 (* ?x25599 l_0_12_32)))
 (let ((?x25596 (* 2.0 l_0_12_3)))
 (let ((?x25597 (* ?x25596 l_0_12_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_2) l_0_12_4) ?x25597) ?x25600) ?x25603) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25626 (* ?x25602 l_0_12_36)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25624 (* ?x25599 l_0_12_35)))
 (let ((?x25596 (* 2.0 l_0_12_3)))
 (let ((?x25617 (* ?x25596 l_0_12_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_2) l_0_12_7) ?x25617) ?x25624) ?x25626) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25645 (* ?x25602 l_0_12_40)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25643 (* ?x25599 l_0_12_39)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x25641 (* ?x10946 l_0_12_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_11) l_0_12_2) ?x25641) ?x25643) ?x25645) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25670 (* ?x25602 l_0_12_45)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25668 (* ?x25599 l_0_12_44)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x25666 (* ?x25660 l_0_12_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_16) l_0_12_2) ?x25666) ?x25668) ?x25670) 0.0))))))))
(assert
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x25712 (* ?x25711 l_0_12_46)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x25709 (* ?x25708 l_0_12_45)))
 (let ((?x25705 (* 2.0 l_0_12_32)))
 (let ((?x25706 (* ?x25705 l_0_12_44)))
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25703 (* ?x25602 l_0_12_51)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25701 (* ?x25599 l_0_12_50)))
 (let ((?x25698 (* 2.0 l_0_12_23)))
 (let ((?x25699 (* ?x25698 l_0_12_3)))
 (let ((?x25695 (* 2.0 l_0_12_2)))
 (let ((?x25696 (* ?x25695 l_0_12_22)))
 (let ((?x25692 (* 2.0 l_0_12_18)))
 (let ((?x25693 (* ?x25692 l_0_12_6)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x25685 (* ?x25660 l_0_12_5)))
 (let ((?x25682 (* 2.0 l_0_12_16)))
 (let ((?x25684 (* ?x25682 l_0_12_4)))
 (let ((?x25707 (- (+ (+ (- (- (+ (+ ?x25684 ?x25685) ?x25693) ?x25696) ?x25699) ?x25701) ?x25703) ?x25706)))
 (= (- (- ?x25707 ?x25709) ?x25712) 0.0)))))))))))))))))))))))
(assert
 (let ((?x25743 (* l_0_12_6 l_0_12_6)))
 (let ((?x25741 (* l_0_12_5 l_0_12_5)))
 (let ((?x25739 (* l_0_12_4 l_0_12_4)))
 (let ((?x25737 (* l_0_12_34 l_0_12_34)))
 (let ((?x25740 (- (+ (+ (* l_0_12_32 l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x25737) ?x25739)))
 (= (- (- ?x25740 ?x25741) ?x25743) 0.0)))))))
(assert
 (let ((?x25766 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x25763 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x25760 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x25757 (* ?x25711 l_0_12_37)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x25755 (* ?x25708 l_0_12_36)))
 (let ((?x25764 (- (- (+ (+ (* (* 2.0 l_0_12_32) l_0_12_35) ?x25755) ?x25757) ?x25760) ?x25763)))
 (= (- ?x25764 ?x25766) 0.0))))))))))
(assert
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x25782 (* ?x25711 l_0_12_41)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x11094 (* ?x25708 l_0_12_40)))
 (let ((?x25705 (* 2.0 l_0_12_32)))
 (let ((?x11125 (* ?x25705 l_0_12_39)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x11006 (* ?x18404 l_0_12_6)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x11083 (* ?x10946 l_0_12_5)))
 (let ((?x25781 (+ (+ (- (- (* (* (- 2.0) l_0_12_11) l_0_12_4) ?x11083) ?x11006) ?x11125) ?x11094)))
 (= (+ ?x25781 ?x25782) 0.0)))))))))))))
(assert
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x25712 (* ?x25711 l_0_12_46)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x25709 (* ?x25708 l_0_12_45)))
 (let ((?x25705 (* 2.0 l_0_12_32)))
 (let ((?x25706 (* ?x25705 l_0_12_44)))
 (let ((?x25692 (* 2.0 l_0_12_18)))
 (let ((?x25693 (* ?x25692 l_0_12_6)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x25685 (* ?x25660 l_0_12_5)))
 (let ((?x25801 (+ (+ (- (- (* (* (- 2.0) l_0_12_16) l_0_12_4) ?x25685) ?x25693) ?x25706) ?x25709)))
 (= (+ ?x25801 ?x25712) 0.0)))))))))))))
(assert
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x11190 (* ?x25711 l_0_12_52)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x18461 (* ?x25708 l_0_12_51)))
 (let ((?x25705 (* 2.0 l_0_12_32)))
 (let ((?x18447 (* ?x25705 l_0_12_50)))
 (let ((?x11186 (* 2.0 l_0_12_24)))
 (let ((?x18464 (* ?x11186 l_0_12_6)))
 (let ((?x25698 (* 2.0 l_0_12_23)))
 (let ((?x18452 (* ?x25698 l_0_12_5)))
 (let ((?x11189 (+ (+ (- (- (* (* (- 2.0) l_0_12_22) l_0_12_4) ?x18452) ?x18464) ?x18447) ?x18461)))
 (= (+ ?x11189 ?x11190) 0.0)))))))))))))
(assert
 (let ((?x25840 (* l_0_12_9 l_0_12_9)))
 (let ((?x25838 (* l_0_12_8 l_0_12_8)))
 (let ((?x25836 (* l_0_12_7 l_0_12_7)))
 (let ((?x25834 (* l_0_12_38 l_0_12_38)))
 (let ((?x25832 (* l_0_12_37 l_0_12_37)))
 (let ((?x25830 (* l_0_12_36 l_0_12_36)))
 (let ((?x25831 (+ (+ (* (- l_0_12_10) l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x25830)))
 (= (- (- (- (+ (+ ?x25831 ?x25832) ?x25834) ?x25836) ?x25838) ?x25840) 0.0)))))))))
(assert
 (let ((?x25875 (* 2.0 l_0_12_38)))
 (let ((?x25876 (* ?x25875 l_0_12_42)))
 (let ((?x25872 (* 2.0 l_0_12_37)))
 (let ((?x25873 (* ?x25872 l_0_12_41)))
 (let ((?x25869 (* 2.0 l_0_12_36)))
 (let ((?x25870 (* ?x25869 l_0_12_40)))
 (let ((?x25866 (* 2.0 l_0_12_35)))
 (let ((?x25867 (* ?x25866 l_0_12_39)))
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x25712 (* ?x25711 l_0_12_46)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x25709 (* ?x25708 l_0_12_45)))
 (let ((?x25705 (* 2.0 l_0_12_32)))
 (let ((?x25706 (* ?x25705 l_0_12_44)))
 (let ((?x25692 (* 2.0 l_0_12_18)))
 (let ((?x25693 (* ?x25692 l_0_12_6)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x25685 (* ?x25660 l_0_12_5)))
 (let ((?x25682 (* 2.0 l_0_12_16)))
 (let ((?x25684 (* ?x25682 l_0_12_4)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x25858 (* ?x18404 l_0_12_9)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x25856 (* ?x10946 l_0_12_8)))
 (let ((?x25853 (* 2.0 l_0_12_11)))
 (let ((?x25854 (* ?x25853 l_0_12_7)))
 (let ((?x25860 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_14) ?x25854) ?x25856) ?x25858) ?x25684)))
 (let ((?x25871 (+ (+ (- (- (- (+ (+ ?x25860 ?x25685) ?x25693) ?x25706) ?x25709) ?x25712) ?x25867) ?x25870)))
 (= (+ (+ ?x25871 ?x25873) ?x25876) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x25875 (* 2.0 l_0_12_38)))
 (let ((?x25920 (* ?x25875 l_0_12_47)))
 (let ((?x25872 (* 2.0 l_0_12_37)))
 (let ((?x25918 (* ?x25872 l_0_12_46)))
 (let ((?x25869 (* 2.0 l_0_12_36)))
 (let ((?x25916 (* ?x25869 l_0_12_45)))
 (let ((?x25866 (* 2.0 l_0_12_35)))
 (let ((?x25914 (* ?x25866 l_0_12_44)))
 (let ((?x25692 (* 2.0 l_0_12_18)))
 (let ((?x25912 (* ?x25692 l_0_12_9)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x25910 (* ?x25660 l_0_12_8)))
 (let ((?x25682 (* 2.0 l_0_12_16)))
 (let ((?x25908 (* ?x25682 l_0_12_7)))
 (let ((?x25915 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_19) ?x25908) ?x25910) ?x25912) ?x25914)))
 (= (+ (+ (+ ?x25915 ?x25916) ?x25918) ?x25920) 0.0)))))))))))))))))
(assert
 (let ((?x25875 (* 2.0 l_0_12_38)))
 (let ((?x25942 (* ?x25875 l_0_12_53)))
 (let ((?x25872 (* 2.0 l_0_12_37)))
 (let ((?x25940 (* ?x25872 l_0_12_52)))
 (let ((?x25869 (* 2.0 l_0_12_36)))
 (let ((?x25938 (* ?x25869 l_0_12_51)))
 (let ((?x25866 (* 2.0 l_0_12_35)))
 (let ((?x25936 (* ?x25866 l_0_12_50)))
 (let ((?x11186 (* 2.0 l_0_12_24)))
 (let ((?x11378 (* ?x11186 l_0_12_9)))
 (let ((?x25698 (* 2.0 l_0_12_23)))
 (let ((?x11432 (* ?x25698 l_0_12_8)))
 (let ((?x18492 (* 2.0 l_0_12_22)))
 (let ((?x18497 (* ?x18492 l_0_12_7)))
 (let ((?x25937 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_25) ?x18497) ?x11432) ?x11378) ?x25936)))
 (= (+ (+ (+ ?x25937 ?x25938) ?x25940) ?x25942) 0.0)))))))))))))))))
(assert
 (let ((?x25986 (* l_0_12_43 l_0_12_43)))
 (let ((?x25984 (* l_0_12_42 l_0_12_42)))
 (let ((?x25982 (* l_0_12_41 l_0_12_41)))
 (let ((?x25980 (* l_0_12_40 l_0_12_40)))
 (let ((?x25978 (* l_0_12_39 l_0_12_39)))
 (let ((?x25976 (* l_0_12_15 l_0_12_15)))
 (let ((?x25974 (* l_0_12_14 l_0_12_14)))
 (let ((?x25965 (* l_0_12_13 l_0_12_13)))
 (let ((?x25973 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x25965)))
 (let ((?x25987 (+ (+ (+ (+ (+ (- (- ?x25973 ?x25974) ?x25976) ?x25978) ?x25980) ?x25982) ?x25984) ?x25986)))
 (= ?x25987 0.0))))))))))))
(assert
 (let ((?x26031 (* 2.0 l_0_12_43)))
 (let ((?x26032 (* ?x26031 l_0_12_48)))
 (let ((?x26028 (* 2.0 l_0_12_42)))
 (let ((?x26029 (* ?x26028 l_0_12_47)))
 (let ((?x26025 (* 2.0 l_0_12_41)))
 (let ((?x26026 (* ?x26025 l_0_12_46)))
 (let ((?x26022 (* 2.0 l_0_12_40)))
 (let ((?x26023 (* ?x26022 l_0_12_45)))
 (let ((?x26019 (* 2.0 l_0_12_39)))
 (let ((?x26020 (* ?x26019 l_0_12_44)))
 (let ((?x26016 (* 2.0 l_0_12_15)))
 (let ((?x26017 (* ?x26016 l_0_12_20)))
 (let ((?x26013 (* 2.0 l_0_12_14)))
 (let ((?x26014 (* ?x26013 l_0_12_19)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x26011 (* ?x18404 l_0_12_18)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x26009 (* ?x10946 l_0_12_17)))
 (let ((?x26018 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_16) ?x26009) ?x26011) ?x26014) ?x26017)))
 (= (+ (+ (+ (+ (+ ?x26018 ?x26020) ?x26023) ?x26026) ?x26029) ?x26032) 0.0)))))))))))))))))))))
(assert
 (let ((?x26031 (* 2.0 l_0_12_43)))
 (let ((?x26082 (* ?x26031 l_0_12_54)))
 (let ((?x26028 (* 2.0 l_0_12_42)))
 (let ((?x26080 (* ?x26028 l_0_12_53)))
 (let ((?x26025 (* 2.0 l_0_12_41)))
 (let ((?x26078 (* ?x26025 l_0_12_52)))
 (let ((?x26022 (* 2.0 l_0_12_40)))
 (let ((?x26076 (* ?x26022 l_0_12_51)))
 (let ((?x26019 (* 2.0 l_0_12_39)))
 (let ((?x26074 (* ?x26019 l_0_12_50)))
 (let ((?x26016 (* 2.0 l_0_12_15)))
 (let ((?x26072 (* ?x26016 l_0_12_26)))
 (let ((?x26013 (* 2.0 l_0_12_14)))
 (let ((?x26062 (* ?x26013 l_0_12_25)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x26059 (* ?x18404 l_0_12_24)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x26055 (* ?x10946 l_0_12_23)))
 (let ((?x26073 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_22) ?x26055) ?x26059) ?x26062) ?x26072)))
 (= (+ (+ (+ (+ (+ ?x26073 ?x26074) ?x26076) ?x26078) ?x26080) ?x26082) 0.0)))))))))))))))))))))
(assert
 (let ((?x26112 (* l_0_12_49 l_0_12_49)))
 (let ((?x26110 (* l_0_12_48 l_0_12_48)))
 (let ((?x26108 (* l_0_12_47 l_0_12_47)))
 (let ((?x26106 (* l_0_12_46 l_0_12_46)))
 (let ((?x26104 (* l_0_12_45 l_0_12_45)))
 (let ((?x26102 (* l_0_12_44 l_0_12_44)))
 (let ((?x26100 (* l_0_12_21 l_0_12_21)))
 (let ((?x18554 (* l_0_12_20 l_0_12_20)))
 (let ((?x1463 (* l_0_12_19 l_0_12_19)))
 (let ((?x11438 (* l_0_12_18 l_0_12_18)))
 (let ((?x18556 (- (- (* (- l_0_12_16) l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x11438)))
 (let ((?x26109 (+ (+ (+ (+ (- (- (- ?x18556 ?x1463) ?x18554) ?x26100) ?x26102) ?x26104) ?x26106) ?x26108)))
 (= (+ (+ ?x26109 ?x26110) ?x26112) 0.0))))))))))))))
(assert
 (let ((?x26161 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x26158 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x26155 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x26152 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x26149 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x26146 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x26143 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x26140 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x26137 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x25692 (* 2.0 l_0_12_18)))
 (let ((?x26134 (* ?x25692 l_0_12_24)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x26132 (* ?x25660 l_0_12_23)))
 (let ((?x26141 (- (- (- (- (* (* (- 2.0) l_0_12_16) l_0_12_22) ?x26132) ?x26134) ?x26137) ?x26140)))
 (let ((?x26162 (+ (+ (+ (+ (+ (+ (- ?x26141 ?x26143) ?x26146) ?x26149) ?x26152) ?x26155) ?x26158) ?x26161)))
 (= ?x26162 0.0)))))))))))))))))
(assert
 (let ((?x26205 (* l_0_12_56 l_0_12_56)))
 (let ((?x26203 (* l_0_12_55 l_0_12_55)))
 (let ((?x26201 (* l_0_12_54 l_0_12_54)))
 (let ((?x26199 (* l_0_12_53 l_0_12_53)))
 (let ((?x26197 (* l_0_12_52 l_0_12_52)))
 (let ((?x26195 (* l_0_12_51 l_0_12_51)))
 (let ((?x26193 (* l_0_12_50 l_0_12_50)))
 (let ((?x26191 (* l_0_12_28 l_0_12_28)))
 (let ((?x26189 (* l_0_12_27 l_0_12_27)))
 (let ((?x26187 (* l_0_12_26 l_0_12_26)))
 (let ((?x26185 (* l_0_12_25 l_0_12_25)))
 (let ((?x26183 (* l_0_12_24 l_0_12_24)))
 (let ((?x26184 (- (- (* (- l_0_12_22) l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x26183)))
 (let ((?x26198 (+ (+ (+ (- (- (- (- ?x26184 ?x26185) ?x26187) ?x26189) ?x26191) ?x26193) ?x26195) ?x26197)))
 (= (+ (+ (+ (+ ?x26198 ?x26199) ?x26201) ?x26203) ?x26205) 0.0))))))))))))))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25519 (* ?x25518 l_0_12_30)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_2) ?x25519) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25525 (* ?x25518 l_0_12_32)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_4) ?x25525) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25536 (* ?x25518 l_0_12_35)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_7) ?x25536) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25542 (* ?x25518 l_0_12_39)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_11) ?x25542) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25552 (* ?x25518 l_0_12_44)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_16) ?x25552) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25562 (* ?x25518 l_0_12_50)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_22) ?x25562) 0.0))))
(assert
 (let ((?x25581 (* l_0_12_31 l_0_12_31)))
 (let ((?x25579 (* l_0_12_30 l_0_12_30)))
 (let ((?x18724 (- (- (+ (* l_0_12_2 l_0_12_2) (* l_0_12_3 l_0_12_3)) ?x25579) ?x25581)))
 (= ?x18724 0.0)))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25603 (* ?x25602 l_0_12_33)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25600 (* ?x25599 l_0_12_32)))
 (let ((?x25596 (* 2.0 l_0_12_3)))
 (let ((?x25597 (* ?x25596 l_0_12_5)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_4) ?x25597) ?x25600) ?x25603) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25626 (* ?x25602 l_0_12_36)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25624 (* ?x25599 l_0_12_35)))
 (let ((?x25596 (* 2.0 l_0_12_3)))
 (let ((?x25617 (* ?x25596 l_0_12_8)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_7) ?x25617) ?x25624) ?x25626) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25645 (* ?x25602 l_0_12_40)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25643 (* ?x25599 l_0_12_39)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x25641 (* ?x10946 l_0_12_3)))
 (= (- (- (+ (* (* 2.0 l_0_12_11) l_0_12_2) ?x25641) ?x25643) ?x25645) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25670 (* ?x25602 l_0_12_45)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25668 (* ?x25599 l_0_12_44)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x25666 (* ?x25660 l_0_12_3)))
 (= (- (- (+ (* (* 2.0 l_0_12_16) l_0_12_2) ?x25666) ?x25668) ?x25670) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25703 (* ?x25602 l_0_12_51)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25701 (* ?x25599 l_0_12_50)))
 (let ((?x25698 (* 2.0 l_0_12_23)))
 (let ((?x25699 (* ?x25698 l_0_12_3)))
 (let ((?x25695 (* 2.0 l_0_12_2)))
 (let ((?x25696 (* ?x25695 l_0_12_22)))
 (= (- (- (+ ?x25696 ?x25699) ?x25701) ?x25703) 0.0))))))))))
(assert
 (let ((?x25743 (* l_0_12_6 l_0_12_6)))
 (let ((?x25741 (* l_0_12_5 l_0_12_5)))
 (let ((?x25739 (* l_0_12_4 l_0_12_4)))
 (let ((?x25737 (* l_0_12_34 l_0_12_34)))
 (let ((?x26270 (- (- (* (- l_0_12_32) l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x25737)))
 (= (+ (+ (+ ?x26270 ?x25739) ?x25741) ?x25743) 0.0)))))))
(assert
 (let ((?x25766 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x25763 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x25760 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x25757 (* ?x25711 l_0_12_37)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x25755 (* ?x25708 l_0_12_36)))
 (let ((?x26284 (+ (+ (- (- (* (* (- 2.0) l_0_12_32) l_0_12_35) ?x25755) ?x25757) ?x25760) ?x25763)))
 (= (+ ?x26284 ?x25766) 0.0))))))))))
(assert
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x25782 (* ?x25711 l_0_12_41)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x11094 (* ?x25708 l_0_12_40)))
 (let ((?x25705 (* 2.0 l_0_12_32)))
 (let ((?x11125 (* ?x25705 l_0_12_39)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x11006 (* ?x18404 l_0_12_6)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x11083 (* ?x10946 l_0_12_5)))
 (let ((?x18785 (- (- (+ (+ (* (* 2.0 l_0_12_11) l_0_12_4) ?x11083) ?x11006) ?x11125) ?x11094)))
 (= (- ?x18785 ?x25782) 0.0)))))))))))))
(assert
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x11190 (* ?x25711 l_0_12_52)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x18461 (* ?x25708 l_0_12_51)))
 (let ((?x25705 (* 2.0 l_0_12_32)))
 (let ((?x18447 (* ?x25705 l_0_12_50)))
 (let ((?x11186 (* 2.0 l_0_12_24)))
 (let ((?x18464 (* ?x11186 l_0_12_6)))
 (let ((?x25698 (* 2.0 l_0_12_23)))
 (let ((?x18452 (* ?x25698 l_0_12_5)))
 (let ((?x18904 (- (- (+ (+ (* (* 2.0 l_0_12_22) l_0_12_4) ?x18452) ?x18464) ?x18447) ?x18461)))
 (= (- ?x18904 ?x11190) 0.0)))))))))))))
(assert
 (let ((?x25840 (* l_0_12_9 l_0_12_9)))
 (let ((?x25838 (* l_0_12_8 l_0_12_8)))
 (let ((?x25836 (* l_0_12_7 l_0_12_7)))
 (let ((?x25834 (* l_0_12_38 l_0_12_38)))
 (let ((?x25832 (* l_0_12_37 l_0_12_37)))
 (let ((?x25830 (* l_0_12_36 l_0_12_36)))
 (let ((?x18900 (- (- (- (* l_0_12_10 l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x25830) ?x25832)))
 (= (+ (+ (+ (- ?x18900 ?x25834) ?x25836) ?x25838) ?x25840) 0.0)))))))))
(assert
 (let ((?x25875 (* 2.0 l_0_12_38)))
 (let ((?x25876 (* ?x25875 l_0_12_42)))
 (let ((?x25872 (* 2.0 l_0_12_37)))
 (let ((?x25873 (* ?x25872 l_0_12_41)))
 (let ((?x25869 (* 2.0 l_0_12_36)))
 (let ((?x25870 (* ?x25869 l_0_12_40)))
 (let ((?x25866 (* 2.0 l_0_12_35)))
 (let ((?x25867 (* ?x25866 l_0_12_39)))
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25703 (* ?x25602 l_0_12_51)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25701 (* ?x25599 l_0_12_50)))
 (let ((?x25698 (* 2.0 l_0_12_23)))
 (let ((?x25699 (* ?x25698 l_0_12_3)))
 (let ((?x25695 (* 2.0 l_0_12_2)))
 (let ((?x25696 (* ?x25695 l_0_12_22)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x25858 (* ?x18404 l_0_12_9)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x25856 (* ?x10946 l_0_12_8)))
 (let ((?x25853 (* 2.0 l_0_12_11)))
 (let ((?x25854 (* ?x25853 l_0_12_7)))
 (let ((?x18932 (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_14) ?x25854) ?x25856) ?x25858)))
 (let ((?x18949 (- (- (- (- (- (+ (+ ?x18932 ?x25696) ?x25699) ?x25701) ?x25703) ?x25867) ?x25870) ?x25873)))
 (= (- ?x18949 ?x25876) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x25875 (* 2.0 l_0_12_38)))
 (let ((?x25920 (* ?x25875 l_0_12_47)))
 (let ((?x25872 (* 2.0 l_0_12_37)))
 (let ((?x25918 (* ?x25872 l_0_12_46)))
 (let ((?x25869 (* 2.0 l_0_12_36)))
 (let ((?x25916 (* ?x25869 l_0_12_45)))
 (let ((?x25866 (* 2.0 l_0_12_35)))
 (let ((?x25914 (* ?x25866 l_0_12_44)))
 (let ((?x25692 (* 2.0 l_0_12_18)))
 (let ((?x25912 (* ?x25692 l_0_12_9)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x25910 (* ?x25660 l_0_12_8)))
 (let ((?x25682 (* 2.0 l_0_12_16)))
 (let ((?x25908 (* ?x25682 l_0_12_7)))
 (let ((?x26296 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_19) ?x25908) ?x25910) ?x25912) ?x25914)))
 (= (- (- (- ?x26296 ?x25916) ?x25918) ?x25920) 0.0)))))))))))))))))
(assert
 (let ((?x25875 (* 2.0 l_0_12_38)))
 (let ((?x25942 (* ?x25875 l_0_12_53)))
 (let ((?x25872 (* 2.0 l_0_12_37)))
 (let ((?x25940 (* ?x25872 l_0_12_52)))
 (let ((?x25869 (* 2.0 l_0_12_36)))
 (let ((?x25938 (* ?x25869 l_0_12_51)))
 (let ((?x25866 (* 2.0 l_0_12_35)))
 (let ((?x25936 (* ?x25866 l_0_12_50)))
 (let ((?x11186 (* 2.0 l_0_12_24)))
 (let ((?x11378 (* ?x11186 l_0_12_9)))
 (let ((?x25698 (* 2.0 l_0_12_23)))
 (let ((?x11432 (* ?x25698 l_0_12_8)))
 (let ((?x18492 (* 2.0 l_0_12_22)))
 (let ((?x18497 (* ?x18492 l_0_12_7)))
 (let ((?x26305 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_25) ?x18497) ?x11432) ?x11378) ?x25936)))
 (= (- (- (- ?x26305 ?x25938) ?x25940) ?x25942) 0.0)))))))))))))))))
(assert
 (let ((?x25986 (* l_0_12_43 l_0_12_43)))
 (let ((?x25984 (* l_0_12_42 l_0_12_42)))
 (let ((?x25982 (* l_0_12_41 l_0_12_41)))
 (let ((?x25980 (* l_0_12_40 l_0_12_40)))
 (let ((?x25978 (* l_0_12_39 l_0_12_39)))
 (let ((?x25976 (* l_0_12_15 l_0_12_15)))
 (let ((?x25974 (* l_0_12_14 l_0_12_14)))
 (let ((?x25965 (* l_0_12_13 l_0_12_13)))
 (let ((?x11892 (+ (+ (+ (* l_0_12_11 l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x25965) ?x25974)))
 (= (- (- (- (- (- (+ ?x11892 ?x25976) ?x25978) ?x25980) ?x25982) ?x25984) ?x25986) 0.0)))))))))))
(assert
 (let ((?x26031 (* 2.0 l_0_12_43)))
 (let ((?x26032 (* ?x26031 l_0_12_48)))
 (let ((?x26028 (* 2.0 l_0_12_42)))
 (let ((?x26029 (* ?x26028 l_0_12_47)))
 (let ((?x26025 (* 2.0 l_0_12_41)))
 (let ((?x26026 (* ?x26025 l_0_12_46)))
 (let ((?x26022 (* 2.0 l_0_12_40)))
 (let ((?x26023 (* ?x26022 l_0_12_45)))
 (let ((?x26019 (* 2.0 l_0_12_39)))
 (let ((?x26020 (* ?x26019 l_0_12_44)))
 (let ((?x26016 (* 2.0 l_0_12_15)))
 (let ((?x26017 (* ?x26016 l_0_12_20)))
 (let ((?x26013 (* 2.0 l_0_12_14)))
 (let ((?x26014 (* ?x26013 l_0_12_19)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x26011 (* ?x18404 l_0_12_18)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x26009 (* ?x10946 l_0_12_17)))
 (let ((?x19128 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_16) ?x26009) ?x26011) ?x26014) ?x26017)))
 (= (- (- (- (- (- ?x19128 ?x26020) ?x26023) ?x26026) ?x26029) ?x26032) 0.0)))))))))))))))))))))
(assert
 (let ((?x26031 (* 2.0 l_0_12_43)))
 (let ((?x26082 (* ?x26031 l_0_12_54)))
 (let ((?x26028 (* 2.0 l_0_12_42)))
 (let ((?x26080 (* ?x26028 l_0_12_53)))
 (let ((?x26025 (* 2.0 l_0_12_41)))
 (let ((?x26078 (* ?x26025 l_0_12_52)))
 (let ((?x26022 (* 2.0 l_0_12_40)))
 (let ((?x26076 (* ?x26022 l_0_12_51)))
 (let ((?x26019 (* 2.0 l_0_12_39)))
 (let ((?x26074 (* ?x26019 l_0_12_50)))
 (let ((?x26016 (* 2.0 l_0_12_15)))
 (let ((?x26072 (* ?x26016 l_0_12_26)))
 (let ((?x26013 (* 2.0 l_0_12_14)))
 (let ((?x26062 (* ?x26013 l_0_12_25)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x26059 (* ?x18404 l_0_12_24)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x26055 (* ?x10946 l_0_12_23)))
 (let ((?x12002 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_22) ?x26055) ?x26059) ?x26062) ?x26072)))
 (= (- (- (- (- (- ?x12002 ?x26074) ?x26076) ?x26078) ?x26080) ?x26082) 0.0)))))))))))))))))))))
(assert
 (let ((?x26112 (* l_0_12_49 l_0_12_49)))
 (let ((?x26110 (* l_0_12_48 l_0_12_48)))
 (let ((?x26108 (* l_0_12_47 l_0_12_47)))
 (let ((?x26106 (* l_0_12_46 l_0_12_46)))
 (let ((?x26104 (* l_0_12_45 l_0_12_45)))
 (let ((?x26102 (* l_0_12_44 l_0_12_44)))
 (let ((?x26100 (* l_0_12_21 l_0_12_21)))
 (let ((?x18554 (* l_0_12_20 l_0_12_20)))
 (let ((?x1463 (* l_0_12_19 l_0_12_19)))
 (let ((?x11438 (* l_0_12_18 l_0_12_18)))
 (let ((?x19365 (+ (+ (+ (* l_0_12_16 l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x11438) ?x1463)))
 (let ((?x19283 (- (- (- (- (- (+ (+ ?x19365 ?x18554) ?x26100) ?x26102) ?x26104) ?x26106) ?x26108) ?x26110)))
 (= (- ?x19283 ?x26112) 0.0))))))))))))))
(assert
 (let ((?x26161 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x26158 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x26155 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x26152 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x26149 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x26146 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x26143 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x26140 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x26137 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x25692 (* 2.0 l_0_12_18)))
 (let ((?x26134 (* ?x25692 l_0_12_24)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x26132 (* ?x25660 l_0_12_23)))
 (let ((?x19524 (+ (+ (+ (+ (* (* 2.0 l_0_12_16) l_0_12_22) ?x26132) ?x26134) ?x26137) ?x26140)))
 (let ((?x19491 (- (- (- (- (- (- (+ ?x19524 ?x26143) ?x26146) ?x26149) ?x26152) ?x26155) ?x26158) ?x26161)))
 (= ?x19491 0.0)))))))))))))))))
(assert
 (let ((?x26205 (* l_0_12_56 l_0_12_56)))
 (let ((?x26203 (* l_0_12_55 l_0_12_55)))
 (let ((?x26201 (* l_0_12_54 l_0_12_54)))
 (let ((?x26199 (* l_0_12_53 l_0_12_53)))
 (let ((?x26197 (* l_0_12_52 l_0_12_52)))
 (let ((?x26195 (* l_0_12_51 l_0_12_51)))
 (let ((?x26193 (* l_0_12_50 l_0_12_50)))
 (let ((?x26191 (* l_0_12_28 l_0_12_28)))
 (let ((?x26189 (* l_0_12_27 l_0_12_27)))
 (let ((?x26187 (* l_0_12_26 l_0_12_26)))
 (let ((?x26185 (* l_0_12_25 l_0_12_25)))
 (let ((?x26183 (* l_0_12_24 l_0_12_24)))
 (let ((?x12499 (+ (+ (+ (* l_0_12_22 l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x26183) ?x26185)))
 (let ((?x19426 (- (- (- (- (+ (+ (+ ?x12499 ?x26187) ?x26189) ?x26191) ?x26193) ?x26195) ?x26197) ?x26199)))
 (= (- (- (- ?x19426 ?x26201) ?x26203) ?x26205) 0.0))))))))))))))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25519 (* ?x25518 l_0_12_30)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_2) ?x25519) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25525 (* ?x25518 l_0_12_32)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_4) ?x25525) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25536 (* ?x25518 l_0_12_35)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_7) ?x25536) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25542 (* ?x25518 l_0_12_39)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_11) ?x25542) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25552 (* ?x25518 l_0_12_44)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_16) ?x25552) 0.0))))
(assert
 (let ((?x25518 (* 2.0 l_0_12_29)))
 (let ((?x25562 (* ?x25518 l_0_12_50)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_22) ?x25562) 0.0))))
(assert
 (let ((?x25581 (* l_0_12_31 l_0_12_31)))
 (let ((?x25579 (* l_0_12_30 l_0_12_30)))
 (let ((?x18724 (- (- (+ (* l_0_12_2 l_0_12_2) (* l_0_12_3 l_0_12_3)) ?x25579) ?x25581)))
 (= ?x18724 0.0)))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25603 (* ?x25602 l_0_12_33)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25600 (* ?x25599 l_0_12_32)))
 (let ((?x25596 (* 2.0 l_0_12_3)))
 (let ((?x25597 (* ?x25596 l_0_12_5)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_4) ?x25597) ?x25600) ?x25603) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25626 (* ?x25602 l_0_12_36)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25624 (* ?x25599 l_0_12_35)))
 (let ((?x25596 (* 2.0 l_0_12_3)))
 (let ((?x25617 (* ?x25596 l_0_12_8)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_7) ?x25617) ?x25624) ?x25626) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25645 (* ?x25602 l_0_12_40)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25643 (* ?x25599 l_0_12_39)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x25641 (* ?x10946 l_0_12_3)))
 (= (- (- (+ (* (* 2.0 l_0_12_11) l_0_12_2) ?x25641) ?x25643) ?x25645) 0.0))))))))
(assert
 (let ((?x25602 (* 2.0 l_0_12_31)))
 (let ((?x25670 (* ?x25602 l_0_12_45)))
 (let ((?x25599 (* 2.0 l_0_12_30)))
 (let ((?x25668 (* ?x25599 l_0_12_44)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x25666 (* ?x25660 l_0_12_3)))
 (= (- (- (+ (* (* 2.0 l_0_12_16) l_0_12_2) ?x25666) ?x25668) ?x25670) 0.0))))))))
(assert
 (let ((?x25743 (* l_0_12_6 l_0_12_6)))
 (let ((?x25741 (* l_0_12_5 l_0_12_5)))
 (let ((?x25739 (* l_0_12_4 l_0_12_4)))
 (let ((?x25737 (* l_0_12_34 l_0_12_34)))
 (let ((?x26270 (- (- (* (- l_0_12_32) l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x25737)))
 (= (+ (+ (+ ?x26270 ?x25739) ?x25741) ?x25743) 0.0)))))))
(assert
 (let ((?x25766 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x25763 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x25760 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x25757 (* ?x25711 l_0_12_37)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x25755 (* ?x25708 l_0_12_36)))
 (let ((?x26284 (+ (+ (- (- (* (* (- 2.0) l_0_12_32) l_0_12_35) ?x25755) ?x25757) ?x25760) ?x25763)))
 (= (+ ?x26284 ?x25766) 0.0))))))))))
(assert
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x25782 (* ?x25711 l_0_12_41)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x11094 (* ?x25708 l_0_12_40)))
 (let ((?x25705 (* 2.0 l_0_12_32)))
 (let ((?x11125 (* ?x25705 l_0_12_39)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x11006 (* ?x18404 l_0_12_6)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x11083 (* ?x10946 l_0_12_5)))
 (let ((?x18785 (- (- (+ (+ (* (* 2.0 l_0_12_11) l_0_12_4) ?x11083) ?x11006) ?x11125) ?x11094)))
 (= (- ?x18785 ?x25782) 0.0)))))))))))))
(assert
 (let ((?x25711 (* 2.0 l_0_12_34)))
 (let ((?x11190 (* ?x25711 l_0_12_52)))
 (let ((?x25708 (* 2.0 l_0_12_33)))
 (let ((?x18461 (* ?x25708 l_0_12_51)))
 (let ((?x25705 (* 2.0 l_0_12_32)))
 (let ((?x18447 (* ?x25705 l_0_12_50)))
 (let ((?x11186 (* 2.0 l_0_12_24)))
 (let ((?x18464 (* ?x11186 l_0_12_6)))
 (let ((?x25698 (* 2.0 l_0_12_23)))
 (let ((?x18452 (* ?x25698 l_0_12_5)))
 (let ((?x18904 (- (- (+ (+ (* (* 2.0 l_0_12_22) l_0_12_4) ?x18452) ?x18464) ?x18447) ?x18461)))
 (= (- ?x18904 ?x11190) 0.0)))))))))))))
(assert
 (let ((?x25840 (* l_0_12_9 l_0_12_9)))
 (let ((?x25838 (* l_0_12_8 l_0_12_8)))
 (let ((?x25836 (* l_0_12_7 l_0_12_7)))
 (let ((?x25834 (* l_0_12_38 l_0_12_38)))
 (let ((?x25832 (* l_0_12_37 l_0_12_37)))
 (let ((?x25830 (* l_0_12_36 l_0_12_36)))
 (let ((?x18900 (- (- (- (* l_0_12_10 l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x25830) ?x25832)))
 (= (+ (+ (+ (- ?x18900 ?x25834) ?x25836) ?x25838) ?x25840) 0.0)))))))))
(assert
 (let ((?x25875 (* 2.0 l_0_12_38)))
 (let ((?x25876 (* ?x25875 l_0_12_42)))
 (let ((?x25872 (* 2.0 l_0_12_37)))
 (let ((?x25873 (* ?x25872 l_0_12_41)))
 (let ((?x25869 (* 2.0 l_0_12_36)))
 (let ((?x25870 (* ?x25869 l_0_12_40)))
 (let ((?x25866 (* 2.0 l_0_12_35)))
 (let ((?x25867 (* ?x25866 l_0_12_39)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x25858 (* ?x18404 l_0_12_9)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x25856 (* ?x10946 l_0_12_8)))
 (let ((?x25853 (* 2.0 l_0_12_11)))
 (let ((?x25854 (* ?x25853 l_0_12_7)))
 (let ((?x18932 (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_14) ?x25854) ?x25856) ?x25858)))
 (= (- (- (- (- ?x18932 ?x25867) ?x25870) ?x25873) ?x25876) 0.0)))))))))))))))))
(assert
 (let ((?x25875 (* 2.0 l_0_12_38)))
 (let ((?x25920 (* ?x25875 l_0_12_47)))
 (let ((?x25872 (* 2.0 l_0_12_37)))
 (let ((?x25918 (* ?x25872 l_0_12_46)))
 (let ((?x25869 (* 2.0 l_0_12_36)))
 (let ((?x25916 (* ?x25869 l_0_12_45)))
 (let ((?x25866 (* 2.0 l_0_12_35)))
 (let ((?x25914 (* ?x25866 l_0_12_44)))
 (let ((?x25692 (* 2.0 l_0_12_18)))
 (let ((?x25912 (* ?x25692 l_0_12_9)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x25910 (* ?x25660 l_0_12_8)))
 (let ((?x25682 (* 2.0 l_0_12_16)))
 (let ((?x25908 (* ?x25682 l_0_12_7)))
 (let ((?x26296 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_19) ?x25908) ?x25910) ?x25912) ?x25914)))
 (= (- (- (- ?x26296 ?x25916) ?x25918) ?x25920) 0.0)))))))))))))))))
(assert
 (let ((?x25875 (* 2.0 l_0_12_38)))
 (let ((?x25942 (* ?x25875 l_0_12_53)))
 (let ((?x25872 (* 2.0 l_0_12_37)))
 (let ((?x25940 (* ?x25872 l_0_12_52)))
 (let ((?x25869 (* 2.0 l_0_12_36)))
 (let ((?x25938 (* ?x25869 l_0_12_51)))
 (let ((?x25866 (* 2.0 l_0_12_35)))
 (let ((?x25936 (* ?x25866 l_0_12_50)))
 (let ((?x11186 (* 2.0 l_0_12_24)))
 (let ((?x11378 (* ?x11186 l_0_12_9)))
 (let ((?x25698 (* 2.0 l_0_12_23)))
 (let ((?x11432 (* ?x25698 l_0_12_8)))
 (let ((?x18492 (* 2.0 l_0_12_22)))
 (let ((?x18497 (* ?x18492 l_0_12_7)))
 (let ((?x26305 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_25) ?x18497) ?x11432) ?x11378) ?x25936)))
 (= (- (- (- ?x26305 ?x25938) ?x25940) ?x25942) 0.0)))))))))))))))))
(assert
 (let ((?x25986 (* l_0_12_43 l_0_12_43)))
 (let ((?x25984 (* l_0_12_42 l_0_12_42)))
 (let ((?x25982 (* l_0_12_41 l_0_12_41)))
 (let ((?x25980 (* l_0_12_40 l_0_12_40)))
 (let ((?x25978 (* l_0_12_39 l_0_12_39)))
 (let ((?x25976 (* l_0_12_15 l_0_12_15)))
 (let ((?x25974 (* l_0_12_14 l_0_12_14)))
 (let ((?x25965 (* l_0_12_13 l_0_12_13)))
 (let ((?x11892 (+ (+ (+ (* l_0_12_11 l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x25965) ?x25974)))
 (= (- (- (- (- (- (+ ?x11892 ?x25976) ?x25978) ?x25980) ?x25982) ?x25984) ?x25986) 0.0)))))))))))
(assert
 (let ((?x26031 (* 2.0 l_0_12_43)))
 (let ((?x26032 (* ?x26031 l_0_12_48)))
 (let ((?x26028 (* 2.0 l_0_12_42)))
 (let ((?x26029 (* ?x26028 l_0_12_47)))
 (let ((?x26025 (* 2.0 l_0_12_41)))
 (let ((?x26026 (* ?x26025 l_0_12_46)))
 (let ((?x26022 (* 2.0 l_0_12_40)))
 (let ((?x26023 (* ?x26022 l_0_12_45)))
 (let ((?x26019 (* 2.0 l_0_12_39)))
 (let ((?x26020 (* ?x26019 l_0_12_44)))
 (let ((?x26016 (* 2.0 l_0_12_15)))
 (let ((?x26017 (* ?x26016 l_0_12_20)))
 (let ((?x26013 (* 2.0 l_0_12_14)))
 (let ((?x26014 (* ?x26013 l_0_12_19)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x26011 (* ?x18404 l_0_12_18)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x26009 (* ?x10946 l_0_12_17)))
 (let ((?x19128 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_16) ?x26009) ?x26011) ?x26014) ?x26017)))
 (= (- (- (- (- (- ?x19128 ?x26020) ?x26023) ?x26026) ?x26029) ?x26032) 0.0)))))))))))))))))))))
(assert
 (let ((?x26031 (* 2.0 l_0_12_43)))
 (let ((?x26082 (* ?x26031 l_0_12_54)))
 (let ((?x26028 (* 2.0 l_0_12_42)))
 (let ((?x26080 (* ?x26028 l_0_12_53)))
 (let ((?x26025 (* 2.0 l_0_12_41)))
 (let ((?x26078 (* ?x26025 l_0_12_52)))
 (let ((?x26022 (* 2.0 l_0_12_40)))
 (let ((?x26076 (* ?x26022 l_0_12_51)))
 (let ((?x26019 (* 2.0 l_0_12_39)))
 (let ((?x26074 (* ?x26019 l_0_12_50)))
 (let ((?x26016 (* 2.0 l_0_12_15)))
 (let ((?x26072 (* ?x26016 l_0_12_26)))
 (let ((?x26013 (* 2.0 l_0_12_14)))
 (let ((?x26062 (* ?x26013 l_0_12_25)))
 (let ((?x18404 (* 2.0 l_0_12_13)))
 (let ((?x26059 (* ?x18404 l_0_12_24)))
 (let ((?x10946 (* 2.0 l_0_12_12)))
 (let ((?x26055 (* ?x10946 l_0_12_23)))
 (let ((?x12002 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_22) ?x26055) ?x26059) ?x26062) ?x26072)))
 (= (- (- (- (- (- ?x12002 ?x26074) ?x26076) ?x26078) ?x26080) ?x26082) 0.0)))))))))))))))))))))
(assert
 (let ((?x26112 (* l_0_12_49 l_0_12_49)))
 (let ((?x26110 (* l_0_12_48 l_0_12_48)))
 (let ((?x26108 (* l_0_12_47 l_0_12_47)))
 (let ((?x26106 (* l_0_12_46 l_0_12_46)))
 (let ((?x26104 (* l_0_12_45 l_0_12_45)))
 (let ((?x26102 (* l_0_12_44 l_0_12_44)))
 (let ((?x26100 (* l_0_12_21 l_0_12_21)))
 (let ((?x18554 (* l_0_12_20 l_0_12_20)))
 (let ((?x1463 (* l_0_12_19 l_0_12_19)))
 (let ((?x11438 (* l_0_12_18 l_0_12_18)))
 (let ((?x19365 (+ (+ (+ (* l_0_12_16 l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x11438) ?x1463)))
 (let ((?x19283 (- (- (- (- (- (+ (+ ?x19365 ?x18554) ?x26100) ?x26102) ?x26104) ?x26106) ?x26108) ?x26110)))
 (= (- ?x19283 ?x26112) 0.0))))))))))))))
(assert
 (let ((?x26161 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x26158 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x26155 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x26152 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x26149 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x26146 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x26143 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x26140 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x26137 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x25692 (* 2.0 l_0_12_18)))
 (let ((?x26134 (* ?x25692 l_0_12_24)))
 (let ((?x25660 (* 2.0 l_0_12_17)))
 (let ((?x26132 (* ?x25660 l_0_12_23)))
 (let ((?x19524 (+ (+ (+ (+ (* (* 2.0 l_0_12_16) l_0_12_22) ?x26132) ?x26134) ?x26137) ?x26140)))
 (let ((?x19491 (- (- (- (- (- (- (+ ?x19524 ?x26143) ?x26146) ?x26149) ?x26152) ?x26155) ?x26158) ?x26161)))
 (= ?x19491 0.0)))))))))))))))))
(assert
 (let ((?x26205 (* l_0_12_56 l_0_12_56)))
 (let ((?x26203 (* l_0_12_55 l_0_12_55)))
 (let ((?x26201 (* l_0_12_54 l_0_12_54)))
 (let ((?x26199 (* l_0_12_53 l_0_12_53)))
 (let ((?x26197 (* l_0_12_52 l_0_12_52)))
 (let ((?x26195 (* l_0_12_51 l_0_12_51)))
 (let ((?x26193 (* l_0_12_50 l_0_12_50)))
 (let ((?x26191 (* l_0_12_28 l_0_12_28)))
 (let ((?x26189 (* l_0_12_27 l_0_12_27)))
 (let ((?x26187 (* l_0_12_26 l_0_12_26)))
 (let ((?x26185 (* l_0_12_25 l_0_12_25)))
 (let ((?x26183 (* l_0_12_24 l_0_12_24)))
 (let ((?x12499 (+ (+ (+ (* l_0_12_22 l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x26183) ?x26185)))
 (let ((?x19426 (- (- (- (- (+ (+ (+ ?x12499 ?x26187) ?x26189) ?x26191) ?x26193) ?x26195) ?x26197) ?x26199)))
 (= (- (- (- ?x19426 ?x26201) ?x26203) ?x26205) 0.0))))))))))))))))
(assert
 (let ((?x19627 (* l_0_12_85 l_0_12_85)))
 (let ((?x12572 (- (* (- l_0_12_113) l_0_12_113) (* (* 1.0 l_0_12_57) l_0_12_57))))
 (= (- ?x12572 ?x19627) 0.0))))
(assert
 (let ((?x11934 (- (* (* (- 2.0) l_0_12_113) l_0_12_114) (* (* 2.0 l_0_12_57) l_0_12_58))))
 (= (- ?x11934 (* (* 2.0 l_0_12_85) l_0_12_86)) 0.0)))
(assert
 (let ((?x11840 (- (* (* (- 2.0) l_0_12_113) l_0_12_116) (* (* 2.0 l_0_12_57) l_0_12_60))))
 (= (- ?x11840 (* (* 2.0 l_0_12_85) l_0_12_88)) 0.0)))
(assert
 (let ((?x26334 (- (* (* (- 2.0) l_0_12_113) l_0_12_119) (* (* 2.0 l_0_12_57) l_0_12_63))))
 (= (- ?x26334 (* (* 2.0 l_0_12_85) l_0_12_91)) 0.0)))
(assert
 (let ((?x26357 (- (* (* (- 2.0) l_0_12_113) l_0_12_123) (* (* 2.0 l_0_12_57) l_0_12_67))))
 (= (- ?x26357 (* (* 2.0 l_0_12_85) l_0_12_95)) 0.0)))
(assert
 (let ((?x26381 (- (* (* (- 2.0) l_0_12_100) l_0_12_85) (* (* 2.0 l_0_12_113) l_0_12_128))))
 (= (- ?x26381 (* (* 2.0 l_0_12_57) l_0_12_72)) 0.0)))
(assert
 (let ((?x26414 (* l_0_12_87 l_0_12_87)))
 (let ((?x26412 (* l_0_12_86 l_0_12_86)))
 (let ((?x26408 (- (- (* (- l_0_12_114) l_0_12_114) (* l_0_12_115 l_0_12_115)) (* (* 1.0 l_0_12_58) l_0_12_58))))
 (= (- (- (- ?x26408 (* (* 1.0 l_0_12_59) l_0_12_59)) ?x26412) ?x26414) 0.0)))))
(assert
 (let ((?x26442 (- (* (* (- 2.0) l_0_12_114) l_0_12_116) (* (* 2.0 l_0_12_115) l_0_12_117))))
 (let ((?x26446 (- (- ?x26442 (* (* 2.0 l_0_12_58) l_0_12_60)) (* (* 2.0 l_0_12_59) l_0_12_61))))
 (let ((?x26452 (- (- ?x26446 (* (* 2.0 l_0_12_86) l_0_12_88)) (* (* 2.0 l_0_12_87) l_0_12_89))))
 (= ?x26452 0.0)))))
(assert
 (let ((?x26491 (- (* (* (- 2.0) l_0_12_114) l_0_12_119) (* (* 2.0 l_0_12_115) l_0_12_120))))
 (let ((?x26495 (- (- ?x26491 (* (* 2.0 l_0_12_58) l_0_12_63)) (* (* 2.0 l_0_12_59) l_0_12_64))))
 (let ((?x26499 (- (- ?x26495 (* (* 2.0 l_0_12_86) l_0_12_91)) (* (* 2.0 l_0_12_87) l_0_12_92))))
 (= ?x26499 0.0)))))
(assert
 (let ((?x26538 (- (* (* (- 2.0) l_0_12_114) l_0_12_123) (* (* 2.0 l_0_12_115) l_0_12_124))))
 (let ((?x26542 (- (- ?x26538 (* (* 2.0 l_0_12_58) l_0_12_67)) (* (* 2.0 l_0_12_59) l_0_12_68))))
 (let ((?x26546 (- (- ?x26542 (* (* 2.0 l_0_12_86) l_0_12_95)) (* (* 2.0 l_0_12_87) l_0_12_96))))
 (= ?x26546 0.0)))))
(assert
 (let ((?x26585 (- (* (* (- 2.0) l_0_12_100) l_0_12_86) (* (* 2.0 l_0_12_101) l_0_12_87))))
 (let ((?x26589 (- (- ?x26585 (* (* 2.0 l_0_12_114) l_0_12_128)) (* (* 2.0 l_0_12_115) l_0_12_129))))
 (let ((?x26593 (- (- ?x26589 (* (* 2.0 l_0_12_58) l_0_12_72)) (* (* 2.0 l_0_12_59) l_0_12_73))))
 (= ?x26593 0.0)))))
(assert
 (let ((?x26649 (* l_0_12_90 l_0_12_90)))
 (let ((?x26647 (* l_0_12_89 l_0_12_89)))
 (let ((?x26645 (* l_0_12_88 l_0_12_88)))
 (let ((?x26634 (* l_0_12_118 l_0_12_118)))
 (let ((?x26635 (- (- (* (- l_0_12_116) l_0_12_116) (* l_0_12_117 l_0_12_117)) ?x26634)))
 (let ((?x26641 (- (- ?x26635 (* (* 1.0 l_0_12_60) l_0_12_60)) (* (* 1.0 l_0_12_61) l_0_12_61))))
 (let ((?x26650 (- (- (- (- ?x26641 (* (* 1.0 l_0_12_62) l_0_12_62)) ?x26645) ?x26647) ?x26649)))
 (= ?x26650 0.0)))))))))
(assert
 (let ((?x26687 (- (* (* (- 2.0) l_0_12_116) l_0_12_119) (* (* 2.0 l_0_12_117) l_0_12_120))))
 (let ((?x26691 (- (- ?x26687 (* (* 2.0 l_0_12_118) l_0_12_121)) (* (* 2.0 l_0_12_60) l_0_12_63))))
 (let ((?x26695 (- (- ?x26691 (* (* 2.0 l_0_12_61) l_0_12_64)) (* (* 2.0 l_0_12_62) l_0_12_65))))
 (let ((?x26701 (- (- ?x26695 (* (* 2.0 l_0_12_88) l_0_12_91)) (* (* 2.0 l_0_12_89) l_0_12_92))))
 (= (- ?x26701 (* (* 2.0 l_0_12_90) l_0_12_93)) 0.0))))))
(assert
 (let ((?x26761 (- (* (* (- 2.0) l_0_12_116) l_0_12_123) (* (* 2.0 l_0_12_117) l_0_12_124))))
 (let ((?x26765 (- (- ?x26761 (* (* 2.0 l_0_12_118) l_0_12_125)) (* (* 2.0 l_0_12_60) l_0_12_67))))
 (let ((?x26769 (- (- ?x26765 (* (* 2.0 l_0_12_61) l_0_12_68)) (* (* 2.0 l_0_12_62) l_0_12_69))))
 (let ((?x26773 (- (- ?x26769 (* (* 2.0 l_0_12_88) l_0_12_95)) (* (* 2.0 l_0_12_89) l_0_12_96))))
 (= (- ?x26773 (* (* 2.0 l_0_12_90) l_0_12_97)) 0.0))))))
(assert
 (let ((?x19747 (- (* (* (- 2.0) l_0_12_106) l_0_12_88) (* (* 2.0 l_0_12_107) l_0_12_89))))
 (let ((?x26816 (- (- ?x19747 (* (* 2.0 l_0_12_108) l_0_12_90)) (* (* 2.0 l_0_12_116) l_0_12_134))))
 (let ((?x26820 (- (- ?x26816 (* (* 2.0 l_0_12_117) l_0_12_135)) (* (* 2.0 l_0_12_118) l_0_12_136))))
 (let ((?x26824 (- (- ?x26820 (* (* 2.0 l_0_12_60) l_0_12_78)) (* (* 2.0 l_0_12_61) l_0_12_79))))
 (= (- ?x26824 (* (* 2.0 l_0_12_62) l_0_12_80)) 0.0))))))
(assert
 (let ((?x26871 (* l_0_12_94 l_0_12_94)))
 (let ((?x26869 (* l_0_12_93 l_0_12_93)))
 (let ((?x26867 (* l_0_12_92 l_0_12_92)))
 (let ((?x26865 (* l_0_12_91 l_0_12_91)))
 (let ((?x26851 (* l_0_12_122 l_0_12_122)))
 (let ((?x26849 (* l_0_12_121 l_0_12_121)))
 (let ((?x26850 (- (- (* (- l_0_12_119) l_0_12_119) (* l_0_12_120 l_0_12_120)) ?x26849)))
 (let ((?x26858 (- (- (- ?x26850 ?x26851) (* (* 1.0 l_0_12_63) l_0_12_63)) (* (* 1.0 l_0_12_64) l_0_12_64))))
 (let ((?x26864 (- (- ?x26858 (* (* 1.0 l_0_12_65) l_0_12_65)) (* (* 1.0 l_0_12_66) l_0_12_66))))
 (= (- (- (- (- ?x26864 ?x26865) ?x26867) ?x26869) ?x26871) 0.0)))))))))))
(assert
 (let ((?x26887 (- (* (* (- 2.0) l_0_12_100) l_0_12_91) (* (* 2.0 l_0_12_101) l_0_12_92))))
 (let ((?x26892 (- (- ?x26887 (* (* 2.0 l_0_12_102) l_0_12_93)) (* (* 2.0 l_0_12_103) l_0_12_94))))
 (let ((?x26896 (- (- ?x26892 (* (* 2.0 l_0_12_119) l_0_12_128)) (* (* 2.0 l_0_12_120) l_0_12_129))))
 (let ((?x26900 (- (- ?x26896 (* (* 2.0 l_0_12_121) l_0_12_130)) (* (* 2.0 l_0_12_122) l_0_12_131))))
 (let ((?x26904 (- (- ?x26900 (* (* 2.0 l_0_12_63) l_0_12_72)) (* (* 2.0 l_0_12_64) l_0_12_73))))
 (let ((?x26908 (- (- ?x26904 (* (* 2.0 l_0_12_65) l_0_12_74)) (* (* 2.0 l_0_12_66) l_0_12_75))))
 (= ?x26908 0.0))))))))
(assert
 (let ((?x26975 (* l_0_12_99 l_0_12_99)))
 (let ((?x26973 (* l_0_12_98 l_0_12_98)))
 (let ((?x26971 (* l_0_12_97 l_0_12_97)))
 (let ((?x26969 (* l_0_12_96 l_0_12_96)))
 (let ((?x26967 (* l_0_12_95 l_0_12_95)))
 (let ((?x26950 (* l_0_12_127 l_0_12_127)))
 (let ((?x26948 (* l_0_12_126 l_0_12_126)))
 (let ((?x26946 (* l_0_12_125 l_0_12_125)))
 (let ((?x26947 (- (- (* (- l_0_12_123) l_0_12_123) (* l_0_12_124 l_0_12_124)) ?x26946)))
 (let ((?x26957 (- (- (- (- ?x26947 ?x26948) ?x26950) (* (* 1.0 l_0_12_67) l_0_12_67)) (* (* 1.0 l_0_12_68) l_0_12_68))))
 (let ((?x26963 (- (- ?x26957 (* (* 1.0 l_0_12_69) l_0_12_69)) (* (* 1.0 l_0_12_70) l_0_12_70))))
 (let ((?x26972 (- (- (- (- ?x26963 (* (* 1.0 l_0_12_71) l_0_12_71)) ?x26967) ?x26969) ?x26971)))
 (= (- (- ?x26972 ?x26973) ?x26975) 0.0))))))))))))))
(assert
 (let ((?x27032 (- (* (* (- 2.0) l_0_12_100) l_0_12_95) (* (* 2.0 l_0_12_101) l_0_12_96))))
 (let ((?x27036 (- (- ?x27032 (* (* 2.0 l_0_12_102) l_0_12_97)) (* (* 2.0 l_0_12_103) l_0_12_98))))
 (let ((?x27042 (- (- ?x27036 (* (* 2.0 l_0_12_104) l_0_12_99)) (* (* 2.0 l_0_12_123) l_0_12_128))))
 (let ((?x27048 (- (- ?x27042 (* (* 2.0 l_0_12_124) l_0_12_129)) (* (* 2.0 l_0_12_125) l_0_12_130))))
 (let ((?x27054 (- (- ?x27048 (* (* 2.0 l_0_12_126) l_0_12_131)) (* (* 2.0 l_0_12_127) l_0_12_132))))
 (let ((?x27060 (- (- ?x27054 (* (* 2.0 l_0_12_67) l_0_12_72)) (* (* 2.0 l_0_12_68) l_0_12_73))))
 (let ((?x27066 (- (- ?x27060 (* (* 2.0 l_0_12_69) l_0_12_74)) (* (* 2.0 l_0_12_70) l_0_12_75))))
 (= (- ?x27066 (* (* 2.0 l_0_12_71) l_0_12_76)) 0.0)))))))))
(assert
 (let ((?x27144 (- (* (* (- 2.0) l_0_12_106) l_0_12_95) (* (* 2.0 l_0_12_107) l_0_12_96))))
 (let ((?x27148 (- (- ?x27144 (* (* 2.0 l_0_12_108) l_0_12_97)) (* (* 2.0 l_0_12_109) l_0_12_98))))
 (let ((?x27153 (- (- ?x27148 (* (* 2.0 l_0_12_110) l_0_12_99)) (* (* 2.0 l_0_12_123) l_0_12_134))))
 (let ((?x27157 (- (- ?x27153 (* (* 2.0 l_0_12_124) l_0_12_135)) (* (* 2.0 l_0_12_125) l_0_12_136))))
 (let ((?x27161 (- (- ?x27157 (* (* 2.0 l_0_12_126) l_0_12_137)) (* (* 2.0 l_0_12_127) l_0_12_138))))
 (let ((?x27165 (- (- ?x27161 (* (* 2.0 l_0_12_67) l_0_12_78)) (* (* 2.0 l_0_12_68) l_0_12_79))))
 (let ((?x27169 (- (- ?x27165 (* (* 2.0 l_0_12_69) l_0_12_80)) (* (* 2.0 l_0_12_70) l_0_12_81))))
 (= (- ?x27169 (* (* 2.0 l_0_12_71) l_0_12_82)) 0.0)))))))))
(assert
 (let ((?x27284 (* l_0_12_133 l_0_12_133)))
 (let ((?x27282 (* l_0_12_132 l_0_12_132)))
 (let ((?x27280 (* l_0_12_131 l_0_12_131)))
 (let ((?x27278 (* l_0_12_130 l_0_12_130)))
 (let ((?x27276 (* l_0_12_129 l_0_12_129)))
 (let ((?x27274 (* l_0_12_128 l_0_12_128)))
 (let ((?x27272 (* l_0_12_105 l_0_12_105)))
 (let ((?x27270 (* l_0_12_104 l_0_12_104)))
 (let ((?x27268 (* l_0_12_103 l_0_12_103)))
 (let ((?x27266 (* l_0_12_102 l_0_12_102)))
 (let ((?x27267 (- (- (* (- l_0_12_100) l_0_12_100) (* l_0_12_101 l_0_12_101)) ?x27266)))
 (let ((?x27281 (- (- (- (- (- (- (- ?x27267 ?x27268) ?x27270) ?x27272) ?x27274) ?x27276) ?x27278) ?x27280)))
 (let ((?x27291 (- (- (- (- ?x27281 ?x27282) ?x27284) (* (* 1.0 l_0_12_72) l_0_12_72)) (* (* 1.0 l_0_12_73) l_0_12_73))))
 (let ((?x27297 (- (- ?x27291 (* (* 1.0 l_0_12_74) l_0_12_74)) (* (* 1.0 l_0_12_75) l_0_12_75))))
 (let ((?x27303 (- (- ?x27297 (* (* 1.0 l_0_12_76) l_0_12_76)) (* (* 1.0 l_0_12_77) l_0_12_77))))
 (= ?x27303 0.0)))))))))))))))))
(assert
 (let ((?x27369 (- (* (* (- 2.0) l_0_12_100) l_0_12_106) (* (* 2.0 l_0_12_101) l_0_12_107))))
 (let ((?x27373 (- (- ?x27369 (* (* 2.0 l_0_12_102) l_0_12_108)) (* (* 2.0 l_0_12_103) l_0_12_109))))
 (let ((?x27378 (- (- ?x27373 (* (* 2.0 l_0_12_104) l_0_12_110)) (* (* 2.0 l_0_12_105) l_0_12_111))))
 (let ((?x27384 (- (- ?x27378 (* (* 2.0 l_0_12_128) l_0_12_134)) (* (* 2.0 l_0_12_129) l_0_12_135))))
 (let ((?x27390 (- (- ?x27384 (* (* 2.0 l_0_12_130) l_0_12_136)) (* (* 2.0 l_0_12_131) l_0_12_137))))
 (let ((?x27396 (- (- ?x27390 (* (* 2.0 l_0_12_132) l_0_12_138)) (* (* 2.0 l_0_12_133) l_0_12_139))))
 (let ((?x27402 (- (- ?x27396 (* (* 2.0 l_0_12_72) l_0_12_78)) (* (* 2.0 l_0_12_73) l_0_12_79))))
 (let ((?x27408 (- (- ?x27402 (* (* 2.0 l_0_12_74) l_0_12_80)) (* (* 2.0 l_0_12_75) l_0_12_81))))
 (let ((?x27414 (- (- ?x27408 (* (* 2.0 l_0_12_76) l_0_12_82)) (* (* 2.0 l_0_12_77) l_0_12_83))))
 (= ?x27414 0.0)))))))))))
(assert
 (let ((?x27476 (* l_0_12_140 l_0_12_140)))
 (let ((?x27474 (* l_0_12_139 l_0_12_139)))
 (let ((?x27472 (* l_0_12_138 l_0_12_138)))
 (let ((?x27470 (* l_0_12_137 l_0_12_137)))
 (let ((?x27468 (* l_0_12_136 l_0_12_136)))
 (let ((?x27466 (* l_0_12_135 l_0_12_135)))
 (let ((?x27464 (* l_0_12_134 l_0_12_134)))
 (let ((?x27462 (* l_0_12_112 l_0_12_112)))
 (let ((?x27460 (* l_0_12_111 l_0_12_111)))
 (let ((?x27458 (* l_0_12_110 l_0_12_110)))
 (let ((?x27456 (* l_0_12_109 l_0_12_109)))
 (let ((?x27454 (* l_0_12_108 l_0_12_108)))
 (let ((?x27455 (- (- (* (- l_0_12_106) l_0_12_106) (* l_0_12_107 l_0_12_107)) ?x27454)))
 (let ((?x27469 (- (- (- (- (- (- (- ?x27455 ?x27456) ?x27458) ?x27460) ?x27462) ?x27464) ?x27466) ?x27468)))
 (let ((?x27480 (- (- (- (- (- ?x27469 ?x27470) ?x27472) ?x27474) ?x27476) (* (* 1.0 l_0_12_78) l_0_12_78))))
 (let ((?x27486 (- (- ?x27480 (* (* 1.0 l_0_12_79) l_0_12_79)) (* (* 1.0 l_0_12_80) l_0_12_80))))
 (let ((?x27492 (- (- ?x27486 (* (* 1.0 l_0_12_81) l_0_12_81)) (* (* 1.0 l_0_12_82) l_0_12_82))))
 (let ((?x27498 (- (- ?x27492 (* (* 1.0 l_0_12_83) l_0_12_83)) (* (* 1.0 l_0_12_84) l_0_12_84))))
 (= ?x27498 0.0))))))))))))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_28 0.0))
(assert
 (>= l_0_12_29 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_34 0.0))
(assert
 (>= l_0_12_38 0.0))
(assert
 (>= l_0_12_43 0.0))
(assert
 (>= l_0_12_49 0.0))
(assert
 (>= l_0_12_56 0.0))
(assert
 (>= l_0_12_57 0.0))
(assert
 (>= l_0_12_59 0.0))
(assert
 (>= l_0_12_62 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_71 0.0))
(assert
 (>= l_0_12_77 0.0))
(assert
 (>= l_0_12_84 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_87 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_94 0.0))
(assert
 (>= l_0_12_99 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (>= l_0_12_112 0.0))
(assert
 (>= l_0_12_113 0.0))
(assert
 (>= l_0_12_115 0.0))
(assert
 (>= l_0_12_118 0.0))
(assert
 (>= l_0_12_122 0.0))
(assert
 (>= l_0_12_127 0.0))
(assert
 (>= l_0_12_133 0.0))
(assert
 (>= l_0_12_140 0.0))
(check-sat)
(get-model)