(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_7 () Real)
(declare-fun l_0_0_8 () Real)
(declare-fun l_0_0_20 () Real)
(declare-fun l_0_0_19 () Real)
(declare-fun l_0_0_13 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_9 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_21 () Real)
(declare-fun l_0_0_14 () Real)
(declare-fun l_0_0_5 () Real)
(declare-fun l_0_0_23 () Real)
(declare-fun l_0_0_22 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_0_16 () Real)
(declare-fun l_0_0_11 () Real)
(declare-fun l_0_0_10 () Real)
(declare-fun l_0_0_15 () Real)
(declare-fun l_0_0_17 () Real)
(declare-fun l_0_0_6 () Real)
(declare-fun l_0_0_18 () Real)
(declare-fun l_0_0_12 () Real)
(declare-fun l_0_0_24 () Real)
(declare-fun l_0_1_7 () Real)
(declare-fun l_0_1_6 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_30 () Real)
(declare-fun l_0_1_29 () Real)
(declare-fun l_0_1_28 () Real)
(declare-fun l_0_1_24 () Real)
(declare-fun l_0_1_23 () Real)
(declare-fun l_0_1_22 () Real)
(declare-fun l_0_1_13 () Real)
(declare-fun l_0_1_12 () Real)
(declare-fun l_0_1_11 () Real)
(declare-fun l_0_1_10 () Real)
(declare-fun l_0_1_25 () Real)
(declare-fun l_0_1_19 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_8 () Real)
(declare-fun l_0_1_26 () Real)
(declare-fun l_0_1_20 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_9 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_27 () Real)
(declare-fun l_0_1_21 () Real)
(declare-fun l_0_1_14 () Real)
(declare-fun l_0_1_16 () Real)
(declare-fun l_0_1_15 () Real)
(declare-fun l_0_1_17 () Real)
(declare-fun l_0_1_18 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun _a_4_ () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_75 () Real)
(assert
 (let ((?x819 (* l_0_0_7 l_0_0_7)))
 (let ((?x817 (* (* 4.0 l_0_0_7) l_0_0_8)))
 (let ((?x810 (* l_0_0_13 l_0_0_13)))
 (let ((?x811 (+ (- (* (* 2.0 l_0_0_1) l_0_0_2) (* l_0_0_1 l_0_0_1)) ?x810)))
 (let ((?x822 (+ (- (+ (- ?x811 (* (* 2.0 l_0_0_19) l_0_0_20)) ?x817) ?x819) 1.0)))
 (= ?x822 0.0)))))))
(assert
 (let ((?x819 (* l_0_0_7 l_0_0_7)))
 (let ((?x872 (* 2.0 ?x819)))
 (let ((?x873 (+ (- (* 1.0 (* l_0_0_1 l_0_0_1)) (* l_0_0_19 l_0_0_19)) ?x872)))
 (= (- ?x873 1.0) 0.0)))))
(assert
 (let ((?x904 (* l_0_0_9 l_0_0_9)))
 (let ((?x905 (* 2.0 ?x904)))
 (let ((?x901 (* l_0_0_8 l_0_0_8)))
 (let ((?x902 (* 2.0 ?x901)))
 (let ((?x898 (* 2.0 l_0_0_7)))
 (let ((?x899 (* ?x898 l_0_0_8)))
 (let ((?x893 (* l_0_0_21 l_0_0_21)))
 (let ((?x891 (* l_0_0_20 l_0_0_20)))
 (let ((?x885 (* 2.0 l_0_0_13)))
 (let ((?x886 (* ?x885 l_0_0_14)))
 (let ((?x890 (+ (+ (* (* (- 2.0) l_0_0_1) l_0_0_2) ?x886) (* 1.0 (* l_0_0_2 l_0_0_2)))))
 (let ((?x900 (- (+ (- (- ?x890 ?x891) ?x893) (* 1.0 (* l_0_0_3 l_0_0_3))) ?x899)))
 (= (+ (+ ?x900 ?x902) ?x905) 0.0))))))))))))))
(assert
 (let ((?x817 (* (* 4.0 l_0_0_7) l_0_0_8)))
 (let ((?x952 (* (* 2.0 l_0_0_3) l_0_0_5)))
 (let ((?x943 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (let ((?x885 (* 2.0 l_0_0_13)))
 (let ((?x940 (* ?x885 l_0_0_16)))
 (let ((?x938 (* (* 4.0 l_0_0_11) l_0_0_9)))
 (let ((?x931 (* 2.0 l_0_0_10)))
 (let ((?x932 (* ?x931 l_0_0_7)))
 (let ((?x936 (+ (- (* (* (- 2.0) l_0_0_1) l_0_0_4) ?x932) (* (* 4.0 l_0_0_10) l_0_0_8))))
 (let ((?x947 (- (+ (+ (+ ?x936 ?x938) ?x940) ?x943) (* (* 2.0 l_0_0_20) l_0_0_22))))
 (= (- (+ (- ?x947 (* (* 2.0 l_0_0_21) l_0_0_23)) ?x952) ?x817) 0.0))))))))))))
(assert
 (let ((?x904 (* l_0_0_9 l_0_0_9)))
 (let ((?x901 (* l_0_0_8 l_0_0_8)))
 (let ((?x895 (* l_0_0_3 l_0_0_3)))
 (let ((?x888 (* l_0_0_2 l_0_0_2)))
 (let ((?x1003 (- (- (+ (* l_0_0_14 l_0_0_14) (* l_0_0_15 l_0_0_15)) ?x888) ?x895)))
 (= (- (- ?x1003 ?x901) ?x904) 0.0)))))))
(assert
 (let ((?x952 (* (* 2.0 l_0_0_3) l_0_0_5)))
 (let ((?x943 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (let ((?x1030 (* (* 2.0 l_0_0_15) l_0_0_17)))
 (let ((?x1027 (* (* 2.0 l_0_0_14) l_0_0_16)))
 (let ((?x1023 (* 2.0 l_0_0_11)))
 (let ((?x1024 (* ?x1023 l_0_0_9)))
 (let ((?x1032 (- (+ (+ (- (* (* (- 2.0) l_0_0_10) l_0_0_8) ?x1024) ?x1027) ?x1030) ?x943)))
 (let ((?x1039 (- (- (- ?x1032 ?x952) (* (* 2.0 l_0_0_8) l_0_0_8)) (* (* 2.0 l_0_0_9) l_0_0_9))))
 (= ?x1039 0.0))))))))))
(assert
 (let ((?x898 (* 2.0 l_0_0_7)))
 (let ((?x899 (* ?x898 l_0_0_8)))
 (let ((?x1089 (* l_0_0_6 l_0_0_6)))
 (let ((?x1087 (* l_0_0_5 l_0_0_5)))
 (let ((?x1085 (* l_0_0_4 l_0_0_4)))
 (let ((?x1083 (* l_0_0_18 l_0_0_18)))
 (let ((?x1081 (* l_0_0_17 l_0_0_17)))
 (let ((?x1079 (* l_0_0_16 l_0_0_16)))
 (let ((?x885 (* 2.0 l_0_0_13)))
 (let ((?x886 (* ?x885 l_0_0_14)))
 (let ((?x1076 (* l_0_0_12 l_0_0_12)))
 (let ((?x1074 (* l_0_0_11 l_0_0_11)))
 (let ((?x938 (* (* 4.0 l_0_0_11) l_0_0_9)))
 (let ((?x1073 (- (- (* (* (- 4.0) l_0_0_10) l_0_0_8) (* l_0_0_10 l_0_0_10)) ?x938)))
 (let ((?x1086 (- (+ (+ (+ (- (- (- ?x1073 ?x1074) ?x1076) ?x886) ?x1079) ?x1081) ?x1083) ?x1085)))
 (= (+ (- (- ?x1086 ?x1087) ?x1089) ?x899) 0.0)))))))))))))))))
(assert
 (let ((?x1121 (+ (* (* 2.0 l_0_0_1) l_0_0_4) (* (* 4.0 l_0_0_10) l_0_0_7))))
 (let ((?x1125 (- (- ?x1121 (* (* 2.0 l_0_0_19) l_0_0_22)) (* (* 2.0 l_0_0_7) l_0_0_7))))
 (= ?x1125 0.0))))
(assert
 (let ((?x819 (* l_0_0_7 l_0_0_7)))
 (let ((?x1154 (* l_0_0_24 l_0_0_24)))
 (let ((?x1152 (* l_0_0_23 l_0_0_23)))
 (let ((?x1150 (* l_0_0_22 l_0_0_22)))
 (let ((?x810 (* l_0_0_13 l_0_0_13)))
 (let ((?x1144 (+ (* (* (- 4.0) l_0_0_10) l_0_0_7) (* 2.0 (* l_0_0_10 l_0_0_10)))))
 (let ((?x1148 (+ (+ ?x1144 (* 2.0 (* l_0_0_11 l_0_0_11))) (* 2.0 (* l_0_0_12 l_0_0_12)))))
 (let ((?x1157 (+ (- (- (- (- ?x1148 ?x810) ?x1150) ?x1152) ?x1154) (* 1.0 (* l_0_0_4 l_0_0_4)))))
 (let ((?x1161 (+ (+ ?x1157 (* 1.0 (* l_0_0_5 l_0_0_5))) (* 1.0 (* l_0_0_6 l_0_0_6)))))
 (= (+ ?x1161 ?x819) 0.0)))))))))))
(assert
 (let ((?x885 (* 2.0 l_0_0_13)))
 (let ((?x940 (* ?x885 l_0_0_16)))
 (let ((?x931 (* 2.0 l_0_0_10)))
 (let ((?x932 (* ?x931 l_0_0_7)))
 (let ((?x1187 (- (- (- ?x932 (* ?x931 l_0_0_10)) (* (* 2.0 l_0_0_11) l_0_0_11)) (* (* 2.0 l_0_0_12) l_0_0_12))))
 (= (- ?x1187 ?x940) 0.0)))))))
(assert
 (let ((?x904 (* l_0_0_9 l_0_0_9)))
 (let ((?x901 (* l_0_0_8 l_0_0_8)))
 (let ((?x1207 (+ (+ (- (* (- l_0_0_14) l_0_0_14) (* l_0_0_15 l_0_0_15)) ?x901) ?x904)))
 (= ?x1207 0.0)))))
(assert
 (let ((?x1030 (* (* 2.0 l_0_0_15) l_0_0_17)))
 (let ((?x1027 (* (* 2.0 l_0_0_14) l_0_0_16)))
 (let ((?x1023 (* 2.0 l_0_0_11)))
 (let ((?x1024 (* ?x1023 l_0_0_9)))
 (= (- (- (+ (* (* 2.0 l_0_0_10) l_0_0_8) ?x1024) ?x1027) ?x1030) 0.0))))))
(assert
 (let ((?x1083 (* l_0_0_18 l_0_0_18)))
 (let ((?x1081 (* l_0_0_17 l_0_0_17)))
 (let ((?x1079 (* l_0_0_16 l_0_0_16)))
 (let ((?x1076 (* l_0_0_12 l_0_0_12)))
 (let ((?x1228 (- (+ (+ (* l_0_0_10 l_0_0_10) (* l_0_0_11 l_0_0_11)) ?x1076) ?x1079)))
 (= (- (- ?x1228 ?x1081) ?x1083) 0.0)))))))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_6 0.0))
(assert
 (>= l_0_0_7 0.0))
(assert
 (>= l_0_0_9 0.0))
(assert
 (>= l_0_0_12 0.0))
(assert
 (>= l_0_0_13 0.0))
(assert
 (>= l_0_0_15 0.0))
(assert
 (>= l_0_0_18 0.0))
(assert
 (>= l_0_0_19 0.0))
(assert
 (>= l_0_0_21 0.0))
(assert
 (>= l_0_0_24 0.0))
(assert
 (let ((?x1289 (* l_0_1_7 l_0_1_7)))
 (let ((?x1278 (* l_0_1_30 l_0_1_30)))
 (let ((?x1276 (* l_0_1_29 l_0_1_29)))
 (let ((?x1274 (* l_0_1_28 l_0_1_28)))
 (let ((?x1272 (* l_0_1_24 l_0_1_24)))
 (let ((?x1270 (* l_0_1_23 l_0_1_23)))
 (let ((?x1268 (* l_0_1_22 l_0_1_22)))
 (let ((?x1266 (* l_0_1_13 l_0_1_13)))
 (let ((?x1263 (* l_0_1_12 l_0_1_12)))
 (let ((?x1264 (* 2.0 ?x1263)))
 (let ((?x1260 (* l_0_1_11 l_0_1_11)))
 (let ((?x1261 (* 2.0 ?x1260)))
 (let ((?x1257 (* l_0_1_10 l_0_1_10)))
 (let ((?x1258 (* 2.0 ?x1257)))
 (let ((?x1267 (- (+ (+ (+ (* (* (- 4.0) l_0_1_10) l_0_1_7) ?x1258) ?x1261) ?x1264) ?x1266)))
 (let ((?x1282 (+ (- (- (- (- (- (- ?x1267 ?x1268) ?x1270) ?x1272) ?x1274) ?x1276) ?x1278) (* 1.0 (* l_0_1_4 l_0_1_4)))))
 (let ((?x1288 (+ (+ ?x1282 (* 1.0 (* l_0_1_5 l_0_1_5))) (* 1.0 (* l_0_1_6 l_0_1_6)))))
 (= (+ ?x1288 ?x1289) 0.0)))))))))))))))))))
(assert
 (let ((?x1322 (+ (* (* 2.0 l_0_1_1) l_0_1_4) (* (* 4.0 l_0_1_10) l_0_1_7))))
 (let ((?x1328 (- (- ?x1322 (* (* 2.0 l_0_1_19) l_0_1_22)) (* (* 2.0 l_0_1_25) l_0_1_28))))
 (= (- ?x1328 (* (* 2.0 l_0_1_7) l_0_1_7)) 0.0))))
(assert
 (let ((?x1289 (* l_0_1_7 l_0_1_7)))
 (let ((?x1349 (* 2.0 ?x1289)))
 (let ((?x1361 (* l_0_1_25 l_0_1_25)))
 (let ((?x1362 (- (- (* 1.0 (* l_0_1_1 l_0_1_1)) (* l_0_1_19 l_0_1_19)) ?x1361)))
 (= (+ ?x1362 ?x1349) 0.0))))))
(assert
 (let ((?x1289 (* l_0_1_7 l_0_1_7)))
 (let ((?x1380 (* (* 4.0 l_0_1_7) l_0_1_8)))
 (let ((?x1266 (* l_0_1_13 l_0_1_13)))
 (let ((?x1374 (+ (- (* (* 2.0 l_0_1_1) l_0_1_2) (* l_0_1_1 l_0_1_1)) ?x1266)))
 (let ((?x1378 (- (- ?x1374 (* (* 2.0 l_0_1_19) l_0_1_20)) (* (* 2.0 l_0_1_25) l_0_1_26))))
 (= (- (+ ?x1378 ?x1380) ?x1289) 0.0)))))))
(assert
 (let ((?x1433 (* l_0_1_9 l_0_1_9)))
 (let ((?x1434 (* 2.0 ?x1433)))
 (let ((?x1430 (* l_0_1_8 l_0_1_8)))
 (let ((?x1431 (* 2.0 ?x1430)))
 (let ((?x1329 (* 2.0 l_0_1_7)))
 (let ((?x1428 (* ?x1329 l_0_1_8)))
 (let ((?x1423 (* l_0_1_27 l_0_1_27)))
 (let ((?x1421 (* l_0_1_26 l_0_1_26)))
 (let ((?x1419 (* l_0_1_21 l_0_1_21)))
 (let ((?x1417 (* l_0_1_20 l_0_1_20)))
 (let ((?x1411 (* 2.0 l_0_1_13)))
 (let ((?x1412 (* ?x1411 l_0_1_14)))
 (let ((?x1416 (+ (+ (* (* (- 2.0) l_0_1_1) l_0_1_2) ?x1412) (* 1.0 (* l_0_1_2 l_0_1_2)))))
 (let ((?x1427 (+ (- (- (- (- ?x1416 ?x1417) ?x1419) ?x1421) ?x1423) (* 1.0 (* l_0_1_3 l_0_1_3)))))
 (= (+ (+ (- ?x1427 ?x1428) ?x1431) ?x1434) 0.0))))))))))))))))
(assert
 (let ((?x1380 (* (* 4.0 l_0_1_7) l_0_1_8)))
 (let ((?x1493 (* (* 2.0 l_0_1_3) l_0_1_5)))
 (let ((?x1478 (* (* 2.0 l_0_1_2) l_0_1_4)))
 (let ((?x1411 (* 2.0 l_0_1_13)))
 (let ((?x1475 (* ?x1411 l_0_1_16)))
 (let ((?x1473 (* (* 4.0 l_0_1_11) l_0_1_9)))
 (let ((?x1467 (* 2.0 l_0_1_10)))
 (let ((?x1468 (* ?x1467 l_0_1_7)))
 (let ((?x1471 (+ (- (* (* (- 2.0) l_0_1_1) l_0_1_4) ?x1468) (* (* 4.0 l_0_1_10) l_0_1_8))))
 (let ((?x1482 (- (+ (+ (+ ?x1471 ?x1473) ?x1475) ?x1478) (* (* 2.0 l_0_1_20) l_0_1_22))))
 (let ((?x1488 (- (- ?x1482 (* (* 2.0 l_0_1_21) l_0_1_23)) (* (* 2.0 l_0_1_26) l_0_1_28))))
 (= (- (+ (- ?x1488 (* (* 2.0 l_0_1_27) l_0_1_29)) ?x1493) ?x1380) 0.0)))))))))))))
(assert
 (let ((?x1433 (* l_0_1_9 l_0_1_9)))
 (let ((?x1430 (* l_0_1_8 l_0_1_8)))
 (let ((?x1425 (* l_0_1_3 l_0_1_3)))
 (let ((?x1414 (* l_0_1_2 l_0_1_2)))
 (let ((?x1553 (- (- (+ (* l_0_1_14 l_0_1_14) (* l_0_1_15 l_0_1_15)) ?x1414) ?x1425)))
 (= (- (- ?x1553 ?x1430) ?x1433) 0.0)))))))
(assert
 (let ((?x1493 (* (* 2.0 l_0_1_3) l_0_1_5)))
 (let ((?x1478 (* (* 2.0 l_0_1_2) l_0_1_4)))
 (let ((?x1580 (* (* 2.0 l_0_1_15) l_0_1_17)))
 (let ((?x1577 (* (* 2.0 l_0_1_14) l_0_1_16)))
 (let ((?x1573 (* 2.0 l_0_1_11)))
 (let ((?x1574 (* ?x1573 l_0_1_9)))
 (let ((?x1582 (- (+ (+ (- (* (* (- 2.0) l_0_1_10) l_0_1_8) ?x1574) ?x1577) ?x1580) ?x1478)))
 (let ((?x1589 (- (- (- ?x1582 ?x1493) (* (* 2.0 l_0_1_8) l_0_1_8)) (* (* 2.0 l_0_1_9) l_0_1_9))))
 (= ?x1589 0.0))))))))))
(assert
 (let ((?x1329 (* 2.0 l_0_1_7)))
 (let ((?x1428 (* ?x1329 l_0_1_8)))
 (let ((?x1286 (* l_0_1_6 l_0_1_6)))
 (let ((?x1283 (* l_0_1_5 l_0_1_5)))
 (let ((?x1280 (* l_0_1_4 l_0_1_4)))
 (let ((?x1629 (* l_0_1_18 l_0_1_18)))
 (let ((?x1627 (* l_0_1_17 l_0_1_17)))
 (let ((?x1625 (* l_0_1_16 l_0_1_16)))
 (let ((?x1411 (* 2.0 l_0_1_13)))
 (let ((?x1412 (* ?x1411 l_0_1_14)))
 (let ((?x1263 (* l_0_1_12 l_0_1_12)))
 (let ((?x1260 (* l_0_1_11 l_0_1_11)))
 (let ((?x1473 (* (* 4.0 l_0_1_11) l_0_1_9)))
 (let ((?x1621 (- (- (* (* (- 4.0) l_0_1_10) l_0_1_8) (* l_0_1_10 l_0_1_10)) ?x1473)))
 (let ((?x1631 (- (+ (+ (+ (- (- (- ?x1621 ?x1260) ?x1263) ?x1412) ?x1625) ?x1627) ?x1629) ?x1280)))
 (= (+ (- (- ?x1631 ?x1283) ?x1286) ?x1428) 0.0)))))))))))))))))
(assert
 (let ((?x1411 (* 2.0 l_0_1_13)))
 (let ((?x1475 (* ?x1411 l_0_1_16)))
 (let ((?x1467 (* 2.0 l_0_1_10)))
 (let ((?x1468 (* ?x1467 l_0_1_7)))
 (let ((?x1672 (- (- (- ?x1468 (* ?x1467 l_0_1_10)) (* (* 2.0 l_0_1_11) l_0_1_11)) (* (* 2.0 l_0_1_12) l_0_1_12))))
 (= (- ?x1672 ?x1475) 0.0)))))))
(assert
 (let ((?x1433 (* l_0_1_9 l_0_1_9)))
 (let ((?x1430 (* l_0_1_8 l_0_1_8)))
 (let ((?x1696 (+ (+ (- (* (- l_0_1_14) l_0_1_14) (* l_0_1_15 l_0_1_15)) ?x1430) ?x1433)))
 (= ?x1696 0.0)))))
(assert
 (let ((?x1580 (* (* 2.0 l_0_1_15) l_0_1_17)))
 (let ((?x1577 (* (* 2.0 l_0_1_14) l_0_1_16)))
 (let ((?x1573 (* 2.0 l_0_1_11)))
 (let ((?x1574 (* ?x1573 l_0_1_9)))
 (= (- (- (+ (* (* 2.0 l_0_1_10) l_0_1_8) ?x1574) ?x1577) ?x1580) 0.0))))))
(assert
 (let ((?x1629 (* l_0_1_18 l_0_1_18)))
 (let ((?x1627 (* l_0_1_17 l_0_1_17)))
 (let ((?x1625 (* l_0_1_16 l_0_1_16)))
 (let ((?x1263 (* l_0_1_12 l_0_1_12)))
 (let ((?x1717 (- (+ (+ (* l_0_1_10 l_0_1_10) (* l_0_1_11 l_0_1_11)) ?x1263) ?x1625)))
 (= (- (- ?x1717 ?x1627) ?x1629) 0.0)))))))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_6 0.0))
(assert
 (>= l_0_1_7 0.0))
(assert
 (>= l_0_1_9 0.0))
(assert
 (>= l_0_1_12 0.0))
(assert
 (>= l_0_1_13 0.0))
(assert
 (>= l_0_1_15 0.0))
(assert
 (>= l_0_1_18 0.0))
(assert
 (>= l_0_1_19 0.0))
(assert
 (>= l_0_1_21 0.0))
(assert
 (>= l_0_1_24 0.0))
(assert
 (>= l_0_1_25 0.0))
(assert
 (>= l_0_1_27 0.0))
(assert
 (>= l_0_1_30 0.0))
(assert
 (let ((?x1762 (* l_0_2_7 l_0_2_7)))
 (let ((?x1760 (* (* 4.0 l_0_2_7) l_0_2_8)))
 (let ((?x1748 (* l_0_2_13 l_0_2_13)))
 (let ((?x1749 (+ (- (* (* 2.0 l_0_2_1) l_0_2_2) (* l_0_2_1 l_0_2_1)) ?x1748)))
 (let ((?x1755 (- (- ?x1749 (* (* 2.0 l_0_2_19) l_0_2_20)) (* (* 2.0 l_0_2_25) l_0_2_26))))
 (= (- (+ (- ?x1755 (* (* 2.0 l_0_2_31) l_0_2_32)) ?x1760) ?x1762) 0.0)))))))
(assert
 (let ((?x1762 (* l_0_2_7 l_0_2_7)))
 (let ((?x1828 (* l_0_2_36 l_0_2_36)))
 (let ((?x1826 (* l_0_2_35 l_0_2_35)))
 (let ((?x1824 (* l_0_2_34 l_0_2_34)))
 (let ((?x1822 (* l_0_2_30 l_0_2_30)))
 (let ((?x1820 (* l_0_2_29 l_0_2_29)))
 (let ((?x1818 (* l_0_2_28 l_0_2_28)))
 (let ((?x1816 (* l_0_2_24 l_0_2_24)))
 (let ((?x1814 (* l_0_2_23 l_0_2_23)))
 (let ((?x1812 (* l_0_2_22 l_0_2_22)))
 (let ((?x1748 (* l_0_2_13 l_0_2_13)))
 (let ((?x1808 (* l_0_2_12 l_0_2_12)))
 (let ((?x1809 (* 2.0 ?x1808)))
 (let ((?x1805 (* l_0_2_11 l_0_2_11)))
 (let ((?x1806 (* 2.0 ?x1805)))
 (let ((?x1802 (* l_0_2_10 l_0_2_10)))
 (let ((?x1803 (* 2.0 ?x1802)))
 (let ((?x1811 (- (+ (+ (+ (* (* (- 4.0) l_0_2_10) l_0_2_7) ?x1803) ?x1806) ?x1809) ?x1748)))
 (let ((?x1825 (- (- (- (- (- (- (- ?x1811 ?x1812) ?x1814) ?x1816) ?x1818) ?x1820) ?x1822) ?x1824)))
 (let ((?x1835 (+ (+ (- (- ?x1825 ?x1826) ?x1828) (* 1.0 (* l_0_2_4 l_0_2_4))) (* 1.0 (* l_0_2_5 l_0_2_5)))))
 (= (+ (+ ?x1835 (* 1.0 (* l_0_2_6 l_0_2_6))) ?x1762) 0.0))))))))))))))))))))))
(assert
 (let ((?x1885 (+ (* (* 2.0 l_0_2_1) l_0_2_4) (* (* 4.0 l_0_2_10) l_0_2_7))))
 (let ((?x1889 (- (- ?x1885 (* (* 2.0 l_0_2_19) l_0_2_22)) (* (* 2.0 l_0_2_25) l_0_2_28))))
 (let ((?x1894 (- (- ?x1889 (* (* 2.0 l_0_2_31) l_0_2_34)) (* (* 2.0 l_0_2_7) l_0_2_7))))
 (= ?x1894 0.0)))))
(assert
 (let ((?x1762 (* l_0_2_7 l_0_2_7)))
 (let ((?x1917 (* 2.0 ?x1762)))
 (let ((?x1930 (* l_0_2_31 l_0_2_31)))
 (let ((?x1928 (* l_0_2_25 l_0_2_25)))
 (let ((?x1929 (- (- (* 1.0 (* l_0_2_1 l_0_2_1)) (* l_0_2_19 l_0_2_19)) ?x1928)))
 (= (+ (- ?x1929 ?x1930) ?x1917) 0.0)))))))
(assert
 (let ((?x1972 (* l_0_2_9 l_0_2_9)))
 (let ((?x1973 (* 2.0 ?x1972)))
 (let ((?x1969 (* l_0_2_8 l_0_2_8)))
 (let ((?x1970 (* 2.0 ?x1969)))
 (let ((?x1892 (* 2.0 l_0_2_7)))
 (let ((?x1967 (* ?x1892 l_0_2_8)))
 (let ((?x1965 (* l_0_2_33 l_0_2_33)))
 (let ((?x1963 (* l_0_2_32 l_0_2_32)))
 (let ((?x1958 (* l_0_2_27 l_0_2_27)))
 (let ((?x1956 (* l_0_2_26 l_0_2_26)))
 (let ((?x1954 (* l_0_2_21 l_0_2_21)))
 (let ((?x1952 (* l_0_2_20 l_0_2_20)))
 (let ((?x1946 (* 2.0 l_0_2_13)))
 (let ((?x1947 (* ?x1946 l_0_2_14)))
 (let ((?x1951 (+ (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) ?x1947) (* 1.0 (* l_0_2_2 l_0_2_2)))))
 (let ((?x1962 (+ (- (- (- (- ?x1951 ?x1952) ?x1954) ?x1956) ?x1958) (* 1.0 (* l_0_2_3 l_0_2_3)))))
 (= (+ (+ (- (- (- ?x1962 ?x1963) ?x1965) ?x1967) ?x1970) ?x1973) 0.0))))))))))))))))))
(assert
 (let ((?x1760 (* (* 4.0 l_0_2_7) l_0_2_8)))
 (let ((?x2037 (* (* 2.0 l_0_2_3) l_0_2_5)))
 (let ((?x2022 (* (* 2.0 l_0_2_2) l_0_2_4)))
 (let ((?x1946 (* 2.0 l_0_2_13)))
 (let ((?x2019 (* ?x1946 l_0_2_16)))
 (let ((?x2017 (* (* 4.0 l_0_2_11) l_0_2_9)))
 (let ((?x2011 (* 2.0 l_0_2_10)))
 (let ((?x2012 (* ?x2011 l_0_2_7)))
 (let ((?x2015 (+ (- (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x2012) (* (* 4.0 l_0_2_10) l_0_2_8))))
 (let ((?x2026 (- (+ (+ (+ ?x2015 ?x2017) ?x2019) ?x2022) (* (* 2.0 l_0_2_20) l_0_2_22))))
 (let ((?x2032 (- (- ?x2026 (* (* 2.0 l_0_2_21) l_0_2_23)) (* (* 2.0 l_0_2_26) l_0_2_28))))
 (let ((?x2041 (- (+ (- ?x2032 (* (* 2.0 l_0_2_27) l_0_2_29)) ?x2037) (* (* 2.0 l_0_2_32) l_0_2_34))))
 (= (- (- ?x2041 (* (* 2.0 l_0_2_33) l_0_2_35)) ?x1760) 0.0))))))))))))))
(assert
 (let ((?x1972 (* l_0_2_9 l_0_2_9)))
 (let ((?x1969 (* l_0_2_8 l_0_2_8)))
 (let ((?x1960 (* l_0_2_3 l_0_2_3)))
 (let ((?x1949 (* l_0_2_2 l_0_2_2)))
 (let ((?x2114 (- (- (+ (* l_0_2_14 l_0_2_14) (* l_0_2_15 l_0_2_15)) ?x1949) ?x1960)))
 (= (- (- ?x2114 ?x1969) ?x1972) 0.0)))))))
(assert
 (let ((?x2037 (* (* 2.0 l_0_2_3) l_0_2_5)))
 (let ((?x2022 (* (* 2.0 l_0_2_2) l_0_2_4)))
 (let ((?x2141 (* (* 2.0 l_0_2_15) l_0_2_17)))
 (let ((?x2138 (* (* 2.0 l_0_2_14) l_0_2_16)))
 (let ((?x2134 (* 2.0 l_0_2_11)))
 (let ((?x2135 (* ?x2134 l_0_2_9)))
 (let ((?x2143 (- (+ (+ (- (* (* (- 2.0) l_0_2_10) l_0_2_8) ?x2135) ?x2138) ?x2141) ?x2022)))
 (let ((?x2150 (- (- (- ?x2143 ?x2037) (* (* 2.0 l_0_2_8) l_0_2_8)) (* (* 2.0 l_0_2_9) l_0_2_9))))
 (= ?x2150 0.0))))))))))
(assert
 (let ((?x1892 (* 2.0 l_0_2_7)))
 (let ((?x1967 (* ?x1892 l_0_2_8)))
 (let ((?x1836 (* l_0_2_6 l_0_2_6)))
 (let ((?x1833 (* l_0_2_5 l_0_2_5)))
 (let ((?x1830 (* l_0_2_4 l_0_2_4)))
 (let ((?x2190 (* l_0_2_18 l_0_2_18)))
 (let ((?x2188 (* l_0_2_17 l_0_2_17)))
 (let ((?x2186 (* l_0_2_16 l_0_2_16)))
 (let ((?x1946 (* 2.0 l_0_2_13)))
 (let ((?x1947 (* ?x1946 l_0_2_14)))
 (let ((?x1808 (* l_0_2_12 l_0_2_12)))
 (let ((?x1805 (* l_0_2_11 l_0_2_11)))
 (let ((?x2017 (* (* 4.0 l_0_2_11) l_0_2_9)))
 (let ((?x2182 (- (- (* (* (- 4.0) l_0_2_10) l_0_2_8) (* l_0_2_10 l_0_2_10)) ?x2017)))
 (let ((?x2192 (- (+ (+ (+ (- (- (- ?x2182 ?x1805) ?x1808) ?x1947) ?x2186) ?x2188) ?x2190) ?x1830)))
 (= (+ (- (- ?x2192 ?x1833) ?x1836) ?x1967) 0.0)))))))))))))))))
(assert
 (let ((?x1946 (* 2.0 l_0_2_13)))
 (let ((?x2019 (* ?x1946 l_0_2_16)))
 (let ((?x2011 (* 2.0 l_0_2_10)))
 (let ((?x2012 (* ?x2011 l_0_2_7)))
 (let ((?x2227 (- (- (- ?x2012 (* ?x2011 l_0_2_10)) (* (* 2.0 l_0_2_11) l_0_2_11)) (* (* 2.0 l_0_2_12) l_0_2_12))))
 (= (- ?x2227 ?x2019) 0.0)))))))
(assert
 (let ((?x1972 (* l_0_2_9 l_0_2_9)))
 (let ((?x1969 (* l_0_2_8 l_0_2_8)))
 (let ((?x2248 (+ (+ (- (* (- l_0_2_14) l_0_2_14) (* l_0_2_15 l_0_2_15)) ?x1969) ?x1972)))
 (= ?x2248 0.0)))))
(assert
 (let ((?x2141 (* (* 2.0 l_0_2_15) l_0_2_17)))
 (let ((?x2138 (* (* 2.0 l_0_2_14) l_0_2_16)))
 (let ((?x2134 (* 2.0 l_0_2_11)))
 (let ((?x2135 (* ?x2134 l_0_2_9)))
 (= (- (- (+ (* (* 2.0 l_0_2_10) l_0_2_8) ?x2135) ?x2138) ?x2141) 0.0))))))
(assert
 (let ((?x2190 (* l_0_2_18 l_0_2_18)))
 (let ((?x2188 (* l_0_2_17 l_0_2_17)))
 (let ((?x2186 (* l_0_2_16 l_0_2_16)))
 (let ((?x1808 (* l_0_2_12 l_0_2_12)))
 (let ((?x2269 (- (+ (+ (* l_0_2_10 l_0_2_10) (* l_0_2_11 l_0_2_11)) ?x1808) ?x2186)))
 (= (- (- ?x2269 ?x2188) ?x2190) 0.0)))))))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (>= l_0_2_9 0.0))
(assert
 (>= l_0_2_12 0.0))
(assert
 (>= l_0_2_13 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_18 0.0))
(assert
 (>= l_0_2_19 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_24 0.0))
(assert
 (>= l_0_2_25 0.0))
(assert
 (>= l_0_2_27 0.0))
(assert
 (>= l_0_2_30 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_33 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (let ((?x2307 (* l_0_3_61 l_0_3_61)))
 (let ((?x2306 (- (* 1.0 (* l_0_3_1 l_0_3_1)) (* (* 1.0 l_0_3_46) l_0_3_46))))
 (= (+ (- ?x2306 ?x2307) 1.0) 0.0))))
(assert
 (let ((?x2327 (* 2.0 l_0_3_46)))
 (let ((?x2328 (* ?x2327 l_0_3_52)))
 (let ((?x2324 (* 4.0 l_0_3_31)))
 (let ((?x2325 (* ?x2324 l_0_3_31)))
 (let ((?x2321 (* l_0_3_16 l_0_3_16)))
 (let ((?x2322 (* 4.0 ?x2321)))
 (let ((?x2323 (+ (- (* (* 2.0 l_0_3_1) l_0_3_7) (* l_0_3_1 l_0_3_1)) ?x2322)))
 (= (- (- (- ?x2323 ?x2325) ?x2328) (* (* 2.0 l_0_3_61) l_0_3_67)) 0.0)))))))))
(assert
 (let ((?x2385 (* 2.0 l_0_3_48)))
 (let ((?x2386 (* ?x2385 l_0_3_53)))
 (let ((?x2382 (* 2.0 l_0_3_47)))
 (let ((?x2383 (* ?x2382 l_0_3_52)))
 (let ((?x2327 (* 2.0 l_0_3_46)))
 (let ((?x2328 (* ?x2327 l_0_3_52)))
 (let ((?x2376 (* 8.0 l_0_3_31)))
 (let ((?x2379 (* ?x2376 l_0_3_37)))
 (let ((?x2377 (* ?x2376 l_0_3_32)))
 (let ((?x2373 (* 2.0 l_0_3_3)))
 (let ((?x2374 (* ?x2373 l_0_3_8)))
 (let ((?x2370 (* 2.0 l_0_3_2)))
 (let ((?x2371 (* ?x2370 l_0_3_7)))
 (let ((?x2365 (* 8.0 l_0_3_16)))
 (let ((?x2368 (* ?x2365 l_0_3_22)))
 (let ((?x2372 (+ (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) (* ?x2365 l_0_3_17)) ?x2368) ?x2371)))
 (let ((?x2390 (- (- (- (+ (- (- (+ ?x2372 ?x2374) ?x2377) ?x2379) ?x2328) ?x2383) ?x2386) (* (* 2.0 l_0_3_62) l_0_3_67))))
 (= (- ?x2390 (* (* 2.0 l_0_3_63) l_0_3_68)) 0.0)))))))))))))))))))
(assert
 (let ((?x2471 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2467 (* 2.0 l_0_3_51)))
 (let ((?x2468 (* ?x2467 l_0_3_54)))
 (let ((?x2464 (* 2.0 l_0_3_50)))
 (let ((?x2465 (* ?x2464 l_0_3_53)))
 (let ((?x2462 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2458 (* 2.0 l_0_3_49)))
 (let ((?x2459 (* ?x2458 l_0_3_52)))
 (let ((?x2456 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2324 (* 4.0 l_0_3_31)))
 (let ((?x2453 (* ?x2324 l_0_3_37)))
 (let ((?x2376 (* 8.0 l_0_3_31)))
 (let ((?x2451 (* ?x2376 l_0_3_34)))
 (let ((?x2448 (* 4.0 l_0_3_16)))
 (let ((?x2449 (* ?x2448 l_0_3_22)))
 (let ((?x2365 (* 8.0 l_0_3_16)))
 (let ((?x2446 (* ?x2365 l_0_3_19)))
 (let ((?x2454 (+ (- (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x2446) ?x2449) ?x2451) ?x2453)))
 (let ((?x2475 (- (+ (- (- (+ (- (+ ?x2454 ?x2456) ?x2459) ?x2462) ?x2465) ?x2468) ?x2471) (* (* 2.0 l_0_3_64) l_0_3_67))))
 (let ((?x2481 (- (- ?x2475 (* (* 2.0 l_0_3_65) l_0_3_68)) (* (* 2.0 l_0_3_66) l_0_3_69))))
 (= ?x2481 0.0))))))))))))))))))))))
(assert
 (let ((?x2580 (* l_0_3_70 l_0_3_70)))
 (let ((?x2575 (* l_0_3_69 l_0_3_69)))
 (let ((?x2573 (* l_0_3_68 l_0_3_68)))
 (let ((?x2571 (* l_0_3_67 l_0_3_67)))
 (let ((?x2376 (* 8.0 l_0_3_31)))
 (let ((?x2379 (* ?x2376 l_0_3_37)))
 (let ((?x2365 (* 8.0 l_0_3_16)))
 (let ((?x2368 (* ?x2365 l_0_3_22)))
 (let ((?x2556 (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) (* 1.0 (* l_0_3_10 l_0_3_10)))))
 (let ((?x2564 (- (- (- (+ ?x2556 ?x2368) ?x2379) (* (* 1.0 l_0_3_52) l_0_3_52)) (* (* 1.0 l_0_3_53) l_0_3_53))))
 (let ((?x2570 (- (- ?x2564 (* (* 1.0 l_0_3_54) l_0_3_54)) (* (* 1.0 l_0_3_55) l_0_3_55))))
 (let ((?x2579 (+ (- (- (- ?x2570 ?x2571) ?x2573) ?x2575) (* 1.0 (* l_0_3_7 l_0_3_7)))))
 (let ((?x2587 (+ (+ (- ?x2579 ?x2580) (* 1.0 (* l_0_3_8 l_0_3_8))) (* 1.0 (* l_0_3_9 l_0_3_9)))))
 (= ?x2587 0.0)))))))))))))))
(assert
 (let ((?x2657 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x2654 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x2651 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x2648 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x2376 (* 8.0 l_0_3_31)))
 (let ((?x2645 (* ?x2376 l_0_3_41)))
 (let ((?x2324 (* 4.0 l_0_3_31)))
 (let ((?x2453 (* ?x2324 l_0_3_37)))
 (let ((?x2365 (* 8.0 l_0_3_16)))
 (let ((?x2642 (* ?x2365 l_0_3_26)))
 (let ((?x2448 (* 4.0 l_0_3_16)))
 (let ((?x2449 (* ?x2448 l_0_3_22)))
 (let ((?x2638 (* 2.0 l_0_3_13)))
 (let ((?x2639 (* ?x2638 l_0_3_9)))
 (let ((?x2635 (* 2.0 l_0_3_12)))
 (let ((?x2636 (* ?x2635 l_0_3_8)))
 (let ((?x2632 (* 2.0 l_0_3_11)))
 (let ((?x2633 (* ?x2632 l_0_3_7)))
 (let ((?x2631 (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) (* (* 2.0 l_0_3_10) l_0_3_14))))
 (let ((?x2646 (- (- (+ (+ (+ (+ (+ ?x2631 ?x2633) ?x2636) ?x2639) ?x2449) ?x2642) ?x2453) ?x2645)))
 (let ((?x2661 (- (- (- (- (- ?x2646 ?x2648) ?x2651) ?x2654) ?x2657) (* (* 2.0 l_0_3_67) l_0_3_71))))
 (let ((?x2667 (- (- ?x2661 (* (* 2.0 l_0_3_68) l_0_3_72)) (* (* 2.0 l_0_3_69) l_0_3_73))))
 (= (- ?x2667 (* (* 2.0 l_0_3_70) l_0_3_74)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x2385 (* 2.0 l_0_3_48)))
 (let ((?x2386 (* ?x2385 l_0_3_53)))
 (let ((?x2382 (* 2.0 l_0_3_47)))
 (let ((?x2383 (* ?x2382 l_0_3_52)))
 (let ((?x2767 (* 4.0 l_0_3_33)))
 (let ((?x2768 (* ?x2767 l_0_3_33)))
 (let ((?x2764 (* 8.0 l_0_3_33)))
 (let ((?x2765 (* ?x2764 l_0_3_38)))
 (let ((?x2761 (* 4.0 l_0_3_32)))
 (let ((?x2762 (* ?x2761 l_0_3_32)))
 (let ((?x2758 (* 8.0 l_0_3_32)))
 (let ((?x2759 (* ?x2758 l_0_3_37)))
 (let ((?x2756 (* l_0_3_3 l_0_3_3)))
 (let ((?x2754 (* l_0_3_2 l_0_3_2)))
 (let ((?x2751 (* l_0_3_18 l_0_3_18)))
 (let ((?x2752 (* 4.0 ?x2751)))
 (let ((?x2748 (* 8.0 l_0_3_18)))
 (let ((?x2749 (* ?x2748 l_0_3_23)))
 (let ((?x2745 (* l_0_3_17 l_0_3_17)))
 (let ((?x2746 (* 4.0 ?x2745)))
 (let ((?x2743 (* 8.0 l_0_3_17)))
 (let ((?x2744 (* ?x2743 l_0_3_22)))
 (let ((?x2763 (- (- (- (- (+ (+ (+ ?x2744 ?x2746) ?x2749) ?x2752) ?x2754) ?x2756) ?x2759) ?x2762)))
 (= (+ (+ (- (- ?x2763 ?x2765) ?x2768) ?x2383) ?x2386) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x2467 (* 2.0 l_0_3_51)))
 (let ((?x2468 (* ?x2467 l_0_3_54)))
 (let ((?x2464 (* 2.0 l_0_3_50)))
 (let ((?x2465 (* ?x2464 l_0_3_53)))
 (let ((?x2458 (* 2.0 l_0_3_49)))
 (let ((?x2459 (* ?x2458 l_0_3_52)))
 (let ((?x2846 (* 8.0 l_0_3_36)))
 (let ((?x2847 (* ?x2846 l_0_3_39)))
 (let ((?x2843 (* 8.0 l_0_3_35)))
 (let ((?x2844 (* ?x2843 l_0_3_38)))
 (let ((?x2840 (* 8.0 l_0_3_34)))
 (let ((?x2841 (* ?x2840 l_0_3_37)))
 (let ((?x2767 (* 4.0 l_0_3_33)))
 (let ((?x2838 (* ?x2767 l_0_3_38)))
 (let ((?x2764 (* 8.0 l_0_3_33)))
 (let ((?x2836 (* ?x2764 l_0_3_35)))
 (let ((?x2761 (* 4.0 l_0_3_32)))
 (let ((?x2834 (* ?x2761 l_0_3_37)))
 (let ((?x2758 (* 8.0 l_0_3_32)))
 (let ((?x2832 (* ?x2758 l_0_3_34)))
 (let ((?x2373 (* 2.0 l_0_3_3)))
 (let ((?x2830 (* ?x2373 l_0_3_5)))
 (let ((?x2827 (* 8.0 l_0_3_21)))
 (let ((?x2828 (* ?x2827 l_0_3_24)))
 (let ((?x2824 (* 8.0 l_0_3_20)))
 (let ((?x2825 (* ?x2824 l_0_3_23)))
 (let ((?x2370 (* 2.0 l_0_3_2)))
 (let ((?x2822 (* ?x2370 l_0_3_4)))
 (let ((?x2819 (* 8.0 l_0_3_19)))
 (let ((?x2820 (* ?x2819 l_0_3_22)))
 (let ((?x2816 (* 4.0 l_0_3_18)))
 (let ((?x2817 (* ?x2816 l_0_3_23)))
 (let ((?x2748 (* 8.0 l_0_3_18)))
 (let ((?x2814 (* ?x2748 l_0_3_20)))
 (let ((?x2811 (* 4.0 l_0_3_17)))
 (let ((?x2812 (* ?x2811 l_0_3_22)))
 (let ((?x2743 (* 8.0 l_0_3_17)))
 (let ((?x2810 (* ?x2743 l_0_3_19)))
 (let ((?x2829 (+ (+ (- (+ (- (+ (- ?x2810 ?x2812) ?x2814) ?x2817) ?x2820) ?x2822) ?x2825) ?x2828)))
 (let ((?x2845 (- (- (+ (- (+ (- (- ?x2829 ?x2830) ?x2832) ?x2834) ?x2836) ?x2838) ?x2841) ?x2844)))
 (= (+ (+ (+ (- ?x2845 ?x2847) ?x2459) ?x2465) ?x2468) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2604 (* l_0_3_55 l_0_3_55)))
 (let ((?x2600 (* l_0_3_54 l_0_3_54)))
 (let ((?x2596 (* l_0_3_53 l_0_3_53)))
 (let ((?x2592 (* l_0_3_52 l_0_3_52)))
 (let ((?x2950 (* 4.0 l_0_3_40)))
 (let ((?x2951 (* ?x2950 l_0_3_40)))
 (let ((?x2947 (* 4.0 l_0_3_39)))
 (let ((?x2948 (* ?x2947 l_0_3_39)))
 (let ((?x2944 (* 4.0 l_0_3_38)))
 (let ((?x2945 (* ?x2944 l_0_3_38)))
 (let ((?x2941 (* 4.0 l_0_3_37)))
 (let ((?x2942 (* ?x2941 l_0_3_37)))
 (let ((?x2764 (* 8.0 l_0_3_33)))
 (let ((?x2765 (* ?x2764 l_0_3_38)))
 (let ((?x2758 (* 8.0 l_0_3_32)))
 (let ((?x2759 (* ?x2758 l_0_3_37)))
 (let ((?x2373 (* 2.0 l_0_3_3)))
 (let ((?x2374 (* ?x2373 l_0_3_8)))
 (let ((?x2935 (* l_0_3_25 l_0_3_25)))
 (let ((?x2936 (* 4.0 ?x2935)))
 (let ((?x2932 (* l_0_3_24 l_0_3_24)))
 (let ((?x2933 (* 4.0 ?x2932)))
 (let ((?x2929 (* l_0_3_23 l_0_3_23)))
 (let ((?x2930 (* 4.0 ?x2929)))
 (let ((?x2926 (* l_0_3_22 l_0_3_22)))
 (let ((?x2927 (* 4.0 ?x2926)))
 (let ((?x2370 (* 2.0 l_0_3_2)))
 (let ((?x2371 (* ?x2370 l_0_3_7)))
 (let ((?x2748 (* 8.0 l_0_3_18)))
 (let ((?x2749 (* ?x2748 l_0_3_23)))
 (let ((?x2743 (* 8.0 l_0_3_17)))
 (let ((?x2744 (* ?x2743 l_0_3_22)))
 (let ((?x2938 (- (+ (+ (+ (+ (- (+ ?x2744 ?x2749) ?x2371) ?x2927) ?x2930) ?x2933) ?x2936) ?x2374)))
 (let ((?x2953 (+ (- (- (- (- (- (- ?x2938 ?x2759) ?x2765) ?x2942) ?x2945) ?x2948) ?x2951) ?x2592)))
 (= (+ (+ (+ ?x2953 ?x2596) ?x2600) ?x2604) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2657 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x2654 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x2651 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x2648 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x3042 (* (* 8.0 l_0_3_40) l_0_3_44)))
 (let ((?x3039 (* (* 8.0 l_0_3_39) l_0_3_43)))
 (let ((?x3036 (* (* 8.0 l_0_3_38) l_0_3_42)))
 (let ((?x3033 (* (* 8.0 l_0_3_37) l_0_3_41)))
 (let ((?x2764 (* 8.0 l_0_3_33)))
 (let ((?x3030 (* ?x2764 l_0_3_42)))
 (let ((?x2767 (* 4.0 l_0_3_33)))
 (let ((?x2838 (* ?x2767 l_0_3_38)))
 (let ((?x2758 (* 8.0 l_0_3_32)))
 (let ((?x3027 (* ?x2758 l_0_3_41)))
 (let ((?x2761 (* 4.0 l_0_3_32)))
 (let ((?x2834 (* ?x2761 l_0_3_37)))
 (let ((?x3024 (* (* 8.0 l_0_3_25) l_0_3_29)))
 (let ((?x3021 (* (* 8.0 l_0_3_24) l_0_3_28)))
 (let ((?x3018 (* (* 8.0 l_0_3_23) l_0_3_27)))
 (let ((?x3015 (* (* 8.0 l_0_3_22) l_0_3_26)))
 (let ((?x2748 (* 8.0 l_0_3_18)))
 (let ((?x3012 (* ?x2748 l_0_3_27)))
 (let ((?x2816 (* 4.0 l_0_3_18)))
 (let ((?x2817 (* ?x2816 l_0_3_23)))
 (let ((?x2743 (* 8.0 l_0_3_17)))
 (let ((?x3009 (* ?x2743 l_0_3_26)))
 (let ((?x2811 (* 4.0 l_0_3_17)))
 (let ((?x2812 (* ?x2811 l_0_3_22)))
 (let ((?x2635 (* 2.0 l_0_3_12)))
 (let ((?x3006 (* ?x2635 l_0_3_3)))
 (let ((?x3011 (+ (+ (+ (- (* (* (- 2.0) l_0_3_11) l_0_3_2) ?x3006) ?x2812) ?x3009) ?x2817)))
 (let ((?x3028 (- (- (+ (+ (+ (+ (+ ?x3011 ?x3012) ?x3015) ?x3018) ?x3021) ?x3024) ?x2834) ?x3027)))
 (let ((?x3044 (+ (- (- (- (- (- (- ?x3028 ?x2838) ?x3030) ?x3033) ?x3036) ?x3039) ?x3042) ?x2648)))
 (= (+ (+ (+ ?x3044 ?x2651) ?x2654) ?x2657) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3158 (* l_0_3_6 l_0_3_6)))
 (let ((?x3156 (* l_0_3_5 l_0_3_5)))
 (let ((?x3154 (* l_0_3_4 l_0_3_4)))
 (let ((?x3149 (* 4.0 l_0_3_36)))
 (let ((?x3152 (* ?x3149 l_0_3_36)))
 (let ((?x3150 (* ?x3149 l_0_3_39)))
 (let ((?x3144 (* 4.0 l_0_3_35)))
 (let ((?x3147 (* ?x3144 l_0_3_35)))
 (let ((?x3145 (* ?x3144 l_0_3_38)))
 (let ((?x3139 (* 4.0 l_0_3_34)))
 (let ((?x3142 (* ?x3139 l_0_3_34)))
 (let ((?x3140 (* ?x3139 l_0_3_37)))
 (let ((?x3136 (* 2.0 l_0_3_31)))
 (let ((?x3137 (* ?x3136 l_0_3_37)))
 (let ((?x3133 (* l_0_3_21 l_0_3_21)))
 (let ((?x3134 (* 4.0 ?x3133)))
 (let ((?x3130 (* 4.0 l_0_3_21)))
 (let ((?x3131 (* ?x3130 l_0_3_24)))
 (let ((?x3127 (* l_0_3_20 l_0_3_20)))
 (let ((?x3128 (* 4.0 ?x3127)))
 (let ((?x3124 (* 4.0 l_0_3_20)))
 (let ((?x3125 (* ?x3124 l_0_3_23)))
 (let ((?x3121 (* l_0_3_19 l_0_3_19)))
 (let ((?x3122 (* 4.0 ?x3121)))
 (let ((?x3118 (* 4.0 l_0_3_19)))
 (let ((?x3119 (* ?x3118 l_0_3_22)))
 (let ((?x3116 (* 2.0 l_0_3_16)))
 (let ((?x3117 (* ?x3116 l_0_3_22)))
 (let ((?x3138 (- (+ (- (+ (- (+ (- ?x3117 ?x3119) ?x3122) ?x3125) ?x3128) ?x3131) ?x3134) ?x3137)))
 (let ((?x3155 (- (- (+ (- (+ (- (+ ?x3138 ?x3140) ?x3142) ?x3145) ?x3147) ?x3150) ?x3152) ?x3154)))
 (= (- (- ?x3155 ?x3156) ?x3158) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x2471 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2462 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2990 (* l_0_3_40 l_0_3_40)))
 (let ((?x3243 (* 2.0 ?x2990)))
 (let ((?x2456 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2984 (* l_0_3_39 l_0_3_39)))
 (let ((?x3240 (* 2.0 ?x2984)))
 (let ((?x2978 (* l_0_3_38 l_0_3_38)))
 (let ((?x3238 (* 2.0 ?x2978)))
 (let ((?x2972 (* l_0_3_37 l_0_3_37)))
 (let ((?x3236 (* 2.0 ?x2972)))
 (let ((?x2846 (* 8.0 l_0_3_36)))
 (let ((?x2847 (* ?x2846 l_0_3_39)))
 (let ((?x2843 (* 8.0 l_0_3_35)))
 (let ((?x2844 (* ?x2843 l_0_3_38)))
 (let ((?x2840 (* 8.0 l_0_3_34)))
 (let ((?x2841 (* ?x2840 l_0_3_37)))
 (let ((?x2827 (* 8.0 l_0_3_21)))
 (let ((?x2828 (* ?x2827 l_0_3_24)))
 (let ((?x2824 (* 8.0 l_0_3_20)))
 (let ((?x2825 (* ?x2824 l_0_3_23)))
 (let ((?x2819 (* 8.0 l_0_3_19)))
 (let ((?x2820 (* ?x2819 l_0_3_22)))
 (let ((?x3226 (- (- (+ (+ ?x2820 ?x2825) ?x2828) (* (* 2.0 l_0_3_22) l_0_3_22)) (* (* 2.0 l_0_3_23) l_0_3_23))))
 (let ((?x3232 (- (- ?x3226 (* (* 2.0 l_0_3_24) l_0_3_24)) (* (* 2.0 l_0_3_25) l_0_3_25))))
 (let ((?x3242 (- (+ (+ (+ (- (- (- ?x3232 ?x2841) ?x2844) ?x2847) ?x3236) ?x3238) ?x3240) ?x2456)))
 (= (- (- (+ ?x3242 ?x3243) ?x2462) ?x2471) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x2950 (* 4.0 l_0_3_40)))
 (let ((?x3336 (* ?x2950 l_0_3_44)))
 (let ((?x2947 (* 4.0 l_0_3_39)))
 (let ((?x3334 (* ?x2947 l_0_3_43)))
 (let ((?x2944 (* 4.0 l_0_3_38)))
 (let ((?x3332 (* ?x2944 l_0_3_42)))
 (let ((?x2941 (* 4.0 l_0_3_37)))
 (let ((?x3330 (* ?x2941 l_0_3_41)))
 (let ((?x2846 (* 8.0 l_0_3_36)))
 (let ((?x3328 (* ?x2846 l_0_3_43)))
 (let ((?x3149 (* 4.0 l_0_3_36)))
 (let ((?x3150 (* ?x3149 l_0_3_39)))
 (let ((?x2843 (* 8.0 l_0_3_35)))
 (let ((?x3325 (* ?x2843 l_0_3_42)))
 (let ((?x3144 (* 4.0 l_0_3_35)))
 (let ((?x3145 (* ?x3144 l_0_3_38)))
 (let ((?x2840 (* 8.0 l_0_3_34)))
 (let ((?x3322 (* ?x2840 l_0_3_41)))
 (let ((?x3139 (* 4.0 l_0_3_34)))
 (let ((?x3140 (* ?x3139 l_0_3_37)))
 (let ((?x3319 (* (* 4.0 l_0_3_25) l_0_3_29)))
 (let ((?x3316 (* (* 4.0 l_0_3_24) l_0_3_28)))
 (let ((?x3313 (* (* 4.0 l_0_3_23) l_0_3_27)))
 (let ((?x3310 (* (* 4.0 l_0_3_22) l_0_3_26)))
 (let ((?x2827 (* 8.0 l_0_3_21)))
 (let ((?x3307 (* ?x2827 l_0_3_28)))
 (let ((?x3130 (* 4.0 l_0_3_21)))
 (let ((?x3131 (* ?x3130 l_0_3_24)))
 (let ((?x2824 (* 8.0 l_0_3_20)))
 (let ((?x3304 (* ?x2824 l_0_3_27)))
 (let ((?x3124 (* 4.0 l_0_3_20)))
 (let ((?x3125 (* ?x3124 l_0_3_23)))
 (let ((?x2819 (* 8.0 l_0_3_19)))
 (let ((?x3301 (* ?x2819 l_0_3_26)))
 (let ((?x3118 (* 4.0 l_0_3_19)))
 (let ((?x3119 (* ?x3118 l_0_3_22)))
 (let ((?x2638 (* 2.0 l_0_3_13)))
 (let ((?x3298 (* ?x2638 l_0_3_6)))
 (let ((?x2635 (* 2.0 l_0_3_12)))
 (let ((?x3296 (* ?x2635 l_0_3_5)))
 (let ((?x3302 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x3296) ?x3298) ?x3119) ?x3301)))
 (let ((?x3317 (- (- (- (+ (+ (+ (+ ?x3302 ?x3125) ?x3304) ?x3131) ?x3307) ?x3310) ?x3313) ?x3316)))
 (let ((?x3329 (- (- (- (- (- (- (- ?x3317 ?x3319) ?x3140) ?x3322) ?x3145) ?x3325) ?x3150) ?x3328)))
 (= (+ (+ (+ (+ ?x3329 ?x3330) ?x3332) ?x3334) ?x3336) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2585 (* l_0_3_9 l_0_3_9)))
 (let ((?x2582 (* l_0_3_8 l_0_3_8)))
 (let ((?x2577 (* l_0_3_7 l_0_3_7)))
 (let ((?x2950 (* 4.0 l_0_3_40)))
 (let ((?x2951 (* ?x2950 l_0_3_40)))
 (let ((?x2947 (* 4.0 l_0_3_39)))
 (let ((?x2948 (* ?x2947 l_0_3_39)))
 (let ((?x2944 (* 4.0 l_0_3_38)))
 (let ((?x2945 (* ?x2944 l_0_3_38)))
 (let ((?x2941 (* 4.0 l_0_3_37)))
 (let ((?x2942 (* ?x2941 l_0_3_37)))
 (let ((?x2935 (* l_0_3_25 l_0_3_25)))
 (let ((?x2936 (* 4.0 ?x2935)))
 (let ((?x2932 (* l_0_3_24 l_0_3_24)))
 (let ((?x2933 (* 4.0 ?x2932)))
 (let ((?x2929 (* l_0_3_23 l_0_3_23)))
 (let ((?x2930 (* 4.0 ?x2929)))
 (let ((?x3419 (+ (+ (* (- l_0_3_10) l_0_3_10) (* 4.0 (* l_0_3_22 l_0_3_22))) ?x2930)))
 (let ((?x3426 (- (- (- (- (- (+ (+ ?x3419 ?x2933) ?x2936) ?x2942) ?x2945) ?x2948) ?x2951) ?x2577)))
 (= (- (- ?x3426 ?x2582) ?x2585) 0.0)))))))))))))))))))))
(assert
 (let ((?x3042 (* (* 8.0 l_0_3_40) l_0_3_44)))
 (let ((?x3039 (* (* 8.0 l_0_3_39) l_0_3_43)))
 (let ((?x3036 (* (* 8.0 l_0_3_38) l_0_3_42)))
 (let ((?x3033 (* (* 8.0 l_0_3_37) l_0_3_41)))
 (let ((?x2935 (* l_0_3_25 l_0_3_25)))
 (let ((?x3264 (* 2.0 ?x2935)))
 (let ((?x3024 (* (* 8.0 l_0_3_25) l_0_3_29)))
 (let ((?x2932 (* l_0_3_24 l_0_3_24)))
 (let ((?x3259 (* 2.0 ?x2932)))
 (let ((?x3021 (* (* 8.0 l_0_3_24) l_0_3_28)))
 (let ((?x2929 (* l_0_3_23 l_0_3_23)))
 (let ((?x3254 (* 2.0 ?x2929)))
 (let ((?x3018 (* (* 8.0 l_0_3_23) l_0_3_27)))
 (let ((?x2926 (* l_0_3_22 l_0_3_22)))
 (let ((?x3249 (* 2.0 ?x2926)))
 (let ((?x3015 (* (* 8.0 l_0_3_22) l_0_3_26)))
 (let ((?x2638 (* 2.0 l_0_3_13)))
 (let ((?x2639 (* ?x2638 l_0_3_9)))
 (let ((?x2635 (* 2.0 l_0_3_12)))
 (let ((?x2636 (* ?x2635 l_0_3_8)))
 (let ((?x2632 (* 2.0 l_0_3_11)))
 (let ((?x2633 (* ?x2632 l_0_3_7)))
 (let ((?x3453 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_14) ?x2633) ?x2636) ?x2639) ?x3015)))
 (let ((?x3460 (+ (+ (+ (+ (+ (+ (+ ?x3453 ?x3249) ?x3018) ?x3254) ?x3021) ?x3259) ?x3024) ?x3264)))
 (let ((?x3468 (- (- (- (- ?x3460 ?x3033) (* (* 2.0 l_0_3_37) l_0_3_37)) ?x3036) (* (* 2.0 l_0_3_38) l_0_3_38))))
 (let ((?x3476 (- (- (- (- ?x3468 ?x3039) (* (* 2.0 l_0_3_39) l_0_3_39)) ?x3042) (* (* 2.0 l_0_3_40) l_0_3_40))))
 (= ?x3476 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x3566 (* (* 4.0 l_0_3_45) l_0_3_45)))
 (let ((?x3563 (* (* 4.0 l_0_3_44) l_0_3_44)))
 (let ((?x3560 (* (* 4.0 l_0_3_43) l_0_3_43)))
 (let ((?x3557 (* (* 4.0 l_0_3_42) l_0_3_42)))
 (let ((?x3554 (* (* 4.0 l_0_3_41) l_0_3_41)))
 (let ((?x2950 (* 4.0 l_0_3_40)))
 (let ((?x3336 (* ?x2950 l_0_3_44)))
 (let ((?x2947 (* 4.0 l_0_3_39)))
 (let ((?x3334 (* ?x2947 l_0_3_43)))
 (let ((?x2944 (* 4.0 l_0_3_38)))
 (let ((?x3332 (* ?x2944 l_0_3_42)))
 (let ((?x2941 (* 4.0 l_0_3_37)))
 (let ((?x3330 (* ?x2941 l_0_3_41)))
 (let ((?x3136 (* 2.0 l_0_3_31)))
 (let ((?x3137 (* ?x3136 l_0_3_37)))
 (let ((?x3545 (* l_0_3_30 l_0_3_30)))
 (let ((?x3546 (* 4.0 ?x3545)))
 (let ((?x3542 (* l_0_3_29 l_0_3_29)))
 (let ((?x3543 (* 4.0 ?x3542)))
 (let ((?x3539 (* l_0_3_28 l_0_3_28)))
 (let ((?x3540 (* 4.0 ?x3539)))
 (let ((?x3536 (* l_0_3_27 l_0_3_27)))
 (let ((?x3537 (* 4.0 ?x3536)))
 (let ((?x3533 (* l_0_3_26 l_0_3_26)))
 (let ((?x3534 (* 4.0 ?x3533)))
 (let ((?x3319 (* (* 4.0 l_0_3_25) l_0_3_29)))
 (let ((?x3316 (* (* 4.0 l_0_3_24) l_0_3_28)))
 (let ((?x3313 (* (* 4.0 l_0_3_23) l_0_3_27)))
 (let ((?x3310 (* (* 4.0 l_0_3_22) l_0_3_26)))
 (let ((?x3116 (* 2.0 l_0_3_16)))
 (let ((?x3117 (* ?x3116 l_0_3_22)))
 (let ((?x3526 (* l_0_3_15 l_0_3_15)))
 (let ((?x3524 (* l_0_3_14 l_0_3_14)))
 (let ((?x3522 (* l_0_3_13 l_0_3_13)))
 (let ((?x3525 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3522) ?x3524)))
 (let ((?x3535 (+ (+ (+ (+ (+ (- (- ?x3525 ?x3526) ?x3117) ?x3310) ?x3313) ?x3316) ?x3319) ?x3534)))
 (let ((?x3550 (- (- (+ (+ (+ (+ (+ ?x3535 ?x3537) ?x3540) ?x3543) ?x3546) ?x3137) ?x3330) ?x3332)))
 (let ((?x3567 (- (- (- (- (- (- (- ?x3550 ?x3334) ?x3336) ?x3554) ?x3557) ?x3560) ?x3563) ?x3566)))
 (= ?x3567 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2311 (* l_0_3_46 l_0_3_46)))
 (let ((?x2327 (* 2.0 l_0_3_46)))
 (let ((?x3645 (* ?x2327 l_0_3_47)))
 (let ((?x2324 (* 4.0 l_0_3_31)))
 (let ((?x2325 (* ?x2324 l_0_3_31)))
 (let ((?x2321 (* l_0_3_16 l_0_3_16)))
 (let ((?x2322 (* 4.0 ?x2321)))
 (let ((?x3647 (+ (- (- (+ (* (* 2.0 l_0_3_1) l_0_3_2) ?x2322) ?x2325) ?x3645) ?x2311)))
 (= (- ?x3647 (* (* 2.0 l_0_3_61) l_0_3_62)) 0.0))))))))))
(assert
 (let ((?x2327 (* 2.0 l_0_3_46)))
 (let ((?x3674 (* ?x2327 l_0_3_49)))
 (let ((?x3671 (- (* (* 2.0 l_0_3_1) l_0_3_4) (* (* 2.0 l_0_3_16) l_0_3_16))))
 (let ((?x3677 (- (- (+ ?x3671 (* 2.0 (* l_0_3_31 l_0_3_31))) ?x3674) (* (* 2.0 l_0_3_61) l_0_3_64))))
 (= ?x3677 0.0))))))
(assert
 (let ((?x2327 (* 2.0 l_0_3_46)))
 (let ((?x3704 (* ?x2327 l_0_3_56)))
 (let ((?x2321 (* l_0_3_16 l_0_3_16)))
 (let ((?x3679 (* 2.0 ?x2321)))
 (let ((?x3703 (- (+ (* (* 2.0 l_0_3_1) l_0_3_11) ?x3679) (* (* 2.0 l_0_3_31) l_0_3_31))))
 (= (- (- ?x3703 ?x3704) (* (* 2.0 l_0_3_61) l_0_3_71)) 0.0)))))))
(assert
 (let ((?x3741 (* l_0_3_63 l_0_3_63)))
 (let ((?x3739 (* l_0_3_62 l_0_3_62)))
 (let ((?x2327 (* 2.0 l_0_3_46)))
 (let ((?x3645 (* ?x2327 l_0_3_47)))
 (let ((?x2376 (* 8.0 l_0_3_31)))
 (let ((?x2377 (* ?x2376 l_0_3_32)))
 (let ((?x2365 (* 8.0 l_0_3_16)))
 (let ((?x2366 (* ?x2365 l_0_3_17)))
 (let ((?x3730 (+ (+ ?x2366 (* 1.0 (* l_0_3_2 l_0_3_2))) (* 1.0 (* l_0_3_3 l_0_3_3)))))
 (let ((?x3738 (- (- (+ (- ?x3730 ?x2377) ?x3645) (* (* 1.0 l_0_3_47) l_0_3_47)) (* (* 1.0 l_0_3_48) l_0_3_48))))
 (= (- (- ?x3738 ?x3739) ?x3741) 0.0))))))))))))
(assert
 (let ((?x2385 (* 2.0 l_0_3_48)))
 (let ((?x3774 (* ?x2385 l_0_3_50)))
 (let ((?x2382 (* 2.0 l_0_3_47)))
 (let ((?x3772 (* ?x2382 l_0_3_49)))
 (let ((?x2327 (* 2.0 l_0_3_46)))
 (let ((?x3674 (* ?x2327 l_0_3_49)))
 (let ((?x2376 (* 8.0 l_0_3_31)))
 (let ((?x2451 (* ?x2376 l_0_3_34)))
 (let ((?x2324 (* 4.0 l_0_3_31)))
 (let ((?x3768 (* ?x2324 l_0_3_32)))
 (let ((?x2373 (* 2.0 l_0_3_3)))
 (let ((?x2830 (* ?x2373 l_0_3_5)))
 (let ((?x2370 (* 2.0 l_0_3_2)))
 (let ((?x2822 (* ?x2370 l_0_3_4)))
 (let ((?x2365 (* 8.0 l_0_3_16)))
 (let ((?x2446 (* ?x2365 l_0_3_19)))
 (let ((?x3769 (+ (+ (+ (+ (* (* (- 4.0) l_0_3_16) l_0_3_17) ?x2446) ?x2822) ?x2830) ?x3768)))
 (let ((?x3777 (- (- (- (+ (- ?x3769 ?x2451) ?x3674) ?x3772) ?x3774) (* (* 2.0 l_0_3_62) l_0_3_64))))
 (= (- ?x3777 (* (* 2.0 l_0_3_63) l_0_3_65)) 0.0))))))))))))))))))))
(assert
 (let ((?x2385 (* 2.0 l_0_3_48)))
 (let ((?x3825 (* ?x2385 l_0_3_57)))
 (let ((?x2382 (* 2.0 l_0_3_47)))
 (let ((?x3823 (* ?x2382 l_0_3_56)))
 (let ((?x2327 (* 2.0 l_0_3_46)))
 (let ((?x3704 (* ?x2327 l_0_3_56)))
 (let ((?x2376 (* 8.0 l_0_3_31)))
 (let ((?x2645 (* ?x2376 l_0_3_41)))
 (let ((?x2324 (* 4.0 l_0_3_31)))
 (let ((?x3768 (* ?x2324 l_0_3_32)))
 (let ((?x2365 (* 8.0 l_0_3_16)))
 (let ((?x2642 (* ?x2365 l_0_3_26)))
 (let ((?x2635 (* 2.0 l_0_3_12)))
 (let ((?x3006 (* ?x2635 l_0_3_3)))
 (let ((?x3818 (+ (+ (* (* 2.0 l_0_3_11) l_0_3_2) ?x3006) (* (* 4.0 l_0_3_16) l_0_3_17))))
 (let ((?x3828 (- (- (- (+ (- (- (+ ?x3818 ?x2642) ?x3768) ?x2645) ?x3704) ?x3823) ?x3825) (* (* 2.0 l_0_3_62) l_0_3_71))))
 (= (- ?x3828 (* (* 2.0 l_0_3_63) l_0_3_72)) 0.0))))))))))))))))))
(assert
 (let ((?x3889 (* l_0_3_66 l_0_3_66)))
 (let ((?x3887 (* l_0_3_65 l_0_3_65)))
 (let ((?x3885 (* l_0_3_64 l_0_3_64)))
 (let ((?x2340 (* l_0_3_31 l_0_3_31)))
 (let ((?x2324 (* 4.0 l_0_3_31)))
 (let ((?x3867 (* ?x2324 l_0_3_34)))
 (let ((?x3868 (+ (+ (* (* (- 4.0) l_0_3_16) l_0_3_19) (* l_0_3_16 l_0_3_16)) ?x3867)))
 (let ((?x3874 (- (+ (- ?x3868 ?x2340) (* 1.0 (* l_0_3_4 l_0_3_4))) (* (* 1.0 l_0_3_49) l_0_3_49))))
 (let ((?x3879 (- (+ ?x3874 (* 1.0 (* l_0_3_5 l_0_3_5))) (* (* 1.0 l_0_3_50) l_0_3_50))))
 (let ((?x3884 (+ (- ?x3879 (* (* 1.0 l_0_3_51) l_0_3_51)) (* 1.0 (* l_0_3_6 l_0_3_6)))))
 (= (- (- (- ?x3884 ?x3885) ?x3887) ?x3889) 0.0))))))))))))
(assert
 (let ((?x2467 (* 2.0 l_0_3_51)))
 (let ((?x3937 (* ?x2467 l_0_3_58)))
 (let ((?x2464 (* 2.0 l_0_3_50)))
 (let ((?x3935 (* ?x2464 l_0_3_57)))
 (let ((?x2458 (* 2.0 l_0_3_49)))
 (let ((?x3933 (* ?x2458 l_0_3_56)))
 (let ((?x2324 (* 4.0 l_0_3_31)))
 (let ((?x3931 (* ?x2324 l_0_3_41)))
 (let ((?x3867 (* ?x2324 l_0_3_34)))
 (let ((?x2448 (* 4.0 l_0_3_16)))
 (let ((?x3928 (* ?x2448 l_0_3_26)))
 (let ((?x2638 (* 2.0 l_0_3_13)))
 (let ((?x3298 (* ?x2638 l_0_3_6)))
 (let ((?x2635 (* 2.0 l_0_3_12)))
 (let ((?x3296 (* ?x2635 l_0_3_5)))
 (let ((?x3927 (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x3296) ?x3298) (* ?x2448 l_0_3_19))))
 (let ((?x3940 (- (- (- (- (+ (- (- ?x3927 ?x3928) ?x3867) ?x3931) ?x3933) ?x3935) ?x3937) (* (* 2.0 l_0_3_64) l_0_3_71))))
 (let ((?x3944 (- (- ?x3940 (* (* 2.0 l_0_3_65) l_0_3_72)) (* (* 2.0 l_0_3_66) l_0_3_73))))
 (= ?x3944 0.0))))))))))))))))))))
(assert
 (let ((?x4033 (* l_0_3_75 l_0_3_75)))
 (let ((?x4031 (* l_0_3_74 l_0_3_74)))
 (let ((?x4029 (* l_0_3_73 l_0_3_73)))
 (let ((?x4027 (* l_0_3_72 l_0_3_72)))
 (let ((?x4025 (* l_0_3_71 l_0_3_71)))
 (let ((?x2340 (* l_0_3_31 l_0_3_31)))
 (let ((?x2324 (* 4.0 l_0_3_31)))
 (let ((?x3931 (* ?x2324 l_0_3_41)))
 (let ((?x2321 (* l_0_3_16 l_0_3_16)))
 (let ((?x2448 (* 4.0 l_0_3_16)))
 (let ((?x3928 (* ?x2448 l_0_3_26)))
 (let ((?x3999 (+ (* 1.0 (* l_0_3_11 l_0_3_11)) (* 1.0 (* l_0_3_12 l_0_3_12)))))
 (let ((?x4003 (+ (+ ?x3999 (* 1.0 (* l_0_3_13 l_0_3_13))) (* 1.0 (* l_0_3_14 l_0_3_14)))))
 (let ((?x4008 (- (- (+ (+ ?x4003 (* 1.0 (* l_0_3_15 l_0_3_15))) ?x3928) ?x2321) ?x3931)))
 (let ((?x4015 (- (- (+ ?x4008 ?x2340) (* (* 1.0 l_0_3_56) l_0_3_56)) (* (* 1.0 l_0_3_57) l_0_3_57))))
 (let ((?x4021 (- (- ?x4015 (* (* 1.0 l_0_3_58) l_0_3_58)) (* (* 1.0 l_0_3_59) l_0_3_59))))
 (let ((?x4030 (- (- (- (- ?x4021 (* (* 1.0 l_0_3_60) l_0_3_60)) ?x4025) ?x4027) ?x4029)))
 (= (- (- ?x4030 ?x4031) ?x4033) 0.0)))))))))))))))))))
(assert
 (let ((?x4061 (* l_0_3_60 l_0_3_60)))
 (let ((?x4057 (* l_0_3_59 l_0_3_59)))
 (let ((?x4053 (* l_0_3_58 l_0_3_58)))
 (let ((?x4049 (* l_0_3_57 l_0_3_57)))
 (let ((?x4045 (* l_0_3_56 l_0_3_56)))
 (let ((?x3566 (* (* 4.0 l_0_3_45) l_0_3_45)))
 (let ((?x3563 (* (* 4.0 l_0_3_44) l_0_3_44)))
 (let ((?x3560 (* (* 4.0 l_0_3_43) l_0_3_43)))
 (let ((?x3557 (* (* 4.0 l_0_3_42) l_0_3_42)))
 (let ((?x3554 (* (* 4.0 l_0_3_41) l_0_3_41)))
 (let ((?x2767 (* 4.0 l_0_3_33)))
 (let ((?x4097 (* ?x2767 l_0_3_42)))
 (let ((?x2761 (* 4.0 l_0_3_32)))
 (let ((?x4095 (* ?x2761 l_0_3_41)))
 (let ((?x3136 (* 2.0 l_0_3_31)))
 (let ((?x4093 (* ?x3136 l_0_3_32)))
 (let ((?x3545 (* l_0_3_30 l_0_3_30)))
 (let ((?x3546 (* 4.0 ?x3545)))
 (let ((?x3542 (* l_0_3_29 l_0_3_29)))
 (let ((?x3543 (* 4.0 ?x3542)))
 (let ((?x3539 (* l_0_3_28 l_0_3_28)))
 (let ((?x3540 (* 4.0 ?x3539)))
 (let ((?x3536 (* l_0_3_27 l_0_3_27)))
 (let ((?x3537 (* 4.0 ?x3536)))
 (let ((?x3533 (* l_0_3_26 l_0_3_26)))
 (let ((?x3534 (* 4.0 ?x3533)))
 (let ((?x2816 (* 4.0 l_0_3_18)))
 (let ((?x4086 (* ?x2816 l_0_3_27)))
 (let ((?x2811 (* 4.0 l_0_3_17)))
 (let ((?x4084 (* ?x2811 l_0_3_26)))
 (let ((?x4089 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_16) l_0_3_17) ?x4084) ?x4086) ?x3534) ?x3537)))
 (let ((?x4099 (- (- (- (+ (+ (+ (+ ?x4089 ?x3540) ?x3543) ?x3546) ?x4093) ?x4095) ?x4097) ?x3554)))
 (let ((?x4106 (+ (+ (+ (- (- (- (- ?x4099 ?x3557) ?x3560) ?x3563) ?x3566) ?x4045) ?x4049) ?x4053)))
 (= (+ (+ ?x4106 ?x4057) ?x4061) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3629 (* l_0_3_45 l_0_3_45)))
 (let ((?x4179 (* 2.0 ?x3629)))
 (let ((?x3623 (* l_0_3_44 l_0_3_44)))
 (let ((?x4177 (* 2.0 ?x3623)))
 (let ((?x3617 (* l_0_3_43 l_0_3_43)))
 (let ((?x4175 (* 2.0 ?x3617)))
 (let ((?x3611 (* l_0_3_42 l_0_3_42)))
 (let ((?x4173 (* 2.0 ?x3611)))
 (let ((?x3605 (* l_0_3_41 l_0_3_41)))
 (let ((?x4171 (* 2.0 ?x3605)))
 (let ((?x3149 (* 4.0 l_0_3_36)))
 (let ((?x4169 (* ?x3149 l_0_3_43)))
 (let ((?x3144 (* 4.0 l_0_3_35)))
 (let ((?x4167 (* ?x3144 l_0_3_42)))
 (let ((?x3139 (* 4.0 l_0_3_34)))
 (let ((?x4165 (* ?x3139 l_0_3_41)))
 (let ((?x3136 (* 2.0 l_0_3_31)))
 (let ((?x4163 (* ?x3136 l_0_3_34)))
 (let ((?x3130 (* 4.0 l_0_3_21)))
 (let ((?x4146 (* ?x3130 l_0_3_28)))
 (let ((?x3124 (* 4.0 l_0_3_20)))
 (let ((?x4144 (* ?x3124 l_0_3_27)))
 (let ((?x3118 (* 4.0 l_0_3_19)))
 (let ((?x4142 (* ?x3118 l_0_3_26)))
 (let ((?x4150 (- (+ (+ (+ (* (* (- 2.0) l_0_3_16) l_0_3_19) ?x4142) ?x4144) ?x4146) (* (* 2.0 l_0_3_26) l_0_3_26))))
 (let ((?x4156 (- (- ?x4150 (* (* 2.0 l_0_3_27) l_0_3_27)) (* (* 2.0 l_0_3_28) l_0_3_28))))
 (let ((?x4162 (- (- ?x4156 (* (* 2.0 l_0_3_29) l_0_3_29)) (* (* 2.0 l_0_3_30) l_0_3_30))))
 (let ((?x4176 (+ (+ (+ (- (- (- (+ ?x4162 ?x4163) ?x4165) ?x4167) ?x4169) ?x4171) ?x4173) ?x4175)))
 (= (+ (+ ?x4176 ?x4177) ?x4179) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x3136 (* 2.0 l_0_3_31)))
 (let ((?x4247 (* ?x3136 l_0_3_41)))
 (let ((?x3545 (* l_0_3_30 l_0_3_30)))
 (let ((?x4207 (* 2.0 ?x3545)))
 (let ((?x3542 (* l_0_3_29 l_0_3_29)))
 (let ((?x4202 (* 2.0 ?x3542)))
 (let ((?x3539 (* l_0_3_28 l_0_3_28)))
 (let ((?x4197 (* 2.0 ?x3539)))
 (let ((?x3536 (* l_0_3_27 l_0_3_27)))
 (let ((?x4192 (* 2.0 ?x3536)))
 (let ((?x3533 (* l_0_3_26 l_0_3_26)))
 (let ((?x4187 (* 2.0 ?x3533)))
 (let ((?x4245 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_16) l_0_3_26) ?x4187) ?x4192) ?x4197) ?x4202)))
 (let ((?x4254 (- (- (+ (+ ?x4245 ?x4207) ?x4247) (* (* 2.0 l_0_3_41) l_0_3_41)) (* (* 2.0 l_0_3_42) l_0_3_42))))
 (let ((?x4260 (- (- ?x4254 (* (* 2.0 l_0_3_43) l_0_3_43)) (* (* 2.0 l_0_3_44) l_0_3_44))))
 (= (- ?x4260 (* (* 2.0 l_0_3_45) l_0_3_45)) 0.0)))))))))))))))))
(assert
 (let ((?x2802 (* l_0_3_33 l_0_3_33)))
 (let ((?x2790 (* l_0_3_32 l_0_3_32)))
 (let ((?x4291 (+ (+ (- (* (- l_0_3_17) l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x2790) ?x2802)))
 (= ?x4291 0.0)))))
(assert
 (let ((?x4309 (* 2.0 l_0_3_33)))
 (let ((?x4310 (* ?x4309 l_0_3_35)))
 (let ((?x4306 (* 2.0 l_0_3_32)))
 (let ((?x4307 (* ?x4306 l_0_3_34)))
 (let ((?x4303 (* 2.0 l_0_3_18)))
 (let ((?x4304 (* ?x4303 l_0_3_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x4304) ?x4307) ?x4310) 0.0))))))))
(assert
 (let ((?x4309 (* 2.0 l_0_3_33)))
 (let ((?x4329 (* ?x4309 l_0_3_38)))
 (let ((?x4306 (* 2.0 l_0_3_32)))
 (let ((?x4327 (* ?x4306 l_0_3_37)))
 (let ((?x4303 (* 2.0 l_0_3_18)))
 (let ((?x4320 (* ?x4303 l_0_3_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x4320) ?x4327) ?x4329) 0.0))))))))
(assert
 (let ((?x4309 (* 2.0 l_0_3_33)))
 (let ((?x4348 (* ?x4309 l_0_3_42)))
 (let ((?x4306 (* 2.0 l_0_3_32)))
 (let ((?x4346 (* ?x4306 l_0_3_41)))
 (let ((?x4303 (* 2.0 l_0_3_18)))
 (let ((?x4339 (* ?x4303 l_0_3_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_26) ?x4339) ?x4346) ?x4348) 0.0))))))))
(assert
 (let ((?x3629 (* l_0_3_45 l_0_3_45)))
 (let ((?x3623 (* l_0_3_44 l_0_3_44)))
 (let ((?x3617 (* l_0_3_43 l_0_3_43)))
 (let ((?x3611 (* l_0_3_42 l_0_3_42)))
 (let ((?x3605 (* l_0_3_41 l_0_3_41)))
 (let ((?x3203 (* l_0_3_36 l_0_3_36)))
 (let ((?x3195 (* l_0_3_35 l_0_3_35)))
 (let ((?x3187 (* l_0_3_34 l_0_3_34)))
 (let ((?x3545 (* l_0_3_30 l_0_3_30)))
 (let ((?x3542 (* l_0_3_29 l_0_3_29)))
 (let ((?x3539 (* l_0_3_28 l_0_3_28)))
 (let ((?x3536 (* l_0_3_27 l_0_3_27)))
 (let ((?x3533 (* l_0_3_26 l_0_3_26)))
 (let ((?x3133 (* l_0_3_21 l_0_3_21)))
 (let ((?x4366 (+ (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3133) ?x3533)))
 (let ((?x4373 (+ (+ (+ (+ (+ (+ (+ ?x4366 ?x3536) ?x3539) ?x3542) ?x3545) ?x3187) ?x3195) ?x3203)))
 (= (- (- (- (- (- ?x4373 ?x3605) ?x3611) ?x3617) ?x3623) ?x3629) 0.0))))))))))))))))))
(assert
 (let ((?x4427 (* 2.0 l_0_3_36)))
 (let ((?x4428 (* ?x4427 l_0_3_39)))
 (let ((?x4424 (* 2.0 l_0_3_35)))
 (let ((?x4425 (* ?x4424 l_0_3_38)))
 (let ((?x4421 (* 2.0 l_0_3_34)))
 (let ((?x4422 (* ?x4421 l_0_3_37)))
 (let ((?x4418 (* 2.0 l_0_3_21)))
 (let ((?x4419 (* ?x4418 l_0_3_24)))
 (let ((?x4415 (* 2.0 l_0_3_20)))
 (let ((?x4416 (* ?x4415 l_0_3_23)))
 (let ((?x4426 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x4416) ?x4419) ?x4422) ?x4425)))
 (= (+ ?x4426 ?x4428) 0.0)))))))))))))
(assert
 (let ((?x4427 (* 2.0 l_0_3_36)))
 (let ((?x4457 (* ?x4427 l_0_3_43)))
 (let ((?x4424 (* 2.0 l_0_3_35)))
 (let ((?x4455 (* ?x4424 l_0_3_42)))
 (let ((?x4421 (* 2.0 l_0_3_34)))
 (let ((?x4453 (* ?x4421 l_0_3_41)))
 (let ((?x4418 (* 2.0 l_0_3_21)))
 (let ((?x4445 (* ?x4418 l_0_3_28)))
 (let ((?x4415 (* 2.0 l_0_3_20)))
 (let ((?x4443 (* ?x4415 l_0_3_27)))
 (let ((?x4456 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_26) ?x4443) ?x4445) ?x4453) ?x4455)))
 (= (+ ?x4456 ?x4457) 0.0)))))))))))))
(assert
 (let ((?x2990 (* l_0_3_40 l_0_3_40)))
 (let ((?x2984 (* l_0_3_39 l_0_3_39)))
 (let ((?x2978 (* l_0_3_38 l_0_3_38)))
 (let ((?x2972 (* l_0_3_37 l_0_3_37)))
 (let ((?x2935 (* l_0_3_25 l_0_3_25)))
 (let ((?x2932 (* l_0_3_24 l_0_3_24)))
 (let ((?x4481 (- (- (- (* (- l_0_3_22) l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x2932) ?x2935)))
 (= (+ (+ (+ (+ ?x4481 ?x2972) ?x2978) ?x2984) ?x2990) 0.0)))))))))
(assert
 (let ((?x3474 (* 2.0 l_0_3_40)))
 (let ((?x4517 (* ?x3474 l_0_3_44)))
 (let ((?x3470 (* 2.0 l_0_3_39)))
 (let ((?x4515 (* ?x3470 l_0_3_43)))
 (let ((?x3466 (* 2.0 l_0_3_38)))
 (let ((?x4513 (* ?x3466 l_0_3_42)))
 (let ((?x3462 (* 2.0 l_0_3_37)))
 (let ((?x4511 (* ?x3462 l_0_3_41)))
 (let ((?x3230 (* 2.0 l_0_3_25)))
 (let ((?x4509 (* ?x3230 l_0_3_29)))
 (let ((?x3227 (* 2.0 l_0_3_24)))
 (let ((?x4507 (* ?x3227 l_0_3_28)))
 (let ((?x3224 (* 2.0 l_0_3_23)))
 (let ((?x4505 (* ?x3224 l_0_3_27)))
 (let ((?x4512 (+ (- (- (- (* (* (- 2.0) l_0_3_22) l_0_3_26) ?x4505) ?x4507) ?x4509) ?x4511)))
 (= (+ (+ (+ ?x4512 ?x4513) ?x4515) ?x4517) 0.0)))))))))))))))))
(assert
 (let ((?x3629 (* l_0_3_45 l_0_3_45)))
 (let ((?x3623 (* l_0_3_44 l_0_3_44)))
 (let ((?x3617 (* l_0_3_43 l_0_3_43)))
 (let ((?x3611 (* l_0_3_42 l_0_3_42)))
 (let ((?x3605 (* l_0_3_41 l_0_3_41)))
 (let ((?x3545 (* l_0_3_30 l_0_3_30)))
 (let ((?x3542 (* l_0_3_29 l_0_3_29)))
 (let ((?x3539 (* l_0_3_28 l_0_3_28)))
 (let ((?x4540 (- (- (- (* (- l_0_3_26) l_0_3_26) (* l_0_3_27 l_0_3_27)) ?x3539) ?x3542)))
 (= (+ (+ (+ (+ (+ (- ?x4540 ?x3545) ?x3605) ?x3611) ?x3617) ?x3623) ?x3629) 0.0)))))))))))
(assert
 (let ((?x3908 (* l_0_3_51 l_0_3_51)))
 (let ((?x3904 (* l_0_3_50 l_0_3_50)))
 (let ((?x3899 (* l_0_3_49 l_0_3_49)))
 (let ((?x3149 (* 4.0 l_0_3_36)))
 (let ((?x3152 (* ?x3149 l_0_3_36)))
 (let ((?x3144 (* 4.0 l_0_3_35)))
 (let ((?x3147 (* ?x3144 l_0_3_35)))
 (let ((?x3139 (* 4.0 l_0_3_34)))
 (let ((?x3142 (* ?x3139 l_0_3_34)))
 (let ((?x2767 (* 4.0 l_0_3_33)))
 (let ((?x4576 (* ?x2767 l_0_3_35)))
 (let ((?x2761 (* 4.0 l_0_3_32)))
 (let ((?x4574 (* ?x2761 l_0_3_34)))
 (let ((?x3136 (* 2.0 l_0_3_31)))
 (let ((?x4093 (* ?x3136 l_0_3_32)))
 (let ((?x3133 (* l_0_3_21 l_0_3_21)))
 (let ((?x3134 (* 4.0 ?x3133)))
 (let ((?x3127 (* l_0_3_20 l_0_3_20)))
 (let ((?x3128 (* 4.0 ?x3127)))
 (let ((?x3121 (* l_0_3_19 l_0_3_19)))
 (let ((?x3122 (* 4.0 ?x3121)))
 (let ((?x2816 (* 4.0 l_0_3_18)))
 (let ((?x4568 (* ?x2816 l_0_3_20)))
 (let ((?x2811 (* 4.0 l_0_3_17)))
 (let ((?x4566 (* ?x2811 l_0_3_19)))
 (let ((?x4571 (+ (+ (- (- (* (* 2.0 l_0_3_16) l_0_3_17) ?x4566) ?x4568) ?x3122) ?x3128)))
 (let ((?x4580 (- (- (- (+ (+ (- (+ ?x4571 ?x3134) ?x4093) ?x4574) ?x4576) ?x3142) ?x3147) ?x3152)))
 (= (+ (+ (+ ?x4580 ?x3899) ?x3904) ?x3908) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x3203 (* l_0_3_36 l_0_3_36)))
 (let ((?x4623 (* 2.0 ?x3203)))
 (let ((?x3195 (* l_0_3_35 l_0_3_35)))
 (let ((?x4621 (* 2.0 ?x3195)))
 (let ((?x3187 (* l_0_3_34 l_0_3_34)))
 (let ((?x4619 (* 2.0 ?x3187)))
 (let ((?x3136 (* 2.0 l_0_3_31)))
 (let ((?x4163 (* ?x3136 l_0_3_34)))
 (let ((?x4613 (- (* (* 2.0 l_0_3_16) l_0_3_19) (* (* 2.0 l_0_3_19) l_0_3_19))))
 (let ((?x4617 (- (- ?x4613 (* (* 2.0 l_0_3_20) l_0_3_20)) (* (* 2.0 l_0_3_21) l_0_3_21))))
 (= (+ (+ (+ (- ?x4617 ?x4163) ?x4619) ?x4621) ?x4623) 0.0))))))))))))
(assert
 (let ((?x3149 (* 4.0 l_0_3_36)))
 (let ((?x4169 (* ?x3149 l_0_3_43)))
 (let ((?x3144 (* 4.0 l_0_3_35)))
 (let ((?x4167 (* ?x3144 l_0_3_42)))
 (let ((?x3139 (* 4.0 l_0_3_34)))
 (let ((?x4165 (* ?x3139 l_0_3_41)))
 (let ((?x3136 (* 2.0 l_0_3_31)))
 (let ((?x4247 (* ?x3136 l_0_3_41)))
 (let ((?x3133 (* l_0_3_21 l_0_3_21)))
 (let ((?x4636 (* 2.0 ?x3133)))
 (let ((?x3130 (* 4.0 l_0_3_21)))
 (let ((?x4146 (* ?x3130 l_0_3_28)))
 (let ((?x3127 (* l_0_3_20 l_0_3_20)))
 (let ((?x4631 (* 2.0 ?x3127)))
 (let ((?x3124 (* 4.0 l_0_3_20)))
 (let ((?x4144 (* ?x3124 l_0_3_27)))
 (let ((?x3121 (* l_0_3_19 l_0_3_19)))
 (let ((?x4626 (* 2.0 ?x3121)))
 (let ((?x3118 (* 4.0 l_0_3_19)))
 (let ((?x4142 (* ?x3118 l_0_3_26)))
 (let ((?x4650 (+ (- (+ (- (* (* 2.0 l_0_3_16) l_0_3_26) ?x4142) ?x4626) ?x4144) ?x4631)))
 (let ((?x4656 (- (+ (- (+ (- ?x4650 ?x4146) ?x4636) ?x4247) ?x4165) (* (* 2.0 l_0_3_34) l_0_3_34))))
 (let ((?x4662 (- (+ (- (+ ?x4656 ?x4167) (* (* 2.0 l_0_3_35) l_0_3_35)) ?x4169) (* (* 2.0 l_0_3_36) l_0_3_36))))
 (= ?x4662 0.0)))))))))))))))))))))))))
(assert
 (let ((?x2802 (* l_0_3_33 l_0_3_33)))
 (let ((?x2790 (* l_0_3_32 l_0_3_32)))
 (let ((?x4697 (- (- (+ (* l_0_3_17 l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x2790) ?x2802)))
 (= ?x4697 0.0)))))
(assert
 (let ((?x4309 (* 2.0 l_0_3_33)))
 (let ((?x4310 (* ?x4309 l_0_3_35)))
 (let ((?x4306 (* 2.0 l_0_3_32)))
 (let ((?x4307 (* ?x4306 l_0_3_34)))
 (let ((?x4303 (* 2.0 l_0_3_18)))
 (let ((?x4304 (* ?x4303 l_0_3_20)))
 (= (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_19) ?x4304) ?x4307) ?x4310) 0.0))))))))
(assert
 (let ((?x4309 (* 2.0 l_0_3_33)))
 (let ((?x4329 (* ?x4309 l_0_3_38)))
 (let ((?x4306 (* 2.0 l_0_3_32)))
 (let ((?x4327 (* ?x4306 l_0_3_37)))
 (let ((?x4303 (* 2.0 l_0_3_18)))
 (let ((?x4320 (* ?x4303 l_0_3_23)))
 (= (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_22) ?x4320) ?x4327) ?x4329) 0.0))))))))
(assert
 (let ((?x4309 (* 2.0 l_0_3_33)))
 (let ((?x4348 (* ?x4309 l_0_3_42)))
 (let ((?x4306 (* 2.0 l_0_3_32)))
 (let ((?x4346 (* ?x4306 l_0_3_41)))
 (let ((?x4303 (* 2.0 l_0_3_18)))
 (let ((?x4339 (* ?x4303 l_0_3_27)))
 (= (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_26) ?x4339) ?x4346) ?x4348) 0.0))))))))
(assert
 (let ((?x3203 (* l_0_3_36 l_0_3_36)))
 (let ((?x3195 (* l_0_3_35 l_0_3_35)))
 (let ((?x3187 (* l_0_3_34 l_0_3_34)))
 (let ((?x3133 (* l_0_3_21 l_0_3_21)))
 (let ((?x4744 (- (+ (+ (* l_0_3_19 l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3133) ?x3187)))
 (= (- (- ?x4744 ?x3195) ?x3203) 0.0)))))))
(assert
 (let ((?x4427 (* 2.0 l_0_3_36)))
 (let ((?x4428 (* ?x4427 l_0_3_39)))
 (let ((?x4424 (* 2.0 l_0_3_35)))
 (let ((?x4425 (* ?x4424 l_0_3_38)))
 (let ((?x4421 (* 2.0 l_0_3_34)))
 (let ((?x4422 (* ?x4421 l_0_3_37)))
 (let ((?x4418 (* 2.0 l_0_3_21)))
 (let ((?x4419 (* ?x4418 l_0_3_24)))
 (let ((?x4415 (* 2.0 l_0_3_20)))
 (let ((?x4416 (* ?x4415 l_0_3_23)))
 (let ((?x4760 (- (- (+ (+ (* (* 2.0 l_0_3_19) l_0_3_22) ?x4416) ?x4419) ?x4422) ?x4425)))
 (= (- ?x4760 ?x4428) 0.0)))))))))))))
(assert
 (let ((?x4427 (* 2.0 l_0_3_36)))
 (let ((?x4457 (* ?x4427 l_0_3_43)))
 (let ((?x4424 (* 2.0 l_0_3_35)))
 (let ((?x4455 (* ?x4424 l_0_3_42)))
 (let ((?x4421 (* 2.0 l_0_3_34)))
 (let ((?x4453 (* ?x4421 l_0_3_41)))
 (let ((?x4418 (* 2.0 l_0_3_21)))
 (let ((?x4445 (* ?x4418 l_0_3_28)))
 (let ((?x4415 (* 2.0 l_0_3_20)))
 (let ((?x4443 (* ?x4415 l_0_3_27)))
 (let ((?x4779 (- (- (+ (+ (* (* 2.0 l_0_3_19) l_0_3_26) ?x4443) ?x4445) ?x4453) ?x4455)))
 (= (- ?x4779 ?x4457) 0.0)))))))))))))
(assert
 (let ((?x2990 (* l_0_3_40 l_0_3_40)))
 (let ((?x2984 (* l_0_3_39 l_0_3_39)))
 (let ((?x2978 (* l_0_3_38 l_0_3_38)))
 (let ((?x2972 (* l_0_3_37 l_0_3_37)))
 (let ((?x2935 (* l_0_3_25 l_0_3_25)))
 (let ((?x2932 (* l_0_3_24 l_0_3_24)))
 (let ((?x4796 (+ (+ (+ (* l_0_3_22 l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x2932) ?x2935)))
 (= (- (- (- (- ?x4796 ?x2972) ?x2978) ?x2984) ?x2990) 0.0)))))))))
(assert
 (let ((?x3474 (* 2.0 l_0_3_40)))
 (let ((?x4517 (* ?x3474 l_0_3_44)))
 (let ((?x3470 (* 2.0 l_0_3_39)))
 (let ((?x4515 (* ?x3470 l_0_3_43)))
 (let ((?x3466 (* 2.0 l_0_3_38)))
 (let ((?x4513 (* ?x3466 l_0_3_42)))
 (let ((?x3462 (* 2.0 l_0_3_37)))
 (let ((?x4511 (* ?x3462 l_0_3_41)))
 (let ((?x3230 (* 2.0 l_0_3_25)))
 (let ((?x4509 (* ?x3230 l_0_3_29)))
 (let ((?x3227 (* 2.0 l_0_3_24)))
 (let ((?x4507 (* ?x3227 l_0_3_28)))
 (let ((?x3224 (* 2.0 l_0_3_23)))
 (let ((?x4505 (* ?x3224 l_0_3_27)))
 (let ((?x4814 (- (+ (+ (+ (* (* 2.0 l_0_3_22) l_0_3_26) ?x4505) ?x4507) ?x4509) ?x4511)))
 (= (- (- (- ?x4814 ?x4513) ?x4515) ?x4517) 0.0)))))))))))))))))
(assert
 (let ((?x2385 (* 2.0 l_0_3_48)))
 (let ((?x3825 (* ?x2385 l_0_3_57)))
 (let ((?x2382 (* 2.0 l_0_3_47)))
 (let ((?x3823 (* ?x2382 l_0_3_56)))
 (let ((?x2764 (* 8.0 l_0_3_33)))
 (let ((?x3030 (* ?x2764 l_0_3_42)))
 (let ((?x2758 (* 8.0 l_0_3_32)))
 (let ((?x3027 (* ?x2758 l_0_3_41)))
 (let ((?x2751 (* l_0_3_18 l_0_3_18)))
 (let ((?x4838 (* 2.0 ?x2751)))
 (let ((?x2748 (* 8.0 l_0_3_18)))
 (let ((?x3012 (* ?x2748 l_0_3_27)))
 (let ((?x2745 (* l_0_3_17 l_0_3_17)))
 (let ((?x4835 (* 2.0 ?x2745)))
 (let ((?x2743 (* 8.0 l_0_3_17)))
 (let ((?x3009 (* ?x2743 l_0_3_26)))
 (let ((?x4842 (- (- (+ (+ (+ ?x3009 ?x4835) ?x3012) ?x4838) ?x3027) (* (* 2.0 l_0_3_32) l_0_3_32))))
 (let ((?x4847 (+ (+ (- (- ?x4842 ?x3030) (* (* 2.0 l_0_3_33) l_0_3_33)) ?x3823) ?x3825)))
 (= ?x4847 0.0))))))))))))))))))))
(assert
 (let ((?x2467 (* 2.0 l_0_3_51)))
 (let ((?x3937 (* ?x2467 l_0_3_58)))
 (let ((?x2464 (* 2.0 l_0_3_50)))
 (let ((?x3935 (* ?x2464 l_0_3_57)))
 (let ((?x2458 (* 2.0 l_0_3_49)))
 (let ((?x3933 (* ?x2458 l_0_3_56)))
 (let ((?x2846 (* 8.0 l_0_3_36)))
 (let ((?x3328 (* ?x2846 l_0_3_43)))
 (let ((?x2843 (* 8.0 l_0_3_35)))
 (let ((?x3325 (* ?x2843 l_0_3_42)))
 (let ((?x2840 (* 8.0 l_0_3_34)))
 (let ((?x3322 (* ?x2840 l_0_3_41)))
 (let ((?x2767 (* 4.0 l_0_3_33)))
 (let ((?x4097 (* ?x2767 l_0_3_42)))
 (let ((?x4576 (* ?x2767 l_0_3_35)))
 (let ((?x2761 (* 4.0 l_0_3_32)))
 (let ((?x4095 (* ?x2761 l_0_3_41)))
 (let ((?x4574 (* ?x2761 l_0_3_34)))
 (let ((?x2827 (* 8.0 l_0_3_21)))
 (let ((?x3307 (* ?x2827 l_0_3_28)))
 (let ((?x2824 (* 8.0 l_0_3_20)))
 (let ((?x3304 (* ?x2824 l_0_3_27)))
 (let ((?x2819 (* 8.0 l_0_3_19)))
 (let ((?x3301 (* ?x2819 l_0_3_26)))
 (let ((?x2816 (* 4.0 l_0_3_18)))
 (let ((?x4086 (* ?x2816 l_0_3_27)))
 (let ((?x4568 (* ?x2816 l_0_3_20)))
 (let ((?x2811 (* 4.0 l_0_3_17)))
 (let ((?x4084 (* ?x2811 l_0_3_26)))
 (let ((?x4566 (* ?x2811 l_0_3_19)))
 (let ((?x4872 (- (+ (+ (+ (- (+ (- ?x4566 ?x4084) ?x4568) ?x4086) ?x3301) ?x3304) ?x3307) ?x4574)))
 (let ((?x4879 (+ (- (- (- (+ (- (+ ?x4872 ?x4095) ?x4576) ?x4097) ?x3322) ?x3325) ?x3328) ?x3933)))
 (= (+ (+ ?x4879 ?x3935) ?x3937) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2385 (* 2.0 l_0_3_48)))
 (let ((?x3774 (* ?x2385 l_0_3_50)))
 (let ((?x2382 (* 2.0 l_0_3_47)))
 (let ((?x3772 (* ?x2382 l_0_3_49)))
 (let ((?x2764 (* 8.0 l_0_3_33)))
 (let ((?x2836 (* ?x2764 l_0_3_35)))
 (let ((?x2758 (* 8.0 l_0_3_32)))
 (let ((?x2832 (* ?x2758 l_0_3_34)))
 (let ((?x2748 (* 8.0 l_0_3_18)))
 (let ((?x2814 (* ?x2748 l_0_3_20)))
 (let ((?x2743 (* 8.0 l_0_3_17)))
 (let ((?x2810 (* ?x2743 l_0_3_19)))
 (let ((?x4913 (- (+ (- ?x2810 (* (* 2.0 l_0_3_17) l_0_3_17)) ?x2814) (* (* 2.0 l_0_3_18) l_0_3_18))))
 (let ((?x4917 (+ (- (+ (- ?x4913 ?x2832) (* 2.0 (* l_0_3_32 l_0_3_32))) ?x2836) (* 2.0 (* l_0_3_33 l_0_3_33)))))
 (= (+ (+ ?x4917 ?x3772) ?x3774) 0.0))))))))))))))))
(assert
 (let ((?x3752 (* l_0_3_48 l_0_3_48)))
 (let ((?x3748 (* l_0_3_47 l_0_3_47)))
 (let ((?x2767 (* 4.0 l_0_3_33)))
 (let ((?x2768 (* ?x2767 l_0_3_33)))
 (let ((?x2761 (* 4.0 l_0_3_32)))
 (let ((?x2762 (* ?x2761 l_0_3_32)))
 (let ((?x2751 (* l_0_3_18 l_0_3_18)))
 (let ((?x2752 (* 4.0 ?x2751)))
 (let ((?x2745 (* l_0_3_17 l_0_3_17)))
 (let ((?x2746 (* 4.0 ?x2745)))
 (= (+ (+ (- (- (+ ?x2746 ?x2752) ?x2762) ?x2768) ?x3748) ?x3752) 0.0))))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (let ((?x4986 (* 2.0 l_0_4_46)))
 (let ((?x4987 (* ?x4986 l_0_4_52)))
 (let ((?x4983 (* 4.0 l_0_4_31)))
 (let ((?x4984 (* ?x4983 l_0_4_31)))
 (let ((?x4980 (* l_0_4_16 l_0_4_16)))
 (let ((?x4981 (* 4.0 ?x4980)))
 (let ((?x4982 (+ (- (* (* 2.0 l_0_4_1) l_0_4_7) (* l_0_4_1 l_0_4_1)) ?x4981)))
 (let ((?x4992 (+ (- (+ (- ?x4982 ?x4984) ?x4987) (* (* 2.0 l_0_4_76) l_0_4_82)) 1.0)))
 (= ?x4992 0.0))))))))))
(assert
 (let ((?x5024 (* l_0_4_76 l_0_4_76)))
 (let ((?x5023 (+ (* 1.0 (* l_0_4_1 l_0_4_1)) (* 1.0 (* l_0_4_46 l_0_4_46)))))
 (= (- (- ?x5023 ?x5024) 1.0) 0.0))))
(assert
 (let ((?x5057 (* 2.0 l_0_4_48)))
 (let ((?x5058 (* ?x5057 l_0_4_53)))
 (let ((?x5054 (* 2.0 l_0_4_47)))
 (let ((?x5055 (* ?x5054 l_0_4_52)))
 (let ((?x4986 (* 2.0 l_0_4_46)))
 (let ((?x4987 (* ?x4986 l_0_4_52)))
 (let ((?x5048 (* 8.0 l_0_4_31)))
 (let ((?x5051 (* ?x5048 l_0_4_37)))
 (let ((?x5049 (* ?x5048 l_0_4_32)))
 (let ((?x5045 (* 2.0 l_0_4_3)))
 (let ((?x5046 (* ?x5045 l_0_4_8)))
 (let ((?x5042 (* 2.0 l_0_4_2)))
 (let ((?x5043 (* ?x5042 l_0_4_7)))
 (let ((?x5037 (* 8.0 l_0_4_16)))
 (let ((?x5040 (* ?x5037 l_0_4_22)))
 (let ((?x5044 (+ (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) (* ?x5037 l_0_4_17)) ?x5040) ?x5043)))
 (let ((?x5062 (- (+ (+ (- (- (- (+ ?x5044 ?x5046) ?x5049) ?x5051) ?x4987) ?x5055) ?x5058) (* (* 2.0 l_0_4_61) l_0_4_67))))
 (let ((?x5068 (- (- ?x5062 (* (* 2.0 l_0_4_77) l_0_4_82)) (* (* 2.0 l_0_4_78) l_0_4_83))))
 (= ?x5068 0.0))))))))))))))))))))
(assert
 (let ((?x5154 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5150 (* 2.0 l_0_4_51)))
 (let ((?x5151 (* ?x5150 l_0_4_54)))
 (let ((?x5147 (* 2.0 l_0_4_50)))
 (let ((?x5148 (* ?x5147 l_0_4_53)))
 (let ((?x5145 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5141 (* 2.0 l_0_4_49)))
 (let ((?x5142 (* ?x5141 l_0_4_52)))
 (let ((?x5139 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4983 (* 4.0 l_0_4_31)))
 (let ((?x5136 (* ?x4983 l_0_4_37)))
 (let ((?x5048 (* 8.0 l_0_4_31)))
 (let ((?x5134 (* ?x5048 l_0_4_34)))
 (let ((?x5131 (* 4.0 l_0_4_16)))
 (let ((?x5132 (* ?x5131 l_0_4_22)))
 (let ((?x5037 (* 8.0 l_0_4_16)))
 (let ((?x5129 (* ?x5037 l_0_4_19)))
 (let ((?x5137 (+ (- (- (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x5129) ?x5132) ?x5134) ?x5136)))
 (let ((?x5158 (- (+ (+ (+ (+ (+ (+ ?x5137 ?x5139) ?x5142) ?x5145) ?x5148) ?x5151) ?x5154) (* (* 2.0 l_0_4_79) l_0_4_82))))
 (let ((?x5164 (- (- ?x5158 (* (* 2.0 l_0_4_80) l_0_4_83)) (* (* 2.0 l_0_4_81) l_0_4_84))))
 (= ?x5164 0.0))))))))))))))))))))))
(assert
 (let ((?x5255 (* l_0_4_85 l_0_4_85)))
 (let ((?x5253 (* l_0_4_84 l_0_4_84)))
 (let ((?x5251 (* l_0_4_83 l_0_4_83)))
 (let ((?x5249 (* l_0_4_82 l_0_4_82)))
 (let ((?x5048 (* 8.0 l_0_4_31)))
 (let ((?x5051 (* ?x5048 l_0_4_37)))
 (let ((?x5037 (* 8.0 l_0_4_16)))
 (let ((?x5040 (* ?x5037 l_0_4_22)))
 (let ((?x5228 (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) (* 1.0 (* l_0_4_10 l_0_4_10)))))
 (let ((?x5236 (+ (+ (- (+ ?x5228 ?x5040) ?x5051) (* 1.0 (* l_0_4_52 l_0_4_52))) (* 1.0 (* l_0_4_53 l_0_4_53)))))
 (let ((?x5242 (+ (+ ?x5236 (* 1.0 (* l_0_4_54 l_0_4_54))) (* 1.0 (* l_0_4_55 l_0_4_55)))))
 (let ((?x5248 (+ (+ ?x5242 (* 1.0 (* l_0_4_7 l_0_4_7))) (* 1.0 (* l_0_4_8 l_0_4_8)))))
 (let ((?x5259 (+ (- (- (- (- ?x5248 ?x5249) ?x5251) ?x5253) ?x5255) (* 1.0 (* l_0_4_9 l_0_4_9)))))
 (= ?x5259 0.0)))))))))))))))
(assert
 (let ((?x5316 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5313 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5310 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x5307 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x5048 (* 8.0 l_0_4_31)))
 (let ((?x5304 (* ?x5048 l_0_4_41)))
 (let ((?x4983 (* 4.0 l_0_4_31)))
 (let ((?x5136 (* ?x4983 l_0_4_37)))
 (let ((?x5037 (* 8.0 l_0_4_16)))
 (let ((?x5301 (* ?x5037 l_0_4_26)))
 (let ((?x5131 (* 4.0 l_0_4_16)))
 (let ((?x5132 (* ?x5131 l_0_4_22)))
 (let ((?x5297 (* 2.0 l_0_4_13)))
 (let ((?x5298 (* ?x5297 l_0_4_9)))
 (let ((?x5294 (* 2.0 l_0_4_12)))
 (let ((?x5295 (* ?x5294 l_0_4_8)))
 (let ((?x5291 (* 2.0 l_0_4_11)))
 (let ((?x5292 (* ?x5291 l_0_4_7)))
 (let ((?x5290 (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) (* (* 2.0 l_0_4_10) l_0_4_14))))
 (let ((?x5305 (- (- (+ (+ (+ (+ (+ ?x5290 ?x5292) ?x5295) ?x5298) ?x5132) ?x5301) ?x5136) ?x5304)))
 (let ((?x5320 (- (+ (+ (+ (+ ?x5305 ?x5307) ?x5310) ?x5313) ?x5316) (* (* 2.0 l_0_4_82) l_0_4_86))))
 (let ((?x5326 (- (- ?x5320 (* (* 2.0 l_0_4_83) l_0_4_87)) (* (* 2.0 l_0_4_84) l_0_4_88))))
 (= (- ?x5326 (* (* 2.0 l_0_4_85) l_0_4_89)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x5057 (* 2.0 l_0_4_48)))
 (let ((?x5058 (* ?x5057 l_0_4_53)))
 (let ((?x5054 (* 2.0 l_0_4_47)))
 (let ((?x5055 (* ?x5054 l_0_4_52)))
 (let ((?x5411 (* 4.0 l_0_4_33)))
 (let ((?x5412 (* ?x5411 l_0_4_33)))
 (let ((?x5408 (* 8.0 l_0_4_33)))
 (let ((?x5409 (* ?x5408 l_0_4_38)))
 (let ((?x5405 (* 4.0 l_0_4_32)))
 (let ((?x5406 (* ?x5405 l_0_4_32)))
 (let ((?x5402 (* 8.0 l_0_4_32)))
 (let ((?x5403 (* ?x5402 l_0_4_37)))
 (let ((?x5400 (* l_0_4_3 l_0_4_3)))
 (let ((?x5398 (* l_0_4_2 l_0_4_2)))
 (let ((?x5395 (* l_0_4_18 l_0_4_18)))
 (let ((?x5396 (* 4.0 ?x5395)))
 (let ((?x5392 (* 8.0 l_0_4_18)))
 (let ((?x5393 (* ?x5392 l_0_4_23)))
 (let ((?x5389 (* l_0_4_17 l_0_4_17)))
 (let ((?x5390 (* 4.0 ?x5389)))
 (let ((?x5387 (* 8.0 l_0_4_17)))
 (let ((?x5388 (* ?x5387 l_0_4_22)))
 (let ((?x5407 (- (- (- (- (+ (+ (+ ?x5388 ?x5390) ?x5393) ?x5396) ?x5398) ?x5400) ?x5403) ?x5406)))
 (let ((?x5418 (- (- (- (- (- ?x5407 ?x5409) ?x5412) ?x5055) ?x5058) (* (* 2.0 l_0_4_62) l_0_4_67))))
 (= (- ?x5418 (* (* 2.0 l_0_4_63) l_0_4_68)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x5150 (* 2.0 l_0_4_51)))
 (let ((?x5151 (* ?x5150 l_0_4_54)))
 (let ((?x5147 (* 2.0 l_0_4_50)))
 (let ((?x5148 (* ?x5147 l_0_4_53)))
 (let ((?x5141 (* 2.0 l_0_4_49)))
 (let ((?x5142 (* ?x5141 l_0_4_52)))
 (let ((?x5518 (* 8.0 l_0_4_36)))
 (let ((?x5519 (* ?x5518 l_0_4_39)))
 (let ((?x5515 (* 8.0 l_0_4_35)))
 (let ((?x5516 (* ?x5515 l_0_4_38)))
 (let ((?x5512 (* 8.0 l_0_4_34)))
 (let ((?x5513 (* ?x5512 l_0_4_37)))
 (let ((?x5411 (* 4.0 l_0_4_33)))
 (let ((?x5510 (* ?x5411 l_0_4_38)))
 (let ((?x5408 (* 8.0 l_0_4_33)))
 (let ((?x5508 (* ?x5408 l_0_4_35)))
 (let ((?x5405 (* 4.0 l_0_4_32)))
 (let ((?x5506 (* ?x5405 l_0_4_37)))
 (let ((?x5402 (* 8.0 l_0_4_32)))
 (let ((?x5504 (* ?x5402 l_0_4_34)))
 (let ((?x5045 (* 2.0 l_0_4_3)))
 (let ((?x5502 (* ?x5045 l_0_4_5)))
 (let ((?x5499 (* 8.0 l_0_4_21)))
 (let ((?x5500 (* ?x5499 l_0_4_24)))
 (let ((?x5496 (* 8.0 l_0_4_20)))
 (let ((?x5497 (* ?x5496 l_0_4_23)))
 (let ((?x5042 (* 2.0 l_0_4_2)))
 (let ((?x5494 (* ?x5042 l_0_4_4)))
 (let ((?x5491 (* 8.0 l_0_4_19)))
 (let ((?x5492 (* ?x5491 l_0_4_22)))
 (let ((?x5488 (* 4.0 l_0_4_18)))
 (let ((?x5489 (* ?x5488 l_0_4_23)))
 (let ((?x5392 (* 8.0 l_0_4_18)))
 (let ((?x5486 (* ?x5392 l_0_4_20)))
 (let ((?x5483 (* 4.0 l_0_4_17)))
 (let ((?x5484 (* ?x5483 l_0_4_22)))
 (let ((?x5387 (* 8.0 l_0_4_17)))
 (let ((?x5482 (* ?x5387 l_0_4_19)))
 (let ((?x5501 (+ (+ (- (+ (- (+ (- ?x5482 ?x5484) ?x5486) ?x5489) ?x5492) ?x5494) ?x5497) ?x5500)))
 (let ((?x5517 (- (- (+ (- (+ (- (- ?x5501 ?x5502) ?x5504) ?x5506) ?x5508) ?x5510) ?x5513) ?x5516)))
 (let ((?x5526 (- (- (- (- (- ?x5517 ?x5519) ?x5142) ?x5148) ?x5151) (* (* 2.0 l_0_4_64) l_0_4_67))))
 (let ((?x5532 (- (- ?x5526 (* (* 2.0 l_0_4_65) l_0_4_68)) (* (* 2.0 l_0_4_66) l_0_4_69))))
 (= ?x5532 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5678 (* l_0_4_70 l_0_4_70)))
 (let ((?x5676 (* l_0_4_69 l_0_4_69)))
 (let ((?x5674 (* l_0_4_68 l_0_4_68)))
 (let ((?x5672 (* l_0_4_67 l_0_4_67)))
 (let ((?x5240 (* l_0_4_55 l_0_4_55)))
 (let ((?x5237 (* l_0_4_54 l_0_4_54)))
 (let ((?x5234 (* l_0_4_53 l_0_4_53)))
 (let ((?x5231 (* l_0_4_52 l_0_4_52)))
 (let ((?x5665 (* 4.0 l_0_4_40)))
 (let ((?x5666 (* ?x5665 l_0_4_40)))
 (let ((?x5662 (* 4.0 l_0_4_39)))
 (let ((?x5663 (* ?x5662 l_0_4_39)))
 (let ((?x5659 (* 4.0 l_0_4_38)))
 (let ((?x5660 (* ?x5659 l_0_4_38)))
 (let ((?x5656 (* 4.0 l_0_4_37)))
 (let ((?x5657 (* ?x5656 l_0_4_37)))
 (let ((?x5408 (* 8.0 l_0_4_33)))
 (let ((?x5409 (* ?x5408 l_0_4_38)))
 (let ((?x5402 (* 8.0 l_0_4_32)))
 (let ((?x5403 (* ?x5402 l_0_4_37)))
 (let ((?x5045 (* 2.0 l_0_4_3)))
 (let ((?x5046 (* ?x5045 l_0_4_8)))
 (let ((?x5650 (* l_0_4_25 l_0_4_25)))
 (let ((?x5651 (* 4.0 ?x5650)))
 (let ((?x5647 (* l_0_4_24 l_0_4_24)))
 (let ((?x5648 (* 4.0 ?x5647)))
 (let ((?x5644 (* l_0_4_23 l_0_4_23)))
 (let ((?x5645 (* 4.0 ?x5644)))
 (let ((?x5641 (* l_0_4_22 l_0_4_22)))
 (let ((?x5642 (* 4.0 ?x5641)))
 (let ((?x5042 (* 2.0 l_0_4_2)))
 (let ((?x5043 (* ?x5042 l_0_4_7)))
 (let ((?x5392 (* 8.0 l_0_4_18)))
 (let ((?x5393 (* ?x5392 l_0_4_23)))
 (let ((?x5387 (* 8.0 l_0_4_17)))
 (let ((?x5388 (* ?x5387 l_0_4_22)))
 (let ((?x5653 (- (+ (+ (+ (+ (- (+ ?x5388 ?x5393) ?x5043) ?x5642) ?x5645) ?x5648) ?x5651) ?x5046)))
 (let ((?x5668 (- (- (- (- (- (- (- ?x5653 ?x5403) ?x5409) ?x5657) ?x5660) ?x5663) ?x5666) ?x5231)))
 (let ((?x5679 (- (- (- (- (- (- (- ?x5668 ?x5234) ?x5237) ?x5240) ?x5672) ?x5674) ?x5676) ?x5678)))
 (= ?x5679 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5316 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5313 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5310 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x5307 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x5781 (* (* 8.0 l_0_4_40) l_0_4_44)))
 (let ((?x5778 (* (* 8.0 l_0_4_39) l_0_4_43)))
 (let ((?x5775 (* (* 8.0 l_0_4_38) l_0_4_42)))
 (let ((?x5772 (* (* 8.0 l_0_4_37) l_0_4_41)))
 (let ((?x5408 (* 8.0 l_0_4_33)))
 (let ((?x5769 (* ?x5408 l_0_4_42)))
 (let ((?x5411 (* 4.0 l_0_4_33)))
 (let ((?x5510 (* ?x5411 l_0_4_38)))
 (let ((?x5402 (* 8.0 l_0_4_32)))
 (let ((?x5766 (* ?x5402 l_0_4_41)))
 (let ((?x5405 (* 4.0 l_0_4_32)))
 (let ((?x5506 (* ?x5405 l_0_4_37)))
 (let ((?x5763 (* (* 8.0 l_0_4_25) l_0_4_29)))
 (let ((?x5760 (* (* 8.0 l_0_4_24) l_0_4_28)))
 (let ((?x5757 (* (* 8.0 l_0_4_23) l_0_4_27)))
 (let ((?x5754 (* (* 8.0 l_0_4_22) l_0_4_26)))
 (let ((?x5392 (* 8.0 l_0_4_18)))
 (let ((?x5751 (* ?x5392 l_0_4_27)))
 (let ((?x5488 (* 4.0 l_0_4_18)))
 (let ((?x5489 (* ?x5488 l_0_4_23)))
 (let ((?x5387 (* 8.0 l_0_4_17)))
 (let ((?x5748 (* ?x5387 l_0_4_26)))
 (let ((?x5483 (* 4.0 l_0_4_17)))
 (let ((?x5484 (* ?x5483 l_0_4_22)))
 (let ((?x5294 (* 2.0 l_0_4_12)))
 (let ((?x5745 (* ?x5294 l_0_4_3)))
 (let ((?x5750 (+ (+ (+ (- (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x5745) ?x5484) ?x5748) ?x5489)))
 (let ((?x5767 (- (- (+ (+ (+ (+ (+ ?x5750 ?x5751) ?x5754) ?x5757) ?x5760) ?x5763) ?x5506) ?x5766)))
 (let ((?x5783 (- (- (- (- (- (- (- ?x5767 ?x5510) ?x5769) ?x5772) ?x5775) ?x5778) ?x5781) ?x5307)))
 (let ((?x5789 (- (- (- (- ?x5783 ?x5310) ?x5313) ?x5316) (* (* 2.0 l_0_4_67) l_0_4_71))))
 (let ((?x5795 (- (- ?x5789 (* (* 2.0 l_0_4_68) l_0_4_72)) (* (* 2.0 l_0_4_69) l_0_4_73))))
 (= (- ?x5795 (* (* 2.0 l_0_4_70) l_0_4_74)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5928 (* l_0_4_6 l_0_4_6)))
 (let ((?x5926 (* l_0_4_5 l_0_4_5)))
 (let ((?x5924 (* l_0_4_4 l_0_4_4)))
 (let ((?x5919 (* 4.0 l_0_4_36)))
 (let ((?x5922 (* ?x5919 l_0_4_36)))
 (let ((?x5920 (* ?x5919 l_0_4_39)))
 (let ((?x5914 (* 4.0 l_0_4_35)))
 (let ((?x5917 (* ?x5914 l_0_4_35)))
 (let ((?x5915 (* ?x5914 l_0_4_38)))
 (let ((?x5909 (* 4.0 l_0_4_34)))
 (let ((?x5912 (* ?x5909 l_0_4_34)))
 (let ((?x5910 (* ?x5909 l_0_4_37)))
 (let ((?x5906 (* 2.0 l_0_4_31)))
 (let ((?x5907 (* ?x5906 l_0_4_37)))
 (let ((?x5903 (* l_0_4_21 l_0_4_21)))
 (let ((?x5904 (* 4.0 ?x5903)))
 (let ((?x5900 (* 4.0 l_0_4_21)))
 (let ((?x5901 (* ?x5900 l_0_4_24)))
 (let ((?x5897 (* l_0_4_20 l_0_4_20)))
 (let ((?x5898 (* 4.0 ?x5897)))
 (let ((?x5894 (* 4.0 l_0_4_20)))
 (let ((?x5895 (* ?x5894 l_0_4_23)))
 (let ((?x5891 (* l_0_4_19 l_0_4_19)))
 (let ((?x5892 (* 4.0 ?x5891)))
 (let ((?x5888 (* 4.0 l_0_4_19)))
 (let ((?x5889 (* ?x5888 l_0_4_22)))
 (let ((?x852 (* 2.0 l_0_4_16)))
 (let ((?x853 (* ?x852 l_0_4_22)))
 (let ((?x5908 (- (+ (- (+ (- (+ (- ?x853 ?x5889) ?x5892) ?x5895) ?x5898) ?x5901) ?x5904) ?x5907)))
 (let ((?x5925 (- (- (+ (- (+ (- (+ ?x5908 ?x5910) ?x5912) ?x5915) ?x5917) ?x5920) ?x5922) ?x5924)))
 (= (- (- ?x5925 ?x5926) ?x5928) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x5154 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5145 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5711 (* l_0_4_40 l_0_4_40)))
 (let ((?x5993 (* 2.0 ?x5711)))
 (let ((?x5139 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5705 (* l_0_4_39 l_0_4_39)))
 (let ((?x5990 (* 2.0 ?x5705)))
 (let ((?x5699 (* l_0_4_38 l_0_4_38)))
 (let ((?x5988 (* 2.0 ?x5699)))
 (let ((?x5693 (* l_0_4_37 l_0_4_37)))
 (let ((?x5986 (* 2.0 ?x5693)))
 (let ((?x5518 (* 8.0 l_0_4_36)))
 (let ((?x5519 (* ?x5518 l_0_4_39)))
 (let ((?x5515 (* 8.0 l_0_4_35)))
 (let ((?x5516 (* ?x5515 l_0_4_38)))
 (let ((?x5512 (* 8.0 l_0_4_34)))
 (let ((?x5513 (* ?x5512 l_0_4_37)))
 (let ((?x5499 (* 8.0 l_0_4_21)))
 (let ((?x5500 (* ?x5499 l_0_4_24)))
 (let ((?x5496 (* 8.0 l_0_4_20)))
 (let ((?x5497 (* ?x5496 l_0_4_23)))
 (let ((?x5491 (* 8.0 l_0_4_19)))
 (let ((?x5492 (* ?x5491 l_0_4_22)))
 (let ((?x5976 (- (- (+ (+ ?x5492 ?x5497) ?x5500) (* (* 2.0 l_0_4_22) l_0_4_22)) (* (* 2.0 l_0_4_23) l_0_4_23))))
 (let ((?x5982 (- (- ?x5976 (* (* 2.0 l_0_4_24) l_0_4_24)) (* (* 2.0 l_0_4_25) l_0_4_25))))
 (let ((?x5992 (- (+ (+ (+ (- (- (- ?x5982 ?x5513) ?x5516) ?x5519) ?x5986) ?x5988) ?x5990) ?x5139)))
 (= (- (- (+ ?x5992 ?x5993) ?x5145) ?x5154) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x5665 (* 4.0 l_0_4_40)))
 (let ((?x6046 (* ?x5665 l_0_4_44)))
 (let ((?x5662 (* 4.0 l_0_4_39)))
 (let ((?x6044 (* ?x5662 l_0_4_43)))
 (let ((?x5659 (* 4.0 l_0_4_38)))
 (let ((?x6042 (* ?x5659 l_0_4_42)))
 (let ((?x5656 (* 4.0 l_0_4_37)))
 (let ((?x6040 (* ?x5656 l_0_4_41)))
 (let ((?x5518 (* 8.0 l_0_4_36)))
 (let ((?x6038 (* ?x5518 l_0_4_43)))
 (let ((?x5919 (* 4.0 l_0_4_36)))
 (let ((?x5920 (* ?x5919 l_0_4_39)))
 (let ((?x5515 (* 8.0 l_0_4_35)))
 (let ((?x6035 (* ?x5515 l_0_4_42)))
 (let ((?x5914 (* 4.0 l_0_4_35)))
 (let ((?x5915 (* ?x5914 l_0_4_38)))
 (let ((?x5512 (* 8.0 l_0_4_34)))
 (let ((?x6032 (* ?x5512 l_0_4_41)))
 (let ((?x5909 (* 4.0 l_0_4_34)))
 (let ((?x5910 (* ?x5909 l_0_4_37)))
 (let ((?x6029 (* (* 4.0 l_0_4_25) l_0_4_29)))
 (let ((?x6026 (* (* 4.0 l_0_4_24) l_0_4_28)))
 (let ((?x6023 (* (* 4.0 l_0_4_23) l_0_4_27)))
 (let ((?x6020 (* (* 4.0 l_0_4_22) l_0_4_26)))
 (let ((?x5499 (* 8.0 l_0_4_21)))
 (let ((?x6017 (* ?x5499 l_0_4_28)))
 (let ((?x5900 (* 4.0 l_0_4_21)))
 (let ((?x5901 (* ?x5900 l_0_4_24)))
 (let ((?x5496 (* 8.0 l_0_4_20)))
 (let ((?x6014 (* ?x5496 l_0_4_27)))
 (let ((?x5894 (* 4.0 l_0_4_20)))
 (let ((?x5895 (* ?x5894 l_0_4_23)))
 (let ((?x5491 (* 8.0 l_0_4_19)))
 (let ((?x6011 (* ?x5491 l_0_4_26)))
 (let ((?x5888 (* 4.0 l_0_4_19)))
 (let ((?x5889 (* ?x5888 l_0_4_22)))
 (let ((?x5297 (* 2.0 l_0_4_13)))
 (let ((?x6008 (* ?x5297 l_0_4_6)))
 (let ((?x5294 (* 2.0 l_0_4_12)))
 (let ((?x1105 (* ?x5294 l_0_4_5)))
 (let ((?x6012 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x1105) ?x6008) ?x5889) ?x6011)))
 (let ((?x6027 (- (- (- (+ (+ (+ (+ ?x6012 ?x5895) ?x6014) ?x5901) ?x6017) ?x6020) ?x6023) ?x6026)))
 (let ((?x6039 (- (- (- (- (- (- (- ?x6027 ?x6029) ?x5910) ?x6032) ?x5915) ?x6035) ?x5920) ?x6038)))
 (= (+ (+ (+ (+ ?x6039 ?x6040) ?x6042) ?x6044) ?x6046) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5257 (* l_0_4_9 l_0_4_9)))
 (let ((?x5246 (* l_0_4_8 l_0_4_8)))
 (let ((?x5243 (* l_0_4_7 l_0_4_7)))
 (let ((?x5665 (* 4.0 l_0_4_40)))
 (let ((?x5666 (* ?x5665 l_0_4_40)))
 (let ((?x5662 (* 4.0 l_0_4_39)))
 (let ((?x5663 (* ?x5662 l_0_4_39)))
 (let ((?x5659 (* 4.0 l_0_4_38)))
 (let ((?x5660 (* ?x5659 l_0_4_38)))
 (let ((?x5656 (* 4.0 l_0_4_37)))
 (let ((?x5657 (* ?x5656 l_0_4_37)))
 (let ((?x5650 (* l_0_4_25 l_0_4_25)))
 (let ((?x5651 (* 4.0 ?x5650)))
 (let ((?x5647 (* l_0_4_24 l_0_4_24)))
 (let ((?x5648 (* 4.0 ?x5647)))
 (let ((?x5644 (* l_0_4_23 l_0_4_23)))
 (let ((?x5645 (* 4.0 ?x5644)))
 (let ((?x1235 (+ (+ (* (- l_0_4_10) l_0_4_10) (* 4.0 (* l_0_4_22 l_0_4_22))) ?x5645)))
 (let ((?x6090 (- (- (- (- (- (+ (+ ?x1235 ?x5648) ?x5651) ?x5657) ?x5660) ?x5663) ?x5666) ?x5243)))
 (= (- (- ?x6090 ?x5246) ?x5257) 0.0)))))))))))))))))))))
(assert
 (let ((?x5781 (* (* 8.0 l_0_4_40) l_0_4_44)))
 (let ((?x5778 (* (* 8.0 l_0_4_39) l_0_4_43)))
 (let ((?x5775 (* (* 8.0 l_0_4_38) l_0_4_42)))
 (let ((?x5772 (* (* 8.0 l_0_4_37) l_0_4_41)))
 (let ((?x5650 (* l_0_4_25 l_0_4_25)))
 (let ((?x1058 (* 2.0 ?x5650)))
 (let ((?x5763 (* (* 8.0 l_0_4_25) l_0_4_29)))
 (let ((?x5647 (* l_0_4_24 l_0_4_24)))
 (let ((?x1054 (* 2.0 ?x5647)))
 (let ((?x5760 (* (* 8.0 l_0_4_24) l_0_4_28)))
 (let ((?x5644 (* l_0_4_23 l_0_4_23)))
 (let ((?x1052 (* 2.0 ?x5644)))
 (let ((?x5757 (* (* 8.0 l_0_4_23) l_0_4_27)))
 (let ((?x5641 (* l_0_4_22 l_0_4_22)))
 (let ((?x1043 (* 2.0 ?x5641)))
 (let ((?x5754 (* (* 8.0 l_0_4_22) l_0_4_26)))
 (let ((?x5297 (* 2.0 l_0_4_13)))
 (let ((?x5298 (* ?x5297 l_0_4_9)))
 (let ((?x5294 (* 2.0 l_0_4_12)))
 (let ((?x5295 (* ?x5294 l_0_4_8)))
 (let ((?x5291 (* 2.0 l_0_4_11)))
 (let ((?x5292 (* ?x5291 l_0_4_7)))
 (let ((?x1302 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x5292) ?x5295) ?x5298) ?x5754)))
 (let ((?x6104 (+ (+ (+ (+ (+ (+ (+ ?x1302 ?x1043) ?x5757) ?x1052) ?x5760) ?x1054) ?x5763) ?x1058)))
 (let ((?x6112 (- (- (- (- ?x6104 ?x5772) (* (* 2.0 l_0_4_37) l_0_4_37)) ?x5775) (* (* 2.0 l_0_4_38) l_0_4_38))))
 (let ((?x6120 (- (- (- (- ?x6112 ?x5778) (* (* 2.0 l_0_4_39) l_0_4_39)) ?x5781) (* (* 2.0 l_0_4_40) l_0_4_40))))
 (= ?x6120 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x6153 (* (* 4.0 l_0_4_45) l_0_4_45)))
 (let ((?x6150 (* (* 4.0 l_0_4_44) l_0_4_44)))
 (let ((?x6147 (* (* 4.0 l_0_4_43) l_0_4_43)))
 (let ((?x6144 (* (* 4.0 l_0_4_42) l_0_4_42)))
 (let ((?x6141 (* (* 4.0 l_0_4_41) l_0_4_41)))
 (let ((?x5665 (* 4.0 l_0_4_40)))
 (let ((?x6046 (* ?x5665 l_0_4_44)))
 (let ((?x5662 (* 4.0 l_0_4_39)))
 (let ((?x6044 (* ?x5662 l_0_4_43)))
 (let ((?x5659 (* 4.0 l_0_4_38)))
 (let ((?x6042 (* ?x5659 l_0_4_42)))
 (let ((?x5656 (* 4.0 l_0_4_37)))
 (let ((?x6040 (* ?x5656 l_0_4_41)))
 (let ((?x5906 (* 2.0 l_0_4_31)))
 (let ((?x5907 (* ?x5906 l_0_4_37)))
 (let ((?x6132 (* l_0_4_30 l_0_4_30)))
 (let ((?x6133 (* 4.0 ?x6132)))
 (let ((?x6129 (* l_0_4_29 l_0_4_29)))
 (let ((?x6130 (* 4.0 ?x6129)))
 (let ((?x6126 (* l_0_4_28 l_0_4_28)))
 (let ((?x6127 (* 4.0 ?x6126)))
 (let ((?x1348 (* l_0_4_27 l_0_4_27)))
 (let ((?x1350 (* 4.0 ?x1348)))
 (let ((?x1341 (* l_0_4_26 l_0_4_26)))
 (let ((?x1347 (* 4.0 ?x1341)))
 (let ((?x6029 (* (* 4.0 l_0_4_25) l_0_4_29)))
 (let ((?x6026 (* (* 4.0 l_0_4_24) l_0_4_28)))
 (let ((?x6023 (* (* 4.0 l_0_4_23) l_0_4_27)))
 (let ((?x6020 (* (* 4.0 l_0_4_22) l_0_4_26)))
 (let ((?x852 (* 2.0 l_0_4_16)))
 (let ((?x853 (* ?x852 l_0_4_22)))
 (let ((?x1397 (* l_0_4_15 l_0_4_15)))
 (let ((?x1445 (* l_0_4_14 l_0_4_14)))
 (let ((?x1456 (* l_0_4_13 l_0_4_13)))
 (let ((?x1395 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x1456) ?x1445)))
 (let ((?x1353 (+ (+ (+ (+ (+ (- (- ?x1395 ?x1397) ?x853) ?x6020) ?x6023) ?x6026) ?x6029) ?x1347)))
 (let ((?x6137 (- (- (+ (+ (+ (+ (+ ?x1353 ?x1350) ?x6127) ?x6130) ?x6133) ?x5907) ?x6040) ?x6042)))
 (let ((?x6154 (- (- (- (- (- (- (- ?x6137 ?x6044) ?x6046) ?x6141) ?x6144) ?x6147) ?x6150) ?x6153)))
 (= ?x6154 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6180 (* l_0_4_61 l_0_4_61)))
 (let ((?x5021 (* l_0_4_46 l_0_4_46)))
 (let ((?x4986 (* 2.0 l_0_4_46)))
 (let ((?x6177 (* ?x4986 l_0_4_47)))
 (let ((?x4983 (* 4.0 l_0_4_31)))
 (let ((?x4984 (* ?x4983 l_0_4_31)))
 (let ((?x4980 (* l_0_4_16 l_0_4_16)))
 (let ((?x4981 (* 4.0 ?x4980)))
 (let ((?x6179 (- (+ (- (+ (* (* 2.0 l_0_4_1) l_0_4_2) ?x4981) ?x4984) ?x6177) ?x5021)))
 (= (- (- ?x6179 ?x6180) (* (* 2.0 l_0_4_76) l_0_4_77)) 0.0)))))))))))
(assert
 (let ((?x4986 (* 2.0 l_0_4_46)))
 (let ((?x6197 (* ?x4986 l_0_4_49)))
 (let ((?x5000 (* l_0_4_31 l_0_4_31)))
 (let ((?x6195 (* 2.0 ?x5000)))
 (let ((?x6194 (- (* (* 2.0 l_0_4_1) l_0_4_4) (* (* 2.0 l_0_4_16) l_0_4_16))))
 (= (- (+ (+ ?x6194 ?x6195) ?x6197) (* (* 2.0 l_0_4_76) l_0_4_79)) 0.0)))))))
(assert
 (let ((?x4986 (* 2.0 l_0_4_46)))
 (let ((?x6212 (* ?x4986 l_0_4_56)))
 (let ((?x4980 (* l_0_4_16 l_0_4_16)))
 (let ((?x6202 (* 2.0 ?x4980)))
 (let ((?x6211 (- (+ (* (* 2.0 l_0_4_1) l_0_4_11) ?x6202) (* (* 2.0 l_0_4_31) l_0_4_31))))
 (= (- (+ ?x6211 ?x6212) (* (* 2.0 l_0_4_76) l_0_4_86)) 0.0)))))))
(assert
 (let ((?x6244 (* l_0_4_78 l_0_4_78)))
 (let ((?x6242 (* l_0_4_77 l_0_4_77)))
 (let ((?x4986 (* 2.0 l_0_4_46)))
 (let ((?x6177 (* ?x4986 l_0_4_47)))
 (let ((?x5048 (* 8.0 l_0_4_31)))
 (let ((?x5049 (* ?x5048 l_0_4_32)))
 (let ((?x5037 (* 8.0 l_0_4_16)))
 (let ((?x5038 (* ?x5037 l_0_4_17)))
 (let ((?x6231 (+ (+ ?x5038 (* 1.0 (* l_0_4_2 l_0_4_2))) (* 1.0 (* l_0_4_3 l_0_4_3)))))
 (let ((?x6239 (+ (+ (- (- ?x6231 ?x5049) ?x6177) (* 1.0 (* l_0_4_47 l_0_4_47))) (* 1.0 (* l_0_4_48 l_0_4_48)))))
 (= (- (- (- ?x6239 (* (* 2.0 l_0_4_61) l_0_4_62)) ?x6242) ?x6244) 0.0))))))))))))
(assert
 (let ((?x5057 (* 2.0 l_0_4_48)))
 (let ((?x6266 (* ?x5057 l_0_4_50)))
 (let ((?x5054 (* 2.0 l_0_4_47)))
 (let ((?x6264 (* ?x5054 l_0_4_49)))
 (let ((?x4986 (* 2.0 l_0_4_46)))
 (let ((?x6197 (* ?x4986 l_0_4_49)))
 (let ((?x5048 (* 8.0 l_0_4_31)))
 (let ((?x5134 (* ?x5048 l_0_4_34)))
 (let ((?x4983 (* 4.0 l_0_4_31)))
 (let ((?x6260 (* ?x4983 l_0_4_32)))
 (let ((?x5045 (* 2.0 l_0_4_3)))
 (let ((?x5502 (* ?x5045 l_0_4_5)))
 (let ((?x5042 (* 2.0 l_0_4_2)))
 (let ((?x5494 (* ?x5042 l_0_4_4)))
 (let ((?x5037 (* 8.0 l_0_4_16)))
 (let ((?x5129 (* ?x5037 l_0_4_19)))
 (let ((?x6261 (+ (+ (+ (+ (* (* (- 4.0) l_0_4_16) l_0_4_17) ?x5129) ?x5494) ?x5502) ?x6260)))
 (let ((?x6269 (- (+ (+ (- (- ?x6261 ?x5134) ?x6197) ?x6264) ?x6266) (* (* 2.0 l_0_4_61) l_0_4_64))))
 (let ((?x6273 (- (- ?x6269 (* (* 2.0 l_0_4_77) l_0_4_79)) (* (* 2.0 l_0_4_78) l_0_4_80))))
 (= ?x6273 0.0)))))))))))))))))))))
(assert
 (let ((?x5057 (* 2.0 l_0_4_48)))
 (let ((?x6305 (* ?x5057 l_0_4_57)))
 (let ((?x5054 (* 2.0 l_0_4_47)))
 (let ((?x6303 (* ?x5054 l_0_4_56)))
 (let ((?x4986 (* 2.0 l_0_4_46)))
 (let ((?x6212 (* ?x4986 l_0_4_56)))
 (let ((?x5048 (* 8.0 l_0_4_31)))
 (let ((?x5304 (* ?x5048 l_0_4_41)))
 (let ((?x4983 (* 4.0 l_0_4_31)))
 (let ((?x6260 (* ?x4983 l_0_4_32)))
 (let ((?x5037 (* 8.0 l_0_4_16)))
 (let ((?x5301 (* ?x5037 l_0_4_26)))
 (let ((?x5294 (* 2.0 l_0_4_12)))
 (let ((?x5745 (* ?x5294 l_0_4_3)))
 (let ((?x6298 (+ (+ (* (* 2.0 l_0_4_11) l_0_4_2) ?x5745) (* (* 4.0 l_0_4_16) l_0_4_17))))
 (let ((?x6308 (- (+ (+ (- (- (- (+ ?x6298 ?x5301) ?x6260) ?x5304) ?x6212) ?x6303) ?x6305) (* (* 2.0 l_0_4_61) l_0_4_71))))
 (let ((?x6312 (- (- ?x6308 (* (* 2.0 l_0_4_77) l_0_4_86)) (* (* 2.0 l_0_4_78) l_0_4_87))))
 (= ?x6312 0.0)))))))))))))))))))
(assert
 (let ((?x6351 (* l_0_4_81 l_0_4_81)))
 (let ((?x6349 (* l_0_4_80 l_0_4_80)))
 (let ((?x6347 (* l_0_4_79 l_0_4_79)))
 (let ((?x5000 (* l_0_4_31 l_0_4_31)))
 (let ((?x4983 (* 4.0 l_0_4_31)))
 (let ((?x6329 (* ?x4983 l_0_4_34)))
 (let ((?x6330 (+ (+ (* (* (- 4.0) l_0_4_16) l_0_4_19) (* l_0_4_16 l_0_4_16)) ?x6329)))
 (let ((?x6336 (+ (+ (- ?x6330 ?x5000) (* 1.0 (* l_0_4_4 l_0_4_4))) (* 1.0 (* l_0_4_49 l_0_4_49)))))
 (let ((?x6341 (+ (+ ?x6336 (* 1.0 (* l_0_4_5 l_0_4_5))) (* 1.0 (* l_0_4_50 l_0_4_50)))))
 (let ((?x6346 (+ (+ ?x6341 (* 1.0 (* l_0_4_51 l_0_4_51))) (* 1.0 (* l_0_4_6 l_0_4_6)))))
 (= (- (- (- ?x6346 ?x6347) ?x6349) ?x6351) 0.0))))))))))))
(assert
 (let ((?x5150 (* 2.0 l_0_4_51)))
 (let ((?x6366 (* ?x5150 l_0_4_58)))
 (let ((?x5147 (* 2.0 l_0_4_50)))
 (let ((?x6364 (* ?x5147 l_0_4_57)))
 (let ((?x5141 (* 2.0 l_0_4_49)))
 (let ((?x6362 (* ?x5141 l_0_4_56)))
 (let ((?x4983 (* 4.0 l_0_4_31)))
 (let ((?x6360 (* ?x4983 l_0_4_41)))
 (let ((?x6329 (* ?x4983 l_0_4_34)))
 (let ((?x5131 (* 4.0 l_0_4_16)))
 (let ((?x1868 (* ?x5131 l_0_4_26)))
 (let ((?x5297 (* 2.0 l_0_4_13)))
 (let ((?x6008 (* ?x5297 l_0_4_6)))
 (let ((?x5294 (* 2.0 l_0_4_12)))
 (let ((?x1105 (* ?x5294 l_0_4_5)))
 (let ((?x1866 (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x1105) ?x6008) (* ?x5131 l_0_4_19))))
 (let ((?x6369 (- (+ (+ (+ (+ (- (- ?x1866 ?x1868) ?x6329) ?x6360) ?x6362) ?x6364) ?x6366) (* (* 2.0 l_0_4_79) l_0_4_86))))
 (let ((?x6373 (- (- ?x6369 (* (* 2.0 l_0_4_80) l_0_4_87)) (* (* 2.0 l_0_4_81) l_0_4_88))))
 (= ?x6373 0.0))))))))))))))))))))
(assert
 (let ((?x6430 (* l_0_4_90 l_0_4_90)))
 (let ((?x6428 (* l_0_4_89 l_0_4_89)))
 (let ((?x6426 (* l_0_4_88 l_0_4_88)))
 (let ((?x6424 (* l_0_4_87 l_0_4_87)))
 (let ((?x6422 (* l_0_4_86 l_0_4_86)))
 (let ((?x5000 (* l_0_4_31 l_0_4_31)))
 (let ((?x4983 (* 4.0 l_0_4_31)))
 (let ((?x6360 (* ?x4983 l_0_4_41)))
 (let ((?x4980 (* l_0_4_16 l_0_4_16)))
 (let ((?x5131 (* 4.0 l_0_4_16)))
 (let ((?x1868 (* ?x5131 l_0_4_26)))
 (let ((?x6396 (+ (* 1.0 (* l_0_4_11 l_0_4_11)) (* 1.0 (* l_0_4_12 l_0_4_12)))))
 (let ((?x6400 (+ (+ ?x6396 (* 1.0 (* l_0_4_13 l_0_4_13))) (* 1.0 (* l_0_4_14 l_0_4_14)))))
 (let ((?x6405 (- (- (+ (+ ?x6400 (* 1.0 (* l_0_4_15 l_0_4_15))) ?x1868) ?x4980) ?x6360)))
 (let ((?x6412 (+ (+ (+ ?x6405 ?x5000) (* 1.0 (* l_0_4_56 l_0_4_56))) (* 1.0 (* l_0_4_57 l_0_4_57)))))
 (let ((?x6418 (+ (+ ?x6412 (* 1.0 (* l_0_4_58 l_0_4_58))) (* 1.0 (* l_0_4_59 l_0_4_59)))))
 (let ((?x6427 (- (- (- (+ ?x6418 (* 1.0 (* l_0_4_60 l_0_4_60))) ?x6422) ?x6424) ?x6426)))
 (= (- (- ?x6427 ?x6428) ?x6430) 0.0)))))))))))))))))))
(assert
 (let ((?x6468 (* l_0_4_75 l_0_4_75)))
 (let ((?x6466 (* l_0_4_74 l_0_4_74)))
 (let ((?x6464 (* l_0_4_73 l_0_4_73)))
 (let ((?x6462 (* l_0_4_72 l_0_4_72)))
 (let ((?x6460 (* l_0_4_71 l_0_4_71)))
 (let ((?x6419 (* l_0_4_60 l_0_4_60)))
 (let ((?x6416 (* l_0_4_59 l_0_4_59)))
 (let ((?x6413 (* l_0_4_58 l_0_4_58)))
 (let ((?x6410 (* l_0_4_57 l_0_4_57)))
 (let ((?x6407 (* l_0_4_56 l_0_4_56)))
 (let ((?x6153 (* (* 4.0 l_0_4_45) l_0_4_45)))
 (let ((?x6150 (* (* 4.0 l_0_4_44) l_0_4_44)))
 (let ((?x6147 (* (* 4.0 l_0_4_43) l_0_4_43)))
 (let ((?x6144 (* (* 4.0 l_0_4_42) l_0_4_42)))
 (let ((?x6141 (* (* 4.0 l_0_4_41) l_0_4_41)))
 (let ((?x5411 (* 4.0 l_0_4_33)))
 (let ((?x6448 (* ?x5411 l_0_4_42)))
 (let ((?x5405 (* 4.0 l_0_4_32)))
 (let ((?x6446 (* ?x5405 l_0_4_41)))
 (let ((?x5906 (* 2.0 l_0_4_31)))
 (let ((?x6444 (* ?x5906 l_0_4_32)))
 (let ((?x6132 (* l_0_4_30 l_0_4_30)))
 (let ((?x6133 (* 4.0 ?x6132)))
 (let ((?x6129 (* l_0_4_29 l_0_4_29)))
 (let ((?x6130 (* 4.0 ?x6129)))
 (let ((?x6126 (* l_0_4_28 l_0_4_28)))
 (let ((?x6127 (* 4.0 ?x6126)))
 (let ((?x1348 (* l_0_4_27 l_0_4_27)))
 (let ((?x1350 (* 4.0 ?x1348)))
 (let ((?x1341 (* l_0_4_26 l_0_4_26)))
 (let ((?x1347 (* 4.0 ?x1341)))
 (let ((?x5488 (* 4.0 l_0_4_18)))
 (let ((?x6437 (* ?x5488 l_0_4_27)))
 (let ((?x5483 (* 4.0 l_0_4_17)))
 (let ((?x6435 (* ?x5483 l_0_4_26)))
 (let ((?x6440 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_16) l_0_4_17) ?x6435) ?x6437) ?x1347) ?x1350)))
 (let ((?x6450 (- (- (- (+ (+ (+ (+ ?x6440 ?x6127) ?x6130) ?x6133) ?x6444) ?x6446) ?x6448) ?x6141)))
 (let ((?x6457 (- (- (- (- (- (- (- ?x6450 ?x6144) ?x6147) ?x6150) ?x6153) ?x6407) ?x6410) ?x6413)))
 (let ((?x6469 (- (- (- (- (- (- (- ?x6457 ?x6416) ?x6419) ?x6460) ?x6462) ?x6464) ?x6466) ?x6468)))
 (= ?x6469 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5919 (* 4.0 l_0_4_36)))
 (let ((?x6500 (* ?x5919 l_0_4_43)))
 (let ((?x5914 (* 4.0 l_0_4_35)))
 (let ((?x6498 (* ?x5914 l_0_4_42)))
 (let ((?x5909 (* 4.0 l_0_4_34)))
 (let ((?x6496 (* ?x5909 l_0_4_41)))
 (let ((?x5906 (* 2.0 l_0_4_31)))
 (let ((?x6494 (* ?x5906 l_0_4_34)))
 (let ((?x5900 (* 4.0 l_0_4_21)))
 (let ((?x2091 (* ?x5900 l_0_4_28)))
 (let ((?x5894 (* 4.0 l_0_4_20)))
 (let ((?x2172 (* ?x5894 l_0_4_27)))
 (let ((?x5888 (* 4.0 l_0_4_19)))
 (let ((?x2174 (* ?x5888 l_0_4_26)))
 (let ((?x6481 (- (+ (+ (+ (* (* (- 2.0) l_0_4_16) l_0_4_19) ?x2174) ?x2172) ?x2091) (* (* 2.0 l_0_4_26) l_0_4_26))))
 (let ((?x6487 (- (- ?x6481 (* (* 2.0 l_0_4_27) l_0_4_27)) (* (* 2.0 l_0_4_28) l_0_4_28))))
 (let ((?x6493 (- (- ?x6487 (* (* 2.0 l_0_4_29) l_0_4_29)) (* (* 2.0 l_0_4_30) l_0_4_30))))
 (let ((?x6503 (+ (- (- (- (+ ?x6493 ?x6494) ?x6496) ?x6498) ?x6500) (* 2.0 (* l_0_4_41 l_0_4_41)))))
 (let ((?x6507 (+ (+ ?x6503 (* 2.0 (* l_0_4_42 l_0_4_42))) (* 2.0 (* l_0_4_43 l_0_4_43)))))
 (let ((?x6511 (+ (+ ?x6507 (* 2.0 (* l_0_4_44 l_0_4_44))) (* 2.0 (* l_0_4_45 l_0_4_45)))))
 (= ?x6511 0.0))))))))))))))))))))))
(assert
 (let ((?x5906 (* 2.0 l_0_4_31)))
 (let ((?x6557 (* ?x5906 l_0_4_41)))
 (let ((?x6132 (* l_0_4_30 l_0_4_30)))
 (let ((?x2212 (* 2.0 ?x6132)))
 (let ((?x6129 (* l_0_4_29 l_0_4_29)))
 (let ((?x6524 (* 2.0 ?x6129)))
 (let ((?x6126 (* l_0_4_28 l_0_4_28)))
 (let ((?x2205 (* 2.0 ?x6126)))
 (let ((?x1348 (* l_0_4_27 l_0_4_27)))
 (let ((?x2199 (* 2.0 ?x1348)))
 (let ((?x1341 (* l_0_4_26 l_0_4_26)))
 (let ((?x6517 (* 2.0 ?x1341)))
 (let ((?x6555 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_16) l_0_4_26) ?x6517) ?x2199) ?x2205) ?x6524)))
 (let ((?x6564 (- (- (+ (+ ?x6555 ?x2212) ?x6557) (* (* 2.0 l_0_4_41) l_0_4_41)) (* (* 2.0 l_0_4_42) l_0_4_42))))
 (let ((?x6570 (- (- ?x6564 (* (* 2.0 l_0_4_43) l_0_4_43)) (* (* 2.0 l_0_4_44) l_0_4_44))))
 (= (- ?x6570 (* (* 2.0 l_0_4_45) l_0_4_45)) 0.0)))))))))))))))))
(assert
 (let ((?x5452 (* l_0_4_33 l_0_4_33)))
 (let ((?x5440 (* l_0_4_32 l_0_4_32)))
 (let ((?x6593 (+ (+ (- (* (- l_0_4_17) l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x5440) ?x5452)))
 (= ?x6593 0.0)))))
(assert
 (let ((?x6608 (* 2.0 l_0_4_33)))
 (let ((?x6609 (* ?x6608 l_0_4_35)))
 (let ((?x6605 (* 2.0 l_0_4_32)))
 (let ((?x6606 (* ?x6605 l_0_4_34)))
 (let ((?x6602 (* 2.0 l_0_4_18)))
 (let ((?x6603 (* ?x6602 l_0_4_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x6603) ?x6606) ?x6609) 0.0))))))))
(assert
 (let ((?x6608 (* 2.0 l_0_4_33)))
 (let ((?x6628 (* ?x6608 l_0_4_38)))
 (let ((?x6605 (* 2.0 l_0_4_32)))
 (let ((?x6626 (* ?x6605 l_0_4_37)))
 (let ((?x6602 (* 2.0 l_0_4_18)))
 (let ((?x6619 (* ?x6602 l_0_4_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x6619) ?x6626) ?x6628) 0.0))))))))
(assert
 (let ((?x6608 (* 2.0 l_0_4_33)))
 (let ((?x6642 (* ?x6608 l_0_4_42)))
 (let ((?x6605 (* 2.0 l_0_4_32)))
 (let ((?x6640 (* ?x6605 l_0_4_41)))
 (let ((?x6602 (* 2.0 l_0_4_18)))
 (let ((?x2241 (* ?x6602 l_0_4_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_26) ?x2241) ?x6640) ?x6642) 0.0))))))))
(assert
 (let ((?x1612 (* l_0_4_45 l_0_4_45)))
 (let ((?x1591 (* l_0_4_44 l_0_4_44)))
 (let ((?x1605 (* l_0_4_43 l_0_4_43)))
 (let ((?x1603 (* l_0_4_42 l_0_4_42)))
 (let ((?x1565 (* l_0_4_41 l_0_4_41)))
 (let ((?x5954 (* l_0_4_36 l_0_4_36)))
 (let ((?x983 (* l_0_4_35 l_0_4_35)))
 (let ((?x982 (* l_0_4_34 l_0_4_34)))
 (let ((?x6132 (* l_0_4_30 l_0_4_30)))
 (let ((?x6129 (* l_0_4_29 l_0_4_29)))
 (let ((?x6126 (* l_0_4_28 l_0_4_28)))
 (let ((?x1348 (* l_0_4_27 l_0_4_27)))
 (let ((?x1341 (* l_0_4_26 l_0_4_26)))
 (let ((?x5903 (* l_0_4_21 l_0_4_21)))
 (let ((?x6660 (+ (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x5903) ?x1341)))
 (let ((?x6667 (+ (+ (+ (+ (+ (+ (+ ?x6660 ?x1348) ?x6126) ?x6129) ?x6132) ?x982) ?x983) ?x5954)))
 (= (- (- (- (- (- ?x6667 ?x1565) ?x1603) ?x1605) ?x1591) ?x1612) 0.0))))))))))))))))))
(assert
 (let ((?x6707 (* 2.0 l_0_4_36)))
 (let ((?x6708 (* ?x6707 l_0_4_39)))
 (let ((?x6704 (* 2.0 l_0_4_35)))
 (let ((?x6705 (* ?x6704 l_0_4_38)))
 (let ((?x6701 (* 2.0 l_0_4_34)))
 (let ((?x6702 (* ?x6701 l_0_4_37)))
 (let ((?x6698 (* 2.0 l_0_4_21)))
 (let ((?x6699 (* ?x6698 l_0_4_24)))
 (let ((?x6695 (* 2.0 l_0_4_20)))
 (let ((?x6696 (* ?x6695 l_0_4_23)))
 (let ((?x6706 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x6696) ?x6699) ?x6702) ?x6705)))
 (= (+ ?x6706 ?x6708) 0.0)))))))))))))
(assert
 (let ((?x6707 (* 2.0 l_0_4_36)))
 (let ((?x6737 (* ?x6707 l_0_4_43)))
 (let ((?x6704 (* 2.0 l_0_4_35)))
 (let ((?x6735 (* ?x6704 l_0_4_42)))
 (let ((?x6701 (* 2.0 l_0_4_34)))
 (let ((?x6733 (* ?x6701 l_0_4_41)))
 (let ((?x6698 (* 2.0 l_0_4_21)))
 (let ((?x6725 (* ?x6698 l_0_4_28)))
 (let ((?x6695 (* 2.0 l_0_4_20)))
 (let ((?x6723 (* ?x6695 l_0_4_27)))
 (let ((?x6736 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_26) ?x6723) ?x6725) ?x6733) ?x6735)))
 (= (+ ?x6736 ?x6737) 0.0)))))))))))))
(assert
 (let ((?x5711 (* l_0_4_40 l_0_4_40)))
 (let ((?x5705 (* l_0_4_39 l_0_4_39)))
 (let ((?x5699 (* l_0_4_38 l_0_4_38)))
 (let ((?x5693 (* l_0_4_37 l_0_4_37)))
 (let ((?x5650 (* l_0_4_25 l_0_4_25)))
 (let ((?x5647 (* l_0_4_24 l_0_4_24)))
 (let ((?x6745 (- (- (- (* (- l_0_4_22) l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x5647) ?x5650)))
 (= (+ (+ (+ (+ ?x6745 ?x5693) ?x5699) ?x5705) ?x5711) 0.0)))))))))
(assert
 (let ((?x6118 (* 2.0 l_0_4_40)))
 (let ((?x6778 (* ?x6118 l_0_4_44)))
 (let ((?x6114 (* 2.0 l_0_4_39)))
 (let ((?x6776 (* ?x6114 l_0_4_43)))
 (let ((?x6110 (* 2.0 l_0_4_38)))
 (let ((?x6774 (* ?x6110 l_0_4_42)))
 (let ((?x6106 (* 2.0 l_0_4_37)))
 (let ((?x6772 (* ?x6106 l_0_4_41)))
 (let ((?x5980 (* 2.0 l_0_4_25)))
 (let ((?x6770 (* ?x5980 l_0_4_29)))
 (let ((?x5977 (* 2.0 l_0_4_24)))
 (let ((?x6768 (* ?x5977 l_0_4_28)))
 (let ((?x5974 (* 2.0 l_0_4_23)))
 (let ((?x6766 (* ?x5974 l_0_4_27)))
 (let ((?x6773 (+ (- (- (- (* (* (- 2.0) l_0_4_22) l_0_4_26) ?x6766) ?x6768) ?x6770) ?x6772)))
 (= (+ (+ (+ ?x6773 ?x6774) ?x6776) ?x6778) 0.0)))))))))))))))))
(assert
 (let ((?x1612 (* l_0_4_45 l_0_4_45)))
 (let ((?x1591 (* l_0_4_44 l_0_4_44)))
 (let ((?x1605 (* l_0_4_43 l_0_4_43)))
 (let ((?x1603 (* l_0_4_42 l_0_4_42)))
 (let ((?x1565 (* l_0_4_41 l_0_4_41)))
 (let ((?x6132 (* l_0_4_30 l_0_4_30)))
 (let ((?x6129 (* l_0_4_29 l_0_4_29)))
 (let ((?x6126 (* l_0_4_28 l_0_4_28)))
 (let ((?x2355 (- (- (- (* (- l_0_4_26) l_0_4_26) (* l_0_4_27 l_0_4_27)) ?x6126) ?x6129)))
 (= (+ (+ (+ (+ (+ (- ?x2355 ?x6132) ?x1565) ?x1603) ?x1605) ?x1591) ?x1612) 0.0)))))))))))
(assert
 (let ((?x6832 (* l_0_4_66 l_0_4_66)))
 (let ((?x6830 (* l_0_4_65 l_0_4_65)))
 (let ((?x6828 (* l_0_4_64 l_0_4_64)))
 (let ((?x6342 (* l_0_4_51 l_0_4_51)))
 (let ((?x6339 (* l_0_4_50 l_0_4_50)))
 (let ((?x6334 (* l_0_4_49 l_0_4_49)))
 (let ((?x5919 (* 4.0 l_0_4_36)))
 (let ((?x5922 (* ?x5919 l_0_4_36)))
 (let ((?x5914 (* 4.0 l_0_4_35)))
 (let ((?x5917 (* ?x5914 l_0_4_35)))
 (let ((?x5909 (* 4.0 l_0_4_34)))
 (let ((?x5912 (* ?x5909 l_0_4_34)))
 (let ((?x5411 (* 4.0 l_0_4_33)))
 (let ((?x6820 (* ?x5411 l_0_4_35)))
 (let ((?x5405 (* 4.0 l_0_4_32)))
 (let ((?x6818 (* ?x5405 l_0_4_34)))
 (let ((?x5906 (* 2.0 l_0_4_31)))
 (let ((?x6444 (* ?x5906 l_0_4_32)))
 (let ((?x5903 (* l_0_4_21 l_0_4_21)))
 (let ((?x5904 (* 4.0 ?x5903)))
 (let ((?x5897 (* l_0_4_20 l_0_4_20)))
 (let ((?x5898 (* 4.0 ?x5897)))
 (let ((?x5891 (* l_0_4_19 l_0_4_19)))
 (let ((?x5892 (* 4.0 ?x5891)))
 (let ((?x5488 (* 4.0 l_0_4_18)))
 (let ((?x6812 (* ?x5488 l_0_4_20)))
 (let ((?x5483 (* 4.0 l_0_4_17)))
 (let ((?x2435 (* ?x5483 l_0_4_19)))
 (let ((?x6815 (+ (+ (- (- (* (* 2.0 l_0_4_16) l_0_4_17) ?x2435) ?x6812) ?x5892) ?x5898)))
 (let ((?x6824 (- (- (- (+ (+ (- (+ ?x6815 ?x5904) ?x6444) ?x6818) ?x6820) ?x5912) ?x5917) ?x5922)))
 (= (- (- (- (- (- (- ?x6824 ?x6334) ?x6339) ?x6342) ?x6828) ?x6830) ?x6832) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x5954 (* l_0_4_36 l_0_4_36)))
 (let ((?x6857 (* 2.0 ?x5954)))
 (let ((?x983 (* l_0_4_35 l_0_4_35)))
 (let ((?x6855 (* 2.0 ?x983)))
 (let ((?x982 (* l_0_4_34 l_0_4_34)))
 (let ((?x6853 (* 2.0 ?x982)))
 (let ((?x5906 (* 2.0 l_0_4_31)))
 (let ((?x6494 (* ?x5906 l_0_4_34)))
 (let ((?x2538 (- (* (* 2.0 l_0_4_16) l_0_4_19) (* (* 2.0 l_0_4_19) l_0_4_19))))
 (let ((?x6851 (- (- ?x2538 (* (* 2.0 l_0_4_20) l_0_4_20)) (* (* 2.0 l_0_4_21) l_0_4_21))))
 (= (+ (+ (+ (- ?x6851 ?x6494) ?x6853) ?x6855) ?x6857) 0.0))))))))))))
(assert
 (let ((?x5919 (* 4.0 l_0_4_36)))
 (let ((?x6500 (* ?x5919 l_0_4_43)))
 (let ((?x5914 (* 4.0 l_0_4_35)))
 (let ((?x6498 (* ?x5914 l_0_4_42)))
 (let ((?x5909 (* 4.0 l_0_4_34)))
 (let ((?x6496 (* ?x5909 l_0_4_41)))
 (let ((?x5906 (* 2.0 l_0_4_31)))
 (let ((?x6557 (* ?x5906 l_0_4_41)))
 (let ((?x5900 (* 4.0 l_0_4_21)))
 (let ((?x2091 (* ?x5900 l_0_4_28)))
 (let ((?x5894 (* 4.0 l_0_4_20)))
 (let ((?x2172 (* ?x5894 l_0_4_27)))
 (let ((?x5888 (* 4.0 l_0_4_19)))
 (let ((?x2174 (* ?x5888 l_0_4_26)))
 (let ((?x6873 (+ (- (* (* 2.0 l_0_4_16) l_0_4_26) ?x2174) (* 2.0 (* l_0_4_19 l_0_4_19)))))
 (let ((?x6877 (+ (- (+ (- ?x6873 ?x2172) (* 2.0 (* l_0_4_20 l_0_4_20))) ?x2091) (* 2.0 (* l_0_4_21 l_0_4_21)))))
 (let ((?x6882 (+ (- (+ (- ?x6877 ?x6557) ?x6496) (* (* 2.0 l_0_4_34) l_0_4_34)) ?x6498)))
 (let ((?x6887 (- (+ (- ?x6882 (* (* 2.0 l_0_4_35) l_0_4_35)) ?x6500) (* (* 2.0 l_0_4_36) l_0_4_36))))
 (= ?x6887 0.0))))))))))))))))))))
(assert
 (let ((?x5452 (* l_0_4_33 l_0_4_33)))
 (let ((?x5440 (* l_0_4_32 l_0_4_32)))
 (let ((?x6903 (- (- (+ (* l_0_4_17 l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x5440) ?x5452)))
 (= ?x6903 0.0)))))
(assert
 (let ((?x6608 (* 2.0 l_0_4_33)))
 (let ((?x6609 (* ?x6608 l_0_4_35)))
 (let ((?x6605 (* 2.0 l_0_4_32)))
 (let ((?x6606 (* ?x6605 l_0_4_34)))
 (let ((?x6602 (* 2.0 l_0_4_18)))
 (let ((?x6603 (* ?x6602 l_0_4_20)))
 (= (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_19) ?x6603) ?x6606) ?x6609) 0.0))))))))
(assert
 (let ((?x6608 (* 2.0 l_0_4_33)))
 (let ((?x6628 (* ?x6608 l_0_4_38)))
 (let ((?x6605 (* 2.0 l_0_4_32)))
 (let ((?x6626 (* ?x6605 l_0_4_37)))
 (let ((?x6602 (* 2.0 l_0_4_18)))
 (let ((?x6619 (* ?x6602 l_0_4_23)))
 (= (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_22) ?x6619) ?x6626) ?x6628) 0.0))))))))
(assert
 (let ((?x6608 (* 2.0 l_0_4_33)))
 (let ((?x6642 (* ?x6608 l_0_4_42)))
 (let ((?x6605 (* 2.0 l_0_4_32)))
 (let ((?x6640 (* ?x6605 l_0_4_41)))
 (let ((?x6602 (* 2.0 l_0_4_18)))
 (let ((?x2241 (* ?x6602 l_0_4_27)))
 (= (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_26) ?x2241) ?x6640) ?x6642) 0.0))))))))
(assert
 (let ((?x5954 (* l_0_4_36 l_0_4_36)))
 (let ((?x983 (* l_0_4_35 l_0_4_35)))
 (let ((?x982 (* l_0_4_34 l_0_4_34)))
 (let ((?x5903 (* l_0_4_21 l_0_4_21)))
 (let ((?x6926 (- (+ (+ (* l_0_4_19 l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x5903) ?x982)))
 (= (- (- ?x6926 ?x983) ?x5954) 0.0)))))))
(assert
 (let ((?x6707 (* 2.0 l_0_4_36)))
 (let ((?x6708 (* ?x6707 l_0_4_39)))
 (let ((?x6704 (* 2.0 l_0_4_35)))
 (let ((?x6705 (* ?x6704 l_0_4_38)))
 (let ((?x6701 (* 2.0 l_0_4_34)))
 (let ((?x6702 (* ?x6701 l_0_4_37)))
 (let ((?x6698 (* 2.0 l_0_4_21)))
 (let ((?x6699 (* ?x6698 l_0_4_24)))
 (let ((?x6695 (* 2.0 l_0_4_20)))
 (let ((?x6696 (* ?x6695 l_0_4_23)))
 (let ((?x6938 (- (- (+ (+ (* (* 2.0 l_0_4_19) l_0_4_22) ?x6696) ?x6699) ?x6702) ?x6705)))
 (= (- ?x6938 ?x6708) 0.0)))))))))))))
(assert
 (let ((?x6707 (* 2.0 l_0_4_36)))
 (let ((?x6737 (* ?x6707 l_0_4_43)))
 (let ((?x6704 (* 2.0 l_0_4_35)))
 (let ((?x6735 (* ?x6704 l_0_4_42)))
 (let ((?x6701 (* 2.0 l_0_4_34)))
 (let ((?x6733 (* ?x6701 l_0_4_41)))
 (let ((?x6698 (* 2.0 l_0_4_21)))
 (let ((?x6725 (* ?x6698 l_0_4_28)))
 (let ((?x6695 (* 2.0 l_0_4_20)))
 (let ((?x6723 (* ?x6695 l_0_4_27)))
 (let ((?x2859 (- (- (+ (+ (* (* 2.0 l_0_4_19) l_0_4_26) ?x6723) ?x6725) ?x6733) ?x6735)))
 (= (- ?x2859 ?x6737) 0.0)))))))))))))
(assert
 (let ((?x5711 (* l_0_4_40 l_0_4_40)))
 (let ((?x5705 (* l_0_4_39 l_0_4_39)))
 (let ((?x5699 (* l_0_4_38 l_0_4_38)))
 (let ((?x5693 (* l_0_4_37 l_0_4_37)))
 (let ((?x5650 (* l_0_4_25 l_0_4_25)))
 (let ((?x5647 (* l_0_4_24 l_0_4_24)))
 (let ((?x2899 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x5647) ?x5650)))
 (= (- (- (- (- ?x2899 ?x5693) ?x5699) ?x5705) ?x5711) 0.0)))))))))
(assert
 (let ((?x6118 (* 2.0 l_0_4_40)))
 (let ((?x6778 (* ?x6118 l_0_4_44)))
 (let ((?x6114 (* 2.0 l_0_4_39)))
 (let ((?x6776 (* ?x6114 l_0_4_43)))
 (let ((?x6110 (* 2.0 l_0_4_38)))
 (let ((?x6774 (* ?x6110 l_0_4_42)))
 (let ((?x6106 (* 2.0 l_0_4_37)))
 (let ((?x6772 (* ?x6106 l_0_4_41)))
 (let ((?x5980 (* 2.0 l_0_4_25)))
 (let ((?x6770 (* ?x5980 l_0_4_29)))
 (let ((?x5977 (* 2.0 l_0_4_24)))
 (let ((?x6768 (* ?x5977 l_0_4_28)))
 (let ((?x5974 (* 2.0 l_0_4_23)))
 (let ((?x6766 (* ?x5974 l_0_4_27)))
 (let ((?x6954 (- (+ (+ (+ (* (* 2.0 l_0_4_22) l_0_4_26) ?x6766) ?x6768) ?x6770) ?x6772)))
 (= (- (- (- ?x6954 ?x6774) ?x6776) ?x6778) 0.0)))))))))))))))))
(assert
 (let ((?x5057 (* 2.0 l_0_4_48)))
 (let ((?x6305 (* ?x5057 l_0_4_57)))
 (let ((?x5054 (* 2.0 l_0_4_47)))
 (let ((?x6303 (* ?x5054 l_0_4_56)))
 (let ((?x5408 (* 8.0 l_0_4_33)))
 (let ((?x5769 (* ?x5408 l_0_4_42)))
 (let ((?x5402 (* 8.0 l_0_4_32)))
 (let ((?x5766 (* ?x5402 l_0_4_41)))
 (let ((?x5395 (* l_0_4_18 l_0_4_18)))
 (let ((?x6969 (* 2.0 ?x5395)))
 (let ((?x5392 (* 8.0 l_0_4_18)))
 (let ((?x5751 (* ?x5392 l_0_4_27)))
 (let ((?x5389 (* l_0_4_17 l_0_4_17)))
 (let ((?x2969 (* 2.0 ?x5389)))
 (let ((?x5387 (* 8.0 l_0_4_17)))
 (let ((?x5748 (* ?x5387 l_0_4_26)))
 (let ((?x6973 (- (- (+ (+ (+ ?x5748 ?x2969) ?x5751) ?x6969) ?x5766) (* (* 2.0 l_0_4_32) l_0_4_32))))
 (let ((?x6978 (- (- (- (- ?x6973 ?x5769) (* (* 2.0 l_0_4_33) l_0_4_33)) ?x6303) ?x6305)))
 (let ((?x6982 (- (- ?x6978 (* (* 2.0 l_0_4_62) l_0_4_71)) (* (* 2.0 l_0_4_63) l_0_4_72))))
 (= ?x6982 0.0)))))))))))))))))))))
(assert
 (let ((?x5150 (* 2.0 l_0_4_51)))
 (let ((?x6366 (* ?x5150 l_0_4_58)))
 (let ((?x5147 (* 2.0 l_0_4_50)))
 (let ((?x6364 (* ?x5147 l_0_4_57)))
 (let ((?x5141 (* 2.0 l_0_4_49)))
 (let ((?x6362 (* ?x5141 l_0_4_56)))
 (let ((?x5518 (* 8.0 l_0_4_36)))
 (let ((?x6038 (* ?x5518 l_0_4_43)))
 (let ((?x5515 (* 8.0 l_0_4_35)))
 (let ((?x6035 (* ?x5515 l_0_4_42)))
 (let ((?x5512 (* 8.0 l_0_4_34)))
 (let ((?x6032 (* ?x5512 l_0_4_41)))
 (let ((?x5411 (* 4.0 l_0_4_33)))
 (let ((?x6448 (* ?x5411 l_0_4_42)))
 (let ((?x6820 (* ?x5411 l_0_4_35)))
 (let ((?x5405 (* 4.0 l_0_4_32)))
 (let ((?x6446 (* ?x5405 l_0_4_41)))
 (let ((?x6818 (* ?x5405 l_0_4_34)))
 (let ((?x5499 (* 8.0 l_0_4_21)))
 (let ((?x6017 (* ?x5499 l_0_4_28)))
 (let ((?x5496 (* 8.0 l_0_4_20)))
 (let ((?x6014 (* ?x5496 l_0_4_27)))
 (let ((?x5491 (* 8.0 l_0_4_19)))
 (let ((?x6011 (* ?x5491 l_0_4_26)))
 (let ((?x5488 (* 4.0 l_0_4_18)))
 (let ((?x6437 (* ?x5488 l_0_4_27)))
 (let ((?x6812 (* ?x5488 l_0_4_20)))
 (let ((?x5483 (* 4.0 l_0_4_17)))
 (let ((?x6435 (* ?x5483 l_0_4_26)))
 (let ((?x2435 (* ?x5483 l_0_4_19)))
 (let ((?x6999 (- (+ (+ (+ (- (+ (- ?x2435 ?x6435) ?x6812) ?x6437) ?x6011) ?x6014) ?x6017) ?x6818)))
 (let ((?x7006 (- (- (- (- (+ (- (+ ?x6999 ?x6446) ?x6820) ?x6448) ?x6032) ?x6035) ?x6038) ?x6362)))
 (let ((?x7012 (- (- (- (- ?x7006 ?x6364) ?x6366) (* (* 2.0 l_0_4_64) l_0_4_71)) (* (* 2.0 l_0_4_65) l_0_4_72))))
 (= (- ?x7012 (* (* 2.0 l_0_4_66) l_0_4_73)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5057 (* 2.0 l_0_4_48)))
 (let ((?x6266 (* ?x5057 l_0_4_50)))
 (let ((?x5054 (* 2.0 l_0_4_47)))
 (let ((?x6264 (* ?x5054 l_0_4_49)))
 (let ((?x5452 (* l_0_4_33 l_0_4_33)))
 (let ((?x2966 (* 2.0 ?x5452)))
 (let ((?x5408 (* 8.0 l_0_4_33)))
 (let ((?x5508 (* ?x5408 l_0_4_35)))
 (let ((?x5440 (* l_0_4_32 l_0_4_32)))
 (let ((?x6985 (* 2.0 ?x5440)))
 (let ((?x5402 (* 8.0 l_0_4_32)))
 (let ((?x5504 (* ?x5402 l_0_4_34)))
 (let ((?x5392 (* 8.0 l_0_4_18)))
 (let ((?x5486 (* ?x5392 l_0_4_20)))
 (let ((?x5387 (* 8.0 l_0_4_17)))
 (let ((?x5482 (* ?x5387 l_0_4_19)))
 (let ((?x3163 (- (+ (- ?x5482 (* (* 2.0 l_0_4_17) l_0_4_17)) ?x5486) (* (* 2.0 l_0_4_18) l_0_4_18))))
 (let ((?x7029 (- (- (- (+ (- (+ (- ?x3163 ?x5504) ?x6985) ?x5508) ?x2966) ?x6264) ?x6266) (* (* 2.0 l_0_4_62) l_0_4_64))))
 (= (- ?x7029 (* (* 2.0 l_0_4_63) l_0_4_65)) 0.0))))))))))))))))))))
(assert
 (let ((?x7052 (* l_0_4_63 l_0_4_63)))
 (let ((?x7050 (* l_0_4_62 l_0_4_62)))
 (let ((?x6237 (* l_0_4_48 l_0_4_48)))
 (let ((?x6234 (* l_0_4_47 l_0_4_47)))
 (let ((?x5411 (* 4.0 l_0_4_33)))
 (let ((?x5412 (* ?x5411 l_0_4_33)))
 (let ((?x5405 (* 4.0 l_0_4_32)))
 (let ((?x5406 (* ?x5405 l_0_4_32)))
 (let ((?x5395 (* l_0_4_18 l_0_4_18)))
 (let ((?x5396 (* 4.0 ?x5395)))
 (let ((?x5389 (* l_0_4_17 l_0_4_17)))
 (let ((?x5390 (* 4.0 ?x5389)))
 (let ((?x7053 (- (- (- (- (- (- (+ ?x5390 ?x5396) ?x5406) ?x5412) ?x6234) ?x6237) ?x7050) ?x7052)))
 (= ?x7053 0.0)))))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (>= l_0_4_76 0.0))
(assert
 (>= l_0_4_78 0.0))
(assert
 (>= l_0_4_81 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (let ((?x7138 (* l_0_5_90 l_0_5_90)))
 (let ((?x7136 (* l_0_5_89 l_0_5_89)))
 (let ((?x7134 (* l_0_5_88 l_0_5_88)))
 (let ((?x7132 (* l_0_5_87 l_0_5_87)))
 (let ((?x7130 (* l_0_5_86 l_0_5_86)))
 (let ((?x7113 (* l_0_5_31 l_0_5_31)))
 (let ((?x7110 (* 4.0 l_0_5_31)))
 (let ((?x7111 (* ?x7110 l_0_5_41)))
 (let ((?x7108 (* l_0_5_16 l_0_5_16)))
 (let ((?x7105 (* 4.0 l_0_5_16)))
 (let ((?x7106 (* ?x7105 l_0_5_26)))
 (let ((?x7088 (* l_0_5_105 l_0_5_105)))
 (let ((?x7086 (* l_0_5_104 l_0_5_104)))
 (let ((?x7084 (* l_0_5_103 l_0_5_103)))
 (let ((?x7085 (- (- (* (- l_0_5_101) l_0_5_101) (* l_0_5_102 l_0_5_102)) ?x7084)))
 (let ((?x7095 (+ (+ (- (- ?x7085 ?x7086) ?x7088) (* 1.0 (* l_0_5_11 l_0_5_11))) (* 1.0 (* l_0_5_12 l_0_5_12)))))
 (let ((?x7101 (+ (+ ?x7095 (* 1.0 (* l_0_5_13 l_0_5_13))) (* 1.0 (* l_0_5_14 l_0_5_14)))))
 (let ((?x7112 (- (- (+ (+ ?x7101 (* 1.0 (* l_0_5_15 l_0_5_15))) ?x7106) ?x7108) ?x7111)))
 (let ((?x7120 (+ (+ (+ ?x7112 ?x7113) (* 1.0 (* l_0_5_56 l_0_5_56))) (* 1.0 (* l_0_5_57 l_0_5_57)))))
 (let ((?x7126 (+ (+ ?x7120 (* 1.0 (* l_0_5_58 l_0_5_58))) (* 1.0 (* l_0_5_59 l_0_5_59)))))
 (let ((?x7135 (- (- (- (+ ?x7126 (* 1.0 (* l_0_5_60 l_0_5_60))) ?x7130) ?x7132) ?x7134)))
 (= (+ (- (- ?x7135 ?x7136) ?x7138) 1.0) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7183 (* l_0_5_91 l_0_5_91)))
 (let ((?x7181 (* l_0_5_76 l_0_5_76)))
 (let ((?x7177 (+ (+ (* (- _a_0_) _a_0_) (* 2.0 _a_0_)) (* 1.0 (* l_0_5_1 l_0_5_1)))))
 (= (- (- (+ ?x7177 (* 1.0 (* l_0_5_46 l_0_5_46))) ?x7181) ?x7183) 0.0)))))
(assert
 (let ((?x7206 (* 2.0 l_0_5_46)))
 (let ((?x7207 (* ?x7206 l_0_5_49)))
 (let ((?x7113 (* l_0_5_31 l_0_5_31)))
 (let ((?x7204 (* 2.0 ?x7113)))
 (let ((?x7200 (+ (+ (* (* (- 2.0) _a_0_) _a_1_) (* 2.0 _a_1_)) (* (* 2.0 l_0_5_1) l_0_5_4))))
 (let ((?x7211 (- (+ (+ (- ?x7200 (* (* 2.0 l_0_5_16) l_0_5_16)) ?x7204) ?x7207) (* (* 2.0 l_0_5_76) l_0_5_79))))
 (= (+ (- ?x7211 (* (* 2.0 l_0_5_91) l_0_5_94)) 4.0) 0.0))))))))
(assert
 (let ((?x7272 (* l_0_5_96 l_0_5_96)))
 (let ((?x7270 (* l_0_5_95 l_0_5_95)))
 (let ((?x7268 (* l_0_5_94 l_0_5_94)))
 (let ((?x7266 (* l_0_5_81 l_0_5_81)))
 (let ((?x7264 (* l_0_5_80 l_0_5_80)))
 (let ((?x7262 (* l_0_5_79 l_0_5_79)))
 (let ((?x7113 (* l_0_5_31 l_0_5_31)))
 (let ((?x7110 (* 4.0 l_0_5_31)))
 (let ((?x7241 (* ?x7110 l_0_5_34)))
 (let ((?x7108 (* l_0_5_16 l_0_5_16)))
 (let ((?x7240 (+ (- (* (- _a_1_) _a_1_) (* (* 4.0 l_0_5_16) l_0_5_19)) ?x7108)))
 (let ((?x7249 (+ (+ (- (+ ?x7240 ?x7241) ?x7113) (* 1.0 (* l_0_5_4 l_0_5_4))) (* 1.0 (* l_0_5_49 l_0_5_49)))))
 (let ((?x7255 (+ (+ ?x7249 (* 1.0 (* l_0_5_5 l_0_5_5))) (* 1.0 (* l_0_5_50 l_0_5_50)))))
 (let ((?x7261 (+ (+ ?x7255 (* 1.0 (* l_0_5_51 l_0_5_51))) (* 1.0 (* l_0_5_6 l_0_5_6)))))
 (= (- (- (- (- (- (- ?x7261 ?x7262) ?x7264) ?x7266) ?x7268) ?x7270) ?x7272) 0.0))))))))))))))))
(assert
 (let ((?x7206 (* 2.0 l_0_5_46)))
 (let ((?x7310 (* ?x7206 l_0_5_56)))
 (let ((?x7305 (- (* (* 2.0 l_0_5_1) l_0_5_11) (* (* 2.0 l_0_5_101) l_0_5_91))))
 (let ((?x7309 (- (+ ?x7305 (* 2.0 (* l_0_5_16 l_0_5_16))) (* (* 2.0 l_0_5_31) l_0_5_31))))
 (= (- (- (+ ?x7309 ?x7310) (* (* 2.0 l_0_5_76) l_0_5_86)) 2.0) 0.0))))))
(assert
 (let ((?x7206 (* 2.0 l_0_5_46)))
 (let ((?x7344 (* ?x7206 l_0_5_52)))
 (let ((?x7110 (* 4.0 l_0_5_31)))
 (let ((?x7342 (* ?x7110 l_0_5_31)))
 (let ((?x7108 (* l_0_5_16 l_0_5_16)))
 (let ((?x7340 (* 4.0 ?x7108)))
 (let ((?x7341 (+ (- (* (* 2.0 l_0_5_1) l_0_5_7) (* l_0_5_1 l_0_5_1)) ?x7340)))
 (let ((?x7349 (- (- (+ (- ?x7341 ?x7342) ?x7344) (* (* 2.0 l_0_5_76) l_0_5_82)) (* (* 2.0 l_0_5_91) l_0_5_97))))
 (= (- ?x7349 4.0) 0.0))))))))))
(assert
 (let ((?x7379 (* l_0_5_61 l_0_5_61)))
 (let ((?x7178 (* l_0_5_46 l_0_5_46)))
 (let ((?x7206 (* 2.0 l_0_5_46)))
 (let ((?x7376 (* ?x7206 l_0_5_47)))
 (let ((?x7110 (* 4.0 l_0_5_31)))
 (let ((?x7342 (* ?x7110 l_0_5_31)))
 (let ((?x7108 (* l_0_5_16 l_0_5_16)))
 (let ((?x7340 (* 4.0 ?x7108)))
 (let ((?x7378 (- (+ (- (+ (* (* 2.0 l_0_5_1) l_0_5_2) ?x7340) ?x7342) ?x7376) ?x7178)))
 (let ((?x7384 (- (- (- ?x7378 ?x7379) (* (* 2.0 l_0_5_76) l_0_5_77)) (* (* 2.0 l_0_5_91) l_0_5_92))))
 (= (- ?x7384 4.0) 0.0))))))))))))
(assert
 (let ((?x7421 (* 2.0 l_0_5_48)))
 (let ((?x7422 (* ?x7421 l_0_5_53)))
 (let ((?x7418 (* 2.0 l_0_5_47)))
 (let ((?x7419 (* ?x7418 l_0_5_52)))
 (let ((?x7206 (* 2.0 l_0_5_46)))
 (let ((?x7344 (* ?x7206 l_0_5_52)))
 (let ((?x7412 (* 8.0 l_0_5_31)))
 (let ((?x7415 (* ?x7412 l_0_5_37)))
 (let ((?x7413 (* ?x7412 l_0_5_32)))
 (let ((?x7409 (* 2.0 l_0_5_3)))
 (let ((?x7410 (* ?x7409 l_0_5_8)))
 (let ((?x7406 (* 2.0 l_0_5_2)))
 (let ((?x7407 (* ?x7406 l_0_5_7)))
 (let ((?x3509 (* 8.0 l_0_5_16)))
 (let ((?x7404 (* ?x3509 l_0_5_22)))
 (let ((?x7408 (+ (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) (* ?x3509 l_0_5_17)) ?x7404) ?x7407)))
 (let ((?x7426 (- (+ (+ (- (- (- (+ ?x7408 ?x7410) ?x7413) ?x7415) ?x7344) ?x7419) ?x7422) (* (* 2.0 l_0_5_61) l_0_5_67))))
 (let ((?x7432 (- (- ?x7426 (* (* 2.0 l_0_5_77) l_0_5_82)) (* (* 2.0 l_0_5_78) l_0_5_83))))
 (let ((?x7438 (- (- ?x7432 (* (* 2.0 l_0_5_92) l_0_5_97)) (* (* 2.0 l_0_5_93) l_0_5_98))))
 (= ?x7438 0.0)))))))))))))))))))))
(assert
 (let ((?x7502 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x7498 (* 2.0 l_0_5_51)))
 (let ((?x7499 (* ?x7498 l_0_5_54)))
 (let ((?x7495 (* 2.0 l_0_5_50)))
 (let ((?x7496 (* ?x7495 l_0_5_53)))
 (let ((?x7493 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x7489 (* 2.0 l_0_5_49)))
 (let ((?x7490 (* ?x7489 l_0_5_52)))
 (let ((?x7487 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x7110 (* 4.0 l_0_5_31)))
 (let ((?x7484 (* ?x7110 l_0_5_37)))
 (let ((?x7412 (* 8.0 l_0_5_31)))
 (let ((?x7482 (* ?x7412 l_0_5_34)))
 (let ((?x7105 (* 4.0 l_0_5_16)))
 (let ((?x7480 (* ?x7105 l_0_5_22)))
 (let ((?x3509 (* 8.0 l_0_5_16)))
 (let ((?x3608 (* ?x3509 l_0_5_19)))
 (let ((?x7485 (+ (- (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x3608) ?x7480) ?x7482) ?x7484)))
 (let ((?x7506 (- (+ (+ (+ (+ (+ (+ ?x7485 ?x7487) ?x7490) ?x7493) ?x7496) ?x7499) ?x7502) (* (* 2.0 l_0_5_79) l_0_5_82))))
 (let ((?x7512 (- (- ?x7506 (* (* 2.0 l_0_5_80) l_0_5_83)) (* (* 2.0 l_0_5_81) l_0_5_84))))
 (let ((?x7518 (- (- ?x7512 (* (* 2.0 l_0_5_94) l_0_5_97)) (* (* 2.0 l_0_5_95) l_0_5_98))))
 (= (- ?x7518 (* (* 2.0 l_0_5_96) l_0_5_99)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7588 (* l_0_5_99 l_0_5_99)))
 (let ((?x7586 (* l_0_5_98 l_0_5_98)))
 (let ((?x7584 (* l_0_5_97 l_0_5_97)))
 (let ((?x7579 (* l_0_5_85 l_0_5_85)))
 (let ((?x7577 (* l_0_5_84 l_0_5_84)))
 (let ((?x7575 (* l_0_5_83 l_0_5_83)))
 (let ((?x7573 (* l_0_5_82 l_0_5_82)))
 (let ((?x7412 (* 8.0 l_0_5_31)))
 (let ((?x7415 (* ?x7412 l_0_5_37)))
 (let ((?x3509 (* 8.0 l_0_5_16)))
 (let ((?x7404 (* ?x3509 l_0_5_22)))
 (let ((?x7551 (* l_0_5_100 l_0_5_100)))
 (let ((?x3694 (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) (* 1.0 (* l_0_5_10 l_0_5_10)))))
 (let ((?x7557 (+ (- (+ (- ?x3694 ?x7551) ?x7404) ?x7415) (* 1.0 (* l_0_5_52 l_0_5_52)))))
 (let ((?x7563 (+ (+ ?x7557 (* 1.0 (* l_0_5_53 l_0_5_53))) (* 1.0 (* l_0_5_54 l_0_5_54)))))
 (let ((?x7569 (+ (+ ?x7563 (* 1.0 (* l_0_5_55 l_0_5_55))) (* 1.0 (* l_0_5_7 l_0_5_7)))))
 (let ((?x7578 (- (- (- (+ ?x7569 (* 1.0 (* l_0_5_8 l_0_5_8))) ?x7573) ?x7575) ?x7577)))
 (let ((?x7587 (- (- (+ (- ?x7578 ?x7579) (* 1.0 (* l_0_5_9 l_0_5_9))) ?x7584) ?x7586)))
 (= (- ?x7587 ?x7588) 0.0))))))))))))))))))))
(assert
 (let ((?x7658 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x7655 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x7652 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x7649 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x7412 (* 8.0 l_0_5_31)))
 (let ((?x7646 (* ?x7412 l_0_5_41)))
 (let ((?x7110 (* 4.0 l_0_5_31)))
 (let ((?x7484 (* ?x7110 l_0_5_37)))
 (let ((?x3509 (* 8.0 l_0_5_16)))
 (let ((?x7643 (* ?x3509 l_0_5_26)))
 (let ((?x7105 (* 4.0 l_0_5_16)))
 (let ((?x7480 (* ?x7105 l_0_5_22)))
 (let ((?x7639 (* 2.0 l_0_5_13)))
 (let ((?x7640 (* ?x7639 l_0_5_9)))
 (let ((?x7636 (* 2.0 l_0_5_12)))
 (let ((?x7637 (* ?x7636 l_0_5_8)))
 (let ((?x7633 (* 2.0 l_0_5_11)))
 (let ((?x7634 (* ?x7633 l_0_5_7)))
 (let ((?x7621 (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) (* (* 2.0 l_0_5_10) l_0_5_14))))
 (let ((?x7626 (- (- ?x7621 (* (* 2.0 l_0_5_100) l_0_5_104)) (* (* 2.0 l_0_5_101) l_0_5_97))))
 (let ((?x7632 (- (- ?x7626 (* (* 2.0 l_0_5_102) l_0_5_98)) (* (* 2.0 l_0_5_103) l_0_5_99))))
 (let ((?x7647 (- (- (+ (+ (+ (+ (+ ?x7632 ?x7634) ?x7637) ?x7640) ?x7480) ?x7643) ?x7484) ?x7646)))
 (let ((?x7662 (- (+ (+ (+ (+ ?x7647 ?x7649) ?x7652) ?x7655) ?x7658) (* (* 2.0 l_0_5_82) l_0_5_86))))
 (let ((?x7668 (- (- ?x7662 (* (* 2.0 l_0_5_83) l_0_5_87)) (* (* 2.0 l_0_5_84) l_0_5_88))))
 (= (- ?x7668 (* (* 2.0 l_0_5_85) l_0_5_89)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7421 (* 2.0 l_0_5_48)))
 (let ((?x7422 (* ?x7421 l_0_5_53)))
 (let ((?x7418 (* 2.0 l_0_5_47)))
 (let ((?x7419 (* ?x7418 l_0_5_52)))
 (let ((?x7750 (* 4.0 l_0_5_33)))
 (let ((?x7751 (* ?x7750 l_0_5_33)))
 (let ((?x7747 (* 8.0 l_0_5_33)))
 (let ((?x7748 (* ?x7747 l_0_5_38)))
 (let ((?x7744 (* 4.0 l_0_5_32)))
 (let ((?x7745 (* ?x7744 l_0_5_32)))
 (let ((?x7741 (* 8.0 l_0_5_32)))
 (let ((?x7742 (* ?x7741 l_0_5_37)))
 (let ((?x7739 (* l_0_5_3 l_0_5_3)))
 (let ((?x7737 (* l_0_5_2 l_0_5_2)))
 (let ((?x7734 (* l_0_5_18 l_0_5_18)))
 (let ((?x7735 (* 4.0 ?x7734)))
 (let ((?x7731 (* 8.0 l_0_5_18)))
 (let ((?x7732 (* ?x7731 l_0_5_23)))
 (let ((?x7728 (* l_0_5_17 l_0_5_17)))
 (let ((?x7729 (* 4.0 ?x7728)))
 (let ((?x7726 (* 8.0 l_0_5_17)))
 (let ((?x7727 (* ?x7726 l_0_5_22)))
 (let ((?x7746 (- (- (- (- (+ (+ (+ ?x7727 ?x7729) ?x7732) ?x7735) ?x7737) ?x7739) ?x7742) ?x7745)))
 (let ((?x7757 (- (- (- (- (- ?x7746 ?x7748) ?x7751) ?x7419) ?x7422) (* (* 2.0 l_0_5_62) l_0_5_67))))
 (= (- ?x7757 (* (* 2.0 l_0_5_63) l_0_5_68)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7498 (* 2.0 l_0_5_51)))
 (let ((?x7499 (* ?x7498 l_0_5_54)))
 (let ((?x7495 (* 2.0 l_0_5_50)))
 (let ((?x7496 (* ?x7495 l_0_5_53)))
 (let ((?x7489 (* 2.0 l_0_5_49)))
 (let ((?x7490 (* ?x7489 l_0_5_52)))
 (let ((?x7823 (* 8.0 l_0_5_36)))
 (let ((?x7824 (* ?x7823 l_0_5_39)))
 (let ((?x7820 (* 8.0 l_0_5_35)))
 (let ((?x7821 (* ?x7820 l_0_5_38)))
 (let ((?x7817 (* 8.0 l_0_5_34)))
 (let ((?x7818 (* ?x7817 l_0_5_37)))
 (let ((?x7750 (* 4.0 l_0_5_33)))
 (let ((?x7815 (* ?x7750 l_0_5_38)))
 (let ((?x7747 (* 8.0 l_0_5_33)))
 (let ((?x7813 (* ?x7747 l_0_5_35)))
 (let ((?x7744 (* 4.0 l_0_5_32)))
 (let ((?x7811 (* ?x7744 l_0_5_37)))
 (let ((?x7741 (* 8.0 l_0_5_32)))
 (let ((?x7809 (* ?x7741 l_0_5_34)))
 (let ((?x7409 (* 2.0 l_0_5_3)))
 (let ((?x7807 (* ?x7409 l_0_5_5)))
 (let ((?x7804 (* 8.0 l_0_5_21)))
 (let ((?x7805 (* ?x7804 l_0_5_24)))
 (let ((?x7801 (* 8.0 l_0_5_20)))
 (let ((?x7802 (* ?x7801 l_0_5_23)))
 (let ((?x7406 (* 2.0 l_0_5_2)))
 (let ((?x7799 (* ?x7406 l_0_5_4)))
 (let ((?x7796 (* 8.0 l_0_5_19)))
 (let ((?x7797 (* ?x7796 l_0_5_22)))
 (let ((?x7793 (* 4.0 l_0_5_18)))
 (let ((?x7794 (* ?x7793 l_0_5_23)))
 (let ((?x7731 (* 8.0 l_0_5_18)))
 (let ((?x7791 (* ?x7731 l_0_5_20)))
 (let ((?x7788 (* 4.0 l_0_5_17)))
 (let ((?x7789 (* ?x7788 l_0_5_22)))
 (let ((?x7726 (* 8.0 l_0_5_17)))
 (let ((?x7787 (* ?x7726 l_0_5_19)))
 (let ((?x7806 (+ (+ (- (+ (- (+ (- ?x7787 ?x7789) ?x7791) ?x7794) ?x7797) ?x7799) ?x7802) ?x7805)))
 (let ((?x7822 (- (- (+ (- (+ (- (- ?x7806 ?x7807) ?x7809) ?x7811) ?x7813) ?x7815) ?x7818) ?x7821)))
 (let ((?x7831 (- (- (- (- (- ?x7822 ?x7824) ?x7490) ?x7496) ?x7499) (* (* 2.0 l_0_5_64) l_0_5_67))))
 (let ((?x7837 (- (- ?x7831 (* (* 2.0 l_0_5_65) l_0_5_68)) (* (* 2.0 l_0_5_66) l_0_5_69))))
 (= ?x7837 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7923 (* l_0_5_70 l_0_5_70)))
 (let ((?x7921 (* l_0_5_69 l_0_5_69)))
 (let ((?x7919 (* l_0_5_68 l_0_5_68)))
 (let ((?x7917 (* l_0_5_67 l_0_5_67)))
 (let ((?x7564 (* l_0_5_55 l_0_5_55)))
 (let ((?x7561 (* l_0_5_54 l_0_5_54)))
 (let ((?x7558 (* l_0_5_53 l_0_5_53)))
 (let ((?x7555 (* l_0_5_52 l_0_5_52)))
 (let ((?x7910 (* 4.0 l_0_5_40)))
 (let ((?x7911 (* ?x7910 l_0_5_40)))
 (let ((?x7907 (* 4.0 l_0_5_39)))
 (let ((?x7908 (* ?x7907 l_0_5_39)))
 (let ((?x7904 (* 4.0 l_0_5_38)))
 (let ((?x7905 (* ?x7904 l_0_5_38)))
 (let ((?x7901 (* 4.0 l_0_5_37)))
 (let ((?x7902 (* ?x7901 l_0_5_37)))
 (let ((?x7747 (* 8.0 l_0_5_33)))
 (let ((?x7748 (* ?x7747 l_0_5_38)))
 (let ((?x7741 (* 8.0 l_0_5_32)))
 (let ((?x7742 (* ?x7741 l_0_5_37)))
 (let ((?x7409 (* 2.0 l_0_5_3)))
 (let ((?x7410 (* ?x7409 l_0_5_8)))
 (let ((?x7895 (* l_0_5_25 l_0_5_25)))
 (let ((?x7896 (* 4.0 ?x7895)))
 (let ((?x7892 (* l_0_5_24 l_0_5_24)))
 (let ((?x7893 (* 4.0 ?x7892)))
 (let ((?x7889 (* l_0_5_23 l_0_5_23)))
 (let ((?x7890 (* 4.0 ?x7889)))
 (let ((?x7886 (* l_0_5_22 l_0_5_22)))
 (let ((?x7887 (* 4.0 ?x7886)))
 (let ((?x7406 (* 2.0 l_0_5_2)))
 (let ((?x7407 (* ?x7406 l_0_5_7)))
 (let ((?x7731 (* 8.0 l_0_5_18)))
 (let ((?x7732 (* ?x7731 l_0_5_23)))
 (let ((?x7726 (* 8.0 l_0_5_17)))
 (let ((?x7727 (* ?x7726 l_0_5_22)))
 (let ((?x7898 (- (+ (+ (+ (+ (- (+ ?x7727 ?x7732) ?x7407) ?x7887) ?x7890) ?x7893) ?x7896) ?x7410)))
 (let ((?x7913 (- (- (- (- (- (- (- ?x7898 ?x7742) ?x7748) ?x7902) ?x7905) ?x7908) ?x7911) ?x7555)))
 (let ((?x7924 (- (- (- (- (- (- (- ?x7913 ?x7558) ?x7561) ?x7564) ?x7917) ?x7919) ?x7921) ?x7923)))
 (= ?x7924 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7658 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x7655 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x7652 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x7649 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x7981 (* (* 8.0 l_0_5_40) l_0_5_44)))
 (let ((?x7978 (* (* 8.0 l_0_5_39) l_0_5_43)))
 (let ((?x7975 (* (* 8.0 l_0_5_38) l_0_5_42)))
 (let ((?x7972 (* (* 8.0 l_0_5_37) l_0_5_41)))
 (let ((?x7747 (* 8.0 l_0_5_33)))
 (let ((?x7969 (* ?x7747 l_0_5_42)))
 (let ((?x7750 (* 4.0 l_0_5_33)))
 (let ((?x7815 (* ?x7750 l_0_5_38)))
 (let ((?x7741 (* 8.0 l_0_5_32)))
 (let ((?x7966 (* ?x7741 l_0_5_41)))
 (let ((?x7744 (* 4.0 l_0_5_32)))
 (let ((?x7811 (* ?x7744 l_0_5_37)))
 (let ((?x7963 (* (* 8.0 l_0_5_25) l_0_5_29)))
 (let ((?x7960 (* (* 8.0 l_0_5_24) l_0_5_28)))
 (let ((?x7957 (* (* 8.0 l_0_5_23) l_0_5_27)))
 (let ((?x7954 (* (* 8.0 l_0_5_22) l_0_5_26)))
 (let ((?x7731 (* 8.0 l_0_5_18)))
 (let ((?x7951 (* ?x7731 l_0_5_27)))
 (let ((?x7793 (* 4.0 l_0_5_18)))
 (let ((?x7794 (* ?x7793 l_0_5_23)))
 (let ((?x7726 (* 8.0 l_0_5_17)))
 (let ((?x7948 (* ?x7726 l_0_5_26)))
 (let ((?x7788 (* 4.0 l_0_5_17)))
 (let ((?x7789 (* ?x7788 l_0_5_22)))
 (let ((?x7636 (* 2.0 l_0_5_12)))
 (let ((?x4133 (* ?x7636 l_0_5_3)))
 (let ((?x7950 (+ (+ (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x4133) ?x7789) ?x7948) ?x7794)))
 (let ((?x7967 (- (- (+ (+ (+ (+ (+ ?x7950 ?x7951) ?x7954) ?x7957) ?x7960) ?x7963) ?x7811) ?x7966)))
 (let ((?x7983 (- (- (- (- (- (- (- ?x7967 ?x7815) ?x7969) ?x7972) ?x7975) ?x7978) ?x7981) ?x7649)))
 (let ((?x7989 (- (- (- (- ?x7983 ?x7652) ?x7655) ?x7658) (* (* 2.0 l_0_5_67) l_0_5_71))))
 (let ((?x7995 (- (- ?x7989 (* (* 2.0 l_0_5_68) l_0_5_72)) (* (* 2.0 l_0_5_69) l_0_5_73))))
 (= (- ?x7995 (* (* 2.0 l_0_5_70) l_0_5_74)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7259 (* l_0_5_6 l_0_5_6)))
 (let ((?x7250 (* l_0_5_5 l_0_5_5)))
 (let ((?x7244 (* l_0_5_4 l_0_5_4)))
 (let ((?x8040 (* 4.0 l_0_5_36)))
 (let ((?x8043 (* ?x8040 l_0_5_36)))
 (let ((?x8041 (* ?x8040 l_0_5_39)))
 (let ((?x8035 (* 4.0 l_0_5_35)))
 (let ((?x8038 (* ?x8035 l_0_5_35)))
 (let ((?x8036 (* ?x8035 l_0_5_38)))
 (let ((?x8030 (* 4.0 l_0_5_34)))
 (let ((?x8033 (* ?x8030 l_0_5_34)))
 (let ((?x8031 (* ?x8030 l_0_5_37)))
 (let ((?x7307 (* 2.0 l_0_5_31)))
 (let ((?x4281 (* ?x7307 l_0_5_37)))
 (let ((?x4316 (* l_0_5_21 l_0_5_21)))
 (let ((?x4279 (* 4.0 ?x4316)))
 (let ((?x4317 (* 4.0 l_0_5_21)))
 (let ((?x4318 (* ?x4317 l_0_5_24)))
 (let ((?x4356 (* l_0_5_20 l_0_5_20)))
 (let ((?x4353 (* 4.0 ?x4356)))
 (let ((?x4385 (* 4.0 l_0_5_20)))
 (let ((?x4380 (* ?x4385 l_0_5_23)))
 (let ((?x4395 (* l_0_5_19 l_0_5_19)))
 (let ((?x4390 (* 4.0 ?x4395)))
 (let ((?x4402 (* 4.0 l_0_5_19)))
 (let ((?x4399 (* ?x4402 l_0_5_22)))
 (let ((?x7201 (* 2.0 l_0_5_16)))
 (let ((?x4439 (* ?x7201 l_0_5_22)))
 (let ((?x8029 (- (+ (- (+ (- (+ (- ?x4439 ?x4399) ?x4390) ?x4380) ?x4353) ?x4318) ?x4279) ?x4281)))
 (let ((?x8045 (- (- (+ (- (+ (- (+ ?x8029 ?x8031) ?x8033) ?x8036) ?x8038) ?x8041) ?x8043) ?x7244)))
 (= (- (- ?x8045 ?x7250) ?x7259) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x7502 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x7493 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x4130 (* l_0_5_40 l_0_5_40)))
 (let ((?x8110 (* 2.0 ?x4130)))
 (let ((?x7487 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x4128 (* l_0_5_39 l_0_5_39)))
 (let ((?x8107 (* 2.0 ?x4128)))
 (let ((?x4126 (* l_0_5_38 l_0_5_38)))
 (let ((?x8105 (* 2.0 ?x4126)))
 (let ((?x4124 (* l_0_5_37 l_0_5_37)))
 (let ((?x8103 (* 2.0 ?x4124)))
 (let ((?x7823 (* 8.0 l_0_5_36)))
 (let ((?x7824 (* ?x7823 l_0_5_39)))
 (let ((?x7820 (* 8.0 l_0_5_35)))
 (let ((?x7821 (* ?x7820 l_0_5_38)))
 (let ((?x7817 (* 8.0 l_0_5_34)))
 (let ((?x7818 (* ?x7817 l_0_5_37)))
 (let ((?x7804 (* 8.0 l_0_5_21)))
 (let ((?x7805 (* ?x7804 l_0_5_24)))
 (let ((?x7801 (* 8.0 l_0_5_20)))
 (let ((?x7802 (* ?x7801 l_0_5_23)))
 (let ((?x7796 (* 8.0 l_0_5_19)))
 (let ((?x7797 (* ?x7796 l_0_5_22)))
 (let ((?x8093 (- (- (+ (+ ?x7797 ?x7802) ?x7805) (* (* 2.0 l_0_5_22) l_0_5_22)) (* (* 2.0 l_0_5_23) l_0_5_23))))
 (let ((?x8099 (- (- ?x8093 (* (* 2.0 l_0_5_24) l_0_5_24)) (* (* 2.0 l_0_5_25) l_0_5_25))))
 (let ((?x8109 (- (+ (+ (+ (- (- (- ?x8099 ?x7818) ?x7821) ?x7824) ?x8103) ?x8105) ?x8107) ?x7487)))
 (= (- (- (+ ?x8109 ?x8110) ?x7493) ?x7502) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x7910 (* 4.0 l_0_5_40)))
 (let ((?x8167 (* ?x7910 l_0_5_44)))
 (let ((?x7907 (* 4.0 l_0_5_39)))
 (let ((?x8165 (* ?x7907 l_0_5_43)))
 (let ((?x7904 (* 4.0 l_0_5_38)))
 (let ((?x8163 (* ?x7904 l_0_5_42)))
 (let ((?x7901 (* 4.0 l_0_5_37)))
 (let ((?x8161 (* ?x7901 l_0_5_41)))
 (let ((?x7823 (* 8.0 l_0_5_36)))
 (let ((?x8159 (* ?x7823 l_0_5_43)))
 (let ((?x8040 (* 4.0 l_0_5_36)))
 (let ((?x8041 (* ?x8040 l_0_5_39)))
 (let ((?x7820 (* 8.0 l_0_5_35)))
 (let ((?x8156 (* ?x7820 l_0_5_42)))
 (let ((?x8035 (* 4.0 l_0_5_35)))
 (let ((?x8036 (* ?x8035 l_0_5_38)))
 (let ((?x7817 (* 8.0 l_0_5_34)))
 (let ((?x8153 (* ?x7817 l_0_5_41)))
 (let ((?x8030 (* 4.0 l_0_5_34)))
 (let ((?x8031 (* ?x8030 l_0_5_37)))
 (let ((?x8150 (* (* 4.0 l_0_5_25) l_0_5_29)))
 (let ((?x8147 (* (* 4.0 l_0_5_24) l_0_5_28)))
 (let ((?x8144 (* (* 4.0 l_0_5_23) l_0_5_27)))
 (let ((?x8141 (* (* 4.0 l_0_5_22) l_0_5_26)))
 (let ((?x7804 (* 8.0 l_0_5_21)))
 (let ((?x8138 (* ?x7804 l_0_5_28)))
 (let ((?x4317 (* 4.0 l_0_5_21)))
 (let ((?x4318 (* ?x4317 l_0_5_24)))
 (let ((?x7801 (* 8.0 l_0_5_20)))
 (let ((?x8135 (* ?x7801 l_0_5_27)))
 (let ((?x4385 (* 4.0 l_0_5_20)))
 (let ((?x4380 (* ?x4385 l_0_5_23)))
 (let ((?x7796 (* 8.0 l_0_5_19)))
 (let ((?x8132 (* ?x7796 l_0_5_26)))
 (let ((?x4402 (* 4.0 l_0_5_19)))
 (let ((?x4399 (* ?x4402 l_0_5_22)))
 (let ((?x7639 (* 2.0 l_0_5_13)))
 (let ((?x8129 (* ?x7639 l_0_5_6)))
 (let ((?x7636 (* 2.0 l_0_5_12)))
 (let ((?x8127 (* ?x7636 l_0_5_5)))
 (let ((?x8133 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x8127) ?x8129) ?x4399) ?x8132)))
 (let ((?x8148 (- (- (- (+ (+ (+ (+ ?x8133 ?x4380) ?x8135) ?x4318) ?x8138) ?x8141) ?x8144) ?x8147)))
 (let ((?x8160 (- (- (- (- (- (- (- ?x8148 ?x8150) ?x8031) ?x8153) ?x8036) ?x8156) ?x8041) ?x8159)))
 (= (+ (+ (+ (+ ?x8160 ?x8161) ?x8163) ?x8165) ?x8167) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7581 (* l_0_5_9 l_0_5_9)))
 (let ((?x7570 (* l_0_5_8 l_0_5_8)))
 (let ((?x7567 (* l_0_5_7 l_0_5_7)))
 (let ((?x7910 (* 4.0 l_0_5_40)))
 (let ((?x7911 (* ?x7910 l_0_5_40)))
 (let ((?x7907 (* 4.0 l_0_5_39)))
 (let ((?x7908 (* ?x7907 l_0_5_39)))
 (let ((?x7904 (* 4.0 l_0_5_38)))
 (let ((?x7905 (* ?x7904 l_0_5_38)))
 (let ((?x7901 (* 4.0 l_0_5_37)))
 (let ((?x7902 (* ?x7901 l_0_5_37)))
 (let ((?x7895 (* l_0_5_25 l_0_5_25)))
 (let ((?x7896 (* 4.0 ?x7895)))
 (let ((?x7892 (* l_0_5_24 l_0_5_24)))
 (let ((?x7893 (* 4.0 ?x7892)))
 (let ((?x7889 (* l_0_5_23 l_0_5_23)))
 (let ((?x7890 (* 4.0 ?x7889)))
 (let ((?x8195 (+ (+ (* (- l_0_5_10) l_0_5_10) (* 4.0 (* l_0_5_22 l_0_5_22))) ?x7890)))
 (let ((?x8202 (- (- (- (- (- (+ (+ ?x8195 ?x7893) ?x7896) ?x7902) ?x7905) ?x7908) ?x7911) ?x7567)))
 (= (- (- ?x8202 ?x7570) ?x7581) 0.0)))))))))))))))))))))
(assert
 (let ((?x7981 (* (* 8.0 l_0_5_40) l_0_5_44)))
 (let ((?x7978 (* (* 8.0 l_0_5_39) l_0_5_43)))
 (let ((?x7975 (* (* 8.0 l_0_5_38) l_0_5_42)))
 (let ((?x7972 (* (* 8.0 l_0_5_37) l_0_5_41)))
 (let ((?x7895 (* l_0_5_25 l_0_5_25)))
 (let ((?x4638 (* 2.0 ?x7895)))
 (let ((?x7963 (* (* 8.0 l_0_5_25) l_0_5_29)))
 (let ((?x7892 (* l_0_5_24 l_0_5_24)))
 (let ((?x4632 (* 2.0 ?x7892)))
 (let ((?x7960 (* (* 8.0 l_0_5_24) l_0_5_28)))
 (let ((?x7889 (* l_0_5_23 l_0_5_23)))
 (let ((?x4628 (* 2.0 ?x7889)))
 (let ((?x7957 (* (* 8.0 l_0_5_23) l_0_5_27)))
 (let ((?x7886 (* l_0_5_22 l_0_5_22)))
 (let ((?x8116 (* 2.0 ?x7886)))
 (let ((?x7954 (* (* 8.0 l_0_5_22) l_0_5_26)))
 (let ((?x7639 (* 2.0 l_0_5_13)))
 (let ((?x7640 (* ?x7639 l_0_5_9)))
 (let ((?x7636 (* 2.0 l_0_5_12)))
 (let ((?x7637 (* ?x7636 l_0_5_8)))
 (let ((?x7633 (* 2.0 l_0_5_11)))
 (let ((?x7634 (* ?x7633 l_0_5_7)))
 (let ((?x4789 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x7634) ?x7637) ?x7640) ?x7954)))
 (let ((?x8218 (+ (+ (+ (+ (+ (+ (+ ?x4789 ?x8116) ?x7957) ?x4628) ?x7960) ?x4632) ?x7963) ?x4638)))
 (let ((?x8226 (- (- (- (- ?x8218 ?x7972) (* (* 2.0 l_0_5_37) l_0_5_37)) ?x7975) (* (* 2.0 l_0_5_38) l_0_5_38))))
 (let ((?x8234 (- (- (- (- ?x8226 ?x7978) (* (* 2.0 l_0_5_39) l_0_5_39)) ?x7981) (* (* 2.0 l_0_5_40) l_0_5_40))))
 (= ?x8234 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8275 (* (* 4.0 l_0_5_45) l_0_5_45)))
 (let ((?x8272 (* (* 4.0 l_0_5_44) l_0_5_44)))
 (let ((?x8269 (* (* 4.0 l_0_5_43) l_0_5_43)))
 (let ((?x8266 (* (* 4.0 l_0_5_42) l_0_5_42)))
 (let ((?x8263 (* (* 4.0 l_0_5_41) l_0_5_41)))
 (let ((?x7910 (* 4.0 l_0_5_40)))
 (let ((?x8167 (* ?x7910 l_0_5_44)))
 (let ((?x7907 (* 4.0 l_0_5_39)))
 (let ((?x8165 (* ?x7907 l_0_5_43)))
 (let ((?x7904 (* 4.0 l_0_5_38)))
 (let ((?x8163 (* ?x7904 l_0_5_42)))
 (let ((?x7901 (* 4.0 l_0_5_37)))
 (let ((?x8161 (* ?x7901 l_0_5_41)))
 (let ((?x7307 (* 2.0 l_0_5_31)))
 (let ((?x4281 (* ?x7307 l_0_5_37)))
 (let ((?x8254 (* l_0_5_30 l_0_5_30)))
 (let ((?x8255 (* 4.0 ?x8254)))
 (let ((?x8251 (* l_0_5_29 l_0_5_29)))
 (let ((?x8252 (* 4.0 ?x8251)))
 (let ((?x8248 (* l_0_5_28 l_0_5_28)))
 (let ((?x8249 (* 4.0 ?x8248)))
 (let ((?x8245 (* l_0_5_27 l_0_5_27)))
 (let ((?x8246 (* 4.0 ?x8245)))
 (let ((?x8242 (* l_0_5_26 l_0_5_26)))
 (let ((?x8243 (* 4.0 ?x8242)))
 (let ((?x8150 (* (* 4.0 l_0_5_25) l_0_5_29)))
 (let ((?x8147 (* (* 4.0 l_0_5_24) l_0_5_28)))
 (let ((?x8144 (* (* 4.0 l_0_5_23) l_0_5_27)))
 (let ((?x8141 (* (* 4.0 l_0_5_22) l_0_5_26)))
 (let ((?x7201 (* 2.0 l_0_5_16)))
 (let ((?x4439 (* ?x7201 l_0_5_22)))
 (let ((?x7102 (* l_0_5_15 l_0_5_15)))
 (let ((?x7099 (* l_0_5_14 l_0_5_14)))
 (let ((?x7096 (* l_0_5_13 l_0_5_13)))
 (let ((?x4823 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x7096) ?x7099)))
 (let ((?x8244 (+ (+ (+ (+ (+ (- (- ?x4823 ?x7102) ?x4439) ?x8141) ?x8144) ?x8147) ?x8150) ?x8243)))
 (let ((?x8259 (- (- (+ (+ (+ (+ (+ ?x8244 ?x8246) ?x8249) ?x8252) ?x8255) ?x4281) ?x8161) ?x8163)))
 (let ((?x8276 (- (- (- (- (- (- (- ?x8259 ?x8165) ?x8167) ?x8263) ?x8266) ?x8269) ?x8272) ?x8275)))
 (= ?x8276 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8326 (* l_0_5_93 l_0_5_93)))
 (let ((?x8324 (* l_0_5_92 l_0_5_92)))
 (let ((?x8322 (* l_0_5_78 l_0_5_78)))
 (let ((?x8320 (* l_0_5_77 l_0_5_77)))
 (let ((?x7206 (* 2.0 l_0_5_46)))
 (let ((?x7376 (* ?x7206 l_0_5_47)))
 (let ((?x7412 (* 8.0 l_0_5_31)))
 (let ((?x7413 (* ?x7412 l_0_5_32)))
 (let ((?x3509 (* 8.0 l_0_5_16)))
 (let ((?x3510 (* ?x3509 l_0_5_17)))
 (let ((?x8309 (+ (+ ?x3510 (* 1.0 (* l_0_5_2 l_0_5_2))) (* 1.0 (* l_0_5_3 l_0_5_3)))))
 (let ((?x8317 (+ (+ (- (- ?x8309 ?x7413) ?x7376) (* 1.0 (* l_0_5_47 l_0_5_47))) (* 1.0 (* l_0_5_48 l_0_5_48)))))
 (let ((?x8325 (- (- (- (- ?x8317 (* (* 2.0 l_0_5_61) l_0_5_62)) ?x8320) ?x8322) ?x8324)))
 (= (- ?x8325 ?x8326) 0.0)))))))))))))))
(assert
 (let ((?x7421 (* 2.0 l_0_5_48)))
 (let ((?x8346 (* ?x7421 l_0_5_50)))
 (let ((?x7418 (* 2.0 l_0_5_47)))
 (let ((?x8344 (* ?x7418 l_0_5_49)))
 (let ((?x7206 (* 2.0 l_0_5_46)))
 (let ((?x7207 (* ?x7206 l_0_5_49)))
 (let ((?x7412 (* 8.0 l_0_5_31)))
 (let ((?x7482 (* ?x7412 l_0_5_34)))
 (let ((?x7110 (* 4.0 l_0_5_31)))
 (let ((?x8340 (* ?x7110 l_0_5_32)))
 (let ((?x7409 (* 2.0 l_0_5_3)))
 (let ((?x7807 (* ?x7409 l_0_5_5)))
 (let ((?x7406 (* 2.0 l_0_5_2)))
 (let ((?x7799 (* ?x7406 l_0_5_4)))
 (let ((?x3509 (* 8.0 l_0_5_16)))
 (let ((?x3608 (* ?x3509 l_0_5_19)))
 (let ((?x8341 (+ (+ (+ (+ (* (* (- 4.0) l_0_5_16) l_0_5_17) ?x3608) ?x7799) ?x7807) ?x8340)))
 (let ((?x8349 (- (+ (+ (- (- ?x8341 ?x7482) ?x7207) ?x8344) ?x8346) (* (* 2.0 l_0_5_61) l_0_5_64))))
 (let ((?x8353 (- (- ?x8349 (* (* 2.0 l_0_5_77) l_0_5_79)) (* (* 2.0 l_0_5_78) l_0_5_80))))
 (let ((?x8357 (- (- ?x8353 (* (* 2.0 l_0_5_92) l_0_5_94)) (* (* 2.0 l_0_5_93) l_0_5_95))))
 (= ?x8357 0.0))))))))))))))))))))))
(assert
 (let ((?x7421 (* 2.0 l_0_5_48)))
 (let ((?x8382 (* ?x7421 l_0_5_57)))
 (let ((?x7418 (* 2.0 l_0_5_47)))
 (let ((?x8380 (* ?x7418 l_0_5_56)))
 (let ((?x7206 (* 2.0 l_0_5_46)))
 (let ((?x7310 (* ?x7206 l_0_5_56)))
 (let ((?x7412 (* 8.0 l_0_5_31)))
 (let ((?x7646 (* ?x7412 l_0_5_41)))
 (let ((?x7110 (* 4.0 l_0_5_31)))
 (let ((?x8340 (* ?x7110 l_0_5_32)))
 (let ((?x3509 (* 8.0 l_0_5_16)))
 (let ((?x7643 (* ?x3509 l_0_5_26)))
 (let ((?x7636 (* 2.0 l_0_5_12)))
 (let ((?x4133 (* ?x7636 l_0_5_3)))
 (let ((?x5116 (- (* (* (- 2.0) l_0_5_101) l_0_5_92) (* (* 2.0 l_0_5_102) l_0_5_93))))
 (let ((?x8375 (+ (+ (+ ?x5116 (* (* 2.0 l_0_5_11) l_0_5_2)) ?x4133) (* (* 4.0 l_0_5_16) l_0_5_17))))
 (let ((?x8385 (- (+ (+ (- (- (- (+ ?x8375 ?x7643) ?x8340) ?x7646) ?x7310) ?x8380) ?x8382) (* (* 2.0 l_0_5_61) l_0_5_71))))
 (let ((?x8389 (- (- ?x8385 (* (* 2.0 l_0_5_77) l_0_5_86)) (* (* 2.0 l_0_5_78) l_0_5_87))))
 (= ?x8389 0.0))))))))))))))))))))
(assert
 (let ((?x7498 (* 2.0 l_0_5_51)))
 (let ((?x8416 (* ?x7498 l_0_5_58)))
 (let ((?x7495 (* 2.0 l_0_5_50)))
 (let ((?x8414 (* ?x7495 l_0_5_57)))
 (let ((?x7489 (* 2.0 l_0_5_49)))
 (let ((?x8412 (* ?x7489 l_0_5_56)))
 (let ((?x7110 (* 4.0 l_0_5_31)))
 (let ((?x7111 (* ?x7110 l_0_5_41)))
 (let ((?x7241 (* ?x7110 l_0_5_34)))
 (let ((?x7105 (* 4.0 l_0_5_16)))
 (let ((?x7106 (* ?x7105 l_0_5_26)))
 (let ((?x7238 (* ?x7105 l_0_5_19)))
 (let ((?x7639 (* 2.0 l_0_5_13)))
 (let ((?x8129 (* ?x7639 l_0_5_6)))
 (let ((?x7636 (* 2.0 l_0_5_12)))
 (let ((?x8127 (* ?x7636 l_0_5_5)))
 (let ((?x5371 (- (* (* (- 2.0) l_0_5_101) l_0_5_94) (* (* 2.0 l_0_5_102) l_0_5_95))))
 (let ((?x8405 (+ (- ?x5371 (* (* 2.0 l_0_5_103) l_0_5_96)) (* (* 2.0 l_0_5_11) l_0_5_4))))
 (let ((?x8413 (+ (+ (- (- (+ (+ (+ ?x8405 ?x8127) ?x8129) ?x7238) ?x7106) ?x7241) ?x7111) ?x8412)))
 (let ((?x8421 (- (- (+ (+ ?x8413 ?x8414) ?x8416) (* (* 2.0 l_0_5_79) l_0_5_86)) (* (* 2.0 l_0_5_80) l_0_5_87))))
 (= (- ?x8421 (* (* 2.0 l_0_5_81) l_0_5_88)) 0.0))))))))))))))))))))))
(assert
 (let ((?x8486 (* l_0_5_75 l_0_5_75)))
 (let ((?x8484 (* l_0_5_74 l_0_5_74)))
 (let ((?x8482 (* l_0_5_73 l_0_5_73)))
 (let ((?x8480 (* l_0_5_72 l_0_5_72)))
 (let ((?x8478 (* l_0_5_71 l_0_5_71)))
 (let ((?x7127 (* l_0_5_60 l_0_5_60)))
 (let ((?x7124 (* l_0_5_59 l_0_5_59)))
 (let ((?x7121 (* l_0_5_58 l_0_5_58)))
 (let ((?x7118 (* l_0_5_57 l_0_5_57)))
 (let ((?x7115 (* l_0_5_56 l_0_5_56)))
 (let ((?x8275 (* (* 4.0 l_0_5_45) l_0_5_45)))
 (let ((?x8272 (* (* 4.0 l_0_5_44) l_0_5_44)))
 (let ((?x8269 (* (* 4.0 l_0_5_43) l_0_5_43)))
 (let ((?x8266 (* (* 4.0 l_0_5_42) l_0_5_42)))
 (let ((?x8263 (* (* 4.0 l_0_5_41) l_0_5_41)))
 (let ((?x7750 (* 4.0 l_0_5_33)))
 (let ((?x8466 (* ?x7750 l_0_5_42)))
 (let ((?x7744 (* 4.0 l_0_5_32)))
 (let ((?x8464 (* ?x7744 l_0_5_41)))
 (let ((?x7307 (* 2.0 l_0_5_31)))
 (let ((?x8462 (* ?x7307 l_0_5_32)))
 (let ((?x8254 (* l_0_5_30 l_0_5_30)))
 (let ((?x8255 (* 4.0 ?x8254)))
 (let ((?x8251 (* l_0_5_29 l_0_5_29)))
 (let ((?x8252 (* 4.0 ?x8251)))
 (let ((?x8248 (* l_0_5_28 l_0_5_28)))
 (let ((?x8249 (* 4.0 ?x8248)))
 (let ((?x8245 (* l_0_5_27 l_0_5_27)))
 (let ((?x8246 (* 4.0 ?x8245)))
 (let ((?x8242 (* l_0_5_26 l_0_5_26)))
 (let ((?x8243 (* 4.0 ?x8242)))
 (let ((?x7793 (* 4.0 l_0_5_18)))
 (let ((?x8455 (* ?x7793 l_0_5_27)))
 (let ((?x7788 (* 4.0 l_0_5_17)))
 (let ((?x8453 (* ?x7788 l_0_5_26)))
 (let ((?x8458 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_16) l_0_5_17) ?x8453) ?x8455) ?x8243) ?x8246)))
 (let ((?x8468 (- (- (- (+ (+ (+ (+ ?x8458 ?x8249) ?x8252) ?x8255) ?x8462) ?x8464) ?x8466) ?x8263)))
 (let ((?x8475 (- (- (- (- (- (- (- ?x8468 ?x8266) ?x8269) ?x8272) ?x8275) ?x7115) ?x7118) ?x7121)))
 (let ((?x8487 (- (- (- (- (- (- (- ?x8475 ?x7124) ?x7127) ?x8478) ?x8480) ?x8482) ?x8484) ?x8486)))
 (= ?x8487 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2890 (* l_0_5_45 l_0_5_45)))
 (let ((?x8530 (* 2.0 ?x2890)))
 (let ((?x4927 (* l_0_5_44 l_0_5_44)))
 (let ((?x8528 (* 2.0 ?x4927)))
 (let ((?x4921 (* l_0_5_43 l_0_5_43)))
 (let ((?x8526 (* 2.0 ?x4921)))
 (let ((?x8291 (* l_0_5_42 l_0_5_42)))
 (let ((?x8524 (* 2.0 ?x8291)))
 (let ((?x3405 (* l_0_5_41 l_0_5_41)))
 (let ((?x8522 (* 2.0 ?x3405)))
 (let ((?x8040 (* 4.0 l_0_5_36)))
 (let ((?x8520 (* ?x8040 l_0_5_43)))
 (let ((?x8035 (* 4.0 l_0_5_35)))
 (let ((?x8518 (* ?x8035 l_0_5_42)))
 (let ((?x8030 (* 4.0 l_0_5_34)))
 (let ((?x8516 (* ?x8030 l_0_5_41)))
 (let ((?x7307 (* 2.0 l_0_5_31)))
 (let ((?x8514 (* ?x7307 l_0_5_34)))
 (let ((?x4317 (* 4.0 l_0_5_21)))
 (let ((?x8497 (* ?x4317 l_0_5_28)))
 (let ((?x4385 (* 4.0 l_0_5_20)))
 (let ((?x8495 (* ?x4385 l_0_5_27)))
 (let ((?x4402 (* 4.0 l_0_5_19)))
 (let ((?x8493 (* ?x4402 l_0_5_26)))
 (let ((?x8501 (- (+ (+ (+ (* (* (- 2.0) l_0_5_16) l_0_5_19) ?x8493) ?x8495) ?x8497) (* (* 2.0 l_0_5_26) l_0_5_26))))
 (let ((?x8507 (- (- ?x8501 (* (* 2.0 l_0_5_27) l_0_5_27)) (* (* 2.0 l_0_5_28) l_0_5_28))))
 (let ((?x8513 (- (- ?x8507 (* (* 2.0 l_0_5_29) l_0_5_29)) (* (* 2.0 l_0_5_30) l_0_5_30))))
 (let ((?x8527 (+ (+ (+ (- (- (- (+ ?x8513 ?x8514) ?x8516) ?x8518) ?x8520) ?x8522) ?x8524) ?x8526)))
 (= (+ (+ ?x8527 ?x8528) ?x8530) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x7307 (* 2.0 l_0_5_31)))
 (let ((?x8573 (* ?x7307 l_0_5_41)))
 (let ((?x8568 (+ (* (* (- 2.0) l_0_5_16) l_0_5_26) (* 2.0 (* l_0_5_26 l_0_5_26)))))
 (let ((?x8570 (+ (+ ?x8568 (* 2.0 (* l_0_5_27 l_0_5_27))) (* 2.0 (* l_0_5_28 l_0_5_28)))))
 (let ((?x8572 (+ (+ ?x8570 (* 2.0 (* l_0_5_29 l_0_5_29))) (* 2.0 (* l_0_5_30 l_0_5_30)))))
 (let ((?x8580 (- (- (+ ?x8572 ?x8573) (* (* 2.0 l_0_5_41) l_0_5_41)) (* (* 2.0 l_0_5_42) l_0_5_42))))
 (let ((?x8586 (- (- ?x8580 (* (* 2.0 l_0_5_43) l_0_5_43)) (* (* 2.0 l_0_5_44) l_0_5_44))))
 (= (- ?x8586 (* (* 2.0 l_0_5_45) l_0_5_45)) 0.0)))))))))
(assert
 (let ((?x3851 (* l_0_5_33 l_0_5_33)))
 (let ((?x3839 (* l_0_5_32 l_0_5_32)))
 (let ((?x8614 (+ (+ (- (* (- l_0_5_17) l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x3839) ?x3851)))
 (= ?x8614 0.0)))))
(assert
 (let ((?x8630 (* 2.0 l_0_5_33)))
 (let ((?x8631 (* ?x8630 l_0_5_35)))
 (let ((?x8627 (* 2.0 l_0_5_32)))
 (let ((?x8628 (* ?x8627 l_0_5_34)))
 (let ((?x8624 (* 2.0 l_0_5_18)))
 (let ((?x8625 (* ?x8624 l_0_5_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x8625) ?x8628) ?x8631) 0.0))))))))
(assert
 (let ((?x8630 (* 2.0 l_0_5_33)))
 (let ((?x8648 (* ?x8630 l_0_5_38)))
 (let ((?x8627 (* 2.0 l_0_5_32)))
 (let ((?x8646 (* ?x8627 l_0_5_37)))
 (let ((?x8624 (* 2.0 l_0_5_18)))
 (let ((?x5723 (* ?x8624 l_0_5_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x5723) ?x8646) ?x8648) 0.0))))))))
(assert
 (let ((?x8630 (* 2.0 l_0_5_33)))
 (let ((?x8662 (* ?x8630 l_0_5_42)))
 (let ((?x8627 (* 2.0 l_0_5_32)))
 (let ((?x8660 (* ?x8627 l_0_5_41)))
 (let ((?x8624 (* 2.0 l_0_5_18)))
 (let ((?x8658 (* ?x8624 l_0_5_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_26) ?x8658) ?x8660) ?x8662) 0.0))))))))
(assert
 (let ((?x2890 (* l_0_5_45 l_0_5_45)))
 (let ((?x4927 (* l_0_5_44 l_0_5_44)))
 (let ((?x4921 (* l_0_5_43 l_0_5_43)))
 (let ((?x8291 (* l_0_5_42 l_0_5_42)))
 (let ((?x3405 (* l_0_5_41 l_0_5_41)))
 (let ((?x4113 (* l_0_5_36 l_0_5_36)))
 (let ((?x8072 (* l_0_5_35 l_0_5_35)))
 (let ((?x4591 (* l_0_5_34 l_0_5_34)))
 (let ((?x8254 (* l_0_5_30 l_0_5_30)))
 (let ((?x8251 (* l_0_5_29 l_0_5_29)))
 (let ((?x8248 (* l_0_5_28 l_0_5_28)))
 (let ((?x8245 (* l_0_5_27 l_0_5_27)))
 (let ((?x8242 (* l_0_5_26 l_0_5_26)))
 (let ((?x4316 (* l_0_5_21 l_0_5_21)))
 (let ((?x8678 (+ (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x4316) ?x8242)))
 (let ((?x8685 (+ (+ (+ (+ (+ (+ (+ ?x8678 ?x8245) ?x8248) ?x8251) ?x8254) ?x4591) ?x8072) ?x4113)))
 (= (- (- (- (- (- ?x8685 ?x3405) ?x8291) ?x4921) ?x4927) ?x2890) 0.0))))))))))))))))))
(assert
 (let ((?x8725 (* 2.0 l_0_5_36)))
 (let ((?x8726 (* ?x8725 l_0_5_39)))
 (let ((?x8722 (* 2.0 l_0_5_35)))
 (let ((?x8723 (* ?x8722 l_0_5_38)))
 (let ((?x8719 (* 2.0 l_0_5_34)))
 (let ((?x8720 (* ?x8719 l_0_5_37)))
 (let ((?x8716 (* 2.0 l_0_5_21)))
 (let ((?x8717 (* ?x8716 l_0_5_24)))
 (let ((?x8713 (* 2.0 l_0_5_20)))
 (let ((?x8714 (* ?x8713 l_0_5_23)))
 (let ((?x8724 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x8714) ?x8717) ?x8720) ?x8723)))
 (= (+ ?x8724 ?x8726) 0.0)))))))))))))
(assert
 (let ((?x8725 (* 2.0 l_0_5_36)))
 (let ((?x8753 (* ?x8725 l_0_5_43)))
 (let ((?x8722 (* 2.0 l_0_5_35)))
 (let ((?x8751 (* ?x8722 l_0_5_42)))
 (let ((?x8719 (* 2.0 l_0_5_34)))
 (let ((?x8749 (* ?x8719 l_0_5_41)))
 (let ((?x8716 (* 2.0 l_0_5_21)))
 (let ((?x8741 (* ?x8716 l_0_5_28)))
 (let ((?x8713 (* 2.0 l_0_5_20)))
 (let ((?x8740 (* ?x8713 l_0_5_27)))
 (let ((?x8752 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_26) ?x8740) ?x8741) ?x8749) ?x8751)))
 (= (+ ?x8752 ?x8753) 0.0)))))))))))))
(assert
 (let ((?x4130 (* l_0_5_40 l_0_5_40)))
 (let ((?x4128 (* l_0_5_39 l_0_5_39)))
 (let ((?x4126 (* l_0_5_38 l_0_5_38)))
 (let ((?x4124 (* l_0_5_37 l_0_5_37)))
 (let ((?x7895 (* l_0_5_25 l_0_5_25)))
 (let ((?x7892 (* l_0_5_24 l_0_5_24)))
 (let ((?x8764 (- (- (- (* (- l_0_5_22) l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x7892) ?x7895)))
 (= (+ (+ (+ (+ ?x8764 ?x4124) ?x4126) ?x4128) ?x4130) 0.0)))))))))
(assert
 (let ((?x8232 (* 2.0 l_0_5_40)))
 (let ((?x8796 (* ?x8232 l_0_5_44)))
 (let ((?x8228 (* 2.0 l_0_5_39)))
 (let ((?x8794 (* ?x8228 l_0_5_43)))
 (let ((?x8224 (* 2.0 l_0_5_38)))
 (let ((?x8792 (* ?x8224 l_0_5_42)))
 (let ((?x8220 (* 2.0 l_0_5_37)))
 (let ((?x8790 (* ?x8220 l_0_5_41)))
 (let ((?x8097 (* 2.0 l_0_5_25)))
 (let ((?x8788 (* ?x8097 l_0_5_29)))
 (let ((?x8094 (* 2.0 l_0_5_24)))
 (let ((?x8786 (* ?x8094 l_0_5_28)))
 (let ((?x8091 (* 2.0 l_0_5_23)))
 (let ((?x8784 (* ?x8091 l_0_5_27)))
 (let ((?x8791 (+ (- (- (- (* (* (- 2.0) l_0_5_22) l_0_5_26) ?x8784) ?x8786) ?x8788) ?x8790)))
 (= (+ (+ (+ ?x8791 ?x8792) ?x8794) ?x8796) 0.0)))))))))))))))))
(assert
 (let ((?x2890 (* l_0_5_45 l_0_5_45)))
 (let ((?x4927 (* l_0_5_44 l_0_5_44)))
 (let ((?x4921 (* l_0_5_43 l_0_5_43)))
 (let ((?x8291 (* l_0_5_42 l_0_5_42)))
 (let ((?x3405 (* l_0_5_41 l_0_5_41)))
 (let ((?x8254 (* l_0_5_30 l_0_5_30)))
 (let ((?x8251 (* l_0_5_29 l_0_5_29)))
 (let ((?x8248 (* l_0_5_28 l_0_5_28)))
 (let ((?x5872 (- (- (- (* (- l_0_5_26) l_0_5_26) (* l_0_5_27 l_0_5_27)) ?x8248) ?x8251)))
 (= (+ (+ (+ (+ (+ (- ?x5872 ?x8254) ?x3405) ?x8291) ?x4921) ?x4927) ?x2890) 0.0)))))))))))
(assert
 (let ((?x8852 (* l_0_5_66 l_0_5_66)))
 (let ((?x8850 (* l_0_5_65 l_0_5_65)))
 (let ((?x8848 (* l_0_5_64 l_0_5_64)))
 (let ((?x7256 (* l_0_5_51 l_0_5_51)))
 (let ((?x7253 (* l_0_5_50 l_0_5_50)))
 (let ((?x7247 (* l_0_5_49 l_0_5_49)))
 (let ((?x8040 (* 4.0 l_0_5_36)))
 (let ((?x8043 (* ?x8040 l_0_5_36)))
 (let ((?x8035 (* 4.0 l_0_5_35)))
 (let ((?x8038 (* ?x8035 l_0_5_35)))
 (let ((?x8030 (* 4.0 l_0_5_34)))
 (let ((?x8033 (* ?x8030 l_0_5_34)))
 (let ((?x7750 (* 4.0 l_0_5_33)))
 (let ((?x8840 (* ?x7750 l_0_5_35)))
 (let ((?x7744 (* 4.0 l_0_5_32)))
 (let ((?x8838 (* ?x7744 l_0_5_34)))
 (let ((?x7307 (* 2.0 l_0_5_31)))
 (let ((?x8462 (* ?x7307 l_0_5_32)))
 (let ((?x4316 (* l_0_5_21 l_0_5_21)))
 (let ((?x4279 (* 4.0 ?x4316)))
 (let ((?x4356 (* l_0_5_20 l_0_5_20)))
 (let ((?x4353 (* 4.0 ?x4356)))
 (let ((?x4395 (* l_0_5_19 l_0_5_19)))
 (let ((?x4390 (* 4.0 ?x4395)))
 (let ((?x7793 (* 4.0 l_0_5_18)))
 (let ((?x8832 (* ?x7793 l_0_5_20)))
 (let ((?x7788 (* 4.0 l_0_5_17)))
 (let ((?x8830 (* ?x7788 l_0_5_19)))
 (let ((?x8835 (+ (+ (- (- (* (* 2.0 l_0_5_16) l_0_5_17) ?x8830) ?x8832) ?x4390) ?x4353)))
 (let ((?x8844 (- (- (- (+ (+ (- (+ ?x8835 ?x4279) ?x8462) ?x8838) ?x8840) ?x8033) ?x8038) ?x8043)))
 (= (- (- (- (- (- (- ?x8844 ?x7247) ?x7253) ?x7256) ?x8848) ?x8850) ?x8852) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x7307 (* 2.0 l_0_5_31)))
 (let ((?x8514 (* ?x7307 l_0_5_34)))
 (let ((?x981 (- (* (* 2.0 l_0_5_16) l_0_5_19) (* (* 2.0 l_0_5_19) l_0_5_19))))
 (let ((?x972 (- (- ?x981 (* (* 2.0 l_0_5_20) l_0_5_20)) (* (* 2.0 l_0_5_21) l_0_5_21))))
 (let ((?x5937 (+ (+ (- ?x972 ?x8514) (* 2.0 (* l_0_5_34 l_0_5_34))) (* 2.0 (* l_0_5_35 l_0_5_35)))))
 (= (+ ?x5937 (* 2.0 (* l_0_5_36 l_0_5_36))) 0.0)))))))
(assert
 (let ((?x8040 (* 4.0 l_0_5_36)))
 (let ((?x8520 (* ?x8040 l_0_5_43)))
 (let ((?x8035 (* 4.0 l_0_5_35)))
 (let ((?x8518 (* ?x8035 l_0_5_42)))
 (let ((?x8030 (* 4.0 l_0_5_34)))
 (let ((?x8516 (* ?x8030 l_0_5_41)))
 (let ((?x7307 (* 2.0 l_0_5_31)))
 (let ((?x8573 (* ?x7307 l_0_5_41)))
 (let ((?x4316 (* l_0_5_21 l_0_5_21)))
 (let ((?x1051 (* 2.0 ?x4316)))
 (let ((?x4317 (* 4.0 l_0_5_21)))
 (let ((?x8497 (* ?x4317 l_0_5_28)))
 (let ((?x4356 (* l_0_5_20 l_0_5_20)))
 (let ((?x8864 (* 2.0 ?x4356)))
 (let ((?x4385 (* 4.0 l_0_5_20)))
 (let ((?x8495 (* ?x4385 l_0_5_27)))
 (let ((?x4395 (* l_0_5_19 l_0_5_19)))
 (let ((?x921 (* 2.0 ?x4395)))
 (let ((?x4402 (* 4.0 l_0_5_19)))
 (let ((?x8493 (* ?x4402 l_0_5_26)))
 (let ((?x8878 (+ (- (+ (- (* (* 2.0 l_0_5_16) l_0_5_26) ?x8493) ?x921) ?x8495) ?x8864)))
 (let ((?x8884 (- (+ (- (+ (- ?x8878 ?x8497) ?x1051) ?x8573) ?x8516) (* (* 2.0 l_0_5_34) l_0_5_34))))
 (let ((?x8890 (- (+ (- (+ ?x8884 ?x8518) (* (* 2.0 l_0_5_35) l_0_5_35)) ?x8520) (* (* 2.0 l_0_5_36) l_0_5_36))))
 (= ?x8890 0.0)))))))))))))))))))))))))
(assert
 (let ((?x3851 (* l_0_5_33 l_0_5_33)))
 (let ((?x3839 (* l_0_5_32 l_0_5_32)))
 (let ((?x8911 (- (- (+ (* l_0_5_17 l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x3839) ?x3851)))
 (= ?x8911 0.0)))))
(assert
 (let ((?x8630 (* 2.0 l_0_5_33)))
 (let ((?x8631 (* ?x8630 l_0_5_35)))
 (let ((?x8627 (* 2.0 l_0_5_32)))
 (let ((?x8628 (* ?x8627 l_0_5_34)))
 (let ((?x8624 (* 2.0 l_0_5_18)))
 (let ((?x8625 (* ?x8624 l_0_5_20)))
 (= (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_19) ?x8625) ?x8628) ?x8631) 0.0))))))))
(assert
 (let ((?x8630 (* 2.0 l_0_5_33)))
 (let ((?x8648 (* ?x8630 l_0_5_38)))
 (let ((?x8627 (* 2.0 l_0_5_32)))
 (let ((?x8646 (* ?x8627 l_0_5_37)))
 (let ((?x8624 (* 2.0 l_0_5_18)))
 (let ((?x5723 (* ?x8624 l_0_5_23)))
 (= (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_22) ?x5723) ?x8646) ?x8648) 0.0))))))))
(assert
 (let ((?x8630 (* 2.0 l_0_5_33)))
 (let ((?x8662 (* ?x8630 l_0_5_42)))
 (let ((?x8627 (* 2.0 l_0_5_32)))
 (let ((?x8660 (* ?x8627 l_0_5_41)))
 (let ((?x8624 (* 2.0 l_0_5_18)))
 (let ((?x8658 (* ?x8624 l_0_5_27)))
 (= (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_26) ?x8658) ?x8660) ?x8662) 0.0))))))))
(assert
 (let ((?x4113 (* l_0_5_36 l_0_5_36)))
 (let ((?x8072 (* l_0_5_35 l_0_5_35)))
 (let ((?x4591 (* l_0_5_34 l_0_5_34)))
 (let ((?x4316 (* l_0_5_21 l_0_5_21)))
 (let ((?x1168 (- (+ (+ (* l_0_5_19 l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x4316) ?x4591)))
 (= (- (- ?x1168 ?x8072) ?x4113) 0.0)))))))
(assert
 (let ((?x8725 (* 2.0 l_0_5_36)))
 (let ((?x8726 (* ?x8725 l_0_5_39)))
 (let ((?x8722 (* 2.0 l_0_5_35)))
 (let ((?x8723 (* ?x8722 l_0_5_38)))
 (let ((?x8719 (* 2.0 l_0_5_34)))
 (let ((?x8720 (* ?x8719 l_0_5_37)))
 (let ((?x8716 (* 2.0 l_0_5_21)))
 (let ((?x8717 (* ?x8716 l_0_5_24)))
 (let ((?x8713 (* 2.0 l_0_5_20)))
 (let ((?x8714 (* ?x8713 l_0_5_23)))
 (let ((?x8949 (- (- (+ (+ (* (* 2.0 l_0_5_19) l_0_5_22) ?x8714) ?x8717) ?x8720) ?x8723)))
 (= (- ?x8949 ?x8726) 0.0)))))))))))))
(assert
 (let ((?x8725 (* 2.0 l_0_5_36)))
 (let ((?x8753 (* ?x8725 l_0_5_43)))
 (let ((?x8722 (* 2.0 l_0_5_35)))
 (let ((?x8751 (* ?x8722 l_0_5_42)))
 (let ((?x8719 (* 2.0 l_0_5_34)))
 (let ((?x8749 (* ?x8719 l_0_5_41)))
 (let ((?x8716 (* 2.0 l_0_5_21)))
 (let ((?x8741 (* ?x8716 l_0_5_28)))
 (let ((?x8713 (* 2.0 l_0_5_20)))
 (let ((?x8740 (* ?x8713 l_0_5_27)))
 (let ((?x1221 (- (- (+ (+ (* (* 2.0 l_0_5_19) l_0_5_26) ?x8740) ?x8741) ?x8749) ?x8751)))
 (= (- ?x1221 ?x8753) 0.0)))))))))))))
(assert
 (let ((?x4130 (* l_0_5_40 l_0_5_40)))
 (let ((?x4128 (* l_0_5_39 l_0_5_39)))
 (let ((?x4126 (* l_0_5_38 l_0_5_38)))
 (let ((?x4124 (* l_0_5_37 l_0_5_37)))
 (let ((?x7895 (* l_0_5_25 l_0_5_25)))
 (let ((?x7892 (* l_0_5_24 l_0_5_24)))
 (let ((?x6098 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x7892) ?x7895)))
 (= (- (- (- (- ?x6098 ?x4124) ?x4126) ?x4128) ?x4130) 0.0)))))))))
(assert
 (let ((?x8232 (* 2.0 l_0_5_40)))
 (let ((?x8796 (* ?x8232 l_0_5_44)))
 (let ((?x8228 (* 2.0 l_0_5_39)))
 (let ((?x8794 (* ?x8228 l_0_5_43)))
 (let ((?x8224 (* 2.0 l_0_5_38)))
 (let ((?x8792 (* ?x8224 l_0_5_42)))
 (let ((?x8220 (* 2.0 l_0_5_37)))
 (let ((?x8790 (* ?x8220 l_0_5_41)))
 (let ((?x8097 (* 2.0 l_0_5_25)))
 (let ((?x8788 (* ?x8097 l_0_5_29)))
 (let ((?x8094 (* 2.0 l_0_5_24)))
 (let ((?x8786 (* ?x8094 l_0_5_28)))
 (let ((?x8091 (* 2.0 l_0_5_23)))
 (let ((?x8784 (* ?x8091 l_0_5_27)))
 (let ((?x8981 (- (+ (+ (+ (* (* 2.0 l_0_5_22) l_0_5_26) ?x8784) ?x8786) ?x8788) ?x8790)))
 (= (- (- (- ?x8981 ?x8792) ?x8794) ?x8796) 0.0)))))))))))))))))
(assert
 (let ((?x7421 (* 2.0 l_0_5_48)))
 (let ((?x8382 (* ?x7421 l_0_5_57)))
 (let ((?x7418 (* 2.0 l_0_5_47)))
 (let ((?x8380 (* ?x7418 l_0_5_56)))
 (let ((?x7747 (* 8.0 l_0_5_33)))
 (let ((?x7969 (* ?x7747 l_0_5_42)))
 (let ((?x7741 (* 8.0 l_0_5_32)))
 (let ((?x7966 (* ?x7741 l_0_5_41)))
 (let ((?x7734 (* l_0_5_18 l_0_5_18)))
 (let ((?x8998 (* 2.0 ?x7734)))
 (let ((?x7731 (* 8.0 l_0_5_18)))
 (let ((?x7951 (* ?x7731 l_0_5_27)))
 (let ((?x7728 (* l_0_5_17 l_0_5_17)))
 (let ((?x8995 (* 2.0 ?x7728)))
 (let ((?x7726 (* 8.0 l_0_5_17)))
 (let ((?x7948 (* ?x7726 l_0_5_26)))
 (let ((?x9002 (- (- (+ (+ (+ ?x7948 ?x8995) ?x7951) ?x8998) ?x7966) (* (* 2.0 l_0_5_32) l_0_5_32))))
 (let ((?x9007 (- (- (- (- ?x9002 ?x7969) (* (* 2.0 l_0_5_33) l_0_5_33)) ?x8380) ?x8382)))
 (let ((?x9011 (- (- ?x9007 (* (* 2.0 l_0_5_62) l_0_5_71)) (* (* 2.0 l_0_5_63) l_0_5_72))))
 (= ?x9011 0.0)))))))))))))))))))))
(assert
 (let ((?x7498 (* 2.0 l_0_5_51)))
 (let ((?x8416 (* ?x7498 l_0_5_58)))
 (let ((?x7495 (* 2.0 l_0_5_50)))
 (let ((?x8414 (* ?x7495 l_0_5_57)))
 (let ((?x7489 (* 2.0 l_0_5_49)))
 (let ((?x8412 (* ?x7489 l_0_5_56)))
 (let ((?x7823 (* 8.0 l_0_5_36)))
 (let ((?x8159 (* ?x7823 l_0_5_43)))
 (let ((?x7820 (* 8.0 l_0_5_35)))
 (let ((?x8156 (* ?x7820 l_0_5_42)))
 (let ((?x7817 (* 8.0 l_0_5_34)))
 (let ((?x8153 (* ?x7817 l_0_5_41)))
 (let ((?x7750 (* 4.0 l_0_5_33)))
 (let ((?x8466 (* ?x7750 l_0_5_42)))
 (let ((?x8840 (* ?x7750 l_0_5_35)))
 (let ((?x7744 (* 4.0 l_0_5_32)))
 (let ((?x8464 (* ?x7744 l_0_5_41)))
 (let ((?x8838 (* ?x7744 l_0_5_34)))
 (let ((?x7804 (* 8.0 l_0_5_21)))
 (let ((?x8138 (* ?x7804 l_0_5_28)))
 (let ((?x7801 (* 8.0 l_0_5_20)))
 (let ((?x8135 (* ?x7801 l_0_5_27)))
 (let ((?x7796 (* 8.0 l_0_5_19)))
 (let ((?x8132 (* ?x7796 l_0_5_26)))
 (let ((?x7793 (* 4.0 l_0_5_18)))
 (let ((?x8455 (* ?x7793 l_0_5_27)))
 (let ((?x8832 (* ?x7793 l_0_5_20)))
 (let ((?x7788 (* 4.0 l_0_5_17)))
 (let ((?x8453 (* ?x7788 l_0_5_26)))
 (let ((?x8830 (* ?x7788 l_0_5_19)))
 (let ((?x9040 (- (+ (+ (+ (- (+ (- ?x8830 ?x8453) ?x8832) ?x8455) ?x8132) ?x8135) ?x8138) ?x8838)))
 (let ((?x9047 (- (- (- (- (+ (- (+ ?x9040 ?x8464) ?x8840) ?x8466) ?x8153) ?x8156) ?x8159) ?x8412)))
 (let ((?x9053 (- (- (- (- ?x9047 ?x8414) ?x8416) (* (* 2.0 l_0_5_64) l_0_5_71)) (* (* 2.0 l_0_5_65) l_0_5_72))))
 (= (- ?x9053 (* (* 2.0 l_0_5_66) l_0_5_73)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7421 (* 2.0 l_0_5_48)))
 (let ((?x8346 (* ?x7421 l_0_5_50)))
 (let ((?x7418 (* 2.0 l_0_5_47)))
 (let ((?x8344 (* ?x7418 l_0_5_49)))
 (let ((?x3851 (* l_0_5_33 l_0_5_33)))
 (let ((?x9018 (* 2.0 ?x3851)))
 (let ((?x7747 (* 8.0 l_0_5_33)))
 (let ((?x7813 (* ?x7747 l_0_5_35)))
 (let ((?x3839 (* l_0_5_32 l_0_5_32)))
 (let ((?x9013 (* 2.0 ?x3839)))
 (let ((?x7741 (* 8.0 l_0_5_32)))
 (let ((?x7809 (* ?x7741 l_0_5_34)))
 (let ((?x7731 (* 8.0 l_0_5_18)))
 (let ((?x7791 (* ?x7731 l_0_5_20)))
 (let ((?x7726 (* 8.0 l_0_5_17)))
 (let ((?x7787 (* ?x7726 l_0_5_19)))
 (let ((?x9065 (- (+ (- ?x7787 (* (* 2.0 l_0_5_17) l_0_5_17)) ?x7791) (* (* 2.0 l_0_5_18) l_0_5_18))))
 (let ((?x9073 (- (- (- (+ (- (+ (- ?x9065 ?x7809) ?x9013) ?x7813) ?x9018) ?x8344) ?x8346) (* (* 2.0 l_0_5_62) l_0_5_64))))
 (= (- ?x9073 (* (* 2.0 l_0_5_63) l_0_5_65)) 0.0))))))))))))))))))))
(assert
 (let ((?x9084 (* l_0_5_63 l_0_5_63)))
 (let ((?x9082 (* l_0_5_62 l_0_5_62)))
 (let ((?x8315 (* l_0_5_48 l_0_5_48)))
 (let ((?x8312 (* l_0_5_47 l_0_5_47)))
 (let ((?x7750 (* 4.0 l_0_5_33)))
 (let ((?x7751 (* ?x7750 l_0_5_33)))
 (let ((?x7744 (* 4.0 l_0_5_32)))
 (let ((?x7745 (* ?x7744 l_0_5_32)))
 (let ((?x7734 (* l_0_5_18 l_0_5_18)))
 (let ((?x7735 (* 4.0 ?x7734)))
 (let ((?x7728 (* l_0_5_17 l_0_5_17)))
 (let ((?x7729 (* 4.0 ?x7728)))
 (let ((?x9085 (- (- (- (- (- (- (+ ?x7729 ?x7735) ?x7745) ?x7751) ?x8312) ?x8315) ?x9082) ?x9084)))
 (= ?x9085 0.0)))))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_91 0.0))
(assert
 (>= l_0_5_93 0.0))
(assert
 (>= l_0_5_96 0.0))
(assert
 (>= l_0_5_100 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (let ((?x9133 (* 2.0 l_0_6_46)))
 (let ((?x9134 (* ?x9133 l_0_6_52)))
 (let ((?x9130 (* 4.0 l_0_6_31)))
 (let ((?x9131 (* ?x9130 l_0_6_31)))
 (let ((?x9127 (* l_0_6_16 l_0_6_16)))
 (let ((?x9128 (* 4.0 ?x9127)))
 (let ((?x9126 (- (- (* (* 2.0 l_0_6_1) l_0_6_7) (* l_0_6_1 l_0_6_1)) (* (* 2.0 l_0_6_106) l_0_6_112))))
 (let ((?x9138 (- (+ (- (+ ?x9126 ?x9128) ?x9131) ?x9134) (* (* 2.0 l_0_6_76) l_0_6_82))))
 (= (+ (- ?x9138 (* (* 2.0 l_0_6_91) l_0_6_97)) 4.0) 0.0))))))))))
(assert
 (let ((?x9174 (* l_0_6_61 l_0_6_61)))
 (let ((?x9172 (* l_0_6_46 l_0_6_46)))
 (let ((?x9133 (* 2.0 l_0_6_46)))
 (let ((?x9170 (* ?x9133 l_0_6_47)))
 (let ((?x9130 (* 4.0 l_0_6_31)))
 (let ((?x9131 (* ?x9130 l_0_6_31)))
 (let ((?x9127 (* l_0_6_16 l_0_6_16)))
 (let ((?x9128 (* 4.0 ?x9127)))
 (let ((?x9167 (- (* (* 2.0 l_0_6_1) l_0_6_2) (* (* 2.0 l_0_6_106) l_0_6_107))))
 (let ((?x9177 (- (- (- (+ (- (+ ?x9167 ?x9128) ?x9131) ?x9170) ?x9172) ?x9174) (* (* 2.0 l_0_6_76) l_0_6_77))))
 (= (+ (- ?x9177 (* (* 2.0 l_0_6_91) l_0_6_92)) 4.0) 0.0))))))))))))
(assert
 (let ((?x9133 (* 2.0 l_0_6_46)))
 (let ((?x9208 (* ?x9133 l_0_6_49)))
 (let ((?x5073 (* l_0_6_31 l_0_6_31)))
 (let ((?x9206 (* 2.0 ?x5073)))
 (let ((?x9200 (+ (- (* (* 2.0 _a_0_) _a_1_) (* 2.0 _a_1_)) (* (* 2.0 l_0_6_1) l_0_6_4))))
 (let ((?x9205 (- (- ?x9200 (* (* 2.0 l_0_6_106) l_0_6_109)) (* (* 2.0 l_0_6_16) l_0_6_16))))
 (let ((?x9213 (- (- (+ (+ ?x9205 ?x9206) ?x9208) (* (* 2.0 l_0_6_76) l_0_6_79)) (* (* 2.0 l_0_6_91) l_0_6_94))))
 (= (- ?x9213 4.0) 0.0)))))))))
(assert
 (let ((?x9312 (* l_0_6_90 l_0_6_90)))
 (let ((?x9310 (* l_0_6_89 l_0_6_89)))
 (let ((?x9308 (* l_0_6_88 l_0_6_88)))
 (let ((?x9306 (* l_0_6_87 l_0_6_87)))
 (let ((?x9304 (* l_0_6_86 l_0_6_86)))
 (let ((?x5073 (* l_0_6_31 l_0_6_31)))
 (let ((?x9130 (* 4.0 l_0_6_31)))
 (let ((?x9286 (* ?x9130 l_0_6_41)))
 (let ((?x9127 (* l_0_6_16 l_0_6_16)))
 (let ((?x9282 (* 4.0 l_0_6_16)))
 (let ((?x9283 (* ?x9282 l_0_6_26)))
 (let ((?x9271 (* l_0_6_120 l_0_6_120)))
 (let ((?x9266 (* l_0_6_119 l_0_6_119)))
 (let ((?x9264 (* l_0_6_118 l_0_6_118)))
 (let ((?x9262 (* l_0_6_117 l_0_6_117)))
 (let ((?x9260 (* l_0_6_116 l_0_6_116)))
 (let ((?x9255 (* l_0_6_105 l_0_6_105)))
 (let ((?x9253 (* l_0_6_104 l_0_6_104)))
 (let ((?x9251 (* l_0_6_103 l_0_6_103)))
 (let ((?x9252 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x9251)))
 (let ((?x9261 (- (+ (- (- ?x9252 ?x9253) ?x9255) (* 1.0 (* l_0_6_11 l_0_6_11))) ?x9260)))
 (let ((?x9270 (+ (- (- (- ?x9261 ?x9262) ?x9264) ?x9266) (* 1.0 (* l_0_6_12 l_0_6_12)))))
 (let ((?x9278 (+ (+ (- ?x9270 ?x9271) (* 1.0 (* l_0_6_13 l_0_6_13))) (* 1.0 (* l_0_6_14 l_0_6_14)))))
 (let ((?x9287 (- (- (+ (+ ?x9278 (* 1.0 (* l_0_6_15 l_0_6_15))) ?x9283) ?x9127) ?x9286)))
 (let ((?x9294 (+ (+ (+ ?x9287 ?x5073) (* 1.0 (* l_0_6_56 l_0_6_56))) (* 1.0 (* l_0_6_57 l_0_6_57)))))
 (let ((?x9300 (+ (+ ?x9294 (* 1.0 (* l_0_6_58 l_0_6_58))) (* 1.0 (* l_0_6_59 l_0_6_59)))))
 (let ((?x9309 (- (- (- (+ ?x9300 (* 1.0 (* l_0_6_60 l_0_6_60))) ?x9304) ?x9306) ?x9308)))
 (= (- (- (- ?x9309 ?x9310) ?x9312) 1.0) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x9359 (* l_0_6_91 l_0_6_91)))
 (let ((?x9357 (* l_0_6_76 l_0_6_76)))
 (let ((?x9353 (* l_0_6_106 l_0_6_106)))
 (let ((?x9352 (+ (+ (* (- 2.0) _a_0_) (* _a_0_ _a_0_)) (* 1.0 (* l_0_6_1 l_0_6_1)))))
 (let ((?x9360 (- (- (+ (- ?x9352 ?x9353) (* 1.0 (* l_0_6_46 l_0_6_46))) ?x9357) ?x9359)))
 (= ?x9360 0.0)))))))
(assert
 (let ((?x9405 (* l_0_6_96 l_0_6_96)))
 (let ((?x9403 (* l_0_6_95 l_0_6_95)))
 (let ((?x9401 (* l_0_6_94 l_0_6_94)))
 (let ((?x9399 (* l_0_6_81 l_0_6_81)))
 (let ((?x9397 (* l_0_6_80 l_0_6_80)))
 (let ((?x9395 (* l_0_6_79 l_0_6_79)))
 (let ((?x5073 (* l_0_6_31 l_0_6_31)))
 (let ((?x9130 (* 4.0 l_0_6_31)))
 (let ((?x9374 (* ?x9130 l_0_6_34)))
 (let ((?x9127 (* l_0_6_16 l_0_6_16)))
 (let ((?x9282 (* 4.0 l_0_6_16)))
 (let ((?x9371 (* ?x9282 l_0_6_19)))
 (let ((?x9369 (* l_0_6_111 l_0_6_111)))
 (let ((?x9367 (* l_0_6_110 l_0_6_110)))
 (let ((?x9372 (- (- (- (- (* _a_1_ _a_1_) (* l_0_6_109 l_0_6_109)) ?x9367) ?x9369) ?x9371)))
 (let ((?x9379 (+ (- (+ (+ ?x9372 ?x9127) ?x9374) ?x5073) (* 1.0 (* l_0_6_4 l_0_6_4)))))
 (let ((?x9385 (+ (+ ?x9379 (* 1.0 (* l_0_6_49 l_0_6_49))) (* 1.0 (* l_0_6_5 l_0_6_5)))))
 (let ((?x9391 (+ (+ ?x9385 (* 1.0 (* l_0_6_50 l_0_6_50))) (* 1.0 (* l_0_6_51 l_0_6_51)))))
 (let ((?x9400 (- (- (- (+ ?x9391 (* 1.0 (* l_0_6_6 l_0_6_6))) ?x9395) ?x9397) ?x9399)))
 (= (- (- (- ?x9400 ?x9401) ?x9403) ?x9405) 0.0)))))))))))))))))))))
(assert
 (let ((?x9133 (* 2.0 l_0_6_46)))
 (let ((?x9449 (* ?x9133 l_0_6_56)))
 (let ((?x9127 (* l_0_6_16 l_0_6_16)))
 (let ((?x9226 (* 2.0 ?x9127)))
 (let ((?x9442 (- (* (* 2.0 l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_101) l_0_6_91))))
 (let ((?x9448 (- (+ (- ?x9442 (* (* 2.0 l_0_6_106) l_0_6_116)) ?x9226) (* (* 2.0 l_0_6_31) l_0_6_31))))
 (= (+ (- (+ ?x9448 ?x9449) (* (* 2.0 l_0_6_76) l_0_6_86)) 2.0) 0.0))))))))
(assert
 (let ((?x9504 (* 2.0 l_0_6_48)))
 (let ((?x9505 (* ?x9504 l_0_6_53)))
 (let ((?x9501 (* 2.0 l_0_6_47)))
 (let ((?x9502 (* ?x9501 l_0_6_52)))
 (let ((?x9133 (* 2.0 l_0_6_46)))
 (let ((?x9134 (* ?x9133 l_0_6_52)))
 (let ((?x9495 (* 8.0 l_0_6_31)))
 (let ((?x9498 (* ?x9495 l_0_6_37)))
 (let ((?x9496 (* ?x9495 l_0_6_32)))
 (let ((?x9492 (* 2.0 l_0_6_3)))
 (let ((?x9493 (* ?x9492 l_0_6_8)))
 (let ((?x9489 (* 2.0 l_0_6_2)))
 (let ((?x9490 (* ?x9489 l_0_6_7)))
 (let ((?x9484 (* 8.0 l_0_6_16)))
 (let ((?x9487 (* ?x9484 l_0_6_22)))
 (let ((?x9485 (* ?x9484 l_0_6_17)))
 (let ((?x9480 (- (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 2.0 l_0_6_107) l_0_6_112))))
 (let ((?x9491 (+ (+ (+ (- ?x9480 (* (* 2.0 l_0_6_108) l_0_6_113)) ?x9485) ?x9487) ?x9490)))
 (let ((?x9509 (- (+ (+ (- (- (- (+ ?x9491 ?x9493) ?x9496) ?x9498) ?x9134) ?x9502) ?x9505) (* (* 2.0 l_0_6_61) l_0_6_67))))
 (let ((?x9515 (- (- ?x9509 (* (* 2.0 l_0_6_77) l_0_6_82)) (* (* 2.0 l_0_6_78) l_0_6_83))))
 (let ((?x9521 (- (- ?x9515 (* (* 2.0 l_0_6_92) l_0_6_97)) (* (* 2.0 l_0_6_93) l_0_6_98))))
 (= ?x9521 0.0)))))))))))))))))))))))
(assert
 (let ((?x9593 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x9589 (* 2.0 l_0_6_51)))
 (let ((?x9590 (* ?x9589 l_0_6_54)))
 (let ((?x9586 (* 2.0 l_0_6_50)))
 (let ((?x9587 (* ?x9586 l_0_6_53)))
 (let ((?x9584 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x9580 (* 2.0 l_0_6_49)))
 (let ((?x9581 (* ?x9580 l_0_6_52)))
 (let ((?x9578 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x9130 (* 4.0 l_0_6_31)))
 (let ((?x9575 (* ?x9130 l_0_6_37)))
 (let ((?x9495 (* 8.0 l_0_6_31)))
 (let ((?x9573 (* ?x9495 l_0_6_34)))
 (let ((?x9282 (* 4.0 l_0_6_16)))
 (let ((?x9571 (* ?x9282 l_0_6_22)))
 (let ((?x9484 (* 8.0 l_0_6_16)))
 (let ((?x9569 (* ?x9484 l_0_6_19)))
 (let ((?x9562 (- (* (* (- 2.0) l_0_6_1) l_0_6_4) (* (* 2.0 l_0_6_109) l_0_6_112))))
 (let ((?x9568 (- (- ?x9562 (* (* 2.0 l_0_6_110) l_0_6_113)) (* (* 2.0 l_0_6_111) l_0_6_114))))
 (let ((?x9585 (+ (+ (+ (+ (- (- (+ ?x9568 ?x9569) ?x9571) ?x9573) ?x9575) ?x9578) ?x9581) ?x9584)))
 (let ((?x9597 (- (+ (+ (+ ?x9585 ?x9587) ?x9590) ?x9593) (* (* 2.0 l_0_6_79) l_0_6_82))))
 (let ((?x9603 (- (- ?x9597 (* (* 2.0 l_0_6_80) l_0_6_83)) (* (* 2.0 l_0_6_81) l_0_6_84))))
 (let ((?x9609 (- (- ?x9603 (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x9609 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x9702 (* l_0_6_99 l_0_6_99)))
 (let ((?x9700 (* l_0_6_98 l_0_6_98)))
 (let ((?x9698 (* l_0_6_97 l_0_6_97)))
 (let ((?x9693 (* l_0_6_85 l_0_6_85)))
 (let ((?x9691 (* l_0_6_84 l_0_6_84)))
 (let ((?x9689 (* l_0_6_83 l_0_6_83)))
 (let ((?x9687 (* l_0_6_82 l_0_6_82)))
 (let ((?x9495 (* 8.0 l_0_6_31)))
 (let ((?x9498 (* ?x9495 l_0_6_37)))
 (let ((?x9484 (* 8.0 l_0_6_16)))
 (let ((?x9487 (* ?x9484 l_0_6_22)))
 (let ((?x9665 (* l_0_6_115 l_0_6_115)))
 (let ((?x9663 (* l_0_6_114 l_0_6_114)))
 (let ((?x9661 (* l_0_6_113 l_0_6_113)))
 (let ((?x9659 (* l_0_6_112 l_0_6_112)))
 (let ((?x9657 (* l_0_6_100 l_0_6_100)))
 (let ((?x9656 (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) (* 1.0 (* l_0_6_10 l_0_6_10)))))
 (let ((?x9668 (- (+ (- (- (- (- (- ?x9656 ?x9657) ?x9659) ?x9661) ?x9663) ?x9665) ?x9487) ?x9498)))
 (let ((?x9674 (+ (+ ?x9668 (* 1.0 (* l_0_6_52 l_0_6_52))) (* 1.0 (* l_0_6_53 l_0_6_53)))))
 (let ((?x9680 (+ (+ ?x9674 (* 1.0 (* l_0_6_54 l_0_6_54))) (* 1.0 (* l_0_6_55 l_0_6_55)))))
 (let ((?x9686 (+ (+ ?x9680 (* 1.0 (* l_0_6_7 l_0_6_7))) (* 1.0 (* l_0_6_8 l_0_6_8)))))
 (let ((?x9697 (+ (- (- (- (- ?x9686 ?x9687) ?x9689) ?x9691) ?x9693) (* 1.0 (* l_0_6_9 l_0_6_9)))))
 (= (- (- (- ?x9697 ?x9698) ?x9700) ?x9702) 0.0))))))))))))))))))))))))
(assert
 (let ((?x9763 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x9760 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x9757 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x9754 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x9495 (* 8.0 l_0_6_31)))
 (let ((?x9751 (* ?x9495 l_0_6_41)))
 (let ((?x9130 (* 4.0 l_0_6_31)))
 (let ((?x9575 (* ?x9130 l_0_6_37)))
 (let ((?x9484 (* 8.0 l_0_6_16)))
 (let ((?x9748 (* ?x9484 l_0_6_26)))
 (let ((?x9282 (* 4.0 l_0_6_16)))
 (let ((?x9571 (* ?x9282 l_0_6_22)))
 (let ((?x9744 (* 2.0 l_0_6_13)))
 (let ((?x9745 (* ?x9744 l_0_6_9)))
 (let ((?x9741 (* 2.0 l_0_6_12)))
 (let ((?x9742 (* ?x9741 l_0_6_8)))
 (let ((?x9726 (* 2.0 l_0_6_11)))
 (let ((?x9727 (* ?x9726 l_0_6_7)))
 (let ((?x6718 (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_10) l_0_6_14))))
 (let ((?x9719 (- (- ?x6718 (* (* 2.0 l_0_6_100) l_0_6_104)) (* (* 2.0 l_0_6_101) l_0_6_97))))
 (let ((?x9725 (- (- ?x9719 (* (* 2.0 l_0_6_102) l_0_6_98)) (* (* 2.0 l_0_6_103) l_0_6_99))))
 (let ((?x9734 (- (- (+ ?x9725 ?x9727) (* (* 2.0 l_0_6_112) l_0_6_116)) (* (* 2.0 l_0_6_113) l_0_6_117))))
 (let ((?x9740 (- (- ?x9734 (* (* 2.0 l_0_6_114) l_0_6_118)) (* (* 2.0 l_0_6_115) l_0_6_119))))
 (let ((?x9755 (+ (- (- (+ (+ (+ (+ ?x9740 ?x9742) ?x9745) ?x9571) ?x9748) ?x9575) ?x9751) ?x9754)))
 (let ((?x9767 (- (+ (+ (+ ?x9755 ?x9757) ?x9760) ?x9763) (* (* 2.0 l_0_6_82) l_0_6_86))))
 (let ((?x9773 (- (- ?x9767 (* (* 2.0 l_0_6_83) l_0_6_87)) (* (* 2.0 l_0_6_84) l_0_6_88))))
 (= (- ?x9773 (* (* 2.0 l_0_6_85) l_0_6_89)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9504 (* 2.0 l_0_6_48)))
 (let ((?x9505 (* ?x9504 l_0_6_53)))
 (let ((?x9501 (* 2.0 l_0_6_47)))
 (let ((?x9502 (* ?x9501 l_0_6_52)))
 (let ((?x9857 (* 4.0 l_0_6_33)))
 (let ((?x9858 (* ?x9857 l_0_6_33)))
 (let ((?x9854 (* 8.0 l_0_6_33)))
 (let ((?x9855 (* ?x9854 l_0_6_38)))
 (let ((?x9851 (* 4.0 l_0_6_32)))
 (let ((?x9852 (* ?x9851 l_0_6_32)))
 (let ((?x9848 (* 8.0 l_0_6_32)))
 (let ((?x9849 (* ?x9848 l_0_6_37)))
 (let ((?x9846 (* l_0_6_3 l_0_6_3)))
 (let ((?x9844 (* l_0_6_2 l_0_6_2)))
 (let ((?x9841 (* l_0_6_18 l_0_6_18)))
 (let ((?x9842 (* 4.0 ?x9841)))
 (let ((?x9838 (* 8.0 l_0_6_18)))
 (let ((?x9839 (* ?x9838 l_0_6_23)))
 (let ((?x9835 (* l_0_6_17 l_0_6_17)))
 (let ((?x9836 (* 4.0 ?x9835)))
 (let ((?x9833 (* 8.0 l_0_6_17)))
 (let ((?x9834 (* ?x9833 l_0_6_22)))
 (let ((?x9853 (- (- (- (- (+ (+ (+ ?x9834 ?x9836) ?x9839) ?x9842) ?x9844) ?x9846) ?x9849) ?x9852)))
 (let ((?x9864 (- (- (- (- (- ?x9853 ?x9855) ?x9858) ?x9502) ?x9505) (* (* 2.0 l_0_6_62) l_0_6_67))))
 (= (- ?x9864 (* (* 2.0 l_0_6_63) l_0_6_68)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9589 (* 2.0 l_0_6_51)))
 (let ((?x9590 (* ?x9589 l_0_6_54)))
 (let ((?x9586 (* 2.0 l_0_6_50)))
 (let ((?x9587 (* ?x9586 l_0_6_53)))
 (let ((?x9580 (* 2.0 l_0_6_49)))
 (let ((?x9581 (* ?x9580 l_0_6_52)))
 (let ((?x9923 (* 8.0 l_0_6_36)))
 (let ((?x9924 (* ?x9923 l_0_6_39)))
 (let ((?x9920 (* 8.0 l_0_6_35)))
 (let ((?x9921 (* ?x9920 l_0_6_38)))
 (let ((?x9917 (* 8.0 l_0_6_34)))
 (let ((?x9918 (* ?x9917 l_0_6_37)))
 (let ((?x9857 (* 4.0 l_0_6_33)))
 (let ((?x9915 (* ?x9857 l_0_6_38)))
 (let ((?x9854 (* 8.0 l_0_6_33)))
 (let ((?x9913 (* ?x9854 l_0_6_35)))
 (let ((?x9851 (* 4.0 l_0_6_32)))
 (let ((?x9911 (* ?x9851 l_0_6_37)))
 (let ((?x9848 (* 8.0 l_0_6_32)))
 (let ((?x9909 (* ?x9848 l_0_6_34)))
 (let ((?x9492 (* 2.0 l_0_6_3)))
 (let ((?x9907 (* ?x9492 l_0_6_5)))
 (let ((?x9904 (* 8.0 l_0_6_21)))
 (let ((?x9905 (* ?x9904 l_0_6_24)))
 (let ((?x9901 (* 8.0 l_0_6_20)))
 (let ((?x9902 (* ?x9901 l_0_6_23)))
 (let ((?x9489 (* 2.0 l_0_6_2)))
 (let ((?x9899 (* ?x9489 l_0_6_4)))
 (let ((?x9896 (* 8.0 l_0_6_19)))
 (let ((?x9897 (* ?x9896 l_0_6_22)))
 (let ((?x9893 (* 4.0 l_0_6_18)))
 (let ((?x9894 (* ?x9893 l_0_6_23)))
 (let ((?x9838 (* 8.0 l_0_6_18)))
 (let ((?x9891 (* ?x9838 l_0_6_20)))
 (let ((?x9888 (* 4.0 l_0_6_17)))
 (let ((?x9889 (* ?x9888 l_0_6_22)))
 (let ((?x9833 (* 8.0 l_0_6_17)))
 (let ((?x9887 (* ?x9833 l_0_6_19)))
 (let ((?x9906 (+ (+ (- (+ (- (+ (- ?x9887 ?x9889) ?x9891) ?x9894) ?x9897) ?x9899) ?x9902) ?x9905)))
 (let ((?x9922 (- (- (+ (- (+ (- (- ?x9906 ?x9907) ?x9909) ?x9911) ?x9913) ?x9915) ?x9918) ?x9921)))
 (let ((?x9931 (- (- (- (- (- ?x9922 ?x9924) ?x9581) ?x9587) ?x9590) (* (* 2.0 l_0_6_64) l_0_6_67))))
 (let ((?x9937 (- (- ?x9931 (* (* 2.0 l_0_6_65) l_0_6_68)) (* (* 2.0 l_0_6_66) l_0_6_69))))
 (= ?x9937 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10002 (* l_0_6_70 l_0_6_70)))
 (let ((?x10000 (* l_0_6_69 l_0_6_69)))
 (let ((?x9998 (* l_0_6_68 l_0_6_68)))
 (let ((?x9996 (* l_0_6_67 l_0_6_67)))
 (let ((?x9678 (* l_0_6_55 l_0_6_55)))
 (let ((?x9675 (* l_0_6_54 l_0_6_54)))
 (let ((?x9672 (* l_0_6_53 l_0_6_53)))
 (let ((?x9669 (* l_0_6_52 l_0_6_52)))
 (let ((?x9989 (* 4.0 l_0_6_40)))
 (let ((?x9990 (* ?x9989 l_0_6_40)))
 (let ((?x9986 (* 4.0 l_0_6_39)))
 (let ((?x9987 (* ?x9986 l_0_6_39)))
 (let ((?x9983 (* 4.0 l_0_6_38)))
 (let ((?x9984 (* ?x9983 l_0_6_38)))
 (let ((?x9980 (* 4.0 l_0_6_37)))
 (let ((?x9981 (* ?x9980 l_0_6_37)))
 (let ((?x9854 (* 8.0 l_0_6_33)))
 (let ((?x9855 (* ?x9854 l_0_6_38)))
 (let ((?x9848 (* 8.0 l_0_6_32)))
 (let ((?x9849 (* ?x9848 l_0_6_37)))
 (let ((?x9492 (* 2.0 l_0_6_3)))
 (let ((?x9493 (* ?x9492 l_0_6_8)))
 (let ((?x9974 (* l_0_6_25 l_0_6_25)))
 (let ((?x9975 (* 4.0 ?x9974)))
 (let ((?x9971 (* l_0_6_24 l_0_6_24)))
 (let ((?x9972 (* 4.0 ?x9971)))
 (let ((?x9968 (* l_0_6_23 l_0_6_23)))
 (let ((?x9969 (* 4.0 ?x9968)))
 (let ((?x2731 (* l_0_6_22 l_0_6_22)))
 (let ((?x6923 (* 4.0 ?x2731)))
 (let ((?x9489 (* 2.0 l_0_6_2)))
 (let ((?x9490 (* ?x9489 l_0_6_7)))
 (let ((?x9838 (* 8.0 l_0_6_18)))
 (let ((?x9839 (* ?x9838 l_0_6_23)))
 (let ((?x9833 (* 8.0 l_0_6_17)))
 (let ((?x9834 (* ?x9833 l_0_6_22)))
 (let ((?x9977 (- (+ (+ (+ (+ (- (+ ?x9834 ?x9839) ?x9490) ?x6923) ?x9969) ?x9972) ?x9975) ?x9493)))
 (let ((?x9992 (- (- (- (- (- (- (- ?x9977 ?x9849) ?x9855) ?x9981) ?x9984) ?x9987) ?x9990) ?x9669)))
 (let ((?x10003 (- (- (- (- (- (- (- ?x9992 ?x9672) ?x9675) ?x9678) ?x9996) ?x9998) ?x10000) ?x10002)))
 (= ?x10003 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9763 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x9760 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x9757 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x9754 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x10068 (* (* 8.0 l_0_6_40) l_0_6_44)))
 (let ((?x10065 (* (* 8.0 l_0_6_39) l_0_6_43)))
 (let ((?x10062 (* (* 8.0 l_0_6_38) l_0_6_42)))
 (let ((?x10059 (* (* 8.0 l_0_6_37) l_0_6_41)))
 (let ((?x9854 (* 8.0 l_0_6_33)))
 (let ((?x10056 (* ?x9854 l_0_6_42)))
 (let ((?x9857 (* 4.0 l_0_6_33)))
 (let ((?x9915 (* ?x9857 l_0_6_38)))
 (let ((?x9848 (* 8.0 l_0_6_32)))
 (let ((?x10053 (* ?x9848 l_0_6_41)))
 (let ((?x9851 (* 4.0 l_0_6_32)))
 (let ((?x9911 (* ?x9851 l_0_6_37)))
 (let ((?x10050 (* (* 8.0 l_0_6_25) l_0_6_29)))
 (let ((?x10047 (* (* 8.0 l_0_6_24) l_0_6_28)))
 (let ((?x10044 (* (* 8.0 l_0_6_23) l_0_6_27)))
 (let ((?x10041 (* (* 8.0 l_0_6_22) l_0_6_26)))
 (let ((?x9838 (* 8.0 l_0_6_18)))
 (let ((?x10038 (* ?x9838 l_0_6_27)))
 (let ((?x9893 (* 4.0 l_0_6_18)))
 (let ((?x9894 (* ?x9893 l_0_6_23)))
 (let ((?x9833 (* 8.0 l_0_6_17)))
 (let ((?x10035 (* ?x9833 l_0_6_26)))
 (let ((?x9888 (* 4.0 l_0_6_17)))
 (let ((?x9889 (* ?x9888 l_0_6_22)))
 (let ((?x9741 (* 2.0 l_0_6_12)))
 (let ((?x10032 (* ?x9741 l_0_6_3)))
 (let ((?x10037 (+ (+ (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x10032) ?x9889) ?x10035) ?x9894)))
 (let ((?x10054 (- (- (+ (+ (+ (+ (+ ?x10037 ?x10038) ?x10041) ?x10044) ?x10047) ?x10050) ?x9911) ?x10053)))
 (let ((?x10070 (- (- (- (- (- (- (- ?x10054 ?x9915) ?x10056) ?x10059) ?x10062) ?x10065) ?x10068) ?x9754)))
 (let ((?x10076 (- (- (- (- ?x10070 ?x9757) ?x9760) ?x9763) (* (* 2.0 l_0_6_67) l_0_6_71))))
 (let ((?x10082 (- (- ?x10076 (* (* 2.0 l_0_6_68) l_0_6_72)) (* (* 2.0 l_0_6_69) l_0_6_73))))
 (= (- ?x10082 (* (* 2.0 l_0_6_70) l_0_6_74)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9392 (* l_0_6_6 l_0_6_6)))
 (let ((?x9383 (* l_0_6_5 l_0_6_5)))
 (let ((?x9377 (* l_0_6_4 l_0_6_4)))
 (let ((?x10175 (* 4.0 l_0_6_36)))
 (let ((?x10178 (* ?x10175 l_0_6_36)))
 (let ((?x10176 (* ?x10175 l_0_6_39)))
 (let ((?x10170 (* 4.0 l_0_6_35)))
 (let ((?x10173 (* ?x10170 l_0_6_35)))
 (let ((?x10171 (* ?x10170 l_0_6_38)))
 (let ((?x10165 (* 4.0 l_0_6_34)))
 (let ((?x10168 (* ?x10165 l_0_6_34)))
 (let ((?x10166 (* ?x10165 l_0_6_37)))
 (let ((?x9446 (* 2.0 l_0_6_31)))
 (let ((?x10163 (* ?x9446 l_0_6_37)))
 (let ((?x10160 (* l_0_6_21 l_0_6_21)))
 (let ((?x10161 (* 4.0 ?x10160)))
 (let ((?x10157 (* 4.0 l_0_6_21)))
 (let ((?x10158 (* ?x10157 l_0_6_24)))
 (let ((?x10154 (* l_0_6_20 l_0_6_20)))
 (let ((?x10155 (* 4.0 ?x10154)))
 (let ((?x10151 (* 4.0 l_0_6_20)))
 (let ((?x10152 (* ?x10151 l_0_6_23)))
 (let ((?x10148 (* l_0_6_19 l_0_6_19)))
 (let ((?x10149 (* 4.0 ?x10148)))
 (let ((?x10145 (* 4.0 l_0_6_19)))
 (let ((?x10146 (* ?x10145 l_0_6_22)))
 (let ((?x9203 (* 2.0 l_0_6_16)))
 (let ((?x10144 (* ?x9203 l_0_6_22)))
 (let ((?x10164 (- (+ (- (+ (- (+ (- ?x10144 ?x10146) ?x10149) ?x10152) ?x10155) ?x10158) ?x10161) ?x10163)))
 (let ((?x10180 (- (- (+ (- (+ (- (+ ?x10164 ?x10166) ?x10168) ?x10171) ?x10173) ?x10176) ?x10178) ?x9377)))
 (= (- (- ?x10180 ?x9383) ?x9392) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x9593 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x9584 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x10016 (* l_0_6_40 l_0_6_40)))
 (let ((?x10234 (* 2.0 ?x10016)))
 (let ((?x9578 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x6952 (* l_0_6_39 l_0_6_39)))
 (let ((?x10231 (* 2.0 ?x6952)))
 (let ((?x2921 (* l_0_6_38 l_0_6_38)))
 (let ((?x10229 (* 2.0 ?x2921)))
 (let ((?x6950 (* l_0_6_37 l_0_6_37)))
 (let ((?x10227 (* 2.0 ?x6950)))
 (let ((?x9923 (* 8.0 l_0_6_36)))
 (let ((?x9924 (* ?x9923 l_0_6_39)))
 (let ((?x9920 (* 8.0 l_0_6_35)))
 (let ((?x9921 (* ?x9920 l_0_6_38)))
 (let ((?x9917 (* 8.0 l_0_6_34)))
 (let ((?x9918 (* ?x9917 l_0_6_37)))
 (let ((?x9904 (* 8.0 l_0_6_21)))
 (let ((?x9905 (* ?x9904 l_0_6_24)))
 (let ((?x9901 (* 8.0 l_0_6_20)))
 (let ((?x9902 (* ?x9901 l_0_6_23)))
 (let ((?x9896 (* 8.0 l_0_6_19)))
 (let ((?x9897 (* ?x9896 l_0_6_22)))
 (let ((?x10217 (- (- (+ (+ ?x9897 ?x9902) ?x9905) (* (* 2.0 l_0_6_22) l_0_6_22)) (* (* 2.0 l_0_6_23) l_0_6_23))))
 (let ((?x10223 (- (- ?x10217 (* (* 2.0 l_0_6_24) l_0_6_24)) (* (* 2.0 l_0_6_25) l_0_6_25))))
 (let ((?x10233 (- (+ (+ (+ (- (- (- ?x10223 ?x9918) ?x9921) ?x9924) ?x10227) ?x10229) ?x10231) ?x9578)))
 (= (- (- (+ ?x10233 ?x10234) ?x9584) ?x9593) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9989 (* 4.0 l_0_6_40)))
 (let ((?x10291 (* ?x9989 l_0_6_44)))
 (let ((?x9986 (* 4.0 l_0_6_39)))
 (let ((?x10289 (* ?x9986 l_0_6_43)))
 (let ((?x9983 (* 4.0 l_0_6_38)))
 (let ((?x10287 (* ?x9983 l_0_6_42)))
 (let ((?x9980 (* 4.0 l_0_6_37)))
 (let ((?x10285 (* ?x9980 l_0_6_41)))
 (let ((?x9923 (* 8.0 l_0_6_36)))
 (let ((?x10283 (* ?x9923 l_0_6_43)))
 (let ((?x10175 (* 4.0 l_0_6_36)))
 (let ((?x10176 (* ?x10175 l_0_6_39)))
 (let ((?x9920 (* 8.0 l_0_6_35)))
 (let ((?x10280 (* ?x9920 l_0_6_42)))
 (let ((?x10170 (* 4.0 l_0_6_35)))
 (let ((?x10171 (* ?x10170 l_0_6_38)))
 (let ((?x9917 (* 8.0 l_0_6_34)))
 (let ((?x10277 (* ?x9917 l_0_6_41)))
 (let ((?x10165 (* 4.0 l_0_6_34)))
 (let ((?x10166 (* ?x10165 l_0_6_37)))
 (let ((?x10274 (* (* 4.0 l_0_6_25) l_0_6_29)))
 (let ((?x10271 (* (* 4.0 l_0_6_24) l_0_6_28)))
 (let ((?x10268 (* (* 4.0 l_0_6_23) l_0_6_27)))
 (let ((?x10265 (* (* 4.0 l_0_6_22) l_0_6_26)))
 (let ((?x9904 (* 8.0 l_0_6_21)))
 (let ((?x10262 (* ?x9904 l_0_6_28)))
 (let ((?x10157 (* 4.0 l_0_6_21)))
 (let ((?x10158 (* ?x10157 l_0_6_24)))
 (let ((?x9901 (* 8.0 l_0_6_20)))
 (let ((?x10259 (* ?x9901 l_0_6_27)))
 (let ((?x10151 (* 4.0 l_0_6_20)))
 (let ((?x10152 (* ?x10151 l_0_6_23)))
 (let ((?x9896 (* 8.0 l_0_6_19)))
 (let ((?x10256 (* ?x9896 l_0_6_26)))
 (let ((?x10145 (* 4.0 l_0_6_19)))
 (let ((?x10146 (* ?x10145 l_0_6_22)))
 (let ((?x9744 (* 2.0 l_0_6_13)))
 (let ((?x10253 (* ?x9744 l_0_6_6)))
 (let ((?x9741 (* 2.0 l_0_6_12)))
 (let ((?x3376 (* ?x9741 l_0_6_5)))
 (let ((?x10257 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x3376) ?x10253) ?x10146) ?x10256)))
 (let ((?x10272 (- (- (- (+ (+ (+ (+ ?x10257 ?x10152) ?x10259) ?x10158) ?x10262) ?x10265) ?x10268) ?x10271)))
 (let ((?x10284 (- (- (- (- (- (- (- ?x10272 ?x10274) ?x10166) ?x10277) ?x10171) ?x10280) ?x10176) ?x10283)))
 (= (+ (+ (+ (+ ?x10284 ?x10285) ?x10287) ?x10289) ?x10291) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9695 (* l_0_6_9 l_0_6_9)))
 (let ((?x9684 (* l_0_6_8 l_0_6_8)))
 (let ((?x9681 (* l_0_6_7 l_0_6_7)))
 (let ((?x9989 (* 4.0 l_0_6_40)))
 (let ((?x9990 (* ?x9989 l_0_6_40)))
 (let ((?x9986 (* 4.0 l_0_6_39)))
 (let ((?x9987 (* ?x9986 l_0_6_39)))
 (let ((?x9983 (* 4.0 l_0_6_38)))
 (let ((?x9984 (* ?x9983 l_0_6_38)))
 (let ((?x9980 (* 4.0 l_0_6_37)))
 (let ((?x9981 (* ?x9980 l_0_6_37)))
 (let ((?x9974 (* l_0_6_25 l_0_6_25)))
 (let ((?x9975 (* 4.0 ?x9974)))
 (let ((?x9971 (* l_0_6_24 l_0_6_24)))
 (let ((?x9972 (* 4.0 ?x9971)))
 (let ((?x9968 (* l_0_6_23 l_0_6_23)))
 (let ((?x9969 (* 4.0 ?x9968)))
 (let ((?x10305 (+ (+ (* (- l_0_6_10) l_0_6_10) (* 4.0 (* l_0_6_22 l_0_6_22))) ?x9969)))
 (let ((?x10312 (- (- (- (- (- (+ (+ ?x10305 ?x9972) ?x9975) ?x9981) ?x9984) ?x9987) ?x9990) ?x9681)))
 (= (- (- ?x10312 ?x9684) ?x9695) 0.0)))))))))))))))))))))
(assert
 (let ((?x10068 (* (* 8.0 l_0_6_40) l_0_6_44)))
 (let ((?x10065 (* (* 8.0 l_0_6_39) l_0_6_43)))
 (let ((?x10062 (* (* 8.0 l_0_6_38) l_0_6_42)))
 (let ((?x10059 (* (* 8.0 l_0_6_37) l_0_6_41)))
 (let ((?x10050 (* (* 8.0 l_0_6_25) l_0_6_29)))
 (let ((?x10047 (* (* 8.0 l_0_6_24) l_0_6_28)))
 (let ((?x10044 (* (* 8.0 l_0_6_23) l_0_6_27)))
 (let ((?x10041 (* (* 8.0 l_0_6_22) l_0_6_26)))
 (let ((?x9744 (* 2.0 l_0_6_13)))
 (let ((?x9745 (* ?x9744 l_0_6_9)))
 (let ((?x9741 (* 2.0 l_0_6_12)))
 (let ((?x9742 (* ?x9741 l_0_6_8)))
 (let ((?x9726 (* 2.0 l_0_6_11)))
 (let ((?x9727 (* ?x9726 l_0_6_7)))
 (let ((?x7333 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x9727) ?x9742) ?x9745) ?x10041)))
 (let ((?x7331 (+ (+ (+ ?x7333 (* 2.0 (* l_0_6_22 l_0_6_22))) ?x10044) (* 2.0 (* l_0_6_23 l_0_6_23)))))
 (let ((?x10322 (+ (+ (+ (+ ?x7331 ?x10047) (* 2.0 (* l_0_6_24 l_0_6_24))) ?x10050) (* 2.0 (* l_0_6_25 l_0_6_25)))))
 (let ((?x10330 (- (- (- (- ?x10322 ?x10059) (* (* 2.0 l_0_6_37) l_0_6_37)) ?x10062) (* (* 2.0 l_0_6_38) l_0_6_38))))
 (let ((?x10338 (- (- (- (- ?x10330 ?x10065) (* (* 2.0 l_0_6_39) l_0_6_39)) ?x10068) (* (* 2.0 l_0_6_40) l_0_6_40))))
 (= ?x10338 0.0)))))))))))))))))))))
(assert
 (let ((?x10372 (* (* 4.0 l_0_6_45) l_0_6_45)))
 (let ((?x10369 (* (* 4.0 l_0_6_44) l_0_6_44)))
 (let ((?x10366 (* (* 4.0 l_0_6_43) l_0_6_43)))
 (let ((?x10363 (* (* 4.0 l_0_6_42) l_0_6_42)))
 (let ((?x10360 (* (* 4.0 l_0_6_41) l_0_6_41)))
 (let ((?x9989 (* 4.0 l_0_6_40)))
 (let ((?x10291 (* ?x9989 l_0_6_44)))
 (let ((?x9986 (* 4.0 l_0_6_39)))
 (let ((?x10289 (* ?x9986 l_0_6_43)))
 (let ((?x9983 (* 4.0 l_0_6_38)))
 (let ((?x10287 (* ?x9983 l_0_6_42)))
 (let ((?x9980 (* 4.0 l_0_6_37)))
 (let ((?x10285 (* ?x9980 l_0_6_41)))
 (let ((?x9446 (* 2.0 l_0_6_31)))
 (let ((?x10163 (* ?x9446 l_0_6_37)))
 (let ((?x10351 (* l_0_6_30 l_0_6_30)))
 (let ((?x10352 (* 4.0 ?x10351)))
 (let ((?x10348 (* l_0_6_29 l_0_6_29)))
 (let ((?x10349 (* 4.0 ?x10348)))
 (let ((?x10345 (* l_0_6_28 l_0_6_28)))
 (let ((?x10346 (* 4.0 ?x10345)))
 (let ((?x10342 (* l_0_6_27 l_0_6_27)))
 (let ((?x10343 (* 4.0 ?x10342)))
 (let ((?x3495 (* l_0_6_26 l_0_6_26)))
 (let ((?x3501 (* 4.0 ?x3495)))
 (let ((?x10274 (* (* 4.0 l_0_6_25) l_0_6_29)))
 (let ((?x10271 (* (* 4.0 l_0_6_24) l_0_6_28)))
 (let ((?x10268 (* (* 4.0 l_0_6_23) l_0_6_27)))
 (let ((?x10265 (* (* 4.0 l_0_6_22) l_0_6_26)))
 (let ((?x9203 (* 2.0 l_0_6_16)))
 (let ((?x10144 (* ?x9203 l_0_6_22)))
 (let ((?x9279 (* l_0_6_15 l_0_6_15)))
 (let ((?x9276 (* l_0_6_14 l_0_6_14)))
 (let ((?x9273 (* l_0_6_13 l_0_6_13)))
 (let ((?x3573 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x9273) ?x9276)))
 (let ((?x10341 (+ (+ (+ (+ (+ (- (- ?x3573 ?x9279) ?x10144) ?x10265) ?x10268) ?x10271) ?x10274) ?x3501)))
 (let ((?x10356 (- (- (+ (+ (+ (+ (+ ?x10341 ?x10343) ?x10346) ?x10349) ?x10352) ?x10163) ?x10285) ?x10287)))
 (let ((?x10373 (- (- (- (- (- (- (- ?x10356 ?x10289) ?x10291) ?x10360) ?x10363) ?x10366) ?x10369) ?x10372)))
 (= ?x10373 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10404 (* l_0_6_93 l_0_6_93)))
 (let ((?x10402 (* l_0_6_92 l_0_6_92)))
 (let ((?x10400 (* l_0_6_78 l_0_6_78)))
 (let ((?x10398 (* l_0_6_77 l_0_6_77)))
 (let ((?x9133 (* 2.0 l_0_6_46)))
 (let ((?x9170 (* ?x9133 l_0_6_47)))
 (let ((?x9495 (* 8.0 l_0_6_31)))
 (let ((?x9496 (* ?x9495 l_0_6_32)))
 (let ((?x9484 (* 8.0 l_0_6_16)))
 (let ((?x9485 (* ?x9484 l_0_6_17)))
 (let ((?x10383 (+ (- (* (- l_0_6_107) l_0_6_107) (* l_0_6_108 l_0_6_108)) ?x9485)))
 (let ((?x10387 (+ (+ ?x10383 (* 1.0 (* l_0_6_2 l_0_6_2))) (* 1.0 (* l_0_6_3 l_0_6_3)))))
 (let ((?x10395 (+ (+ (- (- ?x10387 ?x9496) ?x9170) (* 1.0 (* l_0_6_47 l_0_6_47))) (* 1.0 (* l_0_6_48 l_0_6_48)))))
 (let ((?x10403 (- (- (- (- ?x10395 (* (* 2.0 l_0_6_61) l_0_6_62)) ?x10398) ?x10400) ?x10402)))
 (= (- ?x10403 ?x10404) 0.0))))))))))))))))
(assert
 (let ((?x9504 (* 2.0 l_0_6_48)))
 (let ((?x10432 (* ?x9504 l_0_6_50)))
 (let ((?x9501 (* 2.0 l_0_6_47)))
 (let ((?x10430 (* ?x9501 l_0_6_49)))
 (let ((?x9133 (* 2.0 l_0_6_46)))
 (let ((?x9208 (* ?x9133 l_0_6_49)))
 (let ((?x9495 (* 8.0 l_0_6_31)))
 (let ((?x9573 (* ?x9495 l_0_6_34)))
 (let ((?x9130 (* 4.0 l_0_6_31)))
 (let ((?x10426 (* ?x9130 l_0_6_32)))
 (let ((?x9492 (* 2.0 l_0_6_3)))
 (let ((?x9907 (* ?x9492 l_0_6_5)))
 (let ((?x9489 (* 2.0 l_0_6_2)))
 (let ((?x9899 (* ?x9489 l_0_6_4)))
 (let ((?x9484 (* 8.0 l_0_6_16)))
 (let ((?x9569 (* ?x9484 l_0_6_19)))
 (let ((?x9282 (* 4.0 l_0_6_16)))
 (let ((?x10421 (* ?x9282 l_0_6_17)))
 (let ((?x10420 (- (* (* (- 2.0) l_0_6_107) l_0_6_109) (* (* 2.0 l_0_6_108) l_0_6_110))))
 (let ((?x10429 (- (- (+ (+ (+ (+ (- ?x10420 ?x10421) ?x9569) ?x9899) ?x9907) ?x10426) ?x9573) ?x9208)))
 (let ((?x10437 (- (- (+ (+ ?x10429 ?x10430) ?x10432) (* (* 2.0 l_0_6_61) l_0_6_64)) (* (* 2.0 l_0_6_77) l_0_6_79))))
 (let ((?x10441 (- (- ?x10437 (* (* 2.0 l_0_6_78) l_0_6_80)) (* (* 2.0 l_0_6_92) l_0_6_94))))
 (= (- ?x10441 (* (* 2.0 l_0_6_93) l_0_6_95)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x9504 (* 2.0 l_0_6_48)))
 (let ((?x10475 (* ?x9504 l_0_6_57)))
 (let ((?x9501 (* 2.0 l_0_6_47)))
 (let ((?x10473 (* ?x9501 l_0_6_56)))
 (let ((?x9133 (* 2.0 l_0_6_46)))
 (let ((?x9449 (* ?x9133 l_0_6_56)))
 (let ((?x9495 (* 8.0 l_0_6_31)))
 (let ((?x9751 (* ?x9495 l_0_6_41)))
 (let ((?x9130 (* 4.0 l_0_6_31)))
 (let ((?x10426 (* ?x9130 l_0_6_32)))
 (let ((?x9484 (* 8.0 l_0_6_16)))
 (let ((?x9748 (* ?x9484 l_0_6_26)))
 (let ((?x9282 (* 4.0 l_0_6_16)))
 (let ((?x10421 (* ?x9282 l_0_6_17)))
 (let ((?x9741 (* 2.0 l_0_6_12)))
 (let ((?x10032 (* ?x9741 l_0_6_3)))
 (let ((?x10460 (- (* (* (- 2.0) l_0_6_101) l_0_6_92) (* (* 2.0 l_0_6_102) l_0_6_93))))
 (let ((?x10464 (- (- ?x10460 (* (* 2.0 l_0_6_107) l_0_6_116)) (* (* 2.0 l_0_6_108) l_0_6_117))))
 (let ((?x10469 (+ (+ (+ (+ ?x10464 (* (* 2.0 l_0_6_11) l_0_6_2)) ?x10032) ?x10421) ?x9748)))
 (let ((?x10478 (- (+ (+ (- (- (- ?x10469 ?x10426) ?x9751) ?x9449) ?x10473) ?x10475) (* (* 2.0 l_0_6_61) l_0_6_71))))
 (let ((?x10482 (- (- ?x10478 (* (* 2.0 l_0_6_77) l_0_6_86)) (* (* 2.0 l_0_6_78) l_0_6_87))))
 (= ?x10482 0.0)))))))))))))))))))))))
(assert
 (let ((?x9589 (* 2.0 l_0_6_51)))
 (let ((?x10525 (* ?x9589 l_0_6_58)))
 (let ((?x9586 (* 2.0 l_0_6_50)))
 (let ((?x10523 (* ?x9586 l_0_6_57)))
 (let ((?x9580 (* 2.0 l_0_6_49)))
 (let ((?x10521 (* ?x9580 l_0_6_56)))
 (let ((?x9130 (* 4.0 l_0_6_31)))
 (let ((?x9286 (* ?x9130 l_0_6_41)))
 (let ((?x9374 (* ?x9130 l_0_6_34)))
 (let ((?x9282 (* 4.0 l_0_6_16)))
 (let ((?x9283 (* ?x9282 l_0_6_26)))
 (let ((?x9371 (* ?x9282 l_0_6_19)))
 (let ((?x9744 (* 2.0 l_0_6_13)))
 (let ((?x10253 (* ?x9744 l_0_6_6)))
 (let ((?x9741 (* 2.0 l_0_6_12)))
 (let ((?x3376 (* ?x9741 l_0_6_5)))
 (let ((?x10504 (- (* (* (- 2.0) l_0_6_101) l_0_6_94) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x10508 (- (- ?x10504 (* (* 2.0 l_0_6_103) l_0_6_96)) (* (* 2.0 l_0_6_109) l_0_6_116))))
 (let ((?x10512 (- (+ ?x10508 (* (* 2.0 l_0_6_11) l_0_6_4)) (* (* 2.0 l_0_6_110) l_0_6_117))))
 (let ((?x10517 (+ (+ (+ (- ?x10512 (* (* 2.0 l_0_6_111) l_0_6_118)) ?x3376) ?x10253) ?x9371)))
 (let ((?x10528 (- (+ (+ (+ (+ (- (- ?x10517 ?x9283) ?x9374) ?x9286) ?x10521) ?x10523) ?x10525) (* (* 2.0 l_0_6_79) l_0_6_86))))
 (let ((?x10532 (- (- ?x10528 (* (* 2.0 l_0_6_80) l_0_6_87)) (* (* 2.0 l_0_6_81) l_0_6_88))))
 (= ?x10532 0.0))))))))))))))))))))))))
(assert
 (let ((?x10594 (* l_0_6_75 l_0_6_75)))
 (let ((?x10592 (* l_0_6_74 l_0_6_74)))
 (let ((?x10590 (* l_0_6_73 l_0_6_73)))
 (let ((?x10588 (* l_0_6_72 l_0_6_72)))
 (let ((?x10586 (* l_0_6_71 l_0_6_71)))
 (let ((?x9301 (* l_0_6_60 l_0_6_60)))
 (let ((?x9298 (* l_0_6_59 l_0_6_59)))
 (let ((?x9295 (* l_0_6_58 l_0_6_58)))
 (let ((?x9292 (* l_0_6_57 l_0_6_57)))
 (let ((?x9289 (* l_0_6_56 l_0_6_56)))
 (let ((?x10372 (* (* 4.0 l_0_6_45) l_0_6_45)))
 (let ((?x10369 (* (* 4.0 l_0_6_44) l_0_6_44)))
 (let ((?x10366 (* (* 4.0 l_0_6_43) l_0_6_43)))
 (let ((?x10363 (* (* 4.0 l_0_6_42) l_0_6_42)))
 (let ((?x10360 (* (* 4.0 l_0_6_41) l_0_6_41)))
 (let ((?x9857 (* 4.0 l_0_6_33)))
 (let ((?x10574 (* ?x9857 l_0_6_42)))
 (let ((?x9851 (* 4.0 l_0_6_32)))
 (let ((?x10572 (* ?x9851 l_0_6_41)))
 (let ((?x9446 (* 2.0 l_0_6_31)))
 (let ((?x10570 (* ?x9446 l_0_6_32)))
 (let ((?x10351 (* l_0_6_30 l_0_6_30)))
 (let ((?x10352 (* 4.0 ?x10351)))
 (let ((?x10348 (* l_0_6_29 l_0_6_29)))
 (let ((?x10349 (* 4.0 ?x10348)))
 (let ((?x10345 (* l_0_6_28 l_0_6_28)))
 (let ((?x10346 (* 4.0 ?x10345)))
 (let ((?x10342 (* l_0_6_27 l_0_6_27)))
 (let ((?x10343 (* 4.0 ?x10342)))
 (let ((?x3495 (* l_0_6_26 l_0_6_26)))
 (let ((?x3501 (* 4.0 ?x3495)))
 (let ((?x9893 (* 4.0 l_0_6_18)))
 (let ((?x10563 (* ?x9893 l_0_6_27)))
 (let ((?x9888 (* 4.0 l_0_6_17)))
 (let ((?x10561 (* ?x9888 l_0_6_26)))
 (let ((?x10566 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_16) l_0_6_17) ?x10561) ?x10563) ?x3501) ?x10343)))
 (let ((?x10576 (- (- (- (+ (+ (+ (+ ?x10566 ?x10346) ?x10349) ?x10352) ?x10570) ?x10572) ?x10574) ?x10360)))
 (let ((?x10583 (- (- (- (- (- (- (- ?x10576 ?x10363) ?x10366) ?x10369) ?x10372) ?x9289) ?x9292) ?x9295)))
 (let ((?x10595 (- (- (- (- (- (- (- ?x10583 ?x9298) ?x9301) ?x10586) ?x10588) ?x10590) ?x10592) ?x10594)))
 (= ?x10595 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10175 (* 4.0 l_0_6_36)))
 (let ((?x10637 (* ?x10175 l_0_6_43)))
 (let ((?x10170 (* 4.0 l_0_6_35)))
 (let ((?x10635 (* ?x10170 l_0_6_42)))
 (let ((?x10165 (* 4.0 l_0_6_34)))
 (let ((?x10633 (* ?x10165 l_0_6_41)))
 (let ((?x9446 (* 2.0 l_0_6_31)))
 (let ((?x10631 (* ?x9446 l_0_6_34)))
 (let ((?x10157 (* 4.0 l_0_6_21)))
 (let ((?x10614 (* ?x10157 l_0_6_28)))
 (let ((?x10151 (* 4.0 l_0_6_20)))
 (let ((?x10612 (* ?x10151 l_0_6_27)))
 (let ((?x10145 (* 4.0 l_0_6_19)))
 (let ((?x10610 (* ?x10145 l_0_6_26)))
 (let ((?x10618 (- (+ (+ (+ (* (* (- 2.0) l_0_6_16) l_0_6_19) ?x10610) ?x10612) ?x10614) (* (* 2.0 l_0_6_26) l_0_6_26))))
 (let ((?x10624 (- (- ?x10618 (* (* 2.0 l_0_6_27) l_0_6_27)) (* (* 2.0 l_0_6_28) l_0_6_28))))
 (let ((?x10630 (- (- ?x10624 (* (* 2.0 l_0_6_29) l_0_6_29)) (* (* 2.0 l_0_6_30) l_0_6_30))))
 (let ((?x10640 (+ (- (- (- (+ ?x10630 ?x10631) ?x10633) ?x10635) ?x10637) (* 2.0 (* l_0_6_41 l_0_6_41)))))
 (let ((?x10644 (+ (+ ?x10640 (* 2.0 (* l_0_6_42 l_0_6_42))) (* 2.0 (* l_0_6_43 l_0_6_43)))))
 (let ((?x10648 (+ (+ ?x10644 (* 2.0 (* l_0_6_44 l_0_6_44))) (* 2.0 (* l_0_6_45 l_0_6_45)))))
 (= ?x10648 0.0))))))))))))))))))))))
(assert
 (let ((?x9446 (* 2.0 l_0_6_31)))
 (let ((?x10693 (* ?x9446 l_0_6_41)))
 (let ((?x10351 (* l_0_6_30 l_0_6_30)))
 (let ((?x10666 (* 2.0 ?x10351)))
 (let ((?x10348 (* l_0_6_29 l_0_6_29)))
 (let ((?x4491 (* 2.0 ?x10348)))
 (let ((?x10345 (* l_0_6_28 l_0_6_28)))
 (let ((?x10659 (* 2.0 ?x10345)))
 (let ((?x10342 (* l_0_6_27 l_0_6_27)))
 (let ((?x4460 (* 2.0 ?x10342)))
 (let ((?x3495 (* l_0_6_26 l_0_6_26)))
 (let ((?x10652 (* 2.0 ?x3495)))
 (let ((?x10691 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_16) l_0_6_26) ?x10652) ?x4460) ?x10659) ?x4491)))
 (let ((?x10700 (- (- (+ (+ ?x10691 ?x10666) ?x10693) (* (* 2.0 l_0_6_41) l_0_6_41)) (* (* 2.0 l_0_6_42) l_0_6_42))))
 (let ((?x10706 (- (- ?x10700 (* (* 2.0 l_0_6_43) l_0_6_43)) (* (* 2.0 l_0_6_44) l_0_6_44))))
 (= (- ?x10706 (* (* 2.0 l_0_6_45) l_0_6_45)) 0.0)))))))))))))))))
(assert
 (let ((?x6862 (* l_0_6_33 l_0_6_33)))
 (let ((?x2506 (* l_0_6_32 l_0_6_32)))
 (let ((?x4586 (+ (+ (- (* (- l_0_6_17) l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x2506) ?x6862)))
 (= ?x4586 0.0)))))
(assert
 (let ((?x10725 (* 2.0 l_0_6_33)))
 (let ((?x10726 (* ?x10725 l_0_6_35)))
 (let ((?x10722 (* 2.0 l_0_6_32)))
 (let ((?x10723 (* ?x10722 l_0_6_34)))
 (let ((?x10719 (* 2.0 l_0_6_18)))
 (let ((?x10720 (* ?x10719 l_0_6_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x10720) ?x10723) ?x10726) 0.0))))))))
(assert
 (let ((?x10725 (* 2.0 l_0_6_33)))
 (let ((?x10743 (* ?x10725 l_0_6_38)))
 (let ((?x10722 (* 2.0 l_0_6_32)))
 (let ((?x10741 (* ?x10722 l_0_6_37)))
 (let ((?x10719 (* 2.0 l_0_6_18)))
 (let ((?x3196 (* ?x10719 l_0_6_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x3196) ?x10741) ?x10743) 0.0))))))))
(assert
 (let ((?x10725 (* 2.0 l_0_6_33)))
 (let ((?x10752 (* ?x10725 l_0_6_42)))
 (let ((?x10722 (* 2.0 l_0_6_32)))
 (let ((?x3197 (* ?x10722 l_0_6_41)))
 (let ((?x10719 (* 2.0 l_0_6_18)))
 (let ((?x4604 (* ?x10719 l_0_6_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_26) ?x4604) ?x3197) ?x10752) 0.0))))))))
(assert
 (let ((?x7605 (* l_0_6_45 l_0_6_45)))
 (let ((?x3717 (* l_0_6_44 l_0_6_44)))
 (let ((?x7598 (* l_0_6_43 l_0_6_43)))
 (let ((?x7592 (* l_0_6_42 l_0_6_42)))
 (let ((?x10378 (* l_0_6_41 l_0_6_41)))
 (let ((?x3270 (* l_0_6_36 l_0_6_36)))
 (let ((?x1165 (* l_0_6_35 l_0_6_35)))
 (let ((?x10201 (* l_0_6_34 l_0_6_34)))
 (let ((?x10351 (* l_0_6_30 l_0_6_30)))
 (let ((?x10348 (* l_0_6_29 l_0_6_29)))
 (let ((?x10345 (* l_0_6_28 l_0_6_28)))
 (let ((?x10342 (* l_0_6_27 l_0_6_27)))
 (let ((?x3495 (* l_0_6_26 l_0_6_26)))
 (let ((?x10160 (* l_0_6_21 l_0_6_21)))
 (let ((?x10770 (+ (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x10160) ?x3495)))
 (let ((?x10777 (+ (+ (+ (+ (+ (+ (+ ?x10770 ?x10342) ?x10345) ?x10348) ?x10351) ?x10201) ?x1165) ?x3270)))
 (= (- (- (- (- (- ?x10777 ?x10378) ?x7592) ?x7598) ?x3717) ?x7605) 0.0))))))))))))))))))
(assert
 (let ((?x10813 (* 2.0 l_0_6_36)))
 (let ((?x10814 (* ?x10813 l_0_6_39)))
 (let ((?x10810 (* 2.0 l_0_6_35)))
 (let ((?x10811 (* ?x10810 l_0_6_38)))
 (let ((?x10807 (* 2.0 l_0_6_34)))
 (let ((?x10808 (* ?x10807 l_0_6_37)))
 (let ((?x10804 (* 2.0 l_0_6_21)))
 (let ((?x10805 (* ?x10804 l_0_6_24)))
 (let ((?x10801 (* 2.0 l_0_6_20)))
 (let ((?x10802 (* ?x10801 l_0_6_23)))
 (let ((?x10812 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x10802) ?x10805) ?x10808) ?x10811)))
 (= (+ ?x10812 ?x10814) 0.0)))))))))))))
(assert
 (let ((?x10813 (* 2.0 l_0_6_36)))
 (let ((?x10840 (* ?x10813 l_0_6_43)))
 (let ((?x10810 (* 2.0 l_0_6_35)))
 (let ((?x10838 (* ?x10810 l_0_6_42)))
 (let ((?x10807 (* 2.0 l_0_6_34)))
 (let ((?x10836 (* ?x10807 l_0_6_41)))
 (let ((?x10804 (* 2.0 l_0_6_21)))
 (let ((?x10828 (* ?x10804 l_0_6_28)))
 (let ((?x10801 (* 2.0 l_0_6_20)))
 (let ((?x8124 (* ?x10801 l_0_6_27)))
 (let ((?x10839 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_26) ?x8124) ?x10828) ?x10836) ?x10838)))
 (= (+ ?x10839 ?x10840) 0.0)))))))))))))
(assert
 (let ((?x10016 (* l_0_6_40 l_0_6_40)))
 (let ((?x6952 (* l_0_6_39 l_0_6_39)))
 (let ((?x2921 (* l_0_6_38 l_0_6_38)))
 (let ((?x6950 (* l_0_6_37 l_0_6_37)))
 (let ((?x9974 (* l_0_6_25 l_0_6_25)))
 (let ((?x9971 (* l_0_6_24 l_0_6_24)))
 (let ((?x10854 (- (- (- (* (- l_0_6_22) l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x9971) ?x9974)))
 (= (+ (+ (+ (+ ?x10854 ?x6950) ?x2921) ?x6952) ?x10016) 0.0)))))))))
(assert
 (let ((?x10336 (* 2.0 l_0_6_40)))
 (let ((?x10886 (* ?x10336 l_0_6_44)))
 (let ((?x10332 (* 2.0 l_0_6_39)))
 (let ((?x10884 (* ?x10332 l_0_6_43)))
 (let ((?x10328 (* 2.0 l_0_6_38)))
 (let ((?x10882 (* ?x10328 l_0_6_42)))
 (let ((?x10324 (* 2.0 l_0_6_37)))
 (let ((?x10880 (* ?x10324 l_0_6_41)))
 (let ((?x10221 (* 2.0 l_0_6_25)))
 (let ((?x10878 (* ?x10221 l_0_6_29)))
 (let ((?x10218 (* 2.0 l_0_6_24)))
 (let ((?x10876 (* ?x10218 l_0_6_28)))
 (let ((?x10215 (* 2.0 l_0_6_23)))
 (let ((?x10874 (* ?x10215 l_0_6_27)))
 (let ((?x10881 (+ (- (- (- (* (* (- 2.0) l_0_6_22) l_0_6_26) ?x10874) ?x10876) ?x10878) ?x10880)))
 (= (+ (+ (+ ?x10881 ?x10882) ?x10884) ?x10886) 0.0)))))))))))))))))
(assert
 (let ((?x7605 (* l_0_6_45 l_0_6_45)))
 (let ((?x3717 (* l_0_6_44 l_0_6_44)))
 (let ((?x7598 (* l_0_6_43 l_0_6_43)))
 (let ((?x7592 (* l_0_6_42 l_0_6_42)))
 (let ((?x10378 (* l_0_6_41 l_0_6_41)))
 (let ((?x10351 (* l_0_6_30 l_0_6_30)))
 (let ((?x10348 (* l_0_6_29 l_0_6_29)))
 (let ((?x10345 (* l_0_6_28 l_0_6_28)))
 (let ((?x8175 (- (- (- (* (- l_0_6_26) l_0_6_26) (* l_0_6_27 l_0_6_27)) ?x10345) ?x10348)))
 (= (+ (+ (+ (+ (+ (- ?x8175 ?x10351) ?x10378) ?x7592) ?x7598) ?x3717) ?x7605) 0.0)))))))))))
(assert
 (let ((?x10943 (* l_0_6_66 l_0_6_66)))
 (let ((?x10941 (* l_0_6_65 l_0_6_65)))
 (let ((?x10939 (* l_0_6_64 l_0_6_64)))
 (let ((?x9389 (* l_0_6_51 l_0_6_51)))
 (let ((?x9386 (* l_0_6_50 l_0_6_50)))
 (let ((?x9380 (* l_0_6_49 l_0_6_49)))
 (let ((?x10175 (* 4.0 l_0_6_36)))
 (let ((?x10178 (* ?x10175 l_0_6_36)))
 (let ((?x10170 (* 4.0 l_0_6_35)))
 (let ((?x10173 (* ?x10170 l_0_6_35)))
 (let ((?x10165 (* 4.0 l_0_6_34)))
 (let ((?x10168 (* ?x10165 l_0_6_34)))
 (let ((?x9857 (* 4.0 l_0_6_33)))
 (let ((?x10931 (* ?x9857 l_0_6_35)))
 (let ((?x9851 (* 4.0 l_0_6_32)))
 (let ((?x10929 (* ?x9851 l_0_6_34)))
 (let ((?x9446 (* 2.0 l_0_6_31)))
 (let ((?x10570 (* ?x9446 l_0_6_32)))
 (let ((?x10160 (* l_0_6_21 l_0_6_21)))
 (let ((?x10161 (* 4.0 ?x10160)))
 (let ((?x10154 (* l_0_6_20 l_0_6_20)))
 (let ((?x10155 (* 4.0 ?x10154)))
 (let ((?x10148 (* l_0_6_19 l_0_6_19)))
 (let ((?x10149 (* 4.0 ?x10148)))
 (let ((?x9893 (* 4.0 l_0_6_18)))
 (let ((?x10923 (* ?x9893 l_0_6_20)))
 (let ((?x9888 (* 4.0 l_0_6_17)))
 (let ((?x10921 (* ?x9888 l_0_6_19)))
 (let ((?x10926 (+ (+ (- (- (* (* 2.0 l_0_6_16) l_0_6_17) ?x10921) ?x10923) ?x10149) ?x10155)))
 (let ((?x10935 (- (- (- (+ (+ (- (+ ?x10926 ?x10161) ?x10570) ?x10929) ?x10931) ?x10168) ?x10173) ?x10178)))
 (= (- (- (- (- (- (- ?x10935 ?x9380) ?x9386) ?x9389) ?x10939) ?x10941) ?x10943) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x3270 (* l_0_6_36 l_0_6_36)))
 (let ((?x10969 (* 2.0 ?x3270)))
 (let ((?x1165 (* l_0_6_35 l_0_6_35)))
 (let ((?x10967 (* 2.0 ?x1165)))
 (let ((?x10201 (* l_0_6_34 l_0_6_34)))
 (let ((?x10965 (* 2.0 ?x10201)))
 (let ((?x9446 (* 2.0 l_0_6_31)))
 (let ((?x10631 (* ?x9446 l_0_6_34)))
 (let ((?x10959 (- (* (* 2.0 l_0_6_16) l_0_6_19) (* (* 2.0 l_0_6_19) l_0_6_19))))
 (let ((?x10963 (- (- ?x10959 (* (* 2.0 l_0_6_20) l_0_6_20)) (* (* 2.0 l_0_6_21) l_0_6_21))))
 (= (+ (+ (+ (- ?x10963 ?x10631) ?x10965) ?x10967) ?x10969) 0.0))))))))))))
(assert
 (let ((?x10175 (* 4.0 l_0_6_36)))
 (let ((?x10637 (* ?x10175 l_0_6_43)))
 (let ((?x10170 (* 4.0 l_0_6_35)))
 (let ((?x10635 (* ?x10170 l_0_6_42)))
 (let ((?x10165 (* 4.0 l_0_6_34)))
 (let ((?x10633 (* ?x10165 l_0_6_41)))
 (let ((?x9446 (* 2.0 l_0_6_31)))
 (let ((?x10693 (* ?x9446 l_0_6_41)))
 (let ((?x10157 (* 4.0 l_0_6_21)))
 (let ((?x10614 (* ?x10157 l_0_6_28)))
 (let ((?x10151 (* 4.0 l_0_6_20)))
 (let ((?x10612 (* ?x10151 l_0_6_27)))
 (let ((?x10145 (* 4.0 l_0_6_19)))
 (let ((?x10610 (* ?x10145 l_0_6_26)))
 (let ((?x10988 (+ (- (* (* 2.0 l_0_6_16) l_0_6_26) ?x10610) (* 2.0 (* l_0_6_19 l_0_6_19)))))
 (let ((?x10992 (+ (- (+ (- ?x10988 ?x10612) (* 2.0 (* l_0_6_20 l_0_6_20))) ?x10614) (* 2.0 (* l_0_6_21 l_0_6_21)))))
 (let ((?x10997 (+ (- (+ (- ?x10992 ?x10693) ?x10633) (* (* 2.0 l_0_6_34) l_0_6_34)) ?x10635)))
 (let ((?x11002 (- (+ (- ?x10997 (* (* 2.0 l_0_6_35) l_0_6_35)) ?x10637) (* (* 2.0 l_0_6_36) l_0_6_36))))
 (= ?x11002 0.0))))))))))))))))))))
(assert
 (let ((?x6862 (* l_0_6_33 l_0_6_33)))
 (let ((?x2506 (* l_0_6_32 l_0_6_32)))
 (let ((?x11030 (- (- (+ (* l_0_6_17 l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x2506) ?x6862)))
 (= ?x11030 0.0)))))
(assert
 (let ((?x10725 (* 2.0 l_0_6_33)))
 (let ((?x10726 (* ?x10725 l_0_6_35)))
 (let ((?x10722 (* 2.0 l_0_6_32)))
 (let ((?x10723 (* ?x10722 l_0_6_34)))
 (let ((?x10719 (* 2.0 l_0_6_18)))
 (let ((?x10720 (* ?x10719 l_0_6_20)))
 (= (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_19) ?x10720) ?x10723) ?x10726) 0.0))))))))
(assert
 (let ((?x10725 (* 2.0 l_0_6_33)))
 (let ((?x10743 (* ?x10725 l_0_6_38)))
 (let ((?x10722 (* 2.0 l_0_6_32)))
 (let ((?x10741 (* ?x10722 l_0_6_37)))
 (let ((?x10719 (* 2.0 l_0_6_18)))
 (let ((?x3196 (* ?x10719 l_0_6_23)))
 (= (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_22) ?x3196) ?x10741) ?x10743) 0.0))))))))
(assert
 (let ((?x10725 (* 2.0 l_0_6_33)))
 (let ((?x10752 (* ?x10725 l_0_6_42)))
 (let ((?x10722 (* 2.0 l_0_6_32)))
 (let ((?x3197 (* ?x10722 l_0_6_41)))
 (let ((?x10719 (* 2.0 l_0_6_18)))
 (let ((?x4604 (* ?x10719 l_0_6_27)))
 (= (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_26) ?x4604) ?x3197) ?x10752) 0.0))))))))
(assert
 (let ((?x3270 (* l_0_6_36 l_0_6_36)))
 (let ((?x1165 (* l_0_6_35 l_0_6_35)))
 (let ((?x10201 (* l_0_6_34 l_0_6_34)))
 (let ((?x10160 (* l_0_6_21 l_0_6_21)))
 (let ((?x11070 (- (+ (+ (* l_0_6_19 l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x10160) ?x10201)))
 (= (- (- ?x11070 ?x1165) ?x3270) 0.0)))))))
(assert
 (let ((?x10813 (* 2.0 l_0_6_36)))
 (let ((?x10814 (* ?x10813 l_0_6_39)))
 (let ((?x10810 (* 2.0 l_0_6_35)))
 (let ((?x10811 (* ?x10810 l_0_6_38)))
 (let ((?x10807 (* 2.0 l_0_6_34)))
 (let ((?x10808 (* ?x10807 l_0_6_37)))
 (let ((?x10804 (* 2.0 l_0_6_21)))
 (let ((?x10805 (* ?x10804 l_0_6_24)))
 (let ((?x10801 (* 2.0 l_0_6_20)))
 (let ((?x10802 (* ?x10801 l_0_6_23)))
 (let ((?x11084 (- (- (+ (+ (* (* 2.0 l_0_6_19) l_0_6_22) ?x10802) ?x10805) ?x10808) ?x10811)))
 (= (- ?x11084 ?x10814) 0.0)))))))))))))
(assert
 (let ((?x10813 (* 2.0 l_0_6_36)))
 (let ((?x10840 (* ?x10813 l_0_6_43)))
 (let ((?x10810 (* 2.0 l_0_6_35)))
 (let ((?x10838 (* ?x10810 l_0_6_42)))
 (let ((?x10807 (* 2.0 l_0_6_34)))
 (let ((?x10836 (* ?x10807 l_0_6_41)))
 (let ((?x10804 (* 2.0 l_0_6_21)))
 (let ((?x10828 (* ?x10804 l_0_6_28)))
 (let ((?x10801 (* 2.0 l_0_6_20)))
 (let ((?x8124 (* ?x10801 l_0_6_27)))
 (let ((?x11091 (- (- (+ (+ (* (* 2.0 l_0_6_19) l_0_6_26) ?x8124) ?x10828) ?x10836) ?x10838)))
 (= (- ?x11091 ?x10840) 0.0)))))))))))))
(assert
 (let ((?x10016 (* l_0_6_40 l_0_6_40)))
 (let ((?x6952 (* l_0_6_39 l_0_6_39)))
 (let ((?x2921 (* l_0_6_38 l_0_6_38)))
 (let ((?x6950 (* l_0_6_37 l_0_6_37)))
 (let ((?x9974 (* l_0_6_25 l_0_6_25)))
 (let ((?x9971 (* l_0_6_24 l_0_6_24)))
 (let ((?x4850 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x9971) ?x9974)))
 (= (- (- (- (- ?x4850 ?x6950) ?x2921) ?x6952) ?x10016) 0.0)))))))))
(assert
 (let ((?x10336 (* 2.0 l_0_6_40)))
 (let ((?x10886 (* ?x10336 l_0_6_44)))
 (let ((?x10332 (* 2.0 l_0_6_39)))
 (let ((?x10884 (* ?x10332 l_0_6_43)))
 (let ((?x10328 (* 2.0 l_0_6_38)))
 (let ((?x10882 (* ?x10328 l_0_6_42)))
 (let ((?x10324 (* 2.0 l_0_6_37)))
 (let ((?x10880 (* ?x10324 l_0_6_41)))
 (let ((?x10221 (* 2.0 l_0_6_25)))
 (let ((?x10878 (* ?x10221 l_0_6_29)))
 (let ((?x10218 (* 2.0 l_0_6_24)))
 (let ((?x10876 (* ?x10218 l_0_6_28)))
 (let ((?x10215 (* 2.0 l_0_6_23)))
 (let ((?x10874 (* ?x10215 l_0_6_27)))
 (let ((?x11105 (- (+ (+ (+ (* (* 2.0 l_0_6_22) l_0_6_26) ?x10874) ?x10876) ?x10878) ?x10880)))
 (= (- (- (- ?x11105 ?x10882) ?x10884) ?x10886) 0.0)))))))))))))))))
(assert
 (let ((?x9504 (* 2.0 l_0_6_48)))
 (let ((?x10475 (* ?x9504 l_0_6_57)))
 (let ((?x9501 (* 2.0 l_0_6_47)))
 (let ((?x10473 (* ?x9501 l_0_6_56)))
 (let ((?x9854 (* 8.0 l_0_6_33)))
 (let ((?x10056 (* ?x9854 l_0_6_42)))
 (let ((?x9848 (* 8.0 l_0_6_32)))
 (let ((?x10053 (* ?x9848 l_0_6_41)))
 (let ((?x9838 (* 8.0 l_0_6_18)))
 (let ((?x10038 (* ?x9838 l_0_6_27)))
 (let ((?x9833 (* 8.0 l_0_6_17)))
 (let ((?x10035 (* ?x9833 l_0_6_26)))
 (let ((?x11124 (+ (+ (+ ?x10035 (* 2.0 (* l_0_6_17 l_0_6_17))) ?x10038) (* 2.0 (* l_0_6_18 l_0_6_18)))))
 (let ((?x11130 (- (- (- (- ?x11124 ?x10053) (* (* 2.0 l_0_6_32) l_0_6_32)) ?x10056) (* (* 2.0 l_0_6_33) l_0_6_33))))
 (let ((?x11136 (- (- (- (- ?x11130 ?x10473) ?x10475) (* (* 2.0 l_0_6_62) l_0_6_71)) (* (* 2.0 l_0_6_63) l_0_6_72))))
 (= ?x11136 0.0)))))))))))))))))
(assert
 (let ((?x9589 (* 2.0 l_0_6_51)))
 (let ((?x10525 (* ?x9589 l_0_6_58)))
 (let ((?x9586 (* 2.0 l_0_6_50)))
 (let ((?x10523 (* ?x9586 l_0_6_57)))
 (let ((?x9580 (* 2.0 l_0_6_49)))
 (let ((?x10521 (* ?x9580 l_0_6_56)))
 (let ((?x9923 (* 8.0 l_0_6_36)))
 (let ((?x10283 (* ?x9923 l_0_6_43)))
 (let ((?x9920 (* 8.0 l_0_6_35)))
 (let ((?x10280 (* ?x9920 l_0_6_42)))
 (let ((?x9917 (* 8.0 l_0_6_34)))
 (let ((?x10277 (* ?x9917 l_0_6_41)))
 (let ((?x9857 (* 4.0 l_0_6_33)))
 (let ((?x10574 (* ?x9857 l_0_6_42)))
 (let ((?x10931 (* ?x9857 l_0_6_35)))
 (let ((?x9851 (* 4.0 l_0_6_32)))
 (let ((?x10572 (* ?x9851 l_0_6_41)))
 (let ((?x10929 (* ?x9851 l_0_6_34)))
 (let ((?x9904 (* 8.0 l_0_6_21)))
 (let ((?x10262 (* ?x9904 l_0_6_28)))
 (let ((?x9901 (* 8.0 l_0_6_20)))
 (let ((?x10259 (* ?x9901 l_0_6_27)))
 (let ((?x9896 (* 8.0 l_0_6_19)))
 (let ((?x10256 (* ?x9896 l_0_6_26)))
 (let ((?x9893 (* 4.0 l_0_6_18)))
 (let ((?x10563 (* ?x9893 l_0_6_27)))
 (let ((?x10923 (* ?x9893 l_0_6_20)))
 (let ((?x9888 (* 4.0 l_0_6_17)))
 (let ((?x10561 (* ?x9888 l_0_6_26)))
 (let ((?x10921 (* ?x9888 l_0_6_19)))
 (let ((?x11143 (- (+ (+ (+ (- (+ (- ?x10921 ?x10561) ?x10923) ?x10563) ?x10256) ?x10259) ?x10262) ?x10929)))
 (let ((?x11150 (- (- (- (- (+ (- (+ ?x11143 ?x10572) ?x10931) ?x10574) ?x10277) ?x10280) ?x10283) ?x10521)))
 (let ((?x11156 (- (- (- (- ?x11150 ?x10523) ?x10525) (* (* 2.0 l_0_6_64) l_0_6_71)) (* (* 2.0 l_0_6_65) l_0_6_72))))
 (= (- ?x11156 (* (* 2.0 l_0_6_66) l_0_6_73)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9504 (* 2.0 l_0_6_48)))
 (let ((?x10432 (* ?x9504 l_0_6_50)))
 (let ((?x9501 (* 2.0 l_0_6_47)))
 (let ((?x10430 (* ?x9501 l_0_6_49)))
 (let ((?x6862 (* l_0_6_33 l_0_6_33)))
 (let ((?x8290 (* 2.0 ?x6862)))
 (let ((?x9854 (* 8.0 l_0_6_33)))
 (let ((?x9913 (* ?x9854 l_0_6_35)))
 (let ((?x2506 (* l_0_6_32 l_0_6_32)))
 (let ((?x11138 (* 2.0 ?x2506)))
 (let ((?x9848 (* 8.0 l_0_6_32)))
 (let ((?x9909 (* ?x9848 l_0_6_34)))
 (let ((?x9838 (* 8.0 l_0_6_18)))
 (let ((?x9891 (* ?x9838 l_0_6_20)))
 (let ((?x9833 (* 8.0 l_0_6_17)))
 (let ((?x9887 (* ?x9833 l_0_6_19)))
 (let ((?x5112 (- (+ (- ?x9887 (* (* 2.0 l_0_6_17) l_0_6_17)) ?x9891) (* (* 2.0 l_0_6_18) l_0_6_18))))
 (let ((?x11172 (- (- (- (+ (- (+ (- ?x5112 ?x9909) ?x11138) ?x9913) ?x8290) ?x10430) ?x10432) (* (* 2.0 l_0_6_62) l_0_6_64))))
 (= (- ?x11172 (* (* 2.0 l_0_6_63) l_0_6_65)) 0.0))))))))))))))))))))
(assert
 (let ((?x11192 (* l_0_6_63 l_0_6_63)))
 (let ((?x11190 (* l_0_6_62 l_0_6_62)))
 (let ((?x10393 (* l_0_6_48 l_0_6_48)))
 (let ((?x10390 (* l_0_6_47 l_0_6_47)))
 (let ((?x9857 (* 4.0 l_0_6_33)))
 (let ((?x9858 (* ?x9857 l_0_6_33)))
 (let ((?x9851 (* 4.0 l_0_6_32)))
 (let ((?x9852 (* ?x9851 l_0_6_32)))
 (let ((?x9841 (* l_0_6_18 l_0_6_18)))
 (let ((?x9842 (* 4.0 ?x9841)))
 (let ((?x9835 (* l_0_6_17 l_0_6_17)))
 (let ((?x9836 (* 4.0 ?x9835)))
 (let ((?x11193 (- (- (- (- (- (- (+ ?x9836 ?x9842) ?x9852) ?x9858) ?x10390) ?x10393) ?x11190) ?x11192)))
 (= ?x11193 0.0)))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_106 0.0))
(assert
 (>= l_0_6_108 0.0))
(assert
 (>= l_0_6_111 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_120 0.0))
(assert
 (let ((?x11250 (* 2.0 l_0_7_46)))
 (let ((?x11251 (* ?x11250 l_0_7_52)))
 (let ((?x11247 (* 4.0 l_0_7_31)))
 (let ((?x11248 (* ?x11247 l_0_7_31)))
 (let ((?x11244 (* l_0_7_16 l_0_7_16)))
 (let ((?x11245 (* 4.0 ?x11244)))
 (let ((?x11246 (+ (- (* (* 2.0 l_0_7_1) l_0_7_7) (* l_0_7_1 l_0_7_1)) ?x11245)))
 (let ((?x11256 (+ (- (+ (- ?x11246 ?x11248) ?x11251) (* (* 2.0 l_0_7_76) l_0_7_82)) 1.0)))
 (= ?x11256 0.0))))))))))
(assert
 (let ((?x11271 (* l_0_7_76 l_0_7_76)))
 (let ((?x11270 (+ (* 1.0 (* l_0_7_1 l_0_7_1)) (* 1.0 (* l_0_7_46 l_0_7_46)))))
 (= (- (- ?x11270 ?x11271) 1.0) 0.0))))
(assert
 (let ((?x11301 (* 2.0 l_0_7_48)))
 (let ((?x11302 (* ?x11301 l_0_7_53)))
 (let ((?x11298 (* 2.0 l_0_7_47)))
 (let ((?x11299 (* ?x11298 l_0_7_52)))
 (let ((?x11250 (* 2.0 l_0_7_46)))
 (let ((?x11251 (* ?x11250 l_0_7_52)))
 (let ((?x11292 (* 8.0 l_0_7_31)))
 (let ((?x11295 (* ?x11292 l_0_7_37)))
 (let ((?x11293 (* ?x11292 l_0_7_32)))
 (let ((?x11289 (* 2.0 l_0_7_3)))
 (let ((?x11290 (* ?x11289 l_0_7_8)))
 (let ((?x11286 (* 2.0 l_0_7_2)))
 (let ((?x11287 (* ?x11286 l_0_7_7)))
 (let ((?x11281 (* 8.0 l_0_7_16)))
 (let ((?x11284 (* ?x11281 l_0_7_22)))
 (let ((?x11288 (+ (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_2) (* ?x11281 l_0_7_17)) ?x11284) ?x11287)))
 (let ((?x11306 (+ (+ (+ (- (- (- (+ ?x11288 ?x11290) ?x11293) ?x11295) ?x11251) ?x11299) ?x11302) (* (* 2.0 l_0_7_61) l_0_7_67))))
 (let ((?x11312 (- (- ?x11306 (* (* 2.0 l_0_7_77) l_0_7_82)) (* (* 2.0 l_0_7_78) l_0_7_83))))
 (= ?x11312 0.0))))))))))))))))))))
(assert
 (let ((?x11380 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x11376 (* 2.0 l_0_7_51)))
 (let ((?x11377 (* ?x11376 l_0_7_54)))
 (let ((?x11373 (* 2.0 l_0_7_50)))
 (let ((?x11374 (* ?x11373 l_0_7_53)))
 (let ((?x11371 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x11367 (* 2.0 l_0_7_49)))
 (let ((?x11368 (* ?x11367 l_0_7_52)))
 (let ((?x11365 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x11247 (* 4.0 l_0_7_31)))
 (let ((?x11362 (* ?x11247 l_0_7_37)))
 (let ((?x11292 (* 8.0 l_0_7_31)))
 (let ((?x11360 (* ?x11292 l_0_7_34)))
 (let ((?x11357 (* 4.0 l_0_7_16)))
 (let ((?x11358 (* ?x11357 l_0_7_22)))
 (let ((?x11281 (* 8.0 l_0_7_16)))
 (let ((?x11355 (* ?x11281 l_0_7_19)))
 (let ((?x11363 (+ (- (- (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x11355) ?x11358) ?x11360) ?x11362)))
 (let ((?x11384 (- (+ (+ (+ (+ (+ (+ ?x11363 ?x11365) ?x11368) ?x11371) ?x11374) ?x11377) ?x11380) (* (* 2.0 l_0_7_79) l_0_7_82))))
 (let ((?x11390 (- (- ?x11384 (* (* 2.0 l_0_7_80) l_0_7_83)) (* (* 2.0 l_0_7_81) l_0_7_84))))
 (= ?x11390 0.0))))))))))))))))))))))
(assert
 (let ((?x11456 (* l_0_7_85 l_0_7_85)))
 (let ((?x11454 (* l_0_7_84 l_0_7_84)))
 (let ((?x11452 (* l_0_7_83 l_0_7_83)))
 (let ((?x11450 (* l_0_7_82 l_0_7_82)))
 (let ((?x11292 (* 8.0 l_0_7_31)))
 (let ((?x11295 (* ?x11292 l_0_7_37)))
 (let ((?x11281 (* 8.0 l_0_7_16)))
 (let ((?x11284 (* ?x11281 l_0_7_22)))
 (let ((?x11429 (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) (* 1.0 (* l_0_7_10 l_0_7_10)))))
 (let ((?x11437 (+ (+ (- (+ ?x11429 ?x11284) ?x11295) (* 1.0 (* l_0_7_52 l_0_7_52))) (* 1.0 (* l_0_7_53 l_0_7_53)))))
 (let ((?x11443 (+ (+ ?x11437 (* 1.0 (* l_0_7_54 l_0_7_54))) (* 1.0 (* l_0_7_55 l_0_7_55)))))
 (let ((?x11449 (+ (+ ?x11443 (* 1.0 (* l_0_7_7 l_0_7_7))) (* 1.0 (* l_0_7_8 l_0_7_8)))))
 (let ((?x11460 (+ (- (- (- (- ?x11449 ?x11450) ?x11452) ?x11454) ?x11456) (* 1.0 (* l_0_7_9 l_0_7_9)))))
 (= ?x11460 0.0)))))))))))))))
(assert
 (let ((?x11497 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x11494 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x11491 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x11488 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x11292 (* 8.0 l_0_7_31)))
 (let ((?x11485 (* ?x11292 l_0_7_41)))
 (let ((?x11247 (* 4.0 l_0_7_31)))
 (let ((?x11362 (* ?x11247 l_0_7_37)))
 (let ((?x11281 (* 8.0 l_0_7_16)))
 (let ((?x11482 (* ?x11281 l_0_7_26)))
 (let ((?x11357 (* 4.0 l_0_7_16)))
 (let ((?x11358 (* ?x11357 l_0_7_22)))
 (let ((?x11478 (* 2.0 l_0_7_13)))
 (let ((?x11479 (* ?x11478 l_0_7_9)))
 (let ((?x11475 (* 2.0 l_0_7_12)))
 (let ((?x11476 (* ?x11475 l_0_7_8)))
 (let ((?x11472 (* 2.0 l_0_7_11)))
 (let ((?x11473 (* ?x11472 l_0_7_7)))
 (let ((?x11471 (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_10) l_0_7_14))))
 (let ((?x11486 (- (- (+ (+ (+ (+ (+ ?x11471 ?x11473) ?x11476) ?x11479) ?x11358) ?x11482) ?x11362) ?x11485)))
 (let ((?x11501 (- (+ (+ (+ (+ ?x11486 ?x11488) ?x11491) ?x11494) ?x11497) (* (* 2.0 l_0_7_82) l_0_7_86))))
 (let ((?x11507 (- (- ?x11501 (* (* 2.0 l_0_7_83) l_0_7_87)) (* (* 2.0 l_0_7_84) l_0_7_88))))
 (= (- ?x11507 (* (* 2.0 l_0_7_85) l_0_7_89)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x11301 (* 2.0 l_0_7_48)))
 (let ((?x11302 (* ?x11301 l_0_7_53)))
 (let ((?x11298 (* 2.0 l_0_7_47)))
 (let ((?x11299 (* ?x11298 l_0_7_52)))
 (let ((?x11578 (* 4.0 l_0_7_33)))
 (let ((?x11579 (* ?x11578 l_0_7_33)))
 (let ((?x11575 (* 8.0 l_0_7_33)))
 (let ((?x11576 (* ?x11575 l_0_7_38)))
 (let ((?x11572 (* 4.0 l_0_7_32)))
 (let ((?x11573 (* ?x11572 l_0_7_32)))
 (let ((?x11569 (* 8.0 l_0_7_32)))
 (let ((?x11570 (* ?x11569 l_0_7_37)))
 (let ((?x11567 (* l_0_7_3 l_0_7_3)))
 (let ((?x11565 (* l_0_7_2 l_0_7_2)))
 (let ((?x11562 (* l_0_7_18 l_0_7_18)))
 (let ((?x11563 (* 4.0 ?x11562)))
 (let ((?x11559 (* 8.0 l_0_7_18)))
 (let ((?x11560 (* ?x11559 l_0_7_23)))
 (let ((?x11556 (* l_0_7_17 l_0_7_17)))
 (let ((?x11557 (* 4.0 ?x11556)))
 (let ((?x11554 (* 8.0 l_0_7_17)))
 (let ((?x11555 (* ?x11554 l_0_7_22)))
 (let ((?x11574 (- (- (- (- (+ (+ (+ ?x11555 ?x11557) ?x11560) ?x11563) ?x11565) ?x11567) ?x11570) ?x11573)))
 (let ((?x11585 (+ (- (- (- (- ?x11574 ?x11576) ?x11579) ?x11299) ?x11302) (* (* 2.0 l_0_7_62) l_0_7_67))))
 (= (+ ?x11585 (* (* 2.0 l_0_7_63) l_0_7_68)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x11376 (* 2.0 l_0_7_51)))
 (let ((?x11377 (* ?x11376 l_0_7_54)))
 (let ((?x11373 (* 2.0 l_0_7_50)))
 (let ((?x11374 (* ?x11373 l_0_7_53)))
 (let ((?x11367 (* 2.0 l_0_7_49)))
 (let ((?x11368 (* ?x11367 l_0_7_52)))
 (let ((?x11638 (* 8.0 l_0_7_36)))
 (let ((?x11639 (* ?x11638 l_0_7_39)))
 (let ((?x11635 (* 8.0 l_0_7_35)))
 (let ((?x11636 (* ?x11635 l_0_7_38)))
 (let ((?x11632 (* 8.0 l_0_7_34)))
 (let ((?x11633 (* ?x11632 l_0_7_37)))
 (let ((?x11578 (* 4.0 l_0_7_33)))
 (let ((?x11630 (* ?x11578 l_0_7_38)))
 (let ((?x11575 (* 8.0 l_0_7_33)))
 (let ((?x11628 (* ?x11575 l_0_7_35)))
 (let ((?x11572 (* 4.0 l_0_7_32)))
 (let ((?x11626 (* ?x11572 l_0_7_37)))
 (let ((?x11569 (* 8.0 l_0_7_32)))
 (let ((?x11624 (* ?x11569 l_0_7_34)))
 (let ((?x11289 (* 2.0 l_0_7_3)))
 (let ((?x11622 (* ?x11289 l_0_7_5)))
 (let ((?x11619 (* 8.0 l_0_7_21)))
 (let ((?x11620 (* ?x11619 l_0_7_24)))
 (let ((?x11616 (* 8.0 l_0_7_20)))
 (let ((?x11617 (* ?x11616 l_0_7_23)))
 (let ((?x11286 (* 2.0 l_0_7_2)))
 (let ((?x11614 (* ?x11286 l_0_7_4)))
 (let ((?x5719 (* 8.0 l_0_7_19)))
 (let ((?x8605 (* ?x5719 l_0_7_22)))
 (let ((?x8598 (* 4.0 l_0_7_18)))
 (let ((?x8607 (* ?x8598 l_0_7_23)))
 (let ((?x11559 (* 8.0 l_0_7_18)))
 (let ((?x5716 (* ?x11559 l_0_7_20)))
 (let ((?x8665 (* 4.0 l_0_7_17)))
 (let ((?x8667 (* ?x8665 l_0_7_22)))
 (let ((?x11554 (* 8.0 l_0_7_17)))
 (let ((?x8670 (* ?x11554 l_0_7_19)))
 (let ((?x11621 (+ (+ (- (+ (- (+ (- ?x8670 ?x8667) ?x5716) ?x8607) ?x8605) ?x11614) ?x11617) ?x11620)))
 (let ((?x11637 (- (- (+ (- (+ (- (- ?x11621 ?x11622) ?x11624) ?x11626) ?x11628) ?x11630) ?x11633) ?x11636)))
 (let ((?x11646 (+ (- (- (- (- ?x11637 ?x11639) ?x11368) ?x11374) ?x11377) (* (* 2.0 l_0_7_64) l_0_7_67))))
 (let ((?x11652 (+ (+ ?x11646 (* (* 2.0 l_0_7_65) l_0_7_68)) (* (* 2.0 l_0_7_66) l_0_7_69))))
 (= ?x11652 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11714 (* l_0_7_70 l_0_7_70)))
 (let ((?x11712 (* l_0_7_69 l_0_7_69)))
 (let ((?x11710 (* l_0_7_68 l_0_7_68)))
 (let ((?x11708 (* l_0_7_67 l_0_7_67)))
 (let ((?x11441 (* l_0_7_55 l_0_7_55)))
 (let ((?x11438 (* l_0_7_54 l_0_7_54)))
 (let ((?x11435 (* l_0_7_53 l_0_7_53)))
 (let ((?x11432 (* l_0_7_52 l_0_7_52)))
 (let ((?x11701 (* 4.0 l_0_7_40)))
 (let ((?x11702 (* ?x11701 l_0_7_40)))
 (let ((?x11698 (* 4.0 l_0_7_39)))
 (let ((?x11699 (* ?x11698 l_0_7_39)))
 (let ((?x11695 (* 4.0 l_0_7_38)))
 (let ((?x11696 (* ?x11695 l_0_7_38)))
 (let ((?x11692 (* 4.0 l_0_7_37)))
 (let ((?x11693 (* ?x11692 l_0_7_37)))
 (let ((?x11575 (* 8.0 l_0_7_33)))
 (let ((?x11576 (* ?x11575 l_0_7_38)))
 (let ((?x11569 (* 8.0 l_0_7_32)))
 (let ((?x11570 (* ?x11569 l_0_7_37)))
 (let ((?x11289 (* 2.0 l_0_7_3)))
 (let ((?x11290 (* ?x11289 l_0_7_8)))
 (let ((?x11686 (* l_0_7_25 l_0_7_25)))
 (let ((?x11687 (* 4.0 ?x11686)))
 (let ((?x11683 (* l_0_7_24 l_0_7_24)))
 (let ((?x11684 (* 4.0 ?x11683)))
 (let ((?x11680 (* l_0_7_23 l_0_7_23)))
 (let ((?x11681 (* 4.0 ?x11680)))
 (let ((?x11677 (* l_0_7_22 l_0_7_22)))
 (let ((?x11678 (* 4.0 ?x11677)))
 (let ((?x11286 (* 2.0 l_0_7_2)))
 (let ((?x11287 (* ?x11286 l_0_7_7)))
 (let ((?x11559 (* 8.0 l_0_7_18)))
 (let ((?x11560 (* ?x11559 l_0_7_23)))
 (let ((?x11554 (* 8.0 l_0_7_17)))
 (let ((?x11555 (* ?x11554 l_0_7_22)))
 (let ((?x11689 (- (+ (+ (+ (+ (- (+ ?x11555 ?x11560) ?x11287) ?x11678) ?x11681) ?x11684) ?x11687) ?x11290)))
 (let ((?x11704 (- (- (- (- (- (- (- ?x11689 ?x11570) ?x11576) ?x11693) ?x11696) ?x11699) ?x11702) ?x11432)))
 (let ((?x11715 (+ (+ (+ (+ (- (- (- ?x11704 ?x11435) ?x11438) ?x11441) ?x11708) ?x11710) ?x11712) ?x11714)))
 (= ?x11715 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11497 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x11494 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x11491 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x11488 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x11775 (* (* 8.0 l_0_7_40) l_0_7_44)))
 (let ((?x11772 (* (* 8.0 l_0_7_39) l_0_7_43)))
 (let ((?x11769 (* (* 8.0 l_0_7_38) l_0_7_42)))
 (let ((?x11766 (* (* 8.0 l_0_7_37) l_0_7_41)))
 (let ((?x11575 (* 8.0 l_0_7_33)))
 (let ((?x11763 (* ?x11575 l_0_7_42)))
 (let ((?x11578 (* 4.0 l_0_7_33)))
 (let ((?x11630 (* ?x11578 l_0_7_38)))
 (let ((?x11569 (* 8.0 l_0_7_32)))
 (let ((?x11760 (* ?x11569 l_0_7_41)))
 (let ((?x11572 (* 4.0 l_0_7_32)))
 (let ((?x11626 (* ?x11572 l_0_7_37)))
 (let ((?x11757 (* (* 8.0 l_0_7_25) l_0_7_29)))
 (let ((?x11754 (* (* 8.0 l_0_7_24) l_0_7_28)))
 (let ((?x11751 (* (* 8.0 l_0_7_23) l_0_7_27)))
 (let ((?x11748 (* (* 8.0 l_0_7_22) l_0_7_26)))
 (let ((?x11559 (* 8.0 l_0_7_18)))
 (let ((?x11745 (* ?x11559 l_0_7_27)))
 (let ((?x8598 (* 4.0 l_0_7_18)))
 (let ((?x8607 (* ?x8598 l_0_7_23)))
 (let ((?x11554 (* 8.0 l_0_7_17)))
 (let ((?x11742 (* ?x11554 l_0_7_26)))
 (let ((?x8665 (* 4.0 l_0_7_17)))
 (let ((?x8667 (* ?x8665 l_0_7_22)))
 (let ((?x11475 (* 2.0 l_0_7_12)))
 (let ((?x11739 (* ?x11475 l_0_7_3)))
 (let ((?x11744 (+ (+ (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x11739) ?x8667) ?x11742) ?x8607)))
 (let ((?x11761 (- (- (+ (+ (+ (+ (+ ?x11744 ?x11745) ?x11748) ?x11751) ?x11754) ?x11757) ?x11626) ?x11760)))
 (let ((?x11777 (- (- (- (- (- (- (- ?x11761 ?x11630) ?x11763) ?x11766) ?x11769) ?x11772) ?x11775) ?x11488)))
 (let ((?x11783 (+ (- (- (- ?x11777 ?x11491) ?x11494) ?x11497) (* (* 2.0 l_0_7_67) l_0_7_71))))
 (let ((?x11789 (+ (+ ?x11783 (* (* 2.0 l_0_7_68) l_0_7_72)) (* (* 2.0 l_0_7_69) l_0_7_73))))
 (= (+ ?x11789 (* (* 2.0 l_0_7_70) l_0_7_74)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11865 (* l_0_7_6 l_0_7_6)))
 (let ((?x11863 (* l_0_7_5 l_0_7_5)))
 (let ((?x11861 (* l_0_7_4 l_0_7_4)))
 (let ((?x11856 (* 4.0 l_0_7_36)))
 (let ((?x11859 (* ?x11856 l_0_7_36)))
 (let ((?x11857 (* ?x11856 l_0_7_39)))
 (let ((?x11851 (* 4.0 l_0_7_35)))
 (let ((?x11854 (* ?x11851 l_0_7_35)))
 (let ((?x11852 (* ?x11851 l_0_7_38)))
 (let ((?x11846 (* 4.0 l_0_7_34)))
 (let ((?x11849 (* ?x11846 l_0_7_34)))
 (let ((?x11847 (* ?x11846 l_0_7_37)))
 (let ((?x11843 (* 2.0 l_0_7_31)))
 (let ((?x11844 (* ?x11843 l_0_7_37)))
 (let ((?x11840 (* l_0_7_21 l_0_7_21)))
 (let ((?x11841 (* 4.0 ?x11840)))
 (let ((?x11837 (* 4.0 l_0_7_21)))
 (let ((?x11838 (* ?x11837 l_0_7_24)))
 (let ((?x11834 (* l_0_7_20 l_0_7_20)))
 (let ((?x11835 (* 4.0 ?x11834)))
 (let ((?x11831 (* 4.0 l_0_7_20)))
 (let ((?x11832 (* ?x11831 l_0_7_23)))
 (let ((?x11828 (* l_0_7_19 l_0_7_19)))
 (let ((?x11829 (* 4.0 ?x11828)))
 (let ((?x8939 (* 4.0 l_0_7_19)))
 (let ((?x5724 (* ?x8939 l_0_7_22)))
 (let ((?x6056 (* 2.0 l_0_7_16)))
 (let ((?x8931 (* ?x6056 l_0_7_22)))
 (let ((?x11845 (- (+ (- (+ (- (+ (- ?x8931 ?x5724) ?x11829) ?x11832) ?x11835) ?x11838) ?x11841) ?x11844)))
 (let ((?x11862 (- (- (+ (- (+ (- (+ ?x11845 ?x11847) ?x11849) ?x11852) ?x11854) ?x11857) ?x11859) ?x11861)))
 (= (- (- ?x11862 ?x11863) ?x11865) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x11380 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x11371 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x962 (* l_0_7_40 l_0_7_40)))
 (let ((?x11935 (* 2.0 ?x962)))
 (let ((?x11365 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x4597 (* l_0_7_39 l_0_7_39)))
 (let ((?x11932 (* 2.0 ?x4597)))
 (let ((?x8074 (* l_0_7_38 l_0_7_38)))
 (let ((?x11930 (* 2.0 ?x8074)))
 (let ((?x5865 (* l_0_7_37 l_0_7_37)))
 (let ((?x11928 (* 2.0 ?x5865)))
 (let ((?x11638 (* 8.0 l_0_7_36)))
 (let ((?x11639 (* ?x11638 l_0_7_39)))
 (let ((?x11635 (* 8.0 l_0_7_35)))
 (let ((?x11636 (* ?x11635 l_0_7_38)))
 (let ((?x11632 (* 8.0 l_0_7_34)))
 (let ((?x11633 (* ?x11632 l_0_7_37)))
 (let ((?x11619 (* 8.0 l_0_7_21)))
 (let ((?x11620 (* ?x11619 l_0_7_24)))
 (let ((?x11616 (* 8.0 l_0_7_20)))
 (let ((?x11617 (* ?x11616 l_0_7_23)))
 (let ((?x5719 (* 8.0 l_0_7_19)))
 (let ((?x8605 (* ?x5719 l_0_7_22)))
 (let ((?x11918 (- (- (+ (+ ?x8605 ?x11617) ?x11620) (* (* 2.0 l_0_7_22) l_0_7_22)) (* (* 2.0 l_0_7_23) l_0_7_23))))
 (let ((?x11924 (- (- ?x11918 (* (* 2.0 l_0_7_24) l_0_7_24)) (* (* 2.0 l_0_7_25) l_0_7_25))))
 (let ((?x11934 (- (+ (+ (+ (- (- (- ?x11924 ?x11633) ?x11636) ?x11639) ?x11928) ?x11930) ?x11932) ?x11365)))
 (= (- (- (+ ?x11934 ?x11935) ?x11371) ?x11380) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x11701 (* 4.0 l_0_7_40)))
 (let ((?x11982 (* ?x11701 l_0_7_44)))
 (let ((?x11698 (* 4.0 l_0_7_39)))
 (let ((?x11980 (* ?x11698 l_0_7_43)))
 (let ((?x11695 (* 4.0 l_0_7_38)))
 (let ((?x11978 (* ?x11695 l_0_7_42)))
 (let ((?x11692 (* 4.0 l_0_7_37)))
 (let ((?x11976 (* ?x11692 l_0_7_41)))
 (let ((?x11638 (* 8.0 l_0_7_36)))
 (let ((?x11974 (* ?x11638 l_0_7_43)))
 (let ((?x11856 (* 4.0 l_0_7_36)))
 (let ((?x11857 (* ?x11856 l_0_7_39)))
 (let ((?x11635 (* 8.0 l_0_7_35)))
 (let ((?x11971 (* ?x11635 l_0_7_42)))
 (let ((?x11851 (* 4.0 l_0_7_35)))
 (let ((?x11852 (* ?x11851 l_0_7_38)))
 (let ((?x11632 (* 8.0 l_0_7_34)))
 (let ((?x11968 (* ?x11632 l_0_7_41)))
 (let ((?x11846 (* 4.0 l_0_7_34)))
 (let ((?x11847 (* ?x11846 l_0_7_37)))
 (let ((?x11965 (* (* 4.0 l_0_7_25) l_0_7_29)))
 (let ((?x11962 (* (* 4.0 l_0_7_24) l_0_7_28)))
 (let ((?x11959 (* (* 4.0 l_0_7_23) l_0_7_27)))
 (let ((?x11956 (* (* 4.0 l_0_7_22) l_0_7_26)))
 (let ((?x11619 (* 8.0 l_0_7_21)))
 (let ((?x11953 (* ?x11619 l_0_7_28)))
 (let ((?x11837 (* 4.0 l_0_7_21)))
 (let ((?x11838 (* ?x11837 l_0_7_24)))
 (let ((?x11616 (* 8.0 l_0_7_20)))
 (let ((?x11950 (* ?x11616 l_0_7_27)))
 (let ((?x11831 (* 4.0 l_0_7_20)))
 (let ((?x11832 (* ?x11831 l_0_7_23)))
 (let ((?x5719 (* 8.0 l_0_7_19)))
 (let ((?x11947 (* ?x5719 l_0_7_26)))
 (let ((?x8939 (* 4.0 l_0_7_19)))
 (let ((?x5724 (* ?x8939 l_0_7_22)))
 (let ((?x11478 (* 2.0 l_0_7_13)))
 (let ((?x11944 (* ?x11478 l_0_7_6)))
 (let ((?x11475 (* 2.0 l_0_7_12)))
 (let ((?x1306 (* ?x11475 l_0_7_5)))
 (let ((?x11948 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x1306) ?x11944) ?x5724) ?x11947)))
 (let ((?x11963 (- (- (- (+ (+ (+ (+ ?x11948 ?x11832) ?x11950) ?x11838) ?x11953) ?x11956) ?x11959) ?x11962)))
 (let ((?x11975 (- (- (- (- (- (- (- ?x11963 ?x11965) ?x11847) ?x11968) ?x11852) ?x11971) ?x11857) ?x11974)))
 (= (+ (+ (+ (+ ?x11975 ?x11976) ?x11978) ?x11980) ?x11982) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11458 (* l_0_7_9 l_0_7_9)))
 (let ((?x11447 (* l_0_7_8 l_0_7_8)))
 (let ((?x11444 (* l_0_7_7 l_0_7_7)))
 (let ((?x11701 (* 4.0 l_0_7_40)))
 (let ((?x11702 (* ?x11701 l_0_7_40)))
 (let ((?x11698 (* 4.0 l_0_7_39)))
 (let ((?x11699 (* ?x11698 l_0_7_39)))
 (let ((?x11695 (* 4.0 l_0_7_38)))
 (let ((?x11696 (* ?x11695 l_0_7_38)))
 (let ((?x11692 (* 4.0 l_0_7_37)))
 (let ((?x11693 (* ?x11692 l_0_7_37)))
 (let ((?x11686 (* l_0_7_25 l_0_7_25)))
 (let ((?x11687 (* 4.0 ?x11686)))
 (let ((?x11683 (* l_0_7_24 l_0_7_24)))
 (let ((?x11684 (* 4.0 ?x11683)))
 (let ((?x11680 (* l_0_7_23 l_0_7_23)))
 (let ((?x11681 (* 4.0 ?x11680)))
 (let ((?x12013 (+ (+ (* (- l_0_7_10) l_0_7_10) (* 4.0 (* l_0_7_22 l_0_7_22))) ?x11681)))
 (let ((?x12020 (- (- (- (- (- (+ (+ ?x12013 ?x11684) ?x11687) ?x11693) ?x11696) ?x11699) ?x11702) ?x11444)))
 (= (- (- ?x12020 ?x11447) ?x11458) 0.0)))))))))))))))))))))
(assert
 (let ((?x11775 (* (* 8.0 l_0_7_40) l_0_7_44)))
 (let ((?x11772 (* (* 8.0 l_0_7_39) l_0_7_43)))
 (let ((?x11769 (* (* 8.0 l_0_7_38) l_0_7_42)))
 (let ((?x11766 (* (* 8.0 l_0_7_37) l_0_7_41)))
 (let ((?x11757 (* (* 8.0 l_0_7_25) l_0_7_29)))
 (let ((?x11754 (* (* 8.0 l_0_7_24) l_0_7_28)))
 (let ((?x11751 (* (* 8.0 l_0_7_23) l_0_7_27)))
 (let ((?x11748 (* (* 8.0 l_0_7_22) l_0_7_26)))
 (let ((?x11478 (* 2.0 l_0_7_13)))
 (let ((?x11479 (* ?x11478 l_0_7_9)))
 (let ((?x11475 (* 2.0 l_0_7_12)))
 (let ((?x11476 (* ?x11475 l_0_7_8)))
 (let ((?x11472 (* 2.0 l_0_7_11)))
 (let ((?x11473 (* ?x11472 l_0_7_7)))
 (let ((?x12035 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x11473) ?x11476) ?x11479) ?x11748)))
 (let ((?x12038 (+ (+ (+ ?x12035 (* 2.0 (* l_0_7_22 l_0_7_22))) ?x11751) (* 2.0 (* l_0_7_23 l_0_7_23)))))
 (let ((?x12042 (+ (+ (+ (+ ?x12038 ?x11754) (* 2.0 (* l_0_7_24 l_0_7_24))) ?x11757) (* 2.0 (* l_0_7_25 l_0_7_25)))))
 (let ((?x12050 (- (- (- (- ?x12042 ?x11766) (* (* 2.0 l_0_7_37) l_0_7_37)) ?x11769) (* (* 2.0 l_0_7_38) l_0_7_38))))
 (let ((?x12058 (- (- (- (- ?x12050 ?x11772) (* (* 2.0 l_0_7_39) l_0_7_39)) ?x11775) (* (* 2.0 l_0_7_40) l_0_7_40))))
 (= ?x12058 0.0)))))))))))))))))))))
(assert
 (let ((?x12104 (* (* 4.0 l_0_7_45) l_0_7_45)))
 (let ((?x12101 (* (* 4.0 l_0_7_44) l_0_7_44)))
 (let ((?x12098 (* (* 4.0 l_0_7_43) l_0_7_43)))
 (let ((?x12095 (* (* 4.0 l_0_7_42) l_0_7_42)))
 (let ((?x12092 (* (* 4.0 l_0_7_41) l_0_7_41)))
 (let ((?x11701 (* 4.0 l_0_7_40)))
 (let ((?x11982 (* ?x11701 l_0_7_44)))
 (let ((?x11698 (* 4.0 l_0_7_39)))
 (let ((?x11980 (* ?x11698 l_0_7_43)))
 (let ((?x11695 (* 4.0 l_0_7_38)))
 (let ((?x11978 (* ?x11695 l_0_7_42)))
 (let ((?x11692 (* 4.0 l_0_7_37)))
 (let ((?x11976 (* ?x11692 l_0_7_41)))
 (let ((?x11843 (* 2.0 l_0_7_31)))
 (let ((?x11844 (* ?x11843 l_0_7_37)))
 (let ((?x12083 (* l_0_7_30 l_0_7_30)))
 (let ((?x12084 (* 4.0 ?x12083)))
 (let ((?x12080 (* l_0_7_29 l_0_7_29)))
 (let ((?x12081 (* 4.0 ?x12080)))
 (let ((?x12077 (* l_0_7_28 l_0_7_28)))
 (let ((?x12078 (* 4.0 ?x12077)))
 (let ((?x12074 (* l_0_7_27 l_0_7_27)))
 (let ((?x12075 (* 4.0 ?x12074)))
 (let ((?x12071 (* l_0_7_26 l_0_7_26)))
 (let ((?x12072 (* 4.0 ?x12071)))
 (let ((?x11965 (* (* 4.0 l_0_7_25) l_0_7_29)))
 (let ((?x11962 (* (* 4.0 l_0_7_24) l_0_7_28)))
 (let ((?x11959 (* (* 4.0 l_0_7_23) l_0_7_27)))
 (let ((?x11956 (* (* 4.0 l_0_7_22) l_0_7_26)))
 (let ((?x6056 (* 2.0 l_0_7_16)))
 (let ((?x8931 (* ?x6056 l_0_7_22)))
 (let ((?x12064 (* l_0_7_15 l_0_7_15)))
 (let ((?x12062 (* l_0_7_14 l_0_7_14)))
 (let ((?x1527 (* l_0_7_13 l_0_7_13)))
 (let ((?x12063 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x1527) ?x12062)))
 (let ((?x12073 (+ (+ (+ (+ (+ (- (- ?x12063 ?x12064) ?x8931) ?x11956) ?x11959) ?x11962) ?x11965) ?x12072)))
 (let ((?x12088 (- (- (+ (+ (+ (+ (+ ?x12073 ?x12075) ?x12078) ?x12081) ?x12084) ?x11844) ?x11976) ?x11978)))
 (let ((?x12105 (- (- (- (- (- (- (- ?x12088 ?x11980) ?x11982) ?x12092) ?x12095) ?x12098) ?x12101) ?x12104)))
 (= ?x12105 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12136 (* l_0_7_61 l_0_7_61)))
 (let ((?x8444 (* l_0_7_46 l_0_7_46)))
 (let ((?x11250 (* 2.0 l_0_7_46)))
 (let ((?x12133 (* ?x11250 l_0_7_47)))
 (let ((?x11247 (* 4.0 l_0_7_31)))
 (let ((?x11248 (* ?x11247 l_0_7_31)))
 (let ((?x11244 (* l_0_7_16 l_0_7_16)))
 (let ((?x11245 (* 4.0 ?x11244)))
 (let ((?x12135 (- (+ (- (+ (* (* 2.0 l_0_7_1) l_0_7_2) ?x11245) ?x11248) ?x12133) ?x8444)))
 (= (- (+ ?x12135 ?x12136) (* (* 2.0 l_0_7_76) l_0_7_77)) 0.0)))))))))))
(assert
 (let ((?x11250 (* 2.0 l_0_7_46)))
 (let ((?x12146 (* ?x11250 l_0_7_49)))
 (let ((?x1788 (- (* (* 2.0 l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_16) l_0_7_16))))
 (let ((?x12149 (- (+ (+ ?x1788 (* 2.0 (* l_0_7_31 l_0_7_31))) ?x12146) (* (* 2.0 l_0_7_76) l_0_7_79))))
 (= ?x12149 0.0))))))
(assert
 (let ((?x11250 (* 2.0 l_0_7_46)))
 (let ((?x12174 (* ?x11250 l_0_7_56)))
 (let ((?x11244 (* l_0_7_16 l_0_7_16)))
 (let ((?x12152 (* 2.0 ?x11244)))
 (let ((?x12173 (- (+ (* (* 2.0 l_0_7_1) l_0_7_11) ?x12152) (* (* 2.0 l_0_7_31) l_0_7_31))))
 (= (- (+ ?x12173 ?x12174) (* (* 2.0 l_0_7_76) l_0_7_86)) 0.0)))))))
(assert
 (let ((?x12203 (* l_0_7_78 l_0_7_78)))
 (let ((?x12201 (* l_0_7_77 l_0_7_77)))
 (let ((?x11250 (* 2.0 l_0_7_46)))
 (let ((?x12133 (* ?x11250 l_0_7_47)))
 (let ((?x11292 (* 8.0 l_0_7_31)))
 (let ((?x11293 (* ?x11292 l_0_7_32)))
 (let ((?x11281 (* 8.0 l_0_7_16)))
 (let ((?x11282 (* ?x11281 l_0_7_17)))
 (let ((?x12190 (+ (+ ?x11282 (* 1.0 (* l_0_7_2 l_0_7_2))) (* 1.0 (* l_0_7_3 l_0_7_3)))))
 (let ((?x12198 (+ (+ (- (- ?x12190 ?x11293) ?x12133) (* 1.0 (* l_0_7_47 l_0_7_47))) (* 1.0 (* l_0_7_48 l_0_7_48)))))
 (= (- (- (+ ?x12198 (* (* 2.0 l_0_7_61) l_0_7_62)) ?x12201) ?x12203) 0.0))))))))))))
(assert
 (let ((?x11301 (* 2.0 l_0_7_48)))
 (let ((?x12215 (* ?x11301 l_0_7_50)))
 (let ((?x11298 (* 2.0 l_0_7_47)))
 (let ((?x12213 (* ?x11298 l_0_7_49)))
 (let ((?x11250 (* 2.0 l_0_7_46)))
 (let ((?x12146 (* ?x11250 l_0_7_49)))
 (let ((?x11292 (* 8.0 l_0_7_31)))
 (let ((?x11360 (* ?x11292 l_0_7_34)))
 (let ((?x11247 (* 4.0 l_0_7_31)))
 (let ((?x12209 (* ?x11247 l_0_7_32)))
 (let ((?x11289 (* 2.0 l_0_7_3)))
 (let ((?x11622 (* ?x11289 l_0_7_5)))
 (let ((?x11286 (* 2.0 l_0_7_2)))
 (let ((?x11614 (* ?x11286 l_0_7_4)))
 (let ((?x11281 (* 8.0 l_0_7_16)))
 (let ((?x11355 (* ?x11281 l_0_7_19)))
 (let ((?x12210 (+ (+ (+ (+ (* (* (- 4.0) l_0_7_16) l_0_7_17) ?x11355) ?x11614) ?x11622) ?x12209)))
 (let ((?x12218 (+ (+ (+ (- (- ?x12210 ?x11360) ?x12146) ?x12213) ?x12215) (* (* 2.0 l_0_7_61) l_0_7_64))))
 (let ((?x12222 (- (- ?x12218 (* (* 2.0 l_0_7_77) l_0_7_79)) (* (* 2.0 l_0_7_78) l_0_7_80))))
 (= ?x12222 0.0)))))))))))))))))))))
(assert
 (let ((?x11301 (* 2.0 l_0_7_48)))
 (let ((?x12235 (* ?x11301 l_0_7_57)))
 (let ((?x11298 (* 2.0 l_0_7_47)))
 (let ((?x12233 (* ?x11298 l_0_7_56)))
 (let ((?x11250 (* 2.0 l_0_7_46)))
 (let ((?x12174 (* ?x11250 l_0_7_56)))
 (let ((?x11292 (* 8.0 l_0_7_31)))
 (let ((?x11485 (* ?x11292 l_0_7_41)))
 (let ((?x11247 (* 4.0 l_0_7_31)))
 (let ((?x12209 (* ?x11247 l_0_7_32)))
 (let ((?x11281 (* 8.0 l_0_7_16)))
 (let ((?x11482 (* ?x11281 l_0_7_26)))
 (let ((?x11475 (* 2.0 l_0_7_12)))
 (let ((?x11739 (* ?x11475 l_0_7_3)))
 (let ((?x12228 (+ (+ (* (* 2.0 l_0_7_11) l_0_7_2) ?x11739) (* (* 4.0 l_0_7_16) l_0_7_17))))
 (let ((?x12238 (+ (+ (+ (- (- (- (+ ?x12228 ?x11482) ?x12209) ?x11485) ?x12174) ?x12233) ?x12235) (* (* 2.0 l_0_7_61) l_0_7_71))))
 (let ((?x12242 (- (- ?x12238 (* (* 2.0 l_0_7_77) l_0_7_86)) (* (* 2.0 l_0_7_78) l_0_7_87))))
 (= ?x12242 0.0)))))))))))))))))))
(assert
 (let ((?x12280 (* l_0_7_81 l_0_7_81)))
 (let ((?x12278 (* l_0_7_80 l_0_7_80)))
 (let ((?x12276 (* l_0_7_79 l_0_7_79)))
 (let ((?x11264 (* l_0_7_31 l_0_7_31)))
 (let ((?x11247 (* 4.0 l_0_7_31)))
 (let ((?x9362 (* ?x11247 l_0_7_34)))
 (let ((?x1941 (+ (+ (* (* (- 4.0) l_0_7_16) l_0_7_19) (* l_0_7_16 l_0_7_16)) ?x9362)))
 (let ((?x12265 (+ (+ (- ?x1941 ?x11264) (* 1.0 (* l_0_7_4 l_0_7_4))) (* 1.0 (* l_0_7_49 l_0_7_49)))))
 (let ((?x12270 (+ (+ ?x12265 (* 1.0 (* l_0_7_5 l_0_7_5))) (* 1.0 (* l_0_7_50 l_0_7_50)))))
 (let ((?x12275 (+ (+ ?x12270 (* 1.0 (* l_0_7_51 l_0_7_51))) (* 1.0 (* l_0_7_6 l_0_7_6)))))
 (= (- (- (- ?x12275 ?x12276) ?x12278) ?x12280) 0.0))))))))))))
(assert
 (let ((?x11376 (* 2.0 l_0_7_51)))
 (let ((?x12301 (* ?x11376 l_0_7_58)))
 (let ((?x11373 (* 2.0 l_0_7_50)))
 (let ((?x12299 (* ?x11373 l_0_7_57)))
 (let ((?x11367 (* 2.0 l_0_7_49)))
 (let ((?x12297 (* ?x11367 l_0_7_56)))
 (let ((?x11247 (* 4.0 l_0_7_31)))
 (let ((?x12295 (* ?x11247 l_0_7_41)))
 (let ((?x9362 (* ?x11247 l_0_7_34)))
 (let ((?x11357 (* 4.0 l_0_7_16)))
 (let ((?x12292 (* ?x11357 l_0_7_26)))
 (let ((?x11478 (* 2.0 l_0_7_13)))
 (let ((?x11944 (* ?x11478 l_0_7_6)))
 (let ((?x11475 (* 2.0 l_0_7_12)))
 (let ((?x1306 (* ?x11475 l_0_7_5)))
 (let ((?x12291 (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x1306) ?x11944) (* ?x11357 l_0_7_19))))
 (let ((?x12304 (- (+ (+ (+ (+ (- (- ?x12291 ?x12292) ?x9362) ?x12295) ?x12297) ?x12299) ?x12301) (* (* 2.0 l_0_7_79) l_0_7_86))))
 (let ((?x12308 (- (- ?x12304 (* (* 2.0 l_0_7_80) l_0_7_87)) (* (* 2.0 l_0_7_81) l_0_7_88))))
 (= ?x12308 0.0))))))))))))))))))))
(assert
 (let ((?x12354 (* l_0_7_90 l_0_7_90)))
 (let ((?x12352 (* l_0_7_89 l_0_7_89)))
 (let ((?x12350 (* l_0_7_88 l_0_7_88)))
 (let ((?x12348 (* l_0_7_87 l_0_7_87)))
 (let ((?x12346 (* l_0_7_86 l_0_7_86)))
 (let ((?x11264 (* l_0_7_31 l_0_7_31)))
 (let ((?x11247 (* 4.0 l_0_7_31)))
 (let ((?x12295 (* ?x11247 l_0_7_41)))
 (let ((?x11244 (* l_0_7_16 l_0_7_16)))
 (let ((?x11357 (* 4.0 l_0_7_16)))
 (let ((?x12292 (* ?x11357 l_0_7_26)))
 (let ((?x12320 (+ (* 1.0 (* l_0_7_11 l_0_7_11)) (* 1.0 (* l_0_7_12 l_0_7_12)))))
 (let ((?x12324 (+ (+ ?x12320 (* 1.0 (* l_0_7_13 l_0_7_13))) (* 1.0 (* l_0_7_14 l_0_7_14)))))
 (let ((?x12329 (- (- (+ (+ ?x12324 (* 1.0 (* l_0_7_15 l_0_7_15))) ?x12292) ?x11244) ?x12295)))
 (let ((?x12336 (+ (+ (+ ?x12329 ?x11264) (* 1.0 (* l_0_7_56 l_0_7_56))) (* 1.0 (* l_0_7_57 l_0_7_57)))))
 (let ((?x12342 (+ (+ ?x12336 (* 1.0 (* l_0_7_58 l_0_7_58))) (* 1.0 (* l_0_7_59 l_0_7_59)))))
 (let ((?x12351 (- (- (- (+ ?x12342 (* 1.0 (* l_0_7_60 l_0_7_60))) ?x12346) ?x12348) ?x12350)))
 (= (- (- ?x12351 ?x12352) ?x12354) 0.0)))))))))))))))))))
(assert
 (let ((?x12395 (* l_0_7_75 l_0_7_75)))
 (let ((?x12393 (* l_0_7_74 l_0_7_74)))
 (let ((?x12391 (* l_0_7_73 l_0_7_73)))
 (let ((?x12389 (* l_0_7_72 l_0_7_72)))
 (let ((?x12387 (* l_0_7_71 l_0_7_71)))
 (let ((?x12343 (* l_0_7_60 l_0_7_60)))
 (let ((?x12340 (* l_0_7_59 l_0_7_59)))
 (let ((?x12337 (* l_0_7_58 l_0_7_58)))
 (let ((?x12334 (* l_0_7_57 l_0_7_57)))
 (let ((?x12331 (* l_0_7_56 l_0_7_56)))
 (let ((?x12104 (* (* 4.0 l_0_7_45) l_0_7_45)))
 (let ((?x12101 (* (* 4.0 l_0_7_44) l_0_7_44)))
 (let ((?x12098 (* (* 4.0 l_0_7_43) l_0_7_43)))
 (let ((?x12095 (* (* 4.0 l_0_7_42) l_0_7_42)))
 (let ((?x12092 (* (* 4.0 l_0_7_41) l_0_7_41)))
 (let ((?x11578 (* 4.0 l_0_7_33)))
 (let ((?x12375 (* ?x11578 l_0_7_42)))
 (let ((?x11572 (* 4.0 l_0_7_32)))
 (let ((?x12373 (* ?x11572 l_0_7_41)))
 (let ((?x11843 (* 2.0 l_0_7_31)))
 (let ((?x12371 (* ?x11843 l_0_7_32)))
 (let ((?x12083 (* l_0_7_30 l_0_7_30)))
 (let ((?x12084 (* 4.0 ?x12083)))
 (let ((?x12080 (* l_0_7_29 l_0_7_29)))
 (let ((?x12081 (* 4.0 ?x12080)))
 (let ((?x12077 (* l_0_7_28 l_0_7_28)))
 (let ((?x12078 (* 4.0 ?x12077)))
 (let ((?x12074 (* l_0_7_27 l_0_7_27)))
 (let ((?x12075 (* 4.0 ?x12074)))
 (let ((?x12071 (* l_0_7_26 l_0_7_26)))
 (let ((?x12072 (* 4.0 ?x12071)))
 (let ((?x8598 (* 4.0 l_0_7_18)))
 (let ((?x12364 (* ?x8598 l_0_7_27)))
 (let ((?x8665 (* 4.0 l_0_7_17)))
 (let ((?x12362 (* ?x8665 l_0_7_26)))
 (let ((?x12367 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_16) l_0_7_17) ?x12362) ?x12364) ?x12072) ?x12075)))
 (let ((?x12377 (- (- (- (+ (+ (+ (+ ?x12367 ?x12078) ?x12081) ?x12084) ?x12371) ?x12373) ?x12375) ?x12092)))
 (let ((?x12384 (- (- (- (- (- (- (- ?x12377 ?x12095) ?x12098) ?x12101) ?x12104) ?x12331) ?x12334) ?x12337)))
 (let ((?x12396 (+ (+ (+ (+ (+ (- (- ?x12384 ?x12340) ?x12343) ?x12387) ?x12389) ?x12391) ?x12393) ?x12395)))
 (= ?x12396 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9145 (* l_0_7_45 l_0_7_45)))
 (let ((?x12444 (* 2.0 ?x9145)))
 (let ((?x9157 (* l_0_7_44 l_0_7_44)))
 (let ((?x12442 (* 2.0 ?x9157)))
 (let ((?x1687 (* l_0_7_43 l_0_7_43)))
 (let ((?x12440 (* 2.0 ?x1687)))
 (let ((?x1684 (* l_0_7_42 l_0_7_42)))
 (let ((?x12438 (* 2.0 ?x1684)))
 (let ((?x12120 (* l_0_7_41 l_0_7_41)))
 (let ((?x12436 (* 2.0 ?x12120)))
 (let ((?x11856 (* 4.0 l_0_7_36)))
 (let ((?x12434 (* ?x11856 l_0_7_43)))
 (let ((?x11851 (* 4.0 l_0_7_35)))
 (let ((?x12432 (* ?x11851 l_0_7_42)))
 (let ((?x11846 (* 4.0 l_0_7_34)))
 (let ((?x12430 (* ?x11846 l_0_7_41)))
 (let ((?x11843 (* 2.0 l_0_7_31)))
 (let ((?x12428 (* ?x11843 l_0_7_34)))
 (let ((?x11837 (* 4.0 l_0_7_21)))
 (let ((?x12411 (* ?x11837 l_0_7_28)))
 (let ((?x11831 (* 4.0 l_0_7_20)))
 (let ((?x12409 (* ?x11831 l_0_7_27)))
 (let ((?x8939 (* 4.0 l_0_7_19)))
 (let ((?x12407 (* ?x8939 l_0_7_26)))
 (let ((?x12415 (- (+ (+ (+ (* (* (- 2.0) l_0_7_16) l_0_7_19) ?x12407) ?x12409) ?x12411) (* (* 2.0 l_0_7_26) l_0_7_26))))
 (let ((?x12421 (- (- ?x12415 (* (* 2.0 l_0_7_27) l_0_7_27)) (* (* 2.0 l_0_7_28) l_0_7_28))))
 (let ((?x12427 (- (- ?x12421 (* (* 2.0 l_0_7_29) l_0_7_29)) (* (* 2.0 l_0_7_30) l_0_7_30))))
 (let ((?x12441 (+ (+ (+ (- (- (- (+ ?x12427 ?x12428) ?x12430) ?x12432) ?x12434) ?x12436) ?x12438) ?x12440)))
 (= (+ (+ ?x12441 ?x12442) ?x12444) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x11843 (* 2.0 l_0_7_31)))
 (let ((?x12475 (* ?x11843 l_0_7_41)))
 (let ((?x12470 (+ (* (* (- 2.0) l_0_7_16) l_0_7_26) (* 2.0 (* l_0_7_26 l_0_7_26)))))
 (let ((?x12472 (+ (+ ?x12470 (* 2.0 (* l_0_7_27 l_0_7_27))) (* 2.0 (* l_0_7_28 l_0_7_28)))))
 (let ((?x12474 (+ (+ ?x12472 (* 2.0 (* l_0_7_29 l_0_7_29))) (* 2.0 (* l_0_7_30 l_0_7_30)))))
 (let ((?x12482 (- (- (+ ?x12474 ?x12475) (* (* 2.0 l_0_7_41) l_0_7_41)) (* (* 2.0 l_0_7_42) l_0_7_42))))
 (let ((?x12488 (- (- ?x12482 (* (* 2.0 l_0_7_43) l_0_7_43)) (* (* 2.0 l_0_7_44) l_0_7_44))))
 (= (- ?x12488 (* (* 2.0 l_0_7_45) l_0_7_45)) 0.0)))))))))
(assert
 (let ((?x8600 (* l_0_7_33 l_0_7_33)))
 (let ((?x8593 (* l_0_7_32 l_0_7_32)))
 (let ((?x12506 (+ (+ (- (* (- l_0_7_17) l_0_7_17) (* l_0_7_18 l_0_7_18)) ?x8593) ?x8600)))
 (= ?x12506 0.0)))))
(assert
 (let ((?x12520 (* 2.0 l_0_7_33)))
 (let ((?x12521 (* ?x12520 l_0_7_35)))
 (let ((?x12517 (* 2.0 l_0_7_32)))
 (let ((?x12518 (* ?x12517 l_0_7_34)))
 (let ((?x12514 (* 2.0 l_0_7_18)))
 (let ((?x12515 (* ?x12514 l_0_7_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_19) ?x12515) ?x12518) ?x12521) 0.0))))))))
(assert
 (let ((?x12520 (* 2.0 l_0_7_33)))
 (let ((?x12540 (* ?x12520 l_0_7_38)))
 (let ((?x12517 (* 2.0 l_0_7_32)))
 (let ((?x12538 (* ?x12517 l_0_7_37)))
 (let ((?x12514 (* 2.0 l_0_7_18)))
 (let ((?x12531 (* ?x12514 l_0_7_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_22) ?x12531) ?x12538) ?x12540) 0.0))))))))
(assert
 (let ((?x12520 (* 2.0 l_0_7_33)))
 (let ((?x12555 (* ?x12520 l_0_7_42)))
 (let ((?x12517 (* 2.0 l_0_7_32)))
 (let ((?x12553 (* ?x12517 l_0_7_41)))
 (let ((?x12514 (* 2.0 l_0_7_18)))
 (let ((?x12551 (* ?x12514 l_0_7_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_26) ?x12551) ?x12553) ?x12555) 0.0))))))))
(assert
 (let ((?x9145 (* l_0_7_45 l_0_7_45)))
 (let ((?x9157 (* l_0_7_44 l_0_7_44)))
 (let ((?x1687 (* l_0_7_43 l_0_7_43)))
 (let ((?x1684 (* l_0_7_42 l_0_7_42)))
 (let ((?x12120 (* l_0_7_41 l_0_7_41)))
 (let ((?x11895 (* l_0_7_36 l_0_7_36)))
 (let ((?x8952 (* l_0_7_35 l_0_7_35)))
 (let ((?x11883 (* l_0_7_34 l_0_7_34)))
 (let ((?x12083 (* l_0_7_30 l_0_7_30)))
 (let ((?x12080 (* l_0_7_29 l_0_7_29)))
 (let ((?x12077 (* l_0_7_28 l_0_7_28)))
 (let ((?x12074 (* l_0_7_27 l_0_7_27)))
 (let ((?x12071 (* l_0_7_26 l_0_7_26)))
 (let ((?x11840 (* l_0_7_21 l_0_7_21)))
 (let ((?x12570 (+ (- (- (* (- l_0_7_19) l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x11840) ?x12071)))
 (let ((?x12577 (+ (+ (+ (+ (+ (+ (+ ?x12570 ?x12074) ?x12077) ?x12080) ?x12083) ?x11883) ?x8952) ?x11895)))
 (= (- (- (- (- (- ?x12577 ?x12120) ?x1684) ?x1687) ?x9157) ?x9145) 0.0))))))))))))))))))
(assert
 (let ((?x12624 (* 2.0 l_0_7_36)))
 (let ((?x12625 (* ?x12624 l_0_7_39)))
 (let ((?x12621 (* 2.0 l_0_7_35)))
 (let ((?x12622 (* ?x12621 l_0_7_38)))
 (let ((?x12618 (* 2.0 l_0_7_34)))
 (let ((?x12619 (* ?x12618 l_0_7_37)))
 (let ((?x12615 (* 2.0 l_0_7_21)))
 (let ((?x12616 (* ?x12615 l_0_7_24)))
 (let ((?x12612 (* 2.0 l_0_7_20)))
 (let ((?x12613 (* ?x12612 l_0_7_23)))
 (let ((?x12623 (+ (+ (- (- (* (* (- 2.0) l_0_7_19) l_0_7_22) ?x12613) ?x12616) ?x12619) ?x12622)))
 (= (+ ?x12623 ?x12625) 0.0)))))))))))))
(assert
 (let ((?x12624 (* 2.0 l_0_7_36)))
 (let ((?x12651 (* ?x12624 l_0_7_43)))
 (let ((?x12621 (* 2.0 l_0_7_35)))
 (let ((?x12649 (* ?x12621 l_0_7_42)))
 (let ((?x12618 (* 2.0 l_0_7_34)))
 (let ((?x12647 (* ?x12618 l_0_7_41)))
 (let ((?x12615 (* 2.0 l_0_7_21)))
 (let ((?x12639 (* ?x12615 l_0_7_28)))
 (let ((?x12612 (* 2.0 l_0_7_20)))
 (let ((?x9789 (* ?x12612 l_0_7_27)))
 (let ((?x12650 (+ (+ (- (- (* (* (- 2.0) l_0_7_19) l_0_7_26) ?x9789) ?x12639) ?x12647) ?x12649)))
 (= (+ ?x12650 ?x12651) 0.0)))))))))))))
(assert
 (let ((?x962 (* l_0_7_40 l_0_7_40)))
 (let ((?x4597 (* l_0_7_39 l_0_7_39)))
 (let ((?x8074 (* l_0_7_38 l_0_7_38)))
 (let ((?x5865 (* l_0_7_37 l_0_7_37)))
 (let ((?x11686 (* l_0_7_25 l_0_7_25)))
 (let ((?x11683 (* l_0_7_24 l_0_7_24)))
 (let ((?x12665 (- (- (- (* (- l_0_7_22) l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x11683) ?x11686)))
 (= (+ (+ (+ (+ ?x12665 ?x5865) ?x8074) ?x4597) ?x962) 0.0)))))))))
(assert
 (let ((?x12056 (* 2.0 l_0_7_40)))
 (let ((?x12694 (* ?x12056 l_0_7_44)))
 (let ((?x12052 (* 2.0 l_0_7_39)))
 (let ((?x12692 (* ?x12052 l_0_7_43)))
 (let ((?x12048 (* 2.0 l_0_7_38)))
 (let ((?x12690 (* ?x12048 l_0_7_42)))
 (let ((?x12044 (* 2.0 l_0_7_37)))
 (let ((?x12688 (* ?x12044 l_0_7_41)))
 (let ((?x11922 (* 2.0 l_0_7_25)))
 (let ((?x12686 (* ?x11922 l_0_7_29)))
 (let ((?x11919 (* 2.0 l_0_7_24)))
 (let ((?x12684 (* ?x11919 l_0_7_28)))
 (let ((?x11916 (* 2.0 l_0_7_23)))
 (let ((?x12682 (* ?x11916 l_0_7_27)))
 (let ((?x12689 (+ (- (- (- (* (* (- 2.0) l_0_7_22) l_0_7_26) ?x12682) ?x12684) ?x12686) ?x12688)))
 (= (+ (+ (+ ?x12689 ?x12690) ?x12692) ?x12694) 0.0)))))))))))))))))
(assert
 (let ((?x9145 (* l_0_7_45 l_0_7_45)))
 (let ((?x9157 (* l_0_7_44 l_0_7_44)))
 (let ((?x1687 (* l_0_7_43 l_0_7_43)))
 (let ((?x1684 (* l_0_7_42 l_0_7_42)))
 (let ((?x12120 (* l_0_7_41 l_0_7_41)))
 (let ((?x12083 (* l_0_7_30 l_0_7_30)))
 (let ((?x12080 (* l_0_7_29 l_0_7_29)))
 (let ((?x12077 (* l_0_7_28 l_0_7_28)))
 (let ((?x12711 (- (- (- (* (- l_0_7_26) l_0_7_26) (* l_0_7_27 l_0_7_27)) ?x12077) ?x12080)))
 (= (+ (+ (+ (+ (+ (- ?x12711 ?x12083) ?x12120) ?x1684) ?x1687) ?x9157) ?x9145) 0.0)))))))))))
(assert
 (let ((?x12728 (* l_0_7_66 l_0_7_66)))
 (let ((?x12726 (* l_0_7_65 l_0_7_65)))
 (let ((?x12724 (* l_0_7_64 l_0_7_64)))
 (let ((?x12271 (* l_0_7_51 l_0_7_51)))
 (let ((?x12268 (* l_0_7_50 l_0_7_50)))
 (let ((?x12263 (* l_0_7_49 l_0_7_49)))
 (let ((?x11856 (* 4.0 l_0_7_36)))
 (let ((?x11859 (* ?x11856 l_0_7_36)))
 (let ((?x11851 (* 4.0 l_0_7_35)))
 (let ((?x11854 (* ?x11851 l_0_7_35)))
 (let ((?x11846 (* 4.0 l_0_7_34)))
 (let ((?x11849 (* ?x11846 l_0_7_34)))
 (let ((?x11578 (* 4.0 l_0_7_33)))
 (let ((?x9813 (* ?x11578 l_0_7_35)))
 (let ((?x11572 (* 4.0 l_0_7_32)))
 (let ((?x9785 (* ?x11572 l_0_7_34)))
 (let ((?x11843 (* 2.0 l_0_7_31)))
 (let ((?x12371 (* ?x11843 l_0_7_32)))
 (let ((?x11840 (* l_0_7_21 l_0_7_21)))
 (let ((?x11841 (* 4.0 ?x11840)))
 (let ((?x11834 (* l_0_7_20 l_0_7_20)))
 (let ((?x11835 (* 4.0 ?x11834)))
 (let ((?x11828 (* l_0_7_19 l_0_7_19)))
 (let ((?x11829 (* 4.0 ?x11828)))
 (let ((?x8598 (* 4.0 l_0_7_18)))
 (let ((?x2357 (* ?x8598 l_0_7_20)))
 (let ((?x8665 (* 4.0 l_0_7_17)))
 (let ((?x9875 (* ?x8665 l_0_7_19)))
 (let ((?x6755 (+ (+ (- (- (* (* 2.0 l_0_7_16) l_0_7_17) ?x9875) ?x2357) ?x11829) ?x11835)))
 (let ((?x9821 (- (- (- (+ (+ (- (+ ?x6755 ?x11841) ?x12371) ?x9785) ?x9813) ?x11849) ?x11854) ?x11859)))
 (= (+ (+ (+ (- (- (- ?x9821 ?x12263) ?x12268) ?x12271) ?x12724) ?x12726) ?x12728) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x11895 (* l_0_7_36 l_0_7_36)))
 (let ((?x12757 (* 2.0 ?x11895)))
 (let ((?x8952 (* l_0_7_35 l_0_7_35)))
 (let ((?x12755 (* 2.0 ?x8952)))
 (let ((?x11883 (* l_0_7_34 l_0_7_34)))
 (let ((?x12753 (* 2.0 ?x11883)))
 (let ((?x11843 (* 2.0 l_0_7_31)))
 (let ((?x12428 (* ?x11843 l_0_7_34)))
 (let ((?x12747 (- (* (* 2.0 l_0_7_16) l_0_7_19) (* (* 2.0 l_0_7_19) l_0_7_19))))
 (let ((?x12751 (- (- ?x12747 (* (* 2.0 l_0_7_20) l_0_7_20)) (* (* 2.0 l_0_7_21) l_0_7_21))))
 (= (+ (+ (+ (- ?x12751 ?x12428) ?x12753) ?x12755) ?x12757) 0.0))))))))))))
(assert
 (let ((?x11856 (* 4.0 l_0_7_36)))
 (let ((?x12434 (* ?x11856 l_0_7_43)))
 (let ((?x11851 (* 4.0 l_0_7_35)))
 (let ((?x12432 (* ?x11851 l_0_7_42)))
 (let ((?x11846 (* 4.0 l_0_7_34)))
 (let ((?x12430 (* ?x11846 l_0_7_41)))
 (let ((?x11843 (* 2.0 l_0_7_31)))
 (let ((?x12475 (* ?x11843 l_0_7_41)))
 (let ((?x11840 (* l_0_7_21 l_0_7_21)))
 (let ((?x2499 (* 2.0 ?x11840)))
 (let ((?x11837 (* 4.0 l_0_7_21)))
 (let ((?x12411 (* ?x11837 l_0_7_28)))
 (let ((?x11834 (* l_0_7_20 l_0_7_20)))
 (let ((?x12766 (* 2.0 ?x11834)))
 (let ((?x11831 (* 4.0 l_0_7_20)))
 (let ((?x12409 (* ?x11831 l_0_7_27)))
 (let ((?x11828 (* l_0_7_19 l_0_7_19)))
 (let ((?x12761 (* 2.0 ?x11828)))
 (let ((?x8939 (* 4.0 l_0_7_19)))
 (let ((?x12407 (* ?x8939 l_0_7_26)))
 (let ((?x12778 (+ (- (+ (- (* (* 2.0 l_0_7_16) l_0_7_26) ?x12407) ?x12761) ?x12409) ?x12766)))
 (let ((?x12784 (- (+ (- (+ (- ?x12778 ?x12411) ?x2499) ?x12475) ?x12430) (* (* 2.0 l_0_7_34) l_0_7_34))))
 (let ((?x12790 (- (+ (- (+ ?x12784 ?x12432) (* (* 2.0 l_0_7_35) l_0_7_35)) ?x12434) (* (* 2.0 l_0_7_36) l_0_7_36))))
 (= ?x12790 0.0)))))))))))))))))))))))))
(assert
 (let ((?x8600 (* l_0_7_33 l_0_7_33)))
 (let ((?x8593 (* l_0_7_32 l_0_7_32)))
 (let ((?x12806 (- (- (+ (* l_0_7_17 l_0_7_17) (* l_0_7_18 l_0_7_18)) ?x8593) ?x8600)))
 (= ?x12806 0.0)))))
(assert
 (let ((?x12520 (* 2.0 l_0_7_33)))
 (let ((?x12521 (* ?x12520 l_0_7_35)))
 (let ((?x12517 (* 2.0 l_0_7_32)))
 (let ((?x12518 (* ?x12517 l_0_7_34)))
 (let ((?x12514 (* 2.0 l_0_7_18)))
 (let ((?x12515 (* ?x12514 l_0_7_20)))
 (= (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_19) ?x12515) ?x12518) ?x12521) 0.0))))))))
(assert
 (let ((?x12520 (* 2.0 l_0_7_33)))
 (let ((?x12540 (* ?x12520 l_0_7_38)))
 (let ((?x12517 (* 2.0 l_0_7_32)))
 (let ((?x12538 (* ?x12517 l_0_7_37)))
 (let ((?x12514 (* 2.0 l_0_7_18)))
 (let ((?x12531 (* ?x12514 l_0_7_23)))
 (= (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_22) ?x12531) ?x12538) ?x12540) 0.0))))))))
(assert
 (let ((?x12520 (* 2.0 l_0_7_33)))
 (let ((?x12555 (* ?x12520 l_0_7_42)))
 (let ((?x12517 (* 2.0 l_0_7_32)))
 (let ((?x12553 (* ?x12517 l_0_7_41)))
 (let ((?x12514 (* 2.0 l_0_7_18)))
 (let ((?x12551 (* ?x12514 l_0_7_27)))
 (= (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_26) ?x12551) ?x12553) ?x12555) 0.0))))))))
(assert
 (let ((?x11895 (* l_0_7_36 l_0_7_36)))
 (let ((?x8952 (* l_0_7_35 l_0_7_35)))
 (let ((?x11883 (* l_0_7_34 l_0_7_34)))
 (let ((?x11840 (* l_0_7_21 l_0_7_21)))
 (let ((?x2873 (- (+ (+ (* l_0_7_19 l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x11840) ?x11883)))
 (= (- (- ?x2873 ?x8952) ?x11895) 0.0)))))))
(assert
 (let ((?x12624 (* 2.0 l_0_7_36)))
 (let ((?x12625 (* ?x12624 l_0_7_39)))
 (let ((?x12621 (* 2.0 l_0_7_35)))
 (let ((?x12622 (* ?x12621 l_0_7_38)))
 (let ((?x12618 (* 2.0 l_0_7_34)))
 (let ((?x12619 (* ?x12618 l_0_7_37)))
 (let ((?x12615 (* 2.0 l_0_7_21)))
 (let ((?x12616 (* ?x12615 l_0_7_24)))
 (let ((?x12612 (* 2.0 l_0_7_20)))
 (let ((?x12613 (* ?x12612 l_0_7_23)))
 (let ((?x12846 (- (- (+ (+ (* (* 2.0 l_0_7_19) l_0_7_22) ?x12613) ?x12616) ?x12619) ?x12622)))
 (= (- ?x12846 ?x12625) 0.0)))))))))))))
(assert
 (let ((?x12624 (* 2.0 l_0_7_36)))
 (let ((?x12651 (* ?x12624 l_0_7_43)))
 (let ((?x12621 (* 2.0 l_0_7_35)))
 (let ((?x12649 (* ?x12621 l_0_7_42)))
 (let ((?x12618 (* 2.0 l_0_7_34)))
 (let ((?x12647 (* ?x12618 l_0_7_41)))
 (let ((?x12615 (* 2.0 l_0_7_21)))
 (let ((?x12639 (* ?x12615 l_0_7_28)))
 (let ((?x12612 (* 2.0 l_0_7_20)))
 (let ((?x9789 (* ?x12612 l_0_7_27)))
 (let ((?x12853 (- (- (+ (+ (* (* 2.0 l_0_7_19) l_0_7_26) ?x9789) ?x12639) ?x12647) ?x12649)))
 (= (- ?x12853 ?x12651) 0.0)))))))))))))
(assert
 (let ((?x962 (* l_0_7_40 l_0_7_40)))
 (let ((?x4597 (* l_0_7_39 l_0_7_39)))
 (let ((?x8074 (* l_0_7_38 l_0_7_38)))
 (let ((?x5865 (* l_0_7_37 l_0_7_37)))
 (let ((?x11686 (* l_0_7_25 l_0_7_25)))
 (let ((?x11683 (* l_0_7_24 l_0_7_24)))
 (let ((?x6968 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x11683) ?x11686)))
 (= (- (- (- (- ?x6968 ?x5865) ?x8074) ?x4597) ?x962) 0.0)))))))))
(assert
 (let ((?x12056 (* 2.0 l_0_7_40)))
 (let ((?x12694 (* ?x12056 l_0_7_44)))
 (let ((?x12052 (* 2.0 l_0_7_39)))
 (let ((?x12692 (* ?x12052 l_0_7_43)))
 (let ((?x12048 (* 2.0 l_0_7_38)))
 (let ((?x12690 (* ?x12048 l_0_7_42)))
 (let ((?x12044 (* 2.0 l_0_7_37)))
 (let ((?x12688 (* ?x12044 l_0_7_41)))
 (let ((?x11922 (* 2.0 l_0_7_25)))
 (let ((?x12686 (* ?x11922 l_0_7_29)))
 (let ((?x11919 (* 2.0 l_0_7_24)))
 (let ((?x12684 (* ?x11919 l_0_7_28)))
 (let ((?x11916 (* 2.0 l_0_7_23)))
 (let ((?x12682 (* ?x11916 l_0_7_27)))
 (let ((?x2786 (- (+ (+ (+ (* (* 2.0 l_0_7_22) l_0_7_26) ?x12682) ?x12684) ?x12686) ?x12688)))
 (= (- (- (- ?x2786 ?x12690) ?x12692) ?x12694) 0.0)))))))))))))))))
(assert
 (let ((?x11301 (* 2.0 l_0_7_48)))
 (let ((?x12235 (* ?x11301 l_0_7_57)))
 (let ((?x11298 (* 2.0 l_0_7_47)))
 (let ((?x12233 (* ?x11298 l_0_7_56)))
 (let ((?x11575 (* 8.0 l_0_7_33)))
 (let ((?x11763 (* ?x11575 l_0_7_42)))
 (let ((?x11569 (* 8.0 l_0_7_32)))
 (let ((?x11760 (* ?x11569 l_0_7_41)))
 (let ((?x11559 (* 8.0 l_0_7_18)))
 (let ((?x11745 (* ?x11559 l_0_7_27)))
 (let ((?x11554 (* 8.0 l_0_7_17)))
 (let ((?x11742 (* ?x11554 l_0_7_26)))
 (let ((?x12882 (+ (+ (+ ?x11742 (* 2.0 (* l_0_7_17 l_0_7_17))) ?x11745) (* 2.0 (* l_0_7_18 l_0_7_18)))))
 (let ((?x12888 (- (- (- (- ?x12882 ?x11760) (* (* 2.0 l_0_7_32) l_0_7_32)) ?x11763) (* (* 2.0 l_0_7_33) l_0_7_33))))
 (let ((?x12894 (+ (+ (- (- ?x12888 ?x12233) ?x12235) (* (* 2.0 l_0_7_62) l_0_7_71)) (* (* 2.0 l_0_7_63) l_0_7_72))))
 (= ?x12894 0.0)))))))))))))))))
(assert
 (let ((?x11376 (* 2.0 l_0_7_51)))
 (let ((?x12301 (* ?x11376 l_0_7_58)))
 (let ((?x11373 (* 2.0 l_0_7_50)))
 (let ((?x12299 (* ?x11373 l_0_7_57)))
 (let ((?x11367 (* 2.0 l_0_7_49)))
 (let ((?x12297 (* ?x11367 l_0_7_56)))
 (let ((?x11638 (* 8.0 l_0_7_36)))
 (let ((?x11974 (* ?x11638 l_0_7_43)))
 (let ((?x11635 (* 8.0 l_0_7_35)))
 (let ((?x11971 (* ?x11635 l_0_7_42)))
 (let ((?x11632 (* 8.0 l_0_7_34)))
 (let ((?x11968 (* ?x11632 l_0_7_41)))
 (let ((?x11578 (* 4.0 l_0_7_33)))
 (let ((?x12375 (* ?x11578 l_0_7_42)))
 (let ((?x9813 (* ?x11578 l_0_7_35)))
 (let ((?x11572 (* 4.0 l_0_7_32)))
 (let ((?x12373 (* ?x11572 l_0_7_41)))
 (let ((?x9785 (* ?x11572 l_0_7_34)))
 (let ((?x11619 (* 8.0 l_0_7_21)))
 (let ((?x11953 (* ?x11619 l_0_7_28)))
 (let ((?x11616 (* 8.0 l_0_7_20)))
 (let ((?x11950 (* ?x11616 l_0_7_27)))
 (let ((?x5719 (* 8.0 l_0_7_19)))
 (let ((?x11947 (* ?x5719 l_0_7_26)))
 (let ((?x8598 (* 4.0 l_0_7_18)))
 (let ((?x12364 (* ?x8598 l_0_7_27)))
 (let ((?x2357 (* ?x8598 l_0_7_20)))
 (let ((?x8665 (* 4.0 l_0_7_17)))
 (let ((?x12362 (* ?x8665 l_0_7_26)))
 (let ((?x9875 (* ?x8665 l_0_7_19)))
 (let ((?x12916 (- (+ (+ (+ (- (+ (- ?x9875 ?x12362) ?x2357) ?x12364) ?x11947) ?x11950) ?x11953) ?x9785)))
 (let ((?x12923 (- (- (- (- (+ (- (+ ?x12916 ?x12373) ?x9813) ?x12375) ?x11968) ?x11971) ?x11974) ?x12297)))
 (let ((?x12929 (+ (+ (- (- ?x12923 ?x12299) ?x12301) (* (* 2.0 l_0_7_64) l_0_7_71)) (* (* 2.0 l_0_7_65) l_0_7_72))))
 (= (+ ?x12929 (* (* 2.0 l_0_7_66) l_0_7_73)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11301 (* 2.0 l_0_7_48)))
 (let ((?x12215 (* ?x11301 l_0_7_50)))
 (let ((?x11298 (* 2.0 l_0_7_47)))
 (let ((?x12213 (* ?x11298 l_0_7_49)))
 (let ((?x8600 (* l_0_7_33 l_0_7_33)))
 (let ((?x3089 (* 2.0 ?x8600)))
 (let ((?x11575 (* 8.0 l_0_7_33)))
 (let ((?x11628 (* ?x11575 l_0_7_35)))
 (let ((?x8593 (* l_0_7_32 l_0_7_32)))
 (let ((?x3069 (* 2.0 ?x8593)))
 (let ((?x11569 (* 8.0 l_0_7_32)))
 (let ((?x11624 (* ?x11569 l_0_7_34)))
 (let ((?x11559 (* 8.0 l_0_7_18)))
 (let ((?x5716 (* ?x11559 l_0_7_20)))
 (let ((?x11554 (* 8.0 l_0_7_17)))
 (let ((?x8670 (* ?x11554 l_0_7_19)))
 (let ((?x3194 (- (+ (- ?x8670 (* (* 2.0 l_0_7_17) l_0_7_17)) ?x5716) (* (* 2.0 l_0_7_18) l_0_7_18))))
 (let ((?x10088 (+ (- (- (+ (- (+ (- ?x3194 ?x11624) ?x3069) ?x11628) ?x3089) ?x12213) ?x12215) (* (* 2.0 l_0_7_62) l_0_7_64))))
 (= (+ ?x10088 (* (* 2.0 l_0_7_63) l_0_7_65)) 0.0))))))))))))))))))))
(assert
 (let ((?x12951 (* l_0_7_63 l_0_7_63)))
 (let ((?x12949 (* l_0_7_62 l_0_7_62)))
 (let ((?x12196 (* l_0_7_48 l_0_7_48)))
 (let ((?x12193 (* l_0_7_47 l_0_7_47)))
 (let ((?x11578 (* 4.0 l_0_7_33)))
 (let ((?x11579 (* ?x11578 l_0_7_33)))
 (let ((?x11572 (* 4.0 l_0_7_32)))
 (let ((?x11573 (* ?x11572 l_0_7_32)))
 (let ((?x11562 (* l_0_7_18 l_0_7_18)))
 (let ((?x11563 (* 4.0 ?x11562)))
 (let ((?x11556 (* l_0_7_17 l_0_7_17)))
 (let ((?x11557 (* 4.0 ?x11556)))
 (let ((?x12952 (+ (+ (- (- (- (- (+ ?x11557 ?x11563) ?x11573) ?x11579) ?x12193) ?x12196) ?x12949) ?x12951)))
 (= ?x12952 0.0)))))))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (let ((?x13036 (* l_0_8_90 l_0_8_90)))
 (let ((?x13034 (* l_0_8_89 l_0_8_89)))
 (let ((?x13032 (* l_0_8_88 l_0_8_88)))
 (let ((?x13030 (* l_0_8_87 l_0_8_87)))
 (let ((?x13028 (* l_0_8_86 l_0_8_86)))
 (let ((?x13011 (* l_0_8_31 l_0_8_31)))
 (let ((?x13008 (* 4.0 l_0_8_31)))
 (let ((?x13009 (* ?x13008 l_0_8_41)))
 (let ((?x13006 (* l_0_8_16 l_0_8_16)))
 (let ((?x13003 (* 4.0 l_0_8_16)))
 (let ((?x13004 (* ?x13003 l_0_8_26)))
 (let ((?x12986 (* l_0_8_105 l_0_8_105)))
 (let ((?x12984 (* l_0_8_104 l_0_8_104)))
 (let ((?x12982 (* l_0_8_103 l_0_8_103)))
 (let ((?x12983 (- (- (* (- l_0_8_101) l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x12982)))
 (let ((?x12993 (+ (+ (- (- ?x12983 ?x12984) ?x12986) (* 1.0 (* l_0_8_11 l_0_8_11))) (* 1.0 (* l_0_8_12 l_0_8_12)))))
 (let ((?x12999 (+ (+ ?x12993 (* 1.0 (* l_0_8_13 l_0_8_13))) (* 1.0 (* l_0_8_14 l_0_8_14)))))
 (let ((?x13010 (- (- (+ (+ ?x12999 (* 1.0 (* l_0_8_15 l_0_8_15))) ?x13004) ?x13006) ?x13009)))
 (let ((?x13018 (+ (+ (+ ?x13010 ?x13011) (* 1.0 (* l_0_8_56 l_0_8_56))) (* 1.0 (* l_0_8_57 l_0_8_57)))))
 (let ((?x13024 (+ (+ ?x13018 (* 1.0 (* l_0_8_58 l_0_8_58))) (* 1.0 (* l_0_8_59 l_0_8_59)))))
 (let ((?x13033 (- (- (- (+ ?x13024 (* 1.0 (* l_0_8_60 l_0_8_60))) ?x13028) ?x13030) ?x13032)))
 (= (+ (- (- ?x13033 ?x13034) ?x13036) 1.0) 0.0)))))))))))))))))))))))
(assert
 (let ((?x13079 (* 2.0 l_0_8_46)))
 (let ((?x13080 (* ?x13079 l_0_8_56)))
 (let ((?x13073 (- (+ (* (- 4.0) _a_4_) (* (* 2.0 l_0_8_1) l_0_8_11)) (* (* 2.0 l_0_8_101) l_0_8_91))))
 (let ((?x13078 (- (+ ?x13073 (* 2.0 (* l_0_8_16 l_0_8_16))) (* (* 2.0 l_0_8_31) l_0_8_31))))
 (= (+ (- (+ ?x13078 ?x13080) (* (* 2.0 l_0_8_76) l_0_8_86)) 2.0) 0.0))))))
(assert
 (let ((?x13117 (* l_0_8_91 l_0_8_91)))
 (let ((?x13115 (* l_0_8_76 l_0_8_76)))
 (let ((?x13114 (+ (+ (* (- 4.0) _a_2_) (* 1.0 (* l_0_8_1 l_0_8_1))) (* 1.0 (* l_0_8_46 l_0_8_46)))))
 (= (- (- ?x13114 ?x13115) ?x13117) 0.0)))))
(assert
 (let ((?x13162 (* l_0_8_96 l_0_8_96)))
 (let ((?x13160 (* l_0_8_95 l_0_8_95)))
 (let ((?x13158 (* l_0_8_94 l_0_8_94)))
 (let ((?x13156 (* l_0_8_81 l_0_8_81)))
 (let ((?x13154 (* l_0_8_80 l_0_8_80)))
 (let ((?x13152 (* l_0_8_79 l_0_8_79)))
 (let ((?x13011 (* l_0_8_31 l_0_8_31)))
 (let ((?x13008 (* 4.0 l_0_8_31)))
 (let ((?x13131 (* ?x13008 l_0_8_34)))
 (let ((?x13132 (+ (+ (* (* (- 4.0) l_0_8_16) l_0_8_19) (* l_0_8_16 l_0_8_16)) ?x13131)))
 (let ((?x13139 (+ (+ (- ?x13132 ?x13011) (* 1.0 (* l_0_8_4 l_0_8_4))) (* 1.0 (* l_0_8_49 l_0_8_49)))))
 (let ((?x13145 (+ (+ ?x13139 (* 1.0 (* l_0_8_5 l_0_8_5))) (* 1.0 (* l_0_8_50 l_0_8_50)))))
 (let ((?x13151 (+ (+ ?x13145 (* 1.0 (* l_0_8_51 l_0_8_51))) (* 1.0 (* l_0_8_6 l_0_8_6)))))
 (let ((?x13164 (- (- (- (- (- (- (- ?x13151 ?x13152) ?x13154) ?x13156) ?x13158) ?x13160) ?x13162) 1.0)))
 (= ?x13164 0.0))))))))))))))))
(assert
 (let ((?x13079 (* 2.0 l_0_8_46)))
 (let ((?x13189 (* ?x13079 l_0_8_49)))
 (let ((?x13011 (* l_0_8_31 l_0_8_31)))
 (let ((?x7165 (* 2.0 ?x13011)))
 (let ((?x13187 (- (* (* 2.0 l_0_8_1) l_0_8_4) (* (* 2.0 l_0_8_16) l_0_8_16))))
 (let ((?x13195 (- (- (+ (+ ?x13187 ?x7165) ?x13189) (* (* 2.0 l_0_8_76) l_0_8_79)) (* (* 2.0 l_0_8_91) l_0_8_94))))
 (= (+ ?x13195 2.0) 0.0))))))))
(assert
 (let ((?x13079 (* 2.0 l_0_8_46)))
 (let ((?x13218 (* ?x13079 l_0_8_52)))
 (let ((?x13008 (* 4.0 l_0_8_31)))
 (let ((?x13216 (* ?x13008 l_0_8_31)))
 (let ((?x13006 (* l_0_8_16 l_0_8_16)))
 (let ((?x13214 (* 4.0 ?x13006)))
 (let ((?x13215 (+ (- (* (* 2.0 l_0_8_1) l_0_8_7) (* l_0_8_1 l_0_8_1)) ?x13214)))
 (let ((?x13223 (- (- (+ (- ?x13215 ?x13216) ?x13218) (* (* 2.0 l_0_8_76) l_0_8_82)) (* (* 2.0 l_0_8_91) l_0_8_97))))
 (= (- ?x13223 4.0) 0.0))))))))))
(assert
 (let ((?x13257 (* l_0_8_61 l_0_8_61)))
 (let ((?x13112 (* l_0_8_46 l_0_8_46)))
 (let ((?x13079 (* 2.0 l_0_8_46)))
 (let ((?x13254 (* ?x13079 l_0_8_47)))
 (let ((?x13008 (* 4.0 l_0_8_31)))
 (let ((?x13216 (* ?x13008 l_0_8_31)))
 (let ((?x13006 (* l_0_8_16 l_0_8_16)))
 (let ((?x13214 (* 4.0 ?x13006)))
 (let ((?x13253 (- (+ (+ (* (- 4.0) _a_3_) (* (* 2.0 l_0_8_1) l_0_8_2)) ?x13214) ?x13216)))
 (let ((?x13260 (- (+ (- (+ ?x13253 ?x13254) ?x13112) ?x13257) (* (* 2.0 l_0_8_76) l_0_8_77))))
 (= (- ?x13260 (* (* 2.0 l_0_8_91) l_0_8_92)) 0.0))))))))))))
(assert
 (let ((?x13307 (* 2.0 l_0_8_48)))
 (let ((?x13308 (* ?x13307 l_0_8_53)))
 (let ((?x13304 (* 2.0 l_0_8_47)))
 (let ((?x13305 (* ?x13304 l_0_8_52)))
 (let ((?x13079 (* 2.0 l_0_8_46)))
 (let ((?x13218 (* ?x13079 l_0_8_52)))
 (let ((?x13298 (* 8.0 l_0_8_31)))
 (let ((?x13301 (* ?x13298 l_0_8_37)))
 (let ((?x13299 (* ?x13298 l_0_8_32)))
 (let ((?x13295 (* 2.0 l_0_8_3)))
 (let ((?x13296 (* ?x13295 l_0_8_8)))
 (let ((?x13292 (* 2.0 l_0_8_2)))
 (let ((?x13293 (* ?x13292 l_0_8_7)))
 (let ((?x13287 (* 8.0 l_0_8_16)))
 (let ((?x13290 (* ?x13287 l_0_8_22)))
 (let ((?x13294 (+ (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_2) (* ?x13287 l_0_8_17)) ?x13290) ?x13293)))
 (let ((?x13312 (+ (+ (+ (- (- (- (+ ?x13294 ?x13296) ?x13299) ?x13301) ?x13218) ?x13305) ?x13308) (* (* 2.0 l_0_8_61) l_0_8_67))))
 (let ((?x13318 (- (- ?x13312 (* (* 2.0 l_0_8_77) l_0_8_82)) (* (* 2.0 l_0_8_78) l_0_8_83))))
 (let ((?x13324 (- (- ?x13318 (* (* 2.0 l_0_8_92) l_0_8_97)) (* (* 2.0 l_0_8_93) l_0_8_98))))
 (= ?x13324 0.0)))))))))))))))))))))
(assert
 (let ((?x13394 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x13390 (* 2.0 l_0_8_51)))
 (let ((?x13391 (* ?x13390 l_0_8_54)))
 (let ((?x13387 (* 2.0 l_0_8_50)))
 (let ((?x13388 (* ?x13387 l_0_8_53)))
 (let ((?x13385 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x13381 (* 2.0 l_0_8_49)))
 (let ((?x13382 (* ?x13381 l_0_8_52)))
 (let ((?x13379 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x13008 (* 4.0 l_0_8_31)))
 (let ((?x13376 (* ?x13008 l_0_8_37)))
 (let ((?x13298 (* 8.0 l_0_8_31)))
 (let ((?x13374 (* ?x13298 l_0_8_34)))
 (let ((?x13003 (* 4.0 l_0_8_16)))
 (let ((?x13372 (* ?x13003 l_0_8_22)))
 (let ((?x13287 (* 8.0 l_0_8_16)))
 (let ((?x13370 (* ?x13287 l_0_8_19)))
 (let ((?x13377 (+ (- (- (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x13370) ?x13372) ?x13374) ?x13376)))
 (let ((?x13398 (- (+ (+ (+ (+ (+ (+ ?x13377 ?x13379) ?x13382) ?x13385) ?x13388) ?x13391) ?x13394) (* (* 2.0 l_0_8_79) l_0_8_82))))
 (let ((?x13404 (- (- ?x13398 (* (* 2.0 l_0_8_80) l_0_8_83)) (* (* 2.0 l_0_8_81) l_0_8_84))))
 (let ((?x13410 (- (- ?x13404 (* (* 2.0 l_0_8_94) l_0_8_97)) (* (* 2.0 l_0_8_95) l_0_8_98))))
 (= (- ?x13410 (* (* 2.0 l_0_8_96) l_0_8_99)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x13492 (* l_0_8_99 l_0_8_99)))
 (let ((?x13490 (* l_0_8_98 l_0_8_98)))
 (let ((?x13488 (* l_0_8_97 l_0_8_97)))
 (let ((?x13483 (* l_0_8_85 l_0_8_85)))
 (let ((?x13481 (* l_0_8_84 l_0_8_84)))
 (let ((?x13479 (* l_0_8_83 l_0_8_83)))
 (let ((?x13477 (* l_0_8_82 l_0_8_82)))
 (let ((?x13298 (* 8.0 l_0_8_31)))
 (let ((?x13301 (* ?x13298 l_0_8_37)))
 (let ((?x13287 (* 8.0 l_0_8_16)))
 (let ((?x13290 (* ?x13287 l_0_8_22)))
 (let ((?x13455 (* l_0_8_100 l_0_8_100)))
 (let ((?x13454 (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) (* 1.0 (* l_0_8_10 l_0_8_10)))))
 (let ((?x13461 (+ (- (+ (- ?x13454 ?x13455) ?x13290) ?x13301) (* 1.0 (* l_0_8_52 l_0_8_52)))))
 (let ((?x13467 (+ (+ ?x13461 (* 1.0 (* l_0_8_53 l_0_8_53))) (* 1.0 (* l_0_8_54 l_0_8_54)))))
 (let ((?x13473 (+ (+ ?x13467 (* 1.0 (* l_0_8_55 l_0_8_55))) (* 1.0 (* l_0_8_7 l_0_8_7)))))
 (let ((?x13482 (- (- (- (+ ?x13473 (* 1.0 (* l_0_8_8 l_0_8_8))) ?x13477) ?x13479) ?x13481)))
 (let ((?x13491 (- (- (+ (- ?x13482 ?x13483) (* 1.0 (* l_0_8_9 l_0_8_9))) ?x13488) ?x13490)))
 (= (- ?x13491 ?x13492) 0.0))))))))))))))))))))
(assert
 (let ((?x13570 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x13567 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x13564 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x13561 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x13298 (* 8.0 l_0_8_31)))
 (let ((?x13558 (* ?x13298 l_0_8_41)))
 (let ((?x13008 (* 4.0 l_0_8_31)))
 (let ((?x13376 (* ?x13008 l_0_8_37)))
 (let ((?x13287 (* 8.0 l_0_8_16)))
 (let ((?x13555 (* ?x13287 l_0_8_26)))
 (let ((?x13003 (* 4.0 l_0_8_16)))
 (let ((?x13372 (* ?x13003 l_0_8_22)))
 (let ((?x13551 (* 2.0 l_0_8_13)))
 (let ((?x13552 (* ?x13551 l_0_8_9)))
 (let ((?x13548 (* 2.0 l_0_8_12)))
 (let ((?x13549 (* ?x13548 l_0_8_8)))
 (let ((?x13545 (* 2.0 l_0_8_11)))
 (let ((?x13546 (* ?x13545 l_0_8_7)))
 (let ((?x13533 (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_10) l_0_8_14))))
 (let ((?x13538 (- (- ?x13533 (* (* 2.0 l_0_8_100) l_0_8_104)) (* (* 2.0 l_0_8_101) l_0_8_97))))
 (let ((?x13544 (- (- ?x13538 (* (* 2.0 l_0_8_102) l_0_8_98)) (* (* 2.0 l_0_8_103) l_0_8_99))))
 (let ((?x13559 (- (- (+ (+ (+ (+ (+ ?x13544 ?x13546) ?x13549) ?x13552) ?x13372) ?x13555) ?x13376) ?x13558)))
 (let ((?x13574 (- (+ (+ (+ (+ ?x13559 ?x13561) ?x13564) ?x13567) ?x13570) (* (* 2.0 l_0_8_82) l_0_8_86))))
 (let ((?x13580 (- (- ?x13574 (* (* 2.0 l_0_8_83) l_0_8_87)) (* (* 2.0 l_0_8_84) l_0_8_88))))
 (= (- ?x13580 (* (* 2.0 l_0_8_85) l_0_8_89)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x13307 (* 2.0 l_0_8_48)))
 (let ((?x13308 (* ?x13307 l_0_8_53)))
 (let ((?x13304 (* 2.0 l_0_8_47)))
 (let ((?x13305 (* ?x13304 l_0_8_52)))
 (let ((?x13638 (* 4.0 l_0_8_33)))
 (let ((?x13639 (* ?x13638 l_0_8_33)))
 (let ((?x13635 (* 8.0 l_0_8_33)))
 (let ((?x13636 (* ?x13635 l_0_8_38)))
 (let ((?x13632 (* 4.0 l_0_8_32)))
 (let ((?x13633 (* ?x13632 l_0_8_32)))
 (let ((?x13629 (* 8.0 l_0_8_32)))
 (let ((?x13630 (* ?x13629 l_0_8_37)))
 (let ((?x13627 (* l_0_8_3 l_0_8_3)))
 (let ((?x13625 (* l_0_8_2 l_0_8_2)))
 (let ((?x13622 (* l_0_8_18 l_0_8_18)))
 (let ((?x13623 (* 4.0 ?x13622)))
 (let ((?x13619 (* 8.0 l_0_8_18)))
 (let ((?x13620 (* ?x13619 l_0_8_23)))
 (let ((?x7681 (* l_0_8_17 l_0_8_17)))
 (let ((?x10411 (* 4.0 ?x7681)))
 (let ((?x3786 (* 8.0 l_0_8_17)))
 (let ((?x7688 (* ?x3786 l_0_8_22)))
 (let ((?x13634 (- (- (- (- (+ (+ (+ ?x7688 ?x10411) ?x13620) ?x13623) ?x13625) ?x13627) ?x13630) ?x13633)))
 (let ((?x13645 (+ (- (- (- (- ?x13634 ?x13636) ?x13639) ?x13305) ?x13308) (* (* 2.0 l_0_8_62) l_0_8_67))))
 (= (+ ?x13645 (* (* 2.0 l_0_8_63) l_0_8_68)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x13390 (* 2.0 l_0_8_51)))
 (let ((?x13391 (* ?x13390 l_0_8_54)))
 (let ((?x13387 (* 2.0 l_0_8_50)))
 (let ((?x13388 (* ?x13387 l_0_8_53)))
 (let ((?x13381 (* 2.0 l_0_8_49)))
 (let ((?x13382 (* ?x13381 l_0_8_52)))
 (let ((?x13716 (* 8.0 l_0_8_36)))
 (let ((?x13717 (* ?x13716 l_0_8_39)))
 (let ((?x13713 (* 8.0 l_0_8_35)))
 (let ((?x13714 (* ?x13713 l_0_8_38)))
 (let ((?x13710 (* 8.0 l_0_8_34)))
 (let ((?x13711 (* ?x13710 l_0_8_37)))
 (let ((?x13638 (* 4.0 l_0_8_33)))
 (let ((?x13708 (* ?x13638 l_0_8_38)))
 (let ((?x13635 (* 8.0 l_0_8_33)))
 (let ((?x13706 (* ?x13635 l_0_8_35)))
 (let ((?x13632 (* 4.0 l_0_8_32)))
 (let ((?x13704 (* ?x13632 l_0_8_37)))
 (let ((?x13629 (* 8.0 l_0_8_32)))
 (let ((?x13702 (* ?x13629 l_0_8_34)))
 (let ((?x13295 (* 2.0 l_0_8_3)))
 (let ((?x13700 (* ?x13295 l_0_8_5)))
 (let ((?x13697 (* 8.0 l_0_8_21)))
 (let ((?x13698 (* ?x13697 l_0_8_24)))
 (let ((?x13694 (* 8.0 l_0_8_20)))
 (let ((?x13695 (* ?x13694 l_0_8_23)))
 (let ((?x13292 (* 2.0 l_0_8_2)))
 (let ((?x13692 (* ?x13292 l_0_8_4)))
 (let ((?x13689 (* 8.0 l_0_8_19)))
 (let ((?x13690 (* ?x13689 l_0_8_22)))
 (let ((?x13686 (* 4.0 l_0_8_18)))
 (let ((?x13687 (* ?x13686 l_0_8_23)))
 (let ((?x13619 (* 8.0 l_0_8_18)))
 (let ((?x13684 (* ?x13619 l_0_8_20)))
 (let ((?x7769 (* 4.0 l_0_8_17)))
 (let ((?x7771 (* ?x7769 l_0_8_22)))
 (let ((?x3786 (* 8.0 l_0_8_17)))
 (let ((?x7690 (* ?x3786 l_0_8_19)))
 (let ((?x13699 (+ (+ (- (+ (- (+ (- ?x7690 ?x7771) ?x13684) ?x13687) ?x13690) ?x13692) ?x13695) ?x13698)))
 (let ((?x13715 (- (- (+ (- (+ (- (- ?x13699 ?x13700) ?x13702) ?x13704) ?x13706) ?x13708) ?x13711) ?x13714)))
 (let ((?x13724 (+ (- (- (- (- ?x13715 ?x13717) ?x13382) ?x13388) ?x13391) (* (* 2.0 l_0_8_64) l_0_8_67))))
 (let ((?x13730 (+ (+ ?x13724 (* (* 2.0 l_0_8_65) l_0_8_68)) (* (* 2.0 l_0_8_66) l_0_8_69))))
 (= ?x13730 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13800 (* l_0_8_70 l_0_8_70)))
 (let ((?x13798 (* l_0_8_69 l_0_8_69)))
 (let ((?x13796 (* l_0_8_68 l_0_8_68)))
 (let ((?x13794 (* l_0_8_67 l_0_8_67)))
 (let ((?x13468 (* l_0_8_55 l_0_8_55)))
 (let ((?x13465 (* l_0_8_54 l_0_8_54)))
 (let ((?x13462 (* l_0_8_53 l_0_8_53)))
 (let ((?x13459 (* l_0_8_52 l_0_8_52)))
 (let ((?x13787 (* 4.0 l_0_8_40)))
 (let ((?x13788 (* ?x13787 l_0_8_40)))
 (let ((?x13784 (* 4.0 l_0_8_39)))
 (let ((?x13785 (* ?x13784 l_0_8_39)))
 (let ((?x13781 (* 4.0 l_0_8_38)))
 (let ((?x13782 (* ?x13781 l_0_8_38)))
 (let ((?x13778 (* 4.0 l_0_8_37)))
 (let ((?x13779 (* ?x13778 l_0_8_37)))
 (let ((?x13635 (* 8.0 l_0_8_33)))
 (let ((?x13636 (* ?x13635 l_0_8_38)))
 (let ((?x13629 (* 8.0 l_0_8_32)))
 (let ((?x13630 (* ?x13629 l_0_8_37)))
 (let ((?x13295 (* 2.0 l_0_8_3)))
 (let ((?x13296 (* ?x13295 l_0_8_8)))
 (let ((?x13772 (* l_0_8_25 l_0_8_25)))
 (let ((?x13773 (* 4.0 ?x13772)))
 (let ((?x13769 (* l_0_8_24 l_0_8_24)))
 (let ((?x13770 (* 4.0 ?x13769)))
 (let ((?x13766 (* l_0_8_23 l_0_8_23)))
 (let ((?x13767 (* 4.0 ?x13766)))
 (let ((?x13763 (* l_0_8_22 l_0_8_22)))
 (let ((?x13764 (* 4.0 ?x13763)))
 (let ((?x13292 (* 2.0 l_0_8_2)))
 (let ((?x13293 (* ?x13292 l_0_8_7)))
 (let ((?x13619 (* 8.0 l_0_8_18)))
 (let ((?x13620 (* ?x13619 l_0_8_23)))
 (let ((?x3786 (* 8.0 l_0_8_17)))
 (let ((?x7688 (* ?x3786 l_0_8_22)))
 (let ((?x13775 (- (+ (+ (+ (+ (- (+ ?x7688 ?x13620) ?x13293) ?x13764) ?x13767) ?x13770) ?x13773) ?x13296)))
 (let ((?x13790 (- (- (- (- (- (- (- ?x13775 ?x13630) ?x13636) ?x13779) ?x13782) ?x13785) ?x13788) ?x13459)))
 (let ((?x13801 (+ (+ (+ (+ (- (- (- ?x13790 ?x13462) ?x13465) ?x13468) ?x13794) ?x13796) ?x13798) ?x13800)))
 (= ?x13801 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13570 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x13567 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x13564 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x13561 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x13864 (* (* 8.0 l_0_8_40) l_0_8_44)))
 (let ((?x13861 (* (* 8.0 l_0_8_39) l_0_8_43)))
 (let ((?x13858 (* (* 8.0 l_0_8_38) l_0_8_42)))
 (let ((?x13855 (* (* 8.0 l_0_8_37) l_0_8_41)))
 (let ((?x13635 (* 8.0 l_0_8_33)))
 (let ((?x13852 (* ?x13635 l_0_8_42)))
 (let ((?x13638 (* 4.0 l_0_8_33)))
 (let ((?x13708 (* ?x13638 l_0_8_38)))
 (let ((?x13629 (* 8.0 l_0_8_32)))
 (let ((?x13849 (* ?x13629 l_0_8_41)))
 (let ((?x13632 (* 4.0 l_0_8_32)))
 (let ((?x13704 (* ?x13632 l_0_8_37)))
 (let ((?x13846 (* (* 8.0 l_0_8_25) l_0_8_29)))
 (let ((?x13843 (* (* 8.0 l_0_8_24) l_0_8_28)))
 (let ((?x13840 (* (* 8.0 l_0_8_23) l_0_8_27)))
 (let ((?x13837 (* (* 8.0 l_0_8_22) l_0_8_26)))
 (let ((?x13619 (* 8.0 l_0_8_18)))
 (let ((?x13834 (* ?x13619 l_0_8_27)))
 (let ((?x13686 (* 4.0 l_0_8_18)))
 (let ((?x13687 (* ?x13686 l_0_8_23)))
 (let ((?x3786 (* 8.0 l_0_8_17)))
 (let ((?x13831 (* ?x3786 l_0_8_26)))
 (let ((?x7769 (* 4.0 l_0_8_17)))
 (let ((?x7771 (* ?x7769 l_0_8_22)))
 (let ((?x13548 (* 2.0 l_0_8_12)))
 (let ((?x13828 (* ?x13548 l_0_8_3)))
 (let ((?x13833 (+ (+ (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x13828) ?x7771) ?x13831) ?x13687)))
 (let ((?x13850 (- (- (+ (+ (+ (+ (+ ?x13833 ?x13834) ?x13837) ?x13840) ?x13843) ?x13846) ?x13704) ?x13849)))
 (let ((?x13866 (- (- (- (- (- (- (- ?x13850 ?x13708) ?x13852) ?x13855) ?x13858) ?x13861) ?x13864) ?x13561)))
 (let ((?x13872 (+ (- (- (- ?x13866 ?x13564) ?x13567) ?x13570) (* (* 2.0 l_0_8_67) l_0_8_71))))
 (let ((?x13878 (+ (+ ?x13872 (* (* 2.0 l_0_8_68) l_0_8_72)) (* (* 2.0 l_0_8_69) l_0_8_73))))
 (= (+ ?x13878 (* (* 2.0 l_0_8_70) l_0_8_74)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13149 (* l_0_8_6 l_0_8_6)))
 (let ((?x13140 (* l_0_8_5 l_0_8_5)))
 (let ((?x13134 (* l_0_8_4 l_0_8_4)))
 (let ((?x13971 (* 4.0 l_0_8_36)))
 (let ((?x13974 (* ?x13971 l_0_8_36)))
 (let ((?x13972 (* ?x13971 l_0_8_39)))
 (let ((?x13966 (* 4.0 l_0_8_35)))
 (let ((?x13969 (* ?x13966 l_0_8_35)))
 (let ((?x13967 (* ?x13966 l_0_8_38)))
 (let ((?x13961 (* 4.0 l_0_8_34)))
 (let ((?x13964 (* ?x13961 l_0_8_34)))
 (let ((?x13962 (* ?x13961 l_0_8_37)))
 (let ((?x13076 (* 2.0 l_0_8_31)))
 (let ((?x13959 (* ?x13076 l_0_8_37)))
 (let ((?x13956 (* l_0_8_21 l_0_8_21)))
 (let ((?x13957 (* 4.0 ?x13956)))
 (let ((?x13953 (* 4.0 l_0_8_21)))
 (let ((?x13954 (* ?x13953 l_0_8_24)))
 (let ((?x13950 (* l_0_8_20 l_0_8_20)))
 (let ((?x13951 (* 4.0 ?x13950)))
 (let ((?x13947 (* 4.0 l_0_8_20)))
 (let ((?x13948 (* ?x13947 l_0_8_23)))
 (let ((?x13931 (* l_0_8_19 l_0_8_19)))
 (let ((?x13945 (* 4.0 ?x13931)))
 (let ((?x13926 (* 4.0 l_0_8_19)))
 (let ((?x13928 (* ?x13926 l_0_8_22)))
 (let ((?x7293 (* 2.0 l_0_8_16)))
 (let ((?x4193 (* ?x7293 l_0_8_22)))
 (let ((?x13960 (- (+ (- (+ (- (+ (- ?x4193 ?x13928) ?x13945) ?x13948) ?x13951) ?x13954) ?x13957) ?x13959)))
 (let ((?x13976 (- (- (+ (- (+ (- (+ ?x13960 ?x13962) ?x13964) ?x13967) ?x13969) ?x13972) ?x13974) ?x13134)))
 (= (- (- ?x13976 ?x13140) ?x13149) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x13394 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x13385 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x10547 (* l_0_8_40 l_0_8_40)))
 (let ((?x14009 (* 2.0 ?x10547)))
 (let ((?x13379 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x4039 (* l_0_8_39 l_0_8_39)))
 (let ((?x14006 (* 2.0 ?x4039)))
 (let ((?x4067 (* l_0_8_38 l_0_8_38)))
 (let ((?x14004 (* 2.0 ?x4067)))
 (let ((?x4051 (* l_0_8_37 l_0_8_37)))
 (let ((?x14002 (* 2.0 ?x4051)))
 (let ((?x13716 (* 8.0 l_0_8_36)))
 (let ((?x13717 (* ?x13716 l_0_8_39)))
 (let ((?x13713 (* 8.0 l_0_8_35)))
 (let ((?x13714 (* ?x13713 l_0_8_38)))
 (let ((?x13710 (* 8.0 l_0_8_34)))
 (let ((?x13711 (* ?x13710 l_0_8_37)))
 (let ((?x13697 (* 8.0 l_0_8_21)))
 (let ((?x13698 (* ?x13697 l_0_8_24)))
 (let ((?x13694 (* 8.0 l_0_8_20)))
 (let ((?x13695 (* ?x13694 l_0_8_23)))
 (let ((?x13689 (* 8.0 l_0_8_19)))
 (let ((?x13690 (* ?x13689 l_0_8_22)))
 (let ((?x10682 (- (- (+ (+ ?x13690 ?x13695) ?x13698) (* (* 2.0 l_0_8_22) l_0_8_22)) (* (* 2.0 l_0_8_23) l_0_8_23))))
 (let ((?x13998 (- (- ?x10682 (* (* 2.0 l_0_8_24) l_0_8_24)) (* (* 2.0 l_0_8_25) l_0_8_25))))
 (let ((?x14008 (- (+ (+ (+ (- (- (- ?x13998 ?x13711) ?x13714) ?x13717) ?x14002) ?x14004) ?x14006) ?x13379)))
 (= (- (- (+ ?x14008 ?x14009) ?x13385) ?x13394) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x13787 (* 4.0 l_0_8_40)))
 (let ((?x14061 (* ?x13787 l_0_8_44)))
 (let ((?x13784 (* 4.0 l_0_8_39)))
 (let ((?x14059 (* ?x13784 l_0_8_43)))
 (let ((?x13781 (* 4.0 l_0_8_38)))
 (let ((?x14057 (* ?x13781 l_0_8_42)))
 (let ((?x13778 (* 4.0 l_0_8_37)))
 (let ((?x14055 (* ?x13778 l_0_8_41)))
 (let ((?x13716 (* 8.0 l_0_8_36)))
 (let ((?x14053 (* ?x13716 l_0_8_43)))
 (let ((?x13971 (* 4.0 l_0_8_36)))
 (let ((?x13972 (* ?x13971 l_0_8_39)))
 (let ((?x13713 (* 8.0 l_0_8_35)))
 (let ((?x14050 (* ?x13713 l_0_8_42)))
 (let ((?x13966 (* 4.0 l_0_8_35)))
 (let ((?x13967 (* ?x13966 l_0_8_38)))
 (let ((?x13710 (* 8.0 l_0_8_34)))
 (let ((?x14047 (* ?x13710 l_0_8_41)))
 (let ((?x13961 (* 4.0 l_0_8_34)))
 (let ((?x13962 (* ?x13961 l_0_8_37)))
 (let ((?x14044 (* (* 4.0 l_0_8_25) l_0_8_29)))
 (let ((?x14041 (* (* 4.0 l_0_8_24) l_0_8_28)))
 (let ((?x14038 (* (* 4.0 l_0_8_23) l_0_8_27)))
 (let ((?x14035 (* (* 4.0 l_0_8_22) l_0_8_26)))
 (let ((?x13697 (* 8.0 l_0_8_21)))
 (let ((?x14032 (* ?x13697 l_0_8_28)))
 (let ((?x13953 (* 4.0 l_0_8_21)))
 (let ((?x13954 (* ?x13953 l_0_8_24)))
 (let ((?x13694 (* 8.0 l_0_8_20)))
 (let ((?x14029 (* ?x13694 l_0_8_27)))
 (let ((?x13947 (* 4.0 l_0_8_20)))
 (let ((?x13948 (* ?x13947 l_0_8_23)))
 (let ((?x13689 (* 8.0 l_0_8_19)))
 (let ((?x14026 (* ?x13689 l_0_8_26)))
 (let ((?x13926 (* 4.0 l_0_8_19)))
 (let ((?x13928 (* ?x13926 l_0_8_22)))
 (let ((?x13551 (* 2.0 l_0_8_13)))
 (let ((?x8058 (* ?x13551 l_0_8_6)))
 (let ((?x13548 (* 2.0 l_0_8_12)))
 (let ((?x8077 (* ?x13548 l_0_8_5)))
 (let ((?x14027 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x8077) ?x8058) ?x13928) ?x14026)))
 (let ((?x14042 (- (- (- (+ (+ (+ (+ ?x14027 ?x13948) ?x14029) ?x13954) ?x14032) ?x14035) ?x14038) ?x14041)))
 (let ((?x14054 (- (- (- (- (- (- (- ?x14042 ?x14044) ?x13962) ?x14047) ?x13967) ?x14050) ?x13972) ?x14053)))
 (= (+ (+ (+ (+ ?x14054 ?x14055) ?x14057) ?x14059) ?x14061) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13485 (* l_0_8_9 l_0_8_9)))
 (let ((?x13474 (* l_0_8_8 l_0_8_8)))
 (let ((?x13471 (* l_0_8_7 l_0_8_7)))
 (let ((?x13787 (* 4.0 l_0_8_40)))
 (let ((?x13788 (* ?x13787 l_0_8_40)))
 (let ((?x13784 (* 4.0 l_0_8_39)))
 (let ((?x13785 (* ?x13784 l_0_8_39)))
 (let ((?x13781 (* 4.0 l_0_8_38)))
 (let ((?x13782 (* ?x13781 l_0_8_38)))
 (let ((?x13778 (* 4.0 l_0_8_37)))
 (let ((?x13779 (* ?x13778 l_0_8_37)))
 (let ((?x13772 (* l_0_8_25 l_0_8_25)))
 (let ((?x13773 (* 4.0 ?x13772)))
 (let ((?x13769 (* l_0_8_24 l_0_8_24)))
 (let ((?x13770 (* 4.0 ?x13769)))
 (let ((?x13766 (* l_0_8_23 l_0_8_23)))
 (let ((?x13767 (* 4.0 ?x13766)))
 (let ((?x14075 (+ (+ (* (- l_0_8_10) l_0_8_10) (* 4.0 (* l_0_8_22 l_0_8_22))) ?x13767)))
 (let ((?x14082 (- (- (- (- (- (+ (+ ?x14075 ?x13770) ?x13773) ?x13779) ?x13782) ?x13785) ?x13788) ?x13471)))
 (= (- (- ?x14082 ?x13474) ?x13485) 0.0)))))))))))))))))))))
(assert
 (let ((?x13864 (* (* 8.0 l_0_8_40) l_0_8_44)))
 (let ((?x13861 (* (* 8.0 l_0_8_39) l_0_8_43)))
 (let ((?x13858 (* (* 8.0 l_0_8_38) l_0_8_42)))
 (let ((?x13855 (* (* 8.0 l_0_8_37) l_0_8_41)))
 (let ((?x13772 (* l_0_8_25 l_0_8_25)))
 (let ((?x4562 (* 2.0 ?x13772)))
 (let ((?x13846 (* (* 8.0 l_0_8_25) l_0_8_29)))
 (let ((?x13769 (* l_0_8_24 l_0_8_24)))
 (let ((?x10717 (* 2.0 ?x13769)))
 (let ((?x13843 (* (* 8.0 l_0_8_24) l_0_8_28)))
 (let ((?x13766 (* l_0_8_23 l_0_8_23)))
 (let ((?x10713 (* 2.0 ?x13766)))
 (let ((?x13840 (* (* 8.0 l_0_8_23) l_0_8_27)))
 (let ((?x13763 (* l_0_8_22 l_0_8_22)))
 (let ((?x14015 (* 2.0 ?x13763)))
 (let ((?x13837 (* (* 8.0 l_0_8_22) l_0_8_26)))
 (let ((?x13551 (* 2.0 l_0_8_13)))
 (let ((?x13552 (* ?x13551 l_0_8_9)))
 (let ((?x13548 (* 2.0 l_0_8_12)))
 (let ((?x13549 (* ?x13548 l_0_8_8)))
 (let ((?x13545 (* 2.0 l_0_8_11)))
 (let ((?x13546 (* ?x13545 l_0_8_7)))
 (let ((?x8191 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x13546) ?x13549) ?x13552) ?x13837)))
 (let ((?x14096 (+ (+ (+ (+ (+ (+ (+ ?x8191 ?x14015) ?x13840) ?x10713) ?x13843) ?x10717) ?x13846) ?x4562)))
 (let ((?x14104 (- (- (- (- ?x14096 ?x13855) (* (* 2.0 l_0_8_37) l_0_8_37)) ?x13858) (* (* 2.0 l_0_8_38) l_0_8_38))))
 (let ((?x14112 (- (- (- (- ?x14104 ?x13861) (* (* 2.0 l_0_8_39) l_0_8_39)) ?x13864) (* (* 2.0 l_0_8_40) l_0_8_40))))
 (= ?x14112 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x14141 (* (* 4.0 l_0_8_45) l_0_8_45)))
 (let ((?x14138 (* (* 4.0 l_0_8_44) l_0_8_44)))
 (let ((?x14135 (* (* 4.0 l_0_8_43) l_0_8_43)))
 (let ((?x14132 (* (* 4.0 l_0_8_42) l_0_8_42)))
 (let ((?x14129 (* (* 4.0 l_0_8_41) l_0_8_41)))
 (let ((?x13787 (* 4.0 l_0_8_40)))
 (let ((?x14061 (* ?x13787 l_0_8_44)))
 (let ((?x13784 (* 4.0 l_0_8_39)))
 (let ((?x14059 (* ?x13784 l_0_8_43)))
 (let ((?x13781 (* 4.0 l_0_8_38)))
 (let ((?x14057 (* ?x13781 l_0_8_42)))
 (let ((?x13778 (* 4.0 l_0_8_37)))
 (let ((?x14055 (* ?x13778 l_0_8_41)))
 (let ((?x13076 (* 2.0 l_0_8_31)))
 (let ((?x13959 (* ?x13076 l_0_8_37)))
 (let ((?x14120 (* l_0_8_30 l_0_8_30)))
 (let ((?x14121 (* 4.0 ?x14120)))
 (let ((?x14117 (* l_0_8_29 l_0_8_29)))
 (let ((?x14118 (* 4.0 ?x14117)))
 (let ((?x11006 (* l_0_8_28 l_0_8_28)))
 (let ((?x10985 (* 4.0 ?x11006)))
 (let ((?x4782 (* l_0_8_27 l_0_8_27)))
 (let ((?x11007 (* 4.0 ?x4782)))
 (let ((?x11011 (* l_0_8_26 l_0_8_26)))
 (let ((?x11012 (* 4.0 ?x11011)))
 (let ((?x14044 (* (* 4.0 l_0_8_25) l_0_8_29)))
 (let ((?x14041 (* (* 4.0 l_0_8_24) l_0_8_28)))
 (let ((?x14038 (* (* 4.0 l_0_8_23) l_0_8_27)))
 (let ((?x14035 (* (* 4.0 l_0_8_22) l_0_8_26)))
 (let ((?x7293 (* 2.0 l_0_8_16)))
 (let ((?x4193 (* ?x7293 l_0_8_22)))
 (let ((?x13000 (* l_0_8_15 l_0_8_15)))
 (let ((?x12997 (* l_0_8_14 l_0_8_14)))
 (let ((?x12994 (* l_0_8_13 l_0_8_13)))
 (let ((?x11021 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x12994) ?x12997)))
 (let ((?x4129 (+ (+ (+ (+ (+ (- (- ?x11021 ?x13000) ?x4193) ?x14035) ?x14038) ?x14041) ?x14044) ?x11012)))
 (let ((?x14125 (- (- (+ (+ (+ (+ (+ ?x4129 ?x11007) ?x10985) ?x14118) ?x14121) ?x13959) ?x14055) ?x14057)))
 (let ((?x14142 (- (- (- (- (- (- (- ?x14125 ?x14059) ?x14061) ?x14129) ?x14132) ?x14135) ?x14138) ?x14141)))
 (= ?x14142 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14182 (* l_0_8_93 l_0_8_93)))
 (let ((?x14180 (* l_0_8_92 l_0_8_92)))
 (let ((?x14178 (* l_0_8_78 l_0_8_78)))
 (let ((?x14176 (* l_0_8_77 l_0_8_77)))
 (let ((?x13079 (* 2.0 l_0_8_46)))
 (let ((?x13254 (* ?x13079 l_0_8_47)))
 (let ((?x13298 (* 8.0 l_0_8_31)))
 (let ((?x13299 (* ?x13298 l_0_8_32)))
 (let ((?x13287 (* 8.0 l_0_8_16)))
 (let ((?x13288 (* ?x13287 l_0_8_17)))
 (let ((?x14165 (+ (+ ?x13288 (* 1.0 (* l_0_8_2 l_0_8_2))) (* 1.0 (* l_0_8_3 l_0_8_3)))))
 (let ((?x14173 (+ (+ (- (- ?x14165 ?x13299) ?x13254) (* 1.0 (* l_0_8_47 l_0_8_47))) (* 1.0 (* l_0_8_48 l_0_8_48)))))
 (let ((?x14181 (- (- (- (+ ?x14173 (* (* 2.0 l_0_8_61) l_0_8_62)) ?x14176) ?x14178) ?x14180)))
 (= (- ?x14181 ?x14182) 0.0)))))))))))))))
(assert
 (let ((?x13307 (* 2.0 l_0_8_48)))
 (let ((?x14205 (* ?x13307 l_0_8_50)))
 (let ((?x13304 (* 2.0 l_0_8_47)))
 (let ((?x14203 (* ?x13304 l_0_8_49)))
 (let ((?x13079 (* 2.0 l_0_8_46)))
 (let ((?x13189 (* ?x13079 l_0_8_49)))
 (let ((?x13298 (* 8.0 l_0_8_31)))
 (let ((?x13374 (* ?x13298 l_0_8_34)))
 (let ((?x13008 (* 4.0 l_0_8_31)))
 (let ((?x14199 (* ?x13008 l_0_8_32)))
 (let ((?x13295 (* 2.0 l_0_8_3)))
 (let ((?x13700 (* ?x13295 l_0_8_5)))
 (let ((?x13292 (* 2.0 l_0_8_2)))
 (let ((?x13692 (* ?x13292 l_0_8_4)))
 (let ((?x13287 (* 8.0 l_0_8_16)))
 (let ((?x13370 (* ?x13287 l_0_8_19)))
 (let ((?x14200 (+ (+ (+ (+ (* (* (- 4.0) l_0_8_16) l_0_8_17) ?x13370) ?x13692) ?x13700) ?x14199)))
 (let ((?x14208 (+ (+ (+ (- (- ?x14200 ?x13374) ?x13189) ?x14203) ?x14205) (* (* 2.0 l_0_8_61) l_0_8_64))))
 (let ((?x14212 (- (- ?x14208 (* (* 2.0 l_0_8_77) l_0_8_79)) (* (* 2.0 l_0_8_78) l_0_8_80))))
 (let ((?x14216 (- (- ?x14212 (* (* 2.0 l_0_8_92) l_0_8_94)) (* (* 2.0 l_0_8_93) l_0_8_95))))
 (= ?x14216 0.0))))))))))))))))))))))
(assert
 (let ((?x13307 (* 2.0 l_0_8_48)))
 (let ((?x14252 (* ?x13307 l_0_8_57)))
 (let ((?x13304 (* 2.0 l_0_8_47)))
 (let ((?x14250 (* ?x13304 l_0_8_56)))
 (let ((?x13079 (* 2.0 l_0_8_46)))
 (let ((?x13080 (* ?x13079 l_0_8_56)))
 (let ((?x13298 (* 8.0 l_0_8_31)))
 (let ((?x13558 (* ?x13298 l_0_8_41)))
 (let ((?x13008 (* 4.0 l_0_8_31)))
 (let ((?x14199 (* ?x13008 l_0_8_32)))
 (let ((?x13287 (* 8.0 l_0_8_16)))
 (let ((?x13555 (* ?x13287 l_0_8_26)))
 (let ((?x13548 (* 2.0 l_0_8_12)))
 (let ((?x13828 (* ?x13548 l_0_8_3)))
 (let ((?x14240 (- (* (* (- 2.0) l_0_8_101) l_0_8_92) (* (* 2.0 l_0_8_102) l_0_8_93))))
 (let ((?x14245 (+ (+ (+ ?x14240 (* (* 2.0 l_0_8_11) l_0_8_2)) ?x13828) (* (* 4.0 l_0_8_16) l_0_8_17))))
 (let ((?x14255 (+ (+ (+ (- (- (- (+ ?x14245 ?x13555) ?x14199) ?x13558) ?x13080) ?x14250) ?x14252) (* (* 2.0 l_0_8_61) l_0_8_71))))
 (let ((?x14259 (- (- ?x14255 (* (* 2.0 l_0_8_77) l_0_8_86)) (* (* 2.0 l_0_8_78) l_0_8_87))))
 (= ?x14259 0.0))))))))))))))))))))
(assert
 (let ((?x13390 (* 2.0 l_0_8_51)))
 (let ((?x14295 (* ?x13390 l_0_8_58)))
 (let ((?x13387 (* 2.0 l_0_8_50)))
 (let ((?x14293 (* ?x13387 l_0_8_57)))
 (let ((?x13381 (* 2.0 l_0_8_49)))
 (let ((?x14291 (* ?x13381 l_0_8_56)))
 (let ((?x13008 (* 4.0 l_0_8_31)))
 (let ((?x13009 (* ?x13008 l_0_8_41)))
 (let ((?x13131 (* ?x13008 l_0_8_34)))
 (let ((?x13003 (* 4.0 l_0_8_16)))
 (let ((?x13004 (* ?x13003 l_0_8_26)))
 (let ((?x13551 (* 2.0 l_0_8_13)))
 (let ((?x8058 (* ?x13551 l_0_8_6)))
 (let ((?x13548 (* 2.0 l_0_8_12)))
 (let ((?x8077 (* ?x13548 l_0_8_5)))
 (let ((?x14279 (- (* (* (- 2.0) l_0_8_101) l_0_8_94) (* (* 2.0 l_0_8_102) l_0_8_95))))
 (let ((?x14283 (+ (- ?x14279 (* (* 2.0 l_0_8_103) l_0_8_96)) (* (* 2.0 l_0_8_11) l_0_8_4))))
 (let ((?x14290 (+ (- (- (+ (+ (+ ?x14283 ?x8077) ?x8058) (* ?x13003 l_0_8_19)) ?x13004) ?x13131) ?x13009)))
 (let ((?x14298 (- (+ (+ (+ ?x14290 ?x14291) ?x14293) ?x14295) (* (* 2.0 l_0_8_79) l_0_8_86))))
 (let ((?x14302 (- (- ?x14298 (* (* 2.0 l_0_8_80) l_0_8_87)) (* (* 2.0 l_0_8_81) l_0_8_88))))
 (= ?x14302 0.0))))))))))))))))))))))
(assert
 (let ((?x14361 (* l_0_8_75 l_0_8_75)))
 (let ((?x14359 (* l_0_8_74 l_0_8_74)))
 (let ((?x14357 (* l_0_8_73 l_0_8_73)))
 (let ((?x14355 (* l_0_8_72 l_0_8_72)))
 (let ((?x14353 (* l_0_8_71 l_0_8_71)))
 (let ((?x13025 (* l_0_8_60 l_0_8_60)))
 (let ((?x13022 (* l_0_8_59 l_0_8_59)))
 (let ((?x13019 (* l_0_8_58 l_0_8_58)))
 (let ((?x13016 (* l_0_8_57 l_0_8_57)))
 (let ((?x13013 (* l_0_8_56 l_0_8_56)))
 (let ((?x14141 (* (* 4.0 l_0_8_45) l_0_8_45)))
 (let ((?x14138 (* (* 4.0 l_0_8_44) l_0_8_44)))
 (let ((?x14135 (* (* 4.0 l_0_8_43) l_0_8_43)))
 (let ((?x14132 (* (* 4.0 l_0_8_42) l_0_8_42)))
 (let ((?x14129 (* (* 4.0 l_0_8_41) l_0_8_41)))
 (let ((?x13638 (* 4.0 l_0_8_33)))
 (let ((?x14341 (* ?x13638 l_0_8_42)))
 (let ((?x13632 (* 4.0 l_0_8_32)))
 (let ((?x14339 (* ?x13632 l_0_8_41)))
 (let ((?x13076 (* 2.0 l_0_8_31)))
 (let ((?x14337 (* ?x13076 l_0_8_32)))
 (let ((?x14120 (* l_0_8_30 l_0_8_30)))
 (let ((?x14121 (* 4.0 ?x14120)))
 (let ((?x14117 (* l_0_8_29 l_0_8_29)))
 (let ((?x14118 (* 4.0 ?x14117)))
 (let ((?x11006 (* l_0_8_28 l_0_8_28)))
 (let ((?x10985 (* 4.0 ?x11006)))
 (let ((?x4782 (* l_0_8_27 l_0_8_27)))
 (let ((?x11007 (* 4.0 ?x4782)))
 (let ((?x11011 (* l_0_8_26 l_0_8_26)))
 (let ((?x11012 (* 4.0 ?x11011)))
 (let ((?x13686 (* 4.0 l_0_8_18)))
 (let ((?x14330 (* ?x13686 l_0_8_27)))
 (let ((?x7769 (* 4.0 l_0_8_17)))
 (let ((?x14328 (* ?x7769 l_0_8_26)))
 (let ((?x14333 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_16) l_0_8_17) ?x14328) ?x14330) ?x11012) ?x11007)))
 (let ((?x14343 (- (- (- (+ (+ (+ (+ ?x14333 ?x10985) ?x14118) ?x14121) ?x14337) ?x14339) ?x14341) ?x14129)))
 (let ((?x14350 (- (- (- (- (- (- (- ?x14343 ?x14132) ?x14135) ?x14138) ?x14141) ?x13013) ?x13016) ?x13019)))
 (let ((?x14362 (+ (+ (+ (+ (+ (- (- ?x14350 ?x13022) ?x13025) ?x14353) ?x14355) ?x14357) ?x14359) ?x14361)))
 (= ?x14362 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11096 (* l_0_8_45 l_0_8_45)))
 (let ((?x14406 (* 2.0 ?x11096)))
 (let ((?x14151 (* l_0_8_44 l_0_8_44)))
 (let ((?x14404 (* 2.0 ?x14151)))
 (let ((?x11089 (* l_0_8_43 l_0_8_43)))
 (let ((?x14402 (* 2.0 ?x11089)))
 (let ((?x11088 (* l_0_8_42 l_0_8_42)))
 (let ((?x14400 (* 2.0 ?x11088)))
 (let ((?x4828 (* l_0_8_41 l_0_8_41)))
 (let ((?x14398 (* 2.0 ?x4828)))
 (let ((?x13971 (* 4.0 l_0_8_36)))
 (let ((?x14396 (* ?x13971 l_0_8_43)))
 (let ((?x13966 (* 4.0 l_0_8_35)))
 (let ((?x14394 (* ?x13966 l_0_8_42)))
 (let ((?x13961 (* 4.0 l_0_8_34)))
 (let ((?x14392 (* ?x13961 l_0_8_41)))
 (let ((?x13076 (* 2.0 l_0_8_31)))
 (let ((?x14390 (* ?x13076 l_0_8_34)))
 (let ((?x13953 (* 4.0 l_0_8_21)))
 (let ((?x14373 (* ?x13953 l_0_8_28)))
 (let ((?x13947 (* 4.0 l_0_8_20)))
 (let ((?x14371 (* ?x13947 l_0_8_27)))
 (let ((?x13926 (* 4.0 l_0_8_19)))
 (let ((?x5264 (* ?x13926 l_0_8_26)))
 (let ((?x14377 (- (+ (+ (+ (* (* (- 2.0) l_0_8_16) l_0_8_19) ?x5264) ?x14371) ?x14373) (* (* 2.0 l_0_8_26) l_0_8_26))))
 (let ((?x14383 (- (- ?x14377 (* (* 2.0 l_0_8_27) l_0_8_27)) (* (* 2.0 l_0_8_28) l_0_8_28))))
 (let ((?x14389 (- (- ?x14383 (* (* 2.0 l_0_8_29) l_0_8_29)) (* (* 2.0 l_0_8_30) l_0_8_30))))
 (let ((?x14403 (+ (+ (+ (- (- (- (+ ?x14389 ?x14390) ?x14392) ?x14394) ?x14396) ?x14398) ?x14400) ?x14402)))
 (= (+ (+ ?x14403 ?x14404) ?x14406) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x13076 (* 2.0 l_0_8_31)))
 (let ((?x14460 (* ?x13076 l_0_8_41)))
 (let ((?x14120 (* l_0_8_30 l_0_8_30)))
 (let ((?x8434 (* 2.0 ?x14120)))
 (let ((?x14117 (* l_0_8_29 l_0_8_29)))
 (let ((?x14421 (* 2.0 ?x14117)))
 (let ((?x11006 (* l_0_8_28 l_0_8_28)))
 (let ((?x8429 (* 2.0 ?x11006)))
 (let ((?x4782 (* l_0_8_27 l_0_8_27)))
 (let ((?x14415 (* 2.0 ?x4782)))
 (let ((?x11011 (* l_0_8_26 l_0_8_26)))
 (let ((?x5365 (* 2.0 ?x11011)))
 (let ((?x14458 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_16) l_0_8_26) ?x5365) ?x14415) ?x8429) ?x14421)))
 (let ((?x14467 (- (- (+ (+ ?x14458 ?x8434) ?x14460) (* (* 2.0 l_0_8_41) l_0_8_41)) (* (* 2.0 l_0_8_42) l_0_8_42))))
 (let ((?x14473 (- (- ?x14467 (* (* 2.0 l_0_8_43) l_0_8_43)) (* (* 2.0 l_0_8_44) l_0_8_44))))
 (= (- ?x14473 (* (* 2.0 l_0_8_45) l_0_8_45)) 0.0)))))))))))))))))
(assert
 (let ((?x13669 (* l_0_8_33 l_0_8_33)))
 (let ((?x10449 (* l_0_8_32 l_0_8_32)))
 (let ((?x14488 (+ (+ (- (* (- l_0_8_17) l_0_8_17) (* l_0_8_18 l_0_8_18)) ?x10449) ?x13669)))
 (= ?x14488 0.0)))))
(assert
 (let ((?x14501 (* 2.0 l_0_8_33)))
 (let ((?x14502 (* ?x14501 l_0_8_35)))
 (let ((?x14498 (* 2.0 l_0_8_32)))
 (let ((?x14499 (* ?x14498 l_0_8_34)))
 (let ((?x14495 (* 2.0 l_0_8_18)))
 (let ((?x14496 (* ?x14495 l_0_8_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_19) ?x14496) ?x14499) ?x14502) 0.0))))))))
(assert
 (let ((?x14501 (* 2.0 l_0_8_33)))
 (let ((?x14521 (* ?x14501 l_0_8_38)))
 (let ((?x14498 (* 2.0 l_0_8_32)))
 (let ((?x14519 (* ?x14498 l_0_8_37)))
 (let ((?x14495 (* 2.0 l_0_8_18)))
 (let ((?x14512 (* ?x14495 l_0_8_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_22) ?x14512) ?x14519) ?x14521) 0.0))))))))
(assert
 (let ((?x14501 (* 2.0 l_0_8_33)))
 (let ((?x14529 (* ?x14501 l_0_8_42)))
 (let ((?x14498 (* 2.0 l_0_8_32)))
 (let ((?x14527 (* ?x14498 l_0_8_41)))
 (let ((?x14495 (* 2.0 l_0_8_18)))
 (let ((?x14525 (* ?x14495 l_0_8_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_26) ?x14525) ?x14527) ?x14529) 0.0))))))))
(assert
 (let ((?x11096 (* l_0_8_45 l_0_8_45)))
 (let ((?x14151 (* l_0_8_44 l_0_8_44)))
 (let ((?x11089 (* l_0_8_43 l_0_8_43)))
 (let ((?x11088 (* l_0_8_42 l_0_8_42)))
 (let ((?x4828 (* l_0_8_41 l_0_8_41)))
 (let ((?x4495 (* l_0_8_36 l_0_8_36)))
 (let ((?x10661 (* l_0_8_35 l_0_8_35)))
 (let ((?x4470 (* l_0_8_34 l_0_8_34)))
 (let ((?x14120 (* l_0_8_30 l_0_8_30)))
 (let ((?x14117 (* l_0_8_29 l_0_8_29)))
 (let ((?x11006 (* l_0_8_28 l_0_8_28)))
 (let ((?x4782 (* l_0_8_27 l_0_8_27)))
 (let ((?x11011 (* l_0_8_26 l_0_8_26)))
 (let ((?x13956 (* l_0_8_21 l_0_8_21)))
 (let ((?x14545 (+ (- (- (* (- l_0_8_19) l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x13956) ?x11011)))
 (let ((?x14552 (+ (+ (+ (+ (+ (+ (+ ?x14545 ?x4782) ?x11006) ?x14117) ?x14120) ?x4470) ?x10661) ?x4495)))
 (= (- (- (- (- (- ?x14552 ?x4828) ?x11088) ?x11089) ?x14151) ?x11096) 0.0))))))))))))))))))
(assert
 (let ((?x14591 (* 2.0 l_0_8_36)))
 (let ((?x14592 (* ?x14591 l_0_8_39)))
 (let ((?x14588 (* 2.0 l_0_8_35)))
 (let ((?x14589 (* ?x14588 l_0_8_38)))
 (let ((?x14585 (* 2.0 l_0_8_34)))
 (let ((?x14586 (* ?x14585 l_0_8_37)))
 (let ((?x14582 (* 2.0 l_0_8_21)))
 (let ((?x14583 (* ?x14582 l_0_8_24)))
 (let ((?x14579 (* 2.0 l_0_8_20)))
 (let ((?x14580 (* ?x14579 l_0_8_23)))
 (let ((?x14590 (+ (+ (- (- (* (* (- 2.0) l_0_8_19) l_0_8_22) ?x14580) ?x14583) ?x14586) ?x14589)))
 (= (+ ?x14590 ?x14592) 0.0)))))))))))))
(assert
 (let ((?x14591 (* 2.0 l_0_8_36)))
 (let ((?x14617 (* ?x14591 l_0_8_43)))
 (let ((?x14588 (* 2.0 l_0_8_35)))
 (let ((?x14615 (* ?x14588 l_0_8_42)))
 (let ((?x14585 (* 2.0 l_0_8_34)))
 (let ((?x14613 (* ?x14585 l_0_8_41)))
 (let ((?x14582 (* 2.0 l_0_8_21)))
 (let ((?x14611 (* ?x14582 l_0_8_28)))
 (let ((?x14579 (* 2.0 l_0_8_20)))
 (let ((?x14609 (* ?x14579 l_0_8_27)))
 (let ((?x14616 (+ (+ (- (- (* (* (- 2.0) l_0_8_19) l_0_8_26) ?x14609) ?x14611) ?x14613) ?x14615)))
 (= (+ ?x14616 ?x14617) 0.0)))))))))))))
(assert
 (let ((?x10547 (* l_0_8_40 l_0_8_40)))
 (let ((?x4039 (* l_0_8_39 l_0_8_39)))
 (let ((?x4067 (* l_0_8_38 l_0_8_38)))
 (let ((?x4051 (* l_0_8_37 l_0_8_37)))
 (let ((?x13772 (* l_0_8_25 l_0_8_25)))
 (let ((?x13769 (* l_0_8_24 l_0_8_24)))
 (let ((?x11343 (- (- (- (* (- l_0_8_22) l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x13769) ?x13772)))
 (= (+ (+ (+ (+ ?x11343 ?x4051) ?x4067) ?x4039) ?x10547) 0.0)))))))))
(assert
 (let ((?x14110 (* 2.0 l_0_8_40)))
 (let ((?x14651 (* ?x14110 l_0_8_44)))
 (let ((?x14106 (* 2.0 l_0_8_39)))
 (let ((?x14649 (* ?x14106 l_0_8_43)))
 (let ((?x14102 (* 2.0 l_0_8_38)))
 (let ((?x14647 (* ?x14102 l_0_8_42)))
 (let ((?x14098 (* 2.0 l_0_8_37)))
 (let ((?x14645 (* ?x14098 l_0_8_41)))
 (let ((?x13996 (* 2.0 l_0_8_25)))
 (let ((?x14643 (* ?x13996 l_0_8_29)))
 (let ((?x10667 (* 2.0 l_0_8_24)))
 (let ((?x14641 (* ?x10667 l_0_8_28)))
 (let ((?x10679 (* 2.0 l_0_8_23)))
 (let ((?x14639 (* ?x10679 l_0_8_27)))
 (let ((?x14646 (+ (- (- (- (* (* (- 2.0) l_0_8_22) l_0_8_26) ?x14639) ?x14641) ?x14643) ?x14645)))
 (= (+ (+ (+ ?x14646 ?x14647) ?x14649) ?x14651) 0.0)))))))))))))))))
(assert
 (let ((?x11096 (* l_0_8_45 l_0_8_45)))
 (let ((?x14151 (* l_0_8_44 l_0_8_44)))
 (let ((?x11089 (* l_0_8_43 l_0_8_43)))
 (let ((?x11088 (* l_0_8_42 l_0_8_42)))
 (let ((?x4828 (* l_0_8_41 l_0_8_41)))
 (let ((?x14120 (* l_0_8_30 l_0_8_30)))
 (let ((?x14117 (* l_0_8_29 l_0_8_29)))
 (let ((?x11006 (* l_0_8_28 l_0_8_28)))
 (let ((?x11470 (- (- (- (* (- l_0_8_26) l_0_8_26) (* l_0_8_27 l_0_8_27)) ?x11006) ?x14117)))
 (= (+ (+ (+ (+ (+ (- ?x11470 ?x14120) ?x4828) ?x11088) ?x11089) ?x14151) ?x11096) 0.0)))))))))))
(assert
 (let ((?x14699 (* l_0_8_66 l_0_8_66)))
 (let ((?x14697 (* l_0_8_65 l_0_8_65)))
 (let ((?x14695 (* l_0_8_64 l_0_8_64)))
 (let ((?x13146 (* l_0_8_51 l_0_8_51)))
 (let ((?x13143 (* l_0_8_50 l_0_8_50)))
 (let ((?x13137 (* l_0_8_49 l_0_8_49)))
 (let ((?x13971 (* 4.0 l_0_8_36)))
 (let ((?x13974 (* ?x13971 l_0_8_36)))
 (let ((?x13966 (* 4.0 l_0_8_35)))
 (let ((?x13969 (* ?x13966 l_0_8_35)))
 (let ((?x13961 (* 4.0 l_0_8_34)))
 (let ((?x13964 (* ?x13961 l_0_8_34)))
 (let ((?x13638 (* 4.0 l_0_8_33)))
 (let ((?x14687 (* ?x13638 l_0_8_35)))
 (let ((?x13632 (* 4.0 l_0_8_32)))
 (let ((?x14685 (* ?x13632 l_0_8_34)))
 (let ((?x13076 (* 2.0 l_0_8_31)))
 (let ((?x14337 (* ?x13076 l_0_8_32)))
 (let ((?x13956 (* l_0_8_21 l_0_8_21)))
 (let ((?x13957 (* 4.0 ?x13956)))
 (let ((?x13950 (* l_0_8_20 l_0_8_20)))
 (let ((?x13951 (* 4.0 ?x13950)))
 (let ((?x13931 (* l_0_8_19 l_0_8_19)))
 (let ((?x13945 (* 4.0 ?x13931)))
 (let ((?x13686 (* 4.0 l_0_8_18)))
 (let ((?x14679 (* ?x13686 l_0_8_20)))
 (let ((?x7769 (* 4.0 l_0_8_17)))
 (let ((?x14677 (* ?x7769 l_0_8_19)))
 (let ((?x14682 (+ (+ (- (- (* (* 2.0 l_0_8_16) l_0_8_17) ?x14677) ?x14679) ?x13945) ?x13951)))
 (let ((?x14691 (- (- (- (+ (+ (- (+ ?x14682 ?x13957) ?x14337) ?x14685) ?x14687) ?x13964) ?x13969) ?x13974)))
 (= (+ (+ (+ (- (- (- ?x14691 ?x13137) ?x13143) ?x13146) ?x14695) ?x14697) ?x14699) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x4495 (* l_0_8_36 l_0_8_36)))
 (let ((?x14727 (* 2.0 ?x4495)))
 (let ((?x10661 (* l_0_8_35 l_0_8_35)))
 (let ((?x14725 (* 2.0 ?x10661)))
 (let ((?x4470 (* l_0_8_34 l_0_8_34)))
 (let ((?x14723 (* 2.0 ?x4470)))
 (let ((?x13076 (* 2.0 l_0_8_31)))
 (let ((?x14390 (* ?x13076 l_0_8_34)))
 (let ((?x14717 (- (* (* 2.0 l_0_8_16) l_0_8_19) (* (* 2.0 l_0_8_19) l_0_8_19))))
 (let ((?x14721 (- (- ?x14717 (* (* 2.0 l_0_8_20) l_0_8_20)) (* (* 2.0 l_0_8_21) l_0_8_21))))
 (= (+ (+ (+ (- ?x14721 ?x14390) ?x14723) ?x14725) ?x14727) 0.0))))))))))))
(assert
 (let ((?x13971 (* 4.0 l_0_8_36)))
 (let ((?x14396 (* ?x13971 l_0_8_43)))
 (let ((?x13966 (* 4.0 l_0_8_35)))
 (let ((?x14394 (* ?x13966 l_0_8_42)))
 (let ((?x13961 (* 4.0 l_0_8_34)))
 (let ((?x14392 (* ?x13961 l_0_8_41)))
 (let ((?x13076 (* 2.0 l_0_8_31)))
 (let ((?x14460 (* ?x13076 l_0_8_41)))
 (let ((?x13956 (* l_0_8_21 l_0_8_21)))
 (let ((?x8602 (* 2.0 ?x13956)))
 (let ((?x13953 (* 4.0 l_0_8_21)))
 (let ((?x14373 (* ?x13953 l_0_8_28)))
 (let ((?x13950 (* l_0_8_20 l_0_8_20)))
 (let ((?x14735 (* 2.0 ?x13950)))
 (let ((?x13947 (* 4.0 l_0_8_20)))
 (let ((?x14371 (* ?x13947 l_0_8_27)))
 (let ((?x13931 (* l_0_8_19 l_0_8_19)))
 (let ((?x14730 (* 2.0 ?x13931)))
 (let ((?x13926 (* 4.0 l_0_8_19)))
 (let ((?x5264 (* ?x13926 l_0_8_26)))
 (let ((?x14747 (+ (- (+ (- (* (* 2.0 l_0_8_16) l_0_8_26) ?x5264) ?x14730) ?x14371) ?x14735)))
 (let ((?x14753 (- (+ (- (+ (- ?x14747 ?x14373) ?x8602) ?x14460) ?x14392) (* (* 2.0 l_0_8_34) l_0_8_34))))
 (let ((?x14759 (- (+ (- (+ ?x14753 ?x14394) (* (* 2.0 l_0_8_35) l_0_8_35)) ?x14396) (* (* 2.0 l_0_8_36) l_0_8_36))))
 (= ?x14759 0.0)))))))))))))))))))))))))
(assert
 (let ((?x13669 (* l_0_8_33 l_0_8_33)))
 (let ((?x10449 (* l_0_8_32 l_0_8_32)))
 (let ((?x13622 (* l_0_8_18 l_0_8_18)))
 (let ((?x7681 (* l_0_8_17 l_0_8_17)))
 (let ((?x8807 (+ ?x7681 ?x13622)))
 (= (- (- ?x8807 ?x10449) ?x13669) 0.0)))))))
(assert
 (let ((?x14501 (* 2.0 l_0_8_33)))
 (let ((?x14502 (* ?x14501 l_0_8_35)))
 (let ((?x14498 (* 2.0 l_0_8_32)))
 (let ((?x14499 (* ?x14498 l_0_8_34)))
 (let ((?x14495 (* 2.0 l_0_8_18)))
 (let ((?x14496 (* ?x14495 l_0_8_20)))
 (= (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_19) ?x14496) ?x14499) ?x14502) 0.0))))))))
(assert
 (let ((?x14501 (* 2.0 l_0_8_33)))
 (let ((?x14521 (* ?x14501 l_0_8_38)))
 (let ((?x14498 (* 2.0 l_0_8_32)))
 (let ((?x14519 (* ?x14498 l_0_8_37)))
 (let ((?x14495 (* 2.0 l_0_8_18)))
 (let ((?x14512 (* ?x14495 l_0_8_23)))
 (= (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_22) ?x14512) ?x14519) ?x14521) 0.0))))))))
(assert
 (let ((?x14501 (* 2.0 l_0_8_33)))
 (let ((?x14529 (* ?x14501 l_0_8_42)))
 (let ((?x14498 (* 2.0 l_0_8_32)))
 (let ((?x14527 (* ?x14498 l_0_8_41)))
 (let ((?x14495 (* 2.0 l_0_8_18)))
 (let ((?x14525 (* ?x14495 l_0_8_27)))
 (= (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_26) ?x14525) ?x14527) ?x14529) 0.0))))))))
(assert
 (let ((?x4495 (* l_0_8_36 l_0_8_36)))
 (let ((?x10661 (* l_0_8_35 l_0_8_35)))
 (let ((?x4470 (* l_0_8_34 l_0_8_34)))
 (let ((?x13956 (* l_0_8_21 l_0_8_21)))
 (let ((?x14800 (- (+ (+ (* l_0_8_19 l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x13956) ?x4470)))
 (= (- (- ?x14800 ?x10661) ?x4495) 0.0)))))))
(assert
 (let ((?x14591 (* 2.0 l_0_8_36)))
 (let ((?x14592 (* ?x14591 l_0_8_39)))
 (let ((?x14588 (* 2.0 l_0_8_35)))
 (let ((?x14589 (* ?x14588 l_0_8_38)))
 (let ((?x14585 (* 2.0 l_0_8_34)))
 (let ((?x14586 (* ?x14585 l_0_8_37)))
 (let ((?x14582 (* 2.0 l_0_8_21)))
 (let ((?x14583 (* ?x14582 l_0_8_24)))
 (let ((?x14579 (* 2.0 l_0_8_20)))
 (let ((?x14580 (* ?x14579 l_0_8_23)))
 (let ((?x14814 (- (- (+ (+ (* (* 2.0 l_0_8_19) l_0_8_22) ?x14580) ?x14583) ?x14586) ?x14589)))
 (= (- ?x14814 ?x14592) 0.0)))))))))))))
(assert
 (let ((?x14591 (* 2.0 l_0_8_36)))
 (let ((?x14617 (* ?x14591 l_0_8_43)))
 (let ((?x14588 (* 2.0 l_0_8_35)))
 (let ((?x14615 (* ?x14588 l_0_8_42)))
 (let ((?x14585 (* 2.0 l_0_8_34)))
 (let ((?x14613 (* ?x14585 l_0_8_41)))
 (let ((?x14582 (* 2.0 l_0_8_21)))
 (let ((?x14611 (* ?x14582 l_0_8_28)))
 (let ((?x14579 (* 2.0 l_0_8_20)))
 (let ((?x14609 (* ?x14579 l_0_8_27)))
 (let ((?x14825 (- (- (+ (+ (* (* 2.0 l_0_8_19) l_0_8_26) ?x14609) ?x14611) ?x14613) ?x14615)))
 (= (- ?x14825 ?x14617) 0.0)))))))))))))
(assert
 (let ((?x10547 (* l_0_8_40 l_0_8_40)))
 (let ((?x4039 (* l_0_8_39 l_0_8_39)))
 (let ((?x4067 (* l_0_8_38 l_0_8_38)))
 (let ((?x4051 (* l_0_8_37 l_0_8_37)))
 (let ((?x13772 (* l_0_8_25 l_0_8_25)))
 (let ((?x13769 (* l_0_8_24 l_0_8_24)))
 (let ((?x8868 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x13769) ?x13772)))
 (= (- (- (- (- ?x8868 ?x4051) ?x4067) ?x4039) ?x10547) 0.0)))))))))
(assert
 (let ((?x14110 (* 2.0 l_0_8_40)))
 (let ((?x14651 (* ?x14110 l_0_8_44)))
 (let ((?x14106 (* 2.0 l_0_8_39)))
 (let ((?x14649 (* ?x14106 l_0_8_43)))
 (let ((?x14102 (* 2.0 l_0_8_38)))
 (let ((?x14647 (* ?x14102 l_0_8_42)))
 (let ((?x14098 (* 2.0 l_0_8_37)))
 (let ((?x14645 (* ?x14098 l_0_8_41)))
 (let ((?x13996 (* 2.0 l_0_8_25)))
 (let ((?x14643 (* ?x13996 l_0_8_29)))
 (let ((?x10667 (* 2.0 l_0_8_24)))
 (let ((?x14641 (* ?x10667 l_0_8_28)))
 (let ((?x10679 (* 2.0 l_0_8_23)))
 (let ((?x14639 (* ?x10679 l_0_8_27)))
 (let ((?x14852 (- (+ (+ (+ (* (* 2.0 l_0_8_22) l_0_8_26) ?x14639) ?x14641) ?x14643) ?x14645)))
 (= (- (- (- ?x14852 ?x14647) ?x14649) ?x14651) 0.0)))))))))))))))))
(assert
 (let ((?x13307 (* 2.0 l_0_8_48)))
 (let ((?x14252 (* ?x13307 l_0_8_57)))
 (let ((?x13304 (* 2.0 l_0_8_47)))
 (let ((?x14250 (* ?x13304 l_0_8_56)))
 (let ((?x13635 (* 8.0 l_0_8_33)))
 (let ((?x13852 (* ?x13635 l_0_8_42)))
 (let ((?x13629 (* 8.0 l_0_8_32)))
 (let ((?x13849 (* ?x13629 l_0_8_41)))
 (let ((?x13622 (* l_0_8_18 l_0_8_18)))
 (let ((?x14867 (* 2.0 ?x13622)))
 (let ((?x13619 (* 8.0 l_0_8_18)))
 (let ((?x13834 (* ?x13619 l_0_8_27)))
 (let ((?x7681 (* l_0_8_17 l_0_8_17)))
 (let ((?x5599 (* 2.0 ?x7681)))
 (let ((?x3786 (* 8.0 l_0_8_17)))
 (let ((?x13831 (* ?x3786 l_0_8_26)))
 (let ((?x14871 (- (- (+ (+ (+ ?x13831 ?x5599) ?x13834) ?x14867) ?x13849) (* (* 2.0 l_0_8_32) l_0_8_32))))
 (let ((?x14876 (- (- (- (- ?x14871 ?x13852) (* (* 2.0 l_0_8_33) l_0_8_33)) ?x14250) ?x14252)))
 (let ((?x14880 (+ (+ ?x14876 (* (* 2.0 l_0_8_62) l_0_8_71)) (* (* 2.0 l_0_8_63) l_0_8_72))))
 (= ?x14880 0.0)))))))))))))))))))))
(assert
 (let ((?x13390 (* 2.0 l_0_8_51)))
 (let ((?x14295 (* ?x13390 l_0_8_58)))
 (let ((?x13387 (* 2.0 l_0_8_50)))
 (let ((?x14293 (* ?x13387 l_0_8_57)))
 (let ((?x13381 (* 2.0 l_0_8_49)))
 (let ((?x14291 (* ?x13381 l_0_8_56)))
 (let ((?x13716 (* 8.0 l_0_8_36)))
 (let ((?x14053 (* ?x13716 l_0_8_43)))
 (let ((?x13713 (* 8.0 l_0_8_35)))
 (let ((?x14050 (* ?x13713 l_0_8_42)))
 (let ((?x13710 (* 8.0 l_0_8_34)))
 (let ((?x14047 (* ?x13710 l_0_8_41)))
 (let ((?x13638 (* 4.0 l_0_8_33)))
 (let ((?x14341 (* ?x13638 l_0_8_42)))
 (let ((?x14687 (* ?x13638 l_0_8_35)))
 (let ((?x13632 (* 4.0 l_0_8_32)))
 (let ((?x14339 (* ?x13632 l_0_8_41)))
 (let ((?x14685 (* ?x13632 l_0_8_34)))
 (let ((?x13697 (* 8.0 l_0_8_21)))
 (let ((?x14032 (* ?x13697 l_0_8_28)))
 (let ((?x13694 (* 8.0 l_0_8_20)))
 (let ((?x14029 (* ?x13694 l_0_8_27)))
 (let ((?x13689 (* 8.0 l_0_8_19)))
 (let ((?x14026 (* ?x13689 l_0_8_26)))
 (let ((?x13686 (* 4.0 l_0_8_18)))
 (let ((?x14330 (* ?x13686 l_0_8_27)))
 (let ((?x14679 (* ?x13686 l_0_8_20)))
 (let ((?x7769 (* 4.0 l_0_8_17)))
 (let ((?x14328 (* ?x7769 l_0_8_26)))
 (let ((?x14677 (* ?x7769 l_0_8_19)))
 (let ((?x14896 (- (+ (+ (+ (- (+ (- ?x14677 ?x14328) ?x14679) ?x14330) ?x14026) ?x14029) ?x14032) ?x14685)))
 (let ((?x14903 (- (- (- (- (+ (- (+ ?x14896 ?x14339) ?x14687) ?x14341) ?x14047) ?x14050) ?x14053) ?x14291)))
 (let ((?x14909 (+ (+ (- (- ?x14903 ?x14293) ?x14295) (* (* 2.0 l_0_8_64) l_0_8_71)) (* (* 2.0 l_0_8_65) l_0_8_72))))
 (= (+ ?x14909 (* (* 2.0 l_0_8_66) l_0_8_73)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13307 (* 2.0 l_0_8_48)))
 (let ((?x14205 (* ?x13307 l_0_8_50)))
 (let ((?x13304 (* 2.0 l_0_8_47)))
 (let ((?x14203 (* ?x13304 l_0_8_49)))
 (let ((?x13669 (* l_0_8_33 l_0_8_33)))
 (let ((?x1061 (* 2.0 ?x13669)))
 (let ((?x13635 (* 8.0 l_0_8_33)))
 (let ((?x13706 (* ?x13635 l_0_8_35)))
 (let ((?x10449 (* l_0_8_32 l_0_8_32)))
 (let ((?x1060 (* 2.0 ?x10449)))
 (let ((?x13629 (* 8.0 l_0_8_32)))
 (let ((?x13702 (* ?x13629 l_0_8_34)))
 (let ((?x13619 (* 8.0 l_0_8_18)))
 (let ((?x13684 (* ?x13619 l_0_8_20)))
 (let ((?x3786 (* 8.0 l_0_8_17)))
 (let ((?x7690 (* ?x3786 l_0_8_19)))
 (let ((?x11886 (- (+ (- ?x7690 (* (* 2.0 l_0_8_17) l_0_8_17)) ?x13684) (* (* 2.0 l_0_8_18) l_0_8_18))))
 (let ((?x14914 (+ (- (- (+ (- (+ (- ?x11886 ?x13702) ?x1060) ?x13706) ?x1061) ?x14203) ?x14205) (* (* 2.0 l_0_8_62) l_0_8_64))))
 (= (+ ?x14914 (* (* 2.0 l_0_8_63) l_0_8_65)) 0.0))))))))))))))))))))
(assert
 (let ((?x14929 (* l_0_8_63 l_0_8_63)))
 (let ((?x14927 (* l_0_8_62 l_0_8_62)))
 (let ((?x14171 (* l_0_8_48 l_0_8_48)))
 (let ((?x14168 (* l_0_8_47 l_0_8_47)))
 (let ((?x13638 (* 4.0 l_0_8_33)))
 (let ((?x13639 (* ?x13638 l_0_8_33)))
 (let ((?x13632 (* 4.0 l_0_8_32)))
 (let ((?x13633 (* ?x13632 l_0_8_32)))
 (let ((?x13622 (* l_0_8_18 l_0_8_18)))
 (let ((?x13623 (* 4.0 ?x13622)))
 (let ((?x7681 (* l_0_8_17 l_0_8_17)))
 (let ((?x10411 (* 4.0 ?x7681)))
 (let ((?x14922 (+ ?x10411 ?x13623)))
 (= (+ (+ (- (- (- (- ?x14922 ?x13633) ?x13639) ?x14168) ?x14171) ?x14927) ?x14929) 0.0)))))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (let ((?x14985 (* 2.0 l_0_9_46)))
 (let ((?x14986 (* ?x14985 l_0_9_52)))
 (let ((?x14982 (* 4.0 l_0_9_31)))
 (let ((?x14983 (* ?x14982 l_0_9_31)))
 (let ((?x14979 (* l_0_9_16 l_0_9_16)))
 (let ((?x14980 (* 4.0 ?x14979)))
 (let ((?x14978 (- (- (* (* 2.0 l_0_9_1) l_0_9_7) (* l_0_9_1 l_0_9_1)) (* (* 2.0 l_0_9_106) l_0_9_112))))
 (let ((?x14990 (- (+ (- (+ ?x14978 ?x14980) ?x14983) ?x14986) (* (* 2.0 l_0_9_76) l_0_9_82))))
 (= (+ (- ?x14990 (* (* 2.0 l_0_9_91) l_0_9_97)) 4.0) 0.0))))))))))
(assert
 (let ((?x15024 (* l_0_9_91 l_0_9_91)))
 (let ((?x15022 (* l_0_9_76 l_0_9_76)))
 (let ((?x15017 (* l_0_9_106 l_0_9_106)))
 (let ((?x15021 (+ (- (+ (* 4.0 _a_2_) (* 1.0 (* l_0_9_1 l_0_9_1))) ?x15017) (* 1.0 (* l_0_9_46 l_0_9_46)))))
 (= (- (- ?x15021 ?x15022) ?x15024) 0.0))))))
(assert
 (let ((?x15042 (* l_0_9_61 l_0_9_61)))
 (let ((?x15019 (* l_0_9_46 l_0_9_46)))
 (let ((?x14985 (* 2.0 l_0_9_46)))
 (let ((?x15039 (* ?x14985 l_0_9_47)))
 (let ((?x14982 (* 4.0 l_0_9_31)))
 (let ((?x14983 (* ?x14982 l_0_9_31)))
 (let ((?x14979 (* l_0_9_16 l_0_9_16)))
 (let ((?x14980 (* 4.0 ?x14979)))
 (let ((?x15036 (- (+ (* 4.0 _a_3_) (* (* 2.0 l_0_9_1) l_0_9_2)) (* (* 2.0 l_0_9_106) l_0_9_107))))
 (let ((?x15045 (- (+ (- (+ (- (+ ?x15036 ?x14980) ?x14983) ?x15039) ?x15019) ?x15042) (* (* 2.0 l_0_9_76) l_0_9_77))))
 (= (- ?x15045 (* (* 2.0 l_0_9_91) l_0_9_92)) 0.0))))))))))))
(assert
 (let ((?x14985 (* 2.0 l_0_9_46)))
 (let ((?x15076 (* ?x14985 l_0_9_56)))
 (let ((?x14979 (* l_0_9_16 l_0_9_16)))
 (let ((?x15071 (* 2.0 ?x14979)))
 (let ((?x15068 (- (+ (* 4.0 _a_4_) (* (* 2.0 l_0_9_1) l_0_9_11)) (* (* 2.0 l_0_9_101) l_0_9_91))))
 (let ((?x15075 (- (+ (- ?x15068 (* (* 2.0 l_0_9_106) l_0_9_116)) ?x15071) (* (* 2.0 l_0_9_31) l_0_9_31))))
 (= (- (- (+ ?x15075 ?x15076) (* (* 2.0 l_0_9_76) l_0_9_86)) 2.0) 0.0))))))))
(assert
 (let ((?x15174 (* l_0_9_90 l_0_9_90)))
 (let ((?x15172 (* l_0_9_89 l_0_9_89)))
 (let ((?x15170 (* l_0_9_88 l_0_9_88)))
 (let ((?x15168 (* l_0_9_87 l_0_9_87)))
 (let ((?x15166 (* l_0_9_86 l_0_9_86)))
 (let ((?x12003 (* l_0_9_31 l_0_9_31)))
 (let ((?x14982 (* 4.0 l_0_9_31)))
 (let ((?x15148 (* ?x14982 l_0_9_41)))
 (let ((?x14979 (* l_0_9_16 l_0_9_16)))
 (let ((?x15144 (* 4.0 l_0_9_16)))
 (let ((?x15145 (* ?x15144 l_0_9_26)))
 (let ((?x15133 (* l_0_9_120 l_0_9_120)))
 (let ((?x15128 (* l_0_9_119 l_0_9_119)))
 (let ((?x15126 (* l_0_9_118 l_0_9_118)))
 (let ((?x15124 (* l_0_9_117 l_0_9_117)))
 (let ((?x15122 (* l_0_9_116 l_0_9_116)))
 (let ((?x15117 (* l_0_9_105 l_0_9_105)))
 (let ((?x15115 (* l_0_9_104 l_0_9_104)))
 (let ((?x15113 (* l_0_9_103 l_0_9_103)))
 (let ((?x15114 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x15113)))
 (let ((?x15123 (- (+ (- (- ?x15114 ?x15115) ?x15117) (* 1.0 (* l_0_9_11 l_0_9_11))) ?x15122)))
 (let ((?x15132 (+ (- (- (- ?x15123 ?x15124) ?x15126) ?x15128) (* 1.0 (* l_0_9_12 l_0_9_12)))))
 (let ((?x15140 (+ (+ (- ?x15132 ?x15133) (* 1.0 (* l_0_9_13 l_0_9_13))) (* 1.0 (* l_0_9_14 l_0_9_14)))))
 (let ((?x15149 (- (- (+ (+ ?x15140 (* 1.0 (* l_0_9_15 l_0_9_15))) ?x15145) ?x14979) ?x15148)))
 (let ((?x15156 (+ (+ (+ ?x15149 ?x12003) (* 1.0 (* l_0_9_56 l_0_9_56))) (* 1.0 (* l_0_9_57 l_0_9_57)))))
 (let ((?x15162 (+ (+ ?x15156 (* 1.0 (* l_0_9_58 l_0_9_58))) (* 1.0 (* l_0_9_59 l_0_9_59)))))
 (let ((?x15171 (- (- (- (+ ?x15162 (* 1.0 (* l_0_9_60 l_0_9_60))) ?x15166) ?x15168) ?x15170)))
 (= (- (- (- ?x15171 ?x15172) ?x15174) 1.0) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x15266 (* l_0_9_96 l_0_9_96)))
 (let ((?x15264 (* l_0_9_95 l_0_9_95)))
 (let ((?x15262 (* l_0_9_94 l_0_9_94)))
 (let ((?x15260 (* l_0_9_81 l_0_9_81)))
 (let ((?x15258 (* l_0_9_80 l_0_9_80)))
 (let ((?x15256 (* l_0_9_79 l_0_9_79)))
 (let ((?x12003 (* l_0_9_31 l_0_9_31)))
 (let ((?x14982 (* 4.0 l_0_9_31)))
 (let ((?x15235 (* ?x14982 l_0_9_34)))
 (let ((?x14979 (* l_0_9_16 l_0_9_16)))
 (let ((?x15144 (* 4.0 l_0_9_16)))
 (let ((?x15232 (* ?x15144 l_0_9_19)))
 (let ((?x15230 (* l_0_9_111 l_0_9_111)))
 (let ((?x15231 (- (- (* (- l_0_9_109) l_0_9_109) (* l_0_9_110 l_0_9_110)) ?x15230)))
 (let ((?x15240 (+ (- (+ (+ (- ?x15231 ?x15232) ?x14979) ?x15235) ?x12003) (* 1.0 (* l_0_9_4 l_0_9_4)))))
 (let ((?x15246 (+ (+ ?x15240 (* 1.0 (* l_0_9_49 l_0_9_49))) (* 1.0 (* l_0_9_5 l_0_9_5)))))
 (let ((?x15252 (+ (+ ?x15246 (* 1.0 (* l_0_9_50 l_0_9_50))) (* 1.0 (* l_0_9_51 l_0_9_51)))))
 (let ((?x15261 (- (- (- (+ ?x15252 (* 1.0 (* l_0_9_6 l_0_9_6))) ?x15256) ?x15258) ?x15260)))
 (= (+ (- (- (- ?x15261 ?x15262) ?x15264) ?x15266) 1.0) 0.0))))))))))))))))))))
(assert
 (let ((?x14985 (* 2.0 l_0_9_46)))
 (let ((?x15302 (* ?x14985 l_0_9_49)))
 (let ((?x12003 (* l_0_9_31 l_0_9_31)))
 (let ((?x6156 (* 2.0 ?x12003)))
 (let ((?x15297 (- (* (* 2.0 l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_106) l_0_9_109))))
 (let ((?x15305 (- (+ (+ (- ?x15297 (* (* 2.0 l_0_9_16) l_0_9_16)) ?x6156) ?x15302) (* (* 2.0 l_0_9_76) l_0_9_79))))
 (= (- (- ?x15305 (* (* 2.0 l_0_9_91) l_0_9_94)) 2.0) 0.0))))))))
(assert
 (let ((?x15344 (* 2.0 l_0_9_48)))
 (let ((?x15345 (* ?x15344 l_0_9_53)))
 (let ((?x15341 (* 2.0 l_0_9_47)))
 (let ((?x15342 (* ?x15341 l_0_9_52)))
 (let ((?x14985 (* 2.0 l_0_9_46)))
 (let ((?x14986 (* ?x14985 l_0_9_52)))
 (let ((?x15335 (* 8.0 l_0_9_31)))
 (let ((?x15338 (* ?x15335 l_0_9_37)))
 (let ((?x15336 (* ?x15335 l_0_9_32)))
 (let ((?x15332 (* 2.0 l_0_9_3)))
 (let ((?x15333 (* ?x15332 l_0_9_8)))
 (let ((?x15329 (* 2.0 l_0_9_2)))
 (let ((?x15330 (* ?x15329 l_0_9_7)))
 (let ((?x15324 (* 8.0 l_0_9_16)))
 (let ((?x15327 (* ?x15324 l_0_9_22)))
 (let ((?x15325 (* ?x15324 l_0_9_17)))
 (let ((?x15320 (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_107) l_0_9_112))))
 (let ((?x15331 (+ (+ (+ (- ?x15320 (* (* 2.0 l_0_9_108) l_0_9_113)) ?x15325) ?x15327) ?x15330)))
 (let ((?x15349 (+ (+ (+ (- (- (- (+ ?x15331 ?x15333) ?x15336) ?x15338) ?x14986) ?x15342) ?x15345) (* (* 2.0 l_0_9_61) l_0_9_67))))
 (let ((?x15355 (- (- ?x15349 (* (* 2.0 l_0_9_77) l_0_9_82)) (* (* 2.0 l_0_9_78) l_0_9_83))))
 (let ((?x15361 (- (- ?x15355 (* (* 2.0 l_0_9_92) l_0_9_97)) (* (* 2.0 l_0_9_93) l_0_9_98))))
 (= ?x15361 0.0)))))))))))))))))))))))
(assert
 (let ((?x15435 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x15431 (* 2.0 l_0_9_51)))
 (let ((?x15432 (* ?x15431 l_0_9_54)))
 (let ((?x15428 (* 2.0 l_0_9_50)))
 (let ((?x15429 (* ?x15428 l_0_9_53)))
 (let ((?x15426 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x15422 (* 2.0 l_0_9_49)))
 (let ((?x15423 (* ?x15422 l_0_9_52)))
 (let ((?x15420 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x14982 (* 4.0 l_0_9_31)))
 (let ((?x15417 (* ?x14982 l_0_9_37)))
 (let ((?x15335 (* 8.0 l_0_9_31)))
 (let ((?x15415 (* ?x15335 l_0_9_34)))
 (let ((?x15144 (* 4.0 l_0_9_16)))
 (let ((?x15413 (* ?x15144 l_0_9_22)))
 (let ((?x15324 (* 8.0 l_0_9_16)))
 (let ((?x15411 (* ?x15324 l_0_9_19)))
 (let ((?x9162 (- (* (* (- 2.0) l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_109) l_0_9_112))))
 (let ((?x15410 (- (- ?x9162 (* (* 2.0 l_0_9_110) l_0_9_113)) (* (* 2.0 l_0_9_111) l_0_9_114))))
 (let ((?x15427 (+ (+ (+ (+ (- (- (+ ?x15410 ?x15411) ?x15413) ?x15415) ?x15417) ?x15420) ?x15423) ?x15426)))
 (let ((?x15439 (- (+ (+ (+ ?x15427 ?x15429) ?x15432) ?x15435) (* (* 2.0 l_0_9_79) l_0_9_82))))
 (let ((?x15445 (- (- ?x15439 (* (* 2.0 l_0_9_80) l_0_9_83)) (* (* 2.0 l_0_9_81) l_0_9_84))))
 (let ((?x15451 (- (- ?x15445 (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x15451 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x15543 (* l_0_9_99 l_0_9_99)))
 (let ((?x15541 (* l_0_9_98 l_0_9_98)))
 (let ((?x15539 (* l_0_9_97 l_0_9_97)))
 (let ((?x15534 (* l_0_9_85 l_0_9_85)))
 (let ((?x15532 (* l_0_9_84 l_0_9_84)))
 (let ((?x15530 (* l_0_9_83 l_0_9_83)))
 (let ((?x15528 (* l_0_9_82 l_0_9_82)))
 (let ((?x15335 (* 8.0 l_0_9_31)))
 (let ((?x15338 (* ?x15335 l_0_9_37)))
 (let ((?x15324 (* 8.0 l_0_9_16)))
 (let ((?x15327 (* ?x15324 l_0_9_22)))
 (let ((?x15506 (* l_0_9_115 l_0_9_115)))
 (let ((?x15504 (* l_0_9_114 l_0_9_114)))
 (let ((?x15502 (* l_0_9_113 l_0_9_113)))
 (let ((?x15500 (* l_0_9_112 l_0_9_112)))
 (let ((?x15498 (* l_0_9_100 l_0_9_100)))
 (let ((?x15497 (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) (* 1.0 (* l_0_9_10 l_0_9_10)))))
 (let ((?x15509 (- (+ (- (- (- (- (- ?x15497 ?x15498) ?x15500) ?x15502) ?x15504) ?x15506) ?x15327) ?x15338)))
 (let ((?x15515 (+ (+ ?x15509 (* 1.0 (* l_0_9_52 l_0_9_52))) (* 1.0 (* l_0_9_53 l_0_9_53)))))
 (let ((?x15521 (+ (+ ?x15515 (* 1.0 (* l_0_9_54 l_0_9_54))) (* 1.0 (* l_0_9_55 l_0_9_55)))))
 (let ((?x15527 (+ (+ ?x15521 (* 1.0 (* l_0_9_7 l_0_9_7))) (* 1.0 (* l_0_9_8 l_0_9_8)))))
 (let ((?x15538 (+ (- (- (- (- ?x15527 ?x15528) ?x15530) ?x15532) ?x15534) (* 1.0 (* l_0_9_9 l_0_9_9)))))
 (= (- (- (- ?x15538 ?x15539) ?x15541) ?x15543) 0.0))))))))))))))))))))))))
(assert
 (let ((?x15620 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x15617 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x15614 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x15611 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x15335 (* 8.0 l_0_9_31)))
 (let ((?x15608 (* ?x15335 l_0_9_41)))
 (let ((?x14982 (* 4.0 l_0_9_31)))
 (let ((?x15417 (* ?x14982 l_0_9_37)))
 (let ((?x15324 (* 8.0 l_0_9_16)))
 (let ((?x15605 (* ?x15324 l_0_9_26)))
 (let ((?x15144 (* 4.0 l_0_9_16)))
 (let ((?x15413 (* ?x15144 l_0_9_22)))
 (let ((?x15601 (* 2.0 l_0_9_13)))
 (let ((?x15602 (* ?x15601 l_0_9_9)))
 (let ((?x15598 (* 2.0 l_0_9_12)))
 (let ((?x15599 (* ?x15598 l_0_9_8)))
 (let ((?x15583 (* 2.0 l_0_9_11)))
 (let ((?x15584 (* ?x15583 l_0_9_7)))
 (let ((?x15571 (+ (* (* (- 2.0) l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_10) l_0_9_14))))
 (let ((?x15576 (- (- ?x15571 (* (* 2.0 l_0_9_100) l_0_9_104)) (* (* 2.0 l_0_9_101) l_0_9_97))))
 (let ((?x15582 (- (- ?x15576 (* (* 2.0 l_0_9_102) l_0_9_98)) (* (* 2.0 l_0_9_103) l_0_9_99))))
 (let ((?x15591 (- (- (+ ?x15582 ?x15584) (* (* 2.0 l_0_9_112) l_0_9_116)) (* (* 2.0 l_0_9_113) l_0_9_117))))
 (let ((?x15597 (- (- ?x15591 (* (* 2.0 l_0_9_114) l_0_9_118)) (* (* 2.0 l_0_9_115) l_0_9_119))))
 (let ((?x15612 (+ (- (- (+ (+ (+ (+ ?x15597 ?x15599) ?x15602) ?x15413) ?x15605) ?x15417) ?x15608) ?x15611)))
 (let ((?x15624 (- (+ (+ (+ ?x15612 ?x15614) ?x15617) ?x15620) (* (* 2.0 l_0_9_82) l_0_9_86))))
 (let ((?x15630 (- (- ?x15624 (* (* 2.0 l_0_9_83) l_0_9_87)) (* (* 2.0 l_0_9_84) l_0_9_88))))
 (= (- ?x15630 (* (* 2.0 l_0_9_85) l_0_9_89)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x15344 (* 2.0 l_0_9_48)))
 (let ((?x15345 (* ?x15344 l_0_9_53)))
 (let ((?x15341 (* 2.0 l_0_9_47)))
 (let ((?x15342 (* ?x15341 l_0_9_52)))
 (let ((?x15712 (* 4.0 l_0_9_33)))
 (let ((?x15713 (* ?x15712 l_0_9_33)))
 (let ((?x15709 (* 8.0 l_0_9_33)))
 (let ((?x15710 (* ?x15709 l_0_9_38)))
 (let ((?x15706 (* 4.0 l_0_9_32)))
 (let ((?x15707 (* ?x15706 l_0_9_32)))
 (let ((?x15703 (* 8.0 l_0_9_32)))
 (let ((?x15704 (* ?x15703 l_0_9_37)))
 (let ((?x15701 (* l_0_9_3 l_0_9_3)))
 (let ((?x15699 (* l_0_9_2 l_0_9_2)))
 (let ((?x15696 (* l_0_9_18 l_0_9_18)))
 (let ((?x15697 (* 4.0 ?x15696)))
 (let ((?x9541 (* 8.0 l_0_9_18)))
 (let ((?x15694 (* ?x9541 l_0_9_23)))
 (let ((?x1532 (* l_0_9_17 l_0_9_17)))
 (let ((?x12316 (* 4.0 ?x1532)))
 (let ((?x12357 (* 8.0 l_0_9_17)))
 (let ((?x9524 (* ?x12357 l_0_9_22)))
 (let ((?x15708 (- (- (- (- (+ (+ (+ ?x9524 ?x12316) ?x15694) ?x15697) ?x15699) ?x15701) ?x15704) ?x15707)))
 (let ((?x15719 (+ (- (- (- (- ?x15708 ?x15710) ?x15713) ?x15342) ?x15345) (* (* 2.0 l_0_9_62) l_0_9_67))))
 (= (+ ?x15719 (* (* 2.0 l_0_9_63) l_0_9_68)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15431 (* 2.0 l_0_9_51)))
 (let ((?x15432 (* ?x15431 l_0_9_54)))
 (let ((?x15428 (* 2.0 l_0_9_50)))
 (let ((?x15429 (* ?x15428 l_0_9_53)))
 (let ((?x15422 (* 2.0 l_0_9_49)))
 (let ((?x15423 (* ?x15422 l_0_9_52)))
 (let ((?x15786 (* 8.0 l_0_9_36)))
 (let ((?x15787 (* ?x15786 l_0_9_39)))
 (let ((?x15783 (* 8.0 l_0_9_35)))
 (let ((?x15784 (* ?x15783 l_0_9_38)))
 (let ((?x15780 (* 8.0 l_0_9_34)))
 (let ((?x15781 (* ?x15780 l_0_9_37)))
 (let ((?x15712 (* 4.0 l_0_9_33)))
 (let ((?x15778 (* ?x15712 l_0_9_38)))
 (let ((?x15709 (* 8.0 l_0_9_33)))
 (let ((?x15776 (* ?x15709 l_0_9_35)))
 (let ((?x15706 (* 4.0 l_0_9_32)))
 (let ((?x15774 (* ?x15706 l_0_9_37)))
 (let ((?x15703 (* 8.0 l_0_9_32)))
 (let ((?x15772 (* ?x15703 l_0_9_34)))
 (let ((?x15332 (* 2.0 l_0_9_3)))
 (let ((?x15770 (* ?x15332 l_0_9_5)))
 (let ((?x15767 (* 8.0 l_0_9_21)))
 (let ((?x15768 (* ?x15767 l_0_9_24)))
 (let ((?x15764 (* 8.0 l_0_9_20)))
 (let ((?x15765 (* ?x15764 l_0_9_23)))
 (let ((?x15329 (* 2.0 l_0_9_2)))
 (let ((?x15762 (* ?x15329 l_0_9_4)))
 (let ((?x15759 (* 8.0 l_0_9_19)))
 (let ((?x15760 (* ?x15759 l_0_9_22)))
 (let ((?x15756 (* 4.0 l_0_9_18)))
 (let ((?x15757 (* ?x15756 l_0_9_23)))
 (let ((?x9541 (* 8.0 l_0_9_18)))
 (let ((?x15754 (* ?x9541 l_0_9_20)))
 (let ((?x15751 (* 4.0 l_0_9_17)))
 (let ((?x15752 (* ?x15751 l_0_9_22)))
 (let ((?x12357 (* 8.0 l_0_9_17)))
 (let ((?x15750 (* ?x12357 l_0_9_19)))
 (let ((?x15769 (+ (+ (- (+ (- (+ (- ?x15750 ?x15752) ?x15754) ?x15757) ?x15760) ?x15762) ?x15765) ?x15768)))
 (let ((?x15785 (- (- (+ (- (+ (- (- ?x15769 ?x15770) ?x15772) ?x15774) ?x15776) ?x15778) ?x15781) ?x15784)))
 (let ((?x15794 (+ (- (- (- (- ?x15785 ?x15787) ?x15423) ?x15429) ?x15432) (* (* 2.0 l_0_9_64) l_0_9_67))))
 (let ((?x15800 (+ (+ ?x15794 (* (* 2.0 l_0_9_65) l_0_9_68)) (* (* 2.0 l_0_9_66) l_0_9_69))))
 (= ?x15800 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15874 (* l_0_9_70 l_0_9_70)))
 (let ((?x15872 (* l_0_9_69 l_0_9_69)))
 (let ((?x15870 (* l_0_9_68 l_0_9_68)))
 (let ((?x15868 (* l_0_9_67 l_0_9_67)))
 (let ((?x15519 (* l_0_9_55 l_0_9_55)))
 (let ((?x15516 (* l_0_9_54 l_0_9_54)))
 (let ((?x15513 (* l_0_9_53 l_0_9_53)))
 (let ((?x15510 (* l_0_9_52 l_0_9_52)))
 (let ((?x15861 (* 4.0 l_0_9_40)))
 (let ((?x15862 (* ?x15861 l_0_9_40)))
 (let ((?x15858 (* 4.0 l_0_9_39)))
 (let ((?x15859 (* ?x15858 l_0_9_39)))
 (let ((?x15855 (* 4.0 l_0_9_38)))
 (let ((?x15856 (* ?x15855 l_0_9_38)))
 (let ((?x15852 (* 4.0 l_0_9_37)))
 (let ((?x15853 (* ?x15852 l_0_9_37)))
 (let ((?x15709 (* 8.0 l_0_9_33)))
 (let ((?x15710 (* ?x15709 l_0_9_38)))
 (let ((?x15703 (* 8.0 l_0_9_32)))
 (let ((?x15704 (* ?x15703 l_0_9_37)))
 (let ((?x15332 (* 2.0 l_0_9_3)))
 (let ((?x15333 (* ?x15332 l_0_9_8)))
 (let ((?x15846 (* l_0_9_25 l_0_9_25)))
 (let ((?x15847 (* 4.0 ?x15846)))
 (let ((?x15843 (* l_0_9_24 l_0_9_24)))
 (let ((?x15844 (* 4.0 ?x15843)))
 (let ((?x15840 (* l_0_9_23 l_0_9_23)))
 (let ((?x15841 (* 4.0 ?x15840)))
 (let ((?x15837 (* l_0_9_22 l_0_9_22)))
 (let ((?x15838 (* 4.0 ?x15837)))
 (let ((?x15329 (* 2.0 l_0_9_2)))
 (let ((?x15330 (* ?x15329 l_0_9_7)))
 (let ((?x9541 (* 8.0 l_0_9_18)))
 (let ((?x15694 (* ?x9541 l_0_9_23)))
 (let ((?x12357 (* 8.0 l_0_9_17)))
 (let ((?x9524 (* ?x12357 l_0_9_22)))
 (let ((?x15849 (- (+ (+ (+ (+ (- (+ ?x9524 ?x15694) ?x15330) ?x15838) ?x15841) ?x15844) ?x15847) ?x15333)))
 (let ((?x15864 (- (- (- (- (- (- (- ?x15849 ?x15704) ?x15710) ?x15853) ?x15856) ?x15859) ?x15862) ?x15510)))
 (let ((?x15875 (+ (+ (+ (+ (- (- (- ?x15864 ?x15513) ?x15516) ?x15519) ?x15868) ?x15870) ?x15872) ?x15874)))
 (= ?x15875 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15620 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x15617 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x15614 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x15611 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x15912 (* (* 8.0 l_0_9_40) l_0_9_44)))
 (let ((?x15909 (* (* 8.0 l_0_9_39) l_0_9_43)))
 (let ((?x15906 (* (* 8.0 l_0_9_38) l_0_9_42)))
 (let ((?x15903 (* (* 8.0 l_0_9_37) l_0_9_41)))
 (let ((?x15709 (* 8.0 l_0_9_33)))
 (let ((?x15900 (* ?x15709 l_0_9_42)))
 (let ((?x15712 (* 4.0 l_0_9_33)))
 (let ((?x15778 (* ?x15712 l_0_9_38)))
 (let ((?x15703 (* 8.0 l_0_9_32)))
 (let ((?x15897 (* ?x15703 l_0_9_41)))
 (let ((?x15706 (* 4.0 l_0_9_32)))
 (let ((?x15774 (* ?x15706 l_0_9_37)))
 (let ((?x15894 (* (* 8.0 l_0_9_25) l_0_9_29)))
 (let ((?x15891 (* (* 8.0 l_0_9_24) l_0_9_28)))
 (let ((?x15888 (* (* 8.0 l_0_9_23) l_0_9_27)))
 (let ((?x15885 (* (* 8.0 l_0_9_22) l_0_9_26)))
 (let ((?x9541 (* 8.0 l_0_9_18)))
 (let ((?x15882 (* ?x9541 l_0_9_27)))
 (let ((?x15756 (* 4.0 l_0_9_18)))
 (let ((?x15757 (* ?x15756 l_0_9_23)))
 (let ((?x12357 (* 8.0 l_0_9_17)))
 (let ((?x6689 (* ?x12357 l_0_9_26)))
 (let ((?x15751 (* 4.0 l_0_9_17)))
 (let ((?x15752 (* ?x15751 l_0_9_22)))
 (let ((?x15598 (* 2.0 l_0_9_12)))
 (let ((?x6615 (* ?x15598 l_0_9_3)))
 (let ((?x15881 (+ (+ (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x6615) ?x15752) ?x6689) ?x15757)))
 (let ((?x15898 (- (- (+ (+ (+ (+ (+ ?x15881 ?x15882) ?x15885) ?x15888) ?x15891) ?x15894) ?x15774) ?x15897)))
 (let ((?x15914 (- (- (- (- (- (- (- ?x15898 ?x15778) ?x15900) ?x15903) ?x15906) ?x15909) ?x15912) ?x15611)))
 (let ((?x15920 (+ (- (- (- ?x15914 ?x15614) ?x15617) ?x15620) (* (* 2.0 l_0_9_67) l_0_9_71))))
 (let ((?x15926 (+ (+ ?x15920 (* (* 2.0 l_0_9_68) l_0_9_72)) (* (* 2.0 l_0_9_69) l_0_9_73))))
 (= (+ ?x15926 (* (* 2.0 l_0_9_70) l_0_9_74)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15253 (* l_0_9_6 l_0_9_6)))
 (let ((?x15244 (* l_0_9_5 l_0_9_5)))
 (let ((?x15238 (* l_0_9_4 l_0_9_4)))
 (let ((?x16011 (* 4.0 l_0_9_36)))
 (let ((?x16014 (* ?x16011 l_0_9_36)))
 (let ((?x16012 (* ?x16011 l_0_9_39)))
 (let ((?x16006 (* 4.0 l_0_9_35)))
 (let ((?x16009 (* ?x16006 l_0_9_35)))
 (let ((?x16007 (* ?x16006 l_0_9_38)))
 (let ((?x16001 (* 4.0 l_0_9_34)))
 (let ((?x16004 (* ?x16001 l_0_9_34)))
 (let ((?x16002 (* ?x16001 l_0_9_37)))
 (let ((?x15073 (* 2.0 l_0_9_31)))
 (let ((?x15999 (* ?x15073 l_0_9_37)))
 (let ((?x15996 (* l_0_9_21 l_0_9_21)))
 (let ((?x15997 (* 4.0 ?x15996)))
 (let ((?x15993 (* 4.0 l_0_9_21)))
 (let ((?x15994 (* ?x15993 l_0_9_24)))
 (let ((?x15990 (* l_0_9_20 l_0_9_20)))
 (let ((?x15991 (* 4.0 ?x15990)))
 (let ((?x15987 (* 4.0 l_0_9_20)))
 (let ((?x15988 (* ?x15987 l_0_9_23)))
 (let ((?x15971 (* l_0_9_19 l_0_9_19)))
 (let ((?x15985 (* 4.0 ?x15971)))
 (let ((?x2590 (* 4.0 l_0_9_19)))
 (let ((?x15968 (* ?x2590 l_0_9_22)))
 (let ((?x15298 (* 2.0 l_0_9_16)))
 (let ((?x15966 (* ?x15298 l_0_9_22)))
 (let ((?x16000 (- (+ (- (+ (- (+ (- ?x15966 ?x15968) ?x15985) ?x15988) ?x15991) ?x15994) ?x15997) ?x15999)))
 (let ((?x16016 (- (- (+ (- (+ (- (+ ?x16000 ?x16002) ?x16004) ?x16007) ?x16009) ?x16012) ?x16014) ?x15238)))
 (= (- (- ?x16016 ?x15244) ?x15253) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x15435 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x15426 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x12593 (* l_0_9_40 l_0_9_40)))
 (let ((?x16075 (* 2.0 ?x12593)))
 (let ((?x15420 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x12558 (* l_0_9_39 l_0_9_39)))
 (let ((?x16072 (* 2.0 ?x12558)))
 (let ((?x12528 (* l_0_9_38 l_0_9_38)))
 (let ((?x16070 (* 2.0 ?x12528)))
 (let ((?x12502 (* l_0_9_37 l_0_9_37)))
 (let ((?x16068 (* 2.0 ?x12502)))
 (let ((?x15786 (* 8.0 l_0_9_36)))
 (let ((?x15787 (* ?x15786 l_0_9_39)))
 (let ((?x15783 (* 8.0 l_0_9_35)))
 (let ((?x15784 (* ?x15783 l_0_9_38)))
 (let ((?x15780 (* 8.0 l_0_9_34)))
 (let ((?x15781 (* ?x15780 l_0_9_37)))
 (let ((?x15767 (* 8.0 l_0_9_21)))
 (let ((?x15768 (* ?x15767 l_0_9_24)))
 (let ((?x15764 (* 8.0 l_0_9_20)))
 (let ((?x15765 (* ?x15764 l_0_9_23)))
 (let ((?x15759 (* 8.0 l_0_9_19)))
 (let ((?x15760 (* ?x15759 l_0_9_22)))
 (let ((?x16058 (- (- (+ (+ ?x15760 ?x15765) ?x15768) (* (* 2.0 l_0_9_22) l_0_9_22)) (* (* 2.0 l_0_9_23) l_0_9_23))))
 (let ((?x16064 (- (- ?x16058 (* (* 2.0 l_0_9_24) l_0_9_24)) (* (* 2.0 l_0_9_25) l_0_9_25))))
 (let ((?x16074 (- (+ (+ (+ (- (- (- ?x16064 ?x15781) ?x15784) ?x15787) ?x16068) ?x16070) ?x16072) ?x15420)))
 (= (- (- (+ ?x16074 ?x16075) ?x15426) ?x15435) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x15861 (* 4.0 l_0_9_40)))
 (let ((?x16109 (* ?x15861 l_0_9_44)))
 (let ((?x15858 (* 4.0 l_0_9_39)))
 (let ((?x16107 (* ?x15858 l_0_9_43)))
 (let ((?x15855 (* 4.0 l_0_9_38)))
 (let ((?x16105 (* ?x15855 l_0_9_42)))
 (let ((?x15852 (* 4.0 l_0_9_37)))
 (let ((?x16103 (* ?x15852 l_0_9_41)))
 (let ((?x15786 (* 8.0 l_0_9_36)))
 (let ((?x16101 (* ?x15786 l_0_9_43)))
 (let ((?x16011 (* 4.0 l_0_9_36)))
 (let ((?x16012 (* ?x16011 l_0_9_39)))
 (let ((?x15783 (* 8.0 l_0_9_35)))
 (let ((?x16098 (* ?x15783 l_0_9_42)))
 (let ((?x16006 (* 4.0 l_0_9_35)))
 (let ((?x16007 (* ?x16006 l_0_9_38)))
 (let ((?x15780 (* 8.0 l_0_9_34)))
 (let ((?x16095 (* ?x15780 l_0_9_41)))
 (let ((?x16001 (* 4.0 l_0_9_34)))
 (let ((?x16002 (* ?x16001 l_0_9_37)))
 (let ((?x16092 (* (* 4.0 l_0_9_25) l_0_9_29)))
 (let ((?x16089 (* (* 4.0 l_0_9_24) l_0_9_28)))
 (let ((?x16086 (* (* 4.0 l_0_9_23) l_0_9_27)))
 (let ((?x16083 (* (* 4.0 l_0_9_22) l_0_9_26)))
 (let ((?x15767 (* 8.0 l_0_9_21)))
 (let ((?x6930 (* ?x15767 l_0_9_28)))
 (let ((?x15993 (* 4.0 l_0_9_21)))
 (let ((?x15994 (* ?x15993 l_0_9_24)))
 (let ((?x15764 (* 8.0 l_0_9_20)))
 (let ((?x6912 (* ?x15764 l_0_9_27)))
 (let ((?x15987 (* 4.0 l_0_9_20)))
 (let ((?x15988 (* ?x15987 l_0_9_23)))
 (let ((?x15759 (* 8.0 l_0_9_19)))
 (let ((?x2805 (* ?x15759 l_0_9_26)))
 (let ((?x2590 (* 4.0 l_0_9_19)))
 (let ((?x15968 (* ?x2590 l_0_9_22)))
 (let ((?x15601 (* 2.0 l_0_9_13)))
 (let ((?x2738 (* ?x15601 l_0_9_6)))
 (let ((?x15598 (* 2.0 l_0_9_12)))
 (let ((?x12834 (* ?x15598 l_0_9_5)))
 (let ((?x6942 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x12834) ?x2738) ?x15968) ?x2805)))
 (let ((?x16090 (- (- (- (+ (+ (+ (+ ?x6942 ?x15988) ?x6912) ?x15994) ?x6930) ?x16083) ?x16086) ?x16089)))
 (let ((?x16102 (- (- (- (- (- (- (- ?x16090 ?x16092) ?x16002) ?x16095) ?x16007) ?x16098) ?x16012) ?x16101)))
 (= (+ (+ (+ (+ ?x16102 ?x16103) ?x16105) ?x16107) ?x16109) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15536 (* l_0_9_9 l_0_9_9)))
 (let ((?x15525 (* l_0_9_8 l_0_9_8)))
 (let ((?x15522 (* l_0_9_7 l_0_9_7)))
 (let ((?x15861 (* 4.0 l_0_9_40)))
 (let ((?x15862 (* ?x15861 l_0_9_40)))
 (let ((?x15858 (* 4.0 l_0_9_39)))
 (let ((?x15859 (* ?x15858 l_0_9_39)))
 (let ((?x15855 (* 4.0 l_0_9_38)))
 (let ((?x15856 (* ?x15855 l_0_9_38)))
 (let ((?x15852 (* 4.0 l_0_9_37)))
 (let ((?x15853 (* ?x15852 l_0_9_37)))
 (let ((?x15846 (* l_0_9_25 l_0_9_25)))
 (let ((?x15847 (* 4.0 ?x15846)))
 (let ((?x15843 (* l_0_9_24 l_0_9_24)))
 (let ((?x15844 (* 4.0 ?x15843)))
 (let ((?x15840 (* l_0_9_23 l_0_9_23)))
 (let ((?x15841 (* 4.0 ?x15840)))
 (let ((?x12873 (+ (+ (* (- l_0_9_10) l_0_9_10) (* 4.0 (* l_0_9_22 l_0_9_22))) ?x15841)))
 (let ((?x16146 (- (- (- (- (- (+ (+ ?x12873 ?x15844) ?x15847) ?x15853) ?x15856) ?x15859) ?x15862) ?x15522)))
 (= (- (- ?x16146 ?x15525) ?x15536) 0.0)))))))))))))))))))))
(assert
 (let ((?x15912 (* (* 8.0 l_0_9_40) l_0_9_44)))
 (let ((?x15909 (* (* 8.0 l_0_9_39) l_0_9_43)))
 (let ((?x15906 (* (* 8.0 l_0_9_38) l_0_9_42)))
 (let ((?x15903 (* (* 8.0 l_0_9_37) l_0_9_41)))
 (let ((?x15846 (* l_0_9_25 l_0_9_25)))
 (let ((?x12809 (* 2.0 ?x15846)))
 (let ((?x15894 (* (* 8.0 l_0_9_25) l_0_9_29)))
 (let ((?x15843 (* l_0_9_24 l_0_9_24)))
 (let ((?x12798 (* 2.0 ?x15843)))
 (let ((?x15891 (* (* 8.0 l_0_9_24) l_0_9_28)))
 (let ((?x15840 (* l_0_9_23 l_0_9_23)))
 (let ((?x6922 (* 2.0 ?x15840)))
 (let ((?x15888 (* (* 8.0 l_0_9_23) l_0_9_27)))
 (let ((?x15837 (* l_0_9_22 l_0_9_22)))
 (let ((?x12794 (* 2.0 ?x15837)))
 (let ((?x15885 (* (* 8.0 l_0_9_22) l_0_9_26)))
 (let ((?x15601 (* 2.0 l_0_9_13)))
 (let ((?x15602 (* ?x15601 l_0_9_9)))
 (let ((?x15598 (* 2.0 l_0_9_12)))
 (let ((?x15599 (* ?x15598 l_0_9_8)))
 (let ((?x15583 (* 2.0 l_0_9_11)))
 (let ((?x15584 (* ?x15583 l_0_9_7)))
 (let ((?x2987 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x15584) ?x15599) ?x15602) ?x15885)))
 (let ((?x16163 (+ (+ (+ (+ (+ (+ (+ ?x2987 ?x12794) ?x15888) ?x6922) ?x15891) ?x12798) ?x15894) ?x12809)))
 (let ((?x16171 (- (- (- (- ?x16163 ?x15903) (* (* 2.0 l_0_9_37) l_0_9_37)) ?x15906) (* (* 2.0 l_0_9_38) l_0_9_38))))
 (let ((?x16179 (- (- (- (- ?x16171 ?x15909) (* (* 2.0 l_0_9_39) l_0_9_39)) ?x15912) (* (* 2.0 l_0_9_40) l_0_9_40))))
 (= ?x16179 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x16219 (* (* 4.0 l_0_9_45) l_0_9_45)))
 (let ((?x16216 (* (* 4.0 l_0_9_44) l_0_9_44)))
 (let ((?x16213 (* (* 4.0 l_0_9_43) l_0_9_43)))
 (let ((?x16210 (* (* 4.0 l_0_9_42) l_0_9_42)))
 (let ((?x16207 (* (* 4.0 l_0_9_41) l_0_9_41)))
 (let ((?x15861 (* 4.0 l_0_9_40)))
 (let ((?x16109 (* ?x15861 l_0_9_44)))
 (let ((?x15858 (* 4.0 l_0_9_39)))
 (let ((?x16107 (* ?x15858 l_0_9_43)))
 (let ((?x15855 (* 4.0 l_0_9_38)))
 (let ((?x16105 (* ?x15855 l_0_9_42)))
 (let ((?x15852 (* 4.0 l_0_9_37)))
 (let ((?x16103 (* ?x15852 l_0_9_41)))
 (let ((?x15073 (* 2.0 l_0_9_31)))
 (let ((?x15999 (* ?x15073 l_0_9_37)))
 (let ((?x16198 (* l_0_9_30 l_0_9_30)))
 (let ((?x16199 (* 4.0 ?x16198)))
 (let ((?x16195 (* l_0_9_29 l_0_9_29)))
 (let ((?x16196 (* 4.0 ?x16195)))
 (let ((?x16192 (* l_0_9_28 l_0_9_28)))
 (let ((?x16193 (* 4.0 ?x16192)))
 (let ((?x16189 (* l_0_9_27 l_0_9_27)))
 (let ((?x16190 (* 4.0 ?x16189)))
 (let ((?x16186 (* l_0_9_26 l_0_9_26)))
 (let ((?x16187 (* 4.0 ?x16186)))
 (let ((?x16092 (* (* 4.0 l_0_9_25) l_0_9_29)))
 (let ((?x16089 (* (* 4.0 l_0_9_24) l_0_9_28)))
 (let ((?x16086 (* (* 4.0 l_0_9_23) l_0_9_27)))
 (let ((?x16083 (* (* 4.0 l_0_9_22) l_0_9_26)))
 (let ((?x15298 (* 2.0 l_0_9_16)))
 (let ((?x15966 (* ?x15298 l_0_9_22)))
 (let ((?x15141 (* l_0_9_15 l_0_9_15)))
 (let ((?x15138 (* l_0_9_14 l_0_9_14)))
 (let ((?x15135 (* l_0_9_13 l_0_9_13)))
 (let ((?x6002 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15135) ?x15138)))
 (let ((?x16188 (+ (+ (+ (+ (+ (- (- ?x6002 ?x15141) ?x15966) ?x16083) ?x16086) ?x16089) ?x16092) ?x16187)))
 (let ((?x16203 (- (- (+ (+ (+ (+ (+ ?x16188 ?x16190) ?x16193) ?x16196) ?x16199) ?x15999) ?x16103) ?x16105)))
 (let ((?x16220 (- (- (- (- (- (- (- ?x16203 ?x16107) ?x16109) ?x16207) ?x16210) ?x16213) ?x16216) ?x16219)))
 (= ?x16220 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16277 (* l_0_9_93 l_0_9_93)))
 (let ((?x16275 (* l_0_9_92 l_0_9_92)))
 (let ((?x16273 (* l_0_9_78 l_0_9_78)))
 (let ((?x16271 (* l_0_9_77 l_0_9_77)))
 (let ((?x14985 (* 2.0 l_0_9_46)))
 (let ((?x15039 (* ?x14985 l_0_9_47)))
 (let ((?x15335 (* 8.0 l_0_9_31)))
 (let ((?x15336 (* ?x15335 l_0_9_32)))
 (let ((?x15324 (* 8.0 l_0_9_16)))
 (let ((?x15325 (* ?x15324 l_0_9_17)))
 (let ((?x16256 (+ (- (* (- l_0_9_107) l_0_9_107) (* l_0_9_108 l_0_9_108)) ?x15325)))
 (let ((?x16260 (+ (+ ?x16256 (* 1.0 (* l_0_9_2 l_0_9_2))) (* 1.0 (* l_0_9_3 l_0_9_3)))))
 (let ((?x16268 (+ (+ (- (- ?x16260 ?x15336) ?x15039) (* 1.0 (* l_0_9_47 l_0_9_47))) (* 1.0 (* l_0_9_48 l_0_9_48)))))
 (let ((?x16276 (- (- (- (+ ?x16268 (* (* 2.0 l_0_9_61) l_0_9_62)) ?x16271) ?x16273) ?x16275)))
 (= (- ?x16276 ?x16277) 0.0))))))))))))))))
(assert
 (let ((?x15344 (* 2.0 l_0_9_48)))
 (let ((?x16312 (* ?x15344 l_0_9_50)))
 (let ((?x15341 (* 2.0 l_0_9_47)))
 (let ((?x16310 (* ?x15341 l_0_9_49)))
 (let ((?x14985 (* 2.0 l_0_9_46)))
 (let ((?x15302 (* ?x14985 l_0_9_49)))
 (let ((?x15335 (* 8.0 l_0_9_31)))
 (let ((?x15415 (* ?x15335 l_0_9_34)))
 (let ((?x14982 (* 4.0 l_0_9_31)))
 (let ((?x16306 (* ?x14982 l_0_9_32)))
 (let ((?x15332 (* 2.0 l_0_9_3)))
 (let ((?x15770 (* ?x15332 l_0_9_5)))
 (let ((?x15329 (* 2.0 l_0_9_2)))
 (let ((?x15762 (* ?x15329 l_0_9_4)))
 (let ((?x15324 (* 8.0 l_0_9_16)))
 (let ((?x15411 (* ?x15324 l_0_9_19)))
 (let ((?x15144 (* 4.0 l_0_9_16)))
 (let ((?x16301 (* ?x15144 l_0_9_17)))
 (let ((?x16300 (- (* (* (- 2.0) l_0_9_107) l_0_9_109) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x16309 (- (- (+ (+ (+ (+ (- ?x16300 ?x16301) ?x15411) ?x15762) ?x15770) ?x16306) ?x15415) ?x15302)))
 (let ((?x16317 (- (+ (+ (+ ?x16309 ?x16310) ?x16312) (* (* 2.0 l_0_9_61) l_0_9_64)) (* (* 2.0 l_0_9_77) l_0_9_79))))
 (let ((?x16321 (- (- ?x16317 (* (* 2.0 l_0_9_78) l_0_9_80)) (* (* 2.0 l_0_9_92) l_0_9_94))))
 (= (- ?x16321 (* (* 2.0 l_0_9_93) l_0_9_95)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x15344 (* 2.0 l_0_9_48)))
 (let ((?x16344 (* ?x15344 l_0_9_57)))
 (let ((?x15341 (* 2.0 l_0_9_47)))
 (let ((?x16342 (* ?x15341 l_0_9_56)))
 (let ((?x14985 (* 2.0 l_0_9_46)))
 (let ((?x15076 (* ?x14985 l_0_9_56)))
 (let ((?x15335 (* 8.0 l_0_9_31)))
 (let ((?x15608 (* ?x15335 l_0_9_41)))
 (let ((?x14982 (* 4.0 l_0_9_31)))
 (let ((?x16306 (* ?x14982 l_0_9_32)))
 (let ((?x15324 (* 8.0 l_0_9_16)))
 (let ((?x15605 (* ?x15324 l_0_9_26)))
 (let ((?x15144 (* 4.0 l_0_9_16)))
 (let ((?x16301 (* ?x15144 l_0_9_17)))
 (let ((?x15598 (* 2.0 l_0_9_12)))
 (let ((?x6615 (* ?x15598 l_0_9_3)))
 (let ((?x13098 (- (* (* (- 2.0) l_0_9_101) l_0_9_92) (* (* 2.0 l_0_9_102) l_0_9_93))))
 (let ((?x13093 (- (- ?x13098 (* (* 2.0 l_0_9_107) l_0_9_116)) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x16338 (+ (+ (+ (+ ?x13093 (* (* 2.0 l_0_9_11) l_0_9_2)) ?x6615) ?x16301) ?x15605)))
 (let ((?x16347 (+ (+ (+ (- (- (- ?x16338 ?x16306) ?x15608) ?x15076) ?x16342) ?x16344) (* (* 2.0 l_0_9_61) l_0_9_71))))
 (let ((?x16351 (- (- ?x16347 (* (* 2.0 l_0_9_77) l_0_9_86)) (* (* 2.0 l_0_9_78) l_0_9_87))))
 (= ?x16351 0.0)))))))))))))))))))))))
(assert
 (let ((?x15431 (* 2.0 l_0_9_51)))
 (let ((?x16399 (* ?x15431 l_0_9_58)))
 (let ((?x15428 (* 2.0 l_0_9_50)))
 (let ((?x16397 (* ?x15428 l_0_9_57)))
 (let ((?x15422 (* 2.0 l_0_9_49)))
 (let ((?x16395 (* ?x15422 l_0_9_56)))
 (let ((?x14982 (* 4.0 l_0_9_31)))
 (let ((?x15148 (* ?x14982 l_0_9_41)))
 (let ((?x15235 (* ?x14982 l_0_9_34)))
 (let ((?x15144 (* 4.0 l_0_9_16)))
 (let ((?x15145 (* ?x15144 l_0_9_26)))
 (let ((?x15232 (* ?x15144 l_0_9_19)))
 (let ((?x15601 (* 2.0 l_0_9_13)))
 (let ((?x2738 (* ?x15601 l_0_9_6)))
 (let ((?x15598 (* 2.0 l_0_9_12)))
 (let ((?x12834 (* ?x15598 l_0_9_5)))
 (let ((?x16378 (- (* (* (- 2.0) l_0_9_101) l_0_9_94) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x16382 (- (- ?x16378 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_109) l_0_9_116))))
 (let ((?x16386 (- (+ ?x16382 (* (* 2.0 l_0_9_11) l_0_9_4)) (* (* 2.0 l_0_9_110) l_0_9_117))))
 (let ((?x16391 (+ (+ (+ (- ?x16386 (* (* 2.0 l_0_9_111) l_0_9_118)) ?x12834) ?x2738) ?x15232)))
 (let ((?x16402 (- (+ (+ (+ (+ (- (- ?x16391 ?x15145) ?x15235) ?x15148) ?x16395) ?x16397) ?x16399) (* (* 2.0 l_0_9_79) l_0_9_86))))
 (let ((?x16406 (- (- ?x16402 (* (* 2.0 l_0_9_80) l_0_9_87)) (* (* 2.0 l_0_9_81) l_0_9_88))))
 (= ?x16406 0.0))))))))))))))))))))))))
(assert
 (let ((?x16462 (* l_0_9_75 l_0_9_75)))
 (let ((?x16460 (* l_0_9_74 l_0_9_74)))
 (let ((?x16458 (* l_0_9_73 l_0_9_73)))
 (let ((?x16456 (* l_0_9_72 l_0_9_72)))
 (let ((?x16454 (* l_0_9_71 l_0_9_71)))
 (let ((?x15163 (* l_0_9_60 l_0_9_60)))
 (let ((?x15160 (* l_0_9_59 l_0_9_59)))
 (let ((?x15157 (* l_0_9_58 l_0_9_58)))
 (let ((?x15154 (* l_0_9_57 l_0_9_57)))
 (let ((?x15151 (* l_0_9_56 l_0_9_56)))
 (let ((?x16219 (* (* 4.0 l_0_9_45) l_0_9_45)))
 (let ((?x16216 (* (* 4.0 l_0_9_44) l_0_9_44)))
 (let ((?x16213 (* (* 4.0 l_0_9_43) l_0_9_43)))
 (let ((?x16210 (* (* 4.0 l_0_9_42) l_0_9_42)))
 (let ((?x16207 (* (* 4.0 l_0_9_41) l_0_9_41)))
 (let ((?x15712 (* 4.0 l_0_9_33)))
 (let ((?x16442 (* ?x15712 l_0_9_42)))
 (let ((?x15706 (* 4.0 l_0_9_32)))
 (let ((?x16440 (* ?x15706 l_0_9_41)))
 (let ((?x15073 (* 2.0 l_0_9_31)))
 (let ((?x16438 (* ?x15073 l_0_9_32)))
 (let ((?x16198 (* l_0_9_30 l_0_9_30)))
 (let ((?x16199 (* 4.0 ?x16198)))
 (let ((?x16195 (* l_0_9_29 l_0_9_29)))
 (let ((?x16196 (* 4.0 ?x16195)))
 (let ((?x16192 (* l_0_9_28 l_0_9_28)))
 (let ((?x16193 (* 4.0 ?x16192)))
 (let ((?x16189 (* l_0_9_27 l_0_9_27)))
 (let ((?x16190 (* 4.0 ?x16189)))
 (let ((?x16186 (* l_0_9_26 l_0_9_26)))
 (let ((?x16187 (* 4.0 ?x16186)))
 (let ((?x15756 (* 4.0 l_0_9_18)))
 (let ((?x16431 (* ?x15756 l_0_9_27)))
 (let ((?x15751 (* 4.0 l_0_9_17)))
 (let ((?x16429 (* ?x15751 l_0_9_26)))
 (let ((?x16434 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_16) l_0_9_17) ?x16429) ?x16431) ?x16187) ?x16190)))
 (let ((?x16444 (- (- (- (+ (+ (+ (+ ?x16434 ?x16193) ?x16196) ?x16199) ?x16438) ?x16440) ?x16442) ?x16207)))
 (let ((?x16451 (- (- (- (- (- (- (- ?x16444 ?x16210) ?x16213) ?x16216) ?x16219) ?x15151) ?x15154) ?x15157)))
 (let ((?x16463 (+ (+ (+ (+ (+ (- (- ?x16451 ?x15160) ?x15163) ?x16454) ?x16456) ?x16458) ?x16460) ?x16462)))
 (= ?x16463 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10243 (* l_0_9_45 l_0_9_45)))
 (let ((?x16490 (* 2.0 ?x10243)))
 (let ((?x5838 (* l_0_9_44 l_0_9_44)))
 (let ((?x16488 (* 2.0 ?x5838)))
 (let ((?x8733 (* l_0_9_43 l_0_9_43)))
 (let ((?x16486 (* 2.0 ?x8733)))
 (let ((?x12940 (* l_0_9_42 l_0_9_42)))
 (let ((?x16484 (* 2.0 ?x12940)))
 (let ((?x16235 (* l_0_9_41 l_0_9_41)))
 (let ((?x16482 (* 2.0 ?x16235)))
 (let ((?x16011 (* 4.0 l_0_9_36)))
 (let ((?x16480 (* ?x16011 l_0_9_43)))
 (let ((?x16006 (* 4.0 l_0_9_35)))
 (let ((?x16478 (* ?x16006 l_0_9_42)))
 (let ((?x16001 (* 4.0 l_0_9_34)))
 (let ((?x16476 (* ?x16001 l_0_9_41)))
 (let ((?x15073 (* 2.0 l_0_9_31)))
 (let ((?x16474 (* ?x15073 l_0_9_34)))
 (let ((?x15993 (* 4.0 l_0_9_21)))
 (let ((?x13500 (* ?x15993 l_0_9_28)))
 (let ((?x15987 (* 4.0 l_0_9_20)))
 (let ((?x13499 (* ?x15987 l_0_9_27)))
 (let ((?x2590 (* 4.0 l_0_9_19)))
 (let ((?x13510 (* ?x2590 l_0_9_26)))
 (let ((?x13443 (- (+ (+ (+ (* (* (- 2.0) l_0_9_16) l_0_9_19) ?x13510) ?x13499) ?x13500) (* (* 2.0 l_0_9_26) l_0_9_26))))
 (let ((?x3594 (- (- ?x13443 (* (* 2.0 l_0_9_27) l_0_9_27)) (* (* 2.0 l_0_9_28) l_0_9_28))))
 (let ((?x16473 (- (- ?x3594 (* (* 2.0 l_0_9_29) l_0_9_29)) (* (* 2.0 l_0_9_30) l_0_9_30))))
 (let ((?x16487 (+ (+ (+ (- (- (- (+ ?x16473 ?x16474) ?x16476) ?x16478) ?x16480) ?x16482) ?x16484) ?x16486)))
 (= (+ (+ ?x16487 ?x16488) ?x16490) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x15073 (* 2.0 l_0_9_31)))
 (let ((?x16528 (* ?x15073 l_0_9_41)))
 (let ((?x16198 (* l_0_9_30 l_0_9_30)))
 (let ((?x13605 (* 2.0 ?x16198)))
 (let ((?x16195 (* l_0_9_29 l_0_9_29)))
 (let ((?x7591 (* 2.0 ?x16195)))
 (let ((?x16192 (* l_0_9_28 l_0_9_28)))
 (let ((?x10409 (* 2.0 ?x16192)))
 (let ((?x16189 (* l_0_9_27 l_0_9_27)))
 (let ((?x16498 (* 2.0 ?x16189)))
 (let ((?x16186 (* l_0_9_26 l_0_9_26)))
 (let ((?x13597 (* 2.0 ?x16186)))
 (let ((?x16526 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_16) l_0_9_26) ?x13597) ?x16498) ?x10409) ?x7591)))
 (let ((?x16535 (- (- (+ (+ ?x16526 ?x13605) ?x16528) (* (* 2.0 l_0_9_41) l_0_9_41)) (* (* 2.0 l_0_9_42) l_0_9_42))))
 (let ((?x16541 (- (- ?x16535 (* (* 2.0 l_0_9_43) l_0_9_43)) (* (* 2.0 l_0_9_44) l_0_9_44))))
 (= (- ?x16541 (* (* 2.0 l_0_9_45) l_0_9_45)) 0.0)))))))))))))))))
(assert
 (let ((?x9557 (* l_0_9_33 l_0_9_33)))
 (let ((?x9546 (* l_0_9_32 l_0_9_32)))
 (let ((?x16561 (+ (+ (- (* (- l_0_9_17) l_0_9_17) (* l_0_9_18 l_0_9_18)) ?x9546) ?x9557)))
 (= ?x16561 0.0)))))
(assert
 (let ((?x16575 (* 2.0 l_0_9_33)))
 (let ((?x16576 (* ?x16575 l_0_9_35)))
 (let ((?x16572 (* 2.0 l_0_9_32)))
 (let ((?x16573 (* ?x16572 l_0_9_34)))
 (let ((?x16569 (* 2.0 l_0_9_18)))
 (let ((?x16570 (* ?x16569 l_0_9_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_19) ?x16570) ?x16573) ?x16576) 0.0))))))))
(assert
 (let ((?x16575 (* 2.0 l_0_9_33)))
 (let ((?x16594 (* ?x16575 l_0_9_38)))
 (let ((?x16572 (* 2.0 l_0_9_32)))
 (let ((?x16592 (* ?x16572 l_0_9_37)))
 (let ((?x16569 (* 2.0 l_0_9_18)))
 (let ((?x16590 (* ?x16569 l_0_9_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_22) ?x16590) ?x16592) ?x16594) 0.0))))))))
(assert
 (let ((?x16575 (* 2.0 l_0_9_33)))
 (let ((?x16609 (* ?x16575 l_0_9_42)))
 (let ((?x16572 (* 2.0 l_0_9_32)))
 (let ((?x16607 (* ?x16572 l_0_9_41)))
 (let ((?x16569 (* 2.0 l_0_9_18)))
 (let ((?x16605 (* ?x16569 l_0_9_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_26) ?x16605) ?x16607) ?x16609) 0.0))))))))
(assert
 (let ((?x10243 (* l_0_9_45 l_0_9_45)))
 (let ((?x5838 (* l_0_9_44 l_0_9_44)))
 (let ((?x8733 (* l_0_9_43 l_0_9_43)))
 (let ((?x12940 (* l_0_9_42 l_0_9_42)))
 (let ((?x16235 (* l_0_9_41 l_0_9_41)))
 (let ((?x16038 (* l_0_9_36 l_0_9_36)))
 (let ((?x6898 (* l_0_9_35 l_0_9_35)))
 (let ((?x2611 (* l_0_9_34 l_0_9_34)))
 (let ((?x16198 (* l_0_9_30 l_0_9_30)))
 (let ((?x16195 (* l_0_9_29 l_0_9_29)))
 (let ((?x16192 (* l_0_9_28 l_0_9_28)))
 (let ((?x16189 (* l_0_9_27 l_0_9_27)))
 (let ((?x16186 (* l_0_9_26 l_0_9_26)))
 (let ((?x15996 (* l_0_9_21 l_0_9_21)))
 (let ((?x16627 (+ (- (- (* (- l_0_9_19) l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x15996) ?x16186)))
 (let ((?x16634 (+ (+ (+ (+ (+ (+ (+ ?x16627 ?x16189) ?x16192) ?x16195) ?x16198) ?x2611) ?x6898) ?x16038)))
 (= (- (- (- (- (- ?x16634 ?x16235) ?x12940) ?x8733) ?x5838) ?x10243) 0.0))))))))))))))))))
(assert
 (let ((?x16664 (* 2.0 l_0_9_36)))
 (let ((?x16665 (* ?x16664 l_0_9_39)))
 (let ((?x16661 (* 2.0 l_0_9_35)))
 (let ((?x16662 (* ?x16661 l_0_9_38)))
 (let ((?x16658 (* 2.0 l_0_9_34)))
 (let ((?x16659 (* ?x16658 l_0_9_37)))
 (let ((?x2690 (* 2.0 l_0_9_21)))
 (let ((?x7718 (* ?x2690 l_0_9_24)))
 (let ((?x13741 (* 2.0 l_0_9_20)))
 (let ((?x7768 (* ?x13741 l_0_9_23)))
 (let ((?x16663 (+ (+ (- (- (* (* (- 2.0) l_0_9_19) l_0_9_22) ?x7768) ?x7718) ?x16659) ?x16662)))
 (= (+ ?x16663 ?x16665) 0.0)))))))))))))
(assert
 (let ((?x16664 (* 2.0 l_0_9_36)))
 (let ((?x16690 (* ?x16664 l_0_9_43)))
 (let ((?x16661 (* 2.0 l_0_9_35)))
 (let ((?x16688 (* ?x16661 l_0_9_42)))
 (let ((?x16658 (* 2.0 l_0_9_34)))
 (let ((?x16686 (* ?x16658 l_0_9_41)))
 (let ((?x2690 (* 2.0 l_0_9_21)))
 (let ((?x13747 (* ?x2690 l_0_9_28)))
 (let ((?x13741 (* 2.0 l_0_9_20)))
 (let ((?x13749 (* ?x13741 l_0_9_27)))
 (let ((?x16689 (+ (+ (- (- (* (* (- 2.0) l_0_9_19) l_0_9_26) ?x13749) ?x13747) ?x16686) ?x16688)))
 (= (+ ?x16689 ?x16690) 0.0)))))))))))))
(assert
 (let ((?x12593 (* l_0_9_40 l_0_9_40)))
 (let ((?x12558 (* l_0_9_39 l_0_9_39)))
 (let ((?x12528 (* l_0_9_38 l_0_9_38)))
 (let ((?x12502 (* l_0_9_37 l_0_9_37)))
 (let ((?x15846 (* l_0_9_25 l_0_9_25)))
 (let ((?x15843 (* l_0_9_24 l_0_9_24)))
 (let ((?x16699 (- (- (- (* (- l_0_9_22) l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x15843) ?x15846)))
 (= (+ (+ (+ (+ ?x16699 ?x12502) ?x12528) ?x12558) ?x12593) 0.0)))))))))
(assert
 (let ((?x16177 (* 2.0 l_0_9_40)))
 (let ((?x16727 (* ?x16177 l_0_9_44)))
 (let ((?x16173 (* 2.0 l_0_9_39)))
 (let ((?x16725 (* ?x16173 l_0_9_43)))
 (let ((?x16169 (* 2.0 l_0_9_38)))
 (let ((?x16723 (* ?x16169 l_0_9_42)))
 (let ((?x16165 (* 2.0 l_0_9_37)))
 (let ((?x16721 (* ?x16165 l_0_9_41)))
 (let ((?x16062 (* 2.0 l_0_9_25)))
 (let ((?x16719 (* ?x16062 l_0_9_29)))
 (let ((?x16059 (* 2.0 l_0_9_24)))
 (let ((?x16717 (* ?x16059 l_0_9_28)))
 (let ((?x16056 (* 2.0 l_0_9_23)))
 (let ((?x16715 (* ?x16056 l_0_9_27)))
 (let ((?x16722 (+ (- (- (- (* (* (- 2.0) l_0_9_22) l_0_9_26) ?x16715) ?x16717) ?x16719) ?x16721)))
 (= (+ (+ (+ ?x16722 ?x16723) ?x16725) ?x16727) 0.0)))))))))))))))))
(assert
 (let ((?x10243 (* l_0_9_45 l_0_9_45)))
 (let ((?x5838 (* l_0_9_44 l_0_9_44)))
 (let ((?x8733 (* l_0_9_43 l_0_9_43)))
 (let ((?x12940 (* l_0_9_42 l_0_9_42)))
 (let ((?x16235 (* l_0_9_41 l_0_9_41)))
 (let ((?x16198 (* l_0_9_30 l_0_9_30)))
 (let ((?x16195 (* l_0_9_29 l_0_9_29)))
 (let ((?x16192 (* l_0_9_28 l_0_9_28)))
 (let ((?x4044 (- (- (- (* (- l_0_9_26) l_0_9_26) (* l_0_9_27 l_0_9_27)) ?x16192) ?x16195)))
 (= (+ (+ (+ (+ (+ (- ?x4044 ?x16198) ?x16235) ?x12940) ?x8733) ?x5838) ?x10243) 0.0)))))))))))
(assert
 (let ((?x16790 (* l_0_9_66 l_0_9_66)))
 (let ((?x16788 (* l_0_9_65 l_0_9_65)))
 (let ((?x16786 (* l_0_9_64 l_0_9_64)))
 (let ((?x15250 (* l_0_9_51 l_0_9_51)))
 (let ((?x15247 (* l_0_9_50 l_0_9_50)))
 (let ((?x15241 (* l_0_9_49 l_0_9_49)))
 (let ((?x16011 (* 4.0 l_0_9_36)))
 (let ((?x16014 (* ?x16011 l_0_9_36)))
 (let ((?x16006 (* 4.0 l_0_9_35)))
 (let ((?x16009 (* ?x16006 l_0_9_35)))
 (let ((?x16001 (* 4.0 l_0_9_34)))
 (let ((?x16004 (* ?x16001 l_0_9_34)))
 (let ((?x15712 (* 4.0 l_0_9_33)))
 (let ((?x16778 (* ?x15712 l_0_9_35)))
 (let ((?x15706 (* 4.0 l_0_9_32)))
 (let ((?x16776 (* ?x15706 l_0_9_34)))
 (let ((?x15073 (* 2.0 l_0_9_31)))
 (let ((?x16438 (* ?x15073 l_0_9_32)))
 (let ((?x15996 (* l_0_9_21 l_0_9_21)))
 (let ((?x15997 (* 4.0 ?x15996)))
 (let ((?x15990 (* l_0_9_20 l_0_9_20)))
 (let ((?x15991 (* 4.0 ?x15990)))
 (let ((?x15971 (* l_0_9_19 l_0_9_19)))
 (let ((?x15985 (* 4.0 ?x15971)))
 (let ((?x15756 (* 4.0 l_0_9_18)))
 (let ((?x16770 (* ?x15756 l_0_9_20)))
 (let ((?x15751 (* 4.0 l_0_9_17)))
 (let ((?x16768 (* ?x15751 l_0_9_19)))
 (let ((?x16773 (+ (+ (- (- (* (* 2.0 l_0_9_16) l_0_9_17) ?x16768) ?x16770) ?x15985) ?x15991)))
 (let ((?x16782 (- (- (- (+ (+ (- (+ ?x16773 ?x15997) ?x16438) ?x16776) ?x16778) ?x16004) ?x16009) ?x16014)))
 (= (+ (+ (+ (- (- (- ?x16782 ?x15241) ?x15247) ?x15250) ?x16786) ?x16788) ?x16790) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x16038 (* l_0_9_36 l_0_9_36)))
 (let ((?x16824 (* 2.0 ?x16038)))
 (let ((?x6898 (* l_0_9_35 l_0_9_35)))
 (let ((?x16822 (* 2.0 ?x6898)))
 (let ((?x2611 (* l_0_9_34 l_0_9_34)))
 (let ((?x16820 (* 2.0 ?x2611)))
 (let ((?x15073 (* 2.0 l_0_9_31)))
 (let ((?x16474 (* ?x15073 l_0_9_34)))
 (let ((?x16814 (- (* (* 2.0 l_0_9_16) l_0_9_19) (* (* 2.0 l_0_9_19) l_0_9_19))))
 (let ((?x16818 (- (- ?x16814 (* (* 2.0 l_0_9_20) l_0_9_20)) (* (* 2.0 l_0_9_21) l_0_9_21))))
 (= (+ (+ (+ (- ?x16818 ?x16474) ?x16820) ?x16822) ?x16824) 0.0))))))))))))
(assert
 (let ((?x16011 (* 4.0 l_0_9_36)))
 (let ((?x16480 (* ?x16011 l_0_9_43)))
 (let ((?x16006 (* 4.0 l_0_9_35)))
 (let ((?x16478 (* ?x16006 l_0_9_42)))
 (let ((?x16001 (* 4.0 l_0_9_34)))
 (let ((?x16476 (* ?x16001 l_0_9_41)))
 (let ((?x15073 (* 2.0 l_0_9_31)))
 (let ((?x16528 (* ?x15073 l_0_9_41)))
 (let ((?x15996 (* l_0_9_21 l_0_9_21)))
 (let ((?x4122 (* 2.0 ?x15996)))
 (let ((?x15993 (* 4.0 l_0_9_21)))
 (let ((?x13500 (* ?x15993 l_0_9_28)))
 (let ((?x15990 (* l_0_9_20 l_0_9_20)))
 (let ((?x16833 (* 2.0 ?x15990)))
 (let ((?x15987 (* 4.0 l_0_9_20)))
 (let ((?x13499 (* ?x15987 l_0_9_27)))
 (let ((?x15971 (* l_0_9_19 l_0_9_19)))
 (let ((?x16828 (* 2.0 ?x15971)))
 (let ((?x2590 (* 4.0 l_0_9_19)))
 (let ((?x13510 (* ?x2590 l_0_9_26)))
 (let ((?x16847 (+ (- (+ (- (* (* 2.0 l_0_9_16) l_0_9_26) ?x13510) ?x16828) ?x13499) ?x16833)))
 (let ((?x16853 (- (+ (- (+ (- ?x16847 ?x13500) ?x4122) ?x16528) ?x16476) (* (* 2.0 l_0_9_34) l_0_9_34))))
 (let ((?x16859 (- (+ (- (+ ?x16853 ?x16478) (* (* 2.0 l_0_9_35) l_0_9_35)) ?x16480) (* (* 2.0 l_0_9_36) l_0_9_36))))
 (= ?x16859 0.0)))))))))))))))))))))))))
(assert
 (let ((?x9557 (* l_0_9_33 l_0_9_33)))
 (let ((?x9546 (* l_0_9_32 l_0_9_32)))
 (let ((?x15696 (* l_0_9_18 l_0_9_18)))
 (let ((?x1532 (* l_0_9_17 l_0_9_17)))
 (let ((?x16876 (+ ?x1532 ?x15696)))
 (= (- (- ?x16876 ?x9546) ?x9557) 0.0)))))))
(assert
 (let ((?x16575 (* 2.0 l_0_9_33)))
 (let ((?x16576 (* ?x16575 l_0_9_35)))
 (let ((?x16572 (* 2.0 l_0_9_32)))
 (let ((?x16573 (* ?x16572 l_0_9_34)))
 (let ((?x16569 (* 2.0 l_0_9_18)))
 (let ((?x16570 (* ?x16569 l_0_9_20)))
 (= (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_19) ?x16570) ?x16573) ?x16576) 0.0))))))))
(assert
 (let ((?x16575 (* 2.0 l_0_9_33)))
 (let ((?x16594 (* ?x16575 l_0_9_38)))
 (let ((?x16572 (* 2.0 l_0_9_32)))
 (let ((?x16592 (* ?x16572 l_0_9_37)))
 (let ((?x16569 (* 2.0 l_0_9_18)))
 (let ((?x16590 (* ?x16569 l_0_9_23)))
 (= (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_22) ?x16590) ?x16592) ?x16594) 0.0))))))))
(assert
 (let ((?x16575 (* 2.0 l_0_9_33)))
 (let ((?x16609 (* ?x16575 l_0_9_42)))
 (let ((?x16572 (* 2.0 l_0_9_32)))
 (let ((?x16607 (* ?x16572 l_0_9_41)))
 (let ((?x16569 (* 2.0 l_0_9_18)))
 (let ((?x16605 (* ?x16569 l_0_9_27)))
 (= (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_26) ?x16605) ?x16607) ?x16609) 0.0))))))))
(assert
 (let ((?x16038 (* l_0_9_36 l_0_9_36)))
 (let ((?x6898 (* l_0_9_35 l_0_9_35)))
 (let ((?x2611 (* l_0_9_34 l_0_9_34)))
 (let ((?x15996 (* l_0_9_21 l_0_9_21)))
 (let ((?x13983 (- (+ (+ (* l_0_9_19 l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x15996) ?x2611)))
 (= (- (- ?x13983 ?x6898) ?x16038) 0.0)))))))
(assert
 (let ((?x16664 (* 2.0 l_0_9_36)))
 (let ((?x16665 (* ?x16664 l_0_9_39)))
 (let ((?x16661 (* 2.0 l_0_9_35)))
 (let ((?x16662 (* ?x16661 l_0_9_38)))
 (let ((?x16658 (* 2.0 l_0_9_34)))
 (let ((?x16659 (* ?x16658 l_0_9_37)))
 (let ((?x2690 (* 2.0 l_0_9_21)))
 (let ((?x7718 (* ?x2690 l_0_9_24)))
 (let ((?x13741 (* 2.0 l_0_9_20)))
 (let ((?x7768 (* ?x13741 l_0_9_23)))
 (let ((?x4386 (- (- (+ (+ (* (* 2.0 l_0_9_19) l_0_9_22) ?x7768) ?x7718) ?x16659) ?x16662)))
 (= (- ?x4386 ?x16665) 0.0)))))))))))))
(assert
 (let ((?x16664 (* 2.0 l_0_9_36)))
 (let ((?x16690 (* ?x16664 l_0_9_43)))
 (let ((?x16661 (* 2.0 l_0_9_35)))
 (let ((?x16688 (* ?x16661 l_0_9_42)))
 (let ((?x16658 (* 2.0 l_0_9_34)))
 (let ((?x16686 (* ?x16658 l_0_9_41)))
 (let ((?x2690 (* 2.0 l_0_9_21)))
 (let ((?x13747 (* ?x2690 l_0_9_28)))
 (let ((?x13741 (* 2.0 l_0_9_20)))
 (let ((?x13749 (* ?x13741 l_0_9_27)))
 (let ((?x16912 (- (- (+ (+ (* (* 2.0 l_0_9_19) l_0_9_26) ?x13749) ?x13747) ?x16686) ?x16688)))
 (= (- ?x16912 ?x16690) 0.0)))))))))))))
(assert
 (let ((?x12593 (* l_0_9_40 l_0_9_40)))
 (let ((?x12558 (* l_0_9_39 l_0_9_39)))
 (let ((?x12528 (* l_0_9_38 l_0_9_38)))
 (let ((?x12502 (* l_0_9_37 l_0_9_37)))
 (let ((?x15846 (* l_0_9_25 l_0_9_25)))
 (let ((?x15843 (* l_0_9_24 l_0_9_24)))
 (let ((?x14023 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x15843) ?x15846)))
 (= (- (- (- (- ?x14023 ?x12502) ?x12528) ?x12558) ?x12593) 0.0)))))))))
(assert
 (let ((?x16177 (* 2.0 l_0_9_40)))
 (let ((?x16727 (* ?x16177 l_0_9_44)))
 (let ((?x16173 (* 2.0 l_0_9_39)))
 (let ((?x16725 (* ?x16173 l_0_9_43)))
 (let ((?x16169 (* 2.0 l_0_9_38)))
 (let ((?x16723 (* ?x16169 l_0_9_42)))
 (let ((?x16165 (* 2.0 l_0_9_37)))
 (let ((?x16721 (* ?x16165 l_0_9_41)))
 (let ((?x16062 (* 2.0 l_0_9_25)))
 (let ((?x16719 (* ?x16062 l_0_9_29)))
 (let ((?x16059 (* 2.0 l_0_9_24)))
 (let ((?x16717 (* ?x16059 l_0_9_28)))
 (let ((?x16056 (* 2.0 l_0_9_23)))
 (let ((?x16715 (* ?x16056 l_0_9_27)))
 (let ((?x16937 (- (+ (+ (+ (* (* 2.0 l_0_9_22) l_0_9_26) ?x16715) ?x16717) ?x16719) ?x16721)))
 (= (- (- (- ?x16937 ?x16723) ?x16725) ?x16727) 0.0)))))))))))))))))
(assert
 (let ((?x15344 (* 2.0 l_0_9_48)))
 (let ((?x16344 (* ?x15344 l_0_9_57)))
 (let ((?x15341 (* 2.0 l_0_9_47)))
 (let ((?x16342 (* ?x15341 l_0_9_56)))
 (let ((?x15709 (* 8.0 l_0_9_33)))
 (let ((?x15900 (* ?x15709 l_0_9_42)))
 (let ((?x15703 (* 8.0 l_0_9_32)))
 (let ((?x15897 (* ?x15703 l_0_9_41)))
 (let ((?x15696 (* l_0_9_18 l_0_9_18)))
 (let ((?x16950 (* 2.0 ?x15696)))
 (let ((?x9541 (* 8.0 l_0_9_18)))
 (let ((?x15882 (* ?x9541 l_0_9_27)))
 (let ((?x1532 (* l_0_9_17 l_0_9_17)))
 (let ((?x10760 (* 2.0 ?x1532)))
 (let ((?x12357 (* 8.0 l_0_9_17)))
 (let ((?x6689 (* ?x12357 l_0_9_26)))
 (let ((?x16954 (- (- (+ (+ (+ ?x6689 ?x10760) ?x15882) ?x16950) ?x15897) (* (* 2.0 l_0_9_32) l_0_9_32))))
 (let ((?x16959 (- (- (- (- ?x16954 ?x15900) (* (* 2.0 l_0_9_33) l_0_9_33)) ?x16342) ?x16344)))
 (let ((?x16963 (+ (+ ?x16959 (* (* 2.0 l_0_9_62) l_0_9_71)) (* (* 2.0 l_0_9_63) l_0_9_72))))
 (= ?x16963 0.0)))))))))))))))))))))
(assert
 (let ((?x15431 (* 2.0 l_0_9_51)))
 (let ((?x16399 (* ?x15431 l_0_9_58)))
 (let ((?x15428 (* 2.0 l_0_9_50)))
 (let ((?x16397 (* ?x15428 l_0_9_57)))
 (let ((?x15422 (* 2.0 l_0_9_49)))
 (let ((?x16395 (* ?x15422 l_0_9_56)))
 (let ((?x15786 (* 8.0 l_0_9_36)))
 (let ((?x16101 (* ?x15786 l_0_9_43)))
 (let ((?x15783 (* 8.0 l_0_9_35)))
 (let ((?x16098 (* ?x15783 l_0_9_42)))
 (let ((?x15780 (* 8.0 l_0_9_34)))
 (let ((?x16095 (* ?x15780 l_0_9_41)))
 (let ((?x15712 (* 4.0 l_0_9_33)))
 (let ((?x16442 (* ?x15712 l_0_9_42)))
 (let ((?x16778 (* ?x15712 l_0_9_35)))
 (let ((?x15706 (* 4.0 l_0_9_32)))
 (let ((?x16440 (* ?x15706 l_0_9_41)))
 (let ((?x16776 (* ?x15706 l_0_9_34)))
 (let ((?x15767 (* 8.0 l_0_9_21)))
 (let ((?x6930 (* ?x15767 l_0_9_28)))
 (let ((?x15764 (* 8.0 l_0_9_20)))
 (let ((?x6912 (* ?x15764 l_0_9_27)))
 (let ((?x15759 (* 8.0 l_0_9_19)))
 (let ((?x2805 (* ?x15759 l_0_9_26)))
 (let ((?x15756 (* 4.0 l_0_9_18)))
 (let ((?x16431 (* ?x15756 l_0_9_27)))
 (let ((?x16770 (* ?x15756 l_0_9_20)))
 (let ((?x15751 (* 4.0 l_0_9_17)))
 (let ((?x16429 (* ?x15751 l_0_9_26)))
 (let ((?x16768 (* ?x15751 l_0_9_19)))
 (let ((?x16979 (- (+ (+ (+ (- (+ (- ?x16768 ?x16429) ?x16770) ?x16431) ?x2805) ?x6912) ?x6930) ?x16776)))
 (let ((?x16986 (- (- (- (- (+ (- (+ ?x16979 ?x16440) ?x16778) ?x16442) ?x16095) ?x16098) ?x16101) ?x16395)))
 (let ((?x16992 (+ (+ (- (- ?x16986 ?x16397) ?x16399) (* (* 2.0 l_0_9_64) l_0_9_71)) (* (* 2.0 l_0_9_65) l_0_9_72))))
 (= (+ ?x16992 (* (* 2.0 l_0_9_66) l_0_9_73)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15344 (* 2.0 l_0_9_48)))
 (let ((?x16312 (* ?x15344 l_0_9_50)))
 (let ((?x15341 (* 2.0 l_0_9_47)))
 (let ((?x16310 (* ?x15341 l_0_9_49)))
 (let ((?x9557 (* l_0_9_33 l_0_9_33)))
 (let ((?x10791 (* 2.0 ?x9557)))
 (let ((?x15709 (* 8.0 l_0_9_33)))
 (let ((?x15776 (* ?x15709 l_0_9_35)))
 (let ((?x9546 (* l_0_9_32 l_0_9_32)))
 (let ((?x16965 (* 2.0 ?x9546)))
 (let ((?x15703 (* 8.0 l_0_9_32)))
 (let ((?x15772 (* ?x15703 l_0_9_34)))
 (let ((?x9541 (* 8.0 l_0_9_18)))
 (let ((?x15754 (* ?x9541 l_0_9_20)))
 (let ((?x12357 (* 8.0 l_0_9_17)))
 (let ((?x15750 (* ?x12357 l_0_9_19)))
 (let ((?x17010 (- (+ (- ?x15750 (* (* 2.0 l_0_9_17) l_0_9_17)) ?x15754) (* (* 2.0 l_0_9_18) l_0_9_18))))
 (let ((?x17018 (+ (- (- (+ (- (+ (- ?x17010 ?x15772) ?x16965) ?x15776) ?x10791) ?x16310) ?x16312) (* (* 2.0 l_0_9_62) l_0_9_64))))
 (= (+ ?x17018 (* (* 2.0 l_0_9_63) l_0_9_65)) 0.0))))))))))))))))))))
(assert
 (let ((?x17043 (* l_0_9_63 l_0_9_63)))
 (let ((?x17041 (* l_0_9_62 l_0_9_62)))
 (let ((?x16266 (* l_0_9_48 l_0_9_48)))
 (let ((?x16263 (* l_0_9_47 l_0_9_47)))
 (let ((?x15712 (* 4.0 l_0_9_33)))
 (let ((?x15713 (* ?x15712 l_0_9_33)))
 (let ((?x15706 (* 4.0 l_0_9_32)))
 (let ((?x15707 (* ?x15706 l_0_9_32)))
 (let ((?x15696 (* l_0_9_18 l_0_9_18)))
 (let ((?x15697 (* 4.0 ?x15696)))
 (let ((?x1532 (* l_0_9_17 l_0_9_17)))
 (let ((?x12316 (* 4.0 ?x1532)))
 (let ((?x10949 (+ ?x12316 ?x15697)))
 (= (+ (+ (- (- (- (- ?x10949 ?x15707) ?x15713) ?x16263) ?x16266) ?x17041) ?x17043) 0.0)))))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(check-sat)
(get-model)