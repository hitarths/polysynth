(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_117 () Real)
(declare-fun l_0_7_116 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_114 () Real)
(declare-fun l_0_7_113 () Real)
(declare-fun l_0_7_118 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_115 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_119 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_120 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_141 () Real)
(declare-fun l_0_9_140 () Real)
(declare-fun l_0_9_139 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_138 () Real)
(declare-fun l_0_9_137 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun _a_2_ () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_147 () Real)
(declare-fun l_0_9_146 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_143 () Real)
(declare-fun l_0_9_142 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_136 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_144 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_148 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_145 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_149 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_150 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_153 () Real)
(declare-fun l_0_10_152 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_162 () Real)
(declare-fun l_0_10_161 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_158 () Real)
(declare-fun l_0_10_157 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_156 () Real)
(declare-fun l_0_10_155 () Real)
(declare-fun l_0_10_154 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_151 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_159 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_163 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_160 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_164 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_165 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_105 () Real)
(assert
 (= (- 1.0 l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (- (- (- (- (- l_0_2_2) l_0_2_3) l_0_2_4) l_0_2_5) l_0_2_6) 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (let ((?x907 (- (- (- (- (- (- l_0_3_2) l_0_3_3) l_0_3_4) l_0_3_5) l_0_3_6) l_0_3_7)))
 (= (- ?x907 l_0_3_8) 0.0)))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_7 0.0))
(assert
 (>= l_0_3_8 0.0))
(assert
 (let ((?x947 (- (- (- (- (- (- l_0_4_10) l_0_4_2) l_0_4_3) l_0_4_4) l_0_4_5) l_0_4_6)))
 (= (- (- (- ?x947 l_0_4_7) l_0_4_8) l_0_4_9) 0.0)))
(assert
 (= (- l_0_4_1) 0.0))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_2 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_4 0.0))
(assert
 (>= l_0_4_5 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_7 0.0))
(assert
 (>= l_0_4_8 0.0))
(assert
 (>= l_0_4_9 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (let ((?x1012 (* l_0_5_78 l_0_5_78)))
 (let ((?x1010 (* l_0_5_77 l_0_5_77)))
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1008 (* ?x1007 l_0_5_62)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1005 (* ?x1004 l_0_5_47)))
 (let ((?x1001 (* 2.0 l_0_5_31)))
 (let ((?x1002 (* ?x1001 l_0_5_32)))
 (let ((?x998 (* l_0_5_3 l_0_5_3)))
 (let ((?x999 (- (- (* (* (- 2.0) l_0_5_16) l_0_5_17) (* l_0_5_2 l_0_5_2)) ?x998)))
 (let ((?x1016 (- (+ (+ (+ (- (+ ?x999 ?x1002) ?x1005) ?x1008) ?x1010) ?x1012) (* (* 2.0 l_0_5_91) l_0_5_92))))
 (= (+ ?x1016 1.0) 0.0)))))))))))))
(assert
 (let ((?x1127 (* l_0_5_96 l_0_5_96)))
 (let ((?x1125 (* l_0_5_95 l_0_5_95)))
 (let ((?x1123 (* l_0_5_94 l_0_5_94)))
 (let ((?x1112 (* l_0_5_63 l_0_5_63)))
 (let ((?x1107 (* l_0_5_62 l_0_5_62)))
 (let ((?x1093 (* l_0_5_48 l_0_5_48)))
 (let ((?x1088 (* l_0_5_47 l_0_5_47)))
 (let ((?x998 (* l_0_5_3 l_0_5_3)))
 (let ((?x996 (* l_0_5_2 l_0_5_2)))
 (let ((?x1058 (- (* (* (- 4.0) l_0_5_17) l_0_5_19) (* (* 4.0 l_0_5_18) l_0_5_20))))
 (let ((?x1065 (- (+ (- ?x1058 (* (* 1.0 l_0_5_19) l_0_5_19)) ?x996) (* (* 1.0 l_0_5_20) l_0_5_20))))
 (let ((?x1072 (+ (+ (- ?x1065 (* (* 1.0 l_0_5_21) l_0_5_21)) ?x998) (* (* 4.0 l_0_5_32) l_0_5_34))))
 (let ((?x1078 (+ (+ ?x1072 (* (* 4.0 l_0_5_33) l_0_5_35)) (* 1.0 (* l_0_5_34 l_0_5_34)))))
 (let ((?x1084 (+ (+ ?x1078 (* 1.0 (* l_0_5_35 l_0_5_35))) (* 1.0 (* l_0_5_36 l_0_5_36)))))
 (let ((?x1092 (- (- (- ?x1084 (* (* 4.0 l_0_5_47) l_0_5_49)) ?x1088) (* (* 4.0 l_0_5_48) l_0_5_50))))
 (let ((?x1100 (- (- (- ?x1092 ?x1093) (* (* 1.0 l_0_5_49) l_0_5_49)) (* (* 1.0 l_0_5_50) l_0_5_50))))
 (let ((?x1106 (+ (- ?x1100 (* (* 1.0 l_0_5_51) l_0_5_51)) (* (* 4.0 l_0_5_62) l_0_5_64))))
 (let ((?x1116 (+ (+ (+ (+ ?x1106 ?x1107) (* (* 4.0 l_0_5_63) l_0_5_65)) ?x1112) (* 1.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x1122 (+ (+ ?x1116 (* 1.0 (* l_0_5_65 l_0_5_65))) (* 1.0 (* l_0_5_66 l_0_5_66)))))
 (= (- (- (- (- ?x1122 ?x1123) ?x1125) ?x1127) 1.0) 0.0)))))))))))))))))))))
(assert
 (= (+ (* (- l_0_5_1) l_0_5_1) (* l_0_5_76 l_0_5_76)) 0.0))
(assert
 (let ((?x1232 (* l_0_5_91 l_0_5_91)))
 (let ((?x1229 (* 2.0 l_0_5_76)))
 (let ((?x1230 (* ?x1229 l_0_5_77)))
 (let ((?x1219 (- (* (* (- 2.0) l_0_5_1) l_0_5_2) (* (* 1.0 l_0_5_16) l_0_5_16))))
 (let ((?x1225 (- (+ ?x1219 (* 1.0 (* l_0_5_31 l_0_5_31))) (* (* 1.0 l_0_5_46) l_0_5_46))))
 (= (- (+ (+ ?x1225 (* 1.0 (* l_0_5_61 l_0_5_61))) ?x1230) ?x1232) 0.0)))))))
(assert
 (let ((?x1229 (* 2.0 l_0_5_76)))
 (let ((?x1262 (* ?x1229 l_0_5_79)))
 (let ((?x1226 (* l_0_5_61 l_0_5_61)))
 (let ((?x1260 (* 2.0 ?x1226)))
 (let ((?x1220 (* l_0_5_31 l_0_5_31)))
 (let ((?x1256 (* 2.0 ?x1220)))
 (let ((?x1255 (- (* (* (- 2.0) l_0_5_1) l_0_5_4) (* (* 2.0 l_0_5_16) l_0_5_16))))
 (let ((?x1263 (+ (+ (- (+ ?x1255 ?x1256) (* (* 2.0 l_0_5_46) l_0_5_46)) ?x1260) ?x1262)))
 (= ?x1263 0.0))))))))))
(assert
 (let ((?x1207 (* l_0_5_76 l_0_5_76)))
 (let ((?x1229 (* 2.0 l_0_5_76)))
 (let ((?x1285 (* ?x1229 l_0_5_82)))
 (let ((?x1226 (* l_0_5_61 l_0_5_61)))
 (let ((?x1284 (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) (* l_0_5_46 l_0_5_46)) ?x1226)))
 (= (- (+ ?x1284 ?x1285) ?x1207) 0.0)))))))
(assert
 (let ((?x1229 (* 2.0 l_0_5_76)))
 (let ((?x1308 (* ?x1229 l_0_5_86)))
 (let ((?x1220 (* l_0_5_31 l_0_5_31)))
 (let ((?x1307 (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) (* l_0_5_16 l_0_5_16)) ?x1220)))
 (= (+ ?x1307 ?x1308) 0.0))))))
(assert
 (let ((?x1350 (* 2.0 l_0_5_78)))
 (let ((?x1351 (* ?x1350 l_0_5_80)))
 (let ((?x1347 (* 2.0 l_0_5_77)))
 (let ((?x1348 (* ?x1347 l_0_5_79)))
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1345 (* ?x1007 l_0_5_64)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1340 (* ?x1004 l_0_5_49)))
 (let ((?x1001 (* 2.0 l_0_5_31)))
 (let ((?x1335 (* ?x1001 l_0_5_34)))
 (let ((?x1329 (* 2.0 l_0_5_3)))
 (let ((?x1330 (* ?x1329 l_0_5_5)))
 (let ((?x1326 (* 2.0 l_0_5_2)))
 (let ((?x1327 (* ?x1326 l_0_5_4)))
 (let ((?x1253 (* 2.0 l_0_5_16)))
 (let ((?x1324 (* ?x1253 l_0_5_19)))
 (let ((?x1334 (+ (- (- (- (* (* (- 4.0) l_0_5_16) l_0_5_17) ?x1324) ?x1327) ?x1330) (* (* 4.0 l_0_5_31) l_0_5_32))))
 (let ((?x1344 (+ (- (- (+ ?x1334 ?x1335) (* (* 4.0 l_0_5_46) l_0_5_47)) ?x1340) (* (* 4.0 l_0_5_61) l_0_5_62))))
 (let ((?x1354 (- (+ (+ (+ ?x1344 ?x1345) ?x1348) ?x1351) (* (* 2.0 l_0_5_91) l_0_5_94))))
 (= ?x1354 0.0)))))))))))))))))))))
(assert
 (let ((?x1350 (* 2.0 l_0_5_78)))
 (let ((?x1429 (* ?x1350 l_0_5_83)))
 (let ((?x1347 (* 2.0 l_0_5_77)))
 (let ((?x1427 (* ?x1347 l_0_5_82)))
 (let ((?x1229 (* 2.0 l_0_5_76)))
 (let ((?x1230 (* ?x1229 l_0_5_77)))
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1424 (* ?x1007 l_0_5_67)))
 (let ((?x1008 (* ?x1007 l_0_5_62)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1421 (* ?x1004 l_0_5_52)))
 (let ((?x1005 (* ?x1004 l_0_5_47)))
 (let ((?x1001 (* 2.0 l_0_5_31)))
 (let ((?x1418 (* ?x1001 l_0_5_37)))
 (let ((?x1329 (* 2.0 l_0_5_3)))
 (let ((?x1416 (* ?x1329 l_0_5_8)))
 (let ((?x1326 (* 2.0 l_0_5_2)))
 (let ((?x1414 (* ?x1326 l_0_5_7)))
 (let ((?x1420 (+ (+ (- (- (* (* (- 2.0) l_0_5_16) l_0_5_22) ?x1414) ?x1416) ?x1418) ?x1005)))
 (let ((?x1432 (- (+ (+ (- (+ (- (- ?x1420 ?x1421) ?x1008) ?x1424) ?x1230) ?x1427) ?x1429) (* (* 2.0 l_0_5_91) l_0_5_97))))
 (= ?x1432 0.0))))))))))))))))))))))
(assert
 (let ((?x1350 (* 2.0 l_0_5_78)))
 (let ((?x1500 (* ?x1350 l_0_5_87)))
 (let ((?x1347 (* 2.0 l_0_5_77)))
 (let ((?x1498 (* ?x1347 l_0_5_86)))
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1496 (* ?x1007 l_0_5_71)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1494 (* ?x1004 l_0_5_56)))
 (let ((?x1001 (* 2.0 l_0_5_31)))
 (let ((?x1492 (* ?x1001 l_0_5_41)))
 (let ((?x1002 (* ?x1001 l_0_5_32)))
 (let ((?x1253 (* 2.0 l_0_5_16)))
 (let ((?x1489 (* ?x1253 l_0_5_26)))
 (let ((?x1484 (* 2.0 l_0_5_12)))
 (let ((?x1485 (* ?x1484 l_0_5_3)))
 (let ((?x1481 (* 2.0 l_0_5_11)))
 (let ((?x1482 (* ?x1481 l_0_5_2)))
 (let ((?x1488 (+ (- (- (* (* (- 2.0) l_0_5_101) l_0_5_91) ?x1482) ?x1485) (* ?x1253 l_0_5_17))))
 (let ((?x1501 (+ (+ (+ (- (+ (- (- ?x1488 ?x1489) ?x1002) ?x1492) ?x1494) ?x1496) ?x1498) ?x1500)))
 (= ?x1501 0.0)))))))))))))))))))))
(assert
 (let ((?x1567 (* l_0_5_81 l_0_5_81)))
 (let ((?x1565 (* l_0_5_80 l_0_5_80)))
 (let ((?x1563 (* l_0_5_79 l_0_5_79)))
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1008 (* ?x1007 l_0_5_62)))
 (let ((?x1558 (* l_0_5_6 l_0_5_6)))
 (let ((?x1556 (* l_0_5_5 l_0_5_5)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1005 (* ?x1004 l_0_5_47)))
 (let ((?x1551 (* l_0_5_4 l_0_5_4)))
 (let ((?x1548 (- (* (* 2.0 l_0_5_1) l_0_5_2) (* (* 4.0 l_0_5_16) l_0_5_19))))
 (let ((?x1555 (- (- (- (+ ?x1548 (* (* 4.0 l_0_5_31) l_0_5_34)) ?x1551) ?x1005) (* (* 4.0 l_0_5_46) l_0_5_49))))
 (let ((?x1562 (+ (+ (- (- ?x1555 ?x1556) ?x1558) ?x1008) (* (* 4.0 l_0_5_61) l_0_5_64))))
 (= (+ (+ (+ ?x1562 ?x1563) ?x1565) ?x1567) 0.0)))))))))))))))
(assert
 (let ((?x1626 (* 2.0 l_0_5_81)))
 (let ((?x1627 (* ?x1626 l_0_5_84)))
 (let ((?x1623 (* 2.0 l_0_5_80)))
 (let ((?x1624 (* ?x1623 l_0_5_83)))
 (let ((?x1620 (* 2.0 l_0_5_79)))
 (let ((?x1621 (* ?x1620 l_0_5_82)))
 (let ((?x1229 (* 2.0 l_0_5_76)))
 (let ((?x1262 (* ?x1229 l_0_5_79)))
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1345 (* ?x1007 l_0_5_64)))
 (let ((?x1614 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x1611 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1340 (* ?x1004 l_0_5_49)))
 (let ((?x1605 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x1603 (+ (* (* (- 4.0) l_0_5_16) l_0_5_22) (* (* 4.0 l_0_5_31) l_0_5_37))))
 (let ((?x1612 (- (- (+ (- ?x1603 ?x1605) ?x1340) (* (* 4.0 l_0_5_46) l_0_5_52)) ?x1611)))
 (let ((?x1619 (- (+ (- (- ?x1612 ?x1614) ?x1345) (* (* 4.0 l_0_5_61) l_0_5_67)) ?x1262)))
 (= (+ (+ (+ ?x1619 ?x1621) ?x1624) ?x1627) 0.0))))))))))))))))))))
(assert
 (let ((?x1626 (* 2.0 l_0_5_81)))
 (let ((?x1698 (* ?x1626 l_0_5_88)))
 (let ((?x1623 (* 2.0 l_0_5_80)))
 (let ((?x1696 (* ?x1623 l_0_5_87)))
 (let ((?x1620 (* 2.0 l_0_5_79)))
 (let ((?x1694 (* ?x1620 l_0_5_86)))
 (let ((?x1001 (* 2.0 l_0_5_31)))
 (let ((?x1335 (* ?x1001 l_0_5_34)))
 (let ((?x1253 (* 2.0 l_0_5_16)))
 (let ((?x1324 (* ?x1253 l_0_5_19)))
 (let ((?x1681 (* 2.0 l_0_5_13)))
 (let ((?x1682 (* ?x1681 l_0_5_6)))
 (let ((?x1484 (* 2.0 l_0_5_12)))
 (let ((?x1671 (* ?x1484 l_0_5_5)))
 (let ((?x1686 (- (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x1671) ?x1682) ?x1324) (* (* 4.0 l_0_5_16) l_0_5_26))))
 (let ((?x1691 (- (+ (- ?x1686 ?x1335) (* (* 4.0 l_0_5_31) l_0_5_41)) (* (* 4.0 l_0_5_46) l_0_5_56))))
 (let ((?x1699 (+ (+ (+ (+ ?x1691 (* (* 4.0 l_0_5_61) l_0_5_71)) ?x1694) ?x1696) ?x1698)))
 (= ?x1699 0.0)))))))))))))))))))
(assert
 (let ((?x1757 (* l_0_5_9 l_0_5_9)))
 (let ((?x1755 (* l_0_5_85 l_0_5_85)))
 (let ((?x1753 (* l_0_5_84 l_0_5_84)))
 (let ((?x1751 (* l_0_5_83 l_0_5_83)))
 (let ((?x1749 (* l_0_5_82 l_0_5_82)))
 (let ((?x1747 (* l_0_5_8 l_0_5_8)))
 (let ((?x1229 (* 2.0 l_0_5_76)))
 (let ((?x1285 (* ?x1229 l_0_5_82)))
 (let ((?x1744 (* l_0_5_7 l_0_5_7)))
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1424 (* ?x1007 l_0_5_67)))
 (let ((?x1743 (- (+ (* (- l_0_5_10) l_0_5_10) (* (* 2.0 l_0_5_46) l_0_5_52)) ?x1424)))
 (let ((?x1756 (+ (+ (+ (+ (- (- (- ?x1743 ?x1744) ?x1285) ?x1747) ?x1749) ?x1751) ?x1753) ?x1755)))
 (= (- ?x1756 ?x1757) 0.0)))))))))))))))
(assert
 (let ((?x1811 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x1808 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x1805 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x1802 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x1229 (* 2.0 l_0_5_76)))
 (let ((?x1308 (* ?x1229 l_0_5_86)))
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1496 (* ?x1007 l_0_5_71)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1494 (* ?x1004 l_0_5_56)))
 (let ((?x1001 (* 2.0 l_0_5_31)))
 (let ((?x1418 (* ?x1001 l_0_5_37)))
 (let ((?x1681 (* 2.0 l_0_5_13)))
 (let ((?x1793 (* ?x1681 l_0_5_9)))
 (let ((?x1484 (* 2.0 l_0_5_12)))
 (let ((?x1791 (* ?x1484 l_0_5_8)))
 (let ((?x1481 (* 2.0 l_0_5_11)))
 (let ((?x1789 (* ?x1481 l_0_5_7)))
 (let ((?x1796 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x1789) ?x1791) ?x1793) (* (* 2.0 l_0_5_16) l_0_5_22))))
 (let ((?x1809 (+ (+ (+ (- (- (+ (- ?x1796 ?x1418) ?x1494) ?x1496) ?x1308) ?x1802) ?x1805) ?x1808)))
 (= (+ ?x1809 ?x1811) 0.0))))))))))))))))))))))
(assert
 (let ((?x1880 (* l_0_5_90 l_0_5_90)))
 (let ((?x1878 (* l_0_5_89 l_0_5_89)))
 (let ((?x1876 (* l_0_5_88 l_0_5_88)))
 (let ((?x1874 (* l_0_5_87 l_0_5_87)))
 (let ((?x1872 (* l_0_5_86 l_0_5_86)))
 (let ((?x1001 (* 2.0 l_0_5_31)))
 (let ((?x1492 (* ?x1001 l_0_5_41)))
 (let ((?x1253 (* 2.0 l_0_5_16)))
 (let ((?x1489 (* ?x1253 l_0_5_26)))
 (let ((?x1868 (* l_0_5_15 l_0_5_15)))
 (let ((?x1866 (* l_0_5_14 l_0_5_14)))
 (let ((?x1857 (* l_0_5_13 l_0_5_13)))
 (let ((?x1867 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x1857) ?x1866)))
 (let ((?x1879 (+ (+ (+ (+ (- (+ (- ?x1867 ?x1868) ?x1489) ?x1492) ?x1872) ?x1874) ?x1876) ?x1878)))
 (= (+ ?x1879 ?x1880) 0.0))))))))))))))))
(assert
 (let ((?x1226 (* l_0_5_61 l_0_5_61)))
 (= (+ (- (* l_0_5_1 l_0_5_1) (* l_0_5_46 l_0_5_46)) ?x1226) 0.0)))
(assert
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1345 (* ?x1007 l_0_5_64)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1340 (* ?x1004 l_0_5_49)))
 (= (+ (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x1340) ?x1345) 0.0))))))
(assert
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1424 (* ?x1007 l_0_5_67)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1421 (* ?x1004 l_0_5_52)))
 (= (+ (- (* (* 2.0 l_0_5_1) l_0_5_7) ?x1421) ?x1424) 0.0))))))
(assert
 (let ((?x1007 (* 2.0 l_0_5_61)))
 (let ((?x1496 (* ?x1007 l_0_5_71)))
 (let ((?x1004 (* 2.0 l_0_5_46)))
 (let ((?x1494 (* ?x1004 l_0_5_56)))
 (= (+ (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x1494) ?x1496) 0.0))))))
(assert
 (let ((?x1120 (* l_0_5_66 l_0_5_66)))
 (let ((?x1977 (* 2.0 ?x1120)))
 (let ((?x1117 (* l_0_5_65 l_0_5_65)))
 (let ((?x1975 (* 2.0 ?x1117)))
 (let ((?x1114 (* l_0_5_64 l_0_5_64)))
 (let ((?x1973 (* 2.0 ?x1114)))
 (let ((?x1970 (* 2.0 l_0_5_63)))
 (let ((?x1971 (* ?x1970 l_0_5_65)))
 (let ((?x1967 (* 2.0 l_0_5_62)))
 (let ((?x1968 (* ?x1967 l_0_5_64)))
 (let ((?x1955 (* 2.0 l_0_5_48)))
 (let ((?x1956 (* ?x1955 l_0_5_50)))
 (let ((?x1952 (* 2.0 l_0_5_47)))
 (let ((?x1953 (* ?x1952 l_0_5_49)))
 (let ((?x1082 (* l_0_5_36 l_0_5_36)))
 (let ((?x1950 (* 2.0 ?x1082)))
 (let ((?x1079 (* l_0_5_35 l_0_5_35)))
 (let ((?x1948 (* 2.0 ?x1079)))
 (let ((?x1076 (* l_0_5_34 l_0_5_34)))
 (let ((?x1946 (* 2.0 ?x1076)))
 (let ((?x1329 (* 2.0 l_0_5_3)))
 (let ((?x1330 (* ?x1329 l_0_5_5)))
 (let ((?x1326 (* 2.0 l_0_5_2)))
 (let ((?x1327 (* ?x1326 l_0_5_4)))
 (let ((?x1941 (- (+ (* (* (- 2.0) l_0_5_19) l_0_5_19) ?x1327) (* (* 2.0 l_0_5_20) l_0_5_20))))
 (let ((?x1949 (+ (+ (+ (- ?x1941 (* (* 2.0 l_0_5_21) l_0_5_21)) ?x1330) ?x1946) ?x1948)))
 (let ((?x1960 (- (- (- (+ ?x1949 ?x1950) ?x1953) ?x1956) (* (* 2.0 l_0_5_49) l_0_5_49))))
 (let ((?x1966 (- (- ?x1960 (* (* 2.0 l_0_5_50) l_0_5_50)) (* (* 2.0 l_0_5_51) l_0_5_51))))
 (= (+ (+ (+ (+ (+ ?x1966 ?x1968) ?x1971) ?x1973) ?x1975) ?x1977) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x1567 (* l_0_5_81 l_0_5_81)))
 (let ((?x1565 (* l_0_5_80 l_0_5_80)))
 (let ((?x1563 (* l_0_5_79 l_0_5_79)))
 (let ((?x1120 (* l_0_5_66 l_0_5_66)))
 (let ((?x1117 (* l_0_5_65 l_0_5_65)))
 (let ((?x1114 (* l_0_5_64 l_0_5_64)))
 (let ((?x1970 (* 2.0 l_0_5_63)))
 (let ((?x2059 (* ?x1970 l_0_5_68)))
 (let ((?x1967 (* 2.0 l_0_5_62)))
 (let ((?x2057 (* ?x1967 l_0_5_67)))
 (let ((?x1183 (* l_0_5_51 l_0_5_51)))
 (let ((?x1179 (* l_0_5_50 l_0_5_50)))
 (let ((?x1175 (* l_0_5_49 l_0_5_49)))
 (let ((?x1955 (* 2.0 l_0_5_48)))
 (let ((?x2043 (* ?x1955 l_0_5_53)))
 (let ((?x1952 (* 2.0 l_0_5_47)))
 (let ((?x2041 (* ?x1952 l_0_5_52)))
 (let ((?x1329 (* 2.0 l_0_5_3)))
 (let ((?x1416 (* ?x1329 l_0_5_8)))
 (let ((?x1326 (* 2.0 l_0_5_2)))
 (let ((?x1414 (* ?x1326 l_0_5_7)))
 (let ((?x2027 (- (+ (* (* (- 4.0) l_0_5_19) l_0_5_22) ?x1414) (* (* 4.0 l_0_5_20) l_0_5_23))))
 (let ((?x2034 (+ (+ (- ?x2027 (* (* 4.0 l_0_5_21) l_0_5_24)) ?x1416) (* (* 4.0 l_0_5_34) l_0_5_37))))
 (let ((?x2040 (+ (+ ?x2034 (* (* 4.0 l_0_5_35) l_0_5_38)) (* (* 4.0 l_0_5_36) l_0_5_39))))
 (let ((?x2048 (+ (- (- (- ?x2040 ?x2041) ?x2043) (* (* 4.0 l_0_5_49) l_0_5_52)) ?x1175)))
 (let ((?x2055 (- (+ (- ?x2048 (* (* 4.0 l_0_5_50) l_0_5_53)) ?x1179) (* (* 4.0 l_0_5_51) l_0_5_54))))
 (let ((?x2063 (+ (+ (+ (+ ?x2055 ?x1183) ?x2057) ?x2059) (* (* 4.0 l_0_5_64) l_0_5_67))))
 (let ((?x2071 (+ (- (+ (- ?x2063 ?x1114) (* (* 4.0 l_0_5_65) l_0_5_68)) ?x1117) (* (* 4.0 l_0_5_66) l_0_5_69))))
 (= (- (- (- (- ?x2071 ?x1120) ?x1563) ?x1565) ?x1567) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x1970 (* 2.0 l_0_5_63)))
 (let ((?x2202 (* ?x1970 l_0_5_72)))
 (let ((?x1967 (* 2.0 l_0_5_62)))
 (let ((?x2200 (* ?x1967 l_0_5_71)))
 (let ((?x1955 (* 2.0 l_0_5_48)))
 (let ((?x2192 (* ?x1955 l_0_5_57)))
 (let ((?x1952 (* 2.0 l_0_5_47)))
 (let ((?x2190 (* ?x1952 l_0_5_56)))
 (let ((?x1082 (* l_0_5_36 l_0_5_36)))
 (let ((?x1079 (* l_0_5_35 l_0_5_35)))
 (let ((?x1076 (* l_0_5_34 l_0_5_34)))
 (let ((?x1148 (* l_0_5_21 l_0_5_21)))
 (let ((?x1144 (* l_0_5_20 l_0_5_20)))
 (let ((?x1139 (* l_0_5_19 l_0_5_19)))
 (let ((?x1484 (* 2.0 l_0_5_12)))
 (let ((?x1485 (* ?x1484 l_0_5_3)))
 (let ((?x1481 (* 2.0 l_0_5_11)))
 (let ((?x1482 (* ?x1481 l_0_5_2)))
 (let ((?x2176 (- (+ (- (+ ?x1482 ?x1485) (* (* 4.0 l_0_5_19) l_0_5_26)) ?x1139) (* (* 4.0 l_0_5_20) l_0_5_27))))
 (let ((?x2182 (+ (+ (- (+ ?x2176 ?x1144) (* (* 4.0 l_0_5_21) l_0_5_28)) ?x1148) (* (* 4.0 l_0_5_34) l_0_5_41))))
 (let ((?x2188 (+ (- (+ (- ?x2182 ?x1076) (* (* 4.0 l_0_5_35) l_0_5_42)) ?x1079) (* (* 4.0 l_0_5_36) l_0_5_43))))
 (let ((?x2195 (- (- (- (- ?x2188 ?x1082) ?x2190) ?x2192) (* (* 4.0 l_0_5_49) l_0_5_56))))
 (let ((?x2199 (- (- ?x2195 (* (* 4.0 l_0_5_50) l_0_5_57)) (* (* 4.0 l_0_5_51) l_0_5_58))))
 (let ((?x2207 (+ (+ (+ (+ ?x2199 ?x2200) ?x2202) (* (* 4.0 l_0_5_64) l_0_5_71)) (* (* 4.0 l_0_5_65) l_0_5_72))))
 (= (+ ?x2207 (* (* 4.0 l_0_5_66) l_0_5_73)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x1120 (* l_0_5_66 l_0_5_66)))
 (let ((?x1117 (* l_0_5_65 l_0_5_65)))
 (let ((?x1114 (* l_0_5_64 l_0_5_64)))
 (let ((?x1558 (* l_0_5_6 l_0_5_6)))
 (let ((?x1183 (* l_0_5_51 l_0_5_51)))
 (let ((?x1179 (* l_0_5_50 l_0_5_50)))
 (let ((?x1556 (* l_0_5_5 l_0_5_5)))
 (let ((?x2285 (- (+ (- (* l_0_5_4 l_0_5_4) (* l_0_5_49 l_0_5_49)) ?x1556) ?x1179)))
 (= (+ (+ (+ (+ (- ?x2285 ?x1183) ?x1558) ?x1114) ?x1117) ?x1120) 0.0))))))))))
(assert
 (let ((?x2327 (* 2.0 l_0_5_66)))
 (let ((?x2328 (* ?x2327 l_0_5_69)))
 (let ((?x2324 (* 2.0 l_0_5_65)))
 (let ((?x2325 (* ?x2324 l_0_5_68)))
 (let ((?x2321 (* 2.0 l_0_5_64)))
 (let ((?x2322 (* ?x2321 l_0_5_67)))
 (let ((?x1614 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x1964 (* 2.0 l_0_5_51)))
 (let ((?x2318 (* ?x1964 l_0_5_54)))
 (let ((?x1961 (* 2.0 l_0_5_50)))
 (let ((?x2316 (* ?x1961 l_0_5_53)))
 (let ((?x1611 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x1958 (* 2.0 l_0_5_49)))
 (let ((?x2313 (* ?x1958 l_0_5_52)))
 (let ((?x1605 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x2326 (+ (+ (+ (- (- (+ (- ?x1605 ?x2313) ?x1611) ?x2316) ?x2318) ?x1614) ?x2322) ?x2325)))
 (= (+ ?x2326 ?x2328) 0.0))))))))))))))))))
(assert
 (let ((?x2327 (* 2.0 l_0_5_66)))
 (let ((?x2365 (* ?x2327 l_0_5_73)))
 (let ((?x2324 (* 2.0 l_0_5_65)))
 (let ((?x2363 (* ?x2324 l_0_5_72)))
 (let ((?x2321 (* 2.0 l_0_5_64)))
 (let ((?x2361 (* ?x2321 l_0_5_71)))
 (let ((?x1964 (* 2.0 l_0_5_51)))
 (let ((?x2359 (* ?x1964 l_0_5_58)))
 (let ((?x1961 (* 2.0 l_0_5_50)))
 (let ((?x2357 (* ?x1961 l_0_5_57)))
 (let ((?x1958 (* 2.0 l_0_5_49)))
 (let ((?x2355 (* ?x1958 l_0_5_56)))
 (let ((?x1681 (* 2.0 l_0_5_13)))
 (let ((?x1682 (* ?x1681 l_0_5_6)))
 (let ((?x1484 (* 2.0 l_0_5_12)))
 (let ((?x1671 (* ?x1484 l_0_5_5)))
 (let ((?x2358 (- (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x1671) ?x1682) ?x2355) ?x2357)))
 (= (+ (+ (+ (- ?x2358 ?x2359) ?x2361) ?x2363) ?x2365) 0.0)))))))))))))))))))
(assert
 (let ((?x1757 (* l_0_5_9 l_0_5_9)))
 (let ((?x1747 (* l_0_5_8 l_0_5_8)))
 (let ((?x2405 (* l_0_5_70 l_0_5_70)))
 (let ((?x1744 (* l_0_5_7 l_0_5_7)))
 (let ((?x2402 (* l_0_5_69 l_0_5_69)))
 (let ((?x2400 (* l_0_5_68 l_0_5_68)))
 (let ((?x2398 (* l_0_5_67 l_0_5_67)))
 (let ((?x2396 (* l_0_5_55 l_0_5_55)))
 (let ((?x2394 (* l_0_5_54 l_0_5_54)))
 (let ((?x2392 (* l_0_5_53 l_0_5_53)))
 (let ((?x2395 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_52 l_0_5_52)) ?x2392) ?x2394)))
 (let ((?x2407 (+ (+ (+ (+ (+ (+ (- ?x2395 ?x2396) ?x2398) ?x2400) ?x2402) ?x1744) ?x2405) ?x1747)))
 (= (+ ?x2407 ?x1757) 0.0))))))))))))))
(assert
 (let ((?x2450 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x2447 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x2444 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x2441 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x2437 (* 2.0 l_0_5_55)))
 (let ((?x2438 (* ?x2437 l_0_5_59)))
 (let ((?x2434 (* 2.0 l_0_5_54)))
 (let ((?x2435 (* ?x2434 l_0_5_58)))
 (let ((?x2431 (* 2.0 l_0_5_53)))
 (let ((?x2432 (* ?x2431 l_0_5_57)))
 (let ((?x2428 (* 2.0 l_0_5_52)))
 (let ((?x2429 (* ?x2428 l_0_5_56)))
 (let ((?x1681 (* 2.0 l_0_5_13)))
 (let ((?x1793 (* ?x1681 l_0_5_9)))
 (let ((?x1484 (* 2.0 l_0_5_12)))
 (let ((?x1791 (* ?x1484 l_0_5_8)))
 (let ((?x1481 (* 2.0 l_0_5_11)))
 (let ((?x1789 (* ?x1481 l_0_5_7)))
 (let ((?x2430 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x1789) ?x1791) ?x1793) ?x2429)))
 (let ((?x2451 (+ (+ (+ (+ (- (- (- ?x2430 ?x2432) ?x2435) ?x2438) ?x2441) ?x2444) ?x2447) ?x2450)))
 (= ?x2451 0.0))))))))))))))))))))))
(assert
 (let ((?x2510 (* l_0_5_75 l_0_5_75)))
 (let ((?x2508 (* l_0_5_74 l_0_5_74)))
 (let ((?x2506 (* l_0_5_73 l_0_5_73)))
 (let ((?x2504 (* l_0_5_72 l_0_5_72)))
 (let ((?x2502 (* l_0_5_71 l_0_5_71)))
 (let ((?x2500 (* l_0_5_60 l_0_5_60)))
 (let ((?x2498 (* l_0_5_59 l_0_5_59)))
 (let ((?x2496 (* l_0_5_58 l_0_5_58)))
 (let ((?x2494 (* l_0_5_57 l_0_5_57)))
 (let ((?x2492 (* l_0_5_56 l_0_5_56)))
 (let ((?x1868 (* l_0_5_15 l_0_5_15)))
 (let ((?x1866 (* l_0_5_14 l_0_5_14)))
 (let ((?x1857 (* l_0_5_13 l_0_5_13)))
 (let ((?x2490 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x1857) ?x1866)))
 (let ((?x2503 (+ (- (- (- (- (- (+ ?x2490 ?x1868) ?x2492) ?x2494) ?x2496) ?x2498) ?x2500) ?x2502)))
 (= (+ (+ (+ (+ ?x2503 ?x2504) ?x2506) ?x2508) ?x2510) 0.0)))))))))))))))))
(assert
 (let ((?x1970 (* 2.0 l_0_5_63)))
 (let ((?x1971 (* ?x1970 l_0_5_65)))
 (let ((?x1967 (* 2.0 l_0_5_62)))
 (let ((?x1968 (* ?x1967 l_0_5_64)))
 (let ((?x1955 (* 2.0 l_0_5_48)))
 (let ((?x1956 (* ?x1955 l_0_5_50)))
 (let ((?x1952 (* 2.0 l_0_5_47)))
 (let ((?x1953 (* ?x1952 l_0_5_49)))
 (let ((?x2547 (* 2.0 l_0_5_33)))
 (let ((?x2548 (* ?x2547 l_0_5_35)))
 (let ((?x2541 (* 2.0 l_0_5_32)))
 (let ((?x2542 (* ?x2541 l_0_5_34)))
 (let ((?x2536 (* 2.0 l_0_5_18)))
 (let ((?x2537 (* ?x2536 l_0_5_20)))
 (let ((?x2535 (- (* (* (- 2.0) l_0_5_17) l_0_5_19) (* (* 2.0 l_0_5_17) l_0_5_17))))
 (let ((?x2546 (+ (+ (- (- ?x2535 ?x2537) (* ?x2536 l_0_5_18)) ?x2542) (* 2.0 (* l_0_5_32 l_0_5_32)))))
 (let ((?x2555 (- (- (+ (+ ?x2546 ?x2548) (* 2.0 (* l_0_5_33 l_0_5_33))) ?x1953) (* ?x1952 l_0_5_47))))
 (let ((?x2561 (+ (+ (- (- ?x2555 ?x1956) (* ?x1955 l_0_5_48)) ?x1968) (* 2.0 (* l_0_5_62 l_0_5_62)))))
 (let ((?x2567 (- (+ (+ ?x2561 ?x1971) (* 2.0 (* l_0_5_63 l_0_5_63))) (* (* 2.0 l_0_5_92) l_0_5_94))))
 (= (- ?x2567 (* (* 2.0 l_0_5_93) l_0_5_95)) 0.0)))))))))))))))))))))
(assert
 (let ((?x1350 (* 2.0 l_0_5_78)))
 (let ((?x1351 (* ?x1350 l_0_5_80)))
 (let ((?x1347 (* 2.0 l_0_5_77)))
 (let ((?x1348 (* ?x1347 l_0_5_79)))
 (let ((?x2327 (* 2.0 l_0_5_66)))
 (let ((?x2328 (* ?x2327 l_0_5_69)))
 (let ((?x2324 (* 2.0 l_0_5_65)))
 (let ((?x2325 (* ?x2324 l_0_5_68)))
 (let ((?x2321 (* 2.0 l_0_5_64)))
 (let ((?x2322 (* ?x2321 l_0_5_67)))
 (let ((?x1970 (* 2.0 l_0_5_63)))
 (let ((?x1971 (* ?x1970 l_0_5_65)))
 (let ((?x1967 (* 2.0 l_0_5_62)))
 (let ((?x1968 (* ?x1967 l_0_5_64)))
 (let ((?x1964 (* 2.0 l_0_5_51)))
 (let ((?x2318 (* ?x1964 l_0_5_54)))
 (let ((?x1961 (* 2.0 l_0_5_50)))
 (let ((?x2316 (* ?x1961 l_0_5_53)))
 (let ((?x1958 (* 2.0 l_0_5_49)))
 (let ((?x2313 (* ?x1958 l_0_5_52)))
 (let ((?x1955 (* 2.0 l_0_5_48)))
 (let ((?x1956 (* ?x1955 l_0_5_50)))
 (let ((?x1952 (* 2.0 l_0_5_47)))
 (let ((?x1953 (* ?x1952 l_0_5_49)))
 (let ((?x2651 (* 2.0 l_0_5_36)))
 (let ((?x2652 (* ?x2651 l_0_5_39)))
 (let ((?x2648 (* 2.0 l_0_5_35)))
 (let ((?x2649 (* ?x2648 l_0_5_38)))
 (let ((?x2645 (* 2.0 l_0_5_34)))
 (let ((?x2646 (* ?x2645 l_0_5_37)))
 (let ((?x1942 (* 2.0 l_0_5_21)))
 (let ((?x2639 (* ?x1942 l_0_5_24)))
 (let ((?x1939 (* 2.0 l_0_5_20)))
 (let ((?x2637 (* ?x1939 l_0_5_23)))
 (let ((?x2634 (* 2.0 l_0_5_19)))
 (let ((?x2635 (* ?x2634 l_0_5_22)))
 (let ((?x2633 (- (* (* (- 4.0) l_0_5_17) l_0_5_22) (* (* 4.0 l_0_5_18) l_0_5_23))))
 (let ((?x2642 (+ (- (- (- ?x2633 ?x2635) ?x2637) ?x2639) (* (* 4.0 l_0_5_32) l_0_5_37))))
 (let ((?x2653 (+ (+ (+ (+ ?x2642 (* (* 4.0 l_0_5_33) l_0_5_38)) ?x2646) ?x2649) ?x2652)))
 (let ((?x2659 (- (+ (- (+ ?x2653 ?x1953) (* (* 4.0 l_0_5_47) l_0_5_52)) ?x1956) (* (* 4.0 l_0_5_48) l_0_5_53))))
 (let ((?x2665 (+ (- (- (- (- ?x2659 ?x2313) ?x2316) ?x2318) ?x1968) (* (* 4.0 l_0_5_62) l_0_5_67))))
 (let ((?x2670 (+ (+ (+ (- ?x2665 ?x1971) (* (* 4.0 l_0_5_63) l_0_5_68)) ?x2322) ?x2325)))
 (let ((?x2676 (- (- (- (+ ?x2670 ?x2328) ?x1348) ?x1351) (* (* 2.0 l_0_5_94) l_0_5_97))))
 (let ((?x2682 (- (- ?x2676 (* (* 2.0 l_0_5_95) l_0_5_98)) (* (* 2.0 l_0_5_96) l_0_5_99))))
 (= ?x2682 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2327 (* 2.0 l_0_5_66)))
 (let ((?x2365 (* ?x2327 l_0_5_73)))
 (let ((?x2324 (* 2.0 l_0_5_65)))
 (let ((?x2363 (* ?x2324 l_0_5_72)))
 (let ((?x2321 (* 2.0 l_0_5_64)))
 (let ((?x2361 (* ?x2321 l_0_5_71)))
 (let ((?x1964 (* 2.0 l_0_5_51)))
 (let ((?x2359 (* ?x1964 l_0_5_58)))
 (let ((?x1961 (* 2.0 l_0_5_50)))
 (let ((?x2357 (* ?x1961 l_0_5_57)))
 (let ((?x1958 (* 2.0 l_0_5_49)))
 (let ((?x2355 (* ?x1958 l_0_5_56)))
 (let ((?x2651 (* 2.0 l_0_5_36)))
 (let ((?x2798 (* ?x2651 l_0_5_43)))
 (let ((?x2648 (* 2.0 l_0_5_35)))
 (let ((?x2796 (* ?x2648 l_0_5_42)))
 (let ((?x2645 (* 2.0 l_0_5_34)))
 (let ((?x2794 (* ?x2645 l_0_5_41)))
 (let ((?x2547 (* 2.0 l_0_5_33)))
 (let ((?x2548 (* ?x2547 l_0_5_35)))
 (let ((?x2541 (* 2.0 l_0_5_32)))
 (let ((?x2542 (* ?x2541 l_0_5_34)))
 (let ((?x1942 (* 2.0 l_0_5_21)))
 (let ((?x2786 (* ?x1942 l_0_5_28)))
 (let ((?x1939 (* 2.0 l_0_5_20)))
 (let ((?x2784 (* ?x1939 l_0_5_27)))
 (let ((?x2634 (* 2.0 l_0_5_19)))
 (let ((?x2782 (* ?x2634 l_0_5_26)))
 (let ((?x2536 (* 2.0 l_0_5_18)))
 (let ((?x2537 (* ?x2536 l_0_5_20)))
 (let ((?x2770 (- (* (* (- 2.0) l_0_5_101) l_0_5_94) (* (* 2.0 l_0_5_102) l_0_5_95))))
 (let ((?x2775 (+ (- ?x2770 (* (* 2.0 l_0_5_103) l_0_5_96)) (* (* 2.0 l_0_5_17) l_0_5_19))))
 (let ((?x2781 (- (+ (- ?x2775 (* (* 4.0 l_0_5_17) l_0_5_26)) ?x2537) (* (* 4.0 l_0_5_18) l_0_5_27))))
 (let ((?x2790 (+ (- (- (- (- ?x2781 ?x2782) ?x2784) ?x2786) ?x2542) (* (* 4.0 l_0_5_32) l_0_5_41))))
 (let ((?x2797 (+ (+ (+ (- ?x2790 ?x2548) (* (* 4.0 l_0_5_33) l_0_5_42)) ?x2794) ?x2796)))
 (let ((?x2803 (- (- (+ ?x2797 ?x2798) (* (* 4.0 l_0_5_47) l_0_5_56)) (* (* 4.0 l_0_5_48) l_0_5_57))))
 (let ((?x2808 (+ (- (- (- ?x2803 ?x2355) ?x2357) ?x2359) (* (* 4.0 l_0_5_62) l_0_5_71))))
 (let ((?x2813 (+ (+ (+ (+ ?x2808 (* (* 4.0 l_0_5_63) l_0_5_72)) ?x2361) ?x2363) ?x2365)))
 (= ?x2813 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1626 (* 2.0 l_0_5_81)))
 (let ((?x1627 (* ?x1626 l_0_5_84)))
 (let ((?x1623 (* 2.0 l_0_5_80)))
 (let ((?x1624 (* ?x1623 l_0_5_83)))
 (let ((?x1620 (* 2.0 l_0_5_79)))
 (let ((?x1621 (* ?x1620 l_0_5_82)))
 (let ((?x2327 (* 2.0 l_0_5_66)))
 (let ((?x2328 (* ?x2327 l_0_5_69)))
 (let ((?x2324 (* 2.0 l_0_5_65)))
 (let ((?x2325 (* ?x2324 l_0_5_68)))
 (let ((?x2321 (* 2.0 l_0_5_64)))
 (let ((?x2322 (* ?x2321 l_0_5_67)))
 (let ((?x1964 (* 2.0 l_0_5_51)))
 (let ((?x2318 (* ?x1964 l_0_5_54)))
 (let ((?x1961 (* 2.0 l_0_5_50)))
 (let ((?x2316 (* ?x1961 l_0_5_53)))
 (let ((?x1958 (* 2.0 l_0_5_49)))
 (let ((?x2313 (* ?x1958 l_0_5_52)))
 (let ((?x2897 (- (* (* (- 2.0) l_0_5_22) l_0_5_22) (* (* 2.0 l_0_5_23) l_0_5_23))))
 (let ((?x2903 (- (- ?x2897 (* (* 2.0 l_0_5_24) l_0_5_24)) (* (* 2.0 l_0_5_25) l_0_5_25))))
 (let ((?x2909 (+ (+ ?x2903 (* 2.0 (* l_0_5_37 l_0_5_37))) (* 2.0 (* l_0_5_38 l_0_5_38)))))
 (let ((?x2915 (+ (+ ?x2909 (* 2.0 (* l_0_5_39 l_0_5_39))) (* 2.0 (* l_0_5_40 l_0_5_40)))))
 (let ((?x2920 (- (+ (+ (+ ?x2915 ?x2313) ?x2316) ?x2318) (* (* 2.0 l_0_5_52) l_0_5_52))))
 (let ((?x2924 (- (- ?x2920 (* (* 2.0 l_0_5_53) l_0_5_53)) (* (* 2.0 l_0_5_54) l_0_5_54))))
 (let ((?x2929 (- (- (- (- ?x2924 (* (* 2.0 l_0_5_55) l_0_5_55)) ?x2322) ?x2325) ?x2328)))
 (let ((?x2933 (+ (+ ?x2929 (* 2.0 (* l_0_5_67 l_0_5_67))) (* 2.0 (* l_0_5_68 l_0_5_68)))))
 (let ((?x2937 (+ (+ ?x2933 (* 2.0 (* l_0_5_69 l_0_5_69))) (* 2.0 (* l_0_5_70 l_0_5_70)))))
 (= (- (- (- ?x2937 ?x1621) ?x1624) ?x1627) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x1626 (* 2.0 l_0_5_81)))
 (let ((?x1698 (* ?x1626 l_0_5_88)))
 (let ((?x1623 (* 2.0 l_0_5_80)))
 (let ((?x1696 (* ?x1623 l_0_5_87)))
 (let ((?x1620 (* 2.0 l_0_5_79)))
 (let ((?x1694 (* ?x1620 l_0_5_86)))
 (let ((?x2327 (* 2.0 l_0_5_66)))
 (let ((?x2365 (* ?x2327 l_0_5_73)))
 (let ((?x2324 (* 2.0 l_0_5_65)))
 (let ((?x2363 (* ?x2324 l_0_5_72)))
 (let ((?x2321 (* 2.0 l_0_5_64)))
 (let ((?x2361 (* ?x2321 l_0_5_71)))
 (let ((?x1964 (* 2.0 l_0_5_51)))
 (let ((?x2359 (* ?x1964 l_0_5_58)))
 (let ((?x1961 (* 2.0 l_0_5_50)))
 (let ((?x2357 (* ?x1961 l_0_5_57)))
 (let ((?x1958 (* 2.0 l_0_5_49)))
 (let ((?x2355 (* ?x1958 l_0_5_56)))
 (let ((?x2651 (* 2.0 l_0_5_36)))
 (let ((?x2652 (* ?x2651 l_0_5_39)))
 (let ((?x2648 (* 2.0 l_0_5_35)))
 (let ((?x2649 (* ?x2648 l_0_5_38)))
 (let ((?x2645 (* 2.0 l_0_5_34)))
 (let ((?x2646 (* ?x2645 l_0_5_37)))
 (let ((?x1942 (* 2.0 l_0_5_21)))
 (let ((?x2639 (* ?x1942 l_0_5_24)))
 (let ((?x1939 (* 2.0 l_0_5_20)))
 (let ((?x2637 (* ?x1939 l_0_5_23)))
 (let ((?x2634 (* 2.0 l_0_5_19)))
 (let ((?x2635 (* ?x2634 l_0_5_22)))
 (let ((?x3026 (- (- (+ (+ ?x2635 ?x2637) ?x2639) (* (* 4.0 l_0_5_22) l_0_5_26)) (* (* 4.0 l_0_5_23) l_0_5_27))))
 (let ((?x3032 (- (- ?x3026 (* (* 4.0 l_0_5_24) l_0_5_28)) (* (* 4.0 l_0_5_25) l_0_5_29))))
 (let ((?x3038 (+ (- (- (- ?x3032 ?x2646) ?x2649) ?x2652) (* (* 4.0 l_0_5_37) l_0_5_41))))
 (let ((?x3044 (+ (+ ?x3038 (* (* 4.0 l_0_5_38) l_0_5_42)) (* (* 4.0 l_0_5_39) l_0_5_43))))
 (let ((?x3050 (+ (+ (+ (+ ?x3044 (* (* 4.0 l_0_5_40) l_0_5_44)) ?x2355) ?x2357) ?x2359)))
 (let ((?x3056 (- (- ?x3050 (* (* 4.0 l_0_5_52) l_0_5_56)) (* (* 4.0 l_0_5_53) l_0_5_57))))
 (let ((?x3062 (- (- ?x3056 (* (* 4.0 l_0_5_54) l_0_5_58)) (* (* 4.0 l_0_5_55) l_0_5_59))))
 (let ((?x3068 (+ (- (- (- ?x3062 ?x2361) ?x2363) ?x2365) (* (* 4.0 l_0_5_67) l_0_5_71))))
 (let ((?x3074 (+ (+ ?x3068 (* (* 4.0 l_0_5_68) l_0_5_72)) (* (* 4.0 l_0_5_69) l_0_5_73))))
 (let ((?x3080 (- (- (- (+ ?x3074 (* (* 4.0 l_0_5_70) l_0_5_74)) ?x1694) ?x1696) ?x1698)))
 (= ?x3080 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2510 (* l_0_5_75 l_0_5_75)))
 (let ((?x3245 (* 2.0 ?x2510)))
 (let ((?x2508 (* l_0_5_74 l_0_5_74)))
 (let ((?x3243 (* 2.0 ?x2508)))
 (let ((?x2506 (* l_0_5_73 l_0_5_73)))
 (let ((?x3241 (* 2.0 ?x2506)))
 (let ((?x2504 (* l_0_5_72 l_0_5_72)))
 (let ((?x3239 (* 2.0 ?x2504)))
 (let ((?x2502 (* l_0_5_71 l_0_5_71)))
 (let ((?x3237 (* 2.0 ?x2502)))
 (let ((?x3219 (* l_0_5_45 l_0_5_45)))
 (let ((?x3220 (* 2.0 ?x3219)))
 (let ((?x3216 (* l_0_5_44 l_0_5_44)))
 (let ((?x3217 (* 2.0 ?x3216)))
 (let ((?x3213 (* l_0_5_43 l_0_5_43)))
 (let ((?x3214 (* 2.0 ?x3213)))
 (let ((?x3210 (* l_0_5_42 l_0_5_42)))
 (let ((?x3211 (* 2.0 ?x3210)))
 (let ((?x3207 (* l_0_5_41 l_0_5_41)))
 (let ((?x3208 (* 2.0 ?x3207)))
 (let ((?x2651 (* 2.0 l_0_5_36)))
 (let ((?x2798 (* ?x2651 l_0_5_43)))
 (let ((?x2648 (* 2.0 l_0_5_35)))
 (let ((?x2796 (* ?x2648 l_0_5_42)))
 (let ((?x2645 (* 2.0 l_0_5_34)))
 (let ((?x2794 (* ?x2645 l_0_5_41)))
 (let ((?x1942 (* 2.0 l_0_5_21)))
 (let ((?x2786 (* ?x1942 l_0_5_28)))
 (let ((?x1939 (* 2.0 l_0_5_20)))
 (let ((?x2784 (* ?x1939 l_0_5_27)))
 (let ((?x2634 (* 2.0 l_0_5_19)))
 (let ((?x2782 (* ?x2634 l_0_5_26)))
 (let ((?x3194 (- (- (+ (+ ?x2782 ?x2784) ?x2786) (* (* 2.0 l_0_5_26) l_0_5_26)) (* (* 2.0 l_0_5_27) l_0_5_27))))
 (let ((?x3200 (- (- ?x3194 (* (* 2.0 l_0_5_28) l_0_5_28)) (* (* 2.0 l_0_5_29) l_0_5_29))))
 (let ((?x3206 (- (- (- (- ?x3200 (* (* 2.0 l_0_5_30) l_0_5_30)) ?x2794) ?x2796) ?x2798)))
 (let ((?x3224 (- (+ (+ (+ (+ (+ ?x3206 ?x3208) ?x3211) ?x3214) ?x3217) ?x3220) (* (* 2.0 l_0_5_56) l_0_5_56))))
 (let ((?x3230 (- (- ?x3224 (* (* 2.0 l_0_5_57) l_0_5_57)) (* (* 2.0 l_0_5_58) l_0_5_58))))
 (let ((?x3236 (- (- ?x3230 (* (* 2.0 l_0_5_59) l_0_5_59)) (* (* 2.0 l_0_5_60) l_0_5_60))))
 (= (+ (+ (+ (+ (+ ?x3236 ?x3237) ?x3239) ?x3241) ?x3243) ?x3245) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3340 (* l_0_5_93 l_0_5_93)))
 (let ((?x3338 (* l_0_5_92 l_0_5_92)))
 (let ((?x3323 (- (* (* (- 1.0) l_0_5_17) l_0_5_17) (* (* 1.0 l_0_5_18) l_0_5_18))))
 (let ((?x3327 (+ (+ ?x3323 (* 1.0 (* l_0_5_32 l_0_5_32))) (* 1.0 (* l_0_5_33 l_0_5_33)))))
 (let ((?x3333 (- (- ?x3327 (* (* 1.0 l_0_5_47) l_0_5_47)) (* (* 1.0 l_0_5_48) l_0_5_48))))
 (let ((?x3337 (+ (+ ?x3333 (* 1.0 (* l_0_5_62 l_0_5_62))) (* 1.0 (* l_0_5_63 l_0_5_63)))))
 (= (- (- ?x3337 ?x3338) ?x3340) 0.0))))))))
(assert
 (let ((?x1012 (* l_0_5_78 l_0_5_78)))
 (let ((?x1010 (* l_0_5_77 l_0_5_77)))
 (let ((?x1112 (* l_0_5_63 l_0_5_63)))
 (let ((?x1970 (* 2.0 l_0_5_63)))
 (let ((?x2059 (* ?x1970 l_0_5_68)))
 (let ((?x1107 (* l_0_5_62 l_0_5_62)))
 (let ((?x1967 (* 2.0 l_0_5_62)))
 (let ((?x2057 (* ?x1967 l_0_5_67)))
 (let ((?x1093 (* l_0_5_48 l_0_5_48)))
 (let ((?x1955 (* 2.0 l_0_5_48)))
 (let ((?x2043 (* ?x1955 l_0_5_53)))
 (let ((?x1088 (* l_0_5_47 l_0_5_47)))
 (let ((?x1952 (* 2.0 l_0_5_47)))
 (let ((?x2041 (* ?x1952 l_0_5_52)))
 (let ((?x2547 (* 2.0 l_0_5_33)))
 (let ((?x3369 (* ?x2547 l_0_5_38)))
 (let ((?x2541 (* 2.0 l_0_5_32)))
 (let ((?x3367 (* ?x2541 l_0_5_37)))
 (let ((?x2536 (* 2.0 l_0_5_18)))
 (let ((?x3365 (* ?x2536 l_0_5_23)))
 (let ((?x3371 (- (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x3365) ?x3367) ?x3369) ?x2041)))
 (let ((?x3378 (- (+ (- (+ (+ (- (+ ?x3371 ?x1088) ?x2043) ?x1093) ?x2057) ?x1107) ?x2059) ?x1112)))
 (let ((?x3384 (- (- (- (- ?x3378 ?x1010) ?x1012) (* (* 2.0 l_0_5_92) l_0_5_97)) (* (* 2.0 l_0_5_93) l_0_5_98))))
 (= ?x3384 0.0)))))))))))))))))))))))))
(assert
 (let ((?x1970 (* 2.0 l_0_5_63)))
 (let ((?x2202 (* ?x1970 l_0_5_72)))
 (let ((?x1967 (* 2.0 l_0_5_62)))
 (let ((?x2200 (* ?x1967 l_0_5_71)))
 (let ((?x1955 (* 2.0 l_0_5_48)))
 (let ((?x2192 (* ?x1955 l_0_5_57)))
 (let ((?x1952 (* 2.0 l_0_5_47)))
 (let ((?x2190 (* ?x1952 l_0_5_56)))
 (let ((?x2550 (* l_0_5_33 l_0_5_33)))
 (let ((?x2547 (* 2.0 l_0_5_33)))
 (let ((?x3439 (* ?x2547 l_0_5_42)))
 (let ((?x2544 (* l_0_5_32 l_0_5_32)))
 (let ((?x2541 (* 2.0 l_0_5_32)))
 (let ((?x3436 (* ?x2541 l_0_5_41)))
 (let ((?x2584 (* l_0_5_18 l_0_5_18)))
 (let ((?x2536 (* 2.0 l_0_5_18)))
 (let ((?x3433 (* ?x2536 l_0_5_27)))
 (let ((?x2573 (* l_0_5_17 l_0_5_17)))
 (let ((?x2533 (* 2.0 l_0_5_17)))
 (let ((?x3430 (* ?x2533 l_0_5_26)))
 (let ((?x3429 (- (* (* (- 2.0) l_0_5_101) l_0_5_92) (* (* 2.0 l_0_5_102) l_0_5_93))))
 (let ((?x3440 (+ (- (+ (+ (- (+ (- ?x3429 ?x3430) ?x2573) ?x3433) ?x2584) ?x3436) ?x2544) ?x3439)))
 (= (+ (+ (- (- (- ?x3440 ?x2550) ?x2190) ?x2192) ?x2200) ?x2202) 0.0))))))))))))))))))))))))
(assert
 (let ((?x3537 (* l_0_5_99 l_0_5_99)))
 (let ((?x3535 (* l_0_5_98 l_0_5_98)))
 (let ((?x3533 (* l_0_5_97 l_0_5_97)))
 (let ((?x1350 (* 2.0 l_0_5_78)))
 (let ((?x1429 (* ?x1350 l_0_5_83)))
 (let ((?x1347 (* 2.0 l_0_5_77)))
 (let ((?x1427 (* ?x1347 l_0_5_82)))
 (let ((?x1970 (* 2.0 l_0_5_63)))
 (let ((?x2059 (* ?x1970 l_0_5_68)))
 (let ((?x1967 (* 2.0 l_0_5_62)))
 (let ((?x2057 (* ?x1967 l_0_5_67)))
 (let ((?x1955 (* 2.0 l_0_5_48)))
 (let ((?x2043 (* ?x1955 l_0_5_53)))
 (let ((?x1952 (* 2.0 l_0_5_47)))
 (let ((?x2041 (* ?x1952 l_0_5_52)))
 (let ((?x3489 (- (* (- l_0_5_100) l_0_5_100) (* (* 1.0 l_0_5_22) l_0_5_22))))
 (let ((?x3495 (- (- ?x3489 (* (* 1.0 l_0_5_23) l_0_5_23)) (* (* 1.0 l_0_5_24) l_0_5_24))))
 (let ((?x3500 (+ (- ?x3495 (* (* 1.0 l_0_5_25) l_0_5_25)) (* 1.0 (* l_0_5_37 l_0_5_37)))))
 (let ((?x3504 (+ (+ ?x3500 (* 1.0 (* l_0_5_38 l_0_5_38))) (* 1.0 (* l_0_5_39 l_0_5_39)))))
 (let ((?x3511 (- (+ (+ (+ ?x3504 (* 1.0 (* l_0_5_40 l_0_5_40))) ?x2041) ?x2043) (* (* 1.0 l_0_5_52) l_0_5_52))))
 (let ((?x3517 (- (- ?x3511 (* (* 1.0 l_0_5_53) l_0_5_53)) (* (* 1.0 l_0_5_54) l_0_5_54))))
 (let ((?x3524 (+ (- (- (- ?x3517 (* (* 1.0 l_0_5_55) l_0_5_55)) ?x2057) ?x2059) (* 1.0 (* l_0_5_67 l_0_5_67)))))
 (let ((?x3528 (+ (+ ?x3524 (* 1.0 (* l_0_5_68 l_0_5_68))) (* 1.0 (* l_0_5_69 l_0_5_69)))))
 (let ((?x3534 (- (- (- (+ ?x3528 (* 1.0 (* l_0_5_70 l_0_5_70))) ?x1427) ?x1429) ?x3533)))
 (= (- (- ?x3534 ?x3535) ?x3537) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x1350 (* 2.0 l_0_5_78)))
 (let ((?x1500 (* ?x1350 l_0_5_87)))
 (let ((?x1347 (* 2.0 l_0_5_77)))
 (let ((?x1498 (* ?x1347 l_0_5_86)))
 (let ((?x2450 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x2447 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x2444 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x2441 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x1970 (* 2.0 l_0_5_63)))
 (let ((?x2202 (* ?x1970 l_0_5_72)))
 (let ((?x1967 (* 2.0 l_0_5_62)))
 (let ((?x2200 (* ?x1967 l_0_5_71)))
 (let ((?x2437 (* 2.0 l_0_5_55)))
 (let ((?x2438 (* ?x2437 l_0_5_59)))
 (let ((?x2434 (* 2.0 l_0_5_54)))
 (let ((?x2435 (* ?x2434 l_0_5_58)))
 (let ((?x2431 (* 2.0 l_0_5_53)))
 (let ((?x2432 (* ?x2431 l_0_5_57)))
 (let ((?x2428 (* 2.0 l_0_5_52)))
 (let ((?x2429 (* ?x2428 l_0_5_56)))
 (let ((?x1955 (* 2.0 l_0_5_48)))
 (let ((?x2192 (* ?x1955 l_0_5_57)))
 (let ((?x1952 (* 2.0 l_0_5_47)))
 (let ((?x2190 (* ?x1952 l_0_5_56)))
 (let ((?x3631 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x3628 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x3625 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (let ((?x3622 (* (* 2.0 l_0_5_37) l_0_5_41)))
 (let ((?x2547 (* 2.0 l_0_5_33)))
 (let ((?x3369 (* ?x2547 l_0_5_38)))
 (let ((?x2541 (* 2.0 l_0_5_32)))
 (let ((?x3367 (* ?x2541 l_0_5_37)))
 (let ((?x2901 (* 2.0 l_0_5_25)))
 (let ((?x3617 (* ?x2901 l_0_5_29)))
 (let ((?x2898 (* 2.0 l_0_5_24)))
 (let ((?x3615 (* ?x2898 l_0_5_28)))
 (let ((?x2895 (* 2.0 l_0_5_23)))
 (let ((?x3613 (* ?x2895 l_0_5_27)))
 (let ((?x3611 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x2536 (* 2.0 l_0_5_18)))
 (let ((?x3365 (* ?x2536 l_0_5_23)))
 (let ((?x3602 (- (* (* (- 2.0) l_0_5_100) l_0_5_104) (* (* 2.0 l_0_5_101) l_0_5_97))))
 (let ((?x3606 (- (- ?x3602 (* (* 2.0 l_0_5_102) l_0_5_98)) (* (* 2.0 l_0_5_103) l_0_5_99))))
 (let ((?x3614 (- (- (+ (+ ?x3606 (* (* 2.0 l_0_5_17) l_0_5_22)) ?x3365) ?x3611) ?x3613)))
 (let ((?x3629 (+ (+ (+ (- (- (- (- ?x3614 ?x3615) ?x3617) ?x3367) ?x3369) ?x3622) ?x3625) ?x3628)))
 (let ((?x3638 (- (- (- (- (+ (+ (+ ?x3629 ?x3631) ?x2190) ?x2192) ?x2429) ?x2432) ?x2435) ?x2438)))
 (let ((?x3645 (- (+ (+ (+ (+ (- (- ?x3638 ?x2200) ?x2202) ?x2441) ?x2444) ?x2447) ?x2450) ?x1498)))
 (= (- ?x3645 ?x1500) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2547 (* 2.0 l_0_5_33)))
 (let ((?x3439 (* ?x2547 l_0_5_42)))
 (let ((?x2541 (* 2.0 l_0_5_32)))
 (let ((?x3436 (* ?x2541 l_0_5_41)))
 (let ((?x2536 (* 2.0 l_0_5_18)))
 (let ((?x3433 (* ?x2536 l_0_5_27)))
 (let ((?x2533 (* 2.0 l_0_5_17)))
 (let ((?x3430 (* ?x2533 l_0_5_26)))
 (let ((?x3742 (* l_0_5_105 l_0_5_105)))
 (let ((?x3740 (* l_0_5_104 l_0_5_104)))
 (let ((?x3738 (* l_0_5_103 l_0_5_103)))
 (let ((?x3739 (- (- (* (- l_0_5_101) l_0_5_101) (* l_0_5_102 l_0_5_102)) ?x3738)))
 (let ((?x3748 (- (+ (+ (- (- ?x3739 ?x3740) ?x3742) ?x3430) ?x3433) (* (* 1.0 l_0_5_26) l_0_5_26))))
 (let ((?x3754 (- (- ?x3748 (* (* 1.0 l_0_5_27) l_0_5_27)) (* (* 1.0 l_0_5_28) l_0_5_28))))
 (let ((?x3760 (- (- ?x3754 (* (* 1.0 l_0_5_29) l_0_5_29)) (* (* 1.0 l_0_5_30) l_0_5_30))))
 (let ((?x3766 (+ (+ (- (- ?x3760 ?x3436) ?x3439) (* 1.0 (* l_0_5_41 l_0_5_41))) (* 1.0 (* l_0_5_42 l_0_5_42)))))
 (let ((?x3770 (+ (+ ?x3766 (* 1.0 (* l_0_5_43 l_0_5_43))) (* 1.0 (* l_0_5_44 l_0_5_44)))))
 (let ((?x3775 (- (+ ?x3770 (* 1.0 (* l_0_5_45 l_0_5_45))) (* (* 1.0 l_0_5_56) l_0_5_56))))
 (let ((?x3781 (- (- ?x3775 (* (* 1.0 l_0_5_57) l_0_5_57)) (* (* 1.0 l_0_5_58) l_0_5_58))))
 (let ((?x3787 (- (- ?x3781 (* (* 1.0 l_0_5_59) l_0_5_59)) (* (* 1.0 l_0_5_60) l_0_5_60))))
 (let ((?x3791 (+ (+ ?x3787 (* 1.0 (* l_0_5_71 l_0_5_71))) (* 1.0 (* l_0_5_72 l_0_5_72)))))
 (let ((?x3795 (+ (+ ?x3791 (* 1.0 (* l_0_5_73 l_0_5_73))) (* 1.0 (* l_0_5_74 l_0_5_74)))))
 (= (+ ?x3795 (* 1.0 (* l_0_5_75 l_0_5_75))) 0.0))))))))))))))))))))))))
(assert
 (let ((?x1811 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x1808 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x1805 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x1802 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x2450 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x2447 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x2444 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x2441 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x2437 (* 2.0 l_0_5_55)))
 (let ((?x2438 (* ?x2437 l_0_5_59)))
 (let ((?x2434 (* 2.0 l_0_5_54)))
 (let ((?x2435 (* ?x2434 l_0_5_58)))
 (let ((?x2431 (* 2.0 l_0_5_53)))
 (let ((?x2432 (* ?x2431 l_0_5_57)))
 (let ((?x2428 (* 2.0 l_0_5_52)))
 (let ((?x2429 (* ?x2428 l_0_5_56)))
 (let ((?x2913 (* l_0_5_40 l_0_5_40)))
 (let ((?x2910 (* l_0_5_39 l_0_5_39)))
 (let ((?x2907 (* l_0_5_38 l_0_5_38)))
 (let ((?x2904 (* l_0_5_37 l_0_5_37)))
 (let ((?x2956 (* l_0_5_25 l_0_5_25)))
 (let ((?x2950 (* l_0_5_24 l_0_5_24)))
 (let ((?x3861 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x2950) ?x2956)))
 (let ((?x3868 (+ (+ (+ (- (- (- (- ?x3861 ?x2904) ?x2907) ?x2910) ?x2913) ?x2429) ?x2432) ?x2435)))
 (let ((?x3875 (- (- (- (- (- (- (+ ?x3868 ?x2438) ?x2441) ?x2444) ?x2447) ?x2450) ?x1802) ?x1805)))
 (= (- (- ?x3875 ?x1808) ?x1811) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x1880 (* l_0_5_90 l_0_5_90)))
 (let ((?x1878 (* l_0_5_89 l_0_5_89)))
 (let ((?x1876 (* l_0_5_88 l_0_5_88)))
 (let ((?x1874 (* l_0_5_87 l_0_5_87)))
 (let ((?x1872 (* l_0_5_86 l_0_5_86)))
 (let ((?x2510 (* l_0_5_75 l_0_5_75)))
 (let ((?x2508 (* l_0_5_74 l_0_5_74)))
 (let ((?x2506 (* l_0_5_73 l_0_5_73)))
 (let ((?x2504 (* l_0_5_72 l_0_5_72)))
 (let ((?x2502 (* l_0_5_71 l_0_5_71)))
 (let ((?x2500 (* l_0_5_60 l_0_5_60)))
 (let ((?x2498 (* l_0_5_59 l_0_5_59)))
 (let ((?x2496 (* l_0_5_58 l_0_5_58)))
 (let ((?x2494 (* l_0_5_57 l_0_5_57)))
 (let ((?x2492 (* l_0_5_56 l_0_5_56)))
 (let ((?x3631 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x3628 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x3625 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (let ((?x3622 (* (* 2.0 l_0_5_37) l_0_5_41)))
 (let ((?x2901 (* 2.0 l_0_5_25)))
 (let ((?x3617 (* ?x2901 l_0_5_29)))
 (let ((?x2898 (* 2.0 l_0_5_24)))
 (let ((?x3615 (* ?x2898 l_0_5_28)))
 (let ((?x2895 (* 2.0 l_0_5_23)))
 (let ((?x3613 (* ?x2895 l_0_5_27)))
 (let ((?x3611 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x3925 (- (- (- (- (+ (+ (+ ?x3611 ?x3613) ?x3615) ?x3617) ?x3622) ?x3625) ?x3628) ?x3631)))
 (let ((?x3932 (- (- (+ (+ (+ (+ (+ ?x3925 ?x2492) ?x2494) ?x2496) ?x2498) ?x2500) ?x2502) ?x2504)))
 (let ((?x3939 (- (- (- (- (- (- (- ?x3932 ?x2506) ?x2508) ?x2510) ?x1872) ?x1874) ?x1876) ?x1878)))
 (= (- ?x3939 ?x1880) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x3219 (* l_0_5_45 l_0_5_45)))
 (let ((?x3216 (* l_0_5_44 l_0_5_44)))
 (let ((?x3213 (* l_0_5_43 l_0_5_43)))
 (let ((?x3210 (* l_0_5_42 l_0_5_42)))
 (let ((?x3207 (* l_0_5_41 l_0_5_41)))
 (let ((?x3273 (* l_0_5_30 l_0_5_30)))
 (let ((?x3267 (* l_0_5_29 l_0_5_29)))
 (let ((?x3261 (* l_0_5_28 l_0_5_28)))
 (let ((?x3985 (+ (+ (+ (* l_0_5_26 l_0_5_26) (* l_0_5_27 l_0_5_27)) ?x3261) ?x3267)))
 (= (- (- (- (- (- (+ ?x3985 ?x3273) ?x3207) ?x3210) ?x3213) ?x3216) ?x3219) 0.0)))))))))))
(assert
 (let ((?x1755 (* l_0_5_85 l_0_5_85)))
 (let ((?x1753 (* l_0_5_84 l_0_5_84)))
 (let ((?x1751 (* l_0_5_83 l_0_5_83)))
 (let ((?x1749 (* l_0_5_82 l_0_5_82)))
 (let ((?x2405 (* l_0_5_70 l_0_5_70)))
 (let ((?x2402 (* l_0_5_69 l_0_5_69)))
 (let ((?x2400 (* l_0_5_68 l_0_5_68)))
 (let ((?x2398 (* l_0_5_67 l_0_5_67)))
 (let ((?x2396 (* l_0_5_55 l_0_5_55)))
 (let ((?x2394 (* l_0_5_54 l_0_5_54)))
 (let ((?x4008 (+ (+ (+ (* l_0_5_52 l_0_5_52) (* l_0_5_53 l_0_5_53)) ?x2394) ?x2396)))
 (let ((?x4015 (- (- (- (- (- (- (- ?x4008 ?x2398) ?x2400) ?x2402) ?x2405) ?x1749) ?x1751) ?x1753)))
 (= (- ?x4015 ?x1755) 0.0))))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_91 0.0))
(assert
 (>= l_0_5_93 0.0))
(assert
 (>= l_0_5_96 0.0))
(assert
 (>= l_0_5_100 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (let ((?x4089 (* l_0_6_78 l_0_6_78)))
 (let ((?x4087 (* l_0_6_77 l_0_6_77)))
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4085 (* ?x4084 l_0_6_62)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4082 (* ?x4081 l_0_6_47)))
 (let ((?x4078 (* 2.0 l_0_6_31)))
 (let ((?x4079 (* ?x4078 l_0_6_32)))
 (let ((?x4076 (* l_0_6_3 l_0_6_3)))
 (let ((?x4077 (- (- (* (* (- 2.0) l_0_6_16) l_0_6_17) (* l_0_6_2 l_0_6_2)) ?x4076)))
 (let ((?x4093 (- (- (- (+ (- (+ ?x4077 ?x4079) ?x4082) ?x4085) ?x4087) ?x4089) (* (* 2.0 l_0_6_91) l_0_6_92))))
 (= (+ ?x4093 1.0) 0.0)))))))))))))
(assert
 (let ((?x4206 (* l_0_6_96 l_0_6_96)))
 (let ((?x4204 (* l_0_6_95 l_0_6_95)))
 (let ((?x4202 (* l_0_6_94 l_0_6_94)))
 (let ((?x4191 (* l_0_6_63 l_0_6_63)))
 (let ((?x4186 (* l_0_6_62 l_0_6_62)))
 (let ((?x4172 (* l_0_6_48 l_0_6_48)))
 (let ((?x4167 (* l_0_6_47 l_0_6_47)))
 (let ((?x4076 (* l_0_6_3 l_0_6_3)))
 (let ((?x4074 (* l_0_6_2 l_0_6_2)))
 (let ((?x4137 (- (* (* (- 4.0) l_0_6_17) l_0_6_19) (* (* 4.0 l_0_6_18) l_0_6_20))))
 (let ((?x4144 (- (+ (- ?x4137 (* (* 1.0 l_0_6_19) l_0_6_19)) ?x4074) (* (* 1.0 l_0_6_20) l_0_6_20))))
 (let ((?x4151 (+ (+ (- ?x4144 (* (* 1.0 l_0_6_21) l_0_6_21)) ?x4076) (* (* 4.0 l_0_6_32) l_0_6_34))))
 (let ((?x4157 (+ (+ ?x4151 (* (* 4.0 l_0_6_33) l_0_6_35)) (* 1.0 (* l_0_6_34 l_0_6_34)))))
 (let ((?x4163 (+ (+ ?x4157 (* 1.0 (* l_0_6_35 l_0_6_35))) (* 1.0 (* l_0_6_36 l_0_6_36)))))
 (let ((?x4171 (- (- (- ?x4163 (* (* 4.0 l_0_6_47) l_0_6_49)) ?x4167) (* (* 4.0 l_0_6_48) l_0_6_50))))
 (let ((?x4179 (- (- (- ?x4171 ?x4172) (* (* 1.0 l_0_6_49) l_0_6_49)) (* (* 1.0 l_0_6_50) l_0_6_50))))
 (let ((?x4185 (+ (- ?x4179 (* (* 1.0 l_0_6_51) l_0_6_51)) (* (* 4.0 l_0_6_62) l_0_6_64))))
 (let ((?x4195 (+ (+ (+ (+ ?x4185 ?x4186) (* (* 4.0 l_0_6_63) l_0_6_65)) ?x4191) (* 1.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x4201 (+ (+ ?x4195 (* 1.0 (* l_0_6_65 l_0_6_65))) (* 1.0 (* l_0_6_66 l_0_6_66)))))
 (= (- (- (- (- ?x4201 ?x4202) ?x4204) ?x4206) 1.0) 0.0)))))))))))))))))))))
(assert
 (let ((?x4320 (* 2.0 l_0_6_63)))
 (let ((?x4321 (* ?x4320 l_0_6_65)))
 (let ((?x4315 (* 2.0 l_0_6_62)))
 (let ((?x4316 (* ?x4315 l_0_6_64)))
 (let ((?x4310 (* 2.0 l_0_6_48)))
 (let ((?x4311 (* ?x4310 l_0_6_50)))
 (let ((?x4305 (* 2.0 l_0_6_47)))
 (let ((?x4306 (* ?x4305 l_0_6_49)))
 (let ((?x4299 (* 2.0 l_0_6_33)))
 (let ((?x4300 (* ?x4299 l_0_6_35)))
 (let ((?x4293 (* 2.0 l_0_6_32)))
 (let ((?x4294 (* ?x4293 l_0_6_34)))
 (let ((?x4288 (* 2.0 l_0_6_18)))
 (let ((?x4289 (* ?x4288 l_0_6_20)))
 (let ((?x4287 (- (* (* (- 2.0) l_0_6_17) l_0_6_19) (* (* 2.0 l_0_6_17) l_0_6_17))))
 (let ((?x4298 (+ (+ (- (- ?x4287 ?x4289) (* ?x4288 l_0_6_18)) ?x4294) (* 2.0 (* l_0_6_32 l_0_6_32)))))
 (let ((?x4309 (- (- (+ (+ ?x4298 ?x4300) (* 2.0 (* l_0_6_33 l_0_6_33))) ?x4306) (* ?x4305 l_0_6_47))))
 (let ((?x4319 (+ (+ (- (- ?x4309 ?x4311) (* ?x4310 l_0_6_48)) ?x4316) (* 2.0 (* l_0_6_62 l_0_6_62)))))
 (let ((?x4327 (- (+ (+ ?x4319 ?x4321) (* 2.0 (* l_0_6_63 l_0_6_63))) (* (* 2.0 l_0_6_92) l_0_6_94))))
 (= (- (- ?x4327 (* (* 2.0 l_0_6_93) l_0_6_95)) 2.0) 0.0)))))))))))))))))))))
(assert
 (let ((?x4424 (* l_0_6_93 l_0_6_93)))
 (let ((?x4422 (* l_0_6_92 l_0_6_92)))
 (let ((?x4407 (- (* (* (- 1.0) l_0_6_17) l_0_6_17) (* (* 1.0 l_0_6_18) l_0_6_18))))
 (let ((?x4411 (+ (+ ?x4407 (* 1.0 (* l_0_6_32 l_0_6_32))) (* 1.0 (* l_0_6_33 l_0_6_33)))))
 (let ((?x4417 (- (- ?x4411 (* (* 1.0 l_0_6_47) l_0_6_47)) (* (* 1.0 l_0_6_48) l_0_6_48))))
 (let ((?x4421 (+ (+ ?x4417 (* 1.0 (* l_0_6_62 l_0_6_62))) (* 1.0 (* l_0_6_63 l_0_6_63)))))
 (= (- (- (- ?x4421 ?x4422) ?x4424) 1.0) 0.0))))))))
(assert
 (= (- (* (- l_0_6_1) l_0_6_1) (* l_0_6_76 l_0_6_76)) 0.0))
(assert
 (let ((?x4481 (* l_0_6_91 l_0_6_91)))
 (let ((?x4478 (* 2.0 l_0_6_76)))
 (let ((?x4479 (* ?x4478 l_0_6_77)))
 (let ((?x4468 (- (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 1.0 l_0_6_16) l_0_6_16))))
 (let ((?x4474 (- (+ ?x4468 (* 1.0 (* l_0_6_31 l_0_6_31))) (* (* 1.0 l_0_6_46) l_0_6_46))))
 (= (- (- (+ ?x4474 (* 1.0 (* l_0_6_61 l_0_6_61))) ?x4479) ?x4481) 0.0)))))))
(assert
 (let ((?x4478 (* 2.0 l_0_6_76)))
 (let ((?x4515 (* ?x4478 l_0_6_79)))
 (let ((?x4475 (* l_0_6_61 l_0_6_61)))
 (let ((?x4513 (* 2.0 ?x4475)))
 (let ((?x4469 (* l_0_6_31 l_0_6_31)))
 (let ((?x4509 (* 2.0 ?x4469)))
 (let ((?x4508 (- (* (* (- 2.0) l_0_6_1) l_0_6_4) (* (* 2.0 l_0_6_16) l_0_6_16))))
 (let ((?x4516 (- (+ (- (+ ?x4508 ?x4509) (* (* 2.0 l_0_6_46) l_0_6_46)) ?x4513) ?x4515)))
 (= ?x4516 0.0))))))))))
(assert
 (let ((?x4453 (* l_0_6_76 l_0_6_76)))
 (let ((?x4478 (* 2.0 l_0_6_76)))
 (let ((?x4542 (* ?x4478 l_0_6_82)))
 (let ((?x4475 (* l_0_6_61 l_0_6_61)))
 (let ((?x4541 (- (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) (* l_0_6_46 l_0_6_46)) ?x4475)))
 (= (+ (- ?x4541 ?x4542) ?x4453) 0.0)))))))
(assert
 (let ((?x4478 (* 2.0 l_0_6_76)))
 (let ((?x4563 (* ?x4478 l_0_6_86)))
 (let ((?x4469 (* l_0_6_31 l_0_6_31)))
 (let ((?x4562 (- (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) (* l_0_6_16 l_0_6_16)) ?x4469)))
 (= (- ?x4562 ?x4563) 0.0))))))
(assert
 (let ((?x4609 (* 2.0 l_0_6_78)))
 (let ((?x4610 (* ?x4609 l_0_6_80)))
 (let ((?x4606 (* 2.0 l_0_6_77)))
 (let ((?x4607 (* ?x4606 l_0_6_79)))
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4604 (* ?x4084 l_0_6_64)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4599 (* ?x4081 l_0_6_49)))
 (let ((?x4078 (* 2.0 l_0_6_31)))
 (let ((?x4594 (* ?x4078 l_0_6_34)))
 (let ((?x4588 (* 2.0 l_0_6_3)))
 (let ((?x4589 (* ?x4588 l_0_6_5)))
 (let ((?x4585 (* 2.0 l_0_6_2)))
 (let ((?x4586 (* ?x4585 l_0_6_4)))
 (let ((?x4506 (* 2.0 l_0_6_16)))
 (let ((?x4583 (* ?x4506 l_0_6_19)))
 (let ((?x4593 (+ (- (- (- (* (* (- 4.0) l_0_6_16) l_0_6_17) ?x4583) ?x4586) ?x4589) (* (* 4.0 l_0_6_31) l_0_6_32))))
 (let ((?x4603 (+ (- (- (+ ?x4593 ?x4594) (* (* 4.0 l_0_6_46) l_0_6_47)) ?x4599) (* (* 4.0 l_0_6_61) l_0_6_62))))
 (let ((?x4613 (- (- (- (+ ?x4603 ?x4604) ?x4607) ?x4610) (* (* 2.0 l_0_6_91) l_0_6_94))))
 (= ?x4613 0.0)))))))))))))))))))))
(assert
 (let ((?x4609 (* 2.0 l_0_6_78)))
 (let ((?x4694 (* ?x4609 l_0_6_83)))
 (let ((?x4606 (* 2.0 l_0_6_77)))
 (let ((?x4692 (* ?x4606 l_0_6_82)))
 (let ((?x4478 (* 2.0 l_0_6_76)))
 (let ((?x4479 (* ?x4478 l_0_6_77)))
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4689 (* ?x4084 l_0_6_67)))
 (let ((?x4085 (* ?x4084 l_0_6_62)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4686 (* ?x4081 l_0_6_52)))
 (let ((?x4082 (* ?x4081 l_0_6_47)))
 (let ((?x4078 (* 2.0 l_0_6_31)))
 (let ((?x4683 (* ?x4078 l_0_6_37)))
 (let ((?x4588 (* 2.0 l_0_6_3)))
 (let ((?x4681 (* ?x4588 l_0_6_8)))
 (let ((?x4585 (* 2.0 l_0_6_2)))
 (let ((?x4679 (* ?x4585 l_0_6_7)))
 (let ((?x4685 (+ (+ (- (- (* (* (- 2.0) l_0_6_16) l_0_6_22) ?x4679) ?x4681) ?x4683) ?x4082)))
 (let ((?x4697 (- (- (- (+ (+ (- (- ?x4685 ?x4686) ?x4085) ?x4689) ?x4479) ?x4692) ?x4694) (* (* 2.0 l_0_6_91) l_0_6_97))))
 (= ?x4697 0.0))))))))))))))))))))))
(assert
 (let ((?x4609 (* 2.0 l_0_6_78)))
 (let ((?x4768 (* ?x4609 l_0_6_87)))
 (let ((?x4606 (* 2.0 l_0_6_77)))
 (let ((?x4766 (* ?x4606 l_0_6_86)))
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4764 (* ?x4084 l_0_6_71)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4762 (* ?x4081 l_0_6_56)))
 (let ((?x4078 (* 2.0 l_0_6_31)))
 (let ((?x4760 (* ?x4078 l_0_6_41)))
 (let ((?x4079 (* ?x4078 l_0_6_32)))
 (let ((?x4506 (* 2.0 l_0_6_16)))
 (let ((?x4757 (* ?x4506 l_0_6_26)))
 (let ((?x4752 (* 2.0 l_0_6_12)))
 (let ((?x4753 (* ?x4752 l_0_6_3)))
 (let ((?x4749 (* 2.0 l_0_6_11)))
 (let ((?x4750 (* ?x4749 l_0_6_2)))
 (let ((?x4756 (+ (- (- (* (* (- 2.0) l_0_6_101) l_0_6_91) ?x4750) ?x4753) (* ?x4506 l_0_6_17))))
 (let ((?x4769 (- (- (+ (- (+ (- (- ?x4756 ?x4757) ?x4079) ?x4760) ?x4762) ?x4764) ?x4766) ?x4768)))
 (= ?x4769 0.0)))))))))))))))))))))
(assert
 (let ((?x4843 (* l_0_6_81 l_0_6_81)))
 (let ((?x4841 (* l_0_6_80 l_0_6_80)))
 (let ((?x4839 (* l_0_6_79 l_0_6_79)))
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4085 (* ?x4084 l_0_6_62)))
 (let ((?x4834 (* l_0_6_6 l_0_6_6)))
 (let ((?x4832 (* l_0_6_5 l_0_6_5)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4082 (* ?x4081 l_0_6_47)))
 (let ((?x4827 (* l_0_6_4 l_0_6_4)))
 (let ((?x4824 (- (* (* 2.0 l_0_6_1) l_0_6_2) (* (* 4.0 l_0_6_16) l_0_6_19))))
 (let ((?x4831 (- (- (- (+ ?x4824 (* (* 4.0 l_0_6_31) l_0_6_34)) ?x4827) ?x4082) (* (* 4.0 l_0_6_46) l_0_6_49))))
 (let ((?x4838 (+ (+ (- (- ?x4831 ?x4832) ?x4834) ?x4085) (* (* 4.0 l_0_6_61) l_0_6_64))))
 (= (- (- (- ?x4838 ?x4839) ?x4841) ?x4843) 0.0)))))))))))))))
(assert
 (let ((?x4910 (* 2.0 l_0_6_81)))
 (let ((?x4911 (* ?x4910 l_0_6_84)))
 (let ((?x4907 (* 2.0 l_0_6_80)))
 (let ((?x4908 (* ?x4907 l_0_6_83)))
 (let ((?x4904 (* 2.0 l_0_6_79)))
 (let ((?x4905 (* ?x4904 l_0_6_82)))
 (let ((?x4478 (* 2.0 l_0_6_76)))
 (let ((?x4515 (* ?x4478 l_0_6_79)))
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4604 (* ?x4084 l_0_6_64)))
 (let ((?x4898 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x4895 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4599 (* ?x4081 l_0_6_49)))
 (let ((?x4889 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x4887 (+ (* (* (- 4.0) l_0_6_16) l_0_6_22) (* (* 4.0 l_0_6_31) l_0_6_37))))
 (let ((?x4896 (- (- (+ (- ?x4887 ?x4889) ?x4599) (* (* 4.0 l_0_6_46) l_0_6_52)) ?x4895)))
 (let ((?x4903 (+ (+ (- (- ?x4896 ?x4898) ?x4604) (* (* 4.0 l_0_6_61) l_0_6_67)) ?x4515)))
 (= (- (- (- ?x4903 ?x4905) ?x4908) ?x4911) 0.0))))))))))))))))))))
(assert
 (let ((?x4910 (* 2.0 l_0_6_81)))
 (let ((?x4986 (* ?x4910 l_0_6_88)))
 (let ((?x4907 (* 2.0 l_0_6_80)))
 (let ((?x4984 (* ?x4907 l_0_6_87)))
 (let ((?x4904 (* 2.0 l_0_6_79)))
 (let ((?x4982 (* ?x4904 l_0_6_86)))
 (let ((?x4078 (* 2.0 l_0_6_31)))
 (let ((?x4594 (* ?x4078 l_0_6_34)))
 (let ((?x4506 (* 2.0 l_0_6_16)))
 (let ((?x4583 (* ?x4506 l_0_6_19)))
 (let ((?x4969 (* 2.0 l_0_6_13)))
 (let ((?x4970 (* ?x4969 l_0_6_6)))
 (let ((?x4752 (* 2.0 l_0_6_12)))
 (let ((?x4967 (* ?x4752 l_0_6_5)))
 (let ((?x4974 (- (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x4967) ?x4970) ?x4583) (* (* 4.0 l_0_6_16) l_0_6_26))))
 (let ((?x4979 (- (+ (- ?x4974 ?x4594) (* (* 4.0 l_0_6_31) l_0_6_41)) (* (* 4.0 l_0_6_46) l_0_6_56))))
 (let ((?x4987 (- (- (- (+ ?x4979 (* (* 4.0 l_0_6_61) l_0_6_71)) ?x4982) ?x4984) ?x4986)))
 (= ?x4987 0.0)))))))))))))))))))
(assert
 (let ((?x5057 (* l_0_6_9 l_0_6_9)))
 (let ((?x5055 (* l_0_6_85 l_0_6_85)))
 (let ((?x5053 (* l_0_6_84 l_0_6_84)))
 (let ((?x5051 (* l_0_6_83 l_0_6_83)))
 (let ((?x5049 (* l_0_6_82 l_0_6_82)))
 (let ((?x5047 (* l_0_6_8 l_0_6_8)))
 (let ((?x4478 (* 2.0 l_0_6_76)))
 (let ((?x4542 (* ?x4478 l_0_6_82)))
 (let ((?x5044 (* l_0_6_7 l_0_6_7)))
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4689 (* ?x4084 l_0_6_67)))
 (let ((?x5043 (- (+ (* (- l_0_6_10) l_0_6_10) (* (* 2.0 l_0_6_46) l_0_6_52)) ?x4689)))
 (let ((?x5056 (- (- (- (- (- (+ (- ?x5043 ?x5044) ?x4542) ?x5047) ?x5049) ?x5051) ?x5053) ?x5055)))
 (= (- ?x5056 ?x5057) 0.0)))))))))))))))
(assert
 (let ((?x5115 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x5112 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x5109 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x5106 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x4478 (* 2.0 l_0_6_76)))
 (let ((?x4563 (* ?x4478 l_0_6_86)))
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4764 (* ?x4084 l_0_6_71)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4762 (* ?x4081 l_0_6_56)))
 (let ((?x4078 (* 2.0 l_0_6_31)))
 (let ((?x4683 (* ?x4078 l_0_6_37)))
 (let ((?x4969 (* 2.0 l_0_6_13)))
 (let ((?x5097 (* ?x4969 l_0_6_9)))
 (let ((?x4752 (* 2.0 l_0_6_12)))
 (let ((?x5095 (* ?x4752 l_0_6_8)))
 (let ((?x4749 (* 2.0 l_0_6_11)))
 (let ((?x5093 (* ?x4749 l_0_6_7)))
 (let ((?x5100 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x5093) ?x5095) ?x5097) (* (* 2.0 l_0_6_16) l_0_6_22))))
 (let ((?x5113 (- (- (- (+ (- (+ (- ?x5100 ?x4683) ?x4762) ?x4764) ?x4563) ?x5106) ?x5109) ?x5112)))
 (= (- ?x5113 ?x5115) 0.0))))))))))))))))))))))
(assert
 (let ((?x5195 (* l_0_6_90 l_0_6_90)))
 (let ((?x5193 (* l_0_6_89 l_0_6_89)))
 (let ((?x5191 (* l_0_6_88 l_0_6_88)))
 (let ((?x5189 (* l_0_6_87 l_0_6_87)))
 (let ((?x5187 (* l_0_6_86 l_0_6_86)))
 (let ((?x4078 (* 2.0 l_0_6_31)))
 (let ((?x4760 (* ?x4078 l_0_6_41)))
 (let ((?x4506 (* 2.0 l_0_6_16)))
 (let ((?x4757 (* ?x4506 l_0_6_26)))
 (let ((?x5183 (* l_0_6_15 l_0_6_15)))
 (let ((?x5181 (* l_0_6_14 l_0_6_14)))
 (let ((?x5179 (* l_0_6_13 l_0_6_13)))
 (let ((?x5182 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x5179) ?x5181)))
 (let ((?x5194 (- (- (- (- (- (+ (- ?x5182 ?x5183) ?x4757) ?x4760) ?x5187) ?x5189) ?x5191) ?x5193)))
 (= (- ?x5194 ?x5195) 0.0))))))))))))))))
(assert
 (let ((?x4475 (* l_0_6_61 l_0_6_61)))
 (= (+ (- (* l_0_6_1 l_0_6_1) (* l_0_6_46 l_0_6_46)) ?x4475) 0.0)))
(assert
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4604 (* ?x4084 l_0_6_64)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4599 (* ?x4081 l_0_6_49)))
 (= (+ (- (* (* 2.0 l_0_6_1) l_0_6_4) ?x4599) ?x4604) 0.0))))))
(assert
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4689 (* ?x4084 l_0_6_67)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4686 (* ?x4081 l_0_6_52)))
 (= (+ (- (* (* 2.0 l_0_6_1) l_0_6_7) ?x4686) ?x4689) 0.0))))))
(assert
 (let ((?x4084 (* 2.0 l_0_6_61)))
 (let ((?x4764 (* ?x4084 l_0_6_71)))
 (let ((?x4081 (* 2.0 l_0_6_46)))
 (let ((?x4762 (* ?x4081 l_0_6_56)))
 (= (+ (- (* (* 2.0 l_0_6_1) l_0_6_11) ?x4762) ?x4764) 0.0))))))
(assert
 (let ((?x4199 (* l_0_6_66 l_0_6_66)))
 (let ((?x5299 (* 2.0 ?x4199)))
 (let ((?x4196 (* l_0_6_65 l_0_6_65)))
 (let ((?x5297 (* 2.0 ?x4196)))
 (let ((?x4193 (* l_0_6_64 l_0_6_64)))
 (let ((?x5295 (* 2.0 ?x4193)))
 (let ((?x4320 (* 2.0 l_0_6_63)))
 (let ((?x4321 (* ?x4320 l_0_6_65)))
 (let ((?x4315 (* 2.0 l_0_6_62)))
 (let ((?x4316 (* ?x4315 l_0_6_64)))
 (let ((?x4310 (* 2.0 l_0_6_48)))
 (let ((?x4311 (* ?x4310 l_0_6_50)))
 (let ((?x4305 (* 2.0 l_0_6_47)))
 (let ((?x4306 (* ?x4305 l_0_6_49)))
 (let ((?x4161 (* l_0_6_36 l_0_6_36)))
 (let ((?x5280 (* 2.0 ?x4161)))
 (let ((?x4158 (* l_0_6_35 l_0_6_35)))
 (let ((?x5278 (* 2.0 ?x4158)))
 (let ((?x4155 (* l_0_6_34 l_0_6_34)))
 (let ((?x5276 (* 2.0 ?x4155)))
 (let ((?x4588 (* 2.0 l_0_6_3)))
 (let ((?x4589 (* ?x4588 l_0_6_5)))
 (let ((?x4585 (* 2.0 l_0_6_2)))
 (let ((?x4586 (* ?x4585 l_0_6_4)))
 (let ((?x5271 (- (+ (* (* (- 2.0) l_0_6_19) l_0_6_19) ?x4586) (* (* 2.0 l_0_6_20) l_0_6_20))))
 (let ((?x5279 (+ (+ (+ (- ?x5271 (* (* 2.0 l_0_6_21) l_0_6_21)) ?x4589) ?x5276) ?x5278)))
 (let ((?x5286 (- (- (- (+ ?x5279 ?x5280) ?x4306) ?x4311) (* (* 2.0 l_0_6_49) l_0_6_49))))
 (let ((?x5292 (- (- ?x5286 (* (* 2.0 l_0_6_50) l_0_6_50)) (* (* 2.0 l_0_6_51) l_0_6_51))))
 (= (+ (+ (+ (+ (+ ?x5292 ?x4316) ?x4321) ?x5295) ?x5297) ?x5299) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x4843 (* l_0_6_81 l_0_6_81)))
 (let ((?x4841 (* l_0_6_80 l_0_6_80)))
 (let ((?x4839 (* l_0_6_79 l_0_6_79)))
 (let ((?x4199 (* l_0_6_66 l_0_6_66)))
 (let ((?x4196 (* l_0_6_65 l_0_6_65)))
 (let ((?x4193 (* l_0_6_64 l_0_6_64)))
 (let ((?x4320 (* 2.0 l_0_6_63)))
 (let ((?x5373 (* ?x4320 l_0_6_68)))
 (let ((?x4315 (* 2.0 l_0_6_62)))
 (let ((?x5371 (* ?x4315 l_0_6_67)))
 (let ((?x4262 (* l_0_6_51 l_0_6_51)))
 (let ((?x4258 (* l_0_6_50 l_0_6_50)))
 (let ((?x4254 (* l_0_6_49 l_0_6_49)))
 (let ((?x4310 (* 2.0 l_0_6_48)))
 (let ((?x5357 (* ?x4310 l_0_6_53)))
 (let ((?x4305 (* 2.0 l_0_6_47)))
 (let ((?x5355 (* ?x4305 l_0_6_52)))
 (let ((?x4588 (* 2.0 l_0_6_3)))
 (let ((?x4681 (* ?x4588 l_0_6_8)))
 (let ((?x4585 (* 2.0 l_0_6_2)))
 (let ((?x4679 (* ?x4585 l_0_6_7)))
 (let ((?x5341 (- (+ (* (* (- 4.0) l_0_6_19) l_0_6_22) ?x4679) (* (* 4.0 l_0_6_20) l_0_6_23))))
 (let ((?x5348 (+ (+ (- ?x5341 (* (* 4.0 l_0_6_21) l_0_6_24)) ?x4681) (* (* 4.0 l_0_6_34) l_0_6_37))))
 (let ((?x5354 (+ (+ ?x5348 (* (* 4.0 l_0_6_35) l_0_6_38)) (* (* 4.0 l_0_6_36) l_0_6_39))))
 (let ((?x5362 (+ (- (- (- ?x5354 ?x5355) ?x5357) (* (* 4.0 l_0_6_49) l_0_6_52)) ?x4254)))
 (let ((?x5369 (- (+ (- ?x5362 (* (* 4.0 l_0_6_50) l_0_6_53)) ?x4258) (* (* 4.0 l_0_6_51) l_0_6_54))))
 (let ((?x5377 (+ (+ (+ (+ ?x5369 ?x4262) ?x5371) ?x5373) (* (* 4.0 l_0_6_64) l_0_6_67))))
 (let ((?x5385 (+ (- (+ (- ?x5377 ?x4193) (* (* 4.0 l_0_6_65) l_0_6_68)) ?x4196) (* (* 4.0 l_0_6_66) l_0_6_69))))
 (= (+ (+ (+ (- ?x5385 ?x4199) ?x4839) ?x4841) ?x4843) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x4320 (* 2.0 l_0_6_63)))
 (let ((?x5510 (* ?x4320 l_0_6_72)))
 (let ((?x4315 (* 2.0 l_0_6_62)))
 (let ((?x5508 (* ?x4315 l_0_6_71)))
 (let ((?x4310 (* 2.0 l_0_6_48)))
 (let ((?x5500 (* ?x4310 l_0_6_57)))
 (let ((?x4305 (* 2.0 l_0_6_47)))
 (let ((?x5498 (* ?x4305 l_0_6_56)))
 (let ((?x4161 (* l_0_6_36 l_0_6_36)))
 (let ((?x4158 (* l_0_6_35 l_0_6_35)))
 (let ((?x4155 (* l_0_6_34 l_0_6_34)))
 (let ((?x4227 (* l_0_6_21 l_0_6_21)))
 (let ((?x4223 (* l_0_6_20 l_0_6_20)))
 (let ((?x4218 (* l_0_6_19 l_0_6_19)))
 (let ((?x4752 (* 2.0 l_0_6_12)))
 (let ((?x4753 (* ?x4752 l_0_6_3)))
 (let ((?x4749 (* 2.0 l_0_6_11)))
 (let ((?x4750 (* ?x4749 l_0_6_2)))
 (let ((?x5484 (- (+ (- (+ ?x4750 ?x4753) (* (* 4.0 l_0_6_19) l_0_6_26)) ?x4218) (* (* 4.0 l_0_6_20) l_0_6_27))))
 (let ((?x5490 (+ (+ (- (+ ?x5484 ?x4223) (* (* 4.0 l_0_6_21) l_0_6_28)) ?x4227) (* (* 4.0 l_0_6_34) l_0_6_41))))
 (let ((?x5496 (+ (- (+ (- ?x5490 ?x4155) (* (* 4.0 l_0_6_35) l_0_6_42)) ?x4158) (* (* 4.0 l_0_6_36) l_0_6_43))))
 (let ((?x5503 (- (- (- (- ?x5496 ?x4161) ?x5498) ?x5500) (* (* 4.0 l_0_6_49) l_0_6_56))))
 (let ((?x5507 (- (- ?x5503 (* (* 4.0 l_0_6_50) l_0_6_57)) (* (* 4.0 l_0_6_51) l_0_6_58))))
 (let ((?x5515 (+ (+ (+ (+ ?x5507 ?x5508) ?x5510) (* (* 4.0 l_0_6_64) l_0_6_71)) (* (* 4.0 l_0_6_65) l_0_6_72))))
 (= (+ ?x5515 (* (* 4.0 l_0_6_66) l_0_6_73)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x4199 (* l_0_6_66 l_0_6_66)))
 (let ((?x4196 (* l_0_6_65 l_0_6_65)))
 (let ((?x4193 (* l_0_6_64 l_0_6_64)))
 (let ((?x4834 (* l_0_6_6 l_0_6_6)))
 (let ((?x4262 (* l_0_6_51 l_0_6_51)))
 (let ((?x4258 (* l_0_6_50 l_0_6_50)))
 (let ((?x4832 (* l_0_6_5 l_0_6_5)))
 (let ((?x5593 (- (+ (- (* l_0_6_4 l_0_6_4) (* l_0_6_49 l_0_6_49)) ?x4832) ?x4258)))
 (= (+ (+ (+ (+ (- ?x5593 ?x4262) ?x4834) ?x4193) ?x4196) ?x4199) 0.0))))))))))
(assert
 (let ((?x5635 (* 2.0 l_0_6_66)))
 (let ((?x5636 (* ?x5635 l_0_6_69)))
 (let ((?x5632 (* 2.0 l_0_6_65)))
 (let ((?x5633 (* ?x5632 l_0_6_68)))
 (let ((?x5629 (* 2.0 l_0_6_64)))
 (let ((?x5630 (* ?x5629 l_0_6_67)))
 (let ((?x4898 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x5290 (* 2.0 l_0_6_51)))
 (let ((?x5626 (* ?x5290 l_0_6_54)))
 (let ((?x5287 (* 2.0 l_0_6_50)))
 (let ((?x5624 (* ?x5287 l_0_6_53)))
 (let ((?x4895 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x5284 (* 2.0 l_0_6_49)))
 (let ((?x5621 (* ?x5284 l_0_6_52)))
 (let ((?x4889 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x5634 (+ (+ (+ (- (- (+ (- ?x4889 ?x5621) ?x4895) ?x5624) ?x5626) ?x4898) ?x5630) ?x5633)))
 (= (+ ?x5634 ?x5636) 0.0))))))))))))))))))
(assert
 (let ((?x5635 (* 2.0 l_0_6_66)))
 (let ((?x5673 (* ?x5635 l_0_6_73)))
 (let ((?x5632 (* 2.0 l_0_6_65)))
 (let ((?x5671 (* ?x5632 l_0_6_72)))
 (let ((?x5629 (* 2.0 l_0_6_64)))
 (let ((?x5669 (* ?x5629 l_0_6_71)))
 (let ((?x5290 (* 2.0 l_0_6_51)))
 (let ((?x5667 (* ?x5290 l_0_6_58)))
 (let ((?x5287 (* 2.0 l_0_6_50)))
 (let ((?x5665 (* ?x5287 l_0_6_57)))
 (let ((?x5284 (* 2.0 l_0_6_49)))
 (let ((?x5663 (* ?x5284 l_0_6_56)))
 (let ((?x4969 (* 2.0 l_0_6_13)))
 (let ((?x4970 (* ?x4969 l_0_6_6)))
 (let ((?x4752 (* 2.0 l_0_6_12)))
 (let ((?x4967 (* ?x4752 l_0_6_5)))
 (let ((?x5666 (- (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x4967) ?x4970) ?x5663) ?x5665)))
 (= (+ (+ (+ (- ?x5666 ?x5667) ?x5669) ?x5671) ?x5673) 0.0)))))))))))))))))))
(assert
 (let ((?x5057 (* l_0_6_9 l_0_6_9)))
 (let ((?x5047 (* l_0_6_8 l_0_6_8)))
 (let ((?x5713 (* l_0_6_70 l_0_6_70)))
 (let ((?x5044 (* l_0_6_7 l_0_6_7)))
 (let ((?x5710 (* l_0_6_69 l_0_6_69)))
 (let ((?x5708 (* l_0_6_68 l_0_6_68)))
 (let ((?x5706 (* l_0_6_67 l_0_6_67)))
 (let ((?x5704 (* l_0_6_55 l_0_6_55)))
 (let ((?x5702 (* l_0_6_54 l_0_6_54)))
 (let ((?x5700 (* l_0_6_53 l_0_6_53)))
 (let ((?x5703 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_52 l_0_6_52)) ?x5700) ?x5702)))
 (let ((?x5715 (+ (+ (+ (+ (+ (+ (- ?x5703 ?x5704) ?x5706) ?x5708) ?x5710) ?x5044) ?x5713) ?x5047)))
 (= (+ ?x5715 ?x5057) 0.0))))))))))))))
(assert
 (let ((?x5758 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x5755 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x5752 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x5749 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x5745 (* 2.0 l_0_6_55)))
 (let ((?x5746 (* ?x5745 l_0_6_59)))
 (let ((?x5742 (* 2.0 l_0_6_54)))
 (let ((?x5743 (* ?x5742 l_0_6_58)))
 (let ((?x5739 (* 2.0 l_0_6_53)))
 (let ((?x5740 (* ?x5739 l_0_6_57)))
 (let ((?x5736 (* 2.0 l_0_6_52)))
 (let ((?x5737 (* ?x5736 l_0_6_56)))
 (let ((?x4969 (* 2.0 l_0_6_13)))
 (let ((?x5097 (* ?x4969 l_0_6_9)))
 (let ((?x4752 (* 2.0 l_0_6_12)))
 (let ((?x5095 (* ?x4752 l_0_6_8)))
 (let ((?x4749 (* 2.0 l_0_6_11)))
 (let ((?x5093 (* ?x4749 l_0_6_7)))
 (let ((?x5738 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x5093) ?x5095) ?x5097) ?x5737)))
 (let ((?x5759 (+ (+ (+ (+ (- (- (- ?x5738 ?x5740) ?x5743) ?x5746) ?x5749) ?x5752) ?x5755) ?x5758)))
 (= ?x5759 0.0))))))))))))))))))))))
(assert
 (let ((?x5819 (* l_0_6_75 l_0_6_75)))
 (let ((?x5817 (* l_0_6_74 l_0_6_74)))
 (let ((?x5815 (* l_0_6_73 l_0_6_73)))
 (let ((?x5813 (* l_0_6_72 l_0_6_72)))
 (let ((?x5811 (* l_0_6_71 l_0_6_71)))
 (let ((?x5809 (* l_0_6_60 l_0_6_60)))
 (let ((?x5807 (* l_0_6_59 l_0_6_59)))
 (let ((?x5805 (* l_0_6_58 l_0_6_58)))
 (let ((?x5803 (* l_0_6_57 l_0_6_57)))
 (let ((?x5801 (* l_0_6_56 l_0_6_56)))
 (let ((?x5183 (* l_0_6_15 l_0_6_15)))
 (let ((?x5181 (* l_0_6_14 l_0_6_14)))
 (let ((?x5179 (* l_0_6_13 l_0_6_13)))
 (let ((?x5799 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x5179) ?x5181)))
 (let ((?x5812 (+ (- (- (- (- (- (+ ?x5799 ?x5183) ?x5801) ?x5803) ?x5805) ?x5807) ?x5809) ?x5811)))
 (= (+ (+ (+ (+ ?x5812 ?x5813) ?x5815) ?x5817) ?x5819) 0.0)))))))))))))))))
(assert
 (let ((?x4609 (* 2.0 l_0_6_78)))
 (let ((?x4610 (* ?x4609 l_0_6_80)))
 (let ((?x4606 (* 2.0 l_0_6_77)))
 (let ((?x4607 (* ?x4606 l_0_6_79)))
 (let ((?x5635 (* 2.0 l_0_6_66)))
 (let ((?x5636 (* ?x5635 l_0_6_69)))
 (let ((?x5632 (* 2.0 l_0_6_65)))
 (let ((?x5633 (* ?x5632 l_0_6_68)))
 (let ((?x5629 (* 2.0 l_0_6_64)))
 (let ((?x5630 (* ?x5629 l_0_6_67)))
 (let ((?x4320 (* 2.0 l_0_6_63)))
 (let ((?x4321 (* ?x4320 l_0_6_65)))
 (let ((?x4315 (* 2.0 l_0_6_62)))
 (let ((?x4316 (* ?x4315 l_0_6_64)))
 (let ((?x5290 (* 2.0 l_0_6_51)))
 (let ((?x5626 (* ?x5290 l_0_6_54)))
 (let ((?x5287 (* 2.0 l_0_6_50)))
 (let ((?x5624 (* ?x5287 l_0_6_53)))
 (let ((?x5284 (* 2.0 l_0_6_49)))
 (let ((?x5621 (* ?x5284 l_0_6_52)))
 (let ((?x4310 (* 2.0 l_0_6_48)))
 (let ((?x4311 (* ?x4310 l_0_6_50)))
 (let ((?x4305 (* 2.0 l_0_6_47)))
 (let ((?x4306 (* ?x4305 l_0_6_49)))
 (let ((?x5860 (* 2.0 l_0_6_36)))
 (let ((?x5861 (* ?x5860 l_0_6_39)))
 (let ((?x5857 (* 2.0 l_0_6_35)))
 (let ((?x5858 (* ?x5857 l_0_6_38)))
 (let ((?x5854 (* 2.0 l_0_6_34)))
 (let ((?x5855 (* ?x5854 l_0_6_37)))
 (let ((?x5272 (* 2.0 l_0_6_21)))
 (let ((?x5848 (* ?x5272 l_0_6_24)))
 (let ((?x5269 (* 2.0 l_0_6_20)))
 (let ((?x5846 (* ?x5269 l_0_6_23)))
 (let ((?x5843 (* 2.0 l_0_6_19)))
 (let ((?x5844 (* ?x5843 l_0_6_22)))
 (let ((?x5842 (- (* (* (- 4.0) l_0_6_17) l_0_6_22) (* (* 4.0 l_0_6_18) l_0_6_23))))
 (let ((?x5851 (+ (- (- (- ?x5842 ?x5844) ?x5846) ?x5848) (* (* 4.0 l_0_6_32) l_0_6_37))))
 (let ((?x5862 (+ (+ (+ (+ ?x5851 (* (* 4.0 l_0_6_33) l_0_6_38)) ?x5855) ?x5858) ?x5861)))
 (let ((?x5868 (- (+ (- (+ ?x5862 ?x4306) (* (* 4.0 l_0_6_47) l_0_6_52)) ?x4311) (* (* 4.0 l_0_6_48) l_0_6_53))))
 (let ((?x5874 (+ (- (- (- (- ?x5868 ?x5621) ?x5624) ?x5626) ?x4316) (* (* 4.0 l_0_6_62) l_0_6_67))))
 (let ((?x5879 (+ (+ (+ (- ?x5874 ?x4321) (* (* 4.0 l_0_6_63) l_0_6_68)) ?x5630) ?x5633)))
 (let ((?x5885 (- (+ (+ (+ ?x5879 ?x5636) ?x4607) ?x4610) (* (* 2.0 l_0_6_94) l_0_6_97))))
 (let ((?x5891 (- (- ?x5885 (* (* 2.0 l_0_6_95) l_0_6_98)) (* (* 2.0 l_0_6_96) l_0_6_99))))
 (= ?x5891 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5635 (* 2.0 l_0_6_66)))
 (let ((?x5673 (* ?x5635 l_0_6_73)))
 (let ((?x5632 (* 2.0 l_0_6_65)))
 (let ((?x5671 (* ?x5632 l_0_6_72)))
 (let ((?x5629 (* 2.0 l_0_6_64)))
 (let ((?x5669 (* ?x5629 l_0_6_71)))
 (let ((?x5290 (* 2.0 l_0_6_51)))
 (let ((?x5667 (* ?x5290 l_0_6_58)))
 (let ((?x5287 (* 2.0 l_0_6_50)))
 (let ((?x5665 (* ?x5287 l_0_6_57)))
 (let ((?x5284 (* 2.0 l_0_6_49)))
 (let ((?x5663 (* ?x5284 l_0_6_56)))
 (let ((?x5860 (* 2.0 l_0_6_36)))
 (let ((?x6001 (* ?x5860 l_0_6_43)))
 (let ((?x5857 (* 2.0 l_0_6_35)))
 (let ((?x5999 (* ?x5857 l_0_6_42)))
 (let ((?x5854 (* 2.0 l_0_6_34)))
 (let ((?x5997 (* ?x5854 l_0_6_41)))
 (let ((?x4299 (* 2.0 l_0_6_33)))
 (let ((?x4300 (* ?x4299 l_0_6_35)))
 (let ((?x4293 (* 2.0 l_0_6_32)))
 (let ((?x4294 (* ?x4293 l_0_6_34)))
 (let ((?x5272 (* 2.0 l_0_6_21)))
 (let ((?x5989 (* ?x5272 l_0_6_28)))
 (let ((?x5269 (* 2.0 l_0_6_20)))
 (let ((?x5987 (* ?x5269 l_0_6_27)))
 (let ((?x5843 (* 2.0 l_0_6_19)))
 (let ((?x5985 (* ?x5843 l_0_6_26)))
 (let ((?x4288 (* 2.0 l_0_6_18)))
 (let ((?x4289 (* ?x4288 l_0_6_20)))
 (let ((?x5973 (- (* (* (- 2.0) l_0_6_101) l_0_6_94) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x5978 (+ (- ?x5973 (* (* 2.0 l_0_6_103) l_0_6_96)) (* (* 2.0 l_0_6_17) l_0_6_19))))
 (let ((?x5984 (- (+ (- ?x5978 (* (* 4.0 l_0_6_17) l_0_6_26)) ?x4289) (* (* 4.0 l_0_6_18) l_0_6_27))))
 (let ((?x5993 (+ (- (- (- (- ?x5984 ?x5985) ?x5987) ?x5989) ?x4294) (* (* 4.0 l_0_6_32) l_0_6_41))))
 (let ((?x6000 (+ (+ (+ (- ?x5993 ?x4300) (* (* 4.0 l_0_6_33) l_0_6_42)) ?x5997) ?x5999)))
 (let ((?x6006 (- (- (+ ?x6000 ?x6001) (* (* 4.0 l_0_6_47) l_0_6_56)) (* (* 4.0 l_0_6_48) l_0_6_57))))
 (let ((?x6011 (+ (- (- (- ?x6006 ?x5663) ?x5665) ?x5667) (* (* 4.0 l_0_6_62) l_0_6_71))))
 (let ((?x6016 (+ (+ (+ (+ ?x6011 (* (* 4.0 l_0_6_63) l_0_6_72)) ?x5669) ?x5671) ?x5673)))
 (= ?x6016 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4910 (* 2.0 l_0_6_81)))
 (let ((?x4911 (* ?x4910 l_0_6_84)))
 (let ((?x4907 (* 2.0 l_0_6_80)))
 (let ((?x4908 (* ?x4907 l_0_6_83)))
 (let ((?x4904 (* 2.0 l_0_6_79)))
 (let ((?x4905 (* ?x4904 l_0_6_82)))
 (let ((?x5713 (* l_0_6_70 l_0_6_70)))
 (let ((?x6139 (* 2.0 ?x5713)))
 (let ((?x5710 (* l_0_6_69 l_0_6_69)))
 (let ((?x6137 (* 2.0 ?x5710)))
 (let ((?x5708 (* l_0_6_68 l_0_6_68)))
 (let ((?x6135 (* 2.0 ?x5708)))
 (let ((?x5706 (* l_0_6_67 l_0_6_67)))
 (let ((?x6133 (* 2.0 ?x5706)))
 (let ((?x5635 (* 2.0 l_0_6_66)))
 (let ((?x5636 (* ?x5635 l_0_6_69)))
 (let ((?x5632 (* 2.0 l_0_6_65)))
 (let ((?x5633 (* ?x5632 l_0_6_68)))
 (let ((?x5629 (* 2.0 l_0_6_64)))
 (let ((?x5630 (* ?x5629 l_0_6_67)))
 (let ((?x5290 (* 2.0 l_0_6_51)))
 (let ((?x5626 (* ?x5290 l_0_6_54)))
 (let ((?x5287 (* 2.0 l_0_6_50)))
 (let ((?x5624 (* ?x5287 l_0_6_53)))
 (let ((?x5284 (* 2.0 l_0_6_49)))
 (let ((?x5621 (* ?x5284 l_0_6_52)))
 (let ((?x6116 (* l_0_6_40 l_0_6_40)))
 (let ((?x6117 (* 2.0 ?x6116)))
 (let ((?x6113 (* l_0_6_39 l_0_6_39)))
 (let ((?x6114 (* 2.0 ?x6113)))
 (let ((?x6110 (* l_0_6_38 l_0_6_38)))
 (let ((?x6111 (* 2.0 ?x6110)))
 (let ((?x6107 (* l_0_6_37 l_0_6_37)))
 (let ((?x6108 (* 2.0 ?x6107)))
 (let ((?x6100 (- (* (* (- 2.0) l_0_6_22) l_0_6_22) (* (* 2.0 l_0_6_23) l_0_6_23))))
 (let ((?x6106 (- (- ?x6100 (* (* 2.0 l_0_6_24) l_0_6_24)) (* (* 2.0 l_0_6_25) l_0_6_25))))
 (let ((?x6121 (+ (+ (+ (+ (+ (+ (+ ?x6106 ?x6108) ?x6111) ?x6114) ?x6117) ?x5621) ?x5624) ?x5626)))
 (let ((?x6125 (- (- ?x6121 (* (* 2.0 l_0_6_52) l_0_6_52)) (* (* 2.0 l_0_6_53) l_0_6_53))))
 (let ((?x6129 (- (- ?x6125 (* (* 2.0 l_0_6_54) l_0_6_54)) (* (* 2.0 l_0_6_55) l_0_6_55))))
 (let ((?x6140 (+ (+ (+ (+ (- (- (- ?x6129 ?x5630) ?x5633) ?x5636) ?x6133) ?x6135) ?x6137) ?x6139)))
 (= (+ (+ (+ ?x6140 ?x4905) ?x4908) ?x4911) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4910 (* 2.0 l_0_6_81)))
 (let ((?x4986 (* ?x4910 l_0_6_88)))
 (let ((?x4907 (* 2.0 l_0_6_80)))
 (let ((?x4984 (* ?x4907 l_0_6_87)))
 (let ((?x4904 (* 2.0 l_0_6_79)))
 (let ((?x4982 (* ?x4904 l_0_6_86)))
 (let ((?x5635 (* 2.0 l_0_6_66)))
 (let ((?x5673 (* ?x5635 l_0_6_73)))
 (let ((?x5632 (* 2.0 l_0_6_65)))
 (let ((?x5671 (* ?x5632 l_0_6_72)))
 (let ((?x5629 (* 2.0 l_0_6_64)))
 (let ((?x5669 (* ?x5629 l_0_6_71)))
 (let ((?x5290 (* 2.0 l_0_6_51)))
 (let ((?x5667 (* ?x5290 l_0_6_58)))
 (let ((?x5287 (* 2.0 l_0_6_50)))
 (let ((?x5665 (* ?x5287 l_0_6_57)))
 (let ((?x5284 (* 2.0 l_0_6_49)))
 (let ((?x5663 (* ?x5284 l_0_6_56)))
 (let ((?x5860 (* 2.0 l_0_6_36)))
 (let ((?x5861 (* ?x5860 l_0_6_39)))
 (let ((?x5857 (* 2.0 l_0_6_35)))
 (let ((?x5858 (* ?x5857 l_0_6_38)))
 (let ((?x5854 (* 2.0 l_0_6_34)))
 (let ((?x5855 (* ?x5854 l_0_6_37)))
 (let ((?x5272 (* 2.0 l_0_6_21)))
 (let ((?x5848 (* ?x5272 l_0_6_24)))
 (let ((?x5269 (* 2.0 l_0_6_20)))
 (let ((?x5846 (* ?x5269 l_0_6_23)))
 (let ((?x5843 (* 2.0 l_0_6_19)))
 (let ((?x5844 (* ?x5843 l_0_6_22)))
 (let ((?x6207 (- (- (+ (+ ?x5844 ?x5846) ?x5848) (* (* 4.0 l_0_6_22) l_0_6_26)) (* (* 4.0 l_0_6_23) l_0_6_27))))
 (let ((?x6213 (- (- ?x6207 (* (* 4.0 l_0_6_24) l_0_6_28)) (* (* 4.0 l_0_6_25) l_0_6_29))))
 (let ((?x6219 (+ (- (- (- ?x6213 ?x5855) ?x5858) ?x5861) (* (* 4.0 l_0_6_37) l_0_6_41))))
 (let ((?x6225 (+ (+ ?x6219 (* (* 4.0 l_0_6_38) l_0_6_42)) (* (* 4.0 l_0_6_39) l_0_6_43))))
 (let ((?x6231 (+ (+ (+ (+ ?x6225 (* (* 4.0 l_0_6_40) l_0_6_44)) ?x5663) ?x5665) ?x5667)))
 (let ((?x6237 (- (- ?x6231 (* (* 4.0 l_0_6_52) l_0_6_56)) (* (* 4.0 l_0_6_53) l_0_6_57))))
 (let ((?x6243 (- (- ?x6237 (* (* 4.0 l_0_6_54) l_0_6_58)) (* (* 4.0 l_0_6_55) l_0_6_59))))
 (let ((?x6249 (+ (- (- (- ?x6243 ?x5669) ?x5671) ?x5673) (* (* 4.0 l_0_6_67) l_0_6_71))))
 (let ((?x6255 (+ (+ ?x6249 (* (* 4.0 l_0_6_68) l_0_6_72)) (* (* 4.0 l_0_6_69) l_0_6_73))))
 (let ((?x6261 (+ (+ (+ (+ ?x6255 (* (* 4.0 l_0_6_70) l_0_6_74)) ?x4982) ?x4984) ?x4986)))
 (= ?x6261 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5819 (* l_0_6_75 l_0_6_75)))
 (let ((?x6405 (* 2.0 ?x5819)))
 (let ((?x5817 (* l_0_6_74 l_0_6_74)))
 (let ((?x6403 (* 2.0 ?x5817)))
 (let ((?x5815 (* l_0_6_73 l_0_6_73)))
 (let ((?x6401 (* 2.0 ?x5815)))
 (let ((?x5813 (* l_0_6_72 l_0_6_72)))
 (let ((?x6399 (* 2.0 ?x5813)))
 (let ((?x5811 (* l_0_6_71 l_0_6_71)))
 (let ((?x6397 (* 2.0 ?x5811)))
 (let ((?x6379 (* l_0_6_45 l_0_6_45)))
 (let ((?x6380 (* 2.0 ?x6379)))
 (let ((?x6376 (* l_0_6_44 l_0_6_44)))
 (let ((?x6377 (* 2.0 ?x6376)))
 (let ((?x6373 (* l_0_6_43 l_0_6_43)))
 (let ((?x6374 (* 2.0 ?x6373)))
 (let ((?x6370 (* l_0_6_42 l_0_6_42)))
 (let ((?x6371 (* 2.0 ?x6370)))
 (let ((?x6367 (* l_0_6_41 l_0_6_41)))
 (let ((?x6368 (* 2.0 ?x6367)))
 (let ((?x5860 (* 2.0 l_0_6_36)))
 (let ((?x6001 (* ?x5860 l_0_6_43)))
 (let ((?x5857 (* 2.0 l_0_6_35)))
 (let ((?x5999 (* ?x5857 l_0_6_42)))
 (let ((?x5854 (* 2.0 l_0_6_34)))
 (let ((?x5997 (* ?x5854 l_0_6_41)))
 (let ((?x5272 (* 2.0 l_0_6_21)))
 (let ((?x5989 (* ?x5272 l_0_6_28)))
 (let ((?x5269 (* 2.0 l_0_6_20)))
 (let ((?x5987 (* ?x5269 l_0_6_27)))
 (let ((?x5843 (* 2.0 l_0_6_19)))
 (let ((?x5985 (* ?x5843 l_0_6_26)))
 (let ((?x6354 (- (- (+ (+ ?x5985 ?x5987) ?x5989) (* (* 2.0 l_0_6_26) l_0_6_26)) (* (* 2.0 l_0_6_27) l_0_6_27))))
 (let ((?x6360 (- (- ?x6354 (* (* 2.0 l_0_6_28) l_0_6_28)) (* (* 2.0 l_0_6_29) l_0_6_29))))
 (let ((?x6366 (- (- (- (- ?x6360 (* (* 2.0 l_0_6_30) l_0_6_30)) ?x5997) ?x5999) ?x6001)))
 (let ((?x6384 (- (+ (+ (+ (+ (+ ?x6366 ?x6368) ?x6371) ?x6374) ?x6377) ?x6380) (* (* 2.0 l_0_6_56) l_0_6_56))))
 (let ((?x6390 (- (- ?x6384 (* (* 2.0 l_0_6_57) l_0_6_57)) (* (* 2.0 l_0_6_58) l_0_6_58))))
 (let ((?x6396 (- (- ?x6390 (* (* 2.0 l_0_6_59) l_0_6_59)) (* (* 2.0 l_0_6_60) l_0_6_60))))
 (= (+ (+ (+ (+ (+ ?x6396 ?x6397) ?x6399) ?x6401) ?x6403) ?x6405) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4089 (* l_0_6_78 l_0_6_78)))
 (let ((?x4087 (* l_0_6_77 l_0_6_77)))
 (let ((?x4191 (* l_0_6_63 l_0_6_63)))
 (let ((?x4320 (* 2.0 l_0_6_63)))
 (let ((?x5373 (* ?x4320 l_0_6_68)))
 (let ((?x4186 (* l_0_6_62 l_0_6_62)))
 (let ((?x4315 (* 2.0 l_0_6_62)))
 (let ((?x5371 (* ?x4315 l_0_6_67)))
 (let ((?x4172 (* l_0_6_48 l_0_6_48)))
 (let ((?x4310 (* 2.0 l_0_6_48)))
 (let ((?x5357 (* ?x4310 l_0_6_53)))
 (let ((?x4167 (* l_0_6_47 l_0_6_47)))
 (let ((?x4305 (* 2.0 l_0_6_47)))
 (let ((?x5355 (* ?x4305 l_0_6_52)))
 (let ((?x4299 (* 2.0 l_0_6_33)))
 (let ((?x6484 (* ?x4299 l_0_6_38)))
 (let ((?x4293 (* 2.0 l_0_6_32)))
 (let ((?x6482 (* ?x4293 l_0_6_37)))
 (let ((?x4288 (* 2.0 l_0_6_18)))
 (let ((?x6480 (* ?x4288 l_0_6_23)))
 (let ((?x6486 (- (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x6480) ?x6482) ?x6484) ?x5355)))
 (let ((?x6493 (- (+ (- (+ (+ (- (+ ?x6486 ?x4167) ?x5357) ?x4172) ?x5371) ?x4186) ?x5373) ?x4191)))
 (let ((?x6499 (- (- (+ (+ ?x6493 ?x4087) ?x4089) (* (* 2.0 l_0_6_92) l_0_6_97)) (* (* 2.0 l_0_6_93) l_0_6_98))))
 (= ?x6499 0.0)))))))))))))))))))))))))
(assert
 (let ((?x4320 (* 2.0 l_0_6_63)))
 (let ((?x5510 (* ?x4320 l_0_6_72)))
 (let ((?x4315 (* 2.0 l_0_6_62)))
 (let ((?x5508 (* ?x4315 l_0_6_71)))
 (let ((?x4310 (* 2.0 l_0_6_48)))
 (let ((?x5500 (* ?x4310 l_0_6_57)))
 (let ((?x4305 (* 2.0 l_0_6_47)))
 (let ((?x5498 (* ?x4305 l_0_6_56)))
 (let ((?x4302 (* l_0_6_33 l_0_6_33)))
 (let ((?x4299 (* 2.0 l_0_6_33)))
 (let ((?x6517 (* ?x4299 l_0_6_42)))
 (let ((?x4296 (* l_0_6_32 l_0_6_32)))
 (let ((?x4293 (* 2.0 l_0_6_32)))
 (let ((?x6514 (* ?x4293 l_0_6_41)))
 (let ((?x4345 (* l_0_6_18 l_0_6_18)))
 (let ((?x4288 (* 2.0 l_0_6_18)))
 (let ((?x6511 (* ?x4288 l_0_6_27)))
 (let ((?x4334 (* l_0_6_17 l_0_6_17)))
 (let ((?x4285 (* 2.0 l_0_6_17)))
 (let ((?x885 (* ?x4285 l_0_6_26)))
 (let ((?x926 (- (* (* (- 2.0) l_0_6_101) l_0_6_92) (* (* 2.0 l_0_6_102) l_0_6_93))))
 (let ((?x6518 (+ (- (+ (+ (- (+ (- ?x926 ?x885) ?x4334) ?x6511) ?x4345) ?x6514) ?x4296) ?x6517)))
 (= (+ (+ (- (- (- ?x6518 ?x4302) ?x5498) ?x5500) ?x5508) ?x5510) 0.0))))))))))))))))))))))))
(assert
 (let ((?x6603 (* l_0_6_99 l_0_6_99)))
 (let ((?x6601 (* l_0_6_98 l_0_6_98)))
 (let ((?x6599 (* l_0_6_97 l_0_6_97)))
 (let ((?x4609 (* 2.0 l_0_6_78)))
 (let ((?x4694 (* ?x4609 l_0_6_83)))
 (let ((?x4606 (* 2.0 l_0_6_77)))
 (let ((?x4692 (* ?x4606 l_0_6_82)))
 (let ((?x4320 (* 2.0 l_0_6_63)))
 (let ((?x5373 (* ?x4320 l_0_6_68)))
 (let ((?x4315 (* 2.0 l_0_6_62)))
 (let ((?x5371 (* ?x4315 l_0_6_67)))
 (let ((?x4310 (* 2.0 l_0_6_48)))
 (let ((?x5357 (* ?x4310 l_0_6_53)))
 (let ((?x4305 (* 2.0 l_0_6_47)))
 (let ((?x5355 (* ?x4305 l_0_6_52)))
 (let ((?x6555 (- (* (- l_0_6_100) l_0_6_100) (* (* 1.0 l_0_6_22) l_0_6_22))))
 (let ((?x6561 (- (- ?x6555 (* (* 1.0 l_0_6_23) l_0_6_23)) (* (* 1.0 l_0_6_24) l_0_6_24))))
 (let ((?x6566 (+ (- ?x6561 (* (* 1.0 l_0_6_25) l_0_6_25)) (* 1.0 (* l_0_6_37 l_0_6_37)))))
 (let ((?x6570 (+ (+ ?x6566 (* 1.0 (* l_0_6_38 l_0_6_38))) (* 1.0 (* l_0_6_39 l_0_6_39)))))
 (let ((?x6577 (- (+ (+ (+ ?x6570 (* 1.0 (* l_0_6_40 l_0_6_40))) ?x5355) ?x5357) (* (* 1.0 l_0_6_52) l_0_6_52))))
 (let ((?x6583 (- (- ?x6577 (* (* 1.0 l_0_6_53) l_0_6_53)) (* (* 1.0 l_0_6_54) l_0_6_54))))
 (let ((?x6590 (+ (- (- (- ?x6583 (* (* 1.0 l_0_6_55) l_0_6_55)) ?x5371) ?x5373) (* 1.0 (* l_0_6_67 l_0_6_67)))))
 (let ((?x6594 (+ (+ ?x6590 (* 1.0 (* l_0_6_68 l_0_6_68))) (* 1.0 (* l_0_6_69 l_0_6_69)))))
 (let ((?x6600 (- (+ (+ (+ ?x6594 (* 1.0 (* l_0_6_70 l_0_6_70))) ?x4692) ?x4694) ?x6599)))
 (= (- (- ?x6600 ?x6601) ?x6603) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x4609 (* 2.0 l_0_6_78)))
 (let ((?x4768 (* ?x4609 l_0_6_87)))
 (let ((?x4606 (* 2.0 l_0_6_77)))
 (let ((?x4766 (* ?x4606 l_0_6_86)))
 (let ((?x5758 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x5755 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x5752 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x5749 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x4320 (* 2.0 l_0_6_63)))
 (let ((?x5510 (* ?x4320 l_0_6_72)))
 (let ((?x4315 (* 2.0 l_0_6_62)))
 (let ((?x5508 (* ?x4315 l_0_6_71)))
 (let ((?x5745 (* 2.0 l_0_6_55)))
 (let ((?x5746 (* ?x5745 l_0_6_59)))
 (let ((?x5742 (* 2.0 l_0_6_54)))
 (let ((?x5743 (* ?x5742 l_0_6_58)))
 (let ((?x5739 (* 2.0 l_0_6_53)))
 (let ((?x5740 (* ?x5739 l_0_6_57)))
 (let ((?x5736 (* 2.0 l_0_6_52)))
 (let ((?x5737 (* ?x5736 l_0_6_56)))
 (let ((?x4310 (* 2.0 l_0_6_48)))
 (let ((?x5500 (* ?x4310 l_0_6_57)))
 (let ((?x4305 (* 2.0 l_0_6_47)))
 (let ((?x5498 (* ?x4305 l_0_6_56)))
 (let ((?x6628 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x6625 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x6622 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (let ((?x6619 (* (* 2.0 l_0_6_37) l_0_6_41)))
 (let ((?x4299 (* 2.0 l_0_6_33)))
 (let ((?x6484 (* ?x4299 l_0_6_38)))
 (let ((?x4293 (* 2.0 l_0_6_32)))
 (let ((?x6482 (* ?x4293 l_0_6_37)))
 (let ((?x6104 (* 2.0 l_0_6_25)))
 (let ((?x6614 (* ?x6104 l_0_6_29)))
 (let ((?x6101 (* 2.0 l_0_6_24)))
 (let ((?x6612 (* ?x6101 l_0_6_28)))
 (let ((?x6098 (* 2.0 l_0_6_23)))
 (let ((?x973 (* ?x6098 l_0_6_27)))
 (let ((?x974 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x4288 (* 2.0 l_0_6_18)))
 (let ((?x6480 (* ?x4288 l_0_6_23)))
 (let ((?x1038 (- (* (* (- 2.0) l_0_6_100) l_0_6_104) (* (* 2.0 l_0_6_101) l_0_6_97))))
 (let ((?x1033 (- (- ?x1038 (* (* 2.0 l_0_6_102) l_0_6_98)) (* (* 2.0 l_0_6_103) l_0_6_99))))
 (let ((?x975 (- (- (+ (+ ?x1033 (* (* 2.0 l_0_6_17) l_0_6_22)) ?x6480) ?x974) ?x973)))
 (let ((?x6626 (+ (+ (+ (- (- (- (- ?x975 ?x6612) ?x6614) ?x6482) ?x6484) ?x6619) ?x6622) ?x6625)))
 (let ((?x6635 (- (- (- (- (+ (+ (+ ?x6626 ?x6628) ?x5498) ?x5500) ?x5737) ?x5740) ?x5743) ?x5746)))
 (let ((?x6642 (+ (+ (+ (+ (+ (- (- ?x6635 ?x5508) ?x5510) ?x5749) ?x5752) ?x5755) ?x5758) ?x4766)))
 (= (+ ?x6642 ?x4768) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4299 (* 2.0 l_0_6_33)))
 (let ((?x6517 (* ?x4299 l_0_6_42)))
 (let ((?x4293 (* 2.0 l_0_6_32)))
 (let ((?x6514 (* ?x4293 l_0_6_41)))
 (let ((?x4288 (* 2.0 l_0_6_18)))
 (let ((?x6511 (* ?x4288 l_0_6_27)))
 (let ((?x4285 (* 2.0 l_0_6_17)))
 (let ((?x885 (* ?x4285 l_0_6_26)))
 (let ((?x1372 (* l_0_6_105 l_0_6_105)))
 (let ((?x1381 (* l_0_6_104 l_0_6_104)))
 (let ((?x1400 (* l_0_6_103 l_0_6_103)))
 (let ((?x1401 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x1400)))
 (let ((?x6658 (- (+ (+ (- (- ?x1401 ?x1381) ?x1372) ?x885) ?x6511) (* (* 1.0 l_0_6_26) l_0_6_26))))
 (let ((?x6664 (- (- ?x6658 (* (* 1.0 l_0_6_27) l_0_6_27)) (* (* 1.0 l_0_6_28) l_0_6_28))))
 (let ((?x6670 (- (- ?x6664 (* (* 1.0 l_0_6_29) l_0_6_29)) (* (* 1.0 l_0_6_30) l_0_6_30))))
 (let ((?x6676 (+ (+ (- (- ?x6670 ?x6514) ?x6517) (* 1.0 (* l_0_6_41 l_0_6_41))) (* 1.0 (* l_0_6_42 l_0_6_42)))))
 (let ((?x6680 (+ (+ ?x6676 (* 1.0 (* l_0_6_43 l_0_6_43))) (* 1.0 (* l_0_6_44 l_0_6_44)))))
 (let ((?x6685 (- (+ ?x6680 (* 1.0 (* l_0_6_45 l_0_6_45))) (* (* 1.0 l_0_6_56) l_0_6_56))))
 (let ((?x6691 (- (- ?x6685 (* (* 1.0 l_0_6_57) l_0_6_57)) (* (* 1.0 l_0_6_58) l_0_6_58))))
 (let ((?x6697 (- (- ?x6691 (* (* 1.0 l_0_6_59) l_0_6_59)) (* (* 1.0 l_0_6_60) l_0_6_60))))
 (let ((?x6701 (+ (+ ?x6697 (* 1.0 (* l_0_6_71 l_0_6_71))) (* 1.0 (* l_0_6_72 l_0_6_72)))))
 (let ((?x6705 (+ (+ ?x6701 (* 1.0 (* l_0_6_73 l_0_6_73))) (* 1.0 (* l_0_6_74 l_0_6_74)))))
 (= (+ ?x6705 (* 1.0 (* l_0_6_75 l_0_6_75))) 0.0))))))))))))))))))))))))
(assert
 (let ((?x5115 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x5112 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x5109 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x5106 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x5758 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x5755 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x5752 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x5749 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x5745 (* 2.0 l_0_6_55)))
 (let ((?x5746 (* ?x5745 l_0_6_59)))
 (let ((?x5742 (* 2.0 l_0_6_54)))
 (let ((?x5743 (* ?x5742 l_0_6_58)))
 (let ((?x5739 (* 2.0 l_0_6_53)))
 (let ((?x5740 (* ?x5739 l_0_6_57)))
 (let ((?x5736 (* 2.0 l_0_6_52)))
 (let ((?x5737 (* ?x5736 l_0_6_56)))
 (let ((?x6116 (* l_0_6_40 l_0_6_40)))
 (let ((?x6113 (* l_0_6_39 l_0_6_39)))
 (let ((?x6110 (* l_0_6_38 l_0_6_38)))
 (let ((?x6107 (* l_0_6_37 l_0_6_37)))
 (let ((?x6159 (* l_0_6_25 l_0_6_25)))
 (let ((?x6153 (* l_0_6_24 l_0_6_24)))
 (let ((?x1577 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x6153) ?x6159)))
 (let ((?x1028 (+ (+ (+ (- (- (- (- ?x1577 ?x6107) ?x6110) ?x6113) ?x6116) ?x5737) ?x5740) ?x5743)))
 (let ((?x6726 (+ (+ (- (- (- (- (+ ?x1028 ?x5746) ?x5749) ?x5752) ?x5755) ?x5758) ?x5106) ?x5109)))
 (= (+ (+ ?x6726 ?x5112) ?x5115) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x5195 (* l_0_6_90 l_0_6_90)))
 (let ((?x5193 (* l_0_6_89 l_0_6_89)))
 (let ((?x5191 (* l_0_6_88 l_0_6_88)))
 (let ((?x5189 (* l_0_6_87 l_0_6_87)))
 (let ((?x5187 (* l_0_6_86 l_0_6_86)))
 (let ((?x5819 (* l_0_6_75 l_0_6_75)))
 (let ((?x5817 (* l_0_6_74 l_0_6_74)))
 (let ((?x5815 (* l_0_6_73 l_0_6_73)))
 (let ((?x5813 (* l_0_6_72 l_0_6_72)))
 (let ((?x5811 (* l_0_6_71 l_0_6_71)))
 (let ((?x5809 (* l_0_6_60 l_0_6_60)))
 (let ((?x5807 (* l_0_6_59 l_0_6_59)))
 (let ((?x5805 (* l_0_6_58 l_0_6_58)))
 (let ((?x5803 (* l_0_6_57 l_0_6_57)))
 (let ((?x5801 (* l_0_6_56 l_0_6_56)))
 (let ((?x6628 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x6625 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x6622 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (let ((?x6619 (* (* 2.0 l_0_6_37) l_0_6_41)))
 (let ((?x6104 (* 2.0 l_0_6_25)))
 (let ((?x6614 (* ?x6104 l_0_6_29)))
 (let ((?x6101 (* 2.0 l_0_6_24)))
 (let ((?x6612 (* ?x6101 l_0_6_28)))
 (let ((?x6098 (* 2.0 l_0_6_23)))
 (let ((?x973 (* ?x6098 l_0_6_27)))
 (let ((?x974 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x6758 (- (- (- (- (+ (+ (+ ?x974 ?x973) ?x6612) ?x6614) ?x6619) ?x6622) ?x6625) ?x6628)))
 (let ((?x6765 (- (- (+ (+ (+ (+ (+ ?x6758 ?x5801) ?x5803) ?x5805) ?x5807) ?x5809) ?x5811) ?x5813)))
 (let ((?x6772 (+ (+ (+ (+ (- (- (- ?x6765 ?x5815) ?x5817) ?x5819) ?x5187) ?x5189) ?x5191) ?x5193)))
 (= (+ ?x6772 ?x5195) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x6379 (* l_0_6_45 l_0_6_45)))
 (let ((?x6376 (* l_0_6_44 l_0_6_44)))
 (let ((?x6373 (* l_0_6_43 l_0_6_43)))
 (let ((?x6370 (* l_0_6_42 l_0_6_42)))
 (let ((?x6367 (* l_0_6_41 l_0_6_41)))
 (let ((?x6433 (* l_0_6_30 l_0_6_30)))
 (let ((?x6427 (* l_0_6_29 l_0_6_29)))
 (let ((?x6421 (* l_0_6_28 l_0_6_28)))
 (let ((?x1725 (+ (+ (+ (* l_0_6_26 l_0_6_26) (* l_0_6_27 l_0_6_27)) ?x6421) ?x6427)))
 (= (- (- (- (- (- (+ ?x1725 ?x6433) ?x6367) ?x6370) ?x6373) ?x6376) ?x6379) 0.0)))))))))))
(assert
 (let ((?x5055 (* l_0_6_85 l_0_6_85)))
 (let ((?x5053 (* l_0_6_84 l_0_6_84)))
 (let ((?x5051 (* l_0_6_83 l_0_6_83)))
 (let ((?x5049 (* l_0_6_82 l_0_6_82)))
 (let ((?x5713 (* l_0_6_70 l_0_6_70)))
 (let ((?x5710 (* l_0_6_69 l_0_6_69)))
 (let ((?x5708 (* l_0_6_68 l_0_6_68)))
 (let ((?x5706 (* l_0_6_67 l_0_6_67)))
 (let ((?x5704 (* l_0_6_55 l_0_6_55)))
 (let ((?x5702 (* l_0_6_54 l_0_6_54)))
 (let ((?x1762 (+ (+ (+ (* l_0_6_52 l_0_6_52) (* l_0_6_53 l_0_6_53)) ?x5702) ?x5704)))
 (let ((?x6777 (+ (+ (+ (- (- (- (- ?x1762 ?x5706) ?x5708) ?x5710) ?x5713) ?x5049) ?x5051) ?x5053)))
 (= (+ ?x6777 ?x5055) 0.0))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (let ((?x6871 (* l_0_7_63 l_0_7_63)))
 (let ((?x6872 (* 2.0 ?x6871)))
 (let ((?x6868 (* 2.0 l_0_7_63)))
 (let ((?x6869 (* ?x6868 l_0_7_65)))
 (let ((?x6865 (* l_0_7_62 l_0_7_62)))
 (let ((?x6866 (* 2.0 ?x6865)))
 (let ((?x6862 (* 2.0 l_0_7_62)))
 (let ((?x6863 (* ?x6862 l_0_7_64)))
 (let ((?x6857 (* 2.0 l_0_7_48)))
 (let ((?x6858 (* ?x6857 l_0_7_50)))
 (let ((?x6852 (* 2.0 l_0_7_47)))
 (let ((?x6853 (* ?x6852 l_0_7_49)))
 (let ((?x6849 (* l_0_7_33 l_0_7_33)))
 (let ((?x6850 (* 2.0 ?x6849)))
 (let ((?x6846 (* 2.0 l_0_7_33)))
 (let ((?x6847 (* ?x6846 l_0_7_35)))
 (let ((?x6843 (* l_0_7_32 l_0_7_32)))
 (let ((?x6844 (* 2.0 ?x6843)))
 (let ((?x6840 (* 2.0 l_0_7_32)))
 (let ((?x6841 (* ?x6840 l_0_7_34)))
 (let ((?x6835 (* 2.0 l_0_7_18)))
 (let ((?x6836 (* ?x6835 l_0_7_20)))
 (let ((?x6830 (* 2.0 l_0_7_17)))
 (let ((?x6831 (* ?x6830 l_0_7_19)))
 (let ((?x6829 (- (* (* (- 2.0) l_0_7_107) l_0_7_109) (* (* 2.0 l_0_7_108) l_0_7_110))))
 (let ((?x6839 (- (- (- (- ?x6829 ?x6831) (* ?x6830 l_0_7_17)) ?x6836) (* ?x6835 l_0_7_18))))
 (let ((?x6856 (- (- (+ (+ (+ (+ ?x6839 ?x6841) ?x6844) ?x6847) ?x6850) ?x6853) (* ?x6852 l_0_7_47))))
 (let ((?x6873 (+ (+ (+ (+ (- (- ?x6856 ?x6858) (* ?x6857 l_0_7_48)) ?x6863) ?x6866) ?x6869) ?x6872)))
 (let ((?x6879 (- (- ?x6873 (* (* 2.0 l_0_7_92) l_0_7_94)) (* (* 2.0 l_0_7_93) l_0_7_95))))
 (= (+ ?x6879 2.0) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x6943 (* l_0_7_93 l_0_7_93)))
 (let ((?x6941 (* l_0_7_92 l_0_7_92)))
 (let ((?x6919 (* l_0_7_108 l_0_7_108)))
 (let ((?x6923 (- (- (- (- _a_0_) (* l_0_7_107 l_0_7_107)) ?x6919) (* (* 1.0 l_0_7_17) l_0_7_17))))
 (let ((?x6928 (+ (- ?x6923 (* (* 1.0 l_0_7_18) l_0_7_18)) (* 1.0 (* l_0_7_32 l_0_7_32)))))
 (let ((?x6933 (- (+ ?x6928 (* 1.0 (* l_0_7_33 l_0_7_33))) (* (* 1.0 l_0_7_47) l_0_7_47))))
 (let ((?x6938 (+ (- ?x6933 (* (* 1.0 l_0_7_48) l_0_7_48)) (* 1.0 (* l_0_7_62 l_0_7_62)))))
 (let ((?x6946 (+ (- (- (+ ?x6938 (* 1.0 (* l_0_7_63 l_0_7_63))) ?x6941) ?x6943) 3.0)))
 (= ?x6946 0.0))))))))))
(assert
 (let ((?x6868 (* 2.0 l_0_7_63)))
 (let ((?x6989 (* ?x6868 l_0_7_72)))
 (let ((?x6862 (* 2.0 l_0_7_62)))
 (let ((?x6987 (* ?x6862 l_0_7_71)))
 (let ((?x6857 (* 2.0 l_0_7_48)))
 (let ((?x6985 (* ?x6857 l_0_7_57)))
 (let ((?x6852 (* 2.0 l_0_7_47)))
 (let ((?x6983 (* ?x6852 l_0_7_56)))
 (let ((?x6849 (* l_0_7_33 l_0_7_33)))
 (let ((?x6846 (* 2.0 l_0_7_33)))
 (let ((?x6980 (* ?x6846 l_0_7_42)))
 (let ((?x6843 (* l_0_7_32 l_0_7_32)))
 (let ((?x6840 (* 2.0 l_0_7_32)))
 (let ((?x6977 (* ?x6840 l_0_7_41)))
 (let ((?x1834 (* l_0_7_18 l_0_7_18)))
 (let ((?x6835 (* 2.0 l_0_7_18)))
 (let ((?x6974 (* ?x6835 l_0_7_27)))
 (let ((?x1839 (* l_0_7_17 l_0_7_17)))
 (let ((?x6830 (* 2.0 l_0_7_17)))
 (let ((?x6971 (* ?x6830 l_0_7_26)))
 (let ((?x6965 (- (- (- _a_1_) (* (* 2.0 l_0_7_101) l_0_7_92)) (* (* 2.0 l_0_7_102) l_0_7_93))))
 (let ((?x6970 (- (- ?x6965 (* (* 2.0 l_0_7_107) l_0_7_116)) (* (* 2.0 l_0_7_108) l_0_7_117))))
 (let ((?x6981 (+ (- (+ (+ (- (+ (- ?x6970 ?x6971) ?x1839) ?x6974) ?x1834) ?x6977) ?x6843) ?x6980)))
 (= (+ (+ (- (- (- ?x6981 ?x6849) ?x6983) ?x6985) ?x6987) ?x6989) 0.0)))))))))))))))))))))))))
(assert
 (= (- (* (- l_0_7_1) l_0_7_1) (* l_0_7_76 l_0_7_76)) 0.0))
(assert
 (let ((?x7032 (* l_0_7_91 l_0_7_91)))
 (let ((?x7029 (* 2.0 l_0_7_76)))
 (let ((?x7030 (* ?x7029 l_0_7_77)))
 (let ((?x7019 (- (- (* (* (- 2.0) l_0_7_1) l_0_7_2) (* l_0_7_106 l_0_7_106)) (* (* 1.0 l_0_7_16) l_0_7_16))))
 (let ((?x7025 (- (+ ?x7019 (* 1.0 (* l_0_7_31 l_0_7_31))) (* (* 1.0 l_0_7_46) l_0_7_46))))
 (= (- (- (+ ?x7025 (* 1.0 (* l_0_7_61 l_0_7_61))) ?x7030) ?x7032) 0.0)))))))
(assert
 (let ((?x7029 (* 2.0 l_0_7_76)))
 (let ((?x7063 (* ?x7029 l_0_7_79)))
 (let ((?x7055 (- (* (* (- 2.0) l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_16) l_0_7_16))))
 (let ((?x7060 (- (+ ?x7055 (* 2.0 (* l_0_7_31 l_0_7_31))) (* (* 2.0 l_0_7_46) l_0_7_46))))
 (= (- (+ ?x7060 (* 2.0 (* l_0_7_61 l_0_7_61))) ?x7063) 0.0))))))
(assert
 (let ((?x1443 (* l_0_7_76 l_0_7_76)))
 (let ((?x7029 (* 2.0 l_0_7_76)))
 (let ((?x7079 (* ?x7029 l_0_7_82)))
 (let ((?x7026 (* l_0_7_61 l_0_7_61)))
 (let ((?x7078 (- (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) (* l_0_7_46 l_0_7_46)) ?x7026)))
 (= (+ (- ?x7078 ?x7079) ?x1443) 0.0)))))))
(assert
 (let ((?x7029 (* 2.0 l_0_7_76)))
 (let ((?x7099 (* ?x7029 l_0_7_86)))
 (let ((?x7020 (* l_0_7_31 l_0_7_31)))
 (let ((?x7098 (- (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) (* l_0_7_16 l_0_7_16)) ?x7020)))
 (= (- ?x7098 ?x7099) 0.0))))))
(assert
 (let ((?x7129 (* l_0_7_78 l_0_7_78)))
 (let ((?x7127 (* l_0_7_77 l_0_7_77)))
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7125 (* ?x7124 l_0_7_62)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7122 (* ?x7058 l_0_7_47)))
 (let ((?x7119 (* 2.0 l_0_7_31)))
 (let ((?x7120 (* ?x7119 l_0_7_32)))
 (let ((?x7117 (* l_0_7_3 l_0_7_3)))
 (let ((?x7115 (* l_0_7_2 l_0_7_2)))
 (let ((?x7053 (* 2.0 l_0_7_16)))
 (let ((?x7113 (* ?x7053 l_0_7_17)))
 (let ((?x7121 (+ (- (- (- (* (* (- 2.0) l_0_7_106) l_0_7_107) ?x7113) ?x7115) ?x7117) ?x7120)))
 (let ((?x7133 (- (- (- (+ (- ?x7121 ?x7122) ?x7125) ?x7127) ?x7129) (* (* 2.0 l_0_7_91) l_0_7_92))))
 (= ?x7133 0.0))))))))))))))))
(assert
 (let ((?x7179 (* 2.0 l_0_7_78)))
 (let ((?x7180 (* ?x7179 l_0_7_80)))
 (let ((?x7176 (* 2.0 l_0_7_77)))
 (let ((?x7177 (* ?x7176 l_0_7_79)))
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7174 (* ?x7124 l_0_7_64)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7169 (* ?x7058 l_0_7_49)))
 (let ((?x7119 (* 2.0 l_0_7_31)))
 (let ((?x7164 (* ?x7119 l_0_7_34)))
 (let ((?x7158 (* 2.0 l_0_7_3)))
 (let ((?x7159 (* ?x7158 l_0_7_5)))
 (let ((?x7155 (* 2.0 l_0_7_2)))
 (let ((?x7156 (* ?x7155 l_0_7_4)))
 (let ((?x7053 (* 2.0 l_0_7_16)))
 (let ((?x7153 (* ?x7053 l_0_7_19)))
 (let ((?x7152 (- (* (* (- 2.0) l_0_7_106) l_0_7_109) (* (* 4.0 l_0_7_16) l_0_7_17))))
 (let ((?x7163 (+ (- (- (- ?x7152 ?x7153) ?x7156) ?x7159) (* (* 4.0 l_0_7_31) l_0_7_32))))
 (let ((?x7173 (+ (- (- (+ ?x7163 ?x7164) (* (* 4.0 l_0_7_46) l_0_7_47)) ?x7169) (* (* 4.0 l_0_7_61) l_0_7_62))))
 (let ((?x7183 (- (- (- (+ ?x7173 ?x7174) ?x7177) ?x7180) (* (* 2.0 l_0_7_91) l_0_7_94))))
 (= ?x7183 0.0))))))))))))))))))))))
(assert
 (let ((?x7179 (* 2.0 l_0_7_78)))
 (let ((?x7247 (* ?x7179 l_0_7_83)))
 (let ((?x7176 (* 2.0 l_0_7_77)))
 (let ((?x7245 (* ?x7176 l_0_7_82)))
 (let ((?x7029 (* 2.0 l_0_7_76)))
 (let ((?x7030 (* ?x7029 l_0_7_77)))
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7242 (* ?x7124 l_0_7_67)))
 (let ((?x7125 (* ?x7124 l_0_7_62)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7239 (* ?x7058 l_0_7_52)))
 (let ((?x7122 (* ?x7058 l_0_7_47)))
 (let ((?x7119 (* 2.0 l_0_7_31)))
 (let ((?x7236 (* ?x7119 l_0_7_37)))
 (let ((?x7158 (* 2.0 l_0_7_3)))
 (let ((?x7234 (* ?x7158 l_0_7_8)))
 (let ((?x7155 (* 2.0 l_0_7_2)))
 (let ((?x7232 (* ?x7155 l_0_7_7)))
 (let ((?x7053 (* 2.0 l_0_7_16)))
 (let ((?x7230 (* ?x7053 l_0_7_22)))
 (let ((?x7237 (+ (- (- (- (* (* (- 2.0) l_0_7_106) l_0_7_112) ?x7230) ?x7232) ?x7234) ?x7236)))
 (let ((?x7248 (- (- (+ (+ (- (- (+ ?x7237 ?x7122) ?x7239) ?x7125) ?x7242) ?x7030) ?x7245) ?x7247)))
 (= (- ?x7248 (* (* 2.0 l_0_7_91) l_0_7_97)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x7179 (* 2.0 l_0_7_78)))
 (let ((?x7297 (* ?x7179 l_0_7_87)))
 (let ((?x7176 (* 2.0 l_0_7_77)))
 (let ((?x7295 (* ?x7176 l_0_7_86)))
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7293 (* ?x7124 l_0_7_71)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7291 (* ?x7058 l_0_7_56)))
 (let ((?x7119 (* 2.0 l_0_7_31)))
 (let ((?x7289 (* ?x7119 l_0_7_41)))
 (let ((?x7120 (* ?x7119 l_0_7_32)))
 (let ((?x7053 (* 2.0 l_0_7_16)))
 (let ((?x7286 (* ?x7053 l_0_7_26)))
 (let ((?x7113 (* ?x7053 l_0_7_17)))
 (let ((?x7282 (* 2.0 l_0_7_12)))
 (let ((?x7283 (* ?x7282 l_0_7_3)))
 (let ((?x7279 (* 2.0 l_0_7_11)))
 (let ((?x7280 (* ?x7279 l_0_7_2)))
 (let ((?x7278 (- (* (* (- 2.0) l_0_7_101) l_0_7_91) (* (* 2.0 l_0_7_106) l_0_7_116))))
 (let ((?x7292 (- (+ (- (- (+ (- (- ?x7278 ?x7280) ?x7283) ?x7113) ?x7286) ?x7120) ?x7289) ?x7291)))
 (= (- (- (+ ?x7292 ?x7293) ?x7295) ?x7297) 0.0))))))))))))))))))))))
(assert
 (let ((?x7337 (* l_0_7_81 l_0_7_81)))
 (let ((?x7335 (* l_0_7_80 l_0_7_80)))
 (let ((?x7333 (* l_0_7_79 l_0_7_79)))
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7125 (* ?x7124 l_0_7_62)))
 (let ((?x7328 (* l_0_7_6 l_0_7_6)))
 (let ((?x7326 (* l_0_7_5 l_0_7_5)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7122 (* ?x7058 l_0_7_47)))
 (let ((?x7321 (* l_0_7_4 l_0_7_4)))
 (let ((?x7318 (- (* (* 2.0 l_0_7_1) l_0_7_2) (* (* 4.0 l_0_7_16) l_0_7_19))))
 (let ((?x7325 (- (- (- (+ ?x7318 (* (* 4.0 l_0_7_31) l_0_7_34)) ?x7321) ?x7122) (* (* 4.0 l_0_7_46) l_0_7_49))))
 (let ((?x7332 (+ (+ (- (- ?x7325 ?x7326) ?x7328) ?x7125) (* (* 4.0 l_0_7_61) l_0_7_64))))
 (= (- (- (- ?x7332 ?x7333) ?x7335) ?x7337) 0.0)))))))))))))))
(assert
 (let ((?x7385 (* 2.0 l_0_7_81)))
 (let ((?x7386 (* ?x7385 l_0_7_84)))
 (let ((?x7382 (* 2.0 l_0_7_80)))
 (let ((?x7383 (* ?x7382 l_0_7_83)))
 (let ((?x7379 (* 2.0 l_0_7_79)))
 (let ((?x7380 (* ?x7379 l_0_7_82)))
 (let ((?x7029 (* 2.0 l_0_7_76)))
 (let ((?x7063 (* ?x7029 l_0_7_79)))
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7174 (* ?x7124 l_0_7_64)))
 (let ((?x7373 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x7370 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7169 (* ?x7058 l_0_7_49)))
 (let ((?x7364 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x7362 (+ (* (* (- 4.0) l_0_7_16) l_0_7_22) (* (* 4.0 l_0_7_31) l_0_7_37))))
 (let ((?x7371 (- (- (+ (- ?x7362 ?x7364) ?x7169) (* (* 4.0 l_0_7_46) l_0_7_52)) ?x7370)))
 (let ((?x7378 (+ (+ (- (- ?x7371 ?x7373) ?x7174) (* (* 4.0 l_0_7_61) l_0_7_67)) ?x7063)))
 (= (- (- (- ?x7378 ?x7380) ?x7383) ?x7386) 0.0))))))))))))))))))))
(assert
 (let ((?x7385 (* 2.0 l_0_7_81)))
 (let ((?x7429 (* ?x7385 l_0_7_88)))
 (let ((?x7382 (* 2.0 l_0_7_80)))
 (let ((?x7427 (* ?x7382 l_0_7_87)))
 (let ((?x7379 (* 2.0 l_0_7_79)))
 (let ((?x7425 (* ?x7379 l_0_7_86)))
 (let ((?x7119 (* 2.0 l_0_7_31)))
 (let ((?x7164 (* ?x7119 l_0_7_34)))
 (let ((?x7053 (* 2.0 l_0_7_16)))
 (let ((?x7153 (* ?x7053 l_0_7_19)))
 (let ((?x7412 (* 2.0 l_0_7_13)))
 (let ((?x7413 (* ?x7412 l_0_7_6)))
 (let ((?x7282 (* 2.0 l_0_7_12)))
 (let ((?x2839 (* ?x7282 l_0_7_5)))
 (let ((?x7417 (- (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x2839) ?x7413) ?x7153) (* (* 4.0 l_0_7_16) l_0_7_26))))
 (let ((?x7422 (- (+ (- ?x7417 ?x7164) (* (* 4.0 l_0_7_31) l_0_7_41)) (* (* 4.0 l_0_7_46) l_0_7_56))))
 (let ((?x7430 (- (- (- (+ ?x7422 (* (* 4.0 l_0_7_61) l_0_7_71)) ?x7425) ?x7427) ?x7429)))
 (= ?x7430 0.0)))))))))))))))))))
(assert
 (let ((?x7470 (* l_0_7_9 l_0_7_9)))
 (let ((?x7468 (* l_0_7_85 l_0_7_85)))
 (let ((?x7466 (* l_0_7_84 l_0_7_84)))
 (let ((?x7464 (* l_0_7_83 l_0_7_83)))
 (let ((?x7462 (* l_0_7_82 l_0_7_82)))
 (let ((?x7460 (* l_0_7_8 l_0_7_8)))
 (let ((?x7029 (* 2.0 l_0_7_76)))
 (let ((?x7079 (* ?x7029 l_0_7_82)))
 (let ((?x7457 (* l_0_7_7 l_0_7_7)))
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7242 (* ?x7124 l_0_7_67)))
 (let ((?x7456 (- (+ (* (- l_0_7_10) l_0_7_10) (* (* 2.0 l_0_7_46) l_0_7_52)) ?x7242)))
 (let ((?x7469 (- (- (- (- (- (+ (- ?x7456 ?x7457) ?x7079) ?x7460) ?x7462) ?x7464) ?x7466) ?x7468)))
 (= (- ?x7469 ?x7470) 0.0)))))))))))))))
(assert
 (let ((?x7505 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x7502 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x7499 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x7496 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x7029 (* 2.0 l_0_7_76)))
 (let ((?x7099 (* ?x7029 l_0_7_86)))
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7293 (* ?x7124 l_0_7_71)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7291 (* ?x7058 l_0_7_56)))
 (let ((?x7119 (* 2.0 l_0_7_31)))
 (let ((?x7236 (* ?x7119 l_0_7_37)))
 (let ((?x7053 (* 2.0 l_0_7_16)))
 (let ((?x7230 (* ?x7053 l_0_7_22)))
 (let ((?x7412 (* 2.0 l_0_7_13)))
 (let ((?x7488 (* ?x7412 l_0_7_9)))
 (let ((?x7282 (* 2.0 l_0_7_12)))
 (let ((?x7486 (* ?x7282 l_0_7_8)))
 (let ((?x7279 (* 2.0 l_0_7_11)))
 (let ((?x7484 (* ?x7279 l_0_7_7)))
 (let ((?x7490 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x7484) ?x7486) ?x7488) ?x7230)))
 (let ((?x7503 (- (- (- (+ (- (+ (- ?x7490 ?x7236) ?x7291) ?x7293) ?x7099) ?x7496) ?x7499) ?x7502)))
 (= (- ?x7503 ?x7505) 0.0))))))))))))))))))))))))
(assert
 (let ((?x7545 (* l_0_7_90 l_0_7_90)))
 (let ((?x7543 (* l_0_7_89 l_0_7_89)))
 (let ((?x7541 (* l_0_7_88 l_0_7_88)))
 (let ((?x7539 (* l_0_7_87 l_0_7_87)))
 (let ((?x7537 (* l_0_7_86 l_0_7_86)))
 (let ((?x7119 (* 2.0 l_0_7_31)))
 (let ((?x7289 (* ?x7119 l_0_7_41)))
 (let ((?x7053 (* 2.0 l_0_7_16)))
 (let ((?x7286 (* ?x7053 l_0_7_26)))
 (let ((?x7533 (* l_0_7_15 l_0_7_15)))
 (let ((?x7531 (* l_0_7_14 l_0_7_14)))
 (let ((?x7529 (* l_0_7_13 l_0_7_13)))
 (let ((?x7532 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x7529) ?x7531)))
 (let ((?x7544 (- (- (- (- (- (+ (- ?x7532 ?x7533) ?x7286) ?x7289) ?x7537) ?x7539) ?x7541) ?x7543)))
 (= (- ?x7544 ?x7545) 0.0))))))))))))))))
(assert
 (let ((?x7026 (* l_0_7_61 l_0_7_61)))
 (= (+ (- (* l_0_7_1 l_0_7_1) (* l_0_7_46 l_0_7_46)) ?x7026) 0.0)))
(assert
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7174 (* ?x7124 l_0_7_64)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7169 (* ?x7058 l_0_7_49)))
 (= (+ (- (* (* 2.0 l_0_7_1) l_0_7_4) ?x7169) ?x7174) 0.0))))))
(assert
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7242 (* ?x7124 l_0_7_67)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7239 (* ?x7058 l_0_7_52)))
 (= (+ (- (* (* 2.0 l_0_7_1) l_0_7_7) ?x7239) ?x7242) 0.0))))))
(assert
 (let ((?x7124 (* 2.0 l_0_7_61)))
 (let ((?x7293 (* ?x7124 l_0_7_71)))
 (let ((?x7058 (* 2.0 l_0_7_46)))
 (let ((?x7291 (* ?x7058 l_0_7_56)))
 (= (+ (- (* (* 2.0 l_0_7_1) l_0_7_11) ?x7291) ?x7293) 0.0))))))
(assert
 (let ((?x7669 (* l_0_7_96 l_0_7_96)))
 (let ((?x7667 (* l_0_7_95 l_0_7_95)))
 (let ((?x7665 (* l_0_7_94 l_0_7_94)))
 (let ((?x6871 (* l_0_7_63 l_0_7_63)))
 (let ((?x6865 (* l_0_7_62 l_0_7_62)))
 (let ((?x1908 (* l_0_7_48 l_0_7_48)))
 (let ((?x1893 (* l_0_7_47 l_0_7_47)))
 (let ((?x7117 (* l_0_7_3 l_0_7_3)))
 (let ((?x7115 (* l_0_7_2 l_0_7_2)))
 (let ((?x7597 (* l_0_7_111 l_0_7_111)))
 (let ((?x7598 (- (- (* (- l_0_7_109) l_0_7_109) (* l_0_7_110 l_0_7_110)) ?x7597)))
 (let ((?x7604 (- (- ?x7598 (* (* 4.0 l_0_7_17) l_0_7_19)) (* (* 4.0 l_0_7_18) l_0_7_20))))
 (let ((?x7611 (- (+ (- ?x7604 (* (* 1.0 l_0_7_19) l_0_7_19)) ?x7115) (* (* 1.0 l_0_7_20) l_0_7_20))))
 (let ((?x7618 (+ (+ (- ?x7611 (* (* 1.0 l_0_7_21) l_0_7_21)) ?x7117) (* (* 4.0 l_0_7_32) l_0_7_34))))
 (let ((?x7624 (+ (+ ?x7618 (* (* 4.0 l_0_7_33) l_0_7_35)) (* 1.0 (* l_0_7_34 l_0_7_34)))))
 (let ((?x7630 (+ (+ ?x7624 (* 1.0 (* l_0_7_35 l_0_7_35))) (* 1.0 (* l_0_7_36 l_0_7_36)))))
 (let ((?x7637 (- (- (- ?x7630 (* (* 4.0 l_0_7_47) l_0_7_49)) ?x1893) (* (* 4.0 l_0_7_48) l_0_7_50))))
 (let ((?x7644 (- (- (- ?x7637 ?x1908) (* (* 1.0 l_0_7_49) l_0_7_49)) (* (* 1.0 l_0_7_50) l_0_7_50))))
 (let ((?x7650 (+ (- ?x7644 (* (* 1.0 l_0_7_51) l_0_7_51)) (* (* 4.0 l_0_7_62) l_0_7_64))))
 (let ((?x7658 (+ (+ (+ (+ ?x7650 ?x6865) (* (* 4.0 l_0_7_63) l_0_7_65)) ?x6871) (* 1.0 (* l_0_7_64 l_0_7_64)))))
 (let ((?x7664 (+ (+ ?x7658 (* 1.0 (* l_0_7_65 l_0_7_65))) (* 1.0 (* l_0_7_66 l_0_7_66)))))
 (= (- (- (- ?x7664 ?x7665) ?x7667) ?x7669) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7662 (* l_0_7_66 l_0_7_66)))
 (let ((?x7760 (* 2.0 ?x7662)))
 (let ((?x7659 (* l_0_7_65 l_0_7_65)))
 (let ((?x7758 (* 2.0 ?x7659)))
 (let ((?x7656 (* l_0_7_64 l_0_7_64)))
 (let ((?x7756 (* 2.0 ?x7656)))
 (let ((?x6868 (* 2.0 l_0_7_63)))
 (let ((?x6869 (* ?x6868 l_0_7_65)))
 (let ((?x6862 (* 2.0 l_0_7_62)))
 (let ((?x6863 (* ?x6862 l_0_7_64)))
 (let ((?x6857 (* 2.0 l_0_7_48)))
 (let ((?x6858 (* ?x6857 l_0_7_50)))
 (let ((?x6852 (* 2.0 l_0_7_47)))
 (let ((?x6853 (* ?x6852 l_0_7_49)))
 (let ((?x7628 (* l_0_7_36 l_0_7_36)))
 (let ((?x7741 (* 2.0 ?x7628)))
 (let ((?x7625 (* l_0_7_35 l_0_7_35)))
 (let ((?x7739 (* 2.0 ?x7625)))
 (let ((?x7622 (* l_0_7_34 l_0_7_34)))
 (let ((?x7737 (* 2.0 ?x7622)))
 (let ((?x7158 (* 2.0 l_0_7_3)))
 (let ((?x7159 (* ?x7158 l_0_7_5)))
 (let ((?x7155 (* 2.0 l_0_7_2)))
 (let ((?x7156 (* ?x7155 l_0_7_4)))
 (let ((?x7732 (- (+ (* (* (- 2.0) l_0_7_19) l_0_7_19) ?x7156) (* (* 2.0 l_0_7_20) l_0_7_20))))
 (let ((?x7740 (+ (+ (+ (- ?x7732 (* (* 2.0 l_0_7_21) l_0_7_21)) ?x7159) ?x7737) ?x7739)))
 (let ((?x7747 (- (- (- (+ ?x7740 ?x7741) ?x6853) ?x6858) (* (* 2.0 l_0_7_49) l_0_7_49))))
 (let ((?x7753 (- (- ?x7747 (* (* 2.0 l_0_7_50) l_0_7_50)) (* (* 2.0 l_0_7_51) l_0_7_51))))
 (= (+ (+ (+ (+ (+ ?x7753 ?x6863) ?x6869) ?x7756) ?x7758) ?x7760) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x7337 (* l_0_7_81 l_0_7_81)))
 (let ((?x7335 (* l_0_7_80 l_0_7_80)))
 (let ((?x7333 (* l_0_7_79 l_0_7_79)))
 (let ((?x7662 (* l_0_7_66 l_0_7_66)))
 (let ((?x7659 (* l_0_7_65 l_0_7_65)))
 (let ((?x7656 (* l_0_7_64 l_0_7_64)))
 (let ((?x6868 (* 2.0 l_0_7_63)))
 (let ((?x7776 (* ?x6868 l_0_7_68)))
 (let ((?x6862 (* 2.0 l_0_7_62)))
 (let ((?x7774 (* ?x6862 l_0_7_67)))
 (let ((?x7713 (* l_0_7_51 l_0_7_51)))
 (let ((?x7709 (* l_0_7_50 l_0_7_50)))
 (let ((?x3164 (* l_0_7_49 l_0_7_49)))
 (let ((?x6857 (* 2.0 l_0_7_48)))
 (let ((?x3105 (* ?x6857 l_0_7_53)))
 (let ((?x6852 (* 2.0 l_0_7_47)))
 (let ((?x3093 (* ?x6852 l_0_7_52)))
 (let ((?x7158 (* 2.0 l_0_7_3)))
 (let ((?x7234 (* ?x7158 l_0_7_8)))
 (let ((?x7155 (* 2.0 l_0_7_2)))
 (let ((?x7232 (* ?x7155 l_0_7_7)))
 (let ((?x3113 (- (+ (* (* (- 4.0) l_0_7_19) l_0_7_22) ?x7232) (* (* 4.0 l_0_7_20) l_0_7_23))))
 (let ((?x3141 (+ (+ (- ?x3113 (* (* 4.0 l_0_7_21) l_0_7_24)) ?x7234) (* (* 4.0 l_0_7_34) l_0_7_37))))
 (let ((?x3087 (+ (+ ?x3141 (* (* 4.0 l_0_7_35) l_0_7_38)) (* (* 4.0 l_0_7_36) l_0_7_39))))
 (let ((?x3176 (+ (- (- (- ?x3087 ?x3093) ?x3105) (* (* 4.0 l_0_7_49) l_0_7_52)) ?x3164)))
 (let ((?x7772 (- (+ (- ?x3176 (* (* 4.0 l_0_7_50) l_0_7_53)) ?x7709) (* (* 4.0 l_0_7_51) l_0_7_54))))
 (let ((?x7780 (+ (+ (+ (+ ?x7772 ?x7713) ?x7774) ?x7776) (* (* 4.0 l_0_7_64) l_0_7_67))))
 (let ((?x7788 (+ (- (+ (- ?x7780 ?x7656) (* (* 4.0 l_0_7_65) l_0_7_68)) ?x7659) (* (* 4.0 l_0_7_66) l_0_7_69))))
 (= (+ (+ (+ (- ?x7788 ?x7662) ?x7333) ?x7335) ?x7337) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x6868 (* 2.0 l_0_7_63)))
 (let ((?x6989 (* ?x6868 l_0_7_72)))
 (let ((?x6862 (* 2.0 l_0_7_62)))
 (let ((?x6987 (* ?x6862 l_0_7_71)))
 (let ((?x6857 (* 2.0 l_0_7_48)))
 (let ((?x6985 (* ?x6857 l_0_7_57)))
 (let ((?x6852 (* 2.0 l_0_7_47)))
 (let ((?x6983 (* ?x6852 l_0_7_56)))
 (let ((?x7628 (* l_0_7_36 l_0_7_36)))
 (let ((?x7625 (* l_0_7_35 l_0_7_35)))
 (let ((?x7622 (* l_0_7_34 l_0_7_34)))
 (let ((?x7694 (* l_0_7_21 l_0_7_21)))
 (let ((?x3148 (* l_0_7_20 l_0_7_20)))
 (let ((?x7688 (* l_0_7_19 l_0_7_19)))
 (let ((?x7282 (* 2.0 l_0_7_12)))
 (let ((?x7283 (* ?x7282 l_0_7_3)))
 (let ((?x7279 (* 2.0 l_0_7_11)))
 (let ((?x7280 (* ?x7279 l_0_7_2)))
 (let ((?x7840 (- (+ (- (+ ?x7280 ?x7283) (* (* 4.0 l_0_7_19) l_0_7_26)) ?x7688) (* (* 4.0 l_0_7_20) l_0_7_27))))
 (let ((?x7846 (+ (+ (- (+ ?x7840 ?x3148) (* (* 4.0 l_0_7_21) l_0_7_28)) ?x7694) (* (* 4.0 l_0_7_34) l_0_7_41))))
 (let ((?x7852 (+ (- (+ (- ?x7846 ?x7622) (* (* 4.0 l_0_7_35) l_0_7_42)) ?x7625) (* (* 4.0 l_0_7_36) l_0_7_43))))
 (let ((?x7857 (- (- (- (- ?x7852 ?x7628) ?x6983) ?x6985) (* (* 4.0 l_0_7_49) l_0_7_56))))
 (let ((?x7861 (- (- ?x7857 (* (* 4.0 l_0_7_50) l_0_7_57)) (* (* 4.0 l_0_7_51) l_0_7_58))))
 (let ((?x7867 (+ (+ (+ (+ ?x7861 ?x6987) ?x6989) (* (* 4.0 l_0_7_64) l_0_7_71)) (* (* 4.0 l_0_7_65) l_0_7_72))))
 (= (+ ?x7867 (* (* 4.0 l_0_7_66) l_0_7_73)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7662 (* l_0_7_66 l_0_7_66)))
 (let ((?x7659 (* l_0_7_65 l_0_7_65)))
 (let ((?x7656 (* l_0_7_64 l_0_7_64)))
 (let ((?x7328 (* l_0_7_6 l_0_7_6)))
 (let ((?x7713 (* l_0_7_51 l_0_7_51)))
 (let ((?x7709 (* l_0_7_50 l_0_7_50)))
 (let ((?x7326 (* l_0_7_5 l_0_7_5)))
 (let ((?x7902 (- (+ (- (* l_0_7_4 l_0_7_4) (* l_0_7_49 l_0_7_49)) ?x7326) ?x7709)))
 (= (+ (+ (+ (+ (- ?x7902 ?x7713) ?x7328) ?x7656) ?x7659) ?x7662) 0.0))))))))))
(assert
 (let ((?x7919 (* 2.0 l_0_7_66)))
 (let ((?x7920 (* ?x7919 l_0_7_69)))
 (let ((?x7916 (* 2.0 l_0_7_65)))
 (let ((?x7917 (* ?x7916 l_0_7_68)))
 (let ((?x7913 (* 2.0 l_0_7_64)))
 (let ((?x7914 (* ?x7913 l_0_7_67)))
 (let ((?x7373 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x7751 (* 2.0 l_0_7_51)))
 (let ((?x3474 (* ?x7751 l_0_7_54)))
 (let ((?x7748 (* 2.0 l_0_7_50)))
 (let ((?x2258 (* ?x7748 l_0_7_53)))
 (let ((?x7370 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x7745 (* 2.0 l_0_7_49)))
 (let ((?x3544 (* ?x7745 l_0_7_52)))
 (let ((?x7364 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x7918 (+ (+ (+ (- (- (+ (- ?x7364 ?x3544) ?x7370) ?x2258) ?x3474) ?x7373) ?x7914) ?x7917)))
 (= (+ ?x7918 ?x7920) 0.0))))))))))))))))))
(assert
 (let ((?x7919 (* 2.0 l_0_7_66)))
 (let ((?x7946 (* ?x7919 l_0_7_73)))
 (let ((?x7916 (* 2.0 l_0_7_65)))
 (let ((?x7944 (* ?x7916 l_0_7_72)))
 (let ((?x7913 (* 2.0 l_0_7_64)))
 (let ((?x7942 (* ?x7913 l_0_7_71)))
 (let ((?x7751 (* 2.0 l_0_7_51)))
 (let ((?x7940 (* ?x7751 l_0_7_58)))
 (let ((?x7748 (* 2.0 l_0_7_50)))
 (let ((?x7938 (* ?x7748 l_0_7_57)))
 (let ((?x7745 (* 2.0 l_0_7_49)))
 (let ((?x7936 (* ?x7745 l_0_7_56)))
 (let ((?x7412 (* 2.0 l_0_7_13)))
 (let ((?x7413 (* ?x7412 l_0_7_6)))
 (let ((?x7282 (* 2.0 l_0_7_12)))
 (let ((?x2839 (* ?x7282 l_0_7_5)))
 (let ((?x7939 (- (- (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x2839) ?x7413) ?x7936) ?x7938)))
 (= (+ (+ (+ (- ?x7939 ?x7940) ?x7942) ?x7944) ?x7946) 0.0)))))))))))))))))))
(assert
 (let ((?x7470 (* l_0_7_9 l_0_7_9)))
 (let ((?x7460 (* l_0_7_8 l_0_7_8)))
 (let ((?x7981 (* l_0_7_70 l_0_7_70)))
 (let ((?x7457 (* l_0_7_7 l_0_7_7)))
 (let ((?x7978 (* l_0_7_69 l_0_7_69)))
 (let ((?x7976 (* l_0_7_68 l_0_7_68)))
 (let ((?x7974 (* l_0_7_67 l_0_7_67)))
 (let ((?x7972 (* l_0_7_55 l_0_7_55)))
 (let ((?x7970 (* l_0_7_54 l_0_7_54)))
 (let ((?x7968 (* l_0_7_53 l_0_7_53)))
 (let ((?x7971 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_52 l_0_7_52)) ?x7968) ?x7970)))
 (let ((?x7983 (+ (+ (+ (+ (+ (+ (- ?x7971 ?x7972) ?x7974) ?x7976) ?x7978) ?x7457) ?x7981) ?x7460)))
 (= (+ ?x7983 ?x7470) 0.0))))))))))))))
(assert
 (let ((?x8019 (* (* 2.0 l_0_7_70) l_0_7_74)))
 (let ((?x8016 (* (* 2.0 l_0_7_69) l_0_7_73)))
 (let ((?x8013 (* (* 2.0 l_0_7_68) l_0_7_72)))
 (let ((?x8010 (* (* 2.0 l_0_7_67) l_0_7_71)))
 (let ((?x8006 (* 2.0 l_0_7_55)))
 (let ((?x8007 (* ?x8006 l_0_7_59)))
 (let ((?x8003 (* 2.0 l_0_7_54)))
 (let ((?x8004 (* ?x8003 l_0_7_58)))
 (let ((?x8000 (* 2.0 l_0_7_53)))
 (let ((?x8001 (* ?x8000 l_0_7_57)))
 (let ((?x7997 (* 2.0 l_0_7_52)))
 (let ((?x7998 (* ?x7997 l_0_7_56)))
 (let ((?x7412 (* 2.0 l_0_7_13)))
 (let ((?x7488 (* ?x7412 l_0_7_9)))
 (let ((?x7282 (* 2.0 l_0_7_12)))
 (let ((?x7486 (* ?x7282 l_0_7_8)))
 (let ((?x7279 (* 2.0 l_0_7_11)))
 (let ((?x7484 (* ?x7279 l_0_7_7)))
 (let ((?x7999 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x7484) ?x7486) ?x7488) ?x7998)))
 (let ((?x8020 (+ (+ (+ (+ (- (- (- ?x7999 ?x8001) ?x8004) ?x8007) ?x8010) ?x8013) ?x8016) ?x8019)))
 (= ?x8020 0.0))))))))))))))))))))))
(assert
 (let ((?x8058 (* l_0_7_75 l_0_7_75)))
 (let ((?x8056 (* l_0_7_74 l_0_7_74)))
 (let ((?x8054 (* l_0_7_73 l_0_7_73)))
 (let ((?x8052 (* l_0_7_72 l_0_7_72)))
 (let ((?x8050 (* l_0_7_71 l_0_7_71)))
 (let ((?x8048 (* l_0_7_60 l_0_7_60)))
 (let ((?x8046 (* l_0_7_59 l_0_7_59)))
 (let ((?x8044 (* l_0_7_58 l_0_7_58)))
 (let ((?x8042 (* l_0_7_57 l_0_7_57)))
 (let ((?x8040 (* l_0_7_56 l_0_7_56)))
 (let ((?x7533 (* l_0_7_15 l_0_7_15)))
 (let ((?x7531 (* l_0_7_14 l_0_7_14)))
 (let ((?x7529 (* l_0_7_13 l_0_7_13)))
 (let ((?x8038 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x7529) ?x7531)))
 (let ((?x8051 (+ (- (- (- (- (- (+ ?x8038 ?x7533) ?x8040) ?x8042) ?x8044) ?x8046) ?x8048) ?x8050)))
 (= (+ (+ (+ (+ ?x8051 ?x8052) ?x8054) ?x8056) ?x8058) 0.0)))))))))))))))))
(assert
 (let ((?x7179 (* 2.0 l_0_7_78)))
 (let ((?x7180 (* ?x7179 l_0_7_80)))
 (let ((?x7176 (* 2.0 l_0_7_77)))
 (let ((?x7177 (* ?x7176 l_0_7_79)))
 (let ((?x7919 (* 2.0 l_0_7_66)))
 (let ((?x7920 (* ?x7919 l_0_7_69)))
 (let ((?x7916 (* 2.0 l_0_7_65)))
 (let ((?x7917 (* ?x7916 l_0_7_68)))
 (let ((?x7913 (* 2.0 l_0_7_64)))
 (let ((?x7914 (* ?x7913 l_0_7_67)))
 (let ((?x6868 (* 2.0 l_0_7_63)))
 (let ((?x6869 (* ?x6868 l_0_7_65)))
 (let ((?x6862 (* 2.0 l_0_7_62)))
 (let ((?x6863 (* ?x6862 l_0_7_64)))
 (let ((?x7751 (* 2.0 l_0_7_51)))
 (let ((?x3474 (* ?x7751 l_0_7_54)))
 (let ((?x7748 (* 2.0 l_0_7_50)))
 (let ((?x2258 (* ?x7748 l_0_7_53)))
 (let ((?x7745 (* 2.0 l_0_7_49)))
 (let ((?x3544 (* ?x7745 l_0_7_52)))
 (let ((?x6857 (* 2.0 l_0_7_48)))
 (let ((?x6858 (* ?x6857 l_0_7_50)))
 (let ((?x6852 (* 2.0 l_0_7_47)))
 (let ((?x6853 (* ?x6852 l_0_7_49)))
 (let ((?x8098 (* 2.0 l_0_7_36)))
 (let ((?x8099 (* ?x8098 l_0_7_39)))
 (let ((?x8095 (* 2.0 l_0_7_35)))
 (let ((?x8096 (* ?x8095 l_0_7_38)))
 (let ((?x8092 (* 2.0 l_0_7_34)))
 (let ((?x8093 (* ?x8092 l_0_7_37)))
 (let ((?x7733 (* 2.0 l_0_7_21)))
 (let ((?x8086 (* ?x7733 l_0_7_24)))
 (let ((?x7730 (* 2.0 l_0_7_20)))
 (let ((?x8084 (* ?x7730 l_0_7_23)))
 (let ((?x8081 (* 2.0 l_0_7_19)))
 (let ((?x8082 (* ?x8081 l_0_7_22)))
 (let ((?x8073 (- (* (* (- 2.0) l_0_7_109) l_0_7_112) (* (* 2.0 l_0_7_110) l_0_7_113))))
 (let ((?x8078 (- (- ?x8073 (* (* 2.0 l_0_7_111) l_0_7_114)) (* (* 4.0 l_0_7_17) l_0_7_22))))
 (let ((?x8087 (- (- (- (- ?x8078 (* (* 4.0 l_0_7_18) l_0_7_23)) ?x8082) ?x8084) ?x8086)))
 (let ((?x8091 (+ (+ ?x8087 (* (* 4.0 l_0_7_32) l_0_7_37)) (* (* 4.0 l_0_7_33) l_0_7_38))))
 (let ((?x8103 (- (+ (+ (+ (+ ?x8091 ?x8093) ?x8096) ?x8099) ?x6853) (* (* 4.0 l_0_7_47) l_0_7_52))))
 (let ((?x8108 (- (- (- (+ ?x8103 ?x6858) (* (* 4.0 l_0_7_48) l_0_7_53)) ?x3544) ?x2258)))
 (let ((?x8113 (- (+ (- (- ?x8108 ?x3474) ?x6863) (* (* 4.0 l_0_7_62) l_0_7_67)) ?x6869)))
 (let ((?x8118 (+ (+ (+ (+ ?x8113 (* (* 4.0 l_0_7_63) l_0_7_68)) ?x7914) ?x7917) ?x7920)))
 (let ((?x8126 (- (- (+ (+ ?x8118 ?x7177) ?x7180) (* (* 2.0 l_0_7_94) l_0_7_97)) (* (* 2.0 l_0_7_95) l_0_7_98))))
 (= (- ?x8126 (* (* 2.0 l_0_7_96) l_0_7_99)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7919 (* 2.0 l_0_7_66)))
 (let ((?x7946 (* ?x7919 l_0_7_73)))
 (let ((?x7916 (* 2.0 l_0_7_65)))
 (let ((?x7944 (* ?x7916 l_0_7_72)))
 (let ((?x7913 (* 2.0 l_0_7_64)))
 (let ((?x7942 (* ?x7913 l_0_7_71)))
 (let ((?x7751 (* 2.0 l_0_7_51)))
 (let ((?x7940 (* ?x7751 l_0_7_58)))
 (let ((?x7748 (* 2.0 l_0_7_50)))
 (let ((?x7938 (* ?x7748 l_0_7_57)))
 (let ((?x7745 (* 2.0 l_0_7_49)))
 (let ((?x7936 (* ?x7745 l_0_7_56)))
 (let ((?x8098 (* 2.0 l_0_7_36)))
 (let ((?x8212 (* ?x8098 l_0_7_43)))
 (let ((?x8095 (* 2.0 l_0_7_35)))
 (let ((?x8210 (* ?x8095 l_0_7_42)))
 (let ((?x8092 (* 2.0 l_0_7_34)))
 (let ((?x8208 (* ?x8092 l_0_7_41)))
 (let ((?x6846 (* 2.0 l_0_7_33)))
 (let ((?x6847 (* ?x6846 l_0_7_35)))
 (let ((?x6840 (* 2.0 l_0_7_32)))
 (let ((?x6841 (* ?x6840 l_0_7_34)))
 (let ((?x7733 (* 2.0 l_0_7_21)))
 (let ((?x8200 (* ?x7733 l_0_7_28)))
 (let ((?x7730 (* 2.0 l_0_7_20)))
 (let ((?x8198 (* ?x7730 l_0_7_27)))
 (let ((?x8081 (* 2.0 l_0_7_19)))
 (let ((?x8196 (* ?x8081 l_0_7_26)))
 (let ((?x6835 (* 2.0 l_0_7_18)))
 (let ((?x6836 (* ?x6835 l_0_7_20)))
 (let ((?x6830 (* 2.0 l_0_7_17)))
 (let ((?x6831 (* ?x6830 l_0_7_19)))
 (let ((?x8179 (- (* (* (- 2.0) l_0_7_101) l_0_7_94) (* (* 2.0 l_0_7_102) l_0_7_95))))
 (let ((?x8185 (- (- ?x8179 (* (* 2.0 l_0_7_103) l_0_7_96)) (* (* 2.0 l_0_7_109) l_0_7_116))))
 (let ((?x8189 (- (- ?x8185 (* (* 2.0 l_0_7_110) l_0_7_117)) (* (* 2.0 l_0_7_111) l_0_7_118))))
 (let ((?x8195 (- (+ (- (+ ?x8189 ?x6831) (* (* 4.0 l_0_7_17) l_0_7_26)) ?x6836) (* (* 4.0 l_0_7_18) l_0_7_27))))
 (let ((?x8204 (+ (- (- (- (- ?x8195 ?x8196) ?x8198) ?x8200) ?x6841) (* (* 4.0 l_0_7_32) l_0_7_41))))
 (let ((?x8211 (+ (+ (+ (- ?x8204 ?x6847) (* (* 4.0 l_0_7_33) l_0_7_42)) ?x8208) ?x8210)))
 (let ((?x8217 (- (- (+ ?x8211 ?x8212) (* (* 4.0 l_0_7_47) l_0_7_56)) (* (* 4.0 l_0_7_48) l_0_7_57))))
 (let ((?x8222 (+ (- (- (- ?x8217 ?x7936) ?x7938) ?x7940) (* (* 4.0 l_0_7_62) l_0_7_71))))
 (let ((?x8227 (+ (+ (+ (+ ?x8222 (* (* 4.0 l_0_7_63) l_0_7_72)) ?x7942) ?x7944) ?x7946)))
 (= ?x8227 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7385 (* 2.0 l_0_7_81)))
 (let ((?x7386 (* ?x7385 l_0_7_84)))
 (let ((?x7382 (* 2.0 l_0_7_80)))
 (let ((?x7383 (* ?x7382 l_0_7_83)))
 (let ((?x7379 (* 2.0 l_0_7_79)))
 (let ((?x7380 (* ?x7379 l_0_7_82)))
 (let ((?x7981 (* l_0_7_70 l_0_7_70)))
 (let ((?x8333 (* 2.0 ?x7981)))
 (let ((?x7978 (* l_0_7_69 l_0_7_69)))
 (let ((?x8331 (* 2.0 ?x7978)))
 (let ((?x7976 (* l_0_7_68 l_0_7_68)))
 (let ((?x8329 (* 2.0 ?x7976)))
 (let ((?x7974 (* l_0_7_67 l_0_7_67)))
 (let ((?x8327 (* 2.0 ?x7974)))
 (let ((?x7919 (* 2.0 l_0_7_66)))
 (let ((?x7920 (* ?x7919 l_0_7_69)))
 (let ((?x7916 (* 2.0 l_0_7_65)))
 (let ((?x7917 (* ?x7916 l_0_7_68)))
 (let ((?x7913 (* 2.0 l_0_7_64)))
 (let ((?x7914 (* ?x7913 l_0_7_67)))
 (let ((?x7751 (* 2.0 l_0_7_51)))
 (let ((?x3474 (* ?x7751 l_0_7_54)))
 (let ((?x7748 (* 2.0 l_0_7_50)))
 (let ((?x2258 (* ?x7748 l_0_7_53)))
 (let ((?x7745 (* 2.0 l_0_7_49)))
 (let ((?x3544 (* ?x7745 l_0_7_52)))
 (let ((?x8310 (* l_0_7_40 l_0_7_40)))
 (let ((?x8311 (* 2.0 ?x8310)))
 (let ((?x8307 (* l_0_7_39 l_0_7_39)))
 (let ((?x8308 (* 2.0 ?x8307)))
 (let ((?x8304 (* l_0_7_38 l_0_7_38)))
 (let ((?x8305 (* 2.0 ?x8304)))
 (let ((?x8301 (* l_0_7_37 l_0_7_37)))
 (let ((?x8302 (* 2.0 ?x8301)))
 (let ((?x8294 (- (* (* (- 2.0) l_0_7_22) l_0_7_22) (* (* 2.0 l_0_7_23) l_0_7_23))))
 (let ((?x8300 (- (- ?x8294 (* (* 2.0 l_0_7_24) l_0_7_24)) (* (* 2.0 l_0_7_25) l_0_7_25))))
 (let ((?x8315 (+ (+ (+ (+ (+ (+ (+ ?x8300 ?x8302) ?x8305) ?x8308) ?x8311) ?x3544) ?x2258) ?x3474)))
 (let ((?x8319 (- (- ?x8315 (* (* 2.0 l_0_7_52) l_0_7_52)) (* (* 2.0 l_0_7_53) l_0_7_53))))
 (let ((?x8323 (- (- ?x8319 (* (* 2.0 l_0_7_54) l_0_7_54)) (* (* 2.0 l_0_7_55) l_0_7_55))))
 (let ((?x8334 (+ (+ (+ (+ (- (- (- ?x8323 ?x7914) ?x7917) ?x7920) ?x8327) ?x8329) ?x8331) ?x8333)))
 (= (+ (+ (+ ?x8334 ?x7380) ?x7383) ?x7386) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7385 (* 2.0 l_0_7_81)))
 (let ((?x7429 (* ?x7385 l_0_7_88)))
 (let ((?x7382 (* 2.0 l_0_7_80)))
 (let ((?x7427 (* ?x7382 l_0_7_87)))
 (let ((?x7379 (* 2.0 l_0_7_79)))
 (let ((?x7425 (* ?x7379 l_0_7_86)))
 (let ((?x7919 (* 2.0 l_0_7_66)))
 (let ((?x7946 (* ?x7919 l_0_7_73)))
 (let ((?x7916 (* 2.0 l_0_7_65)))
 (let ((?x7944 (* ?x7916 l_0_7_72)))
 (let ((?x7913 (* 2.0 l_0_7_64)))
 (let ((?x7942 (* ?x7913 l_0_7_71)))
 (let ((?x7751 (* 2.0 l_0_7_51)))
 (let ((?x7940 (* ?x7751 l_0_7_58)))
 (let ((?x7748 (* 2.0 l_0_7_50)))
 (let ((?x7938 (* ?x7748 l_0_7_57)))
 (let ((?x7745 (* 2.0 l_0_7_49)))
 (let ((?x7936 (* ?x7745 l_0_7_56)))
 (let ((?x8098 (* 2.0 l_0_7_36)))
 (let ((?x8099 (* ?x8098 l_0_7_39)))
 (let ((?x8095 (* 2.0 l_0_7_35)))
 (let ((?x8096 (* ?x8095 l_0_7_38)))
 (let ((?x8092 (* 2.0 l_0_7_34)))
 (let ((?x8093 (* ?x8092 l_0_7_37)))
 (let ((?x7733 (* 2.0 l_0_7_21)))
 (let ((?x8086 (* ?x7733 l_0_7_24)))
 (let ((?x7730 (* 2.0 l_0_7_20)))
 (let ((?x8084 (* ?x7730 l_0_7_23)))
 (let ((?x8081 (* 2.0 l_0_7_19)))
 (let ((?x8082 (* ?x8081 l_0_7_22)))
 (let ((?x8373 (- (- (+ (+ ?x8082 ?x8084) ?x8086) (* (* 4.0 l_0_7_22) l_0_7_26)) (* (* 4.0 l_0_7_23) l_0_7_27))))
 (let ((?x8379 (- (- ?x8373 (* (* 4.0 l_0_7_24) l_0_7_28)) (* (* 4.0 l_0_7_25) l_0_7_29))))
 (let ((?x8385 (+ (- (- (- ?x8379 ?x8093) ?x8096) ?x8099) (* (* 4.0 l_0_7_37) l_0_7_41))))
 (let ((?x8391 (+ (+ ?x8385 (* (* 4.0 l_0_7_38) l_0_7_42)) (* (* 4.0 l_0_7_39) l_0_7_43))))
 (let ((?x8397 (+ (+ (+ (+ ?x8391 (* (* 4.0 l_0_7_40) l_0_7_44)) ?x7936) ?x7938) ?x7940)))
 (let ((?x8403 (- (- ?x8397 (* (* 4.0 l_0_7_52) l_0_7_56)) (* (* 4.0 l_0_7_53) l_0_7_57))))
 (let ((?x8409 (- (- ?x8403 (* (* 4.0 l_0_7_54) l_0_7_58)) (* (* 4.0 l_0_7_55) l_0_7_59))))
 (let ((?x8415 (+ (- (- (- ?x8409 ?x7942) ?x7944) ?x7946) (* (* 4.0 l_0_7_67) l_0_7_71))))
 (let ((?x8421 (+ (+ ?x8415 (* (* 4.0 l_0_7_68) l_0_7_72)) (* (* 4.0 l_0_7_69) l_0_7_73))))
 (let ((?x8427 (+ (+ (+ (+ ?x8421 (* (* 4.0 l_0_7_70) l_0_7_74)) ?x7425) ?x7427) ?x7429)))
 (= ?x8427 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8058 (* l_0_7_75 l_0_7_75)))
 (let ((?x8528 (* 2.0 ?x8058)))
 (let ((?x8056 (* l_0_7_74 l_0_7_74)))
 (let ((?x8526 (* 2.0 ?x8056)))
 (let ((?x8054 (* l_0_7_73 l_0_7_73)))
 (let ((?x8524 (* 2.0 ?x8054)))
 (let ((?x8052 (* l_0_7_72 l_0_7_72)))
 (let ((?x8522 (* 2.0 ?x8052)))
 (let ((?x8050 (* l_0_7_71 l_0_7_71)))
 (let ((?x8520 (* 2.0 ?x8050)))
 (let ((?x8502 (* l_0_7_45 l_0_7_45)))
 (let ((?x8503 (* 2.0 ?x8502)))
 (let ((?x8499 (* l_0_7_44 l_0_7_44)))
 (let ((?x8500 (* 2.0 ?x8499)))
 (let ((?x8496 (* l_0_7_43 l_0_7_43)))
 (let ((?x8497 (* 2.0 ?x8496)))
 (let ((?x8493 (* l_0_7_42 l_0_7_42)))
 (let ((?x8494 (* 2.0 ?x8493)))
 (let ((?x8490 (* l_0_7_41 l_0_7_41)))
 (let ((?x8491 (* 2.0 ?x8490)))
 (let ((?x8098 (* 2.0 l_0_7_36)))
 (let ((?x8212 (* ?x8098 l_0_7_43)))
 (let ((?x8095 (* 2.0 l_0_7_35)))
 (let ((?x8210 (* ?x8095 l_0_7_42)))
 (let ((?x8092 (* 2.0 l_0_7_34)))
 (let ((?x8208 (* ?x8092 l_0_7_41)))
 (let ((?x7733 (* 2.0 l_0_7_21)))
 (let ((?x8200 (* ?x7733 l_0_7_28)))
 (let ((?x7730 (* 2.0 l_0_7_20)))
 (let ((?x8198 (* ?x7730 l_0_7_27)))
 (let ((?x8081 (* 2.0 l_0_7_19)))
 (let ((?x8196 (* ?x8081 l_0_7_26)))
 (let ((?x8477 (- (- (+ (+ ?x8196 ?x8198) ?x8200) (* (* 2.0 l_0_7_26) l_0_7_26)) (* (* 2.0 l_0_7_27) l_0_7_27))))
 (let ((?x8483 (- (- ?x8477 (* (* 2.0 l_0_7_28) l_0_7_28)) (* (* 2.0 l_0_7_29) l_0_7_29))))
 (let ((?x8489 (- (- (- (- ?x8483 (* (* 2.0 l_0_7_30) l_0_7_30)) ?x8208) ?x8210) ?x8212)))
 (let ((?x8507 (- (+ (+ (+ (+ (+ ?x8489 ?x8491) ?x8494) ?x8497) ?x8500) ?x8503) (* (* 2.0 l_0_7_56) l_0_7_56))))
 (let ((?x8513 (- (- ?x8507 (* (* 2.0 l_0_7_57) l_0_7_57)) (* (* 2.0 l_0_7_58) l_0_7_58))))
 (let ((?x8519 (- (- ?x8513 (* (* 2.0 l_0_7_59) l_0_7_59)) (* (* 2.0 l_0_7_60) l_0_7_60))))
 (= (+ (+ (+ (+ (+ ?x8519 ?x8520) ?x8522) ?x8524) ?x8526) ?x8528) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7129 (* l_0_7_78 l_0_7_78)))
 (let ((?x7127 (* l_0_7_77 l_0_7_77)))
 (let ((?x6871 (* l_0_7_63 l_0_7_63)))
 (let ((?x6868 (* 2.0 l_0_7_63)))
 (let ((?x7776 (* ?x6868 l_0_7_68)))
 (let ((?x6865 (* l_0_7_62 l_0_7_62)))
 (let ((?x6862 (* 2.0 l_0_7_62)))
 (let ((?x7774 (* ?x6862 l_0_7_67)))
 (let ((?x1908 (* l_0_7_48 l_0_7_48)))
 (let ((?x6857 (* 2.0 l_0_7_48)))
 (let ((?x3105 (* ?x6857 l_0_7_53)))
 (let ((?x1893 (* l_0_7_47 l_0_7_47)))
 (let ((?x6852 (* 2.0 l_0_7_47)))
 (let ((?x3093 (* ?x6852 l_0_7_52)))
 (let ((?x6846 (* 2.0 l_0_7_33)))
 (let ((?x4097 (* ?x6846 l_0_7_38)))
 (let ((?x6840 (* 2.0 l_0_7_32)))
 (let ((?x4239 (* ?x6840 l_0_7_37)))
 (let ((?x6835 (* 2.0 l_0_7_18)))
 (let ((?x4237 (* ?x6835 l_0_7_23)))
 (let ((?x6830 (* 2.0 l_0_7_17)))
 (let ((?x4243 (* ?x6830 l_0_7_22)))
 (let ((?x4241 (- (* (* (- 2.0) l_0_7_107) l_0_7_112) (* (* 2.0 l_0_7_108) l_0_7_113))))
 (let ((?x4124 (- (+ (- (+ (+ (- (- ?x4241 ?x4243) ?x4237) ?x4239) ?x4097) ?x3093) ?x1893) ?x3105)))
 (let ((?x8555 (+ (+ (- (+ (- (+ (+ ?x4124 ?x1908) ?x7774) ?x6865) ?x7776) ?x6871) ?x7127) ?x7129)))
 (let ((?x8559 (- (- ?x8555 (* (* 2.0 l_0_7_92) l_0_7_97)) (* (* 2.0 l_0_7_93) l_0_7_98))))
 (= ?x8559 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8636 (* l_0_7_99 l_0_7_99)))
 (let ((?x8634 (* l_0_7_98 l_0_7_98)))
 (let ((?x8632 (* l_0_7_97 l_0_7_97)))
 (let ((?x7179 (* 2.0 l_0_7_78)))
 (let ((?x7247 (* ?x7179 l_0_7_83)))
 (let ((?x7176 (* 2.0 l_0_7_77)))
 (let ((?x7245 (* ?x7176 l_0_7_82)))
 (let ((?x6868 (* 2.0 l_0_7_63)))
 (let ((?x7776 (* ?x6868 l_0_7_68)))
 (let ((?x6862 (* 2.0 l_0_7_62)))
 (let ((?x7774 (* ?x6862 l_0_7_67)))
 (let ((?x6857 (* 2.0 l_0_7_48)))
 (let ((?x3105 (* ?x6857 l_0_7_53)))
 (let ((?x6852 (* 2.0 l_0_7_47)))
 (let ((?x3093 (* ?x6852 l_0_7_52)))
 (let ((?x8584 (* l_0_7_115 l_0_7_115)))
 (let ((?x8582 (* l_0_7_114 l_0_7_114)))
 (let ((?x8580 (* l_0_7_113 l_0_7_113)))
 (let ((?x8581 (- (- (* (- l_0_7_100) l_0_7_100) (* l_0_7_112 l_0_7_112)) ?x8580)))
 (let ((?x8591 (- (- (- (- ?x8581 ?x8582) ?x8584) (* (* 1.0 l_0_7_22) l_0_7_22)) (* (* 1.0 l_0_7_23) l_0_7_23))))
 (let ((?x8597 (- (- ?x8591 (* (* 1.0 l_0_7_24) l_0_7_24)) (* (* 1.0 l_0_7_25) l_0_7_25))))
 (let ((?x8601 (+ (+ ?x8597 (* 1.0 (* l_0_7_37 l_0_7_37))) (* 1.0 (* l_0_7_38 l_0_7_38)))))
 (let ((?x8605 (+ (+ ?x8601 (* 1.0 (* l_0_7_39 l_0_7_39))) (* 1.0 (* l_0_7_40 l_0_7_40)))))
 (let ((?x8613 (- (- (+ (+ ?x8605 ?x3093) ?x3105) (* (* 1.0 l_0_7_52) l_0_7_52)) (* (* 1.0 l_0_7_53) l_0_7_53))))
 (let ((?x8619 (- (- ?x8613 (* (* 1.0 l_0_7_54) l_0_7_54)) (* (* 1.0 l_0_7_55) l_0_7_55))))
 (let ((?x8625 (+ (+ (- (- ?x8619 ?x7774) ?x7776) (* 1.0 (* l_0_7_67 l_0_7_67))) (* 1.0 (* l_0_7_68 l_0_7_68)))))
 (let ((?x8629 (+ (+ ?x8625 (* 1.0 (* l_0_7_69 l_0_7_69))) (* 1.0 (* l_0_7_70 l_0_7_70)))))
 (= (- (- (- (+ (+ ?x8629 ?x7245) ?x7247) ?x8632) ?x8634) ?x8636) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x7179 (* 2.0 l_0_7_78)))
 (let ((?x7297 (* ?x7179 l_0_7_87)))
 (let ((?x7176 (* 2.0 l_0_7_77)))
 (let ((?x7295 (* ?x7176 l_0_7_86)))
 (let ((?x8019 (* (* 2.0 l_0_7_70) l_0_7_74)))
 (let ((?x8016 (* (* 2.0 l_0_7_69) l_0_7_73)))
 (let ((?x8013 (* (* 2.0 l_0_7_68) l_0_7_72)))
 (let ((?x8010 (* (* 2.0 l_0_7_67) l_0_7_71)))
 (let ((?x6868 (* 2.0 l_0_7_63)))
 (let ((?x6989 (* ?x6868 l_0_7_72)))
 (let ((?x6862 (* 2.0 l_0_7_62)))
 (let ((?x6987 (* ?x6862 l_0_7_71)))
 (let ((?x8006 (* 2.0 l_0_7_55)))
 (let ((?x8007 (* ?x8006 l_0_7_59)))
 (let ((?x8003 (* 2.0 l_0_7_54)))
 (let ((?x8004 (* ?x8003 l_0_7_58)))
 (let ((?x8000 (* 2.0 l_0_7_53)))
 (let ((?x8001 (* ?x8000 l_0_7_57)))
 (let ((?x7997 (* 2.0 l_0_7_52)))
 (let ((?x7998 (* ?x7997 l_0_7_56)))
 (let ((?x6857 (* 2.0 l_0_7_48)))
 (let ((?x6985 (* ?x6857 l_0_7_57)))
 (let ((?x6852 (* 2.0 l_0_7_47)))
 (let ((?x6983 (* ?x6852 l_0_7_56)))
 (let ((?x8679 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x8676 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x8673 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x8670 (* (* 2.0 l_0_7_37) l_0_7_41)))
 (let ((?x6846 (* 2.0 l_0_7_33)))
 (let ((?x4097 (* ?x6846 l_0_7_38)))
 (let ((?x6840 (* 2.0 l_0_7_32)))
 (let ((?x4239 (* ?x6840 l_0_7_37)))
 (let ((?x8298 (* 2.0 l_0_7_25)))
 (let ((?x8665 (* ?x8298 l_0_7_29)))
 (let ((?x8295 (* 2.0 l_0_7_24)))
 (let ((?x8663 (* ?x8295 l_0_7_28)))
 (let ((?x3886 (* 2.0 l_0_7_23)))
 (let ((?x8661 (* ?x3886 l_0_7_27)))
 (let ((?x8659 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x6835 (* 2.0 l_0_7_18)))
 (let ((?x4237 (* ?x6835 l_0_7_23)))
 (let ((?x6830 (* 2.0 l_0_7_17)))
 (let ((?x4243 (* ?x6830 l_0_7_22)))
 (let ((?x4435 (- (* (* (- 2.0) l_0_7_100) l_0_7_104) (* (* 2.0 l_0_7_101) l_0_7_97))))
 (let ((?x4343 (- (- ?x4435 (* (* 2.0 l_0_7_102) l_0_7_98)) (* (* 2.0 l_0_7_103) l_0_7_99))))
 (let ((?x4388 (- (- ?x4343 (* (* 2.0 l_0_7_112) l_0_7_116)) (* (* 2.0 l_0_7_113) l_0_7_117))))
 (let ((?x8655 (- (- ?x4388 (* (* 2.0 l_0_7_114) l_0_7_118)) (* (* 2.0 l_0_7_115) l_0_7_119))))
 (let ((?x8667 (- (- (- (- (- (+ (+ ?x8655 ?x4243) ?x4237) ?x8659) ?x8661) ?x8663) ?x8665) ?x4239)))
 (let ((?x8682 (+ (+ (+ (+ (+ (+ (- ?x8667 ?x4097) ?x8670) ?x8673) ?x8676) ?x8679) ?x6983) ?x6985)))
 (let ((?x8689 (+ (- (- (- (- (- (- ?x8682 ?x7998) ?x8001) ?x8004) ?x8007) ?x6987) ?x6989) ?x8010)))
 (= (+ (+ (+ (+ (+ ?x8689 ?x8013) ?x8016) ?x8019) ?x7295) ?x7297) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6846 (* 2.0 l_0_7_33)))
 (let ((?x6980 (* ?x6846 l_0_7_42)))
 (let ((?x6840 (* 2.0 l_0_7_32)))
 (let ((?x6977 (* ?x6840 l_0_7_41)))
 (let ((?x6835 (* 2.0 l_0_7_18)))
 (let ((?x6974 (* ?x6835 l_0_7_27)))
 (let ((?x6830 (* 2.0 l_0_7_17)))
 (let ((?x6971 (* ?x6830 l_0_7_26)))
 (let ((?x8737 (* l_0_7_120 l_0_7_120)))
 (let ((?x8735 (* l_0_7_119 l_0_7_119)))
 (let ((?x8733 (* l_0_7_118 l_0_7_118)))
 (let ((?x8731 (* l_0_7_117 l_0_7_117)))
 (let ((?x8729 (* l_0_7_116 l_0_7_116)))
 (let ((?x8727 (* l_0_7_105 l_0_7_105)))
 (let ((?x8725 (* l_0_7_104 l_0_7_104)))
 (let ((?x8723 (* l_0_7_103 l_0_7_103)))
 (let ((?x8724 (- (- (* (- l_0_7_101) l_0_7_101) (* l_0_7_102 l_0_7_102)) ?x8723)))
 (let ((?x8738 (- (- (- (- (- (- (- ?x8724 ?x8725) ?x8727) ?x8729) ?x8731) ?x8733) ?x8735) ?x8737)))
 (let ((?x8746 (- (- (+ (+ ?x8738 ?x6971) ?x6974) (* (* 1.0 l_0_7_26) l_0_7_26)) (* (* 1.0 l_0_7_27) l_0_7_27))))
 (let ((?x8752 (- (- ?x8746 (* (* 1.0 l_0_7_28) l_0_7_28)) (* (* 1.0 l_0_7_29) l_0_7_29))))
 (let ((?x8759 (+ (- (- (- ?x8752 (* (* 1.0 l_0_7_30) l_0_7_30)) ?x6977) ?x6980) (* 1.0 (* l_0_7_41 l_0_7_41)))))
 (let ((?x8763 (+ (+ ?x8759 (* 1.0 (* l_0_7_42 l_0_7_42))) (* 1.0 (* l_0_7_43 l_0_7_43)))))
 (let ((?x8767 (+ (+ ?x8763 (* 1.0 (* l_0_7_44 l_0_7_44))) (* 1.0 (* l_0_7_45 l_0_7_45)))))
 (let ((?x8773 (- (- ?x8767 (* (* 1.0 l_0_7_56) l_0_7_56)) (* (* 1.0 l_0_7_57) l_0_7_57))))
 (let ((?x8779 (- (- ?x8773 (* (* 1.0 l_0_7_58) l_0_7_58)) (* (* 1.0 l_0_7_59) l_0_7_59))))
 (let ((?x8784 (+ (- ?x8779 (* (* 1.0 l_0_7_60) l_0_7_60)) (* 1.0 (* l_0_7_71 l_0_7_71)))))
 (let ((?x8788 (+ (+ ?x8784 (* 1.0 (* l_0_7_72 l_0_7_72))) (* 1.0 (* l_0_7_73 l_0_7_73)))))
 (let ((?x8792 (+ (+ ?x8788 (* 1.0 (* l_0_7_74 l_0_7_74))) (* 1.0 (* l_0_7_75 l_0_7_75)))))
 (= ?x8792 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x7505 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x7502 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x7499 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x7496 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x8019 (* (* 2.0 l_0_7_70) l_0_7_74)))
 (let ((?x8016 (* (* 2.0 l_0_7_69) l_0_7_73)))
 (let ((?x8013 (* (* 2.0 l_0_7_68) l_0_7_72)))
 (let ((?x8010 (* (* 2.0 l_0_7_67) l_0_7_71)))
 (let ((?x8006 (* 2.0 l_0_7_55)))
 (let ((?x8007 (* ?x8006 l_0_7_59)))
 (let ((?x8003 (* 2.0 l_0_7_54)))
 (let ((?x8004 (* ?x8003 l_0_7_58)))
 (let ((?x8000 (* 2.0 l_0_7_53)))
 (let ((?x8001 (* ?x8000 l_0_7_57)))
 (let ((?x7997 (* 2.0 l_0_7_52)))
 (let ((?x7998 (* ?x7997 l_0_7_56)))
 (let ((?x8310 (* l_0_7_40 l_0_7_40)))
 (let ((?x8307 (* l_0_7_39 l_0_7_39)))
 (let ((?x8304 (* l_0_7_38 l_0_7_38)))
 (let ((?x8301 (* l_0_7_37 l_0_7_37)))
 (let ((?x3898 (* l_0_7_25 l_0_7_25)))
 (let ((?x3895 (* l_0_7_24 l_0_7_24)))
 (let ((?x4932 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x3895) ?x3898)))
 (let ((?x4870 (+ (+ (+ (- (- (- (- ?x4932 ?x8301) ?x8304) ?x8307) ?x8310) ?x7998) ?x8001) ?x8004)))
 (let ((?x4876 (+ (+ (- (- (- (- (+ ?x4870 ?x8007) ?x8010) ?x8013) ?x8016) ?x8019) ?x7496) ?x7499)))
 (= (+ (+ ?x4876 ?x7502) ?x7505) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x7545 (* l_0_7_90 l_0_7_90)))
 (let ((?x7543 (* l_0_7_89 l_0_7_89)))
 (let ((?x7541 (* l_0_7_88 l_0_7_88)))
 (let ((?x7539 (* l_0_7_87 l_0_7_87)))
 (let ((?x7537 (* l_0_7_86 l_0_7_86)))
 (let ((?x8058 (* l_0_7_75 l_0_7_75)))
 (let ((?x8056 (* l_0_7_74 l_0_7_74)))
 (let ((?x8054 (* l_0_7_73 l_0_7_73)))
 (let ((?x8052 (* l_0_7_72 l_0_7_72)))
 (let ((?x8050 (* l_0_7_71 l_0_7_71)))
 (let ((?x8048 (* l_0_7_60 l_0_7_60)))
 (let ((?x8046 (* l_0_7_59 l_0_7_59)))
 (let ((?x8044 (* l_0_7_58 l_0_7_58)))
 (let ((?x8042 (* l_0_7_57 l_0_7_57)))
 (let ((?x8040 (* l_0_7_56 l_0_7_56)))
 (let ((?x8679 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x8676 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x8673 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x8670 (* (* 2.0 l_0_7_37) l_0_7_41)))
 (let ((?x8298 (* 2.0 l_0_7_25)))
 (let ((?x8665 (* ?x8298 l_0_7_29)))
 (let ((?x8295 (* 2.0 l_0_7_24)))
 (let ((?x8663 (* ?x8295 l_0_7_28)))
 (let ((?x3886 (* 2.0 l_0_7_23)))
 (let ((?x8661 (* ?x3886 l_0_7_27)))
 (let ((?x8659 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x8837 (- (- (- (- (+ (+ (+ ?x8659 ?x8661) ?x8663) ?x8665) ?x8670) ?x8673) ?x8676) ?x8679)))
 (let ((?x8844 (- (- (+ (+ (+ (+ (+ ?x8837 ?x8040) ?x8042) ?x8044) ?x8046) ?x8048) ?x8050) ?x8052)))
 (let ((?x8851 (+ (+ (+ (+ (- (- (- ?x8844 ?x8054) ?x8056) ?x8058) ?x7537) ?x7539) ?x7541) ?x7543)))
 (= (+ ?x8851 ?x7545) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x8502 (* l_0_7_45 l_0_7_45)))
 (let ((?x8499 (* l_0_7_44 l_0_7_44)))
 (let ((?x8496 (* l_0_7_43 l_0_7_43)))
 (let ((?x8493 (* l_0_7_42 l_0_7_42)))
 (let ((?x8490 (* l_0_7_41 l_0_7_41)))
 (let ((?x4024 (* l_0_7_30 l_0_7_30)))
 (let ((?x4021 (* l_0_7_29 l_0_7_29)))
 (let ((?x4019 (* l_0_7_28 l_0_7_28)))
 (let ((?x5014 (+ (+ (+ (* l_0_7_26 l_0_7_26) (* l_0_7_27 l_0_7_27)) ?x4019) ?x4021)))
 (= (- (- (- (- (- (+ ?x5014 ?x4024) ?x8490) ?x8493) ?x8496) ?x8499) ?x8502) 0.0)))))))))))
(assert
 (let ((?x7468 (* l_0_7_85 l_0_7_85)))
 (let ((?x7466 (* l_0_7_84 l_0_7_84)))
 (let ((?x7464 (* l_0_7_83 l_0_7_83)))
 (let ((?x7462 (* l_0_7_82 l_0_7_82)))
 (let ((?x7981 (* l_0_7_70 l_0_7_70)))
 (let ((?x7978 (* l_0_7_69 l_0_7_69)))
 (let ((?x7976 (* l_0_7_68 l_0_7_68)))
 (let ((?x7974 (* l_0_7_67 l_0_7_67)))
 (let ((?x7972 (* l_0_7_55 l_0_7_55)))
 (let ((?x7970 (* l_0_7_54 l_0_7_54)))
 (let ((?x8885 (+ (+ (+ (* l_0_7_52 l_0_7_52) (* l_0_7_53 l_0_7_53)) ?x7970) ?x7972)))
 (let ((?x8892 (+ (+ (+ (- (- (- (- ?x8885 ?x7974) ?x7976) ?x7978) ?x7981) ?x7462) ?x7464) ?x7466)))
 (= (+ ?x8892 ?x7468) 0.0))))))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_91 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_96 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (>= l_0_7_106 0.0))
(assert
 (>= l_0_7_108 0.0))
(assert
 (>= l_0_7_111 0.0))
(assert
 (>= l_0_7_115 0.0))
(assert
 (>= l_0_7_120 0.0))
(assert
 (let ((?x8977 (* l_0_8_93 l_0_8_93)))
 (let ((?x8975 (* l_0_8_92 l_0_8_92)))
 (let ((?x8949 (* l_0_8_123 l_0_8_123)))
 (let ((?x8947 (* l_0_8_122 l_0_8_122)))
 (let ((?x8948 (- (- (- _a_0_ (* l_0_8_107 l_0_8_107)) (* l_0_8_108 l_0_8_108)) ?x8947)))
 (let ((?x8956 (- (- (- ?x8948 ?x8949) (* (* 1.0 l_0_8_17) l_0_8_17)) (* (* 1.0 l_0_8_18) l_0_8_18))))
 (let ((?x8962 (+ (+ ?x8956 (* 1.0 (* l_0_8_32 l_0_8_32))) (* 1.0 (* l_0_8_33 l_0_8_33)))))
 (let ((?x8968 (- (- ?x8962 (* (* 1.0 l_0_8_47) l_0_8_47)) (* (* 1.0 l_0_8_48) l_0_8_48))))
 (let ((?x8974 (+ (+ ?x8968 (* 1.0 (* l_0_8_62 l_0_8_62))) (* 1.0 (* l_0_8_63 l_0_8_63)))))
 (= (- (- (- ?x8974 ?x8975) ?x8977) 3.0) 0.0)))))))))))
(assert
 (let ((?x9046 (* 2.0 l_0_8_63)))
 (let ((?x9047 (* ?x9046 l_0_8_72)))
 (let ((?x9043 (* 2.0 l_0_8_62)))
 (let ((?x9044 (* ?x9043 l_0_8_71)))
 (let ((?x9040 (* 2.0 l_0_8_48)))
 (let ((?x9041 (* ?x9040 l_0_8_57)))
 (let ((?x9037 (* 2.0 l_0_8_47)))
 (let ((?x9038 (* ?x9037 l_0_8_56)))
 (let ((?x8960 (* l_0_8_33 l_0_8_33)))
 (let ((?x9033 (* 2.0 l_0_8_33)))
 (let ((?x9034 (* ?x9033 l_0_8_42)))
 (let ((?x8957 (* l_0_8_32 l_0_8_32)))
 (let ((?x9029 (* 2.0 l_0_8_32)))
 (let ((?x9030 (* ?x9029 l_0_8_41)))
 (let ((?x5071 (* l_0_8_18 l_0_8_18)))
 (let ((?x9025 (* 2.0 l_0_8_18)))
 (let ((?x9026 (* ?x9025 l_0_8_27)))
 (let ((?x5070 (* l_0_8_17 l_0_8_17)))
 (let ((?x9021 (* 2.0 l_0_8_17)))
 (let ((?x9022 (* ?x9021 l_0_8_26)))
 (let ((?x9008 (- (- _a_1_ (* (* 2.0 l_0_8_101) l_0_8_92)) (* (* 2.0 l_0_8_102) l_0_8_93))))
 (let ((?x9014 (- (- ?x9008 (* (* 2.0 l_0_8_107) l_0_8_116)) (* (* 2.0 l_0_8_108) l_0_8_117))))
 (let ((?x9020 (- (- ?x9014 (* (* 2.0 l_0_8_122) l_0_8_131)) (* (* 2.0 l_0_8_123) l_0_8_132))))
 (let ((?x9035 (+ (- (+ (+ (- (+ (- ?x9020 ?x9022) ?x5070) ?x9026) ?x5071) ?x9030) ?x8957) ?x9034)))
 (= (+ (+ (- (- (- ?x9035 ?x8960) ?x9038) ?x9041) ?x9044) ?x9047) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9046 (* 2.0 l_0_8_63)))
 (let ((?x9127 (* ?x9046 l_0_8_65)))
 (let ((?x9043 (* 2.0 l_0_8_62)))
 (let ((?x9123 (* ?x9043 l_0_8_64)))
 (let ((?x9040 (* 2.0 l_0_8_48)))
 (let ((?x9119 (* ?x9040 l_0_8_50)))
 (let ((?x9037 (* 2.0 l_0_8_47)))
 (let ((?x9115 (* ?x9037 l_0_8_49)))
 (let ((?x9033 (* 2.0 l_0_8_33)))
 (let ((?x9111 (* ?x9033 l_0_8_35)))
 (let ((?x9029 (* 2.0 l_0_8_32)))
 (let ((?x9107 (* ?x9029 l_0_8_34)))
 (let ((?x9025 (* 2.0 l_0_8_18)))
 (let ((?x9103 (* ?x9025 l_0_8_20)))
 (let ((?x9021 (* 2.0 l_0_8_17)))
 (let ((?x9099 (* ?x9021 l_0_8_19)))
 (let ((?x9094 (- (* (* (- 2.0) l_0_8_107) l_0_8_109) (* (* 2.0 l_0_8_108) l_0_8_110))))
 (let ((?x9098 (- (- ?x9094 (* (* 2.0 l_0_8_122) l_0_8_124)) (* (* 2.0 l_0_8_123) l_0_8_125))))
 (let ((?x9106 (- (- (- (- ?x9098 ?x9099) (* ?x9021 l_0_8_17)) ?x9103) (* ?x9025 l_0_8_18))))
 (let ((?x9114 (+ (+ (+ (+ ?x9106 ?x9107) (* 2.0 (* l_0_8_32 l_0_8_32))) ?x9111) (* 2.0 (* l_0_8_33 l_0_8_33)))))
 (let ((?x9122 (- (- (- (- ?x9114 ?x9115) (* ?x9037 l_0_8_47)) ?x9119) (* ?x9040 l_0_8_48))))
 (let ((?x9130 (+ (+ (+ (+ ?x9122 ?x9123) (* 2.0 (* l_0_8_62 l_0_8_62))) ?x9127) (* 2.0 (* l_0_8_63 l_0_8_63)))))
 (let ((?x9136 (- (- ?x9130 (* (* 2.0 l_0_8_92) l_0_8_94)) (* (* 2.0 l_0_8_93) l_0_8_95))))
 (= (- ?x9136 2.0) 0.0)))))))))))))))))))))))))
(assert
 (= (- (* (- l_0_8_1) l_0_8_1) (* l_0_8_76 l_0_8_76)) 0.0))
(assert
 (let ((?x9207 (* l_0_8_91 l_0_8_91)))
 (let ((?x9204 (* 2.0 l_0_8_76)))
 (let ((?x9205 (* ?x9204 l_0_8_77)))
 (let ((?x9190 (* l_0_8_121 l_0_8_121)))
 (let ((?x9191 (- (- (* (* (- 2.0) l_0_8_1) l_0_8_2) (* l_0_8_106 l_0_8_106)) ?x9190)))
 (let ((?x9197 (+ (- ?x9191 (* (* 1.0 l_0_8_16) l_0_8_16)) (* 1.0 (* l_0_8_31 l_0_8_31)))))
 (let ((?x9203 (+ (- ?x9197 (* (* 1.0 l_0_8_46) l_0_8_46)) (* 1.0 (* l_0_8_61 l_0_8_61)))))
 (= (- (- ?x9203 ?x9205) ?x9207) 0.0)))))))))
(assert
 (let ((?x9204 (* 2.0 l_0_8_76)))
 (let ((?x9219 (* ?x9204 l_0_8_79)))
 (let ((?x5436 (- (* (* (- 2.0) l_0_8_1) l_0_8_4) (* (* 2.0 l_0_8_16) l_0_8_16))))
 (let ((?x5466 (- (+ ?x5436 (* 2.0 (* l_0_8_31 l_0_8_31))) (* (* 2.0 l_0_8_46) l_0_8_46))))
 (= (- (+ ?x5466 (* 2.0 (* l_0_8_61 l_0_8_61))) ?x9219) 0.0))))))
(assert
 (let ((?x9179 (* l_0_8_76 l_0_8_76)))
 (let ((?x9204 (* 2.0 l_0_8_76)))
 (let ((?x9235 (* ?x9204 l_0_8_82)))
 (let ((?x9201 (* l_0_8_61 l_0_8_61)))
 (let ((?x9234 (- (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) (* l_0_8_46 l_0_8_46)) ?x9201)))
 (= (+ (- ?x9234 ?x9235) ?x9179) 0.0)))))))
(assert
 (let ((?x9204 (* 2.0 l_0_8_76)))
 (let ((?x9250 (* ?x9204 l_0_8_86)))
 (let ((?x9195 (* l_0_8_31 l_0_8_31)))
 (let ((?x9249 (- (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) (* l_0_8_16 l_0_8_16)) ?x9195)))
 (= (- ?x9249 ?x9250) 0.0))))))
(assert
 (let ((?x9282 (* l_0_8_78 l_0_8_78)))
 (let ((?x9280 (* l_0_8_77 l_0_8_77)))
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9278 (* ?x9277 l_0_8_62)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9275 (* ?x5456 l_0_8_47)))
 (let ((?x9272 (* 2.0 l_0_8_31)))
 (let ((?x9273 (* ?x9272 l_0_8_32)))
 (let ((?x9270 (* l_0_8_3 l_0_8_3)))
 (let ((?x9268 (* l_0_8_2 l_0_8_2)))
 (let ((?x5411 (* 2.0 l_0_8_16)))
 (let ((?x9266 (* ?x5411 l_0_8_17)))
 (let ((?x9265 (- (* (* (- 2.0) l_0_8_106) l_0_8_107) (* (* 2.0 l_0_8_121) l_0_8_122))))
 (let ((?x9281 (- (+ (- (+ (- (- (- ?x9265 ?x9266) ?x9268) ?x9270) ?x9273) ?x9275) ?x9278) ?x9280)))
 (= (- (- ?x9281 ?x9282) (* (* 2.0 l_0_8_91) l_0_8_92)) 0.0))))))))))))))))
(assert
 (let ((?x9338 (* 2.0 l_0_8_78)))
 (let ((?x9339 (* ?x9338 l_0_8_80)))
 (let ((?x9335 (* 2.0 l_0_8_77)))
 (let ((?x9336 (* ?x9335 l_0_8_79)))
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9333 (* ?x9277 l_0_8_64)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9328 (* ?x5456 l_0_8_49)))
 (let ((?x9272 (* 2.0 l_0_8_31)))
 (let ((?x9323 (* ?x9272 l_0_8_34)))
 (let ((?x9317 (* 2.0 l_0_8_3)))
 (let ((?x9318 (* ?x9317 l_0_8_5)))
 (let ((?x9314 (* 2.0 l_0_8_2)))
 (let ((?x9315 (* ?x9314 l_0_8_4)))
 (let ((?x5411 (* 2.0 l_0_8_16)))
 (let ((?x9312 (* ?x5411 l_0_8_19)))
 (let ((?x9308 (- (* (* (- 2.0) l_0_8_106) l_0_8_109) (* (* 2.0 l_0_8_121) l_0_8_124))))
 (let ((?x9319 (- (- (- (- ?x9308 (* (* 4.0 l_0_8_16) l_0_8_17)) ?x9312) ?x9315) ?x9318)))
 (let ((?x9327 (- (+ (+ ?x9319 (* (* 4.0 l_0_8_31) l_0_8_32)) ?x9323) (* (* 4.0 l_0_8_46) l_0_8_47))))
 (let ((?x9337 (- (+ (+ (- ?x9327 ?x9328) (* (* 4.0 l_0_8_61) l_0_8_62)) ?x9333) ?x9336)))
 (= (- (- ?x9337 ?x9339) (* (* 2.0 l_0_8_91) l_0_8_94)) 0.0))))))))))))))))))))))
(assert
 (let ((?x9338 (* 2.0 l_0_8_78)))
 (let ((?x9410 (* ?x9338 l_0_8_83)))
 (let ((?x9335 (* 2.0 l_0_8_77)))
 (let ((?x9408 (* ?x9335 l_0_8_82)))
 (let ((?x9204 (* 2.0 l_0_8_76)))
 (let ((?x9205 (* ?x9204 l_0_8_77)))
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9405 (* ?x9277 l_0_8_67)))
 (let ((?x9278 (* ?x9277 l_0_8_62)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9402 (* ?x5456 l_0_8_52)))
 (let ((?x9275 (* ?x5456 l_0_8_47)))
 (let ((?x9272 (* 2.0 l_0_8_31)))
 (let ((?x9399 (* ?x9272 l_0_8_37)))
 (let ((?x9317 (* 2.0 l_0_8_3)))
 (let ((?x9397 (* ?x9317 l_0_8_8)))
 (let ((?x9314 (* 2.0 l_0_8_2)))
 (let ((?x9395 (* ?x9314 l_0_8_7)))
 (let ((?x5411 (* 2.0 l_0_8_16)))
 (let ((?x9393 (* ?x5411 l_0_8_22)))
 (let ((?x9392 (- (* (* (- 2.0) l_0_8_106) l_0_8_112) (* (* 2.0 l_0_8_121) l_0_8_127))))
 (let ((?x9404 (- (- (+ (+ (- (- (- ?x9392 ?x9393) ?x9395) ?x9397) ?x9399) ?x9275) ?x9402) ?x9278)))
 (let ((?x9413 (- (- (- (+ (+ ?x9404 ?x9405) ?x9205) ?x9408) ?x9410) (* (* 2.0 l_0_8_91) l_0_8_97))))
 (= ?x9413 0.0)))))))))))))))))))))))))
(assert
 (let ((?x9338 (* 2.0 l_0_8_78)))
 (let ((?x9461 (* ?x9338 l_0_8_87)))
 (let ((?x9335 (* 2.0 l_0_8_77)))
 (let ((?x9459 (* ?x9335 l_0_8_86)))
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9457 (* ?x9277 l_0_8_71)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9455 (* ?x5456 l_0_8_56)))
 (let ((?x9272 (* 2.0 l_0_8_31)))
 (let ((?x9453 (* ?x9272 l_0_8_41)))
 (let ((?x9273 (* ?x9272 l_0_8_32)))
 (let ((?x5411 (* 2.0 l_0_8_16)))
 (let ((?x9450 (* ?x5411 l_0_8_26)))
 (let ((?x9266 (* ?x5411 l_0_8_17)))
 (let ((?x9444 (* 2.0 l_0_8_12)))
 (let ((?x9445 (* ?x9444 l_0_8_3)))
 (let ((?x9441 (* 2.0 l_0_8_11)))
 (let ((?x9442 (* ?x9441 l_0_8_2)))
 (let ((?x5913 (- (* (* (- 2.0) l_0_8_101) l_0_8_91) (* (* 2.0 l_0_8_106) l_0_8_116))))
 (let ((?x9449 (+ (- (- (- ?x5913 ?x9442) ?x9445) (* (* 2.0 l_0_8_121) l_0_8_131)) ?x9266)))
 (let ((?x9462 (- (- (+ (- (+ (- (- ?x9449 ?x9450) ?x9273) ?x9453) ?x9455) ?x9457) ?x9459) ?x9461)))
 (= ?x9462 0.0)))))))))))))))))))))))
(assert
 (let ((?x9515 (* l_0_8_81 l_0_8_81)))
 (let ((?x9513 (* l_0_8_80 l_0_8_80)))
 (let ((?x9511 (* l_0_8_79 l_0_8_79)))
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9278 (* ?x9277 l_0_8_62)))
 (let ((?x9506 (* l_0_8_6 l_0_8_6)))
 (let ((?x9504 (* l_0_8_5 l_0_8_5)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9275 (* ?x5456 l_0_8_47)))
 (let ((?x9499 (* l_0_8_4 l_0_8_4)))
 (let ((?x6029 (- (* (* 2.0 l_0_8_1) l_0_8_2) (* (* 4.0 l_0_8_16) l_0_8_19))))
 (let ((?x9503 (- (- (- (+ ?x6029 (* (* 4.0 l_0_8_31) l_0_8_34)) ?x9499) ?x9275) (* (* 4.0 l_0_8_46) l_0_8_49))))
 (let ((?x9510 (+ (+ (- (- ?x9503 ?x9504) ?x9506) ?x9278) (* (* 4.0 l_0_8_61) l_0_8_64))))
 (= (- (- (- ?x9510 ?x9511) ?x9513) ?x9515) 0.0)))))))))))))))
(assert
 (let ((?x9564 (* 2.0 l_0_8_81)))
 (let ((?x9565 (* ?x9564 l_0_8_84)))
 (let ((?x9561 (* 2.0 l_0_8_80)))
 (let ((?x9562 (* ?x9561 l_0_8_83)))
 (let ((?x9558 (* 2.0 l_0_8_79)))
 (let ((?x9559 (* ?x9558 l_0_8_82)))
 (let ((?x9204 (* 2.0 l_0_8_76)))
 (let ((?x9219 (* ?x9204 l_0_8_79)))
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9333 (* ?x9277 l_0_8_64)))
 (let ((?x9552 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x9549 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9328 (* ?x5456 l_0_8_49)))
 (let ((?x9543 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x9541 (+ (* (* (- 4.0) l_0_8_16) l_0_8_22) (* (* 4.0 l_0_8_31) l_0_8_37))))
 (let ((?x9550 (- (- (+ (- ?x9541 ?x9543) ?x9328) (* (* 4.0 l_0_8_46) l_0_8_52)) ?x9549)))
 (let ((?x9557 (+ (+ (- (- ?x9550 ?x9552) ?x9333) (* (* 4.0 l_0_8_61) l_0_8_67)) ?x9219)))
 (= (- (- (- ?x9557 ?x9559) ?x9562) ?x9565) 0.0))))))))))))))))))))
(assert
 (let ((?x9564 (* 2.0 l_0_8_81)))
 (let ((?x9601 (* ?x9564 l_0_8_88)))
 (let ((?x9561 (* 2.0 l_0_8_80)))
 (let ((?x9599 (* ?x9561 l_0_8_87)))
 (let ((?x9558 (* 2.0 l_0_8_79)))
 (let ((?x9597 (* ?x9558 l_0_8_86)))
 (let ((?x9272 (* 2.0 l_0_8_31)))
 (let ((?x9323 (* ?x9272 l_0_8_34)))
 (let ((?x5411 (* 2.0 l_0_8_16)))
 (let ((?x9312 (* ?x5411 l_0_8_19)))
 (let ((?x6160 (* 2.0 l_0_8_13)))
 (let ((?x6161 (* ?x6160 l_0_8_6)))
 (let ((?x9444 (* 2.0 l_0_8_12)))
 (let ((?x6168 (* ?x9444 l_0_8_5)))
 (let ((?x9589 (- (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x6168) ?x6161) ?x9312) (* (* 4.0 l_0_8_16) l_0_8_26))))
 (let ((?x9594 (- (+ (- ?x9589 ?x9323) (* (* 4.0 l_0_8_31) l_0_8_41)) (* (* 4.0 l_0_8_46) l_0_8_56))))
 (let ((?x9602 (- (- (- (+ ?x9594 (* (* 4.0 l_0_8_61) l_0_8_71)) ?x9597) ?x9599) ?x9601)))
 (= ?x9602 0.0)))))))))))))))))))
(assert
 (let ((?x9650 (* l_0_8_9 l_0_8_9)))
 (let ((?x9648 (* l_0_8_85 l_0_8_85)))
 (let ((?x9646 (* l_0_8_84 l_0_8_84)))
 (let ((?x9644 (* l_0_8_83 l_0_8_83)))
 (let ((?x9642 (* l_0_8_82 l_0_8_82)))
 (let ((?x9640 (* l_0_8_8 l_0_8_8)))
 (let ((?x9204 (* 2.0 l_0_8_76)))
 (let ((?x9235 (* ?x9204 l_0_8_82)))
 (let ((?x9637 (* l_0_8_7 l_0_8_7)))
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9405 (* ?x9277 l_0_8_67)))
 (let ((?x9636 (- (+ (* (- l_0_8_10) l_0_8_10) (* (* 2.0 l_0_8_46) l_0_8_52)) ?x9405)))
 (let ((?x9649 (- (- (- (- (- (+ (- ?x9636 ?x9637) ?x9235) ?x9640) ?x9642) ?x9644) ?x9646) ?x9648)))
 (= (- ?x9649 ?x9650) 0.0)))))))))))))))
(assert
 (let ((?x9689 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x9686 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x9683 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x9680 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x9204 (* 2.0 l_0_8_76)))
 (let ((?x9250 (* ?x9204 l_0_8_86)))
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9457 (* ?x9277 l_0_8_71)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9455 (* ?x5456 l_0_8_56)))
 (let ((?x9272 (* 2.0 l_0_8_31)))
 (let ((?x9399 (* ?x9272 l_0_8_37)))
 (let ((?x5411 (* 2.0 l_0_8_16)))
 (let ((?x9393 (* ?x5411 l_0_8_22)))
 (let ((?x6160 (* 2.0 l_0_8_13)))
 (let ((?x9672 (* ?x6160 l_0_8_9)))
 (let ((?x9444 (* 2.0 l_0_8_12)))
 (let ((?x9670 (* ?x9444 l_0_8_8)))
 (let ((?x9441 (* 2.0 l_0_8_11)))
 (let ((?x9668 (* ?x9441 l_0_8_7)))
 (let ((?x9674 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x9668) ?x9670) ?x9672) ?x9393)))
 (let ((?x9687 (- (- (- (+ (- (+ (- ?x9674 ?x9399) ?x9455) ?x9457) ?x9250) ?x9680) ?x9683) ?x9686)))
 (= (- ?x9687 ?x9689) 0.0))))))))))))))))))))))))
(assert
 (let ((?x9731 (* l_0_8_90 l_0_8_90)))
 (let ((?x9729 (* l_0_8_89 l_0_8_89)))
 (let ((?x9727 (* l_0_8_88 l_0_8_88)))
 (let ((?x9725 (* l_0_8_87 l_0_8_87)))
 (let ((?x9723 (* l_0_8_86 l_0_8_86)))
 (let ((?x9272 (* 2.0 l_0_8_31)))
 (let ((?x9453 (* ?x9272 l_0_8_41)))
 (let ((?x5411 (* 2.0 l_0_8_16)))
 (let ((?x9450 (* ?x5411 l_0_8_26)))
 (let ((?x9719 (* l_0_8_15 l_0_8_15)))
 (let ((?x9717 (* l_0_8_14 l_0_8_14)))
 (let ((?x9715 (* l_0_8_13 l_0_8_13)))
 (let ((?x9718 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x9715) ?x9717)))
 (let ((?x9730 (- (- (- (- (- (+ (- ?x9718 ?x9719) ?x9450) ?x9453) ?x9723) ?x9725) ?x9727) ?x9729)))
 (= (- ?x9730 ?x9731) 0.0))))))))))))))))
(assert
 (let ((?x9201 (* l_0_8_61 l_0_8_61)))
 (= (+ (- (* l_0_8_1 l_0_8_1) (* l_0_8_46 l_0_8_46)) ?x9201) 0.0)))
(assert
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9333 (* ?x9277 l_0_8_64)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9328 (* ?x5456 l_0_8_49)))
 (= (+ (- (* (* 2.0 l_0_8_1) l_0_8_4) ?x9328) ?x9333) 0.0))))))
(assert
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9405 (* ?x9277 l_0_8_67)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9402 (* ?x5456 l_0_8_52)))
 (= (+ (- (* (* 2.0 l_0_8_1) l_0_8_7) ?x9402) ?x9405) 0.0))))))
(assert
 (let ((?x9277 (* 2.0 l_0_8_61)))
 (let ((?x9457 (* ?x9277 l_0_8_71)))
 (let ((?x5456 (* 2.0 l_0_8_46)))
 (let ((?x9455 (* ?x5456 l_0_8_56)))
 (= (+ (- (* (* 2.0 l_0_8_1) l_0_8_11) ?x9455) ?x9457) 0.0))))))
(assert
 (let ((?x9858 (* l_0_8_96 l_0_8_96)))
 (let ((?x9856 (* l_0_8_95 l_0_8_95)))
 (let ((?x9854 (* l_0_8_94 l_0_8_94)))
 (let ((?x8972 (* l_0_8_63 l_0_8_63)))
 (let ((?x8969 (* l_0_8_62 l_0_8_62)))
 (let ((?x8995 (* l_0_8_48 l_0_8_48)))
 (let ((?x5076 (* l_0_8_47 l_0_8_47)))
 (let ((?x9270 (* l_0_8_3 l_0_8_3)))
 (let ((?x9268 (* l_0_8_2 l_0_8_2)))
 (let ((?x9786 (* l_0_8_126 l_0_8_126)))
 (let ((?x9784 (* l_0_8_125 l_0_8_125)))
 (let ((?x9782 (* l_0_8_124 l_0_8_124)))
 (let ((?x9780 (* l_0_8_111 l_0_8_111)))
 (let ((?x9781 (- (- (* (- l_0_8_109) l_0_8_109) (* l_0_8_110 l_0_8_110)) ?x9780)))
 (let ((?x9790 (- (- (- (- ?x9781 ?x9782) ?x9784) ?x9786) (* (* 4.0 l_0_8_17) l_0_8_19))))
 (let ((?x9796 (- (- ?x9790 (* (* 4.0 l_0_8_18) l_0_8_20)) (* (* 1.0 l_0_8_19) l_0_8_19))))
 (let ((?x9803 (- (- (+ ?x9796 ?x9268) (* (* 1.0 l_0_8_20) l_0_8_20)) (* (* 1.0 l_0_8_21) l_0_8_21))))
 (let ((?x9810 (+ (+ (+ ?x9803 ?x9270) (* (* 4.0 l_0_8_32) l_0_8_34)) (* (* 4.0 l_0_8_33) l_0_8_35))))
 (let ((?x9816 (+ (+ ?x9810 (* 1.0 (* l_0_8_34 l_0_8_34))) (* 1.0 (* l_0_8_35 l_0_8_35)))))
 (let ((?x9822 (- (+ ?x9816 (* 1.0 (* l_0_8_36 l_0_8_36))) (* (* 4.0 l_0_8_47) l_0_8_49))))
 (let ((?x9830 (- (- (- (- ?x9822 ?x5076) (* (* 4.0 l_0_8_48) l_0_8_50)) ?x8995) (* (* 1.0 l_0_8_49) l_0_8_49))))
 (let ((?x9836 (- (- ?x9830 (* (* 1.0 l_0_8_50) l_0_8_50)) (* (* 1.0 l_0_8_51) l_0_8_51))))
 (let ((?x9843 (+ (+ (+ ?x9836 (* (* 4.0 l_0_8_62) l_0_8_64)) ?x8969) (* (* 4.0 l_0_8_63) l_0_8_65))))
 (let ((?x9850 (+ (+ (+ ?x9843 ?x8972) (* 1.0 (* l_0_8_64 l_0_8_64))) (* 1.0 (* l_0_8_65 l_0_8_65)))))
 (let ((?x9859 (- (- (- (+ ?x9850 (* 1.0 (* l_0_8_66 l_0_8_66))) ?x9854) ?x9856) ?x9858)))
 (= ?x9859 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x9046 (* 2.0 l_0_8_63)))
 (let ((?x9127 (* ?x9046 l_0_8_65)))
 (let ((?x9043 (* 2.0 l_0_8_62)))
 (let ((?x9123 (* ?x9043 l_0_8_64)))
 (let ((?x9040 (* 2.0 l_0_8_48)))
 (let ((?x9119 (* ?x9040 l_0_8_50)))
 (let ((?x9037 (* 2.0 l_0_8_47)))
 (let ((?x9115 (* ?x9037 l_0_8_49)))
 (let ((?x9317 (* 2.0 l_0_8_3)))
 (let ((?x9318 (* ?x9317 l_0_8_5)))
 (let ((?x9314 (* 2.0 l_0_8_2)))
 (let ((?x9315 (* ?x9314 l_0_8_4)))
 (let ((?x9919 (- (+ (* (* (- 2.0) l_0_8_19) l_0_8_19) ?x9315) (* (* 2.0 l_0_8_20) l_0_8_20))))
 (let ((?x9925 (+ (+ (- ?x9919 (* (* 2.0 l_0_8_21) l_0_8_21)) ?x9318) (* 2.0 (* l_0_8_34 l_0_8_34)))))
 (let ((?x9929 (+ (+ ?x9925 (* 2.0 (* l_0_8_35 l_0_8_35))) (* 2.0 (* l_0_8_36 l_0_8_36)))))
 (let ((?x9937 (- (- (- (- ?x9929 ?x9115) ?x9119) (* (* 2.0 l_0_8_49) l_0_8_49)) (* (* 2.0 l_0_8_50) l_0_8_50))))
 (let ((?x9944 (+ (+ (+ (- ?x9937 (* (* 2.0 l_0_8_51) l_0_8_51)) ?x9123) ?x9127) (* 2.0 (* l_0_8_64 l_0_8_64)))))
 (let ((?x9948 (+ (+ ?x9944 (* 2.0 (* l_0_8_65 l_0_8_65))) (* 2.0 (* l_0_8_66 l_0_8_66)))))
 (= ?x9948 0.0))))))))))))))))))))
(assert
 (let ((?x9515 (* l_0_8_81 l_0_8_81)))
 (let ((?x9513 (* l_0_8_80 l_0_8_80)))
 (let ((?x9511 (* l_0_8_79 l_0_8_79)))
 (let ((?x9851 (* l_0_8_66 l_0_8_66)))
 (let ((?x9848 (* l_0_8_65 l_0_8_65)))
 (let ((?x9845 (* l_0_8_64 l_0_8_64)))
 (let ((?x9046 (* 2.0 l_0_8_63)))
 (let ((?x9993 (* ?x9046 l_0_8_68)))
 (let ((?x9043 (* 2.0 l_0_8_62)))
 (let ((?x9991 (* ?x9043 l_0_8_67)))
 (let ((?x915 (* l_0_8_51 l_0_8_51)))
 (let ((?x9889 (* l_0_8_50 l_0_8_50)))
 (let ((?x884 (* l_0_8_49 l_0_8_49)))
 (let ((?x9040 (* 2.0 l_0_8_48)))
 (let ((?x9977 (* ?x9040 l_0_8_53)))
 (let ((?x9037 (* 2.0 l_0_8_47)))
 (let ((?x9975 (* ?x9037 l_0_8_52)))
 (let ((?x9317 (* 2.0 l_0_8_3)))
 (let ((?x9397 (* ?x9317 l_0_8_8)))
 (let ((?x9314 (* 2.0 l_0_8_2)))
 (let ((?x9395 (* ?x9314 l_0_8_7)))
 (let ((?x9961 (- (+ (* (* (- 4.0) l_0_8_19) l_0_8_22) ?x9395) (* (* 4.0 l_0_8_20) l_0_8_23))))
 (let ((?x9968 (+ (+ (- ?x9961 (* (* 4.0 l_0_8_21) l_0_8_24)) ?x9397) (* (* 4.0 l_0_8_34) l_0_8_37))))
 (let ((?x9974 (+ (+ ?x9968 (* (* 4.0 l_0_8_35) l_0_8_38)) (* (* 4.0 l_0_8_36) l_0_8_39))))
 (let ((?x9982 (+ (- (- (- ?x9974 ?x9975) ?x9977) (* (* 4.0 l_0_8_49) l_0_8_52)) ?x884)))
 (let ((?x9989 (- (+ (- ?x9982 (* (* 4.0 l_0_8_50) l_0_8_53)) ?x9889) (* (* 4.0 l_0_8_51) l_0_8_54))))
 (let ((?x9997 (+ (+ (+ (+ ?x9989 ?x915) ?x9991) ?x9993) (* (* 4.0 l_0_8_64) l_0_8_67))))
 (let ((?x10005 (+ (- (+ (- ?x9997 ?x9845) (* (* 4.0 l_0_8_65) l_0_8_68)) ?x9848) (* (* 4.0 l_0_8_66) l_0_8_69))))
 (= (+ (+ (+ (- ?x10005 ?x9851) ?x9511) ?x9513) ?x9515) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x9046 (* 2.0 l_0_8_63)))
 (let ((?x9047 (* ?x9046 l_0_8_72)))
 (let ((?x9043 (* 2.0 l_0_8_62)))
 (let ((?x9044 (* ?x9043 l_0_8_71)))
 (let ((?x9040 (* 2.0 l_0_8_48)))
 (let ((?x9041 (* ?x9040 l_0_8_57)))
 (let ((?x9037 (* 2.0 l_0_8_47)))
 (let ((?x9038 (* ?x9037 l_0_8_56)))
 (let ((?x9817 (* l_0_8_36 l_0_8_36)))
 (let ((?x9814 (* l_0_8_35 l_0_8_35)))
 (let ((?x9811 (* l_0_8_34 l_0_8_34)))
 (let ((?x6506 (* l_0_8_21 l_0_8_21)))
 (let ((?x6472 (* l_0_8_20 l_0_8_20)))
 (let ((?x9877 (* l_0_8_19 l_0_8_19)))
 (let ((?x9444 (* 2.0 l_0_8_12)))
 (let ((?x9445 (* ?x9444 l_0_8_3)))
 (let ((?x9441 (* 2.0 l_0_8_11)))
 (let ((?x9442 (* ?x9441 l_0_8_2)))
 (let ((?x10068 (- (+ (- (+ ?x9442 ?x9445) (* (* 4.0 l_0_8_19) l_0_8_26)) ?x9877) (* (* 4.0 l_0_8_20) l_0_8_27))))
 (let ((?x10074 (+ (+ (- (+ ?x10068 ?x6472) (* (* 4.0 l_0_8_21) l_0_8_28)) ?x6506) (* (* 4.0 l_0_8_34) l_0_8_41))))
 (let ((?x10080 (+ (- (+ (- ?x10074 ?x9811) (* (* 4.0 l_0_8_35) l_0_8_42)) ?x9814) (* (* 4.0 l_0_8_36) l_0_8_43))))
 (let ((?x10085 (- (- (- (- ?x10080 ?x9817) ?x9038) ?x9041) (* (* 4.0 l_0_8_49) l_0_8_56))))
 (let ((?x10089 (- (- ?x10085 (* (* 4.0 l_0_8_50) l_0_8_57)) (* (* 4.0 l_0_8_51) l_0_8_58))))
 (let ((?x10095 (+ (+ (+ (+ ?x10089 ?x9044) ?x9047) (* (* 4.0 l_0_8_64) l_0_8_71)) (* (* 4.0 l_0_8_65) l_0_8_72))))
 (= (+ ?x10095 (* (* 4.0 l_0_8_66) l_0_8_73)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9851 (* l_0_8_66 l_0_8_66)))
 (let ((?x9848 (* l_0_8_65 l_0_8_65)))
 (let ((?x9845 (* l_0_8_64 l_0_8_64)))
 (let ((?x9506 (* l_0_8_6 l_0_8_6)))
 (let ((?x915 (* l_0_8_51 l_0_8_51)))
 (let ((?x9889 (* l_0_8_50 l_0_8_50)))
 (let ((?x9504 (* l_0_8_5 l_0_8_5)))
 (let ((?x1378 (- (+ (- (* l_0_8_4 l_0_8_4) (* l_0_8_49 l_0_8_49)) ?x9504) ?x9889)))
 (= (+ (+ (+ (+ (- ?x1378 ?x915) ?x9506) ?x9845) ?x9848) ?x9851) 0.0))))))))))
(assert
 (let ((?x10146 (* 2.0 l_0_8_66)))
 (let ((?x10147 (* ?x10146 l_0_8_69)))
 (let ((?x10143 (* 2.0 l_0_8_65)))
 (let ((?x10144 (* ?x10143 l_0_8_68)))
 (let ((?x1387 (* 2.0 l_0_8_64)))
 (let ((?x1356 (* ?x1387 l_0_8_67)))
 (let ((?x9552 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x9938 (* 2.0 l_0_8_51)))
 (let ((?x6646 (* ?x9938 l_0_8_54)))
 (let ((?x9935 (* 2.0 l_0_8_50)))
 (let ((?x1269 (* ?x9935 l_0_8_53)))
 (let ((?x9549 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x9932 (* 2.0 l_0_8_49)))
 (let ((?x6714 (* ?x9932 l_0_8_52)))
 (let ((?x9543 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x10145 (+ (+ (+ (- (- (+ (- ?x9543 ?x6714) ?x9549) ?x1269) ?x6646) ?x9552) ?x1356) ?x10144)))
 (= (+ ?x10145 ?x10147) 0.0))))))))))))))))))
(assert
 (let ((?x10146 (* 2.0 l_0_8_66)))
 (let ((?x10173 (* ?x10146 l_0_8_73)))
 (let ((?x10143 (* 2.0 l_0_8_65)))
 (let ((?x10171 (* ?x10143 l_0_8_72)))
 (let ((?x1387 (* 2.0 l_0_8_64)))
 (let ((?x10169 (* ?x1387 l_0_8_71)))
 (let ((?x9938 (* 2.0 l_0_8_51)))
 (let ((?x10167 (* ?x9938 l_0_8_58)))
 (let ((?x9935 (* 2.0 l_0_8_50)))
 (let ((?x10165 (* ?x9935 l_0_8_57)))
 (let ((?x9932 (* 2.0 l_0_8_49)))
 (let ((?x10158 (* ?x9932 l_0_8_56)))
 (let ((?x6160 (* 2.0 l_0_8_13)))
 (let ((?x6161 (* ?x6160 l_0_8_6)))
 (let ((?x9444 (* 2.0 l_0_8_12)))
 (let ((?x6168 (* ?x9444 l_0_8_5)))
 (let ((?x10166 (- (- (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x6168) ?x6161) ?x10158) ?x10165)))
 (= (+ (+ (+ (- ?x10166 ?x10167) ?x10169) ?x10171) ?x10173) 0.0)))))))))))))))))))
(assert
 (let ((?x9650 (* l_0_8_9 l_0_8_9)))
 (let ((?x9640 (* l_0_8_8 l_0_8_8)))
 (let ((?x10208 (* l_0_8_70 l_0_8_70)))
 (let ((?x9637 (* l_0_8_7 l_0_8_7)))
 (let ((?x10205 (* l_0_8_69 l_0_8_69)))
 (let ((?x10203 (* l_0_8_68 l_0_8_68)))
 (let ((?x10201 (* l_0_8_67 l_0_8_67)))
 (let ((?x10199 (* l_0_8_55 l_0_8_55)))
 (let ((?x10197 (* l_0_8_54 l_0_8_54)))
 (let ((?x10190 (* l_0_8_53 l_0_8_53)))
 (let ((?x10198 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_52 l_0_8_52)) ?x10190) ?x10197)))
 (let ((?x10210 (+ (+ (+ (+ (+ (+ (- ?x10198 ?x10199) ?x10201) ?x10203) ?x10205) ?x9637) ?x10208) ?x9640)))
 (= (+ ?x10210 ?x9650) 0.0))))))))))))))
(assert
 (let ((?x10249 (* (* 2.0 l_0_8_70) l_0_8_74)))
 (let ((?x10246 (* (* 2.0 l_0_8_69) l_0_8_73)))
 (let ((?x10243 (* (* 2.0 l_0_8_68) l_0_8_72)))
 (let ((?x10240 (* (* 2.0 l_0_8_67) l_0_8_71)))
 (let ((?x10236 (* 2.0 l_0_8_55)))
 (let ((?x10237 (* ?x10236 l_0_8_59)))
 (let ((?x10233 (* 2.0 l_0_8_54)))
 (let ((?x10234 (* ?x10233 l_0_8_58)))
 (let ((?x10230 (* 2.0 l_0_8_53)))
 (let ((?x10231 (* ?x10230 l_0_8_57)))
 (let ((?x10227 (* 2.0 l_0_8_52)))
 (let ((?x10228 (* ?x10227 l_0_8_56)))
 (let ((?x6160 (* 2.0 l_0_8_13)))
 (let ((?x9672 (* ?x6160 l_0_8_9)))
 (let ((?x9444 (* 2.0 l_0_8_12)))
 (let ((?x9670 (* ?x9444 l_0_8_8)))
 (let ((?x9441 (* 2.0 l_0_8_11)))
 (let ((?x9668 (* ?x9441 l_0_8_7)))
 (let ((?x10229 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x9668) ?x9670) ?x9672) ?x10228)))
 (let ((?x10250 (+ (+ (+ (+ (- (- (- ?x10229 ?x10231) ?x10234) ?x10237) ?x10240) ?x10243) ?x10246) ?x10249)))
 (= ?x10250 0.0))))))))))))))))))))))
(assert
 (let ((?x10289 (* l_0_8_75 l_0_8_75)))
 (let ((?x10287 (* l_0_8_74 l_0_8_74)))
 (let ((?x10285 (* l_0_8_73 l_0_8_73)))
 (let ((?x10283 (* l_0_8_72 l_0_8_72)))
 (let ((?x10281 (* l_0_8_71 l_0_8_71)))
 (let ((?x10279 (* l_0_8_60 l_0_8_60)))
 (let ((?x10277 (* l_0_8_59 l_0_8_59)))
 (let ((?x10275 (* l_0_8_58 l_0_8_58)))
 (let ((?x10273 (* l_0_8_57 l_0_8_57)))
 (let ((?x10265 (* l_0_8_56 l_0_8_56)))
 (let ((?x9719 (* l_0_8_15 l_0_8_15)))
 (let ((?x9717 (* l_0_8_14 l_0_8_14)))
 (let ((?x9715 (* l_0_8_13 l_0_8_13)))
 (let ((?x6711 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x9715) ?x9717)))
 (let ((?x10282 (+ (- (- (- (- (- (+ ?x6711 ?x9719) ?x10265) ?x10273) ?x10275) ?x10277) ?x10279) ?x10281)))
 (= (+ (+ (+ (+ ?x10282 ?x10283) ?x10285) ?x10287) ?x10289) 0.0)))))))))))))))))
(assert
 (let ((?x9338 (* 2.0 l_0_8_78)))
 (let ((?x9339 (* ?x9338 l_0_8_80)))
 (let ((?x9335 (* 2.0 l_0_8_77)))
 (let ((?x9336 (* ?x9335 l_0_8_79)))
 (let ((?x10146 (* 2.0 l_0_8_66)))
 (let ((?x10147 (* ?x10146 l_0_8_69)))
 (let ((?x10143 (* 2.0 l_0_8_65)))
 (let ((?x10144 (* ?x10143 l_0_8_68)))
 (let ((?x1387 (* 2.0 l_0_8_64)))
 (let ((?x1356 (* ?x1387 l_0_8_67)))
 (let ((?x9046 (* 2.0 l_0_8_63)))
 (let ((?x9127 (* ?x9046 l_0_8_65)))
 (let ((?x9043 (* 2.0 l_0_8_62)))
 (let ((?x9123 (* ?x9043 l_0_8_64)))
 (let ((?x9938 (* 2.0 l_0_8_51)))
 (let ((?x6646 (* ?x9938 l_0_8_54)))
 (let ((?x9935 (* 2.0 l_0_8_50)))
 (let ((?x1269 (* ?x9935 l_0_8_53)))
 (let ((?x9932 (* 2.0 l_0_8_49)))
 (let ((?x6714 (* ?x9932 l_0_8_52)))
 (let ((?x9040 (* 2.0 l_0_8_48)))
 (let ((?x9119 (* ?x9040 l_0_8_50)))
 (let ((?x9037 (* 2.0 l_0_8_47)))
 (let ((?x9115 (* ?x9037 l_0_8_49)))
 (let ((?x10336 (* 2.0 l_0_8_36)))
 (let ((?x10337 (* ?x10336 l_0_8_39)))
 (let ((?x10333 (* 2.0 l_0_8_35)))
 (let ((?x10334 (* ?x10333 l_0_8_38)))
 (let ((?x10330 (* 2.0 l_0_8_34)))
 (let ((?x10331 (* ?x10330 l_0_8_37)))
 (let ((?x9920 (* 2.0 l_0_8_21)))
 (let ((?x10324 (* ?x9920 l_0_8_24)))
 (let ((?x9917 (* 2.0 l_0_8_20)))
 (let ((?x10322 (* ?x9917 l_0_8_23)))
 (let ((?x10319 (* 2.0 l_0_8_19)))
 (let ((?x10320 (* ?x10319 l_0_8_22)))
 (let ((?x10302 (- (* (* (- 2.0) l_0_8_109) l_0_8_112) (* (* 2.0 l_0_8_110) l_0_8_113))))
 (let ((?x10308 (- (- ?x10302 (* (* 2.0 l_0_8_111) l_0_8_114)) (* (* 2.0 l_0_8_124) l_0_8_127))))
 (let ((?x10314 (- (- ?x10308 (* (* 2.0 l_0_8_125) l_0_8_128)) (* (* 2.0 l_0_8_126) l_0_8_129))))
 (let ((?x10318 (- (- ?x10314 (* (* 4.0 l_0_8_17) l_0_8_22)) (* (* 4.0 l_0_8_18) l_0_8_23))))
 (let ((?x10327 (+ (- (- (- ?x10318 ?x10320) ?x10322) ?x10324) (* (* 4.0 l_0_8_32) l_0_8_37))))
 (let ((?x10338 (+ (+ (+ (+ ?x10327 (* (* 4.0 l_0_8_33) l_0_8_38)) ?x10331) ?x10334) ?x10337)))
 (let ((?x10344 (- (+ (- (+ ?x10338 ?x9115) (* (* 4.0 l_0_8_47) l_0_8_52)) ?x9119) (* (* 4.0 l_0_8_48) l_0_8_53))))
 (let ((?x10350 (+ (- (- (- (- ?x10344 ?x6714) ?x1269) ?x6646) ?x9123) (* (* 4.0 l_0_8_62) l_0_8_67))))
 (let ((?x10355 (+ (+ (+ (- ?x10350 ?x9127) (* (* 4.0 l_0_8_63) l_0_8_68)) ?x1356) ?x10144)))
 (let ((?x10361 (- (+ (+ (+ ?x10355 ?x10147) ?x9336) ?x9339) (* (* 2.0 l_0_8_94) l_0_8_97))))
 (let ((?x10367 (- (- ?x10361 (* (* 2.0 l_0_8_95) l_0_8_98)) (* (* 2.0 l_0_8_96) l_0_8_99))))
 (= ?x10367 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10146 (* 2.0 l_0_8_66)))
 (let ((?x10173 (* ?x10146 l_0_8_73)))
 (let ((?x10143 (* 2.0 l_0_8_65)))
 (let ((?x10171 (* ?x10143 l_0_8_72)))
 (let ((?x1387 (* 2.0 l_0_8_64)))
 (let ((?x10169 (* ?x1387 l_0_8_71)))
 (let ((?x9938 (* 2.0 l_0_8_51)))
 (let ((?x10167 (* ?x9938 l_0_8_58)))
 (let ((?x9935 (* 2.0 l_0_8_50)))
 (let ((?x10165 (* ?x9935 l_0_8_57)))
 (let ((?x9932 (* 2.0 l_0_8_49)))
 (let ((?x10158 (* ?x9932 l_0_8_56)))
 (let ((?x10336 (* 2.0 l_0_8_36)))
 (let ((?x10483 (* ?x10336 l_0_8_43)))
 (let ((?x10333 (* 2.0 l_0_8_35)))
 (let ((?x10481 (* ?x10333 l_0_8_42)))
 (let ((?x10330 (* 2.0 l_0_8_34)))
 (let ((?x10479 (* ?x10330 l_0_8_41)))
 (let ((?x9033 (* 2.0 l_0_8_33)))
 (let ((?x9111 (* ?x9033 l_0_8_35)))
 (let ((?x9029 (* 2.0 l_0_8_32)))
 (let ((?x9107 (* ?x9029 l_0_8_34)))
 (let ((?x9920 (* 2.0 l_0_8_21)))
 (let ((?x10471 (* ?x9920 l_0_8_28)))
 (let ((?x9917 (* 2.0 l_0_8_20)))
 (let ((?x10469 (* ?x9917 l_0_8_27)))
 (let ((?x10319 (* 2.0 l_0_8_19)))
 (let ((?x10467 (* ?x10319 l_0_8_26)))
 (let ((?x9025 (* 2.0 l_0_8_18)))
 (let ((?x9103 (* ?x9025 l_0_8_20)))
 (let ((?x9021 (* 2.0 l_0_8_17)))
 (let ((?x9099 (* ?x9021 l_0_8_19)))
 (let ((?x10444 (- (* (* (- 2.0) l_0_8_101) l_0_8_94) (* (* 2.0 l_0_8_102) l_0_8_95))))
 (let ((?x10450 (- (- ?x10444 (* (* 2.0 l_0_8_103) l_0_8_96)) (* (* 2.0 l_0_8_109) l_0_8_116))))
 (let ((?x10454 (- (- ?x10450 (* (* 2.0 l_0_8_110) l_0_8_117)) (* (* 2.0 l_0_8_111) l_0_8_118))))
 (let ((?x10458 (- (- ?x10454 (* (* 2.0 l_0_8_124) l_0_8_131)) (* (* 2.0 l_0_8_125) l_0_8_132))))
 (let ((?x10463 (- (+ (- ?x10458 (* (* 2.0 l_0_8_126) l_0_8_133)) ?x9099) (* (* 4.0 l_0_8_17) l_0_8_26))))
 (let ((?x10470 (- (- (- (+ ?x10463 ?x9103) (* (* 4.0 l_0_8_18) l_0_8_27)) ?x10467) ?x10469)))
 (let ((?x10476 (- (+ (- (- ?x10470 ?x10471) ?x9107) (* (* 4.0 l_0_8_32) l_0_8_41)) ?x9111)))
 (let ((?x10484 (+ (+ (+ (+ ?x10476 (* (* 4.0 l_0_8_33) l_0_8_42)) ?x10479) ?x10481) ?x10483)))
 (let ((?x10488 (- (- ?x10484 (* (* 4.0 l_0_8_47) l_0_8_56)) (* (* 4.0 l_0_8_48) l_0_8_57))))
 (let ((?x10493 (+ (- (- (- ?x10488 ?x10158) ?x10165) ?x10167) (* (* 4.0 l_0_8_62) l_0_8_71))))
 (let ((?x10498 (+ (+ (+ (+ ?x10493 (* (* 4.0 l_0_8_63) l_0_8_72)) ?x10169) ?x10171) ?x10173)))
 (= ?x10498 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9564 (* 2.0 l_0_8_81)))
 (let ((?x9565 (* ?x9564 l_0_8_84)))
 (let ((?x9561 (* 2.0 l_0_8_80)))
 (let ((?x9562 (* ?x9561 l_0_8_83)))
 (let ((?x9558 (* 2.0 l_0_8_79)))
 (let ((?x9559 (* ?x9558 l_0_8_82)))
 (let ((?x10208 (* l_0_8_70 l_0_8_70)))
 (let ((?x10585 (* 2.0 ?x10208)))
 (let ((?x10205 (* l_0_8_69 l_0_8_69)))
 (let ((?x10583 (* 2.0 ?x10205)))
 (let ((?x10203 (* l_0_8_68 l_0_8_68)))
 (let ((?x10581 (* 2.0 ?x10203)))
 (let ((?x10201 (* l_0_8_67 l_0_8_67)))
 (let ((?x10579 (* 2.0 ?x10201)))
 (let ((?x10146 (* 2.0 l_0_8_66)))
 (let ((?x10147 (* ?x10146 l_0_8_69)))
 (let ((?x10143 (* 2.0 l_0_8_65)))
 (let ((?x10144 (* ?x10143 l_0_8_68)))
 (let ((?x1387 (* 2.0 l_0_8_64)))
 (let ((?x1356 (* ?x1387 l_0_8_67)))
 (let ((?x9938 (* 2.0 l_0_8_51)))
 (let ((?x6646 (* ?x9938 l_0_8_54)))
 (let ((?x9935 (* 2.0 l_0_8_50)))
 (let ((?x1269 (* ?x9935 l_0_8_53)))
 (let ((?x9932 (* 2.0 l_0_8_49)))
 (let ((?x6714 (* ?x9932 l_0_8_52)))
 (let ((?x10562 (* l_0_8_40 l_0_8_40)))
 (let ((?x10563 (* 2.0 ?x10562)))
 (let ((?x10559 (* l_0_8_39 l_0_8_39)))
 (let ((?x10560 (* 2.0 ?x10559)))
 (let ((?x10556 (* l_0_8_38 l_0_8_38)))
 (let ((?x10557 (* 2.0 ?x10556)))
 (let ((?x10553 (* l_0_8_37 l_0_8_37)))
 (let ((?x10554 (* 2.0 ?x10553)))
 (let ((?x10546 (- (* (* (- 2.0) l_0_8_22) l_0_8_22) (* (* 2.0 l_0_8_23) l_0_8_23))))
 (let ((?x10552 (- (- ?x10546 (* (* 2.0 l_0_8_24) l_0_8_24)) (* (* 2.0 l_0_8_25) l_0_8_25))))
 (let ((?x10567 (+ (+ (+ (+ (+ (+ (+ ?x10552 ?x10554) ?x10557) ?x10560) ?x10563) ?x6714) ?x1269) ?x6646)))
 (let ((?x10571 (- (- ?x10567 (* (* 2.0 l_0_8_52) l_0_8_52)) (* (* 2.0 l_0_8_53) l_0_8_53))))
 (let ((?x10575 (- (- ?x10571 (* (* 2.0 l_0_8_54) l_0_8_54)) (* (* 2.0 l_0_8_55) l_0_8_55))))
 (let ((?x10586 (+ (+ (+ (+ (- (- (- ?x10575 ?x1356) ?x10144) ?x10147) ?x10579) ?x10581) ?x10583) ?x10585)))
 (= (+ (+ (+ ?x10586 ?x9559) ?x9562) ?x9565) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9564 (* 2.0 l_0_8_81)))
 (let ((?x9601 (* ?x9564 l_0_8_88)))
 (let ((?x9561 (* 2.0 l_0_8_80)))
 (let ((?x9599 (* ?x9561 l_0_8_87)))
 (let ((?x9558 (* 2.0 l_0_8_79)))
 (let ((?x9597 (* ?x9558 l_0_8_86)))
 (let ((?x10146 (* 2.0 l_0_8_66)))
 (let ((?x10173 (* ?x10146 l_0_8_73)))
 (let ((?x10143 (* 2.0 l_0_8_65)))
 (let ((?x10171 (* ?x10143 l_0_8_72)))
 (let ((?x1387 (* 2.0 l_0_8_64)))
 (let ((?x10169 (* ?x1387 l_0_8_71)))
 (let ((?x9938 (* 2.0 l_0_8_51)))
 (let ((?x10167 (* ?x9938 l_0_8_58)))
 (let ((?x9935 (* 2.0 l_0_8_50)))
 (let ((?x10165 (* ?x9935 l_0_8_57)))
 (let ((?x9932 (* 2.0 l_0_8_49)))
 (let ((?x10158 (* ?x9932 l_0_8_56)))
 (let ((?x10336 (* 2.0 l_0_8_36)))
 (let ((?x10337 (* ?x10336 l_0_8_39)))
 (let ((?x10333 (* 2.0 l_0_8_35)))
 (let ((?x10334 (* ?x10333 l_0_8_38)))
 (let ((?x10330 (* 2.0 l_0_8_34)))
 (let ((?x10331 (* ?x10330 l_0_8_37)))
 (let ((?x9920 (* 2.0 l_0_8_21)))
 (let ((?x10324 (* ?x9920 l_0_8_24)))
 (let ((?x9917 (* 2.0 l_0_8_20)))
 (let ((?x10322 (* ?x9917 l_0_8_23)))
 (let ((?x10319 (* 2.0 l_0_8_19)))
 (let ((?x10320 (* ?x10319 l_0_8_22)))
 (let ((?x7066 (- (- (+ (+ ?x10320 ?x10322) ?x10324) (* (* 4.0 l_0_8_22) l_0_8_26)) (* (* 4.0 l_0_8_23) l_0_8_27))))
 (let ((?x2221 (- (- ?x7066 (* (* 4.0 l_0_8_24) l_0_8_28)) (* (* 4.0 l_0_8_25) l_0_8_29))))
 (let ((?x2155 (+ (- (- (- ?x2221 ?x10331) ?x10334) ?x10337) (* (* 4.0 l_0_8_37) l_0_8_41))))
 (let ((?x10605 (+ (+ ?x2155 (* (* 4.0 l_0_8_38) l_0_8_42)) (* (* 4.0 l_0_8_39) l_0_8_43))))
 (let ((?x10611 (+ (+ (+ (+ ?x10605 (* (* 4.0 l_0_8_40) l_0_8_44)) ?x10158) ?x10165) ?x10167)))
 (let ((?x10617 (- (- ?x10611 (* (* 4.0 l_0_8_52) l_0_8_56)) (* (* 4.0 l_0_8_53) l_0_8_57))))
 (let ((?x10623 (- (- ?x10617 (* (* 4.0 l_0_8_54) l_0_8_58)) (* (* 4.0 l_0_8_55) l_0_8_59))))
 (let ((?x10629 (+ (- (- (- ?x10623 ?x10169) ?x10171) ?x10173) (* (* 4.0 l_0_8_67) l_0_8_71))))
 (let ((?x10635 (+ (+ ?x10629 (* (* 4.0 l_0_8_68) l_0_8_72)) (* (* 4.0 l_0_8_69) l_0_8_73))))
 (let ((?x10641 (+ (+ (+ (+ ?x10635 (* (* 4.0 l_0_8_70) l_0_8_74)) ?x9597) ?x9599) ?x9601)))
 (= ?x10641 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10289 (* l_0_8_75 l_0_8_75)))
 (let ((?x10716 (* 2.0 ?x10289)))
 (let ((?x10287 (* l_0_8_74 l_0_8_74)))
 (let ((?x10714 (* 2.0 ?x10287)))
 (let ((?x10285 (* l_0_8_73 l_0_8_73)))
 (let ((?x10712 (* 2.0 ?x10285)))
 (let ((?x10283 (* l_0_8_72 l_0_8_72)))
 (let ((?x10710 (* 2.0 ?x10283)))
 (let ((?x10281 (* l_0_8_71 l_0_8_71)))
 (let ((?x10708 (* 2.0 ?x10281)))
 (let ((?x10690 (* l_0_8_45 l_0_8_45)))
 (let ((?x10691 (* 2.0 ?x10690)))
 (let ((?x10687 (* l_0_8_44 l_0_8_44)))
 (let ((?x10688 (* 2.0 ?x10687)))
 (let ((?x10684 (* l_0_8_43 l_0_8_43)))
 (let ((?x10685 (* 2.0 ?x10684)))
 (let ((?x10681 (* l_0_8_42 l_0_8_42)))
 (let ((?x10682 (* 2.0 ?x10681)))
 (let ((?x10678 (* l_0_8_41 l_0_8_41)))
 (let ((?x10679 (* 2.0 ?x10678)))
 (let ((?x10336 (* 2.0 l_0_8_36)))
 (let ((?x10483 (* ?x10336 l_0_8_43)))
 (let ((?x10333 (* 2.0 l_0_8_35)))
 (let ((?x10481 (* ?x10333 l_0_8_42)))
 (let ((?x10330 (* 2.0 l_0_8_34)))
 (let ((?x10479 (* ?x10330 l_0_8_41)))
 (let ((?x9920 (* 2.0 l_0_8_21)))
 (let ((?x10471 (* ?x9920 l_0_8_28)))
 (let ((?x9917 (* 2.0 l_0_8_20)))
 (let ((?x10469 (* ?x9917 l_0_8_27)))
 (let ((?x10319 (* 2.0 l_0_8_19)))
 (let ((?x10467 (* ?x10319 l_0_8_26)))
 (let ((?x10665 (- (- (+ (+ ?x10467 ?x10469) ?x10471) (* (* 2.0 l_0_8_26) l_0_8_26)) (* (* 2.0 l_0_8_27) l_0_8_27))))
 (let ((?x10671 (- (- ?x10665 (* (* 2.0 l_0_8_28) l_0_8_28)) (* (* 2.0 l_0_8_29) l_0_8_29))))
 (let ((?x10677 (- (- (- (- ?x10671 (* (* 2.0 l_0_8_30) l_0_8_30)) ?x10479) ?x10481) ?x10483)))
 (let ((?x10695 (- (+ (+ (+ (+ (+ ?x10677 ?x10679) ?x10682) ?x10685) ?x10688) ?x10691) (* (* 2.0 l_0_8_56) l_0_8_56))))
 (let ((?x10701 (- (- ?x10695 (* (* 2.0 l_0_8_57) l_0_8_57)) (* (* 2.0 l_0_8_58) l_0_8_58))))
 (let ((?x10707 (- (- ?x10701 (* (* 2.0 l_0_8_59) l_0_8_59)) (* (* 2.0 l_0_8_60) l_0_8_60))))
 (= (+ (+ (+ (+ (+ ?x10707 ?x10708) ?x10710) ?x10712) ?x10714) ?x10716) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9282 (* l_0_8_78 l_0_8_78)))
 (let ((?x9280 (* l_0_8_77 l_0_8_77)))
 (let ((?x8972 (* l_0_8_63 l_0_8_63)))
 (let ((?x9046 (* 2.0 l_0_8_63)))
 (let ((?x9993 (* ?x9046 l_0_8_68)))
 (let ((?x8969 (* l_0_8_62 l_0_8_62)))
 (let ((?x9043 (* 2.0 l_0_8_62)))
 (let ((?x9991 (* ?x9043 l_0_8_67)))
 (let ((?x8995 (* l_0_8_48 l_0_8_48)))
 (let ((?x9040 (* 2.0 l_0_8_48)))
 (let ((?x9977 (* ?x9040 l_0_8_53)))
 (let ((?x5076 (* l_0_8_47 l_0_8_47)))
 (let ((?x9037 (* 2.0 l_0_8_47)))
 (let ((?x9975 (* ?x9037 l_0_8_52)))
 (let ((?x9033 (* 2.0 l_0_8_33)))
 (let ((?x10733 (* ?x9033 l_0_8_38)))
 (let ((?x9029 (* 2.0 l_0_8_32)))
 (let ((?x2603 (* ?x9029 l_0_8_37)))
 (let ((?x9025 (* 2.0 l_0_8_18)))
 (let ((?x7271 (* ?x9025 l_0_8_23)))
 (let ((?x9021 (* 2.0 l_0_8_17)))
 (let ((?x7342 (* ?x9021 l_0_8_22)))
 (let ((?x2278 (- (* (* (- 2.0) l_0_8_107) l_0_8_112) (* (* 2.0 l_0_8_108) l_0_8_113))))
 (let ((?x7341 (- (- ?x2278 (* (* 2.0 l_0_8_122) l_0_8_127)) (* (* 2.0 l_0_8_123) l_0_8_128))))
 (let ((?x10737 (- (+ (- (+ (+ (- (- ?x7341 ?x7342) ?x7271) ?x2603) ?x10733) ?x9975) ?x5076) ?x9977)))
 (let ((?x10744 (+ (+ (- (+ (- (+ (+ ?x10737 ?x8995) ?x9991) ?x8969) ?x9993) ?x8972) ?x9280) ?x9282)))
 (let ((?x10748 (- (- ?x10744 (* (* 2.0 l_0_8_92) l_0_8_97)) (* (* 2.0 l_0_8_93) l_0_8_98))))
 (= ?x10748 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x10839 (* l_0_8_99 l_0_8_99)))
 (let ((?x10837 (* l_0_8_98 l_0_8_98)))
 (let ((?x10835 (* l_0_8_97 l_0_8_97)))
 (let ((?x9338 (* 2.0 l_0_8_78)))
 (let ((?x9410 (* ?x9338 l_0_8_83)))
 (let ((?x9335 (* 2.0 l_0_8_77)))
 (let ((?x9408 (* ?x9335 l_0_8_82)))
 (let ((?x9046 (* 2.0 l_0_8_63)))
 (let ((?x9993 (* ?x9046 l_0_8_68)))
 (let ((?x9043 (* 2.0 l_0_8_62)))
 (let ((?x9991 (* ?x9043 l_0_8_67)))
 (let ((?x9040 (* 2.0 l_0_8_48)))
 (let ((?x9977 (* ?x9040 l_0_8_53)))
 (let ((?x9037 (* 2.0 l_0_8_47)))
 (let ((?x9975 (* ?x9037 l_0_8_52)))
 (let ((?x10787 (* l_0_8_130 l_0_8_130)))
 (let ((?x10785 (* l_0_8_129 l_0_8_129)))
 (let ((?x10783 (* l_0_8_128 l_0_8_128)))
 (let ((?x10781 (* l_0_8_127 l_0_8_127)))
 (let ((?x10779 (* l_0_8_115 l_0_8_115)))
 (let ((?x10777 (* l_0_8_114 l_0_8_114)))
 (let ((?x10775 (* l_0_8_113 l_0_8_113)))
 (let ((?x10776 (- (- (* (- l_0_8_100) l_0_8_100) (* l_0_8_112 l_0_8_112)) ?x10775)))
 (let ((?x10791 (- (- (- (- (- (- (- ?x10776 ?x10777) ?x10779) ?x10781) ?x10783) ?x10785) ?x10787) (* (* 1.0 l_0_8_22) l_0_8_22))))
 (let ((?x10797 (- (- ?x10791 (* (* 1.0 l_0_8_23) l_0_8_23)) (* (* 1.0 l_0_8_24) l_0_8_24))))
 (let ((?x10802 (+ (- ?x10797 (* (* 1.0 l_0_8_25) l_0_8_25)) (* 1.0 (* l_0_8_37 l_0_8_37)))))
 (let ((?x10806 (+ (+ ?x10802 (* 1.0 (* l_0_8_38 l_0_8_38))) (* 1.0 (* l_0_8_39 l_0_8_39)))))
 (let ((?x10813 (- (+ (+ (+ ?x10806 (* 1.0 (* l_0_8_40 l_0_8_40))) ?x9975) ?x9977) (* (* 1.0 l_0_8_52) l_0_8_52))))
 (let ((?x10819 (- (- ?x10813 (* (* 1.0 l_0_8_53) l_0_8_53)) (* (* 1.0 l_0_8_54) l_0_8_54))))
 (let ((?x10826 (+ (- (- (- ?x10819 (* (* 1.0 l_0_8_55) l_0_8_55)) ?x9991) ?x9993) (* 1.0 (* l_0_8_67 l_0_8_67)))))
 (let ((?x10830 (+ (+ ?x10826 (* 1.0 (* l_0_8_68 l_0_8_68))) (* 1.0 (* l_0_8_69 l_0_8_69)))))
 (let ((?x10836 (- (+ (+ (+ ?x10830 (* 1.0 (* l_0_8_70 l_0_8_70))) ?x9408) ?x9410) ?x10835)))
 (= (- (- ?x10836 ?x10837) ?x10839) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9338 (* 2.0 l_0_8_78)))
 (let ((?x9461 (* ?x9338 l_0_8_87)))
 (let ((?x9335 (* 2.0 l_0_8_77)))
 (let ((?x9459 (* ?x9335 l_0_8_86)))
 (let ((?x10249 (* (* 2.0 l_0_8_70) l_0_8_74)))
 (let ((?x10246 (* (* 2.0 l_0_8_69) l_0_8_73)))
 (let ((?x10243 (* (* 2.0 l_0_8_68) l_0_8_72)))
 (let ((?x10240 (* (* 2.0 l_0_8_67) l_0_8_71)))
 (let ((?x9046 (* 2.0 l_0_8_63)))
 (let ((?x9047 (* ?x9046 l_0_8_72)))
 (let ((?x9043 (* 2.0 l_0_8_62)))
 (let ((?x9044 (* ?x9043 l_0_8_71)))
 (let ((?x10236 (* 2.0 l_0_8_55)))
 (let ((?x10237 (* ?x10236 l_0_8_59)))
 (let ((?x10233 (* 2.0 l_0_8_54)))
 (let ((?x10234 (* ?x10233 l_0_8_58)))
 (let ((?x10230 (* 2.0 l_0_8_53)))
 (let ((?x10231 (* ?x10230 l_0_8_57)))
 (let ((?x10227 (* 2.0 l_0_8_52)))
 (let ((?x10228 (* ?x10227 l_0_8_56)))
 (let ((?x9040 (* 2.0 l_0_8_48)))
 (let ((?x9041 (* ?x9040 l_0_8_57)))
 (let ((?x9037 (* 2.0 l_0_8_47)))
 (let ((?x9038 (* ?x9037 l_0_8_56)))
 (let ((?x10907 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x10904 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x10901 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x10898 (* (* 2.0 l_0_8_37) l_0_8_41)))
 (let ((?x9033 (* 2.0 l_0_8_33)))
 (let ((?x10733 (* ?x9033 l_0_8_38)))
 (let ((?x9029 (* 2.0 l_0_8_32)))
 (let ((?x2603 (* ?x9029 l_0_8_37)))
 (let ((?x10550 (* 2.0 l_0_8_25)))
 (let ((?x10893 (* ?x10550 l_0_8_29)))
 (let ((?x10547 (* 2.0 l_0_8_24)))
 (let ((?x10891 (* ?x10547 l_0_8_28)))
 (let ((?x2146 (* 2.0 l_0_8_23)))
 (let ((?x10889 (* ?x2146 l_0_8_27)))
 (let ((?x10887 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x9025 (* 2.0 l_0_8_18)))
 (let ((?x7271 (* ?x9025 l_0_8_23)))
 (let ((?x9021 (* 2.0 l_0_8_17)))
 (let ((?x7342 (* ?x9021 l_0_8_22)))
 (let ((?x7433 (- (* (* (- 2.0) l_0_8_100) l_0_8_104) (* (* 2.0 l_0_8_101) l_0_8_97))))
 (let ((?x2874 (- (- ?x7433 (* (* 2.0 l_0_8_102) l_0_8_98)) (* (* 2.0 l_0_8_103) l_0_8_99))))
 (let ((?x10865 (- (- ?x2874 (* (* 2.0 l_0_8_112) l_0_8_116)) (* (* 2.0 l_0_8_113) l_0_8_117))))
 (let ((?x10871 (- (- ?x10865 (* (* 2.0 l_0_8_114) l_0_8_118)) (* (* 2.0 l_0_8_115) l_0_8_119))))
 (let ((?x10877 (- (- ?x10871 (* (* 2.0 l_0_8_127) l_0_8_131)) (* (* 2.0 l_0_8_128) l_0_8_132))))
 (let ((?x10883 (- (- ?x10877 (* (* 2.0 l_0_8_129) l_0_8_133)) (* (* 2.0 l_0_8_130) l_0_8_134))))
 (let ((?x10895 (- (- (- (- (- (+ (+ ?x10883 ?x7342) ?x7271) ?x10887) ?x10889) ?x10891) ?x10893) ?x2603)))
 (let ((?x10910 (+ (+ (+ (+ (+ (+ (- ?x10895 ?x10733) ?x10898) ?x10901) ?x10904) ?x10907) ?x9038) ?x9041)))
 (let ((?x10917 (+ (- (- (- (- (- (- ?x10910 ?x10228) ?x10231) ?x10234) ?x10237) ?x9044) ?x9047) ?x10240)))
 (= (+ (+ (+ (+ (+ ?x10917 ?x10243) ?x10246) ?x10249) ?x9459) ?x9461) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9033 (* 2.0 l_0_8_33)))
 (let ((?x9034 (* ?x9033 l_0_8_42)))
 (let ((?x9029 (* 2.0 l_0_8_32)))
 (let ((?x9030 (* ?x9029 l_0_8_41)))
 (let ((?x9025 (* 2.0 l_0_8_18)))
 (let ((?x9026 (* ?x9025 l_0_8_27)))
 (let ((?x9021 (* 2.0 l_0_8_17)))
 (let ((?x9022 (* ?x9021 l_0_8_26)))
 (let ((?x10985 (* l_0_8_135 l_0_8_135)))
 (let ((?x10983 (* l_0_8_134 l_0_8_134)))
 (let ((?x10981 (* l_0_8_133 l_0_8_133)))
 (let ((?x10979 (* l_0_8_132 l_0_8_132)))
 (let ((?x10977 (* l_0_8_131 l_0_8_131)))
 (let ((?x10975 (* l_0_8_120 l_0_8_120)))
 (let ((?x10973 (* l_0_8_119 l_0_8_119)))
 (let ((?x10971 (* l_0_8_118 l_0_8_118)))
 (let ((?x10969 (* l_0_8_117 l_0_8_117)))
 (let ((?x10967 (* l_0_8_116 l_0_8_116)))
 (let ((?x10965 (* l_0_8_105 l_0_8_105)))
 (let ((?x10963 (* l_0_8_104 l_0_8_104)))
 (let ((?x10961 (* l_0_8_103 l_0_8_103)))
 (let ((?x10962 (- (- (* (- l_0_8_101) l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x10961)))
 (let ((?x10976 (- (- (- (- (- (- (- ?x10962 ?x10963) ?x10965) ?x10967) ?x10969) ?x10971) ?x10973) ?x10975)))
 (let ((?x10988 (+ (+ (- (- (- (- (- ?x10976 ?x10977) ?x10979) ?x10981) ?x10983) ?x10985) ?x9022) ?x9026)))
 (let ((?x10994 (- (- ?x10988 (* (* 1.0 l_0_8_26) l_0_8_26)) (* (* 1.0 l_0_8_27) l_0_8_27))))
 (let ((?x11000 (- (- ?x10994 (* (* 1.0 l_0_8_28) l_0_8_28)) (* (* 1.0 l_0_8_29) l_0_8_29))))
 (let ((?x11007 (+ (- (- (- ?x11000 (* (* 1.0 l_0_8_30) l_0_8_30)) ?x9030) ?x9034) (* 1.0 (* l_0_8_41 l_0_8_41)))))
 (let ((?x11011 (+ (+ ?x11007 (* 1.0 (* l_0_8_42 l_0_8_42))) (* 1.0 (* l_0_8_43 l_0_8_43)))))
 (let ((?x11015 (+ (+ ?x11011 (* 1.0 (* l_0_8_44 l_0_8_44))) (* 1.0 (* l_0_8_45 l_0_8_45)))))
 (let ((?x11021 (- (- ?x11015 (* (* 1.0 l_0_8_56) l_0_8_56)) (* (* 1.0 l_0_8_57) l_0_8_57))))
 (let ((?x11027 (- (- ?x11021 (* (* 1.0 l_0_8_58) l_0_8_58)) (* (* 1.0 l_0_8_59) l_0_8_59))))
 (let ((?x11032 (+ (- ?x11027 (* (* 1.0 l_0_8_60) l_0_8_60)) (* 1.0 (* l_0_8_71 l_0_8_71)))))
 (let ((?x11036 (+ (+ ?x11032 (* 1.0 (* l_0_8_72 l_0_8_72))) (* 1.0 (* l_0_8_73 l_0_8_73)))))
 (let ((?x11040 (+ (+ ?x11036 (* 1.0 (* l_0_8_74 l_0_8_74))) (* 1.0 (* l_0_8_75 l_0_8_75)))))
 (= ?x11040 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9689 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x9686 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x9683 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x9680 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x10249 (* (* 2.0 l_0_8_70) l_0_8_74)))
 (let ((?x10246 (* (* 2.0 l_0_8_69) l_0_8_73)))
 (let ((?x10243 (* (* 2.0 l_0_8_68) l_0_8_72)))
 (let ((?x10240 (* (* 2.0 l_0_8_67) l_0_8_71)))
 (let ((?x10236 (* 2.0 l_0_8_55)))
 (let ((?x10237 (* ?x10236 l_0_8_59)))
 (let ((?x10233 (* 2.0 l_0_8_54)))
 (let ((?x10234 (* ?x10233 l_0_8_58)))
 (let ((?x10230 (* 2.0 l_0_8_53)))
 (let ((?x10231 (* ?x10230 l_0_8_57)))
 (let ((?x10227 (* 2.0 l_0_8_52)))
 (let ((?x10228 (* ?x10227 l_0_8_56)))
 (let ((?x10562 (* l_0_8_40 l_0_8_40)))
 (let ((?x10559 (* l_0_8_39 l_0_8_39)))
 (let ((?x10556 (* l_0_8_38 l_0_8_38)))
 (let ((?x10553 (* l_0_8_37 l_0_8_37)))
 (let ((?x7007 (* l_0_8_25 l_0_8_25)))
 (let ((?x2143 (* l_0_8_24 l_0_8_24)))
 (let ((?x3306 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x2143) ?x7007)))
 (let ((?x7802 (+ (+ (+ (- (- (- (- ?x3306 ?x10553) ?x10556) ?x10559) ?x10562) ?x10228) ?x10231) ?x10234)))
 (let ((?x3280 (+ (+ (- (- (- (- (+ ?x7802 ?x10237) ?x10240) ?x10243) ?x10246) ?x10249) ?x9680) ?x9683)))
 (= (+ (+ ?x3280 ?x9686) ?x9689) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x9731 (* l_0_8_90 l_0_8_90)))
 (let ((?x9729 (* l_0_8_89 l_0_8_89)))
 (let ((?x9727 (* l_0_8_88 l_0_8_88)))
 (let ((?x9725 (* l_0_8_87 l_0_8_87)))
 (let ((?x9723 (* l_0_8_86 l_0_8_86)))
 (let ((?x10289 (* l_0_8_75 l_0_8_75)))
 (let ((?x10287 (* l_0_8_74 l_0_8_74)))
 (let ((?x10285 (* l_0_8_73 l_0_8_73)))
 (let ((?x10283 (* l_0_8_72 l_0_8_72)))
 (let ((?x10281 (* l_0_8_71 l_0_8_71)))
 (let ((?x10279 (* l_0_8_60 l_0_8_60)))
 (let ((?x10277 (* l_0_8_59 l_0_8_59)))
 (let ((?x10275 (* l_0_8_58 l_0_8_58)))
 (let ((?x10273 (* l_0_8_57 l_0_8_57)))
 (let ((?x10265 (* l_0_8_56 l_0_8_56)))
 (let ((?x10907 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x10904 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x10901 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x10898 (* (* 2.0 l_0_8_37) l_0_8_41)))
 (let ((?x10550 (* 2.0 l_0_8_25)))
 (let ((?x10893 (* ?x10550 l_0_8_29)))
 (let ((?x10547 (* 2.0 l_0_8_24)))
 (let ((?x10891 (* ?x10547 l_0_8_28)))
 (let ((?x2146 (* 2.0 l_0_8_23)))
 (let ((?x10889 (* ?x2146 l_0_8_27)))
 (let ((?x10887 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x11090 (- (- (- (- (+ (+ (+ ?x10887 ?x10889) ?x10891) ?x10893) ?x10898) ?x10901) ?x10904) ?x10907)))
 (let ((?x11097 (- (- (+ (+ (+ (+ (+ ?x11090 ?x10265) ?x10273) ?x10275) ?x10277) ?x10279) ?x10281) ?x10283)))
 (let ((?x11104 (+ (+ (+ (+ (- (- (- ?x11097 ?x10285) ?x10287) ?x10289) ?x9723) ?x9725) ?x9727) ?x9729)))
 (= (+ ?x11104 ?x9731) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x10690 (* l_0_8_45 l_0_8_45)))
 (let ((?x10687 (* l_0_8_44 l_0_8_44)))
 (let ((?x10684 (* l_0_8_43 l_0_8_43)))
 (let ((?x10681 (* l_0_8_42 l_0_8_42)))
 (let ((?x10678 (* l_0_8_41 l_0_8_41)))
 (let ((?x2587 (* l_0_8_30 l_0_8_30)))
 (let ((?x7267 (* l_0_8_29 l_0_8_29)))
 (let ((?x7265 (* l_0_8_28 l_0_8_28)))
 (let ((?x3421 (+ (+ (+ (* l_0_8_26 l_0_8_26) (* l_0_8_27 l_0_8_27)) ?x7265) ?x7267)))
 (= (- (- (- (- (- (+ ?x3421 ?x2587) ?x10678) ?x10681) ?x10684) ?x10687) ?x10690) 0.0)))))))))))
(assert
 (let ((?x9648 (* l_0_8_85 l_0_8_85)))
 (let ((?x9646 (* l_0_8_84 l_0_8_84)))
 (let ((?x9644 (* l_0_8_83 l_0_8_83)))
 (let ((?x9642 (* l_0_8_82 l_0_8_82)))
 (let ((?x10208 (* l_0_8_70 l_0_8_70)))
 (let ((?x10205 (* l_0_8_69 l_0_8_69)))
 (let ((?x10203 (* l_0_8_68 l_0_8_68)))
 (let ((?x10201 (* l_0_8_67 l_0_8_67)))
 (let ((?x10199 (* l_0_8_55 l_0_8_55)))
 (let ((?x10197 (* l_0_8_54 l_0_8_54)))
 (let ((?x11116 (+ (+ (+ (* l_0_8_52 l_0_8_52) (* l_0_8_53 l_0_8_53)) ?x10197) ?x10199)))
 (let ((?x11123 (+ (+ (+ (- (- (- (- ?x11116 ?x10201) ?x10203) ?x10205) ?x10208) ?x9642) ?x9644) ?x9646)))
 (= (+ ?x11123 ?x9648) 0.0))))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (>= l_0_8_121 0.0))
(assert
 (>= l_0_8_123 0.0))
(assert
 (>= l_0_8_126 0.0))
(assert
 (>= l_0_8_130 0.0))
(assert
 (>= l_0_8_135 0.0))
(assert
 (let ((?x11266 (* l_0_9_96 l_0_9_96)))
 (let ((?x11264 (* l_0_9_95 l_0_9_95)))
 (let ((?x11262 (* l_0_9_94 l_0_9_94)))
 (let ((?x11251 (* l_0_9_63 l_0_9_63)))
 (let ((?x11246 (* l_0_9_62 l_0_9_62)))
 (let ((?x11232 (* l_0_9_48 l_0_9_48)))
 (let ((?x11227 (* l_0_9_47 l_0_9_47)))
 (let ((?x11207 (* l_0_9_3 l_0_9_3)))
 (let ((?x11199 (* l_0_9_2 l_0_9_2)))
 (let ((?x11188 (* l_0_9_141 l_0_9_141)))
 (let ((?x11186 (* l_0_9_140 l_0_9_140)))
 (let ((?x11184 (* l_0_9_139 l_0_9_139)))
 (let ((?x11182 (* l_0_9_126 l_0_9_126)))
 (let ((?x11180 (* l_0_9_125 l_0_9_125)))
 (let ((?x11178 (* l_0_9_124 l_0_9_124)))
 (let ((?x11176 (* l_0_9_111 l_0_9_111)))
 (let ((?x11177 (- (- (* (- l_0_9_109) l_0_9_109) (* l_0_9_110 l_0_9_110)) ?x11176)))
 (let ((?x11192 (- (- (- (- (- (- (- ?x11177 ?x11178) ?x11180) ?x11182) ?x11184) ?x11186) ?x11188) (* (* 4.0 l_0_9_17) l_0_9_19))))
 (let ((?x11198 (- (- ?x11192 (* (* 4.0 l_0_9_18) l_0_9_20)) (* (* 1.0 l_0_9_19) l_0_9_19))))
 (let ((?x11206 (- (- (+ ?x11198 ?x11199) (* (* 1.0 l_0_9_20) l_0_9_20)) (* (* 1.0 l_0_9_21) l_0_9_21))))
 (let ((?x11214 (+ (+ (+ ?x11206 ?x11207) (* (* 4.0 l_0_9_32) l_0_9_34)) (* (* 4.0 l_0_9_33) l_0_9_35))))
 (let ((?x11220 (+ (+ ?x11214 (* 1.0 (* l_0_9_34 l_0_9_34))) (* 1.0 (* l_0_9_35 l_0_9_35)))))
 (let ((?x11226 (- (+ ?x11220 (* 1.0 (* l_0_9_36 l_0_9_36))) (* (* 4.0 l_0_9_47) l_0_9_49))))
 (let ((?x11236 (- (- (- (- ?x11226 ?x11227) (* (* 4.0 l_0_9_48) l_0_9_50)) ?x11232) (* (* 1.0 l_0_9_49) l_0_9_49))))
 (let ((?x11242 (- (- ?x11236 (* (* 1.0 l_0_9_50) l_0_9_50)) (* (* 1.0 l_0_9_51) l_0_9_51))))
 (let ((?x11250 (+ (+ (+ ?x11242 (* (* 4.0 l_0_9_62) l_0_9_64)) ?x11246) (* (* 4.0 l_0_9_63) l_0_9_65))))
 (let ((?x11258 (+ (+ (+ ?x11250 ?x11251) (* 1.0 (* l_0_9_64 l_0_9_64))) (* 1.0 (* l_0_9_65 l_0_9_65)))))
 (let ((?x11267 (- (- (- (+ ?x11258 (* 1.0 (* l_0_9_66 l_0_9_66))) ?x11262) ?x11264) ?x11266)))
 (= (+ ?x11267 1.0) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x11251 (* l_0_9_63 l_0_9_63)))
 (let ((?x11403 (* 2.0 ?x11251)))
 (let ((?x11400 (* 2.0 l_0_9_63)))
 (let ((?x11401 (* ?x11400 l_0_9_65)))
 (let ((?x11246 (* l_0_9_62 l_0_9_62)))
 (let ((?x11398 (* 2.0 ?x11246)))
 (let ((?x11395 (* 2.0 l_0_9_62)))
 (let ((?x11396 (* ?x11395 l_0_9_64)))
 (let ((?x11390 (* 2.0 l_0_9_48)))
 (let ((?x11391 (* ?x11390 l_0_9_50)))
 (let ((?x11385 (* 2.0 l_0_9_47)))
 (let ((?x11386 (* ?x11385 l_0_9_49)))
 (let ((?x11382 (* l_0_9_33 l_0_9_33)))
 (let ((?x11383 (* 2.0 ?x11382)))
 (let ((?x11379 (* 2.0 l_0_9_33)))
 (let ((?x11380 (* ?x11379 l_0_9_35)))
 (let ((?x11376 (* l_0_9_32 l_0_9_32)))
 (let ((?x11377 (* 2.0 ?x11376)))
 (let ((?x11373 (* 2.0 l_0_9_32)))
 (let ((?x11374 (* ?x11373 l_0_9_34)))
 (let ((?x11368 (* 2.0 l_0_9_18)))
 (let ((?x11369 (* ?x11368 l_0_9_20)))
 (let ((?x11363 (* 2.0 l_0_9_17)))
 (let ((?x11364 (* ?x11363 l_0_9_19)))
 (let ((?x11350 (- (* (* (- 2.0) l_0_9_107) l_0_9_109) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x11356 (- (- ?x11350 (* (* 2.0 l_0_9_122) l_0_9_124)) (* (* 2.0 l_0_9_123) l_0_9_125))))
 (let ((?x11362 (- (- ?x11356 (* (* 2.0 l_0_9_137) l_0_9_139)) (* (* 2.0 l_0_9_138) l_0_9_140))))
 (let ((?x11372 (- (- (- (- ?x11362 ?x11364) (* ?x11363 l_0_9_17)) ?x11369) (* ?x11368 l_0_9_18))))
 (let ((?x11389 (- (- (+ (+ (+ (+ ?x11372 ?x11374) ?x11377) ?x11380) ?x11383) ?x11386) (* ?x11385 l_0_9_47))))
 (let ((?x11404 (+ (+ (+ (+ (- (- ?x11389 ?x11391) (* ?x11390 l_0_9_48)) ?x11396) ?x11398) ?x11401) ?x11403)))
 (let ((?x11410 (- (- ?x11404 (* (* 2.0 l_0_9_92) l_0_9_94)) (* (* 2.0 l_0_9_93) l_0_9_95))))
 (= (+ ?x11410 4.0) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x11474 (* l_0_9_93 l_0_9_93)))
 (let ((?x11472 (* l_0_9_92 l_0_9_92)))
 (let ((?x11450 (* l_0_9_138 l_0_9_138)))
 (let ((?x3718 (* l_0_9_137 l_0_9_137)))
 (let ((?x3810 (* l_0_9_123 l_0_9_123)))
 (let ((?x8137 (* l_0_9_122 l_0_9_122)))
 (let ((?x8155 (* l_0_9_108 l_0_9_108)))
 (let ((?x8132 (- (- (- (* (- _a_0_) _a_3_) _a_2_) (* l_0_9_107 l_0_9_107)) ?x8155)))
 (let ((?x11454 (- (- (- (- (- ?x8132 ?x8137) ?x3810) ?x3718) ?x11450) (* (* 1.0 l_0_9_17) l_0_9_17))))
 (let ((?x11459 (+ (- ?x11454 (* (* 1.0 l_0_9_18) l_0_9_18)) (* 1.0 (* l_0_9_32 l_0_9_32)))))
 (let ((?x11464 (- (+ ?x11459 (* 1.0 (* l_0_9_33 l_0_9_33))) (* (* 1.0 l_0_9_47) l_0_9_47))))
 (let ((?x11469 (+ (- ?x11464 (* (* 1.0 l_0_9_48) l_0_9_48)) (* 1.0 (* l_0_9_62 l_0_9_62)))))
 (let ((?x11476 (+ (- (- (+ ?x11469 (* 1.0 (* l_0_9_63 l_0_9_63))) ?x11472) ?x11474) 4.0)))
 (= ?x11476 0.0)))))))))))))))
(assert
 (let ((?x11400 (* 2.0 l_0_9_63)))
 (let ((?x11538 (* ?x11400 l_0_9_72)))
 (let ((?x11395 (* 2.0 l_0_9_62)))
 (let ((?x11536 (* ?x11395 l_0_9_71)))
 (let ((?x11390 (* 2.0 l_0_9_48)))
 (let ((?x11534 (* ?x11390 l_0_9_57)))
 (let ((?x11385 (* 2.0 l_0_9_47)))
 (let ((?x11532 (* ?x11385 l_0_9_56)))
 (let ((?x11382 (* l_0_9_33 l_0_9_33)))
 (let ((?x11379 (* 2.0 l_0_9_33)))
 (let ((?x11529 (* ?x11379 l_0_9_42)))
 (let ((?x11376 (* l_0_9_32 l_0_9_32)))
 (let ((?x11373 (* 2.0 l_0_9_32)))
 (let ((?x11526 (* ?x11373 l_0_9_41)))
 (let ((?x3712 (* l_0_9_18 l_0_9_18)))
 (let ((?x11368 (* 2.0 l_0_9_18)))
 (let ((?x11523 (* ?x11368 l_0_9_27)))
 (let ((?x3709 (* l_0_9_17 l_0_9_17)))
 (let ((?x11363 (* 2.0 l_0_9_17)))
 (let ((?x11520 (* ?x11363 l_0_9_26)))
 (let ((?x11506 (- (- (* (- _a_1_) _a_3_) (* (* 2.0 l_0_9_101) l_0_9_92)) (* (* 2.0 l_0_9_102) l_0_9_93))))
 (let ((?x11511 (- (- ?x11506 (* (* 2.0 l_0_9_107) l_0_9_116)) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x11515 (- (- ?x11511 (* (* 2.0 l_0_9_122) l_0_9_131)) (* (* 2.0 l_0_9_123) l_0_9_132))))
 (let ((?x11519 (- (- ?x11515 (* (* 2.0 l_0_9_137) l_0_9_146)) (* (* 2.0 l_0_9_138) l_0_9_147))))
 (let ((?x11530 (+ (- (+ (+ (- (+ (- ?x11519 ?x11520) ?x3709) ?x11523) ?x3712) ?x11526) ?x11376) ?x11529)))
 (= (+ (+ (- (- (- ?x11530 ?x11382) ?x11532) ?x11534) ?x11536) ?x11538) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x11584 (* l_0_9_78 l_0_9_78)))
 (let ((?x11582 (* l_0_9_77 l_0_9_77)))
 (let ((?x11251 (* l_0_9_63 l_0_9_63)))
 (let ((?x11400 (* 2.0 l_0_9_63)))
 (let ((?x11579 (* ?x11400 l_0_9_68)))
 (let ((?x11246 (* l_0_9_62 l_0_9_62)))
 (let ((?x11395 (* 2.0 l_0_9_62)))
 (let ((?x11576 (* ?x11395 l_0_9_67)))
 (let ((?x11232 (* l_0_9_48 l_0_9_48)))
 (let ((?x11390 (* 2.0 l_0_9_48)))
 (let ((?x11573 (* ?x11390 l_0_9_53)))
 (let ((?x11227 (* l_0_9_47 l_0_9_47)))
 (let ((?x11385 (* 2.0 l_0_9_47)))
 (let ((?x11570 (* ?x11385 l_0_9_52)))
 (let ((?x11379 (* 2.0 l_0_9_33)))
 (let ((?x11568 (* ?x11379 l_0_9_38)))
 (let ((?x11373 (* 2.0 l_0_9_32)))
 (let ((?x11566 (* ?x11373 l_0_9_37)))
 (let ((?x11368 (* 2.0 l_0_9_18)))
 (let ((?x11564 (* ?x11368 l_0_9_23)))
 (let ((?x11363 (* 2.0 l_0_9_17)))
 (let ((?x11562 (* ?x11363 l_0_9_22)))
 (let ((?x3888 (- (- (- _a_4_) (* (* 2.0 l_0_9_107) l_0_9_112)) (* (* 2.0 l_0_9_108) l_0_9_113))))
 (let ((?x11557 (- (- ?x3888 (* (* 2.0 l_0_9_122) l_0_9_127)) (* (* 2.0 l_0_9_123) l_0_9_128))))
 (let ((?x11561 (- (- ?x11557 (* (* 2.0 l_0_9_137) l_0_9_142)) (* (* 2.0 l_0_9_138) l_0_9_143))))
 (let ((?x11574 (- (+ (- (+ (+ (- (- ?x11561 ?x11562) ?x11564) ?x11566) ?x11568) ?x11570) ?x11227) ?x11573)))
 (let ((?x11585 (+ (+ (- (+ (- (+ (+ ?x11574 ?x11232) ?x11576) ?x11246) ?x11579) ?x11251) ?x11582) ?x11584)))
 (let ((?x11589 (- (- ?x11585 (* (* 2.0 l_0_9_92) l_0_9_97)) (* (* 2.0 l_0_9_93) l_0_9_98))))
 (= ?x11589 0.0))))))))))))))))))))))))))))))
(assert
 (= (- (* (- l_0_9_1) l_0_9_1) (* l_0_9_76 l_0_9_76)) 0.0))
(assert
 (let ((?x11680 (* l_0_9_91 l_0_9_91)))
 (let ((?x11677 (* 2.0 l_0_9_76)))
 (let ((?x11678 (* ?x11677 l_0_9_77)))
 (let ((?x11663 (* l_0_9_136 l_0_9_136)))
 (let ((?x11661 (* l_0_9_121 l_0_9_121)))
 (let ((?x11662 (- (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* l_0_9_106 l_0_9_106)) ?x11661)))
 (let ((?x11670 (+ (- (- ?x11662 ?x11663) (* (* 1.0 l_0_9_16) l_0_9_16)) (* 1.0 (* l_0_9_31 l_0_9_31)))))
 (let ((?x11676 (+ (- ?x11670 (* (* 1.0 l_0_9_46) l_0_9_46)) (* 1.0 (* l_0_9_61 l_0_9_61)))))
 (= (- (- ?x11676 ?x11678) ?x11680) 0.0))))))))))
(assert
 (let ((?x11677 (* 2.0 l_0_9_76)))
 (let ((?x11719 (* ?x11677 l_0_9_79)))
 (let ((?x11711 (- (* (* (- 2.0) l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_16) l_0_9_16))))
 (let ((?x11716 (- (+ ?x11711 (* 2.0 (* l_0_9_31 l_0_9_31))) (* (* 2.0 l_0_9_46) l_0_9_46))))
 (= (- (+ ?x11716 (* 2.0 (* l_0_9_61 l_0_9_61))) ?x11719) 0.0))))))
(assert
 (let ((?x11650 (* l_0_9_76 l_0_9_76)))
 (let ((?x11677 (* 2.0 l_0_9_76)))
 (let ((?x11738 (* ?x11677 l_0_9_82)))
 (let ((?x11674 (* l_0_9_61 l_0_9_61)))
 (let ((?x11737 (- (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) (* l_0_9_46 l_0_9_46)) ?x11674)))
 (= (+ (- ?x11737 ?x11738) ?x11650) 0.0)))))))
(assert
 (let ((?x11677 (* 2.0 l_0_9_76)))
 (let ((?x11754 (* ?x11677 l_0_9_86)))
 (let ((?x11668 (* l_0_9_31 l_0_9_31)))
 (let ((?x11753 (- (+ (* (* (- 2.0) l_0_9_1) l_0_9_11) (* l_0_9_16 l_0_9_16)) ?x11668)))
 (= (- ?x11753 ?x11754) 0.0))))))
(assert
 (let ((?x11584 (* l_0_9_78 l_0_9_78)))
 (let ((?x11582 (* l_0_9_77 l_0_9_77)))
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11783 (* ?x11782 l_0_9_62)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11780 (* ?x11714 l_0_9_47)))
 (let ((?x11777 (* 2.0 l_0_9_31)))
 (let ((?x11778 (* ?x11777 l_0_9_32)))
 (let ((?x11207 (* l_0_9_3 l_0_9_3)))
 (let ((?x11199 (* l_0_9_2 l_0_9_2)))
 (let ((?x11709 (* 2.0 l_0_9_16)))
 (let ((?x11773 (* ?x11709 l_0_9_17)))
 (let ((?x11769 (- (* (* (- 2.0) l_0_9_106) l_0_9_107) (* (* 2.0 l_0_9_121) l_0_9_122))))
 (let ((?x11776 (- (- (- (- ?x11769 (* (* 2.0 l_0_9_136) l_0_9_137)) ?x11773) ?x11199) ?x11207)))
 (let ((?x11789 (- (- (- (+ (- (+ ?x11776 ?x11778) ?x11780) ?x11783) ?x11582) ?x11584) (* (* 2.0 l_0_9_91) l_0_9_92))))
 (= ?x11789 0.0)))))))))))))))))
(assert
 (let ((?x11835 (* 2.0 l_0_9_78)))
 (let ((?x11836 (* ?x11835 l_0_9_80)))
 (let ((?x11832 (* 2.0 l_0_9_77)))
 (let ((?x11833 (* ?x11832 l_0_9_79)))
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11830 (* ?x11782 l_0_9_64)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11825 (* ?x11714 l_0_9_49)))
 (let ((?x11777 (* 2.0 l_0_9_31)))
 (let ((?x11820 (* ?x11777 l_0_9_34)))
 (let ((?x11814 (* 2.0 l_0_9_3)))
 (let ((?x11815 (* ?x11814 l_0_9_5)))
 (let ((?x11811 (* 2.0 l_0_9_2)))
 (let ((?x11812 (* ?x11811 l_0_9_4)))
 (let ((?x11709 (* 2.0 l_0_9_16)))
 (let ((?x11809 (* ?x11709 l_0_9_19)))
 (let ((?x11803 (- (* (* (- 2.0) l_0_9_106) l_0_9_109) (* (* 2.0 l_0_9_121) l_0_9_124))))
 (let ((?x11808 (- (- ?x11803 (* (* 2.0 l_0_9_136) l_0_9_139)) (* (* 4.0 l_0_9_16) l_0_9_17))))
 (let ((?x11819 (+ (- (- (- ?x11808 ?x11809) ?x11812) ?x11815) (* (* 4.0 l_0_9_31) l_0_9_32))))
 (let ((?x11829 (+ (- (- (+ ?x11819 ?x11820) (* (* 4.0 l_0_9_46) l_0_9_47)) ?x11825) (* (* 4.0 l_0_9_61) l_0_9_62))))
 (let ((?x11839 (- (- (- (+ ?x11829 ?x11830) ?x11833) ?x11836) (* (* 2.0 l_0_9_91) l_0_9_94))))
 (= ?x11839 0.0)))))))))))))))))))))))
(assert
 (let ((?x11835 (* 2.0 l_0_9_78)))
 (let ((?x11898 (* ?x11835 l_0_9_83)))
 (let ((?x11832 (* 2.0 l_0_9_77)))
 (let ((?x11896 (* ?x11832 l_0_9_82)))
 (let ((?x11677 (* 2.0 l_0_9_76)))
 (let ((?x11678 (* ?x11677 l_0_9_77)))
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11893 (* ?x11782 l_0_9_67)))
 (let ((?x11783 (* ?x11782 l_0_9_62)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11890 (* ?x11714 l_0_9_52)))
 (let ((?x11780 (* ?x11714 l_0_9_47)))
 (let ((?x11777 (* 2.0 l_0_9_31)))
 (let ((?x11887 (* ?x11777 l_0_9_37)))
 (let ((?x11814 (* 2.0 l_0_9_3)))
 (let ((?x11885 (* ?x11814 l_0_9_8)))
 (let ((?x11811 (* 2.0 l_0_9_2)))
 (let ((?x11883 (* ?x11811 l_0_9_7)))
 (let ((?x11709 (* 2.0 l_0_9_16)))
 (let ((?x11881 (* ?x11709 l_0_9_22)))
 (let ((?x11878 (- (* (* (- 2.0) l_0_9_106) l_0_9_112) (* (* 2.0 l_0_9_121) l_0_9_127))))
 (let ((?x11886 (- (- (- (- ?x11878 (* (* 2.0 l_0_9_136) l_0_9_142)) ?x11881) ?x11883) ?x11885)))
 (let ((?x11897 (- (+ (+ (- (- (+ (+ ?x11886 ?x11887) ?x11780) ?x11890) ?x11783) ?x11893) ?x11678) ?x11896)))
 (= (- (- ?x11897 ?x11898) (* (* 2.0 l_0_9_91) l_0_9_97)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x11835 (* 2.0 l_0_9_78)))
 (let ((?x11969 (* ?x11835 l_0_9_87)))
 (let ((?x11832 (* 2.0 l_0_9_77)))
 (let ((?x11967 (* ?x11832 l_0_9_86)))
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11965 (* ?x11782 l_0_9_71)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11963 (* ?x11714 l_0_9_56)))
 (let ((?x11777 (* 2.0 l_0_9_31)))
 (let ((?x11961 (* ?x11777 l_0_9_41)))
 (let ((?x11778 (* ?x11777 l_0_9_32)))
 (let ((?x11709 (* 2.0 l_0_9_16)))
 (let ((?x11958 (* ?x11709 l_0_9_26)))
 (let ((?x11773 (* ?x11709 l_0_9_17)))
 (let ((?x11950 (* 2.0 l_0_9_12)))
 (let ((?x11951 (* ?x11950 l_0_9_3)))
 (let ((?x11947 (* 2.0 l_0_9_11)))
 (let ((?x11948 (* ?x11947 l_0_9_2)))
 (let ((?x11946 (- (* (* (- 2.0) l_0_9_101) l_0_9_91) (* (* 2.0 l_0_9_106) l_0_9_116))))
 (let ((?x11956 (- (- (- (- ?x11946 ?x11948) ?x11951) (* (* 2.0 l_0_9_121) l_0_9_131)) (* (* 2.0 l_0_9_136) l_0_9_146))))
 (let ((?x11968 (- (+ (- (+ (- (- (+ ?x11956 ?x11773) ?x11958) ?x11778) ?x11961) ?x11963) ?x11965) ?x11967)))
 (= (- ?x11968 ?x11969) 0.0)))))))))))))))))))))))
(assert
 (let ((?x12037 (* l_0_9_81 l_0_9_81)))
 (let ((?x12035 (* l_0_9_80 l_0_9_80)))
 (let ((?x12033 (* l_0_9_79 l_0_9_79)))
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11783 (* ?x11782 l_0_9_62)))
 (let ((?x12028 (* l_0_9_6 l_0_9_6)))
 (let ((?x12026 (* l_0_9_5 l_0_9_5)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11780 (* ?x11714 l_0_9_47)))
 (let ((?x12021 (* l_0_9_4 l_0_9_4)))
 (let ((?x12018 (- (* (* 2.0 l_0_9_1) l_0_9_2) (* (* 4.0 l_0_9_16) l_0_9_19))))
 (let ((?x12025 (- (- (- (+ ?x12018 (* (* 4.0 l_0_9_31) l_0_9_34)) ?x12021) ?x11780) (* (* 4.0 l_0_9_46) l_0_9_49))))
 (let ((?x12032 (+ (+ (- (- ?x12025 ?x12026) ?x12028) ?x11783) (* (* 4.0 l_0_9_61) l_0_9_64))))
 (= (- (- (- ?x12032 ?x12033) ?x12035) ?x12037) 0.0)))))))))))))))
(assert
 (let ((?x12085 (* 2.0 l_0_9_81)))
 (let ((?x12086 (* ?x12085 l_0_9_84)))
 (let ((?x12082 (* 2.0 l_0_9_80)))
 (let ((?x12083 (* ?x12082 l_0_9_83)))
 (let ((?x12079 (* 2.0 l_0_9_79)))
 (let ((?x12080 (* ?x12079 l_0_9_82)))
 (let ((?x11677 (* 2.0 l_0_9_76)))
 (let ((?x11719 (* ?x11677 l_0_9_79)))
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11830 (* ?x11782 l_0_9_64)))
 (let ((?x12073 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x12070 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11825 (* ?x11714 l_0_9_49)))
 (let ((?x12064 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x12062 (+ (* (* (- 4.0) l_0_9_16) l_0_9_22) (* (* 4.0 l_0_9_31) l_0_9_37))))
 (let ((?x12071 (- (- (+ (- ?x12062 ?x12064) ?x11825) (* (* 4.0 l_0_9_46) l_0_9_52)) ?x12070)))
 (let ((?x12078 (+ (+ (- (- ?x12071 ?x12073) ?x11830) (* (* 4.0 l_0_9_61) l_0_9_67)) ?x11719)))
 (= (- (- (- ?x12078 ?x12080) ?x12083) ?x12086) 0.0))))))))))))))))))))
(assert
 (let ((?x12085 (* 2.0 l_0_9_81)))
 (let ((?x12118 (* ?x12085 l_0_9_88)))
 (let ((?x12082 (* 2.0 l_0_9_80)))
 (let ((?x12116 (* ?x12082 l_0_9_87)))
 (let ((?x12079 (* 2.0 l_0_9_79)))
 (let ((?x12114 (* ?x12079 l_0_9_86)))
 (let ((?x11777 (* 2.0 l_0_9_31)))
 (let ((?x11820 (* ?x11777 l_0_9_34)))
 (let ((?x11709 (* 2.0 l_0_9_16)))
 (let ((?x11809 (* ?x11709 l_0_9_19)))
 (let ((?x12101 (* 2.0 l_0_9_13)))
 (let ((?x12102 (* ?x12101 l_0_9_6)))
 (let ((?x11950 (* 2.0 l_0_9_12)))
 (let ((?x12099 (* ?x11950 l_0_9_5)))
 (let ((?x12106 (- (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x12099) ?x12102) ?x11809) (* (* 4.0 l_0_9_16) l_0_9_26))))
 (let ((?x12111 (- (+ (- ?x12106 ?x11820) (* (* 4.0 l_0_9_31) l_0_9_41)) (* (* 4.0 l_0_9_46) l_0_9_56))))
 (let ((?x12119 (- (- (- (+ ?x12111 (* (* 4.0 l_0_9_61) l_0_9_71)) ?x12114) ?x12116) ?x12118)))
 (= ?x12119 0.0)))))))))))))))))))
(assert
 (let ((?x12167 (* l_0_9_9 l_0_9_9)))
 (let ((?x12165 (* l_0_9_85 l_0_9_85)))
 (let ((?x12163 (* l_0_9_84 l_0_9_84)))
 (let ((?x12161 (* l_0_9_83 l_0_9_83)))
 (let ((?x12159 (* l_0_9_82 l_0_9_82)))
 (let ((?x12157 (* l_0_9_8 l_0_9_8)))
 (let ((?x11677 (* 2.0 l_0_9_76)))
 (let ((?x11738 (* ?x11677 l_0_9_82)))
 (let ((?x12154 (* l_0_9_7 l_0_9_7)))
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11893 (* ?x11782 l_0_9_67)))
 (let ((?x12153 (- (+ (* (- l_0_9_10) l_0_9_10) (* (* 2.0 l_0_9_46) l_0_9_52)) ?x11893)))
 (let ((?x12166 (- (- (- (- (- (+ (- ?x12153 ?x12154) ?x11738) ?x12157) ?x12159) ?x12161) ?x12163) ?x12165)))
 (= (- ?x12166 ?x12167) 0.0)))))))))))))))
(assert
 (let ((?x12207 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x12204 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x12201 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x12198 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x11677 (* 2.0 l_0_9_76)))
 (let ((?x11754 (* ?x11677 l_0_9_86)))
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11965 (* ?x11782 l_0_9_71)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11963 (* ?x11714 l_0_9_56)))
 (let ((?x11777 (* 2.0 l_0_9_31)))
 (let ((?x11887 (* ?x11777 l_0_9_37)))
 (let ((?x11709 (* 2.0 l_0_9_16)))
 (let ((?x11881 (* ?x11709 l_0_9_22)))
 (let ((?x12101 (* 2.0 l_0_9_13)))
 (let ((?x12190 (* ?x12101 l_0_9_9)))
 (let ((?x11950 (* 2.0 l_0_9_12)))
 (let ((?x12188 (* ?x11950 l_0_9_8)))
 (let ((?x11947 (* 2.0 l_0_9_11)))
 (let ((?x12186 (* ?x11947 l_0_9_7)))
 (let ((?x12192 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x12186) ?x12188) ?x12190) ?x11881)))
 (let ((?x12205 (- (- (- (+ (- (+ (- ?x12192 ?x11887) ?x11963) ?x11965) ?x11754) ?x12198) ?x12201) ?x12204)))
 (= (- ?x12205 ?x12207) 0.0))))))))))))))))))))))))
(assert
 (let ((?x12256 (* l_0_9_90 l_0_9_90)))
 (let ((?x12254 (* l_0_9_89 l_0_9_89)))
 (let ((?x12252 (* l_0_9_88 l_0_9_88)))
 (let ((?x12250 (* l_0_9_87 l_0_9_87)))
 (let ((?x12248 (* l_0_9_86 l_0_9_86)))
 (let ((?x11777 (* 2.0 l_0_9_31)))
 (let ((?x11961 (* ?x11777 l_0_9_41)))
 (let ((?x11709 (* 2.0 l_0_9_16)))
 (let ((?x11958 (* ?x11709 l_0_9_26)))
 (let ((?x12244 (* l_0_9_15 l_0_9_15)))
 (let ((?x12242 (* l_0_9_14 l_0_9_14)))
 (let ((?x12240 (* l_0_9_13 l_0_9_13)))
 (let ((?x12243 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x12240) ?x12242)))
 (let ((?x12255 (- (- (- (- (- (+ (- ?x12243 ?x12244) ?x11958) ?x11961) ?x12248) ?x12250) ?x12252) ?x12254)))
 (= (- ?x12255 ?x12256) 0.0))))))))))))))))
(assert
 (let ((?x11674 (* l_0_9_61 l_0_9_61)))
 (= (+ (- (* l_0_9_1 l_0_9_1) (* l_0_9_46 l_0_9_46)) ?x11674) 0.0)))
(assert
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11830 (* ?x11782 l_0_9_64)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11825 (* ?x11714 l_0_9_49)))
 (= (+ (- (* (* 2.0 l_0_9_1) l_0_9_4) ?x11825) ?x11830) 0.0))))))
(assert
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11893 (* ?x11782 l_0_9_67)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11890 (* ?x11714 l_0_9_52)))
 (= (+ (- (* (* 2.0 l_0_9_1) l_0_9_7) ?x11890) ?x11893) 0.0))))))
(assert
 (let ((?x11782 (* 2.0 l_0_9_61)))
 (let ((?x11965 (* ?x11782 l_0_9_71)))
 (let ((?x11714 (* 2.0 l_0_9_46)))
 (let ((?x11963 (* ?x11714 l_0_9_56)))
 (= (+ (- (* (* 2.0 l_0_9_1) l_0_9_11) ?x11963) ?x11965) 0.0))))))
(assert
 (let ((?x11400 (* 2.0 l_0_9_63)))
 (let ((?x11401 (* ?x11400 l_0_9_65)))
 (let ((?x11395 (* 2.0 l_0_9_62)))
 (let ((?x11396 (* ?x11395 l_0_9_64)))
 (let ((?x11390 (* 2.0 l_0_9_48)))
 (let ((?x11391 (* ?x11390 l_0_9_50)))
 (let ((?x11385 (* 2.0 l_0_9_47)))
 (let ((?x11386 (* ?x11385 l_0_9_49)))
 (let ((?x11814 (* 2.0 l_0_9_3)))
 (let ((?x11815 (* ?x11814 l_0_9_5)))
 (let ((?x11811 (* 2.0 l_0_9_2)))
 (let ((?x11812 (* ?x11811 l_0_9_4)))
 (let ((?x12309 (- (+ (* (* (- 2.0) l_0_9_19) l_0_9_19) ?x11812) (* (* 2.0 l_0_9_20) l_0_9_20))))
 (let ((?x12315 (+ (+ (- ?x12309 (* (* 2.0 l_0_9_21) l_0_9_21)) ?x11815) (* 2.0 (* l_0_9_34 l_0_9_34)))))
 (let ((?x12319 (+ (+ ?x12315 (* 2.0 (* l_0_9_35 l_0_9_35))) (* 2.0 (* l_0_9_36 l_0_9_36)))))
 (let ((?x12327 (- (- (- (- ?x12319 ?x11386) ?x11391) (* (* 2.0 l_0_9_49) l_0_9_49)) (* (* 2.0 l_0_9_50) l_0_9_50))))
 (let ((?x12334 (+ (+ (+ (- ?x12327 (* (* 2.0 l_0_9_51) l_0_9_51)) ?x11396) ?x11401) (* 2.0 (* l_0_9_64 l_0_9_64)))))
 (let ((?x12338 (+ (+ ?x12334 (* 2.0 (* l_0_9_65 l_0_9_65))) (* 2.0 (* l_0_9_66 l_0_9_66)))))
 (= ?x12338 0.0))))))))))))))))))))
(assert
 (let ((?x12037 (* l_0_9_81 l_0_9_81)))
 (let ((?x12035 (* l_0_9_80 l_0_9_80)))
 (let ((?x12033 (* l_0_9_79 l_0_9_79)))
 (let ((?x11259 (* l_0_9_66 l_0_9_66)))
 (let ((?x11256 (* l_0_9_65 l_0_9_65)))
 (let ((?x11253 (* l_0_9_64 l_0_9_64)))
 (let ((?x11400 (* 2.0 l_0_9_63)))
 (let ((?x11579 (* ?x11400 l_0_9_68)))
 (let ((?x11395 (* 2.0 l_0_9_62)))
 (let ((?x11576 (* ?x11395 l_0_9_67)))
 (let ((?x11318 (* l_0_9_51 l_0_9_51)))
 (let ((?x8135 (* l_0_9_50 l_0_9_50)))
 (let ((?x3665 (* l_0_9_49 l_0_9_49)))
 (let ((?x11390 (* 2.0 l_0_9_48)))
 (let ((?x11573 (* ?x11390 l_0_9_53)))
 (let ((?x11385 (* 2.0 l_0_9_47)))
 (let ((?x11570 (* ?x11385 l_0_9_52)))
 (let ((?x11814 (* 2.0 l_0_9_3)))
 (let ((?x11885 (* ?x11814 l_0_9_8)))
 (let ((?x11811 (* 2.0 l_0_9_2)))
 (let ((?x11883 (* ?x11811 l_0_9_7)))
 (let ((?x12358 (- (+ (* (* (- 4.0) l_0_9_19) l_0_9_22) ?x11883) (* (* 4.0 l_0_9_20) l_0_9_23))))
 (let ((?x12365 (+ (+ (- ?x12358 (* (* 4.0 l_0_9_21) l_0_9_24)) ?x11885) (* (* 4.0 l_0_9_34) l_0_9_37))))
 (let ((?x12371 (+ (+ ?x12365 (* (* 4.0 l_0_9_35) l_0_9_38)) (* (* 4.0 l_0_9_36) l_0_9_39))))
 (let ((?x12377 (+ (- (- (- ?x12371 ?x11570) ?x11573) (* (* 4.0 l_0_9_49) l_0_9_52)) ?x3665)))
 (let ((?x12384 (- (+ (- ?x12377 (* (* 4.0 l_0_9_50) l_0_9_53)) ?x8135) (* (* 4.0 l_0_9_51) l_0_9_54))))
 (let ((?x12390 (+ (+ (+ (+ ?x12384 ?x11318) ?x11576) ?x11579) (* (* 4.0 l_0_9_64) l_0_9_67))))
 (let ((?x12398 (+ (- (+ (- ?x12390 ?x11253) (* (* 4.0 l_0_9_65) l_0_9_68)) ?x11256) (* (* 4.0 l_0_9_66) l_0_9_69))))
 (= (+ (+ (+ (- ?x12398 ?x11259) ?x12033) ?x12035) ?x12037) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x11400 (* 2.0 l_0_9_63)))
 (let ((?x11538 (* ?x11400 l_0_9_72)))
 (let ((?x11395 (* 2.0 l_0_9_62)))
 (let ((?x11536 (* ?x11395 l_0_9_71)))
 (let ((?x11390 (* 2.0 l_0_9_48)))
 (let ((?x11534 (* ?x11390 l_0_9_57)))
 (let ((?x11385 (* 2.0 l_0_9_47)))
 (let ((?x11532 (* ?x11385 l_0_9_56)))
 (let ((?x11221 (* l_0_9_36 l_0_9_36)))
 (let ((?x11218 (* l_0_9_35 l_0_9_35)))
 (let ((?x11215 (* l_0_9_34 l_0_9_34)))
 (let ((?x11296 (* l_0_9_21 l_0_9_21)))
 (let ((?x8034 (* l_0_9_20 l_0_9_20)))
 (let ((?x8032 (* l_0_9_19 l_0_9_19)))
 (let ((?x11950 (* 2.0 l_0_9_12)))
 (let ((?x11951 (* ?x11950 l_0_9_3)))
 (let ((?x11947 (* 2.0 l_0_9_11)))
 (let ((?x11948 (* ?x11947 l_0_9_2)))
 (let ((?x12437 (- (+ (- (+ ?x11948 ?x11951) (* (* 4.0 l_0_9_19) l_0_9_26)) ?x8032) (* (* 4.0 l_0_9_20) l_0_9_27))))
 (let ((?x12443 (+ (+ (- (+ ?x12437 ?x8034) (* (* 4.0 l_0_9_21) l_0_9_28)) ?x11296) (* (* 4.0 l_0_9_34) l_0_9_41))))
 (let ((?x12449 (+ (- (+ (- ?x12443 ?x11215) (* (* 4.0 l_0_9_35) l_0_9_42)) ?x11218) (* (* 4.0 l_0_9_36) l_0_9_43))))
 (let ((?x12454 (- (- (- (- ?x12449 ?x11221) ?x11532) ?x11534) (* (* 4.0 l_0_9_49) l_0_9_56))))
 (let ((?x12458 (- (- ?x12454 (* (* 4.0 l_0_9_50) l_0_9_57)) (* (* 4.0 l_0_9_51) l_0_9_58))))
 (let ((?x12464 (+ (+ (+ (+ ?x12458 ?x11536) ?x11538) (* (* 4.0 l_0_9_64) l_0_9_71)) (* (* 4.0 l_0_9_65) l_0_9_72))))
 (= (+ ?x12464 (* (* 4.0 l_0_9_66) l_0_9_73)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x11259 (* l_0_9_66 l_0_9_66)))
 (let ((?x11256 (* l_0_9_65 l_0_9_65)))
 (let ((?x11253 (* l_0_9_64 l_0_9_64)))
 (let ((?x12028 (* l_0_9_6 l_0_9_6)))
 (let ((?x11318 (* l_0_9_51 l_0_9_51)))
 (let ((?x8135 (* l_0_9_50 l_0_9_50)))
 (let ((?x12026 (* l_0_9_5 l_0_9_5)))
 (let ((?x9216 (- (+ (- (* l_0_9_4 l_0_9_4) (* l_0_9_49 l_0_9_49)) ?x12026) ?x8135)))
 (= (+ (+ (+ (+ (- ?x9216 ?x11318) ?x12028) ?x11253) ?x11256) ?x11259) 0.0))))))))))
(assert
 (let ((?x12494 (* 2.0 l_0_9_66)))
 (let ((?x12495 (* ?x12494 l_0_9_69)))
 (let ((?x12491 (* 2.0 l_0_9_65)))
 (let ((?x12492 (* ?x12491 l_0_9_68)))
 (let ((?x9217 (* 2.0 l_0_9_64)))
 (let ((?x12489 (* ?x9217 l_0_9_67)))
 (let ((?x12073 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x12328 (* 2.0 l_0_9_51)))
 (let ((?x4702 (* ?x12328 l_0_9_54)))
 (let ((?x12325 (* 2.0 l_0_9_50)))
 (let ((?x9215 (* ?x12325 l_0_9_53)))
 (let ((?x12070 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x12322 (* 2.0 l_0_9_49)))
 (let ((?x5525 (* ?x12322 l_0_9_52)))
 (let ((?x12064 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x12493 (+ (+ (+ (- (- (+ (- ?x12064 ?x5525) ?x12070) ?x9215) ?x4702) ?x12073) ?x12489) ?x12492)))
 (= (+ ?x12493 ?x12495) 0.0))))))))))))))))))
(assert
 (let ((?x12494 (* 2.0 l_0_9_66)))
 (let ((?x12514 (* ?x12494 l_0_9_73)))
 (let ((?x12491 (* 2.0 l_0_9_65)))
 (let ((?x12512 (* ?x12491 l_0_9_72)))
 (let ((?x9217 (* 2.0 l_0_9_64)))
 (let ((?x12510 (* ?x9217 l_0_9_71)))
 (let ((?x12328 (* 2.0 l_0_9_51)))
 (let ((?x12508 (* ?x12328 l_0_9_58)))
 (let ((?x12325 (* 2.0 l_0_9_50)))
 (let ((?x12506 (* ?x12325 l_0_9_57)))
 (let ((?x12322 (* 2.0 l_0_9_49)))
 (let ((?x9247 (* ?x12322 l_0_9_56)))
 (let ((?x12101 (* 2.0 l_0_9_13)))
 (let ((?x12102 (* ?x12101 l_0_9_6)))
 (let ((?x11950 (* 2.0 l_0_9_12)))
 (let ((?x12099 (* ?x11950 l_0_9_5)))
 (let ((?x12507 (- (- (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x12099) ?x12102) ?x9247) ?x12506)))
 (= (+ (+ (+ (- ?x12507 ?x12508) ?x12510) ?x12512) ?x12514) 0.0)))))))))))))))))))
(assert
 (let ((?x12167 (* l_0_9_9 l_0_9_9)))
 (let ((?x12157 (* l_0_9_8 l_0_9_8)))
 (let ((?x12548 (* l_0_9_70 l_0_9_70)))
 (let ((?x12154 (* l_0_9_7 l_0_9_7)))
 (let ((?x12545 (* l_0_9_69 l_0_9_69)))
 (let ((?x12543 (* l_0_9_68 l_0_9_68)))
 (let ((?x12541 (* l_0_9_67 l_0_9_67)))
 (let ((?x12539 (* l_0_9_55 l_0_9_55)))
 (let ((?x12537 (* l_0_9_54 l_0_9_54)))
 (let ((?x12535 (* l_0_9_53 l_0_9_53)))
 (let ((?x12538 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_52 l_0_9_52)) ?x12535) ?x12537)))
 (let ((?x12550 (+ (+ (+ (+ (+ (+ (- ?x12538 ?x12539) ?x12541) ?x12543) ?x12545) ?x12154) ?x12548) ?x12157)))
 (= (+ ?x12550 ?x12167) 0.0))))))))))))))
(assert
 (let ((?x12586 (* (* 2.0 l_0_9_70) l_0_9_74)))
 (let ((?x12583 (* (* 2.0 l_0_9_69) l_0_9_73)))
 (let ((?x12580 (* (* 2.0 l_0_9_68) l_0_9_72)))
 (let ((?x12577 (* (* 2.0 l_0_9_67) l_0_9_71)))
 (let ((?x12573 (* 2.0 l_0_9_55)))
 (let ((?x12574 (* ?x12573 l_0_9_59)))
 (let ((?x12570 (* 2.0 l_0_9_54)))
 (let ((?x12571 (* ?x12570 l_0_9_58)))
 (let ((?x12567 (* 2.0 l_0_9_53)))
 (let ((?x12568 (* ?x12567 l_0_9_57)))
 (let ((?x12564 (* 2.0 l_0_9_52)))
 (let ((?x12565 (* ?x12564 l_0_9_56)))
 (let ((?x12101 (* 2.0 l_0_9_13)))
 (let ((?x12190 (* ?x12101 l_0_9_9)))
 (let ((?x11950 (* 2.0 l_0_9_12)))
 (let ((?x12188 (* ?x11950 l_0_9_8)))
 (let ((?x11947 (* 2.0 l_0_9_11)))
 (let ((?x12186 (* ?x11947 l_0_9_7)))
 (let ((?x12566 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_14) ?x12186) ?x12188) ?x12190) ?x12565)))
 (let ((?x12587 (+ (+ (+ (+ (- (- (- ?x12566 ?x12568) ?x12571) ?x12574) ?x12577) ?x12580) ?x12583) ?x12586)))
 (= ?x12587 0.0))))))))))))))))))))))
(assert
 (let ((?x12625 (* l_0_9_75 l_0_9_75)))
 (let ((?x12623 (* l_0_9_74 l_0_9_74)))
 (let ((?x12621 (* l_0_9_73 l_0_9_73)))
 (let ((?x12619 (* l_0_9_72 l_0_9_72)))
 (let ((?x12617 (* l_0_9_71 l_0_9_71)))
 (let ((?x12615 (* l_0_9_60 l_0_9_60)))
 (let ((?x12613 (* l_0_9_59 l_0_9_59)))
 (let ((?x12611 (* l_0_9_58 l_0_9_58)))
 (let ((?x12609 (* l_0_9_57 l_0_9_57)))
 (let ((?x12601 (* l_0_9_56 l_0_9_56)))
 (let ((?x12244 (* l_0_9_15 l_0_9_15)))
 (let ((?x12242 (* l_0_9_14 l_0_9_14)))
 (let ((?x12240 (* l_0_9_13 l_0_9_13)))
 (let ((?x12598 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x12240) ?x12242)))
 (let ((?x12618 (+ (- (- (- (- (- (+ ?x12598 ?x12244) ?x12601) ?x12609) ?x12611) ?x12613) ?x12615) ?x12617)))
 (= (+ (+ (+ (+ ?x12618 ?x12619) ?x12621) ?x12623) ?x12625) 0.0)))))))))))))))))
(assert
 (let ((?x11835 (* 2.0 l_0_9_78)))
 (let ((?x11836 (* ?x11835 l_0_9_80)))
 (let ((?x11832 (* 2.0 l_0_9_77)))
 (let ((?x11833 (* ?x11832 l_0_9_79)))
 (let ((?x12494 (* 2.0 l_0_9_66)))
 (let ((?x12495 (* ?x12494 l_0_9_69)))
 (let ((?x12491 (* 2.0 l_0_9_65)))
 (let ((?x12492 (* ?x12491 l_0_9_68)))
 (let ((?x9217 (* 2.0 l_0_9_64)))
 (let ((?x12489 (* ?x9217 l_0_9_67)))
 (let ((?x11400 (* 2.0 l_0_9_63)))
 (let ((?x11401 (* ?x11400 l_0_9_65)))
 (let ((?x11395 (* 2.0 l_0_9_62)))
 (let ((?x11396 (* ?x11395 l_0_9_64)))
 (let ((?x12328 (* 2.0 l_0_9_51)))
 (let ((?x4702 (* ?x12328 l_0_9_54)))
 (let ((?x12325 (* 2.0 l_0_9_50)))
 (let ((?x9215 (* ?x12325 l_0_9_53)))
 (let ((?x12322 (* 2.0 l_0_9_49)))
 (let ((?x5525 (* ?x12322 l_0_9_52)))
 (let ((?x11390 (* 2.0 l_0_9_48)))
 (let ((?x11391 (* ?x11390 l_0_9_50)))
 (let ((?x11385 (* 2.0 l_0_9_47)))
 (let ((?x11386 (* ?x11385 l_0_9_49)))
 (let ((?x12677 (* 2.0 l_0_9_36)))
 (let ((?x12678 (* ?x12677 l_0_9_39)))
 (let ((?x12674 (* 2.0 l_0_9_35)))
 (let ((?x12675 (* ?x12674 l_0_9_38)))
 (let ((?x12671 (* 2.0 l_0_9_34)))
 (let ((?x12672 (* ?x12671 l_0_9_37)))
 (let ((?x12310 (* 2.0 l_0_9_21)))
 (let ((?x12665 (* ?x12310 l_0_9_24)))
 (let ((?x12307 (* 2.0 l_0_9_20)))
 (let ((?x12663 (* ?x12307 l_0_9_23)))
 (let ((?x12660 (* 2.0 l_0_9_19)))
 (let ((?x12661 (* ?x12660 l_0_9_22)))
 (let ((?x12634 (- (* (* (- 2.0) l_0_9_109) l_0_9_112) (* (* 2.0 l_0_9_110) l_0_9_113))))
 (let ((?x12640 (- (- ?x12634 (* (* 2.0 l_0_9_111) l_0_9_114)) (* (* 2.0 l_0_9_124) l_0_9_127))))
 (let ((?x12646 (- (- ?x12640 (* (* 2.0 l_0_9_125) l_0_9_128)) (* (* 2.0 l_0_9_126) l_0_9_129))))
 (let ((?x12652 (- (- ?x12646 (* (* 2.0 l_0_9_139) l_0_9_142)) (* (* 2.0 l_0_9_140) l_0_9_143))))
 (let ((?x12657 (- (- ?x12652 (* (* 2.0 l_0_9_141) l_0_9_144)) (* (* 4.0 l_0_9_17) l_0_9_22))))
 (let ((?x12666 (- (- (- (- ?x12657 (* (* 4.0 l_0_9_18) l_0_9_23)) ?x12661) ?x12663) ?x12665)))
 (let ((?x12670 (+ (+ ?x12666 (* (* 4.0 l_0_9_32) l_0_9_37)) (* (* 4.0 l_0_9_33) l_0_9_38))))
 (let ((?x12682 (- (+ (+ (+ (+ ?x12670 ?x12672) ?x12675) ?x12678) ?x11386) (* (* 4.0 l_0_9_47) l_0_9_52))))
 (let ((?x12687 (- (- (- (+ ?x12682 ?x11391) (* (* 4.0 l_0_9_48) l_0_9_53)) ?x5525) ?x9215)))
 (let ((?x12692 (- (+ (- (- ?x12687 ?x4702) ?x11396) (* (* 4.0 l_0_9_62) l_0_9_67)) ?x11401)))
 (let ((?x12697 (+ (+ (+ (+ ?x12692 (* (* 4.0 l_0_9_63) l_0_9_68)) ?x12489) ?x12492) ?x12495)))
 (let ((?x12705 (- (- (+ (+ ?x12697 ?x11833) ?x11836) (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x12705 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12494 (* 2.0 l_0_9_66)))
 (let ((?x12514 (* ?x12494 l_0_9_73)))
 (let ((?x12491 (* 2.0 l_0_9_65)))
 (let ((?x12512 (* ?x12491 l_0_9_72)))
 (let ((?x9217 (* 2.0 l_0_9_64)))
 (let ((?x12510 (* ?x9217 l_0_9_71)))
 (let ((?x12328 (* 2.0 l_0_9_51)))
 (let ((?x12508 (* ?x12328 l_0_9_58)))
 (let ((?x12325 (* 2.0 l_0_9_50)))
 (let ((?x12506 (* ?x12325 l_0_9_57)))
 (let ((?x12322 (* 2.0 l_0_9_49)))
 (let ((?x9247 (* ?x12322 l_0_9_56)))
 (let ((?x12677 (* 2.0 l_0_9_36)))
 (let ((?x12809 (* ?x12677 l_0_9_43)))
 (let ((?x12674 (* 2.0 l_0_9_35)))
 (let ((?x12807 (* ?x12674 l_0_9_42)))
 (let ((?x12671 (* 2.0 l_0_9_34)))
 (let ((?x12805 (* ?x12671 l_0_9_41)))
 (let ((?x11379 (* 2.0 l_0_9_33)))
 (let ((?x11380 (* ?x11379 l_0_9_35)))
 (let ((?x11373 (* 2.0 l_0_9_32)))
 (let ((?x11374 (* ?x11373 l_0_9_34)))
 (let ((?x12310 (* 2.0 l_0_9_21)))
 (let ((?x12797 (* ?x12310 l_0_9_28)))
 (let ((?x12307 (* 2.0 l_0_9_20)))
 (let ((?x12795 (* ?x12307 l_0_9_27)))
 (let ((?x12660 (* 2.0 l_0_9_19)))
 (let ((?x12793 (* ?x12660 l_0_9_26)))
 (let ((?x11368 (* 2.0 l_0_9_18)))
 (let ((?x11369 (* ?x11368 l_0_9_20)))
 (let ((?x11363 (* 2.0 l_0_9_17)))
 (let ((?x11364 (* ?x11363 l_0_9_19)))
 (let ((?x12764 (- (* (* (- 2.0) l_0_9_101) l_0_9_94) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x12770 (- (- ?x12764 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_109) l_0_9_116))))
 (let ((?x12774 (- (- ?x12770 (* (* 2.0 l_0_9_110) l_0_9_117)) (* (* 2.0 l_0_9_111) l_0_9_118))))
 (let ((?x12778 (- (- ?x12774 (* (* 2.0 l_0_9_124) l_0_9_131)) (* (* 2.0 l_0_9_125) l_0_9_132))))
 (let ((?x12782 (- (- ?x12778 (* (* 2.0 l_0_9_126) l_0_9_133)) (* (* 2.0 l_0_9_139) l_0_9_146))))
 (let ((?x12786 (- (- ?x12782 (* (* 2.0 l_0_9_140) l_0_9_147)) (* (* 2.0 l_0_9_141) l_0_9_148))))
 (let ((?x12792 (- (+ (- (+ ?x12786 ?x11364) (* (* 4.0 l_0_9_17) l_0_9_26)) ?x11369) (* (* 4.0 l_0_9_18) l_0_9_27))))
 (let ((?x12801 (+ (- (- (- (- ?x12792 ?x12793) ?x12795) ?x12797) ?x11374) (* (* 4.0 l_0_9_32) l_0_9_41))))
 (let ((?x12808 (+ (+ (+ (- ?x12801 ?x11380) (* (* 4.0 l_0_9_33) l_0_9_42)) ?x12805) ?x12807)))
 (let ((?x12814 (- (- (+ ?x12808 ?x12809) (* (* 4.0 l_0_9_47) l_0_9_56)) (* (* 4.0 l_0_9_48) l_0_9_57))))
 (let ((?x12819 (+ (- (- (- ?x12814 ?x9247) ?x12506) ?x12508) (* (* 4.0 l_0_9_62) l_0_9_71))))
 (let ((?x12824 (+ (+ (+ (+ ?x12819 (* (* 4.0 l_0_9_63) l_0_9_72)) ?x12510) ?x12512) ?x12514)))
 (= ?x12824 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12085 (* 2.0 l_0_9_81)))
 (let ((?x12086 (* ?x12085 l_0_9_84)))
 (let ((?x12082 (* 2.0 l_0_9_80)))
 (let ((?x12083 (* ?x12082 l_0_9_83)))
 (let ((?x12079 (* 2.0 l_0_9_79)))
 (let ((?x12080 (* ?x12079 l_0_9_82)))
 (let ((?x12548 (* l_0_9_70 l_0_9_70)))
 (let ((?x12912 (* 2.0 ?x12548)))
 (let ((?x12545 (* l_0_9_69 l_0_9_69)))
 (let ((?x12910 (* 2.0 ?x12545)))
 (let ((?x12543 (* l_0_9_68 l_0_9_68)))
 (let ((?x12908 (* 2.0 ?x12543)))
 (let ((?x12541 (* l_0_9_67 l_0_9_67)))
 (let ((?x12906 (* 2.0 ?x12541)))
 (let ((?x12494 (* 2.0 l_0_9_66)))
 (let ((?x12495 (* ?x12494 l_0_9_69)))
 (let ((?x12491 (* 2.0 l_0_9_65)))
 (let ((?x12492 (* ?x12491 l_0_9_68)))
 (let ((?x9217 (* 2.0 l_0_9_64)))
 (let ((?x12489 (* ?x9217 l_0_9_67)))
 (let ((?x12328 (* 2.0 l_0_9_51)))
 (let ((?x4702 (* ?x12328 l_0_9_54)))
 (let ((?x12325 (* 2.0 l_0_9_50)))
 (let ((?x9215 (* ?x12325 l_0_9_53)))
 (let ((?x12322 (* 2.0 l_0_9_49)))
 (let ((?x5525 (* ?x12322 l_0_9_52)))
 (let ((?x12889 (* l_0_9_40 l_0_9_40)))
 (let ((?x12890 (* 2.0 ?x12889)))
 (let ((?x12886 (* l_0_9_39 l_0_9_39)))
 (let ((?x12887 (* 2.0 ?x12886)))
 (let ((?x12883 (* l_0_9_38 l_0_9_38)))
 (let ((?x12884 (* 2.0 ?x12883)))
 (let ((?x12880 (* l_0_9_37 l_0_9_37)))
 (let ((?x12881 (* 2.0 ?x12880)))
 (let ((?x12873 (- (* (* (- 2.0) l_0_9_22) l_0_9_22) (* (* 2.0 l_0_9_23) l_0_9_23))))
 (let ((?x12879 (- (- ?x12873 (* (* 2.0 l_0_9_24) l_0_9_24)) (* (* 2.0 l_0_9_25) l_0_9_25))))
 (let ((?x12894 (+ (+ (+ (+ (+ (+ (+ ?x12879 ?x12881) ?x12884) ?x12887) ?x12890) ?x5525) ?x9215) ?x4702)))
 (let ((?x12898 (- (- ?x12894 (* (* 2.0 l_0_9_52) l_0_9_52)) (* (* 2.0 l_0_9_53) l_0_9_53))))
 (let ((?x12902 (- (- ?x12898 (* (* 2.0 l_0_9_54) l_0_9_54)) (* (* 2.0 l_0_9_55) l_0_9_55))))
 (let ((?x12913 (+ (+ (+ (+ (- (- (- ?x12902 ?x12489) ?x12492) ?x12495) ?x12906) ?x12908) ?x12910) ?x12912)))
 (= (+ (+ (+ ?x12913 ?x12080) ?x12083) ?x12086) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12085 (* 2.0 l_0_9_81)))
 (let ((?x12118 (* ?x12085 l_0_9_88)))
 (let ((?x12082 (* 2.0 l_0_9_80)))
 (let ((?x12116 (* ?x12082 l_0_9_87)))
 (let ((?x12079 (* 2.0 l_0_9_79)))
 (let ((?x12114 (* ?x12079 l_0_9_86)))
 (let ((?x12494 (* 2.0 l_0_9_66)))
 (let ((?x12514 (* ?x12494 l_0_9_73)))
 (let ((?x12491 (* 2.0 l_0_9_65)))
 (let ((?x12512 (* ?x12491 l_0_9_72)))
 (let ((?x9217 (* 2.0 l_0_9_64)))
 (let ((?x12510 (* ?x9217 l_0_9_71)))
 (let ((?x12328 (* 2.0 l_0_9_51)))
 (let ((?x12508 (* ?x12328 l_0_9_58)))
 (let ((?x12325 (* 2.0 l_0_9_50)))
 (let ((?x12506 (* ?x12325 l_0_9_57)))
 (let ((?x12322 (* 2.0 l_0_9_49)))
 (let ((?x9247 (* ?x12322 l_0_9_56)))
 (let ((?x12677 (* 2.0 l_0_9_36)))
 (let ((?x12678 (* ?x12677 l_0_9_39)))
 (let ((?x12674 (* 2.0 l_0_9_35)))
 (let ((?x12675 (* ?x12674 l_0_9_38)))
 (let ((?x12671 (* 2.0 l_0_9_34)))
 (let ((?x12672 (* ?x12671 l_0_9_37)))
 (let ((?x12310 (* 2.0 l_0_9_21)))
 (let ((?x12665 (* ?x12310 l_0_9_24)))
 (let ((?x12307 (* 2.0 l_0_9_20)))
 (let ((?x12663 (* ?x12307 l_0_9_23)))
 (let ((?x12660 (* 2.0 l_0_9_19)))
 (let ((?x12661 (* ?x12660 l_0_9_22)))
 (let ((?x12945 (- (- (+ (+ ?x12661 ?x12663) ?x12665) (* (* 4.0 l_0_9_22) l_0_9_26)) (* (* 4.0 l_0_9_23) l_0_9_27))))
 (let ((?x12951 (- (- ?x12945 (* (* 4.0 l_0_9_24) l_0_9_28)) (* (* 4.0 l_0_9_25) l_0_9_29))))
 (let ((?x12957 (+ (- (- (- ?x12951 ?x12672) ?x12675) ?x12678) (* (* 4.0 l_0_9_37) l_0_9_41))))
 (let ((?x12963 (+ (+ ?x12957 (* (* 4.0 l_0_9_38) l_0_9_42)) (* (* 4.0 l_0_9_39) l_0_9_43))))
 (let ((?x12969 (+ (+ (+ (+ ?x12963 (* (* 4.0 l_0_9_40) l_0_9_44)) ?x9247) ?x12506) ?x12508)))
 (let ((?x12975 (- (- ?x12969 (* (* 4.0 l_0_9_52) l_0_9_56)) (* (* 4.0 l_0_9_53) l_0_9_57))))
 (let ((?x12981 (- (- ?x12975 (* (* 4.0 l_0_9_54) l_0_9_58)) (* (* 4.0 l_0_9_55) l_0_9_59))))
 (let ((?x12987 (+ (- (- (- ?x12981 ?x12510) ?x12512) ?x12514) (* (* 4.0 l_0_9_67) l_0_9_71))))
 (let ((?x12993 (+ (+ ?x12987 (* (* 4.0 l_0_9_68) l_0_9_72)) (* (* 4.0 l_0_9_69) l_0_9_73))))
 (let ((?x12999 (+ (+ (+ (+ ?x12993 (* (* 4.0 l_0_9_70) l_0_9_74)) ?x12114) ?x12116) ?x12118)))
 (= ?x12999 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12677 (* 2.0 l_0_9_36)))
 (let ((?x12809 (* ?x12677 l_0_9_43)))
 (let ((?x12674 (* 2.0 l_0_9_35)))
 (let ((?x12807 (* ?x12674 l_0_9_42)))
 (let ((?x12671 (* 2.0 l_0_9_34)))
 (let ((?x12805 (* ?x12671 l_0_9_41)))
 (let ((?x12310 (* 2.0 l_0_9_21)))
 (let ((?x12797 (* ?x12310 l_0_9_28)))
 (let ((?x12307 (* 2.0 l_0_9_20)))
 (let ((?x12795 (* ?x12307 l_0_9_27)))
 (let ((?x12660 (* 2.0 l_0_9_19)))
 (let ((?x12793 (* ?x12660 l_0_9_26)))
 (let ((?x13028 (- (- (+ (+ ?x12793 ?x12795) ?x12797) (* (* 2.0 l_0_9_26) l_0_9_26)) (* (* 2.0 l_0_9_27) l_0_9_27))))
 (let ((?x13034 (- (- ?x13028 (* (* 2.0 l_0_9_28) l_0_9_28)) (* (* 2.0 l_0_9_29) l_0_9_29))))
 (let ((?x13040 (- (- (- (- ?x13034 (* (* 2.0 l_0_9_30) l_0_9_30)) ?x12805) ?x12807) ?x12809)))
 (let ((?x13046 (+ (+ ?x13040 (* 2.0 (* l_0_9_41 l_0_9_41))) (* 2.0 (* l_0_9_42 l_0_9_42)))))
 (let ((?x13052 (+ (+ ?x13046 (* 2.0 (* l_0_9_43 l_0_9_43))) (* 2.0 (* l_0_9_44 l_0_9_44)))))
 (let ((?x13058 (- (+ ?x13052 (* 2.0 (* l_0_9_45 l_0_9_45))) (* (* 2.0 l_0_9_56) l_0_9_56))))
 (let ((?x13064 (- (- ?x13058 (* (* 2.0 l_0_9_57) l_0_9_57)) (* (* 2.0 l_0_9_58) l_0_9_58))))
 (let ((?x13070 (- (- ?x13064 (* (* 2.0 l_0_9_59) l_0_9_59)) (* (* 2.0 l_0_9_60) l_0_9_60))))
 (let ((?x13074 (+ (+ ?x13070 (* 2.0 (* l_0_9_71 l_0_9_71))) (* 2.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x13078 (+ (+ ?x13074 (* 2.0 (* l_0_9_73 l_0_9_73))) (* 2.0 (* l_0_9_74 l_0_9_74)))))
 (= (+ ?x13078 (* 2.0 (* l_0_9_75 l_0_9_75))) 0.0))))))))))))))))))))))))
(assert
 (let ((?x13143 (* l_0_9_99 l_0_9_99)))
 (let ((?x13141 (* l_0_9_98 l_0_9_98)))
 (let ((?x13139 (* l_0_9_97 l_0_9_97)))
 (let ((?x11835 (* 2.0 l_0_9_78)))
 (let ((?x11898 (* ?x11835 l_0_9_83)))
 (let ((?x11832 (* 2.0 l_0_9_77)))
 (let ((?x11896 (* ?x11832 l_0_9_82)))
 (let ((?x11400 (* 2.0 l_0_9_63)))
 (let ((?x11579 (* ?x11400 l_0_9_68)))
 (let ((?x11395 (* 2.0 l_0_9_62)))
 (let ((?x11576 (* ?x11395 l_0_9_67)))
 (let ((?x11390 (* 2.0 l_0_9_48)))
 (let ((?x11573 (* ?x11390 l_0_9_53)))
 (let ((?x11385 (* 2.0 l_0_9_47)))
 (let ((?x11570 (* ?x11385 l_0_9_52)))
 (let ((?x6508 (* l_0_9_145 l_0_9_145)))
 (let ((?x881 (* l_0_9_144 l_0_9_144)))
 (let ((?x889 (* l_0_9_143 l_0_9_143)))
 (let ((?x9896 (* l_0_9_142 l_0_9_142)))
 (let ((?x9904 (* l_0_9_130 l_0_9_130)))
 (let ((?x9905 (* l_0_9_129 l_0_9_129)))
 (let ((?x9903 (* l_0_9_128 l_0_9_128)))
 (let ((?x9897 (* l_0_9_127 l_0_9_127)))
 (let ((?x6456 (* l_0_9_115 l_0_9_115)))
 (let ((?x9867 (* l_0_9_114 l_0_9_114)))
 (let ((?x961 (* l_0_9_113 l_0_9_113)))
 (let ((?x5566 (- (- (* (- l_0_9_100) l_0_9_100) (* l_0_9_112 l_0_9_112)) ?x961)))
 (let ((?x9898 (- (- (- (- (- (- (- ?x5566 ?x9867) ?x6456) ?x9897) ?x9903) ?x9905) ?x9904) ?x9896)))
 (let ((?x13095 (- (- (- (- ?x9898 ?x889) ?x881) ?x6508) (* (* 1.0 l_0_9_22) l_0_9_22))))
 (let ((?x13101 (- (- ?x13095 (* (* 1.0 l_0_9_23) l_0_9_23)) (* (* 1.0 l_0_9_24) l_0_9_24))))
 (let ((?x13106 (+ (- ?x13101 (* (* 1.0 l_0_9_25) l_0_9_25)) (* 1.0 (* l_0_9_37 l_0_9_37)))))
 (let ((?x13110 (+ (+ ?x13106 (* 1.0 (* l_0_9_38 l_0_9_38))) (* 1.0 (* l_0_9_39 l_0_9_39)))))
 (let ((?x13117 (- (+ (+ (+ ?x13110 (* 1.0 (* l_0_9_40 l_0_9_40))) ?x11570) ?x11573) (* (* 1.0 l_0_9_52) l_0_9_52))))
 (let ((?x13123 (- (- ?x13117 (* (* 1.0 l_0_9_53) l_0_9_53)) (* (* 1.0 l_0_9_54) l_0_9_54))))
 (let ((?x13130 (+ (- (- (- ?x13123 (* (* 1.0 l_0_9_55) l_0_9_55)) ?x11576) ?x11579) (* 1.0 (* l_0_9_67 l_0_9_67)))))
 (let ((?x13134 (+ (+ ?x13130 (* 1.0 (* l_0_9_68 l_0_9_68))) (* 1.0 (* l_0_9_69 l_0_9_69)))))
 (let ((?x13140 (- (+ (+ (+ ?x13134 (* 1.0 (* l_0_9_70 l_0_9_70))) ?x11896) ?x11898) ?x13139)))
 (= (- (- ?x13140 ?x13141) ?x13143) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11835 (* 2.0 l_0_9_78)))
 (let ((?x11969 (* ?x11835 l_0_9_87)))
 (let ((?x11832 (* 2.0 l_0_9_77)))
 (let ((?x11967 (* ?x11832 l_0_9_86)))
 (let ((?x12586 (* (* 2.0 l_0_9_70) l_0_9_74)))
 (let ((?x12583 (* (* 2.0 l_0_9_69) l_0_9_73)))
 (let ((?x12580 (* (* 2.0 l_0_9_68) l_0_9_72)))
 (let ((?x12577 (* (* 2.0 l_0_9_67) l_0_9_71)))
 (let ((?x11400 (* 2.0 l_0_9_63)))
 (let ((?x11538 (* ?x11400 l_0_9_72)))
 (let ((?x11395 (* 2.0 l_0_9_62)))
 (let ((?x11536 (* ?x11395 l_0_9_71)))
 (let ((?x12573 (* 2.0 l_0_9_55)))
 (let ((?x12574 (* ?x12573 l_0_9_59)))
 (let ((?x12570 (* 2.0 l_0_9_54)))
 (let ((?x12571 (* ?x12570 l_0_9_58)))
 (let ((?x12567 (* 2.0 l_0_9_53)))
 (let ((?x12568 (* ?x12567 l_0_9_57)))
 (let ((?x12564 (* 2.0 l_0_9_52)))
 (let ((?x12565 (* ?x12564 l_0_9_56)))
 (let ((?x11390 (* 2.0 l_0_9_48)))
 (let ((?x11534 (* ?x11390 l_0_9_57)))
 (let ((?x11385 (* 2.0 l_0_9_47)))
 (let ((?x11532 (* ?x11385 l_0_9_56)))
 (let ((?x13239 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x13236 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x13233 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x13230 (* (* 2.0 l_0_9_37) l_0_9_41)))
 (let ((?x11379 (* 2.0 l_0_9_33)))
 (let ((?x11568 (* ?x11379 l_0_9_38)))
 (let ((?x11373 (* 2.0 l_0_9_32)))
 (let ((?x11566 (* ?x11373 l_0_9_37)))
 (let ((?x12877 (* 2.0 l_0_9_25)))
 (let ((?x13225 (* ?x12877 l_0_9_29)))
 (let ((?x12874 (* 2.0 l_0_9_24)))
 (let ((?x13223 (* ?x12874 l_0_9_28)))
 (let ((?x9658 (* 2.0 l_0_9_23)))
 (let ((?x13221 (* ?x9658 l_0_9_27)))
 (let ((?x13219 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x11368 (* 2.0 l_0_9_18)))
 (let ((?x11564 (* ?x11368 l_0_9_23)))
 (let ((?x11363 (* 2.0 l_0_9_17)))
 (let ((?x11562 (* ?x11363 l_0_9_22)))
 (let ((?x13175 (- (* (* (- 2.0) l_0_9_100) l_0_9_104) (* (* 2.0 l_0_9_101) l_0_9_97))))
 (let ((?x13179 (- (- ?x13175 (* (* 2.0 l_0_9_102) l_0_9_98)) (* (* 2.0 l_0_9_103) l_0_9_99))))
 (let ((?x13185 (- (- ?x13179 (* (* 2.0 l_0_9_112) l_0_9_116)) (* (* 2.0 l_0_9_113) l_0_9_117))))
 (let ((?x13191 (- (- ?x13185 (* (* 2.0 l_0_9_114) l_0_9_118)) (* (* 2.0 l_0_9_115) l_0_9_119))))
 (let ((?x13197 (- (- ?x13191 (* (* 2.0 l_0_9_127) l_0_9_131)) (* (* 2.0 l_0_9_128) l_0_9_132))))
 (let ((?x13203 (- (- ?x13197 (* (* 2.0 l_0_9_129) l_0_9_133)) (* (* 2.0 l_0_9_130) l_0_9_134))))
 (let ((?x13209 (- (- ?x13203 (* (* 2.0 l_0_9_142) l_0_9_146)) (* (* 2.0 l_0_9_143) l_0_9_147))))
 (let ((?x13215 (- (- ?x13209 (* (* 2.0 l_0_9_144) l_0_9_148)) (* (* 2.0 l_0_9_145) l_0_9_149))))
 (let ((?x13227 (- (- (- (- (- (+ (+ ?x13215 ?x11562) ?x11564) ?x13219) ?x13221) ?x13223) ?x13225) ?x11566)))
 (let ((?x13242 (+ (+ (+ (+ (+ (+ (- ?x13227 ?x11568) ?x13230) ?x13233) ?x13236) ?x13239) ?x11532) ?x11534)))
 (let ((?x13249 (+ (- (- (- (- (- (- ?x13242 ?x12565) ?x12568) ?x12571) ?x12574) ?x11536) ?x11538) ?x12577)))
 (= (+ (+ (+ (+ (+ ?x13249 ?x12580) ?x12583) ?x12586) ?x11967) ?x11969) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11379 (* 2.0 l_0_9_33)))
 (let ((?x11529 (* ?x11379 l_0_9_42)))
 (let ((?x11373 (* 2.0 l_0_9_32)))
 (let ((?x11526 (* ?x11373 l_0_9_41)))
 (let ((?x11368 (* 2.0 l_0_9_18)))
 (let ((?x11523 (* ?x11368 l_0_9_27)))
 (let ((?x11363 (* 2.0 l_0_9_17)))
 (let ((?x11520 (* ?x11363 l_0_9_26)))
 (let ((?x13345 (* l_0_9_150 l_0_9_150)))
 (let ((?x13343 (* l_0_9_149 l_0_9_149)))
 (let ((?x13341 (* l_0_9_148 l_0_9_148)))
 (let ((?x13339 (* l_0_9_147 l_0_9_147)))
 (let ((?x13337 (* l_0_9_146 l_0_9_146)))
 (let ((?x13335 (* l_0_9_135 l_0_9_135)))
 (let ((?x13333 (* l_0_9_134 l_0_9_134)))
 (let ((?x13331 (* l_0_9_133 l_0_9_133)))
 (let ((?x13329 (* l_0_9_132 l_0_9_132)))
 (let ((?x13327 (* l_0_9_131 l_0_9_131)))
 (let ((?x13325 (* l_0_9_120 l_0_9_120)))
 (let ((?x13323 (* l_0_9_119 l_0_9_119)))
 (let ((?x13321 (* l_0_9_118 l_0_9_118)))
 (let ((?x13319 (* l_0_9_117 l_0_9_117)))
 (let ((?x13317 (* l_0_9_116 l_0_9_116)))
 (let ((?x13315 (* l_0_9_105 l_0_9_105)))
 (let ((?x13313 (* l_0_9_104 l_0_9_104)))
 (let ((?x13311 (* l_0_9_103 l_0_9_103)))
 (let ((?x13312 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x13311)))
 (let ((?x13326 (- (- (- (- (- (- (- ?x13312 ?x13313) ?x13315) ?x13317) ?x13319) ?x13321) ?x13323) ?x13325)))
 (let ((?x13340 (- (- (- (- (- (- (- ?x13326 ?x13327) ?x13329) ?x13331) ?x13333) ?x13335) ?x13337) ?x13339)))
 (let ((?x13351 (- (+ (+ (- (- (- ?x13340 ?x13341) ?x13343) ?x13345) ?x11520) ?x11523) (* (* 1.0 l_0_9_26) l_0_9_26))))
 (let ((?x13357 (- (- ?x13351 (* (* 1.0 l_0_9_27) l_0_9_27)) (* (* 1.0 l_0_9_28) l_0_9_28))))
 (let ((?x13363 (- (- ?x13357 (* (* 1.0 l_0_9_29) l_0_9_29)) (* (* 1.0 l_0_9_30) l_0_9_30))))
 (let ((?x13369 (+ (+ (- (- ?x13363 ?x11526) ?x11529) (* 1.0 (* l_0_9_41 l_0_9_41))) (* 1.0 (* l_0_9_42 l_0_9_42)))))
 (let ((?x13373 (+ (+ ?x13369 (* 1.0 (* l_0_9_43 l_0_9_43))) (* 1.0 (* l_0_9_44 l_0_9_44)))))
 (let ((?x13378 (- (+ ?x13373 (* 1.0 (* l_0_9_45 l_0_9_45))) (* (* 1.0 l_0_9_56) l_0_9_56))))
 (let ((?x13384 (- (- ?x13378 (* (* 1.0 l_0_9_57) l_0_9_57)) (* (* 1.0 l_0_9_58) l_0_9_58))))
 (let ((?x13390 (- (- ?x13384 (* (* 1.0 l_0_9_59) l_0_9_59)) (* (* 1.0 l_0_9_60) l_0_9_60))))
 (let ((?x13394 (+ (+ ?x13390 (* 1.0 (* l_0_9_71 l_0_9_71))) (* 1.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x13398 (+ (+ ?x13394 (* 1.0 (* l_0_9_73 l_0_9_73))) (* 1.0 (* l_0_9_74 l_0_9_74)))))
 (= (+ ?x13398 (* 1.0 (* l_0_9_75 l_0_9_75))) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12207 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x12204 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x12201 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x12198 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x12586 (* (* 2.0 l_0_9_70) l_0_9_74)))
 (let ((?x12583 (* (* 2.0 l_0_9_69) l_0_9_73)))
 (let ((?x12580 (* (* 2.0 l_0_9_68) l_0_9_72)))
 (let ((?x12577 (* (* 2.0 l_0_9_67) l_0_9_71)))
 (let ((?x12573 (* 2.0 l_0_9_55)))
 (let ((?x12574 (* ?x12573 l_0_9_59)))
 (let ((?x12570 (* 2.0 l_0_9_54)))
 (let ((?x12571 (* ?x12570 l_0_9_58)))
 (let ((?x12567 (* 2.0 l_0_9_53)))
 (let ((?x12568 (* ?x12567 l_0_9_57)))
 (let ((?x12564 (* 2.0 l_0_9_52)))
 (let ((?x12565 (* ?x12564 l_0_9_56)))
 (let ((?x12889 (* l_0_9_40 l_0_9_40)))
 (let ((?x12886 (* l_0_9_39 l_0_9_39)))
 (let ((?x12883 (* l_0_9_38 l_0_9_38)))
 (let ((?x12880 (* l_0_9_37 l_0_9_37)))
 (let ((?x9666 (* l_0_9_25 l_0_9_25)))
 (let ((?x6288 (* l_0_9_24 l_0_9_24)))
 (let ((?x13426 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x6288) ?x9666)))
 (let ((?x13433 (+ (+ (+ (- (- (- (- ?x13426 ?x12880) ?x12883) ?x12886) ?x12889) ?x12565) ?x12568) ?x12571)))
 (let ((?x13440 (+ (+ (- (- (- (- (+ ?x13433 ?x12574) ?x12577) ?x12580) ?x12583) ?x12586) ?x12198) ?x12201)))
 (= (+ (+ ?x13440 ?x12204) ?x12207) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x12256 (* l_0_9_90 l_0_9_90)))
 (let ((?x12254 (* l_0_9_89 l_0_9_89)))
 (let ((?x12252 (* l_0_9_88 l_0_9_88)))
 (let ((?x12250 (* l_0_9_87 l_0_9_87)))
 (let ((?x12248 (* l_0_9_86 l_0_9_86)))
 (let ((?x12625 (* l_0_9_75 l_0_9_75)))
 (let ((?x12623 (* l_0_9_74 l_0_9_74)))
 (let ((?x12621 (* l_0_9_73 l_0_9_73)))
 (let ((?x12619 (* l_0_9_72 l_0_9_72)))
 (let ((?x12617 (* l_0_9_71 l_0_9_71)))
 (let ((?x12615 (* l_0_9_60 l_0_9_60)))
 (let ((?x12613 (* l_0_9_59 l_0_9_59)))
 (let ((?x12611 (* l_0_9_58 l_0_9_58)))
 (let ((?x12609 (* l_0_9_57 l_0_9_57)))
 (let ((?x12601 (* l_0_9_56 l_0_9_56)))
 (let ((?x13239 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x13236 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x13233 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x13230 (* (* 2.0 l_0_9_37) l_0_9_41)))
 (let ((?x12877 (* 2.0 l_0_9_25)))
 (let ((?x13225 (* ?x12877 l_0_9_29)))
 (let ((?x12874 (* 2.0 l_0_9_24)))
 (let ((?x13223 (* ?x12874 l_0_9_28)))
 (let ((?x9658 (* 2.0 l_0_9_23)))
 (let ((?x13221 (* ?x9658 l_0_9_27)))
 (let ((?x13219 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x13465 (- (- (- (- (+ (+ (+ ?x13219 ?x13221) ?x13223) ?x13225) ?x13230) ?x13233) ?x13236) ?x13239)))
 (let ((?x13472 (- (- (+ (+ (+ (+ (+ ?x13465 ?x12601) ?x12609) ?x12611) ?x12613) ?x12615) ?x12617) ?x12619)))
 (let ((?x13479 (+ (+ (+ (+ (- (- (- ?x13472 ?x12621) ?x12623) ?x12625) ?x12248) ?x12250) ?x12252) ?x12254)))
 (= (+ ?x13479 ?x12256) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x13053 (* l_0_9_45 l_0_9_45)))
 (let ((?x13050 (* l_0_9_44 l_0_9_44)))
 (let ((?x13047 (* l_0_9_43 l_0_9_43)))
 (let ((?x13044 (* l_0_9_42 l_0_9_42)))
 (let ((?x13041 (* l_0_9_41 l_0_9_41)))
 (let ((?x844 (* l_0_9_30 l_0_9_30)))
 (let ((?x9882 (* l_0_9_29 l_0_9_29)))
 (let ((?x9881 (* l_0_9_28 l_0_9_28)))
 (let ((?x7038 (+ (+ (+ (* l_0_9_26 l_0_9_26) (* l_0_9_27 l_0_9_27)) ?x9881) ?x9882)))
 (= (- (- (- (- (- (+ ?x7038 ?x844) ?x13041) ?x13044) ?x13047) ?x13050) ?x13053) 0.0)))))))))))
(assert
 (let ((?x12165 (* l_0_9_85 l_0_9_85)))
 (let ((?x12163 (* l_0_9_84 l_0_9_84)))
 (let ((?x12161 (* l_0_9_83 l_0_9_83)))
 (let ((?x12159 (* l_0_9_82 l_0_9_82)))
 (let ((?x12548 (* l_0_9_70 l_0_9_70)))
 (let ((?x12545 (* l_0_9_69 l_0_9_69)))
 (let ((?x12543 (* l_0_9_68 l_0_9_68)))
 (let ((?x12541 (* l_0_9_67 l_0_9_67)))
 (let ((?x12539 (* l_0_9_55 l_0_9_55)))
 (let ((?x12537 (* l_0_9_54 l_0_9_54)))
 (let ((?x2240 (+ (+ (+ (* l_0_9_52 l_0_9_52) (* l_0_9_53 l_0_9_53)) ?x12537) ?x12539)))
 (let ((?x10506 (+ (+ (+ (- (- (- (- ?x2240 ?x12541) ?x12543) ?x12545) ?x12548) ?x12159) ?x12161) ?x12163)))
 (= (+ ?x10506 ?x12165) 0.0))))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_121 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_130 0.0))
(assert
 (>= l_0_9_135 0.0))
(assert
 (>= l_0_9_136 0.0))
(assert
 (>= l_0_9_138 0.0))
(assert
 (>= l_0_9_141 0.0))
(assert
 (>= l_0_9_145 0.0))
(assert
 (>= l_0_9_150 0.0))
(assert
 (let ((?x13570 (* l_0_10_93 l_0_10_93)))
 (let ((?x13568 (* l_0_10_92 l_0_10_92)))
 (let ((?x13542 (* l_0_10_153 l_0_10_153)))
 (let ((?x13540 (* l_0_10_152 l_0_10_152)))
 (let ((?x13538 (* l_0_10_138 l_0_10_138)))
 (let ((?x13536 (* l_0_10_137 l_0_10_137)))
 (let ((?x13534 (* l_0_10_123 l_0_10_123)))
 (let ((?x13532 (* l_0_10_122 l_0_10_122)))
 (let ((?x13530 (* l_0_10_108 l_0_10_108)))
 (let ((?x13531 (- (- (+ (* _a_0_ _a_3_) _a_2_) (* l_0_10_107 l_0_10_107)) ?x13530)))
 (let ((?x13546 (- (- (- (- (- (- (- ?x13531 ?x13532) ?x13534) ?x13536) ?x13538) ?x13540) ?x13542) (* (* 1.0 l_0_10_17) l_0_10_17))))
 (let ((?x13552 (+ (- ?x13546 (* (* 1.0 l_0_10_18) l_0_10_18)) (* 1.0 (* l_0_10_32 l_0_10_32)))))
 (let ((?x13558 (- (+ ?x13552 (* 1.0 (* l_0_10_33 l_0_10_33))) (* (* 1.0 l_0_10_47) l_0_10_47))))
 (let ((?x13564 (+ (- ?x13558 (* (* 1.0 l_0_10_48) l_0_10_48)) (* 1.0 (* l_0_10_62 l_0_10_62)))))
 (let ((?x13572 (- (- (- (+ ?x13564 (* 1.0 (* l_0_10_63 l_0_10_63))) ?x13568) ?x13570) 4.0)))
 (= ?x13572 0.0)))))))))))))))))
(assert
 (let ((?x13654 (* 2.0 l_0_10_63)))
 (let ((?x13655 (* ?x13654 l_0_10_72)))
 (let ((?x13651 (* 2.0 l_0_10_62)))
 (let ((?x13652 (* ?x13651 l_0_10_71)))
 (let ((?x13648 (* 2.0 l_0_10_48)))
 (let ((?x13649 (* ?x13648 l_0_10_57)))
 (let ((?x13645 (* 2.0 l_0_10_47)))
 (let ((?x13646 (* ?x13645 l_0_10_56)))
 (let ((?x13553 (* l_0_10_33 l_0_10_33)))
 (let ((?x13641 (* 2.0 l_0_10_33)))
 (let ((?x13642 (* ?x13641 l_0_10_42)))
 (let ((?x13550 (* l_0_10_32 l_0_10_32)))
 (let ((?x13637 (* 2.0 l_0_10_32)))
 (let ((?x13638 (* ?x13637 l_0_10_41)))
 (let ((?x10647 (* l_0_10_18 l_0_10_18)))
 (let ((?x13633 (* 2.0 l_0_10_18)))
 (let ((?x13634 (* ?x13633 l_0_10_27)))
 (let ((?x7140 (* l_0_10_17 l_0_10_17)))
 (let ((?x13629 (* 2.0 l_0_10_17)))
 (let ((?x13630 (* ?x13629 l_0_10_26)))
 (let ((?x13604 (- (- (* _a_1_ _a_3_) (* (* 2.0 l_0_10_101) l_0_10_92)) (* (* 2.0 l_0_10_102) l_0_10_93))))
 (let ((?x13610 (- (- ?x13604 (* (* 2.0 l_0_10_107) l_0_10_116)) (* (* 2.0 l_0_10_108) l_0_10_117))))
 (let ((?x13616 (- (- ?x13610 (* (* 2.0 l_0_10_122) l_0_10_131)) (* (* 2.0 l_0_10_123) l_0_10_132))))
 (let ((?x13622 (- (- ?x13616 (* (* 2.0 l_0_10_137) l_0_10_146)) (* (* 2.0 l_0_10_138) l_0_10_147))))
 (let ((?x13628 (- (- ?x13622 (* (* 2.0 l_0_10_152) l_0_10_161)) (* (* 2.0 l_0_10_153) l_0_10_162))))
 (let ((?x13643 (+ (- (+ (+ (- (+ (- ?x13628 ?x13630) ?x7140) ?x13634) ?x10647) ?x13638) ?x13550) ?x13642)))
 (= (+ (+ (- (- (- ?x13643 ?x13553) ?x13646) ?x13649) ?x13652) ?x13655) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x13740 (* l_0_10_78 l_0_10_78)))
 (let ((?x13738 (* l_0_10_77 l_0_10_77)))
 (let ((?x13565 (* l_0_10_63 l_0_10_63)))
 (let ((?x13654 (* 2.0 l_0_10_63)))
 (let ((?x13735 (* ?x13654 l_0_10_68)))
 (let ((?x13562 (* l_0_10_62 l_0_10_62)))
 (let ((?x13651 (* 2.0 l_0_10_62)))
 (let ((?x13732 (* ?x13651 l_0_10_67)))
 (let ((?x13592 (* l_0_10_48 l_0_10_48)))
 (let ((?x13648 (* 2.0 l_0_10_48)))
 (let ((?x13729 (* ?x13648 l_0_10_53)))
 (let ((?x13588 (* l_0_10_47 l_0_10_47)))
 (let ((?x13645 (* 2.0 l_0_10_47)))
 (let ((?x13726 (* ?x13645 l_0_10_52)))
 (let ((?x13641 (* 2.0 l_0_10_33)))
 (let ((?x13724 (* ?x13641 l_0_10_38)))
 (let ((?x13637 (* 2.0 l_0_10_32)))
 (let ((?x13722 (* ?x13637 l_0_10_37)))
 (let ((?x13633 (* 2.0 l_0_10_18)))
 (let ((?x13720 (* ?x13633 l_0_10_23)))
 (let ((?x13629 (* 2.0 l_0_10_17)))
 (let ((?x13718 (* ?x13629 l_0_10_22)))
 (let ((?x13705 (- (- _a_4_ (* (* 2.0 l_0_10_107) l_0_10_112)) (* (* 2.0 l_0_10_108) l_0_10_113))))
 (let ((?x13709 (- (- ?x13705 (* (* 2.0 l_0_10_122) l_0_10_127)) (* (* 2.0 l_0_10_123) l_0_10_128))))
 (let ((?x13713 (- (- ?x13709 (* (* 2.0 l_0_10_137) l_0_10_142)) (* (* 2.0 l_0_10_138) l_0_10_143))))
 (let ((?x13717 (- (- ?x13713 (* (* 2.0 l_0_10_152) l_0_10_157)) (* (* 2.0 l_0_10_153) l_0_10_158))))
 (let ((?x13730 (- (+ (- (+ (+ (- (- ?x13717 ?x13718) ?x13720) ?x13722) ?x13724) ?x13726) ?x13588) ?x13729)))
 (let ((?x13741 (+ (+ (- (+ (- (+ (+ ?x13730 ?x13592) ?x13732) ?x13562) ?x13735) ?x13565) ?x13738) ?x13740)))
 (let ((?x13747 (- (- ?x13741 (* (* 2.0 l_0_10_92) l_0_10_97)) (* (* 2.0 l_0_10_93) l_0_10_98))))
 (= ?x13747 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x13861 (* l_0_10_96 l_0_10_96)))
 (let ((?x13859 (* l_0_10_95 l_0_10_95)))
 (let ((?x13857 (* l_0_10_94 l_0_10_94)))
 (let ((?x13565 (* l_0_10_63 l_0_10_63)))
 (let ((?x13562 (* l_0_10_62 l_0_10_62)))
 (let ((?x13592 (* l_0_10_48 l_0_10_48)))
 (let ((?x13588 (* l_0_10_47 l_0_10_47)))
 (let ((?x13806 (* l_0_10_3 l_0_10_3)))
 (let ((?x13798 (* l_0_10_2 l_0_10_2)))
 (let ((?x13787 (* l_0_10_156 l_0_10_156)))
 (let ((?x13785 (* l_0_10_155 l_0_10_155)))
 (let ((?x13783 (* l_0_10_154 l_0_10_154)))
 (let ((?x13781 (* l_0_10_141 l_0_10_141)))
 (let ((?x13779 (* l_0_10_140 l_0_10_140)))
 (let ((?x13777 (* l_0_10_139 l_0_10_139)))
 (let ((?x13775 (* l_0_10_126 l_0_10_126)))
 (let ((?x13773 (* l_0_10_125 l_0_10_125)))
 (let ((?x13771 (* l_0_10_124 l_0_10_124)))
 (let ((?x13769 (* l_0_10_111 l_0_10_111)))
 (let ((?x13770 (- (- (* (- l_0_10_109) l_0_10_109) (* l_0_10_110 l_0_10_110)) ?x13769)))
 (let ((?x13784 (- (- (- (- (- (- (- ?x13770 ?x13771) ?x13773) ?x13775) ?x13777) ?x13779) ?x13781) ?x13783)))
 (let ((?x13794 (- (- (- (- ?x13784 ?x13785) ?x13787) (* (* 4.0 l_0_10_17) l_0_10_19)) (* (* 4.0 l_0_10_18) l_0_10_20))))
 (let ((?x13802 (- (+ (- ?x13794 (* (* 1.0 l_0_10_19) l_0_10_19)) ?x13798) (* (* 1.0 l_0_10_20) l_0_10_20))))
 (let ((?x13810 (+ (+ (- ?x13802 (* (* 1.0 l_0_10_21) l_0_10_21)) ?x13806) (* (* 4.0 l_0_10_32) l_0_10_34))))
 (let ((?x13816 (+ (+ ?x13810 (* (* 4.0 l_0_10_33) l_0_10_35)) (* 1.0 (* l_0_10_34 l_0_10_34)))))
 (let ((?x13822 (+ (+ ?x13816 (* 1.0 (* l_0_10_35 l_0_10_35))) (* 1.0 (* l_0_10_36 l_0_10_36)))))
 (let ((?x13829 (- (- (- ?x13822 (* (* 4.0 l_0_10_47) l_0_10_49)) ?x13588) (* (* 4.0 l_0_10_48) l_0_10_50))))
 (let ((?x13836 (- (- (- ?x13829 ?x13592) (* (* 1.0 l_0_10_49) l_0_10_49)) (* (* 1.0 l_0_10_50) l_0_10_50))))
 (let ((?x13842 (+ (- ?x13836 (* (* 1.0 l_0_10_51) l_0_10_51)) (* (* 4.0 l_0_10_62) l_0_10_64))))
 (let ((?x13850 (+ (+ (+ (+ ?x13842 ?x13562) (* (* 4.0 l_0_10_63) l_0_10_65)) ?x13565) (* 1.0 (* l_0_10_64 l_0_10_64)))))
 (let ((?x13856 (+ (+ ?x13850 (* 1.0 (* l_0_10_65 l_0_10_65))) (* 1.0 (* l_0_10_66 l_0_10_66)))))
 (= (- (- (- (- ?x13856 ?x13857) ?x13859) ?x13861) 1.0) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x13565 (* l_0_10_63 l_0_10_63)))
 (let ((?x13992 (* 2.0 ?x13565)))
 (let ((?x13654 (* 2.0 l_0_10_63)))
 (let ((?x13990 (* ?x13654 l_0_10_65)))
 (let ((?x13562 (* l_0_10_62 l_0_10_62)))
 (let ((?x13988 (* 2.0 ?x13562)))
 (let ((?x13651 (* 2.0 l_0_10_62)))
 (let ((?x13986 (* ?x13651 l_0_10_64)))
 (let ((?x13648 (* 2.0 l_0_10_48)))
 (let ((?x13982 (* ?x13648 l_0_10_50)))
 (let ((?x13645 (* 2.0 l_0_10_47)))
 (let ((?x13978 (* ?x13645 l_0_10_49)))
 (let ((?x13553 (* l_0_10_33 l_0_10_33)))
 (let ((?x13976 (* 2.0 ?x13553)))
 (let ((?x13641 (* 2.0 l_0_10_33)))
 (let ((?x13974 (* ?x13641 l_0_10_35)))
 (let ((?x13550 (* l_0_10_32 l_0_10_32)))
 (let ((?x13972 (* 2.0 ?x13550)))
 (let ((?x13637 (* 2.0 l_0_10_32)))
 (let ((?x13970 (* ?x13637 l_0_10_34)))
 (let ((?x13633 (* 2.0 l_0_10_18)))
 (let ((?x13966 (* ?x13633 l_0_10_20)))
 (let ((?x13629 (* 2.0 l_0_10_17)))
 (let ((?x13962 (* ?x13629 l_0_10_19)))
 (let ((?x13949 (- (* (* (- 2.0) l_0_10_107) l_0_10_109) (* (* 2.0 l_0_10_108) l_0_10_110))))
 (let ((?x13953 (- (- ?x13949 (* (* 2.0 l_0_10_122) l_0_10_124)) (* (* 2.0 l_0_10_123) l_0_10_125))))
 (let ((?x13957 (- (- ?x13953 (* (* 2.0 l_0_10_137) l_0_10_139)) (* (* 2.0 l_0_10_138) l_0_10_140))))
 (let ((?x13961 (- (- ?x13957 (* (* 2.0 l_0_10_152) l_0_10_154)) (* (* 2.0 l_0_10_153) l_0_10_155))))
 (let ((?x13969 (- (- (- (- ?x13961 ?x13962) (* ?x13629 l_0_10_17)) ?x13966) (* ?x13633 l_0_10_18))))
 (let ((?x13981 (- (- (+ (+ (+ (+ ?x13969 ?x13970) ?x13972) ?x13974) ?x13976) ?x13978) (* ?x13645 l_0_10_47))))
 (let ((?x13993 (+ (+ (+ (+ (- (- ?x13981 ?x13982) (* ?x13648 l_0_10_48)) ?x13986) ?x13988) ?x13990) ?x13992)))
 (let ((?x13997 (- (- ?x13993 (* (* 2.0 l_0_10_92) l_0_10_94)) (* (* 2.0 l_0_10_93) l_0_10_95))))
 (= (- ?x13997 4.0) 0.0))))))))))))))))))))))))))))))))))
(assert
 (= (- (* (- l_0_10_1) l_0_10_1) (* l_0_10_76 l_0_10_76)) 0.0))
(assert
 (let ((?x14118 (* l_0_10_91 l_0_10_91)))
 (let ((?x14115 (* 2.0 l_0_10_76)))
 (let ((?x14116 (* ?x14115 l_0_10_77)))
 (let ((?x14101 (* l_0_10_151 l_0_10_151)))
 (let ((?x14099 (* l_0_10_136 l_0_10_136)))
 (let ((?x14097 (* l_0_10_121 l_0_10_121)))
 (let ((?x14098 (- (- (* (* (- 2.0) l_0_10_1) l_0_10_2) (* l_0_10_106 l_0_10_106)) ?x14097)))
 (let ((?x14108 (+ (- (- (- ?x14098 ?x14099) ?x14101) (* (* 1.0 l_0_10_16) l_0_10_16)) (* 1.0 (* l_0_10_31 l_0_10_31)))))
 (let ((?x14114 (+ (- ?x14108 (* (* 1.0 l_0_10_46) l_0_10_46)) (* 1.0 (* l_0_10_61 l_0_10_61)))))
 (= (- (- ?x14114 ?x14116) ?x14118) 0.0)))))))))))
(assert
 (let ((?x14115 (* 2.0 l_0_10_76)))
 (let ((?x14155 (* ?x14115 l_0_10_79)))
 (let ((?x14112 (* l_0_10_61 l_0_10_61)))
 (let ((?x14153 (* 2.0 ?x14112)))
 (let ((?x14106 (* l_0_10_31 l_0_10_31)))
 (let ((?x14148 (* 2.0 ?x14106)))
 (let ((?x14147 (- (* (* (- 2.0) l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_16) l_0_10_16))))
 (let ((?x14156 (- (+ (- (+ ?x14147 ?x14148) (* (* 2.0 l_0_10_46) l_0_10_46)) ?x14153) ?x14155)))
 (= ?x14156 0.0))))))))))
(assert
 (let ((?x14086 (* l_0_10_76 l_0_10_76)))
 (let ((?x14115 (* 2.0 l_0_10_76)))
 (let ((?x10930 (* ?x14115 l_0_10_82)))
 (let ((?x14112 (* l_0_10_61 l_0_10_61)))
 (let ((?x10925 (- (+ (* (* (- 2.0) l_0_10_1) l_0_10_7) (* l_0_10_46 l_0_10_46)) ?x14112)))
 (= (+ (- ?x10925 ?x10930) ?x14086) 0.0)))))))
(assert
 (let ((?x14115 (* 2.0 l_0_10_76)))
 (let ((?x14177 (* ?x14115 l_0_10_86)))
 (let ((?x14106 (* l_0_10_31 l_0_10_31)))
 (let ((?x14176 (- (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) (* l_0_10_16 l_0_10_16)) ?x14106)))
 (= (- ?x14176 ?x14177) 0.0))))))
(assert
 (let ((?x13740 (* l_0_10_78 l_0_10_78)))
 (let ((?x13738 (* l_0_10_77 l_0_10_77)))
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14211 (* ?x14210 l_0_10_62)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14208 (* ?x14150 l_0_10_47)))
 (let ((?x14205 (* 2.0 l_0_10_31)))
 (let ((?x14206 (* ?x14205 l_0_10_32)))
 (let ((?x13806 (* l_0_10_3 l_0_10_3)))
 (let ((?x13798 (* l_0_10_2 l_0_10_2)))
 (let ((?x14145 (* 2.0 l_0_10_16)))
 (let ((?x14201 (* ?x14145 l_0_10_17)))
 (let ((?x14194 (- (* (* (- 2.0) l_0_10_106) l_0_10_107) (* (* 2.0 l_0_10_121) l_0_10_122))))
 (let ((?x14200 (- (- ?x14194 (* (* 2.0 l_0_10_136) l_0_10_137)) (* (* 2.0 l_0_10_151) l_0_10_152))))
 (let ((?x14213 (- (+ (- (+ (- (- (- ?x14200 ?x14201) ?x13798) ?x13806) ?x14206) ?x14208) ?x14211) ?x13738)))
 (= (- (- ?x14213 ?x13740) (* (* 2.0 l_0_10_91) l_0_10_92)) 0.0)))))))))))))))))
(assert
 (let ((?x14276 (* 2.0 l_0_10_78)))
 (let ((?x14277 (* ?x14276 l_0_10_80)))
 (let ((?x14273 (* 2.0 l_0_10_77)))
 (let ((?x14274 (* ?x14273 l_0_10_79)))
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14271 (* ?x14210 l_0_10_64)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14266 (* ?x14150 l_0_10_49)))
 (let ((?x14205 (* 2.0 l_0_10_31)))
 (let ((?x14261 (* ?x14205 l_0_10_34)))
 (let ((?x14255 (* 2.0 l_0_10_3)))
 (let ((?x14256 (* ?x14255 l_0_10_5)))
 (let ((?x14252 (* 2.0 l_0_10_2)))
 (let ((?x14253 (* ?x14252 l_0_10_4)))
 (let ((?x14145 (* 2.0 l_0_10_16)))
 (let ((?x14250 (* ?x14145 l_0_10_19)))
 (let ((?x3274 (- (* (* (- 2.0) l_0_10_106) l_0_10_109) (* (* 2.0 l_0_10_121) l_0_10_124))))
 (let ((?x14246 (- (- ?x3274 (* (* 2.0 l_0_10_136) l_0_10_139)) (* (* 2.0 l_0_10_151) l_0_10_154))))
 (let ((?x14257 (- (- (- (- ?x14246 (* (* 4.0 l_0_10_16) l_0_10_17)) ?x14250) ?x14253) ?x14256)))
 (let ((?x14265 (- (+ (+ ?x14257 (* (* 4.0 l_0_10_31) l_0_10_32)) ?x14261) (* (* 4.0 l_0_10_46) l_0_10_47))))
 (let ((?x14275 (- (+ (+ (- ?x14265 ?x14266) (* (* 4.0 l_0_10_61) l_0_10_62)) ?x14271) ?x14274)))
 (= (- (- ?x14275 ?x14277) (* (* 2.0 l_0_10_91) l_0_10_94)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x14276 (* 2.0 l_0_10_78)))
 (let ((?x14338 (* ?x14276 l_0_10_83)))
 (let ((?x14273 (* 2.0 l_0_10_77)))
 (let ((?x14336 (* ?x14273 l_0_10_82)))
 (let ((?x14115 (* 2.0 l_0_10_76)))
 (let ((?x14116 (* ?x14115 l_0_10_77)))
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14333 (* ?x14210 l_0_10_67)))
 (let ((?x14211 (* ?x14210 l_0_10_62)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14330 (* ?x14150 l_0_10_52)))
 (let ((?x14208 (* ?x14150 l_0_10_47)))
 (let ((?x14205 (* 2.0 l_0_10_31)))
 (let ((?x14327 (* ?x14205 l_0_10_37)))
 (let ((?x14255 (* 2.0 l_0_10_3)))
 (let ((?x14325 (* ?x14255 l_0_10_8)))
 (let ((?x14252 (* 2.0 l_0_10_2)))
 (let ((?x14323 (* ?x14252 l_0_10_7)))
 (let ((?x14145 (* 2.0 l_0_10_16)))
 (let ((?x14321 (* ?x14145 l_0_10_22)))
 (let ((?x14316 (- (* (* (- 2.0) l_0_10_106) l_0_10_112) (* (* 2.0 l_0_10_121) l_0_10_127))))
 (let ((?x14320 (- (- ?x14316 (* (* 2.0 l_0_10_136) l_0_10_142)) (* (* 2.0 l_0_10_151) l_0_10_157))))
 (let ((?x14332 (- (- (+ (+ (- (- (- ?x14320 ?x14321) ?x14323) ?x14325) ?x14327) ?x14208) ?x14330) ?x14211)))
 (let ((?x14341 (- (- (- (+ (+ ?x14332 ?x14333) ?x14116) ?x14336) ?x14338) (* (* 2.0 l_0_10_91) l_0_10_97))))
 (= ?x14341 0.0))))))))))))))))))))))))))
(assert
 (let ((?x14276 (* 2.0 l_0_10_78)))
 (let ((?x14417 (* ?x14276 l_0_10_87)))
 (let ((?x14273 (* 2.0 l_0_10_77)))
 (let ((?x14415 (* ?x14273 l_0_10_86)))
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14413 (* ?x14210 l_0_10_71)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14411 (* ?x14150 l_0_10_56)))
 (let ((?x14205 (* 2.0 l_0_10_31)))
 (let ((?x14409 (* ?x14205 l_0_10_41)))
 (let ((?x14206 (* ?x14205 l_0_10_32)))
 (let ((?x14145 (* 2.0 l_0_10_16)))
 (let ((?x14406 (* ?x14145 l_0_10_26)))
 (let ((?x14201 (* ?x14145 l_0_10_17)))
 (let ((?x14396 (* 2.0 l_0_10_12)))
 (let ((?x14397 (* ?x14396 l_0_10_3)))
 (let ((?x14393 (* 2.0 l_0_10_11)))
 (let ((?x14394 (* ?x14393 l_0_10_2)))
 (let ((?x14392 (- (* (* (- 2.0) l_0_10_101) l_0_10_91) (* (* 2.0 l_0_10_106) l_0_10_116))))
 (let ((?x14402 (- (- (- (- ?x14392 ?x14394) ?x14397) (* (* 2.0 l_0_10_121) l_0_10_131)) (* (* 2.0 l_0_10_136) l_0_10_146))))
 (let ((?x14408 (- (- (+ (- ?x14402 (* (* 2.0 l_0_10_151) l_0_10_161)) ?x14201) ?x14406) ?x14206)))
 (= (- (- (+ (- (+ ?x14408 ?x14409) ?x14411) ?x14413) ?x14415) ?x14417) 0.0)))))))))))))))))))))))
(assert
 (let ((?x14489 (* l_0_10_81 l_0_10_81)))
 (let ((?x14487 (* l_0_10_80 l_0_10_80)))
 (let ((?x14485 (* l_0_10_79 l_0_10_79)))
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14211 (* ?x14210 l_0_10_62)))
 (let ((?x14480 (* l_0_10_6 l_0_10_6)))
 (let ((?x14478 (* l_0_10_5 l_0_10_5)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14208 (* ?x14150 l_0_10_47)))
 (let ((?x14473 (* l_0_10_4 l_0_10_4)))
 (let ((?x14470 (- (* (* 2.0 l_0_10_1) l_0_10_2) (* (* 4.0 l_0_10_16) l_0_10_19))))
 (let ((?x14477 (- (- (- (+ ?x14470 (* (* 4.0 l_0_10_31) l_0_10_34)) ?x14473) ?x14208) (* (* 4.0 l_0_10_46) l_0_10_49))))
 (let ((?x14484 (+ (+ (- (- ?x14477 ?x14478) ?x14480) ?x14211) (* (* 4.0 l_0_10_61) l_0_10_64))))
 (= (- (- (- ?x14484 ?x14485) ?x14487) ?x14489) 0.0)))))))))))))))
(assert
 (let ((?x14534 (* 2.0 l_0_10_81)))
 (let ((?x14535 (* ?x14534 l_0_10_84)))
 (let ((?x14531 (* 2.0 l_0_10_80)))
 (let ((?x14532 (* ?x14531 l_0_10_83)))
 (let ((?x14528 (* 2.0 l_0_10_79)))
 (let ((?x14529 (* ?x14528 l_0_10_82)))
 (let ((?x14115 (* 2.0 l_0_10_76)))
 (let ((?x14155 (* ?x14115 l_0_10_79)))
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14271 (* ?x14210 l_0_10_64)))
 (let ((?x14522 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x14519 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14266 (* ?x14150 l_0_10_49)))
 (let ((?x14513 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x14511 (+ (* (* (- 4.0) l_0_10_16) l_0_10_22) (* (* 4.0 l_0_10_31) l_0_10_37))))
 (let ((?x14520 (- (- (+ (- ?x14511 ?x14513) ?x14266) (* (* 4.0 l_0_10_46) l_0_10_52)) ?x14519)))
 (let ((?x14527 (+ (+ (- (- ?x14520 ?x14522) ?x14271) (* (* 4.0 l_0_10_61) l_0_10_67)) ?x14155)))
 (= (- (- (- ?x14527 ?x14529) ?x14532) ?x14535) 0.0))))))))))))))))))))
(assert
 (let ((?x14534 (* 2.0 l_0_10_81)))
 (let ((?x14563 (* ?x14534 l_0_10_88)))
 (let ((?x14531 (* 2.0 l_0_10_80)))
 (let ((?x14561 (* ?x14531 l_0_10_87)))
 (let ((?x14528 (* 2.0 l_0_10_79)))
 (let ((?x14559 (* ?x14528 l_0_10_86)))
 (let ((?x14205 (* 2.0 l_0_10_31)))
 (let ((?x14261 (* ?x14205 l_0_10_34)))
 (let ((?x14145 (* 2.0 l_0_10_16)))
 (let ((?x14250 (* ?x14145 l_0_10_19)))
 (let ((?x11301 (* 2.0 l_0_10_13)))
 (let ((?x11303 (* ?x11301 l_0_10_6)))
 (let ((?x14396 (* 2.0 l_0_10_12)))
 (let ((?x11272 (* ?x14396 l_0_10_5)))
 (let ((?x3686 (- (+ (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x11272) ?x11303) ?x14250) (* (* 4.0 l_0_10_16) l_0_10_26))))
 (let ((?x14556 (- (+ (- ?x3686 ?x14261) (* (* 4.0 l_0_10_31) l_0_10_41)) (* (* 4.0 l_0_10_46) l_0_10_56))))
 (let ((?x14564 (- (- (- (+ ?x14556 (* (* 4.0 l_0_10_61) l_0_10_71)) ?x14559) ?x14561) ?x14563)))
 (= ?x14564 0.0)))))))))))))))))))
(assert
 (let ((?x14598 (* l_0_10_9 l_0_10_9)))
 (let ((?x14596 (* l_0_10_85 l_0_10_85)))
 (let ((?x14594 (* l_0_10_84 l_0_10_84)))
 (let ((?x14592 (* l_0_10_83 l_0_10_83)))
 (let ((?x14590 (* l_0_10_82 l_0_10_82)))
 (let ((?x14588 (* l_0_10_8 l_0_10_8)))
 (let ((?x14115 (* 2.0 l_0_10_76)))
 (let ((?x10930 (* ?x14115 l_0_10_82)))
 (let ((?x14585 (* l_0_10_7 l_0_10_7)))
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14333 (* ?x14210 l_0_10_67)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14330 (* ?x14150 l_0_10_52)))
 (let ((?x14589 (- (+ (- (- (+ (* (- l_0_10_10) l_0_10_10) ?x14330) ?x14333) ?x14585) ?x10930) ?x14588)))
 (= (- (- (- (- (- ?x14589 ?x14590) ?x14592) ?x14594) ?x14596) ?x14598) 0.0))))))))))))))))
(assert
 (let ((?x14636 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x14633 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x14630 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x14627 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x14115 (* 2.0 l_0_10_76)))
 (let ((?x14177 (* ?x14115 l_0_10_86)))
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14413 (* ?x14210 l_0_10_71)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14411 (* ?x14150 l_0_10_56)))
 (let ((?x14205 (* 2.0 l_0_10_31)))
 (let ((?x14327 (* ?x14205 l_0_10_37)))
 (let ((?x14145 (* 2.0 l_0_10_16)))
 (let ((?x14321 (* ?x14145 l_0_10_22)))
 (let ((?x11301 (* 2.0 l_0_10_13)))
 (let ((?x14619 (* ?x11301 l_0_10_9)))
 (let ((?x14396 (* 2.0 l_0_10_12)))
 (let ((?x14617 (* ?x14396 l_0_10_8)))
 (let ((?x14393 (* 2.0 l_0_10_11)))
 (let ((?x14615 (* ?x14393 l_0_10_7)))
 (let ((?x14621 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x14615) ?x14617) ?x14619) ?x14321)))
 (let ((?x14634 (- (- (- (+ (- (+ (- ?x14621 ?x14327) ?x14411) ?x14413) ?x14177) ?x14627) ?x14630) ?x14633)))
 (= (- ?x14634 ?x14636) 0.0))))))))))))))))))))))))
(assert
 (let ((?x14661 (* l_0_10_90 l_0_10_90)))
 (let ((?x14659 (* l_0_10_89 l_0_10_89)))
 (let ((?x14657 (* l_0_10_88 l_0_10_88)))
 (let ((?x14655 (* l_0_10_87 l_0_10_87)))
 (let ((?x14653 (* l_0_10_86 l_0_10_86)))
 (let ((?x14205 (* 2.0 l_0_10_31)))
 (let ((?x14409 (* ?x14205 l_0_10_41)))
 (let ((?x14145 (* 2.0 l_0_10_16)))
 (let ((?x14406 (* ?x14145 l_0_10_26)))
 (let ((?x14649 (* l_0_10_15 l_0_10_15)))
 (let ((?x14647 (* l_0_10_14 l_0_10_14)))
 (let ((?x8246 (* l_0_10_13 l_0_10_13)))
 (let ((?x11494 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x8246)))
 (let ((?x14658 (- (- (- (- (+ (- (- ?x11494 ?x14647) ?x14649) ?x14406) ?x14409) ?x14653) ?x14655) ?x14657)))
 (= (- (- ?x14658 ?x14659) ?x14661) 0.0))))))))))))))))
(assert
 (let ((?x14112 (* l_0_10_61 l_0_10_61)))
 (= (+ (- (* l_0_10_1 l_0_10_1) (* l_0_10_46 l_0_10_46)) ?x14112) 0.0)))
(assert
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14271 (* ?x14210 l_0_10_64)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14266 (* ?x14150 l_0_10_49)))
 (= (+ (- (* (* 2.0 l_0_10_1) l_0_10_4) ?x14266) ?x14271) 0.0))))))
(assert
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14333 (* ?x14210 l_0_10_67)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14330 (* ?x14150 l_0_10_52)))
 (= (+ (- (* (* 2.0 l_0_10_1) l_0_10_7) ?x14330) ?x14333) 0.0))))))
(assert
 (let ((?x14210 (* 2.0 l_0_10_61)))
 (let ((?x14413 (* ?x14210 l_0_10_71)))
 (let ((?x14150 (* 2.0 l_0_10_46)))
 (let ((?x14411 (* ?x14150 l_0_10_56)))
 (= (+ (- (* (* 2.0 l_0_10_1) l_0_10_11) ?x14411) ?x14413) 0.0))))))
(assert
 (let ((?x13654 (* 2.0 l_0_10_63)))
 (let ((?x13990 (* ?x13654 l_0_10_65)))
 (let ((?x13651 (* 2.0 l_0_10_62)))
 (let ((?x13986 (* ?x13651 l_0_10_64)))
 (let ((?x13648 (* 2.0 l_0_10_48)))
 (let ((?x13982 (* ?x13648 l_0_10_50)))
 (let ((?x13645 (* 2.0 l_0_10_47)))
 (let ((?x13978 (* ?x13645 l_0_10_49)))
 (let ((?x13820 (* l_0_10_36 l_0_10_36)))
 (let ((?x14718 (* 2.0 ?x13820)))
 (let ((?x13817 (* l_0_10_35 l_0_10_35)))
 (let ((?x14716 (* 2.0 ?x13817)))
 (let ((?x13814 (* l_0_10_34 l_0_10_34)))
 (let ((?x14714 (* 2.0 ?x13814)))
 (let ((?x14255 (* 2.0 l_0_10_3)))
 (let ((?x14256 (* ?x14255 l_0_10_5)))
 (let ((?x14252 (* 2.0 l_0_10_2)))
 (let ((?x14253 (* ?x14252 l_0_10_4)))
 (let ((?x14709 (- (+ (* (* (- 2.0) l_0_10_19) l_0_10_19) ?x14253) (* (* 2.0 l_0_10_20) l_0_10_20))))
 (let ((?x14717 (+ (+ (+ (- ?x14709 (* (* 2.0 l_0_10_21) l_0_10_21)) ?x14256) ?x14714) ?x14716)))
 (let ((?x14724 (- (- (- (+ ?x14717 ?x14718) ?x13978) ?x13982) (* (* 2.0 l_0_10_49) l_0_10_49))))
 (let ((?x14730 (- (- ?x14724 (* (* 2.0 l_0_10_50) l_0_10_50)) (* (* 2.0 l_0_10_51) l_0_10_51))))
 (let ((?x14736 (+ (+ (+ (+ ?x14730 ?x13986) ?x13990) (* 2.0 (* l_0_10_64 l_0_10_64))) (* 2.0 (* l_0_10_65 l_0_10_65)))))
 (= (+ ?x14736 (* 2.0 (* l_0_10_66 l_0_10_66))) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x14489 (* l_0_10_81 l_0_10_81)))
 (let ((?x14487 (* l_0_10_80 l_0_10_80)))
 (let ((?x14485 (* l_0_10_79 l_0_10_79)))
 (let ((?x13854 (* l_0_10_66 l_0_10_66)))
 (let ((?x13851 (* l_0_10_65 l_0_10_65)))
 (let ((?x13848 (* l_0_10_64 l_0_10_64)))
 (let ((?x13654 (* 2.0 l_0_10_63)))
 (let ((?x13735 (* ?x13654 l_0_10_68)))
 (let ((?x13651 (* 2.0 l_0_10_62)))
 (let ((?x13732 (* ?x13651 l_0_10_67)))
 (let ((?x13918 (* l_0_10_51 l_0_10_51)))
 (let ((?x10937 (* l_0_10_50 l_0_10_50)))
 (let ((?x13913 (* l_0_10_49 l_0_10_49)))
 (let ((?x13648 (* 2.0 l_0_10_48)))
 (let ((?x13729 (* ?x13648 l_0_10_53)))
 (let ((?x13645 (* 2.0 l_0_10_47)))
 (let ((?x13726 (* ?x13645 l_0_10_52)))
 (let ((?x14255 (* 2.0 l_0_10_3)))
 (let ((?x14325 (* ?x14255 l_0_10_8)))
 (let ((?x14252 (* 2.0 l_0_10_2)))
 (let ((?x14323 (* ?x14252 l_0_10_7)))
 (let ((?x14752 (- (+ (* (* (- 4.0) l_0_10_19) l_0_10_22) ?x14323) (* (* 4.0 l_0_10_20) l_0_10_23))))
 (let ((?x14759 (+ (+ (- ?x14752 (* (* 4.0 l_0_10_21) l_0_10_24)) ?x14325) (* (* 4.0 l_0_10_34) l_0_10_37))))
 (let ((?x14765 (+ (+ ?x14759 (* (* 4.0 l_0_10_35) l_0_10_38)) (* (* 4.0 l_0_10_36) l_0_10_39))))
 (let ((?x14771 (+ (- (- (- ?x14765 ?x13726) ?x13729) (* (* 4.0 l_0_10_49) l_0_10_52)) ?x13913)))
 (let ((?x14778 (- (+ (- ?x14771 (* (* 4.0 l_0_10_50) l_0_10_53)) ?x10937) (* (* 4.0 l_0_10_51) l_0_10_54))))
 (let ((?x14784 (+ (+ (+ (+ ?x14778 ?x13918) ?x13732) ?x13735) (* (* 4.0 l_0_10_64) l_0_10_67))))
 (let ((?x14792 (+ (- (+ (- ?x14784 ?x13848) (* (* 4.0 l_0_10_65) l_0_10_68)) ?x13851) (* (* 4.0 l_0_10_66) l_0_10_69))))
 (= (+ (+ (+ (- ?x14792 ?x13854) ?x14485) ?x14487) ?x14489) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x13654 (* 2.0 l_0_10_63)))
 (let ((?x13655 (* ?x13654 l_0_10_72)))
 (let ((?x13651 (* 2.0 l_0_10_62)))
 (let ((?x13652 (* ?x13651 l_0_10_71)))
 (let ((?x13648 (* 2.0 l_0_10_48)))
 (let ((?x13649 (* ?x13648 l_0_10_57)))
 (let ((?x13645 (* 2.0 l_0_10_47)))
 (let ((?x13646 (* ?x13645 l_0_10_56)))
 (let ((?x13820 (* l_0_10_36 l_0_10_36)))
 (let ((?x13817 (* l_0_10_35 l_0_10_35)))
 (let ((?x13814 (* l_0_10_34 l_0_10_34)))
 (let ((?x13896 (* l_0_10_21 l_0_10_21)))
 (let ((?x13892 (* l_0_10_20 l_0_10_20)))
 (let ((?x7449 (* l_0_10_19 l_0_10_19)))
 (let ((?x14396 (* 2.0 l_0_10_12)))
 (let ((?x14397 (* ?x14396 l_0_10_3)))
 (let ((?x14393 (* 2.0 l_0_10_11)))
 (let ((?x14394 (* ?x14393 l_0_10_2)))
 (let ((?x8533 (- (+ (- (+ ?x14394 ?x14397) (* (* 4.0 l_0_10_19) l_0_10_26)) ?x7449) (* (* 4.0 l_0_10_20) l_0_10_27))))
 (let ((?x14818 (+ (+ (- (+ ?x8533 ?x13892) (* (* 4.0 l_0_10_21) l_0_10_28)) ?x13896) (* (* 4.0 l_0_10_34) l_0_10_41))))
 (let ((?x14824 (+ (- (+ (- ?x14818 ?x13814) (* (* 4.0 l_0_10_35) l_0_10_42)) ?x13817) (* (* 4.0 l_0_10_36) l_0_10_43))))
 (let ((?x14829 (- (- (- (- ?x14824 ?x13820) ?x13646) ?x13649) (* (* 4.0 l_0_10_49) l_0_10_56))))
 (let ((?x14833 (- (- ?x14829 (* (* 4.0 l_0_10_50) l_0_10_57)) (* (* 4.0 l_0_10_51) l_0_10_58))))
 (let ((?x14839 (+ (+ (+ (+ ?x14833 ?x13652) ?x13655) (* (* 4.0 l_0_10_64) l_0_10_71)) (* (* 4.0 l_0_10_65) l_0_10_72))))
 (= (+ ?x14839 (* (* 4.0 l_0_10_66) l_0_10_73)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x13854 (* l_0_10_66 l_0_10_66)))
 (let ((?x13851 (* l_0_10_65 l_0_10_65)))
 (let ((?x13848 (* l_0_10_64 l_0_10_64)))
 (let ((?x14480 (* l_0_10_6 l_0_10_6)))
 (let ((?x13918 (* l_0_10_51 l_0_10_51)))
 (let ((?x10937 (* l_0_10_50 l_0_10_50)))
 (let ((?x14478 (* l_0_10_5 l_0_10_5)))
 (let ((?x4213 (- (+ (- (* l_0_10_4 l_0_10_4) (* l_0_10_49 l_0_10_49)) ?x14478) ?x10937)))
 (= (+ (+ (+ (+ (- ?x4213 ?x13918) ?x14480) ?x13848) ?x13851) ?x13854) 0.0))))))))))
(assert
 (let ((?x14896 (* 2.0 l_0_10_66)))
 (let ((?x14897 (* ?x14896 l_0_10_69)))
 (let ((?x14893 (* 2.0 l_0_10_65)))
 (let ((?x14894 (* ?x14893 l_0_10_68)))
 (let ((?x14890 (* 2.0 l_0_10_64)))
 (let ((?x14891 (* ?x14890 l_0_10_67)))
 (let ((?x14522 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x14728 (* 2.0 l_0_10_51)))
 (let ((?x14887 (* ?x14728 l_0_10_54)))
 (let ((?x14725 (* 2.0 l_0_10_50)))
 (let ((?x14885 (* ?x14725 l_0_10_53)))
 (let ((?x14519 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x14722 (* 2.0 l_0_10_49)))
 (let ((?x4270 (* ?x14722 l_0_10_52)))
 (let ((?x14513 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x14895 (+ (+ (+ (- (- (+ (- ?x14513 ?x4270) ?x14519) ?x14885) ?x14887) ?x14522) ?x14891) ?x14894)))
 (= (+ ?x14895 ?x14897) 0.0))))))))))))))))))
(assert
 (let ((?x14896 (* 2.0 l_0_10_66)))
 (let ((?x14921 (* ?x14896 l_0_10_73)))
 (let ((?x14893 (* 2.0 l_0_10_65)))
 (let ((?x14919 (* ?x14893 l_0_10_72)))
 (let ((?x14890 (* 2.0 l_0_10_64)))
 (let ((?x14917 (* ?x14890 l_0_10_71)))
 (let ((?x14728 (* 2.0 l_0_10_51)))
 (let ((?x14915 (* ?x14728 l_0_10_58)))
 (let ((?x14725 (* 2.0 l_0_10_50)))
 (let ((?x14913 (* ?x14725 l_0_10_57)))
 (let ((?x14722 (* 2.0 l_0_10_49)))
 (let ((?x14911 (* ?x14722 l_0_10_56)))
 (let ((?x11301 (* 2.0 l_0_10_13)))
 (let ((?x11303 (* ?x11301 l_0_10_6)))
 (let ((?x14396 (* 2.0 l_0_10_12)))
 (let ((?x11272 (* ?x14396 l_0_10_5)))
 (let ((?x14914 (- (- (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x11272) ?x11303) ?x14911) ?x14913)))
 (= (+ (+ (+ (- ?x14914 ?x14915) ?x14917) ?x14919) ?x14921) 0.0)))))))))))))))))))
(assert
 (let ((?x14598 (* l_0_10_9 l_0_10_9)))
 (let ((?x14588 (* l_0_10_8 l_0_10_8)))
 (let ((?x14955 (* l_0_10_70 l_0_10_70)))
 (let ((?x14585 (* l_0_10_7 l_0_10_7)))
 (let ((?x14952 (* l_0_10_69 l_0_10_69)))
 (let ((?x14950 (* l_0_10_68 l_0_10_68)))
 (let ((?x14948 (* l_0_10_67 l_0_10_67)))
 (let ((?x14946 (* l_0_10_55 l_0_10_55)))
 (let ((?x14944 (* l_0_10_54 l_0_10_54)))
 (let ((?x11866 (* l_0_10_53 l_0_10_53)))
 (let ((?x14945 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_52 l_0_10_52)) ?x11866) ?x14944)))
 (let ((?x14957 (+ (+ (+ (+ (+ (+ (- ?x14945 ?x14946) ?x14948) ?x14950) ?x14952) ?x14585) ?x14955) ?x14588)))
 (= (+ ?x14957 ?x14598) 0.0))))))))))))))
(assert
 (let ((?x14987 (* (* 2.0 l_0_10_70) l_0_10_74)))
 (let ((?x14984 (* (* 2.0 l_0_10_69) l_0_10_73)))
 (let ((?x14981 (* (* 2.0 l_0_10_68) l_0_10_72)))
 (let ((?x14978 (* (* 2.0 l_0_10_67) l_0_10_71)))
 (let ((?x14974 (* 2.0 l_0_10_55)))
 (let ((?x14975 (* ?x14974 l_0_10_59)))
 (let ((?x14971 (* 2.0 l_0_10_54)))
 (let ((?x14972 (* ?x14971 l_0_10_58)))
 (let ((?x8648 (* 2.0 l_0_10_53)))
 (let ((?x14969 (* ?x8648 l_0_10_57)))
 (let ((?x4362 (* 2.0 l_0_10_52)))
 (let ((?x4376 (* ?x4362 l_0_10_56)))
 (let ((?x11301 (* 2.0 l_0_10_13)))
 (let ((?x14619 (* ?x11301 l_0_10_9)))
 (let ((?x14396 (* 2.0 l_0_10_12)))
 (let ((?x14617 (* ?x14396 l_0_10_8)))
 (let ((?x14393 (* 2.0 l_0_10_11)))
 (let ((?x14615 (* ?x14393 l_0_10_7)))
 (let ((?x4380 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x14615) ?x14617) ?x14619) ?x4376)))
 (let ((?x14988 (+ (+ (+ (+ (- (- (- ?x4380 ?x14969) ?x14972) ?x14975) ?x14978) ?x14981) ?x14984) ?x14987)))
 (= ?x14988 0.0))))))))))))))))))))))
(assert
 (let ((?x15032 (* l_0_10_75 l_0_10_75)))
 (let ((?x15030 (* l_0_10_74 l_0_10_74)))
 (let ((?x15028 (* l_0_10_73 l_0_10_73)))
 (let ((?x15026 (* l_0_10_72 l_0_10_72)))
 (let ((?x15024 (* l_0_10_71 l_0_10_71)))
 (let ((?x15022 (* l_0_10_60 l_0_10_60)))
 (let ((?x15020 (* l_0_10_59 l_0_10_59)))
 (let ((?x15018 (* l_0_10_58 l_0_10_58)))
 (let ((?x15016 (* l_0_10_57 l_0_10_57)))
 (let ((?x15014 (* l_0_10_56 l_0_10_56)))
 (let ((?x14649 (* l_0_10_15 l_0_10_15)))
 (let ((?x14647 (* l_0_10_14 l_0_10_14)))
 (let ((?x8246 (* l_0_10_13 l_0_10_13)))
 (let ((?x15012 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x8246) ?x14647)))
 (let ((?x15025 (+ (- (- (- (- (- (+ ?x15012 ?x14649) ?x15014) ?x15016) ?x15018) ?x15020) ?x15022) ?x15024)))
 (= (+ (+ (+ (+ ?x15025 ?x15026) ?x15028) ?x15030) ?x15032) 0.0)))))))))))))))))
(assert
 (let ((?x14276 (* 2.0 l_0_10_78)))
 (let ((?x14277 (* ?x14276 l_0_10_80)))
 (let ((?x14273 (* 2.0 l_0_10_77)))
 (let ((?x14274 (* ?x14273 l_0_10_79)))
 (let ((?x14896 (* 2.0 l_0_10_66)))
 (let ((?x14897 (* ?x14896 l_0_10_69)))
 (let ((?x14893 (* 2.0 l_0_10_65)))
 (let ((?x14894 (* ?x14893 l_0_10_68)))
 (let ((?x14890 (* 2.0 l_0_10_64)))
 (let ((?x14891 (* ?x14890 l_0_10_67)))
 (let ((?x13654 (* 2.0 l_0_10_63)))
 (let ((?x13990 (* ?x13654 l_0_10_65)))
 (let ((?x13651 (* 2.0 l_0_10_62)))
 (let ((?x13986 (* ?x13651 l_0_10_64)))
 (let ((?x14728 (* 2.0 l_0_10_51)))
 (let ((?x14887 (* ?x14728 l_0_10_54)))
 (let ((?x14725 (* 2.0 l_0_10_50)))
 (let ((?x14885 (* ?x14725 l_0_10_53)))
 (let ((?x14722 (* 2.0 l_0_10_49)))
 (let ((?x4270 (* ?x14722 l_0_10_52)))
 (let ((?x13648 (* 2.0 l_0_10_48)))
 (let ((?x13982 (* ?x13648 l_0_10_50)))
 (let ((?x13645 (* 2.0 l_0_10_47)))
 (let ((?x13978 (* ?x13645 l_0_10_49)))
 (let ((?x15099 (* 2.0 l_0_10_36)))
 (let ((?x15100 (* ?x15099 l_0_10_39)))
 (let ((?x15096 (* 2.0 l_0_10_35)))
 (let ((?x15097 (* ?x15096 l_0_10_38)))
 (let ((?x15093 (* 2.0 l_0_10_34)))
 (let ((?x15094 (* ?x15093 l_0_10_37)))
 (let ((?x14710 (* 2.0 l_0_10_21)))
 (let ((?x15087 (* ?x14710 l_0_10_24)))
 (let ((?x14707 (* 2.0 l_0_10_20)))
 (let ((?x15085 (* ?x14707 l_0_10_23)))
 (let ((?x15082 (* 2.0 l_0_10_19)))
 (let ((?x15083 (* ?x15082 l_0_10_22)))
 (let ((?x15047 (- (* (* (- 2.0) l_0_10_109) l_0_10_112) (* (* 2.0 l_0_10_110) l_0_10_113))))
 (let ((?x15053 (- (- ?x15047 (* (* 2.0 l_0_10_111) l_0_10_114)) (* (* 2.0 l_0_10_124) l_0_10_127))))
 (let ((?x15059 (- (- ?x15053 (* (* 2.0 l_0_10_125) l_0_10_128)) (* (* 2.0 l_0_10_126) l_0_10_129))))
 (let ((?x15065 (- (- ?x15059 (* (* 2.0 l_0_10_139) l_0_10_142)) (* (* 2.0 l_0_10_140) l_0_10_143))))
 (let ((?x15071 (- (- ?x15065 (* (* 2.0 l_0_10_141) l_0_10_144)) (* (* 2.0 l_0_10_154) l_0_10_157))))
 (let ((?x15077 (- (- ?x15071 (* (* 2.0 l_0_10_155) l_0_10_158)) (* (* 2.0 l_0_10_156) l_0_10_159))))
 (let ((?x15081 (- (- ?x15077 (* (* 4.0 l_0_10_17) l_0_10_22)) (* (* 4.0 l_0_10_18) l_0_10_23))))
 (let ((?x15090 (+ (- (- (- ?x15081 ?x15083) ?x15085) ?x15087) (* (* 4.0 l_0_10_32) l_0_10_37))))
 (let ((?x15101 (+ (+ (+ (+ ?x15090 (* (* 4.0 l_0_10_33) l_0_10_38)) ?x15094) ?x15097) ?x15100)))
 (let ((?x15107 (- (+ (- (+ ?x15101 ?x13978) (* (* 4.0 l_0_10_47) l_0_10_52)) ?x13982) (* (* 4.0 l_0_10_48) l_0_10_53))))
 (let ((?x15113 (+ (- (- (- (- ?x15107 ?x4270) ?x14885) ?x14887) ?x13986) (* (* 4.0 l_0_10_62) l_0_10_67))))
 (let ((?x15118 (+ (+ (+ (- ?x15113 ?x13990) (* (* 4.0 l_0_10_63) l_0_10_68)) ?x14891) ?x14894)))
 (let ((?x15124 (- (+ (+ (+ ?x15118 ?x14897) ?x14274) ?x14277) (* (* 2.0 l_0_10_94) l_0_10_97))))
 (let ((?x15130 (- (- ?x15124 (* (* 2.0 l_0_10_95) l_0_10_98)) (* (* 2.0 l_0_10_96) l_0_10_99))))
 (= ?x15130 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14896 (* 2.0 l_0_10_66)))
 (let ((?x14921 (* ?x14896 l_0_10_73)))
 (let ((?x14893 (* 2.0 l_0_10_65)))
 (let ((?x14919 (* ?x14893 l_0_10_72)))
 (let ((?x14890 (* 2.0 l_0_10_64)))
 (let ((?x14917 (* ?x14890 l_0_10_71)))
 (let ((?x14728 (* 2.0 l_0_10_51)))
 (let ((?x14915 (* ?x14728 l_0_10_58)))
 (let ((?x14725 (* 2.0 l_0_10_50)))
 (let ((?x14913 (* ?x14725 l_0_10_57)))
 (let ((?x14722 (* 2.0 l_0_10_49)))
 (let ((?x14911 (* ?x14722 l_0_10_56)))
 (let ((?x15099 (* 2.0 l_0_10_36)))
 (let ((?x15226 (* ?x15099 l_0_10_43)))
 (let ((?x15096 (* 2.0 l_0_10_35)))
 (let ((?x15224 (* ?x15096 l_0_10_42)))
 (let ((?x15093 (* 2.0 l_0_10_34)))
 (let ((?x15222 (* ?x15093 l_0_10_41)))
 (let ((?x13641 (* 2.0 l_0_10_33)))
 (let ((?x13974 (* ?x13641 l_0_10_35)))
 (let ((?x13637 (* 2.0 l_0_10_32)))
 (let ((?x13970 (* ?x13637 l_0_10_34)))
 (let ((?x14710 (* 2.0 l_0_10_21)))
 (let ((?x15214 (* ?x14710 l_0_10_28)))
 (let ((?x14707 (* 2.0 l_0_10_20)))
 (let ((?x15212 (* ?x14707 l_0_10_27)))
 (let ((?x15082 (* 2.0 l_0_10_19)))
 (let ((?x15210 (* ?x15082 l_0_10_26)))
 (let ((?x13633 (* 2.0 l_0_10_18)))
 (let ((?x13966 (* ?x13633 l_0_10_20)))
 (let ((?x13629 (* 2.0 l_0_10_17)))
 (let ((?x13962 (* ?x13629 l_0_10_19)))
 (let ((?x15175 (- (* (* (- 2.0) l_0_10_101) l_0_10_94) (* (* 2.0 l_0_10_102) l_0_10_95))))
 (let ((?x15181 (- (- ?x15175 (* (* 2.0 l_0_10_103) l_0_10_96)) (* (* 2.0 l_0_10_109) l_0_10_116))))
 (let ((?x15185 (- (- ?x15181 (* (* 2.0 l_0_10_110) l_0_10_117)) (* (* 2.0 l_0_10_111) l_0_10_118))))
 (let ((?x15189 (- (- ?x15185 (* (* 2.0 l_0_10_124) l_0_10_131)) (* (* 2.0 l_0_10_125) l_0_10_132))))
 (let ((?x15193 (- (- ?x15189 (* (* 2.0 l_0_10_126) l_0_10_133)) (* (* 2.0 l_0_10_139) l_0_10_146))))
 (let ((?x15197 (- (- ?x15193 (* (* 2.0 l_0_10_140) l_0_10_147)) (* (* 2.0 l_0_10_141) l_0_10_148))))
 (let ((?x15201 (- (- ?x15197 (* (* 2.0 l_0_10_154) l_0_10_161)) (* (* 2.0 l_0_10_155) l_0_10_162))))
 (let ((?x15206 (- (+ (- ?x15201 (* (* 2.0 l_0_10_156) l_0_10_163)) ?x13962) (* (* 4.0 l_0_10_17) l_0_10_26))))
 (let ((?x15213 (- (- (- (+ ?x15206 ?x13966) (* (* 4.0 l_0_10_18) l_0_10_27)) ?x15210) ?x15212)))
 (let ((?x15219 (- (+ (- (- ?x15213 ?x15214) ?x13970) (* (* 4.0 l_0_10_32) l_0_10_41)) ?x13974)))
 (let ((?x15227 (+ (+ (+ (+ ?x15219 (* (* 4.0 l_0_10_33) l_0_10_42)) ?x15222) ?x15224) ?x15226)))
 (let ((?x15231 (- (- ?x15227 (* (* 4.0 l_0_10_47) l_0_10_56)) (* (* 4.0 l_0_10_48) l_0_10_57))))
 (let ((?x15236 (+ (- (- (- ?x15231 ?x14911) ?x14913) ?x14915) (* (* 4.0 l_0_10_62) l_0_10_71))))
 (let ((?x15241 (+ (+ (+ (+ ?x15236 (* (* 4.0 l_0_10_63) l_0_10_72)) ?x14917) ?x14919) ?x14921)))
 (= ?x15241 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14534 (* 2.0 l_0_10_81)))
 (let ((?x14535 (* ?x14534 l_0_10_84)))
 (let ((?x14531 (* 2.0 l_0_10_80)))
 (let ((?x14532 (* ?x14531 l_0_10_83)))
 (let ((?x14528 (* 2.0 l_0_10_79)))
 (let ((?x14529 (* ?x14528 l_0_10_82)))
 (let ((?x14955 (* l_0_10_70 l_0_10_70)))
 (let ((?x15321 (* 2.0 ?x14955)))
 (let ((?x14952 (* l_0_10_69 l_0_10_69)))
 (let ((?x15319 (* 2.0 ?x14952)))
 (let ((?x14950 (* l_0_10_68 l_0_10_68)))
 (let ((?x15317 (* 2.0 ?x14950)))
 (let ((?x14948 (* l_0_10_67 l_0_10_67)))
 (let ((?x15315 (* 2.0 ?x14948)))
 (let ((?x14896 (* 2.0 l_0_10_66)))
 (let ((?x14897 (* ?x14896 l_0_10_69)))
 (let ((?x14893 (* 2.0 l_0_10_65)))
 (let ((?x14894 (* ?x14893 l_0_10_68)))
 (let ((?x14890 (* 2.0 l_0_10_64)))
 (let ((?x14891 (* ?x14890 l_0_10_67)))
 (let ((?x14728 (* 2.0 l_0_10_51)))
 (let ((?x14887 (* ?x14728 l_0_10_54)))
 (let ((?x14725 (* 2.0 l_0_10_50)))
 (let ((?x14885 (* ?x14725 l_0_10_53)))
 (let ((?x14722 (* 2.0 l_0_10_49)))
 (let ((?x4270 (* ?x14722 l_0_10_52)))
 (let ((?x15298 (* l_0_10_40 l_0_10_40)))
 (let ((?x15299 (* 2.0 ?x15298)))
 (let ((?x15295 (* l_0_10_39 l_0_10_39)))
 (let ((?x15296 (* 2.0 ?x15295)))
 (let ((?x15292 (* l_0_10_38 l_0_10_38)))
 (let ((?x15293 (* 2.0 ?x15292)))
 (let ((?x15289 (* l_0_10_37 l_0_10_37)))
 (let ((?x15290 (* 2.0 ?x15289)))
 (let ((?x15282 (- (* (* (- 2.0) l_0_10_22) l_0_10_22) (* (* 2.0 l_0_10_23) l_0_10_23))))
 (let ((?x15288 (- (- ?x15282 (* (* 2.0 l_0_10_24) l_0_10_24)) (* (* 2.0 l_0_10_25) l_0_10_25))))
 (let ((?x15303 (+ (+ (+ (+ (+ (+ (+ ?x15288 ?x15290) ?x15293) ?x15296) ?x15299) ?x4270) ?x14885) ?x14887)))
 (let ((?x15307 (- (- ?x15303 (* (* 2.0 l_0_10_52) l_0_10_52)) (* (* 2.0 l_0_10_53) l_0_10_53))))
 (let ((?x15311 (- (- ?x15307 (* (* 2.0 l_0_10_54) l_0_10_54)) (* (* 2.0 l_0_10_55) l_0_10_55))))
 (let ((?x15322 (+ (+ (+ (+ (- (- (- ?x15311 ?x14891) ?x14894) ?x14897) ?x15315) ?x15317) ?x15319) ?x15321)))
 (= (+ (+ (+ ?x15322 ?x14529) ?x14532) ?x14535) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14534 (* 2.0 l_0_10_81)))
 (let ((?x14563 (* ?x14534 l_0_10_88)))
 (let ((?x14531 (* 2.0 l_0_10_80)))
 (let ((?x14561 (* ?x14531 l_0_10_87)))
 (let ((?x14528 (* 2.0 l_0_10_79)))
 (let ((?x14559 (* ?x14528 l_0_10_86)))
 (let ((?x14896 (* 2.0 l_0_10_66)))
 (let ((?x14921 (* ?x14896 l_0_10_73)))
 (let ((?x14893 (* 2.0 l_0_10_65)))
 (let ((?x14919 (* ?x14893 l_0_10_72)))
 (let ((?x14890 (* 2.0 l_0_10_64)))
 (let ((?x14917 (* ?x14890 l_0_10_71)))
 (let ((?x14728 (* 2.0 l_0_10_51)))
 (let ((?x14915 (* ?x14728 l_0_10_58)))
 (let ((?x14725 (* 2.0 l_0_10_50)))
 (let ((?x14913 (* ?x14725 l_0_10_57)))
 (let ((?x14722 (* 2.0 l_0_10_49)))
 (let ((?x14911 (* ?x14722 l_0_10_56)))
 (let ((?x15099 (* 2.0 l_0_10_36)))
 (let ((?x15100 (* ?x15099 l_0_10_39)))
 (let ((?x15096 (* 2.0 l_0_10_35)))
 (let ((?x15097 (* ?x15096 l_0_10_38)))
 (let ((?x15093 (* 2.0 l_0_10_34)))
 (let ((?x15094 (* ?x15093 l_0_10_37)))
 (let ((?x14710 (* 2.0 l_0_10_21)))
 (let ((?x15087 (* ?x14710 l_0_10_24)))
 (let ((?x14707 (* 2.0 l_0_10_20)))
 (let ((?x15085 (* ?x14707 l_0_10_23)))
 (let ((?x15082 (* 2.0 l_0_10_19)))
 (let ((?x15083 (* ?x15082 l_0_10_22)))
 (let ((?x12412 (- (- (+ (+ ?x15083 ?x15085) ?x15087) (* (* 4.0 l_0_10_22) l_0_10_26)) (* (* 4.0 l_0_10_23) l_0_10_27))))
 (let ((?x5085 (- (- ?x12412 (* (* 4.0 l_0_10_24) l_0_10_28)) (* (* 4.0 l_0_10_25) l_0_10_29))))
 (let ((?x15347 (+ (- (- (- ?x5085 ?x15094) ?x15097) ?x15100) (* (* 4.0 l_0_10_37) l_0_10_41))))
 (let ((?x15353 (+ (+ ?x15347 (* (* 4.0 l_0_10_38) l_0_10_42)) (* (* 4.0 l_0_10_39) l_0_10_43))))
 (let ((?x15359 (+ (+ (+ (+ ?x15353 (* (* 4.0 l_0_10_40) l_0_10_44)) ?x14911) ?x14913) ?x14915)))
 (let ((?x15365 (- (- ?x15359 (* (* 4.0 l_0_10_52) l_0_10_56)) (* (* 4.0 l_0_10_53) l_0_10_57))))
 (let ((?x15371 (- (- ?x15365 (* (* 4.0 l_0_10_54) l_0_10_58)) (* (* 4.0 l_0_10_55) l_0_10_59))))
 (let ((?x15377 (+ (- (- (- ?x15371 ?x14917) ?x14919) ?x14921) (* (* 4.0 l_0_10_67) l_0_10_71))))
 (let ((?x15383 (+ (+ ?x15377 (* (* 4.0 l_0_10_68) l_0_10_72)) (* (* 4.0 l_0_10_69) l_0_10_73))))
 (let ((?x15389 (+ (+ (+ (+ ?x15383 (* (* 4.0 l_0_10_70) l_0_10_74)) ?x14559) ?x14561) ?x14563)))
 (= ?x15389 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15454 (* l_0_10_45 l_0_10_45)))
 (let ((?x15455 (* 2.0 ?x15454)))
 (let ((?x15451 (* l_0_10_44 l_0_10_44)))
 (let ((?x15452 (* 2.0 ?x15451)))
 (let ((?x15448 (* l_0_10_43 l_0_10_43)))
 (let ((?x15449 (* 2.0 ?x15448)))
 (let ((?x15445 (* l_0_10_42 l_0_10_42)))
 (let ((?x15446 (* 2.0 ?x15445)))
 (let ((?x15442 (* l_0_10_41 l_0_10_41)))
 (let ((?x15443 (* 2.0 ?x15442)))
 (let ((?x15099 (* 2.0 l_0_10_36)))
 (let ((?x15226 (* ?x15099 l_0_10_43)))
 (let ((?x15096 (* 2.0 l_0_10_35)))
 (let ((?x15224 (* ?x15096 l_0_10_42)))
 (let ((?x15093 (* 2.0 l_0_10_34)))
 (let ((?x15222 (* ?x15093 l_0_10_41)))
 (let ((?x14710 (* 2.0 l_0_10_21)))
 (let ((?x15214 (* ?x14710 l_0_10_28)))
 (let ((?x14707 (* 2.0 l_0_10_20)))
 (let ((?x15212 (* ?x14707 l_0_10_27)))
 (let ((?x15082 (* 2.0 l_0_10_19)))
 (let ((?x15210 (* ?x15082 l_0_10_26)))
 (let ((?x15429 (- (- (+ (+ ?x15210 ?x15212) ?x15214) (* (* 2.0 l_0_10_26) l_0_10_26)) (* (* 2.0 l_0_10_27) l_0_10_27))))
 (let ((?x15435 (- (- ?x15429 (* (* 2.0 l_0_10_28) l_0_10_28)) (* (* 2.0 l_0_10_29) l_0_10_29))))
 (let ((?x15441 (- (- (- (- ?x15435 (* (* 2.0 l_0_10_30) l_0_10_30)) ?x15222) ?x15224) ?x15226)))
 (let ((?x15459 (- (+ (+ (+ (+ (+ ?x15441 ?x15443) ?x15446) ?x15449) ?x15452) ?x15455) (* (* 2.0 l_0_10_56) l_0_10_56))))
 (let ((?x15465 (- (- ?x15459 (* (* 2.0 l_0_10_57) l_0_10_57)) (* (* 2.0 l_0_10_58) l_0_10_58))))
 (let ((?x15471 (- (- ?x15465 (* (* 2.0 l_0_10_59) l_0_10_59)) (* (* 2.0 l_0_10_60) l_0_10_60))))
 (let ((?x15475 (+ (+ ?x15471 (* 2.0 (* l_0_10_71 l_0_10_71))) (* 2.0 (* l_0_10_72 l_0_10_72)))))
 (let ((?x15479 (+ (+ ?x15475 (* 2.0 (* l_0_10_73 l_0_10_73))) (* 2.0 (* l_0_10_74 l_0_10_74)))))
 (= (+ ?x15479 (* 2.0 (* l_0_10_75 l_0_10_75))) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x15581 (* l_0_10_99 l_0_10_99)))
 (let ((?x15579 (* l_0_10_98 l_0_10_98)))
 (let ((?x15577 (* l_0_10_97 l_0_10_97)))
 (let ((?x14276 (* 2.0 l_0_10_78)))
 (let ((?x14338 (* ?x14276 l_0_10_83)))
 (let ((?x14273 (* 2.0 l_0_10_77)))
 (let ((?x14336 (* ?x14273 l_0_10_82)))
 (let ((?x13654 (* 2.0 l_0_10_63)))
 (let ((?x13735 (* ?x13654 l_0_10_68)))
 (let ((?x13651 (* 2.0 l_0_10_62)))
 (let ((?x13732 (* ?x13651 l_0_10_67)))
 (let ((?x13648 (* 2.0 l_0_10_48)))
 (let ((?x13729 (* ?x13648 l_0_10_53)))
 (let ((?x13645 (* 2.0 l_0_10_47)))
 (let ((?x13726 (* ?x13645 l_0_10_52)))
 (let ((?x15529 (* l_0_10_160 l_0_10_160)))
 (let ((?x15527 (* l_0_10_159 l_0_10_159)))
 (let ((?x15525 (* l_0_10_158 l_0_10_158)))
 (let ((?x15523 (* l_0_10_157 l_0_10_157)))
 (let ((?x15521 (* l_0_10_145 l_0_10_145)))
 (let ((?x15519 (* l_0_10_144 l_0_10_144)))
 (let ((?x15517 (* l_0_10_143 l_0_10_143)))
 (let ((?x15515 (* l_0_10_142 l_0_10_142)))
 (let ((?x15513 (* l_0_10_130 l_0_10_130)))
 (let ((?x15511 (* l_0_10_129 l_0_10_129)))
 (let ((?x15509 (* l_0_10_128 l_0_10_128)))
 (let ((?x15507 (* l_0_10_127 l_0_10_127)))
 (let ((?x15505 (* l_0_10_115 l_0_10_115)))
 (let ((?x15503 (* l_0_10_114 l_0_10_114)))
 (let ((?x15501 (* l_0_10_113 l_0_10_113)))
 (let ((?x15502 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_112 l_0_10_112)) ?x15501)))
 (let ((?x15516 (- (- (- (- (- (- (- ?x15502 ?x15503) ?x15505) ?x15507) ?x15509) ?x15511) ?x15513) ?x15515)))
 (let ((?x15530 (- (- (- (- (- (- (- ?x15516 ?x15517) ?x15519) ?x15521) ?x15523) ?x15525) ?x15527) ?x15529)))
 (let ((?x15536 (- (- ?x15530 (* (* 1.0 l_0_10_22) l_0_10_22)) (* (* 1.0 l_0_10_23) l_0_10_23))))
 (let ((?x15542 (- (- ?x15536 (* (* 1.0 l_0_10_24) l_0_10_24)) (* (* 1.0 l_0_10_25) l_0_10_25))))
 (let ((?x15546 (+ (+ ?x15542 (* 1.0 (* l_0_10_37 l_0_10_37))) (* 1.0 (* l_0_10_38 l_0_10_38)))))
 (let ((?x15550 (+ (+ ?x15546 (* 1.0 (* l_0_10_39 l_0_10_39))) (* 1.0 (* l_0_10_40 l_0_10_40)))))
 (let ((?x15558 (- (- (+ (+ ?x15550 ?x13726) ?x13729) (* (* 1.0 l_0_10_52) l_0_10_52)) (* (* 1.0 l_0_10_53) l_0_10_53))))
 (let ((?x15564 (- (- ?x15558 (* (* 1.0 l_0_10_54) l_0_10_54)) (* (* 1.0 l_0_10_55) l_0_10_55))))
 (let ((?x15570 (+ (+ (- (- ?x15564 ?x13732) ?x13735) (* 1.0 (* l_0_10_67 l_0_10_67))) (* 1.0 (* l_0_10_68 l_0_10_68)))))
 (let ((?x15574 (+ (+ ?x15570 (* 1.0 (* l_0_10_69 l_0_10_69))) (* 1.0 (* l_0_10_70 l_0_10_70)))))
 (= (- (- (- (+ (+ ?x15574 ?x14336) ?x14338) ?x15577) ?x15579) ?x15581) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14276 (* 2.0 l_0_10_78)))
 (let ((?x14417 (* ?x14276 l_0_10_87)))
 (let ((?x14273 (* 2.0 l_0_10_77)))
 (let ((?x14415 (* ?x14273 l_0_10_86)))
 (let ((?x14987 (* (* 2.0 l_0_10_70) l_0_10_74)))
 (let ((?x14984 (* (* 2.0 l_0_10_69) l_0_10_73)))
 (let ((?x14981 (* (* 2.0 l_0_10_68) l_0_10_72)))
 (let ((?x14978 (* (* 2.0 l_0_10_67) l_0_10_71)))
 (let ((?x13654 (* 2.0 l_0_10_63)))
 (let ((?x13655 (* ?x13654 l_0_10_72)))
 (let ((?x13651 (* 2.0 l_0_10_62)))
 (let ((?x13652 (* ?x13651 l_0_10_71)))
 (let ((?x14974 (* 2.0 l_0_10_55)))
 (let ((?x14975 (* ?x14974 l_0_10_59)))
 (let ((?x14971 (* 2.0 l_0_10_54)))
 (let ((?x14972 (* ?x14971 l_0_10_58)))
 (let ((?x8648 (* 2.0 l_0_10_53)))
 (let ((?x14969 (* ?x8648 l_0_10_57)))
 (let ((?x4362 (* 2.0 l_0_10_52)))
 (let ((?x4376 (* ?x4362 l_0_10_56)))
 (let ((?x13648 (* 2.0 l_0_10_48)))
 (let ((?x13649 (* ?x13648 l_0_10_57)))
 (let ((?x13645 (* 2.0 l_0_10_47)))
 (let ((?x13646 (* ?x13645 l_0_10_56)))
 (let ((?x15703 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x15700 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x15697 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x15694 (* (* 2.0 l_0_10_37) l_0_10_41)))
 (let ((?x13641 (* 2.0 l_0_10_33)))
 (let ((?x13724 (* ?x13641 l_0_10_38)))
 (let ((?x13637 (* 2.0 l_0_10_32)))
 (let ((?x13722 (* ?x13637 l_0_10_37)))
 (let ((?x15286 (* 2.0 l_0_10_25)))
 (let ((?x15689 (* ?x15286 l_0_10_29)))
 (let ((?x15283 (* 2.0 l_0_10_24)))
 (let ((?x15687 (* ?x15283 l_0_10_28)))
 (let ((?x15280 (* 2.0 l_0_10_23)))
 (let ((?x15685 (* ?x15280 l_0_10_27)))
 (let ((?x15683 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x13633 (* 2.0 l_0_10_18)))
 (let ((?x13720 (* ?x13633 l_0_10_23)))
 (let ((?x13629 (* 2.0 l_0_10_17)))
 (let ((?x13718 (* ?x13629 l_0_10_22)))
 (let ((?x15627 (- (* (* (- 2.0) l_0_10_100) l_0_10_104) (* (* 2.0 l_0_10_101) l_0_10_97))))
 (let ((?x15631 (- (- ?x15627 (* (* 2.0 l_0_10_102) l_0_10_98)) (* (* 2.0 l_0_10_103) l_0_10_99))))
 (let ((?x15637 (- (- ?x15631 (* (* 2.0 l_0_10_112) l_0_10_116)) (* (* 2.0 l_0_10_113) l_0_10_117))))
 (let ((?x15643 (- (- ?x15637 (* (* 2.0 l_0_10_114) l_0_10_118)) (* (* 2.0 l_0_10_115) l_0_10_119))))
 (let ((?x15649 (- (- ?x15643 (* (* 2.0 l_0_10_127) l_0_10_131)) (* (* 2.0 l_0_10_128) l_0_10_132))))
 (let ((?x15655 (- (- ?x15649 (* (* 2.0 l_0_10_129) l_0_10_133)) (* (* 2.0 l_0_10_130) l_0_10_134))))
 (let ((?x15661 (- (- ?x15655 (* (* 2.0 l_0_10_142) l_0_10_146)) (* (* 2.0 l_0_10_143) l_0_10_147))))
 (let ((?x15667 (- (- ?x15661 (* (* 2.0 l_0_10_144) l_0_10_148)) (* (* 2.0 l_0_10_145) l_0_10_149))))
 (let ((?x15673 (- (- ?x15667 (* (* 2.0 l_0_10_157) l_0_10_161)) (* (* 2.0 l_0_10_158) l_0_10_162))))
 (let ((?x15679 (- (- ?x15673 (* (* 2.0 l_0_10_159) l_0_10_163)) (* (* 2.0 l_0_10_160) l_0_10_164))))
 (let ((?x15691 (- (- (- (- (- (+ (+ ?x15679 ?x13718) ?x13720) ?x15683) ?x15685) ?x15687) ?x15689) ?x13722)))
 (let ((?x15706 (+ (+ (+ (+ (+ (+ (- ?x15691 ?x13724) ?x15694) ?x15697) ?x15700) ?x15703) ?x13646) ?x13649)))
 (let ((?x15713 (+ (- (- (- (- (- (- ?x15706 ?x4376) ?x14969) ?x14972) ?x14975) ?x13652) ?x13655) ?x14978)))
 (= (+ (+ (+ (+ (+ ?x15713 ?x14981) ?x14984) ?x14987) ?x14415) ?x14417) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13641 (* 2.0 l_0_10_33)))
 (let ((?x13642 (* ?x13641 l_0_10_42)))
 (let ((?x13637 (* 2.0 l_0_10_32)))
 (let ((?x13638 (* ?x13637 l_0_10_41)))
 (let ((?x13633 (* 2.0 l_0_10_18)))
 (let ((?x13634 (* ?x13633 l_0_10_27)))
 (let ((?x13629 (* 2.0 l_0_10_17)))
 (let ((?x13630 (* ?x13629 l_0_10_26)))
 (let ((?x15826 (* l_0_10_165 l_0_10_165)))
 (let ((?x15824 (* l_0_10_164 l_0_10_164)))
 (let ((?x15822 (* l_0_10_163 l_0_10_163)))
 (let ((?x15820 (* l_0_10_162 l_0_10_162)))
 (let ((?x15818 (* l_0_10_161 l_0_10_161)))
 (let ((?x15816 (* l_0_10_150 l_0_10_150)))
 (let ((?x15814 (* l_0_10_149 l_0_10_149)))
 (let ((?x15812 (* l_0_10_148 l_0_10_148)))
 (let ((?x15810 (* l_0_10_147 l_0_10_147)))
 (let ((?x15808 (* l_0_10_146 l_0_10_146)))
 (let ((?x15806 (* l_0_10_135 l_0_10_135)))
 (let ((?x15804 (* l_0_10_134 l_0_10_134)))
 (let ((?x15802 (* l_0_10_133 l_0_10_133)))
 (let ((?x15800 (* l_0_10_132 l_0_10_132)))
 (let ((?x15798 (* l_0_10_131 l_0_10_131)))
 (let ((?x15796 (* l_0_10_120 l_0_10_120)))
 (let ((?x15794 (* l_0_10_119 l_0_10_119)))
 (let ((?x15792 (* l_0_10_118 l_0_10_118)))
 (let ((?x15790 (* l_0_10_117 l_0_10_117)))
 (let ((?x15788 (* l_0_10_116 l_0_10_116)))
 (let ((?x15786 (* l_0_10_105 l_0_10_105)))
 (let ((?x15784 (* l_0_10_104 l_0_10_104)))
 (let ((?x15782 (* l_0_10_103 l_0_10_103)))
 (let ((?x15783 (- (- (* (- l_0_10_101) l_0_10_101) (* l_0_10_102 l_0_10_102)) ?x15782)))
 (let ((?x15797 (- (- (- (- (- (- (- ?x15783 ?x15784) ?x15786) ?x15788) ?x15790) ?x15792) ?x15794) ?x15796)))
 (let ((?x15811 (- (- (- (- (- (- (- ?x15797 ?x15798) ?x15800) ?x15802) ?x15804) ?x15806) ?x15808) ?x15810)))
 (let ((?x15825 (- (- (- (- (- (- (- ?x15811 ?x15812) ?x15814) ?x15816) ?x15818) ?x15820) ?x15822) ?x15824)))
 (let ((?x15832 (- (+ (+ (- ?x15825 ?x15826) ?x13630) ?x13634) (* (* 1.0 l_0_10_26) l_0_10_26))))
 (let ((?x15838 (- (- ?x15832 (* (* 1.0 l_0_10_27) l_0_10_27)) (* (* 1.0 l_0_10_28) l_0_10_28))))
 (let ((?x15844 (- (- ?x15838 (* (* 1.0 l_0_10_29) l_0_10_29)) (* (* 1.0 l_0_10_30) l_0_10_30))))
 (let ((?x15850 (+ (+ (- (- ?x15844 ?x13638) ?x13642) (* 1.0 (* l_0_10_41 l_0_10_41))) (* 1.0 (* l_0_10_42 l_0_10_42)))))
 (let ((?x15854 (+ (+ ?x15850 (* 1.0 (* l_0_10_43 l_0_10_43))) (* 1.0 (* l_0_10_44 l_0_10_44)))))
 (let ((?x15859 (- (+ ?x15854 (* 1.0 (* l_0_10_45 l_0_10_45))) (* (* 1.0 l_0_10_56) l_0_10_56))))
 (let ((?x15865 (- (- ?x15859 (* (* 1.0 l_0_10_57) l_0_10_57)) (* (* 1.0 l_0_10_58) l_0_10_58))))
 (let ((?x15871 (- (- ?x15865 (* (* 1.0 l_0_10_59) l_0_10_59)) (* (* 1.0 l_0_10_60) l_0_10_60))))
 (let ((?x15875 (+ (+ ?x15871 (* 1.0 (* l_0_10_71 l_0_10_71))) (* 1.0 (* l_0_10_72 l_0_10_72)))))
 (let ((?x15879 (+ (+ ?x15875 (* 1.0 (* l_0_10_73 l_0_10_73))) (* 1.0 (* l_0_10_74 l_0_10_74)))))
 (= (+ ?x15879 (* 1.0 (* l_0_10_75 l_0_10_75))) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14636 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x14633 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x14630 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x14627 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x14987 (* (* 2.0 l_0_10_70) l_0_10_74)))
 (let ((?x14984 (* (* 2.0 l_0_10_69) l_0_10_73)))
 (let ((?x14981 (* (* 2.0 l_0_10_68) l_0_10_72)))
 (let ((?x14978 (* (* 2.0 l_0_10_67) l_0_10_71)))
 (let ((?x14974 (* 2.0 l_0_10_55)))
 (let ((?x14975 (* ?x14974 l_0_10_59)))
 (let ((?x14971 (* 2.0 l_0_10_54)))
 (let ((?x14972 (* ?x14971 l_0_10_58)))
 (let ((?x8648 (* 2.0 l_0_10_53)))
 (let ((?x14969 (* ?x8648 l_0_10_57)))
 (let ((?x4362 (* 2.0 l_0_10_52)))
 (let ((?x4376 (* ?x4362 l_0_10_56)))
 (let ((?x15298 (* l_0_10_40 l_0_10_40)))
 (let ((?x15295 (* l_0_10_39 l_0_10_39)))
 (let ((?x15292 (* l_0_10_38 l_0_10_38)))
 (let ((?x15289 (* l_0_10_37 l_0_10_37)))
 (let ((?x12299 (* l_0_10_25 l_0_10_25)))
 (let ((?x12283 (* l_0_10_24 l_0_10_24)))
 (let ((?x9773 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x12283) ?x12299)))
 (let ((?x13004 (+ (+ (+ (- (- (- (- ?x9773 ?x15289) ?x15292) ?x15295) ?x15298) ?x4376) ?x14969) ?x14972)))
 (let ((?x15892 (+ (+ (- (- (- (- (+ ?x13004 ?x14975) ?x14978) ?x14981) ?x14984) ?x14987) ?x14627) ?x14630)))
 (= (+ (+ ?x15892 ?x14633) ?x14636) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x14661 (* l_0_10_90 l_0_10_90)))
 (let ((?x14659 (* l_0_10_89 l_0_10_89)))
 (let ((?x14657 (* l_0_10_88 l_0_10_88)))
 (let ((?x14655 (* l_0_10_87 l_0_10_87)))
 (let ((?x14653 (* l_0_10_86 l_0_10_86)))
 (let ((?x15032 (* l_0_10_75 l_0_10_75)))
 (let ((?x15030 (* l_0_10_74 l_0_10_74)))
 (let ((?x15028 (* l_0_10_73 l_0_10_73)))
 (let ((?x15026 (* l_0_10_72 l_0_10_72)))
 (let ((?x15024 (* l_0_10_71 l_0_10_71)))
 (let ((?x15022 (* l_0_10_60 l_0_10_60)))
 (let ((?x15020 (* l_0_10_59 l_0_10_59)))
 (let ((?x15018 (* l_0_10_58 l_0_10_58)))
 (let ((?x15016 (* l_0_10_57 l_0_10_57)))
 (let ((?x15014 (* l_0_10_56 l_0_10_56)))
 (let ((?x15703 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x15700 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x15697 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x15694 (* (* 2.0 l_0_10_37) l_0_10_41)))
 (let ((?x15286 (* 2.0 l_0_10_25)))
 (let ((?x15689 (* ?x15286 l_0_10_29)))
 (let ((?x15283 (* 2.0 l_0_10_24)))
 (let ((?x15687 (* ?x15283 l_0_10_28)))
 (let ((?x15280 (* 2.0 l_0_10_23)))
 (let ((?x15685 (* ?x15280 l_0_10_27)))
 (let ((?x15683 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x15920 (- (- (- (- (+ (+ (+ ?x15683 ?x15685) ?x15687) ?x15689) ?x15694) ?x15697) ?x15700) ?x15703)))
 (let ((?x15927 (- (- (+ (+ (+ (+ (+ ?x15920 ?x15014) ?x15016) ?x15018) ?x15020) ?x15022) ?x15024) ?x15026)))
 (let ((?x15934 (+ (+ (+ (+ (- (- (- ?x15927 ?x15028) ?x15030) ?x15032) ?x14653) ?x14655) ?x14657) ?x14659)))
 (= (+ ?x15934 ?x14661) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x15454 (* l_0_10_45 l_0_10_45)))
 (let ((?x15451 (* l_0_10_44 l_0_10_44)))
 (let ((?x15448 (* l_0_10_43 l_0_10_43)))
 (let ((?x15445 (* l_0_10_42 l_0_10_42)))
 (let ((?x15442 (* l_0_10_41 l_0_10_41)))
 (let ((?x5399 (* l_0_10_30 l_0_10_30)))
 (let ((?x5454 (* l_0_10_29 l_0_10_29)))
 (let ((?x12478 (* l_0_10_28 l_0_10_28)))
 (let ((?x9894 (+ (+ (+ (* l_0_10_26 l_0_10_26) (* l_0_10_27 l_0_10_27)) ?x12478) ?x5454)))
 (= (- (- (- (- (- (+ ?x9894 ?x5399) ?x15442) ?x15445) ?x15448) ?x15451) ?x15454) 0.0)))))))))))
(assert
 (let ((?x14596 (* l_0_10_85 l_0_10_85)))
 (let ((?x14594 (* l_0_10_84 l_0_10_84)))
 (let ((?x14592 (* l_0_10_83 l_0_10_83)))
 (let ((?x14590 (* l_0_10_82 l_0_10_82)))
 (let ((?x14955 (* l_0_10_70 l_0_10_70)))
 (let ((?x14952 (* l_0_10_69 l_0_10_69)))
 (let ((?x14950 (* l_0_10_68 l_0_10_68)))
 (let ((?x14948 (* l_0_10_67 l_0_10_67)))
 (let ((?x14946 (* l_0_10_55 l_0_10_55)))
 (let ((?x14944 (* l_0_10_54 l_0_10_54)))
 (let ((?x15972 (+ (+ (+ (* l_0_10_52 l_0_10_52) (* l_0_10_53 l_0_10_53)) ?x14944) ?x14946)))
 (let ((?x15979 (+ (+ (+ (- (- (- (- ?x15972 ?x14948) ?x14950) ?x14952) ?x14955) ?x14590) ?x14592) ?x14594)))
 (= (+ ?x15979 ?x14596) 0.0))))))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_16 0.0))
(assert
 (>= l_0_10_18 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_25 0.0))
(assert
 (>= l_0_10_30 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_33 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_40 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_55 0.0))
(assert
 (>= l_0_10_60 0.0))
(assert
 (>= l_0_10_61 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_70 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (>= l_0_10_76 0.0))
(assert
 (>= l_0_10_78 0.0))
(assert
 (>= l_0_10_81 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_91 0.0))
(assert
 (>= l_0_10_93 0.0))
(assert
 (>= l_0_10_96 0.0))
(assert
 (>= l_0_10_100 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_106 0.0))
(assert
 (>= l_0_10_108 0.0))
(assert
 (>= l_0_10_111 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_120 0.0))
(assert
 (>= l_0_10_121 0.0))
(assert
 (>= l_0_10_123 0.0))
(assert
 (>= l_0_10_126 0.0))
(assert
 (>= l_0_10_130 0.0))
(assert
 (>= l_0_10_135 0.0))
(assert
 (>= l_0_10_136 0.0))
(assert
 (>= l_0_10_138 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_145 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (>= l_0_10_151 0.0))
(assert
 (>= l_0_10_153 0.0))
(assert
 (>= l_0_10_156 0.0))
(assert
 (>= l_0_10_160 0.0))
(assert
 (>= l_0_10_165 0.0))
(check-sat)
(get-model)