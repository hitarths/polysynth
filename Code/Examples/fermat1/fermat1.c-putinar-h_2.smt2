(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_9 () Real)
(declare-fun l_0_0_8 () Real)
(declare-fun l_0_0_7 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_20 () Real)
(declare-fun l_0_0_19 () Real)
(declare-fun l_0_0_15 () Real)
(declare-fun l_0_0_14 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_21 () Real)
(declare-fun l_0_0_13 () Real)
(declare-fun l_0_0_16 () Real)
(declare-fun l_0_0_10 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_0_5 () Real)
(declare-fun l_0_0_22 () Real)
(declare-fun l_0_0_17 () Real)
(declare-fun l_0_0_11 () Real)
(declare-fun l_0_0_6 () Real)
(declare-fun l_0_0_18 () Real)
(declare-fun l_0_0_12 () Real)
(declare-fun l_0_0_23 () Real)
(declare-fun l_0_0_24 () Real)
(declare-fun l_0_1_9 () Real)
(declare-fun l_0_1_8 () Real)
(declare-fun l_0_1_6 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_30 () Real)
(declare-fun l_0_1_29 () Real)
(declare-fun l_0_1_28 () Real)
(declare-fun l_0_1_24 () Real)
(declare-fun l_0_1_23 () Real)
(declare-fun l_0_1_22 () Real)
(declare-fun l_0_1_15 () Real)
(declare-fun l_0_1_14 () Real)
(declare-fun l_0_1_12 () Real)
(declare-fun l_0_1_11 () Real)
(declare-fun l_0_1_10 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_27 () Real)
(declare-fun l_0_1_26 () Real)
(declare-fun l_0_1_21 () Real)
(declare-fun l_0_1_20 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_7 () Real)
(declare-fun l_0_1_25 () Real)
(declare-fun l_0_1_19 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_13 () Real)
(declare-fun l_0_1_16 () Real)
(declare-fun l_0_1_17 () Real)
(declare-fun l_0_1_18 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun _a_2_ () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_13_62 () Real)
(declare-fun l_0_13_61 () Real)
(declare-fun l_0_13_31 () Real)
(declare-fun l_0_13_16 () Real)
(declare-fun l_0_13_1 () Real)
(declare-fun l_0_13_2 () Real)
(declare-fun l_0_13_63 () Real)
(declare-fun l_0_13_32 () Real)
(declare-fun l_0_13_3 () Real)
(declare-fun l_0_13_17 () Real)
(declare-fun l_0_13_65 () Real)
(declare-fun l_0_13_64 () Real)
(declare-fun l_0_13_34 () Real)
(declare-fun l_0_13_5 () Real)
(declare-fun l_0_13_4 () Real)
(declare-fun l_0_13_19 () Real)
(declare-fun l_0_13_68 () Real)
(declare-fun l_0_13_67 () Real)
(declare-fun l_0_13_47 () Real)
(declare-fun l_0_13_46 () Real)
(declare-fun l_0_13_37 () Real)
(declare-fun l_0_13_8 () Real)
(declare-fun l_0_13_7 () Real)
(declare-fun l_0_13_22 () Real)
(declare-fun l_0_13_72 () Real)
(declare-fun l_0_13_71 () Real)
(declare-fun l_0_13_41 () Real)
(declare-fun l_0_13_26 () Real)
(declare-fun l_0_13_12 () Real)
(declare-fun l_0_13_11 () Real)
(declare-fun l_0_13_33 () Real)
(declare-fun l_0_13_18 () Real)
(declare-fun l_0_13_35 () Real)
(declare-fun l_0_13_20 () Real)
(declare-fun l_0_13_48 () Real)
(declare-fun l_0_13_38 () Real)
(declare-fun l_0_13_23 () Real)
(declare-fun l_0_13_42 () Real)
(declare-fun l_0_13_27 () Real)
(declare-fun l_0_13_6 () Real)
(declare-fun l_0_13_36 () Real)
(declare-fun l_0_13_21 () Real)
(declare-fun l_0_13_9 () Real)
(declare-fun l_0_13_50 () Real)
(declare-fun l_0_13_49 () Real)
(declare-fun l_0_13_39 () Real)
(declare-fun l_0_13_24 () Real)
(declare-fun l_0_13_43 () Real)
(declare-fun l_0_13_28 () Real)
(declare-fun l_0_13_13 () Real)
(declare-fun l_0_13_53 () Real)
(declare-fun l_0_13_52 () Real)
(declare-fun l_0_13_40 () Real)
(declare-fun l_0_13_25 () Real)
(declare-fun l_0_13_10 () Real)
(declare-fun l_0_13_57 () Real)
(declare-fun l_0_13_56 () Real)
(declare-fun l_0_13_44 () Real)
(declare-fun l_0_13_29 () Real)
(declare-fun l_0_13_14 () Real)
(declare-fun l_0_13_45 () Real)
(declare-fun l_0_13_30 () Real)
(declare-fun l_0_13_15 () Real)
(declare-fun l_0_13_66 () Real)
(declare-fun l_0_13_69 () Real)
(declare-fun l_0_13_73 () Real)
(declare-fun l_0_13_70 () Real)
(declare-fun l_0_13_74 () Real)
(declare-fun l_0_13_75 () Real)
(declare-fun l_0_13_51 () Real)
(declare-fun l_0_13_60 () Real)
(declare-fun l_0_13_59 () Real)
(declare-fun l_0_13_58 () Real)
(declare-fun l_0_13_54 () Real)
(declare-fun l_0_13_55 () Real)
(declare-fun l_0_14_81 () Real)
(declare-fun l_0_14_80 () Real)
(declare-fun l_0_14_79 () Real)
(declare-fun l_0_14_66 () Real)
(declare-fun l_0_14_65 () Real)
(declare-fun l_0_14_64 () Real)
(declare-fun l_0_14_6 () Real)
(declare-fun l_0_14_5 () Real)
(declare-fun l_0_14_4 () Real)
(declare-fun l_0_14_31 () Real)
(declare-fun l_0_14_34 () Real)
(declare-fun l_0_14_16 () Real)
(declare-fun l_0_14_19 () Real)
(declare-fun l_0_14_90 () Real)
(declare-fun l_0_14_89 () Real)
(declare-fun l_0_14_88 () Real)
(declare-fun l_0_14_87 () Real)
(declare-fun l_0_14_86 () Real)
(declare-fun l_0_14_75 () Real)
(declare-fun l_0_14_74 () Real)
(declare-fun l_0_14_73 () Real)
(declare-fun l_0_14_72 () Real)
(declare-fun l_0_14_71 () Real)
(declare-fun l_0_14_41 () Real)
(declare-fun l_0_14_26 () Real)
(declare-fun l_0_14_15 () Real)
(declare-fun l_0_14_14 () Real)
(declare-fun l_0_14_13 () Real)
(declare-fun l_0_14_12 () Real)
(declare-fun l_0_14_11 () Real)
(declare-fun l_0_14_76 () Real)
(declare-fun l_0_14_61 () Real)
(declare-fun l_0_14_1 () Real)
(declare-fun l_0_14_77 () Real)
(declare-fun l_0_14_62 () Real)
(declare-fun l_0_14_2 () Real)
(declare-fun l_0_14_82 () Real)
(declare-fun l_0_14_67 () Real)
(declare-fun l_0_14_46 () Real)
(declare-fun l_0_14_7 () Real)
(declare-fun l_0_14_78 () Real)
(declare-fun l_0_14_63 () Real)
(declare-fun l_0_14_32 () Real)
(declare-fun l_0_14_3 () Real)
(declare-fun l_0_14_17 () Real)
(declare-fun l_0_14_83 () Real)
(declare-fun l_0_14_68 () Real)
(declare-fun l_0_14_47 () Real)
(declare-fun l_0_14_37 () Real)
(declare-fun l_0_14_8 () Real)
(declare-fun l_0_14_22 () Real)
(declare-fun l_0_14_33 () Real)
(declare-fun l_0_14_18 () Real)
(declare-fun l_0_14_35 () Real)
(declare-fun l_0_14_20 () Real)
(declare-fun l_0_14_48 () Real)
(declare-fun l_0_14_38 () Real)
(declare-fun l_0_14_23 () Real)
(declare-fun l_0_14_42 () Real)
(declare-fun l_0_14_27 () Real)
(declare-fun l_0_14_36 () Real)
(declare-fun l_0_14_21 () Real)
(declare-fun l_0_14_9 () Real)
(declare-fun l_0_14_50 () Real)
(declare-fun l_0_14_49 () Real)
(declare-fun l_0_14_39 () Real)
(declare-fun l_0_14_24 () Real)
(declare-fun l_0_14_43 () Real)
(declare-fun l_0_14_28 () Real)
(declare-fun l_0_14_53 () Real)
(declare-fun l_0_14_52 () Real)
(declare-fun l_0_14_40 () Real)
(declare-fun l_0_14_25 () Real)
(declare-fun l_0_14_10 () Real)
(declare-fun l_0_14_57 () Real)
(declare-fun l_0_14_56 () Real)
(declare-fun l_0_14_44 () Real)
(declare-fun l_0_14_29 () Real)
(declare-fun l_0_14_45 () Real)
(declare-fun l_0_14_30 () Real)
(declare-fun l_0_14_84 () Real)
(declare-fun l_0_14_69 () Real)
(declare-fun l_0_14_85 () Real)
(declare-fun l_0_14_70 () Real)
(declare-fun l_0_14_51 () Real)
(declare-fun l_0_14_60 () Real)
(declare-fun l_0_14_59 () Real)
(declare-fun l_0_14_58 () Real)
(declare-fun l_0_14_54 () Real)
(declare-fun l_0_14_55 () Real)
(declare-fun l_0_15_92 () Real)
(declare-fun l_0_15_91 () Real)
(declare-fun l_0_15_77 () Real)
(declare-fun l_0_15_76 () Real)
(declare-fun l_0_15_62 () Real)
(declare-fun l_0_15_61 () Real)
(declare-fun l_0_15_31 () Real)
(declare-fun l_0_15_16 () Real)
(declare-fun l_0_15_1 () Real)
(declare-fun l_0_15_2 () Real)
(declare-fun l_0_15_97 () Real)
(declare-fun l_0_15_82 () Real)
(declare-fun l_0_15_67 () Real)
(declare-fun l_0_15_46 () Real)
(declare-fun l_0_15_7 () Real)
(declare-fun l_0_15_96 () Real)
(declare-fun l_0_15_95 () Real)
(declare-fun l_0_15_94 () Real)
(declare-fun l_0_15_81 () Real)
(declare-fun l_0_15_80 () Real)
(declare-fun l_0_15_79 () Real)
(declare-fun l_0_15_66 () Real)
(declare-fun l_0_15_65 () Real)
(declare-fun l_0_15_64 () Real)
(declare-fun l_0_15_6 () Real)
(declare-fun l_0_15_5 () Real)
(declare-fun l_0_15_4 () Real)
(declare-fun l_0_15_34 () Real)
(declare-fun l_0_15_19 () Real)
(declare-fun l_0_15_90 () Real)
(declare-fun l_0_15_89 () Real)
(declare-fun l_0_15_88 () Real)
(declare-fun l_0_15_87 () Real)
(declare-fun l_0_15_86 () Real)
(declare-fun l_0_15_75 () Real)
(declare-fun l_0_15_74 () Real)
(declare-fun l_0_15_73 () Real)
(declare-fun l_0_15_72 () Real)
(declare-fun l_0_15_71 () Real)
(declare-fun l_0_15_41 () Real)
(declare-fun l_0_15_26 () Real)
(declare-fun l_0_15_15 () Real)
(declare-fun l_0_15_14 () Real)
(declare-fun l_0_15_13 () Real)
(declare-fun l_0_15_12 () Real)
(declare-fun l_0_15_11 () Real)
(declare-fun l_0_15_105 () Real)
(declare-fun l_0_15_104 () Real)
(declare-fun l_0_15_103 () Real)
(declare-fun l_0_15_102 () Real)
(declare-fun l_0_15_101 () Real)
(declare-fun l_0_15_93 () Real)
(declare-fun l_0_15_78 () Real)
(declare-fun l_0_15_63 () Real)
(declare-fun l_0_15_32 () Real)
(declare-fun l_0_15_3 () Real)
(declare-fun l_0_15_17 () Real)
(declare-fun l_0_15_98 () Real)
(declare-fun l_0_15_83 () Real)
(declare-fun l_0_15_68 () Real)
(declare-fun l_0_15_47 () Real)
(declare-fun l_0_15_37 () Real)
(declare-fun l_0_15_8 () Real)
(declare-fun l_0_15_22 () Real)
(declare-fun l_0_15_33 () Real)
(declare-fun l_0_15_18 () Real)
(declare-fun l_0_15_35 () Real)
(declare-fun l_0_15_20 () Real)
(declare-fun l_0_15_48 () Real)
(declare-fun l_0_15_38 () Real)
(declare-fun l_0_15_23 () Real)
(declare-fun l_0_15_42 () Real)
(declare-fun l_0_15_27 () Real)
(declare-fun l_0_15_36 () Real)
(declare-fun l_0_15_21 () Real)
(declare-fun l_0_15_9 () Real)
(declare-fun l_0_15_50 () Real)
(declare-fun l_0_15_49 () Real)
(declare-fun l_0_15_39 () Real)
(declare-fun l_0_15_24 () Real)
(declare-fun l_0_15_43 () Real)
(declare-fun l_0_15_28 () Real)
(declare-fun l_0_15_53 () Real)
(declare-fun l_0_15_52 () Real)
(declare-fun l_0_15_40 () Real)
(declare-fun l_0_15_25 () Real)
(declare-fun l_0_15_10 () Real)
(declare-fun l_0_15_57 () Real)
(declare-fun l_0_15_56 () Real)
(declare-fun l_0_15_44 () Real)
(declare-fun l_0_15_29 () Real)
(declare-fun l_0_15_45 () Real)
(declare-fun l_0_15_30 () Real)
(declare-fun l_0_15_99 () Real)
(declare-fun l_0_15_84 () Real)
(declare-fun l_0_15_69 () Real)
(declare-fun l_0_15_85 () Real)
(declare-fun l_0_15_70 () Real)
(declare-fun l_0_15_100 () Real)
(declare-fun l_0_15_51 () Real)
(declare-fun l_0_15_60 () Real)
(declare-fun l_0_15_59 () Real)
(declare-fun l_0_15_58 () Real)
(declare-fun l_0_15_54 () Real)
(declare-fun l_0_15_55 () Real)
(declare-fun l_0_16_62 () Real)
(declare-fun l_0_16_61 () Real)
(declare-fun l_0_16_31 () Real)
(declare-fun l_0_16_16 () Real)
(declare-fun l_0_16_1 () Real)
(declare-fun l_0_16_2 () Real)
(declare-fun l_0_16_63 () Real)
(declare-fun l_0_16_32 () Real)
(declare-fun l_0_16_3 () Real)
(declare-fun l_0_16_17 () Real)
(declare-fun l_0_16_65 () Real)
(declare-fun l_0_16_64 () Real)
(declare-fun l_0_16_34 () Real)
(declare-fun l_0_16_5 () Real)
(declare-fun l_0_16_4 () Real)
(declare-fun l_0_16_19 () Real)
(declare-fun l_0_16_68 () Real)
(declare-fun l_0_16_67 () Real)
(declare-fun l_0_16_47 () Real)
(declare-fun l_0_16_46 () Real)
(declare-fun l_0_16_37 () Real)
(declare-fun l_0_16_8 () Real)
(declare-fun l_0_16_7 () Real)
(declare-fun l_0_16_22 () Real)
(declare-fun l_0_16_72 () Real)
(declare-fun l_0_16_71 () Real)
(declare-fun l_0_16_41 () Real)
(declare-fun l_0_16_26 () Real)
(declare-fun l_0_16_12 () Real)
(declare-fun l_0_16_11 () Real)
(declare-fun l_0_16_33 () Real)
(declare-fun l_0_16_18 () Real)
(declare-fun l_0_16_35 () Real)
(declare-fun l_0_16_20 () Real)
(declare-fun l_0_16_48 () Real)
(declare-fun l_0_16_38 () Real)
(declare-fun l_0_16_23 () Real)
(declare-fun l_0_16_42 () Real)
(declare-fun l_0_16_27 () Real)
(declare-fun l_0_16_6 () Real)
(declare-fun l_0_16_36 () Real)
(declare-fun l_0_16_21 () Real)
(declare-fun l_0_16_9 () Real)
(declare-fun l_0_16_50 () Real)
(declare-fun l_0_16_49 () Real)
(declare-fun l_0_16_39 () Real)
(declare-fun l_0_16_24 () Real)
(declare-fun l_0_16_43 () Real)
(declare-fun l_0_16_28 () Real)
(declare-fun l_0_16_13 () Real)
(declare-fun l_0_16_53 () Real)
(declare-fun l_0_16_52 () Real)
(declare-fun l_0_16_40 () Real)
(declare-fun l_0_16_25 () Real)
(declare-fun l_0_16_10 () Real)
(declare-fun l_0_16_57 () Real)
(declare-fun l_0_16_56 () Real)
(declare-fun l_0_16_44 () Real)
(declare-fun l_0_16_29 () Real)
(declare-fun l_0_16_14 () Real)
(declare-fun l_0_16_45 () Real)
(declare-fun l_0_16_30 () Real)
(declare-fun l_0_16_15 () Real)
(declare-fun l_0_16_66 () Real)
(declare-fun l_0_16_69 () Real)
(declare-fun l_0_16_73 () Real)
(declare-fun l_0_16_70 () Real)
(declare-fun l_0_16_74 () Real)
(declare-fun l_0_16_75 () Real)
(declare-fun l_0_16_51 () Real)
(declare-fun l_0_16_60 () Real)
(declare-fun l_0_16_59 () Real)
(declare-fun l_0_16_58 () Real)
(declare-fun l_0_16_54 () Real)
(declare-fun l_0_16_55 () Real)
(declare-fun l_0_17_81 () Real)
(declare-fun l_0_17_80 () Real)
(declare-fun l_0_17_79 () Real)
(declare-fun l_0_17_66 () Real)
(declare-fun l_0_17_65 () Real)
(declare-fun l_0_17_64 () Real)
(declare-fun l_0_17_6 () Real)
(declare-fun l_0_17_5 () Real)
(declare-fun l_0_17_4 () Real)
(declare-fun l_0_17_31 () Real)
(declare-fun l_0_17_34 () Real)
(declare-fun l_0_17_16 () Real)
(declare-fun l_0_17_19 () Real)
(declare-fun l_0_17_76 () Real)
(declare-fun l_0_17_61 () Real)
(declare-fun l_0_17_1 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_17_86 () Real)
(declare-fun l_0_17_71 () Real)
(declare-fun l_0_17_11 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_17_90 () Real)
(declare-fun l_0_17_89 () Real)
(declare-fun l_0_17_88 () Real)
(declare-fun l_0_17_87 () Real)
(declare-fun l_0_17_75 () Real)
(declare-fun l_0_17_74 () Real)
(declare-fun l_0_17_73 () Real)
(declare-fun l_0_17_72 () Real)
(declare-fun l_0_17_41 () Real)
(declare-fun l_0_17_26 () Real)
(declare-fun l_0_17_15 () Real)
(declare-fun l_0_17_14 () Real)
(declare-fun l_0_17_13 () Real)
(declare-fun l_0_17_12 () Real)
(declare-fun l_0_17_77 () Real)
(declare-fun l_0_17_62 () Real)
(declare-fun l_0_17_2 () Real)
(declare-fun l_0_17_82 () Real)
(declare-fun l_0_17_67 () Real)
(declare-fun l_0_17_46 () Real)
(declare-fun l_0_17_7 () Real)
(declare-fun l_0_17_78 () Real)
(declare-fun l_0_17_63 () Real)
(declare-fun l_0_17_32 () Real)
(declare-fun l_0_17_3 () Real)
(declare-fun l_0_17_17 () Real)
(declare-fun l_0_17_83 () Real)
(declare-fun l_0_17_68 () Real)
(declare-fun l_0_17_47 () Real)
(declare-fun l_0_17_37 () Real)
(declare-fun l_0_17_8 () Real)
(declare-fun l_0_17_22 () Real)
(declare-fun l_0_17_33 () Real)
(declare-fun l_0_17_18 () Real)
(declare-fun l_0_17_35 () Real)
(declare-fun l_0_17_20 () Real)
(declare-fun l_0_17_48 () Real)
(declare-fun l_0_17_38 () Real)
(declare-fun l_0_17_23 () Real)
(declare-fun l_0_17_42 () Real)
(declare-fun l_0_17_27 () Real)
(declare-fun l_0_17_36 () Real)
(declare-fun l_0_17_21 () Real)
(declare-fun l_0_17_9 () Real)
(declare-fun l_0_17_50 () Real)
(declare-fun l_0_17_49 () Real)
(declare-fun l_0_17_39 () Real)
(declare-fun l_0_17_24 () Real)
(declare-fun l_0_17_43 () Real)
(declare-fun l_0_17_28 () Real)
(declare-fun l_0_17_53 () Real)
(declare-fun l_0_17_52 () Real)
(declare-fun l_0_17_40 () Real)
(declare-fun l_0_17_25 () Real)
(declare-fun l_0_17_10 () Real)
(declare-fun l_0_17_57 () Real)
(declare-fun l_0_17_56 () Real)
(declare-fun l_0_17_44 () Real)
(declare-fun l_0_17_29 () Real)
(declare-fun l_0_17_45 () Real)
(declare-fun l_0_17_30 () Real)
(declare-fun l_0_17_84 () Real)
(declare-fun l_0_17_69 () Real)
(declare-fun l_0_17_85 () Real)
(declare-fun l_0_17_70 () Real)
(declare-fun l_0_17_51 () Real)
(declare-fun l_0_17_60 () Real)
(declare-fun l_0_17_59 () Real)
(declare-fun l_0_17_58 () Real)
(declare-fun l_0_17_54 () Real)
(declare-fun l_0_17_55 () Real)
(declare-fun l_0_18_92 () Real)
(declare-fun l_0_18_91 () Real)
(declare-fun l_0_18_77 () Real)
(declare-fun l_0_18_76 () Real)
(declare-fun l_0_18_62 () Real)
(declare-fun l_0_18_61 () Real)
(declare-fun l_0_18_31 () Real)
(declare-fun l_0_18_16 () Real)
(declare-fun l_0_18_1 () Real)
(declare-fun l_0_18_2 () Real)
(declare-fun l_0_18_97 () Real)
(declare-fun l_0_18_82 () Real)
(declare-fun l_0_18_67 () Real)
(declare-fun l_0_18_46 () Real)
(declare-fun l_0_18_7 () Real)
(declare-fun l_0_18_86 () Real)
(declare-fun l_0_18_71 () Real)
(declare-fun l_0_18_101 () Real)
(declare-fun l_0_18_11 () Real)
(declare-fun l_0_18_96 () Real)
(declare-fun l_0_18_95 () Real)
(declare-fun l_0_18_94 () Real)
(declare-fun l_0_18_81 () Real)
(declare-fun l_0_18_80 () Real)
(declare-fun l_0_18_79 () Real)
(declare-fun l_0_18_66 () Real)
(declare-fun l_0_18_65 () Real)
(declare-fun l_0_18_64 () Real)
(declare-fun l_0_18_6 () Real)
(declare-fun l_0_18_5 () Real)
(declare-fun l_0_18_4 () Real)
(declare-fun l_0_18_34 () Real)
(declare-fun l_0_18_19 () Real)
(declare-fun l_0_18_90 () Real)
(declare-fun l_0_18_89 () Real)
(declare-fun l_0_18_88 () Real)
(declare-fun l_0_18_87 () Real)
(declare-fun l_0_18_75 () Real)
(declare-fun l_0_18_74 () Real)
(declare-fun l_0_18_73 () Real)
(declare-fun l_0_18_72 () Real)
(declare-fun l_0_18_41 () Real)
(declare-fun l_0_18_26 () Real)
(declare-fun l_0_18_15 () Real)
(declare-fun l_0_18_14 () Real)
(declare-fun l_0_18_13 () Real)
(declare-fun l_0_18_12 () Real)
(declare-fun l_0_18_105 () Real)
(declare-fun l_0_18_104 () Real)
(declare-fun l_0_18_103 () Real)
(declare-fun l_0_18_102 () Real)
(declare-fun l_0_18_93 () Real)
(declare-fun l_0_18_78 () Real)
(declare-fun l_0_18_63 () Real)
(declare-fun l_0_18_32 () Real)
(declare-fun l_0_18_3 () Real)
(declare-fun l_0_18_17 () Real)
(declare-fun l_0_18_98 () Real)
(declare-fun l_0_18_83 () Real)
(declare-fun l_0_18_68 () Real)
(declare-fun l_0_18_47 () Real)
(declare-fun l_0_18_37 () Real)
(declare-fun l_0_18_8 () Real)
(declare-fun l_0_18_22 () Real)
(declare-fun l_0_18_33 () Real)
(declare-fun l_0_18_18 () Real)
(declare-fun l_0_18_35 () Real)
(declare-fun l_0_18_20 () Real)
(declare-fun l_0_18_48 () Real)
(declare-fun l_0_18_38 () Real)
(declare-fun l_0_18_23 () Real)
(declare-fun l_0_18_42 () Real)
(declare-fun l_0_18_27 () Real)
(declare-fun l_0_18_36 () Real)
(declare-fun l_0_18_21 () Real)
(declare-fun l_0_18_9 () Real)
(declare-fun l_0_18_50 () Real)
(declare-fun l_0_18_49 () Real)
(declare-fun l_0_18_39 () Real)
(declare-fun l_0_18_24 () Real)
(declare-fun l_0_18_43 () Real)
(declare-fun l_0_18_28 () Real)
(declare-fun l_0_18_53 () Real)
(declare-fun l_0_18_52 () Real)
(declare-fun l_0_18_40 () Real)
(declare-fun l_0_18_25 () Real)
(declare-fun l_0_18_10 () Real)
(declare-fun l_0_18_57 () Real)
(declare-fun l_0_18_56 () Real)
(declare-fun l_0_18_44 () Real)
(declare-fun l_0_18_29 () Real)
(declare-fun l_0_18_45 () Real)
(declare-fun l_0_18_30 () Real)
(declare-fun l_0_18_99 () Real)
(declare-fun l_0_18_84 () Real)
(declare-fun l_0_18_69 () Real)
(declare-fun l_0_18_85 () Real)
(declare-fun l_0_18_70 () Real)
(declare-fun l_0_18_100 () Real)
(declare-fun l_0_18_51 () Real)
(declare-fun l_0_18_60 () Real)
(declare-fun l_0_18_59 () Real)
(declare-fun l_0_18_58 () Real)
(declare-fun l_0_18_54 () Real)
(declare-fun l_0_18_55 () Real)
(assert
 (let ((?x1545 (* l_0_0_9 l_0_0_9)))
 (let ((?x1543 (* l_0_0_8 l_0_0_8)))
 (let ((?x1541 (* (* 4.0 l_0_0_7) l_0_0_8)))
 (let ((?x1537 (* l_0_0_3 l_0_0_3)))
 (let ((?x1535 (* l_0_0_2 l_0_0_2)))
 (let ((?x1530 (* l_0_0_15 l_0_0_15)))
 (let ((?x1531 (+ (+ (* (* 2.0 l_0_0_1) l_0_0_2) (* l_0_0_14 l_0_0_14)) ?x1530)))
 (let ((?x1542 (+ (- (- (- ?x1531 (* (* 2.0 l_0_0_19) l_0_0_20)) ?x1535) ?x1537) ?x1541)))
 (= (+ (- (- ?x1542 ?x1543) ?x1545) 1.0) 0.0))))))))))
(assert
 (let ((?x1545 (* l_0_0_9 l_0_0_9)))
 (let ((?x1605 (* 2.0 ?x1545)))
 (let ((?x1543 (* l_0_0_8 l_0_0_8)))
 (let ((?x1603 (* 2.0 ?x1543)))
 (let ((?x1599 (* l_0_0_21 l_0_0_21)))
 (let ((?x1600 (- (- (* 1.0 (* l_0_0_2 l_0_0_2)) (* l_0_0_20 l_0_0_20)) ?x1599)))
 (let ((?x1607 (- (+ (+ (+ ?x1600 (* 1.0 (* l_0_0_3 l_0_0_3))) ?x1603) ?x1605) 1.0)))
 (= ?x1607 0.0)))))))))
(assert
 (let ((?x1623 (* l_0_0_7 l_0_0_7)))
 (= (- (+ (* (- l_0_0_1) l_0_0_1) (* l_0_0_13 l_0_0_13)) ?x1623) 0.0)))
(assert
 (let ((?x1623 (* l_0_0_7 l_0_0_7)))
 (let ((?x1646 (* 2.0 ?x1623)))
 (let ((?x1643 (* 2.0 l_0_0_7)))
 (let ((?x1644 (* ?x1643 l_0_0_8)))
 (let ((?x1641 (* l_0_0_19 l_0_0_19)))
 (let ((?x1638 (* 2.0 l_0_0_13)))
 (let ((?x1639 (* ?x1638 l_0_0_14)))
 (let ((?x1637 (+ (* (* (- 2.0) l_0_0_1) l_0_0_2) (* 1.0 (* l_0_0_1 l_0_0_1)))))
 (= (+ (- (- (+ ?x1637 ?x1639) ?x1641) ?x1644) ?x1646) 0.0))))))))))
(assert
 (let ((?x1638 (* 2.0 l_0_0_13)))
 (let ((?x1669 (* ?x1638 l_0_0_16)))
 (let ((?x1666 (* 2.0 l_0_0_10)))
 (let ((?x1667 (* ?x1666 l_0_0_7)))
 (let ((?x1672 (- (+ (- (* (* (- 2.0) l_0_0_1) l_0_0_4) ?x1667) ?x1669) (* (* 2.0 l_0_0_7) l_0_0_7))))
 (= ?x1672 0.0)))))))
(assert
 (let ((?x1541 (* (* 4.0 l_0_0_7) l_0_0_8)))
 (let ((?x1713 (* (* 2.0 l_0_0_3) l_0_0_5)))
 (let ((?x1710 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (let ((?x1705 (* (* 2.0 l_0_0_15) l_0_0_17)))
 (let ((?x1702 (* (* 2.0 l_0_0_14) l_0_0_16)))
 (let ((?x1698 (* 2.0 l_0_0_11)))
 (let ((?x1699 (* ?x1698 l_0_0_9)))
 (let ((?x1666 (* 2.0 l_0_0_10)))
 (let ((?x1696 (* ?x1666 l_0_0_8)))
 (let ((?x1695 (+ (* (* 2.0 l_0_0_1) l_0_0_4) (* (* 4.0 l_0_0_10) l_0_0_7))))
 (let ((?x1708 (- (+ (+ (- (- ?x1695 ?x1696) ?x1699) ?x1702) ?x1705) (* (* 2.0 l_0_0_19) l_0_0_22))))
 (= (- (- (- ?x1708 ?x1710) ?x1713) ?x1541) 0.0)))))))))))))
(assert
 (let ((?x1643 (* 2.0 l_0_0_7)))
 (let ((?x1644 (* ?x1643 l_0_0_8)))
 (let ((?x1783 (* l_0_0_6 l_0_0_6)))
 (let ((?x1781 (* l_0_0_5 l_0_0_5)))
 (let ((?x1779 (* l_0_0_4 l_0_0_4)))
 (let ((?x1777 (* l_0_0_18 l_0_0_18)))
 (let ((?x1775 (* l_0_0_17 l_0_0_17)))
 (let ((?x1773 (* l_0_0_16 l_0_0_16)))
 (let ((?x1638 (* 2.0 l_0_0_13)))
 (let ((?x1639 (* ?x1638 l_0_0_14)))
 (let ((?x1770 (* l_0_0_12 l_0_0_12)))
 (let ((?x1768 (* l_0_0_11 l_0_0_11)))
 (let ((?x1769 (- (- (* (* (- 4.0) l_0_0_10) l_0_0_7) (* l_0_0_10 l_0_0_10)) ?x1768)))
 (let ((?x1782 (- (- (+ (+ (+ (- (- ?x1769 ?x1770) ?x1639) ?x1773) ?x1775) ?x1777) ?x1779) ?x1781)))
 (= (+ (- ?x1782 ?x1783) ?x1644) 0.0))))))))))))))))
(assert
 (let ((?x1713 (* (* 2.0 l_0_0_3) l_0_0_5)))
 (let ((?x1710 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (let ((?x1812 (* (* 4.0 l_0_0_11) l_0_0_9)))
 (let ((?x1817 (- (+ (+ (* (* 4.0 l_0_0_10) l_0_0_8) ?x1812) ?x1710) (* (* 2.0 l_0_0_20) l_0_0_22))))
 (let ((?x1824 (- (+ (- ?x1817 (* (* 2.0 l_0_0_21) l_0_0_23)) ?x1713) (* (* 2.0 l_0_0_8) l_0_0_8))))
 (= (- ?x1824 (* (* 2.0 l_0_0_9) l_0_0_9)) 0.0)))))))
(assert
 (let ((?x1545 (* l_0_0_9 l_0_0_9)))
 (let ((?x1543 (* l_0_0_8 l_0_0_8)))
 (let ((?x1871 (* l_0_0_24 l_0_0_24)))
 (let ((?x1869 (* l_0_0_23 l_0_0_23)))
 (let ((?x1867 (* l_0_0_22 l_0_0_22)))
 (let ((?x1530 (* l_0_0_15 l_0_0_15)))
 (let ((?x1528 (* l_0_0_14 l_0_0_14)))
 (let ((?x1812 (* (* 4.0 l_0_0_11) l_0_0_9)))
 (let ((?x1859 (+ (* (* (- 4.0) l_0_0_10) l_0_0_8) (* 2.0 (* l_0_0_10 l_0_0_10)))))
 (let ((?x1864 (+ (+ (- ?x1859 ?x1812) (* 2.0 (* l_0_0_11 l_0_0_11))) (* 2.0 (* l_0_0_12 l_0_0_12)))))
 (let ((?x1874 (+ (- (- (- (- (- ?x1864 ?x1528) ?x1530) ?x1867) ?x1869) ?x1871) (* 1.0 (* l_0_0_4 l_0_0_4)))))
 (let ((?x1878 (+ (+ ?x1874 (* 1.0 (* l_0_0_5 l_0_0_5))) (* 1.0 (* l_0_0_6 l_0_0_6)))))
 (= (+ (+ ?x1878 ?x1543) ?x1545) 0.0))))))))))))))
(assert
 (= (+ (* (- l_0_0_13) l_0_0_13) (* l_0_0_7 l_0_0_7)) 0.0))
(assert
 (let ((?x1638 (* 2.0 l_0_0_13)))
 (let ((?x1669 (* ?x1638 l_0_0_16)))
 (let ((?x1666 (* 2.0 l_0_0_10)))
 (let ((?x1667 (* ?x1666 l_0_0_7)))
 (= (- ?x1667 ?x1669) 0.0))))))
(assert
 (let ((?x1705 (* (* 2.0 l_0_0_15) l_0_0_17)))
 (let ((?x1702 (* (* 2.0 l_0_0_14) l_0_0_16)))
 (let ((?x1698 (* 2.0 l_0_0_11)))
 (let ((?x1699 (* ?x1698 l_0_0_9)))
 (let ((?x1666 (* 2.0 l_0_0_10)))
 (let ((?x1696 (* ?x1666 l_0_0_8)))
 (let ((?x1927 (- (- (+ (- ?x1696 (* ?x1666 l_0_0_10)) ?x1699) (* ?x1698 l_0_0_11)) (* (* 2.0 l_0_0_12) l_0_0_12))))
 (= (- (- ?x1927 ?x1702) ?x1705) 0.0)))))))))
(assert
 (let ((?x1777 (* l_0_0_18 l_0_0_18)))
 (let ((?x1775 (* l_0_0_17 l_0_0_17)))
 (let ((?x1773 (* l_0_0_16 l_0_0_16)))
 (let ((?x1770 (* l_0_0_12 l_0_0_12)))
 (let ((?x1950 (- (+ (+ (* l_0_0_10 l_0_0_10) (* l_0_0_11 l_0_0_11)) ?x1770) ?x1773)))
 (= (- (- ?x1950 ?x1775) ?x1777) 0.0)))))))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_6 0.0))
(assert
 (>= l_0_0_7 0.0))
(assert
 (>= l_0_0_9 0.0))
(assert
 (>= l_0_0_12 0.0))
(assert
 (>= l_0_0_13 0.0))
(assert
 (>= l_0_0_15 0.0))
(assert
 (>= l_0_0_18 0.0))
(assert
 (>= l_0_0_19 0.0))
(assert
 (>= l_0_0_21 0.0))
(assert
 (>= l_0_0_24 0.0))
(assert
 (let ((?x2018 (* l_0_1_9 l_0_1_9)))
 (let ((?x2016 (* l_0_1_8 l_0_1_8)))
 (let ((?x2005 (* l_0_1_30 l_0_1_30)))
 (let ((?x2003 (* l_0_1_29 l_0_1_29)))
 (let ((?x2001 (* l_0_1_28 l_0_1_28)))
 (let ((?x1999 (* l_0_1_24 l_0_1_24)))
 (let ((?x1997 (* l_0_1_23 l_0_1_23)))
 (let ((?x1995 (* l_0_1_22 l_0_1_22)))
 (let ((?x1993 (* l_0_1_15 l_0_1_15)))
 (let ((?x1991 (* l_0_1_14 l_0_1_14)))
 (let ((?x1988 (* l_0_1_12 l_0_1_12)))
 (let ((?x1989 (* 2.0 ?x1988)))
 (let ((?x1985 (* l_0_1_11 l_0_1_11)))
 (let ((?x1986 (* 2.0 ?x1985)))
 (let ((?x1983 (* (* 4.0 l_0_1_11) l_0_1_9)))
 (let ((?x1979 (* l_0_1_10 l_0_1_10)))
 (let ((?x1980 (* 2.0 ?x1979)))
 (let ((?x1990 (+ (+ (- (+ (* (* (- 4.0) l_0_1_10) l_0_1_8) ?x1980) ?x1983) ?x1986) ?x1989)))
 (let ((?x2004 (- (- (- (- (- (- (- ?x1990 ?x1991) ?x1993) ?x1995) ?x1997) ?x1999) ?x2001) ?x2003)))
 (let ((?x2012 (+ (+ (- ?x2004 ?x2005) (* 1.0 (* l_0_1_4 l_0_1_4))) (* 1.0 (* l_0_1_5 l_0_1_5)))))
 (= (+ (+ (+ ?x2012 (* 1.0 (* l_0_1_6 l_0_1_6))) ?x2016) ?x2018) 0.0))))))))))))))))))))))
(assert
 (let ((?x2076 (* (* 2.0 l_0_1_3) l_0_1_5)))
 (let ((?x2061 (* (* 2.0 l_0_1_2) l_0_1_4)))
 (let ((?x1983 (* (* 4.0 l_0_1_11) l_0_1_9)))
 (let ((?x2065 (- (+ (+ (* (* 4.0 l_0_1_10) l_0_1_8) ?x1983) ?x2061) (* (* 2.0 l_0_1_20) l_0_1_22))))
 (let ((?x2071 (- (- ?x2065 (* (* 2.0 l_0_1_21) l_0_1_23)) (* (* 2.0 l_0_1_26) l_0_1_28))))
 (let ((?x2080 (- (+ (- ?x2071 (* (* 2.0 l_0_1_27) l_0_1_29)) ?x2076) (* (* 2.0 l_0_1_8) l_0_1_8))))
 (= (- ?x2080 (* (* 2.0 l_0_1_9) l_0_1_9)) 0.0))))))))
(assert
 (let ((?x2018 (* l_0_1_9 l_0_1_9)))
 (let ((?x2121 (* 2.0 ?x2018)))
 (let ((?x2016 (* l_0_1_8 l_0_1_8)))
 (let ((?x2116 (* 2.0 ?x2016)))
 (let ((?x2138 (* l_0_1_27 l_0_1_27)))
 (let ((?x2136 (* l_0_1_26 l_0_1_26)))
 (let ((?x2134 (* l_0_1_21 l_0_1_21)))
 (let ((?x2135 (- (- (* 1.0 (* l_0_1_2 l_0_1_2)) (* l_0_1_20 l_0_1_20)) ?x2134)))
 (let ((?x2143 (+ (+ (- (- ?x2135 ?x2136) ?x2138) (* 1.0 (* l_0_1_3 l_0_1_3))) ?x2116)))
 (= (+ ?x2143 ?x2121) 0.0)))))))))))
(assert
 (let ((?x2018 (* l_0_1_9 l_0_1_9)))
 (let ((?x2016 (* l_0_1_8 l_0_1_8)))
 (let ((?x2172 (* (* 4.0 l_0_1_7) l_0_1_8)))
 (let ((?x2140 (* l_0_1_3 l_0_1_3)))
 (let ((?x2130 (* l_0_1_2 l_0_1_2)))
 (let ((?x1993 (* l_0_1_15 l_0_1_15)))
 (let ((?x2162 (+ (+ (* (* 2.0 l_0_1_1) l_0_1_2) (* l_0_1_14 l_0_1_14)) ?x1993)))
 (let ((?x2169 (- (- (- ?x2162 (* (* 2.0 l_0_1_19) l_0_1_20)) ?x2130) (* (* 2.0 l_0_1_25) l_0_1_26))))
 (= (- (- (+ (- ?x2169 ?x2140) ?x2172) ?x2016) ?x2018) 0.0))))))))))
(assert
 (let ((?x2212 (* l_0_1_7 l_0_1_7)))
 (= (- (+ (* (- l_0_1_1) l_0_1_1) (* l_0_1_13 l_0_1_13)) ?x2212) 0.0)))
(assert
 (let ((?x2212 (* l_0_1_7 l_0_1_7)))
 (let ((?x2237 (* 2.0 ?x2212)))
 (let ((?x2234 (* 2.0 l_0_1_7)))
 (let ((?x2235 (* ?x2234 l_0_1_8)))
 (let ((?x2232 (* l_0_1_25 l_0_1_25)))
 (let ((?x2230 (* l_0_1_19 l_0_1_19)))
 (let ((?x2227 (* 2.0 l_0_1_13)))
 (let ((?x2228 (* ?x2227 l_0_1_14)))
 (let ((?x2226 (+ (* (* (- 2.0) l_0_1_1) l_0_1_2) (* 1.0 (* l_0_1_1 l_0_1_1)))))
 (= (+ (- (- (- (+ ?x2226 ?x2228) ?x2230) ?x2232) ?x2235) ?x2237) 0.0)))))))))))
(assert
 (let ((?x2227 (* 2.0 l_0_1_13)))
 (let ((?x2263 (* ?x2227 l_0_1_16)))
 (let ((?x2260 (* 2.0 l_0_1_10)))
 (let ((?x2261 (* ?x2260 l_0_1_7)))
 (let ((?x2266 (- (+ (- (* (* (- 2.0) l_0_1_1) l_0_1_4) ?x2261) ?x2263) (* (* 2.0 l_0_1_7) l_0_1_7))))
 (= ?x2266 0.0)))))))
(assert
 (let ((?x2172 (* (* 4.0 l_0_1_7) l_0_1_8)))
 (let ((?x2076 (* (* 2.0 l_0_1_3) l_0_1_5)))
 (let ((?x2061 (* (* 2.0 l_0_1_2) l_0_1_4)))
 (let ((?x2298 (* (* 2.0 l_0_1_15) l_0_1_17)))
 (let ((?x2295 (* (* 2.0 l_0_1_14) l_0_1_16)))
 (let ((?x2291 (* 2.0 l_0_1_11)))
 (let ((?x2292 (* ?x2291 l_0_1_9)))
 (let ((?x2260 (* 2.0 l_0_1_10)))
 (let ((?x2289 (* ?x2260 l_0_1_8)))
 (let ((?x2288 (+ (* (* 2.0 l_0_1_1) l_0_1_4) (* (* 4.0 l_0_1_10) l_0_1_7))))
 (let ((?x2301 (- (+ (+ (- (- ?x2288 ?x2289) ?x2292) ?x2295) ?x2298) (* (* 2.0 l_0_1_19) l_0_1_22))))
 (let ((?x2306 (- (- (- (- ?x2301 ?x2061) (* (* 2.0 l_0_1_25) l_0_1_28)) ?x2076) ?x2172)))
 (= ?x2306 0.0))))))))))))))
(assert
 (let ((?x2234 (* 2.0 l_0_1_7)))
 (let ((?x2235 (* ?x2234 l_0_1_8)))
 (let ((?x2013 (* l_0_1_6 l_0_1_6)))
 (let ((?x2010 (* l_0_1_5 l_0_1_5)))
 (let ((?x2007 (* l_0_1_4 l_0_1_4)))
 (let ((?x2361 (* l_0_1_18 l_0_1_18)))
 (let ((?x2359 (* l_0_1_17 l_0_1_17)))
 (let ((?x2357 (* l_0_1_16 l_0_1_16)))
 (let ((?x2227 (* 2.0 l_0_1_13)))
 (let ((?x2228 (* ?x2227 l_0_1_14)))
 (let ((?x1988 (* l_0_1_12 l_0_1_12)))
 (let ((?x1985 (* l_0_1_11 l_0_1_11)))
 (let ((?x2354 (- (- (* (* (- 4.0) l_0_1_10) l_0_1_7) (* l_0_1_10 l_0_1_10)) ?x1985)))
 (let ((?x2364 (- (- (+ (+ (+ (- (- ?x2354 ?x1988) ?x2228) ?x2357) ?x2359) ?x2361) ?x2007) ?x2010)))
 (= (+ (- ?x2364 ?x2013) ?x2235) 0.0))))))))))))))))
(assert
 (= (+ (* (- l_0_1_13) l_0_1_13) (* l_0_1_7 l_0_1_7)) 0.0))
(assert
 (let ((?x2227 (* 2.0 l_0_1_13)))
 (let ((?x2263 (* ?x2227 l_0_1_16)))
 (let ((?x2260 (* 2.0 l_0_1_10)))
 (let ((?x2261 (* ?x2260 l_0_1_7)))
 (= (- ?x2261 ?x2263) 0.0))))))
(assert
 (let ((?x2298 (* (* 2.0 l_0_1_15) l_0_1_17)))
 (let ((?x2295 (* (* 2.0 l_0_1_14) l_0_1_16)))
 (let ((?x2291 (* 2.0 l_0_1_11)))
 (let ((?x2292 (* ?x2291 l_0_1_9)))
 (let ((?x2260 (* 2.0 l_0_1_10)))
 (let ((?x2289 (* ?x2260 l_0_1_8)))
 (let ((?x2415 (- (- (+ (- ?x2289 (* ?x2260 l_0_1_10)) ?x2292) (* ?x2291 l_0_1_11)) (* (* 2.0 l_0_1_12) l_0_1_12))))
 (= (- (- ?x2415 ?x2295) ?x2298) 0.0)))))))))
(assert
 (let ((?x2361 (* l_0_1_18 l_0_1_18)))
 (let ((?x2359 (* l_0_1_17 l_0_1_17)))
 (let ((?x2357 (* l_0_1_16 l_0_1_16)))
 (let ((?x1988 (* l_0_1_12 l_0_1_12)))
 (let ((?x2442 (- (+ (+ (* l_0_1_10 l_0_1_10) (* l_0_1_11 l_0_1_11)) ?x1988) ?x2357)))
 (= (- (- ?x2442 ?x2359) ?x2361) 0.0)))))))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_6 0.0))
(assert
 (>= l_0_1_7 0.0))
(assert
 (>= l_0_1_9 0.0))
(assert
 (>= l_0_1_12 0.0))
(assert
 (>= l_0_1_13 0.0))
(assert
 (>= l_0_1_15 0.0))
(assert
 (>= l_0_1_18 0.0))
(assert
 (>= l_0_1_19 0.0))
(assert
 (>= l_0_1_21 0.0))
(assert
 (>= l_0_1_24 0.0))
(assert
 (>= l_0_1_25 0.0))
(assert
 (>= l_0_1_27 0.0))
(assert
 (>= l_0_1_30 0.0))
(assert
 (let ((?x2493 (* l_0_2_9 l_0_2_9)))
 (let ((?x2491 (* l_0_2_8 l_0_2_8)))
 (let ((?x2489 (* (* 4.0 l_0_2_7) l_0_2_8)))
 (let ((?x2483 (* l_0_2_3 l_0_2_3)))
 (let ((?x2478 (* l_0_2_2 l_0_2_2)))
 (let ((?x2473 (* l_0_2_15 l_0_2_15)))
 (let ((?x2474 (+ (+ (* (* 2.0 l_0_2_1) l_0_2_2) (* l_0_2_14 l_0_2_14)) ?x2473)))
 (let ((?x2482 (- (- (- ?x2474 (* (* 2.0 l_0_2_19) l_0_2_20)) ?x2478) (* (* 2.0 l_0_2_25) l_0_2_26))))
 (let ((?x2492 (- (+ (- (- ?x2482 ?x2483) (* (* 2.0 l_0_2_31) l_0_2_32)) ?x2489) ?x2491)))
 (= (- ?x2492 ?x2493) 0.0)))))))))))
(assert
 (let ((?x2493 (* l_0_2_9 l_0_2_9)))
 (let ((?x2491 (* l_0_2_8 l_0_2_8)))
 (let ((?x2565 (* l_0_2_36 l_0_2_36)))
 (let ((?x2563 (* l_0_2_35 l_0_2_35)))
 (let ((?x2561 (* l_0_2_34 l_0_2_34)))
 (let ((?x2559 (* l_0_2_30 l_0_2_30)))
 (let ((?x2557 (* l_0_2_29 l_0_2_29)))
 (let ((?x2555 (* l_0_2_28 l_0_2_28)))
 (let ((?x2553 (* l_0_2_24 l_0_2_24)))
 (let ((?x2551 (* l_0_2_23 l_0_2_23)))
 (let ((?x2549 (* l_0_2_22 l_0_2_22)))
 (let ((?x2473 (* l_0_2_15 l_0_2_15)))
 (let ((?x2471 (* l_0_2_14 l_0_2_14)))
 (let ((?x2544 (* l_0_2_12 l_0_2_12)))
 (let ((?x2545 (* 2.0 ?x2544)))
 (let ((?x2541 (* l_0_2_11 l_0_2_11)))
 (let ((?x2542 (* 2.0 ?x2541)))
 (let ((?x2539 (* (* 4.0 l_0_2_11) l_0_2_9)))
 (let ((?x2535 (* l_0_2_10 l_0_2_10)))
 (let ((?x2536 (* 2.0 ?x2535)))
 (let ((?x2546 (+ (+ (- (+ (* (* (- 4.0) l_0_2_10) l_0_2_8) ?x2536) ?x2539) ?x2542) ?x2545)))
 (let ((?x2558 (- (- (- (- (- (- (- ?x2546 ?x2471) ?x2473) ?x2549) ?x2551) ?x2553) ?x2555) ?x2557)))
 (let ((?x2569 (+ (- (- (- (- ?x2558 ?x2559) ?x2561) ?x2563) ?x2565) (* 1.0 (* l_0_2_4 l_0_2_4)))))
 (let ((?x2575 (+ (+ ?x2569 (* 1.0 (* l_0_2_5 l_0_2_5))) (* 1.0 (* l_0_2_6 l_0_2_6)))))
 (= (+ (+ ?x2575 ?x2491) ?x2493) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2650 (* (* 2.0 l_0_2_3) l_0_2_5)))
 (let ((?x2635 (* (* 2.0 l_0_2_2) l_0_2_4)))
 (let ((?x2539 (* (* 4.0 l_0_2_11) l_0_2_9)))
 (let ((?x2639 (- (+ (+ (* (* 4.0 l_0_2_10) l_0_2_8) ?x2539) ?x2635) (* (* 2.0 l_0_2_20) l_0_2_22))))
 (let ((?x2645 (- (- ?x2639 (* (* 2.0 l_0_2_21) l_0_2_23)) (* (* 2.0 l_0_2_26) l_0_2_28))))
 (let ((?x2654 (- (+ (- ?x2645 (* (* 2.0 l_0_2_27) l_0_2_29)) ?x2650) (* (* 2.0 l_0_2_32) l_0_2_34))))
 (let ((?x2660 (- (- ?x2654 (* (* 2.0 l_0_2_33) l_0_2_35)) (* (* 2.0 l_0_2_8) l_0_2_8))))
 (= (- ?x2660 (* (* 2.0 l_0_2_9) l_0_2_9)) 0.0)))))))))
(assert
 (let ((?x2493 (* l_0_2_9 l_0_2_9)))
 (let ((?x2712 (* 2.0 ?x2493)))
 (let ((?x2491 (* l_0_2_8 l_0_2_8)))
 (let ((?x2707 (* 2.0 ?x2491)))
 (let ((?x2734 (* l_0_2_33 l_0_2_33)))
 (let ((?x2732 (* l_0_2_32 l_0_2_32)))
 (let ((?x2728 (* l_0_2_27 l_0_2_27)))
 (let ((?x2726 (* l_0_2_26 l_0_2_26)))
 (let ((?x2724 (* l_0_2_21 l_0_2_21)))
 (let ((?x2725 (- (- (* 1.0 (* l_0_2_2 l_0_2_2)) (* l_0_2_20 l_0_2_20)) ?x2724)))
 (let ((?x2733 (- (+ (- (- ?x2725 ?x2726) ?x2728) (* 1.0 (* l_0_2_3 l_0_2_3))) ?x2732)))
 (= (+ (+ (- ?x2733 ?x2734) ?x2707) ?x2712) 0.0)))))))))))))
(assert
 (let ((?x2763 (* l_0_2_7 l_0_2_7)))
 (= (- (+ (* (- l_0_2_1) l_0_2_1) (* l_0_2_13 l_0_2_13)) ?x2763) 0.0)))
(assert
 (let ((?x2763 (* l_0_2_7 l_0_2_7)))
 (let ((?x2790 (* 2.0 ?x2763)))
 (let ((?x2787 (* 2.0 l_0_2_7)))
 (let ((?x2788 (* ?x2787 l_0_2_8)))
 (let ((?x2785 (* l_0_2_31 l_0_2_31)))
 (let ((?x2783 (* l_0_2_25 l_0_2_25)))
 (let ((?x2781 (* l_0_2_19 l_0_2_19)))
 (let ((?x2778 (* 2.0 l_0_2_13)))
 (let ((?x2779 (* ?x2778 l_0_2_14)))
 (let ((?x2777 (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) (* 1.0 (* l_0_2_1 l_0_2_1)))))
 (= (+ (- (- (- (- (+ ?x2777 ?x2779) ?x2781) ?x2783) ?x2785) ?x2788) ?x2790) 0.0))))))))))))
(assert
 (let ((?x2778 (* 2.0 l_0_2_13)))
 (let ((?x2819 (* ?x2778 l_0_2_16)))
 (let ((?x2816 (* 2.0 l_0_2_10)))
 (let ((?x2817 (* ?x2816 l_0_2_7)))
 (let ((?x2822 (- (+ (- (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x2817) ?x2819) (* (* 2.0 l_0_2_7) l_0_2_7))))
 (= ?x2822 0.0)))))))
(assert
 (let ((?x2489 (* (* 4.0 l_0_2_7) l_0_2_8)))
 (let ((?x2650 (* (* 2.0 l_0_2_3) l_0_2_5)))
 (let ((?x2635 (* (* 2.0 l_0_2_2) l_0_2_4)))
 (let ((?x2854 (* (* 2.0 l_0_2_15) l_0_2_17)))
 (let ((?x2851 (* (* 2.0 l_0_2_14) l_0_2_16)))
 (let ((?x2847 (* 2.0 l_0_2_11)))
 (let ((?x2848 (* ?x2847 l_0_2_9)))
 (let ((?x2816 (* 2.0 l_0_2_10)))
 (let ((?x2845 (* ?x2816 l_0_2_8)))
 (let ((?x2844 (+ (* (* 2.0 l_0_2_1) l_0_2_4) (* (* 4.0 l_0_2_10) l_0_2_7))))
 (let ((?x2857 (- (+ (+ (- (- ?x2844 ?x2845) ?x2848) ?x2851) ?x2854) (* (* 2.0 l_0_2_19) l_0_2_22))))
 (let ((?x2863 (- (- (- (- ?x2857 ?x2635) (* (* 2.0 l_0_2_25) l_0_2_28)) ?x2650) (* (* 2.0 l_0_2_31) l_0_2_34))))
 (= (- ?x2863 ?x2489) 0.0))))))))))))))
(assert
 (let ((?x2787 (* 2.0 l_0_2_7)))
 (let ((?x2788 (* ?x2787 l_0_2_8)))
 (let ((?x2573 (* l_0_2_6 l_0_2_6)))
 (let ((?x2570 (* l_0_2_5 l_0_2_5)))
 (let ((?x2567 (* l_0_2_4 l_0_2_4)))
 (let ((?x2925 (* l_0_2_18 l_0_2_18)))
 (let ((?x2923 (* l_0_2_17 l_0_2_17)))
 (let ((?x2921 (* l_0_2_16 l_0_2_16)))
 (let ((?x2778 (* 2.0 l_0_2_13)))
 (let ((?x2779 (* ?x2778 l_0_2_14)))
 (let ((?x2544 (* l_0_2_12 l_0_2_12)))
 (let ((?x2541 (* l_0_2_11 l_0_2_11)))
 (let ((?x2918 (- (- (* (* (- 4.0) l_0_2_10) l_0_2_7) (* l_0_2_10 l_0_2_10)) ?x2541)))
 (let ((?x2928 (- (- (+ (+ (+ (- (- ?x2918 ?x2544) ?x2779) ?x2921) ?x2923) ?x2925) ?x2567) ?x2570)))
 (= (+ (- ?x2928 ?x2573) ?x2788) 0.0))))))))))))))))
(assert
 (= (+ (* (- l_0_2_13) l_0_2_13) (* l_0_2_7 l_0_2_7)) 0.0))
(assert
 (let ((?x2778 (* 2.0 l_0_2_13)))
 (let ((?x2819 (* ?x2778 l_0_2_16)))
 (let ((?x2816 (* 2.0 l_0_2_10)))
 (let ((?x2817 (* ?x2816 l_0_2_7)))
 (= (- ?x2817 ?x2819) 0.0))))))
(assert
 (let ((?x2854 (* (* 2.0 l_0_2_15) l_0_2_17)))
 (let ((?x2851 (* (* 2.0 l_0_2_14) l_0_2_16)))
 (let ((?x2847 (* 2.0 l_0_2_11)))
 (let ((?x2848 (* ?x2847 l_0_2_9)))
 (let ((?x2816 (* 2.0 l_0_2_10)))
 (let ((?x2845 (* ?x2816 l_0_2_8)))
 (let ((?x2973 (- (- (+ (- ?x2845 (* ?x2816 l_0_2_10)) ?x2848) (* ?x2847 l_0_2_11)) (* (* 2.0 l_0_2_12) l_0_2_12))))
 (= (- (- ?x2973 ?x2851) ?x2854) 0.0)))))))))
(assert
 (let ((?x2925 (* l_0_2_18 l_0_2_18)))
 (let ((?x2923 (* l_0_2_17 l_0_2_17)))
 (let ((?x2921 (* l_0_2_16 l_0_2_16)))
 (let ((?x2544 (* l_0_2_12 l_0_2_12)))
 (let ((?x2997 (- (+ (+ (* l_0_2_10 l_0_2_10) (* l_0_2_11 l_0_2_11)) ?x2544) ?x2921)))
 (= (- (- ?x2997 ?x2923) ?x2925) 0.0)))))))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (>= l_0_2_9 0.0))
(assert
 (>= l_0_2_12 0.0))
(assert
 (>= l_0_2_13 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_18 0.0))
(assert
 (>= l_0_2_19 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_24 0.0))
(assert
 (>= l_0_2_25 0.0))
(assert
 (>= l_0_2_27 0.0))
(assert
 (>= l_0_2_30 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_33 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (let ((?x3035 (* l_0_3_61 l_0_3_61)))
 (let ((?x3034 (+ (* 1.0 (* l_0_3_1 l_0_3_1)) (* 1.0 (* l_0_3_46 l_0_3_46)))))
 (= (+ (- ?x3034 ?x3035) 1.0) 0.0))))
(assert
 (let ((?x3050 (* 4.0 l_0_3_31)))
 (let ((?x3051 (* ?x3050 l_0_3_31)))
 (let ((?x3047 (* l_0_3_16 l_0_3_16)))
 (let ((?x3048 (* 4.0 ?x3047)))
 (let ((?x3049 (+ (- (* (* 2.0 l_0_3_1) l_0_3_2) (* l_0_3_1 l_0_3_1)) ?x3048)))
 (let ((?x3058 (- (+ (- ?x3049 ?x3051) (* (* 2.0 l_0_3_46) l_0_3_47)) (* (* 2.0 l_0_3_61) l_0_3_62))))
 (= ?x3058 0.0))))))))
(assert
 (let ((?x3109 (* l_0_3_63 l_0_3_63)))
 (let ((?x3107 (* l_0_3_62 l_0_3_62)))
 (let ((?x3098 (* 8.0 l_0_3_31)))
 (let ((?x3099 (* ?x3098 l_0_3_32)))
 (let ((?x3089 (* 8.0 l_0_3_16)))
 (let ((?x3090 (* ?x3089 l_0_3_17)))
 (let ((?x3094 (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) ?x3090) (* 1.0 (* l_0_3_2 l_0_3_2)))))
 (let ((?x3103 (+ (- (+ ?x3094 (* 1.0 (* l_0_3_3 l_0_3_3))) ?x3099) (* 1.0 (* l_0_3_47 l_0_3_47)))))
 (= (- (- (+ ?x3103 (* 1.0 (* l_0_3_48 l_0_3_48))) ?x3107) ?x3109) 0.0))))))))))
(assert
 (let ((?x3098 (* 8.0 l_0_3_31)))
 (let ((?x3150 (* ?x3098 l_0_3_34)))
 (let ((?x3050 (* 4.0 l_0_3_31)))
 (let ((?x3148 (* ?x3050 l_0_3_32)))
 (let ((?x3145 (* 2.0 l_0_3_3)))
 (let ((?x3146 (* ?x3145 l_0_3_5)))
 (let ((?x3142 (* 2.0 l_0_3_2)))
 (let ((?x3143 (* ?x3142 l_0_3_4)))
 (let ((?x3089 (* 8.0 l_0_3_16)))
 (let ((?x3140 (* ?x3089 l_0_3_19)))
 (let ((?x3137 (* 4.0 l_0_3_16)))
 (let ((?x3138 (* ?x3137 l_0_3_17)))
 (let ((?x3147 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x3138) ?x3140) ?x3143) ?x3146)))
 (let ((?x3157 (+ (+ (- (- ?x3147 ?x3148) ?x3150) (* (* 2.0 l_0_3_47) l_0_3_49)) (* (* 2.0 l_0_3_48) l_0_3_50))))
 (let ((?x3163 (- (- ?x3157 (* (* 2.0 l_0_3_62) l_0_3_64)) (* (* 2.0 l_0_3_63) l_0_3_65))))
 (= ?x3163 0.0)))))))))))))))))
(assert
 (let ((?x3098 (* 8.0 l_0_3_31)))
 (let ((?x3213 (* ?x3098 l_0_3_37)))
 (let ((?x3099 (* ?x3098 l_0_3_32)))
 (let ((?x3145 (* 2.0 l_0_3_3)))
 (let ((?x3210 (* ?x3145 l_0_3_8)))
 (let ((?x3142 (* 2.0 l_0_3_2)))
 (let ((?x3208 (* ?x3142 l_0_3_7)))
 (let ((?x3089 (* 8.0 l_0_3_16)))
 (let ((?x3206 (* ?x3089 l_0_3_22)))
 (let ((?x3209 (+ (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) (* ?x3089 l_0_3_17)) ?x3206) ?x3208)))
 (let ((?x3216 (+ (- (- (+ ?x3209 ?x3210) ?x3099) ?x3213) (* (* 2.0 l_0_3_47) l_0_3_52))))
 (let ((?x3220 (- (+ ?x3216 (* (* 2.0 l_0_3_48) l_0_3_53)) (* (* 2.0 l_0_3_62) l_0_3_67))))
 (= (- ?x3220 (* (* 2.0 l_0_3_63) l_0_3_68)) 0.0))))))))))))))
(assert
 (let ((?x3098 (* 8.0 l_0_3_31)))
 (let ((?x3270 (* ?x3098 l_0_3_41)))
 (let ((?x3050 (* 4.0 l_0_3_31)))
 (let ((?x3148 (* ?x3050 l_0_3_32)))
 (let ((?x3089 (* 8.0 l_0_3_16)))
 (let ((?x3267 (* ?x3089 l_0_3_26)))
 (let ((?x3137 (* 4.0 l_0_3_16)))
 (let ((?x3138 (* ?x3137 l_0_3_17)))
 (let ((?x3263 (* 2.0 l_0_3_12)))
 (let ((?x3264 (* ?x3263 l_0_3_3)))
 (let ((?x3262 (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) (* (* 2.0 l_0_3_11) l_0_3_2))))
 (let ((?x3273 (+ (- (+ (+ (- (+ ?x3262 ?x3264) ?x3138) ?x3267) ?x3148) ?x3270) (* (* 2.0 l_0_3_47) l_0_3_56))))
 (let ((?x3277 (- (+ ?x3273 (* (* 2.0 l_0_3_48) l_0_3_57)) (* (* 2.0 l_0_3_62) l_0_3_71))))
 (= (- ?x3277 (* (* 2.0 l_0_3_63) l_0_3_72)) 0.0)))))))))))))))
(assert
 (let ((?x3336 (* 4.0 l_0_3_33)))
 (let ((?x3337 (* ?x3336 l_0_3_33)))
 (let ((?x3333 (* 4.0 l_0_3_32)))
 (let ((?x3334 (* ?x3333 l_0_3_32)))
 (let ((?x3095 (* l_0_3_3 l_0_3_3)))
 (let ((?x3092 (* l_0_3_2 l_0_3_2)))
 (let ((?x3328 (* l_0_3_18 l_0_3_18)))
 (let ((?x3329 (* 4.0 ?x3328)))
 (let ((?x3326 (* l_0_3_17 l_0_3_17)))
 (let ((?x3327 (* 4.0 ?x3326)))
 (= (- (- (- (- (+ ?x3327 ?x3329) ?x3092) ?x3095) ?x3334) ?x3337) 0.0))))))))))))
(assert
 (let ((?x3377 (* 8.0 l_0_3_33)))
 (let ((?x3378 (* ?x3377 l_0_3_35)))
 (let ((?x3371 (* 8.0 l_0_3_32)))
 (let ((?x3372 (* ?x3371 l_0_3_34)))
 (let ((?x3145 (* 2.0 l_0_3_3)))
 (let ((?x3146 (* ?x3145 l_0_3_5)))
 (let ((?x3142 (* 2.0 l_0_3_2)))
 (let ((?x3143 (* ?x3142 l_0_3_4)))
 (let ((?x3328 (* l_0_3_18 l_0_3_18)))
 (let ((?x3367 (* 2.0 ?x3328)))
 (let ((?x3364 (* 8.0 l_0_3_18)))
 (let ((?x3365 (* ?x3364 l_0_3_20)))
 (let ((?x3326 (* l_0_3_17 l_0_3_17)))
 (let ((?x3362 (* 2.0 ?x3326)))
 (let ((?x3360 (* 8.0 l_0_3_17)))
 (let ((?x3361 (* ?x3360 l_0_3_19)))
 (let ((?x3376 (- (- (- (- (+ (+ (+ ?x3361 ?x3362) ?x3365) ?x3367) ?x3143) ?x3146) ?x3372) (* (* 2.0 l_0_3_32) l_0_3_32))))
 (= (- (- ?x3376 ?x3378) (* (* 2.0 l_0_3_33) l_0_3_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x3336 (* 4.0 l_0_3_33)))
 (let ((?x3337 (* ?x3336 l_0_3_33)))
 (let ((?x3377 (* 8.0 l_0_3_33)))
 (let ((?x3435 (* ?x3377 l_0_3_38)))
 (let ((?x3333 (* 4.0 l_0_3_32)))
 (let ((?x3334 (* ?x3333 l_0_3_32)))
 (let ((?x3371 (* 8.0 l_0_3_32)))
 (let ((?x3432 (* ?x3371 l_0_3_37)))
 (let ((?x3145 (* 2.0 l_0_3_3)))
 (let ((?x3210 (* ?x3145 l_0_3_8)))
 (let ((?x3142 (* 2.0 l_0_3_2)))
 (let ((?x3208 (* ?x3142 l_0_3_7)))
 (let ((?x3328 (* l_0_3_18 l_0_3_18)))
 (let ((?x3329 (* 4.0 ?x3328)))
 (let ((?x3364 (* 8.0 l_0_3_18)))
 (let ((?x3427 (* ?x3364 l_0_3_23)))
 (let ((?x3326 (* l_0_3_17 l_0_3_17)))
 (let ((?x3327 (* 4.0 ?x3326)))
 (let ((?x3360 (* 8.0 l_0_3_17)))
 (let ((?x3425 (* ?x3360 l_0_3_22)))
 (let ((?x3434 (- (- (- (- (+ (+ (+ ?x3425 ?x3327) ?x3427) ?x3329) ?x3208) ?x3210) ?x3432) ?x3334)))
 (= (- (- ?x3434 ?x3435) ?x3337) 0.0)))))))))))))))))))))))
(assert
 (let ((?x3350 (* l_0_3_33 l_0_3_33)))
 (let ((?x3414 (* 2.0 ?x3350)))
 (let ((?x3377 (* 8.0 l_0_3_33)))
 (let ((?x3488 (* ?x3377 l_0_3_42)))
 (let ((?x3344 (* l_0_3_32 l_0_3_32)))
 (let ((?x3403 (* 2.0 ?x3344)))
 (let ((?x3371 (* 8.0 l_0_3_32)))
 (let ((?x3485 (* ?x3371 l_0_3_41)))
 (let ((?x3364 (* 8.0 l_0_3_18)))
 (let ((?x3480 (* ?x3364 l_0_3_27)))
 (let ((?x3360 (* 8.0 l_0_3_17)))
 (let ((?x3475 (* ?x3360 l_0_3_26)))
 (let ((?x3263 (* 2.0 l_0_3_12)))
 (let ((?x3264 (* ?x3263 l_0_3_3)))
 (let ((?x3479 (- (+ (- (* (* (- 2.0) l_0_3_11) l_0_3_2) ?x3264) ?x3475) (* (* 2.0 l_0_3_17) l_0_3_17))))
 (let ((?x3487 (+ (- (- (+ ?x3479 ?x3480) (* (* 2.0 l_0_3_18) l_0_3_18)) ?x3485) ?x3403)))
 (= (+ (- ?x3487 ?x3488) ?x3414) 0.0))))))))))))))))))
(assert
 (let ((?x3561 (* l_0_3_6 l_0_3_6)))
 (let ((?x3559 (* l_0_3_5 l_0_3_5)))
 (let ((?x3557 (* l_0_3_4 l_0_3_4)))
 (let ((?x3554 (* 4.0 l_0_3_36)))
 (let ((?x3555 (* ?x3554 l_0_3_36)))
 (let ((?x3551 (* 4.0 l_0_3_35)))
 (let ((?x3552 (* ?x3551 l_0_3_35)))
 (let ((?x3548 (* 4.0 l_0_3_34)))
 (let ((?x3549 (* ?x3548 l_0_3_34)))
 (let ((?x3336 (* 4.0 l_0_3_33)))
 (let ((?x3546 (* ?x3336 l_0_3_35)))
 (let ((?x3333 (* 4.0 l_0_3_32)))
 (let ((?x3544 (* ?x3333 l_0_3_34)))
 (let ((?x3541 (* 2.0 l_0_3_31)))
 (let ((?x3542 (* ?x3541 l_0_3_32)))
 (let ((?x3538 (* l_0_3_21 l_0_3_21)))
 (let ((?x3539 (* 4.0 ?x3538)))
 (let ((?x3535 (* l_0_3_20 l_0_3_20)))
 (let ((?x3536 (* 4.0 ?x3535)))
 (let ((?x3532 (* l_0_3_19 l_0_3_19)))
 (let ((?x3533 (* 4.0 ?x3532)))
 (let ((?x3529 (* 4.0 l_0_3_18)))
 (let ((?x3530 (* ?x3529 l_0_3_20)))
 (let ((?x3526 (* 4.0 l_0_3_17)))
 (let ((?x3527 (* ?x3526 l_0_3_19)))
 (let ((?x3537 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_16) l_0_3_17) ?x3527) ?x3530) ?x3533) ?x3536)))
 (let ((?x3556 (- (- (- (- (- (+ (+ ?x3537 ?x3539) ?x3542) ?x3544) ?x3546) ?x3549) ?x3552) ?x3555)))
 (= (- (- (- ?x3556 ?x3557) ?x3559) ?x3561) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x3651 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3648 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3645 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3641 (* 8.0 l_0_3_36)))
 (let ((?x3642 (* ?x3641 l_0_3_39)))
 (let ((?x3638 (* 8.0 l_0_3_35)))
 (let ((?x3639 (* ?x3638 l_0_3_38)))
 (let ((?x3635 (* 8.0 l_0_3_34)))
 (let ((?x3636 (* ?x3635 l_0_3_37)))
 (let ((?x3336 (* 4.0 l_0_3_33)))
 (let ((?x3633 (* ?x3336 l_0_3_38)))
 (let ((?x3377 (* 8.0 l_0_3_33)))
 (let ((?x3378 (* ?x3377 l_0_3_35)))
 (let ((?x3333 (* 4.0 l_0_3_32)))
 (let ((?x3630 (* ?x3333 l_0_3_37)))
 (let ((?x3371 (* 8.0 l_0_3_32)))
 (let ((?x3372 (* ?x3371 l_0_3_34)))
 (let ((?x3626 (* 8.0 l_0_3_21)))
 (let ((?x3627 (* ?x3626 l_0_3_24)))
 (let ((?x3623 (* 8.0 l_0_3_20)))
 (let ((?x3624 (* ?x3623 l_0_3_23)))
 (let ((?x3620 (* 8.0 l_0_3_19)))
 (let ((?x3621 (* ?x3620 l_0_3_22)))
 (let ((?x3529 (* 4.0 l_0_3_18)))
 (let ((?x3618 (* ?x3529 l_0_3_23)))
 (let ((?x3364 (* 8.0 l_0_3_18)))
 (let ((?x3365 (* ?x3364 l_0_3_20)))
 (let ((?x3526 (* 4.0 l_0_3_17)))
 (let ((?x3615 (* ?x3526 l_0_3_22)))
 (let ((?x3360 (* 8.0 l_0_3_17)))
 (let ((?x3361 (* ?x3360 l_0_3_19)))
 (let ((?x3629 (- (+ (+ (+ (+ (+ (+ ?x3361 ?x3615) ?x3365) ?x3618) ?x3621) ?x3624) ?x3627) ?x3372)))
 (let ((?x3646 (- (- (- (- (- (- (- ?x3629 ?x3630) ?x3378) ?x3633) ?x3636) ?x3639) ?x3642) ?x3645)))
 (= (- (- ?x3646 ?x3648) ?x3651) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3641 (* 8.0 l_0_3_36)))
 (let ((?x3742 (* ?x3641 l_0_3_43)))
 (let ((?x3638 (* 8.0 l_0_3_35)))
 (let ((?x3740 (* ?x3638 l_0_3_42)))
 (let ((?x3635 (* 8.0 l_0_3_34)))
 (let ((?x3738 (* ?x3635 l_0_3_41)))
 (let ((?x3336 (* 4.0 l_0_3_33)))
 (let ((?x3736 (* ?x3336 l_0_3_42)))
 (let ((?x3546 (* ?x3336 l_0_3_35)))
 (let ((?x3333 (* 4.0 l_0_3_32)))
 (let ((?x3733 (* ?x3333 l_0_3_41)))
 (let ((?x3544 (* ?x3333 l_0_3_34)))
 (let ((?x3626 (* 8.0 l_0_3_21)))
 (let ((?x3730 (* ?x3626 l_0_3_28)))
 (let ((?x3623 (* 8.0 l_0_3_20)))
 (let ((?x3728 (* ?x3623 l_0_3_27)))
 (let ((?x3620 (* 8.0 l_0_3_19)))
 (let ((?x3726 (* ?x3620 l_0_3_26)))
 (let ((?x3529 (* 4.0 l_0_3_18)))
 (let ((?x3724 (* ?x3529 l_0_3_27)))
 (let ((?x3530 (* ?x3529 l_0_3_20)))
 (let ((?x3526 (* 4.0 l_0_3_17)))
 (let ((?x3721 (* ?x3526 l_0_3_26)))
 (let ((?x3527 (* ?x3526 l_0_3_19)))
 (let ((?x3717 (* 2.0 l_0_3_13)))
 (let ((?x3718 (* ?x3717 l_0_3_6)))
 (let ((?x3263 (* 2.0 l_0_3_12)))
 (let ((?x3715 (* ?x3263 l_0_3_5)))
 (let ((?x3722 (+ (- (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x3715) ?x3718) ?x3527) ?x3721)))
 (let ((?x3734 (- (+ (+ (+ (+ (+ (- ?x3722 ?x3530) ?x3724) ?x3726) ?x3728) ?x3730) ?x3544) ?x3733)))
 (= (- (- (- (- (+ ?x3734 ?x3546) ?x3736) ?x3738) ?x3740) ?x3742) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x3846 (* l_0_3_9 l_0_3_9)))
 (let ((?x3844 (* l_0_3_8 l_0_3_8)))
 (let ((?x3842 (* l_0_3_7 l_0_3_7)))
 (let ((?x3839 (* 4.0 l_0_3_40)))
 (let ((?x3840 (* ?x3839 l_0_3_40)))
 (let ((?x3836 (* 4.0 l_0_3_39)))
 (let ((?x3837 (* ?x3836 l_0_3_39)))
 (let ((?x3833 (* 4.0 l_0_3_38)))
 (let ((?x3834 (* ?x3833 l_0_3_38)))
 (let ((?x3830 (* 4.0 l_0_3_37)))
 (let ((?x3831 (* ?x3830 l_0_3_37)))
 (let ((?x3377 (* 8.0 l_0_3_33)))
 (let ((?x3435 (* ?x3377 l_0_3_38)))
 (let ((?x3371 (* 8.0 l_0_3_32)))
 (let ((?x3432 (* ?x3371 l_0_3_37)))
 (let ((?x3825 (* l_0_3_25 l_0_3_25)))
 (let ((?x3826 (* 4.0 ?x3825)))
 (let ((?x3822 (* l_0_3_24 l_0_3_24)))
 (let ((?x3823 (* 4.0 ?x3822)))
 (let ((?x3819 (* l_0_3_23 l_0_3_23)))
 (let ((?x3820 (* 4.0 ?x3819)))
 (let ((?x3816 (* l_0_3_22 l_0_3_22)))
 (let ((?x3817 (* 4.0 ?x3816)))
 (let ((?x3364 (* 8.0 l_0_3_18)))
 (let ((?x3427 (* ?x3364 l_0_3_23)))
 (let ((?x3815 (+ (+ (* (- l_0_3_10) l_0_3_10) (* (* 8.0 l_0_3_17) l_0_3_22)) ?x3427)))
 (let ((?x3832 (- (- (- (+ (+ (+ (+ ?x3815 ?x3817) ?x3820) ?x3823) ?x3826) ?x3432) ?x3435) ?x3831)))
 (= (- (- (- (- (- (- ?x3832 ?x3834) ?x3837) ?x3840) ?x3842) ?x3844) ?x3846) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x3929 (* (* 8.0 l_0_3_40) l_0_3_44)))
 (let ((?x3926 (* (* 8.0 l_0_3_39) l_0_3_43)))
 (let ((?x3923 (* (* 8.0 l_0_3_38) l_0_3_42)))
 (let ((?x3920 (* (* 8.0 l_0_3_37) l_0_3_41)))
 (let ((?x3377 (* 8.0 l_0_3_33)))
 (let ((?x3488 (* ?x3377 l_0_3_42)))
 (let ((?x3336 (* 4.0 l_0_3_33)))
 (let ((?x3633 (* ?x3336 l_0_3_38)))
 (let ((?x3371 (* 8.0 l_0_3_32)))
 (let ((?x3485 (* ?x3371 l_0_3_41)))
 (let ((?x3333 (* 4.0 l_0_3_32)))
 (let ((?x3630 (* ?x3333 l_0_3_37)))
 (let ((?x3913 (* (* 8.0 l_0_3_25) l_0_3_29)))
 (let ((?x3910 (* (* 8.0 l_0_3_24) l_0_3_28)))
 (let ((?x3907 (* (* 8.0 l_0_3_23) l_0_3_27)))
 (let ((?x3904 (* (* 8.0 l_0_3_22) l_0_3_26)))
 (let ((?x3364 (* 8.0 l_0_3_18)))
 (let ((?x3480 (* ?x3364 l_0_3_27)))
 (let ((?x3529 (* 4.0 l_0_3_18)))
 (let ((?x3618 (* ?x3529 l_0_3_23)))
 (let ((?x3360 (* 8.0 l_0_3_17)))
 (let ((?x3475 (* ?x3360 l_0_3_26)))
 (let ((?x3526 (* 4.0 l_0_3_17)))
 (let ((?x3615 (* ?x3526 l_0_3_22)))
 (let ((?x3717 (* 2.0 l_0_3_13)))
 (let ((?x3897 (* ?x3717 l_0_3_9)))
 (let ((?x3263 (* 2.0 l_0_3_12)))
 (let ((?x3895 (* ?x3263 l_0_3_8)))
 (let ((?x3260 (* 2.0 l_0_3_11)))
 (let ((?x3893 (* ?x3260 l_0_3_7)))
 (let ((?x3899 (- (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_14) ?x3893) ?x3895) ?x3897) ?x3615)))
 (let ((?x3914 (+ (+ (+ (+ (+ (- (+ ?x3899 ?x3475) ?x3618) ?x3480) ?x3904) ?x3907) ?x3910) ?x3913)))
 (let ((?x3927 (- (- (- (- (+ (- (+ ?x3914 ?x3630) ?x3485) ?x3633) ?x3488) ?x3920) ?x3923) ?x3926)))
 (= (- ?x3927 ?x3929) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4052 (* (* 4.0 l_0_3_45) l_0_3_45)))
 (let ((?x4049 (* (* 4.0 l_0_3_44) l_0_3_44)))
 (let ((?x4046 (* (* 4.0 l_0_3_43) l_0_3_43)))
 (let ((?x4043 (* (* 4.0 l_0_3_42) l_0_3_42)))
 (let ((?x4040 (* (* 4.0 l_0_3_41) l_0_3_41)))
 (let ((?x3336 (* 4.0 l_0_3_33)))
 (let ((?x3736 (* ?x3336 l_0_3_42)))
 (let ((?x3333 (* 4.0 l_0_3_32)))
 (let ((?x3733 (* ?x3333 l_0_3_41)))
 (let ((?x3541 (* 2.0 l_0_3_31)))
 (let ((?x3542 (* ?x3541 l_0_3_32)))
 (let ((?x4033 (* l_0_3_30 l_0_3_30)))
 (let ((?x4034 (* 4.0 ?x4033)))
 (let ((?x4030 (* l_0_3_29 l_0_3_29)))
 (let ((?x4031 (* 4.0 ?x4030)))
 (let ((?x4027 (* l_0_3_28 l_0_3_28)))
 (let ((?x4028 (* 4.0 ?x4027)))
 (let ((?x4024 (* l_0_3_27 l_0_3_27)))
 (let ((?x4025 (* 4.0 ?x4024)))
 (let ((?x4021 (* l_0_3_26 l_0_3_26)))
 (let ((?x4022 (* 4.0 ?x4021)))
 (let ((?x3529 (* 4.0 l_0_3_18)))
 (let ((?x3724 (* ?x3529 l_0_3_27)))
 (let ((?x3526 (* 4.0 l_0_3_17)))
 (let ((?x3721 (* ?x3526 l_0_3_26)))
 (let ((?x4014 (* l_0_3_15 l_0_3_15)))
 (let ((?x4012 (* l_0_3_14 l_0_3_14)))
 (let ((?x4010 (* l_0_3_13 l_0_3_13)))
 (let ((?x4013 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x4010) ?x4012)))
 (let ((?x4020 (- (- (+ (- ?x4013 ?x4014) (* (* 2.0 l_0_3_16) l_0_3_17)) ?x3721) ?x3724)))
 (let ((?x4037 (+ (- (+ (+ (+ (+ (+ ?x4020 ?x4022) ?x4025) ?x4028) ?x4031) ?x4034) ?x3542) ?x3733)))
 (= (- (- (- (- (- (+ ?x4037 ?x3736) ?x4040) ?x4043) ?x4046) ?x4049) ?x4052) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x3047 (* l_0_3_16 l_0_3_16)))
 (let ((?x4114 (* 2.0 ?x3047)))
 (let ((?x4117 (- (+ (* (* 2.0 l_0_3_1) l_0_3_4) ?x4114) (* (* 2.0 l_0_3_31) l_0_3_31))))
 (let ((?x4121 (- (+ ?x4117 (* (* 2.0 l_0_3_46) l_0_3_49)) (* (* 2.0 l_0_3_61) l_0_3_64))))
 (= ?x4121 0.0))))))
(assert
 (let ((?x3050 (* 4.0 l_0_3_31)))
 (let ((?x3051 (* ?x3050 l_0_3_31)))
 (let ((?x3047 (* l_0_3_16 l_0_3_16)))
 (let ((?x3048 (* 4.0 ?x3047)))
 (let ((?x4144 (+ (- (+ (* (* 2.0 l_0_3_1) l_0_3_7) ?x3048) ?x3051) (* (* 2.0 l_0_3_46) l_0_3_52))))
 (= (- ?x4144 (* (* 2.0 l_0_3_61) l_0_3_67)) 0.0)))))))
(assert
 (let ((?x4164 (- (* (* 2.0 l_0_3_1) l_0_3_11) (* (* 2.0 l_0_3_16) l_0_3_16))))
 (let ((?x4167 (+ (+ ?x4164 (* 2.0 (* l_0_3_31 l_0_3_31))) (* (* 2.0 l_0_3_46) l_0_3_56))))
 (= (- ?x4167 (* (* 2.0 l_0_3_61) l_0_3_71)) 0.0))))
(assert
 (let ((?x4211 (* l_0_3_66 l_0_3_66)))
 (let ((?x4209 (* l_0_3_65 l_0_3_65)))
 (let ((?x4207 (* l_0_3_64 l_0_3_64)))
 (let ((?x3066 (* l_0_3_31 l_0_3_31)))
 (let ((?x3050 (* 4.0 l_0_3_31)))
 (let ((?x4189 (* ?x3050 l_0_3_34)))
 (let ((?x4190 (- (- (* (* 4.0 l_0_3_16) l_0_3_19) (* l_0_3_16 l_0_3_16)) ?x4189)))
 (let ((?x4196 (+ (+ (+ ?x4190 ?x3066) (* 1.0 (* l_0_3_4 l_0_3_4))) (* 1.0 (* l_0_3_49 l_0_3_49)))))
 (let ((?x4201 (+ (+ ?x4196 (* 1.0 (* l_0_3_5 l_0_3_5))) (* 1.0 (* l_0_3_50 l_0_3_50)))))
 (let ((?x4206 (+ (+ ?x4201 (* 1.0 (* l_0_3_51 l_0_3_51))) (* 1.0 (* l_0_3_6 l_0_3_6)))))
 (= (- (- (- ?x4206 ?x4207) ?x4209) ?x4211) 0.0))))))))))))
(assert
 (let ((?x3651 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3648 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3645 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3050 (* 4.0 l_0_3_31)))
 (let ((?x4243 (* ?x3050 l_0_3_37)))
 (let ((?x3098 (* 8.0 l_0_3_31)))
 (let ((?x3150 (* ?x3098 l_0_3_34)))
 (let ((?x3137 (* 4.0 l_0_3_16)))
 (let ((?x4240 (* ?x3137 l_0_3_22)))
 (let ((?x3089 (* 8.0 l_0_3_16)))
 (let ((?x3140 (* ?x3089 l_0_3_19)))
 (let ((?x4248 (+ (+ (- (- (+ ?x3140 ?x4240) ?x3150) ?x4243) ?x3645) (* (* 2.0 l_0_3_49) l_0_3_52))))
 (let ((?x4255 (+ (+ (+ ?x4248 ?x3648) (* (* 2.0 l_0_3_50) l_0_3_53)) (* (* 2.0 l_0_3_51) l_0_3_54))))
 (let ((?x4262 (- (- (+ ?x4255 ?x3651) (* (* 2.0 l_0_3_64) l_0_3_67)) (* (* 2.0 l_0_3_65) l_0_3_68))))
 (= (- ?x4262 (* (* 2.0 l_0_3_66) l_0_3_69)) 0.0))))))))))))))))
(assert
 (let ((?x3050 (* 4.0 l_0_3_31)))
 (let ((?x4309 (* ?x3050 l_0_3_41)))
 (let ((?x4189 (* ?x3050 l_0_3_34)))
 (let ((?x3137 (* 4.0 l_0_3_16)))
 (let ((?x4306 (* ?x3137 l_0_3_26)))
 (let ((?x4187 (* ?x3137 l_0_3_19)))
 (let ((?x3717 (* 2.0 l_0_3_13)))
 (let ((?x3718 (* ?x3717 l_0_3_6)))
 (let ((?x3263 (* 2.0 l_0_3_12)))
 (let ((?x3715 (* ?x3263 l_0_3_5)))
 (let ((?x4307 (+ (- (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x3715) ?x3718) ?x4187) ?x4306)))
 (let ((?x4314 (+ (+ (- (+ ?x4307 ?x4189) ?x4309) (* (* 2.0 l_0_3_49) l_0_3_56)) (* (* 2.0 l_0_3_50) l_0_3_57))))
 (let ((?x4318 (- (+ ?x4314 (* (* 2.0 l_0_3_51) l_0_3_58)) (* (* 2.0 l_0_3_64) l_0_3_71))))
 (let ((?x4322 (- (- ?x4318 (* (* 2.0 l_0_3_65) l_0_3_72)) (* (* 2.0 l_0_3_66) l_0_3_73))))
 (= ?x4322 0.0))))))))))))))))
(assert
 (let ((?x4389 (* l_0_3_70 l_0_3_70)))
 (let ((?x4385 (* l_0_3_69 l_0_3_69)))
 (let ((?x4383 (* l_0_3_68 l_0_3_68)))
 (let ((?x4381 (* l_0_3_67 l_0_3_67)))
 (let ((?x3098 (* 8.0 l_0_3_31)))
 (let ((?x3213 (* ?x3098 l_0_3_37)))
 (let ((?x3089 (* 8.0 l_0_3_16)))
 (let ((?x3206 (* ?x3089 l_0_3_22)))
 (let ((?x4371 (+ (- (+ (* 1.0 (* l_0_3_10 l_0_3_10)) ?x3206) ?x3213) (* 1.0 (* l_0_3_52 l_0_3_52)))))
 (let ((?x4377 (+ (+ ?x4371 (* 1.0 (* l_0_3_53 l_0_3_53))) (* 1.0 (* l_0_3_54 l_0_3_54)))))
 (let ((?x4386 (- (- (- (+ ?x4377 (* 1.0 (* l_0_3_55 l_0_3_55))) ?x4381) ?x4383) ?x4385)))
 (let ((?x4392 (+ (- (+ ?x4386 (* 1.0 (* l_0_3_7 l_0_3_7))) ?x4389) (* 1.0 (* l_0_3_8 l_0_3_8)))))
 (= (+ ?x4392 (* 1.0 (* l_0_3_9 l_0_3_9))) 0.0))))))))))))))
(assert
 (let ((?x3098 (* 8.0 l_0_3_31)))
 (let ((?x3270 (* ?x3098 l_0_3_41)))
 (let ((?x3050 (* 4.0 l_0_3_31)))
 (let ((?x4243 (* ?x3050 l_0_3_37)))
 (let ((?x3089 (* 8.0 l_0_3_16)))
 (let ((?x3267 (* ?x3089 l_0_3_26)))
 (let ((?x3137 (* 4.0 l_0_3_16)))
 (let ((?x4240 (* ?x3137 l_0_3_22)))
 (let ((?x3717 (* 2.0 l_0_3_13)))
 (let ((?x3897 (* ?x3717 l_0_3_9)))
 (let ((?x3263 (* 2.0 l_0_3_12)))
 (let ((?x3895 (* ?x3263 l_0_3_8)))
 (let ((?x3260 (* 2.0 l_0_3_11)))
 (let ((?x3893 (* ?x3260 l_0_3_7)))
 (let ((?x4420 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x3893) ?x3895) ?x3897) ?x4240)))
 (let ((?x4426 (+ (- (+ (+ ?x4420 ?x3267) ?x4243) ?x3270) (* (* 2.0 l_0_3_52) l_0_3_56))))
 (let ((?x4432 (+ (+ ?x4426 (* (* 2.0 l_0_3_53) l_0_3_57)) (* (* 2.0 l_0_3_54) l_0_3_58))))
 (let ((?x4438 (- (+ ?x4432 (* (* 2.0 l_0_3_55) l_0_3_59)) (* (* 2.0 l_0_3_67) l_0_3_71))))
 (let ((?x4444 (- (- ?x4438 (* (* 2.0 l_0_3_68) l_0_3_72)) (* (* 2.0 l_0_3_69) l_0_3_73))))
 (= (- ?x4444 (* (* 2.0 l_0_3_70) l_0_3_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x4532 (* l_0_3_75 l_0_3_75)))
 (let ((?x4530 (* l_0_3_74 l_0_3_74)))
 (let ((?x4528 (* l_0_3_73 l_0_3_73)))
 (let ((?x4526 (* l_0_3_72 l_0_3_72)))
 (let ((?x4524 (* l_0_3_71 l_0_3_71)))
 (let ((?x3066 (* l_0_3_31 l_0_3_31)))
 (let ((?x3050 (* 4.0 l_0_3_31)))
 (let ((?x4309 (* ?x3050 l_0_3_41)))
 (let ((?x3047 (* l_0_3_16 l_0_3_16)))
 (let ((?x3137 (* 4.0 l_0_3_16)))
 (let ((?x4306 (* ?x3137 l_0_3_26)))
 (let ((?x4498 (+ (* 1.0 (* l_0_3_11 l_0_3_11)) (* 1.0 (* l_0_3_12 l_0_3_12)))))
 (let ((?x4502 (+ (+ ?x4498 (* 1.0 (* l_0_3_13 l_0_3_13))) (* 1.0 (* l_0_3_14 l_0_3_14)))))
 (let ((?x4507 (+ (+ (- (+ ?x4502 (* 1.0 (* l_0_3_15 l_0_3_15))) ?x4306) ?x3047) ?x4309)))
 (let ((?x4514 (+ (+ (- ?x4507 ?x3066) (* 1.0 (* l_0_3_56 l_0_3_56))) (* 1.0 (* l_0_3_57 l_0_3_57)))))
 (let ((?x4520 (+ (+ ?x4514 (* 1.0 (* l_0_3_58 l_0_3_58))) (* 1.0 (* l_0_3_59 l_0_3_59)))))
 (let ((?x4529 (- (- (- (+ ?x4520 (* 1.0 (* l_0_3_60 l_0_3_60))) ?x4524) ?x4526) ?x4528)))
 (= (- (- ?x4529 ?x4530) ?x4532) 0.0)))))))))))))))))))
(assert
 (let ((?x3541 (* 2.0 l_0_3_31)))
 (let ((?x4566 (* ?x3541 l_0_3_34)))
 (let ((?x3538 (* l_0_3_21 l_0_3_21)))
 (let ((?x4564 (* 2.0 ?x3538)))
 (let ((?x3535 (* l_0_3_20 l_0_3_20)))
 (let ((?x4562 (* 2.0 ?x3535)))
 (let ((?x3532 (* l_0_3_19 l_0_3_19)))
 (let ((?x4560 (* 2.0 ?x3532)))
 (let ((?x4567 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_16) l_0_3_19) ?x4560) ?x4562) ?x4564) ?x4566)))
 (let ((?x4573 (- (- ?x4567 (* (* 2.0 l_0_3_34) l_0_3_34)) (* (* 2.0 l_0_3_35) l_0_3_35))))
 (= (- ?x4573 (* (* 2.0 l_0_3_36) l_0_3_36)) 0.0))))))))))))
(assert
 (let ((?x3554 (* 4.0 l_0_3_36)))
 (let ((?x3555 (* ?x3554 l_0_3_36)))
 (let ((?x4624 (* ?x3554 l_0_3_39)))
 (let ((?x3551 (* 4.0 l_0_3_35)))
 (let ((?x3552 (* ?x3551 l_0_3_35)))
 (let ((?x4621 (* ?x3551 l_0_3_38)))
 (let ((?x3548 (* 4.0 l_0_3_34)))
 (let ((?x3549 (* ?x3548 l_0_3_34)))
 (let ((?x4618 (* ?x3548 l_0_3_37)))
 (let ((?x3541 (* 2.0 l_0_3_31)))
 (let ((?x4616 (* ?x3541 l_0_3_37)))
 (let ((?x3538 (* l_0_3_21 l_0_3_21)))
 (let ((?x3539 (* 4.0 ?x3538)))
 (let ((?x4612 (* 4.0 l_0_3_21)))
 (let ((?x4613 (* ?x4612 l_0_3_24)))
 (let ((?x3535 (* l_0_3_20 l_0_3_20)))
 (let ((?x3536 (* 4.0 ?x3535)))
 (let ((?x4608 (* 4.0 l_0_3_20)))
 (let ((?x4609 (* ?x4608 l_0_3_23)))
 (let ((?x3532 (* l_0_3_19 l_0_3_19)))
 (let ((?x3533 (* 4.0 ?x3532)))
 (let ((?x4606 (+ (* (* (- 2.0) l_0_3_16) l_0_3_22) (* (* 4.0 l_0_3_19) l_0_3_22))))
 (let ((?x4619 (- (+ (+ (+ (+ (+ (+ ?x4606 ?x3533) ?x4609) ?x3536) ?x4613) ?x3539) ?x4616) ?x4618)))
 (= (- (- (- (- (- ?x4619 ?x3549) ?x4621) ?x3552) ?x4624) ?x3555) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x3591 (* l_0_3_36 l_0_3_36)))
 (let ((?x4591 (* 2.0 ?x3591)))
 (let ((?x3554 (* 4.0 l_0_3_36)))
 (let ((?x4686 (* ?x3554 l_0_3_43)))
 (let ((?x3585 (* l_0_3_35 l_0_3_35)))
 (let ((?x4586 (* 2.0 ?x3585)))
 (let ((?x3551 (* 4.0 l_0_3_35)))
 (let ((?x4683 (* ?x3551 l_0_3_42)))
 (let ((?x3579 (* l_0_3_34 l_0_3_34)))
 (let ((?x4581 (* 2.0 ?x3579)))
 (let ((?x3548 (* 4.0 l_0_3_34)))
 (let ((?x4680 (* ?x3548 l_0_3_41)))
 (let ((?x3541 (* 2.0 l_0_3_31)))
 (let ((?x4678 (* ?x3541 l_0_3_41)))
 (let ((?x4612 (* 4.0 l_0_3_21)))
 (let ((?x4673 (* ?x4612 l_0_3_28)))
 (let ((?x4608 (* 4.0 l_0_3_20)))
 (let ((?x4668 (* ?x4608 l_0_3_27)))
 (let ((?x4604 (* 4.0 l_0_3_19)))
 (let ((?x4663 (* ?x4604 l_0_3_26)))
 (let ((?x4667 (- (+ (* (* (- 2.0) l_0_3_16) l_0_3_26) ?x4663) (* (* 2.0 l_0_3_19) l_0_3_19))))
 (let ((?x4677 (- (+ (- (+ ?x4667 ?x4668) (* (* 2.0 l_0_3_20) l_0_3_20)) ?x4673) (* (* 2.0 l_0_3_21) l_0_3_21))))
 (let ((?x4688 (+ (- (+ (- (+ (- (+ ?x4677 ?x4678) ?x4680) ?x4581) ?x4683) ?x4586) ?x4686) ?x4591)))
 (= ?x4688 0.0)))))))))))))))))))))))))
(assert
 (let ((?x3350 (* l_0_3_33 l_0_3_33)))
 (let ((?x3344 (* l_0_3_32 l_0_3_32)))
 (let ((?x4736 (+ (+ (- (* (- l_0_3_17) l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x3344) ?x3350)))
 (= ?x4736 0.0)))))
(assert
 (let ((?x3380 (* 2.0 l_0_3_33)))
 (let ((?x4752 (* ?x3380 l_0_3_35)))
 (let ((?x3374 (* 2.0 l_0_3_32)))
 (let ((?x4750 (* ?x3374 l_0_3_34)))
 (let ((?x3482 (* 2.0 l_0_3_18)))
 (let ((?x4748 (* ?x3482 l_0_3_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x4748) ?x4750) ?x4752) 0.0))))))))
(assert
 (let ((?x3380 (* 2.0 l_0_3_33)))
 (let ((?x4771 (* ?x3380 l_0_3_38)))
 (let ((?x3374 (* 2.0 l_0_3_32)))
 (let ((?x4769 (* ?x3374 l_0_3_37)))
 (let ((?x3482 (* 2.0 l_0_3_18)))
 (let ((?x4762 (* ?x3482 l_0_3_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x4762) ?x4769) ?x4771) 0.0))))))))
(assert
 (let ((?x3380 (* 2.0 l_0_3_33)))
 (let ((?x4790 (* ?x3380 l_0_3_42)))
 (let ((?x3374 (* 2.0 l_0_3_32)))
 (let ((?x4788 (* ?x3374 l_0_3_41)))
 (let ((?x3482 (* 2.0 l_0_3_18)))
 (let ((?x4781 (* ?x3482 l_0_3_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_26) ?x4781) ?x4788) ?x4790) 0.0))))))))
(assert
 (let ((?x3591 (* l_0_3_36 l_0_3_36)))
 (let ((?x3585 (* l_0_3_35 l_0_3_35)))
 (let ((?x3579 (* l_0_3_34 l_0_3_34)))
 (let ((?x3538 (* l_0_3_21 l_0_3_21)))
 (let ((?x4808 (+ (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3538) ?x3579)))
 (= (+ (+ ?x4808 ?x3585) ?x3591) 0.0)))))))
(assert
 (let ((?x4574 (* 2.0 l_0_3_36)))
 (let ((?x4834 (* ?x4574 l_0_3_39)))
 (let ((?x4571 (* 2.0 l_0_3_35)))
 (let ((?x4832 (* ?x4571 l_0_3_38)))
 (let ((?x4568 (* 2.0 l_0_3_34)))
 (let ((?x4830 (* ?x4568 l_0_3_37)))
 (let ((?x4675 (* 2.0 l_0_3_21)))
 (let ((?x4828 (* ?x4675 l_0_3_24)))
 (let ((?x4670 (* 2.0 l_0_3_20)))
 (let ((?x4826 (* ?x4670 l_0_3_23)))
 (let ((?x4833 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x4826) ?x4828) ?x4830) ?x4832)))
 (= (+ ?x4833 ?x4834) 0.0)))))))))))))
(assert
 (let ((?x4574 (* 2.0 l_0_3_36)))
 (let ((?x4863 (* ?x4574 l_0_3_43)))
 (let ((?x4571 (* 2.0 l_0_3_35)))
 (let ((?x4861 (* ?x4571 l_0_3_42)))
 (let ((?x4568 (* 2.0 l_0_3_34)))
 (let ((?x4859 (* ?x4568 l_0_3_41)))
 (let ((?x4675 (* 2.0 l_0_3_21)))
 (let ((?x4851 (* ?x4675 l_0_3_28)))
 (let ((?x4670 (* 2.0 l_0_3_20)))
 (let ((?x4849 (* ?x4670 l_0_3_27)))
 (let ((?x4862 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_26) ?x4849) ?x4851) ?x4859) ?x4861)))
 (= (+ ?x4862 ?x4863) 0.0)))))))))))))
(assert
 (let ((?x3875 (* l_0_3_40 l_0_3_40)))
 (let ((?x3869 (* l_0_3_39 l_0_3_39)))
 (let ((?x3863 (* l_0_3_38 l_0_3_38)))
 (let ((?x3857 (* l_0_3_37 l_0_3_37)))
 (let ((?x3825 (* l_0_3_25 l_0_3_25)))
 (let ((?x3822 (* l_0_3_24 l_0_3_24)))
 (let ((?x4887 (- (- (- (* (- l_0_3_22) l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x3822) ?x3825)))
 (= (+ (+ (+ (+ ?x4887 ?x3857) ?x3863) ?x3869) ?x3875) 0.0)))))))))
(assert
 (let ((?x4929 (* 2.0 l_0_3_40)))
 (let ((?x4930 (* ?x4929 l_0_3_44)))
 (let ((?x4926 (* 2.0 l_0_3_39)))
 (let ((?x4927 (* ?x4926 l_0_3_43)))
 (let ((?x4923 (* 2.0 l_0_3_38)))
 (let ((?x4924 (* ?x4923 l_0_3_42)))
 (let ((?x4920 (* 2.0 l_0_3_37)))
 (let ((?x4921 (* ?x4920 l_0_3_41)))
 (let ((?x4917 (* 2.0 l_0_3_25)))
 (let ((?x4918 (* ?x4917 l_0_3_29)))
 (let ((?x4914 (* 2.0 l_0_3_24)))
 (let ((?x4915 (* ?x4914 l_0_3_28)))
 (let ((?x4911 (* 2.0 l_0_3_23)))
 (let ((?x4912 (* ?x4911 l_0_3_27)))
 (let ((?x4922 (+ (- (- (- (* (* (- 2.0) l_0_3_22) l_0_3_26) ?x4912) ?x4915) ?x4918) ?x4921)))
 (= (+ (+ (+ ?x4922 ?x4924) ?x4927) ?x4930) 0.0)))))))))))))))))
(assert
 (let ((?x4106 (* l_0_3_45 l_0_3_45)))
 (let ((?x4100 (* l_0_3_44 l_0_3_44)))
 (let ((?x4094 (* l_0_3_43 l_0_3_43)))
 (let ((?x4088 (* l_0_3_42 l_0_3_42)))
 (let ((?x4082 (* l_0_3_41 l_0_3_41)))
 (let ((?x3591 (* l_0_3_36 l_0_3_36)))
 (let ((?x3585 (* l_0_3_35 l_0_3_35)))
 (let ((?x3579 (* l_0_3_34 l_0_3_34)))
 (let ((?x4033 (* l_0_3_30 l_0_3_30)))
 (let ((?x4030 (* l_0_3_29 l_0_3_29)))
 (let ((?x4027 (* l_0_3_28 l_0_3_28)))
 (let ((?x4024 (* l_0_3_27 l_0_3_27)))
 (let ((?x4021 (* l_0_3_26 l_0_3_26)))
 (let ((?x3538 (* l_0_3_21 l_0_3_21)))
 (let ((?x4951 (- (+ (+ (* l_0_3_19 l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3538) ?x4021)))
 (let ((?x4965 (- (- (- (- (- (- (- ?x4951 ?x4024) ?x4027) ?x4030) ?x4033) ?x3579) ?x3585) ?x3591)))
 (= (+ (+ (+ (+ (+ ?x4965 ?x4082) ?x4088) ?x4094) ?x4100) ?x4106) 0.0))))))))))))))))))
(assert
 (let ((?x3554 (* 4.0 l_0_3_36)))
 (let ((?x4686 (* ?x3554 l_0_3_43)))
 (let ((?x3551 (* 4.0 l_0_3_35)))
 (let ((?x4683 (* ?x3551 l_0_3_42)))
 (let ((?x3548 (* 4.0 l_0_3_34)))
 (let ((?x4680 (* ?x3548 l_0_3_41)))
 (let ((?x3541 (* 2.0 l_0_3_31)))
 (let ((?x4566 (* ?x3541 l_0_3_34)))
 (let ((?x4033 (* l_0_3_30 l_0_3_30)))
 (let ((?x5008 (* 2.0 ?x4033)))
 (let ((?x4030 (* l_0_3_29 l_0_3_29)))
 (let ((?x5006 (* 2.0 ?x4030)))
 (let ((?x4027 (* l_0_3_28 l_0_3_28)))
 (let ((?x5004 (* 2.0 ?x4027)))
 (let ((?x4024 (* l_0_3_27 l_0_3_27)))
 (let ((?x5002 (* 2.0 ?x4024)))
 (let ((?x4021 (* l_0_3_26 l_0_3_26)))
 (let ((?x5000 (* 2.0 ?x4021)))
 (let ((?x4612 (* 4.0 l_0_3_21)))
 (let ((?x4673 (* ?x4612 l_0_3_28)))
 (let ((?x4608 (* 4.0 l_0_3_20)))
 (let ((?x4668 (* ?x4608 l_0_3_27)))
 (let ((?x4604 (* 4.0 l_0_3_19)))
 (let ((?x4663 (* ?x4604 l_0_3_26)))
 (let ((?x5001 (+ (- (- (- (* (* 2.0 l_0_3_16) l_0_3_19) ?x4663) ?x4668) ?x4673) ?x5000)))
 (let ((?x5012 (+ (+ (- (+ (+ (+ (+ ?x5001 ?x5002) ?x5004) ?x5006) ?x5008) ?x4566) ?x4680) ?x4683)))
 (let ((?x5019 (- (- (+ ?x5012 ?x4686) (* (* 2.0 l_0_3_41) l_0_3_41)) (* (* 2.0 l_0_3_42) l_0_3_42))))
 (let ((?x5025 (- (- ?x5019 (* (* 2.0 l_0_3_43) l_0_3_43)) (* (* 2.0 l_0_3_44) l_0_3_44))))
 (= (- ?x5025 (* (* 2.0 l_0_3_45) l_0_3_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x4052 (* (* 4.0 l_0_3_45) l_0_3_45)))
 (let ((?x4049 (* (* 4.0 l_0_3_44) l_0_3_44)))
 (let ((?x4046 (* (* 4.0 l_0_3_43) l_0_3_43)))
 (let ((?x4043 (* (* 4.0 l_0_3_42) l_0_3_42)))
 (let ((?x4040 (* (* 4.0 l_0_3_41) l_0_3_41)))
 (let ((?x3839 (* 4.0 l_0_3_40)))
 (let ((?x5095 (* ?x3839 l_0_3_44)))
 (let ((?x3836 (* 4.0 l_0_3_39)))
 (let ((?x5093 (* ?x3836 l_0_3_43)))
 (let ((?x3833 (* 4.0 l_0_3_38)))
 (let ((?x5091 (* ?x3833 l_0_3_42)))
 (let ((?x3830 (* 4.0 l_0_3_37)))
 (let ((?x5089 (* ?x3830 l_0_3_41)))
 (let ((?x3541 (* 2.0 l_0_3_31)))
 (let ((?x4616 (* ?x3541 l_0_3_37)))
 (let ((?x4033 (* l_0_3_30 l_0_3_30)))
 (let ((?x4034 (* 4.0 ?x4033)))
 (let ((?x4030 (* l_0_3_29 l_0_3_29)))
 (let ((?x4031 (* 4.0 ?x4030)))
 (let ((?x4027 (* l_0_3_28 l_0_3_28)))
 (let ((?x4028 (* 4.0 ?x4027)))
 (let ((?x4024 (* l_0_3_27 l_0_3_27)))
 (let ((?x4025 (* 4.0 ?x4024)))
 (let ((?x4021 (* l_0_3_26 l_0_3_26)))
 (let ((?x4022 (* 4.0 ?x4021)))
 (let ((?x5081 (* (* 4.0 l_0_3_25) l_0_3_29)))
 (let ((?x5078 (* (* 4.0 l_0_3_24) l_0_3_28)))
 (let ((?x5075 (* (* 4.0 l_0_3_23) l_0_3_27)))
 (let ((?x5072 (* (* 4.0 l_0_3_22) l_0_3_26)))
 (let ((?x5082 (- (- (- (- (* (* 2.0 l_0_3_16) l_0_3_22) ?x5072) ?x5075) ?x5078) ?x5081)))
 (let ((?x5090 (+ (- (+ (+ (+ (+ (+ ?x5082 ?x4022) ?x4025) ?x4028) ?x4031) ?x4034) ?x4616) ?x5089)))
 (let ((?x5100 (- (- (- (- (+ (+ (+ ?x5090 ?x5091) ?x5093) ?x5095) ?x4040) ?x4043) ?x4046) ?x4049)))
 (= (- ?x5100 ?x4052) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4106 (* l_0_3_45 l_0_3_45)))
 (let ((?x5064 (* 2.0 ?x4106)))
 (let ((?x4100 (* l_0_3_44 l_0_3_44)))
 (let ((?x5059 (* 2.0 ?x4100)))
 (let ((?x4094 (* l_0_3_43 l_0_3_43)))
 (let ((?x5054 (* 2.0 ?x4094)))
 (let ((?x4088 (* l_0_3_42 l_0_3_42)))
 (let ((?x5049 (* 2.0 ?x4088)))
 (let ((?x4082 (* l_0_3_41 l_0_3_41)))
 (let ((?x5044 (* 2.0 ?x4082)))
 (let ((?x3541 (* 2.0 l_0_3_31)))
 (let ((?x4678 (* ?x3541 l_0_3_41)))
 (let ((?x5146 (- (* (* 2.0 l_0_3_16) l_0_3_26) (* (* 2.0 l_0_3_26) l_0_3_26))))
 (let ((?x5152 (- (- ?x5146 (* (* 2.0 l_0_3_27) l_0_3_27)) (* (* 2.0 l_0_3_28) l_0_3_28))))
 (let ((?x5158 (- (- ?x5152 (* (* 2.0 l_0_3_29) l_0_3_29)) (* (* 2.0 l_0_3_30) l_0_3_30))))
 (= (+ (+ (+ (+ (+ (- ?x5158 ?x4678) ?x5044) ?x5049) ?x5054) ?x5059) ?x5064) 0.0)))))))))))))))))
(assert
 (let ((?x3350 (* l_0_3_33 l_0_3_33)))
 (let ((?x3344 (* l_0_3_32 l_0_3_32)))
 (let ((?x5193 (- (- (+ (* l_0_3_17 l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x3344) ?x3350)))
 (= ?x5193 0.0)))))
(assert
 (let ((?x3380 (* 2.0 l_0_3_33)))
 (let ((?x4752 (* ?x3380 l_0_3_35)))
 (let ((?x3374 (* 2.0 l_0_3_32)))
 (let ((?x4750 (* ?x3374 l_0_3_34)))
 (let ((?x3482 (* 2.0 l_0_3_18)))
 (let ((?x4748 (* ?x3482 l_0_3_20)))
 (= (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_19) ?x4748) ?x4750) ?x4752) 0.0))))))))
(assert
 (let ((?x3380 (* 2.0 l_0_3_33)))
 (let ((?x4771 (* ?x3380 l_0_3_38)))
 (let ((?x3374 (* 2.0 l_0_3_32)))
 (let ((?x4769 (* ?x3374 l_0_3_37)))
 (let ((?x3482 (* 2.0 l_0_3_18)))
 (let ((?x4762 (* ?x3482 l_0_3_23)))
 (= (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_22) ?x4762) ?x4769) ?x4771) 0.0))))))))
(assert
 (let ((?x3380 (* 2.0 l_0_3_33)))
 (let ((?x4790 (* ?x3380 l_0_3_42)))
 (let ((?x3374 (* 2.0 l_0_3_32)))
 (let ((?x4788 (* ?x3374 l_0_3_41)))
 (let ((?x3482 (* 2.0 l_0_3_18)))
 (let ((?x4781 (* ?x3482 l_0_3_27)))
 (= (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_26) ?x4781) ?x4788) ?x4790) 0.0))))))))
(assert
 (let ((?x4574 (* 2.0 l_0_3_36)))
 (let ((?x4834 (* ?x4574 l_0_3_39)))
 (let ((?x4571 (* 2.0 l_0_3_35)))
 (let ((?x4832 (* ?x4571 l_0_3_38)))
 (let ((?x4568 (* 2.0 l_0_3_34)))
 (let ((?x4830 (* ?x4568 l_0_3_37)))
 (let ((?x4675 (* 2.0 l_0_3_21)))
 (let ((?x4828 (* ?x4675 l_0_3_24)))
 (let ((?x4670 (* 2.0 l_0_3_20)))
 (let ((?x4826 (* ?x4670 l_0_3_23)))
 (let ((?x5241 (- (- (+ (+ (* (* 2.0 l_0_3_19) l_0_3_22) ?x4826) ?x4828) ?x4830) ?x4832)))
 (= (- ?x5241 ?x4834) 0.0)))))))))))))
(assert
 (let ((?x4574 (* 2.0 l_0_3_36)))
 (let ((?x4863 (* ?x4574 l_0_3_43)))
 (let ((?x4571 (* 2.0 l_0_3_35)))
 (let ((?x4861 (* ?x4571 l_0_3_42)))
 (let ((?x4568 (* 2.0 l_0_3_34)))
 (let ((?x4859 (* ?x4568 l_0_3_41)))
 (let ((?x4675 (* 2.0 l_0_3_21)))
 (let ((?x4851 (* ?x4675 l_0_3_28)))
 (let ((?x4670 (* 2.0 l_0_3_20)))
 (let ((?x4849 (* ?x4670 l_0_3_27)))
 (let ((?x5260 (- (- (+ (+ (* (* 2.0 l_0_3_19) l_0_3_26) ?x4849) ?x4851) ?x4859) ?x4861)))
 (= (- ?x5260 ?x4863) 0.0)))))))))))))
(assert
 (let ((?x3875 (* l_0_3_40 l_0_3_40)))
 (let ((?x3869 (* l_0_3_39 l_0_3_39)))
 (let ((?x3863 (* l_0_3_38 l_0_3_38)))
 (let ((?x3857 (* l_0_3_37 l_0_3_37)))
 (let ((?x3825 (* l_0_3_25 l_0_3_25)))
 (let ((?x3822 (* l_0_3_24 l_0_3_24)))
 (let ((?x5277 (+ (+ (+ (* l_0_3_22 l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x3822) ?x3825)))
 (= (- (- (- (- ?x5277 ?x3857) ?x3863) ?x3869) ?x3875) 0.0)))))))))
(assert
 (let ((?x4929 (* 2.0 l_0_3_40)))
 (let ((?x4930 (* ?x4929 l_0_3_44)))
 (let ((?x4926 (* 2.0 l_0_3_39)))
 (let ((?x4927 (* ?x4926 l_0_3_43)))
 (let ((?x4923 (* 2.0 l_0_3_38)))
 (let ((?x4924 (* ?x4923 l_0_3_42)))
 (let ((?x4920 (* 2.0 l_0_3_37)))
 (let ((?x4921 (* ?x4920 l_0_3_41)))
 (let ((?x4917 (* 2.0 l_0_3_25)))
 (let ((?x4918 (* ?x4917 l_0_3_29)))
 (let ((?x4914 (* 2.0 l_0_3_24)))
 (let ((?x4915 (* ?x4914 l_0_3_28)))
 (let ((?x4911 (* 2.0 l_0_3_23)))
 (let ((?x4912 (* ?x4911 l_0_3_27)))
 (let ((?x5296 (- (+ (+ (+ (* (* 2.0 l_0_3_22) l_0_3_26) ?x4912) ?x4915) ?x4918) ?x4921)))
 (= (- (- (- ?x5296 ?x4924) ?x4927) ?x4930) 0.0)))))))))))))))))
(assert
 (let ((?x4106 (* l_0_3_45 l_0_3_45)))
 (let ((?x4100 (* l_0_3_44 l_0_3_44)))
 (let ((?x4094 (* l_0_3_43 l_0_3_43)))
 (let ((?x4088 (* l_0_3_42 l_0_3_42)))
 (let ((?x4082 (* l_0_3_41 l_0_3_41)))
 (let ((?x4033 (* l_0_3_30 l_0_3_30)))
 (let ((?x4030 (* l_0_3_29 l_0_3_29)))
 (let ((?x4027 (* l_0_3_28 l_0_3_28)))
 (let ((?x5319 (+ (+ (+ (* l_0_3_26 l_0_3_26) (* l_0_3_27 l_0_3_27)) ?x4027) ?x4030)))
 (= (- (- (- (- (- (+ ?x5319 ?x4033) ?x4082) ?x4088) ?x4094) ?x4100) ?x4106) 0.0)))))))))))
(assert
 (let ((?x3641 (* 8.0 l_0_3_36)))
 (let ((?x3642 (* ?x3641 l_0_3_39)))
 (let ((?x3638 (* 8.0 l_0_3_35)))
 (let ((?x3639 (* ?x3638 l_0_3_38)))
 (let ((?x3635 (* 8.0 l_0_3_34)))
 (let ((?x3636 (* ?x3635 l_0_3_37)))
 (let ((?x3825 (* l_0_3_25 l_0_3_25)))
 (let ((?x5352 (* 2.0 ?x3825)))
 (let ((?x3822 (* l_0_3_24 l_0_3_24)))
 (let ((?x5350 (* 2.0 ?x3822)))
 (let ((?x3819 (* l_0_3_23 l_0_3_23)))
 (let ((?x5348 (* 2.0 ?x3819)))
 (let ((?x3816 (* l_0_3_22 l_0_3_22)))
 (let ((?x5346 (* 2.0 ?x3816)))
 (let ((?x3626 (* 8.0 l_0_3_21)))
 (let ((?x3627 (* ?x3626 l_0_3_24)))
 (let ((?x3623 (* 8.0 l_0_3_20)))
 (let ((?x3624 (* ?x3623 l_0_3_23)))
 (let ((?x3620 (* 8.0 l_0_3_19)))
 (let ((?x3621 (* ?x3620 l_0_3_22)))
 (let ((?x5354 (- (+ (+ (+ (+ (+ (+ ?x3621 ?x3624) ?x3627) ?x5346) ?x5348) ?x5350) ?x5352) ?x3636)))
 (let ((?x5360 (- (- (- (- ?x5354 ?x3639) ?x3642) (* (* 2.0 l_0_3_37) l_0_3_37)) (* (* 2.0 l_0_3_38) l_0_3_38))))
 (let ((?x5364 (- (- ?x5360 (* (* 2.0 l_0_3_39) l_0_3_39)) (* (* 2.0 l_0_3_40) l_0_3_40))))
 (= ?x5364 0.0)))))))))))))))))))))))))
(assert
 (let ((?x3839 (* 4.0 l_0_3_40)))
 (let ((?x5095 (* ?x3839 l_0_3_44)))
 (let ((?x3836 (* 4.0 l_0_3_39)))
 (let ((?x5093 (* ?x3836 l_0_3_43)))
 (let ((?x3833 (* 4.0 l_0_3_38)))
 (let ((?x5091 (* ?x3833 l_0_3_42)))
 (let ((?x3830 (* 4.0 l_0_3_37)))
 (let ((?x5089 (* ?x3830 l_0_3_41)))
 (let ((?x3641 (* 8.0 l_0_3_36)))
 (let ((?x3742 (* ?x3641 l_0_3_43)))
 (let ((?x3554 (* 4.0 l_0_3_36)))
 (let ((?x4624 (* ?x3554 l_0_3_39)))
 (let ((?x3638 (* 8.0 l_0_3_35)))
 (let ((?x3740 (* ?x3638 l_0_3_42)))
 (let ((?x3551 (* 4.0 l_0_3_35)))
 (let ((?x4621 (* ?x3551 l_0_3_38)))
 (let ((?x3635 (* 8.0 l_0_3_34)))
 (let ((?x3738 (* ?x3635 l_0_3_41)))
 (let ((?x3548 (* 4.0 l_0_3_34)))
 (let ((?x4618 (* ?x3548 l_0_3_37)))
 (let ((?x5081 (* (* 4.0 l_0_3_25) l_0_3_29)))
 (let ((?x5078 (* (* 4.0 l_0_3_24) l_0_3_28)))
 (let ((?x5075 (* (* 4.0 l_0_3_23) l_0_3_27)))
 (let ((?x5072 (* (* 4.0 l_0_3_22) l_0_3_26)))
 (let ((?x3626 (* 8.0 l_0_3_21)))
 (let ((?x3730 (* ?x3626 l_0_3_28)))
 (let ((?x4612 (* 4.0 l_0_3_21)))
 (let ((?x4613 (* ?x4612 l_0_3_24)))
 (let ((?x3623 (* 8.0 l_0_3_20)))
 (let ((?x3728 (* ?x3623 l_0_3_27)))
 (let ((?x4608 (* 4.0 l_0_3_20)))
 (let ((?x4609 (* ?x4608 l_0_3_23)))
 (let ((?x3620 (* 8.0 l_0_3_19)))
 (let ((?x3726 (* ?x3620 l_0_3_26)))
 (let ((?x5399 (- (+ (- (+ (* (* (- 4.0) l_0_3_19) l_0_3_22) ?x3726) ?x4609) ?x3728) ?x4613)))
 (let ((?x5406 (- (+ (+ (+ (+ (+ (+ ?x5399 ?x3730) ?x5072) ?x5075) ?x5078) ?x5081) ?x4618) ?x3738)))
 (let ((?x5413 (- (- (- (- (+ (- (+ ?x5406 ?x4621) ?x3740) ?x4624) ?x3742) ?x5089) ?x5091) ?x5093)))
 (= (- ?x5413 ?x5095) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3929 (* (* 8.0 l_0_3_40) l_0_3_44)))
 (let ((?x3926 (* (* 8.0 l_0_3_39) l_0_3_43)))
 (let ((?x3923 (* (* 8.0 l_0_3_38) l_0_3_42)))
 (let ((?x3920 (* (* 8.0 l_0_3_37) l_0_3_41)))
 (let ((?x3913 (* (* 8.0 l_0_3_25) l_0_3_29)))
 (let ((?x3910 (* (* 8.0 l_0_3_24) l_0_3_28)))
 (let ((?x3907 (* (* 8.0 l_0_3_23) l_0_3_27)))
 (let ((?x3904 (* (* 8.0 l_0_3_22) l_0_3_26)))
 (let ((?x5455 (- (+ (- ?x3904 (* (* 2.0 l_0_3_22) l_0_3_22)) ?x3907) (* (* 2.0 l_0_3_23) l_0_3_23))))
 (let ((?x5461 (- (+ (- (+ ?x5455 ?x3910) (* (* 2.0 l_0_3_24) l_0_3_24)) ?x3913) (* (* 2.0 l_0_3_25) l_0_3_25))))
 (let ((?x5465 (+ (- (+ (- ?x5461 ?x3920) (* 2.0 (* l_0_3_37 l_0_3_37))) ?x3923) (* 2.0 (* l_0_3_38 l_0_3_38)))))
 (let ((?x5469 (+ (- (+ (- ?x5465 ?x3926) (* 2.0 (* l_0_3_39 l_0_3_39))) ?x3929) (* 2.0 (* l_0_3_40 l_0_3_40)))))
 (= ?x5469 0.0))))))))))))))
(assert
 (let ((?x3839 (* 4.0 l_0_3_40)))
 (let ((?x3840 (* ?x3839 l_0_3_40)))
 (let ((?x3836 (* 4.0 l_0_3_39)))
 (let ((?x3837 (* ?x3836 l_0_3_39)))
 (let ((?x3833 (* 4.0 l_0_3_38)))
 (let ((?x3834 (* ?x3833 l_0_3_38)))
 (let ((?x3830 (* 4.0 l_0_3_37)))
 (let ((?x3831 (* ?x3830 l_0_3_37)))
 (let ((?x3825 (* l_0_3_25 l_0_3_25)))
 (let ((?x3826 (* 4.0 ?x3825)))
 (let ((?x3822 (* l_0_3_24 l_0_3_24)))
 (let ((?x3823 (* 4.0 ?x3822)))
 (let ((?x3819 (* l_0_3_23 l_0_3_23)))
 (let ((?x3820 (* 4.0 ?x3819)))
 (let ((?x3816 (* l_0_3_22 l_0_3_22)))
 (let ((?x3817 (* 4.0 ?x3816)))
 (let ((?x5509 (- (- (- (- (+ (+ (+ ?x3817 ?x3820) ?x3823) ?x3826) ?x3831) ?x3834) ?x3837) ?x3840)))
 (= ?x5509 0.0)))))))))))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (let ((?x5553 (* 4.0 l_0_4_31)))
 (let ((?x5554 (* ?x5553 l_0_4_31)))
 (let ((?x5550 (* l_0_4_16 l_0_4_16)))
 (let ((?x5551 (* 4.0 ?x5550)))
 (let ((?x5552 (+ (- (* (* 2.0 l_0_4_1) l_0_4_2) (* l_0_4_1 l_0_4_1)) ?x5551)))
 (= (+ (- (- ?x5552 ?x5554) (* (* 2.0 l_0_4_61) l_0_4_62)) 1.0) 0.0)))))))
(assert
 (let ((?x5586 (- (- (* 1.0 (* l_0_4_1 l_0_4_1)) (* l_0_4_61 l_0_4_61)) 1.0)))
 (= ?x5586 0.0)))
(assert
 (let ((?x5609 (* l_0_4_63 l_0_4_63)))
 (let ((?x5607 (* l_0_4_62 l_0_4_62)))
 (let ((?x5604 (* 8.0 l_0_4_31)))
 (let ((?x5605 (* ?x5604 l_0_4_32)))
 (let ((?x5595 (* 8.0 l_0_4_16)))
 (let ((?x5596 (* ?x5595 l_0_4_17)))
 (let ((?x5600 (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) ?x5596) (* 1.0 (* l_0_4_2 l_0_4_2)))))
 (let ((?x5610 (- (- (- (+ ?x5600 (* 1.0 (* l_0_4_3 l_0_4_3))) ?x5605) ?x5607) ?x5609)))
 (= ?x5610 0.0))))))))))
(assert
 (let ((?x5604 (* 8.0 l_0_4_31)))
 (let ((?x5646 (* ?x5604 l_0_4_34)))
 (let ((?x5553 (* 4.0 l_0_4_31)))
 (let ((?x5644 (* ?x5553 l_0_4_32)))
 (let ((?x5641 (* 2.0 l_0_4_3)))
 (let ((?x5642 (* ?x5641 l_0_4_5)))
 (let ((?x5638 (* 2.0 l_0_4_2)))
 (let ((?x5639 (* ?x5638 l_0_4_4)))
 (let ((?x5595 (* 8.0 l_0_4_16)))
 (let ((?x5636 (* ?x5595 l_0_4_19)))
 (let ((?x5633 (* 4.0 l_0_4_16)))
 (let ((?x5634 (* ?x5633 l_0_4_17)))
 (let ((?x5643 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x5634) ?x5636) ?x5639) ?x5642)))
 (let ((?x5653 (- (- (- (- ?x5643 ?x5644) ?x5646) (* (* 2.0 l_0_4_62) l_0_4_64)) (* (* 2.0 l_0_4_63) l_0_4_65))))
 (= ?x5653 0.0))))))))))))))))
(assert
 (let ((?x5604 (* 8.0 l_0_4_31)))
 (let ((?x5698 (* ?x5604 l_0_4_37)))
 (let ((?x5605 (* ?x5604 l_0_4_32)))
 (let ((?x5641 (* 2.0 l_0_4_3)))
 (let ((?x5695 (* ?x5641 l_0_4_8)))
 (let ((?x5638 (* 2.0 l_0_4_2)))
 (let ((?x5693 (* ?x5638 l_0_4_7)))
 (let ((?x5595 (* 8.0 l_0_4_16)))
 (let ((?x5691 (* ?x5595 l_0_4_22)))
 (let ((?x5694 (+ (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) (* ?x5595 l_0_4_17)) ?x5691) ?x5693)))
 (let ((?x5702 (+ (- (- (+ ?x5694 ?x5695) ?x5605) ?x5698) (* (* 2.0 l_0_4_46) l_0_4_47))))
 (let ((?x5706 (- (- ?x5702 (* (* 2.0 l_0_4_62) l_0_4_67)) (* (* 2.0 l_0_4_63) l_0_4_68))))
 (= ?x5706 0.0))))))))))))))
(assert
 (let ((?x5604 (* 8.0 l_0_4_31)))
 (let ((?x5752 (* ?x5604 l_0_4_41)))
 (let ((?x5553 (* 4.0 l_0_4_31)))
 (let ((?x5644 (* ?x5553 l_0_4_32)))
 (let ((?x5595 (* 8.0 l_0_4_16)))
 (let ((?x5749 (* ?x5595 l_0_4_26)))
 (let ((?x5633 (* 4.0 l_0_4_16)))
 (let ((?x5634 (* ?x5633 l_0_4_17)))
 (let ((?x5745 (* 2.0 l_0_4_12)))
 (let ((?x5746 (* ?x5745 l_0_4_3)))
 (let ((?x5744 (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) (* (* 2.0 l_0_4_11) l_0_4_2))))
 (let ((?x5755 (- (- (+ (+ (- (+ ?x5744 ?x5746) ?x5634) ?x5749) ?x5644) ?x5752) (* (* 2.0 l_0_4_62) l_0_4_71))))
 (= (- ?x5755 (* (* 2.0 l_0_4_63) l_0_4_72)) 0.0))))))))))))))
(assert
 (let ((?x5807 (* 4.0 l_0_4_33)))
 (let ((?x5808 (* ?x5807 l_0_4_33)))
 (let ((?x5804 (* 4.0 l_0_4_32)))
 (let ((?x5805 (* ?x5804 l_0_4_32)))
 (let ((?x5601 (* l_0_4_3 l_0_4_3)))
 (let ((?x5598 (* l_0_4_2 l_0_4_2)))
 (let ((?x5799 (* l_0_4_18 l_0_4_18)))
 (let ((?x5800 (* 4.0 ?x5799)))
 (let ((?x5797 (* l_0_4_17 l_0_4_17)))
 (let ((?x5798 (* 4.0 ?x5797)))
 (= (- (- (- (- (+ ?x5798 ?x5800) ?x5598) ?x5601) ?x5805) ?x5808) 0.0))))))))))))
(assert
 (let ((?x5848 (* 8.0 l_0_4_33)))
 (let ((?x5849 (* ?x5848 l_0_4_35)))
 (let ((?x5842 (* 8.0 l_0_4_32)))
 (let ((?x5843 (* ?x5842 l_0_4_34)))
 (let ((?x5641 (* 2.0 l_0_4_3)))
 (let ((?x5642 (* ?x5641 l_0_4_5)))
 (let ((?x5638 (* 2.0 l_0_4_2)))
 (let ((?x5639 (* ?x5638 l_0_4_4)))
 (let ((?x5799 (* l_0_4_18 l_0_4_18)))
 (let ((?x5838 (* 2.0 ?x5799)))
 (let ((?x5835 (* 8.0 l_0_4_18)))
 (let ((?x5836 (* ?x5835 l_0_4_20)))
 (let ((?x5797 (* l_0_4_17 l_0_4_17)))
 (let ((?x5833 (* 2.0 ?x5797)))
 (let ((?x5831 (* 8.0 l_0_4_17)))
 (let ((?x5832 (* ?x5831 l_0_4_19)))
 (let ((?x5847 (- (- (- (- (+ (+ (+ ?x5832 ?x5833) ?x5836) ?x5838) ?x5639) ?x5642) ?x5843) (* (* 2.0 l_0_4_32) l_0_4_32))))
 (= (- (- ?x5847 ?x5849) (* (* 2.0 l_0_4_33) l_0_4_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x5911 (* l_0_4_48 l_0_4_48)))
 (let ((?x5909 (* l_0_4_47 l_0_4_47)))
 (let ((?x5807 (* 4.0 l_0_4_33)))
 (let ((?x5808 (* ?x5807 l_0_4_33)))
 (let ((?x5848 (* 8.0 l_0_4_33)))
 (let ((?x5906 (* ?x5848 l_0_4_38)))
 (let ((?x5804 (* 4.0 l_0_4_32)))
 (let ((?x5805 (* ?x5804 l_0_4_32)))
 (let ((?x5842 (* 8.0 l_0_4_32)))
 (let ((?x5903 (* ?x5842 l_0_4_37)))
 (let ((?x5641 (* 2.0 l_0_4_3)))
 (let ((?x5695 (* ?x5641 l_0_4_8)))
 (let ((?x5638 (* 2.0 l_0_4_2)))
 (let ((?x5693 (* ?x5638 l_0_4_7)))
 (let ((?x5799 (* l_0_4_18 l_0_4_18)))
 (let ((?x5800 (* 4.0 ?x5799)))
 (let ((?x5835 (* 8.0 l_0_4_18)))
 (let ((?x5898 (* ?x5835 l_0_4_23)))
 (let ((?x5797 (* l_0_4_17 l_0_4_17)))
 (let ((?x5798 (* 4.0 ?x5797)))
 (let ((?x5831 (* 8.0 l_0_4_17)))
 (let ((?x5896 (* ?x5831 l_0_4_22)))
 (let ((?x5905 (- (- (- (- (+ (+ (+ ?x5896 ?x5798) ?x5898) ?x5800) ?x5693) ?x5695) ?x5903) ?x5805)))
 (= (+ (+ (- (- ?x5905 ?x5906) ?x5808) ?x5909) ?x5911) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5821 (* l_0_4_33 l_0_4_33)))
 (let ((?x5885 (* 2.0 ?x5821)))
 (let ((?x5848 (* 8.0 l_0_4_33)))
 (let ((?x5965 (* ?x5848 l_0_4_42)))
 (let ((?x5815 (* l_0_4_32 l_0_4_32)))
 (let ((?x5874 (* 2.0 ?x5815)))
 (let ((?x5842 (* 8.0 l_0_4_32)))
 (let ((?x5962 (* ?x5842 l_0_4_41)))
 (let ((?x5835 (* 8.0 l_0_4_18)))
 (let ((?x5957 (* ?x5835 l_0_4_27)))
 (let ((?x5831 (* 8.0 l_0_4_17)))
 (let ((?x5952 (* ?x5831 l_0_4_26)))
 (let ((?x5745 (* 2.0 l_0_4_12)))
 (let ((?x5746 (* ?x5745 l_0_4_3)))
 (let ((?x5956 (- (+ (- (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x5746) ?x5952) (* (* 2.0 l_0_4_17) l_0_4_17))))
 (let ((?x5964 (+ (- (- (+ ?x5956 ?x5957) (* (* 2.0 l_0_4_18) l_0_4_18)) ?x5962) ?x5874)))
 (= (+ (- ?x5964 ?x5965) ?x5885) 0.0))))))))))))))))))
(assert
 (let ((?x6038 (* l_0_4_6 l_0_4_6)))
 (let ((?x6036 (* l_0_4_5 l_0_4_5)))
 (let ((?x6034 (* l_0_4_4 l_0_4_4)))
 (let ((?x6031 (* 4.0 l_0_4_36)))
 (let ((?x6032 (* ?x6031 l_0_4_36)))
 (let ((?x6028 (* 4.0 l_0_4_35)))
 (let ((?x6029 (* ?x6028 l_0_4_35)))
 (let ((?x6025 (* 4.0 l_0_4_34)))
 (let ((?x6026 (* ?x6025 l_0_4_34)))
 (let ((?x5807 (* 4.0 l_0_4_33)))
 (let ((?x6023 (* ?x5807 l_0_4_35)))
 (let ((?x5804 (* 4.0 l_0_4_32)))
 (let ((?x6021 (* ?x5804 l_0_4_34)))
 (let ((?x6018 (* 2.0 l_0_4_31)))
 (let ((?x6019 (* ?x6018 l_0_4_32)))
 (let ((?x6015 (* l_0_4_21 l_0_4_21)))
 (let ((?x6016 (* 4.0 ?x6015)))
 (let ((?x6012 (* l_0_4_20 l_0_4_20)))
 (let ((?x6013 (* 4.0 ?x6012)))
 (let ((?x6009 (* l_0_4_19 l_0_4_19)))
 (let ((?x6010 (* 4.0 ?x6009)))
 (let ((?x6006 (* 4.0 l_0_4_18)))
 (let ((?x6007 (* ?x6006 l_0_4_20)))
 (let ((?x6003 (* 4.0 l_0_4_17)))
 (let ((?x6004 (* ?x6003 l_0_4_19)))
 (let ((?x6014 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_16) l_0_4_17) ?x6004) ?x6007) ?x6010) ?x6013)))
 (let ((?x6033 (- (- (- (- (- (+ (+ ?x6014 ?x6016) ?x6019) ?x6021) ?x6023) ?x6026) ?x6029) ?x6032)))
 (= (- (- (- ?x6033 ?x6034) ?x6036) ?x6038) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x6134 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6131 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6122 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6118 (* 8.0 l_0_4_36)))
 (let ((?x6119 (* ?x6118 l_0_4_39)))
 (let ((?x6115 (* 8.0 l_0_4_35)))
 (let ((?x6116 (* ?x6115 l_0_4_38)))
 (let ((?x6112 (* 8.0 l_0_4_34)))
 (let ((?x6113 (* ?x6112 l_0_4_37)))
 (let ((?x5807 (* 4.0 l_0_4_33)))
 (let ((?x6110 (* ?x5807 l_0_4_38)))
 (let ((?x5848 (* 8.0 l_0_4_33)))
 (let ((?x5849 (* ?x5848 l_0_4_35)))
 (let ((?x5804 (* 4.0 l_0_4_32)))
 (let ((?x6107 (* ?x5804 l_0_4_37)))
 (let ((?x5842 (* 8.0 l_0_4_32)))
 (let ((?x5843 (* ?x5842 l_0_4_34)))
 (let ((?x6103 (* 8.0 l_0_4_21)))
 (let ((?x6104 (* ?x6103 l_0_4_24)))
 (let ((?x6100 (* 8.0 l_0_4_20)))
 (let ((?x6101 (* ?x6100 l_0_4_23)))
 (let ((?x6097 (* 8.0 l_0_4_19)))
 (let ((?x6098 (* ?x6097 l_0_4_22)))
 (let ((?x6006 (* 4.0 l_0_4_18)))
 (let ((?x6095 (* ?x6006 l_0_4_23)))
 (let ((?x5835 (* 8.0 l_0_4_18)))
 (let ((?x5836 (* ?x5835 l_0_4_20)))
 (let ((?x6003 (* 4.0 l_0_4_17)))
 (let ((?x6092 (* ?x6003 l_0_4_22)))
 (let ((?x5831 (* 8.0 l_0_4_17)))
 (let ((?x5832 (* ?x5831 l_0_4_19)))
 (let ((?x6106 (- (+ (+ (+ (+ (+ (+ ?x5832 ?x6092) ?x5836) ?x6095) ?x6098) ?x6101) ?x6104) ?x5843)))
 (let ((?x6123 (- (- (- (- (- (- (- ?x6106 ?x6107) ?x5849) ?x6110) ?x6113) ?x6116) ?x6119) ?x6122)))
 (let ((?x6129 (+ (+ ?x6123 (* (* 2.0 l_0_4_47) l_0_4_49)) (* (* 2.0 l_0_4_48) l_0_4_50))))
 (= (- (- ?x6129 ?x6131) ?x6134) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6118 (* 8.0 l_0_4_36)))
 (let ((?x6230 (* ?x6118 l_0_4_43)))
 (let ((?x6115 (* 8.0 l_0_4_35)))
 (let ((?x6228 (* ?x6115 l_0_4_42)))
 (let ((?x6112 (* 8.0 l_0_4_34)))
 (let ((?x6226 (* ?x6112 l_0_4_41)))
 (let ((?x5807 (* 4.0 l_0_4_33)))
 (let ((?x6224 (* ?x5807 l_0_4_42)))
 (let ((?x6023 (* ?x5807 l_0_4_35)))
 (let ((?x5804 (* 4.0 l_0_4_32)))
 (let ((?x6221 (* ?x5804 l_0_4_41)))
 (let ((?x6021 (* ?x5804 l_0_4_34)))
 (let ((?x6103 (* 8.0 l_0_4_21)))
 (let ((?x6218 (* ?x6103 l_0_4_28)))
 (let ((?x6100 (* 8.0 l_0_4_20)))
 (let ((?x6216 (* ?x6100 l_0_4_27)))
 (let ((?x6097 (* 8.0 l_0_4_19)))
 (let ((?x6214 (* ?x6097 l_0_4_26)))
 (let ((?x6006 (* 4.0 l_0_4_18)))
 (let ((?x6212 (* ?x6006 l_0_4_27)))
 (let ((?x6007 (* ?x6006 l_0_4_20)))
 (let ((?x6003 (* 4.0 l_0_4_17)))
 (let ((?x6209 (* ?x6003 l_0_4_26)))
 (let ((?x6004 (* ?x6003 l_0_4_19)))
 (let ((?x6205 (* 2.0 l_0_4_13)))
 (let ((?x6206 (* ?x6205 l_0_4_6)))
 (let ((?x5745 (* 2.0 l_0_4_12)))
 (let ((?x6203 (* ?x5745 l_0_4_5)))
 (let ((?x6210 (+ (- (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x6203) ?x6206) ?x6004) ?x6209)))
 (let ((?x6222 (- (+ (+ (+ (+ (+ (- ?x6210 ?x6007) ?x6212) ?x6214) ?x6216) ?x6218) ?x6021) ?x6221)))
 (= (- (- (- (- (+ ?x6222 ?x6023) ?x6224) ?x6226) ?x6228) ?x6230) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x6338 (* l_0_4_9 l_0_4_9)))
 (let ((?x6336 (* l_0_4_8 l_0_4_8)))
 (let ((?x6334 (* l_0_4_7 l_0_4_7)))
 (let ((?x6327 (* 4.0 l_0_4_40)))
 (let ((?x6328 (* ?x6327 l_0_4_40)))
 (let ((?x6324 (* 4.0 l_0_4_39)))
 (let ((?x6325 (* ?x6324 l_0_4_39)))
 (let ((?x6321 (* 4.0 l_0_4_38)))
 (let ((?x6322 (* ?x6321 l_0_4_38)))
 (let ((?x6318 (* 4.0 l_0_4_37)))
 (let ((?x6319 (* ?x6318 l_0_4_37)))
 (let ((?x5848 (* 8.0 l_0_4_33)))
 (let ((?x5906 (* ?x5848 l_0_4_38)))
 (let ((?x5842 (* 8.0 l_0_4_32)))
 (let ((?x5903 (* ?x5842 l_0_4_37)))
 (let ((?x6313 (* l_0_4_25 l_0_4_25)))
 (let ((?x6314 (* 4.0 ?x6313)))
 (let ((?x6310 (* l_0_4_24 l_0_4_24)))
 (let ((?x6311 (* 4.0 ?x6310)))
 (let ((?x6307 (* l_0_4_23 l_0_4_23)))
 (let ((?x6308 (* 4.0 ?x6307)))
 (let ((?x6304 (* l_0_4_22 l_0_4_22)))
 (let ((?x6305 (* 4.0 ?x6304)))
 (let ((?x5835 (* 8.0 l_0_4_18)))
 (let ((?x5898 (* ?x5835 l_0_4_23)))
 (let ((?x6303 (+ (+ (* (- l_0_4_10) l_0_4_10) (* (* 8.0 l_0_4_17) l_0_4_22)) ?x5898)))
 (let ((?x6320 (- (- (- (+ (+ (+ (+ ?x6303 ?x6305) ?x6308) ?x6311) ?x6314) ?x5903) ?x5906) ?x6319)))
 (let ((?x6331 (+ (- (- (- ?x6320 ?x6322) ?x6325) ?x6328) (* (* 2.0 l_0_4_47) l_0_4_52))))
 (let ((?x6339 (- (- (- (+ ?x6331 (* (* 2.0 l_0_4_48) l_0_4_53)) ?x6334) ?x6336) ?x6338)))
 (= ?x6339 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x6426 (* (* 8.0 l_0_4_40) l_0_4_44)))
 (let ((?x6423 (* (* 8.0 l_0_4_39) l_0_4_43)))
 (let ((?x6420 (* (* 8.0 l_0_4_38) l_0_4_42)))
 (let ((?x6417 (* (* 8.0 l_0_4_37) l_0_4_41)))
 (let ((?x5848 (* 8.0 l_0_4_33)))
 (let ((?x5965 (* ?x5848 l_0_4_42)))
 (let ((?x5807 (* 4.0 l_0_4_33)))
 (let ((?x6110 (* ?x5807 l_0_4_38)))
 (let ((?x5842 (* 8.0 l_0_4_32)))
 (let ((?x5962 (* ?x5842 l_0_4_41)))
 (let ((?x5804 (* 4.0 l_0_4_32)))
 (let ((?x6107 (* ?x5804 l_0_4_37)))
 (let ((?x6410 (* (* 8.0 l_0_4_25) l_0_4_29)))
 (let ((?x6407 (* (* 8.0 l_0_4_24) l_0_4_28)))
 (let ((?x6404 (* (* 8.0 l_0_4_23) l_0_4_27)))
 (let ((?x6401 (* (* 8.0 l_0_4_22) l_0_4_26)))
 (let ((?x5835 (* 8.0 l_0_4_18)))
 (let ((?x5957 (* ?x5835 l_0_4_27)))
 (let ((?x6006 (* 4.0 l_0_4_18)))
 (let ((?x6095 (* ?x6006 l_0_4_23)))
 (let ((?x5831 (* 8.0 l_0_4_17)))
 (let ((?x5952 (* ?x5831 l_0_4_26)))
 (let ((?x6003 (* 4.0 l_0_4_17)))
 (let ((?x6092 (* ?x6003 l_0_4_22)))
 (let ((?x6205 (* 2.0 l_0_4_13)))
 (let ((?x6394 (* ?x6205 l_0_4_9)))
 (let ((?x5745 (* 2.0 l_0_4_12)))
 (let ((?x6392 (* ?x5745 l_0_4_8)))
 (let ((?x5742 (* 2.0 l_0_4_11)))
 (let ((?x6390 (* ?x5742 l_0_4_7)))
 (let ((?x6396 (- (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x6390) ?x6392) ?x6394) ?x6092)))
 (let ((?x6411 (+ (+ (+ (+ (+ (- (+ ?x6396 ?x5952) ?x6095) ?x5957) ?x6401) ?x6404) ?x6407) ?x6410)))
 (let ((?x6424 (- (- (- (- (+ (- (+ ?x6411 ?x6107) ?x5962) ?x6110) ?x5965) ?x6417) ?x6420) ?x6423)))
 (let ((?x6431 (+ (+ (- ?x6424 ?x6426) (* (* 2.0 l_0_4_47) l_0_4_56)) (* (* 2.0 l_0_4_48) l_0_4_57))))
 (= ?x6431 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6557 (* (* 4.0 l_0_4_45) l_0_4_45)))
 (let ((?x6554 (* (* 4.0 l_0_4_44) l_0_4_44)))
 (let ((?x6551 (* (* 4.0 l_0_4_43) l_0_4_43)))
 (let ((?x6548 (* (* 4.0 l_0_4_42) l_0_4_42)))
 (let ((?x6545 (* (* 4.0 l_0_4_41) l_0_4_41)))
 (let ((?x5807 (* 4.0 l_0_4_33)))
 (let ((?x6224 (* ?x5807 l_0_4_42)))
 (let ((?x5804 (* 4.0 l_0_4_32)))
 (let ((?x6221 (* ?x5804 l_0_4_41)))
 (let ((?x6018 (* 2.0 l_0_4_31)))
 (let ((?x6019 (* ?x6018 l_0_4_32)))
 (let ((?x6538 (* l_0_4_30 l_0_4_30)))
 (let ((?x6539 (* 4.0 ?x6538)))
 (let ((?x6535 (* l_0_4_29 l_0_4_29)))
 (let ((?x6536 (* 4.0 ?x6535)))
 (let ((?x6532 (* l_0_4_28 l_0_4_28)))
 (let ((?x6533 (* 4.0 ?x6532)))
 (let ((?x6529 (* l_0_4_27 l_0_4_27)))
 (let ((?x6530 (* 4.0 ?x6529)))
 (let ((?x6526 (* l_0_4_26 l_0_4_26)))
 (let ((?x6527 (* 4.0 ?x6526)))
 (let ((?x6006 (* 4.0 l_0_4_18)))
 (let ((?x6212 (* ?x6006 l_0_4_27)))
 (let ((?x6003 (* 4.0 l_0_4_17)))
 (let ((?x6209 (* ?x6003 l_0_4_26)))
 (let ((?x6519 (* l_0_4_15 l_0_4_15)))
 (let ((?x6517 (* l_0_4_14 l_0_4_14)))
 (let ((?x6515 (* l_0_4_13 l_0_4_13)))
 (let ((?x6518 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x6515) ?x6517)))
 (let ((?x6525 (- (- (+ (- ?x6518 ?x6519) (* (* 2.0 l_0_4_16) l_0_4_17)) ?x6209) ?x6212)))
 (let ((?x6542 (+ (- (+ (+ (+ (+ (+ ?x6525 ?x6527) ?x6530) ?x6533) ?x6536) ?x6539) ?x6019) ?x6221)))
 (= (- (- (- (- (- (+ ?x6542 ?x6224) ?x6545) ?x6548) ?x6551) ?x6554) ?x6557) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x5550 (* l_0_4_16 l_0_4_16)))
 (let ((?x6619 (* 2.0 ?x5550)))
 (let ((?x6622 (- (+ (* (* 2.0 l_0_4_1) l_0_4_4) ?x6619) (* (* 2.0 l_0_4_31) l_0_4_31))))
 (= (- ?x6622 (* (* 2.0 l_0_4_61) l_0_4_64)) 0.0)))))
(assert
 (let ((?x6643 (* l_0_4_46 l_0_4_46)))
 (let ((?x5553 (* 4.0 l_0_4_31)))
 (let ((?x5554 (* ?x5553 l_0_4_31)))
 (let ((?x5550 (* l_0_4_16 l_0_4_16)))
 (let ((?x5551 (* 4.0 ?x5550)))
 (let ((?x6646 (- (+ (- (+ (* (* 2.0 l_0_4_1) l_0_4_7) ?x5551) ?x5554) ?x6643) (* (* 2.0 l_0_4_61) l_0_4_67))))
 (= ?x6646 0.0))))))))
(assert
 (let ((?x6662 (- (* (* 2.0 l_0_4_1) l_0_4_11) (* (* 2.0 l_0_4_16) l_0_4_16))))
 (let ((?x6665 (- (+ ?x6662 (* 2.0 (* l_0_4_31 l_0_4_31))) (* (* 2.0 l_0_4_61) l_0_4_71))))
 (= ?x6665 0.0))))
(assert
 (let ((?x6695 (* l_0_4_66 l_0_4_66)))
 (let ((?x6693 (* l_0_4_65 l_0_4_65)))
 (let ((?x6691 (* l_0_4_64 l_0_4_64)))
 (let ((?x5567 (* l_0_4_31 l_0_4_31)))
 (let ((?x5553 (* 4.0 l_0_4_31)))
 (let ((?x6682 (* ?x5553 l_0_4_34)))
 (let ((?x6683 (- (- (* (* 4.0 l_0_4_16) l_0_4_19) (* l_0_4_16 l_0_4_16)) ?x6682)))
 (let ((?x6688 (+ (+ (+ ?x6683 ?x5567) (* 1.0 (* l_0_4_4 l_0_4_4))) (* 1.0 (* l_0_4_5 l_0_4_5)))))
 (let ((?x6696 (- (- (- (+ ?x6688 (* 1.0 (* l_0_4_6 l_0_4_6))) ?x6691) ?x6693) ?x6695)))
 (= ?x6696 0.0)))))))))))
(assert
 (let ((?x6134 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6131 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6122 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5553 (* 4.0 l_0_4_31)))
 (let ((?x6724 (* ?x5553 l_0_4_37)))
 (let ((?x5604 (* 8.0 l_0_4_31)))
 (let ((?x5646 (* ?x5604 l_0_4_34)))
 (let ((?x5633 (* 4.0 l_0_4_16)))
 (let ((?x6721 (* ?x5633 l_0_4_22)))
 (let ((?x5595 (* 8.0 l_0_4_16)))
 (let ((?x5636 (* ?x5595 l_0_4_19)))
 (let ((?x6728 (+ (+ (- (- (+ ?x5636 ?x6721) ?x5646) ?x6724) ?x6122) (* (* 2.0 l_0_4_46) l_0_4_49))))
 (let ((?x6736 (- (- (+ (+ ?x6728 ?x6131) ?x6134) (* (* 2.0 l_0_4_64) l_0_4_67)) (* (* 2.0 l_0_4_65) l_0_4_68))))
 (= (- ?x6736 (* (* 2.0 l_0_4_66) l_0_4_69)) 0.0)))))))))))))))
(assert
 (let ((?x5553 (* 4.0 l_0_4_31)))
 (let ((?x6779 (* ?x5553 l_0_4_41)))
 (let ((?x6682 (* ?x5553 l_0_4_34)))
 (let ((?x5633 (* 4.0 l_0_4_16)))
 (let ((?x6776 (* ?x5633 l_0_4_26)))
 (let ((?x6680 (* ?x5633 l_0_4_19)))
 (let ((?x6205 (* 2.0 l_0_4_13)))
 (let ((?x6206 (* ?x6205 l_0_4_6)))
 (let ((?x5745 (* 2.0 l_0_4_12)))
 (let ((?x6203 (* ?x5745 l_0_4_5)))
 (let ((?x6777 (+ (- (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x6203) ?x6206) ?x6680) ?x6776)))
 (let ((?x6784 (- (- (- (+ ?x6777 ?x6682) ?x6779) (* (* 2.0 l_0_4_64) l_0_4_71)) (* (* 2.0 l_0_4_65) l_0_4_72))))
 (= (- ?x6784 (* (* 2.0 l_0_4_66) l_0_4_73)) 0.0))))))))))))))
(assert
 (let ((?x6833 (* l_0_4_70 l_0_4_70)))
 (let ((?x6829 (* l_0_4_69 l_0_4_69)))
 (let ((?x6827 (* l_0_4_68 l_0_4_68)))
 (let ((?x6825 (* l_0_4_67 l_0_4_67)))
 (let ((?x5604 (* 8.0 l_0_4_31)))
 (let ((?x5698 (* ?x5604 l_0_4_37)))
 (let ((?x5595 (* 8.0 l_0_4_16)))
 (let ((?x5691 (* ?x5595 l_0_4_22)))
 (let ((?x6824 (+ (- (+ (* 1.0 (* l_0_4_10 l_0_4_10)) ?x5691) ?x5698) (* (* 2.0 l_0_4_46) l_0_4_52))))
 (let ((?x6832 (+ (- (- (- ?x6824 ?x6825) ?x6827) ?x6829) (* 1.0 (* l_0_4_7 l_0_4_7)))))
 (let ((?x6838 (+ (+ (- ?x6832 ?x6833) (* 1.0 (* l_0_4_8 l_0_4_8))) (* 1.0 (* l_0_4_9 l_0_4_9)))))
 (= ?x6838 0.0)))))))))))))
(assert
 (let ((?x5604 (* 8.0 l_0_4_31)))
 (let ((?x5752 (* ?x5604 l_0_4_41)))
 (let ((?x5553 (* 4.0 l_0_4_31)))
 (let ((?x6724 (* ?x5553 l_0_4_37)))
 (let ((?x5595 (* 8.0 l_0_4_16)))
 (let ((?x5749 (* ?x5595 l_0_4_26)))
 (let ((?x5633 (* 4.0 l_0_4_16)))
 (let ((?x6721 (* ?x5633 l_0_4_22)))
 (let ((?x6205 (* 2.0 l_0_4_13)))
 (let ((?x6394 (* ?x6205 l_0_4_9)))
 (let ((?x5745 (* 2.0 l_0_4_12)))
 (let ((?x6392 (* ?x5745 l_0_4_8)))
 (let ((?x5742 (* 2.0 l_0_4_11)))
 (let ((?x6390 (* ?x5742 l_0_4_7)))
 (let ((?x6866 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x6390) ?x6392) ?x6394) ?x6721)))
 (let ((?x6871 (+ (- (+ (+ ?x6866 ?x5749) ?x6724) ?x5752) (* (* 2.0 l_0_4_46) l_0_4_56))))
 (let ((?x6877 (- (- ?x6871 (* (* 2.0 l_0_4_67) l_0_4_71)) (* (* 2.0 l_0_4_68) l_0_4_72))))
 (let ((?x6883 (- (- ?x6877 (* (* 2.0 l_0_4_69) l_0_4_73)) (* (* 2.0 l_0_4_70) l_0_4_74))))
 (= ?x6883 0.0))))))))))))))))))))
(assert
 (let ((?x6944 (* l_0_4_75 l_0_4_75)))
 (let ((?x6942 (* l_0_4_74 l_0_4_74)))
 (let ((?x6940 (* l_0_4_73 l_0_4_73)))
 (let ((?x6938 (* l_0_4_72 l_0_4_72)))
 (let ((?x6936 (* l_0_4_71 l_0_4_71)))
 (let ((?x5567 (* l_0_4_31 l_0_4_31)))
 (let ((?x5553 (* 4.0 l_0_4_31)))
 (let ((?x6779 (* ?x5553 l_0_4_41)))
 (let ((?x5550 (* l_0_4_16 l_0_4_16)))
 (let ((?x5633 (* 4.0 l_0_4_16)))
 (let ((?x6776 (* ?x5633 l_0_4_26)))
 (let ((?x6925 (+ (* 1.0 (* l_0_4_11 l_0_4_11)) (* 1.0 (* l_0_4_12 l_0_4_12)))))
 (let ((?x6929 (+ (+ ?x6925 (* 1.0 (* l_0_4_13 l_0_4_13))) (* 1.0 (* l_0_4_14 l_0_4_14)))))
 (let ((?x6934 (+ (+ (- (+ ?x6929 (* 1.0 (* l_0_4_15 l_0_4_15))) ?x6776) ?x5550) ?x6779)))
 (= (- (- (- (- (- (- ?x6934 ?x5567) ?x6936) ?x6938) ?x6940) ?x6942) ?x6944) 0.0))))))))))))))))
(assert
 (let ((?x6018 (* 2.0 l_0_4_31)))
 (let ((?x6977 (* ?x6018 l_0_4_34)))
 (let ((?x6015 (* l_0_4_21 l_0_4_21)))
 (let ((?x6975 (* 2.0 ?x6015)))
 (let ((?x6012 (* l_0_4_20 l_0_4_20)))
 (let ((?x6973 (* 2.0 ?x6012)))
 (let ((?x6009 (* l_0_4_19 l_0_4_19)))
 (let ((?x6971 (* 2.0 ?x6009)))
 (let ((?x6978 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_16) l_0_4_19) ?x6971) ?x6973) ?x6975) ?x6977)))
 (let ((?x6984 (- (- ?x6978 (* (* 2.0 l_0_4_34) l_0_4_34)) (* (* 2.0 l_0_4_35) l_0_4_35))))
 (= (- ?x6984 (* (* 2.0 l_0_4_36) l_0_4_36)) 0.0))))))))))))
(assert
 (let ((?x7042 (* l_0_4_51 l_0_4_51)))
 (let ((?x7040 (* l_0_4_50 l_0_4_50)))
 (let ((?x7038 (* l_0_4_49 l_0_4_49)))
 (let ((?x6031 (* 4.0 l_0_4_36)))
 (let ((?x6032 (* ?x6031 l_0_4_36)))
 (let ((?x7035 (* ?x6031 l_0_4_39)))
 (let ((?x6028 (* 4.0 l_0_4_35)))
 (let ((?x6029 (* ?x6028 l_0_4_35)))
 (let ((?x7032 (* ?x6028 l_0_4_38)))
 (let ((?x6025 (* 4.0 l_0_4_34)))
 (let ((?x6026 (* ?x6025 l_0_4_34)))
 (let ((?x7029 (* ?x6025 l_0_4_37)))
 (let ((?x6018 (* 2.0 l_0_4_31)))
 (let ((?x7027 (* ?x6018 l_0_4_37)))
 (let ((?x6015 (* l_0_4_21 l_0_4_21)))
 (let ((?x6016 (* 4.0 ?x6015)))
 (let ((?x7023 (* 4.0 l_0_4_21)))
 (let ((?x7024 (* ?x7023 l_0_4_24)))
 (let ((?x6012 (* l_0_4_20 l_0_4_20)))
 (let ((?x6013 (* 4.0 ?x6012)))
 (let ((?x7019 (* 4.0 l_0_4_20)))
 (let ((?x7020 (* ?x7019 l_0_4_23)))
 (let ((?x6009 (* l_0_4_19 l_0_4_19)))
 (let ((?x6010 (* 4.0 ?x6009)))
 (let ((?x7017 (+ (* (* (- 2.0) l_0_4_16) l_0_4_22) (* (* 4.0 l_0_4_19) l_0_4_22))))
 (let ((?x7030 (- (+ (+ (+ (+ (+ (+ ?x7017 ?x6010) ?x7020) ?x6013) ?x7024) ?x6016) ?x7027) ?x7029)))
 (let ((?x7041 (+ (+ (- (- (- (- (- ?x7030 ?x6026) ?x7032) ?x6029) ?x7035) ?x6032) ?x7038) ?x7040)))
 (= (+ ?x7041 ?x7042) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x6068 (* l_0_4_36 l_0_4_36)))
 (let ((?x7002 (* 2.0 ?x6068)))
 (let ((?x6031 (* 4.0 l_0_4_36)))
 (let ((?x7106 (* ?x6031 l_0_4_43)))
 (let ((?x6062 (* l_0_4_35 l_0_4_35)))
 (let ((?x6997 (* 2.0 ?x6062)))
 (let ((?x6028 (* 4.0 l_0_4_35)))
 (let ((?x7103 (* ?x6028 l_0_4_42)))
 (let ((?x6056 (* l_0_4_34 l_0_4_34)))
 (let ((?x6992 (* 2.0 ?x6056)))
 (let ((?x6025 (* 4.0 l_0_4_34)))
 (let ((?x7100 (* ?x6025 l_0_4_41)))
 (let ((?x6018 (* 2.0 l_0_4_31)))
 (let ((?x7098 (* ?x6018 l_0_4_41)))
 (let ((?x7023 (* 4.0 l_0_4_21)))
 (let ((?x7093 (* ?x7023 l_0_4_28)))
 (let ((?x7019 (* 4.0 l_0_4_20)))
 (let ((?x7088 (* ?x7019 l_0_4_27)))
 (let ((?x7015 (* 4.0 l_0_4_19)))
 (let ((?x7083 (* ?x7015 l_0_4_26)))
 (let ((?x7087 (- (+ (* (* (- 2.0) l_0_4_16) l_0_4_26) ?x7083) (* (* 2.0 l_0_4_19) l_0_4_19))))
 (let ((?x7097 (- (+ (- (+ ?x7087 ?x7088) (* (* 2.0 l_0_4_20) l_0_4_20)) ?x7093) (* (* 2.0 l_0_4_21) l_0_4_21))))
 (let ((?x7108 (+ (- (+ (- (+ (- (+ ?x7097 ?x7098) ?x7100) ?x6992) ?x7103) ?x6997) ?x7106) ?x7002)))
 (= ?x7108 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5821 (* l_0_4_33 l_0_4_33)))
 (let ((?x5815 (* l_0_4_32 l_0_4_32)))
 (let ((?x7156 (+ (+ (- (* (- l_0_4_17) l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x5815) ?x5821)))
 (= ?x7156 0.0)))))
(assert
 (let ((?x5851 (* 2.0 l_0_4_33)))
 (let ((?x7172 (* ?x5851 l_0_4_35)))
 (let ((?x5845 (* 2.0 l_0_4_32)))
 (let ((?x7170 (* ?x5845 l_0_4_34)))
 (let ((?x5959 (* 2.0 l_0_4_18)))
 (let ((?x7168 (* ?x5959 l_0_4_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x7168) ?x7170) ?x7172) 0.0))))))))
(assert
 (let ((?x5851 (* 2.0 l_0_4_33)))
 (let ((?x7191 (* ?x5851 l_0_4_38)))
 (let ((?x5845 (* 2.0 l_0_4_32)))
 (let ((?x7189 (* ?x5845 l_0_4_37)))
 (let ((?x5959 (* 2.0 l_0_4_18)))
 (let ((?x7182 (* ?x5959 l_0_4_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x7182) ?x7189) ?x7191) 0.0))))))))
(assert
 (let ((?x5851 (* 2.0 l_0_4_33)))
 (let ((?x7210 (* ?x5851 l_0_4_42)))
 (let ((?x5845 (* 2.0 l_0_4_32)))
 (let ((?x7208 (* ?x5845 l_0_4_41)))
 (let ((?x5959 (* 2.0 l_0_4_18)))
 (let ((?x7201 (* ?x5959 l_0_4_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_26) ?x7201) ?x7208) ?x7210) 0.0))))))))
(assert
 (let ((?x6068 (* l_0_4_36 l_0_4_36)))
 (let ((?x6062 (* l_0_4_35 l_0_4_35)))
 (let ((?x6056 (* l_0_4_34 l_0_4_34)))
 (let ((?x6015 (* l_0_4_21 l_0_4_21)))
 (let ((?x7228 (+ (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x6015) ?x6056)))
 (= (+ (+ ?x7228 ?x6062) ?x6068) 0.0)))))))
(assert
 (let ((?x6985 (* 2.0 l_0_4_36)))
 (let ((?x7254 (* ?x6985 l_0_4_39)))
 (let ((?x6982 (* 2.0 l_0_4_35)))
 (let ((?x7252 (* ?x6982 l_0_4_38)))
 (let ((?x6979 (* 2.0 l_0_4_34)))
 (let ((?x7250 (* ?x6979 l_0_4_37)))
 (let ((?x7095 (* 2.0 l_0_4_21)))
 (let ((?x7248 (* ?x7095 l_0_4_24)))
 (let ((?x7090 (* 2.0 l_0_4_20)))
 (let ((?x7246 (* ?x7090 l_0_4_23)))
 (let ((?x7253 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x7246) ?x7248) ?x7250) ?x7252)))
 (= (+ ?x7253 ?x7254) 0.0)))))))))))))
(assert
 (let ((?x6985 (* 2.0 l_0_4_36)))
 (let ((?x7283 (* ?x6985 l_0_4_43)))
 (let ((?x6982 (* 2.0 l_0_4_35)))
 (let ((?x7281 (* ?x6982 l_0_4_42)))
 (let ((?x6979 (* 2.0 l_0_4_34)))
 (let ((?x7279 (* ?x6979 l_0_4_41)))
 (let ((?x7095 (* 2.0 l_0_4_21)))
 (let ((?x7271 (* ?x7095 l_0_4_28)))
 (let ((?x7090 (* 2.0 l_0_4_20)))
 (let ((?x7269 (* ?x7090 l_0_4_27)))
 (let ((?x7282 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_26) ?x7269) ?x7271) ?x7279) ?x7281)))
 (= (+ ?x7282 ?x7283) 0.0)))))))))))))
(assert
 (let ((?x6367 (* l_0_4_40 l_0_4_40)))
 (let ((?x6361 (* l_0_4_39 l_0_4_39)))
 (let ((?x6355 (* l_0_4_38 l_0_4_38)))
 (let ((?x6349 (* l_0_4_37 l_0_4_37)))
 (let ((?x6313 (* l_0_4_25 l_0_4_25)))
 (let ((?x6310 (* l_0_4_24 l_0_4_24)))
 (let ((?x7307 (- (- (- (* (- l_0_4_22) l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x6310) ?x6313)))
 (= (+ (+ (+ (+ ?x7307 ?x6349) ?x6355) ?x6361) ?x6367) 0.0)))))))))
(assert
 (let ((?x7349 (* 2.0 l_0_4_40)))
 (let ((?x7350 (* ?x7349 l_0_4_44)))
 (let ((?x7346 (* 2.0 l_0_4_39)))
 (let ((?x7347 (* ?x7346 l_0_4_43)))
 (let ((?x7343 (* 2.0 l_0_4_38)))
 (let ((?x7344 (* ?x7343 l_0_4_42)))
 (let ((?x7340 (* 2.0 l_0_4_37)))
 (let ((?x7341 (* ?x7340 l_0_4_41)))
 (let ((?x7337 (* 2.0 l_0_4_25)))
 (let ((?x7338 (* ?x7337 l_0_4_29)))
 (let ((?x7334 (* 2.0 l_0_4_24)))
 (let ((?x7335 (* ?x7334 l_0_4_28)))
 (let ((?x7331 (* 2.0 l_0_4_23)))
 (let ((?x7332 (* ?x7331 l_0_4_27)))
 (let ((?x7342 (+ (- (- (- (* (* (- 2.0) l_0_4_22) l_0_4_26) ?x7332) ?x7335) ?x7338) ?x7341)))
 (= (+ (+ (+ ?x7342 ?x7344) ?x7347) ?x7350) 0.0)))))))))))))))))
(assert
 (let ((?x6611 (* l_0_4_45 l_0_4_45)))
 (let ((?x6605 (* l_0_4_44 l_0_4_44)))
 (let ((?x6599 (* l_0_4_43 l_0_4_43)))
 (let ((?x6593 (* l_0_4_42 l_0_4_42)))
 (let ((?x6587 (* l_0_4_41 l_0_4_41)))
 (let ((?x6068 (* l_0_4_36 l_0_4_36)))
 (let ((?x6062 (* l_0_4_35 l_0_4_35)))
 (let ((?x6056 (* l_0_4_34 l_0_4_34)))
 (let ((?x6538 (* l_0_4_30 l_0_4_30)))
 (let ((?x6535 (* l_0_4_29 l_0_4_29)))
 (let ((?x6532 (* l_0_4_28 l_0_4_28)))
 (let ((?x6529 (* l_0_4_27 l_0_4_27)))
 (let ((?x6526 (* l_0_4_26 l_0_4_26)))
 (let ((?x6015 (* l_0_4_21 l_0_4_21)))
 (let ((?x7371 (- (+ (+ (* l_0_4_19 l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x6015) ?x6526)))
 (let ((?x7385 (- (- (- (- (- (- (- ?x7371 ?x6529) ?x6532) ?x6535) ?x6538) ?x6056) ?x6062) ?x6068)))
 (= (+ (+ (+ (+ (+ ?x7385 ?x6587) ?x6593) ?x6599) ?x6605) ?x6611) 0.0))))))))))))))))))
(assert
 (let ((?x6031 (* 4.0 l_0_4_36)))
 (let ((?x7106 (* ?x6031 l_0_4_43)))
 (let ((?x6028 (* 4.0 l_0_4_35)))
 (let ((?x7103 (* ?x6028 l_0_4_42)))
 (let ((?x6025 (* 4.0 l_0_4_34)))
 (let ((?x7100 (* ?x6025 l_0_4_41)))
 (let ((?x6018 (* 2.0 l_0_4_31)))
 (let ((?x6977 (* ?x6018 l_0_4_34)))
 (let ((?x6538 (* l_0_4_30 l_0_4_30)))
 (let ((?x7428 (* 2.0 ?x6538)))
 (let ((?x6535 (* l_0_4_29 l_0_4_29)))
 (let ((?x7426 (* 2.0 ?x6535)))
 (let ((?x6532 (* l_0_4_28 l_0_4_28)))
 (let ((?x7424 (* 2.0 ?x6532)))
 (let ((?x6529 (* l_0_4_27 l_0_4_27)))
 (let ((?x7422 (* 2.0 ?x6529)))
 (let ((?x6526 (* l_0_4_26 l_0_4_26)))
 (let ((?x7420 (* 2.0 ?x6526)))
 (let ((?x7023 (* 4.0 l_0_4_21)))
 (let ((?x7093 (* ?x7023 l_0_4_28)))
 (let ((?x7019 (* 4.0 l_0_4_20)))
 (let ((?x7088 (* ?x7019 l_0_4_27)))
 (let ((?x7015 (* 4.0 l_0_4_19)))
 (let ((?x7083 (* ?x7015 l_0_4_26)))
 (let ((?x7421 (+ (- (- (- (* (* 2.0 l_0_4_16) l_0_4_19) ?x7083) ?x7088) ?x7093) ?x7420)))
 (let ((?x7432 (+ (+ (- (+ (+ (+ (+ ?x7421 ?x7422) ?x7424) ?x7426) ?x7428) ?x6977) ?x7100) ?x7103)))
 (let ((?x7439 (- (- (+ ?x7432 ?x7106) (* (* 2.0 l_0_4_41) l_0_4_41)) (* (* 2.0 l_0_4_42) l_0_4_42))))
 (let ((?x7445 (- (- ?x7439 (* (* 2.0 l_0_4_43) l_0_4_43)) (* (* 2.0 l_0_4_44) l_0_4_44))))
 (= (- ?x7445 (* (* 2.0 l_0_4_45) l_0_4_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x7530 (* l_0_4_60 l_0_4_60)))
 (let ((?x7528 (* l_0_4_59 l_0_4_59)))
 (let ((?x7526 (* l_0_4_58 l_0_4_58)))
 (let ((?x7524 (* l_0_4_57 l_0_4_57)))
 (let ((?x7522 (* l_0_4_56 l_0_4_56)))
 (let ((?x6557 (* (* 4.0 l_0_4_45) l_0_4_45)))
 (let ((?x6554 (* (* 4.0 l_0_4_44) l_0_4_44)))
 (let ((?x6551 (* (* 4.0 l_0_4_43) l_0_4_43)))
 (let ((?x6548 (* (* 4.0 l_0_4_42) l_0_4_42)))
 (let ((?x6545 (* (* 4.0 l_0_4_41) l_0_4_41)))
 (let ((?x6327 (* 4.0 l_0_4_40)))
 (let ((?x7515 (* ?x6327 l_0_4_44)))
 (let ((?x6324 (* 4.0 l_0_4_39)))
 (let ((?x7513 (* ?x6324 l_0_4_43)))
 (let ((?x6321 (* 4.0 l_0_4_38)))
 (let ((?x7511 (* ?x6321 l_0_4_42)))
 (let ((?x6318 (* 4.0 l_0_4_37)))
 (let ((?x7509 (* ?x6318 l_0_4_41)))
 (let ((?x6018 (* 2.0 l_0_4_31)))
 (let ((?x7027 (* ?x6018 l_0_4_37)))
 (let ((?x6538 (* l_0_4_30 l_0_4_30)))
 (let ((?x6539 (* 4.0 ?x6538)))
 (let ((?x6535 (* l_0_4_29 l_0_4_29)))
 (let ((?x6536 (* 4.0 ?x6535)))
 (let ((?x6532 (* l_0_4_28 l_0_4_28)))
 (let ((?x6533 (* 4.0 ?x6532)))
 (let ((?x6529 (* l_0_4_27 l_0_4_27)))
 (let ((?x6530 (* 4.0 ?x6529)))
 (let ((?x6526 (* l_0_4_26 l_0_4_26)))
 (let ((?x6527 (* 4.0 ?x6526)))
 (let ((?x7501 (* (* 4.0 l_0_4_25) l_0_4_29)))
 (let ((?x7498 (* (* 4.0 l_0_4_24) l_0_4_28)))
 (let ((?x7495 (* (* 4.0 l_0_4_23) l_0_4_27)))
 (let ((?x7492 (* (* 4.0 l_0_4_22) l_0_4_26)))
 (let ((?x7502 (- (- (- (- (* (* 2.0 l_0_4_16) l_0_4_22) ?x7492) ?x7495) ?x7498) ?x7501)))
 (let ((?x7510 (+ (- (+ (+ (+ (+ (+ ?x7502 ?x6527) ?x6530) ?x6533) ?x6536) ?x6539) ?x7027) ?x7509)))
 (let ((?x7520 (- (- (- (- (+ (+ (+ ?x7510 ?x7511) ?x7513) ?x7515) ?x6545) ?x6548) ?x6551) ?x6554)))
 (= (+ (+ (+ (+ (+ (- ?x7520 ?x6557) ?x7522) ?x7524) ?x7526) ?x7528) ?x7530) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6611 (* l_0_4_45 l_0_4_45)))
 (let ((?x7484 (* 2.0 ?x6611)))
 (let ((?x6605 (* l_0_4_44 l_0_4_44)))
 (let ((?x7479 (* 2.0 ?x6605)))
 (let ((?x6599 (* l_0_4_43 l_0_4_43)))
 (let ((?x7474 (* 2.0 ?x6599)))
 (let ((?x6593 (* l_0_4_42 l_0_4_42)))
 (let ((?x7469 (* 2.0 ?x6593)))
 (let ((?x6587 (* l_0_4_41 l_0_4_41)))
 (let ((?x7464 (* 2.0 ?x6587)))
 (let ((?x6018 (* 2.0 l_0_4_31)))
 (let ((?x7098 (* ?x6018 l_0_4_41)))
 (let ((?x7577 (- (* (* 2.0 l_0_4_16) l_0_4_26) (* (* 2.0 l_0_4_26) l_0_4_26))))
 (let ((?x7583 (- (- ?x7577 (* (* 2.0 l_0_4_27) l_0_4_27)) (* (* 2.0 l_0_4_28) l_0_4_28))))
 (let ((?x7589 (- (- ?x7583 (* (* 2.0 l_0_4_29) l_0_4_29)) (* (* 2.0 l_0_4_30) l_0_4_30))))
 (= (+ (+ (+ (+ (+ (- ?x7589 ?x7098) ?x7464) ?x7469) ?x7474) ?x7479) ?x7484) 0.0)))))))))))))))))
(assert
 (let ((?x5821 (* l_0_4_33 l_0_4_33)))
 (let ((?x5815 (* l_0_4_32 l_0_4_32)))
 (let ((?x7624 (- (- (+ (* l_0_4_17 l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x5815) ?x5821)))
 (= ?x7624 0.0)))))
(assert
 (let ((?x5851 (* 2.0 l_0_4_33)))
 (let ((?x7172 (* ?x5851 l_0_4_35)))
 (let ((?x5845 (* 2.0 l_0_4_32)))
 (let ((?x7170 (* ?x5845 l_0_4_34)))
 (let ((?x5959 (* 2.0 l_0_4_18)))
 (let ((?x7168 (* ?x5959 l_0_4_20)))
 (= (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_19) ?x7168) ?x7170) ?x7172) 0.0))))))))
(assert
 (let ((?x5851 (* 2.0 l_0_4_33)))
 (let ((?x7191 (* ?x5851 l_0_4_38)))
 (let ((?x5845 (* 2.0 l_0_4_32)))
 (let ((?x7189 (* ?x5845 l_0_4_37)))
 (let ((?x5959 (* 2.0 l_0_4_18)))
 (let ((?x7182 (* ?x5959 l_0_4_23)))
 (= (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_22) ?x7182) ?x7189) ?x7191) 0.0))))))))
(assert
 (let ((?x5851 (* 2.0 l_0_4_33)))
 (let ((?x7210 (* ?x5851 l_0_4_42)))
 (let ((?x5845 (* 2.0 l_0_4_32)))
 (let ((?x7208 (* ?x5845 l_0_4_41)))
 (let ((?x5959 (* 2.0 l_0_4_18)))
 (let ((?x7201 (* ?x5959 l_0_4_27)))
 (= (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_26) ?x7201) ?x7208) ?x7210) 0.0))))))))
(assert
 (let ((?x6985 (* 2.0 l_0_4_36)))
 (let ((?x7254 (* ?x6985 l_0_4_39)))
 (let ((?x6982 (* 2.0 l_0_4_35)))
 (let ((?x7252 (* ?x6982 l_0_4_38)))
 (let ((?x6979 (* 2.0 l_0_4_34)))
 (let ((?x7250 (* ?x6979 l_0_4_37)))
 (let ((?x7095 (* 2.0 l_0_4_21)))
 (let ((?x7248 (* ?x7095 l_0_4_24)))
 (let ((?x7090 (* 2.0 l_0_4_20)))
 (let ((?x7246 (* ?x7090 l_0_4_23)))
 (let ((?x7672 (- (- (+ (+ (* (* 2.0 l_0_4_19) l_0_4_22) ?x7246) ?x7248) ?x7250) ?x7252)))
 (= (- ?x7672 ?x7254) 0.0)))))))))))))
(assert
 (let ((?x6985 (* 2.0 l_0_4_36)))
 (let ((?x7283 (* ?x6985 l_0_4_43)))
 (let ((?x6982 (* 2.0 l_0_4_35)))
 (let ((?x7281 (* ?x6982 l_0_4_42)))
 (let ((?x6979 (* 2.0 l_0_4_34)))
 (let ((?x7279 (* ?x6979 l_0_4_41)))
 (let ((?x7095 (* 2.0 l_0_4_21)))
 (let ((?x7271 (* ?x7095 l_0_4_28)))
 (let ((?x7090 (* 2.0 l_0_4_20)))
 (let ((?x7269 (* ?x7090 l_0_4_27)))
 (let ((?x7691 (- (- (+ (+ (* (* 2.0 l_0_4_19) l_0_4_26) ?x7269) ?x7271) ?x7279) ?x7281)))
 (= (- ?x7691 ?x7283) 0.0)))))))))))))
(assert
 (let ((?x6367 (* l_0_4_40 l_0_4_40)))
 (let ((?x6361 (* l_0_4_39 l_0_4_39)))
 (let ((?x6355 (* l_0_4_38 l_0_4_38)))
 (let ((?x6349 (* l_0_4_37 l_0_4_37)))
 (let ((?x6313 (* l_0_4_25 l_0_4_25)))
 (let ((?x6310 (* l_0_4_24 l_0_4_24)))
 (let ((?x7708 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x6310) ?x6313)))
 (= (- (- (- (- ?x7708 ?x6349) ?x6355) ?x6361) ?x6367) 0.0)))))))))
(assert
 (let ((?x7349 (* 2.0 l_0_4_40)))
 (let ((?x7350 (* ?x7349 l_0_4_44)))
 (let ((?x7346 (* 2.0 l_0_4_39)))
 (let ((?x7347 (* ?x7346 l_0_4_43)))
 (let ((?x7343 (* 2.0 l_0_4_38)))
 (let ((?x7344 (* ?x7343 l_0_4_42)))
 (let ((?x7340 (* 2.0 l_0_4_37)))
 (let ((?x7341 (* ?x7340 l_0_4_41)))
 (let ((?x7337 (* 2.0 l_0_4_25)))
 (let ((?x7338 (* ?x7337 l_0_4_29)))
 (let ((?x7334 (* 2.0 l_0_4_24)))
 (let ((?x7335 (* ?x7334 l_0_4_28)))
 (let ((?x7331 (* 2.0 l_0_4_23)))
 (let ((?x7332 (* ?x7331 l_0_4_27)))
 (let ((?x7727 (- (+ (+ (+ (* (* 2.0 l_0_4_22) l_0_4_26) ?x7332) ?x7335) ?x7338) ?x7341)))
 (= (- (- (- ?x7727 ?x7344) ?x7347) ?x7350) 0.0)))))))))))))))))
(assert
 (let ((?x6611 (* l_0_4_45 l_0_4_45)))
 (let ((?x6605 (* l_0_4_44 l_0_4_44)))
 (let ((?x6599 (* l_0_4_43 l_0_4_43)))
 (let ((?x6593 (* l_0_4_42 l_0_4_42)))
 (let ((?x6587 (* l_0_4_41 l_0_4_41)))
 (let ((?x6538 (* l_0_4_30 l_0_4_30)))
 (let ((?x6535 (* l_0_4_29 l_0_4_29)))
 (let ((?x6532 (* l_0_4_28 l_0_4_28)))
 (let ((?x7750 (+ (+ (+ (* l_0_4_26 l_0_4_26) (* l_0_4_27 l_0_4_27)) ?x6532) ?x6535)))
 (= (- (- (- (- (- (+ ?x7750 ?x6538) ?x6587) ?x6593) ?x6599) ?x6605) ?x6611) 0.0)))))))))))
(assert
 (let ((?x6118 (* 8.0 l_0_4_36)))
 (let ((?x6119 (* ?x6118 l_0_4_39)))
 (let ((?x6115 (* 8.0 l_0_4_35)))
 (let ((?x6116 (* ?x6115 l_0_4_38)))
 (let ((?x6112 (* 8.0 l_0_4_34)))
 (let ((?x6113 (* ?x6112 l_0_4_37)))
 (let ((?x6313 (* l_0_4_25 l_0_4_25)))
 (let ((?x7783 (* 2.0 ?x6313)))
 (let ((?x6310 (* l_0_4_24 l_0_4_24)))
 (let ((?x7781 (* 2.0 ?x6310)))
 (let ((?x6307 (* l_0_4_23 l_0_4_23)))
 (let ((?x7779 (* 2.0 ?x6307)))
 (let ((?x6304 (* l_0_4_22 l_0_4_22)))
 (let ((?x7777 (* 2.0 ?x6304)))
 (let ((?x6103 (* 8.0 l_0_4_21)))
 (let ((?x6104 (* ?x6103 l_0_4_24)))
 (let ((?x6100 (* 8.0 l_0_4_20)))
 (let ((?x6101 (* ?x6100 l_0_4_23)))
 (let ((?x6097 (* 8.0 l_0_4_19)))
 (let ((?x6098 (* ?x6097 l_0_4_22)))
 (let ((?x7785 (- (+ (+ (+ (+ (+ (+ ?x6098 ?x6101) ?x6104) ?x7777) ?x7779) ?x7781) ?x7783) ?x6113)))
 (let ((?x7791 (- (- (- (- ?x7785 ?x6116) ?x6119) (* (* 2.0 l_0_4_37) l_0_4_37)) (* (* 2.0 l_0_4_38) l_0_4_38))))
 (let ((?x7795 (- (- ?x7791 (* (* 2.0 l_0_4_39) l_0_4_39)) (* (* 2.0 l_0_4_40) l_0_4_40))))
 (let ((?x7801 (+ (+ ?x7795 (* (* 2.0 l_0_4_49) l_0_4_52)) (* (* 2.0 l_0_4_50) l_0_4_53))))
 (= (+ ?x7801 (* (* 2.0 l_0_4_51) l_0_4_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x6327 (* 4.0 l_0_4_40)))
 (let ((?x7515 (* ?x6327 l_0_4_44)))
 (let ((?x6324 (* 4.0 l_0_4_39)))
 (let ((?x7513 (* ?x6324 l_0_4_43)))
 (let ((?x6321 (* 4.0 l_0_4_38)))
 (let ((?x7511 (* ?x6321 l_0_4_42)))
 (let ((?x6318 (* 4.0 l_0_4_37)))
 (let ((?x7509 (* ?x6318 l_0_4_41)))
 (let ((?x6118 (* 8.0 l_0_4_36)))
 (let ((?x6230 (* ?x6118 l_0_4_43)))
 (let ((?x6031 (* 4.0 l_0_4_36)))
 (let ((?x7035 (* ?x6031 l_0_4_39)))
 (let ((?x6115 (* 8.0 l_0_4_35)))
 (let ((?x6228 (* ?x6115 l_0_4_42)))
 (let ((?x6028 (* 4.0 l_0_4_35)))
 (let ((?x7032 (* ?x6028 l_0_4_38)))
 (let ((?x6112 (* 8.0 l_0_4_34)))
 (let ((?x6226 (* ?x6112 l_0_4_41)))
 (let ((?x6025 (* 4.0 l_0_4_34)))
 (let ((?x7029 (* ?x6025 l_0_4_37)))
 (let ((?x7501 (* (* 4.0 l_0_4_25) l_0_4_29)))
 (let ((?x7498 (* (* 4.0 l_0_4_24) l_0_4_28)))
 (let ((?x7495 (* (* 4.0 l_0_4_23) l_0_4_27)))
 (let ((?x7492 (* (* 4.0 l_0_4_22) l_0_4_26)))
 (let ((?x6103 (* 8.0 l_0_4_21)))
 (let ((?x6218 (* ?x6103 l_0_4_28)))
 (let ((?x7023 (* 4.0 l_0_4_21)))
 (let ((?x7024 (* ?x7023 l_0_4_24)))
 (let ((?x6100 (* 8.0 l_0_4_20)))
 (let ((?x6216 (* ?x6100 l_0_4_27)))
 (let ((?x7019 (* 4.0 l_0_4_20)))
 (let ((?x7020 (* ?x7019 l_0_4_23)))
 (let ((?x6097 (* 8.0 l_0_4_19)))
 (let ((?x6214 (* ?x6097 l_0_4_26)))
 (let ((?x7846 (- (+ (- (+ (* (* (- 4.0) l_0_4_19) l_0_4_22) ?x6214) ?x7020) ?x6216) ?x7024)))
 (let ((?x7853 (- (+ (+ (+ (+ (+ (+ ?x7846 ?x6218) ?x7492) ?x7495) ?x7498) ?x7501) ?x7029) ?x6226)))
 (let ((?x7860 (- (- (- (- (+ (- (+ ?x7853 ?x7032) ?x6228) ?x7035) ?x6230) ?x7509) ?x7511) ?x7513)))
 (let ((?x7865 (+ (+ (- ?x7860 ?x7515) (* (* 2.0 l_0_4_49) l_0_4_56)) (* (* 2.0 l_0_4_50) l_0_4_57))))
 (= (+ ?x7865 (* (* 2.0 l_0_4_51) l_0_4_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6426 (* (* 8.0 l_0_4_40) l_0_4_44)))
 (let ((?x6423 (* (* 8.0 l_0_4_39) l_0_4_43)))
 (let ((?x6420 (* (* 8.0 l_0_4_38) l_0_4_42)))
 (let ((?x6417 (* (* 8.0 l_0_4_37) l_0_4_41)))
 (let ((?x6410 (* (* 8.0 l_0_4_25) l_0_4_29)))
 (let ((?x6407 (* (* 8.0 l_0_4_24) l_0_4_28)))
 (let ((?x6404 (* (* 8.0 l_0_4_23) l_0_4_27)))
 (let ((?x6401 (* (* 8.0 l_0_4_22) l_0_4_26)))
 (let ((?x7914 (- (+ (- ?x6401 (* (* 2.0 l_0_4_22) l_0_4_22)) ?x6404) (* (* 2.0 l_0_4_23) l_0_4_23))))
 (let ((?x7920 (- (+ (- (+ ?x7914 ?x6407) (* (* 2.0 l_0_4_24) l_0_4_24)) ?x6410) (* (* 2.0 l_0_4_25) l_0_4_25))))
 (let ((?x7924 (+ (- (+ (- ?x7920 ?x6417) (* 2.0 (* l_0_4_37 l_0_4_37))) ?x6420) (* 2.0 (* l_0_4_38 l_0_4_38)))))
 (let ((?x7928 (+ (- (+ (- ?x7924 ?x6423) (* 2.0 (* l_0_4_39 l_0_4_39))) ?x6426) (* 2.0 (* l_0_4_40 l_0_4_40)))))
 (let ((?x7934 (+ (+ ?x7928 (* (* 2.0 l_0_4_52) l_0_4_56)) (* (* 2.0 l_0_4_53) l_0_4_57))))
 (let ((?x7940 (+ (+ ?x7934 (* (* 2.0 l_0_4_54) l_0_4_58)) (* (* 2.0 l_0_4_55) l_0_4_59))))
 (= ?x7940 0.0))))))))))))))))
(assert
 (let ((?x7995 (* l_0_4_55 l_0_4_55)))
 (let ((?x7993 (* l_0_4_54 l_0_4_54)))
 (let ((?x7991 (* l_0_4_53 l_0_4_53)))
 (let ((?x7989 (* l_0_4_52 l_0_4_52)))
 (let ((?x6327 (* 4.0 l_0_4_40)))
 (let ((?x6328 (* ?x6327 l_0_4_40)))
 (let ((?x6324 (* 4.0 l_0_4_39)))
 (let ((?x6325 (* ?x6324 l_0_4_39)))
 (let ((?x6321 (* 4.0 l_0_4_38)))
 (let ((?x6322 (* ?x6321 l_0_4_38)))
 (let ((?x6318 (* 4.0 l_0_4_37)))
 (let ((?x6319 (* ?x6318 l_0_4_37)))
 (let ((?x6313 (* l_0_4_25 l_0_4_25)))
 (let ((?x6314 (* 4.0 ?x6313)))
 (let ((?x6310 (* l_0_4_24 l_0_4_24)))
 (let ((?x6311 (* 4.0 ?x6310)))
 (let ((?x6307 (* l_0_4_23 l_0_4_23)))
 (let ((?x6308 (* 4.0 ?x6307)))
 (let ((?x6304 (* l_0_4_22 l_0_4_22)))
 (let ((?x6305 (* 4.0 ?x6304)))
 (let ((?x7988 (- (- (- (- (+ (+ (+ ?x6305 ?x6308) ?x6311) ?x6314) ?x6319) ?x6322) ?x6325) ?x6328)))
 (= (+ (+ (+ (+ ?x7988 ?x7989) ?x7991) ?x7993) ?x7995) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (let ((?x8062 (* l_0_5_81 l_0_5_81)))
 (let ((?x8060 (* l_0_5_80 l_0_5_80)))
 (let ((?x8058 (* l_0_5_79 l_0_5_79)))
 (let ((?x8056 (* l_0_5_66 l_0_5_66)))
 (let ((?x8054 (* l_0_5_65 l_0_5_65)))
 (let ((?x8052 (* l_0_5_64 l_0_5_64)))
 (let ((?x8041 (* l_0_5_31 l_0_5_31)))
 (let ((?x8038 (* 4.0 l_0_5_31)))
 (let ((?x8039 (* ?x8038 l_0_5_34)))
 (let ((?x8040 (- (- (* (* 4.0 l_0_5_16) l_0_5_19) (* l_0_5_16 l_0_5_16)) ?x8039)))
 (let ((?x8048 (+ (+ (+ ?x8040 ?x8041) (* 1.0 (* l_0_5_4 l_0_5_4))) (* 1.0 (* l_0_5_5 l_0_5_5)))))
 (let ((?x8057 (- (- (- (+ ?x8048 (* 1.0 (* l_0_5_6 l_0_5_6))) ?x8052) ?x8054) ?x8056)))
 (= (+ (- (- (- ?x8057 ?x8058) ?x8060) ?x8062) 1.0) 0.0))))))))))))))
(assert
 (let ((?x8036 (* l_0_5_16 l_0_5_16)))
 (let ((?x8107 (* 2.0 ?x8036)))
 (let ((?x8111 (- (+ (+ (* (- 4.0) _a_2_) (* (* 2.0 l_0_5_1) l_0_5_4)) ?x8107) (* (* 2.0 l_0_5_31) l_0_5_31))))
 (let ((?x8117 (- (- ?x8111 (* (* 2.0 l_0_5_61) l_0_5_64)) (* (* 2.0 l_0_5_76) l_0_5_79))))
 (= (+ ?x8117 2.0) 0.0))))))
(assert
 (let ((?x8151 (* l_0_5_76 l_0_5_76)))
 (let ((?x8149 (* l_0_5_61 l_0_5_61)))
 (let ((?x8152 (- (- (+ (* (- 4.0) _a_3_) (* 1.0 (* l_0_5_1 l_0_5_1))) ?x8149) ?x8151)))
 (= ?x8152 0.0)))))
(assert
 (let ((?x8203 (* l_0_5_90 l_0_5_90)))
 (let ((?x8201 (* l_0_5_89 l_0_5_89)))
 (let ((?x8199 (* l_0_5_88 l_0_5_88)))
 (let ((?x8197 (* l_0_5_87 l_0_5_87)))
 (let ((?x8195 (* l_0_5_86 l_0_5_86)))
 (let ((?x8193 (* l_0_5_75 l_0_5_75)))
 (let ((?x8191 (* l_0_5_74 l_0_5_74)))
 (let ((?x8189 (* l_0_5_73 l_0_5_73)))
 (let ((?x8187 (* l_0_5_72 l_0_5_72)))
 (let ((?x8185 (* l_0_5_71 l_0_5_71)))
 (let ((?x8041 (* l_0_5_31 l_0_5_31)))
 (let ((?x8038 (* 4.0 l_0_5_31)))
 (let ((?x8182 (* ?x8038 l_0_5_41)))
 (let ((?x8036 (* l_0_5_16 l_0_5_16)))
 (let ((?x8034 (* 4.0 l_0_5_16)))
 (let ((?x8179 (* ?x8034 l_0_5_26)))
 (let ((?x8169 (+ (* 1.0 (* l_0_5_11 l_0_5_11)) (* 1.0 (* l_0_5_12 l_0_5_12)))))
 (let ((?x8175 (+ (+ ?x8169 (* 1.0 (* l_0_5_13 l_0_5_13))) (* 1.0 (* l_0_5_14 l_0_5_14)))))
 (let ((?x8183 (+ (+ (- (+ ?x8175 (* 1.0 (* l_0_5_15 l_0_5_15))) ?x8179) ?x8036) ?x8182)))
 (let ((?x8196 (- (- (- (- (- (- (- ?x8183 ?x8041) ?x8185) ?x8187) ?x8189) ?x8191) ?x8193) ?x8195)))
 (= (- (- (- (- (- ?x8196 ?x8197) ?x8199) ?x8201) ?x8203) 1.0) 0.0))))))))))))))))))))))
(assert
 (let ((?x8041 (* l_0_5_31 l_0_5_31)))
 (let ((?x8123 (* 2.0 ?x8041)))
 (let ((?x8255 (- (* (* 2.0 l_0_5_1) l_0_5_11) (* (* 2.0 l_0_5_16) l_0_5_16))))
 (let ((?x8260 (- (- (+ ?x8255 ?x8123) (* (* 2.0 l_0_5_61) l_0_5_71)) (* (* 2.0 l_0_5_76) l_0_5_86))))
 (= (+ ?x8260 2.0) 0.0))))))
(assert
 (let ((?x8038 (* 4.0 l_0_5_31)))
 (let ((?x8288 (* ?x8038 l_0_5_31)))
 (let ((?x8036 (* l_0_5_16 l_0_5_16)))
 (let ((?x8286 (* 4.0 ?x8036)))
 (let ((?x8287 (+ (- (* (* 2.0 l_0_5_1) l_0_5_2) (* l_0_5_1 l_0_5_1)) ?x8286)))
 (let ((?x8293 (- (- (- ?x8287 ?x8288) (* (* 2.0 l_0_5_61) l_0_5_62)) (* (* 2.0 l_0_5_76) l_0_5_77))))
 (= (- ?x8293 4.0) 0.0))))))))
(assert
 (let ((?x8327 (* l_0_5_46 l_0_5_46)))
 (let ((?x8038 (* 4.0 l_0_5_31)))
 (let ((?x8288 (* ?x8038 l_0_5_31)))
 (let ((?x8036 (* l_0_5_16 l_0_5_16)))
 (let ((?x8286 (* 4.0 ?x8036)))
 (let ((?x8326 (- (+ (+ (* (- 4.0) _a_4_) (* (* 2.0 l_0_5_1) l_0_5_7)) ?x8286) ?x8288)))
 (let ((?x8332 (- (- (+ ?x8326 ?x8327) (* (* 2.0 l_0_5_61) l_0_5_67)) (* (* 2.0 l_0_5_76) l_0_5_82))))
 (= ?x8332 0.0)))))))))
(assert
 (let ((?x8378 (* l_0_5_78 l_0_5_78)))
 (let ((?x8376 (* l_0_5_77 l_0_5_77)))
 (let ((?x8374 (* l_0_5_63 l_0_5_63)))
 (let ((?x8372 (* l_0_5_62 l_0_5_62)))
 (let ((?x8369 (* 8.0 l_0_5_31)))
 (let ((?x8370 (* ?x8369 l_0_5_32)))
 (let ((?x8360 (* 8.0 l_0_5_16)))
 (let ((?x8361 (* ?x8360 l_0_5_17)))
 (let ((?x8365 (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) ?x8361) (* 1.0 (* l_0_5_2 l_0_5_2)))))
 (let ((?x8375 (- (- (- (+ ?x8365 (* 1.0 (* l_0_5_3 l_0_5_3))) ?x8370) ?x8372) ?x8374)))
 (= (- (- ?x8375 ?x8376) ?x8378) 0.0))))))))))))
(assert
 (let ((?x8369 (* 8.0 l_0_5_31)))
 (let ((?x8421 (* ?x8369 l_0_5_34)))
 (let ((?x8038 (* 4.0 l_0_5_31)))
 (let ((?x8419 (* ?x8038 l_0_5_32)))
 (let ((?x8416 (* 2.0 l_0_5_3)))
 (let ((?x8417 (* ?x8416 l_0_5_5)))
 (let ((?x8413 (* 2.0 l_0_5_2)))
 (let ((?x8414 (* ?x8413 l_0_5_4)))
 (let ((?x8360 (* 8.0 l_0_5_16)))
 (let ((?x8411 (* ?x8360 l_0_5_19)))
 (let ((?x8034 (* 4.0 l_0_5_16)))
 (let ((?x8409 (* ?x8034 l_0_5_17)))
 (let ((?x8418 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x8409) ?x8411) ?x8414) ?x8417)))
 (let ((?x8428 (- (- (- (- ?x8418 ?x8419) ?x8421) (* (* 2.0 l_0_5_62) l_0_5_64)) (* (* 2.0 l_0_5_63) l_0_5_65))))
 (let ((?x8434 (- (- ?x8428 (* (* 2.0 l_0_5_77) l_0_5_79)) (* (* 2.0 l_0_5_78) l_0_5_80))))
 (= ?x8434 0.0)))))))))))))))))
(assert
 (let ((?x8369 (* 8.0 l_0_5_31)))
 (let ((?x8487 (* ?x8369 l_0_5_37)))
 (let ((?x8370 (* ?x8369 l_0_5_32)))
 (let ((?x8416 (* 2.0 l_0_5_3)))
 (let ((?x8484 (* ?x8416 l_0_5_8)))
 (let ((?x8413 (* 2.0 l_0_5_2)))
 (let ((?x8482 (* ?x8413 l_0_5_7)))
 (let ((?x8360 (* 8.0 l_0_5_16)))
 (let ((?x8480 (* ?x8360 l_0_5_22)))
 (let ((?x8483 (+ (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) (* ?x8360 l_0_5_17)) ?x8480) ?x8482)))
 (let ((?x8491 (+ (- (- (+ ?x8483 ?x8484) ?x8370) ?x8487) (* (* 2.0 l_0_5_46) l_0_5_47))))
 (let ((?x8495 (- (- ?x8491 (* (* 2.0 l_0_5_62) l_0_5_67)) (* (* 2.0 l_0_5_63) l_0_5_68))))
 (let ((?x8499 (- (- ?x8495 (* (* 2.0 l_0_5_77) l_0_5_82)) (* (* 2.0 l_0_5_78) l_0_5_83))))
 (= ?x8499 0.0)))))))))))))))
(assert
 (let ((?x8369 (* 8.0 l_0_5_31)))
 (let ((?x8560 (* ?x8369 l_0_5_41)))
 (let ((?x8038 (* 4.0 l_0_5_31)))
 (let ((?x8419 (* ?x8038 l_0_5_32)))
 (let ((?x8360 (* 8.0 l_0_5_16)))
 (let ((?x8557 (* ?x8360 l_0_5_26)))
 (let ((?x8034 (* 4.0 l_0_5_16)))
 (let ((?x8409 (* ?x8034 l_0_5_17)))
 (let ((?x8553 (* 2.0 l_0_5_12)))
 (let ((?x8554 (* ?x8553 l_0_5_3)))
 (let ((?x8552 (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) (* (* 2.0 l_0_5_11) l_0_5_2))))
 (let ((?x8563 (- (- (+ (+ (- (+ ?x8552 ?x8554) ?x8409) ?x8557) ?x8419) ?x8560) (* (* 2.0 l_0_5_62) l_0_5_71))))
 (let ((?x8567 (- (- ?x8563 (* (* 2.0 l_0_5_63) l_0_5_72)) (* (* 2.0 l_0_5_77) l_0_5_86))))
 (= (- ?x8567 (* (* 2.0 l_0_5_78) l_0_5_87)) 0.0)))))))))))))))
(assert
 (let ((?x8622 (* 4.0 l_0_5_33)))
 (let ((?x8623 (* ?x8622 l_0_5_33)))
 (let ((?x8619 (* 4.0 l_0_5_32)))
 (let ((?x8620 (* ?x8619 l_0_5_32)))
 (let ((?x8366 (* l_0_5_3 l_0_5_3)))
 (let ((?x8363 (* l_0_5_2 l_0_5_2)))
 (let ((?x8614 (* l_0_5_18 l_0_5_18)))
 (let ((?x8615 (* 4.0 ?x8614)))
 (let ((?x8612 (* l_0_5_17 l_0_5_17)))
 (let ((?x8613 (* 4.0 ?x8612)))
 (= (- (- (- (- (+ ?x8613 ?x8615) ?x8363) ?x8366) ?x8620) ?x8623) 0.0))))))))))))
(assert
 (let ((?x8663 (* 8.0 l_0_5_33)))
 (let ((?x8664 (* ?x8663 l_0_5_35)))
 (let ((?x8657 (* 8.0 l_0_5_32)))
 (let ((?x8658 (* ?x8657 l_0_5_34)))
 (let ((?x8416 (* 2.0 l_0_5_3)))
 (let ((?x8417 (* ?x8416 l_0_5_5)))
 (let ((?x8413 (* 2.0 l_0_5_2)))
 (let ((?x8414 (* ?x8413 l_0_5_4)))
 (let ((?x8614 (* l_0_5_18 l_0_5_18)))
 (let ((?x8653 (* 2.0 ?x8614)))
 (let ((?x8650 (* 8.0 l_0_5_18)))
 (let ((?x8651 (* ?x8650 l_0_5_20)))
 (let ((?x8612 (* l_0_5_17 l_0_5_17)))
 (let ((?x8648 (* 2.0 ?x8612)))
 (let ((?x8646 (* 8.0 l_0_5_17)))
 (let ((?x8647 (* ?x8646 l_0_5_19)))
 (let ((?x8662 (- (- (- (- (+ (+ (+ ?x8647 ?x8648) ?x8651) ?x8653) ?x8414) ?x8417) ?x8658) (* (* 2.0 l_0_5_32) l_0_5_32))))
 (= (- (- ?x8662 ?x8664) (* (* 2.0 l_0_5_33) l_0_5_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x8726 (* l_0_5_48 l_0_5_48)))
 (let ((?x8724 (* l_0_5_47 l_0_5_47)))
 (let ((?x8622 (* 4.0 l_0_5_33)))
 (let ((?x8623 (* ?x8622 l_0_5_33)))
 (let ((?x8663 (* 8.0 l_0_5_33)))
 (let ((?x8721 (* ?x8663 l_0_5_38)))
 (let ((?x8619 (* 4.0 l_0_5_32)))
 (let ((?x8620 (* ?x8619 l_0_5_32)))
 (let ((?x8657 (* 8.0 l_0_5_32)))
 (let ((?x8718 (* ?x8657 l_0_5_37)))
 (let ((?x8416 (* 2.0 l_0_5_3)))
 (let ((?x8484 (* ?x8416 l_0_5_8)))
 (let ((?x8413 (* 2.0 l_0_5_2)))
 (let ((?x8482 (* ?x8413 l_0_5_7)))
 (let ((?x8614 (* l_0_5_18 l_0_5_18)))
 (let ((?x8615 (* 4.0 ?x8614)))
 (let ((?x8650 (* 8.0 l_0_5_18)))
 (let ((?x8713 (* ?x8650 l_0_5_23)))
 (let ((?x8612 (* l_0_5_17 l_0_5_17)))
 (let ((?x8613 (* 4.0 ?x8612)))
 (let ((?x8646 (* 8.0 l_0_5_17)))
 (let ((?x8711 (* ?x8646 l_0_5_22)))
 (let ((?x8720 (- (- (- (- (+ (+ (+ ?x8711 ?x8613) ?x8713) ?x8615) ?x8482) ?x8484) ?x8718) ?x8620)))
 (= (+ (+ (- (- ?x8720 ?x8721) ?x8623) ?x8724) ?x8726) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x8636 (* l_0_5_33 l_0_5_33)))
 (let ((?x8700 (* 2.0 ?x8636)))
 (let ((?x8663 (* 8.0 l_0_5_33)))
 (let ((?x8778 (* ?x8663 l_0_5_42)))
 (let ((?x8630 (* l_0_5_32 l_0_5_32)))
 (let ((?x8689 (* 2.0 ?x8630)))
 (let ((?x8657 (* 8.0 l_0_5_32)))
 (let ((?x8775 (* ?x8657 l_0_5_41)))
 (let ((?x8650 (* 8.0 l_0_5_18)))
 (let ((?x8770 (* ?x8650 l_0_5_27)))
 (let ((?x8646 (* 8.0 l_0_5_17)))
 (let ((?x8765 (* ?x8646 l_0_5_26)))
 (let ((?x8553 (* 2.0 l_0_5_12)))
 (let ((?x8554 (* ?x8553 l_0_5_3)))
 (let ((?x8769 (- (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x8554) ?x8765) (* (* 2.0 l_0_5_17) l_0_5_17))))
 (let ((?x8777 (+ (- (- (+ ?x8769 ?x8770) (* (* 2.0 l_0_5_18) l_0_5_18)) ?x8775) ?x8689)))
 (= (+ (- ?x8777 ?x8778) ?x8700) 0.0))))))))))))))))))
(assert
 (let ((?x8049 (* l_0_5_6 l_0_5_6)))
 (let ((?x8046 (* l_0_5_5 l_0_5_5)))
 (let ((?x8043 (* l_0_5_4 l_0_5_4)))
 (let ((?x8845 (* 4.0 l_0_5_36)))
 (let ((?x8846 (* ?x8845 l_0_5_36)))
 (let ((?x8842 (* 4.0 l_0_5_35)))
 (let ((?x8843 (* ?x8842 l_0_5_35)))
 (let ((?x8839 (* 4.0 l_0_5_34)))
 (let ((?x8840 (* ?x8839 l_0_5_34)))
 (let ((?x8622 (* 4.0 l_0_5_33)))
 (let ((?x8837 (* ?x8622 l_0_5_35)))
 (let ((?x8619 (* 4.0 l_0_5_32)))
 (let ((?x8835 (* ?x8619 l_0_5_34)))
 (let ((?x8109 (* 2.0 l_0_5_31)))
 (let ((?x8833 (* ?x8109 l_0_5_32)))
 (let ((?x8830 (* l_0_5_21 l_0_5_21)))
 (let ((?x8831 (* 4.0 ?x8830)))
 (let ((?x8827 (* l_0_5_20 l_0_5_20)))
 (let ((?x8828 (* 4.0 ?x8827)))
 (let ((?x8824 (* l_0_5_19 l_0_5_19)))
 (let ((?x8825 (* 4.0 ?x8824)))
 (let ((?x8821 (* 4.0 l_0_5_18)))
 (let ((?x8822 (* ?x8821 l_0_5_20)))
 (let ((?x8818 (* 4.0 l_0_5_17)))
 (let ((?x8819 (* ?x8818 l_0_5_19)))
 (let ((?x8829 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_16) l_0_5_17) ?x8819) ?x8822) ?x8825) ?x8828)))
 (let ((?x8847 (- (- (- (- (- (+ (+ ?x8829 ?x8831) ?x8833) ?x8835) ?x8837) ?x8840) ?x8843) ?x8846)))
 (= (- (- (- ?x8847 ?x8043) ?x8046) ?x8049) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x8942 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x8939 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x8930 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x8926 (* 8.0 l_0_5_36)))
 (let ((?x8927 (* ?x8926 l_0_5_39)))
 (let ((?x8923 (* 8.0 l_0_5_35)))
 (let ((?x8924 (* ?x8923 l_0_5_38)))
 (let ((?x8920 (* 8.0 l_0_5_34)))
 (let ((?x8921 (* ?x8920 l_0_5_37)))
 (let ((?x8622 (* 4.0 l_0_5_33)))
 (let ((?x8918 (* ?x8622 l_0_5_38)))
 (let ((?x8663 (* 8.0 l_0_5_33)))
 (let ((?x8664 (* ?x8663 l_0_5_35)))
 (let ((?x8619 (* 4.0 l_0_5_32)))
 (let ((?x8915 (* ?x8619 l_0_5_37)))
 (let ((?x8657 (* 8.0 l_0_5_32)))
 (let ((?x8658 (* ?x8657 l_0_5_34)))
 (let ((?x8911 (* 8.0 l_0_5_21)))
 (let ((?x8912 (* ?x8911 l_0_5_24)))
 (let ((?x8908 (* 8.0 l_0_5_20)))
 (let ((?x8909 (* ?x8908 l_0_5_23)))
 (let ((?x8905 (* 8.0 l_0_5_19)))
 (let ((?x8906 (* ?x8905 l_0_5_22)))
 (let ((?x8821 (* 4.0 l_0_5_18)))
 (let ((?x8903 (* ?x8821 l_0_5_23)))
 (let ((?x8650 (* 8.0 l_0_5_18)))
 (let ((?x8651 (* ?x8650 l_0_5_20)))
 (let ((?x8818 (* 4.0 l_0_5_17)))
 (let ((?x8900 (* ?x8818 l_0_5_22)))
 (let ((?x8646 (* 8.0 l_0_5_17)))
 (let ((?x8647 (* ?x8646 l_0_5_19)))
 (let ((?x8914 (- (+ (+ (+ (+ (+ (+ ?x8647 ?x8900) ?x8651) ?x8903) ?x8906) ?x8909) ?x8912) ?x8658)))
 (let ((?x8931 (- (- (- (- (- (- (- ?x8914 ?x8915) ?x8664) ?x8918) ?x8921) ?x8924) ?x8927) ?x8930)))
 (let ((?x8937 (+ (+ ?x8931 (* (* 2.0 l_0_5_47) l_0_5_49)) (* (* 2.0 l_0_5_48) l_0_5_50))))
 (= (- (- ?x8937 ?x8939) ?x8942) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8926 (* 8.0 l_0_5_36)))
 (let ((?x9038 (* ?x8926 l_0_5_43)))
 (let ((?x8923 (* 8.0 l_0_5_35)))
 (let ((?x9036 (* ?x8923 l_0_5_42)))
 (let ((?x8920 (* 8.0 l_0_5_34)))
 (let ((?x9034 (* ?x8920 l_0_5_41)))
 (let ((?x8622 (* 4.0 l_0_5_33)))
 (let ((?x9032 (* ?x8622 l_0_5_42)))
 (let ((?x8837 (* ?x8622 l_0_5_35)))
 (let ((?x8619 (* 4.0 l_0_5_32)))
 (let ((?x9029 (* ?x8619 l_0_5_41)))
 (let ((?x8835 (* ?x8619 l_0_5_34)))
 (let ((?x8911 (* 8.0 l_0_5_21)))
 (let ((?x9026 (* ?x8911 l_0_5_28)))
 (let ((?x8908 (* 8.0 l_0_5_20)))
 (let ((?x9024 (* ?x8908 l_0_5_27)))
 (let ((?x8905 (* 8.0 l_0_5_19)))
 (let ((?x9022 (* ?x8905 l_0_5_26)))
 (let ((?x8821 (* 4.0 l_0_5_18)))
 (let ((?x9020 (* ?x8821 l_0_5_27)))
 (let ((?x8822 (* ?x8821 l_0_5_20)))
 (let ((?x8818 (* 4.0 l_0_5_17)))
 (let ((?x9017 (* ?x8818 l_0_5_26)))
 (let ((?x8819 (* ?x8818 l_0_5_19)))
 (let ((?x9013 (* 2.0 l_0_5_13)))
 (let ((?x9014 (* ?x9013 l_0_5_6)))
 (let ((?x8553 (* 2.0 l_0_5_12)))
 (let ((?x9011 (* ?x8553 l_0_5_5)))
 (let ((?x9018 (+ (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x9011) ?x9014) ?x8819) ?x9017)))
 (let ((?x9030 (- (+ (+ (+ (+ (+ (- ?x9018 ?x8822) ?x9020) ?x9022) ?x9024) ?x9026) ?x8835) ?x9029)))
 (= (- (- (- (- (+ ?x9030 ?x8837) ?x9032) ?x9034) ?x9036) ?x9038) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x9146 (* l_0_5_9 l_0_5_9)))
 (let ((?x9144 (* l_0_5_8 l_0_5_8)))
 (let ((?x9142 (* l_0_5_7 l_0_5_7)))
 (let ((?x9135 (* 4.0 l_0_5_40)))
 (let ((?x9136 (* ?x9135 l_0_5_40)))
 (let ((?x9132 (* 4.0 l_0_5_39)))
 (let ((?x9133 (* ?x9132 l_0_5_39)))
 (let ((?x9129 (* 4.0 l_0_5_38)))
 (let ((?x9130 (* ?x9129 l_0_5_38)))
 (let ((?x9126 (* 4.0 l_0_5_37)))
 (let ((?x9127 (* ?x9126 l_0_5_37)))
 (let ((?x8663 (* 8.0 l_0_5_33)))
 (let ((?x8721 (* ?x8663 l_0_5_38)))
 (let ((?x8657 (* 8.0 l_0_5_32)))
 (let ((?x8718 (* ?x8657 l_0_5_37)))
 (let ((?x9121 (* l_0_5_25 l_0_5_25)))
 (let ((?x9122 (* 4.0 ?x9121)))
 (let ((?x9118 (* l_0_5_24 l_0_5_24)))
 (let ((?x9119 (* 4.0 ?x9118)))
 (let ((?x9115 (* l_0_5_23 l_0_5_23)))
 (let ((?x9116 (* 4.0 ?x9115)))
 (let ((?x9112 (* l_0_5_22 l_0_5_22)))
 (let ((?x9113 (* 4.0 ?x9112)))
 (let ((?x8650 (* 8.0 l_0_5_18)))
 (let ((?x8713 (* ?x8650 l_0_5_23)))
 (let ((?x9111 (+ (+ (* (- l_0_5_10) l_0_5_10) (* (* 8.0 l_0_5_17) l_0_5_22)) ?x8713)))
 (let ((?x9128 (- (- (- (+ (+ (+ (+ ?x9111 ?x9113) ?x9116) ?x9119) ?x9122) ?x8718) ?x8721) ?x9127)))
 (let ((?x9139 (+ (- (- (- ?x9128 ?x9130) ?x9133) ?x9136) (* (* 2.0 l_0_5_47) l_0_5_52))))
 (let ((?x9147 (- (- (- (+ ?x9139 (* (* 2.0 l_0_5_48) l_0_5_53)) ?x9142) ?x9144) ?x9146)))
 (= ?x9147 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x9234 (* (* 8.0 l_0_5_40) l_0_5_44)))
 (let ((?x9231 (* (* 8.0 l_0_5_39) l_0_5_43)))
 (let ((?x9228 (* (* 8.0 l_0_5_38) l_0_5_42)))
 (let ((?x9225 (* (* 8.0 l_0_5_37) l_0_5_41)))
 (let ((?x8663 (* 8.0 l_0_5_33)))
 (let ((?x8778 (* ?x8663 l_0_5_42)))
 (let ((?x8622 (* 4.0 l_0_5_33)))
 (let ((?x8918 (* ?x8622 l_0_5_38)))
 (let ((?x8657 (* 8.0 l_0_5_32)))
 (let ((?x8775 (* ?x8657 l_0_5_41)))
 (let ((?x8619 (* 4.0 l_0_5_32)))
 (let ((?x8915 (* ?x8619 l_0_5_37)))
 (let ((?x9218 (* (* 8.0 l_0_5_25) l_0_5_29)))
 (let ((?x9215 (* (* 8.0 l_0_5_24) l_0_5_28)))
 (let ((?x9212 (* (* 8.0 l_0_5_23) l_0_5_27)))
 (let ((?x9209 (* (* 8.0 l_0_5_22) l_0_5_26)))
 (let ((?x8650 (* 8.0 l_0_5_18)))
 (let ((?x8770 (* ?x8650 l_0_5_27)))
 (let ((?x8821 (* 4.0 l_0_5_18)))
 (let ((?x8903 (* ?x8821 l_0_5_23)))
 (let ((?x8646 (* 8.0 l_0_5_17)))
 (let ((?x8765 (* ?x8646 l_0_5_26)))
 (let ((?x8818 (* 4.0 l_0_5_17)))
 (let ((?x8900 (* ?x8818 l_0_5_22)))
 (let ((?x9013 (* 2.0 l_0_5_13)))
 (let ((?x9202 (* ?x9013 l_0_5_9)))
 (let ((?x8553 (* 2.0 l_0_5_12)))
 (let ((?x9200 (* ?x8553 l_0_5_8)))
 (let ((?x8550 (* 2.0 l_0_5_11)))
 (let ((?x9198 (* ?x8550 l_0_5_7)))
 (let ((?x9204 (- (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x9198) ?x9200) ?x9202) ?x8900)))
 (let ((?x9219 (+ (+ (+ (+ (+ (- (+ ?x9204 ?x8765) ?x8903) ?x8770) ?x9209) ?x9212) ?x9215) ?x9218)))
 (let ((?x9232 (- (- (- (- (+ (- (+ ?x9219 ?x8915) ?x8775) ?x8918) ?x8778) ?x9225) ?x9228) ?x9231)))
 (let ((?x9239 (+ (+ (- ?x9232 ?x9234) (* (* 2.0 l_0_5_47) l_0_5_56)) (* (* 2.0 l_0_5_48) l_0_5_57))))
 (= ?x9239 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9360 (* (* 4.0 l_0_5_45) l_0_5_45)))
 (let ((?x9357 (* (* 4.0 l_0_5_44) l_0_5_44)))
 (let ((?x9354 (* (* 4.0 l_0_5_43) l_0_5_43)))
 (let ((?x9351 (* (* 4.0 l_0_5_42) l_0_5_42)))
 (let ((?x9348 (* (* 4.0 l_0_5_41) l_0_5_41)))
 (let ((?x8622 (* 4.0 l_0_5_33)))
 (let ((?x9032 (* ?x8622 l_0_5_42)))
 (let ((?x8619 (* 4.0 l_0_5_32)))
 (let ((?x9029 (* ?x8619 l_0_5_41)))
 (let ((?x8109 (* 2.0 l_0_5_31)))
 (let ((?x8833 (* ?x8109 l_0_5_32)))
 (let ((?x9341 (* l_0_5_30 l_0_5_30)))
 (let ((?x9342 (* 4.0 ?x9341)))
 (let ((?x9338 (* l_0_5_29 l_0_5_29)))
 (let ((?x9339 (* 4.0 ?x9338)))
 (let ((?x9335 (* l_0_5_28 l_0_5_28)))
 (let ((?x9336 (* 4.0 ?x9335)))
 (let ((?x9332 (* l_0_5_27 l_0_5_27)))
 (let ((?x9333 (* 4.0 ?x9332)))
 (let ((?x9329 (* l_0_5_26 l_0_5_26)))
 (let ((?x9330 (* 4.0 ?x9329)))
 (let ((?x8821 (* 4.0 l_0_5_18)))
 (let ((?x9020 (* ?x8821 l_0_5_27)))
 (let ((?x8818 (* 4.0 l_0_5_17)))
 (let ((?x9017 (* ?x8818 l_0_5_26)))
 (let ((?x8176 (* l_0_5_15 l_0_5_15)))
 (let ((?x8173 (* l_0_5_14 l_0_5_14)))
 (let ((?x8170 (* l_0_5_13 l_0_5_13)))
 (let ((?x9323 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x8170) ?x8173)))
 (let ((?x9328 (- (- (+ (- ?x9323 ?x8176) (* (* 2.0 l_0_5_16) l_0_5_17)) ?x9017) ?x9020)))
 (let ((?x9345 (+ (- (+ (+ (+ (+ (+ ?x9328 ?x9330) ?x9333) ?x9336) ?x9339) ?x9342) ?x8833) ?x9029)))
 (= (- (- (- (- (- (+ ?x9345 ?x9032) ?x9348) ?x9351) ?x9354) ?x9357) ?x9360) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x8942 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x8939 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x8930 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x8038 (* 4.0 l_0_5_31)))
 (let ((?x9428 (* ?x8038 l_0_5_37)))
 (let ((?x8369 (* 8.0 l_0_5_31)))
 (let ((?x8421 (* ?x8369 l_0_5_34)))
 (let ((?x8034 (* 4.0 l_0_5_16)))
 (let ((?x9425 (* ?x8034 l_0_5_22)))
 (let ((?x8360 (* 8.0 l_0_5_16)))
 (let ((?x8411 (* ?x8360 l_0_5_19)))
 (let ((?x9432 (+ (+ (- (- (+ ?x8411 ?x9425) ?x8421) ?x9428) ?x8930) (* (* 2.0 l_0_5_46) l_0_5_49))))
 (let ((?x9440 (- (- (+ (+ ?x9432 ?x8939) ?x8942) (* (* 2.0 l_0_5_64) l_0_5_67)) (* (* 2.0 l_0_5_65) l_0_5_68))))
 (let ((?x9446 (- (- ?x9440 (* (* 2.0 l_0_5_66) l_0_5_69)) (* (* 2.0 l_0_5_79) l_0_5_82))))
 (let ((?x9452 (- (- ?x9446 (* (* 2.0 l_0_5_80) l_0_5_83)) (* (* 2.0 l_0_5_81) l_0_5_84))))
 (= ?x9452 0.0)))))))))))))))))
(assert
 (let ((?x8038 (* 4.0 l_0_5_31)))
 (let ((?x8182 (* ?x8038 l_0_5_41)))
 (let ((?x8039 (* ?x8038 l_0_5_34)))
 (let ((?x8034 (* 4.0 l_0_5_16)))
 (let ((?x8179 (* ?x8034 l_0_5_26)))
 (let ((?x8035 (* ?x8034 l_0_5_19)))
 (let ((?x9013 (* 2.0 l_0_5_13)))
 (let ((?x9014 (* ?x9013 l_0_5_6)))
 (let ((?x8553 (* 2.0 l_0_5_12)))
 (let ((?x9011 (* ?x8553 l_0_5_5)))
 (let ((?x9507 (+ (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x9011) ?x9014) ?x8035) ?x8179)))
 (let ((?x9513 (- (- (- (+ ?x9507 ?x8039) ?x8182) (* (* 2.0 l_0_5_64) l_0_5_71)) (* (* 2.0 l_0_5_65) l_0_5_72))))
 (let ((?x9517 (- (- ?x9513 (* (* 2.0 l_0_5_66) l_0_5_73)) (* (* 2.0 l_0_5_79) l_0_5_86))))
 (let ((?x9521 (- (- ?x9517 (* (* 2.0 l_0_5_80) l_0_5_87)) (* (* 2.0 l_0_5_81) l_0_5_88))))
 (= ?x9521 0.0))))))))))))))))
(assert
 (let ((?x9593 (* l_0_5_85 l_0_5_85)))
 (let ((?x9591 (* l_0_5_84 l_0_5_84)))
 (let ((?x9589 (* l_0_5_83 l_0_5_83)))
 (let ((?x9587 (* l_0_5_82 l_0_5_82)))
 (let ((?x9583 (* l_0_5_70 l_0_5_70)))
 (let ((?x9579 (* l_0_5_69 l_0_5_69)))
 (let ((?x9577 (* l_0_5_68 l_0_5_68)))
 (let ((?x9575 (* l_0_5_67 l_0_5_67)))
 (let ((?x8369 (* 8.0 l_0_5_31)))
 (let ((?x8487 (* ?x8369 l_0_5_37)))
 (let ((?x8360 (* 8.0 l_0_5_16)))
 (let ((?x8480 (* ?x8360 l_0_5_22)))
 (let ((?x9574 (+ (- (+ (* 1.0 (* l_0_5_10 l_0_5_10)) ?x8480) ?x8487) (* (* 2.0 l_0_5_46) l_0_5_52))))
 (let ((?x9582 (+ (- (- (- ?x9574 ?x9575) ?x9577) ?x9579) (* 1.0 (* l_0_5_7 l_0_5_7)))))
 (let ((?x9590 (- (- (+ (- ?x9582 ?x9583) (* 1.0 (* l_0_5_8 l_0_5_8))) ?x9587) ?x9589)))
 (= (+ (- (- ?x9590 ?x9591) ?x9593) (* 1.0 (* l_0_5_9 l_0_5_9))) 0.0)))))))))))))))))
(assert
 (let ((?x8369 (* 8.0 l_0_5_31)))
 (let ((?x8560 (* ?x8369 l_0_5_41)))
 (let ((?x8038 (* 4.0 l_0_5_31)))
 (let ((?x9428 (* ?x8038 l_0_5_37)))
 (let ((?x8360 (* 8.0 l_0_5_16)))
 (let ((?x8557 (* ?x8360 l_0_5_26)))
 (let ((?x8034 (* 4.0 l_0_5_16)))
 (let ((?x9425 (* ?x8034 l_0_5_22)))
 (let ((?x9013 (* 2.0 l_0_5_13)))
 (let ((?x9202 (* ?x9013 l_0_5_9)))
 (let ((?x8553 (* 2.0 l_0_5_12)))
 (let ((?x9200 (* ?x8553 l_0_5_8)))
 (let ((?x8550 (* 2.0 l_0_5_11)))
 (let ((?x9198 (* ?x8550 l_0_5_7)))
 (let ((?x9637 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x9198) ?x9200) ?x9202) ?x9425)))
 (let ((?x9642 (+ (- (+ (+ ?x9637 ?x8557) ?x9428) ?x8560) (* (* 2.0 l_0_5_46) l_0_5_56))))
 (let ((?x9648 (- (- ?x9642 (* (* 2.0 l_0_5_67) l_0_5_71)) (* (* 2.0 l_0_5_68) l_0_5_72))))
 (let ((?x9654 (- (- ?x9648 (* (* 2.0 l_0_5_69) l_0_5_73)) (* (* 2.0 l_0_5_70) l_0_5_74))))
 (let ((?x9660 (- (- ?x9654 (* (* 2.0 l_0_5_82) l_0_5_86)) (* (* 2.0 l_0_5_83) l_0_5_87))))
 (let ((?x9666 (- (- ?x9660 (* (* 2.0 l_0_5_84) l_0_5_88)) (* (* 2.0 l_0_5_85) l_0_5_89))))
 (= ?x9666 0.0))))))))))))))))))))))
(assert
 (let ((?x8109 (* 2.0 l_0_5_31)))
 (let ((?x9735 (* ?x8109 l_0_5_34)))
 (let ((?x8830 (* l_0_5_21 l_0_5_21)))
 (let ((?x9733 (* 2.0 ?x8830)))
 (let ((?x8827 (* l_0_5_20 l_0_5_20)))
 (let ((?x9731 (* 2.0 ?x8827)))
 (let ((?x8824 (* l_0_5_19 l_0_5_19)))
 (let ((?x9729 (* 2.0 ?x8824)))
 (let ((?x9736 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_16) l_0_5_19) ?x9729) ?x9731) ?x9733) ?x9735)))
 (let ((?x9742 (- (- ?x9736 (* (* 2.0 l_0_5_34) l_0_5_34)) (* (* 2.0 l_0_5_35) l_0_5_35))))
 (= (- ?x9742 (* (* 2.0 l_0_5_36) l_0_5_36)) 0.0))))))))))))
(assert
 (let ((?x9800 (* l_0_5_51 l_0_5_51)))
 (let ((?x9798 (* l_0_5_50 l_0_5_50)))
 (let ((?x9796 (* l_0_5_49 l_0_5_49)))
 (let ((?x8845 (* 4.0 l_0_5_36)))
 (let ((?x8846 (* ?x8845 l_0_5_36)))
 (let ((?x9793 (* ?x8845 l_0_5_39)))
 (let ((?x8842 (* 4.0 l_0_5_35)))
 (let ((?x8843 (* ?x8842 l_0_5_35)))
 (let ((?x9790 (* ?x8842 l_0_5_38)))
 (let ((?x8839 (* 4.0 l_0_5_34)))
 (let ((?x8840 (* ?x8839 l_0_5_34)))
 (let ((?x9787 (* ?x8839 l_0_5_37)))
 (let ((?x8109 (* 2.0 l_0_5_31)))
 (let ((?x9785 (* ?x8109 l_0_5_37)))
 (let ((?x8830 (* l_0_5_21 l_0_5_21)))
 (let ((?x8831 (* 4.0 ?x8830)))
 (let ((?x9781 (* 4.0 l_0_5_21)))
 (let ((?x9782 (* ?x9781 l_0_5_24)))
 (let ((?x8827 (* l_0_5_20 l_0_5_20)))
 (let ((?x8828 (* 4.0 ?x8827)))
 (let ((?x9777 (* 4.0 l_0_5_20)))
 (let ((?x9778 (* ?x9777 l_0_5_23)))
 (let ((?x8824 (* l_0_5_19 l_0_5_19)))
 (let ((?x8825 (* 4.0 ?x8824)))
 (let ((?x9775 (+ (* (* (- 2.0) l_0_5_16) l_0_5_22) (* (* 4.0 l_0_5_19) l_0_5_22))))
 (let ((?x9788 (- (+ (+ (+ (+ (+ (+ ?x9775 ?x8825) ?x9778) ?x8828) ?x9782) ?x8831) ?x9785) ?x9787)))
 (let ((?x9799 (+ (+ (- (- (- (- (- ?x9788 ?x8840) ?x9790) ?x8843) ?x9793) ?x8846) ?x9796) ?x9798)))
 (= (+ ?x9799 ?x9800) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x8879 (* l_0_5_36 l_0_5_36)))
 (let ((?x9760 (* 2.0 ?x8879)))
 (let ((?x8845 (* 4.0 l_0_5_36)))
 (let ((?x9864 (* ?x8845 l_0_5_43)))
 (let ((?x8873 (* l_0_5_35 l_0_5_35)))
 (let ((?x9755 (* 2.0 ?x8873)))
 (let ((?x8842 (* 4.0 l_0_5_35)))
 (let ((?x9861 (* ?x8842 l_0_5_42)))
 (let ((?x8867 (* l_0_5_34 l_0_5_34)))
 (let ((?x9750 (* 2.0 ?x8867)))
 (let ((?x8839 (* 4.0 l_0_5_34)))
 (let ((?x9858 (* ?x8839 l_0_5_41)))
 (let ((?x8109 (* 2.0 l_0_5_31)))
 (let ((?x9856 (* ?x8109 l_0_5_41)))
 (let ((?x9781 (* 4.0 l_0_5_21)))
 (let ((?x9851 (* ?x9781 l_0_5_28)))
 (let ((?x9777 (* 4.0 l_0_5_20)))
 (let ((?x9846 (* ?x9777 l_0_5_27)))
 (let ((?x9773 (* 4.0 l_0_5_19)))
 (let ((?x9841 (* ?x9773 l_0_5_26)))
 (let ((?x9845 (- (+ (* (* (- 2.0) l_0_5_16) l_0_5_26) ?x9841) (* (* 2.0 l_0_5_19) l_0_5_19))))
 (let ((?x9855 (- (+ (- (+ ?x9845 ?x9846) (* (* 2.0 l_0_5_20) l_0_5_20)) ?x9851) (* (* 2.0 l_0_5_21) l_0_5_21))))
 (let ((?x9866 (+ (- (+ (- (+ (- (+ ?x9855 ?x9856) ?x9858) ?x9750) ?x9861) ?x9755) ?x9864) ?x9760)))
 (= ?x9866 0.0)))))))))))))))))))))))))
(assert
 (let ((?x8636 (* l_0_5_33 l_0_5_33)))
 (let ((?x8630 (* l_0_5_32 l_0_5_32)))
 (let ((?x9914 (+ (+ (- (* (- l_0_5_17) l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x8630) ?x8636)))
 (= ?x9914 0.0)))))
(assert
 (let ((?x8666 (* 2.0 l_0_5_33)))
 (let ((?x9930 (* ?x8666 l_0_5_35)))
 (let ((?x8660 (* 2.0 l_0_5_32)))
 (let ((?x9928 (* ?x8660 l_0_5_34)))
 (let ((?x8772 (* 2.0 l_0_5_18)))
 (let ((?x9926 (* ?x8772 l_0_5_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x9926) ?x9928) ?x9930) 0.0))))))))
(assert
 (let ((?x8666 (* 2.0 l_0_5_33)))
 (let ((?x9949 (* ?x8666 l_0_5_38)))
 (let ((?x8660 (* 2.0 l_0_5_32)))
 (let ((?x9947 (* ?x8660 l_0_5_37)))
 (let ((?x8772 (* 2.0 l_0_5_18)))
 (let ((?x9940 (* ?x8772 l_0_5_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x9940) ?x9947) ?x9949) 0.0))))))))
(assert
 (let ((?x8666 (* 2.0 l_0_5_33)))
 (let ((?x9968 (* ?x8666 l_0_5_42)))
 (let ((?x8660 (* 2.0 l_0_5_32)))
 (let ((?x9966 (* ?x8660 l_0_5_41)))
 (let ((?x8772 (* 2.0 l_0_5_18)))
 (let ((?x9959 (* ?x8772 l_0_5_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_26) ?x9959) ?x9966) ?x9968) 0.0))))))))
(assert
 (let ((?x8879 (* l_0_5_36 l_0_5_36)))
 (let ((?x8873 (* l_0_5_35 l_0_5_35)))
 (let ((?x8867 (* l_0_5_34 l_0_5_34)))
 (let ((?x8830 (* l_0_5_21 l_0_5_21)))
 (let ((?x9986 (+ (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x8830) ?x8867)))
 (= (+ (+ ?x9986 ?x8873) ?x8879) 0.0)))))))
(assert
 (let ((?x9743 (* 2.0 l_0_5_36)))
 (let ((?x10012 (* ?x9743 l_0_5_39)))
 (let ((?x9740 (* 2.0 l_0_5_35)))
 (let ((?x10010 (* ?x9740 l_0_5_38)))
 (let ((?x9737 (* 2.0 l_0_5_34)))
 (let ((?x10008 (* ?x9737 l_0_5_37)))
 (let ((?x9853 (* 2.0 l_0_5_21)))
 (let ((?x10006 (* ?x9853 l_0_5_24)))
 (let ((?x9848 (* 2.0 l_0_5_20)))
 (let ((?x10004 (* ?x9848 l_0_5_23)))
 (let ((?x10011 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x10004) ?x10006) ?x10008) ?x10010)))
 (= (+ ?x10011 ?x10012) 0.0)))))))))))))
(assert
 (let ((?x9743 (* 2.0 l_0_5_36)))
 (let ((?x10041 (* ?x9743 l_0_5_43)))
 (let ((?x9740 (* 2.0 l_0_5_35)))
 (let ((?x10039 (* ?x9740 l_0_5_42)))
 (let ((?x9737 (* 2.0 l_0_5_34)))
 (let ((?x10037 (* ?x9737 l_0_5_41)))
 (let ((?x9853 (* 2.0 l_0_5_21)))
 (let ((?x10029 (* ?x9853 l_0_5_28)))
 (let ((?x9848 (* 2.0 l_0_5_20)))
 (let ((?x10027 (* ?x9848 l_0_5_27)))
 (let ((?x10040 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_26) ?x10027) ?x10029) ?x10037) ?x10039)))
 (= (+ ?x10040 ?x10041) 0.0)))))))))))))
(assert
 (let ((?x9175 (* l_0_5_40 l_0_5_40)))
 (let ((?x9169 (* l_0_5_39 l_0_5_39)))
 (let ((?x9163 (* l_0_5_38 l_0_5_38)))
 (let ((?x9157 (* l_0_5_37 l_0_5_37)))
 (let ((?x9121 (* l_0_5_25 l_0_5_25)))
 (let ((?x9118 (* l_0_5_24 l_0_5_24)))
 (let ((?x10065 (- (- (- (* (- l_0_5_22) l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x9118) ?x9121)))
 (= (+ (+ (+ (+ ?x10065 ?x9157) ?x9163) ?x9169) ?x9175) 0.0)))))))))
(assert
 (let ((?x10107 (* 2.0 l_0_5_40)))
 (let ((?x10108 (* ?x10107 l_0_5_44)))
 (let ((?x10104 (* 2.0 l_0_5_39)))
 (let ((?x10105 (* ?x10104 l_0_5_43)))
 (let ((?x10101 (* 2.0 l_0_5_38)))
 (let ((?x10102 (* ?x10101 l_0_5_42)))
 (let ((?x10098 (* 2.0 l_0_5_37)))
 (let ((?x10099 (* ?x10098 l_0_5_41)))
 (let ((?x10095 (* 2.0 l_0_5_25)))
 (let ((?x10096 (* ?x10095 l_0_5_29)))
 (let ((?x10092 (* 2.0 l_0_5_24)))
 (let ((?x10093 (* ?x10092 l_0_5_28)))
 (let ((?x10089 (* 2.0 l_0_5_23)))
 (let ((?x10090 (* ?x10089 l_0_5_27)))
 (let ((?x10100 (+ (- (- (- (* (* (- 2.0) l_0_5_22) l_0_5_26) ?x10090) ?x10093) ?x10096) ?x10099)))
 (= (+ (+ (+ ?x10100 ?x10102) ?x10105) ?x10108) 0.0)))))))))))))))))
(assert
 (let ((?x9412 (* l_0_5_45 l_0_5_45)))
 (let ((?x9406 (* l_0_5_44 l_0_5_44)))
 (let ((?x9400 (* l_0_5_43 l_0_5_43)))
 (let ((?x9394 (* l_0_5_42 l_0_5_42)))
 (let ((?x9388 (* l_0_5_41 l_0_5_41)))
 (let ((?x8879 (* l_0_5_36 l_0_5_36)))
 (let ((?x8873 (* l_0_5_35 l_0_5_35)))
 (let ((?x8867 (* l_0_5_34 l_0_5_34)))
 (let ((?x9341 (* l_0_5_30 l_0_5_30)))
 (let ((?x9338 (* l_0_5_29 l_0_5_29)))
 (let ((?x9335 (* l_0_5_28 l_0_5_28)))
 (let ((?x9332 (* l_0_5_27 l_0_5_27)))
 (let ((?x9329 (* l_0_5_26 l_0_5_26)))
 (let ((?x8830 (* l_0_5_21 l_0_5_21)))
 (let ((?x10129 (- (+ (+ (* l_0_5_19 l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x8830) ?x9329)))
 (let ((?x10143 (- (- (- (- (- (- (- ?x10129 ?x9332) ?x9335) ?x9338) ?x9341) ?x8867) ?x8873) ?x8879)))
 (= (+ (+ (+ (+ (+ ?x10143 ?x9388) ?x9394) ?x9400) ?x9406) ?x9412) 0.0))))))))))))))))))
(assert
 (let ((?x8845 (* 4.0 l_0_5_36)))
 (let ((?x9864 (* ?x8845 l_0_5_43)))
 (let ((?x8842 (* 4.0 l_0_5_35)))
 (let ((?x9861 (* ?x8842 l_0_5_42)))
 (let ((?x8839 (* 4.0 l_0_5_34)))
 (let ((?x9858 (* ?x8839 l_0_5_41)))
 (let ((?x8109 (* 2.0 l_0_5_31)))
 (let ((?x9735 (* ?x8109 l_0_5_34)))
 (let ((?x9341 (* l_0_5_30 l_0_5_30)))
 (let ((?x10186 (* 2.0 ?x9341)))
 (let ((?x9338 (* l_0_5_29 l_0_5_29)))
 (let ((?x10184 (* 2.0 ?x9338)))
 (let ((?x9335 (* l_0_5_28 l_0_5_28)))
 (let ((?x10182 (* 2.0 ?x9335)))
 (let ((?x9332 (* l_0_5_27 l_0_5_27)))
 (let ((?x10180 (* 2.0 ?x9332)))
 (let ((?x9329 (* l_0_5_26 l_0_5_26)))
 (let ((?x10178 (* 2.0 ?x9329)))
 (let ((?x9781 (* 4.0 l_0_5_21)))
 (let ((?x9851 (* ?x9781 l_0_5_28)))
 (let ((?x9777 (* 4.0 l_0_5_20)))
 (let ((?x9846 (* ?x9777 l_0_5_27)))
 (let ((?x9773 (* 4.0 l_0_5_19)))
 (let ((?x9841 (* ?x9773 l_0_5_26)))
 (let ((?x10179 (+ (- (- (- (* (* 2.0 l_0_5_16) l_0_5_19) ?x9841) ?x9846) ?x9851) ?x10178)))
 (let ((?x10190 (+ (+ (- (+ (+ (+ (+ ?x10179 ?x10180) ?x10182) ?x10184) ?x10186) ?x9735) ?x9858) ?x9861)))
 (let ((?x10197 (- (- (+ ?x10190 ?x9864) (* (* 2.0 l_0_5_41) l_0_5_41)) (* (* 2.0 l_0_5_42) l_0_5_42))))
 (let ((?x10203 (- (- ?x10197 (* (* 2.0 l_0_5_43) l_0_5_43)) (* (* 2.0 l_0_5_44) l_0_5_44))))
 (= (- ?x10203 (* (* 2.0 l_0_5_45) l_0_5_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x10288 (* l_0_5_60 l_0_5_60)))
 (let ((?x10286 (* l_0_5_59 l_0_5_59)))
 (let ((?x10284 (* l_0_5_58 l_0_5_58)))
 (let ((?x10282 (* l_0_5_57 l_0_5_57)))
 (let ((?x10280 (* l_0_5_56 l_0_5_56)))
 (let ((?x9360 (* (* 4.0 l_0_5_45) l_0_5_45)))
 (let ((?x9357 (* (* 4.0 l_0_5_44) l_0_5_44)))
 (let ((?x9354 (* (* 4.0 l_0_5_43) l_0_5_43)))
 (let ((?x9351 (* (* 4.0 l_0_5_42) l_0_5_42)))
 (let ((?x9348 (* (* 4.0 l_0_5_41) l_0_5_41)))
 (let ((?x9135 (* 4.0 l_0_5_40)))
 (let ((?x10273 (* ?x9135 l_0_5_44)))
 (let ((?x9132 (* 4.0 l_0_5_39)))
 (let ((?x10271 (* ?x9132 l_0_5_43)))
 (let ((?x9129 (* 4.0 l_0_5_38)))
 (let ((?x10269 (* ?x9129 l_0_5_42)))
 (let ((?x9126 (* 4.0 l_0_5_37)))
 (let ((?x10267 (* ?x9126 l_0_5_41)))
 (let ((?x8109 (* 2.0 l_0_5_31)))
 (let ((?x9785 (* ?x8109 l_0_5_37)))
 (let ((?x9341 (* l_0_5_30 l_0_5_30)))
 (let ((?x9342 (* 4.0 ?x9341)))
 (let ((?x9338 (* l_0_5_29 l_0_5_29)))
 (let ((?x9339 (* 4.0 ?x9338)))
 (let ((?x9335 (* l_0_5_28 l_0_5_28)))
 (let ((?x9336 (* 4.0 ?x9335)))
 (let ((?x9332 (* l_0_5_27 l_0_5_27)))
 (let ((?x9333 (* 4.0 ?x9332)))
 (let ((?x9329 (* l_0_5_26 l_0_5_26)))
 (let ((?x9330 (* 4.0 ?x9329)))
 (let ((?x10259 (* (* 4.0 l_0_5_25) l_0_5_29)))
 (let ((?x10256 (* (* 4.0 l_0_5_24) l_0_5_28)))
 (let ((?x10253 (* (* 4.0 l_0_5_23) l_0_5_27)))
 (let ((?x10250 (* (* 4.0 l_0_5_22) l_0_5_26)))
 (let ((?x10260 (- (- (- (- (* (* 2.0 l_0_5_16) l_0_5_22) ?x10250) ?x10253) ?x10256) ?x10259)))
 (let ((?x10268 (+ (- (+ (+ (+ (+ (+ ?x10260 ?x9330) ?x9333) ?x9336) ?x9339) ?x9342) ?x9785) ?x10267)))
 (let ((?x10278 (- (- (- (- (+ (+ (+ ?x10268 ?x10269) ?x10271) ?x10273) ?x9348) ?x9351) ?x9354) ?x9357)))
 (= (+ (+ (+ (+ (+ (- ?x10278 ?x9360) ?x10280) ?x10282) ?x10284) ?x10286) ?x10288) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9412 (* l_0_5_45 l_0_5_45)))
 (let ((?x10242 (* 2.0 ?x9412)))
 (let ((?x9406 (* l_0_5_44 l_0_5_44)))
 (let ((?x10237 (* 2.0 ?x9406)))
 (let ((?x9400 (* l_0_5_43 l_0_5_43)))
 (let ((?x10232 (* 2.0 ?x9400)))
 (let ((?x9394 (* l_0_5_42 l_0_5_42)))
 (let ((?x10227 (* 2.0 ?x9394)))
 (let ((?x9388 (* l_0_5_41 l_0_5_41)))
 (let ((?x10222 (* 2.0 ?x9388)))
 (let ((?x8109 (* 2.0 l_0_5_31)))
 (let ((?x9856 (* ?x8109 l_0_5_41)))
 (let ((?x10335 (- (* (* 2.0 l_0_5_16) l_0_5_26) (* (* 2.0 l_0_5_26) l_0_5_26))))
 (let ((?x10341 (- (- ?x10335 (* (* 2.0 l_0_5_27) l_0_5_27)) (* (* 2.0 l_0_5_28) l_0_5_28))))
 (let ((?x10347 (- (- ?x10341 (* (* 2.0 l_0_5_29) l_0_5_29)) (* (* 2.0 l_0_5_30) l_0_5_30))))
 (= (+ (+ (+ (+ (+ (- ?x10347 ?x9856) ?x10222) ?x10227) ?x10232) ?x10237) ?x10242) 0.0)))))))))))))))))
(assert
 (let ((?x8636 (* l_0_5_33 l_0_5_33)))
 (let ((?x8630 (* l_0_5_32 l_0_5_32)))
 (let ((?x10382 (- (- (+ (* l_0_5_17 l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x8630) ?x8636)))
 (= ?x10382 0.0)))))
(assert
 (let ((?x8666 (* 2.0 l_0_5_33)))
 (let ((?x9930 (* ?x8666 l_0_5_35)))
 (let ((?x8660 (* 2.0 l_0_5_32)))
 (let ((?x9928 (* ?x8660 l_0_5_34)))
 (let ((?x8772 (* 2.0 l_0_5_18)))
 (let ((?x9926 (* ?x8772 l_0_5_20)))
 (= (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_19) ?x9926) ?x9928) ?x9930) 0.0))))))))
(assert
 (let ((?x8666 (* 2.0 l_0_5_33)))
 (let ((?x9949 (* ?x8666 l_0_5_38)))
 (let ((?x8660 (* 2.0 l_0_5_32)))
 (let ((?x9947 (* ?x8660 l_0_5_37)))
 (let ((?x8772 (* 2.0 l_0_5_18)))
 (let ((?x9940 (* ?x8772 l_0_5_23)))
 (= (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_22) ?x9940) ?x9947) ?x9949) 0.0))))))))
(assert
 (let ((?x8666 (* 2.0 l_0_5_33)))
 (let ((?x9968 (* ?x8666 l_0_5_42)))
 (let ((?x8660 (* 2.0 l_0_5_32)))
 (let ((?x9966 (* ?x8660 l_0_5_41)))
 (let ((?x8772 (* 2.0 l_0_5_18)))
 (let ((?x9959 (* ?x8772 l_0_5_27)))
 (= (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_26) ?x9959) ?x9966) ?x9968) 0.0))))))))
(assert
 (let ((?x9743 (* 2.0 l_0_5_36)))
 (let ((?x10012 (* ?x9743 l_0_5_39)))
 (let ((?x9740 (* 2.0 l_0_5_35)))
 (let ((?x10010 (* ?x9740 l_0_5_38)))
 (let ((?x9737 (* 2.0 l_0_5_34)))
 (let ((?x10008 (* ?x9737 l_0_5_37)))
 (let ((?x9853 (* 2.0 l_0_5_21)))
 (let ((?x10006 (* ?x9853 l_0_5_24)))
 (let ((?x9848 (* 2.0 l_0_5_20)))
 (let ((?x10004 (* ?x9848 l_0_5_23)))
 (let ((?x10430 (- (- (+ (+ (* (* 2.0 l_0_5_19) l_0_5_22) ?x10004) ?x10006) ?x10008) ?x10010)))
 (= (- ?x10430 ?x10012) 0.0)))))))))))))
(assert
 (let ((?x9743 (* 2.0 l_0_5_36)))
 (let ((?x10041 (* ?x9743 l_0_5_43)))
 (let ((?x9740 (* 2.0 l_0_5_35)))
 (let ((?x10039 (* ?x9740 l_0_5_42)))
 (let ((?x9737 (* 2.0 l_0_5_34)))
 (let ((?x10037 (* ?x9737 l_0_5_41)))
 (let ((?x9853 (* 2.0 l_0_5_21)))
 (let ((?x10029 (* ?x9853 l_0_5_28)))
 (let ((?x9848 (* 2.0 l_0_5_20)))
 (let ((?x10027 (* ?x9848 l_0_5_27)))
 (let ((?x10449 (- (- (+ (+ (* (* 2.0 l_0_5_19) l_0_5_26) ?x10027) ?x10029) ?x10037) ?x10039)))
 (= (- ?x10449 ?x10041) 0.0)))))))))))))
(assert
 (let ((?x9175 (* l_0_5_40 l_0_5_40)))
 (let ((?x9169 (* l_0_5_39 l_0_5_39)))
 (let ((?x9163 (* l_0_5_38 l_0_5_38)))
 (let ((?x9157 (* l_0_5_37 l_0_5_37)))
 (let ((?x9121 (* l_0_5_25 l_0_5_25)))
 (let ((?x9118 (* l_0_5_24 l_0_5_24)))
 (let ((?x10466 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x9118) ?x9121)))
 (= (- (- (- (- ?x10466 ?x9157) ?x9163) ?x9169) ?x9175) 0.0)))))))))
(assert
 (let ((?x10107 (* 2.0 l_0_5_40)))
 (let ((?x10108 (* ?x10107 l_0_5_44)))
 (let ((?x10104 (* 2.0 l_0_5_39)))
 (let ((?x10105 (* ?x10104 l_0_5_43)))
 (let ((?x10101 (* 2.0 l_0_5_38)))
 (let ((?x10102 (* ?x10101 l_0_5_42)))
 (let ((?x10098 (* 2.0 l_0_5_37)))
 (let ((?x10099 (* ?x10098 l_0_5_41)))
 (let ((?x10095 (* 2.0 l_0_5_25)))
 (let ((?x10096 (* ?x10095 l_0_5_29)))
 (let ((?x10092 (* 2.0 l_0_5_24)))
 (let ((?x10093 (* ?x10092 l_0_5_28)))
 (let ((?x10089 (* 2.0 l_0_5_23)))
 (let ((?x10090 (* ?x10089 l_0_5_27)))
 (let ((?x10485 (- (+ (+ (+ (* (* 2.0 l_0_5_22) l_0_5_26) ?x10090) ?x10093) ?x10096) ?x10099)))
 (= (- (- (- ?x10485 ?x10102) ?x10105) ?x10108) 0.0)))))))))))))))))
(assert
 (let ((?x9412 (* l_0_5_45 l_0_5_45)))
 (let ((?x9406 (* l_0_5_44 l_0_5_44)))
 (let ((?x9400 (* l_0_5_43 l_0_5_43)))
 (let ((?x9394 (* l_0_5_42 l_0_5_42)))
 (let ((?x9388 (* l_0_5_41 l_0_5_41)))
 (let ((?x9341 (* l_0_5_30 l_0_5_30)))
 (let ((?x9338 (* l_0_5_29 l_0_5_29)))
 (let ((?x9335 (* l_0_5_28 l_0_5_28)))
 (let ((?x10508 (+ (+ (+ (* l_0_5_26 l_0_5_26) (* l_0_5_27 l_0_5_27)) ?x9335) ?x9338)))
 (= (- (- (- (- (- (+ ?x10508 ?x9341) ?x9388) ?x9394) ?x9400) ?x9406) ?x9412) 0.0)))))))))))
(assert
 (let ((?x8926 (* 8.0 l_0_5_36)))
 (let ((?x8927 (* ?x8926 l_0_5_39)))
 (let ((?x8923 (* 8.0 l_0_5_35)))
 (let ((?x8924 (* ?x8923 l_0_5_38)))
 (let ((?x8920 (* 8.0 l_0_5_34)))
 (let ((?x8921 (* ?x8920 l_0_5_37)))
 (let ((?x9121 (* l_0_5_25 l_0_5_25)))
 (let ((?x10541 (* 2.0 ?x9121)))
 (let ((?x9118 (* l_0_5_24 l_0_5_24)))
 (let ((?x10539 (* 2.0 ?x9118)))
 (let ((?x9115 (* l_0_5_23 l_0_5_23)))
 (let ((?x10537 (* 2.0 ?x9115)))
 (let ((?x9112 (* l_0_5_22 l_0_5_22)))
 (let ((?x10535 (* 2.0 ?x9112)))
 (let ((?x8911 (* 8.0 l_0_5_21)))
 (let ((?x8912 (* ?x8911 l_0_5_24)))
 (let ((?x8908 (* 8.0 l_0_5_20)))
 (let ((?x8909 (* ?x8908 l_0_5_23)))
 (let ((?x8905 (* 8.0 l_0_5_19)))
 (let ((?x8906 (* ?x8905 l_0_5_22)))
 (let ((?x10543 (- (+ (+ (+ (+ (+ (+ ?x8906 ?x8909) ?x8912) ?x10535) ?x10537) ?x10539) ?x10541) ?x8921)))
 (let ((?x10549 (- (- (- (- ?x10543 ?x8924) ?x8927) (* (* 2.0 l_0_5_37) l_0_5_37)) (* (* 2.0 l_0_5_38) l_0_5_38))))
 (let ((?x10553 (- (- ?x10549 (* (* 2.0 l_0_5_39) l_0_5_39)) (* (* 2.0 l_0_5_40) l_0_5_40))))
 (let ((?x10559 (+ (+ ?x10553 (* (* 2.0 l_0_5_49) l_0_5_52)) (* (* 2.0 l_0_5_50) l_0_5_53))))
 (= (+ ?x10559 (* (* 2.0 l_0_5_51) l_0_5_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9135 (* 4.0 l_0_5_40)))
 (let ((?x10273 (* ?x9135 l_0_5_44)))
 (let ((?x9132 (* 4.0 l_0_5_39)))
 (let ((?x10271 (* ?x9132 l_0_5_43)))
 (let ((?x9129 (* 4.0 l_0_5_38)))
 (let ((?x10269 (* ?x9129 l_0_5_42)))
 (let ((?x9126 (* 4.0 l_0_5_37)))
 (let ((?x10267 (* ?x9126 l_0_5_41)))
 (let ((?x8926 (* 8.0 l_0_5_36)))
 (let ((?x9038 (* ?x8926 l_0_5_43)))
 (let ((?x8845 (* 4.0 l_0_5_36)))
 (let ((?x9793 (* ?x8845 l_0_5_39)))
 (let ((?x8923 (* 8.0 l_0_5_35)))
 (let ((?x9036 (* ?x8923 l_0_5_42)))
 (let ((?x8842 (* 4.0 l_0_5_35)))
 (let ((?x9790 (* ?x8842 l_0_5_38)))
 (let ((?x8920 (* 8.0 l_0_5_34)))
 (let ((?x9034 (* ?x8920 l_0_5_41)))
 (let ((?x8839 (* 4.0 l_0_5_34)))
 (let ((?x9787 (* ?x8839 l_0_5_37)))
 (let ((?x10259 (* (* 4.0 l_0_5_25) l_0_5_29)))
 (let ((?x10256 (* (* 4.0 l_0_5_24) l_0_5_28)))
 (let ((?x10253 (* (* 4.0 l_0_5_23) l_0_5_27)))
 (let ((?x10250 (* (* 4.0 l_0_5_22) l_0_5_26)))
 (let ((?x8911 (* 8.0 l_0_5_21)))
 (let ((?x9026 (* ?x8911 l_0_5_28)))
 (let ((?x9781 (* 4.0 l_0_5_21)))
 (let ((?x9782 (* ?x9781 l_0_5_24)))
 (let ((?x8908 (* 8.0 l_0_5_20)))
 (let ((?x9024 (* ?x8908 l_0_5_27)))
 (let ((?x9777 (* 4.0 l_0_5_20)))
 (let ((?x9778 (* ?x9777 l_0_5_23)))
 (let ((?x8905 (* 8.0 l_0_5_19)))
 (let ((?x9022 (* ?x8905 l_0_5_26)))
 (let ((?x10604 (- (+ (- (+ (* (* (- 4.0) l_0_5_19) l_0_5_22) ?x9022) ?x9778) ?x9024) ?x9782)))
 (let ((?x10611 (- (+ (+ (+ (+ (+ (+ ?x10604 ?x9026) ?x10250) ?x10253) ?x10256) ?x10259) ?x9787) ?x9034)))
 (let ((?x10618 (- (- (- (- (+ (- (+ ?x10611 ?x9790) ?x9036) ?x9793) ?x9038) ?x10267) ?x10269) ?x10271)))
 (let ((?x10623 (+ (+ (- ?x10618 ?x10273) (* (* 2.0 l_0_5_49) l_0_5_56)) (* (* 2.0 l_0_5_50) l_0_5_57))))
 (= (+ ?x10623 (* (* 2.0 l_0_5_51) l_0_5_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9234 (* (* 8.0 l_0_5_40) l_0_5_44)))
 (let ((?x9231 (* (* 8.0 l_0_5_39) l_0_5_43)))
 (let ((?x9228 (* (* 8.0 l_0_5_38) l_0_5_42)))
 (let ((?x9225 (* (* 8.0 l_0_5_37) l_0_5_41)))
 (let ((?x9218 (* (* 8.0 l_0_5_25) l_0_5_29)))
 (let ((?x9215 (* (* 8.0 l_0_5_24) l_0_5_28)))
 (let ((?x9212 (* (* 8.0 l_0_5_23) l_0_5_27)))
 (let ((?x9209 (* (* 8.0 l_0_5_22) l_0_5_26)))
 (let ((?x10672 (- (+ (- ?x9209 (* (* 2.0 l_0_5_22) l_0_5_22)) ?x9212) (* (* 2.0 l_0_5_23) l_0_5_23))))
 (let ((?x10678 (- (+ (- (+ ?x10672 ?x9215) (* (* 2.0 l_0_5_24) l_0_5_24)) ?x9218) (* (* 2.0 l_0_5_25) l_0_5_25))))
 (let ((?x10682 (+ (- (+ (- ?x10678 ?x9225) (* 2.0 (* l_0_5_37 l_0_5_37))) ?x9228) (* 2.0 (* l_0_5_38 l_0_5_38)))))
 (let ((?x10686 (+ (- (+ (- ?x10682 ?x9231) (* 2.0 (* l_0_5_39 l_0_5_39))) ?x9234) (* 2.0 (* l_0_5_40 l_0_5_40)))))
 (let ((?x10692 (+ (+ ?x10686 (* (* 2.0 l_0_5_52) l_0_5_56)) (* (* 2.0 l_0_5_53) l_0_5_57))))
 (let ((?x10698 (+ (+ ?x10692 (* (* 2.0 l_0_5_54) l_0_5_58)) (* (* 2.0 l_0_5_55) l_0_5_59))))
 (= ?x10698 0.0))))))))))))))))
(assert
 (let ((?x10753 (* l_0_5_55 l_0_5_55)))
 (let ((?x10751 (* l_0_5_54 l_0_5_54)))
 (let ((?x10749 (* l_0_5_53 l_0_5_53)))
 (let ((?x10747 (* l_0_5_52 l_0_5_52)))
 (let ((?x9135 (* 4.0 l_0_5_40)))
 (let ((?x9136 (* ?x9135 l_0_5_40)))
 (let ((?x9132 (* 4.0 l_0_5_39)))
 (let ((?x9133 (* ?x9132 l_0_5_39)))
 (let ((?x9129 (* 4.0 l_0_5_38)))
 (let ((?x9130 (* ?x9129 l_0_5_38)))
 (let ((?x9126 (* 4.0 l_0_5_37)))
 (let ((?x9127 (* ?x9126 l_0_5_37)))
 (let ((?x9121 (* l_0_5_25 l_0_5_25)))
 (let ((?x9122 (* 4.0 ?x9121)))
 (let ((?x9118 (* l_0_5_24 l_0_5_24)))
 (let ((?x9119 (* 4.0 ?x9118)))
 (let ((?x9115 (* l_0_5_23 l_0_5_23)))
 (let ((?x9116 (* 4.0 ?x9115)))
 (let ((?x9112 (* l_0_5_22 l_0_5_22)))
 (let ((?x9113 (* 4.0 ?x9112)))
 (let ((?x10746 (- (- (- (- (+ (+ (+ ?x9113 ?x9116) ?x9119) ?x9122) ?x9127) ?x9130) ?x9133) ?x9136)))
 (= (+ (+ (+ (+ ?x10746 ?x10747) ?x10749) ?x10751) ?x10753) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (let ((?x10804 (* 4.0 l_0_6_31)))
 (let ((?x10805 (* ?x10804 l_0_6_31)))
 (let ((?x10801 (* l_0_6_16 l_0_6_16)))
 (let ((?x10802 (* 4.0 ?x10801)))
 (let ((?x10803 (+ (- (* (* 2.0 l_0_6_1) l_0_6_2) (* l_0_6_1 l_0_6_1)) ?x10802)))
 (let ((?x10812 (- (- (- ?x10803 ?x10805) (* (* 2.0 l_0_6_61) l_0_6_62)) (* (* 2.0 l_0_6_76) l_0_6_77))))
 (= (+ (- ?x10812 (* (* 2.0 l_0_6_91) l_0_6_92)) 4.0) 0.0))))))))
(assert
 (let ((?x10801 (* l_0_6_16 l_0_6_16)))
 (let ((?x10854 (* 2.0 ?x10801)))
 (let ((?x10858 (- (+ (+ (* 4.0 _a_2_) (* (* 2.0 l_0_6_1) l_0_6_4)) ?x10854) (* (* 2.0 l_0_6_31) l_0_6_31))))
 (let ((?x10862 (- (- ?x10858 (* (* 2.0 l_0_6_61) l_0_6_64)) (* (* 2.0 l_0_6_76) l_0_6_79))))
 (= (- (- ?x10862 (* (* 2.0 l_0_6_91) l_0_6_94)) 2.0) 0.0))))))
(assert
 (let ((?x10903 (* l_0_6_91 l_0_6_91)))
 (let ((?x10901 (* l_0_6_76 l_0_6_76)))
 (let ((?x10899 (* l_0_6_61 l_0_6_61)))
 (let ((?x10902 (- (- (+ (* 4.0 _a_3_) (* 1.0 (* l_0_6_1 l_0_6_1))) ?x10899) ?x10901)))
 (= (- ?x10902 ?x10903) 0.0))))))
(assert
 (let ((?x10921 (* l_0_6_46 l_0_6_46)))
 (let ((?x10804 (* 4.0 l_0_6_31)))
 (let ((?x10805 (* ?x10804 l_0_6_31)))
 (let ((?x10801 (* l_0_6_16 l_0_6_16)))
 (let ((?x10802 (* 4.0 ?x10801)))
 (let ((?x10920 (- (+ (+ (* 4.0 _a_4_) (* (* 2.0 l_0_6_1) l_0_6_7)) ?x10802) ?x10805)))
 (let ((?x10926 (- (- (+ ?x10920 ?x10921) (* (* 2.0 l_0_6_61) l_0_6_67)) (* (* 2.0 l_0_6_76) l_0_6_82))))
 (= (- ?x10926 (* (* 2.0 l_0_6_91) l_0_6_97)) 0.0)))))))))
(assert
 (let ((?x10986 (* l_0_6_96 l_0_6_96)))
 (let ((?x10984 (* l_0_6_95 l_0_6_95)))
 (let ((?x10982 (* l_0_6_94 l_0_6_94)))
 (let ((?x10980 (* l_0_6_81 l_0_6_81)))
 (let ((?x10978 (* l_0_6_80 l_0_6_80)))
 (let ((?x10976 (* l_0_6_79 l_0_6_79)))
 (let ((?x10974 (* l_0_6_66 l_0_6_66)))
 (let ((?x10972 (* l_0_6_65 l_0_6_65)))
 (let ((?x10970 (* l_0_6_64 l_0_6_64)))
 (let ((?x10824 (* l_0_6_31 l_0_6_31)))
 (let ((?x10804 (* 4.0 l_0_6_31)))
 (let ((?x10958 (* ?x10804 l_0_6_34)))
 (let ((?x10959 (- (- (* (* 4.0 l_0_6_16) l_0_6_19) (* l_0_6_16 l_0_6_16)) ?x10958)))
 (let ((?x10966 (+ (+ (+ ?x10959 ?x10824) (* 1.0 (* l_0_6_4 l_0_6_4))) (* 1.0 (* l_0_6_5 l_0_6_5)))))
 (let ((?x10975 (- (- (- (+ ?x10966 (* 1.0 (* l_0_6_6 l_0_6_6))) ?x10970) ?x10972) ?x10974)))
 (let ((?x10988 (- (- (- (- (- (- (- ?x10975 ?x10976) ?x10978) ?x10980) ?x10982) ?x10984) ?x10986) 1.0)))
 (= ?x10988 0.0))))))))))))))))))
(assert
 (let ((?x11087 (* l_0_6_90 l_0_6_90)))
 (let ((?x11085 (* l_0_6_89 l_0_6_89)))
 (let ((?x11083 (* l_0_6_88 l_0_6_88)))
 (let ((?x11081 (* l_0_6_87 l_0_6_87)))
 (let ((?x11079 (* l_0_6_86 l_0_6_86)))
 (let ((?x11077 (* l_0_6_75 l_0_6_75)))
 (let ((?x11075 (* l_0_6_74 l_0_6_74)))
 (let ((?x11073 (* l_0_6_73 l_0_6_73)))
 (let ((?x11071 (* l_0_6_72 l_0_6_72)))
 (let ((?x11069 (* l_0_6_71 l_0_6_71)))
 (let ((?x10824 (* l_0_6_31 l_0_6_31)))
 (let ((?x10804 (* 4.0 l_0_6_31)))
 (let ((?x11066 (* ?x10804 l_0_6_41)))
 (let ((?x10801 (* l_0_6_16 l_0_6_16)))
 (let ((?x10955 (* 4.0 l_0_6_16)))
 (let ((?x11063 (* ?x10955 l_0_6_26)))
 (let ((?x11046 (* l_0_6_105 l_0_6_105)))
 (let ((?x11044 (* l_0_6_104 l_0_6_104)))
 (let ((?x11042 (* l_0_6_103 l_0_6_103)))
 (let ((?x11043 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x11042)))
 (let ((?x11053 (+ (+ (- (- ?x11043 ?x11044) ?x11046) (* 1.0 (* l_0_6_11 l_0_6_11))) (* 1.0 (* l_0_6_12 l_0_6_12)))))
 (let ((?x11059 (+ (+ ?x11053 (* 1.0 (* l_0_6_13 l_0_6_13))) (* 1.0 (* l_0_6_14 l_0_6_14)))))
 (let ((?x11067 (+ (+ (- (+ ?x11059 (* 1.0 (* l_0_6_15 l_0_6_15))) ?x11063) ?x10801) ?x11066)))
 (let ((?x11080 (- (- (- (- (- (- (- ?x11067 ?x10824) ?x11069) ?x11071) ?x11073) ?x11075) ?x11077) ?x11079)))
 (= (+ (- (- (- (- ?x11080 ?x11081) ?x11083) ?x11085) ?x11087) 1.0) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x11114 (- (* (* 2.0 l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_101) l_0_6_91))))
 (let ((?x11118 (+ (- ?x11114 (* (* 2.0 l_0_6_16) l_0_6_16)) (* 2.0 (* l_0_6_31 l_0_6_31)))))
 (let ((?x11122 (- (- ?x11118 (* (* 2.0 l_0_6_61) l_0_6_71)) (* (* 2.0 l_0_6_76) l_0_6_86))))
 (= (- ?x11122 2.0) 0.0)))))
(assert
 (let ((?x11161 (* l_0_6_93 l_0_6_93)))
 (let ((?x11159 (* l_0_6_92 l_0_6_92)))
 (let ((?x11157 (* l_0_6_78 l_0_6_78)))
 (let ((?x11155 (* l_0_6_77 l_0_6_77)))
 (let ((?x11153 (* l_0_6_63 l_0_6_63)))
 (let ((?x11151 (* l_0_6_62 l_0_6_62)))
 (let ((?x11148 (* 8.0 l_0_6_31)))
 (let ((?x11149 (* ?x11148 l_0_6_32)))
 (let ((?x1753 (* 8.0 l_0_6_16)))
 (let ((?x1754 (* ?x1753 l_0_6_17)))
 (let ((?x11144 (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) ?x1754) (* 1.0 (* l_0_6_2 l_0_6_2)))))
 (let ((?x11154 (- (- (- (+ ?x11144 (* 1.0 (* l_0_6_3 l_0_6_3))) ?x11149) ?x11151) ?x11153)))
 (= (- (- (- (- ?x11154 ?x11155) ?x11157) ?x11159) ?x11161) 0.0))))))))))))))
(assert
 (let ((?x11148 (* 8.0 l_0_6_31)))
 (let ((?x11190 (* ?x11148 l_0_6_34)))
 (let ((?x10804 (* 4.0 l_0_6_31)))
 (let ((?x11188 (* ?x10804 l_0_6_32)))
 (let ((?x11185 (* 2.0 l_0_6_3)))
 (let ((?x11186 (* ?x11185 l_0_6_5)))
 (let ((?x11182 (* 2.0 l_0_6_2)))
 (let ((?x11183 (* ?x11182 l_0_6_4)))
 (let ((?x1753 (* 8.0 l_0_6_16)))
 (let ((?x11180 (* ?x1753 l_0_6_19)))
 (let ((?x10955 (* 4.0 l_0_6_16)))
 (let ((?x11178 (* ?x10955 l_0_6_17)))
 (let ((?x11187 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x11178) ?x11180) ?x11183) ?x11186)))
 (let ((?x11197 (- (- (- (- ?x11187 ?x11188) ?x11190) (* (* 2.0 l_0_6_62) l_0_6_64)) (* (* 2.0 l_0_6_63) l_0_6_65))))
 (let ((?x11203 (- (- ?x11197 (* (* 2.0 l_0_6_77) l_0_6_79)) (* (* 2.0 l_0_6_78) l_0_6_80))))
 (let ((?x11209 (- (- ?x11203 (* (* 2.0 l_0_6_92) l_0_6_94)) (* (* 2.0 l_0_6_93) l_0_6_95))))
 (= ?x11209 0.0))))))))))))))))))
(assert
 (let ((?x11148 (* 8.0 l_0_6_31)))
 (let ((?x11242 (* ?x11148 l_0_6_37)))
 (let ((?x11149 (* ?x11148 l_0_6_32)))
 (let ((?x11185 (* 2.0 l_0_6_3)))
 (let ((?x11239 (* ?x11185 l_0_6_8)))
 (let ((?x11182 (* 2.0 l_0_6_2)))
 (let ((?x11237 (* ?x11182 l_0_6_7)))
 (let ((?x1753 (* 8.0 l_0_6_16)))
 (let ((?x1897 (* ?x1753 l_0_6_22)))
 (let ((?x11238 (+ (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) (* ?x1753 l_0_6_17)) ?x1897) ?x11237)))
 (let ((?x11246 (+ (- (- (+ ?x11238 ?x11239) ?x11149) ?x11242) (* (* 2.0 l_0_6_46) l_0_6_47))))
 (let ((?x11250 (- (- ?x11246 (* (* 2.0 l_0_6_62) l_0_6_67)) (* (* 2.0 l_0_6_63) l_0_6_68))))
 (let ((?x11254 (- (- ?x11250 (* (* 2.0 l_0_6_77) l_0_6_82)) (* (* 2.0 l_0_6_78) l_0_6_83))))
 (let ((?x11258 (- (- ?x11254 (* (* 2.0 l_0_6_92) l_0_6_97)) (* (* 2.0 l_0_6_93) l_0_6_98))))
 (= ?x11258 0.0))))))))))))))))
(assert
 (let ((?x11148 (* 8.0 l_0_6_31)))
 (let ((?x11313 (* ?x11148 l_0_6_41)))
 (let ((?x10804 (* 4.0 l_0_6_31)))
 (let ((?x11188 (* ?x10804 l_0_6_32)))
 (let ((?x1753 (* 8.0 l_0_6_16)))
 (let ((?x11310 (* ?x1753 l_0_6_26)))
 (let ((?x10955 (* 4.0 l_0_6_16)))
 (let ((?x11178 (* ?x10955 l_0_6_17)))
 (let ((?x11306 (* 2.0 l_0_6_12)))
 (let ((?x11307 (* ?x11306 l_0_6_3)))
 (let ((?x11299 (- (* (* (- 2.0) l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x11305 (+ (- ?x11299 (* (* 2.0 l_0_6_102) l_0_6_93)) (* (* 2.0 l_0_6_11) l_0_6_2))))
 (let ((?x11316 (- (- (+ (+ (- (+ ?x11305 ?x11307) ?x11178) ?x11310) ?x11188) ?x11313) (* (* 2.0 l_0_6_62) l_0_6_71))))
 (let ((?x11320 (- (- ?x11316 (* (* 2.0 l_0_6_63) l_0_6_72)) (* (* 2.0 l_0_6_77) l_0_6_86))))
 (= (- ?x11320 (* (* 2.0 l_0_6_78) l_0_6_87)) 0.0))))))))))))))))
(assert
 (let ((?x11357 (* 4.0 l_0_6_33)))
 (let ((?x11358 (* ?x11357 l_0_6_33)))
 (let ((?x11354 (* 4.0 l_0_6_32)))
 (let ((?x11355 (* ?x11354 l_0_6_32)))
 (let ((?x11145 (* l_0_6_3 l_0_6_3)))
 (let ((?x1751 (* l_0_6_2 l_0_6_2)))
 (let ((?x11349 (* l_0_6_18 l_0_6_18)))
 (let ((?x11350 (* 4.0 ?x11349)))
 (let ((?x2098 (* l_0_6_17 l_0_6_17)))
 (let ((?x11348 (* 4.0 ?x2098)))
 (= (- (- (- (- (+ ?x11348 ?x11350) ?x1751) ?x11145) ?x11355) ?x11358) 0.0))))))))))))
(assert
 (let ((?x11377 (* 8.0 l_0_6_33)))
 (let ((?x11378 (* ?x11377 l_0_6_35)))
 (let ((?x11371 (* 8.0 l_0_6_32)))
 (let ((?x11372 (* ?x11371 l_0_6_34)))
 (let ((?x11185 (* 2.0 l_0_6_3)))
 (let ((?x11186 (* ?x11185 l_0_6_5)))
 (let ((?x11182 (* 2.0 l_0_6_2)))
 (let ((?x11183 (* ?x11182 l_0_6_4)))
 (let ((?x11349 (* l_0_6_18 l_0_6_18)))
 (let ((?x2123 (* 2.0 ?x11349)))
 (let ((?x2125 (* 8.0 l_0_6_18)))
 (let ((?x2120 (* ?x2125 l_0_6_20)))
 (let ((?x2098 (* l_0_6_17 l_0_6_17)))
 (let ((?x2105 (* 2.0 ?x2098)))
 (let ((?x2093 (* 8.0 l_0_6_17)))
 (let ((?x2099 (* ?x2093 l_0_6_19)))
 (let ((?x11376 (- (- (- (- (+ (+ (+ ?x2099 ?x2105) ?x2120) ?x2123) ?x11183) ?x11186) ?x11372) (* (* 2.0 l_0_6_32) l_0_6_32))))
 (= (- (- ?x11376 ?x11378) (* (* 2.0 l_0_6_33) l_0_6_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x11413 (* l_0_6_48 l_0_6_48)))
 (let ((?x11411 (* l_0_6_47 l_0_6_47)))
 (let ((?x11357 (* 4.0 l_0_6_33)))
 (let ((?x11358 (* ?x11357 l_0_6_33)))
 (let ((?x11377 (* 8.0 l_0_6_33)))
 (let ((?x11408 (* ?x11377 l_0_6_38)))
 (let ((?x11354 (* 4.0 l_0_6_32)))
 (let ((?x11355 (* ?x11354 l_0_6_32)))
 (let ((?x11371 (* 8.0 l_0_6_32)))
 (let ((?x11405 (* ?x11371 l_0_6_37)))
 (let ((?x11185 (* 2.0 l_0_6_3)))
 (let ((?x11239 (* ?x11185 l_0_6_8)))
 (let ((?x11182 (* 2.0 l_0_6_2)))
 (let ((?x11237 (* ?x11182 l_0_6_7)))
 (let ((?x11349 (* l_0_6_18 l_0_6_18)))
 (let ((?x11350 (* 4.0 ?x11349)))
 (let ((?x2125 (* 8.0 l_0_6_18)))
 (let ((?x11400 (* ?x2125 l_0_6_23)))
 (let ((?x2098 (* l_0_6_17 l_0_6_17)))
 (let ((?x11348 (* 4.0 ?x2098)))
 (let ((?x2093 (* 8.0 l_0_6_17)))
 (let ((?x2192 (* ?x2093 l_0_6_22)))
 (let ((?x11407 (- (- (- (- (+ (+ (+ ?x2192 ?x11348) ?x11400) ?x11350) ?x11237) ?x11239) ?x11405) ?x11355)))
 (= (+ (+ (- (- ?x11407 ?x11408) ?x11358) ?x11411) ?x11413) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x11377 (* 8.0 l_0_6_33)))
 (let ((?x11430 (* ?x11377 l_0_6_42)))
 (let ((?x11371 (* 8.0 l_0_6_32)))
 (let ((?x11427 (* ?x11371 l_0_6_41)))
 (let ((?x2125 (* 8.0 l_0_6_18)))
 (let ((?x11422 (* ?x2125 l_0_6_27)))
 (let ((?x2093 (* 8.0 l_0_6_17)))
 (let ((?x2245 (* ?x2093 l_0_6_26)))
 (let ((?x11306 (* 2.0 l_0_6_12)))
 (let ((?x11307 (* ?x11306 l_0_6_3)))
 (let ((?x11421 (- (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x11307) ?x2245) (* (* 2.0 l_0_6_17) l_0_6_17))))
 (let ((?x11429 (+ (- (- (+ ?x11421 ?x11422) (* (* 2.0 l_0_6_18) l_0_6_18)) ?x11427) (* 2.0 (* l_0_6_32 l_0_6_32)))))
 (= (+ (- ?x11429 ?x11430) (* 2.0 (* l_0_6_33 l_0_6_33))) 0.0))))))))))))))
(assert
 (let ((?x10967 (* l_0_6_6 l_0_6_6)))
 (let ((?x10964 (* l_0_6_5 l_0_6_5)))
 (let ((?x10961 (* l_0_6_4 l_0_6_4)))
 (let ((?x11490 (* 4.0 l_0_6_36)))
 (let ((?x11491 (* ?x11490 l_0_6_36)))
 (let ((?x11487 (* 4.0 l_0_6_35)))
 (let ((?x11488 (* ?x11487 l_0_6_35)))
 (let ((?x11484 (* 4.0 l_0_6_34)))
 (let ((?x11485 (* ?x11484 l_0_6_34)))
 (let ((?x11357 (* 4.0 l_0_6_33)))
 (let ((?x11482 (* ?x11357 l_0_6_35)))
 (let ((?x11354 (* 4.0 l_0_6_32)))
 (let ((?x11480 (* ?x11354 l_0_6_34)))
 (let ((?x10856 (* 2.0 l_0_6_31)))
 (let ((?x11478 (* ?x10856 l_0_6_32)))
 (let ((?x11475 (* l_0_6_21 l_0_6_21)))
 (let ((?x11476 (* 4.0 ?x11475)))
 (let ((?x11472 (* l_0_6_20 l_0_6_20)))
 (let ((?x11473 (* 4.0 ?x11472)))
 (let ((?x11469 (* l_0_6_19 l_0_6_19)))
 (let ((?x11470 (* 4.0 ?x11469)))
 (let ((?x11466 (* 4.0 l_0_6_18)))
 (let ((?x11467 (* ?x11466 l_0_6_20)))
 (let ((?x11463 (* 4.0 l_0_6_17)))
 (let ((?x11464 (* ?x11463 l_0_6_19)))
 (let ((?x11474 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_16) l_0_6_17) ?x11464) ?x11467) ?x11470) ?x11473)))
 (let ((?x11492 (- (- (- (- (- (+ (+ ?x11474 ?x11476) ?x11478) ?x11480) ?x11482) ?x11485) ?x11488) ?x11491)))
 (= (- (- (- ?x11492 ?x10961) ?x10964) ?x10967) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x11546 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11543 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11534 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x11530 (* 8.0 l_0_6_36)))
 (let ((?x11531 (* ?x11530 l_0_6_39)))
 (let ((?x11527 (* 8.0 l_0_6_35)))
 (let ((?x11528 (* ?x11527 l_0_6_38)))
 (let ((?x11524 (* 8.0 l_0_6_34)))
 (let ((?x11525 (* ?x11524 l_0_6_37)))
 (let ((?x11357 (* 4.0 l_0_6_33)))
 (let ((?x11522 (* ?x11357 l_0_6_38)))
 (let ((?x11377 (* 8.0 l_0_6_33)))
 (let ((?x11378 (* ?x11377 l_0_6_35)))
 (let ((?x11354 (* 4.0 l_0_6_32)))
 (let ((?x11519 (* ?x11354 l_0_6_37)))
 (let ((?x11371 (* 8.0 l_0_6_32)))
 (let ((?x11372 (* ?x11371 l_0_6_34)))
 (let ((?x11515 (* 8.0 l_0_6_21)))
 (let ((?x11516 (* ?x11515 l_0_6_24)))
 (let ((?x2376 (* 8.0 l_0_6_20)))
 (let ((?x2377 (* ?x2376 l_0_6_23)))
 (let ((?x2386 (* 8.0 l_0_6_19)))
 (let ((?x2388 (* ?x2386 l_0_6_22)))
 (let ((?x11466 (* 4.0 l_0_6_18)))
 (let ((?x2387 (* ?x11466 l_0_6_23)))
 (let ((?x2125 (* 8.0 l_0_6_18)))
 (let ((?x2120 (* ?x2125 l_0_6_20)))
 (let ((?x11463 (* 4.0 l_0_6_17)))
 (let ((?x2374 (* ?x11463 l_0_6_22)))
 (let ((?x2093 (* 8.0 l_0_6_17)))
 (let ((?x2099 (* ?x2093 l_0_6_19)))
 (let ((?x11518 (- (+ (+ (+ (+ (+ (+ ?x2099 ?x2374) ?x2120) ?x2387) ?x2388) ?x2377) ?x11516) ?x11372)))
 (let ((?x11535 (- (- (- (- (- (- (- ?x11518 ?x11519) ?x11378) ?x11522) ?x11525) ?x11528) ?x11531) ?x11534)))
 (let ((?x11541 (+ (+ ?x11535 (* (* 2.0 l_0_6_47) l_0_6_49)) (* (* 2.0 l_0_6_48) l_0_6_50))))
 (= (- (- ?x11541 ?x11543) ?x11546) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11530 (* 8.0 l_0_6_36)))
 (let ((?x11616 (* ?x11530 l_0_6_43)))
 (let ((?x11527 (* 8.0 l_0_6_35)))
 (let ((?x11614 (* ?x11527 l_0_6_42)))
 (let ((?x11524 (* 8.0 l_0_6_34)))
 (let ((?x11612 (* ?x11524 l_0_6_41)))
 (let ((?x11357 (* 4.0 l_0_6_33)))
 (let ((?x11610 (* ?x11357 l_0_6_42)))
 (let ((?x11482 (* ?x11357 l_0_6_35)))
 (let ((?x11354 (* 4.0 l_0_6_32)))
 (let ((?x11607 (* ?x11354 l_0_6_41)))
 (let ((?x11480 (* ?x11354 l_0_6_34)))
 (let ((?x11515 (* 8.0 l_0_6_21)))
 (let ((?x11604 (* ?x11515 l_0_6_28)))
 (let ((?x2376 (* 8.0 l_0_6_20)))
 (let ((?x11602 (* ?x2376 l_0_6_27)))
 (let ((?x2386 (* 8.0 l_0_6_19)))
 (let ((?x11600 (* ?x2386 l_0_6_26)))
 (let ((?x11466 (* 4.0 l_0_6_18)))
 (let ((?x11598 (* ?x11466 l_0_6_27)))
 (let ((?x11467 (* ?x11466 l_0_6_20)))
 (let ((?x11463 (* 4.0 l_0_6_17)))
 (let ((?x11595 (* ?x11463 l_0_6_26)))
 (let ((?x11464 (* ?x11463 l_0_6_19)))
 (let ((?x11591 (* 2.0 l_0_6_13)))
 (let ((?x11592 (* ?x11591 l_0_6_6)))
 (let ((?x11306 (* 2.0 l_0_6_12)))
 (let ((?x11589 (* ?x11306 l_0_6_5)))
 (let ((?x11596 (+ (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x11589) ?x11592) ?x11464) ?x11595)))
 (let ((?x11608 (- (+ (+ (+ (+ (+ (- ?x11596 ?x11467) ?x11598) ?x11600) ?x11602) ?x11604) ?x11480) ?x11607)))
 (= (- (- (- (- (+ ?x11608 ?x11482) ?x11610) ?x11612) ?x11614) ?x11616) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x11685 (* l_0_6_9 l_0_6_9)))
 (let ((?x11683 (* l_0_6_8 l_0_6_8)))
 (let ((?x11681 (* l_0_6_7 l_0_6_7)))
 (let ((?x11674 (* 4.0 l_0_6_40)))
 (let ((?x11675 (* ?x11674 l_0_6_40)))
 (let ((?x11671 (* 4.0 l_0_6_39)))
 (let ((?x11672 (* ?x11671 l_0_6_39)))
 (let ((?x11668 (* 4.0 l_0_6_38)))
 (let ((?x11669 (* ?x11668 l_0_6_38)))
 (let ((?x11665 (* 4.0 l_0_6_37)))
 (let ((?x11666 (* ?x11665 l_0_6_37)))
 (let ((?x11377 (* 8.0 l_0_6_33)))
 (let ((?x11408 (* ?x11377 l_0_6_38)))
 (let ((?x11371 (* 8.0 l_0_6_32)))
 (let ((?x11405 (* ?x11371 l_0_6_37)))
 (let ((?x11660 (* l_0_6_25 l_0_6_25)))
 (let ((?x11661 (* 4.0 ?x11660)))
 (let ((?x11657 (* l_0_6_24 l_0_6_24)))
 (let ((?x11658 (* 4.0 ?x11657)))
 (let ((?x11654 (* l_0_6_23 l_0_6_23)))
 (let ((?x11655 (* 4.0 ?x11654)))
 (let ((?x11651 (* l_0_6_22 l_0_6_22)))
 (let ((?x11652 (* 4.0 ?x11651)))
 (let ((?x2125 (* 8.0 l_0_6_18)))
 (let ((?x11400 (* ?x2125 l_0_6_23)))
 (let ((?x11650 (+ (+ (* (- l_0_6_10) l_0_6_10) (* (* 8.0 l_0_6_17) l_0_6_22)) ?x11400)))
 (let ((?x11667 (- (- (- (+ (+ (+ (+ ?x11650 ?x11652) ?x11655) ?x11658) ?x11661) ?x11405) ?x11408) ?x11666)))
 (let ((?x11678 (+ (- (- (- ?x11667 ?x11669) ?x11672) ?x11675) (* (* 2.0 l_0_6_47) l_0_6_52))))
 (let ((?x11686 (- (- (- (+ ?x11678 (* (* 2.0 l_0_6_48) l_0_6_53)) ?x11681) ?x11683) ?x11685)))
 (= ?x11686 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x11734 (* (* 8.0 l_0_6_40) l_0_6_44)))
 (let ((?x11731 (* (* 8.0 l_0_6_39) l_0_6_43)))
 (let ((?x11728 (* (* 8.0 l_0_6_38) l_0_6_42)))
 (let ((?x11725 (* (* 8.0 l_0_6_37) l_0_6_41)))
 (let ((?x11377 (* 8.0 l_0_6_33)))
 (let ((?x11430 (* ?x11377 l_0_6_42)))
 (let ((?x11357 (* 4.0 l_0_6_33)))
 (let ((?x11522 (* ?x11357 l_0_6_38)))
 (let ((?x11371 (* 8.0 l_0_6_32)))
 (let ((?x11427 (* ?x11371 l_0_6_41)))
 (let ((?x11354 (* 4.0 l_0_6_32)))
 (let ((?x11519 (* ?x11354 l_0_6_37)))
 (let ((?x11718 (* (* 8.0 l_0_6_25) l_0_6_29)))
 (let ((?x11715 (* (* 8.0 l_0_6_24) l_0_6_28)))
 (let ((?x11712 (* (* 8.0 l_0_6_23) l_0_6_27)))
 (let ((?x11709 (* (* 8.0 l_0_6_22) l_0_6_26)))
 (let ((?x2125 (* 8.0 l_0_6_18)))
 (let ((?x11422 (* ?x2125 l_0_6_27)))
 (let ((?x11466 (* 4.0 l_0_6_18)))
 (let ((?x2387 (* ?x11466 l_0_6_23)))
 (let ((?x2093 (* 8.0 l_0_6_17)))
 (let ((?x2245 (* ?x2093 l_0_6_26)))
 (let ((?x11463 (* 4.0 l_0_6_17)))
 (let ((?x2374 (* ?x11463 l_0_6_22)))
 (let ((?x11591 (* 2.0 l_0_6_13)))
 (let ((?x11702 (* ?x11591 l_0_6_9)))
 (let ((?x11306 (* 2.0 l_0_6_12)))
 (let ((?x11700 (* ?x11306 l_0_6_8)))
 (let ((?x11303 (* 2.0 l_0_6_11)))
 (let ((?x11698 (* ?x11303 l_0_6_7)))
 (let ((?x11704 (- (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x11698) ?x11700) ?x11702) ?x2374)))
 (let ((?x11719 (+ (+ (+ (+ (+ (- (+ ?x11704 ?x2245) ?x2387) ?x11422) ?x11709) ?x11712) ?x11715) ?x11718)))
 (let ((?x11732 (- (- (- (- (+ (- (+ ?x11719 ?x11519) ?x11427) ?x11522) ?x11430) ?x11725) ?x11728) ?x11731)))
 (let ((?x11739 (+ (+ (- ?x11732 ?x11734) (* (* 2.0 l_0_6_47) l_0_6_56)) (* (* 2.0 l_0_6_48) l_0_6_57))))
 (= ?x11739 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11798 (* (* 4.0 l_0_6_45) l_0_6_45)))
 (let ((?x11795 (* (* 4.0 l_0_6_44) l_0_6_44)))
 (let ((?x11792 (* (* 4.0 l_0_6_43) l_0_6_43)))
 (let ((?x11789 (* (* 4.0 l_0_6_42) l_0_6_42)))
 (let ((?x11786 (* (* 4.0 l_0_6_41) l_0_6_41)))
 (let ((?x11357 (* 4.0 l_0_6_33)))
 (let ((?x11610 (* ?x11357 l_0_6_42)))
 (let ((?x11354 (* 4.0 l_0_6_32)))
 (let ((?x11607 (* ?x11354 l_0_6_41)))
 (let ((?x10856 (* 2.0 l_0_6_31)))
 (let ((?x11478 (* ?x10856 l_0_6_32)))
 (let ((?x11779 (* l_0_6_30 l_0_6_30)))
 (let ((?x11780 (* 4.0 ?x11779)))
 (let ((?x11776 (* l_0_6_29 l_0_6_29)))
 (let ((?x11777 (* 4.0 ?x11776)))
 (let ((?x11773 (* l_0_6_28 l_0_6_28)))
 (let ((?x11774 (* 4.0 ?x11773)))
 (let ((?x11770 (* l_0_6_27 l_0_6_27)))
 (let ((?x11771 (* 4.0 ?x11770)))
 (let ((?x11767 (* l_0_6_26 l_0_6_26)))
 (let ((?x11768 (* 4.0 ?x11767)))
 (let ((?x11466 (* 4.0 l_0_6_18)))
 (let ((?x11598 (* ?x11466 l_0_6_27)))
 (let ((?x11463 (* 4.0 l_0_6_17)))
 (let ((?x11595 (* ?x11463 l_0_6_26)))
 (let ((?x11060 (* l_0_6_15 l_0_6_15)))
 (let ((?x11057 (* l_0_6_14 l_0_6_14)))
 (let ((?x11054 (* l_0_6_13 l_0_6_13)))
 (let ((?x11761 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x11054) ?x11057)))
 (let ((?x11766 (- (- (+ (- ?x11761 ?x11060) (* (* 2.0 l_0_6_16) l_0_6_17)) ?x11595) ?x11598)))
 (let ((?x11783 (+ (- (+ (+ (+ (+ (+ ?x11766 ?x11768) ?x11771) ?x11774) ?x11777) ?x11780) ?x11478) ?x11607)))
 (= (- (- (- (- (- (+ ?x11783 ?x11610) ?x11786) ?x11789) ?x11792) ?x11795) ?x11798) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x11546 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11543 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11534 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x10804 (* 4.0 l_0_6_31)))
 (let ((?x11822 (* ?x10804 l_0_6_37)))
 (let ((?x11148 (* 8.0 l_0_6_31)))
 (let ((?x11190 (* ?x11148 l_0_6_34)))
 (let ((?x10955 (* 4.0 l_0_6_16)))
 (let ((?x11819 (* ?x10955 l_0_6_22)))
 (let ((?x1753 (* 8.0 l_0_6_16)))
 (let ((?x11180 (* ?x1753 l_0_6_19)))
 (let ((?x11826 (+ (+ (- (- (+ ?x11180 ?x11819) ?x11190) ?x11822) ?x11534) (* (* 2.0 l_0_6_46) l_0_6_49))))
 (let ((?x11834 (- (- (+ (+ ?x11826 ?x11543) ?x11546) (* (* 2.0 l_0_6_64) l_0_6_67)) (* (* 2.0 l_0_6_65) l_0_6_68))))
 (let ((?x11840 (- (- ?x11834 (* (* 2.0 l_0_6_66) l_0_6_69)) (* (* 2.0 l_0_6_79) l_0_6_82))))
 (let ((?x11846 (- (- ?x11840 (* (* 2.0 l_0_6_80) l_0_6_83)) (* (* 2.0 l_0_6_81) l_0_6_84))))
 (let ((?x11852 (- (- ?x11846 (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x11852 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0))))))))))))))))))
(assert
 (let ((?x10804 (* 4.0 l_0_6_31)))
 (let ((?x11066 (* ?x10804 l_0_6_41)))
 (let ((?x10958 (* ?x10804 l_0_6_34)))
 (let ((?x10955 (* 4.0 l_0_6_16)))
 (let ((?x11063 (* ?x10955 l_0_6_26)))
 (let ((?x10956 (* ?x10955 l_0_6_19)))
 (let ((?x11591 (* 2.0 l_0_6_13)))
 (let ((?x11592 (* ?x11591 l_0_6_6)))
 (let ((?x11306 (* 2.0 l_0_6_12)))
 (let ((?x11589 (* ?x11306 l_0_6_5)))
 (let ((?x3074 (- (* (* (- 2.0) l_0_6_101) l_0_6_94) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x11889 (+ (- ?x3074 (* (* 2.0 l_0_6_103) l_0_6_96)) (* (* 2.0 l_0_6_11) l_0_6_4))))
 (let ((?x11897 (- (- (+ (+ (- (+ (+ ?x11889 ?x11589) ?x11592) ?x10956) ?x11063) ?x10958) ?x11066) (* (* 2.0 l_0_6_64) l_0_6_71))))
 (let ((?x11901 (- (- ?x11897 (* (* 2.0 l_0_6_65) l_0_6_72)) (* (* 2.0 l_0_6_66) l_0_6_73))))
 (let ((?x11905 (- (- ?x11901 (* (* 2.0 l_0_6_79) l_0_6_86)) (* (* 2.0 l_0_6_80) l_0_6_87))))
 (= (- ?x11905 (* (* 2.0 l_0_6_81) l_0_6_88)) 0.0)))))))))))))))))
(assert
 (let ((?x11942 (* l_0_6_99 l_0_6_99)))
 (let ((?x11940 (* l_0_6_98 l_0_6_98)))
 (let ((?x11938 (* l_0_6_97 l_0_6_97)))
 (let ((?x11934 (* l_0_6_85 l_0_6_85)))
 (let ((?x11932 (* l_0_6_84 l_0_6_84)))
 (let ((?x11930 (* l_0_6_83 l_0_6_83)))
 (let ((?x11928 (* l_0_6_82 l_0_6_82)))
 (let ((?x11924 (* l_0_6_70 l_0_6_70)))
 (let ((?x11920 (* l_0_6_69 l_0_6_69)))
 (let ((?x11918 (* l_0_6_68 l_0_6_68)))
 (let ((?x11916 (* l_0_6_67 l_0_6_67)))
 (let ((?x11148 (* 8.0 l_0_6_31)))
 (let ((?x11242 (* ?x11148 l_0_6_37)))
 (let ((?x1753 (* 8.0 l_0_6_16)))
 (let ((?x1897 (* ?x1753 l_0_6_22)))
 (let ((?x3315 (+ (- (* 1.0 (* l_0_6_10 l_0_6_10)) (* l_0_6_100 l_0_6_100)) ?x1897)))
 (let ((?x11919 (- (- (+ (- ?x3315 ?x11242) (* (* 2.0 l_0_6_46) l_0_6_52)) ?x11916) ?x11918)))
 (let ((?x11927 (+ (- (+ (- ?x11919 ?x11920) (* 1.0 (* l_0_6_7 l_0_6_7))) ?x11924) (* 1.0 (* l_0_6_8 l_0_6_8)))))
 (let ((?x11937 (+ (- (- (- (- ?x11927 ?x11928) ?x11930) ?x11932) ?x11934) (* 1.0 (* l_0_6_9 l_0_6_9)))))
 (= (- (- (- ?x11937 ?x11938) ?x11940) ?x11942) 0.0)))))))))))))))))))))
(assert
 (let ((?x11148 (* 8.0 l_0_6_31)))
 (let ((?x11313 (* ?x11148 l_0_6_41)))
 (let ((?x10804 (* 4.0 l_0_6_31)))
 (let ((?x11822 (* ?x10804 l_0_6_37)))
 (let ((?x1753 (* 8.0 l_0_6_16)))
 (let ((?x11310 (* ?x1753 l_0_6_26)))
 (let ((?x10955 (* 4.0 l_0_6_16)))
 (let ((?x11819 (* ?x10955 l_0_6_22)))
 (let ((?x11591 (* 2.0 l_0_6_13)))
 (let ((?x11702 (* ?x11591 l_0_6_9)))
 (let ((?x11306 (* 2.0 l_0_6_12)))
 (let ((?x11700 (* ?x11306 l_0_6_8)))
 (let ((?x11303 (* 2.0 l_0_6_11)))
 (let ((?x11698 (* ?x11303 l_0_6_7)))
 (let ((?x11974 (- (* (* 2.0 l_0_6_10) l_0_6_14) (* (* 2.0 l_0_6_100) l_0_6_104))))
 (let ((?x11978 (- (- ?x11974 (* (* 2.0 l_0_6_101) l_0_6_97)) (* (* 2.0 l_0_6_102) l_0_6_98))))
 (let ((?x11983 (+ (+ (+ (- ?x11978 (* (* 2.0 l_0_6_103) l_0_6_99)) ?x11698) ?x11700) ?x11702)))
 (let ((?x11989 (+ (- (+ (+ (- ?x11983 ?x11819) ?x11310) ?x11822) ?x11313) (* (* 2.0 l_0_6_46) l_0_6_56))))
 (let ((?x11995 (- (- ?x11989 (* (* 2.0 l_0_6_67) l_0_6_71)) (* (* 2.0 l_0_6_68) l_0_6_72))))
 (let ((?x12001 (- (- ?x11995 (* (* 2.0 l_0_6_69) l_0_6_73)) (* (* 2.0 l_0_6_70) l_0_6_74))))
 (let ((?x12007 (- (- ?x12001 (* (* 2.0 l_0_6_82) l_0_6_86)) (* (* 2.0 l_0_6_83) l_0_6_87))))
 (let ((?x12013 (- (- ?x12007 (* (* 2.0 l_0_6_84) l_0_6_88)) (* (* 2.0 l_0_6_85) l_0_6_89))))
 (= ?x12013 0.0))))))))))))))))))))))))
(assert
 (let ((?x10856 (* 2.0 l_0_6_31)))
 (let ((?x12045 (* ?x10856 l_0_6_34)))
 (let ((?x11475 (* l_0_6_21 l_0_6_21)))
 (let ((?x12043 (* 2.0 ?x11475)))
 (let ((?x11472 (* l_0_6_20 l_0_6_20)))
 (let ((?x12041 (* 2.0 ?x11472)))
 (let ((?x11469 (* l_0_6_19 l_0_6_19)))
 (let ((?x3604 (* 2.0 ?x11469)))
 (let ((?x12046 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_16) l_0_6_19) ?x3604) ?x12041) ?x12043) ?x12045)))
 (let ((?x12052 (- (- ?x12046 (* (* 2.0 l_0_6_34) l_0_6_34)) (* (* 2.0 l_0_6_35) l_0_6_35))))
 (= (- ?x12052 (* (* 2.0 l_0_6_36) l_0_6_36)) 0.0))))))))))))
(assert
 (let ((?x12104 (* l_0_6_51 l_0_6_51)))
 (let ((?x12102 (* l_0_6_50 l_0_6_50)))
 (let ((?x12100 (* l_0_6_49 l_0_6_49)))
 (let ((?x11490 (* 4.0 l_0_6_36)))
 (let ((?x11491 (* ?x11490 l_0_6_36)))
 (let ((?x12097 (* ?x11490 l_0_6_39)))
 (let ((?x11487 (* 4.0 l_0_6_35)))
 (let ((?x11488 (* ?x11487 l_0_6_35)))
 (let ((?x12094 (* ?x11487 l_0_6_38)))
 (let ((?x11484 (* 4.0 l_0_6_34)))
 (let ((?x11485 (* ?x11484 l_0_6_34)))
 (let ((?x12091 (* ?x11484 l_0_6_37)))
 (let ((?x10856 (* 2.0 l_0_6_31)))
 (let ((?x12089 (* ?x10856 l_0_6_37)))
 (let ((?x11475 (* l_0_6_21 l_0_6_21)))
 (let ((?x11476 (* 4.0 ?x11475)))
 (let ((?x12085 (* 4.0 l_0_6_21)))
 (let ((?x12086 (* ?x12085 l_0_6_24)))
 (let ((?x11472 (* l_0_6_20 l_0_6_20)))
 (let ((?x11473 (* 4.0 ?x11472)))
 (let ((?x12081 (* 4.0 l_0_6_20)))
 (let ((?x12082 (* ?x12081 l_0_6_23)))
 (let ((?x11469 (* l_0_6_19 l_0_6_19)))
 (let ((?x11470 (* 4.0 ?x11469)))
 (let ((?x12079 (+ (* (* (- 2.0) l_0_6_16) l_0_6_22) (* (* 4.0 l_0_6_19) l_0_6_22))))
 (let ((?x12092 (- (+ (+ (+ (+ (+ (+ ?x12079 ?x11470) ?x12082) ?x11473) ?x12086) ?x11476) ?x12089) ?x12091)))
 (let ((?x12103 (+ (+ (- (- (- (- (- ?x12092 ?x11485) ?x12094) ?x11488) ?x12097) ?x11491) ?x12100) ?x12102)))
 (= (+ ?x12103 ?x12104) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x2373 (* l_0_6_36 l_0_6_36)))
 (let ((?x3664 (* 2.0 ?x2373)))
 (let ((?x11490 (* 4.0 l_0_6_36)))
 (let ((?x12159 (* ?x11490 l_0_6_43)))
 (let ((?x2369 (* l_0_6_35 l_0_6_35)))
 (let ((?x12062 (* 2.0 ?x2369)))
 (let ((?x11487 (* 4.0 l_0_6_35)))
 (let ((?x12156 (* ?x11487 l_0_6_42)))
 (let ((?x11509 (* l_0_6_34 l_0_6_34)))
 (let ((?x3663 (* 2.0 ?x11509)))
 (let ((?x11484 (* 4.0 l_0_6_34)))
 (let ((?x12153 (* ?x11484 l_0_6_41)))
 (let ((?x10856 (* 2.0 l_0_6_31)))
 (let ((?x12151 (* ?x10856 l_0_6_41)))
 (let ((?x12085 (* 4.0 l_0_6_21)))
 (let ((?x12146 (* ?x12085 l_0_6_28)))
 (let ((?x12081 (* 4.0 l_0_6_20)))
 (let ((?x12141 (* ?x12081 l_0_6_27)))
 (let ((?x12077 (* 4.0 l_0_6_19)))
 (let ((?x12136 (* ?x12077 l_0_6_26)))
 (let ((?x12140 (- (+ (* (* (- 2.0) l_0_6_16) l_0_6_26) ?x12136) (* (* 2.0 l_0_6_19) l_0_6_19))))
 (let ((?x12150 (- (+ (- (+ ?x12140 ?x12141) (* (* 2.0 l_0_6_20) l_0_6_20)) ?x12146) (* (* 2.0 l_0_6_21) l_0_6_21))))
 (let ((?x12161 (+ (- (+ (- (+ (- (+ ?x12150 ?x12151) ?x12153) ?x3663) ?x12156) ?x12062) ?x12159) ?x3664)))
 (= ?x12161 0.0)))))))))))))))))))))))))
(assert
 (let ((?x2117 (* l_0_6_33 l_0_6_33)))
 (let ((?x11364 (* l_0_6_32 l_0_6_32)))
 (let ((?x12198 (+ (+ (- (* (- l_0_6_17) l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x11364) ?x2117)))
 (= ?x12198 0.0)))))
(assert
 (let ((?x11380 (* 2.0 l_0_6_33)))
 (let ((?x12214 (* ?x11380 l_0_6_35)))
 (let ((?x11374 (* 2.0 l_0_6_32)))
 (let ((?x12212 (* ?x11374 l_0_6_34)))
 (let ((?x11424 (* 2.0 l_0_6_18)))
 (let ((?x12210 (* ?x11424 l_0_6_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x12210) ?x12212) ?x12214) 0.0))))))))
(assert
 (let ((?x11380 (* 2.0 l_0_6_33)))
 (let ((?x12230 (* ?x11380 l_0_6_38)))
 (let ((?x11374 (* 2.0 l_0_6_32)))
 (let ((?x12228 (* ?x11374 l_0_6_37)))
 (let ((?x11424 (* 2.0 l_0_6_18)))
 (let ((?x12221 (* ?x11424 l_0_6_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x12221) ?x12228) ?x12230) 0.0))))))))
(assert
 (let ((?x11380 (* 2.0 l_0_6_33)))
 (let ((?x12249 (* ?x11380 l_0_6_42)))
 (let ((?x11374 (* 2.0 l_0_6_32)))
 (let ((?x12247 (* ?x11374 l_0_6_41)))
 (let ((?x11424 (* 2.0 l_0_6_18)))
 (let ((?x12240 (* ?x11424 l_0_6_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_26) ?x12240) ?x12247) ?x12249) 0.0))))))))
(assert
 (let ((?x2373 (* l_0_6_36 l_0_6_36)))
 (let ((?x2369 (* l_0_6_35 l_0_6_35)))
 (let ((?x11509 (* l_0_6_34 l_0_6_34)))
 (let ((?x11475 (* l_0_6_21 l_0_6_21)))
 (let ((?x12266 (+ (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x11475) ?x11509)))
 (= (+ (+ ?x12266 ?x2369) ?x2373) 0.0)))))))
(assert
 (let ((?x12053 (* 2.0 l_0_6_36)))
 (let ((?x12289 (* ?x12053 l_0_6_39)))
 (let ((?x12050 (* 2.0 l_0_6_35)))
 (let ((?x12287 (* ?x12050 l_0_6_38)))
 (let ((?x12047 (* 2.0 l_0_6_34)))
 (let ((?x12285 (* ?x12047 l_0_6_37)))
 (let ((?x12148 (* 2.0 l_0_6_21)))
 (let ((?x12283 (* ?x12148 l_0_6_24)))
 (let ((?x12143 (* 2.0 l_0_6_20)))
 (let ((?x12281 (* ?x12143 l_0_6_23)))
 (let ((?x12288 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x12281) ?x12283) ?x12285) ?x12287)))
 (= (+ ?x12288 ?x12289) 0.0)))))))))))))
(assert
 (let ((?x12053 (* 2.0 l_0_6_36)))
 (let ((?x12300 (* ?x12053 l_0_6_43)))
 (let ((?x12050 (* 2.0 l_0_6_35)))
 (let ((?x12298 (* ?x12050 l_0_6_42)))
 (let ((?x12047 (* 2.0 l_0_6_34)))
 (let ((?x12296 (* ?x12047 l_0_6_41)))
 (let ((?x12148 (* 2.0 l_0_6_21)))
 (let ((?x12294 (* ?x12148 l_0_6_28)))
 (let ((?x12143 (* 2.0 l_0_6_20)))
 (let ((?x3776 (* ?x12143 l_0_6_27)))
 (let ((?x12299 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_26) ?x3776) ?x12294) ?x12296) ?x12298)))
 (= (+ ?x12299 ?x12300) 0.0)))))))))))))
(assert
 (let ((?x2682 (* l_0_6_40 l_0_6_40)))
 (let ((?x2676 (* l_0_6_39 l_0_6_39)))
 (let ((?x2670 (* l_0_6_38 l_0_6_38)))
 (let ((?x2592 (* l_0_6_37 l_0_6_37)))
 (let ((?x11660 (* l_0_6_25 l_0_6_25)))
 (let ((?x11657 (* l_0_6_24 l_0_6_24)))
 (let ((?x12316 (- (- (- (* (- l_0_6_22) l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x11657) ?x11660)))
 (= (+ (+ (+ (+ ?x12316 ?x2592) ?x2670) ?x2676) ?x2682) 0.0)))))))))
(assert
 (let ((?x12351 (* 2.0 l_0_6_40)))
 (let ((?x12352 (* ?x12351 l_0_6_44)))
 (let ((?x12348 (* 2.0 l_0_6_39)))
 (let ((?x12349 (* ?x12348 l_0_6_43)))
 (let ((?x12345 (* 2.0 l_0_6_38)))
 (let ((?x12346 (* ?x12345 l_0_6_42)))
 (let ((?x12342 (* 2.0 l_0_6_37)))
 (let ((?x12343 (* ?x12342 l_0_6_41)))
 (let ((?x12339 (* 2.0 l_0_6_25)))
 (let ((?x12340 (* ?x12339 l_0_6_29)))
 (let ((?x12336 (* 2.0 l_0_6_24)))
 (let ((?x12337 (* ?x12336 l_0_6_28)))
 (let ((?x12333 (* 2.0 l_0_6_23)))
 (let ((?x12334 (* ?x12333 l_0_6_27)))
 (let ((?x12344 (+ (- (- (- (* (* (- 2.0) l_0_6_22) l_0_6_26) ?x12334) ?x12337) ?x12340) ?x12343)))
 (= (+ (+ (+ ?x12344 ?x12346) ?x12349) ?x12352) 0.0)))))))))))))))))
(assert
 (let ((?x11814 (* l_0_6_45 l_0_6_45)))
 (let ((?x2940 (* l_0_6_44 l_0_6_44)))
 (let ((?x11809 (* l_0_6_43 l_0_6_43)))
 (let ((?x2936 (* l_0_6_42 l_0_6_42)))
 (let ((?x2866 (* l_0_6_41 l_0_6_41)))
 (let ((?x2373 (* l_0_6_36 l_0_6_36)))
 (let ((?x2369 (* l_0_6_35 l_0_6_35)))
 (let ((?x11509 (* l_0_6_34 l_0_6_34)))
 (let ((?x11779 (* l_0_6_30 l_0_6_30)))
 (let ((?x11776 (* l_0_6_29 l_0_6_29)))
 (let ((?x11773 (* l_0_6_28 l_0_6_28)))
 (let ((?x11770 (* l_0_6_27 l_0_6_27)))
 (let ((?x11767 (* l_0_6_26 l_0_6_26)))
 (let ((?x11475 (* l_0_6_21 l_0_6_21)))
 (let ((?x3462 (- (+ (+ (* l_0_6_19 l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x11475) ?x11767)))
 (let ((?x12382 (- (- (- (- (- (- (- ?x3462 ?x11770) ?x11773) ?x11776) ?x11779) ?x11509) ?x2369) ?x2373)))
 (= (+ (+ (+ (+ (+ ?x12382 ?x2866) ?x2936) ?x11809) ?x2940) ?x11814) 0.0))))))))))))))))))
(assert
 (let ((?x11490 (* 4.0 l_0_6_36)))
 (let ((?x12159 (* ?x11490 l_0_6_43)))
 (let ((?x11487 (* 4.0 l_0_6_35)))
 (let ((?x12156 (* ?x11487 l_0_6_42)))
 (let ((?x11484 (* 4.0 l_0_6_34)))
 (let ((?x12153 (* ?x11484 l_0_6_41)))
 (let ((?x10856 (* 2.0 l_0_6_31)))
 (let ((?x12045 (* ?x10856 l_0_6_34)))
 (let ((?x12085 (* 4.0 l_0_6_21)))
 (let ((?x12146 (* ?x12085 l_0_6_28)))
 (let ((?x12081 (* 4.0 l_0_6_20)))
 (let ((?x12141 (* ?x12081 l_0_6_27)))
 (let ((?x12077 (* 4.0 l_0_6_19)))
 (let ((?x12136 (* ?x12077 l_0_6_26)))
 (let ((?x12409 (+ (- (- (- (* (* 2.0 l_0_6_16) l_0_6_19) ?x12136) ?x12141) ?x12146) (* 2.0 (* l_0_6_26 l_0_6_26)))))
 (let ((?x12413 (+ (+ ?x12409 (* 2.0 (* l_0_6_27 l_0_6_27))) (* 2.0 (* l_0_6_28 l_0_6_28)))))
 (let ((?x12417 (+ (+ ?x12413 (* 2.0 (* l_0_6_29 l_0_6_29))) (* 2.0 (* l_0_6_30 l_0_6_30)))))
 (let ((?x12424 (- (+ (+ (+ (- ?x12417 ?x12045) ?x12153) ?x12156) ?x12159) (* (* 2.0 l_0_6_41) l_0_6_41))))
 (let ((?x12430 (- (- ?x12424 (* (* 2.0 l_0_6_42) l_0_6_42)) (* (* 2.0 l_0_6_43) l_0_6_43))))
 (let ((?x12436 (- (- ?x12430 (* (* 2.0 l_0_6_44) l_0_6_44)) (* (* 2.0 l_0_6_45) l_0_6_45))))
 (= ?x12436 0.0))))))))))))))))))))))
(assert
 (let ((?x12509 (* l_0_6_60 l_0_6_60)))
 (let ((?x12507 (* l_0_6_59 l_0_6_59)))
 (let ((?x12505 (* l_0_6_58 l_0_6_58)))
 (let ((?x12503 (* l_0_6_57 l_0_6_57)))
 (let ((?x12501 (* l_0_6_56 l_0_6_56)))
 (let ((?x11798 (* (* 4.0 l_0_6_45) l_0_6_45)))
 (let ((?x11795 (* (* 4.0 l_0_6_44) l_0_6_44)))
 (let ((?x11792 (* (* 4.0 l_0_6_43) l_0_6_43)))
 (let ((?x11789 (* (* 4.0 l_0_6_42) l_0_6_42)))
 (let ((?x11786 (* (* 4.0 l_0_6_41) l_0_6_41)))
 (let ((?x11674 (* 4.0 l_0_6_40)))
 (let ((?x12494 (* ?x11674 l_0_6_44)))
 (let ((?x11671 (* 4.0 l_0_6_39)))
 (let ((?x12492 (* ?x11671 l_0_6_43)))
 (let ((?x11668 (* 4.0 l_0_6_38)))
 (let ((?x12490 (* ?x11668 l_0_6_42)))
 (let ((?x11665 (* 4.0 l_0_6_37)))
 (let ((?x12488 (* ?x11665 l_0_6_41)))
 (let ((?x10856 (* 2.0 l_0_6_31)))
 (let ((?x12089 (* ?x10856 l_0_6_37)))
 (let ((?x11779 (* l_0_6_30 l_0_6_30)))
 (let ((?x11780 (* 4.0 ?x11779)))
 (let ((?x11776 (* l_0_6_29 l_0_6_29)))
 (let ((?x11777 (* 4.0 ?x11776)))
 (let ((?x11773 (* l_0_6_28 l_0_6_28)))
 (let ((?x11774 (* 4.0 ?x11773)))
 (let ((?x11770 (* l_0_6_27 l_0_6_27)))
 (let ((?x11771 (* 4.0 ?x11770)))
 (let ((?x11767 (* l_0_6_26 l_0_6_26)))
 (let ((?x11768 (* 4.0 ?x11767)))
 (let ((?x12480 (* (* 4.0 l_0_6_25) l_0_6_29)))
 (let ((?x12477 (* (* 4.0 l_0_6_24) l_0_6_28)))
 (let ((?x12474 (* (* 4.0 l_0_6_23) l_0_6_27)))
 (let ((?x12471 (* (* 4.0 l_0_6_22) l_0_6_26)))
 (let ((?x12481 (- (- (- (- (* (* 2.0 l_0_6_16) l_0_6_22) ?x12471) ?x12474) ?x12477) ?x12480)))
 (let ((?x12489 (+ (- (+ (+ (+ (+ (+ ?x12481 ?x11768) ?x11771) ?x11774) ?x11777) ?x11780) ?x12089) ?x12488)))
 (let ((?x12499 (- (- (- (- (+ (+ (+ ?x12489 ?x12490) ?x12492) ?x12494) ?x11786) ?x11789) ?x11792) ?x11795)))
 (= (+ (+ (+ (+ (+ (- ?x12499 ?x11798) ?x12501) ?x12503) ?x12505) ?x12507) ?x12509) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11814 (* l_0_6_45 l_0_6_45)))
 (let ((?x12461 (* 2.0 ?x11814)))
 (let ((?x2940 (* l_0_6_44 l_0_6_44)))
 (let ((?x3960 (* 2.0 ?x2940)))
 (let ((?x11809 (* l_0_6_43 l_0_6_43)))
 (let ((?x3951 (* 2.0 ?x11809)))
 (let ((?x2936 (* l_0_6_42 l_0_6_42)))
 (let ((?x12454 (* 2.0 ?x2936)))
 (let ((?x2866 (* l_0_6_41 l_0_6_41)))
 (let ((?x12449 (* 2.0 ?x2866)))
 (let ((?x10856 (* 2.0 l_0_6_31)))
 (let ((?x12151 (* ?x10856 l_0_6_41)))
 (let ((?x12525 (- (* (* 2.0 l_0_6_16) l_0_6_26) (* (* 2.0 l_0_6_26) l_0_6_26))))
 (let ((?x12531 (- (- ?x12525 (* (* 2.0 l_0_6_27) l_0_6_27)) (* (* 2.0 l_0_6_28) l_0_6_28))))
 (let ((?x12537 (- (- ?x12531 (* (* 2.0 l_0_6_29) l_0_6_29)) (* (* 2.0 l_0_6_30) l_0_6_30))))
 (= (+ (+ (+ (+ (+ (- ?x12537 ?x12151) ?x12449) ?x12454) ?x3951) ?x3960) ?x12461) 0.0)))))))))))))))))
(assert
 (let ((?x2117 (* l_0_6_33 l_0_6_33)))
 (let ((?x11364 (* l_0_6_32 l_0_6_32)))
 (let ((?x4177 (- (- (+ (* l_0_6_17 l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x11364) ?x2117)))
 (= ?x4177 0.0)))))
(assert
 (let ((?x11380 (* 2.0 l_0_6_33)))
 (let ((?x12214 (* ?x11380 l_0_6_35)))
 (let ((?x11374 (* 2.0 l_0_6_32)))
 (let ((?x12212 (* ?x11374 l_0_6_34)))
 (let ((?x11424 (* 2.0 l_0_6_18)))
 (let ((?x12210 (* ?x11424 l_0_6_20)))
 (= (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_19) ?x12210) ?x12212) ?x12214) 0.0))))))))
(assert
 (let ((?x11380 (* 2.0 l_0_6_33)))
 (let ((?x12230 (* ?x11380 l_0_6_38)))
 (let ((?x11374 (* 2.0 l_0_6_32)))
 (let ((?x12228 (* ?x11374 l_0_6_37)))
 (let ((?x11424 (* 2.0 l_0_6_18)))
 (let ((?x12221 (* ?x11424 l_0_6_23)))
 (= (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_22) ?x12221) ?x12228) ?x12230) 0.0))))))))
(assert
 (let ((?x11380 (* 2.0 l_0_6_33)))
 (let ((?x12249 (* ?x11380 l_0_6_42)))
 (let ((?x11374 (* 2.0 l_0_6_32)))
 (let ((?x12247 (* ?x11374 l_0_6_41)))
 (let ((?x11424 (* 2.0 l_0_6_18)))
 (let ((?x12240 (* ?x11424 l_0_6_27)))
 (= (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_26) ?x12240) ?x12247) ?x12249) 0.0))))))))
(assert
 (let ((?x12053 (* 2.0 l_0_6_36)))
 (let ((?x12289 (* ?x12053 l_0_6_39)))
 (let ((?x12050 (* 2.0 l_0_6_35)))
 (let ((?x12287 (* ?x12050 l_0_6_38)))
 (let ((?x12047 (* 2.0 l_0_6_34)))
 (let ((?x12285 (* ?x12047 l_0_6_37)))
 (let ((?x12148 (* 2.0 l_0_6_21)))
 (let ((?x12283 (* ?x12148 l_0_6_24)))
 (let ((?x12143 (* 2.0 l_0_6_20)))
 (let ((?x12281 (* ?x12143 l_0_6_23)))
 (let ((?x12553 (- (- (+ (+ (* (* 2.0 l_0_6_19) l_0_6_22) ?x12281) ?x12283) ?x12285) ?x12287)))
 (= (- ?x12553 ?x12289) 0.0)))))))))))))
(assert
 (let ((?x12053 (* 2.0 l_0_6_36)))
 (let ((?x12300 (* ?x12053 l_0_6_43)))
 (let ((?x12050 (* 2.0 l_0_6_35)))
 (let ((?x12298 (* ?x12050 l_0_6_42)))
 (let ((?x12047 (* 2.0 l_0_6_34)))
 (let ((?x12296 (* ?x12047 l_0_6_41)))
 (let ((?x12148 (* 2.0 l_0_6_21)))
 (let ((?x12294 (* ?x12148 l_0_6_28)))
 (let ((?x12143 (* 2.0 l_0_6_20)))
 (let ((?x3776 (* ?x12143 l_0_6_27)))
 (let ((?x12562 (- (- (+ (+ (* (* 2.0 l_0_6_19) l_0_6_26) ?x3776) ?x12294) ?x12296) ?x12298)))
 (= (- ?x12562 ?x12300) 0.0)))))))))))))
(assert
 (let ((?x2682 (* l_0_6_40 l_0_6_40)))
 (let ((?x2676 (* l_0_6_39 l_0_6_39)))
 (let ((?x2670 (* l_0_6_38 l_0_6_38)))
 (let ((?x2592 (* l_0_6_37 l_0_6_37)))
 (let ((?x11660 (* l_0_6_25 l_0_6_25)))
 (let ((?x11657 (* l_0_6_24 l_0_6_24)))
 (let ((?x4351 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x11657) ?x11660)))
 (= (- (- (- (- ?x4351 ?x2592) ?x2670) ?x2676) ?x2682) 0.0)))))))))
(assert
 (let ((?x12351 (* 2.0 l_0_6_40)))
 (let ((?x12352 (* ?x12351 l_0_6_44)))
 (let ((?x12348 (* 2.0 l_0_6_39)))
 (let ((?x12349 (* ?x12348 l_0_6_43)))
 (let ((?x12345 (* 2.0 l_0_6_38)))
 (let ((?x12346 (* ?x12345 l_0_6_42)))
 (let ((?x12342 (* 2.0 l_0_6_37)))
 (let ((?x12343 (* ?x12342 l_0_6_41)))
 (let ((?x12339 (* 2.0 l_0_6_25)))
 (let ((?x12340 (* ?x12339 l_0_6_29)))
 (let ((?x12336 (* 2.0 l_0_6_24)))
 (let ((?x12337 (* ?x12336 l_0_6_28)))
 (let ((?x12333 (* 2.0 l_0_6_23)))
 (let ((?x12334 (* ?x12333 l_0_6_27)))
 (let ((?x4353 (- (+ (+ (+ (* (* 2.0 l_0_6_22) l_0_6_26) ?x12334) ?x12337) ?x12340) ?x12343)))
 (= (- (- (- ?x4353 ?x12346) ?x12349) ?x12352) 0.0)))))))))))))))))
(assert
 (let ((?x11814 (* l_0_6_45 l_0_6_45)))
 (let ((?x2940 (* l_0_6_44 l_0_6_44)))
 (let ((?x11809 (* l_0_6_43 l_0_6_43)))
 (let ((?x2936 (* l_0_6_42 l_0_6_42)))
 (let ((?x2866 (* l_0_6_41 l_0_6_41)))
 (let ((?x11779 (* l_0_6_30 l_0_6_30)))
 (let ((?x11776 (* l_0_6_29 l_0_6_29)))
 (let ((?x11773 (* l_0_6_28 l_0_6_28)))
 (let ((?x12594 (+ (+ (+ (* l_0_6_26 l_0_6_26) (* l_0_6_27 l_0_6_27)) ?x11773) ?x11776)))
 (= (- (- (- (- (- (+ ?x12594 ?x11779) ?x2866) ?x2936) ?x11809) ?x2940) ?x11814) 0.0)))))))))))
(assert
 (let ((?x11530 (* 8.0 l_0_6_36)))
 (let ((?x11531 (* ?x11530 l_0_6_39)))
 (let ((?x11527 (* 8.0 l_0_6_35)))
 (let ((?x11528 (* ?x11527 l_0_6_38)))
 (let ((?x11524 (* 8.0 l_0_6_34)))
 (let ((?x11525 (* ?x11524 l_0_6_37)))
 (let ((?x11515 (* 8.0 l_0_6_21)))
 (let ((?x11516 (* ?x11515 l_0_6_24)))
 (let ((?x2376 (* 8.0 l_0_6_20)))
 (let ((?x2377 (* ?x2376 l_0_6_23)))
 (let ((?x2386 (* 8.0 l_0_6_19)))
 (let ((?x2388 (* ?x2386 l_0_6_22)))
 (let ((?x12609 (+ (+ (+ (+ ?x2388 ?x2377) ?x11516) (* 2.0 (* l_0_6_22 l_0_6_22))) (* 2.0 (* l_0_6_23 l_0_6_23)))))
 (let ((?x12613 (+ (+ ?x12609 (* 2.0 (* l_0_6_24 l_0_6_24))) (* 2.0 (* l_0_6_25 l_0_6_25)))))
 (let ((?x12618 (- (- (- (- ?x12613 ?x11525) ?x11528) ?x11531) (* (* 2.0 l_0_6_37) l_0_6_37))))
 (let ((?x12622 (- (- ?x12618 (* (* 2.0 l_0_6_38) l_0_6_38)) (* (* 2.0 l_0_6_39) l_0_6_39))))
 (let ((?x12627 (+ (- ?x12622 (* (* 2.0 l_0_6_40) l_0_6_40)) (* (* 2.0 l_0_6_49) l_0_6_52))))
 (let ((?x12633 (+ (+ ?x12627 (* (* 2.0 l_0_6_50) l_0_6_53)) (* (* 2.0 l_0_6_51) l_0_6_54))))
 (= ?x12633 0.0))))))))))))))))))))
(assert
 (let ((?x11674 (* 4.0 l_0_6_40)))
 (let ((?x12494 (* ?x11674 l_0_6_44)))
 (let ((?x11671 (* 4.0 l_0_6_39)))
 (let ((?x12492 (* ?x11671 l_0_6_43)))
 (let ((?x11668 (* 4.0 l_0_6_38)))
 (let ((?x12490 (* ?x11668 l_0_6_42)))
 (let ((?x11665 (* 4.0 l_0_6_37)))
 (let ((?x12488 (* ?x11665 l_0_6_41)))
 (let ((?x11530 (* 8.0 l_0_6_36)))
 (let ((?x11616 (* ?x11530 l_0_6_43)))
 (let ((?x11490 (* 4.0 l_0_6_36)))
 (let ((?x12097 (* ?x11490 l_0_6_39)))
 (let ((?x11527 (* 8.0 l_0_6_35)))
 (let ((?x11614 (* ?x11527 l_0_6_42)))
 (let ((?x11487 (* 4.0 l_0_6_35)))
 (let ((?x12094 (* ?x11487 l_0_6_38)))
 (let ((?x11524 (* 8.0 l_0_6_34)))
 (let ((?x11612 (* ?x11524 l_0_6_41)))
 (let ((?x11484 (* 4.0 l_0_6_34)))
 (let ((?x12091 (* ?x11484 l_0_6_37)))
 (let ((?x12480 (* (* 4.0 l_0_6_25) l_0_6_29)))
 (let ((?x12477 (* (* 4.0 l_0_6_24) l_0_6_28)))
 (let ((?x12474 (* (* 4.0 l_0_6_23) l_0_6_27)))
 (let ((?x12471 (* (* 4.0 l_0_6_22) l_0_6_26)))
 (let ((?x11515 (* 8.0 l_0_6_21)))
 (let ((?x11604 (* ?x11515 l_0_6_28)))
 (let ((?x12085 (* 4.0 l_0_6_21)))
 (let ((?x12086 (* ?x12085 l_0_6_24)))
 (let ((?x2376 (* 8.0 l_0_6_20)))
 (let ((?x11602 (* ?x2376 l_0_6_27)))
 (let ((?x12081 (* 4.0 l_0_6_20)))
 (let ((?x12082 (* ?x12081 l_0_6_23)))
 (let ((?x2386 (* 8.0 l_0_6_19)))
 (let ((?x11600 (* ?x2386 l_0_6_26)))
 (let ((?x12656 (- (+ (- (+ (* (* (- 4.0) l_0_6_19) l_0_6_22) ?x11600) ?x12082) ?x11602) ?x12086)))
 (let ((?x12663 (- (+ (+ (+ (+ (+ (+ ?x12656 ?x11604) ?x12471) ?x12474) ?x12477) ?x12480) ?x12091) ?x11612)))
 (let ((?x12670 (- (- (- (- (+ (- (+ ?x12663 ?x12094) ?x11614) ?x12097) ?x11616) ?x12488) ?x12490) ?x12492)))
 (let ((?x12675 (+ (+ (- ?x12670 ?x12494) (* (* 2.0 l_0_6_49) l_0_6_56)) (* (* 2.0 l_0_6_50) l_0_6_57))))
 (= (+ ?x12675 (* (* 2.0 l_0_6_51) l_0_6_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2682 (* l_0_6_40 l_0_6_40)))
 (let ((?x4464 (* 2.0 ?x2682)))
 (let ((?x11734 (* (* 8.0 l_0_6_40) l_0_6_44)))
 (let ((?x2676 (* l_0_6_39 l_0_6_39)))
 (let ((?x4271 (* 2.0 ?x2676)))
 (let ((?x11731 (* (* 8.0 l_0_6_39) l_0_6_43)))
 (let ((?x2670 (* l_0_6_38 l_0_6_38)))
 (let ((?x4480 (* 2.0 ?x2670)))
 (let ((?x11728 (* (* 8.0 l_0_6_38) l_0_6_42)))
 (let ((?x2592 (* l_0_6_37 l_0_6_37)))
 (let ((?x4474 (* 2.0 ?x2592)))
 (let ((?x11725 (* (* 8.0 l_0_6_37) l_0_6_41)))
 (let ((?x11718 (* (* 8.0 l_0_6_25) l_0_6_29)))
 (let ((?x11715 (* (* 8.0 l_0_6_24) l_0_6_28)))
 (let ((?x11712 (* (* 8.0 l_0_6_23) l_0_6_27)))
 (let ((?x11709 (* (* 8.0 l_0_6_22) l_0_6_26)))
 (let ((?x12687 (- (+ (- ?x11709 (* (* 2.0 l_0_6_22) l_0_6_22)) ?x11712) (* (* 2.0 l_0_6_23) l_0_6_23))))
 (let ((?x12693 (- (+ (- (+ ?x12687 ?x11715) (* (* 2.0 l_0_6_24) l_0_6_24)) ?x11718) (* (* 2.0 l_0_6_25) l_0_6_25))))
 (let ((?x12700 (- (+ (- (+ (- (+ (- ?x12693 ?x11725) ?x4474) ?x11728) ?x4480) ?x11731) ?x4271) ?x11734)))
 (let ((?x12707 (+ (+ (+ ?x12700 ?x4464) (* (* 2.0 l_0_6_52) l_0_6_56)) (* (* 2.0 l_0_6_53) l_0_6_57))))
 (let ((?x12713 (+ (+ ?x12707 (* (* 2.0 l_0_6_54) l_0_6_58)) (* (* 2.0 l_0_6_55) l_0_6_59))))
 (= ?x12713 0.0)))))))))))))))))))))))
(assert
 (let ((?x4654 (* l_0_6_55 l_0_6_55)))
 (let ((?x4699 (* l_0_6_54 l_0_6_54)))
 (let ((?x4697 (* l_0_6_53 l_0_6_53)))
 (let ((?x4710 (* l_0_6_52 l_0_6_52)))
 (let ((?x11674 (* 4.0 l_0_6_40)))
 (let ((?x11675 (* ?x11674 l_0_6_40)))
 (let ((?x11671 (* 4.0 l_0_6_39)))
 (let ((?x11672 (* ?x11671 l_0_6_39)))
 (let ((?x11668 (* 4.0 l_0_6_38)))
 (let ((?x11669 (* ?x11668 l_0_6_38)))
 (let ((?x11665 (* 4.0 l_0_6_37)))
 (let ((?x11666 (* ?x11665 l_0_6_37)))
 (let ((?x11660 (* l_0_6_25 l_0_6_25)))
 (let ((?x11661 (* 4.0 ?x11660)))
 (let ((?x11657 (* l_0_6_24 l_0_6_24)))
 (let ((?x11658 (* 4.0 ?x11657)))
 (let ((?x11654 (* l_0_6_23 l_0_6_23)))
 (let ((?x11655 (* 4.0 ?x11654)))
 (let ((?x11651 (* l_0_6_22 l_0_6_22)))
 (let ((?x11652 (* 4.0 ?x11651)))
 (let ((?x4709 (- (- (- (- (+ (+ (+ ?x11652 ?x11655) ?x11658) ?x11661) ?x11666) ?x11669) ?x11672) ?x11675)))
 (= (+ (+ (+ (+ ?x4709 ?x4710) ?x4697) ?x4699) ?x4654) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (let ((?x12747 (* 4.0 l_0_7_31)))
 (let ((?x12748 (* ?x12747 l_0_7_31)))
 (let ((?x12744 (* l_0_7_16 l_0_7_16)))
 (let ((?x12745 (* 4.0 ?x12744)))
 (let ((?x12746 (+ (- (* (* 2.0 l_0_7_1) l_0_7_2) (* l_0_7_1 l_0_7_1)) ?x12745)))
 (= (+ (- (- ?x12746 ?x12748) (* (* 2.0 l_0_7_61) l_0_7_62)) 1.0) 0.0)))))))
(assert
 (let ((?x12769 (- (- (* 1.0 (* l_0_7_1 l_0_7_1)) (* l_0_7_61 l_0_7_61)) 1.0)))
 (= ?x12769 0.0)))
(assert
 (let ((?x12792 (* l_0_7_63 l_0_7_63)))
 (let ((?x12790 (* l_0_7_62 l_0_7_62)))
 (let ((?x12787 (* 8.0 l_0_7_31)))
 (let ((?x12788 (* ?x12787 l_0_7_32)))
 (let ((?x12778 (* 8.0 l_0_7_16)))
 (let ((?x12779 (* ?x12778 l_0_7_17)))
 (let ((?x12783 (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_2) ?x12779) (* 1.0 (* l_0_7_2 l_0_7_2)))))
 (let ((?x12793 (- (- (- (+ ?x12783 (* 1.0 (* l_0_7_3 l_0_7_3))) ?x12788) ?x12790) ?x12792)))
 (= ?x12793 0.0))))))))))
(assert
 (let ((?x12787 (* 8.0 l_0_7_31)))
 (let ((?x12815 (* ?x12787 l_0_7_34)))
 (let ((?x12747 (* 4.0 l_0_7_31)))
 (let ((?x12813 (* ?x12747 l_0_7_32)))
 (let ((?x12810 (* 2.0 l_0_7_3)))
 (let ((?x12811 (* ?x12810 l_0_7_5)))
 (let ((?x12807 (* 2.0 l_0_7_2)))
 (let ((?x12808 (* ?x12807 l_0_7_4)))
 (let ((?x12778 (* 8.0 l_0_7_16)))
 (let ((?x12805 (* ?x12778 l_0_7_19)))
 (let ((?x4946 (* 4.0 l_0_7_16)))
 (let ((?x12803 (* ?x4946 l_0_7_17)))
 (let ((?x12812 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x12803) ?x12805) ?x12808) ?x12811)))
 (let ((?x12822 (- (- (- (- ?x12812 ?x12813) ?x12815) (* (* 2.0 l_0_7_62) l_0_7_64)) (* (* 2.0 l_0_7_63) l_0_7_65))))
 (= ?x12822 0.0))))))))))))))))
(assert
 (let ((?x12787 (* 8.0 l_0_7_31)))
 (let ((?x12856 (* ?x12787 l_0_7_37)))
 (let ((?x12788 (* ?x12787 l_0_7_32)))
 (let ((?x12810 (* 2.0 l_0_7_3)))
 (let ((?x12853 (* ?x12810 l_0_7_8)))
 (let ((?x12807 (* 2.0 l_0_7_2)))
 (let ((?x12851 (* ?x12807 l_0_7_7)))
 (let ((?x12778 (* 8.0 l_0_7_16)))
 (let ((?x12849 (* ?x12778 l_0_7_22)))
 (let ((?x12852 (+ (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) (* ?x12778 l_0_7_17)) ?x12849) ?x12851)))
 (let ((?x12860 (- (- (- (+ ?x12852 ?x12853) ?x12788) ?x12856) (* (* 2.0 l_0_7_46) l_0_7_47))))
 (let ((?x12864 (- (- ?x12860 (* (* 2.0 l_0_7_62) l_0_7_67)) (* (* 2.0 l_0_7_63) l_0_7_68))))
 (= ?x12864 0.0))))))))))))))
(assert
 (let ((?x12787 (* 8.0 l_0_7_31)))
 (let ((?x12895 (* ?x12787 l_0_7_41)))
 (let ((?x12747 (* 4.0 l_0_7_31)))
 (let ((?x12813 (* ?x12747 l_0_7_32)))
 (let ((?x12778 (* 8.0 l_0_7_16)))
 (let ((?x12892 (* ?x12778 l_0_7_26)))
 (let ((?x4946 (* 4.0 l_0_7_16)))
 (let ((?x12803 (* ?x4946 l_0_7_17)))
 (let ((?x12888 (* 2.0 l_0_7_12)))
 (let ((?x12889 (* ?x12888 l_0_7_3)))
 (let ((?x12887 (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_11) l_0_7_2))))
 (let ((?x12898 (- (- (+ (+ (- (+ ?x12887 ?x12889) ?x12803) ?x12892) ?x12813) ?x12895) (* (* 2.0 l_0_7_62) l_0_7_71))))
 (= (- ?x12898 (* (* 2.0 l_0_7_63) l_0_7_72)) 0.0))))))))))))))
(assert
 (let ((?x12934 (* 4.0 l_0_7_33)))
 (let ((?x12935 (* ?x12934 l_0_7_33)))
 (let ((?x12931 (* 4.0 l_0_7_32)))
 (let ((?x12932 (* ?x12931 l_0_7_32)))
 (let ((?x12784 (* l_0_7_3 l_0_7_3)))
 (let ((?x12781 (* l_0_7_2 l_0_7_2)))
 (let ((?x12926 (* l_0_7_18 l_0_7_18)))
 (let ((?x12927 (* 4.0 ?x12926)))
 (let ((?x5105 (* l_0_7_17 l_0_7_17)))
 (let ((?x12925 (* 4.0 ?x5105)))
 (= (- (- (- (- (+ ?x12925 ?x12927) ?x12781) ?x12784) ?x12932) ?x12935) 0.0))))))))))))
(assert
 (let ((?x12962 (* 8.0 l_0_7_33)))
 (let ((?x12963 (* ?x12962 l_0_7_35)))
 (let ((?x12956 (* 8.0 l_0_7_32)))
 (let ((?x12957 (* ?x12956 l_0_7_34)))
 (let ((?x12810 (* 2.0 l_0_7_3)))
 (let ((?x12811 (* ?x12810 l_0_7_5)))
 (let ((?x12807 (* 2.0 l_0_7_2)))
 (let ((?x12808 (* ?x12807 l_0_7_4)))
 (let ((?x12926 (* l_0_7_18 l_0_7_18)))
 (let ((?x12952 (* 2.0 ?x12926)))
 (let ((?x12949 (* 8.0 l_0_7_18)))
 (let ((?x12950 (* ?x12949 l_0_7_20)))
 (let ((?x5105 (* l_0_7_17 l_0_7_17)))
 (let ((?x12947 (* 2.0 ?x5105)))
 (let ((?x12945 (* 8.0 l_0_7_17)))
 (let ((?x12946 (* ?x12945 l_0_7_19)))
 (let ((?x12961 (- (- (- (- (+ (+ (+ ?x12946 ?x12947) ?x12950) ?x12952) ?x12808) ?x12811) ?x12957) (* (* 2.0 l_0_7_32) l_0_7_32))))
 (= (- (- ?x12961 ?x12963) (* (* 2.0 l_0_7_33) l_0_7_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x13000 (* l_0_7_48 l_0_7_48)))
 (let ((?x12998 (* l_0_7_47 l_0_7_47)))
 (let ((?x12934 (* 4.0 l_0_7_33)))
 (let ((?x12935 (* ?x12934 l_0_7_33)))
 (let ((?x12962 (* 8.0 l_0_7_33)))
 (let ((?x12995 (* ?x12962 l_0_7_38)))
 (let ((?x12931 (* 4.0 l_0_7_32)))
 (let ((?x12932 (* ?x12931 l_0_7_32)))
 (let ((?x12956 (* 8.0 l_0_7_32)))
 (let ((?x12992 (* ?x12956 l_0_7_37)))
 (let ((?x12810 (* 2.0 l_0_7_3)))
 (let ((?x12853 (* ?x12810 l_0_7_8)))
 (let ((?x12807 (* 2.0 l_0_7_2)))
 (let ((?x12851 (* ?x12807 l_0_7_7)))
 (let ((?x12926 (* l_0_7_18 l_0_7_18)))
 (let ((?x12927 (* 4.0 ?x12926)))
 (let ((?x12949 (* 8.0 l_0_7_18)))
 (let ((?x12987 (* ?x12949 l_0_7_23)))
 (let ((?x5105 (* l_0_7_17 l_0_7_17)))
 (let ((?x12925 (* 4.0 ?x5105)))
 (let ((?x12945 (* 8.0 l_0_7_17)))
 (let ((?x12985 (* ?x12945 l_0_7_22)))
 (let ((?x12994 (- (- (- (- (+ (+ (+ ?x12985 ?x12925) ?x12987) ?x12927) ?x12851) ?x12853) ?x12992) ?x12932)))
 (= (- (- (- (- ?x12994 ?x12995) ?x12935) ?x12998) ?x13000) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5119 (* l_0_7_33 l_0_7_33)))
 (let ((?x4102 (* 2.0 ?x5119)))
 (let ((?x12962 (* 8.0 l_0_7_33)))
 (let ((?x13036 (* ?x12962 l_0_7_42)))
 (let ((?x5114 (* l_0_7_32 l_0_7_32)))
 (let ((?x4095 (* 2.0 ?x5114)))
 (let ((?x12956 (* 8.0 l_0_7_32)))
 (let ((?x13033 (* ?x12956 l_0_7_41)))
 (let ((?x12949 (* 8.0 l_0_7_18)))
 (let ((?x13028 (* ?x12949 l_0_7_27)))
 (let ((?x12945 (* 8.0 l_0_7_17)))
 (let ((?x13023 (* ?x12945 l_0_7_26)))
 (let ((?x12888 (* 2.0 l_0_7_12)))
 (let ((?x12889 (* ?x12888 l_0_7_3)))
 (let ((?x13027 (- (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x12889) ?x13023) (* (* 2.0 l_0_7_17) l_0_7_17))))
 (let ((?x13035 (+ (- (- (+ ?x13027 ?x13028) (* (* 2.0 l_0_7_18) l_0_7_18)) ?x13033) ?x4095)))
 (= (+ (- ?x13035 ?x13036) ?x4102) 0.0))))))))))))))))))
(assert
 (let ((?x13099 (* l_0_7_6 l_0_7_6)))
 (let ((?x13097 (* l_0_7_5 l_0_7_5)))
 (let ((?x13095 (* l_0_7_4 l_0_7_4)))
 (let ((?x13092 (* 4.0 l_0_7_36)))
 (let ((?x13093 (* ?x13092 l_0_7_36)))
 (let ((?x13089 (* 4.0 l_0_7_35)))
 (let ((?x13090 (* ?x13089 l_0_7_35)))
 (let ((?x13086 (* 4.0 l_0_7_34)))
 (let ((?x13087 (* ?x13086 l_0_7_34)))
 (let ((?x12934 (* 4.0 l_0_7_33)))
 (let ((?x13084 (* ?x12934 l_0_7_35)))
 (let ((?x12931 (* 4.0 l_0_7_32)))
 (let ((?x13082 (* ?x12931 l_0_7_34)))
 (let ((?x13079 (* 2.0 l_0_7_31)))
 (let ((?x13080 (* ?x13079 l_0_7_32)))
 (let ((?x13076 (* l_0_7_21 l_0_7_21)))
 (let ((?x13077 (* 4.0 ?x13076)))
 (let ((?x13073 (* l_0_7_20 l_0_7_20)))
 (let ((?x13074 (* 4.0 ?x13073)))
 (let ((?x13070 (* l_0_7_19 l_0_7_19)))
 (let ((?x13071 (* 4.0 ?x13070)))
 (let ((?x13067 (* 4.0 l_0_7_18)))
 (let ((?x13068 (* ?x13067 l_0_7_20)))
 (let ((?x13064 (* 4.0 l_0_7_17)))
 (let ((?x13065 (* ?x13064 l_0_7_19)))
 (let ((?x13075 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_16) l_0_7_17) ?x13065) ?x13068) ?x13071) ?x13074)))
 (let ((?x13094 (- (- (- (- (- (+ (+ ?x13075 ?x13077) ?x13080) ?x13082) ?x13084) ?x13087) ?x13090) ?x13093)))
 (= (- (- (- ?x13094 ?x13095) ?x13097) ?x13099) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x13171 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x13168 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x13159 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x13155 (* 8.0 l_0_7_36)))
 (let ((?x13156 (* ?x13155 l_0_7_39)))
 (let ((?x13152 (* 8.0 l_0_7_35)))
 (let ((?x13153 (* ?x13152 l_0_7_38)))
 (let ((?x13149 (* 8.0 l_0_7_34)))
 (let ((?x13150 (* ?x13149 l_0_7_37)))
 (let ((?x12934 (* 4.0 l_0_7_33)))
 (let ((?x13147 (* ?x12934 l_0_7_38)))
 (let ((?x12962 (* 8.0 l_0_7_33)))
 (let ((?x12963 (* ?x12962 l_0_7_35)))
 (let ((?x12931 (* 4.0 l_0_7_32)))
 (let ((?x13144 (* ?x12931 l_0_7_37)))
 (let ((?x12956 (* 8.0 l_0_7_32)))
 (let ((?x12957 (* ?x12956 l_0_7_34)))
 (let ((?x13140 (* 8.0 l_0_7_21)))
 (let ((?x13141 (* ?x13140 l_0_7_24)))
 (let ((?x13137 (* 8.0 l_0_7_20)))
 (let ((?x13138 (* ?x13137 l_0_7_23)))
 (let ((?x13134 (* 8.0 l_0_7_19)))
 (let ((?x13135 (* ?x13134 l_0_7_22)))
 (let ((?x13067 (* 4.0 l_0_7_18)))
 (let ((?x13132 (* ?x13067 l_0_7_23)))
 (let ((?x12949 (* 8.0 l_0_7_18)))
 (let ((?x12950 (* ?x12949 l_0_7_20)))
 (let ((?x13064 (* 4.0 l_0_7_17)))
 (let ((?x13129 (* ?x13064 l_0_7_22)))
 (let ((?x12945 (* 8.0 l_0_7_17)))
 (let ((?x12946 (* ?x12945 l_0_7_19)))
 (let ((?x13143 (- (+ (+ (+ (+ (+ (+ ?x12946 ?x13129) ?x12950) ?x13132) ?x13135) ?x13138) ?x13141) ?x12957)))
 (let ((?x13160 (- (- (- (- (- (- (- ?x13143 ?x13144) ?x12963) ?x13147) ?x13150) ?x13153) ?x13156) ?x13159)))
 (let ((?x13166 (- (- ?x13160 (* (* 2.0 l_0_7_47) l_0_7_49)) (* (* 2.0 l_0_7_48) l_0_7_50))))
 (= (- (- ?x13166 ?x13168) ?x13171) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13155 (* 8.0 l_0_7_36)))
 (let ((?x13242 (* ?x13155 l_0_7_43)))
 (let ((?x13152 (* 8.0 l_0_7_35)))
 (let ((?x13240 (* ?x13152 l_0_7_42)))
 (let ((?x13149 (* 8.0 l_0_7_34)))
 (let ((?x13238 (* ?x13149 l_0_7_41)))
 (let ((?x12934 (* 4.0 l_0_7_33)))
 (let ((?x13236 (* ?x12934 l_0_7_42)))
 (let ((?x13084 (* ?x12934 l_0_7_35)))
 (let ((?x12931 (* 4.0 l_0_7_32)))
 (let ((?x13233 (* ?x12931 l_0_7_41)))
 (let ((?x13082 (* ?x12931 l_0_7_34)))
 (let ((?x13140 (* 8.0 l_0_7_21)))
 (let ((?x13230 (* ?x13140 l_0_7_28)))
 (let ((?x13137 (* 8.0 l_0_7_20)))
 (let ((?x13228 (* ?x13137 l_0_7_27)))
 (let ((?x13134 (* 8.0 l_0_7_19)))
 (let ((?x13226 (* ?x13134 l_0_7_26)))
 (let ((?x13067 (* 4.0 l_0_7_18)))
 (let ((?x13224 (* ?x13067 l_0_7_27)))
 (let ((?x13068 (* ?x13067 l_0_7_20)))
 (let ((?x13064 (* 4.0 l_0_7_17)))
 (let ((?x13221 (* ?x13064 l_0_7_26)))
 (let ((?x13065 (* ?x13064 l_0_7_19)))
 (let ((?x13217 (* 2.0 l_0_7_13)))
 (let ((?x13218 (* ?x13217 l_0_7_6)))
 (let ((?x12888 (* 2.0 l_0_7_12)))
 (let ((?x13215 (* ?x12888 l_0_7_5)))
 (let ((?x13222 (+ (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x13215) ?x13218) ?x13065) ?x13221)))
 (let ((?x13234 (- (+ (+ (+ (+ (+ (- ?x13222 ?x13068) ?x13224) ?x13226) ?x13228) ?x13230) ?x13082) ?x13233)))
 (= (- (- (- (- (+ ?x13234 ?x13084) ?x13236) ?x13238) ?x13240) ?x13242) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x13311 (* l_0_7_9 l_0_7_9)))
 (let ((?x13309 (* l_0_7_8 l_0_7_8)))
 (let ((?x13307 (* l_0_7_7 l_0_7_7)))
 (let ((?x13300 (* 4.0 l_0_7_40)))
 (let ((?x13301 (* ?x13300 l_0_7_40)))
 (let ((?x13297 (* 4.0 l_0_7_39)))
 (let ((?x13298 (* ?x13297 l_0_7_39)))
 (let ((?x13294 (* 4.0 l_0_7_38)))
 (let ((?x13295 (* ?x13294 l_0_7_38)))
 (let ((?x13291 (* 4.0 l_0_7_37)))
 (let ((?x13292 (* ?x13291 l_0_7_37)))
 (let ((?x12962 (* 8.0 l_0_7_33)))
 (let ((?x12995 (* ?x12962 l_0_7_38)))
 (let ((?x12956 (* 8.0 l_0_7_32)))
 (let ((?x12992 (* ?x12956 l_0_7_37)))
 (let ((?x13286 (* l_0_7_25 l_0_7_25)))
 (let ((?x13287 (* 4.0 ?x13286)))
 (let ((?x13283 (* l_0_7_24 l_0_7_24)))
 (let ((?x13284 (* 4.0 ?x13283)))
 (let ((?x13280 (* l_0_7_23 l_0_7_23)))
 (let ((?x13281 (* 4.0 ?x13280)))
 (let ((?x13277 (* l_0_7_22 l_0_7_22)))
 (let ((?x13278 (* 4.0 ?x13277)))
 (let ((?x12949 (* 8.0 l_0_7_18)))
 (let ((?x12987 (* ?x12949 l_0_7_23)))
 (let ((?x13276 (+ (+ (* (- l_0_7_10) l_0_7_10) (* (* 8.0 l_0_7_17) l_0_7_22)) ?x12987)))
 (let ((?x13293 (- (- (- (+ (+ (+ (+ ?x13276 ?x13278) ?x13281) ?x13284) ?x13287) ?x12992) ?x12995) ?x13292)))
 (let ((?x13304 (- (- (- (- ?x13293 ?x13295) ?x13298) ?x13301) (* (* 2.0 l_0_7_47) l_0_7_52))))
 (let ((?x13312 (- (- (- (- ?x13304 (* (* 2.0 l_0_7_48) l_0_7_53)) ?x13307) ?x13309) ?x13311)))
 (= ?x13312 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x13363 (* (* 8.0 l_0_7_40) l_0_7_44)))
 (let ((?x13360 (* (* 8.0 l_0_7_39) l_0_7_43)))
 (let ((?x13357 (* (* 8.0 l_0_7_38) l_0_7_42)))
 (let ((?x13354 (* (* 8.0 l_0_7_37) l_0_7_41)))
 (let ((?x12962 (* 8.0 l_0_7_33)))
 (let ((?x13036 (* ?x12962 l_0_7_42)))
 (let ((?x12934 (* 4.0 l_0_7_33)))
 (let ((?x13147 (* ?x12934 l_0_7_38)))
 (let ((?x12956 (* 8.0 l_0_7_32)))
 (let ((?x13033 (* ?x12956 l_0_7_41)))
 (let ((?x12931 (* 4.0 l_0_7_32)))
 (let ((?x13144 (* ?x12931 l_0_7_37)))
 (let ((?x13347 (* (* 8.0 l_0_7_25) l_0_7_29)))
 (let ((?x13344 (* (* 8.0 l_0_7_24) l_0_7_28)))
 (let ((?x13341 (* (* 8.0 l_0_7_23) l_0_7_27)))
 (let ((?x5446 (* (* 8.0 l_0_7_22) l_0_7_26)))
 (let ((?x12949 (* 8.0 l_0_7_18)))
 (let ((?x13028 (* ?x12949 l_0_7_27)))
 (let ((?x13067 (* 4.0 l_0_7_18)))
 (let ((?x13132 (* ?x13067 l_0_7_23)))
 (let ((?x12945 (* 8.0 l_0_7_17)))
 (let ((?x13023 (* ?x12945 l_0_7_26)))
 (let ((?x13064 (* 4.0 l_0_7_17)))
 (let ((?x13129 (* ?x13064 l_0_7_22)))
 (let ((?x13217 (* 2.0 l_0_7_13)))
 (let ((?x5435 (* ?x13217 l_0_7_9)))
 (let ((?x12888 (* 2.0 l_0_7_12)))
 (let ((?x5113 (* ?x12888 l_0_7_8)))
 (let ((?x12885 (* 2.0 l_0_7_11)))
 (let ((?x5103 (* ?x12885 l_0_7_7)))
 (let ((?x5443 (- (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x5103) ?x5113) ?x5435) ?x13129)))
 (let ((?x13348 (+ (+ (+ (+ (+ (- (+ ?x5443 ?x13023) ?x13132) ?x13028) ?x5446) ?x13341) ?x13344) ?x13347)))
 (let ((?x13361 (- (- (- (- (+ (- (+ ?x13348 ?x13144) ?x13033) ?x13147) ?x13036) ?x13354) ?x13357) ?x13360)))
 (let ((?x13368 (- (- (- ?x13361 ?x13363) (* (* 2.0 l_0_7_47) l_0_7_56)) (* (* 2.0 l_0_7_48) l_0_7_57))))
 (= ?x13368 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13450 (* (* 4.0 l_0_7_45) l_0_7_45)))
 (let ((?x13447 (* (* 4.0 l_0_7_44) l_0_7_44)))
 (let ((?x13444 (* (* 4.0 l_0_7_43) l_0_7_43)))
 (let ((?x13441 (* (* 4.0 l_0_7_42) l_0_7_42)))
 (let ((?x13438 (* (* 4.0 l_0_7_41) l_0_7_41)))
 (let ((?x12934 (* 4.0 l_0_7_33)))
 (let ((?x13236 (* ?x12934 l_0_7_42)))
 (let ((?x12931 (* 4.0 l_0_7_32)))
 (let ((?x13233 (* ?x12931 l_0_7_41)))
 (let ((?x13079 (* 2.0 l_0_7_31)))
 (let ((?x13080 (* ?x13079 l_0_7_32)))
 (let ((?x13431 (* l_0_7_30 l_0_7_30)))
 (let ((?x13432 (* 4.0 ?x13431)))
 (let ((?x13428 (* l_0_7_29 l_0_7_29)))
 (let ((?x13429 (* 4.0 ?x13428)))
 (let ((?x13425 (* l_0_7_28 l_0_7_28)))
 (let ((?x13426 (* 4.0 ?x13425)))
 (let ((?x13422 (* l_0_7_27 l_0_7_27)))
 (let ((?x13423 (* 4.0 ?x13422)))
 (let ((?x13419 (* l_0_7_26 l_0_7_26)))
 (let ((?x13420 (* 4.0 ?x13419)))
 (let ((?x13067 (* 4.0 l_0_7_18)))
 (let ((?x13224 (* ?x13067 l_0_7_27)))
 (let ((?x13064 (* 4.0 l_0_7_17)))
 (let ((?x13221 (* ?x13064 l_0_7_26)))
 (let ((?x13412 (* l_0_7_15 l_0_7_15)))
 (let ((?x13410 (* l_0_7_14 l_0_7_14)))
 (let ((?x13408 (* l_0_7_13 l_0_7_13)))
 (let ((?x13411 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x13408) ?x13410)))
 (let ((?x13418 (- (- (+ (- ?x13411 ?x13412) (* (* 2.0 l_0_7_16) l_0_7_17)) ?x13221) ?x13224)))
 (let ((?x13435 (+ (- (+ (+ (+ (+ (+ ?x13418 ?x13420) ?x13423) ?x13426) ?x13429) ?x13432) ?x13080) ?x13233)))
 (= (- (- (- (- (- (+ ?x13435 ?x13236) ?x13438) ?x13441) ?x13444) ?x13447) ?x13450) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x12744 (* l_0_7_16 l_0_7_16)))
 (let ((?x13468 (* 2.0 ?x12744)))
 (let ((?x13471 (- (+ (* (* 2.0 l_0_7_1) l_0_7_4) ?x13468) (* (* 2.0 l_0_7_31) l_0_7_31))))
 (= (- ?x13471 (* (* 2.0 l_0_7_61) l_0_7_64)) 0.0)))))
(assert
 (let ((?x13485 (* l_0_7_46 l_0_7_46)))
 (let ((?x12747 (* 4.0 l_0_7_31)))
 (let ((?x12748 (* ?x12747 l_0_7_31)))
 (let ((?x12744 (* l_0_7_16 l_0_7_16)))
 (let ((?x12745 (* 4.0 ?x12744)))
 (let ((?x13488 (- (- (- (+ (* (* 2.0 l_0_7_1) l_0_7_7) ?x12745) ?x12748) ?x13485) (* (* 2.0 l_0_7_61) l_0_7_67))))
 (= ?x13488 0.0))))))))
(assert
 (let ((?x12760 (* l_0_7_31 l_0_7_31)))
 (let ((?x5765 (* 2.0 ?x12760)))
 (let ((?x13498 (- (* (* 2.0 l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_16) l_0_7_16))))
 (= (- (+ ?x13498 ?x5765) (* (* 2.0 l_0_7_61) l_0_7_71)) 0.0)))))
(assert
 (let ((?x13526 (* l_0_7_66 l_0_7_66)))
 (let ((?x13524 (* l_0_7_65 l_0_7_65)))
 (let ((?x13522 (* l_0_7_64 l_0_7_64)))
 (let ((?x12760 (* l_0_7_31 l_0_7_31)))
 (let ((?x12747 (* 4.0 l_0_7_31)))
 (let ((?x13513 (* ?x12747 l_0_7_34)))
 (let ((?x13514 (- (- (* (* 4.0 l_0_7_16) l_0_7_19) (* l_0_7_16 l_0_7_16)) ?x13513)))
 (let ((?x13519 (+ (+ (+ ?x13514 ?x12760) (* 1.0 (* l_0_7_4 l_0_7_4))) (* 1.0 (* l_0_7_5 l_0_7_5)))))
 (let ((?x13527 (- (- (- (+ ?x13519 (* 1.0 (* l_0_7_6 l_0_7_6))) ?x13522) ?x13524) ?x13526)))
 (= ?x13527 0.0)))))))))))
(assert
 (let ((?x13171 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x13168 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x13159 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x12747 (* 4.0 l_0_7_31)))
 (let ((?x13545 (* ?x12747 l_0_7_37)))
 (let ((?x12787 (* 8.0 l_0_7_31)))
 (let ((?x12815 (* ?x12787 l_0_7_34)))
 (let ((?x4946 (* 4.0 l_0_7_16)))
 (let ((?x13542 (* ?x4946 l_0_7_22)))
 (let ((?x12778 (* 8.0 l_0_7_16)))
 (let ((?x12805 (* ?x12778 l_0_7_19)))
 (let ((?x13549 (- (+ (- (- (+ ?x12805 ?x13542) ?x12815) ?x13545) ?x13159) (* (* 2.0 l_0_7_46) l_0_7_49))))
 (let ((?x13557 (- (- (+ (+ ?x13549 ?x13168) ?x13171) (* (* 2.0 l_0_7_64) l_0_7_67)) (* (* 2.0 l_0_7_65) l_0_7_68))))
 (= (- ?x13557 (* (* 2.0 l_0_7_66) l_0_7_69)) 0.0)))))))))))))))
(assert
 (let ((?x12747 (* 4.0 l_0_7_31)))
 (let ((?x13583 (* ?x12747 l_0_7_41)))
 (let ((?x13513 (* ?x12747 l_0_7_34)))
 (let ((?x4946 (* 4.0 l_0_7_16)))
 (let ((?x13580 (* ?x4946 l_0_7_26)))
 (let ((?x5813 (* ?x4946 l_0_7_19)))
 (let ((?x13217 (* 2.0 l_0_7_13)))
 (let ((?x13218 (* ?x13217 l_0_7_6)))
 (let ((?x12888 (* 2.0 l_0_7_12)))
 (let ((?x13215 (* ?x12888 l_0_7_5)))
 (let ((?x13581 (+ (- (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x13215) ?x13218) ?x5813) ?x13580)))
 (let ((?x13588 (- (- (- (+ ?x13581 ?x13513) ?x13583) (* (* 2.0 l_0_7_64) l_0_7_71)) (* (* 2.0 l_0_7_65) l_0_7_72))))
 (= (- ?x13588 (* (* 2.0 l_0_7_66) l_0_7_73)) 0.0))))))))))))))
(assert
 (let ((?x13616 (* l_0_7_70 l_0_7_70)))
 (let ((?x13612 (* l_0_7_69 l_0_7_69)))
 (let ((?x13610 (* l_0_7_68 l_0_7_68)))
 (let ((?x13608 (* l_0_7_67 l_0_7_67)))
 (let ((?x12787 (* 8.0 l_0_7_31)))
 (let ((?x12856 (* ?x12787 l_0_7_37)))
 (let ((?x12778 (* 8.0 l_0_7_16)))
 (let ((?x12849 (* ?x12778 l_0_7_22)))
 (let ((?x13607 (- (- (+ (* 1.0 (* l_0_7_10 l_0_7_10)) ?x12849) ?x12856) (* (* 2.0 l_0_7_46) l_0_7_52))))
 (let ((?x13615 (+ (- (- (- ?x13607 ?x13608) ?x13610) ?x13612) (* 1.0 (* l_0_7_7 l_0_7_7)))))
 (let ((?x13621 (+ (+ (- ?x13615 ?x13616) (* 1.0 (* l_0_7_8 l_0_7_8))) (* 1.0 (* l_0_7_9 l_0_7_9)))))
 (= ?x13621 0.0)))))))))))))
(assert
 (let ((?x12787 (* 8.0 l_0_7_31)))
 (let ((?x12895 (* ?x12787 l_0_7_41)))
 (let ((?x12747 (* 4.0 l_0_7_31)))
 (let ((?x13545 (* ?x12747 l_0_7_37)))
 (let ((?x12778 (* 8.0 l_0_7_16)))
 (let ((?x12892 (* ?x12778 l_0_7_26)))
 (let ((?x4946 (* 4.0 l_0_7_16)))
 (let ((?x13542 (* ?x4946 l_0_7_22)))
 (let ((?x13217 (* 2.0 l_0_7_13)))
 (let ((?x5435 (* ?x13217 l_0_7_9)))
 (let ((?x12888 (* 2.0 l_0_7_12)))
 (let ((?x5113 (* ?x12888 l_0_7_8)))
 (let ((?x12885 (* 2.0 l_0_7_11)))
 (let ((?x5103 (* ?x12885 l_0_7_7)))
 (let ((?x13634 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x5103) ?x5113) ?x5435) ?x13542)))
 (let ((?x13639 (- (- (+ (+ ?x13634 ?x12892) ?x13545) ?x12895) (* (* 2.0 l_0_7_46) l_0_7_56))))
 (let ((?x13645 (- (- ?x13639 (* (* 2.0 l_0_7_67) l_0_7_71)) (* (* 2.0 l_0_7_68) l_0_7_72))))
 (let ((?x13651 (- (- ?x13645 (* (* 2.0 l_0_7_69) l_0_7_73)) (* (* 2.0 l_0_7_70) l_0_7_74))))
 (= ?x13651 0.0))))))))))))))))))))
(assert
 (let ((?x13683 (* l_0_7_75 l_0_7_75)))
 (let ((?x13681 (* l_0_7_74 l_0_7_74)))
 (let ((?x13679 (* l_0_7_73 l_0_7_73)))
 (let ((?x13677 (* l_0_7_72 l_0_7_72)))
 (let ((?x13675 (* l_0_7_71 l_0_7_71)))
 (let ((?x12760 (* l_0_7_31 l_0_7_31)))
 (let ((?x12747 (* 4.0 l_0_7_31)))
 (let ((?x13583 (* ?x12747 l_0_7_41)))
 (let ((?x12744 (* l_0_7_16 l_0_7_16)))
 (let ((?x4946 (* 4.0 l_0_7_16)))
 (let ((?x13580 (* ?x4946 l_0_7_26)))
 (let ((?x13664 (+ (* 1.0 (* l_0_7_11 l_0_7_11)) (* 1.0 (* l_0_7_12 l_0_7_12)))))
 (let ((?x13668 (+ (+ ?x13664 (* 1.0 (* l_0_7_13 l_0_7_13))) (* 1.0 (* l_0_7_14 l_0_7_14)))))
 (let ((?x13673 (+ (+ (- (+ ?x13668 (* 1.0 (* l_0_7_15 l_0_7_15))) ?x13580) ?x12744) ?x13583)))
 (= (- (- (- (- (- (- ?x13673 ?x12760) ?x13675) ?x13677) ?x13679) ?x13681) ?x13683) 0.0))))))))))))))))
(assert
 (let ((?x13079 (* 2.0 l_0_7_31)))
 (let ((?x13703 (* ?x13079 l_0_7_34)))
 (let ((?x13698 (+ (* (* (- 2.0) l_0_7_16) l_0_7_19) (* 2.0 (* l_0_7_19 l_0_7_19)))))
 (let ((?x13702 (+ (+ ?x13698 (* 2.0 (* l_0_7_20 l_0_7_20))) (* 2.0 (* l_0_7_21 l_0_7_21)))))
 (let ((?x13710 (- (- (+ ?x13702 ?x13703) (* (* 2.0 l_0_7_34) l_0_7_34)) (* (* 2.0 l_0_7_35) l_0_7_35))))
 (= (- ?x13710 (* (* 2.0 l_0_7_36) l_0_7_36)) 0.0)))))))
(assert
 (let ((?x13757 (* l_0_7_51 l_0_7_51)))
 (let ((?x13755 (* l_0_7_50 l_0_7_50)))
 (let ((?x13753 (* l_0_7_49 l_0_7_49)))
 (let ((?x13092 (* 4.0 l_0_7_36)))
 (let ((?x13093 (* ?x13092 l_0_7_36)))
 (let ((?x13750 (* ?x13092 l_0_7_39)))
 (let ((?x13089 (* 4.0 l_0_7_35)))
 (let ((?x13090 (* ?x13089 l_0_7_35)))
 (let ((?x13747 (* ?x13089 l_0_7_38)))
 (let ((?x13086 (* 4.0 l_0_7_34)))
 (let ((?x13087 (* ?x13086 l_0_7_34)))
 (let ((?x13744 (* ?x13086 l_0_7_37)))
 (let ((?x13079 (* 2.0 l_0_7_31)))
 (let ((?x13742 (* ?x13079 l_0_7_37)))
 (let ((?x13076 (* l_0_7_21 l_0_7_21)))
 (let ((?x13077 (* 4.0 ?x13076)))
 (let ((?x13738 (* 4.0 l_0_7_21)))
 (let ((?x13739 (* ?x13738 l_0_7_24)))
 (let ((?x13073 (* l_0_7_20 l_0_7_20)))
 (let ((?x13074 (* 4.0 ?x13073)))
 (let ((?x13734 (* 4.0 l_0_7_20)))
 (let ((?x13735 (* ?x13734 l_0_7_23)))
 (let ((?x13070 (* l_0_7_19 l_0_7_19)))
 (let ((?x13071 (* 4.0 ?x13070)))
 (let ((?x13732 (+ (* (* (- 2.0) l_0_7_16) l_0_7_22) (* (* 4.0 l_0_7_19) l_0_7_22))))
 (let ((?x13745 (- (+ (+ (+ (+ (+ (+ ?x13732 ?x13071) ?x13735) ?x13074) ?x13739) ?x13077) ?x13742) ?x13744)))
 (let ((?x13756 (- (- (- (- (- (- (- ?x13745 ?x13087) ?x13747) ?x13090) ?x13750) ?x13093) ?x13753) ?x13755)))
 (= (- ?x13756 ?x13757) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x13117 (* l_0_7_36 l_0_7_36)))
 (let ((?x13720 (* 2.0 ?x13117)))
 (let ((?x13092 (* 4.0 l_0_7_36)))
 (let ((?x13807 (* ?x13092 l_0_7_43)))
 (let ((?x5233 (* l_0_7_35 l_0_7_35)))
 (let ((?x13715 (* 2.0 ?x5233)))
 (let ((?x13089 (* 4.0 l_0_7_35)))
 (let ((?x13804 (* ?x13089 l_0_7_42)))
 (let ((?x5229 (* l_0_7_34 l_0_7_34)))
 (let ((?x6264 (* 2.0 ?x5229)))
 (let ((?x13086 (* 4.0 l_0_7_34)))
 (let ((?x13801 (* ?x13086 l_0_7_41)))
 (let ((?x13079 (* 2.0 l_0_7_31)))
 (let ((?x13799 (* ?x13079 l_0_7_41)))
 (let ((?x13738 (* 4.0 l_0_7_21)))
 (let ((?x13794 (* ?x13738 l_0_7_28)))
 (let ((?x13734 (* 4.0 l_0_7_20)))
 (let ((?x13789 (* ?x13734 l_0_7_27)))
 (let ((?x13730 (* 4.0 l_0_7_19)))
 (let ((?x13784 (* ?x13730 l_0_7_26)))
 (let ((?x13788 (- (+ (* (* (- 2.0) l_0_7_16) l_0_7_26) ?x13784) (* (* 2.0 l_0_7_19) l_0_7_19))))
 (let ((?x13798 (- (+ (- (+ ?x13788 ?x13789) (* (* 2.0 l_0_7_20) l_0_7_20)) ?x13794) (* (* 2.0 l_0_7_21) l_0_7_21))))
 (let ((?x13809 (+ (- (+ (- (+ (- (+ ?x13798 ?x13799) ?x13801) ?x6264) ?x13804) ?x13715) ?x13807) ?x13720)))
 (= ?x13809 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5119 (* l_0_7_33 l_0_7_33)))
 (let ((?x5114 (* l_0_7_32 l_0_7_32)))
 (let ((?x13839 (+ (+ (- (* (- l_0_7_17) l_0_7_17) (* l_0_7_18 l_0_7_18)) ?x5114) ?x5119)))
 (= ?x13839 0.0)))))
(assert
 (let ((?x12965 (* 2.0 l_0_7_33)))
 (let ((?x13852 (* ?x12965 l_0_7_35)))
 (let ((?x12959 (* 2.0 l_0_7_32)))
 (let ((?x13850 (* ?x12959 l_0_7_34)))
 (let ((?x13030 (* 2.0 l_0_7_18)))
 (let ((?x13848 (* ?x13030 l_0_7_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_19) ?x13848) ?x13850) ?x13852) 0.0))))))))
(assert
 (let ((?x12965 (* 2.0 l_0_7_33)))
 (let ((?x13867 (* ?x12965 l_0_7_38)))
 (let ((?x12959 (* 2.0 l_0_7_32)))
 (let ((?x13865 (* ?x12959 l_0_7_37)))
 (let ((?x13030 (* 2.0 l_0_7_18)))
 (let ((?x13863 (* ?x13030 l_0_7_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_22) ?x13863) ?x13865) ?x13867) 0.0))))))))
(assert
 (let ((?x12965 (* 2.0 l_0_7_33)))
 (let ((?x13886 (* ?x12965 l_0_7_42)))
 (let ((?x12959 (* 2.0 l_0_7_32)))
 (let ((?x13884 (* ?x12959 l_0_7_41)))
 (let ((?x13030 (* 2.0 l_0_7_18)))
 (let ((?x13877 (* ?x13030 l_0_7_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_26) ?x13877) ?x13884) ?x13886) 0.0))))))))
(assert
 (let ((?x13117 (* l_0_7_36 l_0_7_36)))
 (let ((?x5233 (* l_0_7_35 l_0_7_35)))
 (let ((?x5229 (* l_0_7_34 l_0_7_34)))
 (let ((?x13076 (* l_0_7_21 l_0_7_21)))
 (let ((?x13904 (+ (- (- (* (- l_0_7_19) l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x13076) ?x5229)))
 (= (+ (+ ?x13904 ?x5233) ?x13117) 0.0)))))))
(assert
 (let ((?x13711 (* 2.0 l_0_7_36)))
 (let ((?x13927 (* ?x13711 l_0_7_39)))
 (let ((?x13708 (* 2.0 l_0_7_35)))
 (let ((?x13925 (* ?x13708 l_0_7_38)))
 (let ((?x13705 (* 2.0 l_0_7_34)))
 (let ((?x13923 (* ?x13705 l_0_7_37)))
 (let ((?x13796 (* 2.0 l_0_7_21)))
 (let ((?x13921 (* ?x13796 l_0_7_24)))
 (let ((?x13791 (* 2.0 l_0_7_20)))
 (let ((?x13919 (* ?x13791 l_0_7_23)))
 (let ((?x13926 (+ (+ (- (- (* (* (- 2.0) l_0_7_19) l_0_7_22) ?x13919) ?x13921) ?x13923) ?x13925)))
 (= (+ ?x13926 ?x13927) 0.0)))))))))))))
(assert
 (let ((?x13711 (* 2.0 l_0_7_36)))
 (let ((?x13944 (* ?x13711 l_0_7_43)))
 (let ((?x13708 (* 2.0 l_0_7_35)))
 (let ((?x13942 (* ?x13708 l_0_7_42)))
 (let ((?x13705 (* 2.0 l_0_7_34)))
 (let ((?x13940 (* ?x13705 l_0_7_41)))
 (let ((?x13796 (* 2.0 l_0_7_21)))
 (let ((?x6470 (* ?x13796 l_0_7_28)))
 (let ((?x13791 (* 2.0 l_0_7_20)))
 (let ((?x6472 (* ?x13791 l_0_7_27)))
 (let ((?x13943 (+ (+ (- (- (* (* (- 2.0) l_0_7_19) l_0_7_26) ?x6472) ?x6470) ?x13940) ?x13942)))
 (= (+ ?x13943 ?x13944) 0.0)))))))))))))
(assert
 (let ((?x5429 (* l_0_7_40 l_0_7_40)))
 (let ((?x5426 (* l_0_7_39 l_0_7_39)))
 (let ((?x13320 (* l_0_7_38 l_0_7_38)))
 (let ((?x5420 (* l_0_7_37 l_0_7_37)))
 (let ((?x13286 (* l_0_7_25 l_0_7_25)))
 (let ((?x13283 (* l_0_7_24 l_0_7_24)))
 (let ((?x13963 (- (- (- (* (- l_0_7_22) l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x13283) ?x13286)))
 (= (+ (+ (+ (+ ?x13963 ?x5420) ?x13320) ?x5426) ?x5429) 0.0)))))))))
(assert
 (let ((?x13997 (* 2.0 l_0_7_40)))
 (let ((?x13998 (* ?x13997 l_0_7_44)))
 (let ((?x13994 (* 2.0 l_0_7_39)))
 (let ((?x13995 (* ?x13994 l_0_7_43)))
 (let ((?x13991 (* 2.0 l_0_7_38)))
 (let ((?x13992 (* ?x13991 l_0_7_42)))
 (let ((?x13988 (* 2.0 l_0_7_37)))
 (let ((?x13989 (* ?x13988 l_0_7_41)))
 (let ((?x13985 (* 2.0 l_0_7_25)))
 (let ((?x13986 (* ?x13985 l_0_7_29)))
 (let ((?x13982 (* 2.0 l_0_7_24)))
 (let ((?x13983 (* ?x13982 l_0_7_28)))
 (let ((?x13979 (* 2.0 l_0_7_23)))
 (let ((?x13980 (* ?x13979 l_0_7_27)))
 (let ((?x13990 (+ (- (- (- (* (* (- 2.0) l_0_7_22) l_0_7_26) ?x13980) ?x13983) ?x13986) ?x13989)))
 (= (+ (+ (+ ?x13990 ?x13992) ?x13995) ?x13998) 0.0)))))))))))))))))
(assert
 (let ((?x5729 (* l_0_7_45 l_0_7_45)))
 (let ((?x5718 (* l_0_7_44 l_0_7_44)))
 (let ((?x5684 (* l_0_7_43 l_0_7_43)))
 (let ((?x5625 (* l_0_7_42 l_0_7_42)))
 (let ((?x5677 (* l_0_7_41 l_0_7_41)))
 (let ((?x13117 (* l_0_7_36 l_0_7_36)))
 (let ((?x5233 (* l_0_7_35 l_0_7_35)))
 (let ((?x5229 (* l_0_7_34 l_0_7_34)))
 (let ((?x13431 (* l_0_7_30 l_0_7_30)))
 (let ((?x13428 (* l_0_7_29 l_0_7_29)))
 (let ((?x13425 (* l_0_7_28 l_0_7_28)))
 (let ((?x13422 (* l_0_7_27 l_0_7_27)))
 (let ((?x13419 (* l_0_7_26 l_0_7_26)))
 (let ((?x13076 (* l_0_7_21 l_0_7_21)))
 (let ((?x14012 (- (+ (+ (* l_0_7_19 l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x13076) ?x13419)))
 (let ((?x14019 (- (- (- (- (- (- (- ?x14012 ?x13422) ?x13425) ?x13428) ?x13431) ?x5229) ?x5233) ?x13117)))
 (= (+ (+ (+ (+ (+ ?x14019 ?x5677) ?x5625) ?x5684) ?x5718) ?x5729) 0.0))))))))))))))))))
(assert
 (let ((?x13092 (* 4.0 l_0_7_36)))
 (let ((?x13807 (* ?x13092 l_0_7_43)))
 (let ((?x13089 (* 4.0 l_0_7_35)))
 (let ((?x13804 (* ?x13089 l_0_7_42)))
 (let ((?x13086 (* 4.0 l_0_7_34)))
 (let ((?x13801 (* ?x13086 l_0_7_41)))
 (let ((?x13079 (* 2.0 l_0_7_31)))
 (let ((?x13703 (* ?x13079 l_0_7_34)))
 (let ((?x13738 (* 4.0 l_0_7_21)))
 (let ((?x13794 (* ?x13738 l_0_7_28)))
 (let ((?x13734 (* 4.0 l_0_7_20)))
 (let ((?x13789 (* ?x13734 l_0_7_27)))
 (let ((?x13730 (* 4.0 l_0_7_19)))
 (let ((?x13784 (* ?x13730 l_0_7_26)))
 (let ((?x14040 (+ (- (- (- (* (* 2.0 l_0_7_16) l_0_7_19) ?x13784) ?x13789) ?x13794) (* 2.0 (* l_0_7_26 l_0_7_26)))))
 (let ((?x14044 (+ (+ ?x14040 (* 2.0 (* l_0_7_27 l_0_7_27))) (* 2.0 (* l_0_7_28 l_0_7_28)))))
 (let ((?x14048 (+ (+ ?x14044 (* 2.0 (* l_0_7_29 l_0_7_29))) (* 2.0 (* l_0_7_30 l_0_7_30)))))
 (let ((?x14055 (- (+ (+ (+ (- ?x14048 ?x13703) ?x13801) ?x13804) ?x13807) (* (* 2.0 l_0_7_41) l_0_7_41))))
 (let ((?x14061 (- (- ?x14055 (* (* 2.0 l_0_7_42) l_0_7_42)) (* (* 2.0 l_0_7_43) l_0_7_43))))
 (let ((?x14067 (- (- ?x14061 (* (* 2.0 l_0_7_44) l_0_7_44)) (* (* 2.0 l_0_7_45) l_0_7_45))))
 (= ?x14067 0.0))))))))))))))))))))))
(assert
 (let ((?x14141 (* l_0_7_60 l_0_7_60)))
 (let ((?x14139 (* l_0_7_59 l_0_7_59)))
 (let ((?x14137 (* l_0_7_58 l_0_7_58)))
 (let ((?x14135 (* l_0_7_57 l_0_7_57)))
 (let ((?x14133 (* l_0_7_56 l_0_7_56)))
 (let ((?x13450 (* (* 4.0 l_0_7_45) l_0_7_45)))
 (let ((?x13447 (* (* 4.0 l_0_7_44) l_0_7_44)))
 (let ((?x13444 (* (* 4.0 l_0_7_43) l_0_7_43)))
 (let ((?x13441 (* (* 4.0 l_0_7_42) l_0_7_42)))
 (let ((?x13438 (* (* 4.0 l_0_7_41) l_0_7_41)))
 (let ((?x13300 (* 4.0 l_0_7_40)))
 (let ((?x14126 (* ?x13300 l_0_7_44)))
 (let ((?x13297 (* 4.0 l_0_7_39)))
 (let ((?x14124 (* ?x13297 l_0_7_43)))
 (let ((?x13294 (* 4.0 l_0_7_38)))
 (let ((?x14122 (* ?x13294 l_0_7_42)))
 (let ((?x13291 (* 4.0 l_0_7_37)))
 (let ((?x14120 (* ?x13291 l_0_7_41)))
 (let ((?x13079 (* 2.0 l_0_7_31)))
 (let ((?x13742 (* ?x13079 l_0_7_37)))
 (let ((?x13431 (* l_0_7_30 l_0_7_30)))
 (let ((?x13432 (* 4.0 ?x13431)))
 (let ((?x13428 (* l_0_7_29 l_0_7_29)))
 (let ((?x13429 (* 4.0 ?x13428)))
 (let ((?x13425 (* l_0_7_28 l_0_7_28)))
 (let ((?x13426 (* 4.0 ?x13425)))
 (let ((?x13422 (* l_0_7_27 l_0_7_27)))
 (let ((?x13423 (* 4.0 ?x13422)))
 (let ((?x13419 (* l_0_7_26 l_0_7_26)))
 (let ((?x13420 (* 4.0 ?x13419)))
 (let ((?x14112 (* (* 4.0 l_0_7_25) l_0_7_29)))
 (let ((?x14109 (* (* 4.0 l_0_7_24) l_0_7_28)))
 (let ((?x14106 (* (* 4.0 l_0_7_23) l_0_7_27)))
 (let ((?x14103 (* (* 4.0 l_0_7_22) l_0_7_26)))
 (let ((?x14113 (- (- (- (- (* (* 2.0 l_0_7_16) l_0_7_22) ?x14103) ?x14106) ?x14109) ?x14112)))
 (let ((?x14121 (+ (- (+ (+ (+ (+ (+ ?x14113 ?x13420) ?x13423) ?x13426) ?x13429) ?x13432) ?x13742) ?x14120)))
 (let ((?x14131 (- (- (- (- (+ (+ (+ ?x14121 ?x14122) ?x14124) ?x14126) ?x13438) ?x13441) ?x13444) ?x13447)))
 (= (- (- (- (- (- (- ?x14131 ?x13450) ?x14133) ?x14135) ?x14137) ?x14139) ?x14141) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5729 (* l_0_7_45 l_0_7_45)))
 (let ((?x14093 (* 2.0 ?x5729)))
 (let ((?x5718 (* l_0_7_44 l_0_7_44)))
 (let ((?x6632 (* 2.0 ?x5718)))
 (let ((?x5684 (* l_0_7_43 l_0_7_43)))
 (let ((?x6629 (* 2.0 ?x5684)))
 (let ((?x5625 (* l_0_7_42 l_0_7_42)))
 (let ((?x6610 (* 2.0 ?x5625)))
 (let ((?x5677 (* l_0_7_41 l_0_7_41)))
 (let ((?x6608 (* 2.0 ?x5677)))
 (let ((?x13079 (* 2.0 l_0_7_31)))
 (let ((?x13799 (* ?x13079 l_0_7_41)))
 (let ((?x14153 (- (* (* 2.0 l_0_7_16) l_0_7_26) (* (* 2.0 l_0_7_26) l_0_7_26))))
 (let ((?x14159 (- (- ?x14153 (* (* 2.0 l_0_7_27) l_0_7_27)) (* (* 2.0 l_0_7_28) l_0_7_28))))
 (let ((?x14165 (- (- ?x14159 (* (* 2.0 l_0_7_29) l_0_7_29)) (* (* 2.0 l_0_7_30) l_0_7_30))))
 (= (+ (+ (+ (+ (+ (- ?x14165 ?x13799) ?x6608) ?x6610) ?x6629) ?x6632) ?x14093) 0.0)))))))))))))))))
(assert
 (let ((?x5119 (* l_0_7_33 l_0_7_33)))
 (let ((?x5114 (* l_0_7_32 l_0_7_32)))
 (let ((?x6816 (- (- (+ (* l_0_7_17 l_0_7_17) (* l_0_7_18 l_0_7_18)) ?x5114) ?x5119)))
 (= ?x6816 0.0)))))
(assert
 (let ((?x12965 (* 2.0 l_0_7_33)))
 (let ((?x13852 (* ?x12965 l_0_7_35)))
 (let ((?x12959 (* 2.0 l_0_7_32)))
 (let ((?x13850 (* ?x12959 l_0_7_34)))
 (let ((?x13030 (* 2.0 l_0_7_18)))
 (let ((?x13848 (* ?x13030 l_0_7_20)))
 (= (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_19) ?x13848) ?x13850) ?x13852) 0.0))))))))
(assert
 (let ((?x12965 (* 2.0 l_0_7_33)))
 (let ((?x13867 (* ?x12965 l_0_7_38)))
 (let ((?x12959 (* 2.0 l_0_7_32)))
 (let ((?x13865 (* ?x12959 l_0_7_37)))
 (let ((?x13030 (* 2.0 l_0_7_18)))
 (let ((?x13863 (* ?x13030 l_0_7_23)))
 (= (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_22) ?x13863) ?x13865) ?x13867) 0.0))))))))
(assert
 (let ((?x12965 (* 2.0 l_0_7_33)))
 (let ((?x13886 (* ?x12965 l_0_7_42)))
 (let ((?x12959 (* 2.0 l_0_7_32)))
 (let ((?x13884 (* ?x12959 l_0_7_41)))
 (let ((?x13030 (* 2.0 l_0_7_18)))
 (let ((?x13877 (* ?x13030 l_0_7_27)))
 (= (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_26) ?x13877) ?x13884) ?x13886) 0.0))))))))
(assert
 (let ((?x13711 (* 2.0 l_0_7_36)))
 (let ((?x13927 (* ?x13711 l_0_7_39)))
 (let ((?x13708 (* 2.0 l_0_7_35)))
 (let ((?x13925 (* ?x13708 l_0_7_38)))
 (let ((?x13705 (* 2.0 l_0_7_34)))
 (let ((?x13923 (* ?x13705 l_0_7_37)))
 (let ((?x13796 (* 2.0 l_0_7_21)))
 (let ((?x13921 (* ?x13796 l_0_7_24)))
 (let ((?x13791 (* 2.0 l_0_7_20)))
 (let ((?x13919 (* ?x13791 l_0_7_23)))
 (let ((?x14197 (- (- (+ (+ (* (* 2.0 l_0_7_19) l_0_7_22) ?x13919) ?x13921) ?x13923) ?x13925)))
 (= (- ?x14197 ?x13927) 0.0)))))))))))))
(assert
 (let ((?x13711 (* 2.0 l_0_7_36)))
 (let ((?x13944 (* ?x13711 l_0_7_43)))
 (let ((?x13708 (* 2.0 l_0_7_35)))
 (let ((?x13942 (* ?x13708 l_0_7_42)))
 (let ((?x13705 (* 2.0 l_0_7_34)))
 (let ((?x13940 (* ?x13705 l_0_7_41)))
 (let ((?x13796 (* 2.0 l_0_7_21)))
 (let ((?x6470 (* ?x13796 l_0_7_28)))
 (let ((?x13791 (* 2.0 l_0_7_20)))
 (let ((?x6472 (* ?x13791 l_0_7_27)))
 (let ((?x6916 (- (- (+ (+ (* (* 2.0 l_0_7_19) l_0_7_26) ?x6472) ?x6470) ?x13940) ?x13942)))
 (= (- ?x6916 ?x13944) 0.0)))))))))))))
(assert
 (let ((?x5429 (* l_0_7_40 l_0_7_40)))
 (let ((?x5426 (* l_0_7_39 l_0_7_39)))
 (let ((?x13320 (* l_0_7_38 l_0_7_38)))
 (let ((?x5420 (* l_0_7_37 l_0_7_37)))
 (let ((?x13286 (* l_0_7_25 l_0_7_25)))
 (let ((?x13283 (* l_0_7_24 l_0_7_24)))
 (let ((?x6949 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x13283) ?x13286)))
 (= (- (- (- (- ?x6949 ?x5420) ?x13320) ?x5426) ?x5429) 0.0)))))))))
(assert
 (let ((?x13997 (* 2.0 l_0_7_40)))
 (let ((?x13998 (* ?x13997 l_0_7_44)))
 (let ((?x13994 (* 2.0 l_0_7_39)))
 (let ((?x13995 (* ?x13994 l_0_7_43)))
 (let ((?x13991 (* 2.0 l_0_7_38)))
 (let ((?x13992 (* ?x13991 l_0_7_42)))
 (let ((?x13988 (* 2.0 l_0_7_37)))
 (let ((?x13989 (* ?x13988 l_0_7_41)))
 (let ((?x13985 (* 2.0 l_0_7_25)))
 (let ((?x13986 (* ?x13985 l_0_7_29)))
 (let ((?x13982 (* 2.0 l_0_7_24)))
 (let ((?x13983 (* ?x13982 l_0_7_28)))
 (let ((?x13979 (* 2.0 l_0_7_23)))
 (let ((?x13980 (* ?x13979 l_0_7_27)))
 (let ((?x14222 (- (+ (+ (+ (* (* 2.0 l_0_7_22) l_0_7_26) ?x13980) ?x13983) ?x13986) ?x13989)))
 (= (- (- (- ?x14222 ?x13992) ?x13995) ?x13998) 0.0)))))))))))))))))
(assert
 (let ((?x5729 (* l_0_7_45 l_0_7_45)))
 (let ((?x5718 (* l_0_7_44 l_0_7_44)))
 (let ((?x5684 (* l_0_7_43 l_0_7_43)))
 (let ((?x5625 (* l_0_7_42 l_0_7_42)))
 (let ((?x5677 (* l_0_7_41 l_0_7_41)))
 (let ((?x13431 (* l_0_7_30 l_0_7_30)))
 (let ((?x13428 (* l_0_7_29 l_0_7_29)))
 (let ((?x13425 (* l_0_7_28 l_0_7_28)))
 (let ((?x14236 (+ (+ (+ (* l_0_7_26 l_0_7_26) (* l_0_7_27 l_0_7_27)) ?x13425) ?x13428)))
 (= (- (- (- (- (- (+ ?x14236 ?x13431) ?x5677) ?x5625) ?x5684) ?x5718) ?x5729) 0.0)))))))))))
(assert
 (let ((?x13155 (* 8.0 l_0_7_36)))
 (let ((?x13156 (* ?x13155 l_0_7_39)))
 (let ((?x13152 (* 8.0 l_0_7_35)))
 (let ((?x13153 (* ?x13152 l_0_7_38)))
 (let ((?x13149 (* 8.0 l_0_7_34)))
 (let ((?x13150 (* ?x13149 l_0_7_37)))
 (let ((?x13286 (* l_0_7_25 l_0_7_25)))
 (let ((?x14253 (* 2.0 ?x13286)))
 (let ((?x13283 (* l_0_7_24 l_0_7_24)))
 (let ((?x14251 (* 2.0 ?x13283)))
 (let ((?x13280 (* l_0_7_23 l_0_7_23)))
 (let ((?x14249 (* 2.0 ?x13280)))
 (let ((?x13277 (* l_0_7_22 l_0_7_22)))
 (let ((?x14247 (* 2.0 ?x13277)))
 (let ((?x13140 (* 8.0 l_0_7_21)))
 (let ((?x13141 (* ?x13140 l_0_7_24)))
 (let ((?x13137 (* 8.0 l_0_7_20)))
 (let ((?x13138 (* ?x13137 l_0_7_23)))
 (let ((?x13134 (* 8.0 l_0_7_19)))
 (let ((?x13135 (* ?x13134 l_0_7_22)))
 (let ((?x14255 (- (+ (+ (+ (+ (+ (+ ?x13135 ?x13138) ?x13141) ?x14247) ?x14249) ?x14251) ?x14253) ?x13150)))
 (let ((?x14261 (- (- (- (- ?x14255 ?x13153) ?x13156) (* (* 2.0 l_0_7_37) l_0_7_37)) (* (* 2.0 l_0_7_38) l_0_7_38))))
 (let ((?x14265 (- (- ?x14261 (* (* 2.0 l_0_7_39) l_0_7_39)) (* (* 2.0 l_0_7_40) l_0_7_40))))
 (let ((?x14271 (- (- ?x14265 (* (* 2.0 l_0_7_49) l_0_7_52)) (* (* 2.0 l_0_7_50) l_0_7_53))))
 (= (- ?x14271 (* (* 2.0 l_0_7_51) l_0_7_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x13300 (* 4.0 l_0_7_40)))
 (let ((?x14126 (* ?x13300 l_0_7_44)))
 (let ((?x13297 (* 4.0 l_0_7_39)))
 (let ((?x14124 (* ?x13297 l_0_7_43)))
 (let ((?x13294 (* 4.0 l_0_7_38)))
 (let ((?x14122 (* ?x13294 l_0_7_42)))
 (let ((?x13291 (* 4.0 l_0_7_37)))
 (let ((?x14120 (* ?x13291 l_0_7_41)))
 (let ((?x13155 (* 8.0 l_0_7_36)))
 (let ((?x13242 (* ?x13155 l_0_7_43)))
 (let ((?x13092 (* 4.0 l_0_7_36)))
 (let ((?x13750 (* ?x13092 l_0_7_39)))
 (let ((?x13152 (* 8.0 l_0_7_35)))
 (let ((?x13240 (* ?x13152 l_0_7_42)))
 (let ((?x13089 (* 4.0 l_0_7_35)))
 (let ((?x13747 (* ?x13089 l_0_7_38)))
 (let ((?x13149 (* 8.0 l_0_7_34)))
 (let ((?x13238 (* ?x13149 l_0_7_41)))
 (let ((?x13086 (* 4.0 l_0_7_34)))
 (let ((?x13744 (* ?x13086 l_0_7_37)))
 (let ((?x14112 (* (* 4.0 l_0_7_25) l_0_7_29)))
 (let ((?x14109 (* (* 4.0 l_0_7_24) l_0_7_28)))
 (let ((?x14106 (* (* 4.0 l_0_7_23) l_0_7_27)))
 (let ((?x14103 (* (* 4.0 l_0_7_22) l_0_7_26)))
 (let ((?x13140 (* 8.0 l_0_7_21)))
 (let ((?x13230 (* ?x13140 l_0_7_28)))
 (let ((?x13738 (* 4.0 l_0_7_21)))
 (let ((?x13739 (* ?x13738 l_0_7_24)))
 (let ((?x13137 (* 8.0 l_0_7_20)))
 (let ((?x13228 (* ?x13137 l_0_7_27)))
 (let ((?x13734 (* 4.0 l_0_7_20)))
 (let ((?x13735 (* ?x13734 l_0_7_23)))
 (let ((?x13134 (* 8.0 l_0_7_19)))
 (let ((?x13226 (* ?x13134 l_0_7_26)))
 (let ((?x7198 (- (+ (- (+ (* (* (- 4.0) l_0_7_19) l_0_7_22) ?x13226) ?x13735) ?x13228) ?x13739)))
 (let ((?x7139 (- (+ (+ (+ (+ (+ (+ ?x7198 ?x13230) ?x14103) ?x14106) ?x14109) ?x14112) ?x13744) ?x13238)))
 (let ((?x7114 (- (- (- (- (+ (- (+ ?x7139 ?x13747) ?x13240) ?x13750) ?x13242) ?x14120) ?x14122) ?x14124)))
 (let ((?x14281 (- (- (- ?x7114 ?x14126) (* (* 2.0 l_0_7_49) l_0_7_56)) (* (* 2.0 l_0_7_50) l_0_7_57))))
 (= (- ?x14281 (* (* 2.0 l_0_7_51) l_0_7_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13363 (* (* 8.0 l_0_7_40) l_0_7_44)))
 (let ((?x13360 (* (* 8.0 l_0_7_39) l_0_7_43)))
 (let ((?x13357 (* (* 8.0 l_0_7_38) l_0_7_42)))
 (let ((?x13354 (* (* 8.0 l_0_7_37) l_0_7_41)))
 (let ((?x13347 (* (* 8.0 l_0_7_25) l_0_7_29)))
 (let ((?x13344 (* (* 8.0 l_0_7_24) l_0_7_28)))
 (let ((?x13341 (* (* 8.0 l_0_7_23) l_0_7_27)))
 (let ((?x5446 (* (* 8.0 l_0_7_22) l_0_7_26)))
 (let ((?x14288 (- (+ (- ?x5446 (* (* 2.0 l_0_7_22) l_0_7_22)) ?x13341) (* (* 2.0 l_0_7_23) l_0_7_23))))
 (let ((?x14294 (- (+ (- (+ ?x14288 ?x13344) (* (* 2.0 l_0_7_24) l_0_7_24)) ?x13347) (* (* 2.0 l_0_7_25) l_0_7_25))))
 (let ((?x14298 (+ (- (+ (- ?x14294 ?x13354) (* 2.0 (* l_0_7_37 l_0_7_37))) ?x13357) (* 2.0 (* l_0_7_38 l_0_7_38)))))
 (let ((?x14302 (+ (- (+ (- ?x14298 ?x13360) (* 2.0 (* l_0_7_39 l_0_7_39))) ?x13363) (* 2.0 (* l_0_7_40 l_0_7_40)))))
 (let ((?x14308 (- (- ?x14302 (* (* 2.0 l_0_7_52) l_0_7_56)) (* (* 2.0 l_0_7_53) l_0_7_57))))
 (let ((?x14314 (- (- ?x14308 (* (* 2.0 l_0_7_54) l_0_7_58)) (* (* 2.0 l_0_7_55) l_0_7_59))))
 (= ?x14314 0.0))))))))))))))))
(assert
 (let ((?x14340 (* l_0_7_55 l_0_7_55)))
 (let ((?x14338 (* l_0_7_54 l_0_7_54)))
 (let ((?x14336 (* l_0_7_53 l_0_7_53)))
 (let ((?x14334 (* l_0_7_52 l_0_7_52)))
 (let ((?x13300 (* 4.0 l_0_7_40)))
 (let ((?x13301 (* ?x13300 l_0_7_40)))
 (let ((?x13297 (* 4.0 l_0_7_39)))
 (let ((?x13298 (* ?x13297 l_0_7_39)))
 (let ((?x13294 (* 4.0 l_0_7_38)))
 (let ((?x13295 (* ?x13294 l_0_7_38)))
 (let ((?x13291 (* 4.0 l_0_7_37)))
 (let ((?x13292 (* ?x13291 l_0_7_37)))
 (let ((?x13286 (* l_0_7_25 l_0_7_25)))
 (let ((?x13287 (* 4.0 ?x13286)))
 (let ((?x13283 (* l_0_7_24 l_0_7_24)))
 (let ((?x13284 (* 4.0 ?x13283)))
 (let ((?x13280 (* l_0_7_23 l_0_7_23)))
 (let ((?x13281 (* 4.0 ?x13280)))
 (let ((?x13277 (* l_0_7_22 l_0_7_22)))
 (let ((?x13278 (* 4.0 ?x13277)))
 (let ((?x14333 (- (- (- (- (+ (+ (+ ?x13278 ?x13281) ?x13284) ?x13287) ?x13292) ?x13295) ?x13298) ?x13301)))
 (= (- (- (- (- ?x14333 ?x14334) ?x14336) ?x14338) ?x14340) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (let ((?x14401 (* l_0_8_81 l_0_8_81)))
 (let ((?x14399 (* l_0_8_80 l_0_8_80)))
 (let ((?x14397 (* l_0_8_79 l_0_8_79)))
 (let ((?x14395 (* l_0_8_66 l_0_8_66)))
 (let ((?x14393 (* l_0_8_65 l_0_8_65)))
 (let ((?x14391 (* l_0_8_64 l_0_8_64)))
 (let ((?x14380 (* l_0_8_31 l_0_8_31)))
 (let ((?x14377 (* 4.0 l_0_8_31)))
 (let ((?x14378 (* ?x14377 l_0_8_34)))
 (let ((?x14379 (- (- (* (* 4.0 l_0_8_16) l_0_8_19) (* l_0_8_16 l_0_8_16)) ?x14378)))
 (let ((?x14387 (+ (+ (+ ?x14379 ?x14380) (* 1.0 (* l_0_8_4 l_0_8_4))) (* 1.0 (* l_0_8_5 l_0_8_5)))))
 (let ((?x14396 (- (- (- (+ ?x14387 (* 1.0 (* l_0_8_6 l_0_8_6))) ?x14391) ?x14393) ?x14395)))
 (= (+ (- (- (- ?x14396 ?x14397) ?x14399) ?x14401) 1.0) 0.0))))))))))))))
(assert
 (let ((?x14466 (* l_0_8_90 l_0_8_90)))
 (let ((?x14464 (* l_0_8_89 l_0_8_89)))
 (let ((?x14462 (* l_0_8_88 l_0_8_88)))
 (let ((?x14460 (* l_0_8_87 l_0_8_87)))
 (let ((?x14458 (* l_0_8_86 l_0_8_86)))
 (let ((?x14456 (* l_0_8_75 l_0_8_75)))
 (let ((?x14454 (* l_0_8_74 l_0_8_74)))
 (let ((?x14452 (* l_0_8_73 l_0_8_73)))
 (let ((?x14450 (* l_0_8_72 l_0_8_72)))
 (let ((?x14448 (* l_0_8_71 l_0_8_71)))
 (let ((?x14380 (* l_0_8_31 l_0_8_31)))
 (let ((?x14377 (* 4.0 l_0_8_31)))
 (let ((?x14445 (* ?x14377 l_0_8_41)))
 (let ((?x14375 (* l_0_8_16 l_0_8_16)))
 (let ((?x14373 (* 4.0 l_0_8_16)))
 (let ((?x14442 (* ?x14373 l_0_8_26)))
 (let ((?x14432 (+ (* 1.0 (* l_0_8_11 l_0_8_11)) (* 1.0 (* l_0_8_12 l_0_8_12)))))
 (let ((?x14438 (+ (+ ?x14432 (* 1.0 (* l_0_8_13 l_0_8_13))) (* 1.0 (* l_0_8_14 l_0_8_14)))))
 (let ((?x14446 (+ (+ (- (+ ?x14438 (* 1.0 (* l_0_8_15 l_0_8_15))) ?x14442) ?x14375) ?x14445)))
 (let ((?x14459 (- (- (- (- (- (- (- ?x14446 ?x14380) ?x14448) ?x14450) ?x14452) ?x14454) ?x14456) ?x14458)))
 (= (- (- (- (- (- ?x14459 ?x14460) ?x14462) ?x14464) ?x14466) 1.0) 0.0))))))))))))))))))))))
(assert
 (let ((?x14375 (* l_0_8_16 l_0_8_16)))
 (let ((?x7667 (* 2.0 ?x14375)))
 (let ((?x14494 (- (+ (* (* 2.0 l_0_8_1) l_0_8_4) ?x7667) (* (* 2.0 l_0_8_31) l_0_8_31))))
 (let ((?x14500 (- (- ?x14494 (* (* 2.0 l_0_8_61) l_0_8_64)) (* (* 2.0 l_0_8_76) l_0_8_79))))
 (= (- ?x14500 2.0) 0.0))))))
(assert
 (let ((?x14521 (- (* (* 2.0 l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_16) l_0_8_16))))
 (let ((?x14524 (- (+ ?x14521 (* 2.0 (* l_0_8_31 l_0_8_31))) (* (* 2.0 l_0_8_61) l_0_8_71))))
 (= (+ (- ?x14524 (* (* 2.0 l_0_8_76) l_0_8_86)) 2.0) 0.0))))
(assert
 (let ((?x14377 (* 4.0 l_0_8_31)))
 (let ((?x14544 (* ?x14377 l_0_8_31)))
 (let ((?x14375 (* l_0_8_16 l_0_8_16)))
 (let ((?x14542 (* 4.0 ?x14375)))
 (let ((?x14543 (+ (- (* (* 2.0 l_0_8_1) l_0_8_2) (* l_0_8_1 l_0_8_1)) ?x14542)))
 (let ((?x14549 (- (- (- ?x14543 ?x14544) (* (* 2.0 l_0_8_61) l_0_8_62)) (* (* 2.0 l_0_8_76) l_0_8_77))))
 (= (- ?x14549 4.0) 0.0))))))))
(assert
 (let ((?x14576 (* l_0_8_46 l_0_8_46)))
 (let ((?x14377 (* 4.0 l_0_8_31)))
 (let ((?x14544 (* ?x14377 l_0_8_31)))
 (let ((?x14375 (* l_0_8_16 l_0_8_16)))
 (let ((?x14542 (* 4.0 ?x14375)))
 (let ((?x14579 (- (- (- (+ (* (* 2.0 l_0_8_1) l_0_8_7) ?x14542) ?x14544) ?x14576) (* (* 2.0 l_0_8_61) l_0_8_67))))
 (= (- (- ?x14579 (* (* 2.0 l_0_8_76) l_0_8_82)) 4.0) 0.0))))))))
(assert
 (let ((?x14621 (* l_0_8_78 l_0_8_78)))
 (let ((?x14619 (* l_0_8_77 l_0_8_77)))
 (let ((?x14617 (* l_0_8_63 l_0_8_63)))
 (let ((?x14615 (* l_0_8_62 l_0_8_62)))
 (let ((?x14612 (* 8.0 l_0_8_31)))
 (let ((?x14613 (* ?x14612 l_0_8_32)))
 (let ((?x14603 (* 8.0 l_0_8_16)))
 (let ((?x14604 (* ?x14603 l_0_8_17)))
 (let ((?x14608 (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_2) ?x14604) (* 1.0 (* l_0_8_2 l_0_8_2)))))
 (let ((?x14618 (- (- (- (+ ?x14608 (* 1.0 (* l_0_8_3 l_0_8_3))) ?x14613) ?x14615) ?x14617)))
 (= (- (- ?x14618 ?x14619) ?x14621) 0.0))))))))))))
(assert
 (let ((?x14612 (* 8.0 l_0_8_31)))
 (let ((?x14649 (* ?x14612 l_0_8_34)))
 (let ((?x14377 (* 4.0 l_0_8_31)))
 (let ((?x14647 (* ?x14377 l_0_8_32)))
 (let ((?x14644 (* 2.0 l_0_8_3)))
 (let ((?x14645 (* ?x14644 l_0_8_5)))
 (let ((?x14641 (* 2.0 l_0_8_2)))
 (let ((?x14642 (* ?x14641 l_0_8_4)))
 (let ((?x14603 (* 8.0 l_0_8_16)))
 (let ((?x14639 (* ?x14603 l_0_8_19)))
 (let ((?x14373 (* 4.0 l_0_8_16)))
 (let ((?x14637 (* ?x14373 l_0_8_17)))
 (let ((?x14646 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x14637) ?x14639) ?x14642) ?x14645)))
 (let ((?x14656 (- (- (- (- ?x14646 ?x14647) ?x14649) (* (* 2.0 l_0_8_62) l_0_8_64)) (* (* 2.0 l_0_8_63) l_0_8_65))))
 (let ((?x14662 (- (- ?x14656 (* (* 2.0 l_0_8_77) l_0_8_79)) (* (* 2.0 l_0_8_78) l_0_8_80))))
 (= ?x14662 0.0)))))))))))))))))
(assert
 (let ((?x14612 (* 8.0 l_0_8_31)))
 (let ((?x14701 (* ?x14612 l_0_8_37)))
 (let ((?x14613 (* ?x14612 l_0_8_32)))
 (let ((?x14644 (* 2.0 l_0_8_3)))
 (let ((?x14698 (* ?x14644 l_0_8_8)))
 (let ((?x14641 (* 2.0 l_0_8_2)))
 (let ((?x14696 (* ?x14641 l_0_8_7)))
 (let ((?x14603 (* 8.0 l_0_8_16)))
 (let ((?x14694 (* ?x14603 l_0_8_22)))
 (let ((?x14697 (+ (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) (* ?x14603 l_0_8_17)) ?x14694) ?x14696)))
 (let ((?x14705 (- (- (- (+ ?x14697 ?x14698) ?x14613) ?x14701) (* (* 2.0 l_0_8_46) l_0_8_47))))
 (let ((?x14709 (- (- ?x14705 (* (* 2.0 l_0_8_62) l_0_8_67)) (* (* 2.0 l_0_8_63) l_0_8_68))))
 (let ((?x14713 (- (- ?x14709 (* (* 2.0 l_0_8_77) l_0_8_82)) (* (* 2.0 l_0_8_78) l_0_8_83))))
 (= ?x14713 0.0)))))))))))))))
(assert
 (let ((?x14612 (* 8.0 l_0_8_31)))
 (let ((?x14755 (* ?x14612 l_0_8_41)))
 (let ((?x14377 (* 4.0 l_0_8_31)))
 (let ((?x14647 (* ?x14377 l_0_8_32)))
 (let ((?x14603 (* 8.0 l_0_8_16)))
 (let ((?x14752 (* ?x14603 l_0_8_26)))
 (let ((?x14373 (* 4.0 l_0_8_16)))
 (let ((?x14637 (* ?x14373 l_0_8_17)))
 (let ((?x14748 (* 2.0 l_0_8_12)))
 (let ((?x14749 (* ?x14748 l_0_8_3)))
 (let ((?x14747 (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_11) l_0_8_2))))
 (let ((?x14758 (- (- (+ (+ (- (+ ?x14747 ?x14749) ?x14637) ?x14752) ?x14647) ?x14755) (* (* 2.0 l_0_8_62) l_0_8_71))))
 (let ((?x14762 (- (- ?x14758 (* (* 2.0 l_0_8_63) l_0_8_72)) (* (* 2.0 l_0_8_77) l_0_8_86))))
 (= (- ?x14762 (* (* 2.0 l_0_8_78) l_0_8_87)) 0.0)))))))))))))))
(assert
 (let ((?x14803 (* 4.0 l_0_8_33)))
 (let ((?x14804 (* ?x14803 l_0_8_33)))
 (let ((?x14800 (* 4.0 l_0_8_32)))
 (let ((?x14801 (* ?x14800 l_0_8_32)))
 (let ((?x14609 (* l_0_8_3 l_0_8_3)))
 (let ((?x14606 (* l_0_8_2 l_0_8_2)))
 (let ((?x14795 (* l_0_8_18 l_0_8_18)))
 (let ((?x14796 (* 4.0 ?x14795)))
 (let ((?x14793 (* l_0_8_17 l_0_8_17)))
 (let ((?x14794 (* 4.0 ?x14793)))
 (= (- (- (- (- (+ ?x14794 ?x14796) ?x14606) ?x14609) ?x14801) ?x14804) 0.0))))))))))))
(assert
 (let ((?x14823 (* 8.0 l_0_8_33)))
 (let ((?x14824 (* ?x14823 l_0_8_35)))
 (let ((?x14817 (* 8.0 l_0_8_32)))
 (let ((?x14818 (* ?x14817 l_0_8_34)))
 (let ((?x14644 (* 2.0 l_0_8_3)))
 (let ((?x14645 (* ?x14644 l_0_8_5)))
 (let ((?x14641 (* 2.0 l_0_8_2)))
 (let ((?x14642 (* ?x14641 l_0_8_4)))
 (let ((?x14810 (* 8.0 l_0_8_18)))
 (let ((?x14811 (* ?x14810 l_0_8_20)))
 (let ((?x7899 (* 8.0 l_0_8_17)))
 (let ((?x7895 (* ?x7899 l_0_8_19)))
 (let ((?x14814 (+ (+ (+ ?x7895 (* 2.0 (* l_0_8_17 l_0_8_17))) ?x14811) (* 2.0 (* l_0_8_18 l_0_8_18)))))
 (let ((?x14822 (- (- (- (- ?x14814 ?x14642) ?x14645) ?x14818) (* (* 2.0 l_0_8_32) l_0_8_32))))
 (= (- (- ?x14822 ?x14824) (* (* 2.0 l_0_8_33) l_0_8_33)) 0.0))))))))))))))))
(assert
 (let ((?x14865 (* l_0_8_48 l_0_8_48)))
 (let ((?x14863 (* l_0_8_47 l_0_8_47)))
 (let ((?x14803 (* 4.0 l_0_8_33)))
 (let ((?x14804 (* ?x14803 l_0_8_33)))
 (let ((?x14823 (* 8.0 l_0_8_33)))
 (let ((?x14860 (* ?x14823 l_0_8_38)))
 (let ((?x14800 (* 4.0 l_0_8_32)))
 (let ((?x14801 (* ?x14800 l_0_8_32)))
 (let ((?x14817 (* 8.0 l_0_8_32)))
 (let ((?x14857 (* ?x14817 l_0_8_37)))
 (let ((?x14644 (* 2.0 l_0_8_3)))
 (let ((?x14698 (* ?x14644 l_0_8_8)))
 (let ((?x14641 (* 2.0 l_0_8_2)))
 (let ((?x14696 (* ?x14641 l_0_8_7)))
 (let ((?x14795 (* l_0_8_18 l_0_8_18)))
 (let ((?x14796 (* 4.0 ?x14795)))
 (let ((?x14810 (* 8.0 l_0_8_18)))
 (let ((?x14852 (* ?x14810 l_0_8_23)))
 (let ((?x14793 (* l_0_8_17 l_0_8_17)))
 (let ((?x14794 (* 4.0 ?x14793)))
 (let ((?x7899 (* 8.0 l_0_8_17)))
 (let ((?x14850 (* ?x7899 l_0_8_22)))
 (let ((?x14859 (- (- (- (- (+ (+ (+ ?x14850 ?x14794) ?x14852) ?x14796) ?x14696) ?x14698) ?x14857) ?x14801)))
 (= (- (- (- (- ?x14859 ?x14860) ?x14804) ?x14863) ?x14865) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7888 (* l_0_8_33 l_0_8_33)))
 (let ((?x7965 (* 2.0 ?x7888)))
 (let ((?x14823 (* 8.0 l_0_8_33)))
 (let ((?x14881 (* ?x14823 l_0_8_42)))
 (let ((?x6259 (* l_0_8_32 l_0_8_32)))
 (let ((?x7957 (* 2.0 ?x6259)))
 (let ((?x14817 (* 8.0 l_0_8_32)))
 (let ((?x14878 (* ?x14817 l_0_8_41)))
 (let ((?x14810 (* 8.0 l_0_8_18)))
 (let ((?x14873 (* ?x14810 l_0_8_27)))
 (let ((?x7899 (* 8.0 l_0_8_17)))
 (let ((?x7971 (* ?x7899 l_0_8_26)))
 (let ((?x14748 (* 2.0 l_0_8_12)))
 (let ((?x14749 (* ?x14748 l_0_8_3)))
 (let ((?x14872 (- (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x14749) ?x7971) (* (* 2.0 l_0_8_17) l_0_8_17))))
 (let ((?x14880 (+ (- (- (+ ?x14872 ?x14873) (* (* 2.0 l_0_8_18) l_0_8_18)) ?x14878) ?x7957)))
 (= (+ (- ?x14880 ?x14881) ?x7965) 0.0))))))))))))))))))
(assert
 (let ((?x14388 (* l_0_8_6 l_0_8_6)))
 (let ((?x14385 (* l_0_8_5 l_0_8_5)))
 (let ((?x14382 (* l_0_8_4 l_0_8_4)))
 (let ((?x14923 (* 4.0 l_0_8_36)))
 (let ((?x14924 (* ?x14923 l_0_8_36)))
 (let ((?x14920 (* 4.0 l_0_8_35)))
 (let ((?x14921 (* ?x14920 l_0_8_35)))
 (let ((?x14917 (* 4.0 l_0_8_34)))
 (let ((?x14918 (* ?x14917 l_0_8_34)))
 (let ((?x14803 (* 4.0 l_0_8_33)))
 (let ((?x14915 (* ?x14803 l_0_8_35)))
 (let ((?x14800 (* 4.0 l_0_8_32)))
 (let ((?x14913 (* ?x14800 l_0_8_34)))
 (let ((?x14492 (* 2.0 l_0_8_31)))
 (let ((?x14911 (* ?x14492 l_0_8_32)))
 (let ((?x14908 (* l_0_8_21 l_0_8_21)))
 (let ((?x14909 (* 4.0 ?x14908)))
 (let ((?x14905 (* l_0_8_20 l_0_8_20)))
 (let ((?x14906 (* 4.0 ?x14905)))
 (let ((?x14902 (* l_0_8_19 l_0_8_19)))
 (let ((?x14903 (* 4.0 ?x14902)))
 (let ((?x14899 (* 4.0 l_0_8_18)))
 (let ((?x14900 (* ?x14899 l_0_8_20)))
 (let ((?x8092 (* 4.0 l_0_8_17)))
 (let ((?x8094 (* ?x8092 l_0_8_19)))
 (let ((?x14907 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_16) l_0_8_17) ?x8094) ?x14900) ?x14903) ?x14906)))
 (let ((?x14925 (- (- (- (- (- (+ (+ ?x14907 ?x14909) ?x14911) ?x14913) ?x14915) ?x14918) ?x14921) ?x14924)))
 (= (- (- (- ?x14925 ?x14382) ?x14385) ?x14388) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x14981 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x14978 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x14969 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x14965 (* 8.0 l_0_8_36)))
 (let ((?x14966 (* ?x14965 l_0_8_39)))
 (let ((?x14962 (* 8.0 l_0_8_35)))
 (let ((?x14963 (* ?x14962 l_0_8_38)))
 (let ((?x14959 (* 8.0 l_0_8_34)))
 (let ((?x14960 (* ?x14959 l_0_8_37)))
 (let ((?x14803 (* 4.0 l_0_8_33)))
 (let ((?x14957 (* ?x14803 l_0_8_38)))
 (let ((?x14823 (* 8.0 l_0_8_33)))
 (let ((?x14824 (* ?x14823 l_0_8_35)))
 (let ((?x14800 (* 4.0 l_0_8_32)))
 (let ((?x14954 (* ?x14800 l_0_8_37)))
 (let ((?x14817 (* 8.0 l_0_8_32)))
 (let ((?x14818 (* ?x14817 l_0_8_34)))
 (let ((?x14950 (* 8.0 l_0_8_21)))
 (let ((?x14951 (* ?x14950 l_0_8_24)))
 (let ((?x14947 (* 8.0 l_0_8_20)))
 (let ((?x14948 (* ?x14947 l_0_8_23)))
 (let ((?x14944 (* 8.0 l_0_8_19)))
 (let ((?x14945 (* ?x14944 l_0_8_22)))
 (let ((?x14899 (* 4.0 l_0_8_18)))
 (let ((?x14942 (* ?x14899 l_0_8_23)))
 (let ((?x14810 (* 8.0 l_0_8_18)))
 (let ((?x14811 (* ?x14810 l_0_8_20)))
 (let ((?x8092 (* 4.0 l_0_8_17)))
 (let ((?x8133 (* ?x8092 l_0_8_22)))
 (let ((?x7899 (* 8.0 l_0_8_17)))
 (let ((?x7895 (* ?x7899 l_0_8_19)))
 (let ((?x14953 (- (+ (+ (+ (+ (+ (+ ?x7895 ?x8133) ?x14811) ?x14942) ?x14945) ?x14948) ?x14951) ?x14818)))
 (let ((?x14970 (- (- (- (- (- (- (- ?x14953 ?x14954) ?x14824) ?x14957) ?x14960) ?x14963) ?x14966) ?x14969)))
 (let ((?x14976 (- (- ?x14970 (* (* 2.0 l_0_8_47) l_0_8_49)) (* (* 2.0 l_0_8_48) l_0_8_50))))
 (= (- (- ?x14976 ?x14978) ?x14981) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14965 (* 8.0 l_0_8_36)))
 (let ((?x15042 (* ?x14965 l_0_8_43)))
 (let ((?x14962 (* 8.0 l_0_8_35)))
 (let ((?x15040 (* ?x14962 l_0_8_42)))
 (let ((?x14959 (* 8.0 l_0_8_34)))
 (let ((?x15038 (* ?x14959 l_0_8_41)))
 (let ((?x14803 (* 4.0 l_0_8_33)))
 (let ((?x15036 (* ?x14803 l_0_8_42)))
 (let ((?x14915 (* ?x14803 l_0_8_35)))
 (let ((?x14800 (* 4.0 l_0_8_32)))
 (let ((?x15033 (* ?x14800 l_0_8_41)))
 (let ((?x14913 (* ?x14800 l_0_8_34)))
 (let ((?x14950 (* 8.0 l_0_8_21)))
 (let ((?x15030 (* ?x14950 l_0_8_28)))
 (let ((?x14947 (* 8.0 l_0_8_20)))
 (let ((?x15028 (* ?x14947 l_0_8_27)))
 (let ((?x14944 (* 8.0 l_0_8_19)))
 (let ((?x15026 (* ?x14944 l_0_8_26)))
 (let ((?x14899 (* 4.0 l_0_8_18)))
 (let ((?x15024 (* ?x14899 l_0_8_27)))
 (let ((?x14900 (* ?x14899 l_0_8_20)))
 (let ((?x8092 (* 4.0 l_0_8_17)))
 (let ((?x15021 (* ?x8092 l_0_8_26)))
 (let ((?x8094 (* ?x8092 l_0_8_19)))
 (let ((?x15017 (* 2.0 l_0_8_13)))
 (let ((?x15018 (* ?x15017 l_0_8_6)))
 (let ((?x14748 (* 2.0 l_0_8_12)))
 (let ((?x15015 (* ?x14748 l_0_8_5)))
 (let ((?x15022 (+ (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x15015) ?x15018) ?x8094) ?x15021)))
 (let ((?x15034 (- (+ (+ (+ (+ (+ (- ?x15022 ?x14900) ?x15024) ?x15026) ?x15028) ?x15030) ?x14913) ?x15033)))
 (= (- (- (- (- (+ ?x15034 ?x14915) ?x15036) ?x15038) ?x15040) ?x15042) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x15099 (* l_0_8_9 l_0_8_9)))
 (let ((?x15097 (* l_0_8_8 l_0_8_8)))
 (let ((?x15095 (* l_0_8_7 l_0_8_7)))
 (let ((?x15088 (* 4.0 l_0_8_40)))
 (let ((?x15089 (* ?x15088 l_0_8_40)))
 (let ((?x15085 (* 4.0 l_0_8_39)))
 (let ((?x15086 (* ?x15085 l_0_8_39)))
 (let ((?x15082 (* 4.0 l_0_8_38)))
 (let ((?x15083 (* ?x15082 l_0_8_38)))
 (let ((?x15079 (* 4.0 l_0_8_37)))
 (let ((?x15080 (* ?x15079 l_0_8_37)))
 (let ((?x14823 (* 8.0 l_0_8_33)))
 (let ((?x14860 (* ?x14823 l_0_8_38)))
 (let ((?x14817 (* 8.0 l_0_8_32)))
 (let ((?x14857 (* ?x14817 l_0_8_37)))
 (let ((?x15074 (* l_0_8_25 l_0_8_25)))
 (let ((?x15075 (* 4.0 ?x15074)))
 (let ((?x15071 (* l_0_8_24 l_0_8_24)))
 (let ((?x15072 (* 4.0 ?x15071)))
 (let ((?x15068 (* l_0_8_23 l_0_8_23)))
 (let ((?x15069 (* 4.0 ?x15068)))
 (let ((?x15065 (* l_0_8_22 l_0_8_22)))
 (let ((?x15066 (* 4.0 ?x15065)))
 (let ((?x14810 (* 8.0 l_0_8_18)))
 (let ((?x14852 (* ?x14810 l_0_8_23)))
 (let ((?x15064 (+ (+ (* (- l_0_8_10) l_0_8_10) (* (* 8.0 l_0_8_17) l_0_8_22)) ?x14852)))
 (let ((?x15081 (- (- (- (+ (+ (+ (+ ?x15064 ?x15066) ?x15069) ?x15072) ?x15075) ?x14857) ?x14860) ?x15080)))
 (let ((?x15092 (- (- (- (- ?x15081 ?x15083) ?x15086) ?x15089) (* (* 2.0 l_0_8_47) l_0_8_52))))
 (let ((?x15100 (- (- (- (- ?x15092 (* (* 2.0 l_0_8_48) l_0_8_53)) ?x15095) ?x15097) ?x15099)))
 (= ?x15100 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x15158 (* (* 8.0 l_0_8_40) l_0_8_44)))
 (let ((?x15155 (* (* 8.0 l_0_8_39) l_0_8_43)))
 (let ((?x15152 (* (* 8.0 l_0_8_38) l_0_8_42)))
 (let ((?x15149 (* (* 8.0 l_0_8_37) l_0_8_41)))
 (let ((?x14823 (* 8.0 l_0_8_33)))
 (let ((?x14881 (* ?x14823 l_0_8_42)))
 (let ((?x14803 (* 4.0 l_0_8_33)))
 (let ((?x14957 (* ?x14803 l_0_8_38)))
 (let ((?x14817 (* 8.0 l_0_8_32)))
 (let ((?x14878 (* ?x14817 l_0_8_41)))
 (let ((?x14800 (* 4.0 l_0_8_32)))
 (let ((?x14954 (* ?x14800 l_0_8_37)))
 (let ((?x15142 (* (* 8.0 l_0_8_25) l_0_8_29)))
 (let ((?x15139 (* (* 8.0 l_0_8_24) l_0_8_28)))
 (let ((?x15136 (* (* 8.0 l_0_8_23) l_0_8_27)))
 (let ((?x15133 (* (* 8.0 l_0_8_22) l_0_8_26)))
 (let ((?x14810 (* 8.0 l_0_8_18)))
 (let ((?x14873 (* ?x14810 l_0_8_27)))
 (let ((?x14899 (* 4.0 l_0_8_18)))
 (let ((?x14942 (* ?x14899 l_0_8_23)))
 (let ((?x7899 (* 8.0 l_0_8_17)))
 (let ((?x7971 (* ?x7899 l_0_8_26)))
 (let ((?x8092 (* 4.0 l_0_8_17)))
 (let ((?x8133 (* ?x8092 l_0_8_22)))
 (let ((?x15017 (* 2.0 l_0_8_13)))
 (let ((?x15126 (* ?x15017 l_0_8_9)))
 (let ((?x14748 (* 2.0 l_0_8_12)))
 (let ((?x15124 (* ?x14748 l_0_8_8)))
 (let ((?x14745 (* 2.0 l_0_8_11)))
 (let ((?x15122 (* ?x14745 l_0_8_7)))
 (let ((?x15128 (- (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x15122) ?x15124) ?x15126) ?x8133)))
 (let ((?x15143 (+ (+ (+ (+ (+ (- (+ ?x15128 ?x7971) ?x14942) ?x14873) ?x15133) ?x15136) ?x15139) ?x15142)))
 (let ((?x15156 (- (- (- (- (+ (- (+ ?x15143 ?x14954) ?x14878) ?x14957) ?x14881) ?x15149) ?x15152) ?x15155)))
 (let ((?x15163 (- (- (- ?x15156 ?x15158) (* (* 2.0 l_0_8_47) l_0_8_56)) (* (* 2.0 l_0_8_48) l_0_8_57))))
 (= ?x15163 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15240 (* (* 4.0 l_0_8_45) l_0_8_45)))
 (let ((?x15237 (* (* 4.0 l_0_8_44) l_0_8_44)))
 (let ((?x15234 (* (* 4.0 l_0_8_43) l_0_8_43)))
 (let ((?x15231 (* (* 4.0 l_0_8_42) l_0_8_42)))
 (let ((?x15228 (* (* 4.0 l_0_8_41) l_0_8_41)))
 (let ((?x14803 (* 4.0 l_0_8_33)))
 (let ((?x15036 (* ?x14803 l_0_8_42)))
 (let ((?x14800 (* 4.0 l_0_8_32)))
 (let ((?x15033 (* ?x14800 l_0_8_41)))
 (let ((?x14492 (* 2.0 l_0_8_31)))
 (let ((?x14911 (* ?x14492 l_0_8_32)))
 (let ((?x15221 (* l_0_8_30 l_0_8_30)))
 (let ((?x15222 (* 4.0 ?x15221)))
 (let ((?x15218 (* l_0_8_29 l_0_8_29)))
 (let ((?x15219 (* 4.0 ?x15218)))
 (let ((?x15215 (* l_0_8_28 l_0_8_28)))
 (let ((?x15216 (* 4.0 ?x15215)))
 (let ((?x15212 (* l_0_8_27 l_0_8_27)))
 (let ((?x15213 (* 4.0 ?x15212)))
 (let ((?x15209 (* l_0_8_26 l_0_8_26)))
 (let ((?x15210 (* 4.0 ?x15209)))
 (let ((?x14899 (* 4.0 l_0_8_18)))
 (let ((?x15024 (* ?x14899 l_0_8_27)))
 (let ((?x8092 (* 4.0 l_0_8_17)))
 (let ((?x15021 (* ?x8092 l_0_8_26)))
 (let ((?x14439 (* l_0_8_15 l_0_8_15)))
 (let ((?x14436 (* l_0_8_14 l_0_8_14)))
 (let ((?x14433 (* l_0_8_13 l_0_8_13)))
 (let ((?x15203 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x14433) ?x14436)))
 (let ((?x15208 (- (- (+ (- ?x15203 ?x14439) (* (* 2.0 l_0_8_16) l_0_8_17)) ?x15021) ?x15024)))
 (let ((?x15225 (+ (- (+ (+ (+ (+ (+ ?x15208 ?x15210) ?x15213) ?x15216) ?x15219) ?x15222) ?x14911) ?x15033)))
 (= (- (- (- (- (- (+ ?x15225 ?x15036) ?x15228) ?x15231) ?x15234) ?x15237) ?x15240) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x15261 (* l_0_8_76 l_0_8_76)))
 (let ((?x15262 (- (- (* 1.0 (* l_0_8_1 l_0_8_1)) (* l_0_8_61 l_0_8_61)) ?x15261)))
 (= ?x15262 0.0))))
(assert
 (let ((?x14981 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x14978 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x14969 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x14377 (* 4.0 l_0_8_31)))
 (let ((?x15272 (* ?x14377 l_0_8_37)))
 (let ((?x14612 (* 8.0 l_0_8_31)))
 (let ((?x14649 (* ?x14612 l_0_8_34)))
 (let ((?x14373 (* 4.0 l_0_8_16)))
 (let ((?x8965 (* ?x14373 l_0_8_22)))
 (let ((?x14603 (* 8.0 l_0_8_16)))
 (let ((?x14639 (* ?x14603 l_0_8_19)))
 (let ((?x15276 (- (+ (- (- (+ ?x14639 ?x8965) ?x14649) ?x15272) ?x14969) (* (* 2.0 l_0_8_46) l_0_8_49))))
 (let ((?x15284 (- (- (+ (+ ?x15276 ?x14978) ?x14981) (* (* 2.0 l_0_8_64) l_0_8_67)) (* (* 2.0 l_0_8_65) l_0_8_68))))
 (let ((?x15290 (- (- ?x15284 (* (* 2.0 l_0_8_66) l_0_8_69)) (* (* 2.0 l_0_8_79) l_0_8_82))))
 (let ((?x15296 (- (- ?x15290 (* (* 2.0 l_0_8_80) l_0_8_83)) (* (* 2.0 l_0_8_81) l_0_8_84))))
 (= ?x15296 0.0)))))))))))))))))
(assert
 (let ((?x14377 (* 4.0 l_0_8_31)))
 (let ((?x14445 (* ?x14377 l_0_8_41)))
 (let ((?x14378 (* ?x14377 l_0_8_34)))
 (let ((?x14373 (* 4.0 l_0_8_16)))
 (let ((?x14442 (* ?x14373 l_0_8_26)))
 (let ((?x14374 (* ?x14373 l_0_8_19)))
 (let ((?x15017 (* 2.0 l_0_8_13)))
 (let ((?x15018 (* ?x15017 l_0_8_6)))
 (let ((?x14748 (* 2.0 l_0_8_12)))
 (let ((?x15015 (* ?x14748 l_0_8_5)))
 (let ((?x15327 (+ (- (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x15015) ?x15018) ?x14374) ?x14442)))
 (let ((?x15333 (- (- (- (+ ?x15327 ?x14378) ?x14445) (* (* 2.0 l_0_8_64) l_0_8_71)) (* (* 2.0 l_0_8_65) l_0_8_72))))
 (let ((?x15337 (- (- ?x15333 (* (* 2.0 l_0_8_66) l_0_8_73)) (* (* 2.0 l_0_8_79) l_0_8_86))))
 (let ((?x15341 (- (- ?x15337 (* (* 2.0 l_0_8_80) l_0_8_87)) (* (* 2.0 l_0_8_81) l_0_8_88))))
 (= ?x15341 0.0))))))))))))))))
(assert
 (let ((?x15376 (* l_0_8_85 l_0_8_85)))
 (let ((?x15374 (* l_0_8_84 l_0_8_84)))
 (let ((?x15372 (* l_0_8_83 l_0_8_83)))
 (let ((?x15370 (* l_0_8_82 l_0_8_82)))
 (let ((?x15366 (* l_0_8_70 l_0_8_70)))
 (let ((?x15362 (* l_0_8_69 l_0_8_69)))
 (let ((?x15360 (* l_0_8_68 l_0_8_68)))
 (let ((?x15358 (* l_0_8_67 l_0_8_67)))
 (let ((?x14612 (* 8.0 l_0_8_31)))
 (let ((?x14701 (* ?x14612 l_0_8_37)))
 (let ((?x14603 (* 8.0 l_0_8_16)))
 (let ((?x14694 (* ?x14603 l_0_8_22)))
 (let ((?x15357 (- (- (+ (* 1.0 (* l_0_8_10 l_0_8_10)) ?x14694) ?x14701) (* (* 2.0 l_0_8_46) l_0_8_52))))
 (let ((?x15365 (+ (- (- (- ?x15357 ?x15358) ?x15360) ?x15362) (* 1.0 (* l_0_8_7 l_0_8_7)))))
 (let ((?x15373 (- (- (+ (- ?x15365 ?x15366) (* 1.0 (* l_0_8_8 l_0_8_8))) ?x15370) ?x15372)))
 (= (+ (- (- ?x15373 ?x15374) ?x15376) (* 1.0 (* l_0_8_9 l_0_8_9))) 0.0)))))))))))))))))
(assert
 (let ((?x14612 (* 8.0 l_0_8_31)))
 (let ((?x14755 (* ?x14612 l_0_8_41)))
 (let ((?x14377 (* 4.0 l_0_8_31)))
 (let ((?x15272 (* ?x14377 l_0_8_37)))
 (let ((?x14603 (* 8.0 l_0_8_16)))
 (let ((?x14752 (* ?x14603 l_0_8_26)))
 (let ((?x14373 (* 4.0 l_0_8_16)))
 (let ((?x8965 (* ?x14373 l_0_8_22)))
 (let ((?x15017 (* 2.0 l_0_8_13)))
 (let ((?x15126 (* ?x15017 l_0_8_9)))
 (let ((?x14748 (* 2.0 l_0_8_12)))
 (let ((?x15124 (* ?x14748 l_0_8_8)))
 (let ((?x14745 (* 2.0 l_0_8_11)))
 (let ((?x15122 (* ?x14745 l_0_8_7)))
 (let ((?x15402 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x15122) ?x15124) ?x15126) ?x8965)))
 (let ((?x15407 (- (- (+ (+ ?x15402 ?x14752) ?x15272) ?x14755) (* (* 2.0 l_0_8_46) l_0_8_56))))
 (let ((?x15413 (- (- ?x15407 (* (* 2.0 l_0_8_67) l_0_8_71)) (* (* 2.0 l_0_8_68) l_0_8_72))))
 (let ((?x15419 (- (- ?x15413 (* (* 2.0 l_0_8_69) l_0_8_73)) (* (* 2.0 l_0_8_70) l_0_8_74))))
 (let ((?x15425 (- (- ?x15419 (* (* 2.0 l_0_8_82) l_0_8_86)) (* (* 2.0 l_0_8_83) l_0_8_87))))
 (let ((?x15431 (- (- ?x15425 (* (* 2.0 l_0_8_84) l_0_8_88)) (* (* 2.0 l_0_8_85) l_0_8_89))))
 (= ?x15431 0.0))))))))))))))))))))))
(assert
 (let ((?x14492 (* 2.0 l_0_8_31)))
 (let ((?x15446 (* ?x14492 l_0_8_34)))
 (let ((?x8449 (+ (* (* (- 2.0) l_0_8_16) l_0_8_19) (* 2.0 (* l_0_8_19 l_0_8_19)))))
 (let ((?x15445 (+ (+ ?x8449 (* 2.0 (* l_0_8_20 l_0_8_20))) (* 2.0 (* l_0_8_21 l_0_8_21)))))
 (let ((?x15453 (- (- (+ ?x15445 ?x15446) (* (* 2.0 l_0_8_34) l_0_8_34)) (* (* 2.0 l_0_8_35) l_0_8_35))))
 (= (- ?x15453 (* (* 2.0 l_0_8_36) l_0_8_36)) 0.0)))))))
(assert
 (let ((?x15507 (* l_0_8_51 l_0_8_51)))
 (let ((?x15505 (* l_0_8_50 l_0_8_50)))
 (let ((?x15503 (* l_0_8_49 l_0_8_49)))
 (let ((?x14923 (* 4.0 l_0_8_36)))
 (let ((?x14924 (* ?x14923 l_0_8_36)))
 (let ((?x15500 (* ?x14923 l_0_8_39)))
 (let ((?x14920 (* 4.0 l_0_8_35)))
 (let ((?x14921 (* ?x14920 l_0_8_35)))
 (let ((?x15497 (* ?x14920 l_0_8_38)))
 (let ((?x14917 (* 4.0 l_0_8_34)))
 (let ((?x14918 (* ?x14917 l_0_8_34)))
 (let ((?x15494 (* ?x14917 l_0_8_37)))
 (let ((?x14492 (* 2.0 l_0_8_31)))
 (let ((?x15492 (* ?x14492 l_0_8_37)))
 (let ((?x14908 (* l_0_8_21 l_0_8_21)))
 (let ((?x14909 (* 4.0 ?x14908)))
 (let ((?x15488 (* 4.0 l_0_8_21)))
 (let ((?x15489 (* ?x15488 l_0_8_24)))
 (let ((?x14905 (* l_0_8_20 l_0_8_20)))
 (let ((?x14906 (* 4.0 ?x14905)))
 (let ((?x15484 (* 4.0 l_0_8_20)))
 (let ((?x15485 (* ?x15484 l_0_8_23)))
 (let ((?x14902 (* l_0_8_19 l_0_8_19)))
 (let ((?x14903 (* 4.0 ?x14902)))
 (let ((?x15482 (+ (* (* (- 2.0) l_0_8_16) l_0_8_22) (* (* 4.0 l_0_8_19) l_0_8_22))))
 (let ((?x15495 (- (+ (+ (+ (+ (+ (+ ?x15482 ?x14903) ?x15485) ?x14906) ?x15489) ?x14909) ?x15492) ?x15494)))
 (let ((?x15506 (- (- (- (- (- (- (- ?x15495 ?x14918) ?x15497) ?x14921) ?x15500) ?x14924) ?x15503) ?x15505)))
 (= (- ?x15506 ?x15507) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x8216 (* l_0_8_36 l_0_8_36)))
 (let ((?x9468 (* 2.0 ?x8216)))
 (let ((?x14923 (* 4.0 l_0_8_36)))
 (let ((?x15557 (* ?x14923 l_0_8_43)))
 (let ((?x8158 (* l_0_8_35 l_0_8_35)))
 (let ((?x15466 (* 2.0 ?x8158)))
 (let ((?x14920 (* 4.0 l_0_8_35)))
 (let ((?x15554 (* ?x14920 l_0_8_42)))
 (let ((?x8121 (* l_0_8_34 l_0_8_34)))
 (let ((?x15461 (* 2.0 ?x8121)))
 (let ((?x14917 (* 4.0 l_0_8_34)))
 (let ((?x15551 (* ?x14917 l_0_8_41)))
 (let ((?x14492 (* 2.0 l_0_8_31)))
 (let ((?x15549 (* ?x14492 l_0_8_41)))
 (let ((?x15488 (* 4.0 l_0_8_21)))
 (let ((?x15544 (* ?x15488 l_0_8_28)))
 (let ((?x15484 (* 4.0 l_0_8_20)))
 (let ((?x15539 (* ?x15484 l_0_8_27)))
 (let ((?x15480 (* 4.0 l_0_8_19)))
 (let ((?x15534 (* ?x15480 l_0_8_26)))
 (let ((?x15538 (- (+ (* (* (- 2.0) l_0_8_16) l_0_8_26) ?x15534) (* (* 2.0 l_0_8_19) l_0_8_19))))
 (let ((?x15548 (- (+ (- (+ ?x15538 ?x15539) (* (* 2.0 l_0_8_20) l_0_8_20)) ?x15544) (* (* 2.0 l_0_8_21) l_0_8_21))))
 (let ((?x15559 (+ (- (+ (- (+ (- (+ ?x15548 ?x15549) ?x15551) ?x15461) ?x15554) ?x15466) ?x15557) ?x9468)))
 (= ?x15559 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7888 (* l_0_8_33 l_0_8_33)))
 (let ((?x6259 (* l_0_8_32 l_0_8_32)))
 (let ((?x15592 (+ (+ (- (* (- l_0_8_17) l_0_8_17) (* l_0_8_18 l_0_8_18)) ?x6259) ?x7888)))
 (= ?x15592 0.0)))))
(assert
 (let ((?x14826 (* 2.0 l_0_8_33)))
 (let ((?x15606 (* ?x14826 l_0_8_35)))
 (let ((?x14820 (* 2.0 l_0_8_32)))
 (let ((?x15604 (* ?x14820 l_0_8_34)))
 (let ((?x14875 (* 2.0 l_0_8_18)))
 (let ((?x15602 (* ?x14875 l_0_8_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_19) ?x15602) ?x15604) ?x15606) 0.0))))))))
(assert
 (let ((?x14826 (* 2.0 l_0_8_33)))
 (let ((?x15621 (* ?x14826 l_0_8_38)))
 (let ((?x14820 (* 2.0 l_0_8_32)))
 (let ((?x15619 (* ?x14820 l_0_8_37)))
 (let ((?x14875 (* 2.0 l_0_8_18)))
 (let ((?x15617 (* ?x14875 l_0_8_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_22) ?x15617) ?x15619) ?x15621) 0.0))))))))
(assert
 (let ((?x14826 (* 2.0 l_0_8_33)))
 (let ((?x15639 (* ?x14826 l_0_8_42)))
 (let ((?x14820 (* 2.0 l_0_8_32)))
 (let ((?x15637 (* ?x14820 l_0_8_41)))
 (let ((?x14875 (* 2.0 l_0_8_18)))
 (let ((?x15635 (* ?x14875 l_0_8_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_26) ?x15635) ?x15637) ?x15639) 0.0))))))))
(assert
 (let ((?x8216 (* l_0_8_36 l_0_8_36)))
 (let ((?x8158 (* l_0_8_35 l_0_8_35)))
 (let ((?x8121 (* l_0_8_34 l_0_8_34)))
 (let ((?x14908 (* l_0_8_21 l_0_8_21)))
 (let ((?x15656 (+ (- (- (* (- l_0_8_19) l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x14908) ?x8121)))
 (= (+ (+ ?x15656 ?x8158) ?x8216) 0.0)))))))
(assert
 (let ((?x15454 (* 2.0 l_0_8_36)))
 (let ((?x15679 (* ?x15454 l_0_8_39)))
 (let ((?x15451 (* 2.0 l_0_8_35)))
 (let ((?x15677 (* ?x15451 l_0_8_38)))
 (let ((?x15448 (* 2.0 l_0_8_34)))
 (let ((?x15675 (* ?x15448 l_0_8_37)))
 (let ((?x15546 (* 2.0 l_0_8_21)))
 (let ((?x15673 (* ?x15546 l_0_8_24)))
 (let ((?x15541 (* 2.0 l_0_8_20)))
 (let ((?x15671 (* ?x15541 l_0_8_23)))
 (let ((?x15678 (+ (+ (- (- (* (* (- 2.0) l_0_8_19) l_0_8_22) ?x15671) ?x15673) ?x15675) ?x15677)))
 (= (+ ?x15678 ?x15679) 0.0)))))))))))))
(assert
 (let ((?x15454 (* 2.0 l_0_8_36)))
 (let ((?x15699 (* ?x15454 l_0_8_43)))
 (let ((?x15451 (* 2.0 l_0_8_35)))
 (let ((?x15697 (* ?x15451 l_0_8_42)))
 (let ((?x15448 (* 2.0 l_0_8_34)))
 (let ((?x15695 (* ?x15448 l_0_8_41)))
 (let ((?x15546 (* 2.0 l_0_8_21)))
 (let ((?x9558 (* ?x15546 l_0_8_28)))
 (let ((?x15541 (* 2.0 l_0_8_20)))
 (let ((?x9555 (* ?x15541 l_0_8_27)))
 (let ((?x15698 (+ (+ (- (- (* (* (- 2.0) l_0_8_19) l_0_8_26) ?x9555) ?x9558) ?x15695) ?x15697)))
 (= (+ ?x15698 ?x15699) 0.0)))))))))))))
(assert
 (let ((?x8586 (* l_0_8_40 l_0_8_40)))
 (let ((?x8581 (* l_0_8_39 l_0_8_39)))
 (let ((?x8517 (* l_0_8_38 l_0_8_38)))
 (let ((?x8534 (* l_0_8_37 l_0_8_37)))
 (let ((?x15074 (* l_0_8_25 l_0_8_25)))
 (let ((?x15071 (* l_0_8_24 l_0_8_24)))
 (let ((?x9565 (- (- (- (* (- l_0_8_22) l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x15071) ?x15074)))
 (= (+ (+ (+ (+ ?x9565 ?x8534) ?x8517) ?x8581) ?x8586) 0.0)))))))))
(assert
 (let ((?x15745 (* 2.0 l_0_8_40)))
 (let ((?x15746 (* ?x15745 l_0_8_44)))
 (let ((?x15742 (* 2.0 l_0_8_39)))
 (let ((?x15743 (* ?x15742 l_0_8_43)))
 (let ((?x15739 (* 2.0 l_0_8_38)))
 (let ((?x15740 (* ?x15739 l_0_8_42)))
 (let ((?x15736 (* 2.0 l_0_8_37)))
 (let ((?x15737 (* ?x15736 l_0_8_41)))
 (let ((?x15733 (* 2.0 l_0_8_25)))
 (let ((?x15734 (* ?x15733 l_0_8_29)))
 (let ((?x15730 (* 2.0 l_0_8_24)))
 (let ((?x15731 (* ?x15730 l_0_8_28)))
 (let ((?x15727 (* 2.0 l_0_8_23)))
 (let ((?x15728 (* ?x15727 l_0_8_27)))
 (let ((?x15738 (+ (- (- (- (* (* (- 2.0) l_0_8_22) l_0_8_26) ?x15728) ?x15731) ?x15734) ?x15737)))
 (= (+ (+ (+ ?x15738 ?x15740) ?x15743) ?x15746) 0.0)))))))))))))))))
(assert
 (let ((?x8955 (* l_0_8_45 l_0_8_45)))
 (let ((?x15254 (* l_0_8_44 l_0_8_44)))
 (let ((?x8890 (* l_0_8_43 l_0_8_43)))
 (let ((?x8886 (* l_0_8_42 l_0_8_42)))
 (let ((?x8885 (* l_0_8_41 l_0_8_41)))
 (let ((?x8216 (* l_0_8_36 l_0_8_36)))
 (let ((?x8158 (* l_0_8_35 l_0_8_35)))
 (let ((?x8121 (* l_0_8_34 l_0_8_34)))
 (let ((?x15221 (* l_0_8_30 l_0_8_30)))
 (let ((?x15218 (* l_0_8_29 l_0_8_29)))
 (let ((?x15215 (* l_0_8_28 l_0_8_28)))
 (let ((?x15212 (* l_0_8_27 l_0_8_27)))
 (let ((?x15209 (* l_0_8_26 l_0_8_26)))
 (let ((?x14908 (* l_0_8_21 l_0_8_21)))
 (let ((?x15763 (- (+ (+ (* l_0_8_19 l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x14908) ?x15209)))
 (let ((?x15770 (- (- (- (- (- (- (- ?x15763 ?x15212) ?x15215) ?x15218) ?x15221) ?x8121) ?x8158) ?x8216)))
 (= (+ (+ (+ (+ (+ ?x15770 ?x8885) ?x8886) ?x8890) ?x15254) ?x8955) 0.0))))))))))))))))))
(assert
 (let ((?x14923 (* 4.0 l_0_8_36)))
 (let ((?x15557 (* ?x14923 l_0_8_43)))
 (let ((?x14920 (* 4.0 l_0_8_35)))
 (let ((?x15554 (* ?x14920 l_0_8_42)))
 (let ((?x14917 (* 4.0 l_0_8_34)))
 (let ((?x15551 (* ?x14917 l_0_8_41)))
 (let ((?x14492 (* 2.0 l_0_8_31)))
 (let ((?x15446 (* ?x14492 l_0_8_34)))
 (let ((?x15221 (* l_0_8_30 l_0_8_30)))
 (let ((?x15808 (* 2.0 ?x15221)))
 (let ((?x15218 (* l_0_8_29 l_0_8_29)))
 (let ((?x15806 (* 2.0 ?x15218)))
 (let ((?x15215 (* l_0_8_28 l_0_8_28)))
 (let ((?x15804 (* 2.0 ?x15215)))
 (let ((?x15212 (* l_0_8_27 l_0_8_27)))
 (let ((?x15802 (* 2.0 ?x15212)))
 (let ((?x15209 (* l_0_8_26 l_0_8_26)))
 (let ((?x15800 (* 2.0 ?x15209)))
 (let ((?x15488 (* 4.0 l_0_8_21)))
 (let ((?x15544 (* ?x15488 l_0_8_28)))
 (let ((?x15484 (* 4.0 l_0_8_20)))
 (let ((?x15539 (* ?x15484 l_0_8_27)))
 (let ((?x15480 (* 4.0 l_0_8_19)))
 (let ((?x15534 (* ?x15480 l_0_8_26)))
 (let ((?x15801 (+ (- (- (- (* (* 2.0 l_0_8_16) l_0_8_19) ?x15534) ?x15539) ?x15544) ?x15800)))
 (let ((?x15812 (+ (+ (- (+ (+ (+ (+ ?x15801 ?x15802) ?x15804) ?x15806) ?x15808) ?x15446) ?x15551) ?x15554)))
 (let ((?x15819 (- (- (+ ?x15812 ?x15557) (* (* 2.0 l_0_8_41) l_0_8_41)) (* (* 2.0 l_0_8_42) l_0_8_42))))
 (let ((?x15825 (- (- ?x15819 (* (* 2.0 l_0_8_43) l_0_8_43)) (* (* 2.0 l_0_8_44) l_0_8_44))))
 (= (- ?x15825 (* (* 2.0 l_0_8_45) l_0_8_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x15898 (* l_0_8_60 l_0_8_60)))
 (let ((?x15896 (* l_0_8_59 l_0_8_59)))
 (let ((?x15894 (* l_0_8_58 l_0_8_58)))
 (let ((?x15892 (* l_0_8_57 l_0_8_57)))
 (let ((?x15890 (* l_0_8_56 l_0_8_56)))
 (let ((?x15240 (* (* 4.0 l_0_8_45) l_0_8_45)))
 (let ((?x15237 (* (* 4.0 l_0_8_44) l_0_8_44)))
 (let ((?x15234 (* (* 4.0 l_0_8_43) l_0_8_43)))
 (let ((?x15231 (* (* 4.0 l_0_8_42) l_0_8_42)))
 (let ((?x15228 (* (* 4.0 l_0_8_41) l_0_8_41)))
 (let ((?x15088 (* 4.0 l_0_8_40)))
 (let ((?x15883 (* ?x15088 l_0_8_44)))
 (let ((?x15085 (* 4.0 l_0_8_39)))
 (let ((?x15881 (* ?x15085 l_0_8_43)))
 (let ((?x15082 (* 4.0 l_0_8_38)))
 (let ((?x15879 (* ?x15082 l_0_8_42)))
 (let ((?x15079 (* 4.0 l_0_8_37)))
 (let ((?x15877 (* ?x15079 l_0_8_41)))
 (let ((?x14492 (* 2.0 l_0_8_31)))
 (let ((?x15492 (* ?x14492 l_0_8_37)))
 (let ((?x15221 (* l_0_8_30 l_0_8_30)))
 (let ((?x15222 (* 4.0 ?x15221)))
 (let ((?x15218 (* l_0_8_29 l_0_8_29)))
 (let ((?x15219 (* 4.0 ?x15218)))
 (let ((?x15215 (* l_0_8_28 l_0_8_28)))
 (let ((?x15216 (* 4.0 ?x15215)))
 (let ((?x15212 (* l_0_8_27 l_0_8_27)))
 (let ((?x15213 (* 4.0 ?x15212)))
 (let ((?x15209 (* l_0_8_26 l_0_8_26)))
 (let ((?x15210 (* 4.0 ?x15209)))
 (let ((?x15869 (* (* 4.0 l_0_8_25) l_0_8_29)))
 (let ((?x15866 (* (* 4.0 l_0_8_24) l_0_8_28)))
 (let ((?x15863 (* (* 4.0 l_0_8_23) l_0_8_27)))
 (let ((?x15860 (* (* 4.0 l_0_8_22) l_0_8_26)))
 (let ((?x15870 (- (- (- (- (* (* 2.0 l_0_8_16) l_0_8_22) ?x15860) ?x15863) ?x15866) ?x15869)))
 (let ((?x15878 (+ (- (+ (+ (+ (+ (+ ?x15870 ?x15210) ?x15213) ?x15216) ?x15219) ?x15222) ?x15492) ?x15877)))
 (let ((?x15888 (- (- (- (- (+ (+ (+ ?x15878 ?x15879) ?x15881) ?x15883) ?x15228) ?x15231) ?x15234) ?x15237)))
 (= (- (- (- (- (- (- ?x15888 ?x15240) ?x15890) ?x15892) ?x15894) ?x15896) ?x15898) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8955 (* l_0_8_45 l_0_8_45)))
 (let ((?x9693 (* 2.0 ?x8955)))
 (let ((?x15254 (* l_0_8_44 l_0_8_44)))
 (let ((?x15849 (* 2.0 ?x15254)))
 (let ((?x8890 (* l_0_8_43 l_0_8_43)))
 (let ((?x9684 (* 2.0 ?x8890)))
 (let ((?x8886 (* l_0_8_42 l_0_8_42)))
 (let ((?x9680 (* 2.0 ?x8886)))
 (let ((?x8885 (* l_0_8_41 l_0_8_41)))
 (let ((?x15842 (* 2.0 ?x8885)))
 (let ((?x14492 (* 2.0 l_0_8_31)))
 (let ((?x15549 (* ?x14492 l_0_8_41)))
 (let ((?x9828 (- (* (* 2.0 l_0_8_16) l_0_8_26) (* (* 2.0 l_0_8_26) l_0_8_26))))
 (let ((?x15918 (- (- ?x9828 (* (* 2.0 l_0_8_27) l_0_8_27)) (* (* 2.0 l_0_8_28) l_0_8_28))))
 (let ((?x15924 (- (- ?x15918 (* (* 2.0 l_0_8_29) l_0_8_29)) (* (* 2.0 l_0_8_30) l_0_8_30))))
 (= (+ (+ (+ (+ (+ (- ?x15924 ?x15549) ?x15842) ?x9680) ?x9684) ?x15849) ?x9693) 0.0)))))))))))))))))
(assert
 (let ((?x7888 (* l_0_8_33 l_0_8_33)))
 (let ((?x6259 (* l_0_8_32 l_0_8_32)))
 (let ((?x9974 (- (- (+ (* l_0_8_17 l_0_8_17) (* l_0_8_18 l_0_8_18)) ?x6259) ?x7888)))
 (= ?x9974 0.0)))))
(assert
 (let ((?x14826 (* 2.0 l_0_8_33)))
 (let ((?x15606 (* ?x14826 l_0_8_35)))
 (let ((?x14820 (* 2.0 l_0_8_32)))
 (let ((?x15604 (* ?x14820 l_0_8_34)))
 (let ((?x14875 (* 2.0 l_0_8_18)))
 (let ((?x15602 (* ?x14875 l_0_8_20)))
 (= (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_19) ?x15602) ?x15604) ?x15606) 0.0))))))))
(assert
 (let ((?x14826 (* 2.0 l_0_8_33)))
 (let ((?x15621 (* ?x14826 l_0_8_38)))
 (let ((?x14820 (* 2.0 l_0_8_32)))
 (let ((?x15619 (* ?x14820 l_0_8_37)))
 (let ((?x14875 (* 2.0 l_0_8_18)))
 (let ((?x15617 (* ?x14875 l_0_8_23)))
 (= (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_22) ?x15617) ?x15619) ?x15621) 0.0))))))))
(assert
 (let ((?x14826 (* 2.0 l_0_8_33)))
 (let ((?x15639 (* ?x14826 l_0_8_42)))
 (let ((?x14820 (* 2.0 l_0_8_32)))
 (let ((?x15637 (* ?x14820 l_0_8_41)))
 (let ((?x14875 (* 2.0 l_0_8_18)))
 (let ((?x15635 (* ?x14875 l_0_8_27)))
 (= (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_26) ?x15635) ?x15637) ?x15639) 0.0))))))))
(assert
 (let ((?x15454 (* 2.0 l_0_8_36)))
 (let ((?x15679 (* ?x15454 l_0_8_39)))
 (let ((?x15451 (* 2.0 l_0_8_35)))
 (let ((?x15677 (* ?x15451 l_0_8_38)))
 (let ((?x15448 (* 2.0 l_0_8_34)))
 (let ((?x15675 (* ?x15448 l_0_8_37)))
 (let ((?x15546 (* 2.0 l_0_8_21)))
 (let ((?x15673 (* ?x15546 l_0_8_24)))
 (let ((?x15541 (* 2.0 l_0_8_20)))
 (let ((?x15671 (* ?x15541 l_0_8_23)))
 (let ((?x10126 (- (- (+ (+ (* (* 2.0 l_0_8_19) l_0_8_22) ?x15671) ?x15673) ?x15675) ?x15677)))
 (= (- ?x10126 ?x15679) 0.0)))))))))))))
(assert
 (let ((?x15454 (* 2.0 l_0_8_36)))
 (let ((?x15699 (* ?x15454 l_0_8_43)))
 (let ((?x15451 (* 2.0 l_0_8_35)))
 (let ((?x15697 (* ?x15451 l_0_8_42)))
 (let ((?x15448 (* 2.0 l_0_8_34)))
 (let ((?x15695 (* ?x15448 l_0_8_41)))
 (let ((?x15546 (* 2.0 l_0_8_21)))
 (let ((?x9558 (* ?x15546 l_0_8_28)))
 (let ((?x15541 (* 2.0 l_0_8_20)))
 (let ((?x9555 (* ?x15541 l_0_8_27)))
 (let ((?x9888 (- (- (+ (+ (* (* 2.0 l_0_8_19) l_0_8_26) ?x9555) ?x9558) ?x15695) ?x15697)))
 (= (- ?x9888 ?x15699) 0.0)))))))))))))
(assert
 (let ((?x8586 (* l_0_8_40 l_0_8_40)))
 (let ((?x8581 (* l_0_8_39 l_0_8_39)))
 (let ((?x8517 (* l_0_8_38 l_0_8_38)))
 (let ((?x8534 (* l_0_8_37 l_0_8_37)))
 (let ((?x15074 (* l_0_8_25 l_0_8_25)))
 (let ((?x15071 (* l_0_8_24 l_0_8_24)))
 (let ((?x10211 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x15071) ?x15074)))
 (= (- (- (- (- ?x10211 ?x8534) ?x8517) ?x8581) ?x8586) 0.0)))))))))
(assert
 (let ((?x15745 (* 2.0 l_0_8_40)))
 (let ((?x15746 (* ?x15745 l_0_8_44)))
 (let ((?x15742 (* 2.0 l_0_8_39)))
 (let ((?x15743 (* ?x15742 l_0_8_43)))
 (let ((?x15739 (* 2.0 l_0_8_38)))
 (let ((?x15740 (* ?x15739 l_0_8_42)))
 (let ((?x15736 (* 2.0 l_0_8_37)))
 (let ((?x15737 (* ?x15736 l_0_8_41)))
 (let ((?x15733 (* 2.0 l_0_8_25)))
 (let ((?x15734 (* ?x15733 l_0_8_29)))
 (let ((?x15730 (* 2.0 l_0_8_24)))
 (let ((?x15731 (* ?x15730 l_0_8_28)))
 (let ((?x15727 (* 2.0 l_0_8_23)))
 (let ((?x15728 (* ?x15727 l_0_8_27)))
 (let ((?x10215 (- (+ (+ (+ (* (* 2.0 l_0_8_22) l_0_8_26) ?x15728) ?x15731) ?x15734) ?x15737)))
 (= (- (- (- ?x10215 ?x15740) ?x15743) ?x15746) 0.0)))))))))))))))))
(assert
 (let ((?x8955 (* l_0_8_45 l_0_8_45)))
 (let ((?x15254 (* l_0_8_44 l_0_8_44)))
 (let ((?x8890 (* l_0_8_43 l_0_8_43)))
 (let ((?x8886 (* l_0_8_42 l_0_8_42)))
 (let ((?x8885 (* l_0_8_41 l_0_8_41)))
 (let ((?x15221 (* l_0_8_30 l_0_8_30)))
 (let ((?x15218 (* l_0_8_29 l_0_8_29)))
 (let ((?x15215 (* l_0_8_28 l_0_8_28)))
 (let ((?x10239 (+ (+ (+ (* l_0_8_26 l_0_8_26) (* l_0_8_27 l_0_8_27)) ?x15215) ?x15218)))
 (= (- (- (- (- (- (+ ?x10239 ?x15221) ?x8885) ?x8886) ?x8890) ?x15254) ?x8955) 0.0)))))))))))
(assert
 (let ((?x14965 (* 8.0 l_0_8_36)))
 (let ((?x14966 (* ?x14965 l_0_8_39)))
 (let ((?x14962 (* 8.0 l_0_8_35)))
 (let ((?x14963 (* ?x14962 l_0_8_38)))
 (let ((?x14959 (* 8.0 l_0_8_34)))
 (let ((?x14960 (* ?x14959 l_0_8_37)))
 (let ((?x15074 (* l_0_8_25 l_0_8_25)))
 (let ((?x15981 (* 2.0 ?x15074)))
 (let ((?x15071 (* l_0_8_24 l_0_8_24)))
 (let ((?x15979 (* 2.0 ?x15071)))
 (let ((?x15068 (* l_0_8_23 l_0_8_23)))
 (let ((?x15977 (* 2.0 ?x15068)))
 (let ((?x15065 (* l_0_8_22 l_0_8_22)))
 (let ((?x15975 (* 2.0 ?x15065)))
 (let ((?x14950 (* 8.0 l_0_8_21)))
 (let ((?x14951 (* ?x14950 l_0_8_24)))
 (let ((?x14947 (* 8.0 l_0_8_20)))
 (let ((?x14948 (* ?x14947 l_0_8_23)))
 (let ((?x14944 (* 8.0 l_0_8_19)))
 (let ((?x14945 (* ?x14944 l_0_8_22)))
 (let ((?x15983 (- (+ (+ (+ (+ (+ (+ ?x14945 ?x14948) ?x14951) ?x15975) ?x15977) ?x15979) ?x15981) ?x14960)))
 (let ((?x15989 (- (- (- (- ?x15983 ?x14963) ?x14966) (* (* 2.0 l_0_8_37) l_0_8_37)) (* (* 2.0 l_0_8_38) l_0_8_38))))
 (let ((?x15993 (- (- ?x15989 (* (* 2.0 l_0_8_39) l_0_8_39)) (* (* 2.0 l_0_8_40) l_0_8_40))))
 (let ((?x15999 (- (- ?x15993 (* (* 2.0 l_0_8_49) l_0_8_52)) (* (* 2.0 l_0_8_50) l_0_8_53))))
 (= (- ?x15999 (* (* 2.0 l_0_8_51) l_0_8_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15088 (* 4.0 l_0_8_40)))
 (let ((?x15883 (* ?x15088 l_0_8_44)))
 (let ((?x15085 (* 4.0 l_0_8_39)))
 (let ((?x15881 (* ?x15085 l_0_8_43)))
 (let ((?x15082 (* 4.0 l_0_8_38)))
 (let ((?x15879 (* ?x15082 l_0_8_42)))
 (let ((?x15079 (* 4.0 l_0_8_37)))
 (let ((?x15877 (* ?x15079 l_0_8_41)))
 (let ((?x14965 (* 8.0 l_0_8_36)))
 (let ((?x15042 (* ?x14965 l_0_8_43)))
 (let ((?x14923 (* 4.0 l_0_8_36)))
 (let ((?x15500 (* ?x14923 l_0_8_39)))
 (let ((?x14962 (* 8.0 l_0_8_35)))
 (let ((?x15040 (* ?x14962 l_0_8_42)))
 (let ((?x14920 (* 4.0 l_0_8_35)))
 (let ((?x15497 (* ?x14920 l_0_8_38)))
 (let ((?x14959 (* 8.0 l_0_8_34)))
 (let ((?x15038 (* ?x14959 l_0_8_41)))
 (let ((?x14917 (* 4.0 l_0_8_34)))
 (let ((?x15494 (* ?x14917 l_0_8_37)))
 (let ((?x15869 (* (* 4.0 l_0_8_25) l_0_8_29)))
 (let ((?x15866 (* (* 4.0 l_0_8_24) l_0_8_28)))
 (let ((?x15863 (* (* 4.0 l_0_8_23) l_0_8_27)))
 (let ((?x15860 (* (* 4.0 l_0_8_22) l_0_8_26)))
 (let ((?x14950 (* 8.0 l_0_8_21)))
 (let ((?x15030 (* ?x14950 l_0_8_28)))
 (let ((?x15488 (* 4.0 l_0_8_21)))
 (let ((?x15489 (* ?x15488 l_0_8_24)))
 (let ((?x14947 (* 8.0 l_0_8_20)))
 (let ((?x15028 (* ?x14947 l_0_8_27)))
 (let ((?x15484 (* 4.0 l_0_8_20)))
 (let ((?x15485 (* ?x15484 l_0_8_23)))
 (let ((?x14944 (* 8.0 l_0_8_19)))
 (let ((?x15026 (* ?x14944 l_0_8_26)))
 (let ((?x16028 (- (+ (- (+ (* (* (- 4.0) l_0_8_19) l_0_8_22) ?x15026) ?x15485) ?x15028) ?x15489)))
 (let ((?x16035 (- (+ (+ (+ (+ (+ (+ ?x16028 ?x15030) ?x15860) ?x15863) ?x15866) ?x15869) ?x15494) ?x15038)))
 (let ((?x16042 (- (- (- (- (+ (- (+ ?x16035 ?x15497) ?x15040) ?x15500) ?x15042) ?x15877) ?x15879) ?x15881)))
 (let ((?x16047 (- (- (- ?x16042 ?x15883) (* (* 2.0 l_0_8_49) l_0_8_56)) (* (* 2.0 l_0_8_50) l_0_8_57))))
 (= (- ?x16047 (* (* 2.0 l_0_8_51) l_0_8_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8586 (* l_0_8_40 l_0_8_40)))
 (let ((?x10321 (* 2.0 ?x8586)))
 (let ((?x15158 (* (* 8.0 l_0_8_40) l_0_8_44)))
 (let ((?x8581 (* l_0_8_39 l_0_8_39)))
 (let ((?x10319 (* 2.0 ?x8581)))
 (let ((?x15155 (* (* 8.0 l_0_8_39) l_0_8_43)))
 (let ((?x8517 (* l_0_8_38 l_0_8_38)))
 (let ((?x16012 (* 2.0 ?x8517)))
 (let ((?x15152 (* (* 8.0 l_0_8_38) l_0_8_42)))
 (let ((?x8534 (* l_0_8_37 l_0_8_37)))
 (let ((?x10307 (* 2.0 ?x8534)))
 (let ((?x15149 (* (* 8.0 l_0_8_37) l_0_8_41)))
 (let ((?x15142 (* (* 8.0 l_0_8_25) l_0_8_29)))
 (let ((?x15139 (* (* 8.0 l_0_8_24) l_0_8_28)))
 (let ((?x15136 (* (* 8.0 l_0_8_23) l_0_8_27)))
 (let ((?x15133 (* (* 8.0 l_0_8_22) l_0_8_26)))
 (let ((?x16071 (- (+ (- ?x15133 (* (* 2.0 l_0_8_22) l_0_8_22)) ?x15136) (* (* 2.0 l_0_8_23) l_0_8_23))))
 (let ((?x16077 (- (+ (- (+ ?x16071 ?x15139) (* (* 2.0 l_0_8_24) l_0_8_24)) ?x15142) (* (* 2.0 l_0_8_25) l_0_8_25))))
 (let ((?x16084 (- (+ (- (+ (- (+ (- ?x16077 ?x15149) ?x10307) ?x15152) ?x16012) ?x15155) ?x10319) ?x15158)))
 (let ((?x16091 (- (- (+ ?x16084 ?x10321) (* (* 2.0 l_0_8_52) l_0_8_56)) (* (* 2.0 l_0_8_53) l_0_8_57))))
 (let ((?x16097 (- (- ?x16091 (* (* 2.0 l_0_8_54) l_0_8_58)) (* (* 2.0 l_0_8_55) l_0_8_59))))
 (= ?x16097 0.0)))))))))))))))))))))))
(assert
 (let ((?x16132 (* l_0_8_55 l_0_8_55)))
 (let ((?x16130 (* l_0_8_54 l_0_8_54)))
 (let ((?x16128 (* l_0_8_53 l_0_8_53)))
 (let ((?x16126 (* l_0_8_52 l_0_8_52)))
 (let ((?x15088 (* 4.0 l_0_8_40)))
 (let ((?x15089 (* ?x15088 l_0_8_40)))
 (let ((?x15085 (* 4.0 l_0_8_39)))
 (let ((?x15086 (* ?x15085 l_0_8_39)))
 (let ((?x15082 (* 4.0 l_0_8_38)))
 (let ((?x15083 (* ?x15082 l_0_8_38)))
 (let ((?x15079 (* 4.0 l_0_8_37)))
 (let ((?x15080 (* ?x15079 l_0_8_37)))
 (let ((?x15074 (* l_0_8_25 l_0_8_25)))
 (let ((?x15075 (* 4.0 ?x15074)))
 (let ((?x15071 (* l_0_8_24 l_0_8_24)))
 (let ((?x15072 (* 4.0 ?x15071)))
 (let ((?x15068 (* l_0_8_23 l_0_8_23)))
 (let ((?x15069 (* 4.0 ?x15068)))
 (let ((?x15065 (* l_0_8_22 l_0_8_22)))
 (let ((?x15066 (* 4.0 ?x15065)))
 (let ((?x16125 (- (- (- (- (+ (+ (+ ?x15066 ?x15069) ?x15072) ?x15075) ?x15080) ?x15083) ?x15086) ?x15089)))
 (= (- (- (- (- ?x16125 ?x16126) ?x16128) ?x16130) ?x16132) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (let ((?x16169 (* 4.0 l_0_9_31)))
 (let ((?x16170 (* ?x16169 l_0_9_31)))
 (let ((?x16166 (* l_0_9_16 l_0_9_16)))
 (let ((?x16167 (* 4.0 ?x16166)))
 (let ((?x16168 (+ (- (* (* 2.0 l_0_9_1) l_0_9_2) (* l_0_9_1 l_0_9_1)) ?x16167)))
 (let ((?x16177 (- (- (- ?x16168 ?x16170) (* (* 2.0 l_0_9_61) l_0_9_62)) (* (* 2.0 l_0_9_76) l_0_9_77))))
 (= (+ (- ?x16177 (* (* 2.0 l_0_9_91) l_0_9_92)) 4.0) 0.0))))))))
(assert
 (let ((?x16208 (* l_0_9_46 l_0_9_46)))
 (let ((?x16169 (* 4.0 l_0_9_31)))
 (let ((?x16170 (* ?x16169 l_0_9_31)))
 (let ((?x16166 (* l_0_9_16 l_0_9_16)))
 (let ((?x16167 (* 4.0 ?x16166)))
 (let ((?x16211 (- (- (- (+ (* (* 2.0 l_0_9_1) l_0_9_7) ?x16167) ?x16170) ?x16208) (* (* 2.0 l_0_9_61) l_0_9_67))))
 (let ((?x16215 (- (- ?x16211 (* (* 2.0 l_0_9_76) l_0_9_82)) (* (* 2.0 l_0_9_91) l_0_9_97))))
 (= (+ ?x16215 4.0) 0.0)))))))))
(assert
 (let ((?x16257 (* l_0_9_96 l_0_9_96)))
 (let ((?x16255 (* l_0_9_95 l_0_9_95)))
 (let ((?x16253 (* l_0_9_94 l_0_9_94)))
 (let ((?x16251 (* l_0_9_81 l_0_9_81)))
 (let ((?x16249 (* l_0_9_80 l_0_9_80)))
 (let ((?x16247 (* l_0_9_79 l_0_9_79)))
 (let ((?x16245 (* l_0_9_66 l_0_9_66)))
 (let ((?x16243 (* l_0_9_65 l_0_9_65)))
 (let ((?x16241 (* l_0_9_64 l_0_9_64)))
 (let ((?x16189 (* l_0_9_31 l_0_9_31)))
 (let ((?x16169 (* 4.0 l_0_9_31)))
 (let ((?x16229 (* ?x16169 l_0_9_34)))
 (let ((?x16230 (- (- (* (* 4.0 l_0_9_16) l_0_9_19) (* l_0_9_16 l_0_9_16)) ?x16229)))
 (let ((?x16237 (+ (+ (+ ?x16230 ?x16189) (* 1.0 (* l_0_9_4 l_0_9_4))) (* 1.0 (* l_0_9_5 l_0_9_5)))))
 (let ((?x16246 (- (- (- (+ ?x16237 (* 1.0 (* l_0_9_6 l_0_9_6))) ?x16241) ?x16243) ?x16245)))
 (let ((?x16259 (- (- (- (- (- (- (- ?x16246 ?x16247) ?x16249) ?x16251) ?x16253) ?x16255) ?x16257) 1.0)))
 (= ?x16259 0.0))))))))))))))))))
(assert
 (let ((?x16344 (* l_0_9_90 l_0_9_90)))
 (let ((?x16342 (* l_0_9_89 l_0_9_89)))
 (let ((?x16340 (* l_0_9_88 l_0_9_88)))
 (let ((?x16338 (* l_0_9_87 l_0_9_87)))
 (let ((?x16336 (* l_0_9_86 l_0_9_86)))
 (let ((?x16334 (* l_0_9_75 l_0_9_75)))
 (let ((?x16332 (* l_0_9_74 l_0_9_74)))
 (let ((?x16330 (* l_0_9_73 l_0_9_73)))
 (let ((?x16328 (* l_0_9_72 l_0_9_72)))
 (let ((?x16326 (* l_0_9_71 l_0_9_71)))
 (let ((?x16189 (* l_0_9_31 l_0_9_31)))
 (let ((?x16169 (* 4.0 l_0_9_31)))
 (let ((?x16323 (* ?x16169 l_0_9_41)))
 (let ((?x16166 (* l_0_9_16 l_0_9_16)))
 (let ((?x10634 (* 4.0 l_0_9_16)))
 (let ((?x16320 (* ?x10634 l_0_9_26)))
 (let ((?x16303 (* l_0_9_105 l_0_9_105)))
 (let ((?x16301 (* l_0_9_104 l_0_9_104)))
 (let ((?x16299 (* l_0_9_103 l_0_9_103)))
 (let ((?x16300 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x16299)))
 (let ((?x16310 (+ (+ (- (- ?x16300 ?x16301) ?x16303) (* 1.0 (* l_0_9_11 l_0_9_11))) (* 1.0 (* l_0_9_12 l_0_9_12)))))
 (let ((?x16316 (+ (+ ?x16310 (* 1.0 (* l_0_9_13 l_0_9_13))) (* 1.0 (* l_0_9_14 l_0_9_14)))))
 (let ((?x16324 (+ (+ (- (+ ?x16316 (* 1.0 (* l_0_9_15 l_0_9_15))) ?x16320) ?x16166) ?x16323)))
 (let ((?x16337 (- (- (- (- (- (- (- ?x16324 ?x16189) ?x16326) ?x16328) ?x16330) ?x16332) ?x16334) ?x16336)))
 (= (+ (- (- (- (- ?x16337 ?x16338) ?x16340) ?x16342) ?x16344) 1.0) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x16166 (* l_0_9_16 l_0_9_16)))
 (let ((?x16372 (* 2.0 ?x16166)))
 (let ((?x16376 (- (+ (* (* 2.0 l_0_9_1) l_0_9_4) ?x16372) (* (* 2.0 l_0_9_31) l_0_9_31))))
 (let ((?x16380 (- (- ?x16376 (* (* 2.0 l_0_9_61) l_0_9_64)) (* (* 2.0 l_0_9_76) l_0_9_79))))
 (= (+ (- ?x16380 (* (* 2.0 l_0_9_91) l_0_9_94)) 2.0) 0.0))))))
(assert
 (let ((?x16189 (* l_0_9_31 l_0_9_31)))
 (let ((?x16388 (* 2.0 ?x16189)))
 (let ((?x16406 (- (* (* 2.0 l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_101) l_0_9_91))))
 (let ((?x16412 (- (+ (- ?x16406 (* (* 2.0 l_0_9_16) l_0_9_16)) ?x16388) (* (* 2.0 l_0_9_61) l_0_9_71))))
 (= (- (- ?x16412 (* (* 2.0 l_0_9_76) l_0_9_86)) 2.0) 0.0))))))
(assert
 (let ((?x16450 (* l_0_9_93 l_0_9_93)))
 (let ((?x16448 (* l_0_9_92 l_0_9_92)))
 (let ((?x16446 (* l_0_9_78 l_0_9_78)))
 (let ((?x16444 (* l_0_9_77 l_0_9_77)))
 (let ((?x16442 (* l_0_9_63 l_0_9_63)))
 (let ((?x16440 (* l_0_9_62 l_0_9_62)))
 (let ((?x16437 (* 8.0 l_0_9_31)))
 (let ((?x16438 (* ?x16437 l_0_9_32)))
 (let ((?x16428 (* 8.0 l_0_9_16)))
 (let ((?x16429 (* ?x16428 l_0_9_17)))
 (let ((?x16433 (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_2) ?x16429) (* 1.0 (* l_0_9_2 l_0_9_2)))))
 (let ((?x16443 (- (- (- (+ ?x16433 (* 1.0 (* l_0_9_3 l_0_9_3))) ?x16438) ?x16440) ?x16442)))
 (= (- (- (- (- ?x16443 ?x16444) ?x16446) ?x16448) ?x16450) 0.0))))))))))))))
(assert
 (let ((?x16437 (* 8.0 l_0_9_31)))
 (let ((?x16482 (* ?x16437 l_0_9_34)))
 (let ((?x16169 (* 4.0 l_0_9_31)))
 (let ((?x16480 (* ?x16169 l_0_9_32)))
 (let ((?x16477 (* 2.0 l_0_9_3)))
 (let ((?x16478 (* ?x16477 l_0_9_5)))
 (let ((?x16474 (* 2.0 l_0_9_2)))
 (let ((?x16475 (* ?x16474 l_0_9_4)))
 (let ((?x16428 (* 8.0 l_0_9_16)))
 (let ((?x16472 (* ?x16428 l_0_9_19)))
 (let ((?x10634 (* 4.0 l_0_9_16)))
 (let ((?x16470 (* ?x10634 l_0_9_17)))
 (let ((?x16479 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x16470) ?x16472) ?x16475) ?x16478)))
 (let ((?x16489 (- (- (- (- ?x16479 ?x16480) ?x16482) (* (* 2.0 l_0_9_62) l_0_9_64)) (* (* 2.0 l_0_9_63) l_0_9_65))))
 (let ((?x16495 (- (- ?x16489 (* (* 2.0 l_0_9_77) l_0_9_79)) (* (* 2.0 l_0_9_78) l_0_9_80))))
 (let ((?x16501 (- (- ?x16495 (* (* 2.0 l_0_9_92) l_0_9_94)) (* (* 2.0 l_0_9_93) l_0_9_95))))
 (= ?x16501 0.0))))))))))))))))))
(assert
 (let ((?x16437 (* 8.0 l_0_9_31)))
 (let ((?x16538 (* ?x16437 l_0_9_37)))
 (let ((?x16438 (* ?x16437 l_0_9_32)))
 (let ((?x16477 (* 2.0 l_0_9_3)))
 (let ((?x16535 (* ?x16477 l_0_9_8)))
 (let ((?x16474 (* 2.0 l_0_9_2)))
 (let ((?x16533 (* ?x16474 l_0_9_7)))
 (let ((?x16428 (* 8.0 l_0_9_16)))
 (let ((?x16531 (* ?x16428 l_0_9_22)))
 (let ((?x16534 (+ (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) (* ?x16428 l_0_9_17)) ?x16531) ?x16533)))
 (let ((?x16542 (- (- (- (+ ?x16534 ?x16535) ?x16438) ?x16538) (* (* 2.0 l_0_9_46) l_0_9_47))))
 (let ((?x16546 (- (- ?x16542 (* (* 2.0 l_0_9_62) l_0_9_67)) (* (* 2.0 l_0_9_63) l_0_9_68))))
 (let ((?x16550 (- (- ?x16546 (* (* 2.0 l_0_9_77) l_0_9_82)) (* (* 2.0 l_0_9_78) l_0_9_83))))
 (let ((?x16554 (- (- ?x16550 (* (* 2.0 l_0_9_92) l_0_9_97)) (* (* 2.0 l_0_9_93) l_0_9_98))))
 (= ?x16554 0.0))))))))))))))))
(assert
 (let ((?x16437 (* 8.0 l_0_9_31)))
 (let ((?x16576 (* ?x16437 l_0_9_41)))
 (let ((?x16169 (* 4.0 l_0_9_31)))
 (let ((?x16480 (* ?x16169 l_0_9_32)))
 (let ((?x16428 (* 8.0 l_0_9_16)))
 (let ((?x16573 (* ?x16428 l_0_9_26)))
 (let ((?x10634 (* 4.0 l_0_9_16)))
 (let ((?x16470 (* ?x10634 l_0_9_17)))
 (let ((?x11030 (* 2.0 l_0_9_12)))
 (let ((?x11028 (* ?x11030 l_0_9_3)))
 (let ((?x11011 (- (* (* (- 2.0) l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_101) l_0_9_92))))
 (let ((?x10999 (+ (- ?x11011 (* (* 2.0 l_0_9_102) l_0_9_93)) (* (* 2.0 l_0_9_11) l_0_9_2))))
 (let ((?x16579 (- (- (+ (+ (- (+ ?x10999 ?x11028) ?x16470) ?x16573) ?x16480) ?x16576) (* (* 2.0 l_0_9_62) l_0_9_71))))
 (let ((?x16583 (- (- ?x16579 (* (* 2.0 l_0_9_63) l_0_9_72)) (* (* 2.0 l_0_9_77) l_0_9_86))))
 (= (- ?x16583 (* (* 2.0 l_0_9_78) l_0_9_87)) 0.0))))))))))))))))
(assert
 (let ((?x16618 (* 4.0 l_0_9_33)))
 (let ((?x16619 (* ?x16618 l_0_9_33)))
 (let ((?x16615 (* 4.0 l_0_9_32)))
 (let ((?x16616 (* ?x16615 l_0_9_32)))
 (let ((?x16434 (* l_0_9_3 l_0_9_3)))
 (let ((?x16431 (* l_0_9_2 l_0_9_2)))
 (let ((?x16610 (* l_0_9_18 l_0_9_18)))
 (let ((?x16611 (* 4.0 ?x16610)))
 (let ((?x1658 (* l_0_9_17 l_0_9_17)))
 (let ((?x1684 (* 4.0 ?x1658)))
 (= (- (- (- (- (+ ?x1684 ?x16611) ?x16431) ?x16434) ?x16616) ?x16619) 0.0))))))))))))
(assert
 (let ((?x16627 (* 8.0 l_0_9_33)))
 (let ((?x16628 (* ?x16627 l_0_9_35)))
 (let ((?x1718 (* 8.0 l_0_9_32)))
 (let ((?x1722 (* ?x1718 l_0_9_34)))
 (let ((?x16477 (* 2.0 l_0_9_3)))
 (let ((?x16478 (* ?x16477 l_0_9_5)))
 (let ((?x16474 (* 2.0 l_0_9_2)))
 (let ((?x16475 (* ?x16474 l_0_9_4)))
 (let ((?x16610 (* l_0_9_18 l_0_9_18)))
 (let ((?x1687 (* 2.0 ?x16610)))
 (let ((?x1659 (* 8.0 l_0_9_18)))
 (let ((?x1655 (* ?x1659 l_0_9_20)))
 (let ((?x1658 (* l_0_9_17 l_0_9_17)))
 (let ((?x1652 (* 2.0 ?x1658)))
 (let ((?x11140 (* 8.0 l_0_9_17)))
 (let ((?x11141 (* ?x11140 l_0_9_19)))
 (let ((?x16626 (- (- (- (- (+ (+ (+ ?x11141 ?x1652) ?x1655) ?x1687) ?x16475) ?x16478) ?x1722) (* (* 2.0 l_0_9_32) l_0_9_32))))
 (= (- (- ?x16626 ?x16628) (* (* 2.0 l_0_9_33) l_0_9_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x16661 (* l_0_9_48 l_0_9_48)))
 (let ((?x16659 (* l_0_9_47 l_0_9_47)))
 (let ((?x16618 (* 4.0 l_0_9_33)))
 (let ((?x16619 (* ?x16618 l_0_9_33)))
 (let ((?x16627 (* 8.0 l_0_9_33)))
 (let ((?x16656 (* ?x16627 l_0_9_38)))
 (let ((?x16615 (* 4.0 l_0_9_32)))
 (let ((?x16616 (* ?x16615 l_0_9_32)))
 (let ((?x1718 (* 8.0 l_0_9_32)))
 (let ((?x16653 (* ?x1718 l_0_9_37)))
 (let ((?x16477 (* 2.0 l_0_9_3)))
 (let ((?x16535 (* ?x16477 l_0_9_8)))
 (let ((?x16474 (* 2.0 l_0_9_2)))
 (let ((?x16533 (* ?x16474 l_0_9_7)))
 (let ((?x16610 (* l_0_9_18 l_0_9_18)))
 (let ((?x16611 (* 4.0 ?x16610)))
 (let ((?x1659 (* 8.0 l_0_9_18)))
 (let ((?x16648 (* ?x1659 l_0_9_23)))
 (let ((?x1658 (* l_0_9_17 l_0_9_17)))
 (let ((?x1684 (* 4.0 ?x1658)))
 (let ((?x11140 (* 8.0 l_0_9_17)))
 (let ((?x16646 (* ?x11140 l_0_9_22)))
 (let ((?x16655 (- (- (- (- (+ (+ (+ ?x16646 ?x1684) ?x16648) ?x16611) ?x16533) ?x16535) ?x16653) ?x16616)))
 (= (- (- (- (- ?x16655 ?x16656) ?x16619) ?x16659) ?x16661) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x1739 (* l_0_9_33 l_0_9_33)))
 (let ((?x11223 (* 2.0 ?x1739)))
 (let ((?x16627 (* 8.0 l_0_9_33)))
 (let ((?x16680 (* ?x16627 l_0_9_42)))
 (let ((?x1738 (* l_0_9_32 l_0_9_32)))
 (let ((?x1794 (* 2.0 ?x1738)))
 (let ((?x1718 (* 8.0 l_0_9_32)))
 (let ((?x16677 (* ?x1718 l_0_9_41)))
 (let ((?x1659 (* 8.0 l_0_9_18)))
 (let ((?x1889 (* ?x1659 l_0_9_27)))
 (let ((?x11140 (* 8.0 l_0_9_17)))
 (let ((?x1849 (* ?x11140 l_0_9_26)))
 (let ((?x11030 (* 2.0 l_0_9_12)))
 (let ((?x11028 (* ?x11030 l_0_9_3)))
 (let ((?x1895 (- (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x11028) ?x1849) (* (* 2.0 l_0_9_17) l_0_9_17))))
 (let ((?x16679 (+ (- (- (+ ?x1895 ?x1889) (* (* 2.0 l_0_9_18) l_0_9_18)) ?x16677) ?x1794)))
 (= (+ (- ?x16679 ?x16680) ?x11223) 0.0))))))))))))))))))
(assert
 (let ((?x16238 (* l_0_9_6 l_0_9_6)))
 (let ((?x16235 (* l_0_9_5 l_0_9_5)))
 (let ((?x16232 (* l_0_9_4 l_0_9_4)))
 (let ((?x16738 (* 4.0 l_0_9_36)))
 (let ((?x16739 (* ?x16738 l_0_9_36)))
 (let ((?x16735 (* 4.0 l_0_9_35)))
 (let ((?x16736 (* ?x16735 l_0_9_35)))
 (let ((?x16732 (* 4.0 l_0_9_34)))
 (let ((?x16733 (* ?x16732 l_0_9_34)))
 (let ((?x16618 (* 4.0 l_0_9_33)))
 (let ((?x16730 (* ?x16618 l_0_9_35)))
 (let ((?x16615 (* 4.0 l_0_9_32)))
 (let ((?x16728 (* ?x16615 l_0_9_34)))
 (let ((?x16374 (* 2.0 l_0_9_31)))
 (let ((?x16726 (* ?x16374 l_0_9_32)))
 (let ((?x16723 (* l_0_9_21 l_0_9_21)))
 (let ((?x16724 (* 4.0 ?x16723)))
 (let ((?x16720 (* l_0_9_20 l_0_9_20)))
 (let ((?x16721 (* 4.0 ?x16720)))
 (let ((?x16717 (* l_0_9_19 l_0_9_19)))
 (let ((?x16718 (* 4.0 ?x16717)))
 (let ((?x16714 (* 4.0 l_0_9_18)))
 (let ((?x16715 (* ?x16714 l_0_9_20)))
 (let ((?x16711 (* 4.0 l_0_9_17)))
 (let ((?x16712 (* ?x16711 l_0_9_19)))
 (let ((?x16722 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_16) l_0_9_17) ?x16712) ?x16715) ?x16718) ?x16721)))
 (let ((?x16740 (- (- (- (- (- (+ (+ ?x16722 ?x16724) ?x16726) ?x16728) ?x16730) ?x16733) ?x16736) ?x16739)))
 (= (- (- (- ?x16740 ?x16232) ?x16235) ?x16238) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x16801 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x16798 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x16789 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x16785 (* 8.0 l_0_9_36)))
 (let ((?x16786 (* ?x16785 l_0_9_39)))
 (let ((?x16782 (* 8.0 l_0_9_35)))
 (let ((?x16783 (* ?x16782 l_0_9_38)))
 (let ((?x16779 (* 8.0 l_0_9_34)))
 (let ((?x16780 (* ?x16779 l_0_9_37)))
 (let ((?x16618 (* 4.0 l_0_9_33)))
 (let ((?x16777 (* ?x16618 l_0_9_38)))
 (let ((?x16627 (* 8.0 l_0_9_33)))
 (let ((?x16628 (* ?x16627 l_0_9_35)))
 (let ((?x16615 (* 4.0 l_0_9_32)))
 (let ((?x16774 (* ?x16615 l_0_9_37)))
 (let ((?x1718 (* 8.0 l_0_9_32)))
 (let ((?x1722 (* ?x1718 l_0_9_34)))
 (let ((?x16770 (* 8.0 l_0_9_21)))
 (let ((?x16771 (* ?x16770 l_0_9_24)))
 (let ((?x16767 (* 8.0 l_0_9_20)))
 (let ((?x16768 (* ?x16767 l_0_9_23)))
 (let ((?x16764 (* 8.0 l_0_9_19)))
 (let ((?x16765 (* ?x16764 l_0_9_22)))
 (let ((?x16714 (* 4.0 l_0_9_18)))
 (let ((?x16762 (* ?x16714 l_0_9_23)))
 (let ((?x1659 (* 8.0 l_0_9_18)))
 (let ((?x1655 (* ?x1659 l_0_9_20)))
 (let ((?x16711 (* 4.0 l_0_9_17)))
 (let ((?x11291 (* ?x16711 l_0_9_22)))
 (let ((?x11140 (* 8.0 l_0_9_17)))
 (let ((?x11141 (* ?x11140 l_0_9_19)))
 (let ((?x16773 (- (+ (+ (+ (+ (+ (+ ?x11141 ?x11291) ?x1655) ?x16762) ?x16765) ?x16768) ?x16771) ?x1722)))
 (let ((?x16790 (- (- (- (- (- (- (- ?x16773 ?x16774) ?x16628) ?x16777) ?x16780) ?x16783) ?x16786) ?x16789)))
 (let ((?x16796 (- (- ?x16790 (* (* 2.0 l_0_9_47) l_0_9_49)) (* (* 2.0 l_0_9_48) l_0_9_50))))
 (= (- (- ?x16796 ?x16798) ?x16801) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16785 (* 8.0 l_0_9_36)))
 (let ((?x16870 (* ?x16785 l_0_9_43)))
 (let ((?x16782 (* 8.0 l_0_9_35)))
 (let ((?x16868 (* ?x16782 l_0_9_42)))
 (let ((?x16779 (* 8.0 l_0_9_34)))
 (let ((?x16866 (* ?x16779 l_0_9_41)))
 (let ((?x16618 (* 4.0 l_0_9_33)))
 (let ((?x16864 (* ?x16618 l_0_9_42)))
 (let ((?x16730 (* ?x16618 l_0_9_35)))
 (let ((?x16615 (* 4.0 l_0_9_32)))
 (let ((?x16861 (* ?x16615 l_0_9_41)))
 (let ((?x16728 (* ?x16615 l_0_9_34)))
 (let ((?x16770 (* 8.0 l_0_9_21)))
 (let ((?x16858 (* ?x16770 l_0_9_28)))
 (let ((?x16767 (* 8.0 l_0_9_20)))
 (let ((?x16856 (* ?x16767 l_0_9_27)))
 (let ((?x16764 (* 8.0 l_0_9_19)))
 (let ((?x16854 (* ?x16764 l_0_9_26)))
 (let ((?x16714 (* 4.0 l_0_9_18)))
 (let ((?x16852 (* ?x16714 l_0_9_27)))
 (let ((?x16715 (* ?x16714 l_0_9_20)))
 (let ((?x16711 (* 4.0 l_0_9_17)))
 (let ((?x16849 (* ?x16711 l_0_9_26)))
 (let ((?x16712 (* ?x16711 l_0_9_19)))
 (let ((?x16845 (* 2.0 l_0_9_13)))
 (let ((?x16846 (* ?x16845 l_0_9_6)))
 (let ((?x11030 (* 2.0 l_0_9_12)))
 (let ((?x16843 (* ?x11030 l_0_9_5)))
 (let ((?x16850 (+ (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x16843) ?x16846) ?x16712) ?x16849)))
 (let ((?x16862 (- (+ (+ (+ (+ (+ (- ?x16850 ?x16715) ?x16852) ?x16854) ?x16856) ?x16858) ?x16728) ?x16861)))
 (= (- (- (- (- (+ ?x16862 ?x16730) ?x16864) ?x16866) ?x16868) ?x16870) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x16924 (* l_0_9_9 l_0_9_9)))
 (let ((?x16922 (* l_0_9_8 l_0_9_8)))
 (let ((?x16920 (* l_0_9_7 l_0_9_7)))
 (let ((?x16913 (* 4.0 l_0_9_40)))
 (let ((?x16914 (* ?x16913 l_0_9_40)))
 (let ((?x16910 (* 4.0 l_0_9_39)))
 (let ((?x16911 (* ?x16910 l_0_9_39)))
 (let ((?x16907 (* 4.0 l_0_9_38)))
 (let ((?x16908 (* ?x16907 l_0_9_38)))
 (let ((?x16904 (* 4.0 l_0_9_37)))
 (let ((?x16905 (* ?x16904 l_0_9_37)))
 (let ((?x16627 (* 8.0 l_0_9_33)))
 (let ((?x16656 (* ?x16627 l_0_9_38)))
 (let ((?x1718 (* 8.0 l_0_9_32)))
 (let ((?x16653 (* ?x1718 l_0_9_37)))
 (let ((?x16899 (* l_0_9_25 l_0_9_25)))
 (let ((?x16900 (* 4.0 ?x16899)))
 (let ((?x16896 (* l_0_9_24 l_0_9_24)))
 (let ((?x16897 (* 4.0 ?x16896)))
 (let ((?x16893 (* l_0_9_23 l_0_9_23)))
 (let ((?x16894 (* 4.0 ?x16893)))
 (let ((?x11453 (* l_0_9_22 l_0_9_22)))
 (let ((?x11457 (* 4.0 ?x11453)))
 (let ((?x1659 (* 8.0 l_0_9_18)))
 (let ((?x16648 (* ?x1659 l_0_9_23)))
 (let ((?x2333 (+ (+ (* (- l_0_9_10) l_0_9_10) (* (* 8.0 l_0_9_17) l_0_9_22)) ?x16648)))
 (let ((?x16906 (- (- (- (+ (+ (+ (+ ?x2333 ?x11457) ?x16894) ?x16897) ?x16900) ?x16653) ?x16656) ?x16905)))
 (let ((?x16917 (- (- (- (- ?x16906 ?x16908) ?x16911) ?x16914) (* (* 2.0 l_0_9_47) l_0_9_52))))
 (let ((?x16925 (- (- (- (- ?x16917 (* (* 2.0 l_0_9_48) l_0_9_53)) ?x16920) ?x16922) ?x16924)))
 (= ?x16925 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x16989 (* (* 8.0 l_0_9_40) l_0_9_44)))
 (let ((?x16986 (* (* 8.0 l_0_9_39) l_0_9_43)))
 (let ((?x16983 (* (* 8.0 l_0_9_38) l_0_9_42)))
 (let ((?x16980 (* (* 8.0 l_0_9_37) l_0_9_41)))
 (let ((?x16627 (* 8.0 l_0_9_33)))
 (let ((?x16680 (* ?x16627 l_0_9_42)))
 (let ((?x16618 (* 4.0 l_0_9_33)))
 (let ((?x16777 (* ?x16618 l_0_9_38)))
 (let ((?x1718 (* 8.0 l_0_9_32)))
 (let ((?x16677 (* ?x1718 l_0_9_41)))
 (let ((?x16615 (* 4.0 l_0_9_32)))
 (let ((?x16774 (* ?x16615 l_0_9_37)))
 (let ((?x16973 (* (* 8.0 l_0_9_25) l_0_9_29)))
 (let ((?x16970 (* (* 8.0 l_0_9_24) l_0_9_28)))
 (let ((?x16967 (* (* 8.0 l_0_9_23) l_0_9_27)))
 (let ((?x16964 (* (* 8.0 l_0_9_22) l_0_9_26)))
 (let ((?x1659 (* 8.0 l_0_9_18)))
 (let ((?x1889 (* ?x1659 l_0_9_27)))
 (let ((?x16714 (* 4.0 l_0_9_18)))
 (let ((?x16762 (* ?x16714 l_0_9_23)))
 (let ((?x11140 (* 8.0 l_0_9_17)))
 (let ((?x1849 (* ?x11140 l_0_9_26)))
 (let ((?x16711 (* 4.0 l_0_9_17)))
 (let ((?x11291 (* ?x16711 l_0_9_22)))
 (let ((?x16845 (* 2.0 l_0_9_13)))
 (let ((?x16957 (* ?x16845 l_0_9_9)))
 (let ((?x11030 (* 2.0 l_0_9_12)))
 (let ((?x16955 (* ?x11030 l_0_9_8)))
 (let ((?x11023 (* 2.0 l_0_9_11)))
 (let ((?x16953 (* ?x11023 l_0_9_7)))
 (let ((?x16959 (- (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x16953) ?x16955) ?x16957) ?x11291)))
 (let ((?x16974 (+ (+ (+ (+ (+ (- (+ ?x16959 ?x1849) ?x16762) ?x1889) ?x16964) ?x16967) ?x16970) ?x16973)))
 (let ((?x16987 (- (- (- (- (+ (- (+ ?x16974 ?x16774) ?x16677) ?x16777) ?x16680) ?x16980) ?x16983) ?x16986)))
 (let ((?x16994 (- (- (- ?x16987 ?x16989) (* (* 2.0 l_0_9_47) l_0_9_56)) (* (* 2.0 l_0_9_48) l_0_9_57))))
 (= ?x16994 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x17062 (* (* 4.0 l_0_9_45) l_0_9_45)))
 (let ((?x17059 (* (* 4.0 l_0_9_44) l_0_9_44)))
 (let ((?x17056 (* (* 4.0 l_0_9_43) l_0_9_43)))
 (let ((?x17053 (* (* 4.0 l_0_9_42) l_0_9_42)))
 (let ((?x17050 (* (* 4.0 l_0_9_41) l_0_9_41)))
 (let ((?x16618 (* 4.0 l_0_9_33)))
 (let ((?x16864 (* ?x16618 l_0_9_42)))
 (let ((?x16615 (* 4.0 l_0_9_32)))
 (let ((?x16861 (* ?x16615 l_0_9_41)))
 (let ((?x16374 (* 2.0 l_0_9_31)))
 (let ((?x16726 (* ?x16374 l_0_9_32)))
 (let ((?x17043 (* l_0_9_30 l_0_9_30)))
 (let ((?x17044 (* 4.0 ?x17043)))
 (let ((?x17040 (* l_0_9_29 l_0_9_29)))
 (let ((?x17041 (* 4.0 ?x17040)))
 (let ((?x17037 (* l_0_9_28 l_0_9_28)))
 (let ((?x17038 (* 4.0 ?x17037)))
 (let ((?x17034 (* l_0_9_27 l_0_9_27)))
 (let ((?x17035 (* 4.0 ?x17034)))
 (let ((?x17031 (* l_0_9_26 l_0_9_26)))
 (let ((?x17032 (* 4.0 ?x17031)))
 (let ((?x16714 (* 4.0 l_0_9_18)))
 (let ((?x16852 (* ?x16714 l_0_9_27)))
 (let ((?x16711 (* 4.0 l_0_9_17)))
 (let ((?x16849 (* ?x16711 l_0_9_26)))
 (let ((?x16317 (* l_0_9_15 l_0_9_15)))
 (let ((?x16314 (* l_0_9_14 l_0_9_14)))
 (let ((?x16311 (* l_0_9_13 l_0_9_13)))
 (let ((?x17025 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x16311) ?x16314)))
 (let ((?x17030 (- (- (+ (- ?x17025 ?x16317) (* (* 2.0 l_0_9_16) l_0_9_17)) ?x16849) ?x16852)))
 (let ((?x17047 (+ (- (+ (+ (+ (+ (+ ?x17030 ?x17032) ?x17035) ?x17038) ?x17041) ?x17044) ?x16726) ?x16861)))
 (= (- (- (- (- (- (+ ?x17047 ?x16864) ?x17050) ?x17053) ?x17056) ?x17059) ?x17062) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x17094 (* l_0_9_91 l_0_9_91)))
 (let ((?x17092 (* l_0_9_76 l_0_9_76)))
 (let ((?x17093 (- (- (* 1.0 (* l_0_9_1 l_0_9_1)) (* l_0_9_61 l_0_9_61)) ?x17092)))
 (= (- ?x17093 ?x17094) 0.0)))))
(assert
 (let ((?x16801 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x16798 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x16789 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x16169 (* 4.0 l_0_9_31)))
 (let ((?x11750 (* ?x16169 l_0_9_37)))
 (let ((?x16437 (* 8.0 l_0_9_31)))
 (let ((?x16482 (* ?x16437 l_0_9_34)))
 (let ((?x10634 (* 4.0 l_0_9_16)))
 (let ((?x2755 (* ?x10634 l_0_9_22)))
 (let ((?x16428 (* 8.0 l_0_9_16)))
 (let ((?x16472 (* ?x16428 l_0_9_19)))
 (let ((?x11742 (- (+ (- (- (+ ?x16472 ?x2755) ?x16482) ?x11750) ?x16789) (* (* 2.0 l_0_9_46) l_0_9_49))))
 (let ((?x17107 (- (- (+ (+ ?x11742 ?x16798) ?x16801) (* (* 2.0 l_0_9_64) l_0_9_67)) (* (* 2.0 l_0_9_65) l_0_9_68))))
 (let ((?x17113 (- (- ?x17107 (* (* 2.0 l_0_9_66) l_0_9_69)) (* (* 2.0 l_0_9_79) l_0_9_82))))
 (let ((?x17119 (- (- ?x17113 (* (* 2.0 l_0_9_80) l_0_9_83)) (* (* 2.0 l_0_9_81) l_0_9_84))))
 (let ((?x17125 (- (- ?x17119 (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x17125 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0))))))))))))))))))
(assert
 (let ((?x16169 (* 4.0 l_0_9_31)))
 (let ((?x16323 (* ?x16169 l_0_9_41)))
 (let ((?x16229 (* ?x16169 l_0_9_34)))
 (let ((?x10634 (* 4.0 l_0_9_16)))
 (let ((?x16320 (* ?x10634 l_0_9_26)))
 (let ((?x16227 (* ?x10634 l_0_9_19)))
 (let ((?x16845 (* 2.0 l_0_9_13)))
 (let ((?x16846 (* ?x16845 l_0_9_6)))
 (let ((?x11030 (* 2.0 l_0_9_12)))
 (let ((?x16843 (* ?x11030 l_0_9_5)))
 (let ((?x17169 (- (* (* (- 2.0) l_0_9_101) l_0_9_94) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x17174 (+ (- ?x17169 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_11) l_0_9_4))))
 (let ((?x17182 (- (- (+ (+ (- (+ (+ ?x17174 ?x16843) ?x16846) ?x16227) ?x16320) ?x16229) ?x16323) (* (* 2.0 l_0_9_64) l_0_9_71))))
 (let ((?x17186 (- (- ?x17182 (* (* 2.0 l_0_9_65) l_0_9_72)) (* (* 2.0 l_0_9_66) l_0_9_73))))
 (let ((?x17190 (- (- ?x17186 (* (* 2.0 l_0_9_79) l_0_9_86)) (* (* 2.0 l_0_9_80) l_0_9_87))))
 (= (- ?x17190 (* (* 2.0 l_0_9_81) l_0_9_88)) 0.0)))))))))))))))))
(assert
 (let ((?x17244 (* l_0_9_99 l_0_9_99)))
 (let ((?x17242 (* l_0_9_98 l_0_9_98)))
 (let ((?x17240 (* l_0_9_97 l_0_9_97)))
 (let ((?x17236 (* l_0_9_85 l_0_9_85)))
 (let ((?x17234 (* l_0_9_84 l_0_9_84)))
 (let ((?x17232 (* l_0_9_83 l_0_9_83)))
 (let ((?x17230 (* l_0_9_82 l_0_9_82)))
 (let ((?x17226 (* l_0_9_70 l_0_9_70)))
 (let ((?x17222 (* l_0_9_69 l_0_9_69)))
 (let ((?x17220 (* l_0_9_68 l_0_9_68)))
 (let ((?x17218 (* l_0_9_67 l_0_9_67)))
 (let ((?x16437 (* 8.0 l_0_9_31)))
 (let ((?x16538 (* ?x16437 l_0_9_37)))
 (let ((?x16428 (* 8.0 l_0_9_16)))
 (let ((?x16531 (* ?x16428 l_0_9_22)))
 (let ((?x17214 (+ (- (* 1.0 (* l_0_9_10 l_0_9_10)) (* l_0_9_100 l_0_9_100)) ?x16531)))
 (let ((?x17221 (- (- (- (- ?x17214 ?x16538) (* (* 2.0 l_0_9_46) l_0_9_52)) ?x17218) ?x17220)))
 (let ((?x17229 (+ (- (+ (- ?x17221 ?x17222) (* 1.0 (* l_0_9_7 l_0_9_7))) ?x17226) (* 1.0 (* l_0_9_8 l_0_9_8)))))
 (let ((?x17239 (+ (- (- (- (- ?x17229 ?x17230) ?x17232) ?x17234) ?x17236) (* 1.0 (* l_0_9_9 l_0_9_9)))))
 (= (- (- (- ?x17239 ?x17240) ?x17242) ?x17244) 0.0)))))))))))))))))))))
(assert
 (let ((?x16437 (* 8.0 l_0_9_31)))
 (let ((?x16576 (* ?x16437 l_0_9_41)))
 (let ((?x16169 (* 4.0 l_0_9_31)))
 (let ((?x11750 (* ?x16169 l_0_9_37)))
 (let ((?x16428 (* 8.0 l_0_9_16)))
 (let ((?x16573 (* ?x16428 l_0_9_26)))
 (let ((?x10634 (* 4.0 l_0_9_16)))
 (let ((?x2755 (* ?x10634 l_0_9_22)))
 (let ((?x16845 (* 2.0 l_0_9_13)))
 (let ((?x16957 (* ?x16845 l_0_9_9)))
 (let ((?x11030 (* 2.0 l_0_9_12)))
 (let ((?x16955 (* ?x11030 l_0_9_8)))
 (let ((?x11023 (* 2.0 l_0_9_11)))
 (let ((?x16953 (* ?x11023 l_0_9_7)))
 (let ((?x17274 (- (* (* 2.0 l_0_9_10) l_0_9_14) (* (* 2.0 l_0_9_100) l_0_9_104))))
 (let ((?x17278 (- (- ?x17274 (* (* 2.0 l_0_9_101) l_0_9_97)) (* (* 2.0 l_0_9_102) l_0_9_98))))
 (let ((?x17283 (+ (+ (+ (- ?x17278 (* (* 2.0 l_0_9_103) l_0_9_99)) ?x16953) ?x16955) ?x16957)))
 (let ((?x17289 (- (- (+ (+ (- ?x17283 ?x2755) ?x16573) ?x11750) ?x16576) (* (* 2.0 l_0_9_46) l_0_9_56))))
 (let ((?x17295 (- (- ?x17289 (* (* 2.0 l_0_9_67) l_0_9_71)) (* (* 2.0 l_0_9_68) l_0_9_72))))
 (let ((?x17301 (- (- ?x17295 (* (* 2.0 l_0_9_69) l_0_9_73)) (* (* 2.0 l_0_9_70) l_0_9_74))))
 (let ((?x17307 (- (- ?x17301 (* (* 2.0 l_0_9_82) l_0_9_86)) (* (* 2.0 l_0_9_83) l_0_9_87))))
 (let ((?x17313 (- (- ?x17307 (* (* 2.0 l_0_9_84) l_0_9_88)) (* (* 2.0 l_0_9_85) l_0_9_89))))
 (= ?x17313 0.0))))))))))))))))))))))))
(assert
 (let ((?x16374 (* 2.0 l_0_9_31)))
 (let ((?x17346 (* ?x16374 l_0_9_34)))
 (let ((?x11331 (+ (* (* (- 2.0) l_0_9_16) l_0_9_19) (* 2.0 (* l_0_9_19 l_0_9_19)))))
 (let ((?x17345 (+ (+ ?x11331 (* 2.0 (* l_0_9_20 l_0_9_20))) (* 2.0 (* l_0_9_21 l_0_9_21)))))
 (let ((?x17353 (- (- (+ ?x17345 ?x17346) (* (* 2.0 l_0_9_34) l_0_9_34)) (* (* 2.0 l_0_9_35) l_0_9_35))))
 (= (- ?x17353 (* (* 2.0 l_0_9_36) l_0_9_36)) 0.0)))))))
(assert
 (let ((?x17403 (* l_0_9_51 l_0_9_51)))
 (let ((?x17401 (* l_0_9_50 l_0_9_50)))
 (let ((?x17399 (* l_0_9_49 l_0_9_49)))
 (let ((?x16738 (* 4.0 l_0_9_36)))
 (let ((?x16739 (* ?x16738 l_0_9_36)))
 (let ((?x17396 (* ?x16738 l_0_9_39)))
 (let ((?x16735 (* 4.0 l_0_9_35)))
 (let ((?x16736 (* ?x16735 l_0_9_35)))
 (let ((?x17393 (* ?x16735 l_0_9_38)))
 (let ((?x16732 (* 4.0 l_0_9_34)))
 (let ((?x16733 (* ?x16732 l_0_9_34)))
 (let ((?x17390 (* ?x16732 l_0_9_37)))
 (let ((?x16374 (* 2.0 l_0_9_31)))
 (let ((?x17388 (* ?x16374 l_0_9_37)))
 (let ((?x16723 (* l_0_9_21 l_0_9_21)))
 (let ((?x16724 (* 4.0 ?x16723)))
 (let ((?x17384 (* 4.0 l_0_9_21)))
 (let ((?x17385 (* ?x17384 l_0_9_24)))
 (let ((?x16720 (* l_0_9_20 l_0_9_20)))
 (let ((?x16721 (* 4.0 ?x16720)))
 (let ((?x17380 (* 4.0 l_0_9_20)))
 (let ((?x17381 (* ?x17380 l_0_9_23)))
 (let ((?x16717 (* l_0_9_19 l_0_9_19)))
 (let ((?x16718 (* 4.0 ?x16717)))
 (let ((?x17378 (+ (* (* (- 2.0) l_0_9_16) l_0_9_22) (* (* 4.0 l_0_9_19) l_0_9_22))))
 (let ((?x17391 (- (+ (+ (+ (+ (+ (+ ?x17378 ?x16718) ?x17381) ?x16721) ?x17385) ?x16724) ?x17388) ?x17390)))
 (let ((?x17402 (- (- (- (- (- (- (- ?x17391 ?x16733) ?x17393) ?x16736) ?x17396) ?x16739) ?x17399) ?x17401)))
 (= (- ?x17402 ?x17403) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x11326 (* l_0_9_36 l_0_9_36)))
 (let ((?x12030 (* 2.0 ?x11326)))
 (let ((?x16738 (* 4.0 l_0_9_36)))
 (let ((?x17453 (* ?x16738 l_0_9_43)))
 (let ((?x1934 (* l_0_9_35 l_0_9_35)))
 (let ((?x17362 (* 2.0 ?x1934)))
 (let ((?x16735 (* 4.0 l_0_9_35)))
 (let ((?x17450 (* ?x16735 l_0_9_42)))
 (let ((?x16757 (* l_0_9_34 l_0_9_34)))
 (let ((?x3448 (* 2.0 ?x16757)))
 (let ((?x16732 (* 4.0 l_0_9_34)))
 (let ((?x17447 (* ?x16732 l_0_9_41)))
 (let ((?x16374 (* 2.0 l_0_9_31)))
 (let ((?x17445 (* ?x16374 l_0_9_41)))
 (let ((?x17384 (* 4.0 l_0_9_21)))
 (let ((?x17440 (* ?x17384 l_0_9_28)))
 (let ((?x17380 (* 4.0 l_0_9_20)))
 (let ((?x17435 (* ?x17380 l_0_9_27)))
 (let ((?x17376 (* 4.0 l_0_9_19)))
 (let ((?x17430 (* ?x17376 l_0_9_26)))
 (let ((?x17434 (- (+ (* (* (- 2.0) l_0_9_16) l_0_9_26) ?x17430) (* (* 2.0 l_0_9_19) l_0_9_19))))
 (let ((?x17444 (- (+ (- (+ ?x17434 ?x17435) (* (* 2.0 l_0_9_20) l_0_9_20)) ?x17440) (* (* 2.0 l_0_9_21) l_0_9_21))))
 (let ((?x17455 (+ (- (+ (- (+ (- (+ ?x17444 ?x17445) ?x17447) ?x3448) ?x17450) ?x17362) ?x17453) ?x12030)))
 (= ?x17455 0.0)))))))))))))))))))))))))
(assert
 (let ((?x1739 (* l_0_9_33 l_0_9_33)))
 (let ((?x1738 (* l_0_9_32 l_0_9_32)))
 (let ((?x17484 (+ (+ (- (* (- l_0_9_17) l_0_9_17) (* l_0_9_18 l_0_9_18)) ?x1738) ?x1739)))
 (= ?x17484 0.0)))))
(assert
 (let ((?x16630 (* 2.0 l_0_9_33)))
 (let ((?x17497 (* ?x16630 l_0_9_35)))
 (let ((?x16624 (* 2.0 l_0_9_32)))
 (let ((?x17495 (* ?x16624 l_0_9_34)))
 (let ((?x1850 (* 2.0 l_0_9_18)))
 (let ((?x17493 (* ?x1850 l_0_9_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_19) ?x17493) ?x17495) ?x17497) 0.0))))))))
(assert
 (let ((?x16630 (* 2.0 l_0_9_33)))
 (let ((?x17512 (* ?x16630 l_0_9_38)))
 (let ((?x16624 (* 2.0 l_0_9_32)))
 (let ((?x17510 (* ?x16624 l_0_9_37)))
 (let ((?x1850 (* 2.0 l_0_9_18)))
 (let ((?x17508 (* ?x1850 l_0_9_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_22) ?x17508) ?x17510) ?x17512) 0.0))))))))
(assert
 (let ((?x16630 (* 2.0 l_0_9_33)))
 (let ((?x17531 (* ?x16630 l_0_9_42)))
 (let ((?x16624 (* 2.0 l_0_9_32)))
 (let ((?x17529 (* ?x16624 l_0_9_41)))
 (let ((?x1850 (* 2.0 l_0_9_18)))
 (let ((?x17521 (* ?x1850 l_0_9_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_26) ?x17521) ?x17529) ?x17531) 0.0))))))))
(assert
 (let ((?x11326 (* l_0_9_36 l_0_9_36)))
 (let ((?x1934 (* l_0_9_35 l_0_9_35)))
 (let ((?x16757 (* l_0_9_34 l_0_9_34)))
 (let ((?x16723 (* l_0_9_21 l_0_9_21)))
 (let ((?x17549 (+ (- (- (* (- l_0_9_19) l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x16723) ?x16757)))
 (= (+ (+ ?x17549 ?x1934) ?x11326) 0.0)))))))
(assert
 (let ((?x17354 (* 2.0 l_0_9_36)))
 (let ((?x17572 (* ?x17354 l_0_9_39)))
 (let ((?x17351 (* 2.0 l_0_9_35)))
 (let ((?x17570 (* ?x17351 l_0_9_38)))
 (let ((?x17348 (* 2.0 l_0_9_34)))
 (let ((?x17568 (* ?x17348 l_0_9_37)))
 (let ((?x17442 (* 2.0 l_0_9_21)))
 (let ((?x17566 (* ?x17442 l_0_9_24)))
 (let ((?x17437 (* 2.0 l_0_9_20)))
 (let ((?x17564 (* ?x17437 l_0_9_23)))
 (let ((?x17571 (+ (+ (- (- (* (* (- 2.0) l_0_9_19) l_0_9_22) ?x17564) ?x17566) ?x17568) ?x17570)))
 (= (+ ?x17571 ?x17572) 0.0)))))))))))))
(assert
 (let ((?x17354 (* 2.0 l_0_9_36)))
 (let ((?x17584 (* ?x17354 l_0_9_43)))
 (let ((?x17351 (* 2.0 l_0_9_35)))
 (let ((?x17582 (* ?x17351 l_0_9_42)))
 (let ((?x17348 (* 2.0 l_0_9_34)))
 (let ((?x17580 (* ?x17348 l_0_9_41)))
 (let ((?x17442 (* 2.0 l_0_9_21)))
 (let ((?x12108 (* ?x17442 l_0_9_28)))
 (let ((?x17437 (* 2.0 l_0_9_20)))
 (let ((?x3680 (* ?x17437 l_0_9_27)))
 (let ((?x17583 (+ (+ (- (- (* (* (- 2.0) l_0_9_19) l_0_9_26) ?x3680) ?x12108) ?x17580) ?x17582)))
 (= (+ ?x17583 ?x17584) 0.0)))))))))))))
(assert
 (let ((?x16943 (* l_0_9_40 l_0_9_40)))
 (let ((?x2383 (* l_0_9_39 l_0_9_39)))
 (let ((?x2380 (* l_0_9_38 l_0_9_38)))
 (let ((?x11514 (* l_0_9_37 l_0_9_37)))
 (let ((?x16899 (* l_0_9_25 l_0_9_25)))
 (let ((?x16896 (* l_0_9_24 l_0_9_24)))
 (let ((?x17596 (- (- (- (* (- l_0_9_22) l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x16896) ?x16899)))
 (= (+ (+ (+ (+ ?x17596 ?x11514) ?x2380) ?x2383) ?x16943) 0.0)))))))))
(assert
 (let ((?x17630 (* 2.0 l_0_9_40)))
 (let ((?x17631 (* ?x17630 l_0_9_44)))
 (let ((?x17627 (* 2.0 l_0_9_39)))
 (let ((?x17628 (* ?x17627 l_0_9_43)))
 (let ((?x17624 (* 2.0 l_0_9_38)))
 (let ((?x17625 (* ?x17624 l_0_9_42)))
 (let ((?x17621 (* 2.0 l_0_9_37)))
 (let ((?x17622 (* ?x17621 l_0_9_41)))
 (let ((?x17618 (* 2.0 l_0_9_25)))
 (let ((?x17619 (* ?x17618 l_0_9_29)))
 (let ((?x17615 (* 2.0 l_0_9_24)))
 (let ((?x17616 (* ?x17615 l_0_9_28)))
 (let ((?x17612 (* 2.0 l_0_9_23)))
 (let ((?x17613 (* ?x17612 l_0_9_27)))
 (let ((?x17623 (+ (- (- (- (* (* (- 2.0) l_0_9_22) l_0_9_26) ?x17613) ?x17616) ?x17619) ?x17622)))
 (= (+ (+ (+ ?x17623 ?x17625) ?x17628) ?x17631) 0.0)))))))))))))))))
(assert
 (let ((?x2797 (* l_0_9_45 l_0_9_45)))
 (let ((?x2802 (* l_0_9_44 l_0_9_44)))
 (let ((?x2771 (* l_0_9_43 l_0_9_43)))
 (let ((?x17075 (* l_0_9_42 l_0_9_42)))
 (let ((?x2749 (* l_0_9_41 l_0_9_41)))
 (let ((?x11326 (* l_0_9_36 l_0_9_36)))
 (let ((?x1934 (* l_0_9_35 l_0_9_35)))
 (let ((?x16757 (* l_0_9_34 l_0_9_34)))
 (let ((?x17043 (* l_0_9_30 l_0_9_30)))
 (let ((?x17040 (* l_0_9_29 l_0_9_29)))
 (let ((?x17037 (* l_0_9_28 l_0_9_28)))
 (let ((?x17034 (* l_0_9_27 l_0_9_27)))
 (let ((?x17031 (* l_0_9_26 l_0_9_26)))
 (let ((?x16723 (* l_0_9_21 l_0_9_21)))
 (let ((?x17645 (- (+ (+ (* l_0_9_19 l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x16723) ?x17031)))
 (let ((?x17652 (- (- (- (- (- (- (- ?x17645 ?x17034) ?x17037) ?x17040) ?x17043) ?x16757) ?x1934) ?x11326)))
 (= (+ (+ (+ (+ (+ ?x17652 ?x2749) ?x17075) ?x2771) ?x2802) ?x2797) 0.0))))))))))))))))))
(assert
 (let ((?x16738 (* 4.0 l_0_9_36)))
 (let ((?x17453 (* ?x16738 l_0_9_43)))
 (let ((?x16735 (* 4.0 l_0_9_35)))
 (let ((?x17450 (* ?x16735 l_0_9_42)))
 (let ((?x16732 (* 4.0 l_0_9_34)))
 (let ((?x17447 (* ?x16732 l_0_9_41)))
 (let ((?x16374 (* 2.0 l_0_9_31)))
 (let ((?x17346 (* ?x16374 l_0_9_34)))
 (let ((?x17384 (* 4.0 l_0_9_21)))
 (let ((?x17440 (* ?x17384 l_0_9_28)))
 (let ((?x17380 (* 4.0 l_0_9_20)))
 (let ((?x17435 (* ?x17380 l_0_9_27)))
 (let ((?x17376 (* 4.0 l_0_9_19)))
 (let ((?x17430 (* ?x17376 l_0_9_26)))
 (let ((?x17664 (+ (- (- (- (* (* 2.0 l_0_9_16) l_0_9_19) ?x17430) ?x17435) ?x17440) (* 2.0 (* l_0_9_26 l_0_9_26)))))
 (let ((?x17668 (+ (+ ?x17664 (* 2.0 (* l_0_9_27 l_0_9_27))) (* 2.0 (* l_0_9_28 l_0_9_28)))))
 (let ((?x17672 (+ (+ ?x17668 (* 2.0 (* l_0_9_29 l_0_9_29))) (* 2.0 (* l_0_9_30 l_0_9_30)))))
 (let ((?x17679 (- (+ (+ (+ (- ?x17672 ?x17346) ?x17447) ?x17450) ?x17453) (* (* 2.0 l_0_9_41) l_0_9_41))))
 (let ((?x17685 (- (- ?x17679 (* (* 2.0 l_0_9_42) l_0_9_42)) (* (* 2.0 l_0_9_43) l_0_9_43))))
 (let ((?x17691 (- (- ?x17685 (* (* 2.0 l_0_9_44) l_0_9_44)) (* (* 2.0 l_0_9_45) l_0_9_45))))
 (= ?x17691 0.0))))))))))))))))))))))
(assert
 (let ((?x17759 (* l_0_9_60 l_0_9_60)))
 (let ((?x17757 (* l_0_9_59 l_0_9_59)))
 (let ((?x17755 (* l_0_9_58 l_0_9_58)))
 (let ((?x17753 (* l_0_9_57 l_0_9_57)))
 (let ((?x17751 (* l_0_9_56 l_0_9_56)))
 (let ((?x17062 (* (* 4.0 l_0_9_45) l_0_9_45)))
 (let ((?x17059 (* (* 4.0 l_0_9_44) l_0_9_44)))
 (let ((?x17056 (* (* 4.0 l_0_9_43) l_0_9_43)))
 (let ((?x17053 (* (* 4.0 l_0_9_42) l_0_9_42)))
 (let ((?x17050 (* (* 4.0 l_0_9_41) l_0_9_41)))
 (let ((?x16913 (* 4.0 l_0_9_40)))
 (let ((?x17744 (* ?x16913 l_0_9_44)))
 (let ((?x16910 (* 4.0 l_0_9_39)))
 (let ((?x17742 (* ?x16910 l_0_9_43)))
 (let ((?x16907 (* 4.0 l_0_9_38)))
 (let ((?x17740 (* ?x16907 l_0_9_42)))
 (let ((?x16904 (* 4.0 l_0_9_37)))
 (let ((?x17738 (* ?x16904 l_0_9_41)))
 (let ((?x16374 (* 2.0 l_0_9_31)))
 (let ((?x17388 (* ?x16374 l_0_9_37)))
 (let ((?x17043 (* l_0_9_30 l_0_9_30)))
 (let ((?x17044 (* 4.0 ?x17043)))
 (let ((?x17040 (* l_0_9_29 l_0_9_29)))
 (let ((?x17041 (* 4.0 ?x17040)))
 (let ((?x17037 (* l_0_9_28 l_0_9_28)))
 (let ((?x17038 (* 4.0 ?x17037)))
 (let ((?x17034 (* l_0_9_27 l_0_9_27)))
 (let ((?x17035 (* 4.0 ?x17034)))
 (let ((?x17031 (* l_0_9_26 l_0_9_26)))
 (let ((?x17032 (* 4.0 ?x17031)))
 (let ((?x17730 (* (* 4.0 l_0_9_25) l_0_9_29)))
 (let ((?x17727 (* (* 4.0 l_0_9_24) l_0_9_28)))
 (let ((?x17724 (* (* 4.0 l_0_9_23) l_0_9_27)))
 (let ((?x17721 (* (* 4.0 l_0_9_22) l_0_9_26)))
 (let ((?x17731 (- (- (- (- (* (* 2.0 l_0_9_16) l_0_9_22) ?x17721) ?x17724) ?x17727) ?x17730)))
 (let ((?x17739 (+ (- (+ (+ (+ (+ (+ ?x17731 ?x17032) ?x17035) ?x17038) ?x17041) ?x17044) ?x17388) ?x17738)))
 (let ((?x17749 (- (- (- (- (+ (+ (+ ?x17739 ?x17740) ?x17742) ?x17744) ?x17050) ?x17053) ?x17056) ?x17059)))
 (= (- (- (- (- (- (- ?x17749 ?x17062) ?x17751) ?x17753) ?x17755) ?x17757) ?x17759) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2797 (* l_0_9_45 l_0_9_45)))
 (let ((?x12390 (* 2.0 ?x2797)))
 (let ((?x2802 (* l_0_9_44 l_0_9_44)))
 (let ((?x3854 (* 2.0 ?x2802)))
 (let ((?x2771 (* l_0_9_43 l_0_9_43)))
 (let ((?x12360 (* 2.0 ?x2771)))
 (let ((?x17075 (* l_0_9_42 l_0_9_42)))
 (let ((?x12357 (* 2.0 ?x17075)))
 (let ((?x2749 (* l_0_9_41 l_0_9_41)))
 (let ((?x12328 (* 2.0 ?x2749)))
 (let ((?x16374 (* 2.0 l_0_9_31)))
 (let ((?x17445 (* ?x16374 l_0_9_41)))
 (let ((?x12463 (- (* (* 2.0 l_0_9_16) l_0_9_26) (* (* 2.0 l_0_9_26) l_0_9_26))))
 (let ((?x17776 (- (- ?x12463 (* (* 2.0 l_0_9_27) l_0_9_27)) (* (* 2.0 l_0_9_28) l_0_9_28))))
 (let ((?x17782 (- (- ?x17776 (* (* 2.0 l_0_9_29) l_0_9_29)) (* (* 2.0 l_0_9_30) l_0_9_30))))
 (= (+ (+ (+ (+ (+ (- ?x17782 ?x17445) ?x12328) ?x12357) ?x12360) ?x3854) ?x12390) 0.0)))))))))))))))))
(assert
 (let ((?x1739 (* l_0_9_33 l_0_9_33)))
 (let ((?x1738 (* l_0_9_32 l_0_9_32)))
 (let ((?x4062 (- (- (+ (* l_0_9_17 l_0_9_17) (* l_0_9_18 l_0_9_18)) ?x1738) ?x1739)))
 (= ?x4062 0.0)))))
(assert
 (let ((?x16630 (* 2.0 l_0_9_33)))
 (let ((?x17497 (* ?x16630 l_0_9_35)))
 (let ((?x16624 (* 2.0 l_0_9_32)))
 (let ((?x17495 (* ?x16624 l_0_9_34)))
 (let ((?x1850 (* 2.0 l_0_9_18)))
 (let ((?x17493 (* ?x1850 l_0_9_20)))
 (= (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_19) ?x17493) ?x17495) ?x17497) 0.0))))))))
(assert
 (let ((?x16630 (* 2.0 l_0_9_33)))
 (let ((?x17512 (* ?x16630 l_0_9_38)))
 (let ((?x16624 (* 2.0 l_0_9_32)))
 (let ((?x17510 (* ?x16624 l_0_9_37)))
 (let ((?x1850 (* 2.0 l_0_9_18)))
 (let ((?x17508 (* ?x1850 l_0_9_23)))
 (= (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_22) ?x17508) ?x17510) ?x17512) 0.0))))))))
(assert
 (let ((?x16630 (* 2.0 l_0_9_33)))
 (let ((?x17531 (* ?x16630 l_0_9_42)))
 (let ((?x16624 (* 2.0 l_0_9_32)))
 (let ((?x17529 (* ?x16624 l_0_9_41)))
 (let ((?x1850 (* 2.0 l_0_9_18)))
 (let ((?x17521 (* ?x1850 l_0_9_27)))
 (= (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_26) ?x17521) ?x17529) ?x17531) 0.0))))))))
(assert
 (let ((?x17354 (* 2.0 l_0_9_36)))
 (let ((?x17572 (* ?x17354 l_0_9_39)))
 (let ((?x17351 (* 2.0 l_0_9_35)))
 (let ((?x17570 (* ?x17351 l_0_9_38)))
 (let ((?x17348 (* 2.0 l_0_9_34)))
 (let ((?x17568 (* ?x17348 l_0_9_37)))
 (let ((?x17442 (* 2.0 l_0_9_21)))
 (let ((?x17566 (* ?x17442 l_0_9_24)))
 (let ((?x17437 (* 2.0 l_0_9_20)))
 (let ((?x17564 (* ?x17437 l_0_9_23)))
 (let ((?x17816 (- (- (+ (+ (* (* 2.0 l_0_9_19) l_0_9_22) ?x17564) ?x17566) ?x17568) ?x17570)))
 (= (- ?x17816 ?x17572) 0.0)))))))))))))
(assert
 (let ((?x17354 (* 2.0 l_0_9_36)))
 (let ((?x17584 (* ?x17354 l_0_9_43)))
 (let ((?x17351 (* 2.0 l_0_9_35)))
 (let ((?x17582 (* ?x17351 l_0_9_42)))
 (let ((?x17348 (* 2.0 l_0_9_34)))
 (let ((?x17580 (* ?x17348 l_0_9_41)))
 (let ((?x17442 (* 2.0 l_0_9_21)))
 (let ((?x12108 (* ?x17442 l_0_9_28)))
 (let ((?x17437 (* 2.0 l_0_9_20)))
 (let ((?x3680 (* ?x17437 l_0_9_27)))
 (let ((?x17827 (- (- (+ (+ (* (* 2.0 l_0_9_19) l_0_9_26) ?x3680) ?x12108) ?x17580) ?x17582)))
 (= (- ?x17827 ?x17584) 0.0)))))))))))))
(assert
 (let ((?x16943 (* l_0_9_40 l_0_9_40)))
 (let ((?x2383 (* l_0_9_39 l_0_9_39)))
 (let ((?x2380 (* l_0_9_38 l_0_9_38)))
 (let ((?x11514 (* l_0_9_37 l_0_9_37)))
 (let ((?x16899 (* l_0_9_25 l_0_9_25)))
 (let ((?x16896 (* l_0_9_24 l_0_9_24)))
 (let ((?x4268 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x16896) ?x16899)))
 (= (- (- (- (- ?x4268 ?x11514) ?x2380) ?x2383) ?x16943) 0.0)))))))))
(assert
 (let ((?x17630 (* 2.0 l_0_9_40)))
 (let ((?x17631 (* ?x17630 l_0_9_44)))
 (let ((?x17627 (* 2.0 l_0_9_39)))
 (let ((?x17628 (* ?x17627 l_0_9_43)))
 (let ((?x17624 (* 2.0 l_0_9_38)))
 (let ((?x17625 (* ?x17624 l_0_9_42)))
 (let ((?x17621 (* 2.0 l_0_9_37)))
 (let ((?x17622 (* ?x17621 l_0_9_41)))
 (let ((?x17618 (* 2.0 l_0_9_25)))
 (let ((?x17619 (* ?x17618 l_0_9_29)))
 (let ((?x17615 (* 2.0 l_0_9_24)))
 (let ((?x17616 (* ?x17615 l_0_9_28)))
 (let ((?x17612 (* 2.0 l_0_9_23)))
 (let ((?x17613 (* ?x17612 l_0_9_27)))
 (let ((?x17852 (- (+ (+ (+ (* (* 2.0 l_0_9_22) l_0_9_26) ?x17613) ?x17616) ?x17619) ?x17622)))
 (= (- (- (- ?x17852 ?x17625) ?x17628) ?x17631) 0.0)))))))))))))))))
(assert
 (let ((?x2797 (* l_0_9_45 l_0_9_45)))
 (let ((?x2802 (* l_0_9_44 l_0_9_44)))
 (let ((?x2771 (* l_0_9_43 l_0_9_43)))
 (let ((?x17075 (* l_0_9_42 l_0_9_42)))
 (let ((?x2749 (* l_0_9_41 l_0_9_41)))
 (let ((?x17043 (* l_0_9_30 l_0_9_30)))
 (let ((?x17040 (* l_0_9_29 l_0_9_29)))
 (let ((?x17037 (* l_0_9_28 l_0_9_28)))
 (let ((?x17863 (+ (+ (+ (* l_0_9_26 l_0_9_26) (* l_0_9_27 l_0_9_27)) ?x17037) ?x17040)))
 (= (- (- (- (- (- (+ ?x17863 ?x17043) ?x2749) ?x17075) ?x2771) ?x2802) ?x2797) 0.0)))))))))))
(assert
 (let ((?x16785 (* 8.0 l_0_9_36)))
 (let ((?x16786 (* ?x16785 l_0_9_39)))
 (let ((?x16782 (* 8.0 l_0_9_35)))
 (let ((?x16783 (* ?x16782 l_0_9_38)))
 (let ((?x16779 (* 8.0 l_0_9_34)))
 (let ((?x16780 (* ?x16779 l_0_9_37)))
 (let ((?x16899 (* l_0_9_25 l_0_9_25)))
 (let ((?x4324 (* 2.0 ?x16899)))
 (let ((?x16896 (* l_0_9_24 l_0_9_24)))
 (let ((?x4329 (* 2.0 ?x16896)))
 (let ((?x16893 (* l_0_9_23 l_0_9_23)))
 (let ((?x4298 (* 2.0 ?x16893)))
 (let ((?x11453 (* l_0_9_22 l_0_9_22)))
 (let ((?x12568 (* 2.0 ?x11453)))
 (let ((?x16770 (* 8.0 l_0_9_21)))
 (let ((?x16771 (* ?x16770 l_0_9_24)))
 (let ((?x16767 (* 8.0 l_0_9_20)))
 (let ((?x16768 (* ?x16767 l_0_9_23)))
 (let ((?x16764 (* 8.0 l_0_9_19)))
 (let ((?x16765 (* ?x16764 l_0_9_22)))
 (let ((?x17873 (- (+ (+ (+ (+ (+ (+ ?x16765 ?x16768) ?x16771) ?x12568) ?x4298) ?x4329) ?x4324) ?x16780)))
 (let ((?x17879 (- (- (- (- ?x17873 ?x16783) ?x16786) (* (* 2.0 l_0_9_37) l_0_9_37)) (* (* 2.0 l_0_9_38) l_0_9_38))))
 (let ((?x17883 (- (- ?x17879 (* (* 2.0 l_0_9_39) l_0_9_39)) (* (* 2.0 l_0_9_40) l_0_9_40))))
 (let ((?x17889 (- (- ?x17883 (* (* 2.0 l_0_9_49) l_0_9_52)) (* (* 2.0 l_0_9_50) l_0_9_53))))
 (= (- ?x17889 (* (* 2.0 l_0_9_51) l_0_9_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x16913 (* 4.0 l_0_9_40)))
 (let ((?x17744 (* ?x16913 l_0_9_44)))
 (let ((?x16910 (* 4.0 l_0_9_39)))
 (let ((?x17742 (* ?x16910 l_0_9_43)))
 (let ((?x16907 (* 4.0 l_0_9_38)))
 (let ((?x17740 (* ?x16907 l_0_9_42)))
 (let ((?x16904 (* 4.0 l_0_9_37)))
 (let ((?x17738 (* ?x16904 l_0_9_41)))
 (let ((?x16785 (* 8.0 l_0_9_36)))
 (let ((?x16870 (* ?x16785 l_0_9_43)))
 (let ((?x16738 (* 4.0 l_0_9_36)))
 (let ((?x17396 (* ?x16738 l_0_9_39)))
 (let ((?x16782 (* 8.0 l_0_9_35)))
 (let ((?x16868 (* ?x16782 l_0_9_42)))
 (let ((?x16735 (* 4.0 l_0_9_35)))
 (let ((?x17393 (* ?x16735 l_0_9_38)))
 (let ((?x16779 (* 8.0 l_0_9_34)))
 (let ((?x16866 (* ?x16779 l_0_9_41)))
 (let ((?x16732 (* 4.0 l_0_9_34)))
 (let ((?x17390 (* ?x16732 l_0_9_37)))
 (let ((?x17730 (* (* 4.0 l_0_9_25) l_0_9_29)))
 (let ((?x17727 (* (* 4.0 l_0_9_24) l_0_9_28)))
 (let ((?x17724 (* (* 4.0 l_0_9_23) l_0_9_27)))
 (let ((?x17721 (* (* 4.0 l_0_9_22) l_0_9_26)))
 (let ((?x16770 (* 8.0 l_0_9_21)))
 (let ((?x16858 (* ?x16770 l_0_9_28)))
 (let ((?x17384 (* 4.0 l_0_9_21)))
 (let ((?x17385 (* ?x17384 l_0_9_24)))
 (let ((?x16767 (* 8.0 l_0_9_20)))
 (let ((?x16856 (* ?x16767 l_0_9_27)))
 (let ((?x17380 (* 4.0 l_0_9_20)))
 (let ((?x17381 (* ?x17380 l_0_9_23)))
 (let ((?x16764 (* 8.0 l_0_9_19)))
 (let ((?x16854 (* ?x16764 l_0_9_26)))
 (let ((?x17910 (- (+ (- (+ (* (* (- 4.0) l_0_9_19) l_0_9_22) ?x16854) ?x17381) ?x16856) ?x17385)))
 (let ((?x17917 (- (+ (+ (+ (+ (+ (+ ?x17910 ?x16858) ?x17721) ?x17724) ?x17727) ?x17730) ?x17390) ?x16866)))
 (let ((?x17924 (- (- (- (- (+ (- (+ ?x17917 ?x17393) ?x16868) ?x17396) ?x16870) ?x17738) ?x17740) ?x17742)))
 (let ((?x17929 (- (- (- ?x17924 ?x17744) (* (* 2.0 l_0_9_49) l_0_9_56)) (* (* 2.0 l_0_9_50) l_0_9_57))))
 (= (- ?x17929 (* (* 2.0 l_0_9_51) l_0_9_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16989 (* (* 8.0 l_0_9_40) l_0_9_44)))
 (let ((?x16986 (* (* 8.0 l_0_9_39) l_0_9_43)))
 (let ((?x16983 (* (* 8.0 l_0_9_38) l_0_9_42)))
 (let ((?x16980 (* (* 8.0 l_0_9_37) l_0_9_41)))
 (let ((?x16973 (* (* 8.0 l_0_9_25) l_0_9_29)))
 (let ((?x16970 (* (* 8.0 l_0_9_24) l_0_9_28)))
 (let ((?x16967 (* (* 8.0 l_0_9_23) l_0_9_27)))
 (let ((?x16964 (* (* 8.0 l_0_9_22) l_0_9_26)))
 (let ((?x17953 (- (+ (- ?x16964 (* (* 2.0 l_0_9_22) l_0_9_22)) ?x16967) (* (* 2.0 l_0_9_23) l_0_9_23))))
 (let ((?x17959 (- (+ (- (+ ?x17953 ?x16970) (* (* 2.0 l_0_9_24) l_0_9_24)) ?x16973) (* (* 2.0 l_0_9_25) l_0_9_25))))
 (let ((?x17963 (+ (- (+ (- ?x17959 ?x16980) (* 2.0 (* l_0_9_37 l_0_9_37))) ?x16983) (* 2.0 (* l_0_9_38 l_0_9_38)))))
 (let ((?x17967 (+ (- (+ (- ?x17963 ?x16986) (* 2.0 (* l_0_9_39 l_0_9_39))) ?x16989) (* 2.0 (* l_0_9_40 l_0_9_40)))))
 (let ((?x17973 (- (- ?x17967 (* (* 2.0 l_0_9_52) l_0_9_56)) (* (* 2.0 l_0_9_53) l_0_9_57))))
 (let ((?x17979 (- (- ?x17973 (* (* 2.0 l_0_9_54) l_0_9_58)) (* (* 2.0 l_0_9_55) l_0_9_59))))
 (= ?x17979 0.0))))))))))))))))
(assert
 (let ((?x18015 (* l_0_9_55 l_0_9_55)))
 (let ((?x18013 (* l_0_9_54 l_0_9_54)))
 (let ((?x18011 (* l_0_9_53 l_0_9_53)))
 (let ((?x18009 (* l_0_9_52 l_0_9_52)))
 (let ((?x16913 (* 4.0 l_0_9_40)))
 (let ((?x16914 (* ?x16913 l_0_9_40)))
 (let ((?x16910 (* 4.0 l_0_9_39)))
 (let ((?x16911 (* ?x16910 l_0_9_39)))
 (let ((?x16907 (* 4.0 l_0_9_38)))
 (let ((?x16908 (* ?x16907 l_0_9_38)))
 (let ((?x16904 (* 4.0 l_0_9_37)))
 (let ((?x16905 (* ?x16904 l_0_9_37)))
 (let ((?x16899 (* l_0_9_25 l_0_9_25)))
 (let ((?x16900 (* 4.0 ?x16899)))
 (let ((?x16896 (* l_0_9_24 l_0_9_24)))
 (let ((?x16897 (* 4.0 ?x16896)))
 (let ((?x16893 (* l_0_9_23 l_0_9_23)))
 (let ((?x16894 (* 4.0 ?x16893)))
 (let ((?x11453 (* l_0_9_22 l_0_9_22)))
 (let ((?x11457 (* 4.0 ?x11453)))
 (let ((?x18008 (- (- (- (- (+ (+ (+ ?x11457 ?x16894) ?x16897) ?x16900) ?x16905) ?x16908) ?x16911) ?x16914)))
 (= (- (- (- (- ?x18008 ?x18009) ?x18011) ?x18013) ?x18015) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (let ((?x18064 (* 4.0 l_0_10_31)))
 (let ((?x18065 (* ?x18064 l_0_10_31)))
 (let ((?x18061 (* l_0_10_16 l_0_10_16)))
 (let ((?x18062 (* 4.0 ?x18061)))
 (let ((?x18063 (+ (- (* (* 2.0 l_0_10_1) l_0_10_2) (* l_0_10_1 l_0_10_1)) ?x18062)))
 (let ((?x18072 (- (- (- ?x18063 ?x18065) (* (* 2.0 l_0_10_46) l_0_10_47)) (* (* 2.0 l_0_10_61) l_0_10_62))))
 (= (+ ?x18072 1.0) 0.0))))))))
(assert
 (let ((?x18100 (* l_0_10_61 l_0_10_61)))
 (let ((?x18099 (- (* 1.0 (* l_0_10_1 l_0_10_1)) (* (* 1.0 l_0_10_46) l_0_10_46))))
 (= (- (- ?x18099 ?x18100) 1.0) 0.0))))
(assert
 (let ((?x18132 (* l_0_10_63 l_0_10_63)))
 (let ((?x18130 (* l_0_10_62 l_0_10_62)))
 (let ((?x18121 (* 8.0 l_0_10_31)))
 (let ((?x18122 (* ?x18121 l_0_10_32)))
 (let ((?x18112 (* 8.0 l_0_10_16)))
 (let ((?x18113 (* ?x18112 l_0_10_17)))
 (let ((?x18117 (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_2) ?x18113) (* 1.0 (* l_0_10_2 l_0_10_2)))))
 (let ((?x18126 (- (- (+ ?x18117 (* 1.0 (* l_0_10_3 l_0_10_3))) ?x18122) (* (* 1.0 l_0_10_47) l_0_10_47))))
 (= (- (- (- ?x18126 (* (* 1.0 l_0_10_48) l_0_10_48)) ?x18130) ?x18132) 0.0))))))))))
(assert
 (let ((?x18121 (* 8.0 l_0_10_31)))
 (let ((?x18166 (* ?x18121 l_0_10_34)))
 (let ((?x18064 (* 4.0 l_0_10_31)))
 (let ((?x18164 (* ?x18064 l_0_10_32)))
 (let ((?x18161 (* 2.0 l_0_10_3)))
 (let ((?x18162 (* ?x18161 l_0_10_5)))
 (let ((?x18158 (* 2.0 l_0_10_2)))
 (let ((?x18159 (* ?x18158 l_0_10_4)))
 (let ((?x18112 (* 8.0 l_0_10_16)))
 (let ((?x18156 (* ?x18112 l_0_10_19)))
 (let ((?x18153 (* 4.0 l_0_10_16)))
 (let ((?x18154 (* ?x18153 l_0_10_17)))
 (let ((?x18163 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_4) ?x18154) ?x18156) ?x18159) ?x18162)))
 (let ((?x18173 (- (- (- (- ?x18163 ?x18164) ?x18166) (* (* 2.0 l_0_10_47) l_0_10_49)) (* (* 2.0 l_0_10_48) l_0_10_50))))
 (let ((?x18179 (- (- ?x18173 (* (* 2.0 l_0_10_62) l_0_10_64)) (* (* 2.0 l_0_10_63) l_0_10_65))))
 (= ?x18179 0.0)))))))))))))))))
(assert
 (let ((?x18121 (* 8.0 l_0_10_31)))
 (let ((?x18209 (* ?x18121 l_0_10_37)))
 (let ((?x18122 (* ?x18121 l_0_10_32)))
 (let ((?x18161 (* 2.0 l_0_10_3)))
 (let ((?x18206 (* ?x18161 l_0_10_8)))
 (let ((?x18158 (* 2.0 l_0_10_2)))
 (let ((?x18204 (* ?x18158 l_0_10_7)))
 (let ((?x18112 (* 8.0 l_0_10_16)))
 (let ((?x18202 (* ?x18112 l_0_10_22)))
 (let ((?x18203 (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_7) (* ?x18112 l_0_10_17)) ?x18202)))
 (let ((?x18212 (- (- (- (+ (+ ?x18203 ?x18204) ?x18206) ?x18122) ?x18209) (* (* 2.0 l_0_10_47) l_0_10_52))))
 (let ((?x18216 (- (- ?x18212 (* (* 2.0 l_0_10_48) l_0_10_53)) (* (* 2.0 l_0_10_62) l_0_10_67))))
 (= (- ?x18216 (* (* 2.0 l_0_10_63) l_0_10_68)) 0.0))))))))))))))
(assert
 (let ((?x18121 (* 8.0 l_0_10_31)))
 (let ((?x18252 (* ?x18121 l_0_10_41)))
 (let ((?x18064 (* 4.0 l_0_10_31)))
 (let ((?x18164 (* ?x18064 l_0_10_32)))
 (let ((?x18112 (* 8.0 l_0_10_16)))
 (let ((?x18249 (* ?x18112 l_0_10_26)))
 (let ((?x18153 (* 4.0 l_0_10_16)))
 (let ((?x18154 (* ?x18153 l_0_10_17)))
 (let ((?x18245 (* 2.0 l_0_10_12)))
 (let ((?x18246 (* ?x18245 l_0_10_3)))
 (let ((?x18244 (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) (* (* 2.0 l_0_10_11) l_0_10_2))))
 (let ((?x18255 (- (- (+ (+ (- (+ ?x18244 ?x18246) ?x18154) ?x18249) ?x18164) ?x18252) (* (* 2.0 l_0_10_47) l_0_10_56))))
 (let ((?x18259 (- (- ?x18255 (* (* 2.0 l_0_10_48) l_0_10_57)) (* (* 2.0 l_0_10_62) l_0_10_71))))
 (= (- ?x18259 (* (* 2.0 l_0_10_63) l_0_10_72)) 0.0)))))))))))))))
(assert
 (let ((?x18303 (* 4.0 l_0_10_33)))
 (let ((?x18304 (* ?x18303 l_0_10_33)))
 (let ((?x18300 (* 4.0 l_0_10_32)))
 (let ((?x18301 (* ?x18300 l_0_10_32)))
 (let ((?x18118 (* l_0_10_3 l_0_10_3)))
 (let ((?x18115 (* l_0_10_2 l_0_10_2)))
 (let ((?x18295 (* l_0_10_18 l_0_10_18)))
 (let ((?x18296 (* 4.0 ?x18295)))
 (let ((?x5125 (* l_0_10_17 l_0_10_17)))
 (let ((?x18294 (* 4.0 ?x5125)))
 (= (- (- (- (- (+ ?x18294 ?x18296) ?x18115) ?x18118) ?x18301) ?x18304) 0.0))))))))))))
(assert
 (let ((?x18325 (* 8.0 l_0_10_33)))
 (let ((?x18326 (* ?x18325 l_0_10_35)))
 (let ((?x18319 (* 8.0 l_0_10_32)))
 (let ((?x18320 (* ?x18319 l_0_10_34)))
 (let ((?x18161 (* 2.0 l_0_10_3)))
 (let ((?x18162 (* ?x18161 l_0_10_5)))
 (let ((?x18158 (* 2.0 l_0_10_2)))
 (let ((?x18159 (* ?x18158 l_0_10_4)))
 (let ((?x18295 (* l_0_10_18 l_0_10_18)))
 (let ((?x18315 (* 2.0 ?x18295)))
 (let ((?x18312 (* 8.0 l_0_10_18)))
 (let ((?x18313 (* ?x18312 l_0_10_20)))
 (let ((?x5125 (* l_0_10_17 l_0_10_17)))
 (let ((?x5138 (* 2.0 ?x5125)))
 (let ((?x4107 (* 8.0 l_0_10_17)))
 (let ((?x4101 (* ?x4107 l_0_10_19)))
 (let ((?x18324 (- (- (- (- (+ (+ (+ ?x4101 ?x5138) ?x18313) ?x18315) ?x18159) ?x18162) ?x18320) (* (* 2.0 l_0_10_32) l_0_10_32))))
 (= (- (- ?x18324 ?x18326) (* (* 2.0 l_0_10_33) l_0_10_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x18303 (* 4.0 l_0_10_33)))
 (let ((?x18304 (* ?x18303 l_0_10_33)))
 (let ((?x18325 (* 8.0 l_0_10_33)))
 (let ((?x18360 (* ?x18325 l_0_10_38)))
 (let ((?x18300 (* 4.0 l_0_10_32)))
 (let ((?x18301 (* ?x18300 l_0_10_32)))
 (let ((?x18319 (* 8.0 l_0_10_32)))
 (let ((?x18357 (* ?x18319 l_0_10_37)))
 (let ((?x18161 (* 2.0 l_0_10_3)))
 (let ((?x18206 (* ?x18161 l_0_10_8)))
 (let ((?x18158 (* 2.0 l_0_10_2)))
 (let ((?x18204 (* ?x18158 l_0_10_7)))
 (let ((?x18295 (* l_0_10_18 l_0_10_18)))
 (let ((?x18296 (* 4.0 ?x18295)))
 (let ((?x18312 (* 8.0 l_0_10_18)))
 (let ((?x18352 (* ?x18312 l_0_10_23)))
 (let ((?x5125 (* l_0_10_17 l_0_10_17)))
 (let ((?x18294 (* 4.0 ?x5125)))
 (let ((?x4107 (* 8.0 l_0_10_17)))
 (let ((?x12940 (* ?x4107 l_0_10_22)))
 (let ((?x18359 (- (- (- (- (+ (+ (+ ?x12940 ?x18294) ?x18352) ?x18296) ?x18204) ?x18206) ?x18357) ?x18301)))
 (= (- (- ?x18359 ?x18360) ?x18304) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18325 (* 8.0 l_0_10_33)))
 (let ((?x18373 (* ?x18325 l_0_10_42)))
 (let ((?x18319 (* 8.0 l_0_10_32)))
 (let ((?x18370 (* ?x18319 l_0_10_41)))
 (let ((?x18312 (* 8.0 l_0_10_18)))
 (let ((?x13041 (* ?x18312 l_0_10_27)))
 (let ((?x4107 (* 8.0 l_0_10_17)))
 (let ((?x13055 (* ?x4107 l_0_10_26)))
 (let ((?x18245 (* 2.0 l_0_10_12)))
 (let ((?x18246 (* ?x18245 l_0_10_3)))
 (let ((?x5203 (- (+ (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x18246) ?x13055) (* (* 2.0 l_0_10_17) l_0_10_17))))
 (let ((?x18372 (+ (- (- (+ ?x5203 ?x13041) (* (* 2.0 l_0_10_18) l_0_10_18)) ?x18370) (* 2.0 (* l_0_10_32 l_0_10_32)))))
 (= (+ (- ?x18372 ?x18373) (* 2.0 (* l_0_10_33 l_0_10_33))) 0.0))))))))))))))
(assert
 (let ((?x18433 (* l_0_10_6 l_0_10_6)))
 (let ((?x18431 (* l_0_10_5 l_0_10_5)))
 (let ((?x18429 (* l_0_10_4 l_0_10_4)))
 (let ((?x18426 (* 4.0 l_0_10_36)))
 (let ((?x18427 (* ?x18426 l_0_10_36)))
 (let ((?x18423 (* 4.0 l_0_10_35)))
 (let ((?x18424 (* ?x18423 l_0_10_35)))
 (let ((?x18420 (* 4.0 l_0_10_34)))
 (let ((?x18421 (* ?x18420 l_0_10_34)))
 (let ((?x18303 (* 4.0 l_0_10_33)))
 (let ((?x18418 (* ?x18303 l_0_10_35)))
 (let ((?x18300 (* 4.0 l_0_10_32)))
 (let ((?x18416 (* ?x18300 l_0_10_34)))
 (let ((?x18413 (* 2.0 l_0_10_31)))
 (let ((?x18414 (* ?x18413 l_0_10_32)))
 (let ((?x18410 (* l_0_10_21 l_0_10_21)))
 (let ((?x18411 (* 4.0 ?x18410)))
 (let ((?x18407 (* l_0_10_20 l_0_10_20)))
 (let ((?x18408 (* 4.0 ?x18407)))
 (let ((?x18404 (* l_0_10_19 l_0_10_19)))
 (let ((?x18405 (* 4.0 ?x18404)))
 (let ((?x18401 (* 4.0 l_0_10_18)))
 (let ((?x18402 (* ?x18401 l_0_10_20)))
 (let ((?x18398 (* 4.0 l_0_10_17)))
 (let ((?x18399 (* ?x18398 l_0_10_19)))
 (let ((?x18409 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_16) l_0_10_17) ?x18399) ?x18402) ?x18405) ?x18408)))
 (let ((?x18428 (- (- (- (- (- (+ (+ ?x18409 ?x18411) ?x18414) ?x18416) ?x18418) ?x18421) ?x18424) ?x18427)))
 (= (- (- (- ?x18428 ?x18429) ?x18431) ?x18433) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x18502 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x18499 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x18496 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x18492 (* 8.0 l_0_10_36)))
 (let ((?x18493 (* ?x18492 l_0_10_39)))
 (let ((?x18489 (* 8.0 l_0_10_35)))
 (let ((?x18490 (* ?x18489 l_0_10_38)))
 (let ((?x18486 (* 8.0 l_0_10_34)))
 (let ((?x18487 (* ?x18486 l_0_10_37)))
 (let ((?x18303 (* 4.0 l_0_10_33)))
 (let ((?x18484 (* ?x18303 l_0_10_38)))
 (let ((?x18325 (* 8.0 l_0_10_33)))
 (let ((?x18326 (* ?x18325 l_0_10_35)))
 (let ((?x18300 (* 4.0 l_0_10_32)))
 (let ((?x18481 (* ?x18300 l_0_10_37)))
 (let ((?x18319 (* 8.0 l_0_10_32)))
 (let ((?x18320 (* ?x18319 l_0_10_34)))
 (let ((?x18477 (* 8.0 l_0_10_21)))
 (let ((?x18478 (* ?x18477 l_0_10_24)))
 (let ((?x18474 (* 8.0 l_0_10_20)))
 (let ((?x18475 (* ?x18474 l_0_10_23)))
 (let ((?x18471 (* 8.0 l_0_10_19)))
 (let ((?x18472 (* ?x18471 l_0_10_22)))
 (let ((?x18401 (* 4.0 l_0_10_18)))
 (let ((?x18469 (* ?x18401 l_0_10_23)))
 (let ((?x18312 (* 8.0 l_0_10_18)))
 (let ((?x18313 (* ?x18312 l_0_10_20)))
 (let ((?x18398 (* 4.0 l_0_10_17)))
 (let ((?x18466 (* ?x18398 l_0_10_22)))
 (let ((?x4107 (* 8.0 l_0_10_17)))
 (let ((?x4101 (* ?x4107 l_0_10_19)))
 (let ((?x18480 (- (+ (+ (+ (+ (+ (+ ?x4101 ?x18466) ?x18313) ?x18469) ?x18472) ?x18475) ?x18478) ?x18320)))
 (let ((?x18497 (- (- (- (- (- (- (- ?x18480 ?x18481) ?x18326) ?x18484) ?x18487) ?x18490) ?x18493) ?x18496)))
 (= (- (- ?x18497 ?x18499) ?x18502) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18492 (* 8.0 l_0_10_36)))
 (let ((?x18562 (* ?x18492 l_0_10_43)))
 (let ((?x18489 (* 8.0 l_0_10_35)))
 (let ((?x18560 (* ?x18489 l_0_10_42)))
 (let ((?x18486 (* 8.0 l_0_10_34)))
 (let ((?x18558 (* ?x18486 l_0_10_41)))
 (let ((?x18303 (* 4.0 l_0_10_33)))
 (let ((?x18556 (* ?x18303 l_0_10_42)))
 (let ((?x18418 (* ?x18303 l_0_10_35)))
 (let ((?x18300 (* 4.0 l_0_10_32)))
 (let ((?x18553 (* ?x18300 l_0_10_41)))
 (let ((?x18416 (* ?x18300 l_0_10_34)))
 (let ((?x18477 (* 8.0 l_0_10_21)))
 (let ((?x18550 (* ?x18477 l_0_10_28)))
 (let ((?x18474 (* 8.0 l_0_10_20)))
 (let ((?x18548 (* ?x18474 l_0_10_27)))
 (let ((?x18471 (* 8.0 l_0_10_19)))
 (let ((?x18546 (* ?x18471 l_0_10_26)))
 (let ((?x18401 (* 4.0 l_0_10_18)))
 (let ((?x18544 (* ?x18401 l_0_10_27)))
 (let ((?x18402 (* ?x18401 l_0_10_20)))
 (let ((?x18398 (* 4.0 l_0_10_17)))
 (let ((?x18541 (* ?x18398 l_0_10_26)))
 (let ((?x18399 (* ?x18398 l_0_10_19)))
 (let ((?x18537 (* 2.0 l_0_10_13)))
 (let ((?x18538 (* ?x18537 l_0_10_6)))
 (let ((?x18245 (* 2.0 l_0_10_12)))
 (let ((?x18535 (* ?x18245 l_0_10_5)))
 (let ((?x18542 (+ (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x18535) ?x18538) ?x18399) ?x18541)))
 (let ((?x18554 (- (+ (+ (+ (+ (+ (- ?x18542 ?x18402) ?x18544) ?x18546) ?x18548) ?x18550) ?x18416) ?x18553)))
 (= (- (- (- (- (+ ?x18554 ?x18418) ?x18556) ?x18558) ?x18560) ?x18562) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x18631 (* l_0_10_9 l_0_10_9)))
 (let ((?x18629 (* l_0_10_8 l_0_10_8)))
 (let ((?x18627 (* l_0_10_7 l_0_10_7)))
 (let ((?x18624 (* 4.0 l_0_10_40)))
 (let ((?x18625 (* ?x18624 l_0_10_40)))
 (let ((?x18621 (* 4.0 l_0_10_39)))
 (let ((?x18622 (* ?x18621 l_0_10_39)))
 (let ((?x18618 (* 4.0 l_0_10_38)))
 (let ((?x18619 (* ?x18618 l_0_10_38)))
 (let ((?x18615 (* 4.0 l_0_10_37)))
 (let ((?x18616 (* ?x18615 l_0_10_37)))
 (let ((?x18325 (* 8.0 l_0_10_33)))
 (let ((?x18360 (* ?x18325 l_0_10_38)))
 (let ((?x18319 (* 8.0 l_0_10_32)))
 (let ((?x18357 (* ?x18319 l_0_10_37)))
 (let ((?x18610 (* l_0_10_25 l_0_10_25)))
 (let ((?x18611 (* 4.0 ?x18610)))
 (let ((?x18607 (* l_0_10_24 l_0_10_24)))
 (let ((?x18608 (* 4.0 ?x18607)))
 (let ((?x18604 (* l_0_10_23 l_0_10_23)))
 (let ((?x18605 (* 4.0 ?x18604)))
 (let ((?x18601 (* l_0_10_22 l_0_10_22)))
 (let ((?x18602 (* 4.0 ?x18601)))
 (let ((?x18312 (* 8.0 l_0_10_18)))
 (let ((?x18352 (* ?x18312 l_0_10_23)))
 (let ((?x4107 (* 8.0 l_0_10_17)))
 (let ((?x12940 (* ?x4107 l_0_10_22)))
 (let ((?x18609 (+ (+ (+ (+ (+ (* (- l_0_10_10) l_0_10_10) ?x12940) ?x18352) ?x18602) ?x18605) ?x18608)))
 (let ((?x18626 (- (- (- (- (- (- (+ ?x18609 ?x18611) ?x18357) ?x18360) ?x18616) ?x18619) ?x18622) ?x18625)))
 (= (- (- (- ?x18626 ?x18627) ?x18629) ?x18631) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18689 (* (* 8.0 l_0_10_40) l_0_10_44)))
 (let ((?x18686 (* (* 8.0 l_0_10_39) l_0_10_43)))
 (let ((?x18683 (* (* 8.0 l_0_10_38) l_0_10_42)))
 (let ((?x18680 (* (* 8.0 l_0_10_37) l_0_10_41)))
 (let ((?x18325 (* 8.0 l_0_10_33)))
 (let ((?x18373 (* ?x18325 l_0_10_42)))
 (let ((?x18303 (* 4.0 l_0_10_33)))
 (let ((?x18484 (* ?x18303 l_0_10_38)))
 (let ((?x18319 (* 8.0 l_0_10_32)))
 (let ((?x18370 (* ?x18319 l_0_10_41)))
 (let ((?x18300 (* 4.0 l_0_10_32)))
 (let ((?x18481 (* ?x18300 l_0_10_37)))
 (let ((?x18673 (* (* 8.0 l_0_10_25) l_0_10_29)))
 (let ((?x18670 (* (* 8.0 l_0_10_24) l_0_10_28)))
 (let ((?x18667 (* (* 8.0 l_0_10_23) l_0_10_27)))
 (let ((?x18664 (* (* 8.0 l_0_10_22) l_0_10_26)))
 (let ((?x18312 (* 8.0 l_0_10_18)))
 (let ((?x13041 (* ?x18312 l_0_10_27)))
 (let ((?x18401 (* 4.0 l_0_10_18)))
 (let ((?x18469 (* ?x18401 l_0_10_23)))
 (let ((?x4107 (* 8.0 l_0_10_17)))
 (let ((?x13055 (* ?x4107 l_0_10_26)))
 (let ((?x18398 (* 4.0 l_0_10_17)))
 (let ((?x18466 (* ?x18398 l_0_10_22)))
 (let ((?x18537 (* 2.0 l_0_10_13)))
 (let ((?x18657 (* ?x18537 l_0_10_9)))
 (let ((?x18245 (* 2.0 l_0_10_12)))
 (let ((?x18655 (* ?x18245 l_0_10_8)))
 (let ((?x18242 (* 2.0 l_0_10_11)))
 (let ((?x18653 (* ?x18242 l_0_10_7)))
 (let ((?x18659 (- (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x18653) ?x18655) ?x18657) ?x18466)))
 (let ((?x18674 (+ (+ (+ (+ (+ (- (+ ?x18659 ?x13055) ?x18469) ?x13041) ?x18664) ?x18667) ?x18670) ?x18673)))
 (let ((?x18687 (- (- (- (- (+ (- (+ ?x18674 ?x18481) ?x18370) ?x18484) ?x18373) ?x18680) ?x18683) ?x18686)))
 (= (- ?x18687 ?x18689) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18754 (* (* 4.0 l_0_10_45) l_0_10_45)))
 (let ((?x18751 (* (* 4.0 l_0_10_44) l_0_10_44)))
 (let ((?x18748 (* (* 4.0 l_0_10_43) l_0_10_43)))
 (let ((?x18745 (* (* 4.0 l_0_10_42) l_0_10_42)))
 (let ((?x18742 (* (* 4.0 l_0_10_41) l_0_10_41)))
 (let ((?x18303 (* 4.0 l_0_10_33)))
 (let ((?x18556 (* ?x18303 l_0_10_42)))
 (let ((?x18300 (* 4.0 l_0_10_32)))
 (let ((?x18553 (* ?x18300 l_0_10_41)))
 (let ((?x18413 (* 2.0 l_0_10_31)))
 (let ((?x18414 (* ?x18413 l_0_10_32)))
 (let ((?x18735 (* l_0_10_30 l_0_10_30)))
 (let ((?x18736 (* 4.0 ?x18735)))
 (let ((?x18732 (* l_0_10_29 l_0_10_29)))
 (let ((?x18733 (* 4.0 ?x18732)))
 (let ((?x18729 (* l_0_10_28 l_0_10_28)))
 (let ((?x18730 (* 4.0 ?x18729)))
 (let ((?x18726 (* l_0_10_27 l_0_10_27)))
 (let ((?x18727 (* 4.0 ?x18726)))
 (let ((?x18723 (* l_0_10_26 l_0_10_26)))
 (let ((?x18724 (* 4.0 ?x18723)))
 (let ((?x18401 (* 4.0 l_0_10_18)))
 (let ((?x18544 (* ?x18401 l_0_10_27)))
 (let ((?x18398 (* 4.0 l_0_10_17)))
 (let ((?x18541 (* ?x18398 l_0_10_26)))
 (let ((?x18716 (* l_0_10_15 l_0_10_15)))
 (let ((?x18714 (* l_0_10_14 l_0_10_14)))
 (let ((?x18712 (* l_0_10_13 l_0_10_13)))
 (let ((?x18713 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x18712)))
 (let ((?x18721 (- (+ (- (- ?x18713 ?x18714) ?x18716) (* (* 2.0 l_0_10_16) l_0_10_17)) ?x18541)))
 (let ((?x18738 (- (+ (+ (+ (+ (+ (- ?x18721 ?x18544) ?x18724) ?x18727) ?x18730) ?x18733) ?x18736) ?x18414)))
 (let ((?x18755 (- (- (- (- (- (+ (+ ?x18738 ?x18553) ?x18556) ?x18742) ?x18745) ?x18748) ?x18751) ?x18754)))
 (= ?x18755 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18061 (* l_0_10_16 l_0_10_16)))
 (let ((?x13565 (* 2.0 ?x18061)))
 (let ((?x18772 (- (+ (* (* 2.0 l_0_10_1) l_0_10_4) ?x13565) (* (* 2.0 l_0_10_31) l_0_10_31))))
 (let ((?x18776 (- (- ?x18772 (* (* 2.0 l_0_10_46) l_0_10_49)) (* (* 2.0 l_0_10_61) l_0_10_64))))
 (= ?x18776 0.0))))))
(assert
 (let ((?x18064 (* 4.0 l_0_10_31)))
 (let ((?x18065 (* ?x18064 l_0_10_31)))
 (let ((?x18061 (* l_0_10_16 l_0_10_16)))
 (let ((?x18062 (* 4.0 ?x18061)))
 (let ((?x18790 (- (- (+ (* (* 2.0 l_0_10_1) l_0_10_7) ?x18062) ?x18065) (* (* 2.0 l_0_10_46) l_0_10_52))))
 (= (- ?x18790 (* (* 2.0 l_0_10_61) l_0_10_67)) 0.0)))))))
(assert
 (let ((?x18081 (* l_0_10_31 l_0_10_31)))
 (let ((?x5878 (* 2.0 ?x18081)))
 (let ((?x18809 (- (* (* 2.0 l_0_10_1) l_0_10_11) (* (* 2.0 l_0_10_16) l_0_10_16))))
 (let ((?x18814 (- (- (+ ?x18809 ?x5878) (* (* 2.0 l_0_10_46) l_0_10_56)) (* (* 2.0 l_0_10_61) l_0_10_71))))
 (= ?x18814 0.0))))))
(assert
 (let ((?x18849 (* l_0_10_66 l_0_10_66)))
 (let ((?x18847 (* l_0_10_65 l_0_10_65)))
 (let ((?x18845 (* l_0_10_64 l_0_10_64)))
 (let ((?x18081 (* l_0_10_31 l_0_10_31)))
 (let ((?x18064 (* 4.0 l_0_10_31)))
 (let ((?x18827 (* ?x18064 l_0_10_34)))
 (let ((?x18828 (- (- (* (* 4.0 l_0_10_16) l_0_10_19) (* l_0_10_16 l_0_10_16)) ?x18827)))
 (let ((?x18834 (- (+ (+ ?x18828 ?x18081) (* 1.0 (* l_0_10_4 l_0_10_4))) (* (* 1.0 l_0_10_49) l_0_10_49))))
 (let ((?x18839 (- (+ ?x18834 (* 1.0 (* l_0_10_5 l_0_10_5))) (* (* 1.0 l_0_10_50) l_0_10_50))))
 (let ((?x18844 (+ (- ?x18839 (* (* 1.0 l_0_10_51) l_0_10_51)) (* 1.0 (* l_0_10_6 l_0_10_6)))))
 (= (- (- (- ?x18844 ?x18845) ?x18847) ?x18849) 0.0))))))))))))
(assert
 (let ((?x18502 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x18499 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x18496 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x18064 (* 4.0 l_0_10_31)))
 (let ((?x18874 (* ?x18064 l_0_10_37)))
 (let ((?x18121 (* 8.0 l_0_10_31)))
 (let ((?x18166 (* ?x18121 l_0_10_34)))
 (let ((?x18153 (* 4.0 l_0_10_16)))
 (let ((?x18871 (* ?x18153 l_0_10_22)))
 (let ((?x18112 (* 8.0 l_0_10_16)))
 (let ((?x18156 (* ?x18112 l_0_10_19)))
 (let ((?x18879 (- (+ (- (- (+ ?x18156 ?x18871) ?x18166) ?x18874) ?x18496) (* (* 2.0 l_0_10_49) l_0_10_52))))
 (let ((?x18886 (- (- (+ ?x18879 ?x18499) (* (* 2.0 l_0_10_50) l_0_10_53)) (* (* 2.0 l_0_10_51) l_0_10_54))))
 (let ((?x18893 (- (- (+ ?x18886 ?x18502) (* (* 2.0 l_0_10_64) l_0_10_67)) (* (* 2.0 l_0_10_65) l_0_10_68))))
 (= (- ?x18893 (* (* 2.0 l_0_10_66) l_0_10_69)) 0.0))))))))))))))))
(assert
 (let ((?x18064 (* 4.0 l_0_10_31)))
 (let ((?x18923 (* ?x18064 l_0_10_41)))
 (let ((?x18827 (* ?x18064 l_0_10_34)))
 (let ((?x18153 (* 4.0 l_0_10_16)))
 (let ((?x18920 (* ?x18153 l_0_10_26)))
 (let ((?x18825 (* ?x18153 l_0_10_19)))
 (let ((?x18537 (* 2.0 l_0_10_13)))
 (let ((?x18538 (* ?x18537 l_0_10_6)))
 (let ((?x18245 (* 2.0 l_0_10_12)))
 (let ((?x18535 (* ?x18245 l_0_10_5)))
 (let ((?x18921 (+ (- (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x18535) ?x18538) ?x18825) ?x18920)))
 (let ((?x18928 (- (- (- (+ ?x18921 ?x18827) ?x18923) (* (* 2.0 l_0_10_49) l_0_10_56)) (* (* 2.0 l_0_10_50) l_0_10_57))))
 (let ((?x18932 (- (- ?x18928 (* (* 2.0 l_0_10_51) l_0_10_58)) (* (* 2.0 l_0_10_64) l_0_10_71))))
 (let ((?x18936 (- (- ?x18932 (* (* 2.0 l_0_10_65) l_0_10_72)) (* (* 2.0 l_0_10_66) l_0_10_73))))
 (= ?x18936 0.0))))))))))))))))
(assert
 (let ((?x18970 (* l_0_10_70 l_0_10_70)))
 (let ((?x18966 (* l_0_10_69 l_0_10_69)))
 (let ((?x18964 (* l_0_10_68 l_0_10_68)))
 (let ((?x18962 (* l_0_10_67 l_0_10_67)))
 (let ((?x18121 (* 8.0 l_0_10_31)))
 (let ((?x18209 (* ?x18121 l_0_10_37)))
 (let ((?x18112 (* 8.0 l_0_10_16)))
 (let ((?x18202 (* ?x18112 l_0_10_22)))
 (let ((?x6247 (- (- (+ (* 1.0 (* l_0_10_10 l_0_10_10)) ?x18202) ?x18209) (* (* 1.0 l_0_10_52) l_0_10_52))))
 (let ((?x18958 (- (- ?x6247 (* (* 1.0 l_0_10_53) l_0_10_53)) (* (* 1.0 l_0_10_54) l_0_10_54))))
 (let ((?x18967 (- (- (- (- ?x18958 (* (* 1.0 l_0_10_55) l_0_10_55)) ?x18962) ?x18964) ?x18966)))
 (let ((?x18973 (+ (- (+ ?x18967 (* 1.0 (* l_0_10_7 l_0_10_7))) ?x18970) (* 1.0 (* l_0_10_8 l_0_10_8)))))
 (= (+ ?x18973 (* 1.0 (* l_0_10_9 l_0_10_9))) 0.0))))))))))))))
(assert
 (let ((?x18121 (* 8.0 l_0_10_31)))
 (let ((?x18252 (* ?x18121 l_0_10_41)))
 (let ((?x18064 (* 4.0 l_0_10_31)))
 (let ((?x18874 (* ?x18064 l_0_10_37)))
 (let ((?x18112 (* 8.0 l_0_10_16)))
 (let ((?x18249 (* ?x18112 l_0_10_26)))
 (let ((?x18153 (* 4.0 l_0_10_16)))
 (let ((?x18871 (* ?x18153 l_0_10_22)))
 (let ((?x18537 (* 2.0 l_0_10_13)))
 (let ((?x18657 (* ?x18537 l_0_10_9)))
 (let ((?x18245 (* 2.0 l_0_10_12)))
 (let ((?x18655 (* ?x18245 l_0_10_8)))
 (let ((?x18242 (* 2.0 l_0_10_11)))
 (let ((?x18653 (* ?x18242 l_0_10_7)))
 (let ((?x18994 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x18653) ?x18655) ?x18657) ?x18871)))
 (let ((?x19000 (- (- (+ (+ ?x18994 ?x18249) ?x18874) ?x18252) (* (* 2.0 l_0_10_52) l_0_10_56))))
 (let ((?x19006 (- (- ?x19000 (* (* 2.0 l_0_10_53) l_0_10_57)) (* (* 2.0 l_0_10_54) l_0_10_58))))
 (let ((?x19012 (- (- ?x19006 (* (* 2.0 l_0_10_55) l_0_10_59)) (* (* 2.0 l_0_10_67) l_0_10_71))))
 (let ((?x19018 (- (- ?x19012 (* (* 2.0 l_0_10_68) l_0_10_72)) (* (* 2.0 l_0_10_69) l_0_10_73))))
 (= (- ?x19018 (* (* 2.0 l_0_10_70) l_0_10_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x19046 (* l_0_10_75 l_0_10_75)))
 (let ((?x19044 (* l_0_10_74 l_0_10_74)))
 (let ((?x19042 (* l_0_10_73 l_0_10_73)))
 (let ((?x19040 (* l_0_10_72 l_0_10_72)))
 (let ((?x19038 (* l_0_10_71 l_0_10_71)))
 (let ((?x18081 (* l_0_10_31 l_0_10_31)))
 (let ((?x18064 (* 4.0 l_0_10_31)))
 (let ((?x18923 (* ?x18064 l_0_10_41)))
 (let ((?x18061 (* l_0_10_16 l_0_10_16)))
 (let ((?x18153 (* 4.0 l_0_10_16)))
 (let ((?x18920 (* ?x18153 l_0_10_26)))
 (let ((?x13870 (+ (* 1.0 (* l_0_10_11 l_0_10_11)) (* 1.0 (* l_0_10_12 l_0_10_12)))))
 (let ((?x13814 (+ (+ ?x13870 (* 1.0 (* l_0_10_13 l_0_10_13))) (* 1.0 (* l_0_10_14 l_0_10_14)))))
 (let ((?x13777 (+ (+ (- (+ ?x13814 (* 1.0 (* l_0_10_15 l_0_10_15))) ?x18920) ?x18061) ?x18923)))
 (let ((?x19028 (- (- (- ?x13777 ?x18081) (* (* 1.0 l_0_10_56) l_0_10_56)) (* (* 1.0 l_0_10_57) l_0_10_57))))
 (let ((?x19034 (- (- ?x19028 (* (* 1.0 l_0_10_58) l_0_10_58)) (* (* 1.0 l_0_10_59) l_0_10_59))))
 (let ((?x19043 (- (- (- (- ?x19034 (* (* 1.0 l_0_10_60) l_0_10_60)) ?x19038) ?x19040) ?x19042)))
 (= (- (- ?x19043 ?x19044) ?x19046) 0.0)))))))))))))))))))
(assert
 (let ((?x18413 (* 2.0 l_0_10_31)))
 (let ((?x19059 (* ?x18413 l_0_10_34)))
 (let ((?x18410 (* l_0_10_21 l_0_10_21)))
 (let ((?x19057 (* 2.0 ?x18410)))
 (let ((?x18407 (* l_0_10_20 l_0_10_20)))
 (let ((?x19055 (* 2.0 ?x18407)))
 (let ((?x18404 (* l_0_10_19 l_0_10_19)))
 (let ((?x19053 (* 2.0 ?x18404)))
 (let ((?x19060 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_16) l_0_10_19) ?x19053) ?x19055) ?x19057) ?x19059)))
 (let ((?x19066 (- (- ?x19060 (* (* 2.0 l_0_10_34) l_0_10_34)) (* (* 2.0 l_0_10_35) l_0_10_35))))
 (= (- ?x19066 (* (* 2.0 l_0_10_36) l_0_10_36)) 0.0))))))))))))
(assert
 (let ((?x18426 (* 4.0 l_0_10_36)))
 (let ((?x18427 (* ?x18426 l_0_10_36)))
 (let ((?x19107 (* ?x18426 l_0_10_39)))
 (let ((?x18423 (* 4.0 l_0_10_35)))
 (let ((?x18424 (* ?x18423 l_0_10_35)))
 (let ((?x19104 (* ?x18423 l_0_10_38)))
 (let ((?x18420 (* 4.0 l_0_10_34)))
 (let ((?x18421 (* ?x18420 l_0_10_34)))
 (let ((?x19101 (* ?x18420 l_0_10_37)))
 (let ((?x18413 (* 2.0 l_0_10_31)))
 (let ((?x19099 (* ?x18413 l_0_10_37)))
 (let ((?x18410 (* l_0_10_21 l_0_10_21)))
 (let ((?x18411 (* 4.0 ?x18410)))
 (let ((?x19095 (* 4.0 l_0_10_21)))
 (let ((?x19096 (* ?x19095 l_0_10_24)))
 (let ((?x18407 (* l_0_10_20 l_0_10_20)))
 (let ((?x18408 (* 4.0 ?x18407)))
 (let ((?x19091 (* 4.0 l_0_10_20)))
 (let ((?x19092 (* ?x19091 l_0_10_23)))
 (let ((?x18404 (* l_0_10_19 l_0_10_19)))
 (let ((?x18405 (* 4.0 ?x18404)))
 (let ((?x19089 (+ (* (* (- 2.0) l_0_10_16) l_0_10_22) (* (* 4.0 l_0_10_19) l_0_10_22))))
 (let ((?x19102 (- (+ (+ (+ (+ (+ (+ ?x19089 ?x18405) ?x19092) ?x18408) ?x19096) ?x18411) ?x19099) ?x19101)))
 (= (- (- (- (- (- ?x19102 ?x18421) ?x19104) ?x18424) ?x19107) ?x18427) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5283 (* l_0_10_36 l_0_10_36)))
 (let ((?x19076 (* 2.0 ?x5283)))
 (let ((?x18426 (* 4.0 l_0_10_36)))
 (let ((?x19158 (* ?x18426 l_0_10_43)))
 (let ((?x5268 (* l_0_10_35 l_0_10_35)))
 (let ((?x19071 (* 2.0 ?x5268)))
 (let ((?x18423 (* 4.0 l_0_10_35)))
 (let ((?x19155 (* ?x18423 l_0_10_42)))
 (let ((?x18448 (* l_0_10_34 l_0_10_34)))
 (let ((?x6590 (* 2.0 ?x18448)))
 (let ((?x18420 (* 4.0 l_0_10_34)))
 (let ((?x19152 (* ?x18420 l_0_10_41)))
 (let ((?x18413 (* 2.0 l_0_10_31)))
 (let ((?x19150 (* ?x18413 l_0_10_41)))
 (let ((?x19095 (* 4.0 l_0_10_21)))
 (let ((?x19145 (* ?x19095 l_0_10_28)))
 (let ((?x19091 (* 4.0 l_0_10_20)))
 (let ((?x19140 (* ?x19091 l_0_10_27)))
 (let ((?x19087 (* 4.0 l_0_10_19)))
 (let ((?x19135 (* ?x19087 l_0_10_26)))
 (let ((?x19139 (- (+ (* (* (- 2.0) l_0_10_16) l_0_10_26) ?x19135) (* (* 2.0 l_0_10_19) l_0_10_19))))
 (let ((?x19149 (- (+ (- (+ ?x19139 ?x19140) (* (* 2.0 l_0_10_20) l_0_10_20)) ?x19145) (* (* 2.0 l_0_10_21) l_0_10_21))))
 (let ((?x19160 (+ (- (+ (- (+ (- (+ ?x19149 ?x19150) ?x19152) ?x6590) ?x19155) ?x19071) ?x19158) ?x19076)))
 (= ?x19160 0.0)))))))))))))))))))))))))
(assert
 (let ((?x12979 (* l_0_10_33 l_0_10_33)))
 (let ((?x12972 (* l_0_10_32 l_0_10_32)))
 (let ((?x13818 (+ (- (* (- l_0_10_17) l_0_10_17) (* l_0_10_18 l_0_10_18)) ?x12972)))
 (= (+ ?x13818 ?x12979) 0.0)))))
(assert
 (let ((?x18328 (* 2.0 l_0_10_33)))
 (let ((?x19197 (* ?x18328 l_0_10_35)))
 (let ((?x18322 (* 2.0 l_0_10_32)))
 (let ((?x19195 (* ?x18322 l_0_10_34)))
 (let ((?x13012 (* 2.0 l_0_10_18)))
 (let ((?x19193 (* ?x13012 l_0_10_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_17) l_0_10_19) ?x19193) ?x19195) ?x19197) 0.0))))))))
(assert
 (let ((?x18328 (* 2.0 l_0_10_33)))
 (let ((?x19213 (* ?x18328 l_0_10_38)))
 (let ((?x18322 (* 2.0 l_0_10_32)))
 (let ((?x19211 (* ?x18322 l_0_10_37)))
 (let ((?x13012 (* 2.0 l_0_10_18)))
 (let ((?x19209 (* ?x13012 l_0_10_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_17) l_0_10_22) ?x19209) ?x19211) ?x19213) 0.0))))))))
(assert
 (let ((?x18328 (* 2.0 l_0_10_33)))
 (let ((?x19229 (* ?x18328 l_0_10_42)))
 (let ((?x18322 (* 2.0 l_0_10_32)))
 (let ((?x19227 (* ?x18322 l_0_10_41)))
 (let ((?x13012 (* 2.0 l_0_10_18)))
 (let ((?x19220 (* ?x13012 l_0_10_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_17) l_0_10_26) ?x19220) ?x19227) ?x19229) 0.0))))))))
(assert
 (let ((?x5283 (* l_0_10_36 l_0_10_36)))
 (let ((?x5268 (* l_0_10_35 l_0_10_35)))
 (let ((?x18448 (* l_0_10_34 l_0_10_34)))
 (let ((?x18410 (* l_0_10_21 l_0_10_21)))
 (let ((?x19245 (- (- (* (- l_0_10_19) l_0_10_19) (* l_0_10_20 l_0_10_20)) ?x18410)))
 (= (+ (+ (+ ?x19245 ?x18448) ?x5268) ?x5283) 0.0)))))))
(assert
 (let ((?x19067 (* 2.0 l_0_10_36)))
 (let ((?x19269 (* ?x19067 l_0_10_39)))
 (let ((?x19064 (* 2.0 l_0_10_35)))
 (let ((?x19267 (* ?x19064 l_0_10_38)))
 (let ((?x19061 (* 2.0 l_0_10_34)))
 (let ((?x19265 (* ?x19061 l_0_10_37)))
 (let ((?x19147 (* 2.0 l_0_10_21)))
 (let ((?x19263 (* ?x19147 l_0_10_24)))
 (let ((?x19142 (* 2.0 l_0_10_20)))
 (let ((?x19261 (* ?x19142 l_0_10_23)))
 (let ((?x19268 (+ (+ (- (- (* (* (- 2.0) l_0_10_19) l_0_10_22) ?x19261) ?x19263) ?x19265) ?x19267)))
 (= (+ ?x19268 ?x19269) 0.0)))))))))))))
(assert
 (let ((?x19067 (* 2.0 l_0_10_36)))
 (let ((?x19291 (* ?x19067 l_0_10_43)))
 (let ((?x19064 (* 2.0 l_0_10_35)))
 (let ((?x19289 (* ?x19064 l_0_10_42)))
 (let ((?x19061 (* 2.0 l_0_10_34)))
 (let ((?x19287 (* ?x19061 l_0_10_41)))
 (let ((?x19147 (* 2.0 l_0_10_21)))
 (let ((?x19279 (* ?x19147 l_0_10_28)))
 (let ((?x19142 (* 2.0 l_0_10_20)))
 (let ((?x6677 (* ?x19142 l_0_10_27)))
 (let ((?x19290 (+ (+ (- (- (* (* (- 2.0) l_0_10_19) l_0_10_26) ?x6677) ?x19279) ?x19287) ?x19289)))
 (= (+ ?x19290 ?x19291) 0.0)))))))))))))
(assert
 (let ((?x5485 (* l_0_10_40 l_0_10_40)))
 (let ((?x5475 (* l_0_10_39 l_0_10_39)))
 (let ((?x13383 (* l_0_10_38 l_0_10_38)))
 (let ((?x13381 (* l_0_10_37 l_0_10_37)))
 (let ((?x18610 (* l_0_10_25 l_0_10_25)))
 (let ((?x18607 (* l_0_10_24 l_0_10_24)))
 (let ((?x19305 (- (- (* (- l_0_10_22) l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x18607)))
 (= (+ (+ (+ (+ (- ?x19305 ?x18610) ?x13381) ?x13383) ?x5475) ?x5485) 0.0)))))))))
(assert
 (let ((?x19341 (* 2.0 l_0_10_40)))
 (let ((?x19342 (* ?x19341 l_0_10_44)))
 (let ((?x19338 (* 2.0 l_0_10_39)))
 (let ((?x19339 (* ?x19338 l_0_10_43)))
 (let ((?x19335 (* 2.0 l_0_10_38)))
 (let ((?x19336 (* ?x19335 l_0_10_42)))
 (let ((?x19332 (* 2.0 l_0_10_37)))
 (let ((?x19333 (* ?x19332 l_0_10_41)))
 (let ((?x19329 (* 2.0 l_0_10_25)))
 (let ((?x19330 (* ?x19329 l_0_10_29)))
 (let ((?x19326 (* 2.0 l_0_10_24)))
 (let ((?x19327 (* ?x19326 l_0_10_28)))
 (let ((?x19323 (* 2.0 l_0_10_23)))
 (let ((?x19324 (* ?x19323 l_0_10_27)))
 (let ((?x19334 (+ (- (- (- (* (* (- 2.0) l_0_10_22) l_0_10_26) ?x19324) ?x19327) ?x19330) ?x19333)))
 (= (+ (+ (+ ?x19334 ?x19336) ?x19339) ?x19342) 0.0)))))))))))))))))
(assert
 (let ((?x5864 (* l_0_10_45 l_0_10_45)))
 (let ((?x5861 (* l_0_10_44 l_0_10_44)))
 (let ((?x13534 (* l_0_10_43 l_0_10_43)))
 (let ((?x13533 (* l_0_10_42 l_0_10_42)))
 (let ((?x13504 (* l_0_10_41 l_0_10_41)))
 (let ((?x5283 (* l_0_10_36 l_0_10_36)))
 (let ((?x5268 (* l_0_10_35 l_0_10_35)))
 (let ((?x18448 (* l_0_10_34 l_0_10_34)))
 (let ((?x18735 (* l_0_10_30 l_0_10_30)))
 (let ((?x18732 (* l_0_10_29 l_0_10_29)))
 (let ((?x18729 (* l_0_10_28 l_0_10_28)))
 (let ((?x18726 (* l_0_10_27 l_0_10_27)))
 (let ((?x18723 (* l_0_10_26 l_0_10_26)))
 (let ((?x18410 (* l_0_10_21 l_0_10_21)))
 (let ((?x5617 (- (+ (+ (* l_0_10_19 l_0_10_19) (* l_0_10_20 l_0_10_20)) ?x18410) ?x18723)))
 (let ((?x19371 (- (- (- (- (- (- (- ?x5617 ?x18726) ?x18729) ?x18732) ?x18735) ?x18448) ?x5268) ?x5283)))
 (= (+ (+ (+ (+ (+ ?x19371 ?x13504) ?x13533) ?x13534) ?x5861) ?x5864) 0.0))))))))))))))))))
(assert
 (let ((?x18426 (* 4.0 l_0_10_36)))
 (let ((?x19158 (* ?x18426 l_0_10_43)))
 (let ((?x18423 (* 4.0 l_0_10_35)))
 (let ((?x19155 (* ?x18423 l_0_10_42)))
 (let ((?x18420 (* 4.0 l_0_10_34)))
 (let ((?x19152 (* ?x18420 l_0_10_41)))
 (let ((?x18413 (* 2.0 l_0_10_31)))
 (let ((?x19059 (* ?x18413 l_0_10_34)))
 (let ((?x18735 (* l_0_10_30 l_0_10_30)))
 (let ((?x19404 (* 2.0 ?x18735)))
 (let ((?x18732 (* l_0_10_29 l_0_10_29)))
 (let ((?x19402 (* 2.0 ?x18732)))
 (let ((?x18729 (* l_0_10_28 l_0_10_28)))
 (let ((?x19400 (* 2.0 ?x18729)))
 (let ((?x18726 (* l_0_10_27 l_0_10_27)))
 (let ((?x19398 (* 2.0 ?x18726)))
 (let ((?x18723 (* l_0_10_26 l_0_10_26)))
 (let ((?x19396 (* 2.0 ?x18723)))
 (let ((?x19095 (* 4.0 l_0_10_21)))
 (let ((?x19145 (* ?x19095 l_0_10_28)))
 (let ((?x19091 (* 4.0 l_0_10_20)))
 (let ((?x19140 (* ?x19091 l_0_10_27)))
 (let ((?x19087 (* 4.0 l_0_10_19)))
 (let ((?x19135 (* ?x19087 l_0_10_26)))
 (let ((?x19397 (+ (- (- (- (* (* 2.0 l_0_10_16) l_0_10_19) ?x19135) ?x19140) ?x19145) ?x19396)))
 (let ((?x19408 (+ (+ (- (+ (+ (+ (+ ?x19397 ?x19398) ?x19400) ?x19402) ?x19404) ?x19059) ?x19152) ?x19155)))
 (let ((?x19415 (- (- (+ ?x19408 ?x19158) (* (* 2.0 l_0_10_41) l_0_10_41)) (* (* 2.0 l_0_10_42) l_0_10_42))))
 (let ((?x19421 (- (- ?x19415 (* (* 2.0 l_0_10_43) l_0_10_43)) (* (* 2.0 l_0_10_44) l_0_10_44))))
 (= (- ?x19421 (* (* 2.0 l_0_10_45) l_0_10_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x18754 (* (* 4.0 l_0_10_45) l_0_10_45)))
 (let ((?x18751 (* (* 4.0 l_0_10_44) l_0_10_44)))
 (let ((?x18748 (* (* 4.0 l_0_10_43) l_0_10_43)))
 (let ((?x18745 (* (* 4.0 l_0_10_42) l_0_10_42)))
 (let ((?x18742 (* (* 4.0 l_0_10_41) l_0_10_41)))
 (let ((?x18624 (* 4.0 l_0_10_40)))
 (let ((?x19478 (* ?x18624 l_0_10_44)))
 (let ((?x18621 (* 4.0 l_0_10_39)))
 (let ((?x19476 (* ?x18621 l_0_10_43)))
 (let ((?x18618 (* 4.0 l_0_10_38)))
 (let ((?x19474 (* ?x18618 l_0_10_42)))
 (let ((?x18615 (* 4.0 l_0_10_37)))
 (let ((?x19472 (* ?x18615 l_0_10_41)))
 (let ((?x18413 (* 2.0 l_0_10_31)))
 (let ((?x19099 (* ?x18413 l_0_10_37)))
 (let ((?x18735 (* l_0_10_30 l_0_10_30)))
 (let ((?x18736 (* 4.0 ?x18735)))
 (let ((?x18732 (* l_0_10_29 l_0_10_29)))
 (let ((?x18733 (* 4.0 ?x18732)))
 (let ((?x18729 (* l_0_10_28 l_0_10_28)))
 (let ((?x18730 (* 4.0 ?x18729)))
 (let ((?x18726 (* l_0_10_27 l_0_10_27)))
 (let ((?x18727 (* 4.0 ?x18726)))
 (let ((?x18723 (* l_0_10_26 l_0_10_26)))
 (let ((?x18724 (* 4.0 ?x18723)))
 (let ((?x19464 (* (* 4.0 l_0_10_25) l_0_10_29)))
 (let ((?x19461 (* (* 4.0 l_0_10_24) l_0_10_28)))
 (let ((?x19458 (* (* 4.0 l_0_10_23) l_0_10_27)))
 (let ((?x19455 (* (* 4.0 l_0_10_22) l_0_10_26)))
 (let ((?x19465 (- (- (- (- (* (* 2.0 l_0_10_16) l_0_10_22) ?x19455) ?x19458) ?x19461) ?x19464)))
 (let ((?x19473 (+ (- (+ (+ (+ (+ (+ ?x19465 ?x18724) ?x18727) ?x18730) ?x18733) ?x18736) ?x19099) ?x19472)))
 (let ((?x19483 (- (- (- (- (+ (+ (+ ?x19473 ?x19474) ?x19476) ?x19478) ?x18742) ?x18745) ?x18748) ?x18751)))
 (= (- ?x19483 ?x18754) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5864 (* l_0_10_45 l_0_10_45)))
 (let ((?x6804 (* 2.0 ?x5864)))
 (let ((?x5861 (* l_0_10_44 l_0_10_44)))
 (let ((?x19446 (* 2.0 ?x5861)))
 (let ((?x13534 (* l_0_10_43 l_0_10_43)))
 (let ((?x6798 (* 2.0 ?x13534)))
 (let ((?x13533 (* l_0_10_42 l_0_10_42)))
 (let ((?x6790 (* 2.0 ?x13533)))
 (let ((?x13504 (* l_0_10_41 l_0_10_41)))
 (let ((?x19437 (* 2.0 ?x13504)))
 (let ((?x18413 (* 2.0 l_0_10_31)))
 (let ((?x19150 (* ?x18413 l_0_10_41)))
 (let ((?x19505 (- (* (* 2.0 l_0_10_16) l_0_10_26) (* (* 2.0 l_0_10_26) l_0_10_26))))
 (let ((?x19511 (- (- ?x19505 (* (* 2.0 l_0_10_27) l_0_10_27)) (* (* 2.0 l_0_10_28) l_0_10_28))))
 (let ((?x19517 (- (- ?x19511 (* (* 2.0 l_0_10_29) l_0_10_29)) (* (* 2.0 l_0_10_30) l_0_10_30))))
 (= (+ (+ (+ (+ (+ (- ?x19517 ?x19150) ?x19437) ?x6790) ?x6798) ?x19446) ?x6804) 0.0)))))))))))))))))
(assert
 (let ((?x12979 (* l_0_10_33 l_0_10_33)))
 (let ((?x12972 (* l_0_10_32 l_0_10_32)))
 (let ((?x6953 (- (- (+ (* l_0_10_17 l_0_10_17) (* l_0_10_18 l_0_10_18)) ?x12972) ?x12979)))
 (= ?x6953 0.0)))))
(assert
 (let ((?x18328 (* 2.0 l_0_10_33)))
 (let ((?x19197 (* ?x18328 l_0_10_35)))
 (let ((?x18322 (* 2.0 l_0_10_32)))
 (let ((?x19195 (* ?x18322 l_0_10_34)))
 (let ((?x13012 (* 2.0 l_0_10_18)))
 (let ((?x19193 (* ?x13012 l_0_10_20)))
 (= (- (- (+ (* (* 2.0 l_0_10_17) l_0_10_19) ?x19193) ?x19195) ?x19197) 0.0))))))))
(assert
 (let ((?x18328 (* 2.0 l_0_10_33)))
 (let ((?x19213 (* ?x18328 l_0_10_38)))
 (let ((?x18322 (* 2.0 l_0_10_32)))
 (let ((?x19211 (* ?x18322 l_0_10_37)))
 (let ((?x13012 (* 2.0 l_0_10_18)))
 (let ((?x19209 (* ?x13012 l_0_10_23)))
 (= (- (- (+ (* (* 2.0 l_0_10_17) l_0_10_22) ?x19209) ?x19211) ?x19213) 0.0))))))))
(assert
 (let ((?x18328 (* 2.0 l_0_10_33)))
 (let ((?x19229 (* ?x18328 l_0_10_42)))
 (let ((?x18322 (* 2.0 l_0_10_32)))
 (let ((?x19227 (* ?x18322 l_0_10_41)))
 (let ((?x13012 (* 2.0 l_0_10_18)))
 (let ((?x19220 (* ?x13012 l_0_10_27)))
 (= (- (- (+ (* (* 2.0 l_0_10_17) l_0_10_26) ?x19220) ?x19227) ?x19229) 0.0))))))))
(assert
 (let ((?x19067 (* 2.0 l_0_10_36)))
 (let ((?x19269 (* ?x19067 l_0_10_39)))
 (let ((?x19064 (* 2.0 l_0_10_35)))
 (let ((?x19267 (* ?x19064 l_0_10_38)))
 (let ((?x19061 (* 2.0 l_0_10_34)))
 (let ((?x19265 (* ?x19061 l_0_10_37)))
 (let ((?x19147 (* 2.0 l_0_10_21)))
 (let ((?x19263 (* ?x19147 l_0_10_24)))
 (let ((?x19142 (* 2.0 l_0_10_20)))
 (let ((?x19261 (* ?x19142 l_0_10_23)))
 (let ((?x19544 (- (- (+ (+ (* (* 2.0 l_0_10_19) l_0_10_22) ?x19261) ?x19263) ?x19265) ?x19267)))
 (= (- ?x19544 ?x19269) 0.0)))))))))))))
(assert
 (let ((?x19067 (* 2.0 l_0_10_36)))
 (let ((?x19291 (* ?x19067 l_0_10_43)))
 (let ((?x19064 (* 2.0 l_0_10_35)))
 (let ((?x19289 (* ?x19064 l_0_10_42)))
 (let ((?x19061 (* 2.0 l_0_10_34)))
 (let ((?x19287 (* ?x19061 l_0_10_41)))
 (let ((?x19147 (* 2.0 l_0_10_21)))
 (let ((?x19279 (* ?x19147 l_0_10_28)))
 (let ((?x19142 (* 2.0 l_0_10_20)))
 (let ((?x6677 (* ?x19142 l_0_10_27)))
 (let ((?x19555 (- (- (+ (+ (* (* 2.0 l_0_10_19) l_0_10_26) ?x6677) ?x19279) ?x19287) ?x19289)))
 (= (- ?x19555 ?x19291) 0.0)))))))))))))
(assert
 (let ((?x5485 (* l_0_10_40 l_0_10_40)))
 (let ((?x5475 (* l_0_10_39 l_0_10_39)))
 (let ((?x13383 (* l_0_10_38 l_0_10_38)))
 (let ((?x13381 (* l_0_10_37 l_0_10_37)))
 (let ((?x18610 (* l_0_10_25 l_0_10_25)))
 (let ((?x18607 (* l_0_10_24 l_0_10_24)))
 (let ((?x19565 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x18607) ?x18610)))
 (= (- (- (- (- ?x19565 ?x13381) ?x13383) ?x5475) ?x5485) 0.0)))))))))
(assert
 (let ((?x19341 (* 2.0 l_0_10_40)))
 (let ((?x19342 (* ?x19341 l_0_10_44)))
 (let ((?x19338 (* 2.0 l_0_10_39)))
 (let ((?x19339 (* ?x19338 l_0_10_43)))
 (let ((?x19335 (* 2.0 l_0_10_38)))
 (let ((?x19336 (* ?x19335 l_0_10_42)))
 (let ((?x19332 (* 2.0 l_0_10_37)))
 (let ((?x19333 (* ?x19332 l_0_10_41)))
 (let ((?x19329 (* 2.0 l_0_10_25)))
 (let ((?x19330 (* ?x19329 l_0_10_29)))
 (let ((?x19326 (* 2.0 l_0_10_24)))
 (let ((?x19327 (* ?x19326 l_0_10_28)))
 (let ((?x19323 (* 2.0 l_0_10_23)))
 (let ((?x19324 (* ?x19323 l_0_10_27)))
 (let ((?x19583 (- (+ (+ (+ (* (* 2.0 l_0_10_22) l_0_10_26) ?x19324) ?x19327) ?x19330) ?x19333)))
 (= (- (- (- ?x19583 ?x19336) ?x19339) ?x19342) 0.0)))))))))))))))))
(assert
 (let ((?x5864 (* l_0_10_45 l_0_10_45)))
 (let ((?x5861 (* l_0_10_44 l_0_10_44)))
 (let ((?x13534 (* l_0_10_43 l_0_10_43)))
 (let ((?x13533 (* l_0_10_42 l_0_10_42)))
 (let ((?x13504 (* l_0_10_41 l_0_10_41)))
 (let ((?x18735 (* l_0_10_30 l_0_10_30)))
 (let ((?x18732 (* l_0_10_29 l_0_10_29)))
 (let ((?x18729 (* l_0_10_28 l_0_10_28)))
 (let ((?x19595 (+ (+ (+ (* l_0_10_26 l_0_10_26) (* l_0_10_27 l_0_10_27)) ?x18729) ?x18732)))
 (= (- (- (- (- (- (+ ?x19595 ?x18735) ?x13504) ?x13533) ?x13534) ?x5861) ?x5864) 0.0)))))))))))
(assert
 (let ((?x18492 (* 8.0 l_0_10_36)))
 (let ((?x18493 (* ?x18492 l_0_10_39)))
 (let ((?x18489 (* 8.0 l_0_10_35)))
 (let ((?x18490 (* ?x18489 l_0_10_38)))
 (let ((?x18486 (* 8.0 l_0_10_34)))
 (let ((?x18487 (* ?x18486 l_0_10_37)))
 (let ((?x18610 (* l_0_10_25 l_0_10_25)))
 (let ((?x19610 (* 2.0 ?x18610)))
 (let ((?x18607 (* l_0_10_24 l_0_10_24)))
 (let ((?x19608 (* 2.0 ?x18607)))
 (let ((?x18604 (* l_0_10_23 l_0_10_23)))
 (let ((?x19606 (* 2.0 ?x18604)))
 (let ((?x18601 (* l_0_10_22 l_0_10_22)))
 (let ((?x7289 (* 2.0 ?x18601)))
 (let ((?x18477 (* 8.0 l_0_10_21)))
 (let ((?x18478 (* ?x18477 l_0_10_24)))
 (let ((?x18474 (* 8.0 l_0_10_20)))
 (let ((?x18475 (* ?x18474 l_0_10_23)))
 (let ((?x18471 (* 8.0 l_0_10_19)))
 (let ((?x18472 (* ?x18471 l_0_10_22)))
 (let ((?x19612 (- (+ (+ (+ (+ (+ (+ ?x18472 ?x18475) ?x18478) ?x7289) ?x19606) ?x19608) ?x19610) ?x18487)))
 (let ((?x19618 (- (- (- (- ?x19612 ?x18490) ?x18493) (* (* 2.0 l_0_10_37) l_0_10_37)) (* (* 2.0 l_0_10_38) l_0_10_38))))
 (let ((?x19622 (- (- ?x19618 (* (* 2.0 l_0_10_39) l_0_10_39)) (* (* 2.0 l_0_10_40) l_0_10_40))))
 (= ?x19622 0.0)))))))))))))))))))))))))
(assert
 (let ((?x18624 (* 4.0 l_0_10_40)))
 (let ((?x19478 (* ?x18624 l_0_10_44)))
 (let ((?x18621 (* 4.0 l_0_10_39)))
 (let ((?x19476 (* ?x18621 l_0_10_43)))
 (let ((?x18618 (* 4.0 l_0_10_38)))
 (let ((?x19474 (* ?x18618 l_0_10_42)))
 (let ((?x18615 (* 4.0 l_0_10_37)))
 (let ((?x19472 (* ?x18615 l_0_10_41)))
 (let ((?x18492 (* 8.0 l_0_10_36)))
 (let ((?x18562 (* ?x18492 l_0_10_43)))
 (let ((?x18426 (* 4.0 l_0_10_36)))
 (let ((?x19107 (* ?x18426 l_0_10_39)))
 (let ((?x18489 (* 8.0 l_0_10_35)))
 (let ((?x18560 (* ?x18489 l_0_10_42)))
 (let ((?x18423 (* 4.0 l_0_10_35)))
 (let ((?x19104 (* ?x18423 l_0_10_38)))
 (let ((?x18486 (* 8.0 l_0_10_34)))
 (let ((?x18558 (* ?x18486 l_0_10_41)))
 (let ((?x18420 (* 4.0 l_0_10_34)))
 (let ((?x19101 (* ?x18420 l_0_10_37)))
 (let ((?x19464 (* (* 4.0 l_0_10_25) l_0_10_29)))
 (let ((?x19461 (* (* 4.0 l_0_10_24) l_0_10_28)))
 (let ((?x19458 (* (* 4.0 l_0_10_23) l_0_10_27)))
 (let ((?x19455 (* (* 4.0 l_0_10_22) l_0_10_26)))
 (let ((?x18477 (* 8.0 l_0_10_21)))
 (let ((?x18550 (* ?x18477 l_0_10_28)))
 (let ((?x19095 (* 4.0 l_0_10_21)))
 (let ((?x19096 (* ?x19095 l_0_10_24)))
 (let ((?x18474 (* 8.0 l_0_10_20)))
 (let ((?x18548 (* ?x18474 l_0_10_27)))
 (let ((?x19091 (* 4.0 l_0_10_20)))
 (let ((?x19092 (* ?x19091 l_0_10_23)))
 (let ((?x18471 (* 8.0 l_0_10_19)))
 (let ((?x18546 (* ?x18471 l_0_10_26)))
 (let ((?x19640 (- (+ (- (+ (* (* (- 4.0) l_0_10_19) l_0_10_22) ?x18546) ?x19092) ?x18548) ?x19096)))
 (let ((?x19647 (- (+ (+ (+ (+ (+ (+ ?x19640 ?x18550) ?x19455) ?x19458) ?x19461) ?x19464) ?x19101) ?x18558)))
 (let ((?x19654 (- (- (- (- (+ (- (+ ?x19647 ?x19104) ?x18560) ?x19107) ?x18562) ?x19472) ?x19474) ?x19476)))
 (= (- ?x19654 ?x19478) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5485 (* l_0_10_40 l_0_10_40)))
 (let ((?x7353 (* 2.0 ?x5485)))
 (let ((?x18689 (* (* 8.0 l_0_10_40) l_0_10_44)))
 (let ((?x5475 (* l_0_10_39 l_0_10_39)))
 (let ((?x7392 (* 2.0 ?x5475)))
 (let ((?x18686 (* (* 8.0 l_0_10_39) l_0_10_43)))
 (let ((?x13383 (* l_0_10_38 l_0_10_38)))
 (let ((?x7361 (* 2.0 ?x13383)))
 (let ((?x18683 (* (* 8.0 l_0_10_38) l_0_10_42)))
 (let ((?x13381 (* l_0_10_37 l_0_10_37)))
 (let ((?x7317 (* 2.0 ?x13381)))
 (let ((?x18680 (* (* 8.0 l_0_10_37) l_0_10_41)))
 (let ((?x18673 (* (* 8.0 l_0_10_25) l_0_10_29)))
 (let ((?x18670 (* (* 8.0 l_0_10_24) l_0_10_28)))
 (let ((?x18667 (* (* 8.0 l_0_10_23) l_0_10_27)))
 (let ((?x18664 (* (* 8.0 l_0_10_22) l_0_10_26)))
 (let ((?x19668 (- (+ (- ?x18664 (* (* 2.0 l_0_10_22) l_0_10_22)) ?x18667) (* (* 2.0 l_0_10_23) l_0_10_23))))
 (let ((?x19674 (- (+ (- (+ ?x19668 ?x18670) (* (* 2.0 l_0_10_24) l_0_10_24)) ?x18673) (* (* 2.0 l_0_10_25) l_0_10_25))))
 (let ((?x19681 (- (+ (- (+ (- (+ (- ?x19674 ?x18680) ?x7317) ?x18683) ?x7361) ?x18686) ?x7392) ?x18689)))
 (= (+ ?x19681 ?x7353) 0.0)))))))))))))))))))))
(assert
 (let ((?x18624 (* 4.0 l_0_10_40)))
 (let ((?x18625 (* ?x18624 l_0_10_40)))
 (let ((?x18621 (* 4.0 l_0_10_39)))
 (let ((?x18622 (* ?x18621 l_0_10_39)))
 (let ((?x18618 (* 4.0 l_0_10_38)))
 (let ((?x18619 (* ?x18618 l_0_10_38)))
 (let ((?x18615 (* 4.0 l_0_10_37)))
 (let ((?x18616 (* ?x18615 l_0_10_37)))
 (let ((?x18610 (* l_0_10_25 l_0_10_25)))
 (let ((?x18611 (* 4.0 ?x18610)))
 (let ((?x18607 (* l_0_10_24 l_0_10_24)))
 (let ((?x18608 (* 4.0 ?x18607)))
 (let ((?x18604 (* l_0_10_23 l_0_10_23)))
 (let ((?x18605 (* 4.0 ?x18604)))
 (let ((?x18601 (* l_0_10_22 l_0_10_22)))
 (let ((?x18602 (* 4.0 ?x18601)))
 (let ((?x19692 (- (- (- (- (+ (+ (+ ?x18602 ?x18605) ?x18608) ?x18611) ?x18616) ?x18619) ?x18622) ?x18625)))
 (= ?x19692 0.0)))))))))))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_16 0.0))
(assert
 (>= l_0_10_18 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_25 0.0))
(assert
 (>= l_0_10_30 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_33 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_40 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_55 0.0))
(assert
 (>= l_0_10_60 0.0))
(assert
 (>= l_0_10_61 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_70 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (let ((?x19749 (* l_0_11_81 l_0_11_81)))
 (let ((?x19747 (* l_0_11_80 l_0_11_80)))
 (let ((?x19745 (* l_0_11_79 l_0_11_79)))
 (let ((?x19743 (* l_0_11_66 l_0_11_66)))
 (let ((?x19741 (* l_0_11_65 l_0_11_65)))
 (let ((?x19739 (* l_0_11_64 l_0_11_64)))
 (let ((?x19719 (* l_0_11_31 l_0_11_31)))
 (let ((?x19716 (* 4.0 l_0_11_31)))
 (let ((?x19717 (* ?x19716 l_0_11_34)))
 (let ((?x19718 (- (- (* (* 4.0 l_0_11_16) l_0_11_19) (* l_0_11_16 l_0_11_16)) ?x19717)))
 (let ((?x19726 (- (+ (+ ?x19718 ?x19719) (* 1.0 (* l_0_11_4 l_0_11_4))) (* (* 1.0 l_0_11_49) l_0_11_49))))
 (let ((?x19732 (- (+ ?x19726 (* 1.0 (* l_0_11_5 l_0_11_5))) (* (* 1.0 l_0_11_50) l_0_11_50))))
 (let ((?x19738 (+ (- ?x19732 (* (* 1.0 l_0_11_51) l_0_11_51)) (* 1.0 (* l_0_11_6 l_0_11_6)))))
 (let ((?x19751 (+ (- (- (- (- (- (- ?x19738 ?x19739) ?x19741) ?x19743) ?x19745) ?x19747) ?x19749) 1.0)))
 (= ?x19751 0.0))))))))))))))))
(assert
 (let ((?x19841 (* l_0_11_90 l_0_11_90)))
 (let ((?x19839 (* l_0_11_89 l_0_11_89)))
 (let ((?x19837 (* l_0_11_88 l_0_11_88)))
 (let ((?x19835 (* l_0_11_87 l_0_11_87)))
 (let ((?x19833 (* l_0_11_86 l_0_11_86)))
 (let ((?x19831 (* l_0_11_75 l_0_11_75)))
 (let ((?x19829 (* l_0_11_74 l_0_11_74)))
 (let ((?x19827 (* l_0_11_73 l_0_11_73)))
 (let ((?x19825 (* l_0_11_72 l_0_11_72)))
 (let ((?x19823 (* l_0_11_71 l_0_11_71)))
 (let ((?x19719 (* l_0_11_31 l_0_11_31)))
 (let ((?x19716 (* 4.0 l_0_11_31)))
 (let ((?x19805 (* ?x19716 l_0_11_41)))
 (let ((?x19714 (* l_0_11_16 l_0_11_16)))
 (let ((?x19712 (* 4.0 l_0_11_16)))
 (let ((?x19802 (* ?x19712 l_0_11_26)))
 (let ((?x19792 (+ (* 1.0 (* l_0_11_11 l_0_11_11)) (* 1.0 (* l_0_11_12 l_0_11_12)))))
 (let ((?x19798 (+ (+ ?x19792 (* 1.0 (* l_0_11_13 l_0_11_13))) (* 1.0 (* l_0_11_14 l_0_11_14)))))
 (let ((?x19806 (+ (+ (- (+ ?x19798 (* 1.0 (* l_0_11_15 l_0_11_15))) ?x19802) ?x19714) ?x19805)))
 (let ((?x19813 (- (- (- ?x19806 ?x19719) (* (* 1.0 l_0_11_56) l_0_11_56)) (* (* 1.0 l_0_11_57) l_0_11_57))))
 (let ((?x19819 (- (- ?x19813 (* (* 1.0 l_0_11_58) l_0_11_58)) (* (* 1.0 l_0_11_59) l_0_11_59))))
 (let ((?x19828 (- (- (- (- ?x19819 (* (* 1.0 l_0_11_60) l_0_11_60)) ?x19823) ?x19825) ?x19827)))
 (let ((?x19842 (- (- (- (- (- (- (- ?x19828 ?x19829) ?x19831) ?x19833) ?x19835) ?x19837) ?x19839) ?x19841)))
 (= (- ?x19842 1.0) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x19714 (* l_0_11_16 l_0_11_16)))
 (let ((?x19854 (* 2.0 ?x19714)))
 (let ((?x19858 (- (+ (* (* 2.0 l_0_11_1) l_0_11_4) ?x19854) (* (* 2.0 l_0_11_31) l_0_11_31))))
 (let ((?x19864 (- (- ?x19858 (* (* 2.0 l_0_11_46) l_0_11_49)) (* (* 2.0 l_0_11_61) l_0_11_64))))
 (= (- (- ?x19864 (* (* 2.0 l_0_11_76) l_0_11_79)) 2.0) 0.0))))))
(assert
 (let ((?x19719 (* l_0_11_31 l_0_11_31)))
 (let ((?x19873 (* 2.0 ?x19719)))
 (let ((?x19890 (- (* (* 2.0 l_0_11_1) l_0_11_11) (* (* 2.0 l_0_11_16) l_0_11_16))))
 (let ((?x19895 (- (- (+ ?x19890 ?x19873) (* (* 2.0 l_0_11_46) l_0_11_56)) (* (* 2.0 l_0_11_61) l_0_11_71))))
 (= (+ (- ?x19895 (* (* 2.0 l_0_11_76) l_0_11_86)) 2.0) 0.0))))))
(assert
 (let ((?x19716 (* 4.0 l_0_11_31)))
 (let ((?x19910 (* ?x19716 l_0_11_31)))
 (let ((?x19714 (* l_0_11_16 l_0_11_16)))
 (let ((?x7697 (* 4.0 ?x19714)))
 (let ((?x19909 (+ (- (* (* 2.0 l_0_11_1) l_0_11_2) (* l_0_11_1 l_0_11_1)) ?x7697)))
 (let ((?x19915 (- (- (- ?x19909 ?x19910) (* (* 2.0 l_0_11_46) l_0_11_47)) (* (* 2.0 l_0_11_61) l_0_11_62))))
 (= (- (- ?x19915 (* (* 2.0 l_0_11_76) l_0_11_77)) 4.0) 0.0))))))))
(assert
 (let ((?x19716 (* 4.0 l_0_11_31)))
 (let ((?x19910 (* ?x19716 l_0_11_31)))
 (let ((?x19714 (* l_0_11_16 l_0_11_16)))
 (let ((?x7697 (* 4.0 ?x19714)))
 (let ((?x19946 (- (- (+ (* (* 2.0 l_0_11_1) l_0_11_7) ?x7697) ?x19910) (* (* 2.0 l_0_11_46) l_0_11_52))))
 (let ((?x19950 (- (- ?x19946 (* (* 2.0 l_0_11_61) l_0_11_67)) (* (* 2.0 l_0_11_76) l_0_11_82))))
 (= (- ?x19950 4.0) 0.0))))))))
(assert
 (let ((?x19987 (* l_0_11_78 l_0_11_78)))
 (let ((?x19985 (* l_0_11_77 l_0_11_77)))
 (let ((?x19983 (* l_0_11_63 l_0_11_63)))
 (let ((?x19981 (* l_0_11_62 l_0_11_62)))
 (let ((?x19972 (* 8.0 l_0_11_31)))
 (let ((?x19973 (* ?x19972 l_0_11_32)))
 (let ((?x14596 (* 8.0 l_0_11_16)))
 (let ((?x14597 (* ?x14596 l_0_11_17)))
 (let ((?x19968 (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_2) ?x14597) (* 1.0 (* l_0_11_2 l_0_11_2)))))
 (let ((?x19977 (- (- (+ ?x19968 (* 1.0 (* l_0_11_3 l_0_11_3))) ?x19973) (* (* 1.0 l_0_11_47) l_0_11_47))))
 (let ((?x19986 (- (- (- (- ?x19977 (* (* 1.0 l_0_11_48) l_0_11_48)) ?x19981) ?x19983) ?x19985)))
 (= (- ?x19986 ?x19987) 0.0)))))))))))))
(assert
 (let ((?x19972 (* 8.0 l_0_11_31)))
 (let ((?x20019 (* ?x19972 l_0_11_34)))
 (let ((?x19716 (* 4.0 l_0_11_31)))
 (let ((?x20017 (* ?x19716 l_0_11_32)))
 (let ((?x20014 (* 2.0 l_0_11_3)))
 (let ((?x20015 (* ?x20014 l_0_11_5)))
 (let ((?x20011 (* 2.0 l_0_11_2)))
 (let ((?x20012 (* ?x20011 l_0_11_4)))
 (let ((?x14596 (* 8.0 l_0_11_16)))
 (let ((?x20009 (* ?x14596 l_0_11_19)))
 (let ((?x19712 (* 4.0 l_0_11_16)))
 (let ((?x20007 (* ?x19712 l_0_11_17)))
 (let ((?x20016 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_4) ?x20007) ?x20009) ?x20012) ?x20015)))
 (let ((?x20026 (- (- (- (- ?x20016 ?x20017) ?x20019) (* (* 2.0 l_0_11_47) l_0_11_49)) (* (* 2.0 l_0_11_48) l_0_11_50))))
 (let ((?x20032 (- (- ?x20026 (* (* 2.0 l_0_11_62) l_0_11_64)) (* (* 2.0 l_0_11_63) l_0_11_65))))
 (let ((?x20038 (- (- ?x20032 (* (* 2.0 l_0_11_77) l_0_11_79)) (* (* 2.0 l_0_11_78) l_0_11_80))))
 (= ?x20038 0.0))))))))))))))))))
(assert
 (let ((?x19972 (* 8.0 l_0_11_31)))
 (let ((?x20079 (* ?x19972 l_0_11_37)))
 (let ((?x19973 (* ?x19972 l_0_11_32)))
 (let ((?x20014 (* 2.0 l_0_11_3)))
 (let ((?x20076 (* ?x20014 l_0_11_8)))
 (let ((?x20011 (* 2.0 l_0_11_2)))
 (let ((?x20074 (* ?x20011 l_0_11_7)))
 (let ((?x14596 (* 8.0 l_0_11_16)))
 (let ((?x20072 (* ?x14596 l_0_11_22)))
 (let ((?x20073 (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_7) (* ?x14596 l_0_11_17)) ?x20072)))
 (let ((?x20082 (- (- (- (+ (+ ?x20073 ?x20074) ?x20076) ?x19973) ?x20079) (* (* 2.0 l_0_11_47) l_0_11_52))))
 (let ((?x20086 (- (- ?x20082 (* (* 2.0 l_0_11_48) l_0_11_53)) (* (* 2.0 l_0_11_62) l_0_11_67))))
 (let ((?x20090 (- (- ?x20086 (* (* 2.0 l_0_11_63) l_0_11_68)) (* (* 2.0 l_0_11_77) l_0_11_82))))
 (= (- ?x20090 (* (* 2.0 l_0_11_78) l_0_11_83)) 0.0)))))))))))))))
(assert
 (let ((?x19972 (* 8.0 l_0_11_31)))
 (let ((?x20122 (* ?x19972 l_0_11_41)))
 (let ((?x19716 (* 4.0 l_0_11_31)))
 (let ((?x20017 (* ?x19716 l_0_11_32)))
 (let ((?x14596 (* 8.0 l_0_11_16)))
 (let ((?x20119 (* ?x14596 l_0_11_26)))
 (let ((?x19712 (* 4.0 l_0_11_16)))
 (let ((?x20007 (* ?x19712 l_0_11_17)))
 (let ((?x20115 (* 2.0 l_0_11_12)))
 (let ((?x20116 (* ?x20115 l_0_11_3)))
 (let ((?x20114 (+ (* (* (- 2.0) l_0_11_1) l_0_11_11) (* (* 2.0 l_0_11_11) l_0_11_2))))
 (let ((?x20125 (- (- (+ (+ (- (+ ?x20114 ?x20116) ?x20007) ?x20119) ?x20017) ?x20122) (* (* 2.0 l_0_11_47) l_0_11_56))))
 (let ((?x20129 (- (- ?x20125 (* (* 2.0 l_0_11_48) l_0_11_57)) (* (* 2.0 l_0_11_62) l_0_11_71))))
 (let ((?x20133 (- (- ?x20129 (* (* 2.0 l_0_11_63) l_0_11_72)) (* (* 2.0 l_0_11_77) l_0_11_86))))
 (= (- ?x20133 (* (* 2.0 l_0_11_78) l_0_11_87)) 0.0))))))))))))))))
(assert
 (let ((?x20177 (* 4.0 l_0_11_33)))
 (let ((?x20178 (* ?x20177 l_0_11_33)))
 (let ((?x20174 (* 4.0 l_0_11_32)))
 (let ((?x20175 (* ?x20174 l_0_11_32)))
 (let ((?x19969 (* l_0_11_3 l_0_11_3)))
 (let ((?x19966 (* l_0_11_2 l_0_11_2)))
 (let ((?x20169 (* l_0_11_18 l_0_11_18)))
 (let ((?x20170 (* 4.0 ?x20169)))
 (let ((?x20167 (* l_0_11_17 l_0_11_17)))
 (let ((?x20168 (* 4.0 ?x20167)))
 (= (- (- (- (- (+ ?x20168 ?x20170) ?x19966) ?x19969) ?x20175) ?x20178) 0.0))))))))))))
(assert
 (let ((?x20205 (* 8.0 l_0_11_33)))
 (let ((?x20206 (* ?x20205 l_0_11_35)))
 (let ((?x20199 (* 8.0 l_0_11_32)))
 (let ((?x20200 (* ?x20199 l_0_11_34)))
 (let ((?x20014 (* 2.0 l_0_11_3)))
 (let ((?x20015 (* ?x20014 l_0_11_5)))
 (let ((?x20011 (* 2.0 l_0_11_2)))
 (let ((?x20012 (* ?x20011 l_0_11_4)))
 (let ((?x20192 (* 8.0 l_0_11_18)))
 (let ((?x20193 (* ?x20192 l_0_11_20)))
 (let ((?x20188 (* 8.0 l_0_11_17)))
 (let ((?x20189 (* ?x20188 l_0_11_19)))
 (let ((?x20196 (+ (+ (+ ?x20189 (* 2.0 (* l_0_11_17 l_0_11_17))) ?x20193) (* 2.0 (* l_0_11_18 l_0_11_18)))))
 (let ((?x20204 (- (- (- (- ?x20196 ?x20012) ?x20015) ?x20200) (* (* 2.0 l_0_11_32) l_0_11_32))))
 (= (- (- ?x20204 ?x20206) (* (* 2.0 l_0_11_33) l_0_11_33)) 0.0))))))))))))))))
(assert
 (let ((?x20177 (* 4.0 l_0_11_33)))
 (let ((?x20178 (* ?x20177 l_0_11_33)))
 (let ((?x20205 (* 8.0 l_0_11_33)))
 (let ((?x20234 (* ?x20205 l_0_11_38)))
 (let ((?x20174 (* 4.0 l_0_11_32)))
 (let ((?x20175 (* ?x20174 l_0_11_32)))
 (let ((?x20199 (* 8.0 l_0_11_32)))
 (let ((?x20231 (* ?x20199 l_0_11_37)))
 (let ((?x20014 (* 2.0 l_0_11_3)))
 (let ((?x20076 (* ?x20014 l_0_11_8)))
 (let ((?x20011 (* 2.0 l_0_11_2)))
 (let ((?x20074 (* ?x20011 l_0_11_7)))
 (let ((?x20169 (* l_0_11_18 l_0_11_18)))
 (let ((?x20170 (* 4.0 ?x20169)))
 (let ((?x20192 (* 8.0 l_0_11_18)))
 (let ((?x20226 (* ?x20192 l_0_11_23)))
 (let ((?x20167 (* l_0_11_17 l_0_11_17)))
 (let ((?x20168 (* 4.0 ?x20167)))
 (let ((?x20188 (* 8.0 l_0_11_17)))
 (let ((?x20224 (* ?x20188 l_0_11_22)))
 (let ((?x20233 (- (- (- (- (+ (+ (+ ?x20224 ?x20168) ?x20226) ?x20170) ?x20074) ?x20076) ?x20231) ?x20175)))
 (= (- (- ?x20233 ?x20234) ?x20178) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7998 (* l_0_11_33 l_0_11_33)))
 (let ((?x8122 (* 2.0 ?x7998)))
 (let ((?x20205 (* 8.0 l_0_11_33)))
 (let ((?x20260 (* ?x20205 l_0_11_42)))
 (let ((?x7954 (* l_0_11_32 l_0_11_32)))
 (let ((?x14889 (* 2.0 ?x7954)))
 (let ((?x20199 (* 8.0 l_0_11_32)))
 (let ((?x20257 (* ?x20199 l_0_11_41)))
 (let ((?x20192 (* 8.0 l_0_11_18)))
 (let ((?x20252 (* ?x20192 l_0_11_27)))
 (let ((?x20188 (* 8.0 l_0_11_17)))
 (let ((?x20247 (* ?x20188 l_0_11_26)))
 (let ((?x20115 (* 2.0 l_0_11_12)))
 (let ((?x20116 (* ?x20115 l_0_11_3)))
 (let ((?x20251 (- (+ (- (* (* (- 2.0) l_0_11_11) l_0_11_2) ?x20116) ?x20247) (* (* 2.0 l_0_11_17) l_0_11_17))))
 (let ((?x20259 (+ (- (- (+ ?x20251 ?x20252) (* (* 2.0 l_0_11_18) l_0_11_18)) ?x20257) ?x14889)))
 (= (+ (- ?x20259 ?x20260) ?x8122) 0.0))))))))))))))))))
(assert
 (let ((?x19736 (* l_0_11_6 l_0_11_6)))
 (let ((?x19727 (* l_0_11_5 l_0_11_5)))
 (let ((?x19721 (* l_0_11_4 l_0_11_4)))
 (let ((?x20314 (* 4.0 l_0_11_36)))
 (let ((?x20315 (* ?x20314 l_0_11_36)))
 (let ((?x20311 (* 4.0 l_0_11_35)))
 (let ((?x20312 (* ?x20311 l_0_11_35)))
 (let ((?x20308 (* 4.0 l_0_11_34)))
 (let ((?x20309 (* ?x20308 l_0_11_34)))
 (let ((?x20177 (* 4.0 l_0_11_33)))
 (let ((?x20306 (* ?x20177 l_0_11_35)))
 (let ((?x20174 (* 4.0 l_0_11_32)))
 (let ((?x20304 (* ?x20174 l_0_11_34)))
 (let ((?x19856 (* 2.0 l_0_11_31)))
 (let ((?x20302 (* ?x19856 l_0_11_32)))
 (let ((?x20299 (* l_0_11_21 l_0_11_21)))
 (let ((?x20300 (* 4.0 ?x20299)))
 (let ((?x20296 (* l_0_11_20 l_0_11_20)))
 (let ((?x20297 (* 4.0 ?x20296)))
 (let ((?x20293 (* l_0_11_19 l_0_11_19)))
 (let ((?x20294 (* 4.0 ?x20293)))
 (let ((?x20290 (* 4.0 l_0_11_18)))
 (let ((?x20291 (* ?x20290 l_0_11_20)))
 (let ((?x20287 (* 4.0 l_0_11_17)))
 (let ((?x20288 (* ?x20287 l_0_11_19)))
 (let ((?x20298 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_16) l_0_11_17) ?x20288) ?x20291) ?x20294) ?x20297)))
 (let ((?x20316 (- (- (- (- (- (+ (+ ?x20298 ?x20300) ?x20302) ?x20304) ?x20306) ?x20309) ?x20312) ?x20315)))
 (= (- (- (- ?x20316 ?x19721) ?x19727) ?x19736) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x20374 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x20371 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x20368 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x20364 (* 8.0 l_0_11_36)))
 (let ((?x20365 (* ?x20364 l_0_11_39)))
 (let ((?x20361 (* 8.0 l_0_11_35)))
 (let ((?x20362 (* ?x20361 l_0_11_38)))
 (let ((?x20358 (* 8.0 l_0_11_34)))
 (let ((?x20359 (* ?x20358 l_0_11_37)))
 (let ((?x20177 (* 4.0 l_0_11_33)))
 (let ((?x20356 (* ?x20177 l_0_11_38)))
 (let ((?x20205 (* 8.0 l_0_11_33)))
 (let ((?x20206 (* ?x20205 l_0_11_35)))
 (let ((?x20174 (* 4.0 l_0_11_32)))
 (let ((?x20353 (* ?x20174 l_0_11_37)))
 (let ((?x20199 (* 8.0 l_0_11_32)))
 (let ((?x20200 (* ?x20199 l_0_11_34)))
 (let ((?x20349 (* 8.0 l_0_11_21)))
 (let ((?x20350 (* ?x20349 l_0_11_24)))
 (let ((?x20346 (* 8.0 l_0_11_20)))
 (let ((?x20347 (* ?x20346 l_0_11_23)))
 (let ((?x20343 (* 8.0 l_0_11_19)))
 (let ((?x20344 (* ?x20343 l_0_11_22)))
 (let ((?x20290 (* 4.0 l_0_11_18)))
 (let ((?x8315 (* ?x20290 l_0_11_23)))
 (let ((?x20192 (* 8.0 l_0_11_18)))
 (let ((?x20193 (* ?x20192 l_0_11_20)))
 (let ((?x20287 (* 4.0 l_0_11_17)))
 (let ((?x15011 (* ?x20287 l_0_11_22)))
 (let ((?x20188 (* 8.0 l_0_11_17)))
 (let ((?x20189 (* ?x20188 l_0_11_19)))
 (let ((?x20352 (- (+ (+ (+ (+ (+ (+ ?x20189 ?x15011) ?x20193) ?x8315) ?x20344) ?x20347) ?x20350) ?x20200)))
 (let ((?x20369 (- (- (- (- (- (- (- ?x20352 ?x20353) ?x20206) ?x20356) ?x20359) ?x20362) ?x20365) ?x20368)))
 (= (- (- ?x20369 ?x20371) ?x20374) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20364 (* 8.0 l_0_11_36)))
 (let ((?x20434 (* ?x20364 l_0_11_43)))
 (let ((?x20361 (* 8.0 l_0_11_35)))
 (let ((?x20432 (* ?x20361 l_0_11_42)))
 (let ((?x20358 (* 8.0 l_0_11_34)))
 (let ((?x20430 (* ?x20358 l_0_11_41)))
 (let ((?x20177 (* 4.0 l_0_11_33)))
 (let ((?x20428 (* ?x20177 l_0_11_42)))
 (let ((?x20306 (* ?x20177 l_0_11_35)))
 (let ((?x20174 (* 4.0 l_0_11_32)))
 (let ((?x20425 (* ?x20174 l_0_11_41)))
 (let ((?x20304 (* ?x20174 l_0_11_34)))
 (let ((?x20349 (* 8.0 l_0_11_21)))
 (let ((?x20422 (* ?x20349 l_0_11_28)))
 (let ((?x20346 (* 8.0 l_0_11_20)))
 (let ((?x20420 (* ?x20346 l_0_11_27)))
 (let ((?x20343 (* 8.0 l_0_11_19)))
 (let ((?x20418 (* ?x20343 l_0_11_26)))
 (let ((?x20290 (* 4.0 l_0_11_18)))
 (let ((?x20416 (* ?x20290 l_0_11_27)))
 (let ((?x20291 (* ?x20290 l_0_11_20)))
 (let ((?x20287 (* 4.0 l_0_11_17)))
 (let ((?x20413 (* ?x20287 l_0_11_26)))
 (let ((?x20288 (* ?x20287 l_0_11_19)))
 (let ((?x20409 (* 2.0 l_0_11_13)))
 (let ((?x20410 (* ?x20409 l_0_11_6)))
 (let ((?x20115 (* 2.0 l_0_11_12)))
 (let ((?x20407 (* ?x20115 l_0_11_5)))
 (let ((?x20414 (+ (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_4) ?x20407) ?x20410) ?x20288) ?x20413)))
 (let ((?x20426 (- (+ (+ (+ (+ (+ (- ?x20414 ?x20291) ?x20416) ?x20418) ?x20420) ?x20422) ?x20304) ?x20425)))
 (= (- (- (- (- (+ ?x20426 ?x20306) ?x20428) ?x20430) ?x20432) ?x20434) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x20488 (* l_0_11_9 l_0_11_9)))
 (let ((?x20486 (* l_0_11_8 l_0_11_8)))
 (let ((?x20484 (* l_0_11_7 l_0_11_7)))
 (let ((?x20481 (* 4.0 l_0_11_40)))
 (let ((?x20482 (* ?x20481 l_0_11_40)))
 (let ((?x20478 (* 4.0 l_0_11_39)))
 (let ((?x20479 (* ?x20478 l_0_11_39)))
 (let ((?x20475 (* 4.0 l_0_11_38)))
 (let ((?x20476 (* ?x20475 l_0_11_38)))
 (let ((?x20472 (* 4.0 l_0_11_37)))
 (let ((?x20473 (* ?x20472 l_0_11_37)))
 (let ((?x20205 (* 8.0 l_0_11_33)))
 (let ((?x20234 (* ?x20205 l_0_11_38)))
 (let ((?x20199 (* 8.0 l_0_11_32)))
 (let ((?x20231 (* ?x20199 l_0_11_37)))
 (let ((?x20467 (* l_0_11_25 l_0_11_25)))
 (let ((?x20468 (* 4.0 ?x20467)))
 (let ((?x20464 (* l_0_11_24 l_0_11_24)))
 (let ((?x20465 (* 4.0 ?x20464)))
 (let ((?x20461 (* l_0_11_23 l_0_11_23)))
 (let ((?x20462 (* 4.0 ?x20461)))
 (let ((?x20458 (* l_0_11_22 l_0_11_22)))
 (let ((?x20459 (* 4.0 ?x20458)))
 (let ((?x20192 (* 8.0 l_0_11_18)))
 (let ((?x20226 (* ?x20192 l_0_11_23)))
 (let ((?x20188 (* 8.0 l_0_11_17)))
 (let ((?x20224 (* ?x20188 l_0_11_22)))
 (let ((?x20466 (+ (+ (+ (+ (+ (* (- l_0_11_10) l_0_11_10) ?x20224) ?x20226) ?x20459) ?x20462) ?x20465)))
 (let ((?x20483 (- (- (- (- (- (- (+ ?x20466 ?x20468) ?x20231) ?x20234) ?x20473) ?x20476) ?x20479) ?x20482)))
 (= (- (- (- ?x20483 ?x20484) ?x20486) ?x20488) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x20544 (* (* 8.0 l_0_11_40) l_0_11_44)))
 (let ((?x20541 (* (* 8.0 l_0_11_39) l_0_11_43)))
 (let ((?x20538 (* (* 8.0 l_0_11_38) l_0_11_42)))
 (let ((?x20535 (* (* 8.0 l_0_11_37) l_0_11_41)))
 (let ((?x20205 (* 8.0 l_0_11_33)))
 (let ((?x20260 (* ?x20205 l_0_11_42)))
 (let ((?x20177 (* 4.0 l_0_11_33)))
 (let ((?x20356 (* ?x20177 l_0_11_38)))
 (let ((?x20199 (* 8.0 l_0_11_32)))
 (let ((?x20257 (* ?x20199 l_0_11_41)))
 (let ((?x20174 (* 4.0 l_0_11_32)))
 (let ((?x20353 (* ?x20174 l_0_11_37)))
 (let ((?x20528 (* (* 8.0 l_0_11_25) l_0_11_29)))
 (let ((?x20525 (* (* 8.0 l_0_11_24) l_0_11_28)))
 (let ((?x20522 (* (* 8.0 l_0_11_23) l_0_11_27)))
 (let ((?x20519 (* (* 8.0 l_0_11_22) l_0_11_26)))
 (let ((?x20192 (* 8.0 l_0_11_18)))
 (let ((?x20252 (* ?x20192 l_0_11_27)))
 (let ((?x20290 (* 4.0 l_0_11_18)))
 (let ((?x8315 (* ?x20290 l_0_11_23)))
 (let ((?x20188 (* 8.0 l_0_11_17)))
 (let ((?x20247 (* ?x20188 l_0_11_26)))
 (let ((?x20287 (* 4.0 l_0_11_17)))
 (let ((?x15011 (* ?x20287 l_0_11_22)))
 (let ((?x20409 (* 2.0 l_0_11_13)))
 (let ((?x20512 (* ?x20409 l_0_11_9)))
 (let ((?x20115 (* 2.0 l_0_11_12)))
 (let ((?x20510 (* ?x20115 l_0_11_8)))
 (let ((?x20112 (* 2.0 l_0_11_11)))
 (let ((?x20508 (* ?x20112 l_0_11_7)))
 (let ((?x20514 (- (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_14) ?x20508) ?x20510) ?x20512) ?x15011)))
 (let ((?x20529 (+ (+ (+ (+ (+ (- (+ ?x20514 ?x20247) ?x8315) ?x20252) ?x20519) ?x20522) ?x20525) ?x20528)))
 (let ((?x20542 (- (- (- (- (+ (- (+ ?x20529 ?x20353) ?x20257) ?x20356) ?x20260) ?x20535) ?x20538) ?x20541)))
 (= (- ?x20542 ?x20544) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20617 (* (* 4.0 l_0_11_45) l_0_11_45)))
 (let ((?x20614 (* (* 4.0 l_0_11_44) l_0_11_44)))
 (let ((?x20611 (* (* 4.0 l_0_11_43) l_0_11_43)))
 (let ((?x20608 (* (* 4.0 l_0_11_42) l_0_11_42)))
 (let ((?x20605 (* (* 4.0 l_0_11_41) l_0_11_41)))
 (let ((?x20177 (* 4.0 l_0_11_33)))
 (let ((?x20428 (* ?x20177 l_0_11_42)))
 (let ((?x20174 (* 4.0 l_0_11_32)))
 (let ((?x20425 (* ?x20174 l_0_11_41)))
 (let ((?x19856 (* 2.0 l_0_11_31)))
 (let ((?x20302 (* ?x19856 l_0_11_32)))
 (let ((?x20598 (* l_0_11_30 l_0_11_30)))
 (let ((?x20599 (* 4.0 ?x20598)))
 (let ((?x20595 (* l_0_11_29 l_0_11_29)))
 (let ((?x20596 (* 4.0 ?x20595)))
 (let ((?x20592 (* l_0_11_28 l_0_11_28)))
 (let ((?x20593 (* 4.0 ?x20592)))
 (let ((?x20589 (* l_0_11_27 l_0_11_27)))
 (let ((?x20590 (* 4.0 ?x20589)))
 (let ((?x20586 (* l_0_11_26 l_0_11_26)))
 (let ((?x20587 (* 4.0 ?x20586)))
 (let ((?x20290 (* 4.0 l_0_11_18)))
 (let ((?x20416 (* ?x20290 l_0_11_27)))
 (let ((?x20287 (* 4.0 l_0_11_17)))
 (let ((?x20413 (* ?x20287 l_0_11_26)))
 (let ((?x19799 (* l_0_11_15 l_0_11_15)))
 (let ((?x19796 (* l_0_11_14 l_0_11_14)))
 (let ((?x19793 (* l_0_11_13 l_0_11_13)))
 (let ((?x20579 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x19793)))
 (let ((?x20584 (- (+ (- (- ?x20579 ?x19796) ?x19799) (* (* 2.0 l_0_11_16) l_0_11_17)) ?x20413)))
 (let ((?x20601 (- (+ (+ (+ (+ (+ (- ?x20584 ?x20416) ?x20587) ?x20590) ?x20593) ?x20596) ?x20599) ?x20302)))
 (let ((?x20618 (- (- (- (- (- (+ (+ ?x20601 ?x20425) ?x20428) ?x20605) ?x20608) ?x20611) ?x20614) ?x20617)))
 (= ?x20618 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20653 (* l_0_11_76 l_0_11_76)))
 (let ((?x20651 (* l_0_11_61 l_0_11_61)))
 (let ((?x20650 (- (* 1.0 (* l_0_11_1 l_0_11_1)) (* (* 1.0 l_0_11_46) l_0_11_46))))
 (= (- (- ?x20650 ?x20651) ?x20653) 0.0)))))
(assert
 (let ((?x20374 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x20371 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x20368 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x19716 (* 4.0 l_0_11_31)))
 (let ((?x20669 (* ?x19716 l_0_11_37)))
 (let ((?x19972 (* 8.0 l_0_11_31)))
 (let ((?x20019 (* ?x19972 l_0_11_34)))
 (let ((?x19712 (* 4.0 l_0_11_16)))
 (let ((?x20666 (* ?x19712 l_0_11_22)))
 (let ((?x14596 (* 8.0 l_0_11_16)))
 (let ((?x20009 (* ?x14596 l_0_11_19)))
 (let ((?x20674 (- (+ (- (- (+ ?x20009 ?x20666) ?x20019) ?x20669) ?x20368) (* (* 2.0 l_0_11_49) l_0_11_52))))
 (let ((?x20681 (- (- (+ ?x20674 ?x20371) (* (* 2.0 l_0_11_50) l_0_11_53)) (* (* 2.0 l_0_11_51) l_0_11_54))))
 (let ((?x20688 (- (- (+ ?x20681 ?x20374) (* (* 2.0 l_0_11_64) l_0_11_67)) (* (* 2.0 l_0_11_65) l_0_11_68))))
 (let ((?x20694 (- (- ?x20688 (* (* 2.0 l_0_11_66) l_0_11_69)) (* (* 2.0 l_0_11_79) l_0_11_82))))
 (let ((?x20700 (- (- ?x20694 (* (* 2.0 l_0_11_80) l_0_11_83)) (* (* 2.0 l_0_11_81) l_0_11_84))))
 (= ?x20700 0.0))))))))))))))))))
(assert
 (let ((?x19716 (* 4.0 l_0_11_31)))
 (let ((?x19805 (* ?x19716 l_0_11_41)))
 (let ((?x19717 (* ?x19716 l_0_11_34)))
 (let ((?x19712 (* 4.0 l_0_11_16)))
 (let ((?x19802 (* ?x19712 l_0_11_26)))
 (let ((?x19713 (* ?x19712 l_0_11_19)))
 (let ((?x20409 (* 2.0 l_0_11_13)))
 (let ((?x20410 (* ?x20409 l_0_11_6)))
 (let ((?x20115 (* 2.0 l_0_11_12)))
 (let ((?x20407 (* ?x20115 l_0_11_5)))
 (let ((?x20725 (+ (- (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x20407) ?x20410) ?x19713) ?x19802)))
 (let ((?x20731 (- (- (- (+ ?x20725 ?x19717) ?x19805) (* (* 2.0 l_0_11_49) l_0_11_56)) (* (* 2.0 l_0_11_50) l_0_11_57))))
 (let ((?x20735 (- (- ?x20731 (* (* 2.0 l_0_11_51) l_0_11_58)) (* (* 2.0 l_0_11_64) l_0_11_71))))
 (let ((?x20739 (- (- ?x20735 (* (* 2.0 l_0_11_65) l_0_11_72)) (* (* 2.0 l_0_11_66) l_0_11_73))))
 (let ((?x20743 (- (- ?x20739 (* (* 2.0 l_0_11_79) l_0_11_86)) (* (* 2.0 l_0_11_80) l_0_11_87))))
 (= (- ?x20743 (* (* 2.0 l_0_11_81) l_0_11_88)) 0.0)))))))))))))))))
(assert
 (let ((?x20791 (* l_0_11_85 l_0_11_85)))
 (let ((?x20789 (* l_0_11_84 l_0_11_84)))
 (let ((?x20787 (* l_0_11_83 l_0_11_83)))
 (let ((?x20785 (* l_0_11_82 l_0_11_82)))
 (let ((?x20781 (* l_0_11_70 l_0_11_70)))
 (let ((?x20777 (* l_0_11_69 l_0_11_69)))
 (let ((?x20775 (* l_0_11_68 l_0_11_68)))
 (let ((?x9415 (* l_0_11_67 l_0_11_67)))
 (let ((?x19972 (* 8.0 l_0_11_31)))
 (let ((?x20079 (* ?x19972 l_0_11_37)))
 (let ((?x14596 (* 8.0 l_0_11_16)))
 (let ((?x20072 (* ?x14596 l_0_11_22)))
 (let ((?x9399 (- (- (+ (* 1.0 (* l_0_11_10 l_0_11_10)) ?x20072) ?x20079) (* (* 1.0 l_0_11_52) l_0_11_52))))
 (let ((?x15168 (- (- ?x9399 (* (* 1.0 l_0_11_53) l_0_11_53)) (* (* 1.0 l_0_11_54) l_0_11_54))))
 (let ((?x20778 (- (- (- (- ?x15168 (* (* 1.0 l_0_11_55) l_0_11_55)) ?x9415) ?x20775) ?x20777)))
 (let ((?x20784 (+ (- (+ ?x20778 (* 1.0 (* l_0_11_7 l_0_11_7))) ?x20781) (* 1.0 (* l_0_11_8 l_0_11_8)))))
 (let ((?x20794 (+ (- (- (- (- ?x20784 ?x20785) ?x20787) ?x20789) ?x20791) (* 1.0 (* l_0_11_9 l_0_11_9)))))
 (= ?x20794 0.0)))))))))))))))))))
(assert
 (let ((?x19972 (* 8.0 l_0_11_31)))
 (let ((?x20122 (* ?x19972 l_0_11_41)))
 (let ((?x19716 (* 4.0 l_0_11_31)))
 (let ((?x20669 (* ?x19716 l_0_11_37)))
 (let ((?x14596 (* 8.0 l_0_11_16)))
 (let ((?x20119 (* ?x14596 l_0_11_26)))
 (let ((?x19712 (* 4.0 l_0_11_16)))
 (let ((?x20666 (* ?x19712 l_0_11_22)))
 (let ((?x20409 (* 2.0 l_0_11_13)))
 (let ((?x20512 (* ?x20409 l_0_11_9)))
 (let ((?x20115 (* 2.0 l_0_11_12)))
 (let ((?x20510 (* ?x20115 l_0_11_8)))
 (let ((?x20112 (* 2.0 l_0_11_11)))
 (let ((?x20508 (* ?x20112 l_0_11_7)))
 (let ((?x20818 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_14) ?x20508) ?x20510) ?x20512) ?x20666)))
 (let ((?x20824 (- (- (+ (+ ?x20818 ?x20119) ?x20669) ?x20122) (* (* 2.0 l_0_11_52) l_0_11_56))))
 (let ((?x20830 (- (- ?x20824 (* (* 2.0 l_0_11_53) l_0_11_57)) (* (* 2.0 l_0_11_54) l_0_11_58))))
 (let ((?x20836 (- (- ?x20830 (* (* 2.0 l_0_11_55) l_0_11_59)) (* (* 2.0 l_0_11_67) l_0_11_71))))
 (let ((?x20842 (- (- ?x20836 (* (* 2.0 l_0_11_68) l_0_11_72)) (* (* 2.0 l_0_11_69) l_0_11_73))))
 (let ((?x20848 (- (- ?x20842 (* (* 2.0 l_0_11_70) l_0_11_74)) (* (* 2.0 l_0_11_82) l_0_11_86))))
 (let ((?x20854 (- (- ?x20848 (* (* 2.0 l_0_11_83) l_0_11_87)) (* (* 2.0 l_0_11_84) l_0_11_88))))
 (= (- ?x20854 (* (* 2.0 l_0_11_85) l_0_11_89)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x19856 (* 2.0 l_0_11_31)))
 (let ((?x20859 (* ?x19856 l_0_11_34)))
 (let ((?x20299 (* l_0_11_21 l_0_11_21)))
 (let ((?x9497 (* 2.0 ?x20299)))
 (let ((?x20296 (* l_0_11_20 l_0_11_20)))
 (let ((?x9498 (* 2.0 ?x20296)))
 (let ((?x20293 (* l_0_11_19 l_0_11_19)))
 (let ((?x9625 (* 2.0 ?x20293)))
 (let ((?x20860 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_16) l_0_11_19) ?x9625) ?x9498) ?x9497) ?x20859)))
 (let ((?x20866 (- (- ?x20860 (* (* 2.0 l_0_11_34) l_0_11_34)) (* (* 2.0 l_0_11_35) l_0_11_35))))
 (= (- ?x20866 (* (* 2.0 l_0_11_36) l_0_11_36)) 0.0))))))))))))
(assert
 (let ((?x20314 (* 4.0 l_0_11_36)))
 (let ((?x20315 (* ?x20314 l_0_11_36)))
 (let ((?x20905 (* ?x20314 l_0_11_39)))
 (let ((?x20311 (* 4.0 l_0_11_35)))
 (let ((?x20312 (* ?x20311 l_0_11_35)))
 (let ((?x20902 (* ?x20311 l_0_11_38)))
 (let ((?x20308 (* 4.0 l_0_11_34)))
 (let ((?x20309 (* ?x20308 l_0_11_34)))
 (let ((?x20899 (* ?x20308 l_0_11_37)))
 (let ((?x19856 (* 2.0 l_0_11_31)))
 (let ((?x20897 (* ?x19856 l_0_11_37)))
 (let ((?x20299 (* l_0_11_21 l_0_11_21)))
 (let ((?x20300 (* 4.0 ?x20299)))
 (let ((?x20893 (* 4.0 l_0_11_21)))
 (let ((?x20894 (* ?x20893 l_0_11_24)))
 (let ((?x20296 (* l_0_11_20 l_0_11_20)))
 (let ((?x20297 (* 4.0 ?x20296)))
 (let ((?x20889 (* 4.0 l_0_11_20)))
 (let ((?x20890 (* ?x20889 l_0_11_23)))
 (let ((?x20293 (* l_0_11_19 l_0_11_19)))
 (let ((?x20294 (* 4.0 ?x20293)))
 (let ((?x20887 (+ (* (* (- 2.0) l_0_11_16) l_0_11_22) (* (* 4.0 l_0_11_19) l_0_11_22))))
 (let ((?x20900 (- (+ (+ (+ (+ (+ (+ ?x20887 ?x20294) ?x20890) ?x20297) ?x20894) ?x20300) ?x20897) ?x20899)))
 (= (- (- (- (- (- ?x20900 ?x20309) ?x20902) ?x20312) ?x20905) ?x20315) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x15007 (* l_0_11_36 l_0_11_36)))
 (let ((?x20878 (* 2.0 ?x15007)))
 (let ((?x20314 (* 4.0 l_0_11_36)))
 (let ((?x20958 (* ?x20314 l_0_11_43)))
 (let ((?x15005 (* l_0_11_35 l_0_11_35)))
 (let ((?x20875 (* 2.0 ?x15005)))
 (let ((?x20311 (* 4.0 l_0_11_35)))
 (let ((?x20955 (* ?x20311 l_0_11_42)))
 (let ((?x20332 (* l_0_11_34 l_0_11_34)))
 (let ((?x9628 (* 2.0 ?x20332)))
 (let ((?x20308 (* 4.0 l_0_11_34)))
 (let ((?x20952 (* ?x20308 l_0_11_41)))
 (let ((?x19856 (* 2.0 l_0_11_31)))
 (let ((?x20950 (* ?x19856 l_0_11_41)))
 (let ((?x20893 (* 4.0 l_0_11_21)))
 (let ((?x20945 (* ?x20893 l_0_11_28)))
 (let ((?x20889 (* 4.0 l_0_11_20)))
 (let ((?x20940 (* ?x20889 l_0_11_27)))
 (let ((?x20885 (* 4.0 l_0_11_19)))
 (let ((?x20935 (* ?x20885 l_0_11_26)))
 (let ((?x20939 (- (+ (* (* (- 2.0) l_0_11_16) l_0_11_26) ?x20935) (* (* 2.0 l_0_11_19) l_0_11_19))))
 (let ((?x20949 (- (+ (- (+ ?x20939 ?x20940) (* (* 2.0 l_0_11_20) l_0_11_20)) ?x20945) (* (* 2.0 l_0_11_21) l_0_11_21))))
 (let ((?x20960 (+ (- (+ (- (+ (- (+ ?x20949 ?x20950) ?x20952) ?x9628) ?x20955) ?x20875) ?x20958) ?x20878)))
 (= ?x20960 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7998 (* l_0_11_33 l_0_11_33)))
 (let ((?x7954 (* l_0_11_32 l_0_11_32)))
 (let ((?x20994 (+ (- (* (- l_0_11_17) l_0_11_17) (* l_0_11_18 l_0_11_18)) ?x7954)))
 (= (+ ?x20994 ?x7998) 0.0)))))
(assert
 (let ((?x20208 (* 2.0 l_0_11_33)))
 (let ((?x21006 (* ?x20208 l_0_11_35)))
 (let ((?x20202 (* 2.0 l_0_11_32)))
 (let ((?x21004 (* ?x20202 l_0_11_34)))
 (let ((?x20254 (* 2.0 l_0_11_18)))
 (let ((?x21002 (* ?x20254 l_0_11_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_17) l_0_11_19) ?x21002) ?x21004) ?x21006) 0.0))))))))
(assert
 (let ((?x20208 (* 2.0 l_0_11_33)))
 (let ((?x15852 (* ?x20208 l_0_11_38)))
 (let ((?x20202 (* 2.0 l_0_11_32)))
 (let ((?x9692 (* ?x20202 l_0_11_37)))
 (let ((?x20254 (* 2.0 l_0_11_18)))
 (let ((?x15584 (* ?x20254 l_0_11_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_17) l_0_11_22) ?x15584) ?x9692) ?x15852) 0.0))))))))
(assert
 (let ((?x20208 (* 2.0 l_0_11_33)))
 (let ((?x21033 (* ?x20208 l_0_11_42)))
 (let ((?x20202 (* 2.0 l_0_11_32)))
 (let ((?x21031 (* ?x20202 l_0_11_41)))
 (let ((?x20254 (* 2.0 l_0_11_18)))
 (let ((?x21024 (* ?x20254 l_0_11_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_17) l_0_11_26) ?x21024) ?x21031) ?x21033) 0.0))))))))
(assert
 (let ((?x15007 (* l_0_11_36 l_0_11_36)))
 (let ((?x15005 (* l_0_11_35 l_0_11_35)))
 (let ((?x20332 (* l_0_11_34 l_0_11_34)))
 (let ((?x20299 (* l_0_11_21 l_0_11_21)))
 (let ((?x21050 (- (- (* (- l_0_11_19) l_0_11_19) (* l_0_11_20 l_0_11_20)) ?x20299)))
 (= (+ (+ (+ ?x21050 ?x20332) ?x15005) ?x15007) 0.0)))))))
(assert
 (let ((?x20867 (* 2.0 l_0_11_36)))
 (let ((?x21074 (* ?x20867 l_0_11_39)))
 (let ((?x20864 (* 2.0 l_0_11_35)))
 (let ((?x21072 (* ?x20864 l_0_11_38)))
 (let ((?x20861 (* 2.0 l_0_11_34)))
 (let ((?x21070 (* ?x20861 l_0_11_37)))
 (let ((?x20947 (* 2.0 l_0_11_21)))
 (let ((?x21068 (* ?x20947 l_0_11_24)))
 (let ((?x20942 (* 2.0 l_0_11_20)))
 (let ((?x21066 (* ?x20942 l_0_11_23)))
 (let ((?x21073 (+ (+ (- (- (* (* (- 2.0) l_0_11_19) l_0_11_22) ?x21066) ?x21068) ?x21070) ?x21072)))
 (= (+ ?x21073 ?x21074) 0.0)))))))))))))
(assert
 (let ((?x20867 (* 2.0 l_0_11_36)))
 (let ((?x21090 (* ?x20867 l_0_11_43)))
 (let ((?x20864 (* 2.0 l_0_11_35)))
 (let ((?x21088 (* ?x20864 l_0_11_42)))
 (let ((?x20861 (* 2.0 l_0_11_34)))
 (let ((?x21086 (* ?x20861 l_0_11_41)))
 (let ((?x20947 (* 2.0 l_0_11_21)))
 (let ((?x21084 (* ?x20947 l_0_11_28)))
 (let ((?x20942 (* 2.0 l_0_11_20)))
 (let ((?x21082 (* ?x20942 l_0_11_27)))
 (let ((?x21089 (+ (+ (- (- (* (* (- 2.0) l_0_11_19) l_0_11_26) ?x21082) ?x21084) ?x21086) ?x21088)))
 (= (+ ?x21089 ?x21090) 0.0)))))))))))))
(assert
 (let ((?x20500 (* l_0_11_40 l_0_11_40)))
 (let ((?x15189 (* l_0_11_39 l_0_11_39)))
 (let ((?x15182 (* l_0_11_38 l_0_11_38)))
 (let ((?x14895 (* l_0_11_37 l_0_11_37)))
 (let ((?x20467 (* l_0_11_25 l_0_11_25)))
 (let ((?x20464 (* l_0_11_24 l_0_11_24)))
 (let ((?x9722 (- (- (* (- l_0_11_22) l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x20464)))
 (= (+ (+ (+ (+ (- ?x9722 ?x20467) ?x14895) ?x15182) ?x15189) ?x20500) 0.0)))))))))
(assert
 (let ((?x21143 (* 2.0 l_0_11_40)))
 (let ((?x21144 (* ?x21143 l_0_11_44)))
 (let ((?x21140 (* 2.0 l_0_11_39)))
 (let ((?x21141 (* ?x21140 l_0_11_43)))
 (let ((?x21137 (* 2.0 l_0_11_38)))
 (let ((?x21138 (* ?x21137 l_0_11_42)))
 (let ((?x21134 (* 2.0 l_0_11_37)))
 (let ((?x21135 (* ?x21134 l_0_11_41)))
 (let ((?x21131 (* 2.0 l_0_11_25)))
 (let ((?x21132 (* ?x21131 l_0_11_29)))
 (let ((?x21128 (* 2.0 l_0_11_24)))
 (let ((?x21129 (* ?x21128 l_0_11_28)))
 (let ((?x21125 (* 2.0 l_0_11_23)))
 (let ((?x21126 (* ?x21125 l_0_11_27)))
 (let ((?x21136 (+ (- (- (- (* (* (- 2.0) l_0_11_22) l_0_11_26) ?x21126) ?x21129) ?x21132) ?x21135)))
 (= (+ (+ (+ ?x21136 ?x21138) ?x21141) ?x21144) 0.0)))))))))))))))))
(assert
 (let ((?x9073 (* l_0_11_45 l_0_11_45)))
 (let ((?x9076 (* l_0_11_44 l_0_11_44)))
 (let ((?x20631 (* l_0_11_43 l_0_11_43)))
 (let ((?x9072 (* l_0_11_42 l_0_11_42)))
 (let ((?x9056 (* l_0_11_41 l_0_11_41)))
 (let ((?x15007 (* l_0_11_36 l_0_11_36)))
 (let ((?x15005 (* l_0_11_35 l_0_11_35)))
 (let ((?x20332 (* l_0_11_34 l_0_11_34)))
 (let ((?x20598 (* l_0_11_30 l_0_11_30)))
 (let ((?x20595 (* l_0_11_29 l_0_11_29)))
 (let ((?x20592 (* l_0_11_28 l_0_11_28)))
 (let ((?x20589 (* l_0_11_27 l_0_11_27)))
 (let ((?x20586 (* l_0_11_26 l_0_11_26)))
 (let ((?x20299 (* l_0_11_21 l_0_11_21)))
 (let ((?x9808 (- (+ (+ (* l_0_11_19 l_0_11_19) (* l_0_11_20 l_0_11_20)) ?x20299) ?x20586)))
 (let ((?x21171 (- (- (- (- (- (- (- ?x9808 ?x20589) ?x20592) ?x20595) ?x20598) ?x20332) ?x15005) ?x15007)))
 (= (+ (+ (+ (+ (+ ?x21171 ?x9056) ?x9072) ?x20631) ?x9076) ?x9073) 0.0))))))))))))))))))
(assert
 (let ((?x20314 (* 4.0 l_0_11_36)))
 (let ((?x20958 (* ?x20314 l_0_11_43)))
 (let ((?x20311 (* 4.0 l_0_11_35)))
 (let ((?x20955 (* ?x20311 l_0_11_42)))
 (let ((?x20308 (* 4.0 l_0_11_34)))
 (let ((?x20952 (* ?x20308 l_0_11_41)))
 (let ((?x19856 (* 2.0 l_0_11_31)))
 (let ((?x20859 (* ?x19856 l_0_11_34)))
 (let ((?x20893 (* 4.0 l_0_11_21)))
 (let ((?x20945 (* ?x20893 l_0_11_28)))
 (let ((?x20889 (* 4.0 l_0_11_20)))
 (let ((?x20940 (* ?x20889 l_0_11_27)))
 (let ((?x20885 (* 4.0 l_0_11_19)))
 (let ((?x20935 (* ?x20885 l_0_11_26)))
 (let ((?x21190 (+ (- (- (- (* (* 2.0 l_0_11_16) l_0_11_19) ?x20935) ?x20940) ?x20945) (* 2.0 (* l_0_11_26 l_0_11_26)))))
 (let ((?x21194 (+ (+ ?x21190 (* 2.0 (* l_0_11_27 l_0_11_27))) (* 2.0 (* l_0_11_28 l_0_11_28)))))
 (let ((?x21198 (+ (+ ?x21194 (* 2.0 (* l_0_11_29 l_0_11_29))) (* 2.0 (* l_0_11_30 l_0_11_30)))))
 (let ((?x21205 (- (+ (+ (+ (- ?x21198 ?x20859) ?x20952) ?x20955) ?x20958) (* (* 2.0 l_0_11_41) l_0_11_41))))
 (let ((?x21211 (- (- ?x21205 (* (* 2.0 l_0_11_42) l_0_11_42)) (* (* 2.0 l_0_11_43) l_0_11_43))))
 (let ((?x21217 (- (- ?x21211 (* (* 2.0 l_0_11_44) l_0_11_44)) (* (* 2.0 l_0_11_45) l_0_11_45))))
 (= ?x21217 0.0))))))))))))))))))))))
(assert
 (let ((?x20617 (* (* 4.0 l_0_11_45) l_0_11_45)))
 (let ((?x20614 (* (* 4.0 l_0_11_44) l_0_11_44)))
 (let ((?x20611 (* (* 4.0 l_0_11_43) l_0_11_43)))
 (let ((?x20608 (* (* 4.0 l_0_11_42) l_0_11_42)))
 (let ((?x20605 (* (* 4.0 l_0_11_41) l_0_11_41)))
 (let ((?x20481 (* 4.0 l_0_11_40)))
 (let ((?x21272 (* ?x20481 l_0_11_44)))
 (let ((?x20478 (* 4.0 l_0_11_39)))
 (let ((?x21270 (* ?x20478 l_0_11_43)))
 (let ((?x20475 (* 4.0 l_0_11_38)))
 (let ((?x21268 (* ?x20475 l_0_11_42)))
 (let ((?x20472 (* 4.0 l_0_11_37)))
 (let ((?x21266 (* ?x20472 l_0_11_41)))
 (let ((?x19856 (* 2.0 l_0_11_31)))
 (let ((?x20897 (* ?x19856 l_0_11_37)))
 (let ((?x20598 (* l_0_11_30 l_0_11_30)))
 (let ((?x20599 (* 4.0 ?x20598)))
 (let ((?x20595 (* l_0_11_29 l_0_11_29)))
 (let ((?x20596 (* 4.0 ?x20595)))
 (let ((?x20592 (* l_0_11_28 l_0_11_28)))
 (let ((?x20593 (* 4.0 ?x20592)))
 (let ((?x20589 (* l_0_11_27 l_0_11_27)))
 (let ((?x20590 (* 4.0 ?x20589)))
 (let ((?x20586 (* l_0_11_26 l_0_11_26)))
 (let ((?x20587 (* 4.0 ?x20586)))
 (let ((?x21258 (* (* 4.0 l_0_11_25) l_0_11_29)))
 (let ((?x21255 (* (* 4.0 l_0_11_24) l_0_11_28)))
 (let ((?x21252 (* (* 4.0 l_0_11_23) l_0_11_27)))
 (let ((?x21249 (* (* 4.0 l_0_11_22) l_0_11_26)))
 (let ((?x21259 (- (- (- (- (* (* 2.0 l_0_11_16) l_0_11_22) ?x21249) ?x21252) ?x21255) ?x21258)))
 (let ((?x21267 (+ (- (+ (+ (+ (+ (+ ?x21259 ?x20587) ?x20590) ?x20593) ?x20596) ?x20599) ?x20897) ?x21266)))
 (let ((?x21277 (- (- (- (- (+ (+ (+ ?x21267 ?x21268) ?x21270) ?x21272) ?x20605) ?x20608) ?x20611) ?x20614)))
 (= (- ?x21277 ?x20617) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9073 (* l_0_11_45 l_0_11_45)))
 (let ((?x9891 (* 2.0 ?x9073)))
 (let ((?x9076 (* l_0_11_44 l_0_11_44)))
 (let ((?x9885 (* 2.0 ?x9076)))
 (let ((?x20631 (* l_0_11_43 l_0_11_43)))
 (let ((?x9876 (* 2.0 ?x20631)))
 (let ((?x9072 (* l_0_11_42 l_0_11_42)))
 (let ((?x21235 (* 2.0 ?x9072)))
 (let ((?x9056 (* l_0_11_41 l_0_11_41)))
 (let ((?x9873 (* 2.0 ?x9056)))
 (let ((?x19856 (* 2.0 l_0_11_31)))
 (let ((?x20950 (* ?x19856 l_0_11_41)))
 (let ((?x10075 (- (* (* 2.0 l_0_11_16) l_0_11_26) (* (* 2.0 l_0_11_26) l_0_11_26))))
 (let ((?x21295 (- (- ?x10075 (* (* 2.0 l_0_11_27) l_0_11_27)) (* (* 2.0 l_0_11_28) l_0_11_28))))
 (let ((?x21301 (- (- ?x21295 (* (* 2.0 l_0_11_29) l_0_11_29)) (* (* 2.0 l_0_11_30) l_0_11_30))))
 (= (+ (+ (+ (+ (+ (- ?x21301 ?x20950) ?x9873) ?x21235) ?x9876) ?x9885) ?x9891) 0.0)))))))))))))))))
(assert
 (let ((?x7998 (* l_0_11_33 l_0_11_33)))
 (let ((?x7954 (* l_0_11_32 l_0_11_32)))
 (let ((?x10209 (- (- (+ (* l_0_11_17 l_0_11_17) (* l_0_11_18 l_0_11_18)) ?x7954) ?x7998)))
 (= ?x10209 0.0)))))
(assert
 (let ((?x20208 (* 2.0 l_0_11_33)))
 (let ((?x21006 (* ?x20208 l_0_11_35)))
 (let ((?x20202 (* 2.0 l_0_11_32)))
 (let ((?x21004 (* ?x20202 l_0_11_34)))
 (let ((?x20254 (* 2.0 l_0_11_18)))
 (let ((?x21002 (* ?x20254 l_0_11_20)))
 (= (- (- (+ (* (* 2.0 l_0_11_17) l_0_11_19) ?x21002) ?x21004) ?x21006) 0.0))))))))
(assert
 (let ((?x20208 (* 2.0 l_0_11_33)))
 (let ((?x15852 (* ?x20208 l_0_11_38)))
 (let ((?x20202 (* 2.0 l_0_11_32)))
 (let ((?x9692 (* ?x20202 l_0_11_37)))
 (let ((?x20254 (* 2.0 l_0_11_18)))
 (let ((?x15584 (* ?x20254 l_0_11_23)))
 (= (- (- (+ (* (* 2.0 l_0_11_17) l_0_11_22) ?x15584) ?x9692) ?x15852) 0.0))))))))
(assert
 (let ((?x20208 (* 2.0 l_0_11_33)))
 (let ((?x21033 (* ?x20208 l_0_11_42)))
 (let ((?x20202 (* 2.0 l_0_11_32)))
 (let ((?x21031 (* ?x20202 l_0_11_41)))
 (let ((?x20254 (* 2.0 l_0_11_18)))
 (let ((?x21024 (* ?x20254 l_0_11_27)))
 (= (- (- (+ (* (* 2.0 l_0_11_17) l_0_11_26) ?x21024) ?x21031) ?x21033) 0.0))))))))
(assert
 (let ((?x20867 (* 2.0 l_0_11_36)))
 (let ((?x21074 (* ?x20867 l_0_11_39)))
 (let ((?x20864 (* 2.0 l_0_11_35)))
 (let ((?x21072 (* ?x20864 l_0_11_38)))
 (let ((?x20861 (* 2.0 l_0_11_34)))
 (let ((?x21070 (* ?x20861 l_0_11_37)))
 (let ((?x20947 (* 2.0 l_0_11_21)))
 (let ((?x21068 (* ?x20947 l_0_11_24)))
 (let ((?x20942 (* 2.0 l_0_11_20)))
 (let ((?x21066 (* ?x20942 l_0_11_23)))
 (let ((?x15750 (- (- (+ (+ (* (* 2.0 l_0_11_19) l_0_11_22) ?x21066) ?x21068) ?x21070) ?x21072)))
 (= (- ?x15750 ?x21074) 0.0)))))))))))))
(assert
 (let ((?x20867 (* 2.0 l_0_11_36)))
 (let ((?x21090 (* ?x20867 l_0_11_43)))
 (let ((?x20864 (* 2.0 l_0_11_35)))
 (let ((?x21088 (* ?x20864 l_0_11_42)))
 (let ((?x20861 (* 2.0 l_0_11_34)))
 (let ((?x21086 (* ?x20861 l_0_11_41)))
 (let ((?x20947 (* 2.0 l_0_11_21)))
 (let ((?x21084 (* ?x20947 l_0_11_28)))
 (let ((?x20942 (* 2.0 l_0_11_20)))
 (let ((?x21082 (* ?x20942 l_0_11_27)))
 (let ((?x21336 (- (- (+ (+ (* (* 2.0 l_0_11_19) l_0_11_26) ?x21082) ?x21084) ?x21086) ?x21088)))
 (= (- ?x21336 ?x21090) 0.0)))))))))))))
(assert
 (let ((?x20500 (* l_0_11_40 l_0_11_40)))
 (let ((?x15189 (* l_0_11_39 l_0_11_39)))
 (let ((?x15182 (* l_0_11_38 l_0_11_38)))
 (let ((?x14895 (* l_0_11_37 l_0_11_37)))
 (let ((?x20467 (* l_0_11_25 l_0_11_25)))
 (let ((?x20464 (* l_0_11_24 l_0_11_24)))
 (let ((?x21344 (+ (+ (+ (* l_0_11_22 l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x20464) ?x20467)))
 (= (- (- (- (- ?x21344 ?x14895) ?x15182) ?x15189) ?x20500) 0.0)))))))))
(assert
 (let ((?x21143 (* 2.0 l_0_11_40)))
 (let ((?x21144 (* ?x21143 l_0_11_44)))
 (let ((?x21140 (* 2.0 l_0_11_39)))
 (let ((?x21141 (* ?x21140 l_0_11_43)))
 (let ((?x21137 (* 2.0 l_0_11_38)))
 (let ((?x21138 (* ?x21137 l_0_11_42)))
 (let ((?x21134 (* 2.0 l_0_11_37)))
 (let ((?x21135 (* ?x21134 l_0_11_41)))
 (let ((?x21131 (* 2.0 l_0_11_25)))
 (let ((?x21132 (* ?x21131 l_0_11_29)))
 (let ((?x21128 (* 2.0 l_0_11_24)))
 (let ((?x21129 (* ?x21128 l_0_11_28)))
 (let ((?x21125 (* 2.0 l_0_11_23)))
 (let ((?x21126 (* ?x21125 l_0_11_27)))
 (let ((?x21362 (- (+ (+ (+ (* (* 2.0 l_0_11_22) l_0_11_26) ?x21126) ?x21129) ?x21132) ?x21135)))
 (= (- (- (- ?x21362 ?x21138) ?x21141) ?x21144) 0.0)))))))))))))))))
(assert
 (let ((?x9073 (* l_0_11_45 l_0_11_45)))
 (let ((?x9076 (* l_0_11_44 l_0_11_44)))
 (let ((?x20631 (* l_0_11_43 l_0_11_43)))
 (let ((?x9072 (* l_0_11_42 l_0_11_42)))
 (let ((?x9056 (* l_0_11_41 l_0_11_41)))
 (let ((?x20598 (* l_0_11_30 l_0_11_30)))
 (let ((?x20595 (* l_0_11_29 l_0_11_29)))
 (let ((?x20592 (* l_0_11_28 l_0_11_28)))
 (let ((?x21375 (+ (+ (+ (* l_0_11_26 l_0_11_26) (* l_0_11_27 l_0_11_27)) ?x20592) ?x20595)))
 (= (- (- (- (- (- (+ ?x21375 ?x20598) ?x9056) ?x9072) ?x20631) ?x9076) ?x9073) 0.0)))))))))))
(assert
 (let ((?x20364 (* 8.0 l_0_11_36)))
 (let ((?x20365 (* ?x20364 l_0_11_39)))
 (let ((?x20361 (* 8.0 l_0_11_35)))
 (let ((?x20362 (* ?x20361 l_0_11_38)))
 (let ((?x20358 (* 8.0 l_0_11_34)))
 (let ((?x20359 (* ?x20358 l_0_11_37)))
 (let ((?x20349 (* 8.0 l_0_11_21)))
 (let ((?x20350 (* ?x20349 l_0_11_24)))
 (let ((?x20346 (* 8.0 l_0_11_20)))
 (let ((?x20347 (* ?x20346 l_0_11_23)))
 (let ((?x20343 (* 8.0 l_0_11_19)))
 (let ((?x20344 (* ?x20343 l_0_11_22)))
 (let ((?x21398 (+ (+ (+ (+ ?x20344 ?x20347) ?x20350) (* 2.0 (* l_0_11_22 l_0_11_22))) (* 2.0 (* l_0_11_23 l_0_11_23)))))
 (let ((?x21402 (+ (+ ?x21398 (* 2.0 (* l_0_11_24 l_0_11_24))) (* 2.0 (* l_0_11_25 l_0_11_25)))))
 (let ((?x21407 (- (- (- (- ?x21402 ?x20359) ?x20362) ?x20365) (* (* 2.0 l_0_11_37) l_0_11_37))))
 (let ((?x21411 (- (- ?x21407 (* (* 2.0 l_0_11_38) l_0_11_38)) (* (* 2.0 l_0_11_39) l_0_11_39))))
 (= (- ?x21411 (* (* 2.0 l_0_11_40) l_0_11_40)) 0.0))))))))))))))))))
(assert
 (let ((?x20481 (* 4.0 l_0_11_40)))
 (let ((?x21272 (* ?x20481 l_0_11_44)))
 (let ((?x20478 (* 4.0 l_0_11_39)))
 (let ((?x21270 (* ?x20478 l_0_11_43)))
 (let ((?x20475 (* 4.0 l_0_11_38)))
 (let ((?x21268 (* ?x20475 l_0_11_42)))
 (let ((?x20472 (* 4.0 l_0_11_37)))
 (let ((?x21266 (* ?x20472 l_0_11_41)))
 (let ((?x20364 (* 8.0 l_0_11_36)))
 (let ((?x20434 (* ?x20364 l_0_11_43)))
 (let ((?x20314 (* 4.0 l_0_11_36)))
 (let ((?x20905 (* ?x20314 l_0_11_39)))
 (let ((?x20361 (* 8.0 l_0_11_35)))
 (let ((?x20432 (* ?x20361 l_0_11_42)))
 (let ((?x20311 (* 4.0 l_0_11_35)))
 (let ((?x20902 (* ?x20311 l_0_11_38)))
 (let ((?x20358 (* 8.0 l_0_11_34)))
 (let ((?x20430 (* ?x20358 l_0_11_41)))
 (let ((?x20308 (* 4.0 l_0_11_34)))
 (let ((?x20899 (* ?x20308 l_0_11_37)))
 (let ((?x21258 (* (* 4.0 l_0_11_25) l_0_11_29)))
 (let ((?x21255 (* (* 4.0 l_0_11_24) l_0_11_28)))
 (let ((?x21252 (* (* 4.0 l_0_11_23) l_0_11_27)))
 (let ((?x21249 (* (* 4.0 l_0_11_22) l_0_11_26)))
 (let ((?x20349 (* 8.0 l_0_11_21)))
 (let ((?x20422 (* ?x20349 l_0_11_28)))
 (let ((?x20893 (* 4.0 l_0_11_21)))
 (let ((?x20894 (* ?x20893 l_0_11_24)))
 (let ((?x20346 (* 8.0 l_0_11_20)))
 (let ((?x20420 (* ?x20346 l_0_11_27)))
 (let ((?x20889 (* 4.0 l_0_11_20)))
 (let ((?x20890 (* ?x20889 l_0_11_23)))
 (let ((?x20343 (* 8.0 l_0_11_19)))
 (let ((?x20418 (* ?x20343 l_0_11_26)))
 (let ((?x21437 (- (+ (- (+ (* (* (- 4.0) l_0_11_19) l_0_11_22) ?x20418) ?x20890) ?x20420) ?x20894)))
 (let ((?x21444 (- (+ (+ (+ (+ (+ (+ ?x21437 ?x20422) ?x21249) ?x21252) ?x21255) ?x21258) ?x20899) ?x20430)))
 (let ((?x21451 (- (- (- (- (+ (- (+ ?x21444 ?x20902) ?x20432) ?x20905) ?x20434) ?x21266) ?x21268) ?x21270)))
 (= (- ?x21451 ?x21272) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20500 (* l_0_11_40 l_0_11_40)))
 (let ((?x8467 (* 2.0 ?x20500)))
 (let ((?x20544 (* (* 8.0 l_0_11_40) l_0_11_44)))
 (let ((?x15189 (* l_0_11_39 l_0_11_39)))
 (let ((?x21424 (* 2.0 ?x15189)))
 (let ((?x20541 (* (* 8.0 l_0_11_39) l_0_11_43)))
 (let ((?x15182 (* l_0_11_38 l_0_11_38)))
 (let ((?x21419 (* 2.0 ?x15182)))
 (let ((?x20538 (* (* 8.0 l_0_11_38) l_0_11_42)))
 (let ((?x14895 (* l_0_11_37 l_0_11_37)))
 (let ((?x16055 (* 2.0 ?x14895)))
 (let ((?x20535 (* (* 8.0 l_0_11_37) l_0_11_41)))
 (let ((?x20528 (* (* 8.0 l_0_11_25) l_0_11_29)))
 (let ((?x20525 (* (* 8.0 l_0_11_24) l_0_11_28)))
 (let ((?x20522 (* (* 8.0 l_0_11_23) l_0_11_27)))
 (let ((?x20519 (* (* 8.0 l_0_11_22) l_0_11_26)))
 (let ((?x21467 (- (+ (- ?x20519 (* (* 2.0 l_0_11_22) l_0_11_22)) ?x20522) (* (* 2.0 l_0_11_23) l_0_11_23))))
 (let ((?x21473 (- (+ (- (+ ?x21467 ?x20525) (* (* 2.0 l_0_11_24) l_0_11_24)) ?x20528) (* (* 2.0 l_0_11_25) l_0_11_25))))
 (let ((?x21480 (- (+ (- (+ (- (+ (- ?x21473 ?x20535) ?x16055) ?x20538) ?x21419) ?x20541) ?x21424) ?x20544)))
 (= (+ ?x21480 ?x8467) 0.0)))))))))))))))))))))
(assert
 (let ((?x20481 (* 4.0 l_0_11_40)))
 (let ((?x20482 (* ?x20481 l_0_11_40)))
 (let ((?x20478 (* 4.0 l_0_11_39)))
 (let ((?x20479 (* ?x20478 l_0_11_39)))
 (let ((?x20475 (* 4.0 l_0_11_38)))
 (let ((?x20476 (* ?x20475 l_0_11_38)))
 (let ((?x20472 (* 4.0 l_0_11_37)))
 (let ((?x20473 (* ?x20472 l_0_11_37)))
 (let ((?x20467 (* l_0_11_25 l_0_11_25)))
 (let ((?x20468 (* 4.0 ?x20467)))
 (let ((?x20464 (* l_0_11_24 l_0_11_24)))
 (let ((?x20465 (* 4.0 ?x20464)))
 (let ((?x20461 (* l_0_11_23 l_0_11_23)))
 (let ((?x20462 (* 4.0 ?x20461)))
 (let ((?x20458 (* l_0_11_22 l_0_11_22)))
 (let ((?x20459 (* 4.0 ?x20458)))
 (let ((?x10362 (- (- (- (- (+ (+ (+ ?x20459 ?x20462) ?x20465) ?x20468) ?x20473) ?x20476) ?x20479) ?x20482)))
 (= ?x10362 0.0)))))))))))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_16 0.0))
(assert
 (>= l_0_11_18 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_25 0.0))
(assert
 (>= l_0_11_30 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_33 0.0))
(assert
 (>= l_0_11_36 0.0))
(assert
 (>= l_0_11_40 0.0))
(assert
 (>= l_0_11_45 0.0))
(assert
 (>= l_0_11_46 0.0))
(assert
 (>= l_0_11_48 0.0))
(assert
 (>= l_0_11_51 0.0))
(assert
 (>= l_0_11_55 0.0))
(assert
 (>= l_0_11_60 0.0))
(assert
 (>= l_0_11_61 0.0))
(assert
 (>= l_0_11_63 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_70 0.0))
(assert
 (>= l_0_11_75 0.0))
(assert
 (>= l_0_11_76 0.0))
(assert
 (>= l_0_11_78 0.0))
(assert
 (>= l_0_11_81 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (let ((?x21514 (* 4.0 l_0_12_31)))
 (let ((?x21515 (* ?x21514 l_0_12_31)))
 (let ((?x21511 (* l_0_12_16 l_0_12_16)))
 (let ((?x21512 (* 4.0 ?x21511)))
 (let ((?x21513 (+ (- (* (* 2.0 l_0_12_1) l_0_12_2) (* l_0_12_1 l_0_12_1)) ?x21512)))
 (let ((?x21522 (- (- (- ?x21513 ?x21515) (* (* 2.0 l_0_12_46) l_0_12_47)) (* (* 2.0 l_0_12_61) l_0_12_62))))
 (let ((?x21528 (- (- ?x21522 (* (* 2.0 l_0_12_76) l_0_12_77)) (* (* 2.0 l_0_12_91) l_0_12_92))))
 (= (+ ?x21528 4.0) 0.0)))))))))
(assert
 (let ((?x21514 (* 4.0 l_0_12_31)))
 (let ((?x21515 (* ?x21514 l_0_12_31)))
 (let ((?x21511 (* l_0_12_16 l_0_12_16)))
 (let ((?x21512 (* 4.0 ?x21511)))
 (let ((?x21558 (- (- (+ (* (* 2.0 l_0_12_1) l_0_12_7) ?x21512) ?x21515) (* (* 2.0 l_0_12_46) l_0_12_52))))
 (let ((?x21562 (- (- ?x21558 (* (* 2.0 l_0_12_61) l_0_12_67)) (* (* 2.0 l_0_12_76) l_0_12_82))))
 (= (+ (- ?x21562 (* (* 2.0 l_0_12_91) l_0_12_97)) 4.0) 0.0))))))))
(assert
 (let ((?x21613 (* l_0_12_96 l_0_12_96)))
 (let ((?x21611 (* l_0_12_95 l_0_12_95)))
 (let ((?x21609 (* l_0_12_94 l_0_12_94)))
 (let ((?x21607 (* l_0_12_81 l_0_12_81)))
 (let ((?x21605 (* l_0_12_80 l_0_12_80)))
 (let ((?x21603 (* l_0_12_79 l_0_12_79)))
 (let ((?x21601 (* l_0_12_66 l_0_12_66)))
 (let ((?x21599 (* l_0_12_65 l_0_12_65)))
 (let ((?x21597 (* l_0_12_64 l_0_12_64)))
 (let ((?x16111 (* l_0_12_31 l_0_12_31)))
 (let ((?x21514 (* 4.0 l_0_12_31)))
 (let ((?x21576 (* ?x21514 l_0_12_34)))
 (let ((?x21577 (- (- (* (* 4.0 l_0_12_16) l_0_12_19) (* l_0_12_16 l_0_12_16)) ?x21576)))
 (let ((?x21584 (- (+ (+ ?x21577 ?x16111) (* 1.0 (* l_0_12_4 l_0_12_4))) (* (* 1.0 l_0_12_49) l_0_12_49))))
 (let ((?x21590 (- (+ ?x21584 (* 1.0 (* l_0_12_5 l_0_12_5))) (* (* 1.0 l_0_12_50) l_0_12_50))))
 (let ((?x21596 (+ (- ?x21590 (* (* 1.0 l_0_12_51) l_0_12_51)) (* 1.0 (* l_0_12_6 l_0_12_6)))))
 (let ((?x21610 (- (- (- (- (- (- (- ?x21596 ?x21597) ?x21599) ?x21601) ?x21603) ?x21605) ?x21607) ?x21609)))
 (= (- (- (- ?x21610 ?x21611) ?x21613) 1.0) 0.0)))))))))))))))))))
(assert
 (let ((?x21700 (* l_0_12_90 l_0_12_90)))
 (let ((?x21698 (* l_0_12_89 l_0_12_89)))
 (let ((?x21696 (* l_0_12_88 l_0_12_88)))
 (let ((?x21694 (* l_0_12_87 l_0_12_87)))
 (let ((?x21692 (* l_0_12_86 l_0_12_86)))
 (let ((?x21690 (* l_0_12_75 l_0_12_75)))
 (let ((?x21688 (* l_0_12_74 l_0_12_74)))
 (let ((?x21686 (* l_0_12_73 l_0_12_73)))
 (let ((?x21684 (* l_0_12_72 l_0_12_72)))
 (let ((?x21682 (* l_0_12_71 l_0_12_71)))
 (let ((?x16111 (* l_0_12_31 l_0_12_31)))
 (let ((?x21514 (* 4.0 l_0_12_31)))
 (let ((?x21664 (* ?x21514 l_0_12_41)))
 (let ((?x21511 (* l_0_12_16 l_0_12_16)))
 (let ((?x16200 (* 4.0 l_0_12_16)))
 (let ((?x21661 (* ?x16200 l_0_12_26)))
 (let ((?x21644 (* l_0_12_105 l_0_12_105)))
 (let ((?x21642 (* l_0_12_104 l_0_12_104)))
 (let ((?x10628 (* l_0_12_103 l_0_12_103)))
 (let ((?x10629 (- (- (* (- l_0_12_101) l_0_12_101) (* l_0_12_102 l_0_12_102)) ?x10628)))
 (let ((?x21651 (+ (+ (- (- ?x10629 ?x21642) ?x21644) (* 1.0 (* l_0_12_11 l_0_12_11))) (* 1.0 (* l_0_12_12 l_0_12_12)))))
 (let ((?x21657 (+ (+ ?x21651 (* 1.0 (* l_0_12_13 l_0_12_13))) (* 1.0 (* l_0_12_14 l_0_12_14)))))
 (let ((?x21665 (+ (+ (- (+ ?x21657 (* 1.0 (* l_0_12_15 l_0_12_15))) ?x21661) ?x21511) ?x21664)))
 (let ((?x21672 (- (- (- ?x21665 ?x16111) (* (* 1.0 l_0_12_56) l_0_12_56)) (* (* 1.0 l_0_12_57) l_0_12_57))))
 (let ((?x21678 (- (- ?x21672 (* (* 1.0 l_0_12_58) l_0_12_58)) (* (* 1.0 l_0_12_59) l_0_12_59))))
 (let ((?x21687 (- (- (- (- ?x21678 (* (* 1.0 l_0_12_60) l_0_12_60)) ?x21682) ?x21684) ?x21686)))
 (let ((?x21701 (- (- (- (- (- (- (- ?x21687 ?x21688) ?x21690) ?x21692) ?x21694) ?x21696) ?x21698) ?x21700)))
 (= (+ ?x21701 1.0) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x21735 (+ (* (* 2.0 l_0_12_1) l_0_12_4) (* 2.0 (* l_0_12_16 l_0_12_16)))))
 (let ((?x21740 (- (- ?x21735 (* (* 2.0 l_0_12_31) l_0_12_31)) (* (* 2.0 l_0_12_46) l_0_12_49))))
 (let ((?x21744 (- (- ?x21740 (* (* 2.0 l_0_12_61) l_0_12_64)) (* (* 2.0 l_0_12_76) l_0_12_79))))
 (= (+ (- ?x21744 (* (* 2.0 l_0_12_91) l_0_12_94)) 2.0) 0.0)))))
(assert
 (let ((?x16111 (* l_0_12_31 l_0_12_31)))
 (let ((?x21752 (* 2.0 ?x16111)))
 (let ((?x21776 (- (* (* 2.0 l_0_12_1) l_0_12_11) (* (* 2.0 l_0_12_101) l_0_12_91))))
 (let ((?x21782 (- (+ (- ?x21776 (* (* 2.0 l_0_12_16) l_0_12_16)) ?x21752) (* (* 2.0 l_0_12_46) l_0_12_56))))
 (let ((?x21786 (- (- ?x21782 (* (* 2.0 l_0_12_61) l_0_12_71)) (* (* 2.0 l_0_12_76) l_0_12_86))))
 (= (- ?x21786 2.0) 0.0)))))))
(assert
 (let ((?x21833 (* l_0_12_93 l_0_12_93)))
 (let ((?x21831 (* l_0_12_92 l_0_12_92)))
 (let ((?x21829 (* l_0_12_78 l_0_12_78)))
 (let ((?x21827 (* l_0_12_77 l_0_12_77)))
 (let ((?x21825 (* l_0_12_63 l_0_12_63)))
 (let ((?x21823 (* l_0_12_62 l_0_12_62)))
 (let ((?x21814 (* 8.0 l_0_12_31)))
 (let ((?x21815 (* ?x21814 l_0_12_32)))
 (let ((?x21805 (* 8.0 l_0_12_16)))
 (let ((?x21806 (* ?x21805 l_0_12_17)))
 (let ((?x21810 (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_2) ?x21806) (* 1.0 (* l_0_12_2 l_0_12_2)))))
 (let ((?x21819 (- (- (+ ?x21810 (* 1.0 (* l_0_12_3 l_0_12_3))) ?x21815) (* (* 1.0 l_0_12_47) l_0_12_47))))
 (let ((?x21828 (- (- (- (- ?x21819 (* (* 1.0 l_0_12_48) l_0_12_48)) ?x21823) ?x21825) ?x21827)))
 (= (- (- (- ?x21828 ?x21829) ?x21831) ?x21833) 0.0)))))))))))))))
(assert
 (let ((?x21814 (* 8.0 l_0_12_31)))
 (let ((?x21855 (* ?x21814 l_0_12_34)))
 (let ((?x21514 (* 4.0 l_0_12_31)))
 (let ((?x21853 (* ?x21514 l_0_12_32)))
 (let ((?x21850 (* 2.0 l_0_12_3)))
 (let ((?x21851 (* ?x21850 l_0_12_5)))
 (let ((?x21847 (* 2.0 l_0_12_2)))
 (let ((?x21848 (* ?x21847 l_0_12_4)))
 (let ((?x21805 (* 8.0 l_0_12_16)))
 (let ((?x21845 (* ?x21805 l_0_12_19)))
 (let ((?x16200 (* 4.0 l_0_12_16)))
 (let ((?x10763 (* ?x16200 l_0_12_17)))
 (let ((?x21852 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_4) ?x10763) ?x21845) ?x21848) ?x21851)))
 (let ((?x21862 (- (- (- (- ?x21852 ?x21853) ?x21855) (* (* 2.0 l_0_12_47) l_0_12_49)) (* (* 2.0 l_0_12_48) l_0_12_50))))
 (let ((?x21868 (- (- ?x21862 (* (* 2.0 l_0_12_62) l_0_12_64)) (* (* 2.0 l_0_12_63) l_0_12_65))))
 (let ((?x21874 (- (- ?x21868 (* (* 2.0 l_0_12_77) l_0_12_79)) (* (* 2.0 l_0_12_78) l_0_12_80))))
 (let ((?x21880 (- (- ?x21874 (* (* 2.0 l_0_12_92) l_0_12_94)) (* (* 2.0 l_0_12_93) l_0_12_95))))
 (= ?x21880 0.0)))))))))))))))))))
(assert
 (let ((?x21814 (* 8.0 l_0_12_31)))
 (let ((?x21925 (* ?x21814 l_0_12_37)))
 (let ((?x21815 (* ?x21814 l_0_12_32)))
 (let ((?x21850 (* 2.0 l_0_12_3)))
 (let ((?x21922 (* ?x21850 l_0_12_8)))
 (let ((?x21847 (* 2.0 l_0_12_2)))
 (let ((?x21920 (* ?x21847 l_0_12_7)))
 (let ((?x21805 (* 8.0 l_0_12_16)))
 (let ((?x21918 (* ?x21805 l_0_12_22)))
 (let ((?x21919 (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_7) (* ?x21805 l_0_12_17)) ?x21918)))
 (let ((?x21928 (- (- (- (+ (+ ?x21919 ?x21920) ?x21922) ?x21815) ?x21925) (* (* 2.0 l_0_12_47) l_0_12_52))))
 (let ((?x21932 (- (- ?x21928 (* (* 2.0 l_0_12_48) l_0_12_53)) (* (* 2.0 l_0_12_62) l_0_12_67))))
 (let ((?x21936 (- (- ?x21932 (* (* 2.0 l_0_12_63) l_0_12_68)) (* (* 2.0 l_0_12_77) l_0_12_82))))
 (let ((?x21940 (- (- ?x21936 (* (* 2.0 l_0_12_78) l_0_12_83)) (* (* 2.0 l_0_12_92) l_0_12_97))))
 (= (- ?x21940 (* (* 2.0 l_0_12_93) l_0_12_98)) 0.0))))))))))))))))
(assert
 (let ((?x21814 (* 8.0 l_0_12_31)))
 (let ((?x21981 (* ?x21814 l_0_12_41)))
 (let ((?x21514 (* 4.0 l_0_12_31)))
 (let ((?x21853 (* ?x21514 l_0_12_32)))
 (let ((?x21805 (* 8.0 l_0_12_16)))
 (let ((?x21978 (* ?x21805 l_0_12_26)))
 (let ((?x16200 (* 4.0 l_0_12_16)))
 (let ((?x10763 (* ?x16200 l_0_12_17)))
 (let ((?x21974 (* 2.0 l_0_12_12)))
 (let ((?x21975 (* ?x21974 l_0_12_3)))
 (let ((?x21967 (- (* (* (- 2.0) l_0_12_1) l_0_12_11) (* (* 2.0 l_0_12_101) l_0_12_92))))
 (let ((?x21973 (+ (- ?x21967 (* (* 2.0 l_0_12_102) l_0_12_93)) (* (* 2.0 l_0_12_11) l_0_12_2))))
 (let ((?x21984 (- (- (+ (+ (- (+ ?x21973 ?x21975) ?x10763) ?x21978) ?x21853) ?x21981) (* (* 2.0 l_0_12_47) l_0_12_56))))
 (let ((?x21988 (- (- ?x21984 (* (* 2.0 l_0_12_48) l_0_12_57)) (* (* 2.0 l_0_12_62) l_0_12_71))))
 (let ((?x21992 (- (- ?x21988 (* (* 2.0 l_0_12_63) l_0_12_72)) (* (* 2.0 l_0_12_77) l_0_12_86))))
 (= (- ?x21992 (* (* 2.0 l_0_12_78) l_0_12_87)) 0.0)))))))))))))))))
(assert
 (let ((?x22049 (* 4.0 l_0_12_33)))
 (let ((?x22050 (* ?x22049 l_0_12_33)))
 (let ((?x22046 (* 4.0 l_0_12_32)))
 (let ((?x22047 (* ?x22046 l_0_12_32)))
 (let ((?x21811 (* l_0_12_3 l_0_12_3)))
 (let ((?x21808 (* l_0_12_2 l_0_12_2)))
 (let ((?x22041 (* l_0_12_18 l_0_12_18)))
 (let ((?x22042 (* 4.0 ?x22041)))
 (let ((?x22039 (* l_0_12_17 l_0_12_17)))
 (let ((?x22040 (* 4.0 ?x22039)))
 (= (- (- (- (- (+ ?x22040 ?x22042) ?x21808) ?x21811) ?x22047) ?x22050) 0.0))))))))))))
(assert
 (let ((?x22078 (* 8.0 l_0_12_33)))
 (let ((?x22079 (* ?x22078 l_0_12_35)))
 (let ((?x22072 (* 8.0 l_0_12_32)))
 (let ((?x22073 (* ?x22072 l_0_12_34)))
 (let ((?x21850 (* 2.0 l_0_12_3)))
 (let ((?x21851 (* ?x21850 l_0_12_5)))
 (let ((?x21847 (* 2.0 l_0_12_2)))
 (let ((?x21848 (* ?x21847 l_0_12_4)))
 (let ((?x22041 (* l_0_12_18 l_0_12_18)))
 (let ((?x22068 (* 2.0 ?x22041)))
 (let ((?x22065 (* 8.0 l_0_12_18)))
 (let ((?x22066 (* ?x22065 l_0_12_20)))
 (let ((?x22039 (* l_0_12_17 l_0_12_17)))
 (let ((?x22063 (* 2.0 ?x22039)))
 (let ((?x22061 (* 8.0 l_0_12_17)))
 (let ((?x22062 (* ?x22061 l_0_12_19)))
 (let ((?x22077 (- (- (- (- (+ (+ (+ ?x22062 ?x22063) ?x22066) ?x22068) ?x21848) ?x21851) ?x22073) (* (* 2.0 l_0_12_32) l_0_12_32))))
 (= (- (- ?x22077 ?x22079) (* (* 2.0 l_0_12_33) l_0_12_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x22049 (* 4.0 l_0_12_33)))
 (let ((?x22050 (* ?x22049 l_0_12_33)))
 (let ((?x22078 (* 8.0 l_0_12_33)))
 (let ((?x22115 (* ?x22078 l_0_12_38)))
 (let ((?x22046 (* 4.0 l_0_12_32)))
 (let ((?x22047 (* ?x22046 l_0_12_32)))
 (let ((?x22072 (* 8.0 l_0_12_32)))
 (let ((?x22112 (* ?x22072 l_0_12_37)))
 (let ((?x21850 (* 2.0 l_0_12_3)))
 (let ((?x21922 (* ?x21850 l_0_12_8)))
 (let ((?x21847 (* 2.0 l_0_12_2)))
 (let ((?x21920 (* ?x21847 l_0_12_7)))
 (let ((?x22041 (* l_0_12_18 l_0_12_18)))
 (let ((?x22042 (* 4.0 ?x22041)))
 (let ((?x22065 (* 8.0 l_0_12_18)))
 (let ((?x22107 (* ?x22065 l_0_12_23)))
 (let ((?x22039 (* l_0_12_17 l_0_12_17)))
 (let ((?x22040 (* 4.0 ?x22039)))
 (let ((?x22061 (* 8.0 l_0_12_17)))
 (let ((?x22105 (* ?x22061 l_0_12_22)))
 (let ((?x22114 (- (- (- (- (+ (+ (+ ?x22105 ?x22040) ?x22107) ?x22042) ?x21920) ?x21922) ?x22112) ?x22047)))
 (= (- (- ?x22114 ?x22115) ?x22050) 0.0)))))))))))))))))))))))
(assert
 (let ((?x16666 (* l_0_12_33 l_0_12_33)))
 (let ((?x22097 (* 2.0 ?x16666)))
 (let ((?x22078 (* 8.0 l_0_12_33)))
 (let ((?x22135 (* ?x22078 l_0_12_42)))
 (let ((?x11226 (* l_0_12_32 l_0_12_32)))
 (let ((?x11137 (* 2.0 ?x11226)))
 (let ((?x22072 (* 8.0 l_0_12_32)))
 (let ((?x22132 (* ?x22072 l_0_12_41)))
 (let ((?x22065 (* 8.0 l_0_12_18)))
 (let ((?x22127 (* ?x22065 l_0_12_27)))
 (let ((?x22061 (* 8.0 l_0_12_17)))
 (let ((?x22122 (* ?x22061 l_0_12_26)))
 (let ((?x21974 (* 2.0 l_0_12_12)))
 (let ((?x21975 (* ?x21974 l_0_12_3)))
 (let ((?x22126 (- (+ (- (* (* (- 2.0) l_0_12_11) l_0_12_2) ?x21975) ?x22122) (* (* 2.0 l_0_12_17) l_0_12_17))))
 (let ((?x22134 (+ (- (- (+ ?x22126 ?x22127) (* (* 2.0 l_0_12_18) l_0_12_18)) ?x22132) ?x11137)))
 (= (+ (- ?x22134 ?x22135) ?x22097) 0.0))))))))))))))))))
(assert
 (let ((?x21594 (* l_0_12_6 l_0_12_6)))
 (let ((?x21585 (* l_0_12_5 l_0_12_5)))
 (let ((?x21579 (* l_0_12_4 l_0_12_4)))
 (let ((?x22189 (* 4.0 l_0_12_36)))
 (let ((?x22190 (* ?x22189 l_0_12_36)))
 (let ((?x22186 (* 4.0 l_0_12_35)))
 (let ((?x22187 (* ?x22186 l_0_12_35)))
 (let ((?x22183 (* 4.0 l_0_12_34)))
 (let ((?x22184 (* ?x22183 l_0_12_34)))
 (let ((?x22049 (* 4.0 l_0_12_33)))
 (let ((?x22181 (* ?x22049 l_0_12_35)))
 (let ((?x22046 (* 4.0 l_0_12_32)))
 (let ((?x22179 (* ?x22046 l_0_12_34)))
 (let ((?x21736 (* 2.0 l_0_12_31)))
 (let ((?x22177 (* ?x21736 l_0_12_32)))
 (let ((?x22174 (* l_0_12_21 l_0_12_21)))
 (let ((?x22175 (* 4.0 ?x22174)))
 (let ((?x22171 (* l_0_12_20 l_0_12_20)))
 (let ((?x22172 (* 4.0 ?x22171)))
 (let ((?x22168 (* l_0_12_19 l_0_12_19)))
 (let ((?x22169 (* 4.0 ?x22168)))
 (let ((?x22165 (* 4.0 l_0_12_18)))
 (let ((?x22166 (* ?x22165 l_0_12_20)))
 (let ((?x22162 (* 4.0 l_0_12_17)))
 (let ((?x22163 (* ?x22162 l_0_12_19)))
 (let ((?x22173 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_16) l_0_12_17) ?x22163) ?x22166) ?x22169) ?x22172)))
 (let ((?x22191 (- (- (- (- (- (+ (+ ?x22173 ?x22175) ?x22177) ?x22179) ?x22181) ?x22184) ?x22187) ?x22190)))
 (= (- (- (- ?x22191 ?x21579) ?x21585) ?x21594) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x22259 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x22256 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x22253 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x22249 (* 8.0 l_0_12_36)))
 (let ((?x22250 (* ?x22249 l_0_12_39)))
 (let ((?x22246 (* 8.0 l_0_12_35)))
 (let ((?x22247 (* ?x22246 l_0_12_38)))
 (let ((?x22243 (* 8.0 l_0_12_34)))
 (let ((?x22244 (* ?x22243 l_0_12_37)))
 (let ((?x22049 (* 4.0 l_0_12_33)))
 (let ((?x22241 (* ?x22049 l_0_12_38)))
 (let ((?x22078 (* 8.0 l_0_12_33)))
 (let ((?x22079 (* ?x22078 l_0_12_35)))
 (let ((?x22046 (* 4.0 l_0_12_32)))
 (let ((?x22238 (* ?x22046 l_0_12_37)))
 (let ((?x22072 (* 8.0 l_0_12_32)))
 (let ((?x22073 (* ?x22072 l_0_12_34)))
 (let ((?x22234 (* 8.0 l_0_12_21)))
 (let ((?x22235 (* ?x22234 l_0_12_24)))
 (let ((?x22231 (* 8.0 l_0_12_20)))
 (let ((?x22232 (* ?x22231 l_0_12_23)))
 (let ((?x22228 (* 8.0 l_0_12_19)))
 (let ((?x22229 (* ?x22228 l_0_12_22)))
 (let ((?x22165 (* 4.0 l_0_12_18)))
 (let ((?x22226 (* ?x22165 l_0_12_23)))
 (let ((?x22065 (* 8.0 l_0_12_18)))
 (let ((?x22066 (* ?x22065 l_0_12_20)))
 (let ((?x22162 (* 4.0 l_0_12_17)))
 (let ((?x22223 (* ?x22162 l_0_12_22)))
 (let ((?x22061 (* 8.0 l_0_12_17)))
 (let ((?x22062 (* ?x22061 l_0_12_19)))
 (let ((?x22237 (- (+ (+ (+ (+ (+ (+ ?x22062 ?x22223) ?x22066) ?x22226) ?x22229) ?x22232) ?x22235) ?x22073)))
 (let ((?x22254 (- (- (- (- (- (- (- ?x22237 ?x22238) ?x22079) ?x22241) ?x22244) ?x22247) ?x22250) ?x22253)))
 (= (- (- ?x22254 ?x22256) ?x22259) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x22249 (* 8.0 l_0_12_36)))
 (let ((?x22316 (* ?x22249 l_0_12_43)))
 (let ((?x22246 (* 8.0 l_0_12_35)))
 (let ((?x22314 (* ?x22246 l_0_12_42)))
 (let ((?x22243 (* 8.0 l_0_12_34)))
 (let ((?x22312 (* ?x22243 l_0_12_41)))
 (let ((?x22049 (* 4.0 l_0_12_33)))
 (let ((?x22310 (* ?x22049 l_0_12_42)))
 (let ((?x22181 (* ?x22049 l_0_12_35)))
 (let ((?x22046 (* 4.0 l_0_12_32)))
 (let ((?x22307 (* ?x22046 l_0_12_41)))
 (let ((?x22179 (* ?x22046 l_0_12_34)))
 (let ((?x22234 (* 8.0 l_0_12_21)))
 (let ((?x22304 (* ?x22234 l_0_12_28)))
 (let ((?x22231 (* 8.0 l_0_12_20)))
 (let ((?x22302 (* ?x22231 l_0_12_27)))
 (let ((?x22228 (* 8.0 l_0_12_19)))
 (let ((?x22300 (* ?x22228 l_0_12_26)))
 (let ((?x22165 (* 4.0 l_0_12_18)))
 (let ((?x22298 (* ?x22165 l_0_12_27)))
 (let ((?x22166 (* ?x22165 l_0_12_20)))
 (let ((?x22162 (* 4.0 l_0_12_17)))
 (let ((?x22295 (* ?x22162 l_0_12_26)))
 (let ((?x22163 (* ?x22162 l_0_12_19)))
 (let ((?x22291 (* 2.0 l_0_12_13)))
 (let ((?x22292 (* ?x22291 l_0_12_6)))
 (let ((?x21974 (* 2.0 l_0_12_12)))
 (let ((?x22289 (* ?x21974 l_0_12_5)))
 (let ((?x22296 (+ (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_4) ?x22289) ?x22292) ?x22163) ?x22295)))
 (let ((?x22308 (- (+ (+ (+ (+ (+ (- ?x22296 ?x22166) ?x22298) ?x22300) ?x22302) ?x22304) ?x22179) ?x22307)))
 (= (- (- (- (- (+ ?x22308 ?x22181) ?x22310) ?x22312) ?x22314) ?x22316) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x22378 (* l_0_12_9 l_0_12_9)))
 (let ((?x22376 (* l_0_12_8 l_0_12_8)))
 (let ((?x22374 (* l_0_12_7 l_0_12_7)))
 (let ((?x22371 (* 4.0 l_0_12_40)))
 (let ((?x22372 (* ?x22371 l_0_12_40)))
 (let ((?x22368 (* 4.0 l_0_12_39)))
 (let ((?x22369 (* ?x22368 l_0_12_39)))
 (let ((?x22365 (* 4.0 l_0_12_38)))
 (let ((?x22366 (* ?x22365 l_0_12_38)))
 (let ((?x22362 (* 4.0 l_0_12_37)))
 (let ((?x22363 (* ?x22362 l_0_12_37)))
 (let ((?x22078 (* 8.0 l_0_12_33)))
 (let ((?x22115 (* ?x22078 l_0_12_38)))
 (let ((?x22072 (* 8.0 l_0_12_32)))
 (let ((?x22112 (* ?x22072 l_0_12_37)))
 (let ((?x22357 (* l_0_12_25 l_0_12_25)))
 (let ((?x22358 (* 4.0 ?x22357)))
 (let ((?x22354 (* l_0_12_24 l_0_12_24)))
 (let ((?x22355 (* 4.0 ?x22354)))
 (let ((?x22351 (* l_0_12_23 l_0_12_23)))
 (let ((?x22352 (* 4.0 ?x22351)))
 (let ((?x22348 (* l_0_12_22 l_0_12_22)))
 (let ((?x22349 (* 4.0 ?x22348)))
 (let ((?x22065 (* 8.0 l_0_12_18)))
 (let ((?x22107 (* ?x22065 l_0_12_23)))
 (let ((?x22061 (* 8.0 l_0_12_17)))
 (let ((?x22105 (* ?x22061 l_0_12_22)))
 (let ((?x22356 (+ (+ (+ (+ (+ (* (- l_0_12_10) l_0_12_10) ?x22105) ?x22107) ?x22349) ?x22352) ?x22355)))
 (let ((?x22373 (- (- (- (- (- (- (+ ?x22356 ?x22358) ?x22112) ?x22115) ?x22363) ?x22366) ?x22369) ?x22372)))
 (= (- (- (- ?x22373 ?x22374) ?x22376) ?x22378) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x22440 (* (* 8.0 l_0_12_40) l_0_12_44)))
 (let ((?x22437 (* (* 8.0 l_0_12_39) l_0_12_43)))
 (let ((?x22434 (* (* 8.0 l_0_12_38) l_0_12_42)))
 (let ((?x22431 (* (* 8.0 l_0_12_37) l_0_12_41)))
 (let ((?x22078 (* 8.0 l_0_12_33)))
 (let ((?x22135 (* ?x22078 l_0_12_42)))
 (let ((?x22049 (* 4.0 l_0_12_33)))
 (let ((?x22241 (* ?x22049 l_0_12_38)))
 (let ((?x22072 (* 8.0 l_0_12_32)))
 (let ((?x22132 (* ?x22072 l_0_12_41)))
 (let ((?x22046 (* 4.0 l_0_12_32)))
 (let ((?x22238 (* ?x22046 l_0_12_37)))
 (let ((?x22424 (* (* 8.0 l_0_12_25) l_0_12_29)))
 (let ((?x22421 (* (* 8.0 l_0_12_24) l_0_12_28)))
 (let ((?x22418 (* (* 8.0 l_0_12_23) l_0_12_27)))
 (let ((?x22415 (* (* 8.0 l_0_12_22) l_0_12_26)))
 (let ((?x22065 (* 8.0 l_0_12_18)))
 (let ((?x22127 (* ?x22065 l_0_12_27)))
 (let ((?x22165 (* 4.0 l_0_12_18)))
 (let ((?x22226 (* ?x22165 l_0_12_23)))
 (let ((?x22061 (* 8.0 l_0_12_17)))
 (let ((?x22122 (* ?x22061 l_0_12_26)))
 (let ((?x22162 (* 4.0 l_0_12_17)))
 (let ((?x22223 (* ?x22162 l_0_12_22)))
 (let ((?x22291 (* 2.0 l_0_12_13)))
 (let ((?x22408 (* ?x22291 l_0_12_9)))
 (let ((?x21974 (* 2.0 l_0_12_12)))
 (let ((?x22406 (* ?x21974 l_0_12_8)))
 (let ((?x21971 (* 2.0 l_0_12_11)))
 (let ((?x22404 (* ?x21971 l_0_12_7)))
 (let ((?x22410 (- (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_14) ?x22404) ?x22406) ?x22408) ?x22223)))
 (let ((?x22425 (+ (+ (+ (+ (+ (- (+ ?x22410 ?x22122) ?x22226) ?x22127) ?x22415) ?x22418) ?x22421) ?x22424)))
 (let ((?x22438 (- (- (- (- (+ (- (+ ?x22425 ?x22238) ?x22132) ?x22241) ?x22135) ?x22431) ?x22434) ?x22437)))
 (= (- ?x22438 ?x22440) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x22493 (* (* 4.0 l_0_12_45) l_0_12_45)))
 (let ((?x22490 (* (* 4.0 l_0_12_44) l_0_12_44)))
 (let ((?x22487 (* (* 4.0 l_0_12_43) l_0_12_43)))
 (let ((?x22484 (* (* 4.0 l_0_12_42) l_0_12_42)))
 (let ((?x22481 (* (* 4.0 l_0_12_41) l_0_12_41)))
 (let ((?x22049 (* 4.0 l_0_12_33)))
 (let ((?x22310 (* ?x22049 l_0_12_42)))
 (let ((?x22046 (* 4.0 l_0_12_32)))
 (let ((?x22307 (* ?x22046 l_0_12_41)))
 (let ((?x21736 (* 2.0 l_0_12_31)))
 (let ((?x22177 (* ?x21736 l_0_12_32)))
 (let ((?x22474 (* l_0_12_30 l_0_12_30)))
 (let ((?x22475 (* 4.0 ?x22474)))
 (let ((?x22471 (* l_0_12_29 l_0_12_29)))
 (let ((?x22472 (* 4.0 ?x22471)))
 (let ((?x22468 (* l_0_12_28 l_0_12_28)))
 (let ((?x22469 (* 4.0 ?x22468)))
 (let ((?x22465 (* l_0_12_27 l_0_12_27)))
 (let ((?x22466 (* 4.0 ?x22465)))
 (let ((?x22462 (* l_0_12_26 l_0_12_26)))
 (let ((?x22463 (* 4.0 ?x22462)))
 (let ((?x22165 (* 4.0 l_0_12_18)))
 (let ((?x22298 (* ?x22165 l_0_12_27)))
 (let ((?x22162 (* 4.0 l_0_12_17)))
 (let ((?x22295 (* ?x22162 l_0_12_26)))
 (let ((?x21658 (* l_0_12_15 l_0_12_15)))
 (let ((?x21655 (* l_0_12_14 l_0_12_14)))
 (let ((?x21652 (* l_0_12_13 l_0_12_13)))
 (let ((?x16884 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x21652)))
 (let ((?x22460 (- (+ (- (- ?x16884 ?x21655) ?x21658) (* (* 2.0 l_0_12_16) l_0_12_17)) ?x22295)))
 (let ((?x22477 (- (+ (+ (+ (+ (+ (- ?x22460 ?x22298) ?x22463) ?x22466) ?x22469) ?x22472) ?x22475) ?x22177)))
 (let ((?x22494 (- (- (- (- (- (+ (+ ?x22477 ?x22307) ?x22310) ?x22481) ?x22484) ?x22487) ?x22490) ?x22493)))
 (= ?x22494 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x22515 (* l_0_12_91 l_0_12_91)))
 (let ((?x22513 (* l_0_12_76 l_0_12_76)))
 (let ((?x22511 (* l_0_12_61 l_0_12_61)))
 (let ((?x22510 (- (* 1.0 (* l_0_12_1 l_0_12_1)) (* (* 1.0 l_0_12_46) l_0_12_46))))
 (= (- (- (- ?x22510 ?x22511) ?x22513) ?x22515) 0.0))))))
(assert
 (let ((?x22259 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x22256 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x22253 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x21514 (* 4.0 l_0_12_31)))
 (let ((?x22529 (* ?x21514 l_0_12_37)))
 (let ((?x21814 (* 8.0 l_0_12_31)))
 (let ((?x21855 (* ?x21814 l_0_12_34)))
 (let ((?x16200 (* 4.0 l_0_12_16)))
 (let ((?x17201 (* ?x16200 l_0_12_22)))
 (let ((?x21805 (* 8.0 l_0_12_16)))
 (let ((?x21845 (* ?x21805 l_0_12_19)))
 (let ((?x22534 (- (+ (- (- (+ ?x21845 ?x17201) ?x21855) ?x22529) ?x22253) (* (* 2.0 l_0_12_49) l_0_12_52))))
 (let ((?x22541 (- (- (+ ?x22534 ?x22256) (* (* 2.0 l_0_12_50) l_0_12_53)) (* (* 2.0 l_0_12_51) l_0_12_54))))
 (let ((?x22548 (- (- (+ ?x22541 ?x22259) (* (* 2.0 l_0_12_64) l_0_12_67)) (* (* 2.0 l_0_12_65) l_0_12_68))))
 (let ((?x22554 (- (- ?x22548 (* (* 2.0 l_0_12_66) l_0_12_69)) (* (* 2.0 l_0_12_79) l_0_12_82))))
 (let ((?x22560 (- (- ?x22554 (* (* 2.0 l_0_12_80) l_0_12_83)) (* (* 2.0 l_0_12_81) l_0_12_84))))
 (let ((?x22566 (- (- ?x22560 (* (* 2.0 l_0_12_94) l_0_12_97)) (* (* 2.0 l_0_12_95) l_0_12_98))))
 (= (- ?x22566 (* (* 2.0 l_0_12_96) l_0_12_99)) 0.0)))))))))))))))))))
(assert
 (let ((?x21514 (* 4.0 l_0_12_31)))
 (let ((?x21664 (* ?x21514 l_0_12_41)))
 (let ((?x21576 (* ?x21514 l_0_12_34)))
 (let ((?x16200 (* 4.0 l_0_12_16)))
 (let ((?x21661 (* ?x16200 l_0_12_26)))
 (let ((?x21574 (* ?x16200 l_0_12_19)))
 (let ((?x22291 (* 2.0 l_0_12_13)))
 (let ((?x22292 (* ?x22291 l_0_12_6)))
 (let ((?x21974 (* 2.0 l_0_12_12)))
 (let ((?x22289 (* ?x21974 l_0_12_5)))
 (let ((?x22614 (- (* (* (- 2.0) l_0_12_101) l_0_12_94) (* (* 2.0 l_0_12_102) l_0_12_95))))
 (let ((?x22619 (+ (- ?x22614 (* (* 2.0 l_0_12_103) l_0_12_96)) (* (* 2.0 l_0_12_11) l_0_12_4))))
 (let ((?x22627 (- (- (+ (+ (- (+ (+ ?x22619 ?x22289) ?x22292) ?x21574) ?x21661) ?x21576) ?x21664) (* (* 2.0 l_0_12_49) l_0_12_56))))
 (let ((?x22631 (- (- ?x22627 (* (* 2.0 l_0_12_50) l_0_12_57)) (* (* 2.0 l_0_12_51) l_0_12_58))))
 (let ((?x22635 (- (- ?x22631 (* (* 2.0 l_0_12_64) l_0_12_71)) (* (* 2.0 l_0_12_65) l_0_12_72))))
 (let ((?x22639 (- (- ?x22635 (* (* 2.0 l_0_12_66) l_0_12_73)) (* (* 2.0 l_0_12_79) l_0_12_86))))
 (let ((?x22643 (- (- ?x22639 (* (* 2.0 l_0_12_80) l_0_12_87)) (* (* 2.0 l_0_12_81) l_0_12_88))))
 (= ?x22643 0.0)))))))))))))))))))
(assert
 (let ((?x22712 (* l_0_12_99 l_0_12_99)))
 (let ((?x22710 (* l_0_12_98 l_0_12_98)))
 (let ((?x22708 (* l_0_12_97 l_0_12_97)))
 (let ((?x22704 (* l_0_12_85 l_0_12_85)))
 (let ((?x22702 (* l_0_12_84 l_0_12_84)))
 (let ((?x22700 (* l_0_12_83 l_0_12_83)))
 (let ((?x22698 (* l_0_12_82 l_0_12_82)))
 (let ((?x22694 (* l_0_12_70 l_0_12_70)))
 (let ((?x22690 (* l_0_12_69 l_0_12_69)))
 (let ((?x22688 (* l_0_12_68 l_0_12_68)))
 (let ((?x22686 (* l_0_12_67 l_0_12_67)))
 (let ((?x21814 (* 8.0 l_0_12_31)))
 (let ((?x21925 (* ?x21814 l_0_12_37)))
 (let ((?x21805 (* 8.0 l_0_12_16)))
 (let ((?x21918 (* ?x21805 l_0_12_22)))
 (let ((?x22670 (* l_0_12_100 l_0_12_100)))
 (let ((?x22676 (- (- (+ (- (* 1.0 (* l_0_12_10 l_0_12_10)) ?x22670) ?x21918) ?x21925) (* (* 1.0 l_0_12_52) l_0_12_52))))
 (let ((?x22682 (- (- ?x22676 (* (* 1.0 l_0_12_53) l_0_12_53)) (* (* 1.0 l_0_12_54) l_0_12_54))))
 (let ((?x22691 (- (- (- (- ?x22682 (* (* 1.0 l_0_12_55) l_0_12_55)) ?x22686) ?x22688) ?x22690)))
 (let ((?x22697 (+ (- (+ ?x22691 (* 1.0 (* l_0_12_7 l_0_12_7))) ?x22694) (* 1.0 (* l_0_12_8 l_0_12_8)))))
 (let ((?x22707 (+ (- (- (- (- ?x22697 ?x22698) ?x22700) ?x22702) ?x22704) (* 1.0 (* l_0_12_9 l_0_12_9)))))
 (= (- (- (- ?x22707 ?x22708) ?x22710) ?x22712) 0.0)))))))))))))))))))))))
(assert
 (let ((?x21814 (* 8.0 l_0_12_31)))
 (let ((?x21981 (* ?x21814 l_0_12_41)))
 (let ((?x21514 (* 4.0 l_0_12_31)))
 (let ((?x22529 (* ?x21514 l_0_12_37)))
 (let ((?x21805 (* 8.0 l_0_12_16)))
 (let ((?x21978 (* ?x21805 l_0_12_26)))
 (let ((?x16200 (* 4.0 l_0_12_16)))
 (let ((?x17201 (* ?x16200 l_0_12_22)))
 (let ((?x22291 (* 2.0 l_0_12_13)))
 (let ((?x22408 (* ?x22291 l_0_12_9)))
 (let ((?x21974 (* 2.0 l_0_12_12)))
 (let ((?x22406 (* ?x21974 l_0_12_8)))
 (let ((?x21971 (* 2.0 l_0_12_11)))
 (let ((?x22404 (* ?x21971 l_0_12_7)))
 (let ((?x22738 (- (* (* 2.0 l_0_12_10) l_0_12_14) (* (* 2.0 l_0_12_100) l_0_12_104))))
 (let ((?x22742 (- (- ?x22738 (* (* 2.0 l_0_12_101) l_0_12_97)) (* (* 2.0 l_0_12_102) l_0_12_98))))
 (let ((?x22747 (+ (+ (+ (- ?x22742 (* (* 2.0 l_0_12_103) l_0_12_99)) ?x22404) ?x22406) ?x22408)))
 (let ((?x22754 (- (- (+ (+ (- ?x22747 ?x17201) ?x21978) ?x22529) ?x21981) (* (* 2.0 l_0_12_52) l_0_12_56))))
 (let ((?x22760 (- (- ?x22754 (* (* 2.0 l_0_12_53) l_0_12_57)) (* (* 2.0 l_0_12_54) l_0_12_58))))
 (let ((?x22766 (- (- ?x22760 (* (* 2.0 l_0_12_55) l_0_12_59)) (* (* 2.0 l_0_12_67) l_0_12_71))))
 (let ((?x22772 (- (- ?x22766 (* (* 2.0 l_0_12_68) l_0_12_72)) (* (* 2.0 l_0_12_69) l_0_12_73))))
 (let ((?x22778 (- (- ?x22772 (* (* 2.0 l_0_12_70) l_0_12_74)) (* (* 2.0 l_0_12_82) l_0_12_86))))
 (let ((?x22784 (- (- ?x22778 (* (* 2.0 l_0_12_83) l_0_12_87)) (* (* 2.0 l_0_12_84) l_0_12_88))))
 (= (- ?x22784 (* (* 2.0 l_0_12_85) l_0_12_89)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x21736 (* 2.0 l_0_12_31)))
 (let ((?x17460 (* ?x21736 l_0_12_34)))
 (let ((?x3710 (+ (* (* (- 2.0) l_0_12_16) l_0_12_19) (* 2.0 (* l_0_12_19 l_0_12_19)))))
 (let ((?x17475 (+ (+ ?x3710 (* 2.0 (* l_0_12_20 l_0_12_20))) (* 2.0 (* l_0_12_21 l_0_12_21)))))
 (let ((?x3512 (- (- (+ ?x17475 ?x17460) (* (* 2.0 l_0_12_34) l_0_12_34)) (* (* 2.0 l_0_12_35) l_0_12_35))))
 (= (- ?x3512 (* (* 2.0 l_0_12_36) l_0_12_36)) 0.0)))))))
(assert
 (let ((?x22189 (* 4.0 l_0_12_36)))
 (let ((?x22190 (* ?x22189 l_0_12_36)))
 (let ((?x22848 (* ?x22189 l_0_12_39)))
 (let ((?x22186 (* 4.0 l_0_12_35)))
 (let ((?x22187 (* ?x22186 l_0_12_35)))
 (let ((?x22845 (* ?x22186 l_0_12_38)))
 (let ((?x22183 (* 4.0 l_0_12_34)))
 (let ((?x22184 (* ?x22183 l_0_12_34)))
 (let ((?x22842 (* ?x22183 l_0_12_37)))
 (let ((?x21736 (* 2.0 l_0_12_31)))
 (let ((?x22840 (* ?x21736 l_0_12_37)))
 (let ((?x22174 (* l_0_12_21 l_0_12_21)))
 (let ((?x22175 (* 4.0 ?x22174)))
 (let ((?x22836 (* 4.0 l_0_12_21)))
 (let ((?x22837 (* ?x22836 l_0_12_24)))
 (let ((?x22171 (* l_0_12_20 l_0_12_20)))
 (let ((?x22172 (* 4.0 ?x22171)))
 (let ((?x22832 (* 4.0 l_0_12_20)))
 (let ((?x22833 (* ?x22832 l_0_12_23)))
 (let ((?x22168 (* l_0_12_19 l_0_12_19)))
 (let ((?x22169 (* 4.0 ?x22168)))
 (let ((?x22830 (+ (* (* (- 2.0) l_0_12_16) l_0_12_22) (* (* 4.0 l_0_12_19) l_0_12_22))))
 (let ((?x22843 (- (+ (+ (+ (+ (+ (+ ?x22830 ?x22169) ?x22833) ?x22172) ?x22837) ?x22175) ?x22840) ?x22842)))
 (= (- (- (- (- (- ?x22843 ?x22184) ?x22845) ?x22187) ?x22848) ?x22190) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x22211 (* l_0_12_36 l_0_12_36)))
 (let ((?x22817 (* 2.0 ?x22211)))
 (let ((?x22189 (* 4.0 l_0_12_36)))
 (let ((?x22898 (* ?x22189 l_0_12_43)))
 (let ((?x16821 (* l_0_12_35 l_0_12_35)))
 (let ((?x22814 (* 2.0 ?x16821)))
 (let ((?x22186 (* 4.0 l_0_12_35)))
 (let ((?x22895 (* ?x22186 l_0_12_42)))
 (let ((?x11346 (* l_0_12_34 l_0_12_34)))
 (let ((?x17662 (* 2.0 ?x11346)))
 (let ((?x22183 (* 4.0 l_0_12_34)))
 (let ((?x22892 (* ?x22183 l_0_12_41)))
 (let ((?x21736 (* 2.0 l_0_12_31)))
 (let ((?x22890 (* ?x21736 l_0_12_41)))
 (let ((?x22836 (* 4.0 l_0_12_21)))
 (let ((?x22885 (* ?x22836 l_0_12_28)))
 (let ((?x22832 (* 4.0 l_0_12_20)))
 (let ((?x22880 (* ?x22832 l_0_12_27)))
 (let ((?x22828 (* 4.0 l_0_12_19)))
 (let ((?x22875 (* ?x22828 l_0_12_26)))
 (let ((?x22879 (- (+ (* (* (- 2.0) l_0_12_16) l_0_12_26) ?x22875) (* (* 2.0 l_0_12_19) l_0_12_19))))
 (let ((?x22889 (- (+ (- (+ ?x22879 ?x22880) (* (* 2.0 l_0_12_20) l_0_12_20)) ?x22885) (* (* 2.0 l_0_12_21) l_0_12_21))))
 (let ((?x22900 (+ (- (+ (- (+ (- (+ ?x22889 ?x22890) ?x22892) ?x17662) ?x22895) ?x22814) ?x22898) ?x22817)))
 (= ?x22900 0.0)))))))))))))))))))))))))
(assert
 (let ((?x16666 (* l_0_12_33 l_0_12_33)))
 (let ((?x11226 (* l_0_12_32 l_0_12_32)))
 (let ((?x22928 (+ (- (* (- l_0_12_17) l_0_12_17) (* l_0_12_18 l_0_12_18)) ?x11226)))
 (= (+ ?x22928 ?x16666) 0.0)))))
(assert
 (let ((?x22081 (* 2.0 l_0_12_33)))
 (let ((?x22940 (* ?x22081 l_0_12_35)))
 (let ((?x22075 (* 2.0 l_0_12_32)))
 (let ((?x22938 (* ?x22075 l_0_12_34)))
 (let ((?x22129 (* 2.0 l_0_12_18)))
 (let ((?x22936 (* ?x22129 l_0_12_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_17) l_0_12_19) ?x22936) ?x22938) ?x22940) 0.0))))))))
(assert
 (let ((?x22081 (* 2.0 l_0_12_33)))
 (let ((?x22955 (* ?x22081 l_0_12_38)))
 (let ((?x22075 (* 2.0 l_0_12_32)))
 (let ((?x22953 (* ?x22075 l_0_12_37)))
 (let ((?x22129 (* 2.0 l_0_12_18)))
 (let ((?x22951 (* ?x22129 l_0_12_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_17) l_0_12_22) ?x22951) ?x22953) ?x22955) 0.0))))))))
(assert
 (let ((?x22081 (* 2.0 l_0_12_33)))
 (let ((?x22970 (* ?x22081 l_0_12_42)))
 (let ((?x22075 (* 2.0 l_0_12_32)))
 (let ((?x22968 (* ?x22075 l_0_12_41)))
 (let ((?x22129 (* 2.0 l_0_12_18)))
 (let ((?x22966 (* ?x22129 l_0_12_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_17) l_0_12_26) ?x22966) ?x22968) ?x22970) 0.0))))))))
(assert
 (let ((?x22211 (* l_0_12_36 l_0_12_36)))
 (let ((?x16821 (* l_0_12_35 l_0_12_35)))
 (let ((?x11346 (* l_0_12_34 l_0_12_34)))
 (let ((?x22174 (* l_0_12_21 l_0_12_21)))
 (let ((?x22986 (- (- (* (- l_0_12_19) l_0_12_19) (* l_0_12_20 l_0_12_20)) ?x22174)))
 (= (+ (+ (+ ?x22986 ?x11346) ?x16821) ?x22211) 0.0)))))))
(assert
 (let ((?x22806 (* 2.0 l_0_12_36)))
 (let ((?x23010 (* ?x22806 l_0_12_39)))
 (let ((?x3505 (* 2.0 l_0_12_35)))
 (let ((?x23008 (* ?x3505 l_0_12_38)))
 (let ((?x17424 (* 2.0 l_0_12_34)))
 (let ((?x23006 (* ?x17424 l_0_12_37)))
 (let ((?x22887 (* 2.0 l_0_12_21)))
 (let ((?x23004 (* ?x22887 l_0_12_24)))
 (let ((?x22882 (* 2.0 l_0_12_20)))
 (let ((?x23002 (* ?x22882 l_0_12_23)))
 (let ((?x23009 (+ (+ (- (- (* (* (- 2.0) l_0_12_19) l_0_12_22) ?x23002) ?x23004) ?x23006) ?x23008)))
 (= (+ ?x23009 ?x23010) 0.0)))))))))))))
(assert
 (let ((?x22806 (* 2.0 l_0_12_36)))
 (let ((?x23018 (* ?x22806 l_0_12_43)))
 (let ((?x3505 (* 2.0 l_0_12_35)))
 (let ((?x3872 (* ?x3505 l_0_12_42)))
 (let ((?x17424 (* 2.0 l_0_12_34)))
 (let ((?x12391 (* ?x17424 l_0_12_41)))
 (let ((?x22887 (* 2.0 l_0_12_21)))
 (let ((?x17695 (* ?x22887 l_0_12_28)))
 (let ((?x22882 (* 2.0 l_0_12_20)))
 (let ((?x12066 (* ?x22882 l_0_12_27)))
 (let ((?x12355 (+ (+ (- (- (* (* (- 2.0) l_0_12_19) l_0_12_26) ?x12066) ?x17695) ?x12391) ?x3872)))
 (= (+ ?x12355 ?x23018) 0.0)))))))))))))
(assert
 (let ((?x11632 (* l_0_12_40 l_0_12_40)))
 (let ((?x2509 (* l_0_12_39 l_0_12_39)))
 (let ((?x2501 (* l_0_12_38 l_0_12_38)))
 (let ((?x17005 (* l_0_12_37 l_0_12_37)))
 (let ((?x22357 (* l_0_12_25 l_0_12_25)))
 (let ((?x22354 (* l_0_12_24 l_0_12_24)))
 (let ((?x23028 (- (- (* (- l_0_12_22) l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x22354)))
 (= (+ (+ (+ (+ (- ?x23028 ?x22357) ?x17005) ?x2501) ?x2509) ?x11632) 0.0)))))))))
(assert
 (let ((?x23073 (* 2.0 l_0_12_40)))
 (let ((?x23074 (* ?x23073 l_0_12_44)))
 (let ((?x23070 (* 2.0 l_0_12_39)))
 (let ((?x23071 (* ?x23070 l_0_12_43)))
 (let ((?x23067 (* 2.0 l_0_12_38)))
 (let ((?x23068 (* ?x23067 l_0_12_42)))
 (let ((?x23064 (* 2.0 l_0_12_37)))
 (let ((?x23065 (* ?x23064 l_0_12_41)))
 (let ((?x23061 (* 2.0 l_0_12_25)))
 (let ((?x23062 (* ?x23061 l_0_12_29)))
 (let ((?x23058 (* 2.0 l_0_12_24)))
 (let ((?x23059 (* ?x23058 l_0_12_28)))
 (let ((?x23055 (* 2.0 l_0_12_23)))
 (let ((?x23056 (* ?x23055 l_0_12_27)))
 (let ((?x23066 (+ (- (- (- (* (* (- 2.0) l_0_12_22) l_0_12_26) ?x23056) ?x23059) ?x23062) ?x23065)))
 (= (+ (+ (+ ?x23066 ?x23068) ?x23071) ?x23074) 0.0)))))))))))))))))
(assert
 (let ((?x11225 (* l_0_12_45 l_0_12_45)))
 (let ((?x11817 (* l_0_12_44 l_0_12_44)))
 (let ((?x2943 (* l_0_12_43 l_0_12_43)))
 (let ((?x2934 (* l_0_12_42 l_0_12_42)))
 (let ((?x2904 (* l_0_12_41 l_0_12_41)))
 (let ((?x22211 (* l_0_12_36 l_0_12_36)))
 (let ((?x16821 (* l_0_12_35 l_0_12_35)))
 (let ((?x11346 (* l_0_12_34 l_0_12_34)))
 (let ((?x22474 (* l_0_12_30 l_0_12_30)))
 (let ((?x22471 (* l_0_12_29 l_0_12_29)))
 (let ((?x22468 (* l_0_12_28 l_0_12_28)))
 (let ((?x22465 (* l_0_12_27 l_0_12_27)))
 (let ((?x22462 (* l_0_12_26 l_0_12_26)))
 (let ((?x22174 (* l_0_12_21 l_0_12_21)))
 (let ((?x23087 (- (+ (+ (* l_0_12_19 l_0_12_19) (* l_0_12_20 l_0_12_20)) ?x22174) ?x22462)))
 (let ((?x23101 (- (- (- (- (- (- (- ?x23087 ?x22465) ?x22468) ?x22471) ?x22474) ?x11346) ?x16821) ?x22211)))
 (= (+ (+ (+ (+ (+ ?x23101 ?x2904) ?x2934) ?x2943) ?x11817) ?x11225) 0.0))))))))))))))))))
(assert
 (let ((?x22189 (* 4.0 l_0_12_36)))
 (let ((?x22898 (* ?x22189 l_0_12_43)))
 (let ((?x22186 (* 4.0 l_0_12_35)))
 (let ((?x22895 (* ?x22186 l_0_12_42)))
 (let ((?x22183 (* 4.0 l_0_12_34)))
 (let ((?x22892 (* ?x22183 l_0_12_41)))
 (let ((?x21736 (* 2.0 l_0_12_31)))
 (let ((?x17460 (* ?x21736 l_0_12_34)))
 (let ((?x22836 (* 4.0 l_0_12_21)))
 (let ((?x22885 (* ?x22836 l_0_12_28)))
 (let ((?x22832 (* 4.0 l_0_12_20)))
 (let ((?x22880 (* ?x22832 l_0_12_27)))
 (let ((?x22828 (* 4.0 l_0_12_19)))
 (let ((?x22875 (* ?x22828 l_0_12_26)))
 (let ((?x23122 (+ (- (- (- (* (* 2.0 l_0_12_16) l_0_12_19) ?x22875) ?x22880) ?x22885) (* 2.0 (* l_0_12_26 l_0_12_26)))))
 (let ((?x23126 (+ (+ ?x23122 (* 2.0 (* l_0_12_27 l_0_12_27))) (* 2.0 (* l_0_12_28 l_0_12_28)))))
 (let ((?x23130 (+ (+ ?x23126 (* 2.0 (* l_0_12_29 l_0_12_29))) (* 2.0 (* l_0_12_30 l_0_12_30)))))
 (let ((?x23137 (- (+ (+ (+ (- ?x23130 ?x17460) ?x22892) ?x22895) ?x22898) (* (* 2.0 l_0_12_41) l_0_12_41))))
 (let ((?x23143 (- (- ?x23137 (* (* 2.0 l_0_12_42) l_0_12_42)) (* (* 2.0 l_0_12_43) l_0_12_43))))
 (let ((?x23149 (- (- ?x23143 (* (* 2.0 l_0_12_44) l_0_12_44)) (* (* 2.0 l_0_12_45) l_0_12_45))))
 (= ?x23149 0.0))))))))))))))))))))))
(assert
 (let ((?x22493 (* (* 4.0 l_0_12_45) l_0_12_45)))
 (let ((?x22490 (* (* 4.0 l_0_12_44) l_0_12_44)))
 (let ((?x22487 (* (* 4.0 l_0_12_43) l_0_12_43)))
 (let ((?x22484 (* (* 4.0 l_0_12_42) l_0_12_42)))
 (let ((?x22481 (* (* 4.0 l_0_12_41) l_0_12_41)))
 (let ((?x22371 (* 4.0 l_0_12_40)))
 (let ((?x23210 (* ?x22371 l_0_12_44)))
 (let ((?x22368 (* 4.0 l_0_12_39)))
 (let ((?x23208 (* ?x22368 l_0_12_43)))
 (let ((?x22365 (* 4.0 l_0_12_38)))
 (let ((?x23206 (* ?x22365 l_0_12_42)))
 (let ((?x22362 (* 4.0 l_0_12_37)))
 (let ((?x23204 (* ?x22362 l_0_12_41)))
 (let ((?x21736 (* 2.0 l_0_12_31)))
 (let ((?x22840 (* ?x21736 l_0_12_37)))
 (let ((?x22474 (* l_0_12_30 l_0_12_30)))
 (let ((?x22475 (* 4.0 ?x22474)))
 (let ((?x22471 (* l_0_12_29 l_0_12_29)))
 (let ((?x22472 (* 4.0 ?x22471)))
 (let ((?x22468 (* l_0_12_28 l_0_12_28)))
 (let ((?x22469 (* 4.0 ?x22468)))
 (let ((?x22465 (* l_0_12_27 l_0_12_27)))
 (let ((?x22466 (* 4.0 ?x22465)))
 (let ((?x22462 (* l_0_12_26 l_0_12_26)))
 (let ((?x22463 (* 4.0 ?x22462)))
 (let ((?x23196 (* (* 4.0 l_0_12_25) l_0_12_29)))
 (let ((?x23193 (* (* 4.0 l_0_12_24) l_0_12_28)))
 (let ((?x23190 (* (* 4.0 l_0_12_23) l_0_12_27)))
 (let ((?x23187 (* (* 4.0 l_0_12_22) l_0_12_26)))
 (let ((?x23197 (- (- (- (- (* (* 2.0 l_0_12_16) l_0_12_22) ?x23187) ?x23190) ?x23193) ?x23196)))
 (let ((?x23205 (+ (- (+ (+ (+ (+ (+ ?x23197 ?x22463) ?x22466) ?x22469) ?x22472) ?x22475) ?x22840) ?x23204)))
 (let ((?x23215 (- (- (- (- (+ (+ (+ ?x23205 ?x23206) ?x23208) ?x23210) ?x22481) ?x22484) ?x22487) ?x22490)))
 (= (- ?x23215 ?x22493) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11225 (* l_0_12_45 l_0_12_45)))
 (let ((?x12516 (* 2.0 ?x11225)))
 (let ((?x11817 (* l_0_12_44 l_0_12_44)))
 (let ((?x17795 (* 2.0 ?x11817)))
 (let ((?x2943 (* l_0_12_43 l_0_12_43)))
 (let ((?x23172 (* 2.0 ?x2943)))
 (let ((?x2934 (* l_0_12_42 l_0_12_42)))
 (let ((?x12464 (* 2.0 ?x2934)))
 (let ((?x2904 (* l_0_12_41 l_0_12_41)))
 (let ((?x23166 (* 2.0 ?x2904)))
 (let ((?x21736 (* 2.0 l_0_12_31)))
 (let ((?x22890 (* ?x21736 l_0_12_41)))
 (let ((?x17803 (- (* (* 2.0 l_0_12_16) l_0_12_26) (* (* 2.0 l_0_12_26) l_0_12_26))))
 (let ((?x23239 (- (- ?x17803 (* (* 2.0 l_0_12_27) l_0_12_27)) (* (* 2.0 l_0_12_28) l_0_12_28))))
 (let ((?x23245 (- (- ?x23239 (* (* 2.0 l_0_12_29) l_0_12_29)) (* (* 2.0 l_0_12_30) l_0_12_30))))
 (= (+ (+ (+ (+ (+ (- ?x23245 ?x22890) ?x23166) ?x12464) ?x23172) ?x17795) ?x12516) 0.0)))))))))))))))))
(assert
 (let ((?x16666 (* l_0_12_33 l_0_12_33)))
 (let ((?x11226 (* l_0_12_32 l_0_12_32)))
 (let ((?x4181 (- (- (+ (* l_0_12_17 l_0_12_17) (* l_0_12_18 l_0_12_18)) ?x11226) ?x16666)))
 (= ?x4181 0.0)))))
(assert
 (let ((?x22081 (* 2.0 l_0_12_33)))
 (let ((?x22940 (* ?x22081 l_0_12_35)))
 (let ((?x22075 (* 2.0 l_0_12_32)))
 (let ((?x22938 (* ?x22075 l_0_12_34)))
 (let ((?x22129 (* 2.0 l_0_12_18)))
 (let ((?x22936 (* ?x22129 l_0_12_20)))
 (= (- (- (+ (* (* 2.0 l_0_12_17) l_0_12_19) ?x22936) ?x22938) ?x22940) 0.0))))))))
(assert
 (let ((?x22081 (* 2.0 l_0_12_33)))
 (let ((?x22955 (* ?x22081 l_0_12_38)))
 (let ((?x22075 (* 2.0 l_0_12_32)))
 (let ((?x22953 (* ?x22075 l_0_12_37)))
 (let ((?x22129 (* 2.0 l_0_12_18)))
 (let ((?x22951 (* ?x22129 l_0_12_23)))
 (= (- (- (+ (* (* 2.0 l_0_12_17) l_0_12_22) ?x22951) ?x22953) ?x22955) 0.0))))))))
(assert
 (let ((?x22081 (* 2.0 l_0_12_33)))
 (let ((?x22970 (* ?x22081 l_0_12_42)))
 (let ((?x22075 (* 2.0 l_0_12_32)))
 (let ((?x22968 (* ?x22075 l_0_12_41)))
 (let ((?x22129 (* 2.0 l_0_12_18)))
 (let ((?x22966 (* ?x22129 l_0_12_27)))
 (= (- (- (+ (* (* 2.0 l_0_12_17) l_0_12_26) ?x22966) ?x22968) ?x22970) 0.0))))))))
(assert
 (let ((?x22806 (* 2.0 l_0_12_36)))
 (let ((?x23010 (* ?x22806 l_0_12_39)))
 (let ((?x3505 (* 2.0 l_0_12_35)))
 (let ((?x23008 (* ?x3505 l_0_12_38)))
 (let ((?x17424 (* 2.0 l_0_12_34)))
 (let ((?x23006 (* ?x17424 l_0_12_37)))
 (let ((?x22887 (* 2.0 l_0_12_21)))
 (let ((?x23004 (* ?x22887 l_0_12_24)))
 (let ((?x22882 (* 2.0 l_0_12_20)))
 (let ((?x23002 (* ?x22882 l_0_12_23)))
 (let ((?x23284 (- (- (+ (+ (* (* 2.0 l_0_12_19) l_0_12_22) ?x23002) ?x23004) ?x23006) ?x23008)))
 (= (- ?x23284 ?x23010) 0.0)))))))))))))
(assert
 (let ((?x22806 (* 2.0 l_0_12_36)))
 (let ((?x23018 (* ?x22806 l_0_12_43)))
 (let ((?x3505 (* 2.0 l_0_12_35)))
 (let ((?x3872 (* ?x3505 l_0_12_42)))
 (let ((?x17424 (* 2.0 l_0_12_34)))
 (let ((?x12391 (* ?x17424 l_0_12_41)))
 (let ((?x22887 (* 2.0 l_0_12_21)))
 (let ((?x17695 (* ?x22887 l_0_12_28)))
 (let ((?x22882 (* 2.0 l_0_12_20)))
 (let ((?x12066 (* ?x22882 l_0_12_27)))
 (let ((?x4294 (- (- (+ (+ (* (* 2.0 l_0_12_19) l_0_12_26) ?x12066) ?x17695) ?x12391) ?x3872)))
 (= (- ?x4294 ?x23018) 0.0)))))))))))))
(assert
 (let ((?x11632 (* l_0_12_40 l_0_12_40)))
 (let ((?x2509 (* l_0_12_39 l_0_12_39)))
 (let ((?x2501 (* l_0_12_38 l_0_12_38)))
 (let ((?x17005 (* l_0_12_37 l_0_12_37)))
 (let ((?x22357 (* l_0_12_25 l_0_12_25)))
 (let ((?x22354 (* l_0_12_24 l_0_12_24)))
 (let ((?x17895 (+ (+ (+ (* l_0_12_22 l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x22354) ?x22357)))
 (= (- (- (- (- ?x17895 ?x17005) ?x2501) ?x2509) ?x11632) 0.0)))))))))
(assert
 (let ((?x23073 (* 2.0 l_0_12_40)))
 (let ((?x23074 (* ?x23073 l_0_12_44)))
 (let ((?x23070 (* 2.0 l_0_12_39)))
 (let ((?x23071 (* ?x23070 l_0_12_43)))
 (let ((?x23067 (* 2.0 l_0_12_38)))
 (let ((?x23068 (* ?x23067 l_0_12_42)))
 (let ((?x23064 (* 2.0 l_0_12_37)))
 (let ((?x23065 (* ?x23064 l_0_12_41)))
 (let ((?x23061 (* 2.0 l_0_12_25)))
 (let ((?x23062 (* ?x23061 l_0_12_29)))
 (let ((?x23058 (* 2.0 l_0_12_24)))
 (let ((?x23059 (* ?x23058 l_0_12_28)))
 (let ((?x23055 (* 2.0 l_0_12_23)))
 (let ((?x23056 (* ?x23055 l_0_12_27)))
 (let ((?x23317 (- (+ (+ (+ (* (* 2.0 l_0_12_22) l_0_12_26) ?x23056) ?x23059) ?x23062) ?x23065)))
 (= (- (- (- ?x23317 ?x23068) ?x23071) ?x23074) 0.0)))))))))))))))))
(assert
 (let ((?x11225 (* l_0_12_45 l_0_12_45)))
 (let ((?x11817 (* l_0_12_44 l_0_12_44)))
 (let ((?x2943 (* l_0_12_43 l_0_12_43)))
 (let ((?x2934 (* l_0_12_42 l_0_12_42)))
 (let ((?x2904 (* l_0_12_41 l_0_12_41)))
 (let ((?x22474 (* l_0_12_30 l_0_12_30)))
 (let ((?x22471 (* l_0_12_29 l_0_12_29)))
 (let ((?x22468 (* l_0_12_28 l_0_12_28)))
 (let ((?x4333 (+ (+ (+ (* l_0_12_26 l_0_12_26) (* l_0_12_27 l_0_12_27)) ?x22468) ?x22471)))
 (= (- (- (- (- (- (+ ?x4333 ?x22474) ?x2904) ?x2934) ?x2943) ?x11817) ?x11225) 0.0)))))))))))
(assert
 (let ((?x22249 (* 8.0 l_0_12_36)))
 (let ((?x22250 (* ?x22249 l_0_12_39)))
 (let ((?x22246 (* 8.0 l_0_12_35)))
 (let ((?x22247 (* ?x22246 l_0_12_38)))
 (let ((?x22243 (* 8.0 l_0_12_34)))
 (let ((?x22244 (* ?x22243 l_0_12_37)))
 (let ((?x22234 (* 8.0 l_0_12_21)))
 (let ((?x22235 (* ?x22234 l_0_12_24)))
 (let ((?x22231 (* 8.0 l_0_12_20)))
 (let ((?x22232 (* ?x22231 l_0_12_23)))
 (let ((?x22228 (* 8.0 l_0_12_19)))
 (let ((?x22229 (* ?x22228 l_0_12_22)))
 (let ((?x23352 (+ (+ (+ (+ ?x22229 ?x22232) ?x22235) (* 2.0 (* l_0_12_22 l_0_12_22))) (* 2.0 (* l_0_12_23 l_0_12_23)))))
 (let ((?x23356 (+ (+ ?x23352 (* 2.0 (* l_0_12_24 l_0_12_24))) (* 2.0 (* l_0_12_25 l_0_12_25)))))
 (let ((?x23361 (- (- (- (- ?x23356 ?x22244) ?x22247) ?x22250) (* (* 2.0 l_0_12_37) l_0_12_37))))
 (let ((?x23365 (- (- ?x23361 (* (* 2.0 l_0_12_38) l_0_12_38)) (* (* 2.0 l_0_12_39) l_0_12_39))))
 (= (- ?x23365 (* (* 2.0 l_0_12_40) l_0_12_40)) 0.0))))))))))))))))))
(assert
 (let ((?x22371 (* 4.0 l_0_12_40)))
 (let ((?x23210 (* ?x22371 l_0_12_44)))
 (let ((?x22368 (* 4.0 l_0_12_39)))
 (let ((?x23208 (* ?x22368 l_0_12_43)))
 (let ((?x22365 (* 4.0 l_0_12_38)))
 (let ((?x23206 (* ?x22365 l_0_12_42)))
 (let ((?x22362 (* 4.0 l_0_12_37)))
 (let ((?x23204 (* ?x22362 l_0_12_41)))
 (let ((?x22249 (* 8.0 l_0_12_36)))
 (let ((?x22316 (* ?x22249 l_0_12_43)))
 (let ((?x22189 (* 4.0 l_0_12_36)))
 (let ((?x22848 (* ?x22189 l_0_12_39)))
 (let ((?x22246 (* 8.0 l_0_12_35)))
 (let ((?x22314 (* ?x22246 l_0_12_42)))
 (let ((?x22186 (* 4.0 l_0_12_35)))
 (let ((?x22845 (* ?x22186 l_0_12_38)))
 (let ((?x22243 (* 8.0 l_0_12_34)))
 (let ((?x22312 (* ?x22243 l_0_12_41)))
 (let ((?x22183 (* 4.0 l_0_12_34)))
 (let ((?x22842 (* ?x22183 l_0_12_37)))
 (let ((?x23196 (* (* 4.0 l_0_12_25) l_0_12_29)))
 (let ((?x23193 (* (* 4.0 l_0_12_24) l_0_12_28)))
 (let ((?x23190 (* (* 4.0 l_0_12_23) l_0_12_27)))
 (let ((?x23187 (* (* 4.0 l_0_12_22) l_0_12_26)))
 (let ((?x22234 (* 8.0 l_0_12_21)))
 (let ((?x22304 (* ?x22234 l_0_12_28)))
 (let ((?x22836 (* 4.0 l_0_12_21)))
 (let ((?x22837 (* ?x22836 l_0_12_24)))
 (let ((?x22231 (* 8.0 l_0_12_20)))
 (let ((?x22302 (* ?x22231 l_0_12_27)))
 (let ((?x22832 (* 4.0 l_0_12_20)))
 (let ((?x22833 (* ?x22832 l_0_12_23)))
 (let ((?x22228 (* 8.0 l_0_12_19)))
 (let ((?x22300 (* ?x22228 l_0_12_26)))
 (let ((?x23391 (- (+ (- (+ (* (* (- 4.0) l_0_12_19) l_0_12_22) ?x22300) ?x22833) ?x22302) ?x22837)))
 (let ((?x23398 (- (+ (+ (+ (+ (+ (+ ?x23391 ?x22304) ?x23187) ?x23190) ?x23193) ?x23196) ?x22842) ?x22312)))
 (let ((?x23405 (- (- (- (- (+ (- (+ ?x23398 ?x22845) ?x22314) ?x22848) ?x22316) ?x23204) ?x23206) ?x23208)))
 (= (- ?x23405 ?x23210) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11632 (* l_0_12_40 l_0_12_40)))
 (let ((?x12606 (* 2.0 ?x11632)))
 (let ((?x22440 (* (* 8.0 l_0_12_40) l_0_12_44)))
 (let ((?x2509 (* l_0_12_39 l_0_12_39)))
 (let ((?x12604 (* 2.0 ?x2509)))
 (let ((?x22437 (* (* 8.0 l_0_12_39) l_0_12_43)))
 (let ((?x2501 (* l_0_12_38 l_0_12_38)))
 (let ((?x17906 (* 2.0 ?x2501)))
 (let ((?x22434 (* (* 8.0 l_0_12_38) l_0_12_42)))
 (let ((?x17005 (* l_0_12_37 l_0_12_37)))
 (let ((?x17904 (* 2.0 ?x17005)))
 (let ((?x22431 (* (* 8.0 l_0_12_37) l_0_12_41)))
 (let ((?x22424 (* (* 8.0 l_0_12_25) l_0_12_29)))
 (let ((?x22421 (* (* 8.0 l_0_12_24) l_0_12_28)))
 (let ((?x22418 (* (* 8.0 l_0_12_23) l_0_12_27)))
 (let ((?x22415 (* (* 8.0 l_0_12_22) l_0_12_26)))
 (let ((?x23416 (- (+ (- ?x22415 (* (* 2.0 l_0_12_22) l_0_12_22)) ?x22418) (* (* 2.0 l_0_12_23) l_0_12_23))))
 (let ((?x23422 (- (+ (- (+ ?x23416 ?x22421) (* (* 2.0 l_0_12_24) l_0_12_24)) ?x22424) (* (* 2.0 l_0_12_25) l_0_12_25))))
 (let ((?x23429 (- (+ (- (+ (- (+ (- ?x23422 ?x22431) ?x17904) ?x22434) ?x17906) ?x22437) ?x12604) ?x22440)))
 (= (+ ?x23429 ?x12606) 0.0)))))))))))))))))))))
(assert
 (let ((?x22371 (* 4.0 l_0_12_40)))
 (let ((?x22372 (* ?x22371 l_0_12_40)))
 (let ((?x22368 (* 4.0 l_0_12_39)))
 (let ((?x22369 (* ?x22368 l_0_12_39)))
 (let ((?x22365 (* 4.0 l_0_12_38)))
 (let ((?x22366 (* ?x22365 l_0_12_38)))
 (let ((?x22362 (* 4.0 l_0_12_37)))
 (let ((?x22363 (* ?x22362 l_0_12_37)))
 (let ((?x22357 (* l_0_12_25 l_0_12_25)))
 (let ((?x22358 (* 4.0 ?x22357)))
 (let ((?x22354 (* l_0_12_24 l_0_12_24)))
 (let ((?x22355 (* 4.0 ?x22354)))
 (let ((?x22351 (* l_0_12_23 l_0_12_23)))
 (let ((?x22352 (* 4.0 ?x22351)))
 (let ((?x22348 (* l_0_12_22 l_0_12_22)))
 (let ((?x22349 (* 4.0 ?x22348)))
 (let ((?x4482 (- (- (- (- (+ (+ (+ ?x22349 ?x22352) ?x22355) ?x22358) ?x22363) ?x22366) ?x22369) ?x22372)))
 (= ?x4482 0.0)))))))))))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_16 0.0))
(assert
 (>= l_0_12_18 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_25 0.0))
(assert
 (>= l_0_12_30 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_33 0.0))
(assert
 (>= l_0_12_36 0.0))
(assert
 (>= l_0_12_40 0.0))
(assert
 (>= l_0_12_45 0.0))
(assert
 (>= l_0_12_46 0.0))
(assert
 (>= l_0_12_48 0.0))
(assert
 (>= l_0_12_51 0.0))
(assert
 (>= l_0_12_55 0.0))
(assert
 (>= l_0_12_60 0.0))
(assert
 (>= l_0_12_61 0.0))
(assert
 (>= l_0_12_63 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_70 0.0))
(assert
 (>= l_0_12_75 0.0))
(assert
 (>= l_0_12_76 0.0))
(assert
 (>= l_0_12_78 0.0))
(assert
 (>= l_0_12_81 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_91 0.0))
(assert
 (>= l_0_12_93 0.0))
(assert
 (>= l_0_12_96 0.0))
(assert
 (>= l_0_12_100 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (let ((?x23473 (* 4.0 l_0_13_31)))
 (let ((?x23474 (* ?x23473 l_0_13_31)))
 (let ((?x23470 (* l_0_13_16 l_0_13_16)))
 (let ((?x23471 (* 4.0 ?x23470)))
 (let ((?x23472 (+ (- (* (* 2.0 l_0_13_1) l_0_13_2) (* l_0_13_1 l_0_13_1)) ?x23471)))
 (= (+ (- (- ?x23472 ?x23474) (* (* 2.0 l_0_13_61) l_0_13_62)) 1.0) 0.0)))))))
(assert
 (let ((?x23500 (- (- (* 1.0 (* l_0_13_1 l_0_13_1)) (* l_0_13_61 l_0_13_61)) 1.0)))
 (= ?x23500 0.0)))
(assert
 (let ((?x23523 (* l_0_13_63 l_0_13_63)))
 (let ((?x23521 (* l_0_13_62 l_0_13_62)))
 (let ((?x23518 (* 8.0 l_0_13_31)))
 (let ((?x23519 (* ?x23518 l_0_13_32)))
 (let ((?x23509 (* 8.0 l_0_13_16)))
 (let ((?x23510 (* ?x23509 l_0_13_17)))
 (let ((?x23514 (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_2) ?x23510) (* 1.0 (* l_0_13_2 l_0_13_2)))))
 (let ((?x23524 (- (- (- (+ ?x23514 (* 1.0 (* l_0_13_3 l_0_13_3))) ?x23519) ?x23521) ?x23523)))
 (= ?x23524 0.0))))))))))
(assert
 (let ((?x23518 (* 8.0 l_0_13_31)))
 (let ((?x23541 (* ?x23518 l_0_13_34)))
 (let ((?x23473 (* 4.0 l_0_13_31)))
 (let ((?x23539 (* ?x23473 l_0_13_32)))
 (let ((?x23536 (* 2.0 l_0_13_3)))
 (let ((?x23537 (* ?x23536 l_0_13_5)))
 (let ((?x17999 (* 2.0 l_0_13_2)))
 (let ((?x18000 (* ?x17999 l_0_13_4)))
 (let ((?x23509 (* 8.0 l_0_13_16)))
 (let ((?x4647 (* ?x23509 l_0_13_19)))
 (let ((?x17009 (* 4.0 l_0_13_16)))
 (let ((?x17011 (* ?x17009 l_0_13_17)))
 (let ((?x23538 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_4) ?x17011) ?x4647) ?x18000) ?x23537)))
 (let ((?x23548 (- (- (- (- ?x23538 ?x23539) ?x23541) (* (* 2.0 l_0_13_62) l_0_13_64)) (* (* 2.0 l_0_13_63) l_0_13_65))))
 (= ?x23548 0.0))))))))))))))))
(assert
 (let ((?x23518 (* 8.0 l_0_13_31)))
 (let ((?x23587 (* ?x23518 l_0_13_37)))
 (let ((?x23519 (* ?x23518 l_0_13_32)))
 (let ((?x23536 (* 2.0 l_0_13_3)))
 (let ((?x23584 (* ?x23536 l_0_13_8)))
 (let ((?x17999 (* 2.0 l_0_13_2)))
 (let ((?x23582 (* ?x17999 l_0_13_7)))
 (let ((?x23509 (* 8.0 l_0_13_16)))
 (let ((?x23580 (* ?x23509 l_0_13_22)))
 (let ((?x23581 (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_7) (* ?x23509 l_0_13_17)) ?x23580)))
 (let ((?x23591 (+ (- (- (+ (+ ?x23581 ?x23582) ?x23584) ?x23519) ?x23587) (* (* 2.0 l_0_13_46) l_0_13_47))))
 (let ((?x23595 (- (- ?x23591 (* (* 2.0 l_0_13_62) l_0_13_67)) (* (* 2.0 l_0_13_63) l_0_13_68))))
 (= ?x23595 0.0))))))))))))))
(assert
 (let ((?x23518 (* 8.0 l_0_13_31)))
 (let ((?x23621 (* ?x23518 l_0_13_41)))
 (let ((?x23473 (* 4.0 l_0_13_31)))
 (let ((?x23539 (* ?x23473 l_0_13_32)))
 (let ((?x23509 (* 8.0 l_0_13_16)))
 (let ((?x23618 (* ?x23509 l_0_13_26)))
 (let ((?x17009 (* 4.0 l_0_13_16)))
 (let ((?x17011 (* ?x17009 l_0_13_17)))
 (let ((?x4690 (* 2.0 l_0_13_12)))
 (let ((?x18018 (* ?x4690 l_0_13_3)))
 (let ((?x4740 (+ (* (* (- 2.0) l_0_13_1) l_0_13_11) (* (* 2.0 l_0_13_11) l_0_13_2))))
 (let ((?x23624 (- (- (+ (+ (- (+ ?x4740 ?x18018) ?x17011) ?x23618) ?x23539) ?x23621) (* (* 2.0 l_0_13_62) l_0_13_71))))
 (= (- ?x23624 (* (* 2.0 l_0_13_63) l_0_13_72)) 0.0))))))))))))))
(assert
 (let ((?x23657 (* 4.0 l_0_13_33)))
 (let ((?x23658 (* ?x23657 l_0_13_33)))
 (let ((?x23654 (* 4.0 l_0_13_32)))
 (let ((?x23655 (* ?x23654 l_0_13_32)))
 (let ((?x23515 (* l_0_13_3 l_0_13_3)))
 (let ((?x23512 (* l_0_13_2 l_0_13_2)))
 (let ((?x23649 (* l_0_13_18 l_0_13_18)))
 (let ((?x23650 (* 4.0 ?x23649)))
 (let ((?x23647 (* l_0_13_17 l_0_13_17)))
 (let ((?x23648 (* 4.0 ?x23647)))
 (= (- (- (- (- (+ ?x23648 ?x23650) ?x23512) ?x23515) ?x23655) ?x23658) 0.0))))))))))))
(assert
 (let ((?x23680 (* 8.0 l_0_13_33)))
 (let ((?x23681 (* ?x23680 l_0_13_35)))
 (let ((?x23674 (* 8.0 l_0_13_32)))
 (let ((?x23675 (* ?x23674 l_0_13_34)))
 (let ((?x23536 (* 2.0 l_0_13_3)))
 (let ((?x23537 (* ?x23536 l_0_13_5)))
 (let ((?x17999 (* 2.0 l_0_13_2)))
 (let ((?x18000 (* ?x17999 l_0_13_4)))
 (let ((?x23667 (* 8.0 l_0_13_18)))
 (let ((?x23668 (* ?x23667 l_0_13_20)))
 (let ((?x23663 (* 8.0 l_0_13_17)))
 (let ((?x23664 (* ?x23663 l_0_13_19)))
 (let ((?x23671 (+ (+ (+ ?x23664 (* 2.0 (* l_0_13_17 l_0_13_17))) ?x23668) (* 2.0 (* l_0_13_18 l_0_13_18)))))
 (let ((?x23679 (- (- (- (- ?x23671 ?x18000) ?x23537) ?x23675) (* (* 2.0 l_0_13_32) l_0_13_32))))
 (= (- (- ?x23679 ?x23681) (* (* 2.0 l_0_13_33) l_0_13_33)) 0.0))))))))))))))))
(assert
 (let ((?x23718 (* l_0_13_48 l_0_13_48)))
 (let ((?x23716 (* l_0_13_47 l_0_13_47)))
 (let ((?x23657 (* 4.0 l_0_13_33)))
 (let ((?x23658 (* ?x23657 l_0_13_33)))
 (let ((?x23680 (* 8.0 l_0_13_33)))
 (let ((?x23713 (* ?x23680 l_0_13_38)))
 (let ((?x23654 (* 4.0 l_0_13_32)))
 (let ((?x23655 (* ?x23654 l_0_13_32)))
 (let ((?x23674 (* 8.0 l_0_13_32)))
 (let ((?x23710 (* ?x23674 l_0_13_37)))
 (let ((?x23536 (* 2.0 l_0_13_3)))
 (let ((?x23584 (* ?x23536 l_0_13_8)))
 (let ((?x17999 (* 2.0 l_0_13_2)))
 (let ((?x23582 (* ?x17999 l_0_13_7)))
 (let ((?x23649 (* l_0_13_18 l_0_13_18)))
 (let ((?x23650 (* 4.0 ?x23649)))
 (let ((?x23667 (* 8.0 l_0_13_18)))
 (let ((?x23705 (* ?x23667 l_0_13_23)))
 (let ((?x23647 (* l_0_13_17 l_0_13_17)))
 (let ((?x23648 (* 4.0 ?x23647)))
 (let ((?x23663 (* 8.0 l_0_13_17)))
 (let ((?x23703 (* ?x23663 l_0_13_22)))
 (let ((?x23712 (- (- (- (- (+ (+ (+ ?x23703 ?x23648) ?x23705) ?x23650) ?x23582) ?x23584) ?x23710) ?x23655)))
 (= (+ (+ (- (- ?x23712 ?x23713) ?x23658) ?x23716) ?x23718) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x4942 (* l_0_13_33 l_0_13_33)))
 (let ((?x18235 (* 2.0 ?x4942)))
 (let ((?x23680 (* 8.0 l_0_13_33)))
 (let ((?x23741 (* ?x23680 l_0_13_42)))
 (let ((?x12773 (* l_0_13_32 l_0_13_32)))
 (let ((?x18232 (* 2.0 ?x12773)))
 (let ((?x23674 (* 8.0 l_0_13_32)))
 (let ((?x23738 (* ?x23674 l_0_13_41)))
 (let ((?x23667 (* 8.0 l_0_13_18)))
 (let ((?x23733 (* ?x23667 l_0_13_27)))
 (let ((?x23663 (* 8.0 l_0_13_17)))
 (let ((?x23728 (* ?x23663 l_0_13_26)))
 (let ((?x4690 (* 2.0 l_0_13_12)))
 (let ((?x18018 (* ?x4690 l_0_13_3)))
 (let ((?x23732 (- (+ (- (* (* (- 2.0) l_0_13_11) l_0_13_2) ?x18018) ?x23728) (* (* 2.0 l_0_13_17) l_0_13_17))))
 (let ((?x23740 (+ (- (- (+ ?x23732 ?x23733) (* (* 2.0 l_0_13_18) l_0_13_18)) ?x23738) ?x18232)))
 (= (+ (- ?x23740 ?x23741) ?x18235) 0.0))))))))))))))))))
(assert
 (let ((?x23801 (* l_0_13_6 l_0_13_6)))
 (let ((?x23799 (* l_0_13_5 l_0_13_5)))
 (let ((?x23797 (* l_0_13_4 l_0_13_4)))
 (let ((?x23794 (* 4.0 l_0_13_36)))
 (let ((?x23795 (* ?x23794 l_0_13_36)))
 (let ((?x23791 (* 4.0 l_0_13_35)))
 (let ((?x23792 (* ?x23791 l_0_13_35)))
 (let ((?x23788 (* 4.0 l_0_13_34)))
 (let ((?x23789 (* ?x23788 l_0_13_34)))
 (let ((?x23657 (* 4.0 l_0_13_33)))
 (let ((?x23786 (* ?x23657 l_0_13_35)))
 (let ((?x23654 (* 4.0 l_0_13_32)))
 (let ((?x23784 (* ?x23654 l_0_13_34)))
 (let ((?x23781 (* 2.0 l_0_13_31)))
 (let ((?x23782 (* ?x23781 l_0_13_32)))
 (let ((?x23778 (* l_0_13_21 l_0_13_21)))
 (let ((?x23779 (* 4.0 ?x23778)))
 (let ((?x23775 (* l_0_13_20 l_0_13_20)))
 (let ((?x23776 (* 4.0 ?x23775)))
 (let ((?x23772 (* l_0_13_19 l_0_13_19)))
 (let ((?x23773 (* 4.0 ?x23772)))
 (let ((?x23769 (* 4.0 l_0_13_18)))
 (let ((?x23770 (* ?x23769 l_0_13_20)))
 (let ((?x23766 (* 4.0 l_0_13_17)))
 (let ((?x23767 (* ?x23766 l_0_13_19)))
 (let ((?x23777 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_16) l_0_13_17) ?x23767) ?x23770) ?x23773) ?x23776)))
 (let ((?x23796 (- (- (- (- (- (+ (+ ?x23777 ?x23779) ?x23782) ?x23784) ?x23786) ?x23789) ?x23792) ?x23795)))
 (= (- (- (- ?x23796 ?x23797) ?x23799) ?x23801) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x23879 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x23876 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x23867 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x23863 (* 8.0 l_0_13_36)))
 (let ((?x23864 (* ?x23863 l_0_13_39)))
 (let ((?x23860 (* 8.0 l_0_13_35)))
 (let ((?x23861 (* ?x23860 l_0_13_38)))
 (let ((?x23857 (* 8.0 l_0_13_34)))
 (let ((?x23858 (* ?x23857 l_0_13_37)))
 (let ((?x23657 (* 4.0 l_0_13_33)))
 (let ((?x23855 (* ?x23657 l_0_13_38)))
 (let ((?x23680 (* 8.0 l_0_13_33)))
 (let ((?x23681 (* ?x23680 l_0_13_35)))
 (let ((?x23654 (* 4.0 l_0_13_32)))
 (let ((?x23852 (* ?x23654 l_0_13_37)))
 (let ((?x23674 (* 8.0 l_0_13_32)))
 (let ((?x23675 (* ?x23674 l_0_13_34)))
 (let ((?x23848 (* 8.0 l_0_13_21)))
 (let ((?x23849 (* ?x23848 l_0_13_24)))
 (let ((?x23845 (* 8.0 l_0_13_20)))
 (let ((?x23846 (* ?x23845 l_0_13_23)))
 (let ((?x23842 (* 8.0 l_0_13_19)))
 (let ((?x23843 (* ?x23842 l_0_13_22)))
 (let ((?x23769 (* 4.0 l_0_13_18)))
 (let ((?x23840 (* ?x23769 l_0_13_23)))
 (let ((?x23667 (* 8.0 l_0_13_18)))
 (let ((?x23668 (* ?x23667 l_0_13_20)))
 (let ((?x23766 (* 4.0 l_0_13_17)))
 (let ((?x23837 (* ?x23766 l_0_13_22)))
 (let ((?x23663 (* 8.0 l_0_13_17)))
 (let ((?x23664 (* ?x23663 l_0_13_19)))
 (let ((?x23851 (- (+ (+ (+ (+ (+ (+ ?x23664 ?x23837) ?x23668) ?x23840) ?x23843) ?x23846) ?x23849) ?x23675)))
 (let ((?x23868 (- (- (- (- (- (- (- ?x23851 ?x23852) ?x23681) ?x23855) ?x23858) ?x23861) ?x23864) ?x23867)))
 (let ((?x23874 (+ (+ ?x23868 (* (* 2.0 l_0_13_47) l_0_13_49)) (* (* 2.0 l_0_13_48) l_0_13_50))))
 (= (- (- ?x23874 ?x23876) ?x23879) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23863 (* 8.0 l_0_13_36)))
 (let ((?x23940 (* ?x23863 l_0_13_43)))
 (let ((?x23860 (* 8.0 l_0_13_35)))
 (let ((?x23938 (* ?x23860 l_0_13_42)))
 (let ((?x23857 (* 8.0 l_0_13_34)))
 (let ((?x23936 (* ?x23857 l_0_13_41)))
 (let ((?x23657 (* 4.0 l_0_13_33)))
 (let ((?x23934 (* ?x23657 l_0_13_42)))
 (let ((?x23786 (* ?x23657 l_0_13_35)))
 (let ((?x23654 (* 4.0 l_0_13_32)))
 (let ((?x23931 (* ?x23654 l_0_13_41)))
 (let ((?x23784 (* ?x23654 l_0_13_34)))
 (let ((?x23848 (* 8.0 l_0_13_21)))
 (let ((?x23928 (* ?x23848 l_0_13_28)))
 (let ((?x23845 (* 8.0 l_0_13_20)))
 (let ((?x23926 (* ?x23845 l_0_13_27)))
 (let ((?x23842 (* 8.0 l_0_13_19)))
 (let ((?x23924 (* ?x23842 l_0_13_26)))
 (let ((?x23769 (* 4.0 l_0_13_18)))
 (let ((?x23922 (* ?x23769 l_0_13_27)))
 (let ((?x23770 (* ?x23769 l_0_13_20)))
 (let ((?x23766 (* 4.0 l_0_13_17)))
 (let ((?x23919 (* ?x23766 l_0_13_26)))
 (let ((?x23767 (* ?x23766 l_0_13_19)))
 (let ((?x23915 (* 2.0 l_0_13_13)))
 (let ((?x23916 (* ?x23915 l_0_13_6)))
 (let ((?x4690 (* 2.0 l_0_13_12)))
 (let ((?x23913 (* ?x4690 l_0_13_5)))
 (let ((?x23920 (+ (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_4) ?x23913) ?x23916) ?x23767) ?x23919)))
 (let ((?x23932 (- (+ (+ (+ (+ (+ (- ?x23920 ?x23770) ?x23922) ?x23924) ?x23926) ?x23928) ?x23784) ?x23931)))
 (= (- (- (- (- (+ ?x23932 ?x23786) ?x23934) ?x23936) ?x23938) ?x23940) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x24006 (* l_0_13_9 l_0_13_9)))
 (let ((?x24004 (* l_0_13_8 l_0_13_8)))
 (let ((?x24002 (* l_0_13_7 l_0_13_7)))
 (let ((?x23995 (* 4.0 l_0_13_40)))
 (let ((?x23996 (* ?x23995 l_0_13_40)))
 (let ((?x23992 (* 4.0 l_0_13_39)))
 (let ((?x23993 (* ?x23992 l_0_13_39)))
 (let ((?x23989 (* 4.0 l_0_13_38)))
 (let ((?x23990 (* ?x23989 l_0_13_38)))
 (let ((?x23986 (* 4.0 l_0_13_37)))
 (let ((?x23987 (* ?x23986 l_0_13_37)))
 (let ((?x23680 (* 8.0 l_0_13_33)))
 (let ((?x23713 (* ?x23680 l_0_13_38)))
 (let ((?x23674 (* 8.0 l_0_13_32)))
 (let ((?x23710 (* ?x23674 l_0_13_37)))
 (let ((?x23981 (* l_0_13_25 l_0_13_25)))
 (let ((?x23982 (* 4.0 ?x23981)))
 (let ((?x23978 (* l_0_13_24 l_0_13_24)))
 (let ((?x23979 (* 4.0 ?x23978)))
 (let ((?x23975 (* l_0_13_23 l_0_13_23)))
 (let ((?x23976 (* 4.0 ?x23975)))
 (let ((?x23972 (* l_0_13_22 l_0_13_22)))
 (let ((?x23973 (* 4.0 ?x23972)))
 (let ((?x23667 (* 8.0 l_0_13_18)))
 (let ((?x23705 (* ?x23667 l_0_13_23)))
 (let ((?x23663 (* 8.0 l_0_13_17)))
 (let ((?x23703 (* ?x23663 l_0_13_22)))
 (let ((?x23980 (+ (+ (+ (+ (+ (* (- l_0_13_10) l_0_13_10) ?x23703) ?x23705) ?x23973) ?x23976) ?x23979)))
 (let ((?x23997 (- (- (- (- (- (- (+ ?x23980 ?x23982) ?x23710) ?x23713) ?x23987) ?x23990) ?x23993) ?x23996)))
 (let ((?x24001 (+ (+ ?x23997 (* (* 2.0 l_0_13_47) l_0_13_52)) (* (* 2.0 l_0_13_48) l_0_13_53))))
 (= (- (- (- ?x24001 ?x24002) ?x24004) ?x24006) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x24071 (* (* 8.0 l_0_13_40) l_0_13_44)))
 (let ((?x24068 (* (* 8.0 l_0_13_39) l_0_13_43)))
 (let ((?x24065 (* (* 8.0 l_0_13_38) l_0_13_42)))
 (let ((?x24062 (* (* 8.0 l_0_13_37) l_0_13_41)))
 (let ((?x23680 (* 8.0 l_0_13_33)))
 (let ((?x23741 (* ?x23680 l_0_13_42)))
 (let ((?x23657 (* 4.0 l_0_13_33)))
 (let ((?x23855 (* ?x23657 l_0_13_38)))
 (let ((?x23674 (* 8.0 l_0_13_32)))
 (let ((?x23738 (* ?x23674 l_0_13_41)))
 (let ((?x23654 (* 4.0 l_0_13_32)))
 (let ((?x23852 (* ?x23654 l_0_13_37)))
 (let ((?x24055 (* (* 8.0 l_0_13_25) l_0_13_29)))
 (let ((?x24052 (* (* 8.0 l_0_13_24) l_0_13_28)))
 (let ((?x24049 (* (* 8.0 l_0_13_23) l_0_13_27)))
 (let ((?x24046 (* (* 8.0 l_0_13_22) l_0_13_26)))
 (let ((?x23667 (* 8.0 l_0_13_18)))
 (let ((?x23733 (* ?x23667 l_0_13_27)))
 (let ((?x23769 (* 4.0 l_0_13_18)))
 (let ((?x23840 (* ?x23769 l_0_13_23)))
 (let ((?x23663 (* 8.0 l_0_13_17)))
 (let ((?x23728 (* ?x23663 l_0_13_26)))
 (let ((?x23766 (* 4.0 l_0_13_17)))
 (let ((?x23837 (* ?x23766 l_0_13_22)))
 (let ((?x23915 (* 2.0 l_0_13_13)))
 (let ((?x24039 (* ?x23915 l_0_13_9)))
 (let ((?x4690 (* 2.0 l_0_13_12)))
 (let ((?x24037 (* ?x4690 l_0_13_8)))
 (let ((?x4713 (* 2.0 l_0_13_11)))
 (let ((?x24035 (* ?x4713 l_0_13_7)))
 (let ((?x24041 (- (- (- (- (* (* (- 2.0) l_0_13_10) l_0_13_14) ?x24035) ?x24037) ?x24039) ?x23837)))
 (let ((?x24056 (+ (+ (+ (+ (+ (- (+ ?x24041 ?x23728) ?x23840) ?x23733) ?x24046) ?x24049) ?x24052) ?x24055)))
 (let ((?x24069 (- (- (- (- (+ (- (+ ?x24056 ?x23852) ?x23738) ?x23855) ?x23741) ?x24062) ?x24065) ?x24068)))
 (let ((?x24076 (+ (+ (- ?x24069 ?x24071) (* (* 2.0 l_0_13_47) l_0_13_56)) (* (* 2.0 l_0_13_48) l_0_13_57))))
 (= ?x24076 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24149 (* (* 4.0 l_0_13_45) l_0_13_45)))
 (let ((?x24146 (* (* 4.0 l_0_13_44) l_0_13_44)))
 (let ((?x24143 (* (* 4.0 l_0_13_43) l_0_13_43)))
 (let ((?x24140 (* (* 4.0 l_0_13_42) l_0_13_42)))
 (let ((?x24137 (* (* 4.0 l_0_13_41) l_0_13_41)))
 (let ((?x23657 (* 4.0 l_0_13_33)))
 (let ((?x23934 (* ?x23657 l_0_13_42)))
 (let ((?x23654 (* 4.0 l_0_13_32)))
 (let ((?x23931 (* ?x23654 l_0_13_41)))
 (let ((?x23781 (* 2.0 l_0_13_31)))
 (let ((?x23782 (* ?x23781 l_0_13_32)))
 (let ((?x24130 (* l_0_13_30 l_0_13_30)))
 (let ((?x24131 (* 4.0 ?x24130)))
 (let ((?x24127 (* l_0_13_29 l_0_13_29)))
 (let ((?x24128 (* 4.0 ?x24127)))
 (let ((?x24124 (* l_0_13_28 l_0_13_28)))
 (let ((?x24125 (* 4.0 ?x24124)))
 (let ((?x24121 (* l_0_13_27 l_0_13_27)))
 (let ((?x24122 (* 4.0 ?x24121)))
 (let ((?x24118 (* l_0_13_26 l_0_13_26)))
 (let ((?x24119 (* 4.0 ?x24118)))
 (let ((?x23769 (* 4.0 l_0_13_18)))
 (let ((?x23922 (* ?x23769 l_0_13_27)))
 (let ((?x23766 (* 4.0 l_0_13_17)))
 (let ((?x23919 (* ?x23766 l_0_13_26)))
 (let ((?x24111 (* l_0_13_15 l_0_13_15)))
 (let ((?x24109 (* l_0_13_14 l_0_13_14)))
 (let ((?x24107 (* l_0_13_13 l_0_13_13)))
 (let ((?x24108 (- (- (* (- l_0_13_11) l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x24107)))
 (let ((?x24116 (- (+ (- (- ?x24108 ?x24109) ?x24111) (* (* 2.0 l_0_13_16) l_0_13_17)) ?x23919)))
 (let ((?x24133 (- (+ (+ (+ (+ (+ (- ?x24116 ?x23922) ?x24119) ?x24122) ?x24125) ?x24128) ?x24131) ?x23782)))
 (let ((?x24150 (- (- (- (- (- (+ (+ ?x24133 ?x23931) ?x23934) ?x24137) ?x24140) ?x24143) ?x24146) ?x24149)))
 (= ?x24150 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23470 (* l_0_13_16 l_0_13_16)))
 (let ((?x13492 (* 2.0 ?x23470)))
 (let ((?x24170 (- (+ (* (* 2.0 l_0_13_1) l_0_13_4) ?x13492) (* (* 2.0 l_0_13_31) l_0_13_31))))
 (= (- ?x24170 (* (* 2.0 l_0_13_61) l_0_13_64)) 0.0)))))
(assert
 (let ((?x24181 (* l_0_13_46 l_0_13_46)))
 (let ((?x23473 (* 4.0 l_0_13_31)))
 (let ((?x23474 (* ?x23473 l_0_13_31)))
 (let ((?x23470 (* l_0_13_16 l_0_13_16)))
 (let ((?x23471 (* 4.0 ?x23470)))
 (let ((?x24184 (- (+ (- (+ (* (* 2.0 l_0_13_1) l_0_13_7) ?x23471) ?x23474) ?x24181) (* (* 2.0 l_0_13_61) l_0_13_67))))
 (= ?x24184 0.0))))))))
(assert
 (let ((?x23487 (* l_0_13_31 l_0_13_31)))
 (let ((?x5790 (* 2.0 ?x23487)))
 (let ((?x24198 (- (* (* 2.0 l_0_13_1) l_0_13_11) (* (* 2.0 l_0_13_16) l_0_13_16))))
 (= (- (+ ?x24198 ?x5790) (* (* 2.0 l_0_13_61) l_0_13_71)) 0.0)))))
(assert
 (let ((?x24224 (* l_0_13_66 l_0_13_66)))
 (let ((?x24222 (* l_0_13_65 l_0_13_65)))
 (let ((?x24220 (* l_0_13_64 l_0_13_64)))
 (let ((?x23487 (* l_0_13_31 l_0_13_31)))
 (let ((?x23473 (* 4.0 l_0_13_31)))
 (let ((?x24211 (* ?x23473 l_0_13_34)))
 (let ((?x24212 (- (- (* (* 4.0 l_0_13_16) l_0_13_19) (* l_0_13_16 l_0_13_16)) ?x24211)))
 (let ((?x24217 (+ (+ (+ ?x24212 ?x23487) (* 1.0 (* l_0_13_4 l_0_13_4))) (* 1.0 (* l_0_13_5 l_0_13_5)))))
 (let ((?x24225 (- (- (- (+ ?x24217 (* 1.0 (* l_0_13_6 l_0_13_6))) ?x24220) ?x24222) ?x24224)))
 (= ?x24225 0.0)))))))))))
(assert
 (let ((?x23879 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x23876 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x23867 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x23473 (* 4.0 l_0_13_31)))
 (let ((?x24241 (* ?x23473 l_0_13_37)))
 (let ((?x23518 (* 8.0 l_0_13_31)))
 (let ((?x23541 (* ?x23518 l_0_13_34)))
 (let ((?x17009 (* 4.0 l_0_13_16)))
 (let ((?x24238 (* ?x17009 l_0_13_22)))
 (let ((?x23509 (* 8.0 l_0_13_16)))
 (let ((?x4647 (* ?x23509 l_0_13_19)))
 (let ((?x24245 (+ (+ (- (- (+ ?x4647 ?x24238) ?x23541) ?x24241) ?x23867) (* (* 2.0 l_0_13_46) l_0_13_49))))
 (let ((?x24253 (- (- (+ (+ ?x24245 ?x23876) ?x23879) (* (* 2.0 l_0_13_64) l_0_13_67)) (* (* 2.0 l_0_13_65) l_0_13_68))))
 (= (- ?x24253 (* (* 2.0 l_0_13_66) l_0_13_69)) 0.0)))))))))))))))
(assert
 (let ((?x23473 (* 4.0 l_0_13_31)))
 (let ((?x24272 (* ?x23473 l_0_13_41)))
 (let ((?x24211 (* ?x23473 l_0_13_34)))
 (let ((?x17009 (* 4.0 l_0_13_16)))
 (let ((?x24269 (* ?x17009 l_0_13_26)))
 (let ((?x24209 (* ?x17009 l_0_13_19)))
 (let ((?x23915 (* 2.0 l_0_13_13)))
 (let ((?x23916 (* ?x23915 l_0_13_6)))
 (let ((?x4690 (* 2.0 l_0_13_12)))
 (let ((?x23913 (* ?x4690 l_0_13_5)))
 (let ((?x24270 (+ (- (+ (+ (* (* 2.0 l_0_13_11) l_0_13_4) ?x23913) ?x23916) ?x24209) ?x24269)))
 (let ((?x24277 (- (- (- (+ ?x24270 ?x24211) ?x24272) (* (* 2.0 l_0_13_64) l_0_13_71)) (* (* 2.0 l_0_13_65) l_0_13_72))))
 (= (- ?x24277 (* (* 2.0 l_0_13_66) l_0_13_73)) 0.0))))))))))))))
(assert
 (let ((?x24294 (* l_0_13_70 l_0_13_70)))
 (let ((?x24290 (* l_0_13_69 l_0_13_69)))
 (let ((?x5983 (* l_0_13_68 l_0_13_68)))
 (let ((?x5970 (* l_0_13_67 l_0_13_67)))
 (let ((?x23518 (* 8.0 l_0_13_31)))
 (let ((?x23587 (* ?x23518 l_0_13_37)))
 (let ((?x23509 (* 8.0 l_0_13_16)))
 (let ((?x23580 (* ?x23509 l_0_13_22)))
 (let ((?x18865 (+ (- (+ (* 1.0 (* l_0_13_10 l_0_13_10)) ?x23580) ?x23587) (* (* 2.0 l_0_13_46) l_0_13_52))))
 (let ((?x24293 (+ (- (- (- ?x18865 ?x5970) ?x5983) ?x24290) (* 1.0 (* l_0_13_7 l_0_13_7)))))
 (let ((?x24299 (+ (+ (- ?x24293 ?x24294) (* 1.0 (* l_0_13_8 l_0_13_8))) (* 1.0 (* l_0_13_9 l_0_13_9)))))
 (= ?x24299 0.0)))))))))))))
(assert
 (let ((?x23518 (* 8.0 l_0_13_31)))
 (let ((?x23621 (* ?x23518 l_0_13_41)))
 (let ((?x23473 (* 4.0 l_0_13_31)))
 (let ((?x24241 (* ?x23473 l_0_13_37)))
 (let ((?x23509 (* 8.0 l_0_13_16)))
 (let ((?x23618 (* ?x23509 l_0_13_26)))
 (let ((?x17009 (* 4.0 l_0_13_16)))
 (let ((?x24238 (* ?x17009 l_0_13_22)))
 (let ((?x23915 (* 2.0 l_0_13_13)))
 (let ((?x24039 (* ?x23915 l_0_13_9)))
 (let ((?x4690 (* 2.0 l_0_13_12)))
 (let ((?x24037 (* ?x4690 l_0_13_8)))
 (let ((?x4713 (* 2.0 l_0_13_11)))
 (let ((?x24035 (* ?x4713 l_0_13_7)))
 (let ((?x24316 (- (+ (+ (+ (* (* 2.0 l_0_13_10) l_0_13_14) ?x24035) ?x24037) ?x24039) ?x24238)))
 (let ((?x24321 (+ (- (+ (+ ?x24316 ?x23618) ?x24241) ?x23621) (* (* 2.0 l_0_13_46) l_0_13_56))))
 (let ((?x24327 (- (- ?x24321 (* (* 2.0 l_0_13_67) l_0_13_71)) (* (* 2.0 l_0_13_68) l_0_13_72))))
 (let ((?x24333 (- (- ?x24327 (* (* 2.0 l_0_13_69) l_0_13_73)) (* (* 2.0 l_0_13_70) l_0_13_74))))
 (= ?x24333 0.0))))))))))))))))))))
(assert
 (let ((?x24368 (* l_0_13_75 l_0_13_75)))
 (let ((?x24366 (* l_0_13_74 l_0_13_74)))
 (let ((?x24364 (* l_0_13_73 l_0_13_73)))
 (let ((?x24362 (* l_0_13_72 l_0_13_72)))
 (let ((?x24360 (* l_0_13_71 l_0_13_71)))
 (let ((?x23487 (* l_0_13_31 l_0_13_31)))
 (let ((?x23473 (* 4.0 l_0_13_31)))
 (let ((?x24272 (* ?x23473 l_0_13_41)))
 (let ((?x23470 (* l_0_13_16 l_0_13_16)))
 (let ((?x17009 (* 4.0 l_0_13_16)))
 (let ((?x24269 (* ?x17009 l_0_13_26)))
 (let ((?x13660 (+ (* 1.0 (* l_0_13_11 l_0_13_11)) (* 1.0 (* l_0_13_12 l_0_13_12)))))
 (let ((?x24353 (+ (+ ?x13660 (* 1.0 (* l_0_13_13 l_0_13_13))) (* 1.0 (* l_0_13_14 l_0_13_14)))))
 (let ((?x24358 (+ (+ (- (+ ?x24353 (* 1.0 (* l_0_13_15 l_0_13_15))) ?x24269) ?x23470) ?x24272)))
 (= (- (- (- (- (- (- ?x24358 ?x23487) ?x24360) ?x24362) ?x24364) ?x24366) ?x24368) 0.0))))))))))))))))
(assert
 (let ((?x23781 (* 2.0 l_0_13_31)))
 (let ((?x24386 (* ?x23781 l_0_13_34)))
 (let ((?x23778 (* l_0_13_21 l_0_13_21)))
 (let ((?x24384 (* 2.0 ?x23778)))
 (let ((?x23775 (* l_0_13_20 l_0_13_20)))
 (let ((?x24382 (* 2.0 ?x23775)))
 (let ((?x23772 (* l_0_13_19 l_0_13_19)))
 (let ((?x24380 (* 2.0 ?x23772)))
 (let ((?x24387 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_16) l_0_13_19) ?x24380) ?x24382) ?x24384) ?x24386)))
 (let ((?x24393 (- (- ?x24387 (* (* 2.0 l_0_13_34) l_0_13_34)) (* (* 2.0 l_0_13_35) l_0_13_35))))
 (= (- ?x24393 (* (* 2.0 l_0_13_36) l_0_13_36)) 0.0))))))))))))
(assert
 (let ((?x24438 (* l_0_13_51 l_0_13_51)))
 (let ((?x24436 (* l_0_13_50 l_0_13_50)))
 (let ((?x24434 (* l_0_13_49 l_0_13_49)))
 (let ((?x23794 (* 4.0 l_0_13_36)))
 (let ((?x23795 (* ?x23794 l_0_13_36)))
 (let ((?x24431 (* ?x23794 l_0_13_39)))
 (let ((?x23791 (* 4.0 l_0_13_35)))
 (let ((?x23792 (* ?x23791 l_0_13_35)))
 (let ((?x24428 (* ?x23791 l_0_13_38)))
 (let ((?x23788 (* 4.0 l_0_13_34)))
 (let ((?x23789 (* ?x23788 l_0_13_34)))
 (let ((?x24425 (* ?x23788 l_0_13_37)))
 (let ((?x23781 (* 2.0 l_0_13_31)))
 (let ((?x24423 (* ?x23781 l_0_13_37)))
 (let ((?x23778 (* l_0_13_21 l_0_13_21)))
 (let ((?x23779 (* 4.0 ?x23778)))
 (let ((?x24419 (* 4.0 l_0_13_21)))
 (let ((?x24420 (* ?x24419 l_0_13_24)))
 (let ((?x23775 (* l_0_13_20 l_0_13_20)))
 (let ((?x23776 (* 4.0 ?x23775)))
 (let ((?x24415 (* 4.0 l_0_13_20)))
 (let ((?x24416 (* ?x24415 l_0_13_23)))
 (let ((?x23772 (* l_0_13_19 l_0_13_19)))
 (let ((?x23773 (* 4.0 ?x23772)))
 (let ((?x24413 (+ (* (* (- 2.0) l_0_13_16) l_0_13_22) (* (* 4.0 l_0_13_19) l_0_13_22))))
 (let ((?x24426 (- (+ (+ (+ (+ (+ (+ ?x24413 ?x23773) ?x24416) ?x23776) ?x24420) ?x23779) ?x24423) ?x24425)))
 (let ((?x24437 (+ (+ (- (- (- (- (- ?x24426 ?x23789) ?x24428) ?x23792) ?x24431) ?x23795) ?x24434) ?x24436)))
 (= (+ ?x24437 ?x24438) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x18340 (* l_0_13_36 l_0_13_36)))
 (let ((?x24406 (* 2.0 ?x18340)))
 (let ((?x23794 (* 4.0 l_0_13_36)))
 (let ((?x24471 (* ?x23794 l_0_13_43)))
 (let ((?x13005 (* l_0_13_35 l_0_13_35)))
 (let ((?x24403 (* 2.0 ?x13005)))
 (let ((?x23791 (* 4.0 l_0_13_35)))
 (let ((?x24468 (* ?x23791 l_0_13_42)))
 (let ((?x18337 (* l_0_13_34 l_0_13_34)))
 (let ((?x6265 (* 2.0 ?x18337)))
 (let ((?x23788 (* 4.0 l_0_13_34)))
 (let ((?x24465 (* ?x23788 l_0_13_41)))
 (let ((?x23781 (* 2.0 l_0_13_31)))
 (let ((?x24463 (* ?x23781 l_0_13_41)))
 (let ((?x24419 (* 4.0 l_0_13_21)))
 (let ((?x24458 (* ?x24419 l_0_13_28)))
 (let ((?x24415 (* 4.0 l_0_13_20)))
 (let ((?x5231 (* ?x24415 l_0_13_27)))
 (let ((?x24411 (* 4.0 l_0_13_19)))
 (let ((?x13767 (* ?x24411 l_0_13_26)))
 (let ((?x18989 (- (+ (* (* (- 2.0) l_0_13_16) l_0_13_26) ?x13767) (* (* 2.0 l_0_13_19) l_0_13_19))))
 (let ((?x24462 (- (+ (- (+ ?x18989 ?x5231) (* (* 2.0 l_0_13_20) l_0_13_20)) ?x24458) (* (* 2.0 l_0_13_21) l_0_13_21))))
 (let ((?x24473 (+ (- (+ (- (+ (- (+ ?x24462 ?x24463) ?x24465) ?x6265) ?x24468) ?x24403) ?x24471) ?x24406)))
 (= ?x24473 0.0)))))))))))))))))))))))))
(assert
 (let ((?x4942 (* l_0_13_33 l_0_13_33)))
 (let ((?x12773 (* l_0_13_32 l_0_13_32)))
 (let ((?x24510 (+ (- (* (- l_0_13_17) l_0_13_17) (* l_0_13_18 l_0_13_18)) ?x12773)))
 (= (+ ?x24510 ?x4942) 0.0)))))
(assert
 (let ((?x23683 (* 2.0 l_0_13_33)))
 (let ((?x24521 (* ?x23683 l_0_13_35)))
 (let ((?x23677 (* 2.0 l_0_13_32)))
 (let ((?x24519 (* ?x23677 l_0_13_34)))
 (let ((?x23735 (* 2.0 l_0_13_18)))
 (let ((?x24517 (* ?x23735 l_0_13_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_17) l_0_13_19) ?x24517) ?x24519) ?x24521) 0.0))))))))
(assert
 (let ((?x23683 (* 2.0 l_0_13_33)))
 (let ((?x24535 (* ?x23683 l_0_13_38)))
 (let ((?x23677 (* 2.0 l_0_13_32)))
 (let ((?x24533 (* ?x23677 l_0_13_37)))
 (let ((?x23735 (* 2.0 l_0_13_18)))
 (let ((?x24531 (* ?x23735 l_0_13_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_17) l_0_13_22) ?x24531) ?x24533) ?x24535) 0.0))))))))
(assert
 (let ((?x23683 (* 2.0 l_0_13_33)))
 (let ((?x24553 (* ?x23683 l_0_13_42)))
 (let ((?x23677 (* 2.0 l_0_13_32)))
 (let ((?x24551 (* ?x23677 l_0_13_41)))
 (let ((?x23735 (* 2.0 l_0_13_18)))
 (let ((?x24549 (* ?x23735 l_0_13_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_17) l_0_13_26) ?x24549) ?x24551) ?x24553) 0.0))))))))
(assert
 (let ((?x18340 (* l_0_13_36 l_0_13_36)))
 (let ((?x13005 (* l_0_13_35 l_0_13_35)))
 (let ((?x18337 (* l_0_13_34 l_0_13_34)))
 (let ((?x23778 (* l_0_13_21 l_0_13_21)))
 (let ((?x24569 (- (- (* (- l_0_13_19) l_0_13_19) (* l_0_13_20 l_0_13_20)) ?x23778)))
 (= (+ (+ (+ ?x24569 ?x18337) ?x13005) ?x18340) 0.0)))))))
(assert
 (let ((?x24394 (* 2.0 l_0_13_36)))
 (let ((?x24593 (* ?x24394 l_0_13_39)))
 (let ((?x24391 (* 2.0 l_0_13_35)))
 (let ((?x24591 (* ?x24391 l_0_13_38)))
 (let ((?x24388 (* 2.0 l_0_13_34)))
 (let ((?x24589 (* ?x24388 l_0_13_37)))
 (let ((?x24460 (* 2.0 l_0_13_21)))
 (let ((?x24587 (* ?x24460 l_0_13_24)))
 (let ((?x24455 (* 2.0 l_0_13_20)))
 (let ((?x24585 (* ?x24455 l_0_13_23)))
 (let ((?x24592 (+ (+ (- (- (* (* (- 2.0) l_0_13_19) l_0_13_22) ?x24585) ?x24587) ?x24589) ?x24591)))
 (= (+ ?x24592 ?x24593) 0.0)))))))))))))
(assert
 (let ((?x24394 (* 2.0 l_0_13_36)))
 (let ((?x24609 (* ?x24394 l_0_13_43)))
 (let ((?x24391 (* 2.0 l_0_13_35)))
 (let ((?x24607 (* ?x24391 l_0_13_42)))
 (let ((?x24388 (* 2.0 l_0_13_34)))
 (let ((?x24605 (* ?x24388 l_0_13_41)))
 (let ((?x24460 (* 2.0 l_0_13_21)))
 (let ((?x24603 (* ?x24460 l_0_13_28)))
 (let ((?x24455 (* 2.0 l_0_13_20)))
 (let ((?x24601 (* ?x24455 l_0_13_27)))
 (let ((?x24608 (+ (+ (- (- (* (* (- 2.0) l_0_13_19) l_0_13_26) ?x24601) ?x24603) ?x24605) ?x24607)))
 (= (+ ?x24608 ?x24609) 0.0)))))))))))))
(assert
 (let ((?x5375 (* l_0_13_40 l_0_13_40)))
 (let ((?x18568 (* l_0_13_39 l_0_13_39)))
 (let ((?x18528 (* l_0_13_38 l_0_13_38)))
 (let ((?x13252 (* l_0_13_37 l_0_13_37)))
 (let ((?x23981 (* l_0_13_25 l_0_13_25)))
 (let ((?x23978 (* l_0_13_24 l_0_13_24)))
 (let ((?x24623 (- (- (* (- l_0_13_22) l_0_13_22) (* l_0_13_23 l_0_13_23)) ?x23978)))
 (= (+ (+ (+ (+ (- ?x24623 ?x23981) ?x13252) ?x18528) ?x18568) ?x5375) 0.0)))))))))
(assert
 (let ((?x24658 (* 2.0 l_0_13_40)))
 (let ((?x24659 (* ?x24658 l_0_13_44)))
 (let ((?x24655 (* 2.0 l_0_13_39)))
 (let ((?x24656 (* ?x24655 l_0_13_43)))
 (let ((?x24652 (* 2.0 l_0_13_38)))
 (let ((?x24653 (* ?x24652 l_0_13_42)))
 (let ((?x24649 (* 2.0 l_0_13_37)))
 (let ((?x24650 (* ?x24649 l_0_13_41)))
 (let ((?x24646 (* 2.0 l_0_13_25)))
 (let ((?x24647 (* ?x24646 l_0_13_29)))
 (let ((?x24643 (* 2.0 l_0_13_24)))
 (let ((?x24644 (* ?x24643 l_0_13_28)))
 (let ((?x24640 (* 2.0 l_0_13_23)))
 (let ((?x24641 (* ?x24640 l_0_13_27)))
 (let ((?x24651 (+ (- (- (- (* (* (- 2.0) l_0_13_22) l_0_13_26) ?x24641) ?x24644) ?x24647) ?x24650)))
 (= (+ (+ (+ ?x24651 ?x24653) ?x24656) ?x24659) 0.0)))))))))))))))))
(assert
 (let ((?x5179 (* l_0_13_45 l_0_13_45)))
 (let ((?x18764 (* l_0_13_44 l_0_13_44)))
 (let ((?x18761 (* l_0_13_43 l_0_13_43)))
 (let ((?x18700 (* l_0_13_42 l_0_13_42)))
 (let ((?x5673 (* l_0_13_41 l_0_13_41)))
 (let ((?x18340 (* l_0_13_36 l_0_13_36)))
 (let ((?x13005 (* l_0_13_35 l_0_13_35)))
 (let ((?x18337 (* l_0_13_34 l_0_13_34)))
 (let ((?x24130 (* l_0_13_30 l_0_13_30)))
 (let ((?x24127 (* l_0_13_29 l_0_13_29)))
 (let ((?x24124 (* l_0_13_28 l_0_13_28)))
 (let ((?x24121 (* l_0_13_27 l_0_13_27)))
 (let ((?x24118 (* l_0_13_26 l_0_13_26)))
 (let ((?x23778 (* l_0_13_21 l_0_13_21)))
 (let ((?x24686 (- (+ (+ (* l_0_13_19 l_0_13_19) (* l_0_13_20 l_0_13_20)) ?x23778) ?x24118)))
 (let ((?x24693 (- (- (- (- (- (- (- ?x24686 ?x24121) ?x24124) ?x24127) ?x24130) ?x18337) ?x13005) ?x18340)))
 (= (+ (+ (+ (+ (+ ?x24693 ?x5673) ?x18700) ?x18761) ?x18764) ?x5179) 0.0))))))))))))))))))
(assert
 (let ((?x23794 (* 4.0 l_0_13_36)))
 (let ((?x24471 (* ?x23794 l_0_13_43)))
 (let ((?x23791 (* 4.0 l_0_13_35)))
 (let ((?x24468 (* ?x23791 l_0_13_42)))
 (let ((?x23788 (* 4.0 l_0_13_34)))
 (let ((?x24465 (* ?x23788 l_0_13_41)))
 (let ((?x23781 (* 2.0 l_0_13_31)))
 (let ((?x24386 (* ?x23781 l_0_13_34)))
 (let ((?x24130 (* l_0_13_30 l_0_13_30)))
 (let ((?x24719 (* 2.0 ?x24130)))
 (let ((?x24127 (* l_0_13_29 l_0_13_29)))
 (let ((?x24717 (* 2.0 ?x24127)))
 (let ((?x24124 (* l_0_13_28 l_0_13_28)))
 (let ((?x24715 (* 2.0 ?x24124)))
 (let ((?x24121 (* l_0_13_27 l_0_13_27)))
 (let ((?x24713 (* 2.0 ?x24121)))
 (let ((?x24118 (* l_0_13_26 l_0_13_26)))
 (let ((?x24711 (* 2.0 ?x24118)))
 (let ((?x24419 (* 4.0 l_0_13_21)))
 (let ((?x24458 (* ?x24419 l_0_13_28)))
 (let ((?x24415 (* 4.0 l_0_13_20)))
 (let ((?x5231 (* ?x24415 l_0_13_27)))
 (let ((?x24411 (* 4.0 l_0_13_19)))
 (let ((?x13767 (* ?x24411 l_0_13_26)))
 (let ((?x24712 (+ (- (- (- (* (* 2.0 l_0_13_16) l_0_13_19) ?x13767) ?x5231) ?x24458) ?x24711)))
 (let ((?x24723 (+ (+ (- (+ (+ (+ (+ ?x24712 ?x24713) ?x24715) ?x24717) ?x24719) ?x24386) ?x24465) ?x24468)))
 (let ((?x24730 (- (- (+ ?x24723 ?x24471) (* (* 2.0 l_0_13_41) l_0_13_41)) (* (* 2.0 l_0_13_42) l_0_13_42))))
 (let ((?x24736 (- (- ?x24730 (* (* 2.0 l_0_13_43) l_0_13_43)) (* (* 2.0 l_0_13_44) l_0_13_44))))
 (= (- ?x24736 (* (* 2.0 l_0_13_45) l_0_13_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x24802 (* l_0_13_60 l_0_13_60)))
 (let ((?x24800 (* l_0_13_59 l_0_13_59)))
 (let ((?x24798 (* l_0_13_58 l_0_13_58)))
 (let ((?x24796 (* l_0_13_57 l_0_13_57)))
 (let ((?x24794 (* l_0_13_56 l_0_13_56)))
 (let ((?x24149 (* (* 4.0 l_0_13_45) l_0_13_45)))
 (let ((?x24146 (* (* 4.0 l_0_13_44) l_0_13_44)))
 (let ((?x24143 (* (* 4.0 l_0_13_43) l_0_13_43)))
 (let ((?x24140 (* (* 4.0 l_0_13_42) l_0_13_42)))
 (let ((?x24137 (* (* 4.0 l_0_13_41) l_0_13_41)))
 (let ((?x23995 (* 4.0 l_0_13_40)))
 (let ((?x24787 (* ?x23995 l_0_13_44)))
 (let ((?x23992 (* 4.0 l_0_13_39)))
 (let ((?x24785 (* ?x23992 l_0_13_43)))
 (let ((?x23989 (* 4.0 l_0_13_38)))
 (let ((?x24783 (* ?x23989 l_0_13_42)))
 (let ((?x23986 (* 4.0 l_0_13_37)))
 (let ((?x24781 (* ?x23986 l_0_13_41)))
 (let ((?x23781 (* 2.0 l_0_13_31)))
 (let ((?x24423 (* ?x23781 l_0_13_37)))
 (let ((?x24130 (* l_0_13_30 l_0_13_30)))
 (let ((?x24131 (* 4.0 ?x24130)))
 (let ((?x24127 (* l_0_13_29 l_0_13_29)))
 (let ((?x24128 (* 4.0 ?x24127)))
 (let ((?x24124 (* l_0_13_28 l_0_13_28)))
 (let ((?x24125 (* 4.0 ?x24124)))
 (let ((?x24121 (* l_0_13_27 l_0_13_27)))
 (let ((?x24122 (* 4.0 ?x24121)))
 (let ((?x24118 (* l_0_13_26 l_0_13_26)))
 (let ((?x24119 (* 4.0 ?x24118)))
 (let ((?x24773 (* (* 4.0 l_0_13_25) l_0_13_29)))
 (let ((?x24770 (* (* 4.0 l_0_13_24) l_0_13_28)))
 (let ((?x24767 (* (* 4.0 l_0_13_23) l_0_13_27)))
 (let ((?x24764 (* (* 4.0 l_0_13_22) l_0_13_26)))
 (let ((?x24774 (- (- (- (- (* (* 2.0 l_0_13_16) l_0_13_22) ?x24764) ?x24767) ?x24770) ?x24773)))
 (let ((?x24782 (+ (- (+ (+ (+ (+ (+ ?x24774 ?x24119) ?x24122) ?x24125) ?x24128) ?x24131) ?x24423) ?x24781)))
 (let ((?x24792 (- (- (- (- (+ (+ (+ ?x24782 ?x24783) ?x24785) ?x24787) ?x24137) ?x24140) ?x24143) ?x24146)))
 (= (+ (+ (+ (+ (+ (- ?x24792 ?x24149) ?x24794) ?x24796) ?x24798) ?x24800) ?x24802) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5179 (* l_0_13_45 l_0_13_45)))
 (let ((?x6044 (* 2.0 ?x5179)))
 (let ((?x18764 (* l_0_13_44 l_0_13_44)))
 (let ((?x6584 (* 2.0 ?x18764)))
 (let ((?x18761 (* l_0_13_43 l_0_13_43)))
 (let ((?x6583 (* 2.0 ?x18761)))
 (let ((?x18700 (* l_0_13_42 l_0_13_42)))
 (let ((?x19049 (* 2.0 ?x18700)))
 (let ((?x5673 (* l_0_13_41 l_0_13_41)))
 (let ((?x24758 (* 2.0 ?x5673)))
 (let ((?x23781 (* 2.0 l_0_13_31)))
 (let ((?x24463 (* ?x23781 l_0_13_41)))
 (let ((?x14073 (- (* (* 2.0 l_0_13_16) l_0_13_26) (* (* 2.0 l_0_13_26) l_0_13_26))))
 (let ((?x24824 (- (- ?x14073 (* (* 2.0 l_0_13_27) l_0_13_27)) (* (* 2.0 l_0_13_28) l_0_13_28))))
 (let ((?x24830 (- (- ?x24824 (* (* 2.0 l_0_13_29) l_0_13_29)) (* (* 2.0 l_0_13_30) l_0_13_30))))
 (= (+ (+ (+ (+ (+ (- ?x24830 ?x24463) ?x24758) ?x19049) ?x6583) ?x6584) ?x6044) 0.0)))))))))))))))))
(assert
 (let ((?x4942 (* l_0_13_33 l_0_13_33)))
 (let ((?x12773 (* l_0_13_32 l_0_13_32)))
 (let ((?x13764 (- (- (+ (* l_0_13_17 l_0_13_17) (* l_0_13_18 l_0_13_18)) ?x12773) ?x4942)))
 (= ?x13764 0.0)))))
(assert
 (let ((?x23683 (* 2.0 l_0_13_33)))
 (let ((?x24521 (* ?x23683 l_0_13_35)))
 (let ((?x23677 (* 2.0 l_0_13_32)))
 (let ((?x24519 (* ?x23677 l_0_13_34)))
 (let ((?x23735 (* 2.0 l_0_13_18)))
 (let ((?x24517 (* ?x23735 l_0_13_20)))
 (= (- (- (+ (* (* 2.0 l_0_13_17) l_0_13_19) ?x24517) ?x24519) ?x24521) 0.0))))))))
(assert
 (let ((?x23683 (* 2.0 l_0_13_33)))
 (let ((?x24535 (* ?x23683 l_0_13_38)))
 (let ((?x23677 (* 2.0 l_0_13_32)))
 (let ((?x24533 (* ?x23677 l_0_13_37)))
 (let ((?x23735 (* 2.0 l_0_13_18)))
 (let ((?x24531 (* ?x23735 l_0_13_23)))
 (= (- (- (+ (* (* 2.0 l_0_13_17) l_0_13_22) ?x24531) ?x24533) ?x24535) 0.0))))))))
(assert
 (let ((?x23683 (* 2.0 l_0_13_33)))
 (let ((?x24553 (* ?x23683 l_0_13_42)))
 (let ((?x23677 (* 2.0 l_0_13_32)))
 (let ((?x24551 (* ?x23677 l_0_13_41)))
 (let ((?x23735 (* 2.0 l_0_13_18)))
 (let ((?x24549 (* ?x23735 l_0_13_27)))
 (= (- (- (+ (* (* 2.0 l_0_13_17) l_0_13_26) ?x24549) ?x24551) ?x24553) 0.0))))))))
(assert
 (let ((?x24394 (* 2.0 l_0_13_36)))
 (let ((?x24593 (* ?x24394 l_0_13_39)))
 (let ((?x24391 (* 2.0 l_0_13_35)))
 (let ((?x24591 (* ?x24391 l_0_13_38)))
 (let ((?x24388 (* 2.0 l_0_13_34)))
 (let ((?x24589 (* ?x24388 l_0_13_37)))
 (let ((?x24460 (* 2.0 l_0_13_21)))
 (let ((?x24587 (* ?x24460 l_0_13_24)))
 (let ((?x24455 (* 2.0 l_0_13_20)))
 (let ((?x24585 (* ?x24455 l_0_13_23)))
 (let ((?x24848 (- (- (+ (+ (* (* 2.0 l_0_13_19) l_0_13_22) ?x24585) ?x24587) ?x24589) ?x24591)))
 (= (- ?x24848 ?x24593) 0.0)))))))))))))
(assert
 (let ((?x24394 (* 2.0 l_0_13_36)))
 (let ((?x24609 (* ?x24394 l_0_13_43)))
 (let ((?x24391 (* 2.0 l_0_13_35)))
 (let ((?x24607 (* ?x24391 l_0_13_42)))
 (let ((?x24388 (* 2.0 l_0_13_34)))
 (let ((?x24605 (* ?x24388 l_0_13_41)))
 (let ((?x24460 (* 2.0 l_0_13_21)))
 (let ((?x24603 (* ?x24460 l_0_13_28)))
 (let ((?x24455 (* 2.0 l_0_13_20)))
 (let ((?x24601 (* ?x24455 l_0_13_27)))
 (let ((?x19432 (- (- (+ (+ (* (* 2.0 l_0_13_19) l_0_13_26) ?x24601) ?x24603) ?x24605) ?x24607)))
 (= (- ?x19432 ?x24609) 0.0)))))))))))))
(assert
 (let ((?x5375 (* l_0_13_40 l_0_13_40)))
 (let ((?x18568 (* l_0_13_39 l_0_13_39)))
 (let ((?x18528 (* l_0_13_38 l_0_13_38)))
 (let ((?x13252 (* l_0_13_37 l_0_13_37)))
 (let ((?x23981 (* l_0_13_25 l_0_13_25)))
 (let ((?x23978 (* l_0_13_24 l_0_13_24)))
 (let ((?x24862 (+ (+ (+ (* l_0_13_22 l_0_13_22) (* l_0_13_23 l_0_13_23)) ?x23978) ?x23981)))
 (= (- (- (- (- ?x24862 ?x13252) ?x18528) ?x18568) ?x5375) 0.0)))))))))
(assert
 (let ((?x24658 (* 2.0 l_0_13_40)))
 (let ((?x24659 (* ?x24658 l_0_13_44)))
 (let ((?x24655 (* 2.0 l_0_13_39)))
 (let ((?x24656 (* ?x24655 l_0_13_43)))
 (let ((?x24652 (* 2.0 l_0_13_38)))
 (let ((?x24653 (* ?x24652 l_0_13_42)))
 (let ((?x24649 (* 2.0 l_0_13_37)))
 (let ((?x24650 (* ?x24649 l_0_13_41)))
 (let ((?x24646 (* 2.0 l_0_13_25)))
 (let ((?x24647 (* ?x24646 l_0_13_29)))
 (let ((?x24643 (* 2.0 l_0_13_24)))
 (let ((?x24644 (* ?x24643 l_0_13_28)))
 (let ((?x24640 (* 2.0 l_0_13_23)))
 (let ((?x24641 (* ?x24640 l_0_13_27)))
 (let ((?x24880 (- (+ (+ (+ (* (* 2.0 l_0_13_22) l_0_13_26) ?x24641) ?x24644) ?x24647) ?x24650)))
 (= (- (- (- ?x24880 ?x24653) ?x24656) ?x24659) 0.0)))))))))))))))))
(assert
 (let ((?x5179 (* l_0_13_45 l_0_13_45)))
 (let ((?x18764 (* l_0_13_44 l_0_13_44)))
 (let ((?x18761 (* l_0_13_43 l_0_13_43)))
 (let ((?x18700 (* l_0_13_42 l_0_13_42)))
 (let ((?x5673 (* l_0_13_41 l_0_13_41)))
 (let ((?x24130 (* l_0_13_30 l_0_13_30)))
 (let ((?x24127 (* l_0_13_29 l_0_13_29)))
 (let ((?x24124 (* l_0_13_28 l_0_13_28)))
 (let ((?x24893 (+ (+ (+ (* l_0_13_26 l_0_13_26) (* l_0_13_27 l_0_13_27)) ?x24124) ?x24127)))
 (= (- (- (- (- (- (+ ?x24893 ?x24130) ?x5673) ?x18700) ?x18761) ?x18764) ?x5179) 0.0)))))))))))
(assert
 (let ((?x23863 (* 8.0 l_0_13_36)))
 (let ((?x23864 (* ?x23863 l_0_13_39)))
 (let ((?x23860 (* 8.0 l_0_13_35)))
 (let ((?x23861 (* ?x23860 l_0_13_38)))
 (let ((?x23857 (* 8.0 l_0_13_34)))
 (let ((?x23858 (* ?x23857 l_0_13_37)))
 (let ((?x23981 (* l_0_13_25 l_0_13_25)))
 (let ((?x24920 (* 2.0 ?x23981)))
 (let ((?x23978 (* l_0_13_24 l_0_13_24)))
 (let ((?x24918 (* 2.0 ?x23978)))
 (let ((?x23975 (* l_0_13_23 l_0_13_23)))
 (let ((?x24916 (* 2.0 ?x23975)))
 (let ((?x23972 (* l_0_13_22 l_0_13_22)))
 (let ((?x24914 (* 2.0 ?x23972)))
 (let ((?x23848 (* 8.0 l_0_13_21)))
 (let ((?x23849 (* ?x23848 l_0_13_24)))
 (let ((?x23845 (* 8.0 l_0_13_20)))
 (let ((?x23846 (* ?x23845 l_0_13_23)))
 (let ((?x23842 (* 8.0 l_0_13_19)))
 (let ((?x23843 (* ?x23842 l_0_13_22)))
 (let ((?x24922 (- (+ (+ (+ (+ (+ (+ ?x23843 ?x23846) ?x23849) ?x24914) ?x24916) ?x24918) ?x24920) ?x23858)))
 (let ((?x24928 (- (- (- (- ?x24922 ?x23861) ?x23864) (* (* 2.0 l_0_13_37) l_0_13_37)) (* (* 2.0 l_0_13_38) l_0_13_38))))
 (let ((?x24932 (- (- ?x24928 (* (* 2.0 l_0_13_39) l_0_13_39)) (* (* 2.0 l_0_13_40) l_0_13_40))))
 (let ((?x24938 (+ (+ ?x24932 (* (* 2.0 l_0_13_49) l_0_13_52)) (* (* 2.0 l_0_13_50) l_0_13_53))))
 (= (+ ?x24938 (* (* 2.0 l_0_13_51) l_0_13_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x23995 (* 4.0 l_0_13_40)))
 (let ((?x24787 (* ?x23995 l_0_13_44)))
 (let ((?x23992 (* 4.0 l_0_13_39)))
 (let ((?x24785 (* ?x23992 l_0_13_43)))
 (let ((?x23989 (* 4.0 l_0_13_38)))
 (let ((?x24783 (* ?x23989 l_0_13_42)))
 (let ((?x23986 (* 4.0 l_0_13_37)))
 (let ((?x24781 (* ?x23986 l_0_13_41)))
 (let ((?x23863 (* 8.0 l_0_13_36)))
 (let ((?x23940 (* ?x23863 l_0_13_43)))
 (let ((?x23794 (* 4.0 l_0_13_36)))
 (let ((?x24431 (* ?x23794 l_0_13_39)))
 (let ((?x23860 (* 8.0 l_0_13_35)))
 (let ((?x23938 (* ?x23860 l_0_13_42)))
 (let ((?x23791 (* 4.0 l_0_13_35)))
 (let ((?x24428 (* ?x23791 l_0_13_38)))
 (let ((?x23857 (* 8.0 l_0_13_34)))
 (let ((?x23936 (* ?x23857 l_0_13_41)))
 (let ((?x23788 (* 4.0 l_0_13_34)))
 (let ((?x24425 (* ?x23788 l_0_13_37)))
 (let ((?x24773 (* (* 4.0 l_0_13_25) l_0_13_29)))
 (let ((?x24770 (* (* 4.0 l_0_13_24) l_0_13_28)))
 (let ((?x24767 (* (* 4.0 l_0_13_23) l_0_13_27)))
 (let ((?x24764 (* (* 4.0 l_0_13_22) l_0_13_26)))
 (let ((?x23848 (* 8.0 l_0_13_21)))
 (let ((?x23928 (* ?x23848 l_0_13_28)))
 (let ((?x24419 (* 4.0 l_0_13_21)))
 (let ((?x24420 (* ?x24419 l_0_13_24)))
 (let ((?x23845 (* 8.0 l_0_13_20)))
 (let ((?x23926 (* ?x23845 l_0_13_27)))
 (let ((?x24415 (* 4.0 l_0_13_20)))
 (let ((?x24416 (* ?x24415 l_0_13_23)))
 (let ((?x23842 (* 8.0 l_0_13_19)))
 (let ((?x23924 (* ?x23842 l_0_13_26)))
 (let ((?x24972 (- (+ (- (+ (* (* (- 4.0) l_0_13_19) l_0_13_22) ?x23924) ?x24416) ?x23926) ?x24420)))
 (let ((?x24979 (- (+ (+ (+ (+ (+ (+ ?x24972 ?x23928) ?x24764) ?x24767) ?x24770) ?x24773) ?x24425) ?x23936)))
 (let ((?x24986 (- (- (- (- (+ (- (+ ?x24979 ?x24428) ?x23938) ?x24431) ?x23940) ?x24781) ?x24783) ?x24785)))
 (let ((?x24991 (+ (+ (- ?x24986 ?x24787) (* (* 2.0 l_0_13_49) l_0_13_56)) (* (* 2.0 l_0_13_50) l_0_13_57))))
 (= (+ ?x24991 (* (* 2.0 l_0_13_51) l_0_13_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5375 (* l_0_13_40 l_0_13_40)))
 (let ((?x6907 (* 2.0 ?x5375)))
 (let ((?x24071 (* (* 8.0 l_0_13_40) l_0_13_44)))
 (let ((?x18568 (* l_0_13_39 l_0_13_39)))
 (let ((?x14193 (* 2.0 ?x18568)))
 (let ((?x24068 (* (* 8.0 l_0_13_39) l_0_13_43)))
 (let ((?x18528 (* l_0_13_38 l_0_13_38)))
 (let ((?x14191 (* 2.0 ?x18528)))
 (let ((?x24065 (* (* 8.0 l_0_13_38) l_0_13_42)))
 (let ((?x13252 (* l_0_13_37 l_0_13_37)))
 (let ((?x6887 (* 2.0 ?x13252)))
 (let ((?x24062 (* (* 8.0 l_0_13_37) l_0_13_41)))
 (let ((?x24055 (* (* 8.0 l_0_13_25) l_0_13_29)))
 (let ((?x24052 (* (* 8.0 l_0_13_24) l_0_13_28)))
 (let ((?x24049 (* (* 8.0 l_0_13_23) l_0_13_27)))
 (let ((?x24046 (* (* 8.0 l_0_13_22) l_0_13_26)))
 (let ((?x25011 (- (+ (- ?x24046 (* (* 2.0 l_0_13_22) l_0_13_22)) ?x24049) (* (* 2.0 l_0_13_23) l_0_13_23))))
 (let ((?x25017 (- (+ (- (+ ?x25011 ?x24052) (* (* 2.0 l_0_13_24) l_0_13_24)) ?x24055) (* (* 2.0 l_0_13_25) l_0_13_25))))
 (let ((?x25024 (- (+ (- (+ (- (+ (- ?x25017 ?x24062) ?x6887) ?x24065) ?x14191) ?x24068) ?x14193) ?x24071)))
 (let ((?x25031 (+ (+ (+ ?x25024 ?x6907) (* (* 2.0 l_0_13_52) l_0_13_56)) (* (* 2.0 l_0_13_53) l_0_13_57))))
 (let ((?x25037 (+ (+ ?x25031 (* (* 2.0 l_0_13_54) l_0_13_58)) (* (* 2.0 l_0_13_55) l_0_13_59))))
 (= ?x25037 0.0)))))))))))))))))))))))
(assert
 (let ((?x25061 (* l_0_13_55 l_0_13_55)))
 (let ((?x25059 (* l_0_13_54 l_0_13_54)))
 (let ((?x25057 (* l_0_13_53 l_0_13_53)))
 (let ((?x25055 (* l_0_13_52 l_0_13_52)))
 (let ((?x23995 (* 4.0 l_0_13_40)))
 (let ((?x23996 (* ?x23995 l_0_13_40)))
 (let ((?x23992 (* 4.0 l_0_13_39)))
 (let ((?x23993 (* ?x23992 l_0_13_39)))
 (let ((?x23989 (* 4.0 l_0_13_38)))
 (let ((?x23990 (* ?x23989 l_0_13_38)))
 (let ((?x23986 (* 4.0 l_0_13_37)))
 (let ((?x23987 (* ?x23986 l_0_13_37)))
 (let ((?x23981 (* l_0_13_25 l_0_13_25)))
 (let ((?x23982 (* 4.0 ?x23981)))
 (let ((?x23978 (* l_0_13_24 l_0_13_24)))
 (let ((?x23979 (* 4.0 ?x23978)))
 (let ((?x23975 (* l_0_13_23 l_0_13_23)))
 (let ((?x23976 (* 4.0 ?x23975)))
 (let ((?x23972 (* l_0_13_22 l_0_13_22)))
 (let ((?x23973 (* 4.0 ?x23972)))
 (let ((?x25054 (- (- (- (- (+ (+ (+ ?x23973 ?x23976) ?x23979) ?x23982) ?x23987) ?x23990) ?x23993) ?x23996)))
 (= (+ (+ (+ (+ ?x25054 ?x25055) ?x25057) ?x25059) ?x25061) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_13_1 0.0))
(assert
 (>= l_0_13_3 0.0))
(assert
 (>= l_0_13_6 0.0))
(assert
 (>= l_0_13_10 0.0))
(assert
 (>= l_0_13_15 0.0))
(assert
 (>= l_0_13_16 0.0))
(assert
 (>= l_0_13_18 0.0))
(assert
 (>= l_0_13_21 0.0))
(assert
 (>= l_0_13_25 0.0))
(assert
 (>= l_0_13_30 0.0))
(assert
 (>= l_0_13_31 0.0))
(assert
 (>= l_0_13_33 0.0))
(assert
 (>= l_0_13_36 0.0))
(assert
 (>= l_0_13_40 0.0))
(assert
 (>= l_0_13_45 0.0))
(assert
 (>= l_0_13_46 0.0))
(assert
 (>= l_0_13_48 0.0))
(assert
 (>= l_0_13_51 0.0))
(assert
 (>= l_0_13_55 0.0))
(assert
 (>= l_0_13_60 0.0))
(assert
 (>= l_0_13_61 0.0))
(assert
 (>= l_0_13_63 0.0))
(assert
 (>= l_0_13_66 0.0))
(assert
 (>= l_0_13_70 0.0))
(assert
 (>= l_0_13_75 0.0))
(assert
 (let ((?x25112 (* l_0_14_81 l_0_14_81)))
 (let ((?x25110 (* l_0_14_80 l_0_14_80)))
 (let ((?x25108 (* l_0_14_79 l_0_14_79)))
 (let ((?x25106 (* l_0_14_66 l_0_14_66)))
 (let ((?x25104 (* l_0_14_65 l_0_14_65)))
 (let ((?x25102 (* l_0_14_64 l_0_14_64)))
 (let ((?x25091 (* l_0_14_31 l_0_14_31)))
 (let ((?x25088 (* 4.0 l_0_14_31)))
 (let ((?x25089 (* ?x25088 l_0_14_34)))
 (let ((?x25090 (- (- (* (* 4.0 l_0_14_16) l_0_14_19) (* l_0_14_16 l_0_14_16)) ?x25089)))
 (let ((?x25098 (+ (+ (+ ?x25090 ?x25091) (* 1.0 (* l_0_14_4 l_0_14_4))) (* 1.0 (* l_0_14_5 l_0_14_5)))))
 (let ((?x25107 (- (- (- (+ ?x25098 (* 1.0 (* l_0_14_6 l_0_14_6))) ?x25102) ?x25104) ?x25106)))
 (= (+ (- (- (- ?x25107 ?x25108) ?x25110) ?x25112) 1.0) 0.0))))))))))))))
(assert
 (let ((?x25174 (* l_0_14_90 l_0_14_90)))
 (let ((?x25172 (* l_0_14_89 l_0_14_89)))
 (let ((?x25170 (* l_0_14_88 l_0_14_88)))
 (let ((?x25168 (* l_0_14_87 l_0_14_87)))
 (let ((?x25166 (* l_0_14_86 l_0_14_86)))
 (let ((?x25164 (* l_0_14_75 l_0_14_75)))
 (let ((?x25162 (* l_0_14_74 l_0_14_74)))
 (let ((?x25160 (* l_0_14_73 l_0_14_73)))
 (let ((?x25158 (* l_0_14_72 l_0_14_72)))
 (let ((?x25156 (* l_0_14_71 l_0_14_71)))
 (let ((?x25091 (* l_0_14_31 l_0_14_31)))
 (let ((?x25088 (* 4.0 l_0_14_31)))
 (let ((?x25153 (* ?x25088 l_0_14_41)))
 (let ((?x25086 (* l_0_14_16 l_0_14_16)))
 (let ((?x25084 (* 4.0 l_0_14_16)))
 (let ((?x25150 (* ?x25084 l_0_14_26)))
 (let ((?x25140 (+ (* 1.0 (* l_0_14_11 l_0_14_11)) (* 1.0 (* l_0_14_12 l_0_14_12)))))
 (let ((?x25146 (+ (+ ?x25140 (* 1.0 (* l_0_14_13 l_0_14_13))) (* 1.0 (* l_0_14_14 l_0_14_14)))))
 (let ((?x25154 (+ (+ (- (+ ?x25146 (* 1.0 (* l_0_14_15 l_0_14_15))) ?x25150) ?x25086) ?x25153)))
 (let ((?x25167 (- (- (- (- (- (- (- ?x25154 ?x25091) ?x25156) ?x25158) ?x25160) ?x25162) ?x25164) ?x25166)))
 (= (- (- (- (- (- ?x25167 ?x25168) ?x25170) ?x25172) ?x25174) 1.0) 0.0))))))))))))))))))))))
(assert
 (let ((?x25086 (* l_0_14_16 l_0_14_16)))
 (let ((?x25200 (* 2.0 ?x25086)))
 (let ((?x25204 (- (+ (* (* 2.0 l_0_14_1) l_0_14_4) ?x25200) (* (* 2.0 l_0_14_31) l_0_14_31))))
 (let ((?x25210 (- (- ?x25204 (* (* 2.0 l_0_14_61) l_0_14_64)) (* (* 2.0 l_0_14_76) l_0_14_79))))
 (= (- ?x25210 2.0) 0.0))))))
(assert
 (let ((?x25091 (* l_0_14_31 l_0_14_31)))
 (let ((?x25216 (* 2.0 ?x25091)))
 (let ((?x25233 (- (* (* 2.0 l_0_14_1) l_0_14_11) (* (* 2.0 l_0_14_16) l_0_14_16))))
 (let ((?x25238 (- (- (+ ?x25233 ?x25216) (* (* 2.0 l_0_14_61) l_0_14_71)) (* (* 2.0 l_0_14_76) l_0_14_86))))
 (= (+ ?x25238 2.0) 0.0))))))
(assert
 (let ((?x25088 (* 4.0 l_0_14_31)))
 (let ((?x25257 (* ?x25088 l_0_14_31)))
 (let ((?x25086 (* l_0_14_16 l_0_14_16)))
 (let ((?x25255 (* 4.0 ?x25086)))
 (let ((?x25256 (+ (- (* (* 2.0 l_0_14_1) l_0_14_2) (* l_0_14_1 l_0_14_1)) ?x25255)))
 (let ((?x25262 (- (- (- ?x25256 ?x25257) (* (* 2.0 l_0_14_61) l_0_14_62)) (* (* 2.0 l_0_14_76) l_0_14_77))))
 (= (- ?x25262 4.0) 0.0))))))))
(assert
 (let ((?x25293 (* l_0_14_46 l_0_14_46)))
 (let ((?x25088 (* 4.0 l_0_14_31)))
 (let ((?x25257 (* ?x25088 l_0_14_31)))
 (let ((?x25086 (* l_0_14_16 l_0_14_16)))
 (let ((?x25255 (* 4.0 ?x25086)))
 (let ((?x25296 (- (+ (- (+ (* (* 2.0 l_0_14_1) l_0_14_7) ?x25255) ?x25257) ?x25293) (* (* 2.0 l_0_14_61) l_0_14_67))))
 (= (- (- ?x25296 (* (* 2.0 l_0_14_76) l_0_14_82)) 4.0) 0.0))))))))
(assert
 (let ((?x25334 (* l_0_14_78 l_0_14_78)))
 (let ((?x25332 (* l_0_14_77 l_0_14_77)))
 (let ((?x25330 (* l_0_14_63 l_0_14_63)))
 (let ((?x25328 (* l_0_14_62 l_0_14_62)))
 (let ((?x25325 (* 8.0 l_0_14_31)))
 (let ((?x25326 (* ?x25325 l_0_14_32)))
 (let ((?x25316 (* 8.0 l_0_14_16)))
 (let ((?x25317 (* ?x25316 l_0_14_17)))
 (let ((?x25321 (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_2) ?x25317) (* 1.0 (* l_0_14_2 l_0_14_2)))))
 (let ((?x25331 (- (- (- (+ ?x25321 (* 1.0 (* l_0_14_3 l_0_14_3))) ?x25326) ?x25328) ?x25330)))
 (= (- (- ?x25331 ?x25332) ?x25334) 0.0))))))))))))
(assert
 (let ((?x25325 (* 8.0 l_0_14_31)))
 (let ((?x25367 (* ?x25325 l_0_14_34)))
 (let ((?x25088 (* 4.0 l_0_14_31)))
 (let ((?x25365 (* ?x25088 l_0_14_32)))
 (let ((?x25362 (* 2.0 l_0_14_3)))
 (let ((?x25363 (* ?x25362 l_0_14_5)))
 (let ((?x25359 (* 2.0 l_0_14_2)))
 (let ((?x25360 (* ?x25359 l_0_14_4)))
 (let ((?x25316 (* 8.0 l_0_14_16)))
 (let ((?x25357 (* ?x25316 l_0_14_19)))
 (let ((?x25084 (* 4.0 l_0_14_16)))
 (let ((?x25355 (* ?x25084 l_0_14_17)))
 (let ((?x25364 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_4) ?x25355) ?x25357) ?x25360) ?x25363)))
 (let ((?x25374 (- (- (- (- ?x25364 ?x25365) ?x25367) (* (* 2.0 l_0_14_62) l_0_14_64)) (* (* 2.0 l_0_14_63) l_0_14_65))))
 (let ((?x25380 (- (- ?x25374 (* (* 2.0 l_0_14_77) l_0_14_79)) (* (* 2.0 l_0_14_78) l_0_14_80))))
 (= ?x25380 0.0)))))))))))))))))
(assert
 (let ((?x25325 (* 8.0 l_0_14_31)))
 (let ((?x25417 (* ?x25325 l_0_14_37)))
 (let ((?x25326 (* ?x25325 l_0_14_32)))
 (let ((?x25362 (* 2.0 l_0_14_3)))
 (let ((?x25414 (* ?x25362 l_0_14_8)))
 (let ((?x25359 (* 2.0 l_0_14_2)))
 (let ((?x25412 (* ?x25359 l_0_14_7)))
 (let ((?x25316 (* 8.0 l_0_14_16)))
 (let ((?x25410 (* ?x25316 l_0_14_22)))
 (let ((?x25411 (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_7) (* ?x25316 l_0_14_17)) ?x25410)))
 (let ((?x25421 (+ (- (- (+ (+ ?x25411 ?x25412) ?x25414) ?x25326) ?x25417) (* (* 2.0 l_0_14_46) l_0_14_47))))
 (let ((?x25425 (- (- ?x25421 (* (* 2.0 l_0_14_62) l_0_14_67)) (* (* 2.0 l_0_14_63) l_0_14_68))))
 (let ((?x25429 (- (- ?x25425 (* (* 2.0 l_0_14_77) l_0_14_82)) (* (* 2.0 l_0_14_78) l_0_14_83))))
 (= ?x25429 0.0)))))))))))))))
(assert
 (let ((?x25325 (* 8.0 l_0_14_31)))
 (let ((?x25471 (* ?x25325 l_0_14_41)))
 (let ((?x25088 (* 4.0 l_0_14_31)))
 (let ((?x25365 (* ?x25088 l_0_14_32)))
 (let ((?x25316 (* 8.0 l_0_14_16)))
 (let ((?x25468 (* ?x25316 l_0_14_26)))
 (let ((?x25084 (* 4.0 l_0_14_16)))
 (let ((?x25355 (* ?x25084 l_0_14_17)))
 (let ((?x25464 (* 2.0 l_0_14_12)))
 (let ((?x25465 (* ?x25464 l_0_14_3)))
 (let ((?x25463 (+ (* (* (- 2.0) l_0_14_1) l_0_14_11) (* (* 2.0 l_0_14_11) l_0_14_2))))
 (let ((?x25474 (- (- (+ (+ (- (+ ?x25463 ?x25465) ?x25355) ?x25468) ?x25365) ?x25471) (* (* 2.0 l_0_14_62) l_0_14_71))))
 (let ((?x25478 (- (- ?x25474 (* (* 2.0 l_0_14_63) l_0_14_72)) (* (* 2.0 l_0_14_77) l_0_14_86))))
 (= (- ?x25478 (* (* 2.0 l_0_14_78) l_0_14_87)) 0.0)))))))))))))))
(assert
 (let ((?x25511 (* 4.0 l_0_14_33)))
 (let ((?x25512 (* ?x25511 l_0_14_33)))
 (let ((?x25508 (* 4.0 l_0_14_32)))
 (let ((?x25509 (* ?x25508 l_0_14_32)))
 (let ((?x25322 (* l_0_14_3 l_0_14_3)))
 (let ((?x25319 (* l_0_14_2 l_0_14_2)))
 (let ((?x25503 (* l_0_14_18 l_0_14_18)))
 (let ((?x25504 (* 4.0 ?x25503)))
 (let ((?x19760 (* l_0_14_17 l_0_14_17)))
 (let ((?x19761 (* 4.0 ?x19760)))
 (= (- (- (- (- (+ ?x19761 ?x25504) ?x25319) ?x25322) ?x25509) ?x25512) 0.0))))))))))))
(assert
 (let ((?x25524 (* 8.0 l_0_14_33)))
 (let ((?x25525 (* ?x25524 l_0_14_35)))
 (let ((?x25518 (* 8.0 l_0_14_32)))
 (let ((?x25519 (* ?x25518 l_0_14_34)))
 (let ((?x25362 (* 2.0 l_0_14_3)))
 (let ((?x25363 (* ?x25362 l_0_14_5)))
 (let ((?x25359 (* 2.0 l_0_14_2)))
 (let ((?x25360 (* ?x25359 l_0_14_4)))
 (let ((?x19762 (* 8.0 l_0_14_18)))
 (let ((?x19768 (* ?x19762 l_0_14_20)))
 (let ((?x3788 (* 8.0 l_0_14_17)))
 (let ((?x19779 (* ?x3788 l_0_14_19)))
 (let ((?x19781 (+ (+ (+ ?x19779 (* 2.0 (* l_0_14_17 l_0_14_17))) ?x19768) (* 2.0 (* l_0_14_18 l_0_14_18)))))
 (let ((?x25523 (- (- (- (- ?x19781 ?x25360) ?x25363) ?x25519) (* (* 2.0 l_0_14_32) l_0_14_32))))
 (= (- (- ?x25523 ?x25525) (* (* 2.0 l_0_14_33) l_0_14_33)) 0.0))))))))))))))))
(assert
 (let ((?x25563 (* l_0_14_48 l_0_14_48)))
 (let ((?x25561 (* l_0_14_47 l_0_14_47)))
 (let ((?x25511 (* 4.0 l_0_14_33)))
 (let ((?x25512 (* ?x25511 l_0_14_33)))
 (let ((?x25524 (* 8.0 l_0_14_33)))
 (let ((?x25558 (* ?x25524 l_0_14_38)))
 (let ((?x25508 (* 4.0 l_0_14_32)))
 (let ((?x25509 (* ?x25508 l_0_14_32)))
 (let ((?x25518 (* 8.0 l_0_14_32)))
 (let ((?x25555 (* ?x25518 l_0_14_37)))
 (let ((?x25362 (* 2.0 l_0_14_3)))
 (let ((?x25414 (* ?x25362 l_0_14_8)))
 (let ((?x25359 (* 2.0 l_0_14_2)))
 (let ((?x25412 (* ?x25359 l_0_14_7)))
 (let ((?x25503 (* l_0_14_18 l_0_14_18)))
 (let ((?x25504 (* 4.0 ?x25503)))
 (let ((?x19762 (* 8.0 l_0_14_18)))
 (let ((?x25550 (* ?x19762 l_0_14_23)))
 (let ((?x19760 (* l_0_14_17 l_0_14_17)))
 (let ((?x19761 (* 4.0 ?x19760)))
 (let ((?x3788 (* 8.0 l_0_14_17)))
 (let ((?x25548 (* ?x3788 l_0_14_22)))
 (let ((?x25557 (- (- (- (- (+ (+ (+ ?x25548 ?x19761) ?x25550) ?x25504) ?x25412) ?x25414) ?x25555) ?x25509)))
 (= (+ (+ (- (- ?x25557 ?x25558) ?x25512) ?x25561) ?x25563) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x13322 (* l_0_14_33 l_0_14_33)))
 (let ((?x14417 (* 2.0 ?x13322)))
 (let ((?x25524 (* 8.0 l_0_14_33)))
 (let ((?x25587 (* ?x25524 l_0_14_42)))
 (let ((?x6601 (* l_0_14_32 l_0_14_32)))
 (let ((?x7612 (* 2.0 ?x6601)))
 (let ((?x25518 (* 8.0 l_0_14_32)))
 (let ((?x25584 (* ?x25518 l_0_14_41)))
 (let ((?x19762 (* 8.0 l_0_14_18)))
 (let ((?x25579 (* ?x19762 l_0_14_27)))
 (let ((?x3788 (* 8.0 l_0_14_17)))
 (let ((?x25574 (* ?x3788 l_0_14_26)))
 (let ((?x25464 (* 2.0 l_0_14_12)))
 (let ((?x25465 (* ?x25464 l_0_14_3)))
 (let ((?x25578 (- (+ (- (* (* (- 2.0) l_0_14_11) l_0_14_2) ?x25465) ?x25574) (* (* 2.0 l_0_14_17) l_0_14_17))))
 (let ((?x25586 (+ (- (- (+ ?x25578 ?x25579) (* (* 2.0 l_0_14_18) l_0_14_18)) ?x25584) ?x7612)))
 (= (+ (- ?x25586 ?x25587) ?x14417) 0.0))))))))))))))))))
(assert
 (let ((?x25099 (* l_0_14_6 l_0_14_6)))
 (let ((?x25096 (* l_0_14_5 l_0_14_5)))
 (let ((?x25093 (* l_0_14_4 l_0_14_4)))
 (let ((?x25631 (* 4.0 l_0_14_36)))
 (let ((?x25632 (* ?x25631 l_0_14_36)))
 (let ((?x25628 (* 4.0 l_0_14_35)))
 (let ((?x25629 (* ?x25628 l_0_14_35)))
 (let ((?x25625 (* 4.0 l_0_14_34)))
 (let ((?x25626 (* ?x25625 l_0_14_34)))
 (let ((?x25511 (* 4.0 l_0_14_33)))
 (let ((?x25623 (* ?x25511 l_0_14_35)))
 (let ((?x25508 (* 4.0 l_0_14_32)))
 (let ((?x25621 (* ?x25508 l_0_14_34)))
 (let ((?x25202 (* 2.0 l_0_14_31)))
 (let ((?x25619 (* ?x25202 l_0_14_32)))
 (let ((?x25616 (* l_0_14_21 l_0_14_21)))
 (let ((?x25617 (* 4.0 ?x25616)))
 (let ((?x25613 (* l_0_14_20 l_0_14_20)))
 (let ((?x25614 (* 4.0 ?x25613)))
 (let ((?x25610 (* l_0_14_19 l_0_14_19)))
 (let ((?x25611 (* 4.0 ?x25610)))
 (let ((?x14536 (* 4.0 l_0_14_18)))
 (let ((?x14556 (* ?x14536 l_0_14_20)))
 (let ((?x14538 (* 4.0 l_0_14_17)))
 (let ((?x19901 (* ?x14538 l_0_14_19)))
 (let ((?x25615 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_16) l_0_14_17) ?x19901) ?x14556) ?x25611) ?x25614)))
 (let ((?x25633 (- (- (- (- (- (+ (+ ?x25615 ?x25617) ?x25619) ?x25621) ?x25623) ?x25626) ?x25629) ?x25632)))
 (= (- (- (- ?x25633 ?x25093) ?x25096) ?x25099) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x25693 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x25690 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x25681 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x25677 (* 8.0 l_0_14_36)))
 (let ((?x25678 (* ?x25677 l_0_14_39)))
 (let ((?x25674 (* 8.0 l_0_14_35)))
 (let ((?x25675 (* ?x25674 l_0_14_38)))
 (let ((?x25671 (* 8.0 l_0_14_34)))
 (let ((?x25672 (* ?x25671 l_0_14_37)))
 (let ((?x25511 (* 4.0 l_0_14_33)))
 (let ((?x25669 (* ?x25511 l_0_14_38)))
 (let ((?x25524 (* 8.0 l_0_14_33)))
 (let ((?x25525 (* ?x25524 l_0_14_35)))
 (let ((?x25508 (* 4.0 l_0_14_32)))
 (let ((?x25666 (* ?x25508 l_0_14_37)))
 (let ((?x25518 (* 8.0 l_0_14_32)))
 (let ((?x25519 (* ?x25518 l_0_14_34)))
 (let ((?x25662 (* 8.0 l_0_14_21)))
 (let ((?x25663 (* ?x25662 l_0_14_24)))
 (let ((?x25659 (* 8.0 l_0_14_20)))
 (let ((?x25660 (* ?x25659 l_0_14_23)))
 (let ((?x19940 (* 8.0 l_0_14_19)))
 (let ((?x14586 (* ?x19940 l_0_14_22)))
 (let ((?x14536 (* 4.0 l_0_14_18)))
 (let ((?x19935 (* ?x14536 l_0_14_23)))
 (let ((?x19762 (* 8.0 l_0_14_18)))
 (let ((?x19768 (* ?x19762 l_0_14_20)))
 (let ((?x14538 (* 4.0 l_0_14_17)))
 (let ((?x19961 (* ?x14538 l_0_14_22)))
 (let ((?x3788 (* 8.0 l_0_14_17)))
 (let ((?x19779 (* ?x3788 l_0_14_19)))
 (let ((?x25665 (- (+ (+ (+ (+ (+ (+ ?x19779 ?x19961) ?x19768) ?x19935) ?x14586) ?x25660) ?x25663) ?x25519)))
 (let ((?x25682 (- (- (- (- (- (- (- ?x25665 ?x25666) ?x25525) ?x25669) ?x25672) ?x25675) ?x25678) ?x25681)))
 (let ((?x25688 (+ (+ ?x25682 (* (* 2.0 l_0_14_47) l_0_14_49)) (* (* 2.0 l_0_14_48) l_0_14_50))))
 (= (- (- ?x25688 ?x25690) ?x25693) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25677 (* 8.0 l_0_14_36)))
 (let ((?x25745 (* ?x25677 l_0_14_43)))
 (let ((?x25674 (* 8.0 l_0_14_35)))
 (let ((?x25743 (* ?x25674 l_0_14_42)))
 (let ((?x25671 (* 8.0 l_0_14_34)))
 (let ((?x25741 (* ?x25671 l_0_14_41)))
 (let ((?x25511 (* 4.0 l_0_14_33)))
 (let ((?x25739 (* ?x25511 l_0_14_42)))
 (let ((?x25623 (* ?x25511 l_0_14_35)))
 (let ((?x25508 (* 4.0 l_0_14_32)))
 (let ((?x25736 (* ?x25508 l_0_14_41)))
 (let ((?x25621 (* ?x25508 l_0_14_34)))
 (let ((?x25662 (* 8.0 l_0_14_21)))
 (let ((?x25733 (* ?x25662 l_0_14_28)))
 (let ((?x25659 (* 8.0 l_0_14_20)))
 (let ((?x25731 (* ?x25659 l_0_14_27)))
 (let ((?x19940 (* 8.0 l_0_14_19)))
 (let ((?x25729 (* ?x19940 l_0_14_26)))
 (let ((?x14536 (* 4.0 l_0_14_18)))
 (let ((?x25727 (* ?x14536 l_0_14_27)))
 (let ((?x14556 (* ?x14536 l_0_14_20)))
 (let ((?x14538 (* 4.0 l_0_14_17)))
 (let ((?x25724 (* ?x14538 l_0_14_26)))
 (let ((?x19901 (* ?x14538 l_0_14_19)))
 (let ((?x25720 (* 2.0 l_0_14_13)))
 (let ((?x25721 (* ?x25720 l_0_14_6)))
 (let ((?x25464 (* 2.0 l_0_14_12)))
 (let ((?x25718 (* ?x25464 l_0_14_5)))
 (let ((?x25725 (+ (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_4) ?x25718) ?x25721) ?x19901) ?x25724)))
 (let ((?x25737 (- (+ (+ (+ (+ (+ (- ?x25725 ?x14556) ?x25727) ?x25729) ?x25731) ?x25733) ?x25621) ?x25736)))
 (= (- (- (- (- (+ ?x25737 ?x25623) ?x25739) ?x25741) ?x25743) ?x25745) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x25818 (* l_0_14_9 l_0_14_9)))
 (let ((?x25816 (* l_0_14_8 l_0_14_8)))
 (let ((?x25814 (* l_0_14_7 l_0_14_7)))
 (let ((?x25807 (* 4.0 l_0_14_40)))
 (let ((?x25808 (* ?x25807 l_0_14_40)))
 (let ((?x25804 (* 4.0 l_0_14_39)))
 (let ((?x25805 (* ?x25804 l_0_14_39)))
 (let ((?x25801 (* 4.0 l_0_14_38)))
 (let ((?x25802 (* ?x25801 l_0_14_38)))
 (let ((?x25798 (* 4.0 l_0_14_37)))
 (let ((?x25799 (* ?x25798 l_0_14_37)))
 (let ((?x25524 (* 8.0 l_0_14_33)))
 (let ((?x25558 (* ?x25524 l_0_14_38)))
 (let ((?x25518 (* 8.0 l_0_14_32)))
 (let ((?x25555 (* ?x25518 l_0_14_37)))
 (let ((?x25793 (* l_0_14_25 l_0_14_25)))
 (let ((?x25794 (* 4.0 ?x25793)))
 (let ((?x25790 (* l_0_14_24 l_0_14_24)))
 (let ((?x25791 (* 4.0 ?x25790)))
 (let ((?x25787 (* l_0_14_23 l_0_14_23)))
 (let ((?x25788 (* 4.0 ?x25787)))
 (let ((?x25784 (* l_0_14_22 l_0_14_22)))
 (let ((?x25785 (* 4.0 ?x25784)))
 (let ((?x19762 (* 8.0 l_0_14_18)))
 (let ((?x25550 (* ?x19762 l_0_14_23)))
 (let ((?x3788 (* 8.0 l_0_14_17)))
 (let ((?x25548 (* ?x3788 l_0_14_22)))
 (let ((?x25792 (+ (+ (+ (+ (+ (* (- l_0_14_10) l_0_14_10) ?x25548) ?x25550) ?x25785) ?x25788) ?x25791)))
 (let ((?x25809 (- (- (- (- (- (- (+ ?x25792 ?x25794) ?x25555) ?x25558) ?x25799) ?x25802) ?x25805) ?x25808)))
 (let ((?x25813 (+ (+ ?x25809 (* (* 2.0 l_0_14_47) l_0_14_52)) (* (* 2.0 l_0_14_48) l_0_14_53))))
 (= (- (- (- ?x25813 ?x25814) ?x25816) ?x25818) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x25868 (* (* 8.0 l_0_14_40) l_0_14_44)))
 (let ((?x25865 (* (* 8.0 l_0_14_39) l_0_14_43)))
 (let ((?x25862 (* (* 8.0 l_0_14_38) l_0_14_42)))
 (let ((?x25859 (* (* 8.0 l_0_14_37) l_0_14_41)))
 (let ((?x25524 (* 8.0 l_0_14_33)))
 (let ((?x25587 (* ?x25524 l_0_14_42)))
 (let ((?x25511 (* 4.0 l_0_14_33)))
 (let ((?x25669 (* ?x25511 l_0_14_38)))
 (let ((?x25518 (* 8.0 l_0_14_32)))
 (let ((?x25584 (* ?x25518 l_0_14_41)))
 (let ((?x25508 (* 4.0 l_0_14_32)))
 (let ((?x25666 (* ?x25508 l_0_14_37)))
 (let ((?x25852 (* (* 8.0 l_0_14_25) l_0_14_29)))
 (let ((?x25849 (* (* 8.0 l_0_14_24) l_0_14_28)))
 (let ((?x25846 (* (* 8.0 l_0_14_23) l_0_14_27)))
 (let ((?x25843 (* (* 8.0 l_0_14_22) l_0_14_26)))
 (let ((?x19762 (* 8.0 l_0_14_18)))
 (let ((?x25579 (* ?x19762 l_0_14_27)))
 (let ((?x14536 (* 4.0 l_0_14_18)))
 (let ((?x19935 (* ?x14536 l_0_14_23)))
 (let ((?x3788 (* 8.0 l_0_14_17)))
 (let ((?x25574 (* ?x3788 l_0_14_26)))
 (let ((?x14538 (* 4.0 l_0_14_17)))
 (let ((?x19961 (* ?x14538 l_0_14_22)))
 (let ((?x25720 (* 2.0 l_0_14_13)))
 (let ((?x25836 (* ?x25720 l_0_14_9)))
 (let ((?x25464 (* 2.0 l_0_14_12)))
 (let ((?x25834 (* ?x25464 l_0_14_8)))
 (let ((?x25461 (* 2.0 l_0_14_11)))
 (let ((?x25832 (* ?x25461 l_0_14_7)))
 (let ((?x25838 (- (- (- (- (* (* (- 2.0) l_0_14_10) l_0_14_14) ?x25832) ?x25834) ?x25836) ?x19961)))
 (let ((?x25853 (+ (+ (+ (+ (+ (- (+ ?x25838 ?x25574) ?x19935) ?x25579) ?x25843) ?x25846) ?x25849) ?x25852)))
 (let ((?x25866 (- (- (- (- (+ (- (+ ?x25853 ?x25666) ?x25584) ?x25669) ?x25587) ?x25859) ?x25862) ?x25865)))
 (let ((?x25873 (+ (+ (- ?x25866 ?x25868) (* (* 2.0 l_0_14_47) l_0_14_56)) (* (* 2.0 l_0_14_48) l_0_14_57))))
 (= ?x25873 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25957 (* (* 4.0 l_0_14_45) l_0_14_45)))
 (let ((?x25954 (* (* 4.0 l_0_14_44) l_0_14_44)))
 (let ((?x25951 (* (* 4.0 l_0_14_43) l_0_14_43)))
 (let ((?x25948 (* (* 4.0 l_0_14_42) l_0_14_42)))
 (let ((?x25945 (* (* 4.0 l_0_14_41) l_0_14_41)))
 (let ((?x25511 (* 4.0 l_0_14_33)))
 (let ((?x25739 (* ?x25511 l_0_14_42)))
 (let ((?x25508 (* 4.0 l_0_14_32)))
 (let ((?x25736 (* ?x25508 l_0_14_41)))
 (let ((?x25202 (* 2.0 l_0_14_31)))
 (let ((?x25619 (* ?x25202 l_0_14_32)))
 (let ((?x25938 (* l_0_14_30 l_0_14_30)))
 (let ((?x25939 (* 4.0 ?x25938)))
 (let ((?x25935 (* l_0_14_29 l_0_14_29)))
 (let ((?x25936 (* 4.0 ?x25935)))
 (let ((?x25932 (* l_0_14_28 l_0_14_28)))
 (let ((?x25933 (* 4.0 ?x25932)))
 (let ((?x25929 (* l_0_14_27 l_0_14_27)))
 (let ((?x25930 (* 4.0 ?x25929)))
 (let ((?x25926 (* l_0_14_26 l_0_14_26)))
 (let ((?x25927 (* 4.0 ?x25926)))
 (let ((?x14536 (* 4.0 l_0_14_18)))
 (let ((?x25727 (* ?x14536 l_0_14_27)))
 (let ((?x14538 (* 4.0 l_0_14_17)))
 (let ((?x25724 (* ?x14538 l_0_14_26)))
 (let ((?x25147 (* l_0_14_15 l_0_14_15)))
 (let ((?x25144 (* l_0_14_14 l_0_14_14)))
 (let ((?x25141 (* l_0_14_13 l_0_14_13)))
 (let ((?x25919 (- (- (* (- l_0_14_11) l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x25141)))
 (let ((?x25924 (- (+ (- (- ?x25919 ?x25144) ?x25147) (* (* 2.0 l_0_14_16) l_0_14_17)) ?x25724)))
 (let ((?x25941 (- (+ (+ (+ (+ (+ (- ?x25924 ?x25727) ?x25927) ?x25930) ?x25933) ?x25936) ?x25939) ?x25619)))
 (let ((?x25958 (- (- (- (- (- (+ (+ ?x25941 ?x25736) ?x25739) ?x25945) ?x25948) ?x25951) ?x25954) ?x25957)))
 (= ?x25958 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25988 (* l_0_14_76 l_0_14_76)))
 (let ((?x25989 (- (- (* 1.0 (* l_0_14_1 l_0_14_1)) (* l_0_14_61 l_0_14_61)) ?x25988)))
 (= ?x25989 0.0))))
(assert
 (let ((?x25693 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x25690 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x25681 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x25088 (* 4.0 l_0_14_31)))
 (let ((?x25998 (* ?x25088 l_0_14_37)))
 (let ((?x25325 (* 8.0 l_0_14_31)))
 (let ((?x25367 (* ?x25325 l_0_14_34)))
 (let ((?x25084 (* 4.0 l_0_14_16)))
 (let ((?x25995 (* ?x25084 l_0_14_22)))
 (let ((?x25316 (* 8.0 l_0_14_16)))
 (let ((?x25357 (* ?x25316 l_0_14_19)))
 (let ((?x26002 (+ (+ (- (- (+ ?x25357 ?x25995) ?x25367) ?x25998) ?x25681) (* (* 2.0 l_0_14_46) l_0_14_49))))
 (let ((?x26010 (- (- (+ (+ ?x26002 ?x25690) ?x25693) (* (* 2.0 l_0_14_64) l_0_14_67)) (* (* 2.0 l_0_14_65) l_0_14_68))))
 (let ((?x26016 (- (- ?x26010 (* (* 2.0 l_0_14_66) l_0_14_69)) (* (* 2.0 l_0_14_79) l_0_14_82))))
 (let ((?x26022 (- (- ?x26016 (* (* 2.0 l_0_14_80) l_0_14_83)) (* (* 2.0 l_0_14_81) l_0_14_84))))
 (= ?x26022 0.0)))))))))))))))))
(assert
 (let ((?x25088 (* 4.0 l_0_14_31)))
 (let ((?x25153 (* ?x25088 l_0_14_41)))
 (let ((?x25089 (* ?x25088 l_0_14_34)))
 (let ((?x25084 (* 4.0 l_0_14_16)))
 (let ((?x25150 (* ?x25084 l_0_14_26)))
 (let ((?x25085 (* ?x25084 l_0_14_19)))
 (let ((?x25720 (* 2.0 l_0_14_13)))
 (let ((?x25721 (* ?x25720 l_0_14_6)))
 (let ((?x25464 (* 2.0 l_0_14_12)))
 (let ((?x25718 (* ?x25464 l_0_14_5)))
 (let ((?x26054 (+ (- (+ (+ (* (* 2.0 l_0_14_11) l_0_14_4) ?x25718) ?x25721) ?x25085) ?x25150)))
 (let ((?x26060 (- (- (- (+ ?x26054 ?x25089) ?x25153) (* (* 2.0 l_0_14_64) l_0_14_71)) (* (* 2.0 l_0_14_65) l_0_14_72))))
 (let ((?x26064 (- (- ?x26060 (* (* 2.0 l_0_14_66) l_0_14_73)) (* (* 2.0 l_0_14_79) l_0_14_86))))
 (let ((?x26068 (- (- ?x26064 (* (* 2.0 l_0_14_80) l_0_14_87)) (* (* 2.0 l_0_14_81) l_0_14_88))))
 (= ?x26068 0.0))))))))))))))))
(assert
 (let ((?x26101 (* l_0_14_85 l_0_14_85)))
 (let ((?x26099 (* l_0_14_84 l_0_14_84)))
 (let ((?x26097 (* l_0_14_83 l_0_14_83)))
 (let ((?x26095 (* l_0_14_82 l_0_14_82)))
 (let ((?x26091 (* l_0_14_70 l_0_14_70)))
 (let ((?x26087 (* l_0_14_69 l_0_14_69)))
 (let ((?x26085 (* l_0_14_68 l_0_14_68)))
 (let ((?x26083 (* l_0_14_67 l_0_14_67)))
 (let ((?x25325 (* 8.0 l_0_14_31)))
 (let ((?x25417 (* ?x25325 l_0_14_37)))
 (let ((?x25316 (* 8.0 l_0_14_16)))
 (let ((?x25410 (* ?x25316 l_0_14_22)))
 (let ((?x26082 (+ (- (+ (* 1.0 (* l_0_14_10 l_0_14_10)) ?x25410) ?x25417) (* (* 2.0 l_0_14_46) l_0_14_52))))
 (let ((?x26090 (+ (- (- (- ?x26082 ?x26083) ?x26085) ?x26087) (* 1.0 (* l_0_14_7 l_0_14_7)))))
 (let ((?x26098 (- (- (+ (- ?x26090 ?x26091) (* 1.0 (* l_0_14_8 l_0_14_8))) ?x26095) ?x26097)))
 (= (+ (- (- ?x26098 ?x26099) ?x26101) (* 1.0 (* l_0_14_9 l_0_14_9))) 0.0)))))))))))))))))
(assert
 (let ((?x25325 (* 8.0 l_0_14_31)))
 (let ((?x25471 (* ?x25325 l_0_14_41)))
 (let ((?x25088 (* 4.0 l_0_14_31)))
 (let ((?x25998 (* ?x25088 l_0_14_37)))
 (let ((?x25316 (* 8.0 l_0_14_16)))
 (let ((?x25468 (* ?x25316 l_0_14_26)))
 (let ((?x25084 (* 4.0 l_0_14_16)))
 (let ((?x25995 (* ?x25084 l_0_14_22)))
 (let ((?x25720 (* 2.0 l_0_14_13)))
 (let ((?x25836 (* ?x25720 l_0_14_9)))
 (let ((?x25464 (* 2.0 l_0_14_12)))
 (let ((?x25834 (* ?x25464 l_0_14_8)))
 (let ((?x25461 (* 2.0 l_0_14_11)))
 (let ((?x25832 (* ?x25461 l_0_14_7)))
 (let ((?x26125 (- (+ (+ (+ (* (* 2.0 l_0_14_10) l_0_14_14) ?x25832) ?x25834) ?x25836) ?x25995)))
 (let ((?x26130 (+ (- (+ (+ ?x26125 ?x25468) ?x25998) ?x25471) (* (* 2.0 l_0_14_46) l_0_14_56))))
 (let ((?x26136 (- (- ?x26130 (* (* 2.0 l_0_14_67) l_0_14_71)) (* (* 2.0 l_0_14_68) l_0_14_72))))
 (let ((?x26142 (- (- ?x26136 (* (* 2.0 l_0_14_69) l_0_14_73)) (* (* 2.0 l_0_14_70) l_0_14_74))))
 (let ((?x26148 (- (- ?x26142 (* (* 2.0 l_0_14_82) l_0_14_86)) (* (* 2.0 l_0_14_83) l_0_14_87))))
 (let ((?x26154 (- (- ?x26148 (* (* 2.0 l_0_14_84) l_0_14_88)) (* (* 2.0 l_0_14_85) l_0_14_89))))
 (= ?x26154 0.0))))))))))))))))))))))
(assert
 (let ((?x25202 (* 2.0 l_0_14_31)))
 (let ((?x26186 (* ?x25202 l_0_14_34)))
 (let ((?x25616 (* l_0_14_21 l_0_14_21)))
 (let ((?x26184 (* 2.0 ?x25616)))
 (let ((?x25613 (* l_0_14_20 l_0_14_20)))
 (let ((?x26182 (* 2.0 ?x25613)))
 (let ((?x25610 (* l_0_14_19 l_0_14_19)))
 (let ((?x26180 (* 2.0 ?x25610)))
 (let ((?x26187 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_16) l_0_14_19) ?x26180) ?x26182) ?x26184) ?x26186)))
 (let ((?x26193 (- (- ?x26187 (* (* 2.0 l_0_14_34) l_0_14_34)) (* (* 2.0 l_0_14_35) l_0_14_35))))
 (= (- ?x26193 (* (* 2.0 l_0_14_36) l_0_14_36)) 0.0))))))))))))
(assert
 (let ((?x26243 (* l_0_14_51 l_0_14_51)))
 (let ((?x26241 (* l_0_14_50 l_0_14_50)))
 (let ((?x26239 (* l_0_14_49 l_0_14_49)))
 (let ((?x25631 (* 4.0 l_0_14_36)))
 (let ((?x25632 (* ?x25631 l_0_14_36)))
 (let ((?x26236 (* ?x25631 l_0_14_39)))
 (let ((?x25628 (* 4.0 l_0_14_35)))
 (let ((?x25629 (* ?x25628 l_0_14_35)))
 (let ((?x26233 (* ?x25628 l_0_14_38)))
 (let ((?x25625 (* 4.0 l_0_14_34)))
 (let ((?x25626 (* ?x25625 l_0_14_34)))
 (let ((?x26230 (* ?x25625 l_0_14_37)))
 (let ((?x25202 (* 2.0 l_0_14_31)))
 (let ((?x26228 (* ?x25202 l_0_14_37)))
 (let ((?x25616 (* l_0_14_21 l_0_14_21)))
 (let ((?x25617 (* 4.0 ?x25616)))
 (let ((?x26224 (* 4.0 l_0_14_21)))
 (let ((?x26225 (* ?x26224 l_0_14_24)))
 (let ((?x25613 (* l_0_14_20 l_0_14_20)))
 (let ((?x25614 (* 4.0 ?x25613)))
 (let ((?x26220 (* 4.0 l_0_14_20)))
 (let ((?x26221 (* ?x26220 l_0_14_23)))
 (let ((?x25610 (* l_0_14_19 l_0_14_19)))
 (let ((?x25611 (* 4.0 ?x25610)))
 (let ((?x26218 (+ (* (* (- 2.0) l_0_14_16) l_0_14_22) (* (* 4.0 l_0_14_19) l_0_14_22))))
 (let ((?x26231 (- (+ (+ (+ (+ (+ (+ ?x26218 ?x25611) ?x26221) ?x25614) ?x26225) ?x25617) ?x26228) ?x26230)))
 (let ((?x26242 (+ (+ (- (- (- (- (- ?x26231 ?x25626) ?x26233) ?x25629) ?x26236) ?x25632) ?x26239) ?x26241)))
 (= (+ ?x26242 ?x26243) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x7714 (* l_0_14_36 l_0_14_36)))
 (let ((?x26206 (* 2.0 ?x7714)))
 (let ((?x25631 (* 4.0 l_0_14_36)))
 (let ((?x26298 (* ?x25631 l_0_14_43)))
 (let ((?x7705 (* l_0_14_35 l_0_14_35)))
 (let ((?x9002 (* 2.0 ?x7705)))
 (let ((?x25628 (* 4.0 l_0_14_35)))
 (let ((?x26295 (* ?x25628 l_0_14_42)))
 (let ((?x19934 (* l_0_14_34 l_0_14_34)))
 (let ((?x26199 (* 2.0 ?x19934)))
 (let ((?x25625 (* 4.0 l_0_14_34)))
 (let ((?x26292 (* ?x25625 l_0_14_41)))
 (let ((?x25202 (* 2.0 l_0_14_31)))
 (let ((?x26290 (* ?x25202 l_0_14_41)))
 (let ((?x26224 (* 4.0 l_0_14_21)))
 (let ((?x26285 (* ?x26224 l_0_14_28)))
 (let ((?x26220 (* 4.0 l_0_14_20)))
 (let ((?x26280 (* ?x26220 l_0_14_27)))
 (let ((?x26216 (* 4.0 l_0_14_19)))
 (let ((?x26275 (* ?x26216 l_0_14_26)))
 (let ((?x26279 (- (+ (* (* (- 2.0) l_0_14_16) l_0_14_26) ?x26275) (* (* 2.0 l_0_14_19) l_0_14_19))))
 (let ((?x26289 (- (+ (- (+ ?x26279 ?x26280) (* (* 2.0 l_0_14_20) l_0_14_20)) ?x26285) (* (* 2.0 l_0_14_21) l_0_14_21))))
 (let ((?x26300 (+ (- (+ (- (+ (- (+ ?x26289 ?x26290) ?x26292) ?x26199) ?x26295) ?x9002) ?x26298) ?x26206)))
 (= ?x26300 0.0)))))))))))))))))))))))))
(assert
 (let ((?x13322 (* l_0_14_33 l_0_14_33)))
 (let ((?x6601 (* l_0_14_32 l_0_14_32)))
 (let ((?x26323 (+ (- (* (- l_0_14_17) l_0_14_17) (* l_0_14_18 l_0_14_18)) ?x6601)))
 (= (+ ?x26323 ?x13322) 0.0)))))
(assert
 (let ((?x25527 (* 2.0 l_0_14_33)))
 (let ((?x26338 (* ?x25527 l_0_14_35)))
 (let ((?x25521 (* 2.0 l_0_14_32)))
 (let ((?x26336 (* ?x25521 l_0_14_34)))
 (let ((?x25581 (* 2.0 l_0_14_18)))
 (let ((?x26334 (* ?x25581 l_0_14_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_17) l_0_14_19) ?x26334) ?x26336) ?x26338) 0.0))))))))
(assert
 (let ((?x25527 (* 2.0 l_0_14_33)))
 (let ((?x26353 (* ?x25527 l_0_14_38)))
 (let ((?x25521 (* 2.0 l_0_14_32)))
 (let ((?x26351 (* ?x25521 l_0_14_37)))
 (let ((?x25581 (* 2.0 l_0_14_18)))
 (let ((?x9156 (* ?x25581 l_0_14_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_17) l_0_14_22) ?x9156) ?x26351) ?x26353) 0.0))))))))
(assert
 (let ((?x25527 (* 2.0 l_0_14_33)))
 (let ((?x26372 (* ?x25527 l_0_14_42)))
 (let ((?x25521 (* 2.0 l_0_14_32)))
 (let ((?x26370 (* ?x25521 l_0_14_41)))
 (let ((?x25581 (* 2.0 l_0_14_18)))
 (let ((?x26362 (* ?x25581 l_0_14_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_17) l_0_14_26) ?x26362) ?x26370) ?x26372) 0.0))))))))
(assert
 (let ((?x7714 (* l_0_14_36 l_0_14_36)))
 (let ((?x7705 (* l_0_14_35 l_0_14_35)))
 (let ((?x19934 (* l_0_14_34 l_0_14_34)))
 (let ((?x25616 (* l_0_14_21 l_0_14_21)))
 (let ((?x26389 (- (- (* (- l_0_14_19) l_0_14_19) (* l_0_14_20 l_0_14_20)) ?x25616)))
 (= (+ (+ (+ ?x26389 ?x19934) ?x7705) ?x7714) 0.0)))))))
(assert
 (let ((?x26194 (* 2.0 l_0_14_36)))
 (let ((?x26413 (* ?x26194 l_0_14_39)))
 (let ((?x26191 (* 2.0 l_0_14_35)))
 (let ((?x26411 (* ?x26191 l_0_14_38)))
 (let ((?x26188 (* 2.0 l_0_14_34)))
 (let ((?x26409 (* ?x26188 l_0_14_37)))
 (let ((?x26287 (* 2.0 l_0_14_21)))
 (let ((?x26407 (* ?x26287 l_0_14_24)))
 (let ((?x26282 (* 2.0 l_0_14_20)))
 (let ((?x26405 (* ?x26282 l_0_14_23)))
 (let ((?x26412 (+ (+ (- (- (* (* (- 2.0) l_0_14_19) l_0_14_22) ?x26405) ?x26407) ?x26409) ?x26411)))
 (= (+ ?x26412 ?x26413) 0.0)))))))))))))
(assert
 (let ((?x26194 (* 2.0 l_0_14_36)))
 (let ((?x26432 (* ?x26194 l_0_14_43)))
 (let ((?x26191 (* 2.0 l_0_14_35)))
 (let ((?x26430 (* ?x26191 l_0_14_42)))
 (let ((?x26188 (* 2.0 l_0_14_34)))
 (let ((?x26428 (* ?x26188 l_0_14_41)))
 (let ((?x26287 (* 2.0 l_0_14_21)))
 (let ((?x26420 (* ?x26287 l_0_14_28)))
 (let ((?x26282 (* 2.0 l_0_14_20)))
 (let ((?x15348 (* ?x26282 l_0_14_27)))
 (let ((?x26431 (+ (+ (- (- (* (* (- 2.0) l_0_14_19) l_0_14_26) ?x15348) ?x26420) ?x26428) ?x26430)))
 (= (+ ?x26431 ?x26432) 0.0)))))))))))))
(assert
 (let ((?x7955 (* l_0_14_40 l_0_14_40)))
 (let ((?x20151 (* l_0_14_39 l_0_14_39)))
 (let ((?x14834 (* l_0_14_38 l_0_14_38)))
 (let ((?x7900 (* l_0_14_37 l_0_14_37)))
 (let ((?x25793 (* l_0_14_25 l_0_14_25)))
 (let ((?x25790 (* l_0_14_24 l_0_14_24)))
 (let ((?x26448 (- (- (* (- l_0_14_22) l_0_14_22) (* l_0_14_23 l_0_14_23)) ?x25790)))
 (= (+ (+ (+ (+ (- ?x26448 ?x25793) ?x7900) ?x14834) ?x20151) ?x7955) 0.0)))))))))
(assert
 (let ((?x26484 (* 2.0 l_0_14_40)))
 (let ((?x26485 (* ?x26484 l_0_14_44)))
 (let ((?x26481 (* 2.0 l_0_14_39)))
 (let ((?x26482 (* ?x26481 l_0_14_43)))
 (let ((?x26478 (* 2.0 l_0_14_38)))
 (let ((?x26479 (* ?x26478 l_0_14_42)))
 (let ((?x26475 (* 2.0 l_0_14_37)))
 (let ((?x26476 (* ?x26475 l_0_14_41)))
 (let ((?x26472 (* 2.0 l_0_14_25)))
 (let ((?x26473 (* ?x26472 l_0_14_29)))
 (let ((?x26469 (* 2.0 l_0_14_24)))
 (let ((?x26470 (* ?x26469 l_0_14_28)))
 (let ((?x26466 (* 2.0 l_0_14_23)))
 (let ((?x26467 (* ?x26466 l_0_14_27)))
 (let ((?x26477 (+ (- (- (- (* (* (- 2.0) l_0_14_22) l_0_14_26) ?x26467) ?x26470) ?x26473) ?x26476)))
 (= (+ (+ (+ ?x26477 ?x26479) ?x26482) ?x26485) 0.0)))))))))))))))))
(assert
 (let ((?x25974 (* l_0_14_45 l_0_14_45)))
 (let ((?x20338 (* l_0_14_44 l_0_14_44)))
 (let ((?x8280 (* l_0_14_43 l_0_14_43)))
 (let ((?x15004 (* l_0_14_42 l_0_14_42)))
 (let ((?x8265 (* l_0_14_41 l_0_14_41)))
 (let ((?x7714 (* l_0_14_36 l_0_14_36)))
 (let ((?x7705 (* l_0_14_35 l_0_14_35)))
 (let ((?x19934 (* l_0_14_34 l_0_14_34)))
 (let ((?x25938 (* l_0_14_30 l_0_14_30)))
 (let ((?x25935 (* l_0_14_29 l_0_14_29)))
 (let ((?x25932 (* l_0_14_28 l_0_14_28)))
 (let ((?x25929 (* l_0_14_27 l_0_14_27)))
 (let ((?x25926 (* l_0_14_26 l_0_14_26)))
 (let ((?x25616 (* l_0_14_21 l_0_14_21)))
 (let ((?x14472 (- (+ (+ (* l_0_14_19 l_0_14_19) (* l_0_14_20 l_0_14_20)) ?x25616) ?x25926)))
 (let ((?x26502 (- (- (- (- (- (- (- ?x14472 ?x25929) ?x25932) ?x25935) ?x25938) ?x19934) ?x7705) ?x7714)))
 (= (+ (+ (+ (+ (+ ?x26502 ?x8265) ?x15004) ?x8280) ?x20338) ?x25974) 0.0))))))))))))))))))
(assert
 (let ((?x25631 (* 4.0 l_0_14_36)))
 (let ((?x26298 (* ?x25631 l_0_14_43)))
 (let ((?x25628 (* 4.0 l_0_14_35)))
 (let ((?x26295 (* ?x25628 l_0_14_42)))
 (let ((?x25625 (* 4.0 l_0_14_34)))
 (let ((?x26292 (* ?x25625 l_0_14_41)))
 (let ((?x25202 (* 2.0 l_0_14_31)))
 (let ((?x26186 (* ?x25202 l_0_14_34)))
 (let ((?x25938 (* l_0_14_30 l_0_14_30)))
 (let ((?x26541 (* 2.0 ?x25938)))
 (let ((?x25935 (* l_0_14_29 l_0_14_29)))
 (let ((?x26539 (* 2.0 ?x25935)))
 (let ((?x25932 (* l_0_14_28 l_0_14_28)))
 (let ((?x26537 (* 2.0 ?x25932)))
 (let ((?x25929 (* l_0_14_27 l_0_14_27)))
 (let ((?x26535 (* 2.0 ?x25929)))
 (let ((?x25926 (* l_0_14_26 l_0_14_26)))
 (let ((?x26533 (* 2.0 ?x25926)))
 (let ((?x26224 (* 4.0 l_0_14_21)))
 (let ((?x26285 (* ?x26224 l_0_14_28)))
 (let ((?x26220 (* 4.0 l_0_14_20)))
 (let ((?x26280 (* ?x26220 l_0_14_27)))
 (let ((?x26216 (* 4.0 l_0_14_19)))
 (let ((?x26275 (* ?x26216 l_0_14_26)))
 (let ((?x26534 (+ (- (- (- (* (* 2.0 l_0_14_16) l_0_14_19) ?x26275) ?x26280) ?x26285) ?x26533)))
 (let ((?x26545 (+ (+ (- (+ (+ (+ (+ ?x26534 ?x26535) ?x26537) ?x26539) ?x26541) ?x26186) ?x26292) ?x26295)))
 (let ((?x26552 (- (- (+ ?x26545 ?x26298) (* (* 2.0 l_0_14_41) l_0_14_41)) (* (* 2.0 l_0_14_42) l_0_14_42))))
 (let ((?x26558 (- (- ?x26552 (* (* 2.0 l_0_14_43) l_0_14_43)) (* (* 2.0 l_0_14_44) l_0_14_44))))
 (= (- ?x26558 (* (* 2.0 l_0_14_45) l_0_14_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x26627 (* l_0_14_60 l_0_14_60)))
 (let ((?x26625 (* l_0_14_59 l_0_14_59)))
 (let ((?x26623 (* l_0_14_58 l_0_14_58)))
 (let ((?x26621 (* l_0_14_57 l_0_14_57)))
 (let ((?x26619 (* l_0_14_56 l_0_14_56)))
 (let ((?x25957 (* (* 4.0 l_0_14_45) l_0_14_45)))
 (let ((?x25954 (* (* 4.0 l_0_14_44) l_0_14_44)))
 (let ((?x25951 (* (* 4.0 l_0_14_43) l_0_14_43)))
 (let ((?x25948 (* (* 4.0 l_0_14_42) l_0_14_42)))
 (let ((?x25945 (* (* 4.0 l_0_14_41) l_0_14_41)))
 (let ((?x25807 (* 4.0 l_0_14_40)))
 (let ((?x26612 (* ?x25807 l_0_14_44)))
 (let ((?x25804 (* 4.0 l_0_14_39)))
 (let ((?x26610 (* ?x25804 l_0_14_43)))
 (let ((?x25801 (* 4.0 l_0_14_38)))
 (let ((?x26608 (* ?x25801 l_0_14_42)))
 (let ((?x25798 (* 4.0 l_0_14_37)))
 (let ((?x26606 (* ?x25798 l_0_14_41)))
 (let ((?x25202 (* 2.0 l_0_14_31)))
 (let ((?x26228 (* ?x25202 l_0_14_37)))
 (let ((?x25938 (* l_0_14_30 l_0_14_30)))
 (let ((?x25939 (* 4.0 ?x25938)))
 (let ((?x25935 (* l_0_14_29 l_0_14_29)))
 (let ((?x25936 (* 4.0 ?x25935)))
 (let ((?x25932 (* l_0_14_28 l_0_14_28)))
 (let ((?x25933 (* 4.0 ?x25932)))
 (let ((?x25929 (* l_0_14_27 l_0_14_27)))
 (let ((?x25930 (* 4.0 ?x25929)))
 (let ((?x25926 (* l_0_14_26 l_0_14_26)))
 (let ((?x25927 (* 4.0 ?x25926)))
 (let ((?x26598 (* (* 4.0 l_0_14_25) l_0_14_29)))
 (let ((?x26595 (* (* 4.0 l_0_14_24) l_0_14_28)))
 (let ((?x26592 (* (* 4.0 l_0_14_23) l_0_14_27)))
 (let ((?x26589 (* (* 4.0 l_0_14_22) l_0_14_26)))
 (let ((?x26599 (- (- (- (- (* (* 2.0 l_0_14_16) l_0_14_22) ?x26589) ?x26592) ?x26595) ?x26598)))
 (let ((?x26607 (+ (- (+ (+ (+ (+ (+ ?x26599 ?x25927) ?x25930) ?x25933) ?x25936) ?x25939) ?x26228) ?x26606)))
 (let ((?x26617 (- (- (- (- (+ (+ (+ ?x26607 ?x26608) ?x26610) ?x26612) ?x25945) ?x25948) ?x25951) ?x25954)))
 (= (+ (+ (+ (+ (+ (- ?x26617 ?x25957) ?x26619) ?x26621) ?x26623) ?x26625) ?x26627) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25202 (* 2.0 l_0_14_31)))
 (let ((?x26290 (* ?x25202 l_0_14_41)))
 (let ((?x26652 (- (* (* 2.0 l_0_14_16) l_0_14_26) (* (* 2.0 l_0_14_26) l_0_14_26))))
 (let ((?x26658 (- (- ?x26652 (* (* 2.0 l_0_14_27) l_0_14_27)) (* (* 2.0 l_0_14_28) l_0_14_28))))
 (let ((?x26664 (- (- ?x26658 (* (* 2.0 l_0_14_29) l_0_14_29)) (* (* 2.0 l_0_14_30) l_0_14_30))))
 (let ((?x26667 (+ (+ (- ?x26664 ?x26290) (* 2.0 (* l_0_14_41 l_0_14_41))) (* 2.0 (* l_0_14_42 l_0_14_42)))))
 (let ((?x26669 (+ (+ ?x26667 (* 2.0 (* l_0_14_43 l_0_14_43))) (* 2.0 (* l_0_14_44 l_0_14_44)))))
 (= (+ ?x26669 (* 2.0 (* l_0_14_45 l_0_14_45))) 0.0)))))))))
(assert
 (let ((?x13322 (* l_0_14_33 l_0_14_33)))
 (let ((?x6601 (* l_0_14_32 l_0_14_32)))
 (let ((?x9489 (- (- (+ (* l_0_14_17 l_0_14_17) (* l_0_14_18 l_0_14_18)) ?x6601) ?x13322)))
 (= ?x9489 0.0)))))
(assert
 (let ((?x25527 (* 2.0 l_0_14_33)))
 (let ((?x26338 (* ?x25527 l_0_14_35)))
 (let ((?x25521 (* 2.0 l_0_14_32)))
 (let ((?x26336 (* ?x25521 l_0_14_34)))
 (let ((?x25581 (* 2.0 l_0_14_18)))
 (let ((?x26334 (* ?x25581 l_0_14_20)))
 (= (- (- (+ (* (* 2.0 l_0_14_17) l_0_14_19) ?x26334) ?x26336) ?x26338) 0.0))))))))
(assert
 (let ((?x25527 (* 2.0 l_0_14_33)))
 (let ((?x26353 (* ?x25527 l_0_14_38)))
 (let ((?x25521 (* 2.0 l_0_14_32)))
 (let ((?x26351 (* ?x25521 l_0_14_37)))
 (let ((?x25581 (* 2.0 l_0_14_18)))
 (let ((?x9156 (* ?x25581 l_0_14_23)))
 (= (- (- (+ (* (* 2.0 l_0_14_17) l_0_14_22) ?x9156) ?x26351) ?x26353) 0.0))))))))
(assert
 (let ((?x25527 (* 2.0 l_0_14_33)))
 (let ((?x26372 (* ?x25527 l_0_14_42)))
 (let ((?x25521 (* 2.0 l_0_14_32)))
 (let ((?x26370 (* ?x25521 l_0_14_41)))
 (let ((?x25581 (* 2.0 l_0_14_18)))
 (let ((?x26362 (* ?x25581 l_0_14_27)))
 (= (- (- (+ (* (* 2.0 l_0_14_17) l_0_14_26) ?x26362) ?x26370) ?x26372) 0.0))))))))
(assert
 (let ((?x26194 (* 2.0 l_0_14_36)))
 (let ((?x26413 (* ?x26194 l_0_14_39)))
 (let ((?x26191 (* 2.0 l_0_14_35)))
 (let ((?x26411 (* ?x26191 l_0_14_38)))
 (let ((?x26188 (* 2.0 l_0_14_34)))
 (let ((?x26409 (* ?x26188 l_0_14_37)))
 (let ((?x26287 (* 2.0 l_0_14_21)))
 (let ((?x26407 (* ?x26287 l_0_14_24)))
 (let ((?x26282 (* 2.0 l_0_14_20)))
 (let ((?x26405 (* ?x26282 l_0_14_23)))
 (let ((?x26689 (- (- (+ (+ (* (* 2.0 l_0_14_19) l_0_14_22) ?x26405) ?x26407) ?x26409) ?x26411)))
 (= (- ?x26689 ?x26413) 0.0)))))))))))))
(assert
 (let ((?x26194 (* 2.0 l_0_14_36)))
 (let ((?x26432 (* ?x26194 l_0_14_43)))
 (let ((?x26191 (* 2.0 l_0_14_35)))
 (let ((?x26430 (* ?x26191 l_0_14_42)))
 (let ((?x26188 (* 2.0 l_0_14_34)))
 (let ((?x26428 (* ?x26188 l_0_14_41)))
 (let ((?x26287 (* 2.0 l_0_14_21)))
 (let ((?x26420 (* ?x26287 l_0_14_28)))
 (let ((?x26282 (* 2.0 l_0_14_20)))
 (let ((?x15348 (* ?x26282 l_0_14_27)))
 (let ((?x26692 (- (- (+ (+ (* (* 2.0 l_0_14_19) l_0_14_26) ?x15348) ?x26420) ?x26428) ?x26430)))
 (= (- ?x26692 ?x26432) 0.0)))))))))))))
(assert
 (let ((?x7955 (* l_0_14_40 l_0_14_40)))
 (let ((?x20151 (* l_0_14_39 l_0_14_39)))
 (let ((?x14834 (* l_0_14_38 l_0_14_38)))
 (let ((?x7900 (* l_0_14_37 l_0_14_37)))
 (let ((?x25793 (* l_0_14_25 l_0_14_25)))
 (let ((?x25790 (* l_0_14_24 l_0_14_24)))
 (let ((?x20877 (+ (+ (+ (* l_0_14_22 l_0_14_22) (* l_0_14_23 l_0_14_23)) ?x25790) ?x25793)))
 (= (- (- (- (- ?x20877 ?x7900) ?x14834) ?x20151) ?x7955) 0.0)))))))))
(assert
 (let ((?x26484 (* 2.0 l_0_14_40)))
 (let ((?x26485 (* ?x26484 l_0_14_44)))
 (let ((?x26481 (* 2.0 l_0_14_39)))
 (let ((?x26482 (* ?x26481 l_0_14_43)))
 (let ((?x26478 (* 2.0 l_0_14_38)))
 (let ((?x26479 (* ?x26478 l_0_14_42)))
 (let ((?x26475 (* 2.0 l_0_14_37)))
 (let ((?x26476 (* ?x26475 l_0_14_41)))
 (let ((?x26472 (* 2.0 l_0_14_25)))
 (let ((?x26473 (* ?x26472 l_0_14_29)))
 (let ((?x26469 (* 2.0 l_0_14_24)))
 (let ((?x26470 (* ?x26469 l_0_14_28)))
 (let ((?x26466 (* 2.0 l_0_14_23)))
 (let ((?x26467 (* ?x26466 l_0_14_27)))
 (let ((?x26717 (- (+ (+ (+ (* (* 2.0 l_0_14_22) l_0_14_26) ?x26467) ?x26470) ?x26473) ?x26476)))
 (= (- (- (- ?x26717 ?x26479) ?x26482) ?x26485) 0.0)))))))))))))))))
(assert
 (let ((?x25974 (* l_0_14_45 l_0_14_45)))
 (let ((?x20338 (* l_0_14_44 l_0_14_44)))
 (let ((?x8280 (* l_0_14_43 l_0_14_43)))
 (let ((?x15004 (* l_0_14_42 l_0_14_42)))
 (let ((?x8265 (* l_0_14_41 l_0_14_41)))
 (let ((?x25938 (* l_0_14_30 l_0_14_30)))
 (let ((?x25935 (* l_0_14_29 l_0_14_29)))
 (let ((?x25932 (* l_0_14_28 l_0_14_28)))
 (let ((?x20925 (+ (+ (+ (* l_0_14_26 l_0_14_26) (* l_0_14_27 l_0_14_27)) ?x25932) ?x25935)))
 (= (- (- (- (- (- (+ ?x20925 ?x25938) ?x8265) ?x15004) ?x8280) ?x20338) ?x25974) 0.0)))))))))))
(assert
 (let ((?x25677 (* 8.0 l_0_14_36)))
 (let ((?x25678 (* ?x25677 l_0_14_39)))
 (let ((?x25674 (* 8.0 l_0_14_35)))
 (let ((?x25675 (* ?x25674 l_0_14_38)))
 (let ((?x25671 (* 8.0 l_0_14_34)))
 (let ((?x25672 (* ?x25671 l_0_14_37)))
 (let ((?x25793 (* l_0_14_25 l_0_14_25)))
 (let ((?x20918 (* 2.0 ?x25793)))
 (let ((?x25790 (* l_0_14_24 l_0_14_24)))
 (let ((?x20966 (* 2.0 ?x25790)))
 (let ((?x25787 (* l_0_14_23 l_0_14_23)))
 (let ((?x20964 (* 2.0 ?x25787)))
 (let ((?x25784 (* l_0_14_22 l_0_14_22)))
 (let ((?x9674 (* 2.0 ?x25784)))
 (let ((?x25662 (* 8.0 l_0_14_21)))
 (let ((?x25663 (* ?x25662 l_0_14_24)))
 (let ((?x25659 (* 8.0 l_0_14_20)))
 (let ((?x25660 (* ?x25659 l_0_14_23)))
 (let ((?x19940 (* 8.0 l_0_14_19)))
 (let ((?x14586 (* ?x19940 l_0_14_22)))
 (let ((?x20928 (- (+ (+ (+ (+ (+ (+ ?x14586 ?x25660) ?x25663) ?x9674) ?x20964) ?x20966) ?x20918) ?x25672)))
 (let ((?x26742 (- (- (- (- ?x20928 ?x25675) ?x25678) (* (* 2.0 l_0_14_37) l_0_14_37)) (* (* 2.0 l_0_14_38) l_0_14_38))))
 (let ((?x26746 (- (- ?x26742 (* (* 2.0 l_0_14_39) l_0_14_39)) (* (* 2.0 l_0_14_40) l_0_14_40))))
 (let ((?x26752 (+ (+ ?x26746 (* (* 2.0 l_0_14_49) l_0_14_52)) (* (* 2.0 l_0_14_50) l_0_14_53))))
 (= (+ ?x26752 (* (* 2.0 l_0_14_51) l_0_14_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x25807 (* 4.0 l_0_14_40)))
 (let ((?x26612 (* ?x25807 l_0_14_44)))
 (let ((?x25804 (* 4.0 l_0_14_39)))
 (let ((?x26610 (* ?x25804 l_0_14_43)))
 (let ((?x25801 (* 4.0 l_0_14_38)))
 (let ((?x26608 (* ?x25801 l_0_14_42)))
 (let ((?x25798 (* 4.0 l_0_14_37)))
 (let ((?x26606 (* ?x25798 l_0_14_41)))
 (let ((?x25677 (* 8.0 l_0_14_36)))
 (let ((?x25745 (* ?x25677 l_0_14_43)))
 (let ((?x25631 (* 4.0 l_0_14_36)))
 (let ((?x26236 (* ?x25631 l_0_14_39)))
 (let ((?x25674 (* 8.0 l_0_14_35)))
 (let ((?x25743 (* ?x25674 l_0_14_42)))
 (let ((?x25628 (* 4.0 l_0_14_35)))
 (let ((?x26233 (* ?x25628 l_0_14_38)))
 (let ((?x25671 (* 8.0 l_0_14_34)))
 (let ((?x25741 (* ?x25671 l_0_14_41)))
 (let ((?x25625 (* 4.0 l_0_14_34)))
 (let ((?x26230 (* ?x25625 l_0_14_37)))
 (let ((?x26598 (* (* 4.0 l_0_14_25) l_0_14_29)))
 (let ((?x26595 (* (* 4.0 l_0_14_24) l_0_14_28)))
 (let ((?x26592 (* (* 4.0 l_0_14_23) l_0_14_27)))
 (let ((?x26589 (* (* 4.0 l_0_14_22) l_0_14_26)))
 (let ((?x25662 (* 8.0 l_0_14_21)))
 (let ((?x25733 (* ?x25662 l_0_14_28)))
 (let ((?x26224 (* 4.0 l_0_14_21)))
 (let ((?x26225 (* ?x26224 l_0_14_24)))
 (let ((?x25659 (* 8.0 l_0_14_20)))
 (let ((?x25731 (* ?x25659 l_0_14_27)))
 (let ((?x26220 (* 4.0 l_0_14_20)))
 (let ((?x26221 (* ?x26220 l_0_14_23)))
 (let ((?x19940 (* 8.0 l_0_14_19)))
 (let ((?x25729 (* ?x19940 l_0_14_26)))
 (let ((?x26764 (- (+ (- (+ (* (* (- 4.0) l_0_14_19) l_0_14_22) ?x25729) ?x26221) ?x25731) ?x26225)))
 (let ((?x26771 (- (+ (+ (+ (+ (+ (+ ?x26764 ?x25733) ?x26589) ?x26592) ?x26595) ?x26598) ?x26230) ?x25741)))
 (let ((?x26778 (- (- (- (- (+ (- (+ ?x26771 ?x26233) ?x25743) ?x26236) ?x25745) ?x26606) ?x26608) ?x26610)))
 (let ((?x26783 (+ (+ (- ?x26778 ?x26612) (* (* 2.0 l_0_14_49) l_0_14_56)) (* (* 2.0 l_0_14_50) l_0_14_57))))
 (= (+ ?x26783 (* (* 2.0 l_0_14_51) l_0_14_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7955 (* l_0_14_40 l_0_14_40)))
 (let ((?x21055 (* 2.0 ?x7955)))
 (let ((?x25868 (* (* 8.0 l_0_14_40) l_0_14_44)))
 (let ((?x20151 (* l_0_14_39 l_0_14_39)))
 (let ((?x21014 (* 2.0 ?x20151)))
 (let ((?x25865 (* (* 8.0 l_0_14_39) l_0_14_43)))
 (let ((?x14834 (* l_0_14_38 l_0_14_38)))
 (let ((?x20997 (* 2.0 ?x14834)))
 (let ((?x25862 (* (* 8.0 l_0_14_38) l_0_14_42)))
 (let ((?x7900 (* l_0_14_37 l_0_14_37)))
 (let ((?x20980 (* 2.0 ?x7900)))
 (let ((?x25859 (* (* 8.0 l_0_14_37) l_0_14_41)))
 (let ((?x25852 (* (* 8.0 l_0_14_25) l_0_14_29)))
 (let ((?x25849 (* (* 8.0 l_0_14_24) l_0_14_28)))
 (let ((?x25846 (* (* 8.0 l_0_14_23) l_0_14_27)))
 (let ((?x25843 (* (* 8.0 l_0_14_22) l_0_14_26)))
 (let ((?x21102 (- (+ (- ?x25843 (* (* 2.0 l_0_14_22) l_0_14_22)) ?x25846) (* (* 2.0 l_0_14_23) l_0_14_23))))
 (let ((?x21095 (- (+ (- (+ ?x21102 ?x25849) (* (* 2.0 l_0_14_24) l_0_14_24)) ?x25852) (* (* 2.0 l_0_14_25) l_0_14_25))))
 (let ((?x26796 (- (+ (- (+ (- (+ (- ?x21095 ?x25859) ?x20980) ?x25862) ?x20997) ?x25865) ?x21014) ?x25868)))
 (let ((?x26803 (+ (+ (+ ?x26796 ?x21055) (* (* 2.0 l_0_14_52) l_0_14_56)) (* (* 2.0 l_0_14_53) l_0_14_57))))
 (let ((?x26809 (+ (+ ?x26803 (* (* 2.0 l_0_14_54) l_0_14_58)) (* (* 2.0 l_0_14_55) l_0_14_59))))
 (= ?x26809 0.0)))))))))))))))))))))))
(assert
 (let ((?x26839 (* l_0_14_55 l_0_14_55)))
 (let ((?x26837 (* l_0_14_54 l_0_14_54)))
 (let ((?x26835 (* l_0_14_53 l_0_14_53)))
 (let ((?x26833 (* l_0_14_52 l_0_14_52)))
 (let ((?x25807 (* 4.0 l_0_14_40)))
 (let ((?x25808 (* ?x25807 l_0_14_40)))
 (let ((?x25804 (* 4.0 l_0_14_39)))
 (let ((?x25805 (* ?x25804 l_0_14_39)))
 (let ((?x25801 (* 4.0 l_0_14_38)))
 (let ((?x25802 (* ?x25801 l_0_14_38)))
 (let ((?x25798 (* 4.0 l_0_14_37)))
 (let ((?x25799 (* ?x25798 l_0_14_37)))
 (let ((?x25793 (* l_0_14_25 l_0_14_25)))
 (let ((?x25794 (* 4.0 ?x25793)))
 (let ((?x25790 (* l_0_14_24 l_0_14_24)))
 (let ((?x25791 (* 4.0 ?x25790)))
 (let ((?x25787 (* l_0_14_23 l_0_14_23)))
 (let ((?x25788 (* 4.0 ?x25787)))
 (let ((?x25784 (* l_0_14_22 l_0_14_22)))
 (let ((?x25785 (* 4.0 ?x25784)))
 (let ((?x26832 (- (- (- (- (+ (+ (+ ?x25785 ?x25788) ?x25791) ?x25794) ?x25799) ?x25802) ?x25805) ?x25808)))
 (= (+ (+ (+ (+ ?x26832 ?x26833) ?x26835) ?x26837) ?x26839) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_14_1 0.0))
(assert
 (>= l_0_14_3 0.0))
(assert
 (>= l_0_14_6 0.0))
(assert
 (>= l_0_14_10 0.0))
(assert
 (>= l_0_14_15 0.0))
(assert
 (>= l_0_14_16 0.0))
(assert
 (>= l_0_14_18 0.0))
(assert
 (>= l_0_14_21 0.0))
(assert
 (>= l_0_14_25 0.0))
(assert
 (>= l_0_14_30 0.0))
(assert
 (>= l_0_14_31 0.0))
(assert
 (>= l_0_14_33 0.0))
(assert
 (>= l_0_14_36 0.0))
(assert
 (>= l_0_14_40 0.0))
(assert
 (>= l_0_14_45 0.0))
(assert
 (>= l_0_14_46 0.0))
(assert
 (>= l_0_14_48 0.0))
(assert
 (>= l_0_14_51 0.0))
(assert
 (>= l_0_14_55 0.0))
(assert
 (>= l_0_14_60 0.0))
(assert
 (>= l_0_14_61 0.0))
(assert
 (>= l_0_14_63 0.0))
(assert
 (>= l_0_14_66 0.0))
(assert
 (>= l_0_14_70 0.0))
(assert
 (>= l_0_14_75 0.0))
(assert
 (>= l_0_14_76 0.0))
(assert
 (>= l_0_14_78 0.0))
(assert
 (>= l_0_14_81 0.0))
(assert
 (>= l_0_14_85 0.0))
(assert
 (>= l_0_14_90 0.0))
(assert
 (let ((?x26878 (* 4.0 l_0_15_31)))
 (let ((?x26879 (* ?x26878 l_0_15_31)))
 (let ((?x26875 (* l_0_15_16 l_0_15_16)))
 (let ((?x26876 (* 4.0 ?x26875)))
 (let ((?x26877 (+ (- (* (* 2.0 l_0_15_1) l_0_15_2) (* l_0_15_1 l_0_15_1)) ?x26876)))
 (let ((?x26886 (- (- (- ?x26877 ?x26879) (* (* 2.0 l_0_15_61) l_0_15_62)) (* (* 2.0 l_0_15_76) l_0_15_77))))
 (= (+ (- ?x26886 (* (* 2.0 l_0_15_91) l_0_15_92)) 4.0) 0.0))))))))
(assert
 (let ((?x26918 (* l_0_15_46 l_0_15_46)))
 (let ((?x26878 (* 4.0 l_0_15_31)))
 (let ((?x26879 (* ?x26878 l_0_15_31)))
 (let ((?x26875 (* l_0_15_16 l_0_15_16)))
 (let ((?x26876 (* 4.0 ?x26875)))
 (let ((?x26921 (- (+ (- (+ (* (* 2.0 l_0_15_1) l_0_15_7) ?x26876) ?x26879) ?x26918) (* (* 2.0 l_0_15_61) l_0_15_67))))
 (let ((?x26925 (- (- ?x26921 (* (* 2.0 l_0_15_76) l_0_15_82)) (* (* 2.0 l_0_15_91) l_0_15_97))))
 (= (+ ?x26925 4.0) 0.0)))))))))
(assert
 (let ((?x26962 (* l_0_15_96 l_0_15_96)))
 (let ((?x26960 (* l_0_15_95 l_0_15_95)))
 (let ((?x26958 (* l_0_15_94 l_0_15_94)))
 (let ((?x26956 (* l_0_15_81 l_0_15_81)))
 (let ((?x26954 (* l_0_15_80 l_0_15_80)))
 (let ((?x26952 (* l_0_15_79 l_0_15_79)))
 (let ((?x26950 (* l_0_15_66 l_0_15_66)))
 (let ((?x26948 (* l_0_15_65 l_0_15_65)))
 (let ((?x26946 (* l_0_15_64 l_0_15_64)))
 (let ((?x26898 (* l_0_15_31 l_0_15_31)))
 (let ((?x26878 (* 4.0 l_0_15_31)))
 (let ((?x20639 (* ?x26878 l_0_15_34)))
 (let ((?x9919 (- (- (* (* 4.0 l_0_15_16) l_0_15_19) (* l_0_15_16 l_0_15_16)) ?x20639)))
 (let ((?x26942 (+ (+ (+ ?x9919 ?x26898) (* 1.0 (* l_0_15_4 l_0_15_4))) (* 1.0 (* l_0_15_5 l_0_15_5)))))
 (let ((?x26951 (- (- (- (+ ?x26942 (* 1.0 (* l_0_15_6 l_0_15_6))) ?x26946) ?x26948) ?x26950)))
 (let ((?x26964 (- (- (- (- (- (- (- ?x26951 ?x26952) ?x26954) ?x26956) ?x26958) ?x26960) ?x26962) 1.0)))
 (= ?x26964 0.0))))))))))))))))))
(assert
 (let ((?x27043 (* l_0_15_90 l_0_15_90)))
 (let ((?x27041 (* l_0_15_89 l_0_15_89)))
 (let ((?x27039 (* l_0_15_88 l_0_15_88)))
 (let ((?x27037 (* l_0_15_87 l_0_15_87)))
 (let ((?x27035 (* l_0_15_86 l_0_15_86)))
 (let ((?x27033 (* l_0_15_75 l_0_15_75)))
 (let ((?x27031 (* l_0_15_74 l_0_15_74)))
 (let ((?x27029 (* l_0_15_73 l_0_15_73)))
 (let ((?x27027 (* l_0_15_72 l_0_15_72)))
 (let ((?x27025 (* l_0_15_71 l_0_15_71)))
 (let ((?x26898 (* l_0_15_31 l_0_15_31)))
 (let ((?x26878 (* 4.0 l_0_15_31)))
 (let ((?x27022 (* ?x26878 l_0_15_41)))
 (let ((?x26875 (* l_0_15_16 l_0_15_16)))
 (let ((?x10156 (* 4.0 l_0_15_16)))
 (let ((?x27019 (* ?x10156 l_0_15_26)))
 (let ((?x27002 (* l_0_15_105 l_0_15_105)))
 (let ((?x27000 (* l_0_15_104 l_0_15_104)))
 (let ((?x26998 (* l_0_15_103 l_0_15_103)))
 (let ((?x26999 (- (- (* (- l_0_15_101) l_0_15_101) (* l_0_15_102 l_0_15_102)) ?x26998)))
 (let ((?x27009 (+ (+ (- (- ?x26999 ?x27000) ?x27002) (* 1.0 (* l_0_15_11 l_0_15_11))) (* 1.0 (* l_0_15_12 l_0_15_12)))))
 (let ((?x27015 (+ (+ ?x27009 (* 1.0 (* l_0_15_13 l_0_15_13))) (* 1.0 (* l_0_15_14 l_0_15_14)))))
 (let ((?x27023 (+ (+ (- (+ ?x27015 (* 1.0 (* l_0_15_15 l_0_15_15))) ?x27019) ?x26875) ?x27022)))
 (let ((?x27036 (- (- (- (- (- (- (- ?x27023 ?x26898) ?x27025) ?x27027) ?x27029) ?x27031) ?x27033) ?x27035)))
 (= (+ (- (- (- (- ?x27036 ?x27037) ?x27039) ?x27041) ?x27043) 1.0) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x26875 (* l_0_15_16 l_0_15_16)))
 (let ((?x27080 (* 2.0 ?x26875)))
 (let ((?x27084 (- (+ (* (* 2.0 l_0_15_1) l_0_15_4) ?x27080) (* (* 2.0 l_0_15_31) l_0_15_31))))
 (let ((?x27088 (- (- ?x27084 (* (* 2.0 l_0_15_61) l_0_15_64)) (* (* 2.0 l_0_15_76) l_0_15_79))))
 (= (+ (- ?x27088 (* (* 2.0 l_0_15_91) l_0_15_94)) 2.0) 0.0))))))
(assert
 (let ((?x26898 (* l_0_15_31 l_0_15_31)))
 (let ((?x27096 (* 2.0 ?x26898)))
 (let ((?x27112 (- (* (* 2.0 l_0_15_1) l_0_15_11) (* (* 2.0 l_0_15_101) l_0_15_91))))
 (let ((?x27118 (- (+ (- ?x27112 (* (* 2.0 l_0_15_16) l_0_15_16)) ?x27096) (* (* 2.0 l_0_15_61) l_0_15_71))))
 (= (- (- ?x27118 (* (* 2.0 l_0_15_76) l_0_15_86)) 2.0) 0.0))))))
(assert
 (let ((?x27155 (* l_0_15_93 l_0_15_93)))
 (let ((?x27153 (* l_0_15_92 l_0_15_92)))
 (let ((?x27151 (* l_0_15_78 l_0_15_78)))
 (let ((?x27149 (* l_0_15_77 l_0_15_77)))
 (let ((?x27147 (* l_0_15_63 l_0_15_63)))
 (let ((?x27145 (* l_0_15_62 l_0_15_62)))
 (let ((?x27142 (* 8.0 l_0_15_31)))
 (let ((?x27143 (* ?x27142 l_0_15_32)))
 (let ((?x27133 (* 8.0 l_0_15_16)))
 (let ((?x27134 (* ?x27133 l_0_15_17)))
 (let ((?x27138 (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_2) ?x27134) (* 1.0 (* l_0_15_2 l_0_15_2)))))
 (let ((?x27148 (- (- (- (+ ?x27138 (* 1.0 (* l_0_15_3 l_0_15_3))) ?x27143) ?x27145) ?x27147)))
 (= (- (- (- (- ?x27148 ?x27149) ?x27151) ?x27153) ?x27155) 0.0))))))))))))))
(assert
 (let ((?x27142 (* 8.0 l_0_15_31)))
 (let ((?x27187 (* ?x27142 l_0_15_34)))
 (let ((?x26878 (* 4.0 l_0_15_31)))
 (let ((?x27185 (* ?x26878 l_0_15_32)))
 (let ((?x27182 (* 2.0 l_0_15_3)))
 (let ((?x27183 (* ?x27182 l_0_15_5)))
 (let ((?x27179 (* 2.0 l_0_15_2)))
 (let ((?x27180 (* ?x27179 l_0_15_4)))
 (let ((?x27133 (* 8.0 l_0_15_16)))
 (let ((?x27177 (* ?x27133 l_0_15_19)))
 (let ((?x10156 (* 4.0 l_0_15_16)))
 (let ((?x27175 (* ?x10156 l_0_15_17)))
 (let ((?x27184 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_4) ?x27175) ?x27177) ?x27180) ?x27183)))
 (let ((?x27194 (- (- (- (- ?x27184 ?x27185) ?x27187) (* (* 2.0 l_0_15_62) l_0_15_64)) (* (* 2.0 l_0_15_63) l_0_15_65))))
 (let ((?x27200 (- (- ?x27194 (* (* 2.0 l_0_15_77) l_0_15_79)) (* (* 2.0 l_0_15_78) l_0_15_80))))
 (let ((?x27206 (- (- ?x27200 (* (* 2.0 l_0_15_92) l_0_15_94)) (* (* 2.0 l_0_15_93) l_0_15_95))))
 (= ?x27206 0.0))))))))))))))))))
(assert
 (let ((?x27142 (* 8.0 l_0_15_31)))
 (let ((?x27248 (* ?x27142 l_0_15_37)))
 (let ((?x27143 (* ?x27142 l_0_15_32)))
 (let ((?x27182 (* 2.0 l_0_15_3)))
 (let ((?x27245 (* ?x27182 l_0_15_8)))
 (let ((?x27179 (* 2.0 l_0_15_2)))
 (let ((?x27243 (* ?x27179 l_0_15_7)))
 (let ((?x27133 (* 8.0 l_0_15_16)))
 (let ((?x27241 (* ?x27133 l_0_15_22)))
 (let ((?x27242 (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_7) (* ?x27133 l_0_15_17)) ?x27241)))
 (let ((?x27252 (+ (- (- (+ (+ ?x27242 ?x27243) ?x27245) ?x27143) ?x27248) (* (* 2.0 l_0_15_46) l_0_15_47))))
 (let ((?x27256 (- (- ?x27252 (* (* 2.0 l_0_15_62) l_0_15_67)) (* (* 2.0 l_0_15_63) l_0_15_68))))
 (let ((?x27260 (- (- ?x27256 (* (* 2.0 l_0_15_77) l_0_15_82)) (* (* 2.0 l_0_15_78) l_0_15_83))))
 (let ((?x27264 (- (- ?x27260 (* (* 2.0 l_0_15_92) l_0_15_97)) (* (* 2.0 l_0_15_93) l_0_15_98))))
 (= ?x27264 0.0))))))))))))))))
(assert
 (let ((?x27142 (* 8.0 l_0_15_31)))
 (let ((?x27302 (* ?x27142 l_0_15_41)))
 (let ((?x26878 (* 4.0 l_0_15_31)))
 (let ((?x27185 (* ?x26878 l_0_15_32)))
 (let ((?x27133 (* 8.0 l_0_15_16)))
 (let ((?x27299 (* ?x27133 l_0_15_26)))
 (let ((?x10156 (* 4.0 l_0_15_16)))
 (let ((?x27175 (* ?x10156 l_0_15_17)))
 (let ((?x27295 (* 2.0 l_0_15_12)))
 (let ((?x27296 (* ?x27295 l_0_15_3)))
 (let ((?x27288 (- (* (* (- 2.0) l_0_15_1) l_0_15_11) (* (* 2.0 l_0_15_101) l_0_15_92))))
 (let ((?x27294 (+ (- ?x27288 (* (* 2.0 l_0_15_102) l_0_15_93)) (* (* 2.0 l_0_15_11) l_0_15_2))))
 (let ((?x27305 (- (- (+ (+ (- (+ ?x27294 ?x27296) ?x27175) ?x27299) ?x27185) ?x27302) (* (* 2.0 l_0_15_62) l_0_15_71))))
 (let ((?x27309 (- (- ?x27305 (* (* 2.0 l_0_15_63) l_0_15_72)) (* (* 2.0 l_0_15_77) l_0_15_86))))
 (= (- ?x27309 (* (* 2.0 l_0_15_78) l_0_15_87)) 0.0))))))))))))))))
(assert
 (let ((?x27352 (* 4.0 l_0_15_33)))
 (let ((?x27353 (* ?x27352 l_0_15_33)))
 (let ((?x27349 (* 4.0 l_0_15_32)))
 (let ((?x27350 (* ?x27349 l_0_15_32)))
 (let ((?x27139 (* l_0_15_3 l_0_15_3)))
 (let ((?x27136 (* l_0_15_2 l_0_15_2)))
 (let ((?x27344 (* l_0_15_18 l_0_15_18)))
 (let ((?x27345 (* 4.0 ?x27344)))
 (let ((?x27342 (* l_0_15_17 l_0_15_17)))
 (let ((?x27343 (* 4.0 ?x27342)))
 (= (- (- (- (- (+ ?x27343 ?x27345) ?x27136) ?x27139) ?x27350) ?x27353) 0.0))))))))))))
(assert
 (let ((?x27378 (* 8.0 l_0_15_33)))
 (let ((?x27379 (* ?x27378 l_0_15_35)))
 (let ((?x27372 (* 8.0 l_0_15_32)))
 (let ((?x27373 (* ?x27372 l_0_15_34)))
 (let ((?x27182 (* 2.0 l_0_15_3)))
 (let ((?x27183 (* ?x27182 l_0_15_5)))
 (let ((?x27179 (* 2.0 l_0_15_2)))
 (let ((?x27180 (* ?x27179 l_0_15_4)))
 (let ((?x27344 (* l_0_15_18 l_0_15_18)))
 (let ((?x27368 (* 2.0 ?x27344)))
 (let ((?x27365 (* 8.0 l_0_15_18)))
 (let ((?x27366 (* ?x27365 l_0_15_20)))
 (let ((?x27342 (* l_0_15_17 l_0_15_17)))
 (let ((?x27363 (* 2.0 ?x27342)))
 (let ((?x27361 (* 8.0 l_0_15_17)))
 (let ((?x27362 (* ?x27361 l_0_15_19)))
 (let ((?x27377 (- (- (- (- (+ (+ (+ ?x27362 ?x27363) ?x27366) ?x27368) ?x27180) ?x27183) ?x27373) (* (* 2.0 l_0_15_32) l_0_15_32))))
 (= (- (- ?x27377 ?x27379) (* (* 2.0 l_0_15_33) l_0_15_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x27426 (* l_0_15_48 l_0_15_48)))
 (let ((?x27424 (* l_0_15_47 l_0_15_47)))
 (let ((?x27352 (* 4.0 l_0_15_33)))
 (let ((?x27353 (* ?x27352 l_0_15_33)))
 (let ((?x27378 (* 8.0 l_0_15_33)))
 (let ((?x27421 (* ?x27378 l_0_15_38)))
 (let ((?x27349 (* 4.0 l_0_15_32)))
 (let ((?x27350 (* ?x27349 l_0_15_32)))
 (let ((?x27372 (* 8.0 l_0_15_32)))
 (let ((?x27418 (* ?x27372 l_0_15_37)))
 (let ((?x27182 (* 2.0 l_0_15_3)))
 (let ((?x27245 (* ?x27182 l_0_15_8)))
 (let ((?x27179 (* 2.0 l_0_15_2)))
 (let ((?x27243 (* ?x27179 l_0_15_7)))
 (let ((?x27344 (* l_0_15_18 l_0_15_18)))
 (let ((?x27345 (* 4.0 ?x27344)))
 (let ((?x27365 (* 8.0 l_0_15_18)))
 (let ((?x27413 (* ?x27365 l_0_15_23)))
 (let ((?x27342 (* l_0_15_17 l_0_15_17)))
 (let ((?x27343 (* 4.0 ?x27342)))
 (let ((?x27361 (* 8.0 l_0_15_17)))
 (let ((?x27411 (* ?x27361 l_0_15_22)))
 (let ((?x27420 (- (- (- (- (+ (+ (+ ?x27411 ?x27343) ?x27413) ?x27345) ?x27243) ?x27245) ?x27418) ?x27350)))
 (= (+ (+ (- (- ?x27420 ?x27421) ?x27353) ?x27424) ?x27426) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x16105 (* l_0_15_33 l_0_15_33)))
 (let ((?x15191 (* 2.0 ?x16105)))
 (let ((?x27378 (* 8.0 l_0_15_33)))
 (let ((?x27449 (* ?x27378 l_0_15_42)))
 (let ((?x10438 (* l_0_15_32 l_0_15_32)))
 (let ((?x15177 (* 2.0 ?x10438)))
 (let ((?x27372 (* 8.0 l_0_15_32)))
 (let ((?x27446 (* ?x27372 l_0_15_41)))
 (let ((?x27365 (* 8.0 l_0_15_18)))
 (let ((?x27441 (* ?x27365 l_0_15_27)))
 (let ((?x27361 (* 8.0 l_0_15_17)))
 (let ((?x27436 (* ?x27361 l_0_15_26)))
 (let ((?x27295 (* 2.0 l_0_15_12)))
 (let ((?x27296 (* ?x27295 l_0_15_3)))
 (let ((?x27440 (- (+ (- (* (* (- 2.0) l_0_15_11) l_0_15_2) ?x27296) ?x27436) (* (* 2.0 l_0_15_17) l_0_15_17))))
 (let ((?x27448 (+ (- (- (+ ?x27440 ?x27441) (* (* 2.0 l_0_15_18) l_0_15_18)) ?x27446) ?x15177)))
 (= (+ (- ?x27448 ?x27449) ?x15191) 0.0))))))))))))))))))
(assert
 (let ((?x26943 (* l_0_15_6 l_0_15_6)))
 (let ((?x26940 (* l_0_15_5 l_0_15_5)))
 (let ((?x26937 (* l_0_15_4 l_0_15_4)))
 (let ((?x27497 (* 4.0 l_0_15_36)))
 (let ((?x27498 (* ?x27497 l_0_15_36)))
 (let ((?x27494 (* 4.0 l_0_15_35)))
 (let ((?x27495 (* ?x27494 l_0_15_35)))
 (let ((?x27491 (* 4.0 l_0_15_34)))
 (let ((?x27492 (* ?x27491 l_0_15_34)))
 (let ((?x27352 (* 4.0 l_0_15_33)))
 (let ((?x27489 (* ?x27352 l_0_15_35)))
 (let ((?x27349 (* 4.0 l_0_15_32)))
 (let ((?x27487 (* ?x27349 l_0_15_34)))
 (let ((?x27082 (* 2.0 l_0_15_31)))
 (let ((?x27485 (* ?x27082 l_0_15_32)))
 (let ((?x27482 (* l_0_15_21 l_0_15_21)))
 (let ((?x27483 (* 4.0 ?x27482)))
 (let ((?x27479 (* l_0_15_20 l_0_15_20)))
 (let ((?x27480 (* 4.0 ?x27479)))
 (let ((?x27476 (* l_0_15_19 l_0_15_19)))
 (let ((?x27477 (* 4.0 ?x27476)))
 (let ((?x27473 (* 4.0 l_0_15_18)))
 (let ((?x27474 (* ?x27473 l_0_15_20)))
 (let ((?x10525 (* 4.0 l_0_15_17)))
 (let ((?x10501 (* ?x10525 l_0_15_19)))
 (let ((?x27481 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_16) l_0_15_17) ?x10501) ?x27474) ?x27477) ?x27480)))
 (let ((?x27499 (- (- (- (- (- (+ (+ ?x27481 ?x27483) ?x27485) ?x27487) ?x27489) ?x27492) ?x27495) ?x27498)))
 (= (- (- (- ?x27499 ?x26937) ?x26940) ?x26943) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x27559 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x27556 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x27547 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x27543 (* 8.0 l_0_15_36)))
 (let ((?x27544 (* ?x27543 l_0_15_39)))
 (let ((?x27540 (* 8.0 l_0_15_35)))
 (let ((?x27541 (* ?x27540 l_0_15_38)))
 (let ((?x27537 (* 8.0 l_0_15_34)))
 (let ((?x27538 (* ?x27537 l_0_15_37)))
 (let ((?x27352 (* 4.0 l_0_15_33)))
 (let ((?x27535 (* ?x27352 l_0_15_38)))
 (let ((?x27378 (* 8.0 l_0_15_33)))
 (let ((?x27379 (* ?x27378 l_0_15_35)))
 (let ((?x27349 (* 4.0 l_0_15_32)))
 (let ((?x27532 (* ?x27349 l_0_15_37)))
 (let ((?x27372 (* 8.0 l_0_15_32)))
 (let ((?x27373 (* ?x27372 l_0_15_34)))
 (let ((?x27528 (* 8.0 l_0_15_21)))
 (let ((?x27529 (* ?x27528 l_0_15_24)))
 (let ((?x27525 (* 8.0 l_0_15_20)))
 (let ((?x27526 (* ?x27525 l_0_15_23)))
 (let ((?x27522 (* 8.0 l_0_15_19)))
 (let ((?x27523 (* ?x27522 l_0_15_22)))
 (let ((?x27473 (* 4.0 l_0_15_18)))
 (let ((?x27520 (* ?x27473 l_0_15_23)))
 (let ((?x27365 (* 8.0 l_0_15_18)))
 (let ((?x27366 (* ?x27365 l_0_15_20)))
 (let ((?x10525 (* 4.0 l_0_15_17)))
 (let ((?x27517 (* ?x10525 l_0_15_22)))
 (let ((?x27361 (* 8.0 l_0_15_17)))
 (let ((?x27362 (* ?x27361 l_0_15_19)))
 (let ((?x27531 (- (+ (+ (+ (+ (+ (+ ?x27362 ?x27517) ?x27366) ?x27520) ?x27523) ?x27526) ?x27529) ?x27373)))
 (let ((?x27548 (- (- (- (- (- (- (- ?x27531 ?x27532) ?x27379) ?x27535) ?x27538) ?x27541) ?x27544) ?x27547)))
 (let ((?x27554 (+ (+ ?x27548 (* (* 2.0 l_0_15_47) l_0_15_49)) (* (* 2.0 l_0_15_48) l_0_15_50))))
 (= (- (- ?x27554 ?x27556) ?x27559) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27543 (* 8.0 l_0_15_36)))
 (let ((?x27626 (* ?x27543 l_0_15_43)))
 (let ((?x27540 (* 8.0 l_0_15_35)))
 (let ((?x27624 (* ?x27540 l_0_15_42)))
 (let ((?x27537 (* 8.0 l_0_15_34)))
 (let ((?x27622 (* ?x27537 l_0_15_41)))
 (let ((?x27352 (* 4.0 l_0_15_33)))
 (let ((?x27620 (* ?x27352 l_0_15_42)))
 (let ((?x27489 (* ?x27352 l_0_15_35)))
 (let ((?x27349 (* 4.0 l_0_15_32)))
 (let ((?x27617 (* ?x27349 l_0_15_41)))
 (let ((?x27487 (* ?x27349 l_0_15_34)))
 (let ((?x27528 (* 8.0 l_0_15_21)))
 (let ((?x27614 (* ?x27528 l_0_15_28)))
 (let ((?x27525 (* 8.0 l_0_15_20)))
 (let ((?x27612 (* ?x27525 l_0_15_27)))
 (let ((?x27522 (* 8.0 l_0_15_19)))
 (let ((?x27610 (* ?x27522 l_0_15_26)))
 (let ((?x27473 (* 4.0 l_0_15_18)))
 (let ((?x27608 (* ?x27473 l_0_15_27)))
 (let ((?x27474 (* ?x27473 l_0_15_20)))
 (let ((?x10525 (* 4.0 l_0_15_17)))
 (let ((?x27605 (* ?x10525 l_0_15_26)))
 (let ((?x10501 (* ?x10525 l_0_15_19)))
 (let ((?x27601 (* 2.0 l_0_15_13)))
 (let ((?x27602 (* ?x27601 l_0_15_6)))
 (let ((?x27295 (* 2.0 l_0_15_12)))
 (let ((?x27599 (* ?x27295 l_0_15_5)))
 (let ((?x27606 (+ (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_4) ?x27599) ?x27602) ?x10501) ?x27605)))
 (let ((?x27618 (- (+ (+ (+ (+ (+ (- ?x27606 ?x27474) ?x27608) ?x27610) ?x27612) ?x27614) ?x27487) ?x27617)))
 (= (- (- (- (- (+ ?x27618 ?x27489) ?x27620) ?x27622) ?x27624) ?x27626) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x27663 (* l_0_15_9 l_0_15_9)))
 (let ((?x27661 (* l_0_15_8 l_0_15_8)))
 (let ((?x27659 (* l_0_15_7 l_0_15_7)))
 (let ((?x27652 (* 4.0 l_0_15_40)))
 (let ((?x27653 (* ?x27652 l_0_15_40)))
 (let ((?x27649 (* 4.0 l_0_15_39)))
 (let ((?x27650 (* ?x27649 l_0_15_39)))
 (let ((?x27646 (* 4.0 l_0_15_38)))
 (let ((?x27647 (* ?x27646 l_0_15_38)))
 (let ((?x27643 (* 4.0 l_0_15_37)))
 (let ((?x27644 (* ?x27643 l_0_15_37)))
 (let ((?x27378 (* 8.0 l_0_15_33)))
 (let ((?x27421 (* ?x27378 l_0_15_38)))
 (let ((?x27372 (* 8.0 l_0_15_32)))
 (let ((?x27418 (* ?x27372 l_0_15_37)))
 (let ((?x27638 (* l_0_15_25 l_0_15_25)))
 (let ((?x27639 (* 4.0 ?x27638)))
 (let ((?x27635 (* l_0_15_24 l_0_15_24)))
 (let ((?x27636 (* 4.0 ?x27635)))
 (let ((?x10705 (* l_0_15_23 l_0_15_23)))
 (let ((?x16364 (* 4.0 ?x10705)))
 (let ((?x21769 (* l_0_15_22 l_0_15_22)))
 (let ((?x21726 (* 4.0 ?x21769)))
 (let ((?x27365 (* 8.0 l_0_15_18)))
 (let ((?x27413 (* ?x27365 l_0_15_23)))
 (let ((?x27361 (* 8.0 l_0_15_17)))
 (let ((?x27411 (* ?x27361 l_0_15_22)))
 (let ((?x27637 (+ (+ (+ (+ (+ (* (- l_0_15_10) l_0_15_10) ?x27411) ?x27413) ?x21726) ?x16364) ?x27636)))
 (let ((?x27654 (- (- (- (- (- (- (+ ?x27637 ?x27639) ?x27418) ?x27421) ?x27644) ?x27647) ?x27650) ?x27653)))
 (let ((?x27658 (+ (+ ?x27654 (* (* 2.0 l_0_15_47) l_0_15_52)) (* (* 2.0 l_0_15_48) l_0_15_53))))
 (= (- (- (- ?x27658 ?x27659) ?x27661) ?x27663) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x27710 (* (* 8.0 l_0_15_40) l_0_15_44)))
 (let ((?x27707 (* (* 8.0 l_0_15_39) l_0_15_43)))
 (let ((?x27704 (* (* 8.0 l_0_15_38) l_0_15_42)))
 (let ((?x27701 (* (* 8.0 l_0_15_37) l_0_15_41)))
 (let ((?x27378 (* 8.0 l_0_15_33)))
 (let ((?x27449 (* ?x27378 l_0_15_42)))
 (let ((?x27352 (* 4.0 l_0_15_33)))
 (let ((?x27535 (* ?x27352 l_0_15_38)))
 (let ((?x27372 (* 8.0 l_0_15_32)))
 (let ((?x27446 (* ?x27372 l_0_15_41)))
 (let ((?x27349 (* 4.0 l_0_15_32)))
 (let ((?x27532 (* ?x27349 l_0_15_37)))
 (let ((?x27694 (* (* 8.0 l_0_15_25) l_0_15_29)))
 (let ((?x27691 (* (* 8.0 l_0_15_24) l_0_15_28)))
 (let ((?x27688 (* (* 8.0 l_0_15_23) l_0_15_27)))
 (let ((?x27685 (* (* 8.0 l_0_15_22) l_0_15_26)))
 (let ((?x27365 (* 8.0 l_0_15_18)))
 (let ((?x27441 (* ?x27365 l_0_15_27)))
 (let ((?x27473 (* 4.0 l_0_15_18)))
 (let ((?x27520 (* ?x27473 l_0_15_23)))
 (let ((?x27361 (* 8.0 l_0_15_17)))
 (let ((?x27436 (* ?x27361 l_0_15_26)))
 (let ((?x10525 (* 4.0 l_0_15_17)))
 (let ((?x27517 (* ?x10525 l_0_15_22)))
 (let ((?x27601 (* 2.0 l_0_15_13)))
 (let ((?x27678 (* ?x27601 l_0_15_9)))
 (let ((?x27295 (* 2.0 l_0_15_12)))
 (let ((?x27676 (* ?x27295 l_0_15_8)))
 (let ((?x27292 (* 2.0 l_0_15_11)))
 (let ((?x10764 (* ?x27292 l_0_15_7)))
 (let ((?x27680 (- (- (- (- (* (* (- 2.0) l_0_15_10) l_0_15_14) ?x10764) ?x27676) ?x27678) ?x27517)))
 (let ((?x27695 (+ (+ (+ (+ (+ (- (+ ?x27680 ?x27436) ?x27520) ?x27441) ?x27685) ?x27688) ?x27691) ?x27694)))
 (let ((?x27708 (- (- (- (- (+ (- (+ ?x27695 ?x27532) ?x27446) ?x27535) ?x27449) ?x27701) ?x27704) ?x27707)))
 (let ((?x27715 (+ (+ (- ?x27708 ?x27710) (* (* 2.0 l_0_15_47) l_0_15_56)) (* (* 2.0 l_0_15_48) l_0_15_57))))
 (= ?x27715 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27785 (* (* 4.0 l_0_15_45) l_0_15_45)))
 (let ((?x27782 (* (* 4.0 l_0_15_44) l_0_15_44)))
 (let ((?x27779 (* (* 4.0 l_0_15_43) l_0_15_43)))
 (let ((?x27776 (* (* 4.0 l_0_15_42) l_0_15_42)))
 (let ((?x27773 (* (* 4.0 l_0_15_41) l_0_15_41)))
 (let ((?x27352 (* 4.0 l_0_15_33)))
 (let ((?x27620 (* ?x27352 l_0_15_42)))
 (let ((?x27349 (* 4.0 l_0_15_32)))
 (let ((?x27617 (* ?x27349 l_0_15_41)))
 (let ((?x27082 (* 2.0 l_0_15_31)))
 (let ((?x27485 (* ?x27082 l_0_15_32)))
 (let ((?x27766 (* l_0_15_30 l_0_15_30)))
 (let ((?x27767 (* 4.0 ?x27766)))
 (let ((?x27763 (* l_0_15_29 l_0_15_29)))
 (let ((?x27764 (* 4.0 ?x27763)))
 (let ((?x27760 (* l_0_15_28 l_0_15_28)))
 (let ((?x27761 (* 4.0 ?x27760)))
 (let ((?x27757 (* l_0_15_27 l_0_15_27)))
 (let ((?x27758 (* 4.0 ?x27757)))
 (let ((?x27754 (* l_0_15_26 l_0_15_26)))
 (let ((?x27755 (* 4.0 ?x27754)))
 (let ((?x27473 (* 4.0 l_0_15_18)))
 (let ((?x27608 (* ?x27473 l_0_15_27)))
 (let ((?x10525 (* 4.0 l_0_15_17)))
 (let ((?x27605 (* ?x10525 l_0_15_26)))
 (let ((?x27016 (* l_0_15_15 l_0_15_15)))
 (let ((?x27013 (* l_0_15_14 l_0_15_14)))
 (let ((?x27010 (* l_0_15_13 l_0_15_13)))
 (let ((?x27747 (- (- (* (- l_0_15_11) l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x27010)))
 (let ((?x27752 (- (+ (- (- ?x27747 ?x27013) ?x27016) (* (* 2.0 l_0_15_16) l_0_15_17)) ?x27605)))
 (let ((?x27769 (- (+ (+ (+ (+ (+ (- ?x27752 ?x27608) ?x27755) ?x27758) ?x27761) ?x27764) ?x27767) ?x27485)))
 (let ((?x27786 (- (- (- (- (- (+ (+ ?x27769 ?x27617) ?x27620) ?x27773) ?x27776) ?x27779) ?x27782) ?x27785)))
 (= ?x27786 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27809 (* l_0_15_91 l_0_15_91)))
 (let ((?x27807 (* l_0_15_76 l_0_15_76)))
 (let ((?x27808 (- (- (* 1.0 (* l_0_15_1 l_0_15_1)) (* l_0_15_61 l_0_15_61)) ?x27807)))
 (= (- ?x27808 ?x27809) 0.0)))))
(assert
 (let ((?x27559 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x27556 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x27547 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x26878 (* 4.0 l_0_15_31)))
 (let ((?x27821 (* ?x26878 l_0_15_37)))
 (let ((?x27142 (* 8.0 l_0_15_31)))
 (let ((?x27187 (* ?x27142 l_0_15_34)))
 (let ((?x10156 (* 4.0 l_0_15_16)))
 (let ((?x27818 (* ?x10156 l_0_15_22)))
 (let ((?x27133 (* 8.0 l_0_15_16)))
 (let ((?x27177 (* ?x27133 l_0_15_19)))
 (let ((?x27825 (+ (+ (- (- (+ ?x27177 ?x27818) ?x27187) ?x27821) ?x27547) (* (* 2.0 l_0_15_46) l_0_15_49))))
 (let ((?x27833 (- (- (+ (+ ?x27825 ?x27556) ?x27559) (* (* 2.0 l_0_15_64) l_0_15_67)) (* (* 2.0 l_0_15_65) l_0_15_68))))
 (let ((?x27839 (- (- ?x27833 (* (* 2.0 l_0_15_66) l_0_15_69)) (* (* 2.0 l_0_15_79) l_0_15_82))))
 (let ((?x27845 (- (- ?x27839 (* (* 2.0 l_0_15_80) l_0_15_83)) (* (* 2.0 l_0_15_81) l_0_15_84))))
 (let ((?x27851 (- (- ?x27845 (* (* 2.0 l_0_15_94) l_0_15_97)) (* (* 2.0 l_0_15_95) l_0_15_98))))
 (= (- ?x27851 (* (* 2.0 l_0_15_96) l_0_15_99)) 0.0))))))))))))))))))
(assert
 (let ((?x26878 (* 4.0 l_0_15_31)))
 (let ((?x27022 (* ?x26878 l_0_15_41)))
 (let ((?x20639 (* ?x26878 l_0_15_34)))
 (let ((?x10156 (* 4.0 l_0_15_16)))
 (let ((?x27019 (* ?x10156 l_0_15_26)))
 (let ((?x10159 (* ?x10156 l_0_15_19)))
 (let ((?x27601 (* 2.0 l_0_15_13)))
 (let ((?x27602 (* ?x27601 l_0_15_6)))
 (let ((?x27295 (* 2.0 l_0_15_12)))
 (let ((?x27599 (* ?x27295 l_0_15_5)))
 (let ((?x27882 (- (* (* (- 2.0) l_0_15_101) l_0_15_94) (* (* 2.0 l_0_15_102) l_0_15_95))))
 (let ((?x27887 (+ (- ?x27882 (* (* 2.0 l_0_15_103) l_0_15_96)) (* (* 2.0 l_0_15_11) l_0_15_4))))
 (let ((?x27895 (- (- (+ (+ (- (+ (+ ?x27887 ?x27599) ?x27602) ?x10159) ?x27019) ?x20639) ?x27022) (* (* 2.0 l_0_15_64) l_0_15_71))))
 (let ((?x27899 (- (- ?x27895 (* (* 2.0 l_0_15_65) l_0_15_72)) (* (* 2.0 l_0_15_66) l_0_15_73))))
 (let ((?x27903 (- (- ?x27899 (* (* 2.0 l_0_15_79) l_0_15_86)) (* (* 2.0 l_0_15_80) l_0_15_87))))
 (= (- ?x27903 (* (* 2.0 l_0_15_81) l_0_15_88)) 0.0)))))))))))))))))
(assert
 (let ((?x27957 (* l_0_15_99 l_0_15_99)))
 (let ((?x27955 (* l_0_15_98 l_0_15_98)))
 (let ((?x27953 (* l_0_15_97 l_0_15_97)))
 (let ((?x27949 (* l_0_15_85 l_0_15_85)))
 (let ((?x27947 (* l_0_15_84 l_0_15_84)))
 (let ((?x27945 (* l_0_15_83 l_0_15_83)))
 (let ((?x27943 (* l_0_15_82 l_0_15_82)))
 (let ((?x27939 (* l_0_15_70 l_0_15_70)))
 (let ((?x27935 (* l_0_15_69 l_0_15_69)))
 (let ((?x27933 (* l_0_15_68 l_0_15_68)))
 (let ((?x27931 (* l_0_15_67 l_0_15_67)))
 (let ((?x27142 (* 8.0 l_0_15_31)))
 (let ((?x27248 (* ?x27142 l_0_15_37)))
 (let ((?x27133 (* 8.0 l_0_15_16)))
 (let ((?x27241 (* ?x27133 l_0_15_22)))
 (let ((?x27925 (* l_0_15_100 l_0_15_100)))
 (let ((?x27930 (+ (- (+ (- (* 1.0 (* l_0_15_10 l_0_15_10)) ?x27925) ?x27241) ?x27248) (* (* 2.0 l_0_15_46) l_0_15_52))))
 (let ((?x27938 (+ (- (- (- ?x27930 ?x27931) ?x27933) ?x27935) (* 1.0 (* l_0_15_7 l_0_15_7)))))
 (let ((?x27946 (- (- (+ (- ?x27938 ?x27939) (* 1.0 (* l_0_15_8 l_0_15_8))) ?x27943) ?x27945)))
 (let ((?x27954 (- (+ (- (- ?x27946 ?x27947) ?x27949) (* 1.0 (* l_0_15_9 l_0_15_9))) ?x27953)))
 (= (- (- ?x27954 ?x27955) ?x27957) 0.0))))))))))))))))))))))
(assert
 (let ((?x27142 (* 8.0 l_0_15_31)))
 (let ((?x27302 (* ?x27142 l_0_15_41)))
 (let ((?x26878 (* 4.0 l_0_15_31)))
 (let ((?x27821 (* ?x26878 l_0_15_37)))
 (let ((?x27133 (* 8.0 l_0_15_16)))
 (let ((?x27299 (* ?x27133 l_0_15_26)))
 (let ((?x10156 (* 4.0 l_0_15_16)))
 (let ((?x27818 (* ?x10156 l_0_15_22)))
 (let ((?x27601 (* 2.0 l_0_15_13)))
 (let ((?x27678 (* ?x27601 l_0_15_9)))
 (let ((?x27295 (* 2.0 l_0_15_12)))
 (let ((?x27676 (* ?x27295 l_0_15_8)))
 (let ((?x27292 (* 2.0 l_0_15_11)))
 (let ((?x10764 (* ?x27292 l_0_15_7)))
 (let ((?x27987 (- (* (* 2.0 l_0_15_10) l_0_15_14) (* (* 2.0 l_0_15_100) l_0_15_104))))
 (let ((?x27991 (- (- ?x27987 (* (* 2.0 l_0_15_101) l_0_15_97)) (* (* 2.0 l_0_15_102) l_0_15_98))))
 (let ((?x27996 (+ (+ (+ (- ?x27991 (* (* 2.0 l_0_15_103) l_0_15_99)) ?x10764) ?x27676) ?x27678)))
 (let ((?x28002 (+ (- (+ (+ (- ?x27996 ?x27818) ?x27299) ?x27821) ?x27302) (* (* 2.0 l_0_15_46) l_0_15_56))))
 (let ((?x28008 (- (- ?x28002 (* (* 2.0 l_0_15_67) l_0_15_71)) (* (* 2.0 l_0_15_68) l_0_15_72))))
 (let ((?x28014 (- (- ?x28008 (* (* 2.0 l_0_15_69) l_0_15_73)) (* (* 2.0 l_0_15_70) l_0_15_74))))
 (let ((?x28020 (- (- ?x28014 (* (* 2.0 l_0_15_82) l_0_15_86)) (* (* 2.0 l_0_15_83) l_0_15_87))))
 (let ((?x28026 (- (- ?x28020 (* (* 2.0 l_0_15_84) l_0_15_88)) (* (* 2.0 l_0_15_85) l_0_15_89))))
 (= ?x28026 0.0))))))))))))))))))))))))
(assert
 (let ((?x27082 (* 2.0 l_0_15_31)))
 (let ((?x28064 (* ?x27082 l_0_15_34)))
 (let ((?x28059 (+ (* (* (- 2.0) l_0_15_16) l_0_15_19) (* 2.0 (* l_0_15_19 l_0_15_19)))))
 (let ((?x28063 (+ (+ ?x28059 (* 2.0 (* l_0_15_20 l_0_15_20))) (* 2.0 (* l_0_15_21 l_0_15_21)))))
 (let ((?x28071 (- (- (+ ?x28063 ?x28064) (* (* 2.0 l_0_15_34) l_0_15_34)) (* (* 2.0 l_0_15_35) l_0_15_35))))
 (= (- ?x28071 (* (* 2.0 l_0_15_36) l_0_15_36)) 0.0)))))))
(assert
 (let ((?x28119 (* l_0_15_51 l_0_15_51)))
 (let ((?x28117 (* l_0_15_50 l_0_15_50)))
 (let ((?x28115 (* l_0_15_49 l_0_15_49)))
 (let ((?x27497 (* 4.0 l_0_15_36)))
 (let ((?x27498 (* ?x27497 l_0_15_36)))
 (let ((?x28112 (* ?x27497 l_0_15_39)))
 (let ((?x27494 (* 4.0 l_0_15_35)))
 (let ((?x27495 (* ?x27494 l_0_15_35)))
 (let ((?x28109 (* ?x27494 l_0_15_38)))
 (let ((?x27491 (* 4.0 l_0_15_34)))
 (let ((?x27492 (* ?x27491 l_0_15_34)))
 (let ((?x28106 (* ?x27491 l_0_15_37)))
 (let ((?x27082 (* 2.0 l_0_15_31)))
 (let ((?x28104 (* ?x27082 l_0_15_37)))
 (let ((?x27482 (* l_0_15_21 l_0_15_21)))
 (let ((?x27483 (* 4.0 ?x27482)))
 (let ((?x28100 (* 4.0 l_0_15_21)))
 (let ((?x28101 (* ?x28100 l_0_15_24)))
 (let ((?x27479 (* l_0_15_20 l_0_15_20)))
 (let ((?x27480 (* 4.0 ?x27479)))
 (let ((?x28096 (* 4.0 l_0_15_20)))
 (let ((?x28097 (* ?x28096 l_0_15_23)))
 (let ((?x27476 (* l_0_15_19 l_0_15_19)))
 (let ((?x27477 (* 4.0 ?x27476)))
 (let ((?x28094 (+ (* (* (- 2.0) l_0_15_16) l_0_15_22) (* (* 4.0 l_0_15_19) l_0_15_22))))
 (let ((?x28107 (- (+ (+ (+ (+ (+ (+ ?x28094 ?x27477) ?x28097) ?x27480) ?x28101) ?x27483) ?x28104) ?x28106)))
 (let ((?x28118 (+ (+ (- (- (- (- (- ?x28107 ?x27492) ?x28109) ?x27495) ?x28112) ?x27498) ?x28115) ?x28117)))
 (= (+ ?x28118 ?x28119) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x16222 (* l_0_15_36 l_0_15_36)))
 (let ((?x22391 (* 2.0 ?x16222)))
 (let ((?x27497 (* 4.0 l_0_15_36)))
 (let ((?x28163 (* ?x27497 l_0_15_43)))
 (let ((?x21631 (* l_0_15_35 l_0_15_35)))
 (let ((?x22389 (* 2.0 ?x21631)))
 (let ((?x27494 (* 4.0 l_0_15_35)))
 (let ((?x28160 (* ?x27494 l_0_15_42)))
 (let ((?x21622 (* l_0_15_34 l_0_15_34)))
 (let ((?x22385 (* 2.0 ?x21622)))
 (let ((?x27491 (* 4.0 l_0_15_34)))
 (let ((?x28157 (* ?x27491 l_0_15_41)))
 (let ((?x27082 (* 2.0 l_0_15_31)))
 (let ((?x28155 (* ?x27082 l_0_15_41)))
 (let ((?x28100 (* 4.0 l_0_15_21)))
 (let ((?x28150 (* ?x28100 l_0_15_28)))
 (let ((?x28096 (* 4.0 l_0_15_20)))
 (let ((?x28145 (* ?x28096 l_0_15_27)))
 (let ((?x28092 (* 4.0 l_0_15_19)))
 (let ((?x28140 (* ?x28092 l_0_15_26)))
 (let ((?x28144 (- (+ (* (* (- 2.0) l_0_15_16) l_0_15_26) ?x28140) (* (* 2.0 l_0_15_19) l_0_15_19))))
 (let ((?x28154 (- (+ (- (+ ?x28144 ?x28145) (* (* 2.0 l_0_15_20) l_0_15_20)) ?x28150) (* (* 2.0 l_0_15_21) l_0_15_21))))
 (let ((?x28165 (+ (- (+ (- (+ (- (+ ?x28154 ?x28155) ?x28157) ?x22385) ?x28160) ?x22389) ?x28163) ?x22391)))
 (= ?x28165 0.0)))))))))))))))))))))))))
(assert
 (let ((?x16105 (* l_0_15_33 l_0_15_33)))
 (let ((?x10438 (* l_0_15_32 l_0_15_32)))
 (let ((?x28194 (+ (- (* (- l_0_15_17) l_0_15_17) (* l_0_15_18 l_0_15_18)) ?x10438)))
 (= (+ ?x28194 ?x16105) 0.0)))))
(assert
 (let ((?x27381 (* 2.0 l_0_15_33)))
 (let ((?x28205 (* ?x27381 l_0_15_35)))
 (let ((?x27375 (* 2.0 l_0_15_32)))
 (let ((?x28203 (* ?x27375 l_0_15_34)))
 (let ((?x27443 (* 2.0 l_0_15_18)))
 (let ((?x28201 (* ?x27443 l_0_15_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_17) l_0_15_19) ?x28201) ?x28203) ?x28205) 0.0))))))))
(assert
 (let ((?x27381 (* 2.0 l_0_15_33)))
 (let ((?x28221 (* ?x27381 l_0_15_38)))
 (let ((?x27375 (* 2.0 l_0_15_32)))
 (let ((?x28219 (* ?x27375 l_0_15_37)))
 (let ((?x27443 (* 2.0 l_0_15_18)))
 (let ((?x22155 (* ?x27443 l_0_15_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_17) l_0_15_22) ?x22155) ?x28219) ?x28221) 0.0))))))))
(assert
 (let ((?x27381 (* 2.0 l_0_15_33)))
 (let ((?x28237 (* ?x27381 l_0_15_42)))
 (let ((?x27375 (* 2.0 l_0_15_32)))
 (let ((?x28235 (* ?x27375 l_0_15_41)))
 (let ((?x27443 (* 2.0 l_0_15_18)))
 (let ((?x28233 (* ?x27443 l_0_15_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_17) l_0_15_26) ?x28233) ?x28235) ?x28237) 0.0))))))))
(assert
 (let ((?x16222 (* l_0_15_36 l_0_15_36)))
 (let ((?x21631 (* l_0_15_35 l_0_15_35)))
 (let ((?x21622 (* l_0_15_34 l_0_15_34)))
 (let ((?x27482 (* l_0_15_21 l_0_15_21)))
 (let ((?x28254 (- (- (* (- l_0_15_19) l_0_15_19) (* l_0_15_20 l_0_15_20)) ?x27482)))
 (= (+ (+ (+ ?x28254 ?x21622) ?x21631) ?x16222) 0.0)))))))
(assert
 (let ((?x28072 (* 2.0 l_0_15_36)))
 (let ((?x28278 (* ?x28072 l_0_15_39)))
 (let ((?x28069 (* 2.0 l_0_15_35)))
 (let ((?x28276 (* ?x28069 l_0_15_38)))
 (let ((?x28066 (* 2.0 l_0_15_34)))
 (let ((?x28274 (* ?x28066 l_0_15_37)))
 (let ((?x28152 (* 2.0 l_0_15_21)))
 (let ((?x28272 (* ?x28152 l_0_15_24)))
 (let ((?x28147 (* 2.0 l_0_15_20)))
 (let ((?x28270 (* ?x28147 l_0_15_23)))
 (let ((?x28277 (+ (+ (- (- (* (* (- 2.0) l_0_15_19) l_0_15_22) ?x28270) ?x28272) ?x28274) ?x28276)))
 (= (+ ?x28277 ?x28278) 0.0)))))))))))))
(assert
 (let ((?x28072 (* 2.0 l_0_15_36)))
 (let ((?x28299 (* ?x28072 l_0_15_43)))
 (let ((?x28069 (* 2.0 l_0_15_35)))
 (let ((?x28297 (* ?x28069 l_0_15_42)))
 (let ((?x28066 (* 2.0 l_0_15_34)))
 (let ((?x28295 (* ?x28066 l_0_15_41)))
 (let ((?x28152 (* 2.0 l_0_15_21)))
 (let ((?x28293 (* ?x28152 l_0_15_28)))
 (let ((?x28147 (* 2.0 l_0_15_20)))
 (let ((?x28291 (* ?x28147 l_0_15_27)))
 (let ((?x28298 (+ (+ (- (- (* (* (- 2.0) l_0_15_19) l_0_15_26) ?x28291) ?x28293) ?x28295) ?x28297)))
 (= (+ ?x28298 ?x28299) 0.0)))))))))))))
(assert
 (let ((?x10821 (* l_0_15_40 l_0_15_40)))
 (let ((?x16463 (* l_0_15_39 l_0_15_39)))
 (let ((?x16461 (* l_0_15_38 l_0_15_38)))
 (let ((?x10727 (* l_0_15_37 l_0_15_37)))
 (let ((?x27638 (* l_0_15_25 l_0_15_25)))
 (let ((?x27635 (* l_0_15_24 l_0_15_24)))
 (let ((?x28313 (- (- (* (- l_0_15_22) l_0_15_22) (* l_0_15_23 l_0_15_23)) ?x27635)))
 (= (+ (+ (+ (+ (- ?x28313 ?x27638) ?x10727) ?x16461) ?x16463) ?x10821) 0.0)))))))))
(assert
 (let ((?x28360 (* 2.0 l_0_15_40)))
 (let ((?x28361 (* ?x28360 l_0_15_44)))
 (let ((?x28357 (* 2.0 l_0_15_39)))
 (let ((?x28358 (* ?x28357 l_0_15_43)))
 (let ((?x28354 (* 2.0 l_0_15_38)))
 (let ((?x28355 (* ?x28354 l_0_15_42)))
 (let ((?x28351 (* 2.0 l_0_15_37)))
 (let ((?x28352 (* ?x28351 l_0_15_41)))
 (let ((?x28348 (* 2.0 l_0_15_25)))
 (let ((?x28349 (* ?x28348 l_0_15_29)))
 (let ((?x28345 (* 2.0 l_0_15_24)))
 (let ((?x28346 (* ?x28345 l_0_15_28)))
 (let ((?x28342 (* 2.0 l_0_15_23)))
 (let ((?x28343 (* ?x28342 l_0_15_27)))
 (let ((?x28353 (+ (- (- (- (* (* (- 2.0) l_0_15_22) l_0_15_26) ?x28343) ?x28346) ?x28349) ?x28352)))
 (= (+ (+ (+ ?x28353 ?x28355) ?x28358) ?x28361) 0.0)))))))))))))))))
(assert
 (let ((?x22016 (* l_0_15_45 l_0_15_45)))
 (let ((?x16598 (* l_0_15_44 l_0_15_44)))
 (let ((?x22005 (* l_0_15_43 l_0_15_43)))
 (let ((?x22002 (* l_0_15_42 l_0_15_42)))
 (let ((?x22000 (* l_0_15_41 l_0_15_41)))
 (let ((?x16222 (* l_0_15_36 l_0_15_36)))
 (let ((?x21631 (* l_0_15_35 l_0_15_35)))
 (let ((?x21622 (* l_0_15_34 l_0_15_34)))
 (let ((?x27766 (* l_0_15_30 l_0_15_30)))
 (let ((?x27763 (* l_0_15_29 l_0_15_29)))
 (let ((?x27760 (* l_0_15_28 l_0_15_28)))
 (let ((?x27757 (* l_0_15_27 l_0_15_27)))
 (let ((?x27754 (* l_0_15_26 l_0_15_26)))
 (let ((?x27482 (* l_0_15_21 l_0_15_21)))
 (let ((?x2890 (- (+ (+ (* l_0_15_19 l_0_15_19) (* l_0_15_20 l_0_15_20)) ?x27482) ?x27754)))
 (let ((?x28389 (- (- (- (- (- (- (- ?x2890 ?x27757) ?x27760) ?x27763) ?x27766) ?x21622) ?x21631) ?x16222)))
 (= (+ (+ (+ (+ (+ ?x28389 ?x22000) ?x22002) ?x22005) ?x16598) ?x22016) 0.0))))))))))))))))))
(assert
 (let ((?x27497 (* 4.0 l_0_15_36)))
 (let ((?x28163 (* ?x27497 l_0_15_43)))
 (let ((?x27494 (* 4.0 l_0_15_35)))
 (let ((?x28160 (* ?x27494 l_0_15_42)))
 (let ((?x27491 (* 4.0 l_0_15_34)))
 (let ((?x28157 (* ?x27491 l_0_15_41)))
 (let ((?x27082 (* 2.0 l_0_15_31)))
 (let ((?x28064 (* ?x27082 l_0_15_34)))
 (let ((?x28100 (* 4.0 l_0_15_21)))
 (let ((?x28150 (* ?x28100 l_0_15_28)))
 (let ((?x28096 (* 4.0 l_0_15_20)))
 (let ((?x28145 (* ?x28096 l_0_15_27)))
 (let ((?x28092 (* 4.0 l_0_15_19)))
 (let ((?x28140 (* ?x28092 l_0_15_26)))
 (let ((?x28409 (+ (- (- (- (* (* 2.0 l_0_15_16) l_0_15_19) ?x28140) ?x28145) ?x28150) (* 2.0 (* l_0_15_26 l_0_15_26)))))
 (let ((?x28413 (+ (+ ?x28409 (* 2.0 (* l_0_15_27 l_0_15_27))) (* 2.0 (* l_0_15_28 l_0_15_28)))))
 (let ((?x28417 (+ (+ ?x28413 (* 2.0 (* l_0_15_29 l_0_15_29))) (* 2.0 (* l_0_15_30 l_0_15_30)))))
 (let ((?x28424 (- (+ (+ (+ (- ?x28417 ?x28064) ?x28157) ?x28160) ?x28163) (* (* 2.0 l_0_15_41) l_0_15_41))))
 (let ((?x28430 (- (- ?x28424 (* (* 2.0 l_0_15_42) l_0_15_42)) (* (* 2.0 l_0_15_43) l_0_15_43))))
 (let ((?x28436 (- (- ?x28430 (* (* 2.0 l_0_15_44) l_0_15_44)) (* (* 2.0 l_0_15_45) l_0_15_45))))
 (= ?x28436 0.0))))))))))))))))))))))
(assert
 (let ((?x28506 (* l_0_15_60 l_0_15_60)))
 (let ((?x28504 (* l_0_15_59 l_0_15_59)))
 (let ((?x28502 (* l_0_15_58 l_0_15_58)))
 (let ((?x28500 (* l_0_15_57 l_0_15_57)))
 (let ((?x28498 (* l_0_15_56 l_0_15_56)))
 (let ((?x27785 (* (* 4.0 l_0_15_45) l_0_15_45)))
 (let ((?x27782 (* (* 4.0 l_0_15_44) l_0_15_44)))
 (let ((?x27779 (* (* 4.0 l_0_15_43) l_0_15_43)))
 (let ((?x27776 (* (* 4.0 l_0_15_42) l_0_15_42)))
 (let ((?x27773 (* (* 4.0 l_0_15_41) l_0_15_41)))
 (let ((?x27652 (* 4.0 l_0_15_40)))
 (let ((?x28491 (* ?x27652 l_0_15_44)))
 (let ((?x27649 (* 4.0 l_0_15_39)))
 (let ((?x28489 (* ?x27649 l_0_15_43)))
 (let ((?x27646 (* 4.0 l_0_15_38)))
 (let ((?x28487 (* ?x27646 l_0_15_42)))
 (let ((?x27643 (* 4.0 l_0_15_37)))
 (let ((?x28485 (* ?x27643 l_0_15_41)))
 (let ((?x27082 (* 2.0 l_0_15_31)))
 (let ((?x28104 (* ?x27082 l_0_15_37)))
 (let ((?x27766 (* l_0_15_30 l_0_15_30)))
 (let ((?x27767 (* 4.0 ?x27766)))
 (let ((?x27763 (* l_0_15_29 l_0_15_29)))
 (let ((?x27764 (* 4.0 ?x27763)))
 (let ((?x27760 (* l_0_15_28 l_0_15_28)))
 (let ((?x27761 (* 4.0 ?x27760)))
 (let ((?x27757 (* l_0_15_27 l_0_15_27)))
 (let ((?x27758 (* 4.0 ?x27757)))
 (let ((?x27754 (* l_0_15_26 l_0_15_26)))
 (let ((?x27755 (* 4.0 ?x27754)))
 (let ((?x28477 (* (* 4.0 l_0_15_25) l_0_15_29)))
 (let ((?x28474 (* (* 4.0 l_0_15_24) l_0_15_28)))
 (let ((?x28471 (* (* 4.0 l_0_15_23) l_0_15_27)))
 (let ((?x28468 (* (* 4.0 l_0_15_22) l_0_15_26)))
 (let ((?x28478 (- (- (- (- (* (* 2.0 l_0_15_16) l_0_15_22) ?x28468) ?x28471) ?x28474) ?x28477)))
 (let ((?x28486 (+ (- (+ (+ (+ (+ (+ ?x28478 ?x27755) ?x27758) ?x27761) ?x27764) ?x27767) ?x28104) ?x28485)))
 (let ((?x28496 (- (- (- (- (+ (+ (+ ?x28486 ?x28487) ?x28489) ?x28491) ?x27773) ?x27776) ?x27779) ?x27782)))
 (= (+ (+ (+ (+ (+ (- ?x28496 ?x27785) ?x28498) ?x28500) ?x28502) ?x28504) ?x28506) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x22016 (* l_0_15_45 l_0_15_45)))
 (let ((?x22582 (* 2.0 ?x22016)))
 (let ((?x16598 (* l_0_15_44 l_0_15_44)))
 (let ((?x28458 (* 2.0 ?x16598)))
 (let ((?x22005 (* l_0_15_43 l_0_15_43)))
 (let ((?x22581 (* 2.0 ?x22005)))
 (let ((?x22002 (* l_0_15_42 l_0_15_42)))
 (let ((?x22574 (* 2.0 ?x22002)))
 (let ((?x22000 (* l_0_15_41 l_0_15_41)))
 (let ((?x28452 (* 2.0 ?x22000)))
 (let ((?x27082 (* 2.0 l_0_15_31)))
 (let ((?x28155 (* ?x27082 l_0_15_41)))
 (let ((?x28528 (- (* (* 2.0 l_0_15_16) l_0_15_26) (* (* 2.0 l_0_15_26) l_0_15_26))))
 (let ((?x28534 (- (- ?x28528 (* (* 2.0 l_0_15_27) l_0_15_27)) (* (* 2.0 l_0_15_28) l_0_15_28))))
 (let ((?x28540 (- (- ?x28534 (* (* 2.0 l_0_15_29) l_0_15_29)) (* (* 2.0 l_0_15_30) l_0_15_30))))
 (= (+ (+ (+ (+ (+ (- ?x28540 ?x28155) ?x28452) ?x22574) ?x22581) ?x28458) ?x22582) 0.0)))))))))))))))))
(assert
 (let ((?x16105 (* l_0_15_33 l_0_15_33)))
 (let ((?x10438 (* l_0_15_32 l_0_15_32)))
 (let ((?x17266 (- (- (+ (* l_0_15_17 l_0_15_17) (* l_0_15_18 l_0_15_18)) ?x10438) ?x16105)))
 (= ?x17266 0.0)))))
(assert
 (let ((?x27381 (* 2.0 l_0_15_33)))
 (let ((?x28205 (* ?x27381 l_0_15_35)))
 (let ((?x27375 (* 2.0 l_0_15_32)))
 (let ((?x28203 (* ?x27375 l_0_15_34)))
 (let ((?x27443 (* 2.0 l_0_15_18)))
 (let ((?x28201 (* ?x27443 l_0_15_20)))
 (= (- (- (+ (* (* 2.0 l_0_15_17) l_0_15_19) ?x28201) ?x28203) ?x28205) 0.0))))))))
(assert
 (let ((?x27381 (* 2.0 l_0_15_33)))
 (let ((?x28221 (* ?x27381 l_0_15_38)))
 (let ((?x27375 (* 2.0 l_0_15_32)))
 (let ((?x28219 (* ?x27375 l_0_15_37)))
 (let ((?x27443 (* 2.0 l_0_15_18)))
 (let ((?x22155 (* ?x27443 l_0_15_23)))
 (= (- (- (+ (* (* 2.0 l_0_15_17) l_0_15_22) ?x22155) ?x28219) ?x28221) 0.0))))))))
(assert
 (let ((?x27381 (* 2.0 l_0_15_33)))
 (let ((?x28237 (* ?x27381 l_0_15_42)))
 (let ((?x27375 (* 2.0 l_0_15_32)))
 (let ((?x28235 (* ?x27375 l_0_15_41)))
 (let ((?x27443 (* 2.0 l_0_15_18)))
 (let ((?x28233 (* ?x27443 l_0_15_27)))
 (= (- (- (+ (* (* 2.0 l_0_15_17) l_0_15_26) ?x28233) ?x28235) ?x28237) 0.0))))))))
(assert
 (let ((?x28072 (* 2.0 l_0_15_36)))
 (let ((?x28278 (* ?x28072 l_0_15_39)))
 (let ((?x28069 (* 2.0 l_0_15_35)))
 (let ((?x28276 (* ?x28069 l_0_15_38)))
 (let ((?x28066 (* 2.0 l_0_15_34)))
 (let ((?x28274 (* ?x28066 l_0_15_37)))
 (let ((?x28152 (* 2.0 l_0_15_21)))
 (let ((?x28272 (* ?x28152 l_0_15_24)))
 (let ((?x28147 (* 2.0 l_0_15_20)))
 (let ((?x28270 (* ?x28147 l_0_15_23)))
 (let ((?x28594 (- (- (+ (+ (* (* 2.0 l_0_15_19) l_0_15_22) ?x28270) ?x28272) ?x28274) ?x28276)))
 (= (- ?x28594 ?x28278) 0.0)))))))))))))
(assert
 (let ((?x28072 (* 2.0 l_0_15_36)))
 (let ((?x28299 (* ?x28072 l_0_15_43)))
 (let ((?x28069 (* 2.0 l_0_15_35)))
 (let ((?x28297 (* ?x28069 l_0_15_42)))
 (let ((?x28066 (* 2.0 l_0_15_34)))
 (let ((?x28295 (* ?x28066 l_0_15_41)))
 (let ((?x28152 (* 2.0 l_0_15_21)))
 (let ((?x28293 (* ?x28152 l_0_15_28)))
 (let ((?x28147 (* 2.0 l_0_15_20)))
 (let ((?x28291 (* ?x28147 l_0_15_27)))
 (let ((?x22662 (- (- (+ (+ (* (* 2.0 l_0_15_19) l_0_15_26) ?x28291) ?x28293) ?x28295) ?x28297)))
 (= (- ?x22662 ?x28299) 0.0)))))))))))))
(assert
 (let ((?x10821 (* l_0_15_40 l_0_15_40)))
 (let ((?x16463 (* l_0_15_39 l_0_15_39)))
 (let ((?x16461 (* l_0_15_38 l_0_15_38)))
 (let ((?x10727 (* l_0_15_37 l_0_15_37)))
 (let ((?x27638 (* l_0_15_25 l_0_15_25)))
 (let ((?x27635 (* l_0_15_24 l_0_15_24)))
 (let ((?x3341 (+ (+ (+ (* l_0_15_22 l_0_15_22) (* l_0_15_23 l_0_15_23)) ?x27635) ?x27638)))
 (= (- (- (- (- ?x3341 ?x10727) ?x16461) ?x16463) ?x10821) 0.0)))))))))
(assert
 (let ((?x28360 (* 2.0 l_0_15_40)))
 (let ((?x28361 (* ?x28360 l_0_15_44)))
 (let ((?x28357 (* 2.0 l_0_15_39)))
 (let ((?x28358 (* ?x28357 l_0_15_43)))
 (let ((?x28354 (* 2.0 l_0_15_38)))
 (let ((?x28355 (* ?x28354 l_0_15_42)))
 (let ((?x28351 (* 2.0 l_0_15_37)))
 (let ((?x28352 (* ?x28351 l_0_15_41)))
 (let ((?x28348 (* 2.0 l_0_15_25)))
 (let ((?x28349 (* ?x28348 l_0_15_29)))
 (let ((?x28345 (* 2.0 l_0_15_24)))
 (let ((?x28346 (* ?x28345 l_0_15_28)))
 (let ((?x28342 (* 2.0 l_0_15_23)))
 (let ((?x28343 (* ?x28342 l_0_15_27)))
 (let ((?x22727 (- (+ (+ (+ (* (* 2.0 l_0_15_22) l_0_15_26) ?x28343) ?x28346) ?x28349) ?x28352)))
 (= (- (- (- ?x22727 ?x28355) ?x28358) ?x28361) 0.0)))))))))))))))))
(assert
 (let ((?x22016 (* l_0_15_45 l_0_15_45)))
 (let ((?x16598 (* l_0_15_44 l_0_15_44)))
 (let ((?x22005 (* l_0_15_43 l_0_15_43)))
 (let ((?x22002 (* l_0_15_42 l_0_15_42)))
 (let ((?x22000 (* l_0_15_41 l_0_15_41)))
 (let ((?x27766 (* l_0_15_30 l_0_15_30)))
 (let ((?x27763 (* l_0_15_29 l_0_15_29)))
 (let ((?x27760 (* l_0_15_28 l_0_15_28)))
 (let ((?x22724 (+ (+ (+ (* l_0_15_26 l_0_15_26) (* l_0_15_27 l_0_15_27)) ?x27760) ?x27763)))
 (= (- (- (- (- (- (+ ?x22724 ?x27766) ?x22000) ?x22002) ?x22005) ?x16598) ?x22016) 0.0)))))))))))
(assert
 (let ((?x27543 (* 8.0 l_0_15_36)))
 (let ((?x27544 (* ?x27543 l_0_15_39)))
 (let ((?x27540 (* 8.0 l_0_15_35)))
 (let ((?x27541 (* ?x27540 l_0_15_38)))
 (let ((?x27537 (* 8.0 l_0_15_34)))
 (let ((?x27538 (* ?x27537 l_0_15_37)))
 (let ((?x27638 (* l_0_15_25 l_0_15_25)))
 (let ((?x22734 (* 2.0 ?x27638)))
 (let ((?x27635 (* l_0_15_24 l_0_15_24)))
 (let ((?x22717 (* 2.0 ?x27635)))
 (let ((?x10705 (* l_0_15_23 l_0_15_23)))
 (let ((?x22799 (* 2.0 ?x10705)))
 (let ((?x21769 (* l_0_15_22 l_0_15_22)))
 (let ((?x22805 (* 2.0 ?x21769)))
 (let ((?x27528 (* 8.0 l_0_15_21)))
 (let ((?x27529 (* ?x27528 l_0_15_24)))
 (let ((?x27525 (* 8.0 l_0_15_20)))
 (let ((?x27526 (* ?x27525 l_0_15_23)))
 (let ((?x27522 (* 8.0 l_0_15_19)))
 (let ((?x27523 (* ?x27522 l_0_15_22)))
 (let ((?x22733 (- (+ (+ (+ (+ (+ (+ ?x27523 ?x27526) ?x27529) ?x22805) ?x22799) ?x22717) ?x22734) ?x27538)))
 (let ((?x28613 (- (- (- (- ?x22733 ?x27541) ?x27544) (* (* 2.0 l_0_15_37) l_0_15_37)) (* (* 2.0 l_0_15_38) l_0_15_38))))
 (let ((?x28617 (- (- ?x28613 (* (* 2.0 l_0_15_39) l_0_15_39)) (* (* 2.0 l_0_15_40) l_0_15_40))))
 (let ((?x28623 (+ (+ ?x28617 (* (* 2.0 l_0_15_49) l_0_15_52)) (* (* 2.0 l_0_15_50) l_0_15_53))))
 (= (+ ?x28623 (* (* 2.0 l_0_15_51) l_0_15_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x27652 (* 4.0 l_0_15_40)))
 (let ((?x28491 (* ?x27652 l_0_15_44)))
 (let ((?x27649 (* 4.0 l_0_15_39)))
 (let ((?x28489 (* ?x27649 l_0_15_43)))
 (let ((?x27646 (* 4.0 l_0_15_38)))
 (let ((?x28487 (* ?x27646 l_0_15_42)))
 (let ((?x27643 (* 4.0 l_0_15_37)))
 (let ((?x28485 (* ?x27643 l_0_15_41)))
 (let ((?x27543 (* 8.0 l_0_15_36)))
 (let ((?x27626 (* ?x27543 l_0_15_43)))
 (let ((?x27497 (* 4.0 l_0_15_36)))
 (let ((?x28112 (* ?x27497 l_0_15_39)))
 (let ((?x27540 (* 8.0 l_0_15_35)))
 (let ((?x27624 (* ?x27540 l_0_15_42)))
 (let ((?x27494 (* 4.0 l_0_15_35)))
 (let ((?x28109 (* ?x27494 l_0_15_38)))
 (let ((?x27537 (* 8.0 l_0_15_34)))
 (let ((?x27622 (* ?x27537 l_0_15_41)))
 (let ((?x27491 (* 4.0 l_0_15_34)))
 (let ((?x28106 (* ?x27491 l_0_15_37)))
 (let ((?x28477 (* (* 4.0 l_0_15_25) l_0_15_29)))
 (let ((?x28474 (* (* 4.0 l_0_15_24) l_0_15_28)))
 (let ((?x28471 (* (* 4.0 l_0_15_23) l_0_15_27)))
 (let ((?x28468 (* (* 4.0 l_0_15_22) l_0_15_26)))
 (let ((?x27528 (* 8.0 l_0_15_21)))
 (let ((?x27614 (* ?x27528 l_0_15_28)))
 (let ((?x28100 (* 4.0 l_0_15_21)))
 (let ((?x28101 (* ?x28100 l_0_15_24)))
 (let ((?x27525 (* 8.0 l_0_15_20)))
 (let ((?x27612 (* ?x27525 l_0_15_27)))
 (let ((?x28096 (* 4.0 l_0_15_20)))
 (let ((?x28097 (* ?x28096 l_0_15_23)))
 (let ((?x27522 (* 8.0 l_0_15_19)))
 (let ((?x27610 (* ?x27522 l_0_15_26)))
 (let ((?x28653 (- (+ (- (+ (* (* (- 4.0) l_0_15_19) l_0_15_22) ?x27610) ?x28097) ?x27612) ?x28101)))
 (let ((?x28660 (- (+ (+ (+ (+ (+ (+ ?x28653 ?x27614) ?x28468) ?x28471) ?x28474) ?x28477) ?x28106) ?x27622)))
 (let ((?x28667 (- (- (- (- (+ (- (+ ?x28660 ?x28109) ?x27624) ?x28112) ?x27626) ?x28485) ?x28487) ?x28489)))
 (let ((?x28672 (+ (+ (- ?x28667 ?x28491) (* (* 2.0 l_0_15_49) l_0_15_56)) (* (* 2.0 l_0_15_50) l_0_15_57))))
 (= (+ ?x28672 (* (* 2.0 l_0_15_51) l_0_15_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10821 (* l_0_15_40 l_0_15_40)))
 (let ((?x17421 (* 2.0 ?x10821)))
 (let ((?x27710 (* (* 8.0 l_0_15_40) l_0_15_44)))
 (let ((?x16463 (* l_0_15_39 l_0_15_39)))
 (let ((?x3573 (* 2.0 ?x16463)))
 (let ((?x27707 (* (* 8.0 l_0_15_39) l_0_15_43)))
 (let ((?x16461 (* l_0_15_38 l_0_15_38)))
 (let ((?x3510 (* 2.0 ?x16461)))
 (let ((?x27704 (* (* 8.0 l_0_15_38) l_0_15_42)))
 (let ((?x10727 (* l_0_15_37 l_0_15_37)))
 (let ((?x28635 (* 2.0 ?x10727)))
 (let ((?x27701 (* (* 8.0 l_0_15_37) l_0_15_41)))
 (let ((?x27694 (* (* 8.0 l_0_15_25) l_0_15_29)))
 (let ((?x27691 (* (* 8.0 l_0_15_24) l_0_15_28)))
 (let ((?x27688 (* (* 8.0 l_0_15_23) l_0_15_27)))
 (let ((?x27685 (* (* 8.0 l_0_15_22) l_0_15_26)))
 (let ((?x28688 (- (+ (- ?x27685 (* (* 2.0 l_0_15_22) l_0_15_22)) ?x27688) (* (* 2.0 l_0_15_23) l_0_15_23))))
 (let ((?x28694 (- (+ (- (+ ?x28688 ?x27691) (* (* 2.0 l_0_15_24) l_0_15_24)) ?x27694) (* (* 2.0 l_0_15_25) l_0_15_25))))
 (let ((?x28701 (- (+ (- (+ (- (+ (- ?x28694 ?x27701) ?x28635) ?x27704) ?x3510) ?x27707) ?x3573) ?x27710)))
 (let ((?x28708 (+ (+ (+ ?x28701 ?x17421) (* (* 2.0 l_0_15_52) l_0_15_56)) (* (* 2.0 l_0_15_53) l_0_15_57))))
 (let ((?x28714 (+ (+ ?x28708 (* (* 2.0 l_0_15_54) l_0_15_58)) (* (* 2.0 l_0_15_55) l_0_15_59))))
 (= ?x28714 0.0)))))))))))))))))))))))
(assert
 (let ((?x28740 (* l_0_15_55 l_0_15_55)))
 (let ((?x28738 (* l_0_15_54 l_0_15_54)))
 (let ((?x28736 (* l_0_15_53 l_0_15_53)))
 (let ((?x28734 (* l_0_15_52 l_0_15_52)))
 (let ((?x27652 (* 4.0 l_0_15_40)))
 (let ((?x27653 (* ?x27652 l_0_15_40)))
 (let ((?x27649 (* 4.0 l_0_15_39)))
 (let ((?x27650 (* ?x27649 l_0_15_39)))
 (let ((?x27646 (* 4.0 l_0_15_38)))
 (let ((?x27647 (* ?x27646 l_0_15_38)))
 (let ((?x27643 (* 4.0 l_0_15_37)))
 (let ((?x27644 (* ?x27643 l_0_15_37)))
 (let ((?x27638 (* l_0_15_25 l_0_15_25)))
 (let ((?x27639 (* 4.0 ?x27638)))
 (let ((?x27635 (* l_0_15_24 l_0_15_24)))
 (let ((?x27636 (* 4.0 ?x27635)))
 (let ((?x10705 (* l_0_15_23 l_0_15_23)))
 (let ((?x16364 (* 4.0 ?x10705)))
 (let ((?x21769 (* l_0_15_22 l_0_15_22)))
 (let ((?x21726 (* 4.0 ?x21769)))
 (let ((?x28733 (- (- (- (- (+ (+ (+ ?x21726 ?x16364) ?x27636) ?x27639) ?x27644) ?x27647) ?x27650) ?x27653)))
 (= (+ (+ (+ (+ ?x28733 ?x28734) ?x28736) ?x28738) ?x28740) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_15_1 0.0))
(assert
 (>= l_0_15_3 0.0))
(assert
 (>= l_0_15_6 0.0))
(assert
 (>= l_0_15_10 0.0))
(assert
 (>= l_0_15_15 0.0))
(assert
 (>= l_0_15_16 0.0))
(assert
 (>= l_0_15_18 0.0))
(assert
 (>= l_0_15_21 0.0))
(assert
 (>= l_0_15_25 0.0))
(assert
 (>= l_0_15_30 0.0))
(assert
 (>= l_0_15_31 0.0))
(assert
 (>= l_0_15_33 0.0))
(assert
 (>= l_0_15_36 0.0))
(assert
 (>= l_0_15_40 0.0))
(assert
 (>= l_0_15_45 0.0))
(assert
 (>= l_0_15_46 0.0))
(assert
 (>= l_0_15_48 0.0))
(assert
 (>= l_0_15_51 0.0))
(assert
 (>= l_0_15_55 0.0))
(assert
 (>= l_0_15_60 0.0))
(assert
 (>= l_0_15_61 0.0))
(assert
 (>= l_0_15_63 0.0))
(assert
 (>= l_0_15_66 0.0))
(assert
 (>= l_0_15_70 0.0))
(assert
 (>= l_0_15_75 0.0))
(assert
 (>= l_0_15_76 0.0))
(assert
 (>= l_0_15_78 0.0))
(assert
 (>= l_0_15_81 0.0))
(assert
 (>= l_0_15_85 0.0))
(assert
 (>= l_0_15_90 0.0))
(assert
 (>= l_0_15_91 0.0))
(assert
 (>= l_0_15_93 0.0))
(assert
 (>= l_0_15_96 0.0))
(assert
 (>= l_0_15_100 0.0))
(assert
 (>= l_0_15_105 0.0))
(assert
 (let ((?x28769 (* 4.0 l_0_16_31)))
 (let ((?x28770 (* ?x28769 l_0_16_31)))
 (let ((?x28766 (* l_0_16_16 l_0_16_16)))
 (let ((?x28767 (* 4.0 ?x28766)))
 (let ((?x28768 (+ (- (* (* 2.0 l_0_16_1) l_0_16_2) (* l_0_16_1 l_0_16_1)) ?x28767)))
 (= (+ (- (- ?x28768 ?x28770) (* (* 2.0 l_0_16_61) l_0_16_62)) 1.0) 0.0)))))))
(assert
 (let ((?x28792 (- (- (* 1.0 (* l_0_16_1 l_0_16_1)) (* l_0_16_61 l_0_16_61)) 1.0)))
 (= ?x28792 0.0)))
(assert
 (let ((?x28815 (* l_0_16_63 l_0_16_63)))
 (let ((?x28813 (* l_0_16_62 l_0_16_62)))
 (let ((?x28810 (* 8.0 l_0_16_31)))
 (let ((?x28811 (* ?x28810 l_0_16_32)))
 (let ((?x28801 (* 8.0 l_0_16_16)))
 (let ((?x28802 (* ?x28801 l_0_16_17)))
 (let ((?x28806 (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_2) ?x28802) (* 1.0 (* l_0_16_2 l_0_16_2)))))
 (let ((?x28816 (- (- (- (+ ?x28806 (* 1.0 (* l_0_16_3 l_0_16_3))) ?x28811) ?x28813) ?x28815)))
 (= ?x28816 0.0))))))))))
(assert
 (let ((?x28810 (* 8.0 l_0_16_31)))
 (let ((?x28840 (* ?x28810 l_0_16_34)))
 (let ((?x28769 (* 4.0 l_0_16_31)))
 (let ((?x28838 (* ?x28769 l_0_16_32)))
 (let ((?x28835 (* 2.0 l_0_16_3)))
 (let ((?x28836 (* ?x28835 l_0_16_5)))
 (let ((?x28832 (* 2.0 l_0_16_2)))
 (let ((?x28833 (* ?x28832 l_0_16_4)))
 (let ((?x28801 (* 8.0 l_0_16_16)))
 (let ((?x28830 (* ?x28801 l_0_16_19)))
 (let ((?x28827 (* 4.0 l_0_16_16)))
 (let ((?x28828 (* ?x28827 l_0_16_17)))
 (let ((?x28837 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_4) ?x28828) ?x28830) ?x28833) ?x28836)))
 (let ((?x28847 (- (- (- (- ?x28837 ?x28838) ?x28840) (* (* 2.0 l_0_16_62) l_0_16_64)) (* (* 2.0 l_0_16_63) l_0_16_65))))
 (= ?x28847 0.0))))))))))))))))
(assert
 (let ((?x28810 (* 8.0 l_0_16_31)))
 (let ((?x28876 (* ?x28810 l_0_16_37)))
 (let ((?x28811 (* ?x28810 l_0_16_32)))
 (let ((?x28835 (* 2.0 l_0_16_3)))
 (let ((?x28873 (* ?x28835 l_0_16_8)))
 (let ((?x28832 (* 2.0 l_0_16_2)))
 (let ((?x28871 (* ?x28832 l_0_16_7)))
 (let ((?x28801 (* 8.0 l_0_16_16)))
 (let ((?x28869 (* ?x28801 l_0_16_22)))
 (let ((?x28870 (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_7) (* ?x28801 l_0_16_17)) ?x28869)))
 (let ((?x28880 (- (- (- (+ (+ ?x28870 ?x28871) ?x28873) ?x28811) ?x28876) (* (* 2.0 l_0_16_46) l_0_16_47))))
 (let ((?x28884 (- (- ?x28880 (* (* 2.0 l_0_16_62) l_0_16_67)) (* (* 2.0 l_0_16_63) l_0_16_68))))
 (= ?x28884 0.0))))))))))))))
(assert
 (let ((?x28810 (* 8.0 l_0_16_31)))
 (let ((?x28913 (* ?x28810 l_0_16_41)))
 (let ((?x28769 (* 4.0 l_0_16_31)))
 (let ((?x28838 (* ?x28769 l_0_16_32)))
 (let ((?x28801 (* 8.0 l_0_16_16)))
 (let ((?x28910 (* ?x28801 l_0_16_26)))
 (let ((?x28827 (* 4.0 l_0_16_16)))
 (let ((?x28828 (* ?x28827 l_0_16_17)))
 (let ((?x28906 (* 2.0 l_0_16_12)))
 (let ((?x28907 (* ?x28906 l_0_16_3)))
 (let ((?x28905 (+ (* (* (- 2.0) l_0_16_1) l_0_16_11) (* (* 2.0 l_0_16_11) l_0_16_2))))
 (let ((?x28916 (- (- (+ (+ (- (+ ?x28905 ?x28907) ?x28828) ?x28910) ?x28838) ?x28913) (* (* 2.0 l_0_16_62) l_0_16_71))))
 (= (- ?x28916 (* (* 2.0 l_0_16_63) l_0_16_72)) 0.0))))))))))))))
(assert
 (let ((?x28959 (* 4.0 l_0_16_33)))
 (let ((?x28960 (* ?x28959 l_0_16_33)))
 (let ((?x28956 (* 4.0 l_0_16_32)))
 (let ((?x28957 (* ?x28956 l_0_16_32)))
 (let ((?x28807 (* l_0_16_3 l_0_16_3)))
 (let ((?x28804 (* l_0_16_2 l_0_16_2)))
 (let ((?x28951 (* l_0_16_18 l_0_16_18)))
 (let ((?x28952 (* 4.0 ?x28951)))
 (let ((?x28949 (* l_0_16_17 l_0_16_17)))
 (let ((?x28950 (* 4.0 ?x28949)))
 (let ((?x28953 (+ ?x28950 ?x28952)))
 (= (- (- (- (- ?x28953 ?x28804) ?x28807) ?x28957) ?x28960) 0.0)))))))))))))
(assert
 (let ((?x28983 (* 8.0 l_0_16_33)))
 (let ((?x28984 (* ?x28983 l_0_16_35)))
 (let ((?x28977 (* 8.0 l_0_16_32)))
 (let ((?x28978 (* ?x28977 l_0_16_34)))
 (let ((?x28835 (* 2.0 l_0_16_3)))
 (let ((?x28836 (* ?x28835 l_0_16_5)))
 (let ((?x28832 (* 2.0 l_0_16_2)))
 (let ((?x28833 (* ?x28832 l_0_16_4)))
 (let ((?x28951 (* l_0_16_18 l_0_16_18)))
 (let ((?x28973 (* 2.0 ?x28951)))
 (let ((?x28970 (* 8.0 l_0_16_18)))
 (let ((?x28971 (* ?x28970 l_0_16_20)))
 (let ((?x28949 (* l_0_16_17 l_0_16_17)))
 (let ((?x28968 (* 2.0 ?x28949)))
 (let ((?x28966 (* 8.0 l_0_16_17)))
 (let ((?x28967 (* ?x28966 l_0_16_19)))
 (let ((?x28982 (- (- (- (- (+ (+ (+ ?x28967 ?x28968) ?x28971) ?x28973) ?x28833) ?x28836) ?x28978) (* (* 2.0 l_0_16_32) l_0_16_32))))
 (= (- (- ?x28982 ?x28984) (* (* 2.0 l_0_16_33) l_0_16_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x29014 (* l_0_16_48 l_0_16_48)))
 (let ((?x29012 (* l_0_16_47 l_0_16_47)))
 (let ((?x28959 (* 4.0 l_0_16_33)))
 (let ((?x28960 (* ?x28959 l_0_16_33)))
 (let ((?x28983 (* 8.0 l_0_16_33)))
 (let ((?x29009 (* ?x28983 l_0_16_38)))
 (let ((?x28956 (* 4.0 l_0_16_32)))
 (let ((?x28957 (* ?x28956 l_0_16_32)))
 (let ((?x28977 (* 8.0 l_0_16_32)))
 (let ((?x29006 (* ?x28977 l_0_16_37)))
 (let ((?x28835 (* 2.0 l_0_16_3)))
 (let ((?x28873 (* ?x28835 l_0_16_8)))
 (let ((?x28832 (* 2.0 l_0_16_2)))
 (let ((?x28871 (* ?x28832 l_0_16_7)))
 (let ((?x28951 (* l_0_16_18 l_0_16_18)))
 (let ((?x28952 (* 4.0 ?x28951)))
 (let ((?x28970 (* 8.0 l_0_16_18)))
 (let ((?x29001 (* ?x28970 l_0_16_23)))
 (let ((?x28949 (* l_0_16_17 l_0_16_17)))
 (let ((?x28950 (* 4.0 ?x28949)))
 (let ((?x28966 (* 8.0 l_0_16_17)))
 (let ((?x28999 (* ?x28966 l_0_16_22)))
 (let ((?x29008 (- (- (- (- (+ (+ (+ ?x28999 ?x28950) ?x29001) ?x28952) ?x28871) ?x28873) ?x29006) ?x28957)))
 (= (- (- (- (- ?x29008 ?x29009) ?x28960) ?x29012) ?x29014) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x3958 (* l_0_16_33 l_0_16_33)))
 (let ((?x23225 (* 2.0 ?x3958)))
 (let ((?x28983 (* 8.0 l_0_16_33)))
 (let ((?x29041 (* ?x28983 l_0_16_42)))
 (let ((?x12457 (* l_0_16_32 l_0_16_32)))
 (let ((?x23221 (* 2.0 ?x12457)))
 (let ((?x28977 (* 8.0 l_0_16_32)))
 (let ((?x29038 (* ?x28977 l_0_16_41)))
 (let ((?x28970 (* 8.0 l_0_16_18)))
 (let ((?x29033 (* ?x28970 l_0_16_27)))
 (let ((?x28966 (* 8.0 l_0_16_17)))
 (let ((?x29028 (* ?x28966 l_0_16_26)))
 (let ((?x28906 (* 2.0 l_0_16_12)))
 (let ((?x28907 (* ?x28906 l_0_16_3)))
 (let ((?x29032 (- (+ (- (* (* (- 2.0) l_0_16_11) l_0_16_2) ?x28907) ?x29028) (* (* 2.0 l_0_16_17) l_0_16_17))))
 (let ((?x29040 (+ (- (- (+ ?x29032 ?x29033) (* (* 2.0 l_0_16_18) l_0_16_18)) ?x29038) ?x23221)))
 (= (+ (- ?x29040 ?x29041) ?x23225) 0.0))))))))))))))))))
(assert
 (let ((?x29101 (* l_0_16_6 l_0_16_6)))
 (let ((?x29099 (* l_0_16_5 l_0_16_5)))
 (let ((?x29097 (* l_0_16_4 l_0_16_4)))
 (let ((?x29094 (* 4.0 l_0_16_36)))
 (let ((?x29095 (* ?x29094 l_0_16_36)))
 (let ((?x29091 (* 4.0 l_0_16_35)))
 (let ((?x29092 (* ?x29091 l_0_16_35)))
 (let ((?x29088 (* 4.0 l_0_16_34)))
 (let ((?x29089 (* ?x29088 l_0_16_34)))
 (let ((?x28959 (* 4.0 l_0_16_33)))
 (let ((?x29086 (* ?x28959 l_0_16_35)))
 (let ((?x28956 (* 4.0 l_0_16_32)))
 (let ((?x29084 (* ?x28956 l_0_16_34)))
 (let ((?x29081 (* 2.0 l_0_16_31)))
 (let ((?x29082 (* ?x29081 l_0_16_32)))
 (let ((?x29078 (* l_0_16_21 l_0_16_21)))
 (let ((?x29079 (* 4.0 ?x29078)))
 (let ((?x29075 (* l_0_16_20 l_0_16_20)))
 (let ((?x29076 (* 4.0 ?x29075)))
 (let ((?x29072 (* l_0_16_19 l_0_16_19)))
 (let ((?x29073 (* 4.0 ?x29072)))
 (let ((?x29069 (* 4.0 l_0_16_18)))
 (let ((?x29070 (* ?x29069 l_0_16_20)))
 (let ((?x29066 (* 4.0 l_0_16_17)))
 (let ((?x29067 (* ?x29066 l_0_16_19)))
 (let ((?x29077 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_16) l_0_16_17) ?x29067) ?x29070) ?x29073) ?x29076)))
 (let ((?x29096 (- (- (- (- (- (+ (+ ?x29077 ?x29079) ?x29082) ?x29084) ?x29086) ?x29089) ?x29092) ?x29095)))
 (= (- (- (- ?x29096 ?x29097) ?x29099) ?x29101) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x29169 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x29166 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x29157 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x29153 (* 8.0 l_0_16_36)))
 (let ((?x29154 (* ?x29153 l_0_16_39)))
 (let ((?x29150 (* 8.0 l_0_16_35)))
 (let ((?x29151 (* ?x29150 l_0_16_38)))
 (let ((?x29147 (* 8.0 l_0_16_34)))
 (let ((?x29148 (* ?x29147 l_0_16_37)))
 (let ((?x28959 (* 4.0 l_0_16_33)))
 (let ((?x29145 (* ?x28959 l_0_16_38)))
 (let ((?x28983 (* 8.0 l_0_16_33)))
 (let ((?x28984 (* ?x28983 l_0_16_35)))
 (let ((?x28956 (* 4.0 l_0_16_32)))
 (let ((?x29142 (* ?x28956 l_0_16_37)))
 (let ((?x28977 (* 8.0 l_0_16_32)))
 (let ((?x28978 (* ?x28977 l_0_16_34)))
 (let ((?x29138 (* 8.0 l_0_16_21)))
 (let ((?x29139 (* ?x29138 l_0_16_24)))
 (let ((?x29135 (* 8.0 l_0_16_20)))
 (let ((?x29136 (* ?x29135 l_0_16_23)))
 (let ((?x29132 (* 8.0 l_0_16_19)))
 (let ((?x29133 (* ?x29132 l_0_16_22)))
 (let ((?x29069 (* 4.0 l_0_16_18)))
 (let ((?x29130 (* ?x29069 l_0_16_23)))
 (let ((?x28970 (* 8.0 l_0_16_18)))
 (let ((?x28971 (* ?x28970 l_0_16_20)))
 (let ((?x29066 (* 4.0 l_0_16_17)))
 (let ((?x29127 (* ?x29066 l_0_16_22)))
 (let ((?x28966 (* 8.0 l_0_16_17)))
 (let ((?x28967 (* ?x28966 l_0_16_19)))
 (let ((?x29141 (- (+ (+ (+ (+ (+ (+ ?x28967 ?x29127) ?x28971) ?x29130) ?x29133) ?x29136) ?x29139) ?x28978)))
 (let ((?x29158 (- (- (- (- (- (- (- ?x29141 ?x29142) ?x28984) ?x29145) ?x29148) ?x29151) ?x29154) ?x29157)))
 (let ((?x29164 (- (- ?x29158 (* (* 2.0 l_0_16_47) l_0_16_49)) (* (* 2.0 l_0_16_48) l_0_16_50))))
 (= (- (- ?x29164 ?x29166) ?x29169) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29153 (* 8.0 l_0_16_36)))
 (let ((?x29226 (* ?x29153 l_0_16_43)))
 (let ((?x29150 (* 8.0 l_0_16_35)))
 (let ((?x29224 (* ?x29150 l_0_16_42)))
 (let ((?x29147 (* 8.0 l_0_16_34)))
 (let ((?x29222 (* ?x29147 l_0_16_41)))
 (let ((?x28959 (* 4.0 l_0_16_33)))
 (let ((?x29220 (* ?x28959 l_0_16_42)))
 (let ((?x29086 (* ?x28959 l_0_16_35)))
 (let ((?x28956 (* 4.0 l_0_16_32)))
 (let ((?x29217 (* ?x28956 l_0_16_41)))
 (let ((?x29084 (* ?x28956 l_0_16_34)))
 (let ((?x29138 (* 8.0 l_0_16_21)))
 (let ((?x29214 (* ?x29138 l_0_16_28)))
 (let ((?x29135 (* 8.0 l_0_16_20)))
 (let ((?x29212 (* ?x29135 l_0_16_27)))
 (let ((?x29132 (* 8.0 l_0_16_19)))
 (let ((?x29210 (* ?x29132 l_0_16_26)))
 (let ((?x29069 (* 4.0 l_0_16_18)))
 (let ((?x29208 (* ?x29069 l_0_16_27)))
 (let ((?x29070 (* ?x29069 l_0_16_20)))
 (let ((?x29066 (* 4.0 l_0_16_17)))
 (let ((?x29205 (* ?x29066 l_0_16_26)))
 (let ((?x29067 (* ?x29066 l_0_16_19)))
 (let ((?x29201 (* 2.0 l_0_16_13)))
 (let ((?x29202 (* ?x29201 l_0_16_6)))
 (let ((?x28906 (* 2.0 l_0_16_12)))
 (let ((?x29199 (* ?x28906 l_0_16_5)))
 (let ((?x29206 (+ (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_4) ?x29199) ?x29202) ?x29067) ?x29205)))
 (let ((?x29218 (- (+ (+ (+ (+ (+ (- ?x29206 ?x29070) ?x29208) ?x29210) ?x29212) ?x29214) ?x29084) ?x29217)))
 (= (- (- (- (- (+ ?x29218 ?x29086) ?x29220) ?x29222) ?x29224) ?x29226) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x29293 (* l_0_16_9 l_0_16_9)))
 (let ((?x29291 (* l_0_16_8 l_0_16_8)))
 (let ((?x29289 (* l_0_16_7 l_0_16_7)))
 (let ((?x29282 (* 4.0 l_0_16_40)))
 (let ((?x29283 (* ?x29282 l_0_16_40)))
 (let ((?x29279 (* 4.0 l_0_16_39)))
 (let ((?x29280 (* ?x29279 l_0_16_39)))
 (let ((?x29276 (* 4.0 l_0_16_38)))
 (let ((?x29277 (* ?x29276 l_0_16_38)))
 (let ((?x29273 (* 4.0 l_0_16_37)))
 (let ((?x29274 (* ?x29273 l_0_16_37)))
 (let ((?x28983 (* 8.0 l_0_16_33)))
 (let ((?x29009 (* ?x28983 l_0_16_38)))
 (let ((?x28977 (* 8.0 l_0_16_32)))
 (let ((?x29006 (* ?x28977 l_0_16_37)))
 (let ((?x29268 (* l_0_16_25 l_0_16_25)))
 (let ((?x29269 (* 4.0 ?x29268)))
 (let ((?x29265 (* l_0_16_24 l_0_16_24)))
 (let ((?x29266 (* 4.0 ?x29265)))
 (let ((?x29262 (* l_0_16_23 l_0_16_23)))
 (let ((?x29263 (* 4.0 ?x29262)))
 (let ((?x29259 (* l_0_16_22 l_0_16_22)))
 (let ((?x29260 (* 4.0 ?x29259)))
 (let ((?x28970 (* 8.0 l_0_16_18)))
 (let ((?x29001 (* ?x28970 l_0_16_23)))
 (let ((?x28966 (* 8.0 l_0_16_17)))
 (let ((?x28999 (* ?x28966 l_0_16_22)))
 (let ((?x29267 (+ (+ (+ (+ (+ (* (- l_0_16_10) l_0_16_10) ?x28999) ?x29001) ?x29260) ?x29263) ?x29266)))
 (let ((?x29284 (- (- (- (- (- (- (+ ?x29267 ?x29269) ?x29006) ?x29009) ?x29274) ?x29277) ?x29280) ?x29283)))
 (let ((?x29288 (- (- ?x29284 (* (* 2.0 l_0_16_47) l_0_16_52)) (* (* 2.0 l_0_16_48) l_0_16_53))))
 (= (- (- (- ?x29288 ?x29289) ?x29291) ?x29293) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x29353 (* (* 8.0 l_0_16_40) l_0_16_44)))
 (let ((?x29350 (* (* 8.0 l_0_16_39) l_0_16_43)))
 (let ((?x29347 (* (* 8.0 l_0_16_38) l_0_16_42)))
 (let ((?x29344 (* (* 8.0 l_0_16_37) l_0_16_41)))
 (let ((?x28983 (* 8.0 l_0_16_33)))
 (let ((?x29041 (* ?x28983 l_0_16_42)))
 (let ((?x28959 (* 4.0 l_0_16_33)))
 (let ((?x29145 (* ?x28959 l_0_16_38)))
 (let ((?x28977 (* 8.0 l_0_16_32)))
 (let ((?x29038 (* ?x28977 l_0_16_41)))
 (let ((?x28956 (* 4.0 l_0_16_32)))
 (let ((?x29142 (* ?x28956 l_0_16_37)))
 (let ((?x29337 (* (* 8.0 l_0_16_25) l_0_16_29)))
 (let ((?x29334 (* (* 8.0 l_0_16_24) l_0_16_28)))
 (let ((?x29331 (* (* 8.0 l_0_16_23) l_0_16_27)))
 (let ((?x29328 (* (* 8.0 l_0_16_22) l_0_16_26)))
 (let ((?x28970 (* 8.0 l_0_16_18)))
 (let ((?x29033 (* ?x28970 l_0_16_27)))
 (let ((?x29069 (* 4.0 l_0_16_18)))
 (let ((?x29130 (* ?x29069 l_0_16_23)))
 (let ((?x28966 (* 8.0 l_0_16_17)))
 (let ((?x29028 (* ?x28966 l_0_16_26)))
 (let ((?x29066 (* 4.0 l_0_16_17)))
 (let ((?x29127 (* ?x29066 l_0_16_22)))
 (let ((?x29201 (* 2.0 l_0_16_13)))
 (let ((?x29321 (* ?x29201 l_0_16_9)))
 (let ((?x28906 (* 2.0 l_0_16_12)))
 (let ((?x29319 (* ?x28906 l_0_16_8)))
 (let ((?x28903 (* 2.0 l_0_16_11)))
 (let ((?x29317 (* ?x28903 l_0_16_7)))
 (let ((?x29323 (- (- (- (- (* (* (- 2.0) l_0_16_10) l_0_16_14) ?x29317) ?x29319) ?x29321) ?x29127)))
 (let ((?x29338 (+ (+ (+ (+ (+ (- (+ ?x29323 ?x29028) ?x29130) ?x29033) ?x29328) ?x29331) ?x29334) ?x29337)))
 (let ((?x29351 (- (- (- (- (+ (- (+ ?x29338 ?x29142) ?x29038) ?x29145) ?x29041) ?x29344) ?x29347) ?x29350)))
 (let ((?x29358 (- (- (- ?x29351 ?x29353) (* (* 2.0 l_0_16_47) l_0_16_56)) (* (* 2.0 l_0_16_48) l_0_16_57))))
 (= ?x29358 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29436 (* (* 4.0 l_0_16_45) l_0_16_45)))
 (let ((?x29433 (* (* 4.0 l_0_16_44) l_0_16_44)))
 (let ((?x29430 (* (* 4.0 l_0_16_43) l_0_16_43)))
 (let ((?x29427 (* (* 4.0 l_0_16_42) l_0_16_42)))
 (let ((?x29424 (* (* 4.0 l_0_16_41) l_0_16_41)))
 (let ((?x28959 (* 4.0 l_0_16_33)))
 (let ((?x29220 (* ?x28959 l_0_16_42)))
 (let ((?x28956 (* 4.0 l_0_16_32)))
 (let ((?x29217 (* ?x28956 l_0_16_41)))
 (let ((?x29081 (* 2.0 l_0_16_31)))
 (let ((?x29082 (* ?x29081 l_0_16_32)))
 (let ((?x29417 (* l_0_16_30 l_0_16_30)))
 (let ((?x29418 (* 4.0 ?x29417)))
 (let ((?x29414 (* l_0_16_29 l_0_16_29)))
 (let ((?x29415 (* 4.0 ?x29414)))
 (let ((?x29411 (* l_0_16_28 l_0_16_28)))
 (let ((?x29412 (* 4.0 ?x29411)))
 (let ((?x29408 (* l_0_16_27 l_0_16_27)))
 (let ((?x29409 (* 4.0 ?x29408)))
 (let ((?x29405 (* l_0_16_26 l_0_16_26)))
 (let ((?x29406 (* 4.0 ?x29405)))
 (let ((?x29069 (* 4.0 l_0_16_18)))
 (let ((?x29208 (* ?x29069 l_0_16_27)))
 (let ((?x29066 (* 4.0 l_0_16_17)))
 (let ((?x29205 (* ?x29066 l_0_16_26)))
 (let ((?x29398 (* l_0_16_15 l_0_16_15)))
 (let ((?x29396 (* l_0_16_14 l_0_16_14)))
 (let ((?x29394 (* l_0_16_13 l_0_16_13)))
 (let ((?x29395 (- (- (* (- l_0_16_11) l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x29394)))
 (let ((?x29403 (- (+ (- (- ?x29395 ?x29396) ?x29398) (* (* 2.0 l_0_16_16) l_0_16_17)) ?x29205)))
 (let ((?x29420 (- (+ (+ (+ (+ (+ (- ?x29403 ?x29208) ?x29406) ?x29409) ?x29412) ?x29415) ?x29418) ?x29082)))
 (let ((?x29437 (- (- (- (- (- (+ (+ ?x29420 ?x29217) ?x29220) ?x29424) ?x29427) ?x29430) ?x29433) ?x29436)))
 (= ?x29437 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x28766 (* l_0_16_16 l_0_16_16)))
 (let ((?x29456 (* 2.0 ?x28766)))
 (let ((?x29459 (- (+ (* (* 2.0 l_0_16_1) l_0_16_4) ?x29456) (* (* 2.0 l_0_16_31) l_0_16_31))))
 (= (- ?x29459 (* (* 2.0 l_0_16_61) l_0_16_64)) 0.0)))))
(assert
 (let ((?x29467 (* l_0_16_46 l_0_16_46)))
 (let ((?x28769 (* 4.0 l_0_16_31)))
 (let ((?x28770 (* ?x28769 l_0_16_31)))
 (let ((?x28766 (* l_0_16_16 l_0_16_16)))
 (let ((?x28767 (* 4.0 ?x28766)))
 (let ((?x29470 (- (- (- (+ (* (* 2.0 l_0_16_1) l_0_16_7) ?x28767) ?x28770) ?x29467) (* (* 2.0 l_0_16_61) l_0_16_67))))
 (= ?x29470 0.0))))))))
(assert
 (let ((?x28783 (* l_0_16_31 l_0_16_31)))
 (let ((?x23572 (* 2.0 ?x28783)))
 (let ((?x29480 (- (* (* 2.0 l_0_16_1) l_0_16_11) (* (* 2.0 l_0_16_16) l_0_16_16))))
 (= (- (+ ?x29480 ?x23572) (* (* 2.0 l_0_16_61) l_0_16_71)) 0.0)))))
(assert
 (let ((?x29507 (* l_0_16_66 l_0_16_66)))
 (let ((?x29505 (* l_0_16_65 l_0_16_65)))
 (let ((?x29503 (* l_0_16_64 l_0_16_64)))
 (let ((?x28783 (* l_0_16_31 l_0_16_31)))
 (let ((?x28769 (* 4.0 l_0_16_31)))
 (let ((?x29494 (* ?x28769 l_0_16_34)))
 (let ((?x29495 (- (- (* (* 4.0 l_0_16_16) l_0_16_19) (* l_0_16_16 l_0_16_16)) ?x29494)))
 (let ((?x29500 (+ (+ (+ ?x29495 ?x28783) (* 1.0 (* l_0_16_4 l_0_16_4))) (* 1.0 (* l_0_16_5 l_0_16_5)))))
 (let ((?x29508 (- (- (- (+ ?x29500 (* 1.0 (* l_0_16_6 l_0_16_6))) ?x29503) ?x29505) ?x29507)))
 (= ?x29508 0.0)))))))))))
(assert
 (let ((?x29169 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x29166 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x29157 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x28769 (* 4.0 l_0_16_31)))
 (let ((?x29524 (* ?x28769 l_0_16_37)))
 (let ((?x28810 (* 8.0 l_0_16_31)))
 (let ((?x28840 (* ?x28810 l_0_16_34)))
 (let ((?x28827 (* 4.0 l_0_16_16)))
 (let ((?x29521 (* ?x28827 l_0_16_22)))
 (let ((?x28801 (* 8.0 l_0_16_16)))
 (let ((?x28830 (* ?x28801 l_0_16_19)))
 (let ((?x29528 (- (+ (- (- (+ ?x28830 ?x29521) ?x28840) ?x29524) ?x29157) (* (* 2.0 l_0_16_46) l_0_16_49))))
 (let ((?x29536 (- (- (+ (+ ?x29528 ?x29166) ?x29169) (* (* 2.0 l_0_16_64) l_0_16_67)) (* (* 2.0 l_0_16_65) l_0_16_68))))
 (= (- ?x29536 (* (* 2.0 l_0_16_66) l_0_16_69)) 0.0)))))))))))))))
(assert
 (let ((?x28769 (* 4.0 l_0_16_31)))
 (let ((?x29568 (* ?x28769 l_0_16_41)))
 (let ((?x29494 (* ?x28769 l_0_16_34)))
 (let ((?x28827 (* 4.0 l_0_16_16)))
 (let ((?x29565 (* ?x28827 l_0_16_26)))
 (let ((?x29492 (* ?x28827 l_0_16_19)))
 (let ((?x29201 (* 2.0 l_0_16_13)))
 (let ((?x29202 (* ?x29201 l_0_16_6)))
 (let ((?x28906 (* 2.0 l_0_16_12)))
 (let ((?x29199 (* ?x28906 l_0_16_5)))
 (let ((?x29566 (+ (- (+ (+ (* (* 2.0 l_0_16_11) l_0_16_4) ?x29199) ?x29202) ?x29492) ?x29565)))
 (let ((?x29573 (- (- (- (+ ?x29566 ?x29494) ?x29568) (* (* 2.0 l_0_16_64) l_0_16_71)) (* (* 2.0 l_0_16_65) l_0_16_72))))
 (= (- ?x29573 (* (* 2.0 l_0_16_66) l_0_16_73)) 0.0))))))))))))))
(assert
 (let ((?x29604 (* l_0_16_70 l_0_16_70)))
 (let ((?x29600 (* l_0_16_69 l_0_16_69)))
 (let ((?x29598 (* l_0_16_68 l_0_16_68)))
 (let ((?x29596 (* l_0_16_67 l_0_16_67)))
 (let ((?x28810 (* 8.0 l_0_16_31)))
 (let ((?x28876 (* ?x28810 l_0_16_37)))
 (let ((?x28801 (* 8.0 l_0_16_16)))
 (let ((?x28869 (* ?x28801 l_0_16_22)))
 (let ((?x29595 (- (- (+ (* 1.0 (* l_0_16_10 l_0_16_10)) ?x28869) ?x28876) (* (* 2.0 l_0_16_46) l_0_16_52))))
 (let ((?x29603 (+ (- (- (- ?x29595 ?x29596) ?x29598) ?x29600) (* 1.0 (* l_0_16_7 l_0_16_7)))))
 (let ((?x29609 (+ (+ (- ?x29603 ?x29604) (* 1.0 (* l_0_16_8 l_0_16_8))) (* 1.0 (* l_0_16_9 l_0_16_9)))))
 (= ?x29609 0.0)))))))))))))
(assert
 (let ((?x28810 (* 8.0 l_0_16_31)))
 (let ((?x28913 (* ?x28810 l_0_16_41)))
 (let ((?x28769 (* 4.0 l_0_16_31)))
 (let ((?x29524 (* ?x28769 l_0_16_37)))
 (let ((?x28801 (* 8.0 l_0_16_16)))
 (let ((?x28910 (* ?x28801 l_0_16_26)))
 (let ((?x28827 (* 4.0 l_0_16_16)))
 (let ((?x29521 (* ?x28827 l_0_16_22)))
 (let ((?x29201 (* 2.0 l_0_16_13)))
 (let ((?x29321 (* ?x29201 l_0_16_9)))
 (let ((?x28906 (* 2.0 l_0_16_12)))
 (let ((?x29319 (* ?x28906 l_0_16_8)))
 (let ((?x28903 (* 2.0 l_0_16_11)))
 (let ((?x29317 (* ?x28903 l_0_16_7)))
 (let ((?x29618 (- (+ (+ (+ (* (* 2.0 l_0_16_10) l_0_16_14) ?x29317) ?x29319) ?x29321) ?x29521)))
 (let ((?x29623 (- (- (+ (+ ?x29618 ?x28910) ?x29524) ?x28913) (* (* 2.0 l_0_16_46) l_0_16_56))))
 (let ((?x29629 (- (- ?x29623 (* (* 2.0 l_0_16_67) l_0_16_71)) (* (* 2.0 l_0_16_68) l_0_16_72))))
 (let ((?x29635 (- (- ?x29629 (* (* 2.0 l_0_16_69) l_0_16_73)) (* (* 2.0 l_0_16_70) l_0_16_74))))
 (= ?x29635 0.0))))))))))))))))))))
(assert
 (let ((?x29663 (* l_0_16_75 l_0_16_75)))
 (let ((?x29661 (* l_0_16_74 l_0_16_74)))
 (let ((?x29659 (* l_0_16_73 l_0_16_73)))
 (let ((?x29657 (* l_0_16_72 l_0_16_72)))
 (let ((?x29655 (* l_0_16_71 l_0_16_71)))
 (let ((?x28783 (* l_0_16_31 l_0_16_31)))
 (let ((?x28769 (* 4.0 l_0_16_31)))
 (let ((?x29568 (* ?x28769 l_0_16_41)))
 (let ((?x28766 (* l_0_16_16 l_0_16_16)))
 (let ((?x28827 (* 4.0 l_0_16_16)))
 (let ((?x29565 (* ?x28827 l_0_16_26)))
 (let ((?x29644 (+ (* 1.0 (* l_0_16_11 l_0_16_11)) (* 1.0 (* l_0_16_12 l_0_16_12)))))
 (let ((?x29648 (+ (+ ?x29644 (* 1.0 (* l_0_16_13 l_0_16_13))) (* 1.0 (* l_0_16_14 l_0_16_14)))))
 (let ((?x29653 (+ (+ (- (+ ?x29648 (* 1.0 (* l_0_16_15 l_0_16_15))) ?x29565) ?x28766) ?x29568)))
 (= (- (- (- (- (- (- ?x29653 ?x28783) ?x29655) ?x29657) ?x29659) ?x29661) ?x29663) 0.0))))))))))))))))
(assert
 (let ((?x29081 (* 2.0 l_0_16_31)))
 (let ((?x23909 (* ?x29081 l_0_16_34)))
 (let ((?x29078 (* l_0_16_21 l_0_16_21)))
 (let ((?x18377 (* 2.0 ?x29078)))
 (let ((?x29075 (* l_0_16_20 l_0_16_20)))
 (let ((?x23688 (* 2.0 ?x29075)))
 (let ((?x29072 (* l_0_16_19 l_0_16_19)))
 (let ((?x18386 (* 2.0 ?x29072)))
 (let ((?x23910 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_16) l_0_16_19) ?x18386) ?x23688) ?x18377) ?x23909)))
 (let ((?x29675 (- (- ?x23910 (* (* 2.0 l_0_16_34) l_0_16_34)) (* (* 2.0 l_0_16_35) l_0_16_35))))
 (= (- ?x29675 (* (* 2.0 l_0_16_36) l_0_16_36)) 0.0))))))))))))
(assert
 (let ((?x29728 (* l_0_16_51 l_0_16_51)))
 (let ((?x29726 (* l_0_16_50 l_0_16_50)))
 (let ((?x29724 (* l_0_16_49 l_0_16_49)))
 (let ((?x29094 (* 4.0 l_0_16_36)))
 (let ((?x29095 (* ?x29094 l_0_16_36)))
 (let ((?x29721 (* ?x29094 l_0_16_39)))
 (let ((?x29091 (* 4.0 l_0_16_35)))
 (let ((?x29092 (* ?x29091 l_0_16_35)))
 (let ((?x29718 (* ?x29091 l_0_16_38)))
 (let ((?x29088 (* 4.0 l_0_16_34)))
 (let ((?x29089 (* ?x29088 l_0_16_34)))
 (let ((?x29715 (* ?x29088 l_0_16_37)))
 (let ((?x29081 (* 2.0 l_0_16_31)))
 (let ((?x29713 (* ?x29081 l_0_16_37)))
 (let ((?x29078 (* l_0_16_21 l_0_16_21)))
 (let ((?x29079 (* 4.0 ?x29078)))
 (let ((?x29709 (* 4.0 l_0_16_21)))
 (let ((?x29710 (* ?x29709 l_0_16_24)))
 (let ((?x29075 (* l_0_16_20 l_0_16_20)))
 (let ((?x29076 (* 4.0 ?x29075)))
 (let ((?x29705 (* 4.0 l_0_16_20)))
 (let ((?x29706 (* ?x29705 l_0_16_23)))
 (let ((?x29072 (* l_0_16_19 l_0_16_19)))
 (let ((?x29073 (* 4.0 ?x29072)))
 (let ((?x29703 (+ (* (* (- 2.0) l_0_16_16) l_0_16_22) (* (* 4.0 l_0_16_19) l_0_16_22))))
 (let ((?x29716 (- (+ (+ (+ (+ (+ (+ ?x29703 ?x29073) ?x29706) ?x29076) ?x29710) ?x29079) ?x29713) ?x29715)))
 (let ((?x29727 (- (- (- (- (- (- (- ?x29716 ?x29089) ?x29718) ?x29092) ?x29721) ?x29095) ?x29724) ?x29726)))
 (= (- ?x29727 ?x29728) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x4228 (* l_0_16_36 l_0_16_36)))
 (let ((?x29691 (* 2.0 ?x4228)))
 (let ((?x29094 (* 4.0 l_0_16_36)))
 (let ((?x29777 (* ?x29094 l_0_16_43)))
 (let ((?x4223 (* l_0_16_35 l_0_16_35)))
 (let ((?x29686 (* 2.0 ?x4223)))
 (let ((?x29091 (* 4.0 l_0_16_35)))
 (let ((?x29774 (* ?x29091 l_0_16_42)))
 (let ((?x29118 (* l_0_16_34 l_0_16_34)))
 (let ((?x29681 (* 2.0 ?x29118)))
 (let ((?x29088 (* 4.0 l_0_16_34)))
 (let ((?x29771 (* ?x29088 l_0_16_41)))
 (let ((?x29081 (* 2.0 l_0_16_31)))
 (let ((?x29769 (* ?x29081 l_0_16_41)))
 (let ((?x29709 (* 4.0 l_0_16_21)))
 (let ((?x29764 (* ?x29709 l_0_16_28)))
 (let ((?x29705 (* 4.0 l_0_16_20)))
 (let ((?x29759 (* ?x29705 l_0_16_27)))
 (let ((?x29701 (* 4.0 l_0_16_19)))
 (let ((?x29754 (* ?x29701 l_0_16_26)))
 (let ((?x29758 (- (+ (* (* (- 2.0) l_0_16_16) l_0_16_26) ?x29754) (* (* 2.0 l_0_16_19) l_0_16_19))))
 (let ((?x29768 (- (+ (- (+ ?x29758 ?x29759) (* (* 2.0 l_0_16_20) l_0_16_20)) ?x29764) (* (* 2.0 l_0_16_21) l_0_16_21))))
 (let ((?x29779 (+ (- (+ (- (+ (- (+ ?x29768 ?x29769) ?x29771) ?x29681) ?x29774) ?x29686) ?x29777) ?x29691)))
 (= ?x29779 0.0)))))))))))))))))))))))))
(assert
 (let ((?x3958 (* l_0_16_33 l_0_16_33)))
 (let ((?x12457 (* l_0_16_32 l_0_16_32)))
 (let ((?x29808 (+ (- (* (- l_0_16_17) l_0_16_17) (* l_0_16_18 l_0_16_18)) ?x12457)))
 (= (+ ?x29808 ?x3958) 0.0)))))
(assert
 (let ((?x28986 (* 2.0 l_0_16_33)))
 (let ((?x29821 (* ?x28986 l_0_16_35)))
 (let ((?x28980 (* 2.0 l_0_16_32)))
 (let ((?x29819 (* ?x28980 l_0_16_34)))
 (let ((?x29035 (* 2.0 l_0_16_18)))
 (let ((?x29817 (* ?x29035 l_0_16_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_17) l_0_16_19) ?x29817) ?x29819) ?x29821) 0.0))))))))
(assert
 (let ((?x28986 (* 2.0 l_0_16_33)))
 (let ((?x29834 (* ?x28986 l_0_16_38)))
 (let ((?x28980 (* 2.0 l_0_16_32)))
 (let ((?x29832 (* ?x28980 l_0_16_37)))
 (let ((?x29035 (* 2.0 l_0_16_18)))
 (let ((?x29830 (* ?x29035 l_0_16_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_17) l_0_16_22) ?x29830) ?x29832) ?x29834) 0.0))))))))
(assert
 (let ((?x28986 (* 2.0 l_0_16_33)))
 (let ((?x29850 (* ?x28986 l_0_16_42)))
 (let ((?x28980 (* 2.0 l_0_16_32)))
 (let ((?x29848 (* ?x28980 l_0_16_41)))
 (let ((?x29035 (* 2.0 l_0_16_18)))
 (let ((?x29846 (* ?x29035 l_0_16_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_17) l_0_16_26) ?x29846) ?x29848) ?x29850) 0.0))))))))
(assert
 (let ((?x4228 (* l_0_16_36 l_0_16_36)))
 (let ((?x4223 (* l_0_16_35 l_0_16_35)))
 (let ((?x29118 (* l_0_16_34 l_0_16_34)))
 (let ((?x29078 (* l_0_16_21 l_0_16_21)))
 (let ((?x29866 (- (- (* (- l_0_16_19) l_0_16_19) (* l_0_16_20 l_0_16_20)) ?x29078)))
 (= (+ (+ (+ ?x29866 ?x29118) ?x4223) ?x4228) 0.0)))))))
(assert
 (let ((?x29676 (* 2.0 l_0_16_36)))
 (let ((?x29890 (* ?x29676 l_0_16_39)))
 (let ((?x29673 (* 2.0 l_0_16_35)))
 (let ((?x29888 (* ?x29673 l_0_16_38)))
 (let ((?x29670 (* 2.0 l_0_16_34)))
 (let ((?x29886 (* ?x29670 l_0_16_37)))
 (let ((?x29766 (* 2.0 l_0_16_21)))
 (let ((?x29884 (* ?x29766 l_0_16_24)))
 (let ((?x29761 (* 2.0 l_0_16_20)))
 (let ((?x29882 (* ?x29761 l_0_16_23)))
 (let ((?x29889 (+ (+ (- (- (* (* (- 2.0) l_0_16_19) l_0_16_22) ?x29882) ?x29884) ?x29886) ?x29888)))
 (= (+ ?x29889 ?x29890) 0.0)))))))))))))
(assert
 (let ((?x29676 (* 2.0 l_0_16_36)))
 (let ((?x29906 (* ?x29676 l_0_16_43)))
 (let ((?x29673 (* 2.0 l_0_16_35)))
 (let ((?x29904 (* ?x29673 l_0_16_42)))
 (let ((?x29670 (* 2.0 l_0_16_34)))
 (let ((?x29902 (* ?x29670 l_0_16_41)))
 (let ((?x29766 (* 2.0 l_0_16_21)))
 (let ((?x29900 (* ?x29766 l_0_16_28)))
 (let ((?x29761 (* 2.0 l_0_16_20)))
 (let ((?x29898 (* ?x29761 l_0_16_27)))
 (let ((?x29905 (+ (+ (- (- (* (* (- 2.0) l_0_16_19) l_0_16_26) ?x29898) ?x29900) ?x29902) ?x29904)))
 (= (+ ?x29905 ?x29906) 0.0)))))))))))))
(assert
 (let ((?x23411 (* l_0_16_40 l_0_16_40)))
 (let ((?x17934 (* l_0_16_39 l_0_16_39)))
 (let ((?x17933 (* l_0_16_38 l_0_16_38)))
 (let ((?x4407 (* l_0_16_37 l_0_16_37)))
 (let ((?x29268 (* l_0_16_25 l_0_16_25)))
 (let ((?x29265 (* l_0_16_24 l_0_16_24)))
 (let ((?x13374 (- (- (* (- l_0_16_22) l_0_16_22) (* l_0_16_23 l_0_16_23)) ?x29265)))
 (= (+ (+ (+ (+ (- ?x13374 ?x29268) ?x4407) ?x17933) ?x17934) ?x23411) 0.0)))))))))
(assert
 (let ((?x29955 (* 2.0 l_0_16_40)))
 (let ((?x29956 (* ?x29955 l_0_16_44)))
 (let ((?x29952 (* 2.0 l_0_16_39)))
 (let ((?x29953 (* ?x29952 l_0_16_43)))
 (let ((?x29949 (* 2.0 l_0_16_38)))
 (let ((?x29950 (* ?x29949 l_0_16_42)))
 (let ((?x29946 (* 2.0 l_0_16_37)))
 (let ((?x29947 (* ?x29946 l_0_16_41)))
 (let ((?x29943 (* 2.0 l_0_16_25)))
 (let ((?x29944 (* ?x29943 l_0_16_29)))
 (let ((?x29940 (* 2.0 l_0_16_24)))
 (let ((?x29941 (* ?x29940 l_0_16_28)))
 (let ((?x18640 (* 2.0 l_0_16_23)))
 (let ((?x29938 (* ?x18640 l_0_16_27)))
 (let ((?x29948 (+ (- (- (- (* (* (- 2.0) l_0_16_22) l_0_16_26) ?x29938) ?x29941) ?x29944) ?x29947)))
 (= (+ (+ (+ ?x29948 ?x29950) ?x29953) ?x29956) 0.0)))))))))))))))))
(assert
 (let ((?x23565 (* l_0_16_45 l_0_16_45)))
 (let ((?x23559 (* l_0_16_44 l_0_16_44)))
 (let ((?x4639 (* l_0_16_43 l_0_16_43)))
 (let ((?x23494 (* l_0_16_42 l_0_16_42)))
 (let ((?x23490 (* l_0_16_41 l_0_16_41)))
 (let ((?x4228 (* l_0_16_36 l_0_16_36)))
 (let ((?x4223 (* l_0_16_35 l_0_16_35)))
 (let ((?x29118 (* l_0_16_34 l_0_16_34)))
 (let ((?x29417 (* l_0_16_30 l_0_16_30)))
 (let ((?x29414 (* l_0_16_29 l_0_16_29)))
 (let ((?x29411 (* l_0_16_28 l_0_16_28)))
 (let ((?x29408 (* l_0_16_27 l_0_16_27)))
 (let ((?x29405 (* l_0_16_26 l_0_16_26)))
 (let ((?x29078 (* l_0_16_21 l_0_16_21)))
 (let ((?x29978 (- (+ (+ (* l_0_16_19 l_0_16_19) (* l_0_16_20 l_0_16_20)) ?x29078) ?x29405)))
 (let ((?x29985 (- (- (- (- (- (- (- ?x29978 ?x29408) ?x29411) ?x29414) ?x29417) ?x29118) ?x4223) ?x4228)))
 (= (+ (+ (+ (+ (+ ?x29985 ?x23490) ?x23494) ?x4639) ?x23559) ?x23565) 0.0))))))))))))))))))
(assert
 (let ((?x29094 (* 4.0 l_0_16_36)))
 (let ((?x29777 (* ?x29094 l_0_16_43)))
 (let ((?x29091 (* 4.0 l_0_16_35)))
 (let ((?x29774 (* ?x29091 l_0_16_42)))
 (let ((?x29088 (* 4.0 l_0_16_34)))
 (let ((?x29771 (* ?x29088 l_0_16_41)))
 (let ((?x29081 (* 2.0 l_0_16_31)))
 (let ((?x23909 (* ?x29081 l_0_16_34)))
 (let ((?x29417 (* l_0_16_30 l_0_16_30)))
 (let ((?x30014 (* 2.0 ?x29417)))
 (let ((?x29414 (* l_0_16_29 l_0_16_29)))
 (let ((?x30012 (* 2.0 ?x29414)))
 (let ((?x29411 (* l_0_16_28 l_0_16_28)))
 (let ((?x30010 (* 2.0 ?x29411)))
 (let ((?x29408 (* l_0_16_27 l_0_16_27)))
 (let ((?x30008 (* 2.0 ?x29408)))
 (let ((?x29405 (* l_0_16_26 l_0_16_26)))
 (let ((?x30006 (* 2.0 ?x29405)))
 (let ((?x29709 (* 4.0 l_0_16_21)))
 (let ((?x29764 (* ?x29709 l_0_16_28)))
 (let ((?x29705 (* 4.0 l_0_16_20)))
 (let ((?x29759 (* ?x29705 l_0_16_27)))
 (let ((?x29701 (* 4.0 l_0_16_19)))
 (let ((?x29754 (* ?x29701 l_0_16_26)))
 (let ((?x30007 (+ (- (- (- (* (* 2.0 l_0_16_16) l_0_16_19) ?x29754) ?x29759) ?x29764) ?x30006)))
 (let ((?x30018 (+ (+ (- (+ (+ (+ (+ ?x30007 ?x30008) ?x30010) ?x30012) ?x30014) ?x23909) ?x29771) ?x29774)))
 (let ((?x30025 (- (- (+ ?x30018 ?x29777) (* (* 2.0 l_0_16_41) l_0_16_41)) (* (* 2.0 l_0_16_42) l_0_16_42))))
 (let ((?x30031 (- (- ?x30025 (* (* 2.0 l_0_16_43) l_0_16_43)) (* (* 2.0 l_0_16_44) l_0_16_44))))
 (= (- ?x30031 (* (* 2.0 l_0_16_45) l_0_16_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x30107 (* l_0_16_60 l_0_16_60)))
 (let ((?x30105 (* l_0_16_59 l_0_16_59)))
 (let ((?x30103 (* l_0_16_58 l_0_16_58)))
 (let ((?x30101 (* l_0_16_57 l_0_16_57)))
 (let ((?x30099 (* l_0_16_56 l_0_16_56)))
 (let ((?x29436 (* (* 4.0 l_0_16_45) l_0_16_45)))
 (let ((?x29433 (* (* 4.0 l_0_16_44) l_0_16_44)))
 (let ((?x29430 (* (* 4.0 l_0_16_43) l_0_16_43)))
 (let ((?x29427 (* (* 4.0 l_0_16_42) l_0_16_42)))
 (let ((?x29424 (* (* 4.0 l_0_16_41) l_0_16_41)))
 (let ((?x29282 (* 4.0 l_0_16_40)))
 (let ((?x30092 (* ?x29282 l_0_16_44)))
 (let ((?x29279 (* 4.0 l_0_16_39)))
 (let ((?x30090 (* ?x29279 l_0_16_43)))
 (let ((?x29276 (* 4.0 l_0_16_38)))
 (let ((?x30088 (* ?x29276 l_0_16_42)))
 (let ((?x29273 (* 4.0 l_0_16_37)))
 (let ((?x30086 (* ?x29273 l_0_16_41)))
 (let ((?x29081 (* 2.0 l_0_16_31)))
 (let ((?x29713 (* ?x29081 l_0_16_37)))
 (let ((?x29417 (* l_0_16_30 l_0_16_30)))
 (let ((?x29418 (* 4.0 ?x29417)))
 (let ((?x29414 (* l_0_16_29 l_0_16_29)))
 (let ((?x29415 (* 4.0 ?x29414)))
 (let ((?x29411 (* l_0_16_28 l_0_16_28)))
 (let ((?x29412 (* 4.0 ?x29411)))
 (let ((?x29408 (* l_0_16_27 l_0_16_27)))
 (let ((?x29409 (* 4.0 ?x29408)))
 (let ((?x29405 (* l_0_16_26 l_0_16_26)))
 (let ((?x29406 (* 4.0 ?x29405)))
 (let ((?x30078 (* (* 4.0 l_0_16_25) l_0_16_29)))
 (let ((?x30075 (* (* 4.0 l_0_16_24) l_0_16_28)))
 (let ((?x30072 (* (* 4.0 l_0_16_23) l_0_16_27)))
 (let ((?x30069 (* (* 4.0 l_0_16_22) l_0_16_26)))
 (let ((?x30079 (- (- (- (- (* (* 2.0 l_0_16_16) l_0_16_22) ?x30069) ?x30072) ?x30075) ?x30078)))
 (let ((?x30087 (+ (- (+ (+ (+ (+ (+ ?x30079 ?x29406) ?x29409) ?x29412) ?x29415) ?x29418) ?x29713) ?x30086)))
 (let ((?x30097 (- (- (- (- (+ (+ (+ ?x30087 ?x30088) ?x30090) ?x30092) ?x29424) ?x29427) ?x29430) ?x29433)))
 (= (- (- (- (- (- (- ?x30097 ?x29436) ?x30099) ?x30101) ?x30103) ?x30105) ?x30107) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23565 (* l_0_16_45 l_0_16_45)))
 (let ((?x5675 (* 2.0 ?x23565)))
 (let ((?x23559 (* l_0_16_44 l_0_16_44)))
 (let ((?x23807 (* 2.0 ?x23559)))
 (let ((?x4639 (* l_0_16_43 l_0_16_43)))
 (let ((?x13382 (* 2.0 ?x4639)))
 (let ((?x23494 (* l_0_16_42 l_0_16_42)))
 (let ((?x30055 (* 2.0 ?x23494)))
 (let ((?x23490 (* l_0_16_41 l_0_16_41)))
 (let ((?x30050 (* 2.0 ?x23490)))
 (let ((?x29081 (* 2.0 l_0_16_31)))
 (let ((?x29769 (* ?x29081 l_0_16_41)))
 (let ((?x24192 (- (* (* 2.0 l_0_16_16) l_0_16_26) (* (* 2.0 l_0_16_26) l_0_16_26))))
 (let ((?x24176 (- (- ?x24192 (* (* 2.0 l_0_16_27) l_0_16_27)) (* (* 2.0 l_0_16_28) l_0_16_28))))
 (let ((?x30126 (- (- ?x24176 (* (* 2.0 l_0_16_29) l_0_16_29)) (* (* 2.0 l_0_16_30) l_0_16_30))))
 (= (+ (+ (+ (+ (+ (- ?x30126 ?x29769) ?x30050) ?x30055) ?x13382) ?x23807) ?x5675) 0.0)))))))))))))))))
(assert
 (let ((?x3958 (* l_0_16_33 l_0_16_33)))
 (let ((?x12457 (* l_0_16_32 l_0_16_32)))
 (let ((?x28951 (* l_0_16_18 l_0_16_18)))
 (let ((?x28949 (* l_0_16_17 l_0_16_17)))
 (let ((?x24283 (+ ?x28949 ?x28951)))
 (= (- (- ?x24283 ?x12457) ?x3958) 0.0)))))))
(assert
 (let ((?x28986 (* 2.0 l_0_16_33)))
 (let ((?x29821 (* ?x28986 l_0_16_35)))
 (let ((?x28980 (* 2.0 l_0_16_32)))
 (let ((?x29819 (* ?x28980 l_0_16_34)))
 (let ((?x29035 (* 2.0 l_0_16_18)))
 (let ((?x29817 (* ?x29035 l_0_16_20)))
 (= (- (- (+ (* (* 2.0 l_0_16_17) l_0_16_19) ?x29817) ?x29819) ?x29821) 0.0))))))))
(assert
 (let ((?x28986 (* 2.0 l_0_16_33)))
 (let ((?x29834 (* ?x28986 l_0_16_38)))
 (let ((?x28980 (* 2.0 l_0_16_32)))
 (let ((?x29832 (* ?x28980 l_0_16_37)))
 (let ((?x29035 (* 2.0 l_0_16_18)))
 (let ((?x29830 (* ?x29035 l_0_16_23)))
 (= (- (- (+ (* (* 2.0 l_0_16_17) l_0_16_22) ?x29830) ?x29832) ?x29834) 0.0))))))))
(assert
 (let ((?x28986 (* 2.0 l_0_16_33)))
 (let ((?x29850 (* ?x28986 l_0_16_42)))
 (let ((?x28980 (* 2.0 l_0_16_32)))
 (let ((?x29848 (* ?x28980 l_0_16_41)))
 (let ((?x29035 (* 2.0 l_0_16_18)))
 (let ((?x29846 (* ?x29035 l_0_16_27)))
 (= (- (- (+ (* (* 2.0 l_0_16_17) l_0_16_26) ?x29846) ?x29848) ?x29850) 0.0))))))))
(assert
 (let ((?x29676 (* 2.0 l_0_16_36)))
 (let ((?x29890 (* ?x29676 l_0_16_39)))
 (let ((?x29673 (* 2.0 l_0_16_35)))
 (let ((?x29888 (* ?x29673 l_0_16_38)))
 (let ((?x29670 (* 2.0 l_0_16_34)))
 (let ((?x29886 (* ?x29670 l_0_16_37)))
 (let ((?x29766 (* 2.0 l_0_16_21)))
 (let ((?x29884 (* ?x29766 l_0_16_24)))
 (let ((?x29761 (* 2.0 l_0_16_20)))
 (let ((?x29882 (* ?x29761 l_0_16_23)))
 (let ((?x30160 (- (- (+ (+ (* (* 2.0 l_0_16_19) l_0_16_22) ?x29882) ?x29884) ?x29886) ?x29888)))
 (= (- ?x30160 ?x29890) 0.0)))))))))))))
(assert
 (let ((?x29676 (* 2.0 l_0_16_36)))
 (let ((?x29906 (* ?x29676 l_0_16_43)))
 (let ((?x29673 (* 2.0 l_0_16_35)))
 (let ((?x29904 (* ?x29673 l_0_16_42)))
 (let ((?x29670 (* 2.0 l_0_16_34)))
 (let ((?x29902 (* ?x29670 l_0_16_41)))
 (let ((?x29766 (* 2.0 l_0_16_21)))
 (let ((?x29900 (* ?x29766 l_0_16_28)))
 (let ((?x29761 (* 2.0 l_0_16_20)))
 (let ((?x29898 (* ?x29761 l_0_16_27)))
 (let ((?x30168 (- (- (+ (+ (* (* 2.0 l_0_16_19) l_0_16_26) ?x29898) ?x29900) ?x29902) ?x29904)))
 (= (- ?x30168 ?x29906) 0.0)))))))))))))
(assert
 (let ((?x23411 (* l_0_16_40 l_0_16_40)))
 (let ((?x17934 (* l_0_16_39 l_0_16_39)))
 (let ((?x17933 (* l_0_16_38 l_0_16_38)))
 (let ((?x4407 (* l_0_16_37 l_0_16_37)))
 (let ((?x29268 (* l_0_16_25 l_0_16_25)))
 (let ((?x29265 (* l_0_16_24 l_0_16_24)))
 (let ((?x13659 (+ (+ (+ (* l_0_16_22 l_0_16_22) (* l_0_16_23 l_0_16_23)) ?x29265) ?x29268)))
 (= (- (- (- (- ?x13659 ?x4407) ?x17933) ?x17934) ?x23411) 0.0)))))))))
(assert
 (let ((?x29955 (* 2.0 l_0_16_40)))
 (let ((?x29956 (* ?x29955 l_0_16_44)))
 (let ((?x29952 (* 2.0 l_0_16_39)))
 (let ((?x29953 (* ?x29952 l_0_16_43)))
 (let ((?x29949 (* 2.0 l_0_16_38)))
 (let ((?x29950 (* ?x29949 l_0_16_42)))
 (let ((?x29946 (* 2.0 l_0_16_37)))
 (let ((?x29947 (* ?x29946 l_0_16_41)))
 (let ((?x29943 (* 2.0 l_0_16_25)))
 (let ((?x29944 (* ?x29943 l_0_16_29)))
 (let ((?x29940 (* 2.0 l_0_16_24)))
 (let ((?x29941 (* ?x29940 l_0_16_28)))
 (let ((?x18640 (* 2.0 l_0_16_23)))
 (let ((?x29938 (* ?x18640 l_0_16_27)))
 (let ((?x30197 (- (+ (+ (+ (* (* 2.0 l_0_16_22) l_0_16_26) ?x29938) ?x29941) ?x29944) ?x29947)))
 (= (- (- (- ?x30197 ?x29950) ?x29953) ?x29956) 0.0)))))))))))))))))
(assert
 (let ((?x23565 (* l_0_16_45 l_0_16_45)))
 (let ((?x23559 (* l_0_16_44 l_0_16_44)))
 (let ((?x4639 (* l_0_16_43 l_0_16_43)))
 (let ((?x23494 (* l_0_16_42 l_0_16_42)))
 (let ((?x23490 (* l_0_16_41 l_0_16_41)))
 (let ((?x29417 (* l_0_16_30 l_0_16_30)))
 (let ((?x29414 (* l_0_16_29 l_0_16_29)))
 (let ((?x29411 (* l_0_16_28 l_0_16_28)))
 (let ((?x30208 (+ (+ (+ (* l_0_16_26 l_0_16_26) (* l_0_16_27 l_0_16_27)) ?x29411) ?x29414)))
 (= (- (- (- (- (- (+ ?x30208 ?x29417) ?x23490) ?x23494) ?x4639) ?x23559) ?x23565) 0.0)))))))))))
(assert
 (let ((?x29153 (* 8.0 l_0_16_36)))
 (let ((?x29154 (* ?x29153 l_0_16_39)))
 (let ((?x29150 (* 8.0 l_0_16_35)))
 (let ((?x29151 (* ?x29150 l_0_16_38)))
 (let ((?x29147 (* 8.0 l_0_16_34)))
 (let ((?x29148 (* ?x29147 l_0_16_37)))
 (let ((?x29268 (* l_0_16_25 l_0_16_25)))
 (let ((?x30223 (* 2.0 ?x29268)))
 (let ((?x29265 (* l_0_16_24 l_0_16_24)))
 (let ((?x30221 (* 2.0 ?x29265)))
 (let ((?x29262 (* l_0_16_23 l_0_16_23)))
 (let ((?x30219 (* 2.0 ?x29262)))
 (let ((?x29259 (* l_0_16_22 l_0_16_22)))
 (let ((?x24400 (* 2.0 ?x29259)))
 (let ((?x29138 (* 8.0 l_0_16_21)))
 (let ((?x29139 (* ?x29138 l_0_16_24)))
 (let ((?x29135 (* 8.0 l_0_16_20)))
 (let ((?x29136 (* ?x29135 l_0_16_23)))
 (let ((?x29132 (* 8.0 l_0_16_19)))
 (let ((?x29133 (* ?x29132 l_0_16_22)))
 (let ((?x30225 (- (+ (+ (+ (+ (+ (+ ?x29133 ?x29136) ?x29139) ?x24400) ?x30219) ?x30221) ?x30223) ?x29148)))
 (let ((?x30231 (- (- (- (- ?x30225 ?x29151) ?x29154) (* (* 2.0 l_0_16_37) l_0_16_37)) (* (* 2.0 l_0_16_38) l_0_16_38))))
 (let ((?x30235 (- (- ?x30231 (* (* 2.0 l_0_16_39) l_0_16_39)) (* (* 2.0 l_0_16_40) l_0_16_40))))
 (let ((?x30241 (- (- ?x30235 (* (* 2.0 l_0_16_49) l_0_16_52)) (* (* 2.0 l_0_16_50) l_0_16_53))))
 (= (- ?x30241 (* (* 2.0 l_0_16_51) l_0_16_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x29282 (* 4.0 l_0_16_40)))
 (let ((?x30092 (* ?x29282 l_0_16_44)))
 (let ((?x29279 (* 4.0 l_0_16_39)))
 (let ((?x30090 (* ?x29279 l_0_16_43)))
 (let ((?x29276 (* 4.0 l_0_16_38)))
 (let ((?x30088 (* ?x29276 l_0_16_42)))
 (let ((?x29273 (* 4.0 l_0_16_37)))
 (let ((?x30086 (* ?x29273 l_0_16_41)))
 (let ((?x29153 (* 8.0 l_0_16_36)))
 (let ((?x29226 (* ?x29153 l_0_16_43)))
 (let ((?x29094 (* 4.0 l_0_16_36)))
 (let ((?x29721 (* ?x29094 l_0_16_39)))
 (let ((?x29150 (* 8.0 l_0_16_35)))
 (let ((?x29224 (* ?x29150 l_0_16_42)))
 (let ((?x29091 (* 4.0 l_0_16_35)))
 (let ((?x29718 (* ?x29091 l_0_16_38)))
 (let ((?x29147 (* 8.0 l_0_16_34)))
 (let ((?x29222 (* ?x29147 l_0_16_41)))
 (let ((?x29088 (* 4.0 l_0_16_34)))
 (let ((?x29715 (* ?x29088 l_0_16_37)))
 (let ((?x30078 (* (* 4.0 l_0_16_25) l_0_16_29)))
 (let ((?x30075 (* (* 4.0 l_0_16_24) l_0_16_28)))
 (let ((?x30072 (* (* 4.0 l_0_16_23) l_0_16_27)))
 (let ((?x30069 (* (* 4.0 l_0_16_22) l_0_16_26)))
 (let ((?x29138 (* 8.0 l_0_16_21)))
 (let ((?x29214 (* ?x29138 l_0_16_28)))
 (let ((?x29709 (* 4.0 l_0_16_21)))
 (let ((?x29710 (* ?x29709 l_0_16_24)))
 (let ((?x29135 (* 8.0 l_0_16_20)))
 (let ((?x29212 (* ?x29135 l_0_16_27)))
 (let ((?x29705 (* 4.0 l_0_16_20)))
 (let ((?x29706 (* ?x29705 l_0_16_23)))
 (let ((?x29132 (* 8.0 l_0_16_19)))
 (let ((?x29210 (* ?x29132 l_0_16_26)))
 (let ((?x30262 (- (+ (- (+ (* (* (- 4.0) l_0_16_19) l_0_16_22) ?x29210) ?x29706) ?x29212) ?x29710)))
 (let ((?x30269 (- (+ (+ (+ (+ (+ (+ ?x30262 ?x29214) ?x30069) ?x30072) ?x30075) ?x30078) ?x29715) ?x29222)))
 (let ((?x30276 (- (- (- (- (+ (- (+ ?x30269 ?x29718) ?x29224) ?x29721) ?x29226) ?x30086) ?x30088) ?x30090)))
 (let ((?x30281 (- (- (- ?x30276 ?x30092) (* (* 2.0 l_0_16_49) l_0_16_56)) (* (* 2.0 l_0_16_50) l_0_16_57))))
 (= (- ?x30281 (* (* 2.0 l_0_16_51) l_0_16_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23411 (* l_0_16_40 l_0_16_40)))
 (let ((?x18987 (* 2.0 ?x23411)))
 (let ((?x29353 (* (* 8.0 l_0_16_40) l_0_16_44)))
 (let ((?x17934 (* l_0_16_39 l_0_16_39)))
 (let ((?x13006 (* 2.0 ?x17934)))
 (let ((?x29350 (* (* 8.0 l_0_16_39) l_0_16_43)))
 (let ((?x17933 (* l_0_16_38 l_0_16_38)))
 (let ((?x13722 (* 2.0 ?x17933)))
 (let ((?x29347 (* (* 8.0 l_0_16_38) l_0_16_42)))
 (let ((?x4407 (* l_0_16_37 l_0_16_37)))
 (let ((?x24451 (* 2.0 ?x4407)))
 (let ((?x29344 (* (* 8.0 l_0_16_37) l_0_16_41)))
 (let ((?x29337 (* (* 8.0 l_0_16_25) l_0_16_29)))
 (let ((?x29334 (* (* 8.0 l_0_16_24) l_0_16_28)))
 (let ((?x29331 (* (* 8.0 l_0_16_23) l_0_16_27)))
 (let ((?x29328 (* (* 8.0 l_0_16_22) l_0_16_26)))
 (let ((?x30288 (- (+ (- ?x29328 (* (* 2.0 l_0_16_22) l_0_16_22)) ?x29331) (* (* 2.0 l_0_16_23) l_0_16_23))))
 (let ((?x30294 (- (+ (- (+ ?x30288 ?x29334) (* (* 2.0 l_0_16_24) l_0_16_24)) ?x29337) (* (* 2.0 l_0_16_25) l_0_16_25))))
 (let ((?x30301 (- (+ (- (+ (- (+ (- ?x30294 ?x29344) ?x24451) ?x29347) ?x13722) ?x29350) ?x13006) ?x29353)))
 (let ((?x30308 (- (- (+ ?x30301 ?x18987) (* (* 2.0 l_0_16_52) l_0_16_56)) (* (* 2.0 l_0_16_53) l_0_16_57))))
 (let ((?x30314 (- (- ?x30308 (* (* 2.0 l_0_16_54) l_0_16_58)) (* (* 2.0 l_0_16_55) l_0_16_59))))
 (= ?x30314 0.0)))))))))))))))))))))))
(assert
 (let ((?x30333 (* l_0_16_55 l_0_16_55)))
 (let ((?x30331 (* l_0_16_54 l_0_16_54)))
 (let ((?x30329 (* l_0_16_53 l_0_16_53)))
 (let ((?x30327 (* l_0_16_52 l_0_16_52)))
 (let ((?x29282 (* 4.0 l_0_16_40)))
 (let ((?x29283 (* ?x29282 l_0_16_40)))
 (let ((?x29279 (* 4.0 l_0_16_39)))
 (let ((?x29280 (* ?x29279 l_0_16_39)))
 (let ((?x29276 (* 4.0 l_0_16_38)))
 (let ((?x29277 (* ?x29276 l_0_16_38)))
 (let ((?x29273 (* 4.0 l_0_16_37)))
 (let ((?x29274 (* ?x29273 l_0_16_37)))
 (let ((?x29268 (* l_0_16_25 l_0_16_25)))
 (let ((?x29269 (* 4.0 ?x29268)))
 (let ((?x29265 (* l_0_16_24 l_0_16_24)))
 (let ((?x29266 (* 4.0 ?x29265)))
 (let ((?x29262 (* l_0_16_23 l_0_16_23)))
 (let ((?x29263 (* 4.0 ?x29262)))
 (let ((?x29259 (* l_0_16_22 l_0_16_22)))
 (let ((?x29260 (* 4.0 ?x29259)))
 (let ((?x30326 (- (- (- (- (+ (+ (+ ?x29260 ?x29263) ?x29266) ?x29269) ?x29274) ?x29277) ?x29280) ?x29283)))
 (= (- (- (- (- ?x30326 ?x30327) ?x30329) ?x30331) ?x30333) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_16_1 0.0))
(assert
 (>= l_0_16_3 0.0))
(assert
 (>= l_0_16_6 0.0))
(assert
 (>= l_0_16_10 0.0))
(assert
 (>= l_0_16_15 0.0))
(assert
 (>= l_0_16_16 0.0))
(assert
 (>= l_0_16_18 0.0))
(assert
 (>= l_0_16_21 0.0))
(assert
 (>= l_0_16_25 0.0))
(assert
 (>= l_0_16_30 0.0))
(assert
 (>= l_0_16_31 0.0))
(assert
 (>= l_0_16_33 0.0))
(assert
 (>= l_0_16_36 0.0))
(assert
 (>= l_0_16_40 0.0))
(assert
 (>= l_0_16_45 0.0))
(assert
 (>= l_0_16_46 0.0))
(assert
 (>= l_0_16_48 0.0))
(assert
 (>= l_0_16_51 0.0))
(assert
 (>= l_0_16_55 0.0))
(assert
 (>= l_0_16_60 0.0))
(assert
 (>= l_0_16_61 0.0))
(assert
 (>= l_0_16_63 0.0))
(assert
 (>= l_0_16_66 0.0))
(assert
 (>= l_0_16_70 0.0))
(assert
 (>= l_0_16_75 0.0))
(assert
 (let ((?x30395 (* l_0_17_81 l_0_17_81)))
 (let ((?x30393 (* l_0_17_80 l_0_17_80)))
 (let ((?x30391 (* l_0_17_79 l_0_17_79)))
 (let ((?x30389 (* l_0_17_66 l_0_17_66)))
 (let ((?x30387 (* l_0_17_65 l_0_17_65)))
 (let ((?x30385 (* l_0_17_64 l_0_17_64)))
 (let ((?x30374 (* l_0_17_31 l_0_17_31)))
 (let ((?x30371 (* 4.0 l_0_17_31)))
 (let ((?x30372 (* ?x30371 l_0_17_34)))
 (let ((?x30373 (- (- (* (* 4.0 l_0_17_16) l_0_17_19) (* l_0_17_16 l_0_17_16)) ?x30372)))
 (let ((?x30381 (+ (+ (+ ?x30373 ?x30374) (* 1.0 (* l_0_17_4 l_0_17_4))) (* 1.0 (* l_0_17_5 l_0_17_5)))))
 (let ((?x30390 (- (- (- (+ ?x30381 (* 1.0 (* l_0_17_6 l_0_17_6))) ?x30385) ?x30387) ?x30389)))
 (= (+ (- (- (- ?x30390 ?x30391) ?x30393) ?x30395) 1.0) 0.0))))))))))))))
(assert
 (let ((?x30425 (* l_0_17_76 l_0_17_76)))
 (let ((?x30423 (* l_0_17_61 l_0_17_61)))
 (let ((?x30422 (+ (+ (* (- _a_0_) _a_0_) (* 2.0 _a_0_)) (* 1.0 (* l_0_17_1 l_0_17_1)))))
 (= (- (- ?x30422 ?x30423) ?x30425) 0.0)))))
(assert
 (let ((?x30374 (* l_0_17_31 l_0_17_31)))
 (let ((?x30446 (* 2.0 ?x30374)))
 (let ((?x30442 (+ (+ (* (* (- 2.0) _a_0_) _a_1_) (* 2.0 _a_1_)) (* (* 2.0 l_0_17_1) l_0_17_11))))
 (let ((?x30450 (- (+ (- ?x30442 (* (* 2.0 l_0_17_16) l_0_17_16)) ?x30446) (* (* 2.0 l_0_17_61) l_0_17_71))))
 (= (+ (- ?x30450 (* (* 2.0 l_0_17_76) l_0_17_86)) 4.0) 0.0))))))
(assert
 (let ((?x30514 (* l_0_17_90 l_0_17_90)))
 (let ((?x30512 (* l_0_17_89 l_0_17_89)))
 (let ((?x30510 (* l_0_17_88 l_0_17_88)))
 (let ((?x30508 (* l_0_17_87 l_0_17_87)))
 (let ((?x30506 (* l_0_17_86 l_0_17_86)))
 (let ((?x30504 (* l_0_17_75 l_0_17_75)))
 (let ((?x30502 (* l_0_17_74 l_0_17_74)))
 (let ((?x30500 (* l_0_17_73 l_0_17_73)))
 (let ((?x30498 (* l_0_17_72 l_0_17_72)))
 (let ((?x30496 (* l_0_17_71 l_0_17_71)))
 (let ((?x30374 (* l_0_17_31 l_0_17_31)))
 (let ((?x30371 (* 4.0 l_0_17_31)))
 (let ((?x30493 (* ?x30371 l_0_17_41)))
 (let ((?x30369 (* l_0_17_16 l_0_17_16)))
 (let ((?x30367 (* 4.0 l_0_17_16)))
 (let ((?x30490 (* ?x30367 l_0_17_26)))
 (let ((?x30480 (+ (+ (* (- _a_1_) _a_1_) (* 1.0 (* l_0_17_11 l_0_17_11))) (* 1.0 (* l_0_17_12 l_0_17_12)))))
 (let ((?x30486 (+ (+ ?x30480 (* 1.0 (* l_0_17_13 l_0_17_13))) (* 1.0 (* l_0_17_14 l_0_17_14)))))
 (let ((?x30494 (+ (+ (- (+ ?x30486 (* 1.0 (* l_0_17_15 l_0_17_15))) ?x30490) ?x30369) ?x30493)))
 (let ((?x30507 (- (- (- (- (- (- (- ?x30494 ?x30374) ?x30496) ?x30498) ?x30500) ?x30502) ?x30504) ?x30506)))
 (= (- (- (- (- ?x30507 ?x30508) ?x30510) ?x30512) ?x30514) 0.0))))))))))))))))))))))
(assert
 (let ((?x30369 (* l_0_17_16 l_0_17_16)))
 (let ((?x30461 (* 2.0 ?x30369)))
 (let ((?x14174 (- (+ (* (* 2.0 l_0_17_1) l_0_17_4) ?x30461) (* (* 2.0 l_0_17_31) l_0_17_31))))
 (let ((?x30533 (- (- ?x14174 (* (* 2.0 l_0_17_61) l_0_17_64)) (* (* 2.0 l_0_17_76) l_0_17_79))))
 (= (- ?x30533 2.0) 0.0))))))
(assert
 (let ((?x30371 (* 4.0 l_0_17_31)))
 (let ((?x30548 (* ?x30371 l_0_17_31)))
 (let ((?x30369 (* l_0_17_16 l_0_17_16)))
 (let ((?x19434 (* 4.0 ?x30369)))
 (let ((?x19431 (+ (- (* (* 2.0 l_0_17_1) l_0_17_2) (* l_0_17_1 l_0_17_1)) ?x19434)))
 (let ((?x30553 (- (- (- ?x19431 ?x30548) (* (* 2.0 l_0_17_61) l_0_17_62)) (* (* 2.0 l_0_17_76) l_0_17_77))))
 (= (- ?x30553 4.0) 0.0))))))))
(assert
 (let ((?x6801 (* l_0_17_46 l_0_17_46)))
 (let ((?x30371 (* 4.0 l_0_17_31)))
 (let ((?x30548 (* ?x30371 l_0_17_31)))
 (let ((?x30369 (* l_0_17_16 l_0_17_16)))
 (let ((?x19434 (* 4.0 ?x30369)))
 (let ((?x14177 (- (- (- (+ (* (* 2.0 l_0_17_1) l_0_17_7) ?x19434) ?x30548) ?x6801) (* (* 2.0 l_0_17_61) l_0_17_67))))
 (= (- (- ?x14177 (* (* 2.0 l_0_17_76) l_0_17_82)) 4.0) 0.0))))))))
(assert
 (let ((?x30609 (* l_0_17_78 l_0_17_78)))
 (let ((?x30607 (* l_0_17_77 l_0_17_77)))
 (let ((?x30605 (* l_0_17_63 l_0_17_63)))
 (let ((?x30603 (* l_0_17_62 l_0_17_62)))
 (let ((?x30600 (* 8.0 l_0_17_31)))
 (let ((?x30601 (* ?x30600 l_0_17_32)))
 (let ((?x30591 (* 8.0 l_0_17_16)))
 (let ((?x30592 (* ?x30591 l_0_17_17)))
 (let ((?x30596 (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_2) ?x30592) (* 1.0 (* l_0_17_2 l_0_17_2)))))
 (let ((?x30606 (- (- (- (+ ?x30596 (* 1.0 (* l_0_17_3 l_0_17_3))) ?x30601) ?x30603) ?x30605)))
 (= (- (- ?x30606 ?x30607) ?x30609) 0.0))))))))))))
(assert
 (let ((?x30600 (* 8.0 l_0_17_31)))
 (let ((?x30631 (* ?x30600 l_0_17_34)))
 (let ((?x30371 (* 4.0 l_0_17_31)))
 (let ((?x30629 (* ?x30371 l_0_17_32)))
 (let ((?x30626 (* 2.0 l_0_17_3)))
 (let ((?x30627 (* ?x30626 l_0_17_5)))
 (let ((?x19497 (* 2.0 l_0_17_2)))
 (let ((?x30624 (* ?x19497 l_0_17_4)))
 (let ((?x30591 (* 8.0 l_0_17_16)))
 (let ((?x24890 (* ?x30591 l_0_17_19)))
 (let ((?x30367 (* 4.0 l_0_17_16)))
 (let ((?x19495 (* ?x30367 l_0_17_17)))
 (let ((?x30628 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_4) ?x19495) ?x24890) ?x30624) ?x30627)))
 (let ((?x30638 (- (- (- (- ?x30628 ?x30629) ?x30631) (* (* 2.0 l_0_17_62) l_0_17_64)) (* (* 2.0 l_0_17_63) l_0_17_65))))
 (let ((?x30644 (- (- ?x30638 (* (* 2.0 l_0_17_77) l_0_17_79)) (* (* 2.0 l_0_17_78) l_0_17_80))))
 (= ?x30644 0.0)))))))))))))))))
(assert
 (let ((?x30600 (* 8.0 l_0_17_31)))
 (let ((?x30679 (* ?x30600 l_0_17_37)))
 (let ((?x30601 (* ?x30600 l_0_17_32)))
 (let ((?x30626 (* 2.0 l_0_17_3)))
 (let ((?x30676 (* ?x30626 l_0_17_8)))
 (let ((?x19497 (* 2.0 l_0_17_2)))
 (let ((?x30674 (* ?x19497 l_0_17_7)))
 (let ((?x30591 (* 8.0 l_0_17_16)))
 (let ((?x30672 (* ?x30591 l_0_17_22)))
 (let ((?x30673 (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_7) (* ?x30591 l_0_17_17)) ?x30672)))
 (let ((?x30683 (- (- (- (+ (+ ?x30673 ?x30674) ?x30676) ?x30601) ?x30679) (* (* 2.0 l_0_17_46) l_0_17_47))))
 (let ((?x30687 (- (- ?x30683 (* (* 2.0 l_0_17_62) l_0_17_67)) (* (* 2.0 l_0_17_63) l_0_17_68))))
 (let ((?x30691 (- (- ?x30687 (* (* 2.0 l_0_17_77) l_0_17_82)) (* (* 2.0 l_0_17_78) l_0_17_83))))
 (= ?x30691 0.0)))))))))))))))
(assert
 (let ((?x30600 (* 8.0 l_0_17_31)))
 (let ((?x30730 (* ?x30600 l_0_17_41)))
 (let ((?x30371 (* 4.0 l_0_17_31)))
 (let ((?x30629 (* ?x30371 l_0_17_32)))
 (let ((?x30591 (* 8.0 l_0_17_16)))
 (let ((?x30727 (* ?x30591 l_0_17_26)))
 (let ((?x30367 (* 4.0 l_0_17_16)))
 (let ((?x19495 (* ?x30367 l_0_17_17)))
 (let ((?x30723 (* 2.0 l_0_17_12)))
 (let ((?x30724 (* ?x30723 l_0_17_3)))
 (let ((?x30722 (+ (* (* (- 2.0) l_0_17_1) l_0_17_11) (* (* 2.0 l_0_17_11) l_0_17_2))))
 (let ((?x30733 (- (- (+ (+ (- (+ ?x30722 ?x30724) ?x19495) ?x30727) ?x30629) ?x30730) (* (* 2.0 l_0_17_62) l_0_17_71))))
 (let ((?x30737 (- (- ?x30733 (* (* 2.0 l_0_17_63) l_0_17_72)) (* (* 2.0 l_0_17_77) l_0_17_86))))
 (= (- ?x30737 (* (* 2.0 l_0_17_78) l_0_17_87)) 0.0)))))))))))))))
(assert
 (let ((?x30779 (* 4.0 l_0_17_33)))
 (let ((?x30780 (* ?x30779 l_0_17_33)))
 (let ((?x30776 (* 4.0 l_0_17_32)))
 (let ((?x30777 (* ?x30776 l_0_17_32)))
 (let ((?x30597 (* l_0_17_3 l_0_17_3)))
 (let ((?x30594 (* l_0_17_2 l_0_17_2)))
 (let ((?x30771 (* l_0_17_18 l_0_17_18)))
 (let ((?x30772 (* 4.0 ?x30771)))
 (let ((?x30769 (* l_0_17_17 l_0_17_17)))
 (let ((?x30770 (* 4.0 ?x30769)))
 (let ((?x30773 (+ ?x30770 ?x30772)))
 (= (- (- (- (- ?x30773 ?x30594) ?x30597) ?x30777) ?x30780) 0.0)))))))))))))
(assert
 (let ((?x30804 (* 8.0 l_0_17_33)))
 (let ((?x30805 (* ?x30804 l_0_17_35)))
 (let ((?x30798 (* 8.0 l_0_17_32)))
 (let ((?x30799 (* ?x30798 l_0_17_34)))
 (let ((?x30626 (* 2.0 l_0_17_3)))
 (let ((?x30627 (* ?x30626 l_0_17_5)))
 (let ((?x19497 (* 2.0 l_0_17_2)))
 (let ((?x30624 (* ?x19497 l_0_17_4)))
 (let ((?x30771 (* l_0_17_18 l_0_17_18)))
 (let ((?x30794 (* 2.0 ?x30771)))
 (let ((?x30791 (* 8.0 l_0_17_18)))
 (let ((?x30792 (* ?x30791 l_0_17_20)))
 (let ((?x30769 (* l_0_17_17 l_0_17_17)))
 (let ((?x30789 (* 2.0 ?x30769)))
 (let ((?x30787 (* 8.0 l_0_17_17)))
 (let ((?x30788 (* ?x30787 l_0_17_19)))
 (let ((?x30803 (- (- (- (- (+ (+ (+ ?x30788 ?x30789) ?x30792) ?x30794) ?x30624) ?x30627) ?x30799) (* (* 2.0 l_0_17_32) l_0_17_32))))
 (= (- (- ?x30803 ?x30805) (* (* 2.0 l_0_17_33) l_0_17_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x30846 (* l_0_17_48 l_0_17_48)))
 (let ((?x30844 (* l_0_17_47 l_0_17_47)))
 (let ((?x30779 (* 4.0 l_0_17_33)))
 (let ((?x30780 (* ?x30779 l_0_17_33)))
 (let ((?x30804 (* 8.0 l_0_17_33)))
 (let ((?x30841 (* ?x30804 l_0_17_38)))
 (let ((?x30776 (* 4.0 l_0_17_32)))
 (let ((?x30777 (* ?x30776 l_0_17_32)))
 (let ((?x30798 (* 8.0 l_0_17_32)))
 (let ((?x30838 (* ?x30798 l_0_17_37)))
 (let ((?x30626 (* 2.0 l_0_17_3)))
 (let ((?x30676 (* ?x30626 l_0_17_8)))
 (let ((?x19497 (* 2.0 l_0_17_2)))
 (let ((?x30674 (* ?x19497 l_0_17_7)))
 (let ((?x30771 (* l_0_17_18 l_0_17_18)))
 (let ((?x30772 (* 4.0 ?x30771)))
 (let ((?x30791 (* 8.0 l_0_17_18)))
 (let ((?x30833 (* ?x30791 l_0_17_23)))
 (let ((?x30769 (* l_0_17_17 l_0_17_17)))
 (let ((?x30770 (* 4.0 ?x30769)))
 (let ((?x30787 (* 8.0 l_0_17_17)))
 (let ((?x30831 (* ?x30787 l_0_17_22)))
 (let ((?x30840 (- (- (- (- (+ (+ (+ ?x30831 ?x30770) ?x30833) ?x30772) ?x30674) ?x30676) ?x30838) ?x30777)))
 (= (- (- (- (- ?x30840 ?x30841) ?x30780) ?x30844) ?x30846) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x25003 (* l_0_17_33 l_0_17_33)))
 (let ((?x19547 (* 2.0 ?x25003)))
 (let ((?x30804 (* 8.0 l_0_17_33)))
 (let ((?x30874 (* ?x30804 l_0_17_42)))
 (let ((?x13770 (* l_0_17_32 l_0_17_32)))
 (let ((?x14232 (* 2.0 ?x13770)))
 (let ((?x30798 (* 8.0 l_0_17_32)))
 (let ((?x30871 (* ?x30798 l_0_17_41)))
 (let ((?x30791 (* 8.0 l_0_17_18)))
 (let ((?x30866 (* ?x30791 l_0_17_27)))
 (let ((?x30787 (* 8.0 l_0_17_17)))
 (let ((?x30861 (* ?x30787 l_0_17_26)))
 (let ((?x30723 (* 2.0 l_0_17_12)))
 (let ((?x30724 (* ?x30723 l_0_17_3)))
 (let ((?x30865 (- (+ (- (* (* (- 2.0) l_0_17_11) l_0_17_2) ?x30724) ?x30861) (* (* 2.0 l_0_17_17) l_0_17_17))))
 (let ((?x30873 (+ (- (- (+ ?x30865 ?x30866) (* (* 2.0 l_0_17_18) l_0_17_18)) ?x30871) ?x14232)))
 (= (+ (- ?x30873 ?x30874) ?x19547) 0.0))))))))))))))))))
(assert
 (let ((?x30382 (* l_0_17_6 l_0_17_6)))
 (let ((?x30379 (* l_0_17_5 l_0_17_5)))
 (let ((?x30376 (* l_0_17_4 l_0_17_4)))
 (let ((?x30914 (* 4.0 l_0_17_36)))
 (let ((?x30915 (* ?x30914 l_0_17_36)))
 (let ((?x30911 (* 4.0 l_0_17_35)))
 (let ((?x30912 (* ?x30911 l_0_17_35)))
 (let ((?x30908 (* 4.0 l_0_17_34)))
 (let ((?x30909 (* ?x30908 l_0_17_34)))
 (let ((?x30779 (* 4.0 l_0_17_33)))
 (let ((?x30906 (* ?x30779 l_0_17_35)))
 (let ((?x30776 (* 4.0 l_0_17_32)))
 (let ((?x30904 (* ?x30776 l_0_17_34)))
 (let ((?x6791 (* 2.0 l_0_17_31)))
 (let ((?x30902 (* ?x6791 l_0_17_32)))
 (let ((?x30899 (* l_0_17_21 l_0_17_21)))
 (let ((?x30900 (* 4.0 ?x30899)))
 (let ((?x30896 (* l_0_17_20 l_0_17_20)))
 (let ((?x30897 (* 4.0 ?x30896)))
 (let ((?x30893 (* l_0_17_19 l_0_17_19)))
 (let ((?x30894 (* 4.0 ?x30893)))
 (let ((?x19591 (* 4.0 l_0_17_18)))
 (let ((?x25128 (* ?x19591 l_0_17_20)))
 (let ((?x19590 (* 4.0 l_0_17_17)))
 (let ((?x19592 (* ?x19590 l_0_17_19)))
 (let ((?x30898 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_16) l_0_17_17) ?x19592) ?x25128) ?x30894) ?x30897)))
 (let ((?x30916 (- (- (- (- (- (+ (+ ?x30898 ?x30900) ?x30902) ?x30904) ?x30906) ?x30909) ?x30912) ?x30915)))
 (= (- (- (- ?x30916 ?x30376) ?x30379) ?x30382) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x30981 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x30978 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x30969 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x30965 (* 8.0 l_0_17_36)))
 (let ((?x30966 (* ?x30965 l_0_17_39)))
 (let ((?x30962 (* 8.0 l_0_17_35)))
 (let ((?x30963 (* ?x30962 l_0_17_38)))
 (let ((?x30959 (* 8.0 l_0_17_34)))
 (let ((?x30960 (* ?x30959 l_0_17_37)))
 (let ((?x30779 (* 4.0 l_0_17_33)))
 (let ((?x30957 (* ?x30779 l_0_17_38)))
 (let ((?x30804 (* 8.0 l_0_17_33)))
 (let ((?x30805 (* ?x30804 l_0_17_35)))
 (let ((?x30776 (* 4.0 l_0_17_32)))
 (let ((?x30954 (* ?x30776 l_0_17_37)))
 (let ((?x30798 (* 8.0 l_0_17_32)))
 (let ((?x30799 (* ?x30798 l_0_17_34)))
 (let ((?x30950 (* 8.0 l_0_17_21)))
 (let ((?x30951 (* ?x30950 l_0_17_24)))
 (let ((?x30947 (* 8.0 l_0_17_20)))
 (let ((?x30948 (* ?x30947 l_0_17_23)))
 (let ((?x30944 (* 8.0 l_0_17_19)))
 (let ((?x30945 (* ?x30944 l_0_17_22)))
 (let ((?x19591 (* 4.0 l_0_17_18)))
 (let ((?x30942 (* ?x19591 l_0_17_23)))
 (let ((?x30791 (* 8.0 l_0_17_18)))
 (let ((?x30792 (* ?x30791 l_0_17_20)))
 (let ((?x19590 (* 4.0 l_0_17_17)))
 (let ((?x30939 (* ?x19590 l_0_17_22)))
 (let ((?x30787 (* 8.0 l_0_17_17)))
 (let ((?x30788 (* ?x30787 l_0_17_19)))
 (let ((?x30953 (- (+ (+ (+ (+ (+ (+ ?x30788 ?x30939) ?x30792) ?x30942) ?x30945) ?x30948) ?x30951) ?x30799)))
 (let ((?x30970 (- (- (- (- (- (- (- ?x30953 ?x30954) ?x30805) ?x30957) ?x30960) ?x30963) ?x30966) ?x30969)))
 (let ((?x30976 (- (- ?x30970 (* (* 2.0 l_0_17_47) l_0_17_49)) (* (* 2.0 l_0_17_48) l_0_17_50))))
 (= (- (- ?x30976 ?x30978) ?x30981) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30965 (* 8.0 l_0_17_36)))
 (let ((?x31035 (* ?x30965 l_0_17_43)))
 (let ((?x30962 (* 8.0 l_0_17_35)))
 (let ((?x31033 (* ?x30962 l_0_17_42)))
 (let ((?x30959 (* 8.0 l_0_17_34)))
 (let ((?x31031 (* ?x30959 l_0_17_41)))
 (let ((?x30779 (* 4.0 l_0_17_33)))
 (let ((?x31029 (* ?x30779 l_0_17_42)))
 (let ((?x30906 (* ?x30779 l_0_17_35)))
 (let ((?x30776 (* 4.0 l_0_17_32)))
 (let ((?x31026 (* ?x30776 l_0_17_41)))
 (let ((?x30904 (* ?x30776 l_0_17_34)))
 (let ((?x30950 (* 8.0 l_0_17_21)))
 (let ((?x31023 (* ?x30950 l_0_17_28)))
 (let ((?x30947 (* 8.0 l_0_17_20)))
 (let ((?x31021 (* ?x30947 l_0_17_27)))
 (let ((?x30944 (* 8.0 l_0_17_19)))
 (let ((?x31019 (* ?x30944 l_0_17_26)))
 (let ((?x19591 (* 4.0 l_0_17_18)))
 (let ((?x31017 (* ?x19591 l_0_17_27)))
 (let ((?x25128 (* ?x19591 l_0_17_20)))
 (let ((?x19590 (* 4.0 l_0_17_17)))
 (let ((?x31014 (* ?x19590 l_0_17_26)))
 (let ((?x19592 (* ?x19590 l_0_17_19)))
 (let ((?x31010 (* 2.0 l_0_17_13)))
 (let ((?x31011 (* ?x31010 l_0_17_6)))
 (let ((?x30723 (* 2.0 l_0_17_12)))
 (let ((?x31008 (* ?x30723 l_0_17_5)))
 (let ((?x31015 (+ (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_4) ?x31008) ?x31011) ?x19592) ?x31014)))
 (let ((?x31027 (- (+ (+ (+ (+ (+ (- ?x31015 ?x25128) ?x31017) ?x31019) ?x31021) ?x31023) ?x30904) ?x31026)))
 (= (- (- (- (- (+ ?x31027 ?x30906) ?x31029) ?x31031) ?x31033) ?x31035) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x31094 (* l_0_17_9 l_0_17_9)))
 (let ((?x31092 (* l_0_17_8 l_0_17_8)))
 (let ((?x31090 (* l_0_17_7 l_0_17_7)))
 (let ((?x31083 (* 4.0 l_0_17_40)))
 (let ((?x31084 (* ?x31083 l_0_17_40)))
 (let ((?x31080 (* 4.0 l_0_17_39)))
 (let ((?x31081 (* ?x31080 l_0_17_39)))
 (let ((?x31077 (* 4.0 l_0_17_38)))
 (let ((?x31078 (* ?x31077 l_0_17_38)))
 (let ((?x31074 (* 4.0 l_0_17_37)))
 (let ((?x31075 (* ?x31074 l_0_17_37)))
 (let ((?x30804 (* 8.0 l_0_17_33)))
 (let ((?x30841 (* ?x30804 l_0_17_38)))
 (let ((?x30798 (* 8.0 l_0_17_32)))
 (let ((?x30838 (* ?x30798 l_0_17_37)))
 (let ((?x31069 (* l_0_17_25 l_0_17_25)))
 (let ((?x31070 (* 4.0 ?x31069)))
 (let ((?x31066 (* l_0_17_24 l_0_17_24)))
 (let ((?x31067 (* 4.0 ?x31066)))
 (let ((?x31063 (* l_0_17_23 l_0_17_23)))
 (let ((?x31064 (* 4.0 ?x31063)))
 (let ((?x31060 (* l_0_17_22 l_0_17_22)))
 (let ((?x31061 (* 4.0 ?x31060)))
 (let ((?x30791 (* 8.0 l_0_17_18)))
 (let ((?x30833 (* ?x30791 l_0_17_23)))
 (let ((?x30787 (* 8.0 l_0_17_17)))
 (let ((?x30831 (* ?x30787 l_0_17_22)))
 (let ((?x31068 (+ (+ (+ (+ (+ (* (- l_0_17_10) l_0_17_10) ?x30831) ?x30833) ?x31061) ?x31064) ?x31067)))
 (let ((?x31085 (- (- (- (- (- (- (+ ?x31068 ?x31070) ?x30838) ?x30841) ?x31075) ?x31078) ?x31081) ?x31084)))
 (let ((?x31089 (- (- ?x31085 (* (* 2.0 l_0_17_47) l_0_17_52)) (* (* 2.0 l_0_17_48) l_0_17_53))))
 (= (- (- (- ?x31089 ?x31090) ?x31092) ?x31094) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x31151 (* (* 8.0 l_0_17_40) l_0_17_44)))
 (let ((?x31148 (* (* 8.0 l_0_17_39) l_0_17_43)))
 (let ((?x31145 (* (* 8.0 l_0_17_38) l_0_17_42)))
 (let ((?x31142 (* (* 8.0 l_0_17_37) l_0_17_41)))
 (let ((?x30804 (* 8.0 l_0_17_33)))
 (let ((?x30874 (* ?x30804 l_0_17_42)))
 (let ((?x30779 (* 4.0 l_0_17_33)))
 (let ((?x30957 (* ?x30779 l_0_17_38)))
 (let ((?x30798 (* 8.0 l_0_17_32)))
 (let ((?x30871 (* ?x30798 l_0_17_41)))
 (let ((?x30776 (* 4.0 l_0_17_32)))
 (let ((?x30954 (* ?x30776 l_0_17_37)))
 (let ((?x31135 (* (* 8.0 l_0_17_25) l_0_17_29)))
 (let ((?x31132 (* (* 8.0 l_0_17_24) l_0_17_28)))
 (let ((?x31129 (* (* 8.0 l_0_17_23) l_0_17_27)))
 (let ((?x31126 (* (* 8.0 l_0_17_22) l_0_17_26)))
 (let ((?x30791 (* 8.0 l_0_17_18)))
 (let ((?x30866 (* ?x30791 l_0_17_27)))
 (let ((?x19591 (* 4.0 l_0_17_18)))
 (let ((?x30942 (* ?x19591 l_0_17_23)))
 (let ((?x30787 (* 8.0 l_0_17_17)))
 (let ((?x30861 (* ?x30787 l_0_17_26)))
 (let ((?x19590 (* 4.0 l_0_17_17)))
 (let ((?x30939 (* ?x19590 l_0_17_22)))
 (let ((?x31010 (* 2.0 l_0_17_13)))
 (let ((?x31119 (* ?x31010 l_0_17_9)))
 (let ((?x30723 (* 2.0 l_0_17_12)))
 (let ((?x31117 (* ?x30723 l_0_17_8)))
 (let ((?x30720 (* 2.0 l_0_17_11)))
 (let ((?x31115 (* ?x30720 l_0_17_7)))
 (let ((?x31121 (- (- (- (- (* (* (- 2.0) l_0_17_10) l_0_17_14) ?x31115) ?x31117) ?x31119) ?x30939)))
 (let ((?x31136 (+ (+ (+ (+ (+ (- (+ ?x31121 ?x30861) ?x30942) ?x30866) ?x31126) ?x31129) ?x31132) ?x31135)))
 (let ((?x31149 (- (- (- (- (+ (- (+ ?x31136 ?x30954) ?x30871) ?x30957) ?x30874) ?x31142) ?x31145) ?x31148)))
 (let ((?x31156 (- (- (- ?x31149 ?x31151) (* (* 2.0 l_0_17_47) l_0_17_56)) (* (* 2.0 l_0_17_48) l_0_17_57))))
 (= ?x31156 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31232 (* (* 4.0 l_0_17_45) l_0_17_45)))
 (let ((?x31229 (* (* 4.0 l_0_17_44) l_0_17_44)))
 (let ((?x31226 (* (* 4.0 l_0_17_43) l_0_17_43)))
 (let ((?x31223 (* (* 4.0 l_0_17_42) l_0_17_42)))
 (let ((?x31220 (* (* 4.0 l_0_17_41) l_0_17_41)))
 (let ((?x30779 (* 4.0 l_0_17_33)))
 (let ((?x31029 (* ?x30779 l_0_17_42)))
 (let ((?x30776 (* 4.0 l_0_17_32)))
 (let ((?x31026 (* ?x30776 l_0_17_41)))
 (let ((?x6791 (* 2.0 l_0_17_31)))
 (let ((?x30902 (* ?x6791 l_0_17_32)))
 (let ((?x31213 (* l_0_17_30 l_0_17_30)))
 (let ((?x31214 (* 4.0 ?x31213)))
 (let ((?x31210 (* l_0_17_29 l_0_17_29)))
 (let ((?x31211 (* 4.0 ?x31210)))
 (let ((?x31207 (* l_0_17_28 l_0_17_28)))
 (let ((?x31208 (* 4.0 ?x31207)))
 (let ((?x31204 (* l_0_17_27 l_0_17_27)))
 (let ((?x31205 (* 4.0 ?x31204)))
 (let ((?x31201 (* l_0_17_26 l_0_17_26)))
 (let ((?x31202 (* 4.0 ?x31201)))
 (let ((?x19591 (* 4.0 l_0_17_18)))
 (let ((?x31017 (* ?x19591 l_0_17_27)))
 (let ((?x19590 (* 4.0 l_0_17_17)))
 (let ((?x31014 (* ?x19590 l_0_17_26)))
 (let ((?x30487 (* l_0_17_15 l_0_17_15)))
 (let ((?x30484 (* l_0_17_14 l_0_17_14)))
 (let ((?x30481 (* l_0_17_13 l_0_17_13)))
 (let ((?x31194 (- (- (* (- l_0_17_11) l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x30481)))
 (let ((?x31199 (- (+ (- (- ?x31194 ?x30484) ?x30487) (* (* 2.0 l_0_17_16) l_0_17_17)) ?x31014)))
 (let ((?x31216 (- (+ (+ (+ (+ (+ (- ?x31199 ?x31017) ?x31202) ?x31205) ?x31208) ?x31211) ?x31214) ?x30902)))
 (let ((?x31233 (- (- (- (- (- (+ (+ ?x31216 ?x31026) ?x31029) ?x31220) ?x31223) ?x31226) ?x31229) ?x31232)))
 (= ?x31233 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30981 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x30978 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x30969 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x30371 (* 4.0 l_0_17_31)))
 (let ((?x31262 (* ?x30371 l_0_17_37)))
 (let ((?x30600 (* 8.0 l_0_17_31)))
 (let ((?x30631 (* ?x30600 l_0_17_34)))
 (let ((?x30367 (* 4.0 l_0_17_16)))
 (let ((?x31259 (* ?x30367 l_0_17_22)))
 (let ((?x30591 (* 8.0 l_0_17_16)))
 (let ((?x24890 (* ?x30591 l_0_17_19)))
 (let ((?x31266 (- (+ (- (- (+ ?x24890 ?x31259) ?x30631) ?x31262) ?x30969) (* (* 2.0 l_0_17_46) l_0_17_49))))
 (let ((?x31274 (- (- (+ (+ ?x31266 ?x30978) ?x30981) (* (* 2.0 l_0_17_64) l_0_17_67)) (* (* 2.0 l_0_17_65) l_0_17_68))))
 (let ((?x31280 (- (- ?x31274 (* (* 2.0 l_0_17_66) l_0_17_69)) (* (* 2.0 l_0_17_79) l_0_17_82))))
 (let ((?x31286 (- (- ?x31280 (* (* 2.0 l_0_17_80) l_0_17_83)) (* (* 2.0 l_0_17_81) l_0_17_84))))
 (= ?x31286 0.0)))))))))))))))))
(assert
 (let ((?x30371 (* 4.0 l_0_17_31)))
 (let ((?x30493 (* ?x30371 l_0_17_41)))
 (let ((?x30372 (* ?x30371 l_0_17_34)))
 (let ((?x30367 (* 4.0 l_0_17_16)))
 (let ((?x30490 (* ?x30367 l_0_17_26)))
 (let ((?x30368 (* ?x30367 l_0_17_19)))
 (let ((?x31010 (* 2.0 l_0_17_13)))
 (let ((?x31011 (* ?x31010 l_0_17_6)))
 (let ((?x30723 (* 2.0 l_0_17_12)))
 (let ((?x31008 (* ?x30723 l_0_17_5)))
 (let ((?x31318 (+ (- (+ (+ (* (* 2.0 l_0_17_11) l_0_17_4) ?x31008) ?x31011) ?x30368) ?x30490)))
 (let ((?x31324 (- (- (- (+ ?x31318 ?x30372) ?x30493) (* (* 2.0 l_0_17_64) l_0_17_71)) (* (* 2.0 l_0_17_65) l_0_17_72))))
 (let ((?x31328 (- (- ?x31324 (* (* 2.0 l_0_17_66) l_0_17_73)) (* (* 2.0 l_0_17_79) l_0_17_86))))
 (let ((?x31332 (- (- ?x31328 (* (* 2.0 l_0_17_80) l_0_17_87)) (* (* 2.0 l_0_17_81) l_0_17_88))))
 (= ?x31332 0.0))))))))))))))))
(assert
 (let ((?x31358 (* l_0_17_85 l_0_17_85)))
 (let ((?x31356 (* l_0_17_84 l_0_17_84)))
 (let ((?x31354 (* l_0_17_83 l_0_17_83)))
 (let ((?x31352 (* l_0_17_82 l_0_17_82)))
 (let ((?x31348 (* l_0_17_70 l_0_17_70)))
 (let ((?x31344 (* l_0_17_69 l_0_17_69)))
 (let ((?x31342 (* l_0_17_68 l_0_17_68)))
 (let ((?x31340 (* l_0_17_67 l_0_17_67)))
 (let ((?x30600 (* 8.0 l_0_17_31)))
 (let ((?x30679 (* ?x30600 l_0_17_37)))
 (let ((?x30591 (* 8.0 l_0_17_16)))
 (let ((?x30672 (* ?x30591 l_0_17_22)))
 (let ((?x31339 (- (- (+ (* 1.0 (* l_0_17_10 l_0_17_10)) ?x30672) ?x30679) (* (* 2.0 l_0_17_46) l_0_17_52))))
 (let ((?x31347 (+ (- (- (- ?x31339 ?x31340) ?x31342) ?x31344) (* 1.0 (* l_0_17_7 l_0_17_7)))))
 (let ((?x31355 (- (- (+ (- ?x31347 ?x31348) (* 1.0 (* l_0_17_8 l_0_17_8))) ?x31352) ?x31354)))
 (= (+ (- (- ?x31355 ?x31356) ?x31358) (* 1.0 (* l_0_17_9 l_0_17_9))) 0.0)))))))))))))))))
(assert
 (let ((?x30600 (* 8.0 l_0_17_31)))
 (let ((?x30730 (* ?x30600 l_0_17_41)))
 (let ((?x30371 (* 4.0 l_0_17_31)))
 (let ((?x31262 (* ?x30371 l_0_17_37)))
 (let ((?x30591 (* 8.0 l_0_17_16)))
 (let ((?x30727 (* ?x30591 l_0_17_26)))
 (let ((?x30367 (* 4.0 l_0_17_16)))
 (let ((?x31259 (* ?x30367 l_0_17_22)))
 (let ((?x31010 (* 2.0 l_0_17_13)))
 (let ((?x31119 (* ?x31010 l_0_17_9)))
 (let ((?x30723 (* 2.0 l_0_17_12)))
 (let ((?x31117 (* ?x30723 l_0_17_8)))
 (let ((?x30720 (* 2.0 l_0_17_11)))
 (let ((?x31115 (* ?x30720 l_0_17_7)))
 (let ((?x31385 (- (+ (+ (+ (* (* 2.0 l_0_17_10) l_0_17_14) ?x31115) ?x31117) ?x31119) ?x31259)))
 (let ((?x31390 (- (- (+ (+ ?x31385 ?x30727) ?x31262) ?x30730) (* (* 2.0 l_0_17_46) l_0_17_56))))
 (let ((?x31396 (- (- ?x31390 (* (* 2.0 l_0_17_67) l_0_17_71)) (* (* 2.0 l_0_17_68) l_0_17_72))))
 (let ((?x31402 (- (- ?x31396 (* (* 2.0 l_0_17_69) l_0_17_73)) (* (* 2.0 l_0_17_70) l_0_17_74))))
 (let ((?x31408 (- (- ?x31402 (* (* 2.0 l_0_17_82) l_0_17_86)) (* (* 2.0 l_0_17_83) l_0_17_87))))
 (let ((?x31414 (- (- ?x31408 (* (* 2.0 l_0_17_84) l_0_17_88)) (* (* 2.0 l_0_17_85) l_0_17_89))))
 (= ?x31414 0.0))))))))))))))))))))))
(assert
 (let ((?x6791 (* 2.0 l_0_17_31)))
 (let ((?x31437 (* ?x6791 l_0_17_34)))
 (let ((?x30899 (* l_0_17_21 l_0_17_21)))
 (let ((?x31435 (* 2.0 ?x30899)))
 (let ((?x30896 (* l_0_17_20 l_0_17_20)))
 (let ((?x31433 (* 2.0 ?x30896)))
 (let ((?x30893 (* l_0_17_19 l_0_17_19)))
 (let ((?x25973 (* 2.0 ?x30893)))
 (let ((?x31438 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_16) l_0_17_19) ?x25973) ?x31433) ?x31435) ?x31437)))
 (let ((?x31444 (- (- ?x31438 (* (* 2.0 l_0_17_34) l_0_17_34)) (* (* 2.0 l_0_17_35) l_0_17_35))))
 (= (- ?x31444 (* (* 2.0 l_0_17_36) l_0_17_36)) 0.0))))))))))))
(assert
 (let ((?x31495 (* l_0_17_51 l_0_17_51)))
 (let ((?x31493 (* l_0_17_50 l_0_17_50)))
 (let ((?x31491 (* l_0_17_49 l_0_17_49)))
 (let ((?x30914 (* 4.0 l_0_17_36)))
 (let ((?x30915 (* ?x30914 l_0_17_36)))
 (let ((?x31488 (* ?x30914 l_0_17_39)))
 (let ((?x30911 (* 4.0 l_0_17_35)))
 (let ((?x30912 (* ?x30911 l_0_17_35)))
 (let ((?x31485 (* ?x30911 l_0_17_38)))
 (let ((?x30908 (* 4.0 l_0_17_34)))
 (let ((?x30909 (* ?x30908 l_0_17_34)))
 (let ((?x31482 (* ?x30908 l_0_17_37)))
 (let ((?x6791 (* 2.0 l_0_17_31)))
 (let ((?x31480 (* ?x6791 l_0_17_37)))
 (let ((?x30899 (* l_0_17_21 l_0_17_21)))
 (let ((?x30900 (* 4.0 ?x30899)))
 (let ((?x31476 (* 4.0 l_0_17_21)))
 (let ((?x31477 (* ?x31476 l_0_17_24)))
 (let ((?x30896 (* l_0_17_20 l_0_17_20)))
 (let ((?x30897 (* 4.0 ?x30896)))
 (let ((?x31472 (* 4.0 l_0_17_20)))
 (let ((?x31473 (* ?x31472 l_0_17_23)))
 (let ((?x30893 (* l_0_17_19 l_0_17_19)))
 (let ((?x30894 (* 4.0 ?x30893)))
 (let ((?x31470 (+ (* (* (- 2.0) l_0_17_16) l_0_17_22) (* (* 4.0 l_0_17_19) l_0_17_22))))
 (let ((?x31483 (- (+ (+ (+ (+ (+ (+ ?x31470 ?x30894) ?x31473) ?x30897) ?x31477) ?x30900) ?x31480) ?x31482)))
 (let ((?x31494 (- (- (- (- (- (- (- ?x31483 ?x30909) ?x31485) ?x30912) ?x31488) ?x30915) ?x31491) ?x31493)))
 (= (- ?x31494 ?x31495) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x7295 (* l_0_17_36 l_0_17_36)))
 (let ((?x31455 (* 2.0 ?x7295)))
 (let ((?x30914 (* 4.0 l_0_17_36)))
 (let ((?x31550 (* ?x30914 l_0_17_43)))
 (let ((?x25186 (* l_0_17_35 l_0_17_35)))
 (let ((?x31450 (* 2.0 ?x25186)))
 (let ((?x30911 (* 4.0 l_0_17_35)))
 (let ((?x31547 (* ?x30911 l_0_17_42)))
 (let ((?x30930 (* l_0_17_34 l_0_17_34)))
 (let ((?x26029 (* 2.0 ?x30930)))
 (let ((?x30908 (* 4.0 l_0_17_34)))
 (let ((?x31544 (* ?x30908 l_0_17_41)))
 (let ((?x6791 (* 2.0 l_0_17_31)))
 (let ((?x31542 (* ?x6791 l_0_17_41)))
 (let ((?x31476 (* 4.0 l_0_17_21)))
 (let ((?x31537 (* ?x31476 l_0_17_28)))
 (let ((?x31472 (* 4.0 l_0_17_20)))
 (let ((?x31532 (* ?x31472 l_0_17_27)))
 (let ((?x31468 (* 4.0 l_0_17_19)))
 (let ((?x31527 (* ?x31468 l_0_17_26)))
 (let ((?x31531 (- (+ (* (* (- 2.0) l_0_17_16) l_0_17_26) ?x31527) (* (* 2.0 l_0_17_19) l_0_17_19))))
 (let ((?x31541 (- (+ (- (+ ?x31531 ?x31532) (* (* 2.0 l_0_17_20) l_0_17_20)) ?x31537) (* (* 2.0 l_0_17_21) l_0_17_21))))
 (let ((?x31552 (+ (- (+ (- (+ (- (+ ?x31541 ?x31542) ?x31544) ?x26029) ?x31547) ?x31450) ?x31550) ?x31455)))
 (= ?x31552 0.0)))))))))))))))))))))))))
(assert
 (let ((?x25003 (* l_0_17_33 l_0_17_33)))
 (let ((?x13770 (* l_0_17_32 l_0_17_32)))
 (let ((?x31571 (+ (- (* (- l_0_17_17) l_0_17_17) (* l_0_17_18 l_0_17_18)) ?x13770)))
 (= (+ ?x31571 ?x25003) 0.0)))))
(assert
 (let ((?x30807 (* 2.0 l_0_17_33)))
 (let ((?x31586 (* ?x30807 l_0_17_35)))
 (let ((?x30801 (* 2.0 l_0_17_32)))
 (let ((?x31584 (* ?x30801 l_0_17_34)))
 (let ((?x30868 (* 2.0 l_0_17_18)))
 (let ((?x31582 (* ?x30868 l_0_17_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_17) l_0_17_19) ?x31582) ?x31584) ?x31586) 0.0))))))))
(assert
 (let ((?x30807 (* 2.0 l_0_17_33)))
 (let ((?x31600 (* ?x30807 l_0_17_38)))
 (let ((?x30801 (* 2.0 l_0_17_32)))
 (let ((?x31598 (* ?x30801 l_0_17_37)))
 (let ((?x30868 (* 2.0 l_0_17_18)))
 (let ((?x31596 (* ?x30868 l_0_17_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_17) l_0_17_22) ?x31596) ?x31598) ?x31600) 0.0))))))))
(assert
 (let ((?x30807 (* 2.0 l_0_17_33)))
 (let ((?x31618 (* ?x30807 l_0_17_42)))
 (let ((?x30801 (* 2.0 l_0_17_32)))
 (let ((?x31616 (* ?x30801 l_0_17_41)))
 (let ((?x30868 (* 2.0 l_0_17_18)))
 (let ((?x31614 (* ?x30868 l_0_17_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_17) l_0_17_26) ?x31614) ?x31616) ?x31618) 0.0))))))))
(assert
 (let ((?x7295 (* l_0_17_36 l_0_17_36)))
 (let ((?x25186 (* l_0_17_35 l_0_17_35)))
 (let ((?x30930 (* l_0_17_34 l_0_17_34)))
 (let ((?x30899 (* l_0_17_21 l_0_17_21)))
 (let ((?x31635 (- (- (* (- l_0_17_19) l_0_17_19) (* l_0_17_20 l_0_17_20)) ?x30899)))
 (= (+ (+ (+ ?x31635 ?x30930) ?x25186) ?x7295) 0.0)))))))
(assert
 (let ((?x31445 (* 2.0 l_0_17_36)))
 (let ((?x31659 (* ?x31445 l_0_17_39)))
 (let ((?x31442 (* 2.0 l_0_17_35)))
 (let ((?x31657 (* ?x31442 l_0_17_38)))
 (let ((?x31439 (* 2.0 l_0_17_34)))
 (let ((?x31655 (* ?x31439 l_0_17_37)))
 (let ((?x31539 (* 2.0 l_0_17_21)))
 (let ((?x31653 (* ?x31539 l_0_17_24)))
 (let ((?x31534 (* 2.0 l_0_17_20)))
 (let ((?x31651 (* ?x31534 l_0_17_23)))
 (let ((?x31658 (+ (+ (- (- (* (* (- 2.0) l_0_17_19) l_0_17_22) ?x31651) ?x31653) ?x31655) ?x31657)))
 (= (+ ?x31658 ?x31659) 0.0)))))))))))))
(assert
 (let ((?x31445 (* 2.0 l_0_17_36)))
 (let ((?x31675 (* ?x31445 l_0_17_43)))
 (let ((?x31442 (* 2.0 l_0_17_35)))
 (let ((?x31673 (* ?x31442 l_0_17_42)))
 (let ((?x31439 (* 2.0 l_0_17_34)))
 (let ((?x31671 (* ?x31439 l_0_17_41)))
 (let ((?x31539 (* 2.0 l_0_17_21)))
 (let ((?x31669 (* ?x31539 l_0_17_28)))
 (let ((?x31534 (* 2.0 l_0_17_20)))
 (let ((?x31667 (* ?x31534 l_0_17_27)))
 (let ((?x31674 (+ (+ (- (- (* (* (- 2.0) l_0_17_19) l_0_17_26) ?x31667) ?x31669) ?x31671) ?x31673)))
 (= (+ ?x31674 ?x31675) 0.0)))))))))))))
(assert
 (let ((?x25493 (* l_0_17_40 l_0_17_40)))
 (let ((?x25491 (* l_0_17_39 l_0_17_39)))
 (let ((?x13394 (* l_0_17_38 l_0_17_38)))
 (let ((?x7537 (* l_0_17_37 l_0_17_37)))
 (let ((?x31069 (* l_0_17_25 l_0_17_25)))
 (let ((?x31066 (* l_0_17_24 l_0_17_24)))
 (let ((?x31693 (- (- (* (- l_0_17_22) l_0_17_22) (* l_0_17_23 l_0_17_23)) ?x31066)))
 (= (+ (+ (+ (+ (- ?x31693 ?x31069) ?x7537) ?x13394) ?x25491) ?x25493) 0.0)))))))))
(assert
 (let ((?x31728 (* 2.0 l_0_17_40)))
 (let ((?x31729 (* ?x31728 l_0_17_44)))
 (let ((?x31725 (* 2.0 l_0_17_39)))
 (let ((?x31726 (* ?x31725 l_0_17_43)))
 (let ((?x31722 (* 2.0 l_0_17_38)))
 (let ((?x31723 (* ?x31722 l_0_17_42)))
 (let ((?x31719 (* 2.0 l_0_17_37)))
 (let ((?x31720 (* ?x31719 l_0_17_41)))
 (let ((?x31716 (* 2.0 l_0_17_25)))
 (let ((?x31717 (* ?x31716 l_0_17_29)))
 (let ((?x31713 (* 2.0 l_0_17_24)))
 (let ((?x31714 (* ?x31713 l_0_17_28)))
 (let ((?x31710 (* 2.0 l_0_17_23)))
 (let ((?x31711 (* ?x31710 l_0_17_27)))
 (let ((?x31721 (+ (- (- (- (* (* (- 2.0) l_0_17_22) l_0_17_26) ?x31711) ?x31714) ?x31717) ?x31720)))
 (= (+ (+ (+ ?x31721 ?x31723) ?x31726) ?x31729) 0.0)))))))))))))))))
(assert
 (let ((?x14598 (* l_0_17_45 l_0_17_45)))
 (let ((?x31249 (* l_0_17_44 l_0_17_44)))
 (let ((?x19960 (* l_0_17_43 l_0_17_43)))
 (let ((?x19927 (* l_0_17_42 l_0_17_42)))
 (let ((?x19955 (* l_0_17_41 l_0_17_41)))
 (let ((?x7295 (* l_0_17_36 l_0_17_36)))
 (let ((?x25186 (* l_0_17_35 l_0_17_35)))
 (let ((?x30930 (* l_0_17_34 l_0_17_34)))
 (let ((?x31213 (* l_0_17_30 l_0_17_30)))
 (let ((?x31210 (* l_0_17_29 l_0_17_29)))
 (let ((?x31207 (* l_0_17_28 l_0_17_28)))
 (let ((?x31204 (* l_0_17_27 l_0_17_27)))
 (let ((?x31201 (* l_0_17_26 l_0_17_26)))
 (let ((?x30899 (* l_0_17_21 l_0_17_21)))
 (let ((?x20494 (- (+ (+ (* l_0_17_19 l_0_17_19) (* l_0_17_20 l_0_17_20)) ?x30899) ?x31201)))
 (let ((?x31756 (- (- (- (- (- (- (- ?x20494 ?x31204) ?x31207) ?x31210) ?x31213) ?x30930) ?x25186) ?x7295)))
 (= (+ (+ (+ (+ (+ ?x31756 ?x19955) ?x19927) ?x19960) ?x31249) ?x14598) 0.0))))))))))))))))))
(assert
 (let ((?x30914 (* 4.0 l_0_17_36)))
 (let ((?x31550 (* ?x30914 l_0_17_43)))
 (let ((?x30911 (* 4.0 l_0_17_35)))
 (let ((?x31547 (* ?x30911 l_0_17_42)))
 (let ((?x30908 (* 4.0 l_0_17_34)))
 (let ((?x31544 (* ?x30908 l_0_17_41)))
 (let ((?x6791 (* 2.0 l_0_17_31)))
 (let ((?x31437 (* ?x6791 l_0_17_34)))
 (let ((?x31213 (* l_0_17_30 l_0_17_30)))
 (let ((?x31788 (* 2.0 ?x31213)))
 (let ((?x31210 (* l_0_17_29 l_0_17_29)))
 (let ((?x31786 (* 2.0 ?x31210)))
 (let ((?x31207 (* l_0_17_28 l_0_17_28)))
 (let ((?x31784 (* 2.0 ?x31207)))
 (let ((?x31204 (* l_0_17_27 l_0_17_27)))
 (let ((?x31782 (* 2.0 ?x31204)))
 (let ((?x31201 (* l_0_17_26 l_0_17_26)))
 (let ((?x31780 (* 2.0 ?x31201)))
 (let ((?x31476 (* 4.0 l_0_17_21)))
 (let ((?x31537 (* ?x31476 l_0_17_28)))
 (let ((?x31472 (* 4.0 l_0_17_20)))
 (let ((?x31532 (* ?x31472 l_0_17_27)))
 (let ((?x31468 (* 4.0 l_0_17_19)))
 (let ((?x31527 (* ?x31468 l_0_17_26)))
 (let ((?x31781 (+ (- (- (- (* (* 2.0 l_0_17_16) l_0_17_19) ?x31527) ?x31532) ?x31537) ?x31780)))
 (let ((?x31792 (+ (+ (- (+ (+ (+ (+ ?x31781 ?x31782) ?x31784) ?x31786) ?x31788) ?x31437) ?x31544) ?x31547)))
 (let ((?x31799 (- (- (+ ?x31792 ?x31550) (* (* 2.0 l_0_17_41) l_0_17_41)) (* (* 2.0 l_0_17_42) l_0_17_42))))
 (let ((?x31805 (- (- ?x31799 (* (* 2.0 l_0_17_43) l_0_17_43)) (* (* 2.0 l_0_17_44) l_0_17_44))))
 (= (- ?x31805 (* (* 2.0 l_0_17_45) l_0_17_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x31880 (* l_0_17_60 l_0_17_60)))
 (let ((?x31878 (* l_0_17_59 l_0_17_59)))
 (let ((?x31876 (* l_0_17_58 l_0_17_58)))
 (let ((?x31874 (* l_0_17_57 l_0_17_57)))
 (let ((?x31872 (* l_0_17_56 l_0_17_56)))
 (let ((?x31232 (* (* 4.0 l_0_17_45) l_0_17_45)))
 (let ((?x31229 (* (* 4.0 l_0_17_44) l_0_17_44)))
 (let ((?x31226 (* (* 4.0 l_0_17_43) l_0_17_43)))
 (let ((?x31223 (* (* 4.0 l_0_17_42) l_0_17_42)))
 (let ((?x31220 (* (* 4.0 l_0_17_41) l_0_17_41)))
 (let ((?x31083 (* 4.0 l_0_17_40)))
 (let ((?x31865 (* ?x31083 l_0_17_44)))
 (let ((?x31080 (* 4.0 l_0_17_39)))
 (let ((?x31863 (* ?x31080 l_0_17_43)))
 (let ((?x31077 (* 4.0 l_0_17_38)))
 (let ((?x31861 (* ?x31077 l_0_17_42)))
 (let ((?x31074 (* 4.0 l_0_17_37)))
 (let ((?x31859 (* ?x31074 l_0_17_41)))
 (let ((?x6791 (* 2.0 l_0_17_31)))
 (let ((?x31480 (* ?x6791 l_0_17_37)))
 (let ((?x31213 (* l_0_17_30 l_0_17_30)))
 (let ((?x31214 (* 4.0 ?x31213)))
 (let ((?x31210 (* l_0_17_29 l_0_17_29)))
 (let ((?x31211 (* 4.0 ?x31210)))
 (let ((?x31207 (* l_0_17_28 l_0_17_28)))
 (let ((?x31208 (* 4.0 ?x31207)))
 (let ((?x31204 (* l_0_17_27 l_0_17_27)))
 (let ((?x31205 (* 4.0 ?x31204)))
 (let ((?x31201 (* l_0_17_26 l_0_17_26)))
 (let ((?x31202 (* 4.0 ?x31201)))
 (let ((?x31851 (* (* 4.0 l_0_17_25) l_0_17_29)))
 (let ((?x31848 (* (* 4.0 l_0_17_24) l_0_17_28)))
 (let ((?x31845 (* (* 4.0 l_0_17_23) l_0_17_27)))
 (let ((?x31842 (* (* 4.0 l_0_17_22) l_0_17_26)))
 (let ((?x31852 (- (- (- (- (* (* 2.0 l_0_17_16) l_0_17_22) ?x31842) ?x31845) ?x31848) ?x31851)))
 (let ((?x31860 (+ (- (+ (+ (+ (+ (+ ?x31852 ?x31202) ?x31205) ?x31208) ?x31211) ?x31214) ?x31480) ?x31859)))
 (let ((?x31870 (- (- (- (- (+ (+ (+ ?x31860 ?x31861) ?x31863) ?x31865) ?x31220) ?x31223) ?x31226) ?x31229)))
 (= (- (- (- (- (- (- ?x31870 ?x31232) ?x31872) ?x31874) ?x31876) ?x31878) ?x31880) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14598 (* l_0_17_45 l_0_17_45)))
 (let ((?x26167 (* 2.0 ?x14598)))
 (let ((?x31249 (* l_0_17_44 l_0_17_44)))
 (let ((?x31835 (* 2.0 ?x31249)))
 (let ((?x19960 (* l_0_17_43 l_0_17_43)))
 (let ((?x20559 (* 2.0 ?x19960)))
 (let ((?x19927 (* l_0_17_42 l_0_17_42)))
 (let ((?x20556 (* 2.0 ?x19927)))
 (let ((?x19955 (* l_0_17_41 l_0_17_41)))
 (let ((?x31827 (* 2.0 ?x19955)))
 (let ((?x6791 (* 2.0 l_0_17_31)))
 (let ((?x31542 (* ?x6791 l_0_17_41)))
 (let ((?x20553 (- (* (* 2.0 l_0_17_16) l_0_17_26) (* (* 2.0 l_0_17_26) l_0_17_26))))
 (let ((?x31900 (- (- ?x20553 (* (* 2.0 l_0_17_27) l_0_17_27)) (* (* 2.0 l_0_17_28) l_0_17_28))))
 (let ((?x31906 (- (- ?x31900 (* (* 2.0 l_0_17_29) l_0_17_29)) (* (* 2.0 l_0_17_30) l_0_17_30))))
 (= (+ (+ (+ (+ (+ (- ?x31906 ?x31542) ?x31827) ?x20556) ?x20559) ?x31835) ?x26167) 0.0)))))))))))))))))
(assert
 (let ((?x25003 (* l_0_17_33 l_0_17_33)))
 (let ((?x13770 (* l_0_17_32 l_0_17_32)))
 (let ((?x30771 (* l_0_17_18 l_0_17_18)))
 (let ((?x30769 (* l_0_17_17 l_0_17_17)))
 (let ((?x26345 (+ ?x30769 ?x30771)))
 (= (- (- ?x26345 ?x13770) ?x25003) 0.0)))))))
(assert
 (let ((?x30807 (* 2.0 l_0_17_33)))
 (let ((?x31586 (* ?x30807 l_0_17_35)))
 (let ((?x30801 (* 2.0 l_0_17_32)))
 (let ((?x31584 (* ?x30801 l_0_17_34)))
 (let ((?x30868 (* 2.0 l_0_17_18)))
 (let ((?x31582 (* ?x30868 l_0_17_20)))
 (= (- (- (+ (* (* 2.0 l_0_17_17) l_0_17_19) ?x31582) ?x31584) ?x31586) 0.0))))))))
(assert
 (let ((?x30807 (* 2.0 l_0_17_33)))
 (let ((?x31600 (* ?x30807 l_0_17_38)))
 (let ((?x30801 (* 2.0 l_0_17_32)))
 (let ((?x31598 (* ?x30801 l_0_17_37)))
 (let ((?x30868 (* 2.0 l_0_17_18)))
 (let ((?x31596 (* ?x30868 l_0_17_23)))
 (= (- (- (+ (* (* 2.0 l_0_17_17) l_0_17_22) ?x31596) ?x31598) ?x31600) 0.0))))))))
(assert
 (let ((?x30807 (* 2.0 l_0_17_33)))
 (let ((?x31618 (* ?x30807 l_0_17_42)))
 (let ((?x30801 (* 2.0 l_0_17_32)))
 (let ((?x31616 (* ?x30801 l_0_17_41)))
 (let ((?x30868 (* 2.0 l_0_17_18)))
 (let ((?x31614 (* ?x30868 l_0_17_27)))
 (= (- (- (+ (* (* 2.0 l_0_17_17) l_0_17_26) ?x31614) ?x31616) ?x31618) 0.0))))))))
(assert
 (let ((?x31445 (* 2.0 l_0_17_36)))
 (let ((?x31659 (* ?x31445 l_0_17_39)))
 (let ((?x31442 (* 2.0 l_0_17_35)))
 (let ((?x31657 (* ?x31442 l_0_17_38)))
 (let ((?x31439 (* 2.0 l_0_17_34)))
 (let ((?x31655 (* ?x31439 l_0_17_37)))
 (let ((?x31539 (* 2.0 l_0_17_21)))
 (let ((?x31653 (* ?x31539 l_0_17_24)))
 (let ((?x31534 (* 2.0 l_0_17_20)))
 (let ((?x31651 (* ?x31534 l_0_17_23)))
 (let ((?x31922 (- (- (+ (+ (* (* 2.0 l_0_17_19) l_0_17_22) ?x31651) ?x31653) ?x31655) ?x31657)))
 (= (- ?x31922 ?x31659) 0.0)))))))))))))
(assert
 (let ((?x31445 (* 2.0 l_0_17_36)))
 (let ((?x31675 (* ?x31445 l_0_17_43)))
 (let ((?x31442 (* 2.0 l_0_17_35)))
 (let ((?x31673 (* ?x31442 l_0_17_42)))
 (let ((?x31439 (* 2.0 l_0_17_34)))
 (let ((?x31671 (* ?x31439 l_0_17_41)))
 (let ((?x31539 (* 2.0 l_0_17_21)))
 (let ((?x31669 (* ?x31539 l_0_17_28)))
 (let ((?x31534 (* 2.0 l_0_17_20)))
 (let ((?x31667 (* ?x31534 l_0_17_27)))
 (let ((?x26500 (- (- (+ (+ (* (* 2.0 l_0_17_19) l_0_17_26) ?x31667) ?x31669) ?x31671) ?x31673)))
 (= (- ?x26500 ?x31675) 0.0)))))))))))))
(assert
 (let ((?x25493 (* l_0_17_40 l_0_17_40)))
 (let ((?x25491 (* l_0_17_39 l_0_17_39)))
 (let ((?x13394 (* l_0_17_38 l_0_17_38)))
 (let ((?x7537 (* l_0_17_37 l_0_17_37)))
 (let ((?x31069 (* l_0_17_25 l_0_17_25)))
 (let ((?x31066 (* l_0_17_24 l_0_17_24)))
 (let ((?x26567 (+ (+ (+ (* l_0_17_22 l_0_17_22) (* l_0_17_23 l_0_17_23)) ?x31066) ?x31069)))
 (= (- (- (- (- ?x26567 ?x7537) ?x13394) ?x25491) ?x25493) 0.0)))))))))
(assert
 (let ((?x31728 (* 2.0 l_0_17_40)))
 (let ((?x31729 (* ?x31728 l_0_17_44)))
 (let ((?x31725 (* 2.0 l_0_17_39)))
 (let ((?x31726 (* ?x31725 l_0_17_43)))
 (let ((?x31722 (* 2.0 l_0_17_38)))
 (let ((?x31723 (* ?x31722 l_0_17_42)))
 (let ((?x31719 (* 2.0 l_0_17_37)))
 (let ((?x31720 (* ?x31719 l_0_17_41)))
 (let ((?x31716 (* 2.0 l_0_17_25)))
 (let ((?x31717 (* ?x31716 l_0_17_29)))
 (let ((?x31713 (* 2.0 l_0_17_24)))
 (let ((?x31714 (* ?x31713 l_0_17_28)))
 (let ((?x31710 (* 2.0 l_0_17_23)))
 (let ((?x31711 (* ?x31710 l_0_17_27)))
 (let ((?x31946 (- (+ (+ (+ (* (* 2.0 l_0_17_22) l_0_17_26) ?x31711) ?x31714) ?x31717) ?x31720)))
 (= (- (- (- ?x31946 ?x31723) ?x31726) ?x31729) 0.0)))))))))))))))))
(assert
 (let ((?x14598 (* l_0_17_45 l_0_17_45)))
 (let ((?x31249 (* l_0_17_44 l_0_17_44)))
 (let ((?x19960 (* l_0_17_43 l_0_17_43)))
 (let ((?x19927 (* l_0_17_42 l_0_17_42)))
 (let ((?x19955 (* l_0_17_41 l_0_17_41)))
 (let ((?x31213 (* l_0_17_30 l_0_17_30)))
 (let ((?x31210 (* l_0_17_29 l_0_17_29)))
 (let ((?x31207 (* l_0_17_28 l_0_17_28)))
 (let ((?x31955 (+ (+ (+ (* l_0_17_26 l_0_17_26) (* l_0_17_27 l_0_17_27)) ?x31207) ?x31210)))
 (= (- (- (- (- (- (+ ?x31955 ?x31213) ?x19955) ?x19927) ?x19960) ?x31249) ?x14598) 0.0)))))))))))
(assert
 (let ((?x30965 (* 8.0 l_0_17_36)))
 (let ((?x30966 (* ?x30965 l_0_17_39)))
 (let ((?x30962 (* 8.0 l_0_17_35)))
 (let ((?x30963 (* ?x30962 l_0_17_38)))
 (let ((?x30959 (* 8.0 l_0_17_34)))
 (let ((?x30960 (* ?x30959 l_0_17_37)))
 (let ((?x31069 (* l_0_17_25 l_0_17_25)))
 (let ((?x31970 (* 2.0 ?x31069)))
 (let ((?x31066 (* l_0_17_24 l_0_17_24)))
 (let ((?x31968 (* 2.0 ?x31066)))
 (let ((?x31063 (* l_0_17_23 l_0_17_23)))
 (let ((?x31966 (* 2.0 ?x31063)))
 (let ((?x31060 (* l_0_17_22 l_0_17_22)))
 (let ((?x20764 (* 2.0 ?x31060)))
 (let ((?x30950 (* 8.0 l_0_17_21)))
 (let ((?x30951 (* ?x30950 l_0_17_24)))
 (let ((?x30947 (* 8.0 l_0_17_20)))
 (let ((?x30948 (* ?x30947 l_0_17_23)))
 (let ((?x30944 (* 8.0 l_0_17_19)))
 (let ((?x30945 (* ?x30944 l_0_17_22)))
 (let ((?x31972 (- (+ (+ (+ (+ (+ (+ ?x30945 ?x30948) ?x30951) ?x20764) ?x31966) ?x31968) ?x31970) ?x30960)))
 (let ((?x31978 (- (- (- (- ?x31972 ?x30963) ?x30966) (* (* 2.0 l_0_17_37) l_0_17_37)) (* (* 2.0 l_0_17_38) l_0_17_38))))
 (let ((?x31982 (- (- ?x31978 (* (* 2.0 l_0_17_39) l_0_17_39)) (* (* 2.0 l_0_17_40) l_0_17_40))))
 (let ((?x31988 (- (- ?x31982 (* (* 2.0 l_0_17_49) l_0_17_52)) (* (* 2.0 l_0_17_50) l_0_17_53))))
 (= (- ?x31988 (* (* 2.0 l_0_17_51) l_0_17_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x31083 (* 4.0 l_0_17_40)))
 (let ((?x31865 (* ?x31083 l_0_17_44)))
 (let ((?x31080 (* 4.0 l_0_17_39)))
 (let ((?x31863 (* ?x31080 l_0_17_43)))
 (let ((?x31077 (* 4.0 l_0_17_38)))
 (let ((?x31861 (* ?x31077 l_0_17_42)))
 (let ((?x31074 (* 4.0 l_0_17_37)))
 (let ((?x31859 (* ?x31074 l_0_17_41)))
 (let ((?x30965 (* 8.0 l_0_17_36)))
 (let ((?x31035 (* ?x30965 l_0_17_43)))
 (let ((?x30914 (* 4.0 l_0_17_36)))
 (let ((?x31488 (* ?x30914 l_0_17_39)))
 (let ((?x30962 (* 8.0 l_0_17_35)))
 (let ((?x31033 (* ?x30962 l_0_17_42)))
 (let ((?x30911 (* 4.0 l_0_17_35)))
 (let ((?x31485 (* ?x30911 l_0_17_38)))
 (let ((?x30959 (* 8.0 l_0_17_34)))
 (let ((?x31031 (* ?x30959 l_0_17_41)))
 (let ((?x30908 (* 4.0 l_0_17_34)))
 (let ((?x31482 (* ?x30908 l_0_17_37)))
 (let ((?x31851 (* (* 4.0 l_0_17_25) l_0_17_29)))
 (let ((?x31848 (* (* 4.0 l_0_17_24) l_0_17_28)))
 (let ((?x31845 (* (* 4.0 l_0_17_23) l_0_17_27)))
 (let ((?x31842 (* (* 4.0 l_0_17_22) l_0_17_26)))
 (let ((?x30950 (* 8.0 l_0_17_21)))
 (let ((?x31023 (* ?x30950 l_0_17_28)))
 (let ((?x31476 (* 4.0 l_0_17_21)))
 (let ((?x31477 (* ?x31476 l_0_17_24)))
 (let ((?x30947 (* 8.0 l_0_17_20)))
 (let ((?x31021 (* ?x30947 l_0_17_27)))
 (let ((?x31472 (* 4.0 l_0_17_20)))
 (let ((?x31473 (* ?x31472 l_0_17_23)))
 (let ((?x30944 (* 8.0 l_0_17_19)))
 (let ((?x31019 (* ?x30944 l_0_17_26)))
 (let ((?x32025 (- (+ (- (+ (* (* (- 4.0) l_0_17_19) l_0_17_22) ?x31019) ?x31473) ?x31021) ?x31477)))
 (let ((?x32032 (- (+ (+ (+ (+ (+ (+ ?x32025 ?x31023) ?x31842) ?x31845) ?x31848) ?x31851) ?x31482) ?x31031)))
 (let ((?x32039 (- (- (- (- (+ (- (+ ?x32032 ?x31485) ?x31033) ?x31488) ?x31035) ?x31859) ?x31861) ?x31863)))
 (let ((?x32044 (- (- (- ?x32039 ?x31865) (* (* 2.0 l_0_17_49) l_0_17_56)) (* (* 2.0 l_0_17_50) l_0_17_57))))
 (= (- ?x32044 (* (* 2.0 l_0_17_51) l_0_17_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25493 (* l_0_17_40 l_0_17_40)))
 (let ((?x20771 (* 2.0 ?x25493)))
 (let ((?x31151 (* (* 8.0 l_0_17_40) l_0_17_44)))
 (let ((?x25491 (* l_0_17_39 l_0_17_39)))
 (let ((?x9393 (* 2.0 ?x25491)))
 (let ((?x31148 (* (* 8.0 l_0_17_39) l_0_17_43)))
 (let ((?x13394 (* l_0_17_38 l_0_17_38)))
 (let ((?x32001 (* 2.0 ?x13394)))
 (let ((?x31145 (* (* 8.0 l_0_17_38) l_0_17_42)))
 (let ((?x7537 (* l_0_17_37 l_0_17_37)))
 (let ((?x26640 (* 2.0 ?x7537)))
 (let ((?x31142 (* (* 8.0 l_0_17_37) l_0_17_41)))
 (let ((?x31135 (* (* 8.0 l_0_17_25) l_0_17_29)))
 (let ((?x31132 (* (* 8.0 l_0_17_24) l_0_17_28)))
 (let ((?x31129 (* (* 8.0 l_0_17_23) l_0_17_27)))
 (let ((?x31126 (* (* 8.0 l_0_17_22) l_0_17_26)))
 (let ((?x32051 (- (+ (- ?x31126 (* (* 2.0 l_0_17_22) l_0_17_22)) ?x31129) (* (* 2.0 l_0_17_23) l_0_17_23))))
 (let ((?x32057 (- (+ (- (+ ?x32051 ?x31132) (* (* 2.0 l_0_17_24) l_0_17_24)) ?x31135) (* (* 2.0 l_0_17_25) l_0_17_25))))
 (let ((?x32064 (- (+ (- (+ (- (+ (- ?x32057 ?x31142) ?x26640) ?x31145) ?x32001) ?x31148) ?x9393) ?x31151)))
 (let ((?x32071 (- (- (+ ?x32064 ?x20771) (* (* 2.0 l_0_17_52) l_0_17_56)) (* (* 2.0 l_0_17_53) l_0_17_57))))
 (let ((?x32077 (- (- ?x32071 (* (* 2.0 l_0_17_54) l_0_17_58)) (* (* 2.0 l_0_17_55) l_0_17_59))))
 (= ?x32077 0.0)))))))))))))))))))))))
(assert
 (let ((?x32095 (* l_0_17_55 l_0_17_55)))
 (let ((?x32093 (* l_0_17_54 l_0_17_54)))
 (let ((?x32091 (* l_0_17_53 l_0_17_53)))
 (let ((?x32089 (* l_0_17_52 l_0_17_52)))
 (let ((?x31083 (* 4.0 l_0_17_40)))
 (let ((?x31084 (* ?x31083 l_0_17_40)))
 (let ((?x31080 (* 4.0 l_0_17_39)))
 (let ((?x31081 (* ?x31080 l_0_17_39)))
 (let ((?x31077 (* 4.0 l_0_17_38)))
 (let ((?x31078 (* ?x31077 l_0_17_38)))
 (let ((?x31074 (* 4.0 l_0_17_37)))
 (let ((?x31075 (* ?x31074 l_0_17_37)))
 (let ((?x31069 (* l_0_17_25 l_0_17_25)))
 (let ((?x31070 (* 4.0 ?x31069)))
 (let ((?x31066 (* l_0_17_24 l_0_17_24)))
 (let ((?x31067 (* 4.0 ?x31066)))
 (let ((?x31063 (* l_0_17_23 l_0_17_23)))
 (let ((?x31064 (* 4.0 ?x31063)))
 (let ((?x31060 (* l_0_17_22 l_0_17_22)))
 (let ((?x31061 (* 4.0 ?x31060)))
 (let ((?x32088 (- (- (- (- (+ (+ (+ ?x31061 ?x31064) ?x31067) ?x31070) ?x31075) ?x31078) ?x31081) ?x31084)))
 (= (- (- (- (- ?x32088 ?x32089) ?x32091) ?x32093) ?x32095) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_17_1 0.0))
(assert
 (>= l_0_17_3 0.0))
(assert
 (>= l_0_17_6 0.0))
(assert
 (>= l_0_17_10 0.0))
(assert
 (>= l_0_17_15 0.0))
(assert
 (>= l_0_17_16 0.0))
(assert
 (>= l_0_17_18 0.0))
(assert
 (>= l_0_17_21 0.0))
(assert
 (>= l_0_17_25 0.0))
(assert
 (>= l_0_17_30 0.0))
(assert
 (>= l_0_17_31 0.0))
(assert
 (>= l_0_17_33 0.0))
(assert
 (>= l_0_17_36 0.0))
(assert
 (>= l_0_17_40 0.0))
(assert
 (>= l_0_17_45 0.0))
(assert
 (>= l_0_17_46 0.0))
(assert
 (>= l_0_17_48 0.0))
(assert
 (>= l_0_17_51 0.0))
(assert
 (>= l_0_17_55 0.0))
(assert
 (>= l_0_17_60 0.0))
(assert
 (>= l_0_17_61 0.0))
(assert
 (>= l_0_17_63 0.0))
(assert
 (>= l_0_17_66 0.0))
(assert
 (>= l_0_17_70 0.0))
(assert
 (>= l_0_17_75 0.0))
(assert
 (>= l_0_17_76 0.0))
(assert
 (>= l_0_17_78 0.0))
(assert
 (>= l_0_17_81 0.0))
(assert
 (>= l_0_17_85 0.0))
(assert
 (>= l_0_17_90 0.0))
(assert
 (let ((?x32135 (* 4.0 l_0_18_31)))
 (let ((?x32136 (* ?x32135 l_0_18_31)))
 (let ((?x32132 (* l_0_18_16 l_0_18_16)))
 (let ((?x32133 (* 4.0 ?x32132)))
 (let ((?x32134 (+ (- (* (* 2.0 l_0_18_1) l_0_18_2) (* l_0_18_1 l_0_18_1)) ?x32133)))
 (let ((?x32143 (- (- (- ?x32134 ?x32136) (* (* 2.0 l_0_18_61) l_0_18_62)) (* (* 2.0 l_0_18_76) l_0_18_77))))
 (= (+ (- ?x32143 (* (* 2.0 l_0_18_91) l_0_18_92)) 4.0) 0.0))))))))
(assert
 (let ((?x32174 (* l_0_18_46 l_0_18_46)))
 (let ((?x32135 (* 4.0 l_0_18_31)))
 (let ((?x32136 (* ?x32135 l_0_18_31)))
 (let ((?x32132 (* l_0_18_16 l_0_18_16)))
 (let ((?x32133 (* 4.0 ?x32132)))
 (let ((?x32177 (- (- (- (+ (* (* 2.0 l_0_18_1) l_0_18_7) ?x32133) ?x32136) ?x32174) (* (* 2.0 l_0_18_61) l_0_18_67))))
 (let ((?x32181 (- (- ?x32177 (* (* 2.0 l_0_18_76) l_0_18_82)) (* (* 2.0 l_0_18_91) l_0_18_97))))
 (= (+ ?x32181 4.0) 0.0)))))))))
(assert
 (let ((?x32155 (* l_0_18_31 l_0_18_31)))
 (let ((?x32202 (* 2.0 ?x32155)))
 (let ((?x32195 (+ (- (* (* 2.0 _a_0_) _a_1_) (* 2.0 _a_1_)) (* (* 2.0 l_0_18_1) l_0_18_11))))
 (let ((?x32201 (- (- ?x32195 (* (* 2.0 l_0_18_101) l_0_18_91)) (* (* 2.0 l_0_18_16) l_0_18_16))))
 (let ((?x32207 (- (- (+ ?x32201 ?x32202) (* (* 2.0 l_0_18_61) l_0_18_71)) (* (* 2.0 l_0_18_76) l_0_18_86))))
 (= (- ?x32207 4.0) 0.0)))))))
(assert
 (let ((?x32271 (* l_0_18_96 l_0_18_96)))
 (let ((?x32269 (* l_0_18_95 l_0_18_95)))
 (let ((?x32267 (* l_0_18_94 l_0_18_94)))
 (let ((?x32265 (* l_0_18_81 l_0_18_81)))
 (let ((?x32263 (* l_0_18_80 l_0_18_80)))
 (let ((?x32261 (* l_0_18_79 l_0_18_79)))
 (let ((?x32259 (* l_0_18_66 l_0_18_66)))
 (let ((?x32257 (* l_0_18_65 l_0_18_65)))
 (let ((?x32255 (* l_0_18_64 l_0_18_64)))
 (let ((?x32155 (* l_0_18_31 l_0_18_31)))
 (let ((?x32135 (* 4.0 l_0_18_31)))
 (let ((?x32243 (* ?x32135 l_0_18_34)))
 (let ((?x32244 (- (- (* (* 4.0 l_0_18_16) l_0_18_19) (* l_0_18_16 l_0_18_16)) ?x32243)))
 (let ((?x32251 (+ (+ (+ ?x32244 ?x32155) (* 1.0 (* l_0_18_4 l_0_18_4))) (* 1.0 (* l_0_18_5 l_0_18_5)))))
 (let ((?x32260 (- (- (- (+ ?x32251 (* 1.0 (* l_0_18_6 l_0_18_6))) ?x32255) ?x32257) ?x32259)))
 (let ((?x32273 (- (- (- (- (- (- (- ?x32260 ?x32261) ?x32263) ?x32265) ?x32267) ?x32269) ?x32271) 1.0)))
 (= ?x32273 0.0))))))))))))))))))
(assert
 (let ((?x32311 (* l_0_18_91 l_0_18_91)))
 (let ((?x32309 (* l_0_18_76 l_0_18_76)))
 (let ((?x32307 (* l_0_18_61 l_0_18_61)))
 (let ((?x32306 (+ (+ (* (- 2.0) _a_0_) (* _a_0_ _a_0_)) (* 1.0 (* l_0_18_1 l_0_18_1)))))
 (= (- (- (- ?x32306 ?x32307) ?x32309) ?x32311) 0.0))))))
(assert
 (let ((?x32368 (* l_0_18_90 l_0_18_90)))
 (let ((?x32366 (* l_0_18_89 l_0_18_89)))
 (let ((?x32364 (* l_0_18_88 l_0_18_88)))
 (let ((?x32362 (* l_0_18_87 l_0_18_87)))
 (let ((?x32360 (* l_0_18_86 l_0_18_86)))
 (let ((?x32358 (* l_0_18_75 l_0_18_75)))
 (let ((?x32356 (* l_0_18_74 l_0_18_74)))
 (let ((?x32354 (* l_0_18_73 l_0_18_73)))
 (let ((?x32352 (* l_0_18_72 l_0_18_72)))
 (let ((?x32350 (* l_0_18_71 l_0_18_71)))
 (let ((?x32155 (* l_0_18_31 l_0_18_31)))
 (let ((?x32135 (* 4.0 l_0_18_31)))
 (let ((?x32347 (* ?x32135 l_0_18_41)))
 (let ((?x32132 (* l_0_18_16 l_0_18_16)))
 (let ((?x9752 (* 4.0 l_0_18_16)))
 (let ((?x32344 (* ?x9752 l_0_18_26)))
 (let ((?x32327 (* l_0_18_105 l_0_18_105)))
 (let ((?x32325 (* l_0_18_104 l_0_18_104)))
 (let ((?x32323 (* l_0_18_103 l_0_18_103)))
 (let ((?x32321 (* l_0_18_102 l_0_18_102)))
 (let ((?x32324 (- (- (- (* _a_1_ _a_1_) (* l_0_18_101 l_0_18_101)) ?x32321) ?x32323)))
 (let ((?x32334 (+ (+ (- (- ?x32324 ?x32325) ?x32327) (* 1.0 (* l_0_18_11 l_0_18_11))) (* 1.0 (* l_0_18_12 l_0_18_12)))))
 (let ((?x32340 (+ (+ ?x32334 (* 1.0 (* l_0_18_13 l_0_18_13))) (* 1.0 (* l_0_18_14 l_0_18_14)))))
 (let ((?x32348 (+ (+ (- (+ ?x32340 (* 1.0 (* l_0_18_15 l_0_18_15))) ?x32344) ?x32132) ?x32347)))
 (let ((?x32361 (- (- (- (- (- (- (- ?x32348 ?x32155) ?x32350) ?x32352) ?x32354) ?x32356) ?x32358) ?x32360)))
 (= (- (- (- (- ?x32361 ?x32362) ?x32364) ?x32366) ?x32368) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x32132 (* l_0_18_16 l_0_18_16)))
 (let ((?x32224 (* 2.0 ?x32132)))
 (let ((?x32406 (- (+ (* (* 2.0 l_0_18_1) l_0_18_4) ?x32224) (* (* 2.0 l_0_18_31) l_0_18_31))))
 (let ((?x32410 (- (- ?x32406 (* (* 2.0 l_0_18_61) l_0_18_64)) (* (* 2.0 l_0_18_76) l_0_18_79))))
 (= (+ (- ?x32410 (* (* 2.0 l_0_18_91) l_0_18_94)) 2.0) 0.0))))))
(assert
 (let ((?x32452 (* l_0_18_93 l_0_18_93)))
 (let ((?x32450 (* l_0_18_92 l_0_18_92)))
 (let ((?x32448 (* l_0_18_78 l_0_18_78)))
 (let ((?x32446 (* l_0_18_77 l_0_18_77)))
 (let ((?x32444 (* l_0_18_63 l_0_18_63)))
 (let ((?x32442 (* l_0_18_62 l_0_18_62)))
 (let ((?x32439 (* 8.0 l_0_18_31)))
 (let ((?x32440 (* ?x32439 l_0_18_32)))
 (let ((?x32430 (* 8.0 l_0_18_16)))
 (let ((?x32431 (* ?x32430 l_0_18_17)))
 (let ((?x32435 (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_2) ?x32431) (* 1.0 (* l_0_18_2 l_0_18_2)))))
 (let ((?x32445 (- (- (- (+ ?x32435 (* 1.0 (* l_0_18_3 l_0_18_3))) ?x32440) ?x32442) ?x32444)))
 (= (- (- (- (- ?x32445 ?x32446) ?x32448) ?x32450) ?x32452) 0.0))))))))))))))
(assert
 (let ((?x32439 (* 8.0 l_0_18_31)))
 (let ((?x32482 (* ?x32439 l_0_18_34)))
 (let ((?x32135 (* 4.0 l_0_18_31)))
 (let ((?x32480 (* ?x32135 l_0_18_32)))
 (let ((?x32477 (* 2.0 l_0_18_3)))
 (let ((?x32478 (* ?x32477 l_0_18_5)))
 (let ((?x32474 (* 2.0 l_0_18_2)))
 (let ((?x32475 (* ?x32474 l_0_18_4)))
 (let ((?x32430 (* 8.0 l_0_18_16)))
 (let ((?x32472 (* ?x32430 l_0_18_19)))
 (let ((?x9752 (* 4.0 l_0_18_16)))
 (let ((?x32470 (* ?x9752 l_0_18_17)))
 (let ((?x32479 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_4) ?x32470) ?x32472) ?x32475) ?x32478)))
 (let ((?x32489 (- (- (- (- ?x32479 ?x32480) ?x32482) (* (* 2.0 l_0_18_62) l_0_18_64)) (* (* 2.0 l_0_18_63) l_0_18_65))))
 (let ((?x32495 (- (- ?x32489 (* (* 2.0 l_0_18_77) l_0_18_79)) (* (* 2.0 l_0_18_78) l_0_18_80))))
 (let ((?x32501 (- (- ?x32495 (* (* 2.0 l_0_18_92) l_0_18_94)) (* (* 2.0 l_0_18_93) l_0_18_95))))
 (= ?x32501 0.0))))))))))))))))))
(assert
 (let ((?x32439 (* 8.0 l_0_18_31)))
 (let ((?x32540 (* ?x32439 l_0_18_37)))
 (let ((?x32440 (* ?x32439 l_0_18_32)))
 (let ((?x32477 (* 2.0 l_0_18_3)))
 (let ((?x32537 (* ?x32477 l_0_18_8)))
 (let ((?x32474 (* 2.0 l_0_18_2)))
 (let ((?x32535 (* ?x32474 l_0_18_7)))
 (let ((?x32430 (* 8.0 l_0_18_16)))
 (let ((?x32533 (* ?x32430 l_0_18_22)))
 (let ((?x32534 (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_7) (* ?x32430 l_0_18_17)) ?x32533)))
 (let ((?x32544 (- (- (- (+ (+ ?x32534 ?x32535) ?x32537) ?x32440) ?x32540) (* (* 2.0 l_0_18_46) l_0_18_47))))
 (let ((?x32548 (- (- ?x32544 (* (* 2.0 l_0_18_62) l_0_18_67)) (* (* 2.0 l_0_18_63) l_0_18_68))))
 (let ((?x32552 (- (- ?x32548 (* (* 2.0 l_0_18_77) l_0_18_82)) (* (* 2.0 l_0_18_78) l_0_18_83))))
 (let ((?x32556 (- (- ?x32552 (* (* 2.0 l_0_18_92) l_0_18_97)) (* (* 2.0 l_0_18_93) l_0_18_98))))
 (= ?x32556 0.0))))))))))))))))
(assert
 (let ((?x32439 (* 8.0 l_0_18_31)))
 (let ((?x9872 (* ?x32439 l_0_18_41)))
 (let ((?x32135 (* 4.0 l_0_18_31)))
 (let ((?x32480 (* ?x32135 l_0_18_32)))
 (let ((?x32430 (* 8.0 l_0_18_16)))
 (let ((?x27070 (* ?x32430 l_0_18_26)))
 (let ((?x9752 (* 4.0 l_0_18_16)))
 (let ((?x32470 (* ?x9752 l_0_18_17)))
 (let ((?x10243 (* 2.0 l_0_18_12)))
 (let ((?x27071 (* ?x10243 l_0_18_3)))
 (let ((?x15960 (- (* (* (- 2.0) l_0_18_1) l_0_18_11) (* (* 2.0 l_0_18_101) l_0_18_92))))
 (let ((?x27068 (+ (- ?x15960 (* (* 2.0 l_0_18_102) l_0_18_93)) (* (* 2.0 l_0_18_11) l_0_18_2))))
 (let ((?x32569 (- (- (+ (+ (- (+ ?x27068 ?x27071) ?x32470) ?x27070) ?x32480) ?x9872) (* (* 2.0 l_0_18_62) l_0_18_71))))
 (let ((?x32573 (- (- ?x32569 (* (* 2.0 l_0_18_63) l_0_18_72)) (* (* 2.0 l_0_18_77) l_0_18_86))))
 (= (- ?x32573 (* (* 2.0 l_0_18_78) l_0_18_87)) 0.0))))))))))))))))
(assert
 (let ((?x32606 (* 4.0 l_0_18_33)))
 (let ((?x32607 (* ?x32606 l_0_18_33)))
 (let ((?x32603 (* 4.0 l_0_18_32)))
 (let ((?x32604 (* ?x32603 l_0_18_32)))
 (let ((?x32436 (* l_0_18_3 l_0_18_3)))
 (let ((?x32433 (* l_0_18_2 l_0_18_2)))
 (let ((?x27129 (* l_0_18_18 l_0_18_18)))
 (let ((?x21354 (* 4.0 ?x27129)))
 (let ((?x27164 (* l_0_18_17 l_0_18_17)))
 (let ((?x21353 (* 4.0 ?x27164)))
 (= (- (- (- (- (+ ?x21353 ?x21354) ?x32433) ?x32436) ?x32604) ?x32607) 0.0))))))))))))
(assert
 (let ((?x32626 (* 8.0 l_0_18_33)))
 (let ((?x32627 (* ?x32626 l_0_18_35)))
 (let ((?x32620 (* 8.0 l_0_18_32)))
 (let ((?x32621 (* ?x32620 l_0_18_34)))
 (let ((?x32477 (* 2.0 l_0_18_3)))
 (let ((?x32478 (* ?x32477 l_0_18_5)))
 (let ((?x32474 (* 2.0 l_0_18_2)))
 (let ((?x32475 (* ?x32474 l_0_18_4)))
 (let ((?x27129 (* l_0_18_18 l_0_18_18)))
 (let ((?x32616 (* 2.0 ?x27129)))
 (let ((?x9396 (* 8.0 l_0_18_18)))
 (let ((?x27171 (* ?x9396 l_0_18_20)))
 (let ((?x27164 (* l_0_18_17 l_0_18_17)))
 (let ((?x10322 (* 2.0 ?x27164)))
 (let ((?x21371 (* 8.0 l_0_18_17)))
 (let ((?x21372 (* ?x21371 l_0_18_19)))
 (let ((?x32625 (- (- (- (- (+ (+ (+ ?x21372 ?x10322) ?x27171) ?x32616) ?x32475) ?x32478) ?x32621) (* (* 2.0 l_0_18_32) l_0_18_32))))
 (= (- (- ?x32625 ?x32627) (* (* 2.0 l_0_18_33) l_0_18_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x32670 (* l_0_18_48 l_0_18_48)))
 (let ((?x32668 (* l_0_18_47 l_0_18_47)))
 (let ((?x32606 (* 4.0 l_0_18_33)))
 (let ((?x32607 (* ?x32606 l_0_18_33)))
 (let ((?x32626 (* 8.0 l_0_18_33)))
 (let ((?x32665 (* ?x32626 l_0_18_38)))
 (let ((?x32603 (* 4.0 l_0_18_32)))
 (let ((?x32604 (* ?x32603 l_0_18_32)))
 (let ((?x32620 (* 8.0 l_0_18_32)))
 (let ((?x32662 (* ?x32620 l_0_18_37)))
 (let ((?x32477 (* 2.0 l_0_18_3)))
 (let ((?x32537 (* ?x32477 l_0_18_8)))
 (let ((?x32474 (* 2.0 l_0_18_2)))
 (let ((?x32535 (* ?x32474 l_0_18_7)))
 (let ((?x27129 (* l_0_18_18 l_0_18_18)))
 (let ((?x21354 (* 4.0 ?x27129)))
 (let ((?x9396 (* 8.0 l_0_18_18)))
 (let ((?x32657 (* ?x9396 l_0_18_23)))
 (let ((?x27164 (* l_0_18_17 l_0_18_17)))
 (let ((?x21353 (* 4.0 ?x27164)))
 (let ((?x21371 (* 8.0 l_0_18_17)))
 (let ((?x32655 (* ?x21371 l_0_18_22)))
 (let ((?x32664 (- (- (- (- (+ (+ (+ ?x32655 ?x21353) ?x32657) ?x21354) ?x32535) ?x32537) ?x32662) ?x32604)))
 (= (- (- (- (- ?x32664 ?x32665) ?x32607) ?x32668) ?x32670) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x10312 (* l_0_18_33 l_0_18_33)))
 (let ((?x27226 (* 2.0 ?x10312)))
 (let ((?x32626 (* 8.0 l_0_18_33)))
 (let ((?x32695 (* ?x32626 l_0_18_42)))
 (let ((?x21369 (* l_0_18_32 l_0_18_32)))
 (let ((?x16025 (* 2.0 ?x21369)))
 (let ((?x32620 (* 8.0 l_0_18_32)))
 (let ((?x32692 (* ?x32620 l_0_18_41)))
 (let ((?x9396 (* 8.0 l_0_18_18)))
 (let ((?x32687 (* ?x9396 l_0_18_27)))
 (let ((?x21371 (* 8.0 l_0_18_17)))
 (let ((?x32682 (* ?x21371 l_0_18_26)))
 (let ((?x10243 (* 2.0 l_0_18_12)))
 (let ((?x27071 (* ?x10243 l_0_18_3)))
 (let ((?x32686 (- (+ (- (* (* (- 2.0) l_0_18_11) l_0_18_2) ?x27071) ?x32682) (* (* 2.0 l_0_18_17) l_0_18_17))))
 (let ((?x32694 (+ (- (- (+ ?x32686 ?x32687) (* (* 2.0 l_0_18_18) l_0_18_18)) ?x32692) ?x16025)))
 (= (+ (- ?x32694 ?x32695) ?x27226) 0.0))))))))))))))))))
(assert
 (let ((?x32252 (* l_0_18_6 l_0_18_6)))
 (let ((?x32249 (* l_0_18_5 l_0_18_5)))
 (let ((?x32246 (* l_0_18_4 l_0_18_4)))
 (let ((?x32741 (* 4.0 l_0_18_36)))
 (let ((?x32742 (* ?x32741 l_0_18_36)))
 (let ((?x32738 (* 4.0 l_0_18_35)))
 (let ((?x32739 (* ?x32738 l_0_18_35)))
 (let ((?x32735 (* 4.0 l_0_18_34)))
 (let ((?x32736 (* ?x32735 l_0_18_34)))
 (let ((?x32606 (* 4.0 l_0_18_33)))
 (let ((?x32733 (* ?x32606 l_0_18_35)))
 (let ((?x32603 (* 4.0 l_0_18_32)))
 (let ((?x32731 (* ?x32603 l_0_18_34)))
 (let ((?x32404 (* 2.0 l_0_18_31)))
 (let ((?x32729 (* ?x32404 l_0_18_32)))
 (let ((?x32726 (* l_0_18_21 l_0_18_21)))
 (let ((?x32727 (* 4.0 ?x32726)))
 (let ((?x32723 (* l_0_18_20 l_0_18_20)))
 (let ((?x32724 (* 4.0 ?x32723)))
 (let ((?x32720 (* l_0_18_19 l_0_18_19)))
 (let ((?x32721 (* 4.0 ?x32720)))
 (let ((?x32717 (* 4.0 l_0_18_18)))
 (let ((?x32718 (* ?x32717 l_0_18_20)))
 (let ((?x32714 (* 4.0 l_0_18_17)))
 (let ((?x32715 (* ?x32714 l_0_18_19)))
 (let ((?x32725 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_16) l_0_18_17) ?x32715) ?x32718) ?x32721) ?x32724)))
 (let ((?x32743 (- (- (- (- (- (+ (+ ?x32725 ?x32727) ?x32729) ?x32731) ?x32733) ?x32736) ?x32739) ?x32742)))
 (= (- (- (- ?x32743 ?x32246) ?x32249) ?x32252) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x32810 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x32807 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x32798 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x32794 (* 8.0 l_0_18_36)))
 (let ((?x32795 (* ?x32794 l_0_18_39)))
 (let ((?x32791 (* 8.0 l_0_18_35)))
 (let ((?x32792 (* ?x32791 l_0_18_38)))
 (let ((?x32788 (* 8.0 l_0_18_34)))
 (let ((?x32789 (* ?x32788 l_0_18_37)))
 (let ((?x32606 (* 4.0 l_0_18_33)))
 (let ((?x32786 (* ?x32606 l_0_18_38)))
 (let ((?x32626 (* 8.0 l_0_18_33)))
 (let ((?x32627 (* ?x32626 l_0_18_35)))
 (let ((?x32603 (* 4.0 l_0_18_32)))
 (let ((?x32783 (* ?x32603 l_0_18_37)))
 (let ((?x32620 (* 8.0 l_0_18_32)))
 (let ((?x32621 (* ?x32620 l_0_18_34)))
 (let ((?x32779 (* 8.0 l_0_18_21)))
 (let ((?x32780 (* ?x32779 l_0_18_24)))
 (let ((?x32776 (* 8.0 l_0_18_20)))
 (let ((?x32777 (* ?x32776 l_0_18_23)))
 (let ((?x32773 (* 8.0 l_0_18_19)))
 (let ((?x32774 (* ?x32773 l_0_18_22)))
 (let ((?x32717 (* 4.0 l_0_18_18)))
 (let ((?x32771 (* ?x32717 l_0_18_23)))
 (let ((?x9396 (* 8.0 l_0_18_18)))
 (let ((?x27171 (* ?x9396 l_0_18_20)))
 (let ((?x32714 (* 4.0 l_0_18_17)))
 (let ((?x32768 (* ?x32714 l_0_18_22)))
 (let ((?x21371 (* 8.0 l_0_18_17)))
 (let ((?x21372 (* ?x21371 l_0_18_19)))
 (let ((?x32782 (- (+ (+ (+ (+ (+ (+ ?x21372 ?x32768) ?x27171) ?x32771) ?x32774) ?x32777) ?x32780) ?x32621)))
 (let ((?x32799 (- (- (- (- (- (- (- ?x32782 ?x32783) ?x32627) ?x32786) ?x32789) ?x32792) ?x32795) ?x32798)))
 (let ((?x32805 (- (- ?x32799 (* (* 2.0 l_0_18_47) l_0_18_49)) (* (* 2.0 l_0_18_48) l_0_18_50))))
 (= (- (- ?x32805 ?x32807) ?x32810) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32794 (* 8.0 l_0_18_36)))
 (let ((?x32884 (* ?x32794 l_0_18_43)))
 (let ((?x32791 (* 8.0 l_0_18_35)))
 (let ((?x32882 (* ?x32791 l_0_18_42)))
 (let ((?x32788 (* 8.0 l_0_18_34)))
 (let ((?x32880 (* ?x32788 l_0_18_41)))
 (let ((?x32606 (* 4.0 l_0_18_33)))
 (let ((?x32878 (* ?x32606 l_0_18_42)))
 (let ((?x32733 (* ?x32606 l_0_18_35)))
 (let ((?x32603 (* 4.0 l_0_18_32)))
 (let ((?x32875 (* ?x32603 l_0_18_41)))
 (let ((?x32731 (* ?x32603 l_0_18_34)))
 (let ((?x32779 (* 8.0 l_0_18_21)))
 (let ((?x32872 (* ?x32779 l_0_18_28)))
 (let ((?x32776 (* 8.0 l_0_18_20)))
 (let ((?x32870 (* ?x32776 l_0_18_27)))
 (let ((?x32773 (* 8.0 l_0_18_19)))
 (let ((?x32868 (* ?x32773 l_0_18_26)))
 (let ((?x32717 (* 4.0 l_0_18_18)))
 (let ((?x32866 (* ?x32717 l_0_18_27)))
 (let ((?x32718 (* ?x32717 l_0_18_20)))
 (let ((?x32714 (* 4.0 l_0_18_17)))
 (let ((?x32863 (* ?x32714 l_0_18_26)))
 (let ((?x32715 (* ?x32714 l_0_18_19)))
 (let ((?x32859 (* 2.0 l_0_18_13)))
 (let ((?x32860 (* ?x32859 l_0_18_6)))
 (let ((?x10243 (* 2.0 l_0_18_12)))
 (let ((?x32857 (* ?x10243 l_0_18_5)))
 (let ((?x32864 (+ (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_4) ?x32857) ?x32860) ?x32715) ?x32863)))
 (let ((?x32876 (- (+ (+ (+ (+ (+ (- ?x32864 ?x32718) ?x32866) ?x32868) ?x32870) ?x32872) ?x32731) ?x32875)))
 (= (- (- (- (- (+ ?x32876 ?x32733) ?x32878) ?x32880) ?x32882) ?x32884) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x32949 (* l_0_18_9 l_0_18_9)))
 (let ((?x32947 (* l_0_18_8 l_0_18_8)))
 (let ((?x32945 (* l_0_18_7 l_0_18_7)))
 (let ((?x32938 (* 4.0 l_0_18_40)))
 (let ((?x32939 (* ?x32938 l_0_18_40)))
 (let ((?x32935 (* 4.0 l_0_18_39)))
 (let ((?x32936 (* ?x32935 l_0_18_39)))
 (let ((?x32932 (* 4.0 l_0_18_38)))
 (let ((?x32933 (* ?x32932 l_0_18_38)))
 (let ((?x32929 (* 4.0 l_0_18_37)))
 (let ((?x32930 (* ?x32929 l_0_18_37)))
 (let ((?x32626 (* 8.0 l_0_18_33)))
 (let ((?x32665 (* ?x32626 l_0_18_38)))
 (let ((?x32620 (* 8.0 l_0_18_32)))
 (let ((?x32662 (* ?x32620 l_0_18_37)))
 (let ((?x32924 (* l_0_18_25 l_0_18_25)))
 (let ((?x32925 (* 4.0 ?x32924)))
 (let ((?x32921 (* l_0_18_24 l_0_18_24)))
 (let ((?x32922 (* 4.0 ?x32921)))
 (let ((?x32918 (* l_0_18_23 l_0_18_23)))
 (let ((?x32919 (* 4.0 ?x32918)))
 (let ((?x32915 (* l_0_18_22 l_0_18_22)))
 (let ((?x32916 (* 4.0 ?x32915)))
 (let ((?x9396 (* 8.0 l_0_18_18)))
 (let ((?x32657 (* ?x9396 l_0_18_23)))
 (let ((?x21371 (* 8.0 l_0_18_17)))
 (let ((?x32655 (* ?x21371 l_0_18_22)))
 (let ((?x32923 (+ (+ (+ (+ (+ (* (- l_0_18_10) l_0_18_10) ?x32655) ?x32657) ?x32916) ?x32919) ?x32922)))
 (let ((?x32940 (- (- (- (- (- (- (+ ?x32923 ?x32925) ?x32662) ?x32665) ?x32930) ?x32933) ?x32936) ?x32939)))
 (let ((?x32944 (- (- ?x32940 (* (* 2.0 l_0_18_47) l_0_18_52)) (* (* 2.0 l_0_18_48) l_0_18_53))))
 (= (- (- (- ?x32944 ?x32945) ?x32947) ?x32949) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x33004 (* (* 8.0 l_0_18_40) l_0_18_44)))
 (let ((?x33001 (* (* 8.0 l_0_18_39) l_0_18_43)))
 (let ((?x32998 (* (* 8.0 l_0_18_38) l_0_18_42)))
 (let ((?x32995 (* (* 8.0 l_0_18_37) l_0_18_41)))
 (let ((?x32626 (* 8.0 l_0_18_33)))
 (let ((?x32695 (* ?x32626 l_0_18_42)))
 (let ((?x32606 (* 4.0 l_0_18_33)))
 (let ((?x32786 (* ?x32606 l_0_18_38)))
 (let ((?x32620 (* 8.0 l_0_18_32)))
 (let ((?x32692 (* ?x32620 l_0_18_41)))
 (let ((?x32603 (* 4.0 l_0_18_32)))
 (let ((?x32783 (* ?x32603 l_0_18_37)))
 (let ((?x32988 (* (* 8.0 l_0_18_25) l_0_18_29)))
 (let ((?x32985 (* (* 8.0 l_0_18_24) l_0_18_28)))
 (let ((?x32982 (* (* 8.0 l_0_18_23) l_0_18_27)))
 (let ((?x32979 (* (* 8.0 l_0_18_22) l_0_18_26)))
 (let ((?x9396 (* 8.0 l_0_18_18)))
 (let ((?x32687 (* ?x9396 l_0_18_27)))
 (let ((?x32717 (* 4.0 l_0_18_18)))
 (let ((?x32771 (* ?x32717 l_0_18_23)))
 (let ((?x21371 (* 8.0 l_0_18_17)))
 (let ((?x32682 (* ?x21371 l_0_18_26)))
 (let ((?x32714 (* 4.0 l_0_18_17)))
 (let ((?x32768 (* ?x32714 l_0_18_22)))
 (let ((?x32859 (* 2.0 l_0_18_13)))
 (let ((?x32972 (* ?x32859 l_0_18_9)))
 (let ((?x10243 (* 2.0 l_0_18_12)))
 (let ((?x32970 (* ?x10243 l_0_18_8)))
 (let ((?x10234 (* 2.0 l_0_18_11)))
 (let ((?x32968 (* ?x10234 l_0_18_7)))
 (let ((?x32974 (- (- (- (- (* (* (- 2.0) l_0_18_10) l_0_18_14) ?x32968) ?x32970) ?x32972) ?x32768)))
 (let ((?x32989 (+ (+ (+ (+ (+ (- (+ ?x32974 ?x32682) ?x32771) ?x32687) ?x32979) ?x32982) ?x32985) ?x32988)))
 (let ((?x33002 (- (- (- (- (+ (- (+ ?x32989 ?x32783) ?x32692) ?x32786) ?x32695) ?x32995) ?x32998) ?x33001)))
 (let ((?x33009 (- (- (- ?x33002 ?x33004) (* (* 2.0 l_0_18_47) l_0_18_56)) (* (* 2.0 l_0_18_48) l_0_18_57))))
 (= ?x33009 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33077 (* (* 4.0 l_0_18_45) l_0_18_45)))
 (let ((?x33074 (* (* 4.0 l_0_18_44) l_0_18_44)))
 (let ((?x33071 (* (* 4.0 l_0_18_43) l_0_18_43)))
 (let ((?x33068 (* (* 4.0 l_0_18_42) l_0_18_42)))
 (let ((?x33065 (* (* 4.0 l_0_18_41) l_0_18_41)))
 (let ((?x32606 (* 4.0 l_0_18_33)))
 (let ((?x32878 (* ?x32606 l_0_18_42)))
 (let ((?x32603 (* 4.0 l_0_18_32)))
 (let ((?x32875 (* ?x32603 l_0_18_41)))
 (let ((?x32404 (* 2.0 l_0_18_31)))
 (let ((?x32729 (* ?x32404 l_0_18_32)))
 (let ((?x33058 (* l_0_18_30 l_0_18_30)))
 (let ((?x33059 (* 4.0 ?x33058)))
 (let ((?x33055 (* l_0_18_29 l_0_18_29)))
 (let ((?x33056 (* 4.0 ?x33055)))
 (let ((?x33052 (* l_0_18_28 l_0_18_28)))
 (let ((?x33053 (* 4.0 ?x33052)))
 (let ((?x33049 (* l_0_18_27 l_0_18_27)))
 (let ((?x33050 (* 4.0 ?x33049)))
 (let ((?x33046 (* l_0_18_26 l_0_18_26)))
 (let ((?x33047 (* 4.0 ?x33046)))
 (let ((?x32717 (* 4.0 l_0_18_18)))
 (let ((?x32866 (* ?x32717 l_0_18_27)))
 (let ((?x32714 (* 4.0 l_0_18_17)))
 (let ((?x32863 (* ?x32714 l_0_18_26)))
 (let ((?x32341 (* l_0_18_15 l_0_18_15)))
 (let ((?x32338 (* l_0_18_14 l_0_18_14)))
 (let ((?x32335 (* l_0_18_13 l_0_18_13)))
 (let ((?x33039 (- (- (* (- l_0_18_11) l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x32335)))
 (let ((?x33044 (- (+ (- (- ?x33039 ?x32338) ?x32341) (* (* 2.0 l_0_18_16) l_0_18_17)) ?x32863)))
 (let ((?x33061 (- (+ (+ (+ (+ (+ (- ?x33044 ?x32866) ?x33047) ?x33050) ?x33053) ?x33056) ?x33059) ?x32729)))
 (let ((?x33078 (- (- (- (- (- (+ (+ ?x33061 ?x32875) ?x32878) ?x33065) ?x33068) ?x33071) ?x33074) ?x33077)))
 (= ?x33078 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32810 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x32807 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x32798 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x32135 (* 4.0 l_0_18_31)))
 (let ((?x33114 (* ?x32135 l_0_18_37)))
 (let ((?x32439 (* 8.0 l_0_18_31)))
 (let ((?x32482 (* ?x32439 l_0_18_34)))
 (let ((?x9752 (* 4.0 l_0_18_16)))
 (let ((?x33111 (* ?x9752 l_0_18_22)))
 (let ((?x32430 (* 8.0 l_0_18_16)))
 (let ((?x32472 (* ?x32430 l_0_18_19)))
 (let ((?x33118 (- (+ (- (- (+ ?x32472 ?x33111) ?x32482) ?x33114) ?x32798) (* (* 2.0 l_0_18_46) l_0_18_49))))
 (let ((?x33126 (- (- (+ (+ ?x33118 ?x32807) ?x32810) (* (* 2.0 l_0_18_64) l_0_18_67)) (* (* 2.0 l_0_18_65) l_0_18_68))))
 (let ((?x33132 (- (- ?x33126 (* (* 2.0 l_0_18_66) l_0_18_69)) (* (* 2.0 l_0_18_79) l_0_18_82))))
 (let ((?x33138 (- (- ?x33132 (* (* 2.0 l_0_18_80) l_0_18_83)) (* (* 2.0 l_0_18_81) l_0_18_84))))
 (let ((?x33144 (- (- ?x33138 (* (* 2.0 l_0_18_94) l_0_18_97)) (* (* 2.0 l_0_18_95) l_0_18_98))))
 (= (- ?x33144 (* (* 2.0 l_0_18_96) l_0_18_99)) 0.0))))))))))))))))))
(assert
 (let ((?x32135 (* 4.0 l_0_18_31)))
 (let ((?x32347 (* ?x32135 l_0_18_41)))
 (let ((?x32243 (* ?x32135 l_0_18_34)))
 (let ((?x9752 (* 4.0 l_0_18_16)))
 (let ((?x32344 (* ?x9752 l_0_18_26)))
 (let ((?x32241 (* ?x9752 l_0_18_19)))
 (let ((?x32859 (* 2.0 l_0_18_13)))
 (let ((?x32860 (* ?x32859 l_0_18_6)))
 (let ((?x10243 (* 2.0 l_0_18_12)))
 (let ((?x32857 (* ?x10243 l_0_18_5)))
 (let ((?x33179 (- (* (* (- 2.0) l_0_18_101) l_0_18_94) (* (* 2.0 l_0_18_102) l_0_18_95))))
 (let ((?x33184 (+ (- ?x33179 (* (* 2.0 l_0_18_103) l_0_18_96)) (* (* 2.0 l_0_18_11) l_0_18_4))))
 (let ((?x33192 (- (- (+ (+ (- (+ (+ ?x33184 ?x32857) ?x32860) ?x32241) ?x32344) ?x32243) ?x32347) (* (* 2.0 l_0_18_64) l_0_18_71))))
 (let ((?x33196 (- (- ?x33192 (* (* 2.0 l_0_18_65) l_0_18_72)) (* (* 2.0 l_0_18_66) l_0_18_73))))
 (let ((?x33200 (- (- ?x33196 (* (* 2.0 l_0_18_79) l_0_18_86)) (* (* 2.0 l_0_18_80) l_0_18_87))))
 (= (- ?x33200 (* (* 2.0 l_0_18_81) l_0_18_88)) 0.0)))))))))))))))))
(assert
 (let ((?x33259 (* l_0_18_99 l_0_18_99)))
 (let ((?x33257 (* l_0_18_98 l_0_18_98)))
 (let ((?x33255 (* l_0_18_97 l_0_18_97)))
 (let ((?x33251 (* l_0_18_85 l_0_18_85)))
 (let ((?x33249 (* l_0_18_84 l_0_18_84)))
 (let ((?x33247 (* l_0_18_83 l_0_18_83)))
 (let ((?x33245 (* l_0_18_82 l_0_18_82)))
 (let ((?x33241 (* l_0_18_70 l_0_18_70)))
 (let ((?x33237 (* l_0_18_69 l_0_18_69)))
 (let ((?x33235 (* l_0_18_68 l_0_18_68)))
 (let ((?x33233 (* l_0_18_67 l_0_18_67)))
 (let ((?x32439 (* 8.0 l_0_18_31)))
 (let ((?x32540 (* ?x32439 l_0_18_37)))
 (let ((?x32430 (* 8.0 l_0_18_16)))
 (let ((?x32533 (* ?x32430 l_0_18_22)))
 (let ((?x33227 (* l_0_18_100 l_0_18_100)))
 (let ((?x33232 (- (- (+ (- (* 1.0 (* l_0_18_10 l_0_18_10)) ?x33227) ?x32533) ?x32540) (* (* 2.0 l_0_18_46) l_0_18_52))))
 (let ((?x33240 (+ (- (- (- ?x33232 ?x33233) ?x33235) ?x33237) (* 1.0 (* l_0_18_7 l_0_18_7)))))
 (let ((?x33248 (- (- (+ (- ?x33240 ?x33241) (* 1.0 (* l_0_18_8 l_0_18_8))) ?x33245) ?x33247)))
 (let ((?x33256 (- (+ (- (- ?x33248 ?x33249) ?x33251) (* 1.0 (* l_0_18_9 l_0_18_9))) ?x33255)))
 (= (- (- ?x33256 ?x33257) ?x33259) 0.0))))))))))))))))))))))
(assert
 (let ((?x32439 (* 8.0 l_0_18_31)))
 (let ((?x9872 (* ?x32439 l_0_18_41)))
 (let ((?x32135 (* 4.0 l_0_18_31)))
 (let ((?x33114 (* ?x32135 l_0_18_37)))
 (let ((?x32430 (* 8.0 l_0_18_16)))
 (let ((?x27070 (* ?x32430 l_0_18_26)))
 (let ((?x9752 (* 4.0 l_0_18_16)))
 (let ((?x33111 (* ?x9752 l_0_18_22)))
 (let ((?x32859 (* 2.0 l_0_18_13)))
 (let ((?x32972 (* ?x32859 l_0_18_9)))
 (let ((?x10243 (* 2.0 l_0_18_12)))
 (let ((?x32970 (* ?x10243 l_0_18_8)))
 (let ((?x10234 (* 2.0 l_0_18_11)))
 (let ((?x32968 (* ?x10234 l_0_18_7)))
 (let ((?x22139 (- (* (* 2.0 l_0_18_10) l_0_18_14) (* (* 2.0 l_0_18_100) l_0_18_104))))
 (let ((?x27913 (- (- ?x22139 (* (* 2.0 l_0_18_101) l_0_18_97)) (* (* 2.0 l_0_18_102) l_0_18_98))))
 (let ((?x33291 (+ (+ (+ (- ?x27913 (* (* 2.0 l_0_18_103) l_0_18_99)) ?x32968) ?x32970) ?x32972)))
 (let ((?x33297 (- (- (+ (+ (- ?x33291 ?x33111) ?x27070) ?x33114) ?x9872) (* (* 2.0 l_0_18_46) l_0_18_56))))
 (let ((?x33303 (- (- ?x33297 (* (* 2.0 l_0_18_67) l_0_18_71)) (* (* 2.0 l_0_18_68) l_0_18_72))))
 (let ((?x33309 (- (- ?x33303 (* (* 2.0 l_0_18_69) l_0_18_73)) (* (* 2.0 l_0_18_70) l_0_18_74))))
 (let ((?x33315 (- (- ?x33309 (* (* 2.0 l_0_18_82) l_0_18_86)) (* (* 2.0 l_0_18_83) l_0_18_87))))
 (let ((?x33321 (- (- ?x33315 (* (* 2.0 l_0_18_84) l_0_18_88)) (* (* 2.0 l_0_18_85) l_0_18_89))))
 (= ?x33321 0.0))))))))))))))))))))))))
(assert
 (let ((?x32404 (* 2.0 l_0_18_31)))
 (let ((?x33349 (* ?x32404 l_0_18_34)))
 (let ((?x32726 (* l_0_18_21 l_0_18_21)))
 (let ((?x33347 (* 2.0 ?x32726)))
 (let ((?x32723 (* l_0_18_20 l_0_18_20)))
 (let ((?x33345 (* 2.0 ?x32723)))
 (let ((?x32720 (* l_0_18_19 l_0_18_19)))
 (let ((?x33343 (* 2.0 ?x32720)))
 (let ((?x33350 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_16) l_0_18_19) ?x33343) ?x33345) ?x33347) ?x33349)))
 (let ((?x33356 (- (- ?x33350 (* (* 2.0 l_0_18_34) l_0_18_34)) (* (* 2.0 l_0_18_35) l_0_18_35))))
 (= (- ?x33356 (* (* 2.0 l_0_18_36) l_0_18_36)) 0.0))))))))))))
(assert
 (let ((?x33408 (* l_0_18_51 l_0_18_51)))
 (let ((?x33406 (* l_0_18_50 l_0_18_50)))
 (let ((?x33404 (* l_0_18_49 l_0_18_49)))
 (let ((?x32741 (* 4.0 l_0_18_36)))
 (let ((?x32742 (* ?x32741 l_0_18_36)))
 (let ((?x33401 (* ?x32741 l_0_18_39)))
 (let ((?x32738 (* 4.0 l_0_18_35)))
 (let ((?x32739 (* ?x32738 l_0_18_35)))
 (let ((?x33398 (* ?x32738 l_0_18_38)))
 (let ((?x32735 (* 4.0 l_0_18_34)))
 (let ((?x32736 (* ?x32735 l_0_18_34)))
 (let ((?x33395 (* ?x32735 l_0_18_37)))
 (let ((?x32404 (* 2.0 l_0_18_31)))
 (let ((?x33393 (* ?x32404 l_0_18_37)))
 (let ((?x32726 (* l_0_18_21 l_0_18_21)))
 (let ((?x32727 (* 4.0 ?x32726)))
 (let ((?x33389 (* 4.0 l_0_18_21)))
 (let ((?x33390 (* ?x33389 l_0_18_24)))
 (let ((?x32723 (* l_0_18_20 l_0_18_20)))
 (let ((?x32724 (* 4.0 ?x32723)))
 (let ((?x33385 (* 4.0 l_0_18_20)))
 (let ((?x33386 (* ?x33385 l_0_18_23)))
 (let ((?x32720 (* l_0_18_19 l_0_18_19)))
 (let ((?x32721 (* 4.0 ?x32720)))
 (let ((?x33383 (+ (* (* (- 2.0) l_0_18_16) l_0_18_22) (* (* 4.0 l_0_18_19) l_0_18_22))))
 (let ((?x33396 (- (+ (+ (+ (+ (+ (+ ?x33383 ?x32721) ?x33386) ?x32724) ?x33390) ?x32727) ?x33393) ?x33395)))
 (let ((?x33407 (- (- (- (- (- (- (- ?x33396 ?x32736) ?x33398) ?x32739) ?x33401) ?x32742) ?x33404) ?x33406)))
 (= (- ?x33407 ?x33408) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x27332 (* l_0_18_36 l_0_18_36)))
 (let ((?x22331 (* 2.0 ?x27332)))
 (let ((?x32741 (* 4.0 l_0_18_36)))
 (let ((?x33433 (* ?x32741 l_0_18_43)))
 (let ((?x16065 (* l_0_18_35 l_0_18_35)))
 (let ((?x33366 (* 2.0 ?x16065)))
 (let ((?x32738 (* 4.0 l_0_18_35)))
 (let ((?x33430 (* ?x32738 l_0_18_42)))
 (let ((?x27323 (* l_0_18_34 l_0_18_34)))
 (let ((?x16932 (* 2.0 ?x27323)))
 (let ((?x32735 (* 4.0 l_0_18_34)))
 (let ((?x28053 (* ?x32735 l_0_18_41)))
 (let ((?x32404 (* 2.0 l_0_18_31)))
 (let ((?x17003 (* ?x32404 l_0_18_41)))
 (let ((?x33389 (* 4.0 l_0_18_21)))
 (let ((?x28052 (* ?x33389 l_0_18_28)))
 (let ((?x33385 (* 4.0 l_0_18_20)))
 (let ((?x28035 (* ?x33385 l_0_18_27)))
 (let ((?x33381 (* 4.0 l_0_18_19)))
 (let ((?x21900 (* ?x33381 l_0_18_26)))
 (let ((?x28055 (- (+ (* (* (- 2.0) l_0_18_16) l_0_18_26) ?x21900) (* (* 2.0 l_0_18_19) l_0_18_19))))
 (let ((?x28033 (- (+ (- (+ ?x28055 ?x28035) (* (* 2.0 l_0_18_20) l_0_18_20)) ?x28052) (* (* 2.0 l_0_18_21) l_0_18_21))))
 (let ((?x33435 (+ (- (+ (- (+ (- (+ ?x28033 ?x17003) ?x28053) ?x16932) ?x33430) ?x33366) ?x33433) ?x22331)))
 (= ?x33435 0.0)))))))))))))))))))))))))
(assert
 (let ((?x10312 (* l_0_18_33 l_0_18_33)))
 (let ((?x21369 (* l_0_18_32 l_0_18_32)))
 (let ((?x33466 (+ (- (* (- l_0_18_17) l_0_18_17) (* l_0_18_18 l_0_18_18)) ?x21369)))
 (= (+ ?x33466 ?x10312) 0.0)))))
(assert
 (let ((?x32629 (* 2.0 l_0_18_33)))
 (let ((?x33482 (* ?x32629 l_0_18_35)))
 (let ((?x32623 (* 2.0 l_0_18_32)))
 (let ((?x33480 (* ?x32623 l_0_18_34)))
 (let ((?x32689 (* 2.0 l_0_18_18)))
 (let ((?x33478 (* ?x32689 l_0_18_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_17) l_0_18_19) ?x33478) ?x33480) ?x33482) 0.0))))))))
(assert
 (let ((?x32629 (* 2.0 l_0_18_33)))
 (let ((?x33494 (* ?x32629 l_0_18_38)))
 (let ((?x32623 (* 2.0 l_0_18_32)))
 (let ((?x33492 (* ?x32623 l_0_18_37)))
 (let ((?x32689 (* 2.0 l_0_18_18)))
 (let ((?x33490 (* ?x32689 l_0_18_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_17) l_0_18_22) ?x33490) ?x33492) ?x33494) 0.0))))))))
(assert
 (let ((?x32629 (* 2.0 l_0_18_33)))
 (let ((?x33512 (* ?x32629 l_0_18_42)))
 (let ((?x32623 (* 2.0 l_0_18_32)))
 (let ((?x33510 (* ?x32623 l_0_18_41)))
 (let ((?x32689 (* 2.0 l_0_18_18)))
 (let ((?x33508 (* ?x32689 l_0_18_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_17) l_0_18_26) ?x33508) ?x33510) ?x33512) 0.0))))))))
(assert
 (let ((?x27332 (* l_0_18_36 l_0_18_36)))
 (let ((?x16065 (* l_0_18_35 l_0_18_35)))
 (let ((?x27323 (* l_0_18_34 l_0_18_34)))
 (let ((?x32726 (* l_0_18_21 l_0_18_21)))
 (let ((?x33529 (- (- (* (- l_0_18_19) l_0_18_19) (* l_0_18_20 l_0_18_20)) ?x32726)))
 (= (+ (+ (+ ?x33529 ?x27323) ?x16065) ?x27332) 0.0)))))))
(assert
 (let ((?x33357 (* 2.0 l_0_18_36)))
 (let ((?x33553 (* ?x33357 l_0_18_39)))
 (let ((?x33354 (* 2.0 l_0_18_35)))
 (let ((?x33551 (* ?x33354 l_0_18_38)))
 (let ((?x33351 (* 2.0 l_0_18_34)))
 (let ((?x33549 (* ?x33351 l_0_18_37)))
 (let ((?x28028 (* 2.0 l_0_18_21)))
 (let ((?x33547 (* ?x28028 l_0_18_24)))
 (let ((?x22281 (* 2.0 l_0_18_20)))
 (let ((?x33545 (* ?x22281 l_0_18_23)))
 (let ((?x33552 (+ (+ (- (- (* (* (- 2.0) l_0_18_19) l_0_18_22) ?x33545) ?x33547) ?x33549) ?x33551)))
 (= (+ ?x33552 ?x33553) 0.0)))))))))))))
(assert
 (let ((?x33357 (* 2.0 l_0_18_36)))
 (let ((?x33562 (* ?x33357 l_0_18_43)))
 (let ((?x33354 (* 2.0 l_0_18_35)))
 (let ((?x2247 (* ?x33354 l_0_18_42)))
 (let ((?x33351 (* 2.0 l_0_18_34)))
 (let ((?x28137 (* ?x33351 l_0_18_41)))
 (let ((?x28028 (* 2.0 l_0_18_21)))
 (let ((?x28178 (* ?x28028 l_0_18_28)))
 (let ((?x22281 (* 2.0 l_0_18_20)))
 (let ((?x28176 (* ?x22281 l_0_18_27)))
 (let ((?x33561 (+ (+ (- (- (* (* (- 2.0) l_0_18_19) l_0_18_26) ?x28176) ?x28178) ?x28137) ?x2247)))
 (= (+ ?x33561 ?x33562) 0.0)))))))))))))
(assert
 (let ((?x10642 (* l_0_18_40 l_0_18_40)))
 (let ((?x21716 (* l_0_18_39 l_0_18_39)))
 (let ((?x27568 (* l_0_18_38 l_0_18_38)))
 (let ((?x16283 (* l_0_18_37 l_0_18_37)))
 (let ((?x32924 (* l_0_18_25 l_0_18_25)))
 (let ((?x32921 (* l_0_18_24 l_0_18_24)))
 (let ((?x33576 (- (- (* (- l_0_18_22) l_0_18_22) (* l_0_18_23 l_0_18_23)) ?x32921)))
 (= (+ (+ (+ (+ (- ?x33576 ?x32924) ?x16283) ?x27568) ?x21716) ?x10642) 0.0)))))))))
(assert
 (let ((?x33608 (* 2.0 l_0_18_40)))
 (let ((?x33609 (* ?x33608 l_0_18_44)))
 (let ((?x33605 (* 2.0 l_0_18_39)))
 (let ((?x33606 (* ?x33605 l_0_18_43)))
 (let ((?x33602 (* 2.0 l_0_18_38)))
 (let ((?x33603 (* ?x33602 l_0_18_42)))
 (let ((?x33599 (* 2.0 l_0_18_37)))
 (let ((?x33600 (* ?x33599 l_0_18_41)))
 (let ((?x33596 (* 2.0 l_0_18_25)))
 (let ((?x33597 (* ?x33596 l_0_18_29)))
 (let ((?x33593 (* 2.0 l_0_18_24)))
 (let ((?x33594 (* ?x33593 l_0_18_28)))
 (let ((?x28211 (* 2.0 l_0_18_23)))
 (let ((?x33591 (* ?x28211 l_0_18_27)))
 (let ((?x33601 (+ (- (- (- (* (* (- 2.0) l_0_18_22) l_0_18_26) ?x33591) ?x33594) ?x33597) ?x33600)))
 (= (+ (+ (+ ?x33601 ?x33603) ?x33606) ?x33609) 0.0)))))))))))))))))
(assert
 (let ((?x33100 (* l_0_18_45 l_0_18_45)))
 (let ((?x33095 (* l_0_18_44 l_0_18_44)))
 (let ((?x27788 (* l_0_18_43 l_0_18_43)))
 (let ((?x21951 (* l_0_18_42 l_0_18_42)))
 (let ((?x10909 (* l_0_18_41 l_0_18_41)))
 (let ((?x27332 (* l_0_18_36 l_0_18_36)))
 (let ((?x16065 (* l_0_18_35 l_0_18_35)))
 (let ((?x27323 (* l_0_18_34 l_0_18_34)))
 (let ((?x33058 (* l_0_18_30 l_0_18_30)))
 (let ((?x33055 (* l_0_18_29 l_0_18_29)))
 (let ((?x33052 (* l_0_18_28 l_0_18_28)))
 (let ((?x33049 (* l_0_18_27 l_0_18_27)))
 (let ((?x33046 (* l_0_18_26 l_0_18_26)))
 (let ((?x32726 (* l_0_18_21 l_0_18_21)))
 (let ((?x28259 (- (+ (+ (* l_0_18_19 l_0_18_19) (* l_0_18_20 l_0_18_20)) ?x32726) ?x33046)))
 (let ((?x33633 (- (- (- (- (- (- (- ?x28259 ?x33049) ?x33052) ?x33055) ?x33058) ?x27323) ?x16065) ?x27332)))
 (= (+ (+ (+ (+ (+ ?x33633 ?x10909) ?x21951) ?x27788) ?x33095) ?x33100) 0.0))))))))))))))))))
(assert
 (let ((?x32741 (* 4.0 l_0_18_36)))
 (let ((?x33433 (* ?x32741 l_0_18_43)))
 (let ((?x32738 (* 4.0 l_0_18_35)))
 (let ((?x33430 (* ?x32738 l_0_18_42)))
 (let ((?x32735 (* 4.0 l_0_18_34)))
 (let ((?x28053 (* ?x32735 l_0_18_41)))
 (let ((?x32404 (* 2.0 l_0_18_31)))
 (let ((?x33349 (* ?x32404 l_0_18_34)))
 (let ((?x33058 (* l_0_18_30 l_0_18_30)))
 (let ((?x33651 (* 2.0 ?x33058)))
 (let ((?x33055 (* l_0_18_29 l_0_18_29)))
 (let ((?x33649 (* 2.0 ?x33055)))
 (let ((?x33052 (* l_0_18_28 l_0_18_28)))
 (let ((?x33647 (* 2.0 ?x33052)))
 (let ((?x33049 (* l_0_18_27 l_0_18_27)))
 (let ((?x33645 (* 2.0 ?x33049)))
 (let ((?x33046 (* l_0_18_26 l_0_18_26)))
 (let ((?x28309 (* 2.0 ?x33046)))
 (let ((?x33389 (* 4.0 l_0_18_21)))
 (let ((?x28052 (* ?x33389 l_0_18_28)))
 (let ((?x33385 (* 4.0 l_0_18_20)))
 (let ((?x28035 (* ?x33385 l_0_18_27)))
 (let ((?x33381 (* 4.0 l_0_18_19)))
 (let ((?x21900 (* ?x33381 l_0_18_26)))
 (let ((?x33644 (+ (- (- (- (* (* 2.0 l_0_18_16) l_0_18_19) ?x21900) ?x28035) ?x28052) ?x28309)))
 (let ((?x33655 (+ (+ (- (+ (+ (+ (+ ?x33644 ?x33645) ?x33647) ?x33649) ?x33651) ?x33349) ?x28053) ?x33430)))
 (let ((?x33662 (- (- (+ ?x33655 ?x33433) (* (* 2.0 l_0_18_41) l_0_18_41)) (* (* 2.0 l_0_18_42) l_0_18_42))))
 (let ((?x33668 (- (- ?x33662 (* (* 2.0 l_0_18_43) l_0_18_43)) (* (* 2.0 l_0_18_44) l_0_18_44))))
 (= (- ?x33668 (* (* 2.0 l_0_18_45) l_0_18_45)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x33728 (* l_0_18_60 l_0_18_60)))
 (let ((?x33726 (* l_0_18_59 l_0_18_59)))
 (let ((?x33724 (* l_0_18_58 l_0_18_58)))
 (let ((?x33722 (* l_0_18_57 l_0_18_57)))
 (let ((?x33720 (* l_0_18_56 l_0_18_56)))
 (let ((?x33077 (* (* 4.0 l_0_18_45) l_0_18_45)))
 (let ((?x33074 (* (* 4.0 l_0_18_44) l_0_18_44)))
 (let ((?x33071 (* (* 4.0 l_0_18_43) l_0_18_43)))
 (let ((?x33068 (* (* 4.0 l_0_18_42) l_0_18_42)))
 (let ((?x33065 (* (* 4.0 l_0_18_41) l_0_18_41)))
 (let ((?x32938 (* 4.0 l_0_18_40)))
 (let ((?x33713 (* ?x32938 l_0_18_44)))
 (let ((?x32935 (* 4.0 l_0_18_39)))
 (let ((?x33711 (* ?x32935 l_0_18_43)))
 (let ((?x32932 (* 4.0 l_0_18_38)))
 (let ((?x33709 (* ?x32932 l_0_18_42)))
 (let ((?x32929 (* 4.0 l_0_18_37)))
 (let ((?x33707 (* ?x32929 l_0_18_41)))
 (let ((?x32404 (* 2.0 l_0_18_31)))
 (let ((?x33393 (* ?x32404 l_0_18_37)))
 (let ((?x33058 (* l_0_18_30 l_0_18_30)))
 (let ((?x33059 (* 4.0 ?x33058)))
 (let ((?x33055 (* l_0_18_29 l_0_18_29)))
 (let ((?x33056 (* 4.0 ?x33055)))
 (let ((?x33052 (* l_0_18_28 l_0_18_28)))
 (let ((?x33053 (* 4.0 ?x33052)))
 (let ((?x33049 (* l_0_18_27 l_0_18_27)))
 (let ((?x33050 (* 4.0 ?x33049)))
 (let ((?x33046 (* l_0_18_26 l_0_18_26)))
 (let ((?x33047 (* 4.0 ?x33046)))
 (let ((?x33699 (* (* 4.0 l_0_18_25) l_0_18_29)))
 (let ((?x33696 (* (* 4.0 l_0_18_24) l_0_18_28)))
 (let ((?x33693 (* (* 4.0 l_0_18_23) l_0_18_27)))
 (let ((?x33690 (* (* 4.0 l_0_18_22) l_0_18_26)))
 (let ((?x33700 (- (- (- (- (* (* 2.0 l_0_18_16) l_0_18_22) ?x33690) ?x33693) ?x33696) ?x33699)))
 (let ((?x33708 (+ (- (+ (+ (+ (+ (+ ?x33700 ?x33047) ?x33050) ?x33053) ?x33056) ?x33059) ?x33393) ?x33707)))
 (let ((?x33718 (- (- (- (- (+ (+ (+ ?x33708 ?x33709) ?x33711) ?x33713) ?x33065) ?x33068) ?x33071) ?x33074)))
 (= (- (- (- (- (- (- ?x33718 ?x33077) ?x33720) ?x33722) ?x33724) ?x33726) ?x33728) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33100 (* l_0_18_45 l_0_18_45)))
 (let ((?x17150 (* 2.0 ?x33100)))
 (let ((?x33095 (* l_0_18_44 l_0_18_44)))
 (let ((?x17147 (* 2.0 ?x33095)))
 (let ((?x27788 (* l_0_18_43 l_0_18_43)))
 (let ((?x28397 (* 2.0 ?x27788)))
 (let ((?x21951 (* l_0_18_42 l_0_18_42)))
 (let ((?x28396 (* 2.0 ?x21951)))
 (let ((?x10909 (* l_0_18_41 l_0_18_41)))
 (let ((?x33684 (* 2.0 ?x10909)))
 (let ((?x32404 (* 2.0 l_0_18_31)))
 (let ((?x17003 (* ?x32404 l_0_18_41)))
 (let ((?x17203 (- (* (* 2.0 l_0_18_16) l_0_18_26) (* (* 2.0 l_0_18_26) l_0_18_26))))
 (let ((?x33748 (- (- ?x17203 (* (* 2.0 l_0_18_27) l_0_18_27)) (* (* 2.0 l_0_18_28) l_0_18_28))))
 (let ((?x33754 (- (- ?x33748 (* (* 2.0 l_0_18_29) l_0_18_29)) (* (* 2.0 l_0_18_30) l_0_18_30))))
 (= (+ (+ (+ (+ (+ (- ?x33754 ?x17003) ?x33684) ?x28396) ?x28397) ?x17147) ?x17150) 0.0)))))))))))))))))
(assert
 (let ((?x10312 (* l_0_18_33 l_0_18_33)))
 (let ((?x21369 (* l_0_18_32 l_0_18_32)))
 (let ((?x3118 (- (- (+ (* l_0_18_17 l_0_18_17) (* l_0_18_18 l_0_18_18)) ?x21369) ?x10312)))
 (= ?x3118 0.0)))))
(assert
 (let ((?x32629 (* 2.0 l_0_18_33)))
 (let ((?x33482 (* ?x32629 l_0_18_35)))
 (let ((?x32623 (* 2.0 l_0_18_32)))
 (let ((?x33480 (* ?x32623 l_0_18_34)))
 (let ((?x32689 (* 2.0 l_0_18_18)))
 (let ((?x33478 (* ?x32689 l_0_18_20)))
 (= (- (- (+ (* (* 2.0 l_0_18_17) l_0_18_19) ?x33478) ?x33480) ?x33482) 0.0))))))))
(assert
 (let ((?x32629 (* 2.0 l_0_18_33)))
 (let ((?x33494 (* ?x32629 l_0_18_38)))
 (let ((?x32623 (* 2.0 l_0_18_32)))
 (let ((?x33492 (* ?x32623 l_0_18_37)))
 (let ((?x32689 (* 2.0 l_0_18_18)))
 (let ((?x33490 (* ?x32689 l_0_18_23)))
 (= (- (- (+ (* (* 2.0 l_0_18_17) l_0_18_22) ?x33490) ?x33492) ?x33494) 0.0))))))))
(assert
 (let ((?x32629 (* 2.0 l_0_18_33)))
 (let ((?x33512 (* ?x32629 l_0_18_42)))
 (let ((?x32623 (* 2.0 l_0_18_32)))
 (let ((?x33510 (* ?x32623 l_0_18_41)))
 (let ((?x32689 (* 2.0 l_0_18_18)))
 (let ((?x33508 (* ?x32689 l_0_18_27)))
 (= (- (- (+ (* (* 2.0 l_0_18_17) l_0_18_26) ?x33508) ?x33510) ?x33512) 0.0))))))))
(assert
 (let ((?x33357 (* 2.0 l_0_18_36)))
 (let ((?x33553 (* ?x33357 l_0_18_39)))
 (let ((?x33354 (* 2.0 l_0_18_35)))
 (let ((?x33551 (* ?x33354 l_0_18_38)))
 (let ((?x33351 (* 2.0 l_0_18_34)))
 (let ((?x33549 (* ?x33351 l_0_18_37)))
 (let ((?x28028 (* 2.0 l_0_18_21)))
 (let ((?x33547 (* ?x28028 l_0_18_24)))
 (let ((?x22281 (* 2.0 l_0_18_20)))
 (let ((?x33545 (* ?x22281 l_0_18_23)))
 (let ((?x33797 (- (- (+ (+ (* (* 2.0 l_0_18_19) l_0_18_22) ?x33545) ?x33547) ?x33549) ?x33551)))
 (= (- ?x33797 ?x33553) 0.0)))))))))))))
(assert
 (let ((?x33357 (* 2.0 l_0_18_36)))
 (let ((?x33562 (* ?x33357 l_0_18_43)))
 (let ((?x33354 (* 2.0 l_0_18_35)))
 (let ((?x2247 (* ?x33354 l_0_18_42)))
 (let ((?x33351 (* 2.0 l_0_18_34)))
 (let ((?x28137 (* ?x33351 l_0_18_41)))
 (let ((?x28028 (* 2.0 l_0_18_21)))
 (let ((?x28178 (* ?x28028 l_0_18_28)))
 (let ((?x22281 (* 2.0 l_0_18_20)))
 (let ((?x28176 (* ?x22281 l_0_18_27)))
 (let ((?x28562 (- (- (+ (+ (* (* 2.0 l_0_18_19) l_0_18_26) ?x28176) ?x28178) ?x28137) ?x2247)))
 (= (- ?x28562 ?x33562) 0.0)))))))))))))
(assert
 (let ((?x10642 (* l_0_18_40 l_0_18_40)))
 (let ((?x21716 (* l_0_18_39 l_0_18_39)))
 (let ((?x27568 (* l_0_18_38 l_0_18_38)))
 (let ((?x16283 (* l_0_18_37 l_0_18_37)))
 (let ((?x32924 (* l_0_18_25 l_0_18_25)))
 (let ((?x32921 (* l_0_18_24 l_0_18_24)))
 (let ((?x28588 (+ (+ (+ (* l_0_18_22 l_0_18_22) (* l_0_18_23 l_0_18_23)) ?x32921) ?x32924)))
 (= (- (- (- (- ?x28588 ?x16283) ?x27568) ?x21716) ?x10642) 0.0)))))))))
(assert
 (let ((?x33608 (* 2.0 l_0_18_40)))
 (let ((?x33609 (* ?x33608 l_0_18_44)))
 (let ((?x33605 (* 2.0 l_0_18_39)))
 (let ((?x33606 (* ?x33605 l_0_18_43)))
 (let ((?x33602 (* 2.0 l_0_18_38)))
 (let ((?x33603 (* ?x33602 l_0_18_42)))
 (let ((?x33599 (* 2.0 l_0_18_37)))
 (let ((?x33600 (* ?x33599 l_0_18_41)))
 (let ((?x33596 (* 2.0 l_0_18_25)))
 (let ((?x33597 (* ?x33596 l_0_18_29)))
 (let ((?x33593 (* 2.0 l_0_18_24)))
 (let ((?x33594 (* ?x33593 l_0_18_28)))
 (let ((?x28211 (* 2.0 l_0_18_23)))
 (let ((?x33591 (* ?x28211 l_0_18_27)))
 (let ((?x33826 (- (+ (+ (+ (* (* 2.0 l_0_18_22) l_0_18_26) ?x33591) ?x33594) ?x33597) ?x33600)))
 (= (- (- (- ?x33826 ?x33603) ?x33606) ?x33609) 0.0)))))))))))))))))
(assert
 (let ((?x33100 (* l_0_18_45 l_0_18_45)))
 (let ((?x33095 (* l_0_18_44 l_0_18_44)))
 (let ((?x27788 (* l_0_18_43 l_0_18_43)))
 (let ((?x21951 (* l_0_18_42 l_0_18_42)))
 (let ((?x10909 (* l_0_18_41 l_0_18_41)))
 (let ((?x33058 (* l_0_18_30 l_0_18_30)))
 (let ((?x33055 (* l_0_18_29 l_0_18_29)))
 (let ((?x33052 (* l_0_18_28 l_0_18_28)))
 (let ((?x2699 (+ (+ (+ (* l_0_18_26 l_0_18_26) (* l_0_18_27 l_0_18_27)) ?x33052) ?x33055)))
 (= (- (- (- (- (- (+ ?x2699 ?x33058) ?x10909) ?x21951) ?x27788) ?x33095) ?x33100) 0.0)))))))))))
(assert
 (let ((?x32794 (* 8.0 l_0_18_36)))
 (let ((?x32795 (* ?x32794 l_0_18_39)))
 (let ((?x32791 (* 8.0 l_0_18_35)))
 (let ((?x32792 (* ?x32791 l_0_18_38)))
 (let ((?x32788 (* 8.0 l_0_18_34)))
 (let ((?x32789 (* ?x32788 l_0_18_37)))
 (let ((?x32924 (* l_0_18_25 l_0_18_25)))
 (let ((?x33859 (* 2.0 ?x32924)))
 (let ((?x32921 (* l_0_18_24 l_0_18_24)))
 (let ((?x33857 (* 2.0 ?x32921)))
 (let ((?x32918 (* l_0_18_23 l_0_18_23)))
 (let ((?x33855 (* 2.0 ?x32918)))
 (let ((?x32915 (* l_0_18_22 l_0_18_22)))
 (let ((?x33853 (* 2.0 ?x32915)))
 (let ((?x32779 (* 8.0 l_0_18_21)))
 (let ((?x32780 (* ?x32779 l_0_18_24)))
 (let ((?x32776 (* 8.0 l_0_18_20)))
 (let ((?x32777 (* ?x32776 l_0_18_23)))
 (let ((?x32773 (* 8.0 l_0_18_19)))
 (let ((?x32774 (* ?x32773 l_0_18_22)))
 (let ((?x33861 (- (+ (+ (+ (+ (+ (+ ?x32774 ?x32777) ?x32780) ?x33853) ?x33855) ?x33857) ?x33859) ?x32789)))
 (let ((?x33867 (- (- (- (- ?x33861 ?x32792) ?x32795) (* (* 2.0 l_0_18_37) l_0_18_37)) (* (* 2.0 l_0_18_38) l_0_18_38))))
 (let ((?x33871 (- (- ?x33867 (* (* 2.0 l_0_18_39) l_0_18_39)) (* (* 2.0 l_0_18_40) l_0_18_40))))
 (let ((?x33877 (- (- ?x33871 (* (* 2.0 l_0_18_49) l_0_18_52)) (* (* 2.0 l_0_18_50) l_0_18_53))))
 (= (- ?x33877 (* (* 2.0 l_0_18_51) l_0_18_54)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x32938 (* 4.0 l_0_18_40)))
 (let ((?x33713 (* ?x32938 l_0_18_44)))
 (let ((?x32935 (* 4.0 l_0_18_39)))
 (let ((?x33711 (* ?x32935 l_0_18_43)))
 (let ((?x32932 (* 4.0 l_0_18_38)))
 (let ((?x33709 (* ?x32932 l_0_18_42)))
 (let ((?x32929 (* 4.0 l_0_18_37)))
 (let ((?x33707 (* ?x32929 l_0_18_41)))
 (let ((?x32794 (* 8.0 l_0_18_36)))
 (let ((?x32884 (* ?x32794 l_0_18_43)))
 (let ((?x32741 (* 4.0 l_0_18_36)))
 (let ((?x33401 (* ?x32741 l_0_18_39)))
 (let ((?x32791 (* 8.0 l_0_18_35)))
 (let ((?x32882 (* ?x32791 l_0_18_42)))
 (let ((?x32738 (* 4.0 l_0_18_35)))
 (let ((?x33398 (* ?x32738 l_0_18_38)))
 (let ((?x32788 (* 8.0 l_0_18_34)))
 (let ((?x32880 (* ?x32788 l_0_18_41)))
 (let ((?x32735 (* 4.0 l_0_18_34)))
 (let ((?x33395 (* ?x32735 l_0_18_37)))
 (let ((?x33699 (* (* 4.0 l_0_18_25) l_0_18_29)))
 (let ((?x33696 (* (* 4.0 l_0_18_24) l_0_18_28)))
 (let ((?x33693 (* (* 4.0 l_0_18_23) l_0_18_27)))
 (let ((?x33690 (* (* 4.0 l_0_18_22) l_0_18_26)))
 (let ((?x32779 (* 8.0 l_0_18_21)))
 (let ((?x32872 (* ?x32779 l_0_18_28)))
 (let ((?x33389 (* 4.0 l_0_18_21)))
 (let ((?x33390 (* ?x33389 l_0_18_24)))
 (let ((?x32776 (* 8.0 l_0_18_20)))
 (let ((?x32870 (* ?x32776 l_0_18_27)))
 (let ((?x33385 (* 4.0 l_0_18_20)))
 (let ((?x33386 (* ?x33385 l_0_18_23)))
 (let ((?x32773 (* 8.0 l_0_18_19)))
 (let ((?x32868 (* ?x32773 l_0_18_26)))
 (let ((?x33908 (- (+ (- (+ (* (* (- 4.0) l_0_18_19) l_0_18_22) ?x32868) ?x33386) ?x32870) ?x33390)))
 (let ((?x33915 (- (+ (+ (+ (+ (+ (+ ?x33908 ?x32872) ?x33690) ?x33693) ?x33696) ?x33699) ?x33395) ?x32880)))
 (let ((?x33922 (- (- (- (- (+ (- (+ ?x33915 ?x33398) ?x32882) ?x33401) ?x32884) ?x33707) ?x33709) ?x33711)))
 (let ((?x33927 (- (- (- ?x33922 ?x33713) (* (* 2.0 l_0_18_49) l_0_18_56)) (* (* 2.0 l_0_18_50) l_0_18_57))))
 (= (- ?x33927 (* (* 2.0 l_0_18_51) l_0_18_58)) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10642 (* l_0_18_40 l_0_18_40)))
 (let ((?x33892 (* 2.0 ?x10642)))
 (let ((?x33004 (* (* 8.0 l_0_18_40) l_0_18_44)))
 (let ((?x21716 (* l_0_18_39 l_0_18_39)))
 (let ((?x17334 (* 2.0 ?x21716)))
 (let ((?x33001 (* (* 8.0 l_0_18_39) l_0_18_43)))
 (let ((?x27568 (* l_0_18_38 l_0_18_38)))
 (let ((?x11953 (* 2.0 ?x27568)))
 (let ((?x32998 (* (* 8.0 l_0_18_38) l_0_18_42)))
 (let ((?x16283 (* l_0_18_37 l_0_18_37)))
 (let ((?x22725 (* 2.0 ?x16283)))
 (let ((?x32995 (* (* 8.0 l_0_18_37) l_0_18_41)))
 (let ((?x32988 (* (* 8.0 l_0_18_25) l_0_18_29)))
 (let ((?x32985 (* (* 8.0 l_0_18_24) l_0_18_28)))
 (let ((?x32982 (* (* 8.0 l_0_18_23) l_0_18_27)))
 (let ((?x32979 (* (* 8.0 l_0_18_22) l_0_18_26)))
 (let ((?x33951 (- (+ (- ?x32979 (* (* 2.0 l_0_18_22) l_0_18_22)) ?x32982) (* (* 2.0 l_0_18_23) l_0_18_23))))
 (let ((?x33957 (- (+ (- (+ ?x33951 ?x32985) (* (* 2.0 l_0_18_24) l_0_18_24)) ?x32988) (* (* 2.0 l_0_18_25) l_0_18_25))))
 (let ((?x33964 (- (+ (- (+ (- (+ (- ?x33957 ?x32995) ?x22725) ?x32998) ?x11953) ?x33001) ?x17334) ?x33004)))
 (let ((?x33971 (- (- (+ ?x33964 ?x33892) (* (* 2.0 l_0_18_52) l_0_18_56)) (* (* 2.0 l_0_18_53) l_0_18_57))))
 (let ((?x33977 (- (- ?x33971 (* (* 2.0 l_0_18_54) l_0_18_58)) (* (* 2.0 l_0_18_55) l_0_18_59))))
 (= ?x33977 0.0)))))))))))))))))))))))
(assert
 (let ((?x34011 (* l_0_18_55 l_0_18_55)))
 (let ((?x34009 (* l_0_18_54 l_0_18_54)))
 (let ((?x34007 (* l_0_18_53 l_0_18_53)))
 (let ((?x34005 (* l_0_18_52 l_0_18_52)))
 (let ((?x32938 (* 4.0 l_0_18_40)))
 (let ((?x32939 (* ?x32938 l_0_18_40)))
 (let ((?x32935 (* 4.0 l_0_18_39)))
 (let ((?x32936 (* ?x32935 l_0_18_39)))
 (let ((?x32932 (* 4.0 l_0_18_38)))
 (let ((?x32933 (* ?x32932 l_0_18_38)))
 (let ((?x32929 (* 4.0 l_0_18_37)))
 (let ((?x32930 (* ?x32929 l_0_18_37)))
 (let ((?x32924 (* l_0_18_25 l_0_18_25)))
 (let ((?x32925 (* 4.0 ?x32924)))
 (let ((?x32921 (* l_0_18_24 l_0_18_24)))
 (let ((?x32922 (* 4.0 ?x32921)))
 (let ((?x32918 (* l_0_18_23 l_0_18_23)))
 (let ((?x32919 (* 4.0 ?x32918)))
 (let ((?x32915 (* l_0_18_22 l_0_18_22)))
 (let ((?x32916 (* 4.0 ?x32915)))
 (let ((?x34004 (- (- (- (- (+ (+ (+ ?x32916 ?x32919) ?x32922) ?x32925) ?x32930) ?x32933) ?x32936) ?x32939)))
 (= (- (- (- (- ?x34004 ?x34005) ?x34007) ?x34009) ?x34011) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_18_1 0.0))
(assert
 (>= l_0_18_3 0.0))
(assert
 (>= l_0_18_6 0.0))
(assert
 (>= l_0_18_10 0.0))
(assert
 (>= l_0_18_15 0.0))
(assert
 (>= l_0_18_16 0.0))
(assert
 (>= l_0_18_18 0.0))
(assert
 (>= l_0_18_21 0.0))
(assert
 (>= l_0_18_25 0.0))
(assert
 (>= l_0_18_30 0.0))
(assert
 (>= l_0_18_31 0.0))
(assert
 (>= l_0_18_33 0.0))
(assert
 (>= l_0_18_36 0.0))
(assert
 (>= l_0_18_40 0.0))
(assert
 (>= l_0_18_45 0.0))
(assert
 (>= l_0_18_46 0.0))
(assert
 (>= l_0_18_48 0.0))
(assert
 (>= l_0_18_51 0.0))
(assert
 (>= l_0_18_55 0.0))
(assert
 (>= l_0_18_60 0.0))
(assert
 (>= l_0_18_61 0.0))
(assert
 (>= l_0_18_63 0.0))
(assert
 (>= l_0_18_66 0.0))
(assert
 (>= l_0_18_70 0.0))
(assert
 (>= l_0_18_75 0.0))
(assert
 (>= l_0_18_76 0.0))
(assert
 (>= l_0_18_78 0.0))
(assert
 (>= l_0_18_81 0.0))
(assert
 (>= l_0_18_85 0.0))
(assert
 (>= l_0_18_90 0.0))
(assert
 (>= l_0_18_91 0.0))
(assert
 (>= l_0_18_93 0.0))
(assert
 (>= l_0_18_96 0.0))
(assert
 (>= l_0_18_100 0.0))
(assert
 (>= l_0_18_105 0.0))
(check-sat)
(get-model)