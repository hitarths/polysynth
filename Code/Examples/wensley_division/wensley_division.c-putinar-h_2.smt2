(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_6 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_7_305 () Real)
(declare-fun l_0_7_291 () Real)
(declare-fun l_0_7_304 () Real)
(declare-fun l_0_7_290 () Real)
(declare-fun l_0_7_183 () Real)
(declare-fun l_0_7_182 () Real)
(declare-fun l_0_7_147 () Real)
(declare-fun l_0_7_146 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_319 () Real)
(declare-fun l_0_7_294 () Real)
(declare-fun l_0_7_318 () Real)
(declare-fun l_0_7_293 () Real)
(declare-fun l_0_7_317 () Real)
(declare-fun l_0_7_292 () Real)
(declare-fun l_0_7_221 () Real)
(declare-fun l_0_7_219 () Real)
(declare-fun l_0_7_220 () Real)
(declare-fun l_0_7_218 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_181 () Real)
(declare-fun l_0_7_145 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_217 () Real)
(declare-fun l_0_7_139 () Real)
(declare-fun l_0_7_114 () Real)
(declare-fun l_0_7_138 () Real)
(declare-fun l_0_7_113 () Real)
(declare-fun l_0_7_137 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_184 () Real)
(declare-fun l_0_7_148 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_187 () Real)
(declare-fun l_0_7_151 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_191 () Real)
(declare-fun l_0_7_155 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_196 () Real)
(declare-fun l_0_7_160 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_202 () Real)
(declare-fun l_0_7_166 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_209 () Real)
(declare-fun l_0_7_173 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_222 () Real)
(declare-fun l_0_7_185 () Real)
(declare-fun l_0_7_149 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_225 () Real)
(declare-fun l_0_7_224 () Real)
(declare-fun l_0_7_223 () Real)
(declare-fun l_0_7_188 () Real)
(declare-fun l_0_7_152 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_283 () Real)
(declare-fun l_0_7_258 () Real)
(declare-fun l_0_7_282 () Real)
(declare-fun l_0_7_257 () Real)
(declare-fun l_0_7_281 () Real)
(declare-fun l_0_7_256 () Real)
(declare-fun l_0_7_229 () Real)
(declare-fun l_0_7_228 () Real)
(declare-fun l_0_7_227 () Real)
(declare-fun l_0_7_192 () Real)
(declare-fun l_0_7_156 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_234 () Real)
(declare-fun l_0_7_233 () Real)
(declare-fun l_0_7_232 () Real)
(declare-fun l_0_7_211 () Real)
(declare-fun l_0_7_186 () Real)
(declare-fun l_0_7_210 () Real)
(declare-fun l_0_7_197 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_175 () Real)
(declare-fun l_0_7_150 () Real)
(declare-fun l_0_7_174 () Real)
(declare-fun l_0_7_161 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_240 () Real)
(declare-fun l_0_7_239 () Real)
(declare-fun l_0_7_238 () Real)
(declare-fun l_0_7_203 () Real)
(declare-fun l_0_7_167 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_247 () Real)
(declare-fun l_0_7_246 () Real)
(declare-fun l_0_7_245 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_189 () Real)
(declare-fun l_0_7_153 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_193 () Real)
(declare-fun l_0_7_157 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_198 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_162 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_204 () Real)
(declare-fun l_0_7_168 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_190 () Real)
(declare-fun l_0_7_154 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_194 () Real)
(declare-fun l_0_7_158 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_199 () Real)
(declare-fun l_0_7_163 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_205 () Real)
(declare-fun l_0_7_169 () Real)
(declare-fun l_0_7_117 () Real)
(declare-fun l_0_7_116 () Real)
(declare-fun l_0_7_115 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_212 () Real)
(declare-fun l_0_7_176 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_195 () Real)
(declare-fun l_0_7_159 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_200 () Real)
(declare-fun l_0_7_164 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_206 () Real)
(declare-fun l_0_7_170 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_121 () Real)
(declare-fun l_0_7_120 () Real)
(declare-fun l_0_7_119 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_213 () Real)
(declare-fun l_0_7_177 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_201 () Real)
(declare-fun l_0_7_165 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_207 () Real)
(declare-fun l_0_7_171 () Real)
(declare-fun l_0_7_126 () Real)
(declare-fun l_0_7_125 () Real)
(declare-fun l_0_7_124 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_214 () Real)
(declare-fun l_0_7_178 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_208 () Real)
(declare-fun l_0_7_172 () Real)
(declare-fun l_0_7_132 () Real)
(declare-fun l_0_7_131 () Real)
(declare-fun l_0_7_130 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_215 () Real)
(declare-fun l_0_7_179 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_216 () Real)
(declare-fun l_0_7_180 () Real)
(declare-fun l_0_7_295 () Real)
(declare-fun l_0_7_289 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_118 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_259 () Real)
(declare-fun l_0_7_253 () Real)
(declare-fun l_0_7_122 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_127 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_133 () Real)
(declare-fun l_0_7_140 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_296 () Real)
(declare-fun l_0_7_297 () Real)
(declare-fun l_0_7_298 () Real)
(declare-fun l_0_7_302 () Real)
(declare-fun l_0_7_301 () Real)
(declare-fun l_0_7_300 () Real)
(declare-fun l_0_7_299 () Real)
(declare-fun l_0_7_260 () Real)
(declare-fun l_0_7_255 () Real)
(declare-fun l_0_7_254 () Real)
(declare-fun l_0_7_307 () Real)
(declare-fun l_0_7_306 () Real)
(declare-fun l_0_7_313 () Real)
(declare-fun l_0_7_312 () Real)
(declare-fun l_0_7_311 () Real)
(declare-fun l_0_7_310 () Real)
(declare-fun l_0_7_320 () Real)
(declare-fun l_0_7_261 () Real)
(declare-fun l_0_7_262 () Real)
(declare-fun l_0_7_226 () Real)
(declare-fun l_0_7_266 () Real)
(declare-fun l_0_7_265 () Real)
(declare-fun l_0_7_264 () Real)
(declare-fun l_0_7_263 () Real)
(declare-fun l_0_7_271 () Real)
(declare-fun l_0_7_270 () Real)
(declare-fun l_0_7_269 () Real)
(declare-fun l_0_7_268 () Real)
(declare-fun l_0_7_277 () Real)
(declare-fun l_0_7_276 () Real)
(declare-fun l_0_7_275 () Real)
(declare-fun l_0_7_274 () Real)
(declare-fun l_0_7_284 () Real)
(declare-fun l_0_7_230 () Real)
(declare-fun l_0_7_235 () Real)
(declare-fun l_0_7_241 () Real)
(declare-fun l_0_7_248 () Real)
(declare-fun l_0_7_143 () Real)
(declare-fun l_0_7_136 () Real)
(declare-fun l_0_7_142 () Real)
(declare-fun l_0_7_135 () Real)
(declare-fun l_0_7_141 () Real)
(declare-fun l_0_7_134 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_323 () Real)
(declare-fun l_0_7_316 () Real)
(declare-fun l_0_7_322 () Real)
(declare-fun l_0_7_315 () Real)
(declare-fun l_0_7_321 () Real)
(declare-fun l_0_7_314 () Real)
(declare-fun l_0_7_287 () Real)
(declare-fun l_0_7_280 () Real)
(declare-fun l_0_7_286 () Real)
(declare-fun l_0_7_279 () Real)
(declare-fun l_0_7_285 () Real)
(declare-fun l_0_7_278 () Real)
(declare-fun l_0_7_267 () Real)
(declare-fun l_0_7_242 () Real)
(declare-fun l_0_7_231 () Real)
(declare-fun l_0_7_273 () Real)
(declare-fun l_0_7_272 () Real)
(declare-fun l_0_7_243 () Real)
(declare-fun l_0_7_237 () Real)
(declare-fun l_0_7_236 () Real)
(declare-fun l_0_7_244 () Real)
(declare-fun l_0_7_288 () Real)
(declare-fun l_0_7_251 () Real)
(declare-fun l_0_7_250 () Real)
(declare-fun l_0_7_249 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_123 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_128 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_129 () Real)
(declare-fun l_0_7_144 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_308 () Real)
(declare-fun l_0_7_303 () Real)
(declare-fun l_0_7_309 () Real)
(declare-fun l_0_7_324 () Real)
(declare-fun l_0_7_252 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_355 () Real)
(declare-fun l_0_8_330 () Real)
(declare-fun l_0_8_354 () Real)
(declare-fun l_0_8_329 () Real)
(declare-fun l_0_8_353 () Real)
(declare-fun l_0_8_328 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_319 () Real)
(declare-fun l_0_8_294 () Real)
(declare-fun l_0_8_318 () Real)
(declare-fun l_0_8_293 () Real)
(declare-fun l_0_8_317 () Real)
(declare-fun l_0_8_292 () Real)
(declare-fun l_0_8_221 () Real)
(declare-fun l_0_8_219 () Real)
(declare-fun l_0_8_220 () Real)
(declare-fun l_0_8_218 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_183 () Real)
(declare-fun l_0_8_182 () Real)
(declare-fun l_0_8_147 () Real)
(declare-fun l_0_8_146 () Real)
(declare-fun l_0_8_341 () Real)
(declare-fun l_0_8_327 () Real)
(declare-fun l_0_8_340 () Real)
(declare-fun l_0_8_326 () Real)
(declare-fun l_0_8_305 () Real)
(declare-fun l_0_8_291 () Real)
(declare-fun l_0_8_304 () Real)
(declare-fun l_0_8_290 () Real)
(declare-fun l_0_8_357 () Real)
(declare-fun l_0_8_339 () Real)
(declare-fun l_0_8_356 () Real)
(declare-fun l_0_8_338 () Real)
(declare-fun l_0_8_337 () Real)
(declare-fun l_0_8_336 () Real)
(declare-fun l_0_8_335 () Real)
(declare-fun l_0_8_321 () Real)
(declare-fun l_0_8_303 () Real)
(declare-fun l_0_8_320 () Real)
(declare-fun l_0_8_302 () Real)
(declare-fun l_0_8_301 () Real)
(declare-fun l_0_8_300 () Real)
(declare-fun l_0_8_299 () Real)
(declare-fun l_0_8_282 () Real)
(declare-fun l_0_8_255 () Real)
(declare-fun l_0_8_281 () Real)
(declare-fun l_0_8_254 () Real)
(declare-fun l_0_8_228 () Real)
(declare-fun l_0_8_227 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_181 () Real)
(declare-fun l_0_8_145 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_217 () Real)
(declare-fun l_0_8_139 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_138 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_137 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_184 () Real)
(declare-fun l_0_8_148 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_187 () Real)
(declare-fun l_0_8_151 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_191 () Real)
(declare-fun l_0_8_155 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_196 () Real)
(declare-fun l_0_8_160 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_202 () Real)
(declare-fun l_0_8_166 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_209 () Real)
(declare-fun l_0_8_173 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_222 () Real)
(declare-fun l_0_8_185 () Real)
(declare-fun l_0_8_149 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_225 () Real)
(declare-fun l_0_8_224 () Real)
(declare-fun l_0_8_223 () Real)
(declare-fun l_0_8_188 () Real)
(declare-fun l_0_8_152 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_283 () Real)
(declare-fun l_0_8_258 () Real)
(declare-fun l_0_8_257 () Real)
(declare-fun l_0_8_256 () Real)
(declare-fun l_0_8_229 () Real)
(declare-fun l_0_8_192 () Real)
(declare-fun l_0_8_156 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_234 () Real)
(declare-fun l_0_8_233 () Real)
(declare-fun l_0_8_232 () Real)
(declare-fun l_0_8_211 () Real)
(declare-fun l_0_8_186 () Real)
(declare-fun l_0_8_210 () Real)
(declare-fun l_0_8_197 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_175 () Real)
(declare-fun l_0_8_150 () Real)
(declare-fun l_0_8_174 () Real)
(declare-fun l_0_8_161 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_240 () Real)
(declare-fun l_0_8_239 () Real)
(declare-fun l_0_8_238 () Real)
(declare-fun l_0_8_203 () Real)
(declare-fun l_0_8_167 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_247 () Real)
(declare-fun l_0_8_246 () Real)
(declare-fun l_0_8_245 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_189 () Real)
(declare-fun l_0_8_153 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_193 () Real)
(declare-fun l_0_8_157 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_198 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_162 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_204 () Real)
(declare-fun l_0_8_168 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_190 () Real)
(declare-fun l_0_8_154 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_194 () Real)
(declare-fun l_0_8_158 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_199 () Real)
(declare-fun l_0_8_163 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_205 () Real)
(declare-fun l_0_8_169 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_212 () Real)
(declare-fun l_0_8_176 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_195 () Real)
(declare-fun l_0_8_159 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_200 () Real)
(declare-fun l_0_8_164 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_206 () Real)
(declare-fun l_0_8_170 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_213 () Real)
(declare-fun l_0_8_177 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_201 () Real)
(declare-fun l_0_8_165 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_207 () Real)
(declare-fun l_0_8_171 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_214 () Real)
(declare-fun l_0_8_178 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_208 () Real)
(declare-fun l_0_8_172 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_215 () Real)
(declare-fun l_0_8_179 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_216 () Real)
(declare-fun l_0_8_180 () Real)
(declare-fun l_0_8_331 () Real)
(declare-fun l_0_8_325 () Real)
(declare-fun l_0_8_295 () Real)
(declare-fun l_0_8_289 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_259 () Real)
(declare-fun l_0_8_253 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_140 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_332 () Real)
(declare-fun l_0_8_296 () Real)
(declare-fun l_0_8_333 () Real)
(declare-fun l_0_8_297 () Real)
(declare-fun l_0_8_334 () Real)
(declare-fun l_0_8_298 () Real)
(declare-fun l_0_8_260 () Real)
(declare-fun l_0_8_343 () Real)
(declare-fun l_0_8_342 () Real)
(declare-fun l_0_8_307 () Real)
(declare-fun l_0_8_306 () Real)
(declare-fun l_0_8_349 () Real)
(declare-fun l_0_8_348 () Real)
(declare-fun l_0_8_347 () Real)
(declare-fun l_0_8_346 () Real)
(declare-fun l_0_8_313 () Real)
(declare-fun l_0_8_312 () Real)
(declare-fun l_0_8_311 () Real)
(declare-fun l_0_8_310 () Real)
(declare-fun l_0_8_261 () Real)
(declare-fun l_0_8_262 () Real)
(declare-fun l_0_8_226 () Real)
(declare-fun l_0_8_266 () Real)
(declare-fun l_0_8_265 () Real)
(declare-fun l_0_8_264 () Real)
(declare-fun l_0_8_263 () Real)
(declare-fun l_0_8_271 () Real)
(declare-fun l_0_8_270 () Real)
(declare-fun l_0_8_269 () Real)
(declare-fun l_0_8_268 () Real)
(declare-fun l_0_8_277 () Real)
(declare-fun l_0_8_276 () Real)
(declare-fun l_0_8_275 () Real)
(declare-fun l_0_8_274 () Real)
(declare-fun l_0_8_284 () Real)
(declare-fun l_0_8_230 () Real)
(declare-fun l_0_8_235 () Real)
(declare-fun l_0_8_241 () Real)
(declare-fun l_0_8_248 () Real)
(declare-fun l_0_8_143 () Real)
(declare-fun l_0_8_136 () Real)
(declare-fun l_0_8_142 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_141 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_359 () Real)
(declare-fun l_0_8_352 () Real)
(declare-fun l_0_8_358 () Real)
(declare-fun l_0_8_351 () Real)
(declare-fun l_0_8_350 () Real)
(declare-fun l_0_8_323 () Real)
(declare-fun l_0_8_316 () Real)
(declare-fun l_0_8_322 () Real)
(declare-fun l_0_8_315 () Real)
(declare-fun l_0_8_314 () Real)
(declare-fun l_0_8_287 () Real)
(declare-fun l_0_8_280 () Real)
(declare-fun l_0_8_286 () Real)
(declare-fun l_0_8_279 () Real)
(declare-fun l_0_8_285 () Real)
(declare-fun l_0_8_278 () Real)
(declare-fun l_0_8_267 () Real)
(declare-fun l_0_8_242 () Real)
(declare-fun l_0_8_231 () Real)
(declare-fun l_0_8_273 () Real)
(declare-fun l_0_8_272 () Real)
(declare-fun l_0_8_243 () Real)
(declare-fun l_0_8_237 () Real)
(declare-fun l_0_8_236 () Real)
(declare-fun l_0_8_244 () Real)
(declare-fun l_0_8_288 () Real)
(declare-fun l_0_8_251 () Real)
(declare-fun l_0_8_250 () Real)
(declare-fun l_0_8_249 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_144 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_344 () Real)
(declare-fun l_0_8_308 () Real)
(declare-fun l_0_8_345 () Real)
(declare-fun l_0_8_309 () Real)
(declare-fun l_0_8_360 () Real)
(declare-fun l_0_8_324 () Real)
(declare-fun l_0_8_252 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_355 () Real)
(declare-fun l_0_9_330 () Real)
(declare-fun l_0_9_354 () Real)
(declare-fun l_0_9_329 () Real)
(declare-fun l_0_9_353 () Real)
(declare-fun l_0_9_328 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_221 () Real)
(declare-fun l_0_9_219 () Real)
(declare-fun l_0_9_220 () Real)
(declare-fun l_0_9_218 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_183 () Real)
(declare-fun l_0_9_182 () Real)
(declare-fun l_0_9_147 () Real)
(declare-fun l_0_9_146 () Real)
(declare-fun l_0_9_332 () Real)
(declare-fun l_0_9_327 () Real)
(declare-fun l_0_9_331 () Real)
(declare-fun l_0_9_326 () Real)
(declare-fun l_0_9_291 () Real)
(declare-fun l_0_9_290 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_181 () Real)
(declare-fun l_0_9_145 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_319 () Real)
(declare-fun l_0_9_294 () Real)
(declare-fun l_0_9_318 () Real)
(declare-fun l_0_9_293 () Real)
(declare-fun l_0_9_317 () Real)
(declare-fun l_0_9_292 () Real)
(declare-fun l_0_9_217 () Real)
(declare-fun l_0_9_139 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_138 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_137 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_184 () Real)
(declare-fun l_0_9_148 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_187 () Real)
(declare-fun l_0_9_151 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_191 () Real)
(declare-fun l_0_9_155 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_196 () Real)
(declare-fun l_0_9_160 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_202 () Real)
(declare-fun l_0_9_166 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_209 () Real)
(declare-fun l_0_9_173 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_222 () Real)
(declare-fun l_0_9_185 () Real)
(declare-fun l_0_9_149 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_225 () Real)
(declare-fun l_0_9_224 () Real)
(declare-fun l_0_9_223 () Real)
(declare-fun l_0_9_188 () Real)
(declare-fun l_0_9_152 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_283 () Real)
(declare-fun l_0_9_258 () Real)
(declare-fun l_0_9_282 () Real)
(declare-fun l_0_9_257 () Real)
(declare-fun l_0_9_281 () Real)
(declare-fun l_0_9_256 () Real)
(declare-fun l_0_9_229 () Real)
(declare-fun l_0_9_228 () Real)
(declare-fun l_0_9_227 () Real)
(declare-fun l_0_9_192 () Real)
(declare-fun l_0_9_156 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_234 () Real)
(declare-fun l_0_9_233 () Real)
(declare-fun l_0_9_232 () Real)
(declare-fun l_0_9_211 () Real)
(declare-fun l_0_9_186 () Real)
(declare-fun l_0_9_210 () Real)
(declare-fun l_0_9_197 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_175 () Real)
(declare-fun l_0_9_150 () Real)
(declare-fun l_0_9_174 () Real)
(declare-fun l_0_9_161 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_240 () Real)
(declare-fun l_0_9_239 () Real)
(declare-fun l_0_9_238 () Real)
(declare-fun l_0_9_203 () Real)
(declare-fun l_0_9_167 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_247 () Real)
(declare-fun l_0_9_246 () Real)
(declare-fun l_0_9_245 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_189 () Real)
(declare-fun l_0_9_153 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_193 () Real)
(declare-fun l_0_9_157 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_198 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_162 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_204 () Real)
(declare-fun l_0_9_168 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_190 () Real)
(declare-fun l_0_9_154 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_194 () Real)
(declare-fun l_0_9_158 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_199 () Real)
(declare-fun l_0_9_163 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_205 () Real)
(declare-fun l_0_9_169 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_212 () Real)
(declare-fun l_0_9_176 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_195 () Real)
(declare-fun l_0_9_159 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_200 () Real)
(declare-fun l_0_9_164 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_206 () Real)
(declare-fun l_0_9_170 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_213 () Real)
(declare-fun l_0_9_177 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_201 () Real)
(declare-fun l_0_9_165 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_207 () Real)
(declare-fun l_0_9_171 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_214 () Real)
(declare-fun l_0_9_178 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_208 () Real)
(declare-fun l_0_9_172 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_215 () Real)
(declare-fun l_0_9_179 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_216 () Real)
(declare-fun l_0_9_180 () Real)
(declare-fun l_0_9_289 () Real)
(declare-fun l_0_9_295 () Real)
(declare-fun l_0_9_325 () Real)
(declare-fun l_0_9_296 () Real)
(declare-fun l_0_9_297 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_298 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_302 () Real)
(declare-fun l_0_9_301 () Real)
(declare-fun l_0_9_300 () Real)
(declare-fun l_0_9_299 () Real)
(declare-fun l_0_9_259 () Real)
(declare-fun l_0_9_253 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_307 () Real)
(declare-fun l_0_9_306 () Real)
(declare-fun l_0_9_305 () Real)
(declare-fun l_0_9_304 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_313 () Real)
(declare-fun l_0_9_312 () Real)
(declare-fun l_0_9_311 () Real)
(declare-fun l_0_9_310 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_320 () Real)
(declare-fun l_0_9_140 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_333 () Real)
(declare-fun l_0_9_334 () Real)
(declare-fun l_0_9_338 () Real)
(declare-fun l_0_9_337 () Real)
(declare-fun l_0_9_336 () Real)
(declare-fun l_0_9_335 () Real)
(declare-fun l_0_9_260 () Real)
(declare-fun l_0_9_255 () Real)
(declare-fun l_0_9_254 () Real)
(declare-fun l_0_9_343 () Real)
(declare-fun l_0_9_342 () Real)
(declare-fun l_0_9_341 () Real)
(declare-fun l_0_9_340 () Real)
(declare-fun l_0_9_349 () Real)
(declare-fun l_0_9_348 () Real)
(declare-fun l_0_9_347 () Real)
(declare-fun l_0_9_346 () Real)
(declare-fun l_0_9_356 () Real)
(declare-fun l_0_9_261 () Real)
(declare-fun l_0_9_262 () Real)
(declare-fun l_0_9_226 () Real)
(declare-fun l_0_9_303 () Real)
(declare-fun l_0_9_266 () Real)
(declare-fun l_0_9_265 () Real)
(declare-fun l_0_9_264 () Real)
(declare-fun l_0_9_263 () Real)
(declare-fun l_0_9_308 () Real)
(declare-fun l_0_9_271 () Real)
(declare-fun l_0_9_270 () Real)
(declare-fun l_0_9_269 () Real)
(declare-fun l_0_9_268 () Real)
(declare-fun l_0_9_314 () Real)
(declare-fun l_0_9_277 () Real)
(declare-fun l_0_9_276 () Real)
(declare-fun l_0_9_275 () Real)
(declare-fun l_0_9_274 () Real)
(declare-fun l_0_9_321 () Real)
(declare-fun l_0_9_284 () Real)
(declare-fun l_0_9_230 () Real)
(declare-fun l_0_9_309 () Real)
(declare-fun l_0_9_315 () Real)
(declare-fun l_0_9_322 () Real)
(declare-fun l_0_9_235 () Real)
(declare-fun l_0_9_316 () Real)
(declare-fun l_0_9_323 () Real)
(declare-fun l_0_9_241 () Real)
(declare-fun l_0_9_324 () Real)
(declare-fun l_0_9_248 () Real)
(declare-fun l_0_9_143 () Real)
(declare-fun l_0_9_136 () Real)
(declare-fun l_0_9_142 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_141 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_359 () Real)
(declare-fun l_0_9_352 () Real)
(declare-fun l_0_9_358 () Real)
(declare-fun l_0_9_351 () Real)
(declare-fun l_0_9_357 () Real)
(declare-fun l_0_9_350 () Real)
(declare-fun l_0_9_287 () Real)
(declare-fun l_0_9_280 () Real)
(declare-fun l_0_9_286 () Real)
(declare-fun l_0_9_279 () Real)
(declare-fun l_0_9_285 () Real)
(declare-fun l_0_9_278 () Real)
(declare-fun l_0_9_267 () Real)
(declare-fun l_0_9_242 () Real)
(declare-fun l_0_9_231 () Real)
(declare-fun l_0_9_273 () Real)
(declare-fun l_0_9_272 () Real)
(declare-fun l_0_9_243 () Real)
(declare-fun l_0_9_237 () Real)
(declare-fun l_0_9_236 () Real)
(declare-fun l_0_9_244 () Real)
(declare-fun l_0_9_288 () Real)
(declare-fun l_0_9_251 () Real)
(declare-fun l_0_9_250 () Real)
(declare-fun l_0_9_249 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_144 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_344 () Real)
(declare-fun l_0_9_339 () Real)
(declare-fun l_0_9_345 () Real)
(declare-fun l_0_9_360 () Real)
(declare-fun l_0_9_252 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_368 () Real)
(declare-fun l_0_10_363 () Real)
(declare-fun l_0_10_367 () Real)
(declare-fun l_0_10_362 () Real)
(declare-fun l_0_10_332 () Real)
(declare-fun l_0_10_327 () Real)
(declare-fun l_0_10_331 () Real)
(declare-fun l_0_10_326 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_291 () Real)
(declare-fun l_0_10_290 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_391 () Real)
(declare-fun l_0_10_366 () Real)
(declare-fun l_0_10_390 () Real)
(declare-fun l_0_10_365 () Real)
(declare-fun l_0_10_389 () Real)
(declare-fun l_0_10_364 () Real)
(declare-fun l_0_10_355 () Real)
(declare-fun l_0_10_330 () Real)
(declare-fun l_0_10_354 () Real)
(declare-fun l_0_10_329 () Real)
(declare-fun l_0_10_353 () Real)
(declare-fun l_0_10_328 () Real)
(declare-fun l_0_10_221 () Real)
(declare-fun l_0_10_219 () Real)
(declare-fun l_0_10_220 () Real)
(declare-fun l_0_10_218 () Real)
(declare-fun l_0_10_183 () Real)
(declare-fun l_0_10_182 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_181 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_319 () Real)
(declare-fun l_0_10_294 () Real)
(declare-fun l_0_10_318 () Real)
(declare-fun l_0_10_293 () Real)
(declare-fun l_0_10_317 () Real)
(declare-fun l_0_10_292 () Real)
(declare-fun l_0_10_217 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_184 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_187 () Real)
(declare-fun l_0_10_151 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_191 () Real)
(declare-fun l_0_10_155 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_196 () Real)
(declare-fun l_0_10_160 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_202 () Real)
(declare-fun l_0_10_166 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_209 () Real)
(declare-fun l_0_10_173 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_222 () Real)
(declare-fun l_0_10_185 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_225 () Real)
(declare-fun l_0_10_224 () Real)
(declare-fun l_0_10_223 () Real)
(declare-fun l_0_10_188 () Real)
(declare-fun l_0_10_152 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_283 () Real)
(declare-fun l_0_10_258 () Real)
(declare-fun l_0_10_282 () Real)
(declare-fun l_0_10_257 () Real)
(declare-fun l_0_10_281 () Real)
(declare-fun l_0_10_256 () Real)
(declare-fun l_0_10_229 () Real)
(declare-fun l_0_10_228 () Real)
(declare-fun l_0_10_227 () Real)
(declare-fun l_0_10_192 () Real)
(declare-fun l_0_10_156 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_234 () Real)
(declare-fun l_0_10_233 () Real)
(declare-fun l_0_10_232 () Real)
(declare-fun l_0_10_211 () Real)
(declare-fun l_0_10_186 () Real)
(declare-fun l_0_10_210 () Real)
(declare-fun l_0_10_197 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_175 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_174 () Real)
(declare-fun l_0_10_161 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_240 () Real)
(declare-fun l_0_10_239 () Real)
(declare-fun l_0_10_238 () Real)
(declare-fun l_0_10_203 () Real)
(declare-fun l_0_10_167 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_247 () Real)
(declare-fun l_0_10_246 () Real)
(declare-fun l_0_10_245 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_189 () Real)
(declare-fun l_0_10_153 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_193 () Real)
(declare-fun l_0_10_157 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_198 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_162 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_204 () Real)
(declare-fun l_0_10_168 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_190 () Real)
(declare-fun l_0_10_154 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_194 () Real)
(declare-fun l_0_10_158 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_199 () Real)
(declare-fun l_0_10_163 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_205 () Real)
(declare-fun l_0_10_169 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_212 () Real)
(declare-fun l_0_10_176 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_195 () Real)
(declare-fun l_0_10_159 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_200 () Real)
(declare-fun l_0_10_164 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_206 () Real)
(declare-fun l_0_10_170 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_213 () Real)
(declare-fun l_0_10_177 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_201 () Real)
(declare-fun l_0_10_165 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_207 () Real)
(declare-fun l_0_10_171 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_214 () Real)
(declare-fun l_0_10_178 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_208 () Real)
(declare-fun l_0_10_172 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_215 () Real)
(declare-fun l_0_10_179 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_216 () Real)
(declare-fun l_0_10_180 () Real)
(declare-fun l_0_10_289 () Real)
(declare-fun l_0_10_295 () Real)
(declare-fun l_0_10_361 () Real)
(declare-fun l_0_10_325 () Real)
(declare-fun l_0_10_296 () Real)
(declare-fun l_0_10_297 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_298 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_302 () Real)
(declare-fun l_0_10_301 () Real)
(declare-fun l_0_10_300 () Real)
(declare-fun l_0_10_299 () Real)
(declare-fun l_0_10_259 () Real)
(declare-fun l_0_10_253 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_307 () Real)
(declare-fun l_0_10_306 () Real)
(declare-fun l_0_10_305 () Real)
(declare-fun l_0_10_304 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_313 () Real)
(declare-fun l_0_10_312 () Real)
(declare-fun l_0_10_311 () Real)
(declare-fun l_0_10_310 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_320 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_369 () Real)
(declare-fun l_0_10_333 () Real)
(declare-fun l_0_10_370 () Real)
(declare-fun l_0_10_334 () Real)
(declare-fun l_0_10_374 () Real)
(declare-fun l_0_10_373 () Real)
(declare-fun l_0_10_372 () Real)
(declare-fun l_0_10_371 () Real)
(declare-fun l_0_10_338 () Real)
(declare-fun l_0_10_337 () Real)
(declare-fun l_0_10_336 () Real)
(declare-fun l_0_10_335 () Real)
(declare-fun l_0_10_260 () Real)
(declare-fun l_0_10_255 () Real)
(declare-fun l_0_10_254 () Real)
(declare-fun l_0_10_379 () Real)
(declare-fun l_0_10_378 () Real)
(declare-fun l_0_10_377 () Real)
(declare-fun l_0_10_376 () Real)
(declare-fun l_0_10_343 () Real)
(declare-fun l_0_10_342 () Real)
(declare-fun l_0_10_341 () Real)
(declare-fun l_0_10_340 () Real)
(declare-fun l_0_10_385 () Real)
(declare-fun l_0_10_384 () Real)
(declare-fun l_0_10_383 () Real)
(declare-fun l_0_10_382 () Real)
(declare-fun l_0_10_349 () Real)
(declare-fun l_0_10_348 () Real)
(declare-fun l_0_10_347 () Real)
(declare-fun l_0_10_346 () Real)
(declare-fun l_0_10_392 () Real)
(declare-fun l_0_10_356 () Real)
(declare-fun l_0_10_261 () Real)
(declare-fun l_0_10_262 () Real)
(declare-fun l_0_10_226 () Real)
(declare-fun l_0_10_303 () Real)
(declare-fun l_0_10_266 () Real)
(declare-fun l_0_10_265 () Real)
(declare-fun l_0_10_264 () Real)
(declare-fun l_0_10_263 () Real)
(declare-fun l_0_10_308 () Real)
(declare-fun l_0_10_271 () Real)
(declare-fun l_0_10_270 () Real)
(declare-fun l_0_10_269 () Real)
(declare-fun l_0_10_268 () Real)
(declare-fun l_0_10_314 () Real)
(declare-fun l_0_10_277 () Real)
(declare-fun l_0_10_276 () Real)
(declare-fun l_0_10_275 () Real)
(declare-fun l_0_10_274 () Real)
(declare-fun l_0_10_321 () Real)
(declare-fun l_0_10_284 () Real)
(declare-fun l_0_10_230 () Real)
(declare-fun l_0_10_309 () Real)
(declare-fun l_0_10_315 () Real)
(declare-fun l_0_10_322 () Real)
(declare-fun l_0_10_235 () Real)
(declare-fun l_0_10_316 () Real)
(declare-fun l_0_10_323 () Real)
(declare-fun l_0_10_241 () Real)
(declare-fun l_0_10_324 () Real)
(declare-fun l_0_10_248 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_395 () Real)
(declare-fun l_0_10_388 () Real)
(declare-fun l_0_10_394 () Real)
(declare-fun l_0_10_387 () Real)
(declare-fun l_0_10_393 () Real)
(declare-fun l_0_10_386 () Real)
(declare-fun l_0_10_359 () Real)
(declare-fun l_0_10_352 () Real)
(declare-fun l_0_10_358 () Real)
(declare-fun l_0_10_351 () Real)
(declare-fun l_0_10_357 () Real)
(declare-fun l_0_10_350 () Real)
(declare-fun l_0_10_287 () Real)
(declare-fun l_0_10_280 () Real)
(declare-fun l_0_10_286 () Real)
(declare-fun l_0_10_279 () Real)
(declare-fun l_0_10_285 () Real)
(declare-fun l_0_10_278 () Real)
(declare-fun l_0_10_267 () Real)
(declare-fun l_0_10_242 () Real)
(declare-fun l_0_10_231 () Real)
(declare-fun l_0_10_273 () Real)
(declare-fun l_0_10_272 () Real)
(declare-fun l_0_10_243 () Real)
(declare-fun l_0_10_237 () Real)
(declare-fun l_0_10_236 () Real)
(declare-fun l_0_10_244 () Real)
(declare-fun l_0_10_288 () Real)
(declare-fun l_0_10_251 () Real)
(declare-fun l_0_10_250 () Real)
(declare-fun l_0_10_249 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_380 () Real)
(declare-fun l_0_10_375 () Real)
(declare-fun l_0_10_344 () Real)
(declare-fun l_0_10_339 () Real)
(declare-fun l_0_10_381 () Real)
(declare-fun l_0_10_345 () Real)
(declare-fun l_0_10_396 () Real)
(declare-fun l_0_10_360 () Real)
(declare-fun l_0_10_252 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_431 () Real)
(declare-fun l_0_11_424 () Real)
(declare-fun l_0_11_430 () Real)
(declare-fun l_0_11_423 () Real)
(declare-fun l_0_11_429 () Real)
(declare-fun l_0_11_422 () Real)
(declare-fun l_0_11_428 () Real)
(declare-fun l_0_11_421 () Real)
(declare-fun l_0_11_427 () Real)
(declare-fun l_0_11_420 () Real)
(declare-fun l_0_11_426 () Real)
(declare-fun l_0_11_419 () Real)
(declare-fun l_0_11_425 () Real)
(declare-fun l_0_11_418 () Real)
(declare-fun l_0_11_395 () Real)
(declare-fun l_0_11_388 () Real)
(declare-fun l_0_11_394 () Real)
(declare-fun l_0_11_387 () Real)
(declare-fun l_0_11_393 () Real)
(declare-fun l_0_11_386 () Real)
(declare-fun l_0_11_392 () Real)
(declare-fun l_0_11_385 () Real)
(declare-fun l_0_11_391 () Real)
(declare-fun l_0_11_384 () Real)
(declare-fun l_0_11_390 () Real)
(declare-fun l_0_11_383 () Real)
(declare-fun l_0_11_389 () Real)
(declare-fun l_0_11_382 () Real)
(declare-fun l_0_11_359 () Real)
(declare-fun l_0_11_352 () Real)
(declare-fun l_0_11_358 () Real)
(declare-fun l_0_11_351 () Real)
(declare-fun l_0_11_357 () Real)
(declare-fun l_0_11_350 () Real)
(declare-fun l_0_11_356 () Real)
(declare-fun l_0_11_349 () Real)
(declare-fun l_0_11_355 () Real)
(declare-fun l_0_11_348 () Real)
(declare-fun l_0_11_354 () Real)
(declare-fun l_0_11_347 () Real)
(declare-fun l_0_11_353 () Real)
(declare-fun l_0_11_346 () Real)
(declare-fun l_0_11_282 () Real)
(declare-fun l_0_11_255 () Real)
(declare-fun l_0_11_281 () Real)
(declare-fun l_0_11_254 () Real)
(declare-fun l_0_11_239 () Real)
(declare-fun l_0_11_219 () Real)
(declare-fun l_0_11_238 () Real)
(declare-fun l_0_11_218 () Real)
(declare-fun l_0_11_147 () Real)
(declare-fun l_0_11_146 () Real)
(declare-fun l_0_11_111 () Real)
(declare-fun l_0_11_110 () Real)
(declare-fun l_0_11_399 () Real)
(declare-fun l_0_11_398 () Real)
(declare-fun l_0_11_363 () Real)
(declare-fun l_0_11_362 () Real)
(declare-fun l_0_11_327 () Real)
(declare-fun l_0_11_326 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_11_397 () Real)
(declare-fun l_0_11_361 () Real)
(declare-fun l_0_11_325 () Real)
(declare-fun l_0_11_291 () Real)
(declare-fun l_0_11_290 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_181 () Real)
(declare-fun l_0_11_145 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_319 () Real)
(declare-fun l_0_11_294 () Real)
(declare-fun l_0_11_318 () Real)
(declare-fun l_0_11_293 () Real)
(declare-fun l_0_11_317 () Real)
(declare-fun l_0_11_292 () Real)
(declare-fun l_0_11_220 () Real)
(declare-fun l_0_11_217 () Real)
(declare-fun l_0_11_182 () Real)
(declare-fun l_0_11_139 () Real)
(declare-fun l_0_11_114 () Real)
(declare-fun l_0_11_138 () Real)
(declare-fun l_0_11_113 () Real)
(declare-fun l_0_11_137 () Real)
(declare-fun l_0_11_112 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_184 () Real)
(declare-fun l_0_11_148 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_187 () Real)
(declare-fun l_0_11_151 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_191 () Real)
(declare-fun l_0_11_155 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_196 () Real)
(declare-fun l_0_11_160 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_202 () Real)
(declare-fun l_0_11_166 () Real)
(declare-fun l_0_11_109 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_209 () Real)
(declare-fun l_0_11_173 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_402 () Real)
(declare-fun l_0_11_401 () Real)
(declare-fun l_0_11_400 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_366 () Real)
(declare-fun l_0_11_365 () Real)
(declare-fun l_0_11_364 () Real)
(declare-fun l_0_11_330 () Real)
(declare-fun l_0_11_329 () Real)
(declare-fun l_0_11_328 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_221 () Real)
(declare-fun l_0_11_183 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_222 () Real)
(declare-fun l_0_11_185 () Real)
(declare-fun l_0_11_149 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_225 () Real)
(declare-fun l_0_11_224 () Real)
(declare-fun l_0_11_223 () Real)
(declare-fun l_0_11_188 () Real)
(declare-fun l_0_11_152 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_283 () Real)
(declare-fun l_0_11_258 () Real)
(declare-fun l_0_11_257 () Real)
(declare-fun l_0_11_256 () Real)
(declare-fun l_0_11_229 () Real)
(declare-fun l_0_11_228 () Real)
(declare-fun l_0_11_227 () Real)
(declare-fun l_0_11_192 () Real)
(declare-fun l_0_11_156 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_234 () Real)
(declare-fun l_0_11_233 () Real)
(declare-fun l_0_11_232 () Real)
(declare-fun l_0_11_211 () Real)
(declare-fun l_0_11_186 () Real)
(declare-fun l_0_11_210 () Real)
(declare-fun l_0_11_197 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_175 () Real)
(declare-fun l_0_11_150 () Real)
(declare-fun l_0_11_174 () Real)
(declare-fun l_0_11_161 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_240 () Real)
(declare-fun l_0_11_203 () Real)
(declare-fun l_0_11_167 () Real)
(declare-fun l_0_11_247 () Real)
(declare-fun l_0_11_246 () Real)
(declare-fun l_0_11_245 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_189 () Real)
(declare-fun l_0_11_153 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_193 () Real)
(declare-fun l_0_11_157 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_198 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_162 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_204 () Real)
(declare-fun l_0_11_168 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_190 () Real)
(declare-fun l_0_11_154 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_194 () Real)
(declare-fun l_0_11_158 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_199 () Real)
(declare-fun l_0_11_163 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_205 () Real)
(declare-fun l_0_11_169 () Real)
(declare-fun l_0_11_117 () Real)
(declare-fun l_0_11_116 () Real)
(declare-fun l_0_11_115 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_212 () Real)
(declare-fun l_0_11_176 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_195 () Real)
(declare-fun l_0_11_159 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_200 () Real)
(declare-fun l_0_11_164 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_206 () Real)
(declare-fun l_0_11_170 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_121 () Real)
(declare-fun l_0_11_120 () Real)
(declare-fun l_0_11_119 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_213 () Real)
(declare-fun l_0_11_177 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_201 () Real)
(declare-fun l_0_11_165 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_207 () Real)
(declare-fun l_0_11_171 () Real)
(declare-fun l_0_11_126 () Real)
(declare-fun l_0_11_125 () Real)
(declare-fun l_0_11_124 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_214 () Real)
(declare-fun l_0_11_178 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_208 () Real)
(declare-fun l_0_11_172 () Real)
(declare-fun l_0_11_132 () Real)
(declare-fun l_0_11_131 () Real)
(declare-fun l_0_11_130 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_215 () Real)
(declare-fun l_0_11_179 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_216 () Real)
(declare-fun l_0_11_180 () Real)
(declare-fun l_0_11_289 () Real)
(declare-fun l_0_11_295 () Real)
(declare-fun l_0_11_403 () Real)
(declare-fun l_0_11_367 () Real)
(declare-fun l_0_11_331 () Real)
(declare-fun l_0_11_296 () Real)
(declare-fun l_0_11_297 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_298 () Real)
(declare-fun l_0_11_118 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_302 () Real)
(declare-fun l_0_11_301 () Real)
(declare-fun l_0_11_300 () Real)
(declare-fun l_0_11_299 () Real)
(declare-fun l_0_11_259 () Real)
(declare-fun l_0_11_253 () Real)
(declare-fun l_0_11_122 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_307 () Real)
(declare-fun l_0_11_306 () Real)
(declare-fun l_0_11_305 () Real)
(declare-fun l_0_11_304 () Real)
(declare-fun l_0_11_127 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_313 () Real)
(declare-fun l_0_11_312 () Real)
(declare-fun l_0_11_311 () Real)
(declare-fun l_0_11_310 () Real)
(declare-fun l_0_11_133 () Real)
(declare-fun l_0_11_320 () Real)
(declare-fun l_0_11_140 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_404 () Real)
(declare-fun l_0_11_368 () Real)
(declare-fun l_0_11_332 () Real)
(declare-fun l_0_11_405 () Real)
(declare-fun l_0_11_369 () Real)
(declare-fun l_0_11_333 () Real)
(declare-fun l_0_11_406 () Real)
(declare-fun l_0_11_370 () Real)
(declare-fun l_0_11_334 () Real)
(declare-fun l_0_11_410 () Real)
(declare-fun l_0_11_409 () Real)
(declare-fun l_0_11_408 () Real)
(declare-fun l_0_11_407 () Real)
(declare-fun l_0_11_374 () Real)
(declare-fun l_0_11_373 () Real)
(declare-fun l_0_11_372 () Real)
(declare-fun l_0_11_371 () Real)
(declare-fun l_0_11_338 () Real)
(declare-fun l_0_11_337 () Real)
(declare-fun l_0_11_336 () Real)
(declare-fun l_0_11_335 () Real)
(declare-fun l_0_11_260 () Real)
(declare-fun l_0_11_415 () Real)
(declare-fun l_0_11_414 () Real)
(declare-fun l_0_11_413 () Real)
(declare-fun l_0_11_412 () Real)
(declare-fun l_0_11_379 () Real)
(declare-fun l_0_11_378 () Real)
(declare-fun l_0_11_377 () Real)
(declare-fun l_0_11_376 () Real)
(declare-fun l_0_11_343 () Real)
(declare-fun l_0_11_342 () Real)
(declare-fun l_0_11_341 () Real)
(declare-fun l_0_11_340 () Real)
(declare-fun l_0_11_261 () Real)
(declare-fun l_0_11_262 () Real)
(declare-fun l_0_11_226 () Real)
(declare-fun l_0_11_303 () Real)
(declare-fun l_0_11_266 () Real)
(declare-fun l_0_11_265 () Real)
(declare-fun l_0_11_264 () Real)
(declare-fun l_0_11_263 () Real)
(declare-fun l_0_11_308 () Real)
(declare-fun l_0_11_271 () Real)
(declare-fun l_0_11_270 () Real)
(declare-fun l_0_11_269 () Real)
(declare-fun l_0_11_268 () Real)
(declare-fun l_0_11_314 () Real)
(declare-fun l_0_11_277 () Real)
(declare-fun l_0_11_276 () Real)
(declare-fun l_0_11_275 () Real)
(declare-fun l_0_11_274 () Real)
(declare-fun l_0_11_321 () Real)
(declare-fun l_0_11_284 () Real)
(declare-fun l_0_11_230 () Real)
(declare-fun l_0_11_309 () Real)
(declare-fun l_0_11_315 () Real)
(declare-fun l_0_11_322 () Real)
(declare-fun l_0_11_235 () Real)
(declare-fun l_0_11_316 () Real)
(declare-fun l_0_11_323 () Real)
(declare-fun l_0_11_241 () Real)
(declare-fun l_0_11_324 () Real)
(declare-fun l_0_11_248 () Real)
(declare-fun l_0_11_143 () Real)
(declare-fun l_0_11_136 () Real)
(declare-fun l_0_11_142 () Real)
(declare-fun l_0_11_135 () Real)
(declare-fun l_0_11_141 () Real)
(declare-fun l_0_11_134 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_106 () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_107 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_287 () Real)
(declare-fun l_0_11_280 () Real)
(declare-fun l_0_11_286 () Real)
(declare-fun l_0_11_279 () Real)
(declare-fun l_0_11_285 () Real)
(declare-fun l_0_11_278 () Real)
(declare-fun l_0_11_267 () Real)
(declare-fun l_0_11_242 () Real)
(declare-fun l_0_11_231 () Real)
(declare-fun l_0_11_273 () Real)
(declare-fun l_0_11_272 () Real)
(declare-fun l_0_11_243 () Real)
(declare-fun l_0_11_237 () Real)
(declare-fun l_0_11_236 () Real)
(declare-fun l_0_11_244 () Real)
(declare-fun l_0_11_288 () Real)
(declare-fun l_0_11_251 () Real)
(declare-fun l_0_11_250 () Real)
(declare-fun l_0_11_249 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_123 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_128 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_129 () Real)
(declare-fun l_0_11_144 () Real)
(declare-fun l_0_11_108 () Real)
(declare-fun l_0_11_416 () Real)
(declare-fun l_0_11_411 () Real)
(declare-fun l_0_11_380 () Real)
(declare-fun l_0_11_375 () Real)
(declare-fun l_0_11_344 () Real)
(declare-fun l_0_11_339 () Real)
(declare-fun l_0_11_417 () Real)
(declare-fun l_0_11_381 () Real)
(declare-fun l_0_11_345 () Real)
(declare-fun l_0_11_432 () Real)
(declare-fun l_0_11_396 () Real)
(declare-fun l_0_11_360 () Real)
(declare-fun l_0_11_252 () Real)
(declare-fun l_0_12_435 () Real)
(declare-fun l_0_12_434 () Real)
(declare-fun l_0_12_399 () Real)
(declare-fun l_0_12_398 () Real)
(declare-fun l_0_12_363 () Real)
(declare-fun l_0_12_362 () Real)
(declare-fun l_0_12_327 () Real)
(declare-fun l_0_12_326 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_433 () Real)
(declare-fun l_0_12_397 () Real)
(declare-fun l_0_12_361 () Real)
(declare-fun l_0_12_325 () Real)
(declare-fun l_0_12_291 () Real)
(declare-fun l_0_12_290 () Real)
(declare-fun l_0_12_111 () Real)
(declare-fun l_0_12_110 () Real)
(declare-fun l_0_12_467 () Real)
(declare-fun l_0_12_460 () Real)
(declare-fun l_0_12_466 () Real)
(declare-fun l_0_12_459 () Real)
(declare-fun l_0_12_465 () Real)
(declare-fun l_0_12_458 () Real)
(declare-fun l_0_12_464 () Real)
(declare-fun l_0_12_457 () Real)
(declare-fun l_0_12_463 () Real)
(declare-fun l_0_12_456 () Real)
(declare-fun l_0_12_462 () Real)
(declare-fun l_0_12_455 () Real)
(declare-fun l_0_12_461 () Real)
(declare-fun l_0_12_454 () Real)
(declare-fun l_0_12_431 () Real)
(declare-fun l_0_12_424 () Real)
(declare-fun l_0_12_430 () Real)
(declare-fun l_0_12_423 () Real)
(declare-fun l_0_12_429 () Real)
(declare-fun l_0_12_422 () Real)
(declare-fun l_0_12_428 () Real)
(declare-fun l_0_12_421 () Real)
(declare-fun l_0_12_427 () Real)
(declare-fun l_0_12_420 () Real)
(declare-fun l_0_12_426 () Real)
(declare-fun l_0_12_419 () Real)
(declare-fun l_0_12_425 () Real)
(declare-fun l_0_12_418 () Real)
(declare-fun l_0_12_395 () Real)
(declare-fun l_0_12_388 () Real)
(declare-fun l_0_12_394 () Real)
(declare-fun l_0_12_387 () Real)
(declare-fun l_0_12_393 () Real)
(declare-fun l_0_12_386 () Real)
(declare-fun l_0_12_392 () Real)
(declare-fun l_0_12_385 () Real)
(declare-fun l_0_12_391 () Real)
(declare-fun l_0_12_384 () Real)
(declare-fun l_0_12_390 () Real)
(declare-fun l_0_12_383 () Real)
(declare-fun l_0_12_389 () Real)
(declare-fun l_0_12_382 () Real)
(declare-fun l_0_12_359 () Real)
(declare-fun l_0_12_352 () Real)
(declare-fun l_0_12_358 () Real)
(declare-fun l_0_12_351 () Real)
(declare-fun l_0_12_357 () Real)
(declare-fun l_0_12_350 () Real)
(declare-fun l_0_12_356 () Real)
(declare-fun l_0_12_349 () Real)
(declare-fun l_0_12_355 () Real)
(declare-fun l_0_12_348 () Real)
(declare-fun l_0_12_354 () Real)
(declare-fun l_0_12_347 () Real)
(declare-fun l_0_12_353 () Real)
(declare-fun l_0_12_346 () Real)
(declare-fun l_0_12_282 () Real)
(declare-fun l_0_12_255 () Real)
(declare-fun l_0_12_281 () Real)
(declare-fun l_0_12_254 () Real)
(declare-fun l_0_12_239 () Real)
(declare-fun l_0_12_219 () Real)
(declare-fun l_0_12_238 () Real)
(declare-fun l_0_12_218 () Real)
(declare-fun l_0_12_147 () Real)
(declare-fun l_0_12_146 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_181 () Real)
(declare-fun l_0_12_145 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_319 () Real)
(declare-fun l_0_12_294 () Real)
(declare-fun l_0_12_318 () Real)
(declare-fun l_0_12_293 () Real)
(declare-fun l_0_12_317 () Real)
(declare-fun l_0_12_292 () Real)
(declare-fun l_0_12_220 () Real)
(declare-fun l_0_12_217 () Real)
(declare-fun l_0_12_182 () Real)
(declare-fun l_0_12_139 () Real)
(declare-fun l_0_12_114 () Real)
(declare-fun l_0_12_138 () Real)
(declare-fun l_0_12_113 () Real)
(declare-fun l_0_12_137 () Real)
(declare-fun l_0_12_112 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_184 () Real)
(declare-fun l_0_12_148 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_187 () Real)
(declare-fun l_0_12_151 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_191 () Real)
(declare-fun l_0_12_155 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_196 () Real)
(declare-fun l_0_12_160 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_202 () Real)
(declare-fun l_0_12_166 () Real)
(declare-fun l_0_12_109 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_209 () Real)
(declare-fun l_0_12_173 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_438 () Real)
(declare-fun l_0_12_437 () Real)
(declare-fun l_0_12_436 () Real)
(declare-fun l_0_12_402 () Real)
(declare-fun l_0_12_401 () Real)
(declare-fun l_0_12_400 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_366 () Real)
(declare-fun l_0_12_365 () Real)
(declare-fun l_0_12_364 () Real)
(declare-fun l_0_12_330 () Real)
(declare-fun l_0_12_329 () Real)
(declare-fun l_0_12_328 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_221 () Real)
(declare-fun l_0_12_183 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_222 () Real)
(declare-fun l_0_12_185 () Real)
(declare-fun l_0_12_149 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_225 () Real)
(declare-fun l_0_12_224 () Real)
(declare-fun l_0_12_223 () Real)
(declare-fun l_0_12_188 () Real)
(declare-fun l_0_12_152 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_283 () Real)
(declare-fun l_0_12_258 () Real)
(declare-fun l_0_12_257 () Real)
(declare-fun l_0_12_256 () Real)
(declare-fun l_0_12_229 () Real)
(declare-fun l_0_12_228 () Real)
(declare-fun l_0_12_227 () Real)
(declare-fun l_0_12_192 () Real)
(declare-fun l_0_12_156 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_234 () Real)
(declare-fun l_0_12_233 () Real)
(declare-fun l_0_12_232 () Real)
(declare-fun l_0_12_211 () Real)
(declare-fun l_0_12_186 () Real)
(declare-fun l_0_12_210 () Real)
(declare-fun l_0_12_197 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_175 () Real)
(declare-fun l_0_12_150 () Real)
(declare-fun l_0_12_174 () Real)
(declare-fun l_0_12_161 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_240 () Real)
(declare-fun l_0_12_203 () Real)
(declare-fun l_0_12_167 () Real)
(declare-fun l_0_12_247 () Real)
(declare-fun l_0_12_246 () Real)
(declare-fun l_0_12_245 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_12_189 () Real)
(declare-fun l_0_12_153 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_193 () Real)
(declare-fun l_0_12_157 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_198 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_162 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_204 () Real)
(declare-fun l_0_12_168 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_190 () Real)
(declare-fun l_0_12_154 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_194 () Real)
(declare-fun l_0_12_158 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_199 () Real)
(declare-fun l_0_12_163 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_205 () Real)
(declare-fun l_0_12_169 () Real)
(declare-fun l_0_12_117 () Real)
(declare-fun l_0_12_116 () Real)
(declare-fun l_0_12_115 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_212 () Real)
(declare-fun l_0_12_176 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_195 () Real)
(declare-fun l_0_12_159 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_200 () Real)
(declare-fun l_0_12_164 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_206 () Real)
(declare-fun l_0_12_170 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_121 () Real)
(declare-fun l_0_12_120 () Real)
(declare-fun l_0_12_119 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_213 () Real)
(declare-fun l_0_12_177 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_201 () Real)
(declare-fun l_0_12_165 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_207 () Real)
(declare-fun l_0_12_171 () Real)
(declare-fun l_0_12_126 () Real)
(declare-fun l_0_12_125 () Real)
(declare-fun l_0_12_124 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_214 () Real)
(declare-fun l_0_12_178 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_208 () Real)
(declare-fun l_0_12_172 () Real)
(declare-fun l_0_12_132 () Real)
(declare-fun l_0_12_131 () Real)
(declare-fun l_0_12_130 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_215 () Real)
(declare-fun l_0_12_179 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_216 () Real)
(declare-fun l_0_12_180 () Real)
(declare-fun l_0_12_289 () Real)
(declare-fun l_0_12_295 () Real)
(declare-fun l_0_12_439 () Real)
(declare-fun l_0_12_403 () Real)
(declare-fun l_0_12_367 () Real)
(declare-fun l_0_12_331 () Real)
(declare-fun l_0_12_296 () Real)
(declare-fun l_0_12_297 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_298 () Real)
(declare-fun l_0_12_118 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_302 () Real)
(declare-fun l_0_12_301 () Real)
(declare-fun l_0_12_300 () Real)
(declare-fun l_0_12_299 () Real)
(declare-fun l_0_12_259 () Real)
(declare-fun l_0_12_253 () Real)
(declare-fun l_0_12_122 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_307 () Real)
(declare-fun l_0_12_306 () Real)
(declare-fun l_0_12_305 () Real)
(declare-fun l_0_12_304 () Real)
(declare-fun l_0_12_127 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_313 () Real)
(declare-fun l_0_12_312 () Real)
(declare-fun l_0_12_311 () Real)
(declare-fun l_0_12_310 () Real)
(declare-fun l_0_12_133 () Real)
(declare-fun l_0_12_320 () Real)
(declare-fun l_0_12_140 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_440 () Real)
(declare-fun l_0_12_404 () Real)
(declare-fun l_0_12_368 () Real)
(declare-fun l_0_12_332 () Real)
(declare-fun l_0_12_441 () Real)
(declare-fun l_0_12_405 () Real)
(declare-fun l_0_12_369 () Real)
(declare-fun l_0_12_333 () Real)
(declare-fun l_0_12_442 () Real)
(declare-fun l_0_12_406 () Real)
(declare-fun l_0_12_370 () Real)
(declare-fun l_0_12_334 () Real)
(declare-fun l_0_12_446 () Real)
(declare-fun l_0_12_445 () Real)
(declare-fun l_0_12_444 () Real)
(declare-fun l_0_12_443 () Real)
(declare-fun l_0_12_410 () Real)
(declare-fun l_0_12_409 () Real)
(declare-fun l_0_12_408 () Real)
(declare-fun l_0_12_407 () Real)
(declare-fun l_0_12_374 () Real)
(declare-fun l_0_12_373 () Real)
(declare-fun l_0_12_372 () Real)
(declare-fun l_0_12_371 () Real)
(declare-fun l_0_12_338 () Real)
(declare-fun l_0_12_337 () Real)
(declare-fun l_0_12_336 () Real)
(declare-fun l_0_12_335 () Real)
(declare-fun l_0_12_260 () Real)
(declare-fun l_0_12_451 () Real)
(declare-fun l_0_12_450 () Real)
(declare-fun l_0_12_449 () Real)
(declare-fun l_0_12_448 () Real)
(declare-fun l_0_12_415 () Real)
(declare-fun l_0_12_414 () Real)
(declare-fun l_0_12_413 () Real)
(declare-fun l_0_12_412 () Real)
(declare-fun l_0_12_379 () Real)
(declare-fun l_0_12_378 () Real)
(declare-fun l_0_12_377 () Real)
(declare-fun l_0_12_376 () Real)
(declare-fun l_0_12_343 () Real)
(declare-fun l_0_12_342 () Real)
(declare-fun l_0_12_341 () Real)
(declare-fun l_0_12_340 () Real)
(declare-fun l_0_12_261 () Real)
(declare-fun l_0_12_262 () Real)
(declare-fun l_0_12_226 () Real)
(declare-fun l_0_12_303 () Real)
(declare-fun l_0_12_266 () Real)
(declare-fun l_0_12_265 () Real)
(declare-fun l_0_12_264 () Real)
(declare-fun l_0_12_263 () Real)
(declare-fun l_0_12_308 () Real)
(declare-fun l_0_12_271 () Real)
(declare-fun l_0_12_270 () Real)
(declare-fun l_0_12_269 () Real)
(declare-fun l_0_12_268 () Real)
(declare-fun l_0_12_314 () Real)
(declare-fun l_0_12_277 () Real)
(declare-fun l_0_12_276 () Real)
(declare-fun l_0_12_275 () Real)
(declare-fun l_0_12_274 () Real)
(declare-fun l_0_12_321 () Real)
(declare-fun l_0_12_284 () Real)
(declare-fun l_0_12_230 () Real)
(declare-fun l_0_12_309 () Real)
(declare-fun l_0_12_315 () Real)
(declare-fun l_0_12_322 () Real)
(declare-fun l_0_12_235 () Real)
(declare-fun l_0_12_316 () Real)
(declare-fun l_0_12_323 () Real)
(declare-fun l_0_12_241 () Real)
(declare-fun l_0_12_324 () Real)
(declare-fun l_0_12_248 () Real)
(declare-fun l_0_12_143 () Real)
(declare-fun l_0_12_136 () Real)
(declare-fun l_0_12_142 () Real)
(declare-fun l_0_12_135 () Real)
(declare-fun l_0_12_141 () Real)
(declare-fun l_0_12_134 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_106 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_107 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_287 () Real)
(declare-fun l_0_12_280 () Real)
(declare-fun l_0_12_286 () Real)
(declare-fun l_0_12_279 () Real)
(declare-fun l_0_12_285 () Real)
(declare-fun l_0_12_278 () Real)
(declare-fun l_0_12_267 () Real)
(declare-fun l_0_12_242 () Real)
(declare-fun l_0_12_231 () Real)
(declare-fun l_0_12_273 () Real)
(declare-fun l_0_12_272 () Real)
(declare-fun l_0_12_243 () Real)
(declare-fun l_0_12_237 () Real)
(declare-fun l_0_12_236 () Real)
(declare-fun l_0_12_244 () Real)
(declare-fun l_0_12_288 () Real)
(declare-fun l_0_12_251 () Real)
(declare-fun l_0_12_250 () Real)
(declare-fun l_0_12_249 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_123 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_128 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_129 () Real)
(declare-fun l_0_12_144 () Real)
(declare-fun l_0_12_108 () Real)
(declare-fun l_0_12_452 () Real)
(declare-fun l_0_12_447 () Real)
(declare-fun l_0_12_416 () Real)
(declare-fun l_0_12_411 () Real)
(declare-fun l_0_12_380 () Real)
(declare-fun l_0_12_375 () Real)
(declare-fun l_0_12_344 () Real)
(declare-fun l_0_12_339 () Real)
(declare-fun l_0_12_453 () Real)
(declare-fun l_0_12_417 () Real)
(declare-fun l_0_12_381 () Real)
(declare-fun l_0_12_345 () Real)
(declare-fun l_0_12_468 () Real)
(declare-fun l_0_12_432 () Real)
(declare-fun l_0_12_396 () Real)
(declare-fun l_0_12_360 () Real)
(declare-fun l_0_12_252 () Real)
(declare-fun l_0_13_499 () Real)
(declare-fun l_0_13_474 () Real)
(declare-fun l_0_13_498 () Real)
(declare-fun l_0_13_473 () Real)
(declare-fun l_0_13_497 () Real)
(declare-fun l_0_13_472 () Real)
(declare-fun l_0_13_463 () Real)
(declare-fun l_0_13_438 () Real)
(declare-fun l_0_13_462 () Real)
(declare-fun l_0_13_437 () Real)
(declare-fun l_0_13_461 () Real)
(declare-fun l_0_13_436 () Real)
(declare-fun l_0_13_427 () Real)
(declare-fun l_0_13_402 () Real)
(declare-fun l_0_13_426 () Real)
(declare-fun l_0_13_401 () Real)
(declare-fun l_0_13_425 () Real)
(declare-fun l_0_13_400 () Real)
(declare-fun l_0_13_39 () Real)
(declare-fun l_0_13_38 () Real)
(declare-fun l_0_13_391 () Real)
(declare-fun l_0_13_366 () Real)
(declare-fun l_0_13_390 () Real)
(declare-fun l_0_13_365 () Real)
(declare-fun l_0_13_389 () Real)
(declare-fun l_0_13_364 () Real)
(declare-fun l_0_13_355 () Real)
(declare-fun l_0_13_330 () Real)
(declare-fun l_0_13_354 () Real)
(declare-fun l_0_13_329 () Real)
(declare-fun l_0_13_353 () Real)
(declare-fun l_0_13_328 () Real)
(declare-fun l_0_13_3 () Real)
(declare-fun l_0_13_221 () Real)
(declare-fun l_0_13_219 () Real)
(declare-fun l_0_13_220 () Real)
(declare-fun l_0_13_218 () Real)
(declare-fun l_0_13_2 () Real)
(declare-fun l_0_13_183 () Real)
(declare-fun l_0_13_182 () Real)
(declare-fun l_0_13_147 () Real)
(declare-fun l_0_13_146 () Real)
(declare-fun l_0_13_485 () Real)
(declare-fun l_0_13_471 () Real)
(declare-fun l_0_13_484 () Real)
(declare-fun l_0_13_470 () Real)
(declare-fun l_0_13_449 () Real)
(declare-fun l_0_13_435 () Real)
(declare-fun l_0_13_448 () Real)
(declare-fun l_0_13_434 () Real)
(declare-fun l_0_13_413 () Real)
(declare-fun l_0_13_399 () Real)
(declare-fun l_0_13_412 () Real)
(declare-fun l_0_13_398 () Real)
(declare-fun l_0_13_377 () Real)
(declare-fun l_0_13_363 () Real)
(declare-fun l_0_13_376 () Real)
(declare-fun l_0_13_362 () Real)
(declare-fun l_0_13_341 () Real)
(declare-fun l_0_13_327 () Real)
(declare-fun l_0_13_340 () Real)
(declare-fun l_0_13_326 () Real)
(declare-fun l_0_13_291 () Real)
(declare-fun l_0_13_290 () Real)
(declare-fun l_0_13_75 () Real)
(declare-fun l_0_13_74 () Real)
(declare-fun l_0_13_503 () Real)
(declare-fun l_0_13_496 () Real)
(declare-fun l_0_13_502 () Real)
(declare-fun l_0_13_495 () Real)
(declare-fun l_0_13_501 () Real)
(declare-fun l_0_13_494 () Real)
(declare-fun l_0_13_500 () Real)
(declare-fun l_0_13_493 () Real)
(declare-fun l_0_13_492 () Real)
(declare-fun l_0_13_491 () Real)
(declare-fun l_0_13_490 () Real)
(declare-fun l_0_13_467 () Real)
(declare-fun l_0_13_460 () Real)
(declare-fun l_0_13_466 () Real)
(declare-fun l_0_13_459 () Real)
(declare-fun l_0_13_465 () Real)
(declare-fun l_0_13_458 () Real)
(declare-fun l_0_13_464 () Real)
(declare-fun l_0_13_457 () Real)
(declare-fun l_0_13_456 () Real)
(declare-fun l_0_13_455 () Real)
(declare-fun l_0_13_454 () Real)
(declare-fun l_0_13_431 () Real)
(declare-fun l_0_13_424 () Real)
(declare-fun l_0_13_430 () Real)
(declare-fun l_0_13_423 () Real)
(declare-fun l_0_13_429 () Real)
(declare-fun l_0_13_422 () Real)
(declare-fun l_0_13_428 () Real)
(declare-fun l_0_13_421 () Real)
(declare-fun l_0_13_420 () Real)
(declare-fun l_0_13_419 () Real)
(declare-fun l_0_13_418 () Real)
(declare-fun l_0_13_395 () Real)
(declare-fun l_0_13_388 () Real)
(declare-fun l_0_13_394 () Real)
(declare-fun l_0_13_387 () Real)
(declare-fun l_0_13_393 () Real)
(declare-fun l_0_13_386 () Real)
(declare-fun l_0_13_392 () Real)
(declare-fun l_0_13_385 () Real)
(declare-fun l_0_13_384 () Real)
(declare-fun l_0_13_383 () Real)
(declare-fun l_0_13_382 () Real)
(declare-fun l_0_13_359 () Real)
(declare-fun l_0_13_352 () Real)
(declare-fun l_0_13_358 () Real)
(declare-fun l_0_13_351 () Real)
(declare-fun l_0_13_357 () Real)
(declare-fun l_0_13_350 () Real)
(declare-fun l_0_13_356 () Real)
(declare-fun l_0_13_349 () Real)
(declare-fun l_0_13_348 () Real)
(declare-fun l_0_13_347 () Real)
(declare-fun l_0_13_346 () Real)
(declare-fun l_0_13_282 () Real)
(declare-fun l_0_13_255 () Real)
(declare-fun l_0_13_281 () Real)
(declare-fun l_0_13_254 () Real)
(declare-fun l_0_13_239 () Real)
(declare-fun l_0_13_238 () Real)
(declare-fun l_0_13_111 () Real)
(declare-fun l_0_13_110 () Real)
(declare-fun l_0_13_37 () Real)
(declare-fun l_0_13_181 () Real)
(declare-fun l_0_13_145 () Real)
(declare-fun l_0_13_1 () Real)
(declare-fun l_0_13_319 () Real)
(declare-fun l_0_13_294 () Real)
(declare-fun l_0_13_318 () Real)
(declare-fun l_0_13_293 () Real)
(declare-fun l_0_13_317 () Real)
(declare-fun l_0_13_292 () Real)
(declare-fun l_0_13_217 () Real)
(declare-fun l_0_13_139 () Real)
(declare-fun l_0_13_114 () Real)
(declare-fun l_0_13_138 () Real)
(declare-fun l_0_13_113 () Real)
(declare-fun l_0_13_137 () Real)
(declare-fun l_0_13_112 () Real)
(declare-fun l_0_13_78 () Real)
(declare-fun l_0_13_103 () Real)
(declare-fun l_0_13_77 () Real)
(declare-fun l_0_13_102 () Real)
(declare-fun l_0_13_76 () Real)
(declare-fun l_0_13_101 () Real)
(declare-fun l_0_13_40 () Real)
(declare-fun l_0_13_184 () Real)
(declare-fun l_0_13_148 () Real)
(declare-fun l_0_13_4 () Real)
(declare-fun l_0_13_43 () Real)
(declare-fun l_0_13_187 () Real)
(declare-fun l_0_13_151 () Real)
(declare-fun l_0_13_7 () Real)
(declare-fun l_0_13_47 () Real)
(declare-fun l_0_13_191 () Real)
(declare-fun l_0_13_155 () Real)
(declare-fun l_0_13_11 () Real)
(declare-fun l_0_13_52 () Real)
(declare-fun l_0_13_196 () Real)
(declare-fun l_0_13_160 () Real)
(declare-fun l_0_13_16 () Real)
(declare-fun l_0_13_73 () Real)
(declare-fun l_0_13_58 () Real)
(declare-fun l_0_13_202 () Real)
(declare-fun l_0_13_166 () Real)
(declare-fun l_0_13_109 () Real)
(declare-fun l_0_13_22 () Real)
(declare-fun l_0_13_65 () Real)
(declare-fun l_0_13_209 () Real)
(declare-fun l_0_13_173 () Real)
(declare-fun l_0_13_29 () Real)
(declare-fun l_0_13_41 () Real)
(declare-fun l_0_13_5 () Real)
(declare-fun l_0_13_222 () Real)
(declare-fun l_0_13_185 () Real)
(declare-fun l_0_13_149 () Real)
(declare-fun l_0_13_67 () Real)
(declare-fun l_0_13_42 () Real)
(declare-fun l_0_13_66 () Real)
(declare-fun l_0_13_44 () Real)
(declare-fun l_0_13_6 () Real)
(declare-fun l_0_13_31 () Real)
(declare-fun l_0_13_30 () Real)
(declare-fun l_0_13_8 () Real)
(declare-fun l_0_13_225 () Real)
(declare-fun l_0_13_224 () Real)
(declare-fun l_0_13_223 () Real)
(declare-fun l_0_13_188 () Real)
(declare-fun l_0_13_152 () Real)
(declare-fun l_0_13_48 () Real)
(declare-fun l_0_13_283 () Real)
(declare-fun l_0_13_258 () Real)
(declare-fun l_0_13_257 () Real)
(declare-fun l_0_13_256 () Real)
(declare-fun l_0_13_229 () Real)
(declare-fun l_0_13_228 () Real)
(declare-fun l_0_13_227 () Real)
(declare-fun l_0_13_192 () Real)
(declare-fun l_0_13_156 () Real)
(declare-fun l_0_13_12 () Real)
(declare-fun l_0_13_53 () Real)
(declare-fun l_0_13_234 () Real)
(declare-fun l_0_13_233 () Real)
(declare-fun l_0_13_232 () Real)
(declare-fun l_0_13_211 () Real)
(declare-fun l_0_13_186 () Real)
(declare-fun l_0_13_210 () Real)
(declare-fun l_0_13_197 () Real)
(declare-fun l_0_13_17 () Real)
(declare-fun l_0_13_175 () Real)
(declare-fun l_0_13_150 () Real)
(declare-fun l_0_13_174 () Real)
(declare-fun l_0_13_161 () Real)
(declare-fun l_0_13_59 () Real)
(declare-fun l_0_13_23 () Real)
(declare-fun l_0_13_240 () Real)
(declare-fun l_0_13_203 () Real)
(declare-fun l_0_13_167 () Real)
(declare-fun l_0_13_247 () Real)
(declare-fun l_0_13_246 () Real)
(declare-fun l_0_13_245 () Real)
(declare-fun l_0_13_9 () Real)
(declare-fun l_0_13_45 () Real)
(declare-fun l_0_13_189 () Real)
(declare-fun l_0_13_153 () Real)
(declare-fun l_0_13_49 () Real)
(declare-fun l_0_13_193 () Real)
(declare-fun l_0_13_157 () Real)
(declare-fun l_0_13_13 () Real)
(declare-fun l_0_13_54 () Real)
(declare-fun l_0_13_198 () Real)
(declare-fun l_0_13_18 () Real)
(declare-fun l_0_13_162 () Real)
(declare-fun l_0_13_60 () Real)
(declare-fun l_0_13_24 () Real)
(declare-fun l_0_13_204 () Real)
(declare-fun l_0_13_168 () Real)
(declare-fun l_0_13_46 () Real)
(declare-fun l_0_13_190 () Real)
(declare-fun l_0_13_154 () Real)
(declare-fun l_0_13_10 () Real)
(declare-fun l_0_13_50 () Real)
(declare-fun l_0_13_194 () Real)
(declare-fun l_0_13_158 () Real)
(declare-fun l_0_13_14 () Real)
(declare-fun l_0_13_55 () Real)
(declare-fun l_0_13_199 () Real)
(declare-fun l_0_13_163 () Real)
(declare-fun l_0_13_19 () Real)
(declare-fun l_0_13_81 () Real)
(declare-fun l_0_13_80 () Real)
(declare-fun l_0_13_79 () Real)
(declare-fun l_0_13_61 () Real)
(declare-fun l_0_13_205 () Real)
(declare-fun l_0_13_169 () Real)
(declare-fun l_0_13_117 () Real)
(declare-fun l_0_13_116 () Real)
(declare-fun l_0_13_115 () Real)
(declare-fun l_0_13_25 () Real)
(declare-fun l_0_13_68 () Real)
(declare-fun l_0_13_212 () Real)
(declare-fun l_0_13_176 () Real)
(declare-fun l_0_13_32 () Real)
(declare-fun l_0_13_51 () Real)
(declare-fun l_0_13_195 () Real)
(declare-fun l_0_13_159 () Real)
(declare-fun l_0_13_15 () Real)
(declare-fun l_0_13_56 () Real)
(declare-fun l_0_13_200 () Real)
(declare-fun l_0_13_164 () Real)
(declare-fun l_0_13_20 () Real)
(declare-fun l_0_13_85 () Real)
(declare-fun l_0_13_84 () Real)
(declare-fun l_0_13_83 () Real)
(declare-fun l_0_13_62 () Real)
(declare-fun l_0_13_206 () Real)
(declare-fun l_0_13_170 () Real)
(declare-fun l_0_13_26 () Real)
(declare-fun l_0_13_121 () Real)
(declare-fun l_0_13_120 () Real)
(declare-fun l_0_13_119 () Real)
(declare-fun l_0_13_69 () Real)
(declare-fun l_0_13_213 () Real)
(declare-fun l_0_13_177 () Real)
(declare-fun l_0_13_33 () Real)
(declare-fun l_0_13_57 () Real)
(declare-fun l_0_13_21 () Real)
(declare-fun l_0_13_201 () Real)
(declare-fun l_0_13_165 () Real)
(declare-fun l_0_13_90 () Real)
(declare-fun l_0_13_89 () Real)
(declare-fun l_0_13_88 () Real)
(declare-fun l_0_13_63 () Real)
(declare-fun l_0_13_27 () Real)
(declare-fun l_0_13_207 () Real)
(declare-fun l_0_13_171 () Real)
(declare-fun l_0_13_126 () Real)
(declare-fun l_0_13_125 () Real)
(declare-fun l_0_13_124 () Real)
(declare-fun l_0_13_70 () Real)
(declare-fun l_0_13_34 () Real)
(declare-fun l_0_13_214 () Real)
(declare-fun l_0_13_178 () Real)
(declare-fun l_0_13_96 () Real)
(declare-fun l_0_13_95 () Real)
(declare-fun l_0_13_94 () Real)
(declare-fun l_0_13_64 () Real)
(declare-fun l_0_13_28 () Real)
(declare-fun l_0_13_208 () Real)
(declare-fun l_0_13_172 () Real)
(declare-fun l_0_13_132 () Real)
(declare-fun l_0_13_131 () Real)
(declare-fun l_0_13_130 () Real)
(declare-fun l_0_13_71 () Real)
(declare-fun l_0_13_35 () Real)
(declare-fun l_0_13_215 () Real)
(declare-fun l_0_13_179 () Real)
(declare-fun l_0_13_72 () Real)
(declare-fun l_0_13_36 () Real)
(declare-fun l_0_13_216 () Real)
(declare-fun l_0_13_180 () Real)
(declare-fun l_0_13_289 () Real)
(declare-fun l_0_13_295 () Real)
(declare-fun l_0_13_475 () Real)
(declare-fun l_0_13_469 () Real)
(declare-fun l_0_13_439 () Real)
(declare-fun l_0_13_433 () Real)
(declare-fun l_0_13_403 () Real)
(declare-fun l_0_13_397 () Real)
(declare-fun l_0_13_367 () Real)
(declare-fun l_0_13_361 () Real)
(declare-fun l_0_13_331 () Real)
(declare-fun l_0_13_325 () Real)
(declare-fun l_0_13_296 () Real)
(declare-fun l_0_13_297 () Real)
(declare-fun l_0_13_82 () Real)
(declare-fun l_0_13_298 () Real)
(declare-fun l_0_13_118 () Real)
(declare-fun l_0_13_86 () Real)
(declare-fun l_0_13_302 () Real)
(declare-fun l_0_13_301 () Real)
(declare-fun l_0_13_300 () Real)
(declare-fun l_0_13_299 () Real)
(declare-fun l_0_13_259 () Real)
(declare-fun l_0_13_253 () Real)
(declare-fun l_0_13_122 () Real)
(declare-fun l_0_13_91 () Real)
(declare-fun l_0_13_307 () Real)
(declare-fun l_0_13_306 () Real)
(declare-fun l_0_13_305 () Real)
(declare-fun l_0_13_304 () Real)
(declare-fun l_0_13_127 () Real)
(declare-fun l_0_13_97 () Real)
(declare-fun l_0_13_313 () Real)
(declare-fun l_0_13_312 () Real)
(declare-fun l_0_13_311 () Real)
(declare-fun l_0_13_310 () Real)
(declare-fun l_0_13_133 () Real)
(declare-fun l_0_13_320 () Real)
(declare-fun l_0_13_140 () Real)
(declare-fun l_0_13_104 () Real)
(declare-fun l_0_13_476 () Real)
(declare-fun l_0_13_440 () Real)
(declare-fun l_0_13_404 () Real)
(declare-fun l_0_13_368 () Real)
(declare-fun l_0_13_332 () Real)
(declare-fun l_0_13_477 () Real)
(declare-fun l_0_13_441 () Real)
(declare-fun l_0_13_405 () Real)
(declare-fun l_0_13_369 () Real)
(declare-fun l_0_13_333 () Real)
(declare-fun l_0_13_478 () Real)
(declare-fun l_0_13_442 () Real)
(declare-fun l_0_13_406 () Real)
(declare-fun l_0_13_370 () Real)
(declare-fun l_0_13_334 () Real)
(declare-fun l_0_13_482 () Real)
(declare-fun l_0_13_481 () Real)
(declare-fun l_0_13_480 () Real)
(declare-fun l_0_13_479 () Real)
(declare-fun l_0_13_446 () Real)
(declare-fun l_0_13_445 () Real)
(declare-fun l_0_13_444 () Real)
(declare-fun l_0_13_443 () Real)
(declare-fun l_0_13_410 () Real)
(declare-fun l_0_13_409 () Real)
(declare-fun l_0_13_408 () Real)
(declare-fun l_0_13_407 () Real)
(declare-fun l_0_13_374 () Real)
(declare-fun l_0_13_373 () Real)
(declare-fun l_0_13_372 () Real)
(declare-fun l_0_13_371 () Real)
(declare-fun l_0_13_338 () Real)
(declare-fun l_0_13_337 () Real)
(declare-fun l_0_13_336 () Real)
(declare-fun l_0_13_335 () Real)
(declare-fun l_0_13_260 () Real)
(declare-fun l_0_13_487 () Real)
(declare-fun l_0_13_486 () Real)
(declare-fun l_0_13_451 () Real)
(declare-fun l_0_13_450 () Real)
(declare-fun l_0_13_415 () Real)
(declare-fun l_0_13_414 () Real)
(declare-fun l_0_13_379 () Real)
(declare-fun l_0_13_378 () Real)
(declare-fun l_0_13_343 () Real)
(declare-fun l_0_13_342 () Real)
(declare-fun l_0_13_261 () Real)
(declare-fun l_0_13_262 () Real)
(declare-fun l_0_13_226 () Real)
(declare-fun l_0_13_303 () Real)
(declare-fun l_0_13_266 () Real)
(declare-fun l_0_13_265 () Real)
(declare-fun l_0_13_264 () Real)
(declare-fun l_0_13_263 () Real)
(declare-fun l_0_13_308 () Real)
(declare-fun l_0_13_271 () Real)
(declare-fun l_0_13_270 () Real)
(declare-fun l_0_13_269 () Real)
(declare-fun l_0_13_268 () Real)
(declare-fun l_0_13_314 () Real)
(declare-fun l_0_13_277 () Real)
(declare-fun l_0_13_276 () Real)
(declare-fun l_0_13_275 () Real)
(declare-fun l_0_13_274 () Real)
(declare-fun l_0_13_321 () Real)
(declare-fun l_0_13_284 () Real)
(declare-fun l_0_13_230 () Real)
(declare-fun l_0_13_309 () Real)
(declare-fun l_0_13_315 () Real)
(declare-fun l_0_13_322 () Real)
(declare-fun l_0_13_235 () Real)
(declare-fun l_0_13_316 () Real)
(declare-fun l_0_13_323 () Real)
(declare-fun l_0_13_241 () Real)
(declare-fun l_0_13_324 () Real)
(declare-fun l_0_13_248 () Real)
(declare-fun l_0_13_143 () Real)
(declare-fun l_0_13_136 () Real)
(declare-fun l_0_13_142 () Real)
(declare-fun l_0_13_135 () Real)
(declare-fun l_0_13_141 () Real)
(declare-fun l_0_13_134 () Real)
(declare-fun l_0_13_99 () Real)
(declare-fun l_0_13_106 () Real)
(declare-fun l_0_13_98 () Real)
(declare-fun l_0_13_105 () Real)
(declare-fun l_0_13_107 () Real)
(declare-fun l_0_13_100 () Real)
(declare-fun l_0_13_287 () Real)
(declare-fun l_0_13_280 () Real)
(declare-fun l_0_13_286 () Real)
(declare-fun l_0_13_279 () Real)
(declare-fun l_0_13_285 () Real)
(declare-fun l_0_13_278 () Real)
(declare-fun l_0_13_267 () Real)
(declare-fun l_0_13_242 () Real)
(declare-fun l_0_13_231 () Real)
(declare-fun l_0_13_273 () Real)
(declare-fun l_0_13_272 () Real)
(declare-fun l_0_13_243 () Real)
(declare-fun l_0_13_237 () Real)
(declare-fun l_0_13_236 () Real)
(declare-fun l_0_13_244 () Real)
(declare-fun l_0_13_288 () Real)
(declare-fun l_0_13_251 () Real)
(declare-fun l_0_13_250 () Real)
(declare-fun l_0_13_249 () Real)
(declare-fun l_0_13_87 () Real)
(declare-fun l_0_13_123 () Real)
(declare-fun l_0_13_92 () Real)
(declare-fun l_0_13_128 () Real)
(declare-fun l_0_13_93 () Real)
(declare-fun l_0_13_129 () Real)
(declare-fun l_0_13_144 () Real)
(declare-fun l_0_13_108 () Real)
(declare-fun l_0_13_488 () Real)
(declare-fun l_0_13_483 () Real)
(declare-fun l_0_13_452 () Real)
(declare-fun l_0_13_447 () Real)
(declare-fun l_0_13_416 () Real)
(declare-fun l_0_13_411 () Real)
(declare-fun l_0_13_380 () Real)
(declare-fun l_0_13_375 () Real)
(declare-fun l_0_13_344 () Real)
(declare-fun l_0_13_339 () Real)
(declare-fun l_0_13_489 () Real)
(declare-fun l_0_13_453 () Real)
(declare-fun l_0_13_417 () Real)
(declare-fun l_0_13_381 () Real)
(declare-fun l_0_13_345 () Real)
(declare-fun l_0_13_504 () Real)
(declare-fun l_0_13_468 () Real)
(declare-fun l_0_13_432 () Real)
(declare-fun l_0_13_396 () Real)
(declare-fun l_0_13_360 () Real)
(declare-fun l_0_13_252 () Real)
(declare-fun l_0_14_521 () Real)
(declare-fun l_0_14_507 () Real)
(declare-fun l_0_14_520 () Real)
(declare-fun l_0_14_506 () Real)
(declare-fun l_0_14_485 () Real)
(declare-fun l_0_14_471 () Real)
(declare-fun l_0_14_484 () Real)
(declare-fun l_0_14_470 () Real)
(declare-fun l_0_14_449 () Real)
(declare-fun l_0_14_435 () Real)
(declare-fun l_0_14_448 () Real)
(declare-fun l_0_14_434 () Real)
(declare-fun l_0_14_413 () Real)
(declare-fun l_0_14_399 () Real)
(declare-fun l_0_14_412 () Real)
(declare-fun l_0_14_398 () Real)
(declare-fun l_0_14_377 () Real)
(declare-fun l_0_14_363 () Real)
(declare-fun l_0_14_376 () Real)
(declare-fun l_0_14_362 () Real)
(declare-fun l_0_14_341 () Real)
(declare-fun l_0_14_327 () Real)
(declare-fun l_0_14_340 () Real)
(declare-fun l_0_14_326 () Real)
(declare-fun l_0_14_291 () Real)
(declare-fun l_0_14_290 () Real)
(declare-fun l_0_14_183 () Real)
(declare-fun l_0_14_182 () Real)
(declare-fun l_0_14_147 () Real)
(declare-fun l_0_14_146 () Real)
(declare-fun l_0_14_535 () Real)
(declare-fun l_0_14_510 () Real)
(declare-fun l_0_14_534 () Real)
(declare-fun l_0_14_509 () Real)
(declare-fun l_0_14_533 () Real)
(declare-fun l_0_14_508 () Real)
(declare-fun l_0_14_499 () Real)
(declare-fun l_0_14_474 () Real)
(declare-fun l_0_14_498 () Real)
(declare-fun l_0_14_473 () Real)
(declare-fun l_0_14_497 () Real)
(declare-fun l_0_14_472 () Real)
(declare-fun l_0_14_463 () Real)
(declare-fun l_0_14_438 () Real)
(declare-fun l_0_14_462 () Real)
(declare-fun l_0_14_437 () Real)
(declare-fun l_0_14_461 () Real)
(declare-fun l_0_14_436 () Real)
(declare-fun l_0_14_427 () Real)
(declare-fun l_0_14_402 () Real)
(declare-fun l_0_14_426 () Real)
(declare-fun l_0_14_401 () Real)
(declare-fun l_0_14_425 () Real)
(declare-fun l_0_14_400 () Real)
(declare-fun l_0_14_39 () Real)
(declare-fun l_0_14_38 () Real)
(declare-fun l_0_14_391 () Real)
(declare-fun l_0_14_366 () Real)
(declare-fun l_0_14_390 () Real)
(declare-fun l_0_14_365 () Real)
(declare-fun l_0_14_389 () Real)
(declare-fun l_0_14_364 () Real)
(declare-fun l_0_14_355 () Real)
(declare-fun l_0_14_330 () Real)
(declare-fun l_0_14_354 () Real)
(declare-fun l_0_14_329 () Real)
(declare-fun l_0_14_353 () Real)
(declare-fun l_0_14_328 () Real)
(declare-fun l_0_14_3 () Real)
(declare-fun l_0_14_221 () Real)
(declare-fun l_0_14_219 () Real)
(declare-fun l_0_14_220 () Real)
(declare-fun l_0_14_218 () Real)
(declare-fun l_0_14_2 () Real)
(declare-fun l_0_14_37 () Real)
(declare-fun l_0_14_181 () Real)
(declare-fun l_0_14_145 () Real)
(declare-fun l_0_14_1 () Real)
(declare-fun l_0_14_319 () Real)
(declare-fun l_0_14_294 () Real)
(declare-fun l_0_14_318 () Real)
(declare-fun l_0_14_293 () Real)
(declare-fun l_0_14_317 () Real)
(declare-fun l_0_14_292 () Real)
(declare-fun l_0_14_217 () Real)
(declare-fun l_0_14_139 () Real)
(declare-fun l_0_14_114 () Real)
(declare-fun l_0_14_138 () Real)
(declare-fun l_0_14_113 () Real)
(declare-fun l_0_14_137 () Real)
(declare-fun l_0_14_112 () Real)
(declare-fun l_0_14_78 () Real)
(declare-fun l_0_14_103 () Real)
(declare-fun l_0_14_77 () Real)
(declare-fun l_0_14_102 () Real)
(declare-fun l_0_14_76 () Real)
(declare-fun l_0_14_101 () Real)
(declare-fun l_0_14_40 () Real)
(declare-fun l_0_14_184 () Real)
(declare-fun l_0_14_148 () Real)
(declare-fun l_0_14_4 () Real)
(declare-fun l_0_14_43 () Real)
(declare-fun l_0_14_187 () Real)
(declare-fun l_0_14_151 () Real)
(declare-fun l_0_14_7 () Real)
(declare-fun l_0_14_47 () Real)
(declare-fun l_0_14_191 () Real)
(declare-fun l_0_14_155 () Real)
(declare-fun l_0_14_11 () Real)
(declare-fun l_0_14_52 () Real)
(declare-fun l_0_14_196 () Real)
(declare-fun l_0_14_160 () Real)
(declare-fun l_0_14_16 () Real)
(declare-fun l_0_14_73 () Real)
(declare-fun l_0_14_58 () Real)
(declare-fun l_0_14_202 () Real)
(declare-fun l_0_14_166 () Real)
(declare-fun l_0_14_109 () Real)
(declare-fun l_0_14_22 () Real)
(declare-fun l_0_14_65 () Real)
(declare-fun l_0_14_209 () Real)
(declare-fun l_0_14_173 () Real)
(declare-fun l_0_14_29 () Real)
(declare-fun l_0_14_41 () Real)
(declare-fun l_0_14_5 () Real)
(declare-fun l_0_14_222 () Real)
(declare-fun l_0_14_185 () Real)
(declare-fun l_0_14_149 () Real)
(declare-fun l_0_14_67 () Real)
(declare-fun l_0_14_42 () Real)
(declare-fun l_0_14_66 () Real)
(declare-fun l_0_14_44 () Real)
(declare-fun l_0_14_6 () Real)
(declare-fun l_0_14_31 () Real)
(declare-fun l_0_14_30 () Real)
(declare-fun l_0_14_8 () Real)
(declare-fun l_0_14_225 () Real)
(declare-fun l_0_14_224 () Real)
(declare-fun l_0_14_223 () Real)
(declare-fun l_0_14_188 () Real)
(declare-fun l_0_14_152 () Real)
(declare-fun l_0_14_48 () Real)
(declare-fun l_0_14_283 () Real)
(declare-fun l_0_14_258 () Real)
(declare-fun l_0_14_282 () Real)
(declare-fun l_0_14_257 () Real)
(declare-fun l_0_14_281 () Real)
(declare-fun l_0_14_256 () Real)
(declare-fun l_0_14_229 () Real)
(declare-fun l_0_14_228 () Real)
(declare-fun l_0_14_227 () Real)
(declare-fun l_0_14_192 () Real)
(declare-fun l_0_14_156 () Real)
(declare-fun l_0_14_12 () Real)
(declare-fun l_0_14_53 () Real)
(declare-fun l_0_14_234 () Real)
(declare-fun l_0_14_233 () Real)
(declare-fun l_0_14_232 () Real)
(declare-fun l_0_14_211 () Real)
(declare-fun l_0_14_186 () Real)
(declare-fun l_0_14_210 () Real)
(declare-fun l_0_14_197 () Real)
(declare-fun l_0_14_17 () Real)
(declare-fun l_0_14_175 () Real)
(declare-fun l_0_14_150 () Real)
(declare-fun l_0_14_174 () Real)
(declare-fun l_0_14_161 () Real)
(declare-fun l_0_14_75 () Real)
(declare-fun l_0_14_74 () Real)
(declare-fun l_0_14_59 () Real)
(declare-fun l_0_14_23 () Real)
(declare-fun l_0_14_240 () Real)
(declare-fun l_0_14_239 () Real)
(declare-fun l_0_14_238 () Real)
(declare-fun l_0_14_203 () Real)
(declare-fun l_0_14_167 () Real)
(declare-fun l_0_14_111 () Real)
(declare-fun l_0_14_110 () Real)
(declare-fun l_0_14_247 () Real)
(declare-fun l_0_14_246 () Real)
(declare-fun l_0_14_245 () Real)
(declare-fun l_0_14_9 () Real)
(declare-fun l_0_14_45 () Real)
(declare-fun l_0_14_189 () Real)
(declare-fun l_0_14_153 () Real)
(declare-fun l_0_14_49 () Real)
(declare-fun l_0_14_193 () Real)
(declare-fun l_0_14_157 () Real)
(declare-fun l_0_14_13 () Real)
(declare-fun l_0_14_54 () Real)
(declare-fun l_0_14_198 () Real)
(declare-fun l_0_14_18 () Real)
(declare-fun l_0_14_162 () Real)
(declare-fun l_0_14_60 () Real)
(declare-fun l_0_14_24 () Real)
(declare-fun l_0_14_204 () Real)
(declare-fun l_0_14_168 () Real)
(declare-fun l_0_14_46 () Real)
(declare-fun l_0_14_190 () Real)
(declare-fun l_0_14_154 () Real)
(declare-fun l_0_14_10 () Real)
(declare-fun l_0_14_50 () Real)
(declare-fun l_0_14_194 () Real)
(declare-fun l_0_14_158 () Real)
(declare-fun l_0_14_14 () Real)
(declare-fun l_0_14_55 () Real)
(declare-fun l_0_14_199 () Real)
(declare-fun l_0_14_163 () Real)
(declare-fun l_0_14_19 () Real)
(declare-fun l_0_14_81 () Real)
(declare-fun l_0_14_80 () Real)
(declare-fun l_0_14_79 () Real)
(declare-fun l_0_14_61 () Real)
(declare-fun l_0_14_205 () Real)
(declare-fun l_0_14_169 () Real)
(declare-fun l_0_14_117 () Real)
(declare-fun l_0_14_116 () Real)
(declare-fun l_0_14_115 () Real)
(declare-fun l_0_14_25 () Real)
(declare-fun l_0_14_68 () Real)
(declare-fun l_0_14_212 () Real)
(declare-fun l_0_14_176 () Real)
(declare-fun l_0_14_32 () Real)
(declare-fun l_0_14_51 () Real)
(declare-fun l_0_14_195 () Real)
(declare-fun l_0_14_159 () Real)
(declare-fun l_0_14_15 () Real)
(declare-fun l_0_14_56 () Real)
(declare-fun l_0_14_200 () Real)
(declare-fun l_0_14_164 () Real)
(declare-fun l_0_14_20 () Real)
(declare-fun l_0_14_85 () Real)
(declare-fun l_0_14_84 () Real)
(declare-fun l_0_14_83 () Real)
(declare-fun l_0_14_62 () Real)
(declare-fun l_0_14_206 () Real)
(declare-fun l_0_14_170 () Real)
(declare-fun l_0_14_26 () Real)
(declare-fun l_0_14_121 () Real)
(declare-fun l_0_14_120 () Real)
(declare-fun l_0_14_119 () Real)
(declare-fun l_0_14_69 () Real)
(declare-fun l_0_14_213 () Real)
(declare-fun l_0_14_177 () Real)
(declare-fun l_0_14_33 () Real)
(declare-fun l_0_14_57 () Real)
(declare-fun l_0_14_21 () Real)
(declare-fun l_0_14_201 () Real)
(declare-fun l_0_14_165 () Real)
(declare-fun l_0_14_90 () Real)
(declare-fun l_0_14_89 () Real)
(declare-fun l_0_14_88 () Real)
(declare-fun l_0_14_63 () Real)
(declare-fun l_0_14_27 () Real)
(declare-fun l_0_14_207 () Real)
(declare-fun l_0_14_171 () Real)
(declare-fun l_0_14_126 () Real)
(declare-fun l_0_14_125 () Real)
(declare-fun l_0_14_124 () Real)
(declare-fun l_0_14_70 () Real)
(declare-fun l_0_14_34 () Real)
(declare-fun l_0_14_214 () Real)
(declare-fun l_0_14_178 () Real)
(declare-fun l_0_14_96 () Real)
(declare-fun l_0_14_95 () Real)
(declare-fun l_0_14_94 () Real)
(declare-fun l_0_14_64 () Real)
(declare-fun l_0_14_28 () Real)
(declare-fun l_0_14_208 () Real)
(declare-fun l_0_14_172 () Real)
(declare-fun l_0_14_132 () Real)
(declare-fun l_0_14_131 () Real)
(declare-fun l_0_14_130 () Real)
(declare-fun l_0_14_71 () Real)
(declare-fun l_0_14_35 () Real)
(declare-fun l_0_14_215 () Real)
(declare-fun l_0_14_179 () Real)
(declare-fun l_0_14_72 () Real)
(declare-fun l_0_14_36 () Real)
(declare-fun l_0_14_216 () Real)
(declare-fun l_0_14_180 () Real)
(declare-fun l_0_14_289 () Real)
(declare-fun l_0_14_295 () Real)
(declare-fun l_0_14_511 () Real)
(declare-fun l_0_14_505 () Real)
(declare-fun l_0_14_475 () Real)
(declare-fun l_0_14_469 () Real)
(declare-fun l_0_14_439 () Real)
(declare-fun l_0_14_433 () Real)
(declare-fun l_0_14_403 () Real)
(declare-fun l_0_14_397 () Real)
(declare-fun l_0_14_367 () Real)
(declare-fun l_0_14_361 () Real)
(declare-fun l_0_14_331 () Real)
(declare-fun l_0_14_325 () Real)
(declare-fun l_0_14_296 () Real)
(declare-fun l_0_14_297 () Real)
(declare-fun l_0_14_82 () Real)
(declare-fun l_0_14_298 () Real)
(declare-fun l_0_14_118 () Real)
(declare-fun l_0_14_86 () Real)
(declare-fun l_0_14_302 () Real)
(declare-fun l_0_14_301 () Real)
(declare-fun l_0_14_300 () Real)
(declare-fun l_0_14_299 () Real)
(declare-fun l_0_14_259 () Real)
(declare-fun l_0_14_253 () Real)
(declare-fun l_0_14_122 () Real)
(declare-fun l_0_14_91 () Real)
(declare-fun l_0_14_307 () Real)
(declare-fun l_0_14_306 () Real)
(declare-fun l_0_14_305 () Real)
(declare-fun l_0_14_304 () Real)
(declare-fun l_0_14_127 () Real)
(declare-fun l_0_14_97 () Real)
(declare-fun l_0_14_313 () Real)
(declare-fun l_0_14_312 () Real)
(declare-fun l_0_14_311 () Real)
(declare-fun l_0_14_310 () Real)
(declare-fun l_0_14_133 () Real)
(declare-fun l_0_14_320 () Real)
(declare-fun l_0_14_140 () Real)
(declare-fun l_0_14_104 () Real)
(declare-fun l_0_14_512 () Real)
(declare-fun l_0_14_476 () Real)
(declare-fun l_0_14_440 () Real)
(declare-fun l_0_14_404 () Real)
(declare-fun l_0_14_368 () Real)
(declare-fun l_0_14_332 () Real)
(declare-fun l_0_14_513 () Real)
(declare-fun l_0_14_477 () Real)
(declare-fun l_0_14_441 () Real)
(declare-fun l_0_14_405 () Real)
(declare-fun l_0_14_369 () Real)
(declare-fun l_0_14_333 () Real)
(declare-fun l_0_14_514 () Real)
(declare-fun l_0_14_478 () Real)
(declare-fun l_0_14_442 () Real)
(declare-fun l_0_14_406 () Real)
(declare-fun l_0_14_370 () Real)
(declare-fun l_0_14_334 () Real)
(declare-fun l_0_14_518 () Real)
(declare-fun l_0_14_517 () Real)
(declare-fun l_0_14_516 () Real)
(declare-fun l_0_14_515 () Real)
(declare-fun l_0_14_482 () Real)
(declare-fun l_0_14_481 () Real)
(declare-fun l_0_14_480 () Real)
(declare-fun l_0_14_479 () Real)
(declare-fun l_0_14_446 () Real)
(declare-fun l_0_14_445 () Real)
(declare-fun l_0_14_444 () Real)
(declare-fun l_0_14_443 () Real)
(declare-fun l_0_14_410 () Real)
(declare-fun l_0_14_409 () Real)
(declare-fun l_0_14_408 () Real)
(declare-fun l_0_14_407 () Real)
(declare-fun l_0_14_374 () Real)
(declare-fun l_0_14_373 () Real)
(declare-fun l_0_14_372 () Real)
(declare-fun l_0_14_371 () Real)
(declare-fun l_0_14_338 () Real)
(declare-fun l_0_14_337 () Real)
(declare-fun l_0_14_336 () Real)
(declare-fun l_0_14_335 () Real)
(declare-fun l_0_14_260 () Real)
(declare-fun l_0_14_255 () Real)
(declare-fun l_0_14_254 () Real)
(declare-fun l_0_14_523 () Real)
(declare-fun l_0_14_522 () Real)
(declare-fun l_0_14_487 () Real)
(declare-fun l_0_14_486 () Real)
(declare-fun l_0_14_451 () Real)
(declare-fun l_0_14_450 () Real)
(declare-fun l_0_14_415 () Real)
(declare-fun l_0_14_414 () Real)
(declare-fun l_0_14_379 () Real)
(declare-fun l_0_14_378 () Real)
(declare-fun l_0_14_343 () Real)
(declare-fun l_0_14_342 () Real)
(declare-fun l_0_14_529 () Real)
(declare-fun l_0_14_528 () Real)
(declare-fun l_0_14_527 () Real)
(declare-fun l_0_14_526 () Real)
(declare-fun l_0_14_493 () Real)
(declare-fun l_0_14_492 () Real)
(declare-fun l_0_14_491 () Real)
(declare-fun l_0_14_490 () Real)
(declare-fun l_0_14_457 () Real)
(declare-fun l_0_14_456 () Real)
(declare-fun l_0_14_455 () Real)
(declare-fun l_0_14_454 () Real)
(declare-fun l_0_14_421 () Real)
(declare-fun l_0_14_420 () Real)
(declare-fun l_0_14_419 () Real)
(declare-fun l_0_14_418 () Real)
(declare-fun l_0_14_385 () Real)
(declare-fun l_0_14_384 () Real)
(declare-fun l_0_14_383 () Real)
(declare-fun l_0_14_382 () Real)
(declare-fun l_0_14_349 () Real)
(declare-fun l_0_14_348 () Real)
(declare-fun l_0_14_347 () Real)
(declare-fun l_0_14_346 () Real)
(declare-fun l_0_14_536 () Real)
(declare-fun l_0_14_500 () Real)
(declare-fun l_0_14_464 () Real)
(declare-fun l_0_14_428 () Real)
(declare-fun l_0_14_392 () Real)
(declare-fun l_0_14_356 () Real)
(declare-fun l_0_14_261 () Real)
(declare-fun l_0_14_262 () Real)
(declare-fun l_0_14_226 () Real)
(declare-fun l_0_14_303 () Real)
(declare-fun l_0_14_266 () Real)
(declare-fun l_0_14_265 () Real)
(declare-fun l_0_14_264 () Real)
(declare-fun l_0_14_263 () Real)
(declare-fun l_0_14_308 () Real)
(declare-fun l_0_14_271 () Real)
(declare-fun l_0_14_270 () Real)
(declare-fun l_0_14_269 () Real)
(declare-fun l_0_14_268 () Real)
(declare-fun l_0_14_314 () Real)
(declare-fun l_0_14_277 () Real)
(declare-fun l_0_14_276 () Real)
(declare-fun l_0_14_275 () Real)
(declare-fun l_0_14_274 () Real)
(declare-fun l_0_14_321 () Real)
(declare-fun l_0_14_284 () Real)
(declare-fun l_0_14_230 () Real)
(declare-fun l_0_14_309 () Real)
(declare-fun l_0_14_315 () Real)
(declare-fun l_0_14_322 () Real)
(declare-fun l_0_14_235 () Real)
(declare-fun l_0_14_316 () Real)
(declare-fun l_0_14_323 () Real)
(declare-fun l_0_14_241 () Real)
(declare-fun l_0_14_324 () Real)
(declare-fun l_0_14_248 () Real)
(declare-fun l_0_14_143 () Real)
(declare-fun l_0_14_136 () Real)
(declare-fun l_0_14_142 () Real)
(declare-fun l_0_14_135 () Real)
(declare-fun l_0_14_141 () Real)
(declare-fun l_0_14_134 () Real)
(declare-fun l_0_14_99 () Real)
(declare-fun l_0_14_106 () Real)
(declare-fun l_0_14_98 () Real)
(declare-fun l_0_14_105 () Real)
(declare-fun l_0_14_107 () Real)
(declare-fun l_0_14_100 () Real)
(declare-fun l_0_14_539 () Real)
(declare-fun l_0_14_532 () Real)
(declare-fun l_0_14_538 () Real)
(declare-fun l_0_14_531 () Real)
(declare-fun l_0_14_537 () Real)
(declare-fun l_0_14_530 () Real)
(declare-fun l_0_14_503 () Real)
(declare-fun l_0_14_496 () Real)
(declare-fun l_0_14_502 () Real)
(declare-fun l_0_14_495 () Real)
(declare-fun l_0_14_501 () Real)
(declare-fun l_0_14_494 () Real)
(declare-fun l_0_14_467 () Real)
(declare-fun l_0_14_460 () Real)
(declare-fun l_0_14_466 () Real)
(declare-fun l_0_14_459 () Real)
(declare-fun l_0_14_465 () Real)
(declare-fun l_0_14_458 () Real)
(declare-fun l_0_14_431 () Real)
(declare-fun l_0_14_424 () Real)
(declare-fun l_0_14_430 () Real)
(declare-fun l_0_14_423 () Real)
(declare-fun l_0_14_429 () Real)
(declare-fun l_0_14_422 () Real)
(declare-fun l_0_14_395 () Real)
(declare-fun l_0_14_388 () Real)
(declare-fun l_0_14_394 () Real)
(declare-fun l_0_14_387 () Real)
(declare-fun l_0_14_393 () Real)
(declare-fun l_0_14_386 () Real)
(declare-fun l_0_14_359 () Real)
(declare-fun l_0_14_352 () Real)
(declare-fun l_0_14_358 () Real)
(declare-fun l_0_14_351 () Real)
(declare-fun l_0_14_357 () Real)
(declare-fun l_0_14_350 () Real)
(declare-fun l_0_14_287 () Real)
(declare-fun l_0_14_280 () Real)
(declare-fun l_0_14_286 () Real)
(declare-fun l_0_14_279 () Real)
(declare-fun l_0_14_285 () Real)
(declare-fun l_0_14_278 () Real)
(declare-fun l_0_14_267 () Real)
(declare-fun l_0_14_242 () Real)
(declare-fun l_0_14_231 () Real)
(declare-fun l_0_14_273 () Real)
(declare-fun l_0_14_272 () Real)
(declare-fun l_0_14_243 () Real)
(declare-fun l_0_14_237 () Real)
(declare-fun l_0_14_236 () Real)
(declare-fun l_0_14_244 () Real)
(declare-fun l_0_14_288 () Real)
(declare-fun l_0_14_251 () Real)
(declare-fun l_0_14_250 () Real)
(declare-fun l_0_14_249 () Real)
(declare-fun l_0_14_87 () Real)
(declare-fun l_0_14_123 () Real)
(declare-fun l_0_14_92 () Real)
(declare-fun l_0_14_128 () Real)
(declare-fun l_0_14_93 () Real)
(declare-fun l_0_14_129 () Real)
(declare-fun l_0_14_144 () Real)
(declare-fun l_0_14_108 () Real)
(declare-fun l_0_14_524 () Real)
(declare-fun l_0_14_519 () Real)
(declare-fun l_0_14_488 () Real)
(declare-fun l_0_14_483 () Real)
(declare-fun l_0_14_452 () Real)
(declare-fun l_0_14_447 () Real)
(declare-fun l_0_14_416 () Real)
(declare-fun l_0_14_411 () Real)
(declare-fun l_0_14_380 () Real)
(declare-fun l_0_14_375 () Real)
(declare-fun l_0_14_344 () Real)
(declare-fun l_0_14_339 () Real)
(declare-fun l_0_14_525 () Real)
(declare-fun l_0_14_489 () Real)
(declare-fun l_0_14_453 () Real)
(declare-fun l_0_14_417 () Real)
(declare-fun l_0_14_381 () Real)
(declare-fun l_0_14_345 () Real)
(declare-fun l_0_14_540 () Real)
(declare-fun l_0_14_504 () Real)
(declare-fun l_0_14_468 () Real)
(declare-fun l_0_14_432 () Real)
(declare-fun l_0_14_396 () Real)
(declare-fun l_0_14_360 () Real)
(declare-fun l_0_14_252 () Real)
(declare-fun l_0_15_570 () Real)
(declare-fun l_0_15_543 () Real)
(declare-fun l_0_15_569 () Real)
(declare-fun l_0_15_542 () Real)
(declare-fun l_0_15_534 () Real)
(declare-fun l_0_15_507 () Real)
(declare-fun l_0_15_533 () Real)
(declare-fun l_0_15_506 () Real)
(declare-fun l_0_15_498 () Real)
(declare-fun l_0_15_471 () Real)
(declare-fun l_0_15_497 () Real)
(declare-fun l_0_15_470 () Real)
(declare-fun l_0_15_462 () Real)
(declare-fun l_0_15_435 () Real)
(declare-fun l_0_15_461 () Real)
(declare-fun l_0_15_434 () Real)
(declare-fun l_0_15_426 () Real)
(declare-fun l_0_15_399 () Real)
(declare-fun l_0_15_425 () Real)
(declare-fun l_0_15_398 () Real)
(declare-fun l_0_15_390 () Real)
(declare-fun l_0_15_363 () Real)
(declare-fun l_0_15_389 () Real)
(declare-fun l_0_15_362 () Real)
(declare-fun l_0_15_354 () Real)
(declare-fun l_0_15_327 () Real)
(declare-fun l_0_15_353 () Real)
(declare-fun l_0_15_326 () Real)
(declare-fun l_0_15_219 () Real)
(declare-fun l_0_15_218 () Real)
(declare-fun l_0_15_37 () Real)
(declare-fun l_0_15_181 () Real)
(declare-fun l_0_15_145 () Real)
(declare-fun l_0_15_1 () Real)
(declare-fun l_0_15_38 () Real)
(declare-fun l_0_15_319 () Real)
(declare-fun l_0_15_294 () Real)
(declare-fun l_0_15_318 () Real)
(declare-fun l_0_15_293 () Real)
(declare-fun l_0_15_317 () Real)
(declare-fun l_0_15_292 () Real)
(declare-fun l_0_15_220 () Real)
(declare-fun l_0_15_217 () Real)
(declare-fun l_0_15_182 () Real)
(declare-fun l_0_15_146 () Real)
(declare-fun l_0_15_139 () Real)
(declare-fun l_0_15_114 () Real)
(declare-fun l_0_15_138 () Real)
(declare-fun l_0_15_113 () Real)
(declare-fun l_0_15_137 () Real)
(declare-fun l_0_15_112 () Real)
(declare-fun l_0_15_78 () Real)
(declare-fun l_0_15_103 () Real)
(declare-fun l_0_15_77 () Real)
(declare-fun l_0_15_102 () Real)
(declare-fun l_0_15_76 () Real)
(declare-fun l_0_15_101 () Real)
(declare-fun l_0_15_2 () Real)
(declare-fun l_0_15_40 () Real)
(declare-fun l_0_15_184 () Real)
(declare-fun l_0_15_148 () Real)
(declare-fun l_0_15_4 () Real)
(declare-fun l_0_15_43 () Real)
(declare-fun l_0_15_187 () Real)
(declare-fun l_0_15_151 () Real)
(declare-fun l_0_15_7 () Real)
(declare-fun l_0_15_47 () Real)
(declare-fun l_0_15_191 () Real)
(declare-fun l_0_15_155 () Real)
(declare-fun l_0_15_11 () Real)
(declare-fun l_0_15_52 () Real)
(declare-fun l_0_15_196 () Real)
(declare-fun l_0_15_160 () Real)
(declare-fun l_0_15_16 () Real)
(declare-fun l_0_15_73 () Real)
(declare-fun l_0_15_58 () Real)
(declare-fun l_0_15_202 () Real)
(declare-fun l_0_15_166 () Real)
(declare-fun l_0_15_109 () Real)
(declare-fun l_0_15_22 () Real)
(declare-fun l_0_15_65 () Real)
(declare-fun l_0_15_209 () Real)
(declare-fun l_0_15_173 () Real)
(declare-fun l_0_15_29 () Real)
(declare-fun l_0_15_571 () Real)
(declare-fun l_0_15_546 () Real)
(declare-fun l_0_15_545 () Real)
(declare-fun l_0_15_544 () Real)
(declare-fun l_0_15_535 () Real)
(declare-fun l_0_15_510 () Real)
(declare-fun l_0_15_509 () Real)
(declare-fun l_0_15_508 () Real)
(declare-fun l_0_15_499 () Real)
(declare-fun l_0_15_474 () Real)
(declare-fun l_0_15_473 () Real)
(declare-fun l_0_15_472 () Real)
(declare-fun l_0_15_463 () Real)
(declare-fun l_0_15_438 () Real)
(declare-fun l_0_15_437 () Real)
(declare-fun l_0_15_436 () Real)
(declare-fun l_0_15_427 () Real)
(declare-fun l_0_15_402 () Real)
(declare-fun l_0_15_401 () Real)
(declare-fun l_0_15_400 () Real)
(declare-fun l_0_15_39 () Real)
(declare-fun l_0_15_391 () Real)
(declare-fun l_0_15_366 () Real)
(declare-fun l_0_15_365 () Real)
(declare-fun l_0_15_364 () Real)
(declare-fun l_0_15_355 () Real)
(declare-fun l_0_15_330 () Real)
(declare-fun l_0_15_329 () Real)
(declare-fun l_0_15_328 () Real)
(declare-fun l_0_15_3 () Real)
(declare-fun l_0_15_221 () Real)
(declare-fun l_0_15_183 () Real)
(declare-fun l_0_15_147 () Real)
(declare-fun l_0_15_41 () Real)
(declare-fun l_0_15_5 () Real)
(declare-fun l_0_15_222 () Real)
(declare-fun l_0_15_185 () Real)
(declare-fun l_0_15_149 () Real)
(declare-fun l_0_15_67 () Real)
(declare-fun l_0_15_42 () Real)
(declare-fun l_0_15_66 () Real)
(declare-fun l_0_15_44 () Real)
(declare-fun l_0_15_6 () Real)
(declare-fun l_0_15_31 () Real)
(declare-fun l_0_15_30 () Real)
(declare-fun l_0_15_8 () Real)
(declare-fun l_0_15_225 () Real)
(declare-fun l_0_15_224 () Real)
(declare-fun l_0_15_223 () Real)
(declare-fun l_0_15_188 () Real)
(declare-fun l_0_15_152 () Real)
(declare-fun l_0_15_48 () Real)
(declare-fun l_0_15_283 () Real)
(declare-fun l_0_15_258 () Real)
(declare-fun l_0_15_282 () Real)
(declare-fun l_0_15_257 () Real)
(declare-fun l_0_15_281 () Real)
(declare-fun l_0_15_256 () Real)
(declare-fun l_0_15_229 () Real)
(declare-fun l_0_15_228 () Real)
(declare-fun l_0_15_227 () Real)
(declare-fun l_0_15_192 () Real)
(declare-fun l_0_15_156 () Real)
(declare-fun l_0_15_12 () Real)
(declare-fun l_0_15_53 () Real)
(declare-fun l_0_15_234 () Real)
(declare-fun l_0_15_233 () Real)
(declare-fun l_0_15_232 () Real)
(declare-fun l_0_15_211 () Real)
(declare-fun l_0_15_186 () Real)
(declare-fun l_0_15_210 () Real)
(declare-fun l_0_15_197 () Real)
(declare-fun l_0_15_17 () Real)
(declare-fun l_0_15_175 () Real)
(declare-fun l_0_15_150 () Real)
(declare-fun l_0_15_174 () Real)
(declare-fun l_0_15_161 () Real)
(declare-fun l_0_15_75 () Real)
(declare-fun l_0_15_74 () Real)
(declare-fun l_0_15_59 () Real)
(declare-fun l_0_15_23 () Real)
(declare-fun l_0_15_240 () Real)
(declare-fun l_0_15_239 () Real)
(declare-fun l_0_15_238 () Real)
(declare-fun l_0_15_203 () Real)
(declare-fun l_0_15_167 () Real)
(declare-fun l_0_15_111 () Real)
(declare-fun l_0_15_110 () Real)
(declare-fun l_0_15_247 () Real)
(declare-fun l_0_15_246 () Real)
(declare-fun l_0_15_245 () Real)
(declare-fun l_0_15_9 () Real)
(declare-fun l_0_15_45 () Real)
(declare-fun l_0_15_189 () Real)
(declare-fun l_0_15_153 () Real)
(declare-fun l_0_15_49 () Real)
(declare-fun l_0_15_193 () Real)
(declare-fun l_0_15_157 () Real)
(declare-fun l_0_15_13 () Real)
(declare-fun l_0_15_54 () Real)
(declare-fun l_0_15_198 () Real)
(declare-fun l_0_15_18 () Real)
(declare-fun l_0_15_162 () Real)
(declare-fun l_0_15_60 () Real)
(declare-fun l_0_15_24 () Real)
(declare-fun l_0_15_204 () Real)
(declare-fun l_0_15_168 () Real)
(declare-fun l_0_15_46 () Real)
(declare-fun l_0_15_190 () Real)
(declare-fun l_0_15_154 () Real)
(declare-fun l_0_15_10 () Real)
(declare-fun l_0_15_50 () Real)
(declare-fun l_0_15_194 () Real)
(declare-fun l_0_15_158 () Real)
(declare-fun l_0_15_14 () Real)
(declare-fun l_0_15_55 () Real)
(declare-fun l_0_15_199 () Real)
(declare-fun l_0_15_163 () Real)
(declare-fun l_0_15_19 () Real)
(declare-fun l_0_15_81 () Real)
(declare-fun l_0_15_80 () Real)
(declare-fun l_0_15_79 () Real)
(declare-fun l_0_15_61 () Real)
(declare-fun l_0_15_205 () Real)
(declare-fun l_0_15_169 () Real)
(declare-fun l_0_15_117 () Real)
(declare-fun l_0_15_116 () Real)
(declare-fun l_0_15_115 () Real)
(declare-fun l_0_15_25 () Real)
(declare-fun l_0_15_68 () Real)
(declare-fun l_0_15_212 () Real)
(declare-fun l_0_15_176 () Real)
(declare-fun l_0_15_32 () Real)
(declare-fun l_0_15_51 () Real)
(declare-fun l_0_15_195 () Real)
(declare-fun l_0_15_159 () Real)
(declare-fun l_0_15_15 () Real)
(declare-fun l_0_15_56 () Real)
(declare-fun l_0_15_200 () Real)
(declare-fun l_0_15_164 () Real)
(declare-fun l_0_15_20 () Real)
(declare-fun l_0_15_85 () Real)
(declare-fun l_0_15_84 () Real)
(declare-fun l_0_15_83 () Real)
(declare-fun l_0_15_62 () Real)
(declare-fun l_0_15_206 () Real)
(declare-fun l_0_15_170 () Real)
(declare-fun l_0_15_26 () Real)
(declare-fun l_0_15_121 () Real)
(declare-fun l_0_15_120 () Real)
(declare-fun l_0_15_119 () Real)
(declare-fun l_0_15_69 () Real)
(declare-fun l_0_15_213 () Real)
(declare-fun l_0_15_177 () Real)
(declare-fun l_0_15_33 () Real)
(declare-fun l_0_15_57 () Real)
(declare-fun l_0_15_21 () Real)
(declare-fun l_0_15_201 () Real)
(declare-fun l_0_15_165 () Real)
(declare-fun l_0_15_90 () Real)
(declare-fun l_0_15_89 () Real)
(declare-fun l_0_15_88 () Real)
(declare-fun l_0_15_63 () Real)
(declare-fun l_0_15_27 () Real)
(declare-fun l_0_15_207 () Real)
(declare-fun l_0_15_171 () Real)
(declare-fun l_0_15_126 () Real)
(declare-fun l_0_15_125 () Real)
(declare-fun l_0_15_124 () Real)
(declare-fun l_0_15_70 () Real)
(declare-fun l_0_15_34 () Real)
(declare-fun l_0_15_214 () Real)
(declare-fun l_0_15_178 () Real)
(declare-fun l_0_15_96 () Real)
(declare-fun l_0_15_95 () Real)
(declare-fun l_0_15_94 () Real)
(declare-fun l_0_15_64 () Real)
(declare-fun l_0_15_28 () Real)
(declare-fun l_0_15_208 () Real)
(declare-fun l_0_15_172 () Real)
(declare-fun l_0_15_132 () Real)
(declare-fun l_0_15_131 () Real)
(declare-fun l_0_15_130 () Real)
(declare-fun l_0_15_71 () Real)
(declare-fun l_0_15_35 () Real)
(declare-fun l_0_15_215 () Real)
(declare-fun l_0_15_179 () Real)
(declare-fun l_0_15_72 () Real)
(declare-fun l_0_15_36 () Real)
(declare-fun l_0_15_216 () Real)
(declare-fun l_0_15_180 () Real)
(declare-fun l_0_15_289 () Real)
(declare-fun l_0_15_295 () Real)
(declare-fun l_0_15_547 () Real)
(declare-fun l_0_15_541 () Real)
(declare-fun l_0_15_511 () Real)
(declare-fun l_0_15_505 () Real)
(declare-fun l_0_15_475 () Real)
(declare-fun l_0_15_469 () Real)
(declare-fun l_0_15_439 () Real)
(declare-fun l_0_15_433 () Real)
(declare-fun l_0_15_403 () Real)
(declare-fun l_0_15_397 () Real)
(declare-fun l_0_15_367 () Real)
(declare-fun l_0_15_361 () Real)
(declare-fun l_0_15_331 () Real)
(declare-fun l_0_15_325 () Real)
(declare-fun l_0_15_296 () Real)
(declare-fun l_0_15_291 () Real)
(declare-fun l_0_15_290 () Real)
(declare-fun l_0_15_297 () Real)
(declare-fun l_0_15_82 () Real)
(declare-fun l_0_15_298 () Real)
(declare-fun l_0_15_118 () Real)
(declare-fun l_0_15_86 () Real)
(declare-fun l_0_15_302 () Real)
(declare-fun l_0_15_301 () Real)
(declare-fun l_0_15_300 () Real)
(declare-fun l_0_15_299 () Real)
(declare-fun l_0_15_259 () Real)
(declare-fun l_0_15_253 () Real)
(declare-fun l_0_15_122 () Real)
(declare-fun l_0_15_91 () Real)
(declare-fun l_0_15_307 () Real)
(declare-fun l_0_15_306 () Real)
(declare-fun l_0_15_305 () Real)
(declare-fun l_0_15_304 () Real)
(declare-fun l_0_15_127 () Real)
(declare-fun l_0_15_97 () Real)
(declare-fun l_0_15_313 () Real)
(declare-fun l_0_15_312 () Real)
(declare-fun l_0_15_311 () Real)
(declare-fun l_0_15_310 () Real)
(declare-fun l_0_15_133 () Real)
(declare-fun l_0_15_320 () Real)
(declare-fun l_0_15_140 () Real)
(declare-fun l_0_15_104 () Real)
(declare-fun l_0_15_548 () Real)
(declare-fun l_0_15_512 () Real)
(declare-fun l_0_15_476 () Real)
(declare-fun l_0_15_440 () Real)
(declare-fun l_0_15_404 () Real)
(declare-fun l_0_15_368 () Real)
(declare-fun l_0_15_332 () Real)
(declare-fun l_0_15_549 () Real)
(declare-fun l_0_15_513 () Real)
(declare-fun l_0_15_477 () Real)
(declare-fun l_0_15_441 () Real)
(declare-fun l_0_15_405 () Real)
(declare-fun l_0_15_369 () Real)
(declare-fun l_0_15_333 () Real)
(declare-fun l_0_15_550 () Real)
(declare-fun l_0_15_514 () Real)
(declare-fun l_0_15_478 () Real)
(declare-fun l_0_15_442 () Real)
(declare-fun l_0_15_406 () Real)
(declare-fun l_0_15_370 () Real)
(declare-fun l_0_15_334 () Real)
(declare-fun l_0_15_554 () Real)
(declare-fun l_0_15_553 () Real)
(declare-fun l_0_15_552 () Real)
(declare-fun l_0_15_551 () Real)
(declare-fun l_0_15_518 () Real)
(declare-fun l_0_15_517 () Real)
(declare-fun l_0_15_516 () Real)
(declare-fun l_0_15_515 () Real)
(declare-fun l_0_15_482 () Real)
(declare-fun l_0_15_481 () Real)
(declare-fun l_0_15_480 () Real)
(declare-fun l_0_15_479 () Real)
(declare-fun l_0_15_446 () Real)
(declare-fun l_0_15_445 () Real)
(declare-fun l_0_15_444 () Real)
(declare-fun l_0_15_443 () Real)
(declare-fun l_0_15_410 () Real)
(declare-fun l_0_15_409 () Real)
(declare-fun l_0_15_408 () Real)
(declare-fun l_0_15_407 () Real)
(declare-fun l_0_15_374 () Real)
(declare-fun l_0_15_373 () Real)
(declare-fun l_0_15_372 () Real)
(declare-fun l_0_15_371 () Real)
(declare-fun l_0_15_338 () Real)
(declare-fun l_0_15_337 () Real)
(declare-fun l_0_15_336 () Real)
(declare-fun l_0_15_335 () Real)
(declare-fun l_0_15_260 () Real)
(declare-fun l_0_15_255 () Real)
(declare-fun l_0_15_254 () Real)
(declare-fun l_0_15_559 () Real)
(declare-fun l_0_15_558 () Real)
(declare-fun l_0_15_557 () Real)
(declare-fun l_0_15_556 () Real)
(declare-fun l_0_15_523 () Real)
(declare-fun l_0_15_522 () Real)
(declare-fun l_0_15_521 () Real)
(declare-fun l_0_15_520 () Real)
(declare-fun l_0_15_487 () Real)
(declare-fun l_0_15_486 () Real)
(declare-fun l_0_15_485 () Real)
(declare-fun l_0_15_484 () Real)
(declare-fun l_0_15_451 () Real)
(declare-fun l_0_15_450 () Real)
(declare-fun l_0_15_449 () Real)
(declare-fun l_0_15_448 () Real)
(declare-fun l_0_15_415 () Real)
(declare-fun l_0_15_414 () Real)
(declare-fun l_0_15_413 () Real)
(declare-fun l_0_15_412 () Real)
(declare-fun l_0_15_379 () Real)
(declare-fun l_0_15_378 () Real)
(declare-fun l_0_15_377 () Real)
(declare-fun l_0_15_376 () Real)
(declare-fun l_0_15_343 () Real)
(declare-fun l_0_15_342 () Real)
(declare-fun l_0_15_341 () Real)
(declare-fun l_0_15_340 () Real)
(declare-fun l_0_15_565 () Real)
(declare-fun l_0_15_564 () Real)
(declare-fun l_0_15_563 () Real)
(declare-fun l_0_15_562 () Real)
(declare-fun l_0_15_529 () Real)
(declare-fun l_0_15_528 () Real)
(declare-fun l_0_15_527 () Real)
(declare-fun l_0_15_526 () Real)
(declare-fun l_0_15_493 () Real)
(declare-fun l_0_15_492 () Real)
(declare-fun l_0_15_491 () Real)
(declare-fun l_0_15_490 () Real)
(declare-fun l_0_15_457 () Real)
(declare-fun l_0_15_456 () Real)
(declare-fun l_0_15_455 () Real)
(declare-fun l_0_15_454 () Real)
(declare-fun l_0_15_421 () Real)
(declare-fun l_0_15_420 () Real)
(declare-fun l_0_15_419 () Real)
(declare-fun l_0_15_418 () Real)
(declare-fun l_0_15_385 () Real)
(declare-fun l_0_15_384 () Real)
(declare-fun l_0_15_383 () Real)
(declare-fun l_0_15_382 () Real)
(declare-fun l_0_15_349 () Real)
(declare-fun l_0_15_348 () Real)
(declare-fun l_0_15_347 () Real)
(declare-fun l_0_15_346 () Real)
(declare-fun l_0_15_572 () Real)
(declare-fun l_0_15_536 () Real)
(declare-fun l_0_15_500 () Real)
(declare-fun l_0_15_464 () Real)
(declare-fun l_0_15_428 () Real)
(declare-fun l_0_15_392 () Real)
(declare-fun l_0_15_356 () Real)
(declare-fun l_0_15_261 () Real)
(declare-fun l_0_15_262 () Real)
(declare-fun l_0_15_226 () Real)
(declare-fun l_0_15_303 () Real)
(declare-fun l_0_15_266 () Real)
(declare-fun l_0_15_265 () Real)
(declare-fun l_0_15_264 () Real)
(declare-fun l_0_15_263 () Real)
(declare-fun l_0_15_308 () Real)
(declare-fun l_0_15_271 () Real)
(declare-fun l_0_15_270 () Real)
(declare-fun l_0_15_269 () Real)
(declare-fun l_0_15_268 () Real)
(declare-fun l_0_15_314 () Real)
(declare-fun l_0_15_277 () Real)
(declare-fun l_0_15_276 () Real)
(declare-fun l_0_15_275 () Real)
(declare-fun l_0_15_274 () Real)
(declare-fun l_0_15_321 () Real)
(declare-fun l_0_15_284 () Real)
(declare-fun l_0_15_230 () Real)
(declare-fun l_0_15_309 () Real)
(declare-fun l_0_15_315 () Real)
(declare-fun l_0_15_322 () Real)
(declare-fun l_0_15_235 () Real)
(declare-fun l_0_15_316 () Real)
(declare-fun l_0_15_323 () Real)
(declare-fun l_0_15_241 () Real)
(declare-fun l_0_15_324 () Real)
(declare-fun l_0_15_248 () Real)
(declare-fun l_0_15_143 () Real)
(declare-fun l_0_15_136 () Real)
(declare-fun l_0_15_142 () Real)
(declare-fun l_0_15_135 () Real)
(declare-fun l_0_15_141 () Real)
(declare-fun l_0_15_134 () Real)
(declare-fun l_0_15_99 () Real)
(declare-fun l_0_15_106 () Real)
(declare-fun l_0_15_98 () Real)
(declare-fun l_0_15_105 () Real)
(declare-fun l_0_15_107 () Real)
(declare-fun l_0_15_100 () Real)
(declare-fun l_0_15_575 () Real)
(declare-fun l_0_15_568 () Real)
(declare-fun l_0_15_574 () Real)
(declare-fun l_0_15_567 () Real)
(declare-fun l_0_15_573 () Real)
(declare-fun l_0_15_566 () Real)
(declare-fun l_0_15_539 () Real)
(declare-fun l_0_15_532 () Real)
(declare-fun l_0_15_538 () Real)
(declare-fun l_0_15_531 () Real)
(declare-fun l_0_15_537 () Real)
(declare-fun l_0_15_530 () Real)
(declare-fun l_0_15_503 () Real)
(declare-fun l_0_15_496 () Real)
(declare-fun l_0_15_502 () Real)
(declare-fun l_0_15_495 () Real)
(declare-fun l_0_15_501 () Real)
(declare-fun l_0_15_494 () Real)
(declare-fun l_0_15_467 () Real)
(declare-fun l_0_15_460 () Real)
(declare-fun l_0_15_466 () Real)
(declare-fun l_0_15_459 () Real)
(declare-fun l_0_15_465 () Real)
(declare-fun l_0_15_458 () Real)
(declare-fun l_0_15_431 () Real)
(declare-fun l_0_15_424 () Real)
(declare-fun l_0_15_430 () Real)
(declare-fun l_0_15_423 () Real)
(declare-fun l_0_15_429 () Real)
(declare-fun l_0_15_422 () Real)
(declare-fun l_0_15_395 () Real)
(declare-fun l_0_15_388 () Real)
(declare-fun l_0_15_394 () Real)
(declare-fun l_0_15_387 () Real)
(declare-fun l_0_15_393 () Real)
(declare-fun l_0_15_386 () Real)
(declare-fun l_0_15_359 () Real)
(declare-fun l_0_15_352 () Real)
(declare-fun l_0_15_358 () Real)
(declare-fun l_0_15_351 () Real)
(declare-fun l_0_15_357 () Real)
(declare-fun l_0_15_350 () Real)
(declare-fun l_0_15_287 () Real)
(declare-fun l_0_15_280 () Real)
(declare-fun l_0_15_286 () Real)
(declare-fun l_0_15_279 () Real)
(declare-fun l_0_15_285 () Real)
(declare-fun l_0_15_278 () Real)
(declare-fun l_0_15_267 () Real)
(declare-fun l_0_15_242 () Real)
(declare-fun l_0_15_231 () Real)
(declare-fun l_0_15_273 () Real)
(declare-fun l_0_15_272 () Real)
(declare-fun l_0_15_243 () Real)
(declare-fun l_0_15_237 () Real)
(declare-fun l_0_15_236 () Real)
(declare-fun l_0_15_244 () Real)
(declare-fun l_0_15_288 () Real)
(declare-fun l_0_15_251 () Real)
(declare-fun l_0_15_250 () Real)
(declare-fun l_0_15_249 () Real)
(declare-fun l_0_15_87 () Real)
(declare-fun l_0_15_123 () Real)
(declare-fun l_0_15_92 () Real)
(declare-fun l_0_15_128 () Real)
(declare-fun l_0_15_93 () Real)
(declare-fun l_0_15_129 () Real)
(declare-fun l_0_15_144 () Real)
(declare-fun l_0_15_108 () Real)
(declare-fun l_0_15_560 () Real)
(declare-fun l_0_15_555 () Real)
(declare-fun l_0_15_524 () Real)
(declare-fun l_0_15_519 () Real)
(declare-fun l_0_15_488 () Real)
(declare-fun l_0_15_483 () Real)
(declare-fun l_0_15_452 () Real)
(declare-fun l_0_15_447 () Real)
(declare-fun l_0_15_416 () Real)
(declare-fun l_0_15_411 () Real)
(declare-fun l_0_15_380 () Real)
(declare-fun l_0_15_375 () Real)
(declare-fun l_0_15_344 () Real)
(declare-fun l_0_15_339 () Real)
(declare-fun l_0_15_561 () Real)
(declare-fun l_0_15_525 () Real)
(declare-fun l_0_15_489 () Real)
(declare-fun l_0_15_453 () Real)
(declare-fun l_0_15_417 () Real)
(declare-fun l_0_15_381 () Real)
(declare-fun l_0_15_345 () Real)
(declare-fun l_0_15_576 () Real)
(declare-fun l_0_15_540 () Real)
(declare-fun l_0_15_504 () Real)
(declare-fun l_0_15_468 () Real)
(declare-fun l_0_15_432 () Real)
(declare-fun l_0_15_396 () Real)
(declare-fun l_0_15_360 () Real)
(declare-fun l_0_15_252 () Real)
(declare-fun l_0_16_354 () Real)
(declare-fun l_0_16_327 () Real)
(declare-fun l_0_16_353 () Real)
(declare-fun l_0_16_326 () Real)
(declare-fun l_0_16_219 () Real)
(declare-fun l_0_16_218 () Real)
(declare-fun _a_5_ () Real)
(declare-fun l_0_16_75 () Real)
(declare-fun l_0_16_74 () Real)
(declare-fun l_0_16_359 () Real)
(declare-fun l_0_16_352 () Real)
(declare-fun l_0_16_358 () Real)
(declare-fun l_0_16_351 () Real)
(declare-fun l_0_16_357 () Real)
(declare-fun l_0_16_350 () Real)
(declare-fun l_0_16_356 () Real)
(declare-fun l_0_16_349 () Real)
(declare-fun l_0_16_355 () Real)
(declare-fun l_0_16_348 () Real)
(declare-fun l_0_16_347 () Real)
(declare-fun l_0_16_346 () Real)
(declare-fun l_0_16_282 () Real)
(declare-fun l_0_16_255 () Real)
(declare-fun l_0_16_281 () Real)
(declare-fun l_0_16_254 () Real)
(declare-fun l_0_16_239 () Real)
(declare-fun l_0_16_238 () Real)
(declare-fun l_0_16_147 () Real)
(declare-fun l_0_16_146 () Real)
(declare-fun l_0_16_111 () Real)
(declare-fun l_0_16_110 () Real)
(declare-fun _a_6_ () Real)
(declare-fun l_0_16_39 () Real)
(declare-fun l_0_16_38 () Real)
(declare-fun l_0_16_330 () Real)
(declare-fun l_0_16_329 () Real)
(declare-fun l_0_16_328 () Real)
(declare-fun l_0_16_3 () Real)
(declare-fun l_0_16_221 () Real)
(declare-fun l_0_16_220 () Real)
(declare-fun l_0_16_2 () Real)
(declare-fun l_0_16_183 () Real)
(declare-fun l_0_16_182 () Real)
(declare-fun _a_7_ () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_16_332 () Real)
(declare-fun l_0_16_331 () Real)
(declare-fun l_0_16_291 () Real)
(declare-fun l_0_16_290 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_16_325 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_16_37 () Real)
(declare-fun l_0_16_181 () Real)
(declare-fun l_0_16_145 () Real)
(declare-fun l_0_16_1 () Real)
(declare-fun l_0_16_319 () Real)
(declare-fun l_0_16_294 () Real)
(declare-fun l_0_16_318 () Real)
(declare-fun l_0_16_293 () Real)
(declare-fun l_0_16_317 () Real)
(declare-fun l_0_16_292 () Real)
(declare-fun l_0_16_217 () Real)
(declare-fun l_0_16_139 () Real)
(declare-fun l_0_16_114 () Real)
(declare-fun l_0_16_138 () Real)
(declare-fun l_0_16_113 () Real)
(declare-fun l_0_16_137 () Real)
(declare-fun l_0_16_112 () Real)
(declare-fun l_0_16_78 () Real)
(declare-fun l_0_16_103 () Real)
(declare-fun l_0_16_77 () Real)
(declare-fun l_0_16_102 () Real)
(declare-fun l_0_16_76 () Real)
(declare-fun l_0_16_101 () Real)
(declare-fun l_0_16_40 () Real)
(declare-fun l_0_16_184 () Real)
(declare-fun l_0_16_148 () Real)
(declare-fun l_0_16_4 () Real)
(declare-fun l_0_16_43 () Real)
(declare-fun l_0_16_187 () Real)
(declare-fun l_0_16_151 () Real)
(declare-fun l_0_16_7 () Real)
(declare-fun l_0_16_47 () Real)
(declare-fun l_0_16_191 () Real)
(declare-fun l_0_16_155 () Real)
(declare-fun l_0_16_11 () Real)
(declare-fun l_0_16_52 () Real)
(declare-fun l_0_16_196 () Real)
(declare-fun l_0_16_160 () Real)
(declare-fun l_0_16_16 () Real)
(declare-fun l_0_16_73 () Real)
(declare-fun l_0_16_58 () Real)
(declare-fun l_0_16_202 () Real)
(declare-fun l_0_16_166 () Real)
(declare-fun l_0_16_109 () Real)
(declare-fun l_0_16_22 () Real)
(declare-fun l_0_16_65 () Real)
(declare-fun l_0_16_209 () Real)
(declare-fun l_0_16_173 () Real)
(declare-fun l_0_16_29 () Real)
(declare-fun l_0_16_41 () Real)
(declare-fun l_0_16_5 () Real)
(declare-fun l_0_16_222 () Real)
(declare-fun l_0_16_185 () Real)
(declare-fun l_0_16_149 () Real)
(declare-fun l_0_16_67 () Real)
(declare-fun l_0_16_42 () Real)
(declare-fun l_0_16_66 () Real)
(declare-fun l_0_16_44 () Real)
(declare-fun l_0_16_6 () Real)
(declare-fun l_0_16_31 () Real)
(declare-fun l_0_16_30 () Real)
(declare-fun l_0_16_8 () Real)
(declare-fun l_0_16_225 () Real)
(declare-fun l_0_16_224 () Real)
(declare-fun l_0_16_223 () Real)
(declare-fun l_0_16_188 () Real)
(declare-fun l_0_16_152 () Real)
(declare-fun l_0_16_48 () Real)
(declare-fun l_0_16_283 () Real)
(declare-fun l_0_16_258 () Real)
(declare-fun l_0_16_257 () Real)
(declare-fun l_0_16_256 () Real)
(declare-fun l_0_16_229 () Real)
(declare-fun l_0_16_228 () Real)
(declare-fun l_0_16_227 () Real)
(declare-fun l_0_16_192 () Real)
(declare-fun l_0_16_156 () Real)
(declare-fun l_0_16_12 () Real)
(declare-fun l_0_16_53 () Real)
(declare-fun l_0_16_234 () Real)
(declare-fun l_0_16_233 () Real)
(declare-fun l_0_16_232 () Real)
(declare-fun l_0_16_211 () Real)
(declare-fun l_0_16_186 () Real)
(declare-fun l_0_16_210 () Real)
(declare-fun l_0_16_197 () Real)
(declare-fun l_0_16_17 () Real)
(declare-fun l_0_16_175 () Real)
(declare-fun l_0_16_150 () Real)
(declare-fun l_0_16_174 () Real)
(declare-fun l_0_16_161 () Real)
(declare-fun l_0_16_59 () Real)
(declare-fun l_0_16_23 () Real)
(declare-fun l_0_16_240 () Real)
(declare-fun l_0_16_203 () Real)
(declare-fun l_0_16_167 () Real)
(declare-fun l_0_16_247 () Real)
(declare-fun l_0_16_246 () Real)
(declare-fun l_0_16_245 () Real)
(declare-fun l_0_16_9 () Real)
(declare-fun l_0_16_45 () Real)
(declare-fun l_0_16_189 () Real)
(declare-fun l_0_16_153 () Real)
(declare-fun l_0_16_49 () Real)
(declare-fun l_0_16_193 () Real)
(declare-fun l_0_16_157 () Real)
(declare-fun l_0_16_13 () Real)
(declare-fun l_0_16_54 () Real)
(declare-fun l_0_16_198 () Real)
(declare-fun l_0_16_18 () Real)
(declare-fun l_0_16_162 () Real)
(declare-fun l_0_16_60 () Real)
(declare-fun l_0_16_24 () Real)
(declare-fun l_0_16_204 () Real)
(declare-fun l_0_16_168 () Real)
(declare-fun l_0_16_46 () Real)
(declare-fun l_0_16_190 () Real)
(declare-fun l_0_16_154 () Real)
(declare-fun l_0_16_10 () Real)
(declare-fun l_0_16_50 () Real)
(declare-fun l_0_16_194 () Real)
(declare-fun l_0_16_158 () Real)
(declare-fun l_0_16_14 () Real)
(declare-fun l_0_16_55 () Real)
(declare-fun l_0_16_199 () Real)
(declare-fun l_0_16_163 () Real)
(declare-fun l_0_16_19 () Real)
(declare-fun l_0_16_81 () Real)
(declare-fun l_0_16_80 () Real)
(declare-fun l_0_16_79 () Real)
(declare-fun l_0_16_61 () Real)
(declare-fun l_0_16_205 () Real)
(declare-fun l_0_16_169 () Real)
(declare-fun l_0_16_117 () Real)
(declare-fun l_0_16_116 () Real)
(declare-fun l_0_16_115 () Real)
(declare-fun l_0_16_25 () Real)
(declare-fun l_0_16_68 () Real)
(declare-fun l_0_16_212 () Real)
(declare-fun l_0_16_176 () Real)
(declare-fun l_0_16_32 () Real)
(declare-fun l_0_16_51 () Real)
(declare-fun l_0_16_195 () Real)
(declare-fun l_0_16_159 () Real)
(declare-fun l_0_16_15 () Real)
(declare-fun l_0_16_56 () Real)
(declare-fun l_0_16_200 () Real)
(declare-fun l_0_16_164 () Real)
(declare-fun l_0_16_20 () Real)
(declare-fun l_0_16_85 () Real)
(declare-fun l_0_16_84 () Real)
(declare-fun l_0_16_83 () Real)
(declare-fun l_0_16_62 () Real)
(declare-fun l_0_16_206 () Real)
(declare-fun l_0_16_170 () Real)
(declare-fun l_0_16_26 () Real)
(declare-fun l_0_16_121 () Real)
(declare-fun l_0_16_120 () Real)
(declare-fun l_0_16_119 () Real)
(declare-fun l_0_16_69 () Real)
(declare-fun l_0_16_213 () Real)
(declare-fun l_0_16_177 () Real)
(declare-fun l_0_16_33 () Real)
(declare-fun l_0_16_57 () Real)
(declare-fun l_0_16_21 () Real)
(declare-fun l_0_16_201 () Real)
(declare-fun l_0_16_165 () Real)
(declare-fun l_0_16_90 () Real)
(declare-fun l_0_16_89 () Real)
(declare-fun l_0_16_88 () Real)
(declare-fun l_0_16_63 () Real)
(declare-fun l_0_16_27 () Real)
(declare-fun l_0_16_207 () Real)
(declare-fun l_0_16_171 () Real)
(declare-fun l_0_16_126 () Real)
(declare-fun l_0_16_125 () Real)
(declare-fun l_0_16_124 () Real)
(declare-fun l_0_16_70 () Real)
(declare-fun l_0_16_34 () Real)
(declare-fun l_0_16_214 () Real)
(declare-fun l_0_16_178 () Real)
(declare-fun l_0_16_96 () Real)
(declare-fun l_0_16_95 () Real)
(declare-fun l_0_16_94 () Real)
(declare-fun l_0_16_64 () Real)
(declare-fun l_0_16_28 () Real)
(declare-fun l_0_16_208 () Real)
(declare-fun l_0_16_172 () Real)
(declare-fun l_0_16_132 () Real)
(declare-fun l_0_16_131 () Real)
(declare-fun l_0_16_130 () Real)
(declare-fun l_0_16_71 () Real)
(declare-fun l_0_16_35 () Real)
(declare-fun l_0_16_215 () Real)
(declare-fun l_0_16_179 () Real)
(declare-fun l_0_16_72 () Real)
(declare-fun l_0_16_36 () Real)
(declare-fun l_0_16_216 () Real)
(declare-fun l_0_16_180 () Real)
(declare-fun l_0_16_289 () Real)
(declare-fun l_0_16_295 () Real)
(declare-fun l_0_16_296 () Real)
(declare-fun l_0_16_297 () Real)
(declare-fun l_0_16_82 () Real)
(declare-fun l_0_16_298 () Real)
(declare-fun l_0_16_118 () Real)
(declare-fun l_0_16_86 () Real)
(declare-fun l_0_16_302 () Real)
(declare-fun l_0_16_301 () Real)
(declare-fun l_0_16_300 () Real)
(declare-fun l_0_16_299 () Real)
(declare-fun l_0_16_259 () Real)
(declare-fun l_0_16_253 () Real)
(declare-fun l_0_16_122 () Real)
(declare-fun l_0_16_91 () Real)
(declare-fun l_0_16_307 () Real)
(declare-fun l_0_16_306 () Real)
(declare-fun l_0_16_305 () Real)
(declare-fun l_0_16_304 () Real)
(declare-fun l_0_16_127 () Real)
(declare-fun l_0_16_97 () Real)
(declare-fun l_0_16_313 () Real)
(declare-fun l_0_16_312 () Real)
(declare-fun l_0_16_311 () Real)
(declare-fun l_0_16_310 () Real)
(declare-fun l_0_16_133 () Real)
(declare-fun l_0_16_320 () Real)
(declare-fun l_0_16_140 () Real)
(declare-fun l_0_16_104 () Real)
(declare-fun l_0_16_333 () Real)
(declare-fun l_0_16_334 () Real)
(declare-fun l_0_16_338 () Real)
(declare-fun l_0_16_337 () Real)
(declare-fun l_0_16_336 () Real)
(declare-fun l_0_16_335 () Real)
(declare-fun l_0_16_260 () Real)
(declare-fun l_0_16_343 () Real)
(declare-fun l_0_16_342 () Real)
(declare-fun l_0_16_341 () Real)
(declare-fun l_0_16_340 () Real)
(declare-fun l_0_16_261 () Real)
(declare-fun l_0_16_262 () Real)
(declare-fun l_0_16_226 () Real)
(declare-fun l_0_16_303 () Real)
(declare-fun l_0_16_266 () Real)
(declare-fun l_0_16_265 () Real)
(declare-fun l_0_16_264 () Real)
(declare-fun l_0_16_263 () Real)
(declare-fun l_0_16_308 () Real)
(declare-fun l_0_16_271 () Real)
(declare-fun l_0_16_270 () Real)
(declare-fun l_0_16_269 () Real)
(declare-fun l_0_16_268 () Real)
(declare-fun l_0_16_314 () Real)
(declare-fun l_0_16_277 () Real)
(declare-fun l_0_16_276 () Real)
(declare-fun l_0_16_275 () Real)
(declare-fun l_0_16_274 () Real)
(declare-fun l_0_16_321 () Real)
(declare-fun l_0_16_284 () Real)
(declare-fun l_0_16_230 () Real)
(declare-fun l_0_16_309 () Real)
(declare-fun l_0_16_315 () Real)
(declare-fun l_0_16_322 () Real)
(declare-fun l_0_16_235 () Real)
(declare-fun l_0_16_316 () Real)
(declare-fun l_0_16_323 () Real)
(declare-fun l_0_16_241 () Real)
(declare-fun l_0_16_324 () Real)
(declare-fun l_0_16_248 () Real)
(declare-fun l_0_16_143 () Real)
(declare-fun l_0_16_136 () Real)
(declare-fun l_0_16_142 () Real)
(declare-fun l_0_16_135 () Real)
(declare-fun l_0_16_141 () Real)
(declare-fun l_0_16_134 () Real)
(declare-fun l_0_16_99 () Real)
(declare-fun l_0_16_106 () Real)
(declare-fun l_0_16_98 () Real)
(declare-fun l_0_16_105 () Real)
(declare-fun l_0_16_107 () Real)
(declare-fun l_0_16_100 () Real)
(declare-fun l_0_16_287 () Real)
(declare-fun l_0_16_280 () Real)
(declare-fun l_0_16_286 () Real)
(declare-fun l_0_16_279 () Real)
(declare-fun l_0_16_285 () Real)
(declare-fun l_0_16_278 () Real)
(declare-fun l_0_16_267 () Real)
(declare-fun l_0_16_242 () Real)
(declare-fun l_0_16_231 () Real)
(declare-fun l_0_16_273 () Real)
(declare-fun l_0_16_272 () Real)
(declare-fun l_0_16_243 () Real)
(declare-fun l_0_16_237 () Real)
(declare-fun l_0_16_236 () Real)
(declare-fun l_0_16_244 () Real)
(declare-fun l_0_16_288 () Real)
(declare-fun l_0_16_251 () Real)
(declare-fun l_0_16_250 () Real)
(declare-fun l_0_16_249 () Real)
(declare-fun l_0_16_87 () Real)
(declare-fun l_0_16_123 () Real)
(declare-fun l_0_16_92 () Real)
(declare-fun l_0_16_128 () Real)
(declare-fun l_0_16_93 () Real)
(declare-fun l_0_16_129 () Real)
(declare-fun l_0_16_144 () Real)
(declare-fun l_0_16_108 () Real)
(declare-fun l_0_16_344 () Real)
(declare-fun l_0_16_339 () Real)
(declare-fun l_0_16_345 () Real)
(declare-fun l_0_16_360 () Real)
(declare-fun l_0_16_252 () Real)
(declare-fun l_0_17_363 () Real)
(declare-fun l_0_17_362 () Real)
(declare-fun l_0_17_327 () Real)
(declare-fun l_0_17_326 () Real)
(declare-fun l_0_17_39 () Real)
(declare-fun l_0_17_38 () Real)
(declare-fun l_0_17_368 () Real)
(declare-fun l_0_17_367 () Real)
(declare-fun l_0_17_332 () Real)
(declare-fun l_0_17_331 () Real)
(declare-fun l_0_17_3 () Real)
(declare-fun l_0_17_291 () Real)
(declare-fun l_0_17_290 () Real)
(declare-fun l_0_17_2 () Real)
(declare-fun l_0_17_75 () Real)
(declare-fun l_0_17_74 () Real)
(declare-fun l_0_17_361 () Real)
(declare-fun l_0_17_325 () Real)
(declare-fun l_0_17_111 () Real)
(declare-fun l_0_17_110 () Real)
(declare-fun l_0_17_390 () Real)
(declare-fun l_0_17_389 () Real)
(declare-fun l_0_17_354 () Real)
(declare-fun l_0_17_353 () Real)
(declare-fun l_0_17_219 () Real)
(declare-fun l_0_17_218 () Real)
(declare-fun l_0_17_395 () Real)
(declare-fun l_0_17_388 () Real)
(declare-fun l_0_17_394 () Real)
(declare-fun l_0_17_387 () Real)
(declare-fun l_0_17_393 () Real)
(declare-fun l_0_17_386 () Real)
(declare-fun l_0_17_392 () Real)
(declare-fun l_0_17_385 () Real)
(declare-fun l_0_17_391 () Real)
(declare-fun l_0_17_384 () Real)
(declare-fun l_0_17_383 () Real)
(declare-fun l_0_17_382 () Real)
(declare-fun l_0_17_359 () Real)
(declare-fun l_0_17_352 () Real)
(declare-fun l_0_17_358 () Real)
(declare-fun l_0_17_351 () Real)
(declare-fun l_0_17_357 () Real)
(declare-fun l_0_17_350 () Real)
(declare-fun l_0_17_356 () Real)
(declare-fun l_0_17_349 () Real)
(declare-fun l_0_17_355 () Real)
(declare-fun l_0_17_348 () Real)
(declare-fun l_0_17_347 () Real)
(declare-fun l_0_17_346 () Real)
(declare-fun l_0_17_282 () Real)
(declare-fun l_0_17_255 () Real)
(declare-fun l_0_17_281 () Real)
(declare-fun l_0_17_254 () Real)
(declare-fun l_0_17_239 () Real)
(declare-fun l_0_17_238 () Real)
(declare-fun l_0_17_147 () Real)
(declare-fun l_0_17_146 () Real)
(declare-fun l_0_17_366 () Real)
(declare-fun l_0_17_365 () Real)
(declare-fun l_0_17_364 () Real)
(declare-fun l_0_17_330 () Real)
(declare-fun l_0_17_329 () Real)
(declare-fun l_0_17_328 () Real)
(declare-fun l_0_17_221 () Real)
(declare-fun l_0_17_220 () Real)
(declare-fun l_0_17_183 () Real)
(declare-fun l_0_17_182 () Real)
(declare-fun l_0_17_37 () Real)
(declare-fun l_0_17_181 () Real)
(declare-fun l_0_17_145 () Real)
(declare-fun l_0_17_1 () Real)
(declare-fun l_0_17_319 () Real)
(declare-fun l_0_17_294 () Real)
(declare-fun l_0_17_318 () Real)
(declare-fun l_0_17_293 () Real)
(declare-fun l_0_17_317 () Real)
(declare-fun l_0_17_292 () Real)
(declare-fun l_0_17_217 () Real)
(declare-fun l_0_17_139 () Real)
(declare-fun l_0_17_114 () Real)
(declare-fun l_0_17_138 () Real)
(declare-fun l_0_17_113 () Real)
(declare-fun l_0_17_137 () Real)
(declare-fun l_0_17_112 () Real)
(declare-fun l_0_17_78 () Real)
(declare-fun l_0_17_103 () Real)
(declare-fun l_0_17_77 () Real)
(declare-fun l_0_17_102 () Real)
(declare-fun l_0_17_76 () Real)
(declare-fun l_0_17_101 () Real)
(declare-fun l_0_17_40 () Real)
(declare-fun l_0_17_184 () Real)
(declare-fun l_0_17_148 () Real)
(declare-fun l_0_17_4 () Real)
(declare-fun l_0_17_43 () Real)
(declare-fun l_0_17_187 () Real)
(declare-fun l_0_17_151 () Real)
(declare-fun l_0_17_7 () Real)
(declare-fun l_0_17_47 () Real)
(declare-fun l_0_17_191 () Real)
(declare-fun l_0_17_155 () Real)
(declare-fun l_0_17_11 () Real)
(declare-fun l_0_17_52 () Real)
(declare-fun l_0_17_196 () Real)
(declare-fun l_0_17_160 () Real)
(declare-fun l_0_17_16 () Real)
(declare-fun l_0_17_73 () Real)
(declare-fun l_0_17_58 () Real)
(declare-fun l_0_17_202 () Real)
(declare-fun l_0_17_166 () Real)
(declare-fun l_0_17_109 () Real)
(declare-fun l_0_17_22 () Real)
(declare-fun l_0_17_65 () Real)
(declare-fun l_0_17_209 () Real)
(declare-fun l_0_17_173 () Real)
(declare-fun l_0_17_29 () Real)
(declare-fun l_0_17_41 () Real)
(declare-fun l_0_17_5 () Real)
(declare-fun l_0_17_222 () Real)
(declare-fun l_0_17_185 () Real)
(declare-fun l_0_17_149 () Real)
(declare-fun l_0_17_67 () Real)
(declare-fun l_0_17_42 () Real)
(declare-fun l_0_17_66 () Real)
(declare-fun l_0_17_44 () Real)
(declare-fun l_0_17_6 () Real)
(declare-fun l_0_17_31 () Real)
(declare-fun l_0_17_30 () Real)
(declare-fun l_0_17_8 () Real)
(declare-fun l_0_17_225 () Real)
(declare-fun l_0_17_224 () Real)
(declare-fun l_0_17_223 () Real)
(declare-fun l_0_17_188 () Real)
(declare-fun l_0_17_152 () Real)
(declare-fun l_0_17_48 () Real)
(declare-fun l_0_17_283 () Real)
(declare-fun l_0_17_258 () Real)
(declare-fun l_0_17_257 () Real)
(declare-fun l_0_17_256 () Real)
(declare-fun l_0_17_229 () Real)
(declare-fun l_0_17_228 () Real)
(declare-fun l_0_17_227 () Real)
(declare-fun l_0_17_192 () Real)
(declare-fun l_0_17_156 () Real)
(declare-fun l_0_17_12 () Real)
(declare-fun l_0_17_53 () Real)
(declare-fun l_0_17_234 () Real)
(declare-fun l_0_17_233 () Real)
(declare-fun l_0_17_232 () Real)
(declare-fun l_0_17_211 () Real)
(declare-fun l_0_17_186 () Real)
(declare-fun l_0_17_210 () Real)
(declare-fun l_0_17_197 () Real)
(declare-fun l_0_17_17 () Real)
(declare-fun l_0_17_175 () Real)
(declare-fun l_0_17_150 () Real)
(declare-fun l_0_17_174 () Real)
(declare-fun l_0_17_161 () Real)
(declare-fun l_0_17_59 () Real)
(declare-fun l_0_17_23 () Real)
(declare-fun l_0_17_240 () Real)
(declare-fun l_0_17_203 () Real)
(declare-fun l_0_17_167 () Real)
(declare-fun l_0_17_247 () Real)
(declare-fun l_0_17_246 () Real)
(declare-fun l_0_17_245 () Real)
(declare-fun l_0_17_9 () Real)
(declare-fun l_0_17_45 () Real)
(declare-fun l_0_17_189 () Real)
(declare-fun l_0_17_153 () Real)
(declare-fun l_0_17_49 () Real)
(declare-fun l_0_17_193 () Real)
(declare-fun l_0_17_157 () Real)
(declare-fun l_0_17_13 () Real)
(declare-fun l_0_17_54 () Real)
(declare-fun l_0_17_198 () Real)
(declare-fun l_0_17_18 () Real)
(declare-fun l_0_17_162 () Real)
(declare-fun l_0_17_60 () Real)
(declare-fun l_0_17_24 () Real)
(declare-fun l_0_17_204 () Real)
(declare-fun l_0_17_168 () Real)
(declare-fun l_0_17_46 () Real)
(declare-fun l_0_17_190 () Real)
(declare-fun l_0_17_154 () Real)
(declare-fun l_0_17_10 () Real)
(declare-fun l_0_17_50 () Real)
(declare-fun l_0_17_194 () Real)
(declare-fun l_0_17_158 () Real)
(declare-fun l_0_17_14 () Real)
(declare-fun l_0_17_55 () Real)
(declare-fun l_0_17_199 () Real)
(declare-fun l_0_17_163 () Real)
(declare-fun l_0_17_19 () Real)
(declare-fun l_0_17_81 () Real)
(declare-fun l_0_17_80 () Real)
(declare-fun l_0_17_79 () Real)
(declare-fun l_0_17_61 () Real)
(declare-fun l_0_17_205 () Real)
(declare-fun l_0_17_169 () Real)
(declare-fun l_0_17_117 () Real)
(declare-fun l_0_17_116 () Real)
(declare-fun l_0_17_115 () Real)
(declare-fun l_0_17_25 () Real)
(declare-fun l_0_17_68 () Real)
(declare-fun l_0_17_212 () Real)
(declare-fun l_0_17_176 () Real)
(declare-fun l_0_17_32 () Real)
(declare-fun l_0_17_51 () Real)
(declare-fun l_0_17_195 () Real)
(declare-fun l_0_17_159 () Real)
(declare-fun l_0_17_15 () Real)
(declare-fun l_0_17_56 () Real)
(declare-fun l_0_17_200 () Real)
(declare-fun l_0_17_164 () Real)
(declare-fun l_0_17_20 () Real)
(declare-fun l_0_17_85 () Real)
(declare-fun l_0_17_84 () Real)
(declare-fun l_0_17_83 () Real)
(declare-fun l_0_17_62 () Real)
(declare-fun l_0_17_206 () Real)
(declare-fun l_0_17_170 () Real)
(declare-fun l_0_17_26 () Real)
(declare-fun l_0_17_121 () Real)
(declare-fun l_0_17_120 () Real)
(declare-fun l_0_17_119 () Real)
(declare-fun l_0_17_69 () Real)
(declare-fun l_0_17_213 () Real)
(declare-fun l_0_17_177 () Real)
(declare-fun l_0_17_33 () Real)
(declare-fun l_0_17_57 () Real)
(declare-fun l_0_17_21 () Real)
(declare-fun l_0_17_201 () Real)
(declare-fun l_0_17_165 () Real)
(declare-fun l_0_17_90 () Real)
(declare-fun l_0_17_89 () Real)
(declare-fun l_0_17_88 () Real)
(declare-fun l_0_17_63 () Real)
(declare-fun l_0_17_27 () Real)
(declare-fun l_0_17_207 () Real)
(declare-fun l_0_17_171 () Real)
(declare-fun l_0_17_126 () Real)
(declare-fun l_0_17_125 () Real)
(declare-fun l_0_17_124 () Real)
(declare-fun l_0_17_70 () Real)
(declare-fun l_0_17_34 () Real)
(declare-fun l_0_17_214 () Real)
(declare-fun l_0_17_178 () Real)
(declare-fun l_0_17_96 () Real)
(declare-fun l_0_17_95 () Real)
(declare-fun l_0_17_94 () Real)
(declare-fun l_0_17_64 () Real)
(declare-fun l_0_17_28 () Real)
(declare-fun l_0_17_208 () Real)
(declare-fun l_0_17_172 () Real)
(declare-fun l_0_17_132 () Real)
(declare-fun l_0_17_131 () Real)
(declare-fun l_0_17_130 () Real)
(declare-fun l_0_17_71 () Real)
(declare-fun l_0_17_35 () Real)
(declare-fun l_0_17_215 () Real)
(declare-fun l_0_17_179 () Real)
(declare-fun l_0_17_72 () Real)
(declare-fun l_0_17_36 () Real)
(declare-fun l_0_17_216 () Real)
(declare-fun l_0_17_180 () Real)
(declare-fun l_0_17_289 () Real)
(declare-fun l_0_17_295 () Real)
(declare-fun l_0_17_296 () Real)
(declare-fun l_0_17_297 () Real)
(declare-fun l_0_17_82 () Real)
(declare-fun l_0_17_298 () Real)
(declare-fun l_0_17_118 () Real)
(declare-fun l_0_17_86 () Real)
(declare-fun l_0_17_302 () Real)
(declare-fun l_0_17_301 () Real)
(declare-fun l_0_17_300 () Real)
(declare-fun l_0_17_299 () Real)
(declare-fun l_0_17_259 () Real)
(declare-fun l_0_17_253 () Real)
(declare-fun l_0_17_122 () Real)
(declare-fun l_0_17_91 () Real)
(declare-fun l_0_17_307 () Real)
(declare-fun l_0_17_306 () Real)
(declare-fun l_0_17_305 () Real)
(declare-fun l_0_17_304 () Real)
(declare-fun l_0_17_127 () Real)
(declare-fun l_0_17_97 () Real)
(declare-fun l_0_17_313 () Real)
(declare-fun l_0_17_312 () Real)
(declare-fun l_0_17_311 () Real)
(declare-fun l_0_17_310 () Real)
(declare-fun l_0_17_133 () Real)
(declare-fun l_0_17_320 () Real)
(declare-fun l_0_17_140 () Real)
(declare-fun l_0_17_104 () Real)
(declare-fun l_0_17_369 () Real)
(declare-fun l_0_17_333 () Real)
(declare-fun l_0_17_370 () Real)
(declare-fun l_0_17_334 () Real)
(declare-fun l_0_17_374 () Real)
(declare-fun l_0_17_373 () Real)
(declare-fun l_0_17_372 () Real)
(declare-fun l_0_17_371 () Real)
(declare-fun l_0_17_338 () Real)
(declare-fun l_0_17_337 () Real)
(declare-fun l_0_17_336 () Real)
(declare-fun l_0_17_335 () Real)
(declare-fun l_0_17_260 () Real)
(declare-fun l_0_17_379 () Real)
(declare-fun l_0_17_378 () Real)
(declare-fun l_0_17_377 () Real)
(declare-fun l_0_17_376 () Real)
(declare-fun l_0_17_343 () Real)
(declare-fun l_0_17_342 () Real)
(declare-fun l_0_17_341 () Real)
(declare-fun l_0_17_340 () Real)
(declare-fun l_0_17_261 () Real)
(declare-fun l_0_17_262 () Real)
(declare-fun l_0_17_226 () Real)
(declare-fun l_0_17_303 () Real)
(declare-fun l_0_17_266 () Real)
(declare-fun l_0_17_265 () Real)
(declare-fun l_0_17_264 () Real)
(declare-fun l_0_17_263 () Real)
(declare-fun l_0_17_308 () Real)
(declare-fun l_0_17_271 () Real)
(declare-fun l_0_17_270 () Real)
(declare-fun l_0_17_269 () Real)
(declare-fun l_0_17_268 () Real)
(declare-fun l_0_17_314 () Real)
(declare-fun l_0_17_277 () Real)
(declare-fun l_0_17_276 () Real)
(declare-fun l_0_17_275 () Real)
(declare-fun l_0_17_274 () Real)
(declare-fun l_0_17_321 () Real)
(declare-fun l_0_17_284 () Real)
(declare-fun l_0_17_230 () Real)
(declare-fun l_0_17_309 () Real)
(declare-fun l_0_17_315 () Real)
(declare-fun l_0_17_322 () Real)
(declare-fun l_0_17_235 () Real)
(declare-fun l_0_17_316 () Real)
(declare-fun l_0_17_323 () Real)
(declare-fun l_0_17_241 () Real)
(declare-fun l_0_17_324 () Real)
(declare-fun l_0_17_248 () Real)
(declare-fun l_0_17_143 () Real)
(declare-fun l_0_17_136 () Real)
(declare-fun l_0_17_142 () Real)
(declare-fun l_0_17_135 () Real)
(declare-fun l_0_17_141 () Real)
(declare-fun l_0_17_134 () Real)
(declare-fun l_0_17_99 () Real)
(declare-fun l_0_17_106 () Real)
(declare-fun l_0_17_98 () Real)
(declare-fun l_0_17_105 () Real)
(declare-fun l_0_17_107 () Real)
(declare-fun l_0_17_100 () Real)
(declare-fun l_0_17_287 () Real)
(declare-fun l_0_17_280 () Real)
(declare-fun l_0_17_286 () Real)
(declare-fun l_0_17_279 () Real)
(declare-fun l_0_17_285 () Real)
(declare-fun l_0_17_278 () Real)
(declare-fun l_0_17_267 () Real)
(declare-fun l_0_17_242 () Real)
(declare-fun l_0_17_231 () Real)
(declare-fun l_0_17_273 () Real)
(declare-fun l_0_17_272 () Real)
(declare-fun l_0_17_243 () Real)
(declare-fun l_0_17_237 () Real)
(declare-fun l_0_17_236 () Real)
(declare-fun l_0_17_244 () Real)
(declare-fun l_0_17_288 () Real)
(declare-fun l_0_17_251 () Real)
(declare-fun l_0_17_250 () Real)
(declare-fun l_0_17_249 () Real)
(declare-fun l_0_17_87 () Real)
(declare-fun l_0_17_123 () Real)
(declare-fun l_0_17_92 () Real)
(declare-fun l_0_17_128 () Real)
(declare-fun l_0_17_93 () Real)
(declare-fun l_0_17_129 () Real)
(declare-fun l_0_17_144 () Real)
(declare-fun l_0_17_108 () Real)
(declare-fun l_0_17_380 () Real)
(declare-fun l_0_17_375 () Real)
(declare-fun l_0_17_344 () Real)
(declare-fun l_0_17_339 () Real)
(declare-fun l_0_17_381 () Real)
(declare-fun l_0_17_345 () Real)
(declare-fun l_0_17_396 () Real)
(declare-fun l_0_17_360 () Real)
(declare-fun l_0_17_252 () Real)
(declare-fun l_0_18_75 () Real)
(declare-fun l_0_18_74 () Real)
(declare-fun l_0_18_431 () Real)
(declare-fun l_0_18_424 () Real)
(declare-fun l_0_18_430 () Real)
(declare-fun l_0_18_423 () Real)
(declare-fun l_0_18_429 () Real)
(declare-fun l_0_18_422 () Real)
(declare-fun l_0_18_428 () Real)
(declare-fun l_0_18_421 () Real)
(declare-fun l_0_18_427 () Real)
(declare-fun l_0_18_420 () Real)
(declare-fun l_0_18_426 () Real)
(declare-fun l_0_18_419 () Real)
(declare-fun l_0_18_425 () Real)
(declare-fun l_0_18_418 () Real)
(declare-fun l_0_18_395 () Real)
(declare-fun l_0_18_388 () Real)
(declare-fun l_0_18_394 () Real)
(declare-fun l_0_18_387 () Real)
(declare-fun l_0_18_393 () Real)
(declare-fun l_0_18_386 () Real)
(declare-fun l_0_18_392 () Real)
(declare-fun l_0_18_385 () Real)
(declare-fun l_0_18_391 () Real)
(declare-fun l_0_18_384 () Real)
(declare-fun l_0_18_390 () Real)
(declare-fun l_0_18_383 () Real)
(declare-fun l_0_18_389 () Real)
(declare-fun l_0_18_382 () Real)
(declare-fun l_0_18_359 () Real)
(declare-fun l_0_18_352 () Real)
(declare-fun l_0_18_358 () Real)
(declare-fun l_0_18_351 () Real)
(declare-fun l_0_18_357 () Real)
(declare-fun l_0_18_350 () Real)
(declare-fun l_0_18_356 () Real)
(declare-fun l_0_18_349 () Real)
(declare-fun l_0_18_355 () Real)
(declare-fun l_0_18_348 () Real)
(declare-fun l_0_18_354 () Real)
(declare-fun l_0_18_347 () Real)
(declare-fun l_0_18_353 () Real)
(declare-fun l_0_18_346 () Real)
(declare-fun l_0_18_282 () Real)
(declare-fun l_0_18_255 () Real)
(declare-fun l_0_18_281 () Real)
(declare-fun l_0_18_254 () Real)
(declare-fun l_0_18_239 () Real)
(declare-fun l_0_18_219 () Real)
(declare-fun l_0_18_238 () Real)
(declare-fun l_0_18_218 () Real)
(declare-fun l_0_18_147 () Real)
(declare-fun l_0_18_146 () Real)
(declare-fun l_0_18_111 () Real)
(declare-fun l_0_18_110 () Real)
(declare-fun l_0_18_398 () Real)
(declare-fun l_0_18_397 () Real)
(declare-fun l_0_18_362 () Real)
(declare-fun l_0_18_361 () Real)
(declare-fun l_0_18_326 () Real)
(declare-fun l_0_18_325 () Real)
(declare-fun l_0_18_291 () Real)
(declare-fun l_0_18_290 () Real)
(declare-fun l_0_18_37 () Real)
(declare-fun l_0_18_181 () Real)
(declare-fun l_0_18_145 () Real)
(declare-fun l_0_18_1 () Real)
(declare-fun l_0_18_38 () Real)
(declare-fun l_0_18_319 () Real)
(declare-fun l_0_18_294 () Real)
(declare-fun l_0_18_318 () Real)
(declare-fun l_0_18_293 () Real)
(declare-fun l_0_18_317 () Real)
(declare-fun l_0_18_292 () Real)
(declare-fun l_0_18_220 () Real)
(declare-fun l_0_18_217 () Real)
(declare-fun l_0_18_182 () Real)
(declare-fun l_0_18_139 () Real)
(declare-fun l_0_18_114 () Real)
(declare-fun l_0_18_138 () Real)
(declare-fun l_0_18_113 () Real)
(declare-fun l_0_18_137 () Real)
(declare-fun l_0_18_112 () Real)
(declare-fun l_0_18_78 () Real)
(declare-fun l_0_18_103 () Real)
(declare-fun l_0_18_77 () Real)
(declare-fun l_0_18_102 () Real)
(declare-fun l_0_18_76 () Real)
(declare-fun l_0_18_101 () Real)
(declare-fun l_0_18_2 () Real)
(declare-fun l_0_18_40 () Real)
(declare-fun l_0_18_184 () Real)
(declare-fun l_0_18_148 () Real)
(declare-fun l_0_18_4 () Real)
(declare-fun l_0_18_43 () Real)
(declare-fun l_0_18_187 () Real)
(declare-fun l_0_18_151 () Real)
(declare-fun l_0_18_7 () Real)
(declare-fun l_0_18_47 () Real)
(declare-fun l_0_18_191 () Real)
(declare-fun l_0_18_155 () Real)
(declare-fun l_0_18_11 () Real)
(declare-fun l_0_18_52 () Real)
(declare-fun l_0_18_196 () Real)
(declare-fun l_0_18_160 () Real)
(declare-fun l_0_18_16 () Real)
(declare-fun l_0_18_73 () Real)
(declare-fun l_0_18_58 () Real)
(declare-fun l_0_18_202 () Real)
(declare-fun l_0_18_166 () Real)
(declare-fun l_0_18_109 () Real)
(declare-fun l_0_18_22 () Real)
(declare-fun l_0_18_65 () Real)
(declare-fun l_0_18_209 () Real)
(declare-fun l_0_18_173 () Real)
(declare-fun l_0_18_29 () Real)
(declare-fun l_0_18_402 () Real)
(declare-fun l_0_18_401 () Real)
(declare-fun l_0_18_400 () Real)
(declare-fun l_0_18_39 () Real)
(declare-fun l_0_18_366 () Real)
(declare-fun l_0_18_365 () Real)
(declare-fun l_0_18_364 () Real)
(declare-fun l_0_18_330 () Real)
(declare-fun l_0_18_329 () Real)
(declare-fun l_0_18_328 () Real)
(declare-fun l_0_18_3 () Real)
(declare-fun l_0_18_221 () Real)
(declare-fun l_0_18_183 () Real)
(declare-fun l_0_18_41 () Real)
(declare-fun l_0_18_5 () Real)
(declare-fun l_0_18_222 () Real)
(declare-fun l_0_18_185 () Real)
(declare-fun l_0_18_149 () Real)
(declare-fun l_0_18_67 () Real)
(declare-fun l_0_18_42 () Real)
(declare-fun l_0_18_66 () Real)
(declare-fun l_0_18_44 () Real)
(declare-fun l_0_18_6 () Real)
(declare-fun l_0_18_31 () Real)
(declare-fun l_0_18_30 () Real)
(declare-fun l_0_18_8 () Real)
(declare-fun l_0_18_225 () Real)
(declare-fun l_0_18_224 () Real)
(declare-fun l_0_18_223 () Real)
(declare-fun l_0_18_188 () Real)
(declare-fun l_0_18_152 () Real)
(declare-fun l_0_18_48 () Real)
(declare-fun l_0_18_283 () Real)
(declare-fun l_0_18_258 () Real)
(declare-fun l_0_18_257 () Real)
(declare-fun l_0_18_256 () Real)
(declare-fun l_0_18_229 () Real)
(declare-fun l_0_18_228 () Real)
(declare-fun l_0_18_227 () Real)
(declare-fun l_0_18_192 () Real)
(declare-fun l_0_18_156 () Real)
(declare-fun l_0_18_12 () Real)
(declare-fun l_0_18_53 () Real)
(declare-fun l_0_18_234 () Real)
(declare-fun l_0_18_233 () Real)
(declare-fun l_0_18_232 () Real)
(declare-fun l_0_18_211 () Real)
(declare-fun l_0_18_186 () Real)
(declare-fun l_0_18_210 () Real)
(declare-fun l_0_18_197 () Real)
(declare-fun l_0_18_17 () Real)
(declare-fun l_0_18_175 () Real)
(declare-fun l_0_18_150 () Real)
(declare-fun l_0_18_174 () Real)
(declare-fun l_0_18_161 () Real)
(declare-fun l_0_18_59 () Real)
(declare-fun l_0_18_23 () Real)
(declare-fun l_0_18_240 () Real)
(declare-fun l_0_18_203 () Real)
(declare-fun l_0_18_167 () Real)
(declare-fun l_0_18_247 () Real)
(declare-fun l_0_18_246 () Real)
(declare-fun l_0_18_245 () Real)
(declare-fun l_0_18_9 () Real)
(declare-fun l_0_18_45 () Real)
(declare-fun l_0_18_189 () Real)
(declare-fun l_0_18_153 () Real)
(declare-fun l_0_18_49 () Real)
(declare-fun l_0_18_193 () Real)
(declare-fun l_0_18_157 () Real)
(declare-fun l_0_18_13 () Real)
(declare-fun l_0_18_54 () Real)
(declare-fun l_0_18_198 () Real)
(declare-fun l_0_18_18 () Real)
(declare-fun l_0_18_162 () Real)
(declare-fun l_0_18_60 () Real)
(declare-fun l_0_18_24 () Real)
(declare-fun l_0_18_204 () Real)
(declare-fun l_0_18_168 () Real)
(declare-fun l_0_18_46 () Real)
(declare-fun l_0_18_190 () Real)
(declare-fun l_0_18_154 () Real)
(declare-fun l_0_18_10 () Real)
(declare-fun l_0_18_50 () Real)
(declare-fun l_0_18_194 () Real)
(declare-fun l_0_18_158 () Real)
(declare-fun l_0_18_14 () Real)
(declare-fun l_0_18_55 () Real)
(declare-fun l_0_18_199 () Real)
(declare-fun l_0_18_163 () Real)
(declare-fun l_0_18_19 () Real)
(declare-fun l_0_18_81 () Real)
(declare-fun l_0_18_80 () Real)
(declare-fun l_0_18_79 () Real)
(declare-fun l_0_18_61 () Real)
(declare-fun l_0_18_205 () Real)
(declare-fun l_0_18_169 () Real)
(declare-fun l_0_18_117 () Real)
(declare-fun l_0_18_116 () Real)
(declare-fun l_0_18_115 () Real)
(declare-fun l_0_18_25 () Real)
(declare-fun l_0_18_68 () Real)
(declare-fun l_0_18_212 () Real)
(declare-fun l_0_18_176 () Real)
(declare-fun l_0_18_32 () Real)
(declare-fun l_0_18_51 () Real)
(declare-fun l_0_18_195 () Real)
(declare-fun l_0_18_159 () Real)
(declare-fun l_0_18_15 () Real)
(declare-fun l_0_18_56 () Real)
(declare-fun l_0_18_200 () Real)
(declare-fun l_0_18_164 () Real)
(declare-fun l_0_18_20 () Real)
(declare-fun l_0_18_85 () Real)
(declare-fun l_0_18_84 () Real)
(declare-fun l_0_18_83 () Real)
(declare-fun l_0_18_62 () Real)
(declare-fun l_0_18_206 () Real)
(declare-fun l_0_18_170 () Real)
(declare-fun l_0_18_26 () Real)
(declare-fun l_0_18_121 () Real)
(declare-fun l_0_18_120 () Real)
(declare-fun l_0_18_119 () Real)
(declare-fun l_0_18_69 () Real)
(declare-fun l_0_18_213 () Real)
(declare-fun l_0_18_177 () Real)
(declare-fun l_0_18_33 () Real)
(declare-fun l_0_18_57 () Real)
(declare-fun l_0_18_21 () Real)
(declare-fun l_0_18_201 () Real)
(declare-fun l_0_18_165 () Real)
(declare-fun l_0_18_90 () Real)
(declare-fun l_0_18_89 () Real)
(declare-fun l_0_18_88 () Real)
(declare-fun l_0_18_63 () Real)
(declare-fun l_0_18_27 () Real)
(declare-fun l_0_18_207 () Real)
(declare-fun l_0_18_171 () Real)
(declare-fun l_0_18_126 () Real)
(declare-fun l_0_18_125 () Real)
(declare-fun l_0_18_124 () Real)
(declare-fun l_0_18_70 () Real)
(declare-fun l_0_18_34 () Real)
(declare-fun l_0_18_214 () Real)
(declare-fun l_0_18_178 () Real)
(declare-fun l_0_18_96 () Real)
(declare-fun l_0_18_95 () Real)
(declare-fun l_0_18_94 () Real)
(declare-fun l_0_18_64 () Real)
(declare-fun l_0_18_28 () Real)
(declare-fun l_0_18_208 () Real)
(declare-fun l_0_18_172 () Real)
(declare-fun l_0_18_132 () Real)
(declare-fun l_0_18_131 () Real)
(declare-fun l_0_18_130 () Real)
(declare-fun l_0_18_71 () Real)
(declare-fun l_0_18_35 () Real)
(declare-fun l_0_18_215 () Real)
(declare-fun l_0_18_179 () Real)
(declare-fun l_0_18_72 () Real)
(declare-fun l_0_18_36 () Real)
(declare-fun l_0_18_216 () Real)
(declare-fun l_0_18_180 () Real)
(declare-fun l_0_18_289 () Real)
(declare-fun l_0_18_295 () Real)
(declare-fun l_0_18_403 () Real)
(declare-fun l_0_18_367 () Real)
(declare-fun l_0_18_331 () Real)
(declare-fun l_0_18_296 () Real)
(declare-fun l_0_18_297 () Real)
(declare-fun l_0_18_82 () Real)
(declare-fun l_0_18_298 () Real)
(declare-fun l_0_18_118 () Real)
(declare-fun l_0_18_86 () Real)
(declare-fun l_0_18_302 () Real)
(declare-fun l_0_18_301 () Real)
(declare-fun l_0_18_300 () Real)
(declare-fun l_0_18_299 () Real)
(declare-fun l_0_18_259 () Real)
(declare-fun l_0_18_253 () Real)
(declare-fun l_0_18_122 () Real)
(declare-fun l_0_18_91 () Real)
(declare-fun l_0_18_307 () Real)
(declare-fun l_0_18_306 () Real)
(declare-fun l_0_18_305 () Real)
(declare-fun l_0_18_304 () Real)
(declare-fun l_0_18_127 () Real)
(declare-fun l_0_18_97 () Real)
(declare-fun l_0_18_313 () Real)
(declare-fun l_0_18_312 () Real)
(declare-fun l_0_18_311 () Real)
(declare-fun l_0_18_310 () Real)
(declare-fun l_0_18_133 () Real)
(declare-fun l_0_18_320 () Real)
(declare-fun l_0_18_140 () Real)
(declare-fun l_0_18_104 () Real)
(declare-fun l_0_18_404 () Real)
(declare-fun l_0_18_399 () Real)
(declare-fun l_0_18_368 () Real)
(declare-fun l_0_18_363 () Real)
(declare-fun l_0_18_332 () Real)
(declare-fun l_0_18_327 () Real)
(declare-fun l_0_18_405 () Real)
(declare-fun l_0_18_369 () Real)
(declare-fun l_0_18_333 () Real)
(declare-fun l_0_18_406 () Real)
(declare-fun l_0_18_370 () Real)
(declare-fun l_0_18_334 () Real)
(declare-fun l_0_18_410 () Real)
(declare-fun l_0_18_409 () Real)
(declare-fun l_0_18_408 () Real)
(declare-fun l_0_18_407 () Real)
(declare-fun l_0_18_374 () Real)
(declare-fun l_0_18_373 () Real)
(declare-fun l_0_18_372 () Real)
(declare-fun l_0_18_371 () Real)
(declare-fun l_0_18_338 () Real)
(declare-fun l_0_18_337 () Real)
(declare-fun l_0_18_336 () Real)
(declare-fun l_0_18_335 () Real)
(declare-fun l_0_18_260 () Real)
(declare-fun l_0_18_415 () Real)
(declare-fun l_0_18_414 () Real)
(declare-fun l_0_18_413 () Real)
(declare-fun l_0_18_412 () Real)
(declare-fun l_0_18_379 () Real)
(declare-fun l_0_18_378 () Real)
(declare-fun l_0_18_377 () Real)
(declare-fun l_0_18_376 () Real)
(declare-fun l_0_18_343 () Real)
(declare-fun l_0_18_342 () Real)
(declare-fun l_0_18_341 () Real)
(declare-fun l_0_18_340 () Real)
(declare-fun l_0_18_261 () Real)
(declare-fun l_0_18_262 () Real)
(declare-fun l_0_18_226 () Real)
(declare-fun l_0_18_303 () Real)
(declare-fun l_0_18_266 () Real)
(declare-fun l_0_18_265 () Real)
(declare-fun l_0_18_264 () Real)
(declare-fun l_0_18_263 () Real)
(declare-fun l_0_18_308 () Real)
(declare-fun l_0_18_271 () Real)
(declare-fun l_0_18_270 () Real)
(declare-fun l_0_18_269 () Real)
(declare-fun l_0_18_268 () Real)
(declare-fun l_0_18_314 () Real)
(declare-fun l_0_18_277 () Real)
(declare-fun l_0_18_276 () Real)
(declare-fun l_0_18_275 () Real)
(declare-fun l_0_18_274 () Real)
(declare-fun l_0_18_321 () Real)
(declare-fun l_0_18_284 () Real)
(declare-fun l_0_18_230 () Real)
(declare-fun l_0_18_309 () Real)
(declare-fun l_0_18_315 () Real)
(declare-fun l_0_18_322 () Real)
(declare-fun l_0_18_235 () Real)
(declare-fun l_0_18_316 () Real)
(declare-fun l_0_18_323 () Real)
(declare-fun l_0_18_241 () Real)
(declare-fun l_0_18_324 () Real)
(declare-fun l_0_18_248 () Real)
(declare-fun l_0_18_143 () Real)
(declare-fun l_0_18_136 () Real)
(declare-fun l_0_18_142 () Real)
(declare-fun l_0_18_135 () Real)
(declare-fun l_0_18_141 () Real)
(declare-fun l_0_18_134 () Real)
(declare-fun l_0_18_99 () Real)
(declare-fun l_0_18_106 () Real)
(declare-fun l_0_18_98 () Real)
(declare-fun l_0_18_105 () Real)
(declare-fun l_0_18_107 () Real)
(declare-fun l_0_18_100 () Real)
(declare-fun l_0_18_287 () Real)
(declare-fun l_0_18_280 () Real)
(declare-fun l_0_18_286 () Real)
(declare-fun l_0_18_279 () Real)
(declare-fun l_0_18_285 () Real)
(declare-fun l_0_18_278 () Real)
(declare-fun l_0_18_267 () Real)
(declare-fun l_0_18_242 () Real)
(declare-fun l_0_18_231 () Real)
(declare-fun l_0_18_273 () Real)
(declare-fun l_0_18_272 () Real)
(declare-fun l_0_18_243 () Real)
(declare-fun l_0_18_237 () Real)
(declare-fun l_0_18_236 () Real)
(declare-fun l_0_18_244 () Real)
(declare-fun l_0_18_288 () Real)
(declare-fun l_0_18_251 () Real)
(declare-fun l_0_18_250 () Real)
(declare-fun l_0_18_249 () Real)
(declare-fun l_0_18_87 () Real)
(declare-fun l_0_18_123 () Real)
(declare-fun l_0_18_92 () Real)
(declare-fun l_0_18_128 () Real)
(declare-fun l_0_18_93 () Real)
(declare-fun l_0_18_129 () Real)
(declare-fun l_0_18_144 () Real)
(declare-fun l_0_18_108 () Real)
(declare-fun l_0_18_416 () Real)
(declare-fun l_0_18_411 () Real)
(declare-fun l_0_18_380 () Real)
(declare-fun l_0_18_375 () Real)
(declare-fun l_0_18_344 () Real)
(declare-fun l_0_18_339 () Real)
(declare-fun l_0_18_417 () Real)
(declare-fun l_0_18_381 () Real)
(declare-fun l_0_18_345 () Real)
(declare-fun l_0_18_432 () Real)
(declare-fun l_0_18_396 () Real)
(declare-fun l_0_18_360 () Real)
(declare-fun l_0_18_252 () Real)
(declare-fun l_0_19_75 () Real)
(declare-fun l_0_19_74 () Real)
(declare-fun l_0_19_434 () Real)
(declare-fun l_0_19_433 () Real)
(declare-fun l_0_19_398 () Real)
(declare-fun l_0_19_397 () Real)
(declare-fun l_0_19_362 () Real)
(declare-fun l_0_19_361 () Real)
(declare-fun l_0_19_326 () Real)
(declare-fun l_0_19_325 () Real)
(declare-fun l_0_19_291 () Real)
(declare-fun l_0_19_290 () Real)
(declare-fun l_0_19_111 () Real)
(declare-fun l_0_19_110 () Real)
(declare-fun l_0_19_467 () Real)
(declare-fun l_0_19_460 () Real)
(declare-fun l_0_19_466 () Real)
(declare-fun l_0_19_459 () Real)
(declare-fun l_0_19_465 () Real)
(declare-fun l_0_19_458 () Real)
(declare-fun l_0_19_464 () Real)
(declare-fun l_0_19_457 () Real)
(declare-fun l_0_19_463 () Real)
(declare-fun l_0_19_456 () Real)
(declare-fun l_0_19_462 () Real)
(declare-fun l_0_19_455 () Real)
(declare-fun l_0_19_461 () Real)
(declare-fun l_0_19_454 () Real)
(declare-fun l_0_19_431 () Real)
(declare-fun l_0_19_424 () Real)
(declare-fun l_0_19_430 () Real)
(declare-fun l_0_19_423 () Real)
(declare-fun l_0_19_429 () Real)
(declare-fun l_0_19_422 () Real)
(declare-fun l_0_19_428 () Real)
(declare-fun l_0_19_421 () Real)
(declare-fun l_0_19_427 () Real)
(declare-fun l_0_19_420 () Real)
(declare-fun l_0_19_426 () Real)
(declare-fun l_0_19_419 () Real)
(declare-fun l_0_19_425 () Real)
(declare-fun l_0_19_418 () Real)
(declare-fun l_0_19_395 () Real)
(declare-fun l_0_19_388 () Real)
(declare-fun l_0_19_394 () Real)
(declare-fun l_0_19_387 () Real)
(declare-fun l_0_19_393 () Real)
(declare-fun l_0_19_386 () Real)
(declare-fun l_0_19_392 () Real)
(declare-fun l_0_19_385 () Real)
(declare-fun l_0_19_391 () Real)
(declare-fun l_0_19_384 () Real)
(declare-fun l_0_19_390 () Real)
(declare-fun l_0_19_383 () Real)
(declare-fun l_0_19_389 () Real)
(declare-fun l_0_19_382 () Real)
(declare-fun l_0_19_359 () Real)
(declare-fun l_0_19_352 () Real)
(declare-fun l_0_19_358 () Real)
(declare-fun l_0_19_351 () Real)
(declare-fun l_0_19_357 () Real)
(declare-fun l_0_19_350 () Real)
(declare-fun l_0_19_356 () Real)
(declare-fun l_0_19_349 () Real)
(declare-fun l_0_19_355 () Real)
(declare-fun l_0_19_348 () Real)
(declare-fun l_0_19_354 () Real)
(declare-fun l_0_19_347 () Real)
(declare-fun l_0_19_353 () Real)
(declare-fun l_0_19_346 () Real)
(declare-fun l_0_19_282 () Real)
(declare-fun l_0_19_255 () Real)
(declare-fun l_0_19_281 () Real)
(declare-fun l_0_19_254 () Real)
(declare-fun l_0_19_239 () Real)
(declare-fun l_0_19_219 () Real)
(declare-fun l_0_19_238 () Real)
(declare-fun l_0_19_218 () Real)
(declare-fun l_0_19_147 () Real)
(declare-fun l_0_19_146 () Real)
(declare-fun l_0_19_37 () Real)
(declare-fun l_0_19_181 () Real)
(declare-fun l_0_19_145 () Real)
(declare-fun l_0_19_1 () Real)
(declare-fun l_0_19_38 () Real)
(declare-fun l_0_19_319 () Real)
(declare-fun l_0_19_294 () Real)
(declare-fun l_0_19_318 () Real)
(declare-fun l_0_19_293 () Real)
(declare-fun l_0_19_317 () Real)
(declare-fun l_0_19_292 () Real)
(declare-fun l_0_19_220 () Real)
(declare-fun l_0_19_217 () Real)
(declare-fun l_0_19_182 () Real)
(declare-fun l_0_19_139 () Real)
(declare-fun l_0_19_114 () Real)
(declare-fun l_0_19_138 () Real)
(declare-fun l_0_19_113 () Real)
(declare-fun l_0_19_137 () Real)
(declare-fun l_0_19_112 () Real)
(declare-fun l_0_19_78 () Real)
(declare-fun l_0_19_103 () Real)
(declare-fun l_0_19_77 () Real)
(declare-fun l_0_19_102 () Real)
(declare-fun l_0_19_76 () Real)
(declare-fun l_0_19_101 () Real)
(declare-fun l_0_19_2 () Real)
(declare-fun l_0_19_40 () Real)
(declare-fun l_0_19_184 () Real)
(declare-fun l_0_19_148 () Real)
(declare-fun l_0_19_4 () Real)
(declare-fun l_0_19_43 () Real)
(declare-fun l_0_19_187 () Real)
(declare-fun l_0_19_151 () Real)
(declare-fun l_0_19_7 () Real)
(declare-fun l_0_19_47 () Real)
(declare-fun l_0_19_191 () Real)
(declare-fun l_0_19_155 () Real)
(declare-fun l_0_19_11 () Real)
(declare-fun l_0_19_52 () Real)
(declare-fun l_0_19_196 () Real)
(declare-fun l_0_19_160 () Real)
(declare-fun l_0_19_16 () Real)
(declare-fun l_0_19_73 () Real)
(declare-fun l_0_19_58 () Real)
(declare-fun l_0_19_202 () Real)
(declare-fun l_0_19_166 () Real)
(declare-fun l_0_19_109 () Real)
(declare-fun l_0_19_22 () Real)
(declare-fun l_0_19_65 () Real)
(declare-fun l_0_19_209 () Real)
(declare-fun l_0_19_173 () Real)
(declare-fun l_0_19_29 () Real)
(declare-fun l_0_19_438 () Real)
(declare-fun l_0_19_437 () Real)
(declare-fun l_0_19_436 () Real)
(declare-fun l_0_19_402 () Real)
(declare-fun l_0_19_401 () Real)
(declare-fun l_0_19_400 () Real)
(declare-fun l_0_19_39 () Real)
(declare-fun l_0_19_366 () Real)
(declare-fun l_0_19_365 () Real)
(declare-fun l_0_19_364 () Real)
(declare-fun l_0_19_330 () Real)
(declare-fun l_0_19_329 () Real)
(declare-fun l_0_19_328 () Real)
(declare-fun l_0_19_3 () Real)
(declare-fun l_0_19_221 () Real)
(declare-fun l_0_19_183 () Real)
(declare-fun l_0_19_41 () Real)
(declare-fun l_0_19_5 () Real)
(declare-fun l_0_19_222 () Real)
(declare-fun l_0_19_185 () Real)
(declare-fun l_0_19_149 () Real)
(declare-fun l_0_19_67 () Real)
(declare-fun l_0_19_42 () Real)
(declare-fun l_0_19_66 () Real)
(declare-fun l_0_19_44 () Real)
(declare-fun l_0_19_6 () Real)
(declare-fun l_0_19_31 () Real)
(declare-fun l_0_19_30 () Real)
(declare-fun l_0_19_8 () Real)
(declare-fun l_0_19_225 () Real)
(declare-fun l_0_19_224 () Real)
(declare-fun l_0_19_223 () Real)
(declare-fun l_0_19_188 () Real)
(declare-fun l_0_19_152 () Real)
(declare-fun l_0_19_48 () Real)
(declare-fun l_0_19_283 () Real)
(declare-fun l_0_19_258 () Real)
(declare-fun l_0_19_257 () Real)
(declare-fun l_0_19_256 () Real)
(declare-fun l_0_19_229 () Real)
(declare-fun l_0_19_228 () Real)
(declare-fun l_0_19_227 () Real)
(declare-fun l_0_19_192 () Real)
(declare-fun l_0_19_156 () Real)
(declare-fun l_0_19_12 () Real)
(declare-fun l_0_19_53 () Real)
(declare-fun l_0_19_234 () Real)
(declare-fun l_0_19_233 () Real)
(declare-fun l_0_19_232 () Real)
(declare-fun l_0_19_211 () Real)
(declare-fun l_0_19_186 () Real)
(declare-fun l_0_19_210 () Real)
(declare-fun l_0_19_197 () Real)
(declare-fun l_0_19_17 () Real)
(declare-fun l_0_19_175 () Real)
(declare-fun l_0_19_150 () Real)
(declare-fun l_0_19_174 () Real)
(declare-fun l_0_19_161 () Real)
(declare-fun l_0_19_59 () Real)
(declare-fun l_0_19_23 () Real)
(declare-fun l_0_19_240 () Real)
(declare-fun l_0_19_203 () Real)
(declare-fun l_0_19_167 () Real)
(declare-fun l_0_19_247 () Real)
(declare-fun l_0_19_246 () Real)
(declare-fun l_0_19_245 () Real)
(declare-fun l_0_19_9 () Real)
(declare-fun l_0_19_45 () Real)
(declare-fun l_0_19_189 () Real)
(declare-fun l_0_19_153 () Real)
(declare-fun l_0_19_49 () Real)
(declare-fun l_0_19_193 () Real)
(declare-fun l_0_19_157 () Real)
(declare-fun l_0_19_13 () Real)
(declare-fun l_0_19_54 () Real)
(declare-fun l_0_19_198 () Real)
(declare-fun l_0_19_18 () Real)
(declare-fun l_0_19_162 () Real)
(declare-fun l_0_19_60 () Real)
(declare-fun l_0_19_24 () Real)
(declare-fun l_0_19_204 () Real)
(declare-fun l_0_19_168 () Real)
(declare-fun l_0_19_46 () Real)
(declare-fun l_0_19_190 () Real)
(declare-fun l_0_19_154 () Real)
(declare-fun l_0_19_10 () Real)
(declare-fun l_0_19_50 () Real)
(declare-fun l_0_19_194 () Real)
(declare-fun l_0_19_158 () Real)
(declare-fun l_0_19_14 () Real)
(declare-fun l_0_19_55 () Real)
(declare-fun l_0_19_199 () Real)
(declare-fun l_0_19_163 () Real)
(declare-fun l_0_19_19 () Real)
(declare-fun l_0_19_81 () Real)
(declare-fun l_0_19_80 () Real)
(declare-fun l_0_19_79 () Real)
(declare-fun l_0_19_61 () Real)
(declare-fun l_0_19_205 () Real)
(declare-fun l_0_19_169 () Real)
(declare-fun l_0_19_117 () Real)
(declare-fun l_0_19_116 () Real)
(declare-fun l_0_19_115 () Real)
(declare-fun l_0_19_25 () Real)
(declare-fun l_0_19_68 () Real)
(declare-fun l_0_19_212 () Real)
(declare-fun l_0_19_176 () Real)
(declare-fun l_0_19_32 () Real)
(declare-fun l_0_19_51 () Real)
(declare-fun l_0_19_195 () Real)
(declare-fun l_0_19_159 () Real)
(declare-fun l_0_19_15 () Real)
(declare-fun l_0_19_56 () Real)
(declare-fun l_0_19_200 () Real)
(declare-fun l_0_19_164 () Real)
(declare-fun l_0_19_20 () Real)
(declare-fun l_0_19_85 () Real)
(declare-fun l_0_19_84 () Real)
(declare-fun l_0_19_83 () Real)
(declare-fun l_0_19_62 () Real)
(declare-fun l_0_19_206 () Real)
(declare-fun l_0_19_170 () Real)
(declare-fun l_0_19_26 () Real)
(declare-fun l_0_19_121 () Real)
(declare-fun l_0_19_120 () Real)
(declare-fun l_0_19_119 () Real)
(declare-fun l_0_19_69 () Real)
(declare-fun l_0_19_213 () Real)
(declare-fun l_0_19_177 () Real)
(declare-fun l_0_19_33 () Real)
(declare-fun l_0_19_57 () Real)
(declare-fun l_0_19_21 () Real)
(declare-fun l_0_19_201 () Real)
(declare-fun l_0_19_165 () Real)
(declare-fun l_0_19_90 () Real)
(declare-fun l_0_19_89 () Real)
(declare-fun l_0_19_88 () Real)
(declare-fun l_0_19_63 () Real)
(declare-fun l_0_19_27 () Real)
(declare-fun l_0_19_207 () Real)
(declare-fun l_0_19_171 () Real)
(declare-fun l_0_19_126 () Real)
(declare-fun l_0_19_125 () Real)
(declare-fun l_0_19_124 () Real)
(declare-fun l_0_19_70 () Real)
(declare-fun l_0_19_34 () Real)
(declare-fun l_0_19_214 () Real)
(declare-fun l_0_19_178 () Real)
(declare-fun l_0_19_96 () Real)
(declare-fun l_0_19_95 () Real)
(declare-fun l_0_19_94 () Real)
(declare-fun l_0_19_64 () Real)
(declare-fun l_0_19_28 () Real)
(declare-fun l_0_19_208 () Real)
(declare-fun l_0_19_172 () Real)
(declare-fun l_0_19_132 () Real)
(declare-fun l_0_19_131 () Real)
(declare-fun l_0_19_130 () Real)
(declare-fun l_0_19_71 () Real)
(declare-fun l_0_19_35 () Real)
(declare-fun l_0_19_215 () Real)
(declare-fun l_0_19_179 () Real)
(declare-fun l_0_19_72 () Real)
(declare-fun l_0_19_36 () Real)
(declare-fun l_0_19_216 () Real)
(declare-fun l_0_19_180 () Real)
(declare-fun l_0_19_289 () Real)
(declare-fun l_0_19_295 () Real)
(declare-fun l_0_19_439 () Real)
(declare-fun l_0_19_403 () Real)
(declare-fun l_0_19_367 () Real)
(declare-fun l_0_19_331 () Real)
(declare-fun l_0_19_296 () Real)
(declare-fun l_0_19_297 () Real)
(declare-fun l_0_19_82 () Real)
(declare-fun l_0_19_298 () Real)
(declare-fun l_0_19_118 () Real)
(declare-fun l_0_19_86 () Real)
(declare-fun l_0_19_302 () Real)
(declare-fun l_0_19_301 () Real)
(declare-fun l_0_19_300 () Real)
(declare-fun l_0_19_299 () Real)
(declare-fun l_0_19_259 () Real)
(declare-fun l_0_19_253 () Real)
(declare-fun l_0_19_122 () Real)
(declare-fun l_0_19_91 () Real)
(declare-fun l_0_19_307 () Real)
(declare-fun l_0_19_306 () Real)
(declare-fun l_0_19_305 () Real)
(declare-fun l_0_19_304 () Real)
(declare-fun l_0_19_127 () Real)
(declare-fun l_0_19_97 () Real)
(declare-fun l_0_19_313 () Real)
(declare-fun l_0_19_312 () Real)
(declare-fun l_0_19_311 () Real)
(declare-fun l_0_19_310 () Real)
(declare-fun l_0_19_133 () Real)
(declare-fun l_0_19_320 () Real)
(declare-fun l_0_19_140 () Real)
(declare-fun l_0_19_104 () Real)
(declare-fun l_0_19_440 () Real)
(declare-fun l_0_19_435 () Real)
(declare-fun l_0_19_404 () Real)
(declare-fun l_0_19_399 () Real)
(declare-fun l_0_19_368 () Real)
(declare-fun l_0_19_363 () Real)
(declare-fun l_0_19_332 () Real)
(declare-fun l_0_19_327 () Real)
(declare-fun l_0_19_441 () Real)
(declare-fun l_0_19_405 () Real)
(declare-fun l_0_19_369 () Real)
(declare-fun l_0_19_333 () Real)
(declare-fun l_0_19_442 () Real)
(declare-fun l_0_19_406 () Real)
(declare-fun l_0_19_370 () Real)
(declare-fun l_0_19_334 () Real)
(declare-fun l_0_19_446 () Real)
(declare-fun l_0_19_445 () Real)
(declare-fun l_0_19_444 () Real)
(declare-fun l_0_19_443 () Real)
(declare-fun l_0_19_410 () Real)
(declare-fun l_0_19_409 () Real)
(declare-fun l_0_19_408 () Real)
(declare-fun l_0_19_407 () Real)
(declare-fun l_0_19_374 () Real)
(declare-fun l_0_19_373 () Real)
(declare-fun l_0_19_372 () Real)
(declare-fun l_0_19_371 () Real)
(declare-fun l_0_19_338 () Real)
(declare-fun l_0_19_337 () Real)
(declare-fun l_0_19_336 () Real)
(declare-fun l_0_19_335 () Real)
(declare-fun l_0_19_260 () Real)
(declare-fun l_0_19_451 () Real)
(declare-fun l_0_19_450 () Real)
(declare-fun l_0_19_449 () Real)
(declare-fun l_0_19_448 () Real)
(declare-fun l_0_19_415 () Real)
(declare-fun l_0_19_414 () Real)
(declare-fun l_0_19_413 () Real)
(declare-fun l_0_19_412 () Real)
(declare-fun l_0_19_379 () Real)
(declare-fun l_0_19_378 () Real)
(declare-fun l_0_19_377 () Real)
(declare-fun l_0_19_376 () Real)
(declare-fun l_0_19_343 () Real)
(declare-fun l_0_19_342 () Real)
(declare-fun l_0_19_341 () Real)
(declare-fun l_0_19_340 () Real)
(declare-fun l_0_19_261 () Real)
(declare-fun l_0_19_262 () Real)
(declare-fun l_0_19_226 () Real)
(declare-fun l_0_19_303 () Real)
(declare-fun l_0_19_266 () Real)
(declare-fun l_0_19_265 () Real)
(declare-fun l_0_19_264 () Real)
(declare-fun l_0_19_263 () Real)
(declare-fun l_0_19_308 () Real)
(declare-fun l_0_19_271 () Real)
(declare-fun l_0_19_270 () Real)
(declare-fun l_0_19_269 () Real)
(declare-fun l_0_19_268 () Real)
(declare-fun l_0_19_314 () Real)
(declare-fun l_0_19_277 () Real)
(declare-fun l_0_19_276 () Real)
(declare-fun l_0_19_275 () Real)
(declare-fun l_0_19_274 () Real)
(declare-fun l_0_19_321 () Real)
(declare-fun l_0_19_284 () Real)
(declare-fun l_0_19_230 () Real)
(declare-fun l_0_19_309 () Real)
(declare-fun l_0_19_315 () Real)
(declare-fun l_0_19_322 () Real)
(declare-fun l_0_19_235 () Real)
(declare-fun l_0_19_316 () Real)
(declare-fun l_0_19_323 () Real)
(declare-fun l_0_19_241 () Real)
(declare-fun l_0_19_324 () Real)
(declare-fun l_0_19_248 () Real)
(declare-fun l_0_19_143 () Real)
(declare-fun l_0_19_136 () Real)
(declare-fun l_0_19_142 () Real)
(declare-fun l_0_19_135 () Real)
(declare-fun l_0_19_141 () Real)
(declare-fun l_0_19_134 () Real)
(declare-fun l_0_19_99 () Real)
(declare-fun l_0_19_106 () Real)
(declare-fun l_0_19_98 () Real)
(declare-fun l_0_19_105 () Real)
(declare-fun l_0_19_107 () Real)
(declare-fun l_0_19_100 () Real)
(declare-fun l_0_19_287 () Real)
(declare-fun l_0_19_280 () Real)
(declare-fun l_0_19_286 () Real)
(declare-fun l_0_19_279 () Real)
(declare-fun l_0_19_285 () Real)
(declare-fun l_0_19_278 () Real)
(declare-fun l_0_19_267 () Real)
(declare-fun l_0_19_242 () Real)
(declare-fun l_0_19_231 () Real)
(declare-fun l_0_19_273 () Real)
(declare-fun l_0_19_272 () Real)
(declare-fun l_0_19_243 () Real)
(declare-fun l_0_19_237 () Real)
(declare-fun l_0_19_236 () Real)
(declare-fun l_0_19_244 () Real)
(declare-fun l_0_19_288 () Real)
(declare-fun l_0_19_251 () Real)
(declare-fun l_0_19_250 () Real)
(declare-fun l_0_19_249 () Real)
(declare-fun l_0_19_87 () Real)
(declare-fun l_0_19_123 () Real)
(declare-fun l_0_19_92 () Real)
(declare-fun l_0_19_128 () Real)
(declare-fun l_0_19_93 () Real)
(declare-fun l_0_19_129 () Real)
(declare-fun l_0_19_144 () Real)
(declare-fun l_0_19_108 () Real)
(declare-fun l_0_19_452 () Real)
(declare-fun l_0_19_447 () Real)
(declare-fun l_0_19_416 () Real)
(declare-fun l_0_19_411 () Real)
(declare-fun l_0_19_380 () Real)
(declare-fun l_0_19_375 () Real)
(declare-fun l_0_19_344 () Real)
(declare-fun l_0_19_339 () Real)
(declare-fun l_0_19_453 () Real)
(declare-fun l_0_19_417 () Real)
(declare-fun l_0_19_381 () Real)
(declare-fun l_0_19_345 () Real)
(declare-fun l_0_19_468 () Real)
(declare-fun l_0_19_432 () Real)
(declare-fun l_0_19_396 () Real)
(declare-fun l_0_19_360 () Real)
(declare-fun l_0_19_252 () Real)
(declare-fun l_0_20_498 () Real)
(declare-fun l_0_20_471 () Real)
(declare-fun l_0_20_497 () Real)
(declare-fun l_0_20_470 () Real)
(declare-fun l_0_20_462 () Real)
(declare-fun l_0_20_435 () Real)
(declare-fun l_0_20_461 () Real)
(declare-fun l_0_20_434 () Real)
(declare-fun l_0_20_426 () Real)
(declare-fun l_0_20_399 () Real)
(declare-fun l_0_20_425 () Real)
(declare-fun l_0_20_398 () Real)
(declare-fun l_0_20_390 () Real)
(declare-fun l_0_20_363 () Real)
(declare-fun l_0_20_389 () Real)
(declare-fun l_0_20_362 () Real)
(declare-fun l_0_20_354 () Real)
(declare-fun l_0_20_327 () Real)
(declare-fun l_0_20_353 () Real)
(declare-fun l_0_20_326 () Real)
(declare-fun l_0_20_219 () Real)
(declare-fun l_0_20_218 () Real)
(declare-fun l_0_20_75 () Real)
(declare-fun l_0_20_74 () Real)
(declare-fun l_0_20_503 () Real)
(declare-fun l_0_20_496 () Real)
(declare-fun l_0_20_502 () Real)
(declare-fun l_0_20_495 () Real)
(declare-fun l_0_20_501 () Real)
(declare-fun l_0_20_494 () Real)
(declare-fun l_0_20_500 () Real)
(declare-fun l_0_20_493 () Real)
(declare-fun l_0_20_499 () Real)
(declare-fun l_0_20_492 () Real)
(declare-fun l_0_20_491 () Real)
(declare-fun l_0_20_490 () Real)
(declare-fun l_0_20_467 () Real)
(declare-fun l_0_20_460 () Real)
(declare-fun l_0_20_466 () Real)
(declare-fun l_0_20_459 () Real)
(declare-fun l_0_20_465 () Real)
(declare-fun l_0_20_458 () Real)
(declare-fun l_0_20_464 () Real)
(declare-fun l_0_20_457 () Real)
(declare-fun l_0_20_463 () Real)
(declare-fun l_0_20_456 () Real)
(declare-fun l_0_20_455 () Real)
(declare-fun l_0_20_454 () Real)
(declare-fun l_0_20_431 () Real)
(declare-fun l_0_20_424 () Real)
(declare-fun l_0_20_430 () Real)
(declare-fun l_0_20_423 () Real)
(declare-fun l_0_20_429 () Real)
(declare-fun l_0_20_422 () Real)
(declare-fun l_0_20_428 () Real)
(declare-fun l_0_20_421 () Real)
(declare-fun l_0_20_427 () Real)
(declare-fun l_0_20_420 () Real)
(declare-fun l_0_20_419 () Real)
(declare-fun l_0_20_418 () Real)
(declare-fun l_0_20_395 () Real)
(declare-fun l_0_20_388 () Real)
(declare-fun l_0_20_394 () Real)
(declare-fun l_0_20_387 () Real)
(declare-fun l_0_20_393 () Real)
(declare-fun l_0_20_386 () Real)
(declare-fun l_0_20_392 () Real)
(declare-fun l_0_20_385 () Real)
(declare-fun l_0_20_391 () Real)
(declare-fun l_0_20_384 () Real)
(declare-fun l_0_20_383 () Real)
(declare-fun l_0_20_382 () Real)
(declare-fun l_0_20_359 () Real)
(declare-fun l_0_20_352 () Real)
(declare-fun l_0_20_358 () Real)
(declare-fun l_0_20_351 () Real)
(declare-fun l_0_20_357 () Real)
(declare-fun l_0_20_350 () Real)
(declare-fun l_0_20_356 () Real)
(declare-fun l_0_20_349 () Real)
(declare-fun l_0_20_355 () Real)
(declare-fun l_0_20_348 () Real)
(declare-fun l_0_20_347 () Real)
(declare-fun l_0_20_346 () Real)
(declare-fun l_0_20_282 () Real)
(declare-fun l_0_20_255 () Real)
(declare-fun l_0_20_281 () Real)
(declare-fun l_0_20_254 () Real)
(declare-fun l_0_20_239 () Real)
(declare-fun l_0_20_238 () Real)
(declare-fun l_0_20_147 () Real)
(declare-fun l_0_20_146 () Real)
(declare-fun l_0_20_111 () Real)
(declare-fun l_0_20_110 () Real)
(declare-fun l_0_20_474 () Real)
(declare-fun l_0_20_473 () Real)
(declare-fun l_0_20_472 () Real)
(declare-fun l_0_20_438 () Real)
(declare-fun l_0_20_437 () Real)
(declare-fun l_0_20_436 () Real)
(declare-fun l_0_20_402 () Real)
(declare-fun l_0_20_401 () Real)
(declare-fun l_0_20_400 () Real)
(declare-fun l_0_20_39 () Real)
(declare-fun l_0_20_38 () Real)
(declare-fun l_0_20_366 () Real)
(declare-fun l_0_20_365 () Real)
(declare-fun l_0_20_364 () Real)
(declare-fun l_0_20_330 () Real)
(declare-fun l_0_20_329 () Real)
(declare-fun l_0_20_328 () Real)
(declare-fun l_0_20_3 () Real)
(declare-fun l_0_20_221 () Real)
(declare-fun l_0_20_220 () Real)
(declare-fun l_0_20_2 () Real)
(declare-fun l_0_20_183 () Real)
(declare-fun l_0_20_182 () Real)
(declare-fun l_0_20_485 () Real)
(declare-fun l_0_20_484 () Real)
(declare-fun l_0_20_449 () Real)
(declare-fun l_0_20_448 () Real)
(declare-fun l_0_20_413 () Real)
(declare-fun l_0_20_412 () Real)
(declare-fun l_0_20_377 () Real)
(declare-fun l_0_20_376 () Real)
(declare-fun l_0_20_341 () Real)
(declare-fun l_0_20_340 () Real)
(declare-fun l_0_20_291 () Real)
(declare-fun l_0_20_290 () Real)
(declare-fun l_0_20_37 () Real)
(declare-fun l_0_20_181 () Real)
(declare-fun l_0_20_145 () Real)
(declare-fun l_0_20_1 () Real)
(declare-fun l_0_20_319 () Real)
(declare-fun l_0_20_294 () Real)
(declare-fun l_0_20_318 () Real)
(declare-fun l_0_20_293 () Real)
(declare-fun l_0_20_317 () Real)
(declare-fun l_0_20_292 () Real)
(declare-fun l_0_20_217 () Real)
(declare-fun l_0_20_139 () Real)
(declare-fun l_0_20_114 () Real)
(declare-fun l_0_20_138 () Real)
(declare-fun l_0_20_113 () Real)
(declare-fun l_0_20_137 () Real)
(declare-fun l_0_20_112 () Real)
(declare-fun l_0_20_78 () Real)
(declare-fun l_0_20_103 () Real)
(declare-fun l_0_20_77 () Real)
(declare-fun l_0_20_102 () Real)
(declare-fun l_0_20_76 () Real)
(declare-fun l_0_20_101 () Real)
(declare-fun l_0_20_40 () Real)
(declare-fun l_0_20_184 () Real)
(declare-fun l_0_20_148 () Real)
(declare-fun l_0_20_4 () Real)
(declare-fun l_0_20_43 () Real)
(declare-fun l_0_20_187 () Real)
(declare-fun l_0_20_151 () Real)
(declare-fun l_0_20_7 () Real)
(declare-fun l_0_20_47 () Real)
(declare-fun l_0_20_191 () Real)
(declare-fun l_0_20_155 () Real)
(declare-fun l_0_20_11 () Real)
(declare-fun l_0_20_52 () Real)
(declare-fun l_0_20_196 () Real)
(declare-fun l_0_20_160 () Real)
(declare-fun l_0_20_16 () Real)
(declare-fun l_0_20_73 () Real)
(declare-fun l_0_20_58 () Real)
(declare-fun l_0_20_202 () Real)
(declare-fun l_0_20_166 () Real)
(declare-fun l_0_20_109 () Real)
(declare-fun l_0_20_22 () Real)
(declare-fun l_0_20_65 () Real)
(declare-fun l_0_20_209 () Real)
(declare-fun l_0_20_173 () Real)
(declare-fun l_0_20_29 () Real)
(declare-fun l_0_20_41 () Real)
(declare-fun l_0_20_5 () Real)
(declare-fun l_0_20_222 () Real)
(declare-fun l_0_20_185 () Real)
(declare-fun l_0_20_149 () Real)
(declare-fun l_0_20_67 () Real)
(declare-fun l_0_20_42 () Real)
(declare-fun l_0_20_66 () Real)
(declare-fun l_0_20_44 () Real)
(declare-fun l_0_20_6 () Real)
(declare-fun l_0_20_31 () Real)
(declare-fun l_0_20_30 () Real)
(declare-fun l_0_20_8 () Real)
(declare-fun l_0_20_225 () Real)
(declare-fun l_0_20_224 () Real)
(declare-fun l_0_20_223 () Real)
(declare-fun l_0_20_188 () Real)
(declare-fun l_0_20_152 () Real)
(declare-fun l_0_20_48 () Real)
(declare-fun l_0_20_283 () Real)
(declare-fun l_0_20_258 () Real)
(declare-fun l_0_20_257 () Real)
(declare-fun l_0_20_256 () Real)
(declare-fun l_0_20_229 () Real)
(declare-fun l_0_20_228 () Real)
(declare-fun l_0_20_227 () Real)
(declare-fun l_0_20_192 () Real)
(declare-fun l_0_20_156 () Real)
(declare-fun l_0_20_12 () Real)
(declare-fun l_0_20_53 () Real)
(declare-fun l_0_20_234 () Real)
(declare-fun l_0_20_233 () Real)
(declare-fun l_0_20_232 () Real)
(declare-fun l_0_20_211 () Real)
(declare-fun l_0_20_186 () Real)
(declare-fun l_0_20_210 () Real)
(declare-fun l_0_20_197 () Real)
(declare-fun l_0_20_17 () Real)
(declare-fun l_0_20_175 () Real)
(declare-fun l_0_20_150 () Real)
(declare-fun l_0_20_174 () Real)
(declare-fun l_0_20_161 () Real)
(declare-fun l_0_20_59 () Real)
(declare-fun l_0_20_23 () Real)
(declare-fun l_0_20_240 () Real)
(declare-fun l_0_20_203 () Real)
(declare-fun l_0_20_167 () Real)
(declare-fun l_0_20_247 () Real)
(declare-fun l_0_20_246 () Real)
(declare-fun l_0_20_245 () Real)
(declare-fun l_0_20_9 () Real)
(declare-fun l_0_20_45 () Real)
(declare-fun l_0_20_189 () Real)
(declare-fun l_0_20_153 () Real)
(declare-fun l_0_20_49 () Real)
(declare-fun l_0_20_193 () Real)
(declare-fun l_0_20_157 () Real)
(declare-fun l_0_20_13 () Real)
(declare-fun l_0_20_54 () Real)
(declare-fun l_0_20_198 () Real)
(declare-fun l_0_20_18 () Real)
(declare-fun l_0_20_162 () Real)
(declare-fun l_0_20_60 () Real)
(declare-fun l_0_20_24 () Real)
(declare-fun l_0_20_204 () Real)
(declare-fun l_0_20_168 () Real)
(declare-fun l_0_20_46 () Real)
(declare-fun l_0_20_190 () Real)
(declare-fun l_0_20_154 () Real)
(declare-fun l_0_20_10 () Real)
(declare-fun l_0_20_50 () Real)
(declare-fun l_0_20_194 () Real)
(declare-fun l_0_20_158 () Real)
(declare-fun l_0_20_14 () Real)
(declare-fun l_0_20_55 () Real)
(declare-fun l_0_20_199 () Real)
(declare-fun l_0_20_163 () Real)
(declare-fun l_0_20_19 () Real)
(declare-fun l_0_20_81 () Real)
(declare-fun l_0_20_80 () Real)
(declare-fun l_0_20_79 () Real)
(declare-fun l_0_20_61 () Real)
(declare-fun l_0_20_205 () Real)
(declare-fun l_0_20_169 () Real)
(declare-fun l_0_20_117 () Real)
(declare-fun l_0_20_116 () Real)
(declare-fun l_0_20_115 () Real)
(declare-fun l_0_20_25 () Real)
(declare-fun l_0_20_68 () Real)
(declare-fun l_0_20_212 () Real)
(declare-fun l_0_20_176 () Real)
(declare-fun l_0_20_32 () Real)
(declare-fun l_0_20_51 () Real)
(declare-fun l_0_20_195 () Real)
(declare-fun l_0_20_159 () Real)
(declare-fun l_0_20_15 () Real)
(declare-fun l_0_20_56 () Real)
(declare-fun l_0_20_200 () Real)
(declare-fun l_0_20_164 () Real)
(declare-fun l_0_20_20 () Real)
(declare-fun l_0_20_85 () Real)
(declare-fun l_0_20_84 () Real)
(declare-fun l_0_20_83 () Real)
(declare-fun l_0_20_62 () Real)
(declare-fun l_0_20_206 () Real)
(declare-fun l_0_20_170 () Real)
(declare-fun l_0_20_26 () Real)
(declare-fun l_0_20_121 () Real)
(declare-fun l_0_20_120 () Real)
(declare-fun l_0_20_119 () Real)
(declare-fun l_0_20_69 () Real)
(declare-fun l_0_20_213 () Real)
(declare-fun l_0_20_177 () Real)
(declare-fun l_0_20_33 () Real)
(declare-fun l_0_20_57 () Real)
(declare-fun l_0_20_21 () Real)
(declare-fun l_0_20_201 () Real)
(declare-fun l_0_20_165 () Real)
(declare-fun l_0_20_90 () Real)
(declare-fun l_0_20_89 () Real)
(declare-fun l_0_20_88 () Real)
(declare-fun l_0_20_63 () Real)
(declare-fun l_0_20_27 () Real)
(declare-fun l_0_20_207 () Real)
(declare-fun l_0_20_171 () Real)
(declare-fun l_0_20_126 () Real)
(declare-fun l_0_20_125 () Real)
(declare-fun l_0_20_124 () Real)
(declare-fun l_0_20_70 () Real)
(declare-fun l_0_20_34 () Real)
(declare-fun l_0_20_214 () Real)
(declare-fun l_0_20_178 () Real)
(declare-fun l_0_20_96 () Real)
(declare-fun l_0_20_95 () Real)
(declare-fun l_0_20_94 () Real)
(declare-fun l_0_20_64 () Real)
(declare-fun l_0_20_28 () Real)
(declare-fun l_0_20_208 () Real)
(declare-fun l_0_20_172 () Real)
(declare-fun l_0_20_132 () Real)
(declare-fun l_0_20_131 () Real)
(declare-fun l_0_20_130 () Real)
(declare-fun l_0_20_71 () Real)
(declare-fun l_0_20_35 () Real)
(declare-fun l_0_20_215 () Real)
(declare-fun l_0_20_179 () Real)
(declare-fun l_0_20_72 () Real)
(declare-fun l_0_20_36 () Real)
(declare-fun l_0_20_216 () Real)
(declare-fun l_0_20_180 () Real)
(declare-fun l_0_20_289 () Real)
(declare-fun l_0_20_295 () Real)
(declare-fun l_0_20_475 () Real)
(declare-fun l_0_20_469 () Real)
(declare-fun l_0_20_439 () Real)
(declare-fun l_0_20_433 () Real)
(declare-fun l_0_20_403 () Real)
(declare-fun l_0_20_397 () Real)
(declare-fun l_0_20_367 () Real)
(declare-fun l_0_20_361 () Real)
(declare-fun l_0_20_331 () Real)
(declare-fun l_0_20_325 () Real)
(declare-fun l_0_20_296 () Real)
(declare-fun l_0_20_297 () Real)
(declare-fun l_0_20_82 () Real)
(declare-fun l_0_20_298 () Real)
(declare-fun l_0_20_118 () Real)
(declare-fun l_0_20_86 () Real)
(declare-fun l_0_20_302 () Real)
(declare-fun l_0_20_301 () Real)
(declare-fun l_0_20_300 () Real)
(declare-fun l_0_20_299 () Real)
(declare-fun l_0_20_259 () Real)
(declare-fun l_0_20_253 () Real)
(declare-fun l_0_20_122 () Real)
(declare-fun l_0_20_91 () Real)
(declare-fun l_0_20_307 () Real)
(declare-fun l_0_20_306 () Real)
(declare-fun l_0_20_305 () Real)
(declare-fun l_0_20_304 () Real)
(declare-fun l_0_20_127 () Real)
(declare-fun l_0_20_97 () Real)
(declare-fun l_0_20_313 () Real)
(declare-fun l_0_20_312 () Real)
(declare-fun l_0_20_311 () Real)
(declare-fun l_0_20_310 () Real)
(declare-fun l_0_20_133 () Real)
(declare-fun l_0_20_320 () Real)
(declare-fun l_0_20_140 () Real)
(declare-fun l_0_20_104 () Real)
(declare-fun l_0_20_476 () Real)
(declare-fun l_0_20_440 () Real)
(declare-fun l_0_20_404 () Real)
(declare-fun l_0_20_368 () Real)
(declare-fun l_0_20_332 () Real)
(declare-fun l_0_20_477 () Real)
(declare-fun l_0_20_441 () Real)
(declare-fun l_0_20_405 () Real)
(declare-fun l_0_20_369 () Real)
(declare-fun l_0_20_333 () Real)
(declare-fun l_0_20_478 () Real)
(declare-fun l_0_20_442 () Real)
(declare-fun l_0_20_406 () Real)
(declare-fun l_0_20_370 () Real)
(declare-fun l_0_20_334 () Real)
(declare-fun l_0_20_482 () Real)
(declare-fun l_0_20_481 () Real)
(declare-fun l_0_20_480 () Real)
(declare-fun l_0_20_479 () Real)
(declare-fun l_0_20_446 () Real)
(declare-fun l_0_20_445 () Real)
(declare-fun l_0_20_444 () Real)
(declare-fun l_0_20_443 () Real)
(declare-fun l_0_20_410 () Real)
(declare-fun l_0_20_409 () Real)
(declare-fun l_0_20_408 () Real)
(declare-fun l_0_20_407 () Real)
(declare-fun l_0_20_374 () Real)
(declare-fun l_0_20_373 () Real)
(declare-fun l_0_20_372 () Real)
(declare-fun l_0_20_371 () Real)
(declare-fun l_0_20_338 () Real)
(declare-fun l_0_20_337 () Real)
(declare-fun l_0_20_336 () Real)
(declare-fun l_0_20_335 () Real)
(declare-fun l_0_20_260 () Real)
(declare-fun l_0_20_487 () Real)
(declare-fun l_0_20_486 () Real)
(declare-fun l_0_20_451 () Real)
(declare-fun l_0_20_450 () Real)
(declare-fun l_0_20_415 () Real)
(declare-fun l_0_20_414 () Real)
(declare-fun l_0_20_379 () Real)
(declare-fun l_0_20_378 () Real)
(declare-fun l_0_20_343 () Real)
(declare-fun l_0_20_342 () Real)
(declare-fun l_0_20_261 () Real)
(declare-fun l_0_20_262 () Real)
(declare-fun l_0_20_226 () Real)
(declare-fun l_0_20_303 () Real)
(declare-fun l_0_20_266 () Real)
(declare-fun l_0_20_265 () Real)
(declare-fun l_0_20_264 () Real)
(declare-fun l_0_20_263 () Real)
(declare-fun l_0_20_308 () Real)
(declare-fun l_0_20_271 () Real)
(declare-fun l_0_20_270 () Real)
(declare-fun l_0_20_269 () Real)
(declare-fun l_0_20_268 () Real)
(declare-fun l_0_20_314 () Real)
(declare-fun l_0_20_277 () Real)
(declare-fun l_0_20_276 () Real)
(declare-fun l_0_20_275 () Real)
(declare-fun l_0_20_274 () Real)
(declare-fun l_0_20_321 () Real)
(declare-fun l_0_20_284 () Real)
(declare-fun l_0_20_230 () Real)
(declare-fun l_0_20_309 () Real)
(declare-fun l_0_20_315 () Real)
(declare-fun l_0_20_322 () Real)
(declare-fun l_0_20_235 () Real)
(declare-fun l_0_20_316 () Real)
(declare-fun l_0_20_323 () Real)
(declare-fun l_0_20_241 () Real)
(declare-fun l_0_20_324 () Real)
(declare-fun l_0_20_248 () Real)
(declare-fun l_0_20_143 () Real)
(declare-fun l_0_20_136 () Real)
(declare-fun l_0_20_142 () Real)
(declare-fun l_0_20_135 () Real)
(declare-fun l_0_20_141 () Real)
(declare-fun l_0_20_134 () Real)
(declare-fun l_0_20_99 () Real)
(declare-fun l_0_20_106 () Real)
(declare-fun l_0_20_98 () Real)
(declare-fun l_0_20_105 () Real)
(declare-fun l_0_20_107 () Real)
(declare-fun l_0_20_100 () Real)
(declare-fun l_0_20_287 () Real)
(declare-fun l_0_20_280 () Real)
(declare-fun l_0_20_286 () Real)
(declare-fun l_0_20_279 () Real)
(declare-fun l_0_20_285 () Real)
(declare-fun l_0_20_278 () Real)
(declare-fun l_0_20_267 () Real)
(declare-fun l_0_20_242 () Real)
(declare-fun l_0_20_231 () Real)
(declare-fun l_0_20_273 () Real)
(declare-fun l_0_20_272 () Real)
(declare-fun l_0_20_243 () Real)
(declare-fun l_0_20_237 () Real)
(declare-fun l_0_20_236 () Real)
(declare-fun l_0_20_244 () Real)
(declare-fun l_0_20_288 () Real)
(declare-fun l_0_20_251 () Real)
(declare-fun l_0_20_250 () Real)
(declare-fun l_0_20_249 () Real)
(declare-fun l_0_20_87 () Real)
(declare-fun l_0_20_123 () Real)
(declare-fun l_0_20_92 () Real)
(declare-fun l_0_20_128 () Real)
(declare-fun l_0_20_93 () Real)
(declare-fun l_0_20_129 () Real)
(declare-fun l_0_20_144 () Real)
(declare-fun l_0_20_108 () Real)
(declare-fun l_0_20_488 () Real)
(declare-fun l_0_20_483 () Real)
(declare-fun l_0_20_452 () Real)
(declare-fun l_0_20_447 () Real)
(declare-fun l_0_20_416 () Real)
(declare-fun l_0_20_411 () Real)
(declare-fun l_0_20_380 () Real)
(declare-fun l_0_20_375 () Real)
(declare-fun l_0_20_344 () Real)
(declare-fun l_0_20_339 () Real)
(declare-fun l_0_20_489 () Real)
(declare-fun l_0_20_453 () Real)
(declare-fun l_0_20_417 () Real)
(declare-fun l_0_20_381 () Real)
(declare-fun l_0_20_345 () Real)
(declare-fun l_0_20_504 () Real)
(declare-fun l_0_20_468 () Real)
(declare-fun l_0_20_432 () Real)
(declare-fun l_0_20_396 () Real)
(declare-fun l_0_20_360 () Real)
(declare-fun l_0_20_252 () Real)
(declare-fun l_0_21_521 () Real)
(declare-fun l_0_21_507 () Real)
(declare-fun l_0_21_520 () Real)
(declare-fun l_0_21_506 () Real)
(declare-fun l_0_21_485 () Real)
(declare-fun l_0_21_471 () Real)
(declare-fun l_0_21_484 () Real)
(declare-fun l_0_21_470 () Real)
(declare-fun l_0_21_449 () Real)
(declare-fun l_0_21_435 () Real)
(declare-fun l_0_21_448 () Real)
(declare-fun l_0_21_434 () Real)
(declare-fun l_0_21_413 () Real)
(declare-fun l_0_21_399 () Real)
(declare-fun l_0_21_412 () Real)
(declare-fun l_0_21_398 () Real)
(declare-fun l_0_21_377 () Real)
(declare-fun l_0_21_363 () Real)
(declare-fun l_0_21_376 () Real)
(declare-fun l_0_21_362 () Real)
(declare-fun l_0_21_341 () Real)
(declare-fun l_0_21_327 () Real)
(declare-fun l_0_21_340 () Real)
(declare-fun l_0_21_326 () Real)
(declare-fun l_0_21_291 () Real)
(declare-fun l_0_21_290 () Real)
(declare-fun l_0_21_183 () Real)
(declare-fun l_0_21_182 () Real)
(declare-fun l_0_21_147 () Real)
(declare-fun l_0_21_146 () Real)
(declare-fun l_0_21_534 () Real)
(declare-fun l_0_21_533 () Real)
(declare-fun l_0_21_498 () Real)
(declare-fun l_0_21_497 () Real)
(declare-fun l_0_21_462 () Real)
(declare-fun l_0_21_461 () Real)
(declare-fun l_0_21_426 () Real)
(declare-fun l_0_21_425 () Real)
(declare-fun l_0_21_390 () Real)
(declare-fun l_0_21_389 () Real)
(declare-fun l_0_21_354 () Real)
(declare-fun l_0_21_353 () Real)
(declare-fun l_0_21_219 () Real)
(declare-fun l_0_21_218 () Real)
(declare-fun l_0_21_75 () Real)
(declare-fun l_0_21_74 () Real)
(declare-fun l_0_21_539 () Real)
(declare-fun l_0_21_532 () Real)
(declare-fun l_0_21_538 () Real)
(declare-fun l_0_21_531 () Real)
(declare-fun l_0_21_537 () Real)
(declare-fun l_0_21_530 () Real)
(declare-fun l_0_21_536 () Real)
(declare-fun l_0_21_529 () Real)
(declare-fun l_0_21_535 () Real)
(declare-fun l_0_21_528 () Real)
(declare-fun l_0_21_527 () Real)
(declare-fun l_0_21_526 () Real)
(declare-fun l_0_21_503 () Real)
(declare-fun l_0_21_496 () Real)
(declare-fun l_0_21_502 () Real)
(declare-fun l_0_21_495 () Real)
(declare-fun l_0_21_501 () Real)
(declare-fun l_0_21_494 () Real)
(declare-fun l_0_21_500 () Real)
(declare-fun l_0_21_493 () Real)
(declare-fun l_0_21_499 () Real)
(declare-fun l_0_21_492 () Real)
(declare-fun l_0_21_491 () Real)
(declare-fun l_0_21_490 () Real)
(declare-fun l_0_21_467 () Real)
(declare-fun l_0_21_460 () Real)
(declare-fun l_0_21_466 () Real)
(declare-fun l_0_21_459 () Real)
(declare-fun l_0_21_465 () Real)
(declare-fun l_0_21_458 () Real)
(declare-fun l_0_21_464 () Real)
(declare-fun l_0_21_457 () Real)
(declare-fun l_0_21_463 () Real)
(declare-fun l_0_21_456 () Real)
(declare-fun l_0_21_455 () Real)
(declare-fun l_0_21_454 () Real)
(declare-fun l_0_21_431 () Real)
(declare-fun l_0_21_424 () Real)
(declare-fun l_0_21_430 () Real)
(declare-fun l_0_21_423 () Real)
(declare-fun l_0_21_429 () Real)
(declare-fun l_0_21_422 () Real)
(declare-fun l_0_21_428 () Real)
(declare-fun l_0_21_421 () Real)
(declare-fun l_0_21_427 () Real)
(declare-fun l_0_21_420 () Real)
(declare-fun l_0_21_419 () Real)
(declare-fun l_0_21_418 () Real)
(declare-fun l_0_21_395 () Real)
(declare-fun l_0_21_388 () Real)
(declare-fun l_0_21_394 () Real)
(declare-fun l_0_21_387 () Real)
(declare-fun l_0_21_393 () Real)
(declare-fun l_0_21_386 () Real)
(declare-fun l_0_21_392 () Real)
(declare-fun l_0_21_385 () Real)
(declare-fun l_0_21_391 () Real)
(declare-fun l_0_21_384 () Real)
(declare-fun l_0_21_383 () Real)
(declare-fun l_0_21_382 () Real)
(declare-fun l_0_21_359 () Real)
(declare-fun l_0_21_352 () Real)
(declare-fun l_0_21_358 () Real)
(declare-fun l_0_21_351 () Real)
(declare-fun l_0_21_357 () Real)
(declare-fun l_0_21_350 () Real)
(declare-fun l_0_21_356 () Real)
(declare-fun l_0_21_349 () Real)
(declare-fun l_0_21_355 () Real)
(declare-fun l_0_21_348 () Real)
(declare-fun l_0_21_347 () Real)
(declare-fun l_0_21_346 () Real)
(declare-fun l_0_21_282 () Real)
(declare-fun l_0_21_255 () Real)
(declare-fun l_0_21_281 () Real)
(declare-fun l_0_21_254 () Real)
(declare-fun l_0_21_239 () Real)
(declare-fun l_0_21_238 () Real)
(declare-fun l_0_21_111 () Real)
(declare-fun l_0_21_110 () Real)
(declare-fun l_0_21_510 () Real)
(declare-fun l_0_21_509 () Real)
(declare-fun l_0_21_508 () Real)
(declare-fun l_0_21_474 () Real)
(declare-fun l_0_21_473 () Real)
(declare-fun l_0_21_472 () Real)
(declare-fun l_0_21_438 () Real)
(declare-fun l_0_21_437 () Real)
(declare-fun l_0_21_436 () Real)
(declare-fun l_0_21_402 () Real)
(declare-fun l_0_21_401 () Real)
(declare-fun l_0_21_400 () Real)
(declare-fun l_0_21_39 () Real)
(declare-fun l_0_21_38 () Real)
(declare-fun l_0_21_366 () Real)
(declare-fun l_0_21_365 () Real)
(declare-fun l_0_21_364 () Real)
(declare-fun l_0_21_330 () Real)
(declare-fun l_0_21_329 () Real)
(declare-fun l_0_21_328 () Real)
(declare-fun l_0_21_3 () Real)
(declare-fun l_0_21_221 () Real)
(declare-fun l_0_21_220 () Real)
(declare-fun l_0_21_2 () Real)
(declare-fun l_0_21_37 () Real)
(declare-fun l_0_21_181 () Real)
(declare-fun l_0_21_145 () Real)
(declare-fun l_0_21_1 () Real)
(declare-fun l_0_21_319 () Real)
(declare-fun l_0_21_294 () Real)
(declare-fun l_0_21_318 () Real)
(declare-fun l_0_21_293 () Real)
(declare-fun l_0_21_317 () Real)
(declare-fun l_0_21_292 () Real)
(declare-fun l_0_21_217 () Real)
(declare-fun l_0_21_139 () Real)
(declare-fun l_0_21_114 () Real)
(declare-fun l_0_21_138 () Real)
(declare-fun l_0_21_113 () Real)
(declare-fun l_0_21_137 () Real)
(declare-fun l_0_21_112 () Real)
(declare-fun l_0_21_78 () Real)
(declare-fun l_0_21_103 () Real)
(declare-fun l_0_21_77 () Real)
(declare-fun l_0_21_102 () Real)
(declare-fun l_0_21_76 () Real)
(declare-fun l_0_21_101 () Real)
(declare-fun l_0_21_40 () Real)
(declare-fun l_0_21_184 () Real)
(declare-fun l_0_21_148 () Real)
(declare-fun l_0_21_4 () Real)
(declare-fun l_0_21_43 () Real)
(declare-fun l_0_21_187 () Real)
(declare-fun l_0_21_151 () Real)
(declare-fun l_0_21_7 () Real)
(declare-fun l_0_21_47 () Real)
(declare-fun l_0_21_191 () Real)
(declare-fun l_0_21_155 () Real)
(declare-fun l_0_21_11 () Real)
(declare-fun l_0_21_52 () Real)
(declare-fun l_0_21_196 () Real)
(declare-fun l_0_21_160 () Real)
(declare-fun l_0_21_16 () Real)
(declare-fun l_0_21_73 () Real)
(declare-fun l_0_21_58 () Real)
(declare-fun l_0_21_202 () Real)
(declare-fun l_0_21_166 () Real)
(declare-fun l_0_21_109 () Real)
(declare-fun l_0_21_22 () Real)
(declare-fun l_0_21_65 () Real)
(declare-fun l_0_21_209 () Real)
(declare-fun l_0_21_173 () Real)
(declare-fun l_0_21_29 () Real)
(declare-fun l_0_21_41 () Real)
(declare-fun l_0_21_5 () Real)
(declare-fun l_0_21_222 () Real)
(declare-fun l_0_21_185 () Real)
(declare-fun l_0_21_149 () Real)
(declare-fun l_0_21_67 () Real)
(declare-fun l_0_21_42 () Real)
(declare-fun l_0_21_66 () Real)
(declare-fun l_0_21_44 () Real)
(declare-fun l_0_21_6 () Real)
(declare-fun l_0_21_31 () Real)
(declare-fun l_0_21_30 () Real)
(declare-fun l_0_21_8 () Real)
(declare-fun l_0_21_225 () Real)
(declare-fun l_0_21_224 () Real)
(declare-fun l_0_21_223 () Real)
(declare-fun l_0_21_188 () Real)
(declare-fun l_0_21_152 () Real)
(declare-fun l_0_21_48 () Real)
(declare-fun l_0_21_283 () Real)
(declare-fun l_0_21_258 () Real)
(declare-fun l_0_21_257 () Real)
(declare-fun l_0_21_256 () Real)
(declare-fun l_0_21_229 () Real)
(declare-fun l_0_21_228 () Real)
(declare-fun l_0_21_227 () Real)
(declare-fun l_0_21_192 () Real)
(declare-fun l_0_21_156 () Real)
(declare-fun l_0_21_12 () Real)
(declare-fun l_0_21_53 () Real)
(declare-fun l_0_21_234 () Real)
(declare-fun l_0_21_233 () Real)
(declare-fun l_0_21_232 () Real)
(declare-fun l_0_21_211 () Real)
(declare-fun l_0_21_186 () Real)
(declare-fun l_0_21_210 () Real)
(declare-fun l_0_21_197 () Real)
(declare-fun l_0_21_17 () Real)
(declare-fun l_0_21_175 () Real)
(declare-fun l_0_21_150 () Real)
(declare-fun l_0_21_174 () Real)
(declare-fun l_0_21_161 () Real)
(declare-fun l_0_21_59 () Real)
(declare-fun l_0_21_23 () Real)
(declare-fun l_0_21_240 () Real)
(declare-fun l_0_21_203 () Real)
(declare-fun l_0_21_167 () Real)
(declare-fun l_0_21_247 () Real)
(declare-fun l_0_21_246 () Real)
(declare-fun l_0_21_245 () Real)
(declare-fun l_0_21_9 () Real)
(declare-fun l_0_21_45 () Real)
(declare-fun l_0_21_189 () Real)
(declare-fun l_0_21_153 () Real)
(declare-fun l_0_21_49 () Real)
(declare-fun l_0_21_193 () Real)
(declare-fun l_0_21_157 () Real)
(declare-fun l_0_21_13 () Real)
(declare-fun l_0_21_54 () Real)
(declare-fun l_0_21_198 () Real)
(declare-fun l_0_21_18 () Real)
(declare-fun l_0_21_162 () Real)
(declare-fun l_0_21_60 () Real)
(declare-fun l_0_21_24 () Real)
(declare-fun l_0_21_204 () Real)
(declare-fun l_0_21_168 () Real)
(declare-fun l_0_21_46 () Real)
(declare-fun l_0_21_190 () Real)
(declare-fun l_0_21_154 () Real)
(declare-fun l_0_21_10 () Real)
(declare-fun l_0_21_50 () Real)
(declare-fun l_0_21_194 () Real)
(declare-fun l_0_21_158 () Real)
(declare-fun l_0_21_14 () Real)
(declare-fun l_0_21_55 () Real)
(declare-fun l_0_21_199 () Real)
(declare-fun l_0_21_163 () Real)
(declare-fun l_0_21_19 () Real)
(declare-fun l_0_21_81 () Real)
(declare-fun l_0_21_80 () Real)
(declare-fun l_0_21_79 () Real)
(declare-fun l_0_21_61 () Real)
(declare-fun l_0_21_205 () Real)
(declare-fun l_0_21_169 () Real)
(declare-fun l_0_21_117 () Real)
(declare-fun l_0_21_116 () Real)
(declare-fun l_0_21_115 () Real)
(declare-fun l_0_21_25 () Real)
(declare-fun l_0_21_68 () Real)
(declare-fun l_0_21_212 () Real)
(declare-fun l_0_21_176 () Real)
(declare-fun l_0_21_32 () Real)
(declare-fun l_0_21_51 () Real)
(declare-fun l_0_21_195 () Real)
(declare-fun l_0_21_159 () Real)
(declare-fun l_0_21_15 () Real)
(declare-fun l_0_21_56 () Real)
(declare-fun l_0_21_200 () Real)
(declare-fun l_0_21_164 () Real)
(declare-fun l_0_21_20 () Real)
(declare-fun l_0_21_85 () Real)
(declare-fun l_0_21_84 () Real)
(declare-fun l_0_21_83 () Real)
(declare-fun l_0_21_62 () Real)
(declare-fun l_0_21_206 () Real)
(declare-fun l_0_21_170 () Real)
(declare-fun l_0_21_26 () Real)
(declare-fun l_0_21_121 () Real)
(declare-fun l_0_21_120 () Real)
(declare-fun l_0_21_119 () Real)
(declare-fun l_0_21_69 () Real)
(declare-fun l_0_21_213 () Real)
(declare-fun l_0_21_177 () Real)
(declare-fun l_0_21_33 () Real)
(declare-fun l_0_21_57 () Real)
(declare-fun l_0_21_21 () Real)
(declare-fun l_0_21_201 () Real)
(declare-fun l_0_21_165 () Real)
(declare-fun l_0_21_90 () Real)
(declare-fun l_0_21_89 () Real)
(declare-fun l_0_21_88 () Real)
(declare-fun l_0_21_63 () Real)
(declare-fun l_0_21_27 () Real)
(declare-fun l_0_21_207 () Real)
(declare-fun l_0_21_171 () Real)
(declare-fun l_0_21_126 () Real)
(declare-fun l_0_21_125 () Real)
(declare-fun l_0_21_124 () Real)
(declare-fun l_0_21_70 () Real)
(declare-fun l_0_21_34 () Real)
(declare-fun l_0_21_214 () Real)
(declare-fun l_0_21_178 () Real)
(declare-fun l_0_21_96 () Real)
(declare-fun l_0_21_95 () Real)
(declare-fun l_0_21_94 () Real)
(declare-fun l_0_21_64 () Real)
(declare-fun l_0_21_28 () Real)
(declare-fun l_0_21_208 () Real)
(declare-fun l_0_21_172 () Real)
(declare-fun l_0_21_132 () Real)
(declare-fun l_0_21_131 () Real)
(declare-fun l_0_21_130 () Real)
(declare-fun l_0_21_71 () Real)
(declare-fun l_0_21_35 () Real)
(declare-fun l_0_21_215 () Real)
(declare-fun l_0_21_179 () Real)
(declare-fun l_0_21_72 () Real)
(declare-fun l_0_21_36 () Real)
(declare-fun l_0_21_216 () Real)
(declare-fun l_0_21_180 () Real)
(declare-fun l_0_21_289 () Real)
(declare-fun l_0_21_295 () Real)
(declare-fun l_0_21_511 () Real)
(declare-fun l_0_21_505 () Real)
(declare-fun l_0_21_475 () Real)
(declare-fun l_0_21_469 () Real)
(declare-fun l_0_21_439 () Real)
(declare-fun l_0_21_433 () Real)
(declare-fun l_0_21_403 () Real)
(declare-fun l_0_21_397 () Real)
(declare-fun l_0_21_367 () Real)
(declare-fun l_0_21_361 () Real)
(declare-fun l_0_21_331 () Real)
(declare-fun l_0_21_325 () Real)
(declare-fun l_0_21_296 () Real)
(declare-fun l_0_21_297 () Real)
(declare-fun l_0_21_82 () Real)
(declare-fun l_0_21_298 () Real)
(declare-fun l_0_21_118 () Real)
(declare-fun l_0_21_86 () Real)
(declare-fun l_0_21_302 () Real)
(declare-fun l_0_21_301 () Real)
(declare-fun l_0_21_300 () Real)
(declare-fun l_0_21_299 () Real)
(declare-fun l_0_21_259 () Real)
(declare-fun l_0_21_253 () Real)
(declare-fun l_0_21_122 () Real)
(declare-fun l_0_21_91 () Real)
(declare-fun l_0_21_307 () Real)
(declare-fun l_0_21_306 () Real)
(declare-fun l_0_21_305 () Real)
(declare-fun l_0_21_304 () Real)
(declare-fun l_0_21_127 () Real)
(declare-fun l_0_21_97 () Real)
(declare-fun l_0_21_313 () Real)
(declare-fun l_0_21_312 () Real)
(declare-fun l_0_21_311 () Real)
(declare-fun l_0_21_310 () Real)
(declare-fun l_0_21_133 () Real)
(declare-fun l_0_21_320 () Real)
(declare-fun l_0_21_140 () Real)
(declare-fun l_0_21_104 () Real)
(declare-fun l_0_21_512 () Real)
(declare-fun l_0_21_476 () Real)
(declare-fun l_0_21_440 () Real)
(declare-fun l_0_21_404 () Real)
(declare-fun l_0_21_368 () Real)
(declare-fun l_0_21_332 () Real)
(declare-fun l_0_21_513 () Real)
(declare-fun l_0_21_477 () Real)
(declare-fun l_0_21_441 () Real)
(declare-fun l_0_21_405 () Real)
(declare-fun l_0_21_369 () Real)
(declare-fun l_0_21_333 () Real)
(declare-fun l_0_21_514 () Real)
(declare-fun l_0_21_478 () Real)
(declare-fun l_0_21_442 () Real)
(declare-fun l_0_21_406 () Real)
(declare-fun l_0_21_370 () Real)
(declare-fun l_0_21_334 () Real)
(declare-fun l_0_21_518 () Real)
(declare-fun l_0_21_517 () Real)
(declare-fun l_0_21_516 () Real)
(declare-fun l_0_21_515 () Real)
(declare-fun l_0_21_482 () Real)
(declare-fun l_0_21_481 () Real)
(declare-fun l_0_21_480 () Real)
(declare-fun l_0_21_479 () Real)
(declare-fun l_0_21_446 () Real)
(declare-fun l_0_21_445 () Real)
(declare-fun l_0_21_444 () Real)
(declare-fun l_0_21_443 () Real)
(declare-fun l_0_21_410 () Real)
(declare-fun l_0_21_409 () Real)
(declare-fun l_0_21_408 () Real)
(declare-fun l_0_21_407 () Real)
(declare-fun l_0_21_374 () Real)
(declare-fun l_0_21_373 () Real)
(declare-fun l_0_21_372 () Real)
(declare-fun l_0_21_371 () Real)
(declare-fun l_0_21_338 () Real)
(declare-fun l_0_21_337 () Real)
(declare-fun l_0_21_336 () Real)
(declare-fun l_0_21_335 () Real)
(declare-fun l_0_21_260 () Real)
(declare-fun l_0_21_523 () Real)
(declare-fun l_0_21_522 () Real)
(declare-fun l_0_21_487 () Real)
(declare-fun l_0_21_486 () Real)
(declare-fun l_0_21_451 () Real)
(declare-fun l_0_21_450 () Real)
(declare-fun l_0_21_415 () Real)
(declare-fun l_0_21_414 () Real)
(declare-fun l_0_21_379 () Real)
(declare-fun l_0_21_378 () Real)
(declare-fun l_0_21_343 () Real)
(declare-fun l_0_21_342 () Real)
(declare-fun l_0_21_261 () Real)
(declare-fun l_0_21_262 () Real)
(declare-fun l_0_21_226 () Real)
(declare-fun l_0_21_303 () Real)
(declare-fun l_0_21_266 () Real)
(declare-fun l_0_21_265 () Real)
(declare-fun l_0_21_264 () Real)
(declare-fun l_0_21_263 () Real)
(declare-fun l_0_21_308 () Real)
(declare-fun l_0_21_271 () Real)
(declare-fun l_0_21_270 () Real)
(declare-fun l_0_21_269 () Real)
(declare-fun l_0_21_268 () Real)
(declare-fun l_0_21_314 () Real)
(declare-fun l_0_21_277 () Real)
(declare-fun l_0_21_276 () Real)
(declare-fun l_0_21_275 () Real)
(declare-fun l_0_21_274 () Real)
(declare-fun l_0_21_321 () Real)
(declare-fun l_0_21_284 () Real)
(declare-fun l_0_21_230 () Real)
(declare-fun l_0_21_309 () Real)
(declare-fun l_0_21_315 () Real)
(declare-fun l_0_21_322 () Real)
(declare-fun l_0_21_235 () Real)
(declare-fun l_0_21_316 () Real)
(declare-fun l_0_21_323 () Real)
(declare-fun l_0_21_241 () Real)
(declare-fun l_0_21_324 () Real)
(declare-fun l_0_21_248 () Real)
(declare-fun l_0_21_143 () Real)
(declare-fun l_0_21_136 () Real)
(declare-fun l_0_21_142 () Real)
(declare-fun l_0_21_135 () Real)
(declare-fun l_0_21_141 () Real)
(declare-fun l_0_21_134 () Real)
(declare-fun l_0_21_99 () Real)
(declare-fun l_0_21_106 () Real)
(declare-fun l_0_21_98 () Real)
(declare-fun l_0_21_105 () Real)
(declare-fun l_0_21_107 () Real)
(declare-fun l_0_21_100 () Real)
(declare-fun l_0_21_287 () Real)
(declare-fun l_0_21_280 () Real)
(declare-fun l_0_21_286 () Real)
(declare-fun l_0_21_279 () Real)
(declare-fun l_0_21_285 () Real)
(declare-fun l_0_21_278 () Real)
(declare-fun l_0_21_267 () Real)
(declare-fun l_0_21_242 () Real)
(declare-fun l_0_21_231 () Real)
(declare-fun l_0_21_273 () Real)
(declare-fun l_0_21_272 () Real)
(declare-fun l_0_21_243 () Real)
(declare-fun l_0_21_237 () Real)
(declare-fun l_0_21_236 () Real)
(declare-fun l_0_21_244 () Real)
(declare-fun l_0_21_288 () Real)
(declare-fun l_0_21_251 () Real)
(declare-fun l_0_21_250 () Real)
(declare-fun l_0_21_249 () Real)
(declare-fun l_0_21_87 () Real)
(declare-fun l_0_21_123 () Real)
(declare-fun l_0_21_92 () Real)
(declare-fun l_0_21_128 () Real)
(declare-fun l_0_21_93 () Real)
(declare-fun l_0_21_129 () Real)
(declare-fun l_0_21_144 () Real)
(declare-fun l_0_21_108 () Real)
(declare-fun l_0_21_524 () Real)
(declare-fun l_0_21_519 () Real)
(declare-fun l_0_21_488 () Real)
(declare-fun l_0_21_483 () Real)
(declare-fun l_0_21_452 () Real)
(declare-fun l_0_21_447 () Real)
(declare-fun l_0_21_416 () Real)
(declare-fun l_0_21_411 () Real)
(declare-fun l_0_21_380 () Real)
(declare-fun l_0_21_375 () Real)
(declare-fun l_0_21_344 () Real)
(declare-fun l_0_21_339 () Real)
(declare-fun l_0_21_525 () Real)
(declare-fun l_0_21_489 () Real)
(declare-fun l_0_21_453 () Real)
(declare-fun l_0_21_417 () Real)
(declare-fun l_0_21_381 () Real)
(declare-fun l_0_21_345 () Real)
(declare-fun l_0_21_540 () Real)
(declare-fun l_0_21_504 () Real)
(declare-fun l_0_21_468 () Real)
(declare-fun l_0_21_432 () Real)
(declare-fun l_0_21_396 () Real)
(declare-fun l_0_21_360 () Real)
(declare-fun l_0_21_252 () Real)
(declare-fun l_0_22_570 () Real)
(declare-fun l_0_22_543 () Real)
(declare-fun l_0_22_569 () Real)
(declare-fun l_0_22_542 () Real)
(declare-fun l_0_22_534 () Real)
(declare-fun l_0_22_507 () Real)
(declare-fun l_0_22_533 () Real)
(declare-fun l_0_22_506 () Real)
(declare-fun l_0_22_498 () Real)
(declare-fun l_0_22_471 () Real)
(declare-fun l_0_22_497 () Real)
(declare-fun l_0_22_470 () Real)
(declare-fun l_0_22_462 () Real)
(declare-fun l_0_22_435 () Real)
(declare-fun l_0_22_461 () Real)
(declare-fun l_0_22_434 () Real)
(declare-fun l_0_22_426 () Real)
(declare-fun l_0_22_399 () Real)
(declare-fun l_0_22_425 () Real)
(declare-fun l_0_22_398 () Real)
(declare-fun l_0_22_390 () Real)
(declare-fun l_0_22_363 () Real)
(declare-fun l_0_22_389 () Real)
(declare-fun l_0_22_362 () Real)
(declare-fun l_0_22_354 () Real)
(declare-fun l_0_22_327 () Real)
(declare-fun l_0_22_353 () Real)
(declare-fun l_0_22_326 () Real)
(declare-fun l_0_22_219 () Real)
(declare-fun l_0_22_218 () Real)
(declare-fun l_0_22_37 () Real)
(declare-fun l_0_22_181 () Real)
(declare-fun l_0_22_145 () Real)
(declare-fun l_0_22_1 () Real)
(declare-fun l_0_22_38 () Real)
(declare-fun l_0_22_319 () Real)
(declare-fun l_0_22_294 () Real)
(declare-fun l_0_22_318 () Real)
(declare-fun l_0_22_293 () Real)
(declare-fun l_0_22_317 () Real)
(declare-fun l_0_22_292 () Real)
(declare-fun l_0_22_220 () Real)
(declare-fun l_0_22_217 () Real)
(declare-fun l_0_22_182 () Real)
(declare-fun l_0_22_146 () Real)
(declare-fun l_0_22_139 () Real)
(declare-fun l_0_22_114 () Real)
(declare-fun l_0_22_138 () Real)
(declare-fun l_0_22_113 () Real)
(declare-fun l_0_22_137 () Real)
(declare-fun l_0_22_112 () Real)
(declare-fun l_0_22_78 () Real)
(declare-fun l_0_22_103 () Real)
(declare-fun l_0_22_77 () Real)
(declare-fun l_0_22_102 () Real)
(declare-fun l_0_22_76 () Real)
(declare-fun l_0_22_101 () Real)
(declare-fun l_0_22_2 () Real)
(declare-fun l_0_22_40 () Real)
(declare-fun l_0_22_184 () Real)
(declare-fun l_0_22_148 () Real)
(declare-fun l_0_22_4 () Real)
(declare-fun l_0_22_43 () Real)
(declare-fun l_0_22_187 () Real)
(declare-fun l_0_22_151 () Real)
(declare-fun l_0_22_7 () Real)
(declare-fun l_0_22_47 () Real)
(declare-fun l_0_22_191 () Real)
(declare-fun l_0_22_155 () Real)
(declare-fun l_0_22_11 () Real)
(declare-fun l_0_22_52 () Real)
(declare-fun l_0_22_196 () Real)
(declare-fun l_0_22_160 () Real)
(declare-fun l_0_22_16 () Real)
(declare-fun l_0_22_73 () Real)
(declare-fun l_0_22_58 () Real)
(declare-fun l_0_22_202 () Real)
(declare-fun l_0_22_166 () Real)
(declare-fun l_0_22_109 () Real)
(declare-fun l_0_22_22 () Real)
(declare-fun l_0_22_65 () Real)
(declare-fun l_0_22_209 () Real)
(declare-fun l_0_22_173 () Real)
(declare-fun l_0_22_29 () Real)
(declare-fun l_0_22_571 () Real)
(declare-fun l_0_22_546 () Real)
(declare-fun l_0_22_545 () Real)
(declare-fun l_0_22_544 () Real)
(declare-fun l_0_22_535 () Real)
(declare-fun l_0_22_510 () Real)
(declare-fun l_0_22_509 () Real)
(declare-fun l_0_22_508 () Real)
(declare-fun l_0_22_499 () Real)
(declare-fun l_0_22_474 () Real)
(declare-fun l_0_22_473 () Real)
(declare-fun l_0_22_472 () Real)
(declare-fun l_0_22_463 () Real)
(declare-fun l_0_22_438 () Real)
(declare-fun l_0_22_437 () Real)
(declare-fun l_0_22_436 () Real)
(declare-fun l_0_22_427 () Real)
(declare-fun l_0_22_402 () Real)
(declare-fun l_0_22_401 () Real)
(declare-fun l_0_22_400 () Real)
(declare-fun l_0_22_39 () Real)
(declare-fun l_0_22_391 () Real)
(declare-fun l_0_22_366 () Real)
(declare-fun l_0_22_365 () Real)
(declare-fun l_0_22_364 () Real)
(declare-fun l_0_22_355 () Real)
(declare-fun l_0_22_330 () Real)
(declare-fun l_0_22_329 () Real)
(declare-fun l_0_22_328 () Real)
(declare-fun l_0_22_3 () Real)
(declare-fun l_0_22_221 () Real)
(declare-fun l_0_22_183 () Real)
(declare-fun l_0_22_147 () Real)
(declare-fun l_0_22_41 () Real)
(declare-fun l_0_22_5 () Real)
(declare-fun l_0_22_222 () Real)
(declare-fun l_0_22_185 () Real)
(declare-fun l_0_22_149 () Real)
(declare-fun l_0_22_67 () Real)
(declare-fun l_0_22_42 () Real)
(declare-fun l_0_22_66 () Real)
(declare-fun l_0_22_44 () Real)
(declare-fun l_0_22_6 () Real)
(declare-fun l_0_22_31 () Real)
(declare-fun l_0_22_30 () Real)
(declare-fun l_0_22_8 () Real)
(declare-fun l_0_22_225 () Real)
(declare-fun l_0_22_224 () Real)
(declare-fun l_0_22_223 () Real)
(declare-fun l_0_22_188 () Real)
(declare-fun l_0_22_152 () Real)
(declare-fun l_0_22_48 () Real)
(declare-fun l_0_22_283 () Real)
(declare-fun l_0_22_258 () Real)
(declare-fun l_0_22_282 () Real)
(declare-fun l_0_22_257 () Real)
(declare-fun l_0_22_281 () Real)
(declare-fun l_0_22_256 () Real)
(declare-fun l_0_22_229 () Real)
(declare-fun l_0_22_228 () Real)
(declare-fun l_0_22_227 () Real)
(declare-fun l_0_22_192 () Real)
(declare-fun l_0_22_156 () Real)
(declare-fun l_0_22_12 () Real)
(declare-fun l_0_22_53 () Real)
(declare-fun l_0_22_234 () Real)
(declare-fun l_0_22_233 () Real)
(declare-fun l_0_22_232 () Real)
(declare-fun l_0_22_211 () Real)
(declare-fun l_0_22_186 () Real)
(declare-fun l_0_22_210 () Real)
(declare-fun l_0_22_197 () Real)
(declare-fun l_0_22_17 () Real)
(declare-fun l_0_22_175 () Real)
(declare-fun l_0_22_150 () Real)
(declare-fun l_0_22_174 () Real)
(declare-fun l_0_22_161 () Real)
(declare-fun l_0_22_75 () Real)
(declare-fun l_0_22_74 () Real)
(declare-fun l_0_22_59 () Real)
(declare-fun l_0_22_23 () Real)
(declare-fun l_0_22_240 () Real)
(declare-fun l_0_22_239 () Real)
(declare-fun l_0_22_238 () Real)
(declare-fun l_0_22_203 () Real)
(declare-fun l_0_22_167 () Real)
(declare-fun l_0_22_111 () Real)
(declare-fun l_0_22_110 () Real)
(declare-fun l_0_22_247 () Real)
(declare-fun l_0_22_246 () Real)
(declare-fun l_0_22_245 () Real)
(declare-fun l_0_22_9 () Real)
(declare-fun l_0_22_45 () Real)
(declare-fun l_0_22_189 () Real)
(declare-fun l_0_22_153 () Real)
(declare-fun l_0_22_49 () Real)
(declare-fun l_0_22_193 () Real)
(declare-fun l_0_22_157 () Real)
(declare-fun l_0_22_13 () Real)
(declare-fun l_0_22_54 () Real)
(declare-fun l_0_22_198 () Real)
(declare-fun l_0_22_18 () Real)
(declare-fun l_0_22_162 () Real)
(declare-fun l_0_22_60 () Real)
(declare-fun l_0_22_24 () Real)
(declare-fun l_0_22_204 () Real)
(declare-fun l_0_22_168 () Real)
(declare-fun l_0_22_46 () Real)
(declare-fun l_0_22_190 () Real)
(declare-fun l_0_22_154 () Real)
(declare-fun l_0_22_10 () Real)
(declare-fun l_0_22_50 () Real)
(declare-fun l_0_22_194 () Real)
(declare-fun l_0_22_158 () Real)
(declare-fun l_0_22_14 () Real)
(declare-fun l_0_22_55 () Real)
(declare-fun l_0_22_199 () Real)
(declare-fun l_0_22_163 () Real)
(declare-fun l_0_22_19 () Real)
(declare-fun l_0_22_81 () Real)
(declare-fun l_0_22_80 () Real)
(declare-fun l_0_22_79 () Real)
(declare-fun l_0_22_61 () Real)
(declare-fun l_0_22_205 () Real)
(declare-fun l_0_22_169 () Real)
(declare-fun l_0_22_117 () Real)
(declare-fun l_0_22_116 () Real)
(declare-fun l_0_22_115 () Real)
(declare-fun l_0_22_25 () Real)
(declare-fun l_0_22_68 () Real)
(declare-fun l_0_22_212 () Real)
(declare-fun l_0_22_176 () Real)
(declare-fun l_0_22_32 () Real)
(declare-fun l_0_22_51 () Real)
(declare-fun l_0_22_195 () Real)
(declare-fun l_0_22_159 () Real)
(declare-fun l_0_22_15 () Real)
(declare-fun l_0_22_56 () Real)
(declare-fun l_0_22_200 () Real)
(declare-fun l_0_22_164 () Real)
(declare-fun l_0_22_20 () Real)
(declare-fun l_0_22_85 () Real)
(declare-fun l_0_22_84 () Real)
(declare-fun l_0_22_83 () Real)
(declare-fun l_0_22_62 () Real)
(declare-fun l_0_22_206 () Real)
(declare-fun l_0_22_170 () Real)
(declare-fun l_0_22_26 () Real)
(declare-fun l_0_22_121 () Real)
(declare-fun l_0_22_120 () Real)
(declare-fun l_0_22_119 () Real)
(declare-fun l_0_22_69 () Real)
(declare-fun l_0_22_213 () Real)
(declare-fun l_0_22_177 () Real)
(declare-fun l_0_22_33 () Real)
(declare-fun l_0_22_57 () Real)
(declare-fun l_0_22_21 () Real)
(declare-fun l_0_22_201 () Real)
(declare-fun l_0_22_165 () Real)
(declare-fun l_0_22_90 () Real)
(declare-fun l_0_22_89 () Real)
(declare-fun l_0_22_88 () Real)
(declare-fun l_0_22_63 () Real)
(declare-fun l_0_22_27 () Real)
(declare-fun l_0_22_207 () Real)
(declare-fun l_0_22_171 () Real)
(declare-fun l_0_22_126 () Real)
(declare-fun l_0_22_125 () Real)
(declare-fun l_0_22_124 () Real)
(declare-fun l_0_22_70 () Real)
(declare-fun l_0_22_34 () Real)
(declare-fun l_0_22_214 () Real)
(declare-fun l_0_22_178 () Real)
(declare-fun l_0_22_96 () Real)
(declare-fun l_0_22_95 () Real)
(declare-fun l_0_22_94 () Real)
(declare-fun l_0_22_64 () Real)
(declare-fun l_0_22_28 () Real)
(declare-fun l_0_22_208 () Real)
(declare-fun l_0_22_172 () Real)
(declare-fun l_0_22_132 () Real)
(declare-fun l_0_22_131 () Real)
(declare-fun l_0_22_130 () Real)
(declare-fun l_0_22_71 () Real)
(declare-fun l_0_22_35 () Real)
(declare-fun l_0_22_215 () Real)
(declare-fun l_0_22_179 () Real)
(declare-fun l_0_22_72 () Real)
(declare-fun l_0_22_36 () Real)
(declare-fun l_0_22_216 () Real)
(declare-fun l_0_22_180 () Real)
(declare-fun l_0_22_289 () Real)
(declare-fun l_0_22_295 () Real)
(declare-fun l_0_22_547 () Real)
(declare-fun l_0_22_541 () Real)
(declare-fun l_0_22_511 () Real)
(declare-fun l_0_22_505 () Real)
(declare-fun l_0_22_475 () Real)
(declare-fun l_0_22_469 () Real)
(declare-fun l_0_22_439 () Real)
(declare-fun l_0_22_433 () Real)
(declare-fun l_0_22_403 () Real)
(declare-fun l_0_22_397 () Real)
(declare-fun l_0_22_367 () Real)
(declare-fun l_0_22_361 () Real)
(declare-fun l_0_22_331 () Real)
(declare-fun l_0_22_325 () Real)
(declare-fun l_0_22_296 () Real)
(declare-fun l_0_22_291 () Real)
(declare-fun l_0_22_290 () Real)
(declare-fun l_0_22_297 () Real)
(declare-fun l_0_22_82 () Real)
(declare-fun l_0_22_298 () Real)
(declare-fun l_0_22_118 () Real)
(declare-fun l_0_22_86 () Real)
(declare-fun l_0_22_302 () Real)
(declare-fun l_0_22_301 () Real)
(declare-fun l_0_22_300 () Real)
(declare-fun l_0_22_299 () Real)
(declare-fun l_0_22_259 () Real)
(declare-fun l_0_22_253 () Real)
(declare-fun l_0_22_122 () Real)
(declare-fun l_0_22_91 () Real)
(declare-fun l_0_22_307 () Real)
(declare-fun l_0_22_306 () Real)
(declare-fun l_0_22_305 () Real)
(declare-fun l_0_22_304 () Real)
(declare-fun l_0_22_127 () Real)
(declare-fun l_0_22_97 () Real)
(declare-fun l_0_22_313 () Real)
(declare-fun l_0_22_312 () Real)
(declare-fun l_0_22_311 () Real)
(declare-fun l_0_22_310 () Real)
(declare-fun l_0_22_133 () Real)
(declare-fun l_0_22_320 () Real)
(declare-fun l_0_22_140 () Real)
(declare-fun l_0_22_104 () Real)
(declare-fun l_0_22_548 () Real)
(declare-fun l_0_22_512 () Real)
(declare-fun l_0_22_476 () Real)
(declare-fun l_0_22_440 () Real)
(declare-fun l_0_22_404 () Real)
(declare-fun l_0_22_368 () Real)
(declare-fun l_0_22_332 () Real)
(declare-fun l_0_22_549 () Real)
(declare-fun l_0_22_513 () Real)
(declare-fun l_0_22_477 () Real)
(declare-fun l_0_22_441 () Real)
(declare-fun l_0_22_405 () Real)
(declare-fun l_0_22_369 () Real)
(declare-fun l_0_22_333 () Real)
(declare-fun l_0_22_550 () Real)
(declare-fun l_0_22_514 () Real)
(declare-fun l_0_22_478 () Real)
(declare-fun l_0_22_442 () Real)
(declare-fun l_0_22_406 () Real)
(declare-fun l_0_22_370 () Real)
(declare-fun l_0_22_334 () Real)
(declare-fun l_0_22_554 () Real)
(declare-fun l_0_22_553 () Real)
(declare-fun l_0_22_552 () Real)
(declare-fun l_0_22_551 () Real)
(declare-fun l_0_22_518 () Real)
(declare-fun l_0_22_517 () Real)
(declare-fun l_0_22_516 () Real)
(declare-fun l_0_22_515 () Real)
(declare-fun l_0_22_482 () Real)
(declare-fun l_0_22_481 () Real)
(declare-fun l_0_22_480 () Real)
(declare-fun l_0_22_479 () Real)
(declare-fun l_0_22_446 () Real)
(declare-fun l_0_22_445 () Real)
(declare-fun l_0_22_444 () Real)
(declare-fun l_0_22_443 () Real)
(declare-fun l_0_22_410 () Real)
(declare-fun l_0_22_409 () Real)
(declare-fun l_0_22_408 () Real)
(declare-fun l_0_22_407 () Real)
(declare-fun l_0_22_374 () Real)
(declare-fun l_0_22_373 () Real)
(declare-fun l_0_22_372 () Real)
(declare-fun l_0_22_371 () Real)
(declare-fun l_0_22_338 () Real)
(declare-fun l_0_22_337 () Real)
(declare-fun l_0_22_336 () Real)
(declare-fun l_0_22_335 () Real)
(declare-fun l_0_22_260 () Real)
(declare-fun l_0_22_255 () Real)
(declare-fun l_0_22_254 () Real)
(declare-fun l_0_22_559 () Real)
(declare-fun l_0_22_558 () Real)
(declare-fun l_0_22_557 () Real)
(declare-fun l_0_22_556 () Real)
(declare-fun l_0_22_523 () Real)
(declare-fun l_0_22_522 () Real)
(declare-fun l_0_22_521 () Real)
(declare-fun l_0_22_520 () Real)
(declare-fun l_0_22_487 () Real)
(declare-fun l_0_22_486 () Real)
(declare-fun l_0_22_485 () Real)
(declare-fun l_0_22_484 () Real)
(declare-fun l_0_22_451 () Real)
(declare-fun l_0_22_450 () Real)
(declare-fun l_0_22_449 () Real)
(declare-fun l_0_22_448 () Real)
(declare-fun l_0_22_415 () Real)
(declare-fun l_0_22_414 () Real)
(declare-fun l_0_22_413 () Real)
(declare-fun l_0_22_412 () Real)
(declare-fun l_0_22_379 () Real)
(declare-fun l_0_22_378 () Real)
(declare-fun l_0_22_377 () Real)
(declare-fun l_0_22_376 () Real)
(declare-fun l_0_22_343 () Real)
(declare-fun l_0_22_342 () Real)
(declare-fun l_0_22_341 () Real)
(declare-fun l_0_22_340 () Real)
(declare-fun l_0_22_565 () Real)
(declare-fun l_0_22_564 () Real)
(declare-fun l_0_22_563 () Real)
(declare-fun l_0_22_562 () Real)
(declare-fun l_0_22_529 () Real)
(declare-fun l_0_22_528 () Real)
(declare-fun l_0_22_527 () Real)
(declare-fun l_0_22_526 () Real)
(declare-fun l_0_22_493 () Real)
(declare-fun l_0_22_492 () Real)
(declare-fun l_0_22_491 () Real)
(declare-fun l_0_22_490 () Real)
(declare-fun l_0_22_457 () Real)
(declare-fun l_0_22_456 () Real)
(declare-fun l_0_22_455 () Real)
(declare-fun l_0_22_454 () Real)
(declare-fun l_0_22_421 () Real)
(declare-fun l_0_22_420 () Real)
(declare-fun l_0_22_419 () Real)
(declare-fun l_0_22_418 () Real)
(declare-fun l_0_22_385 () Real)
(declare-fun l_0_22_384 () Real)
(declare-fun l_0_22_383 () Real)
(declare-fun l_0_22_382 () Real)
(declare-fun l_0_22_349 () Real)
(declare-fun l_0_22_348 () Real)
(declare-fun l_0_22_347 () Real)
(declare-fun l_0_22_346 () Real)
(declare-fun l_0_22_572 () Real)
(declare-fun l_0_22_536 () Real)
(declare-fun l_0_22_500 () Real)
(declare-fun l_0_22_464 () Real)
(declare-fun l_0_22_428 () Real)
(declare-fun l_0_22_392 () Real)
(declare-fun l_0_22_356 () Real)
(declare-fun l_0_22_261 () Real)
(declare-fun l_0_22_262 () Real)
(declare-fun l_0_22_226 () Real)
(declare-fun l_0_22_303 () Real)
(declare-fun l_0_22_266 () Real)
(declare-fun l_0_22_265 () Real)
(declare-fun l_0_22_264 () Real)
(declare-fun l_0_22_263 () Real)
(declare-fun l_0_22_308 () Real)
(declare-fun l_0_22_271 () Real)
(declare-fun l_0_22_270 () Real)
(declare-fun l_0_22_269 () Real)
(declare-fun l_0_22_268 () Real)
(declare-fun l_0_22_314 () Real)
(declare-fun l_0_22_277 () Real)
(declare-fun l_0_22_276 () Real)
(declare-fun l_0_22_275 () Real)
(declare-fun l_0_22_274 () Real)
(declare-fun l_0_22_321 () Real)
(declare-fun l_0_22_284 () Real)
(declare-fun l_0_22_230 () Real)
(declare-fun l_0_22_309 () Real)
(declare-fun l_0_22_315 () Real)
(declare-fun l_0_22_322 () Real)
(declare-fun l_0_22_235 () Real)
(declare-fun l_0_22_316 () Real)
(declare-fun l_0_22_323 () Real)
(declare-fun l_0_22_241 () Real)
(declare-fun l_0_22_324 () Real)
(declare-fun l_0_22_248 () Real)
(declare-fun l_0_22_143 () Real)
(declare-fun l_0_22_136 () Real)
(declare-fun l_0_22_142 () Real)
(declare-fun l_0_22_135 () Real)
(declare-fun l_0_22_141 () Real)
(declare-fun l_0_22_134 () Real)
(declare-fun l_0_22_99 () Real)
(declare-fun l_0_22_106 () Real)
(declare-fun l_0_22_98 () Real)
(declare-fun l_0_22_105 () Real)
(declare-fun l_0_22_107 () Real)
(declare-fun l_0_22_100 () Real)
(declare-fun l_0_22_575 () Real)
(declare-fun l_0_22_568 () Real)
(declare-fun l_0_22_574 () Real)
(declare-fun l_0_22_567 () Real)
(declare-fun l_0_22_573 () Real)
(declare-fun l_0_22_566 () Real)
(declare-fun l_0_22_539 () Real)
(declare-fun l_0_22_532 () Real)
(declare-fun l_0_22_538 () Real)
(declare-fun l_0_22_531 () Real)
(declare-fun l_0_22_537 () Real)
(declare-fun l_0_22_530 () Real)
(declare-fun l_0_22_503 () Real)
(declare-fun l_0_22_496 () Real)
(declare-fun l_0_22_502 () Real)
(declare-fun l_0_22_495 () Real)
(declare-fun l_0_22_501 () Real)
(declare-fun l_0_22_494 () Real)
(declare-fun l_0_22_467 () Real)
(declare-fun l_0_22_460 () Real)
(declare-fun l_0_22_466 () Real)
(declare-fun l_0_22_459 () Real)
(declare-fun l_0_22_465 () Real)
(declare-fun l_0_22_458 () Real)
(declare-fun l_0_22_431 () Real)
(declare-fun l_0_22_424 () Real)
(declare-fun l_0_22_430 () Real)
(declare-fun l_0_22_423 () Real)
(declare-fun l_0_22_429 () Real)
(declare-fun l_0_22_422 () Real)
(declare-fun l_0_22_395 () Real)
(declare-fun l_0_22_388 () Real)
(declare-fun l_0_22_394 () Real)
(declare-fun l_0_22_387 () Real)
(declare-fun l_0_22_393 () Real)
(declare-fun l_0_22_386 () Real)
(declare-fun l_0_22_359 () Real)
(declare-fun l_0_22_352 () Real)
(declare-fun l_0_22_358 () Real)
(declare-fun l_0_22_351 () Real)
(declare-fun l_0_22_357 () Real)
(declare-fun l_0_22_350 () Real)
(declare-fun l_0_22_287 () Real)
(declare-fun l_0_22_280 () Real)
(declare-fun l_0_22_286 () Real)
(declare-fun l_0_22_279 () Real)
(declare-fun l_0_22_285 () Real)
(declare-fun l_0_22_278 () Real)
(declare-fun l_0_22_267 () Real)
(declare-fun l_0_22_242 () Real)
(declare-fun l_0_22_231 () Real)
(declare-fun l_0_22_273 () Real)
(declare-fun l_0_22_272 () Real)
(declare-fun l_0_22_243 () Real)
(declare-fun l_0_22_237 () Real)
(declare-fun l_0_22_236 () Real)
(declare-fun l_0_22_244 () Real)
(declare-fun l_0_22_288 () Real)
(declare-fun l_0_22_251 () Real)
(declare-fun l_0_22_250 () Real)
(declare-fun l_0_22_249 () Real)
(declare-fun l_0_22_87 () Real)
(declare-fun l_0_22_123 () Real)
(declare-fun l_0_22_92 () Real)
(declare-fun l_0_22_128 () Real)
(declare-fun l_0_22_93 () Real)
(declare-fun l_0_22_129 () Real)
(declare-fun l_0_22_144 () Real)
(declare-fun l_0_22_108 () Real)
(declare-fun l_0_22_560 () Real)
(declare-fun l_0_22_555 () Real)
(declare-fun l_0_22_524 () Real)
(declare-fun l_0_22_519 () Real)
(declare-fun l_0_22_488 () Real)
(declare-fun l_0_22_483 () Real)
(declare-fun l_0_22_452 () Real)
(declare-fun l_0_22_447 () Real)
(declare-fun l_0_22_416 () Real)
(declare-fun l_0_22_411 () Real)
(declare-fun l_0_22_380 () Real)
(declare-fun l_0_22_375 () Real)
(declare-fun l_0_22_344 () Real)
(declare-fun l_0_22_339 () Real)
(declare-fun l_0_22_561 () Real)
(declare-fun l_0_22_525 () Real)
(declare-fun l_0_22_489 () Real)
(declare-fun l_0_22_453 () Real)
(declare-fun l_0_22_417 () Real)
(declare-fun l_0_22_381 () Real)
(declare-fun l_0_22_345 () Real)
(declare-fun l_0_22_576 () Real)
(declare-fun l_0_22_540 () Real)
(declare-fun l_0_22_504 () Real)
(declare-fun l_0_22_468 () Real)
(declare-fun l_0_22_432 () Real)
(declare-fun l_0_22_396 () Real)
(declare-fun l_0_22_360 () Real)
(declare-fun l_0_22_252 () Real)
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (= (- l_0_0_1 l_0_0_2) 0.0))
(assert
 (= (- l_0_0_3) 0.0))
(assert
 (= (- l_0_0_4) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_4 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- l_0_1_1 l_0_1_2) 0.0))
(assert
 (= (- l_0_1_3) 0.0))
(assert
 (= (- (- (- l_0_1_4) l_0_1_5) l_0_1_6) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (>= l_0_1_5 0.0))
(assert
 (>= l_0_1_6 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (= (- l_0_2_1 l_0_2_2) 0.0))
(assert
 (= (- l_0_2_3) 0.0))
(assert
 (= (- (- (- (- (- l_0_2_4) l_0_2_5) l_0_2_6) l_0_2_7) l_0_2_8) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (>= l_0_2_8 0.0))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (= (- l_0_3_1 l_0_3_2) 0.0))
(assert
 (= (- l_0_3_3) 0.0))
(assert
 (let ((?x7450 (- (- (- (- (- (- l_0_3_10) l_0_3_4) l_0_3_5) l_0_3_6) l_0_3_7) l_0_3_8)))
 (= (- ?x7450 l_0_3_9) 0.0)))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_7 0.0))
(assert
 (>= l_0_3_8 0.0))
(assert
 (>= l_0_3_9 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (= (- (- l_0_4_1 l_0_4_2) 1.0) 0.0))
(assert
 (= (- 1.0 l_0_4_1) 0.0))
(assert
 (= (- l_0_4_3) 0.0))
(assert
 (let ((?x7507 (- (- (- (- (- l_0_4_10) l_0_4_11) l_0_4_12) l_0_4_4) l_0_4_5)))
 (= (- (- (- (- ?x7507 l_0_4_6) l_0_4_7) l_0_4_8) l_0_4_9) 0.0)))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_2 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_4 0.0))
(assert
 (>= l_0_4_5 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_7 0.0))
(assert
 (>= l_0_4_8 0.0))
(assert
 (>= l_0_4_9 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_11 0.0))
(assert
 (>= l_0_4_12 0.0))
(assert
 (= (+ (- l_0_5_1 l_0_5_2) 1.0) 0.0))
(assert
 (= (- l_0_5_1) 0.0))
(assert
 (= (- l_0_5_3) 0.0))
(assert
 (let ((?x7569 (- (- (- (- (- l_0_5_10) l_0_5_11) l_0_5_12) l_0_5_13) l_0_5_14)))
 (let ((?x7574 (- (- (- (- (- ?x7569 l_0_5_4) l_0_5_5) l_0_5_6) l_0_5_7) l_0_5_8)))
 (= (- ?x7574 l_0_5_9) 0.0))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_2 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_4 0.0))
(assert
 (>= l_0_5_5 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_7 0.0))
(assert
 (>= l_0_5_8 0.0))
(assert
 (>= l_0_5_9 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_11 0.0))
(assert
 (>= l_0_5_12 0.0))
(assert
 (>= l_0_5_13 0.0))
(assert
 (>= l_0_5_14 0.0))
(assert
 (= (- 1.0 l_0_6_1) 0.0))
(assert
 (let ((?x7632 (- (- (- (- (- l_0_6_10) l_0_6_11) l_0_6_12) l_0_6_13) l_0_6_14)))
 (let ((?x7637 (- (- (- (- (- ?x7632 l_0_6_15) l_0_6_16) l_0_6_4) l_0_6_5) l_0_6_6)))
 (= (- (- (- ?x7637 l_0_6_7) l_0_6_8) l_0_6_9) 0.0))))
(assert
 (= (- l_0_6_1 l_0_6_2) 0.0))
(assert
 (= (- l_0_6_3) 0.0))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_2 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_4 0.0))
(assert
 (>= l_0_6_5 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_7 0.0))
(assert
 (>= l_0_6_8 0.0))
(assert
 (>= l_0_6_9 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_11 0.0))
(assert
 (>= l_0_6_12 0.0))
(assert
 (>= l_0_6_13 0.0))
(assert
 (>= l_0_6_14 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (let ((?x7710 (* l_0_7_183 l_0_7_183)))
 (let ((?x7708 (* l_0_7_182 l_0_7_182)))
 (let ((?x7711 (- (- (+ (* l_0_7_146 l_0_7_146) (* l_0_7_147 l_0_7_147)) ?x7708) ?x7710)))
 (let ((?x7718 (- (- ?x7711 (* (* 2.0 l_0_7_290) l_0_7_304)) (* (* 2.0 l_0_7_291) l_0_7_305))))
 (= (+ ?x7718 1.0) 0.0))))))
(assert
 (let ((?x7767 (* l_0_7_39 l_0_7_39)))
 (let ((?x7765 (* l_0_7_38 l_0_7_38)))
 (let ((?x7763 (* l_0_7_3 l_0_7_3)))
 (let ((?x7746 (* l_0_7_2 l_0_7_2)))
 (let ((?x7710 (* l_0_7_183 l_0_7_183)))
 (let ((?x7708 (* l_0_7_182 l_0_7_182)))
 (let ((?x7744 (+ (- (* (- l_0_7_146) l_0_7_146) (* l_0_7_147 l_0_7_147)) ?x7708)))
 (let ((?x7753 (- (- (- (+ ?x7744 ?x7710) ?x7746) (* (* 2.0 l_0_7_218) l_0_7_220)) (* (* 2.0 l_0_7_219) l_0_7_221))))
 (let ((?x7759 (- (- ?x7753 (* (* 2.0 l_0_7_292) l_0_7_317)) (* (* 2.0 l_0_7_293) l_0_7_318))))
 (let ((?x7768 (+ (+ (- (- ?x7759 (* (* 2.0 l_0_7_294) l_0_7_319)) ?x7763) ?x7765) ?x7767)))
 (= (- ?x7768 1.0) 0.0))))))))))))
(assert
 (let ((?x7825 (* l_0_7_37 l_0_7_37)))
 (let ((?x7823 (* l_0_7_181 l_0_7_181)))
 (let ((?x7826 (+ (+ (- (* (- l_0_7_1) l_0_7_1) (* l_0_7_145 l_0_7_145)) ?x7823) ?x7825)))
 (= ?x7826 0.0)))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7868 (* ?x7867 l_0_7_38)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7862 (* ?x7861 l_0_7_182)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7859 (* ?x7858 l_0_7_146)))
 (let ((?x7842 (+ (* (* (- 2.0) l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_101) l_0_7_76))))
 (let ((?x7848 (+ (+ ?x7842 (* (* 2.0 l_0_7_102) l_0_7_77)) (* (* 2.0 l_0_7_103) l_0_7_78))))
 (let ((?x7854 (- (- ?x7848 (* (* 2.0 l_0_7_112) l_0_7_137)) (* (* 2.0 l_0_7_113) l_0_7_138))))
 (let ((?x7866 (- (+ (- (- ?x7854 (* (* 2.0 l_0_7_114) l_0_7_139)) ?x7859) ?x7862) (* (* 2.0 l_0_7_217) l_0_7_220))))
 (= (+ ?x7866 ?x7868) 0.0))))))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7927 (* ?x7867 l_0_7_40)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7925 (* ?x7861 l_0_7_184)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7915 (* ?x7858 l_0_7_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x7915) ?x7925) ?x7927) 0.0))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7950 (* ?x7867 l_0_7_43)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7948 (* ?x7861 l_0_7_187)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7941 (* ?x7858 l_0_7_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_1) l_0_7_7) ?x7941) ?x7948) ?x7950) 0.0))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7973 (* ?x7867 l_0_7_47)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7971 (* ?x7861 l_0_7_191)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7964 (* ?x7858 l_0_7_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_1) l_0_7_11) ?x7964) ?x7971) ?x7973) 0.0))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7996 (* ?x7867 l_0_7_52)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7994 (* ?x7861 l_0_7_196)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7987 (* ?x7858 l_0_7_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_1) l_0_7_16) ?x7987) ?x7994) ?x7996) 0.0))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x8023 (* ?x7867 l_0_7_58)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x8021 (* ?x7861 l_0_7_202)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x8019 (* ?x7858 l_0_7_166)))
 (let ((?x7915 (* ?x7858 l_0_7_148)))
 (let ((?x8017 (+ (* (* (- 2.0) l_0_7_1) l_0_7_22) (* (* 1.0 l_0_7_109) l_0_7_112))))
 (let ((?x8027 (- (+ (+ (- (- ?x8017 ?x7915) ?x8019) ?x8021) ?x8023) (* (* 1.0 l_0_7_73) l_0_7_76))))
 (= ?x8027 0.0)))))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x8061 (* ?x7867 l_0_7_65)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x8059 (* ?x7861 l_0_7_209)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x8057 (* ?x7858 l_0_7_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_1) l_0_7_29) ?x8057) ?x8059) ?x8061) 0.0))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8106 (* ?x8105 l_0_7_41)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8103 (* ?x8102 l_0_7_40)))
 (let ((?x8099 (* 2.0 l_0_7_3)))
 (let ((?x8100 (* ?x8099 l_0_7_5)))
 (let ((?x8097 (* l_0_7_222 l_0_7_222)))
 (let ((?x8095 (* l_0_7_221 l_0_7_221)))
 (let ((?x8093 (* l_0_7_220 l_0_7_220)))
 (let ((?x8090 (* 2.0 l_0_7_2)))
 (let ((?x8091 (* ?x8090 l_0_7_4)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8088 (* ?x8087 l_0_7_185)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8085 (* ?x8084 l_0_7_184)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8082 (* ?x8076 l_0_7_149)))
 (let ((?x8092 (- (+ (+ (- (* (* (- 2.0) l_0_7_146) l_0_7_148) ?x8082) ?x8085) ?x8088) ?x8091)))
 (= (+ (+ (- (- (- (- ?x8092 ?x8093) ?x8095) ?x8097) ?x8100) ?x8103) ?x8106) 0.0))))))))))))))))))))
(assert
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x8192 (* ?x8191 l_0_7_67)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x8189 (* ?x8188 l_0_7_66)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x8186 (* ?x8185 l_0_7_65)))
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8183 (* ?x8105 l_0_7_44)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8181 (* ?x8102 l_0_7_43)))
 (let ((?x8178 (* 2.0 l_0_7_31)))
 (let ((?x8179 (* ?x8178 l_0_7_6)))
 (let ((?x8175 (* 2.0 l_0_7_30)))
 (let ((?x8176 (* ?x8175 l_0_7_5)))
 (let ((?x8099 (* 2.0 l_0_7_3)))
 (let ((?x8173 (* ?x8099 l_0_7_8)))
 (let ((?x8170 (* 2.0 l_0_7_29)))
 (let ((?x8171 (* ?x8170 l_0_7_4)))
 (let ((?x8090 (* 2.0 l_0_7_2)))
 (let ((?x8159 (* ?x8090 l_0_7_7)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8157 (* ?x8087 l_0_7_188)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8155 (* ?x8084 l_0_7_187)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8146 (* ?x8076 l_0_7_152)))
 (let ((?x8160 (- (+ (+ (- (* (* (- 2.0) l_0_7_146) l_0_7_151) ?x8146) ?x8155) ?x8157) ?x8159)))
 (let ((?x8166 (- (- ?x8160 (* (* 2.0 l_0_7_220) l_0_7_223)) (* (* 2.0 l_0_7_221) l_0_7_224))))
 (let ((?x8177 (+ (- (+ (- ?x8166 (* (* 2.0 l_0_7_222) l_0_7_225)) ?x8171) ?x8173) ?x8176)))
 (= (- (- (- (+ (+ (+ ?x8177 ?x8179) ?x8181) ?x8183) ?x8186) ?x8189) ?x8192) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8309 (* ?x8105 l_0_7_48)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8307 (* ?x8102 l_0_7_47)))
 (let ((?x8304 (* 2.0 l_0_7_258)))
 (let ((?x8305 (* ?x8304 l_0_7_283)))
 (let ((?x8301 (* 2.0 l_0_7_257)))
 (let ((?x8302 (* ?x8301 l_0_7_282)))
 (let ((?x8298 (* 2.0 l_0_7_256)))
 (let ((?x8299 (* ?x8298 l_0_7_281)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8290 (* ?x8087 l_0_7_192)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8288 (* ?x8084 l_0_7_191)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8286 (* ?x8076 l_0_7_156)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x8284 (* ?x8283 l_0_7_155)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x8281 (* ?x8280 l_0_7_3)))
 (let ((?x8289 (+ (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x8281) ?x8284) ?x8286) ?x8288)))
 (let ((?x8295 (- (- (+ ?x8289 ?x8290) (* (* 2.0 l_0_7_220) l_0_7_227)) (* (* 2.0 l_0_7_221) l_0_7_228))))
 (let ((?x8306 (- (- (- (- ?x8295 (* (* 2.0 l_0_7_222) l_0_7_229)) ?x8299) ?x8302) ?x8305)))
 (= (+ (+ ?x8306 ?x8307) ?x8309) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8421 (* ?x8105 l_0_7_53)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8419 (* ?x8102 l_0_7_52)))
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8411 (* ?x8410 l_0_7_211)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8408 (* ?x8407 l_0_7_210)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8405 (* ?x8404 l_0_7_209)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8402 (* ?x8087 l_0_7_197)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8400 (* ?x8084 l_0_7_196)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x8398 (* ?x8397 l_0_7_3)))
 (let ((?x8394 (* 2.0 l_0_7_16)))
 (let ((?x8395 (* ?x8394 l_0_7_2)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8392 (* ?x8391 l_0_7_175)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8389 (* ?x8388 l_0_7_174)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x8386 (* ?x8385 l_0_7_173)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8376 (* ?x8076 l_0_7_161)))
 (let ((?x8393 (+ (+ (+ (- (* (* (- 2.0) l_0_7_146) l_0_7_160) ?x8376) ?x8386) ?x8389) ?x8392)))
 (let ((?x8412 (- (- (- (+ (+ (- (- ?x8393 ?x8395) ?x8398) ?x8400) ?x8402) ?x8405) ?x8408) ?x8411)))
 (let ((?x8416 (- (- ?x8412 (* (* 2.0 l_0_7_220) l_0_7_232)) (* (* 2.0 l_0_7_221) l_0_7_233))))
 (= (+ (+ (- ?x8416 (* (* 2.0 l_0_7_222) l_0_7_234)) ?x8419) ?x8421) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8536 (* ?x8105 l_0_7_59)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8534 (* ?x8102 l_0_7_58)))
 (let ((?x8304 (* 2.0 l_0_7_258)))
 (let ((?x8305 (* ?x8304 l_0_7_283)))
 (let ((?x8301 (* 2.0 l_0_7_257)))
 (let ((?x8302 (* ?x8301 l_0_7_282)))
 (let ((?x8298 (* 2.0 l_0_7_256)))
 (let ((?x8299 (* ?x8298 l_0_7_281)))
 (let ((?x8528 (* 2.0 l_0_7_23)))
 (let ((?x8529 (* ?x8528 l_0_7_3)))
 (let ((?x8090 (* 2.0 l_0_7_2)))
 (let ((?x8520 (* ?x8090 l_0_7_22)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8518 (* ?x8087 l_0_7_203)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8516 (* ?x8084 l_0_7_202)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8514 (* ?x8076 l_0_7_167)))
 (let ((?x8082 (* ?x8076 l_0_7_149)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x8511 (* ?x8283 l_0_7_166)))
 (let ((?x8509 (* ?x8283 l_0_7_148)))
 (let ((?x8508 (+ (* (* 1.0 l_0_7_110) l_0_7_112) (* (* 1.0 l_0_7_111) l_0_7_113))))
 (let ((?x8521 (- (+ (+ (- (- (- (- ?x8508 ?x8509) ?x8511) ?x8082) ?x8514) ?x8516) ?x8518) ?x8520)))
 (let ((?x8525 (- (- ?x8521 (* (* 2.0 l_0_7_220) l_0_7_238)) (* (* 2.0 l_0_7_221) l_0_7_239))))
 (let ((?x8532 (+ (+ (- (- ?x8525 (* (* 2.0 l_0_7_222) l_0_7_240)) ?x8529) ?x8299) ?x8302)))
 (let ((?x8540 (- (+ (+ (+ ?x8532 ?x8305) ?x8534) ?x8536) (* (* 1.0 l_0_7_74) l_0_7_76))))
 (= (- ?x8540 (* (* 1.0 l_0_7_75) l_0_7_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8640 (* ?x8105 l_0_7_66)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8638 (* ?x8102 l_0_7_65)))
 (let ((?x8099 (* 2.0 l_0_7_3)))
 (let ((?x8636 (* ?x8099 l_0_7_30)))
 (let ((?x8090 (* 2.0 l_0_7_2)))
 (let ((?x8628 (* ?x8090 l_0_7_29)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8626 (* ?x8087 l_0_7_210)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8624 (* ?x8084 l_0_7_209)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8622 (* ?x8076 l_0_7_174)))
 (let ((?x8629 (- (+ (+ (- (* (* (- 2.0) l_0_7_146) l_0_7_173) ?x8622) ?x8624) ?x8626) ?x8628)))
 (let ((?x8633 (- (- ?x8629 (* (* 2.0 l_0_7_220) l_0_7_245)) (* (* 2.0 l_0_7_221) l_0_7_246))))
 (let ((?x8641 (+ (+ (- (- ?x8633 (* (* 2.0 l_0_7_222) l_0_7_247)) ?x8636) ?x8638) ?x8640)))
 (= ?x8641 0.0)))))))))))))))))))
(assert
 (let ((?x8717 (* l_0_7_6 l_0_7_6)))
 (let ((?x8715 (* l_0_7_5 l_0_7_5)))
 (let ((?x8713 (* l_0_7_42 l_0_7_42)))
 (let ((?x8711 (* l_0_7_41 l_0_7_41)))
 (let ((?x8709 (* l_0_7_40 l_0_7_40)))
 (let ((?x8707 (* l_0_7_4 l_0_7_4)))
 (let ((?x8705 (* l_0_7_186 l_0_7_186)))
 (let ((?x8703 (* l_0_7_185 l_0_7_185)))
 (let ((?x8701 (* l_0_7_184 l_0_7_184)))
 (let ((?x8699 (* l_0_7_150 l_0_7_150)))
 (let ((?x8700 (- (- (* (- l_0_7_148) l_0_7_148) (* l_0_7_149 l_0_7_149)) ?x8699)))
 (let ((?x8714 (+ (+ (+ (- (+ (+ (+ ?x8700 ?x8701) ?x8703) ?x8705) ?x8707) ?x8709) ?x8711) ?x8713)))
 (= (- (- ?x8714 ?x8715) ?x8717) 0.0))))))))))))))
(assert
 (let ((?x8773 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x8770 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x8767 (* ?x8191 l_0_7_45)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x8765 (* ?x8188 l_0_7_44)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x8763 (* ?x8185 l_0_7_43)))
 (let ((?x8761 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8758 (* ?x8410 l_0_7_189)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8756 (* ?x8407 l_0_7_188)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8754 (* ?x8404 l_0_7_187)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8752 (* ?x8391 l_0_7_153)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8750 (* ?x8388 l_0_7_152)))
 (let ((?x8757 (+ (+ (- (- (* (* (- 2.0) l_0_7_148) l_0_7_151) ?x8750) ?x8752) ?x8754) ?x8756)))
 (let ((?x8774 (- (- (+ (+ (+ (- (+ ?x8757 ?x8758) ?x8761) ?x8763) ?x8765) ?x8767) ?x8770) ?x8773)))
 (= ?x8774 0.0)))))))))))))))))))))))
(assert
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x8853 (* ?x8191 l_0_7_49)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x8851 (* ?x8188 l_0_7_48)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x8849 (* ?x8185 l_0_7_47)))
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8847 (* ?x8410 l_0_7_193)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8845 (* ?x8407 l_0_7_192)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8843 (* ?x8404 l_0_7_191)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8841 (* ?x8391 l_0_7_157)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8839 (* ?x8388 l_0_7_156)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x8837 (* ?x8385 l_0_7_155)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x8835 (* ?x8834 l_0_7_6)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x8832 (* ?x8280 l_0_7_5)))
 (let ((?x8840 (- (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x8832) ?x8835) ?x8837) ?x8839)))
 (let ((?x8854 (+ (+ (+ (+ (+ (+ (- ?x8840 ?x8841) ?x8843) ?x8845) ?x8847) ?x8849) ?x8851) ?x8853)))
 (= ?x8854 0.0))))))))))))))))))))))))))
(assert
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x8925 (* ?x8191 l_0_7_54)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x8923 (* ?x8188 l_0_7_53)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x8921 (* ?x8185 l_0_7_52)))
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8919 (* ?x8410 l_0_7_198)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8917 (* ?x8407 l_0_7_197)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8915 (* ?x8404 l_0_7_196)))
 (let ((?x8912 (* 2.0 l_0_7_18)))
 (let ((?x8913 (* ?x8912 l_0_7_6)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x8910 (* ?x8397 l_0_7_5)))
 (let ((?x8394 (* 2.0 l_0_7_16)))
 (let ((?x8899 (* ?x8394 l_0_7_4)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8895 (* ?x8391 l_0_7_162)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8891 (* ?x8388 l_0_7_161)))
 (let ((?x8911 (- (- (- (- (* (* (- 2.0) l_0_7_148) l_0_7_160) ?x8891) ?x8895) ?x8899) ?x8910)))
 (let ((?x8926 (+ (+ (+ (+ (+ (+ (- ?x8911 ?x8913) ?x8915) ?x8917) ?x8919) ?x8921) ?x8923) ?x8925)))
 (= ?x8926 0.0))))))))))))))))))))))))))
(assert
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x9011 (* ?x8191 l_0_7_60)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x9009 (* ?x8188 l_0_7_59)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x9007 (* ?x8185 l_0_7_58)))
 (let ((?x9004 (* 2.0 l_0_7_24)))
 (let ((?x9005 (* ?x9004 l_0_7_6)))
 (let ((?x8528 (* 2.0 l_0_7_23)))
 (let ((?x9002 (* ?x8528 l_0_7_5)))
 (let ((?x8999 (* 2.0 l_0_7_22)))
 (let ((?x9000 (* ?x8999 l_0_7_4)))
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8997 (* ?x8410 l_0_7_204)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8995 (* ?x8407 l_0_7_203)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8993 (* ?x8404 l_0_7_202)))
 (let ((?x8699 (* l_0_7_150 l_0_7_150)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8990 (* ?x8391 l_0_7_168)))
 (let ((?x8690 (* l_0_7_149 l_0_7_149)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8987 (* ?x8388 l_0_7_167)))
 (let ((?x8721 (* l_0_7_148 l_0_7_148)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x8984 (* ?x8385 l_0_7_166)))
 (let ((?x8971 (+ (* (/ 1.0 2.0) (* l_0_7_112 l_0_7_112)) (* (/ 1.0 2.0) (* l_0_7_113 l_0_7_113)))))
 (let ((?x8988 (- (- (- (+ ?x8971 (* (/ 1.0 2.0) (* l_0_7_114 l_0_7_114))) ?x8984) ?x8721) ?x8987)))
 (let ((?x9001 (- (+ (+ (+ (- (- (- ?x8988 ?x8690) ?x8990) ?x8699) ?x8993) ?x8995) ?x8997) ?x9000)))
 (let ((?x9015 (- (+ (+ (+ (- (- ?x9001 ?x9002) ?x9005) ?x9007) ?x9009) ?x9011) (* (* (/ 1.0 2.0) l_0_7_76) l_0_7_76))))
 (let ((?x9021 (- (- ?x9015 (* (* (/ 1.0 2.0) l_0_7_77) l_0_7_77)) (* (* (/ 1.0 2.0) l_0_7_78) l_0_7_78))))
 (= ?x9021 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x8192 (* ?x8191 l_0_7_67)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x8189 (* ?x8188 l_0_7_66)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x8186 (* ?x8185 l_0_7_65)))
 (let ((?x8178 (* 2.0 l_0_7_31)))
 (let ((?x8179 (* ?x8178 l_0_7_6)))
 (let ((?x8175 (* 2.0 l_0_7_30)))
 (let ((?x8176 (* ?x8175 l_0_7_5)))
 (let ((?x8170 (* 2.0 l_0_7_29)))
 (let ((?x8171 (* ?x8170 l_0_7_4)))
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8411 (* ?x8410 l_0_7_211)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8408 (* ?x8407 l_0_7_210)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8405 (* ?x8404 l_0_7_209)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8392 (* ?x8391 l_0_7_175)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8389 (* ?x8388 l_0_7_174)))
 (let ((?x9114 (+ (+ (- (- (* (* (- 2.0) l_0_7_148) l_0_7_173) ?x8389) ?x8392) ?x8405) ?x8408)))
 (let ((?x9121 (+ (+ (+ (- (- (- (+ ?x9114 ?x8411) ?x8171) ?x8176) ?x8179) ?x8186) ?x8189) ?x8192)))
 (= ?x9121 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9171 (* l_0_7_9 l_0_7_9)))
 (let ((?x9169 (* l_0_7_8 l_0_7_8)))
 (let ((?x9167 (* l_0_7_7 l_0_7_7)))
 (let ((?x9165 (* l_0_7_46 l_0_7_46)))
 (let ((?x9163 (* l_0_7_45 l_0_7_45)))
 (let ((?x9161 (* l_0_7_44 l_0_7_44)))
 (let ((?x9159 (* l_0_7_43 l_0_7_43)))
 (let ((?x9157 (* l_0_7_190 l_0_7_190)))
 (let ((?x9155 (* l_0_7_189 l_0_7_189)))
 (let ((?x9153 (* l_0_7_188 l_0_7_188)))
 (let ((?x9151 (* l_0_7_187 l_0_7_187)))
 (let ((?x9149 (* l_0_7_154 l_0_7_154)))
 (let ((?x9147 (* l_0_7_153 l_0_7_153)))
 (let ((?x9145 (* l_0_7_152 l_0_7_152)))
 (let ((?x9148 (- (- (- (* (- l_0_7_10) l_0_7_10) (* l_0_7_151 l_0_7_151)) ?x9145) ?x9147)))
 (let ((?x9162 (+ (+ (+ (+ (+ (+ (- ?x9148 ?x9149) ?x9151) ?x9153) ?x9155) ?x9157) ?x9159) ?x9161)))
 (= (- (- (- (+ (+ ?x9162 ?x9163) ?x9165) ?x9167) ?x9169) ?x9171) 0.0))))))))))))))))))
(assert
 (let ((?x9251 (* 2.0 l_0_7_46)))
 (let ((?x9252 (* ?x9251 l_0_7_50)))
 (let ((?x9248 (* 2.0 l_0_7_45)))
 (let ((?x9249 (* ?x9248 l_0_7_49)))
 (let ((?x9245 (* 2.0 l_0_7_44)))
 (let ((?x9246 (* ?x9245 l_0_7_48)))
 (let ((?x9242 (* 2.0 l_0_7_43)))
 (let ((?x9243 (* ?x9242 l_0_7_47)))
 (let ((?x9239 (* 2.0 l_0_7_190)))
 (let ((?x9240 (* ?x9239 l_0_7_194)))
 (let ((?x9236 (* 2.0 l_0_7_189)))
 (let ((?x9237 (* ?x9236 l_0_7_193)))
 (let ((?x9233 (* 2.0 l_0_7_188)))
 (let ((?x9234 (* ?x9233 l_0_7_192)))
 (let ((?x9230 (* 2.0 l_0_7_187)))
 (let ((?x9231 (* ?x9230 l_0_7_191)))
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9228 (* ?x9227 l_0_7_158)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9225 (* ?x9224 l_0_7_157)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9222 (* ?x9221 l_0_7_156)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9219 (* ?x9218 l_0_7_155)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x9216 (* ?x8834 l_0_7_9)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x9214 (* ?x8280 l_0_7_8)))
 (let ((?x9211 (* 2.0 l_0_7_11)))
 (let ((?x9212 (* ?x9211 l_0_7_7)))
 (let ((?x9220 (- (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x9212) ?x9214) ?x9216) ?x9219)))
 (let ((?x9241 (+ (+ (+ (+ (- (- (- ?x9220 ?x9222) ?x9225) ?x9228) ?x9231) ?x9234) ?x9237) ?x9240)))
 (= (+ (+ (+ (+ ?x9241 ?x9243) ?x9246) ?x9249) ?x9252) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9251 (* 2.0 l_0_7_46)))
 (let ((?x9347 (* ?x9251 l_0_7_55)))
 (let ((?x9248 (* 2.0 l_0_7_45)))
 (let ((?x9345 (* ?x9248 l_0_7_54)))
 (let ((?x9245 (* 2.0 l_0_7_44)))
 (let ((?x9343 (* ?x9245 l_0_7_53)))
 (let ((?x9242 (* 2.0 l_0_7_43)))
 (let ((?x9341 (* ?x9242 l_0_7_52)))
 (let ((?x9239 (* 2.0 l_0_7_190)))
 (let ((?x9339 (* ?x9239 l_0_7_199)))
 (let ((?x9236 (* 2.0 l_0_7_189)))
 (let ((?x9337 (* ?x9236 l_0_7_198)))
 (let ((?x9233 (* 2.0 l_0_7_188)))
 (let ((?x9335 (* ?x9233 l_0_7_197)))
 (let ((?x9230 (* 2.0 l_0_7_187)))
 (let ((?x9333 (* ?x9230 l_0_7_196)))
 (let ((?x8912 (* 2.0 l_0_7_18)))
 (let ((?x9331 (* ?x8912 l_0_7_9)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x9329 (* ?x8397 l_0_7_8)))
 (let ((?x8394 (* 2.0 l_0_7_16)))
 (let ((?x9327 (* ?x8394 l_0_7_7)))
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9314 (* ?x9227 l_0_7_163)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9310 (* ?x9224 l_0_7_162)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9306 (* ?x9221 l_0_7_161)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9302 (* ?x9218 l_0_7_160)))
 (let ((?x9315 (- (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_19) ?x9302) ?x9306) ?x9310) ?x9314)))
 (let ((?x9340 (+ (+ (+ (+ (- (- (- ?x9315 ?x9327) ?x9329) ?x9331) ?x9333) ?x9335) ?x9337) ?x9339)))
 (= (+ (+ (+ (+ ?x9340 ?x9341) ?x9343) ?x9345) ?x9347) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9251 (* 2.0 l_0_7_46)))
 (let ((?x9455 (* ?x9251 l_0_7_61)))
 (let ((?x9248 (* 2.0 l_0_7_45)))
 (let ((?x9453 (* ?x9248 l_0_7_60)))
 (let ((?x9245 (* 2.0 l_0_7_44)))
 (let ((?x9451 (* ?x9245 l_0_7_59)))
 (let ((?x9242 (* 2.0 l_0_7_43)))
 (let ((?x9449 (* ?x9242 l_0_7_58)))
 (let ((?x9004 (* 2.0 l_0_7_24)))
 (let ((?x9447 (* ?x9004 l_0_7_9)))
 (let ((?x8528 (* 2.0 l_0_7_23)))
 (let ((?x9445 (* ?x8528 l_0_7_8)))
 (let ((?x8999 (* 2.0 l_0_7_22)))
 (let ((?x9443 (* ?x8999 l_0_7_7)))
 (let ((?x9239 (* 2.0 l_0_7_190)))
 (let ((?x9441 (* ?x9239 l_0_7_205)))
 (let ((?x9236 (* 2.0 l_0_7_189)))
 (let ((?x9439 (* ?x9236 l_0_7_204)))
 (let ((?x9233 (* 2.0 l_0_7_188)))
 (let ((?x9437 (* ?x9233 l_0_7_203)))
 (let ((?x9230 (* 2.0 l_0_7_187)))
 (let ((?x9435 (* ?x9230 l_0_7_202)))
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9433 (* ?x9227 l_0_7_169)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9431 (* ?x9224 l_0_7_168)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9429 (* ?x9221 l_0_7_167)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9427 (* ?x9218 l_0_7_166)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8752 (* ?x8391 l_0_7_153)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8750 (* ?x8388 l_0_7_152)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x9423 (* ?x8385 l_0_7_151)))
 (let ((?x9401 (+ (* (* (- 2.0) l_0_7_10) l_0_7_25) (* (* 1.0 l_0_7_112) l_0_7_115))))
 (let ((?x9422 (+ (+ ?x9401 (* (* 1.0 l_0_7_113) l_0_7_116)) (* (* 1.0 l_0_7_114) l_0_7_117))))
 (let ((?x9434 (- (- (- (- (- (- (- ?x9422 ?x9423) ?x8750) ?x8752) ?x9427) ?x9429) ?x9431) ?x9433)))
 (let ((?x9448 (- (- (- (+ (+ (+ (+ ?x9434 ?x9435) ?x9437) ?x9439) ?x9441) ?x9443) ?x9445) ?x9447)))
 (let ((?x9459 (- (+ (+ (+ (+ ?x9448 ?x9449) ?x9451) ?x9453) ?x9455) (* (* 1.0 l_0_7_76) l_0_7_79))))
 (let ((?x9465 (- (- ?x9459 (* (* 1.0 l_0_7_77) l_0_7_80)) (* (* 1.0 l_0_7_78) l_0_7_81))))
 (= ?x9465 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9251 (* 2.0 l_0_7_46)))
 (let ((?x9595 (* ?x9251 l_0_7_68)))
 (let ((?x9248 (* 2.0 l_0_7_45)))
 (let ((?x9593 (* ?x9248 l_0_7_67)))
 (let ((?x9245 (* 2.0 l_0_7_44)))
 (let ((?x9591 (* ?x9245 l_0_7_66)))
 (let ((?x9242 (* 2.0 l_0_7_43)))
 (let ((?x9589 (* ?x9242 l_0_7_65)))
 (let ((?x8178 (* 2.0 l_0_7_31)))
 (let ((?x9587 (* ?x8178 l_0_7_9)))
 (let ((?x8175 (* 2.0 l_0_7_30)))
 (let ((?x9585 (* ?x8175 l_0_7_8)))
 (let ((?x8170 (* 2.0 l_0_7_29)))
 (let ((?x9583 (* ?x8170 l_0_7_7)))
 (let ((?x9239 (* 2.0 l_0_7_190)))
 (let ((?x9581 (* ?x9239 l_0_7_212)))
 (let ((?x9236 (* 2.0 l_0_7_189)))
 (let ((?x9579 (* ?x9236 l_0_7_211)))
 (let ((?x9233 (* 2.0 l_0_7_188)))
 (let ((?x9577 (* ?x9233 l_0_7_210)))
 (let ((?x9230 (* 2.0 l_0_7_187)))
 (let ((?x9575 (* ?x9230 l_0_7_209)))
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9573 (* ?x9227 l_0_7_176)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9571 (* ?x9224 l_0_7_175)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9569 (* ?x9221 l_0_7_174)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9567 (* ?x9218 l_0_7_173)))
 (let ((?x9574 (- (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_32) ?x9567) ?x9569) ?x9571) ?x9573)))
 (let ((?x9588 (- (- (- (+ (+ (+ (+ ?x9574 ?x9575) ?x9577) ?x9579) ?x9581) ?x9583) ?x9585) ?x9587)))
 (= (+ (+ (+ (+ ?x9588 ?x9589) ?x9591) ?x9593) ?x9595) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9704 (* l_0_7_51 l_0_7_51)))
 (let ((?x9702 (* l_0_7_50 l_0_7_50)))
 (let ((?x9700 (* l_0_7_49 l_0_7_49)))
 (let ((?x9698 (* l_0_7_48 l_0_7_48)))
 (let ((?x9696 (* l_0_7_47 l_0_7_47)))
 (let ((?x9694 (* l_0_7_195 l_0_7_195)))
 (let ((?x9692 (* l_0_7_194 l_0_7_194)))
 (let ((?x9690 (* l_0_7_193 l_0_7_193)))
 (let ((?x9688 (* l_0_7_192 l_0_7_192)))
 (let ((?x9686 (* l_0_7_191 l_0_7_191)))
 (let ((?x9684 (* l_0_7_159 l_0_7_159)))
 (let ((?x9682 (* l_0_7_158 l_0_7_158)))
 (let ((?x9680 (* l_0_7_157 l_0_7_157)))
 (let ((?x9678 (* l_0_7_156 l_0_7_156)))
 (let ((?x9676 (* l_0_7_155 l_0_7_155)))
 (let ((?x9674 (* l_0_7_15 l_0_7_15)))
 (let ((?x9672 (* l_0_7_14 l_0_7_14)))
 (let ((?x9659 (* l_0_7_13 l_0_7_13)))
 (let ((?x9673 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x9659) ?x9672)))
 (let ((?x9687 (+ (- (- (- (- (- (- ?x9673 ?x9674) ?x9676) ?x9678) ?x9680) ?x9682) ?x9684) ?x9686)))
 (let ((?x9701 (+ (+ (+ (+ (+ (+ (+ ?x9687 ?x9688) ?x9690) ?x9692) ?x9694) ?x9696) ?x9698) ?x9700)))
 (= (+ (+ ?x9701 ?x9702) ?x9704) 0.0)))))))))))))))))))))))
(assert
 (let ((?x9802 (* 2.0 l_0_7_51)))
 (let ((?x9803 (* ?x9802 l_0_7_56)))
 (let ((?x9799 (* 2.0 l_0_7_50)))
 (let ((?x9800 (* ?x9799 l_0_7_55)))
 (let ((?x9796 (* 2.0 l_0_7_49)))
 (let ((?x9797 (* ?x9796 l_0_7_54)))
 (let ((?x9793 (* 2.0 l_0_7_48)))
 (let ((?x9794 (* ?x9793 l_0_7_53)))
 (let ((?x9790 (* 2.0 l_0_7_47)))
 (let ((?x9791 (* ?x9790 l_0_7_52)))
 (let ((?x9787 (* 2.0 l_0_7_195)))
 (let ((?x9788 (* ?x9787 l_0_7_200)))
 (let ((?x9784 (* 2.0 l_0_7_194)))
 (let ((?x9785 (* ?x9784 l_0_7_199)))
 (let ((?x9781 (* 2.0 l_0_7_193)))
 (let ((?x9782 (* ?x9781 l_0_7_198)))
 (let ((?x9778 (* 2.0 l_0_7_192)))
 (let ((?x9779 (* ?x9778 l_0_7_197)))
 (let ((?x9775 (* 2.0 l_0_7_191)))
 (let ((?x9776 (* ?x9775 l_0_7_196)))
 (let ((?x9772 (* 2.0 l_0_7_159)))
 (let ((?x9773 (* ?x9772 l_0_7_164)))
 (let ((?x9769 (* 2.0 l_0_7_158)))
 (let ((?x9770 (* ?x9769 l_0_7_163)))
 (let ((?x9766 (* 2.0 l_0_7_157)))
 (let ((?x9767 (* ?x9766 l_0_7_162)))
 (let ((?x9763 (* 2.0 l_0_7_156)))
 (let ((?x9764 (* ?x9763 l_0_7_161)))
 (let ((?x9760 (* 2.0 l_0_7_155)))
 (let ((?x9761 (* ?x9760 l_0_7_160)))
 (let ((?x9757 (* 2.0 l_0_7_15)))
 (let ((?x9758 (* ?x9757 l_0_7_20)))
 (let ((?x9754 (* 2.0 l_0_7_14)))
 (let ((?x9755 (* ?x9754 l_0_7_19)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x9752 (* ?x8834 l_0_7_18)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x9750 (* ?x8280 l_0_7_17)))
 (let ((?x9759 (- (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_16) ?x9750) ?x9752) ?x9755) ?x9758)))
 (let ((?x9780 (+ (+ (- (- (- (- (- ?x9759 ?x9761) ?x9764) ?x9767) ?x9770) ?x9773) ?x9776) ?x9779)))
 (let ((?x9801 (+ (+ (+ (+ (+ (+ (+ ?x9780 ?x9782) ?x9785) ?x9788) ?x9791) ?x9794) ?x9797) ?x9800)))
 (= (+ ?x9801 ?x9803) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9802 (* 2.0 l_0_7_51)))
 (let ((?x9931 (* ?x9802 l_0_7_62)))
 (let ((?x9799 (* 2.0 l_0_7_50)))
 (let ((?x9929 (* ?x9799 l_0_7_61)))
 (let ((?x9796 (* 2.0 l_0_7_49)))
 (let ((?x9927 (* ?x9796 l_0_7_60)))
 (let ((?x9793 (* 2.0 l_0_7_48)))
 (let ((?x9925 (* ?x9793 l_0_7_59)))
 (let ((?x9790 (* 2.0 l_0_7_47)))
 (let ((?x9923 (* ?x9790 l_0_7_58)))
 (let ((?x9787 (* 2.0 l_0_7_195)))
 (let ((?x9921 (* ?x9787 l_0_7_206)))
 (let ((?x9784 (* 2.0 l_0_7_194)))
 (let ((?x9919 (* ?x9784 l_0_7_205)))
 (let ((?x9781 (* 2.0 l_0_7_193)))
 (let ((?x9917 (* ?x9781 l_0_7_204)))
 (let ((?x9778 (* 2.0 l_0_7_192)))
 (let ((?x9915 (* ?x9778 l_0_7_203)))
 (let ((?x9775 (* 2.0 l_0_7_191)))
 (let ((?x9913 (* ?x9775 l_0_7_202)))
 (let ((?x9772 (* 2.0 l_0_7_159)))
 (let ((?x9911 (* ?x9772 l_0_7_170)))
 (let ((?x9769 (* 2.0 l_0_7_158)))
 (let ((?x9909 (* ?x9769 l_0_7_169)))
 (let ((?x9766 (* 2.0 l_0_7_157)))
 (let ((?x9907 (* ?x9766 l_0_7_168)))
 (let ((?x9763 (* 2.0 l_0_7_156)))
 (let ((?x9905 (* ?x9763 l_0_7_167)))
 (let ((?x9760 (* 2.0 l_0_7_155)))
 (let ((?x9903 (* ?x9760 l_0_7_166)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8841 (* ?x8391 l_0_7_157)))
 (let ((?x9757 (* 2.0 l_0_7_15)))
 (let ((?x9900 (* ?x9757 l_0_7_26)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8839 (* ?x8388 l_0_7_156)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x8837 (* ?x8385 l_0_7_155)))
 (let ((?x9754 (* 2.0 l_0_7_14)))
 (let ((?x9896 (* ?x9754 l_0_7_25)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x9881 (* ?x8834 l_0_7_24)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x9877 (* ?x8280 l_0_7_23)))
 (let ((?x9867 (+ (* (* (- 2.0) l_0_7_11) l_0_7_22) (* (* 1.0 l_0_7_112) l_0_7_119))))
 (let ((?x9875 (+ (+ ?x9867 (* (* 1.0 l_0_7_113) l_0_7_120)) (* (* 1.0 l_0_7_114) l_0_7_121))))
 (let ((?x9902 (- (- (- (- (- (- (- ?x9875 ?x9877) ?x9881) ?x9896) ?x8837) ?x8839) ?x9900) ?x8841)))
 (let ((?x9916 (+ (+ (- (- (- (- (- ?x9902 ?x9903) ?x9905) ?x9907) ?x9909) ?x9911) ?x9913) ?x9915)))
 (let ((?x9930 (+ (+ (+ (+ (+ (+ (+ ?x9916 ?x9917) ?x9919) ?x9921) ?x9923) ?x9925) ?x9927) ?x9929)))
 (let ((?x9936 (- (- (+ ?x9930 ?x9931) (* (* 1.0 l_0_7_76) l_0_7_83)) (* (* 1.0 l_0_7_77) l_0_7_84))))
 (= (- ?x9936 (* (* 1.0 l_0_7_78) l_0_7_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9802 (* 2.0 l_0_7_51)))
 (let ((?x10092 (* ?x9802 l_0_7_69)))
 (let ((?x9799 (* 2.0 l_0_7_50)))
 (let ((?x10090 (* ?x9799 l_0_7_68)))
 (let ((?x9796 (* 2.0 l_0_7_49)))
 (let ((?x10088 (* ?x9796 l_0_7_67)))
 (let ((?x9793 (* 2.0 l_0_7_48)))
 (let ((?x10086 (* ?x9793 l_0_7_66)))
 (let ((?x9790 (* 2.0 l_0_7_47)))
 (let ((?x10084 (* ?x9790 l_0_7_65)))
 (let ((?x9787 (* 2.0 l_0_7_195)))
 (let ((?x10082 (* ?x9787 l_0_7_213)))
 (let ((?x9784 (* 2.0 l_0_7_194)))
 (let ((?x10080 (* ?x9784 l_0_7_212)))
 (let ((?x9781 (* 2.0 l_0_7_193)))
 (let ((?x10078 (* ?x9781 l_0_7_211)))
 (let ((?x9778 (* 2.0 l_0_7_192)))
 (let ((?x10076 (* ?x9778 l_0_7_210)))
 (let ((?x9775 (* 2.0 l_0_7_191)))
 (let ((?x10074 (* ?x9775 l_0_7_209)))
 (let ((?x9772 (* 2.0 l_0_7_159)))
 (let ((?x10072 (* ?x9772 l_0_7_177)))
 (let ((?x9769 (* 2.0 l_0_7_158)))
 (let ((?x10070 (* ?x9769 l_0_7_176)))
 (let ((?x9766 (* 2.0 l_0_7_157)))
 (let ((?x10068 (* ?x9766 l_0_7_175)))
 (let ((?x9763 (* 2.0 l_0_7_156)))
 (let ((?x10066 (* ?x9763 l_0_7_174)))
 (let ((?x9760 (* 2.0 l_0_7_155)))
 (let ((?x10064 (* ?x9760 l_0_7_173)))
 (let ((?x9757 (* 2.0 l_0_7_15)))
 (let ((?x10062 (* ?x9757 l_0_7_33)))
 (let ((?x9754 (* 2.0 l_0_7_14)))
 (let ((?x10060 (* ?x9754 l_0_7_32)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x10058 (* ?x8834 l_0_7_31)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x10056 (* ?x8280 l_0_7_30)))
 (let ((?x10063 (- (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_29) ?x10056) ?x10058) ?x10060) ?x10062)))
 (let ((?x10077 (+ (+ (- (- (- (- (- ?x10063 ?x10064) ?x10066) ?x10068) ?x10070) ?x10072) ?x10074) ?x10076)))
 (let ((?x10091 (+ (+ (+ (+ (+ (+ (+ ?x10077 ?x10078) ?x10080) ?x10082) ?x10084) ?x10086) ?x10088) ?x10090)))
 (= (+ ?x10091 ?x10092) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10220 (* l_0_7_57 l_0_7_57)))
 (let ((?x10218 (* l_0_7_56 l_0_7_56)))
 (let ((?x10216 (* l_0_7_55 l_0_7_55)))
 (let ((?x10214 (* l_0_7_54 l_0_7_54)))
 (let ((?x10212 (* l_0_7_53 l_0_7_53)))
 (let ((?x10210 (* l_0_7_52 l_0_7_52)))
 (let ((?x10208 (* l_0_7_21 l_0_7_21)))
 (let ((?x10206 (* l_0_7_201 l_0_7_201)))
 (let ((?x10204 (* l_0_7_200 l_0_7_200)))
 (let ((?x10202 (* l_0_7_20 l_0_7_20)))
 (let ((?x10200 (* l_0_7_199 l_0_7_199)))
 (let ((?x10198 (* l_0_7_198 l_0_7_198)))
 (let ((?x10196 (* l_0_7_197 l_0_7_197)))
 (let ((?x10194 (* l_0_7_196 l_0_7_196)))
 (let ((?x10192 (* l_0_7_19 l_0_7_19)))
 (let ((?x10190 (* l_0_7_18 l_0_7_18)))
 (let ((?x10188 (* l_0_7_17 l_0_7_17)))
 (let ((?x10186 (* l_0_7_165 l_0_7_165)))
 (let ((?x10171 (* l_0_7_164 l_0_7_164)))
 (let ((?x10168 (* l_0_7_163 l_0_7_163)))
 (let ((?x10164 (* l_0_7_162 l_0_7_162)))
 (let ((?x10160 (* l_0_7_161 l_0_7_161)))
 (let ((?x10166 (- (- (- (* (- l_0_7_16) l_0_7_16) (* l_0_7_160 l_0_7_160)) ?x10160) ?x10164)))
 (let ((?x10195 (+ (- (- (- (- (- (- ?x10166 ?x10168) ?x10171) ?x10186) ?x10188) ?x10190) ?x10192) ?x10194)))
 (let ((?x10209 (- (+ (+ (- (+ (+ (+ ?x10195 ?x10196) ?x10198) ?x10200) ?x10202) ?x10204) ?x10206) ?x10208)))
 (= (+ (+ (+ (+ (+ (+ ?x10209 ?x10210) ?x10212) ?x10214) ?x10216) ?x10218) ?x10220) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x10350 (* 2.0 l_0_7_57)))
 (let ((?x10351 (* ?x10350 l_0_7_63)))
 (let ((?x10347 (* 2.0 l_0_7_56)))
 (let ((?x10348 (* ?x10347 l_0_7_62)))
 (let ((?x10344 (* 2.0 l_0_7_55)))
 (let ((?x10345 (* ?x10344 l_0_7_61)))
 (let ((?x10341 (* 2.0 l_0_7_54)))
 (let ((?x10342 (* ?x10341 l_0_7_60)))
 (let ((?x10338 (* 2.0 l_0_7_53)))
 (let ((?x10339 (* ?x10338 l_0_7_59)))
 (let ((?x10335 (* 2.0 l_0_7_52)))
 (let ((?x10336 (* ?x10335 l_0_7_58)))
 (let ((?x10332 (* 2.0 l_0_7_21)))
 (let ((?x10333 (* ?x10332 l_0_7_27)))
 (let ((?x10329 (* 2.0 l_0_7_201)))
 (let ((?x10330 (* ?x10329 l_0_7_207)))
 (let ((?x10326 (* 2.0 l_0_7_200)))
 (let ((?x10327 (* ?x10326 l_0_7_206)))
 (let ((?x10323 (* 2.0 l_0_7_20)))
 (let ((?x10324 (* ?x10323 l_0_7_26)))
 (let ((?x10320 (* 2.0 l_0_7_199)))
 (let ((?x10321 (* ?x10320 l_0_7_205)))
 (let ((?x10317 (* 2.0 l_0_7_198)))
 (let ((?x10318 (* ?x10317 l_0_7_204)))
 (let ((?x10314 (* 2.0 l_0_7_197)))
 (let ((?x10315 (* ?x10314 l_0_7_203)))
 (let ((?x10311 (* 2.0 l_0_7_196)))
 (let ((?x10312 (* ?x10311 l_0_7_202)))
 (let ((?x10308 (* 2.0 l_0_7_19)))
 (let ((?x10309 (* ?x10308 l_0_7_25)))
 (let ((?x8912 (* 2.0 l_0_7_18)))
 (let ((?x10306 (* ?x8912 l_0_7_24)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x10304 (* ?x8397 l_0_7_23)))
 (let ((?x10301 (* 2.0 l_0_7_165)))
 (let ((?x10302 (* ?x10301 l_0_7_171)))
 (let ((?x10298 (* 2.0 l_0_7_164)))
 (let ((?x10299 (* ?x10298 l_0_7_170)))
 (let ((?x10295 (* 2.0 l_0_7_163)))
 (let ((?x10296 (* ?x10295 l_0_7_169)))
 (let ((?x10292 (* 2.0 l_0_7_162)))
 (let ((?x10293 (* ?x10292 l_0_7_168)))
 (let ((?x10289 (* 2.0 l_0_7_161)))
 (let ((?x10290 (* ?x10289 l_0_7_167)))
 (let ((?x10286 (* 2.0 l_0_7_160)))
 (let ((?x10287 (* ?x10286 l_0_7_166)))
 (let ((?x8394 (* 2.0 l_0_7_16)))
 (let ((?x10284 (* ?x8394 l_0_7_22)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8895 (* ?x8391 l_0_7_162)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8891 (* ?x8388 l_0_7_161)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x10280 (* ?x8385 l_0_7_160)))
 (let ((?x10277 (+ (* (* 1.0 l_0_7_112) l_0_7_124) (* (* 1.0 l_0_7_113) l_0_7_125))))
 (let ((?x10283 (- (- (- (+ ?x10277 (* (* 1.0 l_0_7_114) l_0_7_126)) ?x10280) ?x8891) ?x8895)))
 (let ((?x10303 (- (- (- (- (- (- (- ?x10283 ?x10284) ?x10287) ?x10290) ?x10293) ?x10296) ?x10299) ?x10302)))
 (let ((?x10322 (+ (+ (+ (+ (- (- (- ?x10303 ?x10304) ?x10306) ?x10309) ?x10312) ?x10315) ?x10318) ?x10321)))
 (let ((?x10343 (+ (+ (+ (- (+ (+ (- ?x10322 ?x10324) ?x10327) ?x10330) ?x10333) ?x10336) ?x10339) ?x10342)))
 (let ((?x10354 (- (+ (+ (+ ?x10343 ?x10345) ?x10348) ?x10351) (* (* 1.0 l_0_7_76) l_0_7_88))))
 (let ((?x10358 (- (- ?x10354 (* (* 1.0 l_0_7_77) l_0_7_89)) (* (* 1.0 l_0_7_78) l_0_7_90))))
 (= ?x10358 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10350 (* 2.0 l_0_7_57)))
 (let ((?x10545 (* ?x10350 l_0_7_70)))
 (let ((?x10347 (* 2.0 l_0_7_56)))
 (let ((?x10543 (* ?x10347 l_0_7_69)))
 (let ((?x10344 (* 2.0 l_0_7_55)))
 (let ((?x10541 (* ?x10344 l_0_7_68)))
 (let ((?x10341 (* 2.0 l_0_7_54)))
 (let ((?x10539 (* ?x10341 l_0_7_67)))
 (let ((?x10338 (* 2.0 l_0_7_53)))
 (let ((?x10537 (* ?x10338 l_0_7_66)))
 (let ((?x10335 (* 2.0 l_0_7_52)))
 (let ((?x10535 (* ?x10335 l_0_7_65)))
 (let ((?x10332 (* 2.0 l_0_7_21)))
 (let ((?x10533 (* ?x10332 l_0_7_34)))
 (let ((?x10329 (* 2.0 l_0_7_201)))
 (let ((?x10531 (* ?x10329 l_0_7_214)))
 (let ((?x10326 (* 2.0 l_0_7_200)))
 (let ((?x10529 (* ?x10326 l_0_7_213)))
 (let ((?x10323 (* 2.0 l_0_7_20)))
 (let ((?x10527 (* ?x10323 l_0_7_33)))
 (let ((?x10320 (* 2.0 l_0_7_199)))
 (let ((?x10525 (* ?x10320 l_0_7_212)))
 (let ((?x10317 (* 2.0 l_0_7_198)))
 (let ((?x10523 (* ?x10317 l_0_7_211)))
 (let ((?x10314 (* 2.0 l_0_7_197)))
 (let ((?x10521 (* ?x10314 l_0_7_210)))
 (let ((?x10311 (* 2.0 l_0_7_196)))
 (let ((?x10519 (* ?x10311 l_0_7_209)))
 (let ((?x10308 (* 2.0 l_0_7_19)))
 (let ((?x10517 (* ?x10308 l_0_7_32)))
 (let ((?x8912 (* 2.0 l_0_7_18)))
 (let ((?x10515 (* ?x8912 l_0_7_31)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x10513 (* ?x8397 l_0_7_30)))
 (let ((?x10301 (* 2.0 l_0_7_165)))
 (let ((?x10511 (* ?x10301 l_0_7_178)))
 (let ((?x10298 (* 2.0 l_0_7_164)))
 (let ((?x10509 (* ?x10298 l_0_7_177)))
 (let ((?x10295 (* 2.0 l_0_7_163)))
 (let ((?x10507 (* ?x10295 l_0_7_176)))
 (let ((?x10292 (* 2.0 l_0_7_162)))
 (let ((?x10505 (* ?x10292 l_0_7_175)))
 (let ((?x10289 (* 2.0 l_0_7_161)))
 (let ((?x10503 (* ?x10289 l_0_7_174)))
 (let ((?x10286 (* 2.0 l_0_7_160)))
 (let ((?x10501 (* ?x10286 l_0_7_173)))
 (let ((?x10508 (- (- (- (- (* (* (- 2.0) l_0_7_16) l_0_7_29) ?x10501) ?x10503) ?x10505) ?x10507)))
 (let ((?x10522 (+ (+ (- (- (- (- (- ?x10508 ?x10509) ?x10511) ?x10513) ?x10515) ?x10517) ?x10519) ?x10521)))
 (let ((?x10536 (+ (- (+ (+ (- (+ (+ ?x10522 ?x10523) ?x10525) ?x10527) ?x10529) ?x10531) ?x10533) ?x10535)))
 (= (+ (+ (+ (+ (+ ?x10536 ?x10537) ?x10539) ?x10541) ?x10543) ?x10545) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10713 (* l_0_7_64 l_0_7_64)))
 (let ((?x10711 (* l_0_7_63 l_0_7_63)))
 (let ((?x10709 (* l_0_7_62 l_0_7_62)))
 (let ((?x10707 (* l_0_7_61 l_0_7_61)))
 (let ((?x10705 (* l_0_7_60 l_0_7_60)))
 (let ((?x10703 (* l_0_7_59 l_0_7_59)))
 (let ((?x10701 (* l_0_7_58 l_0_7_58)))
 (let ((?x10699 (* l_0_7_28 l_0_7_28)))
 (let ((?x10697 (* l_0_7_27 l_0_7_27)))
 (let ((?x10695 (* l_0_7_26 l_0_7_26)))
 (let ((?x10693 (* l_0_7_25 l_0_7_25)))
 (let ((?x10691 (* l_0_7_24 l_0_7_24)))
 (let ((?x10689 (* l_0_7_23 l_0_7_23)))
 (let ((?x10687 (* l_0_7_22 l_0_7_22)))
 (let ((?x10685 (* l_0_7_208 l_0_7_208)))
 (let ((?x10683 (* l_0_7_207 l_0_7_207)))
 (let ((?x10681 (* l_0_7_206 l_0_7_206)))
 (let ((?x10679 (* l_0_7_205 l_0_7_205)))
 (let ((?x10677 (* l_0_7_204 l_0_7_204)))
 (let ((?x10675 (* l_0_7_203 l_0_7_203)))
 (let ((?x10673 (* l_0_7_202 l_0_7_202)))
 (let ((?x10671 (* l_0_7_172 l_0_7_172)))
 (let ((?x10669 (* l_0_7_171 l_0_7_171)))
 (let ((?x10667 (* l_0_7_170 l_0_7_170)))
 (let ((?x10665 (* l_0_7_169 l_0_7_169)))
 (let ((?x10663 (* l_0_7_168 l_0_7_168)))
 (let ((?x10661 (* l_0_7_167 l_0_7_167)))
 (let ((?x10659 (* l_0_7_166 l_0_7_166)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8990 (* ?x8391 l_0_7_168)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8987 (* ?x8388 l_0_7_167)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x8984 (* ?x8385 l_0_7_166)))
 (let ((?x10635 (+ (* (* 1.0 l_0_7_112) l_0_7_130) (* (* 1.0 l_0_7_113) l_0_7_131))))
 (let ((?x10658 (- (- (- (+ ?x10635 (* (* 1.0 l_0_7_114) l_0_7_132)) ?x8984) ?x8987) ?x8990)))
 (let ((?x10672 (- (- (- (- (- (- (- ?x10658 ?x10659) ?x10661) ?x10663) ?x10665) ?x10667) ?x10669) ?x10671)))
 (let ((?x10686 (+ (+ (+ (+ (+ (+ (+ ?x10672 ?x10673) ?x10675) ?x10677) ?x10679) ?x10681) ?x10683) ?x10685)))
 (let ((?x10700 (- (- (- (- (- (- (- ?x10686 ?x10687) ?x10689) ?x10691) ?x10693) ?x10695) ?x10697) ?x10699)))
 (let ((?x10714 (+ (+ (+ (+ (+ (+ (+ ?x10700 ?x10701) ?x10703) ?x10705) ?x10707) ?x10709) ?x10711) ?x10713)))
 (let ((?x10718 (- (- ?x10714 (* (* 1.0 l_0_7_76) l_0_7_94)) (* (* 1.0 l_0_7_77) l_0_7_95))))
 (= (- ?x10718 (* (* 1.0 l_0_7_78) l_0_7_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10903 (* (* 2.0 l_0_7_64) l_0_7_71)))
 (let ((?x10900 (* (* 2.0 l_0_7_63) l_0_7_70)))
 (let ((?x10897 (* (* 2.0 l_0_7_62) l_0_7_69)))
 (let ((?x10894 (* (* 2.0 l_0_7_61) l_0_7_68)))
 (let ((?x10891 (* (* 2.0 l_0_7_60) l_0_7_67)))
 (let ((?x10888 (* (* 2.0 l_0_7_59) l_0_7_66)))
 (let ((?x10885 (* (* 2.0 l_0_7_58) l_0_7_65)))
 (let ((?x10882 (* (* 2.0 l_0_7_28) l_0_7_35)))
 (let ((?x10879 (* (* 2.0 l_0_7_27) l_0_7_34)))
 (let ((?x10876 (* (* 2.0 l_0_7_26) l_0_7_33)))
 (let ((?x10873 (* (* 2.0 l_0_7_25) l_0_7_32)))
 (let ((?x9004 (* 2.0 l_0_7_24)))
 (let ((?x10870 (* ?x9004 l_0_7_31)))
 (let ((?x8528 (* 2.0 l_0_7_23)))
 (let ((?x10868 (* ?x8528 l_0_7_30)))
 (let ((?x8999 (* 2.0 l_0_7_22)))
 (let ((?x10866 (* ?x8999 l_0_7_29)))
 (let ((?x10864 (* (* 2.0 l_0_7_208) l_0_7_215)))
 (let ((?x10861 (* (* 2.0 l_0_7_207) l_0_7_214)))
 (let ((?x10858 (* (* 2.0 l_0_7_206) l_0_7_213)))
 (let ((?x10855 (* (* 2.0 l_0_7_205) l_0_7_212)))
 (let ((?x10852 (* (* 2.0 l_0_7_204) l_0_7_211)))
 (let ((?x10849 (* (* 2.0 l_0_7_203) l_0_7_210)))
 (let ((?x10846 (* (* 2.0 l_0_7_202) l_0_7_209)))
 (let ((?x10843 (* (* 2.0 l_0_7_172) l_0_7_179)))
 (let ((?x10840 (* (* 2.0 l_0_7_171) l_0_7_178)))
 (let ((?x10837 (* (* 2.0 l_0_7_170) l_0_7_177)))
 (let ((?x10834 (* (* 2.0 l_0_7_169) l_0_7_176)))
 (let ((?x10831 (* (* 2.0 l_0_7_168) l_0_7_175)))
 (let ((?x10828 (* (* 2.0 l_0_7_167) l_0_7_174)))
 (let ((?x10825 (* (* 2.0 l_0_7_166) l_0_7_173)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8392 (* ?x8391 l_0_7_175)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8389 (* ?x8388 l_0_7_174)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x8386 (* ?x8385 l_0_7_173)))
 (let ((?x10811 (- (* (* (- 1.0) l_0_7_101) l_0_7_76) (* (* 1.0 l_0_7_102) l_0_7_77))))
 (let ((?x10816 (+ (- ?x10811 (* (* 1.0 l_0_7_103) l_0_7_78)) (* (* 1.0 l_0_7_112) l_0_7_137))))
 (let ((?x10820 (+ (+ ?x10816 (* (* 1.0 l_0_7_113) l_0_7_138)) (* (* 1.0 l_0_7_114) l_0_7_139))))
 (let ((?x10835 (- (- (- (- (- (- (- ?x10820 ?x8386) ?x8389) ?x8392) ?x10825) ?x10828) ?x10831) ?x10834)))
 (let ((?x10856 (+ (+ (+ (+ (- (- (- ?x10835 ?x10837) ?x10840) ?x10843) ?x10846) ?x10849) ?x10852) ?x10855)))
 (let ((?x10874 (- (- (- (- (+ (+ (+ ?x10856 ?x10858) ?x10861) ?x10864) ?x10866) ?x10868) ?x10870) ?x10873)))
 (let ((?x10895 (+ (+ (+ (+ (- (- (- ?x10874 ?x10876) ?x10879) ?x10882) ?x10885) ?x10888) ?x10891) ?x10894)))
 (= (+ (+ (+ ?x10895 ?x10897) ?x10900) ?x10903) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11107 (* l_0_7_72 l_0_7_72)))
 (let ((?x11105 (* l_0_7_71 l_0_7_71)))
 (let ((?x11103 (* l_0_7_70 l_0_7_70)))
 (let ((?x11101 (* l_0_7_69 l_0_7_69)))
 (let ((?x11099 (* l_0_7_68 l_0_7_68)))
 (let ((?x11097 (* l_0_7_67 l_0_7_67)))
 (let ((?x11095 (* l_0_7_66 l_0_7_66)))
 (let ((?x11093 (* l_0_7_65 l_0_7_65)))
 (let ((?x11091 (* l_0_7_36 l_0_7_36)))
 (let ((?x11089 (* l_0_7_35 l_0_7_35)))
 (let ((?x11087 (* l_0_7_34 l_0_7_34)))
 (let ((?x11085 (* l_0_7_33 l_0_7_33)))
 (let ((?x11083 (* l_0_7_32 l_0_7_32)))
 (let ((?x11081 (* l_0_7_31 l_0_7_31)))
 (let ((?x11079 (* l_0_7_30 l_0_7_30)))
 (let ((?x11077 (* l_0_7_29 l_0_7_29)))
 (let ((?x11075 (* l_0_7_216 l_0_7_216)))
 (let ((?x11073 (* l_0_7_215 l_0_7_215)))
 (let ((?x11071 (* l_0_7_214 l_0_7_214)))
 (let ((?x11069 (* l_0_7_213 l_0_7_213)))
 (let ((?x11067 (* l_0_7_212 l_0_7_212)))
 (let ((?x11065 (* l_0_7_211 l_0_7_211)))
 (let ((?x11063 (* l_0_7_210 l_0_7_210)))
 (let ((?x11061 (* l_0_7_209 l_0_7_209)))
 (let ((?x11059 (* l_0_7_180 l_0_7_180)))
 (let ((?x11057 (* l_0_7_179 l_0_7_179)))
 (let ((?x11055 (* l_0_7_178 l_0_7_178)))
 (let ((?x11053 (* l_0_7_177 l_0_7_177)))
 (let ((?x11032 (* l_0_7_176 l_0_7_176)))
 (let ((?x11028 (* l_0_7_175 l_0_7_175)))
 (let ((?x11030 (- (- (* (- l_0_7_173) l_0_7_173) (* l_0_7_174 l_0_7_174)) ?x11028)))
 (let ((?x11064 (+ (+ (- (- (- (- (- ?x11030 ?x11032) ?x11053) ?x11055) ?x11057) ?x11059) ?x11061) ?x11063)))
 (let ((?x11078 (- (+ (+ (+ (+ (+ (+ ?x11064 ?x11065) ?x11067) ?x11069) ?x11071) ?x11073) ?x11075) ?x11077)))
 (let ((?x11092 (- (- (- (- (- (- (- ?x11078 ?x11079) ?x11081) ?x11083) ?x11085) ?x11087) ?x11089) ?x11091)))
 (let ((?x11106 (+ (+ (+ (+ (+ (+ (+ ?x11092 ?x11093) ?x11095) ?x11097) ?x11099) ?x11101) ?x11103) ?x11105)))
 (= (+ ?x11106 ?x11107) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7825 (* l_0_7_37 l_0_7_37)))
 (let ((?x11180 (- (- (* l_0_7_1 l_0_7_1) (* (* 2.0 l_0_7_109) l_0_7_115)) ?x7825)))
 (= (+ ?x11180 (* (* 2.0 l_0_7_73) l_0_7_79)) 0.0))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7868 (* ?x7867 l_0_7_38)))
 (let ((?x11201 (- (* (* 2.0 l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_110) l_0_7_115))))
 (let ((?x11207 (- (- ?x11201 (* (* 2.0 l_0_7_111) l_0_7_116)) (* (* 2.0 l_0_7_289) l_0_7_295))))
 (let ((?x11214 (+ (+ (- ?x11207 ?x7868) (* (* 2.0 l_0_7_74) l_0_7_79)) (* (* 2.0 l_0_7_75) l_0_7_80))))
 (= ?x11214 0.0)))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7927 (* ?x7867 l_0_7_40)))
 (let ((?x11246 (- (* (* 2.0 l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_112) l_0_7_115))))
 (let ((?x11250 (- (- ?x11246 (* (* 2.0 l_0_7_113) l_0_7_116)) (* (* 2.0 l_0_7_114) l_0_7_117))))
 (let ((?x11257 (+ (+ (- ?x11250 ?x7927) (* (* 2.0 l_0_7_76) l_0_7_79)) (* (* 2.0 l_0_7_77) l_0_7_80))))
 (= (+ ?x11257 (* (* 2.0 l_0_7_78) l_0_7_81)) 0.0)))))))
(assert
 (let ((?x11302 (* l_0_7_82 l_0_7_82)))
 (let ((?x11300 (* l_0_7_81 l_0_7_81)))
 (let ((?x11298 (* l_0_7_80 l_0_7_80)))
 (let ((?x11296 (* l_0_7_79 l_0_7_79)))
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7950 (* ?x7867 l_0_7_43)))
 (let ((?x11293 (* l_0_7_118 l_0_7_118)))
 (let ((?x11291 (* l_0_7_117 l_0_7_117)))
 (let ((?x11289 (* l_0_7_116 l_0_7_116)))
 (let ((?x11290 (- (- (* (* 2.0 l_0_7_1) l_0_7_7) (* l_0_7_115 l_0_7_115)) ?x11289)))
 (let ((?x11303 (+ (+ (+ (+ (- (- (- ?x11290 ?x11291) ?x11293) ?x7950) ?x11296) ?x11298) ?x11300) ?x11302)))
 (= ?x11303 0.0)))))))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7973 (* ?x7867 l_0_7_47)))
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x11336 (* ?x11335 l_0_7_259)))
 (let ((?x11325 (- (* (* 2.0 l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_115) l_0_7_119))))
 (let ((?x11331 (- (- ?x11325 (* (* 2.0 l_0_7_116) l_0_7_120)) (* (* 2.0 l_0_7_117) l_0_7_121))))
 (let ((?x11341 (+ (- (- (- ?x11331 (* (* 2.0 l_0_7_118) l_0_7_122)) ?x11336) ?x7973) (* (* 2.0 l_0_7_79) l_0_7_83))))
 (let ((?x11347 (+ (+ ?x11341 (* (* 2.0 l_0_7_80) l_0_7_84)) (* (* 2.0 l_0_7_81) l_0_7_85))))
 (= (+ ?x11347 (* (* 2.0 l_0_7_82) l_0_7_86)) 0.0))))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x7996 (* ?x7867 l_0_7_52)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7948 (* ?x7861 l_0_7_187)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7941 (* ?x7858 l_0_7_151)))
 (let ((?x11398 (- (* (* 2.0 l_0_7_1) l_0_7_16) (* (* 2.0 l_0_7_115) l_0_7_124))))
 (let ((?x11402 (- (- ?x11398 (* (* 2.0 l_0_7_116) l_0_7_125)) (* (* 2.0 l_0_7_117) l_0_7_126))))
 (let ((?x11407 (- (- (+ (- ?x11402 (* (* 2.0 l_0_7_118) l_0_7_127)) ?x7941) ?x7948) ?x7996)))
 (let ((?x11411 (+ (+ ?x11407 (* (* 2.0 l_0_7_79) l_0_7_88)) (* (* 2.0 l_0_7_80) l_0_7_89))))
 (let ((?x11415 (+ (+ ?x11411 (* (* 2.0 l_0_7_81) l_0_7_90)) (* (* 2.0 l_0_7_82) l_0_7_91))))
 (= ?x11415 0.0)))))))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x8023 (* ?x7867 l_0_7_58)))
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x11336 (* ?x11335 l_0_7_259)))
 (let ((?x11462 (- (* (* 2.0 l_0_7_1) l_0_7_22) (* (* 2.0 l_0_7_115) l_0_7_130))))
 (let ((?x11466 (- (- ?x11462 (* (* 2.0 l_0_7_116) l_0_7_131)) (* (* 2.0 l_0_7_117) l_0_7_132))))
 (let ((?x11472 (+ (- (+ (- ?x11466 (* (* 2.0 l_0_7_118) l_0_7_133)) ?x11336) ?x8023) (* (* 2.0 l_0_7_79) l_0_7_94))))
 (let ((?x11476 (+ (+ ?x11472 (* (* 2.0 l_0_7_80) l_0_7_95)) (* (* 2.0 l_0_7_81) l_0_7_96))))
 (= (+ ?x11476 (* (* 2.0 l_0_7_82) l_0_7_97)) 0.0))))))))))
(assert
 (let ((?x7867 (* 2.0 l_0_7_37)))
 (let ((?x8061 (* ?x7867 l_0_7_65)))
 (let ((?x11520 (+ (* (* 2.0 l_0_7_1) l_0_7_29) (* (* 2.0 l_0_7_101) l_0_7_79))))
 (let ((?x11524 (+ (+ ?x11520 (* (* 2.0 l_0_7_102) l_0_7_80)) (* (* 2.0 l_0_7_103) l_0_7_81))))
 (let ((?x11529 (- (+ ?x11524 (* (* 2.0 l_0_7_104) l_0_7_82)) (* (* 2.0 l_0_7_115) l_0_7_137))))
 (let ((?x11533 (- (- ?x11529 (* (* 2.0 l_0_7_116) l_0_7_138)) (* (* 2.0 l_0_7_117) l_0_7_139))))
 (let ((?x11537 (- (- ?x11533 (* (* 2.0 l_0_7_118) l_0_7_140)) (* (* 2.0 l_0_7_217) l_0_7_223))))
 (= (- ?x11537 ?x8061) 0.0)))))))))
(assert
 (let ((?x7767 (* l_0_7_39 l_0_7_39)))
 (let ((?x7765 (* l_0_7_38 l_0_7_38)))
 (let ((?x7763 (* l_0_7_3 l_0_7_3)))
 (let ((?x11587 (- (- (* l_0_7_2 l_0_7_2) (* (* 2.0 l_0_7_290) l_0_7_295)) (* (* 2.0 l_0_7_291) l_0_7_296))))
 (= (- (- (+ ?x11587 ?x7763) ?x7765) ?x7767) 0.0))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8106 (* ?x8105 l_0_7_41)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8103 (* ?x8102 l_0_7_40)))
 (let ((?x8099 (* 2.0 l_0_7_3)))
 (let ((?x8100 (* ?x8099 l_0_7_5)))
 (let ((?x8090 (* 2.0 l_0_7_2)))
 (let ((?x8091 (* ?x8090 l_0_7_4)))
 (let ((?x11613 (- (- ?x8091 (* (* 2.0 l_0_7_292) l_0_7_295)) (* (* 2.0 l_0_7_293) l_0_7_296))))
 (let ((?x11618 (- (- (+ (- ?x11613 (* (* 2.0 l_0_7_294) l_0_7_297)) ?x8100) ?x8103) ?x8106)))
 (= ?x11618 0.0))))))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8183 (* ?x8105 l_0_7_44)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8181 (* ?x8102 l_0_7_43)))
 (let ((?x8099 (* 2.0 l_0_7_3)))
 (let ((?x8173 (* ?x8099 l_0_7_8)))
 (let ((?x11654 (* l_0_7_298 l_0_7_298)))
 (let ((?x11652 (* l_0_7_297 l_0_7_297)))
 (let ((?x11650 (* l_0_7_296 l_0_7_296)))
 (let ((?x11651 (- (- (* (* 2.0 l_0_7_2) l_0_7_7) (* l_0_7_295 l_0_7_295)) ?x11650)))
 (= (- (- (+ (- (- ?x11651 ?x11652) ?x11654) ?x8173) ?x8181) ?x8183) 0.0))))))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8309 (* ?x8105 l_0_7_48)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8307 (* ?x8102 l_0_7_47)))
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x11685 (* ?x11684 l_0_7_260)))
 (let ((?x11681 (* 2.0 l_0_7_254)))
 (let ((?x11682 (* ?x11681 l_0_7_259)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x8281 (* ?x8280 l_0_7_3)))
 (let ((?x11689 (- (- (- (+ (* (* 2.0 l_0_7_11) l_0_7_2) ?x8281) ?x11682) ?x11685) (* (* 2.0 l_0_7_295) l_0_7_299))))
 (let ((?x11695 (- (- ?x11689 (* (* 2.0 l_0_7_296) l_0_7_300)) (* (* 2.0 l_0_7_297) l_0_7_301))))
 (= (- (- (- ?x11695 (* (* 2.0 l_0_7_298) l_0_7_302)) ?x8307) ?x8309) 0.0))))))))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8421 (* ?x8105 l_0_7_53)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8419 (* ?x8102 l_0_7_52)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8157 (* ?x8087 l_0_7_188)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8155 (* ?x8084 l_0_7_187)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x8398 (* ?x8397 l_0_7_3)))
 (let ((?x8394 (* 2.0 l_0_7_16)))
 (let ((?x8395 (* ?x8394 l_0_7_2)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8146 (* ?x8076 l_0_7_152)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x11748 (* ?x8283 l_0_7_151)))
 (let ((?x11755 (- (- (- (+ (+ (+ ?x11748 ?x8146) ?x8395) ?x8398) ?x8155) ?x8157) (* (* 2.0 l_0_7_295) l_0_7_304))))
 (let ((?x11759 (- (- ?x11755 (* (* 2.0 l_0_7_296) l_0_7_305)) (* (* 2.0 l_0_7_297) l_0_7_306))))
 (= (- (- (- ?x11759 (* (* 2.0 l_0_7_298) l_0_7_307)) ?x8419) ?x8421) 0.0))))))))))))))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8536 (* ?x8105 l_0_7_59)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8534 (* ?x8102 l_0_7_58)))
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x11685 (* ?x11684 l_0_7_260)))
 (let ((?x11681 (* 2.0 l_0_7_254)))
 (let ((?x11682 (* ?x11681 l_0_7_259)))
 (let ((?x8528 (* 2.0 l_0_7_23)))
 (let ((?x8529 (* ?x8528 l_0_7_3)))
 (let ((?x8090 (* 2.0 l_0_7_2)))
 (let ((?x8520 (* ?x8090 l_0_7_22)))
 (let ((?x11809 (- (+ (+ (+ ?x8520 ?x8529) ?x11682) ?x11685) (* (* 2.0 l_0_7_295) l_0_7_310))))
 (let ((?x11813 (- (- ?x11809 (* (* 2.0 l_0_7_296) l_0_7_311)) (* (* 2.0 l_0_7_297) l_0_7_312))))
 (= (- (- (- ?x11813 (* (* 2.0 l_0_7_298) l_0_7_313)) ?x8534) ?x8536) 0.0))))))))))))))))
(assert
 (let ((?x8105 (* 2.0 l_0_7_39)))
 (let ((?x8640 (* ?x8105 l_0_7_66)))
 (let ((?x8102 (* 2.0 l_0_7_38)))
 (let ((?x8638 (* ?x8102 l_0_7_65)))
 (let ((?x8099 (* 2.0 l_0_7_3)))
 (let ((?x8636 (* ?x8099 l_0_7_30)))
 (let ((?x8090 (* 2.0 l_0_7_2)))
 (let ((?x8628 (* ?x8090 l_0_7_29)))
 (let ((?x11854 (- (- ?x8628 (* (* 2.0 l_0_7_218) l_0_7_223)) (* (* 2.0 l_0_7_219) l_0_7_224))))
 (let ((?x11858 (- (- ?x11854 (* (* 2.0 l_0_7_295) l_0_7_317)) (* (* 2.0 l_0_7_296) l_0_7_318))))
 (let ((?x11862 (- (- ?x11858 (* (* 2.0 l_0_7_297) l_0_7_319)) (* (* 2.0 l_0_7_298) l_0_7_320))))
 (= (- (- (+ ?x11862 ?x8636) ?x8638) ?x8640) 0.0)))))))))))))
(assert
 (let ((?x8717 (* l_0_7_6 l_0_7_6)))
 (let ((?x8715 (* l_0_7_5 l_0_7_5)))
 (let ((?x8713 (* l_0_7_42 l_0_7_42)))
 (let ((?x8711 (* l_0_7_41 l_0_7_41)))
 (let ((?x11915 (- (- (- (* l_0_7_4 l_0_7_4) (* l_0_7_40 l_0_7_40)) ?x8711) ?x8713)))
 (= (+ (+ ?x11915 ?x8715) ?x8717) 0.0)))))))
(assert
 (let ((?x8773 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x8770 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x8767 (* ?x8191 l_0_7_45)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x8765 (* ?x8188 l_0_7_44)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x8763 (* ?x8185 l_0_7_43)))
 (let ((?x8761 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (= (+ (+ (- (- (- ?x8761 ?x8763) ?x8765) ?x8767) ?x8770) ?x8773) 0.0)))))))))))
(assert
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x8853 (* ?x8191 l_0_7_49)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x8851 (* ?x8188 l_0_7_48)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x8849 (* ?x8185 l_0_7_47)))
 (let ((?x8304 (* 2.0 l_0_7_258)))
 (let ((?x11950 (* ?x8304 l_0_7_261)))
 (let ((?x8301 (* 2.0 l_0_7_257)))
 (let ((?x11948 (* ?x8301 l_0_7_260)))
 (let ((?x8298 (* 2.0 l_0_7_256)))
 (let ((?x11946 (* ?x8298 l_0_7_259)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x8835 (* ?x8834 l_0_7_6)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x8832 (* ?x8280 l_0_7_5)))
 (let ((?x11949 (- (- (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x8832) ?x8835) ?x11946) ?x11948)))
 (= (- (- (- (- ?x11949 ?x11950) ?x8849) ?x8851) ?x8853) 0.0)))))))))))))))))))
(assert
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x8925 (* ?x8191 l_0_7_54)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x8923 (* ?x8188 l_0_7_53)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x8921 (* ?x8185 l_0_7_52)))
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8758 (* ?x8410 l_0_7_189)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8756 (* ?x8407 l_0_7_188)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8754 (* ?x8404 l_0_7_187)))
 (let ((?x8912 (* 2.0 l_0_7_18)))
 (let ((?x8913 (* ?x8912 l_0_7_6)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x8910 (* ?x8397 l_0_7_5)))
 (let ((?x8394 (* 2.0 l_0_7_16)))
 (let ((?x8899 (* ?x8394 l_0_7_4)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8752 (* ?x8391 l_0_7_153)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8750 (* ?x8388 l_0_7_152)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x9423 (* ?x8385 l_0_7_151)))
 (let ((?x11994 (- (- (+ (+ (+ (+ (+ ?x9423 ?x8750) ?x8752) ?x8899) ?x8910) ?x8913) ?x8754) ?x8756)))
 (= (- (- (- (- ?x11994 ?x8758) ?x8921) ?x8923) ?x8925) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x8191 (* 2.0 l_0_7_42)))
 (let ((?x9011 (* ?x8191 l_0_7_60)))
 (let ((?x8188 (* 2.0 l_0_7_41)))
 (let ((?x9009 (* ?x8188 l_0_7_59)))
 (let ((?x8185 (* 2.0 l_0_7_40)))
 (let ((?x9007 (* ?x8185 l_0_7_58)))
 (let ((?x8304 (* 2.0 l_0_7_258)))
 (let ((?x11950 (* ?x8304 l_0_7_261)))
 (let ((?x8301 (* 2.0 l_0_7_257)))
 (let ((?x11948 (* ?x8301 l_0_7_260)))
 (let ((?x8298 (* 2.0 l_0_7_256)))
 (let ((?x11946 (* ?x8298 l_0_7_259)))
 (let ((?x9004 (* 2.0 l_0_7_24)))
 (let ((?x9005 (* ?x9004 l_0_7_6)))
 (let ((?x8528 (* 2.0 l_0_7_23)))
 (let ((?x9002 (* ?x8528 l_0_7_5)))
 (let ((?x8999 (* 2.0 l_0_7_22)))
 (let ((?x9000 (* ?x8999 l_0_7_4)))
 (let ((?x12029 (- (- (+ (+ (+ (+ (+ ?x9000 ?x9002) ?x9005) ?x11946) ?x11948) ?x11950) ?x9007) ?x9009)))
 (= (- ?x12029 ?x9011) 0.0)))))))))))))))))))))
(assert
 (let ((?x9171 (* l_0_7_9 l_0_7_9)))
 (let ((?x9169 (* l_0_7_8 l_0_7_8)))
 (let ((?x9167 (* l_0_7_7 l_0_7_7)))
 (let ((?x9165 (* l_0_7_46 l_0_7_46)))
 (let ((?x9163 (* l_0_7_45 l_0_7_45)))
 (let ((?x9161 (* l_0_7_44 l_0_7_44)))
 (let ((?x12045 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_43 l_0_7_43)) ?x9161) ?x9163)))
 (= (+ (+ (+ (- ?x12045 ?x9165) ?x9167) ?x9169) ?x9171) 0.0)))))))))
(assert
 (let ((?x9251 (* 2.0 l_0_7_46)))
 (let ((?x9252 (* ?x9251 l_0_7_50)))
 (let ((?x9248 (* 2.0 l_0_7_45)))
 (let ((?x9249 (* ?x9248 l_0_7_49)))
 (let ((?x9245 (* 2.0 l_0_7_44)))
 (let ((?x9246 (* ?x9245 l_0_7_48)))
 (let ((?x9242 (* 2.0 l_0_7_43)))
 (let ((?x9243 (* ?x9242 l_0_7_47)))
 (let ((?x12072 (* l_0_7_262 l_0_7_262)))
 (let ((?x12070 (* l_0_7_261 l_0_7_261)))
 (let ((?x12068 (* l_0_7_260 l_0_7_260)))
 (let ((?x12066 (* l_0_7_259 l_0_7_259)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x9216 (* ?x8834 l_0_7_9)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x9214 (* ?x8280 l_0_7_8)))
 (let ((?x9211 (* 2.0 l_0_7_11)))
 (let ((?x9212 (* ?x9211 l_0_7_7)))
 (let ((?x12067 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x9212) ?x9214) ?x9216) ?x12066)))
 (let ((?x12077 (- (- (- (- (- (- (- ?x12067 ?x12068) ?x12070) ?x12072) ?x9243) ?x9246) ?x9249) ?x9252)))
 (= ?x12077 0.0))))))))))))))))))))))
(assert
 (let ((?x9251 (* 2.0 l_0_7_46)))
 (let ((?x9347 (* ?x9251 l_0_7_55)))
 (let ((?x9248 (* 2.0 l_0_7_45)))
 (let ((?x9345 (* ?x9248 l_0_7_54)))
 (let ((?x9245 (* 2.0 l_0_7_44)))
 (let ((?x9343 (* ?x9245 l_0_7_53)))
 (let ((?x9242 (* 2.0 l_0_7_43)))
 (let ((?x9341 (* ?x9242 l_0_7_52)))
 (let ((?x9157 (* l_0_7_190 l_0_7_190)))
 (let ((?x9155 (* l_0_7_189 l_0_7_189)))
 (let ((?x9153 (* l_0_7_188 l_0_7_188)))
 (let ((?x9151 (* l_0_7_187 l_0_7_187)))
 (let ((?x8912 (* 2.0 l_0_7_18)))
 (let ((?x9331 (* ?x8912 l_0_7_9)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x9329 (* ?x8397 l_0_7_8)))
 (let ((?x8394 (* 2.0 l_0_7_16)))
 (let ((?x9327 (* ?x8394 l_0_7_7)))
 (let ((?x9149 (* l_0_7_154 l_0_7_154)))
 (let ((?x9147 (* l_0_7_153 l_0_7_153)))
 (let ((?x9145 (* l_0_7_152 l_0_7_152)))
 (let ((?x12111 (+ (+ (* (* 2.0 l_0_7_10) l_0_7_19) (* l_0_7_151 l_0_7_151)) ?x9145)))
 (let ((?x12118 (- (- (+ (+ (+ (+ (+ ?x12111 ?x9147) ?x9149) ?x9327) ?x9329) ?x9331) ?x9151) ?x9153)))
 (= (- (- (- (- (- (- ?x12118 ?x9155) ?x9157) ?x9341) ?x9343) ?x9345) ?x9347) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x9251 (* 2.0 l_0_7_46)))
 (let ((?x9455 (* ?x9251 l_0_7_61)))
 (let ((?x9248 (* 2.0 l_0_7_45)))
 (let ((?x9453 (* ?x9248 l_0_7_60)))
 (let ((?x9245 (* 2.0 l_0_7_44)))
 (let ((?x9451 (* ?x9245 l_0_7_59)))
 (let ((?x9242 (* 2.0 l_0_7_43)))
 (let ((?x9449 (* ?x9242 l_0_7_58)))
 (let ((?x12072 (* l_0_7_262 l_0_7_262)))
 (let ((?x12070 (* l_0_7_261 l_0_7_261)))
 (let ((?x12068 (* l_0_7_260 l_0_7_260)))
 (let ((?x12066 (* l_0_7_259 l_0_7_259)))
 (let ((?x9004 (* 2.0 l_0_7_24)))
 (let ((?x9447 (* ?x9004 l_0_7_9)))
 (let ((?x8528 (* 2.0 l_0_7_23)))
 (let ((?x9445 (* ?x8528 l_0_7_8)))
 (let ((?x8999 (* 2.0 l_0_7_22)))
 (let ((?x9443 (* ?x8999 l_0_7_7)))
 (let ((?x12156 (+ (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_25) ?x9443) ?x9445) ?x9447) ?x12066)))
 (let ((?x12163 (- (- (- (- (+ (+ (+ ?x12156 ?x12068) ?x12070) ?x12072) ?x9449) ?x9451) ?x9453) ?x9455)))
 (= ?x12163 0.0))))))))))))))))))))))
(assert
 (let ((?x9251 (* 2.0 l_0_7_46)))
 (let ((?x9595 (* ?x9251 l_0_7_68)))
 (let ((?x9248 (* 2.0 l_0_7_45)))
 (let ((?x9593 (* ?x9248 l_0_7_67)))
 (let ((?x9245 (* 2.0 l_0_7_44)))
 (let ((?x9591 (* ?x9245 l_0_7_66)))
 (let ((?x9242 (* 2.0 l_0_7_43)))
 (let ((?x9589 (* ?x9242 l_0_7_65)))
 (let ((?x8178 (* 2.0 l_0_7_31)))
 (let ((?x9587 (* ?x8178 l_0_7_9)))
 (let ((?x8175 (* 2.0 l_0_7_30)))
 (let ((?x9585 (* ?x8175 l_0_7_8)))
 (let ((?x8170 (* 2.0 l_0_7_29)))
 (let ((?x9583 (* ?x8170 l_0_7_7)))
 (let ((?x12186 (* l_0_7_226 l_0_7_226)))
 (let ((?x12184 (* l_0_7_225 l_0_7_225)))
 (let ((?x12182 (* l_0_7_224 l_0_7_224)))
 (let ((?x12183 (- (- (* (* 2.0 l_0_7_10) l_0_7_32) (* l_0_7_223 l_0_7_223)) ?x12182)))
 (let ((?x12192 (- (- (+ (+ (+ (- (- ?x12183 ?x12184) ?x12186) ?x9583) ?x9585) ?x9587) ?x9589) ?x9591)))
 (= (- (- ?x12192 ?x9593) ?x9595) 0.0)))))))))))))))))))))
(assert
 (let ((?x9704 (* l_0_7_51 l_0_7_51)))
 (let ((?x9702 (* l_0_7_50 l_0_7_50)))
 (let ((?x9700 (* l_0_7_49 l_0_7_49)))
 (let ((?x9698 (* l_0_7_48 l_0_7_48)))
 (let ((?x9696 (* l_0_7_47 l_0_7_47)))
 (let ((?x12238 (* 2.0 l_0_7_262)))
 (let ((?x12239 (* ?x12238 l_0_7_266)))
 (let ((?x12235 (* 2.0 l_0_7_261)))
 (let ((?x12236 (* ?x12235 l_0_7_265)))
 (let ((?x12232 (* 2.0 l_0_7_260)))
 (let ((?x12233 (* ?x12232 l_0_7_264)))
 (let ((?x12229 (* 2.0 l_0_7_259)))
 (let ((?x12230 (* ?x12229 l_0_7_263)))
 (let ((?x9674 (* l_0_7_15 l_0_7_15)))
 (let ((?x9672 (* l_0_7_14 l_0_7_14)))
 (let ((?x9659 (* l_0_7_13 l_0_7_13)))
 (let ((?x12227 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x9659) ?x9672)))
 (let ((?x12242 (- (- (- (- (- (- (+ ?x12227 ?x9674) ?x12230) ?x12233) ?x12236) ?x12239) ?x9696) ?x9698)))
 (= (- (- (- ?x12242 ?x9700) ?x9702) ?x9704) 0.0))))))))))))))))))))
(assert
 (let ((?x9802 (* 2.0 l_0_7_51)))
 (let ((?x9803 (* ?x9802 l_0_7_56)))
 (let ((?x9799 (* 2.0 l_0_7_50)))
 (let ((?x9800 (* ?x9799 l_0_7_55)))
 (let ((?x9796 (* 2.0 l_0_7_49)))
 (let ((?x9797 (* ?x9796 l_0_7_54)))
 (let ((?x9793 (* 2.0 l_0_7_48)))
 (let ((?x9794 (* ?x9793 l_0_7_53)))
 (let ((?x9790 (* 2.0 l_0_7_47)))
 (let ((?x9791 (* ?x9790 l_0_7_52)))
 (let ((?x12238 (* 2.0 l_0_7_262)))
 (let ((?x12302 (* ?x12238 l_0_7_271)))
 (let ((?x12235 (* 2.0 l_0_7_261)))
 (let ((?x12300 (* ?x12235 l_0_7_270)))
 (let ((?x12232 (* 2.0 l_0_7_260)))
 (let ((?x12298 (* ?x12232 l_0_7_269)))
 (let ((?x12229 (* 2.0 l_0_7_259)))
 (let ((?x12296 (* ?x12229 l_0_7_268)))
 (let ((?x9239 (* 2.0 l_0_7_190)))
 (let ((?x9240 (* ?x9239 l_0_7_194)))
 (let ((?x9236 (* 2.0 l_0_7_189)))
 (let ((?x9237 (* ?x9236 l_0_7_193)))
 (let ((?x9233 (* 2.0 l_0_7_188)))
 (let ((?x9234 (* ?x9233 l_0_7_192)))
 (let ((?x9230 (* 2.0 l_0_7_187)))
 (let ((?x9231 (* ?x9230 l_0_7_191)))
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9228 (* ?x9227 l_0_7_158)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9225 (* ?x9224 l_0_7_157)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9222 (* ?x9221 l_0_7_156)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9219 (* ?x9218 l_0_7_155)))
 (let ((?x9757 (* 2.0 l_0_7_15)))
 (let ((?x9758 (* ?x9757 l_0_7_20)))
 (let ((?x9754 (* 2.0 l_0_7_14)))
 (let ((?x9755 (* ?x9754 l_0_7_19)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x9752 (* ?x8834 l_0_7_18)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x9750 (* ?x8280 l_0_7_17)))
 (let ((?x12287 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_16) ?x9750) ?x9752) ?x9755) ?x9758)))
 (let ((?x12294 (- (- (- (+ (+ (+ (+ ?x12287 ?x9219) ?x9222) ?x9225) ?x9228) ?x9231) ?x9234) ?x9237)))
 (let ((?x12305 (- (- (- (- (- (- (- ?x12294 ?x9240) ?x12296) ?x12298) ?x12300) ?x12302) ?x9791) ?x9794)))
 (= (- (- (- ?x12305 ?x9797) ?x9800) ?x9803) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9802 (* 2.0 l_0_7_51)))
 (let ((?x9931 (* ?x9802 l_0_7_62)))
 (let ((?x9799 (* 2.0 l_0_7_50)))
 (let ((?x9929 (* ?x9799 l_0_7_61)))
 (let ((?x9796 (* 2.0 l_0_7_49)))
 (let ((?x9927 (* ?x9796 l_0_7_60)))
 (let ((?x9793 (* 2.0 l_0_7_48)))
 (let ((?x9925 (* ?x9793 l_0_7_59)))
 (let ((?x9790 (* 2.0 l_0_7_47)))
 (let ((?x9923 (* ?x9790 l_0_7_58)))
 (let ((?x12238 (* 2.0 l_0_7_262)))
 (let ((?x12387 (* ?x12238 l_0_7_277)))
 (let ((?x12239 (* ?x12238 l_0_7_266)))
 (let ((?x12235 (* 2.0 l_0_7_261)))
 (let ((?x12384 (* ?x12235 l_0_7_276)))
 (let ((?x12236 (* ?x12235 l_0_7_265)))
 (let ((?x12232 (* 2.0 l_0_7_260)))
 (let ((?x12381 (* ?x12232 l_0_7_275)))
 (let ((?x12233 (* ?x12232 l_0_7_264)))
 (let ((?x12229 (* 2.0 l_0_7_259)))
 (let ((?x12378 (* ?x12229 l_0_7_274)))
 (let ((?x12230 (* ?x12229 l_0_7_263)))
 (let ((?x9757 (* 2.0 l_0_7_15)))
 (let ((?x9900 (* ?x9757 l_0_7_26)))
 (let ((?x9754 (* 2.0 l_0_7_14)))
 (let ((?x9896 (* ?x9754 l_0_7_25)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x9881 (* ?x8834 l_0_7_24)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x9877 (* ?x8280 l_0_7_23)))
 (let ((?x12376 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_22) ?x9877) ?x9881) ?x9896) ?x9900)))
 (let ((?x12386 (+ (- (+ (- (+ (- (+ ?x12376 ?x12230) ?x12378) ?x12233) ?x12381) ?x12236) ?x12384) ?x12239)))
 (= (- (- (- (- (- (- ?x12386 ?x12387) ?x9923) ?x9925) ?x9927) ?x9929) ?x9931) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9802 (* 2.0 l_0_7_51)))
 (let ((?x10092 (* ?x9802 l_0_7_69)))
 (let ((?x9799 (* 2.0 l_0_7_50)))
 (let ((?x10090 (* ?x9799 l_0_7_68)))
 (let ((?x9796 (* 2.0 l_0_7_49)))
 (let ((?x10088 (* ?x9796 l_0_7_67)))
 (let ((?x9793 (* 2.0 l_0_7_48)))
 (let ((?x10086 (* ?x9793 l_0_7_66)))
 (let ((?x9790 (* 2.0 l_0_7_47)))
 (let ((?x10084 (* ?x9790 l_0_7_65)))
 (let ((?x12238 (* 2.0 l_0_7_262)))
 (let ((?x12462 (* ?x12238 l_0_7_284)))
 (let ((?x12235 (* 2.0 l_0_7_261)))
 (let ((?x12460 (* ?x12235 l_0_7_283)))
 (let ((?x12232 (* 2.0 l_0_7_260)))
 (let ((?x12458 (* ?x12232 l_0_7_282)))
 (let ((?x12229 (* 2.0 l_0_7_259)))
 (let ((?x12456 (* ?x12229 l_0_7_281)))
 (let ((?x9757 (* 2.0 l_0_7_15)))
 (let ((?x10062 (* ?x9757 l_0_7_33)))
 (let ((?x9754 (* 2.0 l_0_7_14)))
 (let ((?x10060 (* ?x9754 l_0_7_32)))
 (let ((?x8834 (* 2.0 l_0_7_13)))
 (let ((?x10058 (* ?x8834 l_0_7_31)))
 (let ((?x8280 (* 2.0 l_0_7_12)))
 (let ((?x10056 (* ?x8280 l_0_7_30)))
 (let ((?x12443 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_29) ?x10056) ?x10058) ?x10060) ?x10062)))
 (let ((?x12449 (- (- ?x12443 (* (* 2.0 l_0_7_223) l_0_7_227)) (* (* 2.0 l_0_7_224) l_0_7_228))))
 (let ((?x12455 (- (- ?x12449 (* (* 2.0 l_0_7_225) l_0_7_229)) (* (* 2.0 l_0_7_226) l_0_7_230))))
 (let ((?x12466 (- (- (- (- (- (- (- ?x12455 ?x12456) ?x12458) ?x12460) ?x12462) ?x10084) ?x10086) ?x10088)))
 (= (- (- ?x12466 ?x10090) ?x10092) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x10220 (* l_0_7_57 l_0_7_57)))
 (let ((?x10218 (* l_0_7_56 l_0_7_56)))
 (let ((?x10216 (* l_0_7_55 l_0_7_55)))
 (let ((?x10214 (* l_0_7_54 l_0_7_54)))
 (let ((?x10212 (* l_0_7_53 l_0_7_53)))
 (let ((?x10210 (* l_0_7_52 l_0_7_52)))
 (let ((?x10208 (* l_0_7_21 l_0_7_21)))
 (let ((?x10202 (* l_0_7_20 l_0_7_20)))
 (let ((?x9239 (* 2.0 l_0_7_190)))
 (let ((?x9339 (* ?x9239 l_0_7_199)))
 (let ((?x10192 (* l_0_7_19 l_0_7_19)))
 (let ((?x9236 (* 2.0 l_0_7_189)))
 (let ((?x9337 (* ?x9236 l_0_7_198)))
 (let ((?x9233 (* 2.0 l_0_7_188)))
 (let ((?x9335 (* ?x9233 l_0_7_197)))
 (let ((?x9230 (* 2.0 l_0_7_187)))
 (let ((?x9333 (* ?x9230 l_0_7_196)))
 (let ((?x10190 (* l_0_7_18 l_0_7_18)))
 (let ((?x10188 (* l_0_7_17 l_0_7_17)))
 (let ((?x10224 (* l_0_7_16 l_0_7_16)))
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9314 (* ?x9227 l_0_7_163)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9310 (* ?x9224 l_0_7_162)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9306 (* ?x9221 l_0_7_161)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9302 (* ?x9218 l_0_7_160)))
 (let ((?x12546 (- (+ (+ (+ (+ (+ (+ ?x9302 ?x9306) ?x9310) ?x9314) ?x10224) ?x10188) ?x10190) ?x9333)))
 (let ((?x12553 (- (+ (+ (- (+ (- (- ?x12546 ?x9335) ?x9337) ?x10192) ?x9339) ?x10202) ?x10208) ?x10210)))
 (= (- (- (- (- (- ?x12553 ?x10212) ?x10214) ?x10216) ?x10218) ?x10220) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x10350 (* 2.0 l_0_7_57)))
 (let ((?x10351 (* ?x10350 l_0_7_63)))
 (let ((?x10347 (* 2.0 l_0_7_56)))
 (let ((?x10348 (* ?x10347 l_0_7_62)))
 (let ((?x10344 (* 2.0 l_0_7_55)))
 (let ((?x10345 (* ?x10344 l_0_7_61)))
 (let ((?x10341 (* 2.0 l_0_7_54)))
 (let ((?x10342 (* ?x10341 l_0_7_60)))
 (let ((?x10338 (* 2.0 l_0_7_53)))
 (let ((?x10339 (* ?x10338 l_0_7_59)))
 (let ((?x10335 (* 2.0 l_0_7_52)))
 (let ((?x10336 (* ?x10335 l_0_7_58)))
 (let ((?x12238 (* 2.0 l_0_7_262)))
 (let ((?x12302 (* ?x12238 l_0_7_271)))
 (let ((?x12235 (* 2.0 l_0_7_261)))
 (let ((?x12300 (* ?x12235 l_0_7_270)))
 (let ((?x12232 (* 2.0 l_0_7_260)))
 (let ((?x12298 (* ?x12232 l_0_7_269)))
 (let ((?x12229 (* 2.0 l_0_7_259)))
 (let ((?x12296 (* ?x12229 l_0_7_268)))
 (let ((?x10332 (* 2.0 l_0_7_21)))
 (let ((?x10333 (* ?x10332 l_0_7_27)))
 (let ((?x10323 (* 2.0 l_0_7_20)))
 (let ((?x10324 (* ?x10323 l_0_7_26)))
 (let ((?x9239 (* 2.0 l_0_7_190)))
 (let ((?x9441 (* ?x9239 l_0_7_205)))
 (let ((?x10308 (* 2.0 l_0_7_19)))
 (let ((?x10309 (* ?x10308 l_0_7_25)))
 (let ((?x9236 (* 2.0 l_0_7_189)))
 (let ((?x9439 (* ?x9236 l_0_7_204)))
 (let ((?x9233 (* 2.0 l_0_7_188)))
 (let ((?x9437 (* ?x9233 l_0_7_203)))
 (let ((?x9230 (* 2.0 l_0_7_187)))
 (let ((?x9435 (* ?x9230 l_0_7_202)))
 (let ((?x8912 (* 2.0 l_0_7_18)))
 (let ((?x10306 (* ?x8912 l_0_7_24)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x10304 (* ?x8397 l_0_7_23)))
 (let ((?x8394 (* 2.0 l_0_7_16)))
 (let ((?x10284 (* ?x8394 l_0_7_22)))
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9433 (* ?x9227 l_0_7_169)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9431 (* ?x9224 l_0_7_168)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9429 (* ?x9221 l_0_7_167)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9427 (* ?x9218 l_0_7_166)))
 (let ((?x12598 (- (+ (+ (+ (+ (+ (+ ?x9427 ?x9429) ?x9431) ?x9433) ?x10284) ?x10304) ?x10306) ?x9435)))
 (let ((?x12605 (+ (+ (+ (- (+ (- (- ?x12598 ?x9437) ?x9439) ?x10309) ?x9441) ?x10324) ?x10333) ?x12296)))
 (let ((?x12612 (- (- (- (- (+ (+ (+ ?x12605 ?x12298) ?x12300) ?x12302) ?x10336) ?x10339) ?x10342) ?x10345)))
 (= (- (- ?x12612 ?x10348) ?x10351) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10350 (* 2.0 l_0_7_57)))
 (let ((?x10545 (* ?x10350 l_0_7_70)))
 (let ((?x10347 (* 2.0 l_0_7_56)))
 (let ((?x10543 (* ?x10347 l_0_7_69)))
 (let ((?x10344 (* 2.0 l_0_7_55)))
 (let ((?x10541 (* ?x10344 l_0_7_68)))
 (let ((?x10341 (* 2.0 l_0_7_54)))
 (let ((?x10539 (* ?x10341 l_0_7_67)))
 (let ((?x10338 (* 2.0 l_0_7_53)))
 (let ((?x10537 (* ?x10338 l_0_7_66)))
 (let ((?x10335 (* 2.0 l_0_7_52)))
 (let ((?x10535 (* ?x10335 l_0_7_65)))
 (let ((?x10332 (* 2.0 l_0_7_21)))
 (let ((?x10533 (* ?x10332 l_0_7_34)))
 (let ((?x10323 (* 2.0 l_0_7_20)))
 (let ((?x10527 (* ?x10323 l_0_7_33)))
 (let ((?x9239 (* 2.0 l_0_7_190)))
 (let ((?x9581 (* ?x9239 l_0_7_212)))
 (let ((?x10308 (* 2.0 l_0_7_19)))
 (let ((?x10517 (* ?x10308 l_0_7_32)))
 (let ((?x9236 (* 2.0 l_0_7_189)))
 (let ((?x9579 (* ?x9236 l_0_7_211)))
 (let ((?x9233 (* 2.0 l_0_7_188)))
 (let ((?x9577 (* ?x9233 l_0_7_210)))
 (let ((?x9230 (* 2.0 l_0_7_187)))
 (let ((?x9575 (* ?x9230 l_0_7_209)))
 (let ((?x8912 (* 2.0 l_0_7_18)))
 (let ((?x10515 (* ?x8912 l_0_7_31)))
 (let ((?x8397 (* 2.0 l_0_7_17)))
 (let ((?x10513 (* ?x8397 l_0_7_30)))
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9573 (* ?x9227 l_0_7_176)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9571 (* ?x9224 l_0_7_175)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9569 (* ?x9221 l_0_7_174)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9567 (* ?x9218 l_0_7_173)))
 (let ((?x12654 (+ (+ (+ (+ ?x9567 ?x9569) ?x9571) ?x9573) (* (* 2.0 l_0_7_16) l_0_7_29))))
 (let ((?x12661 (- (+ (- (- (- (+ (+ ?x12654 ?x10513) ?x10515) ?x9575) ?x9577) ?x9579) ?x10517) ?x9581)))
 (let ((?x12667 (- (- (+ (+ ?x12661 ?x10527) ?x10533) (* (* 2.0 l_0_7_223) l_0_7_232)) (* (* 2.0 l_0_7_224) l_0_7_233))))
 (let ((?x12671 (- (- ?x12667 (* (* 2.0 l_0_7_225) l_0_7_234)) (* (* 2.0 l_0_7_226) l_0_7_235))))
 (= (- (- (- (- (- (- ?x12671 ?x10535) ?x10537) ?x10539) ?x10541) ?x10543) ?x10545) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10713 (* l_0_7_64 l_0_7_64)))
 (let ((?x10711 (* l_0_7_63 l_0_7_63)))
 (let ((?x10709 (* l_0_7_62 l_0_7_62)))
 (let ((?x10707 (* l_0_7_61 l_0_7_61)))
 (let ((?x10705 (* l_0_7_60 l_0_7_60)))
 (let ((?x10703 (* l_0_7_59 l_0_7_59)))
 (let ((?x10701 (* l_0_7_58 l_0_7_58)))
 (let ((?x10699 (* l_0_7_28 l_0_7_28)))
 (let ((?x10697 (* l_0_7_27 l_0_7_27)))
 (let ((?x12238 (* 2.0 l_0_7_262)))
 (let ((?x12387 (* ?x12238 l_0_7_277)))
 (let ((?x12235 (* 2.0 l_0_7_261)))
 (let ((?x12384 (* ?x12235 l_0_7_276)))
 (let ((?x12232 (* 2.0 l_0_7_260)))
 (let ((?x12381 (* ?x12232 l_0_7_275)))
 (let ((?x10695 (* l_0_7_26 l_0_7_26)))
 (let ((?x12229 (* 2.0 l_0_7_259)))
 (let ((?x12378 (* ?x12229 l_0_7_274)))
 (let ((?x10693 (* l_0_7_25 l_0_7_25)))
 (let ((?x10691 (* l_0_7_24 l_0_7_24)))
 (let ((?x12745 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x10691) ?x10693)))
 (let ((?x12752 (+ (+ (+ (+ (+ (+ (+ ?x12745 ?x12378) ?x10695) ?x12381) ?x12384) ?x12387) ?x10697) ?x10699)))
 (let ((?x12759 (- (- (- (- (- (- (- ?x12752 ?x10701) ?x10703) ?x10705) ?x10707) ?x10709) ?x10711) ?x10713)))
 (= ?x12759 0.0)))))))))))))))))))))))))
(assert
 (let ((?x10903 (* (* 2.0 l_0_7_64) l_0_7_71)))
 (let ((?x10900 (* (* 2.0 l_0_7_63) l_0_7_70)))
 (let ((?x10897 (* (* 2.0 l_0_7_62) l_0_7_69)))
 (let ((?x10894 (* (* 2.0 l_0_7_61) l_0_7_68)))
 (let ((?x10891 (* (* 2.0 l_0_7_60) l_0_7_67)))
 (let ((?x10888 (* (* 2.0 l_0_7_59) l_0_7_66)))
 (let ((?x10885 (* (* 2.0 l_0_7_58) l_0_7_65)))
 (let ((?x10882 (* (* 2.0 l_0_7_28) l_0_7_35)))
 (let ((?x10879 (* (* 2.0 l_0_7_27) l_0_7_34)))
 (let ((?x12238 (* 2.0 l_0_7_262)))
 (let ((?x12462 (* ?x12238 l_0_7_284)))
 (let ((?x12235 (* 2.0 l_0_7_261)))
 (let ((?x12460 (* ?x12235 l_0_7_283)))
 (let ((?x12232 (* 2.0 l_0_7_260)))
 (let ((?x12458 (* ?x12232 l_0_7_282)))
 (let ((?x10876 (* (* 2.0 l_0_7_26) l_0_7_33)))
 (let ((?x12229 (* 2.0 l_0_7_259)))
 (let ((?x12456 (* ?x12229 l_0_7_281)))
 (let ((?x10873 (* (* 2.0 l_0_7_25) l_0_7_32)))
 (let ((?x9004 (* 2.0 l_0_7_24)))
 (let ((?x10870 (* ?x9004 l_0_7_31)))
 (let ((?x8528 (* 2.0 l_0_7_23)))
 (let ((?x10868 (* ?x8528 l_0_7_30)))
 (let ((?x8999 (* 2.0 l_0_7_22)))
 (let ((?x10866 (* ?x8999 l_0_7_29)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8146 (* ?x8076 l_0_7_152)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x11748 (* ?x8283 l_0_7_151)))
 (let ((?x12779 (+ (* (* 1.0 l_0_7_110) l_0_7_115) (* (* 1.0 l_0_7_111) l_0_7_116))))
 (let ((?x12784 (- (+ (- (- ?x12779 ?x11748) ?x8146) ?x10866) (* (* 2.0 l_0_7_223) l_0_7_238))))
 (let ((?x12788 (- (- ?x12784 (* (* 2.0 l_0_7_224) l_0_7_239)) (* (* 2.0 l_0_7_225) l_0_7_240))))
 (let ((?x12793 (+ (+ (+ (- ?x12788 (* (* 2.0 l_0_7_226) l_0_7_241)) ?x10868) ?x10870) ?x10873)))
 (let ((?x12800 (+ (+ (+ (+ (+ (+ (+ ?x12793 ?x12456) ?x10876) ?x12458) ?x12460) ?x12462) ?x10879) ?x10882)))
 (let ((?x12807 (- (- (- (- (- (- (- ?x12800 ?x10885) ?x10888) ?x10891) ?x10894) ?x10897) ?x10900) ?x10903)))
 (let ((?x12811 (- (- ?x12807 (* (* 1.0 l_0_7_74) l_0_7_79)) (* (* 1.0 l_0_7_75) l_0_7_80))))
 (= ?x12811 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11107 (* l_0_7_72 l_0_7_72)))
 (let ((?x11105 (* l_0_7_71 l_0_7_71)))
 (let ((?x11103 (* l_0_7_70 l_0_7_70)))
 (let ((?x11101 (* l_0_7_69 l_0_7_69)))
 (let ((?x11099 (* l_0_7_68 l_0_7_68)))
 (let ((?x11097 (* l_0_7_67 l_0_7_67)))
 (let ((?x11095 (* l_0_7_66 l_0_7_66)))
 (let ((?x11093 (* l_0_7_65 l_0_7_65)))
 (let ((?x11091 (* l_0_7_36 l_0_7_36)))
 (let ((?x11089 (* l_0_7_35 l_0_7_35)))
 (let ((?x11087 (* l_0_7_34 l_0_7_34)))
 (let ((?x11085 (* l_0_7_33 l_0_7_33)))
 (let ((?x11083 (* l_0_7_32 l_0_7_32)))
 (let ((?x11081 (* l_0_7_31 l_0_7_31)))
 (let ((?x11079 (* l_0_7_30 l_0_7_30)))
 (let ((?x11077 (* l_0_7_29 l_0_7_29)))
 (let ((?x12886 (- (* (* (- 2.0) l_0_7_223) l_0_7_245) (* (* 2.0 l_0_7_224) l_0_7_246))))
 (let ((?x12890 (- (- ?x12886 (* (* 2.0 l_0_7_225) l_0_7_247)) (* (* 2.0 l_0_7_226) l_0_7_248))))
 (let ((?x12897 (+ (+ (+ (+ (+ (+ (+ ?x12890 ?x11077) ?x11079) ?x11081) ?x11083) ?x11085) ?x11087) ?x11089)))
 (let ((?x12904 (- (- (- (- (- (- (+ ?x12897 ?x11091) ?x11093) ?x11095) ?x11097) ?x11099) ?x11101) ?x11103)))
 (= (- (- ?x12904 ?x11105) ?x11107) 0.0))))))))))))))))))))))
(assert
 (let ((?x12951 (- (- (* (/ 1.0 2.0) (* l_0_7_109 l_0_7_109)) (* l_0_7_145 l_0_7_145)) (* (* (/ 1.0 2.0) l_0_7_73) l_0_7_73))))
 (= ?x12951 0.0)))
(assert
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x13006 (* ?x11335 l_0_7_281)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7859 (* ?x7858 l_0_7_146)))
 (let ((?x12967 (+ (* (* 2.0 l_0_7_100) l_0_7_107) (* (* 2.0 l_0_7_101) l_0_7_94))))
 (let ((?x12971 (+ (+ ?x12967 (* (* 2.0 l_0_7_102) l_0_7_95)) (* (* 2.0 l_0_7_103) l_0_7_96))))
 (let ((?x12976 (+ (+ ?x12971 (* (* 2.0 l_0_7_104) l_0_7_97)) (* (* 2.0 l_0_7_105) l_0_7_98))))
 (let ((?x12981 (+ (+ ?x12976 (* (* 2.0 l_0_7_106) l_0_7_99)) (* (* 1.0 l_0_7_109) l_0_7_110))))
 (let ((?x12987 (- (- ?x12981 (* (* 2.0 l_0_7_130) l_0_7_137)) (* (* 2.0 l_0_7_131) l_0_7_138))))
 (let ((?x12993 (- (- ?x12987 (* (* 2.0 l_0_7_132) l_0_7_139)) (* (* 2.0 l_0_7_133) l_0_7_140))))
 (let ((?x12999 (- (- ?x12993 (* (* 2.0 l_0_7_134) l_0_7_141)) (* (* 2.0 l_0_7_135) l_0_7_142))))
 (let ((?x13005 (- (- (- ?x12999 (* (* 2.0 l_0_7_136) l_0_7_143)) ?x7859) (* (* 2.0 l_0_7_217) l_0_7_238))))
 (= (- (+ ?x13005 ?x13006) (* (* 1.0 l_0_7_73) l_0_7_74)) 0.0))))))))))))))
(assert
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7941 (* ?x7858 l_0_7_151)))
 (let ((?x13098 (- (- (* (* 1.0 l_0_7_109) l_0_7_115) ?x7941) (* (* 1.0 l_0_7_73) l_0_7_79))))
 (= ?x13098 0.0)))))
(assert
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7964 (* ?x7858 l_0_7_155)))
 (let ((?x13111 (- (- (* (* 1.0 l_0_7_109) l_0_7_119) ?x7964) (* (* 1.0 l_0_7_73) l_0_7_83))))
 (= ?x13111 0.0)))))
(assert
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7987 (* ?x7858 l_0_7_160)))
 (let ((?x13126 (- (- (* (* 1.0 l_0_7_109) l_0_7_124) ?x7987) (* (* 1.0 l_0_7_73) l_0_7_88))))
 (= ?x13126 0.0)))))
(assert
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x8019 (* ?x7858 l_0_7_166)))
 (let ((?x13141 (- (- (* (* 1.0 l_0_7_109) l_0_7_130) ?x8019) (* (* 1.0 l_0_7_73) l_0_7_94))))
 (= ?x13141 0.0)))))
(assert
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x8057 (* ?x7858 l_0_7_173)))
 (let ((?x13155 (+ (* (* (- 1.0) l_0_7_101) l_0_7_73) (* (* 1.0 l_0_7_109) l_0_7_137))))
 (= (- ?x13155 ?x8057) 0.0)))))
(assert
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x13180 (* ?x11684 l_0_7_282)))
 (let ((?x11681 (* 2.0 l_0_7_254)))
 (let ((?x13178 (* ?x11681 l_0_7_281)))
 (let ((?x7706 (* l_0_7_147 l_0_7_147)))
 (let ((?x7705 (* l_0_7_146 l_0_7_146)))
 (let ((?x13171 (+ (* (/ 1.0 2.0) (* l_0_7_110 l_0_7_110)) (* (/ 1.0 2.0) (* l_0_7_111 l_0_7_111)))))
 (let ((?x13177 (- (- (- (- ?x13171 ?x7705) ?x7706) (* (* 2.0 l_0_7_218) l_0_7_238)) (* (* 2.0 l_0_7_219) l_0_7_239))))
 (let ((?x13187 (- (- (+ (+ ?x13177 ?x13178) ?x13180) (* (* 2.0 l_0_7_310) l_0_7_317)) (* (* 2.0 l_0_7_311) l_0_7_318))))
 (let ((?x13193 (- (- ?x13187 (* (* 2.0 l_0_7_312) l_0_7_319)) (* (* 2.0 l_0_7_313) l_0_7_320))))
 (let ((?x13199 (- (- ?x13193 (* (* 2.0 l_0_7_314) l_0_7_321)) (* (* 2.0 l_0_7_315) l_0_7_322))))
 (let ((?x13205 (- (- ?x13199 (* (* 2.0 l_0_7_316) l_0_7_323)) (* (* (/ 1.0 2.0) l_0_7_74) l_0_7_74))))
 (= (- ?x13205 (* (* (/ 1.0 2.0) l_0_7_75) l_0_7_75)) 0.0))))))))))))))
(assert
 (let ((?x13345 (* (* 2.0 l_0_7_280) l_0_7_287)))
 (let ((?x13342 (* (* 2.0 l_0_7_279) l_0_7_286)))
 (let ((?x13339 (* (* 2.0 l_0_7_278) l_0_7_285)))
 (let ((?x13336 (* (* 2.0 l_0_7_277) l_0_7_284)))
 (let ((?x13333 (* (* 2.0 l_0_7_276) l_0_7_283)))
 (let ((?x13330 (* (* 2.0 l_0_7_275) l_0_7_282)))
 (let ((?x13327 (* (* 2.0 l_0_7_274) l_0_7_281)))
 (let ((?x13323 (* 2.0 l_0_7_267)))
 (let ((?x13324 (* ?x13323 l_0_7_285)))
 (let ((?x13320 (* 2.0 l_0_7_266)))
 (let ((?x13321 (* ?x13320 l_0_7_284)))
 (let ((?x13317 (* 2.0 l_0_7_265)))
 (let ((?x13318 (* ?x13317 l_0_7_283)))
 (let ((?x13314 (* 2.0 l_0_7_264)))
 (let ((?x13315 (* ?x13314 l_0_7_282)))
 (let ((?x13311 (* 2.0 l_0_7_263)))
 (let ((?x13312 (* ?x13311 l_0_7_281)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8286 (* ?x8076 l_0_7_156)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x8284 (* ?x8283 l_0_7_155)))
 (let ((?x13293 (+ (* (* 1.0 l_0_7_110) l_0_7_119) (* (* 1.0 l_0_7_111) l_0_7_120))))
 (let ((?x13301 (- (- (- (- ?x13293 ?x8284) ?x8286) (* (* 2.0 l_0_7_227) l_0_7_238)) (* (* 2.0 l_0_7_228) l_0_7_239))))
 (let ((?x13307 (- (- ?x13301 (* (* 2.0 l_0_7_229) l_0_7_240)) (* (* 2.0 l_0_7_230) l_0_7_241))))
 (let ((?x13319 (+ (+ (+ (- ?x13307 (* (* 2.0 l_0_7_231) l_0_7_242)) ?x13312) ?x13315) ?x13318)))
 (let ((?x13340 (- (- (- (- (- (+ (+ ?x13319 ?x13321) ?x13324) ?x13327) ?x13330) ?x13333) ?x13336) ?x13339)))
 (let ((?x13350 (- (- (- (- ?x13340 ?x13342) ?x13345) (* (* 1.0 l_0_7_74) l_0_7_83)) (* (* 1.0 l_0_7_75) l_0_7_84))))
 (= ?x13350 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x13512 (* 2.0 l_0_7_273)))
 (let ((?x13513 (* ?x13512 l_0_7_286)))
 (let ((?x13509 (* 2.0 l_0_7_272)))
 (let ((?x13510 (* ?x13509 l_0_7_285)))
 (let ((?x13506 (* 2.0 l_0_7_271)))
 (let ((?x13507 (* ?x13506 l_0_7_284)))
 (let ((?x13503 (* 2.0 l_0_7_270)))
 (let ((?x13504 (* ?x13503 l_0_7_283)))
 (let ((?x13500 (* 2.0 l_0_7_269)))
 (let ((?x13501 (* ?x13500 l_0_7_282)))
 (let ((?x13497 (* 2.0 l_0_7_268)))
 (let ((?x13498 (* ?x13497 l_0_7_281)))
 (let ((?x10864 (* (* 2.0 l_0_7_208) l_0_7_215)))
 (let ((?x10861 (* (* 2.0 l_0_7_207) l_0_7_214)))
 (let ((?x10858 (* (* 2.0 l_0_7_206) l_0_7_213)))
 (let ((?x10855 (* (* 2.0 l_0_7_205) l_0_7_212)))
 (let ((?x10852 (* (* 2.0 l_0_7_204) l_0_7_211)))
 (let ((?x10849 (* (* 2.0 l_0_7_203) l_0_7_210)))
 (let ((?x10846 (* (* 2.0 l_0_7_202) l_0_7_209)))
 (let ((?x10843 (* (* 2.0 l_0_7_172) l_0_7_179)))
 (let ((?x10840 (* (* 2.0 l_0_7_171) l_0_7_178)))
 (let ((?x10837 (* (* 2.0 l_0_7_170) l_0_7_177)))
 (let ((?x10834 (* (* 2.0 l_0_7_169) l_0_7_176)))
 (let ((?x10831 (* (* 2.0 l_0_7_168) l_0_7_175)))
 (let ((?x10828 (* (* 2.0 l_0_7_167) l_0_7_174)))
 (let ((?x10825 (* (* 2.0 l_0_7_166) l_0_7_173)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8376 (* ?x8076 l_0_7_161)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x13462 (* ?x8283 l_0_7_160)))
 (let ((?x13461 (+ (* (* 1.0 l_0_7_110) l_0_7_124) (* (* 1.0 l_0_7_111) l_0_7_125))))
 (let ((?x13469 (+ (+ (+ (+ (+ (- (- ?x13461 ?x13462) ?x8376) ?x10825) ?x10828) ?x10831) ?x10834) ?x10837)))
 (let ((?x13476 (- (- (- (- (- (+ (+ ?x13469 ?x10840) ?x10843) ?x10846) ?x10849) ?x10852) ?x10855) ?x10858)))
 (let ((?x13484 (- (- (- (- ?x13476 ?x10861) ?x10864) (* (* 2.0 l_0_7_232) l_0_7_238)) (* (* 2.0 l_0_7_233) l_0_7_239))))
 (let ((?x13490 (- (- ?x13484 (* (* 2.0 l_0_7_234) l_0_7_240)) (* (* 2.0 l_0_7_235) l_0_7_241))))
 (let ((?x13496 (- (- ?x13490 (* (* 2.0 l_0_7_236) l_0_7_242)) (* (* 2.0 l_0_7_237) l_0_7_243))))
 (let ((?x13516 (- (+ (+ (+ (+ (+ (+ ?x13496 ?x13498) ?x13501) ?x13504) ?x13507) ?x13510) ?x13513) (* (* 1.0 l_0_7_74) l_0_7_88))))
 (= (- ?x13516 (* (* 1.0 l_0_7_75) l_0_7_89)) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13345 (* (* 2.0 l_0_7_280) l_0_7_287)))
 (let ((?x13342 (* (* 2.0 l_0_7_279) l_0_7_286)))
 (let ((?x13339 (* (* 2.0 l_0_7_278) l_0_7_285)))
 (let ((?x13336 (* (* 2.0 l_0_7_277) l_0_7_284)))
 (let ((?x13333 (* (* 2.0 l_0_7_276) l_0_7_283)))
 (let ((?x13330 (* (* 2.0 l_0_7_275) l_0_7_282)))
 (let ((?x13327 (* (* 2.0 l_0_7_274) l_0_7_281)))
 (let ((?x13634 (* l_0_7_244 l_0_7_244)))
 (let ((?x13632 (* l_0_7_243 l_0_7_243)))
 (let ((?x13630 (* l_0_7_242 l_0_7_242)))
 (let ((?x13628 (* l_0_7_241 l_0_7_241)))
 (let ((?x13626 (* l_0_7_240 l_0_7_240)))
 (let ((?x13624 (* l_0_7_239 l_0_7_239)))
 (let ((?x13622 (* l_0_7_238 l_0_7_238)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8514 (* ?x8076 l_0_7_167)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x8511 (* ?x8283 l_0_7_166)))
 (let ((?x13619 (+ (* (* 1.0 l_0_7_110) l_0_7_130) (* (* 1.0 l_0_7_111) l_0_7_131))))
 (let ((?x13631 (- (- (- (- (- (- (- ?x13619 ?x8511) ?x8514) ?x13622) ?x13624) ?x13626) ?x13628) ?x13630)))
 (let ((?x13640 (+ (+ (+ (+ (+ (- (- ?x13631 ?x13632) ?x13634) ?x13327) ?x13330) ?x13333) ?x13336) ?x13339)))
 (let ((?x13646 (- (- (+ (+ ?x13640 ?x13342) ?x13345) (* (* 1.0 l_0_7_74) l_0_7_94)) (* (* 1.0 l_0_7_75) l_0_7_95))))
 (= ?x13646 0.0))))))))))))))))))))))))
(assert
 (let ((?x13734 (* l_0_7_288 l_0_7_288)))
 (let ((?x13732 (* l_0_7_287 l_0_7_287)))
 (let ((?x13730 (* l_0_7_286 l_0_7_286)))
 (let ((?x13728 (* l_0_7_285 l_0_7_285)))
 (let ((?x13726 (* l_0_7_284 l_0_7_284)))
 (let ((?x13724 (* l_0_7_283 l_0_7_283)))
 (let ((?x13722 (* l_0_7_282 l_0_7_282)))
 (let ((?x13720 (* l_0_7_281 l_0_7_281)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8622 (* ?x8076 l_0_7_174)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x13696 (* ?x8283 l_0_7_173)))
 (let ((?x13691 (- (* (* (- 1.0) l_0_7_101) l_0_7_74) (* (* 1.0 l_0_7_102) l_0_7_75))))
 (let ((?x13695 (+ (+ ?x13691 (* (* 1.0 l_0_7_110) l_0_7_137)) (* (* 1.0 l_0_7_111) l_0_7_138))))
 (let ((?x13704 (- (- (- (- ?x13695 ?x13696) ?x8622) (* (* 2.0 l_0_7_238) l_0_7_245)) (* (* 2.0 l_0_7_239) l_0_7_246))))
 (let ((?x13710 (- (- ?x13704 (* (* 2.0 l_0_7_240) l_0_7_247)) (* (* 2.0 l_0_7_241) l_0_7_248))))
 (let ((?x13716 (- (- ?x13710 (* (* 2.0 l_0_7_242) l_0_7_249)) (* (* 2.0 l_0_7_243) l_0_7_250))))
 (let ((?x13725 (+ (+ (+ (- ?x13716 (* (* 2.0 l_0_7_244) l_0_7_251)) ?x13720) ?x13722) ?x13724)))
 (= (+ (+ (+ (+ (+ ?x13725 ?x13726) ?x13728) ?x13730) ?x13732) ?x13734) 0.0))))))))))))))))))))
(assert
 (let ((?x9149 (* l_0_7_154 l_0_7_154)))
 (let ((?x9147 (* l_0_7_153 l_0_7_153)))
 (let ((?x9145 (* l_0_7_152 l_0_7_152)))
 (let ((?x9143 (* l_0_7_151 l_0_7_151)))
 (let ((?x13806 (+ (* (/ 1.0 2.0) (* l_0_7_115 l_0_7_115)) (* (/ 1.0 2.0) (* l_0_7_116 l_0_7_116)))))
 (let ((?x13810 (+ (+ ?x13806 (* (/ 1.0 2.0) (* l_0_7_117 l_0_7_117))) (* (/ 1.0 2.0) (* l_0_7_118 l_0_7_118)))))
 (let ((?x13817 (- (- (- (- (- ?x13810 ?x9143) ?x9145) ?x9147) ?x9149) (* (* (/ 1.0 2.0) l_0_7_79) l_0_7_79))))
 (let ((?x13823 (- (- ?x13817 (* (* (/ 1.0 2.0) l_0_7_80) l_0_7_80)) (* (* (/ 1.0 2.0) l_0_7_81) l_0_7_81))))
 (= (- ?x13823 (* (* (/ 1.0 2.0) l_0_7_82) l_0_7_82)) 0.0))))))))))
(assert
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9228 (* ?x9227 l_0_7_158)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9225 (* ?x9224 l_0_7_157)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9222 (* ?x9221 l_0_7_156)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9219 (* ?x9218 l_0_7_155)))
 (let ((?x13867 (+ (* (* 1.0 l_0_7_115) l_0_7_119) (* (* 1.0 l_0_7_116) l_0_7_120))))
 (let ((?x13873 (+ (+ ?x13867 (* (* 1.0 l_0_7_117) l_0_7_121)) (* (* 1.0 l_0_7_118) l_0_7_122))))
 (let ((?x13880 (- (- (- (- (- ?x13873 ?x9219) ?x9222) ?x9225) ?x9228) (* (* 1.0 l_0_7_79) l_0_7_83))))
 (let ((?x13886 (- (- ?x13880 (* (* 1.0 l_0_7_80) l_0_7_84)) (* (* 1.0 l_0_7_81) l_0_7_85))))
 (= (- ?x13886 (* (* 1.0 l_0_7_82) l_0_7_86)) 0.0))))))))))))))
(assert
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9314 (* ?x9227 l_0_7_163)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9310 (* ?x9224 l_0_7_162)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9306 (* ?x9221 l_0_7_161)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9302 (* ?x9218 l_0_7_160)))
 (let ((?x13920 (+ (* (* 1.0 l_0_7_115) l_0_7_124) (* (* 1.0 l_0_7_116) l_0_7_125))))
 (let ((?x13924 (+ (+ ?x13920 (* (* 1.0 l_0_7_117) l_0_7_126)) (* (* 1.0 l_0_7_118) l_0_7_127))))
 (let ((?x13930 (- (- (- (- (- ?x13924 ?x9302) ?x9306) ?x9310) ?x9314) (* (* 1.0 l_0_7_79) l_0_7_88))))
 (let ((?x13934 (- (- ?x13930 (* (* 1.0 l_0_7_80) l_0_7_89)) (* (* 1.0 l_0_7_81) l_0_7_90))))
 (= (- ?x13934 (* (* 1.0 l_0_7_82) l_0_7_91)) 0.0))))))))))))))
(assert
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9433 (* ?x9227 l_0_7_169)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9431 (* ?x9224 l_0_7_168)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9429 (* ?x9221 l_0_7_167)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9427 (* ?x9218 l_0_7_166)))
 (let ((?x13967 (+ (* (* 1.0 l_0_7_115) l_0_7_130) (* (* 1.0 l_0_7_116) l_0_7_131))))
 (let ((?x13971 (+ (+ ?x13967 (* (* 1.0 l_0_7_117) l_0_7_132)) (* (* 1.0 l_0_7_118) l_0_7_133))))
 (let ((?x13977 (- (- (- (- (- ?x13971 ?x9427) ?x9429) ?x9431) ?x9433) (* (* 1.0 l_0_7_79) l_0_7_94))))
 (let ((?x13981 (- (- ?x13977 (* (* 1.0 l_0_7_80) l_0_7_95)) (* (* 1.0 l_0_7_81) l_0_7_96))))
 (= (- ?x13981 (* (* 1.0 l_0_7_82) l_0_7_97)) 0.0))))))))))))))
(assert
 (let ((?x9227 (* 2.0 l_0_7_154)))
 (let ((?x9573 (* ?x9227 l_0_7_176)))
 (let ((?x9224 (* 2.0 l_0_7_153)))
 (let ((?x9571 (* ?x9224 l_0_7_175)))
 (let ((?x9221 (* 2.0 l_0_7_152)))
 (let ((?x9569 (* ?x9221 l_0_7_174)))
 (let ((?x9218 (* 2.0 l_0_7_151)))
 (let ((?x9567 (* ?x9218 l_0_7_173)))
 (let ((?x14014 (- (* (* (- 1.0) l_0_7_101) l_0_7_79) (* (* 1.0 l_0_7_102) l_0_7_80))))
 (let ((?x14019 (- (- ?x14014 (* (* 1.0 l_0_7_103) l_0_7_81)) (* (* 1.0 l_0_7_104) l_0_7_82))))
 (let ((?x14023 (+ (+ ?x14019 (* (* 1.0 l_0_7_115) l_0_7_137)) (* (* 1.0 l_0_7_116) l_0_7_138))))
 (let ((?x14027 (+ (+ ?x14023 (* (* 1.0 l_0_7_117) l_0_7_139)) (* (* 1.0 l_0_7_118) l_0_7_140))))
 (= (- (- (- (- ?x14027 ?x9567) ?x9569) ?x9571) ?x9573) 0.0))))))))))))))
(assert
 (let ((?x9684 (* l_0_7_159 l_0_7_159)))
 (let ((?x9682 (* l_0_7_158 l_0_7_158)))
 (let ((?x9680 (* l_0_7_157 l_0_7_157)))
 (let ((?x9678 (* l_0_7_156 l_0_7_156)))
 (let ((?x9676 (* l_0_7_155 l_0_7_155)))
 (let ((?x14061 (+ (* (/ 1.0 2.0) (* l_0_7_119 l_0_7_119)) (* (/ 1.0 2.0) (* l_0_7_120 l_0_7_120)))))
 (let ((?x14067 (+ (+ ?x14061 (* (/ 1.0 2.0) (* l_0_7_121 l_0_7_121))) (* (/ 1.0 2.0) (* l_0_7_122 l_0_7_122)))))
 (let ((?x14073 (- (- (- (+ ?x14067 (* (/ 1.0 2.0) (* l_0_7_123 l_0_7_123))) ?x9676) ?x9678) ?x9680)))
 (let ((?x14081 (- (- (- (- ?x14073 ?x9682) ?x9684) (* (* (/ 1.0 2.0) l_0_7_83) l_0_7_83)) (* (* (/ 1.0 2.0) l_0_7_84) l_0_7_84))))
 (let ((?x14087 (- (- ?x14081 (* (* (/ 1.0 2.0) l_0_7_85) l_0_7_85)) (* (* (/ 1.0 2.0) l_0_7_86) l_0_7_86))))
 (= (- ?x14087 (* (* (/ 1.0 2.0) l_0_7_87) l_0_7_87)) 0.0))))))))))))
(assert
 (let ((?x9772 (* 2.0 l_0_7_159)))
 (let ((?x9773 (* ?x9772 l_0_7_164)))
 (let ((?x9769 (* 2.0 l_0_7_158)))
 (let ((?x9770 (* ?x9769 l_0_7_163)))
 (let ((?x9766 (* 2.0 l_0_7_157)))
 (let ((?x9767 (* ?x9766 l_0_7_162)))
 (let ((?x9763 (* 2.0 l_0_7_156)))
 (let ((?x9764 (* ?x9763 l_0_7_161)))
 (let ((?x9760 (* 2.0 l_0_7_155)))
 (let ((?x9761 (* ?x9760 l_0_7_160)))
 (let ((?x14144 (+ (* (* 1.0 l_0_7_119) l_0_7_124) (* (* 1.0 l_0_7_120) l_0_7_125))))
 (let ((?x14150 (+ (+ ?x14144 (* (* 1.0 l_0_7_121) l_0_7_126)) (* (* 1.0 l_0_7_122) l_0_7_127))))
 (let ((?x14156 (- (- (- (+ ?x14150 (* (* 1.0 l_0_7_123) l_0_7_128)) ?x9761) ?x9764) ?x9767)))
 (let ((?x14164 (- (- (- (- ?x14156 ?x9770) ?x9773) (* (* 1.0 l_0_7_83) l_0_7_88)) (* (* 1.0 l_0_7_84) l_0_7_89))))
 (let ((?x14170 (- (- ?x14164 (* (* 1.0 l_0_7_85) l_0_7_90)) (* (* 1.0 l_0_7_86) l_0_7_91))))
 (= (- ?x14170 (* (* 1.0 l_0_7_87) l_0_7_92)) 0.0)))))))))))))))))
(assert
 (let ((?x9772 (* 2.0 l_0_7_159)))
 (let ((?x9911 (* ?x9772 l_0_7_170)))
 (let ((?x9769 (* 2.0 l_0_7_158)))
 (let ((?x9909 (* ?x9769 l_0_7_169)))
 (let ((?x9766 (* 2.0 l_0_7_157)))
 (let ((?x9907 (* ?x9766 l_0_7_168)))
 (let ((?x9763 (* 2.0 l_0_7_156)))
 (let ((?x9905 (* ?x9763 l_0_7_167)))
 (let ((?x9760 (* 2.0 l_0_7_155)))
 (let ((?x9903 (* ?x9760 l_0_7_166)))
 (let ((?x14220 (+ (* (* 1.0 l_0_7_119) l_0_7_130) (* (* 1.0 l_0_7_120) l_0_7_131))))
 (let ((?x14224 (+ (+ ?x14220 (* (* 1.0 l_0_7_121) l_0_7_132)) (* (* 1.0 l_0_7_122) l_0_7_133))))
 (let ((?x14229 (- (- (- (+ ?x14224 (* (* 1.0 l_0_7_123) l_0_7_134)) ?x9903) ?x9905) ?x9907)))
 (let ((?x14235 (- (- (- (- ?x14229 ?x9909) ?x9911) (* (* 1.0 l_0_7_83) l_0_7_94)) (* (* 1.0 l_0_7_84) l_0_7_95))))
 (let ((?x14239 (- (- ?x14235 (* (* 1.0 l_0_7_85) l_0_7_96)) (* (* 1.0 l_0_7_86) l_0_7_97))))
 (= (- ?x14239 (* (* 1.0 l_0_7_87) l_0_7_98)) 0.0)))))))))))))))))
(assert
 (let ((?x9772 (* 2.0 l_0_7_159)))
 (let ((?x10072 (* ?x9772 l_0_7_177)))
 (let ((?x9769 (* 2.0 l_0_7_158)))
 (let ((?x10070 (* ?x9769 l_0_7_176)))
 (let ((?x9766 (* 2.0 l_0_7_157)))
 (let ((?x10068 (* ?x9766 l_0_7_175)))
 (let ((?x9763 (* 2.0 l_0_7_156)))
 (let ((?x10066 (* ?x9763 l_0_7_174)))
 (let ((?x9760 (* 2.0 l_0_7_155)))
 (let ((?x10064 (* ?x9760 l_0_7_173)))
 (let ((?x14288 (- (* (* (- 1.0) l_0_7_101) l_0_7_83) (* (* 1.0 l_0_7_102) l_0_7_84))))
 (let ((?x14292 (- (- ?x14288 (* (* 1.0 l_0_7_103) l_0_7_85)) (* (* 1.0 l_0_7_104) l_0_7_86))))
 (let ((?x14297 (+ (- ?x14292 (* (* 1.0 l_0_7_105) l_0_7_87)) (* (* 1.0 l_0_7_119) l_0_7_137))))
 (let ((?x14301 (+ (+ ?x14297 (* (* 1.0 l_0_7_120) l_0_7_138)) (* (* 1.0 l_0_7_121) l_0_7_139))))
 (let ((?x14305 (+ (+ ?x14301 (* (* 1.0 l_0_7_122) l_0_7_140)) (* (* 1.0 l_0_7_123) l_0_7_141))))
 (= (- (- (- (- (- ?x14305 ?x10064) ?x10066) ?x10068) ?x10070) ?x10072) 0.0)))))))))))))))))
(assert
 (let ((?x10186 (* l_0_7_165 l_0_7_165)))
 (let ((?x10171 (* l_0_7_164 l_0_7_164)))
 (let ((?x10168 (* l_0_7_163 l_0_7_163)))
 (let ((?x10164 (* l_0_7_162 l_0_7_162)))
 (let ((?x10160 (* l_0_7_161 l_0_7_161)))
 (let ((?x10156 (* l_0_7_160 l_0_7_160)))
 (let ((?x14356 (+ (* (/ 1.0 2.0) (* l_0_7_124 l_0_7_124)) (* (/ 1.0 2.0) (* l_0_7_125 l_0_7_125)))))
 (let ((?x14362 (+ (+ ?x14356 (* (/ 1.0 2.0) (* l_0_7_126 l_0_7_126))) (* (/ 1.0 2.0) (* l_0_7_127 l_0_7_127)))))
 (let ((?x14368 (+ (+ ?x14362 (* (/ 1.0 2.0) (* l_0_7_128 l_0_7_128))) (* (/ 1.0 2.0) (* l_0_7_129 l_0_7_129)))))
 (let ((?x14377 (- (- (- (- (- (- (- ?x14368 ?x10156) ?x10160) ?x10164) ?x10168) ?x10171) ?x10186) (* (* (/ 1.0 2.0) l_0_7_88) l_0_7_88))))
 (let ((?x14383 (- (- ?x14377 (* (* (/ 1.0 2.0) l_0_7_89) l_0_7_89)) (* (* (/ 1.0 2.0) l_0_7_90) l_0_7_90))))
 (let ((?x14389 (- (- ?x14383 (* (* (/ 1.0 2.0) l_0_7_91) l_0_7_91)) (* (* (/ 1.0 2.0) l_0_7_92) l_0_7_92))))
 (= (- ?x14389 (* (* (/ 1.0 2.0) l_0_7_93) l_0_7_93)) 0.0))))))))))))))
(assert
 (let ((?x10301 (* 2.0 l_0_7_165)))
 (let ((?x10302 (* ?x10301 l_0_7_171)))
 (let ((?x10298 (* 2.0 l_0_7_164)))
 (let ((?x10299 (* ?x10298 l_0_7_170)))
 (let ((?x10295 (* 2.0 l_0_7_163)))
 (let ((?x10296 (* ?x10295 l_0_7_169)))
 (let ((?x10292 (* 2.0 l_0_7_162)))
 (let ((?x10293 (* ?x10292 l_0_7_168)))
 (let ((?x10289 (* 2.0 l_0_7_161)))
 (let ((?x10290 (* ?x10289 l_0_7_167)))
 (let ((?x10286 (* 2.0 l_0_7_160)))
 (let ((?x10287 (* ?x10286 l_0_7_166)))
 (let ((?x14455 (+ (* (* 1.0 l_0_7_124) l_0_7_130) (* (* 1.0 l_0_7_125) l_0_7_131))))
 (let ((?x14461 (+ (+ ?x14455 (* (* 1.0 l_0_7_126) l_0_7_132)) (* (* 1.0 l_0_7_127) l_0_7_133))))
 (let ((?x14467 (+ (+ ?x14461 (* (* 1.0 l_0_7_128) l_0_7_134)) (* (* 1.0 l_0_7_129) l_0_7_135))))
 (let ((?x14476 (- (- (- (- (- (- (- ?x14467 ?x10287) ?x10290) ?x10293) ?x10296) ?x10299) ?x10302) (* (* 1.0 l_0_7_88) l_0_7_94))))
 (let ((?x14482 (- (- ?x14476 (* (* 1.0 l_0_7_89) l_0_7_95)) (* (* 1.0 l_0_7_90) l_0_7_96))))
 (let ((?x14488 (- (- ?x14482 (* (* 1.0 l_0_7_91) l_0_7_97)) (* (* 1.0 l_0_7_92) l_0_7_98))))
 (= (- ?x14488 (* (* 1.0 l_0_7_93) l_0_7_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x10301 (* 2.0 l_0_7_165)))
 (let ((?x10511 (* ?x10301 l_0_7_178)))
 (let ((?x10298 (* 2.0 l_0_7_164)))
 (let ((?x10509 (* ?x10298 l_0_7_177)))
 (let ((?x10295 (* 2.0 l_0_7_163)))
 (let ((?x10507 (* ?x10295 l_0_7_176)))
 (let ((?x10292 (* 2.0 l_0_7_162)))
 (let ((?x10505 (* ?x10292 l_0_7_175)))
 (let ((?x10289 (* 2.0 l_0_7_161)))
 (let ((?x10503 (* ?x10289 l_0_7_174)))
 (let ((?x10286 (* 2.0 l_0_7_160)))
 (let ((?x10501 (* ?x10286 l_0_7_173)))
 (let ((?x14546 (- (* (* (- 1.0) l_0_7_101) l_0_7_88) (* (* 1.0 l_0_7_102) l_0_7_89))))
 (let ((?x14550 (- (- ?x14546 (* (* 1.0 l_0_7_103) l_0_7_90)) (* (* 1.0 l_0_7_104) l_0_7_91))))
 (let ((?x14555 (- (- ?x14550 (* (* 1.0 l_0_7_105) l_0_7_92)) (* (* 1.0 l_0_7_106) l_0_7_93))))
 (let ((?x14559 (+ (+ ?x14555 (* (* 1.0 l_0_7_124) l_0_7_137)) (* (* 1.0 l_0_7_125) l_0_7_138))))
 (let ((?x14563 (+ (+ ?x14559 (* (* 1.0 l_0_7_126) l_0_7_139)) (* (* 1.0 l_0_7_127) l_0_7_140))))
 (let ((?x14567 (+ (+ ?x14563 (* (* 1.0 l_0_7_128) l_0_7_141)) (* (* 1.0 l_0_7_129) l_0_7_142))))
 (= (- (- (- (- (- (- ?x14567 ?x10501) ?x10503) ?x10505) ?x10507) ?x10509) ?x10511) 0.0))))))))))))))))))))
(assert
 (let ((?x10671 (* l_0_7_172 l_0_7_172)))
 (let ((?x10669 (* l_0_7_171 l_0_7_171)))
 (let ((?x10667 (* l_0_7_170 l_0_7_170)))
 (let ((?x10665 (* l_0_7_169 l_0_7_169)))
 (let ((?x10663 (* l_0_7_168 l_0_7_168)))
 (let ((?x10661 (* l_0_7_167 l_0_7_167)))
 (let ((?x10659 (* l_0_7_166 l_0_7_166)))
 (let ((?x14627 (+ (* (* (- (/ 1.0 2.0)) l_0_7_100) l_0_7_100) (* (/ 1.0 2.0) (* l_0_7_130 l_0_7_130)))))
 (let ((?x14633 (+ (+ ?x14627 (* (/ 1.0 2.0) (* l_0_7_131 l_0_7_131))) (* (/ 1.0 2.0) (* l_0_7_132 l_0_7_132)))))
 (let ((?x14639 (+ (+ ?x14633 (* (/ 1.0 2.0) (* l_0_7_133 l_0_7_133))) (* (/ 1.0 2.0) (* l_0_7_134 l_0_7_134)))))
 (let ((?x14645 (+ (+ ?x14639 (* (/ 1.0 2.0) (* l_0_7_135 l_0_7_135))) (* (/ 1.0 2.0) (* l_0_7_136 l_0_7_136)))))
 (let ((?x14652 (- (- (- (- (- (- (- ?x14645 ?x10659) ?x10661) ?x10663) ?x10665) ?x10667) ?x10669) ?x10671)))
 (let ((?x14658 (- (- ?x14652 (* (* (/ 1.0 2.0) l_0_7_94) l_0_7_94)) (* (* (/ 1.0 2.0) l_0_7_95) l_0_7_95))))
 (let ((?x14664 (- (- ?x14658 (* (* (/ 1.0 2.0) l_0_7_96) l_0_7_96)) (* (* (/ 1.0 2.0) l_0_7_97) l_0_7_97))))
 (let ((?x14670 (- (- ?x14664 (* (* (/ 1.0 2.0) l_0_7_98) l_0_7_98)) (* (* (/ 1.0 2.0) l_0_7_99) l_0_7_99))))
 (= ?x14670 0.0)))))))))))))))))
(assert
 (let ((?x10843 (* (* 2.0 l_0_7_172) l_0_7_179)))
 (let ((?x10840 (* (* 2.0 l_0_7_171) l_0_7_178)))
 (let ((?x10837 (* (* 2.0 l_0_7_170) l_0_7_177)))
 (let ((?x10834 (* (* 2.0 l_0_7_169) l_0_7_176)))
 (let ((?x10831 (* (* 2.0 l_0_7_168) l_0_7_175)))
 (let ((?x10828 (* (* 2.0 l_0_7_167) l_0_7_174)))
 (let ((?x10825 (* (* 2.0 l_0_7_166) l_0_7_173)))
 (let ((?x14739 (- (* (* (- 1.0) l_0_7_100) l_0_7_107) (* (* 1.0 l_0_7_101) l_0_7_94))))
 (let ((?x14743 (- (- ?x14739 (* (* 1.0 l_0_7_102) l_0_7_95)) (* (* 1.0 l_0_7_103) l_0_7_96))))
 (let ((?x14747 (- (- ?x14743 (* (* 1.0 l_0_7_104) l_0_7_97)) (* (* 1.0 l_0_7_105) l_0_7_98))))
 (let ((?x14752 (+ (- ?x14747 (* (* 1.0 l_0_7_106) l_0_7_99)) (* (* 1.0 l_0_7_130) l_0_7_137))))
 (let ((?x14758 (+ (+ ?x14752 (* (* 1.0 l_0_7_131) l_0_7_138)) (* (* 1.0 l_0_7_132) l_0_7_139))))
 (let ((?x14764 (+ (+ ?x14758 (* (* 1.0 l_0_7_133) l_0_7_140)) (* (* 1.0 l_0_7_134) l_0_7_141))))
 (let ((?x14770 (+ (+ ?x14764 (* (* 1.0 l_0_7_135) l_0_7_142)) (* (* 1.0 l_0_7_136) l_0_7_143))))
 (let ((?x14777 (- (- (- (- (- (- (- ?x14770 ?x10825) ?x10828) ?x10831) ?x10834) ?x10837) ?x10840) ?x10843)))
 (= ?x14777 0.0)))))))))))))))))
(assert
 (let ((?x11059 (* l_0_7_180 l_0_7_180)))
 (let ((?x11057 (* l_0_7_179 l_0_7_179)))
 (let ((?x11055 (* l_0_7_178 l_0_7_178)))
 (let ((?x11053 (* l_0_7_177 l_0_7_177)))
 (let ((?x11032 (* l_0_7_176 l_0_7_176)))
 (let ((?x11028 (* l_0_7_175 l_0_7_175)))
 (let ((?x11024 (* l_0_7_174 l_0_7_174)))
 (let ((?x11111 (* l_0_7_173 l_0_7_173)))
 (let ((?x14825 (- (* (* (- (/ 1.0 2.0)) l_0_7_101) l_0_7_101) (* (* (/ 1.0 2.0) l_0_7_102) l_0_7_102))))
 (let ((?x14831 (- (- ?x14825 (* (* (/ 1.0 2.0) l_0_7_103) l_0_7_103)) (* (* (/ 1.0 2.0) l_0_7_104) l_0_7_104))))
 (let ((?x14837 (- (- ?x14831 (* (* (/ 1.0 2.0) l_0_7_105) l_0_7_105)) (* (* (/ 1.0 2.0) l_0_7_106) l_0_7_106))))
 (let ((?x14843 (- (- ?x14837 (* (* (/ 1.0 2.0) l_0_7_107) l_0_7_107)) (* (* (/ 1.0 2.0) l_0_7_108) l_0_7_108))))
 (let ((?x14849 (+ (+ ?x14843 (* (/ 1.0 2.0) (* l_0_7_137 l_0_7_137))) (* (/ 1.0 2.0) (* l_0_7_138 l_0_7_138)))))
 (let ((?x14855 (+ (+ ?x14849 (* (/ 1.0 2.0) (* l_0_7_139 l_0_7_139))) (* (/ 1.0 2.0) (* l_0_7_140 l_0_7_140)))))
 (let ((?x14861 (+ (+ ?x14855 (* (/ 1.0 2.0) (* l_0_7_141 l_0_7_141))) (* (/ 1.0 2.0) (* l_0_7_142 l_0_7_142)))))
 (let ((?x14867 (+ (+ ?x14861 (* (/ 1.0 2.0) (* l_0_7_143 l_0_7_143))) (* (/ 1.0 2.0) (* l_0_7_144 l_0_7_144)))))
 (let ((?x14874 (- (- (- (- (- (- (- ?x14867 ?x11111) ?x11024) ?x11028) ?x11032) ?x11053) ?x11055) ?x11057)))
 (= (- ?x14874 ?x11059) 0.0)))))))))))))))))))
(assert
 (= (+ (* (- l_0_7_109) l_0_7_109) (* l_0_7_73 l_0_7_73)) 0.0))
(assert
 (let ((?x14962 (+ (- (* (* (- 2.0) l_0_7_109) l_0_7_110) (* l_0_7_289 l_0_7_289)) (* (* 2.0 l_0_7_73) l_0_7_74))))
 (= ?x14962 0.0)))
(assert
 (let ((?x14973 (+ (* (* (- 2.0) l_0_7_109) l_0_7_112) (* (* 2.0 l_0_7_73) l_0_7_76))))
 (= ?x14973 0.0)))
(assert
 (let ((?x14983 (+ (- (* (* (- 2.0) l_0_7_109) l_0_7_119) (* l_0_7_253 l_0_7_253)) (* (* 2.0 l_0_7_73) l_0_7_83))))
 (= ?x14983 0.0)))
(assert
 (let ((?x7823 (* l_0_7_181 l_0_7_181)))
 (let ((?x14994 (- (+ (* (* (- 2.0) l_0_7_109) l_0_7_124) (* l_0_7_145 l_0_7_145)) ?x7823)))
 (= (+ ?x14994 (* (* 2.0 l_0_7_73) l_0_7_88)) 0.0))))
(assert
 (let ((?x15008 (+ (+ (* (* (- 2.0) l_0_7_109) l_0_7_130) (* l_0_7_253 l_0_7_253)) (* (* 2.0 l_0_7_73) l_0_7_94))))
 (= ?x15008 0.0)))
(assert
 (let ((?x15017 (* l_0_7_217 l_0_7_217)))
 (let ((?x15012 (- (* (* 2.0 l_0_7_101) l_0_7_73) (* (* 2.0 l_0_7_109) l_0_7_137))))
 (= (- ?x15012 ?x15017) 0.0))))
(assert
 (let ((?x13279 (* l_0_7_75 l_0_7_75)))
 (let ((?x13273 (* l_0_7_74 l_0_7_74)))
 (let ((?x15034 (- (- (* (- l_0_7_110) l_0_7_110) (* l_0_7_111 l_0_7_111)) (* (* 2.0 l_0_7_289) l_0_7_290))))
 (= (+ (+ ?x15034 ?x13273) ?x13279) 0.0)))))
(assert
 (let ((?x15055 (- (* (* (- 2.0) l_0_7_110) l_0_7_112) (* (* 2.0 l_0_7_111) l_0_7_113))))
 (let ((?x15059 (+ (- ?x15055 (* (* 2.0 l_0_7_289) l_0_7_292)) (* (* 2.0 l_0_7_74) l_0_7_76))))
 (= (+ ?x15059 (* (* 2.0 l_0_7_75) l_0_7_77)) 0.0))))
(assert
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x15083 (* ?x11335 l_0_7_254)))
 (let ((?x15077 (- (* (* (- 2.0) l_0_7_110) l_0_7_119) (* (* 2.0 l_0_7_111) l_0_7_120))))
 (let ((?x15088 (+ (- (- ?x15077 ?x15083) (* (* 2.0 l_0_7_289) l_0_7_299)) (* (* 2.0 l_0_7_74) l_0_7_83))))
 (= (+ ?x15088 (* (* 2.0 l_0_7_75) l_0_7_84)) 0.0))))))
(assert
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7862 (* ?x7861 l_0_7_182)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7859 (* ?x7858 l_0_7_146)))
 (let ((?x15112 (- (* (* (- 2.0) l_0_7_110) l_0_7_124) (* (* 2.0 l_0_7_111) l_0_7_125))))
 (let ((?x15123 (+ (- (- (+ ?x15112 ?x7859) ?x7862) (* (* 2.0 l_0_7_289) l_0_7_304)) (* (* 2.0 l_0_7_74) l_0_7_88))))
 (= (+ ?x15123 (* (* 2.0 l_0_7_75) l_0_7_89)) 0.0))))))))
(assert
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x15083 (* ?x11335 l_0_7_254)))
 (let ((?x15149 (- (* (* (- 2.0) l_0_7_110) l_0_7_130) (* (* 2.0 l_0_7_111) l_0_7_131))))
 (let ((?x15154 (+ (- (+ ?x15149 ?x15083) (* (* 2.0 l_0_7_289) l_0_7_310)) (* (* 2.0 l_0_7_74) l_0_7_94))))
 (= (+ ?x15154 (* (* 2.0 l_0_7_75) l_0_7_95)) 0.0))))))
(assert
 (let ((?x15173 (+ (* (* 2.0 l_0_7_101) l_0_7_74) (* (* 2.0 l_0_7_102) l_0_7_75))))
 (let ((?x15182 (- (- ?x15173 (* (* 2.0 l_0_7_110) l_0_7_137)) (* (* 2.0 l_0_7_111) l_0_7_138))))
 (let ((?x15186 (- (- ?x15182 (* (* 2.0 l_0_7_217) l_0_7_218)) (* (* 2.0 l_0_7_289) l_0_7_317))))
 (= ?x15186 0.0)))))
(assert
 (let ((?x9093 (* l_0_7_78 l_0_7_78)))
 (let ((?x9087 (* l_0_7_77 l_0_7_77)))
 (let ((?x9080 (* l_0_7_76 l_0_7_76)))
 (let ((?x8972 (* l_0_7_114 l_0_7_114)))
 (let ((?x15217 (- (- (* (- l_0_7_112) l_0_7_112) (* l_0_7_113 l_0_7_113)) ?x8972)))
 (= (+ (+ (+ ?x15217 ?x9080) ?x9087) ?x9093) 0.0)))))))
(assert
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x15240 (* ?x11335 l_0_7_256)))
 (let ((?x15237 (- (* (* (- 2.0) l_0_7_112) l_0_7_119) (* (* 2.0 l_0_7_113) l_0_7_120))))
 (let ((?x15243 (+ (- (- ?x15237 (* (* 2.0 l_0_7_114) l_0_7_121)) ?x15240) (* (* 2.0 l_0_7_76) l_0_7_83))))
 (let ((?x15247 (+ (+ ?x15243 (* (* 2.0 l_0_7_77) l_0_7_84)) (* (* 2.0 l_0_7_78) l_0_7_85))))
 (= ?x15247 0.0)))))))
(assert
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7925 (* ?x7861 l_0_7_184)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7915 (* ?x7858 l_0_7_148)))
 (let ((?x15268 (- (* (* (- 2.0) l_0_7_112) l_0_7_124) (* (* 2.0 l_0_7_113) l_0_7_125))))
 (let ((?x15280 (+ (- (+ (- ?x15268 (* (* 2.0 l_0_7_114) l_0_7_126)) ?x7915) ?x7925) (* (* 2.0 l_0_7_76) l_0_7_88))))
 (let ((?x15284 (+ (+ ?x15280 (* (* 2.0 l_0_7_77) l_0_7_89)) (* (* 2.0 l_0_7_78) l_0_7_90))))
 (= ?x15284 0.0)))))))))
(assert
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x15240 (* ?x11335 l_0_7_256)))
 (let ((?x15309 (- (* (* (- 2.0) l_0_7_112) l_0_7_130) (* (* 2.0 l_0_7_113) l_0_7_131))))
 (let ((?x15314 (+ (+ (- ?x15309 (* (* 2.0 l_0_7_114) l_0_7_132)) ?x15240) (* (* 2.0 l_0_7_76) l_0_7_94))))
 (let ((?x15318 (+ (+ ?x15314 (* (* 2.0 l_0_7_77) l_0_7_95)) (* (* 2.0 l_0_7_78) l_0_7_96))))
 (= ?x15318 0.0)))))))
(assert
 (let ((?x14127 (* l_0_7_87 l_0_7_87)))
 (let ((?x14121 (* l_0_7_86 l_0_7_86)))
 (let ((?x14115 (* l_0_7_85 l_0_7_85)))
 (let ((?x14109 (* l_0_7_84 l_0_7_84)))
 (let ((?x14103 (* l_0_7_83 l_0_7_83)))
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x15343 (* ?x11335 l_0_7_263)))
 (let ((?x14068 (* l_0_7_123 l_0_7_123)))
 (let ((?x14065 (* l_0_7_122 l_0_7_122)))
 (let ((?x14062 (* l_0_7_121 l_0_7_121)))
 (let ((?x15334 (- (- (* (- l_0_7_119) l_0_7_119) (* l_0_7_120 l_0_7_120)) ?x14062)))
 (let ((?x15348 (+ (+ (+ (+ (- (- (- ?x15334 ?x14065) ?x14068) ?x15343) ?x14103) ?x14109) ?x14115) ?x14121)))
 (= (+ ?x15348 ?x14127) 0.0))))))))))))))
(assert
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x15393 (* ?x11335 l_0_7_268)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7971 (* ?x7861 l_0_7_191)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7964 (* ?x7858 l_0_7_155)))
 (let ((?x15381 (- (* (* (- 2.0) l_0_7_119) l_0_7_124) (* (* 2.0 l_0_7_120) l_0_7_125))))
 (let ((?x15387 (- (- ?x15381 (* (* 2.0 l_0_7_121) l_0_7_126)) (* (* 2.0 l_0_7_122) l_0_7_127))))
 (let ((?x15394 (- (- (+ (- ?x15387 (* (* 2.0 l_0_7_123) l_0_7_128)) ?x7964) ?x7971) ?x15393)))
 (let ((?x15400 (+ (+ ?x15394 (* (* 2.0 l_0_7_83) l_0_7_88)) (* (* 2.0 l_0_7_84) l_0_7_89))))
 (let ((?x15406 (+ (+ ?x15400 (* (* 2.0 l_0_7_85) l_0_7_90)) (* (* 2.0 l_0_7_86) l_0_7_91))))
 (= (+ ?x15406 (* (* 2.0 l_0_7_87) l_0_7_92)) 0.0)))))))))))))
(assert
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x15460 (* ?x11335 l_0_7_274)))
 (let ((?x15343 (* ?x11335 l_0_7_263)))
 (let ((?x15452 (- (* (* (- 2.0) l_0_7_119) l_0_7_130) (* (* 2.0 l_0_7_120) l_0_7_131))))
 (let ((?x15456 (- (- ?x15452 (* (* 2.0 l_0_7_121) l_0_7_132)) (* (* 2.0 l_0_7_122) l_0_7_133))))
 (let ((?x15463 (+ (- (+ (- ?x15456 (* (* 2.0 l_0_7_123) l_0_7_134)) ?x15343) ?x15460) (* (* 2.0 l_0_7_83) l_0_7_94))))
 (let ((?x15467 (+ (+ ?x15463 (* (* 2.0 l_0_7_84) l_0_7_95)) (* (* 2.0 l_0_7_85) l_0_7_96))))
 (let ((?x15471 (+ (+ ?x15467 (* (* 2.0 l_0_7_86) l_0_7_97)) (* (* 2.0 l_0_7_87) l_0_7_98))))
 (= ?x15471 0.0))))))))))
(assert
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x13006 (* ?x11335 l_0_7_281)))
 (let ((?x15503 (+ (* (* 2.0 l_0_7_101) l_0_7_83) (* (* 2.0 l_0_7_102) l_0_7_84))))
 (let ((?x15515 (+ (+ ?x15503 (* (* 2.0 l_0_7_103) l_0_7_85)) (* (* 2.0 l_0_7_104) l_0_7_86))))
 (let ((?x15520 (- (+ ?x15515 (* (* 2.0 l_0_7_105) l_0_7_87)) (* (* 2.0 l_0_7_119) l_0_7_137))))
 (let ((?x15524 (- (- ?x15520 (* (* 2.0 l_0_7_120) l_0_7_138)) (* (* 2.0 l_0_7_121) l_0_7_139))))
 (let ((?x15528 (- (- ?x15524 (* (* 2.0 l_0_7_122) l_0_7_140)) (* (* 2.0 l_0_7_123) l_0_7_141))))
 (= (- (- ?x15528 (* (* 2.0 l_0_7_217) l_0_7_227)) ?x13006) 0.0)))))))))
(assert
 (let ((?x14437 (* l_0_7_93 l_0_7_93)))
 (let ((?x14431 (* l_0_7_92 l_0_7_92)))
 (let ((?x14425 (* l_0_7_91 l_0_7_91)))
 (let ((?x14419 (* l_0_7_90 l_0_7_90)))
 (let ((?x14413 (* l_0_7_89 l_0_7_89)))
 (let ((?x14407 (* l_0_7_88 l_0_7_88)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x7994 (* ?x7861 l_0_7_196)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x7987 (* ?x7858 l_0_7_160)))
 (let ((?x14366 (* l_0_7_129 l_0_7_129)))
 (let ((?x14363 (* l_0_7_128 l_0_7_128)))
 (let ((?x14360 (* l_0_7_127 l_0_7_127)))
 (let ((?x14357 (* l_0_7_126 l_0_7_126)))
 (let ((?x15583 (- (- (* (- l_0_7_124) l_0_7_124) (* l_0_7_125 l_0_7_125)) ?x14357)))
 (let ((?x15590 (+ (+ (- (+ (- (- (- ?x15583 ?x14360) ?x14363) ?x14366) ?x7987) ?x7994) ?x14407) ?x14413)))
 (= (+ (+ (+ (+ ?x15590 ?x14419) ?x14425) ?x14431) ?x14437) 0.0))))))))))))))))))
(assert
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x15393 (* ?x11335 l_0_7_268)))
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x8021 (* ?x7861 l_0_7_202)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x8019 (* ?x7858 l_0_7_166)))
 (let ((?x15623 (- (* (* (- 2.0) l_0_7_124) l_0_7_130) (* (* 2.0 l_0_7_125) l_0_7_131))))
 (let ((?x15629 (- (- ?x15623 (* (* 2.0 l_0_7_126) l_0_7_132)) (* (* 2.0 l_0_7_127) l_0_7_133))))
 (let ((?x15635 (- (- ?x15629 (* (* 2.0 l_0_7_128) l_0_7_134)) (* (* 2.0 l_0_7_129) l_0_7_135))))
 (let ((?x15641 (+ (+ (- (+ ?x15635 ?x8019) ?x8021) ?x15393) (* (* 2.0 l_0_7_88) l_0_7_94))))
 (let ((?x15647 (+ (+ ?x15641 (* (* 2.0 l_0_7_89) l_0_7_95)) (* (* 2.0 l_0_7_90) l_0_7_96))))
 (let ((?x15653 (+ (+ ?x15647 (* (* 2.0 l_0_7_91) l_0_7_97)) (* (* 2.0 l_0_7_92) l_0_7_98))))
 (= (+ ?x15653 (* (* 2.0 l_0_7_93) l_0_7_99)) 0.0))))))))))))))
(assert
 (let ((?x7861 (* 2.0 l_0_7_181)))
 (let ((?x8059 (* ?x7861 l_0_7_209)))
 (let ((?x7858 (* 2.0 l_0_7_145)))
 (let ((?x8057 (* ?x7858 l_0_7_173)))
 (let ((?x15698 (+ (* (* 2.0 l_0_7_101) l_0_7_88) (* (* 2.0 l_0_7_102) l_0_7_89))))
 (let ((?x15702 (+ (+ ?x15698 (* (* 2.0 l_0_7_103) l_0_7_90)) (* (* 2.0 l_0_7_104) l_0_7_91))))
 (let ((?x15706 (+ (+ ?x15702 (* (* 2.0 l_0_7_105) l_0_7_92)) (* (* 2.0 l_0_7_106) l_0_7_93))))
 (let ((?x15711 (- (- ?x15706 (* (* 2.0 l_0_7_124) l_0_7_137)) (* (* 2.0 l_0_7_125) l_0_7_138))))
 (let ((?x15715 (- (- ?x15711 (* (* 2.0 l_0_7_126) l_0_7_139)) (* (* 2.0 l_0_7_127) l_0_7_140))))
 (let ((?x15719 (- (- ?x15715 (* (* 2.0 l_0_7_128) l_0_7_141)) (* (* 2.0 l_0_7_129) l_0_7_142))))
 (= (- (- (+ ?x15719 ?x8057) ?x8059) (* (* 2.0 l_0_7_217) l_0_7_232)) 0.0))))))))))))
(assert
 (let ((?x14719 (* l_0_7_99 l_0_7_99)))
 (let ((?x14713 (* l_0_7_98 l_0_7_98)))
 (let ((?x14707 (* l_0_7_97 l_0_7_97)))
 (let ((?x14701 (* l_0_7_96 l_0_7_96)))
 (let ((?x14695 (* l_0_7_95 l_0_7_95)))
 (let ((?x14689 (* l_0_7_94 l_0_7_94)))
 (let ((?x11335 (* 2.0 l_0_7_253)))
 (let ((?x15460 (* ?x11335 l_0_7_274)))
 (let ((?x14643 (* l_0_7_136 l_0_7_136)))
 (let ((?x14640 (* l_0_7_135 l_0_7_135)))
 (let ((?x14637 (* l_0_7_134 l_0_7_134)))
 (let ((?x14634 (* l_0_7_133 l_0_7_133)))
 (let ((?x14631 (* l_0_7_132 l_0_7_132)))
 (let ((?x14628 (* l_0_7_131 l_0_7_131)))
 (let ((?x15776 (- (- (- (* l_0_7_100 l_0_7_100) (* l_0_7_130 l_0_7_130)) ?x14628) ?x14631)))
 (let ((?x15783 (+ (+ (+ (- (- (- (- ?x15776 ?x14634) ?x14637) ?x14640) ?x14643) ?x15460) ?x14689) ?x14695)))
 (= (+ (+ (+ (+ ?x15783 ?x14701) ?x14707) ?x14713) ?x14719) 0.0))))))))))))))))))
(assert
 (let ((?x14865 (* l_0_7_144 l_0_7_144)))
 (let ((?x14862 (* l_0_7_143 l_0_7_143)))
 (let ((?x14859 (* l_0_7_142 l_0_7_142)))
 (let ((?x14856 (* l_0_7_141 l_0_7_141)))
 (let ((?x14853 (* l_0_7_140 l_0_7_140)))
 (let ((?x14850 (* l_0_7_139 l_0_7_139)))
 (let ((?x14847 (* l_0_7_138 l_0_7_138)))
 (let ((?x14844 (* l_0_7_137 l_0_7_137)))
 (let ((?x14915 (* l_0_7_108 l_0_7_108)))
 (let ((?x14909 (* l_0_7_107 l_0_7_107)))
 (let ((?x14903 (* l_0_7_106 l_0_7_106)))
 (let ((?x14897 (* l_0_7_105 l_0_7_105)))
 (let ((?x14891 (* l_0_7_104 l_0_7_104)))
 (let ((?x14885 (* l_0_7_103 l_0_7_103)))
 (let ((?x15821 (+ (+ (+ (* l_0_7_101 l_0_7_101) (* l_0_7_102 l_0_7_102)) ?x14885) ?x14891)))
 (let ((?x15828 (- (- (- (+ (+ (+ (+ ?x15821 ?x14897) ?x14903) ?x14909) ?x14915) ?x14844) ?x14847) ?x14850)))
 (let ((?x15835 (- (- (- (- (- (- ?x15828 ?x14853) ?x14856) ?x14859) ?x14862) ?x14865) (* (* 2.0 l_0_7_217) l_0_7_245))))
 (= ?x15835 0.0)))))))))))))))))))
(assert
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8088 (* ?x8087 l_0_7_185)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8085 (* ?x8084 l_0_7_184)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8082 (* ?x8076 l_0_7_149)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x8509 (* ?x8283 l_0_7_148)))
 (let ((?x15882 (- (- (- (+ ?x8509 ?x8082) ?x8085) ?x8088) (* (* 2.0 l_0_7_292) l_0_7_304))))
 (let ((?x15886 (- (- ?x15882 (* (* 2.0 l_0_7_293) l_0_7_305)) (* (* 2.0 l_0_7_294) l_0_7_306))))
 (= ?x15886 0.0))))))))))))
(assert
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x15919 (* ?x11684 l_0_7_269)))
 (let ((?x11681 (* 2.0 l_0_7_254)))
 (let ((?x15917 (* ?x11681 l_0_7_268)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8290 (* ?x8087 l_0_7_192)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8288 (* ?x8084 l_0_7_191)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8286 (* ?x8076 l_0_7_156)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x8284 (* ?x8283 l_0_7_155)))
 (let ((?x15923 (- (- (- (- (- (+ ?x8284 ?x8286) ?x8288) ?x8290) ?x15917) ?x15919) (* (* 2.0 l_0_7_299) l_0_7_304))))
 (let ((?x15929 (- (- ?x15923 (* (* 2.0 l_0_7_300) l_0_7_305)) (* (* 2.0 l_0_7_301) l_0_7_306))))
 (let ((?x15935 (- (- ?x15929 (* (* 2.0 l_0_7_302) l_0_7_307)) (* (* 2.0 l_0_7_303) l_0_7_308))))
 (= ?x15935 0.0)))))))))))))))))
(assert
 (let ((?x16000 (* l_0_7_309 l_0_7_309)))
 (let ((?x15998 (* l_0_7_308 l_0_7_308)))
 (let ((?x15996 (* l_0_7_307 l_0_7_307)))
 (let ((?x15994 (* l_0_7_306 l_0_7_306)))
 (let ((?x15992 (* l_0_7_305 l_0_7_305)))
 (let ((?x15990 (* l_0_7_304 l_0_7_304)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8402 (* ?x8087 l_0_7_197)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8400 (* ?x8084 l_0_7_196)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8376 (* ?x8076 l_0_7_161)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x13462 (* ?x8283 l_0_7_160)))
 (let ((?x15997 (- (- (- (- (- (- (+ ?x13462 ?x8376) ?x8400) ?x8402) ?x15990) ?x15992) ?x15994) ?x15996)))
 (= (- (- ?x15997 ?x15998) ?x16000) 0.0)))))))))))))))))
(assert
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x15919 (* ?x11684 l_0_7_269)))
 (let ((?x11681 (* 2.0 l_0_7_254)))
 (let ((?x15917 (* ?x11681 l_0_7_268)))
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8518 (* ?x8087 l_0_7_203)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8516 (* ?x8084 l_0_7_202)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8514 (* ?x8076 l_0_7_167)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x8511 (* ?x8283 l_0_7_166)))
 (let ((?x16036 (- (+ (+ (- (- (+ ?x8511 ?x8514) ?x8516) ?x8518) ?x15917) ?x15919) (* (* 2.0 l_0_7_304) l_0_7_310))))
 (let ((?x16042 (- (- ?x16036 (* (* 2.0 l_0_7_305) l_0_7_311)) (* (* 2.0 l_0_7_306) l_0_7_312))))
 (let ((?x16048 (- (- ?x16042 (* (* 2.0 l_0_7_307) l_0_7_313)) (* (* 2.0 l_0_7_308) l_0_7_314))))
 (= (- ?x16048 (* (* 2.0 l_0_7_309) l_0_7_315)) 0.0)))))))))))))))))
(assert
 (let ((?x8087 (* 2.0 l_0_7_183)))
 (let ((?x8626 (* ?x8087 l_0_7_210)))
 (let ((?x8084 (* 2.0 l_0_7_182)))
 (let ((?x8624 (* ?x8084 l_0_7_209)))
 (let ((?x8076 (* 2.0 l_0_7_147)))
 (let ((?x8622 (* ?x8076 l_0_7_174)))
 (let ((?x8283 (* 2.0 l_0_7_146)))
 (let ((?x13696 (* ?x8283 l_0_7_173)))
 (let ((?x16102 (- (- (- (+ ?x13696 ?x8622) ?x8624) ?x8626) (* (* 2.0 l_0_7_218) l_0_7_232))))
 (let ((?x16106 (- (- ?x16102 (* (* 2.0 l_0_7_219) l_0_7_233)) (* (* 2.0 l_0_7_304) l_0_7_317))))
 (let ((?x16110 (- (- ?x16106 (* (* 2.0 l_0_7_305) l_0_7_318)) (* (* 2.0 l_0_7_306) l_0_7_319))))
 (let ((?x16114 (- (- ?x16110 (* (* 2.0 l_0_7_307) l_0_7_320)) (* (* 2.0 l_0_7_308) l_0_7_321))))
 (= (- ?x16114 (* (* 2.0 l_0_7_309) l_0_7_322)) 0.0))))))))))))))
(assert
 (let ((?x8705 (* l_0_7_186 l_0_7_186)))
 (let ((?x8703 (* l_0_7_185 l_0_7_185)))
 (let ((?x8701 (* l_0_7_184 l_0_7_184)))
 (let ((?x8699 (* l_0_7_150 l_0_7_150)))
 (let ((?x16176 (- (+ (+ (* l_0_7_148 l_0_7_148) (* l_0_7_149 l_0_7_149)) ?x8699) ?x8701)))
 (= (- (- ?x16176 ?x8703) ?x8705) 0.0)))))))
(assert
 (let ((?x8304 (* 2.0 l_0_7_258)))
 (let ((?x16197 (* ?x8304 l_0_7_270)))
 (let ((?x8301 (* 2.0 l_0_7_257)))
 (let ((?x16195 (* ?x8301 l_0_7_269)))
 (let ((?x8298 (* 2.0 l_0_7_256)))
 (let ((?x16193 (* ?x8298 l_0_7_268)))
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8847 (* ?x8410 l_0_7_193)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8845 (* ?x8407 l_0_7_192)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8843 (* ?x8404 l_0_7_191)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8841 (* ?x8391 l_0_7_157)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8839 (* ?x8388 l_0_7_156)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x8837 (* ?x8385 l_0_7_155)))
 (let ((?x16196 (- (- (- (- (- (+ (+ ?x8837 ?x8839) ?x8841) ?x8843) ?x8845) ?x8847) ?x16193) ?x16195)))
 (= (- ?x16196 ?x16197) 0.0)))))))))))))))))))))
(assert
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8919 (* ?x8410 l_0_7_198)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8917 (* ?x8407 l_0_7_197)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8915 (* ?x8404 l_0_7_196)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8895 (* ?x8391 l_0_7_162)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8891 (* ?x8388 l_0_7_161)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x10280 (* ?x8385 l_0_7_160)))
 (= (- (- (- (+ (+ ?x10280 ?x8891) ?x8895) ?x8915) ?x8917) ?x8919) 0.0))))))))))))))
(assert
 (let ((?x8304 (* 2.0 l_0_7_258)))
 (let ((?x16197 (* ?x8304 l_0_7_270)))
 (let ((?x8301 (* 2.0 l_0_7_257)))
 (let ((?x16195 (* ?x8301 l_0_7_269)))
 (let ((?x8298 (* 2.0 l_0_7_256)))
 (let ((?x16193 (* ?x8298 l_0_7_268)))
 (let ((?x8410 (* 2.0 l_0_7_186)))
 (let ((?x8997 (* ?x8410 l_0_7_204)))
 (let ((?x8407 (* 2.0 l_0_7_185)))
 (let ((?x8995 (* ?x8407 l_0_7_203)))
 (let ((?x8404 (* 2.0 l_0_7_184)))
 (let ((?x8993 (* ?x8404 l_0_7_202)))
 (let ((?x8391 (* 2.0 l_0_7_150)))
 (let ((?x8990 (* ?x8391 l_0_7_168)))
 (let ((?x8388 (* 2.0 l_0_7_149)))
 (let ((?x8987 (* ?x8388 l_0_7_167)))
 (let ((?x8385 (* 2.0 l_0_7_148)))
 (let ((?x8984 (* ?x8385 l_0_7_166)))
 (let ((?x16258 (+ (+ (- (- (- (+ (+ ?x8984 ?x8987) ?x8990) ?x8993) ?x8995) ?x8997) ?x16193) ?x16195)))
 (= (+ ?x16258 ?x16197) 0.0)))))))))))))))))))))
(assert
 (let ((?x13323 (* 2.0 l_0_7_267)))
 (let ((?x16290 (* ?x13323 l_0_7_272)))
 (let ((?x13320 (* 2.0 l_0_7_266)))
 (let ((?x16288 (* ?x13320 l_0_7_271)))
 (let ((?x13317 (* 2.0 l_0_7_265)))
 (let ((?x16286 (* ?x13317 l_0_7_270)))
 (let ((?x13314 (* 2.0 l_0_7_264)))
 (let ((?x16284 (* ?x13314 l_0_7_269)))
 (let ((?x13311 (* 2.0 l_0_7_263)))
 (let ((?x16282 (* ?x13311 l_0_7_268)))
 (let ((?x9694 (* l_0_7_195 l_0_7_195)))
 (let ((?x9692 (* l_0_7_194 l_0_7_194)))
 (let ((?x9690 (* l_0_7_193 l_0_7_193)))
 (let ((?x9688 (* l_0_7_192 l_0_7_192)))
 (let ((?x9686 (* l_0_7_191 l_0_7_191)))
 (let ((?x9684 (* l_0_7_159 l_0_7_159)))
 (let ((?x9682 (* l_0_7_158 l_0_7_158)))
 (let ((?x9680 (* l_0_7_157 l_0_7_157)))
 (let ((?x16275 (+ (+ (+ (* l_0_7_155 l_0_7_155) (* l_0_7_156 l_0_7_156)) ?x9680) ?x9682)))
 (let ((?x16283 (- (- (- (- (- (- (+ ?x16275 ?x9684) ?x9686) ?x9688) ?x9690) ?x9692) ?x9694) ?x16282)))
 (= (- (- (- (- ?x16283 ?x16284) ?x16286) ?x16288) ?x16290) 0.0))))))))))))))))))))))
(assert
 (let ((?x16354 (* l_0_7_273 l_0_7_273)))
 (let ((?x16352 (* l_0_7_272 l_0_7_272)))
 (let ((?x16350 (* l_0_7_271 l_0_7_271)))
 (let ((?x16348 (* l_0_7_270 l_0_7_270)))
 (let ((?x16346 (* l_0_7_269 l_0_7_269)))
 (let ((?x16344 (* l_0_7_268 l_0_7_268)))
 (let ((?x9787 (* 2.0 l_0_7_195)))
 (let ((?x9788 (* ?x9787 l_0_7_200)))
 (let ((?x9784 (* 2.0 l_0_7_194)))
 (let ((?x9785 (* ?x9784 l_0_7_199)))
 (let ((?x9781 (* 2.0 l_0_7_193)))
 (let ((?x9782 (* ?x9781 l_0_7_198)))
 (let ((?x9778 (* 2.0 l_0_7_192)))
 (let ((?x9779 (* ?x9778 l_0_7_197)))
 (let ((?x9775 (* 2.0 l_0_7_191)))
 (let ((?x9776 (* ?x9775 l_0_7_196)))
 (let ((?x9772 (* 2.0 l_0_7_159)))
 (let ((?x9773 (* ?x9772 l_0_7_164)))
 (let ((?x9769 (* 2.0 l_0_7_158)))
 (let ((?x9770 (* ?x9769 l_0_7_163)))
 (let ((?x9766 (* 2.0 l_0_7_157)))
 (let ((?x9767 (* ?x9766 l_0_7_162)))
 (let ((?x9763 (* 2.0 l_0_7_156)))
 (let ((?x9764 (* ?x9763 l_0_7_161)))
 (let ((?x9760 (* 2.0 l_0_7_155)))
 (let ((?x9761 (* ?x9760 l_0_7_160)))
 (let ((?x16341 (- (- (- (+ (+ (+ (+ ?x9761 ?x9764) ?x9767) ?x9770) ?x9773) ?x9776) ?x9779) ?x9782)))
 (let ((?x16353 (- (- (- (- (- (- (- ?x16341 ?x9785) ?x9788) ?x16344) ?x16346) ?x16348) ?x16350) ?x16352)))
 (= (- ?x16353 ?x16354) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x13512 (* 2.0 l_0_7_273)))
 (let ((?x16421 (* ?x13512 l_0_7_279)))
 (let ((?x13509 (* 2.0 l_0_7_272)))
 (let ((?x16419 (* ?x13509 l_0_7_278)))
 (let ((?x13506 (* 2.0 l_0_7_271)))
 (let ((?x16417 (* ?x13506 l_0_7_277)))
 (let ((?x13503 (* 2.0 l_0_7_270)))
 (let ((?x16415 (* ?x13503 l_0_7_276)))
 (let ((?x13500 (* 2.0 l_0_7_269)))
 (let ((?x16413 (* ?x13500 l_0_7_275)))
 (let ((?x13497 (* 2.0 l_0_7_268)))
 (let ((?x16411 (* ?x13497 l_0_7_274)))
 (let ((?x13323 (* 2.0 l_0_7_267)))
 (let ((?x16290 (* ?x13323 l_0_7_272)))
 (let ((?x13320 (* 2.0 l_0_7_266)))
 (let ((?x16288 (* ?x13320 l_0_7_271)))
 (let ((?x13317 (* 2.0 l_0_7_265)))
 (let ((?x16286 (* ?x13317 l_0_7_270)))
 (let ((?x13314 (* 2.0 l_0_7_264)))
 (let ((?x16284 (* ?x13314 l_0_7_269)))
 (let ((?x13311 (* 2.0 l_0_7_263)))
 (let ((?x16282 (* ?x13311 l_0_7_268)))
 (let ((?x9787 (* 2.0 l_0_7_195)))
 (let ((?x9921 (* ?x9787 l_0_7_206)))
 (let ((?x9784 (* 2.0 l_0_7_194)))
 (let ((?x9919 (* ?x9784 l_0_7_205)))
 (let ((?x9781 (* 2.0 l_0_7_193)))
 (let ((?x9917 (* ?x9781 l_0_7_204)))
 (let ((?x9778 (* 2.0 l_0_7_192)))
 (let ((?x9915 (* ?x9778 l_0_7_203)))
 (let ((?x9775 (* 2.0 l_0_7_191)))
 (let ((?x9913 (* ?x9775 l_0_7_202)))
 (let ((?x9772 (* 2.0 l_0_7_159)))
 (let ((?x9911 (* ?x9772 l_0_7_170)))
 (let ((?x9769 (* 2.0 l_0_7_158)))
 (let ((?x9909 (* ?x9769 l_0_7_169)))
 (let ((?x9766 (* 2.0 l_0_7_157)))
 (let ((?x9907 (* ?x9766 l_0_7_168)))
 (let ((?x9763 (* 2.0 l_0_7_156)))
 (let ((?x9905 (* ?x9763 l_0_7_167)))
 (let ((?x9760 (* 2.0 l_0_7_155)))
 (let ((?x9903 (* ?x9760 l_0_7_166)))
 (let ((?x16403 (- (- (- (+ (+ (+ (+ ?x9903 ?x9905) ?x9907) ?x9909) ?x9911) ?x9913) ?x9915) ?x9917)))
 (let ((?x16410 (+ (+ (+ (+ (+ (- (- ?x16403 ?x9919) ?x9921) ?x16282) ?x16284) ?x16286) ?x16288) ?x16290)))
 (= (- (- (- (- (- (- ?x16410 ?x16411) ?x16413) ?x16415) ?x16417) ?x16419) ?x16421) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13512 (* 2.0 l_0_7_273)))
 (let ((?x13513 (* ?x13512 l_0_7_286)))
 (let ((?x13509 (* 2.0 l_0_7_272)))
 (let ((?x13510 (* ?x13509 l_0_7_285)))
 (let ((?x13506 (* 2.0 l_0_7_271)))
 (let ((?x13507 (* ?x13506 l_0_7_284)))
 (let ((?x13503 (* 2.0 l_0_7_270)))
 (let ((?x13504 (* ?x13503 l_0_7_283)))
 (let ((?x13500 (* 2.0 l_0_7_269)))
 (let ((?x13501 (* ?x13500 l_0_7_282)))
 (let ((?x13497 (* 2.0 l_0_7_268)))
 (let ((?x13498 (* ?x13497 l_0_7_281)))
 (let ((?x9787 (* 2.0 l_0_7_195)))
 (let ((?x10082 (* ?x9787 l_0_7_213)))
 (let ((?x9784 (* 2.0 l_0_7_194)))
 (let ((?x10080 (* ?x9784 l_0_7_212)))
 (let ((?x9781 (* 2.0 l_0_7_193)))
 (let ((?x10078 (* ?x9781 l_0_7_211)))
 (let ((?x9778 (* 2.0 l_0_7_192)))
 (let ((?x10076 (* ?x9778 l_0_7_210)))
 (let ((?x9775 (* 2.0 l_0_7_191)))
 (let ((?x10074 (* ?x9775 l_0_7_209)))
 (let ((?x9772 (* 2.0 l_0_7_159)))
 (let ((?x10072 (* ?x9772 l_0_7_177)))
 (let ((?x9769 (* 2.0 l_0_7_158)))
 (let ((?x10070 (* ?x9769 l_0_7_176)))
 (let ((?x9766 (* 2.0 l_0_7_157)))
 (let ((?x10068 (* ?x9766 l_0_7_175)))
 (let ((?x9763 (* 2.0 l_0_7_156)))
 (let ((?x10066 (* ?x9763 l_0_7_174)))
 (let ((?x9760 (* 2.0 l_0_7_155)))
 (let ((?x10064 (* ?x9760 l_0_7_173)))
 (let ((?x16484 (- (- (- (+ (+ (+ (+ ?x10064 ?x10066) ?x10068) ?x10070) ?x10072) ?x10074) ?x10076) ?x10078)))
 (let ((?x16490 (- (- (- (- ?x16484 ?x10080) ?x10082) (* (* 2.0 l_0_7_227) l_0_7_232)) (* (* 2.0 l_0_7_228) l_0_7_233))))
 (let ((?x16494 (- (- ?x16490 (* (* 2.0 l_0_7_229) l_0_7_234)) (* (* 2.0 l_0_7_230) l_0_7_235))))
 (let ((?x16499 (- (- (- (- ?x16494 (* (* 2.0 l_0_7_231) l_0_7_236)) ?x13498) ?x13501) ?x13504)))
 (= (- (- (- ?x16499 ?x13507) ?x13510) ?x13513) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10206 (* l_0_7_201 l_0_7_201)))
 (let ((?x10204 (* l_0_7_200 l_0_7_200)))
 (let ((?x10200 (* l_0_7_199 l_0_7_199)))
 (let ((?x10198 (* l_0_7_198 l_0_7_198)))
 (let ((?x10196 (* l_0_7_197 l_0_7_197)))
 (let ((?x10194 (* l_0_7_196 l_0_7_196)))
 (let ((?x10186 (* l_0_7_165 l_0_7_165)))
 (let ((?x10171 (* l_0_7_164 l_0_7_164)))
 (let ((?x10168 (* l_0_7_163 l_0_7_163)))
 (let ((?x10164 (* l_0_7_162 l_0_7_162)))
 (let ((?x16576 (+ (+ (+ (* l_0_7_160 l_0_7_160) (* l_0_7_161 l_0_7_161)) ?x10164) ?x10168)))
 (let ((?x16583 (- (- (- (- (- (+ (+ ?x16576 ?x10171) ?x10186) ?x10194) ?x10196) ?x10198) ?x10200) ?x10204)))
 (= (- ?x16583 ?x10206) 0.0))))))))))))))
(assert
 (let ((?x16354 (* l_0_7_273 l_0_7_273)))
 (let ((?x16352 (* l_0_7_272 l_0_7_272)))
 (let ((?x16350 (* l_0_7_271 l_0_7_271)))
 (let ((?x16348 (* l_0_7_270 l_0_7_270)))
 (let ((?x16346 (* l_0_7_269 l_0_7_269)))
 (let ((?x16344 (* l_0_7_268 l_0_7_268)))
 (let ((?x10329 (* 2.0 l_0_7_201)))
 (let ((?x10330 (* ?x10329 l_0_7_207)))
 (let ((?x10326 (* 2.0 l_0_7_200)))
 (let ((?x10327 (* ?x10326 l_0_7_206)))
 (let ((?x10320 (* 2.0 l_0_7_199)))
 (let ((?x10321 (* ?x10320 l_0_7_205)))
 (let ((?x10317 (* 2.0 l_0_7_198)))
 (let ((?x10318 (* ?x10317 l_0_7_204)))
 (let ((?x10314 (* 2.0 l_0_7_197)))
 (let ((?x10315 (* ?x10314 l_0_7_203)))
 (let ((?x10311 (* 2.0 l_0_7_196)))
 (let ((?x10312 (* ?x10311 l_0_7_202)))
 (let ((?x10301 (* 2.0 l_0_7_165)))
 (let ((?x10302 (* ?x10301 l_0_7_171)))
 (let ((?x10298 (* 2.0 l_0_7_164)))
 (let ((?x10299 (* ?x10298 l_0_7_170)))
 (let ((?x10295 (* 2.0 l_0_7_163)))
 (let ((?x10296 (* ?x10295 l_0_7_169)))
 (let ((?x10292 (* 2.0 l_0_7_162)))
 (let ((?x10293 (* ?x10292 l_0_7_168)))
 (let ((?x10289 (* 2.0 l_0_7_161)))
 (let ((?x10290 (* ?x10289 l_0_7_167)))
 (let ((?x10286 (* 2.0 l_0_7_160)))
 (let ((?x10287 (* ?x10286 l_0_7_166)))
 (let ((?x16606 (- (- (+ (+ (+ (+ (+ ?x10287 ?x10290) ?x10293) ?x10296) ?x10299) ?x10302) ?x10312) ?x10315)))
 (let ((?x16613 (+ (+ (+ (- (- (- (- ?x16606 ?x10318) ?x10321) ?x10327) ?x10330) ?x16344) ?x16346) ?x16348)))
 (= (+ (+ (+ ?x16613 ?x16350) ?x16352) ?x16354) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16660 (* l_0_7_237 l_0_7_237)))
 (let ((?x16658 (* l_0_7_236 l_0_7_236)))
 (let ((?x16656 (* l_0_7_235 l_0_7_235)))
 (let ((?x16654 (* l_0_7_234 l_0_7_234)))
 (let ((?x16652 (* l_0_7_233 l_0_7_233)))
 (let ((?x16650 (* l_0_7_232 l_0_7_232)))
 (let ((?x10329 (* 2.0 l_0_7_201)))
 (let ((?x10531 (* ?x10329 l_0_7_214)))
 (let ((?x10326 (* 2.0 l_0_7_200)))
 (let ((?x10529 (* ?x10326 l_0_7_213)))
 (let ((?x10320 (* 2.0 l_0_7_199)))
 (let ((?x10525 (* ?x10320 l_0_7_212)))
 (let ((?x10317 (* 2.0 l_0_7_198)))
 (let ((?x10523 (* ?x10317 l_0_7_211)))
 (let ((?x10314 (* 2.0 l_0_7_197)))
 (let ((?x10521 (* ?x10314 l_0_7_210)))
 (let ((?x10311 (* 2.0 l_0_7_196)))
 (let ((?x10519 (* ?x10311 l_0_7_209)))
 (let ((?x10301 (* 2.0 l_0_7_165)))
 (let ((?x10511 (* ?x10301 l_0_7_178)))
 (let ((?x10298 (* 2.0 l_0_7_164)))
 (let ((?x10509 (* ?x10298 l_0_7_177)))
 (let ((?x10295 (* 2.0 l_0_7_163)))
 (let ((?x10507 (* ?x10295 l_0_7_176)))
 (let ((?x10292 (* 2.0 l_0_7_162)))
 (let ((?x10505 (* ?x10292 l_0_7_175)))
 (let ((?x10289 (* 2.0 l_0_7_161)))
 (let ((?x10503 (* ?x10289 l_0_7_174)))
 (let ((?x10286 (* 2.0 l_0_7_160)))
 (let ((?x10501 (* ?x10286 l_0_7_173)))
 (let ((?x16645 (- (- (+ (+ (+ (+ (+ ?x10501 ?x10503) ?x10505) ?x10507) ?x10509) ?x10511) ?x10519) ?x10521)))
 (let ((?x16655 (- (- (- (- (- (- (- ?x16645 ?x10523) ?x10525) ?x10529) ?x10531) ?x16650) ?x16652) ?x16654)))
 (= (- (- (- ?x16655 ?x16656) ?x16658) ?x16660) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13512 (* 2.0 l_0_7_273)))
 (let ((?x16421 (* ?x13512 l_0_7_279)))
 (let ((?x13509 (* 2.0 l_0_7_272)))
 (let ((?x16419 (* ?x13509 l_0_7_278)))
 (let ((?x13506 (* 2.0 l_0_7_271)))
 (let ((?x16417 (* ?x13506 l_0_7_277)))
 (let ((?x13503 (* 2.0 l_0_7_270)))
 (let ((?x16415 (* ?x13503 l_0_7_276)))
 (let ((?x13500 (* 2.0 l_0_7_269)))
 (let ((?x16413 (* ?x13500 l_0_7_275)))
 (let ((?x13497 (* 2.0 l_0_7_268)))
 (let ((?x16411 (* ?x13497 l_0_7_274)))
 (let ((?x10685 (* l_0_7_208 l_0_7_208)))
 (let ((?x10683 (* l_0_7_207 l_0_7_207)))
 (let ((?x10681 (* l_0_7_206 l_0_7_206)))
 (let ((?x10679 (* l_0_7_205 l_0_7_205)))
 (let ((?x10677 (* l_0_7_204 l_0_7_204)))
 (let ((?x10675 (* l_0_7_203 l_0_7_203)))
 (let ((?x10673 (* l_0_7_202 l_0_7_202)))
 (let ((?x10671 (* l_0_7_172 l_0_7_172)))
 (let ((?x10669 (* l_0_7_171 l_0_7_171)))
 (let ((?x10667 (* l_0_7_170 l_0_7_170)))
 (let ((?x10665 (* l_0_7_169 l_0_7_169)))
 (let ((?x10663 (* l_0_7_168 l_0_7_168)))
 (let ((?x16703 (+ (+ (+ (* l_0_7_166 l_0_7_166) (* l_0_7_167 l_0_7_167)) ?x10663) ?x10665)))
 (let ((?x16710 (- (- (- (- (+ (+ (+ ?x16703 ?x10667) ?x10669) ?x10671) ?x10673) ?x10675) ?x10677) ?x10679)))
 (let ((?x16717 (+ (+ (+ (+ (- (- (- ?x16710 ?x10681) ?x10683) ?x10685) ?x16411) ?x16413) ?x16415) ?x16417)))
 (= (+ (+ ?x16717 ?x16419) ?x16421) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x11075 (* l_0_7_216 l_0_7_216)))
 (let ((?x11073 (* l_0_7_215 l_0_7_215)))
 (let ((?x11071 (* l_0_7_214 l_0_7_214)))
 (let ((?x11069 (* l_0_7_213 l_0_7_213)))
 (let ((?x11067 (* l_0_7_212 l_0_7_212)))
 (let ((?x11065 (* l_0_7_211 l_0_7_211)))
 (let ((?x11063 (* l_0_7_210 l_0_7_210)))
 (let ((?x11061 (* l_0_7_209 l_0_7_209)))
 (let ((?x11059 (* l_0_7_180 l_0_7_180)))
 (let ((?x11057 (* l_0_7_179 l_0_7_179)))
 (let ((?x11055 (* l_0_7_178 l_0_7_178)))
 (let ((?x11053 (* l_0_7_177 l_0_7_177)))
 (let ((?x11032 (* l_0_7_176 l_0_7_176)))
 (let ((?x11028 (* l_0_7_175 l_0_7_175)))
 (let ((?x16740 (+ (+ (+ (* l_0_7_173 l_0_7_173) (* l_0_7_174 l_0_7_174)) ?x11028) ?x11032)))
 (let ((?x16747 (- (- (- (+ (+ (+ (+ ?x16740 ?x11053) ?x11055) ?x11057) ?x11059) ?x11061) ?x11063) ?x11065)))
 (let ((?x16754 (- (- (- (- (- (- ?x16747 ?x11067) ?x11069) ?x11071) ?x11073) ?x11075) (* (* 2.0 l_0_7_232) l_0_7_245))))
 (let ((?x16758 (- (- ?x16754 (* (* 2.0 l_0_7_233) l_0_7_246)) (* (* 2.0 l_0_7_234) l_0_7_247))))
 (let ((?x16762 (- (- ?x16758 (* (* 2.0 l_0_7_235) l_0_7_248)) (* (* 2.0 l_0_7_236) l_0_7_249))))
 (= (- ?x16762 (* (* 2.0 l_0_7_237) l_0_7_250)) 0.0)))))))))))))))))))))
(assert
 (let ((?x16825 (- (- (* (- l_0_7_218) l_0_7_218) (* l_0_7_219 l_0_7_219)) (* (* 2.0 l_0_7_290) l_0_7_317))))
 (= (- ?x16825 (* (* 2.0 l_0_7_291) l_0_7_318)) 0.0)))
(assert
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x13180 (* ?x11684 l_0_7_282)))
 (let ((?x11681 (* 2.0 l_0_7_254)))
 (let ((?x13178 (* ?x11681 l_0_7_281)))
 (let ((?x16852 (- (* (* (- 2.0) l_0_7_218) l_0_7_227) (* (* 2.0 l_0_7_219) l_0_7_228))))
 (let ((?x16858 (- (- (- (- ?x16852 ?x13178) ?x13180) (* (* 2.0 l_0_7_299) l_0_7_317)) (* (* 2.0 l_0_7_300) l_0_7_318))))
 (let ((?x16862 (- (- ?x16858 (* (* 2.0 l_0_7_301) l_0_7_319)) (* (* 2.0 l_0_7_302) l_0_7_320))))
 (= (- ?x16862 (* (* 2.0 l_0_7_303) l_0_7_321)) 0.0)))))))))
(assert
 (let ((?x16930 (* l_0_7_324 l_0_7_324)))
 (let ((?x16928 (* l_0_7_323 l_0_7_323)))
 (let ((?x16926 (* l_0_7_322 l_0_7_322)))
 (let ((?x16924 (* l_0_7_321 l_0_7_321)))
 (let ((?x16922 (* l_0_7_320 l_0_7_320)))
 (let ((?x16920 (* l_0_7_319 l_0_7_319)))
 (let ((?x16918 (* l_0_7_318 l_0_7_318)))
 (let ((?x16916 (* l_0_7_317 l_0_7_317)))
 (let ((?x16915 (- (* (* (- 2.0) l_0_7_218) l_0_7_245) (* (* 2.0 l_0_7_219) l_0_7_246))))
 (let ((?x16929 (- (- (- (- (- (- (- ?x16915 ?x16916) ?x16918) ?x16920) ?x16922) ?x16924) ?x16926) ?x16928)))
 (= (- ?x16929 ?x16930) 0.0))))))))))))
(assert
 (let ((?x13323 (* 2.0 l_0_7_267)))
 (let ((?x13324 (* ?x13323 l_0_7_285)))
 (let ((?x13320 (* 2.0 l_0_7_266)))
 (let ((?x13321 (* ?x13320 l_0_7_284)))
 (let ((?x13317 (* 2.0 l_0_7_265)))
 (let ((?x13318 (* ?x13317 l_0_7_283)))
 (let ((?x13314 (* 2.0 l_0_7_264)))
 (let ((?x13315 (* ?x13314 l_0_7_282)))
 (let ((?x13311 (* 2.0 l_0_7_263)))
 (let ((?x13312 (* ?x13311 l_0_7_281)))
 (let ((?x16976 (* l_0_7_231 l_0_7_231)))
 (let ((?x16974 (* l_0_7_230 l_0_7_230)))
 (let ((?x16972 (* l_0_7_229 l_0_7_229)))
 (let ((?x16973 (- (- (* (- l_0_7_227) l_0_7_227) (* l_0_7_228 l_0_7_228)) ?x16972)))
 (let ((?x16982 (- (- (- (- (- (- (- ?x16973 ?x16974) ?x16976) ?x13312) ?x13315) ?x13318) ?x13321) ?x13324)))
 (= ?x16982 0.0)))))))))))))))))
(assert
 (let ((?x13734 (* l_0_7_288 l_0_7_288)))
 (let ((?x13732 (* l_0_7_287 l_0_7_287)))
 (let ((?x13730 (* l_0_7_286 l_0_7_286)))
 (let ((?x13728 (* l_0_7_285 l_0_7_285)))
 (let ((?x13726 (* l_0_7_284 l_0_7_284)))
 (let ((?x13724 (* l_0_7_283 l_0_7_283)))
 (let ((?x13722 (* l_0_7_282 l_0_7_282)))
 (let ((?x13720 (* l_0_7_281 l_0_7_281)))
 (let ((?x17019 (- (* (* (- 2.0) l_0_7_227) l_0_7_245) (* (* 2.0 l_0_7_228) l_0_7_246))))
 (let ((?x17023 (- (- ?x17019 (* (* 2.0 l_0_7_229) l_0_7_247)) (* (* 2.0 l_0_7_230) l_0_7_248))))
 (let ((?x17028 (- (- (- (- ?x17023 (* (* 2.0 l_0_7_231) l_0_7_249)) ?x13720) ?x13722) ?x13724)))
 (= (- (- (- (- (- ?x17028 ?x13726) ?x13728) ?x13730) ?x13732) ?x13734) 0.0)))))))))))))
(assert
 (let ((?x17094 (* l_0_7_252 l_0_7_252)))
 (let ((?x17092 (* l_0_7_251 l_0_7_251)))
 (let ((?x17090 (* l_0_7_250 l_0_7_250)))
 (let ((?x17088 (* l_0_7_249 l_0_7_249)))
 (let ((?x17086 (* l_0_7_248 l_0_7_248)))
 (let ((?x17084 (* l_0_7_247 l_0_7_247)))
 (let ((?x17085 (- (- (* (- l_0_7_245) l_0_7_245) (* l_0_7_246 l_0_7_246)) ?x17084)))
 (= (- (- (- (- (- ?x17085 ?x17086) ?x17088) ?x17090) ?x17092) ?x17094) 0.0)))))))))
(assert
 (let ((?x17127 (- (+ (* l_0_7_254 l_0_7_254) (* l_0_7_255 l_0_7_255)) (* (* 2.0 l_0_7_290) l_0_7_310))))
 (= (- ?x17127 (* (* 2.0 l_0_7_291) l_0_7_311)) 0.0)))
(assert
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x17145 (* ?x11684 l_0_7_257)))
 (let ((?x17148 (- (+ (* (* 2.0 l_0_7_254) l_0_7_256) ?x17145) (* (* 2.0 l_0_7_292) l_0_7_310))))
 (let ((?x17152 (- (- ?x17148 (* (* 2.0 l_0_7_293) l_0_7_311)) (* (* 2.0 l_0_7_294) l_0_7_312))))
 (= ?x17152 0.0))))))
(assert
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x17183 (* ?x11684 l_0_7_275)))
 (let ((?x17181 (* ?x11684 l_0_7_264)))
 (let ((?x11681 (* 2.0 l_0_7_254)))
 (let ((?x17179 (* ?x11681 l_0_7_274)))
 (let ((?x17186 (- (- (+ (- (* ?x11681 l_0_7_263) ?x17179) ?x17181) ?x17183) (* (* 2.0 l_0_7_299) l_0_7_310))))
 (let ((?x17190 (- (- ?x17186 (* (* 2.0 l_0_7_300) l_0_7_311)) (* (* 2.0 l_0_7_301) l_0_7_312))))
 (let ((?x17194 (- (- ?x17190 (* (* 2.0 l_0_7_302) l_0_7_313)) (* (* 2.0 l_0_7_303) l_0_7_314))))
 (= ?x17194 0.0))))))))))
(assert
 (let ((?x17257 (* l_0_7_316 l_0_7_316)))
 (let ((?x17255 (* l_0_7_315 l_0_7_315)))
 (let ((?x17253 (* l_0_7_314 l_0_7_314)))
 (let ((?x17251 (* l_0_7_313 l_0_7_313)))
 (let ((?x17249 (* l_0_7_312 l_0_7_312)))
 (let ((?x17247 (* l_0_7_311 l_0_7_311)))
 (let ((?x17245 (* l_0_7_310 l_0_7_310)))
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x17183 (* ?x11684 l_0_7_275)))
 (let ((?x11681 (* 2.0 l_0_7_254)))
 (let ((?x17179 (* ?x11681 l_0_7_274)))
 (let ((?x17256 (- (- (- (- (- (- (+ ?x17179 ?x17183) ?x17245) ?x17247) ?x17249) ?x17251) ?x17253) ?x17255)))
 (= (- ?x17256 ?x17257) 0.0))))))))))))))
(assert
 (let ((?x17286 (* l_0_7_258 l_0_7_258)))
 (= (+ (+ (* l_0_7_256 l_0_7_256) (* l_0_7_257 l_0_7_257)) ?x17286) 0.0)))
(assert
 (let ((?x8304 (* 2.0 l_0_7_258)))
 (let ((?x17300 (* ?x8304 l_0_7_276)))
 (let ((?x17298 (* ?x8304 l_0_7_265)))
 (let ((?x8301 (* 2.0 l_0_7_257)))
 (let ((?x17296 (* ?x8301 l_0_7_275)))
 (let ((?x17294 (* ?x8301 l_0_7_264)))
 (let ((?x8298 (* 2.0 l_0_7_256)))
 (let ((?x17292 (* ?x8298 l_0_7_274)))
 (= (- (+ (- (+ (- (* ?x8298 l_0_7_263) ?x17292) ?x17294) ?x17296) ?x17298) ?x17300) 0.0))))))))))
(assert
 (let ((?x8304 (* 2.0 l_0_7_258)))
 (let ((?x17300 (* ?x8304 l_0_7_276)))
 (let ((?x8301 (* 2.0 l_0_7_257)))
 (let ((?x17296 (* ?x8301 l_0_7_275)))
 (let ((?x8298 (* 2.0 l_0_7_256)))
 (let ((?x17292 (* ?x8298 l_0_7_274)))
 (= (+ (+ ?x17292 ?x17296) ?x17300) 0.0))))))))
(assert
 (let ((?x17353 (* l_0_7_267 l_0_7_267)))
 (let ((?x13323 (* 2.0 l_0_7_267)))
 (let ((?x17351 (* ?x13323 l_0_7_278)))
 (let ((?x17349 (* l_0_7_266 l_0_7_266)))
 (let ((?x13320 (* 2.0 l_0_7_266)))
 (let ((?x17347 (* ?x13320 l_0_7_277)))
 (let ((?x17345 (* l_0_7_265 l_0_7_265)))
 (let ((?x13317 (* 2.0 l_0_7_265)))
 (let ((?x17343 (* ?x13317 l_0_7_276)))
 (let ((?x17341 (* l_0_7_264 l_0_7_264)))
 (let ((?x13314 (* 2.0 l_0_7_264)))
 (let ((?x17339 (* ?x13314 l_0_7_275)))
 (let ((?x17340 (- (+ (* (* (- 2.0) l_0_7_263) l_0_7_274) (* l_0_7_263 l_0_7_263)) ?x17339)))
 (let ((?x17354 (+ (- (+ (- (+ (- (+ ?x17340 ?x17341) ?x17343) ?x17345) ?x17347) ?x17349) ?x17351) ?x17353)))
 (= ?x17354 0.0))))))))))))))))
(assert
 (let ((?x17405 (* l_0_7_280 l_0_7_280)))
 (let ((?x17403 (* l_0_7_279 l_0_7_279)))
 (let ((?x17401 (* l_0_7_278 l_0_7_278)))
 (let ((?x17399 (* l_0_7_277 l_0_7_277)))
 (let ((?x17397 (* l_0_7_276 l_0_7_276)))
 (let ((?x17395 (* l_0_7_275 l_0_7_275)))
 (let ((?x17393 (* l_0_7_274 l_0_7_274)))
 (let ((?x13323 (* 2.0 l_0_7_267)))
 (let ((?x17351 (* ?x13323 l_0_7_278)))
 (let ((?x13320 (* 2.0 l_0_7_266)))
 (let ((?x17347 (* ?x13320 l_0_7_277)))
 (let ((?x13317 (* 2.0 l_0_7_265)))
 (let ((?x17343 (* ?x13317 l_0_7_276)))
 (let ((?x13314 (* 2.0 l_0_7_264)))
 (let ((?x17339 (* ?x13314 l_0_7_275)))
 (let ((?x17392 (+ (+ (+ (+ (* (* 2.0 l_0_7_263) l_0_7_274) ?x17339) ?x17343) ?x17347) ?x17351)))
 (let ((?x17406 (- (- (- (- (- (- (- ?x17392 ?x17393) ?x17395) ?x17397) ?x17399) ?x17401) ?x17403) ?x17405)))
 (= ?x17406 0.0)))))))))))))))))))
(assert
 (let ((?x17405 (* l_0_7_280 l_0_7_280)))
 (let ((?x17403 (* l_0_7_279 l_0_7_279)))
 (let ((?x17401 (* l_0_7_278 l_0_7_278)))
 (let ((?x17399 (* l_0_7_277 l_0_7_277)))
 (let ((?x17397 (* l_0_7_276 l_0_7_276)))
 (let ((?x17434 (+ (+ (+ (* l_0_7_274 l_0_7_274) (* l_0_7_275 l_0_7_275)) ?x17397) ?x17399)))
 (= (+ (+ (+ ?x17434 ?x17401) ?x17403) ?x17405) 0.0))))))))
(assert
 (let ((?x17445 (- (- (* (- l_0_7_254) l_0_7_254) (* l_0_7_255 l_0_7_255)) (* (* 2.0 l_0_7_290) l_0_7_299))))
 (= (- ?x17445 (* (* 2.0 l_0_7_291) l_0_7_300)) 0.0)))
(assert
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x17145 (* ?x11684 l_0_7_257)))
 (let ((?x17471 (- (- (* (* (- 2.0) l_0_7_254) l_0_7_256) ?x17145) (* (* 2.0 l_0_7_292) l_0_7_299))))
 (let ((?x17475 (- (- ?x17471 (* (* 2.0 l_0_7_293) l_0_7_300)) (* (* 2.0 l_0_7_294) l_0_7_301))))
 (= ?x17475 0.0))))))
(assert
 (let ((?x17512 (* l_0_7_303 l_0_7_303)))
 (let ((?x17510 (* l_0_7_302 l_0_7_302)))
 (let ((?x17508 (* l_0_7_301 l_0_7_301)))
 (let ((?x17506 (* l_0_7_300 l_0_7_300)))
 (let ((?x17504 (* l_0_7_299 l_0_7_299)))
 (let ((?x11684 (* 2.0 l_0_7_255)))
 (let ((?x17181 (* ?x11684 l_0_7_264)))
 (let ((?x17509 (- (- (- (- (* (* (- 2.0) l_0_7_254) l_0_7_263) ?x17181) ?x17504) ?x17506) ?x17508)))
 (= (- (- ?x17509 ?x17510) ?x17512) 0.0))))))))))
(assert
 (let ((?x17286 (* l_0_7_258 l_0_7_258)))
 (let ((?x17540 (- (- (* (- l_0_7_256) l_0_7_256) (* l_0_7_257 l_0_7_257)) ?x17286)))
 (= ?x17540 0.0))))
(assert
 (let ((?x8304 (* 2.0 l_0_7_258)))
 (let ((?x17298 (* ?x8304 l_0_7_265)))
 (let ((?x8301 (* 2.0 l_0_7_257)))
 (let ((?x17294 (* ?x8301 l_0_7_264)))
 (= (- (- (* (* (- 2.0) l_0_7_256) l_0_7_263) ?x17294) ?x17298) 0.0))))))
(assert
 (let ((?x17353 (* l_0_7_267 l_0_7_267)))
 (let ((?x17349 (* l_0_7_266 l_0_7_266)))
 (let ((?x17345 (* l_0_7_265 l_0_7_265)))
 (let ((?x17568 (- (- (* (- l_0_7_263) l_0_7_263) (* l_0_7_264 l_0_7_264)) ?x17345)))
 (= (- (- ?x17568 ?x17349) ?x17353) 0.0))))))
(assert
 (= (- (* (- l_0_7_290) l_0_7_290) (* l_0_7_291 l_0_7_291)) 0.0))
(assert
 (let ((?x17603 (- (* (* (- 2.0) l_0_7_290) l_0_7_292) (* (* 2.0 l_0_7_291) l_0_7_293))))
 (= ?x17603 0.0)))
(assert
 (let ((?x17620 (* l_0_7_294 l_0_7_294)))
 (let ((?x17621 (- (- (* (- l_0_7_292) l_0_7_292) (* l_0_7_293 l_0_7_293)) ?x17620)))
 (= ?x17621 0.0))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_28 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_37 0.0))
(assert
 (>= l_0_7_39 0.0))
(assert
 (>= l_0_7_42 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_57 0.0))
(assert
 (>= l_0_7_64 0.0))
(assert
 (>= l_0_7_72 0.0))
(assert
 (>= l_0_7_73 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_82 0.0))
(assert
 (>= l_0_7_87 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_108 0.0))
(assert
 (>= l_0_7_109 0.0))
(assert
 (>= l_0_7_111 0.0))
(assert
 (>= l_0_7_114 0.0))
(assert
 (>= l_0_7_118 0.0))
(assert
 (>= l_0_7_123 0.0))
(assert
 (>= l_0_7_129 0.0))
(assert
 (>= l_0_7_136 0.0))
(assert
 (>= l_0_7_144 0.0))
(assert
 (>= l_0_7_145 0.0))
(assert
 (>= l_0_7_147 0.0))
(assert
 (>= l_0_7_150 0.0))
(assert
 (>= l_0_7_154 0.0))
(assert
 (>= l_0_7_159 0.0))
(assert
 (>= l_0_7_165 0.0))
(assert
 (>= l_0_7_172 0.0))
(assert
 (>= l_0_7_180 0.0))
(assert
 (>= l_0_7_181 0.0))
(assert
 (>= l_0_7_183 0.0))
(assert
 (>= l_0_7_186 0.0))
(assert
 (>= l_0_7_190 0.0))
(assert
 (>= l_0_7_195 0.0))
(assert
 (>= l_0_7_201 0.0))
(assert
 (>= l_0_7_208 0.0))
(assert
 (>= l_0_7_216 0.0))
(assert
 (>= l_0_7_217 0.0))
(assert
 (>= l_0_7_219 0.0))
(assert
 (>= l_0_7_222 0.0))
(assert
 (>= l_0_7_226 0.0))
(assert
 (>= l_0_7_231 0.0))
(assert
 (>= l_0_7_237 0.0))
(assert
 (>= l_0_7_244 0.0))
(assert
 (>= l_0_7_252 0.0))
(assert
 (>= l_0_7_253 0.0))
(assert
 (>= l_0_7_255 0.0))
(assert
 (>= l_0_7_258 0.0))
(assert
 (>= l_0_7_262 0.0))
(assert
 (>= l_0_7_267 0.0))
(assert
 (>= l_0_7_273 0.0))
(assert
 (>= l_0_7_280 0.0))
(assert
 (>= l_0_7_288 0.0))
(assert
 (>= l_0_7_289 0.0))
(assert
 (>= l_0_7_291 0.0))
(assert
 (>= l_0_7_294 0.0))
(assert
 (>= l_0_7_298 0.0))
(assert
 (>= l_0_7_303 0.0))
(assert
 (>= l_0_7_309 0.0))
(assert
 (>= l_0_7_316 0.0))
(assert
 (>= l_0_7_324 0.0))
(assert
 (let ((?x17744 (* l_0_8_39 l_0_8_39)))
 (let ((?x17742 (* l_0_8_38 l_0_8_38)))
 (let ((?x17731 (* l_0_8_3 l_0_8_3)))
 (let ((?x17714 (* l_0_8_2 l_0_8_2)))
 (let ((?x17712 (* l_0_8_183 l_0_8_183)))
 (let ((?x17710 (* l_0_8_182 l_0_8_182)))
 (let ((?x17711 (+ (- (* (- l_0_8_146) l_0_8_146) (* l_0_8_147 l_0_8_147)) ?x17710)))
 (let ((?x17721 (- (- (- (+ ?x17711 ?x17712) ?x17714) (* (* 2.0 l_0_8_218) l_0_8_220)) (* (* 2.0 l_0_8_219) l_0_8_221))))
 (let ((?x17727 (- (- ?x17721 (* (* 2.0 l_0_8_292) l_0_8_317)) (* (* 2.0 l_0_8_293) l_0_8_318))))
 (let ((?x17735 (- (- (- ?x17727 (* (* 2.0 l_0_8_294) l_0_8_319)) ?x17731) (* (* 2.0 l_0_8_328) l_0_8_353))))
 (let ((?x17741 (- (- ?x17735 (* (* 2.0 l_0_8_329) l_0_8_354)) (* (* 2.0 l_0_8_330) l_0_8_355))))
 (= (+ (+ (+ ?x17741 ?x17742) ?x17744) 1.0) 0.0)))))))))))))
(assert
 (let ((?x17712 (* l_0_8_183 l_0_8_183)))
 (let ((?x17710 (* l_0_8_182 l_0_8_182)))
 (let ((?x17817 (- (- (+ (* l_0_8_146 l_0_8_146) (* l_0_8_147 l_0_8_147)) ?x17710) ?x17712)))
 (let ((?x17823 (- (- ?x17817 (* (* 2.0 l_0_8_290) l_0_8_304)) (* (* 2.0 l_0_8_291) l_0_8_305))))
 (let ((?x17829 (- (- ?x17823 (* (* 2.0 l_0_8_326) l_0_8_340)) (* (* 2.0 l_0_8_327) l_0_8_341))))
 (= (- ?x17829 1.0) 0.0)))))))
(assert
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x17872 (* ?x17871 l_0_8_282)))
 (let ((?x17868 (* 2.0 l_0_8_254)))
 (let ((?x17869 (* ?x17868 l_0_8_281)))
 (let ((?x17867 (- (* (* (- 2.0) l_0_8_218) l_0_8_227) (* (* 2.0 l_0_8_219) l_0_8_228))))
 (let ((?x17879 (- (- (- (- ?x17867 ?x17869) ?x17872) (* (* 2.0 l_0_8_299) l_0_8_317)) (* (* 2.0 l_0_8_300) l_0_8_318))))
 (let ((?x17885 (- (- ?x17879 (* (* 2.0 l_0_8_301) l_0_8_319)) (* (* 2.0 l_0_8_302) l_0_8_320))))
 (let ((?x17891 (- (- ?x17885 (* (* 2.0 l_0_8_303) l_0_8_321)) (* (* 2.0 l_0_8_335) l_0_8_353))))
 (let ((?x17897 (- (- ?x17891 (* (* 2.0 l_0_8_336) l_0_8_354)) (* (* 2.0 l_0_8_337) l_0_8_355))))
 (let ((?x17903 (- (- ?x17897 (* (* 2.0 l_0_8_338) l_0_8_356)) (* (* 2.0 l_0_8_339) l_0_8_357))))
 (= (+ ?x17903 1.0) 0.0))))))))))))
(assert
 (let ((?x17995 (* l_0_8_37 l_0_8_37)))
 (let ((?x17993 (* l_0_8_181 l_0_8_181)))
 (let ((?x17996 (+ (+ (- (* (- l_0_8_1) l_0_8_1) (* l_0_8_145 l_0_8_145)) ?x17993) ?x17995)))
 (= ?x17996 0.0)))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18038 (* ?x18037 l_0_8_38)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18032 (* ?x18031 l_0_8_182)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18029 (* ?x18028 l_0_8_146)))
 (let ((?x18012 (+ (* (* (- 2.0) l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_101) l_0_8_76))))
 (let ((?x18018 (+ (+ ?x18012 (* (* 2.0 l_0_8_102) l_0_8_77)) (* (* 2.0 l_0_8_103) l_0_8_78))))
 (let ((?x18024 (- (- ?x18018 (* (* 2.0 l_0_8_112) l_0_8_137)) (* (* 2.0 l_0_8_113) l_0_8_138))))
 (let ((?x18036 (- (+ (- (- ?x18024 (* (* 2.0 l_0_8_114) l_0_8_139)) ?x18029) ?x18032) (* (* 2.0 l_0_8_217) l_0_8_220))))
 (= (+ ?x18036 ?x18038) 0.0))))))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18097 (* ?x18037 l_0_8_40)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18095 (* ?x18031 l_0_8_184)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18085 (* ?x18028 l_0_8_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x18085) ?x18095) ?x18097) 0.0))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18120 (* ?x18037 l_0_8_43)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18118 (* ?x18031 l_0_8_187)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18111 (* ?x18028 l_0_8_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_1) l_0_8_7) ?x18111) ?x18118) ?x18120) 0.0))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18143 (* ?x18037 l_0_8_47)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18141 (* ?x18031 l_0_8_191)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18134 (* ?x18028 l_0_8_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_1) l_0_8_11) ?x18134) ?x18141) ?x18143) 0.0))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18166 (* ?x18037 l_0_8_52)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18164 (* ?x18031 l_0_8_196)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18157 (* ?x18028 l_0_8_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_1) l_0_8_16) ?x18157) ?x18164) ?x18166) 0.0))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18193 (* ?x18037 l_0_8_58)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18191 (* ?x18031 l_0_8_202)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18189 (* ?x18028 l_0_8_166)))
 (let ((?x18085 (* ?x18028 l_0_8_148)))
 (let ((?x18187 (+ (* (* (- 2.0) l_0_8_1) l_0_8_22) (* (* 1.0 l_0_8_109) l_0_8_112))))
 (let ((?x18197 (- (+ (+ (- (- ?x18187 ?x18085) ?x18189) ?x18191) ?x18193) (* (* 1.0 l_0_8_73) l_0_8_76))))
 (= ?x18197 0.0)))))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18231 (* ?x18037 l_0_8_65)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18229 (* ?x18031 l_0_8_209)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18227 (* ?x18028 l_0_8_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_1) l_0_8_29) ?x18227) ?x18229) ?x18231) 0.0))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18276 (* ?x18275 l_0_8_41)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18273 (* ?x18272 l_0_8_40)))
 (let ((?x18269 (* 2.0 l_0_8_3)))
 (let ((?x18270 (* ?x18269 l_0_8_5)))
 (let ((?x18267 (* l_0_8_222 l_0_8_222)))
 (let ((?x18265 (* l_0_8_221 l_0_8_221)))
 (let ((?x18263 (* l_0_8_220 l_0_8_220)))
 (let ((?x18260 (* 2.0 l_0_8_2)))
 (let ((?x18261 (* ?x18260 l_0_8_4)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18258 (* ?x18257 l_0_8_185)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18255 (* ?x18254 l_0_8_184)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18252 (* ?x18246 l_0_8_149)))
 (let ((?x18262 (- (+ (+ (- (* (* (- 2.0) l_0_8_146) l_0_8_148) ?x18252) ?x18255) ?x18258) ?x18261)))
 (= (+ (+ (- (- (- (- ?x18262 ?x18263) ?x18265) ?x18267) ?x18270) ?x18273) ?x18276) 0.0))))))))))))))))))))
(assert
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x18362 (* ?x18361 l_0_8_67)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x18359 (* ?x18358 l_0_8_66)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x18356 (* ?x18355 l_0_8_65)))
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18353 (* ?x18275 l_0_8_44)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18351 (* ?x18272 l_0_8_43)))
 (let ((?x18348 (* 2.0 l_0_8_31)))
 (let ((?x18349 (* ?x18348 l_0_8_6)))
 (let ((?x18345 (* 2.0 l_0_8_30)))
 (let ((?x18346 (* ?x18345 l_0_8_5)))
 (let ((?x18269 (* 2.0 l_0_8_3)))
 (let ((?x18343 (* ?x18269 l_0_8_8)))
 (let ((?x18340 (* 2.0 l_0_8_29)))
 (let ((?x18341 (* ?x18340 l_0_8_4)))
 (let ((?x18260 (* 2.0 l_0_8_2)))
 (let ((?x18329 (* ?x18260 l_0_8_7)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18327 (* ?x18257 l_0_8_188)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18325 (* ?x18254 l_0_8_187)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18316 (* ?x18246 l_0_8_152)))
 (let ((?x18330 (- (+ (+ (- (* (* (- 2.0) l_0_8_146) l_0_8_151) ?x18316) ?x18325) ?x18327) ?x18329)))
 (let ((?x18336 (- (- ?x18330 (* (* 2.0 l_0_8_220) l_0_8_223)) (* (* 2.0 l_0_8_221) l_0_8_224))))
 (let ((?x18347 (+ (- (+ (- ?x18336 (* (* 2.0 l_0_8_222) l_0_8_225)) ?x18341) ?x18343) ?x18346)))
 (= (- (- (- (+ (+ (+ ?x18347 ?x18349) ?x18351) ?x18353) ?x18356) ?x18359) ?x18362) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18479 (* ?x18275 l_0_8_48)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18477 (* ?x18272 l_0_8_47)))
 (let ((?x18474 (* 2.0 l_0_8_258)))
 (let ((?x18475 (* ?x18474 l_0_8_283)))
 (let ((?x18471 (* 2.0 l_0_8_257)))
 (let ((?x18472 (* ?x18471 l_0_8_282)))
 (let ((?x18468 (* 2.0 l_0_8_256)))
 (let ((?x18469 (* ?x18468 l_0_8_281)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18460 (* ?x18257 l_0_8_192)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18458 (* ?x18254 l_0_8_191)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18456 (* ?x18246 l_0_8_156)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x18454 (* ?x18453 l_0_8_155)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x18451 (* ?x18450 l_0_8_3)))
 (let ((?x18459 (+ (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x18451) ?x18454) ?x18456) ?x18458)))
 (let ((?x18465 (- (- (+ ?x18459 ?x18460) (* (* 2.0 l_0_8_220) l_0_8_227)) (* (* 2.0 l_0_8_221) l_0_8_228))))
 (let ((?x18476 (- (- (- (- ?x18465 (* (* 2.0 l_0_8_222) l_0_8_229)) ?x18469) ?x18472) ?x18475)))
 (= (+ (+ ?x18476 ?x18477) ?x18479) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18591 (* ?x18275 l_0_8_53)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18589 (* ?x18272 l_0_8_52)))
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x18581 (* ?x18580 l_0_8_211)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x18578 (* ?x18577 l_0_8_210)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x18575 (* ?x18574 l_0_8_209)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18572 (* ?x18257 l_0_8_197)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18570 (* ?x18254 l_0_8_196)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x18568 (* ?x18567 l_0_8_3)))
 (let ((?x18564 (* 2.0 l_0_8_16)))
 (let ((?x18565 (* ?x18564 l_0_8_2)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x18562 (* ?x18561 l_0_8_175)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x18559 (* ?x18558 l_0_8_174)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x18556 (* ?x18555 l_0_8_173)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18546 (* ?x18246 l_0_8_161)))
 (let ((?x18563 (+ (+ (+ (- (* (* (- 2.0) l_0_8_146) l_0_8_160) ?x18546) ?x18556) ?x18559) ?x18562)))
 (let ((?x18582 (- (- (- (+ (+ (- (- ?x18563 ?x18565) ?x18568) ?x18570) ?x18572) ?x18575) ?x18578) ?x18581)))
 (let ((?x18586 (- (- ?x18582 (* (* 2.0 l_0_8_220) l_0_8_232)) (* (* 2.0 l_0_8_221) l_0_8_233))))
 (= (+ (+ (- ?x18586 (* (* 2.0 l_0_8_222) l_0_8_234)) ?x18589) ?x18591) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18706 (* ?x18275 l_0_8_59)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18704 (* ?x18272 l_0_8_58)))
 (let ((?x18474 (* 2.0 l_0_8_258)))
 (let ((?x18475 (* ?x18474 l_0_8_283)))
 (let ((?x18471 (* 2.0 l_0_8_257)))
 (let ((?x18472 (* ?x18471 l_0_8_282)))
 (let ((?x18468 (* 2.0 l_0_8_256)))
 (let ((?x18469 (* ?x18468 l_0_8_281)))
 (let ((?x18698 (* 2.0 l_0_8_23)))
 (let ((?x18699 (* ?x18698 l_0_8_3)))
 (let ((?x18260 (* 2.0 l_0_8_2)))
 (let ((?x18690 (* ?x18260 l_0_8_22)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18688 (* ?x18257 l_0_8_203)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18686 (* ?x18254 l_0_8_202)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18684 (* ?x18246 l_0_8_167)))
 (let ((?x18252 (* ?x18246 l_0_8_149)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x18681 (* ?x18453 l_0_8_166)))
 (let ((?x18679 (* ?x18453 l_0_8_148)))
 (let ((?x18678 (+ (* (* 1.0 l_0_8_110) l_0_8_112) (* (* 1.0 l_0_8_111) l_0_8_113))))
 (let ((?x18691 (- (+ (+ (- (- (- (- ?x18678 ?x18679) ?x18681) ?x18252) ?x18684) ?x18686) ?x18688) ?x18690)))
 (let ((?x18695 (- (- ?x18691 (* (* 2.0 l_0_8_220) l_0_8_238)) (* (* 2.0 l_0_8_221) l_0_8_239))))
 (let ((?x18702 (+ (+ (- (- ?x18695 (* (* 2.0 l_0_8_222) l_0_8_240)) ?x18699) ?x18469) ?x18472)))
 (let ((?x18710 (- (+ (+ (+ ?x18702 ?x18475) ?x18704) ?x18706) (* (* 1.0 l_0_8_74) l_0_8_76))))
 (= (- ?x18710 (* (* 1.0 l_0_8_75) l_0_8_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18810 (* ?x18275 l_0_8_66)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18808 (* ?x18272 l_0_8_65)))
 (let ((?x18269 (* 2.0 l_0_8_3)))
 (let ((?x18806 (* ?x18269 l_0_8_30)))
 (let ((?x18260 (* 2.0 l_0_8_2)))
 (let ((?x18798 (* ?x18260 l_0_8_29)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18796 (* ?x18257 l_0_8_210)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18794 (* ?x18254 l_0_8_209)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18792 (* ?x18246 l_0_8_174)))
 (let ((?x18799 (- (+ (+ (- (* (* (- 2.0) l_0_8_146) l_0_8_173) ?x18792) ?x18794) ?x18796) ?x18798)))
 (let ((?x18803 (- (- ?x18799 (* (* 2.0 l_0_8_220) l_0_8_245)) (* (* 2.0 l_0_8_221) l_0_8_246))))
 (let ((?x18811 (+ (+ (- (- ?x18803 (* (* 2.0 l_0_8_222) l_0_8_247)) ?x18806) ?x18808) ?x18810)))
 (= ?x18811 0.0)))))))))))))))))))
(assert
 (let ((?x18887 (* l_0_8_6 l_0_8_6)))
 (let ((?x18885 (* l_0_8_5 l_0_8_5)))
 (let ((?x18883 (* l_0_8_42 l_0_8_42)))
 (let ((?x18881 (* l_0_8_41 l_0_8_41)))
 (let ((?x18879 (* l_0_8_40 l_0_8_40)))
 (let ((?x18877 (* l_0_8_4 l_0_8_4)))
 (let ((?x18875 (* l_0_8_186 l_0_8_186)))
 (let ((?x18873 (* l_0_8_185 l_0_8_185)))
 (let ((?x18871 (* l_0_8_184 l_0_8_184)))
 (let ((?x18869 (* l_0_8_150 l_0_8_150)))
 (let ((?x18870 (- (- (* (- l_0_8_148) l_0_8_148) (* l_0_8_149 l_0_8_149)) ?x18869)))
 (let ((?x18884 (+ (+ (+ (- (+ (+ (+ ?x18870 ?x18871) ?x18873) ?x18875) ?x18877) ?x18879) ?x18881) ?x18883)))
 (= (- (- ?x18884 ?x18885) ?x18887) 0.0))))))))))))))
(assert
 (let ((?x18943 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x18940 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x18937 (* ?x18361 l_0_8_45)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x18935 (* ?x18358 l_0_8_44)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x18933 (* ?x18355 l_0_8_43)))
 (let ((?x18931 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x18928 (* ?x18580 l_0_8_189)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x18926 (* ?x18577 l_0_8_188)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x18924 (* ?x18574 l_0_8_187)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x18922 (* ?x18561 l_0_8_153)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x18920 (* ?x18558 l_0_8_152)))
 (let ((?x18927 (+ (+ (- (- (* (* (- 2.0) l_0_8_148) l_0_8_151) ?x18920) ?x18922) ?x18924) ?x18926)))
 (let ((?x18944 (- (- (+ (+ (+ (- (+ ?x18927 ?x18928) ?x18931) ?x18933) ?x18935) ?x18937) ?x18940) ?x18943)))
 (= ?x18944 0.0)))))))))))))))))))))))
(assert
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x19023 (* ?x18361 l_0_8_49)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x19021 (* ?x18358 l_0_8_48)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x19019 (* ?x18355 l_0_8_47)))
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x19017 (* ?x18580 l_0_8_193)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x19015 (* ?x18577 l_0_8_192)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x19013 (* ?x18574 l_0_8_191)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x19011 (* ?x18561 l_0_8_157)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x19009 (* ?x18558 l_0_8_156)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x19007 (* ?x18555 l_0_8_155)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x19005 (* ?x19004 l_0_8_6)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x19002 (* ?x18450 l_0_8_5)))
 (let ((?x19010 (- (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x19002) ?x19005) ?x19007) ?x19009)))
 (let ((?x19024 (+ (+ (+ (+ (+ (+ (- ?x19010 ?x19011) ?x19013) ?x19015) ?x19017) ?x19019) ?x19021) ?x19023)))
 (= ?x19024 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x19095 (* ?x18361 l_0_8_54)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x19093 (* ?x18358 l_0_8_53)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x19091 (* ?x18355 l_0_8_52)))
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x19089 (* ?x18580 l_0_8_198)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x19087 (* ?x18577 l_0_8_197)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x19085 (* ?x18574 l_0_8_196)))
 (let ((?x19082 (* 2.0 l_0_8_18)))
 (let ((?x19083 (* ?x19082 l_0_8_6)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x19080 (* ?x18567 l_0_8_5)))
 (let ((?x18564 (* 2.0 l_0_8_16)))
 (let ((?x19069 (* ?x18564 l_0_8_4)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x19065 (* ?x18561 l_0_8_162)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x19061 (* ?x18558 l_0_8_161)))
 (let ((?x19081 (- (- (- (- (* (* (- 2.0) l_0_8_148) l_0_8_160) ?x19061) ?x19065) ?x19069) ?x19080)))
 (let ((?x19096 (+ (+ (+ (+ (+ (+ (- ?x19081 ?x19083) ?x19085) ?x19087) ?x19089) ?x19091) ?x19093) ?x19095)))
 (= ?x19096 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x19180 (* ?x18361 l_0_8_60)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x19178 (* ?x18358 l_0_8_59)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x19176 (* ?x18355 l_0_8_58)))
 (let ((?x19173 (* 2.0 l_0_8_24)))
 (let ((?x19174 (* ?x19173 l_0_8_6)))
 (let ((?x18698 (* 2.0 l_0_8_23)))
 (let ((?x19171 (* ?x18698 l_0_8_5)))
 (let ((?x19168 (* 2.0 l_0_8_22)))
 (let ((?x19169 (* ?x19168 l_0_8_4)))
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x19166 (* ?x18580 l_0_8_204)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x19164 (* ?x18577 l_0_8_203)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x19162 (* ?x18574 l_0_8_202)))
 (let ((?x18869 (* l_0_8_150 l_0_8_150)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x19159 (* ?x18561 l_0_8_168)))
 (let ((?x18860 (* l_0_8_149 l_0_8_149)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x19156 (* ?x18558 l_0_8_167)))
 (let ((?x18891 (* l_0_8_148 l_0_8_148)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x19153 (* ?x18555 l_0_8_166)))
 (let ((?x19139 (+ (* (/ 1.0 2.0) (* l_0_8_112 l_0_8_112)) (* (/ 1.0 2.0) (* l_0_8_113 l_0_8_113)))))
 (let ((?x19157 (- (- (- (+ ?x19139 (* (/ 1.0 2.0) (* l_0_8_114 l_0_8_114))) ?x19153) ?x18891) ?x19156)))
 (let ((?x19170 (- (+ (+ (+ (- (- (- ?x19157 ?x18860) ?x19159) ?x18869) ?x19162) ?x19164) ?x19166) ?x19169)))
 (let ((?x19184 (- (+ (+ (+ (- (- ?x19170 ?x19171) ?x19174) ?x19176) ?x19178) ?x19180) (* (* (/ 1.0 2.0) l_0_8_76) l_0_8_76))))
 (let ((?x19190 (- (- ?x19184 (* (* (/ 1.0 2.0) l_0_8_77) l_0_8_77)) (* (* (/ 1.0 2.0) l_0_8_78) l_0_8_78))))
 (= ?x19190 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x18362 (* ?x18361 l_0_8_67)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x18359 (* ?x18358 l_0_8_66)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x18356 (* ?x18355 l_0_8_65)))
 (let ((?x18348 (* 2.0 l_0_8_31)))
 (let ((?x18349 (* ?x18348 l_0_8_6)))
 (let ((?x18345 (* 2.0 l_0_8_30)))
 (let ((?x18346 (* ?x18345 l_0_8_5)))
 (let ((?x18340 (* 2.0 l_0_8_29)))
 (let ((?x18341 (* ?x18340 l_0_8_4)))
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x18581 (* ?x18580 l_0_8_211)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x18578 (* ?x18577 l_0_8_210)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x18575 (* ?x18574 l_0_8_209)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x18562 (* ?x18561 l_0_8_175)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x18559 (* ?x18558 l_0_8_174)))
 (let ((?x19282 (+ (+ (- (- (* (* (- 2.0) l_0_8_148) l_0_8_173) ?x18559) ?x18562) ?x18575) ?x18578)))
 (let ((?x19289 (+ (+ (+ (- (- (- (+ ?x19282 ?x18581) ?x18341) ?x18346) ?x18349) ?x18356) ?x18359) ?x18362)))
 (= ?x19289 0.0))))))))))))))))))))))))))
(assert
 (let ((?x19339 (* l_0_8_9 l_0_8_9)))
 (let ((?x19337 (* l_0_8_8 l_0_8_8)))
 (let ((?x19335 (* l_0_8_7 l_0_8_7)))
 (let ((?x19333 (* l_0_8_46 l_0_8_46)))
 (let ((?x19331 (* l_0_8_45 l_0_8_45)))
 (let ((?x19329 (* l_0_8_44 l_0_8_44)))
 (let ((?x19327 (* l_0_8_43 l_0_8_43)))
 (let ((?x19325 (* l_0_8_190 l_0_8_190)))
 (let ((?x19323 (* l_0_8_189 l_0_8_189)))
 (let ((?x19321 (* l_0_8_188 l_0_8_188)))
 (let ((?x19319 (* l_0_8_187 l_0_8_187)))
 (let ((?x19317 (* l_0_8_154 l_0_8_154)))
 (let ((?x19315 (* l_0_8_153 l_0_8_153)))
 (let ((?x19313 (* l_0_8_152 l_0_8_152)))
 (let ((?x19316 (- (- (- (* (- l_0_8_10) l_0_8_10) (* l_0_8_151 l_0_8_151)) ?x19313) ?x19315)))
 (let ((?x19330 (+ (+ (+ (+ (+ (+ (- ?x19316 ?x19317) ?x19319) ?x19321) ?x19323) ?x19325) ?x19327) ?x19329)))
 (= (- (- (- (+ (+ ?x19330 ?x19331) ?x19333) ?x19335) ?x19337) ?x19339) 0.0))))))))))))))))))
(assert
 (let ((?x19419 (* 2.0 l_0_8_46)))
 (let ((?x19420 (* ?x19419 l_0_8_50)))
 (let ((?x19416 (* 2.0 l_0_8_45)))
 (let ((?x19417 (* ?x19416 l_0_8_49)))
 (let ((?x19413 (* 2.0 l_0_8_44)))
 (let ((?x19414 (* ?x19413 l_0_8_48)))
 (let ((?x19410 (* 2.0 l_0_8_43)))
 (let ((?x19411 (* ?x19410 l_0_8_47)))
 (let ((?x19407 (* 2.0 l_0_8_190)))
 (let ((?x19408 (* ?x19407 l_0_8_194)))
 (let ((?x19404 (* 2.0 l_0_8_189)))
 (let ((?x19405 (* ?x19404 l_0_8_193)))
 (let ((?x19401 (* 2.0 l_0_8_188)))
 (let ((?x19402 (* ?x19401 l_0_8_192)))
 (let ((?x19398 (* 2.0 l_0_8_187)))
 (let ((?x19399 (* ?x19398 l_0_8_191)))
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19396 (* ?x19395 l_0_8_158)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19393 (* ?x19392 l_0_8_157)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19390 (* ?x19389 l_0_8_156)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19387 (* ?x19386 l_0_8_155)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x19384 (* ?x19004 l_0_8_9)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x19382 (* ?x18450 l_0_8_8)))
 (let ((?x19379 (* 2.0 l_0_8_11)))
 (let ((?x19380 (* ?x19379 l_0_8_7)))
 (let ((?x19388 (- (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x19380) ?x19382) ?x19384) ?x19387)))
 (let ((?x19409 (+ (+ (+ (+ (- (- (- ?x19388 ?x19390) ?x19393) ?x19396) ?x19399) ?x19402) ?x19405) ?x19408)))
 (= (+ (+ (+ (+ ?x19409 ?x19411) ?x19414) ?x19417) ?x19420) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19419 (* 2.0 l_0_8_46)))
 (let ((?x19515 (* ?x19419 l_0_8_55)))
 (let ((?x19416 (* 2.0 l_0_8_45)))
 (let ((?x19513 (* ?x19416 l_0_8_54)))
 (let ((?x19413 (* 2.0 l_0_8_44)))
 (let ((?x19511 (* ?x19413 l_0_8_53)))
 (let ((?x19410 (* 2.0 l_0_8_43)))
 (let ((?x19509 (* ?x19410 l_0_8_52)))
 (let ((?x19407 (* 2.0 l_0_8_190)))
 (let ((?x19507 (* ?x19407 l_0_8_199)))
 (let ((?x19404 (* 2.0 l_0_8_189)))
 (let ((?x19505 (* ?x19404 l_0_8_198)))
 (let ((?x19401 (* 2.0 l_0_8_188)))
 (let ((?x19503 (* ?x19401 l_0_8_197)))
 (let ((?x19398 (* 2.0 l_0_8_187)))
 (let ((?x19501 (* ?x19398 l_0_8_196)))
 (let ((?x19082 (* 2.0 l_0_8_18)))
 (let ((?x19499 (* ?x19082 l_0_8_9)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x19497 (* ?x18567 l_0_8_8)))
 (let ((?x18564 (* 2.0 l_0_8_16)))
 (let ((?x19495 (* ?x18564 l_0_8_7)))
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19482 (* ?x19395 l_0_8_163)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19478 (* ?x19392 l_0_8_162)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19474 (* ?x19389 l_0_8_161)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19470 (* ?x19386 l_0_8_160)))
 (let ((?x19483 (- (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_19) ?x19470) ?x19474) ?x19478) ?x19482)))
 (let ((?x19508 (+ (+ (+ (+ (- (- (- ?x19483 ?x19495) ?x19497) ?x19499) ?x19501) ?x19503) ?x19505) ?x19507)))
 (= (+ (+ (+ (+ ?x19508 ?x19509) ?x19511) ?x19513) ?x19515) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19419 (* 2.0 l_0_8_46)))
 (let ((?x19623 (* ?x19419 l_0_8_61)))
 (let ((?x19416 (* 2.0 l_0_8_45)))
 (let ((?x19621 (* ?x19416 l_0_8_60)))
 (let ((?x19413 (* 2.0 l_0_8_44)))
 (let ((?x19619 (* ?x19413 l_0_8_59)))
 (let ((?x19410 (* 2.0 l_0_8_43)))
 (let ((?x19617 (* ?x19410 l_0_8_58)))
 (let ((?x19173 (* 2.0 l_0_8_24)))
 (let ((?x19615 (* ?x19173 l_0_8_9)))
 (let ((?x18698 (* 2.0 l_0_8_23)))
 (let ((?x19613 (* ?x18698 l_0_8_8)))
 (let ((?x19168 (* 2.0 l_0_8_22)))
 (let ((?x19611 (* ?x19168 l_0_8_7)))
 (let ((?x19407 (* 2.0 l_0_8_190)))
 (let ((?x19609 (* ?x19407 l_0_8_205)))
 (let ((?x19404 (* 2.0 l_0_8_189)))
 (let ((?x19607 (* ?x19404 l_0_8_204)))
 (let ((?x19401 (* 2.0 l_0_8_188)))
 (let ((?x19605 (* ?x19401 l_0_8_203)))
 (let ((?x19398 (* 2.0 l_0_8_187)))
 (let ((?x19603 (* ?x19398 l_0_8_202)))
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19601 (* ?x19395 l_0_8_169)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19599 (* ?x19392 l_0_8_168)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19597 (* ?x19389 l_0_8_167)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19595 (* ?x19386 l_0_8_166)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x18922 (* ?x18561 l_0_8_153)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x18920 (* ?x18558 l_0_8_152)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x19591 (* ?x18555 l_0_8_151)))
 (let ((?x19569 (+ (* (* (- 2.0) l_0_8_10) l_0_8_25) (* (* 1.0 l_0_8_112) l_0_8_115))))
 (let ((?x19590 (+ (+ ?x19569 (* (* 1.0 l_0_8_113) l_0_8_116)) (* (* 1.0 l_0_8_114) l_0_8_117))))
 (let ((?x19602 (- (- (- (- (- (- (- ?x19590 ?x19591) ?x18920) ?x18922) ?x19595) ?x19597) ?x19599) ?x19601)))
 (let ((?x19616 (- (- (- (+ (+ (+ (+ ?x19602 ?x19603) ?x19605) ?x19607) ?x19609) ?x19611) ?x19613) ?x19615)))
 (let ((?x19627 (- (+ (+ (+ (+ ?x19616 ?x19617) ?x19619) ?x19621) ?x19623) (* (* 1.0 l_0_8_76) l_0_8_79))))
 (let ((?x19633 (- (- ?x19627 (* (* 1.0 l_0_8_77) l_0_8_80)) (* (* 1.0 l_0_8_78) l_0_8_81))))
 (= ?x19633 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19419 (* 2.0 l_0_8_46)))
 (let ((?x19763 (* ?x19419 l_0_8_68)))
 (let ((?x19416 (* 2.0 l_0_8_45)))
 (let ((?x19761 (* ?x19416 l_0_8_67)))
 (let ((?x19413 (* 2.0 l_0_8_44)))
 (let ((?x19759 (* ?x19413 l_0_8_66)))
 (let ((?x19410 (* 2.0 l_0_8_43)))
 (let ((?x19757 (* ?x19410 l_0_8_65)))
 (let ((?x18348 (* 2.0 l_0_8_31)))
 (let ((?x19755 (* ?x18348 l_0_8_9)))
 (let ((?x18345 (* 2.0 l_0_8_30)))
 (let ((?x19753 (* ?x18345 l_0_8_8)))
 (let ((?x18340 (* 2.0 l_0_8_29)))
 (let ((?x19751 (* ?x18340 l_0_8_7)))
 (let ((?x19407 (* 2.0 l_0_8_190)))
 (let ((?x19749 (* ?x19407 l_0_8_212)))
 (let ((?x19404 (* 2.0 l_0_8_189)))
 (let ((?x19747 (* ?x19404 l_0_8_211)))
 (let ((?x19401 (* 2.0 l_0_8_188)))
 (let ((?x19745 (* ?x19401 l_0_8_210)))
 (let ((?x19398 (* 2.0 l_0_8_187)))
 (let ((?x19743 (* ?x19398 l_0_8_209)))
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19741 (* ?x19395 l_0_8_176)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19739 (* ?x19392 l_0_8_175)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19737 (* ?x19389 l_0_8_174)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19735 (* ?x19386 l_0_8_173)))
 (let ((?x19742 (- (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_32) ?x19735) ?x19737) ?x19739) ?x19741)))
 (let ((?x19756 (- (- (- (+ (+ (+ (+ ?x19742 ?x19743) ?x19745) ?x19747) ?x19749) ?x19751) ?x19753) ?x19755)))
 (= (+ (+ (+ (+ ?x19756 ?x19757) ?x19759) ?x19761) ?x19763) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19872 (* l_0_8_51 l_0_8_51)))
 (let ((?x19870 (* l_0_8_50 l_0_8_50)))
 (let ((?x19868 (* l_0_8_49 l_0_8_49)))
 (let ((?x19866 (* l_0_8_48 l_0_8_48)))
 (let ((?x19864 (* l_0_8_47 l_0_8_47)))
 (let ((?x19862 (* l_0_8_195 l_0_8_195)))
 (let ((?x19860 (* l_0_8_194 l_0_8_194)))
 (let ((?x19858 (* l_0_8_193 l_0_8_193)))
 (let ((?x19856 (* l_0_8_192 l_0_8_192)))
 (let ((?x19854 (* l_0_8_191 l_0_8_191)))
 (let ((?x19852 (* l_0_8_159 l_0_8_159)))
 (let ((?x19850 (* l_0_8_158 l_0_8_158)))
 (let ((?x19848 (* l_0_8_157 l_0_8_157)))
 (let ((?x19846 (* l_0_8_156 l_0_8_156)))
 (let ((?x19844 (* l_0_8_155 l_0_8_155)))
 (let ((?x19842 (* l_0_8_15 l_0_8_15)))
 (let ((?x19840 (* l_0_8_14 l_0_8_14)))
 (let ((?x19827 (* l_0_8_13 l_0_8_13)))
 (let ((?x19841 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x19827) ?x19840)))
 (let ((?x19855 (+ (- (- (- (- (- (- ?x19841 ?x19842) ?x19844) ?x19846) ?x19848) ?x19850) ?x19852) ?x19854)))
 (let ((?x19869 (+ (+ (+ (+ (+ (+ (+ ?x19855 ?x19856) ?x19858) ?x19860) ?x19862) ?x19864) ?x19866) ?x19868)))
 (= (+ (+ ?x19869 ?x19870) ?x19872) 0.0)))))))))))))))))))))))
(assert
 (let ((?x19970 (* 2.0 l_0_8_51)))
 (let ((?x19971 (* ?x19970 l_0_8_56)))
 (let ((?x19967 (* 2.0 l_0_8_50)))
 (let ((?x19968 (* ?x19967 l_0_8_55)))
 (let ((?x19964 (* 2.0 l_0_8_49)))
 (let ((?x19965 (* ?x19964 l_0_8_54)))
 (let ((?x19961 (* 2.0 l_0_8_48)))
 (let ((?x19962 (* ?x19961 l_0_8_53)))
 (let ((?x19958 (* 2.0 l_0_8_47)))
 (let ((?x19959 (* ?x19958 l_0_8_52)))
 (let ((?x19955 (* 2.0 l_0_8_195)))
 (let ((?x19956 (* ?x19955 l_0_8_200)))
 (let ((?x19952 (* 2.0 l_0_8_194)))
 (let ((?x19953 (* ?x19952 l_0_8_199)))
 (let ((?x19949 (* 2.0 l_0_8_193)))
 (let ((?x19950 (* ?x19949 l_0_8_198)))
 (let ((?x19946 (* 2.0 l_0_8_192)))
 (let ((?x19947 (* ?x19946 l_0_8_197)))
 (let ((?x19943 (* 2.0 l_0_8_191)))
 (let ((?x19944 (* ?x19943 l_0_8_196)))
 (let ((?x19940 (* 2.0 l_0_8_159)))
 (let ((?x19941 (* ?x19940 l_0_8_164)))
 (let ((?x19937 (* 2.0 l_0_8_158)))
 (let ((?x19938 (* ?x19937 l_0_8_163)))
 (let ((?x19934 (* 2.0 l_0_8_157)))
 (let ((?x19935 (* ?x19934 l_0_8_162)))
 (let ((?x19931 (* 2.0 l_0_8_156)))
 (let ((?x19932 (* ?x19931 l_0_8_161)))
 (let ((?x19928 (* 2.0 l_0_8_155)))
 (let ((?x19929 (* ?x19928 l_0_8_160)))
 (let ((?x19925 (* 2.0 l_0_8_15)))
 (let ((?x19926 (* ?x19925 l_0_8_20)))
 (let ((?x19922 (* 2.0 l_0_8_14)))
 (let ((?x19923 (* ?x19922 l_0_8_19)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x19920 (* ?x19004 l_0_8_18)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x19918 (* ?x18450 l_0_8_17)))
 (let ((?x19927 (- (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_16) ?x19918) ?x19920) ?x19923) ?x19926)))
 (let ((?x19948 (+ (+ (- (- (- (- (- ?x19927 ?x19929) ?x19932) ?x19935) ?x19938) ?x19941) ?x19944) ?x19947)))
 (let ((?x19969 (+ (+ (+ (+ (+ (+ (+ ?x19948 ?x19950) ?x19953) ?x19956) ?x19959) ?x19962) ?x19965) ?x19968)))
 (= (+ ?x19969 ?x19971) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19970 (* 2.0 l_0_8_51)))
 (let ((?x20099 (* ?x19970 l_0_8_62)))
 (let ((?x19967 (* 2.0 l_0_8_50)))
 (let ((?x20097 (* ?x19967 l_0_8_61)))
 (let ((?x19964 (* 2.0 l_0_8_49)))
 (let ((?x20095 (* ?x19964 l_0_8_60)))
 (let ((?x19961 (* 2.0 l_0_8_48)))
 (let ((?x20093 (* ?x19961 l_0_8_59)))
 (let ((?x19958 (* 2.0 l_0_8_47)))
 (let ((?x20091 (* ?x19958 l_0_8_58)))
 (let ((?x19955 (* 2.0 l_0_8_195)))
 (let ((?x20089 (* ?x19955 l_0_8_206)))
 (let ((?x19952 (* 2.0 l_0_8_194)))
 (let ((?x20087 (* ?x19952 l_0_8_205)))
 (let ((?x19949 (* 2.0 l_0_8_193)))
 (let ((?x20085 (* ?x19949 l_0_8_204)))
 (let ((?x19946 (* 2.0 l_0_8_192)))
 (let ((?x20083 (* ?x19946 l_0_8_203)))
 (let ((?x19943 (* 2.0 l_0_8_191)))
 (let ((?x20081 (* ?x19943 l_0_8_202)))
 (let ((?x19940 (* 2.0 l_0_8_159)))
 (let ((?x20079 (* ?x19940 l_0_8_170)))
 (let ((?x19937 (* 2.0 l_0_8_158)))
 (let ((?x20077 (* ?x19937 l_0_8_169)))
 (let ((?x19934 (* 2.0 l_0_8_157)))
 (let ((?x20075 (* ?x19934 l_0_8_168)))
 (let ((?x19931 (* 2.0 l_0_8_156)))
 (let ((?x20073 (* ?x19931 l_0_8_167)))
 (let ((?x19928 (* 2.0 l_0_8_155)))
 (let ((?x20071 (* ?x19928 l_0_8_166)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x19011 (* ?x18561 l_0_8_157)))
 (let ((?x19925 (* 2.0 l_0_8_15)))
 (let ((?x20068 (* ?x19925 l_0_8_26)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x19009 (* ?x18558 l_0_8_156)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x19007 (* ?x18555 l_0_8_155)))
 (let ((?x19922 (* 2.0 l_0_8_14)))
 (let ((?x20064 (* ?x19922 l_0_8_25)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x20049 (* ?x19004 l_0_8_24)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x20045 (* ?x18450 l_0_8_23)))
 (let ((?x20035 (+ (* (* (- 2.0) l_0_8_11) l_0_8_22) (* (* 1.0 l_0_8_112) l_0_8_119))))
 (let ((?x20043 (+ (+ ?x20035 (* (* 1.0 l_0_8_113) l_0_8_120)) (* (* 1.0 l_0_8_114) l_0_8_121))))
 (let ((?x20070 (- (- (- (- (- (- (- ?x20043 ?x20045) ?x20049) ?x20064) ?x19007) ?x19009) ?x20068) ?x19011)))
 (let ((?x20084 (+ (+ (- (- (- (- (- ?x20070 ?x20071) ?x20073) ?x20075) ?x20077) ?x20079) ?x20081) ?x20083)))
 (let ((?x20098 (+ (+ (+ (+ (+ (+ (+ ?x20084 ?x20085) ?x20087) ?x20089) ?x20091) ?x20093) ?x20095) ?x20097)))
 (let ((?x20104 (- (- (+ ?x20098 ?x20099) (* (* 1.0 l_0_8_76) l_0_8_83)) (* (* 1.0 l_0_8_77) l_0_8_84))))
 (= (- ?x20104 (* (* 1.0 l_0_8_78) l_0_8_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19970 (* 2.0 l_0_8_51)))
 (let ((?x20260 (* ?x19970 l_0_8_69)))
 (let ((?x19967 (* 2.0 l_0_8_50)))
 (let ((?x20258 (* ?x19967 l_0_8_68)))
 (let ((?x19964 (* 2.0 l_0_8_49)))
 (let ((?x20256 (* ?x19964 l_0_8_67)))
 (let ((?x19961 (* 2.0 l_0_8_48)))
 (let ((?x20254 (* ?x19961 l_0_8_66)))
 (let ((?x19958 (* 2.0 l_0_8_47)))
 (let ((?x20252 (* ?x19958 l_0_8_65)))
 (let ((?x19955 (* 2.0 l_0_8_195)))
 (let ((?x20250 (* ?x19955 l_0_8_213)))
 (let ((?x19952 (* 2.0 l_0_8_194)))
 (let ((?x20248 (* ?x19952 l_0_8_212)))
 (let ((?x19949 (* 2.0 l_0_8_193)))
 (let ((?x20246 (* ?x19949 l_0_8_211)))
 (let ((?x19946 (* 2.0 l_0_8_192)))
 (let ((?x20244 (* ?x19946 l_0_8_210)))
 (let ((?x19943 (* 2.0 l_0_8_191)))
 (let ((?x20242 (* ?x19943 l_0_8_209)))
 (let ((?x19940 (* 2.0 l_0_8_159)))
 (let ((?x20240 (* ?x19940 l_0_8_177)))
 (let ((?x19937 (* 2.0 l_0_8_158)))
 (let ((?x20238 (* ?x19937 l_0_8_176)))
 (let ((?x19934 (* 2.0 l_0_8_157)))
 (let ((?x20236 (* ?x19934 l_0_8_175)))
 (let ((?x19931 (* 2.0 l_0_8_156)))
 (let ((?x20234 (* ?x19931 l_0_8_174)))
 (let ((?x19928 (* 2.0 l_0_8_155)))
 (let ((?x20232 (* ?x19928 l_0_8_173)))
 (let ((?x19925 (* 2.0 l_0_8_15)))
 (let ((?x20230 (* ?x19925 l_0_8_33)))
 (let ((?x19922 (* 2.0 l_0_8_14)))
 (let ((?x20228 (* ?x19922 l_0_8_32)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x20226 (* ?x19004 l_0_8_31)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x20224 (* ?x18450 l_0_8_30)))
 (let ((?x20231 (- (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_29) ?x20224) ?x20226) ?x20228) ?x20230)))
 (let ((?x20245 (+ (+ (- (- (- (- (- ?x20231 ?x20232) ?x20234) ?x20236) ?x20238) ?x20240) ?x20242) ?x20244)))
 (let ((?x20259 (+ (+ (+ (+ (+ (+ (+ ?x20245 ?x20246) ?x20248) ?x20250) ?x20252) ?x20254) ?x20256) ?x20258)))
 (= (+ ?x20259 ?x20260) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20388 (* l_0_8_57 l_0_8_57)))
 (let ((?x20386 (* l_0_8_56 l_0_8_56)))
 (let ((?x20384 (* l_0_8_55 l_0_8_55)))
 (let ((?x20382 (* l_0_8_54 l_0_8_54)))
 (let ((?x20380 (* l_0_8_53 l_0_8_53)))
 (let ((?x20378 (* l_0_8_52 l_0_8_52)))
 (let ((?x20376 (* l_0_8_21 l_0_8_21)))
 (let ((?x20374 (* l_0_8_201 l_0_8_201)))
 (let ((?x20372 (* l_0_8_200 l_0_8_200)))
 (let ((?x20370 (* l_0_8_20 l_0_8_20)))
 (let ((?x20368 (* l_0_8_199 l_0_8_199)))
 (let ((?x20366 (* l_0_8_198 l_0_8_198)))
 (let ((?x20364 (* l_0_8_197 l_0_8_197)))
 (let ((?x20362 (* l_0_8_196 l_0_8_196)))
 (let ((?x20360 (* l_0_8_19 l_0_8_19)))
 (let ((?x20358 (* l_0_8_18 l_0_8_18)))
 (let ((?x20356 (* l_0_8_17 l_0_8_17)))
 (let ((?x20354 (* l_0_8_165 l_0_8_165)))
 (let ((?x20339 (* l_0_8_164 l_0_8_164)))
 (let ((?x20336 (* l_0_8_163 l_0_8_163)))
 (let ((?x20332 (* l_0_8_162 l_0_8_162)))
 (let ((?x20328 (* l_0_8_161 l_0_8_161)))
 (let ((?x20334 (- (- (- (* (- l_0_8_16) l_0_8_16) (* l_0_8_160 l_0_8_160)) ?x20328) ?x20332)))
 (let ((?x20363 (+ (- (- (- (- (- (- ?x20334 ?x20336) ?x20339) ?x20354) ?x20356) ?x20358) ?x20360) ?x20362)))
 (let ((?x20377 (- (+ (+ (- (+ (+ (+ ?x20363 ?x20364) ?x20366) ?x20368) ?x20370) ?x20372) ?x20374) ?x20376)))
 (= (+ (+ (+ (+ (+ (+ ?x20377 ?x20378) ?x20380) ?x20382) ?x20384) ?x20386) ?x20388) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x20518 (* 2.0 l_0_8_57)))
 (let ((?x20519 (* ?x20518 l_0_8_63)))
 (let ((?x20515 (* 2.0 l_0_8_56)))
 (let ((?x20516 (* ?x20515 l_0_8_62)))
 (let ((?x20512 (* 2.0 l_0_8_55)))
 (let ((?x20513 (* ?x20512 l_0_8_61)))
 (let ((?x20509 (* 2.0 l_0_8_54)))
 (let ((?x20510 (* ?x20509 l_0_8_60)))
 (let ((?x20506 (* 2.0 l_0_8_53)))
 (let ((?x20507 (* ?x20506 l_0_8_59)))
 (let ((?x20503 (* 2.0 l_0_8_52)))
 (let ((?x20504 (* ?x20503 l_0_8_58)))
 (let ((?x20500 (* 2.0 l_0_8_21)))
 (let ((?x20501 (* ?x20500 l_0_8_27)))
 (let ((?x20497 (* 2.0 l_0_8_201)))
 (let ((?x20498 (* ?x20497 l_0_8_207)))
 (let ((?x20494 (* 2.0 l_0_8_200)))
 (let ((?x20495 (* ?x20494 l_0_8_206)))
 (let ((?x20491 (* 2.0 l_0_8_20)))
 (let ((?x20492 (* ?x20491 l_0_8_26)))
 (let ((?x20488 (* 2.0 l_0_8_199)))
 (let ((?x20489 (* ?x20488 l_0_8_205)))
 (let ((?x20485 (* 2.0 l_0_8_198)))
 (let ((?x20486 (* ?x20485 l_0_8_204)))
 (let ((?x20482 (* 2.0 l_0_8_197)))
 (let ((?x20483 (* ?x20482 l_0_8_203)))
 (let ((?x20479 (* 2.0 l_0_8_196)))
 (let ((?x20480 (* ?x20479 l_0_8_202)))
 (let ((?x20476 (* 2.0 l_0_8_19)))
 (let ((?x20477 (* ?x20476 l_0_8_25)))
 (let ((?x19082 (* 2.0 l_0_8_18)))
 (let ((?x20474 (* ?x19082 l_0_8_24)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x20472 (* ?x18567 l_0_8_23)))
 (let ((?x20469 (* 2.0 l_0_8_165)))
 (let ((?x20470 (* ?x20469 l_0_8_171)))
 (let ((?x20466 (* 2.0 l_0_8_164)))
 (let ((?x20467 (* ?x20466 l_0_8_170)))
 (let ((?x20463 (* 2.0 l_0_8_163)))
 (let ((?x20464 (* ?x20463 l_0_8_169)))
 (let ((?x20460 (* 2.0 l_0_8_162)))
 (let ((?x20461 (* ?x20460 l_0_8_168)))
 (let ((?x20457 (* 2.0 l_0_8_161)))
 (let ((?x20458 (* ?x20457 l_0_8_167)))
 (let ((?x20454 (* 2.0 l_0_8_160)))
 (let ((?x20455 (* ?x20454 l_0_8_166)))
 (let ((?x18564 (* 2.0 l_0_8_16)))
 (let ((?x20452 (* ?x18564 l_0_8_22)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x19065 (* ?x18561 l_0_8_162)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x19061 (* ?x18558 l_0_8_161)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x20448 (* ?x18555 l_0_8_160)))
 (let ((?x20445 (+ (* (* 1.0 l_0_8_112) l_0_8_124) (* (* 1.0 l_0_8_113) l_0_8_125))))
 (let ((?x20451 (- (- (- (+ ?x20445 (* (* 1.0 l_0_8_114) l_0_8_126)) ?x20448) ?x19061) ?x19065)))
 (let ((?x20471 (- (- (- (- (- (- (- ?x20451 ?x20452) ?x20455) ?x20458) ?x20461) ?x20464) ?x20467) ?x20470)))
 (let ((?x20490 (+ (+ (+ (+ (- (- (- ?x20471 ?x20472) ?x20474) ?x20477) ?x20480) ?x20483) ?x20486) ?x20489)))
 (let ((?x20511 (+ (+ (+ (- (+ (+ (- ?x20490 ?x20492) ?x20495) ?x20498) ?x20501) ?x20504) ?x20507) ?x20510)))
 (let ((?x20522 (- (+ (+ (+ ?x20511 ?x20513) ?x20516) ?x20519) (* (* 1.0 l_0_8_76) l_0_8_88))))
 (let ((?x20526 (- (- ?x20522 (* (* 1.0 l_0_8_77) l_0_8_89)) (* (* 1.0 l_0_8_78) l_0_8_90))))
 (= ?x20526 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20518 (* 2.0 l_0_8_57)))
 (let ((?x20713 (* ?x20518 l_0_8_70)))
 (let ((?x20515 (* 2.0 l_0_8_56)))
 (let ((?x20711 (* ?x20515 l_0_8_69)))
 (let ((?x20512 (* 2.0 l_0_8_55)))
 (let ((?x20709 (* ?x20512 l_0_8_68)))
 (let ((?x20509 (* 2.0 l_0_8_54)))
 (let ((?x20707 (* ?x20509 l_0_8_67)))
 (let ((?x20506 (* 2.0 l_0_8_53)))
 (let ((?x20705 (* ?x20506 l_0_8_66)))
 (let ((?x20503 (* 2.0 l_0_8_52)))
 (let ((?x20703 (* ?x20503 l_0_8_65)))
 (let ((?x20500 (* 2.0 l_0_8_21)))
 (let ((?x20701 (* ?x20500 l_0_8_34)))
 (let ((?x20497 (* 2.0 l_0_8_201)))
 (let ((?x20699 (* ?x20497 l_0_8_214)))
 (let ((?x20494 (* 2.0 l_0_8_200)))
 (let ((?x20697 (* ?x20494 l_0_8_213)))
 (let ((?x20491 (* 2.0 l_0_8_20)))
 (let ((?x20695 (* ?x20491 l_0_8_33)))
 (let ((?x20488 (* 2.0 l_0_8_199)))
 (let ((?x20693 (* ?x20488 l_0_8_212)))
 (let ((?x20485 (* 2.0 l_0_8_198)))
 (let ((?x20691 (* ?x20485 l_0_8_211)))
 (let ((?x20482 (* 2.0 l_0_8_197)))
 (let ((?x20689 (* ?x20482 l_0_8_210)))
 (let ((?x20479 (* 2.0 l_0_8_196)))
 (let ((?x20687 (* ?x20479 l_0_8_209)))
 (let ((?x20476 (* 2.0 l_0_8_19)))
 (let ((?x20685 (* ?x20476 l_0_8_32)))
 (let ((?x19082 (* 2.0 l_0_8_18)))
 (let ((?x20683 (* ?x19082 l_0_8_31)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x20681 (* ?x18567 l_0_8_30)))
 (let ((?x20469 (* 2.0 l_0_8_165)))
 (let ((?x20679 (* ?x20469 l_0_8_178)))
 (let ((?x20466 (* 2.0 l_0_8_164)))
 (let ((?x20677 (* ?x20466 l_0_8_177)))
 (let ((?x20463 (* 2.0 l_0_8_163)))
 (let ((?x20675 (* ?x20463 l_0_8_176)))
 (let ((?x20460 (* 2.0 l_0_8_162)))
 (let ((?x20673 (* ?x20460 l_0_8_175)))
 (let ((?x20457 (* 2.0 l_0_8_161)))
 (let ((?x20671 (* ?x20457 l_0_8_174)))
 (let ((?x20454 (* 2.0 l_0_8_160)))
 (let ((?x20669 (* ?x20454 l_0_8_173)))
 (let ((?x20676 (- (- (- (- (* (* (- 2.0) l_0_8_16) l_0_8_29) ?x20669) ?x20671) ?x20673) ?x20675)))
 (let ((?x20690 (+ (+ (- (- (- (- (- ?x20676 ?x20677) ?x20679) ?x20681) ?x20683) ?x20685) ?x20687) ?x20689)))
 (let ((?x20704 (+ (- (+ (+ (- (+ (+ ?x20690 ?x20691) ?x20693) ?x20695) ?x20697) ?x20699) ?x20701) ?x20703)))
 (= (+ (+ (+ (+ (+ ?x20704 ?x20705) ?x20707) ?x20709) ?x20711) ?x20713) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20881 (* l_0_8_64 l_0_8_64)))
 (let ((?x20879 (* l_0_8_63 l_0_8_63)))
 (let ((?x20877 (* l_0_8_62 l_0_8_62)))
 (let ((?x20875 (* l_0_8_61 l_0_8_61)))
 (let ((?x20873 (* l_0_8_60 l_0_8_60)))
 (let ((?x20871 (* l_0_8_59 l_0_8_59)))
 (let ((?x20869 (* l_0_8_58 l_0_8_58)))
 (let ((?x20867 (* l_0_8_28 l_0_8_28)))
 (let ((?x20865 (* l_0_8_27 l_0_8_27)))
 (let ((?x20863 (* l_0_8_26 l_0_8_26)))
 (let ((?x20861 (* l_0_8_25 l_0_8_25)))
 (let ((?x20859 (* l_0_8_24 l_0_8_24)))
 (let ((?x20857 (* l_0_8_23 l_0_8_23)))
 (let ((?x20855 (* l_0_8_22 l_0_8_22)))
 (let ((?x20853 (* l_0_8_208 l_0_8_208)))
 (let ((?x20851 (* l_0_8_207 l_0_8_207)))
 (let ((?x20849 (* l_0_8_206 l_0_8_206)))
 (let ((?x20847 (* l_0_8_205 l_0_8_205)))
 (let ((?x20845 (* l_0_8_204 l_0_8_204)))
 (let ((?x20843 (* l_0_8_203 l_0_8_203)))
 (let ((?x20841 (* l_0_8_202 l_0_8_202)))
 (let ((?x20839 (* l_0_8_172 l_0_8_172)))
 (let ((?x20837 (* l_0_8_171 l_0_8_171)))
 (let ((?x20835 (* l_0_8_170 l_0_8_170)))
 (let ((?x20833 (* l_0_8_169 l_0_8_169)))
 (let ((?x20831 (* l_0_8_168 l_0_8_168)))
 (let ((?x20829 (* l_0_8_167 l_0_8_167)))
 (let ((?x20827 (* l_0_8_166 l_0_8_166)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x19159 (* ?x18561 l_0_8_168)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x19156 (* ?x18558 l_0_8_167)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x19153 (* ?x18555 l_0_8_166)))
 (let ((?x20803 (+ (* (* 1.0 l_0_8_112) l_0_8_130) (* (* 1.0 l_0_8_113) l_0_8_131))))
 (let ((?x20826 (- (- (- (+ ?x20803 (* (* 1.0 l_0_8_114) l_0_8_132)) ?x19153) ?x19156) ?x19159)))
 (let ((?x20840 (- (- (- (- (- (- (- ?x20826 ?x20827) ?x20829) ?x20831) ?x20833) ?x20835) ?x20837) ?x20839)))
 (let ((?x20854 (+ (+ (+ (+ (+ (+ (+ ?x20840 ?x20841) ?x20843) ?x20845) ?x20847) ?x20849) ?x20851) ?x20853)))
 (let ((?x20868 (- (- (- (- (- (- (- ?x20854 ?x20855) ?x20857) ?x20859) ?x20861) ?x20863) ?x20865) ?x20867)))
 (let ((?x20882 (+ (+ (+ (+ (+ (+ (+ ?x20868 ?x20869) ?x20871) ?x20873) ?x20875) ?x20877) ?x20879) ?x20881)))
 (let ((?x20886 (- (- ?x20882 (* (* 1.0 l_0_8_76) l_0_8_94)) (* (* 1.0 l_0_8_77) l_0_8_95))))
 (= (- ?x20886 (* (* 1.0 l_0_8_78) l_0_8_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21071 (* (* 2.0 l_0_8_64) l_0_8_71)))
 (let ((?x21068 (* (* 2.0 l_0_8_63) l_0_8_70)))
 (let ((?x21065 (* (* 2.0 l_0_8_62) l_0_8_69)))
 (let ((?x21062 (* (* 2.0 l_0_8_61) l_0_8_68)))
 (let ((?x21059 (* (* 2.0 l_0_8_60) l_0_8_67)))
 (let ((?x21056 (* (* 2.0 l_0_8_59) l_0_8_66)))
 (let ((?x21053 (* (* 2.0 l_0_8_58) l_0_8_65)))
 (let ((?x21050 (* (* 2.0 l_0_8_28) l_0_8_35)))
 (let ((?x21047 (* (* 2.0 l_0_8_27) l_0_8_34)))
 (let ((?x21044 (* (* 2.0 l_0_8_26) l_0_8_33)))
 (let ((?x21041 (* (* 2.0 l_0_8_25) l_0_8_32)))
 (let ((?x19173 (* 2.0 l_0_8_24)))
 (let ((?x21038 (* ?x19173 l_0_8_31)))
 (let ((?x18698 (* 2.0 l_0_8_23)))
 (let ((?x21036 (* ?x18698 l_0_8_30)))
 (let ((?x19168 (* 2.0 l_0_8_22)))
 (let ((?x21034 (* ?x19168 l_0_8_29)))
 (let ((?x21032 (* (* 2.0 l_0_8_208) l_0_8_215)))
 (let ((?x21029 (* (* 2.0 l_0_8_207) l_0_8_214)))
 (let ((?x21026 (* (* 2.0 l_0_8_206) l_0_8_213)))
 (let ((?x21023 (* (* 2.0 l_0_8_205) l_0_8_212)))
 (let ((?x21020 (* (* 2.0 l_0_8_204) l_0_8_211)))
 (let ((?x21017 (* (* 2.0 l_0_8_203) l_0_8_210)))
 (let ((?x21014 (* (* 2.0 l_0_8_202) l_0_8_209)))
 (let ((?x21011 (* (* 2.0 l_0_8_172) l_0_8_179)))
 (let ((?x21008 (* (* 2.0 l_0_8_171) l_0_8_178)))
 (let ((?x21005 (* (* 2.0 l_0_8_170) l_0_8_177)))
 (let ((?x21002 (* (* 2.0 l_0_8_169) l_0_8_176)))
 (let ((?x20999 (* (* 2.0 l_0_8_168) l_0_8_175)))
 (let ((?x20996 (* (* 2.0 l_0_8_167) l_0_8_174)))
 (let ((?x20993 (* (* 2.0 l_0_8_166) l_0_8_173)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x18562 (* ?x18561 l_0_8_175)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x18559 (* ?x18558 l_0_8_174)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x18556 (* ?x18555 l_0_8_173)))
 (let ((?x20979 (- (* (* (- 1.0) l_0_8_101) l_0_8_76) (* (* 1.0 l_0_8_102) l_0_8_77))))
 (let ((?x20984 (+ (- ?x20979 (* (* 1.0 l_0_8_103) l_0_8_78)) (* (* 1.0 l_0_8_112) l_0_8_137))))
 (let ((?x20988 (+ (+ ?x20984 (* (* 1.0 l_0_8_113) l_0_8_138)) (* (* 1.0 l_0_8_114) l_0_8_139))))
 (let ((?x21003 (- (- (- (- (- (- (- ?x20988 ?x18556) ?x18559) ?x18562) ?x20993) ?x20996) ?x20999) ?x21002)))
 (let ((?x21024 (+ (+ (+ (+ (- (- (- ?x21003 ?x21005) ?x21008) ?x21011) ?x21014) ?x21017) ?x21020) ?x21023)))
 (let ((?x21042 (- (- (- (- (+ (+ (+ ?x21024 ?x21026) ?x21029) ?x21032) ?x21034) ?x21036) ?x21038) ?x21041)))
 (let ((?x21063 (+ (+ (+ (+ (- (- (- ?x21042 ?x21044) ?x21047) ?x21050) ?x21053) ?x21056) ?x21059) ?x21062)))
 (= (+ (+ (+ ?x21063 ?x21065) ?x21068) ?x21071) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21275 (* l_0_8_72 l_0_8_72)))
 (let ((?x21273 (* l_0_8_71 l_0_8_71)))
 (let ((?x21271 (* l_0_8_70 l_0_8_70)))
 (let ((?x21269 (* l_0_8_69 l_0_8_69)))
 (let ((?x21267 (* l_0_8_68 l_0_8_68)))
 (let ((?x21265 (* l_0_8_67 l_0_8_67)))
 (let ((?x21263 (* l_0_8_66 l_0_8_66)))
 (let ((?x21261 (* l_0_8_65 l_0_8_65)))
 (let ((?x21259 (* l_0_8_36 l_0_8_36)))
 (let ((?x21257 (* l_0_8_35 l_0_8_35)))
 (let ((?x21255 (* l_0_8_34 l_0_8_34)))
 (let ((?x21253 (* l_0_8_33 l_0_8_33)))
 (let ((?x21251 (* l_0_8_32 l_0_8_32)))
 (let ((?x21249 (* l_0_8_31 l_0_8_31)))
 (let ((?x21247 (* l_0_8_30 l_0_8_30)))
 (let ((?x21245 (* l_0_8_29 l_0_8_29)))
 (let ((?x21243 (* l_0_8_216 l_0_8_216)))
 (let ((?x21241 (* l_0_8_215 l_0_8_215)))
 (let ((?x21239 (* l_0_8_214 l_0_8_214)))
 (let ((?x21237 (* l_0_8_213 l_0_8_213)))
 (let ((?x21235 (* l_0_8_212 l_0_8_212)))
 (let ((?x21233 (* l_0_8_211 l_0_8_211)))
 (let ((?x21231 (* l_0_8_210 l_0_8_210)))
 (let ((?x21229 (* l_0_8_209 l_0_8_209)))
 (let ((?x21227 (* l_0_8_180 l_0_8_180)))
 (let ((?x21225 (* l_0_8_179 l_0_8_179)))
 (let ((?x21223 (* l_0_8_178 l_0_8_178)))
 (let ((?x21221 (* l_0_8_177 l_0_8_177)))
 (let ((?x21200 (* l_0_8_176 l_0_8_176)))
 (let ((?x21196 (* l_0_8_175 l_0_8_175)))
 (let ((?x21198 (- (- (* (- l_0_8_173) l_0_8_173) (* l_0_8_174 l_0_8_174)) ?x21196)))
 (let ((?x21232 (+ (+ (- (- (- (- (- ?x21198 ?x21200) ?x21221) ?x21223) ?x21225) ?x21227) ?x21229) ?x21231)))
 (let ((?x21246 (- (+ (+ (+ (+ (+ (+ ?x21232 ?x21233) ?x21235) ?x21237) ?x21239) ?x21241) ?x21243) ?x21245)))
 (let ((?x21260 (- (- (- (- (- (- (- ?x21246 ?x21247) ?x21249) ?x21251) ?x21253) ?x21255) ?x21257) ?x21259)))
 (let ((?x21274 (+ (+ (+ (+ (+ (+ (+ ?x21260 ?x21261) ?x21263) ?x21265) ?x21267) ?x21269) ?x21271) ?x21273)))
 (= (+ ?x21274 ?x21275) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x17995 (* l_0_8_37 l_0_8_37)))
 (let ((?x21348 (- (- (* l_0_8_1 l_0_8_1) (* (* 2.0 l_0_8_109) l_0_8_115)) ?x17995)))
 (= (+ ?x21348 (* (* 2.0 l_0_8_73) l_0_8_79)) 0.0))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18038 (* ?x18037 l_0_8_38)))
 (let ((?x21369 (- (* (* 2.0 l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_110) l_0_8_115))))
 (let ((?x21375 (- (- ?x21369 (* (* 2.0 l_0_8_111) l_0_8_116)) (* (* 2.0 l_0_8_289) l_0_8_295))))
 (let ((?x21382 (+ (- (- ?x21375 (* (* 2.0 l_0_8_325) l_0_8_331)) ?x18038) (* (* 2.0 l_0_8_74) l_0_8_79))))
 (= (+ ?x21382 (* (* 2.0 l_0_8_75) l_0_8_80)) 0.0)))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18097 (* ?x18037 l_0_8_40)))
 (let ((?x21423 (- (* (* 2.0 l_0_8_1) l_0_8_4) (* (* 2.0 l_0_8_112) l_0_8_115))))
 (let ((?x21427 (- (- ?x21423 (* (* 2.0 l_0_8_113) l_0_8_116)) (* (* 2.0 l_0_8_114) l_0_8_117))))
 (let ((?x21434 (+ (+ (- ?x21427 ?x18097) (* (* 2.0 l_0_8_76) l_0_8_79)) (* (* 2.0 l_0_8_77) l_0_8_80))))
 (= (+ ?x21434 (* (* 2.0 l_0_8_78) l_0_8_81)) 0.0)))))))
(assert
 (let ((?x21479 (* l_0_8_82 l_0_8_82)))
 (let ((?x21477 (* l_0_8_81 l_0_8_81)))
 (let ((?x21475 (* l_0_8_80 l_0_8_80)))
 (let ((?x21473 (* l_0_8_79 l_0_8_79)))
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18120 (* ?x18037 l_0_8_43)))
 (let ((?x21470 (* l_0_8_118 l_0_8_118)))
 (let ((?x21468 (* l_0_8_117 l_0_8_117)))
 (let ((?x21466 (* l_0_8_116 l_0_8_116)))
 (let ((?x21467 (- (- (* (* 2.0 l_0_8_1) l_0_8_7) (* l_0_8_115 l_0_8_115)) ?x21466)))
 (let ((?x21480 (+ (+ (+ (+ (- (- (- ?x21467 ?x21468) ?x21470) ?x18120) ?x21473) ?x21475) ?x21477) ?x21479)))
 (= ?x21480 0.0)))))))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18143 (* ?x18037 l_0_8_47)))
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x21513 (* ?x21512 l_0_8_259)))
 (let ((?x21502 (- (* (* 2.0 l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_115) l_0_8_119))))
 (let ((?x21508 (- (- ?x21502 (* (* 2.0 l_0_8_116) l_0_8_120)) (* (* 2.0 l_0_8_117) l_0_8_121))))
 (let ((?x21518 (+ (- (- (- ?x21508 (* (* 2.0 l_0_8_118) l_0_8_122)) ?x21513) ?x18143) (* (* 2.0 l_0_8_79) l_0_8_83))))
 (let ((?x21524 (+ (+ ?x21518 (* (* 2.0 l_0_8_80) l_0_8_84)) (* (* 2.0 l_0_8_81) l_0_8_85))))
 (= (+ ?x21524 (* (* 2.0 l_0_8_82) l_0_8_86)) 0.0))))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18166 (* ?x18037 l_0_8_52)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18118 (* ?x18031 l_0_8_187)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18111 (* ?x18028 l_0_8_151)))
 (let ((?x21575 (- (* (* 2.0 l_0_8_1) l_0_8_16) (* (* 2.0 l_0_8_115) l_0_8_124))))
 (let ((?x21579 (- (- ?x21575 (* (* 2.0 l_0_8_116) l_0_8_125)) (* (* 2.0 l_0_8_117) l_0_8_126))))
 (let ((?x21584 (- (- (+ (- ?x21579 (* (* 2.0 l_0_8_118) l_0_8_127)) ?x18111) ?x18118) ?x18166)))
 (let ((?x21588 (+ (+ ?x21584 (* (* 2.0 l_0_8_79) l_0_8_88)) (* (* 2.0 l_0_8_80) l_0_8_89))))
 (let ((?x21592 (+ (+ ?x21588 (* (* 2.0 l_0_8_81) l_0_8_90)) (* (* 2.0 l_0_8_82) l_0_8_91))))
 (= ?x21592 0.0)))))))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18193 (* ?x18037 l_0_8_58)))
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x21513 (* ?x21512 l_0_8_259)))
 (let ((?x21639 (- (* (* 2.0 l_0_8_1) l_0_8_22) (* (* 2.0 l_0_8_115) l_0_8_130))))
 (let ((?x21643 (- (- ?x21639 (* (* 2.0 l_0_8_116) l_0_8_131)) (* (* 2.0 l_0_8_117) l_0_8_132))))
 (let ((?x21649 (+ (- (+ (- ?x21643 (* (* 2.0 l_0_8_118) l_0_8_133)) ?x21513) ?x18193) (* (* 2.0 l_0_8_79) l_0_8_94))))
 (let ((?x21653 (+ (+ ?x21649 (* (* 2.0 l_0_8_80) l_0_8_95)) (* (* 2.0 l_0_8_81) l_0_8_96))))
 (= (+ ?x21653 (* (* 2.0 l_0_8_82) l_0_8_97)) 0.0))))))))))
(assert
 (let ((?x18037 (* 2.0 l_0_8_37)))
 (let ((?x18231 (* ?x18037 l_0_8_65)))
 (let ((?x21697 (+ (* (* 2.0 l_0_8_1) l_0_8_29) (* (* 2.0 l_0_8_101) l_0_8_79))))
 (let ((?x21701 (+ (+ ?x21697 (* (* 2.0 l_0_8_102) l_0_8_80)) (* (* 2.0 l_0_8_103) l_0_8_81))))
 (let ((?x21706 (- (+ ?x21701 (* (* 2.0 l_0_8_104) l_0_8_82)) (* (* 2.0 l_0_8_115) l_0_8_137))))
 (let ((?x21710 (- (- ?x21706 (* (* 2.0 l_0_8_116) l_0_8_138)) (* (* 2.0 l_0_8_117) l_0_8_139))))
 (let ((?x21714 (- (- ?x21710 (* (* 2.0 l_0_8_118) l_0_8_140)) (* (* 2.0 l_0_8_217) l_0_8_223))))
 (= (- ?x21714 ?x18231) 0.0)))))))))
(assert
 (let ((?x17744 (* l_0_8_39 l_0_8_39)))
 (let ((?x17742 (* l_0_8_38 l_0_8_38)))
 (let ((?x17731 (* l_0_8_3 l_0_8_3)))
 (let ((?x21764 (- (- (* l_0_8_2 l_0_8_2) (* (* 2.0 l_0_8_290) l_0_8_295)) (* (* 2.0 l_0_8_291) l_0_8_296))))
 (let ((?x21769 (- (- (+ ?x21764 ?x17731) (* (* 2.0 l_0_8_326) l_0_8_331)) (* (* 2.0 l_0_8_327) l_0_8_332))))
 (= (- (- ?x21769 ?x17742) ?x17744) 0.0)))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18276 (* ?x18275 l_0_8_41)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18273 (* ?x18272 l_0_8_40)))
 (let ((?x18269 (* 2.0 l_0_8_3)))
 (let ((?x18270 (* ?x18269 l_0_8_5)))
 (let ((?x18260 (* 2.0 l_0_8_2)))
 (let ((?x18261 (* ?x18260 l_0_8_4)))
 (let ((?x21806 (- (- ?x18261 (* (* 2.0 l_0_8_292) l_0_8_295)) (* (* 2.0 l_0_8_293) l_0_8_296))))
 (let ((?x21811 (- (+ (- ?x21806 (* (* 2.0 l_0_8_294) l_0_8_297)) ?x18270) (* (* 2.0 l_0_8_328) l_0_8_331))))
 (let ((?x21815 (- (- ?x21811 (* (* 2.0 l_0_8_329) l_0_8_332)) (* (* 2.0 l_0_8_330) l_0_8_333))))
 (= (- (- ?x21815 ?x18273) ?x18276) 0.0)))))))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18353 (* ?x18275 l_0_8_44)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18351 (* ?x18272 l_0_8_43)))
 (let ((?x21880 (* l_0_8_334 l_0_8_334)))
 (let ((?x21878 (* l_0_8_333 l_0_8_333)))
 (let ((?x21876 (* l_0_8_332 l_0_8_332)))
 (let ((?x21874 (* l_0_8_331 l_0_8_331)))
 (let ((?x18269 (* 2.0 l_0_8_3)))
 (let ((?x18343 (* ?x18269 l_0_8_8)))
 (let ((?x21871 (* l_0_8_298 l_0_8_298)))
 (let ((?x21869 (* l_0_8_297 l_0_8_297)))
 (let ((?x21867 (* l_0_8_296 l_0_8_296)))
 (let ((?x21868 (- (- (* (* 2.0 l_0_8_2) l_0_8_7) (* l_0_8_295 l_0_8_295)) ?x21867)))
 (let ((?x21881 (- (- (- (- (+ (- (- ?x21868 ?x21869) ?x21871) ?x18343) ?x21874) ?x21876) ?x21878) ?x21880)))
 (= (- (- ?x21881 ?x18351) ?x18353) 0.0)))))))))))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18479 (* ?x18275 l_0_8_48)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18477 (* ?x18272 l_0_8_47)))
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x21920 (* ?x17871 l_0_8_260)))
 (let ((?x17868 (* 2.0 l_0_8_254)))
 (let ((?x21918 (* ?x17868 l_0_8_259)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x18451 (* ?x18450 l_0_8_3)))
 (let ((?x21924 (- (- (- (+ (* (* 2.0 l_0_8_11) l_0_8_2) ?x18451) ?x21918) ?x21920) (* (* 2.0 l_0_8_295) l_0_8_299))))
 (let ((?x21930 (- (- ?x21924 (* (* 2.0 l_0_8_296) l_0_8_300)) (* (* 2.0 l_0_8_297) l_0_8_301))))
 (let ((?x21936 (- (- ?x21930 (* (* 2.0 l_0_8_298) l_0_8_302)) (* (* 2.0 l_0_8_331) l_0_8_335))))
 (let ((?x21942 (- (- ?x21936 (* (* 2.0 l_0_8_332) l_0_8_336)) (* (* 2.0 l_0_8_333) l_0_8_337))))
 (= (- (- (- ?x21942 (* (* 2.0 l_0_8_334) l_0_8_338)) ?x18477) ?x18479) 0.0))))))))))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18591 (* ?x18275 l_0_8_53)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18589 (* ?x18272 l_0_8_52)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18327 (* ?x18257 l_0_8_188)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18325 (* ?x18254 l_0_8_187)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x18568 (* ?x18567 l_0_8_3)))
 (let ((?x18564 (* 2.0 l_0_8_16)))
 (let ((?x18565 (* ?x18564 l_0_8_2)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18316 (* ?x18246 l_0_8_152)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x22019 (* ?x18453 l_0_8_151)))
 (let ((?x22026 (- (- (- (+ (+ (+ ?x22019 ?x18316) ?x18565) ?x18568) ?x18325) ?x18327) (* (* 2.0 l_0_8_295) l_0_8_304))))
 (let ((?x22030 (- (- ?x22026 (* (* 2.0 l_0_8_296) l_0_8_305)) (* (* 2.0 l_0_8_297) l_0_8_306))))
 (let ((?x22034 (- (- ?x22030 (* (* 2.0 l_0_8_298) l_0_8_307)) (* (* 2.0 l_0_8_331) l_0_8_340))))
 (let ((?x22038 (- (- ?x22034 (* (* 2.0 l_0_8_332) l_0_8_341)) (* (* 2.0 l_0_8_333) l_0_8_342))))
 (= (- (- (- ?x22038 (* (* 2.0 l_0_8_334) l_0_8_343)) ?x18589) ?x18591) 0.0))))))))))))))))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18706 (* ?x18275 l_0_8_59)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18704 (* ?x18272 l_0_8_58)))
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x21920 (* ?x17871 l_0_8_260)))
 (let ((?x17868 (* 2.0 l_0_8_254)))
 (let ((?x21918 (* ?x17868 l_0_8_259)))
 (let ((?x18698 (* 2.0 l_0_8_23)))
 (let ((?x18699 (* ?x18698 l_0_8_3)))
 (let ((?x18260 (* 2.0 l_0_8_2)))
 (let ((?x18690 (* ?x18260 l_0_8_22)))
 (let ((?x22112 (- (+ (+ (+ ?x18690 ?x18699) ?x21918) ?x21920) (* (* 2.0 l_0_8_295) l_0_8_310))))
 (let ((?x22116 (- (- ?x22112 (* (* 2.0 l_0_8_296) l_0_8_311)) (* (* 2.0 l_0_8_297) l_0_8_312))))
 (let ((?x22120 (- (- ?x22116 (* (* 2.0 l_0_8_298) l_0_8_313)) (* (* 2.0 l_0_8_331) l_0_8_346))))
 (let ((?x22124 (- (- ?x22120 (* (* 2.0 l_0_8_332) l_0_8_347)) (* (* 2.0 l_0_8_333) l_0_8_348))))
 (= (- (- (- ?x22124 (* (* 2.0 l_0_8_334) l_0_8_349)) ?x18704) ?x18706) 0.0))))))))))))))))))
(assert
 (let ((?x18275 (* 2.0 l_0_8_39)))
 (let ((?x18810 (* ?x18275 l_0_8_66)))
 (let ((?x18272 (* 2.0 l_0_8_38)))
 (let ((?x18808 (* ?x18272 l_0_8_65)))
 (let ((?x18269 (* 2.0 l_0_8_3)))
 (let ((?x18806 (* ?x18269 l_0_8_30)))
 (let ((?x18260 (* 2.0 l_0_8_2)))
 (let ((?x18798 (* ?x18260 l_0_8_29)))
 (let ((?x22189 (- (- ?x18798 (* (* 2.0 l_0_8_218) l_0_8_223)) (* (* 2.0 l_0_8_219) l_0_8_224))))
 (let ((?x22193 (- (- ?x22189 (* (* 2.0 l_0_8_295) l_0_8_317)) (* (* 2.0 l_0_8_296) l_0_8_318))))
 (let ((?x22197 (- (- ?x22193 (* (* 2.0 l_0_8_297) l_0_8_319)) (* (* 2.0 l_0_8_298) l_0_8_320))))
 (let ((?x22202 (- (- (+ ?x22197 ?x18806) (* (* 2.0 l_0_8_331) l_0_8_353)) (* (* 2.0 l_0_8_332) l_0_8_354))))
 (let ((?x22206 (- (- ?x22202 (* (* 2.0 l_0_8_333) l_0_8_355)) (* (* 2.0 l_0_8_334) l_0_8_356))))
 (= (- (- ?x22206 ?x18808) ?x18810) 0.0)))))))))))))))
(assert
 (let ((?x18887 (* l_0_8_6 l_0_8_6)))
 (let ((?x18885 (* l_0_8_5 l_0_8_5)))
 (let ((?x18883 (* l_0_8_42 l_0_8_42)))
 (let ((?x18881 (* l_0_8_41 l_0_8_41)))
 (let ((?x22282 (- (- (- (* l_0_8_4 l_0_8_4) (* l_0_8_40 l_0_8_40)) ?x18881) ?x18883)))
 (= (+ (+ ?x22282 ?x18885) ?x18887) 0.0)))))))
(assert
 (let ((?x18943 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x18940 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x18937 (* ?x18361 l_0_8_45)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x18935 (* ?x18358 l_0_8_44)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x18933 (* ?x18355 l_0_8_43)))
 (let ((?x18931 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (= (+ (+ (- (- (- ?x18931 ?x18933) ?x18935) ?x18937) ?x18940) ?x18943) 0.0)))))))))))
(assert
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x19023 (* ?x18361 l_0_8_49)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x19021 (* ?x18358 l_0_8_48)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x19019 (* ?x18355 l_0_8_47)))
 (let ((?x18474 (* 2.0 l_0_8_258)))
 (let ((?x22317 (* ?x18474 l_0_8_261)))
 (let ((?x18471 (* 2.0 l_0_8_257)))
 (let ((?x22315 (* ?x18471 l_0_8_260)))
 (let ((?x18468 (* 2.0 l_0_8_256)))
 (let ((?x22313 (* ?x18468 l_0_8_259)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x19005 (* ?x19004 l_0_8_6)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x19002 (* ?x18450 l_0_8_5)))
 (let ((?x22316 (- (- (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x19002) ?x19005) ?x22313) ?x22315)))
 (= (- (- (- (- ?x22316 ?x22317) ?x19019) ?x19021) ?x19023) 0.0)))))))))))))))))))
(assert
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x19095 (* ?x18361 l_0_8_54)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x19093 (* ?x18358 l_0_8_53)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x19091 (* ?x18355 l_0_8_52)))
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x18928 (* ?x18580 l_0_8_189)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x18926 (* ?x18577 l_0_8_188)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x18924 (* ?x18574 l_0_8_187)))
 (let ((?x19082 (* 2.0 l_0_8_18)))
 (let ((?x19083 (* ?x19082 l_0_8_6)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x19080 (* ?x18567 l_0_8_5)))
 (let ((?x18564 (* 2.0 l_0_8_16)))
 (let ((?x19069 (* ?x18564 l_0_8_4)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x18922 (* ?x18561 l_0_8_153)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x18920 (* ?x18558 l_0_8_152)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x19591 (* ?x18555 l_0_8_151)))
 (let ((?x22361 (- (- (+ (+ (+ (+ (+ ?x19591 ?x18920) ?x18922) ?x19069) ?x19080) ?x19083) ?x18924) ?x18926)))
 (= (- (- (- (- ?x22361 ?x18928) ?x19091) ?x19093) ?x19095) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x18361 (* 2.0 l_0_8_42)))
 (let ((?x19180 (* ?x18361 l_0_8_60)))
 (let ((?x18358 (* 2.0 l_0_8_41)))
 (let ((?x19178 (* ?x18358 l_0_8_59)))
 (let ((?x18355 (* 2.0 l_0_8_40)))
 (let ((?x19176 (* ?x18355 l_0_8_58)))
 (let ((?x18474 (* 2.0 l_0_8_258)))
 (let ((?x22317 (* ?x18474 l_0_8_261)))
 (let ((?x18471 (* 2.0 l_0_8_257)))
 (let ((?x22315 (* ?x18471 l_0_8_260)))
 (let ((?x18468 (* 2.0 l_0_8_256)))
 (let ((?x22313 (* ?x18468 l_0_8_259)))
 (let ((?x19173 (* 2.0 l_0_8_24)))
 (let ((?x19174 (* ?x19173 l_0_8_6)))
 (let ((?x18698 (* 2.0 l_0_8_23)))
 (let ((?x19171 (* ?x18698 l_0_8_5)))
 (let ((?x19168 (* 2.0 l_0_8_22)))
 (let ((?x19169 (* ?x19168 l_0_8_4)))
 (let ((?x22396 (- (- (+ (+ (+ (+ (+ ?x19169 ?x19171) ?x19174) ?x22313) ?x22315) ?x22317) ?x19176) ?x19178)))
 (= (- ?x22396 ?x19180) 0.0)))))))))))))))))))))
(assert
 (let ((?x19339 (* l_0_8_9 l_0_8_9)))
 (let ((?x19337 (* l_0_8_8 l_0_8_8)))
 (let ((?x19335 (* l_0_8_7 l_0_8_7)))
 (let ((?x19333 (* l_0_8_46 l_0_8_46)))
 (let ((?x19331 (* l_0_8_45 l_0_8_45)))
 (let ((?x19329 (* l_0_8_44 l_0_8_44)))
 (let ((?x22412 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_43 l_0_8_43)) ?x19329) ?x19331)))
 (= (+ (+ (+ (- ?x22412 ?x19333) ?x19335) ?x19337) ?x19339) 0.0)))))))))
(assert
 (let ((?x19419 (* 2.0 l_0_8_46)))
 (let ((?x19420 (* ?x19419 l_0_8_50)))
 (let ((?x19416 (* 2.0 l_0_8_45)))
 (let ((?x19417 (* ?x19416 l_0_8_49)))
 (let ((?x19413 (* 2.0 l_0_8_44)))
 (let ((?x19414 (* ?x19413 l_0_8_48)))
 (let ((?x19410 (* 2.0 l_0_8_43)))
 (let ((?x19411 (* ?x19410 l_0_8_47)))
 (let ((?x22439 (* l_0_8_262 l_0_8_262)))
 (let ((?x22437 (* l_0_8_261 l_0_8_261)))
 (let ((?x22435 (* l_0_8_260 l_0_8_260)))
 (let ((?x22433 (* l_0_8_259 l_0_8_259)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x19384 (* ?x19004 l_0_8_9)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x19382 (* ?x18450 l_0_8_8)))
 (let ((?x19379 (* 2.0 l_0_8_11)))
 (let ((?x19380 (* ?x19379 l_0_8_7)))
 (let ((?x22434 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x19380) ?x19382) ?x19384) ?x22433)))
 (let ((?x22444 (- (- (- (- (- (- (- ?x22434 ?x22435) ?x22437) ?x22439) ?x19411) ?x19414) ?x19417) ?x19420)))
 (= ?x22444 0.0))))))))))))))))))))))
(assert
 (let ((?x19419 (* 2.0 l_0_8_46)))
 (let ((?x19515 (* ?x19419 l_0_8_55)))
 (let ((?x19416 (* 2.0 l_0_8_45)))
 (let ((?x19513 (* ?x19416 l_0_8_54)))
 (let ((?x19413 (* 2.0 l_0_8_44)))
 (let ((?x19511 (* ?x19413 l_0_8_53)))
 (let ((?x19410 (* 2.0 l_0_8_43)))
 (let ((?x19509 (* ?x19410 l_0_8_52)))
 (let ((?x19325 (* l_0_8_190 l_0_8_190)))
 (let ((?x19323 (* l_0_8_189 l_0_8_189)))
 (let ((?x19321 (* l_0_8_188 l_0_8_188)))
 (let ((?x19319 (* l_0_8_187 l_0_8_187)))
 (let ((?x19082 (* 2.0 l_0_8_18)))
 (let ((?x19499 (* ?x19082 l_0_8_9)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x19497 (* ?x18567 l_0_8_8)))
 (let ((?x18564 (* 2.0 l_0_8_16)))
 (let ((?x19495 (* ?x18564 l_0_8_7)))
 (let ((?x19317 (* l_0_8_154 l_0_8_154)))
 (let ((?x19315 (* l_0_8_153 l_0_8_153)))
 (let ((?x19313 (* l_0_8_152 l_0_8_152)))
 (let ((?x22478 (+ (+ (* (* 2.0 l_0_8_10) l_0_8_19) (* l_0_8_151 l_0_8_151)) ?x19313)))
 (let ((?x22485 (- (- (+ (+ (+ (+ (+ ?x22478 ?x19315) ?x19317) ?x19495) ?x19497) ?x19499) ?x19319) ?x19321)))
 (= (- (- (- (- (- (- ?x22485 ?x19323) ?x19325) ?x19509) ?x19511) ?x19513) ?x19515) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x19419 (* 2.0 l_0_8_46)))
 (let ((?x19623 (* ?x19419 l_0_8_61)))
 (let ((?x19416 (* 2.0 l_0_8_45)))
 (let ((?x19621 (* ?x19416 l_0_8_60)))
 (let ((?x19413 (* 2.0 l_0_8_44)))
 (let ((?x19619 (* ?x19413 l_0_8_59)))
 (let ((?x19410 (* 2.0 l_0_8_43)))
 (let ((?x19617 (* ?x19410 l_0_8_58)))
 (let ((?x22439 (* l_0_8_262 l_0_8_262)))
 (let ((?x22437 (* l_0_8_261 l_0_8_261)))
 (let ((?x22435 (* l_0_8_260 l_0_8_260)))
 (let ((?x22433 (* l_0_8_259 l_0_8_259)))
 (let ((?x19173 (* 2.0 l_0_8_24)))
 (let ((?x19615 (* ?x19173 l_0_8_9)))
 (let ((?x18698 (* 2.0 l_0_8_23)))
 (let ((?x19613 (* ?x18698 l_0_8_8)))
 (let ((?x19168 (* 2.0 l_0_8_22)))
 (let ((?x19611 (* ?x19168 l_0_8_7)))
 (let ((?x22523 (+ (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_25) ?x19611) ?x19613) ?x19615) ?x22433)))
 (let ((?x22530 (- (- (- (- (+ (+ (+ ?x22523 ?x22435) ?x22437) ?x22439) ?x19617) ?x19619) ?x19621) ?x19623)))
 (= ?x22530 0.0))))))))))))))))))))))
(assert
 (let ((?x19419 (* 2.0 l_0_8_46)))
 (let ((?x19763 (* ?x19419 l_0_8_68)))
 (let ((?x19416 (* 2.0 l_0_8_45)))
 (let ((?x19761 (* ?x19416 l_0_8_67)))
 (let ((?x19413 (* 2.0 l_0_8_44)))
 (let ((?x19759 (* ?x19413 l_0_8_66)))
 (let ((?x19410 (* 2.0 l_0_8_43)))
 (let ((?x19757 (* ?x19410 l_0_8_65)))
 (let ((?x18348 (* 2.0 l_0_8_31)))
 (let ((?x19755 (* ?x18348 l_0_8_9)))
 (let ((?x18345 (* 2.0 l_0_8_30)))
 (let ((?x19753 (* ?x18345 l_0_8_8)))
 (let ((?x18340 (* 2.0 l_0_8_29)))
 (let ((?x19751 (* ?x18340 l_0_8_7)))
 (let ((?x22553 (* l_0_8_226 l_0_8_226)))
 (let ((?x22551 (* l_0_8_225 l_0_8_225)))
 (let ((?x22549 (* l_0_8_224 l_0_8_224)))
 (let ((?x22550 (- (- (* (* 2.0 l_0_8_10) l_0_8_32) (* l_0_8_223 l_0_8_223)) ?x22549)))
 (let ((?x22559 (- (- (+ (+ (+ (- (- ?x22550 ?x22551) ?x22553) ?x19751) ?x19753) ?x19755) ?x19757) ?x19759)))
 (= (- (- ?x22559 ?x19761) ?x19763) 0.0)))))))))))))))))))))
(assert
 (let ((?x19872 (* l_0_8_51 l_0_8_51)))
 (let ((?x19870 (* l_0_8_50 l_0_8_50)))
 (let ((?x19868 (* l_0_8_49 l_0_8_49)))
 (let ((?x19866 (* l_0_8_48 l_0_8_48)))
 (let ((?x19864 (* l_0_8_47 l_0_8_47)))
 (let ((?x22605 (* 2.0 l_0_8_262)))
 (let ((?x22606 (* ?x22605 l_0_8_266)))
 (let ((?x22602 (* 2.0 l_0_8_261)))
 (let ((?x22603 (* ?x22602 l_0_8_265)))
 (let ((?x22599 (* 2.0 l_0_8_260)))
 (let ((?x22600 (* ?x22599 l_0_8_264)))
 (let ((?x22596 (* 2.0 l_0_8_259)))
 (let ((?x22597 (* ?x22596 l_0_8_263)))
 (let ((?x19842 (* l_0_8_15 l_0_8_15)))
 (let ((?x19840 (* l_0_8_14 l_0_8_14)))
 (let ((?x19827 (* l_0_8_13 l_0_8_13)))
 (let ((?x22594 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x19827) ?x19840)))
 (let ((?x22609 (- (- (- (- (- (- (+ ?x22594 ?x19842) ?x22597) ?x22600) ?x22603) ?x22606) ?x19864) ?x19866)))
 (= (- (- (- ?x22609 ?x19868) ?x19870) ?x19872) 0.0))))))))))))))))))))
(assert
 (let ((?x19970 (* 2.0 l_0_8_51)))
 (let ((?x19971 (* ?x19970 l_0_8_56)))
 (let ((?x19967 (* 2.0 l_0_8_50)))
 (let ((?x19968 (* ?x19967 l_0_8_55)))
 (let ((?x19964 (* 2.0 l_0_8_49)))
 (let ((?x19965 (* ?x19964 l_0_8_54)))
 (let ((?x19961 (* 2.0 l_0_8_48)))
 (let ((?x19962 (* ?x19961 l_0_8_53)))
 (let ((?x19958 (* 2.0 l_0_8_47)))
 (let ((?x19959 (* ?x19958 l_0_8_52)))
 (let ((?x22605 (* 2.0 l_0_8_262)))
 (let ((?x22669 (* ?x22605 l_0_8_271)))
 (let ((?x22602 (* 2.0 l_0_8_261)))
 (let ((?x22667 (* ?x22602 l_0_8_270)))
 (let ((?x22599 (* 2.0 l_0_8_260)))
 (let ((?x22665 (* ?x22599 l_0_8_269)))
 (let ((?x22596 (* 2.0 l_0_8_259)))
 (let ((?x22663 (* ?x22596 l_0_8_268)))
 (let ((?x19407 (* 2.0 l_0_8_190)))
 (let ((?x19408 (* ?x19407 l_0_8_194)))
 (let ((?x19404 (* 2.0 l_0_8_189)))
 (let ((?x19405 (* ?x19404 l_0_8_193)))
 (let ((?x19401 (* 2.0 l_0_8_188)))
 (let ((?x19402 (* ?x19401 l_0_8_192)))
 (let ((?x19398 (* 2.0 l_0_8_187)))
 (let ((?x19399 (* ?x19398 l_0_8_191)))
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19396 (* ?x19395 l_0_8_158)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19393 (* ?x19392 l_0_8_157)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19390 (* ?x19389 l_0_8_156)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19387 (* ?x19386 l_0_8_155)))
 (let ((?x19925 (* 2.0 l_0_8_15)))
 (let ((?x19926 (* ?x19925 l_0_8_20)))
 (let ((?x19922 (* 2.0 l_0_8_14)))
 (let ((?x19923 (* ?x19922 l_0_8_19)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x19920 (* ?x19004 l_0_8_18)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x19918 (* ?x18450 l_0_8_17)))
 (let ((?x22654 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_16) ?x19918) ?x19920) ?x19923) ?x19926)))
 (let ((?x22661 (- (- (- (+ (+ (+ (+ ?x22654 ?x19387) ?x19390) ?x19393) ?x19396) ?x19399) ?x19402) ?x19405)))
 (let ((?x22672 (- (- (- (- (- (- (- ?x22661 ?x19408) ?x22663) ?x22665) ?x22667) ?x22669) ?x19959) ?x19962)))
 (= (- (- (- ?x22672 ?x19965) ?x19968) ?x19971) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19970 (* 2.0 l_0_8_51)))
 (let ((?x20099 (* ?x19970 l_0_8_62)))
 (let ((?x19967 (* 2.0 l_0_8_50)))
 (let ((?x20097 (* ?x19967 l_0_8_61)))
 (let ((?x19964 (* 2.0 l_0_8_49)))
 (let ((?x20095 (* ?x19964 l_0_8_60)))
 (let ((?x19961 (* 2.0 l_0_8_48)))
 (let ((?x20093 (* ?x19961 l_0_8_59)))
 (let ((?x19958 (* 2.0 l_0_8_47)))
 (let ((?x20091 (* ?x19958 l_0_8_58)))
 (let ((?x22605 (* 2.0 l_0_8_262)))
 (let ((?x22754 (* ?x22605 l_0_8_277)))
 (let ((?x22606 (* ?x22605 l_0_8_266)))
 (let ((?x22602 (* 2.0 l_0_8_261)))
 (let ((?x22751 (* ?x22602 l_0_8_276)))
 (let ((?x22603 (* ?x22602 l_0_8_265)))
 (let ((?x22599 (* 2.0 l_0_8_260)))
 (let ((?x22748 (* ?x22599 l_0_8_275)))
 (let ((?x22600 (* ?x22599 l_0_8_264)))
 (let ((?x22596 (* 2.0 l_0_8_259)))
 (let ((?x22745 (* ?x22596 l_0_8_274)))
 (let ((?x22597 (* ?x22596 l_0_8_263)))
 (let ((?x19925 (* 2.0 l_0_8_15)))
 (let ((?x20068 (* ?x19925 l_0_8_26)))
 (let ((?x19922 (* 2.0 l_0_8_14)))
 (let ((?x20064 (* ?x19922 l_0_8_25)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x20049 (* ?x19004 l_0_8_24)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x20045 (* ?x18450 l_0_8_23)))
 (let ((?x22743 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_22) ?x20045) ?x20049) ?x20064) ?x20068)))
 (let ((?x22753 (+ (- (+ (- (+ (- (+ ?x22743 ?x22597) ?x22745) ?x22600) ?x22748) ?x22603) ?x22751) ?x22606)))
 (= (- (- (- (- (- (- ?x22753 ?x22754) ?x20091) ?x20093) ?x20095) ?x20097) ?x20099) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19970 (* 2.0 l_0_8_51)))
 (let ((?x20260 (* ?x19970 l_0_8_69)))
 (let ((?x19967 (* 2.0 l_0_8_50)))
 (let ((?x20258 (* ?x19967 l_0_8_68)))
 (let ((?x19964 (* 2.0 l_0_8_49)))
 (let ((?x20256 (* ?x19964 l_0_8_67)))
 (let ((?x19961 (* 2.0 l_0_8_48)))
 (let ((?x20254 (* ?x19961 l_0_8_66)))
 (let ((?x19958 (* 2.0 l_0_8_47)))
 (let ((?x20252 (* ?x19958 l_0_8_65)))
 (let ((?x22605 (* 2.0 l_0_8_262)))
 (let ((?x22829 (* ?x22605 l_0_8_284)))
 (let ((?x22602 (* 2.0 l_0_8_261)))
 (let ((?x22827 (* ?x22602 l_0_8_283)))
 (let ((?x22599 (* 2.0 l_0_8_260)))
 (let ((?x22825 (* ?x22599 l_0_8_282)))
 (let ((?x22596 (* 2.0 l_0_8_259)))
 (let ((?x22823 (* ?x22596 l_0_8_281)))
 (let ((?x19925 (* 2.0 l_0_8_15)))
 (let ((?x20230 (* ?x19925 l_0_8_33)))
 (let ((?x19922 (* 2.0 l_0_8_14)))
 (let ((?x20228 (* ?x19922 l_0_8_32)))
 (let ((?x19004 (* 2.0 l_0_8_13)))
 (let ((?x20226 (* ?x19004 l_0_8_31)))
 (let ((?x18450 (* 2.0 l_0_8_12)))
 (let ((?x20224 (* ?x18450 l_0_8_30)))
 (let ((?x22810 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_29) ?x20224) ?x20226) ?x20228) ?x20230)))
 (let ((?x22816 (- (- ?x22810 (* (* 2.0 l_0_8_223) l_0_8_227)) (* (* 2.0 l_0_8_224) l_0_8_228))))
 (let ((?x22822 (- (- ?x22816 (* (* 2.0 l_0_8_225) l_0_8_229)) (* (* 2.0 l_0_8_226) l_0_8_230))))
 (let ((?x22833 (- (- (- (- (- (- (- ?x22822 ?x22823) ?x22825) ?x22827) ?x22829) ?x20252) ?x20254) ?x20256)))
 (= (- (- ?x22833 ?x20258) ?x20260) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x20388 (* l_0_8_57 l_0_8_57)))
 (let ((?x20386 (* l_0_8_56 l_0_8_56)))
 (let ((?x20384 (* l_0_8_55 l_0_8_55)))
 (let ((?x20382 (* l_0_8_54 l_0_8_54)))
 (let ((?x20380 (* l_0_8_53 l_0_8_53)))
 (let ((?x20378 (* l_0_8_52 l_0_8_52)))
 (let ((?x20376 (* l_0_8_21 l_0_8_21)))
 (let ((?x20370 (* l_0_8_20 l_0_8_20)))
 (let ((?x19407 (* 2.0 l_0_8_190)))
 (let ((?x19507 (* ?x19407 l_0_8_199)))
 (let ((?x20360 (* l_0_8_19 l_0_8_19)))
 (let ((?x19404 (* 2.0 l_0_8_189)))
 (let ((?x19505 (* ?x19404 l_0_8_198)))
 (let ((?x19401 (* 2.0 l_0_8_188)))
 (let ((?x19503 (* ?x19401 l_0_8_197)))
 (let ((?x19398 (* 2.0 l_0_8_187)))
 (let ((?x19501 (* ?x19398 l_0_8_196)))
 (let ((?x20358 (* l_0_8_18 l_0_8_18)))
 (let ((?x20356 (* l_0_8_17 l_0_8_17)))
 (let ((?x20392 (* l_0_8_16 l_0_8_16)))
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19482 (* ?x19395 l_0_8_163)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19478 (* ?x19392 l_0_8_162)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19474 (* ?x19389 l_0_8_161)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19470 (* ?x19386 l_0_8_160)))
 (let ((?x22913 (- (+ (+ (+ (+ (+ (+ ?x19470 ?x19474) ?x19478) ?x19482) ?x20392) ?x20356) ?x20358) ?x19501)))
 (let ((?x22920 (- (+ (+ (- (+ (- (- ?x22913 ?x19503) ?x19505) ?x20360) ?x19507) ?x20370) ?x20376) ?x20378)))
 (= (- (- (- (- (- ?x22920 ?x20380) ?x20382) ?x20384) ?x20386) ?x20388) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x20518 (* 2.0 l_0_8_57)))
 (let ((?x20519 (* ?x20518 l_0_8_63)))
 (let ((?x20515 (* 2.0 l_0_8_56)))
 (let ((?x20516 (* ?x20515 l_0_8_62)))
 (let ((?x20512 (* 2.0 l_0_8_55)))
 (let ((?x20513 (* ?x20512 l_0_8_61)))
 (let ((?x20509 (* 2.0 l_0_8_54)))
 (let ((?x20510 (* ?x20509 l_0_8_60)))
 (let ((?x20506 (* 2.0 l_0_8_53)))
 (let ((?x20507 (* ?x20506 l_0_8_59)))
 (let ((?x20503 (* 2.0 l_0_8_52)))
 (let ((?x20504 (* ?x20503 l_0_8_58)))
 (let ((?x22605 (* 2.0 l_0_8_262)))
 (let ((?x22669 (* ?x22605 l_0_8_271)))
 (let ((?x22602 (* 2.0 l_0_8_261)))
 (let ((?x22667 (* ?x22602 l_0_8_270)))
 (let ((?x22599 (* 2.0 l_0_8_260)))
 (let ((?x22665 (* ?x22599 l_0_8_269)))
 (let ((?x22596 (* 2.0 l_0_8_259)))
 (let ((?x22663 (* ?x22596 l_0_8_268)))
 (let ((?x20500 (* 2.0 l_0_8_21)))
 (let ((?x20501 (* ?x20500 l_0_8_27)))
 (let ((?x20491 (* 2.0 l_0_8_20)))
 (let ((?x20492 (* ?x20491 l_0_8_26)))
 (let ((?x19407 (* 2.0 l_0_8_190)))
 (let ((?x19609 (* ?x19407 l_0_8_205)))
 (let ((?x20476 (* 2.0 l_0_8_19)))
 (let ((?x20477 (* ?x20476 l_0_8_25)))
 (let ((?x19404 (* 2.0 l_0_8_189)))
 (let ((?x19607 (* ?x19404 l_0_8_204)))
 (let ((?x19401 (* 2.0 l_0_8_188)))
 (let ((?x19605 (* ?x19401 l_0_8_203)))
 (let ((?x19398 (* 2.0 l_0_8_187)))
 (let ((?x19603 (* ?x19398 l_0_8_202)))
 (let ((?x19082 (* 2.0 l_0_8_18)))
 (let ((?x20474 (* ?x19082 l_0_8_24)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x20472 (* ?x18567 l_0_8_23)))
 (let ((?x18564 (* 2.0 l_0_8_16)))
 (let ((?x20452 (* ?x18564 l_0_8_22)))
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19601 (* ?x19395 l_0_8_169)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19599 (* ?x19392 l_0_8_168)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19597 (* ?x19389 l_0_8_167)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19595 (* ?x19386 l_0_8_166)))
 (let ((?x22965 (- (+ (+ (+ (+ (+ (+ ?x19595 ?x19597) ?x19599) ?x19601) ?x20452) ?x20472) ?x20474) ?x19603)))
 (let ((?x22972 (+ (+ (+ (- (+ (- (- ?x22965 ?x19605) ?x19607) ?x20477) ?x19609) ?x20492) ?x20501) ?x22663)))
 (let ((?x22979 (- (- (- (- (+ (+ (+ ?x22972 ?x22665) ?x22667) ?x22669) ?x20504) ?x20507) ?x20510) ?x20513)))
 (= (- (- ?x22979 ?x20516) ?x20519) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20518 (* 2.0 l_0_8_57)))
 (let ((?x20713 (* ?x20518 l_0_8_70)))
 (let ((?x20515 (* 2.0 l_0_8_56)))
 (let ((?x20711 (* ?x20515 l_0_8_69)))
 (let ((?x20512 (* 2.0 l_0_8_55)))
 (let ((?x20709 (* ?x20512 l_0_8_68)))
 (let ((?x20509 (* 2.0 l_0_8_54)))
 (let ((?x20707 (* ?x20509 l_0_8_67)))
 (let ((?x20506 (* 2.0 l_0_8_53)))
 (let ((?x20705 (* ?x20506 l_0_8_66)))
 (let ((?x20503 (* 2.0 l_0_8_52)))
 (let ((?x20703 (* ?x20503 l_0_8_65)))
 (let ((?x20500 (* 2.0 l_0_8_21)))
 (let ((?x20701 (* ?x20500 l_0_8_34)))
 (let ((?x20491 (* 2.0 l_0_8_20)))
 (let ((?x20695 (* ?x20491 l_0_8_33)))
 (let ((?x19407 (* 2.0 l_0_8_190)))
 (let ((?x19749 (* ?x19407 l_0_8_212)))
 (let ((?x20476 (* 2.0 l_0_8_19)))
 (let ((?x20685 (* ?x20476 l_0_8_32)))
 (let ((?x19404 (* 2.0 l_0_8_189)))
 (let ((?x19747 (* ?x19404 l_0_8_211)))
 (let ((?x19401 (* 2.0 l_0_8_188)))
 (let ((?x19745 (* ?x19401 l_0_8_210)))
 (let ((?x19398 (* 2.0 l_0_8_187)))
 (let ((?x19743 (* ?x19398 l_0_8_209)))
 (let ((?x19082 (* 2.0 l_0_8_18)))
 (let ((?x20683 (* ?x19082 l_0_8_31)))
 (let ((?x18567 (* 2.0 l_0_8_17)))
 (let ((?x20681 (* ?x18567 l_0_8_30)))
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19741 (* ?x19395 l_0_8_176)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19739 (* ?x19392 l_0_8_175)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19737 (* ?x19389 l_0_8_174)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19735 (* ?x19386 l_0_8_173)))
 (let ((?x23021 (+ (+ (+ (+ ?x19735 ?x19737) ?x19739) ?x19741) (* (* 2.0 l_0_8_16) l_0_8_29))))
 (let ((?x23028 (- (+ (- (- (- (+ (+ ?x23021 ?x20681) ?x20683) ?x19743) ?x19745) ?x19747) ?x20685) ?x19749)))
 (let ((?x23034 (- (- (+ (+ ?x23028 ?x20695) ?x20701) (* (* 2.0 l_0_8_223) l_0_8_232)) (* (* 2.0 l_0_8_224) l_0_8_233))))
 (let ((?x23038 (- (- ?x23034 (* (* 2.0 l_0_8_225) l_0_8_234)) (* (* 2.0 l_0_8_226) l_0_8_235))))
 (= (- (- (- (- (- (- ?x23038 ?x20703) ?x20705) ?x20707) ?x20709) ?x20711) ?x20713) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20881 (* l_0_8_64 l_0_8_64)))
 (let ((?x20879 (* l_0_8_63 l_0_8_63)))
 (let ((?x20877 (* l_0_8_62 l_0_8_62)))
 (let ((?x20875 (* l_0_8_61 l_0_8_61)))
 (let ((?x20873 (* l_0_8_60 l_0_8_60)))
 (let ((?x20871 (* l_0_8_59 l_0_8_59)))
 (let ((?x20869 (* l_0_8_58 l_0_8_58)))
 (let ((?x20867 (* l_0_8_28 l_0_8_28)))
 (let ((?x20865 (* l_0_8_27 l_0_8_27)))
 (let ((?x22605 (* 2.0 l_0_8_262)))
 (let ((?x22754 (* ?x22605 l_0_8_277)))
 (let ((?x22602 (* 2.0 l_0_8_261)))
 (let ((?x22751 (* ?x22602 l_0_8_276)))
 (let ((?x22599 (* 2.0 l_0_8_260)))
 (let ((?x22748 (* ?x22599 l_0_8_275)))
 (let ((?x20863 (* l_0_8_26 l_0_8_26)))
 (let ((?x22596 (* 2.0 l_0_8_259)))
 (let ((?x22745 (* ?x22596 l_0_8_274)))
 (let ((?x20861 (* l_0_8_25 l_0_8_25)))
 (let ((?x20859 (* l_0_8_24 l_0_8_24)))
 (let ((?x23112 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x20859) ?x20861)))
 (let ((?x23119 (+ (+ (+ (+ (+ (+ (+ ?x23112 ?x22745) ?x20863) ?x22748) ?x22751) ?x22754) ?x20865) ?x20867)))
 (let ((?x23126 (- (- (- (- (- (- (- ?x23119 ?x20869) ?x20871) ?x20873) ?x20875) ?x20877) ?x20879) ?x20881)))
 (= ?x23126 0.0)))))))))))))))))))))))))
(assert
 (let ((?x21071 (* (* 2.0 l_0_8_64) l_0_8_71)))
 (let ((?x21068 (* (* 2.0 l_0_8_63) l_0_8_70)))
 (let ((?x21065 (* (* 2.0 l_0_8_62) l_0_8_69)))
 (let ((?x21062 (* (* 2.0 l_0_8_61) l_0_8_68)))
 (let ((?x21059 (* (* 2.0 l_0_8_60) l_0_8_67)))
 (let ((?x21056 (* (* 2.0 l_0_8_59) l_0_8_66)))
 (let ((?x21053 (* (* 2.0 l_0_8_58) l_0_8_65)))
 (let ((?x21050 (* (* 2.0 l_0_8_28) l_0_8_35)))
 (let ((?x21047 (* (* 2.0 l_0_8_27) l_0_8_34)))
 (let ((?x22605 (* 2.0 l_0_8_262)))
 (let ((?x22829 (* ?x22605 l_0_8_284)))
 (let ((?x22602 (* 2.0 l_0_8_261)))
 (let ((?x22827 (* ?x22602 l_0_8_283)))
 (let ((?x22599 (* 2.0 l_0_8_260)))
 (let ((?x22825 (* ?x22599 l_0_8_282)))
 (let ((?x21044 (* (* 2.0 l_0_8_26) l_0_8_33)))
 (let ((?x22596 (* 2.0 l_0_8_259)))
 (let ((?x22823 (* ?x22596 l_0_8_281)))
 (let ((?x21041 (* (* 2.0 l_0_8_25) l_0_8_32)))
 (let ((?x19173 (* 2.0 l_0_8_24)))
 (let ((?x21038 (* ?x19173 l_0_8_31)))
 (let ((?x18698 (* 2.0 l_0_8_23)))
 (let ((?x21036 (* ?x18698 l_0_8_30)))
 (let ((?x19168 (* 2.0 l_0_8_22)))
 (let ((?x21034 (* ?x19168 l_0_8_29)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18316 (* ?x18246 l_0_8_152)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x22019 (* ?x18453 l_0_8_151)))
 (let ((?x23146 (+ (* (* 1.0 l_0_8_110) l_0_8_115) (* (* 1.0 l_0_8_111) l_0_8_116))))
 (let ((?x23151 (- (+ (- (- ?x23146 ?x22019) ?x18316) ?x21034) (* (* 2.0 l_0_8_223) l_0_8_238))))
 (let ((?x23155 (- (- ?x23151 (* (* 2.0 l_0_8_224) l_0_8_239)) (* (* 2.0 l_0_8_225) l_0_8_240))))
 (let ((?x23160 (+ (+ (+ (- ?x23155 (* (* 2.0 l_0_8_226) l_0_8_241)) ?x21036) ?x21038) ?x21041)))
 (let ((?x23167 (+ (+ (+ (+ (+ (+ (+ ?x23160 ?x22823) ?x21044) ?x22825) ?x22827) ?x22829) ?x21047) ?x21050)))
 (let ((?x23174 (- (- (- (- (- (- (- ?x23167 ?x21053) ?x21056) ?x21059) ?x21062) ?x21065) ?x21068) ?x21071)))
 (let ((?x23178 (- (- ?x23174 (* (* 1.0 l_0_8_74) l_0_8_79)) (* (* 1.0 l_0_8_75) l_0_8_80))))
 (= ?x23178 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21275 (* l_0_8_72 l_0_8_72)))
 (let ((?x21273 (* l_0_8_71 l_0_8_71)))
 (let ((?x21271 (* l_0_8_70 l_0_8_70)))
 (let ((?x21269 (* l_0_8_69 l_0_8_69)))
 (let ((?x21267 (* l_0_8_68 l_0_8_68)))
 (let ((?x21265 (* l_0_8_67 l_0_8_67)))
 (let ((?x21263 (* l_0_8_66 l_0_8_66)))
 (let ((?x21261 (* l_0_8_65 l_0_8_65)))
 (let ((?x21259 (* l_0_8_36 l_0_8_36)))
 (let ((?x21257 (* l_0_8_35 l_0_8_35)))
 (let ((?x21255 (* l_0_8_34 l_0_8_34)))
 (let ((?x21253 (* l_0_8_33 l_0_8_33)))
 (let ((?x21251 (* l_0_8_32 l_0_8_32)))
 (let ((?x21249 (* l_0_8_31 l_0_8_31)))
 (let ((?x21247 (* l_0_8_30 l_0_8_30)))
 (let ((?x21245 (* l_0_8_29 l_0_8_29)))
 (let ((?x23253 (- (* (* (- 2.0) l_0_8_223) l_0_8_245) (* (* 2.0 l_0_8_224) l_0_8_246))))
 (let ((?x23257 (- (- ?x23253 (* (* 2.0 l_0_8_225) l_0_8_247)) (* (* 2.0 l_0_8_226) l_0_8_248))))
 (let ((?x23264 (+ (+ (+ (+ (+ (+ (+ ?x23257 ?x21245) ?x21247) ?x21249) ?x21251) ?x21253) ?x21255) ?x21257)))
 (let ((?x23271 (- (- (- (- (- (- (+ ?x23264 ?x21259) ?x21261) ?x21263) ?x21265) ?x21267) ?x21269) ?x21271)))
 (= (- (- ?x23271 ?x21273) ?x21275) 0.0))))))))))))))))))))))
(assert
 (let ((?x23318 (- (- (* (/ 1.0 2.0) (* l_0_8_109 l_0_8_109)) (* l_0_8_145 l_0_8_145)) (* (* (/ 1.0 2.0) l_0_8_73) l_0_8_73))))
 (= ?x23318 0.0)))
(assert
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x23373 (* ?x21512 l_0_8_281)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18029 (* ?x18028 l_0_8_146)))
 (let ((?x23334 (+ (* (* 2.0 l_0_8_100) l_0_8_107) (* (* 2.0 l_0_8_101) l_0_8_94))))
 (let ((?x23338 (+ (+ ?x23334 (* (* 2.0 l_0_8_102) l_0_8_95)) (* (* 2.0 l_0_8_103) l_0_8_96))))
 (let ((?x23343 (+ (+ ?x23338 (* (* 2.0 l_0_8_104) l_0_8_97)) (* (* 2.0 l_0_8_105) l_0_8_98))))
 (let ((?x23348 (+ (+ ?x23343 (* (* 2.0 l_0_8_106) l_0_8_99)) (* (* 1.0 l_0_8_109) l_0_8_110))))
 (let ((?x23354 (- (- ?x23348 (* (* 2.0 l_0_8_130) l_0_8_137)) (* (* 2.0 l_0_8_131) l_0_8_138))))
 (let ((?x23360 (- (- ?x23354 (* (* 2.0 l_0_8_132) l_0_8_139)) (* (* 2.0 l_0_8_133) l_0_8_140))))
 (let ((?x23366 (- (- ?x23360 (* (* 2.0 l_0_8_134) l_0_8_141)) (* (* 2.0 l_0_8_135) l_0_8_142))))
 (let ((?x23372 (- (- (- ?x23366 (* (* 2.0 l_0_8_136) l_0_8_143)) ?x18029) (* (* 2.0 l_0_8_217) l_0_8_238))))
 (= (- (+ ?x23372 ?x23373) (* (* 1.0 l_0_8_73) l_0_8_74)) 0.0))))))))))))))
(assert
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18111 (* ?x18028 l_0_8_151)))
 (let ((?x23465 (- (- (* (* 1.0 l_0_8_109) l_0_8_115) ?x18111) (* (* 1.0 l_0_8_73) l_0_8_79))))
 (= ?x23465 0.0)))))
(assert
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18134 (* ?x18028 l_0_8_155)))
 (let ((?x23478 (- (- (* (* 1.0 l_0_8_109) l_0_8_119) ?x18134) (* (* 1.0 l_0_8_73) l_0_8_83))))
 (= ?x23478 0.0)))))
(assert
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18157 (* ?x18028 l_0_8_160)))
 (let ((?x23493 (- (- (* (* 1.0 l_0_8_109) l_0_8_124) ?x18157) (* (* 1.0 l_0_8_73) l_0_8_88))))
 (= ?x23493 0.0)))))
(assert
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18189 (* ?x18028 l_0_8_166)))
 (let ((?x23508 (- (- (* (* 1.0 l_0_8_109) l_0_8_130) ?x18189) (* (* 1.0 l_0_8_73) l_0_8_94))))
 (= ?x23508 0.0)))))
(assert
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18227 (* ?x18028 l_0_8_173)))
 (let ((?x23522 (+ (* (* (- 1.0) l_0_8_101) l_0_8_73) (* (* 1.0 l_0_8_109) l_0_8_137))))
 (= (- ?x23522 ?x18227) 0.0)))))
(assert
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x17872 (* ?x17871 l_0_8_282)))
 (let ((?x17868 (* 2.0 l_0_8_254)))
 (let ((?x17869 (* ?x17868 l_0_8_281)))
 (let ((?x17708 (* l_0_8_147 l_0_8_147)))
 (let ((?x17749 (* l_0_8_146 l_0_8_146)))
 (let ((?x23538 (+ (* (/ 1.0 2.0) (* l_0_8_110 l_0_8_110)) (* (/ 1.0 2.0) (* l_0_8_111 l_0_8_111)))))
 (let ((?x23544 (- (- (- (- ?x23538 ?x17749) ?x17708) (* (* 2.0 l_0_8_218) l_0_8_238)) (* (* 2.0 l_0_8_219) l_0_8_239))))
 (let ((?x23552 (- (- (+ (+ ?x23544 ?x17869) ?x17872) (* (* 2.0 l_0_8_310) l_0_8_317)) (* (* 2.0 l_0_8_311) l_0_8_318))))
 (let ((?x23558 (- (- ?x23552 (* (* 2.0 l_0_8_312) l_0_8_319)) (* (* 2.0 l_0_8_313) l_0_8_320))))
 (let ((?x23564 (- (- ?x23558 (* (* 2.0 l_0_8_314) l_0_8_321)) (* (* 2.0 l_0_8_315) l_0_8_322))))
 (let ((?x23570 (- (- ?x23564 (* (* 2.0 l_0_8_316) l_0_8_323)) (* (* 2.0 l_0_8_346) l_0_8_353))))
 (let ((?x23576 (- (- ?x23570 (* (* 2.0 l_0_8_347) l_0_8_354)) (* (* 2.0 l_0_8_348) l_0_8_355))))
 (let ((?x23582 (- (- ?x23576 (* (* 2.0 l_0_8_349) l_0_8_356)) (* (* 2.0 l_0_8_350) l_0_8_357))))
 (let ((?x23588 (- (- ?x23582 (* (* 2.0 l_0_8_351) l_0_8_358)) (* (* 2.0 l_0_8_352) l_0_8_359))))
 (let ((?x23594 (- (- ?x23588 (* (* (/ 1.0 2.0) l_0_8_74) l_0_8_74)) (* (* (/ 1.0 2.0) l_0_8_75) l_0_8_75))))
 (= ?x23594 0.0))))))))))))))))))
(assert
 (let ((?x23767 (* (* 2.0 l_0_8_280) l_0_8_287)))
 (let ((?x23764 (* (* 2.0 l_0_8_279) l_0_8_286)))
 (let ((?x23761 (* (* 2.0 l_0_8_278) l_0_8_285)))
 (let ((?x23758 (* (* 2.0 l_0_8_277) l_0_8_284)))
 (let ((?x23755 (* (* 2.0 l_0_8_276) l_0_8_283)))
 (let ((?x23752 (* (* 2.0 l_0_8_275) l_0_8_282)))
 (let ((?x23749 (* (* 2.0 l_0_8_274) l_0_8_281)))
 (let ((?x23745 (* 2.0 l_0_8_267)))
 (let ((?x23746 (* ?x23745 l_0_8_285)))
 (let ((?x23742 (* 2.0 l_0_8_266)))
 (let ((?x23743 (* ?x23742 l_0_8_284)))
 (let ((?x23739 (* 2.0 l_0_8_265)))
 (let ((?x23740 (* ?x23739 l_0_8_283)))
 (let ((?x23736 (* 2.0 l_0_8_264)))
 (let ((?x23737 (* ?x23736 l_0_8_282)))
 (let ((?x23733 (* 2.0 l_0_8_263)))
 (let ((?x23734 (* ?x23733 l_0_8_281)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18456 (* ?x18246 l_0_8_156)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x18454 (* ?x18453 l_0_8_155)))
 (let ((?x23715 (+ (* (* 1.0 l_0_8_110) l_0_8_119) (* (* 1.0 l_0_8_111) l_0_8_120))))
 (let ((?x23723 (- (- (- (- ?x23715 ?x18454) ?x18456) (* (* 2.0 l_0_8_227) l_0_8_238)) (* (* 2.0 l_0_8_228) l_0_8_239))))
 (let ((?x23729 (- (- ?x23723 (* (* 2.0 l_0_8_229) l_0_8_240)) (* (* 2.0 l_0_8_230) l_0_8_241))))
 (let ((?x23741 (+ (+ (+ (- ?x23729 (* (* 2.0 l_0_8_231) l_0_8_242)) ?x23734) ?x23737) ?x23740)))
 (let ((?x23762 (- (- (- (- (- (+ (+ ?x23741 ?x23743) ?x23746) ?x23749) ?x23752) ?x23755) ?x23758) ?x23761)))
 (let ((?x23772 (- (- (- (- ?x23762 ?x23764) ?x23767) (* (* 1.0 l_0_8_74) l_0_8_83)) (* (* 1.0 l_0_8_75) l_0_8_84))))
 (= ?x23772 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x23934 (* 2.0 l_0_8_273)))
 (let ((?x23935 (* ?x23934 l_0_8_286)))
 (let ((?x23931 (* 2.0 l_0_8_272)))
 (let ((?x23932 (* ?x23931 l_0_8_285)))
 (let ((?x23928 (* 2.0 l_0_8_271)))
 (let ((?x23929 (* ?x23928 l_0_8_284)))
 (let ((?x23925 (* 2.0 l_0_8_270)))
 (let ((?x23926 (* ?x23925 l_0_8_283)))
 (let ((?x23922 (* 2.0 l_0_8_269)))
 (let ((?x23923 (* ?x23922 l_0_8_282)))
 (let ((?x23919 (* 2.0 l_0_8_268)))
 (let ((?x23920 (* ?x23919 l_0_8_281)))
 (let ((?x21032 (* (* 2.0 l_0_8_208) l_0_8_215)))
 (let ((?x21029 (* (* 2.0 l_0_8_207) l_0_8_214)))
 (let ((?x21026 (* (* 2.0 l_0_8_206) l_0_8_213)))
 (let ((?x21023 (* (* 2.0 l_0_8_205) l_0_8_212)))
 (let ((?x21020 (* (* 2.0 l_0_8_204) l_0_8_211)))
 (let ((?x21017 (* (* 2.0 l_0_8_203) l_0_8_210)))
 (let ((?x21014 (* (* 2.0 l_0_8_202) l_0_8_209)))
 (let ((?x21011 (* (* 2.0 l_0_8_172) l_0_8_179)))
 (let ((?x21008 (* (* 2.0 l_0_8_171) l_0_8_178)))
 (let ((?x21005 (* (* 2.0 l_0_8_170) l_0_8_177)))
 (let ((?x21002 (* (* 2.0 l_0_8_169) l_0_8_176)))
 (let ((?x20999 (* (* 2.0 l_0_8_168) l_0_8_175)))
 (let ((?x20996 (* (* 2.0 l_0_8_167) l_0_8_174)))
 (let ((?x20993 (* (* 2.0 l_0_8_166) l_0_8_173)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18546 (* ?x18246 l_0_8_161)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x23884 (* ?x18453 l_0_8_160)))
 (let ((?x23883 (+ (* (* 1.0 l_0_8_110) l_0_8_124) (* (* 1.0 l_0_8_111) l_0_8_125))))
 (let ((?x23891 (+ (+ (+ (+ (+ (- (- ?x23883 ?x23884) ?x18546) ?x20993) ?x20996) ?x20999) ?x21002) ?x21005)))
 (let ((?x23898 (- (- (- (- (- (+ (+ ?x23891 ?x21008) ?x21011) ?x21014) ?x21017) ?x21020) ?x21023) ?x21026)))
 (let ((?x23906 (- (- (- (- ?x23898 ?x21029) ?x21032) (* (* 2.0 l_0_8_232) l_0_8_238)) (* (* 2.0 l_0_8_233) l_0_8_239))))
 (let ((?x23912 (- (- ?x23906 (* (* 2.0 l_0_8_234) l_0_8_240)) (* (* 2.0 l_0_8_235) l_0_8_241))))
 (let ((?x23918 (- (- ?x23912 (* (* 2.0 l_0_8_236) l_0_8_242)) (* (* 2.0 l_0_8_237) l_0_8_243))))
 (let ((?x23938 (- (+ (+ (+ (+ (+ (+ ?x23918 ?x23920) ?x23923) ?x23926) ?x23929) ?x23932) ?x23935) (* (* 1.0 l_0_8_74) l_0_8_88))))
 (= (- ?x23938 (* (* 1.0 l_0_8_75) l_0_8_89)) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23767 (* (* 2.0 l_0_8_280) l_0_8_287)))
 (let ((?x23764 (* (* 2.0 l_0_8_279) l_0_8_286)))
 (let ((?x23761 (* (* 2.0 l_0_8_278) l_0_8_285)))
 (let ((?x23758 (* (* 2.0 l_0_8_277) l_0_8_284)))
 (let ((?x23755 (* (* 2.0 l_0_8_276) l_0_8_283)))
 (let ((?x23752 (* (* 2.0 l_0_8_275) l_0_8_282)))
 (let ((?x23749 (* (* 2.0 l_0_8_274) l_0_8_281)))
 (let ((?x24056 (* l_0_8_244 l_0_8_244)))
 (let ((?x24054 (* l_0_8_243 l_0_8_243)))
 (let ((?x24052 (* l_0_8_242 l_0_8_242)))
 (let ((?x24050 (* l_0_8_241 l_0_8_241)))
 (let ((?x24048 (* l_0_8_240 l_0_8_240)))
 (let ((?x24046 (* l_0_8_239 l_0_8_239)))
 (let ((?x24044 (* l_0_8_238 l_0_8_238)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18684 (* ?x18246 l_0_8_167)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x18681 (* ?x18453 l_0_8_166)))
 (let ((?x24041 (+ (* (* 1.0 l_0_8_110) l_0_8_130) (* (* 1.0 l_0_8_111) l_0_8_131))))
 (let ((?x24053 (- (- (- (- (- (- (- ?x24041 ?x18681) ?x18684) ?x24044) ?x24046) ?x24048) ?x24050) ?x24052)))
 (let ((?x24062 (+ (+ (+ (+ (+ (- (- ?x24053 ?x24054) ?x24056) ?x23749) ?x23752) ?x23755) ?x23758) ?x23761)))
 (let ((?x24068 (- (- (+ (+ ?x24062 ?x23764) ?x23767) (* (* 1.0 l_0_8_74) l_0_8_94)) (* (* 1.0 l_0_8_75) l_0_8_95))))
 (= ?x24068 0.0))))))))))))))))))))))))
(assert
 (let ((?x24156 (* l_0_8_288 l_0_8_288)))
 (let ((?x24154 (* l_0_8_287 l_0_8_287)))
 (let ((?x24152 (* l_0_8_286 l_0_8_286)))
 (let ((?x24150 (* l_0_8_285 l_0_8_285)))
 (let ((?x24148 (* l_0_8_284 l_0_8_284)))
 (let ((?x24146 (* l_0_8_283 l_0_8_283)))
 (let ((?x24144 (* l_0_8_282 l_0_8_282)))
 (let ((?x24142 (* l_0_8_281 l_0_8_281)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18792 (* ?x18246 l_0_8_174)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x24118 (* ?x18453 l_0_8_173)))
 (let ((?x24113 (- (* (* (- 1.0) l_0_8_101) l_0_8_74) (* (* 1.0 l_0_8_102) l_0_8_75))))
 (let ((?x24117 (+ (+ ?x24113 (* (* 1.0 l_0_8_110) l_0_8_137)) (* (* 1.0 l_0_8_111) l_0_8_138))))
 (let ((?x24126 (- (- (- (- ?x24117 ?x24118) ?x18792) (* (* 2.0 l_0_8_238) l_0_8_245)) (* (* 2.0 l_0_8_239) l_0_8_246))))
 (let ((?x24132 (- (- ?x24126 (* (* 2.0 l_0_8_240) l_0_8_247)) (* (* 2.0 l_0_8_241) l_0_8_248))))
 (let ((?x24138 (- (- ?x24132 (* (* 2.0 l_0_8_242) l_0_8_249)) (* (* 2.0 l_0_8_243) l_0_8_250))))
 (let ((?x24147 (+ (+ (+ (- ?x24138 (* (* 2.0 l_0_8_244) l_0_8_251)) ?x24142) ?x24144) ?x24146)))
 (= (+ (+ (+ (+ (+ ?x24147 ?x24148) ?x24150) ?x24152) ?x24154) ?x24156) 0.0))))))))))))))))))))
(assert
 (let ((?x19317 (* l_0_8_154 l_0_8_154)))
 (let ((?x19315 (* l_0_8_153 l_0_8_153)))
 (let ((?x19313 (* l_0_8_152 l_0_8_152)))
 (let ((?x19311 (* l_0_8_151 l_0_8_151)))
 (let ((?x24228 (+ (* (/ 1.0 2.0) (* l_0_8_115 l_0_8_115)) (* (/ 1.0 2.0) (* l_0_8_116 l_0_8_116)))))
 (let ((?x24232 (+ (+ ?x24228 (* (/ 1.0 2.0) (* l_0_8_117 l_0_8_117))) (* (/ 1.0 2.0) (* l_0_8_118 l_0_8_118)))))
 (let ((?x24239 (- (- (- (- (- ?x24232 ?x19311) ?x19313) ?x19315) ?x19317) (* (* (/ 1.0 2.0) l_0_8_79) l_0_8_79))))
 (let ((?x24245 (- (- ?x24239 (* (* (/ 1.0 2.0) l_0_8_80) l_0_8_80)) (* (* (/ 1.0 2.0) l_0_8_81) l_0_8_81))))
 (= (- ?x24245 (* (* (/ 1.0 2.0) l_0_8_82) l_0_8_82)) 0.0))))))))))
(assert
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19396 (* ?x19395 l_0_8_158)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19393 (* ?x19392 l_0_8_157)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19390 (* ?x19389 l_0_8_156)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19387 (* ?x19386 l_0_8_155)))
 (let ((?x24289 (+ (* (* 1.0 l_0_8_115) l_0_8_119) (* (* 1.0 l_0_8_116) l_0_8_120))))
 (let ((?x24295 (+ (+ ?x24289 (* (* 1.0 l_0_8_117) l_0_8_121)) (* (* 1.0 l_0_8_118) l_0_8_122))))
 (let ((?x24302 (- (- (- (- (- ?x24295 ?x19387) ?x19390) ?x19393) ?x19396) (* (* 1.0 l_0_8_79) l_0_8_83))))
 (let ((?x24308 (- (- ?x24302 (* (* 1.0 l_0_8_80) l_0_8_84)) (* (* 1.0 l_0_8_81) l_0_8_85))))
 (= (- ?x24308 (* (* 1.0 l_0_8_82) l_0_8_86)) 0.0))))))))))))))
(assert
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19482 (* ?x19395 l_0_8_163)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19478 (* ?x19392 l_0_8_162)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19474 (* ?x19389 l_0_8_161)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19470 (* ?x19386 l_0_8_160)))
 (let ((?x24342 (+ (* (* 1.0 l_0_8_115) l_0_8_124) (* (* 1.0 l_0_8_116) l_0_8_125))))
 (let ((?x24346 (+ (+ ?x24342 (* (* 1.0 l_0_8_117) l_0_8_126)) (* (* 1.0 l_0_8_118) l_0_8_127))))
 (let ((?x24352 (- (- (- (- (- ?x24346 ?x19470) ?x19474) ?x19478) ?x19482) (* (* 1.0 l_0_8_79) l_0_8_88))))
 (let ((?x24356 (- (- ?x24352 (* (* 1.0 l_0_8_80) l_0_8_89)) (* (* 1.0 l_0_8_81) l_0_8_90))))
 (= (- ?x24356 (* (* 1.0 l_0_8_82) l_0_8_91)) 0.0))))))))))))))
(assert
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19601 (* ?x19395 l_0_8_169)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19599 (* ?x19392 l_0_8_168)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19597 (* ?x19389 l_0_8_167)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19595 (* ?x19386 l_0_8_166)))
 (let ((?x24389 (+ (* (* 1.0 l_0_8_115) l_0_8_130) (* (* 1.0 l_0_8_116) l_0_8_131))))
 (let ((?x24393 (+ (+ ?x24389 (* (* 1.0 l_0_8_117) l_0_8_132)) (* (* 1.0 l_0_8_118) l_0_8_133))))
 (let ((?x24399 (- (- (- (- (- ?x24393 ?x19595) ?x19597) ?x19599) ?x19601) (* (* 1.0 l_0_8_79) l_0_8_94))))
 (let ((?x24403 (- (- ?x24399 (* (* 1.0 l_0_8_80) l_0_8_95)) (* (* 1.0 l_0_8_81) l_0_8_96))))
 (= (- ?x24403 (* (* 1.0 l_0_8_82) l_0_8_97)) 0.0))))))))))))))
(assert
 (let ((?x19395 (* 2.0 l_0_8_154)))
 (let ((?x19741 (* ?x19395 l_0_8_176)))
 (let ((?x19392 (* 2.0 l_0_8_153)))
 (let ((?x19739 (* ?x19392 l_0_8_175)))
 (let ((?x19389 (* 2.0 l_0_8_152)))
 (let ((?x19737 (* ?x19389 l_0_8_174)))
 (let ((?x19386 (* 2.0 l_0_8_151)))
 (let ((?x19735 (* ?x19386 l_0_8_173)))
 (let ((?x24436 (- (* (* (- 1.0) l_0_8_101) l_0_8_79) (* (* 1.0 l_0_8_102) l_0_8_80))))
 (let ((?x24441 (- (- ?x24436 (* (* 1.0 l_0_8_103) l_0_8_81)) (* (* 1.0 l_0_8_104) l_0_8_82))))
 (let ((?x24445 (+ (+ ?x24441 (* (* 1.0 l_0_8_115) l_0_8_137)) (* (* 1.0 l_0_8_116) l_0_8_138))))
 (let ((?x24449 (+ (+ ?x24445 (* (* 1.0 l_0_8_117) l_0_8_139)) (* (* 1.0 l_0_8_118) l_0_8_140))))
 (= (- (- (- (- ?x24449 ?x19735) ?x19737) ?x19739) ?x19741) 0.0))))))))))))))
(assert
 (let ((?x19852 (* l_0_8_159 l_0_8_159)))
 (let ((?x19850 (* l_0_8_158 l_0_8_158)))
 (let ((?x19848 (* l_0_8_157 l_0_8_157)))
 (let ((?x19846 (* l_0_8_156 l_0_8_156)))
 (let ((?x19844 (* l_0_8_155 l_0_8_155)))
 (let ((?x24483 (+ (* (/ 1.0 2.0) (* l_0_8_119 l_0_8_119)) (* (/ 1.0 2.0) (* l_0_8_120 l_0_8_120)))))
 (let ((?x24489 (+ (+ ?x24483 (* (/ 1.0 2.0) (* l_0_8_121 l_0_8_121))) (* (/ 1.0 2.0) (* l_0_8_122 l_0_8_122)))))
 (let ((?x24495 (- (- (- (+ ?x24489 (* (/ 1.0 2.0) (* l_0_8_123 l_0_8_123))) ?x19844) ?x19846) ?x19848)))
 (let ((?x24503 (- (- (- (- ?x24495 ?x19850) ?x19852) (* (* (/ 1.0 2.0) l_0_8_83) l_0_8_83)) (* (* (/ 1.0 2.0) l_0_8_84) l_0_8_84))))
 (let ((?x24509 (- (- ?x24503 (* (* (/ 1.0 2.0) l_0_8_85) l_0_8_85)) (* (* (/ 1.0 2.0) l_0_8_86) l_0_8_86))))
 (= (- ?x24509 (* (* (/ 1.0 2.0) l_0_8_87) l_0_8_87)) 0.0))))))))))))
(assert
 (let ((?x19940 (* 2.0 l_0_8_159)))
 (let ((?x19941 (* ?x19940 l_0_8_164)))
 (let ((?x19937 (* 2.0 l_0_8_158)))
 (let ((?x19938 (* ?x19937 l_0_8_163)))
 (let ((?x19934 (* 2.0 l_0_8_157)))
 (let ((?x19935 (* ?x19934 l_0_8_162)))
 (let ((?x19931 (* 2.0 l_0_8_156)))
 (let ((?x19932 (* ?x19931 l_0_8_161)))
 (let ((?x19928 (* 2.0 l_0_8_155)))
 (let ((?x19929 (* ?x19928 l_0_8_160)))
 (let ((?x24566 (+ (* (* 1.0 l_0_8_119) l_0_8_124) (* (* 1.0 l_0_8_120) l_0_8_125))))
 (let ((?x24572 (+ (+ ?x24566 (* (* 1.0 l_0_8_121) l_0_8_126)) (* (* 1.0 l_0_8_122) l_0_8_127))))
 (let ((?x24578 (- (- (- (+ ?x24572 (* (* 1.0 l_0_8_123) l_0_8_128)) ?x19929) ?x19932) ?x19935)))
 (let ((?x24586 (- (- (- (- ?x24578 ?x19938) ?x19941) (* (* 1.0 l_0_8_83) l_0_8_88)) (* (* 1.0 l_0_8_84) l_0_8_89))))
 (let ((?x24592 (- (- ?x24586 (* (* 1.0 l_0_8_85) l_0_8_90)) (* (* 1.0 l_0_8_86) l_0_8_91))))
 (= (- ?x24592 (* (* 1.0 l_0_8_87) l_0_8_92)) 0.0)))))))))))))))))
(assert
 (let ((?x19940 (* 2.0 l_0_8_159)))
 (let ((?x20079 (* ?x19940 l_0_8_170)))
 (let ((?x19937 (* 2.0 l_0_8_158)))
 (let ((?x20077 (* ?x19937 l_0_8_169)))
 (let ((?x19934 (* 2.0 l_0_8_157)))
 (let ((?x20075 (* ?x19934 l_0_8_168)))
 (let ((?x19931 (* 2.0 l_0_8_156)))
 (let ((?x20073 (* ?x19931 l_0_8_167)))
 (let ((?x19928 (* 2.0 l_0_8_155)))
 (let ((?x20071 (* ?x19928 l_0_8_166)))
 (let ((?x24642 (+ (* (* 1.0 l_0_8_119) l_0_8_130) (* (* 1.0 l_0_8_120) l_0_8_131))))
 (let ((?x24646 (+ (+ ?x24642 (* (* 1.0 l_0_8_121) l_0_8_132)) (* (* 1.0 l_0_8_122) l_0_8_133))))
 (let ((?x24651 (- (- (- (+ ?x24646 (* (* 1.0 l_0_8_123) l_0_8_134)) ?x20071) ?x20073) ?x20075)))
 (let ((?x24657 (- (- (- (- ?x24651 ?x20077) ?x20079) (* (* 1.0 l_0_8_83) l_0_8_94)) (* (* 1.0 l_0_8_84) l_0_8_95))))
 (let ((?x24661 (- (- ?x24657 (* (* 1.0 l_0_8_85) l_0_8_96)) (* (* 1.0 l_0_8_86) l_0_8_97))))
 (= (- ?x24661 (* (* 1.0 l_0_8_87) l_0_8_98)) 0.0)))))))))))))))))
(assert
 (let ((?x19940 (* 2.0 l_0_8_159)))
 (let ((?x20240 (* ?x19940 l_0_8_177)))
 (let ((?x19937 (* 2.0 l_0_8_158)))
 (let ((?x20238 (* ?x19937 l_0_8_176)))
 (let ((?x19934 (* 2.0 l_0_8_157)))
 (let ((?x20236 (* ?x19934 l_0_8_175)))
 (let ((?x19931 (* 2.0 l_0_8_156)))
 (let ((?x20234 (* ?x19931 l_0_8_174)))
 (let ((?x19928 (* 2.0 l_0_8_155)))
 (let ((?x20232 (* ?x19928 l_0_8_173)))
 (let ((?x24710 (- (* (* (- 1.0) l_0_8_101) l_0_8_83) (* (* 1.0 l_0_8_102) l_0_8_84))))
 (let ((?x24714 (- (- ?x24710 (* (* 1.0 l_0_8_103) l_0_8_85)) (* (* 1.0 l_0_8_104) l_0_8_86))))
 (let ((?x24719 (+ (- ?x24714 (* (* 1.0 l_0_8_105) l_0_8_87)) (* (* 1.0 l_0_8_119) l_0_8_137))))
 (let ((?x24723 (+ (+ ?x24719 (* (* 1.0 l_0_8_120) l_0_8_138)) (* (* 1.0 l_0_8_121) l_0_8_139))))
 (let ((?x24727 (+ (+ ?x24723 (* (* 1.0 l_0_8_122) l_0_8_140)) (* (* 1.0 l_0_8_123) l_0_8_141))))
 (= (- (- (- (- (- ?x24727 ?x20232) ?x20234) ?x20236) ?x20238) ?x20240) 0.0)))))))))))))))))
(assert
 (let ((?x20354 (* l_0_8_165 l_0_8_165)))
 (let ((?x20339 (* l_0_8_164 l_0_8_164)))
 (let ((?x20336 (* l_0_8_163 l_0_8_163)))
 (let ((?x20332 (* l_0_8_162 l_0_8_162)))
 (let ((?x20328 (* l_0_8_161 l_0_8_161)))
 (let ((?x20324 (* l_0_8_160 l_0_8_160)))
 (let ((?x24778 (+ (* (/ 1.0 2.0) (* l_0_8_124 l_0_8_124)) (* (/ 1.0 2.0) (* l_0_8_125 l_0_8_125)))))
 (let ((?x24784 (+ (+ ?x24778 (* (/ 1.0 2.0) (* l_0_8_126 l_0_8_126))) (* (/ 1.0 2.0) (* l_0_8_127 l_0_8_127)))))
 (let ((?x24790 (+ (+ ?x24784 (* (/ 1.0 2.0) (* l_0_8_128 l_0_8_128))) (* (/ 1.0 2.0) (* l_0_8_129 l_0_8_129)))))
 (let ((?x24799 (- (- (- (- (- (- (- ?x24790 ?x20324) ?x20328) ?x20332) ?x20336) ?x20339) ?x20354) (* (* (/ 1.0 2.0) l_0_8_88) l_0_8_88))))
 (let ((?x24805 (- (- ?x24799 (* (* (/ 1.0 2.0) l_0_8_89) l_0_8_89)) (* (* (/ 1.0 2.0) l_0_8_90) l_0_8_90))))
 (let ((?x24811 (- (- ?x24805 (* (* (/ 1.0 2.0) l_0_8_91) l_0_8_91)) (* (* (/ 1.0 2.0) l_0_8_92) l_0_8_92))))
 (= (- ?x24811 (* (* (/ 1.0 2.0) l_0_8_93) l_0_8_93)) 0.0))))))))))))))
(assert
 (let ((?x20469 (* 2.0 l_0_8_165)))
 (let ((?x20470 (* ?x20469 l_0_8_171)))
 (let ((?x20466 (* 2.0 l_0_8_164)))
 (let ((?x20467 (* ?x20466 l_0_8_170)))
 (let ((?x20463 (* 2.0 l_0_8_163)))
 (let ((?x20464 (* ?x20463 l_0_8_169)))
 (let ((?x20460 (* 2.0 l_0_8_162)))
 (let ((?x20461 (* ?x20460 l_0_8_168)))
 (let ((?x20457 (* 2.0 l_0_8_161)))
 (let ((?x20458 (* ?x20457 l_0_8_167)))
 (let ((?x20454 (* 2.0 l_0_8_160)))
 (let ((?x20455 (* ?x20454 l_0_8_166)))
 (let ((?x24877 (+ (* (* 1.0 l_0_8_124) l_0_8_130) (* (* 1.0 l_0_8_125) l_0_8_131))))
 (let ((?x24883 (+ (+ ?x24877 (* (* 1.0 l_0_8_126) l_0_8_132)) (* (* 1.0 l_0_8_127) l_0_8_133))))
 (let ((?x24889 (+ (+ ?x24883 (* (* 1.0 l_0_8_128) l_0_8_134)) (* (* 1.0 l_0_8_129) l_0_8_135))))
 (let ((?x24898 (- (- (- (- (- (- (- ?x24889 ?x20455) ?x20458) ?x20461) ?x20464) ?x20467) ?x20470) (* (* 1.0 l_0_8_88) l_0_8_94))))
 (let ((?x24904 (- (- ?x24898 (* (* 1.0 l_0_8_89) l_0_8_95)) (* (* 1.0 l_0_8_90) l_0_8_96))))
 (let ((?x24910 (- (- ?x24904 (* (* 1.0 l_0_8_91) l_0_8_97)) (* (* 1.0 l_0_8_92) l_0_8_98))))
 (= (- ?x24910 (* (* 1.0 l_0_8_93) l_0_8_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x20469 (* 2.0 l_0_8_165)))
 (let ((?x20679 (* ?x20469 l_0_8_178)))
 (let ((?x20466 (* 2.0 l_0_8_164)))
 (let ((?x20677 (* ?x20466 l_0_8_177)))
 (let ((?x20463 (* 2.0 l_0_8_163)))
 (let ((?x20675 (* ?x20463 l_0_8_176)))
 (let ((?x20460 (* 2.0 l_0_8_162)))
 (let ((?x20673 (* ?x20460 l_0_8_175)))
 (let ((?x20457 (* 2.0 l_0_8_161)))
 (let ((?x20671 (* ?x20457 l_0_8_174)))
 (let ((?x20454 (* 2.0 l_0_8_160)))
 (let ((?x20669 (* ?x20454 l_0_8_173)))
 (let ((?x24968 (- (* (* (- 1.0) l_0_8_101) l_0_8_88) (* (* 1.0 l_0_8_102) l_0_8_89))))
 (let ((?x24972 (- (- ?x24968 (* (* 1.0 l_0_8_103) l_0_8_90)) (* (* 1.0 l_0_8_104) l_0_8_91))))
 (let ((?x24977 (- (- ?x24972 (* (* 1.0 l_0_8_105) l_0_8_92)) (* (* 1.0 l_0_8_106) l_0_8_93))))
 (let ((?x24981 (+ (+ ?x24977 (* (* 1.0 l_0_8_124) l_0_8_137)) (* (* 1.0 l_0_8_125) l_0_8_138))))
 (let ((?x24985 (+ (+ ?x24981 (* (* 1.0 l_0_8_126) l_0_8_139)) (* (* 1.0 l_0_8_127) l_0_8_140))))
 (let ((?x24989 (+ (+ ?x24985 (* (* 1.0 l_0_8_128) l_0_8_141)) (* (* 1.0 l_0_8_129) l_0_8_142))))
 (= (- (- (- (- (- (- ?x24989 ?x20669) ?x20671) ?x20673) ?x20675) ?x20677) ?x20679) 0.0))))))))))))))))))))
(assert
 (let ((?x20839 (* l_0_8_172 l_0_8_172)))
 (let ((?x20837 (* l_0_8_171 l_0_8_171)))
 (let ((?x20835 (* l_0_8_170 l_0_8_170)))
 (let ((?x20833 (* l_0_8_169 l_0_8_169)))
 (let ((?x20831 (* l_0_8_168 l_0_8_168)))
 (let ((?x20829 (* l_0_8_167 l_0_8_167)))
 (let ((?x20827 (* l_0_8_166 l_0_8_166)))
 (let ((?x25049 (+ (* (* (- (/ 1.0 2.0)) l_0_8_100) l_0_8_100) (* (/ 1.0 2.0) (* l_0_8_130 l_0_8_130)))))
 (let ((?x25055 (+ (+ ?x25049 (* (/ 1.0 2.0) (* l_0_8_131 l_0_8_131))) (* (/ 1.0 2.0) (* l_0_8_132 l_0_8_132)))))
 (let ((?x25061 (+ (+ ?x25055 (* (/ 1.0 2.0) (* l_0_8_133 l_0_8_133))) (* (/ 1.0 2.0) (* l_0_8_134 l_0_8_134)))))
 (let ((?x25067 (+ (+ ?x25061 (* (/ 1.0 2.0) (* l_0_8_135 l_0_8_135))) (* (/ 1.0 2.0) (* l_0_8_136 l_0_8_136)))))
 (let ((?x25074 (- (- (- (- (- (- (- ?x25067 ?x20827) ?x20829) ?x20831) ?x20833) ?x20835) ?x20837) ?x20839)))
 (let ((?x25080 (- (- ?x25074 (* (* (/ 1.0 2.0) l_0_8_94) l_0_8_94)) (* (* (/ 1.0 2.0) l_0_8_95) l_0_8_95))))
 (let ((?x25086 (- (- ?x25080 (* (* (/ 1.0 2.0) l_0_8_96) l_0_8_96)) (* (* (/ 1.0 2.0) l_0_8_97) l_0_8_97))))
 (let ((?x25092 (- (- ?x25086 (* (* (/ 1.0 2.0) l_0_8_98) l_0_8_98)) (* (* (/ 1.0 2.0) l_0_8_99) l_0_8_99))))
 (= ?x25092 0.0)))))))))))))))))
(assert
 (let ((?x21011 (* (* 2.0 l_0_8_172) l_0_8_179)))
 (let ((?x21008 (* (* 2.0 l_0_8_171) l_0_8_178)))
 (let ((?x21005 (* (* 2.0 l_0_8_170) l_0_8_177)))
 (let ((?x21002 (* (* 2.0 l_0_8_169) l_0_8_176)))
 (let ((?x20999 (* (* 2.0 l_0_8_168) l_0_8_175)))
 (let ((?x20996 (* (* 2.0 l_0_8_167) l_0_8_174)))
 (let ((?x20993 (* (* 2.0 l_0_8_166) l_0_8_173)))
 (let ((?x25161 (- (* (* (- 1.0) l_0_8_100) l_0_8_107) (* (* 1.0 l_0_8_101) l_0_8_94))))
 (let ((?x25165 (- (- ?x25161 (* (* 1.0 l_0_8_102) l_0_8_95)) (* (* 1.0 l_0_8_103) l_0_8_96))))
 (let ((?x25169 (- (- ?x25165 (* (* 1.0 l_0_8_104) l_0_8_97)) (* (* 1.0 l_0_8_105) l_0_8_98))))
 (let ((?x25174 (+ (- ?x25169 (* (* 1.0 l_0_8_106) l_0_8_99)) (* (* 1.0 l_0_8_130) l_0_8_137))))
 (let ((?x25180 (+ (+ ?x25174 (* (* 1.0 l_0_8_131) l_0_8_138)) (* (* 1.0 l_0_8_132) l_0_8_139))))
 (let ((?x25186 (+ (+ ?x25180 (* (* 1.0 l_0_8_133) l_0_8_140)) (* (* 1.0 l_0_8_134) l_0_8_141))))
 (let ((?x25192 (+ (+ ?x25186 (* (* 1.0 l_0_8_135) l_0_8_142)) (* (* 1.0 l_0_8_136) l_0_8_143))))
 (let ((?x25199 (- (- (- (- (- (- (- ?x25192 ?x20993) ?x20996) ?x20999) ?x21002) ?x21005) ?x21008) ?x21011)))
 (= ?x25199 0.0)))))))))))))))))
(assert
 (let ((?x21227 (* l_0_8_180 l_0_8_180)))
 (let ((?x21225 (* l_0_8_179 l_0_8_179)))
 (let ((?x21223 (* l_0_8_178 l_0_8_178)))
 (let ((?x21221 (* l_0_8_177 l_0_8_177)))
 (let ((?x21200 (* l_0_8_176 l_0_8_176)))
 (let ((?x21196 (* l_0_8_175 l_0_8_175)))
 (let ((?x21192 (* l_0_8_174 l_0_8_174)))
 (let ((?x21279 (* l_0_8_173 l_0_8_173)))
 (let ((?x25247 (- (* (* (- (/ 1.0 2.0)) l_0_8_101) l_0_8_101) (* (* (/ 1.0 2.0) l_0_8_102) l_0_8_102))))
 (let ((?x25253 (- (- ?x25247 (* (* (/ 1.0 2.0) l_0_8_103) l_0_8_103)) (* (* (/ 1.0 2.0) l_0_8_104) l_0_8_104))))
 (let ((?x25259 (- (- ?x25253 (* (* (/ 1.0 2.0) l_0_8_105) l_0_8_105)) (* (* (/ 1.0 2.0) l_0_8_106) l_0_8_106))))
 (let ((?x25265 (- (- ?x25259 (* (* (/ 1.0 2.0) l_0_8_107) l_0_8_107)) (* (* (/ 1.0 2.0) l_0_8_108) l_0_8_108))))
 (let ((?x25271 (+ (+ ?x25265 (* (/ 1.0 2.0) (* l_0_8_137 l_0_8_137))) (* (/ 1.0 2.0) (* l_0_8_138 l_0_8_138)))))
 (let ((?x25277 (+ (+ ?x25271 (* (/ 1.0 2.0) (* l_0_8_139 l_0_8_139))) (* (/ 1.0 2.0) (* l_0_8_140 l_0_8_140)))))
 (let ((?x25283 (+ (+ ?x25277 (* (/ 1.0 2.0) (* l_0_8_141 l_0_8_141))) (* (/ 1.0 2.0) (* l_0_8_142 l_0_8_142)))))
 (let ((?x25289 (+ (+ ?x25283 (* (/ 1.0 2.0) (* l_0_8_143 l_0_8_143))) (* (/ 1.0 2.0) (* l_0_8_144 l_0_8_144)))))
 (let ((?x25296 (- (- (- (- (- (- (- ?x25289 ?x21279) ?x21192) ?x21196) ?x21200) ?x21221) ?x21223) ?x21225)))
 (= (- ?x25296 ?x21227) 0.0)))))))))))))))))))
(assert
 (= (+ (* (- l_0_8_109) l_0_8_109) (* l_0_8_73 l_0_8_73)) 0.0))
(assert
 (let ((?x25383 (* l_0_8_325 l_0_8_325)))
 (let ((?x25384 (- (- (* (* (- 2.0) l_0_8_109) l_0_8_110) (* l_0_8_289 l_0_8_289)) ?x25383)))
 (= (+ ?x25384 (* (* 2.0 l_0_8_73) l_0_8_74)) 0.0))))
(assert
 (let ((?x25400 (+ (* (* (- 2.0) l_0_8_109) l_0_8_112) (* (* 2.0 l_0_8_73) l_0_8_76))))
 (= ?x25400 0.0)))
(assert
 (let ((?x25410 (+ (- (* (* (- 2.0) l_0_8_109) l_0_8_119) (* l_0_8_253 l_0_8_253)) (* (* 2.0 l_0_8_73) l_0_8_83))))
 (= ?x25410 0.0)))
(assert
 (let ((?x17993 (* l_0_8_181 l_0_8_181)))
 (let ((?x25421 (- (+ (* (* (- 2.0) l_0_8_109) l_0_8_124) (* l_0_8_145 l_0_8_145)) ?x17993)))
 (= (+ ?x25421 (* (* 2.0 l_0_8_73) l_0_8_88)) 0.0))))
(assert
 (let ((?x25435 (+ (+ (* (* (- 2.0) l_0_8_109) l_0_8_130) (* l_0_8_253 l_0_8_253)) (* (* 2.0 l_0_8_73) l_0_8_94))))
 (= ?x25435 0.0)))
(assert
 (let ((?x25444 (* l_0_8_217 l_0_8_217)))
 (let ((?x25439 (- (* (* 2.0 l_0_8_101) l_0_8_73) (* (* 2.0 l_0_8_109) l_0_8_137))))
 (= (- ?x25439 ?x25444) 0.0))))
(assert
 (let ((?x23703 (* l_0_8_75 l_0_8_75)))
 (let ((?x23697 (* l_0_8_74 l_0_8_74)))
 (let ((?x25461 (- (- (* (- l_0_8_110) l_0_8_110) (* l_0_8_111 l_0_8_111)) (* (* 2.0 l_0_8_289) l_0_8_290))))
 (= (+ (+ (- ?x25461 (* (* 2.0 l_0_8_325) l_0_8_326)) ?x23697) ?x23703) 0.0)))))
(assert
 (let ((?x25490 (- (* (* (- 2.0) l_0_8_110) l_0_8_112) (* (* 2.0 l_0_8_111) l_0_8_113))))
 (let ((?x25494 (- (- ?x25490 (* (* 2.0 l_0_8_289) l_0_8_292)) (* (* 2.0 l_0_8_325) l_0_8_328))))
 (let ((?x25498 (+ (+ ?x25494 (* (* 2.0 l_0_8_74) l_0_8_76)) (* (* 2.0 l_0_8_75) l_0_8_77))))
 (= ?x25498 0.0)))))
(assert
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x25526 (* ?x21512 l_0_8_254)))
 (let ((?x25520 (- (* (* (- 2.0) l_0_8_110) l_0_8_119) (* (* 2.0 l_0_8_111) l_0_8_120))))
 (let ((?x25531 (- (- (- ?x25520 ?x25526) (* (* 2.0 l_0_8_289) l_0_8_299)) (* (* 2.0 l_0_8_325) l_0_8_335))))
 (let ((?x25535 (+ (+ ?x25531 (* (* 2.0 l_0_8_74) l_0_8_83)) (* (* 2.0 l_0_8_75) l_0_8_84))))
 (= ?x25535 0.0)))))))
(assert
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18032 (* ?x18031 l_0_8_182)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18029 (* ?x18028 l_0_8_146)))
 (let ((?x25563 (- (* (* (- 2.0) l_0_8_110) l_0_8_124) (* (* 2.0 l_0_8_111) l_0_8_125))))
 (let ((?x25574 (- (- (- (+ ?x25563 ?x18029) ?x18032) (* (* 2.0 l_0_8_289) l_0_8_304)) (* (* 2.0 l_0_8_325) l_0_8_340))))
 (let ((?x25578 (+ (+ ?x25574 (* (* 2.0 l_0_8_74) l_0_8_88)) (* (* 2.0 l_0_8_75) l_0_8_89))))
 (= ?x25578 0.0)))))))))
(assert
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x25526 (* ?x21512 l_0_8_254)))
 (let ((?x25608 (- (* (* (- 2.0) l_0_8_110) l_0_8_130) (* (* 2.0 l_0_8_111) l_0_8_131))))
 (let ((?x25613 (- (- (+ ?x25608 ?x25526) (* (* 2.0 l_0_8_289) l_0_8_310)) (* (* 2.0 l_0_8_325) l_0_8_346))))
 (let ((?x25617 (+ (+ ?x25613 (* (* 2.0 l_0_8_74) l_0_8_94)) (* (* 2.0 l_0_8_75) l_0_8_95))))
 (= ?x25617 0.0)))))))
(assert
 (let ((?x25640 (+ (* (* 2.0 l_0_8_101) l_0_8_74) (* (* 2.0 l_0_8_102) l_0_8_75))))
 (let ((?x25649 (- (- ?x25640 (* (* 2.0 l_0_8_110) l_0_8_137)) (* (* 2.0 l_0_8_111) l_0_8_138))))
 (let ((?x25653 (- (- ?x25649 (* (* 2.0 l_0_8_217) l_0_8_218)) (* (* 2.0 l_0_8_289) l_0_8_317))))
 (= (- ?x25653 (* (* 2.0 l_0_8_325) l_0_8_353)) 0.0)))))
(assert
 (let ((?x19261 (* l_0_8_78 l_0_8_78)))
 (let ((?x19255 (* l_0_8_77 l_0_8_77)))
 (let ((?x19249 (* l_0_8_76 l_0_8_76)))
 (let ((?x19141 (* l_0_8_114 l_0_8_114)))
 (let ((?x25692 (- (- (* (- l_0_8_112) l_0_8_112) (* l_0_8_113 l_0_8_113)) ?x19141)))
 (= (+ (+ (+ ?x25692 ?x19249) ?x19255) ?x19261) 0.0)))))))
(assert
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x25715 (* ?x21512 l_0_8_256)))
 (let ((?x25712 (- (* (* (- 2.0) l_0_8_112) l_0_8_119) (* (* 2.0 l_0_8_113) l_0_8_120))))
 (let ((?x25718 (+ (- (- ?x25712 (* (* 2.0 l_0_8_114) l_0_8_121)) ?x25715) (* (* 2.0 l_0_8_76) l_0_8_83))))
 (let ((?x25722 (+ (+ ?x25718 (* (* 2.0 l_0_8_77) l_0_8_84)) (* (* 2.0 l_0_8_78) l_0_8_85))))
 (= ?x25722 0.0)))))))
(assert
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18095 (* ?x18031 l_0_8_184)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18085 (* ?x18028 l_0_8_148)))
 (let ((?x25743 (- (* (* (- 2.0) l_0_8_112) l_0_8_124) (* (* 2.0 l_0_8_113) l_0_8_125))))
 (let ((?x25755 (+ (- (+ (- ?x25743 (* (* 2.0 l_0_8_114) l_0_8_126)) ?x18085) ?x18095) (* (* 2.0 l_0_8_76) l_0_8_88))))
 (let ((?x25759 (+ (+ ?x25755 (* (* 2.0 l_0_8_77) l_0_8_89)) (* (* 2.0 l_0_8_78) l_0_8_90))))
 (= ?x25759 0.0)))))))))
(assert
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x25715 (* ?x21512 l_0_8_256)))
 (let ((?x25784 (- (* (* (- 2.0) l_0_8_112) l_0_8_130) (* (* 2.0 l_0_8_113) l_0_8_131))))
 (let ((?x25789 (+ (+ (- ?x25784 (* (* 2.0 l_0_8_114) l_0_8_132)) ?x25715) (* (* 2.0 l_0_8_76) l_0_8_94))))
 (let ((?x25793 (+ (+ ?x25789 (* (* 2.0 l_0_8_77) l_0_8_95)) (* (* 2.0 l_0_8_78) l_0_8_96))))
 (= ?x25793 0.0)))))))
(assert
 (let ((?x24549 (* l_0_8_87 l_0_8_87)))
 (let ((?x24543 (* l_0_8_86 l_0_8_86)))
 (let ((?x24537 (* l_0_8_85 l_0_8_85)))
 (let ((?x24531 (* l_0_8_84 l_0_8_84)))
 (let ((?x24525 (* l_0_8_83 l_0_8_83)))
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x25818 (* ?x21512 l_0_8_263)))
 (let ((?x24490 (* l_0_8_123 l_0_8_123)))
 (let ((?x24487 (* l_0_8_122 l_0_8_122)))
 (let ((?x24484 (* l_0_8_121 l_0_8_121)))
 (let ((?x25809 (- (- (* (- l_0_8_119) l_0_8_119) (* l_0_8_120 l_0_8_120)) ?x24484)))
 (let ((?x25823 (+ (+ (+ (+ (- (- (- ?x25809 ?x24487) ?x24490) ?x25818) ?x24525) ?x24531) ?x24537) ?x24543)))
 (= (+ ?x25823 ?x24549) 0.0))))))))))))))
(assert
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x25868 (* ?x21512 l_0_8_268)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18141 (* ?x18031 l_0_8_191)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18134 (* ?x18028 l_0_8_155)))
 (let ((?x25856 (- (* (* (- 2.0) l_0_8_119) l_0_8_124) (* (* 2.0 l_0_8_120) l_0_8_125))))
 (let ((?x25862 (- (- ?x25856 (* (* 2.0 l_0_8_121) l_0_8_126)) (* (* 2.0 l_0_8_122) l_0_8_127))))
 (let ((?x25869 (- (- (+ (- ?x25862 (* (* 2.0 l_0_8_123) l_0_8_128)) ?x18134) ?x18141) ?x25868)))
 (let ((?x25875 (+ (+ ?x25869 (* (* 2.0 l_0_8_83) l_0_8_88)) (* (* 2.0 l_0_8_84) l_0_8_89))))
 (let ((?x25881 (+ (+ ?x25875 (* (* 2.0 l_0_8_85) l_0_8_90)) (* (* 2.0 l_0_8_86) l_0_8_91))))
 (= (+ ?x25881 (* (* 2.0 l_0_8_87) l_0_8_92)) 0.0)))))))))))))
(assert
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x25935 (* ?x21512 l_0_8_274)))
 (let ((?x25818 (* ?x21512 l_0_8_263)))
 (let ((?x25927 (- (* (* (- 2.0) l_0_8_119) l_0_8_130) (* (* 2.0 l_0_8_120) l_0_8_131))))
 (let ((?x25931 (- (- ?x25927 (* (* 2.0 l_0_8_121) l_0_8_132)) (* (* 2.0 l_0_8_122) l_0_8_133))))
 (let ((?x25938 (+ (- (+ (- ?x25931 (* (* 2.0 l_0_8_123) l_0_8_134)) ?x25818) ?x25935) (* (* 2.0 l_0_8_83) l_0_8_94))))
 (let ((?x25942 (+ (+ ?x25938 (* (* 2.0 l_0_8_84) l_0_8_95)) (* (* 2.0 l_0_8_85) l_0_8_96))))
 (let ((?x25946 (+ (+ ?x25942 (* (* 2.0 l_0_8_86) l_0_8_97)) (* (* 2.0 l_0_8_87) l_0_8_98))))
 (= ?x25946 0.0))))))))))
(assert
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x23373 (* ?x21512 l_0_8_281)))
 (let ((?x25978 (+ (* (* 2.0 l_0_8_101) l_0_8_83) (* (* 2.0 l_0_8_102) l_0_8_84))))
 (let ((?x25990 (+ (+ ?x25978 (* (* 2.0 l_0_8_103) l_0_8_85)) (* (* 2.0 l_0_8_104) l_0_8_86))))
 (let ((?x25995 (- (+ ?x25990 (* (* 2.0 l_0_8_105) l_0_8_87)) (* (* 2.0 l_0_8_119) l_0_8_137))))
 (let ((?x25999 (- (- ?x25995 (* (* 2.0 l_0_8_120) l_0_8_138)) (* (* 2.0 l_0_8_121) l_0_8_139))))
 (let ((?x26003 (- (- ?x25999 (* (* 2.0 l_0_8_122) l_0_8_140)) (* (* 2.0 l_0_8_123) l_0_8_141))))
 (= (- (- ?x26003 (* (* 2.0 l_0_8_217) l_0_8_227)) ?x23373) 0.0)))))))))
(assert
 (let ((?x24859 (* l_0_8_93 l_0_8_93)))
 (let ((?x24853 (* l_0_8_92 l_0_8_92)))
 (let ((?x24847 (* l_0_8_91 l_0_8_91)))
 (let ((?x24841 (* l_0_8_90 l_0_8_90)))
 (let ((?x24835 (* l_0_8_89 l_0_8_89)))
 (let ((?x24829 (* l_0_8_88 l_0_8_88)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18164 (* ?x18031 l_0_8_196)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18157 (* ?x18028 l_0_8_160)))
 (let ((?x24788 (* l_0_8_129 l_0_8_129)))
 (let ((?x24785 (* l_0_8_128 l_0_8_128)))
 (let ((?x24782 (* l_0_8_127 l_0_8_127)))
 (let ((?x24779 (* l_0_8_126 l_0_8_126)))
 (let ((?x26058 (- (- (* (- l_0_8_124) l_0_8_124) (* l_0_8_125 l_0_8_125)) ?x24779)))
 (let ((?x26065 (+ (+ (- (+ (- (- (- ?x26058 ?x24782) ?x24785) ?x24788) ?x18157) ?x18164) ?x24829) ?x24835)))
 (= (+ (+ (+ (+ ?x26065 ?x24841) ?x24847) ?x24853) ?x24859) 0.0))))))))))))))))))
(assert
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x25868 (* ?x21512 l_0_8_268)))
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18191 (* ?x18031 l_0_8_202)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18189 (* ?x18028 l_0_8_166)))
 (let ((?x26098 (- (* (* (- 2.0) l_0_8_124) l_0_8_130) (* (* 2.0 l_0_8_125) l_0_8_131))))
 (let ((?x26104 (- (- ?x26098 (* (* 2.0 l_0_8_126) l_0_8_132)) (* (* 2.0 l_0_8_127) l_0_8_133))))
 (let ((?x26110 (- (- ?x26104 (* (* 2.0 l_0_8_128) l_0_8_134)) (* (* 2.0 l_0_8_129) l_0_8_135))))
 (let ((?x26116 (+ (+ (- (+ ?x26110 ?x18189) ?x18191) ?x25868) (* (* 2.0 l_0_8_88) l_0_8_94))))
 (let ((?x26122 (+ (+ ?x26116 (* (* 2.0 l_0_8_89) l_0_8_95)) (* (* 2.0 l_0_8_90) l_0_8_96))))
 (let ((?x26128 (+ (+ ?x26122 (* (* 2.0 l_0_8_91) l_0_8_97)) (* (* 2.0 l_0_8_92) l_0_8_98))))
 (= (+ ?x26128 (* (* 2.0 l_0_8_93) l_0_8_99)) 0.0))))))))))))))
(assert
 (let ((?x18031 (* 2.0 l_0_8_181)))
 (let ((?x18229 (* ?x18031 l_0_8_209)))
 (let ((?x18028 (* 2.0 l_0_8_145)))
 (let ((?x18227 (* ?x18028 l_0_8_173)))
 (let ((?x26173 (+ (* (* 2.0 l_0_8_101) l_0_8_88) (* (* 2.0 l_0_8_102) l_0_8_89))))
 (let ((?x26177 (+ (+ ?x26173 (* (* 2.0 l_0_8_103) l_0_8_90)) (* (* 2.0 l_0_8_104) l_0_8_91))))
 (let ((?x26181 (+ (+ ?x26177 (* (* 2.0 l_0_8_105) l_0_8_92)) (* (* 2.0 l_0_8_106) l_0_8_93))))
 (let ((?x26186 (- (- ?x26181 (* (* 2.0 l_0_8_124) l_0_8_137)) (* (* 2.0 l_0_8_125) l_0_8_138))))
 (let ((?x26190 (- (- ?x26186 (* (* 2.0 l_0_8_126) l_0_8_139)) (* (* 2.0 l_0_8_127) l_0_8_140))))
 (let ((?x26194 (- (- ?x26190 (* (* 2.0 l_0_8_128) l_0_8_141)) (* (* 2.0 l_0_8_129) l_0_8_142))))
 (= (- (- (+ ?x26194 ?x18227) ?x18229) (* (* 2.0 l_0_8_217) l_0_8_232)) 0.0))))))))))))
(assert
 (let ((?x25141 (* l_0_8_99 l_0_8_99)))
 (let ((?x25135 (* l_0_8_98 l_0_8_98)))
 (let ((?x25129 (* l_0_8_97 l_0_8_97)))
 (let ((?x25123 (* l_0_8_96 l_0_8_96)))
 (let ((?x25117 (* l_0_8_95 l_0_8_95)))
 (let ((?x25111 (* l_0_8_94 l_0_8_94)))
 (let ((?x21512 (* 2.0 l_0_8_253)))
 (let ((?x25935 (* ?x21512 l_0_8_274)))
 (let ((?x25065 (* l_0_8_136 l_0_8_136)))
 (let ((?x25062 (* l_0_8_135 l_0_8_135)))
 (let ((?x25059 (* l_0_8_134 l_0_8_134)))
 (let ((?x25056 (* l_0_8_133 l_0_8_133)))
 (let ((?x25053 (* l_0_8_132 l_0_8_132)))
 (let ((?x25050 (* l_0_8_131 l_0_8_131)))
 (let ((?x26251 (- (- (- (* l_0_8_100 l_0_8_100) (* l_0_8_130 l_0_8_130)) ?x25050) ?x25053)))
 (let ((?x26258 (+ (+ (+ (- (- (- (- ?x26251 ?x25056) ?x25059) ?x25062) ?x25065) ?x25935) ?x25111) ?x25117)))
 (= (+ (+ (+ (+ ?x26258 ?x25123) ?x25129) ?x25135) ?x25141) 0.0))))))))))))))))))
(assert
 (let ((?x25287 (* l_0_8_144 l_0_8_144)))
 (let ((?x25284 (* l_0_8_143 l_0_8_143)))
 (let ((?x25281 (* l_0_8_142 l_0_8_142)))
 (let ((?x25278 (* l_0_8_141 l_0_8_141)))
 (let ((?x25275 (* l_0_8_140 l_0_8_140)))
 (let ((?x25272 (* l_0_8_139 l_0_8_139)))
 (let ((?x25269 (* l_0_8_138 l_0_8_138)))
 (let ((?x25266 (* l_0_8_137 l_0_8_137)))
 (let ((?x25337 (* l_0_8_108 l_0_8_108)))
 (let ((?x25331 (* l_0_8_107 l_0_8_107)))
 (let ((?x25325 (* l_0_8_106 l_0_8_106)))
 (let ((?x25319 (* l_0_8_105 l_0_8_105)))
 (let ((?x25313 (* l_0_8_104 l_0_8_104)))
 (let ((?x25307 (* l_0_8_103 l_0_8_103)))
 (let ((?x26296 (+ (+ (+ (* l_0_8_101 l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x25307) ?x25313)))
 (let ((?x26303 (- (- (- (+ (+ (+ (+ ?x26296 ?x25319) ?x25325) ?x25331) ?x25337) ?x25266) ?x25269) ?x25272)))
 (let ((?x26310 (- (- (- (- (- (- ?x26303 ?x25275) ?x25278) ?x25281) ?x25284) ?x25287) (* (* 2.0 l_0_8_217) l_0_8_245))))
 (= ?x26310 0.0)))))))))))))))))))
(assert
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18258 (* ?x18257 l_0_8_185)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18255 (* ?x18254 l_0_8_184)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18252 (* ?x18246 l_0_8_149)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x18679 (* ?x18453 l_0_8_148)))
 (let ((?x26357 (- (- (- (+ ?x18679 ?x18252) ?x18255) ?x18258) (* (* 2.0 l_0_8_292) l_0_8_304))))
 (let ((?x26361 (- (- ?x26357 (* (* 2.0 l_0_8_293) l_0_8_305)) (* (* 2.0 l_0_8_294) l_0_8_306))))
 (let ((?x26365 (- (- ?x26361 (* (* 2.0 l_0_8_328) l_0_8_340)) (* (* 2.0 l_0_8_329) l_0_8_341))))
 (= (- ?x26365 (* (* 2.0 l_0_8_330) l_0_8_342)) 0.0)))))))))))))
(assert
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x26418 (* ?x17871 l_0_8_269)))
 (let ((?x17868 (* 2.0 l_0_8_254)))
 (let ((?x26416 (* ?x17868 l_0_8_268)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18460 (* ?x18257 l_0_8_192)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18458 (* ?x18254 l_0_8_191)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18456 (* ?x18246 l_0_8_156)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x18454 (* ?x18453 l_0_8_155)))
 (let ((?x26421 (- (- (- (- (- (+ ?x18454 ?x18456) ?x18458) ?x18460) ?x26416) ?x26418) (* (* 2.0 l_0_8_299) l_0_8_304))))
 (let ((?x26425 (- (- ?x26421 (* (* 2.0 l_0_8_300) l_0_8_305)) (* (* 2.0 l_0_8_301) l_0_8_306))))
 (let ((?x26429 (- (- ?x26425 (* (* 2.0 l_0_8_302) l_0_8_307)) (* (* 2.0 l_0_8_303) l_0_8_308))))
 (let ((?x26433 (- (- ?x26429 (* (* 2.0 l_0_8_335) l_0_8_340)) (* (* 2.0 l_0_8_336) l_0_8_341))))
 (let ((?x26437 (- (- ?x26433 (* (* 2.0 l_0_8_337) l_0_8_342)) (* (* 2.0 l_0_8_338) l_0_8_343))))
 (= (- ?x26437 (* (* 2.0 l_0_8_339) l_0_8_344)) 0.0)))))))))))))))))))
(assert
 (let ((?x26546 (* l_0_8_345 l_0_8_345)))
 (let ((?x26544 (* l_0_8_344 l_0_8_344)))
 (let ((?x26542 (* l_0_8_343 l_0_8_343)))
 (let ((?x26540 (* l_0_8_342 l_0_8_342)))
 (let ((?x26538 (* l_0_8_341 l_0_8_341)))
 (let ((?x26536 (* l_0_8_340 l_0_8_340)))
 (let ((?x26534 (* l_0_8_309 l_0_8_309)))
 (let ((?x26532 (* l_0_8_308 l_0_8_308)))
 (let ((?x26530 (* l_0_8_307 l_0_8_307)))
 (let ((?x26528 (* l_0_8_306 l_0_8_306)))
 (let ((?x26526 (* l_0_8_305 l_0_8_305)))
 (let ((?x26524 (* l_0_8_304 l_0_8_304)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18572 (* ?x18257 l_0_8_197)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18570 (* ?x18254 l_0_8_196)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18546 (* ?x18246 l_0_8_161)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x23884 (* ?x18453 l_0_8_160)))
 (let ((?x26531 (- (- (- (- (- (- (+ ?x23884 ?x18546) ?x18570) ?x18572) ?x26524) ?x26526) ?x26528) ?x26530)))
 (let ((?x26545 (- (- (- (- (- (- (- ?x26531 ?x26532) ?x26534) ?x26536) ?x26538) ?x26540) ?x26542) ?x26544)))
 (= (- ?x26545 ?x26546) 0.0))))))))))))))))))))))))
(assert
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x26418 (* ?x17871 l_0_8_269)))
 (let ((?x17868 (* 2.0 l_0_8_254)))
 (let ((?x26416 (* ?x17868 l_0_8_268)))
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18688 (* ?x18257 l_0_8_203)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18686 (* ?x18254 l_0_8_202)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18684 (* ?x18246 l_0_8_167)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x18681 (* ?x18453 l_0_8_166)))
 (let ((?x26600 (- (+ (+ (- (- (+ ?x18681 ?x18684) ?x18686) ?x18688) ?x26416) ?x26418) (* (* 2.0 l_0_8_304) l_0_8_310))))
 (let ((?x26606 (- (- ?x26600 (* (* 2.0 l_0_8_305) l_0_8_311)) (* (* 2.0 l_0_8_306) l_0_8_312))))
 (let ((?x26612 (- (- ?x26606 (* (* 2.0 l_0_8_307) l_0_8_313)) (* (* 2.0 l_0_8_308) l_0_8_314))))
 (let ((?x26618 (- (- ?x26612 (* (* 2.0 l_0_8_309) l_0_8_315)) (* (* 2.0 l_0_8_340) l_0_8_346))))
 (let ((?x26624 (- (- ?x26618 (* (* 2.0 l_0_8_341) l_0_8_347)) (* (* 2.0 l_0_8_342) l_0_8_348))))
 (let ((?x26630 (- (- ?x26624 (* (* 2.0 l_0_8_343) l_0_8_349)) (* (* 2.0 l_0_8_344) l_0_8_350))))
 (= (- ?x26630 (* (* 2.0 l_0_8_345) l_0_8_351)) 0.0))))))))))))))))))))
(assert
 (let ((?x18257 (* 2.0 l_0_8_183)))
 (let ((?x18796 (* ?x18257 l_0_8_210)))
 (let ((?x18254 (* 2.0 l_0_8_182)))
 (let ((?x18794 (* ?x18254 l_0_8_209)))
 (let ((?x18246 (* 2.0 l_0_8_147)))
 (let ((?x18792 (* ?x18246 l_0_8_174)))
 (let ((?x18453 (* 2.0 l_0_8_146)))
 (let ((?x24118 (* ?x18453 l_0_8_173)))
 (let ((?x26720 (- (- (- (+ ?x24118 ?x18792) ?x18794) ?x18796) (* (* 2.0 l_0_8_218) l_0_8_232))))
 (let ((?x26724 (- (- ?x26720 (* (* 2.0 l_0_8_219) l_0_8_233)) (* (* 2.0 l_0_8_304) l_0_8_317))))
 (let ((?x26728 (- (- ?x26724 (* (* 2.0 l_0_8_305) l_0_8_318)) (* (* 2.0 l_0_8_306) l_0_8_319))))
 (let ((?x26732 (- (- ?x26728 (* (* 2.0 l_0_8_307) l_0_8_320)) (* (* 2.0 l_0_8_308) l_0_8_321))))
 (let ((?x26736 (- (- ?x26732 (* (* 2.0 l_0_8_309) l_0_8_322)) (* (* 2.0 l_0_8_340) l_0_8_353))))
 (let ((?x26740 (- (- ?x26736 (* (* 2.0 l_0_8_341) l_0_8_354)) (* (* 2.0 l_0_8_342) l_0_8_355))))
 (let ((?x26744 (- (- ?x26740 (* (* 2.0 l_0_8_343) l_0_8_356)) (* (* 2.0 l_0_8_344) l_0_8_357))))
 (= (- ?x26744 (* (* 2.0 l_0_8_345) l_0_8_358)) 0.0)))))))))))))))))
(assert
 (let ((?x18875 (* l_0_8_186 l_0_8_186)))
 (let ((?x18873 (* l_0_8_185 l_0_8_185)))
 (let ((?x18871 (* l_0_8_184 l_0_8_184)))
 (let ((?x18869 (* l_0_8_150 l_0_8_150)))
 (let ((?x26842 (- (+ (+ (* l_0_8_148 l_0_8_148) (* l_0_8_149 l_0_8_149)) ?x18869) ?x18871)))
 (= (- (- ?x26842 ?x18873) ?x18875) 0.0)))))))
(assert
 (let ((?x18474 (* 2.0 l_0_8_258)))
 (let ((?x26863 (* ?x18474 l_0_8_270)))
 (let ((?x18471 (* 2.0 l_0_8_257)))
 (let ((?x26861 (* ?x18471 l_0_8_269)))
 (let ((?x18468 (* 2.0 l_0_8_256)))
 (let ((?x26859 (* ?x18468 l_0_8_268)))
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x19017 (* ?x18580 l_0_8_193)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x19015 (* ?x18577 l_0_8_192)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x19013 (* ?x18574 l_0_8_191)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x19011 (* ?x18561 l_0_8_157)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x19009 (* ?x18558 l_0_8_156)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x19007 (* ?x18555 l_0_8_155)))
 (let ((?x26862 (- (- (- (- (- (+ (+ ?x19007 ?x19009) ?x19011) ?x19013) ?x19015) ?x19017) ?x26859) ?x26861)))
 (= (- ?x26862 ?x26863) 0.0)))))))))))))))))))))
(assert
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x19089 (* ?x18580 l_0_8_198)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x19087 (* ?x18577 l_0_8_197)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x19085 (* ?x18574 l_0_8_196)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x19065 (* ?x18561 l_0_8_162)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x19061 (* ?x18558 l_0_8_161)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x20448 (* ?x18555 l_0_8_160)))
 (= (- (- (- (+ (+ ?x20448 ?x19061) ?x19065) ?x19085) ?x19087) ?x19089) 0.0))))))))))))))
(assert
 (let ((?x18474 (* 2.0 l_0_8_258)))
 (let ((?x26863 (* ?x18474 l_0_8_270)))
 (let ((?x18471 (* 2.0 l_0_8_257)))
 (let ((?x26861 (* ?x18471 l_0_8_269)))
 (let ((?x18468 (* 2.0 l_0_8_256)))
 (let ((?x26859 (* ?x18468 l_0_8_268)))
 (let ((?x18580 (* 2.0 l_0_8_186)))
 (let ((?x19166 (* ?x18580 l_0_8_204)))
 (let ((?x18577 (* 2.0 l_0_8_185)))
 (let ((?x19164 (* ?x18577 l_0_8_203)))
 (let ((?x18574 (* 2.0 l_0_8_184)))
 (let ((?x19162 (* ?x18574 l_0_8_202)))
 (let ((?x18561 (* 2.0 l_0_8_150)))
 (let ((?x19159 (* ?x18561 l_0_8_168)))
 (let ((?x18558 (* 2.0 l_0_8_149)))
 (let ((?x19156 (* ?x18558 l_0_8_167)))
 (let ((?x18555 (* 2.0 l_0_8_148)))
 (let ((?x19153 (* ?x18555 l_0_8_166)))
 (let ((?x26924 (+ (+ (- (- (- (+ (+ ?x19153 ?x19156) ?x19159) ?x19162) ?x19164) ?x19166) ?x26859) ?x26861)))
 (= (+ ?x26924 ?x26863) 0.0)))))))))))))))))))))
(assert
 (let ((?x23745 (* 2.0 l_0_8_267)))
 (let ((?x26956 (* ?x23745 l_0_8_272)))
 (let ((?x23742 (* 2.0 l_0_8_266)))
 (let ((?x26954 (* ?x23742 l_0_8_271)))
 (let ((?x23739 (* 2.0 l_0_8_265)))
 (let ((?x26952 (* ?x23739 l_0_8_270)))
 (let ((?x23736 (* 2.0 l_0_8_264)))
 (let ((?x26950 (* ?x23736 l_0_8_269)))
 (let ((?x23733 (* 2.0 l_0_8_263)))
 (let ((?x26948 (* ?x23733 l_0_8_268)))
 (let ((?x19862 (* l_0_8_195 l_0_8_195)))
 (let ((?x19860 (* l_0_8_194 l_0_8_194)))
 (let ((?x19858 (* l_0_8_193 l_0_8_193)))
 (let ((?x19856 (* l_0_8_192 l_0_8_192)))
 (let ((?x19854 (* l_0_8_191 l_0_8_191)))
 (let ((?x19852 (* l_0_8_159 l_0_8_159)))
 (let ((?x19850 (* l_0_8_158 l_0_8_158)))
 (let ((?x19848 (* l_0_8_157 l_0_8_157)))
 (let ((?x26941 (+ (+ (+ (* l_0_8_155 l_0_8_155) (* l_0_8_156 l_0_8_156)) ?x19848) ?x19850)))
 (let ((?x26949 (- (- (- (- (- (- (+ ?x26941 ?x19852) ?x19854) ?x19856) ?x19858) ?x19860) ?x19862) ?x26948)))
 (= (- (- (- (- ?x26949 ?x26950) ?x26952) ?x26954) ?x26956) 0.0))))))))))))))))))))))
(assert
 (let ((?x27020 (* l_0_8_273 l_0_8_273)))
 (let ((?x27018 (* l_0_8_272 l_0_8_272)))
 (let ((?x27016 (* l_0_8_271 l_0_8_271)))
 (let ((?x27014 (* l_0_8_270 l_0_8_270)))
 (let ((?x27012 (* l_0_8_269 l_0_8_269)))
 (let ((?x27010 (* l_0_8_268 l_0_8_268)))
 (let ((?x19955 (* 2.0 l_0_8_195)))
 (let ((?x19956 (* ?x19955 l_0_8_200)))
 (let ((?x19952 (* 2.0 l_0_8_194)))
 (let ((?x19953 (* ?x19952 l_0_8_199)))
 (let ((?x19949 (* 2.0 l_0_8_193)))
 (let ((?x19950 (* ?x19949 l_0_8_198)))
 (let ((?x19946 (* 2.0 l_0_8_192)))
 (let ((?x19947 (* ?x19946 l_0_8_197)))
 (let ((?x19943 (* 2.0 l_0_8_191)))
 (let ((?x19944 (* ?x19943 l_0_8_196)))
 (let ((?x19940 (* 2.0 l_0_8_159)))
 (let ((?x19941 (* ?x19940 l_0_8_164)))
 (let ((?x19937 (* 2.0 l_0_8_158)))
 (let ((?x19938 (* ?x19937 l_0_8_163)))
 (let ((?x19934 (* 2.0 l_0_8_157)))
 (let ((?x19935 (* ?x19934 l_0_8_162)))
 (let ((?x19931 (* 2.0 l_0_8_156)))
 (let ((?x19932 (* ?x19931 l_0_8_161)))
 (let ((?x19928 (* 2.0 l_0_8_155)))
 (let ((?x19929 (* ?x19928 l_0_8_160)))
 (let ((?x27007 (- (- (- (+ (+ (+ (+ ?x19929 ?x19932) ?x19935) ?x19938) ?x19941) ?x19944) ?x19947) ?x19950)))
 (let ((?x27019 (- (- (- (- (- (- (- ?x27007 ?x19953) ?x19956) ?x27010) ?x27012) ?x27014) ?x27016) ?x27018)))
 (= (- ?x27019 ?x27020) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x23934 (* 2.0 l_0_8_273)))
 (let ((?x27087 (* ?x23934 l_0_8_279)))
 (let ((?x23931 (* 2.0 l_0_8_272)))
 (let ((?x27085 (* ?x23931 l_0_8_278)))
 (let ((?x23928 (* 2.0 l_0_8_271)))
 (let ((?x27083 (* ?x23928 l_0_8_277)))
 (let ((?x23925 (* 2.0 l_0_8_270)))
 (let ((?x27081 (* ?x23925 l_0_8_276)))
 (let ((?x23922 (* 2.0 l_0_8_269)))
 (let ((?x27079 (* ?x23922 l_0_8_275)))
 (let ((?x23919 (* 2.0 l_0_8_268)))
 (let ((?x27077 (* ?x23919 l_0_8_274)))
 (let ((?x23745 (* 2.0 l_0_8_267)))
 (let ((?x26956 (* ?x23745 l_0_8_272)))
 (let ((?x23742 (* 2.0 l_0_8_266)))
 (let ((?x26954 (* ?x23742 l_0_8_271)))
 (let ((?x23739 (* 2.0 l_0_8_265)))
 (let ((?x26952 (* ?x23739 l_0_8_270)))
 (let ((?x23736 (* 2.0 l_0_8_264)))
 (let ((?x26950 (* ?x23736 l_0_8_269)))
 (let ((?x23733 (* 2.0 l_0_8_263)))
 (let ((?x26948 (* ?x23733 l_0_8_268)))
 (let ((?x19955 (* 2.0 l_0_8_195)))
 (let ((?x20089 (* ?x19955 l_0_8_206)))
 (let ((?x19952 (* 2.0 l_0_8_194)))
 (let ((?x20087 (* ?x19952 l_0_8_205)))
 (let ((?x19949 (* 2.0 l_0_8_193)))
 (let ((?x20085 (* ?x19949 l_0_8_204)))
 (let ((?x19946 (* 2.0 l_0_8_192)))
 (let ((?x20083 (* ?x19946 l_0_8_203)))
 (let ((?x19943 (* 2.0 l_0_8_191)))
 (let ((?x20081 (* ?x19943 l_0_8_202)))
 (let ((?x19940 (* 2.0 l_0_8_159)))
 (let ((?x20079 (* ?x19940 l_0_8_170)))
 (let ((?x19937 (* 2.0 l_0_8_158)))
 (let ((?x20077 (* ?x19937 l_0_8_169)))
 (let ((?x19934 (* 2.0 l_0_8_157)))
 (let ((?x20075 (* ?x19934 l_0_8_168)))
 (let ((?x19931 (* 2.0 l_0_8_156)))
 (let ((?x20073 (* ?x19931 l_0_8_167)))
 (let ((?x19928 (* 2.0 l_0_8_155)))
 (let ((?x20071 (* ?x19928 l_0_8_166)))
 (let ((?x27069 (- (- (- (+ (+ (+ (+ ?x20071 ?x20073) ?x20075) ?x20077) ?x20079) ?x20081) ?x20083) ?x20085)))
 (let ((?x27076 (+ (+ (+ (+ (+ (- (- ?x27069 ?x20087) ?x20089) ?x26948) ?x26950) ?x26952) ?x26954) ?x26956)))
 (= (- (- (- (- (- (- ?x27076 ?x27077) ?x27079) ?x27081) ?x27083) ?x27085) ?x27087) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23934 (* 2.0 l_0_8_273)))
 (let ((?x23935 (* ?x23934 l_0_8_286)))
 (let ((?x23931 (* 2.0 l_0_8_272)))
 (let ((?x23932 (* ?x23931 l_0_8_285)))
 (let ((?x23928 (* 2.0 l_0_8_271)))
 (let ((?x23929 (* ?x23928 l_0_8_284)))
 (let ((?x23925 (* 2.0 l_0_8_270)))
 (let ((?x23926 (* ?x23925 l_0_8_283)))
 (let ((?x23922 (* 2.0 l_0_8_269)))
 (let ((?x23923 (* ?x23922 l_0_8_282)))
 (let ((?x23919 (* 2.0 l_0_8_268)))
 (let ((?x23920 (* ?x23919 l_0_8_281)))
 (let ((?x19955 (* 2.0 l_0_8_195)))
 (let ((?x20250 (* ?x19955 l_0_8_213)))
 (let ((?x19952 (* 2.0 l_0_8_194)))
 (let ((?x20248 (* ?x19952 l_0_8_212)))
 (let ((?x19949 (* 2.0 l_0_8_193)))
 (let ((?x20246 (* ?x19949 l_0_8_211)))
 (let ((?x19946 (* 2.0 l_0_8_192)))
 (let ((?x20244 (* ?x19946 l_0_8_210)))
 (let ((?x19943 (* 2.0 l_0_8_191)))
 (let ((?x20242 (* ?x19943 l_0_8_209)))
 (let ((?x19940 (* 2.0 l_0_8_159)))
 (let ((?x20240 (* ?x19940 l_0_8_177)))
 (let ((?x19937 (* 2.0 l_0_8_158)))
 (let ((?x20238 (* ?x19937 l_0_8_176)))
 (let ((?x19934 (* 2.0 l_0_8_157)))
 (let ((?x20236 (* ?x19934 l_0_8_175)))
 (let ((?x19931 (* 2.0 l_0_8_156)))
 (let ((?x20234 (* ?x19931 l_0_8_174)))
 (let ((?x19928 (* 2.0 l_0_8_155)))
 (let ((?x20232 (* ?x19928 l_0_8_173)))
 (let ((?x27150 (- (- (- (+ (+ (+ (+ ?x20232 ?x20234) ?x20236) ?x20238) ?x20240) ?x20242) ?x20244) ?x20246)))
 (let ((?x27156 (- (- (- (- ?x27150 ?x20248) ?x20250) (* (* 2.0 l_0_8_227) l_0_8_232)) (* (* 2.0 l_0_8_228) l_0_8_233))))
 (let ((?x27160 (- (- ?x27156 (* (* 2.0 l_0_8_229) l_0_8_234)) (* (* 2.0 l_0_8_230) l_0_8_235))))
 (let ((?x27165 (- (- (- (- ?x27160 (* (* 2.0 l_0_8_231) l_0_8_236)) ?x23920) ?x23923) ?x23926)))
 (= (- (- (- ?x27165 ?x23929) ?x23932) ?x23935) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20374 (* l_0_8_201 l_0_8_201)))
 (let ((?x20372 (* l_0_8_200 l_0_8_200)))
 (let ((?x20368 (* l_0_8_199 l_0_8_199)))
 (let ((?x20366 (* l_0_8_198 l_0_8_198)))
 (let ((?x20364 (* l_0_8_197 l_0_8_197)))
 (let ((?x20362 (* l_0_8_196 l_0_8_196)))
 (let ((?x20354 (* l_0_8_165 l_0_8_165)))
 (let ((?x20339 (* l_0_8_164 l_0_8_164)))
 (let ((?x20336 (* l_0_8_163 l_0_8_163)))
 (let ((?x20332 (* l_0_8_162 l_0_8_162)))
 (let ((?x27242 (+ (+ (+ (* l_0_8_160 l_0_8_160) (* l_0_8_161 l_0_8_161)) ?x20332) ?x20336)))
 (let ((?x27249 (- (- (- (- (- (+ (+ ?x27242 ?x20339) ?x20354) ?x20362) ?x20364) ?x20366) ?x20368) ?x20372)))
 (= (- ?x27249 ?x20374) 0.0))))))))))))))
(assert
 (let ((?x27020 (* l_0_8_273 l_0_8_273)))
 (let ((?x27018 (* l_0_8_272 l_0_8_272)))
 (let ((?x27016 (* l_0_8_271 l_0_8_271)))
 (let ((?x27014 (* l_0_8_270 l_0_8_270)))
 (let ((?x27012 (* l_0_8_269 l_0_8_269)))
 (let ((?x27010 (* l_0_8_268 l_0_8_268)))
 (let ((?x20497 (* 2.0 l_0_8_201)))
 (let ((?x20498 (* ?x20497 l_0_8_207)))
 (let ((?x20494 (* 2.0 l_0_8_200)))
 (let ((?x20495 (* ?x20494 l_0_8_206)))
 (let ((?x20488 (* 2.0 l_0_8_199)))
 (let ((?x20489 (* ?x20488 l_0_8_205)))
 (let ((?x20485 (* 2.0 l_0_8_198)))
 (let ((?x20486 (* ?x20485 l_0_8_204)))
 (let ((?x20482 (* 2.0 l_0_8_197)))
 (let ((?x20483 (* ?x20482 l_0_8_203)))
 (let ((?x20479 (* 2.0 l_0_8_196)))
 (let ((?x20480 (* ?x20479 l_0_8_202)))
 (let ((?x20469 (* 2.0 l_0_8_165)))
 (let ((?x20470 (* ?x20469 l_0_8_171)))
 (let ((?x20466 (* 2.0 l_0_8_164)))
 (let ((?x20467 (* ?x20466 l_0_8_170)))
 (let ((?x20463 (* 2.0 l_0_8_163)))
 (let ((?x20464 (* ?x20463 l_0_8_169)))
 (let ((?x20460 (* 2.0 l_0_8_162)))
 (let ((?x20461 (* ?x20460 l_0_8_168)))
 (let ((?x20457 (* 2.0 l_0_8_161)))
 (let ((?x20458 (* ?x20457 l_0_8_167)))
 (let ((?x20454 (* 2.0 l_0_8_160)))
 (let ((?x20455 (* ?x20454 l_0_8_166)))
 (let ((?x27272 (- (- (+ (+ (+ (+ (+ ?x20455 ?x20458) ?x20461) ?x20464) ?x20467) ?x20470) ?x20480) ?x20483)))
 (let ((?x27279 (+ (+ (+ (- (- (- (- ?x27272 ?x20486) ?x20489) ?x20495) ?x20498) ?x27010) ?x27012) ?x27014)))
 (= (+ (+ (+ ?x27279 ?x27016) ?x27018) ?x27020) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27326 (* l_0_8_237 l_0_8_237)))
 (let ((?x27324 (* l_0_8_236 l_0_8_236)))
 (let ((?x27322 (* l_0_8_235 l_0_8_235)))
 (let ((?x27320 (* l_0_8_234 l_0_8_234)))
 (let ((?x27318 (* l_0_8_233 l_0_8_233)))
 (let ((?x27316 (* l_0_8_232 l_0_8_232)))
 (let ((?x20497 (* 2.0 l_0_8_201)))
 (let ((?x20699 (* ?x20497 l_0_8_214)))
 (let ((?x20494 (* 2.0 l_0_8_200)))
 (let ((?x20697 (* ?x20494 l_0_8_213)))
 (let ((?x20488 (* 2.0 l_0_8_199)))
 (let ((?x20693 (* ?x20488 l_0_8_212)))
 (let ((?x20485 (* 2.0 l_0_8_198)))
 (let ((?x20691 (* ?x20485 l_0_8_211)))
 (let ((?x20482 (* 2.0 l_0_8_197)))
 (let ((?x20689 (* ?x20482 l_0_8_210)))
 (let ((?x20479 (* 2.0 l_0_8_196)))
 (let ((?x20687 (* ?x20479 l_0_8_209)))
 (let ((?x20469 (* 2.0 l_0_8_165)))
 (let ((?x20679 (* ?x20469 l_0_8_178)))
 (let ((?x20466 (* 2.0 l_0_8_164)))
 (let ((?x20677 (* ?x20466 l_0_8_177)))
 (let ((?x20463 (* 2.0 l_0_8_163)))
 (let ((?x20675 (* ?x20463 l_0_8_176)))
 (let ((?x20460 (* 2.0 l_0_8_162)))
 (let ((?x20673 (* ?x20460 l_0_8_175)))
 (let ((?x20457 (* 2.0 l_0_8_161)))
 (let ((?x20671 (* ?x20457 l_0_8_174)))
 (let ((?x20454 (* 2.0 l_0_8_160)))
 (let ((?x20669 (* ?x20454 l_0_8_173)))
 (let ((?x27311 (- (- (+ (+ (+ (+ (+ ?x20669 ?x20671) ?x20673) ?x20675) ?x20677) ?x20679) ?x20687) ?x20689)))
 (let ((?x27321 (- (- (- (- (- (- (- ?x27311 ?x20691) ?x20693) ?x20697) ?x20699) ?x27316) ?x27318) ?x27320)))
 (= (- (- (- ?x27321 ?x27322) ?x27324) ?x27326) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23934 (* 2.0 l_0_8_273)))
 (let ((?x27087 (* ?x23934 l_0_8_279)))
 (let ((?x23931 (* 2.0 l_0_8_272)))
 (let ((?x27085 (* ?x23931 l_0_8_278)))
 (let ((?x23928 (* 2.0 l_0_8_271)))
 (let ((?x27083 (* ?x23928 l_0_8_277)))
 (let ((?x23925 (* 2.0 l_0_8_270)))
 (let ((?x27081 (* ?x23925 l_0_8_276)))
 (let ((?x23922 (* 2.0 l_0_8_269)))
 (let ((?x27079 (* ?x23922 l_0_8_275)))
 (let ((?x23919 (* 2.0 l_0_8_268)))
 (let ((?x27077 (* ?x23919 l_0_8_274)))
 (let ((?x20853 (* l_0_8_208 l_0_8_208)))
 (let ((?x20851 (* l_0_8_207 l_0_8_207)))
 (let ((?x20849 (* l_0_8_206 l_0_8_206)))
 (let ((?x20847 (* l_0_8_205 l_0_8_205)))
 (let ((?x20845 (* l_0_8_204 l_0_8_204)))
 (let ((?x20843 (* l_0_8_203 l_0_8_203)))
 (let ((?x20841 (* l_0_8_202 l_0_8_202)))
 (let ((?x20839 (* l_0_8_172 l_0_8_172)))
 (let ((?x20837 (* l_0_8_171 l_0_8_171)))
 (let ((?x20835 (* l_0_8_170 l_0_8_170)))
 (let ((?x20833 (* l_0_8_169 l_0_8_169)))
 (let ((?x20831 (* l_0_8_168 l_0_8_168)))
 (let ((?x27369 (+ (+ (+ (* l_0_8_166 l_0_8_166) (* l_0_8_167 l_0_8_167)) ?x20831) ?x20833)))
 (let ((?x27376 (- (- (- (- (+ (+ (+ ?x27369 ?x20835) ?x20837) ?x20839) ?x20841) ?x20843) ?x20845) ?x20847)))
 (let ((?x27383 (+ (+ (+ (+ (- (- (- ?x27376 ?x20849) ?x20851) ?x20853) ?x27077) ?x27079) ?x27081) ?x27083)))
 (= (+ (+ ?x27383 ?x27085) ?x27087) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x21243 (* l_0_8_216 l_0_8_216)))
 (let ((?x21241 (* l_0_8_215 l_0_8_215)))
 (let ((?x21239 (* l_0_8_214 l_0_8_214)))
 (let ((?x21237 (* l_0_8_213 l_0_8_213)))
 (let ((?x21235 (* l_0_8_212 l_0_8_212)))
 (let ((?x21233 (* l_0_8_211 l_0_8_211)))
 (let ((?x21231 (* l_0_8_210 l_0_8_210)))
 (let ((?x21229 (* l_0_8_209 l_0_8_209)))
 (let ((?x21227 (* l_0_8_180 l_0_8_180)))
 (let ((?x21225 (* l_0_8_179 l_0_8_179)))
 (let ((?x21223 (* l_0_8_178 l_0_8_178)))
 (let ((?x21221 (* l_0_8_177 l_0_8_177)))
 (let ((?x21200 (* l_0_8_176 l_0_8_176)))
 (let ((?x21196 (* l_0_8_175 l_0_8_175)))
 (let ((?x27406 (+ (+ (+ (* l_0_8_173 l_0_8_173) (* l_0_8_174 l_0_8_174)) ?x21196) ?x21200)))
 (let ((?x27413 (- (- (- (+ (+ (+ (+ ?x27406 ?x21221) ?x21223) ?x21225) ?x21227) ?x21229) ?x21231) ?x21233)))
 (let ((?x27420 (- (- (- (- (- (- ?x27413 ?x21235) ?x21237) ?x21239) ?x21241) ?x21243) (* (* 2.0 l_0_8_232) l_0_8_245))))
 (let ((?x27424 (- (- ?x27420 (* (* 2.0 l_0_8_233) l_0_8_246)) (* (* 2.0 l_0_8_234) l_0_8_247))))
 (let ((?x27428 (- (- ?x27424 (* (* 2.0 l_0_8_235) l_0_8_248)) (* (* 2.0 l_0_8_236) l_0_8_249))))
 (= (- ?x27428 (* (* 2.0 l_0_8_237) l_0_8_250)) 0.0)))))))))))))))))))))
(assert
 (let ((?x27491 (- (- (* (- l_0_8_218) l_0_8_218) (* l_0_8_219 l_0_8_219)) (* (* 2.0 l_0_8_290) l_0_8_317))))
 (let ((?x27495 (- (- ?x27491 (* (* 2.0 l_0_8_291) l_0_8_318)) (* (* 2.0 l_0_8_326) l_0_8_353))))
 (= (- ?x27495 (* (* 2.0 l_0_8_327) l_0_8_354)) 0.0))))
(assert
 (let ((?x27564 (* l_0_8_360 l_0_8_360)))
 (let ((?x27562 (* l_0_8_359 l_0_8_359)))
 (let ((?x27560 (* l_0_8_358 l_0_8_358)))
 (let ((?x27558 (* l_0_8_357 l_0_8_357)))
 (let ((?x27556 (* l_0_8_356 l_0_8_356)))
 (let ((?x27554 (* l_0_8_355 l_0_8_355)))
 (let ((?x27552 (* l_0_8_354 l_0_8_354)))
 (let ((?x27550 (* l_0_8_353 l_0_8_353)))
 (let ((?x27548 (* l_0_8_324 l_0_8_324)))
 (let ((?x27546 (* l_0_8_323 l_0_8_323)))
 (let ((?x27544 (* l_0_8_322 l_0_8_322)))
 (let ((?x27542 (* l_0_8_321 l_0_8_321)))
 (let ((?x27540 (* l_0_8_320 l_0_8_320)))
 (let ((?x27538 (* l_0_8_319 l_0_8_319)))
 (let ((?x27536 (* l_0_8_318 l_0_8_318)))
 (let ((?x27534 (* l_0_8_317 l_0_8_317)))
 (let ((?x27533 (- (* (* (- 2.0) l_0_8_218) l_0_8_245) (* (* 2.0 l_0_8_219) l_0_8_246))))
 (let ((?x27547 (- (- (- (- (- (- (- ?x27533 ?x27534) ?x27536) ?x27538) ?x27540) ?x27542) ?x27544) ?x27546)))
 (let ((?x27561 (- (- (- (- (- (- (- ?x27547 ?x27548) ?x27550) ?x27552) ?x27554) ?x27556) ?x27558) ?x27560)))
 (= (- (- ?x27561 ?x27562) ?x27564) 0.0)))))))))))))))))))))
(assert
 (let ((?x23745 (* 2.0 l_0_8_267)))
 (let ((?x23746 (* ?x23745 l_0_8_285)))
 (let ((?x23742 (* 2.0 l_0_8_266)))
 (let ((?x23743 (* ?x23742 l_0_8_284)))
 (let ((?x23739 (* 2.0 l_0_8_265)))
 (let ((?x23740 (* ?x23739 l_0_8_283)))
 (let ((?x23736 (* 2.0 l_0_8_264)))
 (let ((?x23737 (* ?x23736 l_0_8_282)))
 (let ((?x23733 (* 2.0 l_0_8_263)))
 (let ((?x23734 (* ?x23733 l_0_8_281)))
 (let ((?x27634 (* l_0_8_231 l_0_8_231)))
 (let ((?x27632 (* l_0_8_230 l_0_8_230)))
 (let ((?x27630 (* l_0_8_229 l_0_8_229)))
 (let ((?x27631 (- (- (* (- l_0_8_227) l_0_8_227) (* l_0_8_228 l_0_8_228)) ?x27630)))
 (let ((?x27640 (- (- (- (- (- (- (- ?x27631 ?x27632) ?x27634) ?x23734) ?x23737) ?x23740) ?x23743) ?x23746)))
 (= ?x27640 0.0)))))))))))))))))
(assert
 (let ((?x24156 (* l_0_8_288 l_0_8_288)))
 (let ((?x24154 (* l_0_8_287 l_0_8_287)))
 (let ((?x24152 (* l_0_8_286 l_0_8_286)))
 (let ((?x24150 (* l_0_8_285 l_0_8_285)))
 (let ((?x24148 (* l_0_8_284 l_0_8_284)))
 (let ((?x24146 (* l_0_8_283 l_0_8_283)))
 (let ((?x24144 (* l_0_8_282 l_0_8_282)))
 (let ((?x24142 (* l_0_8_281 l_0_8_281)))
 (let ((?x27677 (- (* (* (- 2.0) l_0_8_227) l_0_8_245) (* (* 2.0 l_0_8_228) l_0_8_246))))
 (let ((?x27681 (- (- ?x27677 (* (* 2.0 l_0_8_229) l_0_8_247)) (* (* 2.0 l_0_8_230) l_0_8_248))))
 (let ((?x27686 (- (- (- (- ?x27681 (* (* 2.0 l_0_8_231) l_0_8_249)) ?x24142) ?x24144) ?x24146)))
 (= (- (- (- (- (- ?x27686 ?x24148) ?x24150) ?x24152) ?x24154) ?x24156) 0.0)))))))))))))
(assert
 (let ((?x27752 (* l_0_8_252 l_0_8_252)))
 (let ((?x27750 (* l_0_8_251 l_0_8_251)))
 (let ((?x27748 (* l_0_8_250 l_0_8_250)))
 (let ((?x27746 (* l_0_8_249 l_0_8_249)))
 (let ((?x27744 (* l_0_8_248 l_0_8_248)))
 (let ((?x27742 (* l_0_8_247 l_0_8_247)))
 (let ((?x27743 (- (- (* (- l_0_8_245) l_0_8_245) (* l_0_8_246 l_0_8_246)) ?x27742)))
 (= (- (- (- (- (- ?x27743 ?x27744) ?x27746) ?x27748) ?x27750) ?x27752) 0.0)))))))))
(assert
 (let ((?x27785 (- (+ (* l_0_8_254 l_0_8_254) (* l_0_8_255 l_0_8_255)) (* (* 2.0 l_0_8_290) l_0_8_310))))
 (let ((?x27789 (- (- ?x27785 (* (* 2.0 l_0_8_291) l_0_8_311)) (* (* 2.0 l_0_8_326) l_0_8_346))))
 (= (- ?x27789 (* (* 2.0 l_0_8_327) l_0_8_347)) 0.0))))
(assert
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x27819 (* ?x17871 l_0_8_257)))
 (let ((?x27822 (- (+ (* (* 2.0 l_0_8_254) l_0_8_256) ?x27819) (* (* 2.0 l_0_8_292) l_0_8_310))))
 (let ((?x27826 (- (- ?x27822 (* (* 2.0 l_0_8_293) l_0_8_311)) (* (* 2.0 l_0_8_294) l_0_8_312))))
 (let ((?x27830 (- (- ?x27826 (* (* 2.0 l_0_8_328) l_0_8_346)) (* (* 2.0 l_0_8_329) l_0_8_347))))
 (= (- ?x27830 (* (* 2.0 l_0_8_330) l_0_8_348)) 0.0)))))))
(assert
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x27881 (* ?x17871 l_0_8_275)))
 (let ((?x27879 (* ?x17871 l_0_8_264)))
 (let ((?x17868 (* 2.0 l_0_8_254)))
 (let ((?x27877 (* ?x17868 l_0_8_274)))
 (let ((?x27884 (- (- (+ (- (* ?x17868 l_0_8_263) ?x27877) ?x27879) ?x27881) (* (* 2.0 l_0_8_299) l_0_8_310))))
 (let ((?x27888 (- (- ?x27884 (* (* 2.0 l_0_8_300) l_0_8_311)) (* (* 2.0 l_0_8_301) l_0_8_312))))
 (let ((?x27892 (- (- ?x27888 (* (* 2.0 l_0_8_302) l_0_8_313)) (* (* 2.0 l_0_8_303) l_0_8_314))))
 (let ((?x27896 (- (- ?x27892 (* (* 2.0 l_0_8_335) l_0_8_346)) (* (* 2.0 l_0_8_336) l_0_8_347))))
 (let ((?x27900 (- (- ?x27896 (* (* 2.0 l_0_8_337) l_0_8_348)) (* (* 2.0 l_0_8_338) l_0_8_349))))
 (= (- ?x27900 (* (* 2.0 l_0_8_339) l_0_8_350)) 0.0))))))))))))
(assert
 (let ((?x28009 (* l_0_8_352 l_0_8_352)))
 (let ((?x28007 (* l_0_8_351 l_0_8_351)))
 (let ((?x28005 (* l_0_8_350 l_0_8_350)))
 (let ((?x28003 (* l_0_8_349 l_0_8_349)))
 (let ((?x28001 (* l_0_8_348 l_0_8_348)))
 (let ((?x27999 (* l_0_8_347 l_0_8_347)))
 (let ((?x27997 (* l_0_8_346 l_0_8_346)))
 (let ((?x27995 (* l_0_8_316 l_0_8_316)))
 (let ((?x27993 (* l_0_8_315 l_0_8_315)))
 (let ((?x27991 (* l_0_8_314 l_0_8_314)))
 (let ((?x27989 (* l_0_8_313 l_0_8_313)))
 (let ((?x27987 (* l_0_8_312 l_0_8_312)))
 (let ((?x27985 (* l_0_8_311 l_0_8_311)))
 (let ((?x27983 (* l_0_8_310 l_0_8_310)))
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x27881 (* ?x17871 l_0_8_275)))
 (let ((?x17868 (* 2.0 l_0_8_254)))
 (let ((?x27877 (* ?x17868 l_0_8_274)))
 (let ((?x27994 (- (- (- (- (- (- (+ ?x27877 ?x27881) ?x27983) ?x27985) ?x27987) ?x27989) ?x27991) ?x27993)))
 (let ((?x28008 (- (- (- (- (- (- (- ?x27994 ?x27995) ?x27997) ?x27999) ?x28001) ?x28003) ?x28005) ?x28007)))
 (= (- ?x28008 ?x28009) 0.0))))))))))))))))))))))
(assert
 (let ((?x28059 (* l_0_8_258 l_0_8_258)))
 (= (+ (+ (* l_0_8_256 l_0_8_256) (* l_0_8_257 l_0_8_257)) ?x28059) 0.0)))
(assert
 (let ((?x18474 (* 2.0 l_0_8_258)))
 (let ((?x28073 (* ?x18474 l_0_8_276)))
 (let ((?x28071 (* ?x18474 l_0_8_265)))
 (let ((?x18471 (* 2.0 l_0_8_257)))
 (let ((?x28069 (* ?x18471 l_0_8_275)))
 (let ((?x28067 (* ?x18471 l_0_8_264)))
 (let ((?x18468 (* 2.0 l_0_8_256)))
 (let ((?x28065 (* ?x18468 l_0_8_274)))
 (= (- (+ (- (+ (- (* ?x18468 l_0_8_263) ?x28065) ?x28067) ?x28069) ?x28071) ?x28073) 0.0))))))))))
(assert
 (let ((?x18474 (* 2.0 l_0_8_258)))
 (let ((?x28073 (* ?x18474 l_0_8_276)))
 (let ((?x18471 (* 2.0 l_0_8_257)))
 (let ((?x28069 (* ?x18471 l_0_8_275)))
 (let ((?x18468 (* 2.0 l_0_8_256)))
 (let ((?x28065 (* ?x18468 l_0_8_274)))
 (= (+ (+ ?x28065 ?x28069) ?x28073) 0.0))))))))
(assert
 (let ((?x28126 (* l_0_8_267 l_0_8_267)))
 (let ((?x23745 (* 2.0 l_0_8_267)))
 (let ((?x28124 (* ?x23745 l_0_8_278)))
 (let ((?x28122 (* l_0_8_266 l_0_8_266)))
 (let ((?x23742 (* 2.0 l_0_8_266)))
 (let ((?x28120 (* ?x23742 l_0_8_277)))
 (let ((?x28118 (* l_0_8_265 l_0_8_265)))
 (let ((?x23739 (* 2.0 l_0_8_265)))
 (let ((?x28116 (* ?x23739 l_0_8_276)))
 (let ((?x28114 (* l_0_8_264 l_0_8_264)))
 (let ((?x23736 (* 2.0 l_0_8_264)))
 (let ((?x28112 (* ?x23736 l_0_8_275)))
 (let ((?x28113 (- (+ (* (* (- 2.0) l_0_8_263) l_0_8_274) (* l_0_8_263 l_0_8_263)) ?x28112)))
 (let ((?x28127 (+ (- (+ (- (+ (- (+ ?x28113 ?x28114) ?x28116) ?x28118) ?x28120) ?x28122) ?x28124) ?x28126)))
 (= ?x28127 0.0))))))))))))))))
(assert
 (let ((?x28178 (* l_0_8_280 l_0_8_280)))
 (let ((?x28176 (* l_0_8_279 l_0_8_279)))
 (let ((?x28174 (* l_0_8_278 l_0_8_278)))
 (let ((?x28172 (* l_0_8_277 l_0_8_277)))
 (let ((?x28170 (* l_0_8_276 l_0_8_276)))
 (let ((?x28168 (* l_0_8_275 l_0_8_275)))
 (let ((?x28166 (* l_0_8_274 l_0_8_274)))
 (let ((?x23745 (* 2.0 l_0_8_267)))
 (let ((?x28124 (* ?x23745 l_0_8_278)))
 (let ((?x23742 (* 2.0 l_0_8_266)))
 (let ((?x28120 (* ?x23742 l_0_8_277)))
 (let ((?x23739 (* 2.0 l_0_8_265)))
 (let ((?x28116 (* ?x23739 l_0_8_276)))
 (let ((?x23736 (* 2.0 l_0_8_264)))
 (let ((?x28112 (* ?x23736 l_0_8_275)))
 (let ((?x28165 (+ (+ (+ (+ (* (* 2.0 l_0_8_263) l_0_8_274) ?x28112) ?x28116) ?x28120) ?x28124)))
 (let ((?x28179 (- (- (- (- (- (- (- ?x28165 ?x28166) ?x28168) ?x28170) ?x28172) ?x28174) ?x28176) ?x28178)))
 (= ?x28179 0.0)))))))))))))))))))
(assert
 (let ((?x28178 (* l_0_8_280 l_0_8_280)))
 (let ((?x28176 (* l_0_8_279 l_0_8_279)))
 (let ((?x28174 (* l_0_8_278 l_0_8_278)))
 (let ((?x28172 (* l_0_8_277 l_0_8_277)))
 (let ((?x28170 (* l_0_8_276 l_0_8_276)))
 (let ((?x28207 (+ (+ (+ (* l_0_8_274 l_0_8_274) (* l_0_8_275 l_0_8_275)) ?x28170) ?x28172)))
 (= (+ (+ (+ ?x28207 ?x28174) ?x28176) ?x28178) 0.0))))))))
(assert
 (let ((?x28218 (- (- (* (- l_0_8_254) l_0_8_254) (* l_0_8_255 l_0_8_255)) (* (* 2.0 l_0_8_290) l_0_8_299))))
 (let ((?x28222 (- (- ?x28218 (* (* 2.0 l_0_8_291) l_0_8_300)) (* (* 2.0 l_0_8_326) l_0_8_335))))
 (= (- ?x28222 (* (* 2.0 l_0_8_327) l_0_8_336)) 0.0))))
(assert
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x27819 (* ?x17871 l_0_8_257)))
 (let ((?x28260 (- (- (* (* (- 2.0) l_0_8_254) l_0_8_256) ?x27819) (* (* 2.0 l_0_8_292) l_0_8_299))))
 (let ((?x28264 (- (- ?x28260 (* (* 2.0 l_0_8_293) l_0_8_300)) (* (* 2.0 l_0_8_294) l_0_8_301))))
 (let ((?x28268 (- (- ?x28264 (* (* 2.0 l_0_8_328) l_0_8_335)) (* (* 2.0 l_0_8_329) l_0_8_336))))
 (= (- ?x28268 (* (* 2.0 l_0_8_330) l_0_8_337)) 0.0)))))))
(assert
 (let ((?x28335 (* l_0_8_339 l_0_8_339)))
 (let ((?x28333 (* l_0_8_338 l_0_8_338)))
 (let ((?x28331 (* l_0_8_337 l_0_8_337)))
 (let ((?x28329 (* l_0_8_336 l_0_8_336)))
 (let ((?x28327 (* l_0_8_335 l_0_8_335)))
 (let ((?x28325 (* l_0_8_303 l_0_8_303)))
 (let ((?x28323 (* l_0_8_302 l_0_8_302)))
 (let ((?x28321 (* l_0_8_301 l_0_8_301)))
 (let ((?x28319 (* l_0_8_300 l_0_8_300)))
 (let ((?x28317 (* l_0_8_299 l_0_8_299)))
 (let ((?x17871 (* 2.0 l_0_8_255)))
 (let ((?x27879 (* ?x17871 l_0_8_264)))
 (let ((?x28322 (- (- (- (- (* (* (- 2.0) l_0_8_254) l_0_8_263) ?x27879) ?x28317) ?x28319) ?x28321)))
 (let ((?x28336 (- (- (- (- (- (- (- ?x28322 ?x28323) ?x28325) ?x28327) ?x28329) ?x28331) ?x28333) ?x28335)))
 (= ?x28336 0.0))))))))))))))))
(assert
 (let ((?x28059 (* l_0_8_258 l_0_8_258)))
 (let ((?x28378 (- (- (* (- l_0_8_256) l_0_8_256) (* l_0_8_257 l_0_8_257)) ?x28059)))
 (= ?x28378 0.0))))
(assert
 (let ((?x18474 (* 2.0 l_0_8_258)))
 (let ((?x28071 (* ?x18474 l_0_8_265)))
 (let ((?x18471 (* 2.0 l_0_8_257)))
 (let ((?x28067 (* ?x18471 l_0_8_264)))
 (= (- (- (* (* (- 2.0) l_0_8_256) l_0_8_263) ?x28067) ?x28071) 0.0))))))
(assert
 (let ((?x28126 (* l_0_8_267 l_0_8_267)))
 (let ((?x28122 (* l_0_8_266 l_0_8_266)))
 (let ((?x28118 (* l_0_8_265 l_0_8_265)))
 (let ((?x28406 (- (- (* (- l_0_8_263) l_0_8_263) (* l_0_8_264 l_0_8_264)) ?x28118)))
 (= (- (- ?x28406 ?x28122) ?x28126) 0.0))))))
(assert
 (let ((?x28431 (* l_0_8_327 l_0_8_327)))
 (let ((?x28429 (* l_0_8_326 l_0_8_326)))
 (let ((?x28430 (- (- (* (- l_0_8_290) l_0_8_290) (* l_0_8_291 l_0_8_291)) ?x28429)))
 (= (- ?x28430 ?x28431) 0.0)))))
(assert
 (let ((?x28451 (- (* (* (- 2.0) l_0_8_290) l_0_8_292) (* (* 2.0 l_0_8_291) l_0_8_293))))
 (let ((?x28455 (- (- ?x28451 (* (* 2.0 l_0_8_326) l_0_8_328)) (* (* 2.0 l_0_8_327) l_0_8_329))))
 (= ?x28455 0.0))))
(assert
 (let ((?x28490 (* l_0_8_330 l_0_8_330)))
 (let ((?x28488 (* l_0_8_329 l_0_8_329)))
 (let ((?x28486 (* l_0_8_328 l_0_8_328)))
 (let ((?x28484 (* l_0_8_294 l_0_8_294)))
 (let ((?x28485 (- (- (* (- l_0_8_292) l_0_8_292) (* l_0_8_293 l_0_8_293)) ?x28484)))
 (= (- (- (- ?x28485 ?x28486) ?x28488) ?x28490) 0.0)))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_28 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_37 0.0))
(assert
 (>= l_0_8_39 0.0))
(assert
 (>= l_0_8_42 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_57 0.0))
(assert
 (>= l_0_8_64 0.0))
(assert
 (>= l_0_8_72 0.0))
(assert
 (>= l_0_8_73 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_82 0.0))
(assert
 (>= l_0_8_87 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_109 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_114 0.0))
(assert
 (>= l_0_8_118 0.0))
(assert
 (>= l_0_8_123 0.0))
(assert
 (>= l_0_8_129 0.0))
(assert
 (>= l_0_8_136 0.0))
(assert
 (>= l_0_8_144 0.0))
(assert
 (>= l_0_8_145 0.0))
(assert
 (>= l_0_8_147 0.0))
(assert
 (>= l_0_8_150 0.0))
(assert
 (>= l_0_8_154 0.0))
(assert
 (>= l_0_8_159 0.0))
(assert
 (>= l_0_8_165 0.0))
(assert
 (>= l_0_8_172 0.0))
(assert
 (>= l_0_8_180 0.0))
(assert
 (>= l_0_8_181 0.0))
(assert
 (>= l_0_8_183 0.0))
(assert
 (>= l_0_8_186 0.0))
(assert
 (>= l_0_8_190 0.0))
(assert
 (>= l_0_8_195 0.0))
(assert
 (>= l_0_8_201 0.0))
(assert
 (>= l_0_8_208 0.0))
(assert
 (>= l_0_8_216 0.0))
(assert
 (>= l_0_8_217 0.0))
(assert
 (>= l_0_8_219 0.0))
(assert
 (>= l_0_8_222 0.0))
(assert
 (>= l_0_8_226 0.0))
(assert
 (>= l_0_8_231 0.0))
(assert
 (>= l_0_8_237 0.0))
(assert
 (>= l_0_8_244 0.0))
(assert
 (>= l_0_8_252 0.0))
(assert
 (>= l_0_8_253 0.0))
(assert
 (>= l_0_8_255 0.0))
(assert
 (>= l_0_8_258 0.0))
(assert
 (>= l_0_8_262 0.0))
(assert
 (>= l_0_8_267 0.0))
(assert
 (>= l_0_8_273 0.0))
(assert
 (>= l_0_8_280 0.0))
(assert
 (>= l_0_8_288 0.0))
(assert
 (>= l_0_8_289 0.0))
(assert
 (>= l_0_8_291 0.0))
(assert
 (>= l_0_8_294 0.0))
(assert
 (>= l_0_8_298 0.0))
(assert
 (>= l_0_8_303 0.0))
(assert
 (>= l_0_8_309 0.0))
(assert
 (>= l_0_8_316 0.0))
(assert
 (>= l_0_8_324 0.0))
(assert
 (>= l_0_8_325 0.0))
(assert
 (>= l_0_8_327 0.0))
(assert
 (>= l_0_8_330 0.0))
(assert
 (>= l_0_8_334 0.0))
(assert
 (>= l_0_8_339 0.0))
(assert
 (>= l_0_8_345 0.0))
(assert
 (>= l_0_8_352 0.0))
(assert
 (>= l_0_8_360 0.0))
(assert
 (let ((?x28622 (* l_0_9_39 l_0_9_39)))
 (let ((?x28620 (* l_0_9_38 l_0_9_38)))
 (let ((?x28609 (* l_0_9_3 l_0_9_3)))
 (let ((?x28601 (* l_0_9_2 l_0_9_2)))
 (let ((?x28599 (* l_0_9_183 l_0_9_183)))
 (let ((?x28597 (* l_0_9_182 l_0_9_182)))
 (let ((?x28598 (+ (- (* (- l_0_9_146) l_0_9_146) (* l_0_9_147 l_0_9_147)) ?x28597)))
 (let ((?x28608 (- (- (- (+ ?x28598 ?x28599) ?x28601) (* (* 2.0 l_0_9_218) l_0_9_220)) (* (* 2.0 l_0_9_219) l_0_9_221))))
 (let ((?x28616 (- (- (- ?x28608 ?x28609) (* (* 2.0 l_0_9_328) l_0_9_353)) (* (* 2.0 l_0_9_329) l_0_9_354))))
 (let ((?x28624 (+ (+ (+ (- ?x28616 (* (* 2.0 l_0_9_330) l_0_9_355)) ?x28620) ?x28622) 1.0)))
 (= ?x28624 0.0))))))))))))
(assert
 (let ((?x28622 (* l_0_9_39 l_0_9_39)))
 (let ((?x28620 (* l_0_9_38 l_0_9_38)))
 (let ((?x28609 (* l_0_9_3 l_0_9_3)))
 (let ((?x28677 (* l_0_9_291 l_0_9_291)))
 (let ((?x28679 (+ (- (- (* l_0_9_2 l_0_9_2) (* l_0_9_290 l_0_9_290)) ?x28677) ?x28609)))
 (let ((?x28685 (- (- ?x28679 (* (* 2.0 l_0_9_326) l_0_9_331)) (* (* 2.0 l_0_9_327) l_0_9_332))))
 (= (- (- (- ?x28685 ?x28620) ?x28622) 1.0) 0.0))))))))
(assert
 (let ((?x28721 (* l_0_9_37 l_0_9_37)))
 (let ((?x28719 (* l_0_9_181 l_0_9_181)))
 (let ((?x28722 (+ (+ (- (* (- l_0_9_1) l_0_9_1) (* l_0_9_145 l_0_9_145)) ?x28719) ?x28721)))
 (= ?x28722 0.0)))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28773 (* ?x28772 l_0_9_38)))
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x28770 (* ?x28769 l_0_9_319)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x28767 (* ?x28766 l_0_9_318)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x28764 (* ?x28763 l_0_9_317)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28758 (* ?x28757 l_0_9_182)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28755 (* ?x28754 l_0_9_146)))
 (let ((?x28738 (+ (* (* (- 2.0) l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_101) l_0_9_76))))
 (let ((?x28744 (+ (+ ?x28738 (* (* 2.0 l_0_9_102) l_0_9_77)) (* (* 2.0 l_0_9_103) l_0_9_78))))
 (let ((?x28750 (- (- ?x28744 (* (* 2.0 l_0_9_112) l_0_9_137)) (* (* 2.0 l_0_9_113) l_0_9_138))))
 (let ((?x28762 (- (+ (- (- ?x28750 (* (* 2.0 l_0_9_114) l_0_9_139)) ?x28755) ?x28758) (* (* 2.0 l_0_9_217) l_0_9_220))))
 (= (+ (- (- (- ?x28762 ?x28764) ?x28767) ?x28770) ?x28773) 0.0))))))))))))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28850 (* ?x28772 l_0_9_40)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28848 (* ?x28757 l_0_9_184)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28838 (* ?x28754 l_0_9_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x28838) ?x28848) ?x28850) 0.0))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28873 (* ?x28772 l_0_9_43)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28871 (* ?x28757 l_0_9_187)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28864 (* ?x28754 l_0_9_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_1) l_0_9_7) ?x28864) ?x28871) ?x28873) 0.0))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28896 (* ?x28772 l_0_9_47)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28894 (* ?x28757 l_0_9_191)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28887 (* ?x28754 l_0_9_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_1) l_0_9_11) ?x28887) ?x28894) ?x28896) 0.0))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28919 (* ?x28772 l_0_9_52)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28917 (* ?x28757 l_0_9_196)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28910 (* ?x28754 l_0_9_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_1) l_0_9_16) ?x28910) ?x28917) ?x28919) 0.0))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28946 (* ?x28772 l_0_9_58)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28944 (* ?x28757 l_0_9_202)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28942 (* ?x28754 l_0_9_166)))
 (let ((?x28838 (* ?x28754 l_0_9_148)))
 (let ((?x28940 (+ (* (* (- 2.0) l_0_9_1) l_0_9_22) (* (* 1.0 l_0_9_109) l_0_9_112))))
 (let ((?x28950 (- (+ (+ (- (- ?x28940 ?x28838) ?x28942) ?x28944) ?x28946) (* (* 1.0 l_0_9_73) l_0_9_76))))
 (= ?x28950 0.0)))))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28984 (* ?x28772 l_0_9_65)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28982 (* ?x28757 l_0_9_209)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28980 (* ?x28754 l_0_9_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_1) l_0_9_29) ?x28980) ?x28982) ?x28984) 0.0))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29029 (* ?x29028 l_0_9_41)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29026 (* ?x29025 l_0_9_40)))
 (let ((?x29022 (* 2.0 l_0_9_3)))
 (let ((?x29023 (* ?x29022 l_0_9_5)))
 (let ((?x29020 (* l_0_9_222 l_0_9_222)))
 (let ((?x29018 (* l_0_9_221 l_0_9_221)))
 (let ((?x29016 (* l_0_9_220 l_0_9_220)))
 (let ((?x29013 (* 2.0 l_0_9_2)))
 (let ((?x29014 (* ?x29013 l_0_9_4)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29011 (* ?x29010 l_0_9_185)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29008 (* ?x29007 l_0_9_184)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29005 (* ?x28999 l_0_9_149)))
 (let ((?x29015 (- (+ (+ (- (* (* (- 2.0) l_0_9_146) l_0_9_148) ?x29005) ?x29008) ?x29011) ?x29014)))
 (= (+ (+ (- (- (- (- ?x29015 ?x29016) ?x29018) ?x29020) ?x29023) ?x29026) ?x29029) 0.0))))))))))))))))))))
(assert
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29118 (* ?x29117 l_0_9_67)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29115 (* ?x29114 l_0_9_66)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29112 (* ?x29111 l_0_9_65)))
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29109 (* ?x29028 l_0_9_44)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29107 (* ?x29025 l_0_9_43)))
 (let ((?x29104 (* 2.0 l_0_9_31)))
 (let ((?x29105 (* ?x29104 l_0_9_6)))
 (let ((?x29101 (* 2.0 l_0_9_30)))
 (let ((?x29102 (* ?x29101 l_0_9_5)))
 (let ((?x29022 (* 2.0 l_0_9_3)))
 (let ((?x29099 (* ?x29022 l_0_9_8)))
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x28770 (* ?x28769 l_0_9_319)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x28767 (* ?x28766 l_0_9_318)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x28764 (* ?x28763 l_0_9_317)))
 (let ((?x29093 (* 2.0 l_0_9_29)))
 (let ((?x29094 (* ?x29093 l_0_9_4)))
 (let ((?x29013 (* 2.0 l_0_9_2)))
 (let ((?x29082 (* ?x29013 l_0_9_7)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29080 (* ?x29010 l_0_9_188)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29078 (* ?x29007 l_0_9_187)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29069 (* ?x28999 l_0_9_152)))
 (let ((?x29083 (- (+ (+ (- (* (* (- 2.0) l_0_9_146) l_0_9_151) ?x29069) ?x29078) ?x29080) ?x29082)))
 (let ((?x29089 (- (- ?x29083 (* (* 2.0 l_0_9_220) l_0_9_223)) (* (* 2.0 l_0_9_221) l_0_9_224))))
 (let ((?x29097 (- (- (+ (- ?x29089 (* (* 2.0 l_0_9_222) l_0_9_225)) ?x29094) ?x28764) ?x28767)))
 (let ((?x29113 (- (+ (+ (+ (+ (- (- ?x29097 ?x28770) ?x29099) ?x29102) ?x29105) ?x29107) ?x29109) ?x29112)))
 (= (- (- ?x29113 ?x29115) ?x29118) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29241 (* ?x29028 l_0_9_48)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29239 (* ?x29025 l_0_9_47)))
 (let ((?x29236 (* 2.0 l_0_9_258)))
 (let ((?x29237 (* ?x29236 l_0_9_283)))
 (let ((?x29233 (* 2.0 l_0_9_257)))
 (let ((?x29234 (* ?x29233 l_0_9_282)))
 (let ((?x29230 (* 2.0 l_0_9_256)))
 (let ((?x29231 (* ?x29230 l_0_9_281)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29222 (* ?x29010 l_0_9_192)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29220 (* ?x29007 l_0_9_191)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29218 (* ?x28999 l_0_9_156)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x29216 (* ?x29215 l_0_9_155)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x29213 (* ?x29212 l_0_9_3)))
 (let ((?x29221 (+ (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x29213) ?x29216) ?x29218) ?x29220)))
 (let ((?x29227 (- (- (+ ?x29221 ?x29222) (* (* 2.0 l_0_9_220) l_0_9_227)) (* (* 2.0 l_0_9_221) l_0_9_228))))
 (let ((?x29238 (+ (+ (+ (- ?x29227 (* (* 2.0 l_0_9_222) l_0_9_229)) ?x29231) ?x29234) ?x29237)))
 (= (+ (+ ?x29238 ?x29239) ?x29241) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29344 (* ?x29028 l_0_9_53)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29342 (* ?x29025 l_0_9_52)))
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x28770 (* ?x28769 l_0_9_319)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x28767 (* ?x28766 l_0_9_318)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x28764 (* ?x28763 l_0_9_317)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29331 (* ?x29330 l_0_9_211)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29328 (* ?x29327 l_0_9_210)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29325 (* ?x29324 l_0_9_209)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29322 (* ?x29010 l_0_9_197)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29320 (* ?x29007 l_0_9_196)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x29318 (* ?x29317 l_0_9_3)))
 (let ((?x29314 (* 2.0 l_0_9_16)))
 (let ((?x29315 (* ?x29314 l_0_9_2)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29312 (* ?x29311 l_0_9_175)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29309 (* ?x29308 l_0_9_174)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x29296 (* ?x29294 l_0_9_173)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29290 (* ?x28999 l_0_9_161)))
 (let ((?x29313 (+ (+ (+ (- (* (* (- 2.0) l_0_9_146) l_0_9_160) ?x29290) ?x29296) ?x29309) ?x29312)))
 (let ((?x29332 (- (- (- (+ (+ (- (- ?x29313 ?x29315) ?x29318) ?x29320) ?x29322) ?x29325) ?x29328) ?x29331)))
 (let ((?x29336 (- (- ?x29332 (* (* 2.0 l_0_9_220) l_0_9_232)) (* (* 2.0 l_0_9_221) l_0_9_233))))
 (let ((?x29341 (+ (+ (+ (- ?x29336 (* (* 2.0 l_0_9_222) l_0_9_234)) ?x28764) ?x28767) ?x28770)))
 (= (+ (+ ?x29341 ?x29342) ?x29344) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29453 (* ?x29028 l_0_9_59)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29451 (* ?x29025 l_0_9_58)))
 (let ((?x29236 (* 2.0 l_0_9_258)))
 (let ((?x29237 (* ?x29236 l_0_9_283)))
 (let ((?x29233 (* 2.0 l_0_9_257)))
 (let ((?x29234 (* ?x29233 l_0_9_282)))
 (let ((?x29230 (* 2.0 l_0_9_256)))
 (let ((?x29231 (* ?x29230 l_0_9_281)))
 (let ((?x29445 (* 2.0 l_0_9_23)))
 (let ((?x29446 (* ?x29445 l_0_9_3)))
 (let ((?x29013 (* 2.0 l_0_9_2)))
 (let ((?x29437 (* ?x29013 l_0_9_22)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29435 (* ?x29010 l_0_9_203)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29433 (* ?x29007 l_0_9_202)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29431 (* ?x28999 l_0_9_167)))
 (let ((?x29005 (* ?x28999 l_0_9_149)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x29428 (* ?x29215 l_0_9_166)))
 (let ((?x29426 (* ?x29215 l_0_9_148)))
 (let ((?x29425 (+ (* (* 1.0 l_0_9_110) l_0_9_112) (* (* 1.0 l_0_9_111) l_0_9_113))))
 (let ((?x29438 (- (+ (+ (- (- (- (- ?x29425 ?x29426) ?x29428) ?x29005) ?x29431) ?x29433) ?x29435) ?x29437)))
 (let ((?x29442 (- (- ?x29438 (* (* 2.0 l_0_9_220) l_0_9_238)) (* (* 2.0 l_0_9_221) l_0_9_239))))
 (let ((?x29449 (- (- (- (- ?x29442 (* (* 2.0 l_0_9_222) l_0_9_240)) ?x29446) ?x29231) ?x29234)))
 (let ((?x29457 (- (+ (+ (- ?x29449 ?x29237) ?x29451) ?x29453) (* (* 1.0 l_0_9_74) l_0_9_76))))
 (= (- ?x29457 (* (* 1.0 l_0_9_75) l_0_9_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29569 (* ?x29028 l_0_9_66)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29567 (* ?x29025 l_0_9_65)))
 (let ((?x29022 (* 2.0 l_0_9_3)))
 (let ((?x29565 (* ?x29022 l_0_9_30)))
 (let ((?x29013 (* 2.0 l_0_9_2)))
 (let ((?x29557 (* ?x29013 l_0_9_29)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29555 (* ?x29010 l_0_9_210)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29553 (* ?x29007 l_0_9_209)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29551 (* ?x28999 l_0_9_174)))
 (let ((?x29558 (- (+ (+ (- (* (* (- 2.0) l_0_9_146) l_0_9_173) ?x29551) ?x29553) ?x29555) ?x29557)))
 (let ((?x29562 (- (- ?x29558 (* (* 2.0 l_0_9_220) l_0_9_245)) (* (* 2.0 l_0_9_221) l_0_9_246))))
 (let ((?x29570 (+ (+ (- (- ?x29562 (* (* 2.0 l_0_9_222) l_0_9_247)) ?x29565) ?x29567) ?x29569)))
 (= ?x29570 0.0)))))))))))))))))))
(assert
 (let ((?x29646 (* l_0_9_6 l_0_9_6)))
 (let ((?x29644 (* l_0_9_5 l_0_9_5)))
 (let ((?x29642 (* l_0_9_42 l_0_9_42)))
 (let ((?x29640 (* l_0_9_41 l_0_9_41)))
 (let ((?x29638 (* l_0_9_40 l_0_9_40)))
 (let ((?x29636 (* l_0_9_4 l_0_9_4)))
 (let ((?x29634 (* l_0_9_186 l_0_9_186)))
 (let ((?x29632 (* l_0_9_185 l_0_9_185)))
 (let ((?x29630 (* l_0_9_184 l_0_9_184)))
 (let ((?x29628 (* l_0_9_150 l_0_9_150)))
 (let ((?x29629 (- (- (* (- l_0_9_148) l_0_9_148) (* l_0_9_149 l_0_9_149)) ?x29628)))
 (let ((?x29643 (+ (+ (+ (- (+ (+ (+ ?x29629 ?x29630) ?x29632) ?x29634) ?x29636) ?x29638) ?x29640) ?x29642)))
 (= (- (- ?x29643 ?x29644) ?x29646) 0.0))))))))))))))
(assert
 (let ((?x29702 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x29699 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29696 (* ?x29117 l_0_9_45)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29694 (* ?x29114 l_0_9_44)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29692 (* ?x29111 l_0_9_43)))
 (let ((?x29690 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29687 (* ?x29330 l_0_9_189)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29685 (* ?x29327 l_0_9_188)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29683 (* ?x29324 l_0_9_187)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29681 (* ?x29311 l_0_9_153)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29679 (* ?x29308 l_0_9_152)))
 (let ((?x29686 (+ (+ (- (- (* (* (- 2.0) l_0_9_148) l_0_9_151) ?x29679) ?x29681) ?x29683) ?x29685)))
 (let ((?x29703 (- (- (+ (+ (+ (- (+ ?x29686 ?x29687) ?x29690) ?x29692) ?x29694) ?x29696) ?x29699) ?x29702)))
 (= ?x29703 0.0)))))))))))))))))))))))
(assert
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29782 (* ?x29117 l_0_9_49)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29780 (* ?x29114 l_0_9_48)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29778 (* ?x29111 l_0_9_47)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29776 (* ?x29330 l_0_9_193)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29774 (* ?x29327 l_0_9_192)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29772 (* ?x29324 l_0_9_191)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29770 (* ?x29311 l_0_9_157)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29768 (* ?x29308 l_0_9_156)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x29766 (* ?x29294 l_0_9_155)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x29764 (* ?x29763 l_0_9_6)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x29761 (* ?x29212 l_0_9_5)))
 (let ((?x29769 (- (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x29761) ?x29764) ?x29766) ?x29768)))
 (let ((?x29783 (+ (+ (+ (+ (+ (+ (- ?x29769 ?x29770) ?x29772) ?x29774) ?x29776) ?x29778) ?x29780) ?x29782)))
 (= ?x29783 0.0))))))))))))))))))))))))))
(assert
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29854 (* ?x29117 l_0_9_54)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29852 (* ?x29114 l_0_9_53)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29850 (* ?x29111 l_0_9_52)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29848 (* ?x29330 l_0_9_198)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29846 (* ?x29327 l_0_9_197)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29844 (* ?x29324 l_0_9_196)))
 (let ((?x29841 (* 2.0 l_0_9_18)))
 (let ((?x29842 (* ?x29841 l_0_9_6)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x29839 (* ?x29317 l_0_9_5)))
 (let ((?x29314 (* 2.0 l_0_9_16)))
 (let ((?x29828 (* ?x29314 l_0_9_4)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29824 (* ?x29311 l_0_9_162)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29820 (* ?x29308 l_0_9_161)))
 (let ((?x29840 (- (- (- (- (* (* (- 2.0) l_0_9_148) l_0_9_160) ?x29820) ?x29824) ?x29828) ?x29839)))
 (let ((?x29855 (+ (+ (+ (+ (+ (+ (- ?x29840 ?x29842) ?x29844) ?x29846) ?x29848) ?x29850) ?x29852) ?x29854)))
 (= ?x29855 0.0))))))))))))))))))))))))))
(assert
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29939 (* ?x29117 l_0_9_60)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29937 (* ?x29114 l_0_9_59)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29935 (* ?x29111 l_0_9_58)))
 (let ((?x29932 (* 2.0 l_0_9_24)))
 (let ((?x29933 (* ?x29932 l_0_9_6)))
 (let ((?x29445 (* 2.0 l_0_9_23)))
 (let ((?x29930 (* ?x29445 l_0_9_5)))
 (let ((?x29927 (* 2.0 l_0_9_22)))
 (let ((?x29928 (* ?x29927 l_0_9_4)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29925 (* ?x29330 l_0_9_204)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29923 (* ?x29327 l_0_9_203)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29921 (* ?x29324 l_0_9_202)))
 (let ((?x29628 (* l_0_9_150 l_0_9_150)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29918 (* ?x29311 l_0_9_168)))
 (let ((?x29619 (* l_0_9_149 l_0_9_149)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29915 (* ?x29308 l_0_9_167)))
 (let ((?x29650 (* l_0_9_148 l_0_9_148)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x29912 (* ?x29294 l_0_9_166)))
 (let ((?x29898 (+ (* (/ 1.0 2.0) (* l_0_9_112 l_0_9_112)) (* (/ 1.0 2.0) (* l_0_9_113 l_0_9_113)))))
 (let ((?x29916 (- (- (- (+ ?x29898 (* (/ 1.0 2.0) (* l_0_9_114 l_0_9_114))) ?x29912) ?x29650) ?x29915)))
 (let ((?x29929 (- (+ (+ (+ (- (- (- ?x29916 ?x29619) ?x29918) ?x29628) ?x29921) ?x29923) ?x29925) ?x29928)))
 (let ((?x29943 (- (+ (+ (+ (- (- ?x29929 ?x29930) ?x29933) ?x29935) ?x29937) ?x29939) (* (* (/ 1.0 2.0) l_0_9_76) l_0_9_76))))
 (let ((?x29949 (- (- ?x29943 (* (* (/ 1.0 2.0) l_0_9_77) l_0_9_77)) (* (* (/ 1.0 2.0) l_0_9_78) l_0_9_78))))
 (= ?x29949 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29118 (* ?x29117 l_0_9_67)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29115 (* ?x29114 l_0_9_66)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29112 (* ?x29111 l_0_9_65)))
 (let ((?x29104 (* 2.0 l_0_9_31)))
 (let ((?x29105 (* ?x29104 l_0_9_6)))
 (let ((?x29101 (* 2.0 l_0_9_30)))
 (let ((?x29102 (* ?x29101 l_0_9_5)))
 (let ((?x29093 (* 2.0 l_0_9_29)))
 (let ((?x29094 (* ?x29093 l_0_9_4)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29331 (* ?x29330 l_0_9_211)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29328 (* ?x29327 l_0_9_210)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29325 (* ?x29324 l_0_9_209)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29312 (* ?x29311 l_0_9_175)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29309 (* ?x29308 l_0_9_174)))
 (let ((?x30041 (+ (+ (- (- (* (* (- 2.0) l_0_9_148) l_0_9_173) ?x29309) ?x29312) ?x29325) ?x29328)))
 (let ((?x30048 (+ (+ (+ (- (- (- (+ ?x30041 ?x29331) ?x29094) ?x29102) ?x29105) ?x29112) ?x29115) ?x29118)))
 (= ?x30048 0.0))))))))))))))))))))))))))
(assert
 (let ((?x30101 (* l_0_9_9 l_0_9_9)))
 (let ((?x30099 (* l_0_9_8 l_0_9_8)))
 (let ((?x30097 (* l_0_9_7 l_0_9_7)))
 (let ((?x30095 (* l_0_9_46 l_0_9_46)))
 (let ((?x30093 (* l_0_9_45 l_0_9_45)))
 (let ((?x30091 (* l_0_9_44 l_0_9_44)))
 (let ((?x30089 (* l_0_9_43 l_0_9_43)))
 (let ((?x30087 (* l_0_9_190 l_0_9_190)))
 (let ((?x30085 (* l_0_9_189 l_0_9_189)))
 (let ((?x30083 (* l_0_9_188 l_0_9_188)))
 (let ((?x30081 (* l_0_9_187 l_0_9_187)))
 (let ((?x30079 (* l_0_9_154 l_0_9_154)))
 (let ((?x30077 (* l_0_9_153 l_0_9_153)))
 (let ((?x30075 (* l_0_9_152 l_0_9_152)))
 (let ((?x30078 (- (- (- (* (- l_0_9_10) l_0_9_10) (* l_0_9_151 l_0_9_151)) ?x30075) ?x30077)))
 (let ((?x30092 (+ (+ (+ (+ (+ (+ (- ?x30078 ?x30079) ?x30081) ?x30083) ?x30085) ?x30087) ?x30089) ?x30091)))
 (= (- (- (- (+ (+ ?x30092 ?x30093) ?x30095) ?x30097) ?x30099) ?x30101) 0.0))))))))))))))))))
(assert
 (let ((?x30181 (* 2.0 l_0_9_46)))
 (let ((?x30182 (* ?x30181 l_0_9_50)))
 (let ((?x30178 (* 2.0 l_0_9_45)))
 (let ((?x30179 (* ?x30178 l_0_9_49)))
 (let ((?x30175 (* 2.0 l_0_9_44)))
 (let ((?x30176 (* ?x30175 l_0_9_48)))
 (let ((?x30172 (* 2.0 l_0_9_43)))
 (let ((?x30173 (* ?x30172 l_0_9_47)))
 (let ((?x30169 (* 2.0 l_0_9_190)))
 (let ((?x30170 (* ?x30169 l_0_9_194)))
 (let ((?x30166 (* 2.0 l_0_9_189)))
 (let ((?x30167 (* ?x30166 l_0_9_193)))
 (let ((?x30163 (* 2.0 l_0_9_188)))
 (let ((?x30164 (* ?x30163 l_0_9_192)))
 (let ((?x30160 (* 2.0 l_0_9_187)))
 (let ((?x30161 (* ?x30160 l_0_9_191)))
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30158 (* ?x30157 l_0_9_158)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30155 (* ?x30154 l_0_9_157)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30152 (* ?x30151 l_0_9_156)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30149 (* ?x30148 l_0_9_155)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x30146 (* ?x29763 l_0_9_9)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x30144 (* ?x29212 l_0_9_8)))
 (let ((?x30141 (* 2.0 l_0_9_11)))
 (let ((?x30142 (* ?x30141 l_0_9_7)))
 (let ((?x30150 (- (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x30142) ?x30144) ?x30146) ?x30149)))
 (let ((?x30171 (+ (+ (+ (+ (- (- (- ?x30150 ?x30152) ?x30155) ?x30158) ?x30161) ?x30164) ?x30167) ?x30170)))
 (= (+ (+ (+ (+ ?x30171 ?x30173) ?x30176) ?x30179) ?x30182) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30181 (* 2.0 l_0_9_46)))
 (let ((?x30277 (* ?x30181 l_0_9_55)))
 (let ((?x30178 (* 2.0 l_0_9_45)))
 (let ((?x30275 (* ?x30178 l_0_9_54)))
 (let ((?x30175 (* 2.0 l_0_9_44)))
 (let ((?x30273 (* ?x30175 l_0_9_53)))
 (let ((?x30172 (* 2.0 l_0_9_43)))
 (let ((?x30271 (* ?x30172 l_0_9_52)))
 (let ((?x30169 (* 2.0 l_0_9_190)))
 (let ((?x30269 (* ?x30169 l_0_9_199)))
 (let ((?x30166 (* 2.0 l_0_9_189)))
 (let ((?x30267 (* ?x30166 l_0_9_198)))
 (let ((?x30163 (* 2.0 l_0_9_188)))
 (let ((?x30265 (* ?x30163 l_0_9_197)))
 (let ((?x30160 (* 2.0 l_0_9_187)))
 (let ((?x30263 (* ?x30160 l_0_9_196)))
 (let ((?x29841 (* 2.0 l_0_9_18)))
 (let ((?x30261 (* ?x29841 l_0_9_9)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x30259 (* ?x29317 l_0_9_8)))
 (let ((?x29314 (* 2.0 l_0_9_16)))
 (let ((?x30257 (* ?x29314 l_0_9_7)))
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30244 (* ?x30157 l_0_9_163)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30240 (* ?x30154 l_0_9_162)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30236 (* ?x30151 l_0_9_161)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30232 (* ?x30148 l_0_9_160)))
 (let ((?x30245 (- (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_19) ?x30232) ?x30236) ?x30240) ?x30244)))
 (let ((?x30270 (+ (+ (+ (+ (- (- (- ?x30245 ?x30257) ?x30259) ?x30261) ?x30263) ?x30265) ?x30267) ?x30269)))
 (= (+ (+ (+ (+ ?x30270 ?x30271) ?x30273) ?x30275) ?x30277) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30181 (* 2.0 l_0_9_46)))
 (let ((?x30385 (* ?x30181 l_0_9_61)))
 (let ((?x30178 (* 2.0 l_0_9_45)))
 (let ((?x30383 (* ?x30178 l_0_9_60)))
 (let ((?x30175 (* 2.0 l_0_9_44)))
 (let ((?x30381 (* ?x30175 l_0_9_59)))
 (let ((?x30172 (* 2.0 l_0_9_43)))
 (let ((?x30379 (* ?x30172 l_0_9_58)))
 (let ((?x29932 (* 2.0 l_0_9_24)))
 (let ((?x30377 (* ?x29932 l_0_9_9)))
 (let ((?x29445 (* 2.0 l_0_9_23)))
 (let ((?x30375 (* ?x29445 l_0_9_8)))
 (let ((?x29927 (* 2.0 l_0_9_22)))
 (let ((?x30373 (* ?x29927 l_0_9_7)))
 (let ((?x30169 (* 2.0 l_0_9_190)))
 (let ((?x30371 (* ?x30169 l_0_9_205)))
 (let ((?x30166 (* 2.0 l_0_9_189)))
 (let ((?x30369 (* ?x30166 l_0_9_204)))
 (let ((?x30163 (* 2.0 l_0_9_188)))
 (let ((?x30367 (* ?x30163 l_0_9_203)))
 (let ((?x30160 (* 2.0 l_0_9_187)))
 (let ((?x30365 (* ?x30160 l_0_9_202)))
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30363 (* ?x30157 l_0_9_169)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30361 (* ?x30154 l_0_9_168)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30359 (* ?x30151 l_0_9_167)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30357 (* ?x30148 l_0_9_166)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29681 (* ?x29311 l_0_9_153)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29679 (* ?x29308 l_0_9_152)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x30353 (* ?x29294 l_0_9_151)))
 (let ((?x30331 (+ (* (* (- 2.0) l_0_9_10) l_0_9_25) (* (* 1.0 l_0_9_112) l_0_9_115))))
 (let ((?x30352 (+ (+ ?x30331 (* (* 1.0 l_0_9_113) l_0_9_116)) (* (* 1.0 l_0_9_114) l_0_9_117))))
 (let ((?x30364 (- (- (- (- (- (- (- ?x30352 ?x30353) ?x29679) ?x29681) ?x30357) ?x30359) ?x30361) ?x30363)))
 (let ((?x30378 (- (- (- (+ (+ (+ (+ ?x30364 ?x30365) ?x30367) ?x30369) ?x30371) ?x30373) ?x30375) ?x30377)))
 (let ((?x30389 (- (+ (+ (+ (+ ?x30378 ?x30379) ?x30381) ?x30383) ?x30385) (* (* 1.0 l_0_9_76) l_0_9_79))))
 (let ((?x30395 (- (- ?x30389 (* (* 1.0 l_0_9_77) l_0_9_80)) (* (* 1.0 l_0_9_78) l_0_9_81))))
 (= ?x30395 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30181 (* 2.0 l_0_9_46)))
 (let ((?x30525 (* ?x30181 l_0_9_68)))
 (let ((?x30178 (* 2.0 l_0_9_45)))
 (let ((?x30523 (* ?x30178 l_0_9_67)))
 (let ((?x30175 (* 2.0 l_0_9_44)))
 (let ((?x30521 (* ?x30175 l_0_9_66)))
 (let ((?x30172 (* 2.0 l_0_9_43)))
 (let ((?x30519 (* ?x30172 l_0_9_65)))
 (let ((?x29104 (* 2.0 l_0_9_31)))
 (let ((?x30517 (* ?x29104 l_0_9_9)))
 (let ((?x29101 (* 2.0 l_0_9_30)))
 (let ((?x30515 (* ?x29101 l_0_9_8)))
 (let ((?x29093 (* 2.0 l_0_9_29)))
 (let ((?x30513 (* ?x29093 l_0_9_7)))
 (let ((?x30169 (* 2.0 l_0_9_190)))
 (let ((?x30511 (* ?x30169 l_0_9_212)))
 (let ((?x30166 (* 2.0 l_0_9_189)))
 (let ((?x30509 (* ?x30166 l_0_9_211)))
 (let ((?x30163 (* 2.0 l_0_9_188)))
 (let ((?x30507 (* ?x30163 l_0_9_210)))
 (let ((?x30160 (* 2.0 l_0_9_187)))
 (let ((?x30505 (* ?x30160 l_0_9_209)))
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30503 (* ?x30157 l_0_9_176)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30501 (* ?x30154 l_0_9_175)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30499 (* ?x30151 l_0_9_174)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30497 (* ?x30148 l_0_9_173)))
 (let ((?x30504 (- (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_32) ?x30497) ?x30499) ?x30501) ?x30503)))
 (let ((?x30518 (- (- (- (+ (+ (+ (+ ?x30504 ?x30505) ?x30507) ?x30509) ?x30511) ?x30513) ?x30515) ?x30517)))
 (= (+ (+ (+ (+ ?x30518 ?x30519) ?x30521) ?x30523) ?x30525) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30634 (* l_0_9_51 l_0_9_51)))
 (let ((?x30632 (* l_0_9_50 l_0_9_50)))
 (let ((?x30630 (* l_0_9_49 l_0_9_49)))
 (let ((?x30628 (* l_0_9_48 l_0_9_48)))
 (let ((?x30626 (* l_0_9_47 l_0_9_47)))
 (let ((?x30624 (* l_0_9_195 l_0_9_195)))
 (let ((?x30622 (* l_0_9_194 l_0_9_194)))
 (let ((?x30620 (* l_0_9_193 l_0_9_193)))
 (let ((?x30618 (* l_0_9_192 l_0_9_192)))
 (let ((?x30616 (* l_0_9_191 l_0_9_191)))
 (let ((?x30614 (* l_0_9_159 l_0_9_159)))
 (let ((?x30612 (* l_0_9_158 l_0_9_158)))
 (let ((?x30610 (* l_0_9_157 l_0_9_157)))
 (let ((?x30608 (* l_0_9_156 l_0_9_156)))
 (let ((?x30606 (* l_0_9_155 l_0_9_155)))
 (let ((?x30604 (* l_0_9_15 l_0_9_15)))
 (let ((?x30602 (* l_0_9_14 l_0_9_14)))
 (let ((?x30589 (* l_0_9_13 l_0_9_13)))
 (let ((?x30603 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x30589) ?x30602)))
 (let ((?x30617 (+ (- (- (- (- (- (- ?x30603 ?x30604) ?x30606) ?x30608) ?x30610) ?x30612) ?x30614) ?x30616)))
 (let ((?x30631 (+ (+ (+ (+ (+ (+ (+ ?x30617 ?x30618) ?x30620) ?x30622) ?x30624) ?x30626) ?x30628) ?x30630)))
 (= (+ (+ ?x30631 ?x30632) ?x30634) 0.0)))))))))))))))))))))))
(assert
 (let ((?x30732 (* 2.0 l_0_9_51)))
 (let ((?x30733 (* ?x30732 l_0_9_56)))
 (let ((?x30729 (* 2.0 l_0_9_50)))
 (let ((?x30730 (* ?x30729 l_0_9_55)))
 (let ((?x30726 (* 2.0 l_0_9_49)))
 (let ((?x30727 (* ?x30726 l_0_9_54)))
 (let ((?x30723 (* 2.0 l_0_9_48)))
 (let ((?x30724 (* ?x30723 l_0_9_53)))
 (let ((?x30720 (* 2.0 l_0_9_47)))
 (let ((?x30721 (* ?x30720 l_0_9_52)))
 (let ((?x30717 (* 2.0 l_0_9_195)))
 (let ((?x30718 (* ?x30717 l_0_9_200)))
 (let ((?x30714 (* 2.0 l_0_9_194)))
 (let ((?x30715 (* ?x30714 l_0_9_199)))
 (let ((?x30711 (* 2.0 l_0_9_193)))
 (let ((?x30712 (* ?x30711 l_0_9_198)))
 (let ((?x30708 (* 2.0 l_0_9_192)))
 (let ((?x30709 (* ?x30708 l_0_9_197)))
 (let ((?x30705 (* 2.0 l_0_9_191)))
 (let ((?x30706 (* ?x30705 l_0_9_196)))
 (let ((?x30702 (* 2.0 l_0_9_159)))
 (let ((?x30703 (* ?x30702 l_0_9_164)))
 (let ((?x30699 (* 2.0 l_0_9_158)))
 (let ((?x30700 (* ?x30699 l_0_9_163)))
 (let ((?x30696 (* 2.0 l_0_9_157)))
 (let ((?x30697 (* ?x30696 l_0_9_162)))
 (let ((?x30693 (* 2.0 l_0_9_156)))
 (let ((?x30694 (* ?x30693 l_0_9_161)))
 (let ((?x30690 (* 2.0 l_0_9_155)))
 (let ((?x30691 (* ?x30690 l_0_9_160)))
 (let ((?x30687 (* 2.0 l_0_9_15)))
 (let ((?x30688 (* ?x30687 l_0_9_20)))
 (let ((?x30684 (* 2.0 l_0_9_14)))
 (let ((?x30685 (* ?x30684 l_0_9_19)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x30682 (* ?x29763 l_0_9_18)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x30680 (* ?x29212 l_0_9_17)))
 (let ((?x30689 (- (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_16) ?x30680) ?x30682) ?x30685) ?x30688)))
 (let ((?x30710 (+ (+ (- (- (- (- (- ?x30689 ?x30691) ?x30694) ?x30697) ?x30700) ?x30703) ?x30706) ?x30709)))
 (let ((?x30731 (+ (+ (+ (+ (+ (+ (+ ?x30710 ?x30712) ?x30715) ?x30718) ?x30721) ?x30724) ?x30727) ?x30730)))
 (= (+ ?x30731 ?x30733) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30732 (* 2.0 l_0_9_51)))
 (let ((?x30861 (* ?x30732 l_0_9_62)))
 (let ((?x30729 (* 2.0 l_0_9_50)))
 (let ((?x30859 (* ?x30729 l_0_9_61)))
 (let ((?x30726 (* 2.0 l_0_9_49)))
 (let ((?x30857 (* ?x30726 l_0_9_60)))
 (let ((?x30723 (* 2.0 l_0_9_48)))
 (let ((?x30855 (* ?x30723 l_0_9_59)))
 (let ((?x30720 (* 2.0 l_0_9_47)))
 (let ((?x30853 (* ?x30720 l_0_9_58)))
 (let ((?x30717 (* 2.0 l_0_9_195)))
 (let ((?x30851 (* ?x30717 l_0_9_206)))
 (let ((?x30714 (* 2.0 l_0_9_194)))
 (let ((?x30849 (* ?x30714 l_0_9_205)))
 (let ((?x30711 (* 2.0 l_0_9_193)))
 (let ((?x30847 (* ?x30711 l_0_9_204)))
 (let ((?x30708 (* 2.0 l_0_9_192)))
 (let ((?x30845 (* ?x30708 l_0_9_203)))
 (let ((?x30705 (* 2.0 l_0_9_191)))
 (let ((?x30843 (* ?x30705 l_0_9_202)))
 (let ((?x30702 (* 2.0 l_0_9_159)))
 (let ((?x30841 (* ?x30702 l_0_9_170)))
 (let ((?x30699 (* 2.0 l_0_9_158)))
 (let ((?x30839 (* ?x30699 l_0_9_169)))
 (let ((?x30696 (* 2.0 l_0_9_157)))
 (let ((?x30837 (* ?x30696 l_0_9_168)))
 (let ((?x30693 (* 2.0 l_0_9_156)))
 (let ((?x30835 (* ?x30693 l_0_9_167)))
 (let ((?x30690 (* 2.0 l_0_9_155)))
 (let ((?x30833 (* ?x30690 l_0_9_166)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29770 (* ?x29311 l_0_9_157)))
 (let ((?x30687 (* 2.0 l_0_9_15)))
 (let ((?x30830 (* ?x30687 l_0_9_26)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29768 (* ?x29308 l_0_9_156)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x29766 (* ?x29294 l_0_9_155)))
 (let ((?x30684 (* 2.0 l_0_9_14)))
 (let ((?x30826 (* ?x30684 l_0_9_25)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x30811 (* ?x29763 l_0_9_24)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x30807 (* ?x29212 l_0_9_23)))
 (let ((?x30797 (+ (* (* (- 2.0) l_0_9_11) l_0_9_22) (* (* 1.0 l_0_9_112) l_0_9_119))))
 (let ((?x30805 (+ (+ ?x30797 (* (* 1.0 l_0_9_113) l_0_9_120)) (* (* 1.0 l_0_9_114) l_0_9_121))))
 (let ((?x30832 (- (- (- (- (- (- (- ?x30805 ?x30807) ?x30811) ?x30826) ?x29766) ?x29768) ?x30830) ?x29770)))
 (let ((?x30846 (+ (+ (- (- (- (- (- ?x30832 ?x30833) ?x30835) ?x30837) ?x30839) ?x30841) ?x30843) ?x30845)))
 (let ((?x30860 (+ (+ (+ (+ (+ (+ (+ ?x30846 ?x30847) ?x30849) ?x30851) ?x30853) ?x30855) ?x30857) ?x30859)))
 (let ((?x30866 (- (- (+ ?x30860 ?x30861) (* (* 1.0 l_0_9_76) l_0_9_83)) (* (* 1.0 l_0_9_77) l_0_9_84))))
 (= (- ?x30866 (* (* 1.0 l_0_9_78) l_0_9_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30732 (* 2.0 l_0_9_51)))
 (let ((?x31022 (* ?x30732 l_0_9_69)))
 (let ((?x30729 (* 2.0 l_0_9_50)))
 (let ((?x31020 (* ?x30729 l_0_9_68)))
 (let ((?x30726 (* 2.0 l_0_9_49)))
 (let ((?x31018 (* ?x30726 l_0_9_67)))
 (let ((?x30723 (* 2.0 l_0_9_48)))
 (let ((?x31016 (* ?x30723 l_0_9_66)))
 (let ((?x30720 (* 2.0 l_0_9_47)))
 (let ((?x31014 (* ?x30720 l_0_9_65)))
 (let ((?x30717 (* 2.0 l_0_9_195)))
 (let ((?x31012 (* ?x30717 l_0_9_213)))
 (let ((?x30714 (* 2.0 l_0_9_194)))
 (let ((?x31010 (* ?x30714 l_0_9_212)))
 (let ((?x30711 (* 2.0 l_0_9_193)))
 (let ((?x31008 (* ?x30711 l_0_9_211)))
 (let ((?x30708 (* 2.0 l_0_9_192)))
 (let ((?x31006 (* ?x30708 l_0_9_210)))
 (let ((?x30705 (* 2.0 l_0_9_191)))
 (let ((?x31004 (* ?x30705 l_0_9_209)))
 (let ((?x30702 (* 2.0 l_0_9_159)))
 (let ((?x31002 (* ?x30702 l_0_9_177)))
 (let ((?x30699 (* 2.0 l_0_9_158)))
 (let ((?x31000 (* ?x30699 l_0_9_176)))
 (let ((?x30696 (* 2.0 l_0_9_157)))
 (let ((?x30998 (* ?x30696 l_0_9_175)))
 (let ((?x30693 (* 2.0 l_0_9_156)))
 (let ((?x30996 (* ?x30693 l_0_9_174)))
 (let ((?x30690 (* 2.0 l_0_9_155)))
 (let ((?x30994 (* ?x30690 l_0_9_173)))
 (let ((?x30687 (* 2.0 l_0_9_15)))
 (let ((?x30992 (* ?x30687 l_0_9_33)))
 (let ((?x30684 (* 2.0 l_0_9_14)))
 (let ((?x30990 (* ?x30684 l_0_9_32)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x30988 (* ?x29763 l_0_9_31)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x30986 (* ?x29212 l_0_9_30)))
 (let ((?x30993 (- (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_29) ?x30986) ?x30988) ?x30990) ?x30992)))
 (let ((?x31007 (+ (+ (- (- (- (- (- ?x30993 ?x30994) ?x30996) ?x30998) ?x31000) ?x31002) ?x31004) ?x31006)))
 (let ((?x31021 (+ (+ (+ (+ (+ (+ (+ ?x31007 ?x31008) ?x31010) ?x31012) ?x31014) ?x31016) ?x31018) ?x31020)))
 (= (+ ?x31021 ?x31022) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31150 (* l_0_9_57 l_0_9_57)))
 (let ((?x31148 (* l_0_9_56 l_0_9_56)))
 (let ((?x31146 (* l_0_9_55 l_0_9_55)))
 (let ((?x31144 (* l_0_9_54 l_0_9_54)))
 (let ((?x31142 (* l_0_9_53 l_0_9_53)))
 (let ((?x31140 (* l_0_9_52 l_0_9_52)))
 (let ((?x31138 (* l_0_9_21 l_0_9_21)))
 (let ((?x31136 (* l_0_9_201 l_0_9_201)))
 (let ((?x31134 (* l_0_9_200 l_0_9_200)))
 (let ((?x31132 (* l_0_9_20 l_0_9_20)))
 (let ((?x31130 (* l_0_9_199 l_0_9_199)))
 (let ((?x31128 (* l_0_9_198 l_0_9_198)))
 (let ((?x31126 (* l_0_9_197 l_0_9_197)))
 (let ((?x31124 (* l_0_9_196 l_0_9_196)))
 (let ((?x31122 (* l_0_9_19 l_0_9_19)))
 (let ((?x31120 (* l_0_9_18 l_0_9_18)))
 (let ((?x31118 (* l_0_9_17 l_0_9_17)))
 (let ((?x31116 (* l_0_9_165 l_0_9_165)))
 (let ((?x31101 (* l_0_9_164 l_0_9_164)))
 (let ((?x31098 (* l_0_9_163 l_0_9_163)))
 (let ((?x31094 (* l_0_9_162 l_0_9_162)))
 (let ((?x31090 (* l_0_9_161 l_0_9_161)))
 (let ((?x31096 (- (- (- (* (- l_0_9_16) l_0_9_16) (* l_0_9_160 l_0_9_160)) ?x31090) ?x31094)))
 (let ((?x31125 (+ (- (- (- (- (- (- ?x31096 ?x31098) ?x31101) ?x31116) ?x31118) ?x31120) ?x31122) ?x31124)))
 (let ((?x31139 (- (+ (+ (- (+ (+ (+ ?x31125 ?x31126) ?x31128) ?x31130) ?x31132) ?x31134) ?x31136) ?x31138)))
 (= (+ (+ (+ (+ (+ (+ ?x31139 ?x31140) ?x31142) ?x31144) ?x31146) ?x31148) ?x31150) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x31280 (* 2.0 l_0_9_57)))
 (let ((?x31281 (* ?x31280 l_0_9_63)))
 (let ((?x31277 (* 2.0 l_0_9_56)))
 (let ((?x31278 (* ?x31277 l_0_9_62)))
 (let ((?x31274 (* 2.0 l_0_9_55)))
 (let ((?x31275 (* ?x31274 l_0_9_61)))
 (let ((?x31271 (* 2.0 l_0_9_54)))
 (let ((?x31272 (* ?x31271 l_0_9_60)))
 (let ((?x31268 (* 2.0 l_0_9_53)))
 (let ((?x31269 (* ?x31268 l_0_9_59)))
 (let ((?x31265 (* 2.0 l_0_9_52)))
 (let ((?x31266 (* ?x31265 l_0_9_58)))
 (let ((?x31262 (* 2.0 l_0_9_21)))
 (let ((?x31263 (* ?x31262 l_0_9_27)))
 (let ((?x31259 (* 2.0 l_0_9_201)))
 (let ((?x31260 (* ?x31259 l_0_9_207)))
 (let ((?x31256 (* 2.0 l_0_9_200)))
 (let ((?x31257 (* ?x31256 l_0_9_206)))
 (let ((?x31253 (* 2.0 l_0_9_20)))
 (let ((?x31254 (* ?x31253 l_0_9_26)))
 (let ((?x31250 (* 2.0 l_0_9_199)))
 (let ((?x31251 (* ?x31250 l_0_9_205)))
 (let ((?x31247 (* 2.0 l_0_9_198)))
 (let ((?x31248 (* ?x31247 l_0_9_204)))
 (let ((?x31244 (* 2.0 l_0_9_197)))
 (let ((?x31245 (* ?x31244 l_0_9_203)))
 (let ((?x31241 (* 2.0 l_0_9_196)))
 (let ((?x31242 (* ?x31241 l_0_9_202)))
 (let ((?x31238 (* 2.0 l_0_9_19)))
 (let ((?x31239 (* ?x31238 l_0_9_25)))
 (let ((?x29841 (* 2.0 l_0_9_18)))
 (let ((?x31236 (* ?x29841 l_0_9_24)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x31234 (* ?x29317 l_0_9_23)))
 (let ((?x31231 (* 2.0 l_0_9_165)))
 (let ((?x31232 (* ?x31231 l_0_9_171)))
 (let ((?x31228 (* 2.0 l_0_9_164)))
 (let ((?x31229 (* ?x31228 l_0_9_170)))
 (let ((?x31225 (* 2.0 l_0_9_163)))
 (let ((?x31226 (* ?x31225 l_0_9_169)))
 (let ((?x31222 (* 2.0 l_0_9_162)))
 (let ((?x31223 (* ?x31222 l_0_9_168)))
 (let ((?x31219 (* 2.0 l_0_9_161)))
 (let ((?x31220 (* ?x31219 l_0_9_167)))
 (let ((?x31216 (* 2.0 l_0_9_160)))
 (let ((?x31217 (* ?x31216 l_0_9_166)))
 (let ((?x29314 (* 2.0 l_0_9_16)))
 (let ((?x31214 (* ?x29314 l_0_9_22)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29824 (* ?x29311 l_0_9_162)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29820 (* ?x29308 l_0_9_161)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x31210 (* ?x29294 l_0_9_160)))
 (let ((?x31207 (+ (* (* 1.0 l_0_9_112) l_0_9_124) (* (* 1.0 l_0_9_113) l_0_9_125))))
 (let ((?x31213 (- (- (- (+ ?x31207 (* (* 1.0 l_0_9_114) l_0_9_126)) ?x31210) ?x29820) ?x29824)))
 (let ((?x31233 (- (- (- (- (- (- (- ?x31213 ?x31214) ?x31217) ?x31220) ?x31223) ?x31226) ?x31229) ?x31232)))
 (let ((?x31252 (+ (+ (+ (+ (- (- (- ?x31233 ?x31234) ?x31236) ?x31239) ?x31242) ?x31245) ?x31248) ?x31251)))
 (let ((?x31273 (+ (+ (+ (- (+ (+ (- ?x31252 ?x31254) ?x31257) ?x31260) ?x31263) ?x31266) ?x31269) ?x31272)))
 (let ((?x31284 (- (+ (+ (+ ?x31273 ?x31275) ?x31278) ?x31281) (* (* 1.0 l_0_9_76) l_0_9_88))))
 (let ((?x31288 (- (- ?x31284 (* (* 1.0 l_0_9_77) l_0_9_89)) (* (* 1.0 l_0_9_78) l_0_9_90))))
 (= ?x31288 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31280 (* 2.0 l_0_9_57)))
 (let ((?x31475 (* ?x31280 l_0_9_70)))
 (let ((?x31277 (* 2.0 l_0_9_56)))
 (let ((?x31473 (* ?x31277 l_0_9_69)))
 (let ((?x31274 (* 2.0 l_0_9_55)))
 (let ((?x31471 (* ?x31274 l_0_9_68)))
 (let ((?x31271 (* 2.0 l_0_9_54)))
 (let ((?x31469 (* ?x31271 l_0_9_67)))
 (let ((?x31268 (* 2.0 l_0_9_53)))
 (let ((?x31467 (* ?x31268 l_0_9_66)))
 (let ((?x31265 (* 2.0 l_0_9_52)))
 (let ((?x31465 (* ?x31265 l_0_9_65)))
 (let ((?x31262 (* 2.0 l_0_9_21)))
 (let ((?x31463 (* ?x31262 l_0_9_34)))
 (let ((?x31259 (* 2.0 l_0_9_201)))
 (let ((?x31461 (* ?x31259 l_0_9_214)))
 (let ((?x31256 (* 2.0 l_0_9_200)))
 (let ((?x31459 (* ?x31256 l_0_9_213)))
 (let ((?x31253 (* 2.0 l_0_9_20)))
 (let ((?x31457 (* ?x31253 l_0_9_33)))
 (let ((?x31250 (* 2.0 l_0_9_199)))
 (let ((?x31455 (* ?x31250 l_0_9_212)))
 (let ((?x31247 (* 2.0 l_0_9_198)))
 (let ((?x31453 (* ?x31247 l_0_9_211)))
 (let ((?x31244 (* 2.0 l_0_9_197)))
 (let ((?x31451 (* ?x31244 l_0_9_210)))
 (let ((?x31241 (* 2.0 l_0_9_196)))
 (let ((?x31449 (* ?x31241 l_0_9_209)))
 (let ((?x31238 (* 2.0 l_0_9_19)))
 (let ((?x31447 (* ?x31238 l_0_9_32)))
 (let ((?x29841 (* 2.0 l_0_9_18)))
 (let ((?x31445 (* ?x29841 l_0_9_31)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x31443 (* ?x29317 l_0_9_30)))
 (let ((?x31231 (* 2.0 l_0_9_165)))
 (let ((?x31441 (* ?x31231 l_0_9_178)))
 (let ((?x31228 (* 2.0 l_0_9_164)))
 (let ((?x31439 (* ?x31228 l_0_9_177)))
 (let ((?x31225 (* 2.0 l_0_9_163)))
 (let ((?x31437 (* ?x31225 l_0_9_176)))
 (let ((?x31222 (* 2.0 l_0_9_162)))
 (let ((?x31435 (* ?x31222 l_0_9_175)))
 (let ((?x31219 (* 2.0 l_0_9_161)))
 (let ((?x31433 (* ?x31219 l_0_9_174)))
 (let ((?x31216 (* 2.0 l_0_9_160)))
 (let ((?x31431 (* ?x31216 l_0_9_173)))
 (let ((?x31438 (- (- (- (- (* (* (- 2.0) l_0_9_16) l_0_9_29) ?x31431) ?x31433) ?x31435) ?x31437)))
 (let ((?x31452 (+ (+ (- (- (- (- (- ?x31438 ?x31439) ?x31441) ?x31443) ?x31445) ?x31447) ?x31449) ?x31451)))
 (let ((?x31466 (+ (- (+ (+ (- (+ (+ ?x31452 ?x31453) ?x31455) ?x31457) ?x31459) ?x31461) ?x31463) ?x31465)))
 (= (+ (+ (+ (+ (+ ?x31466 ?x31467) ?x31469) ?x31471) ?x31473) ?x31475) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31643 (* l_0_9_64 l_0_9_64)))
 (let ((?x31641 (* l_0_9_63 l_0_9_63)))
 (let ((?x31639 (* l_0_9_62 l_0_9_62)))
 (let ((?x31637 (* l_0_9_61 l_0_9_61)))
 (let ((?x31635 (* l_0_9_60 l_0_9_60)))
 (let ((?x31633 (* l_0_9_59 l_0_9_59)))
 (let ((?x31631 (* l_0_9_58 l_0_9_58)))
 (let ((?x31629 (* l_0_9_28 l_0_9_28)))
 (let ((?x31627 (* l_0_9_27 l_0_9_27)))
 (let ((?x31625 (* l_0_9_26 l_0_9_26)))
 (let ((?x31623 (* l_0_9_25 l_0_9_25)))
 (let ((?x31621 (* l_0_9_24 l_0_9_24)))
 (let ((?x31619 (* l_0_9_23 l_0_9_23)))
 (let ((?x31617 (* l_0_9_22 l_0_9_22)))
 (let ((?x31615 (* l_0_9_208 l_0_9_208)))
 (let ((?x31613 (* l_0_9_207 l_0_9_207)))
 (let ((?x31611 (* l_0_9_206 l_0_9_206)))
 (let ((?x31609 (* l_0_9_205 l_0_9_205)))
 (let ((?x31607 (* l_0_9_204 l_0_9_204)))
 (let ((?x31605 (* l_0_9_203 l_0_9_203)))
 (let ((?x31603 (* l_0_9_202 l_0_9_202)))
 (let ((?x31601 (* l_0_9_172 l_0_9_172)))
 (let ((?x31599 (* l_0_9_171 l_0_9_171)))
 (let ((?x31597 (* l_0_9_170 l_0_9_170)))
 (let ((?x31595 (* l_0_9_169 l_0_9_169)))
 (let ((?x31593 (* l_0_9_168 l_0_9_168)))
 (let ((?x31591 (* l_0_9_167 l_0_9_167)))
 (let ((?x31589 (* l_0_9_166 l_0_9_166)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29918 (* ?x29311 l_0_9_168)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29915 (* ?x29308 l_0_9_167)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x29912 (* ?x29294 l_0_9_166)))
 (let ((?x31565 (+ (* (* 1.0 l_0_9_112) l_0_9_130) (* (* 1.0 l_0_9_113) l_0_9_131))))
 (let ((?x31588 (- (- (- (+ ?x31565 (* (* 1.0 l_0_9_114) l_0_9_132)) ?x29912) ?x29915) ?x29918)))
 (let ((?x31602 (- (- (- (- (- (- (- ?x31588 ?x31589) ?x31591) ?x31593) ?x31595) ?x31597) ?x31599) ?x31601)))
 (let ((?x31616 (+ (+ (+ (+ (+ (+ (+ ?x31602 ?x31603) ?x31605) ?x31607) ?x31609) ?x31611) ?x31613) ?x31615)))
 (let ((?x31630 (- (- (- (- (- (- (- ?x31616 ?x31617) ?x31619) ?x31621) ?x31623) ?x31625) ?x31627) ?x31629)))
 (let ((?x31644 (+ (+ (+ (+ (+ (+ (+ ?x31630 ?x31631) ?x31633) ?x31635) ?x31637) ?x31639) ?x31641) ?x31643)))
 (let ((?x31648 (- (- ?x31644 (* (* 1.0 l_0_9_76) l_0_9_94)) (* (* 1.0 l_0_9_77) l_0_9_95))))
 (= (- ?x31648 (* (* 1.0 l_0_9_78) l_0_9_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31833 (* (* 2.0 l_0_9_64) l_0_9_71)))
 (let ((?x31830 (* (* 2.0 l_0_9_63) l_0_9_70)))
 (let ((?x31827 (* (* 2.0 l_0_9_62) l_0_9_69)))
 (let ((?x31824 (* (* 2.0 l_0_9_61) l_0_9_68)))
 (let ((?x31821 (* (* 2.0 l_0_9_60) l_0_9_67)))
 (let ((?x31818 (* (* 2.0 l_0_9_59) l_0_9_66)))
 (let ((?x31815 (* (* 2.0 l_0_9_58) l_0_9_65)))
 (let ((?x31812 (* (* 2.0 l_0_9_28) l_0_9_35)))
 (let ((?x31809 (* (* 2.0 l_0_9_27) l_0_9_34)))
 (let ((?x31806 (* (* 2.0 l_0_9_26) l_0_9_33)))
 (let ((?x31803 (* (* 2.0 l_0_9_25) l_0_9_32)))
 (let ((?x29932 (* 2.0 l_0_9_24)))
 (let ((?x31800 (* ?x29932 l_0_9_31)))
 (let ((?x29445 (* 2.0 l_0_9_23)))
 (let ((?x31798 (* ?x29445 l_0_9_30)))
 (let ((?x29927 (* 2.0 l_0_9_22)))
 (let ((?x31796 (* ?x29927 l_0_9_29)))
 (let ((?x31794 (* (* 2.0 l_0_9_208) l_0_9_215)))
 (let ((?x31791 (* (* 2.0 l_0_9_207) l_0_9_214)))
 (let ((?x31788 (* (* 2.0 l_0_9_206) l_0_9_213)))
 (let ((?x31785 (* (* 2.0 l_0_9_205) l_0_9_212)))
 (let ((?x31782 (* (* 2.0 l_0_9_204) l_0_9_211)))
 (let ((?x31779 (* (* 2.0 l_0_9_203) l_0_9_210)))
 (let ((?x31776 (* (* 2.0 l_0_9_202) l_0_9_209)))
 (let ((?x31773 (* (* 2.0 l_0_9_172) l_0_9_179)))
 (let ((?x31770 (* (* 2.0 l_0_9_171) l_0_9_178)))
 (let ((?x31767 (* (* 2.0 l_0_9_170) l_0_9_177)))
 (let ((?x31764 (* (* 2.0 l_0_9_169) l_0_9_176)))
 (let ((?x31761 (* (* 2.0 l_0_9_168) l_0_9_175)))
 (let ((?x31758 (* (* 2.0 l_0_9_167) l_0_9_174)))
 (let ((?x31755 (* (* 2.0 l_0_9_166) l_0_9_173)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29312 (* ?x29311 l_0_9_175)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29309 (* ?x29308 l_0_9_174)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x29296 (* ?x29294 l_0_9_173)))
 (let ((?x31741 (- (* (* (- 1.0) l_0_9_101) l_0_9_76) (* (* 1.0 l_0_9_102) l_0_9_77))))
 (let ((?x31746 (+ (- ?x31741 (* (* 1.0 l_0_9_103) l_0_9_78)) (* (* 1.0 l_0_9_112) l_0_9_137))))
 (let ((?x31750 (+ (+ ?x31746 (* (* 1.0 l_0_9_113) l_0_9_138)) (* (* 1.0 l_0_9_114) l_0_9_139))))
 (let ((?x31765 (- (- (- (- (- (- (- ?x31750 ?x29296) ?x29309) ?x29312) ?x31755) ?x31758) ?x31761) ?x31764)))
 (let ((?x31786 (+ (+ (+ (+ (- (- (- ?x31765 ?x31767) ?x31770) ?x31773) ?x31776) ?x31779) ?x31782) ?x31785)))
 (let ((?x31804 (- (- (- (- (+ (+ (+ ?x31786 ?x31788) ?x31791) ?x31794) ?x31796) ?x31798) ?x31800) ?x31803)))
 (let ((?x31825 (+ (+ (+ (+ (- (- (- ?x31804 ?x31806) ?x31809) ?x31812) ?x31815) ?x31818) ?x31821) ?x31824)))
 (= (+ (+ (+ ?x31825 ?x31827) ?x31830) ?x31833) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32037 (* l_0_9_72 l_0_9_72)))
 (let ((?x32035 (* l_0_9_71 l_0_9_71)))
 (let ((?x32033 (* l_0_9_70 l_0_9_70)))
 (let ((?x32031 (* l_0_9_69 l_0_9_69)))
 (let ((?x32029 (* l_0_9_68 l_0_9_68)))
 (let ((?x32027 (* l_0_9_67 l_0_9_67)))
 (let ((?x32025 (* l_0_9_66 l_0_9_66)))
 (let ((?x32023 (* l_0_9_65 l_0_9_65)))
 (let ((?x32021 (* l_0_9_36 l_0_9_36)))
 (let ((?x32019 (* l_0_9_35 l_0_9_35)))
 (let ((?x32017 (* l_0_9_34 l_0_9_34)))
 (let ((?x32015 (* l_0_9_33 l_0_9_33)))
 (let ((?x32013 (* l_0_9_32 l_0_9_32)))
 (let ((?x32011 (* l_0_9_31 l_0_9_31)))
 (let ((?x32009 (* l_0_9_30 l_0_9_30)))
 (let ((?x32007 (* l_0_9_29 l_0_9_29)))
 (let ((?x32005 (* l_0_9_216 l_0_9_216)))
 (let ((?x32003 (* l_0_9_215 l_0_9_215)))
 (let ((?x32001 (* l_0_9_214 l_0_9_214)))
 (let ((?x31999 (* l_0_9_213 l_0_9_213)))
 (let ((?x31997 (* l_0_9_212 l_0_9_212)))
 (let ((?x31995 (* l_0_9_211 l_0_9_211)))
 (let ((?x31993 (* l_0_9_210 l_0_9_210)))
 (let ((?x31991 (* l_0_9_209 l_0_9_209)))
 (let ((?x31989 (* l_0_9_180 l_0_9_180)))
 (let ((?x31987 (* l_0_9_179 l_0_9_179)))
 (let ((?x31985 (* l_0_9_178 l_0_9_178)))
 (let ((?x31983 (* l_0_9_177 l_0_9_177)))
 (let ((?x31962 (* l_0_9_176 l_0_9_176)))
 (let ((?x31958 (* l_0_9_175 l_0_9_175)))
 (let ((?x31960 (- (- (* (- l_0_9_173) l_0_9_173) (* l_0_9_174 l_0_9_174)) ?x31958)))
 (let ((?x31994 (+ (+ (- (- (- (- (- ?x31960 ?x31962) ?x31983) ?x31985) ?x31987) ?x31989) ?x31991) ?x31993)))
 (let ((?x32008 (- (+ (+ (+ (+ (+ (+ ?x31994 ?x31995) ?x31997) ?x31999) ?x32001) ?x32003) ?x32005) ?x32007)))
 (let ((?x32022 (- (- (- (- (- (- (- ?x32008 ?x32009) ?x32011) ?x32013) ?x32015) ?x32017) ?x32019) ?x32021)))
 (let ((?x32036 (+ (+ (+ (+ (+ (+ (+ ?x32022 ?x32023) ?x32025) ?x32027) ?x32029) ?x32031) ?x32033) ?x32035)))
 (= (+ ?x32036 ?x32037) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x28721 (* l_0_9_37 l_0_9_37)))
 (let ((?x32113 (* l_0_9_289 l_0_9_289)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32111 (* ?x32110 l_0_9_295)))
 (let ((?x32112 (- (- (* l_0_9_1 l_0_9_1) (* (* 2.0 l_0_9_109) l_0_9_115)) ?x32111)))
 (= (+ (- (- ?x32112 ?x32113) ?x28721) (* (* 2.0 l_0_9_73) l_0_9_79)) 0.0)))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28773 (* ?x28772 l_0_9_38)))
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32155 (* ?x32154 l_0_9_296)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32152 (* ?x32151 l_0_9_295)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32149 (* ?x32110 l_0_9_290)))
 (let ((?x32145 (- (* (* 2.0 l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_110) l_0_9_115))))
 (let ((?x32156 (- (- (- (- ?x32145 (* (* 2.0 l_0_9_111) l_0_9_116)) ?x32149) ?x32152) ?x32155)))
 (let ((?x32163 (+ (- (- ?x32156 (* (* 2.0 l_0_9_325) l_0_9_331)) ?x28773) (* (* 2.0 l_0_9_74) l_0_9_79))))
 (= (+ ?x32163 (* (* 2.0 l_0_9_75) l_0_9_80)) 0.0)))))))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28850 (* ?x28772 l_0_9_40)))
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x32227 (* ?x28769 l_0_9_297)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x32225 (* ?x28766 l_0_9_296)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x32223 (* ?x28763 l_0_9_295)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32221 (* ?x32110 l_0_9_292)))
 (let ((?x32216 (- (* (* 2.0 l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_112) l_0_9_115))))
 (let ((?x32220 (- (- ?x32216 (* (* 2.0 l_0_9_113) l_0_9_116)) (* (* 2.0 l_0_9_114) l_0_9_117))))
 (let ((?x32232 (+ (- (- (- (- (- ?x32220 ?x32221) ?x32223) ?x32225) ?x32227) ?x28850) (* (* 2.0 l_0_9_76) l_0_9_79))))
 (let ((?x32238 (+ (+ ?x32232 (* (* 2.0 l_0_9_77) l_0_9_80)) (* (* 2.0 l_0_9_78) l_0_9_81))))
 (= ?x32238 0.0))))))))))))))))
(assert
 (let ((?x32313 (* l_0_9_82 l_0_9_82)))
 (let ((?x32311 (* l_0_9_81 l_0_9_81)))
 (let ((?x32309 (* l_0_9_80 l_0_9_80)))
 (let ((?x32307 (* l_0_9_79 l_0_9_79)))
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28873 (* ?x28772 l_0_9_43)))
 (let ((?x32304 (* l_0_9_298 l_0_9_298)))
 (let ((?x32302 (* l_0_9_297 l_0_9_297)))
 (let ((?x32300 (* l_0_9_296 l_0_9_296)))
 (let ((?x32298 (* l_0_9_295 l_0_9_295)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32111 (* ?x32110 l_0_9_295)))
 (let ((?x32295 (* l_0_9_118 l_0_9_118)))
 (let ((?x32293 (* l_0_9_117 l_0_9_117)))
 (let ((?x32291 (* l_0_9_116 l_0_9_116)))
 (let ((?x32292 (- (- (* (* 2.0 l_0_9_1) l_0_9_7) (* l_0_9_115 l_0_9_115)) ?x32291)))
 (let ((?x32305 (- (- (- (- (- (- (- ?x32292 ?x32293) ?x32295) ?x32111) ?x32298) ?x32300) ?x32302) ?x32304)))
 (= (+ (+ (+ (+ (- ?x32305 ?x28873) ?x32307) ?x32309) ?x32311) ?x32313) 0.0)))))))))))))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28896 (* ?x28772 l_0_9_47)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32375 (* ?x32374 l_0_9_302)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32372 (* ?x32371 l_0_9_301)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32369 (* ?x32368 l_0_9_300)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32366 (* ?x32365 l_0_9_299)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32363 (* ?x32110 l_0_9_299)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x32361 (* ?x32360 l_0_9_259)))
 (let ((?x32350 (- (* (* 2.0 l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_115) l_0_9_119))))
 (let ((?x32356 (- (- ?x32350 (* (* 2.0 l_0_9_116) l_0_9_120)) (* (* 2.0 l_0_9_117) l_0_9_121))))
 (let ((?x32367 (- (- (+ (- ?x32356 (* (* 2.0 l_0_9_118) l_0_9_122)) ?x32361) ?x32363) ?x32366)))
 (let ((?x32380 (+ (- (- (- (- ?x32367 ?x32369) ?x32372) ?x32375) ?x28896) (* (* 2.0 l_0_9_79) l_0_9_83))))
 (let ((?x32386 (+ (+ ?x32380 (* (* 2.0 l_0_9_80) l_0_9_84)) (* (* 2.0 l_0_9_81) l_0_9_85))))
 (= (+ ?x32386 (* (* 2.0 l_0_9_82) l_0_9_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28919 (* ?x28772 l_0_9_52)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32482 (* ?x32374 l_0_9_307)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32480 (* ?x32371 l_0_9_306)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32478 (* ?x32368 l_0_9_305)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32476 (* ?x32365 l_0_9_304)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32474 (* ?x32110 l_0_9_304)))
 (let ((?x32111 (* ?x32110 l_0_9_295)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28871 (* ?x28757 l_0_9_187)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28864 (* ?x28754 l_0_9_151)))
 (let ((?x32464 (- (* (* 2.0 l_0_9_1) l_0_9_16) (* (* 2.0 l_0_9_115) l_0_9_124))))
 (let ((?x32468 (- (- ?x32464 (* (* 2.0 l_0_9_116) l_0_9_125)) (* (* 2.0 l_0_9_117) l_0_9_126))))
 (let ((?x32473 (+ (- (+ (- ?x32468 (* (* 2.0 l_0_9_118) l_0_9_127)) ?x28864) ?x28871) ?x32111)))
 (let ((?x32486 (+ (- (- (- (- (- (- ?x32473 ?x32474) ?x32476) ?x32478) ?x32480) ?x32482) ?x28919) (* (* 2.0 l_0_9_79) l_0_9_88))))
 (let ((?x32490 (+ (+ ?x32486 (* (* 2.0 l_0_9_80) l_0_9_89)) (* (* 2.0 l_0_9_81) l_0_9_90))))
 (= (+ ?x32490 (* (* 2.0 l_0_9_82) l_0_9_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28946 (* ?x28772 l_0_9_58)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32586 (* ?x32374 l_0_9_313)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32584 (* ?x32371 l_0_9_312)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32582 (* ?x32368 l_0_9_311)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32580 (* ?x32365 l_0_9_310)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32578 (* ?x32110 l_0_9_310)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x32361 (* ?x32360 l_0_9_259)))
 (let ((?x32570 (- (* (* 2.0 l_0_9_1) l_0_9_22) (* (* 2.0 l_0_9_115) l_0_9_130))))
 (let ((?x32574 (- (- ?x32570 (* (* 2.0 l_0_9_116) l_0_9_131)) (* (* 2.0 l_0_9_117) l_0_9_132))))
 (let ((?x32581 (- (- (- (- ?x32574 (* (* 2.0 l_0_9_118) l_0_9_133)) ?x32361) ?x32578) ?x32580)))
 (let ((?x32590 (+ (- (- (- (- ?x32581 ?x32582) ?x32584) ?x32586) ?x28946) (* (* 2.0 l_0_9_79) l_0_9_94))))
 (let ((?x32594 (+ (+ ?x32590 (* (* 2.0 l_0_9_80) l_0_9_95)) (* (* 2.0 l_0_9_81) l_0_9_96))))
 (= (+ ?x32594 (* (* 2.0 l_0_9_82) l_0_9_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x28772 (* 2.0 l_0_9_37)))
 (let ((?x28984 (* ?x28772 l_0_9_65)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32697 (* ?x32374 l_0_9_320)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32695 (* ?x32371 l_0_9_319)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32693 (* ?x32368 l_0_9_318)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32691 (* ?x32365 l_0_9_317)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32689 (* ?x32110 l_0_9_317)))
 (let ((?x32671 (+ (* (* 2.0 l_0_9_1) l_0_9_29) (* (* 2.0 l_0_9_101) l_0_9_79))))
 (let ((?x32675 (+ (+ ?x32671 (* (* 2.0 l_0_9_102) l_0_9_80)) (* (* 2.0 l_0_9_103) l_0_9_81))))
 (let ((?x32680 (- (+ ?x32675 (* (* 2.0 l_0_9_104) l_0_9_82)) (* (* 2.0 l_0_9_115) l_0_9_137))))
 (let ((?x32684 (- (- ?x32680 (* (* 2.0 l_0_9_116) l_0_9_138)) (* (* 2.0 l_0_9_117) l_0_9_139))))
 (let ((?x32688 (- (- ?x32684 (* (* 2.0 l_0_9_118) l_0_9_140)) (* (* 2.0 l_0_9_217) l_0_9_223))))
 (= (- (- (- (- (- (- ?x32688 ?x32689) ?x32691) ?x32693) ?x32695) ?x32697) ?x28984) 0.0)))))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29029 (* ?x29028 l_0_9_41)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29026 (* ?x29025 l_0_9_40)))
 (let ((?x29022 (* 2.0 l_0_9_3)))
 (let ((?x29023 (* ?x29022 l_0_9_5)))
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32777 (* ?x32154 l_0_9_293)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32775 (* ?x32151 l_0_9_292)))
 (let ((?x29013 (* 2.0 l_0_9_2)))
 (let ((?x29014 (* ?x29013 l_0_9_4)))
 (let ((?x32781 (- (+ (- (- ?x29014 ?x32775) ?x32777) ?x29023) (* (* 2.0 l_0_9_328) l_0_9_331))))
 (let ((?x32785 (- (- ?x32781 (* (* 2.0 l_0_9_329) l_0_9_332)) (* (* 2.0 l_0_9_330) l_0_9_333))))
 (= (- (- ?x32785 ?x29026) ?x29029) 0.0))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29109 (* ?x29028 l_0_9_44)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29107 (* ?x29025 l_0_9_43)))
 (let ((?x32838 (* l_0_9_334 l_0_9_334)))
 (let ((?x32836 (* l_0_9_333 l_0_9_333)))
 (let ((?x32834 (* l_0_9_332 l_0_9_332)))
 (let ((?x32832 (* l_0_9_331 l_0_9_331)))
 (let ((?x29022 (* 2.0 l_0_9_3)))
 (let ((?x29099 (* ?x29022 l_0_9_8)))
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32155 (* ?x32154 l_0_9_296)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32152 (* ?x32151 l_0_9_295)))
 (let ((?x29013 (* 2.0 l_0_9_2)))
 (let ((?x29082 (* ?x29013 l_0_9_7)))
 (let ((?x32839 (- (- (- (- (+ (- (- ?x29082 ?x32152) ?x32155) ?x29099) ?x32832) ?x32834) ?x32836) ?x32838)))
 (= (- (- ?x32839 ?x29107) ?x29109) 0.0)))))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29241 (* ?x29028 l_0_9_48)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29239 (* ?x29025 l_0_9_47)))
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32877 (* ?x32154 l_0_9_300)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32875 (* ?x32151 l_0_9_299)))
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x32873 (* ?x32872 l_0_9_260)))
 (let ((?x32869 (* 2.0 l_0_9_254)))
 (let ((?x32870 (* ?x32869 l_0_9_259)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x29213 (* ?x29212 l_0_9_3)))
 (let ((?x32876 (- (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_2) ?x29213) ?x32870) ?x32873) ?x32875)))
 (let ((?x32884 (- (- (- ?x32876 ?x32877) (* (* 2.0 l_0_9_331) l_0_9_335)) (* (* 2.0 l_0_9_332) l_0_9_336))))
 (let ((?x32890 (- (- ?x32884 (* (* 2.0 l_0_9_333) l_0_9_337)) (* (* 2.0 l_0_9_334) l_0_9_338))))
 (= (- (- ?x32890 ?x29239) ?x29241) 0.0)))))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29344 (* ?x29028 l_0_9_53)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29342 (* ?x29025 l_0_9_52)))
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32954 (* ?x32154 l_0_9_305)))
 (let ((?x32155 (* ?x32154 l_0_9_296)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32951 (* ?x32151 l_0_9_304)))
 (let ((?x32152 (* ?x32151 l_0_9_295)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29080 (* ?x29010 l_0_9_188)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29078 (* ?x29007 l_0_9_187)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x29318 (* ?x29317 l_0_9_3)))
 (let ((?x29314 (* 2.0 l_0_9_16)))
 (let ((?x29315 (* ?x29314 l_0_9_2)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29069 (* ?x28999 l_0_9_152)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x32944 (* ?x29215 l_0_9_151)))
 (let ((?x32952 (- (+ (- (- (+ (+ (+ ?x32944 ?x29069) ?x29315) ?x29318) ?x29078) ?x29080) ?x32152) ?x32951)))
 (let ((?x32959 (- (- (- (+ ?x32952 ?x32155) ?x32954) (* (* 2.0 l_0_9_331) l_0_9_340)) (* (* 2.0 l_0_9_332) l_0_9_341))))
 (let ((?x32963 (- (- ?x32959 (* (* 2.0 l_0_9_333) l_0_9_342)) (* (* 2.0 l_0_9_334) l_0_9_343))))
 (= (- (- ?x32963 ?x29342) ?x29344) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29453 (* ?x29028 l_0_9_59)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29451 (* ?x29025 l_0_9_58)))
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x33026 (* ?x32154 l_0_9_311)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x33024 (* ?x32151 l_0_9_310)))
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x32873 (* ?x32872 l_0_9_260)))
 (let ((?x32869 (* 2.0 l_0_9_254)))
 (let ((?x32870 (* ?x32869 l_0_9_259)))
 (let ((?x29445 (* 2.0 l_0_9_23)))
 (let ((?x29446 (* ?x29445 l_0_9_3)))
 (let ((?x29013 (* 2.0 l_0_9_2)))
 (let ((?x29437 (* ?x29013 l_0_9_22)))
 (let ((?x33029 (- (- (- (- (- (+ ?x29437 ?x29446) ?x32870) ?x32873) ?x33024) ?x33026) (* (* 2.0 l_0_9_331) l_0_9_346))))
 (let ((?x33033 (- (- ?x33029 (* (* 2.0 l_0_9_332) l_0_9_347)) (* (* 2.0 l_0_9_333) l_0_9_348))))
 (= (- (- (- ?x33033 (* (* 2.0 l_0_9_334) l_0_9_349)) ?x29451) ?x29453) 0.0))))))))))))))))))))
(assert
 (let ((?x29028 (* 2.0 l_0_9_39)))
 (let ((?x29569 (* ?x29028 l_0_9_66)))
 (let ((?x29025 (* 2.0 l_0_9_38)))
 (let ((?x29567 (* ?x29025 l_0_9_65)))
 (let ((?x29022 (* 2.0 l_0_9_3)))
 (let ((?x29565 (* ?x29022 l_0_9_30)))
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x33097 (* ?x32154 l_0_9_318)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x33095 (* ?x32151 l_0_9_317)))
 (let ((?x29013 (* 2.0 l_0_9_2)))
 (let ((?x29557 (* ?x29013 l_0_9_29)))
 (let ((?x33094 (- (- ?x29557 (* (* 2.0 l_0_9_218) l_0_9_223)) (* (* 2.0 l_0_9_219) l_0_9_224))))
 (let ((?x33101 (- (+ (- (- ?x33094 ?x33095) ?x33097) ?x29565) (* (* 2.0 l_0_9_331) l_0_9_353))))
 (let ((?x33105 (- (- ?x33101 (* (* 2.0 l_0_9_332) l_0_9_354)) (* (* 2.0 l_0_9_333) l_0_9_355))))
 (= (- (- (- ?x33105 (* (* 2.0 l_0_9_334) l_0_9_356)) ?x29567) ?x29569) 0.0)))))))))))))))))
(assert
 (let ((?x29646 (* l_0_9_6 l_0_9_6)))
 (let ((?x29644 (* l_0_9_5 l_0_9_5)))
 (let ((?x29642 (* l_0_9_42 l_0_9_42)))
 (let ((?x29640 (* l_0_9_41 l_0_9_41)))
 (let ((?x29638 (* l_0_9_40 l_0_9_40)))
 (let ((?x29636 (* l_0_9_4 l_0_9_4)))
 (let ((?x33173 (* l_0_9_294 l_0_9_294)))
 (let ((?x33174 (- (- (* (- l_0_9_292) l_0_9_292) (* l_0_9_293 l_0_9_293)) ?x33173)))
 (= (+ (+ (- (- (- (+ ?x33174 ?x29636) ?x29638) ?x29640) ?x29642) ?x29644) ?x29646) 0.0))))))))))
(assert
 (let ((?x29702 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x29699 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29696 (* ?x29117 l_0_9_45)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29694 (* ?x29114 l_0_9_44)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29692 (* ?x29111 l_0_9_43)))
 (let ((?x29690 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x32227 (* ?x28769 l_0_9_297)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x32225 (* ?x28766 l_0_9_296)))
 (let ((?x33205 (- (+ (- (- (* (* (- 2.0) l_0_9_292) l_0_9_295) ?x32225) ?x32227) ?x29690) ?x29692)))
 (= (+ (+ (- (- ?x33205 ?x29694) ?x29696) ?x29699) ?x29702) 0.0))))))))))))))))
(assert
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29782 (* ?x29117 l_0_9_49)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29780 (* ?x29114 l_0_9_48)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29778 (* ?x29111 l_0_9_47)))
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x33240 (* ?x28769 l_0_9_301)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x33238 (* ?x28766 l_0_9_300)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x33236 (* ?x28763 l_0_9_299)))
 (let ((?x29236 (* 2.0 l_0_9_258)))
 (let ((?x33234 (* ?x29236 l_0_9_261)))
 (let ((?x29233 (* 2.0 l_0_9_257)))
 (let ((?x33232 (* ?x29233 l_0_9_260)))
 (let ((?x29230 (* 2.0 l_0_9_256)))
 (let ((?x33230 (* ?x29230 l_0_9_259)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x29764 (* ?x29763 l_0_9_6)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x29761 (* ?x29212 l_0_9_5)))
 (let ((?x33233 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x29761) ?x29764) ?x33230) ?x33232)))
 (let ((?x33244 (- (- (- (- (- (- (+ ?x33233 ?x33234) ?x33236) ?x33238) ?x33240) ?x29778) ?x29780) ?x29782)))
 (= ?x33244 0.0))))))))))))))))))))))))))
(assert
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29854 (* ?x29117 l_0_9_54)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29852 (* ?x29114 l_0_9_53)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29850 (* ?x29111 l_0_9_52)))
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x33299 (* ?x28769 l_0_9_306)))
 (let ((?x32227 (* ?x28769 l_0_9_297)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x33296 (* ?x28766 l_0_9_305)))
 (let ((?x32225 (* ?x28766 l_0_9_296)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x33293 (* ?x28763 l_0_9_304)))
 (let ((?x32223 (* ?x28763 l_0_9_295)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29687 (* ?x29330 l_0_9_189)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29685 (* ?x29327 l_0_9_188)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29683 (* ?x29324 l_0_9_187)))
 (let ((?x29841 (* 2.0 l_0_9_18)))
 (let ((?x29842 (* ?x29841 l_0_9_6)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x29839 (* ?x29317 l_0_9_5)))
 (let ((?x29314 (* 2.0 l_0_9_16)))
 (let ((?x29828 (* ?x29314 l_0_9_4)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29681 (* ?x29311 l_0_9_153)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29679 (* ?x29308 l_0_9_152)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x30353 (* ?x29294 l_0_9_151)))
 (let ((?x33290 (- (- (+ (+ (+ (+ (+ ?x30353 ?x29679) ?x29681) ?x29828) ?x29839) ?x29842) ?x29683) ?x29685)))
 (let ((?x33300 (- (+ (- (+ (- (+ (- ?x33290 ?x29687) ?x32223) ?x33293) ?x32225) ?x33296) ?x32227) ?x33299)))
 (= (- (- (- ?x33300 ?x29850) ?x29852) ?x29854) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29117 (* 2.0 l_0_9_42)))
 (let ((?x29939 (* ?x29117 l_0_9_60)))
 (let ((?x29114 (* 2.0 l_0_9_41)))
 (let ((?x29937 (* ?x29114 l_0_9_59)))
 (let ((?x29111 (* 2.0 l_0_9_40)))
 (let ((?x29935 (* ?x29111 l_0_9_58)))
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x33358 (* ?x28769 l_0_9_312)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x33356 (* ?x28766 l_0_9_311)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x33354 (* ?x28763 l_0_9_310)))
 (let ((?x29236 (* 2.0 l_0_9_258)))
 (let ((?x33234 (* ?x29236 l_0_9_261)))
 (let ((?x29233 (* 2.0 l_0_9_257)))
 (let ((?x33232 (* ?x29233 l_0_9_260)))
 (let ((?x29230 (* 2.0 l_0_9_256)))
 (let ((?x33230 (* ?x29230 l_0_9_259)))
 (let ((?x29932 (* 2.0 l_0_9_24)))
 (let ((?x29933 (* ?x29932 l_0_9_6)))
 (let ((?x29445 (* 2.0 l_0_9_23)))
 (let ((?x29930 (* ?x29445 l_0_9_5)))
 (let ((?x29927 (* 2.0 l_0_9_22)))
 (let ((?x29928 (* ?x29927 l_0_9_4)))
 (let ((?x33357 (- (- (- (- (- (+ (+ ?x29928 ?x29930) ?x29933) ?x33230) ?x33232) ?x33234) ?x33354) ?x33356)))
 (= (- (- (- (- ?x33357 ?x33358) ?x29935) ?x29937) ?x29939) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x30101 (* l_0_9_9 l_0_9_9)))
 (let ((?x30099 (* l_0_9_8 l_0_9_8)))
 (let ((?x30097 (* l_0_9_7 l_0_9_7)))
 (let ((?x30095 (* l_0_9_46 l_0_9_46)))
 (let ((?x30093 (* l_0_9_45 l_0_9_45)))
 (let ((?x30091 (* l_0_9_44 l_0_9_44)))
 (let ((?x30089 (* l_0_9_43 l_0_9_43)))
 (let ((?x32304 (* l_0_9_298 l_0_9_298)))
 (let ((?x32302 (* l_0_9_297 l_0_9_297)))
 (let ((?x32300 (* l_0_9_296 l_0_9_296)))
 (let ((?x33407 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_295 l_0_9_295)) ?x32300) ?x32302)))
 (let ((?x33414 (+ (+ (- (- (- (- (- ?x33407 ?x32304) ?x30089) ?x30091) ?x30093) ?x30095) ?x30097) ?x30099)))
 (= (+ ?x33414 ?x30101) 0.0))))))))))))))
(assert
 (let ((?x30181 (* 2.0 l_0_9_46)))
 (let ((?x30182 (* ?x30181 l_0_9_50)))
 (let ((?x30178 (* 2.0 l_0_9_45)))
 (let ((?x30179 (* ?x30178 l_0_9_49)))
 (let ((?x30175 (* 2.0 l_0_9_44)))
 (let ((?x30176 (* ?x30175 l_0_9_48)))
 (let ((?x30172 (* 2.0 l_0_9_43)))
 (let ((?x30173 (* ?x30172 l_0_9_47)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32375 (* ?x32374 l_0_9_302)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32372 (* ?x32371 l_0_9_301)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32369 (* ?x32368 l_0_9_300)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32366 (* ?x32365 l_0_9_299)))
 (let ((?x33445 (* l_0_9_262 l_0_9_262)))
 (let ((?x33443 (* l_0_9_261 l_0_9_261)))
 (let ((?x33441 (* l_0_9_260 l_0_9_260)))
 (let ((?x33439 (* l_0_9_259 l_0_9_259)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x30146 (* ?x29763 l_0_9_9)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x30144 (* ?x29212 l_0_9_8)))
 (let ((?x30141 (* 2.0 l_0_9_11)))
 (let ((?x30142 (* ?x30141 l_0_9_7)))
 (let ((?x33440 (+ (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_14) ?x30142) ?x30144) ?x30146) ?x33439)))
 (let ((?x33450 (- (- (- (- (+ (+ (+ ?x33440 ?x33441) ?x33443) ?x33445) ?x32366) ?x32369) ?x32372) ?x32375)))
 (= (- (- (- (- ?x33450 ?x30173) ?x30176) ?x30179) ?x30182) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x30181 (* 2.0 l_0_9_46)))
 (let ((?x30277 (* ?x30181 l_0_9_55)))
 (let ((?x30178 (* 2.0 l_0_9_45)))
 (let ((?x30275 (* ?x30178 l_0_9_54)))
 (let ((?x30175 (* 2.0 l_0_9_44)))
 (let ((?x30273 (* ?x30175 l_0_9_53)))
 (let ((?x30172 (* 2.0 l_0_9_43)))
 (let ((?x30271 (* ?x30172 l_0_9_52)))
 (let ((?x32304 (* l_0_9_298 l_0_9_298)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32482 (* ?x32374 l_0_9_307)))
 (let ((?x32302 (* l_0_9_297 l_0_9_297)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32480 (* ?x32371 l_0_9_306)))
 (let ((?x32300 (* l_0_9_296 l_0_9_296)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32478 (* ?x32368 l_0_9_305)))
 (let ((?x32298 (* l_0_9_295 l_0_9_295)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32476 (* ?x32365 l_0_9_304)))
 (let ((?x30087 (* l_0_9_190 l_0_9_190)))
 (let ((?x30085 (* l_0_9_189 l_0_9_189)))
 (let ((?x30083 (* l_0_9_188 l_0_9_188)))
 (let ((?x30081 (* l_0_9_187 l_0_9_187)))
 (let ((?x29841 (* 2.0 l_0_9_18)))
 (let ((?x30261 (* ?x29841 l_0_9_9)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x30259 (* ?x29317 l_0_9_8)))
 (let ((?x29314 (* 2.0 l_0_9_16)))
 (let ((?x30257 (* ?x29314 l_0_9_7)))
 (let ((?x30079 (* l_0_9_154 l_0_9_154)))
 (let ((?x30077 (* l_0_9_153 l_0_9_153)))
 (let ((?x30075 (* l_0_9_152 l_0_9_152)))
 (let ((?x33484 (+ (+ (* (* 2.0 l_0_9_10) l_0_9_19) (* l_0_9_151 l_0_9_151)) ?x30075)))
 (let ((?x33491 (- (- (+ (+ (+ (+ (+ ?x33484 ?x30077) ?x30079) ?x30257) ?x30259) ?x30261) ?x30081) ?x30083)))
 (let ((?x33498 (- (+ (- (+ (- (- (- ?x33491 ?x30085) ?x30087) ?x32476) ?x32298) ?x32478) ?x32300) ?x32480)))
 (let ((?x33505 (- (- (- (- (+ (- (+ ?x33498 ?x32302) ?x32482) ?x32304) ?x30271) ?x30273) ?x30275) ?x30277)))
 (= ?x33505 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30181 (* 2.0 l_0_9_46)))
 (let ((?x30385 (* ?x30181 l_0_9_61)))
 (let ((?x30178 (* 2.0 l_0_9_45)))
 (let ((?x30383 (* ?x30178 l_0_9_60)))
 (let ((?x30175 (* 2.0 l_0_9_44)))
 (let ((?x30381 (* ?x30175 l_0_9_59)))
 (let ((?x30172 (* 2.0 l_0_9_43)))
 (let ((?x30379 (* ?x30172 l_0_9_58)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32586 (* ?x32374 l_0_9_313)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32584 (* ?x32371 l_0_9_312)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32582 (* ?x32368 l_0_9_311)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32580 (* ?x32365 l_0_9_310)))
 (let ((?x33445 (* l_0_9_262 l_0_9_262)))
 (let ((?x33443 (* l_0_9_261 l_0_9_261)))
 (let ((?x33441 (* l_0_9_260 l_0_9_260)))
 (let ((?x33439 (* l_0_9_259 l_0_9_259)))
 (let ((?x29932 (* 2.0 l_0_9_24)))
 (let ((?x30377 (* ?x29932 l_0_9_9)))
 (let ((?x29445 (* 2.0 l_0_9_23)))
 (let ((?x30375 (* ?x29445 l_0_9_8)))
 (let ((?x29927 (* 2.0 l_0_9_22)))
 (let ((?x30373 (* ?x29927 l_0_9_7)))
 (let ((?x33549 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_25) ?x30373) ?x30375) ?x30377) ?x33439)))
 (let ((?x33556 (- (- (- (- (- (- (- ?x33549 ?x33441) ?x33443) ?x33445) ?x32580) ?x32582) ?x32584) ?x32586)))
 (= (- (- (- (- ?x33556 ?x30379) ?x30381) ?x30383) ?x30385) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x30181 (* 2.0 l_0_9_46)))
 (let ((?x30525 (* ?x30181 l_0_9_68)))
 (let ((?x30178 (* 2.0 l_0_9_45)))
 (let ((?x30523 (* ?x30178 l_0_9_67)))
 (let ((?x30175 (* 2.0 l_0_9_44)))
 (let ((?x30521 (* ?x30175 l_0_9_66)))
 (let ((?x30172 (* 2.0 l_0_9_43)))
 (let ((?x30519 (* ?x30172 l_0_9_65)))
 (let ((?x29104 (* 2.0 l_0_9_31)))
 (let ((?x30517 (* ?x29104 l_0_9_9)))
 (let ((?x29101 (* 2.0 l_0_9_30)))
 (let ((?x30515 (* ?x29101 l_0_9_8)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32697 (* ?x32374 l_0_9_320)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32695 (* ?x32371 l_0_9_319)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32693 (* ?x32368 l_0_9_318)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32691 (* ?x32365 l_0_9_317)))
 (let ((?x29093 (* 2.0 l_0_9_29)))
 (let ((?x30513 (* ?x29093 l_0_9_7)))
 (let ((?x33603 (* l_0_9_226 l_0_9_226)))
 (let ((?x33601 (* l_0_9_225 l_0_9_225)))
 (let ((?x33599 (* l_0_9_224 l_0_9_224)))
 (let ((?x33600 (- (- (* (* 2.0 l_0_9_10) l_0_9_32) (* l_0_9_223 l_0_9_223)) ?x33599)))
 (let ((?x33609 (- (- (- (- (+ (- (- ?x33600 ?x33601) ?x33603) ?x30513) ?x32691) ?x32693) ?x32695) ?x32697)))
 (= (- (- (- (- (+ (+ ?x33609 ?x30515) ?x30517) ?x30519) ?x30521) ?x30523) ?x30525) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x30634 (* l_0_9_51 l_0_9_51)))
 (let ((?x30632 (* l_0_9_50 l_0_9_50)))
 (let ((?x30630 (* l_0_9_49 l_0_9_49)))
 (let ((?x30628 (* l_0_9_48 l_0_9_48)))
 (let ((?x30626 (* l_0_9_47 l_0_9_47)))
 (let ((?x33679 (* l_0_9_303 l_0_9_303)))
 (let ((?x33677 (* l_0_9_302 l_0_9_302)))
 (let ((?x33675 (* l_0_9_301 l_0_9_301)))
 (let ((?x33673 (* l_0_9_300 l_0_9_300)))
 (let ((?x33671 (* l_0_9_299 l_0_9_299)))
 (let ((?x33668 (* 2.0 l_0_9_262)))
 (let ((?x33669 (* ?x33668 l_0_9_266)))
 (let ((?x33665 (* 2.0 l_0_9_261)))
 (let ((?x33666 (* ?x33665 l_0_9_265)))
 (let ((?x33662 (* 2.0 l_0_9_260)))
 (let ((?x33663 (* ?x33662 l_0_9_264)))
 (let ((?x33659 (* 2.0 l_0_9_259)))
 (let ((?x33660 (* ?x33659 l_0_9_263)))
 (let ((?x30604 (* l_0_9_15 l_0_9_15)))
 (let ((?x30602 (* l_0_9_14 l_0_9_14)))
 (let ((?x30589 (* l_0_9_13 l_0_9_13)))
 (let ((?x33657 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x30589) ?x30602)))
 (let ((?x33674 (- (- (+ (+ (+ (+ (+ ?x33657 ?x30604) ?x33660) ?x33663) ?x33666) ?x33669) ?x33671) ?x33673)))
 (let ((?x33684 (- (- (- (- (- (- (- ?x33674 ?x33675) ?x33677) ?x33679) ?x30626) ?x30628) ?x30630) ?x30632)))
 (= (- ?x33684 ?x30634) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x30732 (* 2.0 l_0_9_51)))
 (let ((?x30733 (* ?x30732 l_0_9_56)))
 (let ((?x30729 (* 2.0 l_0_9_50)))
 (let ((?x30730 (* ?x30729 l_0_9_55)))
 (let ((?x30726 (* 2.0 l_0_9_49)))
 (let ((?x30727 (* ?x30726 l_0_9_54)))
 (let ((?x30723 (* 2.0 l_0_9_48)))
 (let ((?x30724 (* ?x30723 l_0_9_53)))
 (let ((?x30720 (* 2.0 l_0_9_47)))
 (let ((?x30721 (* ?x30720 l_0_9_52)))
 (let ((?x33759 (* 2.0 l_0_9_303)))
 (let ((?x33760 (* ?x33759 l_0_9_308)))
 (let ((?x33756 (* 2.0 l_0_9_302)))
 (let ((?x33757 (* ?x33756 l_0_9_307)))
 (let ((?x33753 (* 2.0 l_0_9_301)))
 (let ((?x33754 (* ?x33753 l_0_9_306)))
 (let ((?x33750 (* 2.0 l_0_9_300)))
 (let ((?x33751 (* ?x33750 l_0_9_305)))
 (let ((?x33747 (* 2.0 l_0_9_299)))
 (let ((?x33748 (* ?x33747 l_0_9_304)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32375 (* ?x32374 l_0_9_302)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32372 (* ?x32371 l_0_9_301)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32369 (* ?x32368 l_0_9_300)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32366 (* ?x32365 l_0_9_299)))
 (let ((?x33668 (* 2.0 l_0_9_262)))
 (let ((?x33741 (* ?x33668 l_0_9_271)))
 (let ((?x33665 (* 2.0 l_0_9_261)))
 (let ((?x33739 (* ?x33665 l_0_9_270)))
 (let ((?x33662 (* 2.0 l_0_9_260)))
 (let ((?x33737 (* ?x33662 l_0_9_269)))
 (let ((?x33659 (* 2.0 l_0_9_259)))
 (let ((?x33735 (* ?x33659 l_0_9_268)))
 (let ((?x30169 (* 2.0 l_0_9_190)))
 (let ((?x30170 (* ?x30169 l_0_9_194)))
 (let ((?x30166 (* 2.0 l_0_9_189)))
 (let ((?x30167 (* ?x30166 l_0_9_193)))
 (let ((?x30163 (* 2.0 l_0_9_188)))
 (let ((?x30164 (* ?x30163 l_0_9_192)))
 (let ((?x30160 (* 2.0 l_0_9_187)))
 (let ((?x30161 (* ?x30160 l_0_9_191)))
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30158 (* ?x30157 l_0_9_158)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30155 (* ?x30154 l_0_9_157)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30152 (* ?x30151 l_0_9_156)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30149 (* ?x30148 l_0_9_155)))
 (let ((?x30687 (* 2.0 l_0_9_15)))
 (let ((?x30688 (* ?x30687 l_0_9_20)))
 (let ((?x30684 (* 2.0 l_0_9_14)))
 (let ((?x30685 (* ?x30684 l_0_9_19)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x30682 (* ?x29763 l_0_9_18)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x30680 (* ?x29212 l_0_9_17)))
 (let ((?x33726 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_16) ?x30680) ?x30682) ?x30685) ?x30688)))
 (let ((?x33733 (- (- (- (+ (+ (+ (+ ?x33726 ?x30149) ?x30152) ?x30155) ?x30158) ?x30161) ?x30164) ?x30167)))
 (let ((?x33744 (+ (+ (+ (+ (+ (+ (- ?x33733 ?x30170) ?x33735) ?x33737) ?x33739) ?x33741) ?x32366) ?x32369)))
 (let ((?x33761 (- (- (- (- (- (+ (+ ?x33744 ?x32372) ?x32375) ?x33748) ?x33751) ?x33754) ?x33757) ?x33760)))
 (= (- (- (- (- (- ?x33761 ?x30721) ?x30724) ?x30727) ?x30730) ?x30733) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30732 (* 2.0 l_0_9_51)))
 (let ((?x30861 (* ?x30732 l_0_9_62)))
 (let ((?x30729 (* 2.0 l_0_9_50)))
 (let ((?x30859 (* ?x30729 l_0_9_61)))
 (let ((?x30726 (* 2.0 l_0_9_49)))
 (let ((?x30857 (* ?x30726 l_0_9_60)))
 (let ((?x30723 (* 2.0 l_0_9_48)))
 (let ((?x30855 (* ?x30723 l_0_9_59)))
 (let ((?x30720 (* 2.0 l_0_9_47)))
 (let ((?x30853 (* ?x30720 l_0_9_58)))
 (let ((?x33759 (* 2.0 l_0_9_303)))
 (let ((?x33870 (* ?x33759 l_0_9_314)))
 (let ((?x33756 (* 2.0 l_0_9_302)))
 (let ((?x33868 (* ?x33756 l_0_9_313)))
 (let ((?x33753 (* 2.0 l_0_9_301)))
 (let ((?x33866 (* ?x33753 l_0_9_312)))
 (let ((?x33750 (* 2.0 l_0_9_300)))
 (let ((?x33864 (* ?x33750 l_0_9_311)))
 (let ((?x33747 (* 2.0 l_0_9_299)))
 (let ((?x33862 (* ?x33747 l_0_9_310)))
 (let ((?x33668 (* 2.0 l_0_9_262)))
 (let ((?x33860 (* ?x33668 l_0_9_277)))
 (let ((?x33669 (* ?x33668 l_0_9_266)))
 (let ((?x33665 (* 2.0 l_0_9_261)))
 (let ((?x33857 (* ?x33665 l_0_9_276)))
 (let ((?x33666 (* ?x33665 l_0_9_265)))
 (let ((?x33662 (* 2.0 l_0_9_260)))
 (let ((?x33854 (* ?x33662 l_0_9_275)))
 (let ((?x33663 (* ?x33662 l_0_9_264)))
 (let ((?x33659 (* 2.0 l_0_9_259)))
 (let ((?x33851 (* ?x33659 l_0_9_274)))
 (let ((?x33660 (* ?x33659 l_0_9_263)))
 (let ((?x30687 (* 2.0 l_0_9_15)))
 (let ((?x30830 (* ?x30687 l_0_9_26)))
 (let ((?x30684 (* 2.0 l_0_9_14)))
 (let ((?x30826 (* ?x30684 l_0_9_25)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x30811 (* ?x29763 l_0_9_24)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x30807 (* ?x29212 l_0_9_23)))
 (let ((?x33849 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_22) ?x30807) ?x30811) ?x30826) ?x30830)))
 (let ((?x33859 (- (+ (- (+ (- (+ (- ?x33849 ?x33660) ?x33851) ?x33663) ?x33854) ?x33666) ?x33857) ?x33669)))
 (let ((?x33872 (- (- (- (- (- (- (+ ?x33859 ?x33860) ?x33862) ?x33864) ?x33866) ?x33868) ?x33870) ?x30853)))
 (= (- (- (- (- ?x33872 ?x30855) ?x30857) ?x30859) ?x30861) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30732 (* 2.0 l_0_9_51)))
 (let ((?x31022 (* ?x30732 l_0_9_69)))
 (let ((?x30729 (* 2.0 l_0_9_50)))
 (let ((?x31020 (* ?x30729 l_0_9_68)))
 (let ((?x30726 (* 2.0 l_0_9_49)))
 (let ((?x31018 (* ?x30726 l_0_9_67)))
 (let ((?x30723 (* 2.0 l_0_9_48)))
 (let ((?x31016 (* ?x30723 l_0_9_66)))
 (let ((?x30720 (* 2.0 l_0_9_47)))
 (let ((?x31014 (* ?x30720 l_0_9_65)))
 (let ((?x33759 (* 2.0 l_0_9_303)))
 (let ((?x33986 (* ?x33759 l_0_9_321)))
 (let ((?x33756 (* 2.0 l_0_9_302)))
 (let ((?x33984 (* ?x33756 l_0_9_320)))
 (let ((?x33753 (* 2.0 l_0_9_301)))
 (let ((?x33982 (* ?x33753 l_0_9_319)))
 (let ((?x33750 (* 2.0 l_0_9_300)))
 (let ((?x33980 (* ?x33750 l_0_9_318)))
 (let ((?x33747 (* 2.0 l_0_9_299)))
 (let ((?x33978 (* ?x33747 l_0_9_317)))
 (let ((?x33668 (* 2.0 l_0_9_262)))
 (let ((?x33976 (* ?x33668 l_0_9_284)))
 (let ((?x33665 (* 2.0 l_0_9_261)))
 (let ((?x33974 (* ?x33665 l_0_9_283)))
 (let ((?x33662 (* 2.0 l_0_9_260)))
 (let ((?x33972 (* ?x33662 l_0_9_282)))
 (let ((?x33659 (* 2.0 l_0_9_259)))
 (let ((?x33970 (* ?x33659 l_0_9_281)))
 (let ((?x30687 (* 2.0 l_0_9_15)))
 (let ((?x30992 (* ?x30687 l_0_9_33)))
 (let ((?x30684 (* 2.0 l_0_9_14)))
 (let ((?x30990 (* ?x30684 l_0_9_32)))
 (let ((?x29763 (* 2.0 l_0_9_13)))
 (let ((?x30988 (* ?x29763 l_0_9_31)))
 (let ((?x29212 (* 2.0 l_0_9_12)))
 (let ((?x30986 (* ?x29212 l_0_9_30)))
 (let ((?x33957 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_29) ?x30986) ?x30988) ?x30990) ?x30992)))
 (let ((?x33963 (- (- ?x33957 (* (* 2.0 l_0_9_223) l_0_9_227)) (* (* 2.0 l_0_9_224) l_0_9_228))))
 (let ((?x33969 (- (- ?x33963 (* (* 2.0 l_0_9_225) l_0_9_229)) (* (* 2.0 l_0_9_226) l_0_9_230))))
 (let ((?x33983 (- (- (- (+ (+ (+ (+ ?x33969 ?x33970) ?x33972) ?x33974) ?x33976) ?x33978) ?x33980) ?x33982)))
 (let ((?x33992 (- (- (- (- (- (- (- ?x33983 ?x33984) ?x33986) ?x31014) ?x31016) ?x31018) ?x31020) ?x31022)))
 (= ?x33992 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31150 (* l_0_9_57 l_0_9_57)))
 (let ((?x31148 (* l_0_9_56 l_0_9_56)))
 (let ((?x31146 (* l_0_9_55 l_0_9_55)))
 (let ((?x31144 (* l_0_9_54 l_0_9_54)))
 (let ((?x31142 (* l_0_9_53 l_0_9_53)))
 (let ((?x31140 (* l_0_9_52 l_0_9_52)))
 (let ((?x34106 (* l_0_9_309 l_0_9_309)))
 (let ((?x34104 (* l_0_9_308 l_0_9_308)))
 (let ((?x34102 (* l_0_9_307 l_0_9_307)))
 (let ((?x34100 (* l_0_9_306 l_0_9_306)))
 (let ((?x34098 (* l_0_9_305 l_0_9_305)))
 (let ((?x34096 (* l_0_9_304 l_0_9_304)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32482 (* ?x32374 l_0_9_307)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32480 (* ?x32371 l_0_9_306)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32478 (* ?x32368 l_0_9_305)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32476 (* ?x32365 l_0_9_304)))
 (let ((?x31138 (* l_0_9_21 l_0_9_21)))
 (let ((?x31132 (* l_0_9_20 l_0_9_20)))
 (let ((?x30169 (* 2.0 l_0_9_190)))
 (let ((?x30269 (* ?x30169 l_0_9_199)))
 (let ((?x31122 (* l_0_9_19 l_0_9_19)))
 (let ((?x30166 (* 2.0 l_0_9_189)))
 (let ((?x30267 (* ?x30166 l_0_9_198)))
 (let ((?x30163 (* 2.0 l_0_9_188)))
 (let ((?x30265 (* ?x30163 l_0_9_197)))
 (let ((?x30160 (* 2.0 l_0_9_187)))
 (let ((?x30263 (* ?x30160 l_0_9_196)))
 (let ((?x31120 (* l_0_9_18 l_0_9_18)))
 (let ((?x31118 (* l_0_9_17 l_0_9_17)))
 (let ((?x31154 (* l_0_9_16 l_0_9_16)))
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30244 (* ?x30157 l_0_9_163)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30240 (* ?x30154 l_0_9_162)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30236 (* ?x30151 l_0_9_161)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30232 (* ?x30148 l_0_9_160)))
 (let ((?x34085 (- (+ (+ (+ (+ (+ (+ ?x30232 ?x30236) ?x30240) ?x30244) ?x31154) ?x31118) ?x31120) ?x30263)))
 (let ((?x34092 (+ (+ (+ (- (+ (- (- ?x34085 ?x30265) ?x30267) ?x31122) ?x30269) ?x31132) ?x31138) ?x32476)))
 (let ((?x34103 (- (- (- (- (+ (+ (+ ?x34092 ?x32478) ?x32480) ?x32482) ?x34096) ?x34098) ?x34100) ?x34102)))
 (let ((?x34112 (- (- (- (- (- (- (- ?x34103 ?x34104) ?x34106) ?x31140) ?x31142) ?x31144) ?x31146) ?x31148)))
 (= (- ?x34112 ?x31150) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31280 (* 2.0 l_0_9_57)))
 (let ((?x31281 (* ?x31280 l_0_9_63)))
 (let ((?x31277 (* 2.0 l_0_9_56)))
 (let ((?x31278 (* ?x31277 l_0_9_62)))
 (let ((?x31274 (* 2.0 l_0_9_55)))
 (let ((?x31275 (* ?x31274 l_0_9_61)))
 (let ((?x31271 (* 2.0 l_0_9_54)))
 (let ((?x31272 (* ?x31271 l_0_9_60)))
 (let ((?x31268 (* 2.0 l_0_9_53)))
 (let ((?x31269 (* ?x31268 l_0_9_59)))
 (let ((?x31265 (* 2.0 l_0_9_52)))
 (let ((?x31266 (* ?x31265 l_0_9_58)))
 (let ((?x34201 (* 2.0 l_0_9_309)))
 (let ((?x34202 (* ?x34201 l_0_9_315)))
 (let ((?x34198 (* 2.0 l_0_9_308)))
 (let ((?x34199 (* ?x34198 l_0_9_314)))
 (let ((?x34195 (* 2.0 l_0_9_307)))
 (let ((?x34196 (* ?x34195 l_0_9_313)))
 (let ((?x34192 (* 2.0 l_0_9_306)))
 (let ((?x34193 (* ?x34192 l_0_9_312)))
 (let ((?x34189 (* 2.0 l_0_9_305)))
 (let ((?x34190 (* ?x34189 l_0_9_311)))
 (let ((?x34186 (* 2.0 l_0_9_304)))
 (let ((?x34187 (* ?x34186 l_0_9_310)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32586 (* ?x32374 l_0_9_313)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32584 (* ?x32371 l_0_9_312)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32582 (* ?x32368 l_0_9_311)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32580 (* ?x32365 l_0_9_310)))
 (let ((?x33668 (* 2.0 l_0_9_262)))
 (let ((?x33741 (* ?x33668 l_0_9_271)))
 (let ((?x33665 (* 2.0 l_0_9_261)))
 (let ((?x33739 (* ?x33665 l_0_9_270)))
 (let ((?x33662 (* 2.0 l_0_9_260)))
 (let ((?x33737 (* ?x33662 l_0_9_269)))
 (let ((?x33659 (* 2.0 l_0_9_259)))
 (let ((?x33735 (* ?x33659 l_0_9_268)))
 (let ((?x31262 (* 2.0 l_0_9_21)))
 (let ((?x31263 (* ?x31262 l_0_9_27)))
 (let ((?x31253 (* 2.0 l_0_9_20)))
 (let ((?x31254 (* ?x31253 l_0_9_26)))
 (let ((?x30169 (* 2.0 l_0_9_190)))
 (let ((?x30371 (* ?x30169 l_0_9_205)))
 (let ((?x31238 (* 2.0 l_0_9_19)))
 (let ((?x31239 (* ?x31238 l_0_9_25)))
 (let ((?x30166 (* 2.0 l_0_9_189)))
 (let ((?x30369 (* ?x30166 l_0_9_204)))
 (let ((?x30163 (* 2.0 l_0_9_188)))
 (let ((?x30367 (* ?x30163 l_0_9_203)))
 (let ((?x30160 (* 2.0 l_0_9_187)))
 (let ((?x30365 (* ?x30160 l_0_9_202)))
 (let ((?x29841 (* 2.0 l_0_9_18)))
 (let ((?x31236 (* ?x29841 l_0_9_24)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x31234 (* ?x29317 l_0_9_23)))
 (let ((?x29314 (* 2.0 l_0_9_16)))
 (let ((?x31214 (* ?x29314 l_0_9_22)))
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30363 (* ?x30157 l_0_9_169)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30361 (* ?x30154 l_0_9_168)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30359 (* ?x30151 l_0_9_167)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30357 (* ?x30148 l_0_9_166)))
 (let ((?x34171 (- (+ (+ (+ (+ (+ (+ ?x30357 ?x30359) ?x30361) ?x30363) ?x31214) ?x31234) ?x31236) ?x30365)))
 (let ((?x34178 (- (+ (+ (- (+ (- (- ?x34171 ?x30367) ?x30369) ?x31239) ?x30371) ?x31254) ?x31263) ?x33735)))
 (let ((?x34185 (+ (+ (+ (+ (- (- (- ?x34178 ?x33737) ?x33739) ?x33741) ?x32580) ?x32582) ?x32584) ?x32586)))
 (let ((?x34204 (- (- (- (- (- (- (- ?x34185 ?x34187) ?x34190) ?x34193) ?x34196) ?x34199) ?x34202) ?x31266)))
 (= (- (- (- (- (- ?x34204 ?x31269) ?x31272) ?x31275) ?x31278) ?x31281) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31280 (* 2.0 l_0_9_57)))
 (let ((?x31475 (* ?x31280 l_0_9_70)))
 (let ((?x31277 (* 2.0 l_0_9_56)))
 (let ((?x31473 (* ?x31277 l_0_9_69)))
 (let ((?x31274 (* 2.0 l_0_9_55)))
 (let ((?x31471 (* ?x31274 l_0_9_68)))
 (let ((?x31271 (* 2.0 l_0_9_54)))
 (let ((?x31469 (* ?x31271 l_0_9_67)))
 (let ((?x31268 (* 2.0 l_0_9_53)))
 (let ((?x31467 (* ?x31268 l_0_9_66)))
 (let ((?x31265 (* 2.0 l_0_9_52)))
 (let ((?x31465 (* ?x31265 l_0_9_65)))
 (let ((?x34201 (* 2.0 l_0_9_309)))
 (let ((?x34334 (* ?x34201 l_0_9_322)))
 (let ((?x34198 (* 2.0 l_0_9_308)))
 (let ((?x34332 (* ?x34198 l_0_9_321)))
 (let ((?x34195 (* 2.0 l_0_9_307)))
 (let ((?x34330 (* ?x34195 l_0_9_320)))
 (let ((?x34192 (* 2.0 l_0_9_306)))
 (let ((?x34328 (* ?x34192 l_0_9_319)))
 (let ((?x34189 (* 2.0 l_0_9_305)))
 (let ((?x34326 (* ?x34189 l_0_9_318)))
 (let ((?x34186 (* 2.0 l_0_9_304)))
 (let ((?x34324 (* ?x34186 l_0_9_317)))
 (let ((?x32374 (* 2.0 l_0_9_298)))
 (let ((?x32697 (* ?x32374 l_0_9_320)))
 (let ((?x32371 (* 2.0 l_0_9_297)))
 (let ((?x32695 (* ?x32371 l_0_9_319)))
 (let ((?x32368 (* 2.0 l_0_9_296)))
 (let ((?x32693 (* ?x32368 l_0_9_318)))
 (let ((?x32365 (* 2.0 l_0_9_295)))
 (let ((?x32691 (* ?x32365 l_0_9_317)))
 (let ((?x31262 (* 2.0 l_0_9_21)))
 (let ((?x31463 (* ?x31262 l_0_9_34)))
 (let ((?x31253 (* 2.0 l_0_9_20)))
 (let ((?x31457 (* ?x31253 l_0_9_33)))
 (let ((?x30169 (* 2.0 l_0_9_190)))
 (let ((?x30511 (* ?x30169 l_0_9_212)))
 (let ((?x31238 (* 2.0 l_0_9_19)))
 (let ((?x31447 (* ?x31238 l_0_9_32)))
 (let ((?x30166 (* 2.0 l_0_9_189)))
 (let ((?x30509 (* ?x30166 l_0_9_211)))
 (let ((?x30163 (* 2.0 l_0_9_188)))
 (let ((?x30507 (* ?x30163 l_0_9_210)))
 (let ((?x30160 (* 2.0 l_0_9_187)))
 (let ((?x30505 (* ?x30160 l_0_9_209)))
 (let ((?x29841 (* 2.0 l_0_9_18)))
 (let ((?x31445 (* ?x29841 l_0_9_31)))
 (let ((?x29317 (* 2.0 l_0_9_17)))
 (let ((?x31443 (* ?x29317 l_0_9_30)))
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30503 (* ?x30157 l_0_9_176)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30501 (* ?x30154 l_0_9_175)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30499 (* ?x30151 l_0_9_174)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30497 (* ?x30148 l_0_9_173)))
 (let ((?x34302 (+ (+ (+ (+ ?x30497 ?x30499) ?x30501) ?x30503) (* (* 2.0 l_0_9_16) l_0_9_29))))
 (let ((?x34309 (- (+ (- (- (- (+ (+ ?x34302 ?x31443) ?x31445) ?x30505) ?x30507) ?x30509) ?x31447) ?x30511)))
 (let ((?x34315 (- (- (+ (+ ?x34309 ?x31457) ?x31463) (* (* 2.0 l_0_9_223) l_0_9_232)) (* (* 2.0 l_0_9_224) l_0_9_233))))
 (let ((?x34319 (- (- ?x34315 (* (* 2.0 l_0_9_225) l_0_9_234)) (* (* 2.0 l_0_9_226) l_0_9_235))))
 (let ((?x34329 (- (- (- (+ (+ (+ (+ ?x34319 ?x32691) ?x32693) ?x32695) ?x32697) ?x34324) ?x34326) ?x34328)))
 (let ((?x34339 (- (- (- (- (- (- (- ?x34329 ?x34330) ?x34332) ?x34334) ?x31465) ?x31467) ?x31469) ?x31471)))
 (= (- (- ?x34339 ?x31473) ?x31475) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31643 (* l_0_9_64 l_0_9_64)))
 (let ((?x31641 (* l_0_9_63 l_0_9_63)))
 (let ((?x31639 (* l_0_9_62 l_0_9_62)))
 (let ((?x31637 (* l_0_9_61 l_0_9_61)))
 (let ((?x31635 (* l_0_9_60 l_0_9_60)))
 (let ((?x31633 (* l_0_9_59 l_0_9_59)))
 (let ((?x31631 (* l_0_9_58 l_0_9_58)))
 (let ((?x34466 (* l_0_9_316 l_0_9_316)))
 (let ((?x34464 (* l_0_9_315 l_0_9_315)))
 (let ((?x34462 (* l_0_9_314 l_0_9_314)))
 (let ((?x34460 (* l_0_9_313 l_0_9_313)))
 (let ((?x34458 (* l_0_9_312 l_0_9_312)))
 (let ((?x34456 (* l_0_9_311 l_0_9_311)))
 (let ((?x34454 (* l_0_9_310 l_0_9_310)))
 (let ((?x31629 (* l_0_9_28 l_0_9_28)))
 (let ((?x31627 (* l_0_9_27 l_0_9_27)))
 (let ((?x33668 (* 2.0 l_0_9_262)))
 (let ((?x33860 (* ?x33668 l_0_9_277)))
 (let ((?x33665 (* 2.0 l_0_9_261)))
 (let ((?x33857 (* ?x33665 l_0_9_276)))
 (let ((?x33662 (* 2.0 l_0_9_260)))
 (let ((?x33854 (* ?x33662 l_0_9_275)))
 (let ((?x31625 (* l_0_9_26 l_0_9_26)))
 (let ((?x33659 (* 2.0 l_0_9_259)))
 (let ((?x33851 (* ?x33659 l_0_9_274)))
 (let ((?x31623 (* l_0_9_25 l_0_9_25)))
 (let ((?x31621 (* l_0_9_24 l_0_9_24)))
 (let ((?x34446 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x31621) ?x31623)))
 (let ((?x34453 (+ (+ (- (- (- (+ (- ?x34446 ?x33851) ?x31625) ?x33854) ?x33857) ?x33860) ?x31627) ?x31629)))
 (let ((?x34467 (- (- (- (- (- (- (- ?x34453 ?x34454) ?x34456) ?x34458) ?x34460) ?x34462) ?x34464) ?x34466)))
 (let ((?x34474 (- (- (- (- (- (- (- ?x34467 ?x31631) ?x31633) ?x31635) ?x31637) ?x31639) ?x31641) ?x31643)))
 (= ?x34474 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x31833 (* (* 2.0 l_0_9_64) l_0_9_71)))
 (let ((?x31830 (* (* 2.0 l_0_9_63) l_0_9_70)))
 (let ((?x31827 (* (* 2.0 l_0_9_62) l_0_9_69)))
 (let ((?x31824 (* (* 2.0 l_0_9_61) l_0_9_68)))
 (let ((?x31821 (* (* 2.0 l_0_9_60) l_0_9_67)))
 (let ((?x31818 (* (* 2.0 l_0_9_59) l_0_9_66)))
 (let ((?x31815 (* (* 2.0 l_0_9_58) l_0_9_65)))
 (let ((?x34574 (* (* 2.0 l_0_9_316) l_0_9_323)))
 (let ((?x34571 (* (* 2.0 l_0_9_315) l_0_9_322)))
 (let ((?x34568 (* (* 2.0 l_0_9_314) l_0_9_321)))
 (let ((?x34565 (* (* 2.0 l_0_9_313) l_0_9_320)))
 (let ((?x34562 (* (* 2.0 l_0_9_312) l_0_9_319)))
 (let ((?x34559 (* (* 2.0 l_0_9_311) l_0_9_318)))
 (let ((?x34556 (* (* 2.0 l_0_9_310) l_0_9_317)))
 (let ((?x31812 (* (* 2.0 l_0_9_28) l_0_9_35)))
 (let ((?x31809 (* (* 2.0 l_0_9_27) l_0_9_34)))
 (let ((?x33668 (* 2.0 l_0_9_262)))
 (let ((?x33976 (* ?x33668 l_0_9_284)))
 (let ((?x33665 (* 2.0 l_0_9_261)))
 (let ((?x33974 (* ?x33665 l_0_9_283)))
 (let ((?x33662 (* 2.0 l_0_9_260)))
 (let ((?x33972 (* ?x33662 l_0_9_282)))
 (let ((?x31806 (* (* 2.0 l_0_9_26) l_0_9_33)))
 (let ((?x33659 (* 2.0 l_0_9_259)))
 (let ((?x33970 (* ?x33659 l_0_9_281)))
 (let ((?x31803 (* (* 2.0 l_0_9_25) l_0_9_32)))
 (let ((?x29932 (* 2.0 l_0_9_24)))
 (let ((?x31800 (* ?x29932 l_0_9_31)))
 (let ((?x29445 (* 2.0 l_0_9_23)))
 (let ((?x31798 (* ?x29445 l_0_9_30)))
 (let ((?x29927 (* 2.0 l_0_9_22)))
 (let ((?x31796 (* ?x29927 l_0_9_29)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29069 (* ?x28999 l_0_9_152)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x32944 (* ?x29215 l_0_9_151)))
 (let ((?x34533 (+ (* (* 1.0 l_0_9_110) l_0_9_115) (* (* 1.0 l_0_9_111) l_0_9_116))))
 (let ((?x34538 (- (+ (- (- ?x34533 ?x32944) ?x29069) ?x31796) (* (* 2.0 l_0_9_223) l_0_9_238))))
 (let ((?x34542 (- (- ?x34538 (* (* 2.0 l_0_9_224) l_0_9_239)) (* (* 2.0 l_0_9_225) l_0_9_240))))
 (let ((?x34547 (+ (+ (+ (- ?x34542 (* (* 2.0 l_0_9_226) l_0_9_241)) ?x31798) ?x31800) ?x31803)))
 (let ((?x34554 (+ (+ (- (- (- (+ (- ?x34547 ?x33970) ?x31806) ?x33972) ?x33974) ?x33976) ?x31809) ?x31812)))
 (let ((?x34575 (- (- (- (- (- (- (- ?x34554 ?x34556) ?x34559) ?x34562) ?x34565) ?x34568) ?x34571) ?x34574)))
 (let ((?x34582 (- (- (- (- (- (- (- ?x34575 ?x31815) ?x31818) ?x31821) ?x31824) ?x31827) ?x31830) ?x31833)))
 (let ((?x34586 (- (- ?x34582 (* (* 1.0 l_0_9_74) l_0_9_79)) (* (* 1.0 l_0_9_75) l_0_9_80))))
 (= ?x34586 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32037 (* l_0_9_72 l_0_9_72)))
 (let ((?x32035 (* l_0_9_71 l_0_9_71)))
 (let ((?x32033 (* l_0_9_70 l_0_9_70)))
 (let ((?x32031 (* l_0_9_69 l_0_9_69)))
 (let ((?x32029 (* l_0_9_68 l_0_9_68)))
 (let ((?x32027 (* l_0_9_67 l_0_9_67)))
 (let ((?x32025 (* l_0_9_66 l_0_9_66)))
 (let ((?x32023 (* l_0_9_65 l_0_9_65)))
 (let ((?x32021 (* l_0_9_36 l_0_9_36)))
 (let ((?x32019 (* l_0_9_35 l_0_9_35)))
 (let ((?x32017 (* l_0_9_34 l_0_9_34)))
 (let ((?x32015 (* l_0_9_33 l_0_9_33)))
 (let ((?x34744 (* l_0_9_324 l_0_9_324)))
 (let ((?x34742 (* l_0_9_323 l_0_9_323)))
 (let ((?x34740 (* l_0_9_322 l_0_9_322)))
 (let ((?x34738 (* l_0_9_321 l_0_9_321)))
 (let ((?x34736 (* l_0_9_320 l_0_9_320)))
 (let ((?x32013 (* l_0_9_32 l_0_9_32)))
 (let ((?x34733 (* l_0_9_319 l_0_9_319)))
 (let ((?x34731 (* l_0_9_318 l_0_9_318)))
 (let ((?x34729 (* l_0_9_317 l_0_9_317)))
 (let ((?x32011 (* l_0_9_31 l_0_9_31)))
 (let ((?x32009 (* l_0_9_30 l_0_9_30)))
 (let ((?x32007 (* l_0_9_29 l_0_9_29)))
 (let ((?x34721 (- (* (* (- 2.0) l_0_9_223) l_0_9_245) (* (* 2.0 l_0_9_224) l_0_9_246))))
 (let ((?x34725 (- (- ?x34721 (* (* 2.0 l_0_9_225) l_0_9_247)) (* (* 2.0 l_0_9_226) l_0_9_248))))
 (let ((?x34735 (+ (- (- (- (+ (+ (+ ?x34725 ?x32007) ?x32009) ?x32011) ?x34729) ?x34731) ?x34733) ?x32013)))
 (let ((?x34747 (+ (+ (- (- (- (- (- ?x34735 ?x34736) ?x34738) ?x34740) ?x34742) ?x34744) ?x32015) ?x32017)))
 (let ((?x34754 (- (- (- (- (- (+ (+ ?x34747 ?x32019) ?x32021) ?x32023) ?x32025) ?x32027) ?x32029) ?x32031)))
 (= (- (- (- ?x34754 ?x32033) ?x32035) ?x32037) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x34828 (- (- (* (/ 1.0 2.0) (* l_0_9_109 l_0_9_109)) (* l_0_9_145 l_0_9_145)) (* (* (/ 1.0 2.0) l_0_9_73) l_0_9_73))))
 (= ?x34828 0.0)))
(assert
 (let ((?x34574 (* (* 2.0 l_0_9_316) l_0_9_323)))
 (let ((?x34571 (* (* 2.0 l_0_9_315) l_0_9_322)))
 (let ((?x34568 (* (* 2.0 l_0_9_314) l_0_9_321)))
 (let ((?x34565 (* (* 2.0 l_0_9_313) l_0_9_320)))
 (let ((?x34562 (* (* 2.0 l_0_9_312) l_0_9_319)))
 (let ((?x34559 (* (* 2.0 l_0_9_311) l_0_9_318)))
 (let ((?x34556 (* (* 2.0 l_0_9_310) l_0_9_317)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x34883 (* ?x32360 l_0_9_281)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28755 (* ?x28754 l_0_9_146)))
 (let ((?x34844 (+ (* (* 2.0 l_0_9_100) l_0_9_107) (* (* 2.0 l_0_9_101) l_0_9_94))))
 (let ((?x34848 (+ (+ ?x34844 (* (* 2.0 l_0_9_102) l_0_9_95)) (* (* 2.0 l_0_9_103) l_0_9_96))))
 (let ((?x34853 (+ (+ ?x34848 (* (* 2.0 l_0_9_104) l_0_9_97)) (* (* 2.0 l_0_9_105) l_0_9_98))))
 (let ((?x34858 (+ (+ ?x34853 (* (* 2.0 l_0_9_106) l_0_9_99)) (* (* 1.0 l_0_9_109) l_0_9_110))))
 (let ((?x34864 (- (- ?x34858 (* (* 2.0 l_0_9_130) l_0_9_137)) (* (* 2.0 l_0_9_131) l_0_9_138))))
 (let ((?x34870 (- (- ?x34864 (* (* 2.0 l_0_9_132) l_0_9_139)) (* (* 2.0 l_0_9_133) l_0_9_140))))
 (let ((?x34876 (- (- ?x34870 (* (* 2.0 l_0_9_134) l_0_9_141)) (* (* 2.0 l_0_9_135) l_0_9_142))))
 (let ((?x34882 (- (- (- ?x34876 (* (* 2.0 l_0_9_136) l_0_9_143)) ?x28755) (* (* 2.0 l_0_9_217) l_0_9_238))))
 (let ((?x34890 (- (- (- (- (- (- (- ?x34882 ?x34883) ?x34556) ?x34559) ?x34562) ?x34565) ?x34568) ?x34571)))
 (= (- (- ?x34890 ?x34574) (* (* 1.0 l_0_9_73) l_0_9_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28864 (* ?x28754 l_0_9_151)))
 (let ((?x34998 (- (- (* (* 1.0 l_0_9_109) l_0_9_115) ?x28864) (* (* 1.0 l_0_9_73) l_0_9_79))))
 (= ?x34998 0.0)))))
(assert
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28887 (* ?x28754 l_0_9_155)))
 (let ((?x35011 (- (- (* (* 1.0 l_0_9_109) l_0_9_119) ?x28887) (* (* 1.0 l_0_9_73) l_0_9_83))))
 (= ?x35011 0.0)))))
(assert
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28910 (* ?x28754 l_0_9_160)))
 (let ((?x35026 (- (- (* (* 1.0 l_0_9_109) l_0_9_124) ?x28910) (* (* 1.0 l_0_9_73) l_0_9_88))))
 (= ?x35026 0.0)))))
(assert
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28942 (* ?x28754 l_0_9_166)))
 (let ((?x35041 (- (- (* (* 1.0 l_0_9_109) l_0_9_130) ?x28942) (* (* 1.0 l_0_9_73) l_0_9_94))))
 (= ?x35041 0.0)))))
(assert
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28980 (* ?x28754 l_0_9_173)))
 (let ((?x35055 (+ (* (* (- 1.0) l_0_9_101) l_0_9_73) (* (* 1.0 l_0_9_109) l_0_9_137))))
 (= (- ?x35055 ?x28980) 0.0)))))
(assert
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x35080 (* ?x32872 l_0_9_282)))
 (let ((?x32869 (* 2.0 l_0_9_254)))
 (let ((?x35078 (* ?x32869 l_0_9_281)))
 (let ((?x28595 (* l_0_9_147 l_0_9_147)))
 (let ((?x28627 (* l_0_9_146 l_0_9_146)))
 (let ((?x35071 (+ (* (/ 1.0 2.0) (* l_0_9_110 l_0_9_110)) (* (/ 1.0 2.0) (* l_0_9_111 l_0_9_111)))))
 (let ((?x35077 (- (- (- (- ?x35071 ?x28627) ?x28595) (* (* 2.0 l_0_9_218) l_0_9_238)) (* (* 2.0 l_0_9_219) l_0_9_239))))
 (let ((?x35087 (- (- (- (- ?x35077 ?x35078) ?x35080) (* (* 2.0 l_0_9_346) l_0_9_353)) (* (* 2.0 l_0_9_347) l_0_9_354))))
 (let ((?x35093 (- (- ?x35087 (* (* 2.0 l_0_9_348) l_0_9_355)) (* (* 2.0 l_0_9_349) l_0_9_356))))
 (let ((?x35099 (- (- ?x35093 (* (* 2.0 l_0_9_350) l_0_9_357)) (* (* 2.0 l_0_9_351) l_0_9_358))))
 (let ((?x35105 (- (- ?x35099 (* (* 2.0 l_0_9_352) l_0_9_359)) (* (* (/ 1.0 2.0) l_0_9_74) l_0_9_74))))
 (= (- ?x35105 (* (* (/ 1.0 2.0) l_0_9_75) l_0_9_75)) 0.0))))))))))))))
(assert
 (let ((?x35250 (* (* 2.0 l_0_9_280) l_0_9_287)))
 (let ((?x35247 (* (* 2.0 l_0_9_279) l_0_9_286)))
 (let ((?x35244 (* (* 2.0 l_0_9_278) l_0_9_285)))
 (let ((?x35241 (* (* 2.0 l_0_9_277) l_0_9_284)))
 (let ((?x35238 (* (* 2.0 l_0_9_276) l_0_9_283)))
 (let ((?x35235 (* (* 2.0 l_0_9_275) l_0_9_282)))
 (let ((?x35232 (* (* 2.0 l_0_9_274) l_0_9_281)))
 (let ((?x35228 (* 2.0 l_0_9_267)))
 (let ((?x35229 (* ?x35228 l_0_9_285)))
 (let ((?x35225 (* 2.0 l_0_9_266)))
 (let ((?x35226 (* ?x35225 l_0_9_284)))
 (let ((?x35222 (* 2.0 l_0_9_265)))
 (let ((?x35223 (* ?x35222 l_0_9_283)))
 (let ((?x35219 (* 2.0 l_0_9_264)))
 (let ((?x35220 (* ?x35219 l_0_9_282)))
 (let ((?x35216 (* 2.0 l_0_9_263)))
 (let ((?x35217 (* ?x35216 l_0_9_281)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29218 (* ?x28999 l_0_9_156)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x29216 (* ?x29215 l_0_9_155)))
 (let ((?x35198 (+ (* (* 1.0 l_0_9_110) l_0_9_119) (* (* 1.0 l_0_9_111) l_0_9_120))))
 (let ((?x35206 (- (- (- (- ?x35198 ?x29216) ?x29218) (* (* 2.0 l_0_9_227) l_0_9_238)) (* (* 2.0 l_0_9_228) l_0_9_239))))
 (let ((?x35212 (- (- ?x35206 (* (* 2.0 l_0_9_229) l_0_9_240)) (* (* 2.0 l_0_9_230) l_0_9_241))))
 (let ((?x35224 (- (- (- (- ?x35212 (* (* 2.0 l_0_9_231) l_0_9_242)) ?x35217) ?x35220) ?x35223)))
 (let ((?x35245 (+ (+ (+ (+ (+ (- (- ?x35224 ?x35226) ?x35229) ?x35232) ?x35235) ?x35238) ?x35241) ?x35244)))
 (let ((?x35255 (- (- (+ (+ ?x35245 ?x35247) ?x35250) (* (* 1.0 l_0_9_74) l_0_9_83)) (* (* 1.0 l_0_9_75) l_0_9_84))))
 (= ?x35255 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x34574 (* (* 2.0 l_0_9_316) l_0_9_323)))
 (let ((?x34571 (* (* 2.0 l_0_9_315) l_0_9_322)))
 (let ((?x34568 (* (* 2.0 l_0_9_314) l_0_9_321)))
 (let ((?x34565 (* (* 2.0 l_0_9_313) l_0_9_320)))
 (let ((?x34562 (* (* 2.0 l_0_9_312) l_0_9_319)))
 (let ((?x34559 (* (* 2.0 l_0_9_311) l_0_9_318)))
 (let ((?x34556 (* (* 2.0 l_0_9_310) l_0_9_317)))
 (let ((?x35411 (* 2.0 l_0_9_273)))
 (let ((?x35412 (* ?x35411 l_0_9_286)))
 (let ((?x35408 (* 2.0 l_0_9_272)))
 (let ((?x35409 (* ?x35408 l_0_9_285)))
 (let ((?x35405 (* 2.0 l_0_9_271)))
 (let ((?x35406 (* ?x35405 l_0_9_284)))
 (let ((?x35402 (* 2.0 l_0_9_270)))
 (let ((?x35403 (* ?x35402 l_0_9_283)))
 (let ((?x35399 (* 2.0 l_0_9_269)))
 (let ((?x35400 (* ?x35399 l_0_9_282)))
 (let ((?x35396 (* 2.0 l_0_9_268)))
 (let ((?x35397 (* ?x35396 l_0_9_281)))
 (let ((?x31794 (* (* 2.0 l_0_9_208) l_0_9_215)))
 (let ((?x31791 (* (* 2.0 l_0_9_207) l_0_9_214)))
 (let ((?x31788 (* (* 2.0 l_0_9_206) l_0_9_213)))
 (let ((?x31785 (* (* 2.0 l_0_9_205) l_0_9_212)))
 (let ((?x31782 (* (* 2.0 l_0_9_204) l_0_9_211)))
 (let ((?x31779 (* (* 2.0 l_0_9_203) l_0_9_210)))
 (let ((?x31776 (* (* 2.0 l_0_9_202) l_0_9_209)))
 (let ((?x31773 (* (* 2.0 l_0_9_172) l_0_9_179)))
 (let ((?x31770 (* (* 2.0 l_0_9_171) l_0_9_178)))
 (let ((?x31767 (* (* 2.0 l_0_9_170) l_0_9_177)))
 (let ((?x31764 (* (* 2.0 l_0_9_169) l_0_9_176)))
 (let ((?x31761 (* (* 2.0 l_0_9_168) l_0_9_175)))
 (let ((?x31758 (* (* 2.0 l_0_9_167) l_0_9_174)))
 (let ((?x31755 (* (* 2.0 l_0_9_166) l_0_9_173)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29290 (* ?x28999 l_0_9_161)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x35361 (* ?x29215 l_0_9_160)))
 (let ((?x35360 (+ (* (* 1.0 l_0_9_110) l_0_9_124) (* (* 1.0 l_0_9_111) l_0_9_125))))
 (let ((?x35368 (+ (+ (+ (+ (+ (- (- ?x35360 ?x35361) ?x29290) ?x31755) ?x31758) ?x31761) ?x31764) ?x31767)))
 (let ((?x35375 (- (- (- (- (- (+ (+ ?x35368 ?x31770) ?x31773) ?x31776) ?x31779) ?x31782) ?x31785) ?x31788)))
 (let ((?x35383 (- (- (- (- ?x35375 ?x31791) ?x31794) (* (* 2.0 l_0_9_232) l_0_9_238)) (* (* 2.0 l_0_9_233) l_0_9_239))))
 (let ((?x35389 (- (- ?x35383 (* (* 2.0 l_0_9_234) l_0_9_240)) (* (* 2.0 l_0_9_235) l_0_9_241))))
 (let ((?x35395 (- (- ?x35389 (* (* 2.0 l_0_9_236) l_0_9_242)) (* (* 2.0 l_0_9_237) l_0_9_243))))
 (let ((?x35414 (+ (- (- (- (- (- (- ?x35395 ?x35397) ?x35400) ?x35403) ?x35406) ?x35409) ?x35412) ?x34556)))
 (let ((?x35422 (- (+ (+ (+ (+ (+ (+ ?x35414 ?x34559) ?x34562) ?x34565) ?x34568) ?x34571) ?x34574) (* (* 1.0 l_0_9_74) l_0_9_88))))
 (= (- ?x35422 (* (* 1.0 l_0_9_75) l_0_9_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35250 (* (* 2.0 l_0_9_280) l_0_9_287)))
 (let ((?x35247 (* (* 2.0 l_0_9_279) l_0_9_286)))
 (let ((?x35244 (* (* 2.0 l_0_9_278) l_0_9_285)))
 (let ((?x35241 (* (* 2.0 l_0_9_277) l_0_9_284)))
 (let ((?x35238 (* (* 2.0 l_0_9_276) l_0_9_283)))
 (let ((?x35235 (* (* 2.0 l_0_9_275) l_0_9_282)))
 (let ((?x35232 (* (* 2.0 l_0_9_274) l_0_9_281)))
 (let ((?x35559 (* l_0_9_244 l_0_9_244)))
 (let ((?x35557 (* l_0_9_243 l_0_9_243)))
 (let ((?x35555 (* l_0_9_242 l_0_9_242)))
 (let ((?x35553 (* l_0_9_241 l_0_9_241)))
 (let ((?x35551 (* l_0_9_240 l_0_9_240)))
 (let ((?x35549 (* l_0_9_239 l_0_9_239)))
 (let ((?x35547 (* l_0_9_238 l_0_9_238)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29431 (* ?x28999 l_0_9_167)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x29428 (* ?x29215 l_0_9_166)))
 (let ((?x35544 (+ (* (* 1.0 l_0_9_110) l_0_9_130) (* (* 1.0 l_0_9_111) l_0_9_131))))
 (let ((?x35556 (- (- (- (- (- (- (- ?x35544 ?x29428) ?x29431) ?x35547) ?x35549) ?x35551) ?x35553) ?x35555)))
 (let ((?x35565 (- (- (- (- (- (- (- ?x35556 ?x35557) ?x35559) ?x35232) ?x35235) ?x35238) ?x35241) ?x35244)))
 (let ((?x35571 (- (- (- (- ?x35565 ?x35247) ?x35250) (* (* 1.0 l_0_9_74) l_0_9_94)) (* (* 1.0 l_0_9_75) l_0_9_95))))
 (= ?x35571 0.0))))))))))))))))))))))))
(assert
 (let ((?x35679 (* l_0_9_288 l_0_9_288)))
 (let ((?x35677 (* l_0_9_287 l_0_9_287)))
 (let ((?x35675 (* l_0_9_286 l_0_9_286)))
 (let ((?x35673 (* l_0_9_285 l_0_9_285)))
 (let ((?x35671 (* l_0_9_284 l_0_9_284)))
 (let ((?x35669 (* l_0_9_283 l_0_9_283)))
 (let ((?x35667 (* l_0_9_282 l_0_9_282)))
 (let ((?x35665 (* l_0_9_281 l_0_9_281)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29551 (* ?x28999 l_0_9_174)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x35641 (* ?x29215 l_0_9_173)))
 (let ((?x35636 (- (* (* (- 1.0) l_0_9_101) l_0_9_74) (* (* 1.0 l_0_9_102) l_0_9_75))))
 (let ((?x35640 (+ (+ ?x35636 (* (* 1.0 l_0_9_110) l_0_9_137)) (* (* 1.0 l_0_9_111) l_0_9_138))))
 (let ((?x35649 (- (- (- (- ?x35640 ?x35641) ?x29551) (* (* 2.0 l_0_9_238) l_0_9_245)) (* (* 2.0 l_0_9_239) l_0_9_246))))
 (let ((?x35655 (- (- ?x35649 (* (* 2.0 l_0_9_240) l_0_9_247)) (* (* 2.0 l_0_9_241) l_0_9_248))))
 (let ((?x35661 (- (- ?x35655 (* (* 2.0 l_0_9_242) l_0_9_249)) (* (* 2.0 l_0_9_243) l_0_9_250))))
 (let ((?x35670 (- (- (- (- ?x35661 (* (* 2.0 l_0_9_244) l_0_9_251)) ?x35665) ?x35667) ?x35669)))
 (= (- (- (- (- (- ?x35670 ?x35671) ?x35673) ?x35675) ?x35677) ?x35679) 0.0))))))))))))))))))))
(assert
 (let ((?x30079 (* l_0_9_154 l_0_9_154)))
 (let ((?x30077 (* l_0_9_153 l_0_9_153)))
 (let ((?x30075 (* l_0_9_152 l_0_9_152)))
 (let ((?x30073 (* l_0_9_151 l_0_9_151)))
 (let ((?x35767 (+ (* (/ 1.0 2.0) (* l_0_9_115 l_0_9_115)) (* (/ 1.0 2.0) (* l_0_9_116 l_0_9_116)))))
 (let ((?x35771 (+ (+ ?x35767 (* (/ 1.0 2.0) (* l_0_9_117 l_0_9_117))) (* (/ 1.0 2.0) (* l_0_9_118 l_0_9_118)))))
 (let ((?x35778 (- (- (- (- (- ?x35771 ?x30073) ?x30075) ?x30077) ?x30079) (* (* (/ 1.0 2.0) l_0_9_79) l_0_9_79))))
 (let ((?x35784 (- (- ?x35778 (* (* (/ 1.0 2.0) l_0_9_80) l_0_9_80)) (* (* (/ 1.0 2.0) l_0_9_81) l_0_9_81))))
 (= (- ?x35784 (* (* (/ 1.0 2.0) l_0_9_82) l_0_9_82)) 0.0))))))))))
(assert
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30158 (* ?x30157 l_0_9_158)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30155 (* ?x30154 l_0_9_157)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30152 (* ?x30151 l_0_9_156)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30149 (* ?x30148 l_0_9_155)))
 (let ((?x35828 (+ (* (* 1.0 l_0_9_115) l_0_9_119) (* (* 1.0 l_0_9_116) l_0_9_120))))
 (let ((?x35834 (+ (+ ?x35828 (* (* 1.0 l_0_9_117) l_0_9_121)) (* (* 1.0 l_0_9_118) l_0_9_122))))
 (let ((?x35841 (- (- (- (- (- ?x35834 ?x30149) ?x30152) ?x30155) ?x30158) (* (* 1.0 l_0_9_79) l_0_9_83))))
 (let ((?x35847 (- (- ?x35841 (* (* 1.0 l_0_9_80) l_0_9_84)) (* (* 1.0 l_0_9_81) l_0_9_85))))
 (= (- ?x35847 (* (* 1.0 l_0_9_82) l_0_9_86)) 0.0))))))))))))))
(assert
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30244 (* ?x30157 l_0_9_163)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30240 (* ?x30154 l_0_9_162)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30236 (* ?x30151 l_0_9_161)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30232 (* ?x30148 l_0_9_160)))
 (let ((?x35881 (+ (* (* 1.0 l_0_9_115) l_0_9_124) (* (* 1.0 l_0_9_116) l_0_9_125))))
 (let ((?x35885 (+ (+ ?x35881 (* (* 1.0 l_0_9_117) l_0_9_126)) (* (* 1.0 l_0_9_118) l_0_9_127))))
 (let ((?x35891 (- (- (- (- (- ?x35885 ?x30232) ?x30236) ?x30240) ?x30244) (* (* 1.0 l_0_9_79) l_0_9_88))))
 (let ((?x35895 (- (- ?x35891 (* (* 1.0 l_0_9_80) l_0_9_89)) (* (* 1.0 l_0_9_81) l_0_9_90))))
 (= (- ?x35895 (* (* 1.0 l_0_9_82) l_0_9_91)) 0.0))))))))))))))
(assert
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30363 (* ?x30157 l_0_9_169)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30361 (* ?x30154 l_0_9_168)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30359 (* ?x30151 l_0_9_167)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30357 (* ?x30148 l_0_9_166)))
 (let ((?x35928 (+ (* (* 1.0 l_0_9_115) l_0_9_130) (* (* 1.0 l_0_9_116) l_0_9_131))))
 (let ((?x35932 (+ (+ ?x35928 (* (* 1.0 l_0_9_117) l_0_9_132)) (* (* 1.0 l_0_9_118) l_0_9_133))))
 (let ((?x35938 (- (- (- (- (- ?x35932 ?x30357) ?x30359) ?x30361) ?x30363) (* (* 1.0 l_0_9_79) l_0_9_94))))
 (let ((?x35942 (- (- ?x35938 (* (* 1.0 l_0_9_80) l_0_9_95)) (* (* 1.0 l_0_9_81) l_0_9_96))))
 (= (- ?x35942 (* (* 1.0 l_0_9_82) l_0_9_97)) 0.0))))))))))))))
(assert
 (let ((?x30157 (* 2.0 l_0_9_154)))
 (let ((?x30503 (* ?x30157 l_0_9_176)))
 (let ((?x30154 (* 2.0 l_0_9_153)))
 (let ((?x30501 (* ?x30154 l_0_9_175)))
 (let ((?x30151 (* 2.0 l_0_9_152)))
 (let ((?x30499 (* ?x30151 l_0_9_174)))
 (let ((?x30148 (* 2.0 l_0_9_151)))
 (let ((?x30497 (* ?x30148 l_0_9_173)))
 (let ((?x35975 (- (* (* (- 1.0) l_0_9_101) l_0_9_79) (* (* 1.0 l_0_9_102) l_0_9_80))))
 (let ((?x35980 (- (- ?x35975 (* (* 1.0 l_0_9_103) l_0_9_81)) (* (* 1.0 l_0_9_104) l_0_9_82))))
 (let ((?x35984 (+ (+ ?x35980 (* (* 1.0 l_0_9_115) l_0_9_137)) (* (* 1.0 l_0_9_116) l_0_9_138))))
 (let ((?x35988 (+ (+ ?x35984 (* (* 1.0 l_0_9_117) l_0_9_139)) (* (* 1.0 l_0_9_118) l_0_9_140))))
 (= (- (- (- (- ?x35988 ?x30497) ?x30499) ?x30501) ?x30503) 0.0))))))))))))))
(assert
 (let ((?x30614 (* l_0_9_159 l_0_9_159)))
 (let ((?x30612 (* l_0_9_158 l_0_9_158)))
 (let ((?x30610 (* l_0_9_157 l_0_9_157)))
 (let ((?x30608 (* l_0_9_156 l_0_9_156)))
 (let ((?x30606 (* l_0_9_155 l_0_9_155)))
 (let ((?x36022 (+ (* (/ 1.0 2.0) (* l_0_9_119 l_0_9_119)) (* (/ 1.0 2.0) (* l_0_9_120 l_0_9_120)))))
 (let ((?x36028 (+ (+ ?x36022 (* (/ 1.0 2.0) (* l_0_9_121 l_0_9_121))) (* (/ 1.0 2.0) (* l_0_9_122 l_0_9_122)))))
 (let ((?x36034 (- (- (- (+ ?x36028 (* (/ 1.0 2.0) (* l_0_9_123 l_0_9_123))) ?x30606) ?x30608) ?x30610)))
 (let ((?x36042 (- (- (- (- ?x36034 ?x30612) ?x30614) (* (* (/ 1.0 2.0) l_0_9_83) l_0_9_83)) (* (* (/ 1.0 2.0) l_0_9_84) l_0_9_84))))
 (let ((?x36048 (- (- ?x36042 (* (* (/ 1.0 2.0) l_0_9_85) l_0_9_85)) (* (* (/ 1.0 2.0) l_0_9_86) l_0_9_86))))
 (= (- ?x36048 (* (* (/ 1.0 2.0) l_0_9_87) l_0_9_87)) 0.0))))))))))))
(assert
 (let ((?x30702 (* 2.0 l_0_9_159)))
 (let ((?x30703 (* ?x30702 l_0_9_164)))
 (let ((?x30699 (* 2.0 l_0_9_158)))
 (let ((?x30700 (* ?x30699 l_0_9_163)))
 (let ((?x30696 (* 2.0 l_0_9_157)))
 (let ((?x30697 (* ?x30696 l_0_9_162)))
 (let ((?x30693 (* 2.0 l_0_9_156)))
 (let ((?x30694 (* ?x30693 l_0_9_161)))
 (let ((?x30690 (* 2.0 l_0_9_155)))
 (let ((?x30691 (* ?x30690 l_0_9_160)))
 (let ((?x36105 (+ (* (* 1.0 l_0_9_119) l_0_9_124) (* (* 1.0 l_0_9_120) l_0_9_125))))
 (let ((?x36111 (+ (+ ?x36105 (* (* 1.0 l_0_9_121) l_0_9_126)) (* (* 1.0 l_0_9_122) l_0_9_127))))
 (let ((?x36117 (- (- (- (+ ?x36111 (* (* 1.0 l_0_9_123) l_0_9_128)) ?x30691) ?x30694) ?x30697)))
 (let ((?x36125 (- (- (- (- ?x36117 ?x30700) ?x30703) (* (* 1.0 l_0_9_83) l_0_9_88)) (* (* 1.0 l_0_9_84) l_0_9_89))))
 (let ((?x36131 (- (- ?x36125 (* (* 1.0 l_0_9_85) l_0_9_90)) (* (* 1.0 l_0_9_86) l_0_9_91))))
 (= (- ?x36131 (* (* 1.0 l_0_9_87) l_0_9_92)) 0.0)))))))))))))))))
(assert
 (let ((?x30702 (* 2.0 l_0_9_159)))
 (let ((?x30841 (* ?x30702 l_0_9_170)))
 (let ((?x30699 (* 2.0 l_0_9_158)))
 (let ((?x30839 (* ?x30699 l_0_9_169)))
 (let ((?x30696 (* 2.0 l_0_9_157)))
 (let ((?x30837 (* ?x30696 l_0_9_168)))
 (let ((?x30693 (* 2.0 l_0_9_156)))
 (let ((?x30835 (* ?x30693 l_0_9_167)))
 (let ((?x30690 (* 2.0 l_0_9_155)))
 (let ((?x30833 (* ?x30690 l_0_9_166)))
 (let ((?x36181 (+ (* (* 1.0 l_0_9_119) l_0_9_130) (* (* 1.0 l_0_9_120) l_0_9_131))))
 (let ((?x36185 (+ (+ ?x36181 (* (* 1.0 l_0_9_121) l_0_9_132)) (* (* 1.0 l_0_9_122) l_0_9_133))))
 (let ((?x36190 (- (- (- (+ ?x36185 (* (* 1.0 l_0_9_123) l_0_9_134)) ?x30833) ?x30835) ?x30837)))
 (let ((?x36196 (- (- (- (- ?x36190 ?x30839) ?x30841) (* (* 1.0 l_0_9_83) l_0_9_94)) (* (* 1.0 l_0_9_84) l_0_9_95))))
 (let ((?x36200 (- (- ?x36196 (* (* 1.0 l_0_9_85) l_0_9_96)) (* (* 1.0 l_0_9_86) l_0_9_97))))
 (= (- ?x36200 (* (* 1.0 l_0_9_87) l_0_9_98)) 0.0)))))))))))))))))
(assert
 (let ((?x30702 (* 2.0 l_0_9_159)))
 (let ((?x31002 (* ?x30702 l_0_9_177)))
 (let ((?x30699 (* 2.0 l_0_9_158)))
 (let ((?x31000 (* ?x30699 l_0_9_176)))
 (let ((?x30696 (* 2.0 l_0_9_157)))
 (let ((?x30998 (* ?x30696 l_0_9_175)))
 (let ((?x30693 (* 2.0 l_0_9_156)))
 (let ((?x30996 (* ?x30693 l_0_9_174)))
 (let ((?x30690 (* 2.0 l_0_9_155)))
 (let ((?x30994 (* ?x30690 l_0_9_173)))
 (let ((?x36249 (- (* (* (- 1.0) l_0_9_101) l_0_9_83) (* (* 1.0 l_0_9_102) l_0_9_84))))
 (let ((?x36253 (- (- ?x36249 (* (* 1.0 l_0_9_103) l_0_9_85)) (* (* 1.0 l_0_9_104) l_0_9_86))))
 (let ((?x36258 (+ (- ?x36253 (* (* 1.0 l_0_9_105) l_0_9_87)) (* (* 1.0 l_0_9_119) l_0_9_137))))
 (let ((?x36262 (+ (+ ?x36258 (* (* 1.0 l_0_9_120) l_0_9_138)) (* (* 1.0 l_0_9_121) l_0_9_139))))
 (let ((?x36266 (+ (+ ?x36262 (* (* 1.0 l_0_9_122) l_0_9_140)) (* (* 1.0 l_0_9_123) l_0_9_141))))
 (= (- (- (- (- (- ?x36266 ?x30994) ?x30996) ?x30998) ?x31000) ?x31002) 0.0)))))))))))))))))
(assert
 (let ((?x31116 (* l_0_9_165 l_0_9_165)))
 (let ((?x31101 (* l_0_9_164 l_0_9_164)))
 (let ((?x31098 (* l_0_9_163 l_0_9_163)))
 (let ((?x31094 (* l_0_9_162 l_0_9_162)))
 (let ((?x31090 (* l_0_9_161 l_0_9_161)))
 (let ((?x31086 (* l_0_9_160 l_0_9_160)))
 (let ((?x36317 (+ (* (/ 1.0 2.0) (* l_0_9_124 l_0_9_124)) (* (/ 1.0 2.0) (* l_0_9_125 l_0_9_125)))))
 (let ((?x36323 (+ (+ ?x36317 (* (/ 1.0 2.0) (* l_0_9_126 l_0_9_126))) (* (/ 1.0 2.0) (* l_0_9_127 l_0_9_127)))))
 (let ((?x36329 (+ (+ ?x36323 (* (/ 1.0 2.0) (* l_0_9_128 l_0_9_128))) (* (/ 1.0 2.0) (* l_0_9_129 l_0_9_129)))))
 (let ((?x36338 (- (- (- (- (- (- (- ?x36329 ?x31086) ?x31090) ?x31094) ?x31098) ?x31101) ?x31116) (* (* (/ 1.0 2.0) l_0_9_88) l_0_9_88))))
 (let ((?x36344 (- (- ?x36338 (* (* (/ 1.0 2.0) l_0_9_89) l_0_9_89)) (* (* (/ 1.0 2.0) l_0_9_90) l_0_9_90))))
 (let ((?x36350 (- (- ?x36344 (* (* (/ 1.0 2.0) l_0_9_91) l_0_9_91)) (* (* (/ 1.0 2.0) l_0_9_92) l_0_9_92))))
 (= (- ?x36350 (* (* (/ 1.0 2.0) l_0_9_93) l_0_9_93)) 0.0))))))))))))))
(assert
 (let ((?x31231 (* 2.0 l_0_9_165)))
 (let ((?x31232 (* ?x31231 l_0_9_171)))
 (let ((?x31228 (* 2.0 l_0_9_164)))
 (let ((?x31229 (* ?x31228 l_0_9_170)))
 (let ((?x31225 (* 2.0 l_0_9_163)))
 (let ((?x31226 (* ?x31225 l_0_9_169)))
 (let ((?x31222 (* 2.0 l_0_9_162)))
 (let ((?x31223 (* ?x31222 l_0_9_168)))
 (let ((?x31219 (* 2.0 l_0_9_161)))
 (let ((?x31220 (* ?x31219 l_0_9_167)))
 (let ((?x31216 (* 2.0 l_0_9_160)))
 (let ((?x31217 (* ?x31216 l_0_9_166)))
 (let ((?x36416 (+ (* (* 1.0 l_0_9_124) l_0_9_130) (* (* 1.0 l_0_9_125) l_0_9_131))))
 (let ((?x36422 (+ (+ ?x36416 (* (* 1.0 l_0_9_126) l_0_9_132)) (* (* 1.0 l_0_9_127) l_0_9_133))))
 (let ((?x36428 (+ (+ ?x36422 (* (* 1.0 l_0_9_128) l_0_9_134)) (* (* 1.0 l_0_9_129) l_0_9_135))))
 (let ((?x36437 (- (- (- (- (- (- (- ?x36428 ?x31217) ?x31220) ?x31223) ?x31226) ?x31229) ?x31232) (* (* 1.0 l_0_9_88) l_0_9_94))))
 (let ((?x36443 (- (- ?x36437 (* (* 1.0 l_0_9_89) l_0_9_95)) (* (* 1.0 l_0_9_90) l_0_9_96))))
 (let ((?x36449 (- (- ?x36443 (* (* 1.0 l_0_9_91) l_0_9_97)) (* (* 1.0 l_0_9_92) l_0_9_98))))
 (= (- ?x36449 (* (* 1.0 l_0_9_93) l_0_9_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x31231 (* 2.0 l_0_9_165)))
 (let ((?x31441 (* ?x31231 l_0_9_178)))
 (let ((?x31228 (* 2.0 l_0_9_164)))
 (let ((?x31439 (* ?x31228 l_0_9_177)))
 (let ((?x31225 (* 2.0 l_0_9_163)))
 (let ((?x31437 (* ?x31225 l_0_9_176)))
 (let ((?x31222 (* 2.0 l_0_9_162)))
 (let ((?x31435 (* ?x31222 l_0_9_175)))
 (let ((?x31219 (* 2.0 l_0_9_161)))
 (let ((?x31433 (* ?x31219 l_0_9_174)))
 (let ((?x31216 (* 2.0 l_0_9_160)))
 (let ((?x31431 (* ?x31216 l_0_9_173)))
 (let ((?x36507 (- (* (* (- 1.0) l_0_9_101) l_0_9_88) (* (* 1.0 l_0_9_102) l_0_9_89))))
 (let ((?x36511 (- (- ?x36507 (* (* 1.0 l_0_9_103) l_0_9_90)) (* (* 1.0 l_0_9_104) l_0_9_91))))
 (let ((?x36516 (- (- ?x36511 (* (* 1.0 l_0_9_105) l_0_9_92)) (* (* 1.0 l_0_9_106) l_0_9_93))))
 (let ((?x36520 (+ (+ ?x36516 (* (* 1.0 l_0_9_124) l_0_9_137)) (* (* 1.0 l_0_9_125) l_0_9_138))))
 (let ((?x36524 (+ (+ ?x36520 (* (* 1.0 l_0_9_126) l_0_9_139)) (* (* 1.0 l_0_9_127) l_0_9_140))))
 (let ((?x36528 (+ (+ ?x36524 (* (* 1.0 l_0_9_128) l_0_9_141)) (* (* 1.0 l_0_9_129) l_0_9_142))))
 (= (- (- (- (- (- (- ?x36528 ?x31431) ?x31433) ?x31435) ?x31437) ?x31439) ?x31441) 0.0))))))))))))))))))))
(assert
 (let ((?x31601 (* l_0_9_172 l_0_9_172)))
 (let ((?x31599 (* l_0_9_171 l_0_9_171)))
 (let ((?x31597 (* l_0_9_170 l_0_9_170)))
 (let ((?x31595 (* l_0_9_169 l_0_9_169)))
 (let ((?x31593 (* l_0_9_168 l_0_9_168)))
 (let ((?x31591 (* l_0_9_167 l_0_9_167)))
 (let ((?x31589 (* l_0_9_166 l_0_9_166)))
 (let ((?x36588 (+ (* (* (- (/ 1.0 2.0)) l_0_9_100) l_0_9_100) (* (/ 1.0 2.0) (* l_0_9_130 l_0_9_130)))))
 (let ((?x36594 (+ (+ ?x36588 (* (/ 1.0 2.0) (* l_0_9_131 l_0_9_131))) (* (/ 1.0 2.0) (* l_0_9_132 l_0_9_132)))))
 (let ((?x36600 (+ (+ ?x36594 (* (/ 1.0 2.0) (* l_0_9_133 l_0_9_133))) (* (/ 1.0 2.0) (* l_0_9_134 l_0_9_134)))))
 (let ((?x36606 (+ (+ ?x36600 (* (/ 1.0 2.0) (* l_0_9_135 l_0_9_135))) (* (/ 1.0 2.0) (* l_0_9_136 l_0_9_136)))))
 (let ((?x36613 (- (- (- (- (- (- (- ?x36606 ?x31589) ?x31591) ?x31593) ?x31595) ?x31597) ?x31599) ?x31601)))
 (let ((?x36619 (- (- ?x36613 (* (* (/ 1.0 2.0) l_0_9_94) l_0_9_94)) (* (* (/ 1.0 2.0) l_0_9_95) l_0_9_95))))
 (let ((?x36625 (- (- ?x36619 (* (* (/ 1.0 2.0) l_0_9_96) l_0_9_96)) (* (* (/ 1.0 2.0) l_0_9_97) l_0_9_97))))
 (let ((?x36631 (- (- ?x36625 (* (* (/ 1.0 2.0) l_0_9_98) l_0_9_98)) (* (* (/ 1.0 2.0) l_0_9_99) l_0_9_99))))
 (= ?x36631 0.0)))))))))))))))))
(assert
 (let ((?x31773 (* (* 2.0 l_0_9_172) l_0_9_179)))
 (let ((?x31770 (* (* 2.0 l_0_9_171) l_0_9_178)))
 (let ((?x31767 (* (* 2.0 l_0_9_170) l_0_9_177)))
 (let ((?x31764 (* (* 2.0 l_0_9_169) l_0_9_176)))
 (let ((?x31761 (* (* 2.0 l_0_9_168) l_0_9_175)))
 (let ((?x31758 (* (* 2.0 l_0_9_167) l_0_9_174)))
 (let ((?x31755 (* (* 2.0 l_0_9_166) l_0_9_173)))
 (let ((?x36700 (- (* (* (- 1.0) l_0_9_100) l_0_9_107) (* (* 1.0 l_0_9_101) l_0_9_94))))
 (let ((?x36704 (- (- ?x36700 (* (* 1.0 l_0_9_102) l_0_9_95)) (* (* 1.0 l_0_9_103) l_0_9_96))))
 (let ((?x36708 (- (- ?x36704 (* (* 1.0 l_0_9_104) l_0_9_97)) (* (* 1.0 l_0_9_105) l_0_9_98))))
 (let ((?x36713 (+ (- ?x36708 (* (* 1.0 l_0_9_106) l_0_9_99)) (* (* 1.0 l_0_9_130) l_0_9_137))))
 (let ((?x36719 (+ (+ ?x36713 (* (* 1.0 l_0_9_131) l_0_9_138)) (* (* 1.0 l_0_9_132) l_0_9_139))))
 (let ((?x36725 (+ (+ ?x36719 (* (* 1.0 l_0_9_133) l_0_9_140)) (* (* 1.0 l_0_9_134) l_0_9_141))))
 (let ((?x36731 (+ (+ ?x36725 (* (* 1.0 l_0_9_135) l_0_9_142)) (* (* 1.0 l_0_9_136) l_0_9_143))))
 (let ((?x36738 (- (- (- (- (- (- (- ?x36731 ?x31755) ?x31758) ?x31761) ?x31764) ?x31767) ?x31770) ?x31773)))
 (= ?x36738 0.0)))))))))))))))))
(assert
 (let ((?x31989 (* l_0_9_180 l_0_9_180)))
 (let ((?x31987 (* l_0_9_179 l_0_9_179)))
 (let ((?x31985 (* l_0_9_178 l_0_9_178)))
 (let ((?x31983 (* l_0_9_177 l_0_9_177)))
 (let ((?x31962 (* l_0_9_176 l_0_9_176)))
 (let ((?x31958 (* l_0_9_175 l_0_9_175)))
 (let ((?x31954 (* l_0_9_174 l_0_9_174)))
 (let ((?x32041 (* l_0_9_173 l_0_9_173)))
 (let ((?x36786 (- (* (* (- (/ 1.0 2.0)) l_0_9_101) l_0_9_101) (* (* (/ 1.0 2.0) l_0_9_102) l_0_9_102))))
 (let ((?x36792 (- (- ?x36786 (* (* (/ 1.0 2.0) l_0_9_103) l_0_9_103)) (* (* (/ 1.0 2.0) l_0_9_104) l_0_9_104))))
 (let ((?x36798 (- (- ?x36792 (* (* (/ 1.0 2.0) l_0_9_105) l_0_9_105)) (* (* (/ 1.0 2.0) l_0_9_106) l_0_9_106))))
 (let ((?x36804 (- (- ?x36798 (* (* (/ 1.0 2.0) l_0_9_107) l_0_9_107)) (* (* (/ 1.0 2.0) l_0_9_108) l_0_9_108))))
 (let ((?x36810 (+ (+ ?x36804 (* (/ 1.0 2.0) (* l_0_9_137 l_0_9_137))) (* (/ 1.0 2.0) (* l_0_9_138 l_0_9_138)))))
 (let ((?x36816 (+ (+ ?x36810 (* (/ 1.0 2.0) (* l_0_9_139 l_0_9_139))) (* (/ 1.0 2.0) (* l_0_9_140 l_0_9_140)))))
 (let ((?x36822 (+ (+ ?x36816 (* (/ 1.0 2.0) (* l_0_9_141 l_0_9_141))) (* (/ 1.0 2.0) (* l_0_9_142 l_0_9_142)))))
 (let ((?x36828 (+ (+ ?x36822 (* (/ 1.0 2.0) (* l_0_9_143 l_0_9_143))) (* (/ 1.0 2.0) (* l_0_9_144 l_0_9_144)))))
 (let ((?x36835 (- (- (- (- (- (- (- ?x36828 ?x32041) ?x31954) ?x31958) ?x31962) ?x31983) ?x31985) ?x31987)))
 (= (- ?x36835 ?x31989) 0.0)))))))))))))))))))
(assert
 (let ((?x34832 (* l_0_9_73 l_0_9_73)))
 (let ((?x36913 (+ (- (* (- l_0_9_109) l_0_9_109) (* l_0_9_289 l_0_9_289)) ?x34832)))
 (= ?x36913 0.0))))
(assert
 (let ((?x36925 (* l_0_9_325 l_0_9_325)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32149 (* ?x32110 l_0_9_290)))
 (let ((?x36928 (+ (- (- (* (* (- 2.0) l_0_9_109) l_0_9_110) ?x32149) ?x36925) (* (* 2.0 l_0_9_73) l_0_9_74))))
 (= ?x36928 0.0))))))
(assert
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32221 (* ?x32110 l_0_9_292)))
 (let ((?x36943 (+ (- (* (* (- 2.0) l_0_9_109) l_0_9_112) ?x32221) (* (* 2.0 l_0_9_73) l_0_9_76))))
 (= ?x36943 0.0)))))
(assert
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32363 (* ?x32110 l_0_9_299)))
 (let ((?x36955 (- (+ (* (* (- 2.0) l_0_9_109) l_0_9_119) (* l_0_9_253 l_0_9_253)) ?x32363)))
 (= (+ ?x36955 (* (* 2.0 l_0_9_73) l_0_9_83)) 0.0)))))
(assert
 (let ((?x32113 (* l_0_9_289 l_0_9_289)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32474 (* ?x32110 l_0_9_304)))
 (let ((?x28719 (* l_0_9_181 l_0_9_181)))
 (let ((?x36970 (- (+ (* (* (- 2.0) l_0_9_109) l_0_9_124) (* l_0_9_145 l_0_9_145)) ?x28719)))
 (= (+ (+ (- ?x36970 ?x32474) ?x32113) (* (* 2.0 l_0_9_73) l_0_9_88)) 0.0)))))))
(assert
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32578 (* ?x32110 l_0_9_310)))
 (let ((?x36987 (- (- (* (* (- 2.0) l_0_9_109) l_0_9_130) (* l_0_9_253 l_0_9_253)) ?x32578)))
 (= (+ ?x36987 (* (* 2.0 l_0_9_73) l_0_9_94)) 0.0)))))
(assert
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32689 (* ?x32110 l_0_9_317)))
 (let ((?x37002 (* l_0_9_217 l_0_9_217)))
 (let ((?x37001 (- (* (* 2.0 l_0_9_101) l_0_9_73) (* (* 2.0 l_0_9_109) l_0_9_137))))
 (= (- (- ?x37001 ?x37002) ?x32689) 0.0))))))
(assert
 (let ((?x35186 (* l_0_9_75 l_0_9_75)))
 (let ((?x35180 (* l_0_9_74 l_0_9_74)))
 (let ((?x28677 (* l_0_9_291 l_0_9_291)))
 (let ((?x28669 (* l_0_9_290 l_0_9_290)))
 (let ((?x37023 (- (- (* (- l_0_9_110) l_0_9_110) (* l_0_9_111 l_0_9_111)) ?x28669)))
 (let ((?x37028 (+ (+ (- (- ?x37023 ?x28677) (* (* 2.0 l_0_9_325) l_0_9_326)) ?x35180) ?x35186)))
 (= ?x37028 0.0))))))))
(assert
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32777 (* ?x32154 l_0_9_293)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32775 (* ?x32151 l_0_9_292)))
 (let ((?x37051 (- (* (* (- 2.0) l_0_9_110) l_0_9_112) (* (* 2.0 l_0_9_111) l_0_9_113))))
 (let ((?x37057 (+ (- (- (- ?x37051 ?x32775) ?x32777) (* (* 2.0 l_0_9_325) l_0_9_328)) (* (* 2.0 l_0_9_74) l_0_9_76))))
 (= (+ ?x37057 (* (* 2.0 l_0_9_75) l_0_9_77)) 0.0))))))))
(assert
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32877 (* ?x32154 l_0_9_300)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32875 (* ?x32151 l_0_9_299)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x37085 (* ?x32360 l_0_9_254)))
 (let ((?x37079 (- (* (* (- 2.0) l_0_9_110) l_0_9_119) (* (* 2.0 l_0_9_111) l_0_9_120))))
 (let ((?x37090 (- (- (- (+ ?x37079 ?x37085) ?x32875) ?x32877) (* (* 2.0 l_0_9_325) l_0_9_335))))
 (let ((?x37094 (+ (+ ?x37090 (* (* 2.0 l_0_9_74) l_0_9_83)) (* (* 2.0 l_0_9_75) l_0_9_84))))
 (= ?x37094 0.0)))))))))))
(assert
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32954 (* ?x32154 l_0_9_305)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32951 (* ?x32151 l_0_9_304)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32149 (* ?x32110 l_0_9_290)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28758 (* ?x28757 l_0_9_182)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28755 (* ?x28754 l_0_9_146)))
 (let ((?x37117 (- (* (* (- 2.0) l_0_9_110) l_0_9_124) (* (* 2.0 l_0_9_111) l_0_9_125))))
 (let ((?x37130 (- (- (- (+ (- (+ ?x37117 ?x28755) ?x28758) ?x32149) ?x32951) ?x32954) (* (* 2.0 l_0_9_325) l_0_9_340))))
 (let ((?x37134 (+ (+ ?x37130 (* (* 2.0 l_0_9_74) l_0_9_88)) (* (* 2.0 l_0_9_75) l_0_9_89))))
 (= ?x37134 0.0)))))))))))))))
(assert
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x33026 (* ?x32154 l_0_9_311)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x33024 (* ?x32151 l_0_9_310)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x37085 (* ?x32360 l_0_9_254)))
 (let ((?x37163 (- (* (* (- 2.0) l_0_9_110) l_0_9_130) (* (* 2.0 l_0_9_111) l_0_9_131))))
 (let ((?x37168 (- (- (- (- ?x37163 ?x37085) ?x33024) ?x33026) (* (* 2.0 l_0_9_325) l_0_9_346))))
 (let ((?x37172 (+ (+ ?x37168 (* (* 2.0 l_0_9_74) l_0_9_94)) (* (* 2.0 l_0_9_75) l_0_9_95))))
 (= ?x37172 0.0)))))))))))
(assert
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x33097 (* ?x32154 l_0_9_318)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x33095 (* ?x32151 l_0_9_317)))
 (let ((?x37195 (+ (* (* 2.0 l_0_9_101) l_0_9_74) (* (* 2.0 l_0_9_102) l_0_9_75))))
 (let ((?x37204 (- (- ?x37195 (* (* 2.0 l_0_9_110) l_0_9_137)) (* (* 2.0 l_0_9_111) l_0_9_138))))
 (let ((?x37210 (- (- (- (- ?x37204 (* (* 2.0 l_0_9_217) l_0_9_218)) ?x33095) ?x33097) (* (* 2.0 l_0_9_325) l_0_9_353))))
 (= ?x37210 0.0)))))))))
(assert
 (let ((?x30020 (* l_0_9_78 l_0_9_78)))
 (let ((?x30014 (* l_0_9_77 l_0_9_77)))
 (let ((?x30008 (* l_0_9_76 l_0_9_76)))
 (let ((?x33173 (* l_0_9_294 l_0_9_294)))
 (let ((?x33171 (* l_0_9_293 l_0_9_293)))
 (let ((?x33183 (* l_0_9_292 l_0_9_292)))
 (let ((?x29900 (* l_0_9_114 l_0_9_114)))
 (let ((?x37248 (- (- (* (- l_0_9_112) l_0_9_112) (* l_0_9_113 l_0_9_113)) ?x29900)))
 (= (+ (+ (+ (- (- (- ?x37248 ?x33183) ?x33171) ?x33173) ?x30008) ?x30014) ?x30020) 0.0))))))))))
(assert
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x33240 (* ?x28769 l_0_9_301)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x33238 (* ?x28766 l_0_9_300)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x33236 (* ?x28763 l_0_9_299)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x37280 (* ?x32360 l_0_9_256)))
 (let ((?x37277 (- (* (* (- 2.0) l_0_9_112) l_0_9_119) (* (* 2.0 l_0_9_113) l_0_9_120))))
 (let ((?x37283 (- (- (+ (- ?x37277 (* (* 2.0 l_0_9_114) l_0_9_121)) ?x37280) ?x33236) ?x33238)))
 (let ((?x37288 (+ (+ (- ?x37283 ?x33240) (* (* 2.0 l_0_9_76) l_0_9_83)) (* (* 2.0 l_0_9_77) l_0_9_84))))
 (= (+ ?x37288 (* (* 2.0 l_0_9_78) l_0_9_85)) 0.0)))))))))))))
(assert
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x33299 (* ?x28769 l_0_9_306)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x33296 (* ?x28766 l_0_9_305)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x33293 (* ?x28763 l_0_9_304)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32221 (* ?x32110 l_0_9_292)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28848 (* ?x28757 l_0_9_184)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28838 (* ?x28754 l_0_9_148)))
 (let ((?x37314 (- (* (* (- 2.0) l_0_9_112) l_0_9_124) (* (* 2.0 l_0_9_113) l_0_9_125))))
 (let ((?x37326 (+ (- (+ (- ?x37314 (* (* 2.0 l_0_9_114) l_0_9_126)) ?x28838) ?x28848) ?x32221)))
 (let ((?x37331 (+ (- (- (- ?x37326 ?x33293) ?x33296) ?x33299) (* (* 2.0 l_0_9_76) l_0_9_88))))
 (let ((?x37335 (+ (+ ?x37331 (* (* 2.0 l_0_9_77) l_0_9_89)) (* (* 2.0 l_0_9_78) l_0_9_90))))
 (= ?x37335 0.0))))))))))))))))))
(assert
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x33358 (* ?x28769 l_0_9_312)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x33356 (* ?x28766 l_0_9_311)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x33354 (* ?x28763 l_0_9_310)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x37280 (* ?x32360 l_0_9_256)))
 (let ((?x37367 (- (* (* (- 2.0) l_0_9_112) l_0_9_130) (* (* 2.0 l_0_9_113) l_0_9_131))))
 (let ((?x37372 (- (- (- (- ?x37367 (* (* 2.0 l_0_9_114) l_0_9_132)) ?x37280) ?x33354) ?x33356)))
 (let ((?x37377 (+ (+ (- ?x37372 ?x33358) (* (* 2.0 l_0_9_76) l_0_9_94)) (* (* 2.0 l_0_9_77) l_0_9_95))))
 (= (+ ?x37377 (* (* 2.0 l_0_9_78) l_0_9_96)) 0.0)))))))))))))
(assert
 (let ((?x36088 (* l_0_9_87 l_0_9_87)))
 (let ((?x36082 (* l_0_9_86 l_0_9_86)))
 (let ((?x36076 (* l_0_9_85 l_0_9_85)))
 (let ((?x36070 (* l_0_9_84 l_0_9_84)))
 (let ((?x36064 (* l_0_9_83 l_0_9_83)))
 (let ((?x33679 (* l_0_9_303 l_0_9_303)))
 (let ((?x33677 (* l_0_9_302 l_0_9_302)))
 (let ((?x33675 (* l_0_9_301 l_0_9_301)))
 (let ((?x33673 (* l_0_9_300 l_0_9_300)))
 (let ((?x33671 (* l_0_9_299 l_0_9_299)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x37413 (* ?x32360 l_0_9_263)))
 (let ((?x36029 (* l_0_9_123 l_0_9_123)))
 (let ((?x36026 (* l_0_9_122 l_0_9_122)))
 (let ((?x36023 (* l_0_9_121 l_0_9_121)))
 (let ((?x37404 (- (- (* (- l_0_9_119) l_0_9_119) (* l_0_9_120 l_0_9_120)) ?x36023)))
 (let ((?x37418 (- (- (- (- (+ (- (- ?x37404 ?x36026) ?x36029) ?x37413) ?x33671) ?x33673) ?x33675) ?x33677)))
 (= (+ (+ (+ (+ (+ (- ?x37418 ?x33679) ?x36064) ?x36070) ?x36076) ?x36082) ?x36088) 0.0)))))))))))))))))))
(assert
 (let ((?x33759 (* 2.0 l_0_9_303)))
 (let ((?x33760 (* ?x33759 l_0_9_308)))
 (let ((?x33756 (* 2.0 l_0_9_302)))
 (let ((?x33757 (* ?x33756 l_0_9_307)))
 (let ((?x33753 (* 2.0 l_0_9_301)))
 (let ((?x33754 (* ?x33753 l_0_9_306)))
 (let ((?x33750 (* 2.0 l_0_9_300)))
 (let ((?x33751 (* ?x33750 l_0_9_305)))
 (let ((?x33747 (* 2.0 l_0_9_299)))
 (let ((?x33748 (* ?x33747 l_0_9_304)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32363 (* ?x32110 l_0_9_299)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x37476 (* ?x32360 l_0_9_268)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28894 (* ?x28757 l_0_9_191)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28887 (* ?x28754 l_0_9_155)))
 (let ((?x37464 (- (* (* (- 2.0) l_0_9_119) l_0_9_124) (* (* 2.0 l_0_9_120) l_0_9_125))))
 (let ((?x37470 (- (- ?x37464 (* (* 2.0 l_0_9_121) l_0_9_126)) (* (* 2.0 l_0_9_122) l_0_9_127))))
 (let ((?x37477 (+ (- (+ (- ?x37470 (* (* 2.0 l_0_9_123) l_0_9_128)) ?x28887) ?x28894) ?x37476)))
 (let ((?x37486 (+ (- (- (- (- (- (+ ?x37477 ?x32363) ?x33748) ?x33751) ?x33754) ?x33757) ?x33760) (* (* 2.0 l_0_9_83) l_0_9_88))))
 (let ((?x37492 (+ (+ ?x37486 (* (* 2.0 l_0_9_84) l_0_9_89)) (* (* 2.0 l_0_9_85) l_0_9_90))))
 (let ((?x37498 (+ (+ ?x37492 (* (* 2.0 l_0_9_86) l_0_9_91)) (* (* 2.0 l_0_9_87) l_0_9_92))))
 (= ?x37498 0.0))))))))))))))))))))))))))
(assert
 (let ((?x33759 (* 2.0 l_0_9_303)))
 (let ((?x33870 (* ?x33759 l_0_9_314)))
 (let ((?x33756 (* 2.0 l_0_9_302)))
 (let ((?x33868 (* ?x33756 l_0_9_313)))
 (let ((?x33753 (* 2.0 l_0_9_301)))
 (let ((?x33866 (* ?x33753 l_0_9_312)))
 (let ((?x33750 (* 2.0 l_0_9_300)))
 (let ((?x33864 (* ?x33750 l_0_9_311)))
 (let ((?x33747 (* 2.0 l_0_9_299)))
 (let ((?x33862 (* ?x33747 l_0_9_310)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x37556 (* ?x32360 l_0_9_274)))
 (let ((?x37413 (* ?x32360 l_0_9_263)))
 (let ((?x37548 (- (* (* (- 2.0) l_0_9_119) l_0_9_130) (* (* 2.0 l_0_9_120) l_0_9_131))))
 (let ((?x37552 (- (- ?x37548 (* (* 2.0 l_0_9_121) l_0_9_132)) (* (* 2.0 l_0_9_122) l_0_9_133))))
 (let ((?x37558 (- (+ (- (- ?x37552 (* (* 2.0 l_0_9_123) l_0_9_134)) ?x37413) ?x37556) ?x33862)))
 (let ((?x37564 (+ (- (- (- (- ?x37558 ?x33864) ?x33866) ?x33868) ?x33870) (* (* 2.0 l_0_9_83) l_0_9_94))))
 (let ((?x37568 (+ (+ ?x37564 (* (* 2.0 l_0_9_84) l_0_9_95)) (* (* 2.0 l_0_9_85) l_0_9_96))))
 (let ((?x37572 (+ (+ ?x37568 (* (* 2.0 l_0_9_86) l_0_9_97)) (* (* 2.0 l_0_9_87) l_0_9_98))))
 (= ?x37572 0.0)))))))))))))))))))))
(assert
 (let ((?x33759 (* 2.0 l_0_9_303)))
 (let ((?x33986 (* ?x33759 l_0_9_321)))
 (let ((?x33756 (* 2.0 l_0_9_302)))
 (let ((?x33984 (* ?x33756 l_0_9_320)))
 (let ((?x33753 (* 2.0 l_0_9_301)))
 (let ((?x33982 (* ?x33753 l_0_9_319)))
 (let ((?x33750 (* 2.0 l_0_9_300)))
 (let ((?x33980 (* ?x33750 l_0_9_318)))
 (let ((?x33747 (* 2.0 l_0_9_299)))
 (let ((?x33978 (* ?x33747 l_0_9_317)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x34883 (* ?x32360 l_0_9_281)))
 (let ((?x37613 (+ (* (* 2.0 l_0_9_101) l_0_9_83) (* (* 2.0 l_0_9_102) l_0_9_84))))
 (let ((?x37626 (+ (+ ?x37613 (* (* 2.0 l_0_9_103) l_0_9_85)) (* (* 2.0 l_0_9_104) l_0_9_86))))
 (let ((?x37631 (- (+ ?x37626 (* (* 2.0 l_0_9_105) l_0_9_87)) (* (* 2.0 l_0_9_119) l_0_9_137))))
 (let ((?x37635 (- (- ?x37631 (* (* 2.0 l_0_9_120) l_0_9_138)) (* (* 2.0 l_0_9_121) l_0_9_139))))
 (let ((?x37639 (- (- ?x37635 (* (* 2.0 l_0_9_122) l_0_9_140)) (* (* 2.0 l_0_9_123) l_0_9_141))))
 (let ((?x37644 (- (- (+ (- ?x37639 (* (* 2.0 l_0_9_217) l_0_9_227)) ?x34883) ?x33978) ?x33980)))
 (= (- (- (- ?x37644 ?x33982) ?x33984) ?x33986) 0.0))))))))))))))))))))
(assert
 (let ((?x36398 (* l_0_9_93 l_0_9_93)))
 (let ((?x36392 (* l_0_9_92 l_0_9_92)))
 (let ((?x36386 (* l_0_9_91 l_0_9_91)))
 (let ((?x36380 (* l_0_9_90 l_0_9_90)))
 (let ((?x36374 (* l_0_9_89 l_0_9_89)))
 (let ((?x36368 (* l_0_9_88 l_0_9_88)))
 (let ((?x34106 (* l_0_9_309 l_0_9_309)))
 (let ((?x34104 (* l_0_9_308 l_0_9_308)))
 (let ((?x34102 (* l_0_9_307 l_0_9_307)))
 (let ((?x34100 (* l_0_9_306 l_0_9_306)))
 (let ((?x34098 (* l_0_9_305 l_0_9_305)))
 (let ((?x34096 (* l_0_9_304 l_0_9_304)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32474 (* ?x32110 l_0_9_304)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28917 (* ?x28757 l_0_9_196)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28910 (* ?x28754 l_0_9_160)))
 (let ((?x36327 (* l_0_9_129 l_0_9_129)))
 (let ((?x36324 (* l_0_9_128 l_0_9_128)))
 (let ((?x36321 (* l_0_9_127 l_0_9_127)))
 (let ((?x36318 (* l_0_9_126 l_0_9_126)))
 (let ((?x37707 (- (- (* (- l_0_9_124) l_0_9_124) (* l_0_9_125 l_0_9_125)) ?x36318)))
 (let ((?x37714 (- (+ (- (+ (- (- (- ?x37707 ?x36321) ?x36324) ?x36327) ?x28910) ?x28917) ?x32474) ?x34096)))
 (let ((?x37721 (+ (+ (- (- (- (- (- ?x37714 ?x34098) ?x34100) ?x34102) ?x34104) ?x34106) ?x36368) ?x36374)))
 (= (+ (+ (+ (+ ?x37721 ?x36380) ?x36386) ?x36392) ?x36398) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x34201 (* 2.0 l_0_9_309)))
 (let ((?x34202 (* ?x34201 l_0_9_315)))
 (let ((?x34198 (* 2.0 l_0_9_308)))
 (let ((?x34199 (* ?x34198 l_0_9_314)))
 (let ((?x34195 (* 2.0 l_0_9_307)))
 (let ((?x34196 (* ?x34195 l_0_9_313)))
 (let ((?x34192 (* 2.0 l_0_9_306)))
 (let ((?x34193 (* ?x34192 l_0_9_312)))
 (let ((?x34189 (* 2.0 l_0_9_305)))
 (let ((?x34190 (* ?x34189 l_0_9_311)))
 (let ((?x34186 (* 2.0 l_0_9_304)))
 (let ((?x34187 (* ?x34186 l_0_9_310)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32578 (* ?x32110 l_0_9_310)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x37476 (* ?x32360 l_0_9_268)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28944 (* ?x28757 l_0_9_202)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28942 (* ?x28754 l_0_9_166)))
 (let ((?x37767 (- (* (* (- 2.0) l_0_9_124) l_0_9_130) (* (* 2.0 l_0_9_125) l_0_9_131))))
 (let ((?x37773 (- (- ?x37767 (* (* 2.0 l_0_9_126) l_0_9_132)) (* (* 2.0 l_0_9_127) l_0_9_133))))
 (let ((?x37779 (- (- ?x37773 (* (* 2.0 l_0_9_128) l_0_9_134)) (* (* 2.0 l_0_9_129) l_0_9_135))))
 (let ((?x37786 (- (- (- (+ (- (- (+ ?x37779 ?x28942) ?x28944) ?x37476) ?x32578) ?x34187) ?x34190) ?x34193)))
 (let ((?x37792 (+ (- (- (- ?x37786 ?x34196) ?x34199) ?x34202) (* (* 2.0 l_0_9_88) l_0_9_94))))
 (let ((?x37798 (+ (+ ?x37792 (* (* 2.0 l_0_9_89) l_0_9_95)) (* (* 2.0 l_0_9_90) l_0_9_96))))
 (let ((?x37804 (+ (+ ?x37798 (* (* 2.0 l_0_9_91) l_0_9_97)) (* (* 2.0 l_0_9_92) l_0_9_98))))
 (= (+ ?x37804 (* (* 2.0 l_0_9_93) l_0_9_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x34201 (* 2.0 l_0_9_309)))
 (let ((?x34334 (* ?x34201 l_0_9_322)))
 (let ((?x34198 (* 2.0 l_0_9_308)))
 (let ((?x34332 (* ?x34198 l_0_9_321)))
 (let ((?x34195 (* 2.0 l_0_9_307)))
 (let ((?x34330 (* ?x34195 l_0_9_320)))
 (let ((?x34192 (* 2.0 l_0_9_306)))
 (let ((?x34328 (* ?x34192 l_0_9_319)))
 (let ((?x34189 (* 2.0 l_0_9_305)))
 (let ((?x34326 (* ?x34189 l_0_9_318)))
 (let ((?x34186 (* 2.0 l_0_9_304)))
 (let ((?x34324 (* ?x34186 l_0_9_317)))
 (let ((?x32110 (* 2.0 l_0_9_289)))
 (let ((?x32689 (* ?x32110 l_0_9_317)))
 (let ((?x28757 (* 2.0 l_0_9_181)))
 (let ((?x28982 (* ?x28757 l_0_9_209)))
 (let ((?x28754 (* 2.0 l_0_9_145)))
 (let ((?x28980 (* ?x28754 l_0_9_173)))
 (let ((?x37866 (+ (* (* 2.0 l_0_9_101) l_0_9_88) (* (* 2.0 l_0_9_102) l_0_9_89))))
 (let ((?x37870 (+ (+ ?x37866 (* (* 2.0 l_0_9_103) l_0_9_90)) (* (* 2.0 l_0_9_104) l_0_9_91))))
 (let ((?x37874 (+ (+ ?x37870 (* (* 2.0 l_0_9_105) l_0_9_92)) (* (* 2.0 l_0_9_106) l_0_9_93))))
 (let ((?x37879 (- (- ?x37874 (* (* 2.0 l_0_9_124) l_0_9_137)) (* (* 2.0 l_0_9_125) l_0_9_138))))
 (let ((?x37883 (- (- ?x37879 (* (* 2.0 l_0_9_126) l_0_9_139)) (* (* 2.0 l_0_9_127) l_0_9_140))))
 (let ((?x37887 (- (- ?x37883 (* (* 2.0 l_0_9_128) l_0_9_141)) (* (* 2.0 l_0_9_129) l_0_9_142))))
 (let ((?x37892 (+ (- (- (+ ?x37887 ?x28980) ?x28982) (* (* 2.0 l_0_9_217) l_0_9_232)) ?x32689)))
 (= (- (- (- (- (- (- ?x37892 ?x34324) ?x34326) ?x34328) ?x34330) ?x34332) ?x34334) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x36680 (* l_0_9_99 l_0_9_99)))
 (let ((?x36674 (* l_0_9_98 l_0_9_98)))
 (let ((?x36668 (* l_0_9_97 l_0_9_97)))
 (let ((?x36662 (* l_0_9_96 l_0_9_96)))
 (let ((?x36656 (* l_0_9_95 l_0_9_95)))
 (let ((?x36650 (* l_0_9_94 l_0_9_94)))
 (let ((?x34466 (* l_0_9_316 l_0_9_316)))
 (let ((?x34464 (* l_0_9_315 l_0_9_315)))
 (let ((?x34462 (* l_0_9_314 l_0_9_314)))
 (let ((?x34460 (* l_0_9_313 l_0_9_313)))
 (let ((?x34458 (* l_0_9_312 l_0_9_312)))
 (let ((?x34456 (* l_0_9_311 l_0_9_311)))
 (let ((?x34454 (* l_0_9_310 l_0_9_310)))
 (let ((?x32360 (* 2.0 l_0_9_253)))
 (let ((?x37556 (* ?x32360 l_0_9_274)))
 (let ((?x36604 (* l_0_9_136 l_0_9_136)))
 (let ((?x36601 (* l_0_9_135 l_0_9_135)))
 (let ((?x36598 (* l_0_9_134 l_0_9_134)))
 (let ((?x36595 (* l_0_9_133 l_0_9_133)))
 (let ((?x36592 (* l_0_9_132 l_0_9_132)))
 (let ((?x36589 (* l_0_9_131 l_0_9_131)))
 (let ((?x37964 (- (- (- (* l_0_9_100 l_0_9_100) (* l_0_9_130 l_0_9_130)) ?x36589) ?x36592)))
 (let ((?x37971 (- (- (- (- (- (- (- ?x37964 ?x36595) ?x36598) ?x36601) ?x36604) ?x37556) ?x34454) ?x34456)))
 (let ((?x37978 (+ (+ (- (- (- (- (- ?x37971 ?x34458) ?x34460) ?x34462) ?x34464) ?x34466) ?x36650) ?x36656)))
 (= (+ (+ (+ (+ ?x37978 ?x36662) ?x36668) ?x36674) ?x36680) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x34744 (* l_0_9_324 l_0_9_324)))
 (let ((?x34742 (* l_0_9_323 l_0_9_323)))
 (let ((?x34740 (* l_0_9_322 l_0_9_322)))
 (let ((?x34738 (* l_0_9_321 l_0_9_321)))
 (let ((?x34736 (* l_0_9_320 l_0_9_320)))
 (let ((?x34733 (* l_0_9_319 l_0_9_319)))
 (let ((?x34731 (* l_0_9_318 l_0_9_318)))
 (let ((?x34729 (* l_0_9_317 l_0_9_317)))
 (let ((?x36826 (* l_0_9_144 l_0_9_144)))
 (let ((?x36823 (* l_0_9_143 l_0_9_143)))
 (let ((?x36820 (* l_0_9_142 l_0_9_142)))
 (let ((?x36817 (* l_0_9_141 l_0_9_141)))
 (let ((?x36814 (* l_0_9_140 l_0_9_140)))
 (let ((?x36811 (* l_0_9_139 l_0_9_139)))
 (let ((?x36808 (* l_0_9_138 l_0_9_138)))
 (let ((?x36805 (* l_0_9_137 l_0_9_137)))
 (let ((?x36876 (* l_0_9_108 l_0_9_108)))
 (let ((?x36870 (* l_0_9_107 l_0_9_107)))
 (let ((?x36864 (* l_0_9_106 l_0_9_106)))
 (let ((?x36858 (* l_0_9_105 l_0_9_105)))
 (let ((?x36852 (* l_0_9_104 l_0_9_104)))
 (let ((?x36846 (* l_0_9_103 l_0_9_103)))
 (let ((?x38033 (+ (+ (+ (* l_0_9_101 l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x36846) ?x36852)))
 (let ((?x38040 (- (- (- (+ (+ (+ (+ ?x38033 ?x36858) ?x36864) ?x36870) ?x36876) ?x36805) ?x36808) ?x36811)))
 (let ((?x38047 (- (- (- (- (- (- ?x38040 ?x36814) ?x36817) ?x36820) ?x36823) ?x36826) (* (* 2.0 l_0_9_217) l_0_9_245))))
 (let ((?x38054 (- (- (- (- (- (- (- ?x38047 ?x34729) ?x34731) ?x34733) ?x34736) ?x34738) ?x34740) ?x34742)))
 (= (- ?x38054 ?x34744) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x28677 (* l_0_9_291 l_0_9_291)))
 (let ((?x28669 (* l_0_9_290 l_0_9_290)))
 (let ((?x28599 (* l_0_9_183 l_0_9_183)))
 (let ((?x28597 (* l_0_9_182 l_0_9_182)))
 (let ((?x38116 (- (- (+ (* l_0_9_146 l_0_9_146) (* l_0_9_147 l_0_9_147)) ?x28597) ?x28599)))
 (let ((?x38122 (- (- (+ (+ ?x38116 ?x28669) ?x28677) (* (* 2.0 l_0_9_326) l_0_9_340)) (* (* 2.0 l_0_9_327) l_0_9_341))))
 (= ?x38122 0.0))))))))
(assert
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32777 (* ?x32154 l_0_9_293)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32775 (* ?x32151 l_0_9_292)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29011 (* ?x29010 l_0_9_185)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29008 (* ?x29007 l_0_9_184)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29005 (* ?x28999 l_0_9_149)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x29426 (* ?x29215 l_0_9_148)))
 (let ((?x38149 (- (+ (+ (- (- (+ ?x29426 ?x29005) ?x29008) ?x29011) ?x32775) ?x32777) (* (* 2.0 l_0_9_328) l_0_9_340))))
 (let ((?x38153 (- (- ?x38149 (* (* 2.0 l_0_9_329) l_0_9_341)) (* (* 2.0 l_0_9_330) l_0_9_342))))
 (= ?x38153 0.0))))))))))))))))
(assert
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32877 (* ?x32154 l_0_9_300)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32875 (* ?x32151 l_0_9_299)))
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x38187 (* ?x32872 l_0_9_269)))
 (let ((?x32869 (* 2.0 l_0_9_254)))
 (let ((?x38185 (* ?x32869 l_0_9_268)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29222 (* ?x29010 l_0_9_192)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29220 (* ?x29007 l_0_9_191)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29218 (* ?x28999 l_0_9_156)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x29216 (* ?x29215 l_0_9_155)))
 (let ((?x38190 (+ (+ (+ (+ (- (- (+ ?x29216 ?x29218) ?x29220) ?x29222) ?x38185) ?x38187) ?x32875) ?x32877)))
 (let ((?x38196 (- (- ?x38190 (* (* 2.0 l_0_9_335) l_0_9_340)) (* (* 2.0 l_0_9_336) l_0_9_341))))
 (let ((?x38202 (- (- ?x38196 (* (* 2.0 l_0_9_337) l_0_9_342)) (* (* 2.0 l_0_9_338) l_0_9_343))))
 (= (- ?x38202 (* (* 2.0 l_0_9_339) l_0_9_344)) 0.0)))))))))))))))))))))
(assert
 (let ((?x38265 (* l_0_9_345 l_0_9_345)))
 (let ((?x38263 (* l_0_9_344 l_0_9_344)))
 (let ((?x38261 (* l_0_9_343 l_0_9_343)))
 (let ((?x38259 (* l_0_9_342 l_0_9_342)))
 (let ((?x38257 (* l_0_9_341 l_0_9_341)))
 (let ((?x38255 (* l_0_9_340 l_0_9_340)))
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x32954 (* ?x32154 l_0_9_305)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x32951 (* ?x32151 l_0_9_304)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29322 (* ?x29010 l_0_9_197)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29320 (* ?x29007 l_0_9_196)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29290 (* ?x28999 l_0_9_161)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x35361 (* ?x29215 l_0_9_160)))
 (let ((?x38258 (- (- (+ (+ (- (- (+ ?x35361 ?x29290) ?x29320) ?x29322) ?x32951) ?x32954) ?x38255) ?x38257)))
 (= (- (- (- (- ?x38258 ?x38259) ?x38261) ?x38263) ?x38265) 0.0)))))))))))))))))))))
(assert
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x33026 (* ?x32154 l_0_9_311)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x33024 (* ?x32151 l_0_9_310)))
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x38187 (* ?x32872 l_0_9_269)))
 (let ((?x32869 (* 2.0 l_0_9_254)))
 (let ((?x38185 (* ?x32869 l_0_9_268)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29435 (* ?x29010 l_0_9_203)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29433 (* ?x29007 l_0_9_202)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29431 (* ?x28999 l_0_9_167)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x29428 (* ?x29215 l_0_9_166)))
 (let ((?x38303 (+ (+ (- (- (- (- (+ ?x29428 ?x29431) ?x29433) ?x29435) ?x38185) ?x38187) ?x33024) ?x33026)))
 (let ((?x38309 (- (- ?x38303 (* (* 2.0 l_0_9_340) l_0_9_346)) (* (* 2.0 l_0_9_341) l_0_9_347))))
 (let ((?x38315 (- (- ?x38309 (* (* 2.0 l_0_9_342) l_0_9_348)) (* (* 2.0 l_0_9_343) l_0_9_349))))
 (let ((?x38321 (- (- ?x38315 (* (* 2.0 l_0_9_344) l_0_9_350)) (* (* 2.0 l_0_9_345) l_0_9_351))))
 (= ?x38321 0.0))))))))))))))))))))))
(assert
 (let ((?x32154 (* 2.0 l_0_9_291)))
 (let ((?x33097 (* ?x32154 l_0_9_318)))
 (let ((?x32151 (* 2.0 l_0_9_290)))
 (let ((?x33095 (* ?x32151 l_0_9_317)))
 (let ((?x29010 (* 2.0 l_0_9_183)))
 (let ((?x29555 (* ?x29010 l_0_9_210)))
 (let ((?x29007 (* 2.0 l_0_9_182)))
 (let ((?x29553 (* ?x29007 l_0_9_209)))
 (let ((?x28999 (* 2.0 l_0_9_147)))
 (let ((?x29551 (* ?x28999 l_0_9_174)))
 (let ((?x29215 (* 2.0 l_0_9_146)))
 (let ((?x35641 (* ?x29215 l_0_9_173)))
 (let ((?x38380 (- (- (- (+ ?x35641 ?x29551) ?x29553) ?x29555) (* (* 2.0 l_0_9_218) l_0_9_232))))
 (let ((?x38386 (- (+ (+ (- ?x38380 (* (* 2.0 l_0_9_219) l_0_9_233)) ?x33095) ?x33097) (* (* 2.0 l_0_9_340) l_0_9_353))))
 (let ((?x38390 (- (- ?x38386 (* (* 2.0 l_0_9_341) l_0_9_354)) (* (* 2.0 l_0_9_342) l_0_9_355))))
 (let ((?x38394 (- (- ?x38390 (* (* 2.0 l_0_9_343) l_0_9_356)) (* (* 2.0 l_0_9_344) l_0_9_357))))
 (= (- ?x38394 (* (* 2.0 l_0_9_345) l_0_9_358)) 0.0))))))))))))))))))
(assert
 (let ((?x33173 (* l_0_9_294 l_0_9_294)))
 (let ((?x33171 (* l_0_9_293 l_0_9_293)))
 (let ((?x33183 (* l_0_9_292 l_0_9_292)))
 (let ((?x29634 (* l_0_9_186 l_0_9_186)))
 (let ((?x29632 (* l_0_9_185 l_0_9_185)))
 (let ((?x29630 (* l_0_9_184 l_0_9_184)))
 (let ((?x29628 (* l_0_9_150 l_0_9_150)))
 (let ((?x38457 (- (+ (+ (* l_0_9_148 l_0_9_148) (* l_0_9_149 l_0_9_149)) ?x29628) ?x29630)))
 (= (+ (+ (+ (- (- ?x38457 ?x29632) ?x29634) ?x33183) ?x33171) ?x33173) 0.0))))))))))
(assert
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x33240 (* ?x28769 l_0_9_301)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x33238 (* ?x28766 l_0_9_300)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x33236 (* ?x28763 l_0_9_299)))
 (let ((?x29236 (* 2.0 l_0_9_258)))
 (let ((?x38482 (* ?x29236 l_0_9_270)))
 (let ((?x29233 (* 2.0 l_0_9_257)))
 (let ((?x38480 (* ?x29233 l_0_9_269)))
 (let ((?x29230 (* 2.0 l_0_9_256)))
 (let ((?x38478 (* ?x29230 l_0_9_268)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29776 (* ?x29330 l_0_9_193)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29774 (* ?x29327 l_0_9_192)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29772 (* ?x29324 l_0_9_191)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29770 (* ?x29311 l_0_9_157)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29768 (* ?x29308 l_0_9_156)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x29766 (* ?x29294 l_0_9_155)))
 (let ((?x38481 (+ (+ (- (- (- (+ (+ ?x29766 ?x29768) ?x29770) ?x29772) ?x29774) ?x29776) ?x38478) ?x38480)))
 (= (+ (+ (+ (+ ?x38481 ?x38482) ?x33236) ?x33238) ?x33240) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x33299 (* ?x28769 l_0_9_306)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x33296 (* ?x28766 l_0_9_305)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x33293 (* ?x28763 l_0_9_304)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29848 (* ?x29330 l_0_9_198)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29846 (* ?x29327 l_0_9_197)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29844 (* ?x29324 l_0_9_196)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29824 (* ?x29311 l_0_9_162)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29820 (* ?x29308 l_0_9_161)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x31210 (* ?x29294 l_0_9_160)))
 (let ((?x38515 (+ (+ (- (- (- (+ (+ ?x31210 ?x29820) ?x29824) ?x29844) ?x29846) ?x29848) ?x33293) ?x33296)))
 (= (+ ?x38515 ?x33299) 0.0)))))))))))))))))))))
(assert
 (let ((?x28769 (* 2.0 l_0_9_294)))
 (let ((?x33358 (* ?x28769 l_0_9_312)))
 (let ((?x28766 (* 2.0 l_0_9_293)))
 (let ((?x33356 (* ?x28766 l_0_9_311)))
 (let ((?x28763 (* 2.0 l_0_9_292)))
 (let ((?x33354 (* ?x28763 l_0_9_310)))
 (let ((?x29236 (* 2.0 l_0_9_258)))
 (let ((?x38482 (* ?x29236 l_0_9_270)))
 (let ((?x29233 (* 2.0 l_0_9_257)))
 (let ((?x38480 (* ?x29233 l_0_9_269)))
 (let ((?x29230 (* 2.0 l_0_9_256)))
 (let ((?x38478 (* ?x29230 l_0_9_268)))
 (let ((?x29330 (* 2.0 l_0_9_186)))
 (let ((?x29925 (* ?x29330 l_0_9_204)))
 (let ((?x29327 (* 2.0 l_0_9_185)))
 (let ((?x29923 (* ?x29327 l_0_9_203)))
 (let ((?x29324 (* 2.0 l_0_9_184)))
 (let ((?x29921 (* ?x29324 l_0_9_202)))
 (let ((?x29311 (* 2.0 l_0_9_150)))
 (let ((?x29918 (* ?x29311 l_0_9_168)))
 (let ((?x29308 (* 2.0 l_0_9_149)))
 (let ((?x29915 (* ?x29308 l_0_9_167)))
 (let ((?x29294 (* 2.0 l_0_9_148)))
 (let ((?x29912 (* ?x29294 l_0_9_166)))
 (let ((?x38539 (- (- (- (- (- (+ (+ ?x29912 ?x29915) ?x29918) ?x29921) ?x29923) ?x29925) ?x38478) ?x38480)))
 (= (+ (+ (+ (- ?x38539 ?x38482) ?x33354) ?x33356) ?x33358) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x33679 (* l_0_9_303 l_0_9_303)))
 (let ((?x33677 (* l_0_9_302 l_0_9_302)))
 (let ((?x33675 (* l_0_9_301 l_0_9_301)))
 (let ((?x33673 (* l_0_9_300 l_0_9_300)))
 (let ((?x33671 (* l_0_9_299 l_0_9_299)))
 (let ((?x35228 (* 2.0 l_0_9_267)))
 (let ((?x38586 (* ?x35228 l_0_9_272)))
 (let ((?x35225 (* 2.0 l_0_9_266)))
 (let ((?x38584 (* ?x35225 l_0_9_271)))
 (let ((?x35222 (* 2.0 l_0_9_265)))
 (let ((?x38582 (* ?x35222 l_0_9_270)))
 (let ((?x35219 (* 2.0 l_0_9_264)))
 (let ((?x38580 (* ?x35219 l_0_9_269)))
 (let ((?x35216 (* 2.0 l_0_9_263)))
 (let ((?x38578 (* ?x35216 l_0_9_268)))
 (let ((?x30624 (* l_0_9_195 l_0_9_195)))
 (let ((?x30622 (* l_0_9_194 l_0_9_194)))
 (let ((?x30620 (* l_0_9_193 l_0_9_193)))
 (let ((?x30618 (* l_0_9_192 l_0_9_192)))
 (let ((?x30616 (* l_0_9_191 l_0_9_191)))
 (let ((?x30614 (* l_0_9_159 l_0_9_159)))
 (let ((?x30612 (* l_0_9_158 l_0_9_158)))
 (let ((?x30610 (* l_0_9_157 l_0_9_157)))
 (let ((?x38571 (+ (+ (+ (* l_0_9_155 l_0_9_155) (* l_0_9_156 l_0_9_156)) ?x30610) ?x30612)))
 (let ((?x38579 (+ (- (- (- (- (- (+ ?x38571 ?x30614) ?x30616) ?x30618) ?x30620) ?x30622) ?x30624) ?x38578)))
 (let ((?x38590 (+ (+ (+ (+ (+ (+ (+ ?x38579 ?x38580) ?x38582) ?x38584) ?x38586) ?x33671) ?x33673) ?x33675)))
 (= (+ (+ ?x38590 ?x33677) ?x33679) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x33759 (* 2.0 l_0_9_303)))
 (let ((?x33760 (* ?x33759 l_0_9_308)))
 (let ((?x33756 (* 2.0 l_0_9_302)))
 (let ((?x33757 (* ?x33756 l_0_9_307)))
 (let ((?x33753 (* 2.0 l_0_9_301)))
 (let ((?x33754 (* ?x33753 l_0_9_306)))
 (let ((?x33750 (* 2.0 l_0_9_300)))
 (let ((?x33751 (* ?x33750 l_0_9_305)))
 (let ((?x33747 (* 2.0 l_0_9_299)))
 (let ((?x33748 (* ?x33747 l_0_9_304)))
 (let ((?x38636 (* l_0_9_273 l_0_9_273)))
 (let ((?x38634 (* l_0_9_272 l_0_9_272)))
 (let ((?x38632 (* l_0_9_271 l_0_9_271)))
 (let ((?x38630 (* l_0_9_270 l_0_9_270)))
 (let ((?x38628 (* l_0_9_269 l_0_9_269)))
 (let ((?x38626 (* l_0_9_268 l_0_9_268)))
 (let ((?x30717 (* 2.0 l_0_9_195)))
 (let ((?x30718 (* ?x30717 l_0_9_200)))
 (let ((?x30714 (* 2.0 l_0_9_194)))
 (let ((?x30715 (* ?x30714 l_0_9_199)))
 (let ((?x30711 (* 2.0 l_0_9_193)))
 (let ((?x30712 (* ?x30711 l_0_9_198)))
 (let ((?x30708 (* 2.0 l_0_9_192)))
 (let ((?x30709 (* ?x30708 l_0_9_197)))
 (let ((?x30705 (* 2.0 l_0_9_191)))
 (let ((?x30706 (* ?x30705 l_0_9_196)))
 (let ((?x30702 (* 2.0 l_0_9_159)))
 (let ((?x30703 (* ?x30702 l_0_9_164)))
 (let ((?x30699 (* 2.0 l_0_9_158)))
 (let ((?x30700 (* ?x30699 l_0_9_163)))
 (let ((?x30696 (* 2.0 l_0_9_157)))
 (let ((?x30697 (* ?x30696 l_0_9_162)))
 (let ((?x30693 (* 2.0 l_0_9_156)))
 (let ((?x30694 (* ?x30693 l_0_9_161)))
 (let ((?x30690 (* 2.0 l_0_9_155)))
 (let ((?x30691 (* ?x30690 l_0_9_160)))
 (let ((?x38623 (- (- (- (+ (+ (+ (+ ?x30691 ?x30694) ?x30697) ?x30700) ?x30703) ?x30706) ?x30709) ?x30712)))
 (let ((?x38635 (+ (+ (+ (+ (+ (- (- ?x38623 ?x30715) ?x30718) ?x38626) ?x38628) ?x38630) ?x38632) ?x38634)))
 (= (+ (+ (+ (+ (+ (+ ?x38635 ?x38636) ?x33748) ?x33751) ?x33754) ?x33757) ?x33760) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33759 (* 2.0 l_0_9_303)))
 (let ((?x33870 (* ?x33759 l_0_9_314)))
 (let ((?x33756 (* 2.0 l_0_9_302)))
 (let ((?x33868 (* ?x33756 l_0_9_313)))
 (let ((?x33753 (* 2.0 l_0_9_301)))
 (let ((?x33866 (* ?x33753 l_0_9_312)))
 (let ((?x33750 (* 2.0 l_0_9_300)))
 (let ((?x33864 (* ?x33750 l_0_9_311)))
 (let ((?x33747 (* 2.0 l_0_9_299)))
 (let ((?x33862 (* ?x33747 l_0_9_310)))
 (let ((?x35411 (* 2.0 l_0_9_273)))
 (let ((?x38691 (* ?x35411 l_0_9_279)))
 (let ((?x35408 (* 2.0 l_0_9_272)))
 (let ((?x38689 (* ?x35408 l_0_9_278)))
 (let ((?x35405 (* 2.0 l_0_9_271)))
 (let ((?x38687 (* ?x35405 l_0_9_277)))
 (let ((?x35402 (* 2.0 l_0_9_270)))
 (let ((?x38685 (* ?x35402 l_0_9_276)))
 (let ((?x35399 (* 2.0 l_0_9_269)))
 (let ((?x38683 (* ?x35399 l_0_9_275)))
 (let ((?x35396 (* 2.0 l_0_9_268)))
 (let ((?x38681 (* ?x35396 l_0_9_274)))
 (let ((?x35228 (* 2.0 l_0_9_267)))
 (let ((?x38586 (* ?x35228 l_0_9_272)))
 (let ((?x35225 (* 2.0 l_0_9_266)))
 (let ((?x38584 (* ?x35225 l_0_9_271)))
 (let ((?x35222 (* 2.0 l_0_9_265)))
 (let ((?x38582 (* ?x35222 l_0_9_270)))
 (let ((?x35219 (* 2.0 l_0_9_264)))
 (let ((?x38580 (* ?x35219 l_0_9_269)))
 (let ((?x35216 (* 2.0 l_0_9_263)))
 (let ((?x38578 (* ?x35216 l_0_9_268)))
 (let ((?x30717 (* 2.0 l_0_9_195)))
 (let ((?x30851 (* ?x30717 l_0_9_206)))
 (let ((?x30714 (* 2.0 l_0_9_194)))
 (let ((?x30849 (* ?x30714 l_0_9_205)))
 (let ((?x30711 (* 2.0 l_0_9_193)))
 (let ((?x30847 (* ?x30711 l_0_9_204)))
 (let ((?x30708 (* 2.0 l_0_9_192)))
 (let ((?x30845 (* ?x30708 l_0_9_203)))
 (let ((?x30705 (* 2.0 l_0_9_191)))
 (let ((?x30843 (* ?x30705 l_0_9_202)))
 (let ((?x30702 (* 2.0 l_0_9_159)))
 (let ((?x30841 (* ?x30702 l_0_9_170)))
 (let ((?x30699 (* 2.0 l_0_9_158)))
 (let ((?x30839 (* ?x30699 l_0_9_169)))
 (let ((?x30696 (* 2.0 l_0_9_157)))
 (let ((?x30837 (* ?x30696 l_0_9_168)))
 (let ((?x30693 (* 2.0 l_0_9_156)))
 (let ((?x30835 (* ?x30693 l_0_9_167)))
 (let ((?x30690 (* 2.0 l_0_9_155)))
 (let ((?x30833 (* ?x30690 l_0_9_166)))
 (let ((?x38673 (- (- (- (+ (+ (+ (+ ?x30833 ?x30835) ?x30837) ?x30839) ?x30841) ?x30843) ?x30845) ?x30847)))
 (let ((?x38680 (- (- (- (- (- (- (- ?x38673 ?x30849) ?x30851) ?x38578) ?x38580) ?x38582) ?x38584) ?x38586)))
 (let ((?x38693 (+ (+ (+ (+ (+ (+ (+ ?x38680 ?x38681) ?x38683) ?x38685) ?x38687) ?x38689) ?x38691) ?x33862)))
 (= (+ (+ (+ (+ ?x38693 ?x33864) ?x33866) ?x33868) ?x33870) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33759 (* 2.0 l_0_9_303)))
 (let ((?x33986 (* ?x33759 l_0_9_321)))
 (let ((?x33756 (* 2.0 l_0_9_302)))
 (let ((?x33984 (* ?x33756 l_0_9_320)))
 (let ((?x33753 (* 2.0 l_0_9_301)))
 (let ((?x33982 (* ?x33753 l_0_9_319)))
 (let ((?x33750 (* 2.0 l_0_9_300)))
 (let ((?x33980 (* ?x33750 l_0_9_318)))
 (let ((?x33747 (* 2.0 l_0_9_299)))
 (let ((?x33978 (* ?x33747 l_0_9_317)))
 (let ((?x35411 (* 2.0 l_0_9_273)))
 (let ((?x35412 (* ?x35411 l_0_9_286)))
 (let ((?x35408 (* 2.0 l_0_9_272)))
 (let ((?x35409 (* ?x35408 l_0_9_285)))
 (let ((?x35405 (* 2.0 l_0_9_271)))
 (let ((?x35406 (* ?x35405 l_0_9_284)))
 (let ((?x35402 (* 2.0 l_0_9_270)))
 (let ((?x35403 (* ?x35402 l_0_9_283)))
 (let ((?x35399 (* 2.0 l_0_9_269)))
 (let ((?x35400 (* ?x35399 l_0_9_282)))
 (let ((?x35396 (* 2.0 l_0_9_268)))
 (let ((?x35397 (* ?x35396 l_0_9_281)))
 (let ((?x30717 (* 2.0 l_0_9_195)))
 (let ((?x31012 (* ?x30717 l_0_9_213)))
 (let ((?x30714 (* 2.0 l_0_9_194)))
 (let ((?x31010 (* ?x30714 l_0_9_212)))
 (let ((?x30711 (* 2.0 l_0_9_193)))
 (let ((?x31008 (* ?x30711 l_0_9_211)))
 (let ((?x30708 (* 2.0 l_0_9_192)))
 (let ((?x31006 (* ?x30708 l_0_9_210)))
 (let ((?x30705 (* 2.0 l_0_9_191)))
 (let ((?x31004 (* ?x30705 l_0_9_209)))
 (let ((?x30702 (* 2.0 l_0_9_159)))
 (let ((?x31002 (* ?x30702 l_0_9_177)))
 (let ((?x30699 (* 2.0 l_0_9_158)))
 (let ((?x31000 (* ?x30699 l_0_9_176)))
 (let ((?x30696 (* 2.0 l_0_9_157)))
 (let ((?x30998 (* ?x30696 l_0_9_175)))
 (let ((?x30693 (* 2.0 l_0_9_156)))
 (let ((?x30996 (* ?x30693 l_0_9_174)))
 (let ((?x30690 (* 2.0 l_0_9_155)))
 (let ((?x30994 (* ?x30690 l_0_9_173)))
 (let ((?x38755 (- (- (- (+ (+ (+ (+ ?x30994 ?x30996) ?x30998) ?x31000) ?x31002) ?x31004) ?x31006) ?x31008)))
 (let ((?x38761 (- (- (- (- ?x38755 ?x31010) ?x31012) (* (* 2.0 l_0_9_227) l_0_9_232)) (* (* 2.0 l_0_9_228) l_0_9_233))))
 (let ((?x38765 (- (- ?x38761 (* (* 2.0 l_0_9_229) l_0_9_234)) (* (* 2.0 l_0_9_230) l_0_9_235))))
 (let ((?x38770 (+ (+ (+ (- ?x38765 (* (* 2.0 l_0_9_231) l_0_9_236)) ?x35397) ?x35400) ?x35403)))
 (let ((?x38777 (+ (+ (+ (+ (+ (+ (+ ?x38770 ?x35406) ?x35409) ?x35412) ?x33978) ?x33980) ?x33982) ?x33984)))
 (= (+ ?x38777 ?x33986) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34106 (* l_0_9_309 l_0_9_309)))
 (let ((?x34104 (* l_0_9_308 l_0_9_308)))
 (let ((?x34102 (* l_0_9_307 l_0_9_307)))
 (let ((?x34100 (* l_0_9_306 l_0_9_306)))
 (let ((?x34098 (* l_0_9_305 l_0_9_305)))
 (let ((?x34096 (* l_0_9_304 l_0_9_304)))
 (let ((?x31136 (* l_0_9_201 l_0_9_201)))
 (let ((?x31134 (* l_0_9_200 l_0_9_200)))
 (let ((?x31130 (* l_0_9_199 l_0_9_199)))
 (let ((?x31128 (* l_0_9_198 l_0_9_198)))
 (let ((?x31126 (* l_0_9_197 l_0_9_197)))
 (let ((?x31124 (* l_0_9_196 l_0_9_196)))
 (let ((?x31116 (* l_0_9_165 l_0_9_165)))
 (let ((?x31101 (* l_0_9_164 l_0_9_164)))
 (let ((?x31098 (* l_0_9_163 l_0_9_163)))
 (let ((?x31094 (* l_0_9_162 l_0_9_162)))
 (let ((?x38835 (+ (+ (+ (* l_0_9_160 l_0_9_160) (* l_0_9_161 l_0_9_161)) ?x31094) ?x31098)))
 (let ((?x38842 (- (- (- (- (- (+ (+ ?x38835 ?x31101) ?x31116) ?x31124) ?x31126) ?x31128) ?x31130) ?x31134)))
 (let ((?x38849 (+ (+ (+ (+ (+ (+ (- ?x38842 ?x31136) ?x34096) ?x34098) ?x34100) ?x34102) ?x34104) ?x34106)))
 (= ?x38849 0.0)))))))))))))))))))))
(assert
 (let ((?x34201 (* 2.0 l_0_9_309)))
 (let ((?x34202 (* ?x34201 l_0_9_315)))
 (let ((?x34198 (* 2.0 l_0_9_308)))
 (let ((?x34199 (* ?x34198 l_0_9_314)))
 (let ((?x34195 (* 2.0 l_0_9_307)))
 (let ((?x34196 (* ?x34195 l_0_9_313)))
 (let ((?x34192 (* 2.0 l_0_9_306)))
 (let ((?x34193 (* ?x34192 l_0_9_312)))
 (let ((?x34189 (* 2.0 l_0_9_305)))
 (let ((?x34190 (* ?x34189 l_0_9_311)))
 (let ((?x34186 (* 2.0 l_0_9_304)))
 (let ((?x34187 (* ?x34186 l_0_9_310)))
 (let ((?x38636 (* l_0_9_273 l_0_9_273)))
 (let ((?x38634 (* l_0_9_272 l_0_9_272)))
 (let ((?x38632 (* l_0_9_271 l_0_9_271)))
 (let ((?x38630 (* l_0_9_270 l_0_9_270)))
 (let ((?x38628 (* l_0_9_269 l_0_9_269)))
 (let ((?x38626 (* l_0_9_268 l_0_9_268)))
 (let ((?x31259 (* 2.0 l_0_9_201)))
 (let ((?x31260 (* ?x31259 l_0_9_207)))
 (let ((?x31256 (* 2.0 l_0_9_200)))
 (let ((?x31257 (* ?x31256 l_0_9_206)))
 (let ((?x31250 (* 2.0 l_0_9_199)))
 (let ((?x31251 (* ?x31250 l_0_9_205)))
 (let ((?x31247 (* 2.0 l_0_9_198)))
 (let ((?x31248 (* ?x31247 l_0_9_204)))
 (let ((?x31244 (* 2.0 l_0_9_197)))
 (let ((?x31245 (* ?x31244 l_0_9_203)))
 (let ((?x31241 (* 2.0 l_0_9_196)))
 (let ((?x31242 (* ?x31241 l_0_9_202)))
 (let ((?x31231 (* 2.0 l_0_9_165)))
 (let ((?x31232 (* ?x31231 l_0_9_171)))
 (let ((?x31228 (* 2.0 l_0_9_164)))
 (let ((?x31229 (* ?x31228 l_0_9_170)))
 (let ((?x31225 (* 2.0 l_0_9_163)))
 (let ((?x31226 (* ?x31225 l_0_9_169)))
 (let ((?x31222 (* 2.0 l_0_9_162)))
 (let ((?x31223 (* ?x31222 l_0_9_168)))
 (let ((?x31219 (* 2.0 l_0_9_161)))
 (let ((?x31220 (* ?x31219 l_0_9_167)))
 (let ((?x31216 (* 2.0 l_0_9_160)))
 (let ((?x31217 (* ?x31216 l_0_9_166)))
 (let ((?x38872 (- (- (+ (+ (+ (+ (+ ?x31217 ?x31220) ?x31223) ?x31226) ?x31229) ?x31232) ?x31242) ?x31245)))
 (let ((?x38879 (- (- (- (- (- (- (- ?x38872 ?x31248) ?x31251) ?x31257) ?x31260) ?x38626) ?x38628) ?x38630)))
 (let ((?x38886 (+ (+ (+ (+ (- (- (- ?x38879 ?x38632) ?x38634) ?x38636) ?x34187) ?x34190) ?x34193) ?x34196)))
 (= (+ (+ ?x38886 ?x34199) ?x34202) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34201 (* 2.0 l_0_9_309)))
 (let ((?x34334 (* ?x34201 l_0_9_322)))
 (let ((?x34198 (* 2.0 l_0_9_308)))
 (let ((?x34332 (* ?x34198 l_0_9_321)))
 (let ((?x34195 (* 2.0 l_0_9_307)))
 (let ((?x34330 (* ?x34195 l_0_9_320)))
 (let ((?x34192 (* 2.0 l_0_9_306)))
 (let ((?x34328 (* ?x34192 l_0_9_319)))
 (let ((?x34189 (* 2.0 l_0_9_305)))
 (let ((?x34326 (* ?x34189 l_0_9_318)))
 (let ((?x34186 (* 2.0 l_0_9_304)))
 (let ((?x34324 (* ?x34186 l_0_9_317)))
 (let ((?x38950 (* l_0_9_237 l_0_9_237)))
 (let ((?x38948 (* l_0_9_236 l_0_9_236)))
 (let ((?x38946 (* l_0_9_235 l_0_9_235)))
 (let ((?x38944 (* l_0_9_234 l_0_9_234)))
 (let ((?x38942 (* l_0_9_233 l_0_9_233)))
 (let ((?x38940 (* l_0_9_232 l_0_9_232)))
 (let ((?x31259 (* 2.0 l_0_9_201)))
 (let ((?x31461 (* ?x31259 l_0_9_214)))
 (let ((?x31256 (* 2.0 l_0_9_200)))
 (let ((?x31459 (* ?x31256 l_0_9_213)))
 (let ((?x31250 (* 2.0 l_0_9_199)))
 (let ((?x31455 (* ?x31250 l_0_9_212)))
 (let ((?x31247 (* 2.0 l_0_9_198)))
 (let ((?x31453 (* ?x31247 l_0_9_211)))
 (let ((?x31244 (* 2.0 l_0_9_197)))
 (let ((?x31451 (* ?x31244 l_0_9_210)))
 (let ((?x31241 (* 2.0 l_0_9_196)))
 (let ((?x31449 (* ?x31241 l_0_9_209)))
 (let ((?x31231 (* 2.0 l_0_9_165)))
 (let ((?x31441 (* ?x31231 l_0_9_178)))
 (let ((?x31228 (* 2.0 l_0_9_164)))
 (let ((?x31439 (* ?x31228 l_0_9_177)))
 (let ((?x31225 (* 2.0 l_0_9_163)))
 (let ((?x31437 (* ?x31225 l_0_9_176)))
 (let ((?x31222 (* 2.0 l_0_9_162)))
 (let ((?x31435 (* ?x31222 l_0_9_175)))
 (let ((?x31219 (* 2.0 l_0_9_161)))
 (let ((?x31433 (* ?x31219 l_0_9_174)))
 (let ((?x31216 (* 2.0 l_0_9_160)))
 (let ((?x31431 (* ?x31216 l_0_9_173)))
 (let ((?x38935 (- (- (+ (+ (+ (+ (+ ?x31431 ?x31433) ?x31435) ?x31437) ?x31439) ?x31441) ?x31449) ?x31451)))
 (let ((?x38945 (- (- (- (- (- (- (- ?x38935 ?x31453) ?x31455) ?x31459) ?x31461) ?x38940) ?x38942) ?x38944)))
 (let ((?x38955 (+ (+ (+ (+ (- (- (- ?x38945 ?x38946) ?x38948) ?x38950) ?x34324) ?x34326) ?x34328) ?x34330)))
 (= (+ (+ ?x38955 ?x34332) ?x34334) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34466 (* l_0_9_316 l_0_9_316)))
 (let ((?x34464 (* l_0_9_315 l_0_9_315)))
 (let ((?x34462 (* l_0_9_314 l_0_9_314)))
 (let ((?x34460 (* l_0_9_313 l_0_9_313)))
 (let ((?x34458 (* l_0_9_312 l_0_9_312)))
 (let ((?x34456 (* l_0_9_311 l_0_9_311)))
 (let ((?x34454 (* l_0_9_310 l_0_9_310)))
 (let ((?x35411 (* 2.0 l_0_9_273)))
 (let ((?x38691 (* ?x35411 l_0_9_279)))
 (let ((?x35408 (* 2.0 l_0_9_272)))
 (let ((?x38689 (* ?x35408 l_0_9_278)))
 (let ((?x35405 (* 2.0 l_0_9_271)))
 (let ((?x38687 (* ?x35405 l_0_9_277)))
 (let ((?x35402 (* 2.0 l_0_9_270)))
 (let ((?x38685 (* ?x35402 l_0_9_276)))
 (let ((?x35399 (* 2.0 l_0_9_269)))
 (let ((?x38683 (* ?x35399 l_0_9_275)))
 (let ((?x35396 (* 2.0 l_0_9_268)))
 (let ((?x38681 (* ?x35396 l_0_9_274)))
 (let ((?x31615 (* l_0_9_208 l_0_9_208)))
 (let ((?x31613 (* l_0_9_207 l_0_9_207)))
 (let ((?x31611 (* l_0_9_206 l_0_9_206)))
 (let ((?x31609 (* l_0_9_205 l_0_9_205)))
 (let ((?x31607 (* l_0_9_204 l_0_9_204)))
 (let ((?x31605 (* l_0_9_203 l_0_9_203)))
 (let ((?x31603 (* l_0_9_202 l_0_9_202)))
 (let ((?x31601 (* l_0_9_172 l_0_9_172)))
 (let ((?x31599 (* l_0_9_171 l_0_9_171)))
 (let ((?x31597 (* l_0_9_170 l_0_9_170)))
 (let ((?x31595 (* l_0_9_169 l_0_9_169)))
 (let ((?x31593 (* l_0_9_168 l_0_9_168)))
 (let ((?x39000 (+ (+ (+ (* l_0_9_166 l_0_9_166) (* l_0_9_167 l_0_9_167)) ?x31593) ?x31595)))
 (let ((?x39007 (- (- (- (- (+ (+ (+ ?x39000 ?x31597) ?x31599) ?x31601) ?x31603) ?x31605) ?x31607) ?x31609)))
 (let ((?x39014 (- (- (- (- (- (- (- ?x39007 ?x31611) ?x31613) ?x31615) ?x38681) ?x38683) ?x38685) ?x38687)))
 (let ((?x39021 (+ (+ (+ (+ (+ (- (- ?x39014 ?x38689) ?x38691) ?x34454) ?x34456) ?x34458) ?x34460) ?x34462)))
 (= (+ (+ ?x39021 ?x34464) ?x34466) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34744 (* l_0_9_324 l_0_9_324)))
 (let ((?x34742 (* l_0_9_323 l_0_9_323)))
 (let ((?x34740 (* l_0_9_322 l_0_9_322)))
 (let ((?x34738 (* l_0_9_321 l_0_9_321)))
 (let ((?x34736 (* l_0_9_320 l_0_9_320)))
 (let ((?x34733 (* l_0_9_319 l_0_9_319)))
 (let ((?x34731 (* l_0_9_318 l_0_9_318)))
 (let ((?x34729 (* l_0_9_317 l_0_9_317)))
 (let ((?x32005 (* l_0_9_216 l_0_9_216)))
 (let ((?x32003 (* l_0_9_215 l_0_9_215)))
 (let ((?x32001 (* l_0_9_214 l_0_9_214)))
 (let ((?x31999 (* l_0_9_213 l_0_9_213)))
 (let ((?x31997 (* l_0_9_212 l_0_9_212)))
 (let ((?x31995 (* l_0_9_211 l_0_9_211)))
 (let ((?x31993 (* l_0_9_210 l_0_9_210)))
 (let ((?x31991 (* l_0_9_209 l_0_9_209)))
 (let ((?x31989 (* l_0_9_180 l_0_9_180)))
 (let ((?x31987 (* l_0_9_179 l_0_9_179)))
 (let ((?x31985 (* l_0_9_178 l_0_9_178)))
 (let ((?x31983 (* l_0_9_177 l_0_9_177)))
 (let ((?x31962 (* l_0_9_176 l_0_9_176)))
 (let ((?x31958 (* l_0_9_175 l_0_9_175)))
 (let ((?x39068 (+ (+ (+ (* l_0_9_173 l_0_9_173) (* l_0_9_174 l_0_9_174)) ?x31958) ?x31962)))
 (let ((?x39075 (- (- (- (+ (+ (+ (+ ?x39068 ?x31983) ?x31985) ?x31987) ?x31989) ?x31991) ?x31993) ?x31995)))
 (let ((?x39082 (- (- (- (- (- (- ?x39075 ?x31997) ?x31999) ?x32001) ?x32003) ?x32005) (* (* 2.0 l_0_9_232) l_0_9_245))))
 (let ((?x39086 (- (- ?x39082 (* (* 2.0 l_0_9_233) l_0_9_246)) (* (* 2.0 l_0_9_234) l_0_9_247))))
 (let ((?x39090 (- (- ?x39086 (* (* 2.0 l_0_9_235) l_0_9_248)) (* (* 2.0 l_0_9_236) l_0_9_249))))
 (let ((?x39095 (+ (+ (+ (- ?x39090 (* (* 2.0 l_0_9_237) l_0_9_250)) ?x34729) ?x34731) ?x34733)))
 (= (+ (+ (+ (+ (+ ?x39095 ?x34736) ?x34738) ?x34740) ?x34742) ?x34744) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x39162 (- (- (* (- l_0_9_218) l_0_9_218) (* l_0_9_219 l_0_9_219)) (* (* 2.0 l_0_9_326) l_0_9_353))))
 (= (- ?x39162 (* (* 2.0 l_0_9_327) l_0_9_354)) 0.0)))
(assert
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x35080 (* ?x32872 l_0_9_282)))
 (let ((?x32869 (* 2.0 l_0_9_254)))
 (let ((?x35078 (* ?x32869 l_0_9_281)))
 (let ((?x39189 (- (* (* (- 2.0) l_0_9_218) l_0_9_227) (* (* 2.0 l_0_9_219) l_0_9_228))))
 (let ((?x39195 (- (- (+ (+ ?x39189 ?x35078) ?x35080) (* (* 2.0 l_0_9_335) l_0_9_353)) (* (* 2.0 l_0_9_336) l_0_9_354))))
 (let ((?x39199 (- (- ?x39195 (* (* 2.0 l_0_9_337) l_0_9_355)) (* (* 2.0 l_0_9_338) l_0_9_356))))
 (= (- ?x39199 (* (* 2.0 l_0_9_339) l_0_9_357)) 0.0)))))))))
(assert
 (let ((?x39260 (* l_0_9_360 l_0_9_360)))
 (let ((?x39258 (* l_0_9_359 l_0_9_359)))
 (let ((?x39256 (* l_0_9_358 l_0_9_358)))
 (let ((?x39254 (* l_0_9_357 l_0_9_357)))
 (let ((?x39252 (* l_0_9_356 l_0_9_356)))
 (let ((?x39250 (* l_0_9_355 l_0_9_355)))
 (let ((?x39248 (* l_0_9_354 l_0_9_354)))
 (let ((?x39246 (* l_0_9_353 l_0_9_353)))
 (let ((?x39245 (- (* (* (- 2.0) l_0_9_218) l_0_9_245) (* (* 2.0 l_0_9_219) l_0_9_246))))
 (let ((?x39259 (- (- (- (- (- (- (- ?x39245 ?x39246) ?x39248) ?x39250) ?x39252) ?x39254) ?x39256) ?x39258)))
 (= (- ?x39259 ?x39260) 0.0))))))))))))
(assert
 (let ((?x35228 (* 2.0 l_0_9_267)))
 (let ((?x35229 (* ?x35228 l_0_9_285)))
 (let ((?x35225 (* 2.0 l_0_9_266)))
 (let ((?x35226 (* ?x35225 l_0_9_284)))
 (let ((?x35222 (* 2.0 l_0_9_265)))
 (let ((?x35223 (* ?x35222 l_0_9_283)))
 (let ((?x35219 (* 2.0 l_0_9_264)))
 (let ((?x35220 (* ?x35219 l_0_9_282)))
 (let ((?x35216 (* 2.0 l_0_9_263)))
 (let ((?x35217 (* ?x35216 l_0_9_281)))
 (let ((?x39306 (* l_0_9_231 l_0_9_231)))
 (let ((?x39304 (* l_0_9_230 l_0_9_230)))
 (let ((?x39302 (* l_0_9_229 l_0_9_229)))
 (let ((?x39303 (- (- (* (- l_0_9_227) l_0_9_227) (* l_0_9_228 l_0_9_228)) ?x39302)))
 (let ((?x39312 (+ (+ (+ (+ (+ (- (- ?x39303 ?x39304) ?x39306) ?x35217) ?x35220) ?x35223) ?x35226) ?x35229)))
 (= ?x39312 0.0)))))))))))))))))
(assert
 (let ((?x35679 (* l_0_9_288 l_0_9_288)))
 (let ((?x35677 (* l_0_9_287 l_0_9_287)))
 (let ((?x35675 (* l_0_9_286 l_0_9_286)))
 (let ((?x35673 (* l_0_9_285 l_0_9_285)))
 (let ((?x35671 (* l_0_9_284 l_0_9_284)))
 (let ((?x35669 (* l_0_9_283 l_0_9_283)))
 (let ((?x35667 (* l_0_9_282 l_0_9_282)))
 (let ((?x35665 (* l_0_9_281 l_0_9_281)))
 (let ((?x39334 (- (* (* (- 2.0) l_0_9_227) l_0_9_245) (* (* 2.0 l_0_9_228) l_0_9_246))))
 (let ((?x39338 (- (- ?x39334 (* (* 2.0 l_0_9_229) l_0_9_247)) (* (* 2.0 l_0_9_230) l_0_9_248))))
 (let ((?x39343 (+ (+ (+ (- ?x39338 (* (* 2.0 l_0_9_231) l_0_9_249)) ?x35665) ?x35667) ?x35669)))
 (= (+ (+ (+ (+ (+ ?x39343 ?x35671) ?x35673) ?x35675) ?x35677) ?x35679) 0.0)))))))))))))
(assert
 (let ((?x39392 (* l_0_9_252 l_0_9_252)))
 (let ((?x39390 (* l_0_9_251 l_0_9_251)))
 (let ((?x39388 (* l_0_9_250 l_0_9_250)))
 (let ((?x39386 (* l_0_9_249 l_0_9_249)))
 (let ((?x39384 (* l_0_9_248 l_0_9_248)))
 (let ((?x39382 (* l_0_9_247 l_0_9_247)))
 (let ((?x39383 (- (- (* (- l_0_9_245) l_0_9_245) (* l_0_9_246 l_0_9_246)) ?x39382)))
 (= (- (- (- (- (- ?x39383 ?x39384) ?x39386) ?x39388) ?x39390) ?x39392) 0.0)))))))))
(assert
 (let ((?x39426 (- (- (* (- l_0_9_254) l_0_9_254) (* l_0_9_255 l_0_9_255)) (* (* 2.0 l_0_9_326) l_0_9_346))))
 (= (- ?x39426 (* (* 2.0 l_0_9_327) l_0_9_347)) 0.0)))
(assert
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x39452 (* ?x32872 l_0_9_257)))
 (let ((?x39455 (- (- (* (* (- 2.0) l_0_9_254) l_0_9_256) ?x39452) (* (* 2.0 l_0_9_328) l_0_9_346))))
 (let ((?x39459 (- (- ?x39455 (* (* 2.0 l_0_9_329) l_0_9_347)) (* (* 2.0 l_0_9_330) l_0_9_348))))
 (= ?x39459 0.0))))))
(assert
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x39495 (* ?x32872 l_0_9_275)))
 (let ((?x39493 (* ?x32872 l_0_9_264)))
 (let ((?x39492 (+ (* (* (- 2.0) l_0_9_254) l_0_9_263) (* (* 2.0 l_0_9_254) l_0_9_274))))
 (let ((?x39500 (- (- (+ (- ?x39492 ?x39493) ?x39495) (* (* 2.0 l_0_9_335) l_0_9_346)) (* (* 2.0 l_0_9_336) l_0_9_347))))
 (let ((?x39504 (- (- ?x39500 (* (* 2.0 l_0_9_337) l_0_9_348)) (* (* 2.0 l_0_9_338) l_0_9_349))))
 (= (- ?x39504 (* (* 2.0 l_0_9_339) l_0_9_350)) 0.0))))))))
(assert
 (let ((?x39571 (* l_0_9_352 l_0_9_352)))
 (let ((?x39569 (* l_0_9_351 l_0_9_351)))
 (let ((?x39567 (* l_0_9_350 l_0_9_350)))
 (let ((?x39565 (* l_0_9_349 l_0_9_349)))
 (let ((?x39563 (* l_0_9_348 l_0_9_348)))
 (let ((?x39561 (* l_0_9_347 l_0_9_347)))
 (let ((?x39559 (* l_0_9_346 l_0_9_346)))
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x39495 (* ?x32872 l_0_9_275)))
 (let ((?x39564 (- (- (- (- (* (* (- 2.0) l_0_9_254) l_0_9_274) ?x39495) ?x39559) ?x39561) ?x39563)))
 (= (- (- (- (- ?x39564 ?x39565) ?x39567) ?x39569) ?x39571) 0.0))))))))))))
(assert
 (let ((?x39604 (* l_0_9_258 l_0_9_258)))
 (let ((?x39605 (- (- (* (- l_0_9_256) l_0_9_256) (* l_0_9_257 l_0_9_257)) ?x39604)))
 (= ?x39605 0.0))))
(assert
 (let ((?x29236 (* 2.0 l_0_9_258)))
 (let ((?x39628 (* ?x29236 l_0_9_276)))
 (let ((?x39626 (* ?x29236 l_0_9_265)))
 (let ((?x29233 (* 2.0 l_0_9_257)))
 (let ((?x39624 (* ?x29233 l_0_9_275)))
 (let ((?x39622 (* ?x29233 l_0_9_264)))
 (let ((?x39621 (+ (* (* (- 2.0) l_0_9_256) l_0_9_263) (* (* 2.0 l_0_9_256) l_0_9_274))))
 (= (+ (- (+ (- ?x39621 ?x39622) ?x39624) ?x39626) ?x39628) 0.0)))))))))
(assert
 (let ((?x29236 (* 2.0 l_0_9_258)))
 (let ((?x39628 (* ?x29236 l_0_9_276)))
 (let ((?x29233 (* 2.0 l_0_9_257)))
 (let ((?x39624 (* ?x29233 l_0_9_275)))
 (= (- (- (* (* (- 2.0) l_0_9_256) l_0_9_274) ?x39624) ?x39628) 0.0))))))
(assert
 (let ((?x39688 (* l_0_9_267 l_0_9_267)))
 (let ((?x35228 (* 2.0 l_0_9_267)))
 (let ((?x39686 (* ?x35228 l_0_9_278)))
 (let ((?x39684 (* l_0_9_266 l_0_9_266)))
 (let ((?x35225 (* 2.0 l_0_9_266)))
 (let ((?x39682 (* ?x35225 l_0_9_277)))
 (let ((?x39680 (* l_0_9_265 l_0_9_265)))
 (let ((?x35222 (* 2.0 l_0_9_265)))
 (let ((?x39678 (* ?x35222 l_0_9_276)))
 (let ((?x39676 (* l_0_9_264 l_0_9_264)))
 (let ((?x35219 (* 2.0 l_0_9_264)))
 (let ((?x39674 (* ?x35219 l_0_9_275)))
 (let ((?x39675 (+ (- (* (* 2.0 l_0_9_263) l_0_9_274) (* l_0_9_263 l_0_9_263)) ?x39674)))
 (let ((?x39689 (- (+ (- (+ (- (+ (- ?x39675 ?x39676) ?x39678) ?x39680) ?x39682) ?x39684) ?x39686) ?x39688)))
 (= ?x39689 0.0))))))))))))))))
(assert
 (let ((?x39745 (* l_0_9_280 l_0_9_280)))
 (let ((?x39743 (* l_0_9_279 l_0_9_279)))
 (let ((?x39741 (* l_0_9_278 l_0_9_278)))
 (let ((?x39739 (* l_0_9_277 l_0_9_277)))
 (let ((?x39737 (* l_0_9_276 l_0_9_276)))
 (let ((?x39735 (* l_0_9_275 l_0_9_275)))
 (let ((?x39733 (* l_0_9_274 l_0_9_274)))
 (let ((?x35228 (* 2.0 l_0_9_267)))
 (let ((?x39686 (* ?x35228 l_0_9_278)))
 (let ((?x35225 (* 2.0 l_0_9_266)))
 (let ((?x39682 (* ?x35225 l_0_9_277)))
 (let ((?x35222 (* 2.0 l_0_9_265)))
 (let ((?x39678 (* ?x35222 l_0_9_276)))
 (let ((?x35219 (* 2.0 l_0_9_264)))
 (let ((?x39674 (* ?x35219 l_0_9_275)))
 (let ((?x39732 (- (- (- (- (* (* (- 2.0) l_0_9_263) l_0_9_274) ?x39674) ?x39678) ?x39682) ?x39686)))
 (let ((?x39746 (+ (+ (+ (+ (+ (+ (+ ?x39732 ?x39733) ?x39735) ?x39737) ?x39739) ?x39741) ?x39743) ?x39745)))
 (= ?x39746 0.0)))))))))))))))))))
(assert
 (let ((?x39745 (* l_0_9_280 l_0_9_280)))
 (let ((?x39743 (* l_0_9_279 l_0_9_279)))
 (let ((?x39741 (* l_0_9_278 l_0_9_278)))
 (let ((?x39739 (* l_0_9_277 l_0_9_277)))
 (let ((?x39737 (* l_0_9_276 l_0_9_276)))
 (let ((?x39772 (- (- (* (- l_0_9_274) l_0_9_274) (* l_0_9_275 l_0_9_275)) ?x39737)))
 (= (- (- (- (- ?x39772 ?x39739) ?x39741) ?x39743) ?x39745) 0.0))))))))
(assert
 (let ((?x39794 (- (+ (* l_0_9_254 l_0_9_254) (* l_0_9_255 l_0_9_255)) (* (* 2.0 l_0_9_326) l_0_9_335))))
 (= (- ?x39794 (* (* 2.0 l_0_9_327) l_0_9_336)) 0.0)))
(assert
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x39452 (* ?x32872 l_0_9_257)))
 (let ((?x39815 (- (+ (* (* 2.0 l_0_9_254) l_0_9_256) ?x39452) (* (* 2.0 l_0_9_328) l_0_9_335))))
 (let ((?x39819 (- (- ?x39815 (* (* 2.0 l_0_9_329) l_0_9_336)) (* (* 2.0 l_0_9_330) l_0_9_337))))
 (= ?x39819 0.0))))))
(assert
 (let ((?x39851 (* l_0_9_339 l_0_9_339)))
 (let ((?x39849 (* l_0_9_338 l_0_9_338)))
 (let ((?x39847 (* l_0_9_337 l_0_9_337)))
 (let ((?x39845 (* l_0_9_336 l_0_9_336)))
 (let ((?x39843 (* l_0_9_335 l_0_9_335)))
 (let ((?x32872 (* 2.0 l_0_9_255)))
 (let ((?x39493 (* ?x32872 l_0_9_264)))
 (let ((?x39848 (- (- (- (+ (* (* 2.0 l_0_9_254) l_0_9_263) ?x39493) ?x39843) ?x39845) ?x39847)))
 (= (- (- ?x39848 ?x39849) ?x39851) 0.0))))))))))
(assert
 (let ((?x39604 (* l_0_9_258 l_0_9_258)))
 (= (+ (+ (* l_0_9_256 l_0_9_256) (* l_0_9_257 l_0_9_257)) ?x39604) 0.0)))
(assert
 (let ((?x29236 (* 2.0 l_0_9_258)))
 (let ((?x39626 (* ?x29236 l_0_9_265)))
 (let ((?x29233 (* 2.0 l_0_9_257)))
 (let ((?x39622 (* ?x29233 l_0_9_264)))
 (= (+ (+ (* (* 2.0 l_0_9_256) l_0_9_263) ?x39622) ?x39626) 0.0))))))
(assert
 (let ((?x39688 (* l_0_9_267 l_0_9_267)))
 (let ((?x39684 (* l_0_9_266 l_0_9_266)))
 (let ((?x39680 (* l_0_9_265 l_0_9_265)))
 (let ((?x39882 (+ (+ (+ (* l_0_9_263 l_0_9_263) (* l_0_9_264 l_0_9_264)) ?x39680) ?x39684)))
 (= (+ ?x39882 ?x39688) 0.0))))))
(assert
 (= (- (* (- l_0_9_326) l_0_9_326) (* l_0_9_327 l_0_9_327)) 0.0))
(assert
 (let ((?x39903 (- (* (* (- 2.0) l_0_9_326) l_0_9_328) (* (* 2.0 l_0_9_327) l_0_9_329))))
 (= ?x39903 0.0)))
(assert
 (let ((?x39920 (* l_0_9_330 l_0_9_330)))
 (let ((?x39921 (- (- (* (- l_0_9_328) l_0_9_328) (* l_0_9_329 l_0_9_329)) ?x39920)))
 (= ?x39921 0.0))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_28 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_37 0.0))
(assert
 (>= l_0_9_39 0.0))
(assert
 (>= l_0_9_42 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_57 0.0))
(assert
 (>= l_0_9_64 0.0))
(assert
 (>= l_0_9_72 0.0))
(assert
 (>= l_0_9_73 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_82 0.0))
(assert
 (>= l_0_9_87 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_109 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_114 0.0))
(assert
 (>= l_0_9_118 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_129 0.0))
(assert
 (>= l_0_9_136 0.0))
(assert
 (>= l_0_9_144 0.0))
(assert
 (>= l_0_9_145 0.0))
(assert
 (>= l_0_9_147 0.0))
(assert
 (>= l_0_9_150 0.0))
(assert
 (>= l_0_9_154 0.0))
(assert
 (>= l_0_9_159 0.0))
(assert
 (>= l_0_9_165 0.0))
(assert
 (>= l_0_9_172 0.0))
(assert
 (>= l_0_9_180 0.0))
(assert
 (>= l_0_9_181 0.0))
(assert
 (>= l_0_9_183 0.0))
(assert
 (>= l_0_9_186 0.0))
(assert
 (>= l_0_9_190 0.0))
(assert
 (>= l_0_9_195 0.0))
(assert
 (>= l_0_9_201 0.0))
(assert
 (>= l_0_9_208 0.0))
(assert
 (>= l_0_9_216 0.0))
(assert
 (>= l_0_9_217 0.0))
(assert
 (>= l_0_9_219 0.0))
(assert
 (>= l_0_9_222 0.0))
(assert
 (>= l_0_9_226 0.0))
(assert
 (>= l_0_9_231 0.0))
(assert
 (>= l_0_9_237 0.0))
(assert
 (>= l_0_9_244 0.0))
(assert
 (>= l_0_9_252 0.0))
(assert
 (>= l_0_9_253 0.0))
(assert
 (>= l_0_9_255 0.0))
(assert
 (>= l_0_9_258 0.0))
(assert
 (>= l_0_9_262 0.0))
(assert
 (>= l_0_9_267 0.0))
(assert
 (>= l_0_9_273 0.0))
(assert
 (>= l_0_9_280 0.0))
(assert
 (>= l_0_9_288 0.0))
(assert
 (>= l_0_9_289 0.0))
(assert
 (>= l_0_9_291 0.0))
(assert
 (>= l_0_9_294 0.0))
(assert
 (>= l_0_9_298 0.0))
(assert
 (>= l_0_9_303 0.0))
(assert
 (>= l_0_9_309 0.0))
(assert
 (>= l_0_9_316 0.0))
(assert
 (>= l_0_9_324 0.0))
(assert
 (>= l_0_9_325 0.0))
(assert
 (>= l_0_9_327 0.0))
(assert
 (>= l_0_9_330 0.0))
(assert
 (>= l_0_9_334 0.0))
(assert
 (>= l_0_9_339 0.0))
(assert
 (>= l_0_9_345 0.0))
(assert
 (>= l_0_9_352 0.0))
(assert
 (>= l_0_9_360 0.0))
(assert
 (let ((?x40035 (* l_0_10_39 l_0_10_39)))
 (let ((?x40033 (* l_0_10_38 l_0_10_38)))
 (let ((?x40019 (* l_0_10_3 l_0_10_3)))
 (let ((?x40017 (* l_0_10_291 l_0_10_291)))
 (let ((?x40020 (+ (- (- (* l_0_10_2 l_0_10_2) (* l_0_10_290 l_0_10_290)) ?x40017) ?x40019)))
 (let ((?x40026 (- (- ?x40020 (* (* 2.0 l_0_10_326) l_0_10_331)) (* (* 2.0 l_0_10_327) l_0_10_332))))
 (let ((?x40032 (- (- ?x40026 (* (* 2.0 l_0_10_362) l_0_10_367)) (* (* 2.0 l_0_10_363) l_0_10_368))))
 (= (+ (- (- ?x40032 ?x40033) ?x40035) 1.0) 0.0)))))))))
(assert
 (let ((?x40035 (* l_0_10_39 l_0_10_39)))
 (let ((?x40033 (* l_0_10_38 l_0_10_38)))
 (let ((?x40019 (* l_0_10_3 l_0_10_3)))
 (let ((?x40014 (* l_0_10_2 l_0_10_2)))
 (let ((?x40082 (* l_0_10_183 l_0_10_183)))
 (let ((?x40080 (* l_0_10_182 l_0_10_182)))
 (let ((?x40081 (+ (- (* (- l_0_10_146) l_0_10_146) (* l_0_10_147 l_0_10_147)) ?x40080)))
 (let ((?x40090 (- (- (- (+ ?x40081 ?x40082) ?x40014) (* (* 2.0 l_0_10_218) l_0_10_220)) (* (* 2.0 l_0_10_219) l_0_10_221))))
 (let ((?x40097 (- (- (- ?x40090 ?x40019) (* (* 2.0 l_0_10_328) l_0_10_353)) (* (* 2.0 l_0_10_329) l_0_10_354))))
 (let ((?x40103 (- (- ?x40097 (* (* 2.0 l_0_10_330) l_0_10_355)) (* (* 2.0 l_0_10_364) l_0_10_389))))
 (let ((?x40109 (- (- ?x40103 (* (* 2.0 l_0_10_365) l_0_10_390)) (* (* 2.0 l_0_10_366) l_0_10_391))))
 (= (- (+ (+ ?x40109 ?x40033) ?x40035) 1.0) 0.0)))))))))))))
(assert
 (let ((?x40188 (* l_0_10_37 l_0_10_37)))
 (let ((?x40186 (* l_0_10_181 l_0_10_181)))
 (let ((?x40187 (+ (- (* (- l_0_10_1) l_0_10_1) (* l_0_10_145 l_0_10_145)) ?x40186)))
 (= (+ ?x40187 ?x40188) 0.0)))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40240 (* ?x40239 l_0_10_38)))
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x40237 (* ?x40236 l_0_10_319)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x40234 (* ?x40233 l_0_10_318)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x40231 (* ?x40230 l_0_10_317)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40225 (* ?x40224 l_0_10_182)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40222 (* ?x40221 l_0_10_146)))
 (let ((?x40205 (+ (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_101) l_0_10_76))))
 (let ((?x40211 (+ (+ ?x40205 (* (* 2.0 l_0_10_102) l_0_10_77)) (* (* 2.0 l_0_10_103) l_0_10_78))))
 (let ((?x40217 (- (- ?x40211 (* (* 2.0 l_0_10_112) l_0_10_137)) (* (* 2.0 l_0_10_113) l_0_10_138))))
 (let ((?x40229 (- (+ (- (- ?x40217 (* (* 2.0 l_0_10_114) l_0_10_139)) ?x40222) ?x40225) (* (* 2.0 l_0_10_217) l_0_10_220))))
 (= (+ (- (- (- ?x40229 ?x40231) ?x40234) ?x40237) ?x40240) 0.0))))))))))))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40317 (* ?x40239 l_0_10_40)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40315 (* ?x40224 l_0_10_184)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40305 (* ?x40221 l_0_10_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_1) l_0_10_4) ?x40305) ?x40315) ?x40317) 0.0))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40340 (* ?x40239 l_0_10_43)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40338 (* ?x40224 l_0_10_187)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40331 (* ?x40221 l_0_10_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x40331) ?x40338) ?x40340) 0.0))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40363 (* ?x40239 l_0_10_47)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40361 (* ?x40224 l_0_10_191)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40354 (* ?x40221 l_0_10_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_1) l_0_10_11) ?x40354) ?x40361) ?x40363) 0.0))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40386 (* ?x40239 l_0_10_52)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40384 (* ?x40224 l_0_10_196)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40377 (* ?x40221 l_0_10_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_1) l_0_10_16) ?x40377) ?x40384) ?x40386) 0.0))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40413 (* ?x40239 l_0_10_58)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40411 (* ?x40224 l_0_10_202)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40409 (* ?x40221 l_0_10_166)))
 (let ((?x40305 (* ?x40221 l_0_10_148)))
 (let ((?x40407 (+ (* (* (- 2.0) l_0_10_1) l_0_10_22) (* (* 1.0 l_0_10_109) l_0_10_112))))
 (let ((?x40417 (- (+ (+ (- (- ?x40407 ?x40305) ?x40409) ?x40411) ?x40413) (* (* 1.0 l_0_10_73) l_0_10_76))))
 (= ?x40417 0.0)))))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40451 (* ?x40239 l_0_10_65)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40449 (* ?x40224 l_0_10_209)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40447 (* ?x40221 l_0_10_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_1) l_0_10_29) ?x40447) ?x40449) ?x40451) 0.0))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40496 (* ?x40495 l_0_10_41)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40493 (* ?x40492 l_0_10_40)))
 (let ((?x40489 (* 2.0 l_0_10_3)))
 (let ((?x40490 (* ?x40489 l_0_10_5)))
 (let ((?x40487 (* l_0_10_222 l_0_10_222)))
 (let ((?x40485 (* l_0_10_221 l_0_10_221)))
 (let ((?x40483 (* l_0_10_220 l_0_10_220)))
 (let ((?x40480 (* 2.0 l_0_10_2)))
 (let ((?x40481 (* ?x40480 l_0_10_4)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40478 (* ?x40477 l_0_10_185)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40475 (* ?x40474 l_0_10_184)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40472 (* ?x40466 l_0_10_149)))
 (let ((?x40482 (- (+ (+ (- (* (* (- 2.0) l_0_10_146) l_0_10_148) ?x40472) ?x40475) ?x40478) ?x40481)))
 (= (+ (+ (- (- (- (- ?x40482 ?x40483) ?x40485) ?x40487) ?x40490) ?x40493) ?x40496) 0.0))))))))))))))))))))
(assert
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x40585 (* ?x40584 l_0_10_67)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x40582 (* ?x40581 l_0_10_66)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x40579 (* ?x40578 l_0_10_65)))
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40576 (* ?x40495 l_0_10_44)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40574 (* ?x40492 l_0_10_43)))
 (let ((?x40571 (* 2.0 l_0_10_31)))
 (let ((?x40572 (* ?x40571 l_0_10_6)))
 (let ((?x40568 (* 2.0 l_0_10_30)))
 (let ((?x40569 (* ?x40568 l_0_10_5)))
 (let ((?x40489 (* 2.0 l_0_10_3)))
 (let ((?x40566 (* ?x40489 l_0_10_8)))
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x40237 (* ?x40236 l_0_10_319)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x40234 (* ?x40233 l_0_10_318)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x40231 (* ?x40230 l_0_10_317)))
 (let ((?x40560 (* 2.0 l_0_10_29)))
 (let ((?x40561 (* ?x40560 l_0_10_4)))
 (let ((?x40480 (* 2.0 l_0_10_2)))
 (let ((?x40549 (* ?x40480 l_0_10_7)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40547 (* ?x40477 l_0_10_188)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40545 (* ?x40474 l_0_10_187)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40536 (* ?x40466 l_0_10_152)))
 (let ((?x40550 (- (+ (+ (- (* (* (- 2.0) l_0_10_146) l_0_10_151) ?x40536) ?x40545) ?x40547) ?x40549)))
 (let ((?x40556 (- (- ?x40550 (* (* 2.0 l_0_10_220) l_0_10_223)) (* (* 2.0 l_0_10_221) l_0_10_224))))
 (let ((?x40564 (- (- (+ (- ?x40556 (* (* 2.0 l_0_10_222) l_0_10_225)) ?x40561) ?x40231) ?x40234)))
 (let ((?x40580 (- (+ (+ (+ (+ (- (- ?x40564 ?x40237) ?x40566) ?x40569) ?x40572) ?x40574) ?x40576) ?x40579)))
 (= (- (- ?x40580 ?x40582) ?x40585) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40708 (* ?x40495 l_0_10_48)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40706 (* ?x40492 l_0_10_47)))
 (let ((?x40703 (* 2.0 l_0_10_258)))
 (let ((?x40704 (* ?x40703 l_0_10_283)))
 (let ((?x40700 (* 2.0 l_0_10_257)))
 (let ((?x40701 (* ?x40700 l_0_10_282)))
 (let ((?x40697 (* 2.0 l_0_10_256)))
 (let ((?x40698 (* ?x40697 l_0_10_281)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40689 (* ?x40477 l_0_10_192)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40687 (* ?x40474 l_0_10_191)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40685 (* ?x40466 l_0_10_156)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x40683 (* ?x40682 l_0_10_155)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x40680 (* ?x40679 l_0_10_3)))
 (let ((?x40688 (+ (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x40680) ?x40683) ?x40685) ?x40687)))
 (let ((?x40694 (- (- (+ ?x40688 ?x40689) (* (* 2.0 l_0_10_220) l_0_10_227)) (* (* 2.0 l_0_10_221) l_0_10_228))))
 (let ((?x40705 (+ (+ (+ (- ?x40694 (* (* 2.0 l_0_10_222) l_0_10_229)) ?x40698) ?x40701) ?x40704)))
 (= (+ (+ ?x40705 ?x40706) ?x40708) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40811 (* ?x40495 l_0_10_53)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40809 (* ?x40492 l_0_10_52)))
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x40237 (* ?x40236 l_0_10_319)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x40234 (* ?x40233 l_0_10_318)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x40231 (* ?x40230 l_0_10_317)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x40798 (* ?x40797 l_0_10_211)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x40795 (* ?x40794 l_0_10_210)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x40792 (* ?x40791 l_0_10_209)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40789 (* ?x40477 l_0_10_197)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40787 (* ?x40474 l_0_10_196)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x40785 (* ?x40784 l_0_10_3)))
 (let ((?x40781 (* 2.0 l_0_10_16)))
 (let ((?x40782 (* ?x40781 l_0_10_2)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x40779 (* ?x40778 l_0_10_175)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x40776 (* ?x40775 l_0_10_174)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x40763 (* ?x40761 l_0_10_173)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40757 (* ?x40466 l_0_10_161)))
 (let ((?x40780 (+ (+ (+ (- (* (* (- 2.0) l_0_10_146) l_0_10_160) ?x40757) ?x40763) ?x40776) ?x40779)))
 (let ((?x40799 (- (- (- (+ (+ (- (- ?x40780 ?x40782) ?x40785) ?x40787) ?x40789) ?x40792) ?x40795) ?x40798)))
 (let ((?x40803 (- (- ?x40799 (* (* 2.0 l_0_10_220) l_0_10_232)) (* (* 2.0 l_0_10_221) l_0_10_233))))
 (let ((?x40808 (+ (+ (+ (- ?x40803 (* (* 2.0 l_0_10_222) l_0_10_234)) ?x40231) ?x40234) ?x40237)))
 (= (+ (+ ?x40808 ?x40809) ?x40811) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40920 (* ?x40495 l_0_10_59)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40918 (* ?x40492 l_0_10_58)))
 (let ((?x40703 (* 2.0 l_0_10_258)))
 (let ((?x40704 (* ?x40703 l_0_10_283)))
 (let ((?x40700 (* 2.0 l_0_10_257)))
 (let ((?x40701 (* ?x40700 l_0_10_282)))
 (let ((?x40697 (* 2.0 l_0_10_256)))
 (let ((?x40698 (* ?x40697 l_0_10_281)))
 (let ((?x40912 (* 2.0 l_0_10_23)))
 (let ((?x40913 (* ?x40912 l_0_10_3)))
 (let ((?x40480 (* 2.0 l_0_10_2)))
 (let ((?x40904 (* ?x40480 l_0_10_22)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40902 (* ?x40477 l_0_10_203)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40900 (* ?x40474 l_0_10_202)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40898 (* ?x40466 l_0_10_167)))
 (let ((?x40472 (* ?x40466 l_0_10_149)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x40895 (* ?x40682 l_0_10_166)))
 (let ((?x40893 (* ?x40682 l_0_10_148)))
 (let ((?x40892 (+ (* (* 1.0 l_0_10_110) l_0_10_112) (* (* 1.0 l_0_10_111) l_0_10_113))))
 (let ((?x40905 (- (+ (+ (- (- (- (- ?x40892 ?x40893) ?x40895) ?x40472) ?x40898) ?x40900) ?x40902) ?x40904)))
 (let ((?x40909 (- (- ?x40905 (* (* 2.0 l_0_10_220) l_0_10_238)) (* (* 2.0 l_0_10_221) l_0_10_239))))
 (let ((?x40916 (- (- (- (- ?x40909 (* (* 2.0 l_0_10_222) l_0_10_240)) ?x40913) ?x40698) ?x40701)))
 (let ((?x40924 (- (+ (+ (- ?x40916 ?x40704) ?x40918) ?x40920) (* (* 1.0 l_0_10_74) l_0_10_76))))
 (= (- ?x40924 (* (* 1.0 l_0_10_75) l_0_10_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x41036 (* ?x40495 l_0_10_66)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x41034 (* ?x40492 l_0_10_65)))
 (let ((?x40489 (* 2.0 l_0_10_3)))
 (let ((?x41032 (* ?x40489 l_0_10_30)))
 (let ((?x40480 (* 2.0 l_0_10_2)))
 (let ((?x41024 (* ?x40480 l_0_10_29)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x41022 (* ?x40477 l_0_10_210)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x41020 (* ?x40474 l_0_10_209)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x41018 (* ?x40466 l_0_10_174)))
 (let ((?x41025 (- (+ (+ (- (* (* (- 2.0) l_0_10_146) l_0_10_173) ?x41018) ?x41020) ?x41022) ?x41024)))
 (let ((?x41029 (- (- ?x41025 (* (* 2.0 l_0_10_220) l_0_10_245)) (* (* 2.0 l_0_10_221) l_0_10_246))))
 (let ((?x41037 (+ (+ (- (- ?x41029 (* (* 2.0 l_0_10_222) l_0_10_247)) ?x41032) ?x41034) ?x41036)))
 (= ?x41037 0.0)))))))))))))))))))
(assert
 (let ((?x41113 (* l_0_10_6 l_0_10_6)))
 (let ((?x41111 (* l_0_10_5 l_0_10_5)))
 (let ((?x41109 (* l_0_10_42 l_0_10_42)))
 (let ((?x41107 (* l_0_10_41 l_0_10_41)))
 (let ((?x41105 (* l_0_10_40 l_0_10_40)))
 (let ((?x41103 (* l_0_10_4 l_0_10_4)))
 (let ((?x41101 (* l_0_10_186 l_0_10_186)))
 (let ((?x41099 (* l_0_10_185 l_0_10_185)))
 (let ((?x41097 (* l_0_10_184 l_0_10_184)))
 (let ((?x41095 (* l_0_10_150 l_0_10_150)))
 (let ((?x41096 (- (- (* (- l_0_10_148) l_0_10_148) (* l_0_10_149 l_0_10_149)) ?x41095)))
 (let ((?x41110 (+ (+ (+ (- (+ (+ (+ ?x41096 ?x41097) ?x41099) ?x41101) ?x41103) ?x41105) ?x41107) ?x41109)))
 (= (- (- ?x41110 ?x41111) ?x41113) 0.0))))))))))))))
(assert
 (let ((?x41169 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x41166 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x41163 (* ?x40584 l_0_10_45)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x41161 (* ?x40581 l_0_10_44)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x41159 (* ?x40578 l_0_10_43)))
 (let ((?x41157 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x41154 (* ?x40797 l_0_10_189)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x41152 (* ?x40794 l_0_10_188)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x41150 (* ?x40791 l_0_10_187)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41148 (* ?x40778 l_0_10_153)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41146 (* ?x40775 l_0_10_152)))
 (let ((?x41153 (+ (+ (- (- (* (* (- 2.0) l_0_10_148) l_0_10_151) ?x41146) ?x41148) ?x41150) ?x41152)))
 (let ((?x41170 (- (- (+ (+ (+ (- (+ ?x41153 ?x41154) ?x41157) ?x41159) ?x41161) ?x41163) ?x41166) ?x41169)))
 (= ?x41170 0.0)))))))))))))))))))))))
(assert
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x41249 (* ?x40584 l_0_10_49)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x41247 (* ?x40581 l_0_10_48)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x41245 (* ?x40578 l_0_10_47)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x41243 (* ?x40797 l_0_10_193)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x41241 (* ?x40794 l_0_10_192)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x41239 (* ?x40791 l_0_10_191)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41237 (* ?x40778 l_0_10_157)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41235 (* ?x40775 l_0_10_156)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x41233 (* ?x40761 l_0_10_155)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x41231 (* ?x41230 l_0_10_6)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x41228 (* ?x40679 l_0_10_5)))
 (let ((?x41236 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x41228) ?x41231) ?x41233) ?x41235)))
 (let ((?x41250 (+ (+ (+ (+ (+ (+ (- ?x41236 ?x41237) ?x41239) ?x41241) ?x41243) ?x41245) ?x41247) ?x41249)))
 (= ?x41250 0.0))))))))))))))))))))))))))
(assert
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x41321 (* ?x40584 l_0_10_54)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x41319 (* ?x40581 l_0_10_53)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x41317 (* ?x40578 l_0_10_52)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x41315 (* ?x40797 l_0_10_198)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x41313 (* ?x40794 l_0_10_197)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x41311 (* ?x40791 l_0_10_196)))
 (let ((?x41308 (* 2.0 l_0_10_18)))
 (let ((?x41309 (* ?x41308 l_0_10_6)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x41306 (* ?x40784 l_0_10_5)))
 (let ((?x40781 (* 2.0 l_0_10_16)))
 (let ((?x41295 (* ?x40781 l_0_10_4)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41291 (* ?x40778 l_0_10_162)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41287 (* ?x40775 l_0_10_161)))
 (let ((?x41307 (- (- (- (- (* (* (- 2.0) l_0_10_148) l_0_10_160) ?x41287) ?x41291) ?x41295) ?x41306)))
 (let ((?x41322 (+ (+ (+ (+ (+ (+ (- ?x41307 ?x41309) ?x41311) ?x41313) ?x41315) ?x41317) ?x41319) ?x41321)))
 (= ?x41322 0.0))))))))))))))))))))))))))
(assert
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x41406 (* ?x40584 l_0_10_60)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x41404 (* ?x40581 l_0_10_59)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x41402 (* ?x40578 l_0_10_58)))
 (let ((?x41399 (* 2.0 l_0_10_24)))
 (let ((?x41400 (* ?x41399 l_0_10_6)))
 (let ((?x40912 (* 2.0 l_0_10_23)))
 (let ((?x41397 (* ?x40912 l_0_10_5)))
 (let ((?x41394 (* 2.0 l_0_10_22)))
 (let ((?x41395 (* ?x41394 l_0_10_4)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x41392 (* ?x40797 l_0_10_204)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x41390 (* ?x40794 l_0_10_203)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x41388 (* ?x40791 l_0_10_202)))
 (let ((?x41095 (* l_0_10_150 l_0_10_150)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41385 (* ?x40778 l_0_10_168)))
 (let ((?x41086 (* l_0_10_149 l_0_10_149)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41382 (* ?x40775 l_0_10_167)))
 (let ((?x41117 (* l_0_10_148 l_0_10_148)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x41379 (* ?x40761 l_0_10_166)))
 (let ((?x41365 (+ (* (/ 1.0 2.0) (* l_0_10_112 l_0_10_112)) (* (/ 1.0 2.0) (* l_0_10_113 l_0_10_113)))))
 (let ((?x41383 (- (- (- (+ ?x41365 (* (/ 1.0 2.0) (* l_0_10_114 l_0_10_114))) ?x41379) ?x41117) ?x41382)))
 (let ((?x41396 (- (+ (+ (+ (- (- (- ?x41383 ?x41086) ?x41385) ?x41095) ?x41388) ?x41390) ?x41392) ?x41395)))
 (let ((?x41410 (- (+ (+ (+ (- (- ?x41396 ?x41397) ?x41400) ?x41402) ?x41404) ?x41406) (* (* (/ 1.0 2.0) l_0_10_76) l_0_10_76))))
 (let ((?x41416 (- (- ?x41410 (* (* (/ 1.0 2.0) l_0_10_77) l_0_10_77)) (* (* (/ 1.0 2.0) l_0_10_78) l_0_10_78))))
 (= ?x41416 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x40585 (* ?x40584 l_0_10_67)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x40582 (* ?x40581 l_0_10_66)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x40579 (* ?x40578 l_0_10_65)))
 (let ((?x40571 (* 2.0 l_0_10_31)))
 (let ((?x40572 (* ?x40571 l_0_10_6)))
 (let ((?x40568 (* 2.0 l_0_10_30)))
 (let ((?x40569 (* ?x40568 l_0_10_5)))
 (let ((?x40560 (* 2.0 l_0_10_29)))
 (let ((?x40561 (* ?x40560 l_0_10_4)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x40798 (* ?x40797 l_0_10_211)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x40795 (* ?x40794 l_0_10_210)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x40792 (* ?x40791 l_0_10_209)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x40779 (* ?x40778 l_0_10_175)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x40776 (* ?x40775 l_0_10_174)))
 (let ((?x41508 (+ (+ (- (- (* (* (- 2.0) l_0_10_148) l_0_10_173) ?x40776) ?x40779) ?x40792) ?x40795)))
 (let ((?x41515 (+ (+ (+ (- (- (- (+ ?x41508 ?x40798) ?x40561) ?x40569) ?x40572) ?x40579) ?x40582) ?x40585)))
 (= ?x41515 0.0))))))))))))))))))))))))))
(assert
 (let ((?x41568 (* l_0_10_9 l_0_10_9)))
 (let ((?x41566 (* l_0_10_8 l_0_10_8)))
 (let ((?x41564 (* l_0_10_7 l_0_10_7)))
 (let ((?x41562 (* l_0_10_46 l_0_10_46)))
 (let ((?x41560 (* l_0_10_45 l_0_10_45)))
 (let ((?x41558 (* l_0_10_44 l_0_10_44)))
 (let ((?x41556 (* l_0_10_43 l_0_10_43)))
 (let ((?x41554 (* l_0_10_190 l_0_10_190)))
 (let ((?x41552 (* l_0_10_189 l_0_10_189)))
 (let ((?x41550 (* l_0_10_188 l_0_10_188)))
 (let ((?x41548 (* l_0_10_187 l_0_10_187)))
 (let ((?x41546 (* l_0_10_154 l_0_10_154)))
 (let ((?x41544 (* l_0_10_153 l_0_10_153)))
 (let ((?x41542 (* l_0_10_152 l_0_10_152)))
 (let ((?x41543 (- (- (* (- l_0_10_10) l_0_10_10) (* l_0_10_151 l_0_10_151)) ?x41542)))
 (let ((?x41557 (+ (+ (+ (+ (+ (- (- ?x41543 ?x41544) ?x41546) ?x41548) ?x41550) ?x41552) ?x41554) ?x41556)))
 (= (- (- (- (+ (+ (+ ?x41557 ?x41558) ?x41560) ?x41562) ?x41564) ?x41566) ?x41568) 0.0))))))))))))))))))
(assert
 (let ((?x41648 (* 2.0 l_0_10_46)))
 (let ((?x41649 (* ?x41648 l_0_10_50)))
 (let ((?x41645 (* 2.0 l_0_10_45)))
 (let ((?x41646 (* ?x41645 l_0_10_49)))
 (let ((?x41642 (* 2.0 l_0_10_44)))
 (let ((?x41643 (* ?x41642 l_0_10_48)))
 (let ((?x41639 (* 2.0 l_0_10_43)))
 (let ((?x41640 (* ?x41639 l_0_10_47)))
 (let ((?x41636 (* 2.0 l_0_10_190)))
 (let ((?x41637 (* ?x41636 l_0_10_194)))
 (let ((?x41633 (* 2.0 l_0_10_189)))
 (let ((?x41634 (* ?x41633 l_0_10_193)))
 (let ((?x41630 (* 2.0 l_0_10_188)))
 (let ((?x41631 (* ?x41630 l_0_10_192)))
 (let ((?x41627 (* 2.0 l_0_10_187)))
 (let ((?x41628 (* ?x41627 l_0_10_191)))
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41625 (* ?x41624 l_0_10_158)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41622 (* ?x41621 l_0_10_157)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41619 (* ?x41618 l_0_10_156)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41616 (* ?x41615 l_0_10_155)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x41613 (* ?x41230 l_0_10_9)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x41611 (* ?x40679 l_0_10_8)))
 (let ((?x41608 (* 2.0 l_0_10_11)))
 (let ((?x41609 (* ?x41608 l_0_10_7)))
 (let ((?x41617 (- (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x41609) ?x41611) ?x41613) ?x41616)))
 (let ((?x41638 (+ (+ (+ (+ (- (- (- ?x41617 ?x41619) ?x41622) ?x41625) ?x41628) ?x41631) ?x41634) ?x41637)))
 (= (+ (+ (+ (+ ?x41638 ?x41640) ?x41643) ?x41646) ?x41649) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x41648 (* 2.0 l_0_10_46)))
 (let ((?x41744 (* ?x41648 l_0_10_55)))
 (let ((?x41645 (* 2.0 l_0_10_45)))
 (let ((?x41742 (* ?x41645 l_0_10_54)))
 (let ((?x41642 (* 2.0 l_0_10_44)))
 (let ((?x41740 (* ?x41642 l_0_10_53)))
 (let ((?x41639 (* 2.0 l_0_10_43)))
 (let ((?x41738 (* ?x41639 l_0_10_52)))
 (let ((?x41636 (* 2.0 l_0_10_190)))
 (let ((?x41736 (* ?x41636 l_0_10_199)))
 (let ((?x41633 (* 2.0 l_0_10_189)))
 (let ((?x41734 (* ?x41633 l_0_10_198)))
 (let ((?x41630 (* 2.0 l_0_10_188)))
 (let ((?x41732 (* ?x41630 l_0_10_197)))
 (let ((?x41627 (* 2.0 l_0_10_187)))
 (let ((?x41730 (* ?x41627 l_0_10_196)))
 (let ((?x41308 (* 2.0 l_0_10_18)))
 (let ((?x41728 (* ?x41308 l_0_10_9)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x41726 (* ?x40784 l_0_10_8)))
 (let ((?x40781 (* 2.0 l_0_10_16)))
 (let ((?x41724 (* ?x40781 l_0_10_7)))
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41711 (* ?x41624 l_0_10_163)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41707 (* ?x41621 l_0_10_162)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41703 (* ?x41618 l_0_10_161)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41699 (* ?x41615 l_0_10_160)))
 (let ((?x41712 (- (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_19) ?x41699) ?x41703) ?x41707) ?x41711)))
 (let ((?x41737 (+ (+ (+ (+ (- (- (- ?x41712 ?x41724) ?x41726) ?x41728) ?x41730) ?x41732) ?x41734) ?x41736)))
 (= (+ (+ (+ (+ ?x41737 ?x41738) ?x41740) ?x41742) ?x41744) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x41648 (* 2.0 l_0_10_46)))
 (let ((?x41852 (* ?x41648 l_0_10_61)))
 (let ((?x41645 (* 2.0 l_0_10_45)))
 (let ((?x41850 (* ?x41645 l_0_10_60)))
 (let ((?x41642 (* 2.0 l_0_10_44)))
 (let ((?x41848 (* ?x41642 l_0_10_59)))
 (let ((?x41639 (* 2.0 l_0_10_43)))
 (let ((?x41846 (* ?x41639 l_0_10_58)))
 (let ((?x41399 (* 2.0 l_0_10_24)))
 (let ((?x41844 (* ?x41399 l_0_10_9)))
 (let ((?x40912 (* 2.0 l_0_10_23)))
 (let ((?x41842 (* ?x40912 l_0_10_8)))
 (let ((?x41394 (* 2.0 l_0_10_22)))
 (let ((?x41840 (* ?x41394 l_0_10_7)))
 (let ((?x41636 (* 2.0 l_0_10_190)))
 (let ((?x41838 (* ?x41636 l_0_10_205)))
 (let ((?x41633 (* 2.0 l_0_10_189)))
 (let ((?x41836 (* ?x41633 l_0_10_204)))
 (let ((?x41630 (* 2.0 l_0_10_188)))
 (let ((?x41834 (* ?x41630 l_0_10_203)))
 (let ((?x41627 (* 2.0 l_0_10_187)))
 (let ((?x41832 (* ?x41627 l_0_10_202)))
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41830 (* ?x41624 l_0_10_169)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41828 (* ?x41621 l_0_10_168)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41826 (* ?x41618 l_0_10_167)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41824 (* ?x41615 l_0_10_166)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41148 (* ?x40778 l_0_10_153)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41146 (* ?x40775 l_0_10_152)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x41820 (* ?x40761 l_0_10_151)))
 (let ((?x41798 (+ (* (* (- 2.0) l_0_10_10) l_0_10_25) (* (* 1.0 l_0_10_112) l_0_10_115))))
 (let ((?x41819 (+ (+ ?x41798 (* (* 1.0 l_0_10_113) l_0_10_116)) (* (* 1.0 l_0_10_114) l_0_10_117))))
 (let ((?x41831 (- (- (- (- (- (- (- ?x41819 ?x41820) ?x41146) ?x41148) ?x41824) ?x41826) ?x41828) ?x41830)))
 (let ((?x41845 (- (- (- (+ (+ (+ (+ ?x41831 ?x41832) ?x41834) ?x41836) ?x41838) ?x41840) ?x41842) ?x41844)))
 (let ((?x41856 (- (+ (+ (+ (+ ?x41845 ?x41846) ?x41848) ?x41850) ?x41852) (* (* 1.0 l_0_10_76) l_0_10_79))))
 (let ((?x41862 (- (- ?x41856 (* (* 1.0 l_0_10_77) l_0_10_80)) (* (* 1.0 l_0_10_78) l_0_10_81))))
 (= ?x41862 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x41648 (* 2.0 l_0_10_46)))
 (let ((?x41992 (* ?x41648 l_0_10_68)))
 (let ((?x41645 (* 2.0 l_0_10_45)))
 (let ((?x41990 (* ?x41645 l_0_10_67)))
 (let ((?x41642 (* 2.0 l_0_10_44)))
 (let ((?x41988 (* ?x41642 l_0_10_66)))
 (let ((?x41639 (* 2.0 l_0_10_43)))
 (let ((?x41986 (* ?x41639 l_0_10_65)))
 (let ((?x40571 (* 2.0 l_0_10_31)))
 (let ((?x41984 (* ?x40571 l_0_10_9)))
 (let ((?x40568 (* 2.0 l_0_10_30)))
 (let ((?x41982 (* ?x40568 l_0_10_8)))
 (let ((?x40560 (* 2.0 l_0_10_29)))
 (let ((?x41980 (* ?x40560 l_0_10_7)))
 (let ((?x41636 (* 2.0 l_0_10_190)))
 (let ((?x41978 (* ?x41636 l_0_10_212)))
 (let ((?x41633 (* 2.0 l_0_10_189)))
 (let ((?x41976 (* ?x41633 l_0_10_211)))
 (let ((?x41630 (* 2.0 l_0_10_188)))
 (let ((?x41974 (* ?x41630 l_0_10_210)))
 (let ((?x41627 (* 2.0 l_0_10_187)))
 (let ((?x41972 (* ?x41627 l_0_10_209)))
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41970 (* ?x41624 l_0_10_176)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41968 (* ?x41621 l_0_10_175)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41966 (* ?x41618 l_0_10_174)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41964 (* ?x41615 l_0_10_173)))
 (let ((?x41971 (- (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_32) ?x41964) ?x41966) ?x41968) ?x41970)))
 (let ((?x41985 (- (- (- (+ (+ (+ (+ ?x41971 ?x41972) ?x41974) ?x41976) ?x41978) ?x41980) ?x41982) ?x41984)))
 (= (+ (+ (+ (+ ?x41985 ?x41986) ?x41988) ?x41990) ?x41992) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42101 (* l_0_10_51 l_0_10_51)))
 (let ((?x42099 (* l_0_10_50 l_0_10_50)))
 (let ((?x42097 (* l_0_10_49 l_0_10_49)))
 (let ((?x42095 (* l_0_10_48 l_0_10_48)))
 (let ((?x42093 (* l_0_10_47 l_0_10_47)))
 (let ((?x42091 (* l_0_10_195 l_0_10_195)))
 (let ((?x42089 (* l_0_10_194 l_0_10_194)))
 (let ((?x42087 (* l_0_10_193 l_0_10_193)))
 (let ((?x42085 (* l_0_10_192 l_0_10_192)))
 (let ((?x42083 (* l_0_10_191 l_0_10_191)))
 (let ((?x42081 (* l_0_10_159 l_0_10_159)))
 (let ((?x42079 (* l_0_10_158 l_0_10_158)))
 (let ((?x42077 (* l_0_10_157 l_0_10_157)))
 (let ((?x42075 (* l_0_10_156 l_0_10_156)))
 (let ((?x42073 (* l_0_10_155 l_0_10_155)))
 (let ((?x42071 (* l_0_10_15 l_0_10_15)))
 (let ((?x42069 (* l_0_10_14 l_0_10_14)))
 (let ((?x42056 (* l_0_10_13 l_0_10_13)))
 (let ((?x42068 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x42056)))
 (let ((?x42082 (- (- (- (- (- (- (- ?x42068 ?x42069) ?x42071) ?x42073) ?x42075) ?x42077) ?x42079) ?x42081)))
 (let ((?x42096 (+ (+ (+ (+ (+ (+ (+ ?x42082 ?x42083) ?x42085) ?x42087) ?x42089) ?x42091) ?x42093) ?x42095)))
 (= (+ (+ (+ ?x42096 ?x42097) ?x42099) ?x42101) 0.0)))))))))))))))))))))))
(assert
 (let ((?x42199 (* 2.0 l_0_10_51)))
 (let ((?x42200 (* ?x42199 l_0_10_56)))
 (let ((?x42196 (* 2.0 l_0_10_50)))
 (let ((?x42197 (* ?x42196 l_0_10_55)))
 (let ((?x42193 (* 2.0 l_0_10_49)))
 (let ((?x42194 (* ?x42193 l_0_10_54)))
 (let ((?x42190 (* 2.0 l_0_10_48)))
 (let ((?x42191 (* ?x42190 l_0_10_53)))
 (let ((?x42187 (* 2.0 l_0_10_47)))
 (let ((?x42188 (* ?x42187 l_0_10_52)))
 (let ((?x42184 (* 2.0 l_0_10_195)))
 (let ((?x42185 (* ?x42184 l_0_10_200)))
 (let ((?x42181 (* 2.0 l_0_10_194)))
 (let ((?x42182 (* ?x42181 l_0_10_199)))
 (let ((?x42178 (* 2.0 l_0_10_193)))
 (let ((?x42179 (* ?x42178 l_0_10_198)))
 (let ((?x42175 (* 2.0 l_0_10_192)))
 (let ((?x42176 (* ?x42175 l_0_10_197)))
 (let ((?x42172 (* 2.0 l_0_10_191)))
 (let ((?x42173 (* ?x42172 l_0_10_196)))
 (let ((?x42169 (* 2.0 l_0_10_159)))
 (let ((?x42170 (* ?x42169 l_0_10_164)))
 (let ((?x42166 (* 2.0 l_0_10_158)))
 (let ((?x42167 (* ?x42166 l_0_10_163)))
 (let ((?x42163 (* 2.0 l_0_10_157)))
 (let ((?x42164 (* ?x42163 l_0_10_162)))
 (let ((?x42160 (* 2.0 l_0_10_156)))
 (let ((?x42161 (* ?x42160 l_0_10_161)))
 (let ((?x42157 (* 2.0 l_0_10_155)))
 (let ((?x42158 (* ?x42157 l_0_10_160)))
 (let ((?x42154 (* 2.0 l_0_10_15)))
 (let ((?x42155 (* ?x42154 l_0_10_20)))
 (let ((?x42151 (* 2.0 l_0_10_14)))
 (let ((?x42152 (* ?x42151 l_0_10_19)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x42149 (* ?x41230 l_0_10_18)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x42147 (* ?x40679 l_0_10_17)))
 (let ((?x42156 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_16) ?x42147) ?x42149) ?x42152) ?x42155)))
 (let ((?x42177 (+ (+ (- (- (- (- (- ?x42156 ?x42158) ?x42161) ?x42164) ?x42167) ?x42170) ?x42173) ?x42176)))
 (let ((?x42198 (+ (+ (+ (+ (+ (+ (+ ?x42177 ?x42179) ?x42182) ?x42185) ?x42188) ?x42191) ?x42194) ?x42197)))
 (= (+ ?x42198 ?x42200) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42199 (* 2.0 l_0_10_51)))
 (let ((?x42328 (* ?x42199 l_0_10_62)))
 (let ((?x42196 (* 2.0 l_0_10_50)))
 (let ((?x42326 (* ?x42196 l_0_10_61)))
 (let ((?x42193 (* 2.0 l_0_10_49)))
 (let ((?x42324 (* ?x42193 l_0_10_60)))
 (let ((?x42190 (* 2.0 l_0_10_48)))
 (let ((?x42322 (* ?x42190 l_0_10_59)))
 (let ((?x42187 (* 2.0 l_0_10_47)))
 (let ((?x42320 (* ?x42187 l_0_10_58)))
 (let ((?x42184 (* 2.0 l_0_10_195)))
 (let ((?x42318 (* ?x42184 l_0_10_206)))
 (let ((?x42181 (* 2.0 l_0_10_194)))
 (let ((?x42316 (* ?x42181 l_0_10_205)))
 (let ((?x42178 (* 2.0 l_0_10_193)))
 (let ((?x42314 (* ?x42178 l_0_10_204)))
 (let ((?x42175 (* 2.0 l_0_10_192)))
 (let ((?x42312 (* ?x42175 l_0_10_203)))
 (let ((?x42172 (* 2.0 l_0_10_191)))
 (let ((?x42310 (* ?x42172 l_0_10_202)))
 (let ((?x42169 (* 2.0 l_0_10_159)))
 (let ((?x42308 (* ?x42169 l_0_10_170)))
 (let ((?x42166 (* 2.0 l_0_10_158)))
 (let ((?x42306 (* ?x42166 l_0_10_169)))
 (let ((?x42163 (* 2.0 l_0_10_157)))
 (let ((?x42304 (* ?x42163 l_0_10_168)))
 (let ((?x42160 (* 2.0 l_0_10_156)))
 (let ((?x42302 (* ?x42160 l_0_10_167)))
 (let ((?x42157 (* 2.0 l_0_10_155)))
 (let ((?x42300 (* ?x42157 l_0_10_166)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41237 (* ?x40778 l_0_10_157)))
 (let ((?x42154 (* 2.0 l_0_10_15)))
 (let ((?x42297 (* ?x42154 l_0_10_26)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41235 (* ?x40775 l_0_10_156)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x41233 (* ?x40761 l_0_10_155)))
 (let ((?x42151 (* 2.0 l_0_10_14)))
 (let ((?x42293 (* ?x42151 l_0_10_25)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x42278 (* ?x41230 l_0_10_24)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x42274 (* ?x40679 l_0_10_23)))
 (let ((?x42264 (+ (* (* (- 2.0) l_0_10_11) l_0_10_22) (* (* 1.0 l_0_10_112) l_0_10_119))))
 (let ((?x42272 (+ (+ ?x42264 (* (* 1.0 l_0_10_113) l_0_10_120)) (* (* 1.0 l_0_10_114) l_0_10_121))))
 (let ((?x42299 (- (- (- (- (- (- (- ?x42272 ?x42274) ?x42278) ?x42293) ?x41233) ?x41235) ?x42297) ?x41237)))
 (let ((?x42313 (+ (+ (- (- (- (- (- ?x42299 ?x42300) ?x42302) ?x42304) ?x42306) ?x42308) ?x42310) ?x42312)))
 (let ((?x42327 (+ (+ (+ (+ (+ (+ (+ ?x42313 ?x42314) ?x42316) ?x42318) ?x42320) ?x42322) ?x42324) ?x42326)))
 (let ((?x42333 (- (- (+ ?x42327 ?x42328) (* (* 1.0 l_0_10_76) l_0_10_83)) (* (* 1.0 l_0_10_77) l_0_10_84))))
 (= (- ?x42333 (* (* 1.0 l_0_10_78) l_0_10_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42199 (* 2.0 l_0_10_51)))
 (let ((?x42489 (* ?x42199 l_0_10_69)))
 (let ((?x42196 (* 2.0 l_0_10_50)))
 (let ((?x42487 (* ?x42196 l_0_10_68)))
 (let ((?x42193 (* 2.0 l_0_10_49)))
 (let ((?x42485 (* ?x42193 l_0_10_67)))
 (let ((?x42190 (* 2.0 l_0_10_48)))
 (let ((?x42483 (* ?x42190 l_0_10_66)))
 (let ((?x42187 (* 2.0 l_0_10_47)))
 (let ((?x42481 (* ?x42187 l_0_10_65)))
 (let ((?x42184 (* 2.0 l_0_10_195)))
 (let ((?x42479 (* ?x42184 l_0_10_213)))
 (let ((?x42181 (* 2.0 l_0_10_194)))
 (let ((?x42477 (* ?x42181 l_0_10_212)))
 (let ((?x42178 (* 2.0 l_0_10_193)))
 (let ((?x42475 (* ?x42178 l_0_10_211)))
 (let ((?x42175 (* 2.0 l_0_10_192)))
 (let ((?x42473 (* ?x42175 l_0_10_210)))
 (let ((?x42172 (* 2.0 l_0_10_191)))
 (let ((?x42471 (* ?x42172 l_0_10_209)))
 (let ((?x42169 (* 2.0 l_0_10_159)))
 (let ((?x42469 (* ?x42169 l_0_10_177)))
 (let ((?x42166 (* 2.0 l_0_10_158)))
 (let ((?x42467 (* ?x42166 l_0_10_176)))
 (let ((?x42163 (* 2.0 l_0_10_157)))
 (let ((?x42465 (* ?x42163 l_0_10_175)))
 (let ((?x42160 (* 2.0 l_0_10_156)))
 (let ((?x42463 (* ?x42160 l_0_10_174)))
 (let ((?x42157 (* 2.0 l_0_10_155)))
 (let ((?x42461 (* ?x42157 l_0_10_173)))
 (let ((?x42154 (* 2.0 l_0_10_15)))
 (let ((?x42459 (* ?x42154 l_0_10_33)))
 (let ((?x42151 (* 2.0 l_0_10_14)))
 (let ((?x42457 (* ?x42151 l_0_10_32)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x42455 (* ?x41230 l_0_10_31)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x42453 (* ?x40679 l_0_10_30)))
 (let ((?x42460 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_29) ?x42453) ?x42455) ?x42457) ?x42459)))
 (let ((?x42474 (+ (+ (- (- (- (- (- ?x42460 ?x42461) ?x42463) ?x42465) ?x42467) ?x42469) ?x42471) ?x42473)))
 (let ((?x42488 (+ (+ (+ (+ (+ (+ (+ ?x42474 ?x42475) ?x42477) ?x42479) ?x42481) ?x42483) ?x42485) ?x42487)))
 (= (+ ?x42488 ?x42489) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42617 (* l_0_10_57 l_0_10_57)))
 (let ((?x42615 (* l_0_10_56 l_0_10_56)))
 (let ((?x42613 (* l_0_10_55 l_0_10_55)))
 (let ((?x42611 (* l_0_10_54 l_0_10_54)))
 (let ((?x42609 (* l_0_10_53 l_0_10_53)))
 (let ((?x42607 (* l_0_10_52 l_0_10_52)))
 (let ((?x42605 (* l_0_10_21 l_0_10_21)))
 (let ((?x42603 (* l_0_10_201 l_0_10_201)))
 (let ((?x42601 (* l_0_10_200 l_0_10_200)))
 (let ((?x42599 (* l_0_10_20 l_0_10_20)))
 (let ((?x42597 (* l_0_10_199 l_0_10_199)))
 (let ((?x42595 (* l_0_10_198 l_0_10_198)))
 (let ((?x42593 (* l_0_10_197 l_0_10_197)))
 (let ((?x42591 (* l_0_10_196 l_0_10_196)))
 (let ((?x42589 (* l_0_10_19 l_0_10_19)))
 (let ((?x42587 (* l_0_10_18 l_0_10_18)))
 (let ((?x42585 (* l_0_10_17 l_0_10_17)))
 (let ((?x42583 (* l_0_10_165 l_0_10_165)))
 (let ((?x42568 (* l_0_10_164 l_0_10_164)))
 (let ((?x42565 (* l_0_10_163 l_0_10_163)))
 (let ((?x42561 (* l_0_10_162 l_0_10_162)))
 (let ((?x42557 (* l_0_10_161 l_0_10_161)))
 (let ((?x42559 (- (- (* (- l_0_10_16) l_0_10_16) (* l_0_10_160 l_0_10_160)) ?x42557)))
 (let ((?x42590 (- (- (- (- (- (- (- ?x42559 ?x42561) ?x42565) ?x42568) ?x42583) ?x42585) ?x42587) ?x42589)))
 (let ((?x42604 (+ (+ (- (+ (+ (+ (+ ?x42590 ?x42591) ?x42593) ?x42595) ?x42597) ?x42599) ?x42601) ?x42603)))
 (let ((?x42618 (+ (+ (+ (+ (+ (+ (- ?x42604 ?x42605) ?x42607) ?x42609) ?x42611) ?x42613) ?x42615) ?x42617)))
 (= ?x42618 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x42747 (* 2.0 l_0_10_57)))
 (let ((?x42748 (* ?x42747 l_0_10_63)))
 (let ((?x42744 (* 2.0 l_0_10_56)))
 (let ((?x42745 (* ?x42744 l_0_10_62)))
 (let ((?x42741 (* 2.0 l_0_10_55)))
 (let ((?x42742 (* ?x42741 l_0_10_61)))
 (let ((?x42738 (* 2.0 l_0_10_54)))
 (let ((?x42739 (* ?x42738 l_0_10_60)))
 (let ((?x42735 (* 2.0 l_0_10_53)))
 (let ((?x42736 (* ?x42735 l_0_10_59)))
 (let ((?x42732 (* 2.0 l_0_10_52)))
 (let ((?x42733 (* ?x42732 l_0_10_58)))
 (let ((?x42729 (* 2.0 l_0_10_21)))
 (let ((?x42730 (* ?x42729 l_0_10_27)))
 (let ((?x42726 (* 2.0 l_0_10_201)))
 (let ((?x42727 (* ?x42726 l_0_10_207)))
 (let ((?x42723 (* 2.0 l_0_10_200)))
 (let ((?x42724 (* ?x42723 l_0_10_206)))
 (let ((?x42720 (* 2.0 l_0_10_20)))
 (let ((?x42721 (* ?x42720 l_0_10_26)))
 (let ((?x42717 (* 2.0 l_0_10_199)))
 (let ((?x42718 (* ?x42717 l_0_10_205)))
 (let ((?x42714 (* 2.0 l_0_10_198)))
 (let ((?x42715 (* ?x42714 l_0_10_204)))
 (let ((?x42711 (* 2.0 l_0_10_197)))
 (let ((?x42712 (* ?x42711 l_0_10_203)))
 (let ((?x42708 (* 2.0 l_0_10_196)))
 (let ((?x42709 (* ?x42708 l_0_10_202)))
 (let ((?x42705 (* 2.0 l_0_10_19)))
 (let ((?x42706 (* ?x42705 l_0_10_25)))
 (let ((?x41308 (* 2.0 l_0_10_18)))
 (let ((?x42703 (* ?x41308 l_0_10_24)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x42701 (* ?x40784 l_0_10_23)))
 (let ((?x42698 (* 2.0 l_0_10_165)))
 (let ((?x42699 (* ?x42698 l_0_10_171)))
 (let ((?x42695 (* 2.0 l_0_10_164)))
 (let ((?x42696 (* ?x42695 l_0_10_170)))
 (let ((?x42692 (* 2.0 l_0_10_163)))
 (let ((?x42693 (* ?x42692 l_0_10_169)))
 (let ((?x42689 (* 2.0 l_0_10_162)))
 (let ((?x42690 (* ?x42689 l_0_10_168)))
 (let ((?x42686 (* 2.0 l_0_10_161)))
 (let ((?x42687 (* ?x42686 l_0_10_167)))
 (let ((?x42683 (* 2.0 l_0_10_160)))
 (let ((?x42684 (* ?x42683 l_0_10_166)))
 (let ((?x40781 (* 2.0 l_0_10_16)))
 (let ((?x42681 (* ?x40781 l_0_10_22)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41291 (* ?x40778 l_0_10_162)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41287 (* ?x40775 l_0_10_161)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x42677 (* ?x40761 l_0_10_160)))
 (let ((?x42674 (+ (* (* 1.0 l_0_10_112) l_0_10_124) (* (* 1.0 l_0_10_113) l_0_10_125))))
 (let ((?x42680 (- (- (- (+ ?x42674 (* (* 1.0 l_0_10_114) l_0_10_126)) ?x42677) ?x41287) ?x41291)))
 (let ((?x42700 (- (- (- (- (- (- (- ?x42680 ?x42681) ?x42684) ?x42687) ?x42690) ?x42693) ?x42696) ?x42699)))
 (let ((?x42719 (+ (+ (+ (+ (- (- (- ?x42700 ?x42701) ?x42703) ?x42706) ?x42709) ?x42712) ?x42715) ?x42718)))
 (let ((?x42740 (+ (+ (+ (- (+ (+ (- ?x42719 ?x42721) ?x42724) ?x42727) ?x42730) ?x42733) ?x42736) ?x42739)))
 (let ((?x42751 (- (+ (+ (+ ?x42740 ?x42742) ?x42745) ?x42748) (* (* 1.0 l_0_10_76) l_0_10_88))))
 (let ((?x42755 (- (- ?x42751 (* (* 1.0 l_0_10_77) l_0_10_89)) (* (* 1.0 l_0_10_78) l_0_10_90))))
 (= ?x42755 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42747 (* 2.0 l_0_10_57)))
 (let ((?x42942 (* ?x42747 l_0_10_70)))
 (let ((?x42744 (* 2.0 l_0_10_56)))
 (let ((?x42940 (* ?x42744 l_0_10_69)))
 (let ((?x42741 (* 2.0 l_0_10_55)))
 (let ((?x42938 (* ?x42741 l_0_10_68)))
 (let ((?x42738 (* 2.0 l_0_10_54)))
 (let ((?x42936 (* ?x42738 l_0_10_67)))
 (let ((?x42735 (* 2.0 l_0_10_53)))
 (let ((?x42934 (* ?x42735 l_0_10_66)))
 (let ((?x42732 (* 2.0 l_0_10_52)))
 (let ((?x42932 (* ?x42732 l_0_10_65)))
 (let ((?x42729 (* 2.0 l_0_10_21)))
 (let ((?x42930 (* ?x42729 l_0_10_34)))
 (let ((?x42726 (* 2.0 l_0_10_201)))
 (let ((?x42928 (* ?x42726 l_0_10_214)))
 (let ((?x42723 (* 2.0 l_0_10_200)))
 (let ((?x42926 (* ?x42723 l_0_10_213)))
 (let ((?x42720 (* 2.0 l_0_10_20)))
 (let ((?x42924 (* ?x42720 l_0_10_33)))
 (let ((?x42717 (* 2.0 l_0_10_199)))
 (let ((?x42922 (* ?x42717 l_0_10_212)))
 (let ((?x42714 (* 2.0 l_0_10_198)))
 (let ((?x42920 (* ?x42714 l_0_10_211)))
 (let ((?x42711 (* 2.0 l_0_10_197)))
 (let ((?x42918 (* ?x42711 l_0_10_210)))
 (let ((?x42708 (* 2.0 l_0_10_196)))
 (let ((?x42916 (* ?x42708 l_0_10_209)))
 (let ((?x42705 (* 2.0 l_0_10_19)))
 (let ((?x42914 (* ?x42705 l_0_10_32)))
 (let ((?x41308 (* 2.0 l_0_10_18)))
 (let ((?x42912 (* ?x41308 l_0_10_31)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x42910 (* ?x40784 l_0_10_30)))
 (let ((?x42698 (* 2.0 l_0_10_165)))
 (let ((?x42908 (* ?x42698 l_0_10_178)))
 (let ((?x42695 (* 2.0 l_0_10_164)))
 (let ((?x42906 (* ?x42695 l_0_10_177)))
 (let ((?x42692 (* 2.0 l_0_10_163)))
 (let ((?x42904 (* ?x42692 l_0_10_176)))
 (let ((?x42689 (* 2.0 l_0_10_162)))
 (let ((?x42902 (* ?x42689 l_0_10_175)))
 (let ((?x42686 (* 2.0 l_0_10_161)))
 (let ((?x42900 (* ?x42686 l_0_10_174)))
 (let ((?x42683 (* 2.0 l_0_10_160)))
 (let ((?x42898 (* ?x42683 l_0_10_173)))
 (let ((?x42905 (- (- (- (- (* (* (- 2.0) l_0_10_16) l_0_10_29) ?x42898) ?x42900) ?x42902) ?x42904)))
 (let ((?x42919 (+ (+ (- (- (- (- (- ?x42905 ?x42906) ?x42908) ?x42910) ?x42912) ?x42914) ?x42916) ?x42918)))
 (let ((?x42933 (+ (- (+ (+ (- (+ (+ ?x42919 ?x42920) ?x42922) ?x42924) ?x42926) ?x42928) ?x42930) ?x42932)))
 (= (+ (+ (+ (+ (+ ?x42933 ?x42934) ?x42936) ?x42938) ?x42940) ?x42942) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x43110 (* l_0_10_64 l_0_10_64)))
 (let ((?x43108 (* l_0_10_63 l_0_10_63)))
 (let ((?x43106 (* l_0_10_62 l_0_10_62)))
 (let ((?x43104 (* l_0_10_61 l_0_10_61)))
 (let ((?x43102 (* l_0_10_60 l_0_10_60)))
 (let ((?x43100 (* l_0_10_59 l_0_10_59)))
 (let ((?x43098 (* l_0_10_58 l_0_10_58)))
 (let ((?x43096 (* l_0_10_28 l_0_10_28)))
 (let ((?x43094 (* l_0_10_27 l_0_10_27)))
 (let ((?x43092 (* l_0_10_26 l_0_10_26)))
 (let ((?x43090 (* l_0_10_25 l_0_10_25)))
 (let ((?x43088 (* l_0_10_24 l_0_10_24)))
 (let ((?x43086 (* l_0_10_23 l_0_10_23)))
 (let ((?x43084 (* l_0_10_22 l_0_10_22)))
 (let ((?x43082 (* l_0_10_208 l_0_10_208)))
 (let ((?x43080 (* l_0_10_207 l_0_10_207)))
 (let ((?x43078 (* l_0_10_206 l_0_10_206)))
 (let ((?x43076 (* l_0_10_205 l_0_10_205)))
 (let ((?x43074 (* l_0_10_204 l_0_10_204)))
 (let ((?x43072 (* l_0_10_203 l_0_10_203)))
 (let ((?x43070 (* l_0_10_202 l_0_10_202)))
 (let ((?x43068 (* l_0_10_172 l_0_10_172)))
 (let ((?x43066 (* l_0_10_171 l_0_10_171)))
 (let ((?x43064 (* l_0_10_170 l_0_10_170)))
 (let ((?x43062 (* l_0_10_169 l_0_10_169)))
 (let ((?x43060 (* l_0_10_168 l_0_10_168)))
 (let ((?x43058 (* l_0_10_167 l_0_10_167)))
 (let ((?x43056 (* l_0_10_166 l_0_10_166)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41385 (* ?x40778 l_0_10_168)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41382 (* ?x40775 l_0_10_167)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x41379 (* ?x40761 l_0_10_166)))
 (let ((?x43032 (+ (* (* 1.0 l_0_10_112) l_0_10_130) (* (* 1.0 l_0_10_113) l_0_10_131))))
 (let ((?x43055 (- (- (- (+ ?x43032 (* (* 1.0 l_0_10_114) l_0_10_132)) ?x41379) ?x41382) ?x41385)))
 (let ((?x43069 (- (- (- (- (- (- (- ?x43055 ?x43056) ?x43058) ?x43060) ?x43062) ?x43064) ?x43066) ?x43068)))
 (let ((?x43083 (+ (+ (+ (+ (+ (+ (+ ?x43069 ?x43070) ?x43072) ?x43074) ?x43076) ?x43078) ?x43080) ?x43082)))
 (let ((?x43097 (- (- (- (- (- (- (- ?x43083 ?x43084) ?x43086) ?x43088) ?x43090) ?x43092) ?x43094) ?x43096)))
 (let ((?x43111 (+ (+ (+ (+ (+ (+ (+ ?x43097 ?x43098) ?x43100) ?x43102) ?x43104) ?x43106) ?x43108) ?x43110)))
 (let ((?x43115 (- (- ?x43111 (* (* 1.0 l_0_10_76) l_0_10_94)) (* (* 1.0 l_0_10_77) l_0_10_95))))
 (= (- ?x43115 (* (* 1.0 l_0_10_78) l_0_10_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x43300 (* (* 2.0 l_0_10_64) l_0_10_71)))
 (let ((?x43297 (* (* 2.0 l_0_10_63) l_0_10_70)))
 (let ((?x43294 (* (* 2.0 l_0_10_62) l_0_10_69)))
 (let ((?x43291 (* (* 2.0 l_0_10_61) l_0_10_68)))
 (let ((?x43288 (* (* 2.0 l_0_10_60) l_0_10_67)))
 (let ((?x43285 (* (* 2.0 l_0_10_59) l_0_10_66)))
 (let ((?x43282 (* (* 2.0 l_0_10_58) l_0_10_65)))
 (let ((?x43279 (* (* 2.0 l_0_10_28) l_0_10_35)))
 (let ((?x43276 (* (* 2.0 l_0_10_27) l_0_10_34)))
 (let ((?x43273 (* (* 2.0 l_0_10_26) l_0_10_33)))
 (let ((?x43270 (* (* 2.0 l_0_10_25) l_0_10_32)))
 (let ((?x41399 (* 2.0 l_0_10_24)))
 (let ((?x43267 (* ?x41399 l_0_10_31)))
 (let ((?x40912 (* 2.0 l_0_10_23)))
 (let ((?x43265 (* ?x40912 l_0_10_30)))
 (let ((?x41394 (* 2.0 l_0_10_22)))
 (let ((?x43263 (* ?x41394 l_0_10_29)))
 (let ((?x43261 (* (* 2.0 l_0_10_208) l_0_10_215)))
 (let ((?x43258 (* (* 2.0 l_0_10_207) l_0_10_214)))
 (let ((?x43255 (* (* 2.0 l_0_10_206) l_0_10_213)))
 (let ((?x43252 (* (* 2.0 l_0_10_205) l_0_10_212)))
 (let ((?x43249 (* (* 2.0 l_0_10_204) l_0_10_211)))
 (let ((?x43246 (* (* 2.0 l_0_10_203) l_0_10_210)))
 (let ((?x43243 (* (* 2.0 l_0_10_202) l_0_10_209)))
 (let ((?x43240 (* (* 2.0 l_0_10_172) l_0_10_179)))
 (let ((?x43237 (* (* 2.0 l_0_10_171) l_0_10_178)))
 (let ((?x43234 (* (* 2.0 l_0_10_170) l_0_10_177)))
 (let ((?x43231 (* (* 2.0 l_0_10_169) l_0_10_176)))
 (let ((?x43228 (* (* 2.0 l_0_10_168) l_0_10_175)))
 (let ((?x43225 (* (* 2.0 l_0_10_167) l_0_10_174)))
 (let ((?x43222 (* (* 2.0 l_0_10_166) l_0_10_173)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x40779 (* ?x40778 l_0_10_175)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x40776 (* ?x40775 l_0_10_174)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x40763 (* ?x40761 l_0_10_173)))
 (let ((?x43208 (- (* (* (- 1.0) l_0_10_101) l_0_10_76) (* (* 1.0 l_0_10_102) l_0_10_77))))
 (let ((?x43213 (+ (- ?x43208 (* (* 1.0 l_0_10_103) l_0_10_78)) (* (* 1.0 l_0_10_112) l_0_10_137))))
 (let ((?x43217 (+ (+ ?x43213 (* (* 1.0 l_0_10_113) l_0_10_138)) (* (* 1.0 l_0_10_114) l_0_10_139))))
 (let ((?x43232 (- (- (- (- (- (- (- ?x43217 ?x40763) ?x40776) ?x40779) ?x43222) ?x43225) ?x43228) ?x43231)))
 (let ((?x43253 (+ (+ (+ (+ (- (- (- ?x43232 ?x43234) ?x43237) ?x43240) ?x43243) ?x43246) ?x43249) ?x43252)))
 (let ((?x43271 (- (- (- (- (+ (+ (+ ?x43253 ?x43255) ?x43258) ?x43261) ?x43263) ?x43265) ?x43267) ?x43270)))
 (let ((?x43292 (+ (+ (+ (+ (- (- (- ?x43271 ?x43273) ?x43276) ?x43279) ?x43282) ?x43285) ?x43288) ?x43291)))
 (= (+ (+ (+ ?x43292 ?x43294) ?x43297) ?x43300) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x43504 (* l_0_10_72 l_0_10_72)))
 (let ((?x43502 (* l_0_10_71 l_0_10_71)))
 (let ((?x43500 (* l_0_10_70 l_0_10_70)))
 (let ((?x43498 (* l_0_10_69 l_0_10_69)))
 (let ((?x43496 (* l_0_10_68 l_0_10_68)))
 (let ((?x43494 (* l_0_10_67 l_0_10_67)))
 (let ((?x43492 (* l_0_10_66 l_0_10_66)))
 (let ((?x43490 (* l_0_10_65 l_0_10_65)))
 (let ((?x43488 (* l_0_10_36 l_0_10_36)))
 (let ((?x43486 (* l_0_10_35 l_0_10_35)))
 (let ((?x43484 (* l_0_10_34 l_0_10_34)))
 (let ((?x43482 (* l_0_10_33 l_0_10_33)))
 (let ((?x43480 (* l_0_10_32 l_0_10_32)))
 (let ((?x43478 (* l_0_10_31 l_0_10_31)))
 (let ((?x43476 (* l_0_10_30 l_0_10_30)))
 (let ((?x43474 (* l_0_10_29 l_0_10_29)))
 (let ((?x43472 (* l_0_10_216 l_0_10_216)))
 (let ((?x43470 (* l_0_10_215 l_0_10_215)))
 (let ((?x43468 (* l_0_10_214 l_0_10_214)))
 (let ((?x43466 (* l_0_10_213 l_0_10_213)))
 (let ((?x43464 (* l_0_10_212 l_0_10_212)))
 (let ((?x43462 (* l_0_10_211 l_0_10_211)))
 (let ((?x43460 (* l_0_10_210 l_0_10_210)))
 (let ((?x43458 (* l_0_10_209 l_0_10_209)))
 (let ((?x43456 (* l_0_10_180 l_0_10_180)))
 (let ((?x43454 (* l_0_10_179 l_0_10_179)))
 (let ((?x43452 (* l_0_10_178 l_0_10_178)))
 (let ((?x43450 (* l_0_10_177 l_0_10_177)))
 (let ((?x43429 (* l_0_10_176 l_0_10_176)))
 (let ((?x43425 (* l_0_10_175 l_0_10_175)))
 (let ((?x43427 (- (- (* (- l_0_10_173) l_0_10_173) (* l_0_10_174 l_0_10_174)) ?x43425)))
 (let ((?x43461 (+ (+ (- (- (- (- (- ?x43427 ?x43429) ?x43450) ?x43452) ?x43454) ?x43456) ?x43458) ?x43460)))
 (let ((?x43475 (- (+ (+ (+ (+ (+ (+ ?x43461 ?x43462) ?x43464) ?x43466) ?x43468) ?x43470) ?x43472) ?x43474)))
 (let ((?x43489 (- (- (- (- (- (- (- ?x43475 ?x43476) ?x43478) ?x43480) ?x43482) ?x43484) ?x43486) ?x43488)))
 (let ((?x43503 (+ (+ (+ (+ (+ (+ (+ ?x43489 ?x43490) ?x43492) ?x43494) ?x43496) ?x43498) ?x43500) ?x43502)))
 (= (+ ?x43503 ?x43504) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40188 (* l_0_10_37 l_0_10_37)))
 (let ((?x43580 (* l_0_10_289 l_0_10_289)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43578 (* ?x43577 l_0_10_295)))
 (let ((?x43579 (- (- (* l_0_10_1 l_0_10_1) (* (* 2.0 l_0_10_109) l_0_10_115)) ?x43578)))
 (= (+ (- (- ?x43579 ?x43580) ?x40188) (* (* 2.0 l_0_10_73) l_0_10_79)) 0.0)))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40240 (* ?x40239 l_0_10_38)))
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x43622 (* ?x43621 l_0_10_296)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x43619 (* ?x43618 l_0_10_295)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43616 (* ?x43577 l_0_10_290)))
 (let ((?x43612 (- (* (* 2.0 l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_110) l_0_10_115))))
 (let ((?x43623 (- (- (- (- ?x43612 (* (* 2.0 l_0_10_111) l_0_10_116)) ?x43616) ?x43619) ?x43622)))
 (let ((?x43629 (- (- ?x43623 (* (* 2.0 l_0_10_325) l_0_10_331)) (* (* 2.0 l_0_10_361) l_0_10_367))))
 (let ((?x43636 (+ (+ (- ?x43629 ?x40240) (* (* 2.0 l_0_10_74) l_0_10_79)) (* (* 2.0 l_0_10_75) l_0_10_80))))
 (= ?x43636 0.0))))))))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40317 (* ?x40239 l_0_10_40)))
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x43703 (* ?x40236 l_0_10_297)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x43701 (* ?x40233 l_0_10_296)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x43699 (* ?x40230 l_0_10_295)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43697 (* ?x43577 l_0_10_292)))
 (let ((?x43692 (- (* (* 2.0 l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_112) l_0_10_115))))
 (let ((?x43696 (- (- ?x43692 (* (* 2.0 l_0_10_113) l_0_10_116)) (* (* 2.0 l_0_10_114) l_0_10_117))))
 (let ((?x43708 (+ (- (- (- (- (- ?x43696 ?x43697) ?x43699) ?x43701) ?x43703) ?x40317) (* (* 2.0 l_0_10_76) l_0_10_79))))
 (let ((?x43714 (+ (+ ?x43708 (* (* 2.0 l_0_10_77) l_0_10_80)) (* (* 2.0 l_0_10_78) l_0_10_81))))
 (= ?x43714 0.0))))))))))))))))
(assert
 (let ((?x43789 (* l_0_10_82 l_0_10_82)))
 (let ((?x43787 (* l_0_10_81 l_0_10_81)))
 (let ((?x43785 (* l_0_10_80 l_0_10_80)))
 (let ((?x43783 (* l_0_10_79 l_0_10_79)))
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40340 (* ?x40239 l_0_10_43)))
 (let ((?x43780 (* l_0_10_298 l_0_10_298)))
 (let ((?x43778 (* l_0_10_297 l_0_10_297)))
 (let ((?x43776 (* l_0_10_296 l_0_10_296)))
 (let ((?x43774 (* l_0_10_295 l_0_10_295)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43578 (* ?x43577 l_0_10_295)))
 (let ((?x43771 (* l_0_10_118 l_0_10_118)))
 (let ((?x43769 (* l_0_10_117 l_0_10_117)))
 (let ((?x43767 (* l_0_10_116 l_0_10_116)))
 (let ((?x43768 (- (- (* (* 2.0 l_0_10_1) l_0_10_7) (* l_0_10_115 l_0_10_115)) ?x43767)))
 (let ((?x43781 (- (- (- (- (- (- (- ?x43768 ?x43769) ?x43771) ?x43578) ?x43774) ?x43776) ?x43778) ?x43780)))
 (= (+ (+ (+ (+ (- ?x43781 ?x40340) ?x43783) ?x43785) ?x43787) ?x43789) 0.0)))))))))))))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40363 (* ?x40239 l_0_10_47)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x43851 (* ?x43850 l_0_10_302)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x43848 (* ?x43847 l_0_10_301)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x43845 (* ?x43844 l_0_10_300)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x43842 (* ?x43841 l_0_10_299)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43839 (* ?x43577 l_0_10_299)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x43837 (* ?x43836 l_0_10_259)))
 (let ((?x43826 (- (* (* 2.0 l_0_10_1) l_0_10_11) (* (* 2.0 l_0_10_115) l_0_10_119))))
 (let ((?x43832 (- (- ?x43826 (* (* 2.0 l_0_10_116) l_0_10_120)) (* (* 2.0 l_0_10_117) l_0_10_121))))
 (let ((?x43843 (- (- (+ (- ?x43832 (* (* 2.0 l_0_10_118) l_0_10_122)) ?x43837) ?x43839) ?x43842)))
 (let ((?x43856 (+ (- (- (- (- ?x43843 ?x43845) ?x43848) ?x43851) ?x40363) (* (* 2.0 l_0_10_79) l_0_10_83))))
 (let ((?x43862 (+ (+ ?x43856 (* (* 2.0 l_0_10_80) l_0_10_84)) (* (* 2.0 l_0_10_81) l_0_10_85))))
 (= (+ ?x43862 (* (* 2.0 l_0_10_82) l_0_10_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40386 (* ?x40239 l_0_10_52)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x43958 (* ?x43850 l_0_10_307)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x43956 (* ?x43847 l_0_10_306)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x43954 (* ?x43844 l_0_10_305)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x43952 (* ?x43841 l_0_10_304)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43950 (* ?x43577 l_0_10_304)))
 (let ((?x43578 (* ?x43577 l_0_10_295)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40338 (* ?x40224 l_0_10_187)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40331 (* ?x40221 l_0_10_151)))
 (let ((?x43940 (- (* (* 2.0 l_0_10_1) l_0_10_16) (* (* 2.0 l_0_10_115) l_0_10_124))))
 (let ((?x43944 (- (- ?x43940 (* (* 2.0 l_0_10_116) l_0_10_125)) (* (* 2.0 l_0_10_117) l_0_10_126))))
 (let ((?x43949 (+ (- (+ (- ?x43944 (* (* 2.0 l_0_10_118) l_0_10_127)) ?x40331) ?x40338) ?x43578)))
 (let ((?x43962 (+ (- (- (- (- (- (- ?x43949 ?x43950) ?x43952) ?x43954) ?x43956) ?x43958) ?x40386) (* (* 2.0 l_0_10_79) l_0_10_88))))
 (let ((?x43966 (+ (+ ?x43962 (* (* 2.0 l_0_10_80) l_0_10_89)) (* (* 2.0 l_0_10_81) l_0_10_90))))
 (= (+ ?x43966 (* (* 2.0 l_0_10_82) l_0_10_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40413 (* ?x40239 l_0_10_58)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x44062 (* ?x43850 l_0_10_313)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x44060 (* ?x43847 l_0_10_312)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x44058 (* ?x43844 l_0_10_311)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x44056 (* ?x43841 l_0_10_310)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x44054 (* ?x43577 l_0_10_310)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x43837 (* ?x43836 l_0_10_259)))
 (let ((?x44046 (- (* (* 2.0 l_0_10_1) l_0_10_22) (* (* 2.0 l_0_10_115) l_0_10_130))))
 (let ((?x44050 (- (- ?x44046 (* (* 2.0 l_0_10_116) l_0_10_131)) (* (* 2.0 l_0_10_117) l_0_10_132))))
 (let ((?x44057 (- (- (- (- ?x44050 (* (* 2.0 l_0_10_118) l_0_10_133)) ?x43837) ?x44054) ?x44056)))
 (let ((?x44066 (+ (- (- (- (- ?x44057 ?x44058) ?x44060) ?x44062) ?x40413) (* (* 2.0 l_0_10_79) l_0_10_94))))
 (let ((?x44070 (+ (+ ?x44066 (* (* 2.0 l_0_10_80) l_0_10_95)) (* (* 2.0 l_0_10_81) l_0_10_96))))
 (= (+ ?x44070 (* (* 2.0 l_0_10_82) l_0_10_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x40239 (* 2.0 l_0_10_37)))
 (let ((?x40451 (* ?x40239 l_0_10_65)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x44173 (* ?x43850 l_0_10_320)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x44171 (* ?x43847 l_0_10_319)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x44169 (* ?x43844 l_0_10_318)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x44167 (* ?x43841 l_0_10_317)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x44165 (* ?x43577 l_0_10_317)))
 (let ((?x44147 (+ (* (* 2.0 l_0_10_1) l_0_10_29) (* (* 2.0 l_0_10_101) l_0_10_79))))
 (let ((?x44151 (+ (+ ?x44147 (* (* 2.0 l_0_10_102) l_0_10_80)) (* (* 2.0 l_0_10_103) l_0_10_81))))
 (let ((?x44156 (- (+ ?x44151 (* (* 2.0 l_0_10_104) l_0_10_82)) (* (* 2.0 l_0_10_115) l_0_10_137))))
 (let ((?x44160 (- (- ?x44156 (* (* 2.0 l_0_10_116) l_0_10_138)) (* (* 2.0 l_0_10_117) l_0_10_139))))
 (let ((?x44164 (- (- ?x44160 (* (* 2.0 l_0_10_118) l_0_10_140)) (* (* 2.0 l_0_10_217) l_0_10_223))))
 (= (- (- (- (- (- (- ?x44164 ?x44165) ?x44167) ?x44169) ?x44171) ?x44173) ?x40451) 0.0)))))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40496 (* ?x40495 l_0_10_41)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40493 (* ?x40492 l_0_10_40)))
 (let ((?x40489 (* 2.0 l_0_10_3)))
 (let ((?x40490 (* ?x40489 l_0_10_5)))
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44253 (* ?x43621 l_0_10_293)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44251 (* ?x43618 l_0_10_292)))
 (let ((?x40480 (* 2.0 l_0_10_2)))
 (let ((?x40481 (* ?x40480 l_0_10_4)))
 (let ((?x44257 (- (+ (- (- ?x40481 ?x44251) ?x44253) ?x40490) (* (* 2.0 l_0_10_328) l_0_10_331))))
 (let ((?x44261 (- (- ?x44257 (* (* 2.0 l_0_10_329) l_0_10_332)) (* (* 2.0 l_0_10_330) l_0_10_333))))
 (let ((?x44265 (- (- ?x44261 (* (* 2.0 l_0_10_364) l_0_10_367)) (* (* 2.0 l_0_10_365) l_0_10_368))))
 (= (- (- (- ?x44265 (* (* 2.0 l_0_10_366) l_0_10_369)) ?x40493) ?x40496) 0.0)))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40576 (* ?x40495 l_0_10_44)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40574 (* ?x40492 l_0_10_43)))
 (let ((?x44346 (* l_0_10_370 l_0_10_370)))
 (let ((?x44344 (* l_0_10_369 l_0_10_369)))
 (let ((?x44342 (* l_0_10_368 l_0_10_368)))
 (let ((?x44340 (* l_0_10_367 l_0_10_367)))
 (let ((?x44338 (* l_0_10_334 l_0_10_334)))
 (let ((?x44336 (* l_0_10_333 l_0_10_333)))
 (let ((?x44334 (* l_0_10_332 l_0_10_332)))
 (let ((?x44332 (* l_0_10_331 l_0_10_331)))
 (let ((?x40489 (* 2.0 l_0_10_3)))
 (let ((?x40566 (* ?x40489 l_0_10_8)))
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x43622 (* ?x43621 l_0_10_296)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x43619 (* ?x43618 l_0_10_295)))
 (let ((?x40480 (* 2.0 l_0_10_2)))
 (let ((?x40549 (* ?x40480 l_0_10_7)))
 (let ((?x44339 (- (- (- (- (+ (- (- ?x40549 ?x43619) ?x43622) ?x40566) ?x44332) ?x44334) ?x44336) ?x44338)))
 (= (- (- (- (- (- (- ?x44339 ?x44340) ?x44342) ?x44344) ?x44346) ?x40574) ?x40576) 0.0)))))))))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40708 (* ?x40495 l_0_10_48)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40706 (* ?x40492 l_0_10_47)))
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44397 (* ?x43621 l_0_10_300)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44395 (* ?x43618 l_0_10_299)))
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x44393 (* ?x44392 l_0_10_260)))
 (let ((?x44389 (* 2.0 l_0_10_254)))
 (let ((?x44390 (* ?x44389 l_0_10_259)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x40680 (* ?x40679 l_0_10_3)))
 (let ((?x44396 (- (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_2) ?x40680) ?x44390) ?x44393) ?x44395)))
 (let ((?x44404 (- (- (- ?x44396 ?x44397) (* (* 2.0 l_0_10_331) l_0_10_335)) (* (* 2.0 l_0_10_332) l_0_10_336))))
 (let ((?x44410 (- (- ?x44404 (* (* 2.0 l_0_10_333) l_0_10_337)) (* (* 2.0 l_0_10_334) l_0_10_338))))
 (let ((?x44416 (- (- ?x44410 (* (* 2.0 l_0_10_367) l_0_10_371)) (* (* 2.0 l_0_10_368) l_0_10_372))))
 (let ((?x44422 (- (- ?x44416 (* (* 2.0 l_0_10_369) l_0_10_373)) (* (* 2.0 l_0_10_370) l_0_10_374))))
 (= (- (- ?x44422 ?x40706) ?x40708) 0.0)))))))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40811 (* ?x40495 l_0_10_53)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40809 (* ?x40492 l_0_10_52)))
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44510 (* ?x43621 l_0_10_305)))
 (let ((?x43622 (* ?x43621 l_0_10_296)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44507 (* ?x43618 l_0_10_304)))
 (let ((?x43619 (* ?x43618 l_0_10_295)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40547 (* ?x40477 l_0_10_188)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40545 (* ?x40474 l_0_10_187)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x40785 (* ?x40784 l_0_10_3)))
 (let ((?x40781 (* 2.0 l_0_10_16)))
 (let ((?x40782 (* ?x40781 l_0_10_2)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40536 (* ?x40466 l_0_10_152)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x44500 (* ?x40682 l_0_10_151)))
 (let ((?x44508 (- (+ (- (- (+ (+ (+ ?x44500 ?x40536) ?x40782) ?x40785) ?x40545) ?x40547) ?x43619) ?x44507)))
 (let ((?x44515 (- (- (- (+ ?x44508 ?x43622) ?x44510) (* (* 2.0 l_0_10_331) l_0_10_340)) (* (* 2.0 l_0_10_332) l_0_10_341))))
 (let ((?x44519 (- (- ?x44515 (* (* 2.0 l_0_10_333) l_0_10_342)) (* (* 2.0 l_0_10_334) l_0_10_343))))
 (let ((?x44523 (- (- ?x44519 (* (* 2.0 l_0_10_367) l_0_10_376)) (* (* 2.0 l_0_10_368) l_0_10_377))))
 (let ((?x44527 (- (- ?x44523 (* (* 2.0 l_0_10_369) l_0_10_378)) (* (* 2.0 l_0_10_370) l_0_10_379))))
 (= (- (- ?x44527 ?x40809) ?x40811) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x40920 (* ?x40495 l_0_10_59)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x40918 (* ?x40492 l_0_10_58)))
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44614 (* ?x43621 l_0_10_311)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44612 (* ?x43618 l_0_10_310)))
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x44393 (* ?x44392 l_0_10_260)))
 (let ((?x44389 (* 2.0 l_0_10_254)))
 (let ((?x44390 (* ?x44389 l_0_10_259)))
 (let ((?x40912 (* 2.0 l_0_10_23)))
 (let ((?x40913 (* ?x40912 l_0_10_3)))
 (let ((?x40480 (* 2.0 l_0_10_2)))
 (let ((?x40904 (* ?x40480 l_0_10_22)))
 (let ((?x44617 (- (- (- (- (- (+ ?x40904 ?x40913) ?x44390) ?x44393) ?x44612) ?x44614) (* (* 2.0 l_0_10_331) l_0_10_346))))
 (let ((?x44621 (- (- ?x44617 (* (* 2.0 l_0_10_332) l_0_10_347)) (* (* 2.0 l_0_10_333) l_0_10_348))))
 (let ((?x44625 (- (- ?x44621 (* (* 2.0 l_0_10_334) l_0_10_349)) (* (* 2.0 l_0_10_367) l_0_10_382))))
 (let ((?x44629 (- (- ?x44625 (* (* 2.0 l_0_10_368) l_0_10_383)) (* (* 2.0 l_0_10_369) l_0_10_384))))
 (= (- (- (- ?x44629 (* (* 2.0 l_0_10_370) l_0_10_385)) ?x40918) ?x40920) 0.0))))))))))))))))))))))
(assert
 (let ((?x40495 (* 2.0 l_0_10_39)))
 (let ((?x41036 (* ?x40495 l_0_10_66)))
 (let ((?x40492 (* 2.0 l_0_10_38)))
 (let ((?x41034 (* ?x40492 l_0_10_65)))
 (let ((?x40489 (* 2.0 l_0_10_3)))
 (let ((?x41032 (* ?x40489 l_0_10_30)))
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44717 (* ?x43621 l_0_10_318)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44715 (* ?x43618 l_0_10_317)))
 (let ((?x40480 (* 2.0 l_0_10_2)))
 (let ((?x41024 (* ?x40480 l_0_10_29)))
 (let ((?x44714 (- (- ?x41024 (* (* 2.0 l_0_10_218) l_0_10_223)) (* (* 2.0 l_0_10_219) l_0_10_224))))
 (let ((?x44721 (- (+ (- (- ?x44714 ?x44715) ?x44717) ?x41032) (* (* 2.0 l_0_10_331) l_0_10_353))))
 (let ((?x44725 (- (- ?x44721 (* (* 2.0 l_0_10_332) l_0_10_354)) (* (* 2.0 l_0_10_333) l_0_10_355))))
 (let ((?x44729 (- (- ?x44725 (* (* 2.0 l_0_10_334) l_0_10_356)) (* (* 2.0 l_0_10_367) l_0_10_389))))
 (let ((?x44733 (- (- ?x44729 (* (* 2.0 l_0_10_368) l_0_10_390)) (* (* 2.0 l_0_10_369) l_0_10_391))))
 (= (- (- (- ?x44733 (* (* 2.0 l_0_10_370) l_0_10_392)) ?x41034) ?x41036) 0.0)))))))))))))))))))
(assert
 (let ((?x41113 (* l_0_10_6 l_0_10_6)))
 (let ((?x41111 (* l_0_10_5 l_0_10_5)))
 (let ((?x41109 (* l_0_10_42 l_0_10_42)))
 (let ((?x41107 (* l_0_10_41 l_0_10_41)))
 (let ((?x41105 (* l_0_10_40 l_0_10_40)))
 (let ((?x41103 (* l_0_10_4 l_0_10_4)))
 (let ((?x44825 (* l_0_10_294 l_0_10_294)))
 (let ((?x44826 (- (- (* (- l_0_10_292) l_0_10_292) (* l_0_10_293 l_0_10_293)) ?x44825)))
 (= (+ (+ (- (- (- (+ ?x44826 ?x41103) ?x41105) ?x41107) ?x41109) ?x41111) ?x41113) 0.0))))))))))
(assert
 (let ((?x41169 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x41166 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x41163 (* ?x40584 l_0_10_45)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x41161 (* ?x40581 l_0_10_44)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x41159 (* ?x40578 l_0_10_43)))
 (let ((?x41157 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x43703 (* ?x40236 l_0_10_297)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x43701 (* ?x40233 l_0_10_296)))
 (let ((?x44857 (- (+ (- (- (* (* (- 2.0) l_0_10_292) l_0_10_295) ?x43701) ?x43703) ?x41157) ?x41159)))
 (= (+ (+ (- (- ?x44857 ?x41161) ?x41163) ?x41166) ?x41169) 0.0))))))))))))))))
(assert
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x41249 (* ?x40584 l_0_10_49)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x41247 (* ?x40581 l_0_10_48)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x41245 (* ?x40578 l_0_10_47)))
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x44892 (* ?x40236 l_0_10_301)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x44890 (* ?x40233 l_0_10_300)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x44888 (* ?x40230 l_0_10_299)))
 (let ((?x40703 (* 2.0 l_0_10_258)))
 (let ((?x44886 (* ?x40703 l_0_10_261)))
 (let ((?x40700 (* 2.0 l_0_10_257)))
 (let ((?x44884 (* ?x40700 l_0_10_260)))
 (let ((?x40697 (* 2.0 l_0_10_256)))
 (let ((?x44882 (* ?x40697 l_0_10_259)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x41231 (* ?x41230 l_0_10_6)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x41228 (* ?x40679 l_0_10_5)))
 (let ((?x44885 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x41228) ?x41231) ?x44882) ?x44884)))
 (let ((?x44896 (- (- (- (- (- (- (+ ?x44885 ?x44886) ?x44888) ?x44890) ?x44892) ?x41245) ?x41247) ?x41249)))
 (= ?x44896 0.0))))))))))))))))))))))))))
(assert
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x41321 (* ?x40584 l_0_10_54)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x41319 (* ?x40581 l_0_10_53)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x41317 (* ?x40578 l_0_10_52)))
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x44951 (* ?x40236 l_0_10_306)))
 (let ((?x43703 (* ?x40236 l_0_10_297)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x44948 (* ?x40233 l_0_10_305)))
 (let ((?x43701 (* ?x40233 l_0_10_296)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x44945 (* ?x40230 l_0_10_304)))
 (let ((?x43699 (* ?x40230 l_0_10_295)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x41154 (* ?x40797 l_0_10_189)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x41152 (* ?x40794 l_0_10_188)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x41150 (* ?x40791 l_0_10_187)))
 (let ((?x41308 (* 2.0 l_0_10_18)))
 (let ((?x41309 (* ?x41308 l_0_10_6)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x41306 (* ?x40784 l_0_10_5)))
 (let ((?x40781 (* 2.0 l_0_10_16)))
 (let ((?x41295 (* ?x40781 l_0_10_4)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41148 (* ?x40778 l_0_10_153)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41146 (* ?x40775 l_0_10_152)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x41820 (* ?x40761 l_0_10_151)))
 (let ((?x44942 (- (- (+ (+ (+ (+ (+ ?x41820 ?x41146) ?x41148) ?x41295) ?x41306) ?x41309) ?x41150) ?x41152)))
 (let ((?x44952 (- (+ (- (+ (- (+ (- ?x44942 ?x41154) ?x43699) ?x44945) ?x43701) ?x44948) ?x43703) ?x44951)))
 (= (- (- (- ?x44952 ?x41317) ?x41319) ?x41321) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40584 (* 2.0 l_0_10_42)))
 (let ((?x41406 (* ?x40584 l_0_10_60)))
 (let ((?x40581 (* 2.0 l_0_10_41)))
 (let ((?x41404 (* ?x40581 l_0_10_59)))
 (let ((?x40578 (* 2.0 l_0_10_40)))
 (let ((?x41402 (* ?x40578 l_0_10_58)))
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x45010 (* ?x40236 l_0_10_312)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x45008 (* ?x40233 l_0_10_311)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x45006 (* ?x40230 l_0_10_310)))
 (let ((?x40703 (* 2.0 l_0_10_258)))
 (let ((?x44886 (* ?x40703 l_0_10_261)))
 (let ((?x40700 (* 2.0 l_0_10_257)))
 (let ((?x44884 (* ?x40700 l_0_10_260)))
 (let ((?x40697 (* 2.0 l_0_10_256)))
 (let ((?x44882 (* ?x40697 l_0_10_259)))
 (let ((?x41399 (* 2.0 l_0_10_24)))
 (let ((?x41400 (* ?x41399 l_0_10_6)))
 (let ((?x40912 (* 2.0 l_0_10_23)))
 (let ((?x41397 (* ?x40912 l_0_10_5)))
 (let ((?x41394 (* 2.0 l_0_10_22)))
 (let ((?x41395 (* ?x41394 l_0_10_4)))
 (let ((?x45009 (- (- (- (- (- (+ (+ ?x41395 ?x41397) ?x41400) ?x44882) ?x44884) ?x44886) ?x45006) ?x45008)))
 (= (- (- (- (- ?x45009 ?x45010) ?x41402) ?x41404) ?x41406) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x41568 (* l_0_10_9 l_0_10_9)))
 (let ((?x41566 (* l_0_10_8 l_0_10_8)))
 (let ((?x41564 (* l_0_10_7 l_0_10_7)))
 (let ((?x41562 (* l_0_10_46 l_0_10_46)))
 (let ((?x41560 (* l_0_10_45 l_0_10_45)))
 (let ((?x41558 (* l_0_10_44 l_0_10_44)))
 (let ((?x41556 (* l_0_10_43 l_0_10_43)))
 (let ((?x43780 (* l_0_10_298 l_0_10_298)))
 (let ((?x43778 (* l_0_10_297 l_0_10_297)))
 (let ((?x43776 (* l_0_10_296 l_0_10_296)))
 (let ((?x45059 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_295 l_0_10_295)) ?x43776) ?x43778)))
 (let ((?x45066 (+ (+ (- (- (- (- (- ?x45059 ?x43780) ?x41556) ?x41558) ?x41560) ?x41562) ?x41564) ?x41566)))
 (= (+ ?x45066 ?x41568) 0.0))))))))))))))
(assert
 (let ((?x41648 (* 2.0 l_0_10_46)))
 (let ((?x41649 (* ?x41648 l_0_10_50)))
 (let ((?x41645 (* 2.0 l_0_10_45)))
 (let ((?x41646 (* ?x41645 l_0_10_49)))
 (let ((?x41642 (* 2.0 l_0_10_44)))
 (let ((?x41643 (* ?x41642 l_0_10_48)))
 (let ((?x41639 (* 2.0 l_0_10_43)))
 (let ((?x41640 (* ?x41639 l_0_10_47)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x43851 (* ?x43850 l_0_10_302)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x43848 (* ?x43847 l_0_10_301)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x43845 (* ?x43844 l_0_10_300)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x43842 (* ?x43841 l_0_10_299)))
 (let ((?x45097 (* l_0_10_262 l_0_10_262)))
 (let ((?x45095 (* l_0_10_261 l_0_10_261)))
 (let ((?x45093 (* l_0_10_260 l_0_10_260)))
 (let ((?x45091 (* l_0_10_259 l_0_10_259)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x41613 (* ?x41230 l_0_10_9)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x41611 (* ?x40679 l_0_10_8)))
 (let ((?x41608 (* 2.0 l_0_10_11)))
 (let ((?x41609 (* ?x41608 l_0_10_7)))
 (let ((?x45092 (+ (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x41609) ?x41611) ?x41613) ?x45091)))
 (let ((?x45102 (- (- (- (- (+ (+ (+ ?x45092 ?x45093) ?x45095) ?x45097) ?x43842) ?x43845) ?x43848) ?x43851)))
 (= (- (- (- (- ?x45102 ?x41640) ?x41643) ?x41646) ?x41649) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x41648 (* 2.0 l_0_10_46)))
 (let ((?x41744 (* ?x41648 l_0_10_55)))
 (let ((?x41645 (* 2.0 l_0_10_45)))
 (let ((?x41742 (* ?x41645 l_0_10_54)))
 (let ((?x41642 (* 2.0 l_0_10_44)))
 (let ((?x41740 (* ?x41642 l_0_10_53)))
 (let ((?x41639 (* 2.0 l_0_10_43)))
 (let ((?x41738 (* ?x41639 l_0_10_52)))
 (let ((?x43780 (* l_0_10_298 l_0_10_298)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x43958 (* ?x43850 l_0_10_307)))
 (let ((?x43778 (* l_0_10_297 l_0_10_297)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x43956 (* ?x43847 l_0_10_306)))
 (let ((?x43776 (* l_0_10_296 l_0_10_296)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x43954 (* ?x43844 l_0_10_305)))
 (let ((?x43774 (* l_0_10_295 l_0_10_295)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x43952 (* ?x43841 l_0_10_304)))
 (let ((?x41554 (* l_0_10_190 l_0_10_190)))
 (let ((?x41552 (* l_0_10_189 l_0_10_189)))
 (let ((?x41550 (* l_0_10_188 l_0_10_188)))
 (let ((?x41548 (* l_0_10_187 l_0_10_187)))
 (let ((?x41308 (* 2.0 l_0_10_18)))
 (let ((?x41728 (* ?x41308 l_0_10_9)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x41726 (* ?x40784 l_0_10_8)))
 (let ((?x40781 (* 2.0 l_0_10_16)))
 (let ((?x41724 (* ?x40781 l_0_10_7)))
 (let ((?x41546 (* l_0_10_154 l_0_10_154)))
 (let ((?x41544 (* l_0_10_153 l_0_10_153)))
 (let ((?x41542 (* l_0_10_152 l_0_10_152)))
 (let ((?x41540 (* l_0_10_151 l_0_10_151)))
 (let ((?x45125 (+ (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_19) ?x41540) ?x41542) ?x41544) ?x41546)))
 (let ((?x45132 (- (- (- (- (+ (+ (+ ?x45125 ?x41724) ?x41726) ?x41728) ?x41548) ?x41550) ?x41552) ?x41554)))
 (let ((?x45139 (- (+ (- (+ (- (+ (- ?x45132 ?x43952) ?x43774) ?x43954) ?x43776) ?x43956) ?x43778) ?x43958)))
 (= (- (- (- (- (+ ?x45139 ?x43780) ?x41738) ?x41740) ?x41742) ?x41744) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x41648 (* 2.0 l_0_10_46)))
 (let ((?x41852 (* ?x41648 l_0_10_61)))
 (let ((?x41645 (* 2.0 l_0_10_45)))
 (let ((?x41850 (* ?x41645 l_0_10_60)))
 (let ((?x41642 (* 2.0 l_0_10_44)))
 (let ((?x41848 (* ?x41642 l_0_10_59)))
 (let ((?x41639 (* 2.0 l_0_10_43)))
 (let ((?x41846 (* ?x41639 l_0_10_58)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x44062 (* ?x43850 l_0_10_313)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x44060 (* ?x43847 l_0_10_312)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x44058 (* ?x43844 l_0_10_311)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x44056 (* ?x43841 l_0_10_310)))
 (let ((?x45097 (* l_0_10_262 l_0_10_262)))
 (let ((?x45095 (* l_0_10_261 l_0_10_261)))
 (let ((?x45093 (* l_0_10_260 l_0_10_260)))
 (let ((?x45091 (* l_0_10_259 l_0_10_259)))
 (let ((?x41399 (* 2.0 l_0_10_24)))
 (let ((?x41844 (* ?x41399 l_0_10_9)))
 (let ((?x40912 (* 2.0 l_0_10_23)))
 (let ((?x41842 (* ?x40912 l_0_10_8)))
 (let ((?x41394 (* 2.0 l_0_10_22)))
 (let ((?x41840 (* ?x41394 l_0_10_7)))
 (let ((?x7528 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_25) ?x41840) ?x41842) ?x41844) ?x45091)))
 (let ((?x7463 (- (- (- (- (- (- (- ?x7528 ?x45093) ?x45095) ?x45097) ?x44056) ?x44058) ?x44060) ?x44062)))
 (= (- (- (- (- ?x7463 ?x41846) ?x41848) ?x41850) ?x41852) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x41648 (* 2.0 l_0_10_46)))
 (let ((?x41992 (* ?x41648 l_0_10_68)))
 (let ((?x41645 (* 2.0 l_0_10_45)))
 (let ((?x41990 (* ?x41645 l_0_10_67)))
 (let ((?x41642 (* 2.0 l_0_10_44)))
 (let ((?x41988 (* ?x41642 l_0_10_66)))
 (let ((?x41639 (* 2.0 l_0_10_43)))
 (let ((?x41986 (* ?x41639 l_0_10_65)))
 (let ((?x40571 (* 2.0 l_0_10_31)))
 (let ((?x41984 (* ?x40571 l_0_10_9)))
 (let ((?x40568 (* 2.0 l_0_10_30)))
 (let ((?x41982 (* ?x40568 l_0_10_8)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x44173 (* ?x43850 l_0_10_320)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x44171 (* ?x43847 l_0_10_319)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x44169 (* ?x43844 l_0_10_318)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x44167 (* ?x43841 l_0_10_317)))
 (let ((?x40560 (* 2.0 l_0_10_29)))
 (let ((?x41980 (* ?x40560 l_0_10_7)))
 (let ((?x7672 (* l_0_10_226 l_0_10_226)))
 (let ((?x7725 (* l_0_10_225 l_0_10_225)))
 (let ((?x7737 (* l_0_10_224 l_0_10_224)))
 (let ((?x7735 (* l_0_10_223 l_0_10_223)))
 (let ((?x7675 (- (- (- (- (* (* 2.0 l_0_10_10) l_0_10_32) ?x7735) ?x7737) ?x7725) ?x7672)))
 (let ((?x7674 (+ (+ (- (- (- (- (+ ?x7675 ?x41980) ?x44167) ?x44169) ?x44171) ?x44173) ?x41982) ?x41984)))
 (= (- (- (- (- ?x7674 ?x41986) ?x41988) ?x41990) ?x41992) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x42101 (* l_0_10_51 l_0_10_51)))
 (let ((?x42099 (* l_0_10_50 l_0_10_50)))
 (let ((?x42097 (* l_0_10_49 l_0_10_49)))
 (let ((?x42095 (* l_0_10_48 l_0_10_48)))
 (let ((?x42093 (* l_0_10_47 l_0_10_47)))
 (let ((?x45148 (* l_0_10_303 l_0_10_303)))
 (let ((?x45146 (* l_0_10_302 l_0_10_302)))
 (let ((?x7418 (* l_0_10_301 l_0_10_301)))
 (let ((?x7419 (* l_0_10_300 l_0_10_300)))
 (let ((?x7413 (* l_0_10_299 l_0_10_299)))
 (let ((?x7455 (* 2.0 l_0_10_262)))
 (let ((?x7443 (* ?x7455 l_0_10_266)))
 (let ((?x7806 (* 2.0 l_0_10_261)))
 (let ((?x7605 (* ?x7806 l_0_10_265)))
 (let ((?x7813 (* 2.0 l_0_10_260)))
 (let ((?x7808 (* ?x7813 l_0_10_264)))
 (let ((?x7807 (* 2.0 l_0_10_259)))
 (let ((?x7814 (* ?x7807 l_0_10_263)))
 (let ((?x42071 (* l_0_10_15 l_0_10_15)))
 (let ((?x42069 (* l_0_10_14 l_0_10_14)))
 (let ((?x42056 (* l_0_10_13 l_0_10_13)))
 (let ((?x7795 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x42056) ?x42069)))
 (let ((?x7421 (- (- (+ (+ (+ (+ (+ ?x7795 ?x42071) ?x7814) ?x7808) ?x7605) ?x7443) ?x7413) ?x7419)))
 (let ((?x45153 (- (- (- (- (- (- (- ?x7421 ?x7418) ?x45146) ?x45148) ?x42093) ?x42095) ?x42097) ?x42099)))
 (= (- ?x45153 ?x42101) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x42199 (* 2.0 l_0_10_51)))
 (let ((?x42200 (* ?x42199 l_0_10_56)))
 (let ((?x42196 (* 2.0 l_0_10_50)))
 (let ((?x42197 (* ?x42196 l_0_10_55)))
 (let ((?x42193 (* 2.0 l_0_10_49)))
 (let ((?x42194 (* ?x42193 l_0_10_54)))
 (let ((?x42190 (* 2.0 l_0_10_48)))
 (let ((?x42191 (* ?x42190 l_0_10_53)))
 (let ((?x42187 (* 2.0 l_0_10_47)))
 (let ((?x42188 (* ?x42187 l_0_10_52)))
 (let ((?x45181 (* 2.0 l_0_10_303)))
 (let ((?x45182 (* ?x45181 l_0_10_308)))
 (let ((?x45178 (* 2.0 l_0_10_302)))
 (let ((?x45179 (* ?x45178 l_0_10_307)))
 (let ((?x45175 (* 2.0 l_0_10_301)))
 (let ((?x45176 (* ?x45175 l_0_10_306)))
 (let ((?x45172 (* 2.0 l_0_10_300)))
 (let ((?x45173 (* ?x45172 l_0_10_305)))
 (let ((?x45169 (* 2.0 l_0_10_299)))
 (let ((?x45170 (* ?x45169 l_0_10_304)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x43851 (* ?x43850 l_0_10_302)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x43848 (* ?x43847 l_0_10_301)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x43845 (* ?x43844 l_0_10_300)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x43842 (* ?x43841 l_0_10_299)))
 (let ((?x7455 (* 2.0 l_0_10_262)))
 (let ((?x45163 (* ?x7455 l_0_10_271)))
 (let ((?x7806 (* 2.0 l_0_10_261)))
 (let ((?x45161 (* ?x7806 l_0_10_270)))
 (let ((?x7813 (* 2.0 l_0_10_260)))
 (let ((?x45159 (* ?x7813 l_0_10_269)))
 (let ((?x7807 (* 2.0 l_0_10_259)))
 (let ((?x45157 (* ?x7807 l_0_10_268)))
 (let ((?x41636 (* 2.0 l_0_10_190)))
 (let ((?x41637 (* ?x41636 l_0_10_194)))
 (let ((?x41633 (* 2.0 l_0_10_189)))
 (let ((?x41634 (* ?x41633 l_0_10_193)))
 (let ((?x41630 (* 2.0 l_0_10_188)))
 (let ((?x41631 (* ?x41630 l_0_10_192)))
 (let ((?x41627 (* 2.0 l_0_10_187)))
 (let ((?x41628 (* ?x41627 l_0_10_191)))
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41625 (* ?x41624 l_0_10_158)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41622 (* ?x41621 l_0_10_157)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41619 (* ?x41618 l_0_10_156)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41616 (* ?x41615 l_0_10_155)))
 (let ((?x42154 (* 2.0 l_0_10_15)))
 (let ((?x42155 (* ?x42154 l_0_10_20)))
 (let ((?x42151 (* 2.0 l_0_10_14)))
 (let ((?x42152 (* ?x42151 l_0_10_19)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x42149 (* ?x41230 l_0_10_18)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x42147 (* ?x40679 l_0_10_17)))
 (let ((?x8048 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_16) ?x42147) ?x42149) ?x42152) ?x42155)))
 (let ((?x7901 (- (- (- (+ (+ (+ (+ ?x8048 ?x41616) ?x41619) ?x41622) ?x41625) ?x41628) ?x41631) ?x41634)))
 (let ((?x45166 (+ (+ (+ (+ (+ (+ (- ?x7901 ?x41637) ?x45157) ?x45159) ?x45161) ?x45163) ?x43842) ?x43845)))
 (let ((?x45183 (- (- (- (- (- (+ (+ ?x45166 ?x43848) ?x43851) ?x45170) ?x45173) ?x45176) ?x45179) ?x45182)))
 (= (- (- (- (- (- ?x45183 ?x42188) ?x42191) ?x42194) ?x42197) ?x42200) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42199 (* 2.0 l_0_10_51)))
 (let ((?x42328 (* ?x42199 l_0_10_62)))
 (let ((?x42196 (* 2.0 l_0_10_50)))
 (let ((?x42326 (* ?x42196 l_0_10_61)))
 (let ((?x42193 (* 2.0 l_0_10_49)))
 (let ((?x42324 (* ?x42193 l_0_10_60)))
 (let ((?x42190 (* 2.0 l_0_10_48)))
 (let ((?x42322 (* ?x42190 l_0_10_59)))
 (let ((?x42187 (* 2.0 l_0_10_47)))
 (let ((?x42320 (* ?x42187 l_0_10_58)))
 (let ((?x45181 (* 2.0 l_0_10_303)))
 (let ((?x45218 (* ?x45181 l_0_10_314)))
 (let ((?x45178 (* 2.0 l_0_10_302)))
 (let ((?x45216 (* ?x45178 l_0_10_313)))
 (let ((?x45175 (* 2.0 l_0_10_301)))
 (let ((?x45214 (* ?x45175 l_0_10_312)))
 (let ((?x45172 (* 2.0 l_0_10_300)))
 (let ((?x45212 (* ?x45172 l_0_10_311)))
 (let ((?x45169 (* 2.0 l_0_10_299)))
 (let ((?x45210 (* ?x45169 l_0_10_310)))
 (let ((?x7455 (* 2.0 l_0_10_262)))
 (let ((?x45208 (* ?x7455 l_0_10_277)))
 (let ((?x7443 (* ?x7455 l_0_10_266)))
 (let ((?x7806 (* 2.0 l_0_10_261)))
 (let ((?x45205 (* ?x7806 l_0_10_276)))
 (let ((?x7605 (* ?x7806 l_0_10_265)))
 (let ((?x7813 (* 2.0 l_0_10_260)))
 (let ((?x45202 (* ?x7813 l_0_10_275)))
 (let ((?x7808 (* ?x7813 l_0_10_264)))
 (let ((?x7807 (* 2.0 l_0_10_259)))
 (let ((?x45199 (* ?x7807 l_0_10_274)))
 (let ((?x7814 (* ?x7807 l_0_10_263)))
 (let ((?x42154 (* 2.0 l_0_10_15)))
 (let ((?x42297 (* ?x42154 l_0_10_26)))
 (let ((?x42151 (* 2.0 l_0_10_14)))
 (let ((?x42293 (* ?x42151 l_0_10_25)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x42278 (* ?x41230 l_0_10_24)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x42274 (* ?x40679 l_0_10_23)))
 (let ((?x45197 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_22) ?x42274) ?x42278) ?x42293) ?x42297)))
 (let ((?x45207 (- (+ (- (+ (- (+ (- ?x45197 ?x7814) ?x45199) ?x7808) ?x45202) ?x7605) ?x45205) ?x7443)))
 (let ((?x45220 (- (- (- (- (- (- (+ ?x45207 ?x45208) ?x45210) ?x45212) ?x45214) ?x45216) ?x45218) ?x42320)))
 (= (- (- (- (- ?x45220 ?x42322) ?x42324) ?x42326) ?x42328) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42199 (* 2.0 l_0_10_51)))
 (let ((?x42489 (* ?x42199 l_0_10_69)))
 (let ((?x42196 (* 2.0 l_0_10_50)))
 (let ((?x42487 (* ?x42196 l_0_10_68)))
 (let ((?x42193 (* 2.0 l_0_10_49)))
 (let ((?x42485 (* ?x42193 l_0_10_67)))
 (let ((?x42190 (* 2.0 l_0_10_48)))
 (let ((?x42483 (* ?x42190 l_0_10_66)))
 (let ((?x42187 (* 2.0 l_0_10_47)))
 (let ((?x42481 (* ?x42187 l_0_10_65)))
 (let ((?x45181 (* 2.0 l_0_10_303)))
 (let ((?x45265 (* ?x45181 l_0_10_321)))
 (let ((?x45178 (* 2.0 l_0_10_302)))
 (let ((?x45263 (* ?x45178 l_0_10_320)))
 (let ((?x45175 (* 2.0 l_0_10_301)))
 (let ((?x45261 (* ?x45175 l_0_10_319)))
 (let ((?x45172 (* 2.0 l_0_10_300)))
 (let ((?x45259 (* ?x45172 l_0_10_318)))
 (let ((?x45169 (* 2.0 l_0_10_299)))
 (let ((?x45257 (* ?x45169 l_0_10_317)))
 (let ((?x7455 (* 2.0 l_0_10_262)))
 (let ((?x45255 (* ?x7455 l_0_10_284)))
 (let ((?x7806 (* 2.0 l_0_10_261)))
 (let ((?x45253 (* ?x7806 l_0_10_283)))
 (let ((?x7813 (* 2.0 l_0_10_260)))
 (let ((?x45251 (* ?x7813 l_0_10_282)))
 (let ((?x7807 (* 2.0 l_0_10_259)))
 (let ((?x45249 (* ?x7807 l_0_10_281)))
 (let ((?x42154 (* 2.0 l_0_10_15)))
 (let ((?x42459 (* ?x42154 l_0_10_33)))
 (let ((?x42151 (* 2.0 l_0_10_14)))
 (let ((?x42457 (* ?x42151 l_0_10_32)))
 (let ((?x41230 (* 2.0 l_0_10_13)))
 (let ((?x42455 (* ?x41230 l_0_10_31)))
 (let ((?x40679 (* 2.0 l_0_10_12)))
 (let ((?x42453 (* ?x40679 l_0_10_30)))
 (let ((?x8608 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_29) ?x42453) ?x42455) ?x42457) ?x42459)))
 (let ((?x8562 (- (- ?x8608 (* (* 2.0 l_0_10_223) l_0_10_227)) (* (* 2.0 l_0_10_224) l_0_10_228))))
 (let ((?x45248 (- (- ?x8562 (* (* 2.0 l_0_10_225) l_0_10_229)) (* (* 2.0 l_0_10_226) l_0_10_230))))
 (let ((?x45262 (- (- (- (+ (+ (+ (+ ?x45248 ?x45249) ?x45251) ?x45253) ?x45255) ?x45257) ?x45259) ?x45261)))
 (let ((?x45271 (- (- (- (- (- (- (- ?x45262 ?x45263) ?x45265) ?x42481) ?x42483) ?x42485) ?x42487) ?x42489)))
 (= ?x45271 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42617 (* l_0_10_57 l_0_10_57)))
 (let ((?x42615 (* l_0_10_56 l_0_10_56)))
 (let ((?x42613 (* l_0_10_55 l_0_10_55)))
 (let ((?x42611 (* l_0_10_54 l_0_10_54)))
 (let ((?x42609 (* l_0_10_53 l_0_10_53)))
 (let ((?x42607 (* l_0_10_52 l_0_10_52)))
 (let ((?x45320 (* l_0_10_309 l_0_10_309)))
 (let ((?x45318 (* l_0_10_308 l_0_10_308)))
 (let ((?x45316 (* l_0_10_307 l_0_10_307)))
 (let ((?x45314 (* l_0_10_306 l_0_10_306)))
 (let ((?x45312 (* l_0_10_305 l_0_10_305)))
 (let ((?x45310 (* l_0_10_304 l_0_10_304)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x43958 (* ?x43850 l_0_10_307)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x43956 (* ?x43847 l_0_10_306)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x43954 (* ?x43844 l_0_10_305)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x43952 (* ?x43841 l_0_10_304)))
 (let ((?x42605 (* l_0_10_21 l_0_10_21)))
 (let ((?x42599 (* l_0_10_20 l_0_10_20)))
 (let ((?x41636 (* 2.0 l_0_10_190)))
 (let ((?x41736 (* ?x41636 l_0_10_199)))
 (let ((?x42589 (* l_0_10_19 l_0_10_19)))
 (let ((?x41633 (* 2.0 l_0_10_189)))
 (let ((?x41734 (* ?x41633 l_0_10_198)))
 (let ((?x41630 (* 2.0 l_0_10_188)))
 (let ((?x41732 (* ?x41630 l_0_10_197)))
 (let ((?x41627 (* 2.0 l_0_10_187)))
 (let ((?x41730 (* ?x41627 l_0_10_196)))
 (let ((?x42587 (* l_0_10_18 l_0_10_18)))
 (let ((?x42585 (* l_0_10_17 l_0_10_17)))
 (let ((?x42621 (* l_0_10_16 l_0_10_16)))
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41711 (* ?x41624 l_0_10_163)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41707 (* ?x41621 l_0_10_162)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41703 (* ?x41618 l_0_10_161)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41699 (* ?x41615 l_0_10_160)))
 (let ((?x45299 (- (+ (+ (+ (+ (+ (+ ?x41699 ?x41703) ?x41707) ?x41711) ?x42621) ?x42585) ?x42587) ?x41730)))
 (let ((?x45306 (+ (+ (+ (- (+ (- (- ?x45299 ?x41732) ?x41734) ?x42589) ?x41736) ?x42599) ?x42605) ?x43952)))
 (let ((?x45317 (- (- (- (- (+ (+ (+ ?x45306 ?x43954) ?x43956) ?x43958) ?x45310) ?x45312) ?x45314) ?x45316)))
 (let ((?x45326 (- (- (- (- (- (- (- ?x45317 ?x45318) ?x45320) ?x42607) ?x42609) ?x42611) ?x42613) ?x42615)))
 (= (- ?x45326 ?x42617) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42747 (* 2.0 l_0_10_57)))
 (let ((?x42748 (* ?x42747 l_0_10_63)))
 (let ((?x42744 (* 2.0 l_0_10_56)))
 (let ((?x42745 (* ?x42744 l_0_10_62)))
 (let ((?x42741 (* 2.0 l_0_10_55)))
 (let ((?x42742 (* ?x42741 l_0_10_61)))
 (let ((?x42738 (* 2.0 l_0_10_54)))
 (let ((?x42739 (* ?x42738 l_0_10_60)))
 (let ((?x42735 (* 2.0 l_0_10_53)))
 (let ((?x42736 (* ?x42735 l_0_10_59)))
 (let ((?x42732 (* 2.0 l_0_10_52)))
 (let ((?x42733 (* ?x42732 l_0_10_58)))
 (let ((?x45353 (* 2.0 l_0_10_309)))
 (let ((?x45354 (* ?x45353 l_0_10_315)))
 (let ((?x45350 (* 2.0 l_0_10_308)))
 (let ((?x45351 (* ?x45350 l_0_10_314)))
 (let ((?x45347 (* 2.0 l_0_10_307)))
 (let ((?x45348 (* ?x45347 l_0_10_313)))
 (let ((?x45344 (* 2.0 l_0_10_306)))
 (let ((?x45345 (* ?x45344 l_0_10_312)))
 (let ((?x45341 (* 2.0 l_0_10_305)))
 (let ((?x45342 (* ?x45341 l_0_10_311)))
 (let ((?x45338 (* 2.0 l_0_10_304)))
 (let ((?x45339 (* ?x45338 l_0_10_310)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x44062 (* ?x43850 l_0_10_313)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x44060 (* ?x43847 l_0_10_312)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x44058 (* ?x43844 l_0_10_311)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x44056 (* ?x43841 l_0_10_310)))
 (let ((?x7455 (* 2.0 l_0_10_262)))
 (let ((?x45163 (* ?x7455 l_0_10_271)))
 (let ((?x7806 (* 2.0 l_0_10_261)))
 (let ((?x45161 (* ?x7806 l_0_10_270)))
 (let ((?x7813 (* 2.0 l_0_10_260)))
 (let ((?x45159 (* ?x7813 l_0_10_269)))
 (let ((?x7807 (* 2.0 l_0_10_259)))
 (let ((?x45157 (* ?x7807 l_0_10_268)))
 (let ((?x42729 (* 2.0 l_0_10_21)))
 (let ((?x42730 (* ?x42729 l_0_10_27)))
 (let ((?x42720 (* 2.0 l_0_10_20)))
 (let ((?x42721 (* ?x42720 l_0_10_26)))
 (let ((?x41636 (* 2.0 l_0_10_190)))
 (let ((?x41838 (* ?x41636 l_0_10_205)))
 (let ((?x42705 (* 2.0 l_0_10_19)))
 (let ((?x42706 (* ?x42705 l_0_10_25)))
 (let ((?x41633 (* 2.0 l_0_10_189)))
 (let ((?x41836 (* ?x41633 l_0_10_204)))
 (let ((?x41630 (* 2.0 l_0_10_188)))
 (let ((?x41834 (* ?x41630 l_0_10_203)))
 (let ((?x41627 (* 2.0 l_0_10_187)))
 (let ((?x41832 (* ?x41627 l_0_10_202)))
 (let ((?x41308 (* 2.0 l_0_10_18)))
 (let ((?x42703 (* ?x41308 l_0_10_24)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x42701 (* ?x40784 l_0_10_23)))
 (let ((?x40781 (* 2.0 l_0_10_16)))
 (let ((?x42681 (* ?x40781 l_0_10_22)))
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41830 (* ?x41624 l_0_10_169)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41828 (* ?x41621 l_0_10_168)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41826 (* ?x41618 l_0_10_167)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41824 (* ?x41615 l_0_10_166)))
 (let ((?x9091 (- (+ (+ (+ (+ (+ (+ ?x41824 ?x41826) ?x41828) ?x41830) ?x42681) ?x42701) ?x42703) ?x41832)))
 (let ((?x9090 (- (+ (+ (- (+ (- (- ?x9091 ?x41834) ?x41836) ?x42706) ?x41838) ?x42721) ?x42730) ?x45157)))
 (let ((?x45337 (+ (+ (+ (+ (- (- (- ?x9090 ?x45159) ?x45161) ?x45163) ?x44056) ?x44058) ?x44060) ?x44062)))
 (let ((?x45356 (- (- (- (- (- (- (- ?x45337 ?x45339) ?x45342) ?x45345) ?x45348) ?x45351) ?x45354) ?x42733)))
 (= (- (- (- (- (- ?x45356 ?x42736) ?x42739) ?x42742) ?x42745) ?x42748) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42747 (* 2.0 l_0_10_57)))
 (let ((?x42942 (* ?x42747 l_0_10_70)))
 (let ((?x42744 (* 2.0 l_0_10_56)))
 (let ((?x42940 (* ?x42744 l_0_10_69)))
 (let ((?x42741 (* 2.0 l_0_10_55)))
 (let ((?x42938 (* ?x42741 l_0_10_68)))
 (let ((?x42738 (* 2.0 l_0_10_54)))
 (let ((?x42936 (* ?x42738 l_0_10_67)))
 (let ((?x42735 (* 2.0 l_0_10_53)))
 (let ((?x42934 (* ?x42735 l_0_10_66)))
 (let ((?x42732 (* 2.0 l_0_10_52)))
 (let ((?x42932 (* ?x42732 l_0_10_65)))
 (let ((?x45353 (* 2.0 l_0_10_309)))
 (let ((?x45406 (* ?x45353 l_0_10_322)))
 (let ((?x45350 (* 2.0 l_0_10_308)))
 (let ((?x45404 (* ?x45350 l_0_10_321)))
 (let ((?x45347 (* 2.0 l_0_10_307)))
 (let ((?x45402 (* ?x45347 l_0_10_320)))
 (let ((?x45344 (* 2.0 l_0_10_306)))
 (let ((?x45400 (* ?x45344 l_0_10_319)))
 (let ((?x45341 (* 2.0 l_0_10_305)))
 (let ((?x45398 (* ?x45341 l_0_10_318)))
 (let ((?x45338 (* 2.0 l_0_10_304)))
 (let ((?x45396 (* ?x45338 l_0_10_317)))
 (let ((?x43850 (* 2.0 l_0_10_298)))
 (let ((?x44173 (* ?x43850 l_0_10_320)))
 (let ((?x43847 (* 2.0 l_0_10_297)))
 (let ((?x44171 (* ?x43847 l_0_10_319)))
 (let ((?x43844 (* 2.0 l_0_10_296)))
 (let ((?x44169 (* ?x43844 l_0_10_318)))
 (let ((?x43841 (* 2.0 l_0_10_295)))
 (let ((?x44167 (* ?x43841 l_0_10_317)))
 (let ((?x42729 (* 2.0 l_0_10_21)))
 (let ((?x42930 (* ?x42729 l_0_10_34)))
 (let ((?x42720 (* 2.0 l_0_10_20)))
 (let ((?x42924 (* ?x42720 l_0_10_33)))
 (let ((?x41636 (* 2.0 l_0_10_190)))
 (let ((?x41978 (* ?x41636 l_0_10_212)))
 (let ((?x42705 (* 2.0 l_0_10_19)))
 (let ((?x42914 (* ?x42705 l_0_10_32)))
 (let ((?x41633 (* 2.0 l_0_10_189)))
 (let ((?x41976 (* ?x41633 l_0_10_211)))
 (let ((?x41630 (* 2.0 l_0_10_188)))
 (let ((?x41974 (* ?x41630 l_0_10_210)))
 (let ((?x41627 (* 2.0 l_0_10_187)))
 (let ((?x41972 (* ?x41627 l_0_10_209)))
 (let ((?x41308 (* 2.0 l_0_10_18)))
 (let ((?x42912 (* ?x41308 l_0_10_31)))
 (let ((?x40784 (* 2.0 l_0_10_17)))
 (let ((?x42910 (* ?x40784 l_0_10_30)))
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41970 (* ?x41624 l_0_10_176)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41968 (* ?x41621 l_0_10_175)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41966 (* ?x41618 l_0_10_174)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41964 (* ?x41615 l_0_10_173)))
 (let ((?x9393 (+ (+ (+ (+ ?x41964 ?x41966) ?x41968) ?x41970) (* (* 2.0 l_0_10_16) l_0_10_29))))
 (let ((?x45381 (- (+ (- (- (- (+ (+ ?x9393 ?x42910) ?x42912) ?x41972) ?x41974) ?x41976) ?x42914) ?x41978)))
 (let ((?x45387 (- (- (+ (+ ?x45381 ?x42924) ?x42930) (* (* 2.0 l_0_10_223) l_0_10_232)) (* (* 2.0 l_0_10_224) l_0_10_233))))
 (let ((?x45391 (- (- ?x45387 (* (* 2.0 l_0_10_225) l_0_10_234)) (* (* 2.0 l_0_10_226) l_0_10_235))))
 (let ((?x45401 (- (- (- (+ (+ (+ (+ ?x45391 ?x44167) ?x44169) ?x44171) ?x44173) ?x45396) ?x45398) ?x45400)))
 (let ((?x45411 (- (- (- (- (- (- (- ?x45401 ?x45402) ?x45404) ?x45406) ?x42932) ?x42934) ?x42936) ?x42938)))
 (= (- (- ?x45411 ?x42940) ?x42942) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x43110 (* l_0_10_64 l_0_10_64)))
 (let ((?x43108 (* l_0_10_63 l_0_10_63)))
 (let ((?x43106 (* l_0_10_62 l_0_10_62)))
 (let ((?x43104 (* l_0_10_61 l_0_10_61)))
 (let ((?x43102 (* l_0_10_60 l_0_10_60)))
 (let ((?x43100 (* l_0_10_59 l_0_10_59)))
 (let ((?x43098 (* l_0_10_58 l_0_10_58)))
 (let ((?x45429 (* l_0_10_316 l_0_10_316)))
 (let ((?x45427 (* l_0_10_315 l_0_10_315)))
 (let ((?x45425 (* l_0_10_314 l_0_10_314)))
 (let ((?x45423 (* l_0_10_313 l_0_10_313)))
 (let ((?x45421 (* l_0_10_312 l_0_10_312)))
 (let ((?x45419 (* l_0_10_311 l_0_10_311)))
 (let ((?x9648 (* l_0_10_310 l_0_10_310)))
 (let ((?x43096 (* l_0_10_28 l_0_10_28)))
 (let ((?x43094 (* l_0_10_27 l_0_10_27)))
 (let ((?x7455 (* 2.0 l_0_10_262)))
 (let ((?x45208 (* ?x7455 l_0_10_277)))
 (let ((?x7806 (* 2.0 l_0_10_261)))
 (let ((?x45205 (* ?x7806 l_0_10_276)))
 (let ((?x7813 (* 2.0 l_0_10_260)))
 (let ((?x45202 (* ?x7813 l_0_10_275)))
 (let ((?x43092 (* l_0_10_26 l_0_10_26)))
 (let ((?x7807 (* 2.0 l_0_10_259)))
 (let ((?x45199 (* ?x7807 l_0_10_274)))
 (let ((?x43090 (* l_0_10_25 l_0_10_25)))
 (let ((?x43088 (* l_0_10_24 l_0_10_24)))
 (let ((?x9830 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x43088) ?x43090)))
 (let ((?x9647 (+ (+ (- (- (- (+ (- ?x9830 ?x45199) ?x43092) ?x45202) ?x45205) ?x45208) ?x43094) ?x43096)))
 (let ((?x45430 (- (- (- (- (- (- (- ?x9647 ?x9648) ?x45419) ?x45421) ?x45423) ?x45425) ?x45427) ?x45429)))
 (let ((?x45437 (- (- (- (- (- (- (- ?x45430 ?x43098) ?x43100) ?x43102) ?x43104) ?x43106) ?x43108) ?x43110)))
 (= ?x45437 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x43300 (* (* 2.0 l_0_10_64) l_0_10_71)))
 (let ((?x43297 (* (* 2.0 l_0_10_63) l_0_10_70)))
 (let ((?x43294 (* (* 2.0 l_0_10_62) l_0_10_69)))
 (let ((?x43291 (* (* 2.0 l_0_10_61) l_0_10_68)))
 (let ((?x43288 (* (* 2.0 l_0_10_60) l_0_10_67)))
 (let ((?x43285 (* (* 2.0 l_0_10_59) l_0_10_66)))
 (let ((?x43282 (* (* 2.0 l_0_10_58) l_0_10_65)))
 (let ((?x45473 (* (* 2.0 l_0_10_316) l_0_10_323)))
 (let ((?x45470 (* (* 2.0 l_0_10_315) l_0_10_322)))
 (let ((?x45467 (* (* 2.0 l_0_10_314) l_0_10_321)))
 (let ((?x45464 (* (* 2.0 l_0_10_313) l_0_10_320)))
 (let ((?x45461 (* (* 2.0 l_0_10_312) l_0_10_319)))
 (let ((?x45458 (* (* 2.0 l_0_10_311) l_0_10_318)))
 (let ((?x45455 (* (* 2.0 l_0_10_310) l_0_10_317)))
 (let ((?x43279 (* (* 2.0 l_0_10_28) l_0_10_35)))
 (let ((?x43276 (* (* 2.0 l_0_10_27) l_0_10_34)))
 (let ((?x7455 (* 2.0 l_0_10_262)))
 (let ((?x45255 (* ?x7455 l_0_10_284)))
 (let ((?x7806 (* 2.0 l_0_10_261)))
 (let ((?x45253 (* ?x7806 l_0_10_283)))
 (let ((?x7813 (* 2.0 l_0_10_260)))
 (let ((?x45251 (* ?x7813 l_0_10_282)))
 (let ((?x43273 (* (* 2.0 l_0_10_26) l_0_10_33)))
 (let ((?x7807 (* 2.0 l_0_10_259)))
 (let ((?x45249 (* ?x7807 l_0_10_281)))
 (let ((?x43270 (* (* 2.0 l_0_10_25) l_0_10_32)))
 (let ((?x41399 (* 2.0 l_0_10_24)))
 (let ((?x43267 (* ?x41399 l_0_10_31)))
 (let ((?x40912 (* 2.0 l_0_10_23)))
 (let ((?x43265 (* ?x40912 l_0_10_30)))
 (let ((?x41394 (* 2.0 l_0_10_22)))
 (let ((?x43263 (* ?x41394 l_0_10_29)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40536 (* ?x40466 l_0_10_152)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x44500 (* ?x40682 l_0_10_151)))
 (let ((?x10106 (+ (* (* 1.0 l_0_10_110) l_0_10_115) (* (* 1.0 l_0_10_111) l_0_10_116))))
 (let ((?x10028 (- (+ (- (- ?x10106 ?x44500) ?x40536) ?x43263) (* (* 2.0 l_0_10_223) l_0_10_238))))
 (let ((?x10034 (- (- ?x10028 (* (* 2.0 l_0_10_224) l_0_10_239)) (* (* 2.0 l_0_10_225) l_0_10_240))))
 (let ((?x45446 (+ (+ (+ (- ?x10034 (* (* 2.0 l_0_10_226) l_0_10_241)) ?x43265) ?x43267) ?x43270)))
 (let ((?x45453 (+ (+ (- (- (- (+ (- ?x45446 ?x45249) ?x43273) ?x45251) ?x45253) ?x45255) ?x43276) ?x43279)))
 (let ((?x45474 (- (- (- (- (- (- (- ?x45453 ?x45455) ?x45458) ?x45461) ?x45464) ?x45467) ?x45470) ?x45473)))
 (let ((?x45481 (- (- (- (- (- (- (- ?x45474 ?x43282) ?x43285) ?x43288) ?x43291) ?x43294) ?x43297) ?x43300)))
 (let ((?x45485 (- (- ?x45481 (* (* 1.0 l_0_10_74) l_0_10_79)) (* (* 1.0 l_0_10_75) l_0_10_80))))
 (= ?x45485 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x43504 (* l_0_10_72 l_0_10_72)))
 (let ((?x43502 (* l_0_10_71 l_0_10_71)))
 (let ((?x43500 (* l_0_10_70 l_0_10_70)))
 (let ((?x43498 (* l_0_10_69 l_0_10_69)))
 (let ((?x43496 (* l_0_10_68 l_0_10_68)))
 (let ((?x43494 (* l_0_10_67 l_0_10_67)))
 (let ((?x43492 (* l_0_10_66 l_0_10_66)))
 (let ((?x43490 (* l_0_10_65 l_0_10_65)))
 (let ((?x43488 (* l_0_10_36 l_0_10_36)))
 (let ((?x43486 (* l_0_10_35 l_0_10_35)))
 (let ((?x43484 (* l_0_10_34 l_0_10_34)))
 (let ((?x43482 (* l_0_10_33 l_0_10_33)))
 (let ((?x45514 (* l_0_10_324 l_0_10_324)))
 (let ((?x45512 (* l_0_10_323 l_0_10_323)))
 (let ((?x45510 (* l_0_10_322 l_0_10_322)))
 (let ((?x45508 (* l_0_10_321 l_0_10_321)))
 (let ((?x45506 (* l_0_10_320 l_0_10_320)))
 (let ((?x43480 (* l_0_10_32 l_0_10_32)))
 (let ((?x45503 (* l_0_10_319 l_0_10_319)))
 (let ((?x10428 (* l_0_10_318 l_0_10_318)))
 (let ((?x10443 (* l_0_10_317 l_0_10_317)))
 (let ((?x43478 (* l_0_10_31 l_0_10_31)))
 (let ((?x43476 (* l_0_10_30 l_0_10_30)))
 (let ((?x43474 (* l_0_10_29 l_0_10_29)))
 (let ((?x10479 (- (* (* (- 2.0) l_0_10_223) l_0_10_245) (* (* 2.0 l_0_10_224) l_0_10_246))))
 (let ((?x10456 (- (- ?x10479 (* (* 2.0 l_0_10_225) l_0_10_247)) (* (* 2.0 l_0_10_226) l_0_10_248))))
 (let ((?x45505 (+ (- (- (- (+ (+ (+ ?x10456 ?x43474) ?x43476) ?x43478) ?x10443) ?x10428) ?x45503) ?x43480)))
 (let ((?x45517 (+ (+ (- (- (- (- (- ?x45505 ?x45506) ?x45508) ?x45510) ?x45512) ?x45514) ?x43482) ?x43484)))
 (let ((?x45524 (- (- (- (- (- (+ (+ ?x45517 ?x43486) ?x43488) ?x43490) ?x43492) ?x43494) ?x43496) ?x43498)))
 (= (- (- (- ?x45524 ?x43500) ?x43502) ?x43504) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x40184 (* l_0_10_145 l_0_10_145)))
 (let ((?x10918 (* l_0_10_109 l_0_10_109)))
 (let ((?x9123 (* (/ 1.0 2.0) ?x10918)))
 (= (- (- ?x9123 ?x40184) (* (* (/ 1.0 2.0) l_0_10_73) l_0_10_73)) 0.0)))))
(assert
 (let ((?x45473 (* (* 2.0 l_0_10_316) l_0_10_323)))
 (let ((?x45470 (* (* 2.0 l_0_10_315) l_0_10_322)))
 (let ((?x45467 (* (* 2.0 l_0_10_314) l_0_10_321)))
 (let ((?x45464 (* (* 2.0 l_0_10_313) l_0_10_320)))
 (let ((?x45461 (* (* 2.0 l_0_10_312) l_0_10_319)))
 (let ((?x45458 (* (* 2.0 l_0_10_311) l_0_10_318)))
 (let ((?x45455 (* (* 2.0 l_0_10_310) l_0_10_317)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x45563 (* ?x43836 l_0_10_281)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40222 (* ?x40221 l_0_10_146)))
 (let ((?x10785 (+ (* (* 2.0 l_0_10_100) l_0_10_107) (* (* 2.0 l_0_10_101) l_0_10_94))))
 (let ((?x10782 (+ (+ ?x10785 (* (* 2.0 l_0_10_102) l_0_10_95)) (* (* 2.0 l_0_10_103) l_0_10_96))))
 (let ((?x10762 (+ (+ ?x10782 (* (* 2.0 l_0_10_104) l_0_10_97)) (* (* 2.0 l_0_10_105) l_0_10_98))))
 (let ((?x45538 (+ (+ ?x10762 (* (* 2.0 l_0_10_106) l_0_10_99)) (* (* 1.0 l_0_10_109) l_0_10_110))))
 (let ((?x45544 (- (- ?x45538 (* (* 2.0 l_0_10_130) l_0_10_137)) (* (* 2.0 l_0_10_131) l_0_10_138))))
 (let ((?x45550 (- (- ?x45544 (* (* 2.0 l_0_10_132) l_0_10_139)) (* (* 2.0 l_0_10_133) l_0_10_140))))
 (let ((?x45556 (- (- ?x45550 (* (* 2.0 l_0_10_134) l_0_10_141)) (* (* 2.0 l_0_10_135) l_0_10_142))))
 (let ((?x45562 (- (- (- ?x45556 (* (* 2.0 l_0_10_136) l_0_10_143)) ?x40222) (* (* 2.0 l_0_10_217) l_0_10_238))))
 (let ((?x45570 (- (- (- (- (- (- (- ?x45562 ?x45563) ?x45455) ?x45458) ?x45461) ?x45464) ?x45467) ?x45470)))
 (= (- (- ?x45570 ?x45473) (* (* 1.0 l_0_10_73) l_0_10_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40331 (* ?x40221 l_0_10_151)))
 (let ((?x11133 (- (- (* (* 1.0 l_0_10_109) l_0_10_115) ?x40331) (* (* 1.0 l_0_10_73) l_0_10_79))))
 (= ?x11133 0.0)))))
(assert
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40354 (* ?x40221 l_0_10_155)))
 (let ((?x45623 (- (- (* (* 1.0 l_0_10_109) l_0_10_119) ?x40354) (* (* 1.0 l_0_10_73) l_0_10_83))))
 (= ?x45623 0.0)))))
(assert
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40377 (* ?x40221 l_0_10_160)))
 (let ((?x45634 (- (- (* (* 1.0 l_0_10_109) l_0_10_124) ?x40377) (* (* 1.0 l_0_10_73) l_0_10_88))))
 (= ?x45634 0.0)))))
(assert
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40409 (* ?x40221 l_0_10_166)))
 (let ((?x45646 (- (- (* (* 1.0 l_0_10_109) l_0_10_130) ?x40409) (* (* 1.0 l_0_10_73) l_0_10_94))))
 (= ?x45646 0.0)))))
(assert
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40447 (* ?x40221 l_0_10_173)))
 (let ((?x45656 (+ (* (* (- 1.0) l_0_10_101) l_0_10_73) (* (* 1.0 l_0_10_109) l_0_10_137))))
 (= (- ?x45656 ?x40447) 0.0)))))
(assert
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x45681 (* ?x44392 l_0_10_282)))
 (let ((?x44389 (* 2.0 l_0_10_254)))
 (let ((?x45679 (* ?x44389 l_0_10_281)))
 (let ((?x40078 (* l_0_10_147 l_0_10_147)))
 (let ((?x40115 (* l_0_10_146 l_0_10_146)))
 (let ((?x45672 (+ (* (/ 1.0 2.0) (* l_0_10_110 l_0_10_110)) (* (/ 1.0 2.0) (* l_0_10_111 l_0_10_111)))))
 (let ((?x45678 (- (- (- (- ?x45672 ?x40115) ?x40078) (* (* 2.0 l_0_10_218) l_0_10_238)) (* (* 2.0 l_0_10_219) l_0_10_239))))
 (let ((?x45688 (- (- (- (- ?x45678 ?x45679) ?x45681) (* (* 2.0 l_0_10_346) l_0_10_353)) (* (* 2.0 l_0_10_347) l_0_10_354))))
 (let ((?x45694 (- (- ?x45688 (* (* 2.0 l_0_10_348) l_0_10_355)) (* (* 2.0 l_0_10_349) l_0_10_356))))
 (let ((?x45700 (- (- ?x45694 (* (* 2.0 l_0_10_350) l_0_10_357)) (* (* 2.0 l_0_10_351) l_0_10_358))))
 (let ((?x45706 (- (- ?x45700 (* (* 2.0 l_0_10_352) l_0_10_359)) (* (* 2.0 l_0_10_382) l_0_10_389))))
 (let ((?x45712 (- (- ?x45706 (* (* 2.0 l_0_10_383) l_0_10_390)) (* (* 2.0 l_0_10_384) l_0_10_391))))
 (let ((?x45718 (- (- ?x45712 (* (* 2.0 l_0_10_385) l_0_10_392)) (* (* 2.0 l_0_10_386) l_0_10_393))))
 (let ((?x45724 (- (- ?x45718 (* (* 2.0 l_0_10_387) l_0_10_394)) (* (* 2.0 l_0_10_388) l_0_10_395))))
 (let ((?x45730 (- (- ?x45724 (* (* (/ 1.0 2.0) l_0_10_74) l_0_10_74)) (* (* (/ 1.0 2.0) l_0_10_75) l_0_10_75))))
 (= ?x45730 0.0))))))))))))))))))
(assert
 (let ((?x45831 (* (* 2.0 l_0_10_280) l_0_10_287)))
 (let ((?x45828 (* (* 2.0 l_0_10_279) l_0_10_286)))
 (let ((?x45825 (* (* 2.0 l_0_10_278) l_0_10_285)))
 (let ((?x45822 (* (* 2.0 l_0_10_277) l_0_10_284)))
 (let ((?x45819 (* (* 2.0 l_0_10_276) l_0_10_283)))
 (let ((?x45816 (* (* 2.0 l_0_10_275) l_0_10_282)))
 (let ((?x45813 (* (* 2.0 l_0_10_274) l_0_10_281)))
 (let ((?x45809 (* 2.0 l_0_10_267)))
 (let ((?x45810 (* ?x45809 l_0_10_285)))
 (let ((?x45806 (* 2.0 l_0_10_266)))
 (let ((?x45807 (* ?x45806 l_0_10_284)))
 (let ((?x45803 (* 2.0 l_0_10_265)))
 (let ((?x45804 (* ?x45803 l_0_10_283)))
 (let ((?x45800 (* 2.0 l_0_10_264)))
 (let ((?x45801 (* ?x45800 l_0_10_282)))
 (let ((?x45797 (* 2.0 l_0_10_263)))
 (let ((?x45798 (* ?x45797 l_0_10_281)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40685 (* ?x40466 l_0_10_156)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x40683 (* ?x40682 l_0_10_155)))
 (let ((?x45779 (+ (* (* 1.0 l_0_10_110) l_0_10_119) (* (* 1.0 l_0_10_111) l_0_10_120))))
 (let ((?x45787 (- (- (- (- ?x45779 ?x40683) ?x40685) (* (* 2.0 l_0_10_227) l_0_10_238)) (* (* 2.0 l_0_10_228) l_0_10_239))))
 (let ((?x45793 (- (- ?x45787 (* (* 2.0 l_0_10_229) l_0_10_240)) (* (* 2.0 l_0_10_230) l_0_10_241))))
 (let ((?x45805 (- (- (- (- ?x45793 (* (* 2.0 l_0_10_231) l_0_10_242)) ?x45798) ?x45801) ?x45804)))
 (let ((?x45826 (+ (+ (+ (+ (+ (- (- ?x45805 ?x45807) ?x45810) ?x45813) ?x45816) ?x45819) ?x45822) ?x45825)))
 (let ((?x45836 (- (- (+ (+ ?x45826 ?x45828) ?x45831) (* (* 1.0 l_0_10_74) l_0_10_83)) (* (* 1.0 l_0_10_75) l_0_10_84))))
 (= ?x45836 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x45473 (* (* 2.0 l_0_10_316) l_0_10_323)))
 (let ((?x45470 (* (* 2.0 l_0_10_315) l_0_10_322)))
 (let ((?x45467 (* (* 2.0 l_0_10_314) l_0_10_321)))
 (let ((?x45464 (* (* 2.0 l_0_10_313) l_0_10_320)))
 (let ((?x45461 (* (* 2.0 l_0_10_312) l_0_10_319)))
 (let ((?x45458 (* (* 2.0 l_0_10_311) l_0_10_318)))
 (let ((?x45455 (* (* 2.0 l_0_10_310) l_0_10_317)))
 (let ((?x45947 (* 2.0 l_0_10_273)))
 (let ((?x45948 (* ?x45947 l_0_10_286)))
 (let ((?x45944 (* 2.0 l_0_10_272)))
 (let ((?x45945 (* ?x45944 l_0_10_285)))
 (let ((?x45941 (* 2.0 l_0_10_271)))
 (let ((?x45942 (* ?x45941 l_0_10_284)))
 (let ((?x45938 (* 2.0 l_0_10_270)))
 (let ((?x45939 (* ?x45938 l_0_10_283)))
 (let ((?x45935 (* 2.0 l_0_10_269)))
 (let ((?x45936 (* ?x45935 l_0_10_282)))
 (let ((?x45932 (* 2.0 l_0_10_268)))
 (let ((?x45933 (* ?x45932 l_0_10_281)))
 (let ((?x43261 (* (* 2.0 l_0_10_208) l_0_10_215)))
 (let ((?x43258 (* (* 2.0 l_0_10_207) l_0_10_214)))
 (let ((?x43255 (* (* 2.0 l_0_10_206) l_0_10_213)))
 (let ((?x43252 (* (* 2.0 l_0_10_205) l_0_10_212)))
 (let ((?x43249 (* (* 2.0 l_0_10_204) l_0_10_211)))
 (let ((?x43246 (* (* 2.0 l_0_10_203) l_0_10_210)))
 (let ((?x43243 (* (* 2.0 l_0_10_202) l_0_10_209)))
 (let ((?x43240 (* (* 2.0 l_0_10_172) l_0_10_179)))
 (let ((?x43237 (* (* 2.0 l_0_10_171) l_0_10_178)))
 (let ((?x43234 (* (* 2.0 l_0_10_170) l_0_10_177)))
 (let ((?x43231 (* (* 2.0 l_0_10_169) l_0_10_176)))
 (let ((?x43228 (* (* 2.0 l_0_10_168) l_0_10_175)))
 (let ((?x43225 (* (* 2.0 l_0_10_167) l_0_10_174)))
 (let ((?x43222 (* (* 2.0 l_0_10_166) l_0_10_173)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40757 (* ?x40466 l_0_10_161)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x45897 (* ?x40682 l_0_10_160)))
 (let ((?x45896 (+ (* (* 1.0 l_0_10_110) l_0_10_124) (* (* 1.0 l_0_10_111) l_0_10_125))))
 (let ((?x45904 (+ (+ (+ (+ (+ (- (- ?x45896 ?x45897) ?x40757) ?x43222) ?x43225) ?x43228) ?x43231) ?x43234)))
 (let ((?x45911 (- (- (- (- (- (+ (+ ?x45904 ?x43237) ?x43240) ?x43243) ?x43246) ?x43249) ?x43252) ?x43255)))
 (let ((?x45919 (- (- (- (- ?x45911 ?x43258) ?x43261) (* (* 2.0 l_0_10_232) l_0_10_238)) (* (* 2.0 l_0_10_233) l_0_10_239))))
 (let ((?x45925 (- (- ?x45919 (* (* 2.0 l_0_10_234) l_0_10_240)) (* (* 2.0 l_0_10_235) l_0_10_241))))
 (let ((?x45931 (- (- ?x45925 (* (* 2.0 l_0_10_236) l_0_10_242)) (* (* 2.0 l_0_10_237) l_0_10_243))))
 (let ((?x45950 (+ (- (- (- (- (- (- ?x45931 ?x45933) ?x45936) ?x45939) ?x45942) ?x45945) ?x45948) ?x45455)))
 (let ((?x45958 (- (+ (+ (+ (+ (+ (+ ?x45950 ?x45458) ?x45461) ?x45464) ?x45467) ?x45470) ?x45473) (* (* 1.0 l_0_10_74) l_0_10_88))))
 (= (- ?x45958 (* (* 1.0 l_0_10_75) l_0_10_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45831 (* (* 2.0 l_0_10_280) l_0_10_287)))
 (let ((?x45828 (* (* 2.0 l_0_10_279) l_0_10_286)))
 (let ((?x45825 (* (* 2.0 l_0_10_278) l_0_10_285)))
 (let ((?x45822 (* (* 2.0 l_0_10_277) l_0_10_284)))
 (let ((?x45819 (* (* 2.0 l_0_10_276) l_0_10_283)))
 (let ((?x45816 (* (* 2.0 l_0_10_275) l_0_10_282)))
 (let ((?x45813 (* (* 2.0 l_0_10_274) l_0_10_281)))
 (let ((?x46015 (* l_0_10_244 l_0_10_244)))
 (let ((?x46013 (* l_0_10_243 l_0_10_243)))
 (let ((?x46011 (* l_0_10_242 l_0_10_242)))
 (let ((?x46009 (* l_0_10_241 l_0_10_241)))
 (let ((?x46007 (* l_0_10_240 l_0_10_240)))
 (let ((?x46005 (* l_0_10_239 l_0_10_239)))
 (let ((?x46003 (* l_0_10_238 l_0_10_238)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40898 (* ?x40466 l_0_10_167)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x40895 (* ?x40682 l_0_10_166)))
 (let ((?x46000 (+ (* (* 1.0 l_0_10_110) l_0_10_130) (* (* 1.0 l_0_10_111) l_0_10_131))))
 (let ((?x46012 (- (- (- (- (- (- (- ?x46000 ?x40895) ?x40898) ?x46003) ?x46005) ?x46007) ?x46009) ?x46011)))
 (let ((?x46021 (- (- (- (- (- (- (- ?x46012 ?x46013) ?x46015) ?x45813) ?x45816) ?x45819) ?x45822) ?x45825)))
 (let ((?x46027 (- (- (- (- ?x46021 ?x45828) ?x45831) (* (* 1.0 l_0_10_74) l_0_10_94)) (* (* 1.0 l_0_10_75) l_0_10_95))))
 (= ?x46027 0.0))))))))))))))))))))))))
(assert
 (let ((?x46087 (* l_0_10_288 l_0_10_288)))
 (let ((?x46085 (* l_0_10_287 l_0_10_287)))
 (let ((?x46083 (* l_0_10_286 l_0_10_286)))
 (let ((?x46081 (* l_0_10_285 l_0_10_285)))
 (let ((?x46079 (* l_0_10_284 l_0_10_284)))
 (let ((?x46077 (* l_0_10_283 l_0_10_283)))
 (let ((?x46075 (* l_0_10_282 l_0_10_282)))
 (let ((?x46073 (* l_0_10_281 l_0_10_281)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x41018 (* ?x40466 l_0_10_174)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x46049 (* ?x40682 l_0_10_173)))
 (let ((?x11787 (- (* (* (- 1.0) l_0_10_101) l_0_10_74) (* (* 1.0 l_0_10_102) l_0_10_75))))
 (let ((?x46048 (+ (+ ?x11787 (* (* 1.0 l_0_10_110) l_0_10_137)) (* (* 1.0 l_0_10_111) l_0_10_138))))
 (let ((?x46057 (- (- (- (- ?x46048 ?x46049) ?x41018) (* (* 2.0 l_0_10_238) l_0_10_245)) (* (* 2.0 l_0_10_239) l_0_10_246))))
 (let ((?x46063 (- (- ?x46057 (* (* 2.0 l_0_10_240) l_0_10_247)) (* (* 2.0 l_0_10_241) l_0_10_248))))
 (let ((?x46069 (- (- ?x46063 (* (* 2.0 l_0_10_242) l_0_10_249)) (* (* 2.0 l_0_10_243) l_0_10_250))))
 (let ((?x46078 (- (- (- (- ?x46069 (* (* 2.0 l_0_10_244) l_0_10_251)) ?x46073) ?x46075) ?x46077)))
 (= (- (- (- (- (- ?x46078 ?x46079) ?x46081) ?x46083) ?x46085) ?x46087) 0.0))))))))))))))))))))
(assert
 (let ((?x41546 (* l_0_10_154 l_0_10_154)))
 (let ((?x41544 (* l_0_10_153 l_0_10_153)))
 (let ((?x41542 (* l_0_10_152 l_0_10_152)))
 (let ((?x41540 (* l_0_10_151 l_0_10_151)))
 (let ((?x46135 (+ (* (/ 1.0 2.0) (* l_0_10_115 l_0_10_115)) (* (/ 1.0 2.0) (* l_0_10_116 l_0_10_116)))))
 (let ((?x46139 (+ (+ ?x46135 (* (/ 1.0 2.0) (* l_0_10_117 l_0_10_117))) (* (/ 1.0 2.0) (* l_0_10_118 l_0_10_118)))))
 (let ((?x46146 (- (- (- (- (- ?x46139 ?x41540) ?x41542) ?x41544) ?x41546) (* (* (/ 1.0 2.0) l_0_10_79) l_0_10_79))))
 (let ((?x46152 (- (- ?x46146 (* (* (/ 1.0 2.0) l_0_10_80) l_0_10_80)) (* (* (/ 1.0 2.0) l_0_10_81) l_0_10_81))))
 (= (- ?x46152 (* (* (/ 1.0 2.0) l_0_10_82) l_0_10_82)) 0.0))))))))))
(assert
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41625 (* ?x41624 l_0_10_158)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41622 (* ?x41621 l_0_10_157)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41619 (* ?x41618 l_0_10_156)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41616 (* ?x41615 l_0_10_155)))
 (let ((?x46178 (+ (* (* 1.0 l_0_10_115) l_0_10_119) (* (* 1.0 l_0_10_116) l_0_10_120))))
 (let ((?x46184 (+ (+ ?x46178 (* (* 1.0 l_0_10_117) l_0_10_121)) (* (* 1.0 l_0_10_118) l_0_10_122))))
 (let ((?x46191 (- (- (- (- (- ?x46184 ?x41616) ?x41619) ?x41622) ?x41625) (* (* 1.0 l_0_10_79) l_0_10_83))))
 (let ((?x46197 (- (- ?x46191 (* (* 1.0 l_0_10_80) l_0_10_84)) (* (* 1.0 l_0_10_81) l_0_10_85))))
 (= (- ?x46197 (* (* 1.0 l_0_10_82) l_0_10_86)) 0.0))))))))))))))
(assert
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41711 (* ?x41624 l_0_10_163)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41707 (* ?x41621 l_0_10_162)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41703 (* ?x41618 l_0_10_161)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41699 (* ?x41615 l_0_10_160)))
 (let ((?x46224 (+ (* (* 1.0 l_0_10_115) l_0_10_124) (* (* 1.0 l_0_10_116) l_0_10_125))))
 (let ((?x46228 (+ (+ ?x46224 (* (* 1.0 l_0_10_117) l_0_10_126)) (* (* 1.0 l_0_10_118) l_0_10_127))))
 (let ((?x46234 (- (- (- (- (- ?x46228 ?x41699) ?x41703) ?x41707) ?x41711) (* (* 1.0 l_0_10_79) l_0_10_88))))
 (let ((?x46238 (- (- ?x46234 (* (* 1.0 l_0_10_80) l_0_10_89)) (* (* 1.0 l_0_10_81) l_0_10_90))))
 (= (- ?x46238 (* (* 1.0 l_0_10_82) l_0_10_91)) 0.0))))))))))))))
(assert
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41830 (* ?x41624 l_0_10_169)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41828 (* ?x41621 l_0_10_168)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41826 (* ?x41618 l_0_10_167)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41824 (* ?x41615 l_0_10_166)))
 (let ((?x46259 (+ (* (* 1.0 l_0_10_115) l_0_10_130) (* (* 1.0 l_0_10_116) l_0_10_131))))
 (let ((?x46263 (+ (+ ?x46259 (* (* 1.0 l_0_10_117) l_0_10_132)) (* (* 1.0 l_0_10_118) l_0_10_133))))
 (let ((?x46269 (- (- (- (- (- ?x46263 ?x41824) ?x41826) ?x41828) ?x41830) (* (* 1.0 l_0_10_79) l_0_10_94))))
 (let ((?x46273 (- (- ?x46269 (* (* 1.0 l_0_10_80) l_0_10_95)) (* (* 1.0 l_0_10_81) l_0_10_96))))
 (= (- ?x46273 (* (* 1.0 l_0_10_82) l_0_10_97)) 0.0))))))))))))))
(assert
 (let ((?x41624 (* 2.0 l_0_10_154)))
 (let ((?x41970 (* ?x41624 l_0_10_176)))
 (let ((?x41621 (* 2.0 l_0_10_153)))
 (let ((?x41968 (* ?x41621 l_0_10_175)))
 (let ((?x41618 (* 2.0 l_0_10_152)))
 (let ((?x41966 (* ?x41618 l_0_10_174)))
 (let ((?x41615 (* 2.0 l_0_10_151)))
 (let ((?x41964 (* ?x41615 l_0_10_173)))
 (let ((?x46302 (- (* (* (- 1.0) l_0_10_101) l_0_10_79) (* (* 1.0 l_0_10_102) l_0_10_80))))
 (let ((?x46307 (- (- ?x46302 (* (* 1.0 l_0_10_103) l_0_10_81)) (* (* 1.0 l_0_10_104) l_0_10_82))))
 (let ((?x46311 (+ (+ ?x46307 (* (* 1.0 l_0_10_115) l_0_10_137)) (* (* 1.0 l_0_10_116) l_0_10_138))))
 (let ((?x46315 (+ (+ ?x46311 (* (* 1.0 l_0_10_117) l_0_10_139)) (* (* 1.0 l_0_10_118) l_0_10_140))))
 (= (- (- (- (- ?x46315 ?x41964) ?x41966) ?x41968) ?x41970) 0.0))))))))))))))
(assert
 (let ((?x42081 (* l_0_10_159 l_0_10_159)))
 (let ((?x42079 (* l_0_10_158 l_0_10_158)))
 (let ((?x42077 (* l_0_10_157 l_0_10_157)))
 (let ((?x42075 (* l_0_10_156 l_0_10_156)))
 (let ((?x42073 (* l_0_10_155 l_0_10_155)))
 (let ((?x46345 (+ (* (/ 1.0 2.0) (* l_0_10_119 l_0_10_119)) (* (/ 1.0 2.0) (* l_0_10_120 l_0_10_120)))))
 (let ((?x46351 (+ (+ ?x46345 (* (/ 1.0 2.0) (* l_0_10_121 l_0_10_121))) (* (/ 1.0 2.0) (* l_0_10_122 l_0_10_122)))))
 (let ((?x46357 (- (- (- (+ ?x46351 (* (/ 1.0 2.0) (* l_0_10_123 l_0_10_123))) ?x42073) ?x42075) ?x42077)))
 (let ((?x46365 (- (- (- (- ?x46357 ?x42079) ?x42081) (* (* (/ 1.0 2.0) l_0_10_83) l_0_10_83)) (* (* (/ 1.0 2.0) l_0_10_84) l_0_10_84))))
 (let ((?x46371 (- (- ?x46365 (* (* (/ 1.0 2.0) l_0_10_85) l_0_10_85)) (* (* (/ 1.0 2.0) l_0_10_86) l_0_10_86))))
 (= (- ?x46371 (* (* (/ 1.0 2.0) l_0_10_87) l_0_10_87)) 0.0))))))))))))
(assert
 (let ((?x42169 (* 2.0 l_0_10_159)))
 (let ((?x42170 (* ?x42169 l_0_10_164)))
 (let ((?x42166 (* 2.0 l_0_10_158)))
 (let ((?x42167 (* ?x42166 l_0_10_163)))
 (let ((?x42163 (* 2.0 l_0_10_157)))
 (let ((?x42164 (* ?x42163 l_0_10_162)))
 (let ((?x42160 (* 2.0 l_0_10_156)))
 (let ((?x42161 (* ?x42160 l_0_10_161)))
 (let ((?x42157 (* 2.0 l_0_10_155)))
 (let ((?x42158 (* ?x42157 l_0_10_160)))
 (let ((?x46401 (+ (* (* 1.0 l_0_10_119) l_0_10_124) (* (* 1.0 l_0_10_120) l_0_10_125))))
 (let ((?x46407 (+ (+ ?x46401 (* (* 1.0 l_0_10_121) l_0_10_126)) (* (* 1.0 l_0_10_122) l_0_10_127))))
 (let ((?x46413 (- (- (- (+ ?x46407 (* (* 1.0 l_0_10_123) l_0_10_128)) ?x42158) ?x42161) ?x42164)))
 (let ((?x46421 (- (- (- (- ?x46413 ?x42167) ?x42170) (* (* 1.0 l_0_10_83) l_0_10_88)) (* (* 1.0 l_0_10_84) l_0_10_89))))
 (let ((?x46427 (- (- ?x46421 (* (* 1.0 l_0_10_85) l_0_10_90)) (* (* 1.0 l_0_10_86) l_0_10_91))))
 (= (- ?x46427 (* (* 1.0 l_0_10_87) l_0_10_92)) 0.0)))))))))))))))))
(assert
 (let ((?x42169 (* 2.0 l_0_10_159)))
 (let ((?x42308 (* ?x42169 l_0_10_170)))
 (let ((?x42166 (* 2.0 l_0_10_158)))
 (let ((?x42306 (* ?x42166 l_0_10_169)))
 (let ((?x42163 (* 2.0 l_0_10_157)))
 (let ((?x42304 (* ?x42163 l_0_10_168)))
 (let ((?x42160 (* 2.0 l_0_10_156)))
 (let ((?x42302 (* ?x42160 l_0_10_167)))
 (let ((?x42157 (* 2.0 l_0_10_155)))
 (let ((?x42300 (* ?x42157 l_0_10_166)))
 (let ((?x46464 (+ (* (* 1.0 l_0_10_119) l_0_10_130) (* (* 1.0 l_0_10_120) l_0_10_131))))
 (let ((?x46468 (+ (+ ?x46464 (* (* 1.0 l_0_10_121) l_0_10_132)) (* (* 1.0 l_0_10_122) l_0_10_133))))
 (let ((?x46473 (- (- (- (+ ?x46468 (* (* 1.0 l_0_10_123) l_0_10_134)) ?x42300) ?x42302) ?x42304)))
 (let ((?x46479 (- (- (- (- ?x46473 ?x42306) ?x42308) (* (* 1.0 l_0_10_83) l_0_10_94)) (* (* 1.0 l_0_10_84) l_0_10_95))))
 (let ((?x46483 (- (- ?x46479 (* (* 1.0 l_0_10_85) l_0_10_96)) (* (* 1.0 l_0_10_86) l_0_10_97))))
 (= (- ?x46483 (* (* 1.0 l_0_10_87) l_0_10_98)) 0.0)))))))))))))))))
(assert
 (let ((?x42169 (* 2.0 l_0_10_159)))
 (let ((?x42469 (* ?x42169 l_0_10_177)))
 (let ((?x42166 (* 2.0 l_0_10_158)))
 (let ((?x42467 (* ?x42166 l_0_10_176)))
 (let ((?x42163 (* 2.0 l_0_10_157)))
 (let ((?x42465 (* ?x42163 l_0_10_175)))
 (let ((?x42160 (* 2.0 l_0_10_156)))
 (let ((?x42463 (* ?x42160 l_0_10_174)))
 (let ((?x42157 (* 2.0 l_0_10_155)))
 (let ((?x42461 (* ?x42157 l_0_10_173)))
 (let ((?x46504 (- (* (* (- 1.0) l_0_10_101) l_0_10_83) (* (* 1.0 l_0_10_102) l_0_10_84))))
 (let ((?x46508 (- (- ?x46504 (* (* 1.0 l_0_10_103) l_0_10_85)) (* (* 1.0 l_0_10_104) l_0_10_86))))
 (let ((?x46513 (+ (- ?x46508 (* (* 1.0 l_0_10_105) l_0_10_87)) (* (* 1.0 l_0_10_119) l_0_10_137))))
 (let ((?x46517 (+ (+ ?x46513 (* (* 1.0 l_0_10_120) l_0_10_138)) (* (* 1.0 l_0_10_121) l_0_10_139))))
 (let ((?x46521 (+ (+ ?x46517 (* (* 1.0 l_0_10_122) l_0_10_140)) (* (* 1.0 l_0_10_123) l_0_10_141))))
 (= (- (- (- (- (- ?x46521 ?x42461) ?x42463) ?x42465) ?x42467) ?x42469) 0.0)))))))))))))))))
(assert
 (let ((?x42583 (* l_0_10_165 l_0_10_165)))
 (let ((?x42568 (* l_0_10_164 l_0_10_164)))
 (let ((?x42565 (* l_0_10_163 l_0_10_163)))
 (let ((?x42561 (* l_0_10_162 l_0_10_162)))
 (let ((?x42557 (* l_0_10_161 l_0_10_161)))
 (let ((?x42553 (* l_0_10_160 l_0_10_160)))
 (let ((?x46562 (+ (* (/ 1.0 2.0) (* l_0_10_124 l_0_10_124)) (* (/ 1.0 2.0) (* l_0_10_125 l_0_10_125)))))
 (let ((?x46568 (+ (+ ?x46562 (* (/ 1.0 2.0) (* l_0_10_126 l_0_10_126))) (* (/ 1.0 2.0) (* l_0_10_127 l_0_10_127)))))
 (let ((?x46574 (+ (+ ?x46568 (* (/ 1.0 2.0) (* l_0_10_128 l_0_10_128))) (* (/ 1.0 2.0) (* l_0_10_129 l_0_10_129)))))
 (let ((?x46583 (- (- (- (- (- (- (- ?x46574 ?x42553) ?x42557) ?x42561) ?x42565) ?x42568) ?x42583) (* (* (/ 1.0 2.0) l_0_10_88) l_0_10_88))))
 (let ((?x46589 (- (- ?x46583 (* (* (/ 1.0 2.0) l_0_10_89) l_0_10_89)) (* (* (/ 1.0 2.0) l_0_10_90) l_0_10_90))))
 (let ((?x46595 (- (- ?x46589 (* (* (/ 1.0 2.0) l_0_10_91) l_0_10_91)) (* (* (/ 1.0 2.0) l_0_10_92) l_0_10_92))))
 (= (- ?x46595 (* (* (/ 1.0 2.0) l_0_10_93) l_0_10_93)) 0.0))))))))))))))
(assert
 (let ((?x42698 (* 2.0 l_0_10_165)))
 (let ((?x42699 (* ?x42698 l_0_10_171)))
 (let ((?x42695 (* 2.0 l_0_10_164)))
 (let ((?x42696 (* ?x42695 l_0_10_170)))
 (let ((?x42692 (* 2.0 l_0_10_163)))
 (let ((?x42693 (* ?x42692 l_0_10_169)))
 (let ((?x42689 (* 2.0 l_0_10_162)))
 (let ((?x42690 (* ?x42689 l_0_10_168)))
 (let ((?x42686 (* 2.0 l_0_10_161)))
 (let ((?x42687 (* ?x42686 l_0_10_167)))
 (let ((?x42683 (* 2.0 l_0_10_160)))
 (let ((?x42684 (* ?x42683 l_0_10_166)))
 (let ((?x46627 (+ (* (* 1.0 l_0_10_124) l_0_10_130) (* (* 1.0 l_0_10_125) l_0_10_131))))
 (let ((?x46633 (+ (+ ?x46627 (* (* 1.0 l_0_10_126) l_0_10_132)) (* (* 1.0 l_0_10_127) l_0_10_133))))
 (let ((?x46639 (+ (+ ?x46633 (* (* 1.0 l_0_10_128) l_0_10_134)) (* (* 1.0 l_0_10_129) l_0_10_135))))
 (let ((?x46648 (- (- (- (- (- (- (- ?x46639 ?x42684) ?x42687) ?x42690) ?x42693) ?x42696) ?x42699) (* (* 1.0 l_0_10_88) l_0_10_94))))
 (let ((?x46654 (- (- ?x46648 (* (* 1.0 l_0_10_89) l_0_10_95)) (* (* 1.0 l_0_10_90) l_0_10_96))))
 (let ((?x46660 (- (- ?x46654 (* (* 1.0 l_0_10_91) l_0_10_97)) (* (* 1.0 l_0_10_92) l_0_10_98))))
 (= (- ?x46660 (* (* 1.0 l_0_10_93) l_0_10_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x42698 (* 2.0 l_0_10_165)))
 (let ((?x42908 (* ?x42698 l_0_10_178)))
 (let ((?x42695 (* 2.0 l_0_10_164)))
 (let ((?x42906 (* ?x42695 l_0_10_177)))
 (let ((?x42692 (* 2.0 l_0_10_163)))
 (let ((?x42904 (* ?x42692 l_0_10_176)))
 (let ((?x42689 (* 2.0 l_0_10_162)))
 (let ((?x42902 (* ?x42689 l_0_10_175)))
 (let ((?x42686 (* 2.0 l_0_10_161)))
 (let ((?x42900 (* ?x42686 l_0_10_174)))
 (let ((?x42683 (* 2.0 l_0_10_160)))
 (let ((?x42898 (* ?x42683 l_0_10_173)))
 (let ((?x46703 (- (* (* (- 1.0) l_0_10_101) l_0_10_88) (* (* 1.0 l_0_10_102) l_0_10_89))))
 (let ((?x46707 (- (- ?x46703 (* (* 1.0 l_0_10_103) l_0_10_90)) (* (* 1.0 l_0_10_104) l_0_10_91))))
 (let ((?x46712 (- (- ?x46707 (* (* 1.0 l_0_10_105) l_0_10_92)) (* (* 1.0 l_0_10_106) l_0_10_93))))
 (let ((?x46716 (+ (+ ?x46712 (* (* 1.0 l_0_10_124) l_0_10_137)) (* (* 1.0 l_0_10_125) l_0_10_138))))
 (let ((?x46720 (+ (+ ?x46716 (* (* 1.0 l_0_10_126) l_0_10_139)) (* (* 1.0 l_0_10_127) l_0_10_140))))
 (let ((?x46724 (+ (+ ?x46720 (* (* 1.0 l_0_10_128) l_0_10_141)) (* (* 1.0 l_0_10_129) l_0_10_142))))
 (= (- (- (- (- (- (- ?x46724 ?x42898) ?x42900) ?x42902) ?x42904) ?x42906) ?x42908) 0.0))))))))))))))))))))
(assert
 (let ((?x43068 (* l_0_10_172 l_0_10_172)))
 (let ((?x43066 (* l_0_10_171 l_0_10_171)))
 (let ((?x43064 (* l_0_10_170 l_0_10_170)))
 (let ((?x43062 (* l_0_10_169 l_0_10_169)))
 (let ((?x43060 (* l_0_10_168 l_0_10_168)))
 (let ((?x43058 (* l_0_10_167 l_0_10_167)))
 (let ((?x43056 (* l_0_10_166 l_0_10_166)))
 (let ((?x46767 (+ (* (* (- (/ 1.0 2.0)) l_0_10_100) l_0_10_100) (* (/ 1.0 2.0) (* l_0_10_130 l_0_10_130)))))
 (let ((?x46773 (+ (+ ?x46767 (* (/ 1.0 2.0) (* l_0_10_131 l_0_10_131))) (* (/ 1.0 2.0) (* l_0_10_132 l_0_10_132)))))
 (let ((?x46779 (+ (+ ?x46773 (* (/ 1.0 2.0) (* l_0_10_133 l_0_10_133))) (* (/ 1.0 2.0) (* l_0_10_134 l_0_10_134)))))
 (let ((?x46785 (+ (+ ?x46779 (* (/ 1.0 2.0) (* l_0_10_135 l_0_10_135))) (* (/ 1.0 2.0) (* l_0_10_136 l_0_10_136)))))
 (let ((?x46792 (- (- (- (- (- (- (- ?x46785 ?x43056) ?x43058) ?x43060) ?x43062) ?x43064) ?x43066) ?x43068)))
 (let ((?x46798 (- (- ?x46792 (* (* (/ 1.0 2.0) l_0_10_94) l_0_10_94)) (* (* (/ 1.0 2.0) l_0_10_95) l_0_10_95))))
 (let ((?x46804 (- (- ?x46798 (* (* (/ 1.0 2.0) l_0_10_96) l_0_10_96)) (* (* (/ 1.0 2.0) l_0_10_97) l_0_10_97))))
 (let ((?x46810 (- (- ?x46804 (* (* (/ 1.0 2.0) l_0_10_98) l_0_10_98)) (* (* (/ 1.0 2.0) l_0_10_99) l_0_10_99))))
 (= ?x46810 0.0)))))))))))))))))
(assert
 (let ((?x43240 (* (* 2.0 l_0_10_172) l_0_10_179)))
 (let ((?x43237 (* (* 2.0 l_0_10_171) l_0_10_178)))
 (let ((?x43234 (* (* 2.0 l_0_10_170) l_0_10_177)))
 (let ((?x43231 (* (* 2.0 l_0_10_169) l_0_10_176)))
 (let ((?x43228 (* (* 2.0 l_0_10_168) l_0_10_175)))
 (let ((?x43225 (* (* 2.0 l_0_10_167) l_0_10_174)))
 (let ((?x43222 (* (* 2.0 l_0_10_166) l_0_10_173)))
 (let ((?x46841 (- (* (* (- 1.0) l_0_10_100) l_0_10_107) (* (* 1.0 l_0_10_101) l_0_10_94))))
 (let ((?x46845 (- (- ?x46841 (* (* 1.0 l_0_10_102) l_0_10_95)) (* (* 1.0 l_0_10_103) l_0_10_96))))
 (let ((?x46849 (- (- ?x46845 (* (* 1.0 l_0_10_104) l_0_10_97)) (* (* 1.0 l_0_10_105) l_0_10_98))))
 (let ((?x46854 (+ (- ?x46849 (* (* 1.0 l_0_10_106) l_0_10_99)) (* (* 1.0 l_0_10_130) l_0_10_137))))
 (let ((?x46860 (+ (+ ?x46854 (* (* 1.0 l_0_10_131) l_0_10_138)) (* (* 1.0 l_0_10_132) l_0_10_139))))
 (let ((?x46866 (+ (+ ?x46860 (* (* 1.0 l_0_10_133) l_0_10_140)) (* (* 1.0 l_0_10_134) l_0_10_141))))
 (let ((?x46872 (+ (+ ?x46866 (* (* 1.0 l_0_10_135) l_0_10_142)) (* (* 1.0 l_0_10_136) l_0_10_143))))
 (let ((?x46879 (- (- (- (- (- (- (- ?x46872 ?x43222) ?x43225) ?x43228) ?x43231) ?x43234) ?x43237) ?x43240)))
 (= ?x46879 0.0)))))))))))))))))
(assert
 (let ((?x43456 (* l_0_10_180 l_0_10_180)))
 (let ((?x43454 (* l_0_10_179 l_0_10_179)))
 (let ((?x43452 (* l_0_10_178 l_0_10_178)))
 (let ((?x43450 (* l_0_10_177 l_0_10_177)))
 (let ((?x43429 (* l_0_10_176 l_0_10_176)))
 (let ((?x43425 (* l_0_10_175 l_0_10_175)))
 (let ((?x43421 (* l_0_10_174 l_0_10_174)))
 (let ((?x43508 (* l_0_10_173 l_0_10_173)))
 (let ((?x46907 (- (* (* (- (/ 1.0 2.0)) l_0_10_101) l_0_10_101) (* (* (/ 1.0 2.0) l_0_10_102) l_0_10_102))))
 (let ((?x46913 (- (- ?x46907 (* (* (/ 1.0 2.0) l_0_10_103) l_0_10_103)) (* (* (/ 1.0 2.0) l_0_10_104) l_0_10_104))))
 (let ((?x46919 (- (- ?x46913 (* (* (/ 1.0 2.0) l_0_10_105) l_0_10_105)) (* (* (/ 1.0 2.0) l_0_10_106) l_0_10_106))))
 (let ((?x46925 (- (- ?x46919 (* (* (/ 1.0 2.0) l_0_10_107) l_0_10_107)) (* (* (/ 1.0 2.0) l_0_10_108) l_0_10_108))))
 (let ((?x46931 (+ (+ ?x46925 (* (/ 1.0 2.0) (* l_0_10_137 l_0_10_137))) (* (/ 1.0 2.0) (* l_0_10_138 l_0_10_138)))))
 (let ((?x46937 (+ (+ ?x46931 (* (/ 1.0 2.0) (* l_0_10_139 l_0_10_139))) (* (/ 1.0 2.0) (* l_0_10_140 l_0_10_140)))))
 (let ((?x46943 (+ (+ ?x46937 (* (/ 1.0 2.0) (* l_0_10_141 l_0_10_141))) (* (/ 1.0 2.0) (* l_0_10_142 l_0_10_142)))))
 (let ((?x46949 (+ (+ ?x46943 (* (/ 1.0 2.0) (* l_0_10_143 l_0_10_143))) (* (/ 1.0 2.0) (* l_0_10_144 l_0_10_144)))))
 (let ((?x46956 (- (- (- (- (- (- (- ?x46949 ?x43508) ?x43421) ?x43425) ?x43429) ?x43450) ?x43452) ?x43454)))
 (= (- ?x46956 ?x43456) 0.0)))))))))))))))))))
(assert
 (let ((?x10943 (* l_0_10_73 l_0_10_73)))
 (let ((?x46991 (+ (- (* (- l_0_10_109) l_0_10_109) (* l_0_10_289 l_0_10_289)) ?x10943)))
 (= ?x46991 0.0))))
(assert
 (let ((?x47000 (* l_0_10_361 l_0_10_361)))
 (let ((?x46998 (* l_0_10_325 l_0_10_325)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43616 (* ?x43577 l_0_10_290)))
 (let ((?x47003 (+ (- (- (- (* (* (- 2.0) l_0_10_109) l_0_10_110) ?x43616) ?x46998) ?x47000) (* (* 2.0 l_0_10_73) l_0_10_74))))
 (= ?x47003 0.0)))))))
(assert
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43697 (* ?x43577 l_0_10_292)))
 (let ((?x47013 (+ (- (* (* (- 2.0) l_0_10_109) l_0_10_112) ?x43697) (* (* 2.0 l_0_10_73) l_0_10_76))))
 (= ?x47013 0.0)))))
(assert
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43839 (* ?x43577 l_0_10_299)))
 (let ((?x12503 (* l_0_10_253 l_0_10_253)))
 (let ((?x47024 (+ (- (+ (* (* (- 2.0) l_0_10_109) l_0_10_119) ?x12503) ?x43839) (* (* 2.0 l_0_10_73) l_0_10_83))))
 (= ?x47024 0.0))))))
(assert
 (let ((?x43580 (* l_0_10_289 l_0_10_289)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43950 (* ?x43577 l_0_10_304)))
 (let ((?x40186 (* l_0_10_181 l_0_10_181)))
 (let ((?x40184 (* l_0_10_145 l_0_10_145)))
 (let ((?x47037 (+ (- (- (+ (* (* (- 2.0) l_0_10_109) l_0_10_124) ?x40184) ?x40186) ?x43950) ?x43580)))
 (= (+ ?x47037 (* (* 2.0 l_0_10_73) l_0_10_88)) 0.0))))))))
(assert
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x44054 (* ?x43577 l_0_10_310)))
 (let ((?x12503 (* l_0_10_253 l_0_10_253)))
 (let ((?x47051 (+ (- (- (* (* (- 2.0) l_0_10_109) l_0_10_130) ?x12503) ?x44054) (* (* 2.0 l_0_10_73) l_0_10_94))))
 (= ?x47051 0.0))))))
(assert
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x44165 (* ?x43577 l_0_10_317)))
 (let ((?x47063 (* l_0_10_217 l_0_10_217)))
 (let ((?x47062 (- (* (* 2.0 l_0_10_101) l_0_10_73) (* (* 2.0 l_0_10_109) l_0_10_137))))
 (= (- (- ?x47062 ?x47063) ?x44165) 0.0))))))
(assert
 (let ((?x45772 (* l_0_10_75 l_0_10_75)))
 (let ((?x11441 (* l_0_10_74 l_0_10_74)))
 (let ((?x40017 (* l_0_10_291 l_0_10_291)))
 (let ((?x40015 (* l_0_10_290 l_0_10_290)))
 (let ((?x47076 (- (- (* (- l_0_10_110) l_0_10_110) (* l_0_10_111 l_0_10_111)) ?x40015)))
 (let ((?x47081 (- (- (- ?x47076 ?x40017) (* (* 2.0 l_0_10_325) l_0_10_326)) (* (* 2.0 l_0_10_361) l_0_10_362))))
 (= (+ (+ ?x47081 ?x11441) ?x45772) 0.0))))))))
(assert
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44253 (* ?x43621 l_0_10_293)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44251 (* ?x43618 l_0_10_292)))
 (let ((?x47098 (- (* (* (- 2.0) l_0_10_110) l_0_10_112) (* (* 2.0 l_0_10_111) l_0_10_113))))
 (let ((?x47104 (- (- (- (- ?x47098 ?x44251) ?x44253) (* (* 2.0 l_0_10_325) l_0_10_328)) (* (* 2.0 l_0_10_361) l_0_10_364))))
 (let ((?x47108 (+ (+ ?x47104 (* (* 2.0 l_0_10_74) l_0_10_76)) (* (* 2.0 l_0_10_75) l_0_10_77))))
 (= ?x47108 0.0)))))))))
(assert
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44397 (* ?x43621 l_0_10_300)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44395 (* ?x43618 l_0_10_299)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x47127 (* ?x43836 l_0_10_254)))
 (let ((?x12570 (- (* (* (- 2.0) l_0_10_110) l_0_10_119) (* (* 2.0 l_0_10_111) l_0_10_120))))
 (let ((?x47132 (- (- (- (+ ?x12570 ?x47127) ?x44395) ?x44397) (* (* 2.0 l_0_10_325) l_0_10_335))))
 (let ((?x47136 (+ (- ?x47132 (* (* 2.0 l_0_10_361) l_0_10_371)) (* (* 2.0 l_0_10_74) l_0_10_83))))
 (= (+ ?x47136 (* (* 2.0 l_0_10_75) l_0_10_84)) 0.0)))))))))))
(assert
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44510 (* ?x43621 l_0_10_305)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44507 (* ?x43618 l_0_10_304)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43616 (* ?x43577 l_0_10_290)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40225 (* ?x40224 l_0_10_182)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40222 (* ?x40221 l_0_10_146)))
 (let ((?x47160 (- (* (* (- 2.0) l_0_10_110) l_0_10_124) (* (* 2.0 l_0_10_111) l_0_10_125))))
 (let ((?x47167 (- (- (- (+ (- (+ ?x47160 ?x40222) ?x40225) ?x43616) ?x44507) ?x44510) (* (* 2.0 l_0_10_325) l_0_10_340))))
 (let ((?x47171 (+ (- ?x47167 (* (* 2.0 l_0_10_361) l_0_10_376)) (* (* 2.0 l_0_10_74) l_0_10_88))))
 (= (+ ?x47171 (* (* 2.0 l_0_10_75) l_0_10_89)) 0.0)))))))))))))))
(assert
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44614 (* ?x43621 l_0_10_311)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44612 (* ?x43618 l_0_10_310)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x47127 (* ?x43836 l_0_10_254)))
 (let ((?x47202 (- (* (* (- 2.0) l_0_10_110) l_0_10_130) (* (* 2.0 l_0_10_111) l_0_10_131))))
 (let ((?x47207 (- (- (- (- ?x47202 ?x47127) ?x44612) ?x44614) (* (* 2.0 l_0_10_325) l_0_10_346))))
 (let ((?x47211 (+ (- ?x47207 (* (* 2.0 l_0_10_361) l_0_10_382)) (* (* 2.0 l_0_10_74) l_0_10_94))))
 (= (+ ?x47211 (* (* 2.0 l_0_10_75) l_0_10_95)) 0.0)))))))))))
(assert
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44717 (* ?x43621 l_0_10_318)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44715 (* ?x43618 l_0_10_317)))
 (let ((?x47229 (+ (* (* 2.0 l_0_10_101) l_0_10_74) (* (* 2.0 l_0_10_102) l_0_10_75))))
 (let ((?x47233 (- (- ?x47229 (* (* 2.0 l_0_10_110) l_0_10_137)) (* (* 2.0 l_0_10_111) l_0_10_138))))
 (let ((?x47239 (- (- (- (- ?x47233 (* (* 2.0 l_0_10_217) l_0_10_218)) ?x44715) ?x44717) (* (* 2.0 l_0_10_325) l_0_10_353))))
 (= (- ?x47239 (* (* 2.0 l_0_10_361) l_0_10_389)) 0.0)))))))))
(assert
 (let ((?x41487 (* l_0_10_78 l_0_10_78)))
 (let ((?x41481 (* l_0_10_77 l_0_10_77)))
 (let ((?x41475 (* l_0_10_76 l_0_10_76)))
 (let ((?x44825 (* l_0_10_294 l_0_10_294)))
 (let ((?x44823 (* l_0_10_293 l_0_10_293)))
 (let ((?x44835 (* l_0_10_292 l_0_10_292)))
 (let ((?x41367 (* l_0_10_114 l_0_10_114)))
 (let ((?x47269 (- (- (* (- l_0_10_112) l_0_10_112) (* l_0_10_113 l_0_10_113)) ?x41367)))
 (= (+ (+ (+ (- (- (- ?x47269 ?x44835) ?x44823) ?x44825) ?x41475) ?x41481) ?x41487) 0.0))))))))))
(assert
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x44892 (* ?x40236 l_0_10_301)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x44890 (* ?x40233 l_0_10_300)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x44888 (* ?x40230 l_0_10_299)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x47289 (* ?x43836 l_0_10_256)))
 (let ((?x47286 (- (* (* (- 2.0) l_0_10_112) l_0_10_119) (* (* 2.0 l_0_10_113) l_0_10_120))))
 (let ((?x47292 (- (- (+ (- ?x47286 (* (* 2.0 l_0_10_114) l_0_10_121)) ?x47289) ?x44888) ?x44890)))
 (let ((?x47297 (+ (+ (- ?x47292 ?x44892) (* (* 2.0 l_0_10_76) l_0_10_83)) (* (* 2.0 l_0_10_77) l_0_10_84))))
 (= (+ ?x47297 (* (* 2.0 l_0_10_78) l_0_10_85)) 0.0)))))))))))))
(assert
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x44951 (* ?x40236 l_0_10_306)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x44948 (* ?x40233 l_0_10_305)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x44945 (* ?x40230 l_0_10_304)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43697 (* ?x43577 l_0_10_292)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40315 (* ?x40224 l_0_10_184)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40305 (* ?x40221 l_0_10_148)))
 (let ((?x47314 (- (* (* (- 2.0) l_0_10_112) l_0_10_124) (* (* 2.0 l_0_10_113) l_0_10_125))))
 (let ((?x47319 (+ (- (+ (- ?x47314 (* (* 2.0 l_0_10_114) l_0_10_126)) ?x40305) ?x40315) ?x43697)))
 (let ((?x47324 (+ (- (- (- ?x47319 ?x44945) ?x44948) ?x44951) (* (* 2.0 l_0_10_76) l_0_10_88))))
 (let ((?x47328 (+ (+ ?x47324 (* (* 2.0 l_0_10_77) l_0_10_89)) (* (* 2.0 l_0_10_78) l_0_10_90))))
 (= ?x47328 0.0))))))))))))))))))
(assert
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x45010 (* ?x40236 l_0_10_312)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x45008 (* ?x40233 l_0_10_311)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x45006 (* ?x40230 l_0_10_310)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x47289 (* ?x43836 l_0_10_256)))
 (let ((?x47344 (- (* (* (- 2.0) l_0_10_112) l_0_10_130) (* (* 2.0 l_0_10_113) l_0_10_131))))
 (let ((?x47349 (- (- (- (- ?x47344 (* (* 2.0 l_0_10_114) l_0_10_132)) ?x47289) ?x45006) ?x45008)))
 (let ((?x47354 (+ (+ (- ?x47349 ?x45010) (* (* 2.0 l_0_10_76) l_0_10_94)) (* (* 2.0 l_0_10_77) l_0_10_95))))
 (= (+ ?x47354 (* (* 2.0 l_0_10_78) l_0_10_96)) 0.0)))))))))))))
(assert
 (let ((?x12051 (* l_0_10_87 l_0_10_87)))
 (let ((?x46385 (* l_0_10_86 l_0_10_86)))
 (let ((?x12035 (* l_0_10_85 l_0_10_85)))
 (let ((?x9074 (* l_0_10_84 l_0_10_84)))
 (let ((?x12015 (* l_0_10_83 l_0_10_83)))
 (let ((?x45148 (* l_0_10_303 l_0_10_303)))
 (let ((?x45146 (* l_0_10_302 l_0_10_302)))
 (let ((?x7418 (* l_0_10_301 l_0_10_301)))
 (let ((?x7419 (* l_0_10_300 l_0_10_300)))
 (let ((?x7413 (* l_0_10_299 l_0_10_299)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x47375 (* ?x43836 l_0_10_263)))
 (let ((?x46352 (* l_0_10_123 l_0_10_123)))
 (let ((?x46349 (* l_0_10_122 l_0_10_122)))
 (let ((?x46346 (* l_0_10_121 l_0_10_121)))
 (let ((?x12732 (- (- (* (- l_0_10_119) l_0_10_119) (* l_0_10_120 l_0_10_120)) ?x46346)))
 (let ((?x47380 (- (- (- (- (+ (- (- ?x12732 ?x46349) ?x46352) ?x47375) ?x7413) ?x7419) ?x7418) ?x45146)))
 (= (+ (+ (+ (+ (+ (- ?x47380 ?x45148) ?x12015) ?x9074) ?x12035) ?x46385) ?x12051) 0.0)))))))))))))))))))
(assert
 (let ((?x45181 (* 2.0 l_0_10_303)))
 (let ((?x45182 (* ?x45181 l_0_10_308)))
 (let ((?x45178 (* 2.0 l_0_10_302)))
 (let ((?x45179 (* ?x45178 l_0_10_307)))
 (let ((?x45175 (* 2.0 l_0_10_301)))
 (let ((?x45176 (* ?x45175 l_0_10_306)))
 (let ((?x45172 (* 2.0 l_0_10_300)))
 (let ((?x45173 (* ?x45172 l_0_10_305)))
 (let ((?x45169 (* 2.0 l_0_10_299)))
 (let ((?x45170 (* ?x45169 l_0_10_304)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43839 (* ?x43577 l_0_10_299)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x47426 (* ?x43836 l_0_10_268)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40361 (* ?x40224 l_0_10_191)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40354 (* ?x40221 l_0_10_155)))
 (let ((?x47414 (- (* (* (- 2.0) l_0_10_119) l_0_10_124) (* (* 2.0 l_0_10_120) l_0_10_125))))
 (let ((?x47420 (- (- ?x47414 (* (* 2.0 l_0_10_121) l_0_10_126)) (* (* 2.0 l_0_10_122) l_0_10_127))))
 (let ((?x47427 (+ (- (+ (- ?x47420 (* (* 2.0 l_0_10_123) l_0_10_128)) ?x40354) ?x40361) ?x47426)))
 (let ((?x47436 (+ (- (- (- (- (- (+ ?x47427 ?x43839) ?x45170) ?x45173) ?x45176) ?x45179) ?x45182) (* (* 2.0 l_0_10_83) l_0_10_88))))
 (let ((?x47442 (+ (+ ?x47436 (* (* 2.0 l_0_10_84) l_0_10_89)) (* (* 2.0 l_0_10_85) l_0_10_90))))
 (let ((?x47448 (+ (+ ?x47442 (* (* 2.0 l_0_10_86) l_0_10_91)) (* (* 2.0 l_0_10_87) l_0_10_92))))
 (= ?x47448 0.0))))))))))))))))))))))))))
(assert
 (let ((?x45181 (* 2.0 l_0_10_303)))
 (let ((?x45218 (* ?x45181 l_0_10_314)))
 (let ((?x45178 (* 2.0 l_0_10_302)))
 (let ((?x45216 (* ?x45178 l_0_10_313)))
 (let ((?x45175 (* 2.0 l_0_10_301)))
 (let ((?x45214 (* ?x45175 l_0_10_312)))
 (let ((?x45172 (* 2.0 l_0_10_300)))
 (let ((?x45212 (* ?x45172 l_0_10_311)))
 (let ((?x45169 (* 2.0 l_0_10_299)))
 (let ((?x45210 (* ?x45169 l_0_10_310)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x47491 (* ?x43836 l_0_10_274)))
 (let ((?x47375 (* ?x43836 l_0_10_263)))
 (let ((?x12817 (- (* (* (- 2.0) l_0_10_119) l_0_10_130) (* (* 2.0 l_0_10_120) l_0_10_131))))
 (let ((?x47487 (- (- ?x12817 (* (* 2.0 l_0_10_121) l_0_10_132)) (* (* 2.0 l_0_10_122) l_0_10_133))))
 (let ((?x47493 (- (+ (- (- ?x47487 (* (* 2.0 l_0_10_123) l_0_10_134)) ?x47375) ?x47491) ?x45210)))
 (let ((?x47499 (+ (- (- (- (- ?x47493 ?x45212) ?x45214) ?x45216) ?x45218) (* (* 2.0 l_0_10_83) l_0_10_94))))
 (let ((?x47503 (+ (+ ?x47499 (* (* 2.0 l_0_10_84) l_0_10_95)) (* (* 2.0 l_0_10_85) l_0_10_96))))
 (let ((?x47507 (+ (+ ?x47503 (* (* 2.0 l_0_10_86) l_0_10_97)) (* (* 2.0 l_0_10_87) l_0_10_98))))
 (= ?x47507 0.0)))))))))))))))))))))
(assert
 (let ((?x45181 (* 2.0 l_0_10_303)))
 (let ((?x45265 (* ?x45181 l_0_10_321)))
 (let ((?x45178 (* 2.0 l_0_10_302)))
 (let ((?x45263 (* ?x45178 l_0_10_320)))
 (let ((?x45175 (* 2.0 l_0_10_301)))
 (let ((?x45261 (* ?x45175 l_0_10_319)))
 (let ((?x45172 (* 2.0 l_0_10_300)))
 (let ((?x45259 (* ?x45172 l_0_10_318)))
 (let ((?x45169 (* 2.0 l_0_10_299)))
 (let ((?x45257 (* ?x45169 l_0_10_317)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x45563 (* ?x43836 l_0_10_281)))
 (let ((?x47527 (+ (* (* 2.0 l_0_10_101) l_0_10_83) (* (* 2.0 l_0_10_102) l_0_10_84))))
 (let ((?x47539 (+ (+ ?x47527 (* (* 2.0 l_0_10_103) l_0_10_85)) (* (* 2.0 l_0_10_104) l_0_10_86))))
 (let ((?x47544 (- (+ ?x47539 (* (* 2.0 l_0_10_105) l_0_10_87)) (* (* 2.0 l_0_10_119) l_0_10_137))))
 (let ((?x47548 (- (- ?x47544 (* (* 2.0 l_0_10_120) l_0_10_138)) (* (* 2.0 l_0_10_121) l_0_10_139))))
 (let ((?x47552 (- (- ?x47548 (* (* 2.0 l_0_10_122) l_0_10_140)) (* (* 2.0 l_0_10_123) l_0_10_141))))
 (let ((?x47557 (- (- (+ (- ?x47552 (* (* 2.0 l_0_10_217) l_0_10_227)) ?x45563) ?x45257) ?x45259)))
 (= (- (- (- ?x47557 ?x45261) ?x45263) ?x45265) 0.0))))))))))))))))))))
(assert
 (let ((?x46613 (* l_0_10_93 l_0_10_93)))
 (let ((?x12206 (* l_0_10_92 l_0_10_92)))
 (let ((?x12199 (* l_0_10_91 l_0_10_91)))
 (let ((?x12172 (* l_0_10_90 l_0_10_90)))
 (let ((?x46603 (* l_0_10_89 l_0_10_89)))
 (let ((?x12168 (* l_0_10_88 l_0_10_88)))
 (let ((?x45320 (* l_0_10_309 l_0_10_309)))
 (let ((?x45318 (* l_0_10_308 l_0_10_308)))
 (let ((?x45316 (* l_0_10_307 l_0_10_307)))
 (let ((?x45314 (* l_0_10_306 l_0_10_306)))
 (let ((?x45312 (* l_0_10_305 l_0_10_305)))
 (let ((?x45310 (* l_0_10_304 l_0_10_304)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x43950 (* ?x43577 l_0_10_304)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40384 (* ?x40224 l_0_10_196)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40377 (* ?x40221 l_0_10_160)))
 (let ((?x46572 (* l_0_10_129 l_0_10_129)))
 (let ((?x46569 (* l_0_10_128 l_0_10_128)))
 (let ((?x46566 (* l_0_10_127 l_0_10_127)))
 (let ((?x46563 (* l_0_10_126 l_0_10_126)))
 (let ((?x12836 (- (- (* (- l_0_10_124) l_0_10_124) (* l_0_10_125 l_0_10_125)) ?x46563)))
 (let ((?x12871 (- (+ (- (+ (- (- (- ?x12836 ?x46566) ?x46569) ?x46572) ?x40377) ?x40384) ?x43950) ?x45310)))
 (let ((?x47594 (+ (+ (- (- (- (- (- ?x12871 ?x45312) ?x45314) ?x45316) ?x45318) ?x45320) ?x12168) ?x46603)))
 (= (+ (+ (+ (+ ?x47594 ?x12172) ?x12199) ?x12206) ?x46613) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x45353 (* 2.0 l_0_10_309)))
 (let ((?x45354 (* ?x45353 l_0_10_315)))
 (let ((?x45350 (* 2.0 l_0_10_308)))
 (let ((?x45351 (* ?x45350 l_0_10_314)))
 (let ((?x45347 (* 2.0 l_0_10_307)))
 (let ((?x45348 (* ?x45347 l_0_10_313)))
 (let ((?x45344 (* 2.0 l_0_10_306)))
 (let ((?x45345 (* ?x45344 l_0_10_312)))
 (let ((?x45341 (* 2.0 l_0_10_305)))
 (let ((?x45342 (* ?x45341 l_0_10_311)))
 (let ((?x45338 (* 2.0 l_0_10_304)))
 (let ((?x45339 (* ?x45338 l_0_10_310)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x44054 (* ?x43577 l_0_10_310)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x47426 (* ?x43836 l_0_10_268)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40411 (* ?x40224 l_0_10_202)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40409 (* ?x40221 l_0_10_166)))
 (let ((?x47624 (- (* (* (- 2.0) l_0_10_124) l_0_10_130) (* (* 2.0 l_0_10_125) l_0_10_131))))
 (let ((?x47630 (- (- ?x47624 (* (* 2.0 l_0_10_126) l_0_10_132)) (* (* 2.0 l_0_10_127) l_0_10_133))))
 (let ((?x47636 (- (- ?x47630 (* (* 2.0 l_0_10_128) l_0_10_134)) (* (* 2.0 l_0_10_129) l_0_10_135))))
 (let ((?x47643 (- (- (- (+ (- (- (+ ?x47636 ?x40409) ?x40411) ?x47426) ?x44054) ?x45339) ?x45342) ?x45345)))
 (let ((?x47649 (+ (- (- (- ?x47643 ?x45348) ?x45351) ?x45354) (* (* 2.0 l_0_10_88) l_0_10_94))))
 (let ((?x47655 (+ (+ ?x47649 (* (* 2.0 l_0_10_89) l_0_10_95)) (* (* 2.0 l_0_10_90) l_0_10_96))))
 (let ((?x47661 (+ (+ ?x47655 (* (* 2.0 l_0_10_91) l_0_10_97)) (* (* 2.0 l_0_10_92) l_0_10_98))))
 (= (+ ?x47661 (* (* 2.0 l_0_10_93) l_0_10_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x45353 (* 2.0 l_0_10_309)))
 (let ((?x45406 (* ?x45353 l_0_10_322)))
 (let ((?x45350 (* 2.0 l_0_10_308)))
 (let ((?x45404 (* ?x45350 l_0_10_321)))
 (let ((?x45347 (* 2.0 l_0_10_307)))
 (let ((?x45402 (* ?x45347 l_0_10_320)))
 (let ((?x45344 (* 2.0 l_0_10_306)))
 (let ((?x45400 (* ?x45344 l_0_10_319)))
 (let ((?x45341 (* 2.0 l_0_10_305)))
 (let ((?x45398 (* ?x45341 l_0_10_318)))
 (let ((?x45338 (* 2.0 l_0_10_304)))
 (let ((?x45396 (* ?x45338 l_0_10_317)))
 (let ((?x43577 (* 2.0 l_0_10_289)))
 (let ((?x44165 (* ?x43577 l_0_10_317)))
 (let ((?x40224 (* 2.0 l_0_10_181)))
 (let ((?x40449 (* ?x40224 l_0_10_209)))
 (let ((?x40221 (* 2.0 l_0_10_145)))
 (let ((?x40447 (* ?x40221 l_0_10_173)))
 (let ((?x13065 (+ (* (* 2.0 l_0_10_101) l_0_10_88) (* (* 2.0 l_0_10_102) l_0_10_89))))
 (let ((?x47690 (+ (+ ?x13065 (* (* 2.0 l_0_10_103) l_0_10_90)) (* (* 2.0 l_0_10_104) l_0_10_91))))
 (let ((?x47703 (+ (+ ?x47690 (* (* 2.0 l_0_10_105) l_0_10_92)) (* (* 2.0 l_0_10_106) l_0_10_93))))
 (let ((?x47708 (- (- ?x47703 (* (* 2.0 l_0_10_124) l_0_10_137)) (* (* 2.0 l_0_10_125) l_0_10_138))))
 (let ((?x47712 (- (- ?x47708 (* (* 2.0 l_0_10_126) l_0_10_139)) (* (* 2.0 l_0_10_127) l_0_10_140))))
 (let ((?x47716 (- (- ?x47712 (* (* 2.0 l_0_10_128) l_0_10_141)) (* (* 2.0 l_0_10_129) l_0_10_142))))
 (let ((?x47721 (+ (- (- (+ ?x47716 ?x40447) ?x40449) (* (* 2.0 l_0_10_217) l_0_10_232)) ?x44165)))
 (= (- (- (- (- (- (- ?x47721 ?x45396) ?x45398) ?x45400) ?x45402) ?x45404) ?x45406) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x12351 (* l_0_10_99 l_0_10_99)))
 (let ((?x12348 (* l_0_10_98 l_0_10_98)))
 (let ((?x12342 (* l_0_10_97 l_0_10_97)))
 (let ((?x12336 (* l_0_10_96 l_0_10_96)))
 (let ((?x12330 (* l_0_10_95 l_0_10_95)))
 (let ((?x12324 (* l_0_10_94 l_0_10_94)))
 (let ((?x45429 (* l_0_10_316 l_0_10_316)))
 (let ((?x45427 (* l_0_10_315 l_0_10_315)))
 (let ((?x45425 (* l_0_10_314 l_0_10_314)))
 (let ((?x45423 (* l_0_10_313 l_0_10_313)))
 (let ((?x45421 (* l_0_10_312 l_0_10_312)))
 (let ((?x45419 (* l_0_10_311 l_0_10_311)))
 (let ((?x9648 (* l_0_10_310 l_0_10_310)))
 (let ((?x43836 (* 2.0 l_0_10_253)))
 (let ((?x47491 (* ?x43836 l_0_10_274)))
 (let ((?x46783 (* l_0_10_136 l_0_10_136)))
 (let ((?x46780 (* l_0_10_135 l_0_10_135)))
 (let ((?x46777 (* l_0_10_134 l_0_10_134)))
 (let ((?x46774 (* l_0_10_133 l_0_10_133)))
 (let ((?x46771 (* l_0_10_132 l_0_10_132)))
 (let ((?x46768 (* l_0_10_131 l_0_10_131)))
 (let ((?x13037 (- (- (* l_0_10_100 l_0_10_100) (* l_0_10_130 l_0_10_130)) ?x46768)))
 (let ((?x13081 (- (- (- (- (- (- (- ?x13037 ?x46771) ?x46774) ?x46777) ?x46780) ?x46783) ?x47491) ?x9648)))
 (let ((?x47742 (+ (- (- (- (- (- (- ?x13081 ?x45419) ?x45421) ?x45423) ?x45425) ?x45427) ?x45429) ?x12324)))
 (= (+ (+ (+ (+ (+ ?x47742 ?x12330) ?x12336) ?x12342) ?x12348) ?x12351) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x45514 (* l_0_10_324 l_0_10_324)))
 (let ((?x45512 (* l_0_10_323 l_0_10_323)))
 (let ((?x45510 (* l_0_10_322 l_0_10_322)))
 (let ((?x45508 (* l_0_10_321 l_0_10_321)))
 (let ((?x45506 (* l_0_10_320 l_0_10_320)))
 (let ((?x45503 (* l_0_10_319 l_0_10_319)))
 (let ((?x10428 (* l_0_10_318 l_0_10_318)))
 (let ((?x10443 (* l_0_10_317 l_0_10_317)))
 (let ((?x46947 (* l_0_10_144 l_0_10_144)))
 (let ((?x46944 (* l_0_10_143 l_0_10_143)))
 (let ((?x46941 (* l_0_10_142 l_0_10_142)))
 (let ((?x46938 (* l_0_10_141 l_0_10_141)))
 (let ((?x46935 (* l_0_10_140 l_0_10_140)))
 (let ((?x46932 (* l_0_10_139 l_0_10_139)))
 (let ((?x46929 (* l_0_10_138 l_0_10_138)))
 (let ((?x46926 (* l_0_10_137 l_0_10_137)))
 (let ((?x46982 (* l_0_10_108 l_0_10_108)))
 (let ((?x12416 (* l_0_10_107 l_0_10_107)))
 (let ((?x12415 (* l_0_10_106 l_0_10_106)))
 (let ((?x12408 (* l_0_10_105 l_0_10_105)))
 (let ((?x12401 (* l_0_10_104 l_0_10_104)))
 (let ((?x46967 (* l_0_10_103 l_0_10_103)))
 (let ((?x13355 (+ (+ (* l_0_10_101 l_0_10_101) (* l_0_10_102 l_0_10_102)) ?x46967)))
 (let ((?x13253 (- (- (+ (+ (+ (+ (+ ?x13355 ?x12401) ?x12408) ?x12415) ?x12416) ?x46982) ?x46926) ?x46929)))
 (let ((?x13281 (- (- (- (- (- (- (- ?x13253 ?x46932) ?x46935) ?x46938) ?x46941) ?x46944) ?x46947) (* (* 2.0 l_0_10_217) l_0_10_245))))
 (let ((?x47759 (- (- (- (- (- (- (- ?x13281 ?x10443) ?x10428) ?x45503) ?x45506) ?x45508) ?x45510) ?x45512)))
 (= (- ?x47759 ?x45514) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x40017 (* l_0_10_291 l_0_10_291)))
 (let ((?x40015 (* l_0_10_290 l_0_10_290)))
 (let ((?x40082 (* l_0_10_183 l_0_10_183)))
 (let ((?x40080 (* l_0_10_182 l_0_10_182)))
 (let ((?x13447 (- (+ (* l_0_10_146 l_0_10_146) (* l_0_10_147 l_0_10_147)) ?x40080)))
 (let ((?x13438 (- (+ (+ (- ?x13447 ?x40082) ?x40015) ?x40017) (* (* 2.0 l_0_10_326) l_0_10_340))))
 (let ((?x47783 (- (- ?x13438 (* (* 2.0 l_0_10_327) l_0_10_341)) (* (* 2.0 l_0_10_362) l_0_10_376))))
 (= (- ?x47783 (* (* 2.0 l_0_10_363) l_0_10_377)) 0.0)))))))))
(assert
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44253 (* ?x43621 l_0_10_293)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44251 (* ?x43618 l_0_10_292)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40478 (* ?x40477 l_0_10_185)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40475 (* ?x40474 l_0_10_184)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40472 (* ?x40466 l_0_10_149)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x40893 (* ?x40682 l_0_10_148)))
 (let ((?x47813 (- (+ (+ (- (- (+ ?x40893 ?x40472) ?x40475) ?x40478) ?x44251) ?x44253) (* (* 2.0 l_0_10_328) l_0_10_340))))
 (let ((?x47817 (- (- ?x47813 (* (* 2.0 l_0_10_329) l_0_10_341)) (* (* 2.0 l_0_10_330) l_0_10_342))))
 (let ((?x47821 (- (- ?x47817 (* (* 2.0 l_0_10_364) l_0_10_376)) (* (* 2.0 l_0_10_365) l_0_10_377))))
 (= (- ?x47821 (* (* 2.0 l_0_10_366) l_0_10_378)) 0.0)))))))))))))))))
(assert
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44397 (* ?x43621 l_0_10_300)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44395 (* ?x43618 l_0_10_299)))
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x13600 (* ?x44392 l_0_10_269)))
 (let ((?x44389 (* 2.0 l_0_10_254)))
 (let ((?x13578 (* ?x44389 l_0_10_268)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40689 (* ?x40477 l_0_10_192)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40687 (* ?x40474 l_0_10_191)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40685 (* ?x40466 l_0_10_156)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x40683 (* ?x40682 l_0_10_155)))
 (let ((?x13602 (+ (+ (+ (+ (- (- (+ ?x40683 ?x40685) ?x40687) ?x40689) ?x13578) ?x13600) ?x44395) ?x44397)))
 (let ((?x47852 (- (- ?x13602 (* (* 2.0 l_0_10_335) l_0_10_340)) (* (* 2.0 l_0_10_336) l_0_10_341))))
 (let ((?x47858 (- (- ?x47852 (* (* 2.0 l_0_10_337) l_0_10_342)) (* (* 2.0 l_0_10_338) l_0_10_343))))
 (let ((?x47864 (- (- ?x47858 (* (* 2.0 l_0_10_339) l_0_10_344)) (* (* 2.0 l_0_10_371) l_0_10_376))))
 (let ((?x47870 (- (- ?x47864 (* (* 2.0 l_0_10_372) l_0_10_377)) (* (* 2.0 l_0_10_373) l_0_10_378))))
 (let ((?x47876 (- (- ?x47870 (* (* 2.0 l_0_10_374) l_0_10_379)) (* (* 2.0 l_0_10_375) l_0_10_380))))
 (= ?x47876 0.0))))))))))))))))))))))))
(assert
 (let ((?x47933 (* l_0_10_381 l_0_10_381)))
 (let ((?x47931 (* l_0_10_380 l_0_10_380)))
 (let ((?x47929 (* l_0_10_379 l_0_10_379)))
 (let ((?x47927 (* l_0_10_378 l_0_10_378)))
 (let ((?x47925 (* l_0_10_377 l_0_10_377)))
 (let ((?x47923 (* l_0_10_376 l_0_10_376)))
 (let ((?x47921 (* l_0_10_345 l_0_10_345)))
 (let ((?x47919 (* l_0_10_344 l_0_10_344)))
 (let ((?x47917 (* l_0_10_343 l_0_10_343)))
 (let ((?x47915 (* l_0_10_342 l_0_10_342)))
 (let ((?x47913 (* l_0_10_341 l_0_10_341)))
 (let ((?x47911 (* l_0_10_340 l_0_10_340)))
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44510 (* ?x43621 l_0_10_305)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44507 (* ?x43618 l_0_10_304)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40789 (* ?x40477 l_0_10_197)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40787 (* ?x40474 l_0_10_196)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40757 (* ?x40466 l_0_10_161)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x45897 (* ?x40682 l_0_10_160)))
 (let ((?x47914 (- (- (+ (+ (- (- (+ ?x45897 ?x40757) ?x40787) ?x40789) ?x44507) ?x44510) ?x47911) ?x47913)))
 (let ((?x47928 (- (- (- (- (- (- (- ?x47914 ?x47915) ?x47917) ?x47919) ?x47921) ?x47923) ?x47925) ?x47927)))
 (= (- (- (- ?x47928 ?x47929) ?x47931) ?x47933) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44614 (* ?x43621 l_0_10_311)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44612 (* ?x43618 l_0_10_310)))
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x13600 (* ?x44392 l_0_10_269)))
 (let ((?x44389 (* 2.0 l_0_10_254)))
 (let ((?x13578 (* ?x44389 l_0_10_268)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x40902 (* ?x40477 l_0_10_203)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x40900 (* ?x40474 l_0_10_202)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x40898 (* ?x40466 l_0_10_167)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x40895 (* ?x40682 l_0_10_166)))
 (let ((?x47958 (+ (+ (- (- (- (- (+ ?x40895 ?x40898) ?x40900) ?x40902) ?x13578) ?x13600) ?x44612) ?x44614)))
 (let ((?x47964 (- (- ?x47958 (* (* 2.0 l_0_10_340) l_0_10_346)) (* (* 2.0 l_0_10_341) l_0_10_347))))
 (let ((?x47970 (- (- ?x47964 (* (* 2.0 l_0_10_342) l_0_10_348)) (* (* 2.0 l_0_10_343) l_0_10_349))))
 (let ((?x47976 (- (- ?x47970 (* (* 2.0 l_0_10_344) l_0_10_350)) (* (* 2.0 l_0_10_345) l_0_10_351))))
 (let ((?x47982 (- (- ?x47976 (* (* 2.0 l_0_10_376) l_0_10_382)) (* (* 2.0 l_0_10_377) l_0_10_383))))
 (let ((?x47988 (- (- ?x47982 (* (* 2.0 l_0_10_378) l_0_10_384)) (* (* 2.0 l_0_10_379) l_0_10_385))))
 (let ((?x47994 (- (- ?x47988 (* (* 2.0 l_0_10_380) l_0_10_386)) (* (* 2.0 l_0_10_381) l_0_10_387))))
 (= ?x47994 0.0)))))))))))))))))))))))))
(assert
 (let ((?x43621 (* 2.0 l_0_10_291)))
 (let ((?x44717 (* ?x43621 l_0_10_318)))
 (let ((?x43618 (* 2.0 l_0_10_290)))
 (let ((?x44715 (* ?x43618 l_0_10_317)))
 (let ((?x40477 (* 2.0 l_0_10_183)))
 (let ((?x41022 (* ?x40477 l_0_10_210)))
 (let ((?x40474 (* 2.0 l_0_10_182)))
 (let ((?x41020 (* ?x40474 l_0_10_209)))
 (let ((?x40466 (* 2.0 l_0_10_147)))
 (let ((?x41018 (* ?x40466 l_0_10_174)))
 (let ((?x40682 (* 2.0 l_0_10_146)))
 (let ((?x46049 (* ?x40682 l_0_10_173)))
 (let ((?x13954 (- (- (- (+ ?x46049 ?x41018) ?x41020) ?x41022) (* (* 2.0 l_0_10_218) l_0_10_232))))
 (let ((?x48019 (- (+ (+ (- ?x13954 (* (* 2.0 l_0_10_219) l_0_10_233)) ?x44715) ?x44717) (* (* 2.0 l_0_10_340) l_0_10_353))))
 (let ((?x48023 (- (- ?x48019 (* (* 2.0 l_0_10_341) l_0_10_354)) (* (* 2.0 l_0_10_342) l_0_10_355))))
 (let ((?x48027 (- (- ?x48023 (* (* 2.0 l_0_10_343) l_0_10_356)) (* (* 2.0 l_0_10_344) l_0_10_357))))
 (let ((?x48031 (- (- ?x48027 (* (* 2.0 l_0_10_345) l_0_10_358)) (* (* 2.0 l_0_10_376) l_0_10_389))))
 (let ((?x48035 (- (- ?x48031 (* (* 2.0 l_0_10_377) l_0_10_390)) (* (* 2.0 l_0_10_378) l_0_10_391))))
 (let ((?x48039 (- (- ?x48035 (* (* 2.0 l_0_10_379) l_0_10_392)) (* (* 2.0 l_0_10_380) l_0_10_393))))
 (= (- ?x48039 (* (* 2.0 l_0_10_381) l_0_10_394)) 0.0)))))))))))))))))))))
(assert
 (let ((?x44825 (* l_0_10_294 l_0_10_294)))
 (let ((?x44823 (* l_0_10_293 l_0_10_293)))
 (let ((?x44835 (* l_0_10_292 l_0_10_292)))
 (let ((?x41101 (* l_0_10_186 l_0_10_186)))
 (let ((?x41099 (* l_0_10_185 l_0_10_185)))
 (let ((?x41097 (* l_0_10_184 l_0_10_184)))
 (let ((?x41095 (* l_0_10_150 l_0_10_150)))
 (let ((?x14107 (+ (+ (* l_0_10_148 l_0_10_148) (* l_0_10_149 l_0_10_149)) ?x41095)))
 (= (+ (+ (+ (- (- (- ?x14107 ?x41097) ?x41099) ?x41101) ?x44835) ?x44823) ?x44825) 0.0))))))))))
(assert
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x44892 (* ?x40236 l_0_10_301)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x44890 (* ?x40233 l_0_10_300)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x44888 (* ?x40230 l_0_10_299)))
 (let ((?x40703 (* 2.0 l_0_10_258)))
 (let ((?x48063 (* ?x40703 l_0_10_270)))
 (let ((?x40700 (* 2.0 l_0_10_257)))
 (let ((?x48061 (* ?x40700 l_0_10_269)))
 (let ((?x40697 (* 2.0 l_0_10_256)))
 (let ((?x48059 (* ?x40697 l_0_10_268)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x41243 (* ?x40797 l_0_10_193)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x41241 (* ?x40794 l_0_10_192)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x41239 (* ?x40791 l_0_10_191)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41237 (* ?x40778 l_0_10_157)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41235 (* ?x40775 l_0_10_156)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x41233 (* ?x40761 l_0_10_155)))
 (let ((?x48062 (+ (+ (- (- (- (+ (+ ?x41233 ?x41235) ?x41237) ?x41239) ?x41241) ?x41243) ?x48059) ?x48061)))
 (= (+ (+ (+ (+ ?x48062 ?x48063) ?x44888) ?x44890) ?x44892) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x44951 (* ?x40236 l_0_10_306)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x44948 (* ?x40233 l_0_10_305)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x44945 (* ?x40230 l_0_10_304)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x41315 (* ?x40797 l_0_10_198)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x41313 (* ?x40794 l_0_10_197)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x41311 (* ?x40791 l_0_10_196)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41291 (* ?x40778 l_0_10_162)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41287 (* ?x40775 l_0_10_161)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x42677 (* ?x40761 l_0_10_160)))
 (let ((?x48080 (+ (+ (- (- (- (+ (+ ?x42677 ?x41287) ?x41291) ?x41311) ?x41313) ?x41315) ?x44945) ?x44948)))
 (= (+ ?x48080 ?x44951) 0.0)))))))))))))))))))))
(assert
 (let ((?x40236 (* 2.0 l_0_10_294)))
 (let ((?x45010 (* ?x40236 l_0_10_312)))
 (let ((?x40233 (* 2.0 l_0_10_293)))
 (let ((?x45008 (* ?x40233 l_0_10_311)))
 (let ((?x40230 (* 2.0 l_0_10_292)))
 (let ((?x45006 (* ?x40230 l_0_10_310)))
 (let ((?x40703 (* 2.0 l_0_10_258)))
 (let ((?x48063 (* ?x40703 l_0_10_270)))
 (let ((?x40700 (* 2.0 l_0_10_257)))
 (let ((?x48061 (* ?x40700 l_0_10_269)))
 (let ((?x40697 (* 2.0 l_0_10_256)))
 (let ((?x48059 (* ?x40697 l_0_10_268)))
 (let ((?x40797 (* 2.0 l_0_10_186)))
 (let ((?x41392 (* ?x40797 l_0_10_204)))
 (let ((?x40794 (* 2.0 l_0_10_185)))
 (let ((?x41390 (* ?x40794 l_0_10_203)))
 (let ((?x40791 (* 2.0 l_0_10_184)))
 (let ((?x41388 (* ?x40791 l_0_10_202)))
 (let ((?x40778 (* 2.0 l_0_10_150)))
 (let ((?x41385 (* ?x40778 l_0_10_168)))
 (let ((?x40775 (* 2.0 l_0_10_149)))
 (let ((?x41382 (* ?x40775 l_0_10_167)))
 (let ((?x40761 (* 2.0 l_0_10_148)))
 (let ((?x41379 (* ?x40761 l_0_10_166)))
 (let ((?x48095 (- (- (- (- (- (+ (+ ?x41379 ?x41382) ?x41385) ?x41388) ?x41390) ?x41392) ?x48059) ?x48061)))
 (= (+ (+ (+ (- ?x48095 ?x48063) ?x45006) ?x45008) ?x45010) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x45148 (* l_0_10_303 l_0_10_303)))
 (let ((?x45146 (* l_0_10_302 l_0_10_302)))
 (let ((?x7418 (* l_0_10_301 l_0_10_301)))
 (let ((?x7419 (* l_0_10_300 l_0_10_300)))
 (let ((?x7413 (* l_0_10_299 l_0_10_299)))
 (let ((?x45809 (* 2.0 l_0_10_267)))
 (let ((?x48117 (* ?x45809 l_0_10_272)))
 (let ((?x45806 (* 2.0 l_0_10_266)))
 (let ((?x48115 (* ?x45806 l_0_10_271)))
 (let ((?x45803 (* 2.0 l_0_10_265)))
 (let ((?x48113 (* ?x45803 l_0_10_270)))
 (let ((?x45800 (* 2.0 l_0_10_264)))
 (let ((?x48111 (* ?x45800 l_0_10_269)))
 (let ((?x45797 (* 2.0 l_0_10_263)))
 (let ((?x48109 (* ?x45797 l_0_10_268)))
 (let ((?x42091 (* l_0_10_195 l_0_10_195)))
 (let ((?x42089 (* l_0_10_194 l_0_10_194)))
 (let ((?x42087 (* l_0_10_193 l_0_10_193)))
 (let ((?x42085 (* l_0_10_192 l_0_10_192)))
 (let ((?x42083 (* l_0_10_191 l_0_10_191)))
 (let ((?x42081 (* l_0_10_159 l_0_10_159)))
 (let ((?x42079 (* l_0_10_158 l_0_10_158)))
 (let ((?x42077 (* l_0_10_157 l_0_10_157)))
 (let ((?x14268 (+ (+ (* l_0_10_155 l_0_10_155) (* l_0_10_156 l_0_10_156)) ?x42077)))
 (let ((?x48108 (- (- (- (- (- (+ (+ ?x14268 ?x42079) ?x42081) ?x42083) ?x42085) ?x42087) ?x42089) ?x42091)))
 (let ((?x48120 (+ (+ (+ (+ (+ (+ (+ ?x48108 ?x48109) ?x48111) ?x48113) ?x48115) ?x48117) ?x7413) ?x7419)))
 (= (+ (+ (+ ?x48120 ?x7418) ?x45146) ?x45148) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x45181 (* 2.0 l_0_10_303)))
 (let ((?x45182 (* ?x45181 l_0_10_308)))
 (let ((?x45178 (* 2.0 l_0_10_302)))
 (let ((?x45179 (* ?x45178 l_0_10_307)))
 (let ((?x45175 (* 2.0 l_0_10_301)))
 (let ((?x45176 (* ?x45175 l_0_10_306)))
 (let ((?x45172 (* 2.0 l_0_10_300)))
 (let ((?x45173 (* ?x45172 l_0_10_305)))
 (let ((?x45169 (* 2.0 l_0_10_299)))
 (let ((?x45170 (* ?x45169 l_0_10_304)))
 (let ((?x48147 (* l_0_10_273 l_0_10_273)))
 (let ((?x48145 (* l_0_10_272 l_0_10_272)))
 (let ((?x48143 (* l_0_10_271 l_0_10_271)))
 (let ((?x48141 (* l_0_10_270 l_0_10_270)))
 (let ((?x48139 (* l_0_10_269 l_0_10_269)))
 (let ((?x48137 (* l_0_10_268 l_0_10_268)))
 (let ((?x42184 (* 2.0 l_0_10_195)))
 (let ((?x42185 (* ?x42184 l_0_10_200)))
 (let ((?x42181 (* 2.0 l_0_10_194)))
 (let ((?x42182 (* ?x42181 l_0_10_199)))
 (let ((?x42178 (* 2.0 l_0_10_193)))
 (let ((?x42179 (* ?x42178 l_0_10_198)))
 (let ((?x42175 (* 2.0 l_0_10_192)))
 (let ((?x42176 (* ?x42175 l_0_10_197)))
 (let ((?x42172 (* 2.0 l_0_10_191)))
 (let ((?x42173 (* ?x42172 l_0_10_196)))
 (let ((?x42169 (* 2.0 l_0_10_159)))
 (let ((?x42170 (* ?x42169 l_0_10_164)))
 (let ((?x42166 (* 2.0 l_0_10_158)))
 (let ((?x42167 (* ?x42166 l_0_10_163)))
 (let ((?x42163 (* 2.0 l_0_10_157)))
 (let ((?x42164 (* ?x42163 l_0_10_162)))
 (let ((?x42160 (* 2.0 l_0_10_156)))
 (let ((?x42161 (* ?x42160 l_0_10_161)))
 (let ((?x42157 (* 2.0 l_0_10_155)))
 (let ((?x42158 (* ?x42157 l_0_10_160)))
 (let ((?x48134 (- (- (- (+ (+ (+ (+ ?x42158 ?x42161) ?x42164) ?x42167) ?x42170) ?x42173) ?x42176) ?x42179)))
 (let ((?x48146 (+ (+ (+ (+ (+ (- (- ?x48134 ?x42182) ?x42185) ?x48137) ?x48139) ?x48141) ?x48143) ?x48145)))
 (= (+ (+ (+ (+ (+ (+ ?x48146 ?x48147) ?x45170) ?x45173) ?x45176) ?x45179) ?x45182) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45181 (* 2.0 l_0_10_303)))
 (let ((?x45218 (* ?x45181 l_0_10_314)))
 (let ((?x45178 (* 2.0 l_0_10_302)))
 (let ((?x45216 (* ?x45178 l_0_10_313)))
 (let ((?x45175 (* 2.0 l_0_10_301)))
 (let ((?x45214 (* ?x45175 l_0_10_312)))
 (let ((?x45172 (* 2.0 l_0_10_300)))
 (let ((?x45212 (* ?x45172 l_0_10_311)))
 (let ((?x45169 (* 2.0 l_0_10_299)))
 (let ((?x45210 (* ?x45169 l_0_10_310)))
 (let ((?x45947 (* 2.0 l_0_10_273)))
 (let ((?x48191 (* ?x45947 l_0_10_279)))
 (let ((?x45944 (* 2.0 l_0_10_272)))
 (let ((?x48189 (* ?x45944 l_0_10_278)))
 (let ((?x45941 (* 2.0 l_0_10_271)))
 (let ((?x48187 (* ?x45941 l_0_10_277)))
 (let ((?x45938 (* 2.0 l_0_10_270)))
 (let ((?x48185 (* ?x45938 l_0_10_276)))
 (let ((?x45935 (* 2.0 l_0_10_269)))
 (let ((?x48183 (* ?x45935 l_0_10_275)))
 (let ((?x45932 (* 2.0 l_0_10_268)))
 (let ((?x48181 (* ?x45932 l_0_10_274)))
 (let ((?x45809 (* 2.0 l_0_10_267)))
 (let ((?x48117 (* ?x45809 l_0_10_272)))
 (let ((?x45806 (* 2.0 l_0_10_266)))
 (let ((?x48115 (* ?x45806 l_0_10_271)))
 (let ((?x45803 (* 2.0 l_0_10_265)))
 (let ((?x48113 (* ?x45803 l_0_10_270)))
 (let ((?x45800 (* 2.0 l_0_10_264)))
 (let ((?x48111 (* ?x45800 l_0_10_269)))
 (let ((?x45797 (* 2.0 l_0_10_263)))
 (let ((?x48109 (* ?x45797 l_0_10_268)))
 (let ((?x42184 (* 2.0 l_0_10_195)))
 (let ((?x42318 (* ?x42184 l_0_10_206)))
 (let ((?x42181 (* 2.0 l_0_10_194)))
 (let ((?x42316 (* ?x42181 l_0_10_205)))
 (let ((?x42178 (* 2.0 l_0_10_193)))
 (let ((?x42314 (* ?x42178 l_0_10_204)))
 (let ((?x42175 (* 2.0 l_0_10_192)))
 (let ((?x42312 (* ?x42175 l_0_10_203)))
 (let ((?x42172 (* 2.0 l_0_10_191)))
 (let ((?x42310 (* ?x42172 l_0_10_202)))
 (let ((?x42169 (* 2.0 l_0_10_159)))
 (let ((?x42308 (* ?x42169 l_0_10_170)))
 (let ((?x42166 (* 2.0 l_0_10_158)))
 (let ((?x42306 (* ?x42166 l_0_10_169)))
 (let ((?x42163 (* 2.0 l_0_10_157)))
 (let ((?x42304 (* ?x42163 l_0_10_168)))
 (let ((?x42160 (* 2.0 l_0_10_156)))
 (let ((?x42302 (* ?x42160 l_0_10_167)))
 (let ((?x42157 (* 2.0 l_0_10_155)))
 (let ((?x42300 (* ?x42157 l_0_10_166)))
 (let ((?x48173 (- (- (- (+ (+ (+ (+ ?x42300 ?x42302) ?x42304) ?x42306) ?x42308) ?x42310) ?x42312) ?x42314)))
 (let ((?x48180 (- (- (- (- (- (- (- ?x48173 ?x42316) ?x42318) ?x48109) ?x48111) ?x48113) ?x48115) ?x48117)))
 (let ((?x48193 (+ (+ (+ (+ (+ (+ (+ ?x48180 ?x48181) ?x48183) ?x48185) ?x48187) ?x48189) ?x48191) ?x45210)))
 (= (+ (+ (+ (+ ?x48193 ?x45212) ?x45214) ?x45216) ?x45218) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45181 (* 2.0 l_0_10_303)))
 (let ((?x45265 (* ?x45181 l_0_10_321)))
 (let ((?x45178 (* 2.0 l_0_10_302)))
 (let ((?x45263 (* ?x45178 l_0_10_320)))
 (let ((?x45175 (* 2.0 l_0_10_301)))
 (let ((?x45261 (* ?x45175 l_0_10_319)))
 (let ((?x45172 (* 2.0 l_0_10_300)))
 (let ((?x45259 (* ?x45172 l_0_10_318)))
 (let ((?x45169 (* 2.0 l_0_10_299)))
 (let ((?x45257 (* ?x45169 l_0_10_317)))
 (let ((?x45947 (* 2.0 l_0_10_273)))
 (let ((?x45948 (* ?x45947 l_0_10_286)))
 (let ((?x45944 (* 2.0 l_0_10_272)))
 (let ((?x45945 (* ?x45944 l_0_10_285)))
 (let ((?x45941 (* 2.0 l_0_10_271)))
 (let ((?x45942 (* ?x45941 l_0_10_284)))
 (let ((?x45938 (* 2.0 l_0_10_270)))
 (let ((?x45939 (* ?x45938 l_0_10_283)))
 (let ((?x45935 (* 2.0 l_0_10_269)))
 (let ((?x45936 (* ?x45935 l_0_10_282)))
 (let ((?x45932 (* 2.0 l_0_10_268)))
 (let ((?x45933 (* ?x45932 l_0_10_281)))
 (let ((?x42184 (* 2.0 l_0_10_195)))
 (let ((?x42479 (* ?x42184 l_0_10_213)))
 (let ((?x42181 (* 2.0 l_0_10_194)))
 (let ((?x42477 (* ?x42181 l_0_10_212)))
 (let ((?x42178 (* 2.0 l_0_10_193)))
 (let ((?x42475 (* ?x42178 l_0_10_211)))
 (let ((?x42175 (* 2.0 l_0_10_192)))
 (let ((?x42473 (* ?x42175 l_0_10_210)))
 (let ((?x42172 (* 2.0 l_0_10_191)))
 (let ((?x42471 (* ?x42172 l_0_10_209)))
 (let ((?x42169 (* 2.0 l_0_10_159)))
 (let ((?x42469 (* ?x42169 l_0_10_177)))
 (let ((?x42166 (* 2.0 l_0_10_158)))
 (let ((?x42467 (* ?x42166 l_0_10_176)))
 (let ((?x42163 (* 2.0 l_0_10_157)))
 (let ((?x42465 (* ?x42163 l_0_10_175)))
 (let ((?x42160 (* 2.0 l_0_10_156)))
 (let ((?x42463 (* ?x42160 l_0_10_174)))
 (let ((?x42157 (* 2.0 l_0_10_155)))
 (let ((?x42461 (* ?x42157 l_0_10_173)))
 (let ((?x14442 (- (- (- (+ (+ (+ (+ ?x42461 ?x42463) ?x42465) ?x42467) ?x42469) ?x42471) ?x42473) ?x42475)))
 (let ((?x14422 (- (- (- (- ?x14442 ?x42477) ?x42479) (* (* 2.0 l_0_10_227) l_0_10_232)) (* (* 2.0 l_0_10_228) l_0_10_233))))
 (let ((?x48211 (- (- ?x14422 (* (* 2.0 l_0_10_229) l_0_10_234)) (* (* 2.0 l_0_10_230) l_0_10_235))))
 (let ((?x48216 (+ (+ (+ (- ?x48211 (* (* 2.0 l_0_10_231) l_0_10_236)) ?x45933) ?x45936) ?x45939)))
 (let ((?x48223 (+ (+ (+ (+ (+ (+ (+ ?x48216 ?x45942) ?x45945) ?x45948) ?x45257) ?x45259) ?x45261) ?x45263)))
 (= (+ ?x48223 ?x45265) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45320 (* l_0_10_309 l_0_10_309)))
 (let ((?x45318 (* l_0_10_308 l_0_10_308)))
 (let ((?x45316 (* l_0_10_307 l_0_10_307)))
 (let ((?x45314 (* l_0_10_306 l_0_10_306)))
 (let ((?x45312 (* l_0_10_305 l_0_10_305)))
 (let ((?x45310 (* l_0_10_304 l_0_10_304)))
 (let ((?x42603 (* l_0_10_201 l_0_10_201)))
 (let ((?x42601 (* l_0_10_200 l_0_10_200)))
 (let ((?x42597 (* l_0_10_199 l_0_10_199)))
 (let ((?x42595 (* l_0_10_198 l_0_10_198)))
 (let ((?x42593 (* l_0_10_197 l_0_10_197)))
 (let ((?x42591 (* l_0_10_196 l_0_10_196)))
 (let ((?x42583 (* l_0_10_165 l_0_10_165)))
 (let ((?x42568 (* l_0_10_164 l_0_10_164)))
 (let ((?x42565 (* l_0_10_163 l_0_10_163)))
 (let ((?x42561 (* l_0_10_162 l_0_10_162)))
 (let ((?x14612 (+ (+ (* l_0_10_160 l_0_10_160) (* l_0_10_161 l_0_10_161)) ?x42561)))
 (let ((?x48241 (- (- (- (- (+ (+ (+ ?x14612 ?x42565) ?x42568) ?x42583) ?x42591) ?x42593) ?x42595) ?x42597)))
 (let ((?x48248 (+ (+ (+ (+ (+ (- (- ?x48241 ?x42601) ?x42603) ?x45310) ?x45312) ?x45314) ?x45316) ?x45318)))
 (= (+ ?x48248 ?x45320) 0.0)))))))))))))))))))))
(assert
 (let ((?x45353 (* 2.0 l_0_10_309)))
 (let ((?x45354 (* ?x45353 l_0_10_315)))
 (let ((?x45350 (* 2.0 l_0_10_308)))
 (let ((?x45351 (* ?x45350 l_0_10_314)))
 (let ((?x45347 (* 2.0 l_0_10_307)))
 (let ((?x45348 (* ?x45347 l_0_10_313)))
 (let ((?x45344 (* 2.0 l_0_10_306)))
 (let ((?x45345 (* ?x45344 l_0_10_312)))
 (let ((?x45341 (* 2.0 l_0_10_305)))
 (let ((?x45342 (* ?x45341 l_0_10_311)))
 (let ((?x45338 (* 2.0 l_0_10_304)))
 (let ((?x45339 (* ?x45338 l_0_10_310)))
 (let ((?x48147 (* l_0_10_273 l_0_10_273)))
 (let ((?x48145 (* l_0_10_272 l_0_10_272)))
 (let ((?x48143 (* l_0_10_271 l_0_10_271)))
 (let ((?x48141 (* l_0_10_270 l_0_10_270)))
 (let ((?x48139 (* l_0_10_269 l_0_10_269)))
 (let ((?x48137 (* l_0_10_268 l_0_10_268)))
 (let ((?x42726 (* 2.0 l_0_10_201)))
 (let ((?x42727 (* ?x42726 l_0_10_207)))
 (let ((?x42723 (* 2.0 l_0_10_200)))
 (let ((?x42724 (* ?x42723 l_0_10_206)))
 (let ((?x42717 (* 2.0 l_0_10_199)))
 (let ((?x42718 (* ?x42717 l_0_10_205)))
 (let ((?x42714 (* 2.0 l_0_10_198)))
 (let ((?x42715 (* ?x42714 l_0_10_204)))
 (let ((?x42711 (* 2.0 l_0_10_197)))
 (let ((?x42712 (* ?x42711 l_0_10_203)))
 (let ((?x42708 (* 2.0 l_0_10_196)))
 (let ((?x42709 (* ?x42708 l_0_10_202)))
 (let ((?x42698 (* 2.0 l_0_10_165)))
 (let ((?x42699 (* ?x42698 l_0_10_171)))
 (let ((?x42695 (* 2.0 l_0_10_164)))
 (let ((?x42696 (* ?x42695 l_0_10_170)))
 (let ((?x42692 (* 2.0 l_0_10_163)))
 (let ((?x42693 (* ?x42692 l_0_10_169)))
 (let ((?x42689 (* 2.0 l_0_10_162)))
 (let ((?x42690 (* ?x42689 l_0_10_168)))
 (let ((?x42686 (* 2.0 l_0_10_161)))
 (let ((?x42687 (* ?x42686 l_0_10_167)))
 (let ((?x42683 (* 2.0 l_0_10_160)))
 (let ((?x42684 (* ?x42683 l_0_10_166)))
 (let ((?x48264 (- (- (+ (+ (+ (+ (+ ?x42684 ?x42687) ?x42690) ?x42693) ?x42696) ?x42699) ?x42709) ?x42712)))
 (let ((?x48271 (- (- (- (- (- (- (- ?x48264 ?x42715) ?x42718) ?x42724) ?x42727) ?x48137) ?x48139) ?x48141)))
 (let ((?x48278 (+ (+ (+ (+ (- (- (- ?x48271 ?x48143) ?x48145) ?x48147) ?x45339) ?x45342) ?x45345) ?x45348)))
 (= (+ (+ ?x48278 ?x45351) ?x45354) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45353 (* 2.0 l_0_10_309)))
 (let ((?x45406 (* ?x45353 l_0_10_322)))
 (let ((?x45350 (* 2.0 l_0_10_308)))
 (let ((?x45404 (* ?x45350 l_0_10_321)))
 (let ((?x45347 (* 2.0 l_0_10_307)))
 (let ((?x45402 (* ?x45347 l_0_10_320)))
 (let ((?x45344 (* 2.0 l_0_10_306)))
 (let ((?x45400 (* ?x45344 l_0_10_319)))
 (let ((?x45341 (* 2.0 l_0_10_305)))
 (let ((?x45398 (* ?x45341 l_0_10_318)))
 (let ((?x45338 (* 2.0 l_0_10_304)))
 (let ((?x45396 (* ?x45338 l_0_10_317)))
 (let ((?x48300 (* l_0_10_237 l_0_10_237)))
 (let ((?x48298 (* l_0_10_236 l_0_10_236)))
 (let ((?x48296 (* l_0_10_235 l_0_10_235)))
 (let ((?x14698 (* l_0_10_234 l_0_10_234)))
 (let ((?x14722 (* l_0_10_233 l_0_10_233)))
 (let ((?x14718 (* l_0_10_232 l_0_10_232)))
 (let ((?x42726 (* 2.0 l_0_10_201)))
 (let ((?x42928 (* ?x42726 l_0_10_214)))
 (let ((?x42723 (* 2.0 l_0_10_200)))
 (let ((?x42926 (* ?x42723 l_0_10_213)))
 (let ((?x42717 (* 2.0 l_0_10_199)))
 (let ((?x42922 (* ?x42717 l_0_10_212)))
 (let ((?x42714 (* 2.0 l_0_10_198)))
 (let ((?x42920 (* ?x42714 l_0_10_211)))
 (let ((?x42711 (* 2.0 l_0_10_197)))
 (let ((?x42918 (* ?x42711 l_0_10_210)))
 (let ((?x42708 (* 2.0 l_0_10_196)))
 (let ((?x42916 (* ?x42708 l_0_10_209)))
 (let ((?x42698 (* 2.0 l_0_10_165)))
 (let ((?x42908 (* ?x42698 l_0_10_178)))
 (let ((?x42695 (* 2.0 l_0_10_164)))
 (let ((?x42906 (* ?x42695 l_0_10_177)))
 (let ((?x42692 (* 2.0 l_0_10_163)))
 (let ((?x42904 (* ?x42692 l_0_10_176)))
 (let ((?x42689 (* 2.0 l_0_10_162)))
 (let ((?x42902 (* ?x42689 l_0_10_175)))
 (let ((?x42686 (* 2.0 l_0_10_161)))
 (let ((?x42900 (* ?x42686 l_0_10_174)))
 (let ((?x42683 (* 2.0 l_0_10_160)))
 (let ((?x42898 (* ?x42683 l_0_10_173)))
 (let ((?x14705 (- (- (+ (+ (+ (+ (+ ?x42898 ?x42900) ?x42902) ?x42904) ?x42906) ?x42908) ?x42916) ?x42918)))
 (let ((?x48295 (- (- (- (- (- (- (- ?x14705 ?x42920) ?x42922) ?x42926) ?x42928) ?x14718) ?x14722) ?x14698)))
 (let ((?x48305 (+ (+ (+ (+ (- (- (- ?x48295 ?x48296) ?x48298) ?x48300) ?x45396) ?x45398) ?x45400) ?x45402)))
 (= (+ (+ ?x48305 ?x45404) ?x45406) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45429 (* l_0_10_316 l_0_10_316)))
 (let ((?x45427 (* l_0_10_315 l_0_10_315)))
 (let ((?x45425 (* l_0_10_314 l_0_10_314)))
 (let ((?x45423 (* l_0_10_313 l_0_10_313)))
 (let ((?x45421 (* l_0_10_312 l_0_10_312)))
 (let ((?x45419 (* l_0_10_311 l_0_10_311)))
 (let ((?x9648 (* l_0_10_310 l_0_10_310)))
 (let ((?x45947 (* 2.0 l_0_10_273)))
 (let ((?x48191 (* ?x45947 l_0_10_279)))
 (let ((?x45944 (* 2.0 l_0_10_272)))
 (let ((?x48189 (* ?x45944 l_0_10_278)))
 (let ((?x45941 (* 2.0 l_0_10_271)))
 (let ((?x48187 (* ?x45941 l_0_10_277)))
 (let ((?x45938 (* 2.0 l_0_10_270)))
 (let ((?x48185 (* ?x45938 l_0_10_276)))
 (let ((?x45935 (* 2.0 l_0_10_269)))
 (let ((?x48183 (* ?x45935 l_0_10_275)))
 (let ((?x45932 (* 2.0 l_0_10_268)))
 (let ((?x48181 (* ?x45932 l_0_10_274)))
 (let ((?x43082 (* l_0_10_208 l_0_10_208)))
 (let ((?x43080 (* l_0_10_207 l_0_10_207)))
 (let ((?x43078 (* l_0_10_206 l_0_10_206)))
 (let ((?x43076 (* l_0_10_205 l_0_10_205)))
 (let ((?x43074 (* l_0_10_204 l_0_10_204)))
 (let ((?x43072 (* l_0_10_203 l_0_10_203)))
 (let ((?x43070 (* l_0_10_202 l_0_10_202)))
 (let ((?x43068 (* l_0_10_172 l_0_10_172)))
 (let ((?x43066 (* l_0_10_171 l_0_10_171)))
 (let ((?x43064 (* l_0_10_170 l_0_10_170)))
 (let ((?x43062 (* l_0_10_169 l_0_10_169)))
 (let ((?x43060 (* l_0_10_168 l_0_10_168)))
 (let ((?x14810 (+ (+ (* l_0_10_166 l_0_10_166) (* l_0_10_167 l_0_10_167)) ?x43060)))
 (let ((?x48321 (- (- (- (+ (+ (+ (+ ?x14810 ?x43062) ?x43064) ?x43066) ?x43068) ?x43070) ?x43072) ?x43074)))
 (let ((?x48328 (- (- (- (- (- (- (- ?x48321 ?x43076) ?x43078) ?x43080) ?x43082) ?x48181) ?x48183) ?x48185)))
 (let ((?x48335 (+ (+ (+ (+ (- (- (- ?x48328 ?x48187) ?x48189) ?x48191) ?x9648) ?x45419) ?x45421) ?x45423)))
 (= (+ (+ (+ ?x48335 ?x45425) ?x45427) ?x45429) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45514 (* l_0_10_324 l_0_10_324)))
 (let ((?x45512 (* l_0_10_323 l_0_10_323)))
 (let ((?x45510 (* l_0_10_322 l_0_10_322)))
 (let ((?x45508 (* l_0_10_321 l_0_10_321)))
 (let ((?x45506 (* l_0_10_320 l_0_10_320)))
 (let ((?x45503 (* l_0_10_319 l_0_10_319)))
 (let ((?x10428 (* l_0_10_318 l_0_10_318)))
 (let ((?x10443 (* l_0_10_317 l_0_10_317)))
 (let ((?x43472 (* l_0_10_216 l_0_10_216)))
 (let ((?x43470 (* l_0_10_215 l_0_10_215)))
 (let ((?x43468 (* l_0_10_214 l_0_10_214)))
 (let ((?x43466 (* l_0_10_213 l_0_10_213)))
 (let ((?x43464 (* l_0_10_212 l_0_10_212)))
 (let ((?x43462 (* l_0_10_211 l_0_10_211)))
 (let ((?x43460 (* l_0_10_210 l_0_10_210)))
 (let ((?x43458 (* l_0_10_209 l_0_10_209)))
 (let ((?x43456 (* l_0_10_180 l_0_10_180)))
 (let ((?x43454 (* l_0_10_179 l_0_10_179)))
 (let ((?x43452 (* l_0_10_178 l_0_10_178)))
 (let ((?x43450 (* l_0_10_177 l_0_10_177)))
 (let ((?x43429 (* l_0_10_176 l_0_10_176)))
 (let ((?x43425 (* l_0_10_175 l_0_10_175)))
 (let ((?x14953 (+ (+ (* l_0_10_173 l_0_10_173) (* l_0_10_174 l_0_10_174)) ?x43425)))
 (let ((?x11112 (- (- (+ (+ (+ (+ (+ ?x14953 ?x43429) ?x43450) ?x43452) ?x43454) ?x43456) ?x43458) ?x43460)))
 (let ((?x14919 (- (- (- (- (- (- (- ?x11112 ?x43462) ?x43464) ?x43466) ?x43468) ?x43470) ?x43472) (* (* 2.0 l_0_10_232) l_0_10_245))))
 (let ((?x14912 (- (- ?x14919 (* (* 2.0 l_0_10_233) l_0_10_246)) (* (* 2.0 l_0_10_234) l_0_10_247))))
 (let ((?x14894 (- (- ?x14912 (* (* 2.0 l_0_10_235) l_0_10_248)) (* (* 2.0 l_0_10_236) l_0_10_249))))
 (let ((?x48352 (+ (+ (+ (- ?x14894 (* (* 2.0 l_0_10_237) l_0_10_250)) ?x10443) ?x10428) ?x45503)))
 (= (+ (+ (+ (+ (+ ?x48352 ?x45506) ?x45508) ?x45510) ?x45512) ?x45514) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x15140 (- (- (* (- l_0_10_218) l_0_10_218) (* l_0_10_219 l_0_10_219)) (* (* 2.0 l_0_10_326) l_0_10_353))))
 (let ((?x48369 (- (- ?x15140 (* (* 2.0 l_0_10_327) l_0_10_354)) (* (* 2.0 l_0_10_362) l_0_10_389))))
 (= (- ?x48369 (* (* 2.0 l_0_10_363) l_0_10_390)) 0.0))))
(assert
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x45681 (* ?x44392 l_0_10_282)))
 (let ((?x44389 (* 2.0 l_0_10_254)))
 (let ((?x45679 (* ?x44389 l_0_10_281)))
 (let ((?x48404 (- (* (* (- 2.0) l_0_10_218) l_0_10_227) (* (* 2.0 l_0_10_219) l_0_10_228))))
 (let ((?x48410 (- (- (+ (+ ?x48404 ?x45679) ?x45681) (* (* 2.0 l_0_10_335) l_0_10_353)) (* (* 2.0 l_0_10_336) l_0_10_354))))
 (let ((?x48414 (- (- ?x48410 (* (* 2.0 l_0_10_337) l_0_10_355)) (* (* 2.0 l_0_10_338) l_0_10_356))))
 (let ((?x48418 (- (- ?x48414 (* (* 2.0 l_0_10_339) l_0_10_357)) (* (* 2.0 l_0_10_371) l_0_10_389))))
 (let ((?x48422 (- (- ?x48418 (* (* 2.0 l_0_10_372) l_0_10_390)) (* (* 2.0 l_0_10_373) l_0_10_391))))
 (let ((?x48426 (- (- ?x48422 (* (* 2.0 l_0_10_374) l_0_10_392)) (* (* 2.0 l_0_10_375) l_0_10_393))))
 (= ?x48426 0.0))))))))))))
(assert
 (let ((?x48475 (* l_0_10_396 l_0_10_396)))
 (let ((?x48473 (* l_0_10_395 l_0_10_395)))
 (let ((?x48471 (* l_0_10_394 l_0_10_394)))
 (let ((?x48469 (* l_0_10_393 l_0_10_393)))
 (let ((?x48467 (* l_0_10_392 l_0_10_392)))
 (let ((?x48465 (* l_0_10_391 l_0_10_391)))
 (let ((?x48463 (* l_0_10_390 l_0_10_390)))
 (let ((?x48461 (* l_0_10_389 l_0_10_389)))
 (let ((?x48459 (* l_0_10_360 l_0_10_360)))
 (let ((?x48457 (* l_0_10_359 l_0_10_359)))
 (let ((?x48455 (* l_0_10_358 l_0_10_358)))
 (let ((?x48453 (* l_0_10_357 l_0_10_357)))
 (let ((?x48451 (* l_0_10_356 l_0_10_356)))
 (let ((?x48449 (* l_0_10_355 l_0_10_355)))
 (let ((?x48447 (* l_0_10_354 l_0_10_354)))
 (let ((?x48445 (* l_0_10_353 l_0_10_353)))
 (let ((?x48444 (- (* (* (- 2.0) l_0_10_218) l_0_10_245) (* (* 2.0 l_0_10_219) l_0_10_246))))
 (let ((?x48458 (- (- (- (- (- (- (- ?x48444 ?x48445) ?x48447) ?x48449) ?x48451) ?x48453) ?x48455) ?x48457)))
 (let ((?x48472 (- (- (- (- (- (- (- ?x48458 ?x48459) ?x48461) ?x48463) ?x48465) ?x48467) ?x48469) ?x48471)))
 (= (- (- ?x48472 ?x48473) ?x48475) 0.0)))))))))))))))))))))
(assert
 (let ((?x45809 (* 2.0 l_0_10_267)))
 (let ((?x45810 (* ?x45809 l_0_10_285)))
 (let ((?x45806 (* 2.0 l_0_10_266)))
 (let ((?x45807 (* ?x45806 l_0_10_284)))
 (let ((?x45803 (* 2.0 l_0_10_265)))
 (let ((?x45804 (* ?x45803 l_0_10_283)))
 (let ((?x45800 (* 2.0 l_0_10_264)))
 (let ((?x45801 (* ?x45800 l_0_10_282)))
 (let ((?x45797 (* 2.0 l_0_10_263)))
 (let ((?x45798 (* ?x45797 l_0_10_281)))
 (let ((?x48509 (* l_0_10_231 l_0_10_231)))
 (let ((?x48507 (* l_0_10_230 l_0_10_230)))
 (let ((?x48505 (* l_0_10_229 l_0_10_229)))
 (let ((?x48506 (- (- (* (- l_0_10_227) l_0_10_227) (* l_0_10_228 l_0_10_228)) ?x48505)))
 (let ((?x48515 (+ (+ (+ (+ (+ (- (- ?x48506 ?x48507) ?x48509) ?x45798) ?x45801) ?x45804) ?x45807) ?x45810)))
 (= ?x48515 0.0)))))))))))))))))
(assert
 (let ((?x46087 (* l_0_10_288 l_0_10_288)))
 (let ((?x46085 (* l_0_10_287 l_0_10_287)))
 (let ((?x46083 (* l_0_10_286 l_0_10_286)))
 (let ((?x46081 (* l_0_10_285 l_0_10_285)))
 (let ((?x46079 (* l_0_10_284 l_0_10_284)))
 (let ((?x46077 (* l_0_10_283 l_0_10_283)))
 (let ((?x46075 (* l_0_10_282 l_0_10_282)))
 (let ((?x46073 (* l_0_10_281 l_0_10_281)))
 (let ((?x15500 (- (* (* (- 2.0) l_0_10_227) l_0_10_245) (* (* 2.0 l_0_10_228) l_0_10_246))))
 (let ((?x15488 (- (- ?x15500 (* (* 2.0 l_0_10_229) l_0_10_247)) (* (* 2.0 l_0_10_230) l_0_10_248))))
 (let ((?x48530 (+ (+ (+ (- ?x15488 (* (* 2.0 l_0_10_231) l_0_10_249)) ?x46073) ?x46075) ?x46077)))
 (= (+ (+ (+ (+ (+ ?x48530 ?x46079) ?x46081) ?x46083) ?x46085) ?x46087) 0.0)))))))))))))
(assert
 (let ((?x48568 (* l_0_10_252 l_0_10_252)))
 (let ((?x48566 (* l_0_10_251 l_0_10_251)))
 (let ((?x48564 (* l_0_10_250 l_0_10_250)))
 (let ((?x48562 (* l_0_10_249 l_0_10_249)))
 (let ((?x48560 (* l_0_10_248 l_0_10_248)))
 (let ((?x15546 (* l_0_10_247 l_0_10_247)))
 (let ((?x48559 (- (- (* (- l_0_10_245) l_0_10_245) (* l_0_10_246 l_0_10_246)) ?x15546)))
 (= (- (- (- (- (- ?x48559 ?x48560) ?x48562) ?x48564) ?x48566) ?x48568) 0.0)))))))))
(assert
 (let ((?x15562 (- (- (* (- l_0_10_254) l_0_10_254) (* l_0_10_255 l_0_10_255)) (* (* 2.0 l_0_10_326) l_0_10_346))))
 (let ((?x15570 (- (- ?x15562 (* (* 2.0 l_0_10_327) l_0_10_347)) (* (* 2.0 l_0_10_362) l_0_10_382))))
 (= (- ?x15570 (* (* 2.0 l_0_10_363) l_0_10_383)) 0.0))))
(assert
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x15614 (* ?x44392 l_0_10_257)))
 (let ((?x48609 (- (- (* (* (- 2.0) l_0_10_254) l_0_10_256) ?x15614) (* (* 2.0 l_0_10_328) l_0_10_346))))
 (let ((?x48613 (- (- ?x48609 (* (* 2.0 l_0_10_329) l_0_10_347)) (* (* 2.0 l_0_10_330) l_0_10_348))))
 (let ((?x48617 (- (- ?x48613 (* (* 2.0 l_0_10_364) l_0_10_382)) (* (* 2.0 l_0_10_365) l_0_10_383))))
 (= (- ?x48617 (* (* 2.0 l_0_10_366) l_0_10_384)) 0.0)))))))
(assert
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x48647 (* ?x44392 l_0_10_275)))
 (let ((?x48645 (* ?x44392 l_0_10_264)))
 (let ((?x48644 (+ (* (* (- 2.0) l_0_10_254) l_0_10_263) (* (* 2.0 l_0_10_254) l_0_10_274))))
 (let ((?x48652 (- (- (+ (- ?x48644 ?x48645) ?x48647) (* (* 2.0 l_0_10_335) l_0_10_346)) (* (* 2.0 l_0_10_336) l_0_10_347))))
 (let ((?x48656 (- (- ?x48652 (* (* 2.0 l_0_10_337) l_0_10_348)) (* (* 2.0 l_0_10_338) l_0_10_349))))
 (let ((?x48660 (- (- ?x48656 (* (* 2.0 l_0_10_339) l_0_10_350)) (* (* 2.0 l_0_10_371) l_0_10_382))))
 (let ((?x48664 (- (- ?x48660 (* (* 2.0 l_0_10_372) l_0_10_383)) (* (* 2.0 l_0_10_373) l_0_10_384))))
 (let ((?x48668 (- (- ?x48664 (* (* 2.0 l_0_10_374) l_0_10_385)) (* (* 2.0 l_0_10_375) l_0_10_386))))
 (= ?x48668 0.0)))))))))))
(assert
 (let ((?x48743 (* l_0_10_388 l_0_10_388)))
 (let ((?x48741 (* l_0_10_387 l_0_10_387)))
 (let ((?x48739 (* l_0_10_386 l_0_10_386)))
 (let ((?x48737 (* l_0_10_385 l_0_10_385)))
 (let ((?x48735 (* l_0_10_384 l_0_10_384)))
 (let ((?x48733 (* l_0_10_383 l_0_10_383)))
 (let ((?x48731 (* l_0_10_382 l_0_10_382)))
 (let ((?x48729 (* l_0_10_352 l_0_10_352)))
 (let ((?x48727 (* l_0_10_351 l_0_10_351)))
 (let ((?x48725 (* l_0_10_350 l_0_10_350)))
 (let ((?x48723 (* l_0_10_349 l_0_10_349)))
 (let ((?x48721 (* l_0_10_348 l_0_10_348)))
 (let ((?x48719 (* l_0_10_347 l_0_10_347)))
 (let ((?x15770 (* l_0_10_346 l_0_10_346)))
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x48647 (* ?x44392 l_0_10_275)))
 (let ((?x48722 (- (- (- (- (* (* (- 2.0) l_0_10_254) l_0_10_274) ?x48647) ?x15770) ?x48719) ?x48721)))
 (let ((?x48736 (- (- (- (- (- (- (- ?x48722 ?x48723) ?x48725) ?x48727) ?x48729) ?x48731) ?x48733) ?x48735)))
 (= (- (- (- (- ?x48736 ?x48737) ?x48739) ?x48741) ?x48743) 0.0))))))))))))))))))))
(assert
 (let ((?x48771 (* l_0_10_258 l_0_10_258)))
 (let ((?x48772 (- (- (* (- l_0_10_256) l_0_10_256) (* l_0_10_257 l_0_10_257)) ?x48771)))
 (= ?x48772 0.0))))
(assert
 (let ((?x40703 (* 2.0 l_0_10_258)))
 (let ((?x48793 (* ?x40703 l_0_10_276)))
 (let ((?x48791 (* ?x40703 l_0_10_265)))
 (let ((?x40700 (* 2.0 l_0_10_257)))
 (let ((?x48789 (* ?x40700 l_0_10_275)))
 (let ((?x48787 (* ?x40700 l_0_10_264)))
 (let ((?x48786 (+ (* (* (- 2.0) l_0_10_256) l_0_10_263) (* (* 2.0 l_0_10_256) l_0_10_274))))
 (= (+ (- (+ (- ?x48786 ?x48787) ?x48789) ?x48791) ?x48793) 0.0)))))))))
(assert
 (let ((?x40703 (* 2.0 l_0_10_258)))
 (let ((?x48793 (* ?x40703 l_0_10_276)))
 (let ((?x40700 (* 2.0 l_0_10_257)))
 (let ((?x48789 (* ?x40700 l_0_10_275)))
 (= (- (- (* (* (- 2.0) l_0_10_256) l_0_10_274) ?x48789) ?x48793) 0.0))))))
(assert
 (let ((?x48833 (* l_0_10_267 l_0_10_267)))
 (let ((?x45809 (* 2.0 l_0_10_267)))
 (let ((?x48831 (* ?x45809 l_0_10_278)))
 (let ((?x48829 (* l_0_10_266 l_0_10_266)))
 (let ((?x45806 (* 2.0 l_0_10_266)))
 (let ((?x48827 (* ?x45806 l_0_10_277)))
 (let ((?x48825 (* l_0_10_265 l_0_10_265)))
 (let ((?x45803 (* 2.0 l_0_10_265)))
 (let ((?x48823 (* ?x45803 l_0_10_276)))
 (let ((?x15864 (* l_0_10_264 l_0_10_264)))
 (let ((?x45800 (* 2.0 l_0_10_264)))
 (let ((?x15867 (* ?x45800 l_0_10_275)))
 (let ((?x15859 (* l_0_10_263 l_0_10_263)))
 (let ((?x48824 (+ (- (+ (- (* (* 2.0 l_0_10_263) l_0_10_274) ?x15859) ?x15867) ?x15864) ?x48823)))
 (= (- (+ (- (+ (- ?x48824 ?x48825) ?x48827) ?x48829) ?x48831) ?x48833) 0.0))))))))))))))))
(assert
 (let ((?x48886 (* l_0_10_280 l_0_10_280)))
 (let ((?x48884 (* l_0_10_279 l_0_10_279)))
 (let ((?x48882 (* l_0_10_278 l_0_10_278)))
 (let ((?x48880 (* l_0_10_277 l_0_10_277)))
 (let ((?x48878 (* l_0_10_276 l_0_10_276)))
 (let ((?x48876 (* l_0_10_275 l_0_10_275)))
 (let ((?x48874 (* l_0_10_274 l_0_10_274)))
 (let ((?x45809 (* 2.0 l_0_10_267)))
 (let ((?x48831 (* ?x45809 l_0_10_278)))
 (let ((?x45806 (* 2.0 l_0_10_266)))
 (let ((?x48827 (* ?x45806 l_0_10_277)))
 (let ((?x45803 (* 2.0 l_0_10_265)))
 (let ((?x48823 (* ?x45803 l_0_10_276)))
 (let ((?x45800 (* 2.0 l_0_10_264)))
 (let ((?x15867 (* ?x45800 l_0_10_275)))
 (let ((?x48873 (- (- (- (- (* (* (- 2.0) l_0_10_263) l_0_10_274) ?x15867) ?x48823) ?x48827) ?x48831)))
 (let ((?x48887 (+ (+ (+ (+ (+ (+ (+ ?x48873 ?x48874) ?x48876) ?x48878) ?x48880) ?x48882) ?x48884) ?x48886)))
 (= ?x48887 0.0)))))))))))))))))))
(assert
 (let ((?x48886 (* l_0_10_280 l_0_10_280)))
 (let ((?x48884 (* l_0_10_279 l_0_10_279)))
 (let ((?x48882 (* l_0_10_278 l_0_10_278)))
 (let ((?x48880 (* l_0_10_277 l_0_10_277)))
 (let ((?x48878 (* l_0_10_276 l_0_10_276)))
 (let ((?x48893 (- (- (* (- l_0_10_274) l_0_10_274) (* l_0_10_275 l_0_10_275)) ?x48878)))
 (= (- (- (- (- ?x48893 ?x48880) ?x48882) ?x48884) ?x48886) 0.0))))))))
(assert
 (let ((?x15965 (- (+ (* l_0_10_254 l_0_10_254) (* l_0_10_255 l_0_10_255)) (* (* 2.0 l_0_10_326) l_0_10_335))))
 (let ((?x8335 (- (- ?x15965 (* (* 2.0 l_0_10_327) l_0_10_336)) (* (* 2.0 l_0_10_362) l_0_10_371))))
 (= (- ?x8335 (* (* 2.0 l_0_10_363) l_0_10_372)) 0.0))))
(assert
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x15614 (* ?x44392 l_0_10_257)))
 (let ((?x48915 (- (+ (* (* 2.0 l_0_10_254) l_0_10_256) ?x15614) (* (* 2.0 l_0_10_328) l_0_10_335))))
 (let ((?x48919 (- (- ?x48915 (* (* 2.0 l_0_10_329) l_0_10_336)) (* (* 2.0 l_0_10_330) l_0_10_337))))
 (let ((?x48923 (- (- ?x48919 (* (* 2.0 l_0_10_364) l_0_10_371)) (* (* 2.0 l_0_10_365) l_0_10_372))))
 (= (- ?x48923 (* (* 2.0 l_0_10_366) l_0_10_373)) 0.0)))))))
(assert
 (let ((?x48965 (* l_0_10_375 l_0_10_375)))
 (let ((?x48963 (* l_0_10_374 l_0_10_374)))
 (let ((?x48961 (* l_0_10_373 l_0_10_373)))
 (let ((?x48959 (* l_0_10_372 l_0_10_372)))
 (let ((?x48957 (* l_0_10_371 l_0_10_371)))
 (let ((?x48955 (* l_0_10_339 l_0_10_339)))
 (let ((?x48953 (* l_0_10_338 l_0_10_338)))
 (let ((?x48951 (* l_0_10_337 l_0_10_337)))
 (let ((?x48949 (* l_0_10_336 l_0_10_336)))
 (let ((?x48947 (* l_0_10_335 l_0_10_335)))
 (let ((?x44392 (* 2.0 l_0_10_255)))
 (let ((?x48645 (* ?x44392 l_0_10_264)))
 (let ((?x48952 (- (- (- (+ (* (* 2.0 l_0_10_254) l_0_10_263) ?x48645) ?x48947) ?x48949) ?x48951)))
 (let ((?x48966 (- (- (- (- (- (- (- ?x48952 ?x48953) ?x48955) ?x48957) ?x48959) ?x48961) ?x48963) ?x48965)))
 (= ?x48966 0.0))))))))))))))))
(assert
 (let ((?x48771 (* l_0_10_258 l_0_10_258)))
 (let ((?x48982 (+ (+ (* l_0_10_256 l_0_10_256) (* l_0_10_257 l_0_10_257)) ?x48771)))
 (= ?x48982 0.0))))
(assert
 (let ((?x40703 (* 2.0 l_0_10_258)))
 (let ((?x48791 (* ?x40703 l_0_10_265)))
 (let ((?x40700 (* 2.0 l_0_10_257)))
 (let ((?x48787 (* ?x40700 l_0_10_264)))
 (= (+ (+ (* (* 2.0 l_0_10_256) l_0_10_263) ?x48787) ?x48791) 0.0))))))
(assert
 (let ((?x48833 (* l_0_10_267 l_0_10_267)))
 (let ((?x48829 (* l_0_10_266 l_0_10_266)))
 (let ((?x48825 (* l_0_10_265 l_0_10_265)))
 (let ((?x48988 (+ (+ (* l_0_10_263 l_0_10_263) (* l_0_10_264 l_0_10_264)) ?x48825)))
 (= (+ (+ ?x48988 ?x48829) ?x48833) 0.0))))))
(assert
 (let ((?x48996 (* l_0_10_363 l_0_10_363)))
 (let ((?x48994 (* l_0_10_362 l_0_10_362)))
 (let ((?x48995 (- (- (* (- l_0_10_326) l_0_10_326) (* l_0_10_327 l_0_10_327)) ?x48994)))
 (= (- ?x48995 ?x48996) 0.0)))))
(assert
 (let ((?x49008 (- (* (* (- 2.0) l_0_10_326) l_0_10_328) (* (* 2.0 l_0_10_327) l_0_10_329))))
 (let ((?x49012 (- (- ?x49008 (* (* 2.0 l_0_10_362) l_0_10_364)) (* (* 2.0 l_0_10_363) l_0_10_365))))
 (= ?x49012 0.0))))
(assert
 (let ((?x49039 (* l_0_10_366 l_0_10_366)))
 (let ((?x49037 (* l_0_10_365 l_0_10_365)))
 (let ((?x49035 (* l_0_10_364 l_0_10_364)))
 (let ((?x49033 (* l_0_10_330 l_0_10_330)))
 (let ((?x49034 (- (- (* (- l_0_10_328) l_0_10_328) (* l_0_10_329 l_0_10_329)) ?x49033)))
 (= (- (- (- ?x49034 ?x49035) ?x49037) ?x49039) 0.0)))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_28 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_37 0.0))
(assert
 (>= l_0_10_39 0.0))
(assert
 (>= l_0_10_42 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_57 0.0))
(assert
 (>= l_0_10_64 0.0))
(assert
 (>= l_0_10_72 0.0))
(assert
 (>= l_0_10_73 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (>= l_0_10_78 0.0))
(assert
 (>= l_0_10_82 0.0))
(assert
 (>= l_0_10_87 0.0))
(assert
 (>= l_0_10_93 0.0))
(assert
 (>= l_0_10_100 0.0))
(assert
 (>= l_0_10_108 0.0))
(assert
 (>= l_0_10_109 0.0))
(assert
 (>= l_0_10_111 0.0))
(assert
 (>= l_0_10_114 0.0))
(assert
 (>= l_0_10_118 0.0))
(assert
 (>= l_0_10_123 0.0))
(assert
 (>= l_0_10_129 0.0))
(assert
 (>= l_0_10_136 0.0))
(assert
 (>= l_0_10_144 0.0))
(assert
 (>= l_0_10_145 0.0))
(assert
 (>= l_0_10_147 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (>= l_0_10_154 0.0))
(assert
 (>= l_0_10_159 0.0))
(assert
 (>= l_0_10_165 0.0))
(assert
 (>= l_0_10_172 0.0))
(assert
 (>= l_0_10_180 0.0))
(assert
 (>= l_0_10_181 0.0))
(assert
 (>= l_0_10_183 0.0))
(assert
 (>= l_0_10_186 0.0))
(assert
 (>= l_0_10_190 0.0))
(assert
 (>= l_0_10_195 0.0))
(assert
 (>= l_0_10_201 0.0))
(assert
 (>= l_0_10_208 0.0))
(assert
 (>= l_0_10_216 0.0))
(assert
 (>= l_0_10_217 0.0))
(assert
 (>= l_0_10_219 0.0))
(assert
 (>= l_0_10_222 0.0))
(assert
 (>= l_0_10_226 0.0))
(assert
 (>= l_0_10_231 0.0))
(assert
 (>= l_0_10_237 0.0))
(assert
 (>= l_0_10_244 0.0))
(assert
 (>= l_0_10_252 0.0))
(assert
 (>= l_0_10_253 0.0))
(assert
 (>= l_0_10_255 0.0))
(assert
 (>= l_0_10_258 0.0))
(assert
 (>= l_0_10_262 0.0))
(assert
 (>= l_0_10_267 0.0))
(assert
 (>= l_0_10_273 0.0))
(assert
 (>= l_0_10_280 0.0))
(assert
 (>= l_0_10_288 0.0))
(assert
 (>= l_0_10_289 0.0))
(assert
 (>= l_0_10_291 0.0))
(assert
 (>= l_0_10_294 0.0))
(assert
 (>= l_0_10_298 0.0))
(assert
 (>= l_0_10_303 0.0))
(assert
 (>= l_0_10_309 0.0))
(assert
 (>= l_0_10_316 0.0))
(assert
 (>= l_0_10_324 0.0))
(assert
 (>= l_0_10_325 0.0))
(assert
 (>= l_0_10_327 0.0))
(assert
 (>= l_0_10_330 0.0))
(assert
 (>= l_0_10_334 0.0))
(assert
 (>= l_0_10_339 0.0))
(assert
 (>= l_0_10_345 0.0))
(assert
 (>= l_0_10_352 0.0))
(assert
 (>= l_0_10_360 0.0))
(assert
 (>= l_0_10_361 0.0))
(assert
 (>= l_0_10_363 0.0))
(assert
 (>= l_0_10_366 0.0))
(assert
 (>= l_0_10_370 0.0))
(assert
 (>= l_0_10_375 0.0))
(assert
 (>= l_0_10_381 0.0))
(assert
 (>= l_0_10_388 0.0))
(assert
 (>= l_0_10_396 0.0))
(assert
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x49161 (* ?x49160 l_0_11_282)))
 (let ((?x49157 (* 2.0 l_0_11_254)))
 (let ((?x49158 (* ?x49157 l_0_11_281)))
 (let ((?x49149 (* l_0_11_147 l_0_11_147)))
 (let ((?x49147 (* l_0_11_146 l_0_11_146)))
 (let ((?x49146 (+ (* (/ 1.0 2.0) (* l_0_11_110 l_0_11_110)) (* (/ 1.0 2.0) (* l_0_11_111 l_0_11_111)))))
 (let ((?x49156 (- (- (- (- ?x49146 ?x49147) ?x49149) (* (* 2.0 l_0_11_218) l_0_11_238)) (* (* 2.0 l_0_11_219) l_0_11_239))))
 (let ((?x49168 (- (- (- (- ?x49156 ?x49158) ?x49161) (* (* 2.0 l_0_11_346) l_0_11_353)) (* (* 2.0 l_0_11_347) l_0_11_354))))
 (let ((?x49174 (- (- ?x49168 (* (* 2.0 l_0_11_348) l_0_11_355)) (* (* 2.0 l_0_11_349) l_0_11_356))))
 (let ((?x49180 (- (- ?x49174 (* (* 2.0 l_0_11_350) l_0_11_357)) (* (* 2.0 l_0_11_351) l_0_11_358))))
 (let ((?x49186 (- (- ?x49180 (* (* 2.0 l_0_11_352) l_0_11_359)) (* (* 2.0 l_0_11_382) l_0_11_389))))
 (let ((?x49192 (- (- ?x49186 (* (* 2.0 l_0_11_383) l_0_11_390)) (* (* 2.0 l_0_11_384) l_0_11_391))))
 (let ((?x49198 (- (- ?x49192 (* (* 2.0 l_0_11_385) l_0_11_392)) (* (* 2.0 l_0_11_386) l_0_11_393))))
 (let ((?x49204 (- (- ?x49198 (* (* 2.0 l_0_11_387) l_0_11_394)) (* (* 2.0 l_0_11_388) l_0_11_395))))
 (let ((?x49210 (- (- ?x49204 (* (* 2.0 l_0_11_418) l_0_11_425)) (* (* 2.0 l_0_11_419) l_0_11_426))))
 (let ((?x49216 (- (- ?x49210 (* (* 2.0 l_0_11_420) l_0_11_427)) (* (* 2.0 l_0_11_421) l_0_11_428))))
 (let ((?x49222 (- (- ?x49216 (* (* 2.0 l_0_11_422) l_0_11_429)) (* (* 2.0 l_0_11_423) l_0_11_430))))
 (let ((?x49228 (- (- ?x49222 (* (* 2.0 l_0_11_424) l_0_11_431)) (* (* (/ 1.0 2.0) l_0_11_74) l_0_11_74))))
 (= (+ (- ?x49228 (* (* (/ 1.0 2.0) l_0_11_75) l_0_11_75)) (/ 1.0 4.0)) 0.0)))))))))))))))))))))
(assert
 (let ((?x49338 (* l_0_11_399 l_0_11_399)))
 (let ((?x49336 (* l_0_11_398 l_0_11_398)))
 (let ((?x49334 (* l_0_11_363 l_0_11_363)))
 (let ((?x49332 (* l_0_11_362 l_0_11_362)))
 (let ((?x49330 (* l_0_11_327 l_0_11_327)))
 (let ((?x49335 (- (- (- (- (- _a_0_) (* l_0_11_326 l_0_11_326)) ?x49330) ?x49332) ?x49334)))
 (= (- (- ?x49335 ?x49336) ?x49338) 0.0))))))))
(assert
 (let ((?x16307 (* l_0_11_75 l_0_11_75)))
 (let ((?x49317 (* l_0_11_74 l_0_11_74)))
 (let ((?x49357 (* l_0_11_291 l_0_11_291)))
 (let ((?x49355 (* l_0_11_290 l_0_11_290)))
 (let ((?x49144 (* l_0_11_111 l_0_11_111)))
 (let ((?x49358 (- (- (- (- (- _a_1_) (* l_0_11_110 l_0_11_110)) ?x49144) ?x49355) ?x49357)))
 (let ((?x49364 (- (- ?x49358 (* (* 2.0 l_0_11_325) l_0_11_326)) (* (* 2.0 l_0_11_361) l_0_11_362))))
 (= (+ (+ (- ?x49364 (* (* 2.0 l_0_11_397) l_0_11_398)) ?x49317) ?x16307) 0.0)))))))))
(assert
 (let ((?x49395 (* l_0_11_37 l_0_11_37)))
 (let ((?x49393 (* l_0_11_181 l_0_11_181)))
 (let ((?x49394 (+ (- (* (- l_0_11_1) l_0_11_1) (* l_0_11_145 l_0_11_145)) ?x49393)))
 (= (+ ?x49394 ?x49395) 0.0)))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49447 (* ?x49446 l_0_11_38)))
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x49444 (* ?x49443 l_0_11_319)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x49441 (* ?x49440 l_0_11_318)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x49438 (* ?x49437 l_0_11_317)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49432 (* ?x49431 l_0_11_182)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49429 (* ?x49428 l_0_11_146)))
 (let ((?x49412 (+ (* (* (- 2.0) l_0_11_1) l_0_11_2) (* (* 2.0 l_0_11_101) l_0_11_76))))
 (let ((?x49418 (+ (+ ?x49412 (* (* 2.0 l_0_11_102) l_0_11_77)) (* (* 2.0 l_0_11_103) l_0_11_78))))
 (let ((?x49424 (- (- ?x49418 (* (* 2.0 l_0_11_112) l_0_11_137)) (* (* 2.0 l_0_11_113) l_0_11_138))))
 (let ((?x49436 (- (+ (- (- ?x49424 (* (* 2.0 l_0_11_114) l_0_11_139)) ?x49429) ?x49432) (* (* 2.0 l_0_11_217) l_0_11_220))))
 (= (+ (- (- (- ?x49436 ?x49438) ?x49441) ?x49444) ?x49447) 0.0))))))))))))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49500 (* ?x49446 l_0_11_40)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49498 (* ?x49431 l_0_11_184)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49488 (* ?x49428 l_0_11_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_1) l_0_11_4) ?x49488) ?x49498) ?x49500) 0.0))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49515 (* ?x49446 l_0_11_43)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49513 (* ?x49431 l_0_11_187)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x16435 (* ?x49428 l_0_11_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x16435) ?x49513) ?x49515) 0.0))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49538 (* ?x49446 l_0_11_47)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49536 (* ?x49431 l_0_11_191)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49529 (* ?x49428 l_0_11_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_1) l_0_11_11) ?x49529) ?x49536) ?x49538) 0.0))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49561 (* ?x49446 l_0_11_52)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49559 (* ?x49431 l_0_11_196)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49552 (* ?x49428 l_0_11_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_1) l_0_11_16) ?x49552) ?x49559) ?x49561) 0.0))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49582 (* ?x49446 l_0_11_58)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49580 (* ?x49431 l_0_11_202)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49578 (* ?x49428 l_0_11_166)))
 (let ((?x49488 (* ?x49428 l_0_11_148)))
 (let ((?x49576 (+ (* (* (- 2.0) l_0_11_1) l_0_11_22) (* (* 1.0 l_0_11_109) l_0_11_112))))
 (let ((?x49586 (- (+ (+ (- (- ?x49576 ?x49488) ?x49578) ?x49580) ?x49582) (* (* 1.0 l_0_11_73) l_0_11_76))))
 (= ?x49586 0.0)))))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49617 (* ?x49446 l_0_11_65)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49615 (* ?x49431 l_0_11_209)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49613 (* ?x49428 l_0_11_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_1) l_0_11_29) ?x49613) ?x49615) ?x49617) 0.0))))))))
(assert
 (let ((?x49670 (* l_0_11_39 l_0_11_39)))
 (let ((?x49668 (* l_0_11_38 l_0_11_38)))
 (let ((?x49648 (* l_0_11_3 l_0_11_3)))
 (let ((?x49642 (* l_0_11_2 l_0_11_2)))
 (let ((?x49640 (* l_0_11_183 l_0_11_183)))
 (let ((?x49638 (* l_0_11_182 l_0_11_182)))
 (let ((?x49639 (+ (- (* (- l_0_11_146) l_0_11_146) (* l_0_11_147 l_0_11_147)) ?x49638)))
 (let ((?x49647 (- (- (- (+ ?x49639 ?x49640) ?x49642) (* (* 2.0 l_0_11_218) l_0_11_220)) (* (* 2.0 l_0_11_219) l_0_11_221))))
 (let ((?x49655 (- (- (- ?x49647 ?x49648) (* (* 2.0 l_0_11_328) l_0_11_353)) (* (* 2.0 l_0_11_329) l_0_11_354))))
 (let ((?x49661 (- (- ?x49655 (* (* 2.0 l_0_11_330) l_0_11_355)) (* (* 2.0 l_0_11_364) l_0_11_389))))
 (let ((?x49667 (- (- ?x49661 (* (* 2.0 l_0_11_365) l_0_11_390)) (* (* 2.0 l_0_11_366) l_0_11_391))))
 (let ((?x49677 (- (- (+ (+ ?x49667 ?x49668) ?x49670) (* (* 2.0 l_0_11_400) l_0_11_425)) (* (* 2.0 l_0_11_401) l_0_11_426))))
 (= (- ?x49677 (* (* 2.0 l_0_11_402) l_0_11_427)) 0.0))))))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x49748 (* ?x49747 l_0_11_41)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x49745 (* ?x49744 l_0_11_40)))
 (let ((?x49741 (* 2.0 l_0_11_3)))
 (let ((?x49742 (* ?x49741 l_0_11_5)))
 (let ((?x49739 (* l_0_11_222 l_0_11_222)))
 (let ((?x49737 (* l_0_11_221 l_0_11_221)))
 (let ((?x49735 (* l_0_11_220 l_0_11_220)))
 (let ((?x49732 (* 2.0 l_0_11_2)))
 (let ((?x49733 (* ?x49732 l_0_11_4)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x49730 (* ?x49729 l_0_11_185)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x49727 (* ?x49726 l_0_11_184)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49724 (* ?x49723 l_0_11_149)))
 (let ((?x49734 (- (+ (+ (- (* (* (- 2.0) l_0_11_146) l_0_11_148) ?x49724) ?x49727) ?x49730) ?x49733)))
 (= (+ (+ (- (- (- (- ?x49734 ?x49735) ?x49737) ?x49739) ?x49742) ?x49745) ?x49748) 0.0))))))))))))))))))))
(assert
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x49818 (* ?x49817 l_0_11_67)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x49815 (* ?x49814 l_0_11_66)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x49812 (* ?x49811 l_0_11_65)))
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x49809 (* ?x49747 l_0_11_44)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x49807 (* ?x49744 l_0_11_43)))
 (let ((?x49804 (* 2.0 l_0_11_31)))
 (let ((?x49805 (* ?x49804 l_0_11_6)))
 (let ((?x49801 (* 2.0 l_0_11_30)))
 (let ((?x49802 (* ?x49801 l_0_11_5)))
 (let ((?x49741 (* 2.0 l_0_11_3)))
 (let ((?x49799 (* ?x49741 l_0_11_8)))
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x49444 (* ?x49443 l_0_11_319)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x49441 (* ?x49440 l_0_11_318)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x49438 (* ?x49437 l_0_11_317)))
 (let ((?x49793 (* 2.0 l_0_11_29)))
 (let ((?x49794 (* ?x49793 l_0_11_4)))
 (let ((?x49732 (* 2.0 l_0_11_2)))
 (let ((?x49782 (* ?x49732 l_0_11_7)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x49780 (* ?x49729 l_0_11_188)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x49778 (* ?x49726 l_0_11_187)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49776 (* ?x49723 l_0_11_152)))
 (let ((?x49783 (- (+ (+ (- (* (* (- 2.0) l_0_11_146) l_0_11_151) ?x49776) ?x49778) ?x49780) ?x49782)))
 (let ((?x49789 (- (- ?x49783 (* (* 2.0 l_0_11_220) l_0_11_223)) (* (* 2.0 l_0_11_221) l_0_11_224))))
 (let ((?x49797 (- (- (+ (- ?x49789 (* (* 2.0 l_0_11_222) l_0_11_225)) ?x49794) ?x49438) ?x49441)))
 (let ((?x49813 (- (+ (+ (+ (+ (- (- ?x49797 ?x49444) ?x49799) ?x49802) ?x49805) ?x49807) ?x49809) ?x49812)))
 (= (- (- ?x49813 ?x49815) ?x49818) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x49909 (* ?x49747 l_0_11_48)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x49907 (* ?x49744 l_0_11_47)))
 (let ((?x49904 (* 2.0 l_0_11_258)))
 (let ((?x49905 (* ?x49904 l_0_11_283)))
 (let ((?x49901 (* 2.0 l_0_11_257)))
 (let ((?x49902 (* ?x49901 l_0_11_282)))
 (let ((?x49898 (* 2.0 l_0_11_256)))
 (let ((?x49899 (* ?x49898 l_0_11_281)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x49890 (* ?x49729 l_0_11_192)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x49888 (* ?x49726 l_0_11_191)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49886 (* ?x49723 l_0_11_156)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x49884 (* ?x49883 l_0_11_155)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x49881 (* ?x49880 l_0_11_3)))
 (let ((?x49889 (+ (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_2) ?x49881) ?x49884) ?x49886) ?x49888)))
 (let ((?x49895 (- (- (+ ?x49889 ?x49890) (* (* 2.0 l_0_11_220) l_0_11_227)) (* (* 2.0 l_0_11_221) l_0_11_228))))
 (let ((?x49906 (+ (+ (+ (- ?x49895 (* (* 2.0 l_0_11_222) l_0_11_229)) ?x49899) ?x49902) ?x49905)))
 (= (+ (+ ?x49906 ?x49907) ?x49909) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x49992 (* ?x49747 l_0_11_53)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x49990 (* ?x49744 l_0_11_52)))
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x49444 (* ?x49443 l_0_11_319)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x49441 (* ?x49440 l_0_11_318)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x49438 (* ?x49437 l_0_11_317)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x49979 (* ?x49978 l_0_11_211)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x49976 (* ?x49975 l_0_11_210)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x49973 (* ?x49972 l_0_11_209)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x49970 (* ?x49729 l_0_11_197)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x49968 (* ?x49726 l_0_11_196)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x49966 (* ?x49965 l_0_11_3)))
 (let ((?x49962 (* 2.0 l_0_11_16)))
 (let ((?x49963 (* ?x49962 l_0_11_2)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x49960 (* ?x49959 l_0_11_175)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x49957 (* ?x49956 l_0_11_174)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x49944 (* ?x49942 l_0_11_173)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49938 (* ?x49723 l_0_11_161)))
 (let ((?x49961 (+ (+ (+ (- (* (* (- 2.0) l_0_11_146) l_0_11_160) ?x49938) ?x49944) ?x49957) ?x49960)))
 (let ((?x49980 (- (- (- (+ (+ (- (- ?x49961 ?x49963) ?x49966) ?x49968) ?x49970) ?x49973) ?x49976) ?x49979)))
 (let ((?x49984 (- (- ?x49980 (* (* 2.0 l_0_11_220) l_0_11_232)) (* (* 2.0 l_0_11_221) l_0_11_233))))
 (let ((?x49989 (+ (+ (+ (- ?x49984 (* (* 2.0 l_0_11_222) l_0_11_234)) ?x49438) ?x49441) ?x49444)))
 (= (+ (+ ?x49989 ?x49990) ?x49992) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x50084 (* ?x49747 l_0_11_59)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x50082 (* ?x49744 l_0_11_58)))
 (let ((?x49904 (* 2.0 l_0_11_258)))
 (let ((?x49905 (* ?x49904 l_0_11_283)))
 (let ((?x49901 (* 2.0 l_0_11_257)))
 (let ((?x49902 (* ?x49901 l_0_11_282)))
 (let ((?x49898 (* 2.0 l_0_11_256)))
 (let ((?x49899 (* ?x49898 l_0_11_281)))
 (let ((?x50076 (* 2.0 l_0_11_23)))
 (let ((?x50077 (* ?x50076 l_0_11_3)))
 (let ((?x49732 (* 2.0 l_0_11_2)))
 (let ((?x50068 (* ?x49732 l_0_11_22)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x50066 (* ?x49729 l_0_11_203)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x50064 (* ?x49726 l_0_11_202)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x50062 (* ?x49723 l_0_11_167)))
 (let ((?x49724 (* ?x49723 l_0_11_149)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x50059 (* ?x49883 l_0_11_166)))
 (let ((?x50057 (* ?x49883 l_0_11_148)))
 (let ((?x50056 (+ (* (* 1.0 l_0_11_110) l_0_11_112) (* (* 1.0 l_0_11_111) l_0_11_113))))
 (let ((?x50069 (- (+ (+ (- (- (- (- ?x50056 ?x50057) ?x50059) ?x49724) ?x50062) ?x50064) ?x50066) ?x50068)))
 (let ((?x50073 (- (- ?x50069 (* (* 2.0 l_0_11_220) l_0_11_238)) (* (* 2.0 l_0_11_221) l_0_11_239))))
 (let ((?x50080 (- (- (- (- ?x50073 (* (* 2.0 l_0_11_222) l_0_11_240)) ?x50077) ?x49899) ?x49902)))
 (let ((?x50088 (- (+ (+ (- ?x50080 ?x49905) ?x50082) ?x50084) (* (* 1.0 l_0_11_74) l_0_11_76))))
 (= (- ?x50088 (* (* 1.0 l_0_11_75) l_0_11_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x50165 (* ?x49747 l_0_11_66)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x50163 (* ?x49744 l_0_11_65)))
 (let ((?x49741 (* 2.0 l_0_11_3)))
 (let ((?x50161 (* ?x49741 l_0_11_30)))
 (let ((?x49732 (* 2.0 l_0_11_2)))
 (let ((?x50153 (* ?x49732 l_0_11_29)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x50151 (* ?x49729 l_0_11_210)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x50149 (* ?x49726 l_0_11_209)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x50147 (* ?x49723 l_0_11_174)))
 (let ((?x50154 (- (+ (+ (- (* (* (- 2.0) l_0_11_146) l_0_11_173) ?x50147) ?x50149) ?x50151) ?x50153)))
 (let ((?x50158 (- (- ?x50154 (* (* 2.0 l_0_11_220) l_0_11_245)) (* (* 2.0 l_0_11_221) l_0_11_246))))
 (let ((?x50166 (+ (+ (- (- ?x50158 (* (* 2.0 l_0_11_222) l_0_11_247)) ?x50161) ?x50163) ?x50165)))
 (= ?x50166 0.0)))))))))))))))))))
(assert
 (let ((?x50233 (* l_0_11_6 l_0_11_6)))
 (let ((?x50231 (* l_0_11_5 l_0_11_5)))
 (let ((?x50229 (* l_0_11_42 l_0_11_42)))
 (let ((?x50227 (* l_0_11_41 l_0_11_41)))
 (let ((?x50225 (* l_0_11_40 l_0_11_40)))
 (let ((?x50223 (* l_0_11_4 l_0_11_4)))
 (let ((?x50221 (* l_0_11_186 l_0_11_186)))
 (let ((?x50219 (* l_0_11_185 l_0_11_185)))
 (let ((?x50217 (* l_0_11_184 l_0_11_184)))
 (let ((?x50215 (* l_0_11_150 l_0_11_150)))
 (let ((?x50216 (- (- (* (- l_0_11_148) l_0_11_148) (* l_0_11_149 l_0_11_149)) ?x50215)))
 (let ((?x50230 (+ (+ (+ (- (+ (+ (+ ?x50216 ?x50217) ?x50219) ?x50221) ?x50223) ?x50225) ?x50227) ?x50229)))
 (= (- (- ?x50230 ?x50231) ?x50233) 0.0))))))))))))))
(assert
 (let ((?x50285 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x50282 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x50279 (* ?x49817 l_0_11_45)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x50277 (* ?x49814 l_0_11_44)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x50275 (* ?x49811 l_0_11_43)))
 (let ((?x50273 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x50270 (* ?x49978 l_0_11_189)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x50268 (* ?x49975 l_0_11_188)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x50266 (* ?x49972 l_0_11_187)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50264 (* ?x49959 l_0_11_153)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50262 (* ?x49956 l_0_11_152)))
 (let ((?x50269 (+ (+ (- (- (* (* (- 2.0) l_0_11_148) l_0_11_151) ?x50262) ?x50264) ?x50266) ?x50268)))
 (let ((?x50286 (- (- (+ (+ (+ (- (+ ?x50269 ?x50270) ?x50273) ?x50275) ?x50277) ?x50279) ?x50282) ?x50285)))
 (= ?x50286 0.0)))))))))))))))))))))))
(assert
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x50351 (* ?x49817 l_0_11_49)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x50349 (* ?x49814 l_0_11_48)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x50347 (* ?x49811 l_0_11_47)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x50345 (* ?x49978 l_0_11_193)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x50343 (* ?x49975 l_0_11_192)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x50341 (* ?x49972 l_0_11_191)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50339 (* ?x49959 l_0_11_157)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50337 (* ?x49956 l_0_11_156)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x50335 (* ?x49942 l_0_11_155)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x50333 (* ?x50332 l_0_11_6)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x50330 (* ?x49880 l_0_11_5)))
 (let ((?x50338 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_4) ?x50330) ?x50333) ?x50335) ?x50337)))
 (let ((?x50352 (+ (+ (+ (+ (+ (+ (- ?x50338 ?x50339) ?x50341) ?x50343) ?x50345) ?x50347) ?x50349) ?x50351)))
 (= ?x50352 0.0))))))))))))))))))))))))))
(assert
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x50405 (* ?x49817 l_0_11_54)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x50403 (* ?x49814 l_0_11_53)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x50401 (* ?x49811 l_0_11_52)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x50399 (* ?x49978 l_0_11_198)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x50397 (* ?x49975 l_0_11_197)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x50395 (* ?x49972 l_0_11_196)))
 (let ((?x50392 (* 2.0 l_0_11_18)))
 (let ((?x50393 (* ?x50392 l_0_11_6)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x50390 (* ?x49965 l_0_11_5)))
 (let ((?x49962 (* 2.0 l_0_11_16)))
 (let ((?x50379 (* ?x49962 l_0_11_4)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50375 (* ?x49959 l_0_11_162)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50371 (* ?x49956 l_0_11_161)))
 (let ((?x50391 (- (- (- (- (* (* (- 2.0) l_0_11_148) l_0_11_160) ?x50371) ?x50375) ?x50379) ?x50390)))
 (let ((?x50406 (+ (+ (+ (+ (+ (+ (- ?x50391 ?x50393) ?x50395) ?x50397) ?x50399) ?x50401) ?x50403) ?x50405)))
 (= ?x50406 0.0))))))))))))))))))))))))))
(assert
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x50474 (* ?x49817 l_0_11_60)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x50472 (* ?x49814 l_0_11_59)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x50470 (* ?x49811 l_0_11_58)))
 (let ((?x50467 (* 2.0 l_0_11_24)))
 (let ((?x50468 (* ?x50467 l_0_11_6)))
 (let ((?x50076 (* 2.0 l_0_11_23)))
 (let ((?x50465 (* ?x50076 l_0_11_5)))
 (let ((?x50462 (* 2.0 l_0_11_22)))
 (let ((?x50463 (* ?x50462 l_0_11_4)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x50460 (* ?x49978 l_0_11_204)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x50458 (* ?x49975 l_0_11_203)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x50456 (* ?x49972 l_0_11_202)))
 (let ((?x50215 (* l_0_11_150 l_0_11_150)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50453 (* ?x49959 l_0_11_168)))
 (let ((?x50206 (* l_0_11_149 l_0_11_149)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50450 (* ?x49956 l_0_11_167)))
 (let ((?x50237 (* l_0_11_148 l_0_11_148)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x50447 (* ?x49942 l_0_11_166)))
 (let ((?x50433 (+ (* (/ 1.0 2.0) (* l_0_11_112 l_0_11_112)) (* (/ 1.0 2.0) (* l_0_11_113 l_0_11_113)))))
 (let ((?x50451 (- (- (- (+ ?x50433 (* (/ 1.0 2.0) (* l_0_11_114 l_0_11_114))) ?x50447) ?x50237) ?x50450)))
 (let ((?x50464 (- (+ (+ (+ (- (- (- ?x50451 ?x50206) ?x50453) ?x50215) ?x50456) ?x50458) ?x50460) ?x50463)))
 (let ((?x50478 (- (+ (+ (+ (- (- ?x50464 ?x50465) ?x50468) ?x50470) ?x50472) ?x50474) (* (* (/ 1.0 2.0) l_0_11_76) l_0_11_76))))
 (let ((?x50484 (- (- ?x50478 (* (* (/ 1.0 2.0) l_0_11_77) l_0_11_77)) (* (* (/ 1.0 2.0) l_0_11_78) l_0_11_78))))
 (= ?x50484 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x49818 (* ?x49817 l_0_11_67)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x49815 (* ?x49814 l_0_11_66)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x49812 (* ?x49811 l_0_11_65)))
 (let ((?x49804 (* 2.0 l_0_11_31)))
 (let ((?x49805 (* ?x49804 l_0_11_6)))
 (let ((?x49801 (* 2.0 l_0_11_30)))
 (let ((?x49802 (* ?x49801 l_0_11_5)))
 (let ((?x49793 (* 2.0 l_0_11_29)))
 (let ((?x49794 (* ?x49793 l_0_11_4)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x49979 (* ?x49978 l_0_11_211)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x49976 (* ?x49975 l_0_11_210)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x49973 (* ?x49972 l_0_11_209)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x49960 (* ?x49959 l_0_11_175)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x49957 (* ?x49956 l_0_11_174)))
 (let ((?x50520 (+ (+ (- (- (* (* (- 2.0) l_0_11_148) l_0_11_173) ?x49957) ?x49960) ?x49973) ?x49976)))
 (let ((?x50527 (+ (+ (+ (- (- (- (+ ?x50520 ?x49979) ?x49794) ?x49802) ?x49805) ?x49812) ?x49815) ?x49818)))
 (= ?x50527 0.0))))))))))))))))))))))))))
(assert
 (let ((?x50561 (* l_0_11_9 l_0_11_9)))
 (let ((?x50559 (* l_0_11_8 l_0_11_8)))
 (let ((?x50557 (* l_0_11_7 l_0_11_7)))
 (let ((?x50555 (* l_0_11_46 l_0_11_46)))
 (let ((?x50553 (* l_0_11_45 l_0_11_45)))
 (let ((?x50551 (* l_0_11_44 l_0_11_44)))
 (let ((?x50549 (* l_0_11_43 l_0_11_43)))
 (let ((?x50547 (* l_0_11_190 l_0_11_190)))
 (let ((?x50545 (* l_0_11_189 l_0_11_189)))
 (let ((?x50543 (* l_0_11_188 l_0_11_188)))
 (let ((?x50541 (* l_0_11_187 l_0_11_187)))
 (let ((?x50539 (* l_0_11_154 l_0_11_154)))
 (let ((?x50537 (* l_0_11_153 l_0_11_153)))
 (let ((?x50535 (* l_0_11_152 l_0_11_152)))
 (let ((?x50536 (- (- (* (- l_0_11_10) l_0_11_10) (* l_0_11_151 l_0_11_151)) ?x50535)))
 (let ((?x50550 (+ (+ (+ (+ (+ (- (- ?x50536 ?x50537) ?x50539) ?x50541) ?x50543) ?x50545) ?x50547) ?x50549)))
 (= (- (- (- (+ (+ (+ ?x50550 ?x50551) ?x50553) ?x50555) ?x50557) ?x50559) ?x50561) 0.0))))))))))))))))))
(assert
 (let ((?x50627 (* 2.0 l_0_11_46)))
 (let ((?x50628 (* ?x50627 l_0_11_50)))
 (let ((?x50624 (* 2.0 l_0_11_45)))
 (let ((?x50625 (* ?x50624 l_0_11_49)))
 (let ((?x50621 (* 2.0 l_0_11_44)))
 (let ((?x50622 (* ?x50621 l_0_11_48)))
 (let ((?x50618 (* 2.0 l_0_11_43)))
 (let ((?x50619 (* ?x50618 l_0_11_47)))
 (let ((?x50615 (* 2.0 l_0_11_190)))
 (let ((?x50616 (* ?x50615 l_0_11_194)))
 (let ((?x50612 (* 2.0 l_0_11_189)))
 (let ((?x50613 (* ?x50612 l_0_11_193)))
 (let ((?x50609 (* 2.0 l_0_11_188)))
 (let ((?x50610 (* ?x50609 l_0_11_192)))
 (let ((?x50606 (* 2.0 l_0_11_187)))
 (let ((?x50607 (* ?x50606 l_0_11_191)))
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50604 (* ?x50603 l_0_11_158)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50601 (* ?x50600 l_0_11_157)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50598 (* ?x50597 l_0_11_156)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50595 (* ?x50594 l_0_11_155)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x50592 (* ?x50332 l_0_11_9)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x50590 (* ?x49880 l_0_11_8)))
 (let ((?x50587 (* 2.0 l_0_11_11)))
 (let ((?x50588 (* ?x50587 l_0_11_7)))
 (let ((?x50596 (- (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_14) ?x50588) ?x50590) ?x50592) ?x50595)))
 (let ((?x50617 (+ (+ (+ (+ (- (- (- ?x50596 ?x50598) ?x50601) ?x50604) ?x50607) ?x50610) ?x50613) ?x50616)))
 (= (+ (+ (+ (+ ?x50617 ?x50619) ?x50622) ?x50625) ?x50628) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50627 (* 2.0 l_0_11_46)))
 (let ((?x50707 (* ?x50627 l_0_11_55)))
 (let ((?x50624 (* 2.0 l_0_11_45)))
 (let ((?x50705 (* ?x50624 l_0_11_54)))
 (let ((?x50621 (* 2.0 l_0_11_44)))
 (let ((?x50703 (* ?x50621 l_0_11_53)))
 (let ((?x50618 (* 2.0 l_0_11_43)))
 (let ((?x50701 (* ?x50618 l_0_11_52)))
 (let ((?x50615 (* 2.0 l_0_11_190)))
 (let ((?x50699 (* ?x50615 l_0_11_199)))
 (let ((?x50612 (* 2.0 l_0_11_189)))
 (let ((?x50697 (* ?x50612 l_0_11_198)))
 (let ((?x50609 (* 2.0 l_0_11_188)))
 (let ((?x50695 (* ?x50609 l_0_11_197)))
 (let ((?x50606 (* 2.0 l_0_11_187)))
 (let ((?x50693 (* ?x50606 l_0_11_196)))
 (let ((?x50392 (* 2.0 l_0_11_18)))
 (let ((?x50691 (* ?x50392 l_0_11_9)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x50689 (* ?x49965 l_0_11_8)))
 (let ((?x49962 (* 2.0 l_0_11_16)))
 (let ((?x50687 (* ?x49962 l_0_11_7)))
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50674 (* ?x50603 l_0_11_163)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50670 (* ?x50600 l_0_11_162)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50666 (* ?x50597 l_0_11_161)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50662 (* ?x50594 l_0_11_160)))
 (let ((?x50675 (- (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_19) ?x50662) ?x50666) ?x50670) ?x50674)))
 (let ((?x50700 (+ (+ (+ (+ (- (- (- ?x50675 ?x50687) ?x50689) ?x50691) ?x50693) ?x50695) ?x50697) ?x50699)))
 (= (+ (+ (+ (+ ?x50700 ?x50701) ?x50703) ?x50705) ?x50707) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50627 (* 2.0 l_0_11_46)))
 (let ((?x50769 (* ?x50627 l_0_11_61)))
 (let ((?x50624 (* 2.0 l_0_11_45)))
 (let ((?x50767 (* ?x50624 l_0_11_60)))
 (let ((?x50621 (* 2.0 l_0_11_44)))
 (let ((?x50765 (* ?x50621 l_0_11_59)))
 (let ((?x50618 (* 2.0 l_0_11_43)))
 (let ((?x50763 (* ?x50618 l_0_11_58)))
 (let ((?x50467 (* 2.0 l_0_11_24)))
 (let ((?x50761 (* ?x50467 l_0_11_9)))
 (let ((?x50076 (* 2.0 l_0_11_23)))
 (let ((?x50759 (* ?x50076 l_0_11_8)))
 (let ((?x50462 (* 2.0 l_0_11_22)))
 (let ((?x50757 (* ?x50462 l_0_11_7)))
 (let ((?x50615 (* 2.0 l_0_11_190)))
 (let ((?x50755 (* ?x50615 l_0_11_205)))
 (let ((?x50612 (* 2.0 l_0_11_189)))
 (let ((?x50753 (* ?x50612 l_0_11_204)))
 (let ((?x50609 (* 2.0 l_0_11_188)))
 (let ((?x50751 (* ?x50609 l_0_11_203)))
 (let ((?x50606 (* 2.0 l_0_11_187)))
 (let ((?x50749 (* ?x50606 l_0_11_202)))
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50747 (* ?x50603 l_0_11_169)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50745 (* ?x50600 l_0_11_168)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50743 (* ?x50597 l_0_11_167)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50741 (* ?x50594 l_0_11_166)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50264 (* ?x49959 l_0_11_153)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50262 (* ?x49956 l_0_11_152)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x50737 (* ?x49942 l_0_11_151)))
 (let ((?x17134 (+ (* (* (- 2.0) l_0_11_10) l_0_11_25) (* (* 1.0 l_0_11_112) l_0_11_115))))
 (let ((?x50736 (+ (+ ?x17134 (* (* 1.0 l_0_11_113) l_0_11_116)) (* (* 1.0 l_0_11_114) l_0_11_117))))
 (let ((?x50748 (- (- (- (- (- (- (- ?x50736 ?x50737) ?x50262) ?x50264) ?x50741) ?x50743) ?x50745) ?x50747)))
 (let ((?x50762 (- (- (- (+ (+ (+ (+ ?x50748 ?x50749) ?x50751) ?x50753) ?x50755) ?x50757) ?x50759) ?x50761)))
 (let ((?x50773 (- (+ (+ (+ (+ ?x50762 ?x50763) ?x50765) ?x50767) ?x50769) (* (* 1.0 l_0_11_76) l_0_11_79))))
 (let ((?x50779 (- (- ?x50773 (* (* 1.0 l_0_11_77) l_0_11_80)) (* (* 1.0 l_0_11_78) l_0_11_81))))
 (= ?x50779 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50627 (* 2.0 l_0_11_46)))
 (let ((?x50879 (* ?x50627 l_0_11_68)))
 (let ((?x50624 (* 2.0 l_0_11_45)))
 (let ((?x50877 (* ?x50624 l_0_11_67)))
 (let ((?x50621 (* 2.0 l_0_11_44)))
 (let ((?x50875 (* ?x50621 l_0_11_66)))
 (let ((?x50618 (* 2.0 l_0_11_43)))
 (let ((?x50873 (* ?x50618 l_0_11_65)))
 (let ((?x49804 (* 2.0 l_0_11_31)))
 (let ((?x50871 (* ?x49804 l_0_11_9)))
 (let ((?x49801 (* 2.0 l_0_11_30)))
 (let ((?x50869 (* ?x49801 l_0_11_8)))
 (let ((?x49793 (* 2.0 l_0_11_29)))
 (let ((?x50867 (* ?x49793 l_0_11_7)))
 (let ((?x50615 (* 2.0 l_0_11_190)))
 (let ((?x50865 (* ?x50615 l_0_11_212)))
 (let ((?x50612 (* 2.0 l_0_11_189)))
 (let ((?x50863 (* ?x50612 l_0_11_211)))
 (let ((?x50609 (* 2.0 l_0_11_188)))
 (let ((?x50861 (* ?x50609 l_0_11_210)))
 (let ((?x50606 (* 2.0 l_0_11_187)))
 (let ((?x50859 (* ?x50606 l_0_11_209)))
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50857 (* ?x50603 l_0_11_176)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50855 (* ?x50600 l_0_11_175)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50853 (* ?x50597 l_0_11_174)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50851 (* ?x50594 l_0_11_173)))
 (let ((?x50858 (- (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_32) ?x50851) ?x50853) ?x50855) ?x50857)))
 (let ((?x50872 (- (- (- (+ (+ (+ (+ ?x50858 ?x50859) ?x50861) ?x50863) ?x50865) ?x50867) ?x50869) ?x50871)))
 (= (+ (+ (+ (+ ?x50872 ?x50873) ?x50875) ?x50877) ?x50879) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50960 (* l_0_11_51 l_0_11_51)))
 (let ((?x50958 (* l_0_11_50 l_0_11_50)))
 (let ((?x50956 (* l_0_11_49 l_0_11_49)))
 (let ((?x50954 (* l_0_11_48 l_0_11_48)))
 (let ((?x50952 (* l_0_11_47 l_0_11_47)))
 (let ((?x50950 (* l_0_11_195 l_0_11_195)))
 (let ((?x50948 (* l_0_11_194 l_0_11_194)))
 (let ((?x50946 (* l_0_11_193 l_0_11_193)))
 (let ((?x50944 (* l_0_11_192 l_0_11_192)))
 (let ((?x50942 (* l_0_11_191 l_0_11_191)))
 (let ((?x50940 (* l_0_11_159 l_0_11_159)))
 (let ((?x50938 (* l_0_11_158 l_0_11_158)))
 (let ((?x50936 (* l_0_11_157 l_0_11_157)))
 (let ((?x50934 (* l_0_11_156 l_0_11_156)))
 (let ((?x50932 (* l_0_11_155 l_0_11_155)))
 (let ((?x50930 (* l_0_11_15 l_0_11_15)))
 (let ((?x50928 (* l_0_11_14 l_0_11_14)))
 (let ((?x50915 (* l_0_11_13 l_0_11_13)))
 (let ((?x50927 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x50915)))
 (let ((?x50941 (- (- (- (- (- (- (- ?x50927 ?x50928) ?x50930) ?x50932) ?x50934) ?x50936) ?x50938) ?x50940)))
 (let ((?x50955 (+ (+ (+ (+ (+ (+ (+ ?x50941 ?x50942) ?x50944) ?x50946) ?x50948) ?x50950) ?x50952) ?x50954)))
 (= (+ (+ (+ ?x50955 ?x50956) ?x50958) ?x50960) 0.0)))))))))))))))))))))))
(assert
 (let ((?x51040 (* 2.0 l_0_11_51)))
 (let ((?x51041 (* ?x51040 l_0_11_56)))
 (let ((?x51037 (* 2.0 l_0_11_50)))
 (let ((?x51038 (* ?x51037 l_0_11_55)))
 (let ((?x51034 (* 2.0 l_0_11_49)))
 (let ((?x51035 (* ?x51034 l_0_11_54)))
 (let ((?x51031 (* 2.0 l_0_11_48)))
 (let ((?x51032 (* ?x51031 l_0_11_53)))
 (let ((?x51028 (* 2.0 l_0_11_47)))
 (let ((?x51029 (* ?x51028 l_0_11_52)))
 (let ((?x51025 (* 2.0 l_0_11_195)))
 (let ((?x51026 (* ?x51025 l_0_11_200)))
 (let ((?x51022 (* 2.0 l_0_11_194)))
 (let ((?x51023 (* ?x51022 l_0_11_199)))
 (let ((?x51019 (* 2.0 l_0_11_193)))
 (let ((?x51020 (* ?x51019 l_0_11_198)))
 (let ((?x51016 (* 2.0 l_0_11_192)))
 (let ((?x51017 (* ?x51016 l_0_11_197)))
 (let ((?x51013 (* 2.0 l_0_11_191)))
 (let ((?x51014 (* ?x51013 l_0_11_196)))
 (let ((?x51010 (* 2.0 l_0_11_159)))
 (let ((?x51011 (* ?x51010 l_0_11_164)))
 (let ((?x51007 (* 2.0 l_0_11_158)))
 (let ((?x51008 (* ?x51007 l_0_11_163)))
 (let ((?x51004 (* 2.0 l_0_11_157)))
 (let ((?x51005 (* ?x51004 l_0_11_162)))
 (let ((?x51001 (* 2.0 l_0_11_156)))
 (let ((?x51002 (* ?x51001 l_0_11_161)))
 (let ((?x50998 (* 2.0 l_0_11_155)))
 (let ((?x50999 (* ?x50998 l_0_11_160)))
 (let ((?x50995 (* 2.0 l_0_11_15)))
 (let ((?x50996 (* ?x50995 l_0_11_20)))
 (let ((?x50992 (* 2.0 l_0_11_14)))
 (let ((?x50993 (* ?x50992 l_0_11_19)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x50990 (* ?x50332 l_0_11_18)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x50988 (* ?x49880 l_0_11_17)))
 (let ((?x50997 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_16) ?x50988) ?x50990) ?x50993) ?x50996)))
 (let ((?x51018 (+ (+ (- (- (- (- (- ?x50997 ?x50999) ?x51002) ?x51005) ?x51008) ?x51011) ?x51014) ?x51017)))
 (let ((?x51039 (+ (+ (+ (+ (+ (+ (+ ?x51018 ?x51020) ?x51023) ?x51026) ?x51029) ?x51032) ?x51035) ?x51038)))
 (= (+ ?x51039 ?x51041) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51040 (* 2.0 l_0_11_51)))
 (let ((?x51146 (* ?x51040 l_0_11_62)))
 (let ((?x51037 (* 2.0 l_0_11_50)))
 (let ((?x51144 (* ?x51037 l_0_11_61)))
 (let ((?x51034 (* 2.0 l_0_11_49)))
 (let ((?x51142 (* ?x51034 l_0_11_60)))
 (let ((?x51031 (* 2.0 l_0_11_48)))
 (let ((?x51140 (* ?x51031 l_0_11_59)))
 (let ((?x51028 (* 2.0 l_0_11_47)))
 (let ((?x51138 (* ?x51028 l_0_11_58)))
 (let ((?x51025 (* 2.0 l_0_11_195)))
 (let ((?x51136 (* ?x51025 l_0_11_206)))
 (let ((?x51022 (* 2.0 l_0_11_194)))
 (let ((?x51134 (* ?x51022 l_0_11_205)))
 (let ((?x51019 (* 2.0 l_0_11_193)))
 (let ((?x51132 (* ?x51019 l_0_11_204)))
 (let ((?x51016 (* 2.0 l_0_11_192)))
 (let ((?x51130 (* ?x51016 l_0_11_203)))
 (let ((?x51013 (* 2.0 l_0_11_191)))
 (let ((?x51128 (* ?x51013 l_0_11_202)))
 (let ((?x51010 (* 2.0 l_0_11_159)))
 (let ((?x51126 (* ?x51010 l_0_11_170)))
 (let ((?x51007 (* 2.0 l_0_11_158)))
 (let ((?x51124 (* ?x51007 l_0_11_169)))
 (let ((?x51004 (* 2.0 l_0_11_157)))
 (let ((?x51122 (* ?x51004 l_0_11_168)))
 (let ((?x51001 (* 2.0 l_0_11_156)))
 (let ((?x51120 (* ?x51001 l_0_11_167)))
 (let ((?x50998 (* 2.0 l_0_11_155)))
 (let ((?x51118 (* ?x50998 l_0_11_166)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50339 (* ?x49959 l_0_11_157)))
 (let ((?x50995 (* 2.0 l_0_11_15)))
 (let ((?x51115 (* ?x50995 l_0_11_26)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50337 (* ?x49956 l_0_11_156)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x50335 (* ?x49942 l_0_11_155)))
 (let ((?x50992 (* 2.0 l_0_11_14)))
 (let ((?x51111 (* ?x50992 l_0_11_25)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x51096 (* ?x50332 l_0_11_24)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x51092 (* ?x49880 l_0_11_23)))
 (let ((?x51082 (+ (* (* (- 2.0) l_0_11_11) l_0_11_22) (* (* 1.0 l_0_11_112) l_0_11_119))))
 (let ((?x51090 (+ (+ ?x51082 (* (* 1.0 l_0_11_113) l_0_11_120)) (* (* 1.0 l_0_11_114) l_0_11_121))))
 (let ((?x51117 (- (- (- (- (- (- (- ?x51090 ?x51092) ?x51096) ?x51111) ?x50335) ?x50337) ?x51115) ?x50339)))
 (let ((?x51131 (+ (+ (- (- (- (- (- ?x51117 ?x51118) ?x51120) ?x51122) ?x51124) ?x51126) ?x51128) ?x51130)))
 (let ((?x51145 (+ (+ (+ (+ (+ (+ (+ ?x51131 ?x51132) ?x51134) ?x51136) ?x51138) ?x51140) ?x51142) ?x51144)))
 (let ((?x51151 (- (- (+ ?x51145 ?x51146) (* (* 1.0 l_0_11_76) l_0_11_83)) (* (* 1.0 l_0_11_77) l_0_11_84))))
 (= (- ?x51151 (* (* 1.0 l_0_11_78) l_0_11_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51040 (* 2.0 l_0_11_51)))
 (let ((?x51217 (* ?x51040 l_0_11_69)))
 (let ((?x51037 (* 2.0 l_0_11_50)))
 (let ((?x51215 (* ?x51037 l_0_11_68)))
 (let ((?x51034 (* 2.0 l_0_11_49)))
 (let ((?x51213 (* ?x51034 l_0_11_67)))
 (let ((?x51031 (* 2.0 l_0_11_48)))
 (let ((?x51211 (* ?x51031 l_0_11_66)))
 (let ((?x51028 (* 2.0 l_0_11_47)))
 (let ((?x51209 (* ?x51028 l_0_11_65)))
 (let ((?x51025 (* 2.0 l_0_11_195)))
 (let ((?x51207 (* ?x51025 l_0_11_213)))
 (let ((?x51022 (* 2.0 l_0_11_194)))
 (let ((?x51205 (* ?x51022 l_0_11_212)))
 (let ((?x51019 (* 2.0 l_0_11_193)))
 (let ((?x51203 (* ?x51019 l_0_11_211)))
 (let ((?x51016 (* 2.0 l_0_11_192)))
 (let ((?x51201 (* ?x51016 l_0_11_210)))
 (let ((?x51013 (* 2.0 l_0_11_191)))
 (let ((?x51199 (* ?x51013 l_0_11_209)))
 (let ((?x51010 (* 2.0 l_0_11_159)))
 (let ((?x51197 (* ?x51010 l_0_11_177)))
 (let ((?x51007 (* 2.0 l_0_11_158)))
 (let ((?x51195 (* ?x51007 l_0_11_176)))
 (let ((?x51004 (* 2.0 l_0_11_157)))
 (let ((?x51193 (* ?x51004 l_0_11_175)))
 (let ((?x51001 (* 2.0 l_0_11_156)))
 (let ((?x51191 (* ?x51001 l_0_11_174)))
 (let ((?x50998 (* 2.0 l_0_11_155)))
 (let ((?x51189 (* ?x50998 l_0_11_173)))
 (let ((?x50995 (* 2.0 l_0_11_15)))
 (let ((?x51187 (* ?x50995 l_0_11_33)))
 (let ((?x50992 (* 2.0 l_0_11_14)))
 (let ((?x51185 (* ?x50992 l_0_11_32)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x51183 (* ?x50332 l_0_11_31)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x51181 (* ?x49880 l_0_11_30)))
 (let ((?x51188 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_29) ?x51181) ?x51183) ?x51185) ?x51187)))
 (let ((?x51202 (+ (+ (- (- (- (- (- ?x51188 ?x51189) ?x51191) ?x51193) ?x51195) ?x51197) ?x51199) ?x51201)))
 (let ((?x51216 (+ (+ (+ (+ (+ (+ (+ ?x51202 ?x51203) ?x51205) ?x51207) ?x51209) ?x51211) ?x51213) ?x51215)))
 (= (+ ?x51216 ?x51217) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51315 (* l_0_11_57 l_0_11_57)))
 (let ((?x51313 (* l_0_11_56 l_0_11_56)))
 (let ((?x51311 (* l_0_11_55 l_0_11_55)))
 (let ((?x51309 (* l_0_11_54 l_0_11_54)))
 (let ((?x51307 (* l_0_11_53 l_0_11_53)))
 (let ((?x51305 (* l_0_11_52 l_0_11_52)))
 (let ((?x51303 (* l_0_11_21 l_0_11_21)))
 (let ((?x51301 (* l_0_11_201 l_0_11_201)))
 (let ((?x51299 (* l_0_11_200 l_0_11_200)))
 (let ((?x51297 (* l_0_11_20 l_0_11_20)))
 (let ((?x51295 (* l_0_11_199 l_0_11_199)))
 (let ((?x51293 (* l_0_11_198 l_0_11_198)))
 (let ((?x51291 (* l_0_11_197 l_0_11_197)))
 (let ((?x51289 (* l_0_11_196 l_0_11_196)))
 (let ((?x51287 (* l_0_11_19 l_0_11_19)))
 (let ((?x51285 (* l_0_11_18 l_0_11_18)))
 (let ((?x51283 (* l_0_11_17 l_0_11_17)))
 (let ((?x51281 (* l_0_11_165 l_0_11_165)))
 (let ((?x51266 (* l_0_11_164 l_0_11_164)))
 (let ((?x51263 (* l_0_11_163 l_0_11_163)))
 (let ((?x51259 (* l_0_11_162 l_0_11_162)))
 (let ((?x51255 (* l_0_11_161 l_0_11_161)))
 (let ((?x51257 (- (- (* (- l_0_11_16) l_0_11_16) (* l_0_11_160 l_0_11_160)) ?x51255)))
 (let ((?x51288 (- (- (- (- (- (- (- ?x51257 ?x51259) ?x51263) ?x51266) ?x51281) ?x51283) ?x51285) ?x51287)))
 (let ((?x51302 (+ (+ (- (+ (+ (+ (+ ?x51288 ?x51289) ?x51291) ?x51293) ?x51295) ?x51297) ?x51299) ?x51301)))
 (let ((?x51316 (+ (+ (+ (+ (+ (+ (- ?x51302 ?x51303) ?x51305) ?x51307) ?x51309) ?x51311) ?x51313) ?x51315)))
 (= ?x51316 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x51435 (* 2.0 l_0_11_57)))
 (let ((?x51436 (* ?x51435 l_0_11_63)))
 (let ((?x51432 (* 2.0 l_0_11_56)))
 (let ((?x51433 (* ?x51432 l_0_11_62)))
 (let ((?x51429 (* 2.0 l_0_11_55)))
 (let ((?x51430 (* ?x51429 l_0_11_61)))
 (let ((?x51426 (* 2.0 l_0_11_54)))
 (let ((?x51427 (* ?x51426 l_0_11_60)))
 (let ((?x51423 (* 2.0 l_0_11_53)))
 (let ((?x51424 (* ?x51423 l_0_11_59)))
 (let ((?x51420 (* 2.0 l_0_11_52)))
 (let ((?x51421 (* ?x51420 l_0_11_58)))
 (let ((?x51417 (* 2.0 l_0_11_21)))
 (let ((?x51418 (* ?x51417 l_0_11_27)))
 (let ((?x51414 (* 2.0 l_0_11_201)))
 (let ((?x51415 (* ?x51414 l_0_11_207)))
 (let ((?x51411 (* 2.0 l_0_11_200)))
 (let ((?x51412 (* ?x51411 l_0_11_206)))
 (let ((?x51408 (* 2.0 l_0_11_20)))
 (let ((?x51409 (* ?x51408 l_0_11_26)))
 (let ((?x51405 (* 2.0 l_0_11_199)))
 (let ((?x51406 (* ?x51405 l_0_11_205)))
 (let ((?x51402 (* 2.0 l_0_11_198)))
 (let ((?x51403 (* ?x51402 l_0_11_204)))
 (let ((?x51399 (* 2.0 l_0_11_197)))
 (let ((?x51400 (* ?x51399 l_0_11_203)))
 (let ((?x51396 (* 2.0 l_0_11_196)))
 (let ((?x51397 (* ?x51396 l_0_11_202)))
 (let ((?x51393 (* 2.0 l_0_11_19)))
 (let ((?x51394 (* ?x51393 l_0_11_25)))
 (let ((?x50392 (* 2.0 l_0_11_18)))
 (let ((?x51391 (* ?x50392 l_0_11_24)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x51389 (* ?x49965 l_0_11_23)))
 (let ((?x51386 (* 2.0 l_0_11_165)))
 (let ((?x51387 (* ?x51386 l_0_11_171)))
 (let ((?x51383 (* 2.0 l_0_11_164)))
 (let ((?x51384 (* ?x51383 l_0_11_170)))
 (let ((?x51380 (* 2.0 l_0_11_163)))
 (let ((?x51381 (* ?x51380 l_0_11_169)))
 (let ((?x51377 (* 2.0 l_0_11_162)))
 (let ((?x51378 (* ?x51377 l_0_11_168)))
 (let ((?x51374 (* 2.0 l_0_11_161)))
 (let ((?x51375 (* ?x51374 l_0_11_167)))
 (let ((?x51371 (* 2.0 l_0_11_160)))
 (let ((?x51372 (* ?x51371 l_0_11_166)))
 (let ((?x49962 (* 2.0 l_0_11_16)))
 (let ((?x51369 (* ?x49962 l_0_11_22)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50375 (* ?x49959 l_0_11_162)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50371 (* ?x49956 l_0_11_161)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x51365 (* ?x49942 l_0_11_160)))
 (let ((?x51362 (+ (* (* 1.0 l_0_11_112) l_0_11_124) (* (* 1.0 l_0_11_113) l_0_11_125))))
 (let ((?x51368 (- (- (- (+ ?x51362 (* (* 1.0 l_0_11_114) l_0_11_126)) ?x51365) ?x50371) ?x50375)))
 (let ((?x51388 (- (- (- (- (- (- (- ?x51368 ?x51369) ?x51372) ?x51375) ?x51378) ?x51381) ?x51384) ?x51387)))
 (let ((?x51407 (+ (+ (+ (+ (- (- (- ?x51388 ?x51389) ?x51391) ?x51394) ?x51397) ?x51400) ?x51403) ?x51406)))
 (let ((?x51428 (+ (+ (+ (- (+ (+ (- ?x51407 ?x51409) ?x51412) ?x51415) ?x51418) ?x51421) ?x51424) ?x51427)))
 (let ((?x51439 (- (+ (+ (+ ?x51428 ?x51430) ?x51433) ?x51436) (* (* 1.0 l_0_11_76) l_0_11_88))))
 (let ((?x51443 (- (- ?x51439 (* (* 1.0 l_0_11_77) l_0_11_89)) (* (* 1.0 l_0_11_78) l_0_11_90))))
 (= ?x51443 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51435 (* 2.0 l_0_11_57)))
 (let ((?x51588 (* ?x51435 l_0_11_70)))
 (let ((?x51432 (* 2.0 l_0_11_56)))
 (let ((?x51586 (* ?x51432 l_0_11_69)))
 (let ((?x51429 (* 2.0 l_0_11_55)))
 (let ((?x51584 (* ?x51429 l_0_11_68)))
 (let ((?x51426 (* 2.0 l_0_11_54)))
 (let ((?x51582 (* ?x51426 l_0_11_67)))
 (let ((?x51423 (* 2.0 l_0_11_53)))
 (let ((?x51580 (* ?x51423 l_0_11_66)))
 (let ((?x51420 (* 2.0 l_0_11_52)))
 (let ((?x51578 (* ?x51420 l_0_11_65)))
 (let ((?x51417 (* 2.0 l_0_11_21)))
 (let ((?x51576 (* ?x51417 l_0_11_34)))
 (let ((?x51414 (* 2.0 l_0_11_201)))
 (let ((?x51574 (* ?x51414 l_0_11_214)))
 (let ((?x51411 (* 2.0 l_0_11_200)))
 (let ((?x51572 (* ?x51411 l_0_11_213)))
 (let ((?x51408 (* 2.0 l_0_11_20)))
 (let ((?x51570 (* ?x51408 l_0_11_33)))
 (let ((?x51405 (* 2.0 l_0_11_199)))
 (let ((?x51568 (* ?x51405 l_0_11_212)))
 (let ((?x51402 (* 2.0 l_0_11_198)))
 (let ((?x51566 (* ?x51402 l_0_11_211)))
 (let ((?x51399 (* 2.0 l_0_11_197)))
 (let ((?x51564 (* ?x51399 l_0_11_210)))
 (let ((?x51396 (* 2.0 l_0_11_196)))
 (let ((?x51562 (* ?x51396 l_0_11_209)))
 (let ((?x51393 (* 2.0 l_0_11_19)))
 (let ((?x51560 (* ?x51393 l_0_11_32)))
 (let ((?x50392 (* 2.0 l_0_11_18)))
 (let ((?x51558 (* ?x50392 l_0_11_31)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x51556 (* ?x49965 l_0_11_30)))
 (let ((?x51386 (* 2.0 l_0_11_165)))
 (let ((?x51554 (* ?x51386 l_0_11_178)))
 (let ((?x51383 (* 2.0 l_0_11_164)))
 (let ((?x51552 (* ?x51383 l_0_11_177)))
 (let ((?x51380 (* 2.0 l_0_11_163)))
 (let ((?x51550 (* ?x51380 l_0_11_176)))
 (let ((?x51377 (* 2.0 l_0_11_162)))
 (let ((?x51548 (* ?x51377 l_0_11_175)))
 (let ((?x51374 (* 2.0 l_0_11_161)))
 (let ((?x51546 (* ?x51374 l_0_11_174)))
 (let ((?x51371 (* 2.0 l_0_11_160)))
 (let ((?x51544 (* ?x51371 l_0_11_173)))
 (let ((?x51551 (- (- (- (- (* (* (- 2.0) l_0_11_16) l_0_11_29) ?x51544) ?x51546) ?x51548) ?x51550)))
 (let ((?x51565 (+ (+ (- (- (- (- (- ?x51551 ?x51552) ?x51554) ?x51556) ?x51558) ?x51560) ?x51562) ?x51564)))
 (let ((?x51579 (+ (- (+ (+ (- (+ (+ ?x51565 ?x51566) ?x51568) ?x51570) ?x51572) ?x51574) ?x51576) ?x51578)))
 (= (+ (+ (+ (+ (+ ?x51579 ?x51580) ?x51582) ?x51584) ?x51586) ?x51588) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51659 (* l_0_11_64 l_0_11_64)))
 (let ((?x51657 (* l_0_11_63 l_0_11_63)))
 (let ((?x51655 (* l_0_11_62 l_0_11_62)))
 (let ((?x51653 (* l_0_11_61 l_0_11_61)))
 (let ((?x51651 (* l_0_11_60 l_0_11_60)))
 (let ((?x51649 (* l_0_11_59 l_0_11_59)))
 (let ((?x51647 (* l_0_11_58 l_0_11_58)))
 (let ((?x51645 (* l_0_11_28 l_0_11_28)))
 (let ((?x51643 (* l_0_11_27 l_0_11_27)))
 (let ((?x51641 (* l_0_11_26 l_0_11_26)))
 (let ((?x51639 (* l_0_11_25 l_0_11_25)))
 (let ((?x51637 (* l_0_11_24 l_0_11_24)))
 (let ((?x51635 (* l_0_11_23 l_0_11_23)))
 (let ((?x51633 (* l_0_11_22 l_0_11_22)))
 (let ((?x51631 (* l_0_11_208 l_0_11_208)))
 (let ((?x51629 (* l_0_11_207 l_0_11_207)))
 (let ((?x51627 (* l_0_11_206 l_0_11_206)))
 (let ((?x51625 (* l_0_11_205 l_0_11_205)))
 (let ((?x51623 (* l_0_11_204 l_0_11_204)))
 (let ((?x51621 (* l_0_11_203 l_0_11_203)))
 (let ((?x51619 (* l_0_11_202 l_0_11_202)))
 (let ((?x51617 (* l_0_11_172 l_0_11_172)))
 (let ((?x51615 (* l_0_11_171 l_0_11_171)))
 (let ((?x51613 (* l_0_11_170 l_0_11_170)))
 (let ((?x51611 (* l_0_11_169 l_0_11_169)))
 (let ((?x51609 (* l_0_11_168 l_0_11_168)))
 (let ((?x51607 (* l_0_11_167 l_0_11_167)))
 (let ((?x51605 (* l_0_11_166 l_0_11_166)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50453 (* ?x49959 l_0_11_168)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50450 (* ?x49956 l_0_11_167)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x50447 (* ?x49942 l_0_11_166)))
 (let ((?x18309 (+ (* (* 1.0 l_0_11_112) l_0_11_130) (* (* 1.0 l_0_11_113) l_0_11_131))))
 (let ((?x51604 (- (- (- (+ ?x18309 (* (* 1.0 l_0_11_114) l_0_11_132)) ?x50447) ?x50450) ?x50453)))
 (let ((?x51618 (- (- (- (- (- (- (- ?x51604 ?x51605) ?x51607) ?x51609) ?x51611) ?x51613) ?x51615) ?x51617)))
 (let ((?x51632 (+ (+ (+ (+ (+ (+ (+ ?x51618 ?x51619) ?x51621) ?x51623) ?x51625) ?x51627) ?x51629) ?x51631)))
 (let ((?x51646 (- (- (- (- (- (- (- ?x51632 ?x51633) ?x51635) ?x51637) ?x51639) ?x51641) ?x51643) ?x51645)))
 (let ((?x51660 (+ (+ (+ (+ (+ (+ (+ ?x51646 ?x51647) ?x51649) ?x51651) ?x51653) ?x51655) ?x51657) ?x51659)))
 (let ((?x51664 (- (- ?x51660 (* (* 1.0 l_0_11_76) l_0_11_94)) (* (* 1.0 l_0_11_77) l_0_11_95))))
 (= (- ?x51664 (* (* 1.0 l_0_11_78) l_0_11_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51810 (* (* 2.0 l_0_11_64) l_0_11_71)))
 (let ((?x51807 (* (* 2.0 l_0_11_63) l_0_11_70)))
 (let ((?x51804 (* (* 2.0 l_0_11_62) l_0_11_69)))
 (let ((?x51801 (* (* 2.0 l_0_11_61) l_0_11_68)))
 (let ((?x51798 (* (* 2.0 l_0_11_60) l_0_11_67)))
 (let ((?x51795 (* (* 2.0 l_0_11_59) l_0_11_66)))
 (let ((?x51792 (* (* 2.0 l_0_11_58) l_0_11_65)))
 (let ((?x51789 (* (* 2.0 l_0_11_28) l_0_11_35)))
 (let ((?x51786 (* (* 2.0 l_0_11_27) l_0_11_34)))
 (let ((?x51783 (* (* 2.0 l_0_11_26) l_0_11_33)))
 (let ((?x51780 (* (* 2.0 l_0_11_25) l_0_11_32)))
 (let ((?x50467 (* 2.0 l_0_11_24)))
 (let ((?x51777 (* ?x50467 l_0_11_31)))
 (let ((?x50076 (* 2.0 l_0_11_23)))
 (let ((?x51775 (* ?x50076 l_0_11_30)))
 (let ((?x50462 (* 2.0 l_0_11_22)))
 (let ((?x51773 (* ?x50462 l_0_11_29)))
 (let ((?x51771 (* (* 2.0 l_0_11_208) l_0_11_215)))
 (let ((?x51768 (* (* 2.0 l_0_11_207) l_0_11_214)))
 (let ((?x51765 (* (* 2.0 l_0_11_206) l_0_11_213)))
 (let ((?x51762 (* (* 2.0 l_0_11_205) l_0_11_212)))
 (let ((?x51759 (* (* 2.0 l_0_11_204) l_0_11_211)))
 (let ((?x51756 (* (* 2.0 l_0_11_203) l_0_11_210)))
 (let ((?x51753 (* (* 2.0 l_0_11_202) l_0_11_209)))
 (let ((?x51750 (* (* 2.0 l_0_11_172) l_0_11_179)))
 (let ((?x51747 (* (* 2.0 l_0_11_171) l_0_11_178)))
 (let ((?x51744 (* (* 2.0 l_0_11_170) l_0_11_177)))
 (let ((?x51741 (* (* 2.0 l_0_11_169) l_0_11_176)))
 (let ((?x51738 (* (* 2.0 l_0_11_168) l_0_11_175)))
 (let ((?x51735 (* (* 2.0 l_0_11_167) l_0_11_174)))
 (let ((?x51732 (* (* 2.0 l_0_11_166) l_0_11_173)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x49960 (* ?x49959 l_0_11_175)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x49957 (* ?x49956 l_0_11_174)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x49944 (* ?x49942 l_0_11_173)))
 (let ((?x51718 (- (* (* (- 1.0) l_0_11_101) l_0_11_76) (* (* 1.0 l_0_11_102) l_0_11_77))))
 (let ((?x51723 (+ (- ?x51718 (* (* 1.0 l_0_11_103) l_0_11_78)) (* (* 1.0 l_0_11_112) l_0_11_137))))
 (let ((?x51727 (+ (+ ?x51723 (* (* 1.0 l_0_11_113) l_0_11_138)) (* (* 1.0 l_0_11_114) l_0_11_139))))
 (let ((?x51742 (- (- (- (- (- (- (- ?x51727 ?x49944) ?x49957) ?x49960) ?x51732) ?x51735) ?x51738) ?x51741)))
 (let ((?x51763 (+ (+ (+ (+ (- (- (- ?x51742 ?x51744) ?x51747) ?x51750) ?x51753) ?x51756) ?x51759) ?x51762)))
 (let ((?x51781 (- (- (- (- (+ (+ (+ ?x51763 ?x51765) ?x51768) ?x51771) ?x51773) ?x51775) ?x51777) ?x51780)))
 (let ((?x51802 (+ (+ (+ (+ (- (- (- ?x51781 ?x51783) ?x51786) ?x51789) ?x51792) ?x51795) ?x51798) ?x51801)))
 (= (+ (+ (+ ?x51802 ?x51804) ?x51807) ?x51810) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51942 (* l_0_11_72 l_0_11_72)))
 (let ((?x51940 (* l_0_11_71 l_0_11_71)))
 (let ((?x51938 (* l_0_11_70 l_0_11_70)))
 (let ((?x51936 (* l_0_11_69 l_0_11_69)))
 (let ((?x51934 (* l_0_11_68 l_0_11_68)))
 (let ((?x51932 (* l_0_11_67 l_0_11_67)))
 (let ((?x51930 (* l_0_11_66 l_0_11_66)))
 (let ((?x51928 (* l_0_11_65 l_0_11_65)))
 (let ((?x51926 (* l_0_11_36 l_0_11_36)))
 (let ((?x51924 (* l_0_11_35 l_0_11_35)))
 (let ((?x51922 (* l_0_11_34 l_0_11_34)))
 (let ((?x51920 (* l_0_11_33 l_0_11_33)))
 (let ((?x51918 (* l_0_11_32 l_0_11_32)))
 (let ((?x51916 (* l_0_11_31 l_0_11_31)))
 (let ((?x51914 (* l_0_11_30 l_0_11_30)))
 (let ((?x51912 (* l_0_11_29 l_0_11_29)))
 (let ((?x51910 (* l_0_11_216 l_0_11_216)))
 (let ((?x51908 (* l_0_11_215 l_0_11_215)))
 (let ((?x51906 (* l_0_11_214 l_0_11_214)))
 (let ((?x51904 (* l_0_11_213 l_0_11_213)))
 (let ((?x51902 (* l_0_11_212 l_0_11_212)))
 (let ((?x51900 (* l_0_11_211 l_0_11_211)))
 (let ((?x51898 (* l_0_11_210 l_0_11_210)))
 (let ((?x51896 (* l_0_11_209 l_0_11_209)))
 (let ((?x51894 (* l_0_11_180 l_0_11_180)))
 (let ((?x51892 (* l_0_11_179 l_0_11_179)))
 (let ((?x51890 (* l_0_11_178 l_0_11_178)))
 (let ((?x51888 (* l_0_11_177 l_0_11_177)))
 (let ((?x51886 (* l_0_11_176 l_0_11_176)))
 (let ((?x51884 (* l_0_11_175 l_0_11_175)))
 (let ((?x51885 (- (- (* (- l_0_11_173) l_0_11_173) (* l_0_11_174 l_0_11_174)) ?x51884)))
 (let ((?x51899 (+ (+ (- (- (- (- (- ?x51885 ?x51886) ?x51888) ?x51890) ?x51892) ?x51894) ?x51896) ?x51898)))
 (let ((?x51913 (- (+ (+ (+ (+ (+ (+ ?x51899 ?x51900) ?x51902) ?x51904) ?x51906) ?x51908) ?x51910) ?x51912)))
 (let ((?x51927 (- (- (- (- (- (- (- ?x51913 ?x51914) ?x51916) ?x51918) ?x51920) ?x51922) ?x51924) ?x51926)))
 (let ((?x51941 (+ (+ (+ (+ (+ (+ (+ ?x51927 ?x51928) ?x51930) ?x51932) ?x51934) ?x51936) ?x51938) ?x51940)))
 (= (+ ?x51941 ?x51942) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49395 (* l_0_11_37 l_0_11_37)))
 (let ((?x51984 (* l_0_11_289 l_0_11_289)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x51982 (* ?x51981 l_0_11_295)))
 (let ((?x51983 (- (- (* l_0_11_1 l_0_11_1) (* (* 2.0 l_0_11_109) l_0_11_115)) ?x51982)))
 (= (+ (- (- ?x51983 ?x51984) ?x49395) (* (* 2.0 l_0_11_73) l_0_11_79)) 0.0)))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49447 (* ?x49446 l_0_11_38)))
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52017 (* ?x52016 l_0_11_296)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52014 (* ?x52013 l_0_11_295)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52011 (* ?x51981 l_0_11_290)))
 (let ((?x52007 (- (* (* 2.0 l_0_11_1) l_0_11_2) (* (* 2.0 l_0_11_110) l_0_11_115))))
 (let ((?x52018 (- (- (- (- ?x52007 (* (* 2.0 l_0_11_111) l_0_11_116)) ?x52011) ?x52014) ?x52017)))
 (let ((?x52022 (- (- ?x52018 (* (* 2.0 l_0_11_325) l_0_11_331)) (* (* 2.0 l_0_11_361) l_0_11_367))))
 (let ((?x52028 (+ (- (- ?x52022 ?x49447) (* (* 2.0 l_0_11_397) l_0_11_403)) (* (* 2.0 l_0_11_74) l_0_11_79))))
 (= (+ ?x52028 (* (* 2.0 l_0_11_75) l_0_11_80)) 0.0))))))))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49500 (* ?x49446 l_0_11_40)))
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52051 (* ?x49443 l_0_11_297)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52049 (* ?x49440 l_0_11_296)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52047 (* ?x49437 l_0_11_295)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52045 (* ?x51981 l_0_11_292)))
 (let ((?x18854 (- (* (* 2.0 l_0_11_1) l_0_11_4) (* (* 2.0 l_0_11_112) l_0_11_115))))
 (let ((?x52044 (- (- ?x18854 (* (* 2.0 l_0_11_113) l_0_11_116)) (* (* 2.0 l_0_11_114) l_0_11_117))))
 (let ((?x52056 (+ (- (- (- (- (- ?x52044 ?x52045) ?x52047) ?x52049) ?x52051) ?x49500) (* (* 2.0 l_0_11_76) l_0_11_79))))
 (let ((?x52062 (+ (+ ?x52056 (* (* 2.0 l_0_11_77) l_0_11_80)) (* (* 2.0 l_0_11_78) l_0_11_81))))
 (= ?x52062 0.0))))))))))))))))
(assert
 (let ((?x52100 (* l_0_11_82 l_0_11_82)))
 (let ((?x52098 (* l_0_11_81 l_0_11_81)))
 (let ((?x52096 (* l_0_11_80 l_0_11_80)))
 (let ((?x52094 (* l_0_11_79 l_0_11_79)))
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49515 (* ?x49446 l_0_11_43)))
 (let ((?x52091 (* l_0_11_298 l_0_11_298)))
 (let ((?x52089 (* l_0_11_297 l_0_11_297)))
 (let ((?x52087 (* l_0_11_296 l_0_11_296)))
 (let ((?x52085 (* l_0_11_295 l_0_11_295)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x51982 (* ?x51981 l_0_11_295)))
 (let ((?x52082 (* l_0_11_118 l_0_11_118)))
 (let ((?x52080 (* l_0_11_117 l_0_11_117)))
 (let ((?x52078 (* l_0_11_116 l_0_11_116)))
 (let ((?x52079 (- (- (* (* 2.0 l_0_11_1) l_0_11_7) (* l_0_11_115 l_0_11_115)) ?x52078)))
 (let ((?x52092 (- (- (- (- (- (- (- ?x52079 ?x52080) ?x52082) ?x51982) ?x52085) ?x52087) ?x52089) ?x52091)))
 (= (+ (+ (+ (+ (- ?x52092 ?x49515) ?x52094) ?x52096) ?x52098) ?x52100) 0.0)))))))))))))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49538 (* ?x49446 l_0_11_47)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52136 (* ?x52135 l_0_11_302)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52133 (* ?x52132 l_0_11_301)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52130 (* ?x52129 l_0_11_300)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52127 (* ?x52126 l_0_11_299)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52124 (* ?x51981 l_0_11_299)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x52122 (* ?x52121 l_0_11_259)))
 (let ((?x19266 (- (* (* 2.0 l_0_11_1) l_0_11_11) (* (* 2.0 l_0_11_115) l_0_11_119))))
 (let ((?x52117 (- (- ?x19266 (* (* 2.0 l_0_11_116) l_0_11_120)) (* (* 2.0 l_0_11_117) l_0_11_121))))
 (let ((?x52128 (- (- (+ (- ?x52117 (* (* 2.0 l_0_11_118) l_0_11_122)) ?x52122) ?x52124) ?x52127)))
 (let ((?x52141 (+ (- (- (- (- ?x52128 ?x52130) ?x52133) ?x52136) ?x49538) (* (* 2.0 l_0_11_79) l_0_11_83))))
 (let ((?x52147 (+ (+ ?x52141 (* (* 2.0 l_0_11_80) l_0_11_84)) (* (* 2.0 l_0_11_81) l_0_11_85))))
 (= (+ ?x52147 (* (* 2.0 l_0_11_82) l_0_11_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49561 (* ?x49446 l_0_11_52)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52213 (* ?x52135 l_0_11_307)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52211 (* ?x52132 l_0_11_306)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52209 (* ?x52129 l_0_11_305)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52207 (* ?x52126 l_0_11_304)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52205 (* ?x51981 l_0_11_304)))
 (let ((?x51982 (* ?x51981 l_0_11_295)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49513 (* ?x49431 l_0_11_187)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x16435 (* ?x49428 l_0_11_151)))
 (let ((?x52187 (- (* (* 2.0 l_0_11_1) l_0_11_16) (* (* 2.0 l_0_11_115) l_0_11_124))))
 (let ((?x52199 (- (- ?x52187 (* (* 2.0 l_0_11_116) l_0_11_125)) (* (* 2.0 l_0_11_117) l_0_11_126))))
 (let ((?x52204 (+ (- (+ (- ?x52199 (* (* 2.0 l_0_11_118) l_0_11_127)) ?x16435) ?x49513) ?x51982)))
 (let ((?x52217 (+ (- (- (- (- (- (- ?x52204 ?x52205) ?x52207) ?x52209) ?x52211) ?x52213) ?x49561) (* (* 2.0 l_0_11_79) l_0_11_88))))
 (let ((?x52221 (+ (+ ?x52217 (* (* 2.0 l_0_11_80) l_0_11_89)) (* (* 2.0 l_0_11_81) l_0_11_90))))
 (= (+ ?x52221 (* (* 2.0 l_0_11_82) l_0_11_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49582 (* ?x49446 l_0_11_58)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52267 (* ?x52135 l_0_11_313)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52265 (* ?x52132 l_0_11_312)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52263 (* ?x52129 l_0_11_311)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52261 (* ?x52126 l_0_11_310)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52259 (* ?x51981 l_0_11_310)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x52122 (* ?x52121 l_0_11_259)))
 (let ((?x19642 (- (* (* 2.0 l_0_11_1) l_0_11_22) (* (* 2.0 l_0_11_115) l_0_11_130))))
 (let ((?x52255 (- (- ?x19642 (* (* 2.0 l_0_11_116) l_0_11_131)) (* (* 2.0 l_0_11_117) l_0_11_132))))
 (let ((?x52262 (- (- (- (- ?x52255 (* (* 2.0 l_0_11_118) l_0_11_133)) ?x52122) ?x52259) ?x52261)))
 (let ((?x52271 (+ (- (- (- (- ?x52262 ?x52263) ?x52265) ?x52267) ?x49582) (* (* 2.0 l_0_11_79) l_0_11_94))))
 (let ((?x52275 (+ (+ ?x52271 (* (* 2.0 l_0_11_80) l_0_11_95)) (* (* 2.0 l_0_11_81) l_0_11_96))))
 (= (+ ?x52275 (* (* 2.0 l_0_11_82) l_0_11_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x49446 (* 2.0 l_0_11_37)))
 (let ((?x49617 (* ?x49446 l_0_11_65)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52334 (* ?x52135 l_0_11_320)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52332 (* ?x52132 l_0_11_319)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52330 (* ?x52129 l_0_11_318)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52328 (* ?x52126 l_0_11_317)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52326 (* ?x51981 l_0_11_317)))
 (let ((?x52301 (+ (* (* 2.0 l_0_11_1) l_0_11_29) (* (* 2.0 l_0_11_101) l_0_11_79))))
 (let ((?x52312 (+ (+ ?x52301 (* (* 2.0 l_0_11_102) l_0_11_80)) (* (* 2.0 l_0_11_103) l_0_11_81))))
 (let ((?x52317 (- (+ ?x52312 (* (* 2.0 l_0_11_104) l_0_11_82)) (* (* 2.0 l_0_11_115) l_0_11_137))))
 (let ((?x52321 (- (- ?x52317 (* (* 2.0 l_0_11_116) l_0_11_138)) (* (* 2.0 l_0_11_117) l_0_11_139))))
 (let ((?x52325 (- (- ?x52321 (* (* 2.0 l_0_11_118) l_0_11_140)) (* (* 2.0 l_0_11_217) l_0_11_223))))
 (= (- (- (- (- (- (- ?x52325 ?x52326) ?x52328) ?x52330) ?x52332) ?x52334) ?x49617) 0.0)))))))))))))))))))
(assert
 (let ((?x49670 (* l_0_11_39 l_0_11_39)))
 (let ((?x49668 (* l_0_11_38 l_0_11_38)))
 (let ((?x49648 (* l_0_11_3 l_0_11_3)))
 (let ((?x49357 (* l_0_11_291 l_0_11_291)))
 (let ((?x52371 (+ (- (- (* l_0_11_2 l_0_11_2) (* l_0_11_290 l_0_11_290)) ?x49357) ?x49648)))
 (let ((?x52377 (- (- ?x52371 (* (* 2.0 l_0_11_326) l_0_11_331)) (* (* 2.0 l_0_11_327) l_0_11_332))))
 (let ((?x52383 (- (- ?x52377 (* (* 2.0 l_0_11_362) l_0_11_367)) (* (* 2.0 l_0_11_363) l_0_11_368))))
 (let ((?x52391 (- (- (- (- ?x52383 ?x49668) ?x49670) (* (* 2.0 l_0_11_398) l_0_11_403)) (* (* 2.0 l_0_11_399) l_0_11_404))))
 (= ?x52391 0.0))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x49748 (* ?x49747 l_0_11_41)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x49745 (* ?x49744 l_0_11_40)))
 (let ((?x49741 (* 2.0 l_0_11_3)))
 (let ((?x49742 (* ?x49741 l_0_11_5)))
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52405 (* ?x52016 l_0_11_293)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52403 (* ?x52013 l_0_11_292)))
 (let ((?x49732 (* 2.0 l_0_11_2)))
 (let ((?x49733 (* ?x49732 l_0_11_4)))
 (let ((?x52409 (- (+ (- (- ?x49733 ?x52403) ?x52405) ?x49742) (* (* 2.0 l_0_11_328) l_0_11_331))))
 (let ((?x52413 (- (- ?x52409 (* (* 2.0 l_0_11_329) l_0_11_332)) (* (* 2.0 l_0_11_330) l_0_11_333))))
 (let ((?x52417 (- (- ?x52413 (* (* 2.0 l_0_11_364) l_0_11_367)) (* (* 2.0 l_0_11_365) l_0_11_368))))
 (let ((?x52423 (- (- (- (- ?x52417 (* (* 2.0 l_0_11_366) l_0_11_369)) ?x49745) ?x49748) (* (* 2.0 l_0_11_400) l_0_11_403))))
 (let ((?x52427 (- (- ?x52423 (* (* 2.0 l_0_11_401) l_0_11_404)) (* (* 2.0 l_0_11_402) l_0_11_405))))
 (= ?x52427 0.0)))))))))))))))))))
(assert
 (let ((?x52451 (* l_0_11_406 l_0_11_406)))
 (let ((?x52449 (* l_0_11_405 l_0_11_405)))
 (let ((?x52447 (* l_0_11_404 l_0_11_404)))
 (let ((?x52445 (* l_0_11_403 l_0_11_403)))
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x49809 (* ?x49747 l_0_11_44)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x49807 (* ?x49744 l_0_11_43)))
 (let ((?x52441 (* l_0_11_370 l_0_11_370)))
 (let ((?x52439 (* l_0_11_369 l_0_11_369)))
 (let ((?x20312 (* l_0_11_368 l_0_11_368)))
 (let ((?x20419 (* l_0_11_367 l_0_11_367)))
 (let ((?x20420 (* l_0_11_334 l_0_11_334)))
 (let ((?x20421 (* l_0_11_333 l_0_11_333)))
 (let ((?x20425 (* l_0_11_332 l_0_11_332)))
 (let ((?x20393 (* l_0_11_331 l_0_11_331)))
 (let ((?x49741 (* 2.0 l_0_11_3)))
 (let ((?x49799 (* ?x49741 l_0_11_8)))
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52017 (* ?x52016 l_0_11_296)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52014 (* ?x52013 l_0_11_295)))
 (let ((?x49732 (* 2.0 l_0_11_2)))
 (let ((?x49782 (* ?x49732 l_0_11_7)))
 (let ((?x20417 (- (- (- (- (+ (- (- ?x49782 ?x52014) ?x52017) ?x49799) ?x20393) ?x20425) ?x20421) ?x20420)))
 (let ((?x52446 (- (- (- (- (- (- (- ?x20417 ?x20419) ?x20312) ?x52439) ?x52441) ?x49807) ?x49809) ?x52445)))
 (= (- (- (- ?x52446 ?x52447) ?x52449) ?x52451) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x49909 (* ?x49747 l_0_11_48)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x49907 (* ?x49744 l_0_11_47)))
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52480 (* ?x52016 l_0_11_300)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52478 (* ?x52013 l_0_11_299)))
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x52476 (* ?x49160 l_0_11_260)))
 (let ((?x49157 (* 2.0 l_0_11_254)))
 (let ((?x52474 (* ?x49157 l_0_11_259)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x49881 (* ?x49880 l_0_11_3)))
 (let ((?x52479 (- (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_2) ?x49881) ?x52474) ?x52476) ?x52478)))
 (let ((?x52487 (- (- (- ?x52479 ?x52480) (* (* 2.0 l_0_11_331) l_0_11_335)) (* (* 2.0 l_0_11_332) l_0_11_336))))
 (let ((?x52493 (- (- ?x52487 (* (* 2.0 l_0_11_333) l_0_11_337)) (* (* 2.0 l_0_11_334) l_0_11_338))))
 (let ((?x52499 (- (- ?x52493 (* (* 2.0 l_0_11_367) l_0_11_371)) (* (* 2.0 l_0_11_368) l_0_11_372))))
 (let ((?x52505 (- (- ?x52499 (* (* 2.0 l_0_11_369) l_0_11_373)) (* (* 2.0 l_0_11_370) l_0_11_374))))
 (let ((?x52513 (- (- (- (- ?x52505 ?x49907) ?x49909) (* (* 2.0 l_0_11_403) l_0_11_407)) (* (* 2.0 l_0_11_404) l_0_11_408))))
 (let ((?x52519 (- (- ?x52513 (* (* 2.0 l_0_11_405) l_0_11_409)) (* (* 2.0 l_0_11_406) l_0_11_410))))
 (= ?x52519 0.0)))))))))))))))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x49992 (* ?x49747 l_0_11_53)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x49990 (* ?x49744 l_0_11_52)))
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52549 (* ?x52016 l_0_11_305)))
 (let ((?x52017 (* ?x52016 l_0_11_296)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52546 (* ?x52013 l_0_11_304)))
 (let ((?x52014 (* ?x52013 l_0_11_295)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x49780 (* ?x49729 l_0_11_188)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x49778 (* ?x49726 l_0_11_187)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x49966 (* ?x49965 l_0_11_3)))
 (let ((?x49962 (* 2.0 l_0_11_16)))
 (let ((?x49963 (* ?x49962 l_0_11_2)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49776 (* ?x49723 l_0_11_152)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x20768 (* ?x49883 l_0_11_151)))
 (let ((?x52547 (- (+ (- (- (+ (+ (+ ?x20768 ?x49776) ?x49963) ?x49966) ?x49778) ?x49780) ?x52014) ?x52546)))
 (let ((?x52554 (- (- (- (+ ?x52547 ?x52017) ?x52549) (* (* 2.0 l_0_11_331) l_0_11_340)) (* (* 2.0 l_0_11_332) l_0_11_341))))
 (let ((?x52558 (- (- ?x52554 (* (* 2.0 l_0_11_333) l_0_11_342)) (* (* 2.0 l_0_11_334) l_0_11_343))))
 (let ((?x52562 (- (- ?x52558 (* (* 2.0 l_0_11_367) l_0_11_376)) (* (* 2.0 l_0_11_368) l_0_11_377))))
 (let ((?x52566 (- (- ?x52562 (* (* 2.0 l_0_11_369) l_0_11_378)) (* (* 2.0 l_0_11_370) l_0_11_379))))
 (let ((?x52572 (- (- (- (- ?x52566 ?x49990) ?x49992) (* (* 2.0 l_0_11_403) l_0_11_412)) (* (* 2.0 l_0_11_404) l_0_11_413))))
 (let ((?x52576 (- (- ?x52572 (* (* 2.0 l_0_11_405) l_0_11_414)) (* (* 2.0 l_0_11_406) l_0_11_415))))
 (= ?x52576 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x50084 (* ?x49747 l_0_11_59)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x50082 (* ?x49744 l_0_11_58)))
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52592 (* ?x52016 l_0_11_311)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52590 (* ?x52013 l_0_11_310)))
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x52476 (* ?x49160 l_0_11_260)))
 (let ((?x49157 (* 2.0 l_0_11_254)))
 (let ((?x52474 (* ?x49157 l_0_11_259)))
 (let ((?x50076 (* 2.0 l_0_11_23)))
 (let ((?x50077 (* ?x50076 l_0_11_3)))
 (let ((?x49732 (* 2.0 l_0_11_2)))
 (let ((?x50068 (* ?x49732 l_0_11_22)))
 (let ((?x52595 (- (- (- (- (- (+ ?x50068 ?x50077) ?x52474) ?x52476) ?x52590) ?x52592) (* (* 2.0 l_0_11_331) l_0_11_346))))
 (let ((?x52599 (- (- ?x52595 (* (* 2.0 l_0_11_332) l_0_11_347)) (* (* 2.0 l_0_11_333) l_0_11_348))))
 (let ((?x52603 (- (- ?x52599 (* (* 2.0 l_0_11_334) l_0_11_349)) (* (* 2.0 l_0_11_367) l_0_11_382))))
 (let ((?x52607 (- (- ?x52603 (* (* 2.0 l_0_11_368) l_0_11_383)) (* (* 2.0 l_0_11_369) l_0_11_384))))
 (let ((?x52613 (- (- (- (- ?x52607 (* (* 2.0 l_0_11_370) l_0_11_385)) ?x50082) ?x50084) (* (* 2.0 l_0_11_403) l_0_11_418))))
 (let ((?x52617 (- (- ?x52613 (* (* 2.0 l_0_11_404) l_0_11_419)) (* (* 2.0 l_0_11_405) l_0_11_420))))
 (= (- ?x52617 (* (* 2.0 l_0_11_406) l_0_11_421)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x49747 (* 2.0 l_0_11_39)))
 (let ((?x50165 (* ?x49747 l_0_11_66)))
 (let ((?x49744 (* 2.0 l_0_11_38)))
 (let ((?x50163 (* ?x49744 l_0_11_65)))
 (let ((?x49741 (* 2.0 l_0_11_3)))
 (let ((?x50161 (* ?x49741 l_0_11_30)))
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52656 (* ?x52016 l_0_11_318)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52654 (* ?x52013 l_0_11_317)))
 (let ((?x49732 (* 2.0 l_0_11_2)))
 (let ((?x50153 (* ?x49732 l_0_11_29)))
 (let ((?x52653 (- (- ?x50153 (* (* 2.0 l_0_11_218) l_0_11_223)) (* (* 2.0 l_0_11_219) l_0_11_224))))
 (let ((?x52660 (- (+ (- (- ?x52653 ?x52654) ?x52656) ?x50161) (* (* 2.0 l_0_11_331) l_0_11_353))))
 (let ((?x52664 (- (- ?x52660 (* (* 2.0 l_0_11_332) l_0_11_354)) (* (* 2.0 l_0_11_333) l_0_11_355))))
 (let ((?x52668 (- (- ?x52664 (* (* 2.0 l_0_11_334) l_0_11_356)) (* (* 2.0 l_0_11_367) l_0_11_389))))
 (let ((?x52672 (- (- ?x52668 (* (* 2.0 l_0_11_368) l_0_11_390)) (* (* 2.0 l_0_11_369) l_0_11_391))))
 (let ((?x52678 (- (- (- (- ?x52672 (* (* 2.0 l_0_11_370) l_0_11_392)) ?x50163) ?x50165) (* (* 2.0 l_0_11_403) l_0_11_425))))
 (let ((?x52682 (- (- ?x52678 (* (* 2.0 l_0_11_404) l_0_11_426)) (* (* 2.0 l_0_11_405) l_0_11_427))))
 (= (- ?x52682 (* (* 2.0 l_0_11_406) l_0_11_428)) 0.0)))))))))))))))))))))
(assert
 (let ((?x50233 (* l_0_11_6 l_0_11_6)))
 (let ((?x50231 (* l_0_11_5 l_0_11_5)))
 (let ((?x50229 (* l_0_11_42 l_0_11_42)))
 (let ((?x50227 (* l_0_11_41 l_0_11_41)))
 (let ((?x50225 (* l_0_11_40 l_0_11_40)))
 (let ((?x50223 (* l_0_11_4 l_0_11_4)))
 (let ((?x52726 (* l_0_11_294 l_0_11_294)))
 (let ((?x52727 (- (- (* (- l_0_11_292) l_0_11_292) (* l_0_11_293 l_0_11_293)) ?x52726)))
 (= (+ (+ (- (- (- (+ ?x52727 ?x50223) ?x50225) ?x50227) ?x50229) ?x50231) ?x50233) 0.0))))))))))
(assert
 (let ((?x50285 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x50282 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x50279 (* ?x49817 l_0_11_45)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x50277 (* ?x49814 l_0_11_44)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x50275 (* ?x49811 l_0_11_43)))
 (let ((?x50273 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52051 (* ?x49443 l_0_11_297)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52049 (* ?x49440 l_0_11_296)))
 (let ((?x21677 (- (+ (- (- (* (* (- 2.0) l_0_11_292) l_0_11_295) ?x52049) ?x52051) ?x50273) ?x50275)))
 (= (+ (+ (- (- ?x21677 ?x50277) ?x50279) ?x50282) ?x50285) 0.0))))))))))))))))
(assert
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x50351 (* ?x49817 l_0_11_49)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x50349 (* ?x49814 l_0_11_48)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x50347 (* ?x49811 l_0_11_47)))
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52755 (* ?x49443 l_0_11_301)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52753 (* ?x49440 l_0_11_300)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52751 (* ?x49437 l_0_11_299)))
 (let ((?x49904 (* 2.0 l_0_11_258)))
 (let ((?x52749 (* ?x49904 l_0_11_261)))
 (let ((?x49901 (* 2.0 l_0_11_257)))
 (let ((?x21747 (* ?x49901 l_0_11_260)))
 (let ((?x49898 (* 2.0 l_0_11_256)))
 (let ((?x21745 (* ?x49898 l_0_11_259)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x50333 (* ?x50332 l_0_11_6)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x50330 (* ?x49880 l_0_11_5)))
 (let ((?x21741 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x50330) ?x50333) ?x21745) ?x21747)))
 (let ((?x52759 (- (- (- (- (- (- (+ ?x21741 ?x52749) ?x52751) ?x52753) ?x52755) ?x50347) ?x50349) ?x50351)))
 (= ?x52759 0.0))))))))))))))))))))))))))
(assert
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x50405 (* ?x49817 l_0_11_54)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x50403 (* ?x49814 l_0_11_53)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x50401 (* ?x49811 l_0_11_52)))
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52791 (* ?x49443 l_0_11_306)))
 (let ((?x52051 (* ?x49443 l_0_11_297)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52788 (* ?x49440 l_0_11_305)))
 (let ((?x52049 (* ?x49440 l_0_11_296)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52785 (* ?x49437 l_0_11_304)))
 (let ((?x52047 (* ?x49437 l_0_11_295)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x50270 (* ?x49978 l_0_11_189)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x50268 (* ?x49975 l_0_11_188)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x50266 (* ?x49972 l_0_11_187)))
 (let ((?x50392 (* 2.0 l_0_11_18)))
 (let ((?x50393 (* ?x50392 l_0_11_6)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x50390 (* ?x49965 l_0_11_5)))
 (let ((?x49962 (* 2.0 l_0_11_16)))
 (let ((?x50379 (* ?x49962 l_0_11_4)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50264 (* ?x49959 l_0_11_153)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50262 (* ?x49956 l_0_11_152)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x50737 (* ?x49942 l_0_11_151)))
 (let ((?x52782 (- (- (+ (+ (+ (+ (+ ?x50737 ?x50262) ?x50264) ?x50379) ?x50390) ?x50393) ?x50266) ?x50268)))
 (let ((?x52792 (- (+ (- (+ (- (+ (- ?x52782 ?x50270) ?x52047) ?x52785) ?x52049) ?x52788) ?x52051) ?x52791)))
 (= (- (- (- ?x52792 ?x50401) ?x50403) ?x50405) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49817 (* 2.0 l_0_11_42)))
 (let ((?x50474 (* ?x49817 l_0_11_60)))
 (let ((?x49814 (* 2.0 l_0_11_41)))
 (let ((?x50472 (* ?x49814 l_0_11_59)))
 (let ((?x49811 (* 2.0 l_0_11_40)))
 (let ((?x50470 (* ?x49811 l_0_11_58)))
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52811 (* ?x49443 l_0_11_312)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52809 (* ?x49440 l_0_11_311)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52807 (* ?x49437 l_0_11_310)))
 (let ((?x49904 (* 2.0 l_0_11_258)))
 (let ((?x52749 (* ?x49904 l_0_11_261)))
 (let ((?x49901 (* 2.0 l_0_11_257)))
 (let ((?x21747 (* ?x49901 l_0_11_260)))
 (let ((?x49898 (* 2.0 l_0_11_256)))
 (let ((?x21745 (* ?x49898 l_0_11_259)))
 (let ((?x50467 (* 2.0 l_0_11_24)))
 (let ((?x50468 (* ?x50467 l_0_11_6)))
 (let ((?x50076 (* 2.0 l_0_11_23)))
 (let ((?x50465 (* ?x50076 l_0_11_5)))
 (let ((?x50462 (* 2.0 l_0_11_22)))
 (let ((?x50463 (* ?x50462 l_0_11_4)))
 (let ((?x52810 (- (- (- (- (- (+ (+ ?x50463 ?x50465) ?x50468) ?x21745) ?x21747) ?x52749) ?x52807) ?x52809)))
 (= (- (- (- (- ?x52810 ?x52811) ?x50470) ?x50472) ?x50474) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x50561 (* l_0_11_9 l_0_11_9)))
 (let ((?x50559 (* l_0_11_8 l_0_11_8)))
 (let ((?x50557 (* l_0_11_7 l_0_11_7)))
 (let ((?x50555 (* l_0_11_46 l_0_11_46)))
 (let ((?x50553 (* l_0_11_45 l_0_11_45)))
 (let ((?x50551 (* l_0_11_44 l_0_11_44)))
 (let ((?x50549 (* l_0_11_43 l_0_11_43)))
 (let ((?x52091 (* l_0_11_298 l_0_11_298)))
 (let ((?x52089 (* l_0_11_297 l_0_11_297)))
 (let ((?x52087 (* l_0_11_296 l_0_11_296)))
 (let ((?x21977 (- (- (- (* l_0_11_10 l_0_11_10) (* l_0_11_295 l_0_11_295)) ?x52087) ?x52089)))
 (let ((?x52833 (+ (+ (- (- (- (- (- ?x21977 ?x52091) ?x50549) ?x50551) ?x50553) ?x50555) ?x50557) ?x50559)))
 (= (+ ?x52833 ?x50561) 0.0))))))))))))))
(assert
 (let ((?x50627 (* 2.0 l_0_11_46)))
 (let ((?x50628 (* ?x50627 l_0_11_50)))
 (let ((?x50624 (* 2.0 l_0_11_45)))
 (let ((?x50625 (* ?x50624 l_0_11_49)))
 (let ((?x50621 (* 2.0 l_0_11_44)))
 (let ((?x50622 (* ?x50621 l_0_11_48)))
 (let ((?x50618 (* 2.0 l_0_11_43)))
 (let ((?x50619 (* ?x50618 l_0_11_47)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52136 (* ?x52135 l_0_11_302)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52133 (* ?x52132 l_0_11_301)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52130 (* ?x52129 l_0_11_300)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52127 (* ?x52126 l_0_11_299)))
 (let ((?x52836 (* l_0_11_262 l_0_11_262)))
 (let ((?x21995 (* l_0_11_261 l_0_11_261)))
 (let ((?x22001 (* l_0_11_260 l_0_11_260)))
 (let ((?x22007 (* l_0_11_259 l_0_11_259)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x50592 (* ?x50332 l_0_11_9)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x50590 (* ?x49880 l_0_11_8)))
 (let ((?x50587 (* 2.0 l_0_11_11)))
 (let ((?x50588 (* ?x50587 l_0_11_7)))
 (let ((?x22000 (+ (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_14) ?x50588) ?x50590) ?x50592) ?x22007)))
 (let ((?x52841 (- (- (- (- (+ (+ (+ ?x22000 ?x22001) ?x21995) ?x52836) ?x52127) ?x52130) ?x52133) ?x52136)))
 (= (- (- (- (- ?x52841 ?x50619) ?x50622) ?x50625) ?x50628) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x50627 (* 2.0 l_0_11_46)))
 (let ((?x50707 (* ?x50627 l_0_11_55)))
 (let ((?x50624 (* 2.0 l_0_11_45)))
 (let ((?x50705 (* ?x50624 l_0_11_54)))
 (let ((?x50621 (* 2.0 l_0_11_44)))
 (let ((?x50703 (* ?x50621 l_0_11_53)))
 (let ((?x50618 (* 2.0 l_0_11_43)))
 (let ((?x50701 (* ?x50618 l_0_11_52)))
 (let ((?x52091 (* l_0_11_298 l_0_11_298)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52213 (* ?x52135 l_0_11_307)))
 (let ((?x52089 (* l_0_11_297 l_0_11_297)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52211 (* ?x52132 l_0_11_306)))
 (let ((?x52087 (* l_0_11_296 l_0_11_296)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52209 (* ?x52129 l_0_11_305)))
 (let ((?x52085 (* l_0_11_295 l_0_11_295)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52207 (* ?x52126 l_0_11_304)))
 (let ((?x50547 (* l_0_11_190 l_0_11_190)))
 (let ((?x50545 (* l_0_11_189 l_0_11_189)))
 (let ((?x50543 (* l_0_11_188 l_0_11_188)))
 (let ((?x50541 (* l_0_11_187 l_0_11_187)))
 (let ((?x50392 (* 2.0 l_0_11_18)))
 (let ((?x50691 (* ?x50392 l_0_11_9)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x50689 (* ?x49965 l_0_11_8)))
 (let ((?x49962 (* 2.0 l_0_11_16)))
 (let ((?x50687 (* ?x49962 l_0_11_7)))
 (let ((?x50539 (* l_0_11_154 l_0_11_154)))
 (let ((?x50537 (* l_0_11_153 l_0_11_153)))
 (let ((?x50535 (* l_0_11_152 l_0_11_152)))
 (let ((?x17006 (* l_0_11_151 l_0_11_151)))
 (let ((?x22083 (+ (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_19) ?x17006) ?x50535) ?x50537) ?x50539)))
 (let ((?x52848 (- (- (- (- (+ (+ (+ ?x22083 ?x50687) ?x50689) ?x50691) ?x50541) ?x50543) ?x50545) ?x50547)))
 (let ((?x52855 (- (+ (- (+ (- (+ (- ?x52848 ?x52207) ?x52085) ?x52209) ?x52087) ?x52211) ?x52089) ?x52213)))
 (= (- (- (- (- (+ ?x52855 ?x52091) ?x50701) ?x50703) ?x50705) ?x50707) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50627 (* 2.0 l_0_11_46)))
 (let ((?x50769 (* ?x50627 l_0_11_61)))
 (let ((?x50624 (* 2.0 l_0_11_45)))
 (let ((?x50767 (* ?x50624 l_0_11_60)))
 (let ((?x50621 (* 2.0 l_0_11_44)))
 (let ((?x50765 (* ?x50621 l_0_11_59)))
 (let ((?x50618 (* 2.0 l_0_11_43)))
 (let ((?x50763 (* ?x50618 l_0_11_58)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52267 (* ?x52135 l_0_11_313)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52265 (* ?x52132 l_0_11_312)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52263 (* ?x52129 l_0_11_311)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52261 (* ?x52126 l_0_11_310)))
 (let ((?x52836 (* l_0_11_262 l_0_11_262)))
 (let ((?x21995 (* l_0_11_261 l_0_11_261)))
 (let ((?x22001 (* l_0_11_260 l_0_11_260)))
 (let ((?x22007 (* l_0_11_259 l_0_11_259)))
 (let ((?x50467 (* 2.0 l_0_11_24)))
 (let ((?x50761 (* ?x50467 l_0_11_9)))
 (let ((?x50076 (* 2.0 l_0_11_23)))
 (let ((?x50759 (* ?x50076 l_0_11_8)))
 (let ((?x50462 (* 2.0 l_0_11_22)))
 (let ((?x50757 (* ?x50462 l_0_11_7)))
 (let ((?x52864 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_25) ?x50757) ?x50759) ?x50761) ?x22007)))
 (let ((?x52871 (- (- (- (- (- (- (- ?x52864 ?x22001) ?x21995) ?x52836) ?x52261) ?x52263) ?x52265) ?x52267)))
 (= (- (- (- (- ?x52871 ?x50763) ?x50765) ?x50767) ?x50769) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x50627 (* 2.0 l_0_11_46)))
 (let ((?x50879 (* ?x50627 l_0_11_68)))
 (let ((?x50624 (* 2.0 l_0_11_45)))
 (let ((?x50877 (* ?x50624 l_0_11_67)))
 (let ((?x50621 (* 2.0 l_0_11_44)))
 (let ((?x50875 (* ?x50621 l_0_11_66)))
 (let ((?x50618 (* 2.0 l_0_11_43)))
 (let ((?x50873 (* ?x50618 l_0_11_65)))
 (let ((?x49804 (* 2.0 l_0_11_31)))
 (let ((?x50871 (* ?x49804 l_0_11_9)))
 (let ((?x49801 (* 2.0 l_0_11_30)))
 (let ((?x50869 (* ?x49801 l_0_11_8)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52334 (* ?x52135 l_0_11_320)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52332 (* ?x52132 l_0_11_319)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52330 (* ?x52129 l_0_11_318)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52328 (* ?x52126 l_0_11_317)))
 (let ((?x49793 (* 2.0 l_0_11_29)))
 (let ((?x50867 (* ?x49793 l_0_11_7)))
 (let ((?x22242 (* l_0_11_226 l_0_11_226)))
 (let ((?x22249 (* l_0_11_225 l_0_11_225)))
 (let ((?x22256 (* l_0_11_224 l_0_11_224)))
 (let ((?x22261 (* l_0_11_223 l_0_11_223)))
 (let ((?x22243 (- (- (- (- (* (* 2.0 l_0_11_10) l_0_11_32) ?x22261) ?x22256) ?x22249) ?x22242)))
 (let ((?x52882 (+ (+ (- (- (- (- (+ ?x22243 ?x50867) ?x52328) ?x52330) ?x52332) ?x52334) ?x50869) ?x50871)))
 (= (- (- (- (- ?x52882 ?x50873) ?x50875) ?x50877) ?x50879) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x50960 (* l_0_11_51 l_0_11_51)))
 (let ((?x50958 (* l_0_11_50 l_0_11_50)))
 (let ((?x50956 (* l_0_11_49 l_0_11_49)))
 (let ((?x50954 (* l_0_11_48 l_0_11_48)))
 (let ((?x50952 (* l_0_11_47 l_0_11_47)))
 (let ((?x52928 (* l_0_11_303 l_0_11_303)))
 (let ((?x52926 (* l_0_11_302 l_0_11_302)))
 (let ((?x52924 (* l_0_11_301 l_0_11_301)))
 (let ((?x52922 (* l_0_11_300 l_0_11_300)))
 (let ((?x52920 (* l_0_11_299 l_0_11_299)))
 (let ((?x52917 (* 2.0 l_0_11_262)))
 (let ((?x52918 (* ?x52917 l_0_11_266)))
 (let ((?x52914 (* 2.0 l_0_11_261)))
 (let ((?x52915 (* ?x52914 l_0_11_265)))
 (let ((?x52911 (* 2.0 l_0_11_260)))
 (let ((?x52912 (* ?x52911 l_0_11_264)))
 (let ((?x52908 (* 2.0 l_0_11_259)))
 (let ((?x52909 (* ?x52908 l_0_11_263)))
 (let ((?x50930 (* l_0_11_15 l_0_11_15)))
 (let ((?x50928 (* l_0_11_14 l_0_11_14)))
 (let ((?x50915 (* l_0_11_13 l_0_11_13)))
 (let ((?x52906 (+ (+ (+ (* l_0_11_11 l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x50915) ?x50928)))
 (let ((?x52923 (- (- (+ (+ (+ (+ (+ ?x52906 ?x50930) ?x52909) ?x52912) ?x52915) ?x52918) ?x52920) ?x52922)))
 (let ((?x52933 (- (- (- (- (- (- (- ?x52923 ?x52924) ?x52926) ?x52928) ?x50952) ?x50954) ?x50956) ?x50958)))
 (= (- ?x52933 ?x50960) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x51040 (* 2.0 l_0_11_51)))
 (let ((?x51041 (* ?x51040 l_0_11_56)))
 (let ((?x51037 (* 2.0 l_0_11_50)))
 (let ((?x51038 (* ?x51037 l_0_11_55)))
 (let ((?x51034 (* 2.0 l_0_11_49)))
 (let ((?x51035 (* ?x51034 l_0_11_54)))
 (let ((?x51031 (* 2.0 l_0_11_48)))
 (let ((?x51032 (* ?x51031 l_0_11_53)))
 (let ((?x51028 (* 2.0 l_0_11_47)))
 (let ((?x51029 (* ?x51028 l_0_11_52)))
 (let ((?x52982 (* 2.0 l_0_11_303)))
 (let ((?x52983 (* ?x52982 l_0_11_308)))
 (let ((?x52979 (* 2.0 l_0_11_302)))
 (let ((?x52980 (* ?x52979 l_0_11_307)))
 (let ((?x52976 (* 2.0 l_0_11_301)))
 (let ((?x52977 (* ?x52976 l_0_11_306)))
 (let ((?x52973 (* 2.0 l_0_11_300)))
 (let ((?x52974 (* ?x52973 l_0_11_305)))
 (let ((?x52970 (* 2.0 l_0_11_299)))
 (let ((?x52971 (* ?x52970 l_0_11_304)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52136 (* ?x52135 l_0_11_302)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52133 (* ?x52132 l_0_11_301)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52130 (* ?x52129 l_0_11_300)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52127 (* ?x52126 l_0_11_299)))
 (let ((?x52917 (* 2.0 l_0_11_262)))
 (let ((?x52964 (* ?x52917 l_0_11_271)))
 (let ((?x52914 (* 2.0 l_0_11_261)))
 (let ((?x52962 (* ?x52914 l_0_11_270)))
 (let ((?x52911 (* 2.0 l_0_11_260)))
 (let ((?x52960 (* ?x52911 l_0_11_269)))
 (let ((?x52908 (* 2.0 l_0_11_259)))
 (let ((?x52958 (* ?x52908 l_0_11_268)))
 (let ((?x50615 (* 2.0 l_0_11_190)))
 (let ((?x50616 (* ?x50615 l_0_11_194)))
 (let ((?x50612 (* 2.0 l_0_11_189)))
 (let ((?x50613 (* ?x50612 l_0_11_193)))
 (let ((?x50609 (* 2.0 l_0_11_188)))
 (let ((?x50610 (* ?x50609 l_0_11_192)))
 (let ((?x50606 (* 2.0 l_0_11_187)))
 (let ((?x50607 (* ?x50606 l_0_11_191)))
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50604 (* ?x50603 l_0_11_158)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50601 (* ?x50600 l_0_11_157)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50598 (* ?x50597 l_0_11_156)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50595 (* ?x50594 l_0_11_155)))
 (let ((?x50995 (* 2.0 l_0_11_15)))
 (let ((?x50996 (* ?x50995 l_0_11_20)))
 (let ((?x50992 (* 2.0 l_0_11_14)))
 (let ((?x50993 (* ?x50992 l_0_11_19)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x50990 (* ?x50332 l_0_11_18)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x50988 (* ?x49880 l_0_11_17)))
 (let ((?x22344 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_16) ?x50988) ?x50990) ?x50993) ?x50996)))
 (let ((?x52956 (- (- (- (+ (+ (+ (+ ?x22344 ?x50595) ?x50598) ?x50601) ?x50604) ?x50607) ?x50610) ?x50613)))
 (let ((?x52967 (+ (+ (+ (+ (+ (+ (- ?x52956 ?x50616) ?x52958) ?x52960) ?x52962) ?x52964) ?x52127) ?x52130)))
 (let ((?x52984 (- (- (- (- (- (+ (+ ?x52967 ?x52133) ?x52136) ?x52971) ?x52974) ?x52977) ?x52980) ?x52983)))
 (= (- (- (- (- (- ?x52984 ?x51029) ?x51032) ?x51035) ?x51038) ?x51041) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51040 (* 2.0 l_0_11_51)))
 (let ((?x51146 (* ?x51040 l_0_11_62)))
 (let ((?x51037 (* 2.0 l_0_11_50)))
 (let ((?x51144 (* ?x51037 l_0_11_61)))
 (let ((?x51034 (* 2.0 l_0_11_49)))
 (let ((?x51142 (* ?x51034 l_0_11_60)))
 (let ((?x51031 (* 2.0 l_0_11_48)))
 (let ((?x51140 (* ?x51031 l_0_11_59)))
 (let ((?x51028 (* 2.0 l_0_11_47)))
 (let ((?x51138 (* ?x51028 l_0_11_58)))
 (let ((?x52982 (* 2.0 l_0_11_303)))
 (let ((?x53049 (* ?x52982 l_0_11_314)))
 (let ((?x52979 (* 2.0 l_0_11_302)))
 (let ((?x53047 (* ?x52979 l_0_11_313)))
 (let ((?x52976 (* 2.0 l_0_11_301)))
 (let ((?x53045 (* ?x52976 l_0_11_312)))
 (let ((?x52973 (* 2.0 l_0_11_300)))
 (let ((?x53043 (* ?x52973 l_0_11_311)))
 (let ((?x52970 (* 2.0 l_0_11_299)))
 (let ((?x53041 (* ?x52970 l_0_11_310)))
 (let ((?x52917 (* 2.0 l_0_11_262)))
 (let ((?x53039 (* ?x52917 l_0_11_277)))
 (let ((?x52918 (* ?x52917 l_0_11_266)))
 (let ((?x52914 (* 2.0 l_0_11_261)))
 (let ((?x53036 (* ?x52914 l_0_11_276)))
 (let ((?x52915 (* ?x52914 l_0_11_265)))
 (let ((?x52911 (* 2.0 l_0_11_260)))
 (let ((?x53033 (* ?x52911 l_0_11_275)))
 (let ((?x52912 (* ?x52911 l_0_11_264)))
 (let ((?x52908 (* 2.0 l_0_11_259)))
 (let ((?x53030 (* ?x52908 l_0_11_274)))
 (let ((?x52909 (* ?x52908 l_0_11_263)))
 (let ((?x50995 (* 2.0 l_0_11_15)))
 (let ((?x51115 (* ?x50995 l_0_11_26)))
 (let ((?x50992 (* 2.0 l_0_11_14)))
 (let ((?x51111 (* ?x50992 l_0_11_25)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x51096 (* ?x50332 l_0_11_24)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x51092 (* ?x49880 l_0_11_23)))
 (let ((?x53028 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_22) ?x51092) ?x51096) ?x51111) ?x51115)))
 (let ((?x53038 (- (+ (- (+ (- (+ (- ?x53028 ?x52909) ?x53030) ?x52912) ?x53033) ?x52915) ?x53036) ?x52918)))
 (let ((?x53051 (- (- (- (- (- (- (+ ?x53038 ?x53039) ?x53041) ?x53043) ?x53045) ?x53047) ?x53049) ?x51138)))
 (= (- (- (- (- ?x53051 ?x51140) ?x51142) ?x51144) ?x51146) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51040 (* 2.0 l_0_11_51)))
 (let ((?x51217 (* ?x51040 l_0_11_69)))
 (let ((?x51037 (* 2.0 l_0_11_50)))
 (let ((?x51215 (* ?x51037 l_0_11_68)))
 (let ((?x51034 (* 2.0 l_0_11_49)))
 (let ((?x51213 (* ?x51034 l_0_11_67)))
 (let ((?x51031 (* 2.0 l_0_11_48)))
 (let ((?x51211 (* ?x51031 l_0_11_66)))
 (let ((?x51028 (* 2.0 l_0_11_47)))
 (let ((?x51209 (* ?x51028 l_0_11_65)))
 (let ((?x52982 (* 2.0 l_0_11_303)))
 (let ((?x53121 (* ?x52982 l_0_11_321)))
 (let ((?x52979 (* 2.0 l_0_11_302)))
 (let ((?x53119 (* ?x52979 l_0_11_320)))
 (let ((?x52976 (* 2.0 l_0_11_301)))
 (let ((?x53117 (* ?x52976 l_0_11_319)))
 (let ((?x52973 (* 2.0 l_0_11_300)))
 (let ((?x53115 (* ?x52973 l_0_11_318)))
 (let ((?x52970 (* 2.0 l_0_11_299)))
 (let ((?x53113 (* ?x52970 l_0_11_317)))
 (let ((?x52917 (* 2.0 l_0_11_262)))
 (let ((?x53111 (* ?x52917 l_0_11_284)))
 (let ((?x52914 (* 2.0 l_0_11_261)))
 (let ((?x53109 (* ?x52914 l_0_11_283)))
 (let ((?x52911 (* 2.0 l_0_11_260)))
 (let ((?x53107 (* ?x52911 l_0_11_282)))
 (let ((?x52908 (* 2.0 l_0_11_259)))
 (let ((?x53105 (* ?x52908 l_0_11_281)))
 (let ((?x50995 (* 2.0 l_0_11_15)))
 (let ((?x51187 (* ?x50995 l_0_11_33)))
 (let ((?x50992 (* 2.0 l_0_11_14)))
 (let ((?x51185 (* ?x50992 l_0_11_32)))
 (let ((?x50332 (* 2.0 l_0_11_13)))
 (let ((?x51183 (* ?x50332 l_0_11_31)))
 (let ((?x49880 (* 2.0 l_0_11_12)))
 (let ((?x51181 (* ?x49880 l_0_11_30)))
 (let ((?x53092 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_29) ?x51181) ?x51183) ?x51185) ?x51187)))
 (let ((?x53098 (- (- ?x53092 (* (* 2.0 l_0_11_223) l_0_11_227)) (* (* 2.0 l_0_11_224) l_0_11_228))))
 (let ((?x53104 (- (- ?x53098 (* (* 2.0 l_0_11_225) l_0_11_229)) (* (* 2.0 l_0_11_226) l_0_11_230))))
 (let ((?x53118 (- (- (- (+ (+ (+ (+ ?x53104 ?x53105) ?x53107) ?x53109) ?x53111) ?x53113) ?x53115) ?x53117)))
 (let ((?x53127 (- (- (- (- (- (- (- ?x53118 ?x53119) ?x53121) ?x51209) ?x51211) ?x51213) ?x51215) ?x51217)))
 (= ?x53127 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51315 (* l_0_11_57 l_0_11_57)))
 (let ((?x51313 (* l_0_11_56 l_0_11_56)))
 (let ((?x51311 (* l_0_11_55 l_0_11_55)))
 (let ((?x51309 (* l_0_11_54 l_0_11_54)))
 (let ((?x51307 (* l_0_11_53 l_0_11_53)))
 (let ((?x51305 (* l_0_11_52 l_0_11_52)))
 (let ((?x53199 (* l_0_11_309 l_0_11_309)))
 (let ((?x53197 (* l_0_11_308 l_0_11_308)))
 (let ((?x53195 (* l_0_11_307 l_0_11_307)))
 (let ((?x53193 (* l_0_11_306 l_0_11_306)))
 (let ((?x53191 (* l_0_11_305 l_0_11_305)))
 (let ((?x53189 (* l_0_11_304 l_0_11_304)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52213 (* ?x52135 l_0_11_307)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52211 (* ?x52132 l_0_11_306)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52209 (* ?x52129 l_0_11_305)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52207 (* ?x52126 l_0_11_304)))
 (let ((?x51303 (* l_0_11_21 l_0_11_21)))
 (let ((?x51297 (* l_0_11_20 l_0_11_20)))
 (let ((?x50615 (* 2.0 l_0_11_190)))
 (let ((?x50699 (* ?x50615 l_0_11_199)))
 (let ((?x51287 (* l_0_11_19 l_0_11_19)))
 (let ((?x50612 (* 2.0 l_0_11_189)))
 (let ((?x50697 (* ?x50612 l_0_11_198)))
 (let ((?x50609 (* 2.0 l_0_11_188)))
 (let ((?x50695 (* ?x50609 l_0_11_197)))
 (let ((?x50606 (* 2.0 l_0_11_187)))
 (let ((?x50693 (* ?x50606 l_0_11_196)))
 (let ((?x51285 (* l_0_11_18 l_0_11_18)))
 (let ((?x51283 (* l_0_11_17 l_0_11_17)))
 (let ((?x51319 (* l_0_11_16 l_0_11_16)))
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50674 (* ?x50603 l_0_11_163)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50670 (* ?x50600 l_0_11_162)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50666 (* ?x50597 l_0_11_161)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50662 (* ?x50594 l_0_11_160)))
 (let ((?x53178 (- (+ (+ (+ (+ (+ (+ ?x50662 ?x50666) ?x50670) ?x50674) ?x51319) ?x51283) ?x51285) ?x50693)))
 (let ((?x53185 (+ (+ (+ (- (+ (- (- ?x53178 ?x50695) ?x50697) ?x51287) ?x50699) ?x51297) ?x51303) ?x52207)))
 (let ((?x53196 (- (- (- (- (+ (+ (+ ?x53185 ?x52209) ?x52211) ?x52213) ?x53189) ?x53191) ?x53193) ?x53195)))
 (let ((?x53205 (- (- (- (- (- (- (- ?x53196 ?x53197) ?x53199) ?x51305) ?x51307) ?x51309) ?x51311) ?x51313)))
 (= (- ?x53205 ?x51315) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51435 (* 2.0 l_0_11_57)))
 (let ((?x51436 (* ?x51435 l_0_11_63)))
 (let ((?x51432 (* 2.0 l_0_11_56)))
 (let ((?x51433 (* ?x51432 l_0_11_62)))
 (let ((?x51429 (* 2.0 l_0_11_55)))
 (let ((?x51430 (* ?x51429 l_0_11_61)))
 (let ((?x51426 (* 2.0 l_0_11_54)))
 (let ((?x51427 (* ?x51426 l_0_11_60)))
 (let ((?x51423 (* 2.0 l_0_11_53)))
 (let ((?x51424 (* ?x51423 l_0_11_59)))
 (let ((?x51420 (* 2.0 l_0_11_52)))
 (let ((?x51421 (* ?x51420 l_0_11_58)))
 (let ((?x53260 (* 2.0 l_0_11_309)))
 (let ((?x53261 (* ?x53260 l_0_11_315)))
 (let ((?x53257 (* 2.0 l_0_11_308)))
 (let ((?x53258 (* ?x53257 l_0_11_314)))
 (let ((?x53254 (* 2.0 l_0_11_307)))
 (let ((?x53255 (* ?x53254 l_0_11_313)))
 (let ((?x53251 (* 2.0 l_0_11_306)))
 (let ((?x53252 (* ?x53251 l_0_11_312)))
 (let ((?x53248 (* 2.0 l_0_11_305)))
 (let ((?x53249 (* ?x53248 l_0_11_311)))
 (let ((?x53245 (* 2.0 l_0_11_304)))
 (let ((?x53246 (* ?x53245 l_0_11_310)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52267 (* ?x52135 l_0_11_313)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52265 (* ?x52132 l_0_11_312)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52263 (* ?x52129 l_0_11_311)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52261 (* ?x52126 l_0_11_310)))
 (let ((?x52917 (* 2.0 l_0_11_262)))
 (let ((?x52964 (* ?x52917 l_0_11_271)))
 (let ((?x52914 (* 2.0 l_0_11_261)))
 (let ((?x52962 (* ?x52914 l_0_11_270)))
 (let ((?x52911 (* 2.0 l_0_11_260)))
 (let ((?x52960 (* ?x52911 l_0_11_269)))
 (let ((?x52908 (* 2.0 l_0_11_259)))
 (let ((?x52958 (* ?x52908 l_0_11_268)))
 (let ((?x51417 (* 2.0 l_0_11_21)))
 (let ((?x51418 (* ?x51417 l_0_11_27)))
 (let ((?x51408 (* 2.0 l_0_11_20)))
 (let ((?x51409 (* ?x51408 l_0_11_26)))
 (let ((?x50615 (* 2.0 l_0_11_190)))
 (let ((?x50755 (* ?x50615 l_0_11_205)))
 (let ((?x51393 (* 2.0 l_0_11_19)))
 (let ((?x51394 (* ?x51393 l_0_11_25)))
 (let ((?x50612 (* 2.0 l_0_11_189)))
 (let ((?x50753 (* ?x50612 l_0_11_204)))
 (let ((?x50609 (* 2.0 l_0_11_188)))
 (let ((?x50751 (* ?x50609 l_0_11_203)))
 (let ((?x50606 (* 2.0 l_0_11_187)))
 (let ((?x50749 (* ?x50606 l_0_11_202)))
 (let ((?x50392 (* 2.0 l_0_11_18)))
 (let ((?x51391 (* ?x50392 l_0_11_24)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x51389 (* ?x49965 l_0_11_23)))
 (let ((?x49962 (* 2.0 l_0_11_16)))
 (let ((?x51369 (* ?x49962 l_0_11_22)))
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50747 (* ?x50603 l_0_11_169)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50745 (* ?x50600 l_0_11_168)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50743 (* ?x50597 l_0_11_167)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50741 (* ?x50594 l_0_11_166)))
 (let ((?x53230 (- (+ (+ (+ (+ (+ (+ ?x50741 ?x50743) ?x50745) ?x50747) ?x51369) ?x51389) ?x51391) ?x50749)))
 (let ((?x53237 (- (+ (+ (- (+ (- (- ?x53230 ?x50751) ?x50753) ?x51394) ?x50755) ?x51409) ?x51418) ?x52958)))
 (let ((?x53244 (+ (+ (+ (+ (- (- (- ?x53237 ?x52960) ?x52962) ?x52964) ?x52261) ?x52263) ?x52265) ?x52267)))
 (let ((?x53263 (- (- (- (- (- (- (- ?x53244 ?x53246) ?x53249) ?x53252) ?x53255) ?x53258) ?x53261) ?x51421)))
 (= (- (- (- (- (- ?x53263 ?x51424) ?x51427) ?x51430) ?x51433) ?x51436) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51435 (* 2.0 l_0_11_57)))
 (let ((?x51588 (* ?x51435 l_0_11_70)))
 (let ((?x51432 (* 2.0 l_0_11_56)))
 (let ((?x51586 (* ?x51432 l_0_11_69)))
 (let ((?x51429 (* 2.0 l_0_11_55)))
 (let ((?x51584 (* ?x51429 l_0_11_68)))
 (let ((?x51426 (* 2.0 l_0_11_54)))
 (let ((?x51582 (* ?x51426 l_0_11_67)))
 (let ((?x51423 (* 2.0 l_0_11_53)))
 (let ((?x51580 (* ?x51423 l_0_11_66)))
 (let ((?x51420 (* 2.0 l_0_11_52)))
 (let ((?x51578 (* ?x51420 l_0_11_65)))
 (let ((?x53260 (* 2.0 l_0_11_309)))
 (let ((?x53326 (* ?x53260 l_0_11_322)))
 (let ((?x53257 (* 2.0 l_0_11_308)))
 (let ((?x53324 (* ?x53257 l_0_11_321)))
 (let ((?x53254 (* 2.0 l_0_11_307)))
 (let ((?x53322 (* ?x53254 l_0_11_320)))
 (let ((?x53251 (* 2.0 l_0_11_306)))
 (let ((?x53320 (* ?x53251 l_0_11_319)))
 (let ((?x53248 (* 2.0 l_0_11_305)))
 (let ((?x53318 (* ?x53248 l_0_11_318)))
 (let ((?x53245 (* 2.0 l_0_11_304)))
 (let ((?x53316 (* ?x53245 l_0_11_317)))
 (let ((?x52135 (* 2.0 l_0_11_298)))
 (let ((?x52334 (* ?x52135 l_0_11_320)))
 (let ((?x52132 (* 2.0 l_0_11_297)))
 (let ((?x52332 (* ?x52132 l_0_11_319)))
 (let ((?x52129 (* 2.0 l_0_11_296)))
 (let ((?x52330 (* ?x52129 l_0_11_318)))
 (let ((?x52126 (* 2.0 l_0_11_295)))
 (let ((?x52328 (* ?x52126 l_0_11_317)))
 (let ((?x51417 (* 2.0 l_0_11_21)))
 (let ((?x51576 (* ?x51417 l_0_11_34)))
 (let ((?x51408 (* 2.0 l_0_11_20)))
 (let ((?x51570 (* ?x51408 l_0_11_33)))
 (let ((?x50615 (* 2.0 l_0_11_190)))
 (let ((?x50865 (* ?x50615 l_0_11_212)))
 (let ((?x51393 (* 2.0 l_0_11_19)))
 (let ((?x51560 (* ?x51393 l_0_11_32)))
 (let ((?x50612 (* 2.0 l_0_11_189)))
 (let ((?x50863 (* ?x50612 l_0_11_211)))
 (let ((?x50609 (* 2.0 l_0_11_188)))
 (let ((?x50861 (* ?x50609 l_0_11_210)))
 (let ((?x50606 (* 2.0 l_0_11_187)))
 (let ((?x50859 (* ?x50606 l_0_11_209)))
 (let ((?x50392 (* 2.0 l_0_11_18)))
 (let ((?x51558 (* ?x50392 l_0_11_31)))
 (let ((?x49965 (* 2.0 l_0_11_17)))
 (let ((?x51556 (* ?x49965 l_0_11_30)))
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50857 (* ?x50603 l_0_11_176)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50855 (* ?x50600 l_0_11_175)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50853 (* ?x50597 l_0_11_174)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50851 (* ?x50594 l_0_11_173)))
 (let ((?x53294 (+ (+ (+ (+ ?x50851 ?x50853) ?x50855) ?x50857) (* (* 2.0 l_0_11_16) l_0_11_29))))
 (let ((?x53301 (- (+ (- (- (- (+ (+ ?x53294 ?x51556) ?x51558) ?x50859) ?x50861) ?x50863) ?x51560) ?x50865)))
 (let ((?x53307 (- (- (+ (+ ?x53301 ?x51570) ?x51576) (* (* 2.0 l_0_11_223) l_0_11_232)) (* (* 2.0 l_0_11_224) l_0_11_233))))
 (let ((?x53311 (- (- ?x53307 (* (* 2.0 l_0_11_225) l_0_11_234)) (* (* 2.0 l_0_11_226) l_0_11_235))))
 (let ((?x53321 (- (- (- (+ (+ (+ (+ ?x53311 ?x52328) ?x52330) ?x52332) ?x52334) ?x53316) ?x53318) ?x53320)))
 (let ((?x53331 (- (- (- (- (- (- (- ?x53321 ?x53322) ?x53324) ?x53326) ?x51578) ?x51580) ?x51582) ?x51584)))
 (= (- (- ?x53331 ?x51586) ?x51588) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51659 (* l_0_11_64 l_0_11_64)))
 (let ((?x51657 (* l_0_11_63 l_0_11_63)))
 (let ((?x51655 (* l_0_11_62 l_0_11_62)))
 (let ((?x51653 (* l_0_11_61 l_0_11_61)))
 (let ((?x51651 (* l_0_11_60 l_0_11_60)))
 (let ((?x51649 (* l_0_11_59 l_0_11_59)))
 (let ((?x51647 (* l_0_11_58 l_0_11_58)))
 (let ((?x53380 (* l_0_11_316 l_0_11_316)))
 (let ((?x53378 (* l_0_11_315 l_0_11_315)))
 (let ((?x53376 (* l_0_11_314 l_0_11_314)))
 (let ((?x53374 (* l_0_11_313 l_0_11_313)))
 (let ((?x53372 (* l_0_11_312 l_0_11_312)))
 (let ((?x53370 (* l_0_11_311 l_0_11_311)))
 (let ((?x53368 (* l_0_11_310 l_0_11_310)))
 (let ((?x51645 (* l_0_11_28 l_0_11_28)))
 (let ((?x51643 (* l_0_11_27 l_0_11_27)))
 (let ((?x52917 (* 2.0 l_0_11_262)))
 (let ((?x53039 (* ?x52917 l_0_11_277)))
 (let ((?x52914 (* 2.0 l_0_11_261)))
 (let ((?x53036 (* ?x52914 l_0_11_276)))
 (let ((?x52911 (* 2.0 l_0_11_260)))
 (let ((?x53033 (* ?x52911 l_0_11_275)))
 (let ((?x51641 (* l_0_11_26 l_0_11_26)))
 (let ((?x52908 (* 2.0 l_0_11_259)))
 (let ((?x53030 (* ?x52908 l_0_11_274)))
 (let ((?x51639 (* l_0_11_25 l_0_11_25)))
 (let ((?x51637 (* l_0_11_24 l_0_11_24)))
 (let ((?x53360 (+ (+ (+ (* l_0_11_22 l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x51637) ?x51639)))
 (let ((?x53367 (+ (+ (- (- (- (+ (- ?x53360 ?x53030) ?x51641) ?x53033) ?x53036) ?x53039) ?x51643) ?x51645)))
 (let ((?x53381 (- (- (- (- (- (- (- ?x53367 ?x53368) ?x53370) ?x53372) ?x53374) ?x53376) ?x53378) ?x53380)))
 (let ((?x53388 (- (- (- (- (- (- (- ?x53381 ?x51647) ?x51649) ?x51651) ?x51653) ?x51655) ?x51657) ?x51659)))
 (= ?x53388 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x51810 (* (* 2.0 l_0_11_64) l_0_11_71)))
 (let ((?x51807 (* (* 2.0 l_0_11_63) l_0_11_70)))
 (let ((?x51804 (* (* 2.0 l_0_11_62) l_0_11_69)))
 (let ((?x51801 (* (* 2.0 l_0_11_61) l_0_11_68)))
 (let ((?x51798 (* (* 2.0 l_0_11_60) l_0_11_67)))
 (let ((?x51795 (* (* 2.0 l_0_11_59) l_0_11_66)))
 (let ((?x51792 (* (* 2.0 l_0_11_58) l_0_11_65)))
 (let ((?x53443 (* (* 2.0 l_0_11_316) l_0_11_323)))
 (let ((?x53440 (* (* 2.0 l_0_11_315) l_0_11_322)))
 (let ((?x53437 (* (* 2.0 l_0_11_314) l_0_11_321)))
 (let ((?x53434 (* (* 2.0 l_0_11_313) l_0_11_320)))
 (let ((?x53431 (* (* 2.0 l_0_11_312) l_0_11_319)))
 (let ((?x53428 (* (* 2.0 l_0_11_311) l_0_11_318)))
 (let ((?x53425 (* (* 2.0 l_0_11_310) l_0_11_317)))
 (let ((?x51789 (* (* 2.0 l_0_11_28) l_0_11_35)))
 (let ((?x51786 (* (* 2.0 l_0_11_27) l_0_11_34)))
 (let ((?x52917 (* 2.0 l_0_11_262)))
 (let ((?x53111 (* ?x52917 l_0_11_284)))
 (let ((?x52914 (* 2.0 l_0_11_261)))
 (let ((?x53109 (* ?x52914 l_0_11_283)))
 (let ((?x52911 (* 2.0 l_0_11_260)))
 (let ((?x53107 (* ?x52911 l_0_11_282)))
 (let ((?x51783 (* (* 2.0 l_0_11_26) l_0_11_33)))
 (let ((?x52908 (* 2.0 l_0_11_259)))
 (let ((?x53105 (* ?x52908 l_0_11_281)))
 (let ((?x51780 (* (* 2.0 l_0_11_25) l_0_11_32)))
 (let ((?x50467 (* 2.0 l_0_11_24)))
 (let ((?x51777 (* ?x50467 l_0_11_31)))
 (let ((?x50076 (* 2.0 l_0_11_23)))
 (let ((?x51775 (* ?x50076 l_0_11_30)))
 (let ((?x50462 (* 2.0 l_0_11_22)))
 (let ((?x51773 (* ?x50462 l_0_11_29)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49776 (* ?x49723 l_0_11_152)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x20768 (* ?x49883 l_0_11_151)))
 (let ((?x23007 (+ (* (* 1.0 l_0_11_110) l_0_11_115) (* (* 1.0 l_0_11_111) l_0_11_116))))
 (let ((?x22999 (- (+ (- (- ?x23007 ?x20768) ?x49776) ?x51773) (* (* 2.0 l_0_11_223) l_0_11_238))))
 (let ((?x53411 (- (- ?x22999 (* (* 2.0 l_0_11_224) l_0_11_239)) (* (* 2.0 l_0_11_225) l_0_11_240))))
 (let ((?x53416 (+ (+ (+ (- ?x53411 (* (* 2.0 l_0_11_226) l_0_11_241)) ?x51775) ?x51777) ?x51780)))
 (let ((?x53423 (+ (+ (- (- (- (+ (- ?x53416 ?x53105) ?x51783) ?x53107) ?x53109) ?x53111) ?x51786) ?x51789)))
 (let ((?x53444 (- (- (- (- (- (- (- ?x53423 ?x53425) ?x53428) ?x53431) ?x53434) ?x53437) ?x53440) ?x53443)))
 (let ((?x53451 (- (- (- (- (- (- (- ?x53444 ?x51792) ?x51795) ?x51798) ?x51801) ?x51804) ?x51807) ?x51810)))
 (let ((?x53455 (- (- ?x53451 (* (* 1.0 l_0_11_74) l_0_11_79)) (* (* 1.0 l_0_11_75) l_0_11_80))))
 (= ?x53455 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51942 (* l_0_11_72 l_0_11_72)))
 (let ((?x51940 (* l_0_11_71 l_0_11_71)))
 (let ((?x51938 (* l_0_11_70 l_0_11_70)))
 (let ((?x51936 (* l_0_11_69 l_0_11_69)))
 (let ((?x51934 (* l_0_11_68 l_0_11_68)))
 (let ((?x51932 (* l_0_11_67 l_0_11_67)))
 (let ((?x51930 (* l_0_11_66 l_0_11_66)))
 (let ((?x51928 (* l_0_11_65 l_0_11_65)))
 (let ((?x51926 (* l_0_11_36 l_0_11_36)))
 (let ((?x51924 (* l_0_11_35 l_0_11_35)))
 (let ((?x51922 (* l_0_11_34 l_0_11_34)))
 (let ((?x51920 (* l_0_11_33 l_0_11_33)))
 (let ((?x53534 (* l_0_11_324 l_0_11_324)))
 (let ((?x53532 (* l_0_11_323 l_0_11_323)))
 (let ((?x53530 (* l_0_11_322 l_0_11_322)))
 (let ((?x53528 (* l_0_11_321 l_0_11_321)))
 (let ((?x53526 (* l_0_11_320 l_0_11_320)))
 (let ((?x51918 (* l_0_11_32 l_0_11_32)))
 (let ((?x53523 (* l_0_11_319 l_0_11_319)))
 (let ((?x53521 (* l_0_11_318 l_0_11_318)))
 (let ((?x53519 (* l_0_11_317 l_0_11_317)))
 (let ((?x51916 (* l_0_11_31 l_0_11_31)))
 (let ((?x51914 (* l_0_11_30 l_0_11_30)))
 (let ((?x51912 (* l_0_11_29 l_0_11_29)))
 (let ((?x53511 (- (* (* (- 2.0) l_0_11_223) l_0_11_245) (* (* 2.0 l_0_11_224) l_0_11_246))))
 (let ((?x53515 (- (- ?x53511 (* (* 2.0 l_0_11_225) l_0_11_247)) (* (* 2.0 l_0_11_226) l_0_11_248))))
 (let ((?x53525 (+ (- (- (- (+ (+ (+ ?x53515 ?x51912) ?x51914) ?x51916) ?x53519) ?x53521) ?x53523) ?x51918)))
 (let ((?x53537 (+ (+ (- (- (- (- (- ?x53525 ?x53526) ?x53528) ?x53530) ?x53532) ?x53534) ?x51920) ?x51922)))
 (let ((?x53544 (- (- (- (- (- (+ (+ ?x53537 ?x51924) ?x51926) ?x51928) ?x51930) ?x51932) ?x51934) ?x51936)))
 (= (- (- (- ?x53544 ?x51938) ?x51940) ?x51942) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x49391 (* l_0_11_145 l_0_11_145)))
 (let ((?x22863 (* l_0_11_109 l_0_11_109)))
 (let ((?x22869 (* (/ 1.0 2.0) ?x22863)))
 (= (- (- ?x22869 ?x49391) (* (* (/ 1.0 2.0) l_0_11_73) l_0_11_73)) 0.0)))))
(assert
 (let ((?x53443 (* (* 2.0 l_0_11_316) l_0_11_323)))
 (let ((?x53440 (* (* 2.0 l_0_11_315) l_0_11_322)))
 (let ((?x53437 (* (* 2.0 l_0_11_314) l_0_11_321)))
 (let ((?x53434 (* (* 2.0 l_0_11_313) l_0_11_320)))
 (let ((?x53431 (* (* 2.0 l_0_11_312) l_0_11_319)))
 (let ((?x53428 (* (* 2.0 l_0_11_311) l_0_11_318)))
 (let ((?x53425 (* (* 2.0 l_0_11_310) l_0_11_317)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x53619 (* ?x52121 l_0_11_281)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49429 (* ?x49428 l_0_11_146)))
 (let ((?x23222 (+ (* (* 2.0 l_0_11_100) l_0_11_107) (* (* 2.0 l_0_11_101) l_0_11_94))))
 (let ((?x53584 (+ (+ ?x23222 (* (* 2.0 l_0_11_102) l_0_11_95)) (* (* 2.0 l_0_11_103) l_0_11_96))))
 (let ((?x53589 (+ (+ ?x53584 (* (* 2.0 l_0_11_104) l_0_11_97)) (* (* 2.0 l_0_11_105) l_0_11_98))))
 (let ((?x53594 (+ (+ ?x53589 (* (* 2.0 l_0_11_106) l_0_11_99)) (* (* 1.0 l_0_11_109) l_0_11_110))))
 (let ((?x53600 (- (- ?x53594 (* (* 2.0 l_0_11_130) l_0_11_137)) (* (* 2.0 l_0_11_131) l_0_11_138))))
 (let ((?x53606 (- (- ?x53600 (* (* 2.0 l_0_11_132) l_0_11_139)) (* (* 2.0 l_0_11_133) l_0_11_140))))
 (let ((?x53612 (- (- ?x53606 (* (* 2.0 l_0_11_134) l_0_11_141)) (* (* 2.0 l_0_11_135) l_0_11_142))))
 (let ((?x53618 (- (- (- ?x53612 (* (* 2.0 l_0_11_136) l_0_11_143)) ?x49429) (* (* 2.0 l_0_11_217) l_0_11_238))))
 (let ((?x53626 (- (- (- (- (- (- (- ?x53618 ?x53619) ?x53425) ?x53428) ?x53431) ?x53434) ?x53437) ?x53440)))
 (= (- (- ?x53626 ?x53443) (* (* 1.0 l_0_11_73) l_0_11_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x16435 (* ?x49428 l_0_11_151)))
 (let ((?x53693 (- (- (* (* 1.0 l_0_11_109) l_0_11_115) ?x16435) (* (* 1.0 l_0_11_73) l_0_11_79))))
 (= ?x53693 0.0)))))
(assert
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49529 (* ?x49428 l_0_11_155)))
 (let ((?x53706 (- (- (* (* 1.0 l_0_11_109) l_0_11_119) ?x49529) (* (* 1.0 l_0_11_73) l_0_11_83))))
 (= ?x53706 0.0)))))
(assert
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49552 (* ?x49428 l_0_11_160)))
 (let ((?x53721 (- (- (* (* 1.0 l_0_11_109) l_0_11_124) ?x49552) (* (* 1.0 l_0_11_73) l_0_11_88))))
 (= ?x53721 0.0)))))
(assert
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49578 (* ?x49428 l_0_11_166)))
 (let ((?x53733 (- (- (* (* 1.0 l_0_11_109) l_0_11_130) ?x49578) (* (* 1.0 l_0_11_73) l_0_11_94))))
 (= ?x53733 0.0)))))
(assert
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49613 (* ?x49428 l_0_11_173)))
 (let ((?x53744 (+ (* (* (- 1.0) l_0_11_101) l_0_11_73) (* (* 1.0 l_0_11_109) l_0_11_137))))
 (= (- ?x53744 ?x49613) 0.0)))))
(assert
 (let ((?x53807 (* (* 2.0 l_0_11_280) l_0_11_287)))
 (let ((?x53804 (* (* 2.0 l_0_11_279) l_0_11_286)))
 (let ((?x53801 (* (* 2.0 l_0_11_278) l_0_11_285)))
 (let ((?x53798 (* (* 2.0 l_0_11_277) l_0_11_284)))
 (let ((?x53795 (* (* 2.0 l_0_11_276) l_0_11_283)))
 (let ((?x53792 (* (* 2.0 l_0_11_275) l_0_11_282)))
 (let ((?x53789 (* (* 2.0 l_0_11_274) l_0_11_281)))
 (let ((?x53785 (* 2.0 l_0_11_267)))
 (let ((?x53786 (* ?x53785 l_0_11_285)))
 (let ((?x53782 (* 2.0 l_0_11_266)))
 (let ((?x53783 (* ?x53782 l_0_11_284)))
 (let ((?x53779 (* 2.0 l_0_11_265)))
 (let ((?x53780 (* ?x53779 l_0_11_283)))
 (let ((?x53776 (* 2.0 l_0_11_264)))
 (let ((?x53777 (* ?x53776 l_0_11_282)))
 (let ((?x53773 (* 2.0 l_0_11_263)))
 (let ((?x53774 (* ?x53773 l_0_11_281)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49886 (* ?x49723 l_0_11_156)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x49884 (* ?x49883 l_0_11_155)))
 (let ((?x53755 (+ (* (* 1.0 l_0_11_110) l_0_11_119) (* (* 1.0 l_0_11_111) l_0_11_120))))
 (let ((?x53763 (- (- (- (- ?x53755 ?x49884) ?x49886) (* (* 2.0 l_0_11_227) l_0_11_238)) (* (* 2.0 l_0_11_228) l_0_11_239))))
 (let ((?x53769 (- (- ?x53763 (* (* 2.0 l_0_11_229) l_0_11_240)) (* (* 2.0 l_0_11_230) l_0_11_241))))
 (let ((?x53781 (- (- (- (- ?x53769 (* (* 2.0 l_0_11_231) l_0_11_242)) ?x53774) ?x53777) ?x53780)))
 (let ((?x53802 (+ (+ (+ (+ (+ (- (- ?x53781 ?x53783) ?x53786) ?x53789) ?x53792) ?x53795) ?x53798) ?x53801)))
 (let ((?x53812 (- (- (+ (+ ?x53802 ?x53804) ?x53807) (* (* 1.0 l_0_11_74) l_0_11_83)) (* (* 1.0 l_0_11_75) l_0_11_84))))
 (= ?x53812 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x53443 (* (* 2.0 l_0_11_316) l_0_11_323)))
 (let ((?x53440 (* (* 2.0 l_0_11_315) l_0_11_322)))
 (let ((?x53437 (* (* 2.0 l_0_11_314) l_0_11_321)))
 (let ((?x53434 (* (* 2.0 l_0_11_313) l_0_11_320)))
 (let ((?x53431 (* (* 2.0 l_0_11_312) l_0_11_319)))
 (let ((?x53428 (* (* 2.0 l_0_11_311) l_0_11_318)))
 (let ((?x53425 (* (* 2.0 l_0_11_310) l_0_11_317)))
 (let ((?x53900 (* 2.0 l_0_11_273)))
 (let ((?x53901 (* ?x53900 l_0_11_286)))
 (let ((?x53897 (* 2.0 l_0_11_272)))
 (let ((?x53898 (* ?x53897 l_0_11_285)))
 (let ((?x53894 (* 2.0 l_0_11_271)))
 (let ((?x53895 (* ?x53894 l_0_11_284)))
 (let ((?x53891 (* 2.0 l_0_11_270)))
 (let ((?x53892 (* ?x53891 l_0_11_283)))
 (let ((?x53888 (* 2.0 l_0_11_269)))
 (let ((?x53889 (* ?x53888 l_0_11_282)))
 (let ((?x53885 (* 2.0 l_0_11_268)))
 (let ((?x53886 (* ?x53885 l_0_11_281)))
 (let ((?x51771 (* (* 2.0 l_0_11_208) l_0_11_215)))
 (let ((?x51768 (* (* 2.0 l_0_11_207) l_0_11_214)))
 (let ((?x51765 (* (* 2.0 l_0_11_206) l_0_11_213)))
 (let ((?x51762 (* (* 2.0 l_0_11_205) l_0_11_212)))
 (let ((?x51759 (* (* 2.0 l_0_11_204) l_0_11_211)))
 (let ((?x51756 (* (* 2.0 l_0_11_203) l_0_11_210)))
 (let ((?x51753 (* (* 2.0 l_0_11_202) l_0_11_209)))
 (let ((?x51750 (* (* 2.0 l_0_11_172) l_0_11_179)))
 (let ((?x51747 (* (* 2.0 l_0_11_171) l_0_11_178)))
 (let ((?x51744 (* (* 2.0 l_0_11_170) l_0_11_177)))
 (let ((?x51741 (* (* 2.0 l_0_11_169) l_0_11_176)))
 (let ((?x51738 (* (* 2.0 l_0_11_168) l_0_11_175)))
 (let ((?x51735 (* (* 2.0 l_0_11_167) l_0_11_174)))
 (let ((?x51732 (* (* 2.0 l_0_11_166) l_0_11_173)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49938 (* ?x49723 l_0_11_161)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x53850 (* ?x49883 l_0_11_160)))
 (let ((?x53849 (+ (* (* 1.0 l_0_11_110) l_0_11_124) (* (* 1.0 l_0_11_111) l_0_11_125))))
 (let ((?x53857 (+ (+ (+ (+ (+ (- (- ?x53849 ?x53850) ?x49938) ?x51732) ?x51735) ?x51738) ?x51741) ?x51744)))
 (let ((?x53864 (- (- (- (- (- (+ (+ ?x53857 ?x51747) ?x51750) ?x51753) ?x51756) ?x51759) ?x51762) ?x51765)))
 (let ((?x53872 (- (- (- (- ?x53864 ?x51768) ?x51771) (* (* 2.0 l_0_11_232) l_0_11_238)) (* (* 2.0 l_0_11_233) l_0_11_239))))
 (let ((?x53878 (- (- ?x53872 (* (* 2.0 l_0_11_234) l_0_11_240)) (* (* 2.0 l_0_11_235) l_0_11_241))))
 (let ((?x53884 (- (- ?x53878 (* (* 2.0 l_0_11_236) l_0_11_242)) (* (* 2.0 l_0_11_237) l_0_11_243))))
 (let ((?x53903 (+ (- (- (- (- (- (- ?x53884 ?x53886) ?x53889) ?x53892) ?x53895) ?x53898) ?x53901) ?x53425)))
 (let ((?x53911 (- (+ (+ (+ (+ (+ (+ ?x53903 ?x53428) ?x53431) ?x53434) ?x53437) ?x53440) ?x53443) (* (* 1.0 l_0_11_74) l_0_11_88))))
 (= (- ?x53911 (* (* 1.0 l_0_11_75) l_0_11_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x53807 (* (* 2.0 l_0_11_280) l_0_11_287)))
 (let ((?x53804 (* (* 2.0 l_0_11_279) l_0_11_286)))
 (let ((?x53801 (* (* 2.0 l_0_11_278) l_0_11_285)))
 (let ((?x53798 (* (* 2.0 l_0_11_277) l_0_11_284)))
 (let ((?x53795 (* (* 2.0 l_0_11_276) l_0_11_283)))
 (let ((?x53792 (* (* 2.0 l_0_11_275) l_0_11_282)))
 (let ((?x53789 (* (* 2.0 l_0_11_274) l_0_11_281)))
 (let ((?x53955 (* l_0_11_244 l_0_11_244)))
 (let ((?x53953 (* l_0_11_243 l_0_11_243)))
 (let ((?x53951 (* l_0_11_242 l_0_11_242)))
 (let ((?x53949 (* l_0_11_241 l_0_11_241)))
 (let ((?x53947 (* l_0_11_240 l_0_11_240)))
 (let ((?x53945 (* l_0_11_239 l_0_11_239)))
 (let ((?x53943 (* l_0_11_238 l_0_11_238)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x50062 (* ?x49723 l_0_11_167)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x50059 (* ?x49883 l_0_11_166)))
 (let ((?x53940 (+ (* (* 1.0 l_0_11_110) l_0_11_130) (* (* 1.0 l_0_11_111) l_0_11_131))))
 (let ((?x53952 (- (- (- (- (- (- (- ?x53940 ?x50059) ?x50062) ?x53943) ?x53945) ?x53947) ?x53949) ?x53951)))
 (let ((?x53961 (- (- (- (- (- (- (- ?x53952 ?x53953) ?x53955) ?x53789) ?x53792) ?x53795) ?x53798) ?x53801)))
 (let ((?x53967 (- (- (- (- ?x53961 ?x53804) ?x53807) (* (* 1.0 l_0_11_74) l_0_11_94)) (* (* 1.0 l_0_11_75) l_0_11_95))))
 (= ?x53967 0.0))))))))))))))))))))))))
(assert
 (let ((?x54026 (* l_0_11_288 l_0_11_288)))
 (let ((?x54024 (* l_0_11_287 l_0_11_287)))
 (let ((?x54022 (* l_0_11_286 l_0_11_286)))
 (let ((?x54020 (* l_0_11_285 l_0_11_285)))
 (let ((?x54018 (* l_0_11_284 l_0_11_284)))
 (let ((?x54016 (* l_0_11_283 l_0_11_283)))
 (let ((?x54014 (* l_0_11_282 l_0_11_282)))
 (let ((?x54012 (* l_0_11_281 l_0_11_281)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x50147 (* ?x49723 l_0_11_174)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x53988 (* ?x49883 l_0_11_173)))
 (let ((?x23867 (- (* (* (- 1.0) l_0_11_101) l_0_11_74) (* (* 1.0 l_0_11_102) l_0_11_75))))
 (let ((?x53987 (+ (+ ?x23867 (* (* 1.0 l_0_11_110) l_0_11_137)) (* (* 1.0 l_0_11_111) l_0_11_138))))
 (let ((?x53996 (- (- (- (- ?x53987 ?x53988) ?x50147) (* (* 2.0 l_0_11_238) l_0_11_245)) (* (* 2.0 l_0_11_239) l_0_11_246))))
 (let ((?x54002 (- (- ?x53996 (* (* 2.0 l_0_11_240) l_0_11_247)) (* (* 2.0 l_0_11_241) l_0_11_248))))
 (let ((?x54008 (- (- ?x54002 (* (* 2.0 l_0_11_242) l_0_11_249)) (* (* 2.0 l_0_11_243) l_0_11_250))))
 (let ((?x54017 (- (- (- (- ?x54008 (* (* 2.0 l_0_11_244) l_0_11_251)) ?x54012) ?x54014) ?x54016)))
 (= (- (- (- (- (- ?x54017 ?x54018) ?x54020) ?x54022) ?x54024) ?x54026) 0.0))))))))))))))))))))
(assert
 (let ((?x50539 (* l_0_11_154 l_0_11_154)))
 (let ((?x50537 (* l_0_11_153 l_0_11_153)))
 (let ((?x50535 (* l_0_11_152 l_0_11_152)))
 (let ((?x17006 (* l_0_11_151 l_0_11_151)))
 (let ((?x24004 (+ (* (/ 1.0 2.0) (* l_0_11_115 l_0_11_115)) (* (/ 1.0 2.0) (* l_0_11_116 l_0_11_116)))))
 (let ((?x54063 (+ (+ ?x24004 (* (/ 1.0 2.0) (* l_0_11_117 l_0_11_117))) (* (/ 1.0 2.0) (* l_0_11_118 l_0_11_118)))))
 (let ((?x54070 (- (- (- (- (- ?x54063 ?x17006) ?x50535) ?x50537) ?x50539) (* (* (/ 1.0 2.0) l_0_11_79) l_0_11_79))))
 (let ((?x54076 (- (- ?x54070 (* (* (/ 1.0 2.0) l_0_11_80) l_0_11_80)) (* (* (/ 1.0 2.0) l_0_11_81) l_0_11_81))))
 (= (- ?x54076 (* (* (/ 1.0 2.0) l_0_11_82) l_0_11_82)) 0.0))))))))))
(assert
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50604 (* ?x50603 l_0_11_158)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50601 (* ?x50600 l_0_11_157)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50598 (* ?x50597 l_0_11_156)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50595 (* ?x50594 l_0_11_155)))
 (let ((?x54091 (+ (* (* 1.0 l_0_11_115) l_0_11_119) (* (* 1.0 l_0_11_116) l_0_11_120))))
 (let ((?x54097 (+ (+ ?x54091 (* (* 1.0 l_0_11_117) l_0_11_121)) (* (* 1.0 l_0_11_118) l_0_11_122))))
 (let ((?x54104 (- (- (- (- (- ?x54097 ?x50595) ?x50598) ?x50601) ?x50604) (* (* 1.0 l_0_11_79) l_0_11_83))))
 (let ((?x54110 (- (- ?x54104 (* (* 1.0 l_0_11_80) l_0_11_84)) (* (* 1.0 l_0_11_81) l_0_11_85))))
 (= (- ?x54110 (* (* 1.0 l_0_11_82) l_0_11_86)) 0.0))))))))))))))
(assert
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50674 (* ?x50603 l_0_11_163)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50670 (* ?x50600 l_0_11_162)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50666 (* ?x50597 l_0_11_161)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50662 (* ?x50594 l_0_11_160)))
 (let ((?x54135 (+ (* (* 1.0 l_0_11_115) l_0_11_124) (* (* 1.0 l_0_11_116) l_0_11_125))))
 (let ((?x54139 (+ (+ ?x54135 (* (* 1.0 l_0_11_117) l_0_11_126)) (* (* 1.0 l_0_11_118) l_0_11_127))))
 (let ((?x54145 (- (- (- (- (- ?x54139 ?x50662) ?x50666) ?x50670) ?x50674) (* (* 1.0 l_0_11_79) l_0_11_88))))
 (let ((?x54149 (- (- ?x54145 (* (* 1.0 l_0_11_80) l_0_11_89)) (* (* 1.0 l_0_11_81) l_0_11_90))))
 (= (- ?x54149 (* (* 1.0 l_0_11_82) l_0_11_91)) 0.0))))))))))))))
(assert
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50747 (* ?x50603 l_0_11_169)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50745 (* ?x50600 l_0_11_168)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50743 (* ?x50597 l_0_11_167)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50741 (* ?x50594 l_0_11_166)))
 (let ((?x24211 (+ (* (* 1.0 l_0_11_115) l_0_11_130) (* (* 1.0 l_0_11_116) l_0_11_131))))
 (let ((?x54162 (+ (+ ?x24211 (* (* 1.0 l_0_11_117) l_0_11_132)) (* (* 1.0 l_0_11_118) l_0_11_133))))
 (let ((?x54168 (- (- (- (- (- ?x54162 ?x50741) ?x50743) ?x50745) ?x50747) (* (* 1.0 l_0_11_79) l_0_11_94))))
 (let ((?x54172 (- (- ?x54168 (* (* 1.0 l_0_11_80) l_0_11_95)) (* (* 1.0 l_0_11_81) l_0_11_96))))
 (= (- ?x54172 (* (* 1.0 l_0_11_82) l_0_11_97)) 0.0))))))))))))))
(assert
 (let ((?x50603 (* 2.0 l_0_11_154)))
 (let ((?x50857 (* ?x50603 l_0_11_176)))
 (let ((?x50600 (* 2.0 l_0_11_153)))
 (let ((?x50855 (* ?x50600 l_0_11_175)))
 (let ((?x50597 (* 2.0 l_0_11_152)))
 (let ((?x50853 (* ?x50597 l_0_11_174)))
 (let ((?x50594 (* 2.0 l_0_11_151)))
 (let ((?x50851 (* ?x50594 l_0_11_173)))
 (let ((?x54203 (- (* (* (- 1.0) l_0_11_101) l_0_11_79) (* (* 1.0 l_0_11_102) l_0_11_80))))
 (let ((?x54208 (- (- ?x54203 (* (* 1.0 l_0_11_103) l_0_11_81)) (* (* 1.0 l_0_11_104) l_0_11_82))))
 (let ((?x54212 (+ (+ ?x54208 (* (* 1.0 l_0_11_115) l_0_11_137)) (* (* 1.0 l_0_11_116) l_0_11_138))))
 (let ((?x54216 (+ (+ ?x54212 (* (* 1.0 l_0_11_117) l_0_11_139)) (* (* 1.0 l_0_11_118) l_0_11_140))))
 (= (- (- (- (- ?x54216 ?x50851) ?x50853) ?x50855) ?x50857) 0.0))))))))))))))
(assert
 (let ((?x50940 (* l_0_11_159 l_0_11_159)))
 (let ((?x50938 (* l_0_11_158 l_0_11_158)))
 (let ((?x50936 (* l_0_11_157 l_0_11_157)))
 (let ((?x50934 (* l_0_11_156 l_0_11_156)))
 (let ((?x50932 (* l_0_11_155 l_0_11_155)))
 (let ((?x54248 (+ (* (/ 1.0 2.0) (* l_0_11_119 l_0_11_119)) (* (/ 1.0 2.0) (* l_0_11_120 l_0_11_120)))))
 (let ((?x54254 (+ (+ ?x54248 (* (/ 1.0 2.0) (* l_0_11_121 l_0_11_121))) (* (/ 1.0 2.0) (* l_0_11_122 l_0_11_122)))))
 (let ((?x54260 (- (- (- (+ ?x54254 (* (/ 1.0 2.0) (* l_0_11_123 l_0_11_123))) ?x50932) ?x50934) ?x50936)))
 (let ((?x54268 (- (- (- (- ?x54260 ?x50938) ?x50940) (* (* (/ 1.0 2.0) l_0_11_83) l_0_11_83)) (* (* (/ 1.0 2.0) l_0_11_84) l_0_11_84))))
 (let ((?x54274 (- (- ?x54268 (* (* (/ 1.0 2.0) l_0_11_85) l_0_11_85)) (* (* (/ 1.0 2.0) l_0_11_86) l_0_11_86))))
 (= (- ?x54274 (* (* (/ 1.0 2.0) l_0_11_87) l_0_11_87)) 0.0))))))))))))
(assert
 (let ((?x51010 (* 2.0 l_0_11_159)))
 (let ((?x51011 (* ?x51010 l_0_11_164)))
 (let ((?x51007 (* 2.0 l_0_11_158)))
 (let ((?x51008 (* ?x51007 l_0_11_163)))
 (let ((?x51004 (* 2.0 l_0_11_157)))
 (let ((?x51005 (* ?x51004 l_0_11_162)))
 (let ((?x51001 (* 2.0 l_0_11_156)))
 (let ((?x51002 (* ?x51001 l_0_11_161)))
 (let ((?x50998 (* 2.0 l_0_11_155)))
 (let ((?x50999 (* ?x50998 l_0_11_160)))
 (let ((?x24266 (+ (* (* 1.0 l_0_11_119) l_0_11_124) (* (* 1.0 l_0_11_120) l_0_11_125))))
 (let ((?x54285 (+ (+ ?x24266 (* (* 1.0 l_0_11_121) l_0_11_126)) (* (* 1.0 l_0_11_122) l_0_11_127))))
 (let ((?x54291 (- (- (- (+ ?x54285 (* (* 1.0 l_0_11_123) l_0_11_128)) ?x50999) ?x51002) ?x51005)))
 (let ((?x54299 (- (- (- (- ?x54291 ?x51008) ?x51011) (* (* 1.0 l_0_11_83) l_0_11_88)) (* (* 1.0 l_0_11_84) l_0_11_89))))
 (let ((?x54305 (- (- ?x54299 (* (* 1.0 l_0_11_85) l_0_11_90)) (* (* 1.0 l_0_11_86) l_0_11_91))))
 (= (- ?x54305 (* (* 1.0 l_0_11_87) l_0_11_92)) 0.0)))))))))))))))))
(assert
 (let ((?x51010 (* 2.0 l_0_11_159)))
 (let ((?x51126 (* ?x51010 l_0_11_170)))
 (let ((?x51007 (* 2.0 l_0_11_158)))
 (let ((?x51124 (* ?x51007 l_0_11_169)))
 (let ((?x51004 (* 2.0 l_0_11_157)))
 (let ((?x51122 (* ?x51004 l_0_11_168)))
 (let ((?x51001 (* 2.0 l_0_11_156)))
 (let ((?x51120 (* ?x51001 l_0_11_167)))
 (let ((?x50998 (* 2.0 l_0_11_155)))
 (let ((?x51118 (* ?x50998 l_0_11_166)))
 (let ((?x54324 (+ (* (* 1.0 l_0_11_119) l_0_11_130) (* (* 1.0 l_0_11_120) l_0_11_131))))
 (let ((?x54328 (+ (+ ?x54324 (* (* 1.0 l_0_11_121) l_0_11_132)) (* (* 1.0 l_0_11_122) l_0_11_133))))
 (let ((?x54333 (- (- (- (+ ?x54328 (* (* 1.0 l_0_11_123) l_0_11_134)) ?x51118) ?x51120) ?x51122)))
 (let ((?x54339 (- (- (- (- ?x54333 ?x51124) ?x51126) (* (* 1.0 l_0_11_83) l_0_11_94)) (* (* 1.0 l_0_11_84) l_0_11_95))))
 (let ((?x54343 (- (- ?x54339 (* (* 1.0 l_0_11_85) l_0_11_96)) (* (* 1.0 l_0_11_86) l_0_11_97))))
 (= (- ?x54343 (* (* 1.0 l_0_11_87) l_0_11_98)) 0.0)))))))))))))))))
(assert
 (let ((?x51010 (* 2.0 l_0_11_159)))
 (let ((?x51197 (* ?x51010 l_0_11_177)))
 (let ((?x51007 (* 2.0 l_0_11_158)))
 (let ((?x51195 (* ?x51007 l_0_11_176)))
 (let ((?x51004 (* 2.0 l_0_11_157)))
 (let ((?x51193 (* ?x51004 l_0_11_175)))
 (let ((?x51001 (* 2.0 l_0_11_156)))
 (let ((?x51191 (* ?x51001 l_0_11_174)))
 (let ((?x50998 (* 2.0 l_0_11_155)))
 (let ((?x51189 (* ?x50998 l_0_11_173)))
 (let ((?x54352 (- (* (* (- 1.0) l_0_11_101) l_0_11_83) (* (* 1.0 l_0_11_102) l_0_11_84))))
 (let ((?x54356 (- (- ?x54352 (* (* 1.0 l_0_11_103) l_0_11_85)) (* (* 1.0 l_0_11_104) l_0_11_86))))
 (let ((?x54361 (+ (- ?x54356 (* (* 1.0 l_0_11_105) l_0_11_87)) (* (* 1.0 l_0_11_119) l_0_11_137))))
 (let ((?x54365 (+ (+ ?x54361 (* (* 1.0 l_0_11_120) l_0_11_138)) (* (* 1.0 l_0_11_121) l_0_11_139))))
 (let ((?x54369 (+ (+ ?x54365 (* (* 1.0 l_0_11_122) l_0_11_140)) (* (* 1.0 l_0_11_123) l_0_11_141))))
 (= (- (- (- (- (- ?x54369 ?x51189) ?x51191) ?x51193) ?x51195) ?x51197) 0.0)))))))))))))))))
(assert
 (let ((?x51281 (* l_0_11_165 l_0_11_165)))
 (let ((?x51266 (* l_0_11_164 l_0_11_164)))
 (let ((?x51263 (* l_0_11_163 l_0_11_163)))
 (let ((?x51259 (* l_0_11_162 l_0_11_162)))
 (let ((?x51255 (* l_0_11_161 l_0_11_161)))
 (let ((?x51251 (* l_0_11_160 l_0_11_160)))
 (let ((?x54406 (+ (* (/ 1.0 2.0) (* l_0_11_124 l_0_11_124)) (* (/ 1.0 2.0) (* l_0_11_125 l_0_11_125)))))
 (let ((?x54412 (+ (+ ?x54406 (* (/ 1.0 2.0) (* l_0_11_126 l_0_11_126))) (* (/ 1.0 2.0) (* l_0_11_127 l_0_11_127)))))
 (let ((?x54418 (+ (+ ?x54412 (* (/ 1.0 2.0) (* l_0_11_128 l_0_11_128))) (* (/ 1.0 2.0) (* l_0_11_129 l_0_11_129)))))
 (let ((?x54427 (- (- (- (- (- (- (- ?x54418 ?x51251) ?x51255) ?x51259) ?x51263) ?x51266) ?x51281) (* (* (/ 1.0 2.0) l_0_11_88) l_0_11_88))))
 (let ((?x54433 (- (- ?x54427 (* (* (/ 1.0 2.0) l_0_11_89) l_0_11_89)) (* (* (/ 1.0 2.0) l_0_11_90) l_0_11_90))))
 (let ((?x54439 (- (- ?x54433 (* (* (/ 1.0 2.0) l_0_11_91) l_0_11_91)) (* (* (/ 1.0 2.0) l_0_11_92) l_0_11_92))))
 (= (- ?x54439 (* (* (/ 1.0 2.0) l_0_11_93) l_0_11_93)) 0.0))))))))))))))
(assert
 (let ((?x51386 (* 2.0 l_0_11_165)))
 (let ((?x51387 (* ?x51386 l_0_11_171)))
 (let ((?x51383 (* 2.0 l_0_11_164)))
 (let ((?x51384 (* ?x51383 l_0_11_170)))
 (let ((?x51380 (* 2.0 l_0_11_163)))
 (let ((?x51381 (* ?x51380 l_0_11_169)))
 (let ((?x51377 (* 2.0 l_0_11_162)))
 (let ((?x51378 (* ?x51377 l_0_11_168)))
 (let ((?x51374 (* 2.0 l_0_11_161)))
 (let ((?x51375 (* ?x51374 l_0_11_167)))
 (let ((?x51371 (* 2.0 l_0_11_160)))
 (let ((?x51372 (* ?x51371 l_0_11_166)))
 (let ((?x24553 (+ (* (* 1.0 l_0_11_124) l_0_11_130) (* (* 1.0 l_0_11_125) l_0_11_131))))
 (let ((?x54447 (+ (+ ?x24553 (* (* 1.0 l_0_11_126) l_0_11_132)) (* (* 1.0 l_0_11_127) l_0_11_133))))
 (let ((?x54453 (+ (+ ?x54447 (* (* 1.0 l_0_11_128) l_0_11_134)) (* (* 1.0 l_0_11_129) l_0_11_135))))
 (let ((?x54462 (- (- (- (- (- (- (- ?x54453 ?x51372) ?x51375) ?x51378) ?x51381) ?x51384) ?x51387) (* (* 1.0 l_0_11_88) l_0_11_94))))
 (let ((?x54468 (- (- ?x54462 (* (* 1.0 l_0_11_89) l_0_11_95)) (* (* 1.0 l_0_11_90) l_0_11_96))))
 (let ((?x54474 (- (- ?x54468 (* (* 1.0 l_0_11_91) l_0_11_97)) (* (* 1.0 l_0_11_92) l_0_11_98))))
 (= (- ?x54474 (* (* 1.0 l_0_11_93) l_0_11_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x51386 (* 2.0 l_0_11_165)))
 (let ((?x51554 (* ?x51386 l_0_11_178)))
 (let ((?x51383 (* 2.0 l_0_11_164)))
 (let ((?x51552 (* ?x51383 l_0_11_177)))
 (let ((?x51380 (* 2.0 l_0_11_163)))
 (let ((?x51550 (* ?x51380 l_0_11_176)))
 (let ((?x51377 (* 2.0 l_0_11_162)))
 (let ((?x51548 (* ?x51377 l_0_11_175)))
 (let ((?x51374 (* 2.0 l_0_11_161)))
 (let ((?x51546 (* ?x51374 l_0_11_174)))
 (let ((?x51371 (* 2.0 l_0_11_160)))
 (let ((?x51544 (* ?x51371 l_0_11_173)))
 (let ((?x54505 (- (* (* (- 1.0) l_0_11_101) l_0_11_88) (* (* 1.0 l_0_11_102) l_0_11_89))))
 (let ((?x54509 (- (- ?x54505 (* (* 1.0 l_0_11_103) l_0_11_90)) (* (* 1.0 l_0_11_104) l_0_11_91))))
 (let ((?x54514 (- (- ?x54509 (* (* 1.0 l_0_11_105) l_0_11_92)) (* (* 1.0 l_0_11_106) l_0_11_93))))
 (let ((?x54518 (+ (+ ?x54514 (* (* 1.0 l_0_11_124) l_0_11_137)) (* (* 1.0 l_0_11_125) l_0_11_138))))
 (let ((?x54522 (+ (+ ?x54518 (* (* 1.0 l_0_11_126) l_0_11_139)) (* (* 1.0 l_0_11_127) l_0_11_140))))
 (let ((?x54526 (+ (+ ?x54522 (* (* 1.0 l_0_11_128) l_0_11_141)) (* (* 1.0 l_0_11_129) l_0_11_142))))
 (= (- (- (- (- (- (- ?x54526 ?x51544) ?x51546) ?x51548) ?x51550) ?x51552) ?x51554) 0.0))))))))))))))))))))
(assert
 (let ((?x51617 (* l_0_11_172 l_0_11_172)))
 (let ((?x51615 (* l_0_11_171 l_0_11_171)))
 (let ((?x51613 (* l_0_11_170 l_0_11_170)))
 (let ((?x51611 (* l_0_11_169 l_0_11_169)))
 (let ((?x51609 (* l_0_11_168 l_0_11_168)))
 (let ((?x51607 (* l_0_11_167 l_0_11_167)))
 (let ((?x51605 (* l_0_11_166 l_0_11_166)))
 (let ((?x54555 (+ (* (* (- (/ 1.0 2.0)) l_0_11_100) l_0_11_100) (* (/ 1.0 2.0) (* l_0_11_130 l_0_11_130)))))
 (let ((?x54561 (+ (+ ?x54555 (* (/ 1.0 2.0) (* l_0_11_131 l_0_11_131))) (* (/ 1.0 2.0) (* l_0_11_132 l_0_11_132)))))
 (let ((?x54567 (+ (+ ?x54561 (* (/ 1.0 2.0) (* l_0_11_133 l_0_11_133))) (* (/ 1.0 2.0) (* l_0_11_134 l_0_11_134)))))
 (let ((?x54573 (+ (+ ?x54567 (* (/ 1.0 2.0) (* l_0_11_135 l_0_11_135))) (* (/ 1.0 2.0) (* l_0_11_136 l_0_11_136)))))
 (let ((?x54580 (- (- (- (- (- (- (- ?x54573 ?x51605) ?x51607) ?x51609) ?x51611) ?x51613) ?x51615) ?x51617)))
 (let ((?x54586 (- (- ?x54580 (* (* (/ 1.0 2.0) l_0_11_94) l_0_11_94)) (* (* (/ 1.0 2.0) l_0_11_95) l_0_11_95))))
 (let ((?x54592 (- (- ?x54586 (* (* (/ 1.0 2.0) l_0_11_96) l_0_11_96)) (* (* (/ 1.0 2.0) l_0_11_97) l_0_11_97))))
 (let ((?x54598 (- (- ?x54592 (* (* (/ 1.0 2.0) l_0_11_98) l_0_11_98)) (* (* (/ 1.0 2.0) l_0_11_99) l_0_11_99))))
 (= ?x54598 0.0)))))))))))))))))
(assert
 (let ((?x51750 (* (* 2.0 l_0_11_172) l_0_11_179)))
 (let ((?x51747 (* (* 2.0 l_0_11_171) l_0_11_178)))
 (let ((?x51744 (* (* 2.0 l_0_11_170) l_0_11_177)))
 (let ((?x51741 (* (* 2.0 l_0_11_169) l_0_11_176)))
 (let ((?x51738 (* (* 2.0 l_0_11_168) l_0_11_175)))
 (let ((?x51735 (* (* 2.0 l_0_11_167) l_0_11_174)))
 (let ((?x51732 (* (* 2.0 l_0_11_166) l_0_11_173)))
 (let ((?x24861 (- (* (* (- 1.0) l_0_11_100) l_0_11_107) (* (* 1.0 l_0_11_101) l_0_11_94))))
 (let ((?x24850 (- (- ?x24861 (* (* 1.0 l_0_11_102) l_0_11_95)) (* (* 1.0 l_0_11_103) l_0_11_96))))
 (let ((?x54608 (- (- ?x24850 (* (* 1.0 l_0_11_104) l_0_11_97)) (* (* 1.0 l_0_11_105) l_0_11_98))))
 (let ((?x54613 (+ (- ?x54608 (* (* 1.0 l_0_11_106) l_0_11_99)) (* (* 1.0 l_0_11_130) l_0_11_137))))
 (let ((?x54619 (+ (+ ?x54613 (* (* 1.0 l_0_11_131) l_0_11_138)) (* (* 1.0 l_0_11_132) l_0_11_139))))
 (let ((?x54625 (+ (+ ?x54619 (* (* 1.0 l_0_11_133) l_0_11_140)) (* (* 1.0 l_0_11_134) l_0_11_141))))
 (let ((?x54631 (+ (+ ?x54625 (* (* 1.0 l_0_11_135) l_0_11_142)) (* (* 1.0 l_0_11_136) l_0_11_143))))
 (let ((?x54638 (- (- (- (- (- (- (- ?x54631 ?x51732) ?x51735) ?x51738) ?x51741) ?x51744) ?x51747) ?x51750)))
 (= ?x54638 0.0)))))))))))))))))
(assert
 (let ((?x51894 (* l_0_11_180 l_0_11_180)))
 (let ((?x51892 (* l_0_11_179 l_0_11_179)))
 (let ((?x51890 (* l_0_11_178 l_0_11_178)))
 (let ((?x51888 (* l_0_11_177 l_0_11_177)))
 (let ((?x51886 (* l_0_11_176 l_0_11_176)))
 (let ((?x51884 (* l_0_11_175 l_0_11_175)))
 (let ((?x51882 (* l_0_11_174 l_0_11_174)))
 (let ((?x51946 (* l_0_11_173 l_0_11_173)))
 (let ((?x54671 (- (* (* (- (/ 1.0 2.0)) l_0_11_101) l_0_11_101) (* (* (/ 1.0 2.0) l_0_11_102) l_0_11_102))))
 (let ((?x54677 (- (- ?x54671 (* (* (/ 1.0 2.0) l_0_11_103) l_0_11_103)) (* (* (/ 1.0 2.0) l_0_11_104) l_0_11_104))))
 (let ((?x54683 (- (- ?x54677 (* (* (/ 1.0 2.0) l_0_11_105) l_0_11_105)) (* (* (/ 1.0 2.0) l_0_11_106) l_0_11_106))))
 (let ((?x54689 (- (- ?x54683 (* (* (/ 1.0 2.0) l_0_11_107) l_0_11_107)) (* (* (/ 1.0 2.0) l_0_11_108) l_0_11_108))))
 (let ((?x54695 (+ (+ ?x54689 (* (/ 1.0 2.0) (* l_0_11_137 l_0_11_137))) (* (/ 1.0 2.0) (* l_0_11_138 l_0_11_138)))))
 (let ((?x54701 (+ (+ ?x54695 (* (/ 1.0 2.0) (* l_0_11_139 l_0_11_139))) (* (/ 1.0 2.0) (* l_0_11_140 l_0_11_140)))))
 (let ((?x54707 (+ (+ ?x54701 (* (/ 1.0 2.0) (* l_0_11_141 l_0_11_141))) (* (/ 1.0 2.0) (* l_0_11_142 l_0_11_142)))))
 (let ((?x54713 (+ (+ ?x54707 (* (/ 1.0 2.0) (* l_0_11_143 l_0_11_143))) (* (/ 1.0 2.0) (* l_0_11_144 l_0_11_144)))))
 (let ((?x54720 (- (- (- (- (- (- (- ?x54713 ?x51946) ?x51882) ?x51884) ?x51886) ?x51888) ?x51890) ?x51892)))
 (= (- ?x54720 ?x51894) 0.0)))))))))))))))))))
(assert
 (let ((?x23278 (* l_0_11_73 l_0_11_73)))
 (let ((?x20912 (+ (- (* (- l_0_11_109) l_0_11_109) (* l_0_11_289 l_0_11_289)) ?x23278)))
 (= ?x20912 0.0))))
(assert
 (let ((?x25143 (* l_0_11_397 l_0_11_397)))
 (let ((?x25146 (* l_0_11_361 l_0_11_361)))
 (let ((?x25139 (* l_0_11_325 l_0_11_325)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52011 (* ?x51981 l_0_11_290)))
 (let ((?x25144 (- (- (- (- (* (* (- 2.0) l_0_11_109) l_0_11_110) ?x52011) ?x25139) ?x25146) ?x25143)))
 (= (+ ?x25144 (* (* 2.0 l_0_11_73) l_0_11_74)) 0.0))))))))
(assert
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52045 (* ?x51981 l_0_11_292)))
 (let ((?x21126 (+ (- (* (* (- 2.0) l_0_11_109) l_0_11_112) ?x52045) (* (* 2.0 l_0_11_73) l_0_11_76))))
 (= ?x21126 0.0)))))
(assert
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52124 (* ?x51981 l_0_11_299)))
 (let ((?x54749 (* l_0_11_253 l_0_11_253)))
 (let ((?x54757 (+ (- (+ (* (* (- 2.0) l_0_11_109) l_0_11_119) ?x54749) ?x52124) (* (* 2.0 l_0_11_73) l_0_11_83))))
 (= ?x54757 0.0))))))
(assert
 (let ((?x51984 (* l_0_11_289 l_0_11_289)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52205 (* ?x51981 l_0_11_304)))
 (let ((?x49393 (* l_0_11_181 l_0_11_181)))
 (let ((?x49391 (* l_0_11_145 l_0_11_145)))
 (let ((?x54772 (+ (- (- (+ (* (* (- 2.0) l_0_11_109) l_0_11_124) ?x49391) ?x49393) ?x52205) ?x51984)))
 (= (+ ?x54772 (* (* 2.0 l_0_11_73) l_0_11_88)) 0.0))))))))
(assert
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52259 (* ?x51981 l_0_11_310)))
 (let ((?x54749 (* l_0_11_253 l_0_11_253)))
 (let ((?x54784 (+ (- (- (* (* (- 2.0) l_0_11_109) l_0_11_130) ?x54749) ?x52259) (* (* 2.0 l_0_11_73) l_0_11_94))))
 (= ?x54784 0.0))))))
(assert
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52326 (* ?x51981 l_0_11_317)))
 (let ((?x54794 (* l_0_11_217 l_0_11_217)))
 (let ((?x54793 (- (* (* 2.0 l_0_11_101) l_0_11_73) (* (* 2.0 l_0_11_109) l_0_11_137))))
 (= (- (- ?x54793 ?x54794) ?x52326) 0.0))))))
(assert
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52405 (* ?x52016 l_0_11_293)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52403 (* ?x52013 l_0_11_292)))
 (let ((?x54805 (- (* (* (- 2.0) l_0_11_110) l_0_11_112) (* (* 2.0 l_0_11_111) l_0_11_113))))
 (let ((?x54811 (- (- (- (- ?x54805 ?x52403) ?x52405) (* (* 2.0 l_0_11_325) l_0_11_328)) (* (* 2.0 l_0_11_361) l_0_11_364))))
 (let ((?x54815 (+ (- ?x54811 (* (* 2.0 l_0_11_397) l_0_11_400)) (* (* 2.0 l_0_11_74) l_0_11_76))))
 (= (+ ?x54815 (* (* 2.0 l_0_11_75) l_0_11_77)) 0.0)))))))))
(assert
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52480 (* ?x52016 l_0_11_300)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52478 (* ?x52013 l_0_11_299)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x54841 (* ?x52121 l_0_11_254)))
 (let ((?x25354 (- (* (* (- 2.0) l_0_11_110) l_0_11_119) (* (* 2.0 l_0_11_111) l_0_11_120))))
 (let ((?x54846 (- (- (- (+ ?x25354 ?x54841) ?x52478) ?x52480) (* (* 2.0 l_0_11_325) l_0_11_335))))
 (let ((?x54850 (- (- ?x54846 (* (* 2.0 l_0_11_361) l_0_11_371)) (* (* 2.0 l_0_11_397) l_0_11_407))))
 (let ((?x54854 (+ (+ ?x54850 (* (* 2.0 l_0_11_74) l_0_11_83)) (* (* 2.0 l_0_11_75) l_0_11_84))))
 (= ?x54854 0.0))))))))))))
(assert
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52549 (* ?x52016 l_0_11_305)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52546 (* ?x52013 l_0_11_304)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52011 (* ?x51981 l_0_11_290)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49432 (* ?x49431 l_0_11_182)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49429 (* ?x49428 l_0_11_146)))
 (let ((?x25329 (- (* (* (- 2.0) l_0_11_110) l_0_11_124) (* (* 2.0 l_0_11_111) l_0_11_125))))
 (let ((?x54868 (- (- (- (+ (- (+ ?x25329 ?x49429) ?x49432) ?x52011) ?x52546) ?x52549) (* (* 2.0 l_0_11_325) l_0_11_340))))
 (let ((?x54872 (- (- ?x54868 (* (* 2.0 l_0_11_361) l_0_11_376)) (* (* 2.0 l_0_11_397) l_0_11_412))))
 (let ((?x54876 (+ (+ ?x54872 (* (* 2.0 l_0_11_74) l_0_11_88)) (* (* 2.0 l_0_11_75) l_0_11_89))))
 (= ?x54876 0.0))))))))))))))))
(assert
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52592 (* ?x52016 l_0_11_311)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52590 (* ?x52013 l_0_11_310)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x54841 (* ?x52121 l_0_11_254)))
 (let ((?x25514 (- (* (* (- 2.0) l_0_11_110) l_0_11_130) (* (* 2.0 l_0_11_111) l_0_11_131))))
 (let ((?x54899 (- (- (- (- ?x25514 ?x54841) ?x52590) ?x52592) (* (* 2.0 l_0_11_325) l_0_11_346))))
 (let ((?x54903 (- (- ?x54899 (* (* 2.0 l_0_11_361) l_0_11_382)) (* (* 2.0 l_0_11_397) l_0_11_418))))
 (let ((?x54907 (+ (+ ?x54903 (* (* 2.0 l_0_11_74) l_0_11_94)) (* (* 2.0 l_0_11_75) l_0_11_95))))
 (= ?x54907 0.0))))))))))))
(assert
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52656 (* ?x52016 l_0_11_318)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52654 (* ?x52013 l_0_11_317)))
 (let ((?x54916 (+ (* (* 2.0 l_0_11_101) l_0_11_74) (* (* 2.0 l_0_11_102) l_0_11_75))))
 (let ((?x54925 (- (- ?x54916 (* (* 2.0 l_0_11_110) l_0_11_137)) (* (* 2.0 l_0_11_111) l_0_11_138))))
 (let ((?x54931 (- (- (- (- ?x54925 (* (* 2.0 l_0_11_217) l_0_11_218)) ?x52654) ?x52656) (* (* 2.0 l_0_11_325) l_0_11_353))))
 (let ((?x54935 (- (- ?x54931 (* (* 2.0 l_0_11_361) l_0_11_389)) (* (* 2.0 l_0_11_397) l_0_11_425))))
 (= ?x54935 0.0))))))))))
(assert
 (let ((?x16957 (* l_0_11_78 l_0_11_78)))
 (let ((?x16951 (* l_0_11_77 l_0_11_77)))
 (let ((?x50509 (* l_0_11_76 l_0_11_76)))
 (let ((?x52726 (* l_0_11_294 l_0_11_294)))
 (let ((?x52724 (* l_0_11_293 l_0_11_293)))
 (let ((?x52736 (* l_0_11_292 l_0_11_292)))
 (let ((?x50435 (* l_0_11_114 l_0_11_114)))
 (let ((?x54950 (- (- (* (- l_0_11_112) l_0_11_112) (* l_0_11_113 l_0_11_113)) ?x50435)))
 (= (+ (+ (+ (- (- (- ?x54950 ?x52736) ?x52724) ?x52726) ?x50509) ?x16951) ?x16957) 0.0))))))))))
(assert
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52755 (* ?x49443 l_0_11_301)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52753 (* ?x49440 l_0_11_300)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52751 (* ?x49437 l_0_11_299)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x54969 (* ?x52121 l_0_11_256)))
 (let ((?x54966 (- (* (* (- 2.0) l_0_11_112) l_0_11_119) (* (* 2.0 l_0_11_113) l_0_11_120))))
 (let ((?x54972 (- (- (+ (- ?x54966 (* (* 2.0 l_0_11_114) l_0_11_121)) ?x54969) ?x52751) ?x52753)))
 (let ((?x54977 (+ (+ (- ?x54972 ?x52755) (* (* 2.0 l_0_11_76) l_0_11_83)) (* (* 2.0 l_0_11_77) l_0_11_84))))
 (= (+ ?x54977 (* (* 2.0 l_0_11_78) l_0_11_85)) 0.0)))))))))))))
(assert
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52791 (* ?x49443 l_0_11_306)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52788 (* ?x49440 l_0_11_305)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52785 (* ?x49437 l_0_11_304)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52045 (* ?x51981 l_0_11_292)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49498 (* ?x49431 l_0_11_184)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49488 (* ?x49428 l_0_11_148)))
 (let ((?x25772 (- (* (* (- 2.0) l_0_11_112) l_0_11_124) (* (* 2.0 l_0_11_113) l_0_11_125))))
 (let ((?x54995 (+ (- (+ (- ?x25772 (* (* 2.0 l_0_11_114) l_0_11_126)) ?x49488) ?x49498) ?x52045)))
 (let ((?x55000 (+ (- (- (- ?x54995 ?x52785) ?x52788) ?x52791) (* (* 2.0 l_0_11_76) l_0_11_88))))
 (let ((?x55004 (+ (+ ?x55000 (* (* 2.0 l_0_11_77) l_0_11_89)) (* (* 2.0 l_0_11_78) l_0_11_90))))
 (= ?x55004 0.0))))))))))))))))))
(assert
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52811 (* ?x49443 l_0_11_312)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52809 (* ?x49440 l_0_11_311)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52807 (* ?x49437 l_0_11_310)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x54969 (* ?x52121 l_0_11_256)))
 (let ((?x55021 (- (* (* (- 2.0) l_0_11_112) l_0_11_130) (* (* 2.0 l_0_11_113) l_0_11_131))))
 (let ((?x55026 (- (- (- (- ?x55021 (* (* 2.0 l_0_11_114) l_0_11_132)) ?x54969) ?x52807) ?x52809)))
 (let ((?x55031 (+ (+ (- ?x55026 ?x52811) (* (* 2.0 l_0_11_76) l_0_11_94)) (* (* 2.0 l_0_11_77) l_0_11_95))))
 (= (+ ?x55031 (* (* 2.0 l_0_11_78) l_0_11_96)) 0.0)))))))))))))
(assert
 (let ((?x19522 (* l_0_11_87 l_0_11_87)))
 (let ((?x24329 (* l_0_11_86 l_0_11_86)))
 (let ((?x24323 (* l_0_11_85 l_0_11_85)))
 (let ((?x19457 (* l_0_11_84 l_0_11_84)))
 (let ((?x19451 (* l_0_11_83 l_0_11_83)))
 (let ((?x52928 (* l_0_11_303 l_0_11_303)))
 (let ((?x52926 (* l_0_11_302 l_0_11_302)))
 (let ((?x52924 (* l_0_11_301 l_0_11_301)))
 (let ((?x52922 (* l_0_11_300 l_0_11_300)))
 (let ((?x52920 (* l_0_11_299 l_0_11_299)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x55048 (* ?x52121 l_0_11_263)))
 (let ((?x54255 (* l_0_11_123 l_0_11_123)))
 (let ((?x54252 (* l_0_11_122 l_0_11_122)))
 (let ((?x54249 (* l_0_11_121 l_0_11_121)))
 (let ((?x25842 (- (- (* (- l_0_11_119) l_0_11_119) (* l_0_11_120 l_0_11_120)) ?x54249)))
 (let ((?x55053 (- (- (- (- (+ (- (- ?x25842 ?x54252) ?x54255) ?x55048) ?x52920) ?x52922) ?x52924) ?x52926)))
 (= (+ (+ (+ (+ (+ (- ?x55053 ?x52928) ?x19451) ?x19457) ?x24323) ?x24329) ?x19522) 0.0)))))))))))))))))))
(assert
 (let ((?x52982 (* 2.0 l_0_11_303)))
 (let ((?x52983 (* ?x52982 l_0_11_308)))
 (let ((?x52979 (* 2.0 l_0_11_302)))
 (let ((?x52980 (* ?x52979 l_0_11_307)))
 (let ((?x52976 (* 2.0 l_0_11_301)))
 (let ((?x52977 (* ?x52976 l_0_11_306)))
 (let ((?x52973 (* 2.0 l_0_11_300)))
 (let ((?x52974 (* ?x52973 l_0_11_305)))
 (let ((?x52970 (* 2.0 l_0_11_299)))
 (let ((?x52971 (* ?x52970 l_0_11_304)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52124 (* ?x51981 l_0_11_299)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x55071 (* ?x52121 l_0_11_268)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49536 (* ?x49431 l_0_11_191)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49529 (* ?x49428 l_0_11_155)))
 (let ((?x25969 (- (* (* (- 2.0) l_0_11_119) l_0_11_124) (* (* 2.0 l_0_11_120) l_0_11_125))))
 (let ((?x25956 (- (- ?x25969 (* (* 2.0 l_0_11_121) l_0_11_126)) (* (* 2.0 l_0_11_122) l_0_11_127))))
 (let ((?x55072 (+ (- (+ (- ?x25956 (* (* 2.0 l_0_11_123) l_0_11_128)) ?x49529) ?x49536) ?x55071)))
 (let ((?x55081 (+ (- (- (- (- (- (+ ?x55072 ?x52124) ?x52971) ?x52974) ?x52977) ?x52980) ?x52983) (* (* 2.0 l_0_11_83) l_0_11_88))))
 (let ((?x55087 (+ (+ ?x55081 (* (* 2.0 l_0_11_84) l_0_11_89)) (* (* 2.0 l_0_11_85) l_0_11_90))))
 (let ((?x55093 (+ (+ ?x55087 (* (* 2.0 l_0_11_86) l_0_11_91)) (* (* 2.0 l_0_11_87) l_0_11_92))))
 (= ?x55093 0.0))))))))))))))))))))))))))
(assert
 (let ((?x52982 (* 2.0 l_0_11_303)))
 (let ((?x53049 (* ?x52982 l_0_11_314)))
 (let ((?x52979 (* 2.0 l_0_11_302)))
 (let ((?x53047 (* ?x52979 l_0_11_313)))
 (let ((?x52976 (* 2.0 l_0_11_301)))
 (let ((?x53045 (* ?x52976 l_0_11_312)))
 (let ((?x52973 (* 2.0 l_0_11_300)))
 (let ((?x53043 (* ?x52973 l_0_11_311)))
 (let ((?x52970 (* 2.0 l_0_11_299)))
 (let ((?x53041 (* ?x52970 l_0_11_310)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x55136 (* ?x52121 l_0_11_274)))
 (let ((?x55048 (* ?x52121 l_0_11_263)))
 (let ((?x55128 (- (* (* (- 2.0) l_0_11_119) l_0_11_130) (* (* 2.0 l_0_11_120) l_0_11_131))))
 (let ((?x55132 (- (- ?x55128 (* (* 2.0 l_0_11_121) l_0_11_132)) (* (* 2.0 l_0_11_122) l_0_11_133))))
 (let ((?x55138 (- (+ (- (- ?x55132 (* (* 2.0 l_0_11_123) l_0_11_134)) ?x55048) ?x55136) ?x53041)))
 (let ((?x55144 (+ (- (- (- (- ?x55138 ?x53043) ?x53045) ?x53047) ?x53049) (* (* 2.0 l_0_11_83) l_0_11_94))))
 (let ((?x55148 (+ (+ ?x55144 (* (* 2.0 l_0_11_84) l_0_11_95)) (* (* 2.0 l_0_11_85) l_0_11_96))))
 (let ((?x55152 (+ (+ ?x55148 (* (* 2.0 l_0_11_86) l_0_11_97)) (* (* 2.0 l_0_11_87) l_0_11_98))))
 (= ?x55152 0.0)))))))))))))))))))))
(assert
 (let ((?x52982 (* 2.0 l_0_11_303)))
 (let ((?x53121 (* ?x52982 l_0_11_321)))
 (let ((?x52979 (* 2.0 l_0_11_302)))
 (let ((?x53119 (* ?x52979 l_0_11_320)))
 (let ((?x52976 (* 2.0 l_0_11_301)))
 (let ((?x53117 (* ?x52976 l_0_11_319)))
 (let ((?x52973 (* 2.0 l_0_11_300)))
 (let ((?x53115 (* ?x52973 l_0_11_318)))
 (let ((?x52970 (* 2.0 l_0_11_299)))
 (let ((?x53113 (* ?x52970 l_0_11_317)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x53619 (* ?x52121 l_0_11_281)))
 (let ((?x26146 (+ (* (* 2.0 l_0_11_101) l_0_11_83) (* (* 2.0 l_0_11_102) l_0_11_84))))
 (let ((?x26032 (+ (+ ?x26146 (* (* 2.0 l_0_11_103) l_0_11_85)) (* (* 2.0 l_0_11_104) l_0_11_86))))
 (let ((?x26045 (- (+ ?x26032 (* (* 2.0 l_0_11_105) l_0_11_87)) (* (* 2.0 l_0_11_119) l_0_11_137))))
 (let ((?x55162 (- (- ?x26045 (* (* 2.0 l_0_11_120) l_0_11_138)) (* (* 2.0 l_0_11_121) l_0_11_139))))
 (let ((?x55166 (- (- ?x55162 (* (* 2.0 l_0_11_122) l_0_11_140)) (* (* 2.0 l_0_11_123) l_0_11_141))))
 (let ((?x55171 (- (- (+ (- ?x55166 (* (* 2.0 l_0_11_217) l_0_11_227)) ?x53619) ?x53113) ?x53115)))
 (= (- (- (- ?x55171 ?x53117) ?x53119) ?x53121) 0.0))))))))))))))))))))
(assert
 (let ((?x24680 (* l_0_11_93 l_0_11_93)))
 (let ((?x20164 (* l_0_11_92 l_0_11_92)))
 (let ((?x20158 (* l_0_11_91 l_0_11_91)))
 (let ((?x24672 (* l_0_11_90 l_0_11_90)))
 (let ((?x24618 (* l_0_11_89 l_0_11_89)))
 (let ((?x24623 (* l_0_11_88 l_0_11_88)))
 (let ((?x53199 (* l_0_11_309 l_0_11_309)))
 (let ((?x53197 (* l_0_11_308 l_0_11_308)))
 (let ((?x53195 (* l_0_11_307 l_0_11_307)))
 (let ((?x53193 (* l_0_11_306 l_0_11_306)))
 (let ((?x53191 (* l_0_11_305 l_0_11_305)))
 (let ((?x53189 (* l_0_11_304 l_0_11_304)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52205 (* ?x51981 l_0_11_304)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49559 (* ?x49431 l_0_11_196)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49552 (* ?x49428 l_0_11_160)))
 (let ((?x54416 (* l_0_11_129 l_0_11_129)))
 (let ((?x54413 (* l_0_11_128 l_0_11_128)))
 (let ((?x54410 (* l_0_11_127 l_0_11_127)))
 (let ((?x54407 (* l_0_11_126 l_0_11_126)))
 (let ((?x55204 (- (- (* (- l_0_11_124) l_0_11_124) (* l_0_11_125 l_0_11_125)) ?x54407)))
 (let ((?x55211 (- (+ (- (+ (- (- (- ?x55204 ?x54410) ?x54413) ?x54416) ?x49552) ?x49559) ?x52205) ?x53189)))
 (let ((?x55218 (+ (+ (- (- (- (- (- ?x55211 ?x53191) ?x53193) ?x53195) ?x53197) ?x53199) ?x24623) ?x24618)))
 (= (+ (+ (+ (+ ?x55218 ?x24672) ?x20158) ?x20164) ?x24680) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x53260 (* 2.0 l_0_11_309)))
 (let ((?x53261 (* ?x53260 l_0_11_315)))
 (let ((?x53257 (* 2.0 l_0_11_308)))
 (let ((?x53258 (* ?x53257 l_0_11_314)))
 (let ((?x53254 (* 2.0 l_0_11_307)))
 (let ((?x53255 (* ?x53254 l_0_11_313)))
 (let ((?x53251 (* 2.0 l_0_11_306)))
 (let ((?x53252 (* ?x53251 l_0_11_312)))
 (let ((?x53248 (* 2.0 l_0_11_305)))
 (let ((?x53249 (* ?x53248 l_0_11_311)))
 (let ((?x53245 (* 2.0 l_0_11_304)))
 (let ((?x53246 (* ?x53245 l_0_11_310)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52259 (* ?x51981 l_0_11_310)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x55071 (* ?x52121 l_0_11_268)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49580 (* ?x49431 l_0_11_202)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49578 (* ?x49428 l_0_11_166)))
 (let ((?x55235 (- (* (* (- 2.0) l_0_11_124) l_0_11_130) (* (* 2.0 l_0_11_125) l_0_11_131))))
 (let ((?x55241 (- (- ?x55235 (* (* 2.0 l_0_11_126) l_0_11_132)) (* (* 2.0 l_0_11_127) l_0_11_133))))
 (let ((?x55247 (- (- ?x55241 (* (* 2.0 l_0_11_128) l_0_11_134)) (* (* 2.0 l_0_11_129) l_0_11_135))))
 (let ((?x55254 (- (- (- (+ (- (- (+ ?x55247 ?x49578) ?x49580) ?x55071) ?x52259) ?x53246) ?x53249) ?x53252)))
 (let ((?x55260 (+ (- (- (- ?x55254 ?x53255) ?x53258) ?x53261) (* (* 2.0 l_0_11_88) l_0_11_94))))
 (let ((?x55266 (+ (+ ?x55260 (* (* 2.0 l_0_11_89) l_0_11_95)) (* (* 2.0 l_0_11_90) l_0_11_96))))
 (let ((?x55272 (+ (+ ?x55266 (* (* 2.0 l_0_11_91) l_0_11_97)) (* (* 2.0 l_0_11_92) l_0_11_98))))
 (= (+ ?x55272 (* (* 2.0 l_0_11_93) l_0_11_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x53260 (* 2.0 l_0_11_309)))
 (let ((?x53326 (* ?x53260 l_0_11_322)))
 (let ((?x53257 (* 2.0 l_0_11_308)))
 (let ((?x53324 (* ?x53257 l_0_11_321)))
 (let ((?x53254 (* 2.0 l_0_11_307)))
 (let ((?x53322 (* ?x53254 l_0_11_320)))
 (let ((?x53251 (* 2.0 l_0_11_306)))
 (let ((?x53320 (* ?x53251 l_0_11_319)))
 (let ((?x53248 (* 2.0 l_0_11_305)))
 (let ((?x53318 (* ?x53248 l_0_11_318)))
 (let ((?x53245 (* 2.0 l_0_11_304)))
 (let ((?x53316 (* ?x53245 l_0_11_317)))
 (let ((?x51981 (* 2.0 l_0_11_289)))
 (let ((?x52326 (* ?x51981 l_0_11_317)))
 (let ((?x49431 (* 2.0 l_0_11_181)))
 (let ((?x49615 (* ?x49431 l_0_11_209)))
 (let ((?x49428 (* 2.0 l_0_11_145)))
 (let ((?x49613 (* ?x49428 l_0_11_173)))
 (let ((?x55303 (+ (* (* 2.0 l_0_11_101) l_0_11_88) (* (* 2.0 l_0_11_102) l_0_11_89))))
 (let ((?x55307 (+ (+ ?x55303 (* (* 2.0 l_0_11_103) l_0_11_90)) (* (* 2.0 l_0_11_104) l_0_11_91))))
 (let ((?x55311 (+ (+ ?x55307 (* (* 2.0 l_0_11_105) l_0_11_92)) (* (* 2.0 l_0_11_106) l_0_11_93))))
 (let ((?x55316 (- (- ?x55311 (* (* 2.0 l_0_11_124) l_0_11_137)) (* (* 2.0 l_0_11_125) l_0_11_138))))
 (let ((?x55320 (- (- ?x55316 (* (* 2.0 l_0_11_126) l_0_11_139)) (* (* 2.0 l_0_11_127) l_0_11_140))))
 (let ((?x55324 (- (- ?x55320 (* (* 2.0 l_0_11_128) l_0_11_141)) (* (* 2.0 l_0_11_129) l_0_11_142))))
 (let ((?x55329 (+ (- (- (+ ?x55324 ?x49613) ?x49615) (* (* 2.0 l_0_11_217) l_0_11_232)) ?x52326)))
 (= (- (- (- (- (- (- ?x55329 ?x53316) ?x53318) ?x53320) ?x53322) ?x53324) ?x53326) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x25013 (* l_0_11_99 l_0_11_99)))
 (let ((?x25009 (* l_0_11_98 l_0_11_98)))
 (let ((?x25004 (* l_0_11_97 l_0_11_97)))
 (let ((?x24948 (* l_0_11_96 l_0_11_96)))
 (let ((?x24940 (* l_0_11_95 l_0_11_95)))
 (let ((?x20577 (* l_0_11_94 l_0_11_94)))
 (let ((?x53380 (* l_0_11_316 l_0_11_316)))
 (let ((?x53378 (* l_0_11_315 l_0_11_315)))
 (let ((?x53376 (* l_0_11_314 l_0_11_314)))
 (let ((?x53374 (* l_0_11_313 l_0_11_313)))
 (let ((?x53372 (* l_0_11_312 l_0_11_312)))
 (let ((?x53370 (* l_0_11_311 l_0_11_311)))
 (let ((?x53368 (* l_0_11_310 l_0_11_310)))
 (let ((?x52121 (* 2.0 l_0_11_253)))
 (let ((?x55136 (* ?x52121 l_0_11_274)))
 (let ((?x54571 (* l_0_11_136 l_0_11_136)))
 (let ((?x54568 (* l_0_11_135 l_0_11_135)))
 (let ((?x54565 (* l_0_11_134 l_0_11_134)))
 (let ((?x54562 (* l_0_11_133 l_0_11_133)))
 (let ((?x54559 (* l_0_11_132 l_0_11_132)))
 (let ((?x54556 (* l_0_11_131 l_0_11_131)))
 (let ((?x55357 (- (- (* l_0_11_100 l_0_11_100) (* l_0_11_130 l_0_11_130)) ?x54556)))
 (let ((?x55364 (- (- (- (- (- (- (- ?x55357 ?x54559) ?x54562) ?x54565) ?x54568) ?x54571) ?x55136) ?x53368)))
 (let ((?x55371 (+ (- (- (- (- (- (- ?x55364 ?x53370) ?x53372) ?x53374) ?x53376) ?x53378) ?x53380) ?x20577)))
 (= (+ (+ (+ (+ (+ ?x55371 ?x24940) ?x24948) ?x25004) ?x25009) ?x25013) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x53534 (* l_0_11_324 l_0_11_324)))
 (let ((?x53532 (* l_0_11_323 l_0_11_323)))
 (let ((?x53530 (* l_0_11_322 l_0_11_322)))
 (let ((?x53528 (* l_0_11_321 l_0_11_321)))
 (let ((?x53526 (* l_0_11_320 l_0_11_320)))
 (let ((?x53523 (* l_0_11_319 l_0_11_319)))
 (let ((?x53521 (* l_0_11_318 l_0_11_318)))
 (let ((?x53519 (* l_0_11_317 l_0_11_317)))
 (let ((?x54711 (* l_0_11_144 l_0_11_144)))
 (let ((?x54708 (* l_0_11_143 l_0_11_143)))
 (let ((?x54705 (* l_0_11_142 l_0_11_142)))
 (let ((?x54702 (* l_0_11_141 l_0_11_141)))
 (let ((?x54699 (* l_0_11_140 l_0_11_140)))
 (let ((?x54696 (* l_0_11_139 l_0_11_139)))
 (let ((?x54693 (* l_0_11_138 l_0_11_138)))
 (let ((?x54690 (* l_0_11_137 l_0_11_137)))
 (let ((?x25109 (* l_0_11_108 l_0_11_108)))
 (let ((?x25106 (* l_0_11_107 l_0_11_107)))
 (let ((?x25103 (* l_0_11_106 l_0_11_106)))
 (let ((?x25101 (* l_0_11_105 l_0_11_105)))
 (let ((?x25098 (* l_0_11_104 l_0_11_104)))
 (let ((?x25007 (* l_0_11_103 l_0_11_103)))
 (let ((?x26572 (+ (+ (* l_0_11_101 l_0_11_101) (* l_0_11_102 l_0_11_102)) ?x25007)))
 (let ((?x26553 (- (- (+ (+ (+ (+ (+ ?x26572 ?x25098) ?x25101) ?x25103) ?x25106) ?x25109) ?x54690) ?x54693)))
 (let ((?x55383 (- (- (- (- (- (- (- ?x26553 ?x54696) ?x54699) ?x54702) ?x54705) ?x54708) ?x54711) (* (* 2.0 l_0_11_217) l_0_11_245))))
 (let ((?x55390 (- (- (- (- (- (- (- ?x55383 ?x53519) ?x53521) ?x53523) ?x53526) ?x53528) ?x53530) ?x53532)))
 (= (- ?x55390 ?x53534) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x49357 (* l_0_11_291 l_0_11_291)))
 (let ((?x49355 (* l_0_11_290 l_0_11_290)))
 (let ((?x49640 (* l_0_11_183 l_0_11_183)))
 (let ((?x49638 (* l_0_11_182 l_0_11_182)))
 (let ((?x26682 (- (+ (* l_0_11_146 l_0_11_146) (* l_0_11_147 l_0_11_147)) ?x49638)))
 (let ((?x26663 (- (+ (+ (- ?x26682 ?x49640) ?x49355) ?x49357) (* (* 2.0 l_0_11_326) l_0_11_340))))
 (let ((?x26651 (- (- ?x26663 (* (* 2.0 l_0_11_327) l_0_11_341)) (* (* 2.0 l_0_11_362) l_0_11_376))))
 (let ((?x18738 (- (- ?x26651 (* (* 2.0 l_0_11_363) l_0_11_377)) (* (* 2.0 l_0_11_398) l_0_11_412))))
 (= (- ?x18738 (* (* 2.0 l_0_11_399) l_0_11_413)) 0.0))))))))))
(assert
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52405 (* ?x52016 l_0_11_293)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52403 (* ?x52013 l_0_11_292)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x49730 (* ?x49729 l_0_11_185)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x49727 (* ?x49726 l_0_11_184)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49724 (* ?x49723 l_0_11_149)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x50057 (* ?x49883 l_0_11_148)))
 (let ((?x55431 (- (+ (+ (- (- (+ ?x50057 ?x49724) ?x49727) ?x49730) ?x52403) ?x52405) (* (* 2.0 l_0_11_328) l_0_11_340))))
 (let ((?x55435 (- (- ?x55431 (* (* 2.0 l_0_11_329) l_0_11_341)) (* (* 2.0 l_0_11_330) l_0_11_342))))
 (let ((?x55439 (- (- ?x55435 (* (* 2.0 l_0_11_364) l_0_11_376)) (* (* 2.0 l_0_11_365) l_0_11_377))))
 (let ((?x55443 (- (- ?x55439 (* (* 2.0 l_0_11_366) l_0_11_378)) (* (* 2.0 l_0_11_400) l_0_11_412))))
 (let ((?x55447 (- (- ?x55443 (* (* 2.0 l_0_11_401) l_0_11_413)) (* (* 2.0 l_0_11_402) l_0_11_414))))
 (= ?x55447 0.0)))))))))))))))))))
(assert
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52480 (* ?x52016 l_0_11_300)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52478 (* ?x52013 l_0_11_299)))
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x55492 (* ?x49160 l_0_11_269)))
 (let ((?x49157 (* 2.0 l_0_11_254)))
 (let ((?x55490 (* ?x49157 l_0_11_268)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x49890 (* ?x49729 l_0_11_192)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x49888 (* ?x49726 l_0_11_191)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49886 (* ?x49723 l_0_11_156)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x49884 (* ?x49883 l_0_11_155)))
 (let ((?x55495 (+ (+ (+ (+ (- (- (+ ?x49884 ?x49886) ?x49888) ?x49890) ?x55490) ?x55492) ?x52478) ?x52480)))
 (let ((?x55501 (- (- ?x55495 (* (* 2.0 l_0_11_335) l_0_11_340)) (* (* 2.0 l_0_11_336) l_0_11_341))))
 (let ((?x55507 (- (- ?x55501 (* (* 2.0 l_0_11_337) l_0_11_342)) (* (* 2.0 l_0_11_338) l_0_11_343))))
 (let ((?x55513 (- (- ?x55507 (* (* 2.0 l_0_11_339) l_0_11_344)) (* (* 2.0 l_0_11_371) l_0_11_376))))
 (let ((?x55519 (- (- ?x55513 (* (* 2.0 l_0_11_372) l_0_11_377)) (* (* 2.0 l_0_11_373) l_0_11_378))))
 (let ((?x55525 (- (- ?x55519 (* (* 2.0 l_0_11_374) l_0_11_379)) (* (* 2.0 l_0_11_375) l_0_11_380))))
 (let ((?x55531 (- (- ?x55525 (* (* 2.0 l_0_11_407) l_0_11_412)) (* (* 2.0 l_0_11_408) l_0_11_413))))
 (let ((?x55537 (- (- ?x55531 (* (* 2.0 l_0_11_409) l_0_11_414)) (* (* 2.0 l_0_11_410) l_0_11_415))))
 (= (- ?x55537 (* (* 2.0 l_0_11_411) l_0_11_416)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x55636 (* l_0_11_417 l_0_11_417)))
 (let ((?x55634 (* l_0_11_416 l_0_11_416)))
 (let ((?x55632 (* l_0_11_415 l_0_11_415)))
 (let ((?x55630 (* l_0_11_414 l_0_11_414)))
 (let ((?x55628 (* l_0_11_413 l_0_11_413)))
 (let ((?x55626 (* l_0_11_412 l_0_11_412)))
 (let ((?x55624 (* l_0_11_381 l_0_11_381)))
 (let ((?x55622 (* l_0_11_380 l_0_11_380)))
 (let ((?x55620 (* l_0_11_379 l_0_11_379)))
 (let ((?x55618 (* l_0_11_378 l_0_11_378)))
 (let ((?x55616 (* l_0_11_377 l_0_11_377)))
 (let ((?x55614 (* l_0_11_376 l_0_11_376)))
 (let ((?x55612 (* l_0_11_345 l_0_11_345)))
 (let ((?x55610 (* l_0_11_344 l_0_11_344)))
 (let ((?x55608 (* l_0_11_343 l_0_11_343)))
 (let ((?x55606 (* l_0_11_342 l_0_11_342)))
 (let ((?x55604 (* l_0_11_341 l_0_11_341)))
 (let ((?x55602 (* l_0_11_340 l_0_11_340)))
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52549 (* ?x52016 l_0_11_305)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52546 (* ?x52013 l_0_11_304)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x49970 (* ?x49729 l_0_11_197)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x49968 (* ?x49726 l_0_11_196)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x49938 (* ?x49723 l_0_11_161)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x53850 (* ?x49883 l_0_11_160)))
 (let ((?x55605 (- (- (+ (+ (- (- (+ ?x53850 ?x49938) ?x49968) ?x49970) ?x52546) ?x52549) ?x55602) ?x55604)))
 (let ((?x55619 (- (- (- (- (- (- (- ?x55605 ?x55606) ?x55608) ?x55610) ?x55612) ?x55614) ?x55616) ?x55618)))
 (let ((?x55633 (- (- (- (- (- (- (- ?x55619 ?x55620) ?x55622) ?x55624) ?x55626) ?x55628) ?x55630) ?x55632)))
 (= (- (- ?x55633 ?x55634) ?x55636) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52592 (* ?x52016 l_0_11_311)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52590 (* ?x52013 l_0_11_310)))
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x55492 (* ?x49160 l_0_11_269)))
 (let ((?x49157 (* 2.0 l_0_11_254)))
 (let ((?x55490 (* ?x49157 l_0_11_268)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x50066 (* ?x49729 l_0_11_203)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x50064 (* ?x49726 l_0_11_202)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x50062 (* ?x49723 l_0_11_167)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x50059 (* ?x49883 l_0_11_166)))
 (let ((?x55679 (+ (+ (- (- (- (- (+ ?x50059 ?x50062) ?x50064) ?x50066) ?x55490) ?x55492) ?x52590) ?x52592)))
 (let ((?x55685 (- (- ?x55679 (* (* 2.0 l_0_11_340) l_0_11_346)) (* (* 2.0 l_0_11_341) l_0_11_347))))
 (let ((?x55691 (- (- ?x55685 (* (* 2.0 l_0_11_342) l_0_11_348)) (* (* 2.0 l_0_11_343) l_0_11_349))))
 (let ((?x55697 (- (- ?x55691 (* (* 2.0 l_0_11_344) l_0_11_350)) (* (* 2.0 l_0_11_345) l_0_11_351))))
 (let ((?x55703 (- (- ?x55697 (* (* 2.0 l_0_11_376) l_0_11_382)) (* (* 2.0 l_0_11_377) l_0_11_383))))
 (let ((?x55709 (- (- ?x55703 (* (* 2.0 l_0_11_378) l_0_11_384)) (* (* 2.0 l_0_11_379) l_0_11_385))))
 (let ((?x55715 (- (- ?x55709 (* (* 2.0 l_0_11_380) l_0_11_386)) (* (* 2.0 l_0_11_381) l_0_11_387))))
 (let ((?x55721 (- (- ?x55715 (* (* 2.0 l_0_11_412) l_0_11_418)) (* (* 2.0 l_0_11_413) l_0_11_419))))
 (let ((?x55727 (- (- ?x55721 (* (* 2.0 l_0_11_414) l_0_11_420)) (* (* 2.0 l_0_11_415) l_0_11_421))))
 (let ((?x55733 (- (- ?x55727 (* (* 2.0 l_0_11_416) l_0_11_422)) (* (* 2.0 l_0_11_417) l_0_11_423))))
 (= ?x55733 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x52016 (* 2.0 l_0_11_291)))
 (let ((?x52656 (* ?x52016 l_0_11_318)))
 (let ((?x52013 (* 2.0 l_0_11_290)))
 (let ((?x52654 (* ?x52013 l_0_11_317)))
 (let ((?x49729 (* 2.0 l_0_11_183)))
 (let ((?x50151 (* ?x49729 l_0_11_210)))
 (let ((?x49726 (* 2.0 l_0_11_182)))
 (let ((?x50149 (* ?x49726 l_0_11_209)))
 (let ((?x49723 (* 2.0 l_0_11_147)))
 (let ((?x50147 (* ?x49723 l_0_11_174)))
 (let ((?x49883 (* 2.0 l_0_11_146)))
 (let ((?x53988 (* ?x49883 l_0_11_173)))
 (let ((?x55795 (- (- (- (+ ?x53988 ?x50147) ?x50149) ?x50151) (* (* 2.0 l_0_11_218) l_0_11_232))))
 (let ((?x55801 (- (+ (+ (- ?x55795 (* (* 2.0 l_0_11_219) l_0_11_233)) ?x52654) ?x52656) (* (* 2.0 l_0_11_340) l_0_11_353))))
 (let ((?x55805 (- (- ?x55801 (* (* 2.0 l_0_11_341) l_0_11_354)) (* (* 2.0 l_0_11_342) l_0_11_355))))
 (let ((?x55809 (- (- ?x55805 (* (* 2.0 l_0_11_343) l_0_11_356)) (* (* 2.0 l_0_11_344) l_0_11_357))))
 (let ((?x55813 (- (- ?x55809 (* (* 2.0 l_0_11_345) l_0_11_358)) (* (* 2.0 l_0_11_376) l_0_11_389))))
 (let ((?x55817 (- (- ?x55813 (* (* 2.0 l_0_11_377) l_0_11_390)) (* (* 2.0 l_0_11_378) l_0_11_391))))
 (let ((?x55821 (- (- ?x55817 (* (* 2.0 l_0_11_379) l_0_11_392)) (* (* 2.0 l_0_11_380) l_0_11_393))))
 (let ((?x55825 (- (- ?x55821 (* (* 2.0 l_0_11_381) l_0_11_394)) (* (* 2.0 l_0_11_412) l_0_11_425))))
 (let ((?x55829 (- (- ?x55825 (* (* 2.0 l_0_11_413) l_0_11_426)) (* (* 2.0 l_0_11_414) l_0_11_427))))
 (let ((?x55833 (- (- ?x55829 (* (* 2.0 l_0_11_415) l_0_11_428)) (* (* 2.0 l_0_11_416) l_0_11_429))))
 (= (- ?x55833 (* (* 2.0 l_0_11_417) l_0_11_430)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x52726 (* l_0_11_294 l_0_11_294)))
 (let ((?x52724 (* l_0_11_293 l_0_11_293)))
 (let ((?x52736 (* l_0_11_292 l_0_11_292)))
 (let ((?x50221 (* l_0_11_186 l_0_11_186)))
 (let ((?x50219 (* l_0_11_185 l_0_11_185)))
 (let ((?x50217 (* l_0_11_184 l_0_11_184)))
 (let ((?x50215 (* l_0_11_150 l_0_11_150)))
 (let ((?x27234 (+ (+ (* l_0_11_148 l_0_11_148) (* l_0_11_149 l_0_11_149)) ?x50215)))
 (= (+ (+ (+ (- (- (- ?x27234 ?x50217) ?x50219) ?x50221) ?x52736) ?x52724) ?x52726) 0.0))))))))))
(assert
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52755 (* ?x49443 l_0_11_301)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52753 (* ?x49440 l_0_11_300)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52751 (* ?x49437 l_0_11_299)))
 (let ((?x49904 (* 2.0 l_0_11_258)))
 (let ((?x55904 (* ?x49904 l_0_11_270)))
 (let ((?x49901 (* 2.0 l_0_11_257)))
 (let ((?x55902 (* ?x49901 l_0_11_269)))
 (let ((?x49898 (* 2.0 l_0_11_256)))
 (let ((?x55900 (* ?x49898 l_0_11_268)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x50345 (* ?x49978 l_0_11_193)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x50343 (* ?x49975 l_0_11_192)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x50341 (* ?x49972 l_0_11_191)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50339 (* ?x49959 l_0_11_157)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50337 (* ?x49956 l_0_11_156)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x50335 (* ?x49942 l_0_11_155)))
 (let ((?x55903 (+ (+ (- (- (- (+ (+ ?x50335 ?x50337) ?x50339) ?x50341) ?x50343) ?x50345) ?x55900) ?x55902)))
 (= (+ (+ (+ (+ ?x55903 ?x55904) ?x52751) ?x52753) ?x52755) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52791 (* ?x49443 l_0_11_306)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52788 (* ?x49440 l_0_11_305)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52785 (* ?x49437 l_0_11_304)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x50399 (* ?x49978 l_0_11_198)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x50397 (* ?x49975 l_0_11_197)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x50395 (* ?x49972 l_0_11_196)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50375 (* ?x49959 l_0_11_162)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50371 (* ?x49956 l_0_11_161)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x51365 (* ?x49942 l_0_11_160)))
 (let ((?x55933 (+ (+ (- (- (- (+ (+ ?x51365 ?x50371) ?x50375) ?x50395) ?x50397) ?x50399) ?x52785) ?x52788)))
 (= (+ ?x55933 ?x52791) 0.0)))))))))))))))))))))
(assert
 (let ((?x49443 (* 2.0 l_0_11_294)))
 (let ((?x52811 (* ?x49443 l_0_11_312)))
 (let ((?x49440 (* 2.0 l_0_11_293)))
 (let ((?x52809 (* ?x49440 l_0_11_311)))
 (let ((?x49437 (* 2.0 l_0_11_292)))
 (let ((?x52807 (* ?x49437 l_0_11_310)))
 (let ((?x49904 (* 2.0 l_0_11_258)))
 (let ((?x55904 (* ?x49904 l_0_11_270)))
 (let ((?x49901 (* 2.0 l_0_11_257)))
 (let ((?x55902 (* ?x49901 l_0_11_269)))
 (let ((?x49898 (* 2.0 l_0_11_256)))
 (let ((?x55900 (* ?x49898 l_0_11_268)))
 (let ((?x49978 (* 2.0 l_0_11_186)))
 (let ((?x50460 (* ?x49978 l_0_11_204)))
 (let ((?x49975 (* 2.0 l_0_11_185)))
 (let ((?x50458 (* ?x49975 l_0_11_203)))
 (let ((?x49972 (* 2.0 l_0_11_184)))
 (let ((?x50456 (* ?x49972 l_0_11_202)))
 (let ((?x49959 (* 2.0 l_0_11_150)))
 (let ((?x50453 (* ?x49959 l_0_11_168)))
 (let ((?x49956 (* 2.0 l_0_11_149)))
 (let ((?x50450 (* ?x49956 l_0_11_167)))
 (let ((?x49942 (* 2.0 l_0_11_148)))
 (let ((?x50447 (* ?x49942 l_0_11_166)))
 (let ((?x55953 (- (- (- (- (- (+ (+ ?x50447 ?x50450) ?x50453) ?x50456) ?x50458) ?x50460) ?x55900) ?x55902)))
 (= (+ (+ (+ (- ?x55953 ?x55904) ?x52807) ?x52809) ?x52811) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x52928 (* l_0_11_303 l_0_11_303)))
 (let ((?x52926 (* l_0_11_302 l_0_11_302)))
 (let ((?x52924 (* l_0_11_301 l_0_11_301)))
 (let ((?x52922 (* l_0_11_300 l_0_11_300)))
 (let ((?x52920 (* l_0_11_299 l_0_11_299)))
 (let ((?x53785 (* 2.0 l_0_11_267)))
 (let ((?x55982 (* ?x53785 l_0_11_272)))
 (let ((?x53782 (* 2.0 l_0_11_266)))
 (let ((?x55980 (* ?x53782 l_0_11_271)))
 (let ((?x53779 (* 2.0 l_0_11_265)))
 (let ((?x55978 (* ?x53779 l_0_11_270)))
 (let ((?x53776 (* 2.0 l_0_11_264)))
 (let ((?x55976 (* ?x53776 l_0_11_269)))
 (let ((?x53773 (* 2.0 l_0_11_263)))
 (let ((?x55974 (* ?x53773 l_0_11_268)))
 (let ((?x50950 (* l_0_11_195 l_0_11_195)))
 (let ((?x50948 (* l_0_11_194 l_0_11_194)))
 (let ((?x50946 (* l_0_11_193 l_0_11_193)))
 (let ((?x50944 (* l_0_11_192 l_0_11_192)))
 (let ((?x50942 (* l_0_11_191 l_0_11_191)))
 (let ((?x50940 (* l_0_11_159 l_0_11_159)))
 (let ((?x50938 (* l_0_11_158 l_0_11_158)))
 (let ((?x50936 (* l_0_11_157 l_0_11_157)))
 (let ((?x55966 (+ (+ (* l_0_11_155 l_0_11_155) (* l_0_11_156 l_0_11_156)) ?x50936)))
 (let ((?x55973 (- (- (- (- (- (+ (+ ?x55966 ?x50938) ?x50940) ?x50942) ?x50944) ?x50946) ?x50948) ?x50950)))
 (let ((?x55985 (+ (+ (+ (+ (+ (+ (+ ?x55973 ?x55974) ?x55976) ?x55978) ?x55980) ?x55982) ?x52920) ?x52922)))
 (= (+ (+ (+ ?x55985 ?x52924) ?x52926) ?x52928) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x52982 (* 2.0 l_0_11_303)))
 (let ((?x52983 (* ?x52982 l_0_11_308)))
 (let ((?x52979 (* 2.0 l_0_11_302)))
 (let ((?x52980 (* ?x52979 l_0_11_307)))
 (let ((?x52976 (* 2.0 l_0_11_301)))
 (let ((?x52977 (* ?x52976 l_0_11_306)))
 (let ((?x52973 (* 2.0 l_0_11_300)))
 (let ((?x52974 (* ?x52973 l_0_11_305)))
 (let ((?x52970 (* 2.0 l_0_11_299)))
 (let ((?x52971 (* ?x52970 l_0_11_304)))
 (let ((?x56023 (* l_0_11_273 l_0_11_273)))
 (let ((?x56021 (* l_0_11_272 l_0_11_272)))
 (let ((?x56019 (* l_0_11_271 l_0_11_271)))
 (let ((?x56017 (* l_0_11_270 l_0_11_270)))
 (let ((?x56015 (* l_0_11_269 l_0_11_269)))
 (let ((?x56013 (* l_0_11_268 l_0_11_268)))
 (let ((?x51025 (* 2.0 l_0_11_195)))
 (let ((?x51026 (* ?x51025 l_0_11_200)))
 (let ((?x51022 (* 2.0 l_0_11_194)))
 (let ((?x51023 (* ?x51022 l_0_11_199)))
 (let ((?x51019 (* 2.0 l_0_11_193)))
 (let ((?x51020 (* ?x51019 l_0_11_198)))
 (let ((?x51016 (* 2.0 l_0_11_192)))
 (let ((?x51017 (* ?x51016 l_0_11_197)))
 (let ((?x51013 (* 2.0 l_0_11_191)))
 (let ((?x51014 (* ?x51013 l_0_11_196)))
 (let ((?x51010 (* 2.0 l_0_11_159)))
 (let ((?x51011 (* ?x51010 l_0_11_164)))
 (let ((?x51007 (* 2.0 l_0_11_158)))
 (let ((?x51008 (* ?x51007 l_0_11_163)))
 (let ((?x51004 (* 2.0 l_0_11_157)))
 (let ((?x51005 (* ?x51004 l_0_11_162)))
 (let ((?x51001 (* 2.0 l_0_11_156)))
 (let ((?x51002 (* ?x51001 l_0_11_161)))
 (let ((?x50998 (* 2.0 l_0_11_155)))
 (let ((?x50999 (* ?x50998 l_0_11_160)))
 (let ((?x56010 (- (- (- (+ (+ (+ (+ ?x50999 ?x51002) ?x51005) ?x51008) ?x51011) ?x51014) ?x51017) ?x51020)))
 (let ((?x56022 (+ (+ (+ (+ (+ (- (- ?x56010 ?x51023) ?x51026) ?x56013) ?x56015) ?x56017) ?x56019) ?x56021)))
 (= (+ (+ (+ (+ (+ (+ ?x56022 ?x56023) ?x52971) ?x52974) ?x52977) ?x52980) ?x52983) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x52982 (* 2.0 l_0_11_303)))
 (let ((?x53049 (* ?x52982 l_0_11_314)))
 (let ((?x52979 (* 2.0 l_0_11_302)))
 (let ((?x53047 (* ?x52979 l_0_11_313)))
 (let ((?x52976 (* 2.0 l_0_11_301)))
 (let ((?x53045 (* ?x52976 l_0_11_312)))
 (let ((?x52973 (* 2.0 l_0_11_300)))
 (let ((?x53043 (* ?x52973 l_0_11_311)))
 (let ((?x52970 (* 2.0 l_0_11_299)))
 (let ((?x53041 (* ?x52970 l_0_11_310)))
 (let ((?x53900 (* 2.0 l_0_11_273)))
 (let ((?x56066 (* ?x53900 l_0_11_279)))
 (let ((?x53897 (* 2.0 l_0_11_272)))
 (let ((?x56064 (* ?x53897 l_0_11_278)))
 (let ((?x53894 (* 2.0 l_0_11_271)))
 (let ((?x56062 (* ?x53894 l_0_11_277)))
 (let ((?x53891 (* 2.0 l_0_11_270)))
 (let ((?x56060 (* ?x53891 l_0_11_276)))
 (let ((?x53888 (* 2.0 l_0_11_269)))
 (let ((?x56058 (* ?x53888 l_0_11_275)))
 (let ((?x53885 (* 2.0 l_0_11_268)))
 (let ((?x56056 (* ?x53885 l_0_11_274)))
 (let ((?x53785 (* 2.0 l_0_11_267)))
 (let ((?x55982 (* ?x53785 l_0_11_272)))
 (let ((?x53782 (* 2.0 l_0_11_266)))
 (let ((?x55980 (* ?x53782 l_0_11_271)))
 (let ((?x53779 (* 2.0 l_0_11_265)))
 (let ((?x55978 (* ?x53779 l_0_11_270)))
 (let ((?x53776 (* 2.0 l_0_11_264)))
 (let ((?x55976 (* ?x53776 l_0_11_269)))
 (let ((?x53773 (* 2.0 l_0_11_263)))
 (let ((?x55974 (* ?x53773 l_0_11_268)))
 (let ((?x51025 (* 2.0 l_0_11_195)))
 (let ((?x51136 (* ?x51025 l_0_11_206)))
 (let ((?x51022 (* 2.0 l_0_11_194)))
 (let ((?x51134 (* ?x51022 l_0_11_205)))
 (let ((?x51019 (* 2.0 l_0_11_193)))
 (let ((?x51132 (* ?x51019 l_0_11_204)))
 (let ((?x51016 (* 2.0 l_0_11_192)))
 (let ((?x51130 (* ?x51016 l_0_11_203)))
 (let ((?x51013 (* 2.0 l_0_11_191)))
 (let ((?x51128 (* ?x51013 l_0_11_202)))
 (let ((?x51010 (* 2.0 l_0_11_159)))
 (let ((?x51126 (* ?x51010 l_0_11_170)))
 (let ((?x51007 (* 2.0 l_0_11_158)))
 (let ((?x51124 (* ?x51007 l_0_11_169)))
 (let ((?x51004 (* 2.0 l_0_11_157)))
 (let ((?x51122 (* ?x51004 l_0_11_168)))
 (let ((?x51001 (* 2.0 l_0_11_156)))
 (let ((?x51120 (* ?x51001 l_0_11_167)))
 (let ((?x50998 (* 2.0 l_0_11_155)))
 (let ((?x51118 (* ?x50998 l_0_11_166)))
 (let ((?x56048 (- (- (- (+ (+ (+ (+ ?x51118 ?x51120) ?x51122) ?x51124) ?x51126) ?x51128) ?x51130) ?x51132)))
 (let ((?x56055 (- (- (- (- (- (- (- ?x56048 ?x51134) ?x51136) ?x55974) ?x55976) ?x55978) ?x55980) ?x55982)))
 (let ((?x56068 (+ (+ (+ (+ (+ (+ (+ ?x56055 ?x56056) ?x56058) ?x56060) ?x56062) ?x56064) ?x56066) ?x53041)))
 (= (+ (+ (+ (+ ?x56068 ?x53043) ?x53045) ?x53047) ?x53049) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x52982 (* 2.0 l_0_11_303)))
 (let ((?x53121 (* ?x52982 l_0_11_321)))
 (let ((?x52979 (* 2.0 l_0_11_302)))
 (let ((?x53119 (* ?x52979 l_0_11_320)))
 (let ((?x52976 (* 2.0 l_0_11_301)))
 (let ((?x53117 (* ?x52976 l_0_11_319)))
 (let ((?x52973 (* 2.0 l_0_11_300)))
 (let ((?x53115 (* ?x52973 l_0_11_318)))
 (let ((?x52970 (* 2.0 l_0_11_299)))
 (let ((?x53113 (* ?x52970 l_0_11_317)))
 (let ((?x53900 (* 2.0 l_0_11_273)))
 (let ((?x53901 (* ?x53900 l_0_11_286)))
 (let ((?x53897 (* 2.0 l_0_11_272)))
 (let ((?x53898 (* ?x53897 l_0_11_285)))
 (let ((?x53894 (* 2.0 l_0_11_271)))
 (let ((?x53895 (* ?x53894 l_0_11_284)))
 (let ((?x53891 (* 2.0 l_0_11_270)))
 (let ((?x53892 (* ?x53891 l_0_11_283)))
 (let ((?x53888 (* 2.0 l_0_11_269)))
 (let ((?x53889 (* ?x53888 l_0_11_282)))
 (let ((?x53885 (* 2.0 l_0_11_268)))
 (let ((?x53886 (* ?x53885 l_0_11_281)))
 (let ((?x51025 (* 2.0 l_0_11_195)))
 (let ((?x51207 (* ?x51025 l_0_11_213)))
 (let ((?x51022 (* 2.0 l_0_11_194)))
 (let ((?x51205 (* ?x51022 l_0_11_212)))
 (let ((?x51019 (* 2.0 l_0_11_193)))
 (let ((?x51203 (* ?x51019 l_0_11_211)))
 (let ((?x51016 (* 2.0 l_0_11_192)))
 (let ((?x51201 (* ?x51016 l_0_11_210)))
 (let ((?x51013 (* 2.0 l_0_11_191)))
 (let ((?x51199 (* ?x51013 l_0_11_209)))
 (let ((?x51010 (* 2.0 l_0_11_159)))
 (let ((?x51197 (* ?x51010 l_0_11_177)))
 (let ((?x51007 (* 2.0 l_0_11_158)))
 (let ((?x51195 (* ?x51007 l_0_11_176)))
 (let ((?x51004 (* 2.0 l_0_11_157)))
 (let ((?x51193 (* ?x51004 l_0_11_175)))
 (let ((?x51001 (* 2.0 l_0_11_156)))
 (let ((?x51191 (* ?x51001 l_0_11_174)))
 (let ((?x50998 (* 2.0 l_0_11_155)))
 (let ((?x51189 (* ?x50998 l_0_11_173)))
 (let ((?x56098 (- (- (- (+ (+ (+ (+ ?x51189 ?x51191) ?x51193) ?x51195) ?x51197) ?x51199) ?x51201) ?x51203)))
 (let ((?x56104 (- (- (- (- ?x56098 ?x51205) ?x51207) (* (* 2.0 l_0_11_227) l_0_11_232)) (* (* 2.0 l_0_11_228) l_0_11_233))))
 (let ((?x56108 (- (- ?x56104 (* (* 2.0 l_0_11_229) l_0_11_234)) (* (* 2.0 l_0_11_230) l_0_11_235))))
 (let ((?x56113 (+ (+ (+ (- ?x56108 (* (* 2.0 l_0_11_231) l_0_11_236)) ?x53886) ?x53889) ?x53892)))
 (let ((?x56120 (+ (+ (+ (+ (+ (+ (+ ?x56113 ?x53895) ?x53898) ?x53901) ?x53113) ?x53115) ?x53117) ?x53119)))
 (= (+ ?x56120 ?x53121) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x53199 (* l_0_11_309 l_0_11_309)))
 (let ((?x53197 (* l_0_11_308 l_0_11_308)))
 (let ((?x53195 (* l_0_11_307 l_0_11_307)))
 (let ((?x53193 (* l_0_11_306 l_0_11_306)))
 (let ((?x53191 (* l_0_11_305 l_0_11_305)))
 (let ((?x53189 (* l_0_11_304 l_0_11_304)))
 (let ((?x51301 (* l_0_11_201 l_0_11_201)))
 (let ((?x51299 (* l_0_11_200 l_0_11_200)))
 (let ((?x51295 (* l_0_11_199 l_0_11_199)))
 (let ((?x51293 (* l_0_11_198 l_0_11_198)))
 (let ((?x51291 (* l_0_11_197 l_0_11_197)))
 (let ((?x51289 (* l_0_11_196 l_0_11_196)))
 (let ((?x51281 (* l_0_11_165 l_0_11_165)))
 (let ((?x51266 (* l_0_11_164 l_0_11_164)))
 (let ((?x51263 (* l_0_11_163 l_0_11_163)))
 (let ((?x51259 (* l_0_11_162 l_0_11_162)))
 (let ((?x56160 (+ (+ (* l_0_11_160 l_0_11_160) (* l_0_11_161 l_0_11_161)) ?x51259)))
 (let ((?x56167 (- (- (- (- (+ (+ (+ ?x56160 ?x51263) ?x51266) ?x51281) ?x51289) ?x51291) ?x51293) ?x51295)))
 (let ((?x56174 (+ (+ (+ (+ (+ (- (- ?x56167 ?x51299) ?x51301) ?x53189) ?x53191) ?x53193) ?x53195) ?x53197)))
 (= (+ ?x56174 ?x53199) 0.0)))))))))))))))))))))
(assert
 (let ((?x53260 (* 2.0 l_0_11_309)))
 (let ((?x53261 (* ?x53260 l_0_11_315)))
 (let ((?x53257 (* 2.0 l_0_11_308)))
 (let ((?x53258 (* ?x53257 l_0_11_314)))
 (let ((?x53254 (* 2.0 l_0_11_307)))
 (let ((?x53255 (* ?x53254 l_0_11_313)))
 (let ((?x53251 (* 2.0 l_0_11_306)))
 (let ((?x53252 (* ?x53251 l_0_11_312)))
 (let ((?x53248 (* 2.0 l_0_11_305)))
 (let ((?x53249 (* ?x53248 l_0_11_311)))
 (let ((?x53245 (* 2.0 l_0_11_304)))
 (let ((?x53246 (* ?x53245 l_0_11_310)))
 (let ((?x56023 (* l_0_11_273 l_0_11_273)))
 (let ((?x56021 (* l_0_11_272 l_0_11_272)))
 (let ((?x56019 (* l_0_11_271 l_0_11_271)))
 (let ((?x56017 (* l_0_11_270 l_0_11_270)))
 (let ((?x56015 (* l_0_11_269 l_0_11_269)))
 (let ((?x56013 (* l_0_11_268 l_0_11_268)))
 (let ((?x51414 (* 2.0 l_0_11_201)))
 (let ((?x51415 (* ?x51414 l_0_11_207)))
 (let ((?x51411 (* 2.0 l_0_11_200)))
 (let ((?x51412 (* ?x51411 l_0_11_206)))
 (let ((?x51405 (* 2.0 l_0_11_199)))
 (let ((?x51406 (* ?x51405 l_0_11_205)))
 (let ((?x51402 (* 2.0 l_0_11_198)))
 (let ((?x51403 (* ?x51402 l_0_11_204)))
 (let ((?x51399 (* 2.0 l_0_11_197)))
 (let ((?x51400 (* ?x51399 l_0_11_203)))
 (let ((?x51396 (* 2.0 l_0_11_196)))
 (let ((?x51397 (* ?x51396 l_0_11_202)))
 (let ((?x51386 (* 2.0 l_0_11_165)))
 (let ((?x51387 (* ?x51386 l_0_11_171)))
 (let ((?x51383 (* 2.0 l_0_11_164)))
 (let ((?x51384 (* ?x51383 l_0_11_170)))
 (let ((?x51380 (* 2.0 l_0_11_163)))
 (let ((?x51381 (* ?x51380 l_0_11_169)))
 (let ((?x51377 (* 2.0 l_0_11_162)))
 (let ((?x51378 (* ?x51377 l_0_11_168)))
 (let ((?x51374 (* 2.0 l_0_11_161)))
 (let ((?x51375 (* ?x51374 l_0_11_167)))
 (let ((?x51371 (* 2.0 l_0_11_160)))
 (let ((?x51372 (* ?x51371 l_0_11_166)))
 (let ((?x56192 (- (- (+ (+ (+ (+ (+ ?x51372 ?x51375) ?x51378) ?x51381) ?x51384) ?x51387) ?x51397) ?x51400)))
 (let ((?x56199 (- (- (- (- (- (- (- ?x56192 ?x51403) ?x51406) ?x51412) ?x51415) ?x56013) ?x56015) ?x56017)))
 (let ((?x56206 (+ (+ (+ (+ (- (- (- ?x56199 ?x56019) ?x56021) ?x56023) ?x53246) ?x53249) ?x53252) ?x53255)))
 (= (+ (+ ?x56206 ?x53258) ?x53261) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x53260 (* 2.0 l_0_11_309)))
 (let ((?x53326 (* ?x53260 l_0_11_322)))
 (let ((?x53257 (* 2.0 l_0_11_308)))
 (let ((?x53324 (* ?x53257 l_0_11_321)))
 (let ((?x53254 (* 2.0 l_0_11_307)))
 (let ((?x53322 (* ?x53254 l_0_11_320)))
 (let ((?x53251 (* 2.0 l_0_11_306)))
 (let ((?x53320 (* ?x53251 l_0_11_319)))
 (let ((?x53248 (* 2.0 l_0_11_305)))
 (let ((?x53318 (* ?x53248 l_0_11_318)))
 (let ((?x53245 (* 2.0 l_0_11_304)))
 (let ((?x53316 (* ?x53245 l_0_11_317)))
 (let ((?x56244 (* l_0_11_237 l_0_11_237)))
 (let ((?x56242 (* l_0_11_236 l_0_11_236)))
 (let ((?x56240 (* l_0_11_235 l_0_11_235)))
 (let ((?x56238 (* l_0_11_234 l_0_11_234)))
 (let ((?x56236 (* l_0_11_233 l_0_11_233)))
 (let ((?x56234 (* l_0_11_232 l_0_11_232)))
 (let ((?x51414 (* 2.0 l_0_11_201)))
 (let ((?x51574 (* ?x51414 l_0_11_214)))
 (let ((?x51411 (* 2.0 l_0_11_200)))
 (let ((?x51572 (* ?x51411 l_0_11_213)))
 (let ((?x51405 (* 2.0 l_0_11_199)))
 (let ((?x51568 (* ?x51405 l_0_11_212)))
 (let ((?x51402 (* 2.0 l_0_11_198)))
 (let ((?x51566 (* ?x51402 l_0_11_211)))
 (let ((?x51399 (* 2.0 l_0_11_197)))
 (let ((?x51564 (* ?x51399 l_0_11_210)))
 (let ((?x51396 (* 2.0 l_0_11_196)))
 (let ((?x51562 (* ?x51396 l_0_11_209)))
 (let ((?x51386 (* 2.0 l_0_11_165)))
 (let ((?x51554 (* ?x51386 l_0_11_178)))
 (let ((?x51383 (* 2.0 l_0_11_164)))
 (let ((?x51552 (* ?x51383 l_0_11_177)))
 (let ((?x51380 (* 2.0 l_0_11_163)))
 (let ((?x51550 (* ?x51380 l_0_11_176)))
 (let ((?x51377 (* 2.0 l_0_11_162)))
 (let ((?x51548 (* ?x51377 l_0_11_175)))
 (let ((?x51374 (* 2.0 l_0_11_161)))
 (let ((?x51546 (* ?x51374 l_0_11_174)))
 (let ((?x51371 (* 2.0 l_0_11_160)))
 (let ((?x51544 (* ?x51371 l_0_11_173)))
 (let ((?x56229 (- (- (+ (+ (+ (+ (+ ?x51544 ?x51546) ?x51548) ?x51550) ?x51552) ?x51554) ?x51562) ?x51564)))
 (let ((?x56239 (- (- (- (- (- (- (- ?x56229 ?x51566) ?x51568) ?x51572) ?x51574) ?x56234) ?x56236) ?x56238)))
 (let ((?x56249 (+ (+ (+ (+ (- (- (- ?x56239 ?x56240) ?x56242) ?x56244) ?x53316) ?x53318) ?x53320) ?x53322)))
 (= (+ (+ ?x56249 ?x53324) ?x53326) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x53380 (* l_0_11_316 l_0_11_316)))
 (let ((?x53378 (* l_0_11_315 l_0_11_315)))
 (let ((?x53376 (* l_0_11_314 l_0_11_314)))
 (let ((?x53374 (* l_0_11_313 l_0_11_313)))
 (let ((?x53372 (* l_0_11_312 l_0_11_312)))
 (let ((?x53370 (* l_0_11_311 l_0_11_311)))
 (let ((?x53368 (* l_0_11_310 l_0_11_310)))
 (let ((?x53900 (* 2.0 l_0_11_273)))
 (let ((?x56066 (* ?x53900 l_0_11_279)))
 (let ((?x53897 (* 2.0 l_0_11_272)))
 (let ((?x56064 (* ?x53897 l_0_11_278)))
 (let ((?x53894 (* 2.0 l_0_11_271)))
 (let ((?x56062 (* ?x53894 l_0_11_277)))
 (let ((?x53891 (* 2.0 l_0_11_270)))
 (let ((?x56060 (* ?x53891 l_0_11_276)))
 (let ((?x53888 (* 2.0 l_0_11_269)))
 (let ((?x56058 (* ?x53888 l_0_11_275)))
 (let ((?x53885 (* 2.0 l_0_11_268)))
 (let ((?x56056 (* ?x53885 l_0_11_274)))
 (let ((?x51631 (* l_0_11_208 l_0_11_208)))
 (let ((?x51629 (* l_0_11_207 l_0_11_207)))
 (let ((?x51627 (* l_0_11_206 l_0_11_206)))
 (let ((?x51625 (* l_0_11_205 l_0_11_205)))
 (let ((?x51623 (* l_0_11_204 l_0_11_204)))
 (let ((?x51621 (* l_0_11_203 l_0_11_203)))
 (let ((?x51619 (* l_0_11_202 l_0_11_202)))
 (let ((?x51617 (* l_0_11_172 l_0_11_172)))
 (let ((?x51615 (* l_0_11_171 l_0_11_171)))
 (let ((?x51613 (* l_0_11_170 l_0_11_170)))
 (let ((?x51611 (* l_0_11_169 l_0_11_169)))
 (let ((?x51609 (* l_0_11_168 l_0_11_168)))
 (let ((?x27508 (+ (+ (* l_0_11_166 l_0_11_166) (* l_0_11_167 l_0_11_167)) ?x51609)))
 (let ((?x56271 (- (- (- (+ (+ (+ (+ ?x27508 ?x51611) ?x51613) ?x51615) ?x51617) ?x51619) ?x51621) ?x51623)))
 (let ((?x56278 (- (- (- (- (- (- (- ?x56271 ?x51625) ?x51627) ?x51629) ?x51631) ?x56056) ?x56058) ?x56060)))
 (let ((?x56285 (+ (+ (+ (+ (- (- (- ?x56278 ?x56062) ?x56064) ?x56066) ?x53368) ?x53370) ?x53372) ?x53374)))
 (= (+ (+ (+ ?x56285 ?x53376) ?x53378) ?x53380) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x53534 (* l_0_11_324 l_0_11_324)))
 (let ((?x53532 (* l_0_11_323 l_0_11_323)))
 (let ((?x53530 (* l_0_11_322 l_0_11_322)))
 (let ((?x53528 (* l_0_11_321 l_0_11_321)))
 (let ((?x53526 (* l_0_11_320 l_0_11_320)))
 (let ((?x53523 (* l_0_11_319 l_0_11_319)))
 (let ((?x53521 (* l_0_11_318 l_0_11_318)))
 (let ((?x53519 (* l_0_11_317 l_0_11_317)))
 (let ((?x51910 (* l_0_11_216 l_0_11_216)))
 (let ((?x51908 (* l_0_11_215 l_0_11_215)))
 (let ((?x51906 (* l_0_11_214 l_0_11_214)))
 (let ((?x51904 (* l_0_11_213 l_0_11_213)))
 (let ((?x51902 (* l_0_11_212 l_0_11_212)))
 (let ((?x51900 (* l_0_11_211 l_0_11_211)))
 (let ((?x51898 (* l_0_11_210 l_0_11_210)))
 (let ((?x51896 (* l_0_11_209 l_0_11_209)))
 (let ((?x51894 (* l_0_11_180 l_0_11_180)))
 (let ((?x51892 (* l_0_11_179 l_0_11_179)))
 (let ((?x51890 (* l_0_11_178 l_0_11_178)))
 (let ((?x51888 (* l_0_11_177 l_0_11_177)))
 (let ((?x51886 (* l_0_11_176 l_0_11_176)))
 (let ((?x51884 (* l_0_11_175 l_0_11_175)))
 (let ((?x27593 (+ (+ (* l_0_11_173 l_0_11_173) (* l_0_11_174 l_0_11_174)) ?x51884)))
 (let ((?x27614 (- (- (+ (+ (+ (+ (+ ?x27593 ?x51886) ?x51888) ?x51890) ?x51892) ?x51894) ?x51896) ?x51898)))
 (let ((?x27618 (- (- (- (- (- (- (- ?x27614 ?x51900) ?x51902) ?x51904) ?x51906) ?x51908) ?x51910) (* (* 2.0 l_0_11_232) l_0_11_245))))
 (let ((?x27597 (- (- ?x27618 (* (* 2.0 l_0_11_233) l_0_11_246)) (* (* 2.0 l_0_11_234) l_0_11_247))))
 (let ((?x56298 (- (- ?x27597 (* (* 2.0 l_0_11_235) l_0_11_248)) (* (* 2.0 l_0_11_236) l_0_11_249))))
 (let ((?x56303 (+ (+ (+ (- ?x56298 (* (* 2.0 l_0_11_237) l_0_11_250)) ?x53519) ?x53521) ?x53523)))
 (= (+ (+ (+ (+ (+ ?x56303 ?x53526) ?x53528) ?x53530) ?x53532) ?x53534) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x56336 (- (- (* (- l_0_11_218) l_0_11_218) (* l_0_11_219 l_0_11_219)) (* (* 2.0 l_0_11_326) l_0_11_353))))
 (let ((?x56340 (- (- ?x56336 (* (* 2.0 l_0_11_327) l_0_11_354)) (* (* 2.0 l_0_11_362) l_0_11_389))))
 (let ((?x56344 (- (- ?x56340 (* (* 2.0 l_0_11_363) l_0_11_390)) (* (* 2.0 l_0_11_398) l_0_11_425))))
 (= (- ?x56344 (* (* 2.0 l_0_11_399) l_0_11_426)) 0.0)))))
(assert
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x49161 (* ?x49160 l_0_11_282)))
 (let ((?x49157 (* 2.0 l_0_11_254)))
 (let ((?x49158 (* ?x49157 l_0_11_281)))
 (let ((?x56389 (- (* (* (- 2.0) l_0_11_218) l_0_11_227) (* (* 2.0 l_0_11_219) l_0_11_228))))
 (let ((?x56395 (- (- (+ (+ ?x56389 ?x49158) ?x49161) (* (* 2.0 l_0_11_335) l_0_11_353)) (* (* 2.0 l_0_11_336) l_0_11_354))))
 (let ((?x56399 (- (- ?x56395 (* (* 2.0 l_0_11_337) l_0_11_355)) (* (* 2.0 l_0_11_338) l_0_11_356))))
 (let ((?x56403 (- (- ?x56399 (* (* 2.0 l_0_11_339) l_0_11_357)) (* (* 2.0 l_0_11_371) l_0_11_389))))
 (let ((?x56407 (- (- ?x56403 (* (* 2.0 l_0_11_372) l_0_11_390)) (* (* 2.0 l_0_11_373) l_0_11_391))))
 (let ((?x56411 (- (- ?x56407 (* (* 2.0 l_0_11_374) l_0_11_392)) (* (* 2.0 l_0_11_375) l_0_11_393))))
 (let ((?x56415 (- (- ?x56411 (* (* 2.0 l_0_11_407) l_0_11_425)) (* (* 2.0 l_0_11_408) l_0_11_426))))
 (let ((?x56419 (- (- ?x56415 (* (* 2.0 l_0_11_409) l_0_11_427)) (* (* 2.0 l_0_11_410) l_0_11_428))))
 (= (- ?x56419 (* (* 2.0 l_0_11_411) l_0_11_429)) 0.0))))))))))))))
(assert
 (let ((?x56480 (* l_0_11_432 l_0_11_432)))
 (let ((?x56478 (* l_0_11_431 l_0_11_431)))
 (let ((?x56476 (* l_0_11_430 l_0_11_430)))
 (let ((?x56474 (* l_0_11_429 l_0_11_429)))
 (let ((?x56472 (* l_0_11_428 l_0_11_428)))
 (let ((?x56470 (* l_0_11_427 l_0_11_427)))
 (let ((?x56468 (* l_0_11_426 l_0_11_426)))
 (let ((?x56466 (* l_0_11_425 l_0_11_425)))
 (let ((?x56464 (* l_0_11_396 l_0_11_396)))
 (let ((?x56462 (* l_0_11_395 l_0_11_395)))
 (let ((?x56460 (* l_0_11_394 l_0_11_394)))
 (let ((?x56458 (* l_0_11_393 l_0_11_393)))
 (let ((?x56456 (* l_0_11_392 l_0_11_392)))
 (let ((?x56454 (* l_0_11_391 l_0_11_391)))
 (let ((?x56452 (* l_0_11_390 l_0_11_390)))
 (let ((?x56450 (* l_0_11_389 l_0_11_389)))
 (let ((?x56448 (* l_0_11_360 l_0_11_360)))
 (let ((?x56446 (* l_0_11_359 l_0_11_359)))
 (let ((?x56444 (* l_0_11_358 l_0_11_358)))
 (let ((?x56442 (* l_0_11_357 l_0_11_357)))
 (let ((?x56440 (* l_0_11_356 l_0_11_356)))
 (let ((?x56438 (* l_0_11_355 l_0_11_355)))
 (let ((?x56436 (* l_0_11_354 l_0_11_354)))
 (let ((?x56434 (* l_0_11_353 l_0_11_353)))
 (let ((?x56433 (- (* (* (- 2.0) l_0_11_218) l_0_11_245) (* (* 2.0 l_0_11_219) l_0_11_246))))
 (let ((?x56447 (- (- (- (- (- (- (- ?x56433 ?x56434) ?x56436) ?x56438) ?x56440) ?x56442) ?x56444) ?x56446)))
 (let ((?x56461 (- (- (- (- (- (- (- ?x56447 ?x56448) ?x56450) ?x56452) ?x56454) ?x56456) ?x56458) ?x56460)))
 (let ((?x56475 (- (- (- (- (- (- (- ?x56461 ?x56462) ?x56464) ?x56466) ?x56468) ?x56470) ?x56472) ?x56474)))
 (= (- (- (- ?x56475 ?x56476) ?x56478) ?x56480) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x53785 (* 2.0 l_0_11_267)))
 (let ((?x53786 (* ?x53785 l_0_11_285)))
 (let ((?x53782 (* 2.0 l_0_11_266)))
 (let ((?x53783 (* ?x53782 l_0_11_284)))
 (let ((?x53779 (* 2.0 l_0_11_265)))
 (let ((?x53780 (* ?x53779 l_0_11_283)))
 (let ((?x53776 (* 2.0 l_0_11_264)))
 (let ((?x53777 (* ?x53776 l_0_11_282)))
 (let ((?x53773 (* 2.0 l_0_11_263)))
 (let ((?x53774 (* ?x53773 l_0_11_281)))
 (let ((?x56522 (* l_0_11_231 l_0_11_231)))
 (let ((?x56520 (* l_0_11_230 l_0_11_230)))
 (let ((?x56518 (* l_0_11_229 l_0_11_229)))
 (let ((?x56519 (- (- (* (- l_0_11_227) l_0_11_227) (* l_0_11_228 l_0_11_228)) ?x56518)))
 (let ((?x56528 (+ (+ (+ (+ (+ (- (- ?x56519 ?x56520) ?x56522) ?x53774) ?x53777) ?x53780) ?x53783) ?x53786)))
 (= ?x56528 0.0)))))))))))))))))
(assert
 (let ((?x54026 (* l_0_11_288 l_0_11_288)))
 (let ((?x54024 (* l_0_11_287 l_0_11_287)))
 (let ((?x54022 (* l_0_11_286 l_0_11_286)))
 (let ((?x54020 (* l_0_11_285 l_0_11_285)))
 (let ((?x54018 (* l_0_11_284 l_0_11_284)))
 (let ((?x54016 (* l_0_11_283 l_0_11_283)))
 (let ((?x54014 (* l_0_11_282 l_0_11_282)))
 (let ((?x54012 (* l_0_11_281 l_0_11_281)))
 (let ((?x56539 (- (* (* (- 2.0) l_0_11_227) l_0_11_245) (* (* 2.0 l_0_11_228) l_0_11_246))))
 (let ((?x56543 (- (- ?x56539 (* (* 2.0 l_0_11_229) l_0_11_247)) (* (* 2.0 l_0_11_230) l_0_11_248))))
 (let ((?x56548 (+ (+ (+ (- ?x56543 (* (* 2.0 l_0_11_231) l_0_11_249)) ?x54012) ?x54014) ?x54016)))
 (= (+ (+ (+ (+ (+ ?x56548 ?x54018) ?x54020) ?x54022) ?x54024) ?x54026) 0.0)))))))))))))
(assert
 (let ((?x56578 (* l_0_11_252 l_0_11_252)))
 (let ((?x56576 (* l_0_11_251 l_0_11_251)))
 (let ((?x56574 (* l_0_11_250 l_0_11_250)))
 (let ((?x56572 (* l_0_11_249 l_0_11_249)))
 (let ((?x56570 (* l_0_11_248 l_0_11_248)))
 (let ((?x28156 (* l_0_11_247 l_0_11_247)))
 (let ((?x56569 (- (- (* (- l_0_11_245) l_0_11_245) (* l_0_11_246 l_0_11_246)) ?x28156)))
 (= (- (- (- (- (- ?x56569 ?x56570) ?x56572) ?x56574) ?x56576) ?x56578) 0.0)))))))))
(assert
 (let ((?x56602 (- (- (* (- l_0_11_254) l_0_11_254) (* l_0_11_255 l_0_11_255)) (* (* 2.0 l_0_11_326) l_0_11_346))))
 (let ((?x56606 (- (- ?x56602 (* (* 2.0 l_0_11_327) l_0_11_347)) (* (* 2.0 l_0_11_362) l_0_11_382))))
 (let ((?x56610 (- (- ?x56606 (* (* 2.0 l_0_11_363) l_0_11_383)) (* (* 2.0 l_0_11_398) l_0_11_418))))
 (= (- ?x56610 (* (* 2.0 l_0_11_399) l_0_11_419)) 0.0)))))
(assert
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x56641 (* ?x49160 l_0_11_257)))
 (let ((?x56644 (- (- (* (* (- 2.0) l_0_11_254) l_0_11_256) ?x56641) (* (* 2.0 l_0_11_328) l_0_11_346))))
 (let ((?x56648 (- (- ?x56644 (* (* 2.0 l_0_11_329) l_0_11_347)) (* (* 2.0 l_0_11_330) l_0_11_348))))
 (let ((?x56652 (- (- ?x56648 (* (* 2.0 l_0_11_364) l_0_11_382)) (* (* 2.0 l_0_11_365) l_0_11_383))))
 (let ((?x56656 (- (- ?x56652 (* (* 2.0 l_0_11_366) l_0_11_384)) (* (* 2.0 l_0_11_400) l_0_11_418))))
 (let ((?x56660 (- (- ?x56656 (* (* 2.0 l_0_11_401) l_0_11_419)) (* (* 2.0 l_0_11_402) l_0_11_420))))
 (= ?x56660 0.0)))))))))
(assert
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x56691 (* ?x49160 l_0_11_275)))
 (let ((?x56689 (* ?x49160 l_0_11_264)))
 (let ((?x56688 (+ (* (* (- 2.0) l_0_11_254) l_0_11_263) (* (* 2.0 l_0_11_254) l_0_11_274))))
 (let ((?x56696 (- (- (+ (- ?x56688 ?x56689) ?x56691) (* (* 2.0 l_0_11_335) l_0_11_346)) (* (* 2.0 l_0_11_336) l_0_11_347))))
 (let ((?x56700 (- (- ?x56696 (* (* 2.0 l_0_11_337) l_0_11_348)) (* (* 2.0 l_0_11_338) l_0_11_349))))
 (let ((?x56704 (- (- ?x56700 (* (* 2.0 l_0_11_339) l_0_11_350)) (* (* 2.0 l_0_11_371) l_0_11_382))))
 (let ((?x56708 (- (- ?x56704 (* (* 2.0 l_0_11_372) l_0_11_383)) (* (* 2.0 l_0_11_373) l_0_11_384))))
 (let ((?x56712 (- (- ?x56708 (* (* 2.0 l_0_11_374) l_0_11_385)) (* (* 2.0 l_0_11_375) l_0_11_386))))
 (let ((?x56716 (- (- ?x56712 (* (* 2.0 l_0_11_407) l_0_11_418)) (* (* 2.0 l_0_11_408) l_0_11_419))))
 (let ((?x56720 (- (- ?x56716 (* (* 2.0 l_0_11_409) l_0_11_420)) (* (* 2.0 l_0_11_410) l_0_11_421))))
 (= (- ?x56720 (* (* 2.0 l_0_11_411) l_0_11_422)) 0.0)))))))))))))
(assert
 (let ((?x56806 (* l_0_11_424 l_0_11_424)))
 (let ((?x56804 (* l_0_11_423 l_0_11_423)))
 (let ((?x56802 (* l_0_11_422 l_0_11_422)))
 (let ((?x56800 (* l_0_11_421 l_0_11_421)))
 (let ((?x56798 (* l_0_11_420 l_0_11_420)))
 (let ((?x56796 (* l_0_11_419 l_0_11_419)))
 (let ((?x56794 (* l_0_11_418 l_0_11_418)))
 (let ((?x56792 (* l_0_11_388 l_0_11_388)))
 (let ((?x56790 (* l_0_11_387 l_0_11_387)))
 (let ((?x56788 (* l_0_11_386 l_0_11_386)))
 (let ((?x56786 (* l_0_11_385 l_0_11_385)))
 (let ((?x56784 (* l_0_11_384 l_0_11_384)))
 (let ((?x56782 (* l_0_11_383 l_0_11_383)))
 (let ((?x56780 (* l_0_11_382 l_0_11_382)))
 (let ((?x56778 (* l_0_11_352 l_0_11_352)))
 (let ((?x56776 (* l_0_11_351 l_0_11_351)))
 (let ((?x56774 (* l_0_11_350 l_0_11_350)))
 (let ((?x56772 (* l_0_11_349 l_0_11_349)))
 (let ((?x56770 (* l_0_11_348 l_0_11_348)))
 (let ((?x56768 (* l_0_11_347 l_0_11_347)))
 (let ((?x28474 (* l_0_11_346 l_0_11_346)))
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x56691 (* ?x49160 l_0_11_275)))
 (let ((?x56771 (- (- (- (- (* (* (- 2.0) l_0_11_254) l_0_11_274) ?x56691) ?x28474) ?x56768) ?x56770)))
 (let ((?x56785 (- (- (- (- (- (- (- ?x56771 ?x56772) ?x56774) ?x56776) ?x56778) ?x56780) ?x56782) ?x56784)))
 (let ((?x56799 (- (- (- (- (- (- (- ?x56785 ?x56786) ?x56788) ?x56790) ?x56792) ?x56794) ?x56796) ?x56798)))
 (= (- (- (- (- ?x56799 ?x56800) ?x56802) ?x56804) ?x56806) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x56825 (* l_0_11_258 l_0_11_258)))
 (let ((?x56826 (- (- (* (- l_0_11_256) l_0_11_256) (* l_0_11_257 l_0_11_257)) ?x56825)))
 (= ?x56826 0.0))))
(assert
 (let ((?x49904 (* 2.0 l_0_11_258)))
 (let ((?x56846 (* ?x49904 l_0_11_276)))
 (let ((?x56844 (* ?x49904 l_0_11_265)))
 (let ((?x49901 (* 2.0 l_0_11_257)))
 (let ((?x56842 (* ?x49901 l_0_11_275)))
 (let ((?x56840 (* ?x49901 l_0_11_264)))
 (let ((?x56839 (+ (* (* (- 2.0) l_0_11_256) l_0_11_263) (* (* 2.0 l_0_11_256) l_0_11_274))))
 (= (+ (- (+ (- ?x56839 ?x56840) ?x56842) ?x56844) ?x56846) 0.0)))))))))
(assert
 (let ((?x49904 (* 2.0 l_0_11_258)))
 (let ((?x56846 (* ?x49904 l_0_11_276)))
 (let ((?x49901 (* 2.0 l_0_11_257)))
 (let ((?x56842 (* ?x49901 l_0_11_275)))
 (= (- (- (* (* (- 2.0) l_0_11_256) l_0_11_274) ?x56842) ?x56846) 0.0))))))
(assert
 (let ((?x56892 (* l_0_11_267 l_0_11_267)))
 (let ((?x53785 (* 2.0 l_0_11_267)))
 (let ((?x56890 (* ?x53785 l_0_11_278)))
 (let ((?x56888 (* l_0_11_266 l_0_11_266)))
 (let ((?x53782 (* 2.0 l_0_11_266)))
 (let ((?x56886 (* ?x53782 l_0_11_277)))
 (let ((?x56884 (* l_0_11_265 l_0_11_265)))
 (let ((?x53779 (* 2.0 l_0_11_265)))
 (let ((?x56882 (* ?x53779 l_0_11_276)))
 (let ((?x56880 (* l_0_11_264 l_0_11_264)))
 (let ((?x53776 (* 2.0 l_0_11_264)))
 (let ((?x56878 (* ?x53776 l_0_11_275)))
 (let ((?x56876 (* l_0_11_263 l_0_11_263)))
 (let ((?x56883 (+ (- (+ (- (* (* 2.0 l_0_11_263) l_0_11_274) ?x56876) ?x56878) ?x56880) ?x56882)))
 (= (- (+ (- (+ (- ?x56883 ?x56884) ?x56886) ?x56888) ?x56890) ?x56892) 0.0))))))))))))))))
(assert
 (let ((?x56937 (* l_0_11_280 l_0_11_280)))
 (let ((?x56935 (* l_0_11_279 l_0_11_279)))
 (let ((?x56933 (* l_0_11_278 l_0_11_278)))
 (let ((?x56931 (* l_0_11_277 l_0_11_277)))
 (let ((?x56929 (* l_0_11_276 l_0_11_276)))
 (let ((?x56927 (* l_0_11_275 l_0_11_275)))
 (let ((?x56925 (* l_0_11_274 l_0_11_274)))
 (let ((?x53785 (* 2.0 l_0_11_267)))
 (let ((?x56890 (* ?x53785 l_0_11_278)))
 (let ((?x53782 (* 2.0 l_0_11_266)))
 (let ((?x56886 (* ?x53782 l_0_11_277)))
 (let ((?x53779 (* 2.0 l_0_11_265)))
 (let ((?x56882 (* ?x53779 l_0_11_276)))
 (let ((?x53776 (* 2.0 l_0_11_264)))
 (let ((?x56878 (* ?x53776 l_0_11_275)))
 (let ((?x56924 (- (- (- (- (* (* (- 2.0) l_0_11_263) l_0_11_274) ?x56878) ?x56882) ?x56886) ?x56890)))
 (let ((?x56938 (+ (+ (+ (+ (+ (+ (+ ?x56924 ?x56925) ?x56927) ?x56929) ?x56931) ?x56933) ?x56935) ?x56937)))
 (= ?x56938 0.0)))))))))))))))))))
(assert
 (let ((?x56937 (* l_0_11_280 l_0_11_280)))
 (let ((?x56935 (* l_0_11_279 l_0_11_279)))
 (let ((?x56933 (* l_0_11_278 l_0_11_278)))
 (let ((?x56931 (* l_0_11_277 l_0_11_277)))
 (let ((?x56929 (* l_0_11_276 l_0_11_276)))
 (let ((?x28835 (- (- (* (- l_0_11_274) l_0_11_274) (* l_0_11_275 l_0_11_275)) ?x56929)))
 (= (- (- (- (- ?x28835 ?x56931) ?x56933) ?x56935) ?x56937) 0.0))))))))
(assert
 (let ((?x29037 (- (+ (* l_0_11_254 l_0_11_254) (* l_0_11_255 l_0_11_255)) (* (* 2.0 l_0_11_326) l_0_11_335))))
 (let ((?x28972 (- (- ?x29037 (* (* 2.0 l_0_11_327) l_0_11_336)) (* (* 2.0 l_0_11_362) l_0_11_371))))
 (let ((?x28955 (- (- ?x28972 (* (* 2.0 l_0_11_363) l_0_11_372)) (* (* 2.0 l_0_11_398) l_0_11_407))))
 (= (- ?x28955 (* (* 2.0 l_0_11_399) l_0_11_408)) 0.0)))))
(assert
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x56641 (* ?x49160 l_0_11_257)))
 (let ((?x56960 (- (+ (* (* 2.0 l_0_11_254) l_0_11_256) ?x56641) (* (* 2.0 l_0_11_328) l_0_11_335))))
 (let ((?x56964 (- (- ?x56960 (* (* 2.0 l_0_11_329) l_0_11_336)) (* (* 2.0 l_0_11_330) l_0_11_337))))
 (let ((?x56968 (- (- ?x56964 (* (* 2.0 l_0_11_364) l_0_11_371)) (* (* 2.0 l_0_11_365) l_0_11_372))))
 (let ((?x56972 (- (- ?x56968 (* (* 2.0 l_0_11_366) l_0_11_373)) (* (* 2.0 l_0_11_400) l_0_11_407))))
 (let ((?x56976 (- (- ?x56972 (* (* 2.0 l_0_11_401) l_0_11_408)) (* (* 2.0 l_0_11_402) l_0_11_409))))
 (= ?x56976 0.0)))))))))
(assert
 (let ((?x57021 (* l_0_11_411 l_0_11_411)))
 (let ((?x57019 (* l_0_11_410 l_0_11_410)))
 (let ((?x57017 (* l_0_11_409 l_0_11_409)))
 (let ((?x57015 (* l_0_11_408 l_0_11_408)))
 (let ((?x57013 (* l_0_11_407 l_0_11_407)))
 (let ((?x57011 (* l_0_11_375 l_0_11_375)))
 (let ((?x57009 (* l_0_11_374 l_0_11_374)))
 (let ((?x57007 (* l_0_11_373 l_0_11_373)))
 (let ((?x57005 (* l_0_11_372 l_0_11_372)))
 (let ((?x57003 (* l_0_11_371 l_0_11_371)))
 (let ((?x57001 (* l_0_11_339 l_0_11_339)))
 (let ((?x56999 (* l_0_11_338 l_0_11_338)))
 (let ((?x29284 (* l_0_11_337 l_0_11_337)))
 (let ((?x29280 (* l_0_11_336 l_0_11_336)))
 (let ((?x29285 (* l_0_11_335 l_0_11_335)))
 (let ((?x49160 (* 2.0 l_0_11_255)))
 (let ((?x56689 (* ?x49160 l_0_11_264)))
 (let ((?x56998 (- (- (- (+ (* (* 2.0 l_0_11_254) l_0_11_263) ?x56689) ?x29285) ?x29280) ?x29284)))
 (let ((?x57012 (- (- (- (- (- (- (- ?x56998 ?x56999) ?x57001) ?x57003) ?x57005) ?x57007) ?x57009) ?x57011)))
 (= (- (- (- (- (- ?x57012 ?x57013) ?x57015) ?x57017) ?x57019) ?x57021) 0.0)))))))))))))))))))))
(assert
 (let ((?x56825 (* l_0_11_258 l_0_11_258)))
 (let ((?x57046 (+ (+ (* l_0_11_256 l_0_11_256) (* l_0_11_257 l_0_11_257)) ?x56825)))
 (= ?x57046 0.0))))
(assert
 (let ((?x49904 (* 2.0 l_0_11_258)))
 (let ((?x56844 (* ?x49904 l_0_11_265)))
 (let ((?x49901 (* 2.0 l_0_11_257)))
 (let ((?x56840 (* ?x49901 l_0_11_264)))
 (= (+ (+ (* (* 2.0 l_0_11_256) l_0_11_263) ?x56840) ?x56844) 0.0))))))
(assert
 (let ((?x56892 (* l_0_11_267 l_0_11_267)))
 (let ((?x56888 (* l_0_11_266 l_0_11_266)))
 (let ((?x56884 (* l_0_11_265 l_0_11_265)))
 (let ((?x57048 (+ (+ (* l_0_11_263 l_0_11_263) (* l_0_11_264 l_0_11_264)) ?x56884)))
 (= (+ (+ ?x57048 ?x56888) ?x56892) 0.0))))))
(assert
 (let ((?x57055 (- (* (* (- 2.0) l_0_11_326) l_0_11_328) (* (* 2.0 l_0_11_327) l_0_11_329))))
 (let ((?x57059 (- (- ?x57055 (* (* 2.0 l_0_11_362) l_0_11_364)) (* (* 2.0 l_0_11_363) l_0_11_365))))
 (let ((?x57063 (- (- ?x57059 (* (* 2.0 l_0_11_398) l_0_11_400)) (* (* 2.0 l_0_11_399) l_0_11_401))))
 (= ?x57063 0.0)))))
(assert
 (let ((?x57098 (* l_0_11_402 l_0_11_402)))
 (let ((?x57096 (* l_0_11_401 l_0_11_401)))
 (let ((?x57094 (* l_0_11_400 l_0_11_400)))
 (let ((?x57092 (* l_0_11_366 l_0_11_366)))
 (let ((?x57090 (* l_0_11_365 l_0_11_365)))
 (let ((?x57088 (* l_0_11_364 l_0_11_364)))
 (let ((?x57086 (* l_0_11_330 l_0_11_330)))
 (let ((?x57087 (- (- (* (- l_0_11_328) l_0_11_328) (* l_0_11_329 l_0_11_329)) ?x57086)))
 (= (- (- (- (- (- (- ?x57087 ?x57088) ?x57090) ?x57092) ?x57094) ?x57096) ?x57098) 0.0))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_28 0.0))
(assert
 (>= l_0_11_36 0.0))
(assert
 (>= l_0_11_37 0.0))
(assert
 (>= l_0_11_39 0.0))
(assert
 (>= l_0_11_42 0.0))
(assert
 (>= l_0_11_46 0.0))
(assert
 (>= l_0_11_51 0.0))
(assert
 (>= l_0_11_57 0.0))
(assert
 (>= l_0_11_64 0.0))
(assert
 (>= l_0_11_72 0.0))
(assert
 (>= l_0_11_73 0.0))
(assert
 (>= l_0_11_75 0.0))
(assert
 (>= l_0_11_78 0.0))
(assert
 (>= l_0_11_82 0.0))
(assert
 (>= l_0_11_87 0.0))
(assert
 (>= l_0_11_93 0.0))
(assert
 (>= l_0_11_100 0.0))
(assert
 (>= l_0_11_108 0.0))
(assert
 (>= l_0_11_109 0.0))
(assert
 (>= l_0_11_111 0.0))
(assert
 (>= l_0_11_114 0.0))
(assert
 (>= l_0_11_118 0.0))
(assert
 (>= l_0_11_123 0.0))
(assert
 (>= l_0_11_129 0.0))
(assert
 (>= l_0_11_136 0.0))
(assert
 (>= l_0_11_144 0.0))
(assert
 (>= l_0_11_145 0.0))
(assert
 (>= l_0_11_147 0.0))
(assert
 (>= l_0_11_150 0.0))
(assert
 (>= l_0_11_154 0.0))
(assert
 (>= l_0_11_159 0.0))
(assert
 (>= l_0_11_165 0.0))
(assert
 (>= l_0_11_172 0.0))
(assert
 (>= l_0_11_180 0.0))
(assert
 (>= l_0_11_181 0.0))
(assert
 (>= l_0_11_183 0.0))
(assert
 (>= l_0_11_186 0.0))
(assert
 (>= l_0_11_190 0.0))
(assert
 (>= l_0_11_195 0.0))
(assert
 (>= l_0_11_201 0.0))
(assert
 (>= l_0_11_208 0.0))
(assert
 (>= l_0_11_216 0.0))
(assert
 (>= l_0_11_217 0.0))
(assert
 (>= l_0_11_219 0.0))
(assert
 (>= l_0_11_222 0.0))
(assert
 (>= l_0_11_226 0.0))
(assert
 (>= l_0_11_231 0.0))
(assert
 (>= l_0_11_237 0.0))
(assert
 (>= l_0_11_244 0.0))
(assert
 (>= l_0_11_252 0.0))
(assert
 (>= l_0_11_253 0.0))
(assert
 (>= l_0_11_255 0.0))
(assert
 (>= l_0_11_258 0.0))
(assert
 (>= l_0_11_262 0.0))
(assert
 (>= l_0_11_267 0.0))
(assert
 (>= l_0_11_273 0.0))
(assert
 (>= l_0_11_280 0.0))
(assert
 (>= l_0_11_288 0.0))
(assert
 (>= l_0_11_289 0.0))
(assert
 (>= l_0_11_291 0.0))
(assert
 (>= l_0_11_294 0.0))
(assert
 (>= l_0_11_298 0.0))
(assert
 (>= l_0_11_303 0.0))
(assert
 (>= l_0_11_309 0.0))
(assert
 (>= l_0_11_316 0.0))
(assert
 (>= l_0_11_324 0.0))
(assert
 (>= l_0_11_325 0.0))
(assert
 (>= l_0_11_327 0.0))
(assert
 (>= l_0_11_330 0.0))
(assert
 (>= l_0_11_334 0.0))
(assert
 (>= l_0_11_339 0.0))
(assert
 (>= l_0_11_345 0.0))
(assert
 (>= l_0_11_352 0.0))
(assert
 (>= l_0_11_360 0.0))
(assert
 (>= l_0_11_361 0.0))
(assert
 (>= l_0_11_363 0.0))
(assert
 (>= l_0_11_366 0.0))
(assert
 (>= l_0_11_370 0.0))
(assert
 (>= l_0_11_375 0.0))
(assert
 (>= l_0_11_381 0.0))
(assert
 (>= l_0_11_388 0.0))
(assert
 (>= l_0_11_396 0.0))
(assert
 (>= l_0_11_397 0.0))
(assert
 (>= l_0_11_399 0.0))
(assert
 (>= l_0_11_402 0.0))
(assert
 (>= l_0_11_406 0.0))
(assert
 (>= l_0_11_411 0.0))
(assert
 (>= l_0_11_417 0.0))
(assert
 (>= l_0_11_424 0.0))
(assert
 (>= l_0_11_432 0.0))
(assert
 (let ((?x57231 (* l_0_12_435 l_0_12_435)))
 (let ((?x57229 (* l_0_12_434 l_0_12_434)))
 (let ((?x57227 (* l_0_12_399 l_0_12_399)))
 (let ((?x57225 (* l_0_12_398 l_0_12_398)))
 (let ((?x57223 (* l_0_12_363 l_0_12_363)))
 (let ((?x57221 (* l_0_12_362 l_0_12_362)))
 (let ((?x57219 (* l_0_12_327 l_0_12_327)))
 (let ((?x57226 (- (- (- (- (- _a_0_ (* l_0_12_326 l_0_12_326)) ?x57219) ?x57221) ?x57223) ?x57225)))
 (= (- (- (- ?x57226 ?x57227) ?x57229) ?x57231) 0.0))))))))))
(assert
 (let ((?x57258 (* l_0_12_75 l_0_12_75)))
 (let ((?x57256 (* l_0_12_74 l_0_12_74)))
 (let ((?x57242 (* l_0_12_291 l_0_12_291)))
 (let ((?x29540 (* l_0_12_290 l_0_12_290)))
 (let ((?x29541 (* l_0_12_111 l_0_12_111)))
 (let ((?x57246 (- (- (- (- (- _a_1_ (* l_0_12_110 l_0_12_110)) ?x29541) ?x29540) ?x57242) (* (* 2.0 l_0_12_325) l_0_12_326))))
 (let ((?x57252 (- (- ?x57246 (* (* 2.0 l_0_12_361) l_0_12_362)) (* (* 2.0 l_0_12_397) l_0_12_398))))
 (= (+ (+ (- ?x57252 (* (* 2.0 l_0_12_433) l_0_12_434)) ?x57256) ?x57258) 0.0)))))))))
(assert
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x57287 (* ?x57286 l_0_12_282)))
 (let ((?x57283 (* 2.0 l_0_12_254)))
 (let ((?x57284 (* ?x57283 l_0_12_281)))
 (let ((?x29614 (* l_0_12_147 l_0_12_147)))
 (let ((?x29656 (* l_0_12_146 l_0_12_146)))
 (let ((?x29654 (+ (* (/ 1.0 2.0) (* l_0_12_110 l_0_12_110)) (* (/ 1.0 2.0) (* l_0_12_111 l_0_12_111)))))
 (let ((?x57282 (- (- (- (- ?x29654 ?x29656) ?x29614) (* (* 2.0 l_0_12_218) l_0_12_238)) (* (* 2.0 l_0_12_219) l_0_12_239))))
 (let ((?x57294 (- (- (- (- ?x57282 ?x57284) ?x57287) (* (* 2.0 l_0_12_346) l_0_12_353)) (* (* 2.0 l_0_12_347) l_0_12_354))))
 (let ((?x57300 (- (- ?x57294 (* (* 2.0 l_0_12_348) l_0_12_355)) (* (* 2.0 l_0_12_349) l_0_12_356))))
 (let ((?x57306 (- (- ?x57300 (* (* 2.0 l_0_12_350) l_0_12_357)) (* (* 2.0 l_0_12_351) l_0_12_358))))
 (let ((?x57312 (- (- ?x57306 (* (* 2.0 l_0_12_352) l_0_12_359)) (* (* 2.0 l_0_12_382) l_0_12_389))))
 (let ((?x57318 (- (- ?x57312 (* (* 2.0 l_0_12_383) l_0_12_390)) (* (* 2.0 l_0_12_384) l_0_12_391))))
 (let ((?x57324 (- (- ?x57318 (* (* 2.0 l_0_12_385) l_0_12_392)) (* (* 2.0 l_0_12_386) l_0_12_393))))
 (let ((?x57330 (- (- ?x57324 (* (* 2.0 l_0_12_387) l_0_12_394)) (* (* 2.0 l_0_12_388) l_0_12_395))))
 (let ((?x57336 (- (- ?x57330 (* (* 2.0 l_0_12_418) l_0_12_425)) (* (* 2.0 l_0_12_419) l_0_12_426))))
 (let ((?x57342 (- (- ?x57336 (* (* 2.0 l_0_12_420) l_0_12_427)) (* (* 2.0 l_0_12_421) l_0_12_428))))
 (let ((?x57348 (- (- ?x57342 (* (* 2.0 l_0_12_422) l_0_12_429)) (* (* 2.0 l_0_12_423) l_0_12_430))))
 (let ((?x57354 (- (- ?x57348 (* (* 2.0 l_0_12_424) l_0_12_431)) (* (* 2.0 l_0_12_454) l_0_12_461))))
 (let ((?x57360 (- (- ?x57354 (* (* 2.0 l_0_12_455) l_0_12_462)) (* (* 2.0 l_0_12_456) l_0_12_463))))
 (let ((?x57366 (- (- ?x57360 (* (* 2.0 l_0_12_457) l_0_12_464)) (* (* 2.0 l_0_12_458) l_0_12_465))))
 (let ((?x57372 (- (- ?x57366 (* (* 2.0 l_0_12_459) l_0_12_466)) (* (* 2.0 l_0_12_460) l_0_12_467))))
 (let ((?x57378 (- (- ?x57372 (* (* (/ 1.0 2.0) l_0_12_74) l_0_12_74)) (* (* (/ 1.0 2.0) l_0_12_75) l_0_12_75))))
 (= (- ?x57378 (/ 1.0 4.0)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x57459 (* l_0_12_37 l_0_12_37)))
 (let ((?x57457 (* l_0_12_181 l_0_12_181)))
 (let ((?x57458 (+ (- (* (- l_0_12_1) l_0_12_1) (* l_0_12_145 l_0_12_145)) ?x57457)))
 (= (+ ?x57458 ?x57459) 0.0)))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57504 (* ?x57503 l_0_12_38)))
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x57501 (* ?x57500 l_0_12_319)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x57498 (* ?x57497 l_0_12_318)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x57495 (* ?x57494 l_0_12_317)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57489 (* ?x57488 l_0_12_182)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57486 (* ?x57485 l_0_12_146)))
 (let ((?x57469 (+ (* (* (- 2.0) l_0_12_1) l_0_12_2) (* (* 2.0 l_0_12_101) l_0_12_76))))
 (let ((?x57475 (+ (+ ?x57469 (* (* 2.0 l_0_12_102) l_0_12_77)) (* (* 2.0 l_0_12_103) l_0_12_78))))
 (let ((?x57481 (- (- ?x57475 (* (* 2.0 l_0_12_112) l_0_12_137)) (* (* 2.0 l_0_12_113) l_0_12_138))))
 (let ((?x57493 (- (+ (- (- ?x57481 (* (* 2.0 l_0_12_114) l_0_12_139)) ?x57486) ?x57489) (* (* 2.0 l_0_12_217) l_0_12_220))))
 (= (+ (- (- (- ?x57493 ?x57495) ?x57498) ?x57501) ?x57504) 0.0))))))))))))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57549 (* ?x57503 l_0_12_40)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57547 (* ?x57488 l_0_12_184)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x30321 (* ?x57485 l_0_12_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_1) l_0_12_4) ?x30321) ?x57547) ?x57549) 0.0))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57567 (* ?x57503 l_0_12_43)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57565 (* ?x57488 l_0_12_187)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57558 (* ?x57485 l_0_12_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_1) l_0_12_7) ?x57558) ?x57565) ?x57567) 0.0))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57587 (* ?x57503 l_0_12_47)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57585 (* ?x57488 l_0_12_191)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57583 (* ?x57485 l_0_12_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_1) l_0_12_11) ?x57583) ?x57585) ?x57587) 0.0))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57610 (* ?x57503 l_0_12_52)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57608 (* ?x57488 l_0_12_196)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57601 (* ?x57485 l_0_12_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_1) l_0_12_16) ?x57601) ?x57608) ?x57610) 0.0))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57634 (* ?x57503 l_0_12_58)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57632 (* ?x57488 l_0_12_202)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57630 (* ?x57485 l_0_12_166)))
 (let ((?x30321 (* ?x57485 l_0_12_148)))
 (let ((?x57628 (+ (* (* (- 2.0) l_0_12_1) l_0_12_22) (* (* 1.0 l_0_12_109) l_0_12_112))))
 (let ((?x57638 (- (+ (+ (- (- ?x57628 ?x30321) ?x57630) ?x57632) ?x57634) (* (* 1.0 l_0_12_73) l_0_12_76))))
 (= ?x57638 0.0)))))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57666 (* ?x57503 l_0_12_65)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57664 (* ?x57488 l_0_12_209)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57662 (* ?x57485 l_0_12_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_1) l_0_12_29) ?x57662) ?x57664) ?x57666) 0.0))))))))
(assert
 (let ((?x57715 (* l_0_12_39 l_0_12_39)))
 (let ((?x57713 (* l_0_12_38 l_0_12_38)))
 (let ((?x57693 (* l_0_12_3 l_0_12_3)))
 (let ((?x57687 (* l_0_12_2 l_0_12_2)))
 (let ((?x57685 (* l_0_12_183 l_0_12_183)))
 (let ((?x57683 (* l_0_12_182 l_0_12_182)))
 (let ((?x57684 (+ (- (* (- l_0_12_146) l_0_12_146) (* l_0_12_147 l_0_12_147)) ?x57683)))
 (let ((?x57692 (- (- (- (+ ?x57684 ?x57685) ?x57687) (* (* 2.0 l_0_12_218) l_0_12_220)) (* (* 2.0 l_0_12_219) l_0_12_221))))
 (let ((?x57700 (- (- (- ?x57692 ?x57693) (* (* 2.0 l_0_12_328) l_0_12_353)) (* (* 2.0 l_0_12_329) l_0_12_354))))
 (let ((?x57706 (- (- ?x57700 (* (* 2.0 l_0_12_330) l_0_12_355)) (* (* 2.0 l_0_12_364) l_0_12_389))))
 (let ((?x57712 (- (- ?x57706 (* (* 2.0 l_0_12_365) l_0_12_390)) (* (* 2.0 l_0_12_366) l_0_12_391))))
 (let ((?x57722 (- (- (+ (+ ?x57712 ?x57713) ?x57715) (* (* 2.0 l_0_12_400) l_0_12_425)) (* (* 2.0 l_0_12_401) l_0_12_426))))
 (let ((?x57728 (- (- ?x57722 (* (* 2.0 l_0_12_402) l_0_12_427)) (* (* 2.0 l_0_12_436) l_0_12_461))))
 (let ((?x57734 (- (- ?x57728 (* (* 2.0 l_0_12_437) l_0_12_462)) (* (* 2.0 l_0_12_438) l_0_12_463))))
 (= ?x57734 0.0))))))))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x57788 (* ?x57787 l_0_12_41)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x57785 (* ?x57784 l_0_12_40)))
 (let ((?x57781 (* 2.0 l_0_12_3)))
 (let ((?x57782 (* ?x57781 l_0_12_5)))
 (let ((?x57779 (* l_0_12_222 l_0_12_222)))
 (let ((?x57777 (* l_0_12_221 l_0_12_221)))
 (let ((?x57775 (* l_0_12_220 l_0_12_220)))
 (let ((?x57772 (* 2.0 l_0_12_2)))
 (let ((?x57773 (* ?x57772 l_0_12_4)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x57770 (* ?x57769 l_0_12_185)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x57767 (* ?x57766 l_0_12_184)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x57764 (* ?x57763 l_0_12_149)))
 (let ((?x57774 (- (+ (+ (- (* (* (- 2.0) l_0_12_146) l_0_12_148) ?x57764) ?x57767) ?x57770) ?x57773)))
 (= (+ (+ (- (- (- (- ?x57774 ?x57775) ?x57777) ?x57779) ?x57782) ?x57785) ?x57788) 0.0))))))))))))))))))))
(assert
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x57855 (* ?x57854 l_0_12_67)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x57852 (* ?x57851 l_0_12_66)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x57849 (* ?x57848 l_0_12_65)))
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x57846 (* ?x57787 l_0_12_44)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x57844 (* ?x57784 l_0_12_43)))
 (let ((?x57841 (* 2.0 l_0_12_31)))
 (let ((?x57842 (* ?x57841 l_0_12_6)))
 (let ((?x57838 (* 2.0 l_0_12_30)))
 (let ((?x57839 (* ?x57838 l_0_12_5)))
 (let ((?x57781 (* 2.0 l_0_12_3)))
 (let ((?x57836 (* ?x57781 l_0_12_8)))
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x57501 (* ?x57500 l_0_12_319)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x57498 (* ?x57497 l_0_12_318)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x57495 (* ?x57494 l_0_12_317)))
 (let ((?x57830 (* 2.0 l_0_12_29)))
 (let ((?x57831 (* ?x57830 l_0_12_4)))
 (let ((?x57772 (* 2.0 l_0_12_2)))
 (let ((?x57819 (* ?x57772 l_0_12_7)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x57817 (* ?x57769 l_0_12_188)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x57815 (* ?x57766 l_0_12_187)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x30785 (* ?x57763 l_0_12_152)))
 (let ((?x57820 (- (+ (+ (- (* (* (- 2.0) l_0_12_146) l_0_12_151) ?x30785) ?x57815) ?x57817) ?x57819)))
 (let ((?x57826 (- (- ?x57820 (* (* 2.0 l_0_12_220) l_0_12_223)) (* (* 2.0 l_0_12_221) l_0_12_224))))
 (let ((?x57834 (- (- (+ (- ?x57826 (* (* 2.0 l_0_12_222) l_0_12_225)) ?x57831) ?x57495) ?x57498)))
 (let ((?x57850 (- (+ (+ (+ (+ (- (- ?x57834 ?x57501) ?x57836) ?x57839) ?x57842) ?x57844) ?x57846) ?x57849)))
 (= (- (- ?x57850 ?x57852) ?x57855) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x57929 (* ?x57787 l_0_12_48)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x57927 (* ?x57784 l_0_12_47)))
 (let ((?x57924 (* 2.0 l_0_12_258)))
 (let ((?x57925 (* ?x57924 l_0_12_283)))
 (let ((?x57921 (* 2.0 l_0_12_257)))
 (let ((?x57922 (* ?x57921 l_0_12_282)))
 (let ((?x57918 (* 2.0 l_0_12_256)))
 (let ((?x57919 (* ?x57918 l_0_12_281)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x57910 (* ?x57769 l_0_12_192)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x57908 (* ?x57766 l_0_12_191)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x57906 (* ?x57763 l_0_12_156)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x57904 (* ?x57903 l_0_12_155)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x57901 (* ?x57900 l_0_12_3)))
 (let ((?x57909 (+ (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_2) ?x57901) ?x57904) ?x57906) ?x57908)))
 (let ((?x57915 (- (- (+ ?x57909 ?x57910) (* (* 2.0 l_0_12_220) l_0_12_227)) (* (* 2.0 l_0_12_221) l_0_12_228))))
 (let ((?x57926 (+ (+ (+ (- ?x57915 (* (* 2.0 l_0_12_222) l_0_12_229)) ?x57919) ?x57922) ?x57925)))
 (= (+ (+ ?x57926 ?x57927) ?x57929) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x58007 (* ?x57787 l_0_12_53)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x58005 (* ?x57784 l_0_12_52)))
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x57501 (* ?x57500 l_0_12_319)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x57498 (* ?x57497 l_0_12_318)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x57495 (* ?x57494 l_0_12_317)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x57994 (* ?x57993 l_0_12_211)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x57991 (* ?x57990 l_0_12_210)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x57988 (* ?x57987 l_0_12_209)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x57985 (* ?x57769 l_0_12_197)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x57983 (* ?x57766 l_0_12_196)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x57981 (* ?x57980 l_0_12_3)))
 (let ((?x57977 (* 2.0 l_0_12_16)))
 (let ((?x57978 (* ?x57977 l_0_12_2)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x57975 (* ?x57974 l_0_12_175)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x57972 (* ?x57971 l_0_12_174)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x57969 (* ?x57968 l_0_12_173)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x57966 (* ?x57763 l_0_12_161)))
 (let ((?x57976 (+ (+ (+ (- (* (* (- 2.0) l_0_12_146) l_0_12_160) ?x57966) ?x57969) ?x57972) ?x57975)))
 (let ((?x57995 (- (- (- (+ (+ (- (- ?x57976 ?x57978) ?x57981) ?x57983) ?x57985) ?x57988) ?x57991) ?x57994)))
 (let ((?x57999 (- (- ?x57995 (* (* 2.0 l_0_12_220) l_0_12_232)) (* (* 2.0 l_0_12_221) l_0_12_233))))
 (let ((?x58004 (+ (+ (+ (- ?x57999 (* (* 2.0 l_0_12_222) l_0_12_234)) ?x57495) ?x57498) ?x57501)))
 (= (+ (+ ?x58004 ?x58005) ?x58007) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x58079 (* ?x57787 l_0_12_59)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x58077 (* ?x57784 l_0_12_58)))
 (let ((?x57924 (* 2.0 l_0_12_258)))
 (let ((?x57925 (* ?x57924 l_0_12_283)))
 (let ((?x57921 (* 2.0 l_0_12_257)))
 (let ((?x57922 (* ?x57921 l_0_12_282)))
 (let ((?x57918 (* 2.0 l_0_12_256)))
 (let ((?x57919 (* ?x57918 l_0_12_281)))
 (let ((?x58071 (* 2.0 l_0_12_23)))
 (let ((?x58072 (* ?x58071 l_0_12_3)))
 (let ((?x57772 (* 2.0 l_0_12_2)))
 (let ((?x58063 (* ?x57772 l_0_12_22)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x58061 (* ?x57769 l_0_12_203)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x58059 (* ?x57766 l_0_12_202)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x58057 (* ?x57763 l_0_12_167)))
 (let ((?x57764 (* ?x57763 l_0_12_149)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x58054 (* ?x57903 l_0_12_166)))
 (let ((?x58052 (* ?x57903 l_0_12_148)))
 (let ((?x58051 (+ (* (* 1.0 l_0_12_110) l_0_12_112) (* (* 1.0 l_0_12_111) l_0_12_113))))
 (let ((?x58064 (- (+ (+ (- (- (- (- ?x58051 ?x58052) ?x58054) ?x57764) ?x58057) ?x58059) ?x58061) ?x58063)))
 (let ((?x58068 (- (- ?x58064 (* (* 2.0 l_0_12_220) l_0_12_238)) (* (* 2.0 l_0_12_221) l_0_12_239))))
 (let ((?x58075 (- (- (- (- ?x58068 (* (* 2.0 l_0_12_222) l_0_12_240)) ?x58072) ?x57919) ?x57922)))
 (let ((?x58083 (- (+ (+ (- ?x58075 ?x57925) ?x58077) ?x58079) (* (* 1.0 l_0_12_74) l_0_12_76))))
 (= (- ?x58083 (* (* 1.0 l_0_12_75) l_0_12_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x58143 (* ?x57787 l_0_12_66)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x58141 (* ?x57784 l_0_12_65)))
 (let ((?x57781 (* 2.0 l_0_12_3)))
 (let ((?x58139 (* ?x57781 l_0_12_30)))
 (let ((?x57772 (* 2.0 l_0_12_2)))
 (let ((?x58131 (* ?x57772 l_0_12_29)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x58129 (* ?x57769 l_0_12_210)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x31407 (* ?x57766 l_0_12_209)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x31409 (* ?x57763 l_0_12_174)))
 (let ((?x58132 (- (+ (+ (- (* (* (- 2.0) l_0_12_146) l_0_12_173) ?x31409) ?x31407) ?x58129) ?x58131)))
 (let ((?x58136 (- (- ?x58132 (* (* 2.0 l_0_12_220) l_0_12_245)) (* (* 2.0 l_0_12_221) l_0_12_246))))
 (let ((?x58144 (+ (+ (- (- ?x58136 (* (* 2.0 l_0_12_222) l_0_12_247)) ?x58139) ?x58141) ?x58143)))
 (= ?x58144 0.0)))))))))))))))))))
(assert
 (let ((?x58206 (* l_0_12_6 l_0_12_6)))
 (let ((?x58204 (* l_0_12_5 l_0_12_5)))
 (let ((?x58202 (* l_0_12_42 l_0_12_42)))
 (let ((?x58200 (* l_0_12_41 l_0_12_41)))
 (let ((?x58198 (* l_0_12_40 l_0_12_40)))
 (let ((?x58196 (* l_0_12_4 l_0_12_4)))
 (let ((?x58194 (* l_0_12_186 l_0_12_186)))
 (let ((?x58192 (* l_0_12_185 l_0_12_185)))
 (let ((?x58190 (* l_0_12_184 l_0_12_184)))
 (let ((?x58188 (* l_0_12_150 l_0_12_150)))
 (let ((?x58189 (- (- (* (- l_0_12_148) l_0_12_148) (* l_0_12_149 l_0_12_149)) ?x58188)))
 (let ((?x58203 (+ (+ (+ (- (+ (+ (+ ?x58189 ?x58190) ?x58192) ?x58194) ?x58196) ?x58198) ?x58200) ?x58202)))
 (= (- (- ?x58203 ?x58204) ?x58206) 0.0))))))))))))))
(assert
 (let ((?x58255 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x58252 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x58249 (* ?x57854 l_0_12_45)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x58247 (* ?x57851 l_0_12_44)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x58245 (* ?x57848 l_0_12_43)))
 (let ((?x58243 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x58240 (* ?x57993 l_0_12_189)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x58238 (* ?x57990 l_0_12_188)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x58236 (* ?x57987 l_0_12_187)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58234 (* ?x57974 l_0_12_153)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58232 (* ?x57971 l_0_12_152)))
 (let ((?x58239 (+ (+ (- (- (* (* (- 2.0) l_0_12_148) l_0_12_151) ?x58232) ?x58234) ?x58236) ?x58238)))
 (let ((?x58256 (- (- (+ (+ (+ (- (+ ?x58239 ?x58240) ?x58243) ?x58245) ?x58247) ?x58249) ?x58252) ?x58255)))
 (= ?x58256 0.0)))))))))))))))))))))))
(assert
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x58294 (* ?x57854 l_0_12_49)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x58292 (* ?x57851 l_0_12_48)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x58290 (* ?x57848 l_0_12_47)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x58288 (* ?x57993 l_0_12_193)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x58286 (* ?x57990 l_0_12_192)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x58284 (* ?x57987 l_0_12_191)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58282 (* ?x57974 l_0_12_157)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58280 (* ?x57971 l_0_12_156)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x58278 (* ?x57968 l_0_12_155)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x58276 (* ?x58275 l_0_12_6)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x58273 (* ?x57900 l_0_12_5)))
 (let ((?x58281 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_4) ?x58273) ?x58276) ?x58278) ?x58280)))
 (let ((?x58295 (+ (+ (+ (+ (+ (+ (- ?x58281 ?x58282) ?x58284) ?x58286) ?x58288) ?x58290) ?x58292) ?x58294)))
 (= ?x58295 0.0))))))))))))))))))))))))))
(assert
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x58342 (* ?x57854 l_0_12_54)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x58340 (* ?x57851 l_0_12_53)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x58338 (* ?x57848 l_0_12_52)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x58336 (* ?x57993 l_0_12_198)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x58334 (* ?x57990 l_0_12_197)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x58332 (* ?x57987 l_0_12_196)))
 (let ((?x58329 (* 2.0 l_0_12_18)))
 (let ((?x58330 (* ?x58329 l_0_12_6)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x58327 (* ?x57980 l_0_12_5)))
 (let ((?x57977 (* 2.0 l_0_12_16)))
 (let ((?x58316 (* ?x57977 l_0_12_4)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58312 (* ?x57974 l_0_12_162)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58308 (* ?x57971 l_0_12_161)))
 (let ((?x58328 (- (- (- (- (* (* (- 2.0) l_0_12_148) l_0_12_160) ?x58308) ?x58312) ?x58316) ?x58327)))
 (let ((?x58343 (+ (+ (+ (+ (+ (+ (- ?x58328 ?x58330) ?x58332) ?x58334) ?x58336) ?x58338) ?x58340) ?x58342)))
 (= ?x58343 0.0))))))))))))))))))))))))))
(assert
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x58400 (* ?x57854 l_0_12_60)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x58398 (* ?x57851 l_0_12_59)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x58396 (* ?x57848 l_0_12_58)))
 (let ((?x58393 (* 2.0 l_0_12_24)))
 (let ((?x58394 (* ?x58393 l_0_12_6)))
 (let ((?x58071 (* 2.0 l_0_12_23)))
 (let ((?x58391 (* ?x58071 l_0_12_5)))
 (let ((?x58388 (* 2.0 l_0_12_22)))
 (let ((?x58389 (* ?x58388 l_0_12_4)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x58386 (* ?x57993 l_0_12_204)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x58384 (* ?x57990 l_0_12_203)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x58382 (* ?x57987 l_0_12_202)))
 (let ((?x58188 (* l_0_12_150 l_0_12_150)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58379 (* ?x57974 l_0_12_168)))
 (let ((?x58179 (* l_0_12_149 l_0_12_149)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58376 (* ?x57971 l_0_12_167)))
 (let ((?x58210 (* l_0_12_148 l_0_12_148)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x58373 (* ?x57968 l_0_12_166)))
 (let ((?x58369 (+ (* (/ 1.0 2.0) (* l_0_12_112 l_0_12_112)) (* (/ 1.0 2.0) (* l_0_12_113 l_0_12_113)))))
 (let ((?x58377 (- (- (- (+ ?x58369 (* (/ 1.0 2.0) (* l_0_12_114 l_0_12_114))) ?x58373) ?x58210) ?x58376)))
 (let ((?x58390 (- (+ (+ (+ (- (- (- ?x58377 ?x58179) ?x58379) ?x58188) ?x58382) ?x58384) ?x58386) ?x58389)))
 (let ((?x58404 (- (+ (+ (+ (- (- ?x58390 ?x58391) ?x58394) ?x58396) ?x58398) ?x58400) (* (* (/ 1.0 2.0) l_0_12_76) l_0_12_76))))
 (let ((?x58410 (- (- ?x58404 (* (* (/ 1.0 2.0) l_0_12_77) l_0_12_77)) (* (* (/ 1.0 2.0) l_0_12_78) l_0_12_78))))
 (= ?x58410 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x57855 (* ?x57854 l_0_12_67)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x57852 (* ?x57851 l_0_12_66)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x57849 (* ?x57848 l_0_12_65)))
 (let ((?x57841 (* 2.0 l_0_12_31)))
 (let ((?x57842 (* ?x57841 l_0_12_6)))
 (let ((?x57838 (* 2.0 l_0_12_30)))
 (let ((?x57839 (* ?x57838 l_0_12_5)))
 (let ((?x57830 (* 2.0 l_0_12_29)))
 (let ((?x57831 (* ?x57830 l_0_12_4)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x57994 (* ?x57993 l_0_12_211)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x57991 (* ?x57990 l_0_12_210)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x57988 (* ?x57987 l_0_12_209)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x57975 (* ?x57974 l_0_12_175)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x57972 (* ?x57971 l_0_12_174)))
 (let ((?x58464 (+ (+ (- (- (* (* (- 2.0) l_0_12_148) l_0_12_173) ?x57972) ?x57975) ?x57988) ?x57991)))
 (let ((?x58471 (+ (+ (+ (- (- (- (+ ?x58464 ?x57994) ?x57831) ?x57839) ?x57842) ?x57849) ?x57852) ?x57855)))
 (= ?x58471 0.0))))))))))))))))))))))))))
(assert
 (let ((?x58485 (* l_0_12_9 l_0_12_9)))
 (let ((?x58483 (* l_0_12_8 l_0_12_8)))
 (let ((?x58481 (* l_0_12_7 l_0_12_7)))
 (let ((?x58479 (* l_0_12_46 l_0_12_46)))
 (let ((?x58477 (* l_0_12_45 l_0_12_45)))
 (let ((?x32053 (* l_0_12_44 l_0_12_44)))
 (let ((?x32062 (* l_0_12_43 l_0_12_43)))
 (let ((?x32063 (* l_0_12_190 l_0_12_190)))
 (let ((?x32072 (* l_0_12_189 l_0_12_189)))
 (let ((?x32076 (* l_0_12_188 l_0_12_188)))
 (let ((?x32084 (* l_0_12_187 l_0_12_187)))
 (let ((?x32087 (* l_0_12_154 l_0_12_154)))
 (let ((?x32088 (* l_0_12_153 l_0_12_153)))
 (let ((?x32083 (* l_0_12_152 l_0_12_152)))
 (let ((?x32086 (- (- (* (- l_0_12_10) l_0_12_10) (* l_0_12_151 l_0_12_151)) ?x32083)))
 (let ((?x32056 (+ (+ (+ (+ (+ (- (- ?x32086 ?x32088) ?x32087) ?x32084) ?x32076) ?x32072) ?x32063) ?x32062)))
 (= (- (- (- (+ (+ (+ ?x32056 ?x32053) ?x58477) ?x58479) ?x58481) ?x58483) ?x58485) 0.0))))))))))))))))))
(assert
 (let ((?x58546 (* 2.0 l_0_12_46)))
 (let ((?x58547 (* ?x58546 l_0_12_50)))
 (let ((?x58543 (* 2.0 l_0_12_45)))
 (let ((?x58544 (* ?x58543 l_0_12_49)))
 (let ((?x58540 (* 2.0 l_0_12_44)))
 (let ((?x58541 (* ?x58540 l_0_12_48)))
 (let ((?x58537 (* 2.0 l_0_12_43)))
 (let ((?x58538 (* ?x58537 l_0_12_47)))
 (let ((?x58534 (* 2.0 l_0_12_190)))
 (let ((?x58535 (* ?x58534 l_0_12_194)))
 (let ((?x58531 (* 2.0 l_0_12_189)))
 (let ((?x58532 (* ?x58531 l_0_12_193)))
 (let ((?x58528 (* 2.0 l_0_12_188)))
 (let ((?x58529 (* ?x58528 l_0_12_192)))
 (let ((?x58525 (* 2.0 l_0_12_187)))
 (let ((?x58526 (* ?x58525 l_0_12_191)))
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58523 (* ?x58522 l_0_12_158)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58520 (* ?x58519 l_0_12_157)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58517 (* ?x58516 l_0_12_156)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58514 (* ?x58513 l_0_12_155)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x58511 (* ?x58275 l_0_12_9)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x58509 (* ?x57900 l_0_12_8)))
 (let ((?x58506 (* 2.0 l_0_12_11)))
 (let ((?x58507 (* ?x58506 l_0_12_7)))
 (let ((?x58515 (- (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_14) ?x58507) ?x58509) ?x58511) ?x58514)))
 (let ((?x58536 (+ (+ (+ (+ (- (- (- ?x58515 ?x58517) ?x58520) ?x58523) ?x58526) ?x58529) ?x58532) ?x58535)))
 (= (+ (+ (+ (+ ?x58536 ?x58538) ?x58541) ?x58544) ?x58547) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x58546 (* 2.0 l_0_12_46)))
 (let ((?x58620 (* ?x58546 l_0_12_55)))
 (let ((?x58543 (* 2.0 l_0_12_45)))
 (let ((?x58618 (* ?x58543 l_0_12_54)))
 (let ((?x58540 (* 2.0 l_0_12_44)))
 (let ((?x58616 (* ?x58540 l_0_12_53)))
 (let ((?x58537 (* 2.0 l_0_12_43)))
 (let ((?x58614 (* ?x58537 l_0_12_52)))
 (let ((?x58534 (* 2.0 l_0_12_190)))
 (let ((?x58612 (* ?x58534 l_0_12_199)))
 (let ((?x58531 (* 2.0 l_0_12_189)))
 (let ((?x58610 (* ?x58531 l_0_12_198)))
 (let ((?x58528 (* 2.0 l_0_12_188)))
 (let ((?x58608 (* ?x58528 l_0_12_197)))
 (let ((?x58525 (* 2.0 l_0_12_187)))
 (let ((?x58606 (* ?x58525 l_0_12_196)))
 (let ((?x58329 (* 2.0 l_0_12_18)))
 (let ((?x58604 (* ?x58329 l_0_12_9)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x58602 (* ?x57980 l_0_12_8)))
 (let ((?x57977 (* 2.0 l_0_12_16)))
 (let ((?x58600 (* ?x57977 l_0_12_7)))
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58587 (* ?x58522 l_0_12_163)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58583 (* ?x58519 l_0_12_162)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58579 (* ?x58516 l_0_12_161)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58575 (* ?x58513 l_0_12_160)))
 (let ((?x58588 (- (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_19) ?x58575) ?x58579) ?x58583) ?x58587)))
 (let ((?x58613 (+ (+ (+ (+ (- (- (- ?x58588 ?x58600) ?x58602) ?x58604) ?x58606) ?x58608) ?x58610) ?x58612)))
 (= (+ (+ (+ (+ ?x58613 ?x58614) ?x58616) ?x58618) ?x58620) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x58546 (* 2.0 l_0_12_46)))
 (let ((?x58693 (* ?x58546 l_0_12_61)))
 (let ((?x58543 (* 2.0 l_0_12_45)))
 (let ((?x58691 (* ?x58543 l_0_12_60)))
 (let ((?x58540 (* 2.0 l_0_12_44)))
 (let ((?x58689 (* ?x58540 l_0_12_59)))
 (let ((?x58537 (* 2.0 l_0_12_43)))
 (let ((?x58687 (* ?x58537 l_0_12_58)))
 (let ((?x58393 (* 2.0 l_0_12_24)))
 (let ((?x58685 (* ?x58393 l_0_12_9)))
 (let ((?x58071 (* 2.0 l_0_12_23)))
 (let ((?x58683 (* ?x58071 l_0_12_8)))
 (let ((?x58388 (* 2.0 l_0_12_22)))
 (let ((?x58681 (* ?x58388 l_0_12_7)))
 (let ((?x58534 (* 2.0 l_0_12_190)))
 (let ((?x58679 (* ?x58534 l_0_12_205)))
 (let ((?x58531 (* 2.0 l_0_12_189)))
 (let ((?x58677 (* ?x58531 l_0_12_204)))
 (let ((?x58528 (* 2.0 l_0_12_188)))
 (let ((?x58675 (* ?x58528 l_0_12_203)))
 (let ((?x58525 (* 2.0 l_0_12_187)))
 (let ((?x58673 (* ?x58525 l_0_12_202)))
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58671 (* ?x58522 l_0_12_169)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58669 (* ?x58519 l_0_12_168)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58667 (* ?x58516 l_0_12_167)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58665 (* ?x58513 l_0_12_166)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58234 (* ?x57974 l_0_12_153)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58232 (* ?x57971 l_0_12_152)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x58661 (* ?x57968 l_0_12_151)))
 (let ((?x58645 (+ (* (* (- 2.0) l_0_12_10) l_0_12_25) (* (* 1.0 l_0_12_112) l_0_12_115))))
 (let ((?x58660 (+ (+ ?x58645 (* (* 1.0 l_0_12_113) l_0_12_116)) (* (* 1.0 l_0_12_114) l_0_12_117))))
 (let ((?x58672 (- (- (- (- (- (- (- ?x58660 ?x58661) ?x58232) ?x58234) ?x58665) ?x58667) ?x58669) ?x58671)))
 (let ((?x58686 (- (- (- (+ (+ (+ (+ ?x58672 ?x58673) ?x58675) ?x58677) ?x58679) ?x58681) ?x58683) ?x58685)))
 (let ((?x58697 (- (+ (+ (+ (+ ?x58686 ?x58687) ?x58689) ?x58691) ?x58693) (* (* 1.0 l_0_12_76) l_0_12_79))))
 (let ((?x58703 (- (- ?x58697 (* (* 1.0 l_0_12_77) l_0_12_80)) (* (* 1.0 l_0_12_78) l_0_12_81))))
 (= ?x58703 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x58546 (* 2.0 l_0_12_46)))
 (let ((?x58805 (* ?x58546 l_0_12_68)))
 (let ((?x58543 (* 2.0 l_0_12_45)))
 (let ((?x58803 (* ?x58543 l_0_12_67)))
 (let ((?x58540 (* 2.0 l_0_12_44)))
 (let ((?x58801 (* ?x58540 l_0_12_66)))
 (let ((?x58537 (* 2.0 l_0_12_43)))
 (let ((?x58799 (* ?x58537 l_0_12_65)))
 (let ((?x57841 (* 2.0 l_0_12_31)))
 (let ((?x58797 (* ?x57841 l_0_12_9)))
 (let ((?x57838 (* 2.0 l_0_12_30)))
 (let ((?x58795 (* ?x57838 l_0_12_8)))
 (let ((?x57830 (* 2.0 l_0_12_29)))
 (let ((?x58793 (* ?x57830 l_0_12_7)))
 (let ((?x58534 (* 2.0 l_0_12_190)))
 (let ((?x58791 (* ?x58534 l_0_12_212)))
 (let ((?x58531 (* 2.0 l_0_12_189)))
 (let ((?x58789 (* ?x58531 l_0_12_211)))
 (let ((?x58528 (* 2.0 l_0_12_188)))
 (let ((?x58787 (* ?x58528 l_0_12_210)))
 (let ((?x58525 (* 2.0 l_0_12_187)))
 (let ((?x58785 (* ?x58525 l_0_12_209)))
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58783 (* ?x58522 l_0_12_176)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58781 (* ?x58519 l_0_12_175)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58779 (* ?x58516 l_0_12_174)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58777 (* ?x58513 l_0_12_173)))
 (let ((?x58784 (- (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_32) ?x58777) ?x58779) ?x58781) ?x58783)))
 (let ((?x58798 (- (- (- (+ (+ (+ (+ ?x58784 ?x58785) ?x58787) ?x58789) ?x58791) ?x58793) ?x58795) ?x58797)))
 (= (+ (+ (+ (+ ?x58798 ?x58799) ?x58801) ?x58803) ?x58805) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x58890 (* l_0_12_51 l_0_12_51)))
 (let ((?x58888 (* l_0_12_50 l_0_12_50)))
 (let ((?x58886 (* l_0_12_49 l_0_12_49)))
 (let ((?x58884 (* l_0_12_48 l_0_12_48)))
 (let ((?x58882 (* l_0_12_47 l_0_12_47)))
 (let ((?x58880 (* l_0_12_195 l_0_12_195)))
 (let ((?x58878 (* l_0_12_194 l_0_12_194)))
 (let ((?x58876 (* l_0_12_193 l_0_12_193)))
 (let ((?x58874 (* l_0_12_192 l_0_12_192)))
 (let ((?x58872 (* l_0_12_191 l_0_12_191)))
 (let ((?x58870 (* l_0_12_159 l_0_12_159)))
 (let ((?x58868 (* l_0_12_158 l_0_12_158)))
 (let ((?x58866 (* l_0_12_157 l_0_12_157)))
 (let ((?x58864 (* l_0_12_156 l_0_12_156)))
 (let ((?x58862 (* l_0_12_155 l_0_12_155)))
 (let ((?x58860 (* l_0_12_15 l_0_12_15)))
 (let ((?x58858 (* l_0_12_14 l_0_12_14)))
 (let ((?x58845 (* l_0_12_13 l_0_12_13)))
 (let ((?x58857 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x58845)))
 (let ((?x58871 (- (- (- (- (- (- (- ?x58857 ?x58858) ?x58860) ?x58862) ?x58864) ?x58866) ?x58868) ?x58870)))
 (let ((?x58885 (+ (+ (+ (+ (+ (+ (+ ?x58871 ?x58872) ?x58874) ?x58876) ?x58878) ?x58880) ?x58882) ?x58884)))
 (= (+ (+ (+ ?x58885 ?x58886) ?x58888) ?x58890) 0.0)))))))))))))))))))))))
(assert
 (let ((?x58970 (* 2.0 l_0_12_51)))
 (let ((?x58971 (* ?x58970 l_0_12_56)))
 (let ((?x58967 (* 2.0 l_0_12_50)))
 (let ((?x58968 (* ?x58967 l_0_12_55)))
 (let ((?x58964 (* 2.0 l_0_12_49)))
 (let ((?x58965 (* ?x58964 l_0_12_54)))
 (let ((?x58961 (* 2.0 l_0_12_48)))
 (let ((?x58962 (* ?x58961 l_0_12_53)))
 (let ((?x58958 (* 2.0 l_0_12_47)))
 (let ((?x58959 (* ?x58958 l_0_12_52)))
 (let ((?x58955 (* 2.0 l_0_12_195)))
 (let ((?x58956 (* ?x58955 l_0_12_200)))
 (let ((?x58952 (* 2.0 l_0_12_194)))
 (let ((?x58953 (* ?x58952 l_0_12_199)))
 (let ((?x58949 (* 2.0 l_0_12_193)))
 (let ((?x58950 (* ?x58949 l_0_12_198)))
 (let ((?x58946 (* 2.0 l_0_12_192)))
 (let ((?x58947 (* ?x58946 l_0_12_197)))
 (let ((?x58943 (* 2.0 l_0_12_191)))
 (let ((?x58944 (* ?x58943 l_0_12_196)))
 (let ((?x58940 (* 2.0 l_0_12_159)))
 (let ((?x58941 (* ?x58940 l_0_12_164)))
 (let ((?x58937 (* 2.0 l_0_12_158)))
 (let ((?x58938 (* ?x58937 l_0_12_163)))
 (let ((?x58934 (* 2.0 l_0_12_157)))
 (let ((?x58935 (* ?x58934 l_0_12_162)))
 (let ((?x58931 (* 2.0 l_0_12_156)))
 (let ((?x58932 (* ?x58931 l_0_12_161)))
 (let ((?x58928 (* 2.0 l_0_12_155)))
 (let ((?x58929 (* ?x58928 l_0_12_160)))
 (let ((?x58925 (* 2.0 l_0_12_15)))
 (let ((?x58926 (* ?x58925 l_0_12_20)))
 (let ((?x58922 (* 2.0 l_0_12_14)))
 (let ((?x58923 (* ?x58922 l_0_12_19)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x58920 (* ?x58275 l_0_12_18)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x58918 (* ?x57900 l_0_12_17)))
 (let ((?x58927 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_16) ?x58918) ?x58920) ?x58923) ?x58926)))
 (let ((?x58948 (+ (+ (- (- (- (- (- ?x58927 ?x58929) ?x58932) ?x58935) ?x58938) ?x58941) ?x58944) ?x58947)))
 (let ((?x58969 (+ (+ (+ (+ (+ (+ (+ ?x58948 ?x58950) ?x58953) ?x58956) ?x58959) ?x58962) ?x58965) ?x58968)))
 (= (+ ?x58969 ?x58971) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x58970 (* 2.0 l_0_12_51)))
 (let ((?x59072 (* ?x58970 l_0_12_62)))
 (let ((?x58967 (* 2.0 l_0_12_50)))
 (let ((?x59070 (* ?x58967 l_0_12_61)))
 (let ((?x58964 (* 2.0 l_0_12_49)))
 (let ((?x59068 (* ?x58964 l_0_12_60)))
 (let ((?x58961 (* 2.0 l_0_12_48)))
 (let ((?x59066 (* ?x58961 l_0_12_59)))
 (let ((?x58958 (* 2.0 l_0_12_47)))
 (let ((?x59064 (* ?x58958 l_0_12_58)))
 (let ((?x58955 (* 2.0 l_0_12_195)))
 (let ((?x59062 (* ?x58955 l_0_12_206)))
 (let ((?x58952 (* 2.0 l_0_12_194)))
 (let ((?x59060 (* ?x58952 l_0_12_205)))
 (let ((?x58949 (* 2.0 l_0_12_193)))
 (let ((?x59058 (* ?x58949 l_0_12_204)))
 (let ((?x58946 (* 2.0 l_0_12_192)))
 (let ((?x59056 (* ?x58946 l_0_12_203)))
 (let ((?x58943 (* 2.0 l_0_12_191)))
 (let ((?x59054 (* ?x58943 l_0_12_202)))
 (let ((?x58940 (* 2.0 l_0_12_159)))
 (let ((?x59052 (* ?x58940 l_0_12_170)))
 (let ((?x58937 (* 2.0 l_0_12_158)))
 (let ((?x59050 (* ?x58937 l_0_12_169)))
 (let ((?x58934 (* 2.0 l_0_12_157)))
 (let ((?x59048 (* ?x58934 l_0_12_168)))
 (let ((?x58931 (* 2.0 l_0_12_156)))
 (let ((?x59046 (* ?x58931 l_0_12_167)))
 (let ((?x58928 (* 2.0 l_0_12_155)))
 (let ((?x59044 (* ?x58928 l_0_12_166)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58282 (* ?x57974 l_0_12_157)))
 (let ((?x58925 (* 2.0 l_0_12_15)))
 (let ((?x59041 (* ?x58925 l_0_12_26)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58280 (* ?x57971 l_0_12_156)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x58278 (* ?x57968 l_0_12_155)))
 (let ((?x58922 (* 2.0 l_0_12_14)))
 (let ((?x59037 (* ?x58922 l_0_12_25)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x59022 (* ?x58275 l_0_12_24)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x59018 (* ?x57900 l_0_12_23)))
 (let ((?x59008 (+ (* (* (- 2.0) l_0_12_11) l_0_12_22) (* (* 1.0 l_0_12_112) l_0_12_119))))
 (let ((?x59016 (+ (+ ?x59008 (* (* 1.0 l_0_12_113) l_0_12_120)) (* (* 1.0 l_0_12_114) l_0_12_121))))
 (let ((?x59043 (- (- (- (- (- (- (- ?x59016 ?x59018) ?x59022) ?x59037) ?x58278) ?x58280) ?x59041) ?x58282)))
 (let ((?x59057 (+ (+ (- (- (- (- (- ?x59043 ?x59044) ?x59046) ?x59048) ?x59050) ?x59052) ?x59054) ?x59056)))
 (let ((?x59071 (+ (+ (+ (+ (+ (+ (+ ?x59057 ?x59058) ?x59060) ?x59062) ?x59064) ?x59066) ?x59068) ?x59070)))
 (let ((?x59077 (- (- (+ ?x59071 ?x59072) (* (* 1.0 l_0_12_76) l_0_12_83)) (* (* 1.0 l_0_12_77) l_0_12_84))))
 (= (- ?x59077 (* (* 1.0 l_0_12_78) l_0_12_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x58970 (* 2.0 l_0_12_51)))
 (let ((?x59174 (* ?x58970 l_0_12_69)))
 (let ((?x58967 (* 2.0 l_0_12_50)))
 (let ((?x59172 (* ?x58967 l_0_12_68)))
 (let ((?x58964 (* 2.0 l_0_12_49)))
 (let ((?x59170 (* ?x58964 l_0_12_67)))
 (let ((?x58961 (* 2.0 l_0_12_48)))
 (let ((?x59168 (* ?x58961 l_0_12_66)))
 (let ((?x58958 (* 2.0 l_0_12_47)))
 (let ((?x59166 (* ?x58958 l_0_12_65)))
 (let ((?x58955 (* 2.0 l_0_12_195)))
 (let ((?x59164 (* ?x58955 l_0_12_213)))
 (let ((?x58952 (* 2.0 l_0_12_194)))
 (let ((?x59162 (* ?x58952 l_0_12_212)))
 (let ((?x58949 (* 2.0 l_0_12_193)))
 (let ((?x59160 (* ?x58949 l_0_12_211)))
 (let ((?x58946 (* 2.0 l_0_12_192)))
 (let ((?x59158 (* ?x58946 l_0_12_210)))
 (let ((?x58943 (* 2.0 l_0_12_191)))
 (let ((?x59156 (* ?x58943 l_0_12_209)))
 (let ((?x58940 (* 2.0 l_0_12_159)))
 (let ((?x59154 (* ?x58940 l_0_12_177)))
 (let ((?x58937 (* 2.0 l_0_12_158)))
 (let ((?x59152 (* ?x58937 l_0_12_176)))
 (let ((?x58934 (* 2.0 l_0_12_157)))
 (let ((?x59150 (* ?x58934 l_0_12_175)))
 (let ((?x58931 (* 2.0 l_0_12_156)))
 (let ((?x59148 (* ?x58931 l_0_12_174)))
 (let ((?x58928 (* 2.0 l_0_12_155)))
 (let ((?x59146 (* ?x58928 l_0_12_173)))
 (let ((?x58925 (* 2.0 l_0_12_15)))
 (let ((?x59144 (* ?x58925 l_0_12_33)))
 (let ((?x58922 (* 2.0 l_0_12_14)))
 (let ((?x59142 (* ?x58922 l_0_12_32)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x59140 (* ?x58275 l_0_12_31)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x59138 (* ?x57900 l_0_12_30)))
 (let ((?x59145 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_29) ?x59138) ?x59140) ?x59142) ?x59144)))
 (let ((?x59159 (+ (+ (- (- (- (- (- ?x59145 ?x59146) ?x59148) ?x59150) ?x59152) ?x59154) ?x59156) ?x59158)))
 (let ((?x59173 (+ (+ (+ (+ (+ (+ (+ ?x59159 ?x59160) ?x59162) ?x59164) ?x59166) ?x59168) ?x59170) ?x59172)))
 (= (+ ?x59173 ?x59174) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59276 (* l_0_12_57 l_0_12_57)))
 (let ((?x59274 (* l_0_12_56 l_0_12_56)))
 (let ((?x59272 (* l_0_12_55 l_0_12_55)))
 (let ((?x59270 (* l_0_12_54 l_0_12_54)))
 (let ((?x59268 (* l_0_12_53 l_0_12_53)))
 (let ((?x59266 (* l_0_12_52 l_0_12_52)))
 (let ((?x59264 (* l_0_12_21 l_0_12_21)))
 (let ((?x59262 (* l_0_12_201 l_0_12_201)))
 (let ((?x59260 (* l_0_12_200 l_0_12_200)))
 (let ((?x59258 (* l_0_12_20 l_0_12_20)))
 (let ((?x59256 (* l_0_12_199 l_0_12_199)))
 (let ((?x59254 (* l_0_12_198 l_0_12_198)))
 (let ((?x59252 (* l_0_12_197 l_0_12_197)))
 (let ((?x59250 (* l_0_12_196 l_0_12_196)))
 (let ((?x59248 (* l_0_12_19 l_0_12_19)))
 (let ((?x59246 (* l_0_12_18 l_0_12_18)))
 (let ((?x59244 (* l_0_12_17 l_0_12_17)))
 (let ((?x59242 (* l_0_12_165 l_0_12_165)))
 (let ((?x59227 (* l_0_12_164 l_0_12_164)))
 (let ((?x59224 (* l_0_12_163 l_0_12_163)))
 (let ((?x59220 (* l_0_12_162 l_0_12_162)))
 (let ((?x59216 (* l_0_12_161 l_0_12_161)))
 (let ((?x59218 (- (- (* (- l_0_12_16) l_0_12_16) (* l_0_12_160 l_0_12_160)) ?x59216)))
 (let ((?x59249 (- (- (- (- (- (- (- ?x59218 ?x59220) ?x59224) ?x59227) ?x59242) ?x59244) ?x59246) ?x59248)))
 (let ((?x59263 (+ (+ (- (+ (+ (+ (+ ?x59249 ?x59250) ?x59252) ?x59254) ?x59256) ?x59258) ?x59260) ?x59262)))
 (let ((?x59277 (+ (+ (+ (+ (+ (+ (- ?x59263 ?x59264) ?x59266) ?x59268) ?x59270) ?x59272) ?x59274) ?x59276)))
 (= ?x59277 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x59398 (* 2.0 l_0_12_57)))
 (let ((?x59399 (* ?x59398 l_0_12_63)))
 (let ((?x59395 (* 2.0 l_0_12_56)))
 (let ((?x59396 (* ?x59395 l_0_12_62)))
 (let ((?x59392 (* 2.0 l_0_12_55)))
 (let ((?x59393 (* ?x59392 l_0_12_61)))
 (let ((?x59389 (* 2.0 l_0_12_54)))
 (let ((?x59390 (* ?x59389 l_0_12_60)))
 (let ((?x59386 (* 2.0 l_0_12_53)))
 (let ((?x59387 (* ?x59386 l_0_12_59)))
 (let ((?x59383 (* 2.0 l_0_12_52)))
 (let ((?x59384 (* ?x59383 l_0_12_58)))
 (let ((?x59380 (* 2.0 l_0_12_21)))
 (let ((?x59381 (* ?x59380 l_0_12_27)))
 (let ((?x59377 (* 2.0 l_0_12_201)))
 (let ((?x59378 (* ?x59377 l_0_12_207)))
 (let ((?x59374 (* 2.0 l_0_12_200)))
 (let ((?x59375 (* ?x59374 l_0_12_206)))
 (let ((?x59371 (* 2.0 l_0_12_20)))
 (let ((?x59372 (* ?x59371 l_0_12_26)))
 (let ((?x59368 (* 2.0 l_0_12_199)))
 (let ((?x59369 (* ?x59368 l_0_12_205)))
 (let ((?x59365 (* 2.0 l_0_12_198)))
 (let ((?x59366 (* ?x59365 l_0_12_204)))
 (let ((?x59362 (* 2.0 l_0_12_197)))
 (let ((?x59363 (* ?x59362 l_0_12_203)))
 (let ((?x59359 (* 2.0 l_0_12_196)))
 (let ((?x59360 (* ?x59359 l_0_12_202)))
 (let ((?x59356 (* 2.0 l_0_12_19)))
 (let ((?x59357 (* ?x59356 l_0_12_25)))
 (let ((?x58329 (* 2.0 l_0_12_18)))
 (let ((?x59354 (* ?x58329 l_0_12_24)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x59352 (* ?x57980 l_0_12_23)))
 (let ((?x59349 (* 2.0 l_0_12_165)))
 (let ((?x59350 (* ?x59349 l_0_12_171)))
 (let ((?x59346 (* 2.0 l_0_12_164)))
 (let ((?x59347 (* ?x59346 l_0_12_170)))
 (let ((?x59343 (* 2.0 l_0_12_163)))
 (let ((?x59344 (* ?x59343 l_0_12_169)))
 (let ((?x59340 (* 2.0 l_0_12_162)))
 (let ((?x59341 (* ?x59340 l_0_12_168)))
 (let ((?x59337 (* 2.0 l_0_12_161)))
 (let ((?x59338 (* ?x59337 l_0_12_167)))
 (let ((?x59334 (* 2.0 l_0_12_160)))
 (let ((?x59335 (* ?x59334 l_0_12_166)))
 (let ((?x57977 (* 2.0 l_0_12_16)))
 (let ((?x59332 (* ?x57977 l_0_12_22)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58312 (* ?x57974 l_0_12_162)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58308 (* ?x57971 l_0_12_161)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x59328 (* ?x57968 l_0_12_160)))
 (let ((?x59325 (+ (* (* 1.0 l_0_12_112) l_0_12_124) (* (* 1.0 l_0_12_113) l_0_12_125))))
 (let ((?x59331 (- (- (- (+ ?x59325 (* (* 1.0 l_0_12_114) l_0_12_126)) ?x59328) ?x58308) ?x58312)))
 (let ((?x59351 (- (- (- (- (- (- (- ?x59331 ?x59332) ?x59335) ?x59338) ?x59341) ?x59344) ?x59347) ?x59350)))
 (let ((?x59370 (+ (+ (+ (+ (- (- (- ?x59351 ?x59352) ?x59354) ?x59357) ?x59360) ?x59363) ?x59366) ?x59369)))
 (let ((?x59391 (+ (+ (+ (- (+ (+ (- ?x59370 ?x59372) ?x59375) ?x59378) ?x59381) ?x59384) ?x59387) ?x59390)))
 (let ((?x59402 (- (+ (+ (+ ?x59391 ?x59393) ?x59396) ?x59399) (* (* 1.0 l_0_12_76) l_0_12_88))))
 (let ((?x59406 (- (- ?x59402 (* (* 1.0 l_0_12_77) l_0_12_89)) (* (* 1.0 l_0_12_78) l_0_12_90))))
 (= ?x59406 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59398 (* 2.0 l_0_12_57)))
 (let ((?x59548 (* ?x59398 l_0_12_70)))
 (let ((?x59395 (* 2.0 l_0_12_56)))
 (let ((?x59546 (* ?x59395 l_0_12_69)))
 (let ((?x59392 (* 2.0 l_0_12_55)))
 (let ((?x59544 (* ?x59392 l_0_12_68)))
 (let ((?x59389 (* 2.0 l_0_12_54)))
 (let ((?x59542 (* ?x59389 l_0_12_67)))
 (let ((?x59386 (* 2.0 l_0_12_53)))
 (let ((?x59540 (* ?x59386 l_0_12_66)))
 (let ((?x59383 (* 2.0 l_0_12_52)))
 (let ((?x59538 (* ?x59383 l_0_12_65)))
 (let ((?x59380 (* 2.0 l_0_12_21)))
 (let ((?x59536 (* ?x59380 l_0_12_34)))
 (let ((?x59377 (* 2.0 l_0_12_201)))
 (let ((?x59534 (* ?x59377 l_0_12_214)))
 (let ((?x59374 (* 2.0 l_0_12_200)))
 (let ((?x59532 (* ?x59374 l_0_12_213)))
 (let ((?x59371 (* 2.0 l_0_12_20)))
 (let ((?x59530 (* ?x59371 l_0_12_33)))
 (let ((?x59368 (* 2.0 l_0_12_199)))
 (let ((?x59528 (* ?x59368 l_0_12_212)))
 (let ((?x59365 (* 2.0 l_0_12_198)))
 (let ((?x59526 (* ?x59365 l_0_12_211)))
 (let ((?x59362 (* 2.0 l_0_12_197)))
 (let ((?x59524 (* ?x59362 l_0_12_210)))
 (let ((?x59359 (* 2.0 l_0_12_196)))
 (let ((?x59522 (* ?x59359 l_0_12_209)))
 (let ((?x59356 (* 2.0 l_0_12_19)))
 (let ((?x59520 (* ?x59356 l_0_12_32)))
 (let ((?x58329 (* 2.0 l_0_12_18)))
 (let ((?x59518 (* ?x58329 l_0_12_31)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x59516 (* ?x57980 l_0_12_30)))
 (let ((?x59349 (* 2.0 l_0_12_165)))
 (let ((?x59514 (* ?x59349 l_0_12_178)))
 (let ((?x59346 (* 2.0 l_0_12_164)))
 (let ((?x59512 (* ?x59346 l_0_12_177)))
 (let ((?x59343 (* 2.0 l_0_12_163)))
 (let ((?x59510 (* ?x59343 l_0_12_176)))
 (let ((?x59340 (* 2.0 l_0_12_162)))
 (let ((?x59508 (* ?x59340 l_0_12_175)))
 (let ((?x59337 (* 2.0 l_0_12_161)))
 (let ((?x59506 (* ?x59337 l_0_12_174)))
 (let ((?x59334 (* 2.0 l_0_12_160)))
 (let ((?x59504 (* ?x59334 l_0_12_173)))
 (let ((?x59511 (- (- (- (- (* (* (- 2.0) l_0_12_16) l_0_12_29) ?x59504) ?x59506) ?x59508) ?x59510)))
 (let ((?x59525 (+ (+ (- (- (- (- (- ?x59511 ?x59512) ?x59514) ?x59516) ?x59518) ?x59520) ?x59522) ?x59524)))
 (let ((?x59539 (+ (- (+ (+ (- (+ (+ ?x59525 ?x59526) ?x59528) ?x59530) ?x59532) ?x59534) ?x59536) ?x59538)))
 (= (+ (+ (+ (+ (+ ?x59539 ?x59540) ?x59542) ?x59544) ?x59546) ?x59548) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59664 (* l_0_12_64 l_0_12_64)))
 (let ((?x59662 (* l_0_12_63 l_0_12_63)))
 (let ((?x59660 (* l_0_12_62 l_0_12_62)))
 (let ((?x59658 (* l_0_12_61 l_0_12_61)))
 (let ((?x59656 (* l_0_12_60 l_0_12_60)))
 (let ((?x59654 (* l_0_12_59 l_0_12_59)))
 (let ((?x59652 (* l_0_12_58 l_0_12_58)))
 (let ((?x59650 (* l_0_12_28 l_0_12_28)))
 (let ((?x59648 (* l_0_12_27 l_0_12_27)))
 (let ((?x59646 (* l_0_12_26 l_0_12_26)))
 (let ((?x59644 (* l_0_12_25 l_0_12_25)))
 (let ((?x59642 (* l_0_12_24 l_0_12_24)))
 (let ((?x59640 (* l_0_12_23 l_0_12_23)))
 (let ((?x59638 (* l_0_12_22 l_0_12_22)))
 (let ((?x59636 (* l_0_12_208 l_0_12_208)))
 (let ((?x59634 (* l_0_12_207 l_0_12_207)))
 (let ((?x59632 (* l_0_12_206 l_0_12_206)))
 (let ((?x59630 (* l_0_12_205 l_0_12_205)))
 (let ((?x59628 (* l_0_12_204 l_0_12_204)))
 (let ((?x59626 (* l_0_12_203 l_0_12_203)))
 (let ((?x59624 (* l_0_12_202 l_0_12_202)))
 (let ((?x59622 (* l_0_12_172 l_0_12_172)))
 (let ((?x59620 (* l_0_12_171 l_0_12_171)))
 (let ((?x59618 (* l_0_12_170 l_0_12_170)))
 (let ((?x59616 (* l_0_12_169 l_0_12_169)))
 (let ((?x59614 (* l_0_12_168 l_0_12_168)))
 (let ((?x59612 (* l_0_12_167 l_0_12_167)))
 (let ((?x59610 (* l_0_12_166 l_0_12_166)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58379 (* ?x57974 l_0_12_168)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58376 (* ?x57971 l_0_12_167)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x58373 (* ?x57968 l_0_12_166)))
 (let ((?x29532 (+ (* (* 1.0 l_0_12_112) l_0_12_130) (* (* 1.0 l_0_12_113) l_0_12_131))))
 (let ((?x59609 (- (- (- (+ ?x29532 (* (* 1.0 l_0_12_114) l_0_12_132)) ?x58373) ?x58376) ?x58379)))
 (let ((?x59623 (- (- (- (- (- (- (- ?x59609 ?x59610) ?x59612) ?x59614) ?x59616) ?x59618) ?x59620) ?x59622)))
 (let ((?x59637 (+ (+ (+ (+ (+ (+ (+ ?x59623 ?x59624) ?x59626) ?x59628) ?x59630) ?x59632) ?x59634) ?x59636)))
 (let ((?x59651 (- (- (- (- (- (- (- ?x59637 ?x59638) ?x59640) ?x59642) ?x59644) ?x59646) ?x59648) ?x59650)))
 (let ((?x59665 (+ (+ (+ (+ (+ (+ (+ ?x59651 ?x59652) ?x59654) ?x59656) ?x59658) ?x59660) ?x59662) ?x59664)))
 (let ((?x59669 (- (- ?x59665 (* (* 1.0 l_0_12_76) l_0_12_94)) (* (* 1.0 l_0_12_77) l_0_12_95))))
 (= (- ?x59669 (* (* 1.0 l_0_12_78) l_0_12_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59822 (* (* 2.0 l_0_12_64) l_0_12_71)))
 (let ((?x59819 (* (* 2.0 l_0_12_63) l_0_12_70)))
 (let ((?x59816 (* (* 2.0 l_0_12_62) l_0_12_69)))
 (let ((?x59813 (* (* 2.0 l_0_12_61) l_0_12_68)))
 (let ((?x59810 (* (* 2.0 l_0_12_60) l_0_12_67)))
 (let ((?x59807 (* (* 2.0 l_0_12_59) l_0_12_66)))
 (let ((?x59804 (* (* 2.0 l_0_12_58) l_0_12_65)))
 (let ((?x59801 (* (* 2.0 l_0_12_28) l_0_12_35)))
 (let ((?x59798 (* (* 2.0 l_0_12_27) l_0_12_34)))
 (let ((?x59795 (* (* 2.0 l_0_12_26) l_0_12_33)))
 (let ((?x59792 (* (* 2.0 l_0_12_25) l_0_12_32)))
 (let ((?x58393 (* 2.0 l_0_12_24)))
 (let ((?x59789 (* ?x58393 l_0_12_31)))
 (let ((?x58071 (* 2.0 l_0_12_23)))
 (let ((?x59787 (* ?x58071 l_0_12_30)))
 (let ((?x58388 (* 2.0 l_0_12_22)))
 (let ((?x59785 (* ?x58388 l_0_12_29)))
 (let ((?x59783 (* (* 2.0 l_0_12_208) l_0_12_215)))
 (let ((?x59780 (* (* 2.0 l_0_12_207) l_0_12_214)))
 (let ((?x59777 (* (* 2.0 l_0_12_206) l_0_12_213)))
 (let ((?x59774 (* (* 2.0 l_0_12_205) l_0_12_212)))
 (let ((?x59771 (* (* 2.0 l_0_12_204) l_0_12_211)))
 (let ((?x59768 (* (* 2.0 l_0_12_203) l_0_12_210)))
 (let ((?x59765 (* (* 2.0 l_0_12_202) l_0_12_209)))
 (let ((?x59762 (* (* 2.0 l_0_12_172) l_0_12_179)))
 (let ((?x59759 (* (* 2.0 l_0_12_171) l_0_12_178)))
 (let ((?x59756 (* (* 2.0 l_0_12_170) l_0_12_177)))
 (let ((?x59753 (* (* 2.0 l_0_12_169) l_0_12_176)))
 (let ((?x59750 (* (* 2.0 l_0_12_168) l_0_12_175)))
 (let ((?x59747 (* (* 2.0 l_0_12_167) l_0_12_174)))
 (let ((?x59744 (* (* 2.0 l_0_12_166) l_0_12_173)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x57975 (* ?x57974 l_0_12_175)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x57972 (* ?x57971 l_0_12_174)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x57969 (* ?x57968 l_0_12_173)))
 (let ((?x59730 (- (* (* (- 1.0) l_0_12_101) l_0_12_76) (* (* 1.0 l_0_12_102) l_0_12_77))))
 (let ((?x59735 (+ (- ?x59730 (* (* 1.0 l_0_12_103) l_0_12_78)) (* (* 1.0 l_0_12_112) l_0_12_137))))
 (let ((?x59739 (+ (+ ?x59735 (* (* 1.0 l_0_12_113) l_0_12_138)) (* (* 1.0 l_0_12_114) l_0_12_139))))
 (let ((?x59754 (- (- (- (- (- (- (- ?x59739 ?x57969) ?x57972) ?x57975) ?x59744) ?x59747) ?x59750) ?x59753)))
 (let ((?x59775 (+ (+ (+ (+ (- (- (- ?x59754 ?x59756) ?x59759) ?x59762) ?x59765) ?x59768) ?x59771) ?x59774)))
 (let ((?x59793 (- (- (- (- (+ (+ (+ ?x59775 ?x59777) ?x59780) ?x59783) ?x59785) ?x59787) ?x59789) ?x59792)))
 (let ((?x59814 (+ (+ (+ (+ (- (- (- ?x59793 ?x59795) ?x59798) ?x59801) ?x59804) ?x59807) ?x59810) ?x59813)))
 (= (+ (+ (+ ?x59814 ?x59816) ?x59819) ?x59822) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59981 (* l_0_12_72 l_0_12_72)))
 (let ((?x59979 (* l_0_12_71 l_0_12_71)))
 (let ((?x59977 (* l_0_12_70 l_0_12_70)))
 (let ((?x59975 (* l_0_12_69 l_0_12_69)))
 (let ((?x59973 (* l_0_12_68 l_0_12_68)))
 (let ((?x59971 (* l_0_12_67 l_0_12_67)))
 (let ((?x59969 (* l_0_12_66 l_0_12_66)))
 (let ((?x59967 (* l_0_12_65 l_0_12_65)))
 (let ((?x59965 (* l_0_12_36 l_0_12_36)))
 (let ((?x59963 (* l_0_12_35 l_0_12_35)))
 (let ((?x59961 (* l_0_12_34 l_0_12_34)))
 (let ((?x59959 (* l_0_12_33 l_0_12_33)))
 (let ((?x59957 (* l_0_12_32 l_0_12_32)))
 (let ((?x59955 (* l_0_12_31 l_0_12_31)))
 (let ((?x59953 (* l_0_12_30 l_0_12_30)))
 (let ((?x59951 (* l_0_12_29 l_0_12_29)))
 (let ((?x59949 (* l_0_12_216 l_0_12_216)))
 (let ((?x59947 (* l_0_12_215 l_0_12_215)))
 (let ((?x59945 (* l_0_12_214 l_0_12_214)))
 (let ((?x59943 (* l_0_12_213 l_0_12_213)))
 (let ((?x59941 (* l_0_12_212 l_0_12_212)))
 (let ((?x59939 (* l_0_12_211 l_0_12_211)))
 (let ((?x59937 (* l_0_12_210 l_0_12_210)))
 (let ((?x59935 (* l_0_12_209 l_0_12_209)))
 (let ((?x59933 (* l_0_12_180 l_0_12_180)))
 (let ((?x59931 (* l_0_12_179 l_0_12_179)))
 (let ((?x59929 (* l_0_12_178 l_0_12_178)))
 (let ((?x59927 (* l_0_12_177 l_0_12_177)))
 (let ((?x59906 (* l_0_12_176 l_0_12_176)))
 (let ((?x59902 (* l_0_12_175 l_0_12_175)))
 (let ((?x59904 (- (- (* (- l_0_12_173) l_0_12_173) (* l_0_12_174 l_0_12_174)) ?x59902)))
 (let ((?x59938 (+ (+ (- (- (- (- (- ?x59904 ?x59906) ?x59927) ?x59929) ?x59931) ?x59933) ?x59935) ?x59937)))
 (let ((?x59952 (- (+ (+ (+ (+ (+ (+ ?x59938 ?x59939) ?x59941) ?x59943) ?x59945) ?x59947) ?x59949) ?x59951)))
 (let ((?x59966 (- (- (- (- (- (- (- ?x59952 ?x59953) ?x59955) ?x59957) ?x59959) ?x59961) ?x59963) ?x59965)))
 (let ((?x59980 (+ (+ (+ (+ (+ (+ (+ ?x59966 ?x59967) ?x59969) ?x59971) ?x59973) ?x59975) ?x59977) ?x59979)))
 (= (+ ?x59980 ?x59981) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57459 (* l_0_12_37 l_0_12_37)))
 (let ((?x60032 (* l_0_12_289 l_0_12_289)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60030 (* ?x60029 l_0_12_295)))
 (let ((?x60031 (- (- (* l_0_12_1 l_0_12_1) (* (* 2.0 l_0_12_109) l_0_12_115)) ?x60030)))
 (= (+ (- (- ?x60031 ?x60032) ?x57459) (* (* 2.0 l_0_12_73) l_0_12_79)) 0.0)))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57504 (* ?x57503 l_0_12_38)))
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60065 (* ?x60064 l_0_12_296)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60062 (* ?x60061 l_0_12_295)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60059 (* ?x60029 l_0_12_290)))
 (let ((?x60055 (- (* (* 2.0 l_0_12_1) l_0_12_2) (* (* 2.0 l_0_12_110) l_0_12_115))))
 (let ((?x60066 (- (- (- (- ?x60055 (* (* 2.0 l_0_12_111) l_0_12_116)) ?x60059) ?x60062) ?x60065)))
 (let ((?x60070 (- (- ?x60066 (* (* 2.0 l_0_12_325) l_0_12_331)) (* (* 2.0 l_0_12_361) l_0_12_367))))
 (let ((?x60075 (- (- (- ?x60070 ?x57504) (* (* 2.0 l_0_12_397) l_0_12_403)) (* (* 2.0 l_0_12_433) l_0_12_439))))
 (let ((?x60081 (+ (+ ?x60075 (* (* 2.0 l_0_12_74) l_0_12_79)) (* (* 2.0 l_0_12_75) l_0_12_80))))
 (= ?x60081 0.0)))))))))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57549 (* ?x57503 l_0_12_40)))
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x60130 (* ?x57500 l_0_12_297)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x60128 (* ?x57497 l_0_12_296)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x60126 (* ?x57494 l_0_12_295)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60124 (* ?x60029 l_0_12_292)))
 (let ((?x60115 (- (* (* 2.0 l_0_12_1) l_0_12_4) (* (* 2.0 l_0_12_112) l_0_12_115))))
 (let ((?x60123 (- (- ?x60115 (* (* 2.0 l_0_12_113) l_0_12_116)) (* (* 2.0 l_0_12_114) l_0_12_117))))
 (let ((?x60135 (+ (- (- (- (- (- ?x60123 ?x60124) ?x60126) ?x60128) ?x60130) ?x57549) (* (* 2.0 l_0_12_76) l_0_12_79))))
 (let ((?x60141 (+ (+ ?x60135 (* (* 2.0 l_0_12_77) l_0_12_80)) (* (* 2.0 l_0_12_78) l_0_12_81))))
 (= ?x60141 0.0))))))))))))))))
(assert
 (let ((?x60192 (* l_0_12_82 l_0_12_82)))
 (let ((?x60190 (* l_0_12_81 l_0_12_81)))
 (let ((?x60188 (* l_0_12_80 l_0_12_80)))
 (let ((?x60186 (* l_0_12_79 l_0_12_79)))
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57567 (* ?x57503 l_0_12_43)))
 (let ((?x60183 (* l_0_12_298 l_0_12_298)))
 (let ((?x60181 (* l_0_12_297 l_0_12_297)))
 (let ((?x60179 (* l_0_12_296 l_0_12_296)))
 (let ((?x60177 (* l_0_12_295 l_0_12_295)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60030 (* ?x60029 l_0_12_295)))
 (let ((?x60174 (* l_0_12_118 l_0_12_118)))
 (let ((?x60172 (* l_0_12_117 l_0_12_117)))
 (let ((?x60165 (* l_0_12_116 l_0_12_116)))
 (let ((?x60171 (- (- (* (* 2.0 l_0_12_1) l_0_12_7) (* l_0_12_115 l_0_12_115)) ?x60165)))
 (let ((?x60184 (- (- (- (- (- (- (- ?x60171 ?x60172) ?x60174) ?x60030) ?x60177) ?x60179) ?x60181) ?x60183)))
 (= (+ (+ (+ (+ (- ?x60184 ?x57567) ?x60186) ?x60188) ?x60190) ?x60192) 0.0)))))))))))))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57587 (* ?x57503 l_0_12_47)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60242 (* ?x60241 l_0_12_302)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60239 (* ?x60238 l_0_12_301)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60236 (* ?x60235 l_0_12_300)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60233 (* ?x60232 l_0_12_299)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60230 (* ?x60029 l_0_12_299)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x60228 (* ?x60227 l_0_12_259)))
 (let ((?x60217 (- (* (* 2.0 l_0_12_1) l_0_12_11) (* (* 2.0 l_0_12_115) l_0_12_119))))
 (let ((?x60223 (- (- ?x60217 (* (* 2.0 l_0_12_116) l_0_12_120)) (* (* 2.0 l_0_12_117) l_0_12_121))))
 (let ((?x60234 (- (- (+ (- ?x60223 (* (* 2.0 l_0_12_118) l_0_12_122)) ?x60228) ?x60230) ?x60233)))
 (let ((?x60247 (+ (- (- (- (- ?x60234 ?x60236) ?x60239) ?x60242) ?x57587) (* (* 2.0 l_0_12_79) l_0_12_83))))
 (let ((?x60253 (+ (+ ?x60247 (* (* 2.0 l_0_12_80) l_0_12_84)) (* (* 2.0 l_0_12_81) l_0_12_85))))
 (= (+ ?x60253 (* (* 2.0 l_0_12_82) l_0_12_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57610 (* ?x57503 l_0_12_52)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60313 (* ?x60241 l_0_12_307)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60311 (* ?x60238 l_0_12_306)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60309 (* ?x60235 l_0_12_305)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60307 (* ?x60232 l_0_12_304)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60305 (* ?x60029 l_0_12_304)))
 (let ((?x60030 (* ?x60029 l_0_12_295)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57565 (* ?x57488 l_0_12_187)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57558 (* ?x57485 l_0_12_151)))
 (let ((?x60295 (- (* (* 2.0 l_0_12_1) l_0_12_16) (* (* 2.0 l_0_12_115) l_0_12_124))))
 (let ((?x60299 (- (- ?x60295 (* (* 2.0 l_0_12_116) l_0_12_125)) (* (* 2.0 l_0_12_117) l_0_12_126))))
 (let ((?x60304 (+ (- (+ (- ?x60299 (* (* 2.0 l_0_12_118) l_0_12_127)) ?x57558) ?x57565) ?x60030)))
 (let ((?x60317 (+ (- (- (- (- (- (- ?x60304 ?x60305) ?x60307) ?x60309) ?x60311) ?x60313) ?x57610) (* (* 2.0 l_0_12_79) l_0_12_88))))
 (let ((?x60321 (+ (+ ?x60317 (* (* 2.0 l_0_12_80) l_0_12_89)) (* (* 2.0 l_0_12_81) l_0_12_90))))
 (= (+ ?x60321 (* (* 2.0 l_0_12_82) l_0_12_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57634 (* ?x57503 l_0_12_58)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60374 (* ?x60241 l_0_12_313)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60372 (* ?x60238 l_0_12_312)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60370 (* ?x60235 l_0_12_311)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60368 (* ?x60232 l_0_12_310)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60366 (* ?x60029 l_0_12_310)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x60228 (* ?x60227 l_0_12_259)))
 (let ((?x30468 (- (* (* 2.0 l_0_12_1) l_0_12_22) (* (* 2.0 l_0_12_115) l_0_12_130))))
 (let ((?x60362 (- (- ?x30468 (* (* 2.0 l_0_12_116) l_0_12_131)) (* (* 2.0 l_0_12_117) l_0_12_132))))
 (let ((?x60369 (- (- (- (- ?x60362 (* (* 2.0 l_0_12_118) l_0_12_133)) ?x60228) ?x60366) ?x60368)))
 (let ((?x60378 (+ (- (- (- (- ?x60369 ?x60370) ?x60372) ?x60374) ?x57634) (* (* 2.0 l_0_12_79) l_0_12_94))))
 (let ((?x60382 (+ (+ ?x60378 (* (* 2.0 l_0_12_80) l_0_12_95)) (* (* 2.0 l_0_12_81) l_0_12_96))))
 (= (+ ?x60382 (* (* 2.0 l_0_12_82) l_0_12_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x57503 (* 2.0 l_0_12_37)))
 (let ((?x57666 (* ?x57503 l_0_12_65)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60454 (* ?x60241 l_0_12_320)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60452 (* ?x60238 l_0_12_319)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60450 (* ?x60235 l_0_12_318)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60448 (* ?x60232 l_0_12_317)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60446 (* ?x60029 l_0_12_317)))
 (let ((?x60421 (+ (* (* 2.0 l_0_12_1) l_0_12_29) (* (* 2.0 l_0_12_101) l_0_12_79))))
 (let ((?x60432 (+ (+ ?x60421 (* (* 2.0 l_0_12_102) l_0_12_80)) (* (* 2.0 l_0_12_103) l_0_12_81))))
 (let ((?x60437 (- (+ ?x60432 (* (* 2.0 l_0_12_104) l_0_12_82)) (* (* 2.0 l_0_12_115) l_0_12_137))))
 (let ((?x60441 (- (- ?x60437 (* (* 2.0 l_0_12_116) l_0_12_138)) (* (* 2.0 l_0_12_117) l_0_12_139))))
 (let ((?x60445 (- (- ?x60441 (* (* 2.0 l_0_12_118) l_0_12_140)) (* (* 2.0 l_0_12_217) l_0_12_223))))
 (= (- (- (- (- (- (- ?x60445 ?x60446) ?x60448) ?x60450) ?x60452) ?x60454) ?x57666) 0.0)))))))))))))))))))
(assert
 (let ((?x57715 (* l_0_12_39 l_0_12_39)))
 (let ((?x57713 (* l_0_12_38 l_0_12_38)))
 (let ((?x57693 (* l_0_12_3 l_0_12_3)))
 (let ((?x57242 (* l_0_12_291 l_0_12_291)))
 (let ((?x60512 (+ (- (- (* l_0_12_2 l_0_12_2) (* l_0_12_290 l_0_12_290)) ?x57242) ?x57693)))
 (let ((?x60518 (- (- ?x60512 (* (* 2.0 l_0_12_326) l_0_12_331)) (* (* 2.0 l_0_12_327) l_0_12_332))))
 (let ((?x60524 (- (- ?x60518 (* (* 2.0 l_0_12_362) l_0_12_367)) (* (* 2.0 l_0_12_363) l_0_12_368))))
 (let ((?x60532 (- (- (- (- ?x60524 ?x57713) ?x57715) (* (* 2.0 l_0_12_398) l_0_12_403)) (* (* 2.0 l_0_12_399) l_0_12_404))))
 (let ((?x60538 (- (- ?x60532 (* (* 2.0 l_0_12_434) l_0_12_439)) (* (* 2.0 l_0_12_435) l_0_12_440))))
 (= ?x60538 0.0)))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x57788 (* ?x57787 l_0_12_41)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x57785 (* ?x57784 l_0_12_40)))
 (let ((?x57781 (* 2.0 l_0_12_3)))
 (let ((?x57782 (* ?x57781 l_0_12_5)))
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60566 (* ?x60064 l_0_12_293)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60564 (* ?x60061 l_0_12_292)))
 (let ((?x57772 (* 2.0 l_0_12_2)))
 (let ((?x57773 (* ?x57772 l_0_12_4)))
 (let ((?x60570 (- (+ (- (- ?x57773 ?x60564) ?x60566) ?x57782) (* (* 2.0 l_0_12_328) l_0_12_331))))
 (let ((?x60574 (- (- ?x60570 (* (* 2.0 l_0_12_329) l_0_12_332)) (* (* 2.0 l_0_12_330) l_0_12_333))))
 (let ((?x60578 (- (- ?x60574 (* (* 2.0 l_0_12_364) l_0_12_367)) (* (* 2.0 l_0_12_365) l_0_12_368))))
 (let ((?x60584 (- (- (- (- ?x60578 (* (* 2.0 l_0_12_366) l_0_12_369)) ?x57785) ?x57788) (* (* 2.0 l_0_12_400) l_0_12_403))))
 (let ((?x60588 (- (- ?x60584 (* (* 2.0 l_0_12_401) l_0_12_404)) (* (* 2.0 l_0_12_402) l_0_12_405))))
 (let ((?x60592 (- (- ?x60588 (* (* 2.0 l_0_12_436) l_0_12_439)) (* (* 2.0 l_0_12_437) l_0_12_440))))
 (= (- ?x60592 (* (* 2.0 l_0_12_438) l_0_12_441)) 0.0))))))))))))))))))))
(assert
 (let ((?x60660 (* l_0_12_442 l_0_12_442)))
 (let ((?x60658 (* l_0_12_441 l_0_12_441)))
 (let ((?x60656 (* l_0_12_440 l_0_12_440)))
 (let ((?x60654 (* l_0_12_439 l_0_12_439)))
 (let ((?x60652 (* l_0_12_406 l_0_12_406)))
 (let ((?x60650 (* l_0_12_405 l_0_12_405)))
 (let ((?x60648 (* l_0_12_404 l_0_12_404)))
 (let ((?x60646 (* l_0_12_403 l_0_12_403)))
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x57846 (* ?x57787 l_0_12_44)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x57844 (* ?x57784 l_0_12_43)))
 (let ((?x60642 (* l_0_12_370 l_0_12_370)))
 (let ((?x60640 (* l_0_12_369 l_0_12_369)))
 (let ((?x60638 (* l_0_12_368 l_0_12_368)))
 (let ((?x60636 (* l_0_12_367 l_0_12_367)))
 (let ((?x60634 (* l_0_12_334 l_0_12_334)))
 (let ((?x60632 (* l_0_12_333 l_0_12_333)))
 (let ((?x60630 (* l_0_12_332 l_0_12_332)))
 (let ((?x60628 (* l_0_12_331 l_0_12_331)))
 (let ((?x57781 (* 2.0 l_0_12_3)))
 (let ((?x57836 (* ?x57781 l_0_12_8)))
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60065 (* ?x60064 l_0_12_296)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60062 (* ?x60061 l_0_12_295)))
 (let ((?x57772 (* 2.0 l_0_12_2)))
 (let ((?x57819 (* ?x57772 l_0_12_7)))
 (let ((?x60635 (- (- (- (- (+ (- (- ?x57819 ?x60062) ?x60065) ?x57836) ?x60628) ?x60630) ?x60632) ?x60634)))
 (let ((?x60647 (- (- (- (- (- (- (- ?x60635 ?x60636) ?x60638) ?x60640) ?x60642) ?x57844) ?x57846) ?x60646)))
 (let ((?x60661 (- (- (- (- (- (- (- ?x60647 ?x60648) ?x60650) ?x60652) ?x60654) ?x60656) ?x60658) ?x60660)))
 (= ?x60661 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x57929 (* ?x57787 l_0_12_48)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x57927 (* ?x57784 l_0_12_47)))
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60696 (* ?x60064 l_0_12_300)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60694 (* ?x60061 l_0_12_299)))
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x60692 (* ?x57286 l_0_12_260)))
 (let ((?x57283 (* 2.0 l_0_12_254)))
 (let ((?x60690 (* ?x57283 l_0_12_259)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x57901 (* ?x57900 l_0_12_3)))
 (let ((?x60695 (- (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_2) ?x57901) ?x60690) ?x60692) ?x60694)))
 (let ((?x60703 (- (- (- ?x60695 ?x60696) (* (* 2.0 l_0_12_331) l_0_12_335)) (* (* 2.0 l_0_12_332) l_0_12_336))))
 (let ((?x60709 (- (- ?x60703 (* (* 2.0 l_0_12_333) l_0_12_337)) (* (* 2.0 l_0_12_334) l_0_12_338))))
 (let ((?x60715 (- (- ?x60709 (* (* 2.0 l_0_12_367) l_0_12_371)) (* (* 2.0 l_0_12_368) l_0_12_372))))
 (let ((?x60721 (- (- ?x60715 (* (* 2.0 l_0_12_369) l_0_12_373)) (* (* 2.0 l_0_12_370) l_0_12_374))))
 (let ((?x60729 (- (- (- (- ?x60721 ?x57927) ?x57929) (* (* 2.0 l_0_12_403) l_0_12_407)) (* (* 2.0 l_0_12_404) l_0_12_408))))
 (let ((?x60735 (- (- ?x60729 (* (* 2.0 l_0_12_405) l_0_12_409)) (* (* 2.0 l_0_12_406) l_0_12_410))))
 (let ((?x60741 (- (- ?x60735 (* (* 2.0 l_0_12_439) l_0_12_443)) (* (* 2.0 l_0_12_440) l_0_12_444))))
 (let ((?x60747 (- (- ?x60741 (* (* 2.0 l_0_12_441) l_0_12_445)) (* (* 2.0 l_0_12_442) l_0_12_446))))
 (= ?x60747 0.0)))))))))))))))))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x58007 (* ?x57787 l_0_12_53)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x58005 (* ?x57784 l_0_12_52)))
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60822 (* ?x60064 l_0_12_305)))
 (let ((?x60065 (* ?x60064 l_0_12_296)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60819 (* ?x60061 l_0_12_304)))
 (let ((?x60062 (* ?x60061 l_0_12_295)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x57817 (* ?x57769 l_0_12_188)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x57815 (* ?x57766 l_0_12_187)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x57981 (* ?x57980 l_0_12_3)))
 (let ((?x57977 (* 2.0 l_0_12_16)))
 (let ((?x57978 (* ?x57977 l_0_12_2)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x30785 (* ?x57763 l_0_12_152)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x60812 (* ?x57903 l_0_12_151)))
 (let ((?x60820 (- (+ (- (- (+ (+ (+ ?x60812 ?x30785) ?x57978) ?x57981) ?x57815) ?x57817) ?x60062) ?x60819)))
 (let ((?x60827 (- (- (- (+ ?x60820 ?x60065) ?x60822) (* (* 2.0 l_0_12_331) l_0_12_340)) (* (* 2.0 l_0_12_332) l_0_12_341))))
 (let ((?x60831 (- (- ?x60827 (* (* 2.0 l_0_12_333) l_0_12_342)) (* (* 2.0 l_0_12_334) l_0_12_343))))
 (let ((?x60835 (- (- ?x60831 (* (* 2.0 l_0_12_367) l_0_12_376)) (* (* 2.0 l_0_12_368) l_0_12_377))))
 (let ((?x60839 (- (- ?x60835 (* (* 2.0 l_0_12_369) l_0_12_378)) (* (* 2.0 l_0_12_370) l_0_12_379))))
 (let ((?x60845 (- (- (- (- ?x60839 ?x58005) ?x58007) (* (* 2.0 l_0_12_403) l_0_12_412)) (* (* 2.0 l_0_12_404) l_0_12_413))))
 (let ((?x60849 (- (- ?x60845 (* (* 2.0 l_0_12_405) l_0_12_414)) (* (* 2.0 l_0_12_406) l_0_12_415))))
 (let ((?x60853 (- (- ?x60849 (* (* 2.0 l_0_12_439) l_0_12_448)) (* (* 2.0 l_0_12_440) l_0_12_449))))
 (let ((?x60857 (- (- ?x60853 (* (* 2.0 l_0_12_441) l_0_12_450)) (* (* 2.0 l_0_12_442) l_0_12_451))))
 (= ?x60857 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x58079 (* ?x57787 l_0_12_59)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x58077 (* ?x57784 l_0_12_58)))
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60904 (* ?x60064 l_0_12_311)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60902 (* ?x60061 l_0_12_310)))
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x60692 (* ?x57286 l_0_12_260)))
 (let ((?x57283 (* 2.0 l_0_12_254)))
 (let ((?x60690 (* ?x57283 l_0_12_259)))
 (let ((?x58071 (* 2.0 l_0_12_23)))
 (let ((?x58072 (* ?x58071 l_0_12_3)))
 (let ((?x57772 (* 2.0 l_0_12_2)))
 (let ((?x58063 (* ?x57772 l_0_12_22)))
 (let ((?x60907 (- (- (- (- (- (+ ?x58063 ?x58072) ?x60690) ?x60692) ?x60902) ?x60904) (* (* 2.0 l_0_12_331) l_0_12_346))))
 (let ((?x60911 (- (- ?x60907 (* (* 2.0 l_0_12_332) l_0_12_347)) (* (* 2.0 l_0_12_333) l_0_12_348))))
 (let ((?x60915 (- (- ?x60911 (* (* 2.0 l_0_12_334) l_0_12_349)) (* (* 2.0 l_0_12_367) l_0_12_382))))
 (let ((?x60919 (- (- ?x60915 (* (* 2.0 l_0_12_368) l_0_12_383)) (* (* 2.0 l_0_12_369) l_0_12_384))))
 (let ((?x60925 (- (- (- (- ?x60919 (* (* 2.0 l_0_12_370) l_0_12_385)) ?x58077) ?x58079) (* (* 2.0 l_0_12_403) l_0_12_418))))
 (let ((?x60929 (- (- ?x60925 (* (* 2.0 l_0_12_404) l_0_12_419)) (* (* 2.0 l_0_12_405) l_0_12_420))))
 (let ((?x60933 (- (- ?x60929 (* (* 2.0 l_0_12_406) l_0_12_421)) (* (* 2.0 l_0_12_439) l_0_12_454))))
 (let ((?x60937 (- (- ?x60933 (* (* 2.0 l_0_12_440) l_0_12_455)) (* (* 2.0 l_0_12_441) l_0_12_456))))
 (= (- ?x60937 (* (* 2.0 l_0_12_442) l_0_12_457)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x57787 (* 2.0 l_0_12_39)))
 (let ((?x58143 (* ?x57787 l_0_12_66)))
 (let ((?x57784 (* 2.0 l_0_12_38)))
 (let ((?x58141 (* ?x57784 l_0_12_65)))
 (let ((?x57781 (* 2.0 l_0_12_3)))
 (let ((?x58139 (* ?x57781 l_0_12_30)))
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x61013 (* ?x60064 l_0_12_318)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x61011 (* ?x60061 l_0_12_317)))
 (let ((?x57772 (* 2.0 l_0_12_2)))
 (let ((?x58131 (* ?x57772 l_0_12_29)))
 (let ((?x61010 (- (- ?x58131 (* (* 2.0 l_0_12_218) l_0_12_223)) (* (* 2.0 l_0_12_219) l_0_12_224))))
 (let ((?x61017 (- (+ (- (- ?x61010 ?x61011) ?x61013) ?x58139) (* (* 2.0 l_0_12_331) l_0_12_353))))
 (let ((?x61021 (- (- ?x61017 (* (* 2.0 l_0_12_332) l_0_12_354)) (* (* 2.0 l_0_12_333) l_0_12_355))))
 (let ((?x61025 (- (- ?x61021 (* (* 2.0 l_0_12_334) l_0_12_356)) (* (* 2.0 l_0_12_367) l_0_12_389))))
 (let ((?x61029 (- (- ?x61025 (* (* 2.0 l_0_12_368) l_0_12_390)) (* (* 2.0 l_0_12_369) l_0_12_391))))
 (let ((?x61035 (- (- (- (- ?x61029 (* (* 2.0 l_0_12_370) l_0_12_392)) ?x58141) ?x58143) (* (* 2.0 l_0_12_403) l_0_12_425))))
 (let ((?x61039 (- (- ?x61035 (* (* 2.0 l_0_12_404) l_0_12_426)) (* (* 2.0 l_0_12_405) l_0_12_427))))
 (let ((?x61043 (- (- ?x61039 (* (* 2.0 l_0_12_406) l_0_12_428)) (* (* 2.0 l_0_12_439) l_0_12_461))))
 (let ((?x61047 (- (- ?x61043 (* (* 2.0 l_0_12_440) l_0_12_462)) (* (* 2.0 l_0_12_441) l_0_12_463))))
 (= (- ?x61047 (* (* 2.0 l_0_12_442) l_0_12_464)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x58206 (* l_0_12_6 l_0_12_6)))
 (let ((?x58204 (* l_0_12_5 l_0_12_5)))
 (let ((?x58202 (* l_0_12_42 l_0_12_42)))
 (let ((?x58200 (* l_0_12_41 l_0_12_41)))
 (let ((?x58198 (* l_0_12_40 l_0_12_40)))
 (let ((?x58196 (* l_0_12_4 l_0_12_4)))
 (let ((?x61128 (* l_0_12_294 l_0_12_294)))
 (let ((?x61129 (- (- (* (- l_0_12_292) l_0_12_292) (* l_0_12_293 l_0_12_293)) ?x61128)))
 (= (+ (+ (- (- (- (+ ?x61129 ?x58196) ?x58198) ?x58200) ?x58202) ?x58204) ?x58206) 0.0))))))))))
(assert
 (let ((?x58255 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x58252 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x58249 (* ?x57854 l_0_12_45)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x58247 (* ?x57851 l_0_12_44)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x58245 (* ?x57848 l_0_12_43)))
 (let ((?x58243 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x60130 (* ?x57500 l_0_12_297)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x60128 (* ?x57497 l_0_12_296)))
 (let ((?x61150 (- (+ (- (- (* (* (- 2.0) l_0_12_292) l_0_12_295) ?x60128) ?x60130) ?x58243) ?x58245)))
 (= (+ (+ (- (- ?x61150 ?x58247) ?x58249) ?x58252) ?x58255) 0.0))))))))))))))))
(assert
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x58294 (* ?x57854 l_0_12_49)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x58292 (* ?x57851 l_0_12_48)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x58290 (* ?x57848 l_0_12_47)))
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x61176 (* ?x57500 l_0_12_301)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x61174 (* ?x57497 l_0_12_300)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x61172 (* ?x57494 l_0_12_299)))
 (let ((?x57924 (* 2.0 l_0_12_258)))
 (let ((?x61170 (* ?x57924 l_0_12_261)))
 (let ((?x57921 (* 2.0 l_0_12_257)))
 (let ((?x61168 (* ?x57921 l_0_12_260)))
 (let ((?x57918 (* 2.0 l_0_12_256)))
 (let ((?x61166 (* ?x57918 l_0_12_259)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x58276 (* ?x58275 l_0_12_6)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x58273 (* ?x57900 l_0_12_5)))
 (let ((?x61169 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_4) ?x58273) ?x58276) ?x61166) ?x61168)))
 (let ((?x61180 (- (- (- (- (- (- (+ ?x61169 ?x61170) ?x61172) ?x61174) ?x61176) ?x58290) ?x58292) ?x58294)))
 (= ?x61180 0.0))))))))))))))))))))))))))
(assert
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x58342 (* ?x57854 l_0_12_54)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x58340 (* ?x57851 l_0_12_53)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x58338 (* ?x57848 l_0_12_52)))
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x61197 (* ?x57500 l_0_12_306)))
 (let ((?x60130 (* ?x57500 l_0_12_297)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x34713 (* ?x57497 l_0_12_305)))
 (let ((?x60128 (* ?x57497 l_0_12_296)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x34605 (* ?x57494 l_0_12_304)))
 (let ((?x60126 (* ?x57494 l_0_12_295)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x58240 (* ?x57993 l_0_12_189)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x58238 (* ?x57990 l_0_12_188)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x58236 (* ?x57987 l_0_12_187)))
 (let ((?x58329 (* 2.0 l_0_12_18)))
 (let ((?x58330 (* ?x58329 l_0_12_6)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x58327 (* ?x57980 l_0_12_5)))
 (let ((?x57977 (* 2.0 l_0_12_16)))
 (let ((?x58316 (* ?x57977 l_0_12_4)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58234 (* ?x57974 l_0_12_153)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58232 (* ?x57971 l_0_12_152)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x58661 (* ?x57968 l_0_12_151)))
 (let ((?x34631 (- (- (+ (+ (+ (+ (+ ?x58661 ?x58232) ?x58234) ?x58316) ?x58327) ?x58330) ?x58236) ?x58238)))
 (let ((?x61198 (- (+ (- (+ (- (+ (- ?x34631 ?x58240) ?x60126) ?x34605) ?x60128) ?x34713) ?x60130) ?x61197)))
 (= (- (- (- ?x61198 ?x58338) ?x58340) ?x58342) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57854 (* 2.0 l_0_12_42)))
 (let ((?x58400 (* ?x57854 l_0_12_60)))
 (let ((?x57851 (* 2.0 l_0_12_41)))
 (let ((?x58398 (* ?x57851 l_0_12_59)))
 (let ((?x57848 (* 2.0 l_0_12_40)))
 (let ((?x58396 (* ?x57848 l_0_12_58)))
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x61234 (* ?x57500 l_0_12_312)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x61232 (* ?x57497 l_0_12_311)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x61230 (* ?x57494 l_0_12_310)))
 (let ((?x57924 (* 2.0 l_0_12_258)))
 (let ((?x61170 (* ?x57924 l_0_12_261)))
 (let ((?x57921 (* 2.0 l_0_12_257)))
 (let ((?x61168 (* ?x57921 l_0_12_260)))
 (let ((?x57918 (* 2.0 l_0_12_256)))
 (let ((?x61166 (* ?x57918 l_0_12_259)))
 (let ((?x58393 (* 2.0 l_0_12_24)))
 (let ((?x58394 (* ?x58393 l_0_12_6)))
 (let ((?x58071 (* 2.0 l_0_12_23)))
 (let ((?x58391 (* ?x58071 l_0_12_5)))
 (let ((?x58388 (* 2.0 l_0_12_22)))
 (let ((?x58389 (* ?x58388 l_0_12_4)))
 (let ((?x61233 (- (- (- (- (- (+ (+ ?x58389 ?x58391) ?x58394) ?x61166) ?x61168) ?x61170) ?x61230) ?x61232)))
 (= (- (- (- (- ?x61233 ?x61234) ?x58396) ?x58398) ?x58400) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x58485 (* l_0_12_9 l_0_12_9)))
 (let ((?x58483 (* l_0_12_8 l_0_12_8)))
 (let ((?x58481 (* l_0_12_7 l_0_12_7)))
 (let ((?x58479 (* l_0_12_46 l_0_12_46)))
 (let ((?x58477 (* l_0_12_45 l_0_12_45)))
 (let ((?x32053 (* l_0_12_44 l_0_12_44)))
 (let ((?x32062 (* l_0_12_43 l_0_12_43)))
 (let ((?x60183 (* l_0_12_298 l_0_12_298)))
 (let ((?x60181 (* l_0_12_297 l_0_12_297)))
 (let ((?x60179 (* l_0_12_296 l_0_12_296)))
 (let ((?x34931 (- (- (- (* l_0_12_10 l_0_12_10) (* l_0_12_295 l_0_12_295)) ?x60179) ?x60181)))
 (let ((?x61258 (+ (+ (- (- (- (- (- ?x34931 ?x60183) ?x32062) ?x32053) ?x58477) ?x58479) ?x58481) ?x58483)))
 (= (+ ?x61258 ?x58485) 0.0))))))))))))))
(assert
 (let ((?x58546 (* 2.0 l_0_12_46)))
 (let ((?x58547 (* ?x58546 l_0_12_50)))
 (let ((?x58543 (* 2.0 l_0_12_45)))
 (let ((?x58544 (* ?x58543 l_0_12_49)))
 (let ((?x58540 (* 2.0 l_0_12_44)))
 (let ((?x58541 (* ?x58540 l_0_12_48)))
 (let ((?x58537 (* 2.0 l_0_12_43)))
 (let ((?x58538 (* ?x58537 l_0_12_47)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60242 (* ?x60241 l_0_12_302)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60239 (* ?x60238 l_0_12_301)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60236 (* ?x60235 l_0_12_300)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60233 (* ?x60232 l_0_12_299)))
 (let ((?x61266 (* l_0_12_262 l_0_12_262)))
 (let ((?x61264 (* l_0_12_261 l_0_12_261)))
 (let ((?x61262 (* l_0_12_260 l_0_12_260)))
 (let ((?x34958 (* l_0_12_259 l_0_12_259)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x58511 (* ?x58275 l_0_12_9)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x58509 (* ?x57900 l_0_12_8)))
 (let ((?x58506 (* 2.0 l_0_12_11)))
 (let ((?x58507 (* ?x58506 l_0_12_7)))
 (let ((?x61261 (+ (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_14) ?x58507) ?x58509) ?x58511) ?x34958)))
 (let ((?x61271 (- (- (- (- (+ (+ (+ ?x61261 ?x61262) ?x61264) ?x61266) ?x60233) ?x60236) ?x60239) ?x60242)))
 (= (- (- (- (- ?x61271 ?x58538) ?x58541) ?x58544) ?x58547) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x58546 (* 2.0 l_0_12_46)))
 (let ((?x58620 (* ?x58546 l_0_12_55)))
 (let ((?x58543 (* 2.0 l_0_12_45)))
 (let ((?x58618 (* ?x58543 l_0_12_54)))
 (let ((?x58540 (* 2.0 l_0_12_44)))
 (let ((?x58616 (* ?x58540 l_0_12_53)))
 (let ((?x58537 (* 2.0 l_0_12_43)))
 (let ((?x58614 (* ?x58537 l_0_12_52)))
 (let ((?x60183 (* l_0_12_298 l_0_12_298)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60313 (* ?x60241 l_0_12_307)))
 (let ((?x60181 (* l_0_12_297 l_0_12_297)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60311 (* ?x60238 l_0_12_306)))
 (let ((?x60179 (* l_0_12_296 l_0_12_296)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60309 (* ?x60235 l_0_12_305)))
 (let ((?x60177 (* l_0_12_295 l_0_12_295)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60307 (* ?x60232 l_0_12_304)))
 (let ((?x32063 (* l_0_12_190 l_0_12_190)))
 (let ((?x32072 (* l_0_12_189 l_0_12_189)))
 (let ((?x32076 (* l_0_12_188 l_0_12_188)))
 (let ((?x32084 (* l_0_12_187 l_0_12_187)))
 (let ((?x58329 (* 2.0 l_0_12_18)))
 (let ((?x58604 (* ?x58329 l_0_12_9)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x58602 (* ?x57980 l_0_12_8)))
 (let ((?x57977 (* 2.0 l_0_12_16)))
 (let ((?x58600 (* ?x57977 l_0_12_7)))
 (let ((?x32087 (* l_0_12_154 l_0_12_154)))
 (let ((?x32088 (* l_0_12_153 l_0_12_153)))
 (let ((?x32083 (* l_0_12_152 l_0_12_152)))
 (let ((?x32077 (* l_0_12_151 l_0_12_151)))
 (let ((?x35048 (+ (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_19) ?x32077) ?x32083) ?x32088) ?x32087)))
 (let ((?x35003 (- (- (- (- (+ (+ (+ ?x35048 ?x58600) ?x58602) ?x58604) ?x32084) ?x32076) ?x32072) ?x32063)))
 (let ((?x34908 (- (+ (- (+ (- (+ (- ?x35003 ?x60307) ?x60177) ?x60309) ?x60179) ?x60311) ?x60181) ?x60313)))
 (= (- (- (- (- (+ ?x34908 ?x60183) ?x58614) ?x58616) ?x58618) ?x58620) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x58546 (* 2.0 l_0_12_46)))
 (let ((?x58693 (* ?x58546 l_0_12_61)))
 (let ((?x58543 (* 2.0 l_0_12_45)))
 (let ((?x58691 (* ?x58543 l_0_12_60)))
 (let ((?x58540 (* 2.0 l_0_12_44)))
 (let ((?x58689 (* ?x58540 l_0_12_59)))
 (let ((?x58537 (* 2.0 l_0_12_43)))
 (let ((?x58687 (* ?x58537 l_0_12_58)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60374 (* ?x60241 l_0_12_313)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60372 (* ?x60238 l_0_12_312)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60370 (* ?x60235 l_0_12_311)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60368 (* ?x60232 l_0_12_310)))
 (let ((?x61266 (* l_0_12_262 l_0_12_262)))
 (let ((?x61264 (* l_0_12_261 l_0_12_261)))
 (let ((?x61262 (* l_0_12_260 l_0_12_260)))
 (let ((?x34958 (* l_0_12_259 l_0_12_259)))
 (let ((?x58393 (* 2.0 l_0_12_24)))
 (let ((?x58685 (* ?x58393 l_0_12_9)))
 (let ((?x58071 (* 2.0 l_0_12_23)))
 (let ((?x58683 (* ?x58071 l_0_12_8)))
 (let ((?x58388 (* 2.0 l_0_12_22)))
 (let ((?x58681 (* ?x58388 l_0_12_7)))
 (let ((?x61285 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_25) ?x58681) ?x58683) ?x58685) ?x34958)))
 (let ((?x61292 (- (- (- (- (- (- (- ?x61285 ?x61262) ?x61264) ?x61266) ?x60368) ?x60370) ?x60372) ?x60374)))
 (= (- (- (- (- ?x61292 ?x58687) ?x58689) ?x58691) ?x58693) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x58546 (* 2.0 l_0_12_46)))
 (let ((?x58805 (* ?x58546 l_0_12_68)))
 (let ((?x58543 (* 2.0 l_0_12_45)))
 (let ((?x58803 (* ?x58543 l_0_12_67)))
 (let ((?x58540 (* 2.0 l_0_12_44)))
 (let ((?x58801 (* ?x58540 l_0_12_66)))
 (let ((?x58537 (* 2.0 l_0_12_43)))
 (let ((?x58799 (* ?x58537 l_0_12_65)))
 (let ((?x57841 (* 2.0 l_0_12_31)))
 (let ((?x58797 (* ?x57841 l_0_12_9)))
 (let ((?x57838 (* 2.0 l_0_12_30)))
 (let ((?x58795 (* ?x57838 l_0_12_8)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60454 (* ?x60241 l_0_12_320)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60452 (* ?x60238 l_0_12_319)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60450 (* ?x60235 l_0_12_318)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60448 (* ?x60232 l_0_12_317)))
 (let ((?x57830 (* 2.0 l_0_12_29)))
 (let ((?x58793 (* ?x57830 l_0_12_7)))
 (let ((?x35154 (* l_0_12_226 l_0_12_226)))
 (let ((?x35142 (* l_0_12_225 l_0_12_225)))
 (let ((?x35291 (* l_0_12_224 l_0_12_224)))
 (let ((?x35303 (* l_0_12_223 l_0_12_223)))
 (let ((?x35160 (- (- (- (- (* (* 2.0 l_0_12_10) l_0_12_32) ?x35303) ?x35291) ?x35142) ?x35154)))
 (let ((?x35185 (+ (+ (- (- (- (- (+ ?x35160 ?x58793) ?x60448) ?x60450) ?x60452) ?x60454) ?x58795) ?x58797)))
 (= (- (- (- (- ?x35185 ?x58799) ?x58801) ?x58803) ?x58805) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x58890 (* l_0_12_51 l_0_12_51)))
 (let ((?x58888 (* l_0_12_50 l_0_12_50)))
 (let ((?x58886 (* l_0_12_49 l_0_12_49)))
 (let ((?x58884 (* l_0_12_48 l_0_12_48)))
 (let ((?x58882 (* l_0_12_47 l_0_12_47)))
 (let ((?x61321 (* l_0_12_303 l_0_12_303)))
 (let ((?x61319 (* l_0_12_302 l_0_12_302)))
 (let ((?x61317 (* l_0_12_301 l_0_12_301)))
 (let ((?x61315 (* l_0_12_300 l_0_12_300)))
 (let ((?x61313 (* l_0_12_299 l_0_12_299)))
 (let ((?x61310 (* 2.0 l_0_12_262)))
 (let ((?x61311 (* ?x61310 l_0_12_266)))
 (let ((?x61307 (* 2.0 l_0_12_261)))
 (let ((?x61308 (* ?x61307 l_0_12_265)))
 (let ((?x61304 (* 2.0 l_0_12_260)))
 (let ((?x61305 (* ?x61304 l_0_12_264)))
 (let ((?x35342 (* 2.0 l_0_12_259)))
 (let ((?x35345 (* ?x35342 l_0_12_263)))
 (let ((?x58860 (* l_0_12_15 l_0_12_15)))
 (let ((?x58858 (* l_0_12_14 l_0_12_14)))
 (let ((?x58845 (* l_0_12_13 l_0_12_13)))
 (let ((?x35344 (+ (+ (+ (* l_0_12_11 l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x58845) ?x58858)))
 (let ((?x61316 (- (- (+ (+ (+ (+ (+ ?x35344 ?x58860) ?x35345) ?x61305) ?x61308) ?x61311) ?x61313) ?x61315)))
 (let ((?x61326 (- (- (- (- (- (- (- ?x61316 ?x61317) ?x61319) ?x61321) ?x58882) ?x58884) ?x58886) ?x58888)))
 (= (- ?x61326 ?x58890) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x58970 (* 2.0 l_0_12_51)))
 (let ((?x58971 (* ?x58970 l_0_12_56)))
 (let ((?x58967 (* 2.0 l_0_12_50)))
 (let ((?x58968 (* ?x58967 l_0_12_55)))
 (let ((?x58964 (* 2.0 l_0_12_49)))
 (let ((?x58965 (* ?x58964 l_0_12_54)))
 (let ((?x58961 (* 2.0 l_0_12_48)))
 (let ((?x58962 (* ?x58961 l_0_12_53)))
 (let ((?x58958 (* 2.0 l_0_12_47)))
 (let ((?x58959 (* ?x58958 l_0_12_52)))
 (let ((?x61377 (* 2.0 l_0_12_303)))
 (let ((?x61378 (* ?x61377 l_0_12_308)))
 (let ((?x61374 (* 2.0 l_0_12_302)))
 (let ((?x61375 (* ?x61374 l_0_12_307)))
 (let ((?x61371 (* 2.0 l_0_12_301)))
 (let ((?x61372 (* ?x61371 l_0_12_306)))
 (let ((?x61368 (* 2.0 l_0_12_300)))
 (let ((?x61369 (* ?x61368 l_0_12_305)))
 (let ((?x61365 (* 2.0 l_0_12_299)))
 (let ((?x61366 (* ?x61365 l_0_12_304)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60242 (* ?x60241 l_0_12_302)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60239 (* ?x60238 l_0_12_301)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60236 (* ?x60235 l_0_12_300)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60233 (* ?x60232 l_0_12_299)))
 (let ((?x61310 (* 2.0 l_0_12_262)))
 (let ((?x61359 (* ?x61310 l_0_12_271)))
 (let ((?x61307 (* 2.0 l_0_12_261)))
 (let ((?x61357 (* ?x61307 l_0_12_270)))
 (let ((?x61304 (* 2.0 l_0_12_260)))
 (let ((?x61355 (* ?x61304 l_0_12_269)))
 (let ((?x35342 (* 2.0 l_0_12_259)))
 (let ((?x61353 (* ?x35342 l_0_12_268)))
 (let ((?x58534 (* 2.0 l_0_12_190)))
 (let ((?x58535 (* ?x58534 l_0_12_194)))
 (let ((?x58531 (* 2.0 l_0_12_189)))
 (let ((?x58532 (* ?x58531 l_0_12_193)))
 (let ((?x58528 (* 2.0 l_0_12_188)))
 (let ((?x58529 (* ?x58528 l_0_12_192)))
 (let ((?x58525 (* 2.0 l_0_12_187)))
 (let ((?x58526 (* ?x58525 l_0_12_191)))
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58523 (* ?x58522 l_0_12_158)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58520 (* ?x58519 l_0_12_157)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58517 (* ?x58516 l_0_12_156)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58514 (* ?x58513 l_0_12_155)))
 (let ((?x58925 (* 2.0 l_0_12_15)))
 (let ((?x58926 (* ?x58925 l_0_12_20)))
 (let ((?x58922 (* 2.0 l_0_12_14)))
 (let ((?x58923 (* ?x58922 l_0_12_19)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x58920 (* ?x58275 l_0_12_18)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x58918 (* ?x57900 l_0_12_17)))
 (let ((?x61344 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_16) ?x58918) ?x58920) ?x58923) ?x58926)))
 (let ((?x61351 (- (- (- (+ (+ (+ (+ ?x61344 ?x58514) ?x58517) ?x58520) ?x58523) ?x58526) ?x58529) ?x58532)))
 (let ((?x61362 (+ (+ (+ (+ (+ (+ (- ?x61351 ?x58535) ?x61353) ?x61355) ?x61357) ?x61359) ?x60233) ?x60236)))
 (let ((?x61379 (- (- (- (- (- (+ (+ ?x61362 ?x60239) ?x60242) ?x61366) ?x61369) ?x61372) ?x61375) ?x61378)))
 (= (- (- (- (- (- ?x61379 ?x58959) ?x58962) ?x58965) ?x58968) ?x58971) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x58970 (* 2.0 l_0_12_51)))
 (let ((?x59072 (* ?x58970 l_0_12_62)))
 (let ((?x58967 (* 2.0 l_0_12_50)))
 (let ((?x59070 (* ?x58967 l_0_12_61)))
 (let ((?x58964 (* 2.0 l_0_12_49)))
 (let ((?x59068 (* ?x58964 l_0_12_60)))
 (let ((?x58961 (* 2.0 l_0_12_48)))
 (let ((?x59066 (* ?x58961 l_0_12_59)))
 (let ((?x58958 (* 2.0 l_0_12_47)))
 (let ((?x59064 (* ?x58958 l_0_12_58)))
 (let ((?x61377 (* 2.0 l_0_12_303)))
 (let ((?x61415 (* ?x61377 l_0_12_314)))
 (let ((?x61374 (* 2.0 l_0_12_302)))
 (let ((?x61413 (* ?x61374 l_0_12_313)))
 (let ((?x61371 (* 2.0 l_0_12_301)))
 (let ((?x61411 (* ?x61371 l_0_12_312)))
 (let ((?x61368 (* 2.0 l_0_12_300)))
 (let ((?x61409 (* ?x61368 l_0_12_311)))
 (let ((?x61365 (* 2.0 l_0_12_299)))
 (let ((?x61407 (* ?x61365 l_0_12_310)))
 (let ((?x61310 (* 2.0 l_0_12_262)))
 (let ((?x61405 (* ?x61310 l_0_12_277)))
 (let ((?x61311 (* ?x61310 l_0_12_266)))
 (let ((?x61307 (* 2.0 l_0_12_261)))
 (let ((?x61402 (* ?x61307 l_0_12_276)))
 (let ((?x61308 (* ?x61307 l_0_12_265)))
 (let ((?x61304 (* 2.0 l_0_12_260)))
 (let ((?x61399 (* ?x61304 l_0_12_275)))
 (let ((?x61305 (* ?x61304 l_0_12_264)))
 (let ((?x35342 (* 2.0 l_0_12_259)))
 (let ((?x61396 (* ?x35342 l_0_12_274)))
 (let ((?x35345 (* ?x35342 l_0_12_263)))
 (let ((?x58925 (* 2.0 l_0_12_15)))
 (let ((?x59041 (* ?x58925 l_0_12_26)))
 (let ((?x58922 (* 2.0 l_0_12_14)))
 (let ((?x59037 (* ?x58922 l_0_12_25)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x59022 (* ?x58275 l_0_12_24)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x59018 (* ?x57900 l_0_12_23)))
 (let ((?x61394 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_22) ?x59018) ?x59022) ?x59037) ?x59041)))
 (let ((?x61404 (- (+ (- (+ (- (+ (- ?x61394 ?x35345) ?x61396) ?x61305) ?x61399) ?x61308) ?x61402) ?x61311)))
 (let ((?x61417 (- (- (- (- (- (- (+ ?x61404 ?x61405) ?x61407) ?x61409) ?x61411) ?x61413) ?x61415) ?x59064)))
 (= (- (- (- (- ?x61417 ?x59066) ?x59068) ?x59070) ?x59072) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x58970 (* 2.0 l_0_12_51)))
 (let ((?x59174 (* ?x58970 l_0_12_69)))
 (let ((?x58967 (* 2.0 l_0_12_50)))
 (let ((?x59172 (* ?x58967 l_0_12_68)))
 (let ((?x58964 (* 2.0 l_0_12_49)))
 (let ((?x59170 (* ?x58964 l_0_12_67)))
 (let ((?x58961 (* 2.0 l_0_12_48)))
 (let ((?x59168 (* ?x58961 l_0_12_66)))
 (let ((?x58958 (* 2.0 l_0_12_47)))
 (let ((?x59166 (* ?x58958 l_0_12_65)))
 (let ((?x61377 (* 2.0 l_0_12_303)))
 (let ((?x61453 (* ?x61377 l_0_12_321)))
 (let ((?x61374 (* 2.0 l_0_12_302)))
 (let ((?x61451 (* ?x61374 l_0_12_320)))
 (let ((?x61371 (* 2.0 l_0_12_301)))
 (let ((?x61449 (* ?x61371 l_0_12_319)))
 (let ((?x61368 (* 2.0 l_0_12_300)))
 (let ((?x61447 (* ?x61368 l_0_12_318)))
 (let ((?x61365 (* 2.0 l_0_12_299)))
 (let ((?x61445 (* ?x61365 l_0_12_317)))
 (let ((?x61310 (* 2.0 l_0_12_262)))
 (let ((?x61443 (* ?x61310 l_0_12_284)))
 (let ((?x61307 (* 2.0 l_0_12_261)))
 (let ((?x35728 (* ?x61307 l_0_12_283)))
 (let ((?x61304 (* 2.0 l_0_12_260)))
 (let ((?x35734 (* ?x61304 l_0_12_282)))
 (let ((?x35342 (* 2.0 l_0_12_259)))
 (let ((?x35744 (* ?x35342 l_0_12_281)))
 (let ((?x58925 (* 2.0 l_0_12_15)))
 (let ((?x59144 (* ?x58925 l_0_12_33)))
 (let ((?x58922 (* 2.0 l_0_12_14)))
 (let ((?x59142 (* ?x58922 l_0_12_32)))
 (let ((?x58275 (* 2.0 l_0_12_13)))
 (let ((?x59140 (* ?x58275 l_0_12_31)))
 (let ((?x57900 (* 2.0 l_0_12_12)))
 (let ((?x59138 (* ?x57900 l_0_12_30)))
 (let ((?x35699 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_29) ?x59138) ?x59140) ?x59142) ?x59144)))
 (let ((?x35735 (- (- ?x35699 (* (* 2.0 l_0_12_223) l_0_12_227)) (* (* 2.0 l_0_12_224) l_0_12_228))))
 (let ((?x35742 (- (- ?x35735 (* (* 2.0 l_0_12_225) l_0_12_229)) (* (* 2.0 l_0_12_226) l_0_12_230))))
 (let ((?x61450 (- (- (- (+ (+ (+ (+ ?x35742 ?x35744) ?x35734) ?x35728) ?x61443) ?x61445) ?x61447) ?x61449)))
 (let ((?x61459 (- (- (- (- (- (- (- ?x61450 ?x61451) ?x61453) ?x59166) ?x59168) ?x59170) ?x59172) ?x59174)))
 (= ?x61459 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59276 (* l_0_12_57 l_0_12_57)))
 (let ((?x59274 (* l_0_12_56 l_0_12_56)))
 (let ((?x59272 (* l_0_12_55 l_0_12_55)))
 (let ((?x59270 (* l_0_12_54 l_0_12_54)))
 (let ((?x59268 (* l_0_12_53 l_0_12_53)))
 (let ((?x59266 (* l_0_12_52 l_0_12_52)))
 (let ((?x61507 (* l_0_12_309 l_0_12_309)))
 (let ((?x61505 (* l_0_12_308 l_0_12_308)))
 (let ((?x61503 (* l_0_12_307 l_0_12_307)))
 (let ((?x61501 (* l_0_12_306 l_0_12_306)))
 (let ((?x35814 (* l_0_12_305 l_0_12_305)))
 (let ((?x35817 (* l_0_12_304 l_0_12_304)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60313 (* ?x60241 l_0_12_307)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60311 (* ?x60238 l_0_12_306)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60309 (* ?x60235 l_0_12_305)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60307 (* ?x60232 l_0_12_304)))
 (let ((?x59264 (* l_0_12_21 l_0_12_21)))
 (let ((?x59258 (* l_0_12_20 l_0_12_20)))
 (let ((?x58534 (* 2.0 l_0_12_190)))
 (let ((?x58612 (* ?x58534 l_0_12_199)))
 (let ((?x59248 (* l_0_12_19 l_0_12_19)))
 (let ((?x58531 (* 2.0 l_0_12_189)))
 (let ((?x58610 (* ?x58531 l_0_12_198)))
 (let ((?x58528 (* 2.0 l_0_12_188)))
 (let ((?x58608 (* ?x58528 l_0_12_197)))
 (let ((?x58525 (* 2.0 l_0_12_187)))
 (let ((?x58606 (* ?x58525 l_0_12_196)))
 (let ((?x59246 (* l_0_12_18 l_0_12_18)))
 (let ((?x59244 (* l_0_12_17 l_0_12_17)))
 (let ((?x59280 (* l_0_12_16 l_0_12_16)))
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58587 (* ?x58522 l_0_12_163)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58583 (* ?x58519 l_0_12_162)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58579 (* ?x58516 l_0_12_161)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58575 (* ?x58513 l_0_12_160)))
 (let ((?x35872 (- (+ (+ (+ (+ (+ (+ ?x58575 ?x58579) ?x58583) ?x58587) ?x59280) ?x59244) ?x59246) ?x58606)))
 (let ((?x35801 (+ (+ (+ (- (+ (- (- ?x35872 ?x58608) ?x58610) ?x59248) ?x58612) ?x59258) ?x59264) ?x60307)))
 (let ((?x61504 (- (- (- (- (+ (+ (+ ?x35801 ?x60309) ?x60311) ?x60313) ?x35817) ?x35814) ?x61501) ?x61503)))
 (let ((?x61513 (- (- (- (- (- (- (- ?x61504 ?x61505) ?x61507) ?x59266) ?x59268) ?x59270) ?x59272) ?x59274)))
 (= (- ?x61513 ?x59276) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59398 (* 2.0 l_0_12_57)))
 (let ((?x59399 (* ?x59398 l_0_12_63)))
 (let ((?x59395 (* 2.0 l_0_12_56)))
 (let ((?x59396 (* ?x59395 l_0_12_62)))
 (let ((?x59392 (* 2.0 l_0_12_55)))
 (let ((?x59393 (* ?x59392 l_0_12_61)))
 (let ((?x59389 (* 2.0 l_0_12_54)))
 (let ((?x59390 (* ?x59389 l_0_12_60)))
 (let ((?x59386 (* 2.0 l_0_12_53)))
 (let ((?x59387 (* ?x59386 l_0_12_59)))
 (let ((?x59383 (* 2.0 l_0_12_52)))
 (let ((?x59384 (* ?x59383 l_0_12_58)))
 (let ((?x61532 (* 2.0 l_0_12_309)))
 (let ((?x61533 (* ?x61532 l_0_12_315)))
 (let ((?x61529 (* 2.0 l_0_12_308)))
 (let ((?x61530 (* ?x61529 l_0_12_314)))
 (let ((?x61526 (* 2.0 l_0_12_307)))
 (let ((?x61527 (* ?x61526 l_0_12_313)))
 (let ((?x61523 (* 2.0 l_0_12_306)))
 (let ((?x61524 (* ?x61523 l_0_12_312)))
 (let ((?x61520 (* 2.0 l_0_12_305)))
 (let ((?x61521 (* ?x61520 l_0_12_311)))
 (let ((?x61517 (* 2.0 l_0_12_304)))
 (let ((?x61518 (* ?x61517 l_0_12_310)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60374 (* ?x60241 l_0_12_313)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60372 (* ?x60238 l_0_12_312)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60370 (* ?x60235 l_0_12_311)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60368 (* ?x60232 l_0_12_310)))
 (let ((?x61310 (* 2.0 l_0_12_262)))
 (let ((?x61359 (* ?x61310 l_0_12_271)))
 (let ((?x61307 (* 2.0 l_0_12_261)))
 (let ((?x61357 (* ?x61307 l_0_12_270)))
 (let ((?x61304 (* 2.0 l_0_12_260)))
 (let ((?x61355 (* ?x61304 l_0_12_269)))
 (let ((?x35342 (* 2.0 l_0_12_259)))
 (let ((?x61353 (* ?x35342 l_0_12_268)))
 (let ((?x59380 (* 2.0 l_0_12_21)))
 (let ((?x59381 (* ?x59380 l_0_12_27)))
 (let ((?x59371 (* 2.0 l_0_12_20)))
 (let ((?x59372 (* ?x59371 l_0_12_26)))
 (let ((?x58534 (* 2.0 l_0_12_190)))
 (let ((?x58679 (* ?x58534 l_0_12_205)))
 (let ((?x59356 (* 2.0 l_0_12_19)))
 (let ((?x59357 (* ?x59356 l_0_12_25)))
 (let ((?x58531 (* 2.0 l_0_12_189)))
 (let ((?x58677 (* ?x58531 l_0_12_204)))
 (let ((?x58528 (* 2.0 l_0_12_188)))
 (let ((?x58675 (* ?x58528 l_0_12_203)))
 (let ((?x58525 (* 2.0 l_0_12_187)))
 (let ((?x58673 (* ?x58525 l_0_12_202)))
 (let ((?x58329 (* 2.0 l_0_12_18)))
 (let ((?x59354 (* ?x58329 l_0_12_24)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x59352 (* ?x57980 l_0_12_23)))
 (let ((?x57977 (* 2.0 l_0_12_16)))
 (let ((?x59332 (* ?x57977 l_0_12_22)))
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58671 (* ?x58522 l_0_12_169)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58669 (* ?x58519 l_0_12_168)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58667 (* ?x58516 l_0_12_167)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58665 (* ?x58513 l_0_12_166)))
 (let ((?x36009 (- (+ (+ (+ (+ (+ (+ ?x58665 ?x58667) ?x58669) ?x58671) ?x59332) ?x59352) ?x59354) ?x58673)))
 (let ((?x35919 (- (+ (+ (- (+ (- (- ?x36009 ?x58675) ?x58677) ?x59357) ?x58679) ?x59372) ?x59381) ?x61353)))
 (let ((?x61516 (+ (+ (+ (+ (- (- (- ?x35919 ?x61355) ?x61357) ?x61359) ?x60368) ?x60370) ?x60372) ?x60374)))
 (let ((?x61535 (- (- (- (- (- (- (- ?x61516 ?x61518) ?x61521) ?x61524) ?x61527) ?x61530) ?x61533) ?x59384)))
 (= (- (- (- (- (- ?x61535 ?x59387) ?x59390) ?x59393) ?x59396) ?x59399) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59398 (* 2.0 l_0_12_57)))
 (let ((?x59548 (* ?x59398 l_0_12_70)))
 (let ((?x59395 (* 2.0 l_0_12_56)))
 (let ((?x59546 (* ?x59395 l_0_12_69)))
 (let ((?x59392 (* 2.0 l_0_12_55)))
 (let ((?x59544 (* ?x59392 l_0_12_68)))
 (let ((?x59389 (* 2.0 l_0_12_54)))
 (let ((?x59542 (* ?x59389 l_0_12_67)))
 (let ((?x59386 (* 2.0 l_0_12_53)))
 (let ((?x59540 (* ?x59386 l_0_12_66)))
 (let ((?x59383 (* 2.0 l_0_12_52)))
 (let ((?x59538 (* ?x59383 l_0_12_65)))
 (let ((?x61532 (* 2.0 l_0_12_309)))
 (let ((?x61553 (* ?x61532 l_0_12_322)))
 (let ((?x61529 (* 2.0 l_0_12_308)))
 (let ((?x61551 (* ?x61529 l_0_12_321)))
 (let ((?x61526 (* 2.0 l_0_12_307)))
 (let ((?x61549 (* ?x61526 l_0_12_320)))
 (let ((?x61523 (* 2.0 l_0_12_306)))
 (let ((?x61547 (* ?x61523 l_0_12_319)))
 (let ((?x61520 (* 2.0 l_0_12_305)))
 (let ((?x61545 (* ?x61520 l_0_12_318)))
 (let ((?x61517 (* 2.0 l_0_12_304)))
 (let ((?x61543 (* ?x61517 l_0_12_317)))
 (let ((?x60241 (* 2.0 l_0_12_298)))
 (let ((?x60454 (* ?x60241 l_0_12_320)))
 (let ((?x60238 (* 2.0 l_0_12_297)))
 (let ((?x60452 (* ?x60238 l_0_12_319)))
 (let ((?x60235 (* 2.0 l_0_12_296)))
 (let ((?x60450 (* ?x60235 l_0_12_318)))
 (let ((?x60232 (* 2.0 l_0_12_295)))
 (let ((?x60448 (* ?x60232 l_0_12_317)))
 (let ((?x59380 (* 2.0 l_0_12_21)))
 (let ((?x59536 (* ?x59380 l_0_12_34)))
 (let ((?x59371 (* 2.0 l_0_12_20)))
 (let ((?x59530 (* ?x59371 l_0_12_33)))
 (let ((?x58534 (* 2.0 l_0_12_190)))
 (let ((?x58791 (* ?x58534 l_0_12_212)))
 (let ((?x59356 (* 2.0 l_0_12_19)))
 (let ((?x59520 (* ?x59356 l_0_12_32)))
 (let ((?x58531 (* 2.0 l_0_12_189)))
 (let ((?x58789 (* ?x58531 l_0_12_211)))
 (let ((?x58528 (* 2.0 l_0_12_188)))
 (let ((?x58787 (* ?x58528 l_0_12_210)))
 (let ((?x58525 (* 2.0 l_0_12_187)))
 (let ((?x58785 (* ?x58525 l_0_12_209)))
 (let ((?x58329 (* 2.0 l_0_12_18)))
 (let ((?x59518 (* ?x58329 l_0_12_31)))
 (let ((?x57980 (* 2.0 l_0_12_17)))
 (let ((?x59516 (* ?x57980 l_0_12_30)))
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58783 (* ?x58522 l_0_12_176)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58781 (* ?x58519 l_0_12_175)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58779 (* ?x58516 l_0_12_174)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58777 (* ?x58513 l_0_12_173)))
 (let ((?x36304 (+ (+ (+ (+ ?x58777 ?x58779) ?x58781) ?x58783) (* (* 2.0 l_0_12_16) l_0_12_29))))
 (let ((?x36225 (- (+ (- (- (- (+ (+ ?x36304 ?x59516) ?x59518) ?x58785) ?x58787) ?x58789) ?x59520) ?x58791)))
 (let ((?x36238 (- (- (+ (+ ?x36225 ?x59530) ?x59536) (* (* 2.0 l_0_12_223) l_0_12_232)) (* (* 2.0 l_0_12_224) l_0_12_233))))
 (let ((?x36079 (- (- ?x36238 (* (* 2.0 l_0_12_225) l_0_12_234)) (* (* 2.0 l_0_12_226) l_0_12_235))))
 (let ((?x61548 (- (- (- (+ (+ (+ (+ ?x36079 ?x60448) ?x60450) ?x60452) ?x60454) ?x61543) ?x61545) ?x61547)))
 (let ((?x61558 (- (- (- (- (- (- (- ?x61548 ?x61549) ?x61551) ?x61553) ?x59538) ?x59540) ?x59542) ?x59544)))
 (= (- (- ?x61558 ?x59546) ?x59548) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59664 (* l_0_12_64 l_0_12_64)))
 (let ((?x59662 (* l_0_12_63 l_0_12_63)))
 (let ((?x59660 (* l_0_12_62 l_0_12_62)))
 (let ((?x59658 (* l_0_12_61 l_0_12_61)))
 (let ((?x59656 (* l_0_12_60 l_0_12_60)))
 (let ((?x59654 (* l_0_12_59 l_0_12_59)))
 (let ((?x59652 (* l_0_12_58 l_0_12_58)))
 (let ((?x61569 (* l_0_12_316 l_0_12_316)))
 (let ((?x61567 (* l_0_12_315 l_0_12_315)))
 (let ((?x61565 (* l_0_12_314 l_0_12_314)))
 (let ((?x61563 (* l_0_12_313 l_0_12_313)))
 (let ((?x36358 (* l_0_12_312 l_0_12_312)))
 (let ((?x36366 (* l_0_12_311 l_0_12_311)))
 (let ((?x36401 (* l_0_12_310 l_0_12_310)))
 (let ((?x59650 (* l_0_12_28 l_0_12_28)))
 (let ((?x59648 (* l_0_12_27 l_0_12_27)))
 (let ((?x61310 (* 2.0 l_0_12_262)))
 (let ((?x61405 (* ?x61310 l_0_12_277)))
 (let ((?x61307 (* 2.0 l_0_12_261)))
 (let ((?x61402 (* ?x61307 l_0_12_276)))
 (let ((?x61304 (* 2.0 l_0_12_260)))
 (let ((?x61399 (* ?x61304 l_0_12_275)))
 (let ((?x59646 (* l_0_12_26 l_0_12_26)))
 (let ((?x35342 (* 2.0 l_0_12_259)))
 (let ((?x61396 (* ?x35342 l_0_12_274)))
 (let ((?x59644 (* l_0_12_25 l_0_12_25)))
 (let ((?x59642 (* l_0_12_24 l_0_12_24)))
 (let ((?x36573 (+ (+ (+ (* l_0_12_22 l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x59642) ?x59644)))
 (let ((?x36491 (+ (+ (- (- (- (+ (- ?x36573 ?x61396) ?x59646) ?x61399) ?x61402) ?x61405) ?x59648) ?x59650)))
 (let ((?x61570 (- (- (- (- (- (- (- ?x36491 ?x36401) ?x36366) ?x36358) ?x61563) ?x61565) ?x61567) ?x61569)))
 (let ((?x61577 (- (- (- (- (- (- (- ?x61570 ?x59652) ?x59654) ?x59656) ?x59658) ?x59660) ?x59662) ?x59664)))
 (= ?x61577 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x59822 (* (* 2.0 l_0_12_64) l_0_12_71)))
 (let ((?x59819 (* (* 2.0 l_0_12_63) l_0_12_70)))
 (let ((?x59816 (* (* 2.0 l_0_12_62) l_0_12_69)))
 (let ((?x59813 (* (* 2.0 l_0_12_61) l_0_12_68)))
 (let ((?x59810 (* (* 2.0 l_0_12_60) l_0_12_67)))
 (let ((?x59807 (* (* 2.0 l_0_12_59) l_0_12_66)))
 (let ((?x59804 (* (* 2.0 l_0_12_58) l_0_12_65)))
 (let ((?x61590 (* (* 2.0 l_0_12_316) l_0_12_323)))
 (let ((?x61587 (* (* 2.0 l_0_12_315) l_0_12_322)))
 (let ((?x61584 (* (* 2.0 l_0_12_314) l_0_12_321)))
 (let ((?x61581 (* (* 2.0 l_0_12_313) l_0_12_320)))
 (let ((?x36658 (* (* 2.0 l_0_12_312) l_0_12_319)))
 (let ((?x36679 (* (* 2.0 l_0_12_311) l_0_12_318)))
 (let ((?x36678 (* (* 2.0 l_0_12_310) l_0_12_317)))
 (let ((?x59801 (* (* 2.0 l_0_12_28) l_0_12_35)))
 (let ((?x59798 (* (* 2.0 l_0_12_27) l_0_12_34)))
 (let ((?x61310 (* 2.0 l_0_12_262)))
 (let ((?x61443 (* ?x61310 l_0_12_284)))
 (let ((?x61307 (* 2.0 l_0_12_261)))
 (let ((?x35728 (* ?x61307 l_0_12_283)))
 (let ((?x61304 (* 2.0 l_0_12_260)))
 (let ((?x35734 (* ?x61304 l_0_12_282)))
 (let ((?x59795 (* (* 2.0 l_0_12_26) l_0_12_33)))
 (let ((?x35342 (* 2.0 l_0_12_259)))
 (let ((?x35744 (* ?x35342 l_0_12_281)))
 (let ((?x59792 (* (* 2.0 l_0_12_25) l_0_12_32)))
 (let ((?x58393 (* 2.0 l_0_12_24)))
 (let ((?x59789 (* ?x58393 l_0_12_31)))
 (let ((?x58071 (* 2.0 l_0_12_23)))
 (let ((?x59787 (* ?x58071 l_0_12_30)))
 (let ((?x58388 (* 2.0 l_0_12_22)))
 (let ((?x59785 (* ?x58388 l_0_12_29)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x30785 (* ?x57763 l_0_12_152)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x60812 (* ?x57903 l_0_12_151)))
 (let ((?x36746 (+ (* (* 1.0 l_0_12_110) l_0_12_115) (* (* 1.0 l_0_12_111) l_0_12_116))))
 (let ((?x36770 (- (+ (- (- ?x36746 ?x60812) ?x30785) ?x59785) (* (* 2.0 l_0_12_223) l_0_12_238))))
 (let ((?x36769 (- (- ?x36770 (* (* 2.0 l_0_12_224) l_0_12_239)) (* (* 2.0 l_0_12_225) l_0_12_240))))
 (let ((?x31858 (+ (+ (+ (- ?x36769 (* (* 2.0 l_0_12_226) l_0_12_241)) ?x59787) ?x59789) ?x59792)))
 (let ((?x36666 (+ (+ (- (- (- (+ (- ?x31858 ?x35744) ?x59795) ?x35734) ?x35728) ?x61443) ?x59798) ?x59801)))
 (let ((?x61591 (- (- (- (- (- (- (- ?x36666 ?x36678) ?x36679) ?x36658) ?x61581) ?x61584) ?x61587) ?x61590)))
 (let ((?x61598 (- (- (- (- (- (- (- ?x61591 ?x59804) ?x59807) ?x59810) ?x59813) ?x59816) ?x59819) ?x59822)))
 (let ((?x61602 (- (- ?x61598 (* (* 1.0 l_0_12_74) l_0_12_79)) (* (* 1.0 l_0_12_75) l_0_12_80))))
 (= ?x61602 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59981 (* l_0_12_72 l_0_12_72)))
 (let ((?x59979 (* l_0_12_71 l_0_12_71)))
 (let ((?x59977 (* l_0_12_70 l_0_12_70)))
 (let ((?x59975 (* l_0_12_69 l_0_12_69)))
 (let ((?x59973 (* l_0_12_68 l_0_12_68)))
 (let ((?x59971 (* l_0_12_67 l_0_12_67)))
 (let ((?x59969 (* l_0_12_66 l_0_12_66)))
 (let ((?x59967 (* l_0_12_65 l_0_12_65)))
 (let ((?x59965 (* l_0_12_36 l_0_12_36)))
 (let ((?x59963 (* l_0_12_35 l_0_12_35)))
 (let ((?x59961 (* l_0_12_34 l_0_12_34)))
 (let ((?x59959 (* l_0_12_33 l_0_12_33)))
 (let ((?x61621 (* l_0_12_324 l_0_12_324)))
 (let ((?x36896 (* l_0_12_323 l_0_12_323)))
 (let ((?x36880 (* l_0_12_322 l_0_12_322)))
 (let ((?x36868 (* l_0_12_321 l_0_12_321)))
 (let ((?x36856 (* l_0_12_320 l_0_12_320)))
 (let ((?x59957 (* l_0_12_32 l_0_12_32)))
 (let ((?x36839 (* l_0_12_319 l_0_12_319)))
 (let ((?x37041 (* l_0_12_318 l_0_12_318)))
 (let ((?x37074 (* l_0_12_317 l_0_12_317)))
 (let ((?x59955 (* l_0_12_31 l_0_12_31)))
 (let ((?x59953 (* l_0_12_30 l_0_12_30)))
 (let ((?x59951 (* l_0_12_29 l_0_12_29)))
 (let ((?x37111 (- (* (* (- 2.0) l_0_12_223) l_0_12_245) (* (* 2.0 l_0_12_224) l_0_12_246))))
 (let ((?x37075 (- (- ?x37111 (* (* 2.0 l_0_12_225) l_0_12_247)) (* (* 2.0 l_0_12_226) l_0_12_248))))
 (let ((?x36850 (+ (- (- (- (+ (+ (+ ?x37075 ?x59951) ?x59953) ?x59955) ?x37074) ?x37041) ?x36839) ?x59957)))
 (let ((?x61624 (+ (+ (- (- (- (- (- ?x36850 ?x36856) ?x36868) ?x36880) ?x36896) ?x61621) ?x59959) ?x59961)))
 (let ((?x61631 (- (- (- (- (- (+ (+ ?x61624 ?x59963) ?x59965) ?x59967) ?x59969) ?x59971) ?x59973) ?x59975)))
 (= (- (- (- ?x61631 ?x59977) ?x59979) ?x59981) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x57455 (* l_0_12_145 l_0_12_145)))
 (let ((?x37263 (* l_0_12_109 l_0_12_109)))
 (let ((?x37218 (* (/ 1.0 2.0) ?x37263)))
 (= (- (- ?x37218 ?x57455) (* (* (/ 1.0 2.0) l_0_12_73) l_0_12_73)) 0.0)))))
(assert
 (let ((?x61590 (* (* 2.0 l_0_12_316) l_0_12_323)))
 (let ((?x61587 (* (* 2.0 l_0_12_315) l_0_12_322)))
 (let ((?x61584 (* (* 2.0 l_0_12_314) l_0_12_321)))
 (let ((?x61581 (* (* 2.0 l_0_12_313) l_0_12_320)))
 (let ((?x36658 (* (* 2.0 l_0_12_312) l_0_12_319)))
 (let ((?x36679 (* (* 2.0 l_0_12_311) l_0_12_318)))
 (let ((?x36678 (* (* 2.0 l_0_12_310) l_0_12_317)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x61686 (* ?x60227 l_0_12_281)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57486 (* ?x57485 l_0_12_146)))
 (let ((?x37238 (+ (* (* 2.0 l_0_12_100) l_0_12_107) (* (* 2.0 l_0_12_101) l_0_12_94))))
 (let ((?x37228 (+ (+ ?x37238 (* (* 2.0 l_0_12_102) l_0_12_95)) (* (* 2.0 l_0_12_103) l_0_12_96))))
 (let ((?x61656 (+ (+ ?x37228 (* (* 2.0 l_0_12_104) l_0_12_97)) (* (* 2.0 l_0_12_105) l_0_12_98))))
 (let ((?x61661 (+ (+ ?x61656 (* (* 2.0 l_0_12_106) l_0_12_99)) (* (* 1.0 l_0_12_109) l_0_12_110))))
 (let ((?x61667 (- (- ?x61661 (* (* 2.0 l_0_12_130) l_0_12_137)) (* (* 2.0 l_0_12_131) l_0_12_138))))
 (let ((?x61673 (- (- ?x61667 (* (* 2.0 l_0_12_132) l_0_12_139)) (* (* 2.0 l_0_12_133) l_0_12_140))))
 (let ((?x61679 (- (- ?x61673 (* (* 2.0 l_0_12_134) l_0_12_141)) (* (* 2.0 l_0_12_135) l_0_12_142))))
 (let ((?x61685 (- (- (- ?x61679 (* (* 2.0 l_0_12_136) l_0_12_143)) ?x57486) (* (* 2.0 l_0_12_217) l_0_12_238))))
 (let ((?x61693 (- (- (- (- (- (- (- ?x61685 ?x61686) ?x36678) ?x36679) ?x36658) ?x61581) ?x61584) ?x61587)))
 (= (- (- ?x61693 ?x61590) (* (* 1.0 l_0_12_73) l_0_12_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57558 (* ?x57485 l_0_12_151)))
 (let ((?x61737 (- (- (* (* 1.0 l_0_12_109) l_0_12_115) ?x57558) (* (* 1.0 l_0_12_73) l_0_12_79))))
 (= ?x61737 0.0)))))
(assert
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57583 (* ?x57485 l_0_12_155)))
 (let ((?x61750 (- (- (* (* 1.0 l_0_12_109) l_0_12_119) ?x57583) (* (* 1.0 l_0_12_73) l_0_12_83))))
 (= ?x61750 0.0)))))
(assert
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57601 (* ?x57485 l_0_12_160)))
 (let ((?x61763 (- (- (* (* 1.0 l_0_12_109) l_0_12_124) ?x57601) (* (* 1.0 l_0_12_73) l_0_12_88))))
 (= ?x61763 0.0)))))
(assert
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57630 (* ?x57485 l_0_12_166)))
 (let ((?x61772 (- (- (* (* 1.0 l_0_12_109) l_0_12_130) ?x57630) (* (* 1.0 l_0_12_73) l_0_12_94))))
 (= ?x61772 0.0)))))
(assert
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57662 (* ?x57485 l_0_12_173)))
 (let ((?x61783 (+ (* (* (- 1.0) l_0_12_101) l_0_12_73) (* (* 1.0 l_0_12_109) l_0_12_137))))
 (= (- ?x61783 ?x57662) 0.0)))))
(assert
 (let ((?x61845 (* (* 2.0 l_0_12_280) l_0_12_287)))
 (let ((?x61842 (* (* 2.0 l_0_12_279) l_0_12_286)))
 (let ((?x61839 (* (* 2.0 l_0_12_278) l_0_12_285)))
 (let ((?x61836 (* (* 2.0 l_0_12_277) l_0_12_284)))
 (let ((?x61833 (* (* 2.0 l_0_12_276) l_0_12_283)))
 (let ((?x61830 (* (* 2.0 l_0_12_275) l_0_12_282)))
 (let ((?x61827 (* (* 2.0 l_0_12_274) l_0_12_281)))
 (let ((?x61823 (* 2.0 l_0_12_267)))
 (let ((?x61824 (* ?x61823 l_0_12_285)))
 (let ((?x61820 (* 2.0 l_0_12_266)))
 (let ((?x61821 (* ?x61820 l_0_12_284)))
 (let ((?x61817 (* 2.0 l_0_12_265)))
 (let ((?x61818 (* ?x61817 l_0_12_283)))
 (let ((?x61814 (* 2.0 l_0_12_264)))
 (let ((?x61815 (* ?x61814 l_0_12_282)))
 (let ((?x61811 (* 2.0 l_0_12_263)))
 (let ((?x61812 (* ?x61811 l_0_12_281)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x57906 (* ?x57763 l_0_12_156)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x57904 (* ?x57903 l_0_12_155)))
 (let ((?x61793 (+ (* (* 1.0 l_0_12_110) l_0_12_119) (* (* 1.0 l_0_12_111) l_0_12_120))))
 (let ((?x61801 (- (- (- (- ?x61793 ?x57904) ?x57906) (* (* 2.0 l_0_12_227) l_0_12_238)) (* (* 2.0 l_0_12_228) l_0_12_239))))
 (let ((?x61807 (- (- ?x61801 (* (* 2.0 l_0_12_229) l_0_12_240)) (* (* 2.0 l_0_12_230) l_0_12_241))))
 (let ((?x61819 (- (- (- (- ?x61807 (* (* 2.0 l_0_12_231) l_0_12_242)) ?x61812) ?x61815) ?x61818)))
 (let ((?x61840 (+ (+ (+ (+ (+ (- (- ?x61819 ?x61821) ?x61824) ?x61827) ?x61830) ?x61833) ?x61836) ?x61839)))
 (let ((?x61850 (- (- (+ (+ ?x61840 ?x61842) ?x61845) (* (* 1.0 l_0_12_74) l_0_12_83)) (* (* 1.0 l_0_12_75) l_0_12_84))))
 (= ?x61850 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x61590 (* (* 2.0 l_0_12_316) l_0_12_323)))
 (let ((?x61587 (* (* 2.0 l_0_12_315) l_0_12_322)))
 (let ((?x61584 (* (* 2.0 l_0_12_314) l_0_12_321)))
 (let ((?x61581 (* (* 2.0 l_0_12_313) l_0_12_320)))
 (let ((?x36658 (* (* 2.0 l_0_12_312) l_0_12_319)))
 (let ((?x36679 (* (* 2.0 l_0_12_311) l_0_12_318)))
 (let ((?x36678 (* (* 2.0 l_0_12_310) l_0_12_317)))
 (let ((?x61965 (* 2.0 l_0_12_273)))
 (let ((?x61966 (* ?x61965 l_0_12_286)))
 (let ((?x61962 (* 2.0 l_0_12_272)))
 (let ((?x61963 (* ?x61962 l_0_12_285)))
 (let ((?x61959 (* 2.0 l_0_12_271)))
 (let ((?x61960 (* ?x61959 l_0_12_284)))
 (let ((?x61956 (* 2.0 l_0_12_270)))
 (let ((?x61957 (* ?x61956 l_0_12_283)))
 (let ((?x61953 (* 2.0 l_0_12_269)))
 (let ((?x61954 (* ?x61953 l_0_12_282)))
 (let ((?x61950 (* 2.0 l_0_12_268)))
 (let ((?x61951 (* ?x61950 l_0_12_281)))
 (let ((?x59783 (* (* 2.0 l_0_12_208) l_0_12_215)))
 (let ((?x59780 (* (* 2.0 l_0_12_207) l_0_12_214)))
 (let ((?x59777 (* (* 2.0 l_0_12_206) l_0_12_213)))
 (let ((?x59774 (* (* 2.0 l_0_12_205) l_0_12_212)))
 (let ((?x59771 (* (* 2.0 l_0_12_204) l_0_12_211)))
 (let ((?x59768 (* (* 2.0 l_0_12_203) l_0_12_210)))
 (let ((?x59765 (* (* 2.0 l_0_12_202) l_0_12_209)))
 (let ((?x59762 (* (* 2.0 l_0_12_172) l_0_12_179)))
 (let ((?x59759 (* (* 2.0 l_0_12_171) l_0_12_178)))
 (let ((?x59756 (* (* 2.0 l_0_12_170) l_0_12_177)))
 (let ((?x59753 (* (* 2.0 l_0_12_169) l_0_12_176)))
 (let ((?x59750 (* (* 2.0 l_0_12_168) l_0_12_175)))
 (let ((?x59747 (* (* 2.0 l_0_12_167) l_0_12_174)))
 (let ((?x59744 (* (* 2.0 l_0_12_166) l_0_12_173)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x57966 (* ?x57763 l_0_12_161)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x61915 (* ?x57903 l_0_12_160)))
 (let ((?x61914 (+ (* (* 1.0 l_0_12_110) l_0_12_124) (* (* 1.0 l_0_12_111) l_0_12_125))))
 (let ((?x61922 (+ (+ (+ (+ (+ (- (- ?x61914 ?x61915) ?x57966) ?x59744) ?x59747) ?x59750) ?x59753) ?x59756)))
 (let ((?x61929 (- (- (- (- (- (+ (+ ?x61922 ?x59759) ?x59762) ?x59765) ?x59768) ?x59771) ?x59774) ?x59777)))
 (let ((?x61937 (- (- (- (- ?x61929 ?x59780) ?x59783) (* (* 2.0 l_0_12_232) l_0_12_238)) (* (* 2.0 l_0_12_233) l_0_12_239))))
 (let ((?x61943 (- (- ?x61937 (* (* 2.0 l_0_12_234) l_0_12_240)) (* (* 2.0 l_0_12_235) l_0_12_241))))
 (let ((?x61949 (- (- ?x61943 (* (* 2.0 l_0_12_236) l_0_12_242)) (* (* 2.0 l_0_12_237) l_0_12_243))))
 (let ((?x61968 (+ (- (- (- (- (- (- ?x61949 ?x61951) ?x61954) ?x61957) ?x61960) ?x61963) ?x61966) ?x36678)))
 (let ((?x61976 (- (+ (+ (+ (+ (+ (+ ?x61968 ?x36679) ?x36658) ?x61581) ?x61584) ?x61587) ?x61590) (* (* 1.0 l_0_12_74) l_0_12_88))))
 (= (- ?x61976 (* (* 1.0 l_0_12_75) l_0_12_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61845 (* (* 2.0 l_0_12_280) l_0_12_287)))
 (let ((?x61842 (* (* 2.0 l_0_12_279) l_0_12_286)))
 (let ((?x61839 (* (* 2.0 l_0_12_278) l_0_12_285)))
 (let ((?x61836 (* (* 2.0 l_0_12_277) l_0_12_284)))
 (let ((?x61833 (* (* 2.0 l_0_12_276) l_0_12_283)))
 (let ((?x61830 (* (* 2.0 l_0_12_275) l_0_12_282)))
 (let ((?x61827 (* (* 2.0 l_0_12_274) l_0_12_281)))
 (let ((?x62012 (* l_0_12_244 l_0_12_244)))
 (let ((?x62010 (* l_0_12_243 l_0_12_243)))
 (let ((?x62008 (* l_0_12_242 l_0_12_242)))
 (let ((?x62006 (* l_0_12_241 l_0_12_241)))
 (let ((?x62004 (* l_0_12_240 l_0_12_240)))
 (let ((?x62002 (* l_0_12_239 l_0_12_239)))
 (let ((?x62000 (* l_0_12_238 l_0_12_238)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x58057 (* ?x57763 l_0_12_167)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x58054 (* ?x57903 l_0_12_166)))
 (let ((?x61997 (+ (* (* 1.0 l_0_12_110) l_0_12_130) (* (* 1.0 l_0_12_111) l_0_12_131))))
 (let ((?x62009 (- (- (- (- (- (- (- ?x61997 ?x58054) ?x58057) ?x62000) ?x62002) ?x62004) ?x62006) ?x62008)))
 (let ((?x62018 (- (- (- (- (- (- (- ?x62009 ?x62010) ?x62012) ?x61827) ?x61830) ?x61833) ?x61836) ?x61839)))
 (let ((?x62024 (- (- (- (- ?x62018 ?x61842) ?x61845) (* (* 1.0 l_0_12_74) l_0_12_94)) (* (* 1.0 l_0_12_75) l_0_12_95))))
 (= ?x62024 0.0))))))))))))))))))))))))
(assert
 (let ((?x62077 (* l_0_12_288 l_0_12_288)))
 (let ((?x62075 (* l_0_12_287 l_0_12_287)))
 (let ((?x62073 (* l_0_12_286 l_0_12_286)))
 (let ((?x62071 (* l_0_12_285 l_0_12_285)))
 (let ((?x62069 (* l_0_12_284 l_0_12_284)))
 (let ((?x62067 (* l_0_12_283 l_0_12_283)))
 (let ((?x62065 (* l_0_12_282 l_0_12_282)))
 (let ((?x62063 (* l_0_12_281 l_0_12_281)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x31409 (* ?x57763 l_0_12_174)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x37831 (* ?x57903 l_0_12_173)))
 (let ((?x37839 (- (* (* (- 1.0) l_0_12_101) l_0_12_74) (* (* 1.0 l_0_12_102) l_0_12_75))))
 (let ((?x37830 (+ (+ ?x37839 (* (* 1.0 l_0_12_110) l_0_12_137)) (* (* 1.0 l_0_12_111) l_0_12_138))))
 (let ((?x62047 (- (- (- (- ?x37830 ?x37831) ?x31409) (* (* 2.0 l_0_12_238) l_0_12_245)) (* (* 2.0 l_0_12_239) l_0_12_246))))
 (let ((?x62053 (- (- ?x62047 (* (* 2.0 l_0_12_240) l_0_12_247)) (* (* 2.0 l_0_12_241) l_0_12_248))))
 (let ((?x62059 (- (- ?x62053 (* (* 2.0 l_0_12_242) l_0_12_249)) (* (* 2.0 l_0_12_243) l_0_12_250))))
 (let ((?x62068 (- (- (- (- ?x62059 (* (* 2.0 l_0_12_244) l_0_12_251)) ?x62063) ?x62065) ?x62067)))
 (= (- (- (- (- (- ?x62068 ?x62069) ?x62071) ?x62073) ?x62075) ?x62077) 0.0))))))))))))))))))))
(assert
 (let ((?x32087 (* l_0_12_154 l_0_12_154)))
 (let ((?x32088 (* l_0_12_153 l_0_12_153)))
 (let ((?x32083 (* l_0_12_152 l_0_12_152)))
 (let ((?x32077 (* l_0_12_151 l_0_12_151)))
 (let ((?x62116 (+ (* (/ 1.0 2.0) (* l_0_12_115 l_0_12_115)) (* (/ 1.0 2.0) (* l_0_12_116 l_0_12_116)))))
 (let ((?x62120 (+ (+ ?x62116 (* (/ 1.0 2.0) (* l_0_12_117 l_0_12_117))) (* (/ 1.0 2.0) (* l_0_12_118 l_0_12_118)))))
 (let ((?x62127 (- (- (- (- (- ?x62120 ?x32077) ?x32083) ?x32088) ?x32087) (* (* (/ 1.0 2.0) l_0_12_79) l_0_12_79))))
 (let ((?x62133 (- (- ?x62127 (* (* (/ 1.0 2.0) l_0_12_80) l_0_12_80)) (* (* (/ 1.0 2.0) l_0_12_81) l_0_12_81))))
 (= (- ?x62133 (* (* (/ 1.0 2.0) l_0_12_82) l_0_12_82)) 0.0))))))))))
(assert
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58523 (* ?x58522 l_0_12_158)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58520 (* ?x58519 l_0_12_157)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58517 (* ?x58516 l_0_12_156)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58514 (* ?x58513 l_0_12_155)))
 (let ((?x62160 (+ (* (* 1.0 l_0_12_115) l_0_12_119) (* (* 1.0 l_0_12_116) l_0_12_120))))
 (let ((?x62166 (+ (+ ?x62160 (* (* 1.0 l_0_12_117) l_0_12_121)) (* (* 1.0 l_0_12_118) l_0_12_122))))
 (let ((?x62173 (- (- (- (- (- ?x62166 ?x58514) ?x58517) ?x58520) ?x58523) (* (* 1.0 l_0_12_79) l_0_12_83))))
 (let ((?x62179 (- (- ?x62173 (* (* 1.0 l_0_12_80) l_0_12_84)) (* (* 1.0 l_0_12_81) l_0_12_85))))
 (= (- ?x62179 (* (* 1.0 l_0_12_82) l_0_12_86)) 0.0))))))))))))))
(assert
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58587 (* ?x58522 l_0_12_163)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58583 (* ?x58519 l_0_12_162)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58579 (* ?x58516 l_0_12_161)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58575 (* ?x58513 l_0_12_160)))
 (let ((?x38019 (+ (* (* 1.0 l_0_12_115) l_0_12_124) (* (* 1.0 l_0_12_116) l_0_12_125))))
 (let ((?x62201 (+ (+ ?x38019 (* (* 1.0 l_0_12_117) l_0_12_126)) (* (* 1.0 l_0_12_118) l_0_12_127))))
 (let ((?x62207 (- (- (- (- (- ?x62201 ?x58575) ?x58579) ?x58583) ?x58587) (* (* 1.0 l_0_12_79) l_0_12_88))))
 (let ((?x62211 (- (- ?x62207 (* (* 1.0 l_0_12_80) l_0_12_89)) (* (* 1.0 l_0_12_81) l_0_12_90))))
 (= (- ?x62211 (* (* 1.0 l_0_12_82) l_0_12_91)) 0.0))))))))))))))
(assert
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58671 (* ?x58522 l_0_12_169)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58669 (* ?x58519 l_0_12_168)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58667 (* ?x58516 l_0_12_167)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58665 (* ?x58513 l_0_12_166)))
 (let ((?x62232 (+ (* (* 1.0 l_0_12_115) l_0_12_130) (* (* 1.0 l_0_12_116) l_0_12_131))))
 (let ((?x62236 (+ (+ ?x62232 (* (* 1.0 l_0_12_117) l_0_12_132)) (* (* 1.0 l_0_12_118) l_0_12_133))))
 (let ((?x62242 (- (- (- (- (- ?x62236 ?x58665) ?x58667) ?x58669) ?x58671) (* (* 1.0 l_0_12_79) l_0_12_94))))
 (let ((?x62246 (- (- ?x62242 (* (* 1.0 l_0_12_80) l_0_12_95)) (* (* 1.0 l_0_12_81) l_0_12_96))))
 (= (- ?x62246 (* (* 1.0 l_0_12_82) l_0_12_97)) 0.0))))))))))))))
(assert
 (let ((?x58522 (* 2.0 l_0_12_154)))
 (let ((?x58783 (* ?x58522 l_0_12_176)))
 (let ((?x58519 (* 2.0 l_0_12_153)))
 (let ((?x58781 (* ?x58519 l_0_12_175)))
 (let ((?x58516 (* 2.0 l_0_12_152)))
 (let ((?x58779 (* ?x58516 l_0_12_174)))
 (let ((?x58513 (* 2.0 l_0_12_151)))
 (let ((?x58777 (* ?x58513 l_0_12_173)))
 (let ((?x62277 (- (* (* (- 1.0) l_0_12_101) l_0_12_79) (* (* 1.0 l_0_12_102) l_0_12_80))))
 (let ((?x62282 (- (- ?x62277 (* (* 1.0 l_0_12_103) l_0_12_81)) (* (* 1.0 l_0_12_104) l_0_12_82))))
 (let ((?x62286 (+ (+ ?x62282 (* (* 1.0 l_0_12_115) l_0_12_137)) (* (* 1.0 l_0_12_116) l_0_12_138))))
 (let ((?x62290 (+ (+ ?x62286 (* (* 1.0 l_0_12_117) l_0_12_139)) (* (* 1.0 l_0_12_118) l_0_12_140))))
 (= (- (- (- (- ?x62290 ?x58777) ?x58779) ?x58781) ?x58783) 0.0))))))))))))))
(assert
 (let ((?x58870 (* l_0_12_159 l_0_12_159)))
 (let ((?x58868 (* l_0_12_158 l_0_12_158)))
 (let ((?x58866 (* l_0_12_157 l_0_12_157)))
 (let ((?x58864 (* l_0_12_156 l_0_12_156)))
 (let ((?x58862 (* l_0_12_155 l_0_12_155)))
 (let ((?x62319 (+ (* (/ 1.0 2.0) (* l_0_12_119 l_0_12_119)) (* (/ 1.0 2.0) (* l_0_12_120 l_0_12_120)))))
 (let ((?x62325 (+ (+ ?x62319 (* (/ 1.0 2.0) (* l_0_12_121 l_0_12_121))) (* (/ 1.0 2.0) (* l_0_12_122 l_0_12_122)))))
 (let ((?x62331 (- (- (- (+ ?x62325 (* (/ 1.0 2.0) (* l_0_12_123 l_0_12_123))) ?x58862) ?x58864) ?x58866)))
 (let ((?x62339 (- (- (- (- ?x62331 ?x58868) ?x58870) (* (* (/ 1.0 2.0) l_0_12_83) l_0_12_83)) (* (* (/ 1.0 2.0) l_0_12_84) l_0_12_84))))
 (let ((?x62345 (- (- ?x62339 (* (* (/ 1.0 2.0) l_0_12_85) l_0_12_85)) (* (* (/ 1.0 2.0) l_0_12_86) l_0_12_86))))
 (= (- ?x62345 (* (* (/ 1.0 2.0) l_0_12_87) l_0_12_87)) 0.0))))))))))))
(assert
 (let ((?x58940 (* 2.0 l_0_12_159)))
 (let ((?x58941 (* ?x58940 l_0_12_164)))
 (let ((?x58937 (* 2.0 l_0_12_158)))
 (let ((?x58938 (* ?x58937 l_0_12_163)))
 (let ((?x58934 (* 2.0 l_0_12_157)))
 (let ((?x58935 (* ?x58934 l_0_12_162)))
 (let ((?x58931 (* 2.0 l_0_12_156)))
 (let ((?x58932 (* ?x58931 l_0_12_161)))
 (let ((?x58928 (* 2.0 l_0_12_155)))
 (let ((?x58929 (* ?x58928 l_0_12_160)))
 (let ((?x62363 (+ (* (* 1.0 l_0_12_119) l_0_12_124) (* (* 1.0 l_0_12_120) l_0_12_125))))
 (let ((?x62369 (+ (+ ?x62363 (* (* 1.0 l_0_12_121) l_0_12_126)) (* (* 1.0 l_0_12_122) l_0_12_127))))
 (let ((?x62375 (- (- (- (+ ?x62369 (* (* 1.0 l_0_12_123) l_0_12_128)) ?x58929) ?x58932) ?x58935)))
 (let ((?x62383 (- (- (- (- ?x62375 ?x58938) ?x58941) (* (* 1.0 l_0_12_83) l_0_12_88)) (* (* 1.0 l_0_12_84) l_0_12_89))))
 (let ((?x62389 (- (- ?x62383 (* (* 1.0 l_0_12_85) l_0_12_90)) (* (* 1.0 l_0_12_86) l_0_12_91))))
 (= (- ?x62389 (* (* 1.0 l_0_12_87) l_0_12_92)) 0.0)))))))))))))))))
(assert
 (let ((?x58940 (* 2.0 l_0_12_159)))
 (let ((?x59052 (* ?x58940 l_0_12_170)))
 (let ((?x58937 (* 2.0 l_0_12_158)))
 (let ((?x59050 (* ?x58937 l_0_12_169)))
 (let ((?x58934 (* 2.0 l_0_12_157)))
 (let ((?x59048 (* ?x58934 l_0_12_168)))
 (let ((?x58931 (* 2.0 l_0_12_156)))
 (let ((?x59046 (* ?x58931 l_0_12_167)))
 (let ((?x58928 (* 2.0 l_0_12_155)))
 (let ((?x59044 (* ?x58928 l_0_12_166)))
 (let ((?x62414 (+ (* (* 1.0 l_0_12_119) l_0_12_130) (* (* 1.0 l_0_12_120) l_0_12_131))))
 (let ((?x62418 (+ (+ ?x62414 (* (* 1.0 l_0_12_121) l_0_12_132)) (* (* 1.0 l_0_12_122) l_0_12_133))))
 (let ((?x62423 (- (- (- (+ ?x62418 (* (* 1.0 l_0_12_123) l_0_12_134)) ?x59044) ?x59046) ?x59048)))
 (let ((?x62429 (- (- (- (- ?x62423 ?x59050) ?x59052) (* (* 1.0 l_0_12_83) l_0_12_94)) (* (* 1.0 l_0_12_84) l_0_12_95))))
 (let ((?x62433 (- (- ?x62429 (* (* 1.0 l_0_12_85) l_0_12_96)) (* (* 1.0 l_0_12_86) l_0_12_97))))
 (= (- ?x62433 (* (* 1.0 l_0_12_87) l_0_12_98)) 0.0)))))))))))))))))
(assert
 (let ((?x58940 (* 2.0 l_0_12_159)))
 (let ((?x59154 (* ?x58940 l_0_12_177)))
 (let ((?x58937 (* 2.0 l_0_12_158)))
 (let ((?x59152 (* ?x58937 l_0_12_176)))
 (let ((?x58934 (* 2.0 l_0_12_157)))
 (let ((?x59150 (* ?x58934 l_0_12_175)))
 (let ((?x58931 (* 2.0 l_0_12_156)))
 (let ((?x59148 (* ?x58931 l_0_12_174)))
 (let ((?x58928 (* 2.0 l_0_12_155)))
 (let ((?x59146 (* ?x58928 l_0_12_173)))
 (let ((?x62450 (- (* (* (- 1.0) l_0_12_101) l_0_12_83) (* (* 1.0 l_0_12_102) l_0_12_84))))
 (let ((?x62454 (- (- ?x62450 (* (* 1.0 l_0_12_103) l_0_12_85)) (* (* 1.0 l_0_12_104) l_0_12_86))))
 (let ((?x62459 (+ (- ?x62454 (* (* 1.0 l_0_12_105) l_0_12_87)) (* (* 1.0 l_0_12_119) l_0_12_137))))
 (let ((?x62463 (+ (+ ?x62459 (* (* 1.0 l_0_12_120) l_0_12_138)) (* (* 1.0 l_0_12_121) l_0_12_139))))
 (let ((?x62467 (+ (+ ?x62463 (* (* 1.0 l_0_12_122) l_0_12_140)) (* (* 1.0 l_0_12_123) l_0_12_141))))
 (= (- (- (- (- (- ?x62467 ?x59146) ?x59148) ?x59150) ?x59152) ?x59154) 0.0)))))))))))))))))
(assert
 (let ((?x59242 (* l_0_12_165 l_0_12_165)))
 (let ((?x59227 (* l_0_12_164 l_0_12_164)))
 (let ((?x59224 (* l_0_12_163 l_0_12_163)))
 (let ((?x59220 (* l_0_12_162 l_0_12_162)))
 (let ((?x59216 (* l_0_12_161 l_0_12_161)))
 (let ((?x59212 (* l_0_12_160 l_0_12_160)))
 (let ((?x62506 (+ (* (/ 1.0 2.0) (* l_0_12_124 l_0_12_124)) (* (/ 1.0 2.0) (* l_0_12_125 l_0_12_125)))))
 (let ((?x62512 (+ (+ ?x62506 (* (/ 1.0 2.0) (* l_0_12_126 l_0_12_126))) (* (/ 1.0 2.0) (* l_0_12_127 l_0_12_127)))))
 (let ((?x62518 (+ (+ ?x62512 (* (/ 1.0 2.0) (* l_0_12_128 l_0_12_128))) (* (/ 1.0 2.0) (* l_0_12_129 l_0_12_129)))))
 (let ((?x62527 (- (- (- (- (- (- (- ?x62518 ?x59212) ?x59216) ?x59220) ?x59224) ?x59227) ?x59242) (* (* (/ 1.0 2.0) l_0_12_88) l_0_12_88))))
 (let ((?x62533 (- (- ?x62527 (* (* (/ 1.0 2.0) l_0_12_89) l_0_12_89)) (* (* (/ 1.0 2.0) l_0_12_90) l_0_12_90))))
 (let ((?x62539 (- (- ?x62533 (* (* (/ 1.0 2.0) l_0_12_91) l_0_12_91)) (* (* (/ 1.0 2.0) l_0_12_92) l_0_12_92))))
 (= (- ?x62539 (* (* (/ 1.0 2.0) l_0_12_93) l_0_12_93)) 0.0))))))))))))))
(assert
 (let ((?x59349 (* 2.0 l_0_12_165)))
 (let ((?x59350 (* ?x59349 l_0_12_171)))
 (let ((?x59346 (* 2.0 l_0_12_164)))
 (let ((?x59347 (* ?x59346 l_0_12_170)))
 (let ((?x59343 (* 2.0 l_0_12_163)))
 (let ((?x59344 (* ?x59343 l_0_12_169)))
 (let ((?x59340 (* 2.0 l_0_12_162)))
 (let ((?x59341 (* ?x59340 l_0_12_168)))
 (let ((?x59337 (* 2.0 l_0_12_161)))
 (let ((?x59338 (* ?x59337 l_0_12_167)))
 (let ((?x59334 (* 2.0 l_0_12_160)))
 (let ((?x59335 (* ?x59334 l_0_12_166)))
 (let ((?x62562 (+ (* (* 1.0 l_0_12_124) l_0_12_130) (* (* 1.0 l_0_12_125) l_0_12_131))))
 (let ((?x62568 (+ (+ ?x62562 (* (* 1.0 l_0_12_126) l_0_12_132)) (* (* 1.0 l_0_12_127) l_0_12_133))))
 (let ((?x62574 (+ (+ ?x62568 (* (* 1.0 l_0_12_128) l_0_12_134)) (* (* 1.0 l_0_12_129) l_0_12_135))))
 (let ((?x62583 (- (- (- (- (- (- (- ?x62574 ?x59335) ?x59338) ?x59341) ?x59344) ?x59347) ?x59350) (* (* 1.0 l_0_12_88) l_0_12_94))))
 (let ((?x62589 (- (- ?x62583 (* (* 1.0 l_0_12_89) l_0_12_95)) (* (* 1.0 l_0_12_90) l_0_12_96))))
 (let ((?x62595 (- (- ?x62589 (* (* 1.0 l_0_12_91) l_0_12_97)) (* (* 1.0 l_0_12_92) l_0_12_98))))
 (= (- ?x62595 (* (* 1.0 l_0_12_93) l_0_12_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x59349 (* 2.0 l_0_12_165)))
 (let ((?x59514 (* ?x59349 l_0_12_178)))
 (let ((?x59346 (* 2.0 l_0_12_164)))
 (let ((?x59512 (* ?x59346 l_0_12_177)))
 (let ((?x59343 (* 2.0 l_0_12_163)))
 (let ((?x59510 (* ?x59343 l_0_12_176)))
 (let ((?x59340 (* 2.0 l_0_12_162)))
 (let ((?x59508 (* ?x59340 l_0_12_175)))
 (let ((?x59337 (* 2.0 l_0_12_161)))
 (let ((?x59506 (* ?x59337 l_0_12_174)))
 (let ((?x59334 (* 2.0 l_0_12_160)))
 (let ((?x59504 (* ?x59334 l_0_12_173)))
 (let ((?x62632 (- (* (* (- 1.0) l_0_12_101) l_0_12_88) (* (* 1.0 l_0_12_102) l_0_12_89))))
 (let ((?x62636 (- (- ?x62632 (* (* 1.0 l_0_12_103) l_0_12_90)) (* (* 1.0 l_0_12_104) l_0_12_91))))
 (let ((?x62641 (- (- ?x62636 (* (* 1.0 l_0_12_105) l_0_12_92)) (* (* 1.0 l_0_12_106) l_0_12_93))))
 (let ((?x62645 (+ (+ ?x62641 (* (* 1.0 l_0_12_124) l_0_12_137)) (* (* 1.0 l_0_12_125) l_0_12_138))))
 (let ((?x62649 (+ (+ ?x62645 (* (* 1.0 l_0_12_126) l_0_12_139)) (* (* 1.0 l_0_12_127) l_0_12_140))))
 (let ((?x62653 (+ (+ ?x62649 (* (* 1.0 l_0_12_128) l_0_12_141)) (* (* 1.0 l_0_12_129) l_0_12_142))))
 (= (- (- (- (- (- (- ?x62653 ?x59504) ?x59506) ?x59508) ?x59510) ?x59512) ?x59514) 0.0))))))))))))))))))))
(assert
 (let ((?x59622 (* l_0_12_172 l_0_12_172)))
 (let ((?x59620 (* l_0_12_171 l_0_12_171)))
 (let ((?x59618 (* l_0_12_170 l_0_12_170)))
 (let ((?x59616 (* l_0_12_169 l_0_12_169)))
 (let ((?x59614 (* l_0_12_168 l_0_12_168)))
 (let ((?x59612 (* l_0_12_167 l_0_12_167)))
 (let ((?x59610 (* l_0_12_166 l_0_12_166)))
 (let ((?x62690 (+ (* (* (- (/ 1.0 2.0)) l_0_12_100) l_0_12_100) (* (/ 1.0 2.0) (* l_0_12_130 l_0_12_130)))))
 (let ((?x62696 (+ (+ ?x62690 (* (/ 1.0 2.0) (* l_0_12_131 l_0_12_131))) (* (/ 1.0 2.0) (* l_0_12_132 l_0_12_132)))))
 (let ((?x62702 (+ (+ ?x62696 (* (/ 1.0 2.0) (* l_0_12_133 l_0_12_133))) (* (/ 1.0 2.0) (* l_0_12_134 l_0_12_134)))))
 (let ((?x62708 (+ (+ ?x62702 (* (/ 1.0 2.0) (* l_0_12_135 l_0_12_135))) (* (/ 1.0 2.0) (* l_0_12_136 l_0_12_136)))))
 (let ((?x62715 (- (- (- (- (- (- (- ?x62708 ?x59610) ?x59612) ?x59614) ?x59616) ?x59618) ?x59620) ?x59622)))
 (let ((?x62721 (- (- ?x62715 (* (* (/ 1.0 2.0) l_0_12_94) l_0_12_94)) (* (* (/ 1.0 2.0) l_0_12_95) l_0_12_95))))
 (let ((?x62727 (- (- ?x62721 (* (* (/ 1.0 2.0) l_0_12_96) l_0_12_96)) (* (* (/ 1.0 2.0) l_0_12_97) l_0_12_97))))
 (let ((?x62733 (- (- ?x62727 (* (* (/ 1.0 2.0) l_0_12_98) l_0_12_98)) (* (* (/ 1.0 2.0) l_0_12_99) l_0_12_99))))
 (= ?x62733 0.0)))))))))))))))))
(assert
 (let ((?x59762 (* (* 2.0 l_0_12_172) l_0_12_179)))
 (let ((?x59759 (* (* 2.0 l_0_12_171) l_0_12_178)))
 (let ((?x59756 (* (* 2.0 l_0_12_170) l_0_12_177)))
 (let ((?x59753 (* (* 2.0 l_0_12_169) l_0_12_176)))
 (let ((?x59750 (* (* 2.0 l_0_12_168) l_0_12_175)))
 (let ((?x59747 (* (* 2.0 l_0_12_167) l_0_12_174)))
 (let ((?x59744 (* (* 2.0 l_0_12_166) l_0_12_173)))
 (let ((?x62758 (- (* (* (- 1.0) l_0_12_100) l_0_12_107) (* (* 1.0 l_0_12_101) l_0_12_94))))
 (let ((?x62762 (- (- ?x62758 (* (* 1.0 l_0_12_102) l_0_12_95)) (* (* 1.0 l_0_12_103) l_0_12_96))))
 (let ((?x62766 (- (- ?x62762 (* (* 1.0 l_0_12_104) l_0_12_97)) (* (* 1.0 l_0_12_105) l_0_12_98))))
 (let ((?x62771 (+ (- ?x62766 (* (* 1.0 l_0_12_106) l_0_12_99)) (* (* 1.0 l_0_12_130) l_0_12_137))))
 (let ((?x62777 (+ (+ ?x62771 (* (* 1.0 l_0_12_131) l_0_12_138)) (* (* 1.0 l_0_12_132) l_0_12_139))))
 (let ((?x62783 (+ (+ ?x62777 (* (* 1.0 l_0_12_133) l_0_12_140)) (* (* 1.0 l_0_12_134) l_0_12_141))))
 (let ((?x62789 (+ (+ ?x62783 (* (* 1.0 l_0_12_135) l_0_12_142)) (* (* 1.0 l_0_12_136) l_0_12_143))))
 (let ((?x62796 (- (- (- (- (- (- (- ?x62789 ?x59744) ?x59747) ?x59750) ?x59753) ?x59756) ?x59759) ?x59762)))
 (= ?x62796 0.0)))))))))))))))))
(assert
 (let ((?x59933 (* l_0_12_180 l_0_12_180)))
 (let ((?x59931 (* l_0_12_179 l_0_12_179)))
 (let ((?x59929 (* l_0_12_178 l_0_12_178)))
 (let ((?x59927 (* l_0_12_177 l_0_12_177)))
 (let ((?x59906 (* l_0_12_176 l_0_12_176)))
 (let ((?x59902 (* l_0_12_175 l_0_12_175)))
 (let ((?x59898 (* l_0_12_174 l_0_12_174)))
 (let ((?x33274 (* l_0_12_173 l_0_12_173)))
 (let ((?x62834 (- (* (* (- (/ 1.0 2.0)) l_0_12_101) l_0_12_101) (* (* (/ 1.0 2.0) l_0_12_102) l_0_12_102))))
 (let ((?x62840 (- (- ?x62834 (* (* (/ 1.0 2.0) l_0_12_103) l_0_12_103)) (* (* (/ 1.0 2.0) l_0_12_104) l_0_12_104))))
 (let ((?x62846 (- (- ?x62840 (* (* (/ 1.0 2.0) l_0_12_105) l_0_12_105)) (* (* (/ 1.0 2.0) l_0_12_106) l_0_12_106))))
 (let ((?x62852 (- (- ?x62846 (* (* (/ 1.0 2.0) l_0_12_107) l_0_12_107)) (* (* (/ 1.0 2.0) l_0_12_108) l_0_12_108))))
 (let ((?x62858 (+ (+ ?x62852 (* (/ 1.0 2.0) (* l_0_12_137 l_0_12_137))) (* (/ 1.0 2.0) (* l_0_12_138 l_0_12_138)))))
 (let ((?x62864 (+ (+ ?x62858 (* (/ 1.0 2.0) (* l_0_12_139 l_0_12_139))) (* (/ 1.0 2.0) (* l_0_12_140 l_0_12_140)))))
 (let ((?x62870 (+ (+ ?x62864 (* (/ 1.0 2.0) (* l_0_12_141 l_0_12_141))) (* (/ 1.0 2.0) (* l_0_12_142 l_0_12_142)))))
 (let ((?x62876 (+ (+ ?x62870 (* (/ 1.0 2.0) (* l_0_12_143 l_0_12_143))) (* (/ 1.0 2.0) (* l_0_12_144 l_0_12_144)))))
 (let ((?x62883 (- (- (- (- (- (- (- ?x62876 ?x33274) ?x59898) ?x59902) ?x59906) ?x59927) ?x59929) ?x59931)))
 (= (- ?x62883 ?x59933) 0.0)))))))))))))))))))
(assert
 (let ((?x37305 (* l_0_12_73 l_0_12_73)))
 (let ((?x62915 (+ (- (* (- l_0_12_109) l_0_12_109) (* l_0_12_289 l_0_12_289)) ?x37305)))
 (= ?x62915 0.0))))
(assert
 (let ((?x62929 (* l_0_12_433 l_0_12_433)))
 (let ((?x62927 (* l_0_12_397 l_0_12_397)))
 (let ((?x62925 (* l_0_12_361 l_0_12_361)))
 (let ((?x62923 (* l_0_12_325 l_0_12_325)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60059 (* ?x60029 l_0_12_290)))
 (let ((?x62928 (- (- (- (- (* (* (- 2.0) l_0_12_109) l_0_12_110) ?x60059) ?x62923) ?x62925) ?x62927)))
 (= (+ (- ?x62928 ?x62929) (* (* 2.0 l_0_12_73) l_0_12_74)) 0.0)))))))))
(assert
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60124 (* ?x60029 l_0_12_292)))
 (let ((?x62950 (+ (- (* (* (- 2.0) l_0_12_109) l_0_12_112) ?x60124) (* (* 2.0 l_0_12_73) l_0_12_76))))
 (= ?x62950 0.0)))))
(assert
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60230 (* ?x60029 l_0_12_299)))
 (let ((?x62956 (* l_0_12_253 l_0_12_253)))
 (let ((?x62964 (+ (- (+ (* (* (- 2.0) l_0_12_109) l_0_12_119) ?x62956) ?x60230) (* (* 2.0 l_0_12_73) l_0_12_83))))
 (= ?x62964 0.0))))))
(assert
 (let ((?x60032 (* l_0_12_289 l_0_12_289)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60305 (* ?x60029 l_0_12_304)))
 (let ((?x57457 (* l_0_12_181 l_0_12_181)))
 (let ((?x57455 (* l_0_12_145 l_0_12_145)))
 (let ((?x62979 (+ (- (- (+ (* (* (- 2.0) l_0_12_109) l_0_12_124) ?x57455) ?x57457) ?x60305) ?x60032)))
 (= (+ ?x62979 (* (* 2.0 l_0_12_73) l_0_12_88)) 0.0))))))))
(assert
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60366 (* ?x60029 l_0_12_310)))
 (let ((?x62956 (* l_0_12_253 l_0_12_253)))
 (let ((?x62993 (+ (- (- (* (* (- 2.0) l_0_12_109) l_0_12_130) ?x62956) ?x60366) (* (* 2.0 l_0_12_73) l_0_12_94))))
 (= ?x62993 0.0))))))
(assert
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60446 (* ?x60029 l_0_12_317)))
 (let ((?x63002 (* l_0_12_217 l_0_12_217)))
 (let ((?x63001 (- (* (* 2.0 l_0_12_101) l_0_12_73) (* (* 2.0 l_0_12_109) l_0_12_137))))
 (= (- (- ?x63001 ?x63002) ?x60446) 0.0))))))
(assert
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60566 (* ?x60064 l_0_12_293)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60564 (* ?x60061 l_0_12_292)))
 (let ((?x63015 (- (* (* (- 2.0) l_0_12_110) l_0_12_112) (* (* 2.0 l_0_12_111) l_0_12_113))))
 (let ((?x63021 (- (- (- (- ?x63015 ?x60564) ?x60566) (* (* 2.0 l_0_12_325) l_0_12_328)) (* (* 2.0 l_0_12_361) l_0_12_364))))
 (let ((?x63025 (- (- ?x63021 (* (* 2.0 l_0_12_397) l_0_12_400)) (* (* 2.0 l_0_12_433) l_0_12_436))))
 (let ((?x63029 (+ (+ ?x63025 (* (* 2.0 l_0_12_74) l_0_12_76)) (* (* 2.0 l_0_12_75) l_0_12_77))))
 (= ?x63029 0.0))))))))))
(assert
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60696 (* ?x60064 l_0_12_300)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60694 (* ?x60061 l_0_12_299)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x63052 (* ?x60227 l_0_12_254)))
 (let ((?x63051 (- (* (* (- 2.0) l_0_12_110) l_0_12_119) (* (* 2.0 l_0_12_111) l_0_12_120))))
 (let ((?x63057 (- (- (- (+ ?x63051 ?x63052) ?x60694) ?x60696) (* (* 2.0 l_0_12_325) l_0_12_335))))
 (let ((?x63061 (- (- ?x63057 (* (* 2.0 l_0_12_361) l_0_12_371)) (* (* 2.0 l_0_12_397) l_0_12_407))))
 (let ((?x63065 (+ (- ?x63061 (* (* 2.0 l_0_12_433) l_0_12_443)) (* (* 2.0 l_0_12_74) l_0_12_83))))
 (= (+ ?x63065 (* (* 2.0 l_0_12_75) l_0_12_84)) 0.0))))))))))))
(assert
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60822 (* ?x60064 l_0_12_305)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60819 (* ?x60061 l_0_12_304)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60059 (* ?x60029 l_0_12_290)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57489 (* ?x57488 l_0_12_182)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57486 (* ?x57485 l_0_12_146)))
 (let ((?x63091 (- (* (* (- 2.0) l_0_12_110) l_0_12_124) (* (* 2.0 l_0_12_111) l_0_12_125))))
 (let ((?x63104 (- (- (- (+ (- (+ ?x63091 ?x57486) ?x57489) ?x60059) ?x60819) ?x60822) (* (* 2.0 l_0_12_325) l_0_12_340))))
 (let ((?x63108 (- (- ?x63104 (* (* 2.0 l_0_12_361) l_0_12_376)) (* (* 2.0 l_0_12_397) l_0_12_412))))
 (let ((?x63112 (+ (- ?x63108 (* (* 2.0 l_0_12_433) l_0_12_448)) (* (* 2.0 l_0_12_74) l_0_12_88))))
 (= (+ ?x63112 (* (* 2.0 l_0_12_75) l_0_12_89)) 0.0))))))))))))))))
(assert
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60904 (* ?x60064 l_0_12_311)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60902 (* ?x60061 l_0_12_310)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x63052 (* ?x60227 l_0_12_254)))
 (let ((?x63149 (- (* (* (- 2.0) l_0_12_110) l_0_12_130) (* (* 2.0 l_0_12_111) l_0_12_131))))
 (let ((?x63154 (- (- (- (- ?x63149 ?x63052) ?x60902) ?x60904) (* (* 2.0 l_0_12_325) l_0_12_346))))
 (let ((?x63158 (- (- ?x63154 (* (* 2.0 l_0_12_361) l_0_12_382)) (* (* 2.0 l_0_12_397) l_0_12_418))))
 (let ((?x63162 (+ (- ?x63158 (* (* 2.0 l_0_12_433) l_0_12_454)) (* (* 2.0 l_0_12_74) l_0_12_94))))
 (= (+ ?x63162 (* (* 2.0 l_0_12_75) l_0_12_95)) 0.0))))))))))))
(assert
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x61013 (* ?x60064 l_0_12_318)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x61011 (* ?x60061 l_0_12_317)))
 (let ((?x63181 (+ (* (* 2.0 l_0_12_101) l_0_12_74) (* (* 2.0 l_0_12_102) l_0_12_75))))
 (let ((?x63190 (- (- ?x63181 (* (* 2.0 l_0_12_110) l_0_12_137)) (* (* 2.0 l_0_12_111) l_0_12_138))))
 (let ((?x63196 (- (- (- (- ?x63190 (* (* 2.0 l_0_12_217) l_0_12_218)) ?x61011) ?x61013) (* (* 2.0 l_0_12_325) l_0_12_353))))
 (let ((?x63200 (- (- ?x63196 (* (* 2.0 l_0_12_361) l_0_12_389)) (* (* 2.0 l_0_12_397) l_0_12_425))))
 (= (- ?x63200 (* (* 2.0 l_0_12_433) l_0_12_461)) 0.0))))))))))
(assert
 (let ((?x31939 (* l_0_12_78 l_0_12_78)))
 (let ((?x31933 (* l_0_12_77 l_0_12_77)))
 (let ((?x58444 (* l_0_12_76 l_0_12_76)))
 (let ((?x61128 (* l_0_12_294 l_0_12_294)))
 (let ((?x61126 (* l_0_12_293 l_0_12_293)))
 (let ((?x34661 (* l_0_12_292 l_0_12_292)))
 (let ((?x58370 (* l_0_12_114 l_0_12_114)))
 (let ((?x63229 (- (- (* (- l_0_12_112) l_0_12_112) (* l_0_12_113 l_0_12_113)) ?x58370)))
 (= (+ (+ (+ (- (- (- ?x63229 ?x34661) ?x61126) ?x61128) ?x58444) ?x31933) ?x31939) 0.0))))))))))
(assert
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x61176 (* ?x57500 l_0_12_301)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x61174 (* ?x57497 l_0_12_300)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x61172 (* ?x57494 l_0_12_299)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x63244 (* ?x60227 l_0_12_256)))
 (let ((?x31552 (- (* (* (- 2.0) l_0_12_112) l_0_12_119) (* (* 2.0 l_0_12_113) l_0_12_120))))
 (let ((?x63247 (- (- (+ (- ?x31552 (* (* 2.0 l_0_12_114) l_0_12_121)) ?x63244) ?x61172) ?x61174)))
 (let ((?x63252 (+ (+ (- ?x63247 ?x61176) (* (* 2.0 l_0_12_76) l_0_12_83)) (* (* 2.0 l_0_12_77) l_0_12_84))))
 (= (+ ?x63252 (* (* 2.0 l_0_12_78) l_0_12_85)) 0.0)))))))))))))
(assert
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x61197 (* ?x57500 l_0_12_306)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x34713 (* ?x57497 l_0_12_305)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x34605 (* ?x57494 l_0_12_304)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60124 (* ?x60029 l_0_12_292)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57547 (* ?x57488 l_0_12_184)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x30321 (* ?x57485 l_0_12_148)))
 (let ((?x63269 (- (* (* (- 2.0) l_0_12_112) l_0_12_124) (* (* 2.0 l_0_12_113) l_0_12_125))))
 (let ((?x63281 (+ (- (+ (- ?x63269 (* (* 2.0 l_0_12_114) l_0_12_126)) ?x30321) ?x57547) ?x60124)))
 (let ((?x63286 (+ (- (- (- ?x63281 ?x34605) ?x34713) ?x61197) (* (* 2.0 l_0_12_76) l_0_12_88))))
 (let ((?x63290 (+ (+ ?x63286 (* (* 2.0 l_0_12_77) l_0_12_89)) (* (* 2.0 l_0_12_78) l_0_12_90))))
 (= ?x63290 0.0))))))))))))))))))
(assert
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x61234 (* ?x57500 l_0_12_312)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x61232 (* ?x57497 l_0_12_311)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x61230 (* ?x57494 l_0_12_310)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x63244 (* ?x60227 l_0_12_256)))
 (let ((?x63314 (- (* (* (- 2.0) l_0_12_112) l_0_12_130) (* (* 2.0 l_0_12_113) l_0_12_131))))
 (let ((?x63319 (- (- (- (- ?x63314 (* (* 2.0 l_0_12_114) l_0_12_132)) ?x63244) ?x61230) ?x61232)))
 (let ((?x63324 (+ (+ (- ?x63319 ?x61234) (* (* 2.0 l_0_12_76) l_0_12_94)) (* (* 2.0 l_0_12_77) l_0_12_95))))
 (= (+ ?x63324 (* (* 2.0 l_0_12_78) l_0_12_96)) 0.0)))))))))))))
(assert
 (let ((?x38131 (* l_0_12_87 l_0_12_87)))
 (let ((?x38128 (* l_0_12_86 l_0_12_86)))
 (let ((?x38124 (* l_0_12_85 l_0_12_85)))
 (let ((?x38100 (* l_0_12_84 l_0_12_84)))
 (let ((?x38098 (* l_0_12_83 l_0_12_83)))
 (let ((?x61321 (* l_0_12_303 l_0_12_303)))
 (let ((?x61319 (* l_0_12_302 l_0_12_302)))
 (let ((?x61317 (* l_0_12_301 l_0_12_301)))
 (let ((?x61315 (* l_0_12_300 l_0_12_300)))
 (let ((?x61313 (* l_0_12_299 l_0_12_299)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x63347 (* ?x60227 l_0_12_263)))
 (let ((?x62326 (* l_0_12_123 l_0_12_123)))
 (let ((?x62323 (* l_0_12_122 l_0_12_122)))
 (let ((?x62320 (* l_0_12_121 l_0_12_121)))
 (let ((?x63344 (- (- (* (- l_0_12_119) l_0_12_119) (* l_0_12_120 l_0_12_120)) ?x62320)))
 (let ((?x63352 (- (- (- (- (+ (- (- ?x63344 ?x62323) ?x62326) ?x63347) ?x61313) ?x61315) ?x61317) ?x61319)))
 (= (+ (+ (+ (+ (+ (- ?x63352 ?x61321) ?x38098) ?x38100) ?x38124) ?x38128) ?x38131) 0.0)))))))))))))))))))
(assert
 (let ((?x61377 (* 2.0 l_0_12_303)))
 (let ((?x61378 (* ?x61377 l_0_12_308)))
 (let ((?x61374 (* 2.0 l_0_12_302)))
 (let ((?x61375 (* ?x61374 l_0_12_307)))
 (let ((?x61371 (* 2.0 l_0_12_301)))
 (let ((?x61372 (* ?x61371 l_0_12_306)))
 (let ((?x61368 (* 2.0 l_0_12_300)))
 (let ((?x61369 (* ?x61368 l_0_12_305)))
 (let ((?x61365 (* 2.0 l_0_12_299)))
 (let ((?x61366 (* ?x61365 l_0_12_304)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60230 (* ?x60029 l_0_12_299)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x63387 (* ?x60227 l_0_12_268)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57585 (* ?x57488 l_0_12_191)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57583 (* ?x57485 l_0_12_155)))
 (let ((?x63375 (- (* (* (- 2.0) l_0_12_119) l_0_12_124) (* (* 2.0 l_0_12_120) l_0_12_125))))
 (let ((?x63381 (- (- ?x63375 (* (* 2.0 l_0_12_121) l_0_12_126)) (* (* 2.0 l_0_12_122) l_0_12_127))))
 (let ((?x63388 (+ (- (+ (- ?x63381 (* (* 2.0 l_0_12_123) l_0_12_128)) ?x57583) ?x57585) ?x63387)))
 (let ((?x63397 (+ (- (- (- (- (- (+ ?x63388 ?x60230) ?x61366) ?x61369) ?x61372) ?x61375) ?x61378) (* (* 2.0 l_0_12_83) l_0_12_88))))
 (let ((?x63403 (+ (+ ?x63397 (* (* 2.0 l_0_12_84) l_0_12_89)) (* (* 2.0 l_0_12_85) l_0_12_90))))
 (let ((?x63409 (+ (+ ?x63403 (* (* 2.0 l_0_12_86) l_0_12_91)) (* (* 2.0 l_0_12_87) l_0_12_92))))
 (= ?x63409 0.0))))))))))))))))))))))))))
(assert
 (let ((?x61377 (* 2.0 l_0_12_303)))
 (let ((?x61415 (* ?x61377 l_0_12_314)))
 (let ((?x61374 (* 2.0 l_0_12_302)))
 (let ((?x61413 (* ?x61374 l_0_12_313)))
 (let ((?x61371 (* 2.0 l_0_12_301)))
 (let ((?x61411 (* ?x61371 l_0_12_312)))
 (let ((?x61368 (* 2.0 l_0_12_300)))
 (let ((?x61409 (* ?x61368 l_0_12_311)))
 (let ((?x61365 (* 2.0 l_0_12_299)))
 (let ((?x61407 (* ?x61365 l_0_12_310)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x63455 (* ?x60227 l_0_12_274)))
 (let ((?x63347 (* ?x60227 l_0_12_263)))
 (let ((?x39122 (- (* (* (- 2.0) l_0_12_119) l_0_12_130) (* (* 2.0 l_0_12_120) l_0_12_131))))
 (let ((?x63451 (- (- ?x39122 (* (* 2.0 l_0_12_121) l_0_12_132)) (* (* 2.0 l_0_12_122) l_0_12_133))))
 (let ((?x63457 (- (+ (- (- ?x63451 (* (* 2.0 l_0_12_123) l_0_12_134)) ?x63347) ?x63455) ?x61407)))
 (let ((?x63463 (+ (- (- (- (- ?x63457 ?x61409) ?x61411) ?x61413) ?x61415) (* (* 2.0 l_0_12_83) l_0_12_94))))
 (let ((?x63467 (+ (+ ?x63463 (* (* 2.0 l_0_12_84) l_0_12_95)) (* (* 2.0 l_0_12_85) l_0_12_96))))
 (let ((?x63471 (+ (+ ?x63467 (* (* 2.0 l_0_12_86) l_0_12_97)) (* (* 2.0 l_0_12_87) l_0_12_98))))
 (= ?x63471 0.0)))))))))))))))))))))
(assert
 (let ((?x61377 (* 2.0 l_0_12_303)))
 (let ((?x61453 (* ?x61377 l_0_12_321)))
 (let ((?x61374 (* 2.0 l_0_12_302)))
 (let ((?x61451 (* ?x61374 l_0_12_320)))
 (let ((?x61371 (* 2.0 l_0_12_301)))
 (let ((?x61449 (* ?x61371 l_0_12_319)))
 (let ((?x61368 (* 2.0 l_0_12_300)))
 (let ((?x61447 (* ?x61368 l_0_12_318)))
 (let ((?x61365 (* 2.0 l_0_12_299)))
 (let ((?x61445 (* ?x61365 l_0_12_317)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x61686 (* ?x60227 l_0_12_281)))
 (let ((?x39223 (+ (* (* 2.0 l_0_12_101) l_0_12_83) (* (* 2.0 l_0_12_102) l_0_12_84))))
 (let ((?x63480 (+ (+ ?x39223 (* (* 2.0 l_0_12_103) l_0_12_85)) (* (* 2.0 l_0_12_104) l_0_12_86))))
 (let ((?x63485 (- (+ ?x63480 (* (* 2.0 l_0_12_105) l_0_12_87)) (* (* 2.0 l_0_12_119) l_0_12_137))))
 (let ((?x63489 (- (- ?x63485 (* (* 2.0 l_0_12_120) l_0_12_138)) (* (* 2.0 l_0_12_121) l_0_12_139))))
 (let ((?x63493 (- (- ?x63489 (* (* 2.0 l_0_12_122) l_0_12_140)) (* (* 2.0 l_0_12_123) l_0_12_141))))
 (let ((?x63498 (- (- (+ (- ?x63493 (* (* 2.0 l_0_12_217) l_0_12_227)) ?x61686) ?x61445) ?x61447)))
 (= (- (- (- ?x63498 ?x61449) ?x61451) ?x61453) 0.0))))))))))))))))))))
(assert
 (let ((?x62548 (* l_0_12_93 l_0_12_93)))
 (let ((?x38368 (* l_0_12_92 l_0_12_92)))
 (let ((?x38362 (* l_0_12_91 l_0_12_91)))
 (let ((?x38356 (* l_0_12_90 l_0_12_90)))
 (let ((?x38350 (* l_0_12_89 l_0_12_89)))
 (let ((?x38344 (* l_0_12_88 l_0_12_88)))
 (let ((?x61507 (* l_0_12_309 l_0_12_309)))
 (let ((?x61505 (* l_0_12_308 l_0_12_308)))
 (let ((?x61503 (* l_0_12_307 l_0_12_307)))
 (let ((?x61501 (* l_0_12_306 l_0_12_306)))
 (let ((?x35814 (* l_0_12_305 l_0_12_305)))
 (let ((?x35817 (* l_0_12_304 l_0_12_304)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60305 (* ?x60029 l_0_12_304)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57608 (* ?x57488 l_0_12_196)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57601 (* ?x57485 l_0_12_160)))
 (let ((?x62516 (* l_0_12_129 l_0_12_129)))
 (let ((?x62513 (* l_0_12_128 l_0_12_128)))
 (let ((?x62510 (* l_0_12_127 l_0_12_127)))
 (let ((?x62507 (* l_0_12_126 l_0_12_126)))
 (let ((?x39292 (- (- (* (- l_0_12_124) l_0_12_124) (* l_0_12_125 l_0_12_125)) ?x62507)))
 (let ((?x39287 (- (+ (- (+ (- (- (- ?x39292 ?x62510) ?x62513) ?x62516) ?x57601) ?x57608) ?x60305) ?x35817)))
 (let ((?x63529 (+ (+ (- (- (- (- (- ?x39287 ?x35814) ?x61501) ?x61503) ?x61505) ?x61507) ?x38344) ?x38350)))
 (= (+ (+ (+ (+ ?x63529 ?x38356) ?x38362) ?x38368) ?x62548) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x61532 (* 2.0 l_0_12_309)))
 (let ((?x61533 (* ?x61532 l_0_12_315)))
 (let ((?x61529 (* 2.0 l_0_12_308)))
 (let ((?x61530 (* ?x61529 l_0_12_314)))
 (let ((?x61526 (* 2.0 l_0_12_307)))
 (let ((?x61527 (* ?x61526 l_0_12_313)))
 (let ((?x61523 (* 2.0 l_0_12_306)))
 (let ((?x61524 (* ?x61523 l_0_12_312)))
 (let ((?x61520 (* 2.0 l_0_12_305)))
 (let ((?x61521 (* ?x61520 l_0_12_311)))
 (let ((?x61517 (* 2.0 l_0_12_304)))
 (let ((?x61518 (* ?x61517 l_0_12_310)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60366 (* ?x60029 l_0_12_310)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x63387 (* ?x60227 l_0_12_268)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57632 (* ?x57488 l_0_12_202)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57630 (* ?x57485 l_0_12_166)))
 (let ((?x63555 (- (* (* (- 2.0) l_0_12_124) l_0_12_130) (* (* 2.0 l_0_12_125) l_0_12_131))))
 (let ((?x63561 (- (- ?x63555 (* (* 2.0 l_0_12_126) l_0_12_132)) (* (* 2.0 l_0_12_127) l_0_12_133))))
 (let ((?x63567 (- (- ?x63561 (* (* 2.0 l_0_12_128) l_0_12_134)) (* (* 2.0 l_0_12_129) l_0_12_135))))
 (let ((?x63574 (- (- (- (+ (- (- (+ ?x63567 ?x57630) ?x57632) ?x63387) ?x60366) ?x61518) ?x61521) ?x61524)))
 (let ((?x63580 (+ (- (- (- ?x63574 ?x61527) ?x61530) ?x61533) (* (* 2.0 l_0_12_88) l_0_12_94))))
 (let ((?x63586 (+ (+ ?x63580 (* (* 2.0 l_0_12_89) l_0_12_95)) (* (* 2.0 l_0_12_90) l_0_12_96))))
 (let ((?x63592 (+ (+ ?x63586 (* (* 2.0 l_0_12_91) l_0_12_97)) (* (* 2.0 l_0_12_92) l_0_12_98))))
 (= (+ ?x63592 (* (* 2.0 l_0_12_93) l_0_12_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x61532 (* 2.0 l_0_12_309)))
 (let ((?x61553 (* ?x61532 l_0_12_322)))
 (let ((?x61529 (* 2.0 l_0_12_308)))
 (let ((?x61551 (* ?x61529 l_0_12_321)))
 (let ((?x61526 (* 2.0 l_0_12_307)))
 (let ((?x61549 (* ?x61526 l_0_12_320)))
 (let ((?x61523 (* 2.0 l_0_12_306)))
 (let ((?x61547 (* ?x61523 l_0_12_319)))
 (let ((?x61520 (* 2.0 l_0_12_305)))
 (let ((?x61545 (* ?x61520 l_0_12_318)))
 (let ((?x61517 (* 2.0 l_0_12_304)))
 (let ((?x61543 (* ?x61517 l_0_12_317)))
 (let ((?x60029 (* 2.0 l_0_12_289)))
 (let ((?x60446 (* ?x60029 l_0_12_317)))
 (let ((?x57488 (* 2.0 l_0_12_181)))
 (let ((?x57664 (* ?x57488 l_0_12_209)))
 (let ((?x57485 (* 2.0 l_0_12_145)))
 (let ((?x57662 (* ?x57485 l_0_12_173)))
 (let ((?x39414 (+ (* (* 2.0 l_0_12_101) l_0_12_88) (* (* 2.0 l_0_12_102) l_0_12_89))))
 (let ((?x63614 (+ (+ ?x39414 (* (* 2.0 l_0_12_103) l_0_12_90)) (* (* 2.0 l_0_12_104) l_0_12_91))))
 (let ((?x63618 (+ (+ ?x63614 (* (* 2.0 l_0_12_105) l_0_12_92)) (* (* 2.0 l_0_12_106) l_0_12_93))))
 (let ((?x63623 (- (- ?x63618 (* (* 2.0 l_0_12_124) l_0_12_137)) (* (* 2.0 l_0_12_125) l_0_12_138))))
 (let ((?x63627 (- (- ?x63623 (* (* 2.0 l_0_12_126) l_0_12_139)) (* (* 2.0 l_0_12_127) l_0_12_140))))
 (let ((?x63631 (- (- ?x63627 (* (* 2.0 l_0_12_128) l_0_12_141)) (* (* 2.0 l_0_12_129) l_0_12_142))))
 (let ((?x63636 (+ (- (- (+ ?x63631 ?x57662) ?x57664) (* (* 2.0 l_0_12_217) l_0_12_232)) ?x60446)))
 (= (- (- (- (- (- (- ?x63636 ?x61543) ?x61545) ?x61547) ?x61549) ?x61551) ?x61553) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x38555 (* l_0_12_99 l_0_12_99)))
 (let ((?x38552 (* l_0_12_98 l_0_12_98)))
 (let ((?x38495 (* l_0_12_97 l_0_12_97)))
 (let ((?x38548 (* l_0_12_96 l_0_12_96)))
 (let ((?x29977 (* l_0_12_95 l_0_12_95)))
 (let ((?x38526 (* l_0_12_94 l_0_12_94)))
 (let ((?x61569 (* l_0_12_316 l_0_12_316)))
 (let ((?x61567 (* l_0_12_315 l_0_12_315)))
 (let ((?x61565 (* l_0_12_314 l_0_12_314)))
 (let ((?x61563 (* l_0_12_313 l_0_12_313)))
 (let ((?x36358 (* l_0_12_312 l_0_12_312)))
 (let ((?x36366 (* l_0_12_311 l_0_12_311)))
 (let ((?x36401 (* l_0_12_310 l_0_12_310)))
 (let ((?x60227 (* 2.0 l_0_12_253)))
 (let ((?x63455 (* ?x60227 l_0_12_274)))
 (let ((?x62706 (* l_0_12_136 l_0_12_136)))
 (let ((?x62703 (* l_0_12_135 l_0_12_135)))
 (let ((?x62700 (* l_0_12_134 l_0_12_134)))
 (let ((?x62697 (* l_0_12_133 l_0_12_133)))
 (let ((?x62694 (* l_0_12_132 l_0_12_132)))
 (let ((?x62691 (* l_0_12_131 l_0_12_131)))
 (let ((?x39612 (- (- (* l_0_12_100 l_0_12_100) (* l_0_12_130 l_0_12_130)) ?x62691)))
 (let ((?x39592 (- (- (- (- (- (- (- ?x39612 ?x62694) ?x62697) ?x62700) ?x62703) ?x62706) ?x63455) ?x36401)))
 (let ((?x63658 (+ (- (- (- (- (- (- ?x39592 ?x36366) ?x36358) ?x61563) ?x61565) ?x61567) ?x61569) ?x38526)))
 (= (+ (+ (+ (+ (+ ?x63658 ?x29977) ?x38548) ?x38495) ?x38552) ?x38555) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x61621 (* l_0_12_324 l_0_12_324)))
 (let ((?x36896 (* l_0_12_323 l_0_12_323)))
 (let ((?x36880 (* l_0_12_322 l_0_12_322)))
 (let ((?x36868 (* l_0_12_321 l_0_12_321)))
 (let ((?x36856 (* l_0_12_320 l_0_12_320)))
 (let ((?x36839 (* l_0_12_319 l_0_12_319)))
 (let ((?x37041 (* l_0_12_318 l_0_12_318)))
 (let ((?x37074 (* l_0_12_317 l_0_12_317)))
 (let ((?x62874 (* l_0_12_144 l_0_12_144)))
 (let ((?x62871 (* l_0_12_143 l_0_12_143)))
 (let ((?x62868 (* l_0_12_142 l_0_12_142)))
 (let ((?x62865 (* l_0_12_141 l_0_12_141)))
 (let ((?x62862 (* l_0_12_140 l_0_12_140)))
 (let ((?x62859 (* l_0_12_139 l_0_12_139)))
 (let ((?x62856 (* l_0_12_138 l_0_12_138)))
 (let ((?x62853 (* l_0_12_137 l_0_12_137)))
 (let ((?x38653 (* l_0_12_108 l_0_12_108)))
 (let ((?x38649 (* l_0_12_107 l_0_12_107)))
 (let ((?x38646 (* l_0_12_106 l_0_12_106)))
 (let ((?x38603 (* l_0_12_105 l_0_12_105)))
 (let ((?x62898 (* l_0_12_104 l_0_12_104)))
 (let ((?x62894 (* l_0_12_103 l_0_12_103)))
 (let ((?x39716 (+ (+ (* l_0_12_101 l_0_12_101) (* l_0_12_102 l_0_12_102)) ?x62894)))
 (let ((?x39700 (- (- (+ (+ (+ (+ (+ ?x39716 ?x62898) ?x38603) ?x38646) ?x38649) ?x38653) ?x62853) ?x62856)))
 (let ((?x63676 (- (- (- (- (- (- (- ?x39700 ?x62859) ?x62862) ?x62865) ?x62868) ?x62871) ?x62874) (* (* 2.0 l_0_12_217) l_0_12_245))))
 (let ((?x63683 (- (- (- (- (- (- (- ?x63676 ?x37074) ?x37041) ?x36839) ?x36856) ?x36868) ?x36880) ?x36896)))
 (= (- ?x63683 ?x61621) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x57242 (* l_0_12_291 l_0_12_291)))
 (let ((?x29540 (* l_0_12_290 l_0_12_290)))
 (let ((?x57685 (* l_0_12_183 l_0_12_183)))
 (let ((?x57683 (* l_0_12_182 l_0_12_182)))
 (let ((?x39825 (- (+ (* l_0_12_146 l_0_12_146) (* l_0_12_147 l_0_12_147)) ?x57683)))
 (let ((?x63711 (- (+ (+ (- ?x39825 ?x57685) ?x29540) ?x57242) (* (* 2.0 l_0_12_326) l_0_12_340))))
 (let ((?x63715 (- (- ?x63711 (* (* 2.0 l_0_12_327) l_0_12_341)) (* (* 2.0 l_0_12_362) l_0_12_376))))
 (let ((?x63719 (- (- ?x63715 (* (* 2.0 l_0_12_363) l_0_12_377)) (* (* 2.0 l_0_12_398) l_0_12_412))))
 (let ((?x63723 (- (- ?x63719 (* (* 2.0 l_0_12_399) l_0_12_413)) (* (* 2.0 l_0_12_434) l_0_12_448))))
 (= (- ?x63723 (* (* 2.0 l_0_12_435) l_0_12_449)) 0.0)))))))))))
(assert
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60566 (* ?x60064 l_0_12_293)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60564 (* ?x60061 l_0_12_292)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x57770 (* ?x57769 l_0_12_185)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x57767 (* ?x57766 l_0_12_184)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x57764 (* ?x57763 l_0_12_149)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x58052 (* ?x57903 l_0_12_148)))
 (let ((?x63740 (- (+ (+ (- (- (+ ?x58052 ?x57764) ?x57767) ?x57770) ?x60564) ?x60566) (* (* 2.0 l_0_12_328) l_0_12_340))))
 (let ((?x63744 (- (- ?x63740 (* (* 2.0 l_0_12_329) l_0_12_341)) (* (* 2.0 l_0_12_330) l_0_12_342))))
 (let ((?x63748 (- (- ?x63744 (* (* 2.0 l_0_12_364) l_0_12_376)) (* (* 2.0 l_0_12_365) l_0_12_377))))
 (let ((?x63752 (- (- ?x63748 (* (* 2.0 l_0_12_366) l_0_12_378)) (* (* 2.0 l_0_12_400) l_0_12_412))))
 (let ((?x63756 (- (- ?x63752 (* (* 2.0 l_0_12_401) l_0_12_413)) (* (* 2.0 l_0_12_402) l_0_12_414))))
 (let ((?x63760 (- (- ?x63756 (* (* 2.0 l_0_12_436) l_0_12_448)) (* (* 2.0 l_0_12_437) l_0_12_449))))
 (= (- ?x63760 (* (* 2.0 l_0_12_438) l_0_12_450)) 0.0))))))))))))))))))))
(assert
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60696 (* ?x60064 l_0_12_300)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60694 (* ?x60061 l_0_12_299)))
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x63806 (* ?x57286 l_0_12_269)))
 (let ((?x57283 (* 2.0 l_0_12_254)))
 (let ((?x63804 (* ?x57283 l_0_12_268)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x57910 (* ?x57769 l_0_12_192)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x57908 (* ?x57766 l_0_12_191)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x57906 (* ?x57763 l_0_12_156)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x57904 (* ?x57903 l_0_12_155)))
 (let ((?x63809 (+ (+ (+ (+ (- (- (+ ?x57904 ?x57906) ?x57908) ?x57910) ?x63804) ?x63806) ?x60694) ?x60696)))
 (let ((?x63815 (- (- ?x63809 (* (* 2.0 l_0_12_335) l_0_12_340)) (* (* 2.0 l_0_12_336) l_0_12_341))))
 (let ((?x63821 (- (- ?x63815 (* (* 2.0 l_0_12_337) l_0_12_342)) (* (* 2.0 l_0_12_338) l_0_12_343))))
 (let ((?x63827 (- (- ?x63821 (* (* 2.0 l_0_12_339) l_0_12_344)) (* (* 2.0 l_0_12_371) l_0_12_376))))
 (let ((?x63833 (- (- ?x63827 (* (* 2.0 l_0_12_372) l_0_12_377)) (* (* 2.0 l_0_12_373) l_0_12_378))))
 (let ((?x63839 (- (- ?x63833 (* (* 2.0 l_0_12_374) l_0_12_379)) (* (* 2.0 l_0_12_375) l_0_12_380))))
 (let ((?x63845 (- (- ?x63839 (* (* 2.0 l_0_12_407) l_0_12_412)) (* (* 2.0 l_0_12_408) l_0_12_413))))
 (let ((?x63851 (- (- ?x63845 (* (* 2.0 l_0_12_409) l_0_12_414)) (* (* 2.0 l_0_12_410) l_0_12_415))))
 (let ((?x63857 (- (- ?x63851 (* (* 2.0 l_0_12_411) l_0_12_416)) (* (* 2.0 l_0_12_443) l_0_12_448))))
 (let ((?x63863 (- (- ?x63857 (* (* 2.0 l_0_12_444) l_0_12_449)) (* (* 2.0 l_0_12_445) l_0_12_450))))
 (let ((?x63869 (- (- ?x63863 (* (* 2.0 l_0_12_446) l_0_12_451)) (* (* 2.0 l_0_12_447) l_0_12_452))))
 (= ?x63869 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x63948 (* l_0_12_453 l_0_12_453)))
 (let ((?x63946 (* l_0_12_452 l_0_12_452)))
 (let ((?x63944 (* l_0_12_451 l_0_12_451)))
 (let ((?x63942 (* l_0_12_450 l_0_12_450)))
 (let ((?x63940 (* l_0_12_449 l_0_12_449)))
 (let ((?x63938 (* l_0_12_448 l_0_12_448)))
 (let ((?x63936 (* l_0_12_417 l_0_12_417)))
 (let ((?x63934 (* l_0_12_416 l_0_12_416)))
 (let ((?x63932 (* l_0_12_415 l_0_12_415)))
 (let ((?x63930 (* l_0_12_414 l_0_12_414)))
 (let ((?x63928 (* l_0_12_413 l_0_12_413)))
 (let ((?x63926 (* l_0_12_412 l_0_12_412)))
 (let ((?x63924 (* l_0_12_381 l_0_12_381)))
 (let ((?x63922 (* l_0_12_380 l_0_12_380)))
 (let ((?x63920 (* l_0_12_379 l_0_12_379)))
 (let ((?x63918 (* l_0_12_378 l_0_12_378)))
 (let ((?x63916 (* l_0_12_377 l_0_12_377)))
 (let ((?x63914 (* l_0_12_376 l_0_12_376)))
 (let ((?x63912 (* l_0_12_345 l_0_12_345)))
 (let ((?x63910 (* l_0_12_344 l_0_12_344)))
 (let ((?x63908 (* l_0_12_343 l_0_12_343)))
 (let ((?x63906 (* l_0_12_342 l_0_12_342)))
 (let ((?x40664 (* l_0_12_341 l_0_12_341)))
 (let ((?x40660 (* l_0_12_340 l_0_12_340)))
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60822 (* ?x60064 l_0_12_305)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60819 (* ?x60061 l_0_12_304)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x57985 (* ?x57769 l_0_12_197)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x57983 (* ?x57766 l_0_12_196)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x57966 (* ?x57763 l_0_12_161)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x61915 (* ?x57903 l_0_12_160)))
 (let ((?x63905 (- (- (+ (+ (- (- (+ ?x61915 ?x57966) ?x57983) ?x57985) ?x60819) ?x60822) ?x40660) ?x40664)))
 (let ((?x63919 (- (- (- (- (- (- (- ?x63905 ?x63906) ?x63908) ?x63910) ?x63912) ?x63914) ?x63916) ?x63918)))
 (let ((?x63933 (- (- (- (- (- (- (- ?x63919 ?x63920) ?x63922) ?x63924) ?x63926) ?x63928) ?x63930) ?x63932)))
 (let ((?x63947 (- (- (- (- (- (- (- ?x63933 ?x63934) ?x63936) ?x63938) ?x63940) ?x63942) ?x63944) ?x63946)))
 (= (- ?x63947 ?x63948) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x60904 (* ?x60064 l_0_12_311)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x60902 (* ?x60061 l_0_12_310)))
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x63806 (* ?x57286 l_0_12_269)))
 (let ((?x57283 (* 2.0 l_0_12_254)))
 (let ((?x63804 (* ?x57283 l_0_12_268)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x58061 (* ?x57769 l_0_12_203)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x58059 (* ?x57766 l_0_12_202)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x58057 (* ?x57763 l_0_12_167)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x58054 (* ?x57903 l_0_12_166)))
 (let ((?x63987 (+ (+ (- (- (- (- (+ ?x58054 ?x58057) ?x58059) ?x58061) ?x63804) ?x63806) ?x60902) ?x60904)))
 (let ((?x63993 (- (- ?x63987 (* (* 2.0 l_0_12_340) l_0_12_346)) (* (* 2.0 l_0_12_341) l_0_12_347))))
 (let ((?x63999 (- (- ?x63993 (* (* 2.0 l_0_12_342) l_0_12_348)) (* (* 2.0 l_0_12_343) l_0_12_349))))
 (let ((?x64005 (- (- ?x63999 (* (* 2.0 l_0_12_344) l_0_12_350)) (* (* 2.0 l_0_12_345) l_0_12_351))))
 (let ((?x64011 (- (- ?x64005 (* (* 2.0 l_0_12_376) l_0_12_382)) (* (* 2.0 l_0_12_377) l_0_12_383))))
 (let ((?x64017 (- (- ?x64011 (* (* 2.0 l_0_12_378) l_0_12_384)) (* (* 2.0 l_0_12_379) l_0_12_385))))
 (let ((?x64023 (- (- ?x64017 (* (* 2.0 l_0_12_380) l_0_12_386)) (* (* 2.0 l_0_12_381) l_0_12_387))))
 (let ((?x64029 (- (- ?x64023 (* (* 2.0 l_0_12_412) l_0_12_418)) (* (* 2.0 l_0_12_413) l_0_12_419))))
 (let ((?x64035 (- (- ?x64029 (* (* 2.0 l_0_12_414) l_0_12_420)) (* (* 2.0 l_0_12_415) l_0_12_421))))
 (let ((?x64041 (- (- ?x64035 (* (* 2.0 l_0_12_416) l_0_12_422)) (* (* 2.0 l_0_12_417) l_0_12_423))))
 (let ((?x64047 (- (- ?x64041 (* (* 2.0 l_0_12_448) l_0_12_454)) (* (* 2.0 l_0_12_449) l_0_12_455))))
 (let ((?x64053 (- (- ?x64047 (* (* 2.0 l_0_12_450) l_0_12_456)) (* (* 2.0 l_0_12_451) l_0_12_457))))
 (let ((?x64059 (- (- ?x64053 (* (* 2.0 l_0_12_452) l_0_12_458)) (* (* 2.0 l_0_12_453) l_0_12_459))))
 (= ?x64059 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x60064 (* 2.0 l_0_12_291)))
 (let ((?x61013 (* ?x60064 l_0_12_318)))
 (let ((?x60061 (* 2.0 l_0_12_290)))
 (let ((?x61011 (* ?x60061 l_0_12_317)))
 (let ((?x57769 (* 2.0 l_0_12_183)))
 (let ((?x58129 (* ?x57769 l_0_12_210)))
 (let ((?x57766 (* 2.0 l_0_12_182)))
 (let ((?x31407 (* ?x57766 l_0_12_209)))
 (let ((?x57763 (* 2.0 l_0_12_147)))
 (let ((?x31409 (* ?x57763 l_0_12_174)))
 (let ((?x57903 (* 2.0 l_0_12_146)))
 (let ((?x37831 (* ?x57903 l_0_12_173)))
 (let ((?x64106 (- (- (- (+ ?x37831 ?x31409) ?x31407) ?x58129) (* (* 2.0 l_0_12_218) l_0_12_232))))
 (let ((?x64112 (- (+ (+ (- ?x64106 (* (* 2.0 l_0_12_219) l_0_12_233)) ?x61011) ?x61013) (* (* 2.0 l_0_12_340) l_0_12_353))))
 (let ((?x64116 (- (- ?x64112 (* (* 2.0 l_0_12_341) l_0_12_354)) (* (* 2.0 l_0_12_342) l_0_12_355))))
 (let ((?x64120 (- (- ?x64116 (* (* 2.0 l_0_12_343) l_0_12_356)) (* (* 2.0 l_0_12_344) l_0_12_357))))
 (let ((?x64124 (- (- ?x64120 (* (* 2.0 l_0_12_345) l_0_12_358)) (* (* 2.0 l_0_12_376) l_0_12_389))))
 (let ((?x64128 (- (- ?x64124 (* (* 2.0 l_0_12_377) l_0_12_390)) (* (* 2.0 l_0_12_378) l_0_12_391))))
 (let ((?x64132 (- (- ?x64128 (* (* 2.0 l_0_12_379) l_0_12_392)) (* (* 2.0 l_0_12_380) l_0_12_393))))
 (let ((?x64136 (- (- ?x64132 (* (* 2.0 l_0_12_381) l_0_12_394)) (* (* 2.0 l_0_12_412) l_0_12_425))))
 (let ((?x64140 (- (- ?x64136 (* (* 2.0 l_0_12_413) l_0_12_426)) (* (* 2.0 l_0_12_414) l_0_12_427))))
 (let ((?x64144 (- (- ?x64140 (* (* 2.0 l_0_12_415) l_0_12_428)) (* (* 2.0 l_0_12_416) l_0_12_429))))
 (let ((?x64148 (- (- ?x64144 (* (* 2.0 l_0_12_417) l_0_12_430)) (* (* 2.0 l_0_12_448) l_0_12_461))))
 (let ((?x64152 (- (- ?x64148 (* (* 2.0 l_0_12_449) l_0_12_462)) (* (* 2.0 l_0_12_450) l_0_12_463))))
 (let ((?x64156 (- (- ?x64152 (* (* 2.0 l_0_12_451) l_0_12_464)) (* (* 2.0 l_0_12_452) l_0_12_465))))
 (= (- ?x64156 (* (* 2.0 l_0_12_453) l_0_12_466)) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x61128 (* l_0_12_294 l_0_12_294)))
 (let ((?x61126 (* l_0_12_293 l_0_12_293)))
 (let ((?x34661 (* l_0_12_292 l_0_12_292)))
 (let ((?x58194 (* l_0_12_186 l_0_12_186)))
 (let ((?x58192 (* l_0_12_185 l_0_12_185)))
 (let ((?x58190 (* l_0_12_184 l_0_12_184)))
 (let ((?x58188 (* l_0_12_150 l_0_12_150)))
 (let ((?x41871 (+ (+ (* l_0_12_148 l_0_12_148) (* l_0_12_149 l_0_12_149)) ?x58188)))
 (= (+ (+ (+ (- (- (- ?x41871 ?x58190) ?x58192) ?x58194) ?x34661) ?x61126) ?x61128) 0.0))))))))))
(assert
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x61176 (* ?x57500 l_0_12_301)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x61174 (* ?x57497 l_0_12_300)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x61172 (* ?x57494 l_0_12_299)))
 (let ((?x57924 (* 2.0 l_0_12_258)))
 (let ((?x64213 (* ?x57924 l_0_12_270)))
 (let ((?x57921 (* 2.0 l_0_12_257)))
 (let ((?x64211 (* ?x57921 l_0_12_269)))
 (let ((?x57918 (* 2.0 l_0_12_256)))
 (let ((?x64209 (* ?x57918 l_0_12_268)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x58288 (* ?x57993 l_0_12_193)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x58286 (* ?x57990 l_0_12_192)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x58284 (* ?x57987 l_0_12_191)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58282 (* ?x57974 l_0_12_157)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58280 (* ?x57971 l_0_12_156)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x58278 (* ?x57968 l_0_12_155)))
 (let ((?x64212 (+ (+ (- (- (- (+ (+ ?x58278 ?x58280) ?x58282) ?x58284) ?x58286) ?x58288) ?x64209) ?x64211)))
 (= (+ (+ (+ (+ ?x64212 ?x64213) ?x61172) ?x61174) ?x61176) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x61197 (* ?x57500 l_0_12_306)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x34713 (* ?x57497 l_0_12_305)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x34605 (* ?x57494 l_0_12_304)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x58336 (* ?x57993 l_0_12_198)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x58334 (* ?x57990 l_0_12_197)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x58332 (* ?x57987 l_0_12_196)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58312 (* ?x57974 l_0_12_162)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58308 (* ?x57971 l_0_12_161)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x59328 (* ?x57968 l_0_12_160)))
 (let ((?x64240 (+ (+ (- (- (- (+ (+ ?x59328 ?x58308) ?x58312) ?x58332) ?x58334) ?x58336) ?x34605) ?x34713)))
 (= (+ ?x64240 ?x61197) 0.0)))))))))))))))))))))
(assert
 (let ((?x57500 (* 2.0 l_0_12_294)))
 (let ((?x61234 (* ?x57500 l_0_12_312)))
 (let ((?x57497 (* 2.0 l_0_12_293)))
 (let ((?x61232 (* ?x57497 l_0_12_311)))
 (let ((?x57494 (* 2.0 l_0_12_292)))
 (let ((?x61230 (* ?x57494 l_0_12_310)))
 (let ((?x57924 (* 2.0 l_0_12_258)))
 (let ((?x64213 (* ?x57924 l_0_12_270)))
 (let ((?x57921 (* 2.0 l_0_12_257)))
 (let ((?x64211 (* ?x57921 l_0_12_269)))
 (let ((?x57918 (* 2.0 l_0_12_256)))
 (let ((?x64209 (* ?x57918 l_0_12_268)))
 (let ((?x57993 (* 2.0 l_0_12_186)))
 (let ((?x58386 (* ?x57993 l_0_12_204)))
 (let ((?x57990 (* 2.0 l_0_12_185)))
 (let ((?x58384 (* ?x57990 l_0_12_203)))
 (let ((?x57987 (* 2.0 l_0_12_184)))
 (let ((?x58382 (* ?x57987 l_0_12_202)))
 (let ((?x57974 (* 2.0 l_0_12_150)))
 (let ((?x58379 (* ?x57974 l_0_12_168)))
 (let ((?x57971 (* 2.0 l_0_12_149)))
 (let ((?x58376 (* ?x57971 l_0_12_167)))
 (let ((?x57968 (* 2.0 l_0_12_148)))
 (let ((?x58373 (* ?x57968 l_0_12_166)))
 (let ((?x64255 (- (- (- (- (- (+ (+ ?x58373 ?x58376) ?x58379) ?x58382) ?x58384) ?x58386) ?x64209) ?x64211)))
 (= (+ (+ (+ (- ?x64255 ?x64213) ?x61230) ?x61232) ?x61234) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x61321 (* l_0_12_303 l_0_12_303)))
 (let ((?x61319 (* l_0_12_302 l_0_12_302)))
 (let ((?x61317 (* l_0_12_301 l_0_12_301)))
 (let ((?x61315 (* l_0_12_300 l_0_12_300)))
 (let ((?x61313 (* l_0_12_299 l_0_12_299)))
 (let ((?x61823 (* 2.0 l_0_12_267)))
 (let ((?x64272 (* ?x61823 l_0_12_272)))
 (let ((?x61820 (* 2.0 l_0_12_266)))
 (let ((?x64270 (* ?x61820 l_0_12_271)))
 (let ((?x61817 (* 2.0 l_0_12_265)))
 (let ((?x64268 (* ?x61817 l_0_12_270)))
 (let ((?x61814 (* 2.0 l_0_12_264)))
 (let ((?x41924 (* ?x61814 l_0_12_269)))
 (let ((?x61811 (* 2.0 l_0_12_263)))
 (let ((?x41927 (* ?x61811 l_0_12_268)))
 (let ((?x58880 (* l_0_12_195 l_0_12_195)))
 (let ((?x58878 (* l_0_12_194 l_0_12_194)))
 (let ((?x58876 (* l_0_12_193 l_0_12_193)))
 (let ((?x58874 (* l_0_12_192 l_0_12_192)))
 (let ((?x58872 (* l_0_12_191 l_0_12_191)))
 (let ((?x58870 (* l_0_12_159 l_0_12_159)))
 (let ((?x58868 (* l_0_12_158 l_0_12_158)))
 (let ((?x58866 (* l_0_12_157 l_0_12_157)))
 (let ((?x41926 (+ (+ (* l_0_12_155 l_0_12_155) (* l_0_12_156 l_0_12_156)) ?x58866)))
 (let ((?x41943 (- (- (- (- (- (+ (+ ?x41926 ?x58868) ?x58870) ?x58872) ?x58874) ?x58876) ?x58878) ?x58880)))
 (let ((?x64275 (+ (+ (+ (+ (+ (+ (+ ?x41943 ?x41927) ?x41924) ?x64268) ?x64270) ?x64272) ?x61313) ?x61315)))
 (= (+ (+ (+ ?x64275 ?x61317) ?x61319) ?x61321) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x61377 (* 2.0 l_0_12_303)))
 (let ((?x61378 (* ?x61377 l_0_12_308)))
 (let ((?x61374 (* 2.0 l_0_12_302)))
 (let ((?x61375 (* ?x61374 l_0_12_307)))
 (let ((?x61371 (* 2.0 l_0_12_301)))
 (let ((?x61372 (* ?x61371 l_0_12_306)))
 (let ((?x61368 (* 2.0 l_0_12_300)))
 (let ((?x61369 (* ?x61368 l_0_12_305)))
 (let ((?x61365 (* 2.0 l_0_12_299)))
 (let ((?x61366 (* ?x61365 l_0_12_304)))
 (let ((?x64307 (* l_0_12_273 l_0_12_273)))
 (let ((?x64305 (* l_0_12_272 l_0_12_272)))
 (let ((?x64303 (* l_0_12_271 l_0_12_271)))
 (let ((?x64301 (* l_0_12_270 l_0_12_270)))
 (let ((?x64299 (* l_0_12_269 l_0_12_269)))
 (let ((?x64297 (* l_0_12_268 l_0_12_268)))
 (let ((?x58955 (* 2.0 l_0_12_195)))
 (let ((?x58956 (* ?x58955 l_0_12_200)))
 (let ((?x58952 (* 2.0 l_0_12_194)))
 (let ((?x58953 (* ?x58952 l_0_12_199)))
 (let ((?x58949 (* 2.0 l_0_12_193)))
 (let ((?x58950 (* ?x58949 l_0_12_198)))
 (let ((?x58946 (* 2.0 l_0_12_192)))
 (let ((?x58947 (* ?x58946 l_0_12_197)))
 (let ((?x58943 (* 2.0 l_0_12_191)))
 (let ((?x58944 (* ?x58943 l_0_12_196)))
 (let ((?x58940 (* 2.0 l_0_12_159)))
 (let ((?x58941 (* ?x58940 l_0_12_164)))
 (let ((?x58937 (* 2.0 l_0_12_158)))
 (let ((?x58938 (* ?x58937 l_0_12_163)))
 (let ((?x58934 (* 2.0 l_0_12_157)))
 (let ((?x58935 (* ?x58934 l_0_12_162)))
 (let ((?x58931 (* 2.0 l_0_12_156)))
 (let ((?x58932 (* ?x58931 l_0_12_161)))
 (let ((?x58928 (* 2.0 l_0_12_155)))
 (let ((?x58929 (* ?x58928 l_0_12_160)))
 (let ((?x64294 (- (- (- (+ (+ (+ (+ ?x58929 ?x58932) ?x58935) ?x58938) ?x58941) ?x58944) ?x58947) ?x58950)))
 (let ((?x64306 (+ (+ (+ (+ (+ (- (- ?x64294 ?x58953) ?x58956) ?x64297) ?x64299) ?x64301) ?x64303) ?x64305)))
 (= (+ (+ (+ (+ (+ (+ ?x64306 ?x64307) ?x61366) ?x61369) ?x61372) ?x61375) ?x61378) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61377 (* 2.0 l_0_12_303)))
 (let ((?x61415 (* ?x61377 l_0_12_314)))
 (let ((?x61374 (* 2.0 l_0_12_302)))
 (let ((?x61413 (* ?x61374 l_0_12_313)))
 (let ((?x61371 (* 2.0 l_0_12_301)))
 (let ((?x61411 (* ?x61371 l_0_12_312)))
 (let ((?x61368 (* 2.0 l_0_12_300)))
 (let ((?x61409 (* ?x61368 l_0_12_311)))
 (let ((?x61365 (* 2.0 l_0_12_299)))
 (let ((?x61407 (* ?x61365 l_0_12_310)))
 (let ((?x61965 (* 2.0 l_0_12_273)))
 (let ((?x64349 (* ?x61965 l_0_12_279)))
 (let ((?x61962 (* 2.0 l_0_12_272)))
 (let ((?x64347 (* ?x61962 l_0_12_278)))
 (let ((?x61959 (* 2.0 l_0_12_271)))
 (let ((?x64345 (* ?x61959 l_0_12_277)))
 (let ((?x61956 (* 2.0 l_0_12_270)))
 (let ((?x64343 (* ?x61956 l_0_12_276)))
 (let ((?x61953 (* 2.0 l_0_12_269)))
 (let ((?x64341 (* ?x61953 l_0_12_275)))
 (let ((?x61950 (* 2.0 l_0_12_268)))
 (let ((?x64339 (* ?x61950 l_0_12_274)))
 (let ((?x61823 (* 2.0 l_0_12_267)))
 (let ((?x64272 (* ?x61823 l_0_12_272)))
 (let ((?x61820 (* 2.0 l_0_12_266)))
 (let ((?x64270 (* ?x61820 l_0_12_271)))
 (let ((?x61817 (* 2.0 l_0_12_265)))
 (let ((?x64268 (* ?x61817 l_0_12_270)))
 (let ((?x61814 (* 2.0 l_0_12_264)))
 (let ((?x41924 (* ?x61814 l_0_12_269)))
 (let ((?x61811 (* 2.0 l_0_12_263)))
 (let ((?x41927 (* ?x61811 l_0_12_268)))
 (let ((?x58955 (* 2.0 l_0_12_195)))
 (let ((?x59062 (* ?x58955 l_0_12_206)))
 (let ((?x58952 (* 2.0 l_0_12_194)))
 (let ((?x59060 (* ?x58952 l_0_12_205)))
 (let ((?x58949 (* 2.0 l_0_12_193)))
 (let ((?x59058 (* ?x58949 l_0_12_204)))
 (let ((?x58946 (* 2.0 l_0_12_192)))
 (let ((?x59056 (* ?x58946 l_0_12_203)))
 (let ((?x58943 (* 2.0 l_0_12_191)))
 (let ((?x59054 (* ?x58943 l_0_12_202)))
 (let ((?x58940 (* 2.0 l_0_12_159)))
 (let ((?x59052 (* ?x58940 l_0_12_170)))
 (let ((?x58937 (* 2.0 l_0_12_158)))
 (let ((?x59050 (* ?x58937 l_0_12_169)))
 (let ((?x58934 (* 2.0 l_0_12_157)))
 (let ((?x59048 (* ?x58934 l_0_12_168)))
 (let ((?x58931 (* 2.0 l_0_12_156)))
 (let ((?x59046 (* ?x58931 l_0_12_167)))
 (let ((?x58928 (* 2.0 l_0_12_155)))
 (let ((?x59044 (* ?x58928 l_0_12_166)))
 (let ((?x64331 (- (- (- (+ (+ (+ (+ ?x59044 ?x59046) ?x59048) ?x59050) ?x59052) ?x59054) ?x59056) ?x59058)))
 (let ((?x64338 (- (- (- (- (- (- (- ?x64331 ?x59060) ?x59062) ?x41927) ?x41924) ?x64268) ?x64270) ?x64272)))
 (let ((?x64351 (+ (+ (+ (+ (+ (+ (+ ?x64338 ?x64339) ?x64341) ?x64343) ?x64345) ?x64347) ?x64349) ?x61407)))
 (= (+ (+ (+ (+ ?x64351 ?x61409) ?x61411) ?x61413) ?x61415) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61377 (* 2.0 l_0_12_303)))
 (let ((?x61453 (* ?x61377 l_0_12_321)))
 (let ((?x61374 (* 2.0 l_0_12_302)))
 (let ((?x61451 (* ?x61374 l_0_12_320)))
 (let ((?x61371 (* 2.0 l_0_12_301)))
 (let ((?x61449 (* ?x61371 l_0_12_319)))
 (let ((?x61368 (* 2.0 l_0_12_300)))
 (let ((?x61447 (* ?x61368 l_0_12_318)))
 (let ((?x61365 (* 2.0 l_0_12_299)))
 (let ((?x61445 (* ?x61365 l_0_12_317)))
 (let ((?x61965 (* 2.0 l_0_12_273)))
 (let ((?x61966 (* ?x61965 l_0_12_286)))
 (let ((?x61962 (* 2.0 l_0_12_272)))
 (let ((?x61963 (* ?x61962 l_0_12_285)))
 (let ((?x61959 (* 2.0 l_0_12_271)))
 (let ((?x61960 (* ?x61959 l_0_12_284)))
 (let ((?x61956 (* 2.0 l_0_12_270)))
 (let ((?x61957 (* ?x61956 l_0_12_283)))
 (let ((?x61953 (* 2.0 l_0_12_269)))
 (let ((?x61954 (* ?x61953 l_0_12_282)))
 (let ((?x61950 (* 2.0 l_0_12_268)))
 (let ((?x61951 (* ?x61950 l_0_12_281)))
 (let ((?x58955 (* 2.0 l_0_12_195)))
 (let ((?x59164 (* ?x58955 l_0_12_213)))
 (let ((?x58952 (* 2.0 l_0_12_194)))
 (let ((?x59162 (* ?x58952 l_0_12_212)))
 (let ((?x58949 (* 2.0 l_0_12_193)))
 (let ((?x59160 (* ?x58949 l_0_12_211)))
 (let ((?x58946 (* 2.0 l_0_12_192)))
 (let ((?x59158 (* ?x58946 l_0_12_210)))
 (let ((?x58943 (* 2.0 l_0_12_191)))
 (let ((?x59156 (* ?x58943 l_0_12_209)))
 (let ((?x58940 (* 2.0 l_0_12_159)))
 (let ((?x59154 (* ?x58940 l_0_12_177)))
 (let ((?x58937 (* 2.0 l_0_12_158)))
 (let ((?x59152 (* ?x58937 l_0_12_176)))
 (let ((?x58934 (* 2.0 l_0_12_157)))
 (let ((?x59150 (* ?x58934 l_0_12_175)))
 (let ((?x58931 (* 2.0 l_0_12_156)))
 (let ((?x59148 (* ?x58931 l_0_12_174)))
 (let ((?x58928 (* 2.0 l_0_12_155)))
 (let ((?x59146 (* ?x58928 l_0_12_173)))
 (let ((?x64381 (- (- (- (+ (+ (+ (+ ?x59146 ?x59148) ?x59150) ?x59152) ?x59154) ?x59156) ?x59158) ?x59160)))
 (let ((?x64387 (- (- (- (- ?x64381 ?x59162) ?x59164) (* (* 2.0 l_0_12_227) l_0_12_232)) (* (* 2.0 l_0_12_228) l_0_12_233))))
 (let ((?x64391 (- (- ?x64387 (* (* 2.0 l_0_12_229) l_0_12_234)) (* (* 2.0 l_0_12_230) l_0_12_235))))
 (let ((?x64396 (+ (+ (+ (- ?x64391 (* (* 2.0 l_0_12_231) l_0_12_236)) ?x61951) ?x61954) ?x61957)))
 (let ((?x64403 (+ (+ (+ (+ (+ (+ (+ ?x64396 ?x61960) ?x61963) ?x61966) ?x61445) ?x61447) ?x61449) ?x61451)))
 (= (+ ?x64403 ?x61453) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61507 (* l_0_12_309 l_0_12_309)))
 (let ((?x61505 (* l_0_12_308 l_0_12_308)))
 (let ((?x61503 (* l_0_12_307 l_0_12_307)))
 (let ((?x61501 (* l_0_12_306 l_0_12_306)))
 (let ((?x35814 (* l_0_12_305 l_0_12_305)))
 (let ((?x35817 (* l_0_12_304 l_0_12_304)))
 (let ((?x59262 (* l_0_12_201 l_0_12_201)))
 (let ((?x59260 (* l_0_12_200 l_0_12_200)))
 (let ((?x59256 (* l_0_12_199 l_0_12_199)))
 (let ((?x59254 (* l_0_12_198 l_0_12_198)))
 (let ((?x59252 (* l_0_12_197 l_0_12_197)))
 (let ((?x59250 (* l_0_12_196 l_0_12_196)))
 (let ((?x59242 (* l_0_12_165 l_0_12_165)))
 (let ((?x59227 (* l_0_12_164 l_0_12_164)))
 (let ((?x59224 (* l_0_12_163 l_0_12_163)))
 (let ((?x59220 (* l_0_12_162 l_0_12_162)))
 (let ((?x64425 (+ (+ (* l_0_12_160 l_0_12_160) (* l_0_12_161 l_0_12_161)) ?x59220)))
 (let ((?x64432 (- (- (- (- (+ (+ (+ ?x64425 ?x59224) ?x59227) ?x59242) ?x59250) ?x59252) ?x59254) ?x59256)))
 (let ((?x64439 (+ (+ (+ (+ (+ (- (- ?x64432 ?x59260) ?x59262) ?x35817) ?x35814) ?x61501) ?x61503) ?x61505)))
 (= (+ ?x64439 ?x61507) 0.0)))))))))))))))))))))
(assert
 (let ((?x61532 (* 2.0 l_0_12_309)))
 (let ((?x61533 (* ?x61532 l_0_12_315)))
 (let ((?x61529 (* 2.0 l_0_12_308)))
 (let ((?x61530 (* ?x61529 l_0_12_314)))
 (let ((?x61526 (* 2.0 l_0_12_307)))
 (let ((?x61527 (* ?x61526 l_0_12_313)))
 (let ((?x61523 (* 2.0 l_0_12_306)))
 (let ((?x61524 (* ?x61523 l_0_12_312)))
 (let ((?x61520 (* 2.0 l_0_12_305)))
 (let ((?x61521 (* ?x61520 l_0_12_311)))
 (let ((?x61517 (* 2.0 l_0_12_304)))
 (let ((?x61518 (* ?x61517 l_0_12_310)))
 (let ((?x64307 (* l_0_12_273 l_0_12_273)))
 (let ((?x64305 (* l_0_12_272 l_0_12_272)))
 (let ((?x64303 (* l_0_12_271 l_0_12_271)))
 (let ((?x64301 (* l_0_12_270 l_0_12_270)))
 (let ((?x64299 (* l_0_12_269 l_0_12_269)))
 (let ((?x64297 (* l_0_12_268 l_0_12_268)))
 (let ((?x59377 (* 2.0 l_0_12_201)))
 (let ((?x59378 (* ?x59377 l_0_12_207)))
 (let ((?x59374 (* 2.0 l_0_12_200)))
 (let ((?x59375 (* ?x59374 l_0_12_206)))
 (let ((?x59368 (* 2.0 l_0_12_199)))
 (let ((?x59369 (* ?x59368 l_0_12_205)))
 (let ((?x59365 (* 2.0 l_0_12_198)))
 (let ((?x59366 (* ?x59365 l_0_12_204)))
 (let ((?x59362 (* 2.0 l_0_12_197)))
 (let ((?x59363 (* ?x59362 l_0_12_203)))
 (let ((?x59359 (* 2.0 l_0_12_196)))
 (let ((?x59360 (* ?x59359 l_0_12_202)))
 (let ((?x59349 (* 2.0 l_0_12_165)))
 (let ((?x59350 (* ?x59349 l_0_12_171)))
 (let ((?x59346 (* 2.0 l_0_12_164)))
 (let ((?x59347 (* ?x59346 l_0_12_170)))
 (let ((?x59343 (* 2.0 l_0_12_163)))
 (let ((?x59344 (* ?x59343 l_0_12_169)))
 (let ((?x59340 (* 2.0 l_0_12_162)))
 (let ((?x59341 (* ?x59340 l_0_12_168)))
 (let ((?x59337 (* 2.0 l_0_12_161)))
 (let ((?x59338 (* ?x59337 l_0_12_167)))
 (let ((?x59334 (* 2.0 l_0_12_160)))
 (let ((?x59335 (* ?x59334 l_0_12_166)))
 (let ((?x64453 (- (- (+ (+ (+ (+ (+ ?x59335 ?x59338) ?x59341) ?x59344) ?x59347) ?x59350) ?x59360) ?x59363)))
 (let ((?x64460 (- (- (- (- (- (- (- ?x64453 ?x59366) ?x59369) ?x59375) ?x59378) ?x64297) ?x64299) ?x64301)))
 (let ((?x64467 (+ (+ (+ (+ (- (- (- ?x64460 ?x64303) ?x64305) ?x64307) ?x61518) ?x61521) ?x61524) ?x61527)))
 (= (+ (+ ?x64467 ?x61530) ?x61533) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61532 (* 2.0 l_0_12_309)))
 (let ((?x61553 (* ?x61532 l_0_12_322)))
 (let ((?x61529 (* 2.0 l_0_12_308)))
 (let ((?x61551 (* ?x61529 l_0_12_321)))
 (let ((?x61526 (* 2.0 l_0_12_307)))
 (let ((?x61549 (* ?x61526 l_0_12_320)))
 (let ((?x61523 (* 2.0 l_0_12_306)))
 (let ((?x61547 (* ?x61523 l_0_12_319)))
 (let ((?x61520 (* 2.0 l_0_12_305)))
 (let ((?x61545 (* ?x61520 l_0_12_318)))
 (let ((?x61517 (* 2.0 l_0_12_304)))
 (let ((?x61543 (* ?x61517 l_0_12_317)))
 (let ((?x64493 (* l_0_12_237 l_0_12_237)))
 (let ((?x64491 (* l_0_12_236 l_0_12_236)))
 (let ((?x64489 (* l_0_12_235 l_0_12_235)))
 (let ((?x64487 (* l_0_12_234 l_0_12_234)))
 (let ((?x64485 (* l_0_12_233 l_0_12_233)))
 (let ((?x42541 (* l_0_12_232 l_0_12_232)))
 (let ((?x59377 (* 2.0 l_0_12_201)))
 (let ((?x59534 (* ?x59377 l_0_12_214)))
 (let ((?x59374 (* 2.0 l_0_12_200)))
 (let ((?x59532 (* ?x59374 l_0_12_213)))
 (let ((?x59368 (* 2.0 l_0_12_199)))
 (let ((?x59528 (* ?x59368 l_0_12_212)))
 (let ((?x59365 (* 2.0 l_0_12_198)))
 (let ((?x59526 (* ?x59365 l_0_12_211)))
 (let ((?x59362 (* 2.0 l_0_12_197)))
 (let ((?x59524 (* ?x59362 l_0_12_210)))
 (let ((?x59359 (* 2.0 l_0_12_196)))
 (let ((?x59522 (* ?x59359 l_0_12_209)))
 (let ((?x59349 (* 2.0 l_0_12_165)))
 (let ((?x59514 (* ?x59349 l_0_12_178)))
 (let ((?x59346 (* 2.0 l_0_12_164)))
 (let ((?x59512 (* ?x59346 l_0_12_177)))
 (let ((?x59343 (* 2.0 l_0_12_163)))
 (let ((?x59510 (* ?x59343 l_0_12_176)))
 (let ((?x59340 (* 2.0 l_0_12_162)))
 (let ((?x59508 (* ?x59340 l_0_12_175)))
 (let ((?x59337 (* 2.0 l_0_12_161)))
 (let ((?x59506 (* ?x59337 l_0_12_174)))
 (let ((?x59334 (* 2.0 l_0_12_160)))
 (let ((?x59504 (* ?x59334 l_0_12_173)))
 (let ((?x42652 (- (- (+ (+ (+ (+ (+ ?x59504 ?x59506) ?x59508) ?x59510) ?x59512) ?x59514) ?x59522) ?x59524)))
 (let ((?x64488 (- (- (- (- (- (- (- ?x42652 ?x59526) ?x59528) ?x59532) ?x59534) ?x42541) ?x64485) ?x64487)))
 (let ((?x64498 (+ (+ (+ (+ (- (- (- ?x64488 ?x64489) ?x64491) ?x64493) ?x61543) ?x61545) ?x61547) ?x61549)))
 (= (+ (+ ?x64498 ?x61551) ?x61553) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61569 (* l_0_12_316 l_0_12_316)))
 (let ((?x61567 (* l_0_12_315 l_0_12_315)))
 (let ((?x61565 (* l_0_12_314 l_0_12_314)))
 (let ((?x61563 (* l_0_12_313 l_0_12_313)))
 (let ((?x36358 (* l_0_12_312 l_0_12_312)))
 (let ((?x36366 (* l_0_12_311 l_0_12_311)))
 (let ((?x36401 (* l_0_12_310 l_0_12_310)))
 (let ((?x61965 (* 2.0 l_0_12_273)))
 (let ((?x64349 (* ?x61965 l_0_12_279)))
 (let ((?x61962 (* 2.0 l_0_12_272)))
 (let ((?x64347 (* ?x61962 l_0_12_278)))
 (let ((?x61959 (* 2.0 l_0_12_271)))
 (let ((?x64345 (* ?x61959 l_0_12_277)))
 (let ((?x61956 (* 2.0 l_0_12_270)))
 (let ((?x64343 (* ?x61956 l_0_12_276)))
 (let ((?x61953 (* 2.0 l_0_12_269)))
 (let ((?x64341 (* ?x61953 l_0_12_275)))
 (let ((?x61950 (* 2.0 l_0_12_268)))
 (let ((?x64339 (* ?x61950 l_0_12_274)))
 (let ((?x59636 (* l_0_12_208 l_0_12_208)))
 (let ((?x59634 (* l_0_12_207 l_0_12_207)))
 (let ((?x59632 (* l_0_12_206 l_0_12_206)))
 (let ((?x59630 (* l_0_12_205 l_0_12_205)))
 (let ((?x59628 (* l_0_12_204 l_0_12_204)))
 (let ((?x59626 (* l_0_12_203 l_0_12_203)))
 (let ((?x59624 (* l_0_12_202 l_0_12_202)))
 (let ((?x59622 (* l_0_12_172 l_0_12_172)))
 (let ((?x59620 (* l_0_12_171 l_0_12_171)))
 (let ((?x59618 (* l_0_12_170 l_0_12_170)))
 (let ((?x59616 (* l_0_12_169 l_0_12_169)))
 (let ((?x59614 (* l_0_12_168 l_0_12_168)))
 (let ((?x64520 (+ (+ (* l_0_12_166 l_0_12_166) (* l_0_12_167 l_0_12_167)) ?x59614)))
 (let ((?x64527 (- (- (- (+ (+ (+ (+ ?x64520 ?x59616) ?x59618) ?x59620) ?x59622) ?x59624) ?x59626) ?x59628)))
 (let ((?x64534 (- (- (- (- (- (- (- ?x64527 ?x59630) ?x59632) ?x59634) ?x59636) ?x64339) ?x64341) ?x64343)))
 (let ((?x64541 (+ (+ (+ (+ (- (- (- ?x64534 ?x64345) ?x64347) ?x64349) ?x36401) ?x36366) ?x36358) ?x61563)))
 (= (+ (+ (+ ?x64541 ?x61565) ?x61567) ?x61569) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61621 (* l_0_12_324 l_0_12_324)))
 (let ((?x36896 (* l_0_12_323 l_0_12_323)))
 (let ((?x36880 (* l_0_12_322 l_0_12_322)))
 (let ((?x36868 (* l_0_12_321 l_0_12_321)))
 (let ((?x36856 (* l_0_12_320 l_0_12_320)))
 (let ((?x36839 (* l_0_12_319 l_0_12_319)))
 (let ((?x37041 (* l_0_12_318 l_0_12_318)))
 (let ((?x37074 (* l_0_12_317 l_0_12_317)))
 (let ((?x59949 (* l_0_12_216 l_0_12_216)))
 (let ((?x59947 (* l_0_12_215 l_0_12_215)))
 (let ((?x59945 (* l_0_12_214 l_0_12_214)))
 (let ((?x59943 (* l_0_12_213 l_0_12_213)))
 (let ((?x59941 (* l_0_12_212 l_0_12_212)))
 (let ((?x59939 (* l_0_12_211 l_0_12_211)))
 (let ((?x59937 (* l_0_12_210 l_0_12_210)))
 (let ((?x59935 (* l_0_12_209 l_0_12_209)))
 (let ((?x59933 (* l_0_12_180 l_0_12_180)))
 (let ((?x59931 (* l_0_12_179 l_0_12_179)))
 (let ((?x59929 (* l_0_12_178 l_0_12_178)))
 (let ((?x59927 (* l_0_12_177 l_0_12_177)))
 (let ((?x59906 (* l_0_12_176 l_0_12_176)))
 (let ((?x59902 (* l_0_12_175 l_0_12_175)))
 (let ((?x42847 (+ (+ (* l_0_12_173 l_0_12_173) (* l_0_12_174 l_0_12_174)) ?x59902)))
 (let ((?x42813 (- (- (+ (+ (+ (+ (+ ?x42847 ?x59906) ?x59927) ?x59929) ?x59931) ?x59933) ?x59935) ?x59937)))
 (let ((?x64561 (- (- (- (- (- (- (- ?x42813 ?x59939) ?x59941) ?x59943) ?x59945) ?x59947) ?x59949) (* (* 2.0 l_0_12_232) l_0_12_245))))
 (let ((?x64565 (- (- ?x64561 (* (* 2.0 l_0_12_233) l_0_12_246)) (* (* 2.0 l_0_12_234) l_0_12_247))))
 (let ((?x64569 (- (- ?x64565 (* (* 2.0 l_0_12_235) l_0_12_248)) (* (* 2.0 l_0_12_236) l_0_12_249))))
 (let ((?x64574 (+ (+ (+ (- ?x64569 (* (* 2.0 l_0_12_237) l_0_12_250)) ?x37074) ?x37041) ?x36839)))
 (= (+ (+ (+ (+ (+ ?x64574 ?x36856) ?x36868) ?x36880) ?x36896) ?x61621) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x42986 (- (- (* (- l_0_12_218) l_0_12_218) (* l_0_12_219 l_0_12_219)) (* (* 2.0 l_0_12_326) l_0_12_353))))
 (let ((?x64593 (- (- ?x42986 (* (* 2.0 l_0_12_327) l_0_12_354)) (* (* 2.0 l_0_12_362) l_0_12_389))))
 (let ((?x64597 (- (- ?x64593 (* (* 2.0 l_0_12_363) l_0_12_390)) (* (* 2.0 l_0_12_398) l_0_12_425))))
 (let ((?x64601 (- (- ?x64597 (* (* 2.0 l_0_12_399) l_0_12_426)) (* (* 2.0 l_0_12_434) l_0_12_461))))
 (= (- ?x64601 (* (* 2.0 l_0_12_435) l_0_12_462)) 0.0))))))
(assert
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x57287 (* ?x57286 l_0_12_282)))
 (let ((?x57283 (* 2.0 l_0_12_254)))
 (let ((?x57284 (* ?x57283 l_0_12_281)))
 (let ((?x64641 (- (* (* (- 2.0) l_0_12_218) l_0_12_227) (* (* 2.0 l_0_12_219) l_0_12_228))))
 (let ((?x64647 (- (- (+ (+ ?x64641 ?x57284) ?x57287) (* (* 2.0 l_0_12_335) l_0_12_353)) (* (* 2.0 l_0_12_336) l_0_12_354))))
 (let ((?x64651 (- (- ?x64647 (* (* 2.0 l_0_12_337) l_0_12_355)) (* (* 2.0 l_0_12_338) l_0_12_356))))
 (let ((?x64655 (- (- ?x64651 (* (* 2.0 l_0_12_339) l_0_12_357)) (* (* 2.0 l_0_12_371) l_0_12_389))))
 (let ((?x64659 (- (- ?x64655 (* (* 2.0 l_0_12_372) l_0_12_390)) (* (* 2.0 l_0_12_373) l_0_12_391))))
 (let ((?x64663 (- (- ?x64659 (* (* 2.0 l_0_12_374) l_0_12_392)) (* (* 2.0 l_0_12_375) l_0_12_393))))
 (let ((?x64667 (- (- ?x64663 (* (* 2.0 l_0_12_407) l_0_12_425)) (* (* 2.0 l_0_12_408) l_0_12_426))))
 (let ((?x64671 (- (- ?x64667 (* (* 2.0 l_0_12_409) l_0_12_427)) (* (* 2.0 l_0_12_410) l_0_12_428))))
 (let ((?x64675 (- (- ?x64671 (* (* 2.0 l_0_12_411) l_0_12_429)) (* (* 2.0 l_0_12_443) l_0_12_461))))
 (let ((?x64679 (- (- ?x64675 (* (* 2.0 l_0_12_444) l_0_12_462)) (* (* 2.0 l_0_12_445) l_0_12_463))))
 (let ((?x64683 (- (- ?x64679 (* (* 2.0 l_0_12_446) l_0_12_464)) (* (* 2.0 l_0_12_447) l_0_12_465))))
 (= ?x64683 0.0)))))))))))))))))
(assert
 (let ((?x64785 (* l_0_12_468 l_0_12_468)))
 (let ((?x64783 (* l_0_12_467 l_0_12_467)))
 (let ((?x64781 (* l_0_12_466 l_0_12_466)))
 (let ((?x64779 (* l_0_12_465 l_0_12_465)))
 (let ((?x64777 (* l_0_12_464 l_0_12_464)))
 (let ((?x64775 (* l_0_12_463 l_0_12_463)))
 (let ((?x64773 (* l_0_12_462 l_0_12_462)))
 (let ((?x64771 (* l_0_12_461 l_0_12_461)))
 (let ((?x64769 (* l_0_12_432 l_0_12_432)))
 (let ((?x64767 (* l_0_12_431 l_0_12_431)))
 (let ((?x64765 (* l_0_12_430 l_0_12_430)))
 (let ((?x64763 (* l_0_12_429 l_0_12_429)))
 (let ((?x64761 (* l_0_12_428 l_0_12_428)))
 (let ((?x64759 (* l_0_12_427 l_0_12_427)))
 (let ((?x64757 (* l_0_12_426 l_0_12_426)))
 (let ((?x64755 (* l_0_12_425 l_0_12_425)))
 (let ((?x64753 (* l_0_12_396 l_0_12_396)))
 (let ((?x64751 (* l_0_12_395 l_0_12_395)))
 (let ((?x64749 (* l_0_12_394 l_0_12_394)))
 (let ((?x64747 (* l_0_12_393 l_0_12_393)))
 (let ((?x64745 (* l_0_12_392 l_0_12_392)))
 (let ((?x64743 (* l_0_12_391 l_0_12_391)))
 (let ((?x64741 (* l_0_12_390 l_0_12_390)))
 (let ((?x64739 (* l_0_12_389 l_0_12_389)))
 (let ((?x64737 (* l_0_12_360 l_0_12_360)))
 (let ((?x64735 (* l_0_12_359 l_0_12_359)))
 (let ((?x64733 (* l_0_12_358 l_0_12_358)))
 (let ((?x64731 (* l_0_12_357 l_0_12_357)))
 (let ((?x64729 (* l_0_12_356 l_0_12_356)))
 (let ((?x64727 (* l_0_12_355 l_0_12_355)))
 (let ((?x64725 (* l_0_12_354 l_0_12_354)))
 (let ((?x64723 (* l_0_12_353 l_0_12_353)))
 (let ((?x64722 (- (* (* (- 2.0) l_0_12_218) l_0_12_245) (* (* 2.0 l_0_12_219) l_0_12_246))))
 (let ((?x64736 (- (- (- (- (- (- (- ?x64722 ?x64723) ?x64725) ?x64727) ?x64729) ?x64731) ?x64733) ?x64735)))
 (let ((?x64750 (- (- (- (- (- (- (- ?x64736 ?x64737) ?x64739) ?x64741) ?x64743) ?x64745) ?x64747) ?x64749)))
 (let ((?x64764 (- (- (- (- (- (- (- ?x64750 ?x64751) ?x64753) ?x64755) ?x64757) ?x64759) ?x64761) ?x64763)))
 (let ((?x64778 (- (- (- (- (- (- (- ?x64764 ?x64765) ?x64767) ?x64769) ?x64771) ?x64773) ?x64775) ?x64777)))
 (= (- (- (- (- ?x64778 ?x64779) ?x64781) ?x64783) ?x64785) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x61823 (* 2.0 l_0_12_267)))
 (let ((?x61824 (* ?x61823 l_0_12_285)))
 (let ((?x61820 (* 2.0 l_0_12_266)))
 (let ((?x61821 (* ?x61820 l_0_12_284)))
 (let ((?x61817 (* 2.0 l_0_12_265)))
 (let ((?x61818 (* ?x61817 l_0_12_283)))
 (let ((?x61814 (* 2.0 l_0_12_264)))
 (let ((?x61815 (* ?x61814 l_0_12_282)))
 (let ((?x61811 (* 2.0 l_0_12_263)))
 (let ((?x61812 (* ?x61811 l_0_12_281)))
 (let ((?x64842 (* l_0_12_231 l_0_12_231)))
 (let ((?x64840 (* l_0_12_230 l_0_12_230)))
 (let ((?x64838 (* l_0_12_229 l_0_12_229)))
 (let ((?x64839 (- (- (* (- l_0_12_227) l_0_12_227) (* l_0_12_228 l_0_12_228)) ?x64838)))
 (let ((?x64848 (+ (+ (+ (+ (+ (- (- ?x64839 ?x64840) ?x64842) ?x61812) ?x61815) ?x61818) ?x61821) ?x61824)))
 (= ?x64848 0.0)))))))))))))))))
(assert
 (let ((?x62077 (* l_0_12_288 l_0_12_288)))
 (let ((?x62075 (* l_0_12_287 l_0_12_287)))
 (let ((?x62073 (* l_0_12_286 l_0_12_286)))
 (let ((?x62071 (* l_0_12_285 l_0_12_285)))
 (let ((?x62069 (* l_0_12_284 l_0_12_284)))
 (let ((?x62067 (* l_0_12_283 l_0_12_283)))
 (let ((?x62065 (* l_0_12_282 l_0_12_282)))
 (let ((?x62063 (* l_0_12_281 l_0_12_281)))
 (let ((?x43874 (- (* (* (- 2.0) l_0_12_227) l_0_12_245) (* (* 2.0 l_0_12_228) l_0_12_246))))
 (let ((?x64863 (- (- ?x43874 (* (* 2.0 l_0_12_229) l_0_12_247)) (* (* 2.0 l_0_12_230) l_0_12_248))))
 (let ((?x64868 (+ (+ (+ (- ?x64863 (* (* 2.0 l_0_12_231) l_0_12_249)) ?x62063) ?x62065) ?x62067)))
 (= (+ (+ (+ (+ (+ ?x64868 ?x62069) ?x62071) ?x62073) ?x62075) ?x62077) 0.0)))))))))))))
(assert
 (let ((?x64903 (* l_0_12_252 l_0_12_252)))
 (let ((?x64901 (* l_0_12_251 l_0_12_251)))
 (let ((?x64899 (* l_0_12_250 l_0_12_250)))
 (let ((?x64897 (* l_0_12_249 l_0_12_249)))
 (let ((?x64895 (* l_0_12_248 l_0_12_248)))
 (let ((?x64893 (* l_0_12_247 l_0_12_247)))
 (let ((?x64894 (- (- (* (- l_0_12_245) l_0_12_245) (* l_0_12_246 l_0_12_246)) ?x64893)))
 (= (- (- (- (- (- ?x64894 ?x64895) ?x64897) ?x64899) ?x64901) ?x64903) 0.0)))))))))
(assert
 (let ((?x64925 (- (- (* (- l_0_12_254) l_0_12_254) (* l_0_12_255 l_0_12_255)) (* (* 2.0 l_0_12_326) l_0_12_346))))
 (let ((?x64929 (- (- ?x64925 (* (* 2.0 l_0_12_327) l_0_12_347)) (* (* 2.0 l_0_12_362) l_0_12_382))))
 (let ((?x64933 (- (- ?x64929 (* (* 2.0 l_0_12_363) l_0_12_383)) (* (* 2.0 l_0_12_398) l_0_12_418))))
 (let ((?x64937 (- (- ?x64933 (* (* 2.0 l_0_12_399) l_0_12_419)) (* (* 2.0 l_0_12_434) l_0_12_454))))
 (= (- ?x64937 (* (* 2.0 l_0_12_435) l_0_12_455)) 0.0))))))
(assert
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x64966 (* ?x57286 l_0_12_257)))
 (let ((?x64969 (- (- (* (* (- 2.0) l_0_12_254) l_0_12_256) ?x64966) (* (* 2.0 l_0_12_328) l_0_12_346))))
 (let ((?x64973 (- (- ?x64969 (* (* 2.0 l_0_12_329) l_0_12_347)) (* (* 2.0 l_0_12_330) l_0_12_348))))
 (let ((?x64977 (- (- ?x64973 (* (* 2.0 l_0_12_364) l_0_12_382)) (* (* 2.0 l_0_12_365) l_0_12_383))))
 (let ((?x64981 (- (- ?x64977 (* (* 2.0 l_0_12_366) l_0_12_384)) (* (* 2.0 l_0_12_400) l_0_12_418))))
 (let ((?x64985 (- (- ?x64981 (* (* 2.0 l_0_12_401) l_0_12_419)) (* (* 2.0 l_0_12_402) l_0_12_420))))
 (let ((?x64989 (- (- ?x64985 (* (* 2.0 l_0_12_436) l_0_12_454)) (* (* 2.0 l_0_12_437) l_0_12_455))))
 (= (- ?x64989 (* (* 2.0 l_0_12_438) l_0_12_456)) 0.0))))))))))
(assert
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x65039 (* ?x57286 l_0_12_275)))
 (let ((?x65037 (* ?x57286 l_0_12_264)))
 (let ((?x65036 (+ (* (* (- 2.0) l_0_12_254) l_0_12_263) (* (* 2.0 l_0_12_254) l_0_12_274))))
 (let ((?x65044 (- (- (+ (- ?x65036 ?x65037) ?x65039) (* (* 2.0 l_0_12_335) l_0_12_346)) (* (* 2.0 l_0_12_336) l_0_12_347))))
 (let ((?x65048 (- (- ?x65044 (* (* 2.0 l_0_12_337) l_0_12_348)) (* (* 2.0 l_0_12_338) l_0_12_349))))
 (let ((?x65052 (- (- ?x65048 (* (* 2.0 l_0_12_339) l_0_12_350)) (* (* 2.0 l_0_12_371) l_0_12_382))))
 (let ((?x65056 (- (- ?x65052 (* (* 2.0 l_0_12_372) l_0_12_383)) (* (* 2.0 l_0_12_373) l_0_12_384))))
 (let ((?x65060 (- (- ?x65056 (* (* 2.0 l_0_12_374) l_0_12_385)) (* (* 2.0 l_0_12_375) l_0_12_386))))
 (let ((?x65064 (- (- ?x65060 (* (* 2.0 l_0_12_407) l_0_12_418)) (* (* 2.0 l_0_12_408) l_0_12_419))))
 (let ((?x65068 (- (- ?x65064 (* (* 2.0 l_0_12_409) l_0_12_420)) (* (* 2.0 l_0_12_410) l_0_12_421))))
 (let ((?x65072 (- (- ?x65068 (* (* 2.0 l_0_12_411) l_0_12_422)) (* (* 2.0 l_0_12_443) l_0_12_454))))
 (let ((?x65076 (- (- ?x65072 (* (* 2.0 l_0_12_444) l_0_12_455)) (* (* 2.0 l_0_12_445) l_0_12_456))))
 (let ((?x65080 (- (- ?x65076 (* (* 2.0 l_0_12_446) l_0_12_457)) (* (* 2.0 l_0_12_447) l_0_12_458))))
 (= ?x65080 0.0))))))))))))))))
(assert
 (let ((?x65223 (* l_0_12_460 l_0_12_460)))
 (let ((?x65221 (* l_0_12_459 l_0_12_459)))
 (let ((?x65219 (* l_0_12_458 l_0_12_458)))
 (let ((?x65217 (* l_0_12_457 l_0_12_457)))
 (let ((?x65215 (* l_0_12_456 l_0_12_456)))
 (let ((?x65213 (* l_0_12_455 l_0_12_455)))
 (let ((?x65211 (* l_0_12_454 l_0_12_454)))
 (let ((?x65209 (* l_0_12_424 l_0_12_424)))
 (let ((?x65207 (* l_0_12_423 l_0_12_423)))
 (let ((?x65205 (* l_0_12_422 l_0_12_422)))
 (let ((?x65203 (* l_0_12_421 l_0_12_421)))
 (let ((?x65201 (* l_0_12_420 l_0_12_420)))
 (let ((?x65199 (* l_0_12_419 l_0_12_419)))
 (let ((?x65197 (* l_0_12_418 l_0_12_418)))
 (let ((?x65195 (* l_0_12_388 l_0_12_388)))
 (let ((?x65193 (* l_0_12_387 l_0_12_387)))
 (let ((?x65191 (* l_0_12_386 l_0_12_386)))
 (let ((?x65189 (* l_0_12_385 l_0_12_385)))
 (let ((?x65187 (* l_0_12_384 l_0_12_384)))
 (let ((?x65185 (* l_0_12_383 l_0_12_383)))
 (let ((?x65183 (* l_0_12_382 l_0_12_382)))
 (let ((?x65181 (* l_0_12_352 l_0_12_352)))
 (let ((?x65179 (* l_0_12_351 l_0_12_351)))
 (let ((?x65177 (* l_0_12_350 l_0_12_350)))
 (let ((?x65175 (* l_0_12_349 l_0_12_349)))
 (let ((?x65173 (* l_0_12_348 l_0_12_348)))
 (let ((?x65171 (* l_0_12_347 l_0_12_347)))
 (let ((?x65169 (* l_0_12_346 l_0_12_346)))
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x65039 (* ?x57286 l_0_12_275)))
 (let ((?x65174 (- (- (- (- (* (* (- 2.0) l_0_12_254) l_0_12_274) ?x65039) ?x65169) ?x65171) ?x65173)))
 (let ((?x65188 (- (- (- (- (- (- (- ?x65174 ?x65175) ?x65177) ?x65179) ?x65181) ?x65183) ?x65185) ?x65187)))
 (let ((?x65202 (- (- (- (- (- (- (- ?x65188 ?x65189) ?x65191) ?x65193) ?x65195) ?x65197) ?x65199) ?x65201)))
 (let ((?x65216 (- (- (- (- (- (- (- ?x65202 ?x65203) ?x65205) ?x65207) ?x65209) ?x65211) ?x65213) ?x65215)))
 (= (- (- (- (- ?x65216 ?x65217) ?x65219) ?x65221) ?x65223) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x65265 (* l_0_12_258 l_0_12_258)))
 (let ((?x65266 (- (- (* (- l_0_12_256) l_0_12_256) (* l_0_12_257 l_0_12_257)) ?x65265)))
 (= ?x65266 0.0))))
(assert
 (let ((?x57924 (* 2.0 l_0_12_258)))
 (let ((?x65285 (* ?x57924 l_0_12_276)))
 (let ((?x65283 (* ?x57924 l_0_12_265)))
 (let ((?x57921 (* 2.0 l_0_12_257)))
 (let ((?x65281 (* ?x57921 l_0_12_275)))
 (let ((?x65279 (* ?x57921 l_0_12_264)))
 (let ((?x65278 (+ (* (* (- 2.0) l_0_12_256) l_0_12_263) (* (* 2.0 l_0_12_256) l_0_12_274))))
 (= (+ (- (+ (- ?x65278 ?x65279) ?x65281) ?x65283) ?x65285) 0.0)))))))))
(assert
 (let ((?x57924 (* 2.0 l_0_12_258)))
 (let ((?x65285 (* ?x57924 l_0_12_276)))
 (let ((?x57921 (* 2.0 l_0_12_257)))
 (let ((?x65281 (* ?x57921 l_0_12_275)))
 (= (- (- (* (* (- 2.0) l_0_12_256) l_0_12_274) ?x65281) ?x65285) 0.0))))))
(assert
 (let ((?x65328 (* l_0_12_267 l_0_12_267)))
 (let ((?x61823 (* 2.0 l_0_12_267)))
 (let ((?x65326 (* ?x61823 l_0_12_278)))
 (let ((?x65324 (* l_0_12_266 l_0_12_266)))
 (let ((?x61820 (* 2.0 l_0_12_266)))
 (let ((?x65322 (* ?x61820 l_0_12_277)))
 (let ((?x65320 (* l_0_12_265 l_0_12_265)))
 (let ((?x61817 (* 2.0 l_0_12_265)))
 (let ((?x65318 (* ?x61817 l_0_12_276)))
 (let ((?x65316 (* l_0_12_264 l_0_12_264)))
 (let ((?x61814 (* 2.0 l_0_12_264)))
 (let ((?x65314 (* ?x61814 l_0_12_275)))
 (let ((?x65312 (* l_0_12_263 l_0_12_263)))
 (let ((?x65319 (+ (- (+ (- (* (* 2.0 l_0_12_263) l_0_12_274) ?x65312) ?x65314) ?x65316) ?x65318)))
 (= (- (+ (- (+ (- ?x65319 ?x65320) ?x65322) ?x65324) ?x65326) ?x65328) 0.0))))))))))))))))
(assert
 (let ((?x65375 (* l_0_12_280 l_0_12_280)))
 (let ((?x65373 (* l_0_12_279 l_0_12_279)))
 (let ((?x65371 (* l_0_12_278 l_0_12_278)))
 (let ((?x65369 (* l_0_12_277 l_0_12_277)))
 (let ((?x65367 (* l_0_12_276 l_0_12_276)))
 (let ((?x65365 (* l_0_12_275 l_0_12_275)))
 (let ((?x65363 (* l_0_12_274 l_0_12_274)))
 (let ((?x61823 (* 2.0 l_0_12_267)))
 (let ((?x65326 (* ?x61823 l_0_12_278)))
 (let ((?x61820 (* 2.0 l_0_12_266)))
 (let ((?x65322 (* ?x61820 l_0_12_277)))
 (let ((?x61817 (* 2.0 l_0_12_265)))
 (let ((?x65318 (* ?x61817 l_0_12_276)))
 (let ((?x61814 (* 2.0 l_0_12_264)))
 (let ((?x65314 (* ?x61814 l_0_12_275)))
 (let ((?x65362 (- (- (- (- (* (* (- 2.0) l_0_12_263) l_0_12_274) ?x65314) ?x65318) ?x65322) ?x65326)))
 (let ((?x65376 (+ (+ (+ (+ (+ (+ (+ ?x65362 ?x65363) ?x65365) ?x65367) ?x65369) ?x65371) ?x65373) ?x65375)))
 (= ?x65376 0.0)))))))))))))))))))
(assert
 (let ((?x65375 (* l_0_12_280 l_0_12_280)))
 (let ((?x65373 (* l_0_12_279 l_0_12_279)))
 (let ((?x65371 (* l_0_12_278 l_0_12_278)))
 (let ((?x65369 (* l_0_12_277 l_0_12_277)))
 (let ((?x65367 (* l_0_12_276 l_0_12_276)))
 (let ((?x65389 (- (- (* (- l_0_12_274) l_0_12_274) (* l_0_12_275 l_0_12_275)) ?x65367)))
 (= (- (- (- (- ?x65389 ?x65369) ?x65371) ?x65373) ?x65375) 0.0))))))))
(assert
 (let ((?x44584 (- (+ (* l_0_12_254 l_0_12_254) (* l_0_12_255 l_0_12_255)) (* (* 2.0 l_0_12_326) l_0_12_335))))
 (let ((?x44572 (- (- ?x44584 (* (* 2.0 l_0_12_327) l_0_12_336)) (* (* 2.0 l_0_12_362) l_0_12_371))))
 (let ((?x44560 (- (- ?x44572 (* (* 2.0 l_0_12_363) l_0_12_372)) (* (* 2.0 l_0_12_398) l_0_12_407))))
 (let ((?x65399 (- (- ?x44560 (* (* 2.0 l_0_12_399) l_0_12_408)) (* (* 2.0 l_0_12_434) l_0_12_443))))
 (= (- ?x65399 (* (* 2.0 l_0_12_435) l_0_12_444)) 0.0))))))
(assert
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x64966 (* ?x57286 l_0_12_257)))
 (let ((?x65435 (- (+ (* (* 2.0 l_0_12_254) l_0_12_256) ?x64966) (* (* 2.0 l_0_12_328) l_0_12_335))))
 (let ((?x65439 (- (- ?x65435 (* (* 2.0 l_0_12_329) l_0_12_336)) (* (* 2.0 l_0_12_330) l_0_12_337))))
 (let ((?x65443 (- (- ?x65439 (* (* 2.0 l_0_12_364) l_0_12_371)) (* (* 2.0 l_0_12_365) l_0_12_372))))
 (let ((?x65447 (- (- ?x65443 (* (* 2.0 l_0_12_366) l_0_12_373)) (* (* 2.0 l_0_12_400) l_0_12_407))))
 (let ((?x65451 (- (- ?x65447 (* (* 2.0 l_0_12_401) l_0_12_408)) (* (* 2.0 l_0_12_402) l_0_12_409))))
 (let ((?x65455 (- (- ?x65451 (* (* 2.0 l_0_12_436) l_0_12_443)) (* (* 2.0 l_0_12_437) l_0_12_444))))
 (= (- ?x65455 (* (* 2.0 l_0_12_438) l_0_12_445)) 0.0))))))))))
(assert
 (let ((?x65527 (* l_0_12_447 l_0_12_447)))
 (let ((?x65525 (* l_0_12_446 l_0_12_446)))
 (let ((?x65523 (* l_0_12_445 l_0_12_445)))
 (let ((?x65521 (* l_0_12_444 l_0_12_444)))
 (let ((?x65519 (* l_0_12_443 l_0_12_443)))
 (let ((?x65517 (* l_0_12_411 l_0_12_411)))
 (let ((?x65515 (* l_0_12_410 l_0_12_410)))
 (let ((?x65513 (* l_0_12_409 l_0_12_409)))
 (let ((?x65511 (* l_0_12_408 l_0_12_408)))
 (let ((?x65509 (* l_0_12_407 l_0_12_407)))
 (let ((?x65507 (* l_0_12_375 l_0_12_375)))
 (let ((?x65505 (* l_0_12_374 l_0_12_374)))
 (let ((?x65503 (* l_0_12_373 l_0_12_373)))
 (let ((?x65501 (* l_0_12_372 l_0_12_372)))
 (let ((?x65499 (* l_0_12_371 l_0_12_371)))
 (let ((?x65497 (* l_0_12_339 l_0_12_339)))
 (let ((?x65495 (* l_0_12_338 l_0_12_338)))
 (let ((?x65493 (* l_0_12_337 l_0_12_337)))
 (let ((?x65491 (* l_0_12_336 l_0_12_336)))
 (let ((?x65489 (* l_0_12_335 l_0_12_335)))
 (let ((?x57286 (* 2.0 l_0_12_255)))
 (let ((?x65037 (* ?x57286 l_0_12_264)))
 (let ((?x65494 (- (- (- (+ (* (* 2.0 l_0_12_254) l_0_12_263) ?x65037) ?x65489) ?x65491) ?x65493)))
 (let ((?x65508 (- (- (- (- (- (- (- ?x65494 ?x65495) ?x65497) ?x65499) ?x65501) ?x65503) ?x65505) ?x65507)))
 (let ((?x65522 (- (- (- (- (- (- (- ?x65508 ?x65509) ?x65511) ?x65513) ?x65515) ?x65517) ?x65519) ?x65521)))
 (= (- (- (- ?x65522 ?x65523) ?x65525) ?x65527) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x65265 (* l_0_12_258 l_0_12_258)))
 (let ((?x65556 (+ (+ (* l_0_12_256 l_0_12_256) (* l_0_12_257 l_0_12_257)) ?x65265)))
 (= ?x65556 0.0))))
(assert
 (let ((?x57924 (* 2.0 l_0_12_258)))
 (let ((?x65283 (* ?x57924 l_0_12_265)))
 (let ((?x57921 (* 2.0 l_0_12_257)))
 (let ((?x65279 (* ?x57921 l_0_12_264)))
 (= (+ (+ (* (* 2.0 l_0_12_256) l_0_12_263) ?x65279) ?x65283) 0.0))))))
(assert
 (let ((?x65328 (* l_0_12_267 l_0_12_267)))
 (let ((?x65324 (* l_0_12_266 l_0_12_266)))
 (let ((?x65320 (* l_0_12_265 l_0_12_265)))
 (let ((?x65562 (+ (+ (* l_0_12_263 l_0_12_263) (* l_0_12_264 l_0_12_264)) ?x65320)))
 (= (+ (+ ?x65562 ?x65324) ?x65328) 0.0))))))
(assert
 (let ((?x44818 (- (* (* (- 2.0) l_0_12_326) l_0_12_328) (* (* 2.0 l_0_12_327) l_0_12_329))))
 (let ((?x65569 (- (- ?x44818 (* (* 2.0 l_0_12_362) l_0_12_364)) (* (* 2.0 l_0_12_363) l_0_12_365))))
 (let ((?x65573 (- (- ?x65569 (* (* 2.0 l_0_12_398) l_0_12_400)) (* (* 2.0 l_0_12_399) l_0_12_401))))
 (let ((?x65577 (- (- ?x65573 (* (* 2.0 l_0_12_434) l_0_12_436)) (* (* 2.0 l_0_12_435) l_0_12_437))))
 (= ?x65577 0.0))))))
(assert
 (let ((?x65628 (* l_0_12_438 l_0_12_438)))
 (let ((?x65626 (* l_0_12_437 l_0_12_437)))
 (let ((?x65624 (* l_0_12_436 l_0_12_436)))
 (let ((?x65622 (* l_0_12_402 l_0_12_402)))
 (let ((?x65620 (* l_0_12_401 l_0_12_401)))
 (let ((?x65618 (* l_0_12_400 l_0_12_400)))
 (let ((?x65616 (* l_0_12_366 l_0_12_366)))
 (let ((?x65614 (* l_0_12_365 l_0_12_365)))
 (let ((?x65612 (* l_0_12_364 l_0_12_364)))
 (let ((?x65610 (* l_0_12_330 l_0_12_330)))
 (let ((?x65611 (- (- (* (- l_0_12_328) l_0_12_328) (* l_0_12_329 l_0_12_329)) ?x65610)))
 (let ((?x65625 (- (- (- (- (- (- (- ?x65611 ?x65612) ?x65614) ?x65616) ?x65618) ?x65620) ?x65622) ?x65624)))
 (= (- (- ?x65625 ?x65626) ?x65628) 0.0))))))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_28 0.0))
(assert
 (>= l_0_12_36 0.0))
(assert
 (>= l_0_12_37 0.0))
(assert
 (>= l_0_12_39 0.0))
(assert
 (>= l_0_12_42 0.0))
(assert
 (>= l_0_12_46 0.0))
(assert
 (>= l_0_12_51 0.0))
(assert
 (>= l_0_12_57 0.0))
(assert
 (>= l_0_12_64 0.0))
(assert
 (>= l_0_12_72 0.0))
(assert
 (>= l_0_12_73 0.0))
(assert
 (>= l_0_12_75 0.0))
(assert
 (>= l_0_12_78 0.0))
(assert
 (>= l_0_12_82 0.0))
(assert
 (>= l_0_12_87 0.0))
(assert
 (>= l_0_12_93 0.0))
(assert
 (>= l_0_12_100 0.0))
(assert
 (>= l_0_12_108 0.0))
(assert
 (>= l_0_12_109 0.0))
(assert
 (>= l_0_12_111 0.0))
(assert
 (>= l_0_12_114 0.0))
(assert
 (>= l_0_12_118 0.0))
(assert
 (>= l_0_12_123 0.0))
(assert
 (>= l_0_12_129 0.0))
(assert
 (>= l_0_12_136 0.0))
(assert
 (>= l_0_12_144 0.0))
(assert
 (>= l_0_12_145 0.0))
(assert
 (>= l_0_12_147 0.0))
(assert
 (>= l_0_12_150 0.0))
(assert
 (>= l_0_12_154 0.0))
(assert
 (>= l_0_12_159 0.0))
(assert
 (>= l_0_12_165 0.0))
(assert
 (>= l_0_12_172 0.0))
(assert
 (>= l_0_12_180 0.0))
(assert
 (>= l_0_12_181 0.0))
(assert
 (>= l_0_12_183 0.0))
(assert
 (>= l_0_12_186 0.0))
(assert
 (>= l_0_12_190 0.0))
(assert
 (>= l_0_12_195 0.0))
(assert
 (>= l_0_12_201 0.0))
(assert
 (>= l_0_12_208 0.0))
(assert
 (>= l_0_12_216 0.0))
(assert
 (>= l_0_12_217 0.0))
(assert
 (>= l_0_12_219 0.0))
(assert
 (>= l_0_12_222 0.0))
(assert
 (>= l_0_12_226 0.0))
(assert
 (>= l_0_12_231 0.0))
(assert
 (>= l_0_12_237 0.0))
(assert
 (>= l_0_12_244 0.0))
(assert
 (>= l_0_12_252 0.0))
(assert
 (>= l_0_12_253 0.0))
(assert
 (>= l_0_12_255 0.0))
(assert
 (>= l_0_12_258 0.0))
(assert
 (>= l_0_12_262 0.0))
(assert
 (>= l_0_12_267 0.0))
(assert
 (>= l_0_12_273 0.0))
(assert
 (>= l_0_12_280 0.0))
(assert
 (>= l_0_12_288 0.0))
(assert
 (>= l_0_12_289 0.0))
(assert
 (>= l_0_12_291 0.0))
(assert
 (>= l_0_12_294 0.0))
(assert
 (>= l_0_12_298 0.0))
(assert
 (>= l_0_12_303 0.0))
(assert
 (>= l_0_12_309 0.0))
(assert
 (>= l_0_12_316 0.0))
(assert
 (>= l_0_12_324 0.0))
(assert
 (>= l_0_12_325 0.0))
(assert
 (>= l_0_12_327 0.0))
(assert
 (>= l_0_12_330 0.0))
(assert
 (>= l_0_12_334 0.0))
(assert
 (>= l_0_12_339 0.0))
(assert
 (>= l_0_12_345 0.0))
(assert
 (>= l_0_12_352 0.0))
(assert
 (>= l_0_12_360 0.0))
(assert
 (>= l_0_12_361 0.0))
(assert
 (>= l_0_12_363 0.0))
(assert
 (>= l_0_12_366 0.0))
(assert
 (>= l_0_12_370 0.0))
(assert
 (>= l_0_12_375 0.0))
(assert
 (>= l_0_12_381 0.0))
(assert
 (>= l_0_12_388 0.0))
(assert
 (>= l_0_12_396 0.0))
(assert
 (>= l_0_12_397 0.0))
(assert
 (>= l_0_12_399 0.0))
(assert
 (>= l_0_12_402 0.0))
(assert
 (>= l_0_12_406 0.0))
(assert
 (>= l_0_12_411 0.0))
(assert
 (>= l_0_12_417 0.0))
(assert
 (>= l_0_12_424 0.0))
(assert
 (>= l_0_12_432 0.0))
(assert
 (>= l_0_12_433 0.0))
(assert
 (>= l_0_12_435 0.0))
(assert
 (>= l_0_12_438 0.0))
(assert
 (>= l_0_12_442 0.0))
(assert
 (>= l_0_12_447 0.0))
(assert
 (>= l_0_12_453 0.0))
(assert
 (>= l_0_12_460 0.0))
(assert
 (>= l_0_12_468 0.0))
(assert
 (let ((?x65796 (* l_0_13_39 l_0_13_39)))
 (let ((?x65794 (* l_0_13_38 l_0_13_38)))
 (let ((?x65774 (* l_0_13_3 l_0_13_3)))
 (let ((?x65766 (* l_0_13_2 l_0_13_2)))
 (let ((?x65764 (* l_0_13_183 l_0_13_183)))
 (let ((?x65762 (* l_0_13_182 l_0_13_182)))
 (let ((?x65763 (+ (- (* (- l_0_13_146) l_0_13_146) (* l_0_13_147 l_0_13_147)) ?x65762)))
 (let ((?x65773 (- (- (- (+ ?x65763 ?x65764) ?x65766) (* (* 2.0 l_0_13_218) l_0_13_220)) (* (* 2.0 l_0_13_219) l_0_13_221))))
 (let ((?x65781 (- (- (- ?x65773 ?x65774) (* (* 2.0 l_0_13_328) l_0_13_353)) (* (* 2.0 l_0_13_329) l_0_13_354))))
 (let ((?x65787 (- (- ?x65781 (* (* 2.0 l_0_13_330) l_0_13_355)) (* (* 2.0 l_0_13_364) l_0_13_389))))
 (let ((?x65793 (- (- ?x65787 (* (* 2.0 l_0_13_365) l_0_13_390)) (* (* 2.0 l_0_13_366) l_0_13_391))))
 (let ((?x65803 (- (- (+ (+ ?x65793 ?x65794) ?x65796) (* (* 2.0 l_0_13_400) l_0_13_425)) (* (* 2.0 l_0_13_401) l_0_13_426))))
 (let ((?x65809 (- (- ?x65803 (* (* 2.0 l_0_13_402) l_0_13_427)) (* (* 2.0 l_0_13_436) l_0_13_461))))
 (let ((?x65815 (- (- ?x65809 (* (* 2.0 l_0_13_437) l_0_13_462)) (* (* 2.0 l_0_13_438) l_0_13_463))))
 (let ((?x65821 (- (- ?x65815 (* (* 2.0 l_0_13_472) l_0_13_497)) (* (* 2.0 l_0_13_473) l_0_13_498))))
 (= (+ (- ?x65821 (* (* 2.0 l_0_13_474) l_0_13_499)) 1.0) 0.0)))))))))))))))))
(assert
 (let ((?x65900 (* l_0_13_291 l_0_13_291)))
 (let ((?x65898 (* l_0_13_290 l_0_13_290)))
 (let ((?x65764 (* l_0_13_183 l_0_13_183)))
 (let ((?x65762 (* l_0_13_182 l_0_13_182)))
 (let ((?x65896 (- (+ (* l_0_13_146 l_0_13_146) (* l_0_13_147 l_0_13_147)) ?x65762)))
 (let ((?x65904 (- (+ (+ (- ?x65896 ?x65764) ?x65898) ?x65900) (* (* 2.0 l_0_13_326) l_0_13_340))))
 (let ((?x65910 (- (- ?x65904 (* (* 2.0 l_0_13_327) l_0_13_341)) (* (* 2.0 l_0_13_362) l_0_13_376))))
 (let ((?x65916 (- (- ?x65910 (* (* 2.0 l_0_13_363) l_0_13_377)) (* (* 2.0 l_0_13_398) l_0_13_412))))
 (let ((?x65922 (- (- ?x65916 (* (* 2.0 l_0_13_399) l_0_13_413)) (* (* 2.0 l_0_13_434) l_0_13_448))))
 (let ((?x65928 (- (- ?x65922 (* (* 2.0 l_0_13_435) l_0_13_449)) (* (* 2.0 l_0_13_470) l_0_13_484))))
 (= (- (- ?x65928 (* (* 2.0 l_0_13_471) l_0_13_485)) 1.0) 0.0))))))))))))
(assert
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x65989 (* ?x65988 l_0_13_282)))
 (let ((?x65985 (* 2.0 l_0_13_254)))
 (let ((?x65986 (* ?x65985 l_0_13_281)))
 (let ((?x65760 (* l_0_13_147 l_0_13_147)))
 (let ((?x65828 (* l_0_13_146 l_0_13_146)))
 (let ((?x65978 (+ (* (/ 1.0 2.0) (* l_0_13_110 l_0_13_110)) (* (/ 1.0 2.0) (* l_0_13_111 l_0_13_111)))))
 (let ((?x65984 (- (- (- (- ?x65978 ?x65828) ?x65760) (* (* 2.0 l_0_13_218) l_0_13_238)) (* (* 2.0 l_0_13_219) l_0_13_239))))
 (let ((?x65996 (- (- (- (- ?x65984 ?x65986) ?x65989) (* (* 2.0 l_0_13_346) l_0_13_353)) (* (* 2.0 l_0_13_347) l_0_13_354))))
 (let ((?x66002 (- (- ?x65996 (* (* 2.0 l_0_13_348) l_0_13_355)) (* (* 2.0 l_0_13_349) l_0_13_356))))
 (let ((?x66008 (- (- ?x66002 (* (* 2.0 l_0_13_350) l_0_13_357)) (* (* 2.0 l_0_13_351) l_0_13_358))))
 (let ((?x66014 (- (- ?x66008 (* (* 2.0 l_0_13_352) l_0_13_359)) (* (* 2.0 l_0_13_382) l_0_13_389))))
 (let ((?x66020 (- (- ?x66014 (* (* 2.0 l_0_13_383) l_0_13_390)) (* (* 2.0 l_0_13_384) l_0_13_391))))
 (let ((?x66026 (- (- ?x66020 (* (* 2.0 l_0_13_385) l_0_13_392)) (* (* 2.0 l_0_13_386) l_0_13_393))))
 (let ((?x66032 (- (- ?x66026 (* (* 2.0 l_0_13_387) l_0_13_394)) (* (* 2.0 l_0_13_388) l_0_13_395))))
 (let ((?x66038 (- (- ?x66032 (* (* 2.0 l_0_13_418) l_0_13_425)) (* (* 2.0 l_0_13_419) l_0_13_426))))
 (let ((?x66044 (- (- ?x66038 (* (* 2.0 l_0_13_420) l_0_13_427)) (* (* 2.0 l_0_13_421) l_0_13_428))))
 (let ((?x66050 (- (- ?x66044 (* (* 2.0 l_0_13_422) l_0_13_429)) (* (* 2.0 l_0_13_423) l_0_13_430))))
 (let ((?x66056 (- (- ?x66050 (* (* 2.0 l_0_13_424) l_0_13_431)) (* (* 2.0 l_0_13_454) l_0_13_461))))
 (let ((?x66062 (- (- ?x66056 (* (* 2.0 l_0_13_455) l_0_13_462)) (* (* 2.0 l_0_13_456) l_0_13_463))))
 (let ((?x66068 (- (- ?x66062 (* (* 2.0 l_0_13_457) l_0_13_464)) (* (* 2.0 l_0_13_458) l_0_13_465))))
 (let ((?x66074 (- (- ?x66068 (* (* 2.0 l_0_13_459) l_0_13_466)) (* (* 2.0 l_0_13_460) l_0_13_467))))
 (let ((?x66080 (- (- ?x66074 (* (* 2.0 l_0_13_490) l_0_13_497)) (* (* 2.0 l_0_13_491) l_0_13_498))))
 (let ((?x66086 (- (- ?x66080 (* (* 2.0 l_0_13_492) l_0_13_499)) (* (* 2.0 l_0_13_493) l_0_13_500))))
 (let ((?x66092 (- (- ?x66086 (* (* 2.0 l_0_13_494) l_0_13_501)) (* (* 2.0 l_0_13_495) l_0_13_502))))
 (let ((?x66098 (- (- ?x66092 (* (* 2.0 l_0_13_496) l_0_13_503)) (* (* (/ 1.0 2.0) l_0_13_74) l_0_13_74))))
 (= (+ (- ?x66098 (* (* (/ 1.0 2.0) l_0_13_75) l_0_13_75)) (/ 1.0 2.0)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x66222 (* l_0_13_37 l_0_13_37)))
 (let ((?x66220 (* l_0_13_181 l_0_13_181)))
 (let ((?x66221 (+ (- (* (- l_0_13_1) l_0_13_1) (* l_0_13_145 l_0_13_145)) ?x66220)))
 (= (+ ?x66221 ?x66222) 0.0)))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66274 (* ?x66273 l_0_13_38)))
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x66271 (* ?x66270 l_0_13_319)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x66268 (* ?x66267 l_0_13_318)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x66265 (* ?x66264 l_0_13_317)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66259 (* ?x66258 l_0_13_182)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66256 (* ?x66255 l_0_13_146)))
 (let ((?x66239 (+ (* (* (- 2.0) l_0_13_1) l_0_13_2) (* (* 2.0 l_0_13_101) l_0_13_76))))
 (let ((?x66245 (+ (+ ?x66239 (* (* 2.0 l_0_13_102) l_0_13_77)) (* (* 2.0 l_0_13_103) l_0_13_78))))
 (let ((?x66251 (- (- ?x66245 (* (* 2.0 l_0_13_112) l_0_13_137)) (* (* 2.0 l_0_13_113) l_0_13_138))))
 (let ((?x66263 (- (+ (- (- ?x66251 (* (* 2.0 l_0_13_114) l_0_13_139)) ?x66256) ?x66259) (* (* 2.0 l_0_13_217) l_0_13_220))))
 (= (+ (- (- (- ?x66263 ?x66265) ?x66268) ?x66271) ?x66274) 0.0))))))))))))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66330 (* ?x66273 l_0_13_40)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66328 (* ?x66258 l_0_13_184)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x8133 (* ?x66255 l_0_13_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_1) l_0_13_4) ?x8133) ?x66328) ?x66330) 0.0))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66353 (* ?x66273 l_0_13_43)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66351 (* ?x66258 l_0_13_187)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66344 (* ?x66255 l_0_13_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_1) l_0_13_7) ?x66344) ?x66351) ?x66353) 0.0))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66372 (* ?x66273 l_0_13_47)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66370 (* ?x66258 l_0_13_191)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66368 (* ?x66255 l_0_13_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_1) l_0_13_11) ?x66368) ?x66370) ?x66372) 0.0))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66395 (* ?x66273 l_0_13_52)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66393 (* ?x66258 l_0_13_196)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66386 (* ?x66255 l_0_13_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_1) l_0_13_16) ?x66386) ?x66393) ?x66395) 0.0))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66422 (* ?x66273 l_0_13_58)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66420 (* ?x66258 l_0_13_202)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66418 (* ?x66255 l_0_13_166)))
 (let ((?x8133 (* ?x66255 l_0_13_148)))
 (let ((?x66416 (+ (* (* (- 2.0) l_0_13_1) l_0_13_22) (* (* 1.0 l_0_13_109) l_0_13_112))))
 (let ((?x66426 (- (+ (+ (- (- ?x66416 ?x8133) ?x66418) ?x66420) ?x66422) (* (* 1.0 l_0_13_73) l_0_13_76))))
 (= ?x66426 0.0)))))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66454 (* ?x66273 l_0_13_65)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66452 (* ?x66258 l_0_13_209)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66450 (* ?x66255 l_0_13_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_1) l_0_13_29) ?x66450) ?x66452) ?x66454) 0.0))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66499 (* ?x66498 l_0_13_41)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66496 (* ?x66495 l_0_13_40)))
 (let ((?x66492 (* 2.0 l_0_13_3)))
 (let ((?x66493 (* ?x66492 l_0_13_5)))
 (let ((?x66490 (* l_0_13_222 l_0_13_222)))
 (let ((?x66488 (* l_0_13_221 l_0_13_221)))
 (let ((?x66486 (* l_0_13_220 l_0_13_220)))
 (let ((?x66483 (* 2.0 l_0_13_2)))
 (let ((?x66484 (* ?x66483 l_0_13_4)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66481 (* ?x66480 l_0_13_185)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66478 (* ?x66477 l_0_13_184)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66475 (* ?x66469 l_0_13_149)))
 (let ((?x66485 (- (+ (+ (- (* (* (- 2.0) l_0_13_146) l_0_13_148) ?x66475) ?x66478) ?x66481) ?x66484)))
 (= (+ (+ (- (- (- (- ?x66485 ?x66486) ?x66488) ?x66490) ?x66493) ?x66496) ?x66499) 0.0))))))))))))))))))))
(assert
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x66571 (* ?x66570 l_0_13_67)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x66568 (* ?x66567 l_0_13_66)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x66565 (* ?x66564 l_0_13_65)))
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66562 (* ?x66498 l_0_13_44)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66560 (* ?x66495 l_0_13_43)))
 (let ((?x66557 (* 2.0 l_0_13_31)))
 (let ((?x66558 (* ?x66557 l_0_13_6)))
 (let ((?x66554 (* 2.0 l_0_13_30)))
 (let ((?x66555 (* ?x66554 l_0_13_5)))
 (let ((?x66492 (* 2.0 l_0_13_3)))
 (let ((?x66552 (* ?x66492 l_0_13_8)))
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x66271 (* ?x66270 l_0_13_319)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x66268 (* ?x66267 l_0_13_318)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x66265 (* ?x66264 l_0_13_317)))
 (let ((?x66546 (* 2.0 l_0_13_29)))
 (let ((?x66547 (* ?x66546 l_0_13_4)))
 (let ((?x66483 (* 2.0 l_0_13_2)))
 (let ((?x66535 (* ?x66483 l_0_13_7)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66533 (* ?x66480 l_0_13_188)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66531 (* ?x66477 l_0_13_187)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66529 (* ?x66469 l_0_13_152)))
 (let ((?x66536 (- (+ (+ (- (* (* (- 2.0) l_0_13_146) l_0_13_151) ?x66529) ?x66531) ?x66533) ?x66535)))
 (let ((?x66542 (- (- ?x66536 (* (* 2.0 l_0_13_220) l_0_13_223)) (* (* 2.0 l_0_13_221) l_0_13_224))))
 (let ((?x66550 (- (- (+ (- ?x66542 (* (* 2.0 l_0_13_222) l_0_13_225)) ?x66547) ?x66265) ?x66268)))
 (let ((?x66566 (- (+ (+ (+ (+ (- (- ?x66550 ?x66271) ?x66552) ?x66555) ?x66558) ?x66560) ?x66562) ?x66565)))
 (= (- (- ?x66566 ?x66568) ?x66571) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66658 (* ?x66498 l_0_13_48)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66656 (* ?x66495 l_0_13_47)))
 (let ((?x66653 (* 2.0 l_0_13_258)))
 (let ((?x66654 (* ?x66653 l_0_13_283)))
 (let ((?x66650 (* 2.0 l_0_13_257)))
 (let ((?x66651 (* ?x66650 l_0_13_282)))
 (let ((?x66647 (* 2.0 l_0_13_256)))
 (let ((?x66648 (* ?x66647 l_0_13_281)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66639 (* ?x66480 l_0_13_192)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66637 (* ?x66477 l_0_13_191)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66635 (* ?x66469 l_0_13_156)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x66633 (* ?x66632 l_0_13_155)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x66630 (* ?x66629 l_0_13_3)))
 (let ((?x66638 (+ (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_2) ?x66630) ?x66633) ?x66635) ?x66637)))
 (let ((?x66644 (- (- (+ ?x66638 ?x66639) (* (* 2.0 l_0_13_220) l_0_13_227)) (* (* 2.0 l_0_13_221) l_0_13_228))))
 (let ((?x66655 (+ (+ (+ (- ?x66644 (* (* 2.0 l_0_13_222) l_0_13_229)) ?x66648) ?x66651) ?x66654)))
 (= (+ (+ ?x66655 ?x66656) ?x66658) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66746 (* ?x66498 l_0_13_53)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66744 (* ?x66495 l_0_13_52)))
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x66271 (* ?x66270 l_0_13_319)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x66268 (* ?x66267 l_0_13_318)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x66265 (* ?x66264 l_0_13_317)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x66733 (* ?x66732 l_0_13_211)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x66730 (* ?x66729 l_0_13_210)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x66727 (* ?x66726 l_0_13_209)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66724 (* ?x66480 l_0_13_197)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66722 (* ?x66477 l_0_13_196)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x66720 (* ?x66719 l_0_13_3)))
 (let ((?x66716 (* 2.0 l_0_13_16)))
 (let ((?x66717 (* ?x66716 l_0_13_2)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x66714 (* ?x66713 l_0_13_175)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x66711 (* ?x66710 l_0_13_174)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x66708 (* ?x66707 l_0_13_173)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66705 (* ?x66469 l_0_13_161)))
 (let ((?x66715 (+ (+ (+ (- (* (* (- 2.0) l_0_13_146) l_0_13_160) ?x66705) ?x66708) ?x66711) ?x66714)))
 (let ((?x66734 (- (- (- (+ (+ (- (- ?x66715 ?x66717) ?x66720) ?x66722) ?x66724) ?x66727) ?x66730) ?x66733)))
 (let ((?x66738 (- (- ?x66734 (* (* 2.0 l_0_13_220) l_0_13_232)) (* (* 2.0 l_0_13_221) l_0_13_233))))
 (let ((?x66743 (+ (+ (+ (- ?x66738 (* (* 2.0 l_0_13_222) l_0_13_234)) ?x66265) ?x66268) ?x66271)))
 (= (+ (+ ?x66743 ?x66744) ?x66746) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66836 (* ?x66498 l_0_13_59)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66834 (* ?x66495 l_0_13_58)))
 (let ((?x66653 (* 2.0 l_0_13_258)))
 (let ((?x66654 (* ?x66653 l_0_13_283)))
 (let ((?x66650 (* 2.0 l_0_13_257)))
 (let ((?x66651 (* ?x66650 l_0_13_282)))
 (let ((?x66647 (* 2.0 l_0_13_256)))
 (let ((?x66648 (* ?x66647 l_0_13_281)))
 (let ((?x66828 (* 2.0 l_0_13_23)))
 (let ((?x66829 (* ?x66828 l_0_13_3)))
 (let ((?x66483 (* 2.0 l_0_13_2)))
 (let ((?x66820 (* ?x66483 l_0_13_22)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66818 (* ?x66480 l_0_13_203)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66816 (* ?x66477 l_0_13_202)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66814 (* ?x66469 l_0_13_167)))
 (let ((?x66475 (* ?x66469 l_0_13_149)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x66811 (* ?x66632 l_0_13_166)))
 (let ((?x66809 (* ?x66632 l_0_13_148)))
 (let ((?x66808 (+ (* (* 1.0 l_0_13_110) l_0_13_112) (* (* 1.0 l_0_13_111) l_0_13_113))))
 (let ((?x66821 (- (+ (+ (- (- (- (- ?x66808 ?x66809) ?x66811) ?x66475) ?x66814) ?x66816) ?x66818) ?x66820)))
 (let ((?x66825 (- (- ?x66821 (* (* 2.0 l_0_13_220) l_0_13_238)) (* (* 2.0 l_0_13_221) l_0_13_239))))
 (let ((?x66832 (- (- (- (- ?x66825 (* (* 2.0 l_0_13_222) l_0_13_240)) ?x66829) ?x66648) ?x66651)))
 (let ((?x66840 (- (+ (+ (- ?x66832 ?x66654) ?x66834) ?x66836) (* (* 1.0 l_0_13_74) l_0_13_76))))
 (= (- ?x66840 (* (* 1.0 l_0_13_75) l_0_13_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66919 (* ?x66498 l_0_13_66)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66917 (* ?x66495 l_0_13_65)))
 (let ((?x66492 (* 2.0 l_0_13_3)))
 (let ((?x66915 (* ?x66492 l_0_13_30)))
 (let ((?x66483 (* 2.0 l_0_13_2)))
 (let ((?x66907 (* ?x66483 l_0_13_29)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66905 (* ?x66480 l_0_13_210)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66903 (* ?x66477 l_0_13_209)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66901 (* ?x66469 l_0_13_174)))
 (let ((?x66908 (- (+ (+ (- (* (* (- 2.0) l_0_13_146) l_0_13_173) ?x66901) ?x66903) ?x66905) ?x66907)))
 (let ((?x66912 (- (- ?x66908 (* (* 2.0 l_0_13_220) l_0_13_245)) (* (* 2.0 l_0_13_221) l_0_13_246))))
 (let ((?x66920 (+ (+ (- (- ?x66912 (* (* 2.0 l_0_13_222) l_0_13_247)) ?x66915) ?x66917) ?x66919)))
 (= ?x66920 0.0)))))))))))))))))))
(assert
 (let ((?x66976 (* l_0_13_6 l_0_13_6)))
 (let ((?x66974 (* l_0_13_5 l_0_13_5)))
 (let ((?x66972 (* l_0_13_42 l_0_13_42)))
 (let ((?x66970 (* l_0_13_41 l_0_13_41)))
 (let ((?x66968 (* l_0_13_40 l_0_13_40)))
 (let ((?x66966 (* l_0_13_4 l_0_13_4)))
 (let ((?x66964 (* l_0_13_186 l_0_13_186)))
 (let ((?x66962 (* l_0_13_185 l_0_13_185)))
 (let ((?x66960 (* l_0_13_184 l_0_13_184)))
 (let ((?x66958 (* l_0_13_150 l_0_13_150)))
 (let ((?x66959 (- (- (* (- l_0_13_148) l_0_13_148) (* l_0_13_149 l_0_13_149)) ?x66958)))
 (let ((?x66973 (+ (+ (+ (- (+ (+ (+ ?x66959 ?x66960) ?x66962) ?x66964) ?x66966) ?x66968) ?x66970) ?x66972)))
 (= (- (- ?x66973 ?x66974) ?x66976) 0.0))))))))))))))
(assert
 (let ((?x67024 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x67021 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x67018 (* ?x66570 l_0_13_45)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x67016 (* ?x66567 l_0_13_44)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x67014 (* ?x66564 l_0_13_43)))
 (let ((?x67012 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x67009 (* ?x66732 l_0_13_189)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x67007 (* ?x66729 l_0_13_188)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x67005 (* ?x66726 l_0_13_187)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67003 (* ?x66713 l_0_13_153)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x67001 (* ?x66710 l_0_13_152)))
 (let ((?x67008 (+ (+ (- (- (* (* (- 2.0) l_0_13_148) l_0_13_151) ?x67001) ?x67003) ?x67005) ?x67007)))
 (let ((?x67025 (- (- (+ (+ (+ (- (+ ?x67008 ?x67009) ?x67012) ?x67014) ?x67016) ?x67018) ?x67021) ?x67024)))
 (= ?x67025 0.0)))))))))))))))))))))))
(assert
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x67092 (* ?x66570 l_0_13_49)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x67090 (* ?x66567 l_0_13_48)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x67088 (* ?x66564 l_0_13_47)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x67086 (* ?x66732 l_0_13_193)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x67084 (* ?x66729 l_0_13_192)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x67082 (* ?x66726 l_0_13_191)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67080 (* ?x66713 l_0_13_157)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x67078 (* ?x66710 l_0_13_156)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x67076 (* ?x66707 l_0_13_155)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x67074 (* ?x67073 l_0_13_6)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x67071 (* ?x66629 l_0_13_5)))
 (let ((?x67079 (- (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_4) ?x67071) ?x67074) ?x67076) ?x67078)))
 (let ((?x67093 (+ (+ (+ (+ (+ (+ (- ?x67079 ?x67080) ?x67082) ?x67084) ?x67086) ?x67088) ?x67090) ?x67092)))
 (= ?x67093 0.0))))))))))))))))))))))))))
(assert
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x67152 (* ?x66570 l_0_13_54)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x67150 (* ?x66567 l_0_13_53)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x67148 (* ?x66564 l_0_13_52)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x67146 (* ?x66732 l_0_13_198)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x67144 (* ?x66729 l_0_13_197)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x67142 (* ?x66726 l_0_13_196)))
 (let ((?x67139 (* 2.0 l_0_13_18)))
 (let ((?x67140 (* ?x67139 l_0_13_6)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x67137 (* ?x66719 l_0_13_5)))
 (let ((?x66716 (* 2.0 l_0_13_16)))
 (let ((?x67126 (* ?x66716 l_0_13_4)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67122 (* ?x66713 l_0_13_162)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x9135 (* ?x66710 l_0_13_161)))
 (let ((?x67138 (- (- (- (- (* (* (- 2.0) l_0_13_148) l_0_13_160) ?x9135) ?x67122) ?x67126) ?x67137)))
 (let ((?x67153 (+ (+ (+ (+ (+ (+ (- ?x67138 ?x67140) ?x67142) ?x67144) ?x67146) ?x67148) ?x67150) ?x67152)))
 (= ?x67153 0.0))))))))))))))))))))))))))
(assert
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x67227 (* ?x66570 l_0_13_60)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x67225 (* ?x66567 l_0_13_59)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x67223 (* ?x66564 l_0_13_58)))
 (let ((?x67220 (* 2.0 l_0_13_24)))
 (let ((?x67221 (* ?x67220 l_0_13_6)))
 (let ((?x66828 (* 2.0 l_0_13_23)))
 (let ((?x67218 (* ?x66828 l_0_13_5)))
 (let ((?x67215 (* 2.0 l_0_13_22)))
 (let ((?x67216 (* ?x67215 l_0_13_4)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x67213 (* ?x66732 l_0_13_204)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x67211 (* ?x66729 l_0_13_203)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x67209 (* ?x66726 l_0_13_202)))
 (let ((?x66958 (* l_0_13_150 l_0_13_150)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67206 (* ?x66713 l_0_13_168)))
 (let ((?x66949 (* l_0_13_149 l_0_13_149)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x67203 (* ?x66710 l_0_13_167)))
 (let ((?x66980 (* l_0_13_148 l_0_13_148)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x67200 (* ?x66707 l_0_13_166)))
 (let ((?x67188 (* l_0_13_114 l_0_13_114)))
 (let ((?x67189 (* (/ 1.0 2.0) ?x67188)))
 (let ((?x67182 (* l_0_13_113 l_0_13_113)))
 (let ((?x67184 (* (/ 1.0 2.0) ?x67182)))
 (let ((?x9194 (* l_0_13_112 l_0_13_112)))
 (let ((?x67180 (* (/ 1.0 2.0) ?x9194)))
 (let ((?x67207 (- (- (- (- (- (+ (+ ?x67180 ?x67184) ?x67189) ?x67200) ?x66980) ?x67203) ?x66949) ?x67206)))
 (let ((?x67222 (- (- (- (+ (+ (+ (- ?x67207 ?x66958) ?x67209) ?x67211) ?x67213) ?x67216) ?x67218) ?x67221)))
 (let ((?x67231 (- (+ (+ (+ ?x67222 ?x67223) ?x67225) ?x67227) (* (* (/ 1.0 2.0) l_0_13_76) l_0_13_76))))
 (let ((?x67237 (- (- ?x67231 (* (* (/ 1.0 2.0) l_0_13_77) l_0_13_77)) (* (* (/ 1.0 2.0) l_0_13_78) l_0_13_78))))
 (= ?x67237 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x66571 (* ?x66570 l_0_13_67)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x66568 (* ?x66567 l_0_13_66)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x66565 (* ?x66564 l_0_13_65)))
 (let ((?x66557 (* 2.0 l_0_13_31)))
 (let ((?x66558 (* ?x66557 l_0_13_6)))
 (let ((?x66554 (* 2.0 l_0_13_30)))
 (let ((?x66555 (* ?x66554 l_0_13_5)))
 (let ((?x66546 (* 2.0 l_0_13_29)))
 (let ((?x66547 (* ?x66546 l_0_13_4)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x66733 (* ?x66732 l_0_13_211)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x66730 (* ?x66729 l_0_13_210)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x66727 (* ?x66726 l_0_13_209)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x66714 (* ?x66713 l_0_13_175)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x66711 (* ?x66710 l_0_13_174)))
 (let ((?x67288 (+ (+ (- (- (* (* (- 2.0) l_0_13_148) l_0_13_173) ?x66711) ?x66714) ?x66727) ?x66730)))
 (let ((?x67295 (+ (+ (+ (- (- (- (+ ?x67288 ?x66733) ?x66547) ?x66555) ?x66558) ?x66565) ?x66568) ?x66571)))
 (= ?x67295 0.0))))))))))))))))))))))))))
(assert
 (let ((?x67331 (* l_0_13_9 l_0_13_9)))
 (let ((?x67329 (* l_0_13_8 l_0_13_8)))
 (let ((?x67327 (* l_0_13_7 l_0_13_7)))
 (let ((?x67325 (* l_0_13_46 l_0_13_46)))
 (let ((?x67323 (* l_0_13_45 l_0_13_45)))
 (let ((?x67321 (* l_0_13_44 l_0_13_44)))
 (let ((?x67319 (* l_0_13_43 l_0_13_43)))
 (let ((?x67317 (* l_0_13_190 l_0_13_190)))
 (let ((?x67315 (* l_0_13_189 l_0_13_189)))
 (let ((?x67313 (* l_0_13_188 l_0_13_188)))
 (let ((?x67311 (* l_0_13_187 l_0_13_187)))
 (let ((?x67309 (* l_0_13_154 l_0_13_154)))
 (let ((?x67307 (* l_0_13_153 l_0_13_153)))
 (let ((?x67305 (* l_0_13_152 l_0_13_152)))
 (let ((?x67306 (- (- (* (- l_0_13_10) l_0_13_10) (* l_0_13_151 l_0_13_151)) ?x67305)))
 (let ((?x67320 (+ (+ (+ (+ (+ (- (- ?x67306 ?x67307) ?x67309) ?x67311) ?x67313) ?x67315) ?x67317) ?x67319)))
 (= (- (- (- (+ (+ (+ ?x67320 ?x67321) ?x67323) ?x67325) ?x67327) ?x67329) ?x67331) 0.0))))))))))))))))))
(assert
 (let ((?x67401 (* 2.0 l_0_13_46)))
 (let ((?x67402 (* ?x67401 l_0_13_50)))
 (let ((?x67398 (* 2.0 l_0_13_45)))
 (let ((?x67399 (* ?x67398 l_0_13_49)))
 (let ((?x67395 (* 2.0 l_0_13_44)))
 (let ((?x67396 (* ?x67395 l_0_13_48)))
 (let ((?x67392 (* 2.0 l_0_13_43)))
 (let ((?x67393 (* ?x67392 l_0_13_47)))
 (let ((?x67389 (* 2.0 l_0_13_190)))
 (let ((?x67390 (* ?x67389 l_0_13_194)))
 (let ((?x67386 (* 2.0 l_0_13_189)))
 (let ((?x67387 (* ?x67386 l_0_13_193)))
 (let ((?x67383 (* 2.0 l_0_13_188)))
 (let ((?x67384 (* ?x67383 l_0_13_192)))
 (let ((?x67380 (* 2.0 l_0_13_187)))
 (let ((?x67381 (* ?x67380 l_0_13_191)))
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67378 (* ?x67377 l_0_13_158)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67375 (* ?x67374 l_0_13_157)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67372 (* ?x67371 l_0_13_156)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67369 (* ?x67368 l_0_13_155)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x67366 (* ?x67073 l_0_13_9)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x67364 (* ?x66629 l_0_13_8)))
 (let ((?x67361 (* 2.0 l_0_13_11)))
 (let ((?x67362 (* ?x67361 l_0_13_7)))
 (let ((?x67370 (- (- (- (- (* (* (- 2.0) l_0_13_10) l_0_13_14) ?x67362) ?x67364) ?x67366) ?x67369)))
 (let ((?x67391 (+ (+ (+ (+ (- (- (- ?x67370 ?x67372) ?x67375) ?x67378) ?x67381) ?x67384) ?x67387) ?x67390)))
 (= (+ (+ (+ (+ ?x67391 ?x67393) ?x67396) ?x67399) ?x67402) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x67401 (* 2.0 l_0_13_46)))
 (let ((?x67478 (* ?x67401 l_0_13_55)))
 (let ((?x67398 (* 2.0 l_0_13_45)))
 (let ((?x67476 (* ?x67398 l_0_13_54)))
 (let ((?x67395 (* 2.0 l_0_13_44)))
 (let ((?x67474 (* ?x67395 l_0_13_53)))
 (let ((?x67392 (* 2.0 l_0_13_43)))
 (let ((?x67472 (* ?x67392 l_0_13_52)))
 (let ((?x67389 (* 2.0 l_0_13_190)))
 (let ((?x67470 (* ?x67389 l_0_13_199)))
 (let ((?x67386 (* 2.0 l_0_13_189)))
 (let ((?x67468 (* ?x67386 l_0_13_198)))
 (let ((?x67383 (* 2.0 l_0_13_188)))
 (let ((?x67466 (* ?x67383 l_0_13_197)))
 (let ((?x67380 (* 2.0 l_0_13_187)))
 (let ((?x67464 (* ?x67380 l_0_13_196)))
 (let ((?x67139 (* 2.0 l_0_13_18)))
 (let ((?x67462 (* ?x67139 l_0_13_9)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x67460 (* ?x66719 l_0_13_8)))
 (let ((?x66716 (* 2.0 l_0_13_16)))
 (let ((?x67458 (* ?x66716 l_0_13_7)))
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67445 (* ?x67377 l_0_13_163)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67441 (* ?x67374 l_0_13_162)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67437 (* ?x67371 l_0_13_161)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67433 (* ?x67368 l_0_13_160)))
 (let ((?x67446 (- (- (- (- (* (* (- 2.0) l_0_13_10) l_0_13_19) ?x67433) ?x67437) ?x67441) ?x67445)))
 (let ((?x67471 (+ (+ (+ (+ (- (- (- ?x67446 ?x67458) ?x67460) ?x67462) ?x67464) ?x67466) ?x67468) ?x67470)))
 (= (+ (+ (+ (+ ?x67471 ?x67472) ?x67474) ?x67476) ?x67478) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x67401 (* 2.0 l_0_13_46)))
 (let ((?x67559 (* ?x67401 l_0_13_61)))
 (let ((?x67398 (* 2.0 l_0_13_45)))
 (let ((?x67557 (* ?x67398 l_0_13_60)))
 (let ((?x67395 (* 2.0 l_0_13_44)))
 (let ((?x67555 (* ?x67395 l_0_13_59)))
 (let ((?x67392 (* 2.0 l_0_13_43)))
 (let ((?x67553 (* ?x67392 l_0_13_58)))
 (let ((?x67220 (* 2.0 l_0_13_24)))
 (let ((?x67551 (* ?x67220 l_0_13_9)))
 (let ((?x66828 (* 2.0 l_0_13_23)))
 (let ((?x67549 (* ?x66828 l_0_13_8)))
 (let ((?x67215 (* 2.0 l_0_13_22)))
 (let ((?x67547 (* ?x67215 l_0_13_7)))
 (let ((?x67389 (* 2.0 l_0_13_190)))
 (let ((?x67545 (* ?x67389 l_0_13_205)))
 (let ((?x67386 (* 2.0 l_0_13_189)))
 (let ((?x67543 (* ?x67386 l_0_13_204)))
 (let ((?x67383 (* 2.0 l_0_13_188)))
 (let ((?x67541 (* ?x67383 l_0_13_203)))
 (let ((?x67380 (* 2.0 l_0_13_187)))
 (let ((?x67539 (* ?x67380 l_0_13_202)))
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67537 (* ?x67377 l_0_13_169)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67535 (* ?x67374 l_0_13_168)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67533 (* ?x67371 l_0_13_167)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67531 (* ?x67368 l_0_13_166)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67003 (* ?x66713 l_0_13_153)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x67001 (* ?x66710 l_0_13_152)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x67527 (* ?x66707 l_0_13_151)))
 (let ((?x67505 (+ (* (* (- 2.0) l_0_13_10) l_0_13_25) (* (* 1.0 l_0_13_112) l_0_13_115))))
 (let ((?x67526 (+ (+ ?x67505 (* (* 1.0 l_0_13_113) l_0_13_116)) (* (* 1.0 l_0_13_114) l_0_13_117))))
 (let ((?x67538 (- (- (- (- (- (- (- ?x67526 ?x67527) ?x67001) ?x67003) ?x67531) ?x67533) ?x67535) ?x67537)))
 (let ((?x67552 (- (- (- (+ (+ (+ (+ ?x67538 ?x67539) ?x67541) ?x67543) ?x67545) ?x67547) ?x67549) ?x67551)))
 (let ((?x67563 (- (+ (+ (+ (+ ?x67552 ?x67553) ?x67555) ?x67557) ?x67559) (* (* 1.0 l_0_13_76) l_0_13_79))))
 (let ((?x67569 (- (- ?x67563 (* (* 1.0 l_0_13_77) l_0_13_80)) (* (* 1.0 l_0_13_78) l_0_13_81))))
 (= ?x67569 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x67401 (* 2.0 l_0_13_46)))
 (let ((?x67675 (* ?x67401 l_0_13_68)))
 (let ((?x67398 (* 2.0 l_0_13_45)))
 (let ((?x67673 (* ?x67398 l_0_13_67)))
 (let ((?x67395 (* 2.0 l_0_13_44)))
 (let ((?x67671 (* ?x67395 l_0_13_66)))
 (let ((?x67392 (* 2.0 l_0_13_43)))
 (let ((?x67669 (* ?x67392 l_0_13_65)))
 (let ((?x66557 (* 2.0 l_0_13_31)))
 (let ((?x67667 (* ?x66557 l_0_13_9)))
 (let ((?x66554 (* 2.0 l_0_13_30)))
 (let ((?x67665 (* ?x66554 l_0_13_8)))
 (let ((?x66546 (* 2.0 l_0_13_29)))
 (let ((?x67663 (* ?x66546 l_0_13_7)))
 (let ((?x67389 (* 2.0 l_0_13_190)))
 (let ((?x67661 (* ?x67389 l_0_13_212)))
 (let ((?x67386 (* 2.0 l_0_13_189)))
 (let ((?x67659 (* ?x67386 l_0_13_211)))
 (let ((?x67383 (* 2.0 l_0_13_188)))
 (let ((?x67657 (* ?x67383 l_0_13_210)))
 (let ((?x67380 (* 2.0 l_0_13_187)))
 (let ((?x67655 (* ?x67380 l_0_13_209)))
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67653 (* ?x67377 l_0_13_176)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67651 (* ?x67374 l_0_13_175)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67649 (* ?x67371 l_0_13_174)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67647 (* ?x67368 l_0_13_173)))
 (let ((?x67654 (- (- (- (- (* (* (- 2.0) l_0_13_10) l_0_13_32) ?x67647) ?x67649) ?x67651) ?x67653)))
 (let ((?x67668 (- (- (- (+ (+ (+ (+ ?x67654 ?x67655) ?x67657) ?x67659) ?x67661) ?x67663) ?x67665) ?x67667)))
 (= (+ (+ (+ (+ ?x67668 ?x67669) ?x67671) ?x67673) ?x67675) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x67766 (* l_0_13_51 l_0_13_51)))
 (let ((?x67764 (* l_0_13_50 l_0_13_50)))
 (let ((?x67762 (* l_0_13_49 l_0_13_49)))
 (let ((?x67760 (* l_0_13_48 l_0_13_48)))
 (let ((?x67758 (* l_0_13_47 l_0_13_47)))
 (let ((?x67756 (* l_0_13_195 l_0_13_195)))
 (let ((?x67754 (* l_0_13_194 l_0_13_194)))
 (let ((?x67752 (* l_0_13_193 l_0_13_193)))
 (let ((?x67750 (* l_0_13_192 l_0_13_192)))
 (let ((?x67748 (* l_0_13_191 l_0_13_191)))
 (let ((?x67746 (* l_0_13_159 l_0_13_159)))
 (let ((?x67744 (* l_0_13_158 l_0_13_158)))
 (let ((?x67742 (* l_0_13_157 l_0_13_157)))
 (let ((?x67740 (* l_0_13_156 l_0_13_156)))
 (let ((?x67738 (* l_0_13_155 l_0_13_155)))
 (let ((?x67736 (* l_0_13_15 l_0_13_15)))
 (let ((?x67734 (* l_0_13_14 l_0_13_14)))
 (let ((?x67721 (* l_0_13_13 l_0_13_13)))
 (let ((?x67733 (- (- (* (- l_0_13_11) l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x67721)))
 (let ((?x67747 (- (- (- (- (- (- (- ?x67733 ?x67734) ?x67736) ?x67738) ?x67740) ?x67742) ?x67744) ?x67746)))
 (let ((?x67761 (+ (+ (+ (+ (+ (+ (+ ?x67747 ?x67748) ?x67750) ?x67752) ?x67754) ?x67756) ?x67758) ?x67760)))
 (= (+ (+ (+ ?x67761 ?x67762) ?x67764) ?x67766) 0.0)))))))))))))))))))))))
(assert
 (let ((?x67851 (* 2.0 l_0_13_51)))
 (let ((?x67852 (* ?x67851 l_0_13_56)))
 (let ((?x67848 (* 2.0 l_0_13_50)))
 (let ((?x67849 (* ?x67848 l_0_13_55)))
 (let ((?x67845 (* 2.0 l_0_13_49)))
 (let ((?x67846 (* ?x67845 l_0_13_54)))
 (let ((?x67842 (* 2.0 l_0_13_48)))
 (let ((?x67843 (* ?x67842 l_0_13_53)))
 (let ((?x67839 (* 2.0 l_0_13_47)))
 (let ((?x67840 (* ?x67839 l_0_13_52)))
 (let ((?x67836 (* 2.0 l_0_13_195)))
 (let ((?x67837 (* ?x67836 l_0_13_200)))
 (let ((?x67833 (* 2.0 l_0_13_194)))
 (let ((?x67834 (* ?x67833 l_0_13_199)))
 (let ((?x67830 (* 2.0 l_0_13_193)))
 (let ((?x67831 (* ?x67830 l_0_13_198)))
 (let ((?x67827 (* 2.0 l_0_13_192)))
 (let ((?x67828 (* ?x67827 l_0_13_197)))
 (let ((?x67824 (* 2.0 l_0_13_191)))
 (let ((?x67825 (* ?x67824 l_0_13_196)))
 (let ((?x67821 (* 2.0 l_0_13_159)))
 (let ((?x67822 (* ?x67821 l_0_13_164)))
 (let ((?x67818 (* 2.0 l_0_13_158)))
 (let ((?x67819 (* ?x67818 l_0_13_163)))
 (let ((?x67815 (* 2.0 l_0_13_157)))
 (let ((?x67816 (* ?x67815 l_0_13_162)))
 (let ((?x67812 (* 2.0 l_0_13_156)))
 (let ((?x67813 (* ?x67812 l_0_13_161)))
 (let ((?x67809 (* 2.0 l_0_13_155)))
 (let ((?x67810 (* ?x67809 l_0_13_160)))
 (let ((?x67806 (* 2.0 l_0_13_15)))
 (let ((?x67807 (* ?x67806 l_0_13_20)))
 (let ((?x67803 (* 2.0 l_0_13_14)))
 (let ((?x67804 (* ?x67803 l_0_13_19)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x67801 (* ?x67073 l_0_13_18)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x67799 (* ?x66629 l_0_13_17)))
 (let ((?x67808 (- (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_16) ?x67799) ?x67801) ?x67804) ?x67807)))
 (let ((?x67829 (+ (+ (- (- (- (- (- ?x67808 ?x67810) ?x67813) ?x67816) ?x67819) ?x67822) ?x67825) ?x67828)))
 (let ((?x67850 (+ (+ (+ (+ (+ (+ (+ ?x67829 ?x67831) ?x67834) ?x67837) ?x67840) ?x67843) ?x67846) ?x67849)))
 (= (+ ?x67850 ?x67852) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x67851 (* 2.0 l_0_13_51)))
 (let ((?x67956 (* ?x67851 l_0_13_62)))
 (let ((?x67848 (* 2.0 l_0_13_50)))
 (let ((?x67954 (* ?x67848 l_0_13_61)))
 (let ((?x67845 (* 2.0 l_0_13_49)))
 (let ((?x67952 (* ?x67845 l_0_13_60)))
 (let ((?x67842 (* 2.0 l_0_13_48)))
 (let ((?x67950 (* ?x67842 l_0_13_59)))
 (let ((?x67839 (* 2.0 l_0_13_47)))
 (let ((?x67948 (* ?x67839 l_0_13_58)))
 (let ((?x67836 (* 2.0 l_0_13_195)))
 (let ((?x67946 (* ?x67836 l_0_13_206)))
 (let ((?x67833 (* 2.0 l_0_13_194)))
 (let ((?x67944 (* ?x67833 l_0_13_205)))
 (let ((?x67830 (* 2.0 l_0_13_193)))
 (let ((?x67942 (* ?x67830 l_0_13_204)))
 (let ((?x67827 (* 2.0 l_0_13_192)))
 (let ((?x67940 (* ?x67827 l_0_13_203)))
 (let ((?x67824 (* 2.0 l_0_13_191)))
 (let ((?x67938 (* ?x67824 l_0_13_202)))
 (let ((?x67821 (* 2.0 l_0_13_159)))
 (let ((?x67936 (* ?x67821 l_0_13_170)))
 (let ((?x67818 (* 2.0 l_0_13_158)))
 (let ((?x67934 (* ?x67818 l_0_13_169)))
 (let ((?x67815 (* 2.0 l_0_13_157)))
 (let ((?x67932 (* ?x67815 l_0_13_168)))
 (let ((?x67812 (* 2.0 l_0_13_156)))
 (let ((?x67930 (* ?x67812 l_0_13_167)))
 (let ((?x67809 (* 2.0 l_0_13_155)))
 (let ((?x67928 (* ?x67809 l_0_13_166)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67080 (* ?x66713 l_0_13_157)))
 (let ((?x67806 (* 2.0 l_0_13_15)))
 (let ((?x67925 (* ?x67806 l_0_13_26)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x67078 (* ?x66710 l_0_13_156)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x67076 (* ?x66707 l_0_13_155)))
 (let ((?x67803 (* 2.0 l_0_13_14)))
 (let ((?x67921 (* ?x67803 l_0_13_25)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x67906 (* ?x67073 l_0_13_24)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x67902 (* ?x66629 l_0_13_23)))
 (let ((?x67892 (+ (* (* (- 2.0) l_0_13_11) l_0_13_22) (* (* 1.0 l_0_13_112) l_0_13_119))))
 (let ((?x67900 (+ (+ ?x67892 (* (* 1.0 l_0_13_113) l_0_13_120)) (* (* 1.0 l_0_13_114) l_0_13_121))))
 (let ((?x67927 (- (- (- (- (- (- (- ?x67900 ?x67902) ?x67906) ?x67921) ?x67076) ?x67078) ?x67925) ?x67080)))
 (let ((?x67941 (+ (+ (- (- (- (- (- ?x67927 ?x67928) ?x67930) ?x67932) ?x67934) ?x67936) ?x67938) ?x67940)))
 (let ((?x67955 (+ (+ (+ (+ (+ (+ (+ ?x67941 ?x67942) ?x67944) ?x67946) ?x67948) ?x67950) ?x67952) ?x67954)))
 (let ((?x67961 (- (- (+ ?x67955 ?x67956) (* (* 1.0 l_0_13_76) l_0_13_83)) (* (* 1.0 l_0_13_77) l_0_13_84))))
 (= (- ?x67961 (* (* 1.0 l_0_13_78) l_0_13_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x67851 (* 2.0 l_0_13_51)))
 (let ((?x68058 (* ?x67851 l_0_13_69)))
 (let ((?x67848 (* 2.0 l_0_13_50)))
 (let ((?x68056 (* ?x67848 l_0_13_68)))
 (let ((?x67845 (* 2.0 l_0_13_49)))
 (let ((?x68054 (* ?x67845 l_0_13_67)))
 (let ((?x67842 (* 2.0 l_0_13_48)))
 (let ((?x68052 (* ?x67842 l_0_13_66)))
 (let ((?x67839 (* 2.0 l_0_13_47)))
 (let ((?x68050 (* ?x67839 l_0_13_65)))
 (let ((?x67836 (* 2.0 l_0_13_195)))
 (let ((?x68048 (* ?x67836 l_0_13_213)))
 (let ((?x67833 (* 2.0 l_0_13_194)))
 (let ((?x68046 (* ?x67833 l_0_13_212)))
 (let ((?x67830 (* 2.0 l_0_13_193)))
 (let ((?x68044 (* ?x67830 l_0_13_211)))
 (let ((?x67827 (* 2.0 l_0_13_192)))
 (let ((?x68042 (* ?x67827 l_0_13_210)))
 (let ((?x67824 (* 2.0 l_0_13_191)))
 (let ((?x68040 (* ?x67824 l_0_13_209)))
 (let ((?x67821 (* 2.0 l_0_13_159)))
 (let ((?x68038 (* ?x67821 l_0_13_177)))
 (let ((?x67818 (* 2.0 l_0_13_158)))
 (let ((?x68036 (* ?x67818 l_0_13_176)))
 (let ((?x67815 (* 2.0 l_0_13_157)))
 (let ((?x68034 (* ?x67815 l_0_13_175)))
 (let ((?x67812 (* 2.0 l_0_13_156)))
 (let ((?x68032 (* ?x67812 l_0_13_174)))
 (let ((?x67809 (* 2.0 l_0_13_155)))
 (let ((?x68030 (* ?x67809 l_0_13_173)))
 (let ((?x67806 (* 2.0 l_0_13_15)))
 (let ((?x68028 (* ?x67806 l_0_13_33)))
 (let ((?x67803 (* 2.0 l_0_13_14)))
 (let ((?x68026 (* ?x67803 l_0_13_32)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x68024 (* ?x67073 l_0_13_31)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x68022 (* ?x66629 l_0_13_30)))
 (let ((?x68029 (- (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_29) ?x68022) ?x68024) ?x68026) ?x68028)))
 (let ((?x68043 (+ (+ (- (- (- (- (- ?x68029 ?x68030) ?x68032) ?x68034) ?x68036) ?x68038) ?x68040) ?x68042)))
 (let ((?x68057 (+ (+ (+ (+ (+ (+ (+ ?x68043 ?x68044) ?x68046) ?x68048) ?x68050) ?x68052) ?x68054) ?x68056)))
 (= (+ ?x68057 ?x68058) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68169 (* l_0_13_57 l_0_13_57)))
 (let ((?x68167 (* l_0_13_56 l_0_13_56)))
 (let ((?x68165 (* l_0_13_55 l_0_13_55)))
 (let ((?x68163 (* l_0_13_54 l_0_13_54)))
 (let ((?x68161 (* l_0_13_53 l_0_13_53)))
 (let ((?x68159 (* l_0_13_52 l_0_13_52)))
 (let ((?x68157 (* l_0_13_21 l_0_13_21)))
 (let ((?x68155 (* l_0_13_201 l_0_13_201)))
 (let ((?x68153 (* l_0_13_200 l_0_13_200)))
 (let ((?x68151 (* l_0_13_20 l_0_13_20)))
 (let ((?x68149 (* l_0_13_199 l_0_13_199)))
 (let ((?x68147 (* l_0_13_198 l_0_13_198)))
 (let ((?x68145 (* l_0_13_197 l_0_13_197)))
 (let ((?x68143 (* l_0_13_196 l_0_13_196)))
 (let ((?x68141 (* l_0_13_19 l_0_13_19)))
 (let ((?x68139 (* l_0_13_18 l_0_13_18)))
 (let ((?x68137 (* l_0_13_17 l_0_13_17)))
 (let ((?x68135 (* l_0_13_165 l_0_13_165)))
 (let ((?x68120 (* l_0_13_164 l_0_13_164)))
 (let ((?x68117 (* l_0_13_163 l_0_13_163)))
 (let ((?x68113 (* l_0_13_162 l_0_13_162)))
 (let ((?x68109 (* l_0_13_161 l_0_13_161)))
 (let ((?x68111 (- (- (* (- l_0_13_16) l_0_13_16) (* l_0_13_160 l_0_13_160)) ?x68109)))
 (let ((?x68142 (- (- (- (- (- (- (- ?x68111 ?x68113) ?x68117) ?x68120) ?x68135) ?x68137) ?x68139) ?x68141)))
 (let ((?x68156 (+ (+ (- (+ (+ (+ (+ ?x68142 ?x68143) ?x68145) ?x68147) ?x68149) ?x68151) ?x68153) ?x68155)))
 (let ((?x68170 (+ (+ (+ (+ (+ (+ (- ?x68156 ?x68157) ?x68159) ?x68161) ?x68163) ?x68165) ?x68167) ?x68169)))
 (= ?x68170 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x68295 (* 2.0 l_0_13_57)))
 (let ((?x68296 (* ?x68295 l_0_13_63)))
 (let ((?x68292 (* 2.0 l_0_13_56)))
 (let ((?x68293 (* ?x68292 l_0_13_62)))
 (let ((?x68289 (* 2.0 l_0_13_55)))
 (let ((?x68290 (* ?x68289 l_0_13_61)))
 (let ((?x68286 (* 2.0 l_0_13_54)))
 (let ((?x68287 (* ?x68286 l_0_13_60)))
 (let ((?x68283 (* 2.0 l_0_13_53)))
 (let ((?x68284 (* ?x68283 l_0_13_59)))
 (let ((?x68280 (* 2.0 l_0_13_52)))
 (let ((?x68281 (* ?x68280 l_0_13_58)))
 (let ((?x68277 (* 2.0 l_0_13_21)))
 (let ((?x68278 (* ?x68277 l_0_13_27)))
 (let ((?x68274 (* 2.0 l_0_13_201)))
 (let ((?x68275 (* ?x68274 l_0_13_207)))
 (let ((?x68271 (* 2.0 l_0_13_200)))
 (let ((?x68272 (* ?x68271 l_0_13_206)))
 (let ((?x68268 (* 2.0 l_0_13_20)))
 (let ((?x68269 (* ?x68268 l_0_13_26)))
 (let ((?x68265 (* 2.0 l_0_13_199)))
 (let ((?x68266 (* ?x68265 l_0_13_205)))
 (let ((?x68262 (* 2.0 l_0_13_198)))
 (let ((?x68263 (* ?x68262 l_0_13_204)))
 (let ((?x68259 (* 2.0 l_0_13_197)))
 (let ((?x68260 (* ?x68259 l_0_13_203)))
 (let ((?x68256 (* 2.0 l_0_13_196)))
 (let ((?x68257 (* ?x68256 l_0_13_202)))
 (let ((?x68253 (* 2.0 l_0_13_19)))
 (let ((?x68254 (* ?x68253 l_0_13_25)))
 (let ((?x67139 (* 2.0 l_0_13_18)))
 (let ((?x68251 (* ?x67139 l_0_13_24)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x68249 (* ?x66719 l_0_13_23)))
 (let ((?x68246 (* 2.0 l_0_13_165)))
 (let ((?x68247 (* ?x68246 l_0_13_171)))
 (let ((?x68243 (* 2.0 l_0_13_164)))
 (let ((?x68244 (* ?x68243 l_0_13_170)))
 (let ((?x68240 (* 2.0 l_0_13_163)))
 (let ((?x68241 (* ?x68240 l_0_13_169)))
 (let ((?x68237 (* 2.0 l_0_13_162)))
 (let ((?x68238 (* ?x68237 l_0_13_168)))
 (let ((?x68234 (* 2.0 l_0_13_161)))
 (let ((?x68235 (* ?x68234 l_0_13_167)))
 (let ((?x68231 (* 2.0 l_0_13_160)))
 (let ((?x68232 (* ?x68231 l_0_13_166)))
 (let ((?x66716 (* 2.0 l_0_13_16)))
 (let ((?x68229 (* ?x66716 l_0_13_22)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67122 (* ?x66713 l_0_13_162)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x9135 (* ?x66710 l_0_13_161)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x68225 (* ?x66707 l_0_13_160)))
 (let ((?x68222 (+ (* (* 1.0 l_0_13_112) l_0_13_124) (* (* 1.0 l_0_13_113) l_0_13_125))))
 (let ((?x68228 (- (- (- (+ ?x68222 (* (* 1.0 l_0_13_114) l_0_13_126)) ?x68225) ?x9135) ?x67122)))
 (let ((?x68248 (- (- (- (- (- (- (- ?x68228 ?x68229) ?x68232) ?x68235) ?x68238) ?x68241) ?x68244) ?x68247)))
 (let ((?x68267 (+ (+ (+ (+ (- (- (- ?x68248 ?x68249) ?x68251) ?x68254) ?x68257) ?x68260) ?x68263) ?x68266)))
 (let ((?x68288 (+ (+ (+ (- (+ (+ (- ?x68267 ?x68269) ?x68272) ?x68275) ?x68278) ?x68281) ?x68284) ?x68287)))
 (let ((?x68299 (- (+ (+ (+ ?x68288 ?x68290) ?x68293) ?x68296) (* (* 1.0 l_0_13_76) l_0_13_88))))
 (let ((?x68303 (- (- ?x68299 (* (* 1.0 l_0_13_77) l_0_13_89)) (* (* 1.0 l_0_13_78) l_0_13_90))))
 (= ?x68303 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68295 (* 2.0 l_0_13_57)))
 (let ((?x68426 (* ?x68295 l_0_13_70)))
 (let ((?x68292 (* 2.0 l_0_13_56)))
 (let ((?x68424 (* ?x68292 l_0_13_69)))
 (let ((?x68289 (* 2.0 l_0_13_55)))
 (let ((?x68422 (* ?x68289 l_0_13_68)))
 (let ((?x68286 (* 2.0 l_0_13_54)))
 (let ((?x68420 (* ?x68286 l_0_13_67)))
 (let ((?x68283 (* 2.0 l_0_13_53)))
 (let ((?x68418 (* ?x68283 l_0_13_66)))
 (let ((?x68280 (* 2.0 l_0_13_52)))
 (let ((?x68416 (* ?x68280 l_0_13_65)))
 (let ((?x68277 (* 2.0 l_0_13_21)))
 (let ((?x68414 (* ?x68277 l_0_13_34)))
 (let ((?x68274 (* 2.0 l_0_13_201)))
 (let ((?x68412 (* ?x68274 l_0_13_214)))
 (let ((?x68271 (* 2.0 l_0_13_200)))
 (let ((?x68410 (* ?x68271 l_0_13_213)))
 (let ((?x68268 (* 2.0 l_0_13_20)))
 (let ((?x68408 (* ?x68268 l_0_13_33)))
 (let ((?x68265 (* 2.0 l_0_13_199)))
 (let ((?x68406 (* ?x68265 l_0_13_212)))
 (let ((?x68262 (* 2.0 l_0_13_198)))
 (let ((?x68404 (* ?x68262 l_0_13_211)))
 (let ((?x68259 (* 2.0 l_0_13_197)))
 (let ((?x68402 (* ?x68259 l_0_13_210)))
 (let ((?x68256 (* 2.0 l_0_13_196)))
 (let ((?x68400 (* ?x68256 l_0_13_209)))
 (let ((?x68253 (* 2.0 l_0_13_19)))
 (let ((?x68398 (* ?x68253 l_0_13_32)))
 (let ((?x67139 (* 2.0 l_0_13_18)))
 (let ((?x68396 (* ?x67139 l_0_13_31)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x68394 (* ?x66719 l_0_13_30)))
 (let ((?x68246 (* 2.0 l_0_13_165)))
 (let ((?x68392 (* ?x68246 l_0_13_178)))
 (let ((?x68243 (* 2.0 l_0_13_164)))
 (let ((?x68390 (* ?x68243 l_0_13_177)))
 (let ((?x68240 (* 2.0 l_0_13_163)))
 (let ((?x68388 (* ?x68240 l_0_13_176)))
 (let ((?x68237 (* 2.0 l_0_13_162)))
 (let ((?x68386 (* ?x68237 l_0_13_175)))
 (let ((?x68234 (* 2.0 l_0_13_161)))
 (let ((?x68384 (* ?x68234 l_0_13_174)))
 (let ((?x68231 (* 2.0 l_0_13_160)))
 (let ((?x68382 (* ?x68231 l_0_13_173)))
 (let ((?x68389 (- (- (- (- (* (* (- 2.0) l_0_13_16) l_0_13_29) ?x68382) ?x68384) ?x68386) ?x68388)))
 (let ((?x68403 (+ (+ (- (- (- (- (- ?x68389 ?x68390) ?x68392) ?x68394) ?x68396) ?x68398) ?x68400) ?x68402)))
 (let ((?x68417 (+ (- (+ (+ (- (+ (+ ?x68403 ?x68404) ?x68406) ?x68408) ?x68410) ?x68412) ?x68414) ?x68416)))
 (= (+ (+ (+ (+ (+ ?x68417 ?x68418) ?x68420) ?x68422) ?x68424) ?x68426) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68513 (* l_0_13_64 l_0_13_64)))
 (let ((?x68511 (* l_0_13_63 l_0_13_63)))
 (let ((?x68509 (* l_0_13_62 l_0_13_62)))
 (let ((?x68507 (* l_0_13_61 l_0_13_61)))
 (let ((?x68505 (* l_0_13_60 l_0_13_60)))
 (let ((?x68503 (* l_0_13_59 l_0_13_59)))
 (let ((?x68501 (* l_0_13_58 l_0_13_58)))
 (let ((?x68499 (* l_0_13_28 l_0_13_28)))
 (let ((?x68497 (* l_0_13_27 l_0_13_27)))
 (let ((?x68495 (* l_0_13_26 l_0_13_26)))
 (let ((?x68493 (* l_0_13_25 l_0_13_25)))
 (let ((?x68491 (* l_0_13_24 l_0_13_24)))
 (let ((?x68489 (* l_0_13_23 l_0_13_23)))
 (let ((?x68487 (* l_0_13_22 l_0_13_22)))
 (let ((?x68485 (* l_0_13_208 l_0_13_208)))
 (let ((?x68483 (* l_0_13_207 l_0_13_207)))
 (let ((?x68481 (* l_0_13_206 l_0_13_206)))
 (let ((?x68479 (* l_0_13_205 l_0_13_205)))
 (let ((?x68477 (* l_0_13_204 l_0_13_204)))
 (let ((?x68475 (* l_0_13_203 l_0_13_203)))
 (let ((?x68473 (* l_0_13_202 l_0_13_202)))
 (let ((?x68471 (* l_0_13_172 l_0_13_172)))
 (let ((?x68469 (* l_0_13_171 l_0_13_171)))
 (let ((?x68467 (* l_0_13_170 l_0_13_170)))
 (let ((?x68465 (* l_0_13_169 l_0_13_169)))
 (let ((?x68463 (* l_0_13_168 l_0_13_168)))
 (let ((?x68461 (* l_0_13_167 l_0_13_167)))
 (let ((?x68459 (* l_0_13_166 l_0_13_166)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67206 (* ?x66713 l_0_13_168)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x67203 (* ?x66710 l_0_13_167)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x67200 (* ?x66707 l_0_13_166)))
 (let ((?x68441 (+ (* (* 1.0 l_0_13_112) l_0_13_130) (* (* 1.0 l_0_13_113) l_0_13_131))))
 (let ((?x68458 (- (- (- (+ ?x68441 (* (* 1.0 l_0_13_114) l_0_13_132)) ?x67200) ?x67203) ?x67206)))
 (let ((?x68472 (- (- (- (- (- (- (- ?x68458 ?x68459) ?x68461) ?x68463) ?x68465) ?x68467) ?x68469) ?x68471)))
 (let ((?x68486 (+ (+ (+ (+ (+ (+ (+ ?x68472 ?x68473) ?x68475) ?x68477) ?x68479) ?x68481) ?x68483) ?x68485)))
 (let ((?x68500 (- (- (- (- (- (- (- ?x68486 ?x68487) ?x68489) ?x68491) ?x68493) ?x68495) ?x68497) ?x68499)))
 (let ((?x68514 (+ (+ (+ (+ (+ (+ (+ ?x68500 ?x68501) ?x68503) ?x68505) ?x68507) ?x68509) ?x68511) ?x68513)))
 (let ((?x68518 (- (- ?x68514 (* (* 1.0 l_0_13_76) l_0_13_94)) (* (* 1.0 l_0_13_77) l_0_13_95))))
 (= (- ?x68518 (* (* 1.0 l_0_13_78) l_0_13_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68673 (* (* 2.0 l_0_13_64) l_0_13_71)))
 (let ((?x68670 (* (* 2.0 l_0_13_63) l_0_13_70)))
 (let ((?x68667 (* (* 2.0 l_0_13_62) l_0_13_69)))
 (let ((?x68664 (* (* 2.0 l_0_13_61) l_0_13_68)))
 (let ((?x68661 (* (* 2.0 l_0_13_60) l_0_13_67)))
 (let ((?x68658 (* (* 2.0 l_0_13_59) l_0_13_66)))
 (let ((?x68655 (* (* 2.0 l_0_13_58) l_0_13_65)))
 (let ((?x68652 (* (* 2.0 l_0_13_28) l_0_13_35)))
 (let ((?x68649 (* (* 2.0 l_0_13_27) l_0_13_34)))
 (let ((?x68646 (* (* 2.0 l_0_13_26) l_0_13_33)))
 (let ((?x68643 (* (* 2.0 l_0_13_25) l_0_13_32)))
 (let ((?x67220 (* 2.0 l_0_13_24)))
 (let ((?x68640 (* ?x67220 l_0_13_31)))
 (let ((?x66828 (* 2.0 l_0_13_23)))
 (let ((?x68638 (* ?x66828 l_0_13_30)))
 (let ((?x67215 (* 2.0 l_0_13_22)))
 (let ((?x68636 (* ?x67215 l_0_13_29)))
 (let ((?x68634 (* (* 2.0 l_0_13_208) l_0_13_215)))
 (let ((?x68631 (* (* 2.0 l_0_13_207) l_0_13_214)))
 (let ((?x68628 (* (* 2.0 l_0_13_206) l_0_13_213)))
 (let ((?x68625 (* (* 2.0 l_0_13_205) l_0_13_212)))
 (let ((?x68622 (* (* 2.0 l_0_13_204) l_0_13_211)))
 (let ((?x68619 (* (* 2.0 l_0_13_203) l_0_13_210)))
 (let ((?x68616 (* (* 2.0 l_0_13_202) l_0_13_209)))
 (let ((?x68613 (* (* 2.0 l_0_13_172) l_0_13_179)))
 (let ((?x68610 (* (* 2.0 l_0_13_171) l_0_13_178)))
 (let ((?x68607 (* (* 2.0 l_0_13_170) l_0_13_177)))
 (let ((?x68604 (* (* 2.0 l_0_13_169) l_0_13_176)))
 (let ((?x68601 (* (* 2.0 l_0_13_168) l_0_13_175)))
 (let ((?x68598 (* (* 2.0 l_0_13_167) l_0_13_174)))
 (let ((?x68595 (* (* 2.0 l_0_13_166) l_0_13_173)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x66714 (* ?x66713 l_0_13_175)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x66711 (* ?x66710 l_0_13_174)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x66708 (* ?x66707 l_0_13_173)))
 (let ((?x68581 (- (* (* (- 1.0) l_0_13_101) l_0_13_76) (* (* 1.0 l_0_13_102) l_0_13_77))))
 (let ((?x68586 (+ (- ?x68581 (* (* 1.0 l_0_13_103) l_0_13_78)) (* (* 1.0 l_0_13_112) l_0_13_137))))
 (let ((?x68590 (+ (+ ?x68586 (* (* 1.0 l_0_13_113) l_0_13_138)) (* (* 1.0 l_0_13_114) l_0_13_139))))
 (let ((?x68605 (- (- (- (- (- (- (- ?x68590 ?x66708) ?x66711) ?x66714) ?x68595) ?x68598) ?x68601) ?x68604)))
 (let ((?x68626 (+ (+ (+ (+ (- (- (- ?x68605 ?x68607) ?x68610) ?x68613) ?x68616) ?x68619) ?x68622) ?x68625)))
 (let ((?x68644 (- (- (- (- (+ (+ (+ ?x68626 ?x68628) ?x68631) ?x68634) ?x68636) ?x68638) ?x68640) ?x68643)))
 (let ((?x68665 (+ (+ (+ (+ (- (- (- ?x68644 ?x68646) ?x68649) ?x68652) ?x68655) ?x68658) ?x68661) ?x68664)))
 (= (+ (+ (+ ?x68665 ?x68667) ?x68670) ?x68673) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68798 (* l_0_13_72 l_0_13_72)))
 (let ((?x68796 (* l_0_13_71 l_0_13_71)))
 (let ((?x68794 (* l_0_13_70 l_0_13_70)))
 (let ((?x68792 (* l_0_13_69 l_0_13_69)))
 (let ((?x68790 (* l_0_13_68 l_0_13_68)))
 (let ((?x68788 (* l_0_13_67 l_0_13_67)))
 (let ((?x68786 (* l_0_13_66 l_0_13_66)))
 (let ((?x68784 (* l_0_13_65 l_0_13_65)))
 (let ((?x68782 (* l_0_13_36 l_0_13_36)))
 (let ((?x68780 (* l_0_13_35 l_0_13_35)))
 (let ((?x68778 (* l_0_13_34 l_0_13_34)))
 (let ((?x68776 (* l_0_13_33 l_0_13_33)))
 (let ((?x68774 (* l_0_13_32 l_0_13_32)))
 (let ((?x68772 (* l_0_13_31 l_0_13_31)))
 (let ((?x68770 (* l_0_13_30 l_0_13_30)))
 (let ((?x68768 (* l_0_13_29 l_0_13_29)))
 (let ((?x68766 (* l_0_13_216 l_0_13_216)))
 (let ((?x68764 (* l_0_13_215 l_0_13_215)))
 (let ((?x68762 (* l_0_13_214 l_0_13_214)))
 (let ((?x68760 (* l_0_13_213 l_0_13_213)))
 (let ((?x68758 (* l_0_13_212 l_0_13_212)))
 (let ((?x68756 (* l_0_13_211 l_0_13_211)))
 (let ((?x68754 (* l_0_13_210 l_0_13_210)))
 (let ((?x68752 (* l_0_13_209 l_0_13_209)))
 (let ((?x68750 (* l_0_13_180 l_0_13_180)))
 (let ((?x68748 (* l_0_13_179 l_0_13_179)))
 (let ((?x68746 (* l_0_13_178 l_0_13_178)))
 (let ((?x68744 (* l_0_13_177 l_0_13_177)))
 (let ((?x68742 (* l_0_13_176 l_0_13_176)))
 (let ((?x68740 (* l_0_13_175 l_0_13_175)))
 (let ((?x68741 (- (- (* (- l_0_13_173) l_0_13_173) (* l_0_13_174 l_0_13_174)) ?x68740)))
 (let ((?x68755 (+ (+ (- (- (- (- (- ?x68741 ?x68742) ?x68744) ?x68746) ?x68748) ?x68750) ?x68752) ?x68754)))
 (let ((?x68769 (- (+ (+ (+ (+ (+ (+ ?x68755 ?x68756) ?x68758) ?x68760) ?x68762) ?x68764) ?x68766) ?x68768)))
 (let ((?x68783 (- (- (- (- (- (- (- ?x68769 ?x68770) ?x68772) ?x68774) ?x68776) ?x68778) ?x68780) ?x68782)))
 (let ((?x68797 (+ (+ (+ (+ (+ (+ (+ ?x68783 ?x68784) ?x68786) ?x68788) ?x68790) ?x68792) ?x68794) ?x68796)))
 (= (+ ?x68797 ?x68798) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x66222 (* l_0_13_37 l_0_13_37)))
 (let ((?x68837 (* l_0_13_289 l_0_13_289)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x68835 (* ?x68834 l_0_13_295)))
 (let ((?x68836 (- (- (* l_0_13_1 l_0_13_1) (* (* 2.0 l_0_13_109) l_0_13_115)) ?x68835)))
 (= (+ (- (- ?x68836 ?x68837) ?x66222) (* (* 2.0 l_0_13_73) l_0_13_79)) 0.0)))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66274 (* ?x66273 l_0_13_38)))
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x68870 (* ?x68869 l_0_13_296)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x68867 (* ?x68866 l_0_13_295)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x68864 (* ?x68834 l_0_13_290)))
 (let ((?x68860 (- (* (* 2.0 l_0_13_1) l_0_13_2) (* (* 2.0 l_0_13_110) l_0_13_115))))
 (let ((?x68871 (- (- (- (- ?x68860 (* (* 2.0 l_0_13_111) l_0_13_116)) ?x68864) ?x68867) ?x68870)))
 (let ((?x68877 (- (- ?x68871 (* (* 2.0 l_0_13_325) l_0_13_331)) (* (* 2.0 l_0_13_361) l_0_13_367))))
 (let ((?x68884 (- (- (- ?x68877 ?x66274) (* (* 2.0 l_0_13_397) l_0_13_403)) (* (* 2.0 l_0_13_433) l_0_13_439))))
 (let ((?x68890 (+ (- ?x68884 (* (* 2.0 l_0_13_469) l_0_13_475)) (* (* 2.0 l_0_13_74) l_0_13_79))))
 (= (+ ?x68890 (* (* 2.0 l_0_13_75) l_0_13_80)) 0.0)))))))))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66330 (* ?x66273 l_0_13_40)))
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x68945 (* ?x66270 l_0_13_297)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x68943 (* ?x66267 l_0_13_296)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x68941 (* ?x66264 l_0_13_295)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x68939 (* ?x68834 l_0_13_292)))
 (let ((?x68930 (- (* (* 2.0 l_0_13_1) l_0_13_4) (* (* 2.0 l_0_13_112) l_0_13_115))))
 (let ((?x68938 (- (- ?x68930 (* (* 2.0 l_0_13_113) l_0_13_116)) (* (* 2.0 l_0_13_114) l_0_13_117))))
 (let ((?x68950 (+ (- (- (- (- (- ?x68938 ?x68939) ?x68941) ?x68943) ?x68945) ?x66330) (* (* 2.0 l_0_13_76) l_0_13_79))))
 (let ((?x68956 (+ (+ ?x68950 (* (* 2.0 l_0_13_77) l_0_13_80)) (* (* 2.0 l_0_13_78) l_0_13_81))))
 (= ?x68956 0.0))))))))))))))))
(assert
 (let ((?x68979 (* l_0_13_82 l_0_13_82)))
 (let ((?x68977 (* l_0_13_81 l_0_13_81)))
 (let ((?x68975 (* l_0_13_80 l_0_13_80)))
 (let ((?x68973 (* l_0_13_79 l_0_13_79)))
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66353 (* ?x66273 l_0_13_43)))
 (let ((?x68970 (* l_0_13_298 l_0_13_298)))
 (let ((?x68968 (* l_0_13_297 l_0_13_297)))
 (let ((?x68966 (* l_0_13_296 l_0_13_296)))
 (let ((?x68964 (* l_0_13_295 l_0_13_295)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x68835 (* ?x68834 l_0_13_295)))
 (let ((?x68961 (* l_0_13_118 l_0_13_118)))
 (let ((?x68959 (* l_0_13_117 l_0_13_117)))
 (let ((?x45987 (* l_0_13_116 l_0_13_116)))
 (let ((?x45986 (- (- (* (* 2.0 l_0_13_1) l_0_13_7) (* l_0_13_115 l_0_13_115)) ?x45987)))
 (let ((?x68971 (- (- (- (- (- (- (- ?x45986 ?x68959) ?x68961) ?x68835) ?x68964) ?x68966) ?x68968) ?x68970)))
 (= (+ (+ (+ (+ (- ?x68971 ?x66353) ?x68973) ?x68975) ?x68977) ?x68979) 0.0)))))))))))))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66372 (* ?x66273 l_0_13_47)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69035 (* ?x69034 l_0_13_302)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69032 (* ?x69031 l_0_13_301)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69029 (* ?x69028 l_0_13_300)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69026 (* ?x69025 l_0_13_299)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69023 (* ?x68834 l_0_13_299)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x69021 (* ?x69020 l_0_13_259)))
 (let ((?x69010 (- (* (* 2.0 l_0_13_1) l_0_13_11) (* (* 2.0 l_0_13_115) l_0_13_119))))
 (let ((?x69016 (- (- ?x69010 (* (* 2.0 l_0_13_116) l_0_13_120)) (* (* 2.0 l_0_13_117) l_0_13_121))))
 (let ((?x69027 (- (- (+ (- ?x69016 (* (* 2.0 l_0_13_118) l_0_13_122)) ?x69021) ?x69023) ?x69026)))
 (let ((?x69040 (+ (- (- (- (- ?x69027 ?x69029) ?x69032) ?x69035) ?x66372) (* (* 2.0 l_0_13_79) l_0_13_83))))
 (let ((?x69046 (+ (+ ?x69040 (* (* 2.0 l_0_13_80) l_0_13_84)) (* (* 2.0 l_0_13_81) l_0_13_85))))
 (= (+ ?x69046 (* (* 2.0 l_0_13_82) l_0_13_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66395 (* ?x66273 l_0_13_52)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69097 (* ?x69034 l_0_13_307)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69095 (* ?x69031 l_0_13_306)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69093 (* ?x69028 l_0_13_305)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69091 (* ?x69025 l_0_13_304)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69089 (* ?x68834 l_0_13_304)))
 (let ((?x68835 (* ?x68834 l_0_13_295)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66351 (* ?x66258 l_0_13_187)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66344 (* ?x66255 l_0_13_151)))
 (let ((?x69079 (- (* (* 2.0 l_0_13_1) l_0_13_16) (* (* 2.0 l_0_13_115) l_0_13_124))))
 (let ((?x69083 (- (- ?x69079 (* (* 2.0 l_0_13_116) l_0_13_125)) (* (* 2.0 l_0_13_117) l_0_13_126))))
 (let ((?x69088 (+ (- (+ (- ?x69083 (* (* 2.0 l_0_13_118) l_0_13_127)) ?x66344) ?x66351) ?x68835)))
 (let ((?x69101 (+ (- (- (- (- (- (- ?x69088 ?x69089) ?x69091) ?x69093) ?x69095) ?x69097) ?x66395) (* (* 2.0 l_0_13_79) l_0_13_88))))
 (let ((?x69105 (+ (+ ?x69101 (* (* 2.0 l_0_13_80) l_0_13_89)) (* (* 2.0 l_0_13_81) l_0_13_90))))
 (= (+ ?x69105 (* (* 2.0 l_0_13_82) l_0_13_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66422 (* ?x66273 l_0_13_58)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69137 (* ?x69034 l_0_13_313)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69135 (* ?x69031 l_0_13_312)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69133 (* ?x69028 l_0_13_311)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69131 (* ?x69025 l_0_13_310)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69129 (* ?x68834 l_0_13_310)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x69021 (* ?x69020 l_0_13_259)))
 (let ((?x41686 (- (* (* 2.0 l_0_13_1) l_0_13_22) (* (* 2.0 l_0_13_115) l_0_13_130))))
 (let ((?x46168 (- (- ?x41686 (* (* 2.0 l_0_13_116) l_0_13_131)) (* (* 2.0 l_0_13_117) l_0_13_132))))
 (let ((?x69132 (- (- (- (- ?x46168 (* (* 2.0 l_0_13_118) l_0_13_133)) ?x69021) ?x69129) ?x69131)))
 (let ((?x69141 (+ (- (- (- (- ?x69132 ?x69133) ?x69135) ?x69137) ?x66422) (* (* 2.0 l_0_13_79) l_0_13_94))))
 (let ((?x69145 (+ (+ ?x69141 (* (* 2.0 l_0_13_80) l_0_13_95)) (* (* 2.0 l_0_13_81) l_0_13_96))))
 (= (+ ?x69145 (* (* 2.0 l_0_13_82) l_0_13_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x66273 (* 2.0 l_0_13_37)))
 (let ((?x66454 (* ?x66273 l_0_13_65)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69198 (* ?x69034 l_0_13_320)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69196 (* ?x69031 l_0_13_319)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69194 (* ?x69028 l_0_13_318)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69192 (* ?x69025 l_0_13_317)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69190 (* ?x68834 l_0_13_317)))
 (let ((?x41879 (+ (* (* 2.0 l_0_13_1) l_0_13_29) (* (* 2.0 l_0_13_101) l_0_13_79))))
 (let ((?x69176 (+ (+ ?x41879 (* (* 2.0 l_0_13_102) l_0_13_80)) (* (* 2.0 l_0_13_103) l_0_13_81))))
 (let ((?x69181 (- (+ ?x69176 (* (* 2.0 l_0_13_104) l_0_13_82)) (* (* 2.0 l_0_13_115) l_0_13_137))))
 (let ((?x69185 (- (- ?x69181 (* (* 2.0 l_0_13_116) l_0_13_138)) (* (* 2.0 l_0_13_117) l_0_13_139))))
 (let ((?x69189 (- (- ?x69185 (* (* 2.0 l_0_13_118) l_0_13_140)) (* (* 2.0 l_0_13_217) l_0_13_223))))
 (= (- (- (- (- (- (- ?x69189 ?x69190) ?x69192) ?x69194) ?x69196) ?x69198) ?x66454) 0.0)))))))))))))))))))
(assert
 (let ((?x65796 (* l_0_13_39 l_0_13_39)))
 (let ((?x65794 (* l_0_13_38 l_0_13_38)))
 (let ((?x65774 (* l_0_13_3 l_0_13_3)))
 (let ((?x65900 (* l_0_13_291 l_0_13_291)))
 (let ((?x69232 (+ (- (- (* l_0_13_2 l_0_13_2) (* l_0_13_290 l_0_13_290)) ?x65900) ?x65774)))
 (let ((?x69236 (- (- ?x69232 (* (* 2.0 l_0_13_326) l_0_13_331)) (* (* 2.0 l_0_13_327) l_0_13_332))))
 (let ((?x69240 (- (- ?x69236 (* (* 2.0 l_0_13_362) l_0_13_367)) (* (* 2.0 l_0_13_363) l_0_13_368))))
 (let ((?x69246 (- (- (- (- ?x69240 ?x65794) ?x65796) (* (* 2.0 l_0_13_398) l_0_13_403)) (* (* 2.0 l_0_13_399) l_0_13_404))))
 (let ((?x69250 (- (- ?x69246 (* (* 2.0 l_0_13_434) l_0_13_439)) (* (* 2.0 l_0_13_435) l_0_13_440))))
 (let ((?x69254 (- (- ?x69250 (* (* 2.0 l_0_13_470) l_0_13_475)) (* (* 2.0 l_0_13_471) l_0_13_476))))
 (= ?x69254 0.0))))))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66499 (* ?x66498 l_0_13_41)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66496 (* ?x66495 l_0_13_40)))
 (let ((?x66492 (* 2.0 l_0_13_3)))
 (let ((?x66493 (* ?x66492 l_0_13_5)))
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x42125 (* ?x68869 l_0_13_293)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x42255 (* ?x68866 l_0_13_292)))
 (let ((?x66483 (* 2.0 l_0_13_2)))
 (let ((?x66484 (* ?x66483 l_0_13_4)))
 (let ((?x46391 (- (+ (- (- ?x66484 ?x42255) ?x42125) ?x66493) (* (* 2.0 l_0_13_328) l_0_13_331))))
 (let ((?x69259 (- (- ?x46391 (* (* 2.0 l_0_13_329) l_0_13_332)) (* (* 2.0 l_0_13_330) l_0_13_333))))
 (let ((?x69263 (- (- ?x69259 (* (* 2.0 l_0_13_364) l_0_13_367)) (* (* 2.0 l_0_13_365) l_0_13_368))))
 (let ((?x69269 (- (- (- (- ?x69263 (* (* 2.0 l_0_13_366) l_0_13_369)) ?x66496) ?x66499) (* (* 2.0 l_0_13_400) l_0_13_403))))
 (let ((?x69273 (- (- ?x69269 (* (* 2.0 l_0_13_401) l_0_13_404)) (* (* 2.0 l_0_13_402) l_0_13_405))))
 (let ((?x69277 (- (- ?x69273 (* (* 2.0 l_0_13_436) l_0_13_439)) (* (* 2.0 l_0_13_437) l_0_13_440))))
 (let ((?x69281 (- (- ?x69277 (* (* 2.0 l_0_13_438) l_0_13_441)) (* (* 2.0 l_0_13_472) l_0_13_475))))
 (let ((?x69285 (- (- ?x69281 (* (* 2.0 l_0_13_473) l_0_13_476)) (* (* 2.0 l_0_13_474) l_0_13_477))))
 (= ?x69285 0.0))))))))))))))))))))))
(assert
 (let ((?x69330 (* l_0_13_478 l_0_13_478)))
 (let ((?x69328 (* l_0_13_477 l_0_13_477)))
 (let ((?x69326 (* l_0_13_476 l_0_13_476)))
 (let ((?x69324 (* l_0_13_475 l_0_13_475)))
 (let ((?x69322 (* l_0_13_442 l_0_13_442)))
 (let ((?x69320 (* l_0_13_441 l_0_13_441)))
 (let ((?x69318 (* l_0_13_440 l_0_13_440)))
 (let ((?x69316 (* l_0_13_439 l_0_13_439)))
 (let ((?x69314 (* l_0_13_406 l_0_13_406)))
 (let ((?x69312 (* l_0_13_405 l_0_13_405)))
 (let ((?x69310 (* l_0_13_404 l_0_13_404)))
 (let ((?x69308 (* l_0_13_403 l_0_13_403)))
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66562 (* ?x66498 l_0_13_44)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66560 (* ?x66495 l_0_13_43)))
 (let ((?x69304 (* l_0_13_370 l_0_13_370)))
 (let ((?x69302 (* l_0_13_369 l_0_13_369)))
 (let ((?x69300 (* l_0_13_368 l_0_13_368)))
 (let ((?x69298 (* l_0_13_367 l_0_13_367)))
 (let ((?x46616 (* l_0_13_334 l_0_13_334)))
 (let ((?x46612 (* l_0_13_333 l_0_13_333)))
 (let ((?x46617 (* l_0_13_332 l_0_13_332)))
 (let ((?x42638 (* l_0_13_331 l_0_13_331)))
 (let ((?x66492 (* 2.0 l_0_13_3)))
 (let ((?x66552 (* ?x66492 l_0_13_8)))
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x68870 (* ?x68869 l_0_13_296)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x68867 (* ?x68866 l_0_13_295)))
 (let ((?x66483 (* 2.0 l_0_13_2)))
 (let ((?x66535 (* ?x66483 l_0_13_7)))
 (let ((?x12170 (- (- (- (- (+ (- (- ?x66535 ?x68867) ?x68870) ?x66552) ?x42638) ?x46617) ?x46612) ?x46616)))
 (let ((?x69309 (- (- (- (- (- (- (- ?x12170 ?x69298) ?x69300) ?x69302) ?x69304) ?x66560) ?x66562) ?x69308)))
 (let ((?x69323 (- (- (- (- (- (- (- ?x69309 ?x69310) ?x69312) ?x69314) ?x69316) ?x69318) ?x69320) ?x69322)))
 (= (- (- (- (- ?x69323 ?x69324) ?x69326) ?x69328) ?x69330) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66658 (* ?x66498 l_0_13_48)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66656 (* ?x66495 l_0_13_47)))
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x43138 (* ?x68869 l_0_13_300)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x43132 (* ?x68866 l_0_13_299)))
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x46829 (* ?x65988 l_0_13_260)))
 (let ((?x65985 (* 2.0 l_0_13_254)))
 (let ((?x12344 (* ?x65985 l_0_13_259)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x66630 (* ?x66629 l_0_13_3)))
 (let ((?x43135 (- (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_2) ?x66630) ?x12344) ?x46829) ?x43132)))
 (let ((?x12353 (- (- (- ?x43135 ?x43138) (* (* 2.0 l_0_13_331) l_0_13_335)) (* (* 2.0 l_0_13_332) l_0_13_336))))
 (let ((?x69355 (- (- ?x12353 (* (* 2.0 l_0_13_333) l_0_13_337)) (* (* 2.0 l_0_13_334) l_0_13_338))))
 (let ((?x69361 (- (- ?x69355 (* (* 2.0 l_0_13_367) l_0_13_371)) (* (* 2.0 l_0_13_368) l_0_13_372))))
 (let ((?x69367 (- (- ?x69361 (* (* 2.0 l_0_13_369) l_0_13_373)) (* (* 2.0 l_0_13_370) l_0_13_374))))
 (let ((?x69375 (- (- (- (- ?x69367 ?x66656) ?x66658) (* (* 2.0 l_0_13_403) l_0_13_407)) (* (* 2.0 l_0_13_404) l_0_13_408))))
 (let ((?x69381 (- (- ?x69375 (* (* 2.0 l_0_13_405) l_0_13_409)) (* (* 2.0 l_0_13_406) l_0_13_410))))
 (let ((?x69387 (- (- ?x69381 (* (* 2.0 l_0_13_439) l_0_13_443)) (* (* 2.0 l_0_13_440) l_0_13_444))))
 (let ((?x69393 (- (- ?x69387 (* (* 2.0 l_0_13_441) l_0_13_445)) (* (* 2.0 l_0_13_442) l_0_13_446))))
 (let ((?x69399 (- (- ?x69393 (* (* 2.0 l_0_13_475) l_0_13_479)) (* (* 2.0 l_0_13_476) l_0_13_480))))
 (let ((?x69405 (- (- ?x69399 (* (* 2.0 l_0_13_477) l_0_13_481)) (* (* 2.0 l_0_13_478) l_0_13_482))))
 (= ?x69405 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66746 (* ?x66498 l_0_13_53)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66744 (* ?x66495 l_0_13_52)))
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x69457 (* ?x68869 l_0_13_305)))
 (let ((?x68870 (* ?x68869 l_0_13_296)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x69454 (* ?x68866 l_0_13_304)))
 (let ((?x68867 (* ?x68866 l_0_13_295)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66533 (* ?x66480 l_0_13_188)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66531 (* ?x66477 l_0_13_187)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x66720 (* ?x66719 l_0_13_3)))
 (let ((?x66716 (* 2.0 l_0_13_16)))
 (let ((?x66717 (* ?x66716 l_0_13_2)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66529 (* ?x66469 l_0_13_152)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x69447 (* ?x66632 l_0_13_151)))
 (let ((?x69455 (- (+ (- (- (+ (+ (+ ?x69447 ?x66529) ?x66717) ?x66720) ?x66531) ?x66533) ?x68867) ?x69454)))
 (let ((?x69462 (- (- (- (+ ?x69455 ?x68870) ?x69457) (* (* 2.0 l_0_13_331) l_0_13_340)) (* (* 2.0 l_0_13_332) l_0_13_341))))
 (let ((?x69466 (- (- ?x69462 (* (* 2.0 l_0_13_333) l_0_13_342)) (* (* 2.0 l_0_13_334) l_0_13_343))))
 (let ((?x69470 (- (- ?x69466 (* (* 2.0 l_0_13_367) l_0_13_376)) (* (* 2.0 l_0_13_368) l_0_13_377))))
 (let ((?x69474 (- (- ?x69470 (* (* 2.0 l_0_13_369) l_0_13_378)) (* (* 2.0 l_0_13_370) l_0_13_379))))
 (let ((?x69480 (- (- (- (- ?x69474 ?x66744) ?x66746) (* (* 2.0 l_0_13_403) l_0_13_412)) (* (* 2.0 l_0_13_404) l_0_13_413))))
 (let ((?x69484 (- (- ?x69480 (* (* 2.0 l_0_13_405) l_0_13_414)) (* (* 2.0 l_0_13_406) l_0_13_415))))
 (let ((?x69488 (- (- ?x69484 (* (* 2.0 l_0_13_439) l_0_13_448)) (* (* 2.0 l_0_13_440) l_0_13_449))))
 (let ((?x69492 (- (- ?x69488 (* (* 2.0 l_0_13_441) l_0_13_450)) (* (* 2.0 l_0_13_442) l_0_13_451))))
 (let ((?x69496 (- (- ?x69492 (* (* 2.0 l_0_13_475) l_0_13_484)) (* (* 2.0 l_0_13_476) l_0_13_485))))
 (let ((?x69500 (- (- ?x69496 (* (* 2.0 l_0_13_477) l_0_13_486)) (* (* 2.0 l_0_13_478) l_0_13_487))))
 (= ?x69500 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66836 (* ?x66498 l_0_13_59)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66834 (* ?x66495 l_0_13_58)))
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x69522 (* ?x68869 l_0_13_311)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x12641 (* ?x68866 l_0_13_310)))
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x46829 (* ?x65988 l_0_13_260)))
 (let ((?x65985 (* 2.0 l_0_13_254)))
 (let ((?x12344 (* ?x65985 l_0_13_259)))
 (let ((?x66828 (* 2.0 l_0_13_23)))
 (let ((?x66829 (* ?x66828 l_0_13_3)))
 (let ((?x66483 (* 2.0 l_0_13_2)))
 (let ((?x66820 (* ?x66483 l_0_13_22)))
 (let ((?x69525 (- (- (- (- (- (+ ?x66820 ?x66829) ?x12344) ?x46829) ?x12641) ?x69522) (* (* 2.0 l_0_13_331) l_0_13_346))))
 (let ((?x69529 (- (- ?x69525 (* (* 2.0 l_0_13_332) l_0_13_347)) (* (* 2.0 l_0_13_333) l_0_13_348))))
 (let ((?x69533 (- (- ?x69529 (* (* 2.0 l_0_13_334) l_0_13_349)) (* (* 2.0 l_0_13_367) l_0_13_382))))
 (let ((?x69537 (- (- ?x69533 (* (* 2.0 l_0_13_368) l_0_13_383)) (* (* 2.0 l_0_13_369) l_0_13_384))))
 (let ((?x69543 (- (- (- (- ?x69537 (* (* 2.0 l_0_13_370) l_0_13_385)) ?x66834) ?x66836) (* (* 2.0 l_0_13_403) l_0_13_418))))
 (let ((?x69547 (- (- ?x69543 (* (* 2.0 l_0_13_404) l_0_13_419)) (* (* 2.0 l_0_13_405) l_0_13_420))))
 (let ((?x69551 (- (- ?x69547 (* (* 2.0 l_0_13_406) l_0_13_421)) (* (* 2.0 l_0_13_439) l_0_13_454))))
 (let ((?x69555 (- (- ?x69551 (* (* 2.0 l_0_13_440) l_0_13_455)) (* (* 2.0 l_0_13_441) l_0_13_456))))
 (let ((?x69559 (- (- ?x69555 (* (* 2.0 l_0_13_442) l_0_13_457)) (* (* 2.0 l_0_13_475) l_0_13_490))))
 (let ((?x69563 (- (- ?x69559 (* (* 2.0 l_0_13_476) l_0_13_491)) (* (* 2.0 l_0_13_477) l_0_13_492))))
 (= (- ?x69563 (* (* 2.0 l_0_13_478) l_0_13_493)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x66498 (* 2.0 l_0_13_39)))
 (let ((?x66919 (* ?x66498 l_0_13_66)))
 (let ((?x66495 (* 2.0 l_0_13_38)))
 (let ((?x66917 (* ?x66495 l_0_13_65)))
 (let ((?x66492 (* 2.0 l_0_13_3)))
 (let ((?x66915 (* ?x66492 l_0_13_30)))
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x12763 (* ?x68869 l_0_13_318)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x12733 (* ?x68866 l_0_13_317)))
 (let ((?x66483 (* 2.0 l_0_13_2)))
 (let ((?x66907 (* ?x66483 l_0_13_29)))
 (let ((?x47392 (- (- ?x66907 (* (* 2.0 l_0_13_218) l_0_13_223)) (* (* 2.0 l_0_13_219) l_0_13_224))))
 (let ((?x69626 (- (+ (- (- ?x47392 ?x12733) ?x12763) ?x66915) (* (* 2.0 l_0_13_331) l_0_13_353))))
 (let ((?x69630 (- (- ?x69626 (* (* 2.0 l_0_13_332) l_0_13_354)) (* (* 2.0 l_0_13_333) l_0_13_355))))
 (let ((?x69634 (- (- ?x69630 (* (* 2.0 l_0_13_334) l_0_13_356)) (* (* 2.0 l_0_13_367) l_0_13_389))))
 (let ((?x69638 (- (- ?x69634 (* (* 2.0 l_0_13_368) l_0_13_390)) (* (* 2.0 l_0_13_369) l_0_13_391))))
 (let ((?x69644 (- (- (- (- ?x69638 (* (* 2.0 l_0_13_370) l_0_13_392)) ?x66917) ?x66919) (* (* 2.0 l_0_13_403) l_0_13_425))))
 (let ((?x69648 (- (- ?x69644 (* (* 2.0 l_0_13_404) l_0_13_426)) (* (* 2.0 l_0_13_405) l_0_13_427))))
 (let ((?x69652 (- (- ?x69648 (* (* 2.0 l_0_13_406) l_0_13_428)) (* (* 2.0 l_0_13_439) l_0_13_461))))
 (let ((?x69656 (- (- ?x69652 (* (* 2.0 l_0_13_440) l_0_13_462)) (* (* 2.0 l_0_13_441) l_0_13_463))))
 (let ((?x69660 (- (- ?x69656 (* (* 2.0 l_0_13_442) l_0_13_464)) (* (* 2.0 l_0_13_475) l_0_13_497))))
 (let ((?x69664 (- (- ?x69660 (* (* 2.0 l_0_13_476) l_0_13_498)) (* (* 2.0 l_0_13_477) l_0_13_499))))
 (= (- ?x69664 (* (* 2.0 l_0_13_478) l_0_13_500)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x66976 (* l_0_13_6 l_0_13_6)))
 (let ((?x66974 (* l_0_13_5 l_0_13_5)))
 (let ((?x66972 (* l_0_13_42 l_0_13_42)))
 (let ((?x66970 (* l_0_13_41 l_0_13_41)))
 (let ((?x66968 (* l_0_13_40 l_0_13_40)))
 (let ((?x66966 (* l_0_13_4 l_0_13_4)))
 (let ((?x69726 (* l_0_13_294 l_0_13_294)))
 (let ((?x69727 (- (- (* (- l_0_13_292) l_0_13_292) (* l_0_13_293 l_0_13_293)) ?x69726)))
 (= (+ (+ (- (- (- (+ ?x69727 ?x66966) ?x66968) ?x66970) ?x66972) ?x66974) ?x66976) 0.0))))))))))
(assert
 (let ((?x67024 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x67021 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x67018 (* ?x66570 l_0_13_45)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x67016 (* ?x66567 l_0_13_44)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x67014 (* ?x66564 l_0_13_43)))
 (let ((?x67012 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x68945 (* ?x66270 l_0_13_297)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x68943 (* ?x66267 l_0_13_296)))
 (let ((?x47571 (- (+ (- (- (* (* (- 2.0) l_0_13_292) l_0_13_295) ?x68943) ?x68945) ?x67012) ?x67014)))
 (= (+ (+ (- (- ?x47571 ?x67016) ?x67018) ?x67021) ?x67024) 0.0))))))))))))))))
(assert
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x67092 (* ?x66570 l_0_13_49)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x67090 (* ?x66567 l_0_13_48)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x67088 (* ?x66564 l_0_13_47)))
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x69751 (* ?x66270 l_0_13_301)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x69749 (* ?x66267 l_0_13_300)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x69747 (* ?x66264 l_0_13_299)))
 (let ((?x66653 (* 2.0 l_0_13_258)))
 (let ((?x69745 (* ?x66653 l_0_13_261)))
 (let ((?x66650 (* 2.0 l_0_13_257)))
 (let ((?x69743 (* ?x66650 l_0_13_260)))
 (let ((?x66647 (* 2.0 l_0_13_256)))
 (let ((?x47615 (* ?x66647 l_0_13_259)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x67074 (* ?x67073 l_0_13_6)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x67071 (* ?x66629 l_0_13_5)))
 (let ((?x69744 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_4) ?x67071) ?x67074) ?x47615) ?x69743)))
 (let ((?x69755 (- (- (- (- (- (- (+ ?x69744 ?x69745) ?x69747) ?x69749) ?x69751) ?x67088) ?x67090) ?x67092)))
 (= ?x69755 0.0))))))))))))))))))))))))))
(assert
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x67152 (* ?x66570 l_0_13_54)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x67150 (* ?x66567 l_0_13_53)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x67148 (* ?x66564 l_0_13_52)))
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x69789 (* ?x66270 l_0_13_306)))
 (let ((?x68945 (* ?x66270 l_0_13_297)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x69786 (* ?x66267 l_0_13_305)))
 (let ((?x68943 (* ?x66267 l_0_13_296)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x69783 (* ?x66264 l_0_13_304)))
 (let ((?x68941 (* ?x66264 l_0_13_295)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x67009 (* ?x66732 l_0_13_189)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x67007 (* ?x66729 l_0_13_188)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x67005 (* ?x66726 l_0_13_187)))
 (let ((?x67139 (* 2.0 l_0_13_18)))
 (let ((?x67140 (* ?x67139 l_0_13_6)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x67137 (* ?x66719 l_0_13_5)))
 (let ((?x66716 (* 2.0 l_0_13_16)))
 (let ((?x67126 (* ?x66716 l_0_13_4)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67003 (* ?x66713 l_0_13_153)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x67001 (* ?x66710 l_0_13_152)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x67527 (* ?x66707 l_0_13_151)))
 (let ((?x69780 (- (- (+ (+ (+ (+ (+ ?x67527 ?x67001) ?x67003) ?x67126) ?x67137) ?x67140) ?x67005) ?x67007)))
 (let ((?x69790 (- (+ (- (+ (- (+ (- ?x69780 ?x67009) ?x68941) ?x69783) ?x68943) ?x69786) ?x68945) ?x69789)))
 (= (- (- (- ?x69790 ?x67148) ?x67150) ?x67152) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x66570 (* 2.0 l_0_13_42)))
 (let ((?x67227 (* ?x66570 l_0_13_60)))
 (let ((?x66567 (* 2.0 l_0_13_41)))
 (let ((?x67225 (* ?x66567 l_0_13_59)))
 (let ((?x66564 (* 2.0 l_0_13_40)))
 (let ((?x67223 (* ?x66564 l_0_13_58)))
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x69807 (* ?x66270 l_0_13_312)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x69805 (* ?x66267 l_0_13_311)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x69803 (* ?x66264 l_0_13_310)))
 (let ((?x66653 (* 2.0 l_0_13_258)))
 (let ((?x69745 (* ?x66653 l_0_13_261)))
 (let ((?x66650 (* 2.0 l_0_13_257)))
 (let ((?x69743 (* ?x66650 l_0_13_260)))
 (let ((?x66647 (* 2.0 l_0_13_256)))
 (let ((?x47615 (* ?x66647 l_0_13_259)))
 (let ((?x67220 (* 2.0 l_0_13_24)))
 (let ((?x67221 (* ?x67220 l_0_13_6)))
 (let ((?x66828 (* 2.0 l_0_13_23)))
 (let ((?x67218 (* ?x66828 l_0_13_5)))
 (let ((?x67215 (* 2.0 l_0_13_22)))
 (let ((?x67216 (* ?x67215 l_0_13_4)))
 (let ((?x69806 (- (- (- (- (- (+ (+ ?x67216 ?x67218) ?x67221) ?x47615) ?x69743) ?x69745) ?x69803) ?x69805)))
 (= (- (- (- (- ?x69806 ?x69807) ?x67223) ?x67225) ?x67227) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x67331 (* l_0_13_9 l_0_13_9)))
 (let ((?x67329 (* l_0_13_8 l_0_13_8)))
 (let ((?x67327 (* l_0_13_7 l_0_13_7)))
 (let ((?x67325 (* l_0_13_46 l_0_13_46)))
 (let ((?x67323 (* l_0_13_45 l_0_13_45)))
 (let ((?x67321 (* l_0_13_44 l_0_13_44)))
 (let ((?x67319 (* l_0_13_43 l_0_13_43)))
 (let ((?x68970 (* l_0_13_298 l_0_13_298)))
 (let ((?x68968 (* l_0_13_297 l_0_13_297)))
 (let ((?x68966 (* l_0_13_296 l_0_13_296)))
 (let ((?x13132 (- (- (- (* l_0_13_10 l_0_13_10) (* l_0_13_295 l_0_13_295)) ?x68966) ?x68968)))
 (let ((?x47734 (+ (+ (- (- (- (- (- ?x13132 ?x68970) ?x67319) ?x67321) ?x67323) ?x67325) ?x67327) ?x67329)))
 (= (+ ?x47734 ?x67331) 0.0))))))))))))))
(assert
 (let ((?x67401 (* 2.0 l_0_13_46)))
 (let ((?x67402 (* ?x67401 l_0_13_50)))
 (let ((?x67398 (* 2.0 l_0_13_45)))
 (let ((?x67399 (* ?x67398 l_0_13_49)))
 (let ((?x67395 (* 2.0 l_0_13_44)))
 (let ((?x67396 (* ?x67395 l_0_13_48)))
 (let ((?x67392 (* 2.0 l_0_13_43)))
 (let ((?x67393 (* ?x67392 l_0_13_47)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69035 (* ?x69034 l_0_13_302)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69032 (* ?x69031 l_0_13_301)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69029 (* ?x69028 l_0_13_300)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69026 (* ?x69025 l_0_13_299)))
 (let ((?x69826 (* l_0_13_262 l_0_13_262)))
 (let ((?x69824 (* l_0_13_261 l_0_13_261)))
 (let ((?x13217 (* l_0_13_260 l_0_13_260)))
 (let ((?x13236 (* l_0_13_259 l_0_13_259)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x67366 (* ?x67073 l_0_13_9)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x67364 (* ?x66629 l_0_13_8)))
 (let ((?x67361 (* 2.0 l_0_13_11)))
 (let ((?x67362 (* ?x67361 l_0_13_7)))
 (let ((?x9637 (+ (+ (+ (+ (* (* 2.0 l_0_13_10) l_0_13_14) ?x67362) ?x67364) ?x67366) ?x13236)))
 (let ((?x69831 (- (- (- (- (+ (+ (+ ?x9637 ?x13217) ?x69824) ?x69826) ?x69026) ?x69029) ?x69032) ?x69035)))
 (= (- (- (- (- ?x69831 ?x67393) ?x67396) ?x67399) ?x67402) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x67401 (* 2.0 l_0_13_46)))
 (let ((?x67478 (* ?x67401 l_0_13_55)))
 (let ((?x67398 (* 2.0 l_0_13_45)))
 (let ((?x67476 (* ?x67398 l_0_13_54)))
 (let ((?x67395 (* 2.0 l_0_13_44)))
 (let ((?x67474 (* ?x67395 l_0_13_53)))
 (let ((?x67392 (* 2.0 l_0_13_43)))
 (let ((?x67472 (* ?x67392 l_0_13_52)))
 (let ((?x68970 (* l_0_13_298 l_0_13_298)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69097 (* ?x69034 l_0_13_307)))
 (let ((?x68968 (* l_0_13_297 l_0_13_297)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69095 (* ?x69031 l_0_13_306)))
 (let ((?x68966 (* l_0_13_296 l_0_13_296)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69093 (* ?x69028 l_0_13_305)))
 (let ((?x68964 (* l_0_13_295 l_0_13_295)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69091 (* ?x69025 l_0_13_304)))
 (let ((?x67317 (* l_0_13_190 l_0_13_190)))
 (let ((?x67315 (* l_0_13_189 l_0_13_189)))
 (let ((?x67313 (* l_0_13_188 l_0_13_188)))
 (let ((?x67311 (* l_0_13_187 l_0_13_187)))
 (let ((?x67139 (* 2.0 l_0_13_18)))
 (let ((?x67462 (* ?x67139 l_0_13_9)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x67460 (* ?x66719 l_0_13_8)))
 (let ((?x66716 (* 2.0 l_0_13_16)))
 (let ((?x67458 (* ?x66716 l_0_13_7)))
 (let ((?x67309 (* l_0_13_154 l_0_13_154)))
 (let ((?x67307 (* l_0_13_153 l_0_13_153)))
 (let ((?x67305 (* l_0_13_152 l_0_13_152)))
 (let ((?x9386 (* l_0_13_151 l_0_13_151)))
 (let ((?x47749 (+ (+ (+ (+ (* (* 2.0 l_0_13_10) l_0_13_19) ?x9386) ?x67305) ?x67307) ?x67309)))
 (let ((?x13388 (- (- (- (- (+ (+ (+ ?x47749 ?x67458) ?x67460) ?x67462) ?x67311) ?x67313) ?x67315) ?x67317)))
 (let ((?x69843 (- (+ (- (+ (- (+ (- ?x13388 ?x69091) ?x68964) ?x69093) ?x68966) ?x69095) ?x68968) ?x69097)))
 (= (- (- (- (- (+ ?x69843 ?x68970) ?x67472) ?x67474) ?x67476) ?x67478) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x67401 (* 2.0 l_0_13_46)))
 (let ((?x67559 (* ?x67401 l_0_13_61)))
 (let ((?x67398 (* 2.0 l_0_13_45)))
 (let ((?x67557 (* ?x67398 l_0_13_60)))
 (let ((?x67395 (* 2.0 l_0_13_44)))
 (let ((?x67555 (* ?x67395 l_0_13_59)))
 (let ((?x67392 (* 2.0 l_0_13_43)))
 (let ((?x67553 (* ?x67392 l_0_13_58)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69137 (* ?x69034 l_0_13_313)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69135 (* ?x69031 l_0_13_312)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69133 (* ?x69028 l_0_13_311)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69131 (* ?x69025 l_0_13_310)))
 (let ((?x69826 (* l_0_13_262 l_0_13_262)))
 (let ((?x69824 (* l_0_13_261 l_0_13_261)))
 (let ((?x13217 (* l_0_13_260 l_0_13_260)))
 (let ((?x13236 (* l_0_13_259 l_0_13_259)))
 (let ((?x67220 (* 2.0 l_0_13_24)))
 (let ((?x67551 (* ?x67220 l_0_13_9)))
 (let ((?x66828 (* 2.0 l_0_13_23)))
 (let ((?x67549 (* ?x66828 l_0_13_8)))
 (let ((?x67215 (* 2.0 l_0_13_22)))
 (let ((?x67547 (* ?x67215 l_0_13_7)))
 (let ((?x47804 (- (+ (+ (+ (* (* 2.0 l_0_13_10) l_0_13_25) ?x67547) ?x67549) ?x67551) ?x13236)))
 (let ((?x69851 (- (- (- (- (- (- (- ?x47804 ?x13217) ?x69824) ?x69826) ?x69131) ?x69133) ?x69135) ?x69137)))
 (= (- (- (- (- ?x69851 ?x67553) ?x67555) ?x67557) ?x67559) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x67401 (* 2.0 l_0_13_46)))
 (let ((?x67675 (* ?x67401 l_0_13_68)))
 (let ((?x67398 (* 2.0 l_0_13_45)))
 (let ((?x67673 (* ?x67398 l_0_13_67)))
 (let ((?x67395 (* 2.0 l_0_13_44)))
 (let ((?x67671 (* ?x67395 l_0_13_66)))
 (let ((?x67392 (* 2.0 l_0_13_43)))
 (let ((?x67669 (* ?x67392 l_0_13_65)))
 (let ((?x66557 (* 2.0 l_0_13_31)))
 (let ((?x67667 (* ?x66557 l_0_13_9)))
 (let ((?x66554 (* 2.0 l_0_13_30)))
 (let ((?x67665 (* ?x66554 l_0_13_8)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69198 (* ?x69034 l_0_13_320)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69196 (* ?x69031 l_0_13_319)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69194 (* ?x69028 l_0_13_318)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69192 (* ?x69025 l_0_13_317)))
 (let ((?x66546 (* 2.0 l_0_13_29)))
 (let ((?x67663 (* ?x66546 l_0_13_7)))
 (let ((?x47848 (* l_0_13_226 l_0_13_226)))
 (let ((?x47843 (* l_0_13_225 l_0_13_225)))
 (let ((?x8553 (* l_0_13_224 l_0_13_224)))
 (let ((?x40734 (* l_0_13_223 l_0_13_223)))
 (let ((?x47834 (- (- (- (- (* (* 2.0 l_0_13_10) l_0_13_32) ?x40734) ?x8553) ?x47843) ?x47848)))
 (let ((?x13558 (+ (+ (- (- (- (- (+ ?x47834 ?x67663) ?x69192) ?x69194) ?x69196) ?x69198) ?x67665) ?x67667)))
 (= (- (- (- (- ?x13558 ?x67669) ?x67671) ?x67673) ?x67675) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x67766 (* l_0_13_51 l_0_13_51)))
 (let ((?x67764 (* l_0_13_50 l_0_13_50)))
 (let ((?x67762 (* l_0_13_49 l_0_13_49)))
 (let ((?x67760 (* l_0_13_48 l_0_13_48)))
 (let ((?x67758 (* l_0_13_47 l_0_13_47)))
 (let ((?x69896 (* l_0_13_303 l_0_13_303)))
 (let ((?x69894 (* l_0_13_302 l_0_13_302)))
 (let ((?x69892 (* l_0_13_301 l_0_13_301)))
 (let ((?x69890 (* l_0_13_300 l_0_13_300)))
 (let ((?x69888 (* l_0_13_299 l_0_13_299)))
 (let ((?x69885 (* 2.0 l_0_13_262)))
 (let ((?x69886 (* ?x69885 l_0_13_266)))
 (let ((?x69882 (* 2.0 l_0_13_261)))
 (let ((?x69883 (* ?x69882 l_0_13_265)))
 (let ((?x69879 (* 2.0 l_0_13_260)))
 (let ((?x69880 (* ?x69879 l_0_13_264)))
 (let ((?x69876 (* 2.0 l_0_13_259)))
 (let ((?x69877 (* ?x69876 l_0_13_263)))
 (let ((?x67736 (* l_0_13_15 l_0_13_15)))
 (let ((?x67734 (* l_0_13_14 l_0_13_14)))
 (let ((?x67721 (* l_0_13_13 l_0_13_13)))
 (let ((?x47897 (+ (+ (+ (* l_0_13_11 l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x67721) ?x67734)))
 (let ((?x69891 (- (- (+ (+ (+ (+ (+ ?x47897 ?x67736) ?x69877) ?x69880) ?x69883) ?x69886) ?x69888) ?x69890)))
 (let ((?x69901 (- (- (- (- (- (- (- ?x69891 ?x69892) ?x69894) ?x69896) ?x67758) ?x67760) ?x67762) ?x67764)))
 (= (- ?x69901 ?x67766) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x67851 (* 2.0 l_0_13_51)))
 (let ((?x67852 (* ?x67851 l_0_13_56)))
 (let ((?x67848 (* 2.0 l_0_13_50)))
 (let ((?x67849 (* ?x67848 l_0_13_55)))
 (let ((?x67845 (* 2.0 l_0_13_49)))
 (let ((?x67846 (* ?x67845 l_0_13_54)))
 (let ((?x67842 (* 2.0 l_0_13_48)))
 (let ((?x67843 (* ?x67842 l_0_13_53)))
 (let ((?x67839 (* 2.0 l_0_13_47)))
 (let ((?x67840 (* ?x67839 l_0_13_52)))
 (let ((?x69942 (* 2.0 l_0_13_303)))
 (let ((?x69943 (* ?x69942 l_0_13_308)))
 (let ((?x69939 (* 2.0 l_0_13_302)))
 (let ((?x69940 (* ?x69939 l_0_13_307)))
 (let ((?x69936 (* 2.0 l_0_13_301)))
 (let ((?x69937 (* ?x69936 l_0_13_306)))
 (let ((?x69933 (* 2.0 l_0_13_300)))
 (let ((?x69934 (* ?x69933 l_0_13_305)))
 (let ((?x69930 (* 2.0 l_0_13_299)))
 (let ((?x69931 (* ?x69930 l_0_13_304)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69035 (* ?x69034 l_0_13_302)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69032 (* ?x69031 l_0_13_301)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69029 (* ?x69028 l_0_13_300)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69026 (* ?x69025 l_0_13_299)))
 (let ((?x69885 (* 2.0 l_0_13_262)))
 (let ((?x69924 (* ?x69885 l_0_13_271)))
 (let ((?x69882 (* 2.0 l_0_13_261)))
 (let ((?x69922 (* ?x69882 l_0_13_270)))
 (let ((?x69879 (* 2.0 l_0_13_260)))
 (let ((?x69920 (* ?x69879 l_0_13_269)))
 (let ((?x69876 (* 2.0 l_0_13_259)))
 (let ((?x69918 (* ?x69876 l_0_13_268)))
 (let ((?x67389 (* 2.0 l_0_13_190)))
 (let ((?x67390 (* ?x67389 l_0_13_194)))
 (let ((?x67386 (* 2.0 l_0_13_189)))
 (let ((?x67387 (* ?x67386 l_0_13_193)))
 (let ((?x67383 (* 2.0 l_0_13_188)))
 (let ((?x67384 (* ?x67383 l_0_13_192)))
 (let ((?x67380 (* 2.0 l_0_13_187)))
 (let ((?x67381 (* ?x67380 l_0_13_191)))
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67378 (* ?x67377 l_0_13_158)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67375 (* ?x67374 l_0_13_157)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67372 (* ?x67371 l_0_13_156)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67369 (* ?x67368 l_0_13_155)))
 (let ((?x67806 (* 2.0 l_0_13_15)))
 (let ((?x67807 (* ?x67806 l_0_13_20)))
 (let ((?x67803 (* 2.0 l_0_13_14)))
 (let ((?x67804 (* ?x67803 l_0_13_19)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x67801 (* ?x67073 l_0_13_18)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x67799 (* ?x66629 l_0_13_17)))
 (let ((?x13738 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_16) ?x67799) ?x67801) ?x67804) ?x67807)))
 (let ((?x69916 (- (- (- (+ (+ (+ (+ ?x13738 ?x67369) ?x67372) ?x67375) ?x67378) ?x67381) ?x67384) ?x67387)))
 (let ((?x69927 (+ (+ (+ (+ (+ (+ (- ?x69916 ?x67390) ?x69918) ?x69920) ?x69922) ?x69924) ?x69026) ?x69029)))
 (let ((?x69944 (- (- (- (- (- (+ (+ ?x69927 ?x69032) ?x69035) ?x69931) ?x69934) ?x69937) ?x69940) ?x69943)))
 (= (- (- (- (- (- ?x69944 ?x67840) ?x67843) ?x67846) ?x67849) ?x67852) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x67851 (* 2.0 l_0_13_51)))
 (let ((?x67956 (* ?x67851 l_0_13_62)))
 (let ((?x67848 (* 2.0 l_0_13_50)))
 (let ((?x67954 (* ?x67848 l_0_13_61)))
 (let ((?x67845 (* 2.0 l_0_13_49)))
 (let ((?x67952 (* ?x67845 l_0_13_60)))
 (let ((?x67842 (* 2.0 l_0_13_48)))
 (let ((?x67950 (* ?x67842 l_0_13_59)))
 (let ((?x67839 (* 2.0 l_0_13_47)))
 (let ((?x67948 (* ?x67839 l_0_13_58)))
 (let ((?x69942 (* 2.0 l_0_13_303)))
 (let ((?x69989 (* ?x69942 l_0_13_314)))
 (let ((?x69939 (* 2.0 l_0_13_302)))
 (let ((?x69987 (* ?x69939 l_0_13_313)))
 (let ((?x69936 (* 2.0 l_0_13_301)))
 (let ((?x69985 (* ?x69936 l_0_13_312)))
 (let ((?x69933 (* 2.0 l_0_13_300)))
 (let ((?x69983 (* ?x69933 l_0_13_311)))
 (let ((?x69930 (* 2.0 l_0_13_299)))
 (let ((?x69981 (* ?x69930 l_0_13_310)))
 (let ((?x69885 (* 2.0 l_0_13_262)))
 (let ((?x69979 (* ?x69885 l_0_13_277)))
 (let ((?x69886 (* ?x69885 l_0_13_266)))
 (let ((?x69882 (* 2.0 l_0_13_261)))
 (let ((?x48013 (* ?x69882 l_0_13_276)))
 (let ((?x69883 (* ?x69882 l_0_13_265)))
 (let ((?x69879 (* 2.0 l_0_13_260)))
 (let ((?x13947 (* ?x69879 l_0_13_275)))
 (let ((?x69880 (* ?x69879 l_0_13_264)))
 (let ((?x69876 (* 2.0 l_0_13_259)))
 (let ((?x13907 (* ?x69876 l_0_13_274)))
 (let ((?x69877 (* ?x69876 l_0_13_263)))
 (let ((?x67806 (* 2.0 l_0_13_15)))
 (let ((?x67925 (* ?x67806 l_0_13_26)))
 (let ((?x67803 (* 2.0 l_0_13_14)))
 (let ((?x67921 (* ?x67803 l_0_13_25)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x67906 (* ?x67073 l_0_13_24)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x67902 (* ?x66629 l_0_13_23)))
 (let ((?x13911 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_22) ?x67902) ?x67906) ?x67921) ?x67925)))
 (let ((?x69978 (- (+ (- (+ (- (+ (- ?x13911 ?x69877) ?x13907) ?x69880) ?x13947) ?x69883) ?x48013) ?x69886)))
 (let ((?x69991 (- (- (- (- (- (- (+ ?x69978 ?x69979) ?x69981) ?x69983) ?x69985) ?x69987) ?x69989) ?x67948)))
 (= (- (- (- (- ?x69991 ?x67950) ?x67952) ?x67954) ?x67956) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x67851 (* 2.0 l_0_13_51)))
 (let ((?x68058 (* ?x67851 l_0_13_69)))
 (let ((?x67848 (* 2.0 l_0_13_50)))
 (let ((?x68056 (* ?x67848 l_0_13_68)))
 (let ((?x67845 (* 2.0 l_0_13_49)))
 (let ((?x68054 (* ?x67845 l_0_13_67)))
 (let ((?x67842 (* 2.0 l_0_13_48)))
 (let ((?x68052 (* ?x67842 l_0_13_66)))
 (let ((?x67839 (* 2.0 l_0_13_47)))
 (let ((?x68050 (* ?x67839 l_0_13_65)))
 (let ((?x69942 (* 2.0 l_0_13_303)))
 (let ((?x70062 (* ?x69942 l_0_13_321)))
 (let ((?x69939 (* 2.0 l_0_13_302)))
 (let ((?x70060 (* ?x69939 l_0_13_320)))
 (let ((?x69936 (* 2.0 l_0_13_301)))
 (let ((?x70058 (* ?x69936 l_0_13_319)))
 (let ((?x69933 (* 2.0 l_0_13_300)))
 (let ((?x70056 (* ?x69933 l_0_13_318)))
 (let ((?x69930 (* 2.0 l_0_13_299)))
 (let ((?x70054 (* ?x69930 l_0_13_317)))
 (let ((?x69885 (* 2.0 l_0_13_262)))
 (let ((?x70052 (* ?x69885 l_0_13_284)))
 (let ((?x69882 (* 2.0 l_0_13_261)))
 (let ((?x70050 (* ?x69882 l_0_13_283)))
 (let ((?x69879 (* 2.0 l_0_13_260)))
 (let ((?x70048 (* ?x69879 l_0_13_282)))
 (let ((?x69876 (* 2.0 l_0_13_259)))
 (let ((?x70046 (* ?x69876 l_0_13_281)))
 (let ((?x67806 (* 2.0 l_0_13_15)))
 (let ((?x68028 (* ?x67806 l_0_13_33)))
 (let ((?x67803 (* 2.0 l_0_13_14)))
 (let ((?x68026 (* ?x67803 l_0_13_32)))
 (let ((?x67073 (* 2.0 l_0_13_13)))
 (let ((?x68024 (* ?x67073 l_0_13_31)))
 (let ((?x66629 (* 2.0 l_0_13_12)))
 (let ((?x68022 (* ?x66629 l_0_13_30)))
 (let ((?x70033 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_29) ?x68022) ?x68024) ?x68026) ?x68028)))
 (let ((?x70039 (- (- ?x70033 (* (* 2.0 l_0_13_223) l_0_13_227)) (* (* 2.0 l_0_13_224) l_0_13_228))))
 (let ((?x70045 (- (- ?x70039 (* (* 2.0 l_0_13_225) l_0_13_229)) (* (* 2.0 l_0_13_226) l_0_13_230))))
 (let ((?x70059 (- (- (- (+ (+ (+ (+ ?x70045 ?x70046) ?x70048) ?x70050) ?x70052) ?x70054) ?x70056) ?x70058)))
 (let ((?x70068 (- (- (- (- (- (- (- ?x70059 ?x70060) ?x70062) ?x68050) ?x68052) ?x68054) ?x68056) ?x68058)))
 (= ?x70068 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68169 (* l_0_13_57 l_0_13_57)))
 (let ((?x68167 (* l_0_13_56 l_0_13_56)))
 (let ((?x68165 (* l_0_13_55 l_0_13_55)))
 (let ((?x68163 (* l_0_13_54 l_0_13_54)))
 (let ((?x68161 (* l_0_13_53 l_0_13_53)))
 (let ((?x68159 (* l_0_13_52 l_0_13_52)))
 (let ((?x70122 (* l_0_13_309 l_0_13_309)))
 (let ((?x70120 (* l_0_13_308 l_0_13_308)))
 (let ((?x70118 (* l_0_13_307 l_0_13_307)))
 (let ((?x70116 (* l_0_13_306 l_0_13_306)))
 (let ((?x70114 (* l_0_13_305 l_0_13_305)))
 (let ((?x70112 (* l_0_13_304 l_0_13_304)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69097 (* ?x69034 l_0_13_307)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69095 (* ?x69031 l_0_13_306)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69093 (* ?x69028 l_0_13_305)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69091 (* ?x69025 l_0_13_304)))
 (let ((?x68157 (* l_0_13_21 l_0_13_21)))
 (let ((?x68151 (* l_0_13_20 l_0_13_20)))
 (let ((?x67389 (* 2.0 l_0_13_190)))
 (let ((?x67470 (* ?x67389 l_0_13_199)))
 (let ((?x68141 (* l_0_13_19 l_0_13_19)))
 (let ((?x67386 (* 2.0 l_0_13_189)))
 (let ((?x67468 (* ?x67386 l_0_13_198)))
 (let ((?x67383 (* 2.0 l_0_13_188)))
 (let ((?x67466 (* ?x67383 l_0_13_197)))
 (let ((?x67380 (* 2.0 l_0_13_187)))
 (let ((?x67464 (* ?x67380 l_0_13_196)))
 (let ((?x68139 (* l_0_13_18 l_0_13_18)))
 (let ((?x68137 (* l_0_13_17 l_0_13_17)))
 (let ((?x68173 (* l_0_13_16 l_0_13_16)))
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67445 (* ?x67377 l_0_13_163)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67441 (* ?x67374 l_0_13_162)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67437 (* ?x67371 l_0_13_161)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67433 (* ?x67368 l_0_13_160)))
 (let ((?x70101 (- (+ (+ (+ (+ (+ (+ ?x67433 ?x67437) ?x67441) ?x67445) ?x68173) ?x68137) ?x68139) ?x67464)))
 (let ((?x70108 (+ (+ (+ (- (+ (- (- ?x70101 ?x67466) ?x67468) ?x68141) ?x67470) ?x68151) ?x68157) ?x69091)))
 (let ((?x70119 (- (- (- (- (+ (+ (+ ?x70108 ?x69093) ?x69095) ?x69097) ?x70112) ?x70114) ?x70116) ?x70118)))
 (let ((?x70128 (- (- (- (- (- (- (- ?x70119 ?x70120) ?x70122) ?x68159) ?x68161) ?x68163) ?x68165) ?x68167)))
 (= (- ?x70128 ?x68169) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68295 (* 2.0 l_0_13_57)))
 (let ((?x68296 (* ?x68295 l_0_13_63)))
 (let ((?x68292 (* 2.0 l_0_13_56)))
 (let ((?x68293 (* ?x68292 l_0_13_62)))
 (let ((?x68289 (* 2.0 l_0_13_55)))
 (let ((?x68290 (* ?x68289 l_0_13_61)))
 (let ((?x68286 (* 2.0 l_0_13_54)))
 (let ((?x68287 (* ?x68286 l_0_13_60)))
 (let ((?x68283 (* 2.0 l_0_13_53)))
 (let ((?x68284 (* ?x68283 l_0_13_59)))
 (let ((?x68280 (* 2.0 l_0_13_52)))
 (let ((?x68281 (* ?x68280 l_0_13_58)))
 (let ((?x70172 (* 2.0 l_0_13_309)))
 (let ((?x70173 (* ?x70172 l_0_13_315)))
 (let ((?x70169 (* 2.0 l_0_13_308)))
 (let ((?x70170 (* ?x70169 l_0_13_314)))
 (let ((?x70166 (* 2.0 l_0_13_307)))
 (let ((?x70167 (* ?x70166 l_0_13_313)))
 (let ((?x70163 (* 2.0 l_0_13_306)))
 (let ((?x70164 (* ?x70163 l_0_13_312)))
 (let ((?x70160 (* 2.0 l_0_13_305)))
 (let ((?x70161 (* ?x70160 l_0_13_311)))
 (let ((?x70157 (* 2.0 l_0_13_304)))
 (let ((?x70158 (* ?x70157 l_0_13_310)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69137 (* ?x69034 l_0_13_313)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69135 (* ?x69031 l_0_13_312)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69133 (* ?x69028 l_0_13_311)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69131 (* ?x69025 l_0_13_310)))
 (let ((?x69885 (* 2.0 l_0_13_262)))
 (let ((?x69924 (* ?x69885 l_0_13_271)))
 (let ((?x69882 (* 2.0 l_0_13_261)))
 (let ((?x69922 (* ?x69882 l_0_13_270)))
 (let ((?x69879 (* 2.0 l_0_13_260)))
 (let ((?x69920 (* ?x69879 l_0_13_269)))
 (let ((?x69876 (* 2.0 l_0_13_259)))
 (let ((?x69918 (* ?x69876 l_0_13_268)))
 (let ((?x68277 (* 2.0 l_0_13_21)))
 (let ((?x68278 (* ?x68277 l_0_13_27)))
 (let ((?x68268 (* 2.0 l_0_13_20)))
 (let ((?x68269 (* ?x68268 l_0_13_26)))
 (let ((?x67389 (* 2.0 l_0_13_190)))
 (let ((?x67545 (* ?x67389 l_0_13_205)))
 (let ((?x68253 (* 2.0 l_0_13_19)))
 (let ((?x68254 (* ?x68253 l_0_13_25)))
 (let ((?x67386 (* 2.0 l_0_13_189)))
 (let ((?x67543 (* ?x67386 l_0_13_204)))
 (let ((?x67383 (* 2.0 l_0_13_188)))
 (let ((?x67541 (* ?x67383 l_0_13_203)))
 (let ((?x67380 (* 2.0 l_0_13_187)))
 (let ((?x67539 (* ?x67380 l_0_13_202)))
 (let ((?x67139 (* 2.0 l_0_13_18)))
 (let ((?x68251 (* ?x67139 l_0_13_24)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x68249 (* ?x66719 l_0_13_23)))
 (let ((?x66716 (* 2.0 l_0_13_16)))
 (let ((?x68229 (* ?x66716 l_0_13_22)))
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67537 (* ?x67377 l_0_13_169)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67535 (* ?x67374 l_0_13_168)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67533 (* ?x67371 l_0_13_167)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67531 (* ?x67368 l_0_13_166)))
 (let ((?x48162 (- (+ (+ (+ (+ (+ (+ ?x67531 ?x67533) ?x67535) ?x67537) ?x68229) ?x68249) ?x68251) ?x67539)))
 (let ((?x70149 (- (+ (+ (- (+ (- (- ?x48162 ?x67541) ?x67543) ?x68254) ?x67545) ?x68269) ?x68278) ?x69918)))
 (let ((?x70156 (+ (+ (+ (+ (- (- (- ?x70149 ?x69920) ?x69922) ?x69924) ?x69131) ?x69133) ?x69135) ?x69137)))
 (let ((?x70175 (- (- (- (- (- (- (- ?x70156 ?x70158) ?x70161) ?x70164) ?x70167) ?x70170) ?x70173) ?x68281)))
 (= (- (- (- (- (- ?x70175 ?x68284) ?x68287) ?x68290) ?x68293) ?x68296) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68295 (* 2.0 l_0_13_57)))
 (let ((?x68426 (* ?x68295 l_0_13_70)))
 (let ((?x68292 (* 2.0 l_0_13_56)))
 (let ((?x68424 (* ?x68292 l_0_13_69)))
 (let ((?x68289 (* 2.0 l_0_13_55)))
 (let ((?x68422 (* ?x68289 l_0_13_68)))
 (let ((?x68286 (* 2.0 l_0_13_54)))
 (let ((?x68420 (* ?x68286 l_0_13_67)))
 (let ((?x68283 (* 2.0 l_0_13_53)))
 (let ((?x68418 (* ?x68283 l_0_13_66)))
 (let ((?x68280 (* 2.0 l_0_13_52)))
 (let ((?x68416 (* ?x68280 l_0_13_65)))
 (let ((?x70172 (* 2.0 l_0_13_309)))
 (let ((?x70243 (* ?x70172 l_0_13_322)))
 (let ((?x70169 (* 2.0 l_0_13_308)))
 (let ((?x70241 (* ?x70169 l_0_13_321)))
 (let ((?x70166 (* 2.0 l_0_13_307)))
 (let ((?x70239 (* ?x70166 l_0_13_320)))
 (let ((?x70163 (* 2.0 l_0_13_306)))
 (let ((?x70237 (* ?x70163 l_0_13_319)))
 (let ((?x70160 (* 2.0 l_0_13_305)))
 (let ((?x70235 (* ?x70160 l_0_13_318)))
 (let ((?x70157 (* 2.0 l_0_13_304)))
 (let ((?x70233 (* ?x70157 l_0_13_317)))
 (let ((?x69034 (* 2.0 l_0_13_298)))
 (let ((?x69198 (* ?x69034 l_0_13_320)))
 (let ((?x69031 (* 2.0 l_0_13_297)))
 (let ((?x69196 (* ?x69031 l_0_13_319)))
 (let ((?x69028 (* 2.0 l_0_13_296)))
 (let ((?x69194 (* ?x69028 l_0_13_318)))
 (let ((?x69025 (* 2.0 l_0_13_295)))
 (let ((?x69192 (* ?x69025 l_0_13_317)))
 (let ((?x68277 (* 2.0 l_0_13_21)))
 (let ((?x68414 (* ?x68277 l_0_13_34)))
 (let ((?x68268 (* 2.0 l_0_13_20)))
 (let ((?x68408 (* ?x68268 l_0_13_33)))
 (let ((?x67389 (* 2.0 l_0_13_190)))
 (let ((?x67661 (* ?x67389 l_0_13_212)))
 (let ((?x68253 (* 2.0 l_0_13_19)))
 (let ((?x68398 (* ?x68253 l_0_13_32)))
 (let ((?x67386 (* 2.0 l_0_13_189)))
 (let ((?x67659 (* ?x67386 l_0_13_211)))
 (let ((?x67383 (* 2.0 l_0_13_188)))
 (let ((?x67657 (* ?x67383 l_0_13_210)))
 (let ((?x67380 (* 2.0 l_0_13_187)))
 (let ((?x67655 (* ?x67380 l_0_13_209)))
 (let ((?x67139 (* 2.0 l_0_13_18)))
 (let ((?x68396 (* ?x67139 l_0_13_31)))
 (let ((?x66719 (* 2.0 l_0_13_17)))
 (let ((?x68394 (* ?x66719 l_0_13_30)))
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67653 (* ?x67377 l_0_13_176)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67651 (* ?x67374 l_0_13_175)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67649 (* ?x67371 l_0_13_174)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67647 (* ?x67368 l_0_13_173)))
 (let ((?x70211 (+ (+ (+ (+ ?x67647 ?x67649) ?x67651) ?x67653) (* (* 2.0 l_0_13_16) l_0_13_29))))
 (let ((?x70218 (- (+ (- (- (- (+ (+ ?x70211 ?x68394) ?x68396) ?x67655) ?x67657) ?x67659) ?x68398) ?x67661)))
 (let ((?x70224 (- (- (+ (+ ?x70218 ?x68408) ?x68414) (* (* 2.0 l_0_13_223) l_0_13_232)) (* (* 2.0 l_0_13_224) l_0_13_233))))
 (let ((?x70228 (- (- ?x70224 (* (* 2.0 l_0_13_225) l_0_13_234)) (* (* 2.0 l_0_13_226) l_0_13_235))))
 (let ((?x70238 (- (- (- (+ (+ (+ (+ ?x70228 ?x69192) ?x69194) ?x69196) ?x69198) ?x70233) ?x70235) ?x70237)))
 (let ((?x70248 (- (- (- (- (- (- (- ?x70238 ?x70239) ?x70241) ?x70243) ?x68416) ?x68418) ?x68420) ?x68422)))
 (= (- (- ?x70248 ?x68424) ?x68426) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68513 (* l_0_13_64 l_0_13_64)))
 (let ((?x68511 (* l_0_13_63 l_0_13_63)))
 (let ((?x68509 (* l_0_13_62 l_0_13_62)))
 (let ((?x68507 (* l_0_13_61 l_0_13_61)))
 (let ((?x68505 (* l_0_13_60 l_0_13_60)))
 (let ((?x68503 (* l_0_13_59 l_0_13_59)))
 (let ((?x68501 (* l_0_13_58 l_0_13_58)))
 (let ((?x70300 (* l_0_13_316 l_0_13_316)))
 (let ((?x70298 (* l_0_13_315 l_0_13_315)))
 (let ((?x70296 (* l_0_13_314 l_0_13_314)))
 (let ((?x70294 (* l_0_13_313 l_0_13_313)))
 (let ((?x70292 (* l_0_13_312 l_0_13_312)))
 (let ((?x70290 (* l_0_13_311 l_0_13_311)))
 (let ((?x70288 (* l_0_13_310 l_0_13_310)))
 (let ((?x68499 (* l_0_13_28 l_0_13_28)))
 (let ((?x68497 (* l_0_13_27 l_0_13_27)))
 (let ((?x69885 (* 2.0 l_0_13_262)))
 (let ((?x69979 (* ?x69885 l_0_13_277)))
 (let ((?x69882 (* 2.0 l_0_13_261)))
 (let ((?x48013 (* ?x69882 l_0_13_276)))
 (let ((?x69879 (* 2.0 l_0_13_260)))
 (let ((?x13947 (* ?x69879 l_0_13_275)))
 (let ((?x68495 (* l_0_13_26 l_0_13_26)))
 (let ((?x69876 (* 2.0 l_0_13_259)))
 (let ((?x13907 (* ?x69876 l_0_13_274)))
 (let ((?x68493 (* l_0_13_25 l_0_13_25)))
 (let ((?x68491 (* l_0_13_24 l_0_13_24)))
 (let ((?x14786 (+ (+ (+ (* l_0_13_22 l_0_13_22) (* l_0_13_23 l_0_13_23)) ?x68491) ?x68493)))
 (let ((?x70287 (+ (+ (- (- (- (+ (- ?x14786 ?x13907) ?x68495) ?x13947) ?x48013) ?x69979) ?x68497) ?x68499)))
 (let ((?x70301 (- (- (- (- (- (- (- ?x70287 ?x70288) ?x70290) ?x70292) ?x70294) ?x70296) ?x70298) ?x70300)))
 (let ((?x70308 (- (- (- (- (- (- (- ?x70301 ?x68501) ?x68503) ?x68505) ?x68507) ?x68509) ?x68511) ?x68513)))
 (= ?x70308 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x68673 (* (* 2.0 l_0_13_64) l_0_13_71)))
 (let ((?x68670 (* (* 2.0 l_0_13_63) l_0_13_70)))
 (let ((?x68667 (* (* 2.0 l_0_13_62) l_0_13_69)))
 (let ((?x68664 (* (* 2.0 l_0_13_61) l_0_13_68)))
 (let ((?x68661 (* (* 2.0 l_0_13_60) l_0_13_67)))
 (let ((?x68658 (* (* 2.0 l_0_13_59) l_0_13_66)))
 (let ((?x68655 (* (* 2.0 l_0_13_58) l_0_13_65)))
 (let ((?x70365 (* (* 2.0 l_0_13_316) l_0_13_323)))
 (let ((?x70362 (* (* 2.0 l_0_13_315) l_0_13_322)))
 (let ((?x70359 (* (* 2.0 l_0_13_314) l_0_13_321)))
 (let ((?x70356 (* (* 2.0 l_0_13_313) l_0_13_320)))
 (let ((?x70353 (* (* 2.0 l_0_13_312) l_0_13_319)))
 (let ((?x70350 (* (* 2.0 l_0_13_311) l_0_13_318)))
 (let ((?x70347 (* (* 2.0 l_0_13_310) l_0_13_317)))
 (let ((?x68652 (* (* 2.0 l_0_13_28) l_0_13_35)))
 (let ((?x68649 (* (* 2.0 l_0_13_27) l_0_13_34)))
 (let ((?x69885 (* 2.0 l_0_13_262)))
 (let ((?x70052 (* ?x69885 l_0_13_284)))
 (let ((?x69882 (* 2.0 l_0_13_261)))
 (let ((?x70050 (* ?x69882 l_0_13_283)))
 (let ((?x69879 (* 2.0 l_0_13_260)))
 (let ((?x70048 (* ?x69879 l_0_13_282)))
 (let ((?x68646 (* (* 2.0 l_0_13_26) l_0_13_33)))
 (let ((?x69876 (* 2.0 l_0_13_259)))
 (let ((?x70046 (* ?x69876 l_0_13_281)))
 (let ((?x68643 (* (* 2.0 l_0_13_25) l_0_13_32)))
 (let ((?x67220 (* 2.0 l_0_13_24)))
 (let ((?x68640 (* ?x67220 l_0_13_31)))
 (let ((?x66828 (* 2.0 l_0_13_23)))
 (let ((?x68638 (* ?x66828 l_0_13_30)))
 (let ((?x67215 (* 2.0 l_0_13_22)))
 (let ((?x68636 (* ?x67215 l_0_13_29)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66529 (* ?x66469 l_0_13_152)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x69447 (* ?x66632 l_0_13_151)))
 (let ((?x70324 (+ (* (* 1.0 l_0_13_110) l_0_13_115) (* (* 1.0 l_0_13_111) l_0_13_116))))
 (let ((?x70329 (- (+ (- (- ?x70324 ?x69447) ?x66529) ?x68636) (* (* 2.0 l_0_13_223) l_0_13_238))))
 (let ((?x70333 (- (- ?x70329 (* (* 2.0 l_0_13_224) l_0_13_239)) (* (* 2.0 l_0_13_225) l_0_13_240))))
 (let ((?x70338 (+ (+ (+ (- ?x70333 (* (* 2.0 l_0_13_226) l_0_13_241)) ?x68638) ?x68640) ?x68643)))
 (let ((?x70345 (+ (+ (- (- (- (+ (- ?x70338 ?x70046) ?x68646) ?x70048) ?x70050) ?x70052) ?x68649) ?x68652)))
 (let ((?x70366 (- (- (- (- (- (- (- ?x70345 ?x70347) ?x70350) ?x70353) ?x70356) ?x70359) ?x70362) ?x70365)))
 (let ((?x70373 (- (- (- (- (- (- (- ?x70366 ?x68655) ?x68658) ?x68661) ?x68664) ?x68667) ?x68670) ?x68673)))
 (let ((?x70377 (- (- ?x70373 (* (* 1.0 l_0_13_74) l_0_13_79)) (* (* 1.0 l_0_13_75) l_0_13_80))))
 (= ?x70377 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68798 (* l_0_13_72 l_0_13_72)))
 (let ((?x68796 (* l_0_13_71 l_0_13_71)))
 (let ((?x68794 (* l_0_13_70 l_0_13_70)))
 (let ((?x68792 (* l_0_13_69 l_0_13_69)))
 (let ((?x68790 (* l_0_13_68 l_0_13_68)))
 (let ((?x68788 (* l_0_13_67 l_0_13_67)))
 (let ((?x68786 (* l_0_13_66 l_0_13_66)))
 (let ((?x68784 (* l_0_13_65 l_0_13_65)))
 (let ((?x68782 (* l_0_13_36 l_0_13_36)))
 (let ((?x68780 (* l_0_13_35 l_0_13_35)))
 (let ((?x68778 (* l_0_13_34 l_0_13_34)))
 (let ((?x68776 (* l_0_13_33 l_0_13_33)))
 (let ((?x70440 (* l_0_13_324 l_0_13_324)))
 (let ((?x70438 (* l_0_13_323 l_0_13_323)))
 (let ((?x70436 (* l_0_13_322 l_0_13_322)))
 (let ((?x70434 (* l_0_13_321 l_0_13_321)))
 (let ((?x15136 (* l_0_13_320 l_0_13_320)))
 (let ((?x68774 (* l_0_13_32 l_0_13_32)))
 (let ((?x15139 (* l_0_13_319 l_0_13_319)))
 (let ((?x15108 (* l_0_13_318 l_0_13_318)))
 (let ((?x48394 (* l_0_13_317 l_0_13_317)))
 (let ((?x68772 (* l_0_13_31 l_0_13_31)))
 (let ((?x68770 (* l_0_13_30 l_0_13_30)))
 (let ((?x68768 (* l_0_13_29 l_0_13_29)))
 (let ((?x15210 (- (* (* (- 2.0) l_0_13_223) l_0_13_245) (* (* 2.0 l_0_13_224) l_0_13_246))))
 (let ((?x15190 (- (- ?x15210 (* (* 2.0 l_0_13_225) l_0_13_247)) (* (* 2.0 l_0_13_226) l_0_13_248))))
 (let ((?x15161 (+ (- (- (- (+ (+ (+ ?x15190 ?x68768) ?x68770) ?x68772) ?x48394) ?x15108) ?x15139) ?x68774)))
 (let ((?x70443 (+ (+ (- (- (- (- (- ?x15161 ?x15136) ?x70434) ?x70436) ?x70438) ?x70440) ?x68776) ?x68778)))
 (let ((?x70450 (- (- (- (- (- (+ (+ ?x70443 ?x68780) ?x68782) ?x68784) ?x68786) ?x68788) ?x68790) ?x68792)))
 (= (- (- (- ?x70450 ?x68794) ?x68796) ?x68798) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x7832 (* l_0_13_145 l_0_13_145)))
 (let ((?x15422 (- (- (* (/ 1.0 2.0) (* l_0_13_109 l_0_13_109)) ?x7832) (* (* (/ 1.0 2.0) l_0_13_73) l_0_13_73))))
 (= ?x15422 0.0))))
(assert
 (let ((?x70365 (* (* 2.0 l_0_13_316) l_0_13_323)))
 (let ((?x70362 (* (* 2.0 l_0_13_315) l_0_13_322)))
 (let ((?x70359 (* (* 2.0 l_0_13_314) l_0_13_321)))
 (let ((?x70356 (* (* 2.0 l_0_13_313) l_0_13_320)))
 (let ((?x70353 (* (* 2.0 l_0_13_312) l_0_13_319)))
 (let ((?x70350 (* (* 2.0 l_0_13_311) l_0_13_318)))
 (let ((?x70347 (* (* 2.0 l_0_13_310) l_0_13_317)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x70495 (* ?x69020 l_0_13_281)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66256 (* ?x66255 l_0_13_146)))
 (let ((?x48484 (+ (* (* 2.0 l_0_13_100) l_0_13_107) (* (* 2.0 l_0_13_101) l_0_13_94))))
 (let ((?x48496 (+ (+ ?x48484 (* (* 2.0 l_0_13_102) l_0_13_95)) (* (* 2.0 l_0_13_103) l_0_13_96))))
 (let ((?x48491 (+ (+ ?x48496 (* (* 2.0 l_0_13_104) l_0_13_97)) (* (* 2.0 l_0_13_105) l_0_13_98))))
 (let ((?x15418 (+ (+ ?x48491 (* (* 2.0 l_0_13_106) l_0_13_99)) (* (* 1.0 l_0_13_109) l_0_13_110))))
 (let ((?x70476 (- (- ?x15418 (* (* 2.0 l_0_13_130) l_0_13_137)) (* (* 2.0 l_0_13_131) l_0_13_138))))
 (let ((?x70482 (- (- ?x70476 (* (* 2.0 l_0_13_132) l_0_13_139)) (* (* 2.0 l_0_13_133) l_0_13_140))))
 (let ((?x70488 (- (- ?x70482 (* (* 2.0 l_0_13_134) l_0_13_141)) (* (* 2.0 l_0_13_135) l_0_13_142))))
 (let ((?x70494 (- (- (- ?x70488 (* (* 2.0 l_0_13_136) l_0_13_143)) ?x66256) (* (* 2.0 l_0_13_217) l_0_13_238))))
 (let ((?x70502 (- (- (- (- (- (- (- ?x70494 ?x70495) ?x70347) ?x70350) ?x70353) ?x70356) ?x70359) ?x70362)))
 (= (- (- ?x70502 ?x70365) (* (* 1.0 l_0_13_73) l_0_13_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66344 (* ?x66255 l_0_13_151)))
 (let ((?x15534 (- (- (* (* 1.0 l_0_13_109) l_0_13_115) ?x66344) (* (* 1.0 l_0_13_73) l_0_13_79))))
 (= ?x15534 0.0)))))
(assert
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66368 (* ?x66255 l_0_13_155)))
 (let ((?x70560 (- (- (* (* 1.0 l_0_13_109) l_0_13_119) ?x66368) (* (* 1.0 l_0_13_73) l_0_13_83))))
 (= ?x70560 0.0)))))
(assert
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66386 (* ?x66255 l_0_13_160)))
 (let ((?x70572 (- (- (* (* 1.0 l_0_13_109) l_0_13_124) ?x66386) (* (* 1.0 l_0_13_73) l_0_13_88))))
 (= ?x70572 0.0)))))
(assert
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66418 (* ?x66255 l_0_13_166)))
 (let ((?x70584 (- (- (* (* 1.0 l_0_13_109) l_0_13_130) ?x66418) (* (* 1.0 l_0_13_73) l_0_13_94))))
 (= ?x70584 0.0)))))
(assert
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66450 (* ?x66255 l_0_13_173)))
 (let ((?x70595 (+ (* (* (- 1.0) l_0_13_101) l_0_13_73) (* (* 1.0 l_0_13_109) l_0_13_137))))
 (= (- ?x70595 ?x66450) 0.0)))))
(assert
 (let ((?x70658 (* (* 2.0 l_0_13_280) l_0_13_287)))
 (let ((?x70655 (* (* 2.0 l_0_13_279) l_0_13_286)))
 (let ((?x70652 (* (* 2.0 l_0_13_278) l_0_13_285)))
 (let ((?x70649 (* (* 2.0 l_0_13_277) l_0_13_284)))
 (let ((?x70646 (* (* 2.0 l_0_13_276) l_0_13_283)))
 (let ((?x70643 (* (* 2.0 l_0_13_275) l_0_13_282)))
 (let ((?x70640 (* (* 2.0 l_0_13_274) l_0_13_281)))
 (let ((?x70636 (* 2.0 l_0_13_267)))
 (let ((?x70637 (* ?x70636 l_0_13_285)))
 (let ((?x70633 (* 2.0 l_0_13_266)))
 (let ((?x70634 (* ?x70633 l_0_13_284)))
 (let ((?x70630 (* 2.0 l_0_13_265)))
 (let ((?x70631 (* ?x70630 l_0_13_283)))
 (let ((?x70627 (* 2.0 l_0_13_264)))
 (let ((?x70628 (* ?x70627 l_0_13_282)))
 (let ((?x70624 (* 2.0 l_0_13_263)))
 (let ((?x70625 (* ?x70624 l_0_13_281)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66635 (* ?x66469 l_0_13_156)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x66633 (* ?x66632 l_0_13_155)))
 (let ((?x70606 (+ (* (* 1.0 l_0_13_110) l_0_13_119) (* (* 1.0 l_0_13_111) l_0_13_120))))
 (let ((?x70614 (- (- (- (- ?x70606 ?x66633) ?x66635) (* (* 2.0 l_0_13_227) l_0_13_238)) (* (* 2.0 l_0_13_228) l_0_13_239))))
 (let ((?x70620 (- (- ?x70614 (* (* 2.0 l_0_13_229) l_0_13_240)) (* (* 2.0 l_0_13_230) l_0_13_241))))
 (let ((?x70632 (- (- (- (- ?x70620 (* (* 2.0 l_0_13_231) l_0_13_242)) ?x70625) ?x70628) ?x70631)))
 (let ((?x70653 (+ (+ (+ (+ (+ (- (- ?x70632 ?x70634) ?x70637) ?x70640) ?x70643) ?x70646) ?x70649) ?x70652)))
 (let ((?x70663 (- (- (+ (+ ?x70653 ?x70655) ?x70658) (* (* 1.0 l_0_13_74) l_0_13_83)) (* (* 1.0 l_0_13_75) l_0_13_84))))
 (= ?x70663 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x70365 (* (* 2.0 l_0_13_316) l_0_13_323)))
 (let ((?x70362 (* (* 2.0 l_0_13_315) l_0_13_322)))
 (let ((?x70359 (* (* 2.0 l_0_13_314) l_0_13_321)))
 (let ((?x70356 (* (* 2.0 l_0_13_313) l_0_13_320)))
 (let ((?x70353 (* (* 2.0 l_0_13_312) l_0_13_319)))
 (let ((?x70350 (* (* 2.0 l_0_13_311) l_0_13_318)))
 (let ((?x70347 (* (* 2.0 l_0_13_310) l_0_13_317)))
 (let ((?x70770 (* 2.0 l_0_13_273)))
 (let ((?x70771 (* ?x70770 l_0_13_286)))
 (let ((?x70767 (* 2.0 l_0_13_272)))
 (let ((?x70768 (* ?x70767 l_0_13_285)))
 (let ((?x70764 (* 2.0 l_0_13_271)))
 (let ((?x70765 (* ?x70764 l_0_13_284)))
 (let ((?x70761 (* 2.0 l_0_13_270)))
 (let ((?x70762 (* ?x70761 l_0_13_283)))
 (let ((?x70758 (* 2.0 l_0_13_269)))
 (let ((?x70759 (* ?x70758 l_0_13_282)))
 (let ((?x70755 (* 2.0 l_0_13_268)))
 (let ((?x70756 (* ?x70755 l_0_13_281)))
 (let ((?x68634 (* (* 2.0 l_0_13_208) l_0_13_215)))
 (let ((?x68631 (* (* 2.0 l_0_13_207) l_0_13_214)))
 (let ((?x68628 (* (* 2.0 l_0_13_206) l_0_13_213)))
 (let ((?x68625 (* (* 2.0 l_0_13_205) l_0_13_212)))
 (let ((?x68622 (* (* 2.0 l_0_13_204) l_0_13_211)))
 (let ((?x68619 (* (* 2.0 l_0_13_203) l_0_13_210)))
 (let ((?x68616 (* (* 2.0 l_0_13_202) l_0_13_209)))
 (let ((?x68613 (* (* 2.0 l_0_13_172) l_0_13_179)))
 (let ((?x68610 (* (* 2.0 l_0_13_171) l_0_13_178)))
 (let ((?x68607 (* (* 2.0 l_0_13_170) l_0_13_177)))
 (let ((?x68604 (* (* 2.0 l_0_13_169) l_0_13_176)))
 (let ((?x68601 (* (* 2.0 l_0_13_168) l_0_13_175)))
 (let ((?x68598 (* (* 2.0 l_0_13_167) l_0_13_174)))
 (let ((?x68595 (* (* 2.0 l_0_13_166) l_0_13_173)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66705 (* ?x66469 l_0_13_161)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x70720 (* ?x66632 l_0_13_160)))
 (let ((?x70719 (+ (* (* 1.0 l_0_13_110) l_0_13_124) (* (* 1.0 l_0_13_111) l_0_13_125))))
 (let ((?x70727 (+ (+ (+ (+ (+ (- (- ?x70719 ?x70720) ?x66705) ?x68595) ?x68598) ?x68601) ?x68604) ?x68607)))
 (let ((?x70734 (- (- (- (- (- (+ (+ ?x70727 ?x68610) ?x68613) ?x68616) ?x68619) ?x68622) ?x68625) ?x68628)))
 (let ((?x70742 (- (- (- (- ?x70734 ?x68631) ?x68634) (* (* 2.0 l_0_13_232) l_0_13_238)) (* (* 2.0 l_0_13_233) l_0_13_239))))
 (let ((?x70748 (- (- ?x70742 (* (* 2.0 l_0_13_234) l_0_13_240)) (* (* 2.0 l_0_13_235) l_0_13_241))))
 (let ((?x70754 (- (- ?x70748 (* (* 2.0 l_0_13_236) l_0_13_242)) (* (* 2.0 l_0_13_237) l_0_13_243))))
 (let ((?x70773 (+ (- (- (- (- (- (- ?x70754 ?x70756) ?x70759) ?x70762) ?x70765) ?x70768) ?x70771) ?x70347)))
 (let ((?x70781 (- (+ (+ (+ (+ (+ (+ ?x70773 ?x70350) ?x70353) ?x70356) ?x70359) ?x70362) ?x70365) (* (* 1.0 l_0_13_74) l_0_13_88))))
 (= (- ?x70781 (* (* 1.0 l_0_13_75) l_0_13_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x70658 (* (* 2.0 l_0_13_280) l_0_13_287)))
 (let ((?x70655 (* (* 2.0 l_0_13_279) l_0_13_286)))
 (let ((?x70652 (* (* 2.0 l_0_13_278) l_0_13_285)))
 (let ((?x70649 (* (* 2.0 l_0_13_277) l_0_13_284)))
 (let ((?x70646 (* (* 2.0 l_0_13_276) l_0_13_283)))
 (let ((?x70643 (* (* 2.0 l_0_13_275) l_0_13_282)))
 (let ((?x70640 (* (* 2.0 l_0_13_274) l_0_13_281)))
 (let ((?x70807 (* l_0_13_244 l_0_13_244)))
 (let ((?x70805 (* l_0_13_243 l_0_13_243)))
 (let ((?x70803 (* l_0_13_242 l_0_13_242)))
 (let ((?x70801 (* l_0_13_241 l_0_13_241)))
 (let ((?x70799 (* l_0_13_240 l_0_13_240)))
 (let ((?x70797 (* l_0_13_239 l_0_13_239)))
 (let ((?x70795 (* l_0_13_238 l_0_13_238)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66814 (* ?x66469 l_0_13_167)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x66811 (* ?x66632 l_0_13_166)))
 (let ((?x70792 (+ (* (* 1.0 l_0_13_110) l_0_13_130) (* (* 1.0 l_0_13_111) l_0_13_131))))
 (let ((?x70804 (- (- (- (- (- (- (- ?x70792 ?x66811) ?x66814) ?x70795) ?x70797) ?x70799) ?x70801) ?x70803)))
 (let ((?x70813 (- (- (- (- (- (- (- ?x70804 ?x70805) ?x70807) ?x70640) ?x70643) ?x70646) ?x70649) ?x70652)))
 (let ((?x70819 (- (- (- (- ?x70813 ?x70655) ?x70658) (* (* 1.0 l_0_13_74) l_0_13_94)) (* (* 1.0 l_0_13_75) l_0_13_95))))
 (= ?x70819 0.0))))))))))))))))))))))))
(assert
 (let ((?x70876 (* l_0_13_288 l_0_13_288)))
 (let ((?x70874 (* l_0_13_287 l_0_13_287)))
 (let ((?x70872 (* l_0_13_286 l_0_13_286)))
 (let ((?x70870 (* l_0_13_285 l_0_13_285)))
 (let ((?x70868 (* l_0_13_284 l_0_13_284)))
 (let ((?x70866 (* l_0_13_283 l_0_13_283)))
 (let ((?x70864 (* l_0_13_282 l_0_13_282)))
 (let ((?x70862 (* l_0_13_281 l_0_13_281)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66901 (* ?x66469 l_0_13_174)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x16003 (* ?x66632 l_0_13_173)))
 (let ((?x48944 (- (* (* (- 1.0) l_0_13_101) l_0_13_74) (* (* 1.0 l_0_13_102) l_0_13_75))))
 (let ((?x48913 (+ (+ ?x48944 (* (* 1.0 l_0_13_110) l_0_13_137)) (* (* 1.0 l_0_13_111) l_0_13_138))))
 (let ((?x70846 (- (- (- (- ?x48913 ?x16003) ?x66901) (* (* 2.0 l_0_13_238) l_0_13_245)) (* (* 2.0 l_0_13_239) l_0_13_246))))
 (let ((?x70852 (- (- ?x70846 (* (* 2.0 l_0_13_240) l_0_13_247)) (* (* 2.0 l_0_13_241) l_0_13_248))))
 (let ((?x70858 (- (- ?x70852 (* (* 2.0 l_0_13_242) l_0_13_249)) (* (* 2.0 l_0_13_243) l_0_13_250))))
 (let ((?x70867 (- (- (- (- ?x70858 (* (* 2.0 l_0_13_244) l_0_13_251)) ?x70862) ?x70864) ?x70866)))
 (= (- (- (- (- (- ?x70867 ?x70868) ?x70870) ?x70872) ?x70874) ?x70876) 0.0))))))))))))))))))))
(assert
 (let ((?x67309 (* l_0_13_154 l_0_13_154)))
 (let ((?x67307 (* l_0_13_153 l_0_13_153)))
 (let ((?x67305 (* l_0_13_152 l_0_13_152)))
 (let ((?x9386 (* l_0_13_151 l_0_13_151)))
 (let ((?x70916 (+ (* (/ 1.0 2.0) (* l_0_13_115 l_0_13_115)) (* (/ 1.0 2.0) (* l_0_13_116 l_0_13_116)))))
 (let ((?x70920 (+ (+ ?x70916 (* (/ 1.0 2.0) (* l_0_13_117 l_0_13_117))) (* (/ 1.0 2.0) (* l_0_13_118 l_0_13_118)))))
 (let ((?x70927 (- (- (- (- (- ?x70920 ?x9386) ?x67305) ?x67307) ?x67309) (* (* (/ 1.0 2.0) l_0_13_79) l_0_13_79))))
 (let ((?x70933 (- (- ?x70927 (* (* (/ 1.0 2.0) l_0_13_80) l_0_13_80)) (* (* (/ 1.0 2.0) l_0_13_81) l_0_13_81))))
 (= (- ?x70933 (* (* (/ 1.0 2.0) l_0_13_82) l_0_13_82)) 0.0))))))))))
(assert
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67378 (* ?x67377 l_0_13_158)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67375 (* ?x67374 l_0_13_157)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67372 (* ?x67371 l_0_13_156)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67369 (* ?x67368 l_0_13_155)))
 (let ((?x70951 (+ (* (* 1.0 l_0_13_115) l_0_13_119) (* (* 1.0 l_0_13_116) l_0_13_120))))
 (let ((?x70957 (+ (+ ?x70951 (* (* 1.0 l_0_13_117) l_0_13_121)) (* (* 1.0 l_0_13_118) l_0_13_122))))
 (let ((?x70964 (- (- (- (- (- ?x70957 ?x67369) ?x67372) ?x67375) ?x67378) (* (* 1.0 l_0_13_79) l_0_13_83))))
 (let ((?x70970 (- (- ?x70964 (* (* 1.0 l_0_13_80) l_0_13_84)) (* (* 1.0 l_0_13_81) l_0_13_85))))
 (= (- ?x70970 (* (* 1.0 l_0_13_82) l_0_13_86)) 0.0))))))))))))))
(assert
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67445 (* ?x67377 l_0_13_163)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67441 (* ?x67374 l_0_13_162)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67437 (* ?x67371 l_0_13_161)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67433 (* ?x67368 l_0_13_160)))
 (let ((?x70995 (+ (* (* 1.0 l_0_13_115) l_0_13_124) (* (* 1.0 l_0_13_116) l_0_13_125))))
 (let ((?x70999 (+ (+ ?x70995 (* (* 1.0 l_0_13_117) l_0_13_126)) (* (* 1.0 l_0_13_118) l_0_13_127))))
 (let ((?x71005 (- (- (- (- (- ?x70999 ?x67433) ?x67437) ?x67441) ?x67445) (* (* 1.0 l_0_13_79) l_0_13_88))))
 (let ((?x71009 (- (- ?x71005 (* (* 1.0 l_0_13_80) l_0_13_89)) (* (* 1.0 l_0_13_81) l_0_13_90))))
 (= (- ?x71009 (* (* 1.0 l_0_13_82) l_0_13_91)) 0.0))))))))))))))
(assert
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67537 (* ?x67377 l_0_13_169)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67535 (* ?x67374 l_0_13_168)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67533 (* ?x67371 l_0_13_167)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67531 (* ?x67368 l_0_13_166)))
 (let ((?x71027 (+ (* (* 1.0 l_0_13_115) l_0_13_130) (* (* 1.0 l_0_13_116) l_0_13_131))))
 (let ((?x71031 (+ (+ ?x71027 (* (* 1.0 l_0_13_117) l_0_13_132)) (* (* 1.0 l_0_13_118) l_0_13_133))))
 (let ((?x71037 (- (- (- (- (- ?x71031 ?x67531) ?x67533) ?x67535) ?x67537) (* (* 1.0 l_0_13_79) l_0_13_94))))
 (let ((?x71041 (- (- ?x71037 (* (* 1.0 l_0_13_80) l_0_13_95)) (* (* 1.0 l_0_13_81) l_0_13_96))))
 (= (- ?x71041 (* (* 1.0 l_0_13_82) l_0_13_97)) 0.0))))))))))))))
(assert
 (let ((?x67377 (* 2.0 l_0_13_154)))
 (let ((?x67653 (* ?x67377 l_0_13_176)))
 (let ((?x67374 (* 2.0 l_0_13_153)))
 (let ((?x67651 (* ?x67374 l_0_13_175)))
 (let ((?x67371 (* 2.0 l_0_13_152)))
 (let ((?x67649 (* ?x67371 l_0_13_174)))
 (let ((?x67368 (* 2.0 l_0_13_151)))
 (let ((?x67647 (* ?x67368 l_0_13_173)))
 (let ((?x71071 (- (* (* (- 1.0) l_0_13_101) l_0_13_79) (* (* 1.0 l_0_13_102) l_0_13_80))))
 (let ((?x71076 (- (- ?x71071 (* (* 1.0 l_0_13_103) l_0_13_81)) (* (* 1.0 l_0_13_104) l_0_13_82))))
 (let ((?x71080 (+ (+ ?x71076 (* (* 1.0 l_0_13_115) l_0_13_137)) (* (* 1.0 l_0_13_116) l_0_13_138))))
 (let ((?x71084 (+ (+ ?x71080 (* (* 1.0 l_0_13_117) l_0_13_139)) (* (* 1.0 l_0_13_118) l_0_13_140))))
 (= (- (- (- (- ?x71084 ?x67647) ?x67649) ?x67651) ?x67653) 0.0))))))))))))))
(assert
 (let ((?x67746 (* l_0_13_159 l_0_13_159)))
 (let ((?x67744 (* l_0_13_158 l_0_13_158)))
 (let ((?x67742 (* l_0_13_157 l_0_13_157)))
 (let ((?x67740 (* l_0_13_156 l_0_13_156)))
 (let ((?x67738 (* l_0_13_155 l_0_13_155)))
 (let ((?x71115 (+ (* (/ 1.0 2.0) (* l_0_13_119 l_0_13_119)) (* (/ 1.0 2.0) (* l_0_13_120 l_0_13_120)))))
 (let ((?x71121 (+ (+ ?x71115 (* (/ 1.0 2.0) (* l_0_13_121 l_0_13_121))) (* (/ 1.0 2.0) (* l_0_13_122 l_0_13_122)))))
 (let ((?x71127 (- (- (- (+ ?x71121 (* (/ 1.0 2.0) (* l_0_13_123 l_0_13_123))) ?x67738) ?x67740) ?x67742)))
 (let ((?x71135 (- (- (- (- ?x71127 ?x67744) ?x67746) (* (* (/ 1.0 2.0) l_0_13_83) l_0_13_83)) (* (* (/ 1.0 2.0) l_0_13_84) l_0_13_84))))
 (let ((?x71141 (- (- ?x71135 (* (* (/ 1.0 2.0) l_0_13_85) l_0_13_85)) (* (* (/ 1.0 2.0) l_0_13_86) l_0_13_86))))
 (= (- ?x71141 (* (* (/ 1.0 2.0) l_0_13_87) l_0_13_87)) 0.0))))))))))))
(assert
 (let ((?x67821 (* 2.0 l_0_13_159)))
 (let ((?x67822 (* ?x67821 l_0_13_164)))
 (let ((?x67818 (* 2.0 l_0_13_158)))
 (let ((?x67819 (* ?x67818 l_0_13_163)))
 (let ((?x67815 (* 2.0 l_0_13_157)))
 (let ((?x67816 (* ?x67815 l_0_13_162)))
 (let ((?x67812 (* 2.0 l_0_13_156)))
 (let ((?x67813 (* ?x67812 l_0_13_161)))
 (let ((?x67809 (* 2.0 l_0_13_155)))
 (let ((?x67810 (* ?x67809 l_0_13_160)))
 (let ((?x71168 (+ (* (* 1.0 l_0_13_119) l_0_13_124) (* (* 1.0 l_0_13_120) l_0_13_125))))
 (let ((?x71174 (+ (+ ?x71168 (* (* 1.0 l_0_13_121) l_0_13_126)) (* (* 1.0 l_0_13_122) l_0_13_127))))
 (let ((?x71180 (- (- (- (+ ?x71174 (* (* 1.0 l_0_13_123) l_0_13_128)) ?x67810) ?x67813) ?x67816)))
 (let ((?x71188 (- (- (- (- ?x71180 ?x67819) ?x67822) (* (* 1.0 l_0_13_83) l_0_13_88)) (* (* 1.0 l_0_13_84) l_0_13_89))))
 (let ((?x71194 (- (- ?x71188 (* (* 1.0 l_0_13_85) l_0_13_90)) (* (* 1.0 l_0_13_86) l_0_13_91))))
 (= (- ?x71194 (* (* 1.0 l_0_13_87) l_0_13_92)) 0.0)))))))))))))))))
(assert
 (let ((?x67821 (* 2.0 l_0_13_159)))
 (let ((?x67936 (* ?x67821 l_0_13_170)))
 (let ((?x67818 (* 2.0 l_0_13_158)))
 (let ((?x67934 (* ?x67818 l_0_13_169)))
 (let ((?x67815 (* 2.0 l_0_13_157)))
 (let ((?x67932 (* ?x67815 l_0_13_168)))
 (let ((?x67812 (* 2.0 l_0_13_156)))
 (let ((?x67930 (* ?x67812 l_0_13_167)))
 (let ((?x67809 (* 2.0 l_0_13_155)))
 (let ((?x67928 (* ?x67809 l_0_13_166)))
 (let ((?x49292 (+ (* (* 1.0 l_0_13_119) l_0_13_130) (* (* 1.0 l_0_13_120) l_0_13_131))))
 (let ((?x16204 (+ (+ ?x49292 (* (* 1.0 l_0_13_121) l_0_13_132)) (* (* 1.0 l_0_13_122) l_0_13_133))))
 (let ((?x16299 (- (- (- (+ ?x16204 (* (* 1.0 l_0_13_123) l_0_13_134)) ?x67928) ?x67930) ?x67932)))
 (let ((?x49323 (- (- (- (- ?x16299 ?x67934) ?x67936) (* (* 1.0 l_0_13_83) l_0_13_94)) (* (* 1.0 l_0_13_84) l_0_13_95))))
 (let ((?x71208 (- (- ?x49323 (* (* 1.0 l_0_13_85) l_0_13_96)) (* (* 1.0 l_0_13_86) l_0_13_97))))
 (= (- ?x71208 (* (* 1.0 l_0_13_87) l_0_13_98)) 0.0)))))))))))))))))
(assert
 (let ((?x67821 (* 2.0 l_0_13_159)))
 (let ((?x68038 (* ?x67821 l_0_13_177)))
 (let ((?x67818 (* 2.0 l_0_13_158)))
 (let ((?x68036 (* ?x67818 l_0_13_176)))
 (let ((?x67815 (* 2.0 l_0_13_157)))
 (let ((?x68034 (* ?x67815 l_0_13_175)))
 (let ((?x67812 (* 2.0 l_0_13_156)))
 (let ((?x68032 (* ?x67812 l_0_13_174)))
 (let ((?x67809 (* 2.0 l_0_13_155)))
 (let ((?x68030 (* ?x67809 l_0_13_173)))
 (let ((?x71223 (- (* (* (- 1.0) l_0_13_101) l_0_13_83) (* (* 1.0 l_0_13_102) l_0_13_84))))
 (let ((?x71227 (- (- ?x71223 (* (* 1.0 l_0_13_103) l_0_13_85)) (* (* 1.0 l_0_13_104) l_0_13_86))))
 (let ((?x71232 (+ (- ?x71227 (* (* 1.0 l_0_13_105) l_0_13_87)) (* (* 1.0 l_0_13_119) l_0_13_137))))
 (let ((?x71236 (+ (+ ?x71232 (* (* 1.0 l_0_13_120) l_0_13_138)) (* (* 1.0 l_0_13_121) l_0_13_139))))
 (let ((?x71240 (+ (+ ?x71236 (* (* 1.0 l_0_13_122) l_0_13_140)) (* (* 1.0 l_0_13_123) l_0_13_141))))
 (= (- (- (- (- (- ?x71240 ?x68030) ?x68032) ?x68034) ?x68036) ?x68038) 0.0)))))))))))))))))
(assert
 (let ((?x68135 (* l_0_13_165 l_0_13_165)))
 (let ((?x68120 (* l_0_13_164 l_0_13_164)))
 (let ((?x68117 (* l_0_13_163 l_0_13_163)))
 (let ((?x68113 (* l_0_13_162 l_0_13_162)))
 (let ((?x68109 (* l_0_13_161 l_0_13_161)))
 (let ((?x68105 (* l_0_13_160 l_0_13_160)))
 (let ((?x16429 (+ (* (/ 1.0 2.0) (* l_0_13_124 l_0_13_124)) (* (/ 1.0 2.0) (* l_0_13_125 l_0_13_125)))))
 (let ((?x71276 (+ (+ ?x16429 (* (/ 1.0 2.0) (* l_0_13_126 l_0_13_126))) (* (/ 1.0 2.0) (* l_0_13_127 l_0_13_127)))))
 (let ((?x71282 (+ (+ ?x71276 (* (/ 1.0 2.0) (* l_0_13_128 l_0_13_128))) (* (/ 1.0 2.0) (* l_0_13_129 l_0_13_129)))))
 (let ((?x71291 (- (- (- (- (- (- (- ?x71282 ?x68105) ?x68109) ?x68113) ?x68117) ?x68120) ?x68135) (* (* (/ 1.0 2.0) l_0_13_88) l_0_13_88))))
 (let ((?x71297 (- (- ?x71291 (* (* (/ 1.0 2.0) l_0_13_89) l_0_13_89)) (* (* (/ 1.0 2.0) l_0_13_90) l_0_13_90))))
 (let ((?x71303 (- (- ?x71297 (* (* (/ 1.0 2.0) l_0_13_91) l_0_13_91)) (* (* (/ 1.0 2.0) l_0_13_92) l_0_13_92))))
 (= (- ?x71303 (* (* (/ 1.0 2.0) l_0_13_93) l_0_13_93)) 0.0))))))))))))))
(assert
 (let ((?x68246 (* 2.0 l_0_13_165)))
 (let ((?x68247 (* ?x68246 l_0_13_171)))
 (let ((?x68243 (* 2.0 l_0_13_164)))
 (let ((?x68244 (* ?x68243 l_0_13_170)))
 (let ((?x68240 (* 2.0 l_0_13_163)))
 (let ((?x68241 (* ?x68240 l_0_13_169)))
 (let ((?x68237 (* 2.0 l_0_13_162)))
 (let ((?x68238 (* ?x68237 l_0_13_168)))
 (let ((?x68234 (* 2.0 l_0_13_161)))
 (let ((?x68235 (* ?x68234 l_0_13_167)))
 (let ((?x68231 (* 2.0 l_0_13_160)))
 (let ((?x68232 (* ?x68231 l_0_13_166)))
 (let ((?x71328 (+ (* (* 1.0 l_0_13_124) l_0_13_130) (* (* 1.0 l_0_13_125) l_0_13_131))))
 (let ((?x71334 (+ (+ ?x71328 (* (* 1.0 l_0_13_126) l_0_13_132)) (* (* 1.0 l_0_13_127) l_0_13_133))))
 (let ((?x71340 (+ (+ ?x71334 (* (* 1.0 l_0_13_128) l_0_13_134)) (* (* 1.0 l_0_13_129) l_0_13_135))))
 (let ((?x71349 (- (- (- (- (- (- (- ?x71340 ?x68232) ?x68235) ?x68238) ?x68241) ?x68244) ?x68247) (* (* 1.0 l_0_13_88) l_0_13_94))))
 (let ((?x71355 (- (- ?x71349 (* (* 1.0 l_0_13_89) l_0_13_95)) (* (* 1.0 l_0_13_90) l_0_13_96))))
 (let ((?x71361 (- (- ?x71355 (* (* 1.0 l_0_13_91) l_0_13_97)) (* (* 1.0 l_0_13_92) l_0_13_98))))
 (= (- ?x71361 (* (* 1.0 l_0_13_93) l_0_13_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x68246 (* 2.0 l_0_13_165)))
 (let ((?x68392 (* ?x68246 l_0_13_178)))
 (let ((?x68243 (* 2.0 l_0_13_164)))
 (let ((?x68390 (* ?x68243 l_0_13_177)))
 (let ((?x68240 (* 2.0 l_0_13_163)))
 (let ((?x68388 (* ?x68240 l_0_13_176)))
 (let ((?x68237 (* 2.0 l_0_13_162)))
 (let ((?x68386 (* ?x68237 l_0_13_175)))
 (let ((?x68234 (* 2.0 l_0_13_161)))
 (let ((?x68384 (* ?x68234 l_0_13_174)))
 (let ((?x68231 (* 2.0 l_0_13_160)))
 (let ((?x68382 (* ?x68231 l_0_13_173)))
 (let ((?x71383 (- (* (* (- 1.0) l_0_13_101) l_0_13_88) (* (* 1.0 l_0_13_102) l_0_13_89))))
 (let ((?x71387 (- (- ?x71383 (* (* 1.0 l_0_13_103) l_0_13_90)) (* (* 1.0 l_0_13_104) l_0_13_91))))
 (let ((?x71392 (- (- ?x71387 (* (* 1.0 l_0_13_105) l_0_13_92)) (* (* 1.0 l_0_13_106) l_0_13_93))))
 (let ((?x71396 (+ (+ ?x71392 (* (* 1.0 l_0_13_124) l_0_13_137)) (* (* 1.0 l_0_13_125) l_0_13_138))))
 (let ((?x71400 (+ (+ ?x71396 (* (* 1.0 l_0_13_126) l_0_13_139)) (* (* 1.0 l_0_13_127) l_0_13_140))))
 (let ((?x71404 (+ (+ ?x71400 (* (* 1.0 l_0_13_128) l_0_13_141)) (* (* 1.0 l_0_13_129) l_0_13_142))))
 (= (- (- (- (- (- (- ?x71404 ?x68382) ?x68384) ?x68386) ?x68388) ?x68390) ?x68392) 0.0))))))))))))))))))))
(assert
 (let ((?x68471 (* l_0_13_172 l_0_13_172)))
 (let ((?x68469 (* l_0_13_171 l_0_13_171)))
 (let ((?x68467 (* l_0_13_170 l_0_13_170)))
 (let ((?x68465 (* l_0_13_169 l_0_13_169)))
 (let ((?x68463 (* l_0_13_168 l_0_13_168)))
 (let ((?x68461 (* l_0_13_167 l_0_13_167)))
 (let ((?x68459 (* l_0_13_166 l_0_13_166)))
 (let ((?x71436 (+ (* (* (- (/ 1.0 2.0)) l_0_13_100) l_0_13_100) (* (/ 1.0 2.0) (* l_0_13_130 l_0_13_130)))))
 (let ((?x71442 (+ (+ ?x71436 (* (/ 1.0 2.0) (* l_0_13_131 l_0_13_131))) (* (/ 1.0 2.0) (* l_0_13_132 l_0_13_132)))))
 (let ((?x71448 (+ (+ ?x71442 (* (/ 1.0 2.0) (* l_0_13_133 l_0_13_133))) (* (/ 1.0 2.0) (* l_0_13_134 l_0_13_134)))))
 (let ((?x71454 (+ (+ ?x71448 (* (/ 1.0 2.0) (* l_0_13_135 l_0_13_135))) (* (/ 1.0 2.0) (* l_0_13_136 l_0_13_136)))))
 (let ((?x71461 (- (- (- (- (- (- (- ?x71454 ?x68459) ?x68461) ?x68463) ?x68465) ?x68467) ?x68469) ?x68471)))
 (let ((?x71467 (- (- ?x71461 (* (* (/ 1.0 2.0) l_0_13_94) l_0_13_94)) (* (* (/ 1.0 2.0) l_0_13_95) l_0_13_95))))
 (let ((?x71473 (- (- ?x71467 (* (* (/ 1.0 2.0) l_0_13_96) l_0_13_96)) (* (* (/ 1.0 2.0) l_0_13_97) l_0_13_97))))
 (let ((?x71479 (- (- ?x71473 (* (* (/ 1.0 2.0) l_0_13_98) l_0_13_98)) (* (* (/ 1.0 2.0) l_0_13_99) l_0_13_99))))
 (= ?x71479 0.0)))))))))))))))))
(assert
 (let ((?x68613 (* (* 2.0 l_0_13_172) l_0_13_179)))
 (let ((?x68610 (* (* 2.0 l_0_13_171) l_0_13_178)))
 (let ((?x68607 (* (* 2.0 l_0_13_170) l_0_13_177)))
 (let ((?x68604 (* (* 2.0 l_0_13_169) l_0_13_176)))
 (let ((?x68601 (* (* 2.0 l_0_13_168) l_0_13_175)))
 (let ((?x68598 (* (* 2.0 l_0_13_167) l_0_13_174)))
 (let ((?x68595 (* (* 2.0 l_0_13_166) l_0_13_173)))
 (let ((?x71494 (- (* (* (- 1.0) l_0_13_100) l_0_13_107) (* (* 1.0 l_0_13_101) l_0_13_94))))
 (let ((?x71498 (- (- ?x71494 (* (* 1.0 l_0_13_102) l_0_13_95)) (* (* 1.0 l_0_13_103) l_0_13_96))))
 (let ((?x71502 (- (- ?x71498 (* (* 1.0 l_0_13_104) l_0_13_97)) (* (* 1.0 l_0_13_105) l_0_13_98))))
 (let ((?x71507 (+ (- ?x71502 (* (* 1.0 l_0_13_106) l_0_13_99)) (* (* 1.0 l_0_13_130) l_0_13_137))))
 (let ((?x71513 (+ (+ ?x71507 (* (* 1.0 l_0_13_131) l_0_13_138)) (* (* 1.0 l_0_13_132) l_0_13_139))))
 (let ((?x71519 (+ (+ ?x71513 (* (* 1.0 l_0_13_133) l_0_13_140)) (* (* 1.0 l_0_13_134) l_0_13_141))))
 (let ((?x71525 (+ (+ ?x71519 (* (* 1.0 l_0_13_135) l_0_13_142)) (* (* 1.0 l_0_13_136) l_0_13_143))))
 (let ((?x71532 (- (- (- (- (- (- (- ?x71525 ?x68595) ?x68598) ?x68601) ?x68604) ?x68607) ?x68610) ?x68613)))
 (= ?x71532 0.0)))))))))))))))))
(assert
 (let ((?x68750 (* l_0_13_180 l_0_13_180)))
 (let ((?x68748 (* l_0_13_179 l_0_13_179)))
 (let ((?x68746 (* l_0_13_178 l_0_13_178)))
 (let ((?x68744 (* l_0_13_177 l_0_13_177)))
 (let ((?x68742 (* l_0_13_176 l_0_13_176)))
 (let ((?x68740 (* l_0_13_175 l_0_13_175)))
 (let ((?x68738 (* l_0_13_174 l_0_13_174)))
 (let ((?x68802 (* l_0_13_173 l_0_13_173)))
 (let ((?x71564 (- (* (* (- (/ 1.0 2.0)) l_0_13_101) l_0_13_101) (* (* (/ 1.0 2.0) l_0_13_102) l_0_13_102))))
 (let ((?x71570 (- (- ?x71564 (* (* (/ 1.0 2.0) l_0_13_103) l_0_13_103)) (* (* (/ 1.0 2.0) l_0_13_104) l_0_13_104))))
 (let ((?x71576 (- (- ?x71570 (* (* (/ 1.0 2.0) l_0_13_105) l_0_13_105)) (* (* (/ 1.0 2.0) l_0_13_106) l_0_13_106))))
 (let ((?x71582 (- (- ?x71576 (* (* (/ 1.0 2.0) l_0_13_107) l_0_13_107)) (* (* (/ 1.0 2.0) l_0_13_108) l_0_13_108))))
 (let ((?x71588 (+ (+ ?x71582 (* (/ 1.0 2.0) (* l_0_13_137 l_0_13_137))) (* (/ 1.0 2.0) (* l_0_13_138 l_0_13_138)))))
 (let ((?x71594 (+ (+ ?x71588 (* (/ 1.0 2.0) (* l_0_13_139 l_0_13_139))) (* (/ 1.0 2.0) (* l_0_13_140 l_0_13_140)))))
 (let ((?x71600 (+ (+ ?x71594 (* (/ 1.0 2.0) (* l_0_13_141 l_0_13_141))) (* (/ 1.0 2.0) (* l_0_13_142 l_0_13_142)))))
 (let ((?x71606 (+ (+ ?x71600 (* (/ 1.0 2.0) (* l_0_13_143 l_0_13_143))) (* (/ 1.0 2.0) (* l_0_13_144 l_0_13_144)))))
 (let ((?x71613 (- (- (- (- (- (- (- ?x71606 ?x68802) ?x68738) ?x68740) ?x68742) ?x68744) ?x68746) ?x68748)))
 (= (- ?x71613 ?x68750) 0.0)))))))))))))))))))
(assert
 (let ((?x15493 (* l_0_13_73 l_0_13_73)))
 (let ((?x16729 (+ (- (* (- l_0_13_109) l_0_13_109) (* l_0_13_289 l_0_13_289)) ?x15493)))
 (= ?x16729 0.0))))
(assert
 (let ((?x71651 (* l_0_13_469 l_0_13_469)))
 (let ((?x71649 (* l_0_13_433 l_0_13_433)))
 (let ((?x71647 (* l_0_13_397 l_0_13_397)))
 (let ((?x71645 (* l_0_13_361 l_0_13_361)))
 (let ((?x71643 (* l_0_13_325 l_0_13_325)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x68864 (* ?x68834 l_0_13_290)))
 (let ((?x71648 (- (- (- (- (* (* (- 2.0) l_0_13_109) l_0_13_110) ?x68864) ?x71643) ?x71645) ?x71647)))
 (= (+ (- (- ?x71648 ?x71649) ?x71651) (* (* 2.0 l_0_13_73) l_0_13_74)) 0.0))))))))))
(assert
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x68939 (* ?x68834 l_0_13_292)))
 (let ((?x16768 (+ (- (* (* (- 2.0) l_0_13_109) l_0_13_112) ?x68939) (* (* 2.0 l_0_13_73) l_0_13_76))))
 (= ?x16768 0.0)))))
(assert
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69023 (* ?x68834 l_0_13_299)))
 (let ((?x50245 (* l_0_13_253 l_0_13_253)))
 (let ((?x71673 (+ (- (+ (* (* (- 2.0) l_0_13_109) l_0_13_119) ?x50245) ?x69023) (* (* 2.0 l_0_13_73) l_0_13_83))))
 (= ?x71673 0.0))))))
(assert
 (let ((?x68837 (* l_0_13_289 l_0_13_289)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69089 (* ?x68834 l_0_13_304)))
 (let ((?x66220 (* l_0_13_181 l_0_13_181)))
 (let ((?x7832 (* l_0_13_145 l_0_13_145)))
 (let ((?x71688 (+ (- (- (+ (* (* (- 2.0) l_0_13_109) l_0_13_124) ?x7832) ?x66220) ?x69089) ?x68837)))
 (= (+ ?x71688 (* (* 2.0 l_0_13_73) l_0_13_88)) 0.0))))))))
(assert
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69129 (* ?x68834 l_0_13_310)))
 (let ((?x50245 (* l_0_13_253 l_0_13_253)))
 (let ((?x71698 (+ (- (- (* (* (- 2.0) l_0_13_109) l_0_13_130) ?x50245) ?x69129) (* (* 2.0 l_0_13_73) l_0_13_94))))
 (= ?x71698 0.0))))))
(assert
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69190 (* ?x68834 l_0_13_317)))
 (let ((?x71705 (* l_0_13_217 l_0_13_217)))
 (let ((?x71704 (- (* (* 2.0 l_0_13_101) l_0_13_73) (* (* 2.0 l_0_13_109) l_0_13_137))))
 (= (- (- ?x71704 ?x71705) ?x69190) 0.0))))))
(assert
 (let ((?x7883 (* l_0_13_75 l_0_13_75)))
 (let ((?x66211 (* l_0_13_74 l_0_13_74)))
 (let ((?x65900 (* l_0_13_291 l_0_13_291)))
 (let ((?x65898 (* l_0_13_290 l_0_13_290)))
 (let ((?x71717 (- (- (* (- l_0_13_110) l_0_13_110) (* l_0_13_111 l_0_13_111)) ?x65898)))
 (let ((?x71722 (- (- (- ?x71717 ?x65900) (* (* 2.0 l_0_13_325) l_0_13_326)) (* (* 2.0 l_0_13_361) l_0_13_362))))
 (let ((?x71726 (- (- ?x71722 (* (* 2.0 l_0_13_397) l_0_13_398)) (* (* 2.0 l_0_13_433) l_0_13_434))))
 (= (+ (+ (- ?x71726 (* (* 2.0 l_0_13_469) l_0_13_470)) ?x66211) ?x7883) 0.0)))))))))
(assert
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x42125 (* ?x68869 l_0_13_293)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x42255 (* ?x68866 l_0_13_292)))
 (let ((?x71753 (- (* (* (- 2.0) l_0_13_110) l_0_13_112) (* (* 2.0 l_0_13_111) l_0_13_113))))
 (let ((?x71759 (- (- (- (- ?x71753 ?x42255) ?x42125) (* (* 2.0 l_0_13_325) l_0_13_328)) (* (* 2.0 l_0_13_361) l_0_13_364))))
 (let ((?x71763 (- (- ?x71759 (* (* 2.0 l_0_13_397) l_0_13_400)) (* (* 2.0 l_0_13_433) l_0_13_436))))
 (let ((?x71767 (+ (- ?x71763 (* (* 2.0 l_0_13_469) l_0_13_472)) (* (* 2.0 l_0_13_74) l_0_13_76))))
 (= (+ ?x71767 (* (* 2.0 l_0_13_75) l_0_13_77)) 0.0))))))))))
(assert
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x43138 (* ?x68869 l_0_13_300)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x43132 (* ?x68866 l_0_13_299)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x71795 (* ?x69020 l_0_13_254)))
 (let ((?x71794 (- (* (* (- 2.0) l_0_13_110) l_0_13_119) (* (* 2.0 l_0_13_111) l_0_13_120))))
 (let ((?x71800 (- (- (- (+ ?x71794 ?x71795) ?x43132) ?x43138) (* (* 2.0 l_0_13_325) l_0_13_335))))
 (let ((?x71804 (- (- ?x71800 (* (* 2.0 l_0_13_361) l_0_13_371)) (* (* 2.0 l_0_13_397) l_0_13_407))))
 (let ((?x71808 (- (- ?x71804 (* (* 2.0 l_0_13_433) l_0_13_443)) (* (* 2.0 l_0_13_469) l_0_13_479))))
 (let ((?x71812 (+ (+ ?x71808 (* (* 2.0 l_0_13_74) l_0_13_83)) (* (* 2.0 l_0_13_75) l_0_13_84))))
 (= ?x71812 0.0)))))))))))))
(assert
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x69457 (* ?x68869 l_0_13_305)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x69454 (* ?x68866 l_0_13_304)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x68864 (* ?x68834 l_0_13_290)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66259 (* ?x66258 l_0_13_182)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66256 (* ?x66255 l_0_13_146)))
 (let ((?x16999 (- (* (* (- 2.0) l_0_13_110) l_0_13_124) (* (* 2.0 l_0_13_111) l_0_13_125))))
 (let ((?x71839 (- (- (- (+ (- (+ ?x16999 ?x66256) ?x66259) ?x68864) ?x69454) ?x69457) (* (* 2.0 l_0_13_325) l_0_13_340))))
 (let ((?x71843 (- (- ?x71839 (* (* 2.0 l_0_13_361) l_0_13_376)) (* (* 2.0 l_0_13_397) l_0_13_412))))
 (let ((?x71847 (- (- ?x71843 (* (* 2.0 l_0_13_433) l_0_13_448)) (* (* 2.0 l_0_13_469) l_0_13_484))))
 (let ((?x71851 (+ (+ ?x71847 (* (* 2.0 l_0_13_74) l_0_13_88)) (* (* 2.0 l_0_13_75) l_0_13_89))))
 (= ?x71851 0.0)))))))))))))))))
(assert
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x69522 (* ?x68869 l_0_13_311)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x12641 (* ?x68866 l_0_13_310)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x71795 (* ?x69020 l_0_13_254)))
 (let ((?x71878 (- (* (* (- 2.0) l_0_13_110) l_0_13_130) (* (* 2.0 l_0_13_111) l_0_13_131))))
 (let ((?x71883 (- (- (- (- ?x71878 ?x71795) ?x12641) ?x69522) (* (* 2.0 l_0_13_325) l_0_13_346))))
 (let ((?x71887 (- (- ?x71883 (* (* 2.0 l_0_13_361) l_0_13_382)) (* (* 2.0 l_0_13_397) l_0_13_418))))
 (let ((?x71891 (- (- ?x71887 (* (* 2.0 l_0_13_433) l_0_13_454)) (* (* 2.0 l_0_13_469) l_0_13_490))))
 (let ((?x71895 (+ (+ ?x71891 (* (* 2.0 l_0_13_74) l_0_13_94)) (* (* 2.0 l_0_13_75) l_0_13_95))))
 (= ?x71895 0.0)))))))))))))
(assert
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x12763 (* ?x68869 l_0_13_318)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x12733 (* ?x68866 l_0_13_317)))
 (let ((?x71914 (+ (* (* 2.0 l_0_13_101) l_0_13_74) (* (* 2.0 l_0_13_102) l_0_13_75))))
 (let ((?x71923 (- (- ?x71914 (* (* 2.0 l_0_13_110) l_0_13_137)) (* (* 2.0 l_0_13_111) l_0_13_138))))
 (let ((?x71929 (- (- (- (- ?x71923 (* (* 2.0 l_0_13_217) l_0_13_218)) ?x12733) ?x12763) (* (* 2.0 l_0_13_325) l_0_13_353))))
 (let ((?x71933 (- (- ?x71929 (* (* 2.0 l_0_13_361) l_0_13_389)) (* (* 2.0 l_0_13_397) l_0_13_425))))
 (let ((?x71937 (- (- ?x71933 (* (* 2.0 l_0_13_433) l_0_13_461)) (* (* 2.0 l_0_13_469) l_0_13_497))))
 (= ?x71937 0.0)))))))))))
(assert
 (let ((?x9378 (* l_0_13_78 l_0_13_78)))
 (let ((?x9373 (* l_0_13_77 l_0_13_77)))
 (let ((?x67274 (* l_0_13_76 l_0_13_76)))
 (let ((?x69726 (* l_0_13_294 l_0_13_294)))
 (let ((?x69724 (* l_0_13_293 l_0_13_293)))
 (let ((?x69736 (* l_0_13_292 l_0_13_292)))
 (let ((?x67188 (* l_0_13_114 l_0_13_114)))
 (let ((?x71964 (- (- (* (- l_0_13_112) l_0_13_112) (* l_0_13_113 l_0_13_113)) ?x67188)))
 (= (+ (+ (+ (- (- (- ?x71964 ?x69736) ?x69724) ?x69726) ?x67274) ?x9373) ?x9378) 0.0))))))))))
(assert
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x69751 (* ?x66270 l_0_13_301)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x69749 (* ?x66267 l_0_13_300)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x69747 (* ?x66264 l_0_13_299)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x50830 (* ?x69020 l_0_13_256)))
 (let ((?x50835 (- (* (* (- 2.0) l_0_13_112) l_0_13_119) (* (* 2.0 l_0_13_113) l_0_13_120))))
 (let ((?x17227 (- (- (+ (- ?x50835 (* (* 2.0 l_0_13_114) l_0_13_121)) ?x50830) ?x69747) ?x69749)))
 (let ((?x71979 (+ (+ (- ?x17227 ?x69751) (* (* 2.0 l_0_13_76) l_0_13_83)) (* (* 2.0 l_0_13_77) l_0_13_84))))
 (= (+ ?x71979 (* (* 2.0 l_0_13_78) l_0_13_85)) 0.0)))))))))))))
(assert
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x69789 (* ?x66270 l_0_13_306)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x69786 (* ?x66267 l_0_13_305)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x69783 (* ?x66264 l_0_13_304)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x68939 (* ?x68834 l_0_13_292)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66328 (* ?x66258 l_0_13_184)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x8133 (* ?x66255 l_0_13_148)))
 (let ((?x50904 (- (* (* (- 2.0) l_0_13_112) l_0_13_124) (* (* 2.0 l_0_13_113) l_0_13_125))))
 (let ((?x72006 (+ (- (+ (- ?x50904 (* (* 2.0 l_0_13_114) l_0_13_126)) ?x8133) ?x66328) ?x68939)))
 (let ((?x72011 (+ (- (- (- ?x72006 ?x69783) ?x69786) ?x69789) (* (* 2.0 l_0_13_76) l_0_13_88))))
 (let ((?x72015 (+ (+ ?x72011 (* (* 2.0 l_0_13_77) l_0_13_89)) (* (* 2.0 l_0_13_78) l_0_13_90))))
 (= ?x72015 0.0))))))))))))))))))
(assert
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x69807 (* ?x66270 l_0_13_312)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x69805 (* ?x66267 l_0_13_311)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x69803 (* ?x66264 l_0_13_310)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x50830 (* ?x69020 l_0_13_256)))
 (let ((?x17317 (- (* (* (- 2.0) l_0_13_112) l_0_13_130) (* (* 2.0 l_0_13_113) l_0_13_131))))
 (let ((?x72031 (- (- (- (- ?x17317 (* (* 2.0 l_0_13_114) l_0_13_132)) ?x50830) ?x69803) ?x69805)))
 (let ((?x72036 (+ (+ (- ?x72031 ?x69807) (* (* 2.0 l_0_13_76) l_0_13_94)) (* (* 2.0 l_0_13_77) l_0_13_95))))
 (= (+ ?x72036 (* (* 2.0 l_0_13_78) l_0_13_96)) 0.0)))))))))))))
(assert
 (let ((?x49307 (* l_0_13_87 l_0_13_87)))
 (let ((?x49303 (* l_0_13_86 l_0_13_86)))
 (let ((?x49299 (* l_0_13_85 l_0_13_85)))
 (let ((?x16268 (* l_0_13_84 l_0_13_84)))
 (let ((?x16266 (* l_0_13_83 l_0_13_83)))
 (let ((?x69896 (* l_0_13_303 l_0_13_303)))
 (let ((?x69894 (* l_0_13_302 l_0_13_302)))
 (let ((?x69892 (* l_0_13_301 l_0_13_301)))
 (let ((?x69890 (* l_0_13_300 l_0_13_300)))
 (let ((?x69888 (* l_0_13_299 l_0_13_299)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x72054 (* ?x69020 l_0_13_263)))
 (let ((?x71122 (* l_0_13_123 l_0_13_123)))
 (let ((?x71119 (* l_0_13_122 l_0_13_122)))
 (let ((?x71116 (* l_0_13_121 l_0_13_121)))
 (let ((?x50965 (- (- (* (- l_0_13_119) l_0_13_119) (* l_0_13_120 l_0_13_120)) ?x71116)))
 (let ((?x72059 (- (- (- (- (+ (- (- ?x50965 ?x71119) ?x71122) ?x72054) ?x69888) ?x69890) ?x69892) ?x69894)))
 (= (+ (+ (+ (+ (+ (- ?x72059 ?x69896) ?x16266) ?x16268) ?x49299) ?x49303) ?x49307) 0.0)))))))))))))))))))
(assert
 (let ((?x69942 (* 2.0 l_0_13_303)))
 (let ((?x69943 (* ?x69942 l_0_13_308)))
 (let ((?x69939 (* 2.0 l_0_13_302)))
 (let ((?x69940 (* ?x69939 l_0_13_307)))
 (let ((?x69936 (* 2.0 l_0_13_301)))
 (let ((?x69937 (* ?x69936 l_0_13_306)))
 (let ((?x69933 (* 2.0 l_0_13_300)))
 (let ((?x69934 (* ?x69933 l_0_13_305)))
 (let ((?x69930 (* 2.0 l_0_13_299)))
 (let ((?x69931 (* ?x69930 l_0_13_304)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69023 (* ?x68834 l_0_13_299)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x72083 (* ?x69020 l_0_13_268)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66370 (* ?x66258 l_0_13_191)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66368 (* ?x66255 l_0_13_155)))
 (let ((?x51050 (- (* (* (- 2.0) l_0_13_119) l_0_13_124) (* (* 2.0 l_0_13_120) l_0_13_125))))
 (let ((?x72077 (- (- ?x51050 (* (* 2.0 l_0_13_121) l_0_13_126)) (* (* 2.0 l_0_13_122) l_0_13_127))))
 (let ((?x72084 (+ (- (+ (- ?x72077 (* (* 2.0 l_0_13_123) l_0_13_128)) ?x66368) ?x66370) ?x72083)))
 (let ((?x72093 (+ (- (- (- (- (- (+ ?x72084 ?x69023) ?x69931) ?x69934) ?x69937) ?x69940) ?x69943) (* (* 2.0 l_0_13_83) l_0_13_88))))
 (let ((?x72099 (+ (+ ?x72093 (* (* 2.0 l_0_13_84) l_0_13_89)) (* (* 2.0 l_0_13_85) l_0_13_90))))
 (let ((?x72105 (+ (+ ?x72099 (* (* 2.0 l_0_13_86) l_0_13_91)) (* (* 2.0 l_0_13_87) l_0_13_92))))
 (= ?x72105 0.0))))))))))))))))))))))))))
(assert
 (let ((?x69942 (* 2.0 l_0_13_303)))
 (let ((?x69989 (* ?x69942 l_0_13_314)))
 (let ((?x69939 (* 2.0 l_0_13_302)))
 (let ((?x69987 (* ?x69939 l_0_13_313)))
 (let ((?x69936 (* 2.0 l_0_13_301)))
 (let ((?x69985 (* ?x69936 l_0_13_312)))
 (let ((?x69933 (* 2.0 l_0_13_300)))
 (let ((?x69983 (* ?x69933 l_0_13_311)))
 (let ((?x69930 (* 2.0 l_0_13_299)))
 (let ((?x69981 (* ?x69930 l_0_13_310)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x72142 (* ?x69020 l_0_13_274)))
 (let ((?x72054 (* ?x69020 l_0_13_263)))
 (let ((?x17576 (- (* (* (- 2.0) l_0_13_119) l_0_13_130) (* (* 2.0 l_0_13_120) l_0_13_131))))
 (let ((?x72138 (- (- ?x17576 (* (* 2.0 l_0_13_121) l_0_13_132)) (* (* 2.0 l_0_13_122) l_0_13_133))))
 (let ((?x72144 (- (+ (- (- ?x72138 (* (* 2.0 l_0_13_123) l_0_13_134)) ?x72054) ?x72142) ?x69981)))
 (let ((?x72150 (+ (- (- (- (- ?x72144 ?x69983) ?x69985) ?x69987) ?x69989) (* (* 2.0 l_0_13_83) l_0_13_94))))
 (let ((?x72154 (+ (+ ?x72150 (* (* 2.0 l_0_13_84) l_0_13_95)) (* (* 2.0 l_0_13_85) l_0_13_96))))
 (let ((?x72158 (+ (+ ?x72154 (* (* 2.0 l_0_13_86) l_0_13_97)) (* (* 2.0 l_0_13_87) l_0_13_98))))
 (= ?x72158 0.0)))))))))))))))))))))
(assert
 (let ((?x69942 (* 2.0 l_0_13_303)))
 (let ((?x70062 (* ?x69942 l_0_13_321)))
 (let ((?x69939 (* 2.0 l_0_13_302)))
 (let ((?x70060 (* ?x69939 l_0_13_320)))
 (let ((?x69936 (* 2.0 l_0_13_301)))
 (let ((?x70058 (* ?x69936 l_0_13_319)))
 (let ((?x69933 (* 2.0 l_0_13_300)))
 (let ((?x70056 (* ?x69933 l_0_13_318)))
 (let ((?x69930 (* 2.0 l_0_13_299)))
 (let ((?x70054 (* ?x69930 l_0_13_317)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x70495 (* ?x69020 l_0_13_281)))
 (let ((?x51331 (+ (* (* 2.0 l_0_13_101) l_0_13_83) (* (* 2.0 l_0_13_102) l_0_13_84))))
 (let ((?x72163 (+ (+ ?x51331 (* (* 2.0 l_0_13_103) l_0_13_85)) (* (* 2.0 l_0_13_104) l_0_13_86))))
 (let ((?x72168 (- (+ ?x72163 (* (* 2.0 l_0_13_105) l_0_13_87)) (* (* 2.0 l_0_13_119) l_0_13_137))))
 (let ((?x72172 (- (- ?x72168 (* (* 2.0 l_0_13_120) l_0_13_138)) (* (* 2.0 l_0_13_121) l_0_13_139))))
 (let ((?x72176 (- (- ?x72172 (* (* 2.0 l_0_13_122) l_0_13_140)) (* (* 2.0 l_0_13_123) l_0_13_141))))
 (let ((?x72181 (- (- (+ (- ?x72176 (* (* 2.0 l_0_13_217) l_0_13_227)) ?x70495) ?x70054) ?x70056)))
 (= (- (- (- ?x72181 ?x70058) ?x70060) ?x70062) 0.0))))))))))))))))))))
(assert
 (let ((?x49701 (* l_0_13_93 l_0_13_93)))
 (let ((?x16511 (* l_0_13_92 l_0_13_92)))
 (let ((?x49693 (* l_0_13_91 l_0_13_91)))
 (let ((?x49691 (* l_0_13_90 l_0_13_90)))
 (let ((?x49625 (* l_0_13_89 l_0_13_89)))
 (let ((?x49687 (* l_0_13_88 l_0_13_88)))
 (let ((?x70122 (* l_0_13_309 l_0_13_309)))
 (let ((?x70120 (* l_0_13_308 l_0_13_308)))
 (let ((?x70118 (* l_0_13_307 l_0_13_307)))
 (let ((?x70116 (* l_0_13_306 l_0_13_306)))
 (let ((?x70114 (* l_0_13_305 l_0_13_305)))
 (let ((?x70112 (* l_0_13_304 l_0_13_304)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69089 (* ?x68834 l_0_13_304)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66393 (* ?x66258 l_0_13_196)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66386 (* ?x66255 l_0_13_160)))
 (let ((?x71280 (* l_0_13_129 l_0_13_129)))
 (let ((?x71277 (* l_0_13_128 l_0_13_128)))
 (let ((?x71274 (* l_0_13_127 l_0_13_127)))
 (let ((?x71271 (* l_0_13_126 l_0_13_126)))
 (let ((?x72203 (- (- (* (- l_0_13_124) l_0_13_124) (* l_0_13_125 l_0_13_125)) ?x71271)))
 (let ((?x72210 (- (+ (- (+ (- (- (- ?x72203 ?x71274) ?x71277) ?x71280) ?x66386) ?x66393) ?x69089) ?x70112)))
 (let ((?x72217 (+ (+ (- (- (- (- (- ?x72210 ?x70114) ?x70116) ?x70118) ?x70120) ?x70122) ?x49687) ?x49625)))
 (= (+ (+ (+ (+ ?x72217 ?x49691) ?x49693) ?x16511) ?x49701) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x70172 (* 2.0 l_0_13_309)))
 (let ((?x70173 (* ?x70172 l_0_13_315)))
 (let ((?x70169 (* 2.0 l_0_13_308)))
 (let ((?x70170 (* ?x70169 l_0_13_314)))
 (let ((?x70166 (* 2.0 l_0_13_307)))
 (let ((?x70167 (* ?x70166 l_0_13_313)))
 (let ((?x70163 (* 2.0 l_0_13_306)))
 (let ((?x70164 (* ?x70163 l_0_13_312)))
 (let ((?x70160 (* 2.0 l_0_13_305)))
 (let ((?x70161 (* ?x70160 l_0_13_311)))
 (let ((?x70157 (* 2.0 l_0_13_304)))
 (let ((?x70158 (* ?x70157 l_0_13_310)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69129 (* ?x68834 l_0_13_310)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x72083 (* ?x69020 l_0_13_268)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66420 (* ?x66258 l_0_13_202)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66418 (* ?x66255 l_0_13_166)))
 (let ((?x51517 (- (* (* (- 2.0) l_0_13_124) l_0_13_130) (* (* 2.0 l_0_13_125) l_0_13_131))))
 (let ((?x51518 (- (- ?x51517 (* (* 2.0 l_0_13_126) l_0_13_132)) (* (* 2.0 l_0_13_127) l_0_13_133))))
 (let ((?x51492 (- (- ?x51518 (* (* 2.0 l_0_13_128) l_0_13_134)) (* (* 2.0 l_0_13_129) l_0_13_135))))
 (let ((?x72239 (- (- (- (+ (- (- (+ ?x51492 ?x66418) ?x66420) ?x72083) ?x69129) ?x70158) ?x70161) ?x70164)))
 (let ((?x72245 (+ (- (- (- ?x72239 ?x70167) ?x70170) ?x70173) (* (* 2.0 l_0_13_88) l_0_13_94))))
 (let ((?x72251 (+ (+ ?x72245 (* (* 2.0 l_0_13_89) l_0_13_95)) (* (* 2.0 l_0_13_90) l_0_13_96))))
 (let ((?x72257 (+ (+ ?x72251 (* (* 2.0 l_0_13_91) l_0_13_97)) (* (* 2.0 l_0_13_92) l_0_13_98))))
 (= (+ ?x72257 (* (* 2.0 l_0_13_93) l_0_13_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x70172 (* 2.0 l_0_13_309)))
 (let ((?x70243 (* ?x70172 l_0_13_322)))
 (let ((?x70169 (* 2.0 l_0_13_308)))
 (let ((?x70241 (* ?x70169 l_0_13_321)))
 (let ((?x70166 (* 2.0 l_0_13_307)))
 (let ((?x70239 (* ?x70166 l_0_13_320)))
 (let ((?x70163 (* 2.0 l_0_13_306)))
 (let ((?x70237 (* ?x70163 l_0_13_319)))
 (let ((?x70160 (* 2.0 l_0_13_305)))
 (let ((?x70235 (* ?x70160 l_0_13_318)))
 (let ((?x70157 (* 2.0 l_0_13_304)))
 (let ((?x70233 (* ?x70157 l_0_13_317)))
 (let ((?x68834 (* 2.0 l_0_13_289)))
 (let ((?x69190 (* ?x68834 l_0_13_317)))
 (let ((?x66258 (* 2.0 l_0_13_181)))
 (let ((?x66452 (* ?x66258 l_0_13_209)))
 (let ((?x66255 (* 2.0 l_0_13_145)))
 (let ((?x66450 (* ?x66255 l_0_13_173)))
 (let ((?x18204 (+ (* (* 2.0 l_0_13_101) l_0_13_88) (* (* 2.0 l_0_13_102) l_0_13_89))))
 (let ((?x72287 (+ (+ ?x18204 (* (* 2.0 l_0_13_103) l_0_13_90)) (* (* 2.0 l_0_13_104) l_0_13_91))))
 (let ((?x72291 (+ (+ ?x72287 (* (* 2.0 l_0_13_105) l_0_13_92)) (* (* 2.0 l_0_13_106) l_0_13_93))))
 (let ((?x72296 (- (- ?x72291 (* (* 2.0 l_0_13_124) l_0_13_137)) (* (* 2.0 l_0_13_125) l_0_13_138))))
 (let ((?x72300 (- (- ?x72296 (* (* 2.0 l_0_13_126) l_0_13_139)) (* (* 2.0 l_0_13_127) l_0_13_140))))
 (let ((?x72304 (- (- ?x72300 (* (* 2.0 l_0_13_128) l_0_13_141)) (* (* 2.0 l_0_13_129) l_0_13_142))))
 (let ((?x72309 (+ (- (- (+ ?x72304 ?x66450) ?x66452) (* (* 2.0 l_0_13_217) l_0_13_232)) ?x69190)))
 (= (- (- (- (- (- (- ?x72309 ?x70233) ?x70235) ?x70237) ?x70239) ?x70241) ?x70243) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x50024 (* l_0_13_99 l_0_13_99)))
 (let ((?x16633 (* l_0_13_98 l_0_13_98)))
 (let ((?x50009 (* l_0_13_97 l_0_13_97)))
 (let ((?x49937 (* l_0_13_96 l_0_13_96)))
 (let ((?x16626 (* l_0_13_95 l_0_13_95)))
 (let ((?x49931 (* l_0_13_94 l_0_13_94)))
 (let ((?x70300 (* l_0_13_316 l_0_13_316)))
 (let ((?x70298 (* l_0_13_315 l_0_13_315)))
 (let ((?x70296 (* l_0_13_314 l_0_13_314)))
 (let ((?x70294 (* l_0_13_313 l_0_13_313)))
 (let ((?x70292 (* l_0_13_312 l_0_13_312)))
 (let ((?x70290 (* l_0_13_311 l_0_13_311)))
 (let ((?x70288 (* l_0_13_310 l_0_13_310)))
 (let ((?x69020 (* 2.0 l_0_13_253)))
 (let ((?x72142 (* ?x69020 l_0_13_274)))
 (let ((?x71452 (* l_0_13_136 l_0_13_136)))
 (let ((?x71449 (* l_0_13_135 l_0_13_135)))
 (let ((?x71446 (* l_0_13_134 l_0_13_134)))
 (let ((?x71443 (* l_0_13_133 l_0_13_133)))
 (let ((?x71440 (* l_0_13_132 l_0_13_132)))
 (let ((?x71437 (* l_0_13_131 l_0_13_131)))
 (let ((?x18489 (- (- (* l_0_13_100 l_0_13_100) (* l_0_13_130 l_0_13_130)) ?x71437)))
 (let ((?x72335 (- (- (- (- (- (- (- ?x18489 ?x71440) ?x71443) ?x71446) ?x71449) ?x71452) ?x72142) ?x70288)))
 (let ((?x72342 (+ (- (- (- (- (- (- ?x72335 ?x70290) ?x70292) ?x70294) ?x70296) ?x70298) ?x70300) ?x49931)))
 (= (+ (+ (+ (+ (+ ?x72342 ?x16626) ?x49937) ?x50009) ?x16633) ?x50024) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x70440 (* l_0_13_324 l_0_13_324)))
 (let ((?x70438 (* l_0_13_323 l_0_13_323)))
 (let ((?x70436 (* l_0_13_322 l_0_13_322)))
 (let ((?x70434 (* l_0_13_321 l_0_13_321)))
 (let ((?x15136 (* l_0_13_320 l_0_13_320)))
 (let ((?x15139 (* l_0_13_319 l_0_13_319)))
 (let ((?x15108 (* l_0_13_318 l_0_13_318)))
 (let ((?x48394 (* l_0_13_317 l_0_13_317)))
 (let ((?x71604 (* l_0_13_144 l_0_13_144)))
 (let ((?x71601 (* l_0_13_143 l_0_13_143)))
 (let ((?x71598 (* l_0_13_142 l_0_13_142)))
 (let ((?x71595 (* l_0_13_141 l_0_13_141)))
 (let ((?x71592 (* l_0_13_140 l_0_13_140)))
 (let ((?x71589 (* l_0_13_139 l_0_13_139)))
 (let ((?x71586 (* l_0_13_138 l_0_13_138)))
 (let ((?x71583 (* l_0_13_137 l_0_13_137)))
 (let ((?x16684 (* l_0_13_108 l_0_13_108)))
 (let ((?x16678 (* l_0_13_107 l_0_13_107)))
 (let ((?x50110 (* l_0_13_106 l_0_13_106)))
 (let ((?x49755 (* l_0_13_105 l_0_13_105)))
 (let ((?x50103 (* l_0_13_104 l_0_13_104)))
 (let ((?x50095 (* l_0_13_103 l_0_13_103)))
 (let ((?x18728 (+ (+ (* l_0_13_101 l_0_13_101) (* l_0_13_102 l_0_13_102)) ?x50095)))
 (let ((?x51863 (- (- (+ (+ (+ (+ (+ ?x18728 ?x50103) ?x49755) ?x50110) ?x16678) ?x16684) ?x71583) ?x71586)))
 (let ((?x72362 (- (- (- (- (- (- (- ?x51863 ?x71589) ?x71592) ?x71595) ?x71598) ?x71601) ?x71604) (* (* 2.0 l_0_13_217) l_0_13_245))))
 (let ((?x72369 (- (- (- (- (- (- (- ?x72362 ?x48394) ?x15108) ?x15139) ?x15136) ?x70434) ?x70436) ?x70438)))
 (= (- ?x72369 ?x70440) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x42125 (* ?x68869 l_0_13_293)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x42255 (* ?x68866 l_0_13_292)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66481 (* ?x66480 l_0_13_185)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66478 (* ?x66477 l_0_13_184)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66475 (* ?x66469 l_0_13_149)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x66809 (* ?x66632 l_0_13_148)))
 (let ((?x72392 (- (+ (+ (- (- (+ ?x66809 ?x66475) ?x66478) ?x66481) ?x42255) ?x42125) (* (* 2.0 l_0_13_328) l_0_13_340))))
 (let ((?x72396 (- (- ?x72392 (* (* 2.0 l_0_13_329) l_0_13_341)) (* (* 2.0 l_0_13_330) l_0_13_342))))
 (let ((?x72400 (- (- ?x72396 (* (* 2.0 l_0_13_364) l_0_13_376)) (* (* 2.0 l_0_13_365) l_0_13_377))))
 (let ((?x72404 (- (- ?x72400 (* (* 2.0 l_0_13_366) l_0_13_378)) (* (* 2.0 l_0_13_400) l_0_13_412))))
 (let ((?x72408 (- (- ?x72404 (* (* 2.0 l_0_13_401) l_0_13_413)) (* (* 2.0 l_0_13_402) l_0_13_414))))
 (let ((?x72412 (- (- ?x72408 (* (* 2.0 l_0_13_436) l_0_13_448)) (* (* 2.0 l_0_13_437) l_0_13_449))))
 (let ((?x72416 (- (- ?x72412 (* (* 2.0 l_0_13_438) l_0_13_450)) (* (* 2.0 l_0_13_472) l_0_13_484))))
 (let ((?x72420 (- (- ?x72416 (* (* 2.0 l_0_13_473) l_0_13_485)) (* (* 2.0 l_0_13_474) l_0_13_486))))
 (= ?x72420 0.0))))))))))))))))))))))
(assert
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x43138 (* ?x68869 l_0_13_300)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x43132 (* ?x68866 l_0_13_299)))
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x72483 (* ?x65988 l_0_13_269)))
 (let ((?x65985 (* 2.0 l_0_13_254)))
 (let ((?x72481 (* ?x65985 l_0_13_268)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66639 (* ?x66480 l_0_13_192)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66637 (* ?x66477 l_0_13_191)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66635 (* ?x66469 l_0_13_156)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x66633 (* ?x66632 l_0_13_155)))
 (let ((?x72486 (+ (+ (+ (+ (- (- (+ ?x66633 ?x66635) ?x66637) ?x66639) ?x72481) ?x72483) ?x43132) ?x43138)))
 (let ((?x72492 (- (- ?x72486 (* (* 2.0 l_0_13_335) l_0_13_340)) (* (* 2.0 l_0_13_336) l_0_13_341))))
 (let ((?x72498 (- (- ?x72492 (* (* 2.0 l_0_13_337) l_0_13_342)) (* (* 2.0 l_0_13_338) l_0_13_343))))
 (let ((?x72504 (- (- ?x72498 (* (* 2.0 l_0_13_339) l_0_13_344)) (* (* 2.0 l_0_13_371) l_0_13_376))))
 (let ((?x72510 (- (- ?x72504 (* (* 2.0 l_0_13_372) l_0_13_377)) (* (* 2.0 l_0_13_373) l_0_13_378))))
 (let ((?x72516 (- (- ?x72510 (* (* 2.0 l_0_13_374) l_0_13_379)) (* (* 2.0 l_0_13_375) l_0_13_380))))
 (let ((?x72522 (- (- ?x72516 (* (* 2.0 l_0_13_407) l_0_13_412)) (* (* 2.0 l_0_13_408) l_0_13_413))))
 (let ((?x72528 (- (- ?x72522 (* (* 2.0 l_0_13_409) l_0_13_414)) (* (* 2.0 l_0_13_410) l_0_13_415))))
 (let ((?x72534 (- (- ?x72528 (* (* 2.0 l_0_13_411) l_0_13_416)) (* (* 2.0 l_0_13_443) l_0_13_448))))
 (let ((?x72540 (- (- ?x72534 (* (* 2.0 l_0_13_444) l_0_13_449)) (* (* 2.0 l_0_13_445) l_0_13_450))))
 (let ((?x72546 (- (- ?x72540 (* (* 2.0 l_0_13_446) l_0_13_451)) (* (* 2.0 l_0_13_447) l_0_13_452))))
 (let ((?x72552 (- (- ?x72546 (* (* 2.0 l_0_13_479) l_0_13_484)) (* (* 2.0 l_0_13_480) l_0_13_485))))
 (let ((?x72558 (- (- ?x72552 (* (* 2.0 l_0_13_481) l_0_13_486)) (* (* 2.0 l_0_13_482) l_0_13_487))))
 (= (- ?x72558 (* (* 2.0 l_0_13_483) l_0_13_488)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x72701 (* l_0_13_489 l_0_13_489)))
 (let ((?x72699 (* l_0_13_488 l_0_13_488)))
 (let ((?x72697 (* l_0_13_487 l_0_13_487)))
 (let ((?x72695 (* l_0_13_486 l_0_13_486)))
 (let ((?x72693 (* l_0_13_485 l_0_13_485)))
 (let ((?x72691 (* l_0_13_484 l_0_13_484)))
 (let ((?x72689 (* l_0_13_453 l_0_13_453)))
 (let ((?x72687 (* l_0_13_452 l_0_13_452)))
 (let ((?x72685 (* l_0_13_451 l_0_13_451)))
 (let ((?x72683 (* l_0_13_450 l_0_13_450)))
 (let ((?x72681 (* l_0_13_449 l_0_13_449)))
 (let ((?x72679 (* l_0_13_448 l_0_13_448)))
 (let ((?x72677 (* l_0_13_417 l_0_13_417)))
 (let ((?x72675 (* l_0_13_416 l_0_13_416)))
 (let ((?x72673 (* l_0_13_415 l_0_13_415)))
 (let ((?x72671 (* l_0_13_414 l_0_13_414)))
 (let ((?x72669 (* l_0_13_413 l_0_13_413)))
 (let ((?x72667 (* l_0_13_412 l_0_13_412)))
 (let ((?x72665 (* l_0_13_381 l_0_13_381)))
 (let ((?x72663 (* l_0_13_380 l_0_13_380)))
 (let ((?x72661 (* l_0_13_379 l_0_13_379)))
 (let ((?x72659 (* l_0_13_378 l_0_13_378)))
 (let ((?x72657 (* l_0_13_377 l_0_13_377)))
 (let ((?x72655 (* l_0_13_376 l_0_13_376)))
 (let ((?x72653 (* l_0_13_345 l_0_13_345)))
 (let ((?x72651 (* l_0_13_344 l_0_13_344)))
 (let ((?x72649 (* l_0_13_343 l_0_13_343)))
 (let ((?x72647 (* l_0_13_342 l_0_13_342)))
 (let ((?x72645 (* l_0_13_341 l_0_13_341)))
 (let ((?x72643 (* l_0_13_340 l_0_13_340)))
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x69457 (* ?x68869 l_0_13_305)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x69454 (* ?x68866 l_0_13_304)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66724 (* ?x66480 l_0_13_197)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66722 (* ?x66477 l_0_13_196)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66705 (* ?x66469 l_0_13_161)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x70720 (* ?x66632 l_0_13_160)))
 (let ((?x72646 (- (- (+ (+ (- (- (+ ?x70720 ?x66705) ?x66722) ?x66724) ?x69454) ?x69457) ?x72643) ?x72645)))
 (let ((?x72660 (- (- (- (- (- (- (- ?x72646 ?x72647) ?x72649) ?x72651) ?x72653) ?x72655) ?x72657) ?x72659)))
 (let ((?x72674 (- (- (- (- (- (- (- ?x72660 ?x72661) ?x72663) ?x72665) ?x72667) ?x72669) ?x72671) ?x72673)))
 (let ((?x72688 (- (- (- (- (- (- (- ?x72674 ?x72675) ?x72677) ?x72679) ?x72681) ?x72683) ?x72685) ?x72687)))
 (let ((?x72702 (- (- (- (- (- (- (- ?x72688 ?x72689) ?x72691) ?x72693) ?x72695) ?x72697) ?x72699) ?x72701)))
 (= ?x72702 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x69522 (* ?x68869 l_0_13_311)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x12641 (* ?x68866 l_0_13_310)))
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x72483 (* ?x65988 l_0_13_269)))
 (let ((?x65985 (* 2.0 l_0_13_254)))
 (let ((?x72481 (* ?x65985 l_0_13_268)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66818 (* ?x66480 l_0_13_203)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66816 (* ?x66477 l_0_13_202)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66814 (* ?x66469 l_0_13_167)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x66811 (* ?x66632 l_0_13_166)))
 (let ((?x72760 (+ (+ (- (- (- (- (+ ?x66811 ?x66814) ?x66816) ?x66818) ?x72481) ?x72483) ?x12641) ?x69522)))
 (let ((?x72766 (- (- ?x72760 (* (* 2.0 l_0_13_340) l_0_13_346)) (* (* 2.0 l_0_13_341) l_0_13_347))))
 (let ((?x72772 (- (- ?x72766 (* (* 2.0 l_0_13_342) l_0_13_348)) (* (* 2.0 l_0_13_343) l_0_13_349))))
 (let ((?x72778 (- (- ?x72772 (* (* 2.0 l_0_13_344) l_0_13_350)) (* (* 2.0 l_0_13_345) l_0_13_351))))
 (let ((?x72784 (- (- ?x72778 (* (* 2.0 l_0_13_376) l_0_13_382)) (* (* 2.0 l_0_13_377) l_0_13_383))))
 (let ((?x72790 (- (- ?x72784 (* (* 2.0 l_0_13_378) l_0_13_384)) (* (* 2.0 l_0_13_379) l_0_13_385))))
 (let ((?x72796 (- (- ?x72790 (* (* 2.0 l_0_13_380) l_0_13_386)) (* (* 2.0 l_0_13_381) l_0_13_387))))
 (let ((?x72802 (- (- ?x72796 (* (* 2.0 l_0_13_412) l_0_13_418)) (* (* 2.0 l_0_13_413) l_0_13_419))))
 (let ((?x72808 (- (- ?x72802 (* (* 2.0 l_0_13_414) l_0_13_420)) (* (* 2.0 l_0_13_415) l_0_13_421))))
 (let ((?x72814 (- (- ?x72808 (* (* 2.0 l_0_13_416) l_0_13_422)) (* (* 2.0 l_0_13_417) l_0_13_423))))
 (let ((?x72820 (- (- ?x72814 (* (* 2.0 l_0_13_448) l_0_13_454)) (* (* 2.0 l_0_13_449) l_0_13_455))))
 (let ((?x72826 (- (- ?x72820 (* (* 2.0 l_0_13_450) l_0_13_456)) (* (* 2.0 l_0_13_451) l_0_13_457))))
 (let ((?x72832 (- (- ?x72826 (* (* 2.0 l_0_13_452) l_0_13_458)) (* (* 2.0 l_0_13_453) l_0_13_459))))
 (let ((?x72838 (- (- ?x72832 (* (* 2.0 l_0_13_484) l_0_13_490)) (* (* 2.0 l_0_13_485) l_0_13_491))))
 (let ((?x72844 (- (- ?x72838 (* (* 2.0 l_0_13_486) l_0_13_492)) (* (* 2.0 l_0_13_487) l_0_13_493))))
 (let ((?x72850 (- (- ?x72844 (* (* 2.0 l_0_13_488) l_0_13_494)) (* (* 2.0 l_0_13_489) l_0_13_495))))
 (= ?x72850 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x68869 (* 2.0 l_0_13_291)))
 (let ((?x12763 (* ?x68869 l_0_13_318)))
 (let ((?x68866 (* 2.0 l_0_13_290)))
 (let ((?x12733 (* ?x68866 l_0_13_317)))
 (let ((?x66480 (* 2.0 l_0_13_183)))
 (let ((?x66905 (* ?x66480 l_0_13_210)))
 (let ((?x66477 (* 2.0 l_0_13_182)))
 (let ((?x66903 (* ?x66477 l_0_13_209)))
 (let ((?x66469 (* 2.0 l_0_13_147)))
 (let ((?x66901 (* ?x66469 l_0_13_174)))
 (let ((?x66632 (* 2.0 l_0_13_146)))
 (let ((?x16003 (* ?x66632 l_0_13_173)))
 (let ((?x72916 (- (- (- (+ ?x16003 ?x66901) ?x66903) ?x66905) (* (* 2.0 l_0_13_218) l_0_13_232))))
 (let ((?x72922 (- (+ (+ (- ?x72916 (* (* 2.0 l_0_13_219) l_0_13_233)) ?x12733) ?x12763) (* (* 2.0 l_0_13_340) l_0_13_353))))
 (let ((?x72926 (- (- ?x72922 (* (* 2.0 l_0_13_341) l_0_13_354)) (* (* 2.0 l_0_13_342) l_0_13_355))))
 (let ((?x72930 (- (- ?x72926 (* (* 2.0 l_0_13_343) l_0_13_356)) (* (* 2.0 l_0_13_344) l_0_13_357))))
 (let ((?x72934 (- (- ?x72930 (* (* 2.0 l_0_13_345) l_0_13_358)) (* (* 2.0 l_0_13_376) l_0_13_389))))
 (let ((?x72938 (- (- ?x72934 (* (* 2.0 l_0_13_377) l_0_13_390)) (* (* 2.0 l_0_13_378) l_0_13_391))))
 (let ((?x72942 (- (- ?x72938 (* (* 2.0 l_0_13_379) l_0_13_392)) (* (* 2.0 l_0_13_380) l_0_13_393))))
 (let ((?x72946 (- (- ?x72942 (* (* 2.0 l_0_13_381) l_0_13_394)) (* (* 2.0 l_0_13_412) l_0_13_425))))
 (let ((?x72950 (- (- ?x72946 (* (* 2.0 l_0_13_413) l_0_13_426)) (* (* 2.0 l_0_13_414) l_0_13_427))))
 (let ((?x72954 (- (- ?x72950 (* (* 2.0 l_0_13_415) l_0_13_428)) (* (* 2.0 l_0_13_416) l_0_13_429))))
 (let ((?x72958 (- (- ?x72954 (* (* 2.0 l_0_13_417) l_0_13_430)) (* (* 2.0 l_0_13_448) l_0_13_461))))
 (let ((?x72962 (- (- ?x72958 (* (* 2.0 l_0_13_449) l_0_13_462)) (* (* 2.0 l_0_13_450) l_0_13_463))))
 (let ((?x72966 (- (- ?x72962 (* (* 2.0 l_0_13_451) l_0_13_464)) (* (* 2.0 l_0_13_452) l_0_13_465))))
 (let ((?x72970 (- (- ?x72966 (* (* 2.0 l_0_13_453) l_0_13_466)) (* (* 2.0 l_0_13_484) l_0_13_497))))
 (let ((?x72974 (- (- ?x72970 (* (* 2.0 l_0_13_485) l_0_13_498)) (* (* 2.0 l_0_13_486) l_0_13_499))))
 (let ((?x72978 (- (- ?x72974 (* (* 2.0 l_0_13_487) l_0_13_500)) (* (* 2.0 l_0_13_488) l_0_13_501))))
 (= (- ?x72978 (* (* 2.0 l_0_13_489) l_0_13_502)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x69726 (* l_0_13_294 l_0_13_294)))
 (let ((?x69724 (* l_0_13_293 l_0_13_293)))
 (let ((?x69736 (* l_0_13_292 l_0_13_292)))
 (let ((?x66964 (* l_0_13_186 l_0_13_186)))
 (let ((?x66962 (* l_0_13_185 l_0_13_185)))
 (let ((?x66960 (* l_0_13_184 l_0_13_184)))
 (let ((?x66958 (* l_0_13_150 l_0_13_150)))
 (let ((?x21150 (+ (+ (* l_0_13_148 l_0_13_148) (* l_0_13_149 l_0_13_149)) ?x66958)))
 (= (+ (+ (+ (- (- (- ?x21150 ?x66960) ?x66962) ?x66964) ?x69736) ?x69724) ?x69726) 0.0))))))))))
(assert
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x69751 (* ?x66270 l_0_13_301)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x69749 (* ?x66267 l_0_13_300)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x69747 (* ?x66264 l_0_13_299)))
 (let ((?x66653 (* 2.0 l_0_13_258)))
 (let ((?x73053 (* ?x66653 l_0_13_270)))
 (let ((?x66650 (* 2.0 l_0_13_257)))
 (let ((?x73051 (* ?x66650 l_0_13_269)))
 (let ((?x66647 (* 2.0 l_0_13_256)))
 (let ((?x73049 (* ?x66647 l_0_13_268)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x67086 (* ?x66732 l_0_13_193)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x67084 (* ?x66729 l_0_13_192)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x67082 (* ?x66726 l_0_13_191)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67080 (* ?x66713 l_0_13_157)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x67078 (* ?x66710 l_0_13_156)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x67076 (* ?x66707 l_0_13_155)))
 (let ((?x73052 (+ (+ (- (- (- (+ (+ ?x67076 ?x67078) ?x67080) ?x67082) ?x67084) ?x67086) ?x73049) ?x73051)))
 (= (+ (+ (+ (+ ?x73052 ?x73053) ?x69747) ?x69749) ?x69751) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x69789 (* ?x66270 l_0_13_306)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x69786 (* ?x66267 l_0_13_305)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x69783 (* ?x66264 l_0_13_304)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x67146 (* ?x66732 l_0_13_198)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x67144 (* ?x66729 l_0_13_197)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x67142 (* ?x66726 l_0_13_196)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67122 (* ?x66713 l_0_13_162)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x9135 (* ?x66710 l_0_13_161)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x68225 (* ?x66707 l_0_13_160)))
 (let ((?x73078 (+ (+ (- (- (- (+ (+ ?x68225 ?x9135) ?x67122) ?x67142) ?x67144) ?x67146) ?x69783) ?x69786)))
 (= (+ ?x73078 ?x69789) 0.0)))))))))))))))))))))
(assert
 (let ((?x66270 (* 2.0 l_0_13_294)))
 (let ((?x69807 (* ?x66270 l_0_13_312)))
 (let ((?x66267 (* 2.0 l_0_13_293)))
 (let ((?x69805 (* ?x66267 l_0_13_311)))
 (let ((?x66264 (* 2.0 l_0_13_292)))
 (let ((?x69803 (* ?x66264 l_0_13_310)))
 (let ((?x66653 (* 2.0 l_0_13_258)))
 (let ((?x73053 (* ?x66653 l_0_13_270)))
 (let ((?x66650 (* 2.0 l_0_13_257)))
 (let ((?x73051 (* ?x66650 l_0_13_269)))
 (let ((?x66647 (* 2.0 l_0_13_256)))
 (let ((?x73049 (* ?x66647 l_0_13_268)))
 (let ((?x66732 (* 2.0 l_0_13_186)))
 (let ((?x67213 (* ?x66732 l_0_13_204)))
 (let ((?x66729 (* 2.0 l_0_13_185)))
 (let ((?x67211 (* ?x66729 l_0_13_203)))
 (let ((?x66726 (* 2.0 l_0_13_184)))
 (let ((?x67209 (* ?x66726 l_0_13_202)))
 (let ((?x66713 (* 2.0 l_0_13_150)))
 (let ((?x67206 (* ?x66713 l_0_13_168)))
 (let ((?x66710 (* 2.0 l_0_13_149)))
 (let ((?x67203 (* ?x66710 l_0_13_167)))
 (let ((?x66707 (* 2.0 l_0_13_148)))
 (let ((?x67200 (* ?x66707 l_0_13_166)))
 (let ((?x73094 (- (- (- (- (- (+ (+ ?x67200 ?x67203) ?x67206) ?x67209) ?x67211) ?x67213) ?x73049) ?x73051)))
 (= (+ (+ (+ (- ?x73094 ?x73053) ?x69803) ?x69805) ?x69807) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x69896 (* l_0_13_303 l_0_13_303)))
 (let ((?x69894 (* l_0_13_302 l_0_13_302)))
 (let ((?x69892 (* l_0_13_301 l_0_13_301)))
 (let ((?x69890 (* l_0_13_300 l_0_13_300)))
 (let ((?x69888 (* l_0_13_299 l_0_13_299)))
 (let ((?x70636 (* 2.0 l_0_13_267)))
 (let ((?x73120 (* ?x70636 l_0_13_272)))
 (let ((?x70633 (* 2.0 l_0_13_266)))
 (let ((?x73118 (* ?x70633 l_0_13_271)))
 (let ((?x70630 (* 2.0 l_0_13_265)))
 (let ((?x73116 (* ?x70630 l_0_13_270)))
 (let ((?x70627 (* 2.0 l_0_13_264)))
 (let ((?x73114 (* ?x70627 l_0_13_269)))
 (let ((?x70624 (* 2.0 l_0_13_263)))
 (let ((?x73112 (* ?x70624 l_0_13_268)))
 (let ((?x67756 (* l_0_13_195 l_0_13_195)))
 (let ((?x67754 (* l_0_13_194 l_0_13_194)))
 (let ((?x67752 (* l_0_13_193 l_0_13_193)))
 (let ((?x67750 (* l_0_13_192 l_0_13_192)))
 (let ((?x67748 (* l_0_13_191 l_0_13_191)))
 (let ((?x67746 (* l_0_13_159 l_0_13_159)))
 (let ((?x67744 (* l_0_13_158 l_0_13_158)))
 (let ((?x67742 (* l_0_13_157 l_0_13_157)))
 (let ((?x21446 (+ (+ (* l_0_13_155 l_0_13_155) (* l_0_13_156 l_0_13_156)) ?x67742)))
 (let ((?x73111 (- (- (- (- (- (+ (+ ?x21446 ?x67744) ?x67746) ?x67748) ?x67750) ?x67752) ?x67754) ?x67756)))
 (let ((?x73123 (+ (+ (+ (+ (+ (+ (+ ?x73111 ?x73112) ?x73114) ?x73116) ?x73118) ?x73120) ?x69888) ?x69890)))
 (= (+ (+ (+ ?x73123 ?x69892) ?x69894) ?x69896) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x69942 (* 2.0 l_0_13_303)))
 (let ((?x69943 (* ?x69942 l_0_13_308)))
 (let ((?x69939 (* 2.0 l_0_13_302)))
 (let ((?x69940 (* ?x69939 l_0_13_307)))
 (let ((?x69936 (* 2.0 l_0_13_301)))
 (let ((?x69937 (* ?x69936 l_0_13_306)))
 (let ((?x69933 (* 2.0 l_0_13_300)))
 (let ((?x69934 (* ?x69933 l_0_13_305)))
 (let ((?x69930 (* 2.0 l_0_13_299)))
 (let ((?x69931 (* ?x69930 l_0_13_304)))
 (let ((?x73158 (* l_0_13_273 l_0_13_273)))
 (let ((?x73156 (* l_0_13_272 l_0_13_272)))
 (let ((?x73154 (* l_0_13_271 l_0_13_271)))
 (let ((?x73152 (* l_0_13_270 l_0_13_270)))
 (let ((?x73150 (* l_0_13_269 l_0_13_269)))
 (let ((?x73148 (* l_0_13_268 l_0_13_268)))
 (let ((?x67836 (* 2.0 l_0_13_195)))
 (let ((?x67837 (* ?x67836 l_0_13_200)))
 (let ((?x67833 (* 2.0 l_0_13_194)))
 (let ((?x67834 (* ?x67833 l_0_13_199)))
 (let ((?x67830 (* 2.0 l_0_13_193)))
 (let ((?x67831 (* ?x67830 l_0_13_198)))
 (let ((?x67827 (* 2.0 l_0_13_192)))
 (let ((?x67828 (* ?x67827 l_0_13_197)))
 (let ((?x67824 (* 2.0 l_0_13_191)))
 (let ((?x67825 (* ?x67824 l_0_13_196)))
 (let ((?x67821 (* 2.0 l_0_13_159)))
 (let ((?x67822 (* ?x67821 l_0_13_164)))
 (let ((?x67818 (* 2.0 l_0_13_158)))
 (let ((?x67819 (* ?x67818 l_0_13_163)))
 (let ((?x67815 (* 2.0 l_0_13_157)))
 (let ((?x67816 (* ?x67815 l_0_13_162)))
 (let ((?x67812 (* 2.0 l_0_13_156)))
 (let ((?x67813 (* ?x67812 l_0_13_161)))
 (let ((?x67809 (* 2.0 l_0_13_155)))
 (let ((?x67810 (* ?x67809 l_0_13_160)))
 (let ((?x73145 (- (- (- (+ (+ (+ (+ ?x67810 ?x67813) ?x67816) ?x67819) ?x67822) ?x67825) ?x67828) ?x67831)))
 (let ((?x73157 (+ (+ (+ (+ (+ (- (- ?x73145 ?x67834) ?x67837) ?x73148) ?x73150) ?x73152) ?x73154) ?x73156)))
 (= (+ (+ (+ (+ (+ (+ ?x73157 ?x73158) ?x69931) ?x69934) ?x69937) ?x69940) ?x69943) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x69942 (* 2.0 l_0_13_303)))
 (let ((?x69989 (* ?x69942 l_0_13_314)))
 (let ((?x69939 (* 2.0 l_0_13_302)))
 (let ((?x69987 (* ?x69939 l_0_13_313)))
 (let ((?x69936 (* 2.0 l_0_13_301)))
 (let ((?x69985 (* ?x69936 l_0_13_312)))
 (let ((?x69933 (* 2.0 l_0_13_300)))
 (let ((?x69983 (* ?x69933 l_0_13_311)))
 (let ((?x69930 (* 2.0 l_0_13_299)))
 (let ((?x69981 (* ?x69930 l_0_13_310)))
 (let ((?x70770 (* 2.0 l_0_13_273)))
 (let ((?x73197 (* ?x70770 l_0_13_279)))
 (let ((?x70767 (* 2.0 l_0_13_272)))
 (let ((?x73195 (* ?x70767 l_0_13_278)))
 (let ((?x70764 (* 2.0 l_0_13_271)))
 (let ((?x73193 (* ?x70764 l_0_13_277)))
 (let ((?x70761 (* 2.0 l_0_13_270)))
 (let ((?x73191 (* ?x70761 l_0_13_276)))
 (let ((?x70758 (* 2.0 l_0_13_269)))
 (let ((?x73189 (* ?x70758 l_0_13_275)))
 (let ((?x70755 (* 2.0 l_0_13_268)))
 (let ((?x73187 (* ?x70755 l_0_13_274)))
 (let ((?x70636 (* 2.0 l_0_13_267)))
 (let ((?x73120 (* ?x70636 l_0_13_272)))
 (let ((?x70633 (* 2.0 l_0_13_266)))
 (let ((?x73118 (* ?x70633 l_0_13_271)))
 (let ((?x70630 (* 2.0 l_0_13_265)))
 (let ((?x73116 (* ?x70630 l_0_13_270)))
 (let ((?x70627 (* 2.0 l_0_13_264)))
 (let ((?x73114 (* ?x70627 l_0_13_269)))
 (let ((?x70624 (* 2.0 l_0_13_263)))
 (let ((?x73112 (* ?x70624 l_0_13_268)))
 (let ((?x67836 (* 2.0 l_0_13_195)))
 (let ((?x67946 (* ?x67836 l_0_13_206)))
 (let ((?x67833 (* 2.0 l_0_13_194)))
 (let ((?x67944 (* ?x67833 l_0_13_205)))
 (let ((?x67830 (* 2.0 l_0_13_193)))
 (let ((?x67942 (* ?x67830 l_0_13_204)))
 (let ((?x67827 (* 2.0 l_0_13_192)))
 (let ((?x67940 (* ?x67827 l_0_13_203)))
 (let ((?x67824 (* 2.0 l_0_13_191)))
 (let ((?x67938 (* ?x67824 l_0_13_202)))
 (let ((?x67821 (* 2.0 l_0_13_159)))
 (let ((?x67936 (* ?x67821 l_0_13_170)))
 (let ((?x67818 (* 2.0 l_0_13_158)))
 (let ((?x67934 (* ?x67818 l_0_13_169)))
 (let ((?x67815 (* 2.0 l_0_13_157)))
 (let ((?x67932 (* ?x67815 l_0_13_168)))
 (let ((?x67812 (* 2.0 l_0_13_156)))
 (let ((?x67930 (* ?x67812 l_0_13_167)))
 (let ((?x67809 (* 2.0 l_0_13_155)))
 (let ((?x67928 (* ?x67809 l_0_13_166)))
 (let ((?x73179 (- (- (- (+ (+ (+ (+ ?x67928 ?x67930) ?x67932) ?x67934) ?x67936) ?x67938) ?x67940) ?x67942)))
 (let ((?x73186 (- (- (- (- (- (- (- ?x73179 ?x67944) ?x67946) ?x73112) ?x73114) ?x73116) ?x73118) ?x73120)))
 (let ((?x73199 (+ (+ (+ (+ (+ (+ (+ ?x73186 ?x73187) ?x73189) ?x73191) ?x73193) ?x73195) ?x73197) ?x69981)))
 (= (+ (+ (+ (+ ?x73199 ?x69983) ?x69985) ?x69987) ?x69989) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x69942 (* 2.0 l_0_13_303)))
 (let ((?x70062 (* ?x69942 l_0_13_321)))
 (let ((?x69939 (* 2.0 l_0_13_302)))
 (let ((?x70060 (* ?x69939 l_0_13_320)))
 (let ((?x69936 (* 2.0 l_0_13_301)))
 (let ((?x70058 (* ?x69936 l_0_13_319)))
 (let ((?x69933 (* 2.0 l_0_13_300)))
 (let ((?x70056 (* ?x69933 l_0_13_318)))
 (let ((?x69930 (* 2.0 l_0_13_299)))
 (let ((?x70054 (* ?x69930 l_0_13_317)))
 (let ((?x70770 (* 2.0 l_0_13_273)))
 (let ((?x70771 (* ?x70770 l_0_13_286)))
 (let ((?x70767 (* 2.0 l_0_13_272)))
 (let ((?x70768 (* ?x70767 l_0_13_285)))
 (let ((?x70764 (* 2.0 l_0_13_271)))
 (let ((?x70765 (* ?x70764 l_0_13_284)))
 (let ((?x70761 (* 2.0 l_0_13_270)))
 (let ((?x70762 (* ?x70761 l_0_13_283)))
 (let ((?x70758 (* 2.0 l_0_13_269)))
 (let ((?x70759 (* ?x70758 l_0_13_282)))
 (let ((?x70755 (* 2.0 l_0_13_268)))
 (let ((?x70756 (* ?x70755 l_0_13_281)))
 (let ((?x67836 (* 2.0 l_0_13_195)))
 (let ((?x68048 (* ?x67836 l_0_13_213)))
 (let ((?x67833 (* 2.0 l_0_13_194)))
 (let ((?x68046 (* ?x67833 l_0_13_212)))
 (let ((?x67830 (* 2.0 l_0_13_193)))
 (let ((?x68044 (* ?x67830 l_0_13_211)))
 (let ((?x67827 (* 2.0 l_0_13_192)))
 (let ((?x68042 (* ?x67827 l_0_13_210)))
 (let ((?x67824 (* 2.0 l_0_13_191)))
 (let ((?x68040 (* ?x67824 l_0_13_209)))
 (let ((?x67821 (* 2.0 l_0_13_159)))
 (let ((?x68038 (* ?x67821 l_0_13_177)))
 (let ((?x67818 (* 2.0 l_0_13_158)))
 (let ((?x68036 (* ?x67818 l_0_13_176)))
 (let ((?x67815 (* 2.0 l_0_13_157)))
 (let ((?x68034 (* ?x67815 l_0_13_175)))
 (let ((?x67812 (* 2.0 l_0_13_156)))
 (let ((?x68032 (* ?x67812 l_0_13_174)))
 (let ((?x67809 (* 2.0 l_0_13_155)))
 (let ((?x68030 (* ?x67809 l_0_13_173)))
 (let ((?x73225 (- (- (- (+ (+ (+ (+ ?x68030 ?x68032) ?x68034) ?x68036) ?x68038) ?x68040) ?x68042) ?x68044)))
 (let ((?x73231 (- (- (- (- ?x73225 ?x68046) ?x68048) (* (* 2.0 l_0_13_227) l_0_13_232)) (* (* 2.0 l_0_13_228) l_0_13_233))))
 (let ((?x73235 (- (- ?x73231 (* (* 2.0 l_0_13_229) l_0_13_234)) (* (* 2.0 l_0_13_230) l_0_13_235))))
 (let ((?x73240 (+ (+ (+ (- ?x73235 (* (* 2.0 l_0_13_231) l_0_13_236)) ?x70756) ?x70759) ?x70762)))
 (let ((?x73247 (+ (+ (+ (+ (+ (+ (+ ?x73240 ?x70765) ?x70768) ?x70771) ?x70054) ?x70056) ?x70058) ?x70060)))
 (= (+ ?x73247 ?x70062) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x70122 (* l_0_13_309 l_0_13_309)))
 (let ((?x70120 (* l_0_13_308 l_0_13_308)))
 (let ((?x70118 (* l_0_13_307 l_0_13_307)))
 (let ((?x70116 (* l_0_13_306 l_0_13_306)))
 (let ((?x70114 (* l_0_13_305 l_0_13_305)))
 (let ((?x70112 (* l_0_13_304 l_0_13_304)))
 (let ((?x68155 (* l_0_13_201 l_0_13_201)))
 (let ((?x68153 (* l_0_13_200 l_0_13_200)))
 (let ((?x68149 (* l_0_13_199 l_0_13_199)))
 (let ((?x68147 (* l_0_13_198 l_0_13_198)))
 (let ((?x68145 (* l_0_13_197 l_0_13_197)))
 (let ((?x68143 (* l_0_13_196 l_0_13_196)))
 (let ((?x68135 (* l_0_13_165 l_0_13_165)))
 (let ((?x68120 (* l_0_13_164 l_0_13_164)))
 (let ((?x68117 (* l_0_13_163 l_0_13_163)))
 (let ((?x68113 (* l_0_13_162 l_0_13_162)))
 (let ((?x73276 (+ (+ (* l_0_13_160 l_0_13_160) (* l_0_13_161 l_0_13_161)) ?x68113)))
 (let ((?x73283 (- (- (- (- (+ (+ (+ ?x73276 ?x68117) ?x68120) ?x68135) ?x68143) ?x68145) ?x68147) ?x68149)))
 (let ((?x73290 (+ (+ (+ (+ (+ (- (- ?x73283 ?x68153) ?x68155) ?x70112) ?x70114) ?x70116) ?x70118) ?x70120)))
 (= (+ ?x73290 ?x70122) 0.0)))))))))))))))))))))
(assert
 (let ((?x70172 (* 2.0 l_0_13_309)))
 (let ((?x70173 (* ?x70172 l_0_13_315)))
 (let ((?x70169 (* 2.0 l_0_13_308)))
 (let ((?x70170 (* ?x70169 l_0_13_314)))
 (let ((?x70166 (* 2.0 l_0_13_307)))
 (let ((?x70167 (* ?x70166 l_0_13_313)))
 (let ((?x70163 (* 2.0 l_0_13_306)))
 (let ((?x70164 (* ?x70163 l_0_13_312)))
 (let ((?x70160 (* 2.0 l_0_13_305)))
 (let ((?x70161 (* ?x70160 l_0_13_311)))
 (let ((?x70157 (* 2.0 l_0_13_304)))
 (let ((?x70158 (* ?x70157 l_0_13_310)))
 (let ((?x73158 (* l_0_13_273 l_0_13_273)))
 (let ((?x73156 (* l_0_13_272 l_0_13_272)))
 (let ((?x73154 (* l_0_13_271 l_0_13_271)))
 (let ((?x73152 (* l_0_13_270 l_0_13_270)))
 (let ((?x73150 (* l_0_13_269 l_0_13_269)))
 (let ((?x73148 (* l_0_13_268 l_0_13_268)))
 (let ((?x68274 (* 2.0 l_0_13_201)))
 (let ((?x68275 (* ?x68274 l_0_13_207)))
 (let ((?x68271 (* 2.0 l_0_13_200)))
 (let ((?x68272 (* ?x68271 l_0_13_206)))
 (let ((?x68265 (* 2.0 l_0_13_199)))
 (let ((?x68266 (* ?x68265 l_0_13_205)))
 (let ((?x68262 (* 2.0 l_0_13_198)))
 (let ((?x68263 (* ?x68262 l_0_13_204)))
 (let ((?x68259 (* 2.0 l_0_13_197)))
 (let ((?x68260 (* ?x68259 l_0_13_203)))
 (let ((?x68256 (* 2.0 l_0_13_196)))
 (let ((?x68257 (* ?x68256 l_0_13_202)))
 (let ((?x68246 (* 2.0 l_0_13_165)))
 (let ((?x68247 (* ?x68246 l_0_13_171)))
 (let ((?x68243 (* 2.0 l_0_13_164)))
 (let ((?x68244 (* ?x68243 l_0_13_170)))
 (let ((?x68240 (* 2.0 l_0_13_163)))
 (let ((?x68241 (* ?x68240 l_0_13_169)))
 (let ((?x68237 (* 2.0 l_0_13_162)))
 (let ((?x68238 (* ?x68237 l_0_13_168)))
 (let ((?x68234 (* 2.0 l_0_13_161)))
 (let ((?x68235 (* ?x68234 l_0_13_167)))
 (let ((?x68231 (* 2.0 l_0_13_160)))
 (let ((?x68232 (* ?x68231 l_0_13_166)))
 (let ((?x73306 (- (- (+ (+ (+ (+ (+ ?x68232 ?x68235) ?x68238) ?x68241) ?x68244) ?x68247) ?x68257) ?x68260)))
 (let ((?x73313 (- (- (- (- (- (- (- ?x73306 ?x68263) ?x68266) ?x68272) ?x68275) ?x73148) ?x73150) ?x73152)))
 (let ((?x73320 (+ (+ (+ (+ (- (- (- ?x73313 ?x73154) ?x73156) ?x73158) ?x70158) ?x70161) ?x70164) ?x70167)))
 (= (+ (+ ?x73320 ?x70170) ?x70173) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x70172 (* 2.0 l_0_13_309)))
 (let ((?x70243 (* ?x70172 l_0_13_322)))
 (let ((?x70169 (* 2.0 l_0_13_308)))
 (let ((?x70241 (* ?x70169 l_0_13_321)))
 (let ((?x70166 (* 2.0 l_0_13_307)))
 (let ((?x70239 (* ?x70166 l_0_13_320)))
 (let ((?x70163 (* 2.0 l_0_13_306)))
 (let ((?x70237 (* ?x70163 l_0_13_319)))
 (let ((?x70160 (* 2.0 l_0_13_305)))
 (let ((?x70235 (* ?x70160 l_0_13_318)))
 (let ((?x70157 (* 2.0 l_0_13_304)))
 (let ((?x70233 (* ?x70157 l_0_13_317)))
 (let ((?x73368 (* l_0_13_237 l_0_13_237)))
 (let ((?x73366 (* l_0_13_236 l_0_13_236)))
 (let ((?x73364 (* l_0_13_235 l_0_13_235)))
 (let ((?x73362 (* l_0_13_234 l_0_13_234)))
 (let ((?x73360 (* l_0_13_233 l_0_13_233)))
 (let ((?x73358 (* l_0_13_232 l_0_13_232)))
 (let ((?x68274 (* 2.0 l_0_13_201)))
 (let ((?x68412 (* ?x68274 l_0_13_214)))
 (let ((?x68271 (* 2.0 l_0_13_200)))
 (let ((?x68410 (* ?x68271 l_0_13_213)))
 (let ((?x68265 (* 2.0 l_0_13_199)))
 (let ((?x68406 (* ?x68265 l_0_13_212)))
 (let ((?x68262 (* 2.0 l_0_13_198)))
 (let ((?x68404 (* ?x68262 l_0_13_211)))
 (let ((?x68259 (* 2.0 l_0_13_197)))
 (let ((?x68402 (* ?x68259 l_0_13_210)))
 (let ((?x68256 (* 2.0 l_0_13_196)))
 (let ((?x68400 (* ?x68256 l_0_13_209)))
 (let ((?x68246 (* 2.0 l_0_13_165)))
 (let ((?x68392 (* ?x68246 l_0_13_178)))
 (let ((?x68243 (* 2.0 l_0_13_164)))
 (let ((?x68390 (* ?x68243 l_0_13_177)))
 (let ((?x68240 (* 2.0 l_0_13_163)))
 (let ((?x68388 (* ?x68240 l_0_13_176)))
 (let ((?x68237 (* 2.0 l_0_13_162)))
 (let ((?x68386 (* ?x68237 l_0_13_175)))
 (let ((?x68234 (* 2.0 l_0_13_161)))
 (let ((?x68384 (* ?x68234 l_0_13_174)))
 (let ((?x68231 (* 2.0 l_0_13_160)))
 (let ((?x68382 (* ?x68231 l_0_13_173)))
 (let ((?x73353 (- (- (+ (+ (+ (+ (+ ?x68382 ?x68384) ?x68386) ?x68388) ?x68390) ?x68392) ?x68400) ?x68402)))
 (let ((?x73363 (- (- (- (- (- (- (- ?x73353 ?x68404) ?x68406) ?x68410) ?x68412) ?x73358) ?x73360) ?x73362)))
 (let ((?x73373 (+ (+ (+ (+ (- (- (- ?x73363 ?x73364) ?x73366) ?x73368) ?x70233) ?x70235) ?x70237) ?x70239)))
 (= (+ (+ ?x73373 ?x70241) ?x70243) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x70300 (* l_0_13_316 l_0_13_316)))
 (let ((?x70298 (* l_0_13_315 l_0_13_315)))
 (let ((?x70296 (* l_0_13_314 l_0_13_314)))
 (let ((?x70294 (* l_0_13_313 l_0_13_313)))
 (let ((?x70292 (* l_0_13_312 l_0_13_312)))
 (let ((?x70290 (* l_0_13_311 l_0_13_311)))
 (let ((?x70288 (* l_0_13_310 l_0_13_310)))
 (let ((?x70770 (* 2.0 l_0_13_273)))
 (let ((?x73197 (* ?x70770 l_0_13_279)))
 (let ((?x70767 (* 2.0 l_0_13_272)))
 (let ((?x73195 (* ?x70767 l_0_13_278)))
 (let ((?x70764 (* 2.0 l_0_13_271)))
 (let ((?x73193 (* ?x70764 l_0_13_277)))
 (let ((?x70761 (* 2.0 l_0_13_270)))
 (let ((?x73191 (* ?x70761 l_0_13_276)))
 (let ((?x70758 (* 2.0 l_0_13_269)))
 (let ((?x73189 (* ?x70758 l_0_13_275)))
 (let ((?x70755 (* 2.0 l_0_13_268)))
 (let ((?x73187 (* ?x70755 l_0_13_274)))
 (let ((?x68485 (* l_0_13_208 l_0_13_208)))
 (let ((?x68483 (* l_0_13_207 l_0_13_207)))
 (let ((?x68481 (* l_0_13_206 l_0_13_206)))
 (let ((?x68479 (* l_0_13_205 l_0_13_205)))
 (let ((?x68477 (* l_0_13_204 l_0_13_204)))
 (let ((?x68475 (* l_0_13_203 l_0_13_203)))
 (let ((?x68473 (* l_0_13_202 l_0_13_202)))
 (let ((?x68471 (* l_0_13_172 l_0_13_172)))
 (let ((?x68469 (* l_0_13_171 l_0_13_171)))
 (let ((?x68467 (* l_0_13_170 l_0_13_170)))
 (let ((?x68465 (* l_0_13_169 l_0_13_169)))
 (let ((?x68463 (* l_0_13_168 l_0_13_168)))
 (let ((?x73392 (+ (+ (* l_0_13_166 l_0_13_166) (* l_0_13_167 l_0_13_167)) ?x68463)))
 (let ((?x73399 (- (- (- (+ (+ (+ (+ ?x73392 ?x68465) ?x68467) ?x68469) ?x68471) ?x68473) ?x68475) ?x68477)))
 (let ((?x73406 (- (- (- (- (- (- (- ?x73399 ?x68479) ?x68481) ?x68483) ?x68485) ?x73187) ?x73189) ?x73191)))
 (let ((?x73413 (+ (+ (+ (+ (- (- (- ?x73406 ?x73193) ?x73195) ?x73197) ?x70288) ?x70290) ?x70292) ?x70294)))
 (= (+ (+ (+ ?x73413 ?x70296) ?x70298) ?x70300) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x70440 (* l_0_13_324 l_0_13_324)))
 (let ((?x70438 (* l_0_13_323 l_0_13_323)))
 (let ((?x70436 (* l_0_13_322 l_0_13_322)))
 (let ((?x70434 (* l_0_13_321 l_0_13_321)))
 (let ((?x15136 (* l_0_13_320 l_0_13_320)))
 (let ((?x15139 (* l_0_13_319 l_0_13_319)))
 (let ((?x15108 (* l_0_13_318 l_0_13_318)))
 (let ((?x48394 (* l_0_13_317 l_0_13_317)))
 (let ((?x68766 (* l_0_13_216 l_0_13_216)))
 (let ((?x68764 (* l_0_13_215 l_0_13_215)))
 (let ((?x68762 (* l_0_13_214 l_0_13_214)))
 (let ((?x68760 (* l_0_13_213 l_0_13_213)))
 (let ((?x68758 (* l_0_13_212 l_0_13_212)))
 (let ((?x68756 (* l_0_13_211 l_0_13_211)))
 (let ((?x68754 (* l_0_13_210 l_0_13_210)))
 (let ((?x68752 (* l_0_13_209 l_0_13_209)))
 (let ((?x68750 (* l_0_13_180 l_0_13_180)))
 (let ((?x68748 (* l_0_13_179 l_0_13_179)))
 (let ((?x68746 (* l_0_13_178 l_0_13_178)))
 (let ((?x68744 (* l_0_13_177 l_0_13_177)))
 (let ((?x68742 (* l_0_13_176 l_0_13_176)))
 (let ((?x68740 (* l_0_13_175 l_0_13_175)))
 (let ((?x73432 (+ (+ (* l_0_13_173 l_0_13_173) (* l_0_13_174 l_0_13_174)) ?x68740)))
 (let ((?x73439 (- (- (+ (+ (+ (+ (+ ?x73432 ?x68742) ?x68744) ?x68746) ?x68748) ?x68750) ?x68752) ?x68754)))
 (let ((?x73447 (- (- (- (- (- (- (- ?x73439 ?x68756) ?x68758) ?x68760) ?x68762) ?x68764) ?x68766) (* (* 2.0 l_0_13_232) l_0_13_245))))
 (let ((?x73451 (- (- ?x73447 (* (* 2.0 l_0_13_233) l_0_13_246)) (* (* 2.0 l_0_13_234) l_0_13_247))))
 (let ((?x73455 (- (- ?x73451 (* (* 2.0 l_0_13_235) l_0_13_248)) (* (* 2.0 l_0_13_236) l_0_13_249))))
 (let ((?x73460 (+ (+ (+ (- ?x73455 (* (* 2.0 l_0_13_237) l_0_13_250)) ?x48394) ?x15108) ?x15139)))
 (= (+ (+ (+ (+ (+ ?x73460 ?x15136) ?x70434) ?x70436) ?x70438) ?x70440) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x73495 (- (- (* (- l_0_13_218) l_0_13_218) (* l_0_13_219 l_0_13_219)) (* (* 2.0 l_0_13_326) l_0_13_353))))
 (let ((?x73499 (- (- ?x73495 (* (* 2.0 l_0_13_327) l_0_13_354)) (* (* 2.0 l_0_13_362) l_0_13_389))))
 (let ((?x73503 (- (- ?x73499 (* (* 2.0 l_0_13_363) l_0_13_390)) (* (* 2.0 l_0_13_398) l_0_13_425))))
 (let ((?x73507 (- (- ?x73503 (* (* 2.0 l_0_13_399) l_0_13_426)) (* (* 2.0 l_0_13_434) l_0_13_461))))
 (let ((?x73511 (- (- ?x73507 (* (* 2.0 l_0_13_435) l_0_13_462)) (* (* 2.0 l_0_13_470) l_0_13_497))))
 (= (- ?x73511 (* (* 2.0 l_0_13_471) l_0_13_498)) 0.0)))))))
(assert
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x65989 (* ?x65988 l_0_13_282)))
 (let ((?x65985 (* 2.0 l_0_13_254)))
 (let ((?x65986 (* ?x65985 l_0_13_281)))
 (let ((?x73570 (- (* (* (- 2.0) l_0_13_218) l_0_13_227) (* (* 2.0 l_0_13_219) l_0_13_228))))
 (let ((?x73576 (- (- (+ (+ ?x73570 ?x65986) ?x65989) (* (* 2.0 l_0_13_335) l_0_13_353)) (* (* 2.0 l_0_13_336) l_0_13_354))))
 (let ((?x73580 (- (- ?x73576 (* (* 2.0 l_0_13_337) l_0_13_355)) (* (* 2.0 l_0_13_338) l_0_13_356))))
 (let ((?x73584 (- (- ?x73580 (* (* 2.0 l_0_13_339) l_0_13_357)) (* (* 2.0 l_0_13_371) l_0_13_389))))
 (let ((?x73588 (- (- ?x73584 (* (* 2.0 l_0_13_372) l_0_13_390)) (* (* 2.0 l_0_13_373) l_0_13_391))))
 (let ((?x73592 (- (- ?x73588 (* (* 2.0 l_0_13_374) l_0_13_392)) (* (* 2.0 l_0_13_375) l_0_13_393))))
 (let ((?x73596 (- (- ?x73592 (* (* 2.0 l_0_13_407) l_0_13_425)) (* (* 2.0 l_0_13_408) l_0_13_426))))
 (let ((?x73600 (- (- ?x73596 (* (* 2.0 l_0_13_409) l_0_13_427)) (* (* 2.0 l_0_13_410) l_0_13_428))))
 (let ((?x73604 (- (- ?x73600 (* (* 2.0 l_0_13_411) l_0_13_429)) (* (* 2.0 l_0_13_443) l_0_13_461))))
 (let ((?x73608 (- (- ?x73604 (* (* 2.0 l_0_13_444) l_0_13_462)) (* (* 2.0 l_0_13_445) l_0_13_463))))
 (let ((?x73612 (- (- ?x73608 (* (* 2.0 l_0_13_446) l_0_13_464)) (* (* 2.0 l_0_13_447) l_0_13_465))))
 (let ((?x73616 (- (- ?x73612 (* (* 2.0 l_0_13_479) l_0_13_497)) (* (* 2.0 l_0_13_480) l_0_13_498))))
 (let ((?x73620 (- (- ?x73616 (* (* 2.0 l_0_13_481) l_0_13_499)) (* (* 2.0 l_0_13_482) l_0_13_500))))
 (= (- ?x73620 (* (* 2.0 l_0_13_483) l_0_13_501)) 0.0)))))))))))))))))))
(assert
 (let ((?x73754 (* l_0_13_504 l_0_13_504)))
 (let ((?x73752 (* l_0_13_503 l_0_13_503)))
 (let ((?x73750 (* l_0_13_502 l_0_13_502)))
 (let ((?x73748 (* l_0_13_501 l_0_13_501)))
 (let ((?x73746 (* l_0_13_500 l_0_13_500)))
 (let ((?x73744 (* l_0_13_499 l_0_13_499)))
 (let ((?x73742 (* l_0_13_498 l_0_13_498)))
 (let ((?x73740 (* l_0_13_497 l_0_13_497)))
 (let ((?x73738 (* l_0_13_468 l_0_13_468)))
 (let ((?x73736 (* l_0_13_467 l_0_13_467)))
 (let ((?x73734 (* l_0_13_466 l_0_13_466)))
 (let ((?x73732 (* l_0_13_465 l_0_13_465)))
 (let ((?x73730 (* l_0_13_464 l_0_13_464)))
 (let ((?x73728 (* l_0_13_463 l_0_13_463)))
 (let ((?x73726 (* l_0_13_462 l_0_13_462)))
 (let ((?x73724 (* l_0_13_461 l_0_13_461)))
 (let ((?x73722 (* l_0_13_432 l_0_13_432)))
 (let ((?x73720 (* l_0_13_431 l_0_13_431)))
 (let ((?x73718 (* l_0_13_430 l_0_13_430)))
 (let ((?x73716 (* l_0_13_429 l_0_13_429)))
 (let ((?x73714 (* l_0_13_428 l_0_13_428)))
 (let ((?x73712 (* l_0_13_427 l_0_13_427)))
 (let ((?x73710 (* l_0_13_426 l_0_13_426)))
 (let ((?x73708 (* l_0_13_425 l_0_13_425)))
 (let ((?x73706 (* l_0_13_396 l_0_13_396)))
 (let ((?x73704 (* l_0_13_395 l_0_13_395)))
 (let ((?x73702 (* l_0_13_394 l_0_13_394)))
 (let ((?x73700 (* l_0_13_393 l_0_13_393)))
 (let ((?x73698 (* l_0_13_392 l_0_13_392)))
 (let ((?x73696 (* l_0_13_391 l_0_13_391)))
 (let ((?x73694 (* l_0_13_390 l_0_13_390)))
 (let ((?x73692 (* l_0_13_389 l_0_13_389)))
 (let ((?x73690 (* l_0_13_360 l_0_13_360)))
 (let ((?x73688 (* l_0_13_359 l_0_13_359)))
 (let ((?x73686 (* l_0_13_358 l_0_13_358)))
 (let ((?x73684 (* l_0_13_357 l_0_13_357)))
 (let ((?x73682 (* l_0_13_356 l_0_13_356)))
 (let ((?x73680 (* l_0_13_355 l_0_13_355)))
 (let ((?x73678 (* l_0_13_354 l_0_13_354)))
 (let ((?x73676 (* l_0_13_353 l_0_13_353)))
 (let ((?x73675 (- (* (* (- 2.0) l_0_13_218) l_0_13_245) (* (* 2.0 l_0_13_219) l_0_13_246))))
 (let ((?x73689 (- (- (- (- (- (- (- ?x73675 ?x73676) ?x73678) ?x73680) ?x73682) ?x73684) ?x73686) ?x73688)))
 (let ((?x73703 (- (- (- (- (- (- (- ?x73689 ?x73690) ?x73692) ?x73694) ?x73696) ?x73698) ?x73700) ?x73702)))
 (let ((?x73717 (- (- (- (- (- (- (- ?x73703 ?x73704) ?x73706) ?x73708) ?x73710) ?x73712) ?x73714) ?x73716)))
 (let ((?x73731 (- (- (- (- (- (- (- ?x73717 ?x73718) ?x73720) ?x73722) ?x73724) ?x73726) ?x73728) ?x73730)))
 (let ((?x73745 (- (- (- (- (- (- (- ?x73731 ?x73732) ?x73734) ?x73736) ?x73738) ?x73740) ?x73742) ?x73744)))
 (= (- (- (- (- (- ?x73745 ?x73746) ?x73748) ?x73750) ?x73752) ?x73754) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x70636 (* 2.0 l_0_13_267)))
 (let ((?x70637 (* ?x70636 l_0_13_285)))
 (let ((?x70633 (* 2.0 l_0_13_266)))
 (let ((?x70634 (* ?x70633 l_0_13_284)))
 (let ((?x70630 (* 2.0 l_0_13_265)))
 (let ((?x70631 (* ?x70630 l_0_13_283)))
 (let ((?x70627 (* 2.0 l_0_13_264)))
 (let ((?x70628 (* ?x70627 l_0_13_282)))
 (let ((?x70624 (* 2.0 l_0_13_263)))
 (let ((?x70625 (* ?x70624 l_0_13_281)))
 (let ((?x73837 (* l_0_13_231 l_0_13_231)))
 (let ((?x73835 (* l_0_13_230 l_0_13_230)))
 (let ((?x73833 (* l_0_13_229 l_0_13_229)))
 (let ((?x73834 (- (- (* (- l_0_13_227) l_0_13_227) (* l_0_13_228 l_0_13_228)) ?x73833)))
 (let ((?x73843 (+ (+ (+ (+ (+ (- (- ?x73834 ?x73835) ?x73837) ?x70625) ?x70628) ?x70631) ?x70634) ?x70637)))
 (= ?x73843 0.0)))))))))))))))))
(assert
 (let ((?x70876 (* l_0_13_288 l_0_13_288)))
 (let ((?x70874 (* l_0_13_287 l_0_13_287)))
 (let ((?x70872 (* l_0_13_286 l_0_13_286)))
 (let ((?x70870 (* l_0_13_285 l_0_13_285)))
 (let ((?x70868 (* l_0_13_284 l_0_13_284)))
 (let ((?x70866 (* l_0_13_283 l_0_13_283)))
 (let ((?x70864 (* l_0_13_282 l_0_13_282)))
 (let ((?x70862 (* l_0_13_281 l_0_13_281)))
 (let ((?x73857 (- (* (* (- 2.0) l_0_13_227) l_0_13_245) (* (* 2.0 l_0_13_228) l_0_13_246))))
 (let ((?x73861 (- (- ?x73857 (* (* 2.0 l_0_13_229) l_0_13_247)) (* (* 2.0 l_0_13_230) l_0_13_248))))
 (let ((?x73866 (+ (+ (+ (- ?x73861 (* (* 2.0 l_0_13_231) l_0_13_249)) ?x70862) ?x70864) ?x70866)))
 (= (+ (+ (+ (+ (+ ?x73866 ?x70868) ?x70870) ?x70872) ?x70874) ?x70876) 0.0)))))))))))))
(assert
 (let ((?x73898 (* l_0_13_252 l_0_13_252)))
 (let ((?x73896 (* l_0_13_251 l_0_13_251)))
 (let ((?x73894 (* l_0_13_250 l_0_13_250)))
 (let ((?x73892 (* l_0_13_249 l_0_13_249)))
 (let ((?x73890 (* l_0_13_248 l_0_13_248)))
 (let ((?x53071 (* l_0_13_247 l_0_13_247)))
 (let ((?x53072 (- (- (* (- l_0_13_245) l_0_13_245) (* l_0_13_246 l_0_13_246)) ?x53071)))
 (= (- (- (- (- (- ?x53072 ?x73890) ?x73892) ?x73894) ?x73896) ?x73898) 0.0)))))))))
(assert
 (let ((?x73924 (- (- (* (- l_0_13_254) l_0_13_254) (* l_0_13_255 l_0_13_255)) (* (* 2.0 l_0_13_326) l_0_13_346))))
 (let ((?x73928 (- (- ?x73924 (* (* 2.0 l_0_13_327) l_0_13_347)) (* (* 2.0 l_0_13_362) l_0_13_382))))
 (let ((?x73932 (- (- ?x73928 (* (* 2.0 l_0_13_363) l_0_13_383)) (* (* 2.0 l_0_13_398) l_0_13_418))))
 (let ((?x73936 (- (- ?x73932 (* (* 2.0 l_0_13_399) l_0_13_419)) (* (* 2.0 l_0_13_434) l_0_13_454))))
 (let ((?x73940 (- (- ?x73936 (* (* 2.0 l_0_13_435) l_0_13_455)) (* (* 2.0 l_0_13_470) l_0_13_490))))
 (= (- ?x73940 (* (* 2.0 l_0_13_471) l_0_13_491)) 0.0)))))))
(assert
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x73976 (* ?x65988 l_0_13_257)))
 (let ((?x73979 (- (- (* (* (- 2.0) l_0_13_254) l_0_13_256) ?x73976) (* (* 2.0 l_0_13_328) l_0_13_346))))
 (let ((?x73983 (- (- ?x73979 (* (* 2.0 l_0_13_329) l_0_13_347)) (* (* 2.0 l_0_13_330) l_0_13_348))))
 (let ((?x73987 (- (- ?x73983 (* (* 2.0 l_0_13_364) l_0_13_382)) (* (* 2.0 l_0_13_365) l_0_13_383))))
 (let ((?x73991 (- (- ?x73987 (* (* 2.0 l_0_13_366) l_0_13_384)) (* (* 2.0 l_0_13_400) l_0_13_418))))
 (let ((?x73995 (- (- ?x73991 (* (* 2.0 l_0_13_401) l_0_13_419)) (* (* 2.0 l_0_13_402) l_0_13_420))))
 (let ((?x73999 (- (- ?x73995 (* (* 2.0 l_0_13_436) l_0_13_454)) (* (* 2.0 l_0_13_437) l_0_13_455))))
 (let ((?x74003 (- (- ?x73999 (* (* 2.0 l_0_13_438) l_0_13_456)) (* (* 2.0 l_0_13_472) l_0_13_490))))
 (let ((?x74007 (- (- ?x74003 (* (* 2.0 l_0_13_473) l_0_13_491)) (* (* 2.0 l_0_13_474) l_0_13_492))))
 (= ?x74007 0.0))))))))))))
(assert
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x74065 (* ?x65988 l_0_13_275)))
 (let ((?x74063 (* ?x65988 l_0_13_264)))
 (let ((?x74062 (+ (* (* (- 2.0) l_0_13_254) l_0_13_263) (* (* 2.0 l_0_13_254) l_0_13_274))))
 (let ((?x74070 (- (- (+ (- ?x74062 ?x74063) ?x74065) (* (* 2.0 l_0_13_335) l_0_13_346)) (* (* 2.0 l_0_13_336) l_0_13_347))))
 (let ((?x74074 (- (- ?x74070 (* (* 2.0 l_0_13_337) l_0_13_348)) (* (* 2.0 l_0_13_338) l_0_13_349))))
 (let ((?x74078 (- (- ?x74074 (* (* 2.0 l_0_13_339) l_0_13_350)) (* (* 2.0 l_0_13_371) l_0_13_382))))
 (let ((?x74082 (- (- ?x74078 (* (* 2.0 l_0_13_372) l_0_13_383)) (* (* 2.0 l_0_13_373) l_0_13_384))))
 (let ((?x74086 (- (- ?x74082 (* (* 2.0 l_0_13_374) l_0_13_385)) (* (* 2.0 l_0_13_375) l_0_13_386))))
 (let ((?x74090 (- (- ?x74086 (* (* 2.0 l_0_13_407) l_0_13_418)) (* (* 2.0 l_0_13_408) l_0_13_419))))
 (let ((?x74094 (- (- ?x74090 (* (* 2.0 l_0_13_409) l_0_13_420)) (* (* 2.0 l_0_13_410) l_0_13_421))))
 (let ((?x74098 (- (- ?x74094 (* (* 2.0 l_0_13_411) l_0_13_422)) (* (* 2.0 l_0_13_443) l_0_13_454))))
 (let ((?x74102 (- (- ?x74098 (* (* 2.0 l_0_13_444) l_0_13_455)) (* (* 2.0 l_0_13_445) l_0_13_456))))
 (let ((?x74106 (- (- ?x74102 (* (* 2.0 l_0_13_446) l_0_13_457)) (* (* 2.0 l_0_13_447) l_0_13_458))))
 (let ((?x74110 (- (- ?x74106 (* (* 2.0 l_0_13_479) l_0_13_490)) (* (* 2.0 l_0_13_480) l_0_13_491))))
 (let ((?x74114 (- (- ?x74110 (* (* 2.0 l_0_13_481) l_0_13_492)) (* (* 2.0 l_0_13_482) l_0_13_493))))
 (= (- ?x74114 (* (* 2.0 l_0_13_483) l_0_13_494)) 0.0))))))))))))))))))
(assert
 (let ((?x74304 (* l_0_13_496 l_0_13_496)))
 (let ((?x74302 (* l_0_13_495 l_0_13_495)))
 (let ((?x74300 (* l_0_13_494 l_0_13_494)))
 (let ((?x74298 (* l_0_13_493 l_0_13_493)))
 (let ((?x74296 (* l_0_13_492 l_0_13_492)))
 (let ((?x74294 (* l_0_13_491 l_0_13_491)))
 (let ((?x74292 (* l_0_13_490 l_0_13_490)))
 (let ((?x74290 (* l_0_13_460 l_0_13_460)))
 (let ((?x74288 (* l_0_13_459 l_0_13_459)))
 (let ((?x74286 (* l_0_13_458 l_0_13_458)))
 (let ((?x74284 (* l_0_13_457 l_0_13_457)))
 (let ((?x74282 (* l_0_13_456 l_0_13_456)))
 (let ((?x74280 (* l_0_13_455 l_0_13_455)))
 (let ((?x74278 (* l_0_13_454 l_0_13_454)))
 (let ((?x74276 (* l_0_13_424 l_0_13_424)))
 (let ((?x74274 (* l_0_13_423 l_0_13_423)))
 (let ((?x74272 (* l_0_13_422 l_0_13_422)))
 (let ((?x74270 (* l_0_13_421 l_0_13_421)))
 (let ((?x74268 (* l_0_13_420 l_0_13_420)))
 (let ((?x74266 (* l_0_13_419 l_0_13_419)))
 (let ((?x74264 (* l_0_13_418 l_0_13_418)))
 (let ((?x74262 (* l_0_13_388 l_0_13_388)))
 (let ((?x74260 (* l_0_13_387 l_0_13_387)))
 (let ((?x74258 (* l_0_13_386 l_0_13_386)))
 (let ((?x74256 (* l_0_13_385 l_0_13_385)))
 (let ((?x74254 (* l_0_13_384 l_0_13_384)))
 (let ((?x74252 (* l_0_13_383 l_0_13_383)))
 (let ((?x74250 (* l_0_13_382 l_0_13_382)))
 (let ((?x74248 (* l_0_13_352 l_0_13_352)))
 (let ((?x74246 (* l_0_13_351 l_0_13_351)))
 (let ((?x74244 (* l_0_13_350 l_0_13_350)))
 (let ((?x74242 (* l_0_13_349 l_0_13_349)))
 (let ((?x74240 (* l_0_13_348 l_0_13_348)))
 (let ((?x74238 (* l_0_13_347 l_0_13_347)))
 (let ((?x74236 (* l_0_13_346 l_0_13_346)))
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x74065 (* ?x65988 l_0_13_275)))
 (let ((?x74241 (- (- (- (- (* (* (- 2.0) l_0_13_254) l_0_13_274) ?x74065) ?x74236) ?x74238) ?x74240)))
 (let ((?x74255 (- (- (- (- (- (- (- ?x74241 ?x74242) ?x74244) ?x74246) ?x74248) ?x74250) ?x74252) ?x74254)))
 (let ((?x74269 (- (- (- (- (- (- (- ?x74255 ?x74256) ?x74258) ?x74260) ?x74262) ?x74264) ?x74266) ?x74268)))
 (let ((?x74283 (- (- (- (- (- (- (- ?x74269 ?x74270) ?x74272) ?x74274) ?x74276) ?x74278) ?x74280) ?x74282)))
 (let ((?x74297 (- (- (- (- (- (- (- ?x74283 ?x74284) ?x74286) ?x74288) ?x74290) ?x74292) ?x74294) ?x74296)))
 (= (- (- (- (- ?x74297 ?x74298) ?x74300) ?x74302) ?x74304) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x74363 (* l_0_13_258 l_0_13_258)))
 (let ((?x74364 (- (- (* (- l_0_13_256) l_0_13_256) (* l_0_13_257 l_0_13_257)) ?x74363)))
 (= ?x74364 0.0))))
(assert
 (let ((?x66653 (* 2.0 l_0_13_258)))
 (let ((?x74383 (* ?x66653 l_0_13_276)))
 (let ((?x74381 (* ?x66653 l_0_13_265)))
 (let ((?x66650 (* 2.0 l_0_13_257)))
 (let ((?x74379 (* ?x66650 l_0_13_275)))
 (let ((?x74377 (* ?x66650 l_0_13_264)))
 (let ((?x74376 (+ (* (* (- 2.0) l_0_13_256) l_0_13_263) (* (* 2.0 l_0_13_256) l_0_13_274))))
 (= (+ (- (+ (- ?x74376 ?x74377) ?x74379) ?x74381) ?x74383) 0.0)))))))))
(assert
 (let ((?x66653 (* 2.0 l_0_13_258)))
 (let ((?x74383 (* ?x66653 l_0_13_276)))
 (let ((?x66650 (* 2.0 l_0_13_257)))
 (let ((?x74379 (* ?x66650 l_0_13_275)))
 (= (- (- (* (* (- 2.0) l_0_13_256) l_0_13_274) ?x74379) ?x74383) 0.0))))))
(assert
 (let ((?x74428 (* l_0_13_267 l_0_13_267)))
 (let ((?x70636 (* 2.0 l_0_13_267)))
 (let ((?x74426 (* ?x70636 l_0_13_278)))
 (let ((?x74424 (* l_0_13_266 l_0_13_266)))
 (let ((?x70633 (* 2.0 l_0_13_266)))
 (let ((?x74422 (* ?x70633 l_0_13_277)))
 (let ((?x74420 (* l_0_13_265 l_0_13_265)))
 (let ((?x70630 (* 2.0 l_0_13_265)))
 (let ((?x74418 (* ?x70630 l_0_13_276)))
 (let ((?x74416 (* l_0_13_264 l_0_13_264)))
 (let ((?x70627 (* 2.0 l_0_13_264)))
 (let ((?x74414 (* ?x70627 l_0_13_275)))
 (let ((?x74412 (* l_0_13_263 l_0_13_263)))
 (let ((?x74419 (+ (- (+ (- (* (* 2.0 l_0_13_263) l_0_13_274) ?x74412) ?x74414) ?x74416) ?x74418)))
 (= (- (+ (- (+ (- ?x74419 ?x74420) ?x74422) ?x74424) ?x74426) ?x74428) 0.0))))))))))))))))
(assert
 (let ((?x74477 (* l_0_13_280 l_0_13_280)))
 (let ((?x74475 (* l_0_13_279 l_0_13_279)))
 (let ((?x74473 (* l_0_13_278 l_0_13_278)))
 (let ((?x74471 (* l_0_13_277 l_0_13_277)))
 (let ((?x74469 (* l_0_13_276 l_0_13_276)))
 (let ((?x74467 (* l_0_13_275 l_0_13_275)))
 (let ((?x74465 (* l_0_13_274 l_0_13_274)))
 (let ((?x70636 (* 2.0 l_0_13_267)))
 (let ((?x74426 (* ?x70636 l_0_13_278)))
 (let ((?x70633 (* 2.0 l_0_13_266)))
 (let ((?x74422 (* ?x70633 l_0_13_277)))
 (let ((?x70630 (* 2.0 l_0_13_265)))
 (let ((?x74418 (* ?x70630 l_0_13_276)))
 (let ((?x70627 (* 2.0 l_0_13_264)))
 (let ((?x74414 (* ?x70627 l_0_13_275)))
 (let ((?x74464 (- (- (- (- (* (* (- 2.0) l_0_13_263) l_0_13_274) ?x74414) ?x74418) ?x74422) ?x74426)))
 (let ((?x74478 (+ (+ (+ (+ (+ (+ (+ ?x74464 ?x74465) ?x74467) ?x74469) ?x74471) ?x74473) ?x74475) ?x74477)))
 (= ?x74478 0.0)))))))))))))))))))
(assert
 (let ((?x74477 (* l_0_13_280 l_0_13_280)))
 (let ((?x74475 (* l_0_13_279 l_0_13_279)))
 (let ((?x74473 (* l_0_13_278 l_0_13_278)))
 (let ((?x74471 (* l_0_13_277 l_0_13_277)))
 (let ((?x74469 (* l_0_13_276 l_0_13_276)))
 (let ((?x74493 (- (- (* (- l_0_13_274) l_0_13_274) (* l_0_13_275 l_0_13_275)) ?x74469)))
 (= (- (- (- (- ?x74493 ?x74471) ?x74473) ?x74475) ?x74477) 0.0))))))))
(assert
 (let ((?x22948 (- (+ (* l_0_13_254 l_0_13_254) (* l_0_13_255 l_0_13_255)) (* (* 2.0 l_0_13_326) l_0_13_335))))
 (let ((?x74504 (- (- ?x22948 (* (* 2.0 l_0_13_327) l_0_13_336)) (* (* 2.0 l_0_13_362) l_0_13_371))))
 (let ((?x74508 (- (- ?x74504 (* (* 2.0 l_0_13_363) l_0_13_372)) (* (* 2.0 l_0_13_398) l_0_13_407))))
 (let ((?x74512 (- (- ?x74508 (* (* 2.0 l_0_13_399) l_0_13_408)) (* (* 2.0 l_0_13_434) l_0_13_443))))
 (let ((?x74516 (- (- ?x74512 (* (* 2.0 l_0_13_435) l_0_13_444)) (* (* 2.0 l_0_13_470) l_0_13_479))))
 (= (- ?x74516 (* (* 2.0 l_0_13_471) l_0_13_480)) 0.0)))))))
(assert
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x73976 (* ?x65988 l_0_13_257)))
 (let ((?x74556 (- (+ (* (* 2.0 l_0_13_254) l_0_13_256) ?x73976) (* (* 2.0 l_0_13_328) l_0_13_335))))
 (let ((?x74560 (- (- ?x74556 (* (* 2.0 l_0_13_329) l_0_13_336)) (* (* 2.0 l_0_13_330) l_0_13_337))))
 (let ((?x74564 (- (- ?x74560 (* (* 2.0 l_0_13_364) l_0_13_371)) (* (* 2.0 l_0_13_365) l_0_13_372))))
 (let ((?x74568 (- (- ?x74564 (* (* 2.0 l_0_13_366) l_0_13_373)) (* (* 2.0 l_0_13_400) l_0_13_407))))
 (let ((?x74572 (- (- ?x74568 (* (* 2.0 l_0_13_401) l_0_13_408)) (* (* 2.0 l_0_13_402) l_0_13_409))))
 (let ((?x74576 (- (- ?x74572 (* (* 2.0 l_0_13_436) l_0_13_443)) (* (* 2.0 l_0_13_437) l_0_13_444))))
 (let ((?x74580 (- (- ?x74576 (* (* 2.0 l_0_13_438) l_0_13_445)) (* (* 2.0 l_0_13_472) l_0_13_479))))
 (let ((?x74584 (- (- ?x74580 (* (* 2.0 l_0_13_473) l_0_13_480)) (* (* 2.0 l_0_13_474) l_0_13_481))))
 (= ?x74584 0.0))))))))))))
(assert
 (let ((?x74682 (* l_0_13_483 l_0_13_483)))
 (let ((?x74680 (* l_0_13_482 l_0_13_482)))
 (let ((?x74678 (* l_0_13_481 l_0_13_481)))
 (let ((?x74676 (* l_0_13_480 l_0_13_480)))
 (let ((?x74674 (* l_0_13_479 l_0_13_479)))
 (let ((?x74672 (* l_0_13_447 l_0_13_447)))
 (let ((?x74670 (* l_0_13_446 l_0_13_446)))
 (let ((?x74668 (* l_0_13_445 l_0_13_445)))
 (let ((?x74666 (* l_0_13_444 l_0_13_444)))
 (let ((?x74664 (* l_0_13_443 l_0_13_443)))
 (let ((?x74662 (* l_0_13_411 l_0_13_411)))
 (let ((?x74660 (* l_0_13_410 l_0_13_410)))
 (let ((?x74658 (* l_0_13_409 l_0_13_409)))
 (let ((?x74656 (* l_0_13_408 l_0_13_408)))
 (let ((?x74654 (* l_0_13_407 l_0_13_407)))
 (let ((?x74652 (* l_0_13_375 l_0_13_375)))
 (let ((?x74650 (* l_0_13_374 l_0_13_374)))
 (let ((?x74648 (* l_0_13_373 l_0_13_373)))
 (let ((?x74646 (* l_0_13_372 l_0_13_372)))
 (let ((?x74644 (* l_0_13_371 l_0_13_371)))
 (let ((?x74642 (* l_0_13_339 l_0_13_339)))
 (let ((?x74640 (* l_0_13_338 l_0_13_338)))
 (let ((?x74638 (* l_0_13_337 l_0_13_337)))
 (let ((?x74636 (* l_0_13_336 l_0_13_336)))
 (let ((?x74634 (* l_0_13_335 l_0_13_335)))
 (let ((?x65988 (* 2.0 l_0_13_255)))
 (let ((?x74063 (* ?x65988 l_0_13_264)))
 (let ((?x74639 (- (- (- (+ (* (* 2.0 l_0_13_254) l_0_13_263) ?x74063) ?x74634) ?x74636) ?x74638)))
 (let ((?x74653 (- (- (- (- (- (- (- ?x74639 ?x74640) ?x74642) ?x74644) ?x74646) ?x74648) ?x74650) ?x74652)))
 (let ((?x74667 (- (- (- (- (- (- (- ?x74653 ?x74654) ?x74656) ?x74658) ?x74660) ?x74662) ?x74664) ?x74666)))
 (let ((?x74681 (- (- (- (- (- (- (- ?x74667 ?x74668) ?x74670) ?x74672) ?x74674) ?x74676) ?x74678) ?x74680)))
 (= (- ?x74681 ?x74682) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x74363 (* l_0_13_258 l_0_13_258)))
 (let ((?x74733 (+ (+ (* l_0_13_256 l_0_13_256) (* l_0_13_257 l_0_13_257)) ?x74363)))
 (= ?x74733 0.0))))
(assert
 (let ((?x66653 (* 2.0 l_0_13_258)))
 (let ((?x74381 (* ?x66653 l_0_13_265)))
 (let ((?x66650 (* 2.0 l_0_13_257)))
 (let ((?x74377 (* ?x66650 l_0_13_264)))
 (= (+ (+ (* (* 2.0 l_0_13_256) l_0_13_263) ?x74377) ?x74381) 0.0))))))
(assert
 (let ((?x74428 (* l_0_13_267 l_0_13_267)))
 (let ((?x74424 (* l_0_13_266 l_0_13_266)))
 (let ((?x74420 (* l_0_13_265 l_0_13_265)))
 (let ((?x18647 (+ (+ (* l_0_13_263 l_0_13_263) (* l_0_13_264 l_0_13_264)) ?x74420)))
 (= (+ (+ ?x18647 ?x74424) ?x74428) 0.0))))))
(assert
 (let ((?x53507 (* l_0_13_471 l_0_13_471)))
 (let ((?x53472 (* l_0_13_470 l_0_13_470)))
 (let ((?x23081 (* l_0_13_435 l_0_13_435)))
 (let ((?x53505 (* l_0_13_434 l_0_13_434)))
 (let ((?x23134 (* l_0_13_399 l_0_13_399)))
 (let ((?x53499 (* l_0_13_398 l_0_13_398)))
 (let ((?x51849 (* l_0_13_363 l_0_13_363)))
 (let ((?x23069 (* l_0_13_362 l_0_13_362)))
 (let ((?x53473 (- (- (* (- l_0_13_326) l_0_13_326) (* l_0_13_327 l_0_13_327)) ?x23069)))
 (let ((?x23181 (- (- (- (- (- (- (- ?x53473 ?x51849) ?x53499) ?x23134) ?x53505) ?x23081) ?x53472) ?x53507)))
 (= ?x23181 0.0))))))))))))
(assert
 (let ((?x74752 (- (* (* (- 2.0) l_0_13_326) l_0_13_328) (* (* 2.0 l_0_13_327) l_0_13_329))))
 (let ((?x74756 (- (- ?x74752 (* (* 2.0 l_0_13_362) l_0_13_364)) (* (* 2.0 l_0_13_363) l_0_13_365))))
 (let ((?x74760 (- (- ?x74756 (* (* 2.0 l_0_13_398) l_0_13_400)) (* (* 2.0 l_0_13_399) l_0_13_401))))
 (let ((?x74764 (- (- ?x74760 (* (* 2.0 l_0_13_434) l_0_13_436)) (* (* 2.0 l_0_13_435) l_0_13_437))))
 (let ((?x74768 (- (- ?x74764 (* (* 2.0 l_0_13_470) l_0_13_472)) (* (* 2.0 l_0_13_471) l_0_13_473))))
 (= ?x74768 0.0)))))))
(assert
 (let ((?x74838 (* l_0_13_474 l_0_13_474)))
 (let ((?x74836 (* l_0_13_473 l_0_13_473)))
 (let ((?x74834 (* l_0_13_472 l_0_13_472)))
 (let ((?x74832 (* l_0_13_438 l_0_13_438)))
 (let ((?x74830 (* l_0_13_437 l_0_13_437)))
 (let ((?x74828 (* l_0_13_436 l_0_13_436)))
 (let ((?x74826 (* l_0_13_402 l_0_13_402)))
 (let ((?x74824 (* l_0_13_401 l_0_13_401)))
 (let ((?x74822 (* l_0_13_400 l_0_13_400)))
 (let ((?x74820 (* l_0_13_366 l_0_13_366)))
 (let ((?x74818 (* l_0_13_365 l_0_13_365)))
 (let ((?x74816 (* l_0_13_364 l_0_13_364)))
 (let ((?x74814 (* l_0_13_330 l_0_13_330)))
 (let ((?x74815 (- (- (* (- l_0_13_328) l_0_13_328) (* l_0_13_329 l_0_13_329)) ?x74814)))
 (let ((?x74829 (- (- (- (- (- (- (- ?x74815 ?x74816) ?x74818) ?x74820) ?x74822) ?x74824) ?x74826) ?x74828)))
 (= (- (- (- (- (- ?x74829 ?x74830) ?x74832) ?x74834) ?x74836) ?x74838) 0.0)))))))))))))))))
(assert
 (>= l_0_13_1 0.0))
(assert
 (>= l_0_13_3 0.0))
(assert
 (>= l_0_13_6 0.0))
(assert
 (>= l_0_13_10 0.0))
(assert
 (>= l_0_13_15 0.0))
(assert
 (>= l_0_13_21 0.0))
(assert
 (>= l_0_13_28 0.0))
(assert
 (>= l_0_13_36 0.0))
(assert
 (>= l_0_13_37 0.0))
(assert
 (>= l_0_13_39 0.0))
(assert
 (>= l_0_13_42 0.0))
(assert
 (>= l_0_13_46 0.0))
(assert
 (>= l_0_13_51 0.0))
(assert
 (>= l_0_13_57 0.0))
(assert
 (>= l_0_13_64 0.0))
(assert
 (>= l_0_13_72 0.0))
(assert
 (>= l_0_13_73 0.0))
(assert
 (>= l_0_13_75 0.0))
(assert
 (>= l_0_13_78 0.0))
(assert
 (>= l_0_13_82 0.0))
(assert
 (>= l_0_13_87 0.0))
(assert
 (>= l_0_13_93 0.0))
(assert
 (>= l_0_13_100 0.0))
(assert
 (>= l_0_13_108 0.0))
(assert
 (>= l_0_13_109 0.0))
(assert
 (>= l_0_13_111 0.0))
(assert
 (>= l_0_13_114 0.0))
(assert
 (>= l_0_13_118 0.0))
(assert
 (>= l_0_13_123 0.0))
(assert
 (>= l_0_13_129 0.0))
(assert
 (>= l_0_13_136 0.0))
(assert
 (>= l_0_13_144 0.0))
(assert
 (>= l_0_13_145 0.0))
(assert
 (>= l_0_13_147 0.0))
(assert
 (>= l_0_13_150 0.0))
(assert
 (>= l_0_13_154 0.0))
(assert
 (>= l_0_13_159 0.0))
(assert
 (>= l_0_13_165 0.0))
(assert
 (>= l_0_13_172 0.0))
(assert
 (>= l_0_13_180 0.0))
(assert
 (>= l_0_13_181 0.0))
(assert
 (>= l_0_13_183 0.0))
(assert
 (>= l_0_13_186 0.0))
(assert
 (>= l_0_13_190 0.0))
(assert
 (>= l_0_13_195 0.0))
(assert
 (>= l_0_13_201 0.0))
(assert
 (>= l_0_13_208 0.0))
(assert
 (>= l_0_13_216 0.0))
(assert
 (>= l_0_13_217 0.0))
(assert
 (>= l_0_13_219 0.0))
(assert
 (>= l_0_13_222 0.0))
(assert
 (>= l_0_13_226 0.0))
(assert
 (>= l_0_13_231 0.0))
(assert
 (>= l_0_13_237 0.0))
(assert
 (>= l_0_13_244 0.0))
(assert
 (>= l_0_13_252 0.0))
(assert
 (>= l_0_13_253 0.0))
(assert
 (>= l_0_13_255 0.0))
(assert
 (>= l_0_13_258 0.0))
(assert
 (>= l_0_13_262 0.0))
(assert
 (>= l_0_13_267 0.0))
(assert
 (>= l_0_13_273 0.0))
(assert
 (>= l_0_13_280 0.0))
(assert
 (>= l_0_13_288 0.0))
(assert
 (>= l_0_13_289 0.0))
(assert
 (>= l_0_13_291 0.0))
(assert
 (>= l_0_13_294 0.0))
(assert
 (>= l_0_13_298 0.0))
(assert
 (>= l_0_13_303 0.0))
(assert
 (>= l_0_13_309 0.0))
(assert
 (>= l_0_13_316 0.0))
(assert
 (>= l_0_13_324 0.0))
(assert
 (>= l_0_13_325 0.0))
(assert
 (>= l_0_13_327 0.0))
(assert
 (>= l_0_13_330 0.0))
(assert
 (>= l_0_13_334 0.0))
(assert
 (>= l_0_13_339 0.0))
(assert
 (>= l_0_13_345 0.0))
(assert
 (>= l_0_13_352 0.0))
(assert
 (>= l_0_13_360 0.0))
(assert
 (>= l_0_13_361 0.0))
(assert
 (>= l_0_13_363 0.0))
(assert
 (>= l_0_13_366 0.0))
(assert
 (>= l_0_13_370 0.0))
(assert
 (>= l_0_13_375 0.0))
(assert
 (>= l_0_13_381 0.0))
(assert
 (>= l_0_13_388 0.0))
(assert
 (>= l_0_13_396 0.0))
(assert
 (>= l_0_13_397 0.0))
(assert
 (>= l_0_13_399 0.0))
(assert
 (>= l_0_13_402 0.0))
(assert
 (>= l_0_13_406 0.0))
(assert
 (>= l_0_13_411 0.0))
(assert
 (>= l_0_13_417 0.0))
(assert
 (>= l_0_13_424 0.0))
(assert
 (>= l_0_13_432 0.0))
(assert
 (>= l_0_13_433 0.0))
(assert
 (>= l_0_13_435 0.0))
(assert
 (>= l_0_13_438 0.0))
(assert
 (>= l_0_13_442 0.0))
(assert
 (>= l_0_13_447 0.0))
(assert
 (>= l_0_13_453 0.0))
(assert
 (>= l_0_13_460 0.0))
(assert
 (>= l_0_13_468 0.0))
(assert
 (>= l_0_13_469 0.0))
(assert
 (>= l_0_13_471 0.0))
(assert
 (>= l_0_13_474 0.0))
(assert
 (>= l_0_13_478 0.0))
(assert
 (>= l_0_13_483 0.0))
(assert
 (>= l_0_13_489 0.0))
(assert
 (>= l_0_13_496 0.0))
(assert
 (>= l_0_13_504 0.0))
(assert
 (let ((?x74985 (* l_0_14_291 l_0_14_291)))
 (let ((?x74983 (* l_0_14_290 l_0_14_290)))
 (let ((?x74981 (* l_0_14_183 l_0_14_183)))
 (let ((?x74979 (* l_0_14_182 l_0_14_182)))
 (let ((?x74980 (- (+ (* l_0_14_146 l_0_14_146) (* l_0_14_147 l_0_14_147)) ?x74979)))
 (let ((?x74989 (- (+ (+ (- ?x74980 ?x74981) ?x74983) ?x74985) (* (* 2.0 l_0_14_326) l_0_14_340))))
 (let ((?x74995 (- (- ?x74989 (* (* 2.0 l_0_14_327) l_0_14_341)) (* (* 2.0 l_0_14_362) l_0_14_376))))
 (let ((?x75001 (- (- ?x74995 (* (* 2.0 l_0_14_363) l_0_14_377)) (* (* 2.0 l_0_14_398) l_0_14_412))))
 (let ((?x75007 (- (- ?x75001 (* (* 2.0 l_0_14_399) l_0_14_413)) (* (* 2.0 l_0_14_434) l_0_14_448))))
 (let ((?x75013 (- (- ?x75007 (* (* 2.0 l_0_14_435) l_0_14_449)) (* (* 2.0 l_0_14_470) l_0_14_484))))
 (let ((?x75019 (- (- ?x75013 (* (* 2.0 l_0_14_471) l_0_14_485)) (* (* 2.0 l_0_14_506) l_0_14_520))))
 (= (+ (- ?x75019 (* (* 2.0 l_0_14_507) l_0_14_521)) 1.0) 0.0)))))))))))))
(assert
 (let ((?x75075 (* l_0_14_39 l_0_14_39)))
 (let ((?x75073 (* l_0_14_38 l_0_14_38)))
 (let ((?x23106 (* l_0_14_3 l_0_14_3)))
 (let ((?x53642 (* l_0_14_2 l_0_14_2)))
 (let ((?x74981 (* l_0_14_183 l_0_14_183)))
 (let ((?x74979 (* l_0_14_182 l_0_14_182)))
 (let ((?x53638 (+ (- (* (- l_0_14_146) l_0_14_146) (* l_0_14_147 l_0_14_147)) ?x74979)))
 (let ((?x23327 (- (- (- (+ ?x53638 ?x74981) ?x53642) (* (* 2.0 l_0_14_218) l_0_14_220)) (* (* 2.0 l_0_14_219) l_0_14_221))))
 (let ((?x75060 (- (- (- ?x23327 ?x23106) (* (* 2.0 l_0_14_328) l_0_14_353)) (* (* 2.0 l_0_14_329) l_0_14_354))))
 (let ((?x75066 (- (- ?x75060 (* (* 2.0 l_0_14_330) l_0_14_355)) (* (* 2.0 l_0_14_364) l_0_14_389))))
 (let ((?x75072 (- (- ?x75066 (* (* 2.0 l_0_14_365) l_0_14_390)) (* (* 2.0 l_0_14_366) l_0_14_391))))
 (let ((?x75082 (- (- (+ (+ ?x75072 ?x75073) ?x75075) (* (* 2.0 l_0_14_400) l_0_14_425)) (* (* 2.0 l_0_14_401) l_0_14_426))))
 (let ((?x75088 (- (- ?x75082 (* (* 2.0 l_0_14_402) l_0_14_427)) (* (* 2.0 l_0_14_436) l_0_14_461))))
 (let ((?x75094 (- (- ?x75088 (* (* 2.0 l_0_14_437) l_0_14_462)) (* (* 2.0 l_0_14_438) l_0_14_463))))
 (let ((?x75100 (- (- ?x75094 (* (* 2.0 l_0_14_472) l_0_14_497)) (* (* 2.0 l_0_14_473) l_0_14_498))))
 (let ((?x75106 (- (- ?x75100 (* (* 2.0 l_0_14_474) l_0_14_499)) (* (* 2.0 l_0_14_508) l_0_14_533))))
 (let ((?x75112 (- (- ?x75106 (* (* 2.0 l_0_14_509) l_0_14_534)) (* (* 2.0 l_0_14_510) l_0_14_535))))
 (= (- ?x75112 1.0) 0.0)))))))))))))))))))
(assert
 (let ((?x75164 (* l_0_14_37 l_0_14_37)))
 (let ((?x75162 (* l_0_14_181 l_0_14_181)))
 (let ((?x75163 (+ (- (* (- l_0_14_1) l_0_14_1) (* l_0_14_145 l_0_14_145)) ?x75162)))
 (= (+ ?x75163 ?x75164) 0.0)))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75213 (* ?x75212 l_0_14_38)))
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x75210 (* ?x75209 l_0_14_319)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x75207 (* ?x75206 l_0_14_318)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x75204 (* ?x75203 l_0_14_317)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75198 (* ?x75197 l_0_14_182)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75195 (* ?x75194 l_0_14_146)))
 (let ((?x75178 (+ (* (* (- 2.0) l_0_14_1) l_0_14_2) (* (* 2.0 l_0_14_101) l_0_14_76))))
 (let ((?x75184 (+ (+ ?x75178 (* (* 2.0 l_0_14_102) l_0_14_77)) (* (* 2.0 l_0_14_103) l_0_14_78))))
 (let ((?x75190 (- (- ?x75184 (* (* 2.0 l_0_14_112) l_0_14_137)) (* (* 2.0 l_0_14_113) l_0_14_138))))
 (let ((?x75202 (- (+ (- (- ?x75190 (* (* 2.0 l_0_14_114) l_0_14_139)) ?x75195) ?x75198) (* (* 2.0 l_0_14_217) l_0_14_220))))
 (= (+ (- (- (- ?x75202 ?x75204) ?x75207) ?x75210) ?x75213) 0.0))))))))))))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75263 (* ?x75212 l_0_14_40)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75261 (* ?x75197 l_0_14_184)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x23617 (* ?x75194 l_0_14_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_1) l_0_14_4) ?x23617) ?x75261) ?x75263) 0.0))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75279 (* ?x75212 l_0_14_43)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75277 (* ?x75197 l_0_14_187)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75275 (* ?x75194 l_0_14_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_1) l_0_14_7) ?x75275) ?x75277) ?x75279) 0.0))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75302 (* ?x75212 l_0_14_47)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75300 (* ?x75197 l_0_14_191)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75293 (* ?x75194 l_0_14_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_1) l_0_14_11) ?x75293) ?x75300) ?x75302) 0.0))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75325 (* ?x75212 l_0_14_52)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75323 (* ?x75197 l_0_14_196)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75316 (* ?x75194 l_0_14_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_1) l_0_14_16) ?x75316) ?x75323) ?x75325) 0.0))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75348 (* ?x75212 l_0_14_58)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75346 (* ?x75197 l_0_14_202)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75344 (* ?x75194 l_0_14_166)))
 (let ((?x23617 (* ?x75194 l_0_14_148)))
 (let ((?x75342 (+ (* (* (- 2.0) l_0_14_1) l_0_14_22) (* (* 1.0 l_0_14_109) l_0_14_112))))
 (let ((?x75352 (- (+ (+ (- (- ?x75342 ?x23617) ?x75344) ?x75346) ?x75348) (* (* 1.0 l_0_14_73) l_0_14_76))))
 (= ?x75352 0.0)))))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75375 (* ?x75212 l_0_14_65)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75373 (* ?x75197 l_0_14_209)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x23701 (* ?x75194 l_0_14_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_1) l_0_14_29) ?x23701) ?x75373) ?x75375) 0.0))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75420 (* ?x75419 l_0_14_41)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75417 (* ?x75416 l_0_14_40)))
 (let ((?x75413 (* 2.0 l_0_14_3)))
 (let ((?x75414 (* ?x75413 l_0_14_5)))
 (let ((?x75411 (* l_0_14_222 l_0_14_222)))
 (let ((?x75409 (* l_0_14_221 l_0_14_221)))
 (let ((?x75407 (* l_0_14_220 l_0_14_220)))
 (let ((?x75404 (* 2.0 l_0_14_2)))
 (let ((?x75405 (* ?x75404 l_0_14_4)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75402 (* ?x75401 l_0_14_185)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75399 (* ?x75398 l_0_14_184)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75396 (* ?x75390 l_0_14_149)))
 (let ((?x75406 (- (+ (+ (- (* (* (- 2.0) l_0_14_146) l_0_14_148) ?x75396) ?x75399) ?x75402) ?x75405)))
 (= (+ (+ (- (- (- (- ?x75406 ?x75407) ?x75409) ?x75411) ?x75414) ?x75417) ?x75420) 0.0))))))))))))))))))))
(assert
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x75486 (* ?x75485 l_0_14_67)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x75483 (* ?x75482 l_0_14_66)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x75480 (* ?x75479 l_0_14_65)))
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75477 (* ?x75419 l_0_14_44)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75475 (* ?x75416 l_0_14_43)))
 (let ((?x75472 (* 2.0 l_0_14_31)))
 (let ((?x75473 (* ?x75472 l_0_14_6)))
 (let ((?x75469 (* 2.0 l_0_14_30)))
 (let ((?x75470 (* ?x75469 l_0_14_5)))
 (let ((?x75413 (* 2.0 l_0_14_3)))
 (let ((?x75467 (* ?x75413 l_0_14_8)))
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x75210 (* ?x75209 l_0_14_319)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x75207 (* ?x75206 l_0_14_318)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x75204 (* ?x75203 l_0_14_317)))
 (let ((?x75461 (* 2.0 l_0_14_29)))
 (let ((?x75462 (* ?x75461 l_0_14_4)))
 (let ((?x75404 (* 2.0 l_0_14_2)))
 (let ((?x75450 (* ?x75404 l_0_14_7)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75448 (* ?x75401 l_0_14_188)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75446 (* ?x75398 l_0_14_187)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75444 (* ?x75390 l_0_14_152)))
 (let ((?x75451 (- (+ (+ (- (* (* (- 2.0) l_0_14_146) l_0_14_151) ?x75444) ?x75446) ?x75448) ?x75450)))
 (let ((?x75457 (- (- ?x75451 (* (* 2.0 l_0_14_220) l_0_14_223)) (* (* 2.0 l_0_14_221) l_0_14_224))))
 (let ((?x75465 (- (- (+ (- ?x75457 (* (* 2.0 l_0_14_222) l_0_14_225)) ?x75462) ?x75204) ?x75207)))
 (let ((?x75481 (- (+ (+ (+ (+ (- (- ?x75465 ?x75210) ?x75467) ?x75470) ?x75473) ?x75475) ?x75477) ?x75480)))
 (= (- (- ?x75481 ?x75483) ?x75486) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75565 (* ?x75419 l_0_14_48)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75563 (* ?x75416 l_0_14_47)))
 (let ((?x75560 (* 2.0 l_0_14_258)))
 (let ((?x75561 (* ?x75560 l_0_14_283)))
 (let ((?x75557 (* 2.0 l_0_14_257)))
 (let ((?x75558 (* ?x75557 l_0_14_282)))
 (let ((?x75554 (* 2.0 l_0_14_256)))
 (let ((?x75555 (* ?x75554 l_0_14_281)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75546 (* ?x75401 l_0_14_192)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75544 (* ?x75398 l_0_14_191)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75542 (* ?x75390 l_0_14_156)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x75540 (* ?x75539 l_0_14_155)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x75537 (* ?x75536 l_0_14_3)))
 (let ((?x75545 (+ (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_2) ?x75537) ?x75540) ?x75542) ?x75544)))
 (let ((?x75551 (- (- (+ ?x75545 ?x75546) (* (* 2.0 l_0_14_220) l_0_14_227)) (* (* 2.0 l_0_14_221) l_0_14_228))))
 (let ((?x75562 (+ (+ (+ (- ?x75551 (* (* 2.0 l_0_14_222) l_0_14_229)) ?x75555) ?x75558) ?x75561)))
 (= (+ (+ ?x75562 ?x75563) ?x75565) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75650 (* ?x75419 l_0_14_53)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75648 (* ?x75416 l_0_14_52)))
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x75210 (* ?x75209 l_0_14_319)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x75207 (* ?x75206 l_0_14_318)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x75204 (* ?x75203 l_0_14_317)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x75637 (* ?x75636 l_0_14_211)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x75634 (* ?x75633 l_0_14_210)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x75631 (* ?x75630 l_0_14_209)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75628 (* ?x75401 l_0_14_197)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75626 (* ?x75398 l_0_14_196)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x75624 (* ?x75623 l_0_14_3)))
 (let ((?x75620 (* 2.0 l_0_14_16)))
 (let ((?x75621 (* ?x75620 l_0_14_2)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75618 (* ?x75617 l_0_14_175)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x75615 (* ?x75614 l_0_14_174)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x75602 (* ?x75600 l_0_14_173)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75596 (* ?x75390 l_0_14_161)))
 (let ((?x75619 (+ (+ (+ (- (* (* (- 2.0) l_0_14_146) l_0_14_160) ?x75596) ?x75602) ?x75615) ?x75618)))
 (let ((?x75638 (- (- (- (+ (+ (- (- ?x75619 ?x75621) ?x75624) ?x75626) ?x75628) ?x75631) ?x75634) ?x75637)))
 (let ((?x75642 (- (- ?x75638 (* (* 2.0 l_0_14_220) l_0_14_232)) (* (* 2.0 l_0_14_221) l_0_14_233))))
 (let ((?x75647 (+ (+ (+ (- ?x75642 (* (* 2.0 l_0_14_222) l_0_14_234)) ?x75204) ?x75207) ?x75210)))
 (= (+ (+ ?x75647 ?x75648) ?x75650) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75723 (* ?x75419 l_0_14_59)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75721 (* ?x75416 l_0_14_58)))
 (let ((?x75560 (* 2.0 l_0_14_258)))
 (let ((?x75561 (* ?x75560 l_0_14_283)))
 (let ((?x75557 (* 2.0 l_0_14_257)))
 (let ((?x75558 (* ?x75557 l_0_14_282)))
 (let ((?x75554 (* 2.0 l_0_14_256)))
 (let ((?x75555 (* ?x75554 l_0_14_281)))
 (let ((?x75715 (* 2.0 l_0_14_23)))
 (let ((?x75716 (* ?x75715 l_0_14_3)))
 (let ((?x75404 (* 2.0 l_0_14_2)))
 (let ((?x75707 (* ?x75404 l_0_14_22)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75705 (* ?x75401 l_0_14_203)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75703 (* ?x75398 l_0_14_202)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75701 (* ?x75390 l_0_14_167)))
 (let ((?x75396 (* ?x75390 l_0_14_149)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x75698 (* ?x75539 l_0_14_166)))
 (let ((?x24026 (* ?x75539 l_0_14_148)))
 (let ((?x24085 (+ (* (* 1.0 l_0_14_110) l_0_14_112) (* (* 1.0 l_0_14_111) l_0_14_113))))
 (let ((?x75708 (- (+ (+ (- (- (- (- ?x24085 ?x24026) ?x75698) ?x75396) ?x75701) ?x75703) ?x75705) ?x75707)))
 (let ((?x75712 (- (- ?x75708 (* (* 2.0 l_0_14_220) l_0_14_238)) (* (* 2.0 l_0_14_221) l_0_14_239))))
 (let ((?x75719 (- (- (- (- ?x75712 (* (* 2.0 l_0_14_222) l_0_14_240)) ?x75716) ?x75555) ?x75558)))
 (let ((?x75727 (- (+ (+ (- ?x75719 ?x75561) ?x75721) ?x75723) (* (* 1.0 l_0_14_74) l_0_14_76))))
 (= (- ?x75727 (* (* 1.0 l_0_14_75) l_0_14_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75793 (* ?x75419 l_0_14_66)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75791 (* ?x75416 l_0_14_65)))
 (let ((?x75413 (* 2.0 l_0_14_3)))
 (let ((?x75789 (* ?x75413 l_0_14_30)))
 (let ((?x75404 (* 2.0 l_0_14_2)))
 (let ((?x75781 (* ?x75404 l_0_14_29)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75779 (* ?x75401 l_0_14_210)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75777 (* ?x75398 l_0_14_209)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75775 (* ?x75390 l_0_14_174)))
 (let ((?x75782 (- (+ (+ (- (* (* (- 2.0) l_0_14_146) l_0_14_173) ?x75775) ?x75777) ?x75779) ?x75781)))
 (let ((?x75786 (- (- ?x75782 (* (* 2.0 l_0_14_220) l_0_14_245)) (* (* 2.0 l_0_14_221) l_0_14_246))))
 (let ((?x75794 (+ (+ (- (- ?x75786 (* (* 2.0 l_0_14_222) l_0_14_247)) ?x75789) ?x75791) ?x75793)))
 (= ?x75794 0.0)))))))))))))))))))
(assert
 (let ((?x75838 (* l_0_14_6 l_0_14_6)))
 (let ((?x75836 (* l_0_14_5 l_0_14_5)))
 (let ((?x75834 (* l_0_14_42 l_0_14_42)))
 (let ((?x75832 (* l_0_14_41 l_0_14_41)))
 (let ((?x75830 (* l_0_14_40 l_0_14_40)))
 (let ((?x75828 (* l_0_14_4 l_0_14_4)))
 (let ((?x75826 (* l_0_14_186 l_0_14_186)))
 (let ((?x75824 (* l_0_14_185 l_0_14_185)))
 (let ((?x75822 (* l_0_14_184 l_0_14_184)))
 (let ((?x75820 (* l_0_14_150 l_0_14_150)))
 (let ((?x75821 (- (- (* (- l_0_14_148) l_0_14_148) (* l_0_14_149 l_0_14_149)) ?x75820)))
 (let ((?x75835 (+ (+ (+ (- (+ (+ (+ ?x75821 ?x75822) ?x75824) ?x75826) ?x75828) ?x75830) ?x75832) ?x75834)))
 (= (- (- ?x75835 ?x75836) ?x75838) 0.0))))))))))))))
(assert
 (let ((?x75885 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x75882 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x75879 (* ?x75485 l_0_14_45)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x75877 (* ?x75482 l_0_14_44)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x75875 (* ?x75479 l_0_14_43)))
 (let ((?x75873 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x75870 (* ?x75636 l_0_14_189)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x75868 (* ?x75633 l_0_14_188)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x75866 (* ?x75630 l_0_14_187)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75864 (* ?x75617 l_0_14_153)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x75862 (* ?x75614 l_0_14_152)))
 (let ((?x75869 (+ (+ (- (- (* (* (- 2.0) l_0_14_148) l_0_14_151) ?x75862) ?x75864) ?x75866) ?x75868)))
 (let ((?x75886 (- (- (+ (+ (+ (- (+ ?x75869 ?x75870) ?x75873) ?x75875) ?x75877) ?x75879) ?x75882) ?x75885)))
 (= ?x75886 0.0)))))))))))))))))))))))
(assert
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x75930 (* ?x75485 l_0_14_49)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x75928 (* ?x75482 l_0_14_48)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x75926 (* ?x75479 l_0_14_47)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x75924 (* ?x75636 l_0_14_193)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x75922 (* ?x75633 l_0_14_192)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x75920 (* ?x75630 l_0_14_191)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75918 (* ?x75617 l_0_14_157)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x75916 (* ?x75614 l_0_14_156)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x75914 (* ?x75600 l_0_14_155)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x75912 (* ?x75911 l_0_14_6)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x75909 (* ?x75536 l_0_14_5)))
 (let ((?x75917 (- (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_4) ?x75909) ?x75912) ?x75914) ?x75916)))
 (let ((?x75931 (+ (+ (+ (+ (+ (+ (- ?x75917 ?x75918) ?x75920) ?x75922) ?x75924) ?x75926) ?x75928) ?x75930)))
 (= ?x75931 0.0))))))))))))))))))))))))))
(assert
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x75986 (* ?x75485 l_0_14_54)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x75984 (* ?x75482 l_0_14_53)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x75982 (* ?x75479 l_0_14_52)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x75980 (* ?x75636 l_0_14_198)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x75978 (* ?x75633 l_0_14_197)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x75976 (* ?x75630 l_0_14_196)))
 (let ((?x75973 (* 2.0 l_0_14_18)))
 (let ((?x75974 (* ?x75973 l_0_14_6)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x75971 (* ?x75623 l_0_14_5)))
 (let ((?x75620 (* 2.0 l_0_14_16)))
 (let ((?x75960 (* ?x75620 l_0_14_4)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75956 (* ?x75617 l_0_14_162)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x19351 (* ?x75614 l_0_14_161)))
 (let ((?x75972 (- (- (- (- (* (* (- 2.0) l_0_14_148) l_0_14_160) ?x19351) ?x75956) ?x75960) ?x75971)))
 (let ((?x75987 (+ (+ (+ (+ (+ (+ (- ?x75972 ?x75974) ?x75976) ?x75978) ?x75980) ?x75982) ?x75984) ?x75986)))
 (= ?x75987 0.0))))))))))))))))))))))))))
(assert
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x76044 (* ?x75485 l_0_14_60)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x76042 (* ?x75482 l_0_14_59)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x76040 (* ?x75479 l_0_14_58)))
 (let ((?x76037 (* 2.0 l_0_14_24)))
 (let ((?x76038 (* ?x76037 l_0_14_6)))
 (let ((?x75715 (* 2.0 l_0_14_23)))
 (let ((?x76035 (* ?x75715 l_0_14_5)))
 (let ((?x76032 (* 2.0 l_0_14_22)))
 (let ((?x76033 (* ?x76032 l_0_14_4)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x76030 (* ?x75636 l_0_14_204)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x76028 (* ?x75633 l_0_14_203)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x76026 (* ?x75630 l_0_14_202)))
 (let ((?x75820 (* l_0_14_150 l_0_14_150)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x76023 (* ?x75617 l_0_14_168)))
 (let ((?x24194 (* l_0_14_149 l_0_14_149)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x76020 (* ?x75614 l_0_14_167)))
 (let ((?x75842 (* l_0_14_148 l_0_14_148)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x76017 (* ?x75600 l_0_14_166)))
 (let ((?x76013 (+ (* (/ 1.0 2.0) (* l_0_14_112 l_0_14_112)) (* (/ 1.0 2.0) (* l_0_14_113 l_0_14_113)))))
 (let ((?x76021 (- (- (- (+ ?x76013 (* (/ 1.0 2.0) (* l_0_14_114 l_0_14_114))) ?x76017) ?x75842) ?x76020)))
 (let ((?x76034 (- (+ (+ (+ (- (- (- ?x76021 ?x24194) ?x76023) ?x75820) ?x76026) ?x76028) ?x76030) ?x76033)))
 (let ((?x76048 (- (+ (+ (+ (- (- ?x76034 ?x76035) ?x76038) ?x76040) ?x76042) ?x76044) (* (* (/ 1.0 2.0) l_0_14_76) l_0_14_76))))
 (let ((?x76054 (- (- ?x76048 (* (* (/ 1.0 2.0) l_0_14_77) l_0_14_77)) (* (* (/ 1.0 2.0) l_0_14_78) l_0_14_78))))
 (= ?x76054 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x75486 (* ?x75485 l_0_14_67)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x75483 (* ?x75482 l_0_14_66)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x75480 (* ?x75479 l_0_14_65)))
 (let ((?x75472 (* 2.0 l_0_14_31)))
 (let ((?x75473 (* ?x75472 l_0_14_6)))
 (let ((?x75469 (* 2.0 l_0_14_30)))
 (let ((?x75470 (* ?x75469 l_0_14_5)))
 (let ((?x75461 (* 2.0 l_0_14_29)))
 (let ((?x75462 (* ?x75461 l_0_14_4)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x75637 (* ?x75636 l_0_14_211)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x75634 (* ?x75633 l_0_14_210)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x75631 (* ?x75630 l_0_14_209)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75618 (* ?x75617 l_0_14_175)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x75615 (* ?x75614 l_0_14_174)))
 (let ((?x76098 (+ (+ (- (- (* (* (- 2.0) l_0_14_148) l_0_14_173) ?x75615) ?x75618) ?x75631) ?x75634)))
 (let ((?x76105 (+ (+ (+ (- (- (- (+ ?x76098 ?x75637) ?x75462) ?x75470) ?x75473) ?x75480) ?x75483) ?x75486)))
 (= ?x76105 0.0))))))))))))))))))))))))))
(assert
 (let ((?x76119 (* l_0_14_9 l_0_14_9)))
 (let ((?x76117 (* l_0_14_8 l_0_14_8)))
 (let ((?x76115 (* l_0_14_7 l_0_14_7)))
 (let ((?x76113 (* l_0_14_46 l_0_14_46)))
 (let ((?x76111 (* l_0_14_45 l_0_14_45)))
 (let ((?x24465 (* l_0_14_44 l_0_14_44)))
 (let ((?x24521 (* l_0_14_43 l_0_14_43)))
 (let ((?x24517 (* l_0_14_190 l_0_14_190)))
 (let ((?x54389 (* l_0_14_189 l_0_14_189)))
 (let ((?x54394 (* l_0_14_188 l_0_14_188)))
 (let ((?x54393 (* l_0_14_187 l_0_14_187)))
 (let ((?x17762 (* l_0_14_154 l_0_14_154)))
 (let ((?x17786 (* l_0_14_153 l_0_14_153)))
 (let ((?x24542 (* l_0_14_152 l_0_14_152)))
 (let ((?x24536 (- (- (* (- l_0_14_10) l_0_14_10) (* l_0_14_151 l_0_14_151)) ?x24542)))
 (let ((?x24462 (+ (+ (+ (+ (+ (- (- ?x24536 ?x17786) ?x17762) ?x54393) ?x54394) ?x54389) ?x24517) ?x24521)))
 (= (- (- (- (+ (+ (+ ?x24462 ?x24465) ?x76111) ?x76113) ?x76115) ?x76117) ?x76119) 0.0))))))))))))))))))
(assert
 (let ((?x76190 (* 2.0 l_0_14_46)))
 (let ((?x76191 (* ?x76190 l_0_14_50)))
 (let ((?x76187 (* 2.0 l_0_14_45)))
 (let ((?x76188 (* ?x76187 l_0_14_49)))
 (let ((?x76184 (* 2.0 l_0_14_44)))
 (let ((?x76185 (* ?x76184 l_0_14_48)))
 (let ((?x76181 (* 2.0 l_0_14_43)))
 (let ((?x76182 (* ?x76181 l_0_14_47)))
 (let ((?x76178 (* 2.0 l_0_14_190)))
 (let ((?x76179 (* ?x76178 l_0_14_194)))
 (let ((?x76175 (* 2.0 l_0_14_189)))
 (let ((?x76176 (* ?x76175 l_0_14_193)))
 (let ((?x76172 (* 2.0 l_0_14_188)))
 (let ((?x76173 (* ?x76172 l_0_14_192)))
 (let ((?x76169 (* 2.0 l_0_14_187)))
 (let ((?x76170 (* ?x76169 l_0_14_191)))
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76167 (* ?x76166 l_0_14_158)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76164 (* ?x76163 l_0_14_157)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76161 (* ?x76160 l_0_14_156)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76158 (* ?x76157 l_0_14_155)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x76155 (* ?x75911 l_0_14_9)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x76153 (* ?x75536 l_0_14_8)))
 (let ((?x76150 (* 2.0 l_0_14_11)))
 (let ((?x76151 (* ?x76150 l_0_14_7)))
 (let ((?x76159 (- (- (- (- (* (* (- 2.0) l_0_14_10) l_0_14_14) ?x76151) ?x76153) ?x76155) ?x76158)))
 (let ((?x76180 (+ (+ (+ (+ (- (- (- ?x76159 ?x76161) ?x76164) ?x76167) ?x76170) ?x76173) ?x76176) ?x76179)))
 (= (+ (+ (+ (+ ?x76180 ?x76182) ?x76185) ?x76188) ?x76191) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76190 (* 2.0 l_0_14_46)))
 (let ((?x76245 (* ?x76190 l_0_14_55)))
 (let ((?x76187 (* 2.0 l_0_14_45)))
 (let ((?x76243 (* ?x76187 l_0_14_54)))
 (let ((?x76184 (* 2.0 l_0_14_44)))
 (let ((?x76241 (* ?x76184 l_0_14_53)))
 (let ((?x76181 (* 2.0 l_0_14_43)))
 (let ((?x76239 (* ?x76181 l_0_14_52)))
 (let ((?x76178 (* 2.0 l_0_14_190)))
 (let ((?x76237 (* ?x76178 l_0_14_199)))
 (let ((?x76175 (* 2.0 l_0_14_189)))
 (let ((?x76235 (* ?x76175 l_0_14_198)))
 (let ((?x76172 (* 2.0 l_0_14_188)))
 (let ((?x76233 (* ?x76172 l_0_14_197)))
 (let ((?x76169 (* 2.0 l_0_14_187)))
 (let ((?x76231 (* ?x76169 l_0_14_196)))
 (let ((?x75973 (* 2.0 l_0_14_18)))
 (let ((?x76229 (* ?x75973 l_0_14_9)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x76227 (* ?x75623 l_0_14_8)))
 (let ((?x75620 (* 2.0 l_0_14_16)))
 (let ((?x76225 (* ?x75620 l_0_14_7)))
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76223 (* ?x76166 l_0_14_163)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76221 (* ?x76163 l_0_14_162)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76219 (* ?x76160 l_0_14_161)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76217 (* ?x76157 l_0_14_160)))
 (let ((?x76224 (- (- (- (- (* (* (- 2.0) l_0_14_10) l_0_14_19) ?x76217) ?x76219) ?x76221) ?x76223)))
 (let ((?x76238 (+ (+ (+ (+ (- (- (- ?x76224 ?x76225) ?x76227) ?x76229) ?x76231) ?x76233) ?x76235) ?x76237)))
 (= (+ (+ (+ (+ ?x76238 ?x76239) ?x76241) ?x76243) ?x76245) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76190 (* 2.0 l_0_14_46)))
 (let ((?x76310 (* ?x76190 l_0_14_61)))
 (let ((?x76187 (* 2.0 l_0_14_45)))
 (let ((?x76308 (* ?x76187 l_0_14_60)))
 (let ((?x76184 (* 2.0 l_0_14_44)))
 (let ((?x76306 (* ?x76184 l_0_14_59)))
 (let ((?x76181 (* 2.0 l_0_14_43)))
 (let ((?x76304 (* ?x76181 l_0_14_58)))
 (let ((?x76037 (* 2.0 l_0_14_24)))
 (let ((?x76302 (* ?x76037 l_0_14_9)))
 (let ((?x75715 (* 2.0 l_0_14_23)))
 (let ((?x76300 (* ?x75715 l_0_14_8)))
 (let ((?x76032 (* 2.0 l_0_14_22)))
 (let ((?x76298 (* ?x76032 l_0_14_7)))
 (let ((?x76178 (* 2.0 l_0_14_190)))
 (let ((?x76296 (* ?x76178 l_0_14_205)))
 (let ((?x76175 (* 2.0 l_0_14_189)))
 (let ((?x76294 (* ?x76175 l_0_14_204)))
 (let ((?x76172 (* 2.0 l_0_14_188)))
 (let ((?x76292 (* ?x76172 l_0_14_203)))
 (let ((?x76169 (* 2.0 l_0_14_187)))
 (let ((?x76290 (* ?x76169 l_0_14_202)))
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76288 (* ?x76166 l_0_14_169)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76286 (* ?x76163 l_0_14_168)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76284 (* ?x76160 l_0_14_167)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76282 (* ?x76157 l_0_14_166)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75864 (* ?x75617 l_0_14_153)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x75862 (* ?x75614 l_0_14_152)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x76278 (* ?x75600 l_0_14_151)))
 (let ((?x76271 (+ (* (* (- 2.0) l_0_14_10) l_0_14_25) (* (* 1.0 l_0_14_112) l_0_14_115))))
 (let ((?x76277 (+ (+ ?x76271 (* (* 1.0 l_0_14_113) l_0_14_116)) (* (* 1.0 l_0_14_114) l_0_14_117))))
 (let ((?x76289 (- (- (- (- (- (- (- ?x76277 ?x76278) ?x75862) ?x75864) ?x76282) ?x76284) ?x76286) ?x76288)))
 (let ((?x76303 (- (- (- (+ (+ (+ (+ ?x76289 ?x76290) ?x76292) ?x76294) ?x76296) ?x76298) ?x76300) ?x76302)))
 (let ((?x76314 (- (+ (+ (+ (+ ?x76303 ?x76304) ?x76306) ?x76308) ?x76310) (* (* 1.0 l_0_14_76) l_0_14_79))))
 (let ((?x76320 (- (- ?x76314 (* (* 1.0 l_0_14_77) l_0_14_80)) (* (* 1.0 l_0_14_78) l_0_14_81))))
 (= ?x76320 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76190 (* 2.0 l_0_14_46)))
 (let ((?x76422 (* ?x76190 l_0_14_68)))
 (let ((?x76187 (* 2.0 l_0_14_45)))
 (let ((?x76420 (* ?x76187 l_0_14_67)))
 (let ((?x76184 (* 2.0 l_0_14_44)))
 (let ((?x76418 (* ?x76184 l_0_14_66)))
 (let ((?x76181 (* 2.0 l_0_14_43)))
 (let ((?x76416 (* ?x76181 l_0_14_65)))
 (let ((?x75472 (* 2.0 l_0_14_31)))
 (let ((?x76414 (* ?x75472 l_0_14_9)))
 (let ((?x75469 (* 2.0 l_0_14_30)))
 (let ((?x76412 (* ?x75469 l_0_14_8)))
 (let ((?x75461 (* 2.0 l_0_14_29)))
 (let ((?x76410 (* ?x75461 l_0_14_7)))
 (let ((?x76178 (* 2.0 l_0_14_190)))
 (let ((?x76408 (* ?x76178 l_0_14_212)))
 (let ((?x76175 (* 2.0 l_0_14_189)))
 (let ((?x76406 (* ?x76175 l_0_14_211)))
 (let ((?x76172 (* 2.0 l_0_14_188)))
 (let ((?x76404 (* ?x76172 l_0_14_210)))
 (let ((?x76169 (* 2.0 l_0_14_187)))
 (let ((?x76402 (* ?x76169 l_0_14_209)))
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76400 (* ?x76166 l_0_14_176)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76398 (* ?x76163 l_0_14_175)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76396 (* ?x76160 l_0_14_174)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76394 (* ?x76157 l_0_14_173)))
 (let ((?x76401 (- (- (- (- (* (* (- 2.0) l_0_14_10) l_0_14_32) ?x76394) ?x76396) ?x76398) ?x76400)))
 (let ((?x76415 (- (- (- (+ (+ (+ (+ ?x76401 ?x76402) ?x76404) ?x76406) ?x76408) ?x76410) ?x76412) ?x76414)))
 (= (+ (+ (+ (+ ?x76415 ?x76416) ?x76418) ?x76420) ?x76422) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76492 (* l_0_14_51 l_0_14_51)))
 (let ((?x76490 (* l_0_14_50 l_0_14_50)))
 (let ((?x76488 (* l_0_14_49 l_0_14_49)))
 (let ((?x76486 (* l_0_14_48 l_0_14_48)))
 (let ((?x76484 (* l_0_14_47 l_0_14_47)))
 (let ((?x76482 (* l_0_14_195 l_0_14_195)))
 (let ((?x76480 (* l_0_14_194 l_0_14_194)))
 (let ((?x76478 (* l_0_14_193 l_0_14_193)))
 (let ((?x76476 (* l_0_14_192 l_0_14_192)))
 (let ((?x76474 (* l_0_14_191 l_0_14_191)))
 (let ((?x76472 (* l_0_14_159 l_0_14_159)))
 (let ((?x76470 (* l_0_14_158 l_0_14_158)))
 (let ((?x76468 (* l_0_14_157 l_0_14_157)))
 (let ((?x76466 (* l_0_14_156 l_0_14_156)))
 (let ((?x76464 (* l_0_14_155 l_0_14_155)))
 (let ((?x76462 (* l_0_14_15 l_0_14_15)))
 (let ((?x76460 (* l_0_14_14 l_0_14_14)))
 (let ((?x76447 (* l_0_14_13 l_0_14_13)))
 (let ((?x76459 (- (- (* (- l_0_14_11) l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x76447)))
 (let ((?x76473 (- (- (- (- (- (- (- ?x76459 ?x76460) ?x76462) ?x76464) ?x76466) ?x76468) ?x76470) ?x76472)))
 (let ((?x76487 (+ (+ (+ (+ (+ (+ (+ ?x76473 ?x76474) ?x76476) ?x76478) ?x76480) ?x76482) ?x76484) ?x76486)))
 (= (+ (+ (+ ?x76487 ?x76488) ?x76490) ?x76492) 0.0)))))))))))))))))))))))
(assert
 (let ((?x76566 (* 2.0 l_0_14_51)))
 (let ((?x76567 (* ?x76566 l_0_14_56)))
 (let ((?x76563 (* 2.0 l_0_14_50)))
 (let ((?x76564 (* ?x76563 l_0_14_55)))
 (let ((?x76560 (* 2.0 l_0_14_49)))
 (let ((?x76561 (* ?x76560 l_0_14_54)))
 (let ((?x76557 (* 2.0 l_0_14_48)))
 (let ((?x76558 (* ?x76557 l_0_14_53)))
 (let ((?x76554 (* 2.0 l_0_14_47)))
 (let ((?x76555 (* ?x76554 l_0_14_52)))
 (let ((?x76551 (* 2.0 l_0_14_195)))
 (let ((?x76552 (* ?x76551 l_0_14_200)))
 (let ((?x76548 (* 2.0 l_0_14_194)))
 (let ((?x76549 (* ?x76548 l_0_14_199)))
 (let ((?x76545 (* 2.0 l_0_14_193)))
 (let ((?x76546 (* ?x76545 l_0_14_198)))
 (let ((?x76542 (* 2.0 l_0_14_192)))
 (let ((?x76543 (* ?x76542 l_0_14_197)))
 (let ((?x76539 (* 2.0 l_0_14_191)))
 (let ((?x76540 (* ?x76539 l_0_14_196)))
 (let ((?x76536 (* 2.0 l_0_14_159)))
 (let ((?x76537 (* ?x76536 l_0_14_164)))
 (let ((?x76533 (* 2.0 l_0_14_158)))
 (let ((?x76534 (* ?x76533 l_0_14_163)))
 (let ((?x76530 (* 2.0 l_0_14_157)))
 (let ((?x76531 (* ?x76530 l_0_14_162)))
 (let ((?x76527 (* 2.0 l_0_14_156)))
 (let ((?x76528 (* ?x76527 l_0_14_161)))
 (let ((?x76524 (* 2.0 l_0_14_155)))
 (let ((?x76525 (* ?x76524 l_0_14_160)))
 (let ((?x76521 (* 2.0 l_0_14_15)))
 (let ((?x76522 (* ?x76521 l_0_14_20)))
 (let ((?x76518 (* 2.0 l_0_14_14)))
 (let ((?x76519 (* ?x76518 l_0_14_19)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x76516 (* ?x75911 l_0_14_18)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x76514 (* ?x75536 l_0_14_17)))
 (let ((?x76523 (- (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_16) ?x76514) ?x76516) ?x76519) ?x76522)))
 (let ((?x76544 (+ (+ (- (- (- (- (- ?x76523 ?x76525) ?x76528) ?x76531) ?x76534) ?x76537) ?x76540) ?x76543)))
 (let ((?x76565 (+ (+ (+ (+ (+ (+ (+ ?x76544 ?x76546) ?x76549) ?x76552) ?x76555) ?x76558) ?x76561) ?x76564)))
 (= (+ ?x76565 ?x76567) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76566 (* 2.0 l_0_14_51)))
 (let ((?x76664 (* ?x76566 l_0_14_62)))
 (let ((?x76563 (* 2.0 l_0_14_50)))
 (let ((?x76662 (* ?x76563 l_0_14_61)))
 (let ((?x76560 (* 2.0 l_0_14_49)))
 (let ((?x76660 (* ?x76560 l_0_14_60)))
 (let ((?x76557 (* 2.0 l_0_14_48)))
 (let ((?x76658 (* ?x76557 l_0_14_59)))
 (let ((?x76554 (* 2.0 l_0_14_47)))
 (let ((?x76656 (* ?x76554 l_0_14_58)))
 (let ((?x76551 (* 2.0 l_0_14_195)))
 (let ((?x76654 (* ?x76551 l_0_14_206)))
 (let ((?x76548 (* 2.0 l_0_14_194)))
 (let ((?x76652 (* ?x76548 l_0_14_205)))
 (let ((?x76545 (* 2.0 l_0_14_193)))
 (let ((?x76650 (* ?x76545 l_0_14_204)))
 (let ((?x76542 (* 2.0 l_0_14_192)))
 (let ((?x76648 (* ?x76542 l_0_14_203)))
 (let ((?x76539 (* 2.0 l_0_14_191)))
 (let ((?x76646 (* ?x76539 l_0_14_202)))
 (let ((?x76536 (* 2.0 l_0_14_159)))
 (let ((?x76644 (* ?x76536 l_0_14_170)))
 (let ((?x76533 (* 2.0 l_0_14_158)))
 (let ((?x76642 (* ?x76533 l_0_14_169)))
 (let ((?x76530 (* 2.0 l_0_14_157)))
 (let ((?x76640 (* ?x76530 l_0_14_168)))
 (let ((?x76527 (* 2.0 l_0_14_156)))
 (let ((?x76638 (* ?x76527 l_0_14_167)))
 (let ((?x76524 (* 2.0 l_0_14_155)))
 (let ((?x76636 (* ?x76524 l_0_14_166)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75918 (* ?x75617 l_0_14_157)))
 (let ((?x76521 (* 2.0 l_0_14_15)))
 (let ((?x76633 (* ?x76521 l_0_14_26)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x75916 (* ?x75614 l_0_14_156)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x75914 (* ?x75600 l_0_14_155)))
 (let ((?x76518 (* 2.0 l_0_14_14)))
 (let ((?x76629 (* ?x76518 l_0_14_25)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x76614 (* ?x75911 l_0_14_24)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x76610 (* ?x75536 l_0_14_23)))
 (let ((?x76600 (+ (* (* (- 2.0) l_0_14_11) l_0_14_22) (* (* 1.0 l_0_14_112) l_0_14_119))))
 (let ((?x76608 (+ (+ ?x76600 (* (* 1.0 l_0_14_113) l_0_14_120)) (* (* 1.0 l_0_14_114) l_0_14_121))))
 (let ((?x76635 (- (- (- (- (- (- (- ?x76608 ?x76610) ?x76614) ?x76629) ?x75914) ?x75916) ?x76633) ?x75918)))
 (let ((?x76649 (+ (+ (- (- (- (- (- ?x76635 ?x76636) ?x76638) ?x76640) ?x76642) ?x76644) ?x76646) ?x76648)))
 (let ((?x76663 (+ (+ (+ (+ (+ (+ (+ ?x76649 ?x76650) ?x76652) ?x76654) ?x76656) ?x76658) ?x76660) ?x76662)))
 (let ((?x76669 (- (- (+ ?x76663 ?x76664) (* (* 1.0 l_0_14_76) l_0_14_83)) (* (* 1.0 l_0_14_77) l_0_14_84))))
 (= (- ?x76669 (* (* 1.0 l_0_14_78) l_0_14_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76566 (* 2.0 l_0_14_51)))
 (let ((?x76732 (* ?x76566 l_0_14_69)))
 (let ((?x76563 (* 2.0 l_0_14_50)))
 (let ((?x76730 (* ?x76563 l_0_14_68)))
 (let ((?x76560 (* 2.0 l_0_14_49)))
 (let ((?x76728 (* ?x76560 l_0_14_67)))
 (let ((?x76557 (* 2.0 l_0_14_48)))
 (let ((?x76726 (* ?x76557 l_0_14_66)))
 (let ((?x76554 (* 2.0 l_0_14_47)))
 (let ((?x76724 (* ?x76554 l_0_14_65)))
 (let ((?x76551 (* 2.0 l_0_14_195)))
 (let ((?x76722 (* ?x76551 l_0_14_213)))
 (let ((?x76548 (* 2.0 l_0_14_194)))
 (let ((?x76720 (* ?x76548 l_0_14_212)))
 (let ((?x76545 (* 2.0 l_0_14_193)))
 (let ((?x76718 (* ?x76545 l_0_14_211)))
 (let ((?x76542 (* 2.0 l_0_14_192)))
 (let ((?x76716 (* ?x76542 l_0_14_210)))
 (let ((?x76539 (* 2.0 l_0_14_191)))
 (let ((?x76714 (* ?x76539 l_0_14_209)))
 (let ((?x76536 (* 2.0 l_0_14_159)))
 (let ((?x76712 (* ?x76536 l_0_14_177)))
 (let ((?x76533 (* 2.0 l_0_14_158)))
 (let ((?x76710 (* ?x76533 l_0_14_176)))
 (let ((?x76530 (* 2.0 l_0_14_157)))
 (let ((?x76708 (* ?x76530 l_0_14_175)))
 (let ((?x76527 (* 2.0 l_0_14_156)))
 (let ((?x76706 (* ?x76527 l_0_14_174)))
 (let ((?x76524 (* 2.0 l_0_14_155)))
 (let ((?x76704 (* ?x76524 l_0_14_173)))
 (let ((?x76521 (* 2.0 l_0_14_15)))
 (let ((?x76702 (* ?x76521 l_0_14_33)))
 (let ((?x76518 (* 2.0 l_0_14_14)))
 (let ((?x76700 (* ?x76518 l_0_14_32)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x76698 (* ?x75911 l_0_14_31)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x76696 (* ?x75536 l_0_14_30)))
 (let ((?x76703 (- (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_29) ?x76696) ?x76698) ?x76700) ?x76702)))
 (let ((?x76717 (+ (+ (- (- (- (- (- ?x76703 ?x76704) ?x76706) ?x76708) ?x76710) ?x76712) ?x76714) ?x76716)))
 (let ((?x76731 (+ (+ (+ (+ (+ (+ (+ ?x76717 ?x76718) ?x76720) ?x76722) ?x76724) ?x76726) ?x76728) ?x76730)))
 (= (+ ?x76731 ?x76732) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76826 (* l_0_14_57 l_0_14_57)))
 (let ((?x76824 (* l_0_14_56 l_0_14_56)))
 (let ((?x76822 (* l_0_14_55 l_0_14_55)))
 (let ((?x76820 (* l_0_14_54 l_0_14_54)))
 (let ((?x76818 (* l_0_14_53 l_0_14_53)))
 (let ((?x76816 (* l_0_14_52 l_0_14_52)))
 (let ((?x76814 (* l_0_14_21 l_0_14_21)))
 (let ((?x76812 (* l_0_14_201 l_0_14_201)))
 (let ((?x76810 (* l_0_14_200 l_0_14_200)))
 (let ((?x76808 (* l_0_14_20 l_0_14_20)))
 (let ((?x76806 (* l_0_14_199 l_0_14_199)))
 (let ((?x76804 (* l_0_14_198 l_0_14_198)))
 (let ((?x76802 (* l_0_14_197 l_0_14_197)))
 (let ((?x76800 (* l_0_14_196 l_0_14_196)))
 (let ((?x76798 (* l_0_14_19 l_0_14_19)))
 (let ((?x76796 (* l_0_14_18 l_0_14_18)))
 (let ((?x76794 (* l_0_14_17 l_0_14_17)))
 (let ((?x76792 (* l_0_14_165 l_0_14_165)))
 (let ((?x76777 (* l_0_14_164 l_0_14_164)))
 (let ((?x76774 (* l_0_14_163 l_0_14_163)))
 (let ((?x76770 (* l_0_14_162 l_0_14_162)))
 (let ((?x76766 (* l_0_14_161 l_0_14_161)))
 (let ((?x76768 (- (- (* (- l_0_14_16) l_0_14_16) (* l_0_14_160 l_0_14_160)) ?x76766)))
 (let ((?x76799 (- (- (- (- (- (- (- ?x76768 ?x76770) ?x76774) ?x76777) ?x76792) ?x76794) ?x76796) ?x76798)))
 (let ((?x76813 (+ (+ (- (+ (+ (+ (+ ?x76799 ?x76800) ?x76802) ?x76804) ?x76806) ?x76808) ?x76810) ?x76812)))
 (let ((?x76827 (+ (+ (+ (+ (+ (+ (- ?x76813 ?x76814) ?x76816) ?x76818) ?x76820) ?x76822) ?x76824) ?x76826)))
 (= ?x76827 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x76947 (* 2.0 l_0_14_57)))
 (let ((?x76948 (* ?x76947 l_0_14_63)))
 (let ((?x76944 (* 2.0 l_0_14_56)))
 (let ((?x76945 (* ?x76944 l_0_14_62)))
 (let ((?x76941 (* 2.0 l_0_14_55)))
 (let ((?x76942 (* ?x76941 l_0_14_61)))
 (let ((?x76938 (* 2.0 l_0_14_54)))
 (let ((?x76939 (* ?x76938 l_0_14_60)))
 (let ((?x76935 (* 2.0 l_0_14_53)))
 (let ((?x76936 (* ?x76935 l_0_14_59)))
 (let ((?x76932 (* 2.0 l_0_14_52)))
 (let ((?x76933 (* ?x76932 l_0_14_58)))
 (let ((?x76929 (* 2.0 l_0_14_21)))
 (let ((?x76930 (* ?x76929 l_0_14_27)))
 (let ((?x76926 (* 2.0 l_0_14_201)))
 (let ((?x76927 (* ?x76926 l_0_14_207)))
 (let ((?x76923 (* 2.0 l_0_14_200)))
 (let ((?x76924 (* ?x76923 l_0_14_206)))
 (let ((?x76920 (* 2.0 l_0_14_20)))
 (let ((?x76921 (* ?x76920 l_0_14_26)))
 (let ((?x76917 (* 2.0 l_0_14_199)))
 (let ((?x76918 (* ?x76917 l_0_14_205)))
 (let ((?x76914 (* 2.0 l_0_14_198)))
 (let ((?x76915 (* ?x76914 l_0_14_204)))
 (let ((?x76911 (* 2.0 l_0_14_197)))
 (let ((?x76912 (* ?x76911 l_0_14_203)))
 (let ((?x76908 (* 2.0 l_0_14_196)))
 (let ((?x76909 (* ?x76908 l_0_14_202)))
 (let ((?x76905 (* 2.0 l_0_14_19)))
 (let ((?x76906 (* ?x76905 l_0_14_25)))
 (let ((?x75973 (* 2.0 l_0_14_18)))
 (let ((?x76903 (* ?x75973 l_0_14_24)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x76901 (* ?x75623 l_0_14_23)))
 (let ((?x76898 (* 2.0 l_0_14_165)))
 (let ((?x76899 (* ?x76898 l_0_14_171)))
 (let ((?x76895 (* 2.0 l_0_14_164)))
 (let ((?x76896 (* ?x76895 l_0_14_170)))
 (let ((?x76892 (* 2.0 l_0_14_163)))
 (let ((?x76893 (* ?x76892 l_0_14_169)))
 (let ((?x76889 (* 2.0 l_0_14_162)))
 (let ((?x76890 (* ?x76889 l_0_14_168)))
 (let ((?x76886 (* 2.0 l_0_14_161)))
 (let ((?x76887 (* ?x76886 l_0_14_167)))
 (let ((?x76883 (* 2.0 l_0_14_160)))
 (let ((?x76884 (* ?x76883 l_0_14_166)))
 (let ((?x75620 (* 2.0 l_0_14_16)))
 (let ((?x76881 (* ?x75620 l_0_14_22)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75956 (* ?x75617 l_0_14_162)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x19351 (* ?x75614 l_0_14_161)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x76877 (* ?x75600 l_0_14_160)))
 (let ((?x76874 (+ (* (* 1.0 l_0_14_112) l_0_14_124) (* (* 1.0 l_0_14_113) l_0_14_125))))
 (let ((?x76880 (- (- (- (+ ?x76874 (* (* 1.0 l_0_14_114) l_0_14_126)) ?x76877) ?x19351) ?x75956)))
 (let ((?x76900 (- (- (- (- (- (- (- ?x76880 ?x76881) ?x76884) ?x76887) ?x76890) ?x76893) ?x76896) ?x76899)))
 (let ((?x76919 (+ (+ (+ (+ (- (- (- ?x76900 ?x76901) ?x76903) ?x76906) ?x76909) ?x76912) ?x76915) ?x76918)))
 (let ((?x76940 (+ (+ (+ (- (+ (+ (- ?x76919 ?x76921) ?x76924) ?x76927) ?x76930) ?x76933) ?x76936) ?x76939)))
 (let ((?x76951 (- (+ (+ (+ ?x76940 ?x76942) ?x76945) ?x76948) (* (* 1.0 l_0_14_76) l_0_14_88))))
 (let ((?x76955 (- (- ?x76951 (* (* 1.0 l_0_14_77) l_0_14_89)) (* (* 1.0 l_0_14_78) l_0_14_90))))
 (= ?x76955 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76947 (* 2.0 l_0_14_57)))
 (let ((?x77096 (* ?x76947 l_0_14_70)))
 (let ((?x76944 (* 2.0 l_0_14_56)))
 (let ((?x77094 (* ?x76944 l_0_14_69)))
 (let ((?x76941 (* 2.0 l_0_14_55)))
 (let ((?x77092 (* ?x76941 l_0_14_68)))
 (let ((?x76938 (* 2.0 l_0_14_54)))
 (let ((?x77090 (* ?x76938 l_0_14_67)))
 (let ((?x76935 (* 2.0 l_0_14_53)))
 (let ((?x77088 (* ?x76935 l_0_14_66)))
 (let ((?x76932 (* 2.0 l_0_14_52)))
 (let ((?x77086 (* ?x76932 l_0_14_65)))
 (let ((?x76929 (* 2.0 l_0_14_21)))
 (let ((?x77084 (* ?x76929 l_0_14_34)))
 (let ((?x76926 (* 2.0 l_0_14_201)))
 (let ((?x77082 (* ?x76926 l_0_14_214)))
 (let ((?x76923 (* 2.0 l_0_14_200)))
 (let ((?x77080 (* ?x76923 l_0_14_213)))
 (let ((?x76920 (* 2.0 l_0_14_20)))
 (let ((?x77078 (* ?x76920 l_0_14_33)))
 (let ((?x76917 (* 2.0 l_0_14_199)))
 (let ((?x77076 (* ?x76917 l_0_14_212)))
 (let ((?x76914 (* 2.0 l_0_14_198)))
 (let ((?x77074 (* ?x76914 l_0_14_211)))
 (let ((?x76911 (* 2.0 l_0_14_197)))
 (let ((?x77072 (* ?x76911 l_0_14_210)))
 (let ((?x76908 (* 2.0 l_0_14_196)))
 (let ((?x77070 (* ?x76908 l_0_14_209)))
 (let ((?x76905 (* 2.0 l_0_14_19)))
 (let ((?x77068 (* ?x76905 l_0_14_32)))
 (let ((?x75973 (* 2.0 l_0_14_18)))
 (let ((?x77066 (* ?x75973 l_0_14_31)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x77064 (* ?x75623 l_0_14_30)))
 (let ((?x76898 (* 2.0 l_0_14_165)))
 (let ((?x77062 (* ?x76898 l_0_14_178)))
 (let ((?x76895 (* 2.0 l_0_14_164)))
 (let ((?x77060 (* ?x76895 l_0_14_177)))
 (let ((?x76892 (* 2.0 l_0_14_163)))
 (let ((?x77058 (* ?x76892 l_0_14_176)))
 (let ((?x76889 (* 2.0 l_0_14_162)))
 (let ((?x77056 (* ?x76889 l_0_14_175)))
 (let ((?x76886 (* 2.0 l_0_14_161)))
 (let ((?x77054 (* ?x76886 l_0_14_174)))
 (let ((?x76883 (* 2.0 l_0_14_160)))
 (let ((?x77052 (* ?x76883 l_0_14_173)))
 (let ((?x77059 (- (- (- (- (* (* (- 2.0) l_0_14_16) l_0_14_29) ?x77052) ?x77054) ?x77056) ?x77058)))
 (let ((?x77073 (+ (+ (- (- (- (- (- ?x77059 ?x77060) ?x77062) ?x77064) ?x77066) ?x77068) ?x77070) ?x77072)))
 (let ((?x77087 (+ (- (+ (+ (- (+ (+ ?x77073 ?x77074) ?x77076) ?x77078) ?x77080) ?x77082) ?x77084) ?x77086)))
 (= (+ (+ (+ (+ (+ ?x77087 ?x77088) ?x77090) ?x77092) ?x77094) ?x77096) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77189 (* l_0_14_64 l_0_14_64)))
 (let ((?x77187 (* l_0_14_63 l_0_14_63)))
 (let ((?x77185 (* l_0_14_62 l_0_14_62)))
 (let ((?x77183 (* l_0_14_61 l_0_14_61)))
 (let ((?x77181 (* l_0_14_60 l_0_14_60)))
 (let ((?x77179 (* l_0_14_59 l_0_14_59)))
 (let ((?x77177 (* l_0_14_58 l_0_14_58)))
 (let ((?x77175 (* l_0_14_28 l_0_14_28)))
 (let ((?x77173 (* l_0_14_27 l_0_14_27)))
 (let ((?x77171 (* l_0_14_26 l_0_14_26)))
 (let ((?x77169 (* l_0_14_25 l_0_14_25)))
 (let ((?x77167 (* l_0_14_24 l_0_14_24)))
 (let ((?x77165 (* l_0_14_23 l_0_14_23)))
 (let ((?x77163 (* l_0_14_22 l_0_14_22)))
 (let ((?x77161 (* l_0_14_208 l_0_14_208)))
 (let ((?x77159 (* l_0_14_207 l_0_14_207)))
 (let ((?x77157 (* l_0_14_206 l_0_14_206)))
 (let ((?x77155 (* l_0_14_205 l_0_14_205)))
 (let ((?x77153 (* l_0_14_204 l_0_14_204)))
 (let ((?x77151 (* l_0_14_203 l_0_14_203)))
 (let ((?x77149 (* l_0_14_202 l_0_14_202)))
 (let ((?x77147 (* l_0_14_172 l_0_14_172)))
 (let ((?x77145 (* l_0_14_171 l_0_14_171)))
 (let ((?x77143 (* l_0_14_170 l_0_14_170)))
 (let ((?x77141 (* l_0_14_169 l_0_14_169)))
 (let ((?x77139 (* l_0_14_168 l_0_14_168)))
 (let ((?x77137 (* l_0_14_167 l_0_14_167)))
 (let ((?x77135 (* l_0_14_166 l_0_14_166)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x76023 (* ?x75617 l_0_14_168)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x76020 (* ?x75614 l_0_14_167)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x76017 (* ?x75600 l_0_14_166)))
 (let ((?x77113 (+ (* (* 1.0 l_0_14_112) l_0_14_130) (* (* 1.0 l_0_14_113) l_0_14_131))))
 (let ((?x77134 (- (- (- (+ ?x77113 (* (* 1.0 l_0_14_114) l_0_14_132)) ?x76017) ?x76020) ?x76023)))
 (let ((?x77148 (- (- (- (- (- (- (- ?x77134 ?x77135) ?x77137) ?x77139) ?x77141) ?x77143) ?x77145) ?x77147)))
 (let ((?x77162 (+ (+ (+ (+ (+ (+ (+ ?x77148 ?x77149) ?x77151) ?x77153) ?x77155) ?x77157) ?x77159) ?x77161)))
 (let ((?x77176 (- (- (- (- (- (- (- ?x77162 ?x77163) ?x77165) ?x77167) ?x77169) ?x77171) ?x77173) ?x77175)))
 (let ((?x77190 (+ (+ (+ (+ (+ (+ (+ ?x77176 ?x77177) ?x77179) ?x77181) ?x77183) ?x77185) ?x77187) ?x77189)))
 (let ((?x77194 (- (- ?x77190 (* (* 1.0 l_0_14_76) l_0_14_94)) (* (* 1.0 l_0_14_77) l_0_14_95))))
 (= (- ?x77194 (* (* 1.0 l_0_14_78) l_0_14_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77344 (* (* 2.0 l_0_14_64) l_0_14_71)))
 (let ((?x77341 (* (* 2.0 l_0_14_63) l_0_14_70)))
 (let ((?x77338 (* (* 2.0 l_0_14_62) l_0_14_69)))
 (let ((?x77335 (* (* 2.0 l_0_14_61) l_0_14_68)))
 (let ((?x77332 (* (* 2.0 l_0_14_60) l_0_14_67)))
 (let ((?x77329 (* (* 2.0 l_0_14_59) l_0_14_66)))
 (let ((?x77326 (* (* 2.0 l_0_14_58) l_0_14_65)))
 (let ((?x77323 (* (* 2.0 l_0_14_28) l_0_14_35)))
 (let ((?x77320 (* (* 2.0 l_0_14_27) l_0_14_34)))
 (let ((?x77317 (* (* 2.0 l_0_14_26) l_0_14_33)))
 (let ((?x77314 (* (* 2.0 l_0_14_25) l_0_14_32)))
 (let ((?x76037 (* 2.0 l_0_14_24)))
 (let ((?x77311 (* ?x76037 l_0_14_31)))
 (let ((?x75715 (* 2.0 l_0_14_23)))
 (let ((?x77309 (* ?x75715 l_0_14_30)))
 (let ((?x76032 (* 2.0 l_0_14_22)))
 (let ((?x77307 (* ?x76032 l_0_14_29)))
 (let ((?x77305 (* (* 2.0 l_0_14_208) l_0_14_215)))
 (let ((?x77302 (* (* 2.0 l_0_14_207) l_0_14_214)))
 (let ((?x77299 (* (* 2.0 l_0_14_206) l_0_14_213)))
 (let ((?x77296 (* (* 2.0 l_0_14_205) l_0_14_212)))
 (let ((?x77293 (* (* 2.0 l_0_14_204) l_0_14_211)))
 (let ((?x77290 (* (* 2.0 l_0_14_203) l_0_14_210)))
 (let ((?x77287 (* (* 2.0 l_0_14_202) l_0_14_209)))
 (let ((?x77284 (* (* 2.0 l_0_14_172) l_0_14_179)))
 (let ((?x77281 (* (* 2.0 l_0_14_171) l_0_14_178)))
 (let ((?x77278 (* (* 2.0 l_0_14_170) l_0_14_177)))
 (let ((?x77275 (* (* 2.0 l_0_14_169) l_0_14_176)))
 (let ((?x77272 (* (* 2.0 l_0_14_168) l_0_14_175)))
 (let ((?x77269 (* (* 2.0 l_0_14_167) l_0_14_174)))
 (let ((?x77266 (* (* 2.0 l_0_14_166) l_0_14_173)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75618 (* ?x75617 l_0_14_175)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x75615 (* ?x75614 l_0_14_174)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x75602 (* ?x75600 l_0_14_173)))
 (let ((?x77252 (- (* (* (- 1.0) l_0_14_101) l_0_14_76) (* (* 1.0 l_0_14_102) l_0_14_77))))
 (let ((?x77257 (+ (- ?x77252 (* (* 1.0 l_0_14_103) l_0_14_78)) (* (* 1.0 l_0_14_112) l_0_14_137))))
 (let ((?x77261 (+ (+ ?x77257 (* (* 1.0 l_0_14_113) l_0_14_138)) (* (* 1.0 l_0_14_114) l_0_14_139))))
 (let ((?x77276 (- (- (- (- (- (- (- ?x77261 ?x75602) ?x75615) ?x75618) ?x77266) ?x77269) ?x77272) ?x77275)))
 (let ((?x77297 (+ (+ (+ (+ (- (- (- ?x77276 ?x77278) ?x77281) ?x77284) ?x77287) ?x77290) ?x77293) ?x77296)))
 (let ((?x77315 (- (- (- (- (+ (+ (+ ?x77297 ?x77299) ?x77302) ?x77305) ?x77307) ?x77309) ?x77311) ?x77314)))
 (let ((?x77336 (+ (+ (+ (+ (- (- (- ?x77315 ?x77317) ?x77320) ?x77323) ?x77326) ?x77329) ?x77332) ?x77335)))
 (= (+ (+ (+ ?x77336 ?x77338) ?x77341) ?x77344) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77483 (* l_0_14_72 l_0_14_72)))
 (let ((?x77481 (* l_0_14_71 l_0_14_71)))
 (let ((?x77479 (* l_0_14_70 l_0_14_70)))
 (let ((?x77477 (* l_0_14_69 l_0_14_69)))
 (let ((?x77475 (* l_0_14_68 l_0_14_68)))
 (let ((?x77473 (* l_0_14_67 l_0_14_67)))
 (let ((?x77471 (* l_0_14_66 l_0_14_66)))
 (let ((?x77469 (* l_0_14_65 l_0_14_65)))
 (let ((?x77467 (* l_0_14_36 l_0_14_36)))
 (let ((?x77465 (* l_0_14_35 l_0_14_35)))
 (let ((?x77463 (* l_0_14_34 l_0_14_34)))
 (let ((?x77461 (* l_0_14_33 l_0_14_33)))
 (let ((?x77459 (* l_0_14_32 l_0_14_32)))
 (let ((?x77457 (* l_0_14_31 l_0_14_31)))
 (let ((?x77455 (* l_0_14_30 l_0_14_30)))
 (let ((?x77453 (* l_0_14_29 l_0_14_29)))
 (let ((?x77451 (* l_0_14_216 l_0_14_216)))
 (let ((?x77449 (* l_0_14_215 l_0_14_215)))
 (let ((?x77447 (* l_0_14_214 l_0_14_214)))
 (let ((?x77445 (* l_0_14_213 l_0_14_213)))
 (let ((?x77443 (* l_0_14_212 l_0_14_212)))
 (let ((?x77441 (* l_0_14_211 l_0_14_211)))
 (let ((?x77439 (* l_0_14_210 l_0_14_210)))
 (let ((?x77437 (* l_0_14_209 l_0_14_209)))
 (let ((?x77435 (* l_0_14_180 l_0_14_180)))
 (let ((?x77433 (* l_0_14_179 l_0_14_179)))
 (let ((?x77431 (* l_0_14_178 l_0_14_178)))
 (let ((?x77429 (* l_0_14_177 l_0_14_177)))
 (let ((?x77408 (* l_0_14_176 l_0_14_176)))
 (let ((?x77404 (* l_0_14_175 l_0_14_175)))
 (let ((?x77406 (- (- (* (- l_0_14_173) l_0_14_173) (* l_0_14_174 l_0_14_174)) ?x77404)))
 (let ((?x77440 (+ (+ (- (- (- (- (- ?x77406 ?x77408) ?x77429) ?x77431) ?x77433) ?x77435) ?x77437) ?x77439)))
 (let ((?x77454 (- (+ (+ (+ (+ (+ (+ ?x77440 ?x77441) ?x77443) ?x77445) ?x77447) ?x77449) ?x77451) ?x77453)))
 (let ((?x77468 (- (- (- (- (- (- (- ?x77454 ?x77455) ?x77457) ?x77459) ?x77461) ?x77463) ?x77465) ?x77467)))
 (let ((?x77482 (+ (+ (+ (+ (+ (+ (+ ?x77468 ?x77469) ?x77471) ?x77473) ?x77475) ?x77477) ?x77479) ?x77481)))
 (= (+ ?x77482 ?x77483) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x75164 (* l_0_14_37 l_0_14_37)))
 (let ((?x77540 (* l_0_14_289 l_0_14_289)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77538 (* ?x77537 l_0_14_295)))
 (let ((?x77539 (- (- (* l_0_14_1 l_0_14_1) (* (* 2.0 l_0_14_109) l_0_14_115)) ?x77538)))
 (= (+ (- (- ?x77539 ?x77540) ?x75164) (* (* 2.0 l_0_14_73) l_0_14_79)) 0.0)))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75213 (* ?x75212 l_0_14_38)))
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x77555 (* ?x77554 l_0_14_296)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x26226 (* ?x26228 l_0_14_295)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x26227 (* ?x77537 l_0_14_290)))
 (let ((?x55190 (- (* (* 2.0 l_0_14_1) l_0_14_2) (* (* 2.0 l_0_14_110) l_0_14_115))))
 (let ((?x77556 (- (- (- (- ?x55190 (* (* 2.0 l_0_14_111) l_0_14_116)) ?x26227) ?x26226) ?x77555)))
 (let ((?x77562 (- (- ?x77556 (* (* 2.0 l_0_14_325) l_0_14_331)) (* (* 2.0 l_0_14_361) l_0_14_367))))
 (let ((?x77569 (- (- (- ?x77562 ?x75213) (* (* 2.0 l_0_14_397) l_0_14_403)) (* (* 2.0 l_0_14_433) l_0_14_439))))
 (let ((?x77575 (- (- ?x77569 (* (* 2.0 l_0_14_469) l_0_14_475)) (* (* 2.0 l_0_14_505) l_0_14_511))))
 (let ((?x77581 (+ (+ ?x77575 (* (* 2.0 l_0_14_74) l_0_14_79)) (* (* 2.0 l_0_14_75) l_0_14_80))))
 (= ?x77581 0.0))))))))))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75263 (* ?x75212 l_0_14_40)))
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x77626 (* ?x75209 l_0_14_297)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x77624 (* ?x75206 l_0_14_296)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x77622 (* ?x75203 l_0_14_295)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77620 (* ?x77537 l_0_14_292)))
 (let ((?x77611 (- (* (* 2.0 l_0_14_1) l_0_14_4) (* (* 2.0 l_0_14_112) l_0_14_115))))
 (let ((?x77619 (- (- ?x77611 (* (* 2.0 l_0_14_113) l_0_14_116)) (* (* 2.0 l_0_14_114) l_0_14_117))))
 (let ((?x77631 (+ (- (- (- (- (- ?x77619 ?x77620) ?x77622) ?x77624) ?x77626) ?x75263) (* (* 2.0 l_0_14_76) l_0_14_79))))
 (let ((?x77637 (+ (+ ?x77631 (* (* 2.0 l_0_14_77) l_0_14_80)) (* (* 2.0 l_0_14_78) l_0_14_81))))
 (= ?x77637 0.0))))))))))))))))
(assert
 (let ((?x77675 (* l_0_14_82 l_0_14_82)))
 (let ((?x77673 (* l_0_14_81 l_0_14_81)))
 (let ((?x77671 (* l_0_14_80 l_0_14_80)))
 (let ((?x77669 (* l_0_14_79 l_0_14_79)))
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75279 (* ?x75212 l_0_14_43)))
 (let ((?x77666 (* l_0_14_298 l_0_14_298)))
 (let ((?x77664 (* l_0_14_297 l_0_14_297)))
 (let ((?x77662 (* l_0_14_296 l_0_14_296)))
 (let ((?x77660 (* l_0_14_295 l_0_14_295)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77538 (* ?x77537 l_0_14_295)))
 (let ((?x77657 (* l_0_14_118 l_0_14_118)))
 (let ((?x77655 (* l_0_14_117 l_0_14_117)))
 (let ((?x77648 (* l_0_14_116 l_0_14_116)))
 (let ((?x77654 (- (- (* (* 2.0 l_0_14_1) l_0_14_7) (* l_0_14_115 l_0_14_115)) ?x77648)))
 (let ((?x77667 (- (- (- (- (- (- (- ?x77654 ?x77655) ?x77657) ?x77538) ?x77660) ?x77662) ?x77664) ?x77666)))
 (= (+ (+ (+ (+ (- ?x77667 ?x75279) ?x77669) ?x77671) ?x77673) ?x77675) 0.0)))))))))))))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75302 (* ?x75212 l_0_14_47)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77729 (* ?x77728 l_0_14_302)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77726 (* ?x77725 l_0_14_301)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77723 (* ?x77722 l_0_14_300)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77720 (* ?x77719 l_0_14_299)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77717 (* ?x77537 l_0_14_299)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x77715 (* ?x77714 l_0_14_259)))
 (let ((?x77704 (- (* (* 2.0 l_0_14_1) l_0_14_11) (* (* 2.0 l_0_14_115) l_0_14_119))))
 (let ((?x77710 (- (- ?x77704 (* (* 2.0 l_0_14_116) l_0_14_120)) (* (* 2.0 l_0_14_117) l_0_14_121))))
 (let ((?x77721 (- (- (+ (- ?x77710 (* (* 2.0 l_0_14_118) l_0_14_122)) ?x77715) ?x77717) ?x77720)))
 (let ((?x77734 (+ (- (- (- (- ?x77721 ?x77723) ?x77726) ?x77729) ?x75302) (* (* 2.0 l_0_14_79) l_0_14_83))))
 (let ((?x77740 (+ (+ ?x77734 (* (* 2.0 l_0_14_80) l_0_14_84)) (* (* 2.0 l_0_14_81) l_0_14_85))))
 (= (+ ?x77740 (* (* 2.0 l_0_14_82) l_0_14_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75325 (* ?x75212 l_0_14_52)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77787 (* ?x77728 l_0_14_307)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77785 (* ?x77725 l_0_14_306)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77783 (* ?x77722 l_0_14_305)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77781 (* ?x77719 l_0_14_304)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77779 (* ?x77537 l_0_14_304)))
 (let ((?x77538 (* ?x77537 l_0_14_295)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75277 (* ?x75197 l_0_14_187)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75275 (* ?x75194 l_0_14_151)))
 (let ((?x26471 (- (* (* 2.0 l_0_14_1) l_0_14_16) (* (* 2.0 l_0_14_115) l_0_14_124))))
 (let ((?x77773 (- (- ?x26471 (* (* 2.0 l_0_14_116) l_0_14_125)) (* (* 2.0 l_0_14_117) l_0_14_126))))
 (let ((?x77778 (+ (- (+ (- ?x77773 (* (* 2.0 l_0_14_118) l_0_14_127)) ?x75275) ?x75277) ?x77538)))
 (let ((?x77791 (+ (- (- (- (- (- (- ?x77778 ?x77779) ?x77781) ?x77783) ?x77785) ?x77787) ?x75325) (* (* 2.0 l_0_14_79) l_0_14_88))))
 (let ((?x77795 (+ (+ ?x77791 (* (* 2.0 l_0_14_80) l_0_14_89)) (* (* 2.0 l_0_14_81) l_0_14_90))))
 (= (+ ?x77795 (* (* 2.0 l_0_14_82) l_0_14_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75348 (* ?x75212 l_0_14_58)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77856 (* ?x77728 l_0_14_313)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77854 (* ?x77725 l_0_14_312)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77852 (* ?x77722 l_0_14_311)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77850 (* ?x77719 l_0_14_310)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77848 (* ?x77537 l_0_14_310)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x77715 (* ?x77714 l_0_14_259)))
 (let ((?x77833 (- (* (* 2.0 l_0_14_1) l_0_14_22) (* (* 2.0 l_0_14_115) l_0_14_130))))
 (let ((?x77844 (- (- ?x77833 (* (* 2.0 l_0_14_116) l_0_14_131)) (* (* 2.0 l_0_14_117) l_0_14_132))))
 (let ((?x77851 (- (- (- (- ?x77844 (* (* 2.0 l_0_14_118) l_0_14_133)) ?x77715) ?x77848) ?x77850)))
 (let ((?x77860 (+ (- (- (- (- ?x77851 ?x77852) ?x77854) ?x77856) ?x75348) (* (* 2.0 l_0_14_79) l_0_14_94))))
 (let ((?x77864 (+ (+ ?x77860 (* (* 2.0 l_0_14_80) l_0_14_95)) (* (* 2.0 l_0_14_81) l_0_14_96))))
 (= (+ ?x77864 (* (* 2.0 l_0_14_82) l_0_14_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x75212 (* 2.0 l_0_14_37)))
 (let ((?x75375 (* ?x75212 l_0_14_65)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77941 (* ?x77728 l_0_14_320)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77939 (* ?x77725 l_0_14_319)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77937 (* ?x77722 l_0_14_318)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77935 (* ?x77719 l_0_14_317)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77933 (* ?x77537 l_0_14_317)))
 (let ((?x77908 (+ (* (* 2.0 l_0_14_1) l_0_14_29) (* (* 2.0 l_0_14_101) l_0_14_79))))
 (let ((?x77919 (+ (+ ?x77908 (* (* 2.0 l_0_14_102) l_0_14_80)) (* (* 2.0 l_0_14_103) l_0_14_81))))
 (let ((?x77924 (- (+ ?x77919 (* (* 2.0 l_0_14_104) l_0_14_82)) (* (* 2.0 l_0_14_115) l_0_14_137))))
 (let ((?x77928 (- (- ?x77924 (* (* 2.0 l_0_14_116) l_0_14_138)) (* (* 2.0 l_0_14_117) l_0_14_139))))
 (let ((?x77932 (- (- ?x77928 (* (* 2.0 l_0_14_118) l_0_14_140)) (* (* 2.0 l_0_14_217) l_0_14_223))))
 (= (- (- (- (- (- (- ?x77932 ?x77933) ?x77935) ?x77937) ?x77939) ?x77941) ?x75375) 0.0)))))))))))))))))))
(assert
 (let ((?x75075 (* l_0_14_39 l_0_14_39)))
 (let ((?x75073 (* l_0_14_38 l_0_14_38)))
 (let ((?x23106 (* l_0_14_3 l_0_14_3)))
 (let ((?x74985 (* l_0_14_291 l_0_14_291)))
 (let ((?x77988 (+ (- (- (* l_0_14_2 l_0_14_2) (* l_0_14_290 l_0_14_290)) ?x74985) ?x23106)))
 (let ((?x77992 (- (- ?x77988 (* (* 2.0 l_0_14_326) l_0_14_331)) (* (* 2.0 l_0_14_327) l_0_14_332))))
 (let ((?x77996 (- (- ?x77992 (* (* 2.0 l_0_14_362) l_0_14_367)) (* (* 2.0 l_0_14_363) l_0_14_368))))
 (let ((?x78002 (- (- (- (- ?x77996 ?x75073) ?x75075) (* (* 2.0 l_0_14_398) l_0_14_403)) (* (* 2.0 l_0_14_399) l_0_14_404))))
 (let ((?x78006 (- (- ?x78002 (* (* 2.0 l_0_14_434) l_0_14_439)) (* (* 2.0 l_0_14_435) l_0_14_440))))
 (let ((?x78010 (- (- ?x78006 (* (* 2.0 l_0_14_470) l_0_14_475)) (* (* 2.0 l_0_14_471) l_0_14_476))))
 (let ((?x78014 (- (- ?x78010 (* (* 2.0 l_0_14_506) l_0_14_511)) (* (* 2.0 l_0_14_507) l_0_14_512))))
 (= ?x78014 0.0)))))))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75420 (* ?x75419 l_0_14_41)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75417 (* ?x75416 l_0_14_40)))
 (let ((?x75413 (* 2.0 l_0_14_3)))
 (let ((?x75414 (* ?x75413 l_0_14_5)))
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x26869 (* ?x77554 l_0_14_293)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x26867 (* ?x26228 l_0_14_292)))
 (let ((?x75404 (* 2.0 l_0_14_2)))
 (let ((?x75405 (* ?x75404 l_0_14_4)))
 (let ((?x55482 (- (+ (- (- ?x75405 ?x26867) ?x26869) ?x75414) (* (* 2.0 l_0_14_328) l_0_14_331))))
 (let ((?x78024 (- (- ?x55482 (* (* 2.0 l_0_14_329) l_0_14_332)) (* (* 2.0 l_0_14_330) l_0_14_333))))
 (let ((?x78028 (- (- ?x78024 (* (* 2.0 l_0_14_364) l_0_14_367)) (* (* 2.0 l_0_14_365) l_0_14_368))))
 (let ((?x78034 (- (- (- (- ?x78028 (* (* 2.0 l_0_14_366) l_0_14_369)) ?x75417) ?x75420) (* (* 2.0 l_0_14_400) l_0_14_403))))
 (let ((?x78038 (- (- ?x78034 (* (* 2.0 l_0_14_401) l_0_14_404)) (* (* 2.0 l_0_14_402) l_0_14_405))))
 (let ((?x78042 (- (- ?x78038 (* (* 2.0 l_0_14_436) l_0_14_439)) (* (* 2.0 l_0_14_437) l_0_14_440))))
 (let ((?x78046 (- (- ?x78042 (* (* 2.0 l_0_14_438) l_0_14_441)) (* (* 2.0 l_0_14_472) l_0_14_475))))
 (let ((?x78050 (- (- ?x78046 (* (* 2.0 l_0_14_473) l_0_14_476)) (* (* 2.0 l_0_14_474) l_0_14_477))))
 (let ((?x78054 (- (- ?x78050 (* (* 2.0 l_0_14_508) l_0_14_511)) (* (* 2.0 l_0_14_509) l_0_14_512))))
 (= (- ?x78054 (* (* 2.0 l_0_14_510) l_0_14_513)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x78112 (* l_0_14_514 l_0_14_514)))
 (let ((?x78110 (* l_0_14_513 l_0_14_513)))
 (let ((?x78108 (* l_0_14_512 l_0_14_512)))
 (let ((?x78106 (* l_0_14_511 l_0_14_511)))
 (let ((?x78104 (* l_0_14_478 l_0_14_478)))
 (let ((?x78102 (* l_0_14_477 l_0_14_477)))
 (let ((?x78100 (* l_0_14_476 l_0_14_476)))
 (let ((?x78098 (* l_0_14_475 l_0_14_475)))
 (let ((?x78096 (* l_0_14_442 l_0_14_442)))
 (let ((?x78094 (* l_0_14_441 l_0_14_441)))
 (let ((?x78092 (* l_0_14_440 l_0_14_440)))
 (let ((?x78090 (* l_0_14_439 l_0_14_439)))
 (let ((?x78088 (* l_0_14_406 l_0_14_406)))
 (let ((?x78086 (* l_0_14_405 l_0_14_405)))
 (let ((?x78084 (* l_0_14_404 l_0_14_404)))
 (let ((?x78082 (* l_0_14_403 l_0_14_403)))
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75477 (* ?x75419 l_0_14_44)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75475 (* ?x75416 l_0_14_43)))
 (let ((?x78078 (* l_0_14_370 l_0_14_370)))
 (let ((?x78076 (* l_0_14_369 l_0_14_369)))
 (let ((?x78074 (* l_0_14_368 l_0_14_368)))
 (let ((?x78072 (* l_0_14_367 l_0_14_367)))
 (let ((?x55668 (* l_0_14_334 l_0_14_334)))
 (let ((?x55669 (* l_0_14_333 l_0_14_333)))
 (let ((?x55670 (* l_0_14_332 l_0_14_332)))
 (let ((?x55666 (* l_0_14_331 l_0_14_331)))
 (let ((?x75413 (* 2.0 l_0_14_3)))
 (let ((?x75467 (* ?x75413 l_0_14_8)))
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x77555 (* ?x77554 l_0_14_296)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x26226 (* ?x26228 l_0_14_295)))
 (let ((?x75404 (* 2.0 l_0_14_2)))
 (let ((?x75450 (* ?x75404 l_0_14_7)))
 (let ((?x78071 (- (- (- (- (+ (- (- ?x75450 ?x26226) ?x77555) ?x75467) ?x55666) ?x55670) ?x55669) ?x55668)))
 (let ((?x78083 (- (- (- (- (- (- (- ?x78071 ?x78072) ?x78074) ?x78076) ?x78078) ?x75475) ?x75477) ?x78082)))
 (let ((?x78097 (- (- (- (- (- (- (- ?x78083 ?x78084) ?x78086) ?x78088) ?x78090) ?x78092) ?x78094) ?x78096)))
 (let ((?x78111 (- (- (- (- (- (- (- ?x78097 ?x78098) ?x78100) ?x78102) ?x78104) ?x78106) ?x78108) ?x78110)))
 (= (- ?x78111 ?x78112) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75565 (* ?x75419 l_0_14_48)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75563 (* ?x75416 l_0_14_47)))
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78148 (* ?x77554 l_0_14_300)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78146 (* ?x26228 l_0_14_299)))
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x78144 (* ?x78143 l_0_14_260)))
 (let ((?x78140 (* 2.0 l_0_14_254)))
 (let ((?x78141 (* ?x78140 l_0_14_259)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x75537 (* ?x75536 l_0_14_3)))
 (let ((?x78147 (- (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_2) ?x75537) ?x78141) ?x78144) ?x78146)))
 (let ((?x78155 (- (- (- ?x78147 ?x78148) (* (* 2.0 l_0_14_331) l_0_14_335)) (* (* 2.0 l_0_14_332) l_0_14_336))))
 (let ((?x78161 (- (- ?x78155 (* (* 2.0 l_0_14_333) l_0_14_337)) (* (* 2.0 l_0_14_334) l_0_14_338))))
 (let ((?x78167 (- (- ?x78161 (* (* 2.0 l_0_14_367) l_0_14_371)) (* (* 2.0 l_0_14_368) l_0_14_372))))
 (let ((?x78173 (- (- ?x78167 (* (* 2.0 l_0_14_369) l_0_14_373)) (* (* 2.0 l_0_14_370) l_0_14_374))))
 (let ((?x78181 (- (- (- (- ?x78173 ?x75563) ?x75565) (* (* 2.0 l_0_14_403) l_0_14_407)) (* (* 2.0 l_0_14_404) l_0_14_408))))
 (let ((?x78187 (- (- ?x78181 (* (* 2.0 l_0_14_405) l_0_14_409)) (* (* 2.0 l_0_14_406) l_0_14_410))))
 (let ((?x78193 (- (- ?x78187 (* (* 2.0 l_0_14_439) l_0_14_443)) (* (* 2.0 l_0_14_440) l_0_14_444))))
 (let ((?x78199 (- (- ?x78193 (* (* 2.0 l_0_14_441) l_0_14_445)) (* (* 2.0 l_0_14_442) l_0_14_446))))
 (let ((?x78205 (- (- ?x78199 (* (* 2.0 l_0_14_475) l_0_14_479)) (* (* 2.0 l_0_14_476) l_0_14_480))))
 (let ((?x78211 (- (- ?x78205 (* (* 2.0 l_0_14_477) l_0_14_481)) (* (* 2.0 l_0_14_478) l_0_14_482))))
 (let ((?x78217 (- (- ?x78211 (* (* 2.0 l_0_14_511) l_0_14_515)) (* (* 2.0 l_0_14_512) l_0_14_516))))
 (let ((?x78223 (- (- ?x78217 (* (* 2.0 l_0_14_513) l_0_14_517)) (* (* 2.0 l_0_14_514) l_0_14_518))))
 (= ?x78223 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75650 (* ?x75419 l_0_14_53)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75648 (* ?x75416 l_0_14_52)))
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78317 (* ?x77554 l_0_14_305)))
 (let ((?x77555 (* ?x77554 l_0_14_296)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78314 (* ?x26228 l_0_14_304)))
 (let ((?x26226 (* ?x26228 l_0_14_295)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75448 (* ?x75401 l_0_14_188)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75446 (* ?x75398 l_0_14_187)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x75624 (* ?x75623 l_0_14_3)))
 (let ((?x75620 (* 2.0 l_0_14_16)))
 (let ((?x75621 (* ?x75620 l_0_14_2)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75444 (* ?x75390 l_0_14_152)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x78307 (* ?x75539 l_0_14_151)))
 (let ((?x78315 (- (+ (- (- (+ (+ (+ ?x78307 ?x75444) ?x75621) ?x75624) ?x75446) ?x75448) ?x26226) ?x78314)))
 (let ((?x78322 (- (- (- (+ ?x78315 ?x77555) ?x78317) (* (* 2.0 l_0_14_331) l_0_14_340)) (* (* 2.0 l_0_14_332) l_0_14_341))))
 (let ((?x78326 (- (- ?x78322 (* (* 2.0 l_0_14_333) l_0_14_342)) (* (* 2.0 l_0_14_334) l_0_14_343))))
 (let ((?x78330 (- (- ?x78326 (* (* 2.0 l_0_14_367) l_0_14_376)) (* (* 2.0 l_0_14_368) l_0_14_377))))
 (let ((?x78334 (- (- ?x78330 (* (* 2.0 l_0_14_369) l_0_14_378)) (* (* 2.0 l_0_14_370) l_0_14_379))))
 (let ((?x78340 (- (- (- (- ?x78334 ?x75648) ?x75650) (* (* 2.0 l_0_14_403) l_0_14_412)) (* (* 2.0 l_0_14_404) l_0_14_413))))
 (let ((?x78344 (- (- ?x78340 (* (* 2.0 l_0_14_405) l_0_14_414)) (* (* 2.0 l_0_14_406) l_0_14_415))))
 (let ((?x78348 (- (- ?x78344 (* (* 2.0 l_0_14_439) l_0_14_448)) (* (* 2.0 l_0_14_440) l_0_14_449))))
 (let ((?x78352 (- (- ?x78348 (* (* 2.0 l_0_14_441) l_0_14_450)) (* (* 2.0 l_0_14_442) l_0_14_451))))
 (let ((?x78356 (- (- ?x78352 (* (* 2.0 l_0_14_475) l_0_14_484)) (* (* 2.0 l_0_14_476) l_0_14_485))))
 (let ((?x78360 (- (- ?x78356 (* (* 2.0 l_0_14_477) l_0_14_486)) (* (* 2.0 l_0_14_478) l_0_14_487))))
 (let ((?x78364 (- (- ?x78360 (* (* 2.0 l_0_14_511) l_0_14_520)) (* (* 2.0 l_0_14_512) l_0_14_521))))
 (let ((?x78368 (- (- ?x78364 (* (* 2.0 l_0_14_513) l_0_14_522)) (* (* 2.0 l_0_14_514) l_0_14_523))))
 (= ?x78368 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75723 (* ?x75419 l_0_14_59)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75721 (* ?x75416 l_0_14_58)))
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78441 (* ?x77554 l_0_14_311)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78439 (* ?x26228 l_0_14_310)))
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x78144 (* ?x78143 l_0_14_260)))
 (let ((?x78140 (* 2.0 l_0_14_254)))
 (let ((?x78141 (* ?x78140 l_0_14_259)))
 (let ((?x75715 (* 2.0 l_0_14_23)))
 (let ((?x75716 (* ?x75715 l_0_14_3)))
 (let ((?x75404 (* 2.0 l_0_14_2)))
 (let ((?x75707 (* ?x75404 l_0_14_22)))
 (let ((?x78444 (- (- (- (- (- (+ ?x75707 ?x75716) ?x78141) ?x78144) ?x78439) ?x78441) (* (* 2.0 l_0_14_331) l_0_14_346))))
 (let ((?x78448 (- (- ?x78444 (* (* 2.0 l_0_14_332) l_0_14_347)) (* (* 2.0 l_0_14_333) l_0_14_348))))
 (let ((?x78452 (- (- ?x78448 (* (* 2.0 l_0_14_334) l_0_14_349)) (* (* 2.0 l_0_14_367) l_0_14_382))))
 (let ((?x78456 (- (- ?x78452 (* (* 2.0 l_0_14_368) l_0_14_383)) (* (* 2.0 l_0_14_369) l_0_14_384))))
 (let ((?x78462 (- (- (- (- ?x78456 (* (* 2.0 l_0_14_370) l_0_14_385)) ?x75721) ?x75723) (* (* 2.0 l_0_14_403) l_0_14_418))))
 (let ((?x78466 (- (- ?x78462 (* (* 2.0 l_0_14_404) l_0_14_419)) (* (* 2.0 l_0_14_405) l_0_14_420))))
 (let ((?x78470 (- (- ?x78466 (* (* 2.0 l_0_14_406) l_0_14_421)) (* (* 2.0 l_0_14_439) l_0_14_454))))
 (let ((?x78474 (- (- ?x78470 (* (* 2.0 l_0_14_440) l_0_14_455)) (* (* 2.0 l_0_14_441) l_0_14_456))))
 (let ((?x78478 (- (- ?x78474 (* (* 2.0 l_0_14_442) l_0_14_457)) (* (* 2.0 l_0_14_475) l_0_14_490))))
 (let ((?x78482 (- (- ?x78478 (* (* 2.0 l_0_14_476) l_0_14_491)) (* (* 2.0 l_0_14_477) l_0_14_492))))
 (let ((?x78486 (- (- ?x78482 (* (* 2.0 l_0_14_478) l_0_14_493)) (* (* 2.0 l_0_14_511) l_0_14_526))))
 (let ((?x78490 (- (- ?x78486 (* (* 2.0 l_0_14_512) l_0_14_527)) (* (* 2.0 l_0_14_513) l_0_14_528))))
 (= (- ?x78490 (* (* 2.0 l_0_14_514) l_0_14_529)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x75419 (* 2.0 l_0_14_39)))
 (let ((?x75793 (* ?x75419 l_0_14_66)))
 (let ((?x75416 (* 2.0 l_0_14_38)))
 (let ((?x75791 (* ?x75416 l_0_14_65)))
 (let ((?x75413 (* 2.0 l_0_14_3)))
 (let ((?x75789 (* ?x75413 l_0_14_30)))
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78597 (* ?x77554 l_0_14_318)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78595 (* ?x26228 l_0_14_317)))
 (let ((?x75404 (* 2.0 l_0_14_2)))
 (let ((?x75781 (* ?x75404 l_0_14_29)))
 (let ((?x78594 (- (- ?x75781 (* (* 2.0 l_0_14_218) l_0_14_223)) (* (* 2.0 l_0_14_219) l_0_14_224))))
 (let ((?x78601 (- (+ (- (- ?x78594 ?x78595) ?x78597) ?x75789) (* (* 2.0 l_0_14_331) l_0_14_353))))
 (let ((?x78605 (- (- ?x78601 (* (* 2.0 l_0_14_332) l_0_14_354)) (* (* 2.0 l_0_14_333) l_0_14_355))))
 (let ((?x78609 (- (- ?x78605 (* (* 2.0 l_0_14_334) l_0_14_356)) (* (* 2.0 l_0_14_367) l_0_14_389))))
 (let ((?x78613 (- (- ?x78609 (* (* 2.0 l_0_14_368) l_0_14_390)) (* (* 2.0 l_0_14_369) l_0_14_391))))
 (let ((?x78619 (- (- (- (- ?x78613 (* (* 2.0 l_0_14_370) l_0_14_392)) ?x75791) ?x75793) (* (* 2.0 l_0_14_403) l_0_14_425))))
 (let ((?x78623 (- (- ?x78619 (* (* 2.0 l_0_14_404) l_0_14_426)) (* (* 2.0 l_0_14_405) l_0_14_427))))
 (let ((?x78627 (- (- ?x78623 (* (* 2.0 l_0_14_406) l_0_14_428)) (* (* 2.0 l_0_14_439) l_0_14_461))))
 (let ((?x78631 (- (- ?x78627 (* (* 2.0 l_0_14_440) l_0_14_462)) (* (* 2.0 l_0_14_441) l_0_14_463))))
 (let ((?x78635 (- (- ?x78631 (* (* 2.0 l_0_14_442) l_0_14_464)) (* (* 2.0 l_0_14_475) l_0_14_497))))
 (let ((?x78639 (- (- ?x78635 (* (* 2.0 l_0_14_476) l_0_14_498)) (* (* 2.0 l_0_14_477) l_0_14_499))))
 (let ((?x78643 (- (- ?x78639 (* (* 2.0 l_0_14_478) l_0_14_500)) (* (* 2.0 l_0_14_511) l_0_14_533))))
 (let ((?x78647 (- (- ?x78643 (* (* 2.0 l_0_14_512) l_0_14_534)) (* (* 2.0 l_0_14_513) l_0_14_535))))
 (= (- ?x78647 (* (* 2.0 l_0_14_514) l_0_14_536)) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x75838 (* l_0_14_6 l_0_14_6)))
 (let ((?x75836 (* l_0_14_5 l_0_14_5)))
 (let ((?x75834 (* l_0_14_42 l_0_14_42)))
 (let ((?x75832 (* l_0_14_41 l_0_14_41)))
 (let ((?x75830 (* l_0_14_40 l_0_14_40)))
 (let ((?x75828 (* l_0_14_4 l_0_14_4)))
 (let ((?x78741 (* l_0_14_294 l_0_14_294)))
 (let ((?x78742 (- (- (* (- l_0_14_292) l_0_14_292) (* l_0_14_293 l_0_14_293)) ?x78741)))
 (= (+ (+ (- (- (- (+ ?x78742 ?x75828) ?x75830) ?x75832) ?x75834) ?x75836) ?x75838) 0.0))))))))))
(assert
 (let ((?x75885 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x75882 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x75879 (* ?x75485 l_0_14_45)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x75877 (* ?x75482 l_0_14_44)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x75875 (* ?x75479 l_0_14_43)))
 (let ((?x75873 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x77626 (* ?x75209 l_0_14_297)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x77624 (* ?x75206 l_0_14_296)))
 (let ((?x78763 (- (+ (- (- (* (* (- 2.0) l_0_14_292) l_0_14_295) ?x77624) ?x77626) ?x75873) ?x75875)))
 (= (+ (+ (- (- ?x78763 ?x75877) ?x75879) ?x75882) ?x75885) 0.0))))))))))))))))
(assert
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x75930 (* ?x75485 l_0_14_49)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x75928 (* ?x75482 l_0_14_48)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x75926 (* ?x75479 l_0_14_47)))
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x78789 (* ?x75209 l_0_14_301)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x78787 (* ?x75206 l_0_14_300)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x78785 (* ?x75203 l_0_14_299)))
 (let ((?x75560 (* 2.0 l_0_14_258)))
 (let ((?x78783 (* ?x75560 l_0_14_261)))
 (let ((?x75557 (* 2.0 l_0_14_257)))
 (let ((?x78781 (* ?x75557 l_0_14_260)))
 (let ((?x75554 (* 2.0 l_0_14_256)))
 (let ((?x78779 (* ?x75554 l_0_14_259)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x75912 (* ?x75911 l_0_14_6)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x75909 (* ?x75536 l_0_14_5)))
 (let ((?x78782 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_4) ?x75909) ?x75912) ?x78779) ?x78781)))
 (let ((?x78793 (- (- (- (- (- (- (+ ?x78782 ?x78783) ?x78785) ?x78787) ?x78789) ?x75926) ?x75928) ?x75930)))
 (= ?x78793 0.0))))))))))))))))))))))))))
(assert
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x75986 (* ?x75485 l_0_14_54)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x75984 (* ?x75482 l_0_14_53)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x75982 (* ?x75479 l_0_14_52)))
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x78809 (* ?x75209 l_0_14_306)))
 (let ((?x77626 (* ?x75209 l_0_14_297)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x78806 (* ?x75206 l_0_14_305)))
 (let ((?x77624 (* ?x75206 l_0_14_296)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x56381 (* ?x75203 l_0_14_304)))
 (let ((?x77622 (* ?x75203 l_0_14_295)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x75870 (* ?x75636 l_0_14_189)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x75868 (* ?x75633 l_0_14_188)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x75866 (* ?x75630 l_0_14_187)))
 (let ((?x75973 (* 2.0 l_0_14_18)))
 (let ((?x75974 (* ?x75973 l_0_14_6)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x75971 (* ?x75623 l_0_14_5)))
 (let ((?x75620 (* 2.0 l_0_14_16)))
 (let ((?x75960 (* ?x75620 l_0_14_4)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75864 (* ?x75617 l_0_14_153)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x75862 (* ?x75614 l_0_14_152)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x76278 (* ?x75600 l_0_14_151)))
 (let ((?x56383 (- (- (+ (+ (+ (+ (+ ?x76278 ?x75862) ?x75864) ?x75960) ?x75971) ?x75974) ?x75866) ?x75868)))
 (let ((?x78810 (- (+ (- (+ (- (+ (- ?x56383 ?x75870) ?x77622) ?x56381) ?x77624) ?x78806) ?x77626) ?x78809)))
 (= (- (- (- ?x78810 ?x75982) ?x75984) ?x75986) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x75485 (* 2.0 l_0_14_42)))
 (let ((?x76044 (* ?x75485 l_0_14_60)))
 (let ((?x75482 (* 2.0 l_0_14_41)))
 (let ((?x76042 (* ?x75482 l_0_14_59)))
 (let ((?x75479 (* 2.0 l_0_14_40)))
 (let ((?x76040 (* ?x75479 l_0_14_58)))
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x78829 (* ?x75209 l_0_14_312)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x78827 (* ?x75206 l_0_14_311)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x78825 (* ?x75203 l_0_14_310)))
 (let ((?x75560 (* 2.0 l_0_14_258)))
 (let ((?x78783 (* ?x75560 l_0_14_261)))
 (let ((?x75557 (* 2.0 l_0_14_257)))
 (let ((?x78781 (* ?x75557 l_0_14_260)))
 (let ((?x75554 (* 2.0 l_0_14_256)))
 (let ((?x78779 (* ?x75554 l_0_14_259)))
 (let ((?x76037 (* 2.0 l_0_14_24)))
 (let ((?x76038 (* ?x76037 l_0_14_6)))
 (let ((?x75715 (* 2.0 l_0_14_23)))
 (let ((?x76035 (* ?x75715 l_0_14_5)))
 (let ((?x76032 (* 2.0 l_0_14_22)))
 (let ((?x76033 (* ?x76032 l_0_14_4)))
 (let ((?x78828 (- (- (- (- (- (+ (+ ?x76033 ?x76035) ?x76038) ?x78779) ?x78781) ?x78783) ?x78825) ?x78827)))
 (= (- (- (- (- ?x78828 ?x78829) ?x76040) ?x76042) ?x76044) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x76119 (* l_0_14_9 l_0_14_9)))
 (let ((?x76117 (* l_0_14_8 l_0_14_8)))
 (let ((?x76115 (* l_0_14_7 l_0_14_7)))
 (let ((?x76113 (* l_0_14_46 l_0_14_46)))
 (let ((?x76111 (* l_0_14_45 l_0_14_45)))
 (let ((?x24465 (* l_0_14_44 l_0_14_44)))
 (let ((?x24521 (* l_0_14_43 l_0_14_43)))
 (let ((?x77666 (* l_0_14_298 l_0_14_298)))
 (let ((?x77664 (* l_0_14_297 l_0_14_297)))
 (let ((?x77662 (* l_0_14_296 l_0_14_296)))
 (let ((?x27959 (- (- (- (* l_0_14_10 l_0_14_10) (* l_0_14_295 l_0_14_295)) ?x77662) ?x77664)))
 (let ((?x78845 (+ (+ (- (- (- (- (- ?x27959 ?x77666) ?x24521) ?x24465) ?x76111) ?x76113) ?x76115) ?x76117)))
 (= (+ ?x78845 ?x76119) 0.0))))))))))))))
(assert
 (let ((?x76190 (* 2.0 l_0_14_46)))
 (let ((?x76191 (* ?x76190 l_0_14_50)))
 (let ((?x76187 (* 2.0 l_0_14_45)))
 (let ((?x76188 (* ?x76187 l_0_14_49)))
 (let ((?x76184 (* 2.0 l_0_14_44)))
 (let ((?x76185 (* ?x76184 l_0_14_48)))
 (let ((?x76181 (* 2.0 l_0_14_43)))
 (let ((?x76182 (* ?x76181 l_0_14_47)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77729 (* ?x77728 l_0_14_302)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77726 (* ?x77725 l_0_14_301)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77723 (* ?x77722 l_0_14_300)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77720 (* ?x77719 l_0_14_299)))
 (let ((?x28017 (* l_0_14_262 l_0_14_262)))
 (let ((?x28023 (* l_0_14_261 l_0_14_261)))
 (let ((?x28029 (* l_0_14_260 l_0_14_260)))
 (let ((?x28035 (* l_0_14_259 l_0_14_259)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x76155 (* ?x75911 l_0_14_9)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x76153 (* ?x75536 l_0_14_8)))
 (let ((?x76150 (* 2.0 l_0_14_11)))
 (let ((?x76151 (* ?x76150 l_0_14_7)))
 (let ((?x28032 (+ (+ (+ (+ (* (* 2.0 l_0_14_10) l_0_14_14) ?x76151) ?x76153) ?x76155) ?x28035)))
 (let ((?x78849 (- (- (- (- (+ (+ (+ ?x28032 ?x28029) ?x28023) ?x28017) ?x77720) ?x77723) ?x77726) ?x77729)))
 (= (- (- (- (- ?x78849 ?x76182) ?x76185) ?x76188) ?x76191) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x76190 (* 2.0 l_0_14_46)))
 (let ((?x76245 (* ?x76190 l_0_14_55)))
 (let ((?x76187 (* 2.0 l_0_14_45)))
 (let ((?x76243 (* ?x76187 l_0_14_54)))
 (let ((?x76184 (* 2.0 l_0_14_44)))
 (let ((?x76241 (* ?x76184 l_0_14_53)))
 (let ((?x76181 (* 2.0 l_0_14_43)))
 (let ((?x76239 (* ?x76181 l_0_14_52)))
 (let ((?x77666 (* l_0_14_298 l_0_14_298)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77787 (* ?x77728 l_0_14_307)))
 (let ((?x77664 (* l_0_14_297 l_0_14_297)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77785 (* ?x77725 l_0_14_306)))
 (let ((?x77662 (* l_0_14_296 l_0_14_296)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77783 (* ?x77722 l_0_14_305)))
 (let ((?x77660 (* l_0_14_295 l_0_14_295)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77781 (* ?x77719 l_0_14_304)))
 (let ((?x24517 (* l_0_14_190 l_0_14_190)))
 (let ((?x54389 (* l_0_14_189 l_0_14_189)))
 (let ((?x54394 (* l_0_14_188 l_0_14_188)))
 (let ((?x54393 (* l_0_14_187 l_0_14_187)))
 (let ((?x75973 (* 2.0 l_0_14_18)))
 (let ((?x76229 (* ?x75973 l_0_14_9)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x76227 (* ?x75623 l_0_14_8)))
 (let ((?x75620 (* 2.0 l_0_14_16)))
 (let ((?x76225 (* ?x75620 l_0_14_7)))
 (let ((?x17762 (* l_0_14_154 l_0_14_154)))
 (let ((?x17786 (* l_0_14_153 l_0_14_153)))
 (let ((?x24542 (* l_0_14_152 l_0_14_152)))
 (let ((?x54445 (* l_0_14_151 l_0_14_151)))
 (let ((?x27976 (+ (+ (+ (+ (* (* 2.0 l_0_14_10) l_0_14_19) ?x54445) ?x24542) ?x17786) ?x17762)))
 (let ((?x28030 (- (- (- (- (+ (+ (+ ?x27976 ?x76225) ?x76227) ?x76229) ?x54393) ?x54394) ?x54389) ?x24517)))
 (let ((?x28051 (- (+ (- (+ (- (+ (- ?x28030 ?x77781) ?x77660) ?x77783) ?x77662) ?x77785) ?x77664) ?x77787)))
 (= (- (- (- (- (+ ?x28051 ?x77666) ?x76239) ?x76241) ?x76243) ?x76245) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76190 (* 2.0 l_0_14_46)))
 (let ((?x76310 (* ?x76190 l_0_14_61)))
 (let ((?x76187 (* 2.0 l_0_14_45)))
 (let ((?x76308 (* ?x76187 l_0_14_60)))
 (let ((?x76184 (* 2.0 l_0_14_44)))
 (let ((?x76306 (* ?x76184 l_0_14_59)))
 (let ((?x76181 (* 2.0 l_0_14_43)))
 (let ((?x76304 (* ?x76181 l_0_14_58)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77856 (* ?x77728 l_0_14_313)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77854 (* ?x77725 l_0_14_312)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77852 (* ?x77722 l_0_14_311)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77850 (* ?x77719 l_0_14_310)))
 (let ((?x28017 (* l_0_14_262 l_0_14_262)))
 (let ((?x28023 (* l_0_14_261 l_0_14_261)))
 (let ((?x28029 (* l_0_14_260 l_0_14_260)))
 (let ((?x28035 (* l_0_14_259 l_0_14_259)))
 (let ((?x76037 (* 2.0 l_0_14_24)))
 (let ((?x76302 (* ?x76037 l_0_14_9)))
 (let ((?x75715 (* 2.0 l_0_14_23)))
 (let ((?x76300 (* ?x75715 l_0_14_8)))
 (let ((?x76032 (* 2.0 l_0_14_22)))
 (let ((?x76298 (* ?x76032 l_0_14_7)))
 (let ((?x28240 (- (+ (+ (+ (* (* 2.0 l_0_14_10) l_0_14_25) ?x76298) ?x76300) ?x76302) ?x28035)))
 (let ((?x56586 (- (- (- (- (- (- (- ?x28240 ?x28029) ?x28023) ?x28017) ?x77850) ?x77852) ?x77854) ?x77856)))
 (= (- (- (- (- ?x56586 ?x76304) ?x76306) ?x76308) ?x76310) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x76190 (* 2.0 l_0_14_46)))
 (let ((?x76422 (* ?x76190 l_0_14_68)))
 (let ((?x76187 (* 2.0 l_0_14_45)))
 (let ((?x76420 (* ?x76187 l_0_14_67)))
 (let ((?x76184 (* 2.0 l_0_14_44)))
 (let ((?x76418 (* ?x76184 l_0_14_66)))
 (let ((?x76181 (* 2.0 l_0_14_43)))
 (let ((?x76416 (* ?x76181 l_0_14_65)))
 (let ((?x75472 (* 2.0 l_0_14_31)))
 (let ((?x76414 (* ?x75472 l_0_14_9)))
 (let ((?x75469 (* 2.0 l_0_14_30)))
 (let ((?x76412 (* ?x75469 l_0_14_8)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77941 (* ?x77728 l_0_14_320)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77939 (* ?x77725 l_0_14_319)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77937 (* ?x77722 l_0_14_318)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77935 (* ?x77719 l_0_14_317)))
 (let ((?x75461 (* 2.0 l_0_14_29)))
 (let ((?x76410 (* ?x75461 l_0_14_7)))
 (let ((?x56680 (* l_0_14_226 l_0_14_226)))
 (let ((?x56674 (* l_0_14_225 l_0_14_225)))
 (let ((?x56729 (* l_0_14_224 l_0_14_224)))
 (let ((?x56741 (* l_0_14_223 l_0_14_223)))
 (let ((?x56683 (- (- (- (- (* (* 2.0 l_0_14_10) l_0_14_32) ?x56741) ?x56729) ?x56674) ?x56680)))
 (let ((?x56684 (+ (+ (- (- (- (- (+ ?x56683 ?x76410) ?x77935) ?x77937) ?x77939) ?x77941) ?x76412) ?x76414)))
 (= (- (- (- (- ?x56684 ?x76416) ?x76418) ?x76420) ?x76422) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x76492 (* l_0_14_51 l_0_14_51)))
 (let ((?x76490 (* l_0_14_50 l_0_14_50)))
 (let ((?x76488 (* l_0_14_49 l_0_14_49)))
 (let ((?x76486 (* l_0_14_48 l_0_14_48)))
 (let ((?x76484 (* l_0_14_47 l_0_14_47)))
 (let ((?x78900 (* l_0_14_303 l_0_14_303)))
 (let ((?x78898 (* l_0_14_302 l_0_14_302)))
 (let ((?x78896 (* l_0_14_301 l_0_14_301)))
 (let ((?x78894 (* l_0_14_300 l_0_14_300)))
 (let ((?x78892 (* l_0_14_299 l_0_14_299)))
 (let ((?x78889 (* 2.0 l_0_14_262)))
 (let ((?x78890 (* ?x78889 l_0_14_266)))
 (let ((?x78886 (* 2.0 l_0_14_261)))
 (let ((?x78887 (* ?x78886 l_0_14_265)))
 (let ((?x78883 (* 2.0 l_0_14_260)))
 (let ((?x78884 (* ?x78883 l_0_14_264)))
 (let ((?x78880 (* 2.0 l_0_14_259)))
 (let ((?x78881 (* ?x78880 l_0_14_263)))
 (let ((?x76462 (* l_0_14_15 l_0_14_15)))
 (let ((?x76460 (* l_0_14_14 l_0_14_14)))
 (let ((?x76447 (* l_0_14_13 l_0_14_13)))
 (let ((?x78878 (+ (+ (+ (* l_0_14_11 l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x76447) ?x76460)))
 (let ((?x78895 (- (- (+ (+ (+ (+ (+ ?x78878 ?x76462) ?x78881) ?x78884) ?x78887) ?x78890) ?x78892) ?x78894)))
 (let ((?x78905 (- (- (- (- (- (- (- ?x78895 ?x78896) ?x78898) ?x78900) ?x76484) ?x76486) ?x76488) ?x76490)))
 (= (- ?x78905 ?x76492) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x76566 (* 2.0 l_0_14_51)))
 (let ((?x76567 (* ?x76566 l_0_14_56)))
 (let ((?x76563 (* 2.0 l_0_14_50)))
 (let ((?x76564 (* ?x76563 l_0_14_55)))
 (let ((?x76560 (* 2.0 l_0_14_49)))
 (let ((?x76561 (* ?x76560 l_0_14_54)))
 (let ((?x76557 (* 2.0 l_0_14_48)))
 (let ((?x76558 (* ?x76557 l_0_14_53)))
 (let ((?x76554 (* 2.0 l_0_14_47)))
 (let ((?x76555 (* ?x76554 l_0_14_52)))
 (let ((?x78931 (* 2.0 l_0_14_303)))
 (let ((?x78932 (* ?x78931 l_0_14_308)))
 (let ((?x78928 (* 2.0 l_0_14_302)))
 (let ((?x78929 (* ?x78928 l_0_14_307)))
 (let ((?x78925 (* 2.0 l_0_14_301)))
 (let ((?x78926 (* ?x78925 l_0_14_306)))
 (let ((?x78922 (* 2.0 l_0_14_300)))
 (let ((?x78923 (* ?x78922 l_0_14_305)))
 (let ((?x78919 (* 2.0 l_0_14_299)))
 (let ((?x78920 (* ?x78919 l_0_14_304)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77729 (* ?x77728 l_0_14_302)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77726 (* ?x77725 l_0_14_301)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77723 (* ?x77722 l_0_14_300)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77720 (* ?x77719 l_0_14_299)))
 (let ((?x78889 (* 2.0 l_0_14_262)))
 (let ((?x56738 (* ?x78889 l_0_14_271)))
 (let ((?x78886 (* 2.0 l_0_14_261)))
 (let ((?x56766 (* ?x78886 l_0_14_270)))
 (let ((?x78883 (* 2.0 l_0_14_260)))
 (let ((?x28445 (* ?x78883 l_0_14_269)))
 (let ((?x78880 (* 2.0 l_0_14_259)))
 (let ((?x56752 (* ?x78880 l_0_14_268)))
 (let ((?x76178 (* 2.0 l_0_14_190)))
 (let ((?x76179 (* ?x76178 l_0_14_194)))
 (let ((?x76175 (* 2.0 l_0_14_189)))
 (let ((?x76176 (* ?x76175 l_0_14_193)))
 (let ((?x76172 (* 2.0 l_0_14_188)))
 (let ((?x76173 (* ?x76172 l_0_14_192)))
 (let ((?x76169 (* 2.0 l_0_14_187)))
 (let ((?x76170 (* ?x76169 l_0_14_191)))
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76167 (* ?x76166 l_0_14_158)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76164 (* ?x76163 l_0_14_157)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76161 (* ?x76160 l_0_14_156)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76158 (* ?x76157 l_0_14_155)))
 (let ((?x76521 (* 2.0 l_0_14_15)))
 (let ((?x76522 (* ?x76521 l_0_14_20)))
 (let ((?x76518 (* 2.0 l_0_14_14)))
 (let ((?x76519 (* ?x76518 l_0_14_19)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x76516 (* ?x75911 l_0_14_18)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x76514 (* ?x75536 l_0_14_17)))
 (let ((?x28505 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_16) ?x76514) ?x76516) ?x76519) ?x76522)))
 (let ((?x28419 (- (- (- (+ (+ (+ (+ ?x28505 ?x76158) ?x76161) ?x76164) ?x76167) ?x76170) ?x76173) ?x76176)))
 (let ((?x28464 (+ (+ (+ (+ (+ (+ (- ?x28419 ?x76179) ?x56752) ?x28445) ?x56766) ?x56738) ?x77720) ?x77723)))
 (let ((?x78933 (- (- (- (- (- (+ (+ ?x28464 ?x77726) ?x77729) ?x78920) ?x78923) ?x78926) ?x78929) ?x78932)))
 (= (- (- (- (- (- ?x78933 ?x76555) ?x76558) ?x76561) ?x76564) ?x76567) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76566 (* 2.0 l_0_14_51)))
 (let ((?x76664 (* ?x76566 l_0_14_62)))
 (let ((?x76563 (* 2.0 l_0_14_50)))
 (let ((?x76662 (* ?x76563 l_0_14_61)))
 (let ((?x76560 (* 2.0 l_0_14_49)))
 (let ((?x76660 (* ?x76560 l_0_14_60)))
 (let ((?x76557 (* 2.0 l_0_14_48)))
 (let ((?x76658 (* ?x76557 l_0_14_59)))
 (let ((?x76554 (* 2.0 l_0_14_47)))
 (let ((?x76656 (* ?x76554 l_0_14_58)))
 (let ((?x78931 (* 2.0 l_0_14_303)))
 (let ((?x78950 (* ?x78931 l_0_14_314)))
 (let ((?x78928 (* 2.0 l_0_14_302)))
 (let ((?x78948 (* ?x78928 l_0_14_313)))
 (let ((?x78925 (* 2.0 l_0_14_301)))
 (let ((?x78946 (* ?x78925 l_0_14_312)))
 (let ((?x78922 (* 2.0 l_0_14_300)))
 (let ((?x78944 (* ?x78922 l_0_14_311)))
 (let ((?x78919 (* 2.0 l_0_14_299)))
 (let ((?x78942 (* ?x78919 l_0_14_310)))
 (let ((?x78889 (* 2.0 l_0_14_262)))
 (let ((?x78940 (* ?x78889 l_0_14_277)))
 (let ((?x78890 (* ?x78889 l_0_14_266)))
 (let ((?x78886 (* 2.0 l_0_14_261)))
 (let ((?x28653 (* ?x78886 l_0_14_276)))
 (let ((?x78887 (* ?x78886 l_0_14_265)))
 (let ((?x78883 (* 2.0 l_0_14_260)))
 (let ((?x28640 (* ?x78883 l_0_14_275)))
 (let ((?x78884 (* ?x78883 l_0_14_264)))
 (let ((?x78880 (* 2.0 l_0_14_259)))
 (let ((?x28701 (* ?x78880 l_0_14_274)))
 (let ((?x78881 (* ?x78880 l_0_14_263)))
 (let ((?x76521 (* 2.0 l_0_14_15)))
 (let ((?x76633 (* ?x76521 l_0_14_26)))
 (let ((?x76518 (* 2.0 l_0_14_14)))
 (let ((?x76629 (* ?x76518 l_0_14_25)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x76614 (* ?x75911 l_0_14_24)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x76610 (* ?x75536 l_0_14_23)))
 (let ((?x28787 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_22) ?x76610) ?x76614) ?x76629) ?x76633)))
 (let ((?x56814 (- (+ (- (+ (- (+ (- ?x28787 ?x78881) ?x28701) ?x78884) ?x28640) ?x78887) ?x28653) ?x78890)))
 (let ((?x78952 (- (- (- (- (- (- (+ ?x56814 ?x78940) ?x78942) ?x78944) ?x78946) ?x78948) ?x78950) ?x76656)))
 (= (- (- (- (- ?x78952 ?x76658) ?x76660) ?x76662) ?x76664) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76566 (* 2.0 l_0_14_51)))
 (let ((?x76732 (* ?x76566 l_0_14_69)))
 (let ((?x76563 (* 2.0 l_0_14_50)))
 (let ((?x76730 (* ?x76563 l_0_14_68)))
 (let ((?x76560 (* 2.0 l_0_14_49)))
 (let ((?x76728 (* ?x76560 l_0_14_67)))
 (let ((?x76557 (* 2.0 l_0_14_48)))
 (let ((?x76726 (* ?x76557 l_0_14_66)))
 (let ((?x76554 (* 2.0 l_0_14_47)))
 (let ((?x76724 (* ?x76554 l_0_14_65)))
 (let ((?x78931 (* 2.0 l_0_14_303)))
 (let ((?x79014 (* ?x78931 l_0_14_321)))
 (let ((?x78928 (* 2.0 l_0_14_302)))
 (let ((?x79012 (* ?x78928 l_0_14_320)))
 (let ((?x78925 (* 2.0 l_0_14_301)))
 (let ((?x79010 (* ?x78925 l_0_14_319)))
 (let ((?x78922 (* 2.0 l_0_14_300)))
 (let ((?x79008 (* ?x78922 l_0_14_318)))
 (let ((?x78919 (* 2.0 l_0_14_299)))
 (let ((?x79006 (* ?x78919 l_0_14_317)))
 (let ((?x78889 (* 2.0 l_0_14_262)))
 (let ((?x79004 (* ?x78889 l_0_14_284)))
 (let ((?x78886 (* 2.0 l_0_14_261)))
 (let ((?x79002 (* ?x78886 l_0_14_283)))
 (let ((?x78883 (* 2.0 l_0_14_260)))
 (let ((?x79000 (* ?x78883 l_0_14_282)))
 (let ((?x78880 (* 2.0 l_0_14_259)))
 (let ((?x78998 (* ?x78880 l_0_14_281)))
 (let ((?x76521 (* 2.0 l_0_14_15)))
 (let ((?x76702 (* ?x76521 l_0_14_33)))
 (let ((?x76518 (* 2.0 l_0_14_14)))
 (let ((?x76700 (* ?x76518 l_0_14_32)))
 (let ((?x75911 (* 2.0 l_0_14_13)))
 (let ((?x76698 (* ?x75911 l_0_14_31)))
 (let ((?x75536 (* 2.0 l_0_14_12)))
 (let ((?x76696 (* ?x75536 l_0_14_30)))
 (let ((?x56979 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_29) ?x76696) ?x76698) ?x76700) ?x76702)))
 (let ((?x29151 (- (- ?x56979 (* (* 2.0 l_0_14_223) l_0_14_227)) (* (* 2.0 l_0_14_224) l_0_14_228))))
 (let ((?x78997 (- (- ?x29151 (* (* 2.0 l_0_14_225) l_0_14_229)) (* (* 2.0 l_0_14_226) l_0_14_230))))
 (let ((?x79011 (- (- (- (+ (+ (+ (+ ?x78997 ?x78998) ?x79000) ?x79002) ?x79004) ?x79006) ?x79008) ?x79010)))
 (let ((?x79020 (- (- (- (- (- (- (- ?x79011 ?x79012) ?x79014) ?x76724) ?x76726) ?x76728) ?x76730) ?x76732)))
 (= ?x79020 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76826 (* l_0_14_57 l_0_14_57)))
 (let ((?x76824 (* l_0_14_56 l_0_14_56)))
 (let ((?x76822 (* l_0_14_55 l_0_14_55)))
 (let ((?x76820 (* l_0_14_54 l_0_14_54)))
 (let ((?x76818 (* l_0_14_53 l_0_14_53)))
 (let ((?x76816 (* l_0_14_52 l_0_14_52)))
 (let ((?x79083 (* l_0_14_309 l_0_14_309)))
 (let ((?x79081 (* l_0_14_308 l_0_14_308)))
 (let ((?x79079 (* l_0_14_307 l_0_14_307)))
 (let ((?x79077 (* l_0_14_306 l_0_14_306)))
 (let ((?x79075 (* l_0_14_305 l_0_14_305)))
 (let ((?x79073 (* l_0_14_304 l_0_14_304)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77787 (* ?x77728 l_0_14_307)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77785 (* ?x77725 l_0_14_306)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77783 (* ?x77722 l_0_14_305)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77781 (* ?x77719 l_0_14_304)))
 (let ((?x76814 (* l_0_14_21 l_0_14_21)))
 (let ((?x76808 (* l_0_14_20 l_0_14_20)))
 (let ((?x76178 (* 2.0 l_0_14_190)))
 (let ((?x76237 (* ?x76178 l_0_14_199)))
 (let ((?x76798 (* l_0_14_19 l_0_14_19)))
 (let ((?x76175 (* 2.0 l_0_14_189)))
 (let ((?x76235 (* ?x76175 l_0_14_198)))
 (let ((?x76172 (* 2.0 l_0_14_188)))
 (let ((?x76233 (* ?x76172 l_0_14_197)))
 (let ((?x76169 (* 2.0 l_0_14_187)))
 (let ((?x76231 (* ?x76169 l_0_14_196)))
 (let ((?x76796 (* l_0_14_18 l_0_14_18)))
 (let ((?x76794 (* l_0_14_17 l_0_14_17)))
 (let ((?x76830 (* l_0_14_16 l_0_14_16)))
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76223 (* ?x76166 l_0_14_163)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76221 (* ?x76163 l_0_14_162)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76219 (* ?x76160 l_0_14_161)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76217 (* ?x76157 l_0_14_160)))
 (let ((?x79062 (- (+ (+ (+ (+ (+ (+ ?x76217 ?x76219) ?x76221) ?x76223) ?x76830) ?x76794) ?x76796) ?x76231)))
 (let ((?x79069 (+ (+ (+ (- (+ (- (- ?x79062 ?x76233) ?x76235) ?x76798) ?x76237) ?x76808) ?x76814) ?x77781)))
 (let ((?x79080 (- (- (- (- (+ (+ (+ ?x79069 ?x77783) ?x77785) ?x77787) ?x79073) ?x79075) ?x79077) ?x79079)))
 (let ((?x79089 (- (- (- (- (- (- (- ?x79080 ?x79081) ?x79083) ?x76816) ?x76818) ?x76820) ?x76822) ?x76824)))
 (= (- ?x79089 ?x76826) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76947 (* 2.0 l_0_14_57)))
 (let ((?x76948 (* ?x76947 l_0_14_63)))
 (let ((?x76944 (* 2.0 l_0_14_56)))
 (let ((?x76945 (* ?x76944 l_0_14_62)))
 (let ((?x76941 (* 2.0 l_0_14_55)))
 (let ((?x76942 (* ?x76941 l_0_14_61)))
 (let ((?x76938 (* 2.0 l_0_14_54)))
 (let ((?x76939 (* ?x76938 l_0_14_60)))
 (let ((?x76935 (* 2.0 l_0_14_53)))
 (let ((?x76936 (* ?x76935 l_0_14_59)))
 (let ((?x76932 (* 2.0 l_0_14_52)))
 (let ((?x76933 (* ?x76932 l_0_14_58)))
 (let ((?x79104 (* 2.0 l_0_14_309)))
 (let ((?x79105 (* ?x79104 l_0_14_315)))
 (let ((?x79101 (* 2.0 l_0_14_308)))
 (let ((?x79102 (* ?x79101 l_0_14_314)))
 (let ((?x79098 (* 2.0 l_0_14_307)))
 (let ((?x79099 (* ?x79098 l_0_14_313)))
 (let ((?x79095 (* 2.0 l_0_14_306)))
 (let ((?x79096 (* ?x79095 l_0_14_312)))
 (let ((?x79092 (* 2.0 l_0_14_305)))
 (let ((?x79093 (* ?x79092 l_0_14_311)))
 (let ((?x57079 (* 2.0 l_0_14_304)))
 (let ((?x57072 (* ?x57079 l_0_14_310)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77856 (* ?x77728 l_0_14_313)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77854 (* ?x77725 l_0_14_312)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77852 (* ?x77722 l_0_14_311)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77850 (* ?x77719 l_0_14_310)))
 (let ((?x78889 (* 2.0 l_0_14_262)))
 (let ((?x56738 (* ?x78889 l_0_14_271)))
 (let ((?x78886 (* 2.0 l_0_14_261)))
 (let ((?x56766 (* ?x78886 l_0_14_270)))
 (let ((?x78883 (* 2.0 l_0_14_260)))
 (let ((?x28445 (* ?x78883 l_0_14_269)))
 (let ((?x78880 (* 2.0 l_0_14_259)))
 (let ((?x56752 (* ?x78880 l_0_14_268)))
 (let ((?x76929 (* 2.0 l_0_14_21)))
 (let ((?x76930 (* ?x76929 l_0_14_27)))
 (let ((?x76920 (* 2.0 l_0_14_20)))
 (let ((?x76921 (* ?x76920 l_0_14_26)))
 (let ((?x76178 (* 2.0 l_0_14_190)))
 (let ((?x76296 (* ?x76178 l_0_14_205)))
 (let ((?x76905 (* 2.0 l_0_14_19)))
 (let ((?x76906 (* ?x76905 l_0_14_25)))
 (let ((?x76175 (* 2.0 l_0_14_189)))
 (let ((?x76294 (* ?x76175 l_0_14_204)))
 (let ((?x76172 (* 2.0 l_0_14_188)))
 (let ((?x76292 (* ?x76172 l_0_14_203)))
 (let ((?x76169 (* 2.0 l_0_14_187)))
 (let ((?x76290 (* ?x76169 l_0_14_202)))
 (let ((?x75973 (* 2.0 l_0_14_18)))
 (let ((?x76903 (* ?x75973 l_0_14_24)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x76901 (* ?x75623 l_0_14_23)))
 (let ((?x75620 (* 2.0 l_0_14_16)))
 (let ((?x76881 (* ?x75620 l_0_14_22)))
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76288 (* ?x76166 l_0_14_169)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76286 (* ?x76163 l_0_14_168)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76284 (* ?x76160 l_0_14_167)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76282 (* ?x76157 l_0_14_166)))
 (let ((?x57267 (- (+ (+ (+ (+ (+ (+ ?x76282 ?x76284) ?x76286) ?x76288) ?x76881) ?x76901) ?x76903) ?x76290)))
 (let ((?x57116 (- (+ (+ (- (+ (- (- ?x57267 ?x76292) ?x76294) ?x76906) ?x76296) ?x76921) ?x76930) ?x56752)))
 (let ((?x29502 (+ (+ (+ (+ (- (- (- ?x57116 ?x28445) ?x56766) ?x56738) ?x77850) ?x77852) ?x77854) ?x77856)))
 (let ((?x79107 (- (- (- (- (- (- (- ?x29502 ?x57072) ?x79093) ?x79096) ?x79099) ?x79102) ?x79105) ?x76933)))
 (= (- (- (- (- (- ?x79107 ?x76936) ?x76939) ?x76942) ?x76945) ?x76948) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x76947 (* 2.0 l_0_14_57)))
 (let ((?x77096 (* ?x76947 l_0_14_70)))
 (let ((?x76944 (* 2.0 l_0_14_56)))
 (let ((?x77094 (* ?x76944 l_0_14_69)))
 (let ((?x76941 (* 2.0 l_0_14_55)))
 (let ((?x77092 (* ?x76941 l_0_14_68)))
 (let ((?x76938 (* 2.0 l_0_14_54)))
 (let ((?x77090 (* ?x76938 l_0_14_67)))
 (let ((?x76935 (* 2.0 l_0_14_53)))
 (let ((?x77088 (* ?x76935 l_0_14_66)))
 (let ((?x76932 (* 2.0 l_0_14_52)))
 (let ((?x77086 (* ?x76932 l_0_14_65)))
 (let ((?x79104 (* 2.0 l_0_14_309)))
 (let ((?x79168 (* ?x79104 l_0_14_322)))
 (let ((?x79101 (* 2.0 l_0_14_308)))
 (let ((?x79166 (* ?x79101 l_0_14_321)))
 (let ((?x79098 (* 2.0 l_0_14_307)))
 (let ((?x79164 (* ?x79098 l_0_14_320)))
 (let ((?x79095 (* 2.0 l_0_14_306)))
 (let ((?x79162 (* ?x79095 l_0_14_319)))
 (let ((?x79092 (* 2.0 l_0_14_305)))
 (let ((?x79160 (* ?x79092 l_0_14_318)))
 (let ((?x57079 (* 2.0 l_0_14_304)))
 (let ((?x79158 (* ?x57079 l_0_14_317)))
 (let ((?x77728 (* 2.0 l_0_14_298)))
 (let ((?x77941 (* ?x77728 l_0_14_320)))
 (let ((?x77725 (* 2.0 l_0_14_297)))
 (let ((?x77939 (* ?x77725 l_0_14_319)))
 (let ((?x77722 (* 2.0 l_0_14_296)))
 (let ((?x77937 (* ?x77722 l_0_14_318)))
 (let ((?x77719 (* 2.0 l_0_14_295)))
 (let ((?x77935 (* ?x77719 l_0_14_317)))
 (let ((?x76929 (* 2.0 l_0_14_21)))
 (let ((?x77084 (* ?x76929 l_0_14_34)))
 (let ((?x76920 (* 2.0 l_0_14_20)))
 (let ((?x77078 (* ?x76920 l_0_14_33)))
 (let ((?x76178 (* 2.0 l_0_14_190)))
 (let ((?x76408 (* ?x76178 l_0_14_212)))
 (let ((?x76905 (* 2.0 l_0_14_19)))
 (let ((?x77068 (* ?x76905 l_0_14_32)))
 (let ((?x76175 (* 2.0 l_0_14_189)))
 (let ((?x76406 (* ?x76175 l_0_14_211)))
 (let ((?x76172 (* 2.0 l_0_14_188)))
 (let ((?x76404 (* ?x76172 l_0_14_210)))
 (let ((?x76169 (* 2.0 l_0_14_187)))
 (let ((?x76402 (* ?x76169 l_0_14_209)))
 (let ((?x75973 (* 2.0 l_0_14_18)))
 (let ((?x77066 (* ?x75973 l_0_14_31)))
 (let ((?x75623 (* 2.0 l_0_14_17)))
 (let ((?x77064 (* ?x75623 l_0_14_30)))
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76400 (* ?x76166 l_0_14_176)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76398 (* ?x76163 l_0_14_175)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76396 (* ?x76160 l_0_14_174)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76394 (* ?x76157 l_0_14_173)))
 (let ((?x79136 (+ (+ (+ (+ ?x76394 ?x76396) ?x76398) ?x76400) (* (* 2.0 l_0_14_16) l_0_14_29))))
 (let ((?x79143 (- (+ (- (- (- (+ (+ ?x79136 ?x77064) ?x77066) ?x76402) ?x76404) ?x76406) ?x77068) ?x76408)))
 (let ((?x79149 (- (- (+ (+ ?x79143 ?x77078) ?x77084) (* (* 2.0 l_0_14_223) l_0_14_232)) (* (* 2.0 l_0_14_224) l_0_14_233))))
 (let ((?x79153 (- (- ?x79149 (* (* 2.0 l_0_14_225) l_0_14_234)) (* (* 2.0 l_0_14_226) l_0_14_235))))
 (let ((?x79163 (- (- (- (+ (+ (+ (+ ?x79153 ?x77935) ?x77937) ?x77939) ?x77941) ?x79158) ?x79160) ?x79162)))
 (let ((?x79173 (- (- (- (- (- (- (- ?x79163 ?x79164) ?x79166) ?x79168) ?x77086) ?x77088) ?x77090) ?x77092)))
 (= (- (- ?x79173 ?x77094) ?x77096) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77189 (* l_0_14_64 l_0_14_64)))
 (let ((?x77187 (* l_0_14_63 l_0_14_63)))
 (let ((?x77185 (* l_0_14_62 l_0_14_62)))
 (let ((?x77183 (* l_0_14_61 l_0_14_61)))
 (let ((?x77181 (* l_0_14_60 l_0_14_60)))
 (let ((?x77179 (* l_0_14_59 l_0_14_59)))
 (let ((?x77177 (* l_0_14_58 l_0_14_58)))
 (let ((?x57416 (* l_0_14_316 l_0_14_316)))
 (let ((?x29967 (* l_0_14_315 l_0_14_315)))
 (let ((?x57404 (* l_0_14_314 l_0_14_314)))
 (let ((?x57403 (* l_0_14_313 l_0_14_313)))
 (let ((?x57397 (* l_0_14_312 l_0_14_312)))
 (let ((?x57394 (* l_0_14_311 l_0_14_311)))
 (let ((?x29792 (* l_0_14_310 l_0_14_310)))
 (let ((?x77175 (* l_0_14_28 l_0_14_28)))
 (let ((?x77173 (* l_0_14_27 l_0_14_27)))
 (let ((?x78889 (* 2.0 l_0_14_262)))
 (let ((?x78940 (* ?x78889 l_0_14_277)))
 (let ((?x78886 (* 2.0 l_0_14_261)))
 (let ((?x28653 (* ?x78886 l_0_14_276)))
 (let ((?x78883 (* 2.0 l_0_14_260)))
 (let ((?x28640 (* ?x78883 l_0_14_275)))
 (let ((?x77171 (* l_0_14_26 l_0_14_26)))
 (let ((?x78880 (* 2.0 l_0_14_259)))
 (let ((?x28701 (* ?x78880 l_0_14_274)))
 (let ((?x77169 (* l_0_14_25 l_0_14_25)))
 (let ((?x77167 (* l_0_14_24 l_0_14_24)))
 (let ((?x57577 (+ (+ (+ (* l_0_14_22 l_0_14_22) (* l_0_14_23 l_0_14_23)) ?x77167) ?x77169)))
 (let ((?x29789 (+ (+ (- (- (- (+ (- ?x57577 ?x28701) ?x77171) ?x28640) ?x28653) ?x78940) ?x77173) ?x77175)))
 (let ((?x57419 (- (- (- (- (- (- (- ?x29789 ?x29792) ?x57394) ?x57397) ?x57403) ?x57404) ?x29967) ?x57416)))
 (let ((?x57435 (- (- (- (- (- (- (- ?x57419 ?x77177) ?x77179) ?x77181) ?x77183) ?x77185) ?x77187) ?x77189)))
 (= ?x57435 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x77344 (* (* 2.0 l_0_14_64) l_0_14_71)))
 (let ((?x77341 (* (* 2.0 l_0_14_63) l_0_14_70)))
 (let ((?x77338 (* (* 2.0 l_0_14_62) l_0_14_69)))
 (let ((?x77335 (* (* 2.0 l_0_14_61) l_0_14_68)))
 (let ((?x77332 (* (* 2.0 l_0_14_60) l_0_14_67)))
 (let ((?x77329 (* (* 2.0 l_0_14_59) l_0_14_66)))
 (let ((?x77326 (* (* 2.0 l_0_14_58) l_0_14_65)))
 (let ((?x79209 (* (* 2.0 l_0_14_316) l_0_14_323)))
 (let ((?x79206 (* (* 2.0 l_0_14_315) l_0_14_322)))
 (let ((?x79203 (* (* 2.0 l_0_14_314) l_0_14_321)))
 (let ((?x79200 (* (* 2.0 l_0_14_313) l_0_14_320)))
 (let ((?x57446 (* (* 2.0 l_0_14_312) l_0_14_319)))
 (let ((?x30214 (* (* 2.0 l_0_14_311) l_0_14_318)))
 (let ((?x30574 (* (* 2.0 l_0_14_310) l_0_14_317)))
 (let ((?x77323 (* (* 2.0 l_0_14_28) l_0_14_35)))
 (let ((?x77320 (* (* 2.0 l_0_14_27) l_0_14_34)))
 (let ((?x78889 (* 2.0 l_0_14_262)))
 (let ((?x79004 (* ?x78889 l_0_14_284)))
 (let ((?x78886 (* 2.0 l_0_14_261)))
 (let ((?x79002 (* ?x78886 l_0_14_283)))
 (let ((?x78883 (* 2.0 l_0_14_260)))
 (let ((?x79000 (* ?x78883 l_0_14_282)))
 (let ((?x77317 (* (* 2.0 l_0_14_26) l_0_14_33)))
 (let ((?x78880 (* 2.0 l_0_14_259)))
 (let ((?x78998 (* ?x78880 l_0_14_281)))
 (let ((?x77314 (* (* 2.0 l_0_14_25) l_0_14_32)))
 (let ((?x76037 (* 2.0 l_0_14_24)))
 (let ((?x77311 (* ?x76037 l_0_14_31)))
 (let ((?x75715 (* 2.0 l_0_14_23)))
 (let ((?x77309 (* ?x75715 l_0_14_30)))
 (let ((?x76032 (* 2.0 l_0_14_22)))
 (let ((?x77307 (* ?x76032 l_0_14_29)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75444 (* ?x75390 l_0_14_152)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x78307 (* ?x75539 l_0_14_151)))
 (let ((?x30553 (+ (* (* 1.0 l_0_14_110) l_0_14_115) (* (* 1.0 l_0_14_111) l_0_14_116))))
 (let ((?x30666 (- (+ (- (- ?x30553 ?x78307) ?x75444) ?x77307) (* (* 2.0 l_0_14_223) l_0_14_238))))
 (let ((?x57750 (- (- ?x30666 (* (* 2.0 l_0_14_224) l_0_14_239)) (* (* 2.0 l_0_14_225) l_0_14_240))))
 (let ((?x57754 (+ (+ (+ (- ?x57750 (* (* 2.0 l_0_14_226) l_0_14_241)) ?x77309) ?x77311) ?x77314)))
 (let ((?x30647 (+ (+ (- (- (- (+ (- ?x57754 ?x78998) ?x77317) ?x79000) ?x79002) ?x79004) ?x77320) ?x77323)))
 (let ((?x79210 (- (- (- (- (- (- (- ?x30647 ?x30574) ?x30214) ?x57446) ?x79200) ?x79203) ?x79206) ?x79209)))
 (let ((?x79217 (- (- (- (- (- (- (- ?x79210 ?x77326) ?x77329) ?x77332) ?x77335) ?x77338) ?x77341) ?x77344)))
 (let ((?x79221 (- (- ?x79217 (* (* 1.0 l_0_14_74) l_0_14_79)) (* (* 1.0 l_0_14_75) l_0_14_80))))
 (= ?x79221 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77483 (* l_0_14_72 l_0_14_72)))
 (let ((?x77481 (* l_0_14_71 l_0_14_71)))
 (let ((?x77479 (* l_0_14_70 l_0_14_70)))
 (let ((?x77477 (* l_0_14_69 l_0_14_69)))
 (let ((?x77475 (* l_0_14_68 l_0_14_68)))
 (let ((?x77473 (* l_0_14_67 l_0_14_67)))
 (let ((?x77471 (* l_0_14_66 l_0_14_66)))
 (let ((?x77469 (* l_0_14_65 l_0_14_65)))
 (let ((?x77467 (* l_0_14_36 l_0_14_36)))
 (let ((?x77465 (* l_0_14_35 l_0_14_35)))
 (let ((?x77463 (* l_0_14_34 l_0_14_34)))
 (let ((?x77461 (* l_0_14_33 l_0_14_33)))
 (let ((?x79264 (* l_0_14_324 l_0_14_324)))
 (let ((?x79262 (* l_0_14_323 l_0_14_323)))
 (let ((?x79260 (* l_0_14_322 l_0_14_322)))
 (let ((?x79258 (* l_0_14_321 l_0_14_321)))
 (let ((?x79256 (* l_0_14_320 l_0_14_320)))
 (let ((?x77459 (* l_0_14_32 l_0_14_32)))
 (let ((?x79253 (* l_0_14_319 l_0_14_319)))
 (let ((?x79251 (* l_0_14_318 l_0_14_318)))
 (let ((?x79249 (* l_0_14_317 l_0_14_317)))
 (let ((?x77457 (* l_0_14_31 l_0_14_31)))
 (let ((?x77455 (* l_0_14_30 l_0_14_30)))
 (let ((?x77453 (* l_0_14_29 l_0_14_29)))
 (let ((?x31188 (- (* (* (- 2.0) l_0_14_223) l_0_14_245) (* (* 2.0 l_0_14_224) l_0_14_246))))
 (let ((?x57960 (- (- ?x31188 (* (* 2.0 l_0_14_225) l_0_14_247)) (* (* 2.0 l_0_14_226) l_0_14_248))))
 (let ((?x79255 (+ (- (- (- (+ (+ (+ ?x57960 ?x77453) ?x77455) ?x77457) ?x79249) ?x79251) ?x79253) ?x77459)))
 (let ((?x79267 (+ (+ (- (- (- (- (- ?x79255 ?x79256) ?x79258) ?x79260) ?x79262) ?x79264) ?x77461) ?x77463)))
 (let ((?x79274 (- (- (- (- (- (+ (+ ?x79267 ?x77465) ?x77467) ?x77469) ?x77471) ?x77473) ?x77475) ?x77477)))
 (= (- (- (- ?x79274 ?x77479) ?x77481) ?x77483) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x75160 (* l_0_14_145 l_0_14_145)))
 (let ((?x58165 (* l_0_14_109 l_0_14_109)))
 (let ((?x58161 (* (/ 1.0 2.0) ?x58165)))
 (= (- (- ?x58161 ?x75160) (* (* (/ 1.0 2.0) l_0_14_73) l_0_14_73)) 0.0)))))
(assert
 (let ((?x79209 (* (* 2.0 l_0_14_316) l_0_14_323)))
 (let ((?x79206 (* (* 2.0 l_0_14_315) l_0_14_322)))
 (let ((?x79203 (* (* 2.0 l_0_14_314) l_0_14_321)))
 (let ((?x79200 (* (* 2.0 l_0_14_313) l_0_14_320)))
 (let ((?x57446 (* (* 2.0 l_0_14_312) l_0_14_319)))
 (let ((?x30214 (* (* 2.0 l_0_14_311) l_0_14_318)))
 (let ((?x30574 (* (* 2.0 l_0_14_310) l_0_14_317)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x79328 (* ?x77714 l_0_14_281)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75195 (* ?x75194 l_0_14_146)))
 (let ((?x58174 (+ (* (* 2.0 l_0_14_100) l_0_14_107) (* (* 2.0 l_0_14_101) l_0_14_94))))
 (let ((?x58110 (+ (+ ?x58174 (* (* 2.0 l_0_14_102) l_0_14_95)) (* (* 2.0 l_0_14_103) l_0_14_96))))
 (let ((?x31399 (+ (+ ?x58110 (* (* 2.0 l_0_14_104) l_0_14_97)) (* (* 2.0 l_0_14_105) l_0_14_98))))
 (let ((?x79303 (+ (+ ?x31399 (* (* 2.0 l_0_14_106) l_0_14_99)) (* (* 1.0 l_0_14_109) l_0_14_110))))
 (let ((?x79309 (- (- ?x79303 (* (* 2.0 l_0_14_130) l_0_14_137)) (* (* 2.0 l_0_14_131) l_0_14_138))))
 (let ((?x79315 (- (- ?x79309 (* (* 2.0 l_0_14_132) l_0_14_139)) (* (* 2.0 l_0_14_133) l_0_14_140))))
 (let ((?x79321 (- (- ?x79315 (* (* 2.0 l_0_14_134) l_0_14_141)) (* (* 2.0 l_0_14_135) l_0_14_142))))
 (let ((?x79327 (- (- (- ?x79321 (* (* 2.0 l_0_14_136) l_0_14_143)) ?x75195) (* (* 2.0 l_0_14_217) l_0_14_238))))
 (let ((?x79335 (- (- (- (- (- (- (- ?x79327 ?x79328) ?x30574) ?x30214) ?x57446) ?x79200) ?x79203) ?x79206)))
 (= (- (- ?x79335 ?x79209) (* (* 1.0 l_0_14_73) l_0_14_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75275 (* ?x75194 l_0_14_151)))
 (let ((?x79387 (- (- (* (* 1.0 l_0_14_109) l_0_14_115) ?x75275) (* (* 1.0 l_0_14_73) l_0_14_79))))
 (= ?x79387 0.0)))))
(assert
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75293 (* ?x75194 l_0_14_155)))
 (let ((?x79398 (- (- (* (* 1.0 l_0_14_109) l_0_14_119) ?x75293) (* (* 1.0 l_0_14_73) l_0_14_83))))
 (= ?x79398 0.0)))))
(assert
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75316 (* ?x75194 l_0_14_160)))
 (let ((?x79411 (- (- (* (* 1.0 l_0_14_109) l_0_14_124) ?x75316) (* (* 1.0 l_0_14_73) l_0_14_88))))
 (= ?x79411 0.0)))))
(assert
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75344 (* ?x75194 l_0_14_166)))
 (let ((?x79424 (- (- (* (* 1.0 l_0_14_109) l_0_14_130) ?x75344) (* (* 1.0 l_0_14_73) l_0_14_94))))
 (= ?x79424 0.0)))))
(assert
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x23701 (* ?x75194 l_0_14_173)))
 (let ((?x79432 (+ (* (* (- 1.0) l_0_14_101) l_0_14_73) (* (* 1.0 l_0_14_109) l_0_14_137))))
 (= (- ?x79432 ?x23701) 0.0)))))
(assert
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x79457 (* ?x78143 l_0_14_282)))
 (let ((?x78140 (* 2.0 l_0_14_254)))
 (let ((?x79455 (* ?x78140 l_0_14_281)))
 (let ((?x74977 (* l_0_14_147 l_0_14_147)))
 (let ((?x74976 (* l_0_14_146 l_0_14_146)))
 (let ((?x79448 (+ (* (/ 1.0 2.0) (* l_0_14_110 l_0_14_110)) (* (/ 1.0 2.0) (* l_0_14_111 l_0_14_111)))))
 (let ((?x79454 (- (- (- (- ?x79448 ?x74976) ?x74977) (* (* 2.0 l_0_14_218) l_0_14_238)) (* (* 2.0 l_0_14_219) l_0_14_239))))
 (let ((?x79464 (- (- (- (- ?x79454 ?x79455) ?x79457) (* (* 2.0 l_0_14_346) l_0_14_353)) (* (* 2.0 l_0_14_347) l_0_14_354))))
 (let ((?x79470 (- (- ?x79464 (* (* 2.0 l_0_14_348) l_0_14_355)) (* (* 2.0 l_0_14_349) l_0_14_356))))
 (let ((?x79476 (- (- ?x79470 (* (* 2.0 l_0_14_350) l_0_14_357)) (* (* 2.0 l_0_14_351) l_0_14_358))))
 (let ((?x79482 (- (- ?x79476 (* (* 2.0 l_0_14_352) l_0_14_359)) (* (* 2.0 l_0_14_382) l_0_14_389))))
 (let ((?x79488 (- (- ?x79482 (* (* 2.0 l_0_14_383) l_0_14_390)) (* (* 2.0 l_0_14_384) l_0_14_391))))
 (let ((?x79494 (- (- ?x79488 (* (* 2.0 l_0_14_385) l_0_14_392)) (* (* 2.0 l_0_14_386) l_0_14_393))))
 (let ((?x79500 (- (- ?x79494 (* (* 2.0 l_0_14_387) l_0_14_394)) (* (* 2.0 l_0_14_388) l_0_14_395))))
 (let ((?x79506 (- (- ?x79500 (* (* 2.0 l_0_14_418) l_0_14_425)) (* (* 2.0 l_0_14_419) l_0_14_426))))
 (let ((?x79512 (- (- ?x79506 (* (* 2.0 l_0_14_420) l_0_14_427)) (* (* 2.0 l_0_14_421) l_0_14_428))))
 (let ((?x79518 (- (- ?x79512 (* (* 2.0 l_0_14_422) l_0_14_429)) (* (* 2.0 l_0_14_423) l_0_14_430))))
 (let ((?x79524 (- (- ?x79518 (* (* 2.0 l_0_14_424) l_0_14_431)) (* (* 2.0 l_0_14_454) l_0_14_461))))
 (let ((?x79530 (- (- ?x79524 (* (* 2.0 l_0_14_455) l_0_14_462)) (* (* 2.0 l_0_14_456) l_0_14_463))))
 (let ((?x79536 (- (- ?x79530 (* (* 2.0 l_0_14_457) l_0_14_464)) (* (* 2.0 l_0_14_458) l_0_14_465))))
 (let ((?x79542 (- (- ?x79536 (* (* 2.0 l_0_14_459) l_0_14_466)) (* (* 2.0 l_0_14_460) l_0_14_467))))
 (let ((?x79548 (- (- ?x79542 (* (* 2.0 l_0_14_490) l_0_14_497)) (* (* 2.0 l_0_14_491) l_0_14_498))))
 (let ((?x79554 (- (- ?x79548 (* (* 2.0 l_0_14_492) l_0_14_499)) (* (* 2.0 l_0_14_493) l_0_14_500))))
 (let ((?x79560 (- (- ?x79554 (* (* 2.0 l_0_14_494) l_0_14_501)) (* (* 2.0 l_0_14_495) l_0_14_502))))
 (let ((?x79566 (- (- ?x79560 (* (* 2.0 l_0_14_496) l_0_14_503)) (* (* 2.0 l_0_14_526) l_0_14_533))))
 (let ((?x79572 (- (- ?x79566 (* (* 2.0 l_0_14_527) l_0_14_534)) (* (* 2.0 l_0_14_528) l_0_14_535))))
 (let ((?x79578 (- (- ?x79572 (* (* 2.0 l_0_14_529) l_0_14_536)) (* (* 2.0 l_0_14_530) l_0_14_537))))
 (let ((?x79584 (- (- ?x79578 (* (* 2.0 l_0_14_531) l_0_14_538)) (* (* 2.0 l_0_14_532) l_0_14_539))))
 (let ((?x79590 (- (- ?x79584 (* (* (/ 1.0 2.0) l_0_14_74) l_0_14_74)) (* (* (/ 1.0 2.0) l_0_14_75) l_0_14_75))))
 (= ?x79590 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x79745 (* (* 2.0 l_0_14_280) l_0_14_287)))
 (let ((?x79742 (* (* 2.0 l_0_14_279) l_0_14_286)))
 (let ((?x79739 (* (* 2.0 l_0_14_278) l_0_14_285)))
 (let ((?x79736 (* (* 2.0 l_0_14_277) l_0_14_284)))
 (let ((?x79733 (* (* 2.0 l_0_14_276) l_0_14_283)))
 (let ((?x79730 (* (* 2.0 l_0_14_275) l_0_14_282)))
 (let ((?x79727 (* (* 2.0 l_0_14_274) l_0_14_281)))
 (let ((?x79723 (* 2.0 l_0_14_267)))
 (let ((?x79724 (* ?x79723 l_0_14_285)))
 (let ((?x79720 (* 2.0 l_0_14_266)))
 (let ((?x79721 (* ?x79720 l_0_14_284)))
 (let ((?x79717 (* 2.0 l_0_14_265)))
 (let ((?x79718 (* ?x79717 l_0_14_283)))
 (let ((?x79714 (* 2.0 l_0_14_264)))
 (let ((?x79715 (* ?x79714 l_0_14_282)))
 (let ((?x79711 (* 2.0 l_0_14_263)))
 (let ((?x79712 (* ?x79711 l_0_14_281)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75542 (* ?x75390 l_0_14_156)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x75540 (* ?x75539 l_0_14_155)))
 (let ((?x79693 (+ (* (* 1.0 l_0_14_110) l_0_14_119) (* (* 1.0 l_0_14_111) l_0_14_120))))
 (let ((?x79701 (- (- (- (- ?x79693 ?x75540) ?x75542) (* (* 2.0 l_0_14_227) l_0_14_238)) (* (* 2.0 l_0_14_228) l_0_14_239))))
 (let ((?x79707 (- (- ?x79701 (* (* 2.0 l_0_14_229) l_0_14_240)) (* (* 2.0 l_0_14_230) l_0_14_241))))
 (let ((?x79719 (- (- (- (- ?x79707 (* (* 2.0 l_0_14_231) l_0_14_242)) ?x79712) ?x79715) ?x79718)))
 (let ((?x79740 (+ (+ (+ (+ (+ (- (- ?x79719 ?x79721) ?x79724) ?x79727) ?x79730) ?x79733) ?x79736) ?x79739)))
 (let ((?x79750 (- (- (+ (+ ?x79740 ?x79742) ?x79745) (* (* 1.0 l_0_14_74) l_0_14_83)) (* (* 1.0 l_0_14_75) l_0_14_84))))
 (= ?x79750 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x79209 (* (* 2.0 l_0_14_316) l_0_14_323)))
 (let ((?x79206 (* (* 2.0 l_0_14_315) l_0_14_322)))
 (let ((?x79203 (* (* 2.0 l_0_14_314) l_0_14_321)))
 (let ((?x79200 (* (* 2.0 l_0_14_313) l_0_14_320)))
 (let ((?x57446 (* (* 2.0 l_0_14_312) l_0_14_319)))
 (let ((?x30214 (* (* 2.0 l_0_14_311) l_0_14_318)))
 (let ((?x30574 (* (* 2.0 l_0_14_310) l_0_14_317)))
 (let ((?x79865 (* 2.0 l_0_14_273)))
 (let ((?x79866 (* ?x79865 l_0_14_286)))
 (let ((?x79862 (* 2.0 l_0_14_272)))
 (let ((?x79863 (* ?x79862 l_0_14_285)))
 (let ((?x79859 (* 2.0 l_0_14_271)))
 (let ((?x79860 (* ?x79859 l_0_14_284)))
 (let ((?x79856 (* 2.0 l_0_14_270)))
 (let ((?x79857 (* ?x79856 l_0_14_283)))
 (let ((?x79853 (* 2.0 l_0_14_269)))
 (let ((?x79854 (* ?x79853 l_0_14_282)))
 (let ((?x79850 (* 2.0 l_0_14_268)))
 (let ((?x79851 (* ?x79850 l_0_14_281)))
 (let ((?x77305 (* (* 2.0 l_0_14_208) l_0_14_215)))
 (let ((?x77302 (* (* 2.0 l_0_14_207) l_0_14_214)))
 (let ((?x77299 (* (* 2.0 l_0_14_206) l_0_14_213)))
 (let ((?x77296 (* (* 2.0 l_0_14_205) l_0_14_212)))
 (let ((?x77293 (* (* 2.0 l_0_14_204) l_0_14_211)))
 (let ((?x77290 (* (* 2.0 l_0_14_203) l_0_14_210)))
 (let ((?x77287 (* (* 2.0 l_0_14_202) l_0_14_209)))
 (let ((?x77284 (* (* 2.0 l_0_14_172) l_0_14_179)))
 (let ((?x77281 (* (* 2.0 l_0_14_171) l_0_14_178)))
 (let ((?x77278 (* (* 2.0 l_0_14_170) l_0_14_177)))
 (let ((?x77275 (* (* 2.0 l_0_14_169) l_0_14_176)))
 (let ((?x77272 (* (* 2.0 l_0_14_168) l_0_14_175)))
 (let ((?x77269 (* (* 2.0 l_0_14_167) l_0_14_174)))
 (let ((?x77266 (* (* 2.0 l_0_14_166) l_0_14_173)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75596 (* ?x75390 l_0_14_161)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x79815 (* ?x75539 l_0_14_160)))
 (let ((?x79814 (+ (* (* 1.0 l_0_14_110) l_0_14_124) (* (* 1.0 l_0_14_111) l_0_14_125))))
 (let ((?x79822 (+ (+ (+ (+ (+ (- (- ?x79814 ?x79815) ?x75596) ?x77266) ?x77269) ?x77272) ?x77275) ?x77278)))
 (let ((?x79829 (- (- (- (- (- (+ (+ ?x79822 ?x77281) ?x77284) ?x77287) ?x77290) ?x77293) ?x77296) ?x77299)))
 (let ((?x79837 (- (- (- (- ?x79829 ?x77302) ?x77305) (* (* 2.0 l_0_14_232) l_0_14_238)) (* (* 2.0 l_0_14_233) l_0_14_239))))
 (let ((?x79843 (- (- ?x79837 (* (* 2.0 l_0_14_234) l_0_14_240)) (* (* 2.0 l_0_14_235) l_0_14_241))))
 (let ((?x79849 (- (- ?x79843 (* (* 2.0 l_0_14_236) l_0_14_242)) (* (* 2.0 l_0_14_237) l_0_14_243))))
 (let ((?x79868 (+ (- (- (- (- (- (- ?x79849 ?x79851) ?x79854) ?x79857) ?x79860) ?x79863) ?x79866) ?x30574)))
 (let ((?x79876 (- (+ (+ (+ (+ (+ (+ ?x79868 ?x30214) ?x57446) ?x79200) ?x79203) ?x79206) ?x79209) (* (* 1.0 l_0_14_74) l_0_14_88))))
 (= (- ?x79876 (* (* 1.0 l_0_14_75) l_0_14_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x79745 (* (* 2.0 l_0_14_280) l_0_14_287)))
 (let ((?x79742 (* (* 2.0 l_0_14_279) l_0_14_286)))
 (let ((?x79739 (* (* 2.0 l_0_14_278) l_0_14_285)))
 (let ((?x79736 (* (* 2.0 l_0_14_277) l_0_14_284)))
 (let ((?x79733 (* (* 2.0 l_0_14_276) l_0_14_283)))
 (let ((?x79730 (* (* 2.0 l_0_14_275) l_0_14_282)))
 (let ((?x79727 (* (* 2.0 l_0_14_274) l_0_14_281)))
 (let ((?x79910 (* l_0_14_244 l_0_14_244)))
 (let ((?x79908 (* l_0_14_243 l_0_14_243)))
 (let ((?x79906 (* l_0_14_242 l_0_14_242)))
 (let ((?x79904 (* l_0_14_241 l_0_14_241)))
 (let ((?x79902 (* l_0_14_240 l_0_14_240)))
 (let ((?x79900 (* l_0_14_239 l_0_14_239)))
 (let ((?x79898 (* l_0_14_238 l_0_14_238)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75701 (* ?x75390 l_0_14_167)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x75698 (* ?x75539 l_0_14_166)))
 (let ((?x79895 (+ (* (* 1.0 l_0_14_110) l_0_14_130) (* (* 1.0 l_0_14_111) l_0_14_131))))
 (let ((?x79907 (- (- (- (- (- (- (- ?x79895 ?x75698) ?x75701) ?x79898) ?x79900) ?x79902) ?x79904) ?x79906)))
 (let ((?x79916 (- (- (- (- (- (- (- ?x79907 ?x79908) ?x79910) ?x79727) ?x79730) ?x79733) ?x79736) ?x79739)))
 (let ((?x79922 (- (- (- (- ?x79916 ?x79742) ?x79745) (* (* 1.0 l_0_14_74) l_0_14_94)) (* (* 1.0 l_0_14_75) l_0_14_95))))
 (= ?x79922 0.0))))))))))))))))))))))))
(assert
 (let ((?x79970 (* l_0_14_288 l_0_14_288)))
 (let ((?x79968 (* l_0_14_287 l_0_14_287)))
 (let ((?x79966 (* l_0_14_286 l_0_14_286)))
 (let ((?x79964 (* l_0_14_285 l_0_14_285)))
 (let ((?x79962 (* l_0_14_284 l_0_14_284)))
 (let ((?x79960 (* l_0_14_283 l_0_14_283)))
 (let ((?x79958 (* l_0_14_282 l_0_14_282)))
 (let ((?x79956 (* l_0_14_281 l_0_14_281)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75775 (* ?x75390 l_0_14_174)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x59484 (* ?x75539 l_0_14_173)))
 (let ((?x59453 (- (* (* (- 1.0) l_0_14_101) l_0_14_74) (* (* 1.0 l_0_14_102) l_0_14_75))))
 (let ((?x59482 (+ (+ ?x59453 (* (* 1.0 l_0_14_110) l_0_14_137)) (* (* 1.0 l_0_14_111) l_0_14_138))))
 (let ((?x79940 (- (- (- (- ?x59482 ?x59484) ?x75775) (* (* 2.0 l_0_14_238) l_0_14_245)) (* (* 2.0 l_0_14_239) l_0_14_246))))
 (let ((?x79946 (- (- ?x79940 (* (* 2.0 l_0_14_240) l_0_14_247)) (* (* 2.0 l_0_14_241) l_0_14_248))))
 (let ((?x79952 (- (- ?x79946 (* (* 2.0 l_0_14_242) l_0_14_249)) (* (* 2.0 l_0_14_243) l_0_14_250))))
 (let ((?x79961 (- (- (- (- ?x79952 (* (* 2.0 l_0_14_244) l_0_14_251)) ?x79956) ?x79958) ?x79960)))
 (= (- (- (- (- (- ?x79961 ?x79962) ?x79964) ?x79966) ?x79968) ?x79970) 0.0))))))))))))))))))))
(assert
 (let ((?x17762 (* l_0_14_154 l_0_14_154)))
 (let ((?x17786 (* l_0_14_153 l_0_14_153)))
 (let ((?x24542 (* l_0_14_152 l_0_14_152)))
 (let ((?x54445 (* l_0_14_151 l_0_14_151)))
 (let ((?x79998 (+ (* (/ 1.0 2.0) (* l_0_14_115 l_0_14_115)) (* (/ 1.0 2.0) (* l_0_14_116 l_0_14_116)))))
 (let ((?x80002 (+ (+ ?x79998 (* (/ 1.0 2.0) (* l_0_14_117 l_0_14_117))) (* (/ 1.0 2.0) (* l_0_14_118 l_0_14_118)))))
 (let ((?x80009 (- (- (- (- (- ?x80002 ?x54445) ?x24542) ?x17786) ?x17762) (* (* (/ 1.0 2.0) l_0_14_79) l_0_14_79))))
 (let ((?x80015 (- (- ?x80009 (* (* (/ 1.0 2.0) l_0_14_80) l_0_14_80)) (* (* (/ 1.0 2.0) l_0_14_81) l_0_14_81))))
 (= (- ?x80015 (* (* (/ 1.0 2.0) l_0_14_82) l_0_14_82)) 0.0))))))))))
(assert
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76167 (* ?x76166 l_0_14_158)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76164 (* ?x76163 l_0_14_157)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76161 (* ?x76160 l_0_14_156)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76158 (* ?x76157 l_0_14_155)))
 (let ((?x80041 (+ (* (* 1.0 l_0_14_115) l_0_14_119) (* (* 1.0 l_0_14_116) l_0_14_120))))
 (let ((?x80047 (+ (+ ?x80041 (* (* 1.0 l_0_14_117) l_0_14_121)) (* (* 1.0 l_0_14_118) l_0_14_122))))
 (let ((?x80054 (- (- (- (- (- ?x80047 ?x76158) ?x76161) ?x76164) ?x76167) (* (* 1.0 l_0_14_79) l_0_14_83))))
 (let ((?x80060 (- (- ?x80054 (* (* 1.0 l_0_14_80) l_0_14_84)) (* (* 1.0 l_0_14_81) l_0_14_85))))
 (= (- ?x80060 (* (* 1.0 l_0_14_82) l_0_14_86)) 0.0))))))))))))))
(assert
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76223 (* ?x76166 l_0_14_163)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76221 (* ?x76163 l_0_14_162)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76219 (* ?x76160 l_0_14_161)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76217 (* ?x76157 l_0_14_160)))
 (let ((?x80080 (+ (* (* 1.0 l_0_14_115) l_0_14_124) (* (* 1.0 l_0_14_116) l_0_14_125))))
 (let ((?x80084 (+ (+ ?x80080 (* (* 1.0 l_0_14_117) l_0_14_126)) (* (* 1.0 l_0_14_118) l_0_14_127))))
 (let ((?x80090 (- (- (- (- (- ?x80084 ?x76217) ?x76219) ?x76221) ?x76223) (* (* 1.0 l_0_14_79) l_0_14_88))))
 (let ((?x80094 (- (- ?x80090 (* (* 1.0 l_0_14_80) l_0_14_89)) (* (* 1.0 l_0_14_81) l_0_14_90))))
 (= (- ?x80094 (* (* 1.0 l_0_14_82) l_0_14_91)) 0.0))))))))))))))
(assert
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76288 (* ?x76166 l_0_14_169)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76286 (* ?x76163 l_0_14_168)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76284 (* ?x76160 l_0_14_167)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76282 (* ?x76157 l_0_14_166)))
 (let ((?x80107 (+ (* (* 1.0 l_0_14_115) l_0_14_130) (* (* 1.0 l_0_14_116) l_0_14_131))))
 (let ((?x80111 (+ (+ ?x80107 (* (* 1.0 l_0_14_117) l_0_14_132)) (* (* 1.0 l_0_14_118) l_0_14_133))))
 (let ((?x80117 (- (- (- (- (- ?x80111 ?x76282) ?x76284) ?x76286) ?x76288) (* (* 1.0 l_0_14_79) l_0_14_94))))
 (let ((?x80121 (- (- ?x80117 (* (* 1.0 l_0_14_80) l_0_14_95)) (* (* 1.0 l_0_14_81) l_0_14_96))))
 (= (- ?x80121 (* (* 1.0 l_0_14_82) l_0_14_97)) 0.0))))))))))))))
(assert
 (let ((?x76166 (* 2.0 l_0_14_154)))
 (let ((?x76400 (* ?x76166 l_0_14_176)))
 (let ((?x76163 (* 2.0 l_0_14_153)))
 (let ((?x76398 (* ?x76163 l_0_14_175)))
 (let ((?x76160 (* 2.0 l_0_14_152)))
 (let ((?x76396 (* ?x76160 l_0_14_174)))
 (let ((?x76157 (* 2.0 l_0_14_151)))
 (let ((?x76394 (* ?x76157 l_0_14_173)))
 (let ((?x80149 (- (* (* (- 1.0) l_0_14_101) l_0_14_79) (* (* 1.0 l_0_14_102) l_0_14_80))))
 (let ((?x80154 (- (- ?x80149 (* (* 1.0 l_0_14_103) l_0_14_81)) (* (* 1.0 l_0_14_104) l_0_14_82))))
 (let ((?x80158 (+ (+ ?x80154 (* (* 1.0 l_0_14_115) l_0_14_137)) (* (* 1.0 l_0_14_116) l_0_14_138))))
 (let ((?x80162 (+ (+ ?x80158 (* (* 1.0 l_0_14_117) l_0_14_139)) (* (* 1.0 l_0_14_118) l_0_14_140))))
 (= (- (- (- (- ?x80162 ?x76394) ?x76396) ?x76398) ?x76400) 0.0))))))))))))))
(assert
 (let ((?x76472 (* l_0_14_159 l_0_14_159)))
 (let ((?x76470 (* l_0_14_158 l_0_14_158)))
 (let ((?x76468 (* l_0_14_157 l_0_14_157)))
 (let ((?x76466 (* l_0_14_156 l_0_14_156)))
 (let ((?x76464 (* l_0_14_155 l_0_14_155)))
 (let ((?x80190 (+ (* (/ 1.0 2.0) (* l_0_14_119 l_0_14_119)) (* (/ 1.0 2.0) (* l_0_14_120 l_0_14_120)))))
 (let ((?x80196 (+ (+ ?x80190 (* (/ 1.0 2.0) (* l_0_14_121 l_0_14_121))) (* (/ 1.0 2.0) (* l_0_14_122 l_0_14_122)))))
 (let ((?x80202 (- (- (- (+ ?x80196 (* (/ 1.0 2.0) (* l_0_14_123 l_0_14_123))) ?x76464) ?x76466) ?x76468)))
 (let ((?x80210 (- (- (- (- ?x80202 ?x76470) ?x76472) (* (* (/ 1.0 2.0) l_0_14_83) l_0_14_83)) (* (* (/ 1.0 2.0) l_0_14_84) l_0_14_84))))
 (let ((?x80216 (- (- ?x80210 (* (* (/ 1.0 2.0) l_0_14_85) l_0_14_85)) (* (* (/ 1.0 2.0) l_0_14_86) l_0_14_86))))
 (= (- ?x80216 (* (* (/ 1.0 2.0) l_0_14_87) l_0_14_87)) 0.0))))))))))))
(assert
 (let ((?x76536 (* 2.0 l_0_14_159)))
 (let ((?x76537 (* ?x76536 l_0_14_164)))
 (let ((?x76533 (* 2.0 l_0_14_158)))
 (let ((?x76534 (* ?x76533 l_0_14_163)))
 (let ((?x76530 (* 2.0 l_0_14_157)))
 (let ((?x76531 (* ?x76530 l_0_14_162)))
 (let ((?x76527 (* 2.0 l_0_14_156)))
 (let ((?x76528 (* ?x76527 l_0_14_161)))
 (let ((?x76524 (* 2.0 l_0_14_155)))
 (let ((?x76525 (* ?x76524 l_0_14_160)))
 (let ((?x80241 (+ (* (* 1.0 l_0_14_119) l_0_14_124) (* (* 1.0 l_0_14_120) l_0_14_125))))
 (let ((?x80247 (+ (+ ?x80241 (* (* 1.0 l_0_14_121) l_0_14_126)) (* (* 1.0 l_0_14_122) l_0_14_127))))
 (let ((?x80253 (- (- (- (+ ?x80247 (* (* 1.0 l_0_14_123) l_0_14_128)) ?x76525) ?x76528) ?x76531)))
 (let ((?x80261 (- (- (- (- ?x80253 ?x76534) ?x76537) (* (* 1.0 l_0_14_83) l_0_14_88)) (* (* 1.0 l_0_14_84) l_0_14_89))))
 (let ((?x80267 (- (- ?x80261 (* (* 1.0 l_0_14_85) l_0_14_90)) (* (* 1.0 l_0_14_86) l_0_14_91))))
 (= (- ?x80267 (* (* 1.0 l_0_14_87) l_0_14_92)) 0.0)))))))))))))))))
(assert
 (let ((?x76536 (* 2.0 l_0_14_159)))
 (let ((?x76644 (* ?x76536 l_0_14_170)))
 (let ((?x76533 (* 2.0 l_0_14_158)))
 (let ((?x76642 (* ?x76533 l_0_14_169)))
 (let ((?x76530 (* 2.0 l_0_14_157)))
 (let ((?x76640 (* ?x76530 l_0_14_168)))
 (let ((?x76527 (* 2.0 l_0_14_156)))
 (let ((?x76638 (* ?x76527 l_0_14_167)))
 (let ((?x76524 (* 2.0 l_0_14_155)))
 (let ((?x76636 (* ?x76524 l_0_14_166)))
 (let ((?x80291 (+ (* (* 1.0 l_0_14_119) l_0_14_130) (* (* 1.0 l_0_14_120) l_0_14_131))))
 (let ((?x80295 (+ (+ ?x80291 (* (* 1.0 l_0_14_121) l_0_14_132)) (* (* 1.0 l_0_14_122) l_0_14_133))))
 (let ((?x80300 (- (- (- (+ ?x80295 (* (* 1.0 l_0_14_123) l_0_14_134)) ?x76636) ?x76638) ?x76640)))
 (let ((?x80306 (- (- (- (- ?x80300 ?x76642) ?x76644) (* (* 1.0 l_0_14_83) l_0_14_94)) (* (* 1.0 l_0_14_84) l_0_14_95))))
 (let ((?x80310 (- (- ?x80306 (* (* 1.0 l_0_14_85) l_0_14_96)) (* (* 1.0 l_0_14_86) l_0_14_97))))
 (= (- ?x80310 (* (* 1.0 l_0_14_87) l_0_14_98)) 0.0)))))))))))))))))
(assert
 (let ((?x76536 (* 2.0 l_0_14_159)))
 (let ((?x76712 (* ?x76536 l_0_14_177)))
 (let ((?x76533 (* 2.0 l_0_14_158)))
 (let ((?x76710 (* ?x76533 l_0_14_176)))
 (let ((?x76530 (* 2.0 l_0_14_157)))
 (let ((?x76708 (* ?x76530 l_0_14_175)))
 (let ((?x76527 (* 2.0 l_0_14_156)))
 (let ((?x76706 (* ?x76527 l_0_14_174)))
 (let ((?x76524 (* 2.0 l_0_14_155)))
 (let ((?x76704 (* ?x76524 l_0_14_173)))
 (let ((?x80327 (- (* (* (- 1.0) l_0_14_101) l_0_14_83) (* (* 1.0 l_0_14_102) l_0_14_84))))
 (let ((?x80331 (- (- ?x80327 (* (* 1.0 l_0_14_103) l_0_14_85)) (* (* 1.0 l_0_14_104) l_0_14_86))))
 (let ((?x80336 (+ (- ?x80331 (* (* 1.0 l_0_14_105) l_0_14_87)) (* (* 1.0 l_0_14_119) l_0_14_137))))
 (let ((?x80340 (+ (+ ?x80336 (* (* 1.0 l_0_14_120) l_0_14_138)) (* (* 1.0 l_0_14_121) l_0_14_139))))
 (let ((?x80344 (+ (+ ?x80340 (* (* 1.0 l_0_14_122) l_0_14_140)) (* (* 1.0 l_0_14_123) l_0_14_141))))
 (= (- (- (- (- (- ?x80344 ?x76704) ?x76706) ?x76708) ?x76710) ?x76712) 0.0)))))))))))))))))
(assert
 (let ((?x76792 (* l_0_14_165 l_0_14_165)))
 (let ((?x76777 (* l_0_14_164 l_0_14_164)))
 (let ((?x76774 (* l_0_14_163 l_0_14_163)))
 (let ((?x76770 (* l_0_14_162 l_0_14_162)))
 (let ((?x76766 (* l_0_14_161 l_0_14_161)))
 (let ((?x76762 (* l_0_14_160 l_0_14_160)))
 (let ((?x80387 (* l_0_14_129 l_0_14_129)))
 (let ((?x80388 (* (/ 1.0 2.0) ?x80387)))
 (let ((?x80384 (* l_0_14_128 l_0_14_128)))
 (let ((?x80385 (* (/ 1.0 2.0) ?x80384)))
 (let ((?x80381 (* l_0_14_127 l_0_14_127)))
 (let ((?x80382 (* (/ 1.0 2.0) ?x80381)))
 (let ((?x80378 (* l_0_14_126 l_0_14_126)))
 (let ((?x80379 (* (/ 1.0 2.0) ?x80378)))
 (let ((?x80375 (* l_0_14_125 l_0_14_125)))
 (let ((?x80376 (* (/ 1.0 2.0) ?x80375)))
 (let ((?x33471 (* l_0_14_124 l_0_14_124)))
 (let ((?x60209 (* (/ 1.0 2.0) ?x33471)))
 (let ((?x80391 (- (- (+ (+ (+ (+ (+ ?x60209 ?x80376) ?x80379) ?x80382) ?x80385) ?x80388) ?x76762) ?x76766)))
 (let ((?x80398 (- (- (- (- (- ?x80391 ?x76770) ?x76774) ?x76777) ?x76792) (* (* (/ 1.0 2.0) l_0_14_88) l_0_14_88))))
 (let ((?x80404 (- (- ?x80398 (* (* (/ 1.0 2.0) l_0_14_89) l_0_14_89)) (* (* (/ 1.0 2.0) l_0_14_90) l_0_14_90))))
 (let ((?x80410 (- (- ?x80404 (* (* (/ 1.0 2.0) l_0_14_91) l_0_14_91)) (* (* (/ 1.0 2.0) l_0_14_92) l_0_14_92))))
 (= (- ?x80410 (* (* (/ 1.0 2.0) l_0_14_93) l_0_14_93)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x76898 (* 2.0 l_0_14_165)))
 (let ((?x76899 (* ?x76898 l_0_14_171)))
 (let ((?x76895 (* 2.0 l_0_14_164)))
 (let ((?x76896 (* ?x76895 l_0_14_170)))
 (let ((?x76892 (* 2.0 l_0_14_163)))
 (let ((?x76893 (* ?x76892 l_0_14_169)))
 (let ((?x76889 (* 2.0 l_0_14_162)))
 (let ((?x76890 (* ?x76889 l_0_14_168)))
 (let ((?x76886 (* 2.0 l_0_14_161)))
 (let ((?x76887 (* ?x76886 l_0_14_167)))
 (let ((?x76883 (* 2.0 l_0_14_160)))
 (let ((?x76884 (* ?x76883 l_0_14_166)))
 (let ((?x80430 (+ (* (* 1.0 l_0_14_124) l_0_14_130) (* (* 1.0 l_0_14_125) l_0_14_131))))
 (let ((?x80436 (+ (+ ?x80430 (* (* 1.0 l_0_14_126) l_0_14_132)) (* (* 1.0 l_0_14_127) l_0_14_133))))
 (let ((?x80442 (+ (+ ?x80436 (* (* 1.0 l_0_14_128) l_0_14_134)) (* (* 1.0 l_0_14_129) l_0_14_135))))
 (let ((?x80451 (- (- (- (- (- (- (- ?x80442 ?x76884) ?x76887) ?x76890) ?x76893) ?x76896) ?x76899) (* (* 1.0 l_0_14_88) l_0_14_94))))
 (let ((?x80457 (- (- ?x80451 (* (* 1.0 l_0_14_89) l_0_14_95)) (* (* 1.0 l_0_14_90) l_0_14_96))))
 (let ((?x80463 (- (- ?x80457 (* (* 1.0 l_0_14_91) l_0_14_97)) (* (* 1.0 l_0_14_92) l_0_14_98))))
 (= (- ?x80463 (* (* 1.0 l_0_14_93) l_0_14_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x76898 (* 2.0 l_0_14_165)))
 (let ((?x77062 (* ?x76898 l_0_14_178)))
 (let ((?x76895 (* 2.0 l_0_14_164)))
 (let ((?x77060 (* ?x76895 l_0_14_177)))
 (let ((?x76892 (* 2.0 l_0_14_163)))
 (let ((?x77058 (* ?x76892 l_0_14_176)))
 (let ((?x76889 (* 2.0 l_0_14_162)))
 (let ((?x77056 (* ?x76889 l_0_14_175)))
 (let ((?x76886 (* 2.0 l_0_14_161)))
 (let ((?x77054 (* ?x76886 l_0_14_174)))
 (let ((?x76883 (* 2.0 l_0_14_160)))
 (let ((?x77052 (* ?x76883 l_0_14_173)))
 (let ((?x80503 (- (* (* (- 1.0) l_0_14_101) l_0_14_88) (* (* 1.0 l_0_14_102) l_0_14_89))))
 (let ((?x80507 (- (- ?x80503 (* (* 1.0 l_0_14_103) l_0_14_90)) (* (* 1.0 l_0_14_104) l_0_14_91))))
 (let ((?x80512 (- (- ?x80507 (* (* 1.0 l_0_14_105) l_0_14_92)) (* (* 1.0 l_0_14_106) l_0_14_93))))
 (let ((?x80516 (+ (+ ?x80512 (* (* 1.0 l_0_14_124) l_0_14_137)) (* (* 1.0 l_0_14_125) l_0_14_138))))
 (let ((?x80520 (+ (+ ?x80516 (* (* 1.0 l_0_14_126) l_0_14_139)) (* (* 1.0 l_0_14_127) l_0_14_140))))
 (let ((?x80524 (+ (+ ?x80520 (* (* 1.0 l_0_14_128) l_0_14_141)) (* (* 1.0 l_0_14_129) l_0_14_142))))
 (= (- (- (- (- (- (- ?x80524 ?x77052) ?x77054) ?x77056) ?x77058) ?x77060) ?x77062) 0.0))))))))))))))))))))
(assert
 (let ((?x77147 (* l_0_14_172 l_0_14_172)))
 (let ((?x77145 (* l_0_14_171 l_0_14_171)))
 (let ((?x77143 (* l_0_14_170 l_0_14_170)))
 (let ((?x77141 (* l_0_14_169 l_0_14_169)))
 (let ((?x77139 (* l_0_14_168 l_0_14_168)))
 (let ((?x77137 (* l_0_14_167 l_0_14_167)))
 (let ((?x77135 (* l_0_14_166 l_0_14_166)))
 (let ((?x80555 (+ (* (* (- (/ 1.0 2.0)) l_0_14_100) l_0_14_100) (* (/ 1.0 2.0) (* l_0_14_130 l_0_14_130)))))
 (let ((?x80561 (+ (+ ?x80555 (* (/ 1.0 2.0) (* l_0_14_131 l_0_14_131))) (* (/ 1.0 2.0) (* l_0_14_132 l_0_14_132)))))
 (let ((?x80567 (+ (+ ?x80561 (* (/ 1.0 2.0) (* l_0_14_133 l_0_14_133))) (* (/ 1.0 2.0) (* l_0_14_134 l_0_14_134)))))
 (let ((?x80573 (+ (+ ?x80567 (* (/ 1.0 2.0) (* l_0_14_135 l_0_14_135))) (* (/ 1.0 2.0) (* l_0_14_136 l_0_14_136)))))
 (let ((?x80580 (- (- (- (- (- (- (- ?x80573 ?x77135) ?x77137) ?x77139) ?x77141) ?x77143) ?x77145) ?x77147)))
 (let ((?x80586 (- (- ?x80580 (* (* (/ 1.0 2.0) l_0_14_94) l_0_14_94)) (* (* (/ 1.0 2.0) l_0_14_95) l_0_14_95))))
 (let ((?x80592 (- (- ?x80586 (* (* (/ 1.0 2.0) l_0_14_96) l_0_14_96)) (* (* (/ 1.0 2.0) l_0_14_97) l_0_14_97))))
 (let ((?x80598 (- (- ?x80592 (* (* (/ 1.0 2.0) l_0_14_98) l_0_14_98)) (* (* (/ 1.0 2.0) l_0_14_99) l_0_14_99))))
 (= ?x80598 0.0)))))))))))))))))
(assert
 (let ((?x77284 (* (* 2.0 l_0_14_172) l_0_14_179)))
 (let ((?x77281 (* (* 2.0 l_0_14_171) l_0_14_178)))
 (let ((?x77278 (* (* 2.0 l_0_14_170) l_0_14_177)))
 (let ((?x77275 (* (* 2.0 l_0_14_169) l_0_14_176)))
 (let ((?x77272 (* (* 2.0 l_0_14_168) l_0_14_175)))
 (let ((?x77269 (* (* 2.0 l_0_14_167) l_0_14_174)))
 (let ((?x77266 (* (* 2.0 l_0_14_166) l_0_14_173)))
 (let ((?x80627 (- (* (* (- 1.0) l_0_14_100) l_0_14_107) (* (* 1.0 l_0_14_101) l_0_14_94))))
 (let ((?x80631 (- (- ?x80627 (* (* 1.0 l_0_14_102) l_0_14_95)) (* (* 1.0 l_0_14_103) l_0_14_96))))
 (let ((?x80635 (- (- ?x80631 (* (* 1.0 l_0_14_104) l_0_14_97)) (* (* 1.0 l_0_14_105) l_0_14_98))))
 (let ((?x80640 (+ (- ?x80635 (* (* 1.0 l_0_14_106) l_0_14_99)) (* (* 1.0 l_0_14_130) l_0_14_137))))
 (let ((?x80646 (+ (+ ?x80640 (* (* 1.0 l_0_14_131) l_0_14_138)) (* (* 1.0 l_0_14_132) l_0_14_139))))
 (let ((?x80652 (+ (+ ?x80646 (* (* 1.0 l_0_14_133) l_0_14_140)) (* (* 1.0 l_0_14_134) l_0_14_141))))
 (let ((?x80658 (+ (+ ?x80652 (* (* 1.0 l_0_14_135) l_0_14_142)) (* (* 1.0 l_0_14_136) l_0_14_143))))
 (let ((?x80665 (- (- (- (- (- (- (- ?x80658 ?x77266) ?x77269) ?x77272) ?x77275) ?x77278) ?x77281) ?x77284)))
 (= ?x80665 0.0)))))))))))))))))
(assert
 (let ((?x77435 (* l_0_14_180 l_0_14_180)))
 (let ((?x77433 (* l_0_14_179 l_0_14_179)))
 (let ((?x77431 (* l_0_14_178 l_0_14_178)))
 (let ((?x77429 (* l_0_14_177 l_0_14_177)))
 (let ((?x77408 (* l_0_14_176 l_0_14_176)))
 (let ((?x77404 (* l_0_14_175 l_0_14_175)))
 (let ((?x77400 (* l_0_14_174 l_0_14_174)))
 (let ((?x77487 (* l_0_14_173 l_0_14_173)))
 (let ((?x80688 (- (* (* (- (/ 1.0 2.0)) l_0_14_101) l_0_14_101) (* (* (/ 1.0 2.0) l_0_14_102) l_0_14_102))))
 (let ((?x80694 (- (- ?x80688 (* (* (/ 1.0 2.0) l_0_14_103) l_0_14_103)) (* (* (/ 1.0 2.0) l_0_14_104) l_0_14_104))))
 (let ((?x80700 (- (- ?x80694 (* (* (/ 1.0 2.0) l_0_14_105) l_0_14_105)) (* (* (/ 1.0 2.0) l_0_14_106) l_0_14_106))))
 (let ((?x80706 (- (- ?x80700 (* (* (/ 1.0 2.0) l_0_14_107) l_0_14_107)) (* (* (/ 1.0 2.0) l_0_14_108) l_0_14_108))))
 (let ((?x80712 (+ (+ ?x80706 (* (/ 1.0 2.0) (* l_0_14_137 l_0_14_137))) (* (/ 1.0 2.0) (* l_0_14_138 l_0_14_138)))))
 (let ((?x80718 (+ (+ ?x80712 (* (/ 1.0 2.0) (* l_0_14_139 l_0_14_139))) (* (/ 1.0 2.0) (* l_0_14_140 l_0_14_140)))))
 (let ((?x80724 (+ (+ ?x80718 (* (/ 1.0 2.0) (* l_0_14_141 l_0_14_141))) (* (/ 1.0 2.0) (* l_0_14_142 l_0_14_142)))))
 (let ((?x80730 (+ (+ ?x80724 (* (/ 1.0 2.0) (* l_0_14_143 l_0_14_143))) (* (/ 1.0 2.0) (* l_0_14_144 l_0_14_144)))))
 (let ((?x80737 (- (- (- (- (- (- (- ?x80730 ?x77487) ?x77400) ?x77404) ?x77408) ?x77429) ?x77431) ?x77433)))
 (= (- ?x80737 ?x77435) 0.0)))))))))))))))))))
(assert
 (let ((?x58213 (* l_0_14_73 l_0_14_73)))
 (let ((?x60559 (+ (- (* (- l_0_14_109) l_0_14_109) (* l_0_14_289 l_0_14_289)) ?x58213)))
 (= ?x60559 0.0))))
(assert
 (let ((?x80783 (* l_0_14_505 l_0_14_505)))
 (let ((?x80781 (* l_0_14_469 l_0_14_469)))
 (let ((?x80779 (* l_0_14_433 l_0_14_433)))
 (let ((?x80777 (* l_0_14_397 l_0_14_397)))
 (let ((?x80775 (* l_0_14_361 l_0_14_361)))
 (let ((?x80773 (* l_0_14_325 l_0_14_325)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x26227 (* ?x77537 l_0_14_290)))
 (let ((?x80778 (- (- (- (- (* (* (- 2.0) l_0_14_109) l_0_14_110) ?x26227) ?x80773) ?x80775) ?x80777)))
 (let ((?x80786 (+ (- (- (- ?x80778 ?x80779) ?x80781) ?x80783) (* (* 2.0 l_0_14_73) l_0_14_74))))
 (= ?x80786 0.0))))))))))))
(assert
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77620 (* ?x77537 l_0_14_292)))
 (let ((?x80806 (+ (- (* (* (- 2.0) l_0_14_109) l_0_14_112) ?x77620) (* (* 2.0 l_0_14_73) l_0_14_76))))
 (= ?x80806 0.0)))))
(assert
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77717 (* ?x77537 l_0_14_299)))
 (let ((?x80812 (* l_0_14_253 l_0_14_253)))
 (let ((?x80820 (+ (- (+ (* (* (- 2.0) l_0_14_109) l_0_14_119) ?x80812) ?x77717) (* (* 2.0 l_0_14_73) l_0_14_83))))
 (= ?x80820 0.0))))))
(assert
 (let ((?x77540 (* l_0_14_289 l_0_14_289)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77779 (* ?x77537 l_0_14_304)))
 (let ((?x75162 (* l_0_14_181 l_0_14_181)))
 (let ((?x75160 (* l_0_14_145 l_0_14_145)))
 (let ((?x80835 (+ (- (- (+ (* (* (- 2.0) l_0_14_109) l_0_14_124) ?x75160) ?x75162) ?x77779) ?x77540)))
 (= (+ ?x80835 (* (* 2.0 l_0_14_73) l_0_14_88)) 0.0))))))))
(assert
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77848 (* ?x77537 l_0_14_310)))
 (let ((?x80812 (* l_0_14_253 l_0_14_253)))
 (let ((?x80846 (+ (- (- (* (* (- 2.0) l_0_14_109) l_0_14_130) ?x80812) ?x77848) (* (* 2.0 l_0_14_73) l_0_14_94))))
 (= ?x80846 0.0))))))
(assert
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77933 (* ?x77537 l_0_14_317)))
 (let ((?x80859 (* l_0_14_217 l_0_14_217)))
 (let ((?x80858 (- (* (* 2.0 l_0_14_101) l_0_14_73) (* (* 2.0 l_0_14_109) l_0_14_137))))
 (= (- (- ?x80858 ?x80859) ?x77933) 0.0))))))
(assert
 (let ((?x32555 (* l_0_14_75 l_0_14_75)))
 (let ((?x58988 (* l_0_14_74 l_0_14_74)))
 (let ((?x74985 (* l_0_14_291 l_0_14_291)))
 (let ((?x74983 (* l_0_14_290 l_0_14_290)))
 (let ((?x33889 (- (- (* (- l_0_14_110) l_0_14_110) (* l_0_14_111 l_0_14_111)) ?x74983)))
 (let ((?x60623 (- (- (- ?x33889 ?x74985) (* (* 2.0 l_0_14_325) l_0_14_326)) (* (* 2.0 l_0_14_361) l_0_14_362))))
 (let ((?x60605 (- (- ?x60623 (* (* 2.0 l_0_14_397) l_0_14_398)) (* (* 2.0 l_0_14_433) l_0_14_434))))
 (let ((?x34004 (- (- ?x60605 (* (* 2.0 l_0_14_469) l_0_14_470)) (* (* 2.0 l_0_14_505) l_0_14_506))))
 (= (+ (+ ?x34004 ?x58988) ?x32555) 0.0))))))))))
(assert
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x26869 (* ?x77554 l_0_14_293)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x26867 (* ?x26228 l_0_14_292)))
 (let ((?x80894 (- (* (* (- 2.0) l_0_14_110) l_0_14_112) (* (* 2.0 l_0_14_111) l_0_14_113))))
 (let ((?x80900 (- (- (- (- ?x80894 ?x26867) ?x26869) (* (* 2.0 l_0_14_325) l_0_14_328)) (* (* 2.0 l_0_14_361) l_0_14_364))))
 (let ((?x80904 (- (- ?x80900 (* (* 2.0 l_0_14_397) l_0_14_400)) (* (* 2.0 l_0_14_433) l_0_14_436))))
 (let ((?x80908 (- (- ?x80904 (* (* 2.0 l_0_14_469) l_0_14_472)) (* (* 2.0 l_0_14_505) l_0_14_508))))
 (let ((?x80912 (+ (+ ?x80908 (* (* 2.0 l_0_14_74) l_0_14_76)) (* (* 2.0 l_0_14_75) l_0_14_77))))
 (= ?x80912 0.0)))))))))))
(assert
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78148 (* ?x77554 l_0_14_300)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78146 (* ?x26228 l_0_14_299)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x80940 (* ?x77714 l_0_14_254)))
 (let ((?x80939 (- (* (* (- 2.0) l_0_14_110) l_0_14_119) (* (* 2.0 l_0_14_111) l_0_14_120))))
 (let ((?x80945 (- (- (- (+ ?x80939 ?x80940) ?x78146) ?x78148) (* (* 2.0 l_0_14_325) l_0_14_335))))
 (let ((?x80949 (- (- ?x80945 (* (* 2.0 l_0_14_361) l_0_14_371)) (* (* 2.0 l_0_14_397) l_0_14_407))))
 (let ((?x80953 (- (- ?x80949 (* (* 2.0 l_0_14_433) l_0_14_443)) (* (* 2.0 l_0_14_469) l_0_14_479))))
 (let ((?x80957 (+ (- ?x80953 (* (* 2.0 l_0_14_505) l_0_14_515)) (* (* 2.0 l_0_14_74) l_0_14_83))))
 (= (+ ?x80957 (* (* 2.0 l_0_14_75) l_0_14_84)) 0.0)))))))))))))
(assert
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78317 (* ?x77554 l_0_14_305)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78314 (* ?x26228 l_0_14_304)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x26227 (* ?x77537 l_0_14_290)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75198 (* ?x75197 l_0_14_182)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75195 (* ?x75194 l_0_14_146)))
 (let ((?x80991 (- (* (* (- 2.0) l_0_14_110) l_0_14_124) (* (* 2.0 l_0_14_111) l_0_14_125))))
 (let ((?x81004 (- (- (- (+ (- (+ ?x80991 ?x75195) ?x75198) ?x26227) ?x78314) ?x78317) (* (* 2.0 l_0_14_325) l_0_14_340))))
 (let ((?x81008 (- (- ?x81004 (* (* 2.0 l_0_14_361) l_0_14_376)) (* (* 2.0 l_0_14_397) l_0_14_412))))
 (let ((?x81012 (- (- ?x81008 (* (* 2.0 l_0_14_433) l_0_14_448)) (* (* 2.0 l_0_14_469) l_0_14_484))))
 (let ((?x81016 (+ (- ?x81012 (* (* 2.0 l_0_14_505) l_0_14_520)) (* (* 2.0 l_0_14_74) l_0_14_88))))
 (= (+ ?x81016 (* (* 2.0 l_0_14_75) l_0_14_89)) 0.0)))))))))))))))))
(assert
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78441 (* ?x77554 l_0_14_311)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78439 (* ?x26228 l_0_14_310)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x80940 (* ?x77714 l_0_14_254)))
 (let ((?x81053 (- (* (* (- 2.0) l_0_14_110) l_0_14_130) (* (* 2.0 l_0_14_111) l_0_14_131))))
 (let ((?x81058 (- (- (- (- ?x81053 ?x80940) ?x78439) ?x78441) (* (* 2.0 l_0_14_325) l_0_14_346))))
 (let ((?x81062 (- (- ?x81058 (* (* 2.0 l_0_14_361) l_0_14_382)) (* (* 2.0 l_0_14_397) l_0_14_418))))
 (let ((?x81066 (- (- ?x81062 (* (* 2.0 l_0_14_433) l_0_14_454)) (* (* 2.0 l_0_14_469) l_0_14_490))))
 (let ((?x81070 (+ (- ?x81066 (* (* 2.0 l_0_14_505) l_0_14_526)) (* (* 2.0 l_0_14_74) l_0_14_94))))
 (= (+ ?x81070 (* (* 2.0 l_0_14_75) l_0_14_95)) 0.0)))))))))))))
(assert
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78597 (* ?x77554 l_0_14_318)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78595 (* ?x26228 l_0_14_317)))
 (let ((?x60804 (+ (* (* 2.0 l_0_14_101) l_0_14_74) (* (* 2.0 l_0_14_102) l_0_14_75))))
 (let ((?x81086 (- (- ?x60804 (* (* 2.0 l_0_14_110) l_0_14_137)) (* (* 2.0 l_0_14_111) l_0_14_138))))
 (let ((?x81092 (- (- (- (- ?x81086 (* (* 2.0 l_0_14_217) l_0_14_218)) ?x78595) ?x78597) (* (* 2.0 l_0_14_325) l_0_14_353))))
 (let ((?x81096 (- (- ?x81092 (* (* 2.0 l_0_14_361) l_0_14_389)) (* (* 2.0 l_0_14_397) l_0_14_425))))
 (let ((?x81100 (- (- ?x81096 (* (* 2.0 l_0_14_433) l_0_14_461)) (* (* 2.0 l_0_14_469) l_0_14_497))))
 (= (- ?x81100 (* (* 2.0 l_0_14_505) l_0_14_533)) 0.0)))))))))))
(assert
 (let ((?x24470 (* l_0_14_78 l_0_14_78)))
 (let ((?x24458 (* l_0_14_77 l_0_14_77)))
 (let ((?x76071 (* l_0_14_76 l_0_14_76)))
 (let ((?x78741 (* l_0_14_294 l_0_14_294)))
 (let ((?x78739 (* l_0_14_293 l_0_14_293)))
 (let ((?x78751 (* l_0_14_292 l_0_14_292)))
 (let ((?x76014 (* l_0_14_114 l_0_14_114)))
 (let ((?x81140 (- (- (* (- l_0_14_112) l_0_14_112) (* l_0_14_113 l_0_14_113)) ?x76014)))
 (= (+ (+ (+ (- (- (- ?x81140 ?x78751) ?x78739) ?x78741) ?x76071) ?x24458) ?x24470) 0.0))))))))))
(assert
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x78789 (* ?x75209 l_0_14_301)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x78787 (* ?x75206 l_0_14_300)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x78785 (* ?x75203 l_0_14_299)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x81157 (* ?x77714 l_0_14_256)))
 (let ((?x81154 (- (* (* (- 2.0) l_0_14_112) l_0_14_119) (* (* 2.0 l_0_14_113) l_0_14_120))))
 (let ((?x81160 (- (- (+ (- ?x81154 (* (* 2.0 l_0_14_114) l_0_14_121)) ?x81157) ?x78785) ?x78787)))
 (let ((?x81165 (+ (+ (- ?x81160 ?x78789) (* (* 2.0 l_0_14_76) l_0_14_83)) (* (* 2.0 l_0_14_77) l_0_14_84))))
 (= (+ ?x81165 (* (* 2.0 l_0_14_78) l_0_14_85)) 0.0)))))))))))))
(assert
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x78809 (* ?x75209 l_0_14_306)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x78806 (* ?x75206 l_0_14_305)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x56381 (* ?x75203 l_0_14_304)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77620 (* ?x77537 l_0_14_292)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75261 (* ?x75197 l_0_14_184)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x23617 (* ?x75194 l_0_14_148)))
 (let ((?x60870 (- (* (* (- 2.0) l_0_14_112) l_0_14_124) (* (* 2.0 l_0_14_113) l_0_14_125))))
 (let ((?x60894 (+ (- (+ (- ?x60870 (* (* 2.0 l_0_14_114) l_0_14_126)) ?x23617) ?x75261) ?x77620)))
 (let ((?x58026 (+ (- (- (- ?x60894 ?x56381) ?x78806) ?x78809) (* (* 2.0 l_0_14_76) l_0_14_88))))
 (let ((?x34372 (+ (+ ?x58026 (* (* 2.0 l_0_14_77) l_0_14_89)) (* (* 2.0 l_0_14_78) l_0_14_90))))
 (= ?x34372 0.0))))))))))))))))))
(assert
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x78829 (* ?x75209 l_0_14_312)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x78827 (* ?x75206 l_0_14_311)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x78825 (* ?x75203 l_0_14_310)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x81157 (* ?x77714 l_0_14_256)))
 (let ((?x81194 (- (* (* (- 2.0) l_0_14_112) l_0_14_130) (* (* 2.0 l_0_14_113) l_0_14_131))))
 (let ((?x81199 (- (- (- (- ?x81194 (* (* 2.0 l_0_14_114) l_0_14_132)) ?x81157) ?x78825) ?x78827)))
 (let ((?x81204 (+ (+ (- ?x81199 ?x78829) (* (* 2.0 l_0_14_76) l_0_14_94)) (* (* 2.0 l_0_14_77) l_0_14_95))))
 (= (+ ?x81204 (* (* 2.0 l_0_14_78) l_0_14_96)) 0.0)))))))))))))
(assert
 (let ((?x60097 (* l_0_14_87 l_0_14_87)))
 (let ((?x60091 (* l_0_14_86 l_0_14_86)))
 (let ((?x33339 (* l_0_14_85 l_0_14_85)))
 (let ((?x60086 (* l_0_14_84 l_0_14_84)))
 (let ((?x60045 (* l_0_14_83 l_0_14_83)))
 (let ((?x78900 (* l_0_14_303 l_0_14_303)))
 (let ((?x78898 (* l_0_14_302 l_0_14_302)))
 (let ((?x78896 (* l_0_14_301 l_0_14_301)))
 (let ((?x78894 (* l_0_14_300 l_0_14_300)))
 (let ((?x78892 (* l_0_14_299 l_0_14_299)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x81225 (* ?x77714 l_0_14_263)))
 (let ((?x80197 (* l_0_14_123 l_0_14_123)))
 (let ((?x80194 (* l_0_14_122 l_0_14_122)))
 (let ((?x80191 (* l_0_14_121 l_0_14_121)))
 (let ((?x60971 (- (- (* (- l_0_14_119) l_0_14_119) (* l_0_14_120 l_0_14_120)) ?x80191)))
 (let ((?x81230 (- (- (- (- (+ (- (- ?x60971 ?x80194) ?x80197) ?x81225) ?x78892) ?x78894) ?x78896) ?x78898)))
 (= (+ (+ (+ (+ (+ (- ?x81230 ?x78900) ?x60045) ?x60086) ?x33339) ?x60091) ?x60097) 0.0)))))))))))))))))))
(assert
 (let ((?x78931 (* 2.0 l_0_14_303)))
 (let ((?x78932 (* ?x78931 l_0_14_308)))
 (let ((?x78928 (* 2.0 l_0_14_302)))
 (let ((?x78929 (* ?x78928 l_0_14_307)))
 (let ((?x78925 (* 2.0 l_0_14_301)))
 (let ((?x78926 (* ?x78925 l_0_14_306)))
 (let ((?x78922 (* 2.0 l_0_14_300)))
 (let ((?x78923 (* ?x78922 l_0_14_305)))
 (let ((?x78919 (* 2.0 l_0_14_299)))
 (let ((?x78920 (* ?x78919 l_0_14_304)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77717 (* ?x77537 l_0_14_299)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x81254 (* ?x77714 l_0_14_268)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75300 (* ?x75197 l_0_14_191)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75293 (* ?x75194 l_0_14_155)))
 (let ((?x60986 (- (* (* (- 2.0) l_0_14_119) l_0_14_124) (* (* 2.0 l_0_14_120) l_0_14_125))))
 (let ((?x81248 (- (- ?x60986 (* (* 2.0 l_0_14_121) l_0_14_126)) (* (* 2.0 l_0_14_122) l_0_14_127))))
 (let ((?x81255 (+ (- (+ (- ?x81248 (* (* 2.0 l_0_14_123) l_0_14_128)) ?x75293) ?x75300) ?x81254)))
 (let ((?x81264 (+ (- (- (- (- (- (+ ?x81255 ?x77717) ?x78920) ?x78923) ?x78926) ?x78929) ?x78932) (* (* 2.0 l_0_14_83) l_0_14_88))))
 (let ((?x81270 (+ (+ ?x81264 (* (* 2.0 l_0_14_84) l_0_14_89)) (* (* 2.0 l_0_14_85) l_0_14_90))))
 (let ((?x81276 (+ (+ ?x81270 (* (* 2.0 l_0_14_86) l_0_14_91)) (* (* 2.0 l_0_14_87) l_0_14_92))))
 (= ?x81276 0.0))))))))))))))))))))))))))
(assert
 (let ((?x78931 (* 2.0 l_0_14_303)))
 (let ((?x78950 (* ?x78931 l_0_14_314)))
 (let ((?x78928 (* 2.0 l_0_14_302)))
 (let ((?x78948 (* ?x78928 l_0_14_313)))
 (let ((?x78925 (* 2.0 l_0_14_301)))
 (let ((?x78946 (* ?x78925 l_0_14_312)))
 (let ((?x78922 (* 2.0 l_0_14_300)))
 (let ((?x78944 (* ?x78922 l_0_14_311)))
 (let ((?x78919 (* 2.0 l_0_14_299)))
 (let ((?x78942 (* ?x78919 l_0_14_310)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x81313 (* ?x77714 l_0_14_274)))
 (let ((?x81225 (* ?x77714 l_0_14_263)))
 (let ((?x81305 (- (* (* (- 2.0) l_0_14_119) l_0_14_130) (* (* 2.0 l_0_14_120) l_0_14_131))))
 (let ((?x81309 (- (- ?x81305 (* (* 2.0 l_0_14_121) l_0_14_132)) (* (* 2.0 l_0_14_122) l_0_14_133))))
 (let ((?x81315 (- (+ (- (- ?x81309 (* (* 2.0 l_0_14_123) l_0_14_134)) ?x81225) ?x81313) ?x78942)))
 (let ((?x81321 (+ (- (- (- (- ?x81315 ?x78944) ?x78946) ?x78948) ?x78950) (* (* 2.0 l_0_14_83) l_0_14_94))))
 (let ((?x81325 (+ (+ ?x81321 (* (* 2.0 l_0_14_84) l_0_14_95)) (* (* 2.0 l_0_14_85) l_0_14_96))))
 (let ((?x81329 (+ (+ ?x81325 (* (* 2.0 l_0_14_86) l_0_14_97)) (* (* 2.0 l_0_14_87) l_0_14_98))))
 (= ?x81329 0.0)))))))))))))))))))))
(assert
 (let ((?x78931 (* 2.0 l_0_14_303)))
 (let ((?x79014 (* ?x78931 l_0_14_321)))
 (let ((?x78928 (* 2.0 l_0_14_302)))
 (let ((?x79012 (* ?x78928 l_0_14_320)))
 (let ((?x78925 (* 2.0 l_0_14_301)))
 (let ((?x79010 (* ?x78925 l_0_14_319)))
 (let ((?x78922 (* 2.0 l_0_14_300)))
 (let ((?x79008 (* ?x78922 l_0_14_318)))
 (let ((?x78919 (* 2.0 l_0_14_299)))
 (let ((?x79006 (* ?x78919 l_0_14_317)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x79328 (* ?x77714 l_0_14_281)))
 (let ((?x34606 (+ (* (* 2.0 l_0_14_101) l_0_14_83) (* (* 2.0 l_0_14_102) l_0_14_84))))
 (let ((?x81352 (+ (+ ?x34606 (* (* 2.0 l_0_14_103) l_0_14_85)) (* (* 2.0 l_0_14_104) l_0_14_86))))
 (let ((?x81357 (- (+ ?x81352 (* (* 2.0 l_0_14_105) l_0_14_87)) (* (* 2.0 l_0_14_119) l_0_14_137))))
 (let ((?x81361 (- (- ?x81357 (* (* 2.0 l_0_14_120) l_0_14_138)) (* (* 2.0 l_0_14_121) l_0_14_139))))
 (let ((?x81365 (- (- ?x81361 (* (* 2.0 l_0_14_122) l_0_14_140)) (* (* 2.0 l_0_14_123) l_0_14_141))))
 (let ((?x81370 (- (- (+ (- ?x81365 (* (* 2.0 l_0_14_217) l_0_14_227)) ?x79328) ?x79006) ?x79008)))
 (= (- (- (- ?x81370 ?x79010) ?x79012) ?x79014) 0.0))))))))))))))))))))
(assert
 (let ((?x33537 (* l_0_14_93 l_0_14_93)))
 (let ((?x60329 (* l_0_14_92 l_0_14_92)))
 (let ((?x33527 (* l_0_14_91 l_0_14_91)))
 (let ((?x33521 (* l_0_14_90 l_0_14_90)))
 (let ((?x33515 (* l_0_14_89 l_0_14_89)))
 (let ((?x33513 (* l_0_14_88 l_0_14_88)))
 (let ((?x79083 (* l_0_14_309 l_0_14_309)))
 (let ((?x79081 (* l_0_14_308 l_0_14_308)))
 (let ((?x79079 (* l_0_14_307 l_0_14_307)))
 (let ((?x79077 (* l_0_14_306 l_0_14_306)))
 (let ((?x79075 (* l_0_14_305 l_0_14_305)))
 (let ((?x79073 (* l_0_14_304 l_0_14_304)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77779 (* ?x77537 l_0_14_304)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75323 (* ?x75197 l_0_14_196)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75316 (* ?x75194 l_0_14_160)))
 (let ((?x80387 (* l_0_14_129 l_0_14_129)))
 (let ((?x80384 (* l_0_14_128 l_0_14_128)))
 (let ((?x80381 (* l_0_14_127 l_0_14_127)))
 (let ((?x80378 (* l_0_14_126 l_0_14_126)))
 (let ((?x61108 (- (- (* (- l_0_14_124) l_0_14_124) (* l_0_14_125 l_0_14_125)) ?x80378)))
 (let ((?x34636 (- (+ (- (+ (- (- (- ?x61108 ?x80381) ?x80384) ?x80387) ?x75316) ?x75323) ?x77779) ?x79073)))
 (let ((?x81401 (+ (+ (- (- (- (- (- ?x34636 ?x79075) ?x79077) ?x79079) ?x79081) ?x79083) ?x33513) ?x33515)))
 (= (+ (+ (+ (+ ?x81401 ?x33521) ?x33527) ?x60329) ?x33537) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x79104 (* 2.0 l_0_14_309)))
 (let ((?x79105 (* ?x79104 l_0_14_315)))
 (let ((?x79101 (* 2.0 l_0_14_308)))
 (let ((?x79102 (* ?x79101 l_0_14_314)))
 (let ((?x79098 (* 2.0 l_0_14_307)))
 (let ((?x79099 (* ?x79098 l_0_14_313)))
 (let ((?x79095 (* 2.0 l_0_14_306)))
 (let ((?x79096 (* ?x79095 l_0_14_312)))
 (let ((?x79092 (* 2.0 l_0_14_305)))
 (let ((?x79093 (* ?x79092 l_0_14_311)))
 (let ((?x57079 (* 2.0 l_0_14_304)))
 (let ((?x57072 (* ?x57079 l_0_14_310)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77848 (* ?x77537 l_0_14_310)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x81254 (* ?x77714 l_0_14_268)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75346 (* ?x75197 l_0_14_202)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x75344 (* ?x75194 l_0_14_166)))
 (let ((?x81421 (- (* (* (- 2.0) l_0_14_124) l_0_14_130) (* (* 2.0 l_0_14_125) l_0_14_131))))
 (let ((?x81427 (- (- ?x81421 (* (* 2.0 l_0_14_126) l_0_14_132)) (* (* 2.0 l_0_14_127) l_0_14_133))))
 (let ((?x81433 (- (- ?x81427 (* (* 2.0 l_0_14_128) l_0_14_134)) (* (* 2.0 l_0_14_129) l_0_14_135))))
 (let ((?x81440 (- (- (- (+ (- (- (+ ?x81433 ?x75344) ?x75346) ?x81254) ?x77848) ?x57072) ?x79093) ?x79096)))
 (let ((?x81446 (+ (- (- (- ?x81440 ?x79099) ?x79102) ?x79105) (* (* 2.0 l_0_14_88) l_0_14_94))))
 (let ((?x81452 (+ (+ ?x81446 (* (* 2.0 l_0_14_89) l_0_14_95)) (* (* 2.0 l_0_14_90) l_0_14_96))))
 (let ((?x81458 (+ (+ ?x81452 (* (* 2.0 l_0_14_91) l_0_14_97)) (* (* 2.0 l_0_14_92) l_0_14_98))))
 (= (+ ?x81458 (* (* 2.0 l_0_14_93) l_0_14_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x79104 (* 2.0 l_0_14_309)))
 (let ((?x79168 (* ?x79104 l_0_14_322)))
 (let ((?x79101 (* 2.0 l_0_14_308)))
 (let ((?x79166 (* ?x79101 l_0_14_321)))
 (let ((?x79098 (* 2.0 l_0_14_307)))
 (let ((?x79164 (* ?x79098 l_0_14_320)))
 (let ((?x79095 (* 2.0 l_0_14_306)))
 (let ((?x79162 (* ?x79095 l_0_14_319)))
 (let ((?x79092 (* 2.0 l_0_14_305)))
 (let ((?x79160 (* ?x79092 l_0_14_318)))
 (let ((?x57079 (* 2.0 l_0_14_304)))
 (let ((?x79158 (* ?x57079 l_0_14_317)))
 (let ((?x77537 (* 2.0 l_0_14_289)))
 (let ((?x77933 (* ?x77537 l_0_14_317)))
 (let ((?x75197 (* 2.0 l_0_14_181)))
 (let ((?x75373 (* ?x75197 l_0_14_209)))
 (let ((?x75194 (* 2.0 l_0_14_145)))
 (let ((?x23701 (* ?x75194 l_0_14_173)))
 (let ((?x81493 (+ (* (* 2.0 l_0_14_101) l_0_14_88) (* (* 2.0 l_0_14_102) l_0_14_89))))
 (let ((?x81499 (+ (+ ?x81493 (* (* 2.0 l_0_14_103) l_0_14_90)) (* (* 2.0 l_0_14_104) l_0_14_91))))
 (let ((?x81512 (+ (+ ?x81499 (* (* 2.0 l_0_14_105) l_0_14_92)) (* (* 2.0 l_0_14_106) l_0_14_93))))
 (let ((?x81517 (- (- ?x81512 (* (* 2.0 l_0_14_124) l_0_14_137)) (* (* 2.0 l_0_14_125) l_0_14_138))))
 (let ((?x81521 (- (- ?x81517 (* (* 2.0 l_0_14_126) l_0_14_139)) (* (* 2.0 l_0_14_127) l_0_14_140))))
 (let ((?x81525 (- (- ?x81521 (* (* 2.0 l_0_14_128) l_0_14_141)) (* (* 2.0 l_0_14_129) l_0_14_142))))
 (let ((?x81530 (+ (- (- (+ ?x81525 ?x23701) ?x75373) (* (* 2.0 l_0_14_217) l_0_14_232)) ?x77933)))
 (= (- (- (- (- (- (- ?x81530 ?x79158) ?x79160) ?x79162) ?x79164) ?x79166) ?x79168) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x60499 (* l_0_14_99 l_0_14_99)))
 (let ((?x60493 (* l_0_14_98 l_0_14_98)))
 (let ((?x60489 (* l_0_14_97 l_0_14_97)))
 (let ((?x60483 (* l_0_14_96 l_0_14_96)))
 (let ((?x60481 (* l_0_14_95 l_0_14_95)))
 (let ((?x60479 (* l_0_14_94 l_0_14_94)))
 (let ((?x57416 (* l_0_14_316 l_0_14_316)))
 (let ((?x29967 (* l_0_14_315 l_0_14_315)))
 (let ((?x57404 (* l_0_14_314 l_0_14_314)))
 (let ((?x57403 (* l_0_14_313 l_0_14_313)))
 (let ((?x57397 (* l_0_14_312 l_0_14_312)))
 (let ((?x57394 (* l_0_14_311 l_0_14_311)))
 (let ((?x29792 (* l_0_14_310 l_0_14_310)))
 (let ((?x77714 (* 2.0 l_0_14_253)))
 (let ((?x81313 (* ?x77714 l_0_14_274)))
 (let ((?x80571 (* l_0_14_136 l_0_14_136)))
 (let ((?x80568 (* l_0_14_135 l_0_14_135)))
 (let ((?x80565 (* l_0_14_134 l_0_14_134)))
 (let ((?x80562 (* l_0_14_133 l_0_14_133)))
 (let ((?x80559 (* l_0_14_132 l_0_14_132)))
 (let ((?x80556 (* l_0_14_131 l_0_14_131)))
 (let ((?x81562 (- (- (* l_0_14_100 l_0_14_100) (* l_0_14_130 l_0_14_130)) ?x80556)))
 (let ((?x81569 (- (- (- (- (- (- (- ?x81562 ?x80559) ?x80562) ?x80565) ?x80568) ?x80571) ?x81313) ?x29792)))
 (let ((?x81576 (+ (- (- (- (- (- (- ?x81569 ?x57394) ?x57397) ?x57403) ?x57404) ?x29967) ?x57416) ?x60479)))
 (= (+ (+ (+ (+ (+ ?x81576 ?x60481) ?x60483) ?x60489) ?x60493) ?x60499) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x79264 (* l_0_14_324 l_0_14_324)))
 (let ((?x79262 (* l_0_14_323 l_0_14_323)))
 (let ((?x79260 (* l_0_14_322 l_0_14_322)))
 (let ((?x79258 (* l_0_14_321 l_0_14_321)))
 (let ((?x79256 (* l_0_14_320 l_0_14_320)))
 (let ((?x79253 (* l_0_14_319 l_0_14_319)))
 (let ((?x79251 (* l_0_14_318 l_0_14_318)))
 (let ((?x79249 (* l_0_14_317 l_0_14_317)))
 (let ((?x80728 (* l_0_14_144 l_0_14_144)))
 (let ((?x80725 (* l_0_14_143 l_0_14_143)))
 (let ((?x80722 (* l_0_14_142 l_0_14_142)))
 (let ((?x80719 (* l_0_14_141 l_0_14_141)))
 (let ((?x80716 (* l_0_14_140 l_0_14_140)))
 (let ((?x80713 (* l_0_14_139 l_0_14_139)))
 (let ((?x80710 (* l_0_14_138 l_0_14_138)))
 (let ((?x80707 (* l_0_14_137 l_0_14_137)))
 (let ((?x33823 (* l_0_14_108 l_0_14_108)))
 (let ((?x33821 (* l_0_14_107 l_0_14_107)))
 (let ((?x33811 (* l_0_14_106 l_0_14_106)))
 (let ((?x33805 (* l_0_14_105 l_0_14_105)))
 (let ((?x33797 (* l_0_14_104 l_0_14_104)))
 (let ((?x33784 (* l_0_14_103 l_0_14_103)))
 (let ((?x34937 (+ (+ (* l_0_14_101 l_0_14_101) (* l_0_14_102 l_0_14_102)) ?x33784)))
 (let ((?x81599 (- (- (+ (+ (+ (+ (+ ?x34937 ?x33797) ?x33805) ?x33811) ?x33821) ?x33823) ?x80707) ?x80710)))
 (let ((?x81607 (- (- (- (- (- (- (- ?x81599 ?x80713) ?x80716) ?x80719) ?x80722) ?x80725) ?x80728) (* (* 2.0 l_0_14_217) l_0_14_245))))
 (let ((?x81614 (- (- (- (- (- (- (- ?x81607 ?x79249) ?x79251) ?x79253) ?x79256) ?x79258) ?x79260) ?x79262)))
 (= (- ?x81614 ?x79264) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x26869 (* ?x77554 l_0_14_293)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x26867 (* ?x26228 l_0_14_292)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75402 (* ?x75401 l_0_14_185)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75399 (* ?x75398 l_0_14_184)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75396 (* ?x75390 l_0_14_149)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x24026 (* ?x75539 l_0_14_148)))
 (let ((?x28991 (- (+ (+ (- (- (+ ?x24026 ?x75396) ?x75399) ?x75402) ?x26867) ?x26869) (* (* 2.0 l_0_14_328) l_0_14_340))))
 (let ((?x81638 (- (- ?x28991 (* (* 2.0 l_0_14_329) l_0_14_341)) (* (* 2.0 l_0_14_330) l_0_14_342))))
 (let ((?x81642 (- (- ?x81638 (* (* 2.0 l_0_14_364) l_0_14_376)) (* (* 2.0 l_0_14_365) l_0_14_377))))
 (let ((?x81646 (- (- ?x81642 (* (* 2.0 l_0_14_366) l_0_14_378)) (* (* 2.0 l_0_14_400) l_0_14_412))))
 (let ((?x81650 (- (- ?x81646 (* (* 2.0 l_0_14_401) l_0_14_413)) (* (* 2.0 l_0_14_402) l_0_14_414))))
 (let ((?x81654 (- (- ?x81650 (* (* 2.0 l_0_14_436) l_0_14_448)) (* (* 2.0 l_0_14_437) l_0_14_449))))
 (let ((?x81658 (- (- ?x81654 (* (* 2.0 l_0_14_438) l_0_14_450)) (* (* 2.0 l_0_14_472) l_0_14_484))))
 (let ((?x81662 (- (- ?x81658 (* (* 2.0 l_0_14_473) l_0_14_485)) (* (* 2.0 l_0_14_474) l_0_14_486))))
 (let ((?x81666 (- (- ?x81662 (* (* 2.0 l_0_14_508) l_0_14_520)) (* (* 2.0 l_0_14_509) l_0_14_521))))
 (= (- ?x81666 (* (* 2.0 l_0_14_510) l_0_14_522)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78148 (* ?x77554 l_0_14_300)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78146 (* ?x26228 l_0_14_299)))
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x81738 (* ?x78143 l_0_14_269)))
 (let ((?x78140 (* 2.0 l_0_14_254)))
 (let ((?x81736 (* ?x78140 l_0_14_268)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75546 (* ?x75401 l_0_14_192)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75544 (* ?x75398 l_0_14_191)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75542 (* ?x75390 l_0_14_156)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x75540 (* ?x75539 l_0_14_155)))
 (let ((?x81741 (+ (+ (+ (+ (- (- (+ ?x75540 ?x75542) ?x75544) ?x75546) ?x81736) ?x81738) ?x78146) ?x78148)))
 (let ((?x81747 (- (- ?x81741 (* (* 2.0 l_0_14_335) l_0_14_340)) (* (* 2.0 l_0_14_336) l_0_14_341))))
 (let ((?x81753 (- (- ?x81747 (* (* 2.0 l_0_14_337) l_0_14_342)) (* (* 2.0 l_0_14_338) l_0_14_343))))
 (let ((?x81759 (- (- ?x81753 (* (* 2.0 l_0_14_339) l_0_14_344)) (* (* 2.0 l_0_14_371) l_0_14_376))))
 (let ((?x81765 (- (- ?x81759 (* (* 2.0 l_0_14_372) l_0_14_377)) (* (* 2.0 l_0_14_373) l_0_14_378))))
 (let ((?x81771 (- (- ?x81765 (* (* 2.0 l_0_14_374) l_0_14_379)) (* (* 2.0 l_0_14_375) l_0_14_380))))
 (let ((?x81777 (- (- ?x81771 (* (* 2.0 l_0_14_407) l_0_14_412)) (* (* 2.0 l_0_14_408) l_0_14_413))))
 (let ((?x81783 (- (- ?x81777 (* (* 2.0 l_0_14_409) l_0_14_414)) (* (* 2.0 l_0_14_410) l_0_14_415))))
 (let ((?x81789 (- (- ?x81783 (* (* 2.0 l_0_14_411) l_0_14_416)) (* (* 2.0 l_0_14_443) l_0_14_448))))
 (let ((?x81795 (- (- ?x81789 (* (* 2.0 l_0_14_444) l_0_14_449)) (* (* 2.0 l_0_14_445) l_0_14_450))))
 (let ((?x81801 (- (- ?x81795 (* (* 2.0 l_0_14_446) l_0_14_451)) (* (* 2.0 l_0_14_447) l_0_14_452))))
 (let ((?x81807 (- (- ?x81801 (* (* 2.0 l_0_14_479) l_0_14_484)) (* (* 2.0 l_0_14_480) l_0_14_485))))
 (let ((?x81813 (- (- ?x81807 (* (* 2.0 l_0_14_481) l_0_14_486)) (* (* 2.0 l_0_14_482) l_0_14_487))))
 (let ((?x81819 (- (- ?x81813 (* (* 2.0 l_0_14_483) l_0_14_488)) (* (* 2.0 l_0_14_515) l_0_14_520))))
 (let ((?x81825 (- (- ?x81819 (* (* 2.0 l_0_14_516) l_0_14_521)) (* (* 2.0 l_0_14_517) l_0_14_522))))
 (let ((?x81831 (- (- ?x81825 (* (* 2.0 l_0_14_518) l_0_14_523)) (* (* 2.0 l_0_14_519) l_0_14_524))))
 (= ?x81831 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x82009 (* l_0_14_525 l_0_14_525)))
 (let ((?x82007 (* l_0_14_524 l_0_14_524)))
 (let ((?x82005 (* l_0_14_523 l_0_14_523)))
 (let ((?x82003 (* l_0_14_522 l_0_14_522)))
 (let ((?x82001 (* l_0_14_521 l_0_14_521)))
 (let ((?x81999 (* l_0_14_520 l_0_14_520)))
 (let ((?x81997 (* l_0_14_489 l_0_14_489)))
 (let ((?x81995 (* l_0_14_488 l_0_14_488)))
 (let ((?x81993 (* l_0_14_487 l_0_14_487)))
 (let ((?x81991 (* l_0_14_486 l_0_14_486)))
 (let ((?x81989 (* l_0_14_485 l_0_14_485)))
 (let ((?x81987 (* l_0_14_484 l_0_14_484)))
 (let ((?x81985 (* l_0_14_453 l_0_14_453)))
 (let ((?x81983 (* l_0_14_452 l_0_14_452)))
 (let ((?x81981 (* l_0_14_451 l_0_14_451)))
 (let ((?x81979 (* l_0_14_450 l_0_14_450)))
 (let ((?x81977 (* l_0_14_449 l_0_14_449)))
 (let ((?x81975 (* l_0_14_448 l_0_14_448)))
 (let ((?x81973 (* l_0_14_417 l_0_14_417)))
 (let ((?x81971 (* l_0_14_416 l_0_14_416)))
 (let ((?x81969 (* l_0_14_415 l_0_14_415)))
 (let ((?x81967 (* l_0_14_414 l_0_14_414)))
 (let ((?x81965 (* l_0_14_413 l_0_14_413)))
 (let ((?x81963 (* l_0_14_412 l_0_14_412)))
 (let ((?x81961 (* l_0_14_381 l_0_14_381)))
 (let ((?x81959 (* l_0_14_380 l_0_14_380)))
 (let ((?x81957 (* l_0_14_379 l_0_14_379)))
 (let ((?x81955 (* l_0_14_378 l_0_14_378)))
 (let ((?x81953 (* l_0_14_377 l_0_14_377)))
 (let ((?x81951 (* l_0_14_376 l_0_14_376)))
 (let ((?x81949 (* l_0_14_345 l_0_14_345)))
 (let ((?x81947 (* l_0_14_344 l_0_14_344)))
 (let ((?x81945 (* l_0_14_343 l_0_14_343)))
 (let ((?x81943 (* l_0_14_342 l_0_14_342)))
 (let ((?x81941 (* l_0_14_341 l_0_14_341)))
 (let ((?x81939 (* l_0_14_340 l_0_14_340)))
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78317 (* ?x77554 l_0_14_305)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78314 (* ?x26228 l_0_14_304)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75628 (* ?x75401 l_0_14_197)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75626 (* ?x75398 l_0_14_196)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75596 (* ?x75390 l_0_14_161)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x79815 (* ?x75539 l_0_14_160)))
 (let ((?x81942 (- (- (+ (+ (- (- (+ ?x79815 ?x75596) ?x75626) ?x75628) ?x78314) ?x78317) ?x81939) ?x81941)))
 (let ((?x81956 (- (- (- (- (- (- (- ?x81942 ?x81943) ?x81945) ?x81947) ?x81949) ?x81951) ?x81953) ?x81955)))
 (let ((?x81970 (- (- (- (- (- (- (- ?x81956 ?x81957) ?x81959) ?x81961) ?x81963) ?x81965) ?x81967) ?x81969)))
 (let ((?x81984 (- (- (- (- (- (- (- ?x81970 ?x81971) ?x81973) ?x81975) ?x81977) ?x81979) ?x81981) ?x81983)))
 (let ((?x81998 (- (- (- (- (- (- (- ?x81984 ?x81985) ?x81987) ?x81989) ?x81991) ?x81993) ?x81995) ?x81997)))
 (= (- (- (- (- (- (- ?x81998 ?x81999) ?x82001) ?x82003) ?x82005) ?x82007) ?x82009) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78441 (* ?x77554 l_0_14_311)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78439 (* ?x26228 l_0_14_310)))
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x81738 (* ?x78143 l_0_14_269)))
 (let ((?x78140 (* 2.0 l_0_14_254)))
 (let ((?x81736 (* ?x78140 l_0_14_268)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75705 (* ?x75401 l_0_14_203)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75703 (* ?x75398 l_0_14_202)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75701 (* ?x75390 l_0_14_167)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x75698 (* ?x75539 l_0_14_166)))
 (let ((?x82083 (+ (+ (- (- (- (- (+ ?x75698 ?x75701) ?x75703) ?x75705) ?x81736) ?x81738) ?x78439) ?x78441)))
 (let ((?x82089 (- (- ?x82083 (* (* 2.0 l_0_14_340) l_0_14_346)) (* (* 2.0 l_0_14_341) l_0_14_347))))
 (let ((?x82095 (- (- ?x82089 (* (* 2.0 l_0_14_342) l_0_14_348)) (* (* 2.0 l_0_14_343) l_0_14_349))))
 (let ((?x82101 (- (- ?x82095 (* (* 2.0 l_0_14_344) l_0_14_350)) (* (* 2.0 l_0_14_345) l_0_14_351))))
 (let ((?x82107 (- (- ?x82101 (* (* 2.0 l_0_14_376) l_0_14_382)) (* (* 2.0 l_0_14_377) l_0_14_383))))
 (let ((?x82113 (- (- ?x82107 (* (* 2.0 l_0_14_378) l_0_14_384)) (* (* 2.0 l_0_14_379) l_0_14_385))))
 (let ((?x82119 (- (- ?x82113 (* (* 2.0 l_0_14_380) l_0_14_386)) (* (* 2.0 l_0_14_381) l_0_14_387))))
 (let ((?x82125 (- (- ?x82119 (* (* 2.0 l_0_14_412) l_0_14_418)) (* (* 2.0 l_0_14_413) l_0_14_419))))
 (let ((?x82131 (- (- ?x82125 (* (* 2.0 l_0_14_414) l_0_14_420)) (* (* 2.0 l_0_14_415) l_0_14_421))))
 (let ((?x82137 (- (- ?x82131 (* (* 2.0 l_0_14_416) l_0_14_422)) (* (* 2.0 l_0_14_417) l_0_14_423))))
 (let ((?x82143 (- (- ?x82137 (* (* 2.0 l_0_14_448) l_0_14_454)) (* (* 2.0 l_0_14_449) l_0_14_455))))
 (let ((?x82149 (- (- ?x82143 (* (* 2.0 l_0_14_450) l_0_14_456)) (* (* 2.0 l_0_14_451) l_0_14_457))))
 (let ((?x82155 (- (- ?x82149 (* (* 2.0 l_0_14_452) l_0_14_458)) (* (* 2.0 l_0_14_453) l_0_14_459))))
 (let ((?x82161 (- (- ?x82155 (* (* 2.0 l_0_14_484) l_0_14_490)) (* (* 2.0 l_0_14_485) l_0_14_491))))
 (let ((?x82167 (- (- ?x82161 (* (* 2.0 l_0_14_486) l_0_14_492)) (* (* 2.0 l_0_14_487) l_0_14_493))))
 (let ((?x82173 (- (- ?x82167 (* (* 2.0 l_0_14_488) l_0_14_494)) (* (* 2.0 l_0_14_489) l_0_14_495))))
 (let ((?x82179 (- (- ?x82173 (* (* 2.0 l_0_14_520) l_0_14_526)) (* (* 2.0 l_0_14_521) l_0_14_527))))
 (let ((?x82185 (- (- ?x82179 (* (* 2.0 l_0_14_522) l_0_14_528)) (* (* 2.0 l_0_14_523) l_0_14_529))))
 (let ((?x82191 (- (- ?x82185 (* (* 2.0 l_0_14_524) l_0_14_530)) (* (* 2.0 l_0_14_525) l_0_14_531))))
 (= ?x82191 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x77554 (* 2.0 l_0_14_291)))
 (let ((?x78597 (* ?x77554 l_0_14_318)))
 (let ((?x26228 (* 2.0 l_0_14_290)))
 (let ((?x78595 (* ?x26228 l_0_14_317)))
 (let ((?x75401 (* 2.0 l_0_14_183)))
 (let ((?x75779 (* ?x75401 l_0_14_210)))
 (let ((?x75398 (* 2.0 l_0_14_182)))
 (let ((?x75777 (* ?x75398 l_0_14_209)))
 (let ((?x75390 (* 2.0 l_0_14_147)))
 (let ((?x75775 (* ?x75390 l_0_14_174)))
 (let ((?x75539 (* 2.0 l_0_14_146)))
 (let ((?x59484 (* ?x75539 l_0_14_173)))
 (let ((?x82307 (- (- (- (+ ?x59484 ?x75775) ?x75777) ?x75779) (* (* 2.0 l_0_14_218) l_0_14_232))))
 (let ((?x82313 (- (+ (+ (- ?x82307 (* (* 2.0 l_0_14_219) l_0_14_233)) ?x78595) ?x78597) (* (* 2.0 l_0_14_340) l_0_14_353))))
 (let ((?x82317 (- (- ?x82313 (* (* 2.0 l_0_14_341) l_0_14_354)) (* (* 2.0 l_0_14_342) l_0_14_355))))
 (let ((?x82321 (- (- ?x82317 (* (* 2.0 l_0_14_343) l_0_14_356)) (* (* 2.0 l_0_14_344) l_0_14_357))))
 (let ((?x82325 (- (- ?x82321 (* (* 2.0 l_0_14_345) l_0_14_358)) (* (* 2.0 l_0_14_376) l_0_14_389))))
 (let ((?x82329 (- (- ?x82325 (* (* 2.0 l_0_14_377) l_0_14_390)) (* (* 2.0 l_0_14_378) l_0_14_391))))
 (let ((?x82333 (- (- ?x82329 (* (* 2.0 l_0_14_379) l_0_14_392)) (* (* 2.0 l_0_14_380) l_0_14_393))))
 (let ((?x82337 (- (- ?x82333 (* (* 2.0 l_0_14_381) l_0_14_394)) (* (* 2.0 l_0_14_412) l_0_14_425))))
 (let ((?x82341 (- (- ?x82337 (* (* 2.0 l_0_14_413) l_0_14_426)) (* (* 2.0 l_0_14_414) l_0_14_427))))
 (let ((?x82345 (- (- ?x82341 (* (* 2.0 l_0_14_415) l_0_14_428)) (* (* 2.0 l_0_14_416) l_0_14_429))))
 (let ((?x82349 (- (- ?x82345 (* (* 2.0 l_0_14_417) l_0_14_430)) (* (* 2.0 l_0_14_448) l_0_14_461))))
 (let ((?x82353 (- (- ?x82349 (* (* 2.0 l_0_14_449) l_0_14_462)) (* (* 2.0 l_0_14_450) l_0_14_463))))
 (let ((?x82357 (- (- ?x82353 (* (* 2.0 l_0_14_451) l_0_14_464)) (* (* 2.0 l_0_14_452) l_0_14_465))))
 (let ((?x82361 (- (- ?x82357 (* (* 2.0 l_0_14_453) l_0_14_466)) (* (* 2.0 l_0_14_484) l_0_14_497))))
 (let ((?x82365 (- (- ?x82361 (* (* 2.0 l_0_14_485) l_0_14_498)) (* (* 2.0 l_0_14_486) l_0_14_499))))
 (let ((?x82369 (- (- ?x82365 (* (* 2.0 l_0_14_487) l_0_14_500)) (* (* 2.0 l_0_14_488) l_0_14_501))))
 (let ((?x82373 (- (- ?x82369 (* (* 2.0 l_0_14_489) l_0_14_502)) (* (* 2.0 l_0_14_520) l_0_14_533))))
 (let ((?x82377 (- (- ?x82373 (* (* 2.0 l_0_14_521) l_0_14_534)) (* (* 2.0 l_0_14_522) l_0_14_535))))
 (let ((?x82381 (- (- ?x82377 (* (* 2.0 l_0_14_523) l_0_14_536)) (* (* 2.0 l_0_14_524) l_0_14_537))))
 (= (- ?x82381 (* (* 2.0 l_0_14_525) l_0_14_538)) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x78741 (* l_0_14_294 l_0_14_294)))
 (let ((?x78739 (* l_0_14_293 l_0_14_293)))
 (let ((?x78751 (* l_0_14_292 l_0_14_292)))
 (let ((?x75826 (* l_0_14_186 l_0_14_186)))
 (let ((?x75824 (* l_0_14_185 l_0_14_185)))
 (let ((?x75822 (* l_0_14_184 l_0_14_184)))
 (let ((?x75820 (* l_0_14_150 l_0_14_150)))
 (let ((?x82482 (+ (+ (* l_0_14_148 l_0_14_148) (* l_0_14_149 l_0_14_149)) ?x75820)))
 (= (+ (+ (+ (- (- (- ?x82482 ?x75822) ?x75824) ?x75826) ?x78751) ?x78739) ?x78741) 0.0))))))))))
(assert
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x78789 (* ?x75209 l_0_14_301)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x78787 (* ?x75206 l_0_14_300)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x78785 (* ?x75203 l_0_14_299)))
 (let ((?x75560 (* 2.0 l_0_14_258)))
 (let ((?x82504 (* ?x75560 l_0_14_270)))
 (let ((?x75557 (* 2.0 l_0_14_257)))
 (let ((?x82502 (* ?x75557 l_0_14_269)))
 (let ((?x75554 (* 2.0 l_0_14_256)))
 (let ((?x82500 (* ?x75554 l_0_14_268)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x75924 (* ?x75636 l_0_14_193)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x75922 (* ?x75633 l_0_14_192)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x75920 (* ?x75630 l_0_14_191)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75918 (* ?x75617 l_0_14_157)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x75916 (* ?x75614 l_0_14_156)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x75914 (* ?x75600 l_0_14_155)))
 (let ((?x82503 (+ (+ (- (- (- (+ (+ ?x75914 ?x75916) ?x75918) ?x75920) ?x75922) ?x75924) ?x82500) ?x82502)))
 (= (+ (+ (+ (+ ?x82503 ?x82504) ?x78785) ?x78787) ?x78789) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x78809 (* ?x75209 l_0_14_306)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x78806 (* ?x75206 l_0_14_305)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x56381 (* ?x75203 l_0_14_304)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x75980 (* ?x75636 l_0_14_198)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x75978 (* ?x75633 l_0_14_197)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x75976 (* ?x75630 l_0_14_196)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x75956 (* ?x75617 l_0_14_162)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x19351 (* ?x75614 l_0_14_161)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x76877 (* ?x75600 l_0_14_160)))
 (let ((?x82531 (+ (+ (- (- (- (+ (+ ?x76877 ?x19351) ?x75956) ?x75976) ?x75978) ?x75980) ?x56381) ?x78806)))
 (= (+ ?x82531 ?x78809) 0.0)))))))))))))))))))))
(assert
 (let ((?x75209 (* 2.0 l_0_14_294)))
 (let ((?x78829 (* ?x75209 l_0_14_312)))
 (let ((?x75206 (* 2.0 l_0_14_293)))
 (let ((?x78827 (* ?x75206 l_0_14_311)))
 (let ((?x75203 (* 2.0 l_0_14_292)))
 (let ((?x78825 (* ?x75203 l_0_14_310)))
 (let ((?x75560 (* 2.0 l_0_14_258)))
 (let ((?x82504 (* ?x75560 l_0_14_270)))
 (let ((?x75557 (* 2.0 l_0_14_257)))
 (let ((?x82502 (* ?x75557 l_0_14_269)))
 (let ((?x75554 (* 2.0 l_0_14_256)))
 (let ((?x82500 (* ?x75554 l_0_14_268)))
 (let ((?x75636 (* 2.0 l_0_14_186)))
 (let ((?x76030 (* ?x75636 l_0_14_204)))
 (let ((?x75633 (* 2.0 l_0_14_185)))
 (let ((?x76028 (* ?x75633 l_0_14_203)))
 (let ((?x75630 (* 2.0 l_0_14_184)))
 (let ((?x76026 (* ?x75630 l_0_14_202)))
 (let ((?x75617 (* 2.0 l_0_14_150)))
 (let ((?x76023 (* ?x75617 l_0_14_168)))
 (let ((?x75614 (* 2.0 l_0_14_149)))
 (let ((?x76020 (* ?x75614 l_0_14_167)))
 (let ((?x75600 (* 2.0 l_0_14_148)))
 (let ((?x76017 (* ?x75600 l_0_14_166)))
 (let ((?x82548 (- (- (- (- (- (+ (+ ?x76017 ?x76020) ?x76023) ?x76026) ?x76028) ?x76030) ?x82500) ?x82502)))
 (= (+ (+ (+ (- ?x82548 ?x82504) ?x78825) ?x78827) ?x78829) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x78900 (* l_0_14_303 l_0_14_303)))
 (let ((?x78898 (* l_0_14_302 l_0_14_302)))
 (let ((?x78896 (* l_0_14_301 l_0_14_301)))
 (let ((?x78894 (* l_0_14_300 l_0_14_300)))
 (let ((?x78892 (* l_0_14_299 l_0_14_299)))
 (let ((?x79723 (* 2.0 l_0_14_267)))
 (let ((?x82578 (* ?x79723 l_0_14_272)))
 (let ((?x79720 (* 2.0 l_0_14_266)))
 (let ((?x82576 (* ?x79720 l_0_14_271)))
 (let ((?x79717 (* 2.0 l_0_14_265)))
 (let ((?x82574 (* ?x79717 l_0_14_270)))
 (let ((?x79714 (* 2.0 l_0_14_264)))
 (let ((?x82572 (* ?x79714 l_0_14_269)))
 (let ((?x79711 (* 2.0 l_0_14_263)))
 (let ((?x82570 (* ?x79711 l_0_14_268)))
 (let ((?x76482 (* l_0_14_195 l_0_14_195)))
 (let ((?x76480 (* l_0_14_194 l_0_14_194)))
 (let ((?x76478 (* l_0_14_193 l_0_14_193)))
 (let ((?x76476 (* l_0_14_192 l_0_14_192)))
 (let ((?x76474 (* l_0_14_191 l_0_14_191)))
 (let ((?x76472 (* l_0_14_159 l_0_14_159)))
 (let ((?x76470 (* l_0_14_158 l_0_14_158)))
 (let ((?x76468 (* l_0_14_157 l_0_14_157)))
 (let ((?x82562 (+ (+ (* l_0_14_155 l_0_14_155) (* l_0_14_156 l_0_14_156)) ?x76468)))
 (let ((?x82569 (- (- (- (- (- (+ (+ ?x82562 ?x76470) ?x76472) ?x76474) ?x76476) ?x76478) ?x76480) ?x76482)))
 (let ((?x82581 (+ (+ (+ (+ (+ (+ (+ ?x82569 ?x82570) ?x82572) ?x82574) ?x82576) ?x82578) ?x78892) ?x78894)))
 (= (+ (+ (+ ?x82581 ?x78896) ?x78898) ?x78900) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x78931 (* 2.0 l_0_14_303)))
 (let ((?x78932 (* ?x78931 l_0_14_308)))
 (let ((?x78928 (* 2.0 l_0_14_302)))
 (let ((?x78929 (* ?x78928 l_0_14_307)))
 (let ((?x78925 (* 2.0 l_0_14_301)))
 (let ((?x78926 (* ?x78925 l_0_14_306)))
 (let ((?x78922 (* 2.0 l_0_14_300)))
 (let ((?x78923 (* ?x78922 l_0_14_305)))
 (let ((?x78919 (* 2.0 l_0_14_299)))
 (let ((?x78920 (* ?x78919 l_0_14_304)))
 (let ((?x82617 (* l_0_14_273 l_0_14_273)))
 (let ((?x82615 (* l_0_14_272 l_0_14_272)))
 (let ((?x82613 (* l_0_14_271 l_0_14_271)))
 (let ((?x82611 (* l_0_14_270 l_0_14_270)))
 (let ((?x82609 (* l_0_14_269 l_0_14_269)))
 (let ((?x82607 (* l_0_14_268 l_0_14_268)))
 (let ((?x76551 (* 2.0 l_0_14_195)))
 (let ((?x76552 (* ?x76551 l_0_14_200)))
 (let ((?x76548 (* 2.0 l_0_14_194)))
 (let ((?x76549 (* ?x76548 l_0_14_199)))
 (let ((?x76545 (* 2.0 l_0_14_193)))
 (let ((?x76546 (* ?x76545 l_0_14_198)))
 (let ((?x76542 (* 2.0 l_0_14_192)))
 (let ((?x76543 (* ?x76542 l_0_14_197)))
 (let ((?x76539 (* 2.0 l_0_14_191)))
 (let ((?x76540 (* ?x76539 l_0_14_196)))
 (let ((?x76536 (* 2.0 l_0_14_159)))
 (let ((?x76537 (* ?x76536 l_0_14_164)))
 (let ((?x76533 (* 2.0 l_0_14_158)))
 (let ((?x76534 (* ?x76533 l_0_14_163)))
 (let ((?x76530 (* 2.0 l_0_14_157)))
 (let ((?x76531 (* ?x76530 l_0_14_162)))
 (let ((?x76527 (* 2.0 l_0_14_156)))
 (let ((?x76528 (* ?x76527 l_0_14_161)))
 (let ((?x76524 (* 2.0 l_0_14_155)))
 (let ((?x76525 (* ?x76524 l_0_14_160)))
 (let ((?x82604 (- (- (- (+ (+ (+ (+ ?x76525 ?x76528) ?x76531) ?x76534) ?x76537) ?x76540) ?x76543) ?x76546)))
 (let ((?x82616 (+ (+ (+ (+ (+ (- (- ?x82604 ?x76549) ?x76552) ?x82607) ?x82609) ?x82611) ?x82613) ?x82615)))
 (= (+ (+ (+ (+ (+ (+ ?x82616 ?x82617) ?x78920) ?x78923) ?x78926) ?x78929) ?x78932) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x78931 (* 2.0 l_0_14_303)))
 (let ((?x78950 (* ?x78931 l_0_14_314)))
 (let ((?x78928 (* 2.0 l_0_14_302)))
 (let ((?x78948 (* ?x78928 l_0_14_313)))
 (let ((?x78925 (* 2.0 l_0_14_301)))
 (let ((?x78946 (* ?x78925 l_0_14_312)))
 (let ((?x78922 (* 2.0 l_0_14_300)))
 (let ((?x78944 (* ?x78922 l_0_14_311)))
 (let ((?x78919 (* 2.0 l_0_14_299)))
 (let ((?x78942 (* ?x78919 l_0_14_310)))
 (let ((?x79865 (* 2.0 l_0_14_273)))
 (let ((?x82662 (* ?x79865 l_0_14_279)))
 (let ((?x79862 (* 2.0 l_0_14_272)))
 (let ((?x82660 (* ?x79862 l_0_14_278)))
 (let ((?x79859 (* 2.0 l_0_14_271)))
 (let ((?x82658 (* ?x79859 l_0_14_277)))
 (let ((?x79856 (* 2.0 l_0_14_270)))
 (let ((?x82656 (* ?x79856 l_0_14_276)))
 (let ((?x79853 (* 2.0 l_0_14_269)))
 (let ((?x82654 (* ?x79853 l_0_14_275)))
 (let ((?x79850 (* 2.0 l_0_14_268)))
 (let ((?x82652 (* ?x79850 l_0_14_274)))
 (let ((?x79723 (* 2.0 l_0_14_267)))
 (let ((?x82578 (* ?x79723 l_0_14_272)))
 (let ((?x79720 (* 2.0 l_0_14_266)))
 (let ((?x82576 (* ?x79720 l_0_14_271)))
 (let ((?x79717 (* 2.0 l_0_14_265)))
 (let ((?x82574 (* ?x79717 l_0_14_270)))
 (let ((?x79714 (* 2.0 l_0_14_264)))
 (let ((?x82572 (* ?x79714 l_0_14_269)))
 (let ((?x79711 (* 2.0 l_0_14_263)))
 (let ((?x82570 (* ?x79711 l_0_14_268)))
 (let ((?x76551 (* 2.0 l_0_14_195)))
 (let ((?x76654 (* ?x76551 l_0_14_206)))
 (let ((?x76548 (* 2.0 l_0_14_194)))
 (let ((?x76652 (* ?x76548 l_0_14_205)))
 (let ((?x76545 (* 2.0 l_0_14_193)))
 (let ((?x76650 (* ?x76545 l_0_14_204)))
 (let ((?x76542 (* 2.0 l_0_14_192)))
 (let ((?x76648 (* ?x76542 l_0_14_203)))
 (let ((?x76539 (* 2.0 l_0_14_191)))
 (let ((?x76646 (* ?x76539 l_0_14_202)))
 (let ((?x76536 (* 2.0 l_0_14_159)))
 (let ((?x76644 (* ?x76536 l_0_14_170)))
 (let ((?x76533 (* 2.0 l_0_14_158)))
 (let ((?x76642 (* ?x76533 l_0_14_169)))
 (let ((?x76530 (* 2.0 l_0_14_157)))
 (let ((?x76640 (* ?x76530 l_0_14_168)))
 (let ((?x76527 (* 2.0 l_0_14_156)))
 (let ((?x76638 (* ?x76527 l_0_14_167)))
 (let ((?x76524 (* 2.0 l_0_14_155)))
 (let ((?x76636 (* ?x76524 l_0_14_166)))
 (let ((?x82644 (- (- (- (+ (+ (+ (+ ?x76636 ?x76638) ?x76640) ?x76642) ?x76644) ?x76646) ?x76648) ?x76650)))
 (let ((?x82651 (- (- (- (- (- (- (- ?x82644 ?x76652) ?x76654) ?x82570) ?x82572) ?x82574) ?x82576) ?x82578)))
 (let ((?x82664 (+ (+ (+ (+ (+ (+ (+ ?x82651 ?x82652) ?x82654) ?x82656) ?x82658) ?x82660) ?x82662) ?x78942)))
 (= (+ (+ (+ (+ ?x82664 ?x78944) ?x78946) ?x78948) ?x78950) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x78931 (* 2.0 l_0_14_303)))
 (let ((?x79014 (* ?x78931 l_0_14_321)))
 (let ((?x78928 (* 2.0 l_0_14_302)))
 (let ((?x79012 (* ?x78928 l_0_14_320)))
 (let ((?x78925 (* 2.0 l_0_14_301)))
 (let ((?x79010 (* ?x78925 l_0_14_319)))
 (let ((?x78922 (* 2.0 l_0_14_300)))
 (let ((?x79008 (* ?x78922 l_0_14_318)))
 (let ((?x78919 (* 2.0 l_0_14_299)))
 (let ((?x79006 (* ?x78919 l_0_14_317)))
 (let ((?x79865 (* 2.0 l_0_14_273)))
 (let ((?x79866 (* ?x79865 l_0_14_286)))
 (let ((?x79862 (* 2.0 l_0_14_272)))
 (let ((?x79863 (* ?x79862 l_0_14_285)))
 (let ((?x79859 (* 2.0 l_0_14_271)))
 (let ((?x79860 (* ?x79859 l_0_14_284)))
 (let ((?x79856 (* 2.0 l_0_14_270)))
 (let ((?x79857 (* ?x79856 l_0_14_283)))
 (let ((?x79853 (* 2.0 l_0_14_269)))
 (let ((?x79854 (* ?x79853 l_0_14_282)))
 (let ((?x79850 (* 2.0 l_0_14_268)))
 (let ((?x79851 (* ?x79850 l_0_14_281)))
 (let ((?x76551 (* 2.0 l_0_14_195)))
 (let ((?x76722 (* ?x76551 l_0_14_213)))
 (let ((?x76548 (* 2.0 l_0_14_194)))
 (let ((?x76720 (* ?x76548 l_0_14_212)))
 (let ((?x76545 (* 2.0 l_0_14_193)))
 (let ((?x76718 (* ?x76545 l_0_14_211)))
 (let ((?x76542 (* 2.0 l_0_14_192)))
 (let ((?x76716 (* ?x76542 l_0_14_210)))
 (let ((?x76539 (* 2.0 l_0_14_191)))
 (let ((?x76714 (* ?x76539 l_0_14_209)))
 (let ((?x76536 (* 2.0 l_0_14_159)))
 (let ((?x76712 (* ?x76536 l_0_14_177)))
 (let ((?x76533 (* 2.0 l_0_14_158)))
 (let ((?x76710 (* ?x76533 l_0_14_176)))
 (let ((?x76530 (* 2.0 l_0_14_157)))
 (let ((?x76708 (* ?x76530 l_0_14_175)))
 (let ((?x76527 (* 2.0 l_0_14_156)))
 (let ((?x76706 (* ?x76527 l_0_14_174)))
 (let ((?x76524 (* 2.0 l_0_14_155)))
 (let ((?x76704 (* ?x76524 l_0_14_173)))
 (let ((?x61616 (- (- (- (+ (+ (+ (+ ?x76704 ?x76706) ?x76708) ?x76710) ?x76712) ?x76714) ?x76716) ?x76718)))
 (let ((?x82696 (- (- (- (- ?x61616 ?x76720) ?x76722) (* (* 2.0 l_0_14_227) l_0_14_232)) (* (* 2.0 l_0_14_228) l_0_14_233))))
 (let ((?x82700 (- (- ?x82696 (* (* 2.0 l_0_14_229) l_0_14_234)) (* (* 2.0 l_0_14_230) l_0_14_235))))
 (let ((?x82705 (+ (+ (+ (- ?x82700 (* (* 2.0 l_0_14_231) l_0_14_236)) ?x79851) ?x79854) ?x79857)))
 (let ((?x82712 (+ (+ (+ (+ (+ (+ (+ ?x82705 ?x79860) ?x79863) ?x79866) ?x79006) ?x79008) ?x79010) ?x79012)))
 (= (+ ?x82712 ?x79014) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x79083 (* l_0_14_309 l_0_14_309)))
 (let ((?x79081 (* l_0_14_308 l_0_14_308)))
 (let ((?x79079 (* l_0_14_307 l_0_14_307)))
 (let ((?x79077 (* l_0_14_306 l_0_14_306)))
 (let ((?x79075 (* l_0_14_305 l_0_14_305)))
 (let ((?x79073 (* l_0_14_304 l_0_14_304)))
 (let ((?x76812 (* l_0_14_201 l_0_14_201)))
 (let ((?x76810 (* l_0_14_200 l_0_14_200)))
 (let ((?x76806 (* l_0_14_199 l_0_14_199)))
 (let ((?x76804 (* l_0_14_198 l_0_14_198)))
 (let ((?x76802 (* l_0_14_197 l_0_14_197)))
 (let ((?x76800 (* l_0_14_196 l_0_14_196)))
 (let ((?x76792 (* l_0_14_165 l_0_14_165)))
 (let ((?x76777 (* l_0_14_164 l_0_14_164)))
 (let ((?x76774 (* l_0_14_163 l_0_14_163)))
 (let ((?x76770 (* l_0_14_162 l_0_14_162)))
 (let ((?x82738 (+ (+ (* l_0_14_160 l_0_14_160) (* l_0_14_161 l_0_14_161)) ?x76770)))
 (let ((?x82745 (- (- (- (- (+ (+ (+ ?x82738 ?x76774) ?x76777) ?x76792) ?x76800) ?x76802) ?x76804) ?x76806)))
 (let ((?x82752 (+ (+ (+ (+ (+ (- (- ?x82745 ?x76810) ?x76812) ?x79073) ?x79075) ?x79077) ?x79079) ?x79081)))
 (= (+ ?x82752 ?x79083) 0.0)))))))))))))))))))))
(assert
 (let ((?x79104 (* 2.0 l_0_14_309)))
 (let ((?x79105 (* ?x79104 l_0_14_315)))
 (let ((?x79101 (* 2.0 l_0_14_308)))
 (let ((?x79102 (* ?x79101 l_0_14_314)))
 (let ((?x79098 (* 2.0 l_0_14_307)))
 (let ((?x79099 (* ?x79098 l_0_14_313)))
 (let ((?x79095 (* 2.0 l_0_14_306)))
 (let ((?x79096 (* ?x79095 l_0_14_312)))
 (let ((?x79092 (* 2.0 l_0_14_305)))
 (let ((?x79093 (* ?x79092 l_0_14_311)))
 (let ((?x57079 (* 2.0 l_0_14_304)))
 (let ((?x57072 (* ?x57079 l_0_14_310)))
 (let ((?x82617 (* l_0_14_273 l_0_14_273)))
 (let ((?x82615 (* l_0_14_272 l_0_14_272)))
 (let ((?x82613 (* l_0_14_271 l_0_14_271)))
 (let ((?x82611 (* l_0_14_270 l_0_14_270)))
 (let ((?x82609 (* l_0_14_269 l_0_14_269)))
 (let ((?x82607 (* l_0_14_268 l_0_14_268)))
 (let ((?x76926 (* 2.0 l_0_14_201)))
 (let ((?x76927 (* ?x76926 l_0_14_207)))
 (let ((?x76923 (* 2.0 l_0_14_200)))
 (let ((?x76924 (* ?x76923 l_0_14_206)))
 (let ((?x76917 (* 2.0 l_0_14_199)))
 (let ((?x76918 (* ?x76917 l_0_14_205)))
 (let ((?x76914 (* 2.0 l_0_14_198)))
 (let ((?x76915 (* ?x76914 l_0_14_204)))
 (let ((?x76911 (* 2.0 l_0_14_197)))
 (let ((?x76912 (* ?x76911 l_0_14_203)))
 (let ((?x76908 (* 2.0 l_0_14_196)))
 (let ((?x76909 (* ?x76908 l_0_14_202)))
 (let ((?x76898 (* 2.0 l_0_14_165)))
 (let ((?x76899 (* ?x76898 l_0_14_171)))
 (let ((?x76895 (* 2.0 l_0_14_164)))
 (let ((?x76896 (* ?x76895 l_0_14_170)))
 (let ((?x76892 (* 2.0 l_0_14_163)))
 (let ((?x76893 (* ?x76892 l_0_14_169)))
 (let ((?x76889 (* 2.0 l_0_14_162)))
 (let ((?x76890 (* ?x76889 l_0_14_168)))
 (let ((?x76886 (* 2.0 l_0_14_161)))
 (let ((?x76887 (* ?x76886 l_0_14_167)))
 (let ((?x76883 (* 2.0 l_0_14_160)))
 (let ((?x76884 (* ?x76883 l_0_14_166)))
 (let ((?x82770 (- (- (+ (+ (+ (+ (+ ?x76884 ?x76887) ?x76890) ?x76893) ?x76896) ?x76899) ?x76909) ?x76912)))
 (let ((?x82777 (- (- (- (- (- (- (- ?x82770 ?x76915) ?x76918) ?x76924) ?x76927) ?x82607) ?x82609) ?x82611)))
 (let ((?x82784 (+ (+ (+ (+ (- (- (- ?x82777 ?x82613) ?x82615) ?x82617) ?x57072) ?x79093) ?x79096) ?x79099)))
 (= (+ (+ ?x82784 ?x79102) ?x79105) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x79104 (* 2.0 l_0_14_309)))
 (let ((?x79168 (* ?x79104 l_0_14_322)))
 (let ((?x79101 (* 2.0 l_0_14_308)))
 (let ((?x79166 (* ?x79101 l_0_14_321)))
 (let ((?x79098 (* 2.0 l_0_14_307)))
 (let ((?x79164 (* ?x79098 l_0_14_320)))
 (let ((?x79095 (* 2.0 l_0_14_306)))
 (let ((?x79162 (* ?x79095 l_0_14_319)))
 (let ((?x79092 (* 2.0 l_0_14_305)))
 (let ((?x79160 (* ?x79092 l_0_14_318)))
 (let ((?x57079 (* 2.0 l_0_14_304)))
 (let ((?x79158 (* ?x57079 l_0_14_317)))
 (let ((?x82825 (* l_0_14_237 l_0_14_237)))
 (let ((?x82823 (* l_0_14_236 l_0_14_236)))
 (let ((?x82821 (* l_0_14_235 l_0_14_235)))
 (let ((?x82819 (* l_0_14_234 l_0_14_234)))
 (let ((?x82817 (* l_0_14_233 l_0_14_233)))
 (let ((?x82815 (* l_0_14_232 l_0_14_232)))
 (let ((?x76926 (* 2.0 l_0_14_201)))
 (let ((?x77082 (* ?x76926 l_0_14_214)))
 (let ((?x76923 (* 2.0 l_0_14_200)))
 (let ((?x77080 (* ?x76923 l_0_14_213)))
 (let ((?x76917 (* 2.0 l_0_14_199)))
 (let ((?x77076 (* ?x76917 l_0_14_212)))
 (let ((?x76914 (* 2.0 l_0_14_198)))
 (let ((?x77074 (* ?x76914 l_0_14_211)))
 (let ((?x76911 (* 2.0 l_0_14_197)))
 (let ((?x77072 (* ?x76911 l_0_14_210)))
 (let ((?x76908 (* 2.0 l_0_14_196)))
 (let ((?x77070 (* ?x76908 l_0_14_209)))
 (let ((?x76898 (* 2.0 l_0_14_165)))
 (let ((?x77062 (* ?x76898 l_0_14_178)))
 (let ((?x76895 (* 2.0 l_0_14_164)))
 (let ((?x77060 (* ?x76895 l_0_14_177)))
 (let ((?x76892 (* 2.0 l_0_14_163)))
 (let ((?x77058 (* ?x76892 l_0_14_176)))
 (let ((?x76889 (* 2.0 l_0_14_162)))
 (let ((?x77056 (* ?x76889 l_0_14_175)))
 (let ((?x76886 (* 2.0 l_0_14_161)))
 (let ((?x77054 (* ?x76886 l_0_14_174)))
 (let ((?x76883 (* 2.0 l_0_14_160)))
 (let ((?x77052 (* ?x76883 l_0_14_173)))
 (let ((?x82810 (- (- (+ (+ (+ (+ (+ ?x77052 ?x77054) ?x77056) ?x77058) ?x77060) ?x77062) ?x77070) ?x77072)))
 (let ((?x82820 (- (- (- (- (- (- (- ?x82810 ?x77074) ?x77076) ?x77080) ?x77082) ?x82815) ?x82817) ?x82819)))
 (let ((?x82830 (+ (+ (+ (+ (- (- (- ?x82820 ?x82821) ?x82823) ?x82825) ?x79158) ?x79160) ?x79162) ?x79164)))
 (= (+ (+ ?x82830 ?x79166) ?x79168) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57416 (* l_0_14_316 l_0_14_316)))
 (let ((?x29967 (* l_0_14_315 l_0_14_315)))
 (let ((?x57404 (* l_0_14_314 l_0_14_314)))
 (let ((?x57403 (* l_0_14_313 l_0_14_313)))
 (let ((?x57397 (* l_0_14_312 l_0_14_312)))
 (let ((?x57394 (* l_0_14_311 l_0_14_311)))
 (let ((?x29792 (* l_0_14_310 l_0_14_310)))
 (let ((?x79865 (* 2.0 l_0_14_273)))
 (let ((?x82662 (* ?x79865 l_0_14_279)))
 (let ((?x79862 (* 2.0 l_0_14_272)))
 (let ((?x82660 (* ?x79862 l_0_14_278)))
 (let ((?x79859 (* 2.0 l_0_14_271)))
 (let ((?x82658 (* ?x79859 l_0_14_277)))
 (let ((?x79856 (* 2.0 l_0_14_270)))
 (let ((?x82656 (* ?x79856 l_0_14_276)))
 (let ((?x79853 (* 2.0 l_0_14_269)))
 (let ((?x82654 (* ?x79853 l_0_14_275)))
 (let ((?x79850 (* 2.0 l_0_14_268)))
 (let ((?x82652 (* ?x79850 l_0_14_274)))
 (let ((?x77161 (* l_0_14_208 l_0_14_208)))
 (let ((?x77159 (* l_0_14_207 l_0_14_207)))
 (let ((?x77157 (* l_0_14_206 l_0_14_206)))
 (let ((?x77155 (* l_0_14_205 l_0_14_205)))
 (let ((?x77153 (* l_0_14_204 l_0_14_204)))
 (let ((?x77151 (* l_0_14_203 l_0_14_203)))
 (let ((?x77149 (* l_0_14_202 l_0_14_202)))
 (let ((?x77147 (* l_0_14_172 l_0_14_172)))
 (let ((?x77145 (* l_0_14_171 l_0_14_171)))
 (let ((?x77143 (* l_0_14_170 l_0_14_170)))
 (let ((?x77141 (* l_0_14_169 l_0_14_169)))
 (let ((?x77139 (* l_0_14_168 l_0_14_168)))
 (let ((?x82850 (+ (+ (* l_0_14_166 l_0_14_166) (* l_0_14_167 l_0_14_167)) ?x77139)))
 (let ((?x82857 (- (- (- (+ (+ (+ (+ ?x82850 ?x77141) ?x77143) ?x77145) ?x77147) ?x77149) ?x77151) ?x77153)))
 (let ((?x82864 (- (- (- (- (- (- (- ?x82857 ?x77155) ?x77157) ?x77159) ?x77161) ?x82652) ?x82654) ?x82656)))
 (let ((?x82871 (+ (+ (+ (+ (- (- (- ?x82864 ?x82658) ?x82660) ?x82662) ?x29792) ?x57394) ?x57397) ?x57403)))
 (= (+ (+ (+ ?x82871 ?x57404) ?x29967) ?x57416) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x79264 (* l_0_14_324 l_0_14_324)))
 (let ((?x79262 (* l_0_14_323 l_0_14_323)))
 (let ((?x79260 (* l_0_14_322 l_0_14_322)))
 (let ((?x79258 (* l_0_14_321 l_0_14_321)))
 (let ((?x79256 (* l_0_14_320 l_0_14_320)))
 (let ((?x79253 (* l_0_14_319 l_0_14_319)))
 (let ((?x79251 (* l_0_14_318 l_0_14_318)))
 (let ((?x79249 (* l_0_14_317 l_0_14_317)))
 (let ((?x77451 (* l_0_14_216 l_0_14_216)))
 (let ((?x77449 (* l_0_14_215 l_0_14_215)))
 (let ((?x77447 (* l_0_14_214 l_0_14_214)))
 (let ((?x77445 (* l_0_14_213 l_0_14_213)))
 (let ((?x77443 (* l_0_14_212 l_0_14_212)))
 (let ((?x77441 (* l_0_14_211 l_0_14_211)))
 (let ((?x77439 (* l_0_14_210 l_0_14_210)))
 (let ((?x77437 (* l_0_14_209 l_0_14_209)))
 (let ((?x77435 (* l_0_14_180 l_0_14_180)))
 (let ((?x77433 (* l_0_14_179 l_0_14_179)))
 (let ((?x77431 (* l_0_14_178 l_0_14_178)))
 (let ((?x77429 (* l_0_14_177 l_0_14_177)))
 (let ((?x77408 (* l_0_14_176 l_0_14_176)))
 (let ((?x77404 (* l_0_14_175 l_0_14_175)))
 (let ((?x61789 (+ (+ (* l_0_14_173 l_0_14_173) (* l_0_14_174 l_0_14_174)) ?x77404)))
 (let ((?x61767 (- (- (+ (+ (+ (+ (+ ?x61789 ?x77408) ?x77429) ?x77431) ?x77433) ?x77435) ?x77437) ?x77439)))
 (let ((?x37351 (- (- (- (- (- (- (- ?x61767 ?x77441) ?x77443) ?x77445) ?x77447) ?x77449) ?x77451) (* (* 2.0 l_0_14_232) l_0_14_245))))
 (let ((?x61699 (- (- ?x37351 (* (* 2.0 l_0_14_233) l_0_14_246)) (* (* 2.0 l_0_14_234) l_0_14_247))))
 (let ((?x61707 (- (- ?x61699 (* (* 2.0 l_0_14_235) l_0_14_248)) (* (* 2.0 l_0_14_236) l_0_14_249))))
 (let ((?x37390 (+ (+ (+ (- ?x61707 (* (* 2.0 l_0_14_237) l_0_14_250)) ?x79249) ?x79251) ?x79253)))
 (= (+ (+ (+ (+ (+ ?x37390 ?x79256) ?x79258) ?x79260) ?x79262) ?x79264) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x61894 (- (- (* (- l_0_14_218) l_0_14_218) (* l_0_14_219 l_0_14_219)) (* (* 2.0 l_0_14_326) l_0_14_353))))
 (let ((?x61899 (- (- ?x61894 (* (* 2.0 l_0_14_327) l_0_14_354)) (* (* 2.0 l_0_14_362) l_0_14_389))))
 (let ((?x61878 (- (- ?x61899 (* (* 2.0 l_0_14_363) l_0_14_390)) (* (* 2.0 l_0_14_398) l_0_14_425))))
 (let ((?x82902 (- (- ?x61878 (* (* 2.0 l_0_14_399) l_0_14_426)) (* (* 2.0 l_0_14_434) l_0_14_461))))
 (let ((?x82906 (- (- ?x82902 (* (* 2.0 l_0_14_435) l_0_14_462)) (* (* 2.0 l_0_14_470) l_0_14_497))))
 (let ((?x82910 (- (- ?x82906 (* (* 2.0 l_0_14_471) l_0_14_498)) (* (* 2.0 l_0_14_506) l_0_14_533))))
 (= (- ?x82910 (* (* 2.0 l_0_14_507) l_0_14_534)) 0.0))))))))
(assert
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x79457 (* ?x78143 l_0_14_282)))
 (let ((?x78140 (* 2.0 l_0_14_254)))
 (let ((?x79455 (* ?x78140 l_0_14_281)))
 (let ((?x82969 (- (* (* (- 2.0) l_0_14_218) l_0_14_227) (* (* 2.0 l_0_14_219) l_0_14_228))))
 (let ((?x82975 (- (- (+ (+ ?x82969 ?x79455) ?x79457) (* (* 2.0 l_0_14_335) l_0_14_353)) (* (* 2.0 l_0_14_336) l_0_14_354))))
 (let ((?x82979 (- (- ?x82975 (* (* 2.0 l_0_14_337) l_0_14_355)) (* (* 2.0 l_0_14_338) l_0_14_356))))
 (let ((?x82983 (- (- ?x82979 (* (* 2.0 l_0_14_339) l_0_14_357)) (* (* 2.0 l_0_14_371) l_0_14_389))))
 (let ((?x82987 (- (- ?x82983 (* (* 2.0 l_0_14_372) l_0_14_390)) (* (* 2.0 l_0_14_373) l_0_14_391))))
 (let ((?x82991 (- (- ?x82987 (* (* 2.0 l_0_14_374) l_0_14_392)) (* (* 2.0 l_0_14_375) l_0_14_393))))
 (let ((?x82995 (- (- ?x82991 (* (* 2.0 l_0_14_407) l_0_14_425)) (* (* 2.0 l_0_14_408) l_0_14_426))))
 (let ((?x82999 (- (- ?x82995 (* (* 2.0 l_0_14_409) l_0_14_427)) (* (* 2.0 l_0_14_410) l_0_14_428))))
 (let ((?x83003 (- (- ?x82999 (* (* 2.0 l_0_14_411) l_0_14_429)) (* (* 2.0 l_0_14_443) l_0_14_461))))
 (let ((?x83007 (- (- ?x83003 (* (* 2.0 l_0_14_444) l_0_14_462)) (* (* 2.0 l_0_14_445) l_0_14_463))))
 (let ((?x83011 (- (- ?x83007 (* (* 2.0 l_0_14_446) l_0_14_464)) (* (* 2.0 l_0_14_447) l_0_14_465))))
 (let ((?x83015 (- (- ?x83011 (* (* 2.0 l_0_14_479) l_0_14_497)) (* (* 2.0 l_0_14_480) l_0_14_498))))
 (let ((?x83019 (- (- ?x83015 (* (* 2.0 l_0_14_481) l_0_14_499)) (* (* 2.0 l_0_14_482) l_0_14_500))))
 (let ((?x83023 (- (- ?x83019 (* (* 2.0 l_0_14_483) l_0_14_501)) (* (* 2.0 l_0_14_515) l_0_14_533))))
 (let ((?x83027 (- (- ?x83023 (* (* 2.0 l_0_14_516) l_0_14_534)) (* (* 2.0 l_0_14_517) l_0_14_535))))
 (let ((?x83031 (- (- ?x83027 (* (* 2.0 l_0_14_518) l_0_14_536)) (* (* 2.0 l_0_14_519) l_0_14_537))))
 (= ?x83031 0.0))))))))))))))))))))))
(assert
 (let ((?x83184 (* l_0_14_540 l_0_14_540)))
 (let ((?x83182 (* l_0_14_539 l_0_14_539)))
 (let ((?x83180 (* l_0_14_538 l_0_14_538)))
 (let ((?x83178 (* l_0_14_537 l_0_14_537)))
 (let ((?x83176 (* l_0_14_536 l_0_14_536)))
 (let ((?x83174 (* l_0_14_535 l_0_14_535)))
 (let ((?x83172 (* l_0_14_534 l_0_14_534)))
 (let ((?x83170 (* l_0_14_533 l_0_14_533)))
 (let ((?x83168 (* l_0_14_504 l_0_14_504)))
 (let ((?x83166 (* l_0_14_503 l_0_14_503)))
 (let ((?x83164 (* l_0_14_502 l_0_14_502)))
 (let ((?x83162 (* l_0_14_501 l_0_14_501)))
 (let ((?x83160 (* l_0_14_500 l_0_14_500)))
 (let ((?x83158 (* l_0_14_499 l_0_14_499)))
 (let ((?x83156 (* l_0_14_498 l_0_14_498)))
 (let ((?x83154 (* l_0_14_497 l_0_14_497)))
 (let ((?x83152 (* l_0_14_468 l_0_14_468)))
 (let ((?x83150 (* l_0_14_467 l_0_14_467)))
 (let ((?x83148 (* l_0_14_466 l_0_14_466)))
 (let ((?x83146 (* l_0_14_465 l_0_14_465)))
 (let ((?x83144 (* l_0_14_464 l_0_14_464)))
 (let ((?x83142 (* l_0_14_463 l_0_14_463)))
 (let ((?x83140 (* l_0_14_462 l_0_14_462)))
 (let ((?x83138 (* l_0_14_461 l_0_14_461)))
 (let ((?x83136 (* l_0_14_432 l_0_14_432)))
 (let ((?x83134 (* l_0_14_431 l_0_14_431)))
 (let ((?x83132 (* l_0_14_430 l_0_14_430)))
 (let ((?x83130 (* l_0_14_429 l_0_14_429)))
 (let ((?x83128 (* l_0_14_428 l_0_14_428)))
 (let ((?x83126 (* l_0_14_427 l_0_14_427)))
 (let ((?x83124 (* l_0_14_426 l_0_14_426)))
 (let ((?x83122 (* l_0_14_425 l_0_14_425)))
 (let ((?x83120 (* l_0_14_396 l_0_14_396)))
 (let ((?x83118 (* l_0_14_395 l_0_14_395)))
 (let ((?x83116 (* l_0_14_394 l_0_14_394)))
 (let ((?x83114 (* l_0_14_393 l_0_14_393)))
 (let ((?x83112 (* l_0_14_392 l_0_14_392)))
 (let ((?x83110 (* l_0_14_391 l_0_14_391)))
 (let ((?x83108 (* l_0_14_390 l_0_14_390)))
 (let ((?x83106 (* l_0_14_389 l_0_14_389)))
 (let ((?x83104 (* l_0_14_360 l_0_14_360)))
 (let ((?x83102 (* l_0_14_359 l_0_14_359)))
 (let ((?x83100 (* l_0_14_358 l_0_14_358)))
 (let ((?x83098 (* l_0_14_357 l_0_14_357)))
 (let ((?x83096 (* l_0_14_356 l_0_14_356)))
 (let ((?x83094 (* l_0_14_355 l_0_14_355)))
 (let ((?x83092 (* l_0_14_354 l_0_14_354)))
 (let ((?x83090 (* l_0_14_353 l_0_14_353)))
 (let ((?x83089 (- (* (* (- 2.0) l_0_14_218) l_0_14_245) (* (* 2.0 l_0_14_219) l_0_14_246))))
 (let ((?x83103 (- (- (- (- (- (- (- ?x83089 ?x83090) ?x83092) ?x83094) ?x83096) ?x83098) ?x83100) ?x83102)))
 (let ((?x83117 (- (- (- (- (- (- (- ?x83103 ?x83104) ?x83106) ?x83108) ?x83110) ?x83112) ?x83114) ?x83116)))
 (let ((?x83131 (- (- (- (- (- (- (- ?x83117 ?x83118) ?x83120) ?x83122) ?x83124) ?x83126) ?x83128) ?x83130)))
 (let ((?x83145 (- (- (- (- (- (- (- ?x83131 ?x83132) ?x83134) ?x83136) ?x83138) ?x83140) ?x83142) ?x83144)))
 (let ((?x83159 (- (- (- (- (- (- (- ?x83145 ?x83146) ?x83148) ?x83150) ?x83152) ?x83154) ?x83156) ?x83158)))
 (let ((?x83173 (- (- (- (- (- (- (- ?x83159 ?x83160) ?x83162) ?x83164) ?x83166) ?x83168) ?x83170) ?x83172)))
 (= (- (- (- (- (- (- ?x83173 ?x83174) ?x83176) ?x83178) ?x83180) ?x83182) ?x83184) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x79723 (* 2.0 l_0_14_267)))
 (let ((?x79724 (* ?x79723 l_0_14_285)))
 (let ((?x79720 (* 2.0 l_0_14_266)))
 (let ((?x79721 (* ?x79720 l_0_14_284)))
 (let ((?x79717 (* 2.0 l_0_14_265)))
 (let ((?x79718 (* ?x79717 l_0_14_283)))
 (let ((?x79714 (* 2.0 l_0_14_264)))
 (let ((?x79715 (* ?x79714 l_0_14_282)))
 (let ((?x79711 (* 2.0 l_0_14_263)))
 (let ((?x79712 (* ?x79711 l_0_14_281)))
 (let ((?x83226 (* l_0_14_231 l_0_14_231)))
 (let ((?x83224 (* l_0_14_230 l_0_14_230)))
 (let ((?x83222 (* l_0_14_229 l_0_14_229)))
 (let ((?x83223 (- (- (* (- l_0_14_227) l_0_14_227) (* l_0_14_228 l_0_14_228)) ?x83222)))
 (let ((?x83232 (+ (+ (+ (+ (+ (- (- ?x83223 ?x83224) ?x83226) ?x79712) ?x79715) ?x79718) ?x79721) ?x79724)))
 (= ?x83232 0.0)))))))))))))))))
(assert
 (let ((?x79970 (* l_0_14_288 l_0_14_288)))
 (let ((?x79968 (* l_0_14_287 l_0_14_287)))
 (let ((?x79966 (* l_0_14_286 l_0_14_286)))
 (let ((?x79964 (* l_0_14_285 l_0_14_285)))
 (let ((?x79962 (* l_0_14_284 l_0_14_284)))
 (let ((?x79960 (* l_0_14_283 l_0_14_283)))
 (let ((?x79958 (* l_0_14_282 l_0_14_282)))
 (let ((?x79956 (* l_0_14_281 l_0_14_281)))
 (let ((?x62310 (- (* (* (- 2.0) l_0_14_227) l_0_14_245) (* (* 2.0 l_0_14_228) l_0_14_246))))
 (let ((?x58816 (- (- ?x62310 (* (* 2.0 l_0_14_229) l_0_14_247)) (* (* 2.0 l_0_14_230) l_0_14_248))))
 (let ((?x83245 (+ (+ (+ (- ?x58816 (* (* 2.0 l_0_14_231) l_0_14_249)) ?x79956) ?x79958) ?x79960)))
 (= (+ (+ (+ (+ (+ ?x83245 ?x79962) ?x79964) ?x79966) ?x79968) ?x79970) 0.0)))))))))))))
(assert
 (let ((?x83282 (* l_0_14_252 l_0_14_252)))
 (let ((?x83280 (* l_0_14_251 l_0_14_251)))
 (let ((?x83278 (* l_0_14_250 l_0_14_250)))
 (let ((?x83276 (* l_0_14_249 l_0_14_249)))
 (let ((?x83274 (* l_0_14_248 l_0_14_248)))
 (let ((?x83272 (* l_0_14_247 l_0_14_247)))
 (let ((?x83273 (- (- (* (- l_0_14_245) l_0_14_245) (* l_0_14_246 l_0_14_246)) ?x83272)))
 (= (- (- (- (- (- ?x83273 ?x83274) ?x83276) ?x83278) ?x83280) ?x83282) 0.0)))))))))
(assert
 (let ((?x38135 (- (- (* (- l_0_14_254) l_0_14_254) (* l_0_14_255 l_0_14_255)) (* (* 2.0 l_0_14_326) l_0_14_346))))
 (let ((?x83294 (- (- ?x38135 (* (* 2.0 l_0_14_327) l_0_14_347)) (* (* 2.0 l_0_14_362) l_0_14_382))))
 (let ((?x83298 (- (- ?x83294 (* (* 2.0 l_0_14_363) l_0_14_383)) (* (* 2.0 l_0_14_398) l_0_14_418))))
 (let ((?x83302 (- (- ?x83298 (* (* 2.0 l_0_14_399) l_0_14_419)) (* (* 2.0 l_0_14_434) l_0_14_454))))
 (let ((?x83306 (- (- ?x83302 (* (* 2.0 l_0_14_435) l_0_14_455)) (* (* 2.0 l_0_14_470) l_0_14_490))))
 (let ((?x83310 (- (- ?x83306 (* (* 2.0 l_0_14_471) l_0_14_491)) (* (* 2.0 l_0_14_506) l_0_14_526))))
 (= (- ?x83310 (* (* 2.0 l_0_14_507) l_0_14_527)) 0.0))))))))
(assert
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x62442 (* ?x78143 l_0_14_257)))
 (let ((?x62443 (- (- (* (* (- 2.0) l_0_14_254) l_0_14_256) ?x62442) (* (* 2.0 l_0_14_328) l_0_14_346))))
 (let ((?x83343 (- (- ?x62443 (* (* 2.0 l_0_14_329) l_0_14_347)) (* (* 2.0 l_0_14_330) l_0_14_348))))
 (let ((?x83347 (- (- ?x83343 (* (* 2.0 l_0_14_364) l_0_14_382)) (* (* 2.0 l_0_14_365) l_0_14_383))))
 (let ((?x83351 (- (- ?x83347 (* (* 2.0 l_0_14_366) l_0_14_384)) (* (* 2.0 l_0_14_400) l_0_14_418))))
 (let ((?x83355 (- (- ?x83351 (* (* 2.0 l_0_14_401) l_0_14_419)) (* (* 2.0 l_0_14_402) l_0_14_420))))
 (let ((?x83359 (- (- ?x83355 (* (* 2.0 l_0_14_436) l_0_14_454)) (* (* 2.0 l_0_14_437) l_0_14_455))))
 (let ((?x83363 (- (- ?x83359 (* (* 2.0 l_0_14_438) l_0_14_456)) (* (* 2.0 l_0_14_472) l_0_14_490))))
 (let ((?x83367 (- (- ?x83363 (* (* 2.0 l_0_14_473) l_0_14_491)) (* (* 2.0 l_0_14_474) l_0_14_492))))
 (let ((?x83371 (- (- ?x83367 (* (* 2.0 l_0_14_508) l_0_14_526)) (* (* 2.0 l_0_14_509) l_0_14_527))))
 (= (- ?x83371 (* (* 2.0 l_0_14_510) l_0_14_528)) 0.0)))))))))))))
(assert
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x83410 (* ?x78143 l_0_14_275)))
 (let ((?x62551 (* ?x78143 l_0_14_264)))
 (let ((?x62550 (+ (* (* (- 2.0) l_0_14_254) l_0_14_263) (* (* 2.0 l_0_14_254) l_0_14_274))))
 (let ((?x83415 (- (- (+ (- ?x62550 ?x62551) ?x83410) (* (* 2.0 l_0_14_335) l_0_14_346)) (* (* 2.0 l_0_14_336) l_0_14_347))))
 (let ((?x83419 (- (- ?x83415 (* (* 2.0 l_0_14_337) l_0_14_348)) (* (* 2.0 l_0_14_338) l_0_14_349))))
 (let ((?x83423 (- (- ?x83419 (* (* 2.0 l_0_14_339) l_0_14_350)) (* (* 2.0 l_0_14_371) l_0_14_382))))
 (let ((?x83427 (- (- ?x83423 (* (* 2.0 l_0_14_372) l_0_14_383)) (* (* 2.0 l_0_14_373) l_0_14_384))))
 (let ((?x83431 (- (- ?x83427 (* (* 2.0 l_0_14_374) l_0_14_385)) (* (* 2.0 l_0_14_375) l_0_14_386))))
 (let ((?x83435 (- (- ?x83431 (* (* 2.0 l_0_14_407) l_0_14_418)) (* (* 2.0 l_0_14_408) l_0_14_419))))
 (let ((?x83439 (- (- ?x83435 (* (* 2.0 l_0_14_409) l_0_14_420)) (* (* 2.0 l_0_14_410) l_0_14_421))))
 (let ((?x83443 (- (- ?x83439 (* (* 2.0 l_0_14_411) l_0_14_422)) (* (* 2.0 l_0_14_443) l_0_14_454))))
 (let ((?x83447 (- (- ?x83443 (* (* 2.0 l_0_14_444) l_0_14_455)) (* (* 2.0 l_0_14_445) l_0_14_456))))
 (let ((?x83451 (- (- ?x83447 (* (* 2.0 l_0_14_446) l_0_14_457)) (* (* 2.0 l_0_14_447) l_0_14_458))))
 (let ((?x83455 (- (- ?x83451 (* (* 2.0 l_0_14_479) l_0_14_490)) (* (* 2.0 l_0_14_480) l_0_14_491))))
 (let ((?x83459 (- (- ?x83455 (* (* 2.0 l_0_14_481) l_0_14_492)) (* (* 2.0 l_0_14_482) l_0_14_493))))
 (let ((?x83463 (- (- ?x83459 (* (* 2.0 l_0_14_483) l_0_14_494)) (* (* 2.0 l_0_14_515) l_0_14_526))))
 (let ((?x83467 (- (- ?x83463 (* (* 2.0 l_0_14_516) l_0_14_527)) (* (* 2.0 l_0_14_517) l_0_14_528))))
 (let ((?x83471 (- (- ?x83467 (* (* 2.0 l_0_14_518) l_0_14_529)) (* (* 2.0 l_0_14_519) l_0_14_530))))
 (= ?x83471 0.0)))))))))))))))))))))
(assert
 (let ((?x83644 (* l_0_14_532 l_0_14_532)))
 (let ((?x83642 (* l_0_14_531 l_0_14_531)))
 (let ((?x83640 (* l_0_14_530 l_0_14_530)))
 (let ((?x83638 (* l_0_14_529 l_0_14_529)))
 (let ((?x83636 (* l_0_14_528 l_0_14_528)))
 (let ((?x83634 (* l_0_14_527 l_0_14_527)))
 (let ((?x83632 (* l_0_14_526 l_0_14_526)))
 (let ((?x83630 (* l_0_14_496 l_0_14_496)))
 (let ((?x83628 (* l_0_14_495 l_0_14_495)))
 (let ((?x83626 (* l_0_14_494 l_0_14_494)))
 (let ((?x83624 (* l_0_14_493 l_0_14_493)))
 (let ((?x83622 (* l_0_14_492 l_0_14_492)))
 (let ((?x83620 (* l_0_14_491 l_0_14_491)))
 (let ((?x83618 (* l_0_14_490 l_0_14_490)))
 (let ((?x83616 (* l_0_14_460 l_0_14_460)))
 (let ((?x83614 (* l_0_14_459 l_0_14_459)))
 (let ((?x83612 (* l_0_14_458 l_0_14_458)))
 (let ((?x83610 (* l_0_14_457 l_0_14_457)))
 (let ((?x83608 (* l_0_14_456 l_0_14_456)))
 (let ((?x83606 (* l_0_14_455 l_0_14_455)))
 (let ((?x83604 (* l_0_14_454 l_0_14_454)))
 (let ((?x83602 (* l_0_14_424 l_0_14_424)))
 (let ((?x83600 (* l_0_14_423 l_0_14_423)))
 (let ((?x83598 (* l_0_14_422 l_0_14_422)))
 (let ((?x83596 (* l_0_14_421 l_0_14_421)))
 (let ((?x83594 (* l_0_14_420 l_0_14_420)))
 (let ((?x83592 (* l_0_14_419 l_0_14_419)))
 (let ((?x83590 (* l_0_14_418 l_0_14_418)))
 (let ((?x83588 (* l_0_14_388 l_0_14_388)))
 (let ((?x83586 (* l_0_14_387 l_0_14_387)))
 (let ((?x83584 (* l_0_14_386 l_0_14_386)))
 (let ((?x83582 (* l_0_14_385 l_0_14_385)))
 (let ((?x83580 (* l_0_14_384 l_0_14_384)))
 (let ((?x83578 (* l_0_14_383 l_0_14_383)))
 (let ((?x83576 (* l_0_14_382 l_0_14_382)))
 (let ((?x83574 (* l_0_14_352 l_0_14_352)))
 (let ((?x83572 (* l_0_14_351 l_0_14_351)))
 (let ((?x83570 (* l_0_14_350 l_0_14_350)))
 (let ((?x83568 (* l_0_14_349 l_0_14_349)))
 (let ((?x83566 (* l_0_14_348 l_0_14_348)))
 (let ((?x83564 (* l_0_14_347 l_0_14_347)))
 (let ((?x83562 (* l_0_14_346 l_0_14_346)))
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x83410 (* ?x78143 l_0_14_275)))
 (let ((?x83567 (- (- (- (- (* (* (- 2.0) l_0_14_254) l_0_14_274) ?x83410) ?x83562) ?x83564) ?x83566)))
 (let ((?x83581 (- (- (- (- (- (- (- ?x83567 ?x83568) ?x83570) ?x83572) ?x83574) ?x83576) ?x83578) ?x83580)))
 (let ((?x83595 (- (- (- (- (- (- (- ?x83581 ?x83582) ?x83584) ?x83586) ?x83588) ?x83590) ?x83592) ?x83594)))
 (let ((?x83609 (- (- (- (- (- (- (- ?x83595 ?x83596) ?x83598) ?x83600) ?x83602) ?x83604) ?x83606) ?x83608)))
 (let ((?x83623 (- (- (- (- (- (- (- ?x83609 ?x83610) ?x83612) ?x83614) ?x83616) ?x83618) ?x83620) ?x83622)))
 (let ((?x83637 (- (- (- (- (- (- (- ?x83623 ?x83624) ?x83626) ?x83628) ?x83630) ?x83632) ?x83634) ?x83636)))
 (= (- (- (- (- ?x83637 ?x83638) ?x83640) ?x83642) ?x83644) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x38604 (* l_0_14_258 l_0_14_258)))
 (let ((?x38711 (- (- (* (- l_0_14_256) l_0_14_256) (* l_0_14_257 l_0_14_257)) ?x38604)))
 (= ?x38711 0.0))))
(assert
 (let ((?x75560 (* 2.0 l_0_14_258)))
 (let ((?x83687 (* ?x75560 l_0_14_276)))
 (let ((?x83685 (* ?x75560 l_0_14_265)))
 (let ((?x75557 (* 2.0 l_0_14_257)))
 (let ((?x83683 (* ?x75557 l_0_14_275)))
 (let ((?x83681 (* ?x75557 l_0_14_264)))
 (let ((?x38784 (+ (* (* (- 2.0) l_0_14_256) l_0_14_263) (* (* 2.0 l_0_14_256) l_0_14_274))))
 (= (+ (- (+ (- ?x38784 ?x83681) ?x83683) ?x83685) ?x83687) 0.0)))))))))
(assert
 (let ((?x75560 (* 2.0 l_0_14_258)))
 (let ((?x83687 (* ?x75560 l_0_14_276)))
 (let ((?x75557 (* 2.0 l_0_14_257)))
 (let ((?x83683 (* ?x75557 l_0_14_275)))
 (= (- (- (* (* (- 2.0) l_0_14_256) l_0_14_274) ?x83683) ?x83687) 0.0))))))
(assert
 (let ((?x83729 (* l_0_14_267 l_0_14_267)))
 (let ((?x79723 (* 2.0 l_0_14_267)))
 (let ((?x83727 (* ?x79723 l_0_14_278)))
 (let ((?x83725 (* l_0_14_266 l_0_14_266)))
 (let ((?x79720 (* 2.0 l_0_14_266)))
 (let ((?x83723 (* ?x79720 l_0_14_277)))
 (let ((?x83721 (* l_0_14_265 l_0_14_265)))
 (let ((?x79717 (* 2.0 l_0_14_265)))
 (let ((?x83719 (* ?x79717 l_0_14_276)))
 (let ((?x83717 (* l_0_14_264 l_0_14_264)))
 (let ((?x79714 (* 2.0 l_0_14_264)))
 (let ((?x83715 (* ?x79714 l_0_14_275)))
 (let ((?x38799 (* l_0_14_263 l_0_14_263)))
 (let ((?x83720 (+ (- (+ (- (* (* 2.0 l_0_14_263) l_0_14_274) ?x38799) ?x83715) ?x83717) ?x83719)))
 (= (- (+ (- (+ (- ?x83720 ?x83721) ?x83723) ?x83725) ?x83727) ?x83729) 0.0))))))))))))))))
(assert
 (let ((?x83782 (* l_0_14_280 l_0_14_280)))
 (let ((?x83780 (* l_0_14_279 l_0_14_279)))
 (let ((?x83778 (* l_0_14_278 l_0_14_278)))
 (let ((?x83776 (* l_0_14_277 l_0_14_277)))
 (let ((?x83774 (* l_0_14_276 l_0_14_276)))
 (let ((?x83772 (* l_0_14_275 l_0_14_275)))
 (let ((?x83770 (* l_0_14_274 l_0_14_274)))
 (let ((?x79723 (* 2.0 l_0_14_267)))
 (let ((?x83727 (* ?x79723 l_0_14_278)))
 (let ((?x79720 (* 2.0 l_0_14_266)))
 (let ((?x83723 (* ?x79720 l_0_14_277)))
 (let ((?x79717 (* 2.0 l_0_14_265)))
 (let ((?x83719 (* ?x79717 l_0_14_276)))
 (let ((?x79714 (* 2.0 l_0_14_264)))
 (let ((?x83715 (* ?x79714 l_0_14_275)))
 (let ((?x83769 (- (- (- (- (* (* (- 2.0) l_0_14_263) l_0_14_274) ?x83715) ?x83719) ?x83723) ?x83727)))
 (let ((?x83783 (+ (+ (+ (+ (+ (+ (+ ?x83769 ?x83770) ?x83772) ?x83774) ?x83776) ?x83778) ?x83780) ?x83782)))
 (= ?x83783 0.0)))))))))))))))))))
(assert
 (let ((?x83782 (* l_0_14_280 l_0_14_280)))
 (let ((?x83780 (* l_0_14_279 l_0_14_279)))
 (let ((?x83778 (* l_0_14_278 l_0_14_278)))
 (let ((?x83776 (* l_0_14_277 l_0_14_277)))
 (let ((?x83774 (* l_0_14_276 l_0_14_276)))
 (let ((?x83789 (- (- (* (- l_0_14_274) l_0_14_274) (* l_0_14_275 l_0_14_275)) ?x83774)))
 (= (- (- (- (- ?x83789 ?x83776) ?x83778) ?x83780) ?x83782) 0.0))))))))
(assert
 (let ((?x38855 (- (+ (* l_0_14_254 l_0_14_254) (* l_0_14_255 l_0_14_255)) (* (* 2.0 l_0_14_326) l_0_14_335))))
 (let ((?x63124 (- (- ?x38855 (* (* 2.0 l_0_14_327) l_0_14_336)) (* (* 2.0 l_0_14_362) l_0_14_371))))
 (let ((?x63089 (- (- ?x63124 (* (* 2.0 l_0_14_363) l_0_14_372)) (* (* 2.0 l_0_14_398) l_0_14_407))))
 (let ((?x63090 (- (- ?x63089 (* (* 2.0 l_0_14_399) l_0_14_408)) (* (* 2.0 l_0_14_434) l_0_14_443))))
 (let ((?x63084 (- (- ?x63090 (* (* 2.0 l_0_14_435) l_0_14_444)) (* (* 2.0 l_0_14_470) l_0_14_479))))
 (let ((?x83800 (- (- ?x63084 (* (* 2.0 l_0_14_471) l_0_14_480)) (* (* 2.0 l_0_14_506) l_0_14_515))))
 (= (- ?x83800 (* (* 2.0 l_0_14_507) l_0_14_516)) 0.0))))))))
(assert
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x62442 (* ?x78143 l_0_14_257)))
 (let ((?x83836 (- (+ (* (* 2.0 l_0_14_254) l_0_14_256) ?x62442) (* (* 2.0 l_0_14_328) l_0_14_335))))
 (let ((?x83840 (- (- ?x83836 (* (* 2.0 l_0_14_329) l_0_14_336)) (* (* 2.0 l_0_14_330) l_0_14_337))))
 (let ((?x83844 (- (- ?x83840 (* (* 2.0 l_0_14_364) l_0_14_371)) (* (* 2.0 l_0_14_365) l_0_14_372))))
 (let ((?x83848 (- (- ?x83844 (* (* 2.0 l_0_14_366) l_0_14_373)) (* (* 2.0 l_0_14_400) l_0_14_407))))
 (let ((?x83852 (- (- ?x83848 (* (* 2.0 l_0_14_401) l_0_14_408)) (* (* 2.0 l_0_14_402) l_0_14_409))))
 (let ((?x83856 (- (- ?x83852 (* (* 2.0 l_0_14_436) l_0_14_443)) (* (* 2.0 l_0_14_437) l_0_14_444))))
 (let ((?x83860 (- (- ?x83856 (* (* 2.0 l_0_14_438) l_0_14_445)) (* (* 2.0 l_0_14_472) l_0_14_479))))
 (let ((?x83864 (- (- ?x83860 (* (* 2.0 l_0_14_473) l_0_14_480)) (* (* 2.0 l_0_14_474) l_0_14_481))))
 (let ((?x83868 (- (- ?x83864 (* (* 2.0 l_0_14_508) l_0_14_515)) (* (* 2.0 l_0_14_509) l_0_14_516))))
 (= (- ?x83868 (* (* 2.0 l_0_14_510) l_0_14_517)) 0.0)))))))))))))
(assert
 (let ((?x83962 (* l_0_14_519 l_0_14_519)))
 (let ((?x83960 (* l_0_14_518 l_0_14_518)))
 (let ((?x83958 (* l_0_14_517 l_0_14_517)))
 (let ((?x83956 (* l_0_14_516 l_0_14_516)))
 (let ((?x83954 (* l_0_14_515 l_0_14_515)))
 (let ((?x83952 (* l_0_14_483 l_0_14_483)))
 (let ((?x83950 (* l_0_14_482 l_0_14_482)))
 (let ((?x83948 (* l_0_14_481 l_0_14_481)))
 (let ((?x83946 (* l_0_14_480 l_0_14_480)))
 (let ((?x83944 (* l_0_14_479 l_0_14_479)))
 (let ((?x83942 (* l_0_14_447 l_0_14_447)))
 (let ((?x83940 (* l_0_14_446 l_0_14_446)))
 (let ((?x83938 (* l_0_14_445 l_0_14_445)))
 (let ((?x83936 (* l_0_14_444 l_0_14_444)))
 (let ((?x83934 (* l_0_14_443 l_0_14_443)))
 (let ((?x83932 (* l_0_14_411 l_0_14_411)))
 (let ((?x83930 (* l_0_14_410 l_0_14_410)))
 (let ((?x83928 (* l_0_14_409 l_0_14_409)))
 (let ((?x83926 (* l_0_14_408 l_0_14_408)))
 (let ((?x83924 (* l_0_14_407 l_0_14_407)))
 (let ((?x83922 (* l_0_14_375 l_0_14_375)))
 (let ((?x83920 (* l_0_14_374 l_0_14_374)))
 (let ((?x83918 (* l_0_14_373 l_0_14_373)))
 (let ((?x83916 (* l_0_14_372 l_0_14_372)))
 (let ((?x83914 (* l_0_14_371 l_0_14_371)))
 (let ((?x83912 (* l_0_14_339 l_0_14_339)))
 (let ((?x83910 (* l_0_14_338 l_0_14_338)))
 (let ((?x83908 (* l_0_14_337 l_0_14_337)))
 (let ((?x83906 (* l_0_14_336 l_0_14_336)))
 (let ((?x83904 (* l_0_14_335 l_0_14_335)))
 (let ((?x78143 (* 2.0 l_0_14_255)))
 (let ((?x62551 (* ?x78143 l_0_14_264)))
 (let ((?x83909 (- (- (- (+ (* (* 2.0 l_0_14_254) l_0_14_263) ?x62551) ?x83904) ?x83906) ?x83908)))
 (let ((?x83923 (- (- (- (- (- (- (- ?x83909 ?x83910) ?x83912) ?x83914) ?x83916) ?x83918) ?x83920) ?x83922)))
 (let ((?x83937 (- (- (- (- (- (- (- ?x83923 ?x83924) ?x83926) ?x83928) ?x83930) ?x83932) ?x83934) ?x83936)))
 (let ((?x83951 (- (- (- (- (- (- (- ?x83937 ?x83938) ?x83940) ?x83942) ?x83944) ?x83946) ?x83948) ?x83950)))
 (= (- (- (- (- (- (- ?x83951 ?x83952) ?x83954) ?x83956) ?x83958) ?x83960) ?x83962) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x38604 (* l_0_14_258 l_0_14_258)))
 (let ((?x84007 (+ (+ (* l_0_14_256 l_0_14_256) (* l_0_14_257 l_0_14_257)) ?x38604)))
 (= ?x84007 0.0))))
(assert
 (let ((?x75560 (* 2.0 l_0_14_258)))
 (let ((?x83685 (* ?x75560 l_0_14_265)))
 (let ((?x75557 (* 2.0 l_0_14_257)))
 (let ((?x83681 (* ?x75557 l_0_14_264)))
 (= (+ (+ (* (* 2.0 l_0_14_256) l_0_14_263) ?x83681) ?x83685) 0.0))))))
(assert
 (let ((?x83729 (* l_0_14_267 l_0_14_267)))
 (let ((?x83725 (* l_0_14_266 l_0_14_266)))
 (let ((?x83721 (* l_0_14_265 l_0_14_265)))
 (let ((?x84013 (+ (+ (* l_0_14_263 l_0_14_263) (* l_0_14_264 l_0_14_264)) ?x83721)))
 (= (+ (+ ?x84013 ?x83725) ?x83729) 0.0))))))
(assert
 (let ((?x84034 (* l_0_14_507 l_0_14_507)))
 (let ((?x84032 (* l_0_14_506 l_0_14_506)))
 (let ((?x84030 (* l_0_14_471 l_0_14_471)))
 (let ((?x84028 (* l_0_14_470 l_0_14_470)))
 (let ((?x84026 (* l_0_14_435 l_0_14_435)))
 (let ((?x84024 (* l_0_14_434 l_0_14_434)))
 (let ((?x84022 (* l_0_14_399 l_0_14_399)))
 (let ((?x84020 (* l_0_14_398 l_0_14_398)))
 (let ((?x84018 (* l_0_14_363 l_0_14_363)))
 (let ((?x63431 (* l_0_14_362 l_0_14_362)))
 (let ((?x84017 (- (- (* (- l_0_14_326) l_0_14_326) (* l_0_14_327 l_0_14_327)) ?x63431)))
 (let ((?x84031 (- (- (- (- (- (- (- ?x84017 ?x84018) ?x84020) ?x84022) ?x84024) ?x84026) ?x84028) ?x84030)))
 (= (- (- ?x84031 ?x84032) ?x84034) 0.0))))))))))))))
(assert
 (let ((?x84052 (- (* (* (- 2.0) l_0_14_326) l_0_14_328) (* (* 2.0 l_0_14_327) l_0_14_329))))
 (let ((?x84056 (- (- ?x84052 (* (* 2.0 l_0_14_362) l_0_14_364)) (* (* 2.0 l_0_14_363) l_0_14_365))))
 (let ((?x84060 (- (- ?x84056 (* (* 2.0 l_0_14_398) l_0_14_400)) (* (* 2.0 l_0_14_399) l_0_14_401))))
 (let ((?x84064 (- (- ?x84060 (* (* 2.0 l_0_14_434) l_0_14_436)) (* (* 2.0 l_0_14_435) l_0_14_437))))
 (let ((?x84068 (- (- ?x84064 (* (* 2.0 l_0_14_470) l_0_14_472)) (* (* 2.0 l_0_14_471) l_0_14_473))))
 (let ((?x84072 (- (- ?x84068 (* (* 2.0 l_0_14_506) l_0_14_508)) (* (* 2.0 l_0_14_507) l_0_14_509))))
 (= ?x84072 0.0))))))))
(assert
 (let ((?x84138 (* l_0_14_510 l_0_14_510)))
 (let ((?x84136 (* l_0_14_509 l_0_14_509)))
 (let ((?x84134 (* l_0_14_508 l_0_14_508)))
 (let ((?x84132 (* l_0_14_474 l_0_14_474)))
 (let ((?x84130 (* l_0_14_473 l_0_14_473)))
 (let ((?x84128 (* l_0_14_472 l_0_14_472)))
 (let ((?x84126 (* l_0_14_438 l_0_14_438)))
 (let ((?x84124 (* l_0_14_437 l_0_14_437)))
 (let ((?x84122 (* l_0_14_436 l_0_14_436)))
 (let ((?x84120 (* l_0_14_402 l_0_14_402)))
 (let ((?x84118 (* l_0_14_401 l_0_14_401)))
 (let ((?x84116 (* l_0_14_400 l_0_14_400)))
 (let ((?x84114 (* l_0_14_366 l_0_14_366)))
 (let ((?x84112 (* l_0_14_365 l_0_14_365)))
 (let ((?x84110 (* l_0_14_364 l_0_14_364)))
 (let ((?x84108 (* l_0_14_330 l_0_14_330)))
 (let ((?x84109 (- (- (* (- l_0_14_328) l_0_14_328) (* l_0_14_329 l_0_14_329)) ?x84108)))
 (let ((?x84123 (- (- (- (- (- (- (- ?x84109 ?x84110) ?x84112) ?x84114) ?x84116) ?x84118) ?x84120) ?x84122)))
 (let ((?x84137 (- (- (- (- (- (- (- ?x84123 ?x84124) ?x84126) ?x84128) ?x84130) ?x84132) ?x84134) ?x84136)))
 (= (- ?x84137 ?x84138) 0.0)))))))))))))))))))))
(assert
 (>= l_0_14_1 0.0))
(assert
 (>= l_0_14_3 0.0))
(assert
 (>= l_0_14_6 0.0))
(assert
 (>= l_0_14_10 0.0))
(assert
 (>= l_0_14_15 0.0))
(assert
 (>= l_0_14_21 0.0))
(assert
 (>= l_0_14_28 0.0))
(assert
 (>= l_0_14_36 0.0))
(assert
 (>= l_0_14_37 0.0))
(assert
 (>= l_0_14_39 0.0))
(assert
 (>= l_0_14_42 0.0))
(assert
 (>= l_0_14_46 0.0))
(assert
 (>= l_0_14_51 0.0))
(assert
 (>= l_0_14_57 0.0))
(assert
 (>= l_0_14_64 0.0))
(assert
 (>= l_0_14_72 0.0))
(assert
 (>= l_0_14_73 0.0))
(assert
 (>= l_0_14_75 0.0))
(assert
 (>= l_0_14_78 0.0))
(assert
 (>= l_0_14_82 0.0))
(assert
 (>= l_0_14_87 0.0))
(assert
 (>= l_0_14_93 0.0))
(assert
 (>= l_0_14_100 0.0))
(assert
 (>= l_0_14_108 0.0))
(assert
 (>= l_0_14_109 0.0))
(assert
 (>= l_0_14_111 0.0))
(assert
 (>= l_0_14_114 0.0))
(assert
 (>= l_0_14_118 0.0))
(assert
 (>= l_0_14_123 0.0))
(assert
 (>= l_0_14_129 0.0))
(assert
 (>= l_0_14_136 0.0))
(assert
 (>= l_0_14_144 0.0))
(assert
 (>= l_0_14_145 0.0))
(assert
 (>= l_0_14_147 0.0))
(assert
 (>= l_0_14_150 0.0))
(assert
 (>= l_0_14_154 0.0))
(assert
 (>= l_0_14_159 0.0))
(assert
 (>= l_0_14_165 0.0))
(assert
 (>= l_0_14_172 0.0))
(assert
 (>= l_0_14_180 0.0))
(assert
 (>= l_0_14_181 0.0))
(assert
 (>= l_0_14_183 0.0))
(assert
 (>= l_0_14_186 0.0))
(assert
 (>= l_0_14_190 0.0))
(assert
 (>= l_0_14_195 0.0))
(assert
 (>= l_0_14_201 0.0))
(assert
 (>= l_0_14_208 0.0))
(assert
 (>= l_0_14_216 0.0))
(assert
 (>= l_0_14_217 0.0))
(assert
 (>= l_0_14_219 0.0))
(assert
 (>= l_0_14_222 0.0))
(assert
 (>= l_0_14_226 0.0))
(assert
 (>= l_0_14_231 0.0))
(assert
 (>= l_0_14_237 0.0))
(assert
 (>= l_0_14_244 0.0))
(assert
 (>= l_0_14_252 0.0))
(assert
 (>= l_0_14_253 0.0))
(assert
 (>= l_0_14_255 0.0))
(assert
 (>= l_0_14_258 0.0))
(assert
 (>= l_0_14_262 0.0))
(assert
 (>= l_0_14_267 0.0))
(assert
 (>= l_0_14_273 0.0))
(assert
 (>= l_0_14_280 0.0))
(assert
 (>= l_0_14_288 0.0))
(assert
 (>= l_0_14_289 0.0))
(assert
 (>= l_0_14_291 0.0))
(assert
 (>= l_0_14_294 0.0))
(assert
 (>= l_0_14_298 0.0))
(assert
 (>= l_0_14_303 0.0))
(assert
 (>= l_0_14_309 0.0))
(assert
 (>= l_0_14_316 0.0))
(assert
 (>= l_0_14_324 0.0))
(assert
 (>= l_0_14_325 0.0))
(assert
 (>= l_0_14_327 0.0))
(assert
 (>= l_0_14_330 0.0))
(assert
 (>= l_0_14_334 0.0))
(assert
 (>= l_0_14_339 0.0))
(assert
 (>= l_0_14_345 0.0))
(assert
 (>= l_0_14_352 0.0))
(assert
 (>= l_0_14_360 0.0))
(assert
 (>= l_0_14_361 0.0))
(assert
 (>= l_0_14_363 0.0))
(assert
 (>= l_0_14_366 0.0))
(assert
 (>= l_0_14_370 0.0))
(assert
 (>= l_0_14_375 0.0))
(assert
 (>= l_0_14_381 0.0))
(assert
 (>= l_0_14_388 0.0))
(assert
 (>= l_0_14_396 0.0))
(assert
 (>= l_0_14_397 0.0))
(assert
 (>= l_0_14_399 0.0))
(assert
 (>= l_0_14_402 0.0))
(assert
 (>= l_0_14_406 0.0))
(assert
 (>= l_0_14_411 0.0))
(assert
 (>= l_0_14_417 0.0))
(assert
 (>= l_0_14_424 0.0))
(assert
 (>= l_0_14_432 0.0))
(assert
 (>= l_0_14_433 0.0))
(assert
 (>= l_0_14_435 0.0))
(assert
 (>= l_0_14_438 0.0))
(assert
 (>= l_0_14_442 0.0))
(assert
 (>= l_0_14_447 0.0))
(assert
 (>= l_0_14_453 0.0))
(assert
 (>= l_0_14_460 0.0))
(assert
 (>= l_0_14_468 0.0))
(assert
 (>= l_0_14_469 0.0))
(assert
 (>= l_0_14_471 0.0))
(assert
 (>= l_0_14_474 0.0))
(assert
 (>= l_0_14_478 0.0))
(assert
 (>= l_0_14_483 0.0))
(assert
 (>= l_0_14_489 0.0))
(assert
 (>= l_0_14_496 0.0))
(assert
 (>= l_0_14_504 0.0))
(assert
 (>= l_0_14_505 0.0))
(assert
 (>= l_0_14_507 0.0))
(assert
 (>= l_0_14_510 0.0))
(assert
 (>= l_0_14_514 0.0))
(assert
 (>= l_0_14_519 0.0))
(assert
 (>= l_0_14_525 0.0))
(assert
 (>= l_0_14_532 0.0))
(assert
 (>= l_0_14_540 0.0))
(assert
 (let ((?x84283 (- (- (* (- l_0_15_218) l_0_15_218) (* l_0_15_219 l_0_15_219)) (* (* 2.0 l_0_15_326) l_0_15_353))))
 (let ((?x84289 (- (- ?x84283 (* (* 2.0 l_0_15_327) l_0_15_354)) (* (* 2.0 l_0_15_362) l_0_15_389))))
 (let ((?x84295 (- (- ?x84289 (* (* 2.0 l_0_15_363) l_0_15_390)) (* (* 2.0 l_0_15_398) l_0_15_425))))
 (let ((?x84301 (- (- ?x84295 (* (* 2.0 l_0_15_399) l_0_15_426)) (* (* 2.0 l_0_15_434) l_0_15_461))))
 (let ((?x84307 (- (- ?x84301 (* (* 2.0 l_0_15_435) l_0_15_462)) (* (* 2.0 l_0_15_470) l_0_15_497))))
 (let ((?x84313 (- (- ?x84307 (* (* 2.0 l_0_15_471) l_0_15_498)) (* (* 2.0 l_0_15_506) l_0_15_533))))
 (let ((?x84319 (- (- ?x84313 (* (* 2.0 l_0_15_507) l_0_15_534)) (* (* 2.0 l_0_15_542) l_0_15_569))))
 (= (+ (- ?x84319 (* (* 2.0 l_0_15_543) l_0_15_570)) 1.0) 0.0)))))))))
(assert
 (let ((?x84383 (* l_0_15_543 l_0_15_543)))
 (let ((?x84381 (* l_0_15_542 l_0_15_542)))
 (let ((?x84379 (* l_0_15_507 l_0_15_507)))
 (let ((?x84377 (* l_0_15_506 l_0_15_506)))
 (let ((?x84375 (* l_0_15_471 l_0_15_471)))
 (let ((?x84373 (* l_0_15_470 l_0_15_470)))
 (let ((?x84371 (* l_0_15_435 l_0_15_435)))
 (let ((?x84369 (* l_0_15_434 l_0_15_434)))
 (let ((?x84367 (* l_0_15_399 l_0_15_399)))
 (let ((?x84365 (* l_0_15_398 l_0_15_398)))
 (let ((?x84363 (* l_0_15_363 l_0_15_363)))
 (let ((?x84361 (* l_0_15_362 l_0_15_362)))
 (let ((?x84362 (- (- (* (- l_0_15_326) l_0_15_326) (* l_0_15_327 l_0_15_327)) ?x84361)))
 (let ((?x84376 (- (- (- (- (- (- (- ?x84362 ?x84363) ?x84365) ?x84367) ?x84369) ?x84371) ?x84373) ?x84375)))
 (= (- (- (- (- ?x84376 ?x84377) ?x84379) ?x84381) ?x84383) 0.0))))))))))))))))
(assert
 (let ((?x84413 (* l_0_15_37 l_0_15_37)))
 (let ((?x84411 (* l_0_15_181 l_0_15_181)))
 (let ((?x84412 (+ (- (* (- l_0_15_1) l_0_15_1) (* l_0_15_145 l_0_15_145)) ?x84411)))
 (= (+ ?x84412 ?x84413) 0.0)))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84465 (* ?x84464 l_0_15_38)))
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x84462 (* ?x84461 l_0_15_319)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x84459 (* ?x84458 l_0_15_318)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x84456 (* ?x84455 l_0_15_317)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84450 (* ?x84449 l_0_15_182)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84447 (* ?x84446 l_0_15_146)))
 (let ((?x84430 (+ (* (* (- 2.0) l_0_15_1) l_0_15_2) (* (* 2.0 l_0_15_101) l_0_15_76))))
 (let ((?x84436 (+ (+ ?x84430 (* (* 2.0 l_0_15_102) l_0_15_77)) (* (* 2.0 l_0_15_103) l_0_15_78))))
 (let ((?x84442 (- (- ?x84436 (* (* 2.0 l_0_15_112) l_0_15_137)) (* (* 2.0 l_0_15_113) l_0_15_138))))
 (let ((?x84454 (- (+ (- (- ?x84442 (* (* 2.0 l_0_15_114) l_0_15_139)) ?x84447) ?x84450) (* (* 2.0 l_0_15_217) l_0_15_220))))
 (= (+ (- (- (- ?x84454 ?x84456) ?x84459) ?x84462) ?x84465) 0.0))))))))))))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84511 (* ?x84464 l_0_15_40)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84509 (* ?x84449 l_0_15_184)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84507 (* ?x84446 l_0_15_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_1) l_0_15_4) ?x84507) ?x84509) ?x84511) 0.0))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84528 (* ?x84464 l_0_15_43)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84526 (* ?x84449 l_0_15_187)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84519 (* ?x84446 l_0_15_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_1) l_0_15_7) ?x84519) ?x84526) ?x84528) 0.0))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x63647 (* ?x84464 l_0_15_47)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x63644 (* ?x84449 l_0_15_191)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x39574 (* ?x84446 l_0_15_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_1) l_0_15_11) ?x39574) ?x63644) ?x63647) 0.0))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84555 (* ?x84464 l_0_15_52)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84553 (* ?x84449 l_0_15_196)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84546 (* ?x84446 l_0_15_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_1) l_0_15_16) ?x84546) ?x84553) ?x84555) 0.0))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84581 (* ?x84464 l_0_15_58)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84579 (* ?x84449 l_0_15_202)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84577 (* ?x84446 l_0_15_166)))
 (let ((?x84507 (* ?x84446 l_0_15_148)))
 (let ((?x84575 (+ (* (* (- 2.0) l_0_15_1) l_0_15_22) (* (* 1.0 l_0_15_109) l_0_15_112))))
 (let ((?x84585 (- (+ (+ (- (- ?x84575 ?x84507) ?x84577) ?x84579) ?x84581) (* (* 1.0 l_0_15_73) l_0_15_76))))
 (= ?x84585 0.0)))))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84613 (* ?x84464 l_0_15_65)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84611 (* ?x84449 l_0_15_209)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84609 (* ?x84446 l_0_15_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_1) l_0_15_29) ?x84609) ?x84611) ?x84613) 0.0))))))))
(assert
 (let ((?x84666 (* l_0_15_39 l_0_15_39)))
 (let ((?x84664 (* l_0_15_38 l_0_15_38)))
 (let ((?x84644 (* l_0_15_3 l_0_15_3)))
 (let ((?x84636 (* l_0_15_2 l_0_15_2)))
 (let ((?x84634 (* l_0_15_183 l_0_15_183)))
 (let ((?x84632 (* l_0_15_182 l_0_15_182)))
 (let ((?x84633 (+ (- (* (- l_0_15_146) l_0_15_146) (* l_0_15_147 l_0_15_147)) ?x84632)))
 (let ((?x84643 (- (- (- (+ ?x84633 ?x84634) ?x84636) (* (* 2.0 l_0_15_218) l_0_15_220)) (* (* 2.0 l_0_15_219) l_0_15_221))))
 (let ((?x84651 (- (- (- ?x84643 ?x84644) (* (* 2.0 l_0_15_328) l_0_15_353)) (* (* 2.0 l_0_15_329) l_0_15_354))))
 (let ((?x84657 (- (- ?x84651 (* (* 2.0 l_0_15_330) l_0_15_355)) (* (* 2.0 l_0_15_364) l_0_15_389))))
 (let ((?x84663 (- (- ?x84657 (* (* 2.0 l_0_15_365) l_0_15_390)) (* (* 2.0 l_0_15_366) l_0_15_391))))
 (let ((?x84673 (- (- (+ (+ ?x84663 ?x84664) ?x84666) (* (* 2.0 l_0_15_400) l_0_15_425)) (* (* 2.0 l_0_15_401) l_0_15_426))))
 (let ((?x84679 (- (- ?x84673 (* (* 2.0 l_0_15_402) l_0_15_427)) (* (* 2.0 l_0_15_436) l_0_15_461))))
 (let ((?x84685 (- (- ?x84679 (* (* 2.0 l_0_15_437) l_0_15_462)) (* (* 2.0 l_0_15_438) l_0_15_463))))
 (let ((?x84691 (- (- ?x84685 (* (* 2.0 l_0_15_472) l_0_15_497)) (* (* 2.0 l_0_15_473) l_0_15_498))))
 (let ((?x84697 (- (- ?x84691 (* (* 2.0 l_0_15_474) l_0_15_499)) (* (* 2.0 l_0_15_508) l_0_15_533))))
 (let ((?x84703 (- (- ?x84697 (* (* 2.0 l_0_15_509) l_0_15_534)) (* (* 2.0 l_0_15_510) l_0_15_535))))
 (let ((?x84709 (- (- ?x84703 (* (* 2.0 l_0_15_544) l_0_15_569)) (* (* 2.0 l_0_15_545) l_0_15_570))))
 (= (- ?x84709 (* (* 2.0 l_0_15_546) l_0_15_571)) 0.0))))))))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x84814 (* ?x84813 l_0_15_41)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x84811 (* ?x84810 l_0_15_40)))
 (let ((?x84807 (* 2.0 l_0_15_3)))
 (let ((?x84808 (* ?x84807 l_0_15_5)))
 (let ((?x84805 (* l_0_15_222 l_0_15_222)))
 (let ((?x84803 (* l_0_15_221 l_0_15_221)))
 (let ((?x84801 (* l_0_15_220 l_0_15_220)))
 (let ((?x84798 (* 2.0 l_0_15_2)))
 (let ((?x84799 (* ?x84798 l_0_15_4)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x84796 (* ?x84795 l_0_15_185)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x84793 (* ?x84792 l_0_15_184)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x39862 (* ?x39892 l_0_15_149)))
 (let ((?x84800 (- (+ (+ (- (* (* (- 2.0) l_0_15_146) l_0_15_148) ?x39862) ?x84793) ?x84796) ?x84799)))
 (= (+ (+ (- (- (- (- ?x84800 ?x84801) ?x84803) ?x84805) ?x84808) ?x84811) ?x84814) 0.0))))))))))))))))))))
(assert
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x84884 (* ?x84883 l_0_15_67)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x84881 (* ?x84880 l_0_15_66)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x84878 (* ?x84877 l_0_15_65)))
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x84875 (* ?x84813 l_0_15_44)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x84873 (* ?x84810 l_0_15_43)))
 (let ((?x84870 (* 2.0 l_0_15_31)))
 (let ((?x84871 (* ?x84870 l_0_15_6)))
 (let ((?x84867 (* 2.0 l_0_15_30)))
 (let ((?x84868 (* ?x84867 l_0_15_5)))
 (let ((?x84807 (* 2.0 l_0_15_3)))
 (let ((?x84865 (* ?x84807 l_0_15_8)))
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x84462 (* ?x84461 l_0_15_319)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x84459 (* ?x84458 l_0_15_318)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x84456 (* ?x84455 l_0_15_317)))
 (let ((?x84859 (* 2.0 l_0_15_29)))
 (let ((?x84860 (* ?x84859 l_0_15_4)))
 (let ((?x84798 (* 2.0 l_0_15_2)))
 (let ((?x84848 (* ?x84798 l_0_15_7)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x84846 (* ?x84795 l_0_15_188)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x84844 (* ?x84792 l_0_15_187)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x84842 (* ?x39892 l_0_15_152)))
 (let ((?x84849 (- (+ (+ (- (* (* (- 2.0) l_0_15_146) l_0_15_151) ?x84842) ?x84844) ?x84846) ?x84848)))
 (let ((?x84855 (- (- ?x84849 (* (* 2.0 l_0_15_220) l_0_15_223)) (* (* 2.0 l_0_15_221) l_0_15_224))))
 (let ((?x84863 (- (- (+ (- ?x84855 (* (* 2.0 l_0_15_222) l_0_15_225)) ?x84860) ?x84456) ?x84459)))
 (let ((?x84879 (- (+ (+ (+ (+ (- (- ?x84863 ?x84462) ?x84865) ?x84868) ?x84871) ?x84873) ?x84875) ?x84878)))
 (= (- (- ?x84879 ?x84881) ?x84884) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x84967 (* ?x84813 l_0_15_48)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x84965 (* ?x84810 l_0_15_47)))
 (let ((?x84962 (* 2.0 l_0_15_258)))
 (let ((?x84963 (* ?x84962 l_0_15_283)))
 (let ((?x84959 (* 2.0 l_0_15_257)))
 (let ((?x84960 (* ?x84959 l_0_15_282)))
 (let ((?x84956 (* 2.0 l_0_15_256)))
 (let ((?x84957 (* ?x84956 l_0_15_281)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x84948 (* ?x84795 l_0_15_192)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x84946 (* ?x84792 l_0_15_191)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x84944 (* ?x39892 l_0_15_156)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x84942 (* ?x84941 l_0_15_155)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x84939 (* ?x84938 l_0_15_3)))
 (let ((?x84947 (+ (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_2) ?x84939) ?x84942) ?x84944) ?x84946)))
 (let ((?x84953 (- (- (+ ?x84947 ?x84948) (* (* 2.0 l_0_15_220) l_0_15_227)) (* (* 2.0 l_0_15_221) l_0_15_228))))
 (let ((?x84964 (+ (+ (+ (- ?x84953 (* (* 2.0 l_0_15_222) l_0_15_229)) ?x84957) ?x84960) ?x84963)))
 (= (+ (+ ?x84964 ?x84965) ?x84967) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x85037 (* ?x84813 l_0_15_53)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x85035 (* ?x84810 l_0_15_52)))
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x84462 (* ?x84461 l_0_15_319)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x84459 (* ?x84458 l_0_15_318)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x84456 (* ?x84455 l_0_15_317)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85024 (* ?x85023 l_0_15_211)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85021 (* ?x85020 l_0_15_210)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x85018 (* ?x85017 l_0_15_209)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x85015 (* ?x84795 l_0_15_197)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x85013 (* ?x84792 l_0_15_196)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x85011 (* ?x85010 l_0_15_3)))
 (let ((?x85007 (* 2.0 l_0_15_16)))
 (let ((?x85008 (* ?x85007 l_0_15_2)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85005 (* ?x85004 l_0_15_175)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85002 (* ?x85001 l_0_15_174)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x84999 (* ?x63799 l_0_15_173)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x40263 (* ?x39892 l_0_15_161)))
 (let ((?x85006 (+ (+ (+ (- (* (* (- 2.0) l_0_15_146) l_0_15_160) ?x40263) ?x84999) ?x85002) ?x85005)))
 (let ((?x85025 (- (- (- (+ (+ (- (- ?x85006 ?x85008) ?x85011) ?x85013) ?x85015) ?x85018) ?x85021) ?x85024)))
 (let ((?x85029 (- (- ?x85025 (* (* 2.0 l_0_15_220) l_0_15_232)) (* (* 2.0 l_0_15_221) l_0_15_233))))
 (let ((?x85034 (+ (+ (+ (- ?x85029 (* (* 2.0 l_0_15_222) l_0_15_234)) ?x84456) ?x84459) ?x84462)))
 (= (+ (+ ?x85034 ?x85035) ?x85037) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x85119 (* ?x84813 l_0_15_59)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x85117 (* ?x84810 l_0_15_58)))
 (let ((?x84962 (* 2.0 l_0_15_258)))
 (let ((?x84963 (* ?x84962 l_0_15_283)))
 (let ((?x84959 (* 2.0 l_0_15_257)))
 (let ((?x84960 (* ?x84959 l_0_15_282)))
 (let ((?x84956 (* 2.0 l_0_15_256)))
 (let ((?x84957 (* ?x84956 l_0_15_281)))
 (let ((?x85111 (* 2.0 l_0_15_23)))
 (let ((?x85112 (* ?x85111 l_0_15_3)))
 (let ((?x84798 (* 2.0 l_0_15_2)))
 (let ((?x85103 (* ?x84798 l_0_15_22)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x85101 (* ?x84795 l_0_15_203)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x85099 (* ?x84792 l_0_15_202)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x85097 (* ?x39892 l_0_15_167)))
 (let ((?x39862 (* ?x39892 l_0_15_149)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x85094 (* ?x84941 l_0_15_166)))
 (let ((?x85092 (* ?x84941 l_0_15_148)))
 (let ((?x85091 (+ (* (* 1.0 l_0_15_110) l_0_15_112) (* (* 1.0 l_0_15_111) l_0_15_113))))
 (let ((?x85104 (- (+ (+ (- (- (- (- ?x85091 ?x85092) ?x85094) ?x39862) ?x85097) ?x85099) ?x85101) ?x85103)))
 (let ((?x85108 (- (- ?x85104 (* (* 2.0 l_0_15_220) l_0_15_238)) (* (* 2.0 l_0_15_221) l_0_15_239))))
 (let ((?x85115 (- (- (- (- ?x85108 (* (* 2.0 l_0_15_222) l_0_15_240)) ?x85112) ?x84957) ?x84960)))
 (let ((?x85123 (- (+ (+ (- ?x85115 ?x84963) ?x85117) ?x85119) (* (* 1.0 l_0_15_74) l_0_15_76))))
 (= (- ?x85123 (* (* 1.0 l_0_15_75) l_0_15_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x85188 (* ?x84813 l_0_15_66)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x85186 (* ?x84810 l_0_15_65)))
 (let ((?x84807 (* 2.0 l_0_15_3)))
 (let ((?x85184 (* ?x84807 l_0_15_30)))
 (let ((?x84798 (* 2.0 l_0_15_2)))
 (let ((?x85176 (* ?x84798 l_0_15_29)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x85174 (* ?x84795 l_0_15_210)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x85172 (* ?x84792 l_0_15_209)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x85170 (* ?x39892 l_0_15_174)))
 (let ((?x85177 (- (+ (+ (- (* (* (- 2.0) l_0_15_146) l_0_15_173) ?x85170) ?x85172) ?x85174) ?x85176)))
 (let ((?x85181 (- (- ?x85177 (* (* 2.0 l_0_15_220) l_0_15_245)) (* (* 2.0 l_0_15_221) l_0_15_246))))
 (let ((?x85189 (+ (+ (- (- ?x85181 (* (* 2.0 l_0_15_222) l_0_15_247)) ?x85184) ?x85186) ?x85188)))
 (= ?x85189 0.0)))))))))))))))))))
(assert
 (let ((?x85243 (* l_0_15_6 l_0_15_6)))
 (let ((?x85241 (* l_0_15_5 l_0_15_5)))
 (let ((?x85239 (* l_0_15_42 l_0_15_42)))
 (let ((?x85237 (* l_0_15_41 l_0_15_41)))
 (let ((?x85235 (* l_0_15_40 l_0_15_40)))
 (let ((?x85233 (* l_0_15_4 l_0_15_4)))
 (let ((?x85231 (* l_0_15_186 l_0_15_186)))
 (let ((?x85229 (* l_0_15_185 l_0_15_185)))
 (let ((?x85227 (* l_0_15_184 l_0_15_184)))
 (let ((?x85225 (* l_0_15_150 l_0_15_150)))
 (let ((?x85226 (- (- (* (- l_0_15_148) l_0_15_148) (* l_0_15_149 l_0_15_149)) ?x85225)))
 (let ((?x85240 (+ (+ (+ (- (+ (+ (+ ?x85226 ?x85227) ?x85229) ?x85231) ?x85233) ?x85235) ?x85237) ?x85239)))
 (= (- (- ?x85240 ?x85241) ?x85243) 0.0))))))))))))))
(assert
 (let ((?x85292 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x85289 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x85286 (* ?x84883 l_0_15_45)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x85284 (* ?x84880 l_0_15_44)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x85282 (* ?x84877 l_0_15_43)))
 (let ((?x85280 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85277 (* ?x85023 l_0_15_189)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85275 (* ?x85020 l_0_15_188)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x85273 (* ?x85017 l_0_15_187)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85271 (* ?x85004 l_0_15_153)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85269 (* ?x85001 l_0_15_152)))
 (let ((?x85276 (+ (+ (- (- (* (* (- 2.0) l_0_15_148) l_0_15_151) ?x85269) ?x85271) ?x85273) ?x85275)))
 (let ((?x85293 (- (- (+ (+ (+ (- (+ ?x85276 ?x85277) ?x85280) ?x85282) ?x85284) ?x85286) ?x85289) ?x85292)))
 (= ?x85293 0.0)))))))))))))))))))))))
(assert
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x85338 (* ?x84883 l_0_15_49)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x85336 (* ?x84880 l_0_15_48)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x85334 (* ?x84877 l_0_15_47)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85332 (* ?x85023 l_0_15_193)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85330 (* ?x85020 l_0_15_192)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x85328 (* ?x85017 l_0_15_191)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85326 (* ?x85004 l_0_15_157)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85324 (* ?x85001 l_0_15_156)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x85322 (* ?x63799 l_0_15_155)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x85320 (* ?x85319 l_0_15_6)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x40855 (* ?x84938 l_0_15_5)))
 (let ((?x85325 (- (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_4) ?x40855) ?x85320) ?x85322) ?x85324)))
 (let ((?x85339 (+ (+ (+ (+ (+ (+ (- ?x85325 ?x85326) ?x85328) ?x85330) ?x85332) ?x85334) ?x85336) ?x85338)))
 (= ?x85339 0.0))))))))))))))))))))))))))
(assert
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x85361 (* ?x84883 l_0_15_54)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x85359 (* ?x84880 l_0_15_53)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x85357 (* ?x84877 l_0_15_52)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85355 (* ?x85023 l_0_15_198)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85353 (* ?x85020 l_0_15_197)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x40932 (* ?x85017 l_0_15_196)))
 (let ((?x40931 (* 2.0 l_0_15_18)))
 (let ((?x40933 (* ?x40931 l_0_15_6)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x63978 (* ?x85010 l_0_15_5)))
 (let ((?x85007 (* 2.0 l_0_15_16)))
 (let ((?x63976 (* ?x85007 l_0_15_4)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x63974 (* ?x85004 l_0_15_162)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x63971 (* ?x85001 l_0_15_161)))
 (let ((?x40875 (- (- (- (- (* (* (- 2.0) l_0_15_148) l_0_15_160) ?x63971) ?x63974) ?x63976) ?x63978)))
 (let ((?x85362 (+ (+ (+ (+ (+ (+ (- ?x40875 ?x40933) ?x40932) ?x85353) ?x85355) ?x85357) ?x85359) ?x85361)))
 (= ?x85362 0.0))))))))))))))))))))))))))
(assert
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x85435 (* ?x84883 l_0_15_60)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x85433 (* ?x84880 l_0_15_59)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x85431 (* ?x84877 l_0_15_58)))
 (let ((?x85428 (* 2.0 l_0_15_24)))
 (let ((?x85429 (* ?x85428 l_0_15_6)))
 (let ((?x85111 (* 2.0 l_0_15_23)))
 (let ((?x85426 (* ?x85111 l_0_15_5)))
 (let ((?x85423 (* 2.0 l_0_15_22)))
 (let ((?x85424 (* ?x85423 l_0_15_4)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85421 (* ?x85023 l_0_15_204)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85419 (* ?x85020 l_0_15_203)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x85417 (* ?x85017 l_0_15_202)))
 (let ((?x85225 (* l_0_15_150 l_0_15_150)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85414 (* ?x85004 l_0_15_168)))
 (let ((?x85223 (* l_0_15_149 l_0_15_149)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85411 (* ?x85001 l_0_15_167)))
 (let ((?x40735 (* l_0_15_148 l_0_15_148)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x85408 (* ?x63799 l_0_15_166)))
 (let ((?x85394 (+ (* (/ 1.0 2.0) (* l_0_15_112 l_0_15_112)) (* (/ 1.0 2.0) (* l_0_15_113 l_0_15_113)))))
 (let ((?x85412 (- (- (- (+ ?x85394 (* (/ 1.0 2.0) (* l_0_15_114 l_0_15_114))) ?x85408) ?x40735) ?x85411)))
 (let ((?x85425 (- (+ (+ (+ (- (- (- ?x85412 ?x85223) ?x85414) ?x85225) ?x85417) ?x85419) ?x85421) ?x85424)))
 (let ((?x85439 (- (+ (+ (+ (- (- ?x85425 ?x85426) ?x85429) ?x85431) ?x85433) ?x85435) (* (* (/ 1.0 2.0) l_0_15_76) l_0_15_76))))
 (let ((?x85445 (- (- ?x85439 (* (* (/ 1.0 2.0) l_0_15_77) l_0_15_77)) (* (* (/ 1.0 2.0) l_0_15_78) l_0_15_78))))
 (= ?x85445 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x84884 (* ?x84883 l_0_15_67)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x84881 (* ?x84880 l_0_15_66)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x84878 (* ?x84877 l_0_15_65)))
 (let ((?x84870 (* 2.0 l_0_15_31)))
 (let ((?x84871 (* ?x84870 l_0_15_6)))
 (let ((?x84867 (* 2.0 l_0_15_30)))
 (let ((?x84868 (* ?x84867 l_0_15_5)))
 (let ((?x84859 (* 2.0 l_0_15_29)))
 (let ((?x84860 (* ?x84859 l_0_15_4)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85024 (* ?x85023 l_0_15_211)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85021 (* ?x85020 l_0_15_210)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x85018 (* ?x85017 l_0_15_209)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85005 (* ?x85004 l_0_15_175)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85002 (* ?x85001 l_0_15_174)))
 (let ((?x85493 (+ (+ (- (- (* (* (- 2.0) l_0_15_148) l_0_15_173) ?x85002) ?x85005) ?x85018) ?x85021)))
 (let ((?x85500 (+ (+ (+ (- (- (- (+ ?x85493 ?x85024) ?x84860) ?x84868) ?x84871) ?x84878) ?x84881) ?x84884)))
 (= ?x85500 0.0))))))))))))))))))))))))))
(assert
 (let ((?x85525 (* l_0_15_9 l_0_15_9)))
 (let ((?x85523 (* l_0_15_8 l_0_15_8)))
 (let ((?x85521 (* l_0_15_7 l_0_15_7)))
 (let ((?x85519 (* l_0_15_46 l_0_15_46)))
 (let ((?x85517 (* l_0_15_45 l_0_15_45)))
 (let ((?x85515 (* l_0_15_44 l_0_15_44)))
 (let ((?x85513 (* l_0_15_43 l_0_15_43)))
 (let ((?x85511 (* l_0_15_190 l_0_15_190)))
 (let ((?x85509 (* l_0_15_189 l_0_15_189)))
 (let ((?x85507 (* l_0_15_188 l_0_15_188)))
 (let ((?x64090 (* l_0_15_187 l_0_15_187)))
 (let ((?x64092 (* l_0_15_154 l_0_15_154)))
 (let ((?x41121 (* l_0_15_153 l_0_15_153)))
 (let ((?x41135 (* l_0_15_152 l_0_15_152)))
 (let ((?x41132 (- (- (* (- l_0_15_10) l_0_15_10) (* l_0_15_151 l_0_15_151)) ?x41135)))
 (let ((?x85514 (+ (+ (+ (+ (+ (- (- ?x41132 ?x41121) ?x64092) ?x64090) ?x85507) ?x85509) ?x85511) ?x85513)))
 (= (- (- (- (+ (+ (+ ?x85514 ?x85515) ?x85517) ?x85519) ?x85521) ?x85523) ?x85525) 0.0))))))))))))))))))
(assert
 (let ((?x85589 (* 2.0 l_0_15_46)))
 (let ((?x85590 (* ?x85589 l_0_15_50)))
 (let ((?x85586 (* 2.0 l_0_15_45)))
 (let ((?x85587 (* ?x85586 l_0_15_49)))
 (let ((?x85583 (* 2.0 l_0_15_44)))
 (let ((?x85584 (* ?x85583 l_0_15_48)))
 (let ((?x85580 (* 2.0 l_0_15_43)))
 (let ((?x85581 (* ?x85580 l_0_15_47)))
 (let ((?x85577 (* 2.0 l_0_15_190)))
 (let ((?x85578 (* ?x85577 l_0_15_194)))
 (let ((?x85574 (* 2.0 l_0_15_189)))
 (let ((?x85575 (* ?x85574 l_0_15_193)))
 (let ((?x85571 (* 2.0 l_0_15_188)))
 (let ((?x85572 (* ?x85571 l_0_15_192)))
 (let ((?x85568 (* 2.0 l_0_15_187)))
 (let ((?x85569 (* ?x85568 l_0_15_191)))
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85566 (* ?x85565 l_0_15_158)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85563 (* ?x85562 l_0_15_157)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85560 (* ?x85559 l_0_15_156)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x85557 (* ?x85556 l_0_15_155)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x85554 (* ?x85319 l_0_15_9)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x85552 (* ?x84938 l_0_15_8)))
 (let ((?x85549 (* 2.0 l_0_15_11)))
 (let ((?x85550 (* ?x85549 l_0_15_7)))
 (let ((?x85558 (- (- (- (- (* (* (- 2.0) l_0_15_10) l_0_15_14) ?x85550) ?x85552) ?x85554) ?x85557)))
 (let ((?x85579 (+ (+ (+ (+ (- (- (- ?x85558 ?x85560) ?x85563) ?x85566) ?x85569) ?x85572) ?x85575) ?x85578)))
 (= (+ (+ (+ (+ ?x85579 ?x85581) ?x85584) ?x85587) ?x85590) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x85589 (* 2.0 l_0_15_46)))
 (let ((?x85660 (* ?x85589 l_0_15_55)))
 (let ((?x85586 (* 2.0 l_0_15_45)))
 (let ((?x85658 (* ?x85586 l_0_15_54)))
 (let ((?x85583 (* 2.0 l_0_15_44)))
 (let ((?x85656 (* ?x85583 l_0_15_53)))
 (let ((?x85580 (* 2.0 l_0_15_43)))
 (let ((?x85654 (* ?x85580 l_0_15_52)))
 (let ((?x85577 (* 2.0 l_0_15_190)))
 (let ((?x85652 (* ?x85577 l_0_15_199)))
 (let ((?x85574 (* 2.0 l_0_15_189)))
 (let ((?x85650 (* ?x85574 l_0_15_198)))
 (let ((?x85571 (* 2.0 l_0_15_188)))
 (let ((?x85648 (* ?x85571 l_0_15_197)))
 (let ((?x85568 (* 2.0 l_0_15_187)))
 (let ((?x85646 (* ?x85568 l_0_15_196)))
 (let ((?x40931 (* 2.0 l_0_15_18)))
 (let ((?x85644 (* ?x40931 l_0_15_9)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x85642 (* ?x85010 l_0_15_8)))
 (let ((?x85007 (* 2.0 l_0_15_16)))
 (let ((?x85640 (* ?x85007 l_0_15_7)))
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85627 (* ?x85565 l_0_15_163)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85623 (* ?x85562 l_0_15_162)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85619 (* ?x85559 l_0_15_161)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x41354 (* ?x85556 l_0_15_160)))
 (let ((?x85628 (- (- (- (- (* (* (- 2.0) l_0_15_10) l_0_15_19) ?x41354) ?x85619) ?x85623) ?x85627)))
 (let ((?x85653 (+ (+ (+ (+ (- (- (- ?x85628 ?x85640) ?x85642) ?x85644) ?x85646) ?x85648) ?x85650) ?x85652)))
 (= (+ (+ (+ (+ ?x85653 ?x85654) ?x85656) ?x85658) ?x85660) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x85589 (* 2.0 l_0_15_46)))
 (let ((?x85735 (* ?x85589 l_0_15_61)))
 (let ((?x85586 (* 2.0 l_0_15_45)))
 (let ((?x85733 (* ?x85586 l_0_15_60)))
 (let ((?x85583 (* 2.0 l_0_15_44)))
 (let ((?x85731 (* ?x85583 l_0_15_59)))
 (let ((?x85580 (* 2.0 l_0_15_43)))
 (let ((?x85729 (* ?x85580 l_0_15_58)))
 (let ((?x85428 (* 2.0 l_0_15_24)))
 (let ((?x85727 (* ?x85428 l_0_15_9)))
 (let ((?x85111 (* 2.0 l_0_15_23)))
 (let ((?x85725 (* ?x85111 l_0_15_8)))
 (let ((?x85423 (* 2.0 l_0_15_22)))
 (let ((?x85723 (* ?x85423 l_0_15_7)))
 (let ((?x85577 (* 2.0 l_0_15_190)))
 (let ((?x85721 (* ?x85577 l_0_15_205)))
 (let ((?x85574 (* 2.0 l_0_15_189)))
 (let ((?x85719 (* ?x85574 l_0_15_204)))
 (let ((?x85571 (* 2.0 l_0_15_188)))
 (let ((?x85717 (* ?x85571 l_0_15_203)))
 (let ((?x85568 (* 2.0 l_0_15_187)))
 (let ((?x85715 (* ?x85568 l_0_15_202)))
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85713 (* ?x85565 l_0_15_169)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85711 (* ?x85562 l_0_15_168)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85709 (* ?x85559 l_0_15_167)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x85707 (* ?x85556 l_0_15_166)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85271 (* ?x85004 l_0_15_153)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85269 (* ?x85001 l_0_15_152)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x85703 (* ?x63799 l_0_15_151)))
 (let ((?x85696 (+ (* (* (- 2.0) l_0_15_10) l_0_15_25) (* (* 1.0 l_0_15_112) l_0_15_115))))
 (let ((?x85702 (+ (+ ?x85696 (* (* 1.0 l_0_15_113) l_0_15_116)) (* (* 1.0 l_0_15_114) l_0_15_117))))
 (let ((?x85714 (- (- (- (- (- (- (- ?x85702 ?x85703) ?x85269) ?x85271) ?x85707) ?x85709) ?x85711) ?x85713)))
 (let ((?x85728 (- (- (- (+ (+ (+ (+ ?x85714 ?x85715) ?x85717) ?x85719) ?x85721) ?x85723) ?x85725) ?x85727)))
 (let ((?x85739 (- (+ (+ (+ (+ ?x85728 ?x85729) ?x85731) ?x85733) ?x85735) (* (* 1.0 l_0_15_76) l_0_15_79))))
 (let ((?x85745 (- (- ?x85739 (* (* 1.0 l_0_15_77) l_0_15_80)) (* (* 1.0 l_0_15_78) l_0_15_81))))
 (= ?x85745 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x85589 (* 2.0 l_0_15_46)))
 (let ((?x85839 (* ?x85589 l_0_15_68)))
 (let ((?x85586 (* 2.0 l_0_15_45)))
 (let ((?x85837 (* ?x85586 l_0_15_67)))
 (let ((?x85583 (* 2.0 l_0_15_44)))
 (let ((?x85835 (* ?x85583 l_0_15_66)))
 (let ((?x85580 (* 2.0 l_0_15_43)))
 (let ((?x85833 (* ?x85580 l_0_15_65)))
 (let ((?x84870 (* 2.0 l_0_15_31)))
 (let ((?x85831 (* ?x84870 l_0_15_9)))
 (let ((?x84867 (* 2.0 l_0_15_30)))
 (let ((?x85829 (* ?x84867 l_0_15_8)))
 (let ((?x84859 (* 2.0 l_0_15_29)))
 (let ((?x85827 (* ?x84859 l_0_15_7)))
 (let ((?x85577 (* 2.0 l_0_15_190)))
 (let ((?x85825 (* ?x85577 l_0_15_212)))
 (let ((?x85574 (* 2.0 l_0_15_189)))
 (let ((?x85823 (* ?x85574 l_0_15_211)))
 (let ((?x85571 (* 2.0 l_0_15_188)))
 (let ((?x85821 (* ?x85571 l_0_15_210)))
 (let ((?x85568 (* 2.0 l_0_15_187)))
 (let ((?x85819 (* ?x85568 l_0_15_209)))
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85817 (* ?x85565 l_0_15_176)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85815 (* ?x85562 l_0_15_175)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85813 (* ?x85559 l_0_15_174)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x41584 (* ?x85556 l_0_15_173)))
 (let ((?x85818 (- (- (- (- (* (* (- 2.0) l_0_15_10) l_0_15_32) ?x41584) ?x85813) ?x85815) ?x85817)))
 (let ((?x85832 (- (- (- (+ (+ (+ (+ ?x85818 ?x85819) ?x85821) ?x85823) ?x85825) ?x85827) ?x85829) ?x85831)))
 (= (+ (+ (+ (+ ?x85832 ?x85833) ?x85835) ?x85837) ?x85839) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x85928 (* l_0_15_51 l_0_15_51)))
 (let ((?x85926 (* l_0_15_50 l_0_15_50)))
 (let ((?x85924 (* l_0_15_49 l_0_15_49)))
 (let ((?x85922 (* l_0_15_48 l_0_15_48)))
 (let ((?x85920 (* l_0_15_47 l_0_15_47)))
 (let ((?x85918 (* l_0_15_195 l_0_15_195)))
 (let ((?x85916 (* l_0_15_194 l_0_15_194)))
 (let ((?x85914 (* l_0_15_193 l_0_15_193)))
 (let ((?x85912 (* l_0_15_192 l_0_15_192)))
 (let ((?x85910 (* l_0_15_191 l_0_15_191)))
 (let ((?x85908 (* l_0_15_159 l_0_15_159)))
 (let ((?x85906 (* l_0_15_158 l_0_15_158)))
 (let ((?x85904 (* l_0_15_157 l_0_15_157)))
 (let ((?x85902 (* l_0_15_156 l_0_15_156)))
 (let ((?x85900 (* l_0_15_155 l_0_15_155)))
 (let ((?x85898 (* l_0_15_15 l_0_15_15)))
 (let ((?x85896 (* l_0_15_14 l_0_15_14)))
 (let ((?x85883 (* l_0_15_13 l_0_15_13)))
 (let ((?x85895 (- (- (* (- l_0_15_11) l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x85883)))
 (let ((?x85909 (- (- (- (- (- (- (- ?x85895 ?x85896) ?x85898) ?x85900) ?x85902) ?x85904) ?x85906) ?x85908)))
 (let ((?x85923 (+ (+ (+ (+ (+ (+ (+ ?x85909 ?x85910) ?x85912) ?x85914) ?x85916) ?x85918) ?x85920) ?x85922)))
 (= (+ (+ (+ ?x85923 ?x85924) ?x85926) ?x85928) 0.0)))))))))))))))))))))))
(assert
 (let ((?x86009 (* 2.0 l_0_15_51)))
 (let ((?x86010 (* ?x86009 l_0_15_56)))
 (let ((?x86006 (* 2.0 l_0_15_50)))
 (let ((?x86007 (* ?x86006 l_0_15_55)))
 (let ((?x86003 (* 2.0 l_0_15_49)))
 (let ((?x86004 (* ?x86003 l_0_15_54)))
 (let ((?x86000 (* 2.0 l_0_15_48)))
 (let ((?x86001 (* ?x86000 l_0_15_53)))
 (let ((?x85997 (* 2.0 l_0_15_47)))
 (let ((?x85998 (* ?x85997 l_0_15_52)))
 (let ((?x85994 (* 2.0 l_0_15_195)))
 (let ((?x85995 (* ?x85994 l_0_15_200)))
 (let ((?x85991 (* 2.0 l_0_15_194)))
 (let ((?x85992 (* ?x85991 l_0_15_199)))
 (let ((?x85988 (* 2.0 l_0_15_193)))
 (let ((?x85989 (* ?x85988 l_0_15_198)))
 (let ((?x85985 (* 2.0 l_0_15_192)))
 (let ((?x85986 (* ?x85985 l_0_15_197)))
 (let ((?x85982 (* 2.0 l_0_15_191)))
 (let ((?x85983 (* ?x85982 l_0_15_196)))
 (let ((?x85979 (* 2.0 l_0_15_159)))
 (let ((?x85980 (* ?x85979 l_0_15_164)))
 (let ((?x85976 (* 2.0 l_0_15_158)))
 (let ((?x85977 (* ?x85976 l_0_15_163)))
 (let ((?x85973 (* 2.0 l_0_15_157)))
 (let ((?x85974 (* ?x85973 l_0_15_162)))
 (let ((?x85970 (* 2.0 l_0_15_156)))
 (let ((?x85971 (* ?x85970 l_0_15_161)))
 (let ((?x85967 (* 2.0 l_0_15_155)))
 (let ((?x85968 (* ?x85967 l_0_15_160)))
 (let ((?x85964 (* 2.0 l_0_15_15)))
 (let ((?x85965 (* ?x85964 l_0_15_20)))
 (let ((?x85961 (* 2.0 l_0_15_14)))
 (let ((?x85962 (* ?x85961 l_0_15_19)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x85959 (* ?x85319 l_0_15_18)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x85957 (* ?x84938 l_0_15_17)))
 (let ((?x85966 (- (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_16) ?x85957) ?x85959) ?x85962) ?x85965)))
 (let ((?x85987 (+ (+ (- (- (- (- (- ?x85966 ?x85968) ?x85971) ?x85974) ?x85977) ?x85980) ?x85983) ?x85986)))
 (let ((?x86008 (+ (+ (+ (+ (+ (+ (+ ?x85987 ?x85989) ?x85992) ?x85995) ?x85998) ?x86001) ?x86004) ?x86007)))
 (= (+ ?x86008 ?x86010) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86009 (* 2.0 l_0_15_51)))
 (let ((?x86114 (* ?x86009 l_0_15_62)))
 (let ((?x86006 (* 2.0 l_0_15_50)))
 (let ((?x86112 (* ?x86006 l_0_15_61)))
 (let ((?x86003 (* 2.0 l_0_15_49)))
 (let ((?x86110 (* ?x86003 l_0_15_60)))
 (let ((?x86000 (* 2.0 l_0_15_48)))
 (let ((?x86108 (* ?x86000 l_0_15_59)))
 (let ((?x85997 (* 2.0 l_0_15_47)))
 (let ((?x86106 (* ?x85997 l_0_15_58)))
 (let ((?x85994 (* 2.0 l_0_15_195)))
 (let ((?x86104 (* ?x85994 l_0_15_206)))
 (let ((?x85991 (* 2.0 l_0_15_194)))
 (let ((?x86102 (* ?x85991 l_0_15_205)))
 (let ((?x85988 (* 2.0 l_0_15_193)))
 (let ((?x86100 (* ?x85988 l_0_15_204)))
 (let ((?x85985 (* 2.0 l_0_15_192)))
 (let ((?x86098 (* ?x85985 l_0_15_203)))
 (let ((?x85982 (* 2.0 l_0_15_191)))
 (let ((?x86096 (* ?x85982 l_0_15_202)))
 (let ((?x85979 (* 2.0 l_0_15_159)))
 (let ((?x86094 (* ?x85979 l_0_15_170)))
 (let ((?x85976 (* 2.0 l_0_15_158)))
 (let ((?x86092 (* ?x85976 l_0_15_169)))
 (let ((?x85973 (* 2.0 l_0_15_157)))
 (let ((?x86090 (* ?x85973 l_0_15_168)))
 (let ((?x85970 (* 2.0 l_0_15_156)))
 (let ((?x86088 (* ?x85970 l_0_15_167)))
 (let ((?x85967 (* 2.0 l_0_15_155)))
 (let ((?x86086 (* ?x85967 l_0_15_166)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85326 (* ?x85004 l_0_15_157)))
 (let ((?x85964 (* 2.0 l_0_15_15)))
 (let ((?x86083 (* ?x85964 l_0_15_26)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85324 (* ?x85001 l_0_15_156)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x85322 (* ?x63799 l_0_15_155)))
 (let ((?x85961 (* 2.0 l_0_15_14)))
 (let ((?x86079 (* ?x85961 l_0_15_25)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x86064 (* ?x85319 l_0_15_24)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x86060 (* ?x84938 l_0_15_23)))
 (let ((?x86050 (+ (* (* (- 2.0) l_0_15_11) l_0_15_22) (* (* 1.0 l_0_15_112) l_0_15_119))))
 (let ((?x86058 (+ (+ ?x86050 (* (* 1.0 l_0_15_113) l_0_15_120)) (* (* 1.0 l_0_15_114) l_0_15_121))))
 (let ((?x86085 (- (- (- (- (- (- (- ?x86058 ?x86060) ?x86064) ?x86079) ?x85322) ?x85324) ?x86083) ?x85326)))
 (let ((?x86099 (+ (+ (- (- (- (- (- ?x86085 ?x86086) ?x86088) ?x86090) ?x86092) ?x86094) ?x86096) ?x86098)))
 (let ((?x86113 (+ (+ (+ (+ (+ (+ (+ ?x86099 ?x86100) ?x86102) ?x86104) ?x86106) ?x86108) ?x86110) ?x86112)))
 (let ((?x86119 (- (- (+ ?x86113 ?x86114) (* (* 1.0 l_0_15_76) l_0_15_83)) (* (* 1.0 l_0_15_77) l_0_15_84))))
 (= (- ?x86119 (* (* 1.0 l_0_15_78) l_0_15_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86009 (* 2.0 l_0_15_51)))
 (let ((?x86221 (* ?x86009 l_0_15_69)))
 (let ((?x86006 (* 2.0 l_0_15_50)))
 (let ((?x86219 (* ?x86006 l_0_15_68)))
 (let ((?x86003 (* 2.0 l_0_15_49)))
 (let ((?x86217 (* ?x86003 l_0_15_67)))
 (let ((?x86000 (* 2.0 l_0_15_48)))
 (let ((?x86215 (* ?x86000 l_0_15_66)))
 (let ((?x85997 (* 2.0 l_0_15_47)))
 (let ((?x86213 (* ?x85997 l_0_15_65)))
 (let ((?x85994 (* 2.0 l_0_15_195)))
 (let ((?x86211 (* ?x85994 l_0_15_213)))
 (let ((?x85991 (* 2.0 l_0_15_194)))
 (let ((?x86209 (* ?x85991 l_0_15_212)))
 (let ((?x85988 (* 2.0 l_0_15_193)))
 (let ((?x86207 (* ?x85988 l_0_15_211)))
 (let ((?x85985 (* 2.0 l_0_15_192)))
 (let ((?x86205 (* ?x85985 l_0_15_210)))
 (let ((?x85982 (* 2.0 l_0_15_191)))
 (let ((?x86203 (* ?x85982 l_0_15_209)))
 (let ((?x85979 (* 2.0 l_0_15_159)))
 (let ((?x86201 (* ?x85979 l_0_15_177)))
 (let ((?x85976 (* 2.0 l_0_15_158)))
 (let ((?x86199 (* ?x85976 l_0_15_176)))
 (let ((?x85973 (* 2.0 l_0_15_157)))
 (let ((?x86197 (* ?x85973 l_0_15_175)))
 (let ((?x85970 (* 2.0 l_0_15_156)))
 (let ((?x86195 (* ?x85970 l_0_15_174)))
 (let ((?x85967 (* 2.0 l_0_15_155)))
 (let ((?x86193 (* ?x85967 l_0_15_173)))
 (let ((?x85964 (* 2.0 l_0_15_15)))
 (let ((?x86191 (* ?x85964 l_0_15_33)))
 (let ((?x85961 (* 2.0 l_0_15_14)))
 (let ((?x86189 (* ?x85961 l_0_15_32)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x86187 (* ?x85319 l_0_15_31)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x86185 (* ?x84938 l_0_15_30)))
 (let ((?x86192 (- (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_29) ?x86185) ?x86187) ?x86189) ?x86191)))
 (let ((?x86206 (+ (+ (- (- (- (- (- ?x86192 ?x86193) ?x86195) ?x86197) ?x86199) ?x86201) ?x86203) ?x86205)))
 (let ((?x86220 (+ (+ (+ (+ (+ (+ (+ ?x86206 ?x86207) ?x86209) ?x86211) ?x86213) ?x86215) ?x86217) ?x86219)))
 (= (+ ?x86220 ?x86221) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86324 (* l_0_15_57 l_0_15_57)))
 (let ((?x86322 (* l_0_15_56 l_0_15_56)))
 (let ((?x86320 (* l_0_15_55 l_0_15_55)))
 (let ((?x86318 (* l_0_15_54 l_0_15_54)))
 (let ((?x86316 (* l_0_15_53 l_0_15_53)))
 (let ((?x86314 (* l_0_15_52 l_0_15_52)))
 (let ((?x86312 (* l_0_15_21 l_0_15_21)))
 (let ((?x86310 (* l_0_15_201 l_0_15_201)))
 (let ((?x86308 (* l_0_15_200 l_0_15_200)))
 (let ((?x86306 (* l_0_15_20 l_0_15_20)))
 (let ((?x86304 (* l_0_15_199 l_0_15_199)))
 (let ((?x86302 (* l_0_15_198 l_0_15_198)))
 (let ((?x86300 (* l_0_15_197 l_0_15_197)))
 (let ((?x86298 (* l_0_15_196 l_0_15_196)))
 (let ((?x86296 (* l_0_15_19 l_0_15_19)))
 (let ((?x86294 (* l_0_15_18 l_0_15_18)))
 (let ((?x86292 (* l_0_15_17 l_0_15_17)))
 (let ((?x86290 (* l_0_15_165 l_0_15_165)))
 (let ((?x86275 (* l_0_15_164 l_0_15_164)))
 (let ((?x86272 (* l_0_15_163 l_0_15_163)))
 (let ((?x86268 (* l_0_15_162 l_0_15_162)))
 (let ((?x86264 (* l_0_15_161 l_0_15_161)))
 (let ((?x86266 (- (- (* (- l_0_15_16) l_0_15_16) (* l_0_15_160 l_0_15_160)) ?x86264)))
 (let ((?x86297 (- (- (- (- (- (- (- ?x86266 ?x86268) ?x86272) ?x86275) ?x86290) ?x86292) ?x86294) ?x86296)))
 (let ((?x86311 (+ (+ (- (+ (+ (+ (+ ?x86297 ?x86298) ?x86300) ?x86302) ?x86304) ?x86306) ?x86308) ?x86310)))
 (let ((?x86325 (+ (+ (+ (+ (+ (+ (- ?x86311 ?x86312) ?x86314) ?x86316) ?x86318) ?x86320) ?x86322) ?x86324)))
 (= ?x86325 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x86446 (* 2.0 l_0_15_57)))
 (let ((?x86447 (* ?x86446 l_0_15_63)))
 (let ((?x86443 (* 2.0 l_0_15_56)))
 (let ((?x86444 (* ?x86443 l_0_15_62)))
 (let ((?x86440 (* 2.0 l_0_15_55)))
 (let ((?x86441 (* ?x86440 l_0_15_61)))
 (let ((?x86437 (* 2.0 l_0_15_54)))
 (let ((?x86438 (* ?x86437 l_0_15_60)))
 (let ((?x86434 (* 2.0 l_0_15_53)))
 (let ((?x86435 (* ?x86434 l_0_15_59)))
 (let ((?x86431 (* 2.0 l_0_15_52)))
 (let ((?x86432 (* ?x86431 l_0_15_58)))
 (let ((?x86428 (* 2.0 l_0_15_21)))
 (let ((?x86429 (* ?x86428 l_0_15_27)))
 (let ((?x86425 (* 2.0 l_0_15_201)))
 (let ((?x86426 (* ?x86425 l_0_15_207)))
 (let ((?x86422 (* 2.0 l_0_15_200)))
 (let ((?x86423 (* ?x86422 l_0_15_206)))
 (let ((?x86419 (* 2.0 l_0_15_20)))
 (let ((?x86420 (* ?x86419 l_0_15_26)))
 (let ((?x86416 (* 2.0 l_0_15_199)))
 (let ((?x86417 (* ?x86416 l_0_15_205)))
 (let ((?x86413 (* 2.0 l_0_15_198)))
 (let ((?x86414 (* ?x86413 l_0_15_204)))
 (let ((?x86410 (* 2.0 l_0_15_197)))
 (let ((?x86411 (* ?x86410 l_0_15_203)))
 (let ((?x86407 (* 2.0 l_0_15_196)))
 (let ((?x86408 (* ?x86407 l_0_15_202)))
 (let ((?x86404 (* 2.0 l_0_15_19)))
 (let ((?x86405 (* ?x86404 l_0_15_25)))
 (let ((?x40931 (* 2.0 l_0_15_18)))
 (let ((?x86402 (* ?x40931 l_0_15_24)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x86400 (* ?x85010 l_0_15_23)))
 (let ((?x86397 (* 2.0 l_0_15_165)))
 (let ((?x86398 (* ?x86397 l_0_15_171)))
 (let ((?x86394 (* 2.0 l_0_15_164)))
 (let ((?x86395 (* ?x86394 l_0_15_170)))
 (let ((?x86391 (* 2.0 l_0_15_163)))
 (let ((?x86392 (* ?x86391 l_0_15_169)))
 (let ((?x86388 (* 2.0 l_0_15_162)))
 (let ((?x86389 (* ?x86388 l_0_15_168)))
 (let ((?x86385 (* 2.0 l_0_15_161)))
 (let ((?x86386 (* ?x86385 l_0_15_167)))
 (let ((?x86382 (* 2.0 l_0_15_160)))
 (let ((?x86383 (* ?x86382 l_0_15_166)))
 (let ((?x85007 (* 2.0 l_0_15_16)))
 (let ((?x86380 (* ?x85007 l_0_15_22)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x63974 (* ?x85004 l_0_15_162)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x63971 (* ?x85001 l_0_15_161)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x86376 (* ?x63799 l_0_15_160)))
 (let ((?x86373 (+ (* (* 1.0 l_0_15_112) l_0_15_124) (* (* 1.0 l_0_15_113) l_0_15_125))))
 (let ((?x86379 (- (- (- (+ ?x86373 (* (* 1.0 l_0_15_114) l_0_15_126)) ?x86376) ?x63971) ?x63974)))
 (let ((?x86399 (- (- (- (- (- (- (- ?x86379 ?x86380) ?x86383) ?x86386) ?x86389) ?x86392) ?x86395) ?x86398)))
 (let ((?x86418 (+ (+ (+ (+ (- (- (- ?x86399 ?x86400) ?x86402) ?x86405) ?x86408) ?x86411) ?x86414) ?x86417)))
 (let ((?x86439 (+ (+ (+ (- (+ (+ (- ?x86418 ?x86420) ?x86423) ?x86426) ?x86429) ?x86432) ?x86435) ?x86438)))
 (let ((?x86450 (- (+ (+ (+ ?x86439 ?x86441) ?x86444) ?x86447) (* (* 1.0 l_0_15_76) l_0_15_88))))
 (let ((?x86454 (- (- ?x86450 (* (* 1.0 l_0_15_77) l_0_15_89)) (* (* 1.0 l_0_15_78) l_0_15_90))))
 (= ?x86454 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86446 (* 2.0 l_0_15_57)))
 (let ((?x86601 (* ?x86446 l_0_15_70)))
 (let ((?x86443 (* 2.0 l_0_15_56)))
 (let ((?x86599 (* ?x86443 l_0_15_69)))
 (let ((?x86440 (* 2.0 l_0_15_55)))
 (let ((?x86597 (* ?x86440 l_0_15_68)))
 (let ((?x86437 (* 2.0 l_0_15_54)))
 (let ((?x86595 (* ?x86437 l_0_15_67)))
 (let ((?x86434 (* 2.0 l_0_15_53)))
 (let ((?x86593 (* ?x86434 l_0_15_66)))
 (let ((?x86431 (* 2.0 l_0_15_52)))
 (let ((?x86591 (* ?x86431 l_0_15_65)))
 (let ((?x86428 (* 2.0 l_0_15_21)))
 (let ((?x86589 (* ?x86428 l_0_15_34)))
 (let ((?x86425 (* 2.0 l_0_15_201)))
 (let ((?x86587 (* ?x86425 l_0_15_214)))
 (let ((?x86422 (* 2.0 l_0_15_200)))
 (let ((?x86585 (* ?x86422 l_0_15_213)))
 (let ((?x86419 (* 2.0 l_0_15_20)))
 (let ((?x86583 (* ?x86419 l_0_15_33)))
 (let ((?x86416 (* 2.0 l_0_15_199)))
 (let ((?x86581 (* ?x86416 l_0_15_212)))
 (let ((?x86413 (* 2.0 l_0_15_198)))
 (let ((?x86579 (* ?x86413 l_0_15_211)))
 (let ((?x86410 (* 2.0 l_0_15_197)))
 (let ((?x86577 (* ?x86410 l_0_15_210)))
 (let ((?x86407 (* 2.0 l_0_15_196)))
 (let ((?x86575 (* ?x86407 l_0_15_209)))
 (let ((?x86404 (* 2.0 l_0_15_19)))
 (let ((?x86573 (* ?x86404 l_0_15_32)))
 (let ((?x40931 (* 2.0 l_0_15_18)))
 (let ((?x86571 (* ?x40931 l_0_15_31)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x86569 (* ?x85010 l_0_15_30)))
 (let ((?x86397 (* 2.0 l_0_15_165)))
 (let ((?x86567 (* ?x86397 l_0_15_178)))
 (let ((?x86394 (* 2.0 l_0_15_164)))
 (let ((?x86565 (* ?x86394 l_0_15_177)))
 (let ((?x86391 (* 2.0 l_0_15_163)))
 (let ((?x86563 (* ?x86391 l_0_15_176)))
 (let ((?x86388 (* 2.0 l_0_15_162)))
 (let ((?x86561 (* ?x86388 l_0_15_175)))
 (let ((?x86385 (* 2.0 l_0_15_161)))
 (let ((?x86559 (* ?x86385 l_0_15_174)))
 (let ((?x86382 (* 2.0 l_0_15_160)))
 (let ((?x86557 (* ?x86382 l_0_15_173)))
 (let ((?x86564 (- (- (- (- (* (* (- 2.0) l_0_15_16) l_0_15_29) ?x86557) ?x86559) ?x86561) ?x86563)))
 (let ((?x86578 (+ (+ (- (- (- (- (- ?x86564 ?x86565) ?x86567) ?x86569) ?x86571) ?x86573) ?x86575) ?x86577)))
 (let ((?x86592 (+ (- (+ (+ (- (+ (+ ?x86578 ?x86579) ?x86581) ?x86583) ?x86585) ?x86587) ?x86589) ?x86591)))
 (= (+ (+ (+ (+ (+ ?x86592 ?x86593) ?x86595) ?x86597) ?x86599) ?x86601) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86720 (* l_0_15_64 l_0_15_64)))
 (let ((?x86718 (* l_0_15_63 l_0_15_63)))
 (let ((?x86716 (* l_0_15_62 l_0_15_62)))
 (let ((?x86714 (* l_0_15_61 l_0_15_61)))
 (let ((?x86712 (* l_0_15_60 l_0_15_60)))
 (let ((?x86710 (* l_0_15_59 l_0_15_59)))
 (let ((?x86708 (* l_0_15_58 l_0_15_58)))
 (let ((?x86706 (* l_0_15_28 l_0_15_28)))
 (let ((?x86704 (* l_0_15_27 l_0_15_27)))
 (let ((?x86702 (* l_0_15_26 l_0_15_26)))
 (let ((?x86700 (* l_0_15_25 l_0_15_25)))
 (let ((?x86698 (* l_0_15_24 l_0_15_24)))
 (let ((?x86696 (* l_0_15_23 l_0_15_23)))
 (let ((?x86694 (* l_0_15_22 l_0_15_22)))
 (let ((?x86692 (* l_0_15_208 l_0_15_208)))
 (let ((?x86690 (* l_0_15_207 l_0_15_207)))
 (let ((?x86688 (* l_0_15_206 l_0_15_206)))
 (let ((?x86686 (* l_0_15_205 l_0_15_205)))
 (let ((?x86684 (* l_0_15_204 l_0_15_204)))
 (let ((?x86682 (* l_0_15_203 l_0_15_203)))
 (let ((?x86680 (* l_0_15_202 l_0_15_202)))
 (let ((?x86678 (* l_0_15_172 l_0_15_172)))
 (let ((?x86676 (* l_0_15_171 l_0_15_171)))
 (let ((?x86674 (* l_0_15_170 l_0_15_170)))
 (let ((?x86672 (* l_0_15_169 l_0_15_169)))
 (let ((?x86670 (* l_0_15_168 l_0_15_168)))
 (let ((?x86668 (* l_0_15_167 l_0_15_167)))
 (let ((?x86666 (* l_0_15_166 l_0_15_166)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85414 (* ?x85004 l_0_15_168)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85411 (* ?x85001 l_0_15_167)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x85408 (* ?x63799 l_0_15_166)))
 (let ((?x86660 (+ (* (* 1.0 l_0_15_112) l_0_15_130) (* (* 1.0 l_0_15_113) l_0_15_131))))
 (let ((?x86665 (- (- (- (+ ?x86660 (* (* 1.0 l_0_15_114) l_0_15_132)) ?x85408) ?x85411) ?x85414)))
 (let ((?x86679 (- (- (- (- (- (- (- ?x86665 ?x86666) ?x86668) ?x86670) ?x86672) ?x86674) ?x86676) ?x86678)))
 (let ((?x86693 (+ (+ (+ (+ (+ (+ (+ ?x86679 ?x86680) ?x86682) ?x86684) ?x86686) ?x86688) ?x86690) ?x86692)))
 (let ((?x86707 (- (- (- (- (- (- (- ?x86693 ?x86694) ?x86696) ?x86698) ?x86700) ?x86702) ?x86704) ?x86706)))
 (let ((?x86721 (+ (+ (+ (+ (+ (+ (+ ?x86707 ?x86708) ?x86710) ?x86712) ?x86714) ?x86716) ?x86718) ?x86720)))
 (let ((?x86725 (- (- ?x86721 (* (* 1.0 l_0_15_76) l_0_15_94)) (* (* 1.0 l_0_15_77) l_0_15_95))))
 (= (- ?x86725 (* (* 1.0 l_0_15_78) l_0_15_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86877 (* (* 2.0 l_0_15_64) l_0_15_71)))
 (let ((?x86874 (* (* 2.0 l_0_15_63) l_0_15_70)))
 (let ((?x86871 (* (* 2.0 l_0_15_62) l_0_15_69)))
 (let ((?x86868 (* (* 2.0 l_0_15_61) l_0_15_68)))
 (let ((?x86865 (* (* 2.0 l_0_15_60) l_0_15_67)))
 (let ((?x86862 (* (* 2.0 l_0_15_59) l_0_15_66)))
 (let ((?x86859 (* (* 2.0 l_0_15_58) l_0_15_65)))
 (let ((?x86856 (* (* 2.0 l_0_15_28) l_0_15_35)))
 (let ((?x86853 (* (* 2.0 l_0_15_27) l_0_15_34)))
 (let ((?x86850 (* (* 2.0 l_0_15_26) l_0_15_33)))
 (let ((?x86847 (* (* 2.0 l_0_15_25) l_0_15_32)))
 (let ((?x85428 (* 2.0 l_0_15_24)))
 (let ((?x86844 (* ?x85428 l_0_15_31)))
 (let ((?x85111 (* 2.0 l_0_15_23)))
 (let ((?x86842 (* ?x85111 l_0_15_30)))
 (let ((?x85423 (* 2.0 l_0_15_22)))
 (let ((?x86840 (* ?x85423 l_0_15_29)))
 (let ((?x86838 (* (* 2.0 l_0_15_208) l_0_15_215)))
 (let ((?x86835 (* (* 2.0 l_0_15_207) l_0_15_214)))
 (let ((?x86832 (* (* 2.0 l_0_15_206) l_0_15_213)))
 (let ((?x86829 (* (* 2.0 l_0_15_205) l_0_15_212)))
 (let ((?x86826 (* (* 2.0 l_0_15_204) l_0_15_211)))
 (let ((?x86823 (* (* 2.0 l_0_15_203) l_0_15_210)))
 (let ((?x86820 (* (* 2.0 l_0_15_202) l_0_15_209)))
 (let ((?x86817 (* (* 2.0 l_0_15_172) l_0_15_179)))
 (let ((?x86814 (* (* 2.0 l_0_15_171) l_0_15_178)))
 (let ((?x86811 (* (* 2.0 l_0_15_170) l_0_15_177)))
 (let ((?x86808 (* (* 2.0 l_0_15_169) l_0_15_176)))
 (let ((?x86805 (* (* 2.0 l_0_15_168) l_0_15_175)))
 (let ((?x86802 (* (* 2.0 l_0_15_167) l_0_15_174)))
 (let ((?x86799 (* (* 2.0 l_0_15_166) l_0_15_173)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85005 (* ?x85004 l_0_15_175)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85002 (* ?x85001 l_0_15_174)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x84999 (* ?x63799 l_0_15_173)))
 (let ((?x86785 (- (* (* (- 1.0) l_0_15_101) l_0_15_76) (* (* 1.0 l_0_15_102) l_0_15_77))))
 (let ((?x86790 (+ (- ?x86785 (* (* 1.0 l_0_15_103) l_0_15_78)) (* (* 1.0 l_0_15_112) l_0_15_137))))
 (let ((?x86794 (+ (+ ?x86790 (* (* 1.0 l_0_15_113) l_0_15_138)) (* (* 1.0 l_0_15_114) l_0_15_139))))
 (let ((?x86809 (- (- (- (- (- (- (- ?x86794 ?x84999) ?x85002) ?x85005) ?x86799) ?x86802) ?x86805) ?x86808)))
 (let ((?x86830 (+ (+ (+ (+ (- (- (- ?x86809 ?x86811) ?x86814) ?x86817) ?x86820) ?x86823) ?x86826) ?x86829)))
 (let ((?x86848 (- (- (- (- (+ (+ (+ ?x86830 ?x86832) ?x86835) ?x86838) ?x86840) ?x86842) ?x86844) ?x86847)))
 (let ((?x86869 (+ (+ (+ (+ (- (- (- ?x86848 ?x86850) ?x86853) ?x86856) ?x86859) ?x86862) ?x86865) ?x86868)))
 (= (+ (+ (+ ?x86869 ?x86871) ?x86874) ?x86877) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x87038 (* l_0_15_72 l_0_15_72)))
 (let ((?x87036 (* l_0_15_71 l_0_15_71)))
 (let ((?x87034 (* l_0_15_70 l_0_15_70)))
 (let ((?x87032 (* l_0_15_69 l_0_15_69)))
 (let ((?x87030 (* l_0_15_68 l_0_15_68)))
 (let ((?x87028 (* l_0_15_67 l_0_15_67)))
 (let ((?x87026 (* l_0_15_66 l_0_15_66)))
 (let ((?x87024 (* l_0_15_65 l_0_15_65)))
 (let ((?x87022 (* l_0_15_36 l_0_15_36)))
 (let ((?x87020 (* l_0_15_35 l_0_15_35)))
 (let ((?x87018 (* l_0_15_34 l_0_15_34)))
 (let ((?x87016 (* l_0_15_33 l_0_15_33)))
 (let ((?x87014 (* l_0_15_32 l_0_15_32)))
 (let ((?x87012 (* l_0_15_31 l_0_15_31)))
 (let ((?x87010 (* l_0_15_30 l_0_15_30)))
 (let ((?x87008 (* l_0_15_29 l_0_15_29)))
 (let ((?x87006 (* l_0_15_216 l_0_15_216)))
 (let ((?x87004 (* l_0_15_215 l_0_15_215)))
 (let ((?x87002 (* l_0_15_214 l_0_15_214)))
 (let ((?x87000 (* l_0_15_213 l_0_15_213)))
 (let ((?x86998 (* l_0_15_212 l_0_15_212)))
 (let ((?x86996 (* l_0_15_211 l_0_15_211)))
 (let ((?x86994 (* l_0_15_210 l_0_15_210)))
 (let ((?x86992 (* l_0_15_209 l_0_15_209)))
 (let ((?x86990 (* l_0_15_180 l_0_15_180)))
 (let ((?x86988 (* l_0_15_179 l_0_15_179)))
 (let ((?x86986 (* l_0_15_178 l_0_15_178)))
 (let ((?x86984 (* l_0_15_177 l_0_15_177)))
 (let ((?x86963 (* l_0_15_176 l_0_15_176)))
 (let ((?x86959 (* l_0_15_175 l_0_15_175)))
 (let ((?x86961 (- (- (* (- l_0_15_173) l_0_15_173) (* l_0_15_174 l_0_15_174)) ?x86959)))
 (let ((?x86995 (+ (+ (- (- (- (- (- ?x86961 ?x86963) ?x86984) ?x86986) ?x86988) ?x86990) ?x86992) ?x86994)))
 (let ((?x87009 (- (+ (+ (+ (+ (+ (+ ?x86995 ?x86996) ?x86998) ?x87000) ?x87002) ?x87004) ?x87006) ?x87008)))
 (let ((?x87023 (- (- (- (- (- (- (- ?x87009 ?x87010) ?x87012) ?x87014) ?x87016) ?x87018) ?x87020) ?x87022)))
 (let ((?x87037 (+ (+ (+ (+ (+ (+ (+ ?x87023 ?x87024) ?x87026) ?x87028) ?x87030) ?x87032) ?x87034) ?x87036)))
 (= (+ ?x87037 ?x87038) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x84413 (* l_0_15_37 l_0_15_37)))
 (let ((?x87095 (* l_0_15_289 l_0_15_289)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87093 (* ?x87092 l_0_15_295)))
 (let ((?x87094 (- (- (* l_0_15_1 l_0_15_1) (* (* 2.0 l_0_15_109) l_0_15_115)) ?x87093)))
 (= (+ (- (- ?x87094 ?x87095) ?x84413) (* (* 2.0 l_0_15_73) l_0_15_79)) 0.0)))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84465 (* ?x84464 l_0_15_38)))
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87129 (* ?x87128 l_0_15_296)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87126 (* ?x87125 l_0_15_295)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87123 (* ?x87092 l_0_15_290)))
 (let ((?x87119 (- (* (* 2.0 l_0_15_1) l_0_15_2) (* (* 2.0 l_0_15_110) l_0_15_115))))
 (let ((?x87130 (- (- (- (- ?x87119 (* (* 2.0 l_0_15_111) l_0_15_116)) ?x87123) ?x87126) ?x87129)))
 (let ((?x87136 (- (- ?x87130 (* (* 2.0 l_0_15_325) l_0_15_331)) (* (* 2.0 l_0_15_361) l_0_15_367))))
 (let ((?x87143 (- (- (- ?x87136 ?x84465) (* (* 2.0 l_0_15_397) l_0_15_403)) (* (* 2.0 l_0_15_433) l_0_15_439))))
 (let ((?x87149 (- (- ?x87143 (* (* 2.0 l_0_15_469) l_0_15_475)) (* (* 2.0 l_0_15_505) l_0_15_511))))
 (let ((?x87155 (+ (- ?x87149 (* (* 2.0 l_0_15_541) l_0_15_547)) (* (* 2.0 l_0_15_74) l_0_15_79))))
 (= (+ ?x87155 (* (* 2.0 l_0_15_75) l_0_15_80)) 0.0))))))))))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84511 (* ?x84464 l_0_15_40)))
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x87218 (* ?x84461 l_0_15_297)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x87216 (* ?x84458 l_0_15_296)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x87214 (* ?x84455 l_0_15_295)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87212 (* ?x87092 l_0_15_292)))
 (let ((?x87203 (- (* (* 2.0 l_0_15_1) l_0_15_4) (* (* 2.0 l_0_15_112) l_0_15_115))))
 (let ((?x87211 (- (- ?x87203 (* (* 2.0 l_0_15_113) l_0_15_116)) (* (* 2.0 l_0_15_114) l_0_15_117))))
 (let ((?x87223 (+ (- (- (- (- (- ?x87211 ?x87212) ?x87214) ?x87216) ?x87218) ?x84511) (* (* 2.0 l_0_15_76) l_0_15_79))))
 (let ((?x87229 (+ (+ ?x87223 (* (* 2.0 l_0_15_77) l_0_15_80)) (* (* 2.0 l_0_15_78) l_0_15_81))))
 (= ?x87229 0.0))))))))))))))))
(assert
 (let ((?x87260 (* l_0_15_82 l_0_15_82)))
 (let ((?x87258 (* l_0_15_81 l_0_15_81)))
 (let ((?x87256 (* l_0_15_80 l_0_15_80)))
 (let ((?x87254 (* l_0_15_79 l_0_15_79)))
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84528 (* ?x84464 l_0_15_43)))
 (let ((?x87251 (* l_0_15_298 l_0_15_298)))
 (let ((?x87249 (* l_0_15_297 l_0_15_297)))
 (let ((?x87247 (* l_0_15_296 l_0_15_296)))
 (let ((?x87245 (* l_0_15_295 l_0_15_295)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87093 (* ?x87092 l_0_15_295)))
 (let ((?x43309 (* l_0_15_118 l_0_15_118)))
 (let ((?x64627 (* l_0_15_117 l_0_15_117)))
 (let ((?x64696 (* l_0_15_116 l_0_15_116)))
 (let ((?x64621 (- (- (* (* 2.0 l_0_15_1) l_0_15_7) (* l_0_15_115 l_0_15_115)) ?x64696)))
 (let ((?x87252 (- (- (- (- (- (- (- ?x64621 ?x64627) ?x43309) ?x87093) ?x87245) ?x87247) ?x87249) ?x87251)))
 (= (+ (+ (+ (+ (- ?x87252 ?x84528) ?x87254) ?x87256) ?x87258) ?x87260) 0.0)))))))))))))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x63647 (* ?x84464 l_0_15_47)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87308 (* ?x87307 l_0_15_302)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87305 (* ?x87304 l_0_15_301)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87302 (* ?x87301 l_0_15_300)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87299 (* ?x87298 l_0_15_299)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87296 (* ?x87092 l_0_15_299)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x87294 (* ?x87293 l_0_15_259)))
 (let ((?x87283 (- (* (* 2.0 l_0_15_1) l_0_15_11) (* (* 2.0 l_0_15_115) l_0_15_119))))
 (let ((?x87289 (- (- ?x87283 (* (* 2.0 l_0_15_116) l_0_15_120)) (* (* 2.0 l_0_15_117) l_0_15_121))))
 (let ((?x87300 (- (- (+ (- ?x87289 (* (* 2.0 l_0_15_118) l_0_15_122)) ?x87294) ?x87296) ?x87299)))
 (let ((?x87313 (+ (- (- (- (- ?x87300 ?x87302) ?x87305) ?x87308) ?x63647) (* (* 2.0 l_0_15_79) l_0_15_83))))
 (let ((?x87319 (+ (+ ?x87313 (* (* 2.0 l_0_15_80) l_0_15_84)) (* (* 2.0 l_0_15_81) l_0_15_85))))
 (= (+ ?x87319 (* (* 2.0 l_0_15_82) l_0_15_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84555 (* ?x84464 l_0_15_52)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87375 (* ?x87307 l_0_15_307)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87373 (* ?x87304 l_0_15_306)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87371 (* ?x87301 l_0_15_305)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87369 (* ?x87298 l_0_15_304)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87367 (* ?x87092 l_0_15_304)))
 (let ((?x87093 (* ?x87092 l_0_15_295)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84526 (* ?x84449 l_0_15_187)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84519 (* ?x84446 l_0_15_151)))
 (let ((?x87357 (- (* (* 2.0 l_0_15_1) l_0_15_16) (* (* 2.0 l_0_15_115) l_0_15_124))))
 (let ((?x87361 (- (- ?x87357 (* (* 2.0 l_0_15_116) l_0_15_125)) (* (* 2.0 l_0_15_117) l_0_15_126))))
 (let ((?x87366 (+ (- (+ (- ?x87361 (* (* 2.0 l_0_15_118) l_0_15_127)) ?x84519) ?x84526) ?x87093)))
 (let ((?x87379 (+ (- (- (- (- (- (- ?x87366 ?x87367) ?x87369) ?x87371) ?x87373) ?x87375) ?x84555) (* (* 2.0 l_0_15_79) l_0_15_88))))
 (let ((?x87383 (+ (+ ?x87379 (* (* 2.0 l_0_15_80) l_0_15_89)) (* (* 2.0 l_0_15_81) l_0_15_90))))
 (= (+ ?x87383 (* (* 2.0 l_0_15_82) l_0_15_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84581 (* ?x84464 l_0_15_58)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87423 (* ?x87307 l_0_15_313)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87421 (* ?x87304 l_0_15_312)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87419 (* ?x87301 l_0_15_311)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87417 (* ?x87298 l_0_15_310)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87415 (* ?x87092 l_0_15_310)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x87294 (* ?x87293 l_0_15_259)))
 (let ((?x64818 (- (* (* 2.0 l_0_15_1) l_0_15_22) (* (* 2.0 l_0_15_115) l_0_15_130))))
 (let ((?x87411 (- (- ?x64818 (* (* 2.0 l_0_15_116) l_0_15_131)) (* (* 2.0 l_0_15_117) l_0_15_132))))
 (let ((?x87418 (- (- (- (- ?x87411 (* (* 2.0 l_0_15_118) l_0_15_133)) ?x87294) ?x87415) ?x87417)))
 (let ((?x87427 (+ (- (- (- (- ?x87418 ?x87419) ?x87421) ?x87423) ?x84581) (* (* 2.0 l_0_15_79) l_0_15_94))))
 (let ((?x87431 (+ (+ ?x87427 (* (* 2.0 l_0_15_80) l_0_15_95)) (* (* 2.0 l_0_15_81) l_0_15_96))))
 (= (+ ?x87431 (* (* 2.0 l_0_15_82) l_0_15_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x84464 (* 2.0 l_0_15_37)))
 (let ((?x84613 (* ?x84464 l_0_15_65)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87466 (* ?x87307 l_0_15_320)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87464 (* ?x87304 l_0_15_319)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87462 (* ?x87301 l_0_15_318)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87460 (* ?x87298 l_0_15_317)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87458 (* ?x87092 l_0_15_317)))
 (let ((?x43739 (+ (* (* 2.0 l_0_15_1) l_0_15_29) (* (* 2.0 l_0_15_101) l_0_15_79))))
 (let ((?x43806 (+ (+ ?x43739 (* (* 2.0 l_0_15_102) l_0_15_80)) (* (* 2.0 l_0_15_103) l_0_15_81))))
 (let ((?x64789 (- (+ ?x43806 (* (* 2.0 l_0_15_104) l_0_15_82)) (* (* 2.0 l_0_15_115) l_0_15_137))))
 (let ((?x64834 (- (- ?x64789 (* (* 2.0 l_0_15_116) l_0_15_138)) (* (* 2.0 l_0_15_117) l_0_15_139))))
 (let ((?x87457 (- (- ?x64834 (* (* 2.0 l_0_15_118) l_0_15_140)) (* (* 2.0 l_0_15_217) l_0_15_223))))
 (= (- (- (- (- (- (- ?x87457 ?x87458) ?x87460) ?x87462) ?x87464) ?x87466) ?x84613) 0.0)))))))))))))))))))
(assert
 (let ((?x84666 (* l_0_15_39 l_0_15_39)))
 (let ((?x84664 (* l_0_15_38 l_0_15_38)))
 (let ((?x84644 (* l_0_15_3 l_0_15_3)))
 (let ((?x87508 (* l_0_15_291 l_0_15_291)))
 (let ((?x87510 (+ (- (- (* l_0_15_2 l_0_15_2) (* l_0_15_290 l_0_15_290)) ?x87508) ?x84644)))
 (let ((?x87514 (- (- ?x87510 (* (* 2.0 l_0_15_326) l_0_15_331)) (* (* 2.0 l_0_15_327) l_0_15_332))))
 (let ((?x87518 (- (- ?x87514 (* (* 2.0 l_0_15_362) l_0_15_367)) (* (* 2.0 l_0_15_363) l_0_15_368))))
 (let ((?x87524 (- (- (- (- ?x87518 ?x84664) ?x84666) (* (* 2.0 l_0_15_398) l_0_15_403)) (* (* 2.0 l_0_15_399) l_0_15_404))))
 (let ((?x87528 (- (- ?x87524 (* (* 2.0 l_0_15_434) l_0_15_439)) (* (* 2.0 l_0_15_435) l_0_15_440))))
 (let ((?x87532 (- (- ?x87528 (* (* 2.0 l_0_15_470) l_0_15_475)) (* (* 2.0 l_0_15_471) l_0_15_476))))
 (let ((?x87536 (- (- ?x87532 (* (* 2.0 l_0_15_506) l_0_15_511)) (* (* 2.0 l_0_15_507) l_0_15_512))))
 (let ((?x87540 (- (- ?x87536 (* (* 2.0 l_0_15_542) l_0_15_547)) (* (* 2.0 l_0_15_543) l_0_15_548))))
 (= ?x87540 0.0))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x84814 (* ?x84813 l_0_15_41)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x84811 (* ?x84810 l_0_15_40)))
 (let ((?x84807 (* 2.0 l_0_15_3)))
 (let ((?x84808 (* ?x84807 l_0_15_5)))
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x65020 (* ?x87128 l_0_15_293)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x44101 (* ?x87125 l_0_15_292)))
 (let ((?x84798 (* 2.0 l_0_15_2)))
 (let ((?x84799 (* ?x84798 l_0_15_4)))
 (let ((?x44197 (- (+ (- (- ?x84799 ?x44101) ?x65020) ?x84808) (* (* 2.0 l_0_15_328) l_0_15_331))))
 (let ((?x44193 (- (- ?x44197 (* (* 2.0 l_0_15_329) l_0_15_332)) (* (* 2.0 l_0_15_330) l_0_15_333))))
 (let ((?x87568 (- (- ?x44193 (* (* 2.0 l_0_15_364) l_0_15_367)) (* (* 2.0 l_0_15_365) l_0_15_368))))
 (let ((?x87574 (- (- (- (- ?x87568 (* (* 2.0 l_0_15_366) l_0_15_369)) ?x84811) ?x84814) (* (* 2.0 l_0_15_400) l_0_15_403))))
 (let ((?x87578 (- (- ?x87574 (* (* 2.0 l_0_15_401) l_0_15_404)) (* (* 2.0 l_0_15_402) l_0_15_405))))
 (let ((?x87582 (- (- ?x87578 (* (* 2.0 l_0_15_436) l_0_15_439)) (* (* 2.0 l_0_15_437) l_0_15_440))))
 (let ((?x87586 (- (- ?x87582 (* (* 2.0 l_0_15_438) l_0_15_441)) (* (* 2.0 l_0_15_472) l_0_15_475))))
 (let ((?x87590 (- (- ?x87586 (* (* 2.0 l_0_15_473) l_0_15_476)) (* (* 2.0 l_0_15_474) l_0_15_477))))
 (let ((?x87594 (- (- ?x87590 (* (* 2.0 l_0_15_508) l_0_15_511)) (* (* 2.0 l_0_15_509) l_0_15_512))))
 (let ((?x87598 (- (- ?x87594 (* (* 2.0 l_0_15_510) l_0_15_513)) (* (* 2.0 l_0_15_544) l_0_15_547))))
 (let ((?x87602 (- (- ?x87598 (* (* 2.0 l_0_15_545) l_0_15_548)) (* (* 2.0 l_0_15_546) l_0_15_549))))
 (= ?x87602 0.0)))))))))))))))))))))))))
(assert
 (let ((?x87683 (* l_0_15_550 l_0_15_550)))
 (let ((?x87681 (* l_0_15_549 l_0_15_549)))
 (let ((?x87679 (* l_0_15_548 l_0_15_548)))
 (let ((?x87677 (* l_0_15_547 l_0_15_547)))
 (let ((?x87675 (* l_0_15_514 l_0_15_514)))
 (let ((?x87673 (* l_0_15_513 l_0_15_513)))
 (let ((?x87671 (* l_0_15_512 l_0_15_512)))
 (let ((?x87669 (* l_0_15_511 l_0_15_511)))
 (let ((?x87667 (* l_0_15_478 l_0_15_478)))
 (let ((?x87665 (* l_0_15_477 l_0_15_477)))
 (let ((?x87663 (* l_0_15_476 l_0_15_476)))
 (let ((?x87661 (* l_0_15_475 l_0_15_475)))
 (let ((?x87659 (* l_0_15_442 l_0_15_442)))
 (let ((?x87657 (* l_0_15_441 l_0_15_441)))
 (let ((?x87655 (* l_0_15_440 l_0_15_440)))
 (let ((?x87653 (* l_0_15_439 l_0_15_439)))
 (let ((?x87651 (* l_0_15_406 l_0_15_406)))
 (let ((?x87649 (* l_0_15_405 l_0_15_405)))
 (let ((?x87647 (* l_0_15_404 l_0_15_404)))
 (let ((?x87645 (* l_0_15_403 l_0_15_403)))
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x84875 (* ?x84813 l_0_15_44)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x84873 (* ?x84810 l_0_15_43)))
 (let ((?x87641 (* l_0_15_370 l_0_15_370)))
 (let ((?x87639 (* l_0_15_369 l_0_15_369)))
 (let ((?x87637 (* l_0_15_368 l_0_15_368)))
 (let ((?x65163 (* l_0_15_367 l_0_15_367)))
 (let ((?x65159 (* l_0_15_334 l_0_15_334)))
 (let ((?x65164 (* l_0_15_333 l_0_15_333)))
 (let ((?x65142 (* l_0_15_332 l_0_15_332)))
 (let ((?x65124 (* l_0_15_331 l_0_15_331)))
 (let ((?x84807 (* 2.0 l_0_15_3)))
 (let ((?x84865 (* ?x84807 l_0_15_8)))
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87129 (* ?x87128 l_0_15_296)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87126 (* ?x87125 l_0_15_295)))
 (let ((?x84798 (* 2.0 l_0_15_2)))
 (let ((?x84848 (* ?x84798 l_0_15_7)))
 (let ((?x65162 (- (- (- (- (+ (- (- ?x84848 ?x87126) ?x87129) ?x84865) ?x65124) ?x65142) ?x65164) ?x65159)))
 (let ((?x87646 (- (- (- (- (- (- (- ?x65162 ?x65163) ?x87637) ?x87639) ?x87641) ?x84873) ?x84875) ?x87645)))
 (let ((?x87660 (- (- (- (- (- (- (- ?x87646 ?x87647) ?x87649) ?x87651) ?x87653) ?x87655) ?x87657) ?x87659)))
 (let ((?x87674 (- (- (- (- (- (- (- ?x87660 ?x87661) ?x87663) ?x87665) ?x87667) ?x87669) ?x87671) ?x87673)))
 (= (- (- (- (- (- ?x87674 ?x87675) ?x87677) ?x87679) ?x87681) ?x87683) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x84967 (* ?x84813 l_0_15_48)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x84965 (* ?x84810 l_0_15_47)))
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87692 (* ?x87128 l_0_15_300)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87690 (* ?x87125 l_0_15_299)))
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x44462 (* ?x65259 l_0_15_260)))
 (let ((?x44458 (* 2.0 l_0_15_254)))
 (let ((?x44460 (* ?x44458 l_0_15_259)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x84939 (* ?x84938 l_0_15_3)))
 (let ((?x87691 (- (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_2) ?x84939) ?x44460) ?x44462) ?x87690)))
 (let ((?x87699 (- (- (- ?x87691 ?x87692) (* (* 2.0 l_0_15_331) l_0_15_335)) (* (* 2.0 l_0_15_332) l_0_15_336))))
 (let ((?x87705 (- (- ?x87699 (* (* 2.0 l_0_15_333) l_0_15_337)) (* (* 2.0 l_0_15_334) l_0_15_338))))
 (let ((?x87711 (- (- ?x87705 (* (* 2.0 l_0_15_367) l_0_15_371)) (* (* 2.0 l_0_15_368) l_0_15_372))))
 (let ((?x87717 (- (- ?x87711 (* (* 2.0 l_0_15_369) l_0_15_373)) (* (* 2.0 l_0_15_370) l_0_15_374))))
 (let ((?x87725 (- (- (- (- ?x87717 ?x84965) ?x84967) (* (* 2.0 l_0_15_403) l_0_15_407)) (* (* 2.0 l_0_15_404) l_0_15_408))))
 (let ((?x87731 (- (- ?x87725 (* (* 2.0 l_0_15_405) l_0_15_409)) (* (* 2.0 l_0_15_406) l_0_15_410))))
 (let ((?x87737 (- (- ?x87731 (* (* 2.0 l_0_15_439) l_0_15_443)) (* (* 2.0 l_0_15_440) l_0_15_444))))
 (let ((?x87743 (- (- ?x87737 (* (* 2.0 l_0_15_441) l_0_15_445)) (* (* 2.0 l_0_15_442) l_0_15_446))))
 (let ((?x87749 (- (- ?x87743 (* (* 2.0 l_0_15_475) l_0_15_479)) (* (* 2.0 l_0_15_476) l_0_15_480))))
 (let ((?x87755 (- (- ?x87749 (* (* 2.0 l_0_15_477) l_0_15_481)) (* (* 2.0 l_0_15_478) l_0_15_482))))
 (let ((?x87761 (- (- ?x87755 (* (* 2.0 l_0_15_511) l_0_15_515)) (* (* 2.0 l_0_15_512) l_0_15_516))))
 (let ((?x87767 (- (- ?x87761 (* (* 2.0 l_0_15_513) l_0_15_517)) (* (* 2.0 l_0_15_514) l_0_15_518))))
 (let ((?x87773 (- (- ?x87767 (* (* 2.0 l_0_15_547) l_0_15_551)) (* (* 2.0 l_0_15_548) l_0_15_552))))
 (let ((?x87779 (- (- ?x87773 (* (* 2.0 l_0_15_549) l_0_15_553)) (* (* 2.0 l_0_15_550) l_0_15_554))))
 (= ?x87779 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x85037 (* ?x84813 l_0_15_53)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x85035 (* ?x84810 l_0_15_52)))
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87864 (* ?x87128 l_0_15_305)))
 (let ((?x87129 (* ?x87128 l_0_15_296)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87861 (* ?x87125 l_0_15_304)))
 (let ((?x87126 (* ?x87125 l_0_15_295)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x84846 (* ?x84795 l_0_15_188)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x84844 (* ?x84792 l_0_15_187)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x85011 (* ?x85010 l_0_15_3)))
 (let ((?x85007 (* 2.0 l_0_15_16)))
 (let ((?x85008 (* ?x85007 l_0_15_2)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x84842 (* ?x39892 l_0_15_152)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x87854 (* ?x84941 l_0_15_151)))
 (let ((?x87862 (- (+ (- (- (+ (+ (+ ?x87854 ?x84842) ?x85008) ?x85011) ?x84844) ?x84846) ?x87126) ?x87861)))
 (let ((?x87869 (- (- (- (+ ?x87862 ?x87129) ?x87864) (* (* 2.0 l_0_15_331) l_0_15_340)) (* (* 2.0 l_0_15_332) l_0_15_341))))
 (let ((?x87873 (- (- ?x87869 (* (* 2.0 l_0_15_333) l_0_15_342)) (* (* 2.0 l_0_15_334) l_0_15_343))))
 (let ((?x87877 (- (- ?x87873 (* (* 2.0 l_0_15_367) l_0_15_376)) (* (* 2.0 l_0_15_368) l_0_15_377))))
 (let ((?x87881 (- (- ?x87877 (* (* 2.0 l_0_15_369) l_0_15_378)) (* (* 2.0 l_0_15_370) l_0_15_379))))
 (let ((?x87887 (- (- (- (- ?x87881 ?x85035) ?x85037) (* (* 2.0 l_0_15_403) l_0_15_412)) (* (* 2.0 l_0_15_404) l_0_15_413))))
 (let ((?x87891 (- (- ?x87887 (* (* 2.0 l_0_15_405) l_0_15_414)) (* (* 2.0 l_0_15_406) l_0_15_415))))
 (let ((?x87895 (- (- ?x87891 (* (* 2.0 l_0_15_439) l_0_15_448)) (* (* 2.0 l_0_15_440) l_0_15_449))))
 (let ((?x87899 (- (- ?x87895 (* (* 2.0 l_0_15_441) l_0_15_450)) (* (* 2.0 l_0_15_442) l_0_15_451))))
 (let ((?x87903 (- (- ?x87899 (* (* 2.0 l_0_15_475) l_0_15_484)) (* (* 2.0 l_0_15_476) l_0_15_485))))
 (let ((?x87907 (- (- ?x87903 (* (* 2.0 l_0_15_477) l_0_15_486)) (* (* 2.0 l_0_15_478) l_0_15_487))))
 (let ((?x87911 (- (- ?x87907 (* (* 2.0 l_0_15_511) l_0_15_520)) (* (* 2.0 l_0_15_512) l_0_15_521))))
 (let ((?x87915 (- (- ?x87911 (* (* 2.0 l_0_15_513) l_0_15_522)) (* (* 2.0 l_0_15_514) l_0_15_523))))
 (let ((?x87919 (- (- ?x87915 (* (* 2.0 l_0_15_547) l_0_15_556)) (* (* 2.0 l_0_15_548) l_0_15_557))))
 (let ((?x87923 (- (- ?x87919 (* (* 2.0 l_0_15_549) l_0_15_558)) (* (* 2.0 l_0_15_550) l_0_15_559))))
 (= ?x87923 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x85119 (* ?x84813 l_0_15_59)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x85117 (* ?x84810 l_0_15_58)))
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87959 (* ?x87128 l_0_15_311)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87957 (* ?x87125 l_0_15_310)))
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x44462 (* ?x65259 l_0_15_260)))
 (let ((?x44458 (* 2.0 l_0_15_254)))
 (let ((?x44460 (* ?x44458 l_0_15_259)))
 (let ((?x85111 (* 2.0 l_0_15_23)))
 (let ((?x85112 (* ?x85111 l_0_15_3)))
 (let ((?x84798 (* 2.0 l_0_15_2)))
 (let ((?x85103 (* ?x84798 l_0_15_22)))
 (let ((?x87962 (- (- (- (- (- (+ ?x85103 ?x85112) ?x44460) ?x44462) ?x87957) ?x87959) (* (* 2.0 l_0_15_331) l_0_15_346))))
 (let ((?x87966 (- (- ?x87962 (* (* 2.0 l_0_15_332) l_0_15_347)) (* (* 2.0 l_0_15_333) l_0_15_348))))
 (let ((?x87970 (- (- ?x87966 (* (* 2.0 l_0_15_334) l_0_15_349)) (* (* 2.0 l_0_15_367) l_0_15_382))))
 (let ((?x87974 (- (- ?x87970 (* (* 2.0 l_0_15_368) l_0_15_383)) (* (* 2.0 l_0_15_369) l_0_15_384))))
 (let ((?x87980 (- (- (- (- ?x87974 (* (* 2.0 l_0_15_370) l_0_15_385)) ?x85117) ?x85119) (* (* 2.0 l_0_15_403) l_0_15_418))))
 (let ((?x87984 (- (- ?x87980 (* (* 2.0 l_0_15_404) l_0_15_419)) (* (* 2.0 l_0_15_405) l_0_15_420))))
 (let ((?x87988 (- (- ?x87984 (* (* 2.0 l_0_15_406) l_0_15_421)) (* (* 2.0 l_0_15_439) l_0_15_454))))
 (let ((?x87992 (- (- ?x87988 (* (* 2.0 l_0_15_440) l_0_15_455)) (* (* 2.0 l_0_15_441) l_0_15_456))))
 (let ((?x87996 (- (- ?x87992 (* (* 2.0 l_0_15_442) l_0_15_457)) (* (* 2.0 l_0_15_475) l_0_15_490))))
 (let ((?x88000 (- (- ?x87996 (* (* 2.0 l_0_15_476) l_0_15_491)) (* (* 2.0 l_0_15_477) l_0_15_492))))
 (let ((?x88004 (- (- ?x88000 (* (* 2.0 l_0_15_478) l_0_15_493)) (* (* 2.0 l_0_15_511) l_0_15_526))))
 (let ((?x88008 (- (- ?x88004 (* (* 2.0 l_0_15_512) l_0_15_527)) (* (* 2.0 l_0_15_513) l_0_15_528))))
 (let ((?x88012 (- (- ?x88008 (* (* 2.0 l_0_15_514) l_0_15_529)) (* (* 2.0 l_0_15_547) l_0_15_562))))
 (let ((?x88016 (- (- ?x88012 (* (* 2.0 l_0_15_548) l_0_15_563)) (* (* 2.0 l_0_15_549) l_0_15_564))))
 (= (- ?x88016 (* (* 2.0 l_0_15_550) l_0_15_565)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x84813 (* 2.0 l_0_15_39)))
 (let ((?x85188 (* ?x84813 l_0_15_66)))
 (let ((?x84810 (* 2.0 l_0_15_38)))
 (let ((?x85186 (* ?x84810 l_0_15_65)))
 (let ((?x84807 (* 2.0 l_0_15_3)))
 (let ((?x85184 (* ?x84807 l_0_15_30)))
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x88127 (* ?x87128 l_0_15_318)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x88125 (* ?x87125 l_0_15_317)))
 (let ((?x84798 (* 2.0 l_0_15_2)))
 (let ((?x85176 (* ?x84798 l_0_15_29)))
 (let ((?x88124 (- (- ?x85176 (* (* 2.0 l_0_15_218) l_0_15_223)) (* (* 2.0 l_0_15_219) l_0_15_224))))
 (let ((?x88131 (- (+ (- (- ?x88124 ?x88125) ?x88127) ?x85184) (* (* 2.0 l_0_15_331) l_0_15_353))))
 (let ((?x88135 (- (- ?x88131 (* (* 2.0 l_0_15_332) l_0_15_354)) (* (* 2.0 l_0_15_333) l_0_15_355))))
 (let ((?x88139 (- (- ?x88135 (* (* 2.0 l_0_15_334) l_0_15_356)) (* (* 2.0 l_0_15_367) l_0_15_389))))
 (let ((?x88143 (- (- ?x88139 (* (* 2.0 l_0_15_368) l_0_15_390)) (* (* 2.0 l_0_15_369) l_0_15_391))))
 (let ((?x88149 (- (- (- (- ?x88143 (* (* 2.0 l_0_15_370) l_0_15_392)) ?x85186) ?x85188) (* (* 2.0 l_0_15_403) l_0_15_425))))
 (let ((?x88153 (- (- ?x88149 (* (* 2.0 l_0_15_404) l_0_15_426)) (* (* 2.0 l_0_15_405) l_0_15_427))))
 (let ((?x88157 (- (- ?x88153 (* (* 2.0 l_0_15_406) l_0_15_428)) (* (* 2.0 l_0_15_439) l_0_15_461))))
 (let ((?x88161 (- (- ?x88157 (* (* 2.0 l_0_15_440) l_0_15_462)) (* (* 2.0 l_0_15_441) l_0_15_463))))
 (let ((?x88165 (- (- ?x88161 (* (* 2.0 l_0_15_442) l_0_15_464)) (* (* 2.0 l_0_15_475) l_0_15_497))))
 (let ((?x88169 (- (- ?x88165 (* (* 2.0 l_0_15_476) l_0_15_498)) (* (* 2.0 l_0_15_477) l_0_15_499))))
 (let ((?x88173 (- (- ?x88169 (* (* 2.0 l_0_15_478) l_0_15_500)) (* (* 2.0 l_0_15_511) l_0_15_533))))
 (let ((?x88177 (- (- ?x88173 (* (* 2.0 l_0_15_512) l_0_15_534)) (* (* 2.0 l_0_15_513) l_0_15_535))))
 (let ((?x88181 (- (- ?x88177 (* (* 2.0 l_0_15_514) l_0_15_536)) (* (* 2.0 l_0_15_547) l_0_15_569))))
 (let ((?x88185 (- (- ?x88181 (* (* 2.0 l_0_15_548) l_0_15_570)) (* (* 2.0 l_0_15_549) l_0_15_571))))
 (= (- ?x88185 (* (* 2.0 l_0_15_550) l_0_15_572)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x85243 (* l_0_15_6 l_0_15_6)))
 (let ((?x85241 (* l_0_15_5 l_0_15_5)))
 (let ((?x85239 (* l_0_15_42 l_0_15_42)))
 (let ((?x85237 (* l_0_15_41 l_0_15_41)))
 (let ((?x85235 (* l_0_15_40 l_0_15_40)))
 (let ((?x85233 (* l_0_15_4 l_0_15_4)))
 (let ((?x7833 (* l_0_15_294 l_0_15_294)))
 (let ((?x7580 (- (- (* (- l_0_15_292) l_0_15_292) (* l_0_15_293 l_0_15_293)) ?x7833)))
 (= (+ (+ (- (- (- (+ ?x7580 ?x85233) ?x85235) ?x85237) ?x85239) ?x85241) ?x85243) 0.0))))))))))
(assert
 (let ((?x85292 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x85289 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x85286 (* ?x84883 l_0_15_45)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x85284 (* ?x84880 l_0_15_44)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x85282 (* ?x84877 l_0_15_43)))
 (let ((?x85280 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x87218 (* ?x84461 l_0_15_297)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x87216 (* ?x84458 l_0_15_296)))
 (let ((?x66602 (- (+ (- (- (* (* (- 2.0) l_0_15_292) l_0_15_295) ?x87216) ?x87218) ?x85280) ?x85282)))
 (= (+ (+ (- (- ?x66602 ?x85284) ?x85286) ?x85289) ?x85292) 0.0))))))))))))))))
(assert
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x85338 (* ?x84883 l_0_15_49)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x85336 (* ?x84880 l_0_15_48)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x85334 (* ?x84877 l_0_15_47)))
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x88253 (* ?x84461 l_0_15_301)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x88251 (* ?x84458 l_0_15_300)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x88249 (* ?x84455 l_0_15_299)))
 (let ((?x84962 (* 2.0 l_0_15_258)))
 (let ((?x88247 (* ?x84962 l_0_15_261)))
 (let ((?x84959 (* 2.0 l_0_15_257)))
 (let ((?x66618 (* ?x84959 l_0_15_260)))
 (let ((?x84956 (* 2.0 l_0_15_256)))
 (let ((?x45234 (* ?x84956 l_0_15_259)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x85320 (* ?x85319 l_0_15_6)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x40855 (* ?x84938 l_0_15_5)))
 (let ((?x88246 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_4) ?x40855) ?x85320) ?x45234) ?x66618)))
 (let ((?x88257 (- (- (- (- (- (- (+ ?x88246 ?x88247) ?x88249) ?x88251) ?x88253) ?x85334) ?x85336) ?x85338)))
 (= ?x88257 0.0))))))))))))))))))))))))))
(assert
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x85361 (* ?x84883 l_0_15_54)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x85359 (* ?x84880 l_0_15_53)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x85357 (* ?x84877 l_0_15_52)))
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x88286 (* ?x84461 l_0_15_306)))
 (let ((?x87218 (* ?x84461 l_0_15_297)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x88283 (* ?x84458 l_0_15_305)))
 (let ((?x87216 (* ?x84458 l_0_15_296)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x88280 (* ?x84455 l_0_15_304)))
 (let ((?x87214 (* ?x84455 l_0_15_295)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85277 (* ?x85023 l_0_15_189)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85275 (* ?x85020 l_0_15_188)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x85273 (* ?x85017 l_0_15_187)))
 (let ((?x40931 (* 2.0 l_0_15_18)))
 (let ((?x40933 (* ?x40931 l_0_15_6)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x63978 (* ?x85010 l_0_15_5)))
 (let ((?x85007 (* 2.0 l_0_15_16)))
 (let ((?x63976 (* ?x85007 l_0_15_4)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85271 (* ?x85004 l_0_15_153)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85269 (* ?x85001 l_0_15_152)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x85703 (* ?x63799 l_0_15_151)))
 (let ((?x88277 (- (- (+ (+ (+ (+ (+ ?x85703 ?x85269) ?x85271) ?x63976) ?x63978) ?x40933) ?x85273) ?x85275)))
 (let ((?x88287 (- (+ (- (+ (- (+ (- ?x88277 ?x85277) ?x87214) ?x88280) ?x87216) ?x88283) ?x87218) ?x88286)))
 (= (- (- (- ?x88287 ?x85357) ?x85359) ?x85361) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x84883 (* 2.0 l_0_15_42)))
 (let ((?x85435 (* ?x84883 l_0_15_60)))
 (let ((?x84880 (* 2.0 l_0_15_41)))
 (let ((?x85433 (* ?x84880 l_0_15_59)))
 (let ((?x84877 (* 2.0 l_0_15_40)))
 (let ((?x85431 (* ?x84877 l_0_15_58)))
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x88314 (* ?x84461 l_0_15_312)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x88312 (* ?x84458 l_0_15_311)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x88310 (* ?x84455 l_0_15_310)))
 (let ((?x84962 (* 2.0 l_0_15_258)))
 (let ((?x88247 (* ?x84962 l_0_15_261)))
 (let ((?x84959 (* 2.0 l_0_15_257)))
 (let ((?x66618 (* ?x84959 l_0_15_260)))
 (let ((?x84956 (* 2.0 l_0_15_256)))
 (let ((?x45234 (* ?x84956 l_0_15_259)))
 (let ((?x85428 (* 2.0 l_0_15_24)))
 (let ((?x85429 (* ?x85428 l_0_15_6)))
 (let ((?x85111 (* 2.0 l_0_15_23)))
 (let ((?x85426 (* ?x85111 l_0_15_5)))
 (let ((?x85423 (* 2.0 l_0_15_22)))
 (let ((?x85424 (* ?x85423 l_0_15_4)))
 (let ((?x88313 (- (- (- (- (- (+ (+ ?x85424 ?x85426) ?x85429) ?x45234) ?x66618) ?x88247) ?x88310) ?x88312)))
 (= (- (- (- (- ?x88313 ?x88314) ?x85431) ?x85433) ?x85435) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x85525 (* l_0_15_9 l_0_15_9)))
 (let ((?x85523 (* l_0_15_8 l_0_15_8)))
 (let ((?x85521 (* l_0_15_7 l_0_15_7)))
 (let ((?x85519 (* l_0_15_46 l_0_15_46)))
 (let ((?x85517 (* l_0_15_45 l_0_15_45)))
 (let ((?x85515 (* l_0_15_44 l_0_15_44)))
 (let ((?x85513 (* l_0_15_43 l_0_15_43)))
 (let ((?x87251 (* l_0_15_298 l_0_15_298)))
 (let ((?x87249 (* l_0_15_297 l_0_15_297)))
 (let ((?x87247 (* l_0_15_296 l_0_15_296)))
 (let ((?x66946 (- (- (- (* l_0_15_10 l_0_15_10) (* l_0_15_295 l_0_15_295)) ?x87247) ?x87249)))
 (let ((?x66889 (+ (+ (- (- (- (- (- ?x66946 ?x87251) ?x85513) ?x85515) ?x85517) ?x85519) ?x85521) ?x85523)))
 (= (+ ?x66889 ?x85525) 0.0))))))))))))))
(assert
 (let ((?x85589 (* 2.0 l_0_15_46)))
 (let ((?x85590 (* ?x85589 l_0_15_50)))
 (let ((?x85586 (* 2.0 l_0_15_45)))
 (let ((?x85587 (* ?x85586 l_0_15_49)))
 (let ((?x85583 (* 2.0 l_0_15_44)))
 (let ((?x85584 (* ?x85583 l_0_15_48)))
 (let ((?x85580 (* 2.0 l_0_15_43)))
 (let ((?x85581 (* ?x85580 l_0_15_47)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87308 (* ?x87307 l_0_15_302)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87305 (* ?x87304 l_0_15_301)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87302 (* ?x87301 l_0_15_300)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87299 (* ?x87298 l_0_15_299)))
 (let ((?x66992 (* l_0_15_262 l_0_15_262)))
 (let ((?x67036 (* l_0_15_261 l_0_15_261)))
 (let ((?x67045 (* l_0_15_260 l_0_15_260)))
 (let ((?x67054 (* l_0_15_259 l_0_15_259)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x85554 (* ?x85319 l_0_15_9)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x85552 (* ?x84938 l_0_15_8)))
 (let ((?x85549 (* 2.0 l_0_15_11)))
 (let ((?x85550 (* ?x85549 l_0_15_7)))
 (let ((?x67044 (+ (+ (+ (+ (* (* 2.0 l_0_15_10) l_0_15_14) ?x85550) ?x85552) ?x85554) ?x67054)))
 (let ((?x66986 (- (- (- (- (+ (+ (+ ?x67044 ?x67045) ?x67036) ?x66992) ?x87299) ?x87302) ?x87305) ?x87308)))
 (= (- (- (- (- ?x66986 ?x85581) ?x85584) ?x85587) ?x85590) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x85589 (* 2.0 l_0_15_46)))
 (let ((?x85660 (* ?x85589 l_0_15_55)))
 (let ((?x85586 (* 2.0 l_0_15_45)))
 (let ((?x85658 (* ?x85586 l_0_15_54)))
 (let ((?x85583 (* 2.0 l_0_15_44)))
 (let ((?x85656 (* ?x85583 l_0_15_53)))
 (let ((?x85580 (* 2.0 l_0_15_43)))
 (let ((?x85654 (* ?x85580 l_0_15_52)))
 (let ((?x87251 (* l_0_15_298 l_0_15_298)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87375 (* ?x87307 l_0_15_307)))
 (let ((?x87249 (* l_0_15_297 l_0_15_297)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87373 (* ?x87304 l_0_15_306)))
 (let ((?x87247 (* l_0_15_296 l_0_15_296)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87371 (* ?x87301 l_0_15_305)))
 (let ((?x87245 (* l_0_15_295 l_0_15_295)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87369 (* ?x87298 l_0_15_304)))
 (let ((?x85511 (* l_0_15_190 l_0_15_190)))
 (let ((?x85509 (* l_0_15_189 l_0_15_189)))
 (let ((?x85507 (* l_0_15_188 l_0_15_188)))
 (let ((?x64090 (* l_0_15_187 l_0_15_187)))
 (let ((?x40931 (* 2.0 l_0_15_18)))
 (let ((?x85644 (* ?x40931 l_0_15_9)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x85642 (* ?x85010 l_0_15_8)))
 (let ((?x85007 (* 2.0 l_0_15_16)))
 (let ((?x85640 (* ?x85007 l_0_15_7)))
 (let ((?x64092 (* l_0_15_154 l_0_15_154)))
 (let ((?x41121 (* l_0_15_153 l_0_15_153)))
 (let ((?x41135 (* l_0_15_152 l_0_15_152)))
 (let ((?x41131 (* l_0_15_151 l_0_15_151)))
 (let ((?x88329 (+ (+ (+ (+ (* (* 2.0 l_0_15_10) l_0_15_19) ?x41131) ?x41135) ?x41121) ?x64092)))
 (let ((?x88336 (- (- (- (- (+ (+ (+ ?x88329 ?x85640) ?x85642) ?x85644) ?x64090) ?x85507) ?x85509) ?x85511)))
 (let ((?x88343 (- (+ (- (+ (- (+ (- ?x88336 ?x87369) ?x87245) ?x87371) ?x87247) ?x87373) ?x87249) ?x87375)))
 (= (- (- (- (- (+ ?x88343 ?x87251) ?x85654) ?x85656) ?x85658) ?x85660) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x85589 (* 2.0 l_0_15_46)))
 (let ((?x85735 (* ?x85589 l_0_15_61)))
 (let ((?x85586 (* 2.0 l_0_15_45)))
 (let ((?x85733 (* ?x85586 l_0_15_60)))
 (let ((?x85583 (* 2.0 l_0_15_44)))
 (let ((?x85731 (* ?x85583 l_0_15_59)))
 (let ((?x85580 (* 2.0 l_0_15_43)))
 (let ((?x85729 (* ?x85580 l_0_15_58)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87423 (* ?x87307 l_0_15_313)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87421 (* ?x87304 l_0_15_312)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87419 (* ?x87301 l_0_15_311)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87417 (* ?x87298 l_0_15_310)))
 (let ((?x66992 (* l_0_15_262 l_0_15_262)))
 (let ((?x67036 (* l_0_15_261 l_0_15_261)))
 (let ((?x67045 (* l_0_15_260 l_0_15_260)))
 (let ((?x67054 (* l_0_15_259 l_0_15_259)))
 (let ((?x85428 (* 2.0 l_0_15_24)))
 (let ((?x85727 (* ?x85428 l_0_15_9)))
 (let ((?x85111 (* 2.0 l_0_15_23)))
 (let ((?x85725 (* ?x85111 l_0_15_8)))
 (let ((?x85423 (* 2.0 l_0_15_22)))
 (let ((?x85723 (* ?x85423 l_0_15_7)))
 (let ((?x9265 (- (+ (+ (+ (* (* 2.0 l_0_15_10) l_0_15_25) ?x85723) ?x85725) ?x85727) ?x67054)))
 (let ((?x88357 (- (- (- (- (- (- (- ?x9265 ?x67045) ?x67036) ?x66992) ?x87417) ?x87419) ?x87421) ?x87423)))
 (= (- (- (- (- ?x88357 ?x85729) ?x85731) ?x85733) ?x85735) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x85589 (* 2.0 l_0_15_46)))
 (let ((?x85839 (* ?x85589 l_0_15_68)))
 (let ((?x85586 (* 2.0 l_0_15_45)))
 (let ((?x85837 (* ?x85586 l_0_15_67)))
 (let ((?x85583 (* 2.0 l_0_15_44)))
 (let ((?x85835 (* ?x85583 l_0_15_66)))
 (let ((?x85580 (* 2.0 l_0_15_43)))
 (let ((?x85833 (* ?x85580 l_0_15_65)))
 (let ((?x84870 (* 2.0 l_0_15_31)))
 (let ((?x85831 (* ?x84870 l_0_15_9)))
 (let ((?x84867 (* 2.0 l_0_15_30)))
 (let ((?x85829 (* ?x84867 l_0_15_8)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87466 (* ?x87307 l_0_15_320)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87464 (* ?x87304 l_0_15_319)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87462 (* ?x87301 l_0_15_318)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87460 (* ?x87298 l_0_15_317)))
 (let ((?x84859 (* 2.0 l_0_15_29)))
 (let ((?x85827 (* ?x84859 l_0_15_7)))
 (let ((?x9524 (* l_0_15_226 l_0_15_226)))
 (let ((?x67347 (* l_0_15_225 l_0_15_225)))
 (let ((?x67429 (* l_0_15_224 l_0_15_224)))
 (let ((?x9719 (* l_0_15_223 l_0_15_223)))
 (let ((?x67343 (- (- (- (- (* (* 2.0 l_0_15_10) l_0_15_32) ?x9719) ?x67429) ?x67347) ?x9524)))
 (let ((?x88369 (+ (+ (- (- (- (- (+ ?x67343 ?x85827) ?x87460) ?x87462) ?x87464) ?x87466) ?x85829) ?x85831)))
 (= (- (- (- (- ?x88369 ?x85833) ?x85835) ?x85837) ?x85839) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x85928 (* l_0_15_51 l_0_15_51)))
 (let ((?x85926 (* l_0_15_50 l_0_15_50)))
 (let ((?x85924 (* l_0_15_49 l_0_15_49)))
 (let ((?x85922 (* l_0_15_48 l_0_15_48)))
 (let ((?x85920 (* l_0_15_47 l_0_15_47)))
 (let ((?x88404 (* l_0_15_303 l_0_15_303)))
 (let ((?x88402 (* l_0_15_302 l_0_15_302)))
 (let ((?x88400 (* l_0_15_301 l_0_15_301)))
 (let ((?x88398 (* l_0_15_300 l_0_15_300)))
 (let ((?x88396 (* l_0_15_299 l_0_15_299)))
 (let ((?x88393 (* 2.0 l_0_15_262)))
 (let ((?x88394 (* ?x88393 l_0_15_266)))
 (let ((?x88390 (* 2.0 l_0_15_261)))
 (let ((?x88391 (* ?x88390 l_0_15_265)))
 (let ((?x88387 (* 2.0 l_0_15_260)))
 (let ((?x88388 (* ?x88387 l_0_15_264)))
 (let ((?x9546 (* 2.0 l_0_15_259)))
 (let ((?x88385 (* ?x9546 l_0_15_263)))
 (let ((?x85898 (* l_0_15_15 l_0_15_15)))
 (let ((?x85896 (* l_0_15_14 l_0_15_14)))
 (let ((?x85883 (* l_0_15_13 l_0_15_13)))
 (let ((?x67503 (+ (+ (+ (* l_0_15_11 l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x85883) ?x85896)))
 (let ((?x88399 (- (- (+ (+ (+ (+ (+ ?x67503 ?x85898) ?x88385) ?x88388) ?x88391) ?x88394) ?x88396) ?x88398)))
 (let ((?x88409 (- (- (- (- (- (- (- ?x88399 ?x88400) ?x88402) ?x88404) ?x85920) ?x85922) ?x85924) ?x85926)))
 (= (- ?x88409 ?x85928) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x86009 (* 2.0 l_0_15_51)))
 (let ((?x86010 (* ?x86009 l_0_15_56)))
 (let ((?x86006 (* 2.0 l_0_15_50)))
 (let ((?x86007 (* ?x86006 l_0_15_55)))
 (let ((?x86003 (* 2.0 l_0_15_49)))
 (let ((?x86004 (* ?x86003 l_0_15_54)))
 (let ((?x86000 (* 2.0 l_0_15_48)))
 (let ((?x86001 (* ?x86000 l_0_15_53)))
 (let ((?x85997 (* 2.0 l_0_15_47)))
 (let ((?x85998 (* ?x85997 l_0_15_52)))
 (let ((?x88447 (* 2.0 l_0_15_303)))
 (let ((?x88448 (* ?x88447 l_0_15_308)))
 (let ((?x88444 (* 2.0 l_0_15_302)))
 (let ((?x88445 (* ?x88444 l_0_15_307)))
 (let ((?x88441 (* 2.0 l_0_15_301)))
 (let ((?x88442 (* ?x88441 l_0_15_306)))
 (let ((?x88438 (* 2.0 l_0_15_300)))
 (let ((?x88439 (* ?x88438 l_0_15_305)))
 (let ((?x88435 (* 2.0 l_0_15_299)))
 (let ((?x88436 (* ?x88435 l_0_15_304)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87308 (* ?x87307 l_0_15_302)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87305 (* ?x87304 l_0_15_301)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87302 (* ?x87301 l_0_15_300)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87299 (* ?x87298 l_0_15_299)))
 (let ((?x88393 (* 2.0 l_0_15_262)))
 (let ((?x88429 (* ?x88393 l_0_15_271)))
 (let ((?x88390 (* 2.0 l_0_15_261)))
 (let ((?x88427 (* ?x88390 l_0_15_270)))
 (let ((?x88387 (* 2.0 l_0_15_260)))
 (let ((?x88425 (* ?x88387 l_0_15_269)))
 (let ((?x9546 (* 2.0 l_0_15_259)))
 (let ((?x88423 (* ?x9546 l_0_15_268)))
 (let ((?x85577 (* 2.0 l_0_15_190)))
 (let ((?x85578 (* ?x85577 l_0_15_194)))
 (let ((?x85574 (* 2.0 l_0_15_189)))
 (let ((?x85575 (* ?x85574 l_0_15_193)))
 (let ((?x85571 (* 2.0 l_0_15_188)))
 (let ((?x85572 (* ?x85571 l_0_15_192)))
 (let ((?x85568 (* 2.0 l_0_15_187)))
 (let ((?x85569 (* ?x85568 l_0_15_191)))
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85566 (* ?x85565 l_0_15_158)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85563 (* ?x85562 l_0_15_157)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85560 (* ?x85559 l_0_15_156)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x85557 (* ?x85556 l_0_15_155)))
 (let ((?x85964 (* 2.0 l_0_15_15)))
 (let ((?x85965 (* ?x85964 l_0_15_20)))
 (let ((?x85961 (* 2.0 l_0_15_14)))
 (let ((?x85962 (* ?x85961 l_0_15_19)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x85959 (* ?x85319 l_0_15_18)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x85957 (* ?x84938 l_0_15_17)))
 (let ((?x67708 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_16) ?x85957) ?x85959) ?x85962) ?x85965)))
 (let ((?x88421 (- (- (- (+ (+ (+ (+ ?x67708 ?x85557) ?x85560) ?x85563) ?x85566) ?x85569) ?x85572) ?x85575)))
 (let ((?x88432 (+ (+ (+ (+ (+ (+ (- ?x88421 ?x85578) ?x88423) ?x88425) ?x88427) ?x88429) ?x87299) ?x87302)))
 (let ((?x88449 (- (- (- (- (- (+ (+ ?x88432 ?x87305) ?x87308) ?x88436) ?x88439) ?x88442) ?x88445) ?x88448)))
 (= (- (- (- (- (- ?x88449 ?x85998) ?x86001) ?x86004) ?x86007) ?x86010) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86009 (* 2.0 l_0_15_51)))
 (let ((?x86114 (* ?x86009 l_0_15_62)))
 (let ((?x86006 (* 2.0 l_0_15_50)))
 (let ((?x86112 (* ?x86006 l_0_15_61)))
 (let ((?x86003 (* 2.0 l_0_15_49)))
 (let ((?x86110 (* ?x86003 l_0_15_60)))
 (let ((?x86000 (* 2.0 l_0_15_48)))
 (let ((?x86108 (* ?x86000 l_0_15_59)))
 (let ((?x85997 (* 2.0 l_0_15_47)))
 (let ((?x86106 (* ?x85997 l_0_15_58)))
 (let ((?x88447 (* 2.0 l_0_15_303)))
 (let ((?x88492 (* ?x88447 l_0_15_314)))
 (let ((?x88444 (* 2.0 l_0_15_302)))
 (let ((?x88490 (* ?x88444 l_0_15_313)))
 (let ((?x88441 (* 2.0 l_0_15_301)))
 (let ((?x88488 (* ?x88441 l_0_15_312)))
 (let ((?x88438 (* 2.0 l_0_15_300)))
 (let ((?x88486 (* ?x88438 l_0_15_311)))
 (let ((?x88435 (* 2.0 l_0_15_299)))
 (let ((?x88484 (* ?x88435 l_0_15_310)))
 (let ((?x88393 (* 2.0 l_0_15_262)))
 (let ((?x88482 (* ?x88393 l_0_15_277)))
 (let ((?x88394 (* ?x88393 l_0_15_266)))
 (let ((?x88390 (* 2.0 l_0_15_261)))
 (let ((?x88479 (* ?x88390 l_0_15_276)))
 (let ((?x88391 (* ?x88390 l_0_15_265)))
 (let ((?x88387 (* 2.0 l_0_15_260)))
 (let ((?x88476 (* ?x88387 l_0_15_275)))
 (let ((?x88388 (* ?x88387 l_0_15_264)))
 (let ((?x9546 (* 2.0 l_0_15_259)))
 (let ((?x88473 (* ?x9546 l_0_15_274)))
 (let ((?x88385 (* ?x9546 l_0_15_263)))
 (let ((?x85964 (* 2.0 l_0_15_15)))
 (let ((?x86083 (* ?x85964 l_0_15_26)))
 (let ((?x85961 (* 2.0 l_0_15_14)))
 (let ((?x86079 (* ?x85961 l_0_15_25)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x86064 (* ?x85319 l_0_15_24)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x86060 (* ?x84938 l_0_15_23)))
 (let ((?x88471 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_22) ?x86060) ?x86064) ?x86079) ?x86083)))
 (let ((?x88481 (- (+ (- (+ (- (+ (- ?x88471 ?x88385) ?x88473) ?x88388) ?x88476) ?x88391) ?x88479) ?x88394)))
 (let ((?x88494 (- (- (- (- (- (- (+ ?x88481 ?x88482) ?x88484) ?x88486) ?x88488) ?x88490) ?x88492) ?x86106)))
 (= (- (- (- (- ?x88494 ?x86108) ?x86110) ?x86112) ?x86114) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86009 (* 2.0 l_0_15_51)))
 (let ((?x86221 (* ?x86009 l_0_15_69)))
 (let ((?x86006 (* 2.0 l_0_15_50)))
 (let ((?x86219 (* ?x86006 l_0_15_68)))
 (let ((?x86003 (* 2.0 l_0_15_49)))
 (let ((?x86217 (* ?x86003 l_0_15_67)))
 (let ((?x86000 (* 2.0 l_0_15_48)))
 (let ((?x86215 (* ?x86000 l_0_15_66)))
 (let ((?x85997 (* 2.0 l_0_15_47)))
 (let ((?x86213 (* ?x85997 l_0_15_65)))
 (let ((?x88447 (* 2.0 l_0_15_303)))
 (let ((?x88546 (* ?x88447 l_0_15_321)))
 (let ((?x88444 (* 2.0 l_0_15_302)))
 (let ((?x88544 (* ?x88444 l_0_15_320)))
 (let ((?x88441 (* 2.0 l_0_15_301)))
 (let ((?x88542 (* ?x88441 l_0_15_319)))
 (let ((?x88438 (* 2.0 l_0_15_300)))
 (let ((?x88540 (* ?x88438 l_0_15_318)))
 (let ((?x88435 (* 2.0 l_0_15_299)))
 (let ((?x88538 (* ?x88435 l_0_15_317)))
 (let ((?x88393 (* 2.0 l_0_15_262)))
 (let ((?x88536 (* ?x88393 l_0_15_284)))
 (let ((?x88390 (* 2.0 l_0_15_261)))
 (let ((?x88534 (* ?x88390 l_0_15_283)))
 (let ((?x88387 (* 2.0 l_0_15_260)))
 (let ((?x88532 (* ?x88387 l_0_15_282)))
 (let ((?x9546 (* 2.0 l_0_15_259)))
 (let ((?x88530 (* ?x9546 l_0_15_281)))
 (let ((?x85964 (* 2.0 l_0_15_15)))
 (let ((?x86191 (* ?x85964 l_0_15_33)))
 (let ((?x85961 (* 2.0 l_0_15_14)))
 (let ((?x86189 (* ?x85961 l_0_15_32)))
 (let ((?x85319 (* 2.0 l_0_15_13)))
 (let ((?x86187 (* ?x85319 l_0_15_31)))
 (let ((?x84938 (* 2.0 l_0_15_12)))
 (let ((?x86185 (* ?x84938 l_0_15_30)))
 (let ((?x10911 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_29) ?x86185) ?x86187) ?x86189) ?x86191)))
 (let ((?x88523 (- (- ?x10911 (* (* 2.0 l_0_15_223) l_0_15_227)) (* (* 2.0 l_0_15_224) l_0_15_228))))
 (let ((?x88529 (- (- ?x88523 (* (* 2.0 l_0_15_225) l_0_15_229)) (* (* 2.0 l_0_15_226) l_0_15_230))))
 (let ((?x88543 (- (- (- (+ (+ (+ (+ ?x88529 ?x88530) ?x88532) ?x88534) ?x88536) ?x88538) ?x88540) ?x88542)))
 (let ((?x88552 (- (- (- (- (- (- (- ?x88543 ?x88544) ?x88546) ?x86213) ?x86215) ?x86217) ?x86219) ?x86221)))
 (= ?x88552 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86324 (* l_0_15_57 l_0_15_57)))
 (let ((?x86322 (* l_0_15_56 l_0_15_56)))
 (let ((?x86320 (* l_0_15_55 l_0_15_55)))
 (let ((?x86318 (* l_0_15_54 l_0_15_54)))
 (let ((?x86316 (* l_0_15_53 l_0_15_53)))
 (let ((?x86314 (* l_0_15_52 l_0_15_52)))
 (let ((?x88608 (* l_0_15_309 l_0_15_309)))
 (let ((?x88606 (* l_0_15_308 l_0_15_308)))
 (let ((?x88604 (* l_0_15_307 l_0_15_307)))
 (let ((?x88602 (* l_0_15_306 l_0_15_306)))
 (let ((?x88600 (* l_0_15_305 l_0_15_305)))
 (let ((?x88598 (* l_0_15_304 l_0_15_304)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87375 (* ?x87307 l_0_15_307)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87373 (* ?x87304 l_0_15_306)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87371 (* ?x87301 l_0_15_305)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87369 (* ?x87298 l_0_15_304)))
 (let ((?x86312 (* l_0_15_21 l_0_15_21)))
 (let ((?x86306 (* l_0_15_20 l_0_15_20)))
 (let ((?x85577 (* 2.0 l_0_15_190)))
 (let ((?x85652 (* ?x85577 l_0_15_199)))
 (let ((?x86296 (* l_0_15_19 l_0_15_19)))
 (let ((?x85574 (* 2.0 l_0_15_189)))
 (let ((?x85650 (* ?x85574 l_0_15_198)))
 (let ((?x85571 (* 2.0 l_0_15_188)))
 (let ((?x85648 (* ?x85571 l_0_15_197)))
 (let ((?x85568 (* 2.0 l_0_15_187)))
 (let ((?x85646 (* ?x85568 l_0_15_196)))
 (let ((?x86294 (* l_0_15_18 l_0_15_18)))
 (let ((?x86292 (* l_0_15_17 l_0_15_17)))
 (let ((?x86328 (* l_0_15_16 l_0_15_16)))
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85627 (* ?x85565 l_0_15_163)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85623 (* ?x85562 l_0_15_162)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85619 (* ?x85559 l_0_15_161)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x41354 (* ?x85556 l_0_15_160)))
 (let ((?x88587 (- (+ (+ (+ (+ (+ (+ ?x41354 ?x85619) ?x85623) ?x85627) ?x86328) ?x86292) ?x86294) ?x85646)))
 (let ((?x88594 (+ (+ (+ (- (+ (- (- ?x88587 ?x85648) ?x85650) ?x86296) ?x85652) ?x86306) ?x86312) ?x87369)))
 (let ((?x88605 (- (- (- (- (+ (+ (+ ?x88594 ?x87371) ?x87373) ?x87375) ?x88598) ?x88600) ?x88602) ?x88604)))
 (let ((?x88614 (- (- (- (- (- (- (- ?x88605 ?x88606) ?x88608) ?x86314) ?x86316) ?x86318) ?x86320) ?x86322)))
 (= (- ?x88614 ?x86324) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86446 (* 2.0 l_0_15_57)))
 (let ((?x86447 (* ?x86446 l_0_15_63)))
 (let ((?x86443 (* 2.0 l_0_15_56)))
 (let ((?x86444 (* ?x86443 l_0_15_62)))
 (let ((?x86440 (* 2.0 l_0_15_55)))
 (let ((?x86441 (* ?x86440 l_0_15_61)))
 (let ((?x86437 (* 2.0 l_0_15_54)))
 (let ((?x86438 (* ?x86437 l_0_15_60)))
 (let ((?x86434 (* 2.0 l_0_15_53)))
 (let ((?x86435 (* ?x86434 l_0_15_59)))
 (let ((?x86431 (* 2.0 l_0_15_52)))
 (let ((?x86432 (* ?x86431 l_0_15_58)))
 (let ((?x88640 (* 2.0 l_0_15_309)))
 (let ((?x88641 (* ?x88640 l_0_15_315)))
 (let ((?x88637 (* 2.0 l_0_15_308)))
 (let ((?x88638 (* ?x88637 l_0_15_314)))
 (let ((?x88634 (* 2.0 l_0_15_307)))
 (let ((?x88635 (* ?x88634 l_0_15_313)))
 (let ((?x88631 (* 2.0 l_0_15_306)))
 (let ((?x88632 (* ?x88631 l_0_15_312)))
 (let ((?x88628 (* 2.0 l_0_15_305)))
 (let ((?x88629 (* ?x88628 l_0_15_311)))
 (let ((?x11269 (* 2.0 l_0_15_304)))
 (let ((?x45586 (* ?x11269 l_0_15_310)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87423 (* ?x87307 l_0_15_313)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87421 (* ?x87304 l_0_15_312)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87419 (* ?x87301 l_0_15_311)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87417 (* ?x87298 l_0_15_310)))
 (let ((?x88393 (* 2.0 l_0_15_262)))
 (let ((?x88429 (* ?x88393 l_0_15_271)))
 (let ((?x88390 (* 2.0 l_0_15_261)))
 (let ((?x88427 (* ?x88390 l_0_15_270)))
 (let ((?x88387 (* 2.0 l_0_15_260)))
 (let ((?x88425 (* ?x88387 l_0_15_269)))
 (let ((?x9546 (* 2.0 l_0_15_259)))
 (let ((?x88423 (* ?x9546 l_0_15_268)))
 (let ((?x86428 (* 2.0 l_0_15_21)))
 (let ((?x86429 (* ?x86428 l_0_15_27)))
 (let ((?x86419 (* 2.0 l_0_15_20)))
 (let ((?x86420 (* ?x86419 l_0_15_26)))
 (let ((?x85577 (* 2.0 l_0_15_190)))
 (let ((?x85721 (* ?x85577 l_0_15_205)))
 (let ((?x86404 (* 2.0 l_0_15_19)))
 (let ((?x86405 (* ?x86404 l_0_15_25)))
 (let ((?x85574 (* 2.0 l_0_15_189)))
 (let ((?x85719 (* ?x85574 l_0_15_204)))
 (let ((?x85571 (* 2.0 l_0_15_188)))
 (let ((?x85717 (* ?x85571 l_0_15_203)))
 (let ((?x85568 (* 2.0 l_0_15_187)))
 (let ((?x85715 (* ?x85568 l_0_15_202)))
 (let ((?x40931 (* 2.0 l_0_15_18)))
 (let ((?x86402 (* ?x40931 l_0_15_24)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x86400 (* ?x85010 l_0_15_23)))
 (let ((?x85007 (* 2.0 l_0_15_16)))
 (let ((?x86380 (* ?x85007 l_0_15_22)))
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85713 (* ?x85565 l_0_15_169)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85711 (* ?x85562 l_0_15_168)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85709 (* ?x85559 l_0_15_167)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x85707 (* ?x85556 l_0_15_166)))
 (let ((?x11318 (- (+ (+ (+ (+ (+ (+ ?x85707 ?x85709) ?x85711) ?x85713) ?x86380) ?x86400) ?x86402) ?x85715)))
 (let ((?x68526 (- (+ (+ (- (+ (- (- ?x11318 ?x85717) ?x85719) ?x86405) ?x85721) ?x86420) ?x86429) ?x88423)))
 (let ((?x45584 (+ (+ (+ (+ (- (- (- ?x68526 ?x88425) ?x88427) ?x88429) ?x87417) ?x87419) ?x87421) ?x87423)))
 (let ((?x88643 (- (- (- (- (- (- (- ?x45584 ?x45586) ?x88629) ?x88632) ?x88635) ?x88638) ?x88641) ?x86432)))
 (= (- (- (- (- (- ?x88643 ?x86435) ?x86438) ?x86441) ?x86444) ?x86447) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86446 (* 2.0 l_0_15_57)))
 (let ((?x86601 (* ?x86446 l_0_15_70)))
 (let ((?x86443 (* 2.0 l_0_15_56)))
 (let ((?x86599 (* ?x86443 l_0_15_69)))
 (let ((?x86440 (* 2.0 l_0_15_55)))
 (let ((?x86597 (* ?x86440 l_0_15_68)))
 (let ((?x86437 (* 2.0 l_0_15_54)))
 (let ((?x86595 (* ?x86437 l_0_15_67)))
 (let ((?x86434 (* 2.0 l_0_15_53)))
 (let ((?x86593 (* ?x86434 l_0_15_66)))
 (let ((?x86431 (* 2.0 l_0_15_52)))
 (let ((?x86591 (* ?x86431 l_0_15_65)))
 (let ((?x88640 (* 2.0 l_0_15_309)))
 (let ((?x88693 (* ?x88640 l_0_15_322)))
 (let ((?x88637 (* 2.0 l_0_15_308)))
 (let ((?x88691 (* ?x88637 l_0_15_321)))
 (let ((?x88634 (* 2.0 l_0_15_307)))
 (let ((?x88689 (* ?x88634 l_0_15_320)))
 (let ((?x88631 (* 2.0 l_0_15_306)))
 (let ((?x88687 (* ?x88631 l_0_15_319)))
 (let ((?x88628 (* 2.0 l_0_15_305)))
 (let ((?x88685 (* ?x88628 l_0_15_318)))
 (let ((?x11269 (* 2.0 l_0_15_304)))
 (let ((?x88683 (* ?x11269 l_0_15_317)))
 (let ((?x87307 (* 2.0 l_0_15_298)))
 (let ((?x87466 (* ?x87307 l_0_15_320)))
 (let ((?x87304 (* 2.0 l_0_15_297)))
 (let ((?x87464 (* ?x87304 l_0_15_319)))
 (let ((?x87301 (* 2.0 l_0_15_296)))
 (let ((?x87462 (* ?x87301 l_0_15_318)))
 (let ((?x87298 (* 2.0 l_0_15_295)))
 (let ((?x87460 (* ?x87298 l_0_15_317)))
 (let ((?x86428 (* 2.0 l_0_15_21)))
 (let ((?x86589 (* ?x86428 l_0_15_34)))
 (let ((?x86419 (* 2.0 l_0_15_20)))
 (let ((?x86583 (* ?x86419 l_0_15_33)))
 (let ((?x85577 (* 2.0 l_0_15_190)))
 (let ((?x85825 (* ?x85577 l_0_15_212)))
 (let ((?x86404 (* 2.0 l_0_15_19)))
 (let ((?x86573 (* ?x86404 l_0_15_32)))
 (let ((?x85574 (* 2.0 l_0_15_189)))
 (let ((?x85823 (* ?x85574 l_0_15_211)))
 (let ((?x85571 (* 2.0 l_0_15_188)))
 (let ((?x85821 (* ?x85571 l_0_15_210)))
 (let ((?x85568 (* 2.0 l_0_15_187)))
 (let ((?x85819 (* ?x85568 l_0_15_209)))
 (let ((?x40931 (* 2.0 l_0_15_18)))
 (let ((?x86571 (* ?x40931 l_0_15_31)))
 (let ((?x85010 (* 2.0 l_0_15_17)))
 (let ((?x86569 (* ?x85010 l_0_15_30)))
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85817 (* ?x85565 l_0_15_176)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85815 (* ?x85562 l_0_15_175)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85813 (* ?x85559 l_0_15_174)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x41584 (* ?x85556 l_0_15_173)))
 (let ((?x68720 (+ (+ (+ (+ ?x41584 ?x85813) ?x85815) ?x85817) (* (* 2.0 l_0_15_16) l_0_15_29))))
 (let ((?x88668 (- (+ (- (- (- (+ (+ ?x68720 ?x86569) ?x86571) ?x85819) ?x85821) ?x85823) ?x86573) ?x85825)))
 (let ((?x88674 (- (- (+ (+ ?x88668 ?x86583) ?x86589) (* (* 2.0 l_0_15_223) l_0_15_232)) (* (* 2.0 l_0_15_224) l_0_15_233))))
 (let ((?x88678 (- (- ?x88674 (* (* 2.0 l_0_15_225) l_0_15_234)) (* (* 2.0 l_0_15_226) l_0_15_235))))
 (let ((?x88688 (- (- (- (+ (+ (+ (+ ?x88678 ?x87460) ?x87462) ?x87464) ?x87466) ?x88683) ?x88685) ?x88687)))
 (let ((?x88698 (- (- (- (- (- (- (- ?x88688 ?x88689) ?x88691) ?x88693) ?x86591) ?x86593) ?x86595) ?x86597)))
 (= (- (- ?x88698 ?x86599) ?x86601) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x86720 (* l_0_15_64 l_0_15_64)))
 (let ((?x86718 (* l_0_15_63 l_0_15_63)))
 (let ((?x86716 (* l_0_15_62 l_0_15_62)))
 (let ((?x86714 (* l_0_15_61 l_0_15_61)))
 (let ((?x86712 (* l_0_15_60 l_0_15_60)))
 (let ((?x86710 (* l_0_15_59 l_0_15_59)))
 (let ((?x86708 (* l_0_15_58 l_0_15_58)))
 (let ((?x88734 (* l_0_15_316 l_0_15_316)))
 (let ((?x88732 (* l_0_15_315 l_0_15_315)))
 (let ((?x88730 (* l_0_15_314 l_0_15_314)))
 (let ((?x88728 (* l_0_15_313 l_0_15_313)))
 (let ((?x88726 (* l_0_15_312 l_0_15_312)))
 (let ((?x88724 (* l_0_15_311 l_0_15_311)))
 (let ((?x88722 (* l_0_15_310 l_0_15_310)))
 (let ((?x86706 (* l_0_15_28 l_0_15_28)))
 (let ((?x86704 (* l_0_15_27 l_0_15_27)))
 (let ((?x88393 (* 2.0 l_0_15_262)))
 (let ((?x88482 (* ?x88393 l_0_15_277)))
 (let ((?x88390 (* 2.0 l_0_15_261)))
 (let ((?x88479 (* ?x88390 l_0_15_276)))
 (let ((?x88387 (* 2.0 l_0_15_260)))
 (let ((?x88476 (* ?x88387 l_0_15_275)))
 (let ((?x86702 (* l_0_15_26 l_0_15_26)))
 (let ((?x9546 (* 2.0 l_0_15_259)))
 (let ((?x88473 (* ?x9546 l_0_15_274)))
 (let ((?x86700 (* l_0_15_25 l_0_15_25)))
 (let ((?x86698 (* l_0_15_24 l_0_15_24)))
 (let ((?x46044 (+ (+ (+ (* l_0_15_22 l_0_15_22) (* l_0_15_23 l_0_15_23)) ?x86698) ?x86700)))
 (let ((?x88721 (+ (+ (- (- (- (+ (- ?x46044 ?x88473) ?x86702) ?x88476) ?x88479) ?x88482) ?x86704) ?x86706)))
 (let ((?x88735 (- (- (- (- (- (- (- ?x88721 ?x88722) ?x88724) ?x88726) ?x88728) ?x88730) ?x88732) ?x88734)))
 (let ((?x88742 (- (- (- (- (- (- (- ?x88735 ?x86708) ?x86710) ?x86712) ?x86714) ?x86716) ?x86718) ?x86720)))
 (= ?x88742 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x86877 (* (* 2.0 l_0_15_64) l_0_15_71)))
 (let ((?x86874 (* (* 2.0 l_0_15_63) l_0_15_70)))
 (let ((?x86871 (* (* 2.0 l_0_15_62) l_0_15_69)))
 (let ((?x86868 (* (* 2.0 l_0_15_61) l_0_15_68)))
 (let ((?x86865 (* (* 2.0 l_0_15_60) l_0_15_67)))
 (let ((?x86862 (* (* 2.0 l_0_15_59) l_0_15_66)))
 (let ((?x86859 (* (* 2.0 l_0_15_58) l_0_15_65)))
 (let ((?x88775 (* (* 2.0 l_0_15_316) l_0_15_323)))
 (let ((?x88772 (* (* 2.0 l_0_15_315) l_0_15_322)))
 (let ((?x88769 (* (* 2.0 l_0_15_314) l_0_15_321)))
 (let ((?x88766 (* (* 2.0 l_0_15_313) l_0_15_320)))
 (let ((?x88763 (* (* 2.0 l_0_15_312) l_0_15_319)))
 (let ((?x88760 (* (* 2.0 l_0_15_311) l_0_15_318)))
 (let ((?x88757 (* (* 2.0 l_0_15_310) l_0_15_317)))
 (let ((?x86856 (* (* 2.0 l_0_15_28) l_0_15_35)))
 (let ((?x86853 (* (* 2.0 l_0_15_27) l_0_15_34)))
 (let ((?x88393 (* 2.0 l_0_15_262)))
 (let ((?x88536 (* ?x88393 l_0_15_284)))
 (let ((?x88390 (* 2.0 l_0_15_261)))
 (let ((?x88534 (* ?x88390 l_0_15_283)))
 (let ((?x88387 (* 2.0 l_0_15_260)))
 (let ((?x88532 (* ?x88387 l_0_15_282)))
 (let ((?x86850 (* (* 2.0 l_0_15_26) l_0_15_33)))
 (let ((?x9546 (* 2.0 l_0_15_259)))
 (let ((?x88530 (* ?x9546 l_0_15_281)))
 (let ((?x86847 (* (* 2.0 l_0_15_25) l_0_15_32)))
 (let ((?x85428 (* 2.0 l_0_15_24)))
 (let ((?x86844 (* ?x85428 l_0_15_31)))
 (let ((?x85111 (* 2.0 l_0_15_23)))
 (let ((?x86842 (* ?x85111 l_0_15_30)))
 (let ((?x85423 (* 2.0 l_0_15_22)))
 (let ((?x86840 (* ?x85423 l_0_15_29)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x84842 (* ?x39892 l_0_15_152)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x87854 (* ?x84941 l_0_15_151)))
 (let ((?x11890 (+ (* (* 1.0 l_0_15_110) l_0_15_115) (* (* 1.0 l_0_15_111) l_0_15_116))))
 (let ((?x11846 (- (+ (- (- ?x11890 ?x87854) ?x84842) ?x86840) (* (* 2.0 l_0_15_223) l_0_15_238))))
 (let ((?x68984 (- (- ?x11846 (* (* 2.0 l_0_15_224) l_0_15_239)) (* (* 2.0 l_0_15_225) l_0_15_240))))
 (let ((?x88748 (+ (+ (+ (- ?x68984 (* (* 2.0 l_0_15_226) l_0_15_241)) ?x86842) ?x86844) ?x86847)))
 (let ((?x88755 (+ (+ (- (- (- (+ (- ?x88748 ?x88530) ?x86850) ?x88532) ?x88534) ?x88536) ?x86853) ?x86856)))
 (let ((?x88776 (- (- (- (- (- (- (- ?x88755 ?x88757) ?x88760) ?x88763) ?x88766) ?x88769) ?x88772) ?x88775)))
 (let ((?x88783 (- (- (- (- (- (- (- ?x88776 ?x86859) ?x86862) ?x86865) ?x86868) ?x86871) ?x86874) ?x86877)))
 (let ((?x88787 (- (- ?x88783 (* (* 1.0 l_0_15_74) l_0_15_79)) (* (* 1.0 l_0_15_75) l_0_15_80))))
 (= ?x88787 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x87038 (* l_0_15_72 l_0_15_72)))
 (let ((?x87036 (* l_0_15_71 l_0_15_71)))
 (let ((?x87034 (* l_0_15_70 l_0_15_70)))
 (let ((?x87032 (* l_0_15_69 l_0_15_69)))
 (let ((?x87030 (* l_0_15_68 l_0_15_68)))
 (let ((?x87028 (* l_0_15_67 l_0_15_67)))
 (let ((?x87026 (* l_0_15_66 l_0_15_66)))
 (let ((?x87024 (* l_0_15_65 l_0_15_65)))
 (let ((?x87022 (* l_0_15_36 l_0_15_36)))
 (let ((?x87020 (* l_0_15_35 l_0_15_35)))
 (let ((?x87018 (* l_0_15_34 l_0_15_34)))
 (let ((?x87016 (* l_0_15_33 l_0_15_33)))
 (let ((?x88840 (* l_0_15_324 l_0_15_324)))
 (let ((?x88838 (* l_0_15_323 l_0_15_323)))
 (let ((?x88836 (* l_0_15_322 l_0_15_322)))
 (let ((?x88834 (* l_0_15_321 l_0_15_321)))
 (let ((?x88832 (* l_0_15_320 l_0_15_320)))
 (let ((?x87014 (* l_0_15_32 l_0_15_32)))
 (let ((?x88829 (* l_0_15_319 l_0_15_319)))
 (let ((?x88827 (* l_0_15_318 l_0_15_318)))
 (let ((?x41885 (* l_0_15_317 l_0_15_317)))
 (let ((?x87012 (* l_0_15_31 l_0_15_31)))
 (let ((?x87010 (* l_0_15_30 l_0_15_30)))
 (let ((?x87008 (* l_0_15_29 l_0_15_29)))
 (let ((?x69209 (- (* (* (- 2.0) l_0_15_223) l_0_15_245) (* (* 2.0 l_0_15_224) l_0_15_246))))
 (let ((?x69227 (- (- ?x69209 (* (* 2.0 l_0_15_225) l_0_15_247)) (* (* 2.0 l_0_15_226) l_0_15_248))))
 (let ((?x88831 (+ (- (- (- (+ (+ (+ ?x69227 ?x87008) ?x87010) ?x87012) ?x41885) ?x88827) ?x88829) ?x87014)))
 (let ((?x88843 (+ (+ (- (- (- (- (- ?x88831 ?x88832) ?x88834) ?x88836) ?x88838) ?x88840) ?x87016) ?x87018)))
 (let ((?x88850 (- (- (- (- (- (+ (+ ?x88843 ?x87020) ?x87022) ?x87024) ?x87026) ?x87028) ?x87030) ?x87032)))
 (= (- (- (- ?x88850 ?x87034) ?x87036) ?x87038) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x84409 (* l_0_15_145 l_0_15_145)))
 (let ((?x69292 (* l_0_15_109 l_0_15_109)))
 (let ((?x42526 (* (/ 1.0 2.0) ?x69292)))
 (= (- (- ?x42526 ?x84409) (* (* (/ 1.0 2.0) l_0_15_73) l_0_15_73)) 0.0)))))
(assert
 (let ((?x88775 (* (* 2.0 l_0_15_316) l_0_15_323)))
 (let ((?x88772 (* (* 2.0 l_0_15_315) l_0_15_322)))
 (let ((?x88769 (* (* 2.0 l_0_15_314) l_0_15_321)))
 (let ((?x88766 (* (* 2.0 l_0_15_313) l_0_15_320)))
 (let ((?x88763 (* (* 2.0 l_0_15_312) l_0_15_319)))
 (let ((?x88760 (* (* 2.0 l_0_15_311) l_0_15_318)))
 (let ((?x88757 (* (* 2.0 l_0_15_310) l_0_15_317)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x88917 (* ?x87293 l_0_15_281)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84447 (* ?x84446 l_0_15_146)))
 (let ((?x12088 (+ (* (* 2.0 l_0_15_100) l_0_15_107) (* (* 2.0 l_0_15_101) l_0_15_94))))
 (let ((?x46452 (+ (+ ?x12088 (* (* 2.0 l_0_15_102) l_0_15_95)) (* (* 2.0 l_0_15_103) l_0_15_96))))
 (let ((?x88887 (+ (+ ?x46452 (* (* 2.0 l_0_15_104) l_0_15_97)) (* (* 2.0 l_0_15_105) l_0_15_98))))
 (let ((?x88892 (+ (+ ?x88887 (* (* 2.0 l_0_15_106) l_0_15_99)) (* (* 1.0 l_0_15_109) l_0_15_110))))
 (let ((?x88898 (- (- ?x88892 (* (* 2.0 l_0_15_130) l_0_15_137)) (* (* 2.0 l_0_15_131) l_0_15_138))))
 (let ((?x88904 (- (- ?x88898 (* (* 2.0 l_0_15_132) l_0_15_139)) (* (* 2.0 l_0_15_133) l_0_15_140))))
 (let ((?x88910 (- (- ?x88904 (* (* 2.0 l_0_15_134) l_0_15_141)) (* (* 2.0 l_0_15_135) l_0_15_142))))
 (let ((?x88916 (- (- (- ?x88910 (* (* 2.0 l_0_15_136) l_0_15_143)) ?x84447) (* (* 2.0 l_0_15_217) l_0_15_238))))
 (let ((?x88924 (- (- (- (- (- (- (- ?x88916 ?x88917) ?x88757) ?x88760) ?x88763) ?x88766) ?x88769) ?x88772)))
 (= (- (- ?x88924 ?x88775) (* (* 1.0 l_0_15_73) l_0_15_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84519 (* ?x84446 l_0_15_151)))
 (let ((?x88976 (- (- (* (* 1.0 l_0_15_109) l_0_15_115) ?x84519) (* (* 1.0 l_0_15_73) l_0_15_79))))
 (= ?x88976 0.0)))))
(assert
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x39574 (* ?x84446 l_0_15_155)))
 (let ((?x88987 (- (- (* (* 1.0 l_0_15_109) l_0_15_119) ?x39574) (* (* 1.0 l_0_15_73) l_0_15_83))))
 (= ?x88987 0.0)))))
(assert
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84546 (* ?x84446 l_0_15_160)))
 (let ((?x88998 (- (- (* (* 1.0 l_0_15_109) l_0_15_124) ?x84546) (* (* 1.0 l_0_15_73) l_0_15_88))))
 (= ?x88998 0.0)))))
(assert
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84577 (* ?x84446 l_0_15_166)))
 (let ((?x89009 (- (- (* (* 1.0 l_0_15_109) l_0_15_130) ?x84577) (* (* 1.0 l_0_15_73) l_0_15_94))))
 (= ?x89009 0.0)))))
(assert
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84609 (* ?x84446 l_0_15_173)))
 (let ((?x89019 (+ (* (* (- 1.0) l_0_15_101) l_0_15_73) (* (* 1.0 l_0_15_109) l_0_15_137))))
 (= (- ?x89019 ?x84609) 0.0)))))
(assert
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x89040 (* ?x65259 l_0_15_282)))
 (let ((?x44458 (* 2.0 l_0_15_254)))
 (let ((?x89038 (* ?x44458 l_0_15_281)))
 (let ((?x84630 (* l_0_15_147 l_0_15_147)))
 (let ((?x84715 (* l_0_15_146 l_0_15_146)))
 (let ((?x89031 (+ (* (/ 1.0 2.0) (* l_0_15_110 l_0_15_110)) (* (/ 1.0 2.0) (* l_0_15_111 l_0_15_111)))))
 (let ((?x89037 (- (- (- (- ?x89031 ?x84715) ?x84630) (* (* 2.0 l_0_15_218) l_0_15_238)) (* (* 2.0 l_0_15_219) l_0_15_239))))
 (let ((?x89047 (- (- (- (- ?x89037 ?x89038) ?x89040) (* (* 2.0 l_0_15_346) l_0_15_353)) (* (* 2.0 l_0_15_347) l_0_15_354))))
 (let ((?x89053 (- (- ?x89047 (* (* 2.0 l_0_15_348) l_0_15_355)) (* (* 2.0 l_0_15_349) l_0_15_356))))
 (let ((?x89059 (- (- ?x89053 (* (* 2.0 l_0_15_350) l_0_15_357)) (* (* 2.0 l_0_15_351) l_0_15_358))))
 (let ((?x89065 (- (- ?x89059 (* (* 2.0 l_0_15_352) l_0_15_359)) (* (* 2.0 l_0_15_382) l_0_15_389))))
 (let ((?x89071 (- (- ?x89065 (* (* 2.0 l_0_15_383) l_0_15_390)) (* (* 2.0 l_0_15_384) l_0_15_391))))
 (let ((?x89077 (- (- ?x89071 (* (* 2.0 l_0_15_385) l_0_15_392)) (* (* 2.0 l_0_15_386) l_0_15_393))))
 (let ((?x89083 (- (- ?x89077 (* (* 2.0 l_0_15_387) l_0_15_394)) (* (* 2.0 l_0_15_388) l_0_15_395))))
 (let ((?x89089 (- (- ?x89083 (* (* 2.0 l_0_15_418) l_0_15_425)) (* (* 2.0 l_0_15_419) l_0_15_426))))
 (let ((?x89095 (- (- ?x89089 (* (* 2.0 l_0_15_420) l_0_15_427)) (* (* 2.0 l_0_15_421) l_0_15_428))))
 (let ((?x89101 (- (- ?x89095 (* (* 2.0 l_0_15_422) l_0_15_429)) (* (* 2.0 l_0_15_423) l_0_15_430))))
 (let ((?x89107 (- (- ?x89101 (* (* 2.0 l_0_15_424) l_0_15_431)) (* (* 2.0 l_0_15_454) l_0_15_461))))
 (let ((?x89113 (- (- ?x89107 (* (* 2.0 l_0_15_455) l_0_15_462)) (* (* 2.0 l_0_15_456) l_0_15_463))))
 (let ((?x89119 (- (- ?x89113 (* (* 2.0 l_0_15_457) l_0_15_464)) (* (* 2.0 l_0_15_458) l_0_15_465))))
 (let ((?x89125 (- (- ?x89119 (* (* 2.0 l_0_15_459) l_0_15_466)) (* (* 2.0 l_0_15_460) l_0_15_467))))
 (let ((?x89131 (- (- ?x89125 (* (* 2.0 l_0_15_490) l_0_15_497)) (* (* 2.0 l_0_15_491) l_0_15_498))))
 (let ((?x89137 (- (- ?x89131 (* (* 2.0 l_0_15_492) l_0_15_499)) (* (* 2.0 l_0_15_493) l_0_15_500))))
 (let ((?x89143 (- (- ?x89137 (* (* 2.0 l_0_15_494) l_0_15_501)) (* (* 2.0 l_0_15_495) l_0_15_502))))
 (let ((?x89149 (- (- ?x89143 (* (* 2.0 l_0_15_496) l_0_15_503)) (* (* 2.0 l_0_15_526) l_0_15_533))))
 (let ((?x89155 (- (- ?x89149 (* (* 2.0 l_0_15_527) l_0_15_534)) (* (* 2.0 l_0_15_528) l_0_15_535))))
 (let ((?x89161 (- (- ?x89155 (* (* 2.0 l_0_15_529) l_0_15_536)) (* (* 2.0 l_0_15_530) l_0_15_537))))
 (let ((?x89167 (- (- ?x89161 (* (* 2.0 l_0_15_531) l_0_15_538)) (* (* 2.0 l_0_15_532) l_0_15_539))))
 (let ((?x89173 (- (- ?x89167 (* (* 2.0 l_0_15_562) l_0_15_569)) (* (* 2.0 l_0_15_563) l_0_15_570))))
 (let ((?x89179 (- (- ?x89173 (* (* 2.0 l_0_15_564) l_0_15_571)) (* (* 2.0 l_0_15_565) l_0_15_572))))
 (let ((?x89185 (- (- ?x89179 (* (* 2.0 l_0_15_566) l_0_15_573)) (* (* 2.0 l_0_15_567) l_0_15_574))))
 (let ((?x89191 (- (- ?x89185 (* (* 2.0 l_0_15_568) l_0_15_575)) (* (* (/ 1.0 2.0) l_0_15_74) l_0_15_74))))
 (= (- ?x89191 (* (* (/ 1.0 2.0) l_0_15_75) l_0_15_75)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x89388 (* (* 2.0 l_0_15_280) l_0_15_287)))
 (let ((?x89385 (* (* 2.0 l_0_15_279) l_0_15_286)))
 (let ((?x89382 (* (* 2.0 l_0_15_278) l_0_15_285)))
 (let ((?x89379 (* (* 2.0 l_0_15_277) l_0_15_284)))
 (let ((?x89376 (* (* 2.0 l_0_15_276) l_0_15_283)))
 (let ((?x89373 (* (* 2.0 l_0_15_275) l_0_15_282)))
 (let ((?x89370 (* (* 2.0 l_0_15_274) l_0_15_281)))
 (let ((?x89366 (* 2.0 l_0_15_267)))
 (let ((?x89367 (* ?x89366 l_0_15_285)))
 (let ((?x89363 (* 2.0 l_0_15_266)))
 (let ((?x89364 (* ?x89363 l_0_15_284)))
 (let ((?x89360 (* 2.0 l_0_15_265)))
 (let ((?x89361 (* ?x89360 l_0_15_283)))
 (let ((?x89357 (* 2.0 l_0_15_264)))
 (let ((?x89358 (* ?x89357 l_0_15_282)))
 (let ((?x89354 (* 2.0 l_0_15_263)))
 (let ((?x89355 (* ?x89354 l_0_15_281)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x84944 (* ?x39892 l_0_15_156)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x84942 (* ?x84941 l_0_15_155)))
 (let ((?x89336 (+ (* (* 1.0 l_0_15_110) l_0_15_119) (* (* 1.0 l_0_15_111) l_0_15_120))))
 (let ((?x89344 (- (- (- (- ?x89336 ?x84942) ?x84944) (* (* 2.0 l_0_15_227) l_0_15_238)) (* (* 2.0 l_0_15_228) l_0_15_239))))
 (let ((?x89350 (- (- ?x89344 (* (* 2.0 l_0_15_229) l_0_15_240)) (* (* 2.0 l_0_15_230) l_0_15_241))))
 (let ((?x89362 (- (- (- (- ?x89350 (* (* 2.0 l_0_15_231) l_0_15_242)) ?x89355) ?x89358) ?x89361)))
 (let ((?x89383 (+ (+ (+ (+ (+ (- (- ?x89362 ?x89364) ?x89367) ?x89370) ?x89373) ?x89376) ?x89379) ?x89382)))
 (let ((?x89393 (- (- (+ (+ ?x89383 ?x89385) ?x89388) (* (* 1.0 l_0_15_74) l_0_15_83)) (* (* 1.0 l_0_15_75) l_0_15_84))))
 (= ?x89393 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x88775 (* (* 2.0 l_0_15_316) l_0_15_323)))
 (let ((?x88772 (* (* 2.0 l_0_15_315) l_0_15_322)))
 (let ((?x88769 (* (* 2.0 l_0_15_314) l_0_15_321)))
 (let ((?x88766 (* (* 2.0 l_0_15_313) l_0_15_320)))
 (let ((?x88763 (* (* 2.0 l_0_15_312) l_0_15_319)))
 (let ((?x88760 (* (* 2.0 l_0_15_311) l_0_15_318)))
 (let ((?x88757 (* (* 2.0 l_0_15_310) l_0_15_317)))
 (let ((?x89487 (* 2.0 l_0_15_273)))
 (let ((?x89488 (* ?x89487 l_0_15_286)))
 (let ((?x89484 (* 2.0 l_0_15_272)))
 (let ((?x89485 (* ?x89484 l_0_15_285)))
 (let ((?x89481 (* 2.0 l_0_15_271)))
 (let ((?x89482 (* ?x89481 l_0_15_284)))
 (let ((?x89478 (* 2.0 l_0_15_270)))
 (let ((?x89479 (* ?x89478 l_0_15_283)))
 (let ((?x89475 (* 2.0 l_0_15_269)))
 (let ((?x89476 (* ?x89475 l_0_15_282)))
 (let ((?x89472 (* 2.0 l_0_15_268)))
 (let ((?x89473 (* ?x89472 l_0_15_281)))
 (let ((?x86838 (* (* 2.0 l_0_15_208) l_0_15_215)))
 (let ((?x86835 (* (* 2.0 l_0_15_207) l_0_15_214)))
 (let ((?x86832 (* (* 2.0 l_0_15_206) l_0_15_213)))
 (let ((?x86829 (* (* 2.0 l_0_15_205) l_0_15_212)))
 (let ((?x86826 (* (* 2.0 l_0_15_204) l_0_15_211)))
 (let ((?x86823 (* (* 2.0 l_0_15_203) l_0_15_210)))
 (let ((?x86820 (* (* 2.0 l_0_15_202) l_0_15_209)))
 (let ((?x86817 (* (* 2.0 l_0_15_172) l_0_15_179)))
 (let ((?x86814 (* (* 2.0 l_0_15_171) l_0_15_178)))
 (let ((?x86811 (* (* 2.0 l_0_15_170) l_0_15_177)))
 (let ((?x86808 (* (* 2.0 l_0_15_169) l_0_15_176)))
 (let ((?x86805 (* (* 2.0 l_0_15_168) l_0_15_175)))
 (let ((?x86802 (* (* 2.0 l_0_15_167) l_0_15_174)))
 (let ((?x86799 (* (* 2.0 l_0_15_166) l_0_15_173)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x40263 (* ?x39892 l_0_15_161)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x89437 (* ?x84941 l_0_15_160)))
 (let ((?x89436 (+ (* (* 1.0 l_0_15_110) l_0_15_124) (* (* 1.0 l_0_15_111) l_0_15_125))))
 (let ((?x89444 (+ (+ (+ (+ (+ (- (- ?x89436 ?x89437) ?x40263) ?x86799) ?x86802) ?x86805) ?x86808) ?x86811)))
 (let ((?x89451 (- (- (- (- (- (+ (+ ?x89444 ?x86814) ?x86817) ?x86820) ?x86823) ?x86826) ?x86829) ?x86832)))
 (let ((?x89459 (- (- (- (- ?x89451 ?x86835) ?x86838) (* (* 2.0 l_0_15_232) l_0_15_238)) (* (* 2.0 l_0_15_233) l_0_15_239))))
 (let ((?x89465 (- (- ?x89459 (* (* 2.0 l_0_15_234) l_0_15_240)) (* (* 2.0 l_0_15_235) l_0_15_241))))
 (let ((?x89471 (- (- ?x89465 (* (* 2.0 l_0_15_236) l_0_15_242)) (* (* 2.0 l_0_15_237) l_0_15_243))))
 (let ((?x89490 (+ (- (- (- (- (- (- ?x89471 ?x89473) ?x89476) ?x89479) ?x89482) ?x89485) ?x89488) ?x88757)))
 (let ((?x89498 (- (+ (+ (+ (+ (+ (+ ?x89490 ?x88760) ?x88763) ?x88766) ?x88769) ?x88772) ?x88775) (* (* 1.0 l_0_15_74) l_0_15_88))))
 (= (- ?x89498 (* (* 1.0 l_0_15_75) l_0_15_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x89388 (* (* 2.0 l_0_15_280) l_0_15_287)))
 (let ((?x89385 (* (* 2.0 l_0_15_279) l_0_15_286)))
 (let ((?x89382 (* (* 2.0 l_0_15_278) l_0_15_285)))
 (let ((?x89379 (* (* 2.0 l_0_15_277) l_0_15_284)))
 (let ((?x89376 (* (* 2.0 l_0_15_276) l_0_15_283)))
 (let ((?x89373 (* (* 2.0 l_0_15_275) l_0_15_282)))
 (let ((?x89370 (* (* 2.0 l_0_15_274) l_0_15_281)))
 (let ((?x89547 (* l_0_15_244 l_0_15_244)))
 (let ((?x89545 (* l_0_15_243 l_0_15_243)))
 (let ((?x89543 (* l_0_15_242 l_0_15_242)))
 (let ((?x89541 (* l_0_15_241 l_0_15_241)))
 (let ((?x89539 (* l_0_15_240 l_0_15_240)))
 (let ((?x89537 (* l_0_15_239 l_0_15_239)))
 (let ((?x89535 (* l_0_15_238 l_0_15_238)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x85097 (* ?x39892 l_0_15_167)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x85094 (* ?x84941 l_0_15_166)))
 (let ((?x89532 (+ (* (* 1.0 l_0_15_110) l_0_15_130) (* (* 1.0 l_0_15_111) l_0_15_131))))
 (let ((?x89544 (- (- (- (- (- (- (- ?x89532 ?x85094) ?x85097) ?x89535) ?x89537) ?x89539) ?x89541) ?x89543)))
 (let ((?x89553 (- (- (- (- (- (- (- ?x89544 ?x89545) ?x89547) ?x89370) ?x89373) ?x89376) ?x89379) ?x89382)))
 (let ((?x89559 (- (- (- (- ?x89553 ?x89385) ?x89388) (* (* 1.0 l_0_15_74) l_0_15_94)) (* (* 1.0 l_0_15_75) l_0_15_95))))
 (= ?x89559 0.0))))))))))))))))))))))))
(assert
 (let ((?x89628 (* l_0_15_288 l_0_15_288)))
 (let ((?x89626 (* l_0_15_287 l_0_15_287)))
 (let ((?x89624 (* l_0_15_286 l_0_15_286)))
 (let ((?x89622 (* l_0_15_285 l_0_15_285)))
 (let ((?x89620 (* l_0_15_284 l_0_15_284)))
 (let ((?x89618 (* l_0_15_283 l_0_15_283)))
 (let ((?x89616 (* l_0_15_282 l_0_15_282)))
 (let ((?x89614 (* l_0_15_281 l_0_15_281)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x85170 (* ?x39892 l_0_15_174)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x89590 (* ?x84941 l_0_15_173)))
 (let ((?x89585 (- (* (* (- 1.0) l_0_15_101) l_0_15_74) (* (* 1.0 l_0_15_102) l_0_15_75))))
 (let ((?x89589 (+ (+ ?x89585 (* (* 1.0 l_0_15_110) l_0_15_137)) (* (* 1.0 l_0_15_111) l_0_15_138))))
 (let ((?x89598 (- (- (- (- ?x89589 ?x89590) ?x85170) (* (* 2.0 l_0_15_238) l_0_15_245)) (* (* 2.0 l_0_15_239) l_0_15_246))))
 (let ((?x89604 (- (- ?x89598 (* (* 2.0 l_0_15_240) l_0_15_247)) (* (* 2.0 l_0_15_241) l_0_15_248))))
 (let ((?x89610 (- (- ?x89604 (* (* 2.0 l_0_15_242) l_0_15_249)) (* (* 2.0 l_0_15_243) l_0_15_250))))
 (let ((?x89619 (- (- (- (- ?x89610 (* (* 2.0 l_0_15_244) l_0_15_251)) ?x89614) ?x89616) ?x89618)))
 (= (- (- (- (- (- ?x89619 ?x89620) ?x89622) ?x89624) ?x89626) ?x89628) 0.0))))))))))))))))))))
(assert
 (let ((?x64092 (* l_0_15_154 l_0_15_154)))
 (let ((?x41121 (* l_0_15_153 l_0_15_153)))
 (let ((?x41135 (* l_0_15_152 l_0_15_152)))
 (let ((?x41131 (* l_0_15_151 l_0_15_151)))
 (let ((?x45287 (+ (* (/ 1.0 2.0) (* l_0_15_115 l_0_15_115)) (* (/ 1.0 2.0) (* l_0_15_116 l_0_15_116)))))
 (let ((?x89660 (+ (+ ?x45287 (* (/ 1.0 2.0) (* l_0_15_117 l_0_15_117))) (* (/ 1.0 2.0) (* l_0_15_118 l_0_15_118)))))
 (let ((?x89667 (- (- (- (- (- ?x89660 ?x41131) ?x41135) ?x41121) ?x64092) (* (* (/ 1.0 2.0) l_0_15_79) l_0_15_79))))
 (let ((?x89673 (- (- ?x89667 (* (* (/ 1.0 2.0) l_0_15_80) l_0_15_80)) (* (* (/ 1.0 2.0) l_0_15_81) l_0_15_81))))
 (= (- ?x89673 (* (* (/ 1.0 2.0) l_0_15_82) l_0_15_82)) 0.0))))))))))
(assert
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85566 (* ?x85565 l_0_15_158)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85563 (* ?x85562 l_0_15_157)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85560 (* ?x85559 l_0_15_156)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x85557 (* ?x85556 l_0_15_155)))
 (let ((?x89699 (+ (* (* 1.0 l_0_15_115) l_0_15_119) (* (* 1.0 l_0_15_116) l_0_15_120))))
 (let ((?x89705 (+ (+ ?x89699 (* (* 1.0 l_0_15_117) l_0_15_121)) (* (* 1.0 l_0_15_118) l_0_15_122))))
 (let ((?x89712 (- (- (- (- (- ?x89705 ?x85557) ?x85560) ?x85563) ?x85566) (* (* 1.0 l_0_15_79) l_0_15_83))))
 (let ((?x89718 (- (- ?x89712 (* (* 1.0 l_0_15_80) l_0_15_84)) (* (* 1.0 l_0_15_81) l_0_15_85))))
 (= (- ?x89718 (* (* 1.0 l_0_15_82) l_0_15_86)) 0.0))))))))))))))
(assert
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85627 (* ?x85565 l_0_15_163)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85623 (* ?x85562 l_0_15_162)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85619 (* ?x85559 l_0_15_161)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x41354 (* ?x85556 l_0_15_160)))
 (let ((?x89746 (+ (* (* 1.0 l_0_15_115) l_0_15_124) (* (* 1.0 l_0_15_116) l_0_15_125))))
 (let ((?x89750 (+ (+ ?x89746 (* (* 1.0 l_0_15_117) l_0_15_126)) (* (* 1.0 l_0_15_118) l_0_15_127))))
 (let ((?x89756 (- (- (- (- (- ?x89750 ?x41354) ?x85619) ?x85623) ?x85627) (* (* 1.0 l_0_15_79) l_0_15_88))))
 (let ((?x89760 (- (- ?x89756 (* (* 1.0 l_0_15_80) l_0_15_89)) (* (* 1.0 l_0_15_81) l_0_15_90))))
 (= (- ?x89760 (* (* 1.0 l_0_15_82) l_0_15_91)) 0.0))))))))))))))
(assert
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85713 (* ?x85565 l_0_15_169)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85711 (* ?x85562 l_0_15_168)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85709 (* ?x85559 l_0_15_167)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x85707 (* ?x85556 l_0_15_166)))
 (let ((?x89777 (+ (* (* 1.0 l_0_15_115) l_0_15_130) (* (* 1.0 l_0_15_116) l_0_15_131))))
 (let ((?x89781 (+ (+ ?x89777 (* (* 1.0 l_0_15_117) l_0_15_132)) (* (* 1.0 l_0_15_118) l_0_15_133))))
 (let ((?x89787 (- (- (- (- (- ?x89781 ?x85707) ?x85709) ?x85711) ?x85713) (* (* 1.0 l_0_15_79) l_0_15_94))))
 (let ((?x89791 (- (- ?x89787 (* (* 1.0 l_0_15_80) l_0_15_95)) (* (* 1.0 l_0_15_81) l_0_15_96))))
 (= (- ?x89791 (* (* 1.0 l_0_15_82) l_0_15_97)) 0.0))))))))))))))
(assert
 (let ((?x85565 (* 2.0 l_0_15_154)))
 (let ((?x85817 (* ?x85565 l_0_15_176)))
 (let ((?x85562 (* 2.0 l_0_15_153)))
 (let ((?x85815 (* ?x85562 l_0_15_175)))
 (let ((?x85559 (* 2.0 l_0_15_152)))
 (let ((?x85813 (* ?x85559 l_0_15_174)))
 (let ((?x85556 (* 2.0 l_0_15_151)))
 (let ((?x41584 (* ?x85556 l_0_15_173)))
 (let ((?x89824 (- (* (* (- 1.0) l_0_15_101) l_0_15_79) (* (* 1.0 l_0_15_102) l_0_15_80))))
 (let ((?x89829 (- (- ?x89824 (* (* 1.0 l_0_15_103) l_0_15_81)) (* (* 1.0 l_0_15_104) l_0_15_82))))
 (let ((?x89833 (+ (+ ?x89829 (* (* 1.0 l_0_15_115) l_0_15_137)) (* (* 1.0 l_0_15_116) l_0_15_138))))
 (let ((?x89837 (+ (+ ?x89833 (* (* 1.0 l_0_15_117) l_0_15_139)) (* (* 1.0 l_0_15_118) l_0_15_140))))
 (= (- (- (- (- ?x89837 ?x41584) ?x85813) ?x85815) ?x85817) 0.0))))))))))))))
(assert
 (let ((?x85908 (* l_0_15_159 l_0_15_159)))
 (let ((?x85906 (* l_0_15_158 l_0_15_158)))
 (let ((?x85904 (* l_0_15_157 l_0_15_157)))
 (let ((?x85902 (* l_0_15_156 l_0_15_156)))
 (let ((?x85900 (* l_0_15_155 l_0_15_155)))
 (let ((?x89863 (+ (* (/ 1.0 2.0) (* l_0_15_119 l_0_15_119)) (* (/ 1.0 2.0) (* l_0_15_120 l_0_15_120)))))
 (let ((?x89869 (+ (+ ?x89863 (* (/ 1.0 2.0) (* l_0_15_121 l_0_15_121))) (* (/ 1.0 2.0) (* l_0_15_122 l_0_15_122)))))
 (let ((?x89875 (- (- (- (+ ?x89869 (* (/ 1.0 2.0) (* l_0_15_123 l_0_15_123))) ?x85900) ?x85902) ?x85904)))
 (let ((?x89883 (- (- (- (- ?x89875 ?x85906) ?x85908) (* (* (/ 1.0 2.0) l_0_15_83) l_0_15_83)) (* (* (/ 1.0 2.0) l_0_15_84) l_0_15_84))))
 (let ((?x89889 (- (- ?x89883 (* (* (/ 1.0 2.0) l_0_15_85) l_0_15_85)) (* (* (/ 1.0 2.0) l_0_15_86) l_0_15_86))))
 (= (- ?x89889 (* (* (/ 1.0 2.0) l_0_15_87) l_0_15_87)) 0.0))))))))))))
(assert
 (let ((?x85979 (* 2.0 l_0_15_159)))
 (let ((?x85980 (* ?x85979 l_0_15_164)))
 (let ((?x85976 (* 2.0 l_0_15_158)))
 (let ((?x85977 (* ?x85976 l_0_15_163)))
 (let ((?x85973 (* 2.0 l_0_15_157)))
 (let ((?x85974 (* ?x85973 l_0_15_162)))
 (let ((?x85970 (* 2.0 l_0_15_156)))
 (let ((?x85971 (* ?x85970 l_0_15_161)))
 (let ((?x85967 (* 2.0 l_0_15_155)))
 (let ((?x85968 (* ?x85967 l_0_15_160)))
 (let ((?x89918 (+ (* (* 1.0 l_0_15_119) l_0_15_124) (* (* 1.0 l_0_15_120) l_0_15_125))))
 (let ((?x89924 (+ (+ ?x89918 (* (* 1.0 l_0_15_121) l_0_15_126)) (* (* 1.0 l_0_15_122) l_0_15_127))))
 (let ((?x89930 (- (- (- (+ ?x89924 (* (* 1.0 l_0_15_123) l_0_15_128)) ?x85968) ?x85971) ?x85974)))
 (let ((?x89938 (- (- (- (- ?x89930 ?x85977) ?x85980) (* (* 1.0 l_0_15_83) l_0_15_88)) (* (* 1.0 l_0_15_84) l_0_15_89))))
 (let ((?x89944 (- (- ?x89938 (* (* 1.0 l_0_15_85) l_0_15_90)) (* (* 1.0 l_0_15_86) l_0_15_91))))
 (= (- ?x89944 (* (* 1.0 l_0_15_87) l_0_15_92)) 0.0)))))))))))))))))
(assert
 (let ((?x85979 (* 2.0 l_0_15_159)))
 (let ((?x86094 (* ?x85979 l_0_15_170)))
 (let ((?x85976 (* 2.0 l_0_15_158)))
 (let ((?x86092 (* ?x85976 l_0_15_169)))
 (let ((?x85973 (* 2.0 l_0_15_157)))
 (let ((?x86090 (* ?x85973 l_0_15_168)))
 (let ((?x85970 (* 2.0 l_0_15_156)))
 (let ((?x86088 (* ?x85970 l_0_15_167)))
 (let ((?x85967 (* 2.0 l_0_15_155)))
 (let ((?x86086 (* ?x85967 l_0_15_166)))
 (let ((?x89970 (+ (* (* 1.0 l_0_15_119) l_0_15_130) (* (* 1.0 l_0_15_120) l_0_15_131))))
 (let ((?x89974 (+ (+ ?x89970 (* (* 1.0 l_0_15_121) l_0_15_132)) (* (* 1.0 l_0_15_122) l_0_15_133))))
 (let ((?x89979 (- (- (- (+ ?x89974 (* (* 1.0 l_0_15_123) l_0_15_134)) ?x86086) ?x86088) ?x86090)))
 (let ((?x89985 (- (- (- (- ?x89979 ?x86092) ?x86094) (* (* 1.0 l_0_15_83) l_0_15_94)) (* (* 1.0 l_0_15_84) l_0_15_95))))
 (let ((?x89989 (- (- ?x89985 (* (* 1.0 l_0_15_85) l_0_15_96)) (* (* 1.0 l_0_15_86) l_0_15_97))))
 (= (- ?x89989 (* (* 1.0 l_0_15_87) l_0_15_98)) 0.0)))))))))))))))))
(assert
 (let ((?x85979 (* 2.0 l_0_15_159)))
 (let ((?x86201 (* ?x85979 l_0_15_177)))
 (let ((?x85976 (* 2.0 l_0_15_158)))
 (let ((?x86199 (* ?x85976 l_0_15_176)))
 (let ((?x85973 (* 2.0 l_0_15_157)))
 (let ((?x86197 (* ?x85973 l_0_15_175)))
 (let ((?x85970 (* 2.0 l_0_15_156)))
 (let ((?x86195 (* ?x85970 l_0_15_174)))
 (let ((?x85967 (* 2.0 l_0_15_155)))
 (let ((?x86193 (* ?x85967 l_0_15_173)))
 (let ((?x90016 (- (* (* (- 1.0) l_0_15_101) l_0_15_83) (* (* 1.0 l_0_15_102) l_0_15_84))))
 (let ((?x90020 (- (- ?x90016 (* (* 1.0 l_0_15_103) l_0_15_85)) (* (* 1.0 l_0_15_104) l_0_15_86))))
 (let ((?x90025 (+ (- ?x90020 (* (* 1.0 l_0_15_105) l_0_15_87)) (* (* 1.0 l_0_15_119) l_0_15_137))))
 (let ((?x90029 (+ (+ ?x90025 (* (* 1.0 l_0_15_120) l_0_15_138)) (* (* 1.0 l_0_15_121) l_0_15_139))))
 (let ((?x90033 (+ (+ ?x90029 (* (* 1.0 l_0_15_122) l_0_15_140)) (* (* 1.0 l_0_15_123) l_0_15_141))))
 (= (- (- (- (- (- ?x90033 ?x86193) ?x86195) ?x86197) ?x86199) ?x86201) 0.0)))))))))))))))))
(assert
 (let ((?x86290 (* l_0_15_165 l_0_15_165)))
 (let ((?x86275 (* l_0_15_164 l_0_15_164)))
 (let ((?x86272 (* l_0_15_163 l_0_15_163)))
 (let ((?x86268 (* l_0_15_162 l_0_15_162)))
 (let ((?x86264 (* l_0_15_161 l_0_15_161)))
 (let ((?x86260 (* l_0_15_160 l_0_15_160)))
 (let ((?x90070 (+ (* (/ 1.0 2.0) (* l_0_15_124 l_0_15_124)) (* (/ 1.0 2.0) (* l_0_15_125 l_0_15_125)))))
 (let ((?x90076 (+ (+ ?x90070 (* (/ 1.0 2.0) (* l_0_15_126 l_0_15_126))) (* (/ 1.0 2.0) (* l_0_15_127 l_0_15_127)))))
 (let ((?x90082 (+ (+ ?x90076 (* (/ 1.0 2.0) (* l_0_15_128 l_0_15_128))) (* (/ 1.0 2.0) (* l_0_15_129 l_0_15_129)))))
 (let ((?x90091 (- (- (- (- (- (- (- ?x90082 ?x86260) ?x86264) ?x86268) ?x86272) ?x86275) ?x86290) (* (* (/ 1.0 2.0) l_0_15_88) l_0_15_88))))
 (let ((?x90097 (- (- ?x90091 (* (* (/ 1.0 2.0) l_0_15_89) l_0_15_89)) (* (* (/ 1.0 2.0) l_0_15_90) l_0_15_90))))
 (let ((?x90103 (- (- ?x90097 (* (* (/ 1.0 2.0) l_0_15_91) l_0_15_91)) (* (* (/ 1.0 2.0) l_0_15_92) l_0_15_92))))
 (= (- ?x90103 (* (* (/ 1.0 2.0) l_0_15_93) l_0_15_93)) 0.0))))))))))))))
(assert
 (let ((?x86397 (* 2.0 l_0_15_165)))
 (let ((?x86398 (* ?x86397 l_0_15_171)))
 (let ((?x86394 (* 2.0 l_0_15_164)))
 (let ((?x86395 (* ?x86394 l_0_15_170)))
 (let ((?x86391 (* 2.0 l_0_15_163)))
 (let ((?x86392 (* ?x86391 l_0_15_169)))
 (let ((?x86388 (* 2.0 l_0_15_162)))
 (let ((?x86389 (* ?x86388 l_0_15_168)))
 (let ((?x86385 (* 2.0 l_0_15_161)))
 (let ((?x86386 (* ?x86385 l_0_15_167)))
 (let ((?x86382 (* 2.0 l_0_15_160)))
 (let ((?x86383 (* ?x86382 l_0_15_166)))
 (let ((?x90129 (+ (* (* 1.0 l_0_15_124) l_0_15_130) (* (* 1.0 l_0_15_125) l_0_15_131))))
 (let ((?x90135 (+ (+ ?x90129 (* (* 1.0 l_0_15_126) l_0_15_132)) (* (* 1.0 l_0_15_127) l_0_15_133))))
 (let ((?x90141 (+ (+ ?x90135 (* (* 1.0 l_0_15_128) l_0_15_134)) (* (* 1.0 l_0_15_129) l_0_15_135))))
 (let ((?x90150 (- (- (- (- (- (- (- ?x90141 ?x86383) ?x86386) ?x86389) ?x86392) ?x86395) ?x86398) (* (* 1.0 l_0_15_88) l_0_15_94))))
 (let ((?x90156 (- (- ?x90150 (* (* 1.0 l_0_15_89) l_0_15_95)) (* (* 1.0 l_0_15_90) l_0_15_96))))
 (let ((?x90162 (- (- ?x90156 (* (* 1.0 l_0_15_91) l_0_15_97)) (* (* 1.0 l_0_15_92) l_0_15_98))))
 (= (- ?x90162 (* (* 1.0 l_0_15_93) l_0_15_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x86397 (* 2.0 l_0_15_165)))
 (let ((?x86567 (* ?x86397 l_0_15_178)))
 (let ((?x86394 (* 2.0 l_0_15_164)))
 (let ((?x86565 (* ?x86394 l_0_15_177)))
 (let ((?x86391 (* 2.0 l_0_15_163)))
 (let ((?x86563 (* ?x86391 l_0_15_176)))
 (let ((?x86388 (* 2.0 l_0_15_162)))
 (let ((?x86561 (* ?x86388 l_0_15_175)))
 (let ((?x86385 (* 2.0 l_0_15_161)))
 (let ((?x86559 (* ?x86385 l_0_15_174)))
 (let ((?x86382 (* 2.0 l_0_15_160)))
 (let ((?x86557 (* ?x86382 l_0_15_173)))
 (let ((?x90204 (- (* (* (- 1.0) l_0_15_101) l_0_15_88) (* (* 1.0 l_0_15_102) l_0_15_89))))
 (let ((?x90208 (- (- ?x90204 (* (* 1.0 l_0_15_103) l_0_15_90)) (* (* 1.0 l_0_15_104) l_0_15_91))))
 (let ((?x90213 (- (- ?x90208 (* (* 1.0 l_0_15_105) l_0_15_92)) (* (* 1.0 l_0_15_106) l_0_15_93))))
 (let ((?x90217 (+ (+ ?x90213 (* (* 1.0 l_0_15_124) l_0_15_137)) (* (* 1.0 l_0_15_125) l_0_15_138))))
 (let ((?x90221 (+ (+ ?x90217 (* (* 1.0 l_0_15_126) l_0_15_139)) (* (* 1.0 l_0_15_127) l_0_15_140))))
 (let ((?x90225 (+ (+ ?x90221 (* (* 1.0 l_0_15_128) l_0_15_141)) (* (* 1.0 l_0_15_129) l_0_15_142))))
 (= (- (- (- (- (- (- ?x90225 ?x86557) ?x86559) ?x86561) ?x86563) ?x86565) ?x86567) 0.0))))))))))))))))))))
(assert
 (let ((?x86678 (* l_0_15_172 l_0_15_172)))
 (let ((?x86676 (* l_0_15_171 l_0_15_171)))
 (let ((?x86674 (* l_0_15_170 l_0_15_170)))
 (let ((?x86672 (* l_0_15_169 l_0_15_169)))
 (let ((?x86670 (* l_0_15_168 l_0_15_168)))
 (let ((?x86668 (* l_0_15_167 l_0_15_167)))
 (let ((?x86666 (* l_0_15_166 l_0_15_166)))
 (let ((?x90257 (+ (* (* (- (/ 1.0 2.0)) l_0_15_100) l_0_15_100) (* (/ 1.0 2.0) (* l_0_15_130 l_0_15_130)))))
 (let ((?x90263 (+ (+ ?x90257 (* (/ 1.0 2.0) (* l_0_15_131 l_0_15_131))) (* (/ 1.0 2.0) (* l_0_15_132 l_0_15_132)))))
 (let ((?x90269 (+ (+ ?x90263 (* (/ 1.0 2.0) (* l_0_15_133 l_0_15_133))) (* (/ 1.0 2.0) (* l_0_15_134 l_0_15_134)))))
 (let ((?x90275 (+ (+ ?x90269 (* (/ 1.0 2.0) (* l_0_15_135 l_0_15_135))) (* (/ 1.0 2.0) (* l_0_15_136 l_0_15_136)))))
 (let ((?x90282 (- (- (- (- (- (- (- ?x90275 ?x86666) ?x86668) ?x86670) ?x86672) ?x86674) ?x86676) ?x86678)))
 (let ((?x90288 (- (- ?x90282 (* (* (/ 1.0 2.0) l_0_15_94) l_0_15_94)) (* (* (/ 1.0 2.0) l_0_15_95) l_0_15_95))))
 (let ((?x90294 (- (- ?x90288 (* (* (/ 1.0 2.0) l_0_15_96) l_0_15_96)) (* (* (/ 1.0 2.0) l_0_15_97) l_0_15_97))))
 (let ((?x90300 (- (- ?x90294 (* (* (/ 1.0 2.0) l_0_15_98) l_0_15_98)) (* (* (/ 1.0 2.0) l_0_15_99) l_0_15_99))))
 (= ?x90300 0.0)))))))))))))))))
(assert
 (let ((?x86817 (* (* 2.0 l_0_15_172) l_0_15_179)))
 (let ((?x86814 (* (* 2.0 l_0_15_171) l_0_15_178)))
 (let ((?x86811 (* (* 2.0 l_0_15_170) l_0_15_177)))
 (let ((?x86808 (* (* 2.0 l_0_15_169) l_0_15_176)))
 (let ((?x86805 (* (* 2.0 l_0_15_168) l_0_15_175)))
 (let ((?x86802 (* (* 2.0 l_0_15_167) l_0_15_174)))
 (let ((?x86799 (* (* 2.0 l_0_15_166) l_0_15_173)))
 (let ((?x90319 (- (* (* (- 1.0) l_0_15_100) l_0_15_107) (* (* 1.0 l_0_15_101) l_0_15_94))))
 (let ((?x90323 (- (- ?x90319 (* (* 1.0 l_0_15_102) l_0_15_95)) (* (* 1.0 l_0_15_103) l_0_15_96))))
 (let ((?x90327 (- (- ?x90323 (* (* 1.0 l_0_15_104) l_0_15_97)) (* (* 1.0 l_0_15_105) l_0_15_98))))
 (let ((?x90332 (+ (- ?x90327 (* (* 1.0 l_0_15_106) l_0_15_99)) (* (* 1.0 l_0_15_130) l_0_15_137))))
 (let ((?x90338 (+ (+ ?x90332 (* (* 1.0 l_0_15_131) l_0_15_138)) (* (* 1.0 l_0_15_132) l_0_15_139))))
 (let ((?x90344 (+ (+ ?x90338 (* (* 1.0 l_0_15_133) l_0_15_140)) (* (* 1.0 l_0_15_134) l_0_15_141))))
 (let ((?x90350 (+ (+ ?x90344 (* (* 1.0 l_0_15_135) l_0_15_142)) (* (* 1.0 l_0_15_136) l_0_15_143))))
 (let ((?x90357 (- (- (- (- (- (- (- ?x90350 ?x86799) ?x86802) ?x86805) ?x86808) ?x86811) ?x86814) ?x86817)))
 (= ?x90357 0.0)))))))))))))))))
(assert
 (let ((?x86990 (* l_0_15_180 l_0_15_180)))
 (let ((?x86988 (* l_0_15_179 l_0_15_179)))
 (let ((?x86986 (* l_0_15_178 l_0_15_178)))
 (let ((?x86984 (* l_0_15_177 l_0_15_177)))
 (let ((?x86963 (* l_0_15_176 l_0_15_176)))
 (let ((?x86959 (* l_0_15_175 l_0_15_175)))
 (let ((?x86955 (* l_0_15_174 l_0_15_174)))
 (let ((?x87042 (* l_0_15_173 l_0_15_173)))
 (let ((?x90387 (- (* (* (- (/ 1.0 2.0)) l_0_15_101) l_0_15_101) (* (* (/ 1.0 2.0) l_0_15_102) l_0_15_102))))
 (let ((?x90393 (- (- ?x90387 (* (* (/ 1.0 2.0) l_0_15_103) l_0_15_103)) (* (* (/ 1.0 2.0) l_0_15_104) l_0_15_104))))
 (let ((?x90399 (- (- ?x90393 (* (* (/ 1.0 2.0) l_0_15_105) l_0_15_105)) (* (* (/ 1.0 2.0) l_0_15_106) l_0_15_106))))
 (let ((?x90405 (- (- ?x90399 (* (* (/ 1.0 2.0) l_0_15_107) l_0_15_107)) (* (* (/ 1.0 2.0) l_0_15_108) l_0_15_108))))
 (let ((?x90411 (+ (+ ?x90405 (* (/ 1.0 2.0) (* l_0_15_137 l_0_15_137))) (* (/ 1.0 2.0) (* l_0_15_138 l_0_15_138)))))
 (let ((?x90417 (+ (+ ?x90411 (* (/ 1.0 2.0) (* l_0_15_139 l_0_15_139))) (* (/ 1.0 2.0) (* l_0_15_140 l_0_15_140)))))
 (let ((?x90423 (+ (+ ?x90417 (* (/ 1.0 2.0) (* l_0_15_141 l_0_15_141))) (* (/ 1.0 2.0) (* l_0_15_142 l_0_15_142)))))
 (let ((?x90429 (+ (+ ?x90423 (* (/ 1.0 2.0) (* l_0_15_143 l_0_15_143))) (* (/ 1.0 2.0) (* l_0_15_144 l_0_15_144)))))
 (let ((?x90436 (- (- (- (- (- (- (- ?x90429 ?x87042) ?x86955) ?x86959) ?x86963) ?x86984) ?x86986) ?x86988)))
 (= (- ?x90436 ?x86990) 0.0)))))))))))))))))))
(assert
 (let ((?x46600 (* l_0_15_73 l_0_15_73)))
 (let ((?x90473 (+ (- (* (- l_0_15_109) l_0_15_109) (* l_0_15_289 l_0_15_289)) ?x46600)))
 (= ?x90473 0.0))))
(assert
 (let ((?x90495 (* l_0_15_541 l_0_15_541)))
 (let ((?x90493 (* l_0_15_505 l_0_15_505)))
 (let ((?x90491 (* l_0_15_469 l_0_15_469)))
 (let ((?x90489 (* l_0_15_433 l_0_15_433)))
 (let ((?x90487 (* l_0_15_397 l_0_15_397)))
 (let ((?x90485 (* l_0_15_361 l_0_15_361)))
 (let ((?x90483 (* l_0_15_325 l_0_15_325)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87123 (* ?x87092 l_0_15_290)))
 (let ((?x90488 (- (- (- (- (* (* (- 2.0) l_0_15_109) l_0_15_110) ?x87123) ?x90483) ?x90485) ?x90487)))
 (let ((?x90498 (+ (- (- (- (- ?x90488 ?x90489) ?x90491) ?x90493) ?x90495) (* (* 2.0 l_0_15_73) l_0_15_74))))
 (= ?x90498 0.0)))))))))))))
(assert
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87212 (* ?x87092 l_0_15_292)))
 (let ((?x90518 (+ (- (* (* (- 2.0) l_0_15_109) l_0_15_112) ?x87212) (* (* 2.0 l_0_15_73) l_0_15_76))))
 (= ?x90518 0.0)))))
(assert
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87296 (* ?x87092 l_0_15_299)))
 (let ((?x48043 (* l_0_15_253 l_0_15_253)))
 (let ((?x90528 (+ (- (+ (* (* (- 2.0) l_0_15_109) l_0_15_119) ?x48043) ?x87296) (* (* 2.0 l_0_15_73) l_0_15_83))))
 (= ?x90528 0.0))))))
(assert
 (let ((?x87095 (* l_0_15_289 l_0_15_289)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87367 (* ?x87092 l_0_15_304)))
 (let ((?x84411 (* l_0_15_181 l_0_15_181)))
 (let ((?x84409 (* l_0_15_145 l_0_15_145)))
 (let ((?x90541 (+ (- (- (+ (* (* (- 2.0) l_0_15_109) l_0_15_124) ?x84409) ?x84411) ?x87367) ?x87095)))
 (= (+ ?x90541 (* (* 2.0 l_0_15_73) l_0_15_88)) 0.0))))))))
(assert
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87415 (* ?x87092 l_0_15_310)))
 (let ((?x48043 (* l_0_15_253 l_0_15_253)))
 (let ((?x90555 (+ (- (- (* (* (- 2.0) l_0_15_109) l_0_15_130) ?x48043) ?x87415) (* (* 2.0 l_0_15_73) l_0_15_94))))
 (= ?x90555 0.0))))))
(assert
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87458 (* ?x87092 l_0_15_317)))
 (let ((?x90566 (* l_0_15_217 l_0_15_217)))
 (let ((?x90565 (- (* (* 2.0 l_0_15_101) l_0_15_73) (* (* 2.0 l_0_15_109) l_0_15_137))))
 (= (- (- ?x90565 ?x90566) ?x87458) 0.0))))))
(assert
 (let ((?x47253 (* l_0_15_75 l_0_15_75)))
 (let ((?x47224 (* l_0_15_74 l_0_15_74)))
 (let ((?x87508 (* l_0_15_291 l_0_15_291)))
 (let ((?x64917 (* l_0_15_290 l_0_15_290)))
 (let ((?x90579 (- (- (* (- l_0_15_110) l_0_15_110) (* l_0_15_111 l_0_15_111)) ?x64917)))
 (let ((?x90584 (- (- (- ?x90579 ?x87508) (* (* 2.0 l_0_15_325) l_0_15_326)) (* (* 2.0 l_0_15_361) l_0_15_362))))
 (let ((?x90588 (- (- ?x90584 (* (* 2.0 l_0_15_397) l_0_15_398)) (* (* 2.0 l_0_15_433) l_0_15_434))))
 (let ((?x90592 (- (- ?x90588 (* (* 2.0 l_0_15_469) l_0_15_470)) (* (* 2.0 l_0_15_505) l_0_15_506))))
 (= (+ (+ (- ?x90592 (* (* 2.0 l_0_15_541) l_0_15_542)) ?x47224) ?x47253) 0.0))))))))))
(assert
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x65020 (* ?x87128 l_0_15_293)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x44101 (* ?x87125 l_0_15_292)))
 (let ((?x90621 (- (* (* (- 2.0) l_0_15_110) l_0_15_112) (* (* 2.0 l_0_15_111) l_0_15_113))))
 (let ((?x90627 (- (- (- (- ?x90621 ?x44101) ?x65020) (* (* 2.0 l_0_15_325) l_0_15_328)) (* (* 2.0 l_0_15_361) l_0_15_364))))
 (let ((?x90631 (- (- ?x90627 (* (* 2.0 l_0_15_397) l_0_15_400)) (* (* 2.0 l_0_15_433) l_0_15_436))))
 (let ((?x90635 (- (- ?x90631 (* (* 2.0 l_0_15_469) l_0_15_472)) (* (* 2.0 l_0_15_505) l_0_15_508))))
 (let ((?x90639 (+ (- ?x90635 (* (* 2.0 l_0_15_541) l_0_15_544)) (* (* 2.0 l_0_15_74) l_0_15_76))))
 (= (+ ?x90639 (* (* 2.0 l_0_15_75) l_0_15_77)) 0.0)))))))))))
(assert
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87692 (* ?x87128 l_0_15_300)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87690 (* ?x87125 l_0_15_299)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x90680 (* ?x87293 l_0_15_254)))
 (let ((?x48085 (- (* (* (- 2.0) l_0_15_110) l_0_15_119) (* (* 2.0 l_0_15_111) l_0_15_120))))
 (let ((?x90685 (- (- (- (+ ?x48085 ?x90680) ?x87690) ?x87692) (* (* 2.0 l_0_15_325) l_0_15_335))))
 (let ((?x90689 (- (- ?x90685 (* (* 2.0 l_0_15_361) l_0_15_371)) (* (* 2.0 l_0_15_397) l_0_15_407))))
 (let ((?x90693 (- (- ?x90689 (* (* 2.0 l_0_15_433) l_0_15_443)) (* (* 2.0 l_0_15_469) l_0_15_479))))
 (let ((?x90697 (- (- ?x90693 (* (* 2.0 l_0_15_505) l_0_15_515)) (* (* 2.0 l_0_15_541) l_0_15_551))))
 (let ((?x90701 (+ (+ ?x90697 (* (* 2.0 l_0_15_74) l_0_15_83)) (* (* 2.0 l_0_15_75) l_0_15_84))))
 (= ?x90701 0.0))))))))))))))
(assert
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87864 (* ?x87128 l_0_15_305)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87861 (* ?x87125 l_0_15_304)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87123 (* ?x87092 l_0_15_290)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84450 (* ?x84449 l_0_15_182)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84447 (* ?x84446 l_0_15_146)))
 (let ((?x48125 (- (* (* (- 2.0) l_0_15_110) l_0_15_124) (* (* 2.0 l_0_15_111) l_0_15_125))))
 (let ((?x90744 (- (- (- (+ (- (+ ?x48125 ?x84447) ?x84450) ?x87123) ?x87861) ?x87864) (* (* 2.0 l_0_15_325) l_0_15_340))))
 (let ((?x90748 (- (- ?x90744 (* (* 2.0 l_0_15_361) l_0_15_376)) (* (* 2.0 l_0_15_397) l_0_15_412))))
 (let ((?x90752 (- (- ?x90748 (* (* 2.0 l_0_15_433) l_0_15_448)) (* (* 2.0 l_0_15_469) l_0_15_484))))
 (let ((?x90756 (- (- ?x90752 (* (* 2.0 l_0_15_505) l_0_15_520)) (* (* 2.0 l_0_15_541) l_0_15_556))))
 (let ((?x90760 (+ (+ ?x90756 (* (* 2.0 l_0_15_74) l_0_15_88)) (* (* 2.0 l_0_15_75) l_0_15_89))))
 (= ?x90760 0.0))))))))))))))))))
(assert
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87959 (* ?x87128 l_0_15_311)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87957 (* ?x87125 l_0_15_310)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x90680 (* ?x87293 l_0_15_254)))
 (let ((?x90797 (- (* (* (- 2.0) l_0_15_110) l_0_15_130) (* (* 2.0 l_0_15_111) l_0_15_131))))
 (let ((?x90807 (- (- (- (- ?x90797 ?x90680) ?x87957) ?x87959) (* (* 2.0 l_0_15_325) l_0_15_346))))
 (let ((?x90811 (- (- ?x90807 (* (* 2.0 l_0_15_361) l_0_15_382)) (* (* 2.0 l_0_15_397) l_0_15_418))))
 (let ((?x90815 (- (- ?x90811 (* (* 2.0 l_0_15_433) l_0_15_454)) (* (* 2.0 l_0_15_469) l_0_15_490))))
 (let ((?x90819 (- (- ?x90815 (* (* 2.0 l_0_15_505) l_0_15_526)) (* (* 2.0 l_0_15_541) l_0_15_562))))
 (let ((?x90823 (+ (+ ?x90819 (* (* 2.0 l_0_15_74) l_0_15_94)) (* (* 2.0 l_0_15_75) l_0_15_95))))
 (= ?x90823 0.0))))))))))))))
(assert
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x88127 (* ?x87128 l_0_15_318)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x88125 (* ?x87125 l_0_15_317)))
 (let ((?x90854 (+ (* (* 2.0 l_0_15_101) l_0_15_74) (* (* 2.0 l_0_15_102) l_0_15_75))))
 (let ((?x90863 (- (- ?x90854 (* (* 2.0 l_0_15_110) l_0_15_137)) (* (* 2.0 l_0_15_111) l_0_15_138))))
 (let ((?x90869 (- (- (- (- ?x90863 (* (* 2.0 l_0_15_217) l_0_15_218)) ?x88125) ?x88127) (* (* 2.0 l_0_15_325) l_0_15_353))))
 (let ((?x90873 (- (- ?x90869 (* (* 2.0 l_0_15_361) l_0_15_389)) (* (* 2.0 l_0_15_397) l_0_15_425))))
 (let ((?x90877 (- (- ?x90873 (* (* 2.0 l_0_15_433) l_0_15_461)) (* (* 2.0 l_0_15_469) l_0_15_497))))
 (let ((?x90881 (- (- ?x90877 (* (* 2.0 l_0_15_505) l_0_15_533)) (* (* 2.0 l_0_15_541) l_0_15_569))))
 (= ?x90881 0.0))))))))))))
(assert
 (let ((?x40982 (* l_0_15_78 l_0_15_78)))
 (let ((?x85474 (* l_0_15_77 l_0_15_77)))
 (let ((?x85468 (* l_0_15_76 l_0_15_76)))
 (let ((?x7833 (* l_0_15_294 l_0_15_294)))
 (let ((?x7393 (* l_0_15_293 l_0_15_293)))
 (let ((?x66601 (* l_0_15_292 l_0_15_292)))
 (let ((?x85396 (* l_0_15_114 l_0_15_114)))
 (let ((?x90924 (- (- (* (- l_0_15_112) l_0_15_112) (* l_0_15_113 l_0_15_113)) ?x85396)))
 (= (+ (+ (+ (- (- (- ?x90924 ?x66601) ?x7393) ?x7833) ?x85468) ?x85474) ?x40982) 0.0))))))))))
(assert
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x88253 (* ?x84461 l_0_15_301)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x88251 (* ?x84458 l_0_15_300)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x88249 (* ?x84455 l_0_15_299)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x90946 (* ?x87293 l_0_15_256)))
 (let ((?x90943 (- (* (* (- 2.0) l_0_15_112) l_0_15_119) (* (* 2.0 l_0_15_113) l_0_15_120))))
 (let ((?x90949 (- (- (+ (- ?x90943 (* (* 2.0 l_0_15_114) l_0_15_121)) ?x90946) ?x88249) ?x88251)))
 (let ((?x90954 (+ (+ (- ?x90949 ?x88253) (* (* 2.0 l_0_15_76) l_0_15_83)) (* (* 2.0 l_0_15_77) l_0_15_84))))
 (= (+ ?x90954 (* (* 2.0 l_0_15_78) l_0_15_85)) 0.0)))))))))))))
(assert
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x88286 (* ?x84461 l_0_15_306)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x88283 (* ?x84458 l_0_15_305)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x88280 (* ?x84455 l_0_15_304)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87212 (* ?x87092 l_0_15_292)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84509 (* ?x84449 l_0_15_184)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84507 (* ?x84446 l_0_15_148)))
 (let ((?x14534 (- (* (* (- 2.0) l_0_15_112) l_0_15_124) (* (* 2.0 l_0_15_113) l_0_15_125))))
 (let ((?x90978 (+ (- (+ (- ?x14534 (* (* 2.0 l_0_15_114) l_0_15_126)) ?x84507) ?x84509) ?x87212)))
 (let ((?x90983 (+ (- (- (- ?x90978 ?x88280) ?x88283) ?x88286) (* (* 2.0 l_0_15_76) l_0_15_88))))
 (let ((?x90987 (+ (+ ?x90983 (* (* 2.0 l_0_15_77) l_0_15_89)) (* (* 2.0 l_0_15_78) l_0_15_90))))
 (= ?x90987 0.0))))))))))))))))))
(assert
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x88314 (* ?x84461 l_0_15_312)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x88312 (* ?x84458 l_0_15_311)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x88310 (* ?x84455 l_0_15_310)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x90946 (* ?x87293 l_0_15_256)))
 (let ((?x70265 (- (* (* (- 2.0) l_0_15_112) l_0_15_130) (* (* 2.0 l_0_15_113) l_0_15_131))))
 (let ((?x91006 (- (- (- (- ?x70265 (* (* 2.0 l_0_15_114) l_0_15_132)) ?x90946) ?x88310) ?x88312)))
 (let ((?x91011 (+ (+ (- ?x91006 ?x88314) (* (* 2.0 l_0_15_76) l_0_15_94)) (* (* 2.0 l_0_15_77) l_0_15_95))))
 (= (+ ?x91011 (* (* 2.0 l_0_15_78) l_0_15_96)) 0.0)))))))))))))
(assert
 (let ((?x13159 (* l_0_15_87 l_0_15_87)))
 (let ((?x69815 (* l_0_15_86 l_0_15_86)))
 (let ((?x13129 (* l_0_15_85 l_0_15_85)))
 (let ((?x47680 (* l_0_15_84 l_0_15_84)))
 (let ((?x13014 (* l_0_15_83 l_0_15_83)))
 (let ((?x88404 (* l_0_15_303 l_0_15_303)))
 (let ((?x88402 (* l_0_15_302 l_0_15_302)))
 (let ((?x88400 (* l_0_15_301 l_0_15_301)))
 (let ((?x88398 (* l_0_15_300 l_0_15_300)))
 (let ((?x88396 (* l_0_15_299 l_0_15_299)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x91037 (* ?x87293 l_0_15_263)))
 (let ((?x89870 (* l_0_15_123 l_0_15_123)))
 (let ((?x89867 (* l_0_15_122 l_0_15_122)))
 (let ((?x89864 (* l_0_15_121 l_0_15_121)))
 (let ((?x91028 (- (- (* (- l_0_15_119) l_0_15_119) (* l_0_15_120 l_0_15_120)) ?x89864)))
 (let ((?x91042 (- (- (- (- (+ (- (- ?x91028 ?x89867) ?x89870) ?x91037) ?x88396) ?x88398) ?x88400) ?x88402)))
 (= (+ (+ (+ (+ (+ (- ?x91042 ?x88404) ?x13014) ?x47680) ?x13129) ?x69815) ?x13159) 0.0)))))))))))))))))))
(assert
 (let ((?x88447 (* 2.0 l_0_15_303)))
 (let ((?x88448 (* ?x88447 l_0_15_308)))
 (let ((?x88444 (* 2.0 l_0_15_302)))
 (let ((?x88445 (* ?x88444 l_0_15_307)))
 (let ((?x88441 (* 2.0 l_0_15_301)))
 (let ((?x88442 (* ?x88441 l_0_15_306)))
 (let ((?x88438 (* 2.0 l_0_15_300)))
 (let ((?x88439 (* ?x88438 l_0_15_305)))
 (let ((?x88435 (* 2.0 l_0_15_299)))
 (let ((?x88436 (* ?x88435 l_0_15_304)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87296 (* ?x87092 l_0_15_299)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x91070 (* ?x87293 l_0_15_268)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x63644 (* ?x84449 l_0_15_191)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x39574 (* ?x84446 l_0_15_155)))
 (let ((?x10738 (- (* (* (- 2.0) l_0_15_119) l_0_15_124) (* (* 2.0 l_0_15_120) l_0_15_125))))
 (let ((?x91064 (- (- ?x10738 (* (* 2.0 l_0_15_121) l_0_15_126)) (* (* 2.0 l_0_15_122) l_0_15_127))))
 (let ((?x91071 (+ (- (+ (- ?x91064 (* (* 2.0 l_0_15_123) l_0_15_128)) ?x39574) ?x63644) ?x91070)))
 (let ((?x91080 (+ (- (- (- (- (- (+ ?x91071 ?x87296) ?x88436) ?x88439) ?x88442) ?x88445) ?x88448) (* (* 2.0 l_0_15_83) l_0_15_88))))
 (let ((?x91086 (+ (+ ?x91080 (* (* 2.0 l_0_15_84) l_0_15_89)) (* (* 2.0 l_0_15_85) l_0_15_90))))
 (let ((?x91092 (+ (+ ?x91086 (* (* 2.0 l_0_15_86) l_0_15_91)) (* (* 2.0 l_0_15_87) l_0_15_92))))
 (= ?x91092 0.0))))))))))))))))))))))))))
(assert
 (let ((?x88447 (* 2.0 l_0_15_303)))
 (let ((?x88492 (* ?x88447 l_0_15_314)))
 (let ((?x88444 (* 2.0 l_0_15_302)))
 (let ((?x88490 (* ?x88444 l_0_15_313)))
 (let ((?x88441 (* 2.0 l_0_15_301)))
 (let ((?x88488 (* ?x88441 l_0_15_312)))
 (let ((?x88438 (* 2.0 l_0_15_300)))
 (let ((?x88486 (* ?x88438 l_0_15_311)))
 (let ((?x88435 (* 2.0 l_0_15_299)))
 (let ((?x88484 (* ?x88435 l_0_15_310)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x91134 (* ?x87293 l_0_15_274)))
 (let ((?x91037 (* ?x87293 l_0_15_263)))
 (let ((?x91126 (- (* (* (- 2.0) l_0_15_119) l_0_15_130) (* (* 2.0 l_0_15_120) l_0_15_131))))
 (let ((?x91130 (- (- ?x91126 (* (* 2.0 l_0_15_121) l_0_15_132)) (* (* 2.0 l_0_15_122) l_0_15_133))))
 (let ((?x91136 (- (+ (- (- ?x91130 (* (* 2.0 l_0_15_123) l_0_15_134)) ?x91037) ?x91134) ?x88484)))
 (let ((?x91142 (+ (- (- (- (- ?x91136 ?x88486) ?x88488) ?x88490) ?x88492) (* (* 2.0 l_0_15_83) l_0_15_94))))
 (let ((?x91146 (+ (+ ?x91142 (* (* 2.0 l_0_15_84) l_0_15_95)) (* (* 2.0 l_0_15_85) l_0_15_96))))
 (let ((?x91150 (+ (+ ?x91146 (* (* 2.0 l_0_15_86) l_0_15_97)) (* (* 2.0 l_0_15_87) l_0_15_98))))
 (= ?x91150 0.0)))))))))))))))))))))
(assert
 (let ((?x88447 (* 2.0 l_0_15_303)))
 (let ((?x88546 (* ?x88447 l_0_15_321)))
 (let ((?x88444 (* 2.0 l_0_15_302)))
 (let ((?x88544 (* ?x88444 l_0_15_320)))
 (let ((?x88441 (* 2.0 l_0_15_301)))
 (let ((?x88542 (* ?x88441 l_0_15_319)))
 (let ((?x88438 (* 2.0 l_0_15_300)))
 (let ((?x88540 (* ?x88438 l_0_15_318)))
 (let ((?x88435 (* 2.0 l_0_15_299)))
 (let ((?x88538 (* ?x88435 l_0_15_317)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x88917 (* ?x87293 l_0_15_281)))
 (let ((?x14929 (+ (* (* 2.0 l_0_15_101) l_0_15_83) (* (* 2.0 l_0_15_102) l_0_15_84))))
 (let ((?x91171 (+ (+ ?x14929 (* (* 2.0 l_0_15_103) l_0_15_85)) (* (* 2.0 l_0_15_104) l_0_15_86))))
 (let ((?x91176 (- (+ ?x91171 (* (* 2.0 l_0_15_105) l_0_15_87)) (* (* 2.0 l_0_15_119) l_0_15_137))))
 (let ((?x91180 (- (- ?x91176 (* (* 2.0 l_0_15_120) l_0_15_138)) (* (* 2.0 l_0_15_121) l_0_15_139))))
 (let ((?x91184 (- (- ?x91180 (* (* 2.0 l_0_15_122) l_0_15_140)) (* (* 2.0 l_0_15_123) l_0_15_141))))
 (let ((?x91189 (- (- (+ (- ?x91184 (* (* 2.0 l_0_15_217) l_0_15_227)) ?x88917) ?x88538) ?x88540)))
 (= (- (- (- ?x91189 ?x88542) ?x88544) ?x88546) 0.0))))))))))))))))))))
(assert
 (let ((?x13531 (* l_0_15_93 l_0_15_93)))
 (let ((?x13405 (* l_0_15_92 l_0_15_92)))
 (let ((?x47775 (* l_0_15_91 l_0_15_91)))
 (let ((?x47763 (* l_0_15_90 l_0_15_90)))
 (let ((?x90113 (* l_0_15_89 l_0_15_89)))
 (let ((?x47779 (* l_0_15_88 l_0_15_88)))
 (let ((?x88608 (* l_0_15_309 l_0_15_309)))
 (let ((?x88606 (* l_0_15_308 l_0_15_308)))
 (let ((?x88604 (* l_0_15_307 l_0_15_307)))
 (let ((?x88602 (* l_0_15_306 l_0_15_306)))
 (let ((?x88600 (* l_0_15_305 l_0_15_305)))
 (let ((?x88598 (* l_0_15_304 l_0_15_304)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87367 (* ?x87092 l_0_15_304)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84553 (* ?x84449 l_0_15_196)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84546 (* ?x84446 l_0_15_160)))
 (let ((?x90080 (* l_0_15_129 l_0_15_129)))
 (let ((?x90077 (* l_0_15_128 l_0_15_128)))
 (let ((?x90074 (* l_0_15_127 l_0_15_127)))
 (let ((?x90071 (* l_0_15_126 l_0_15_126)))
 (let ((?x91218 (- (- (* (- l_0_15_124) l_0_15_124) (* l_0_15_125 l_0_15_125)) ?x90071)))
 (let ((?x91225 (- (+ (- (+ (- (- (- ?x91218 ?x90074) ?x90077) ?x90080) ?x84546) ?x84553) ?x87367) ?x88598)))
 (let ((?x91232 (+ (+ (- (- (- (- (- ?x91225 ?x88600) ?x88602) ?x88604) ?x88606) ?x88608) ?x47779) ?x90113)))
 (= (+ (+ (+ (+ ?x91232 ?x47763) ?x47775) ?x13405) ?x13531) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x88640 (* 2.0 l_0_15_309)))
 (let ((?x88641 (* ?x88640 l_0_15_315)))
 (let ((?x88637 (* 2.0 l_0_15_308)))
 (let ((?x88638 (* ?x88637 l_0_15_314)))
 (let ((?x88634 (* 2.0 l_0_15_307)))
 (let ((?x88635 (* ?x88634 l_0_15_313)))
 (let ((?x88631 (* 2.0 l_0_15_306)))
 (let ((?x88632 (* ?x88631 l_0_15_312)))
 (let ((?x88628 (* 2.0 l_0_15_305)))
 (let ((?x88629 (* ?x88628 l_0_15_311)))
 (let ((?x11269 (* 2.0 l_0_15_304)))
 (let ((?x45586 (* ?x11269 l_0_15_310)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87415 (* ?x87092 l_0_15_310)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x91070 (* ?x87293 l_0_15_268)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84579 (* ?x84449 l_0_15_202)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84577 (* ?x84446 l_0_15_166)))
 (let ((?x91251 (- (* (* (- 2.0) l_0_15_124) l_0_15_130) (* (* 2.0 l_0_15_125) l_0_15_131))))
 (let ((?x91257 (- (- ?x91251 (* (* 2.0 l_0_15_126) l_0_15_132)) (* (* 2.0 l_0_15_127) l_0_15_133))))
 (let ((?x91263 (- (- ?x91257 (* (* 2.0 l_0_15_128) l_0_15_134)) (* (* 2.0 l_0_15_129) l_0_15_135))))
 (let ((?x91270 (- (- (- (+ (- (- (+ ?x91263 ?x84577) ?x84579) ?x91070) ?x87415) ?x45586) ?x88629) ?x88632)))
 (let ((?x91276 (+ (- (- (- ?x91270 ?x88635) ?x88638) ?x88641) (* (* 2.0 l_0_15_88) l_0_15_94))))
 (let ((?x91282 (+ (+ ?x91276 (* (* 2.0 l_0_15_89) l_0_15_95)) (* (* 2.0 l_0_15_90) l_0_15_96))))
 (let ((?x91288 (+ (+ ?x91282 (* (* 2.0 l_0_15_91) l_0_15_97)) (* (* 2.0 l_0_15_92) l_0_15_98))))
 (= (+ ?x91288 (* (* 2.0 l_0_15_93) l_0_15_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x88640 (* 2.0 l_0_15_309)))
 (let ((?x88693 (* ?x88640 l_0_15_322)))
 (let ((?x88637 (* 2.0 l_0_15_308)))
 (let ((?x88691 (* ?x88637 l_0_15_321)))
 (let ((?x88634 (* 2.0 l_0_15_307)))
 (let ((?x88689 (* ?x88634 l_0_15_320)))
 (let ((?x88631 (* 2.0 l_0_15_306)))
 (let ((?x88687 (* ?x88631 l_0_15_319)))
 (let ((?x88628 (* 2.0 l_0_15_305)))
 (let ((?x88685 (* ?x88628 l_0_15_318)))
 (let ((?x11269 (* 2.0 l_0_15_304)))
 (let ((?x88683 (* ?x11269 l_0_15_317)))
 (let ((?x87092 (* 2.0 l_0_15_289)))
 (let ((?x87458 (* ?x87092 l_0_15_317)))
 (let ((?x84449 (* 2.0 l_0_15_181)))
 (let ((?x84611 (* ?x84449 l_0_15_209)))
 (let ((?x84446 (* 2.0 l_0_15_145)))
 (let ((?x84609 (* ?x84446 l_0_15_173)))
 (let ((?x91324 (+ (* (* 2.0 l_0_15_101) l_0_15_88) (* (* 2.0 l_0_15_102) l_0_15_89))))
 (let ((?x91327 (+ (+ ?x91324 (* (* 2.0 l_0_15_103) l_0_15_90)) (* (* 2.0 l_0_15_104) l_0_15_91))))
 (let ((?x91340 (+ (+ ?x91327 (* (* 2.0 l_0_15_105) l_0_15_92)) (* (* 2.0 l_0_15_106) l_0_15_93))))
 (let ((?x91345 (- (- ?x91340 (* (* 2.0 l_0_15_124) l_0_15_137)) (* (* 2.0 l_0_15_125) l_0_15_138))))
 (let ((?x91349 (- (- ?x91345 (* (* 2.0 l_0_15_126) l_0_15_139)) (* (* 2.0 l_0_15_127) l_0_15_140))))
 (let ((?x91353 (- (- ?x91349 (* (* 2.0 l_0_15_128) l_0_15_141)) (* (* 2.0 l_0_15_129) l_0_15_142))))
 (let ((?x91358 (+ (- (- (+ ?x91353 ?x84609) ?x84611) (* (* 2.0 l_0_15_217) l_0_15_232)) ?x87458)))
 (= (- (- (- (- (- (- ?x91358 ?x88683) ?x88685) ?x88687) ?x88689) ?x88691) ?x88693) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x13670 (* l_0_15_99 l_0_15_99)))
 (let ((?x69871 (* l_0_15_98 l_0_15_98)))
 (let ((?x13661 (* l_0_15_97 l_0_15_97)))
 (let ((?x47906 (* l_0_15_96 l_0_15_96)))
 (let ((?x47902 (* l_0_15_95 l_0_15_95)))
 (let ((?x13668 (* l_0_15_94 l_0_15_94)))
 (let ((?x88734 (* l_0_15_316 l_0_15_316)))
 (let ((?x88732 (* l_0_15_315 l_0_15_315)))
 (let ((?x88730 (* l_0_15_314 l_0_15_314)))
 (let ((?x88728 (* l_0_15_313 l_0_15_313)))
 (let ((?x88726 (* l_0_15_312 l_0_15_312)))
 (let ((?x88724 (* l_0_15_311 l_0_15_311)))
 (let ((?x88722 (* l_0_15_310 l_0_15_310)))
 (let ((?x87293 (* 2.0 l_0_15_253)))
 (let ((?x91134 (* ?x87293 l_0_15_274)))
 (let ((?x90273 (* l_0_15_136 l_0_15_136)))
 (let ((?x90270 (* l_0_15_135 l_0_15_135)))
 (let ((?x90267 (* l_0_15_134 l_0_15_134)))
 (let ((?x90264 (* l_0_15_133 l_0_15_133)))
 (let ((?x90261 (* l_0_15_132 l_0_15_132)))
 (let ((?x90258 (* l_0_15_131 l_0_15_131)))
 (let ((?x91399 (- (- (* l_0_15_100 l_0_15_100) (* l_0_15_130 l_0_15_130)) ?x90258)))
 (let ((?x91406 (- (- (- (- (- (- (- ?x91399 ?x90261) ?x90264) ?x90267) ?x90270) ?x90273) ?x91134) ?x88722)))
 (let ((?x91413 (+ (- (- (- (- (- (- ?x91406 ?x88724) ?x88726) ?x88728) ?x88730) ?x88732) ?x88734) ?x13668)))
 (= (+ (+ (+ (+ (+ ?x91413 ?x47902) ?x47906) ?x13661) ?x69871) ?x13670) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x88840 (* l_0_15_324 l_0_15_324)))
 (let ((?x88838 (* l_0_15_323 l_0_15_323)))
 (let ((?x88836 (* l_0_15_322 l_0_15_322)))
 (let ((?x88834 (* l_0_15_321 l_0_15_321)))
 (let ((?x88832 (* l_0_15_320 l_0_15_320)))
 (let ((?x88829 (* l_0_15_319 l_0_15_319)))
 (let ((?x88827 (* l_0_15_318 l_0_15_318)))
 (let ((?x41885 (* l_0_15_317 l_0_15_317)))
 (let ((?x90427 (* l_0_15_144 l_0_15_144)))
 (let ((?x90424 (* l_0_15_143 l_0_15_143)))
 (let ((?x90421 (* l_0_15_142 l_0_15_142)))
 (let ((?x90418 (* l_0_15_141 l_0_15_141)))
 (let ((?x90415 (* l_0_15_140 l_0_15_140)))
 (let ((?x90412 (* l_0_15_139 l_0_15_139)))
 (let ((?x90409 (* l_0_15_138 l_0_15_138)))
 (let ((?x90406 (* l_0_15_137 l_0_15_137)))
 (let ((?x90467 (* l_0_15_108 l_0_15_108)))
 (let ((?x13830 (* l_0_15_107 l_0_15_107)))
 (let ((?x90459 (* l_0_15_106 l_0_15_106)))
 (let ((?x13766 (* l_0_15_105 l_0_15_105)))
 (let ((?x47954 (* l_0_15_104 l_0_15_104)))
 (let ((?x47951 (* l_0_15_103 l_0_15_103)))
 (let ((?x70545 (+ (+ (* l_0_15_101 l_0_15_101) (* l_0_15_102 l_0_15_102)) ?x47951)))
 (let ((?x15483 (- (- (+ (+ (+ (+ (+ ?x70545 ?x47954) ?x13766) ?x90459) ?x13830) ?x90467) ?x90406) ?x90409)))
 (let ((?x91431 (- (- (- (- (- (- (- ?x15483 ?x90412) ?x90415) ?x90418) ?x90421) ?x90424) ?x90427) (* (* 2.0 l_0_15_217) l_0_15_245))))
 (let ((?x91438 (- (- (- (- (- (- (- ?x91431 ?x41885) ?x88827) ?x88829) ?x88832) ?x88834) ?x88836) ?x88838)))
 (= (- ?x91438 ?x88840) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x87508 (* l_0_15_291 l_0_15_291)))
 (let ((?x64917 (* l_0_15_290 l_0_15_290)))
 (let ((?x84634 (* l_0_15_183 l_0_15_183)))
 (let ((?x84632 (* l_0_15_182 l_0_15_182)))
 (let ((?x70603 (- (+ (* l_0_15_146 l_0_15_146) (* l_0_15_147 l_0_15_147)) ?x84632)))
 (let ((?x70588 (- (+ (+ (- ?x70603 ?x84634) ?x64917) ?x87508) (* (* 2.0 l_0_15_326) l_0_15_340))))
 (let ((?x70576 (- (- ?x70588 (* (* 2.0 l_0_15_327) l_0_15_341)) (* (* 2.0 l_0_15_362) l_0_15_376))))
 (let ((?x70564 (- (- ?x70576 (* (* 2.0 l_0_15_363) l_0_15_377)) (* (* 2.0 l_0_15_398) l_0_15_412))))
 (let ((?x15567 (- (- ?x70564 (* (* 2.0 l_0_15_399) l_0_15_413)) (* (* 2.0 l_0_15_434) l_0_15_448))))
 (let ((?x70546 (- (- ?x15567 (* (* 2.0 l_0_15_435) l_0_15_449)) (* (* 2.0 l_0_15_470) l_0_15_484))))
 (let ((?x70510 (- (- ?x70546 (* (* 2.0 l_0_15_471) l_0_15_485)) (* (* 2.0 l_0_15_506) l_0_15_520))))
 (let ((?x70518 (- (- ?x70510 (* (* 2.0 l_0_15_507) l_0_15_521)) (* (* 2.0 l_0_15_542) l_0_15_556))))
 (= (- ?x70518 (* (* 2.0 l_0_15_543) l_0_15_557)) 0.0))))))))))))))
(assert
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x65020 (* ?x87128 l_0_15_293)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x44101 (* ?x87125 l_0_15_292)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x84796 (* ?x84795 l_0_15_185)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x84793 (* ?x84792 l_0_15_184)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x39862 (* ?x39892 l_0_15_149)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x85092 (* ?x84941 l_0_15_148)))
 (let ((?x70685 (- (+ (+ (- (- (+ ?x85092 ?x39862) ?x84793) ?x84796) ?x44101) ?x65020) (* (* 2.0 l_0_15_328) l_0_15_340))))
 (let ((?x70705 (- (- ?x70685 (* (* 2.0 l_0_15_329) l_0_15_341)) (* (* 2.0 l_0_15_330) l_0_15_342))))
 (let ((?x91505 (- (- ?x70705 (* (* 2.0 l_0_15_364) l_0_15_376)) (* (* 2.0 l_0_15_365) l_0_15_377))))
 (let ((?x91509 (- (- ?x91505 (* (* 2.0 l_0_15_366) l_0_15_378)) (* (* 2.0 l_0_15_400) l_0_15_412))))
 (let ((?x91513 (- (- ?x91509 (* (* 2.0 l_0_15_401) l_0_15_413)) (* (* 2.0 l_0_15_402) l_0_15_414))))
 (let ((?x91517 (- (- ?x91513 (* (* 2.0 l_0_15_436) l_0_15_448)) (* (* 2.0 l_0_15_437) l_0_15_449))))
 (let ((?x91521 (- (- ?x91517 (* (* 2.0 l_0_15_438) l_0_15_450)) (* (* 2.0 l_0_15_472) l_0_15_484))))
 (let ((?x91525 (- (- ?x91521 (* (* 2.0 l_0_15_473) l_0_15_485)) (* (* 2.0 l_0_15_474) l_0_15_486))))
 (let ((?x91529 (- (- ?x91525 (* (* 2.0 l_0_15_508) l_0_15_520)) (* (* 2.0 l_0_15_509) l_0_15_521))))
 (let ((?x91533 (- (- ?x91529 (* (* 2.0 l_0_15_510) l_0_15_522)) (* (* 2.0 l_0_15_544) l_0_15_556))))
 (let ((?x91537 (- (- ?x91533 (* (* 2.0 l_0_15_545) l_0_15_557)) (* (* 2.0 l_0_15_546) l_0_15_558))))
 (= ?x91537 0.0)))))))))))))))))))))))))
(assert
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87692 (* ?x87128 l_0_15_300)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87690 (* ?x87125 l_0_15_299)))
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x91627 (* ?x65259 l_0_15_269)))
 (let ((?x44458 (* 2.0 l_0_15_254)))
 (let ((?x91625 (* ?x44458 l_0_15_268)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x84948 (* ?x84795 l_0_15_192)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x84946 (* ?x84792 l_0_15_191)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x84944 (* ?x39892 l_0_15_156)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x84942 (* ?x84941 l_0_15_155)))
 (let ((?x91630 (+ (+ (+ (+ (- (- (+ ?x84942 ?x84944) ?x84946) ?x84948) ?x91625) ?x91627) ?x87690) ?x87692)))
 (let ((?x91636 (- (- ?x91630 (* (* 2.0 l_0_15_335) l_0_15_340)) (* (* 2.0 l_0_15_336) l_0_15_341))))
 (let ((?x91642 (- (- ?x91636 (* (* 2.0 l_0_15_337) l_0_15_342)) (* (* 2.0 l_0_15_338) l_0_15_343))))
 (let ((?x91648 (- (- ?x91642 (* (* 2.0 l_0_15_339) l_0_15_344)) (* (* 2.0 l_0_15_371) l_0_15_376))))
 (let ((?x91654 (- (- ?x91648 (* (* 2.0 l_0_15_372) l_0_15_377)) (* (* 2.0 l_0_15_373) l_0_15_378))))
 (let ((?x91660 (- (- ?x91654 (* (* 2.0 l_0_15_374) l_0_15_379)) (* (* 2.0 l_0_15_375) l_0_15_380))))
 (let ((?x91666 (- (- ?x91660 (* (* 2.0 l_0_15_407) l_0_15_412)) (* (* 2.0 l_0_15_408) l_0_15_413))))
 (let ((?x91672 (- (- ?x91666 (* (* 2.0 l_0_15_409) l_0_15_414)) (* (* 2.0 l_0_15_410) l_0_15_415))))
 (let ((?x91678 (- (- ?x91672 (* (* 2.0 l_0_15_411) l_0_15_416)) (* (* 2.0 l_0_15_443) l_0_15_448))))
 (let ((?x91684 (- (- ?x91678 (* (* 2.0 l_0_15_444) l_0_15_449)) (* (* 2.0 l_0_15_445) l_0_15_450))))
 (let ((?x91690 (- (- ?x91684 (* (* 2.0 l_0_15_446) l_0_15_451)) (* (* 2.0 l_0_15_447) l_0_15_452))))
 (let ((?x91696 (- (- ?x91690 (* (* 2.0 l_0_15_479) l_0_15_484)) (* (* 2.0 l_0_15_480) l_0_15_485))))
 (let ((?x91702 (- (- ?x91696 (* (* 2.0 l_0_15_481) l_0_15_486)) (* (* 2.0 l_0_15_482) l_0_15_487))))
 (let ((?x91708 (- (- ?x91702 (* (* 2.0 l_0_15_483) l_0_15_488)) (* (* 2.0 l_0_15_515) l_0_15_520))))
 (let ((?x91714 (- (- ?x91708 (* (* 2.0 l_0_15_516) l_0_15_521)) (* (* 2.0 l_0_15_517) l_0_15_522))))
 (let ((?x91720 (- (- ?x91714 (* (* 2.0 l_0_15_518) l_0_15_523)) (* (* 2.0 l_0_15_519) l_0_15_524))))
 (let ((?x91726 (- (- ?x91720 (* (* 2.0 l_0_15_551) l_0_15_556)) (* (* 2.0 l_0_15_552) l_0_15_557))))
 (let ((?x91732 (- (- ?x91726 (* (* 2.0 l_0_15_553) l_0_15_558)) (* (* 2.0 l_0_15_554) l_0_15_559))))
 (= (- ?x91732 (* (* 2.0 l_0_15_555) l_0_15_560)) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x91916 (* l_0_15_561 l_0_15_561)))
 (let ((?x91914 (* l_0_15_560 l_0_15_560)))
 (let ((?x91912 (* l_0_15_559 l_0_15_559)))
 (let ((?x91910 (* l_0_15_558 l_0_15_558)))
 (let ((?x91908 (* l_0_15_557 l_0_15_557)))
 (let ((?x91906 (* l_0_15_556 l_0_15_556)))
 (let ((?x91904 (* l_0_15_525 l_0_15_525)))
 (let ((?x91902 (* l_0_15_524 l_0_15_524)))
 (let ((?x91900 (* l_0_15_523 l_0_15_523)))
 (let ((?x91898 (* l_0_15_522 l_0_15_522)))
 (let ((?x91896 (* l_0_15_521 l_0_15_521)))
 (let ((?x91894 (* l_0_15_520 l_0_15_520)))
 (let ((?x91892 (* l_0_15_489 l_0_15_489)))
 (let ((?x91890 (* l_0_15_488 l_0_15_488)))
 (let ((?x91888 (* l_0_15_487 l_0_15_487)))
 (let ((?x91886 (* l_0_15_486 l_0_15_486)))
 (let ((?x91884 (* l_0_15_485 l_0_15_485)))
 (let ((?x91882 (* l_0_15_484 l_0_15_484)))
 (let ((?x91880 (* l_0_15_453 l_0_15_453)))
 (let ((?x91878 (* l_0_15_452 l_0_15_452)))
 (let ((?x91876 (* l_0_15_451 l_0_15_451)))
 (let ((?x91874 (* l_0_15_450 l_0_15_450)))
 (let ((?x91872 (* l_0_15_449 l_0_15_449)))
 (let ((?x91870 (* l_0_15_448 l_0_15_448)))
 (let ((?x91868 (* l_0_15_417 l_0_15_417)))
 (let ((?x91866 (* l_0_15_416 l_0_15_416)))
 (let ((?x91864 (* l_0_15_415 l_0_15_415)))
 (let ((?x91862 (* l_0_15_414 l_0_15_414)))
 (let ((?x91860 (* l_0_15_413 l_0_15_413)))
 (let ((?x91858 (* l_0_15_412 l_0_15_412)))
 (let ((?x91856 (* l_0_15_381 l_0_15_381)))
 (let ((?x91854 (* l_0_15_380 l_0_15_380)))
 (let ((?x91852 (* l_0_15_379 l_0_15_379)))
 (let ((?x91850 (* l_0_15_378 l_0_15_378)))
 (let ((?x91848 (* l_0_15_377 l_0_15_377)))
 (let ((?x91846 (* l_0_15_376 l_0_15_376)))
 (let ((?x91844 (* l_0_15_345 l_0_15_345)))
 (let ((?x91842 (* l_0_15_344 l_0_15_344)))
 (let ((?x91840 (* l_0_15_343 l_0_15_343)))
 (let ((?x91838 (* l_0_15_342 l_0_15_342)))
 (let ((?x91836 (* l_0_15_341 l_0_15_341)))
 (let ((?x91834 (* l_0_15_340 l_0_15_340)))
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87864 (* ?x87128 l_0_15_305)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87861 (* ?x87125 l_0_15_304)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x85015 (* ?x84795 l_0_15_197)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x85013 (* ?x84792 l_0_15_196)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x40263 (* ?x39892 l_0_15_161)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x89437 (* ?x84941 l_0_15_160)))
 (let ((?x91837 (- (- (+ (+ (- (- (+ ?x89437 ?x40263) ?x85013) ?x85015) ?x87861) ?x87864) ?x91834) ?x91836)))
 (let ((?x91851 (- (- (- (- (- (- (- ?x91837 ?x91838) ?x91840) ?x91842) ?x91844) ?x91846) ?x91848) ?x91850)))
 (let ((?x91865 (- (- (- (- (- (- (- ?x91851 ?x91852) ?x91854) ?x91856) ?x91858) ?x91860) ?x91862) ?x91864)))
 (let ((?x91879 (- (- (- (- (- (- (- ?x91865 ?x91866) ?x91868) ?x91870) ?x91872) ?x91874) ?x91876) ?x91878)))
 (let ((?x91893 (- (- (- (- (- (- (- ?x91879 ?x91880) ?x91882) ?x91884) ?x91886) ?x91888) ?x91890) ?x91892)))
 (let ((?x91907 (- (- (- (- (- (- (- ?x91893 ?x91894) ?x91896) ?x91898) ?x91900) ?x91902) ?x91904) ?x91906)))
 (= (- (- (- (- (- ?x91907 ?x91908) ?x91910) ?x91912) ?x91914) ?x91916) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x87959 (* ?x87128 l_0_15_311)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x87957 (* ?x87125 l_0_15_310)))
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x91627 (* ?x65259 l_0_15_269)))
 (let ((?x44458 (* 2.0 l_0_15_254)))
 (let ((?x91625 (* ?x44458 l_0_15_268)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x85101 (* ?x84795 l_0_15_203)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x85099 (* ?x84792 l_0_15_202)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x85097 (* ?x39892 l_0_15_167)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x85094 (* ?x84941 l_0_15_166)))
 (let ((?x91950 (+ (+ (- (- (- (- (+ ?x85094 ?x85097) ?x85099) ?x85101) ?x91625) ?x91627) ?x87957) ?x87959)))
 (let ((?x91956 (- (- ?x91950 (* (* 2.0 l_0_15_340) l_0_15_346)) (* (* 2.0 l_0_15_341) l_0_15_347))))
 (let ((?x91962 (- (- ?x91956 (* (* 2.0 l_0_15_342) l_0_15_348)) (* (* 2.0 l_0_15_343) l_0_15_349))))
 (let ((?x91968 (- (- ?x91962 (* (* 2.0 l_0_15_344) l_0_15_350)) (* (* 2.0 l_0_15_345) l_0_15_351))))
 (let ((?x91974 (- (- ?x91968 (* (* 2.0 l_0_15_376) l_0_15_382)) (* (* 2.0 l_0_15_377) l_0_15_383))))
 (let ((?x91980 (- (- ?x91974 (* (* 2.0 l_0_15_378) l_0_15_384)) (* (* 2.0 l_0_15_379) l_0_15_385))))
 (let ((?x91986 (- (- ?x91980 (* (* 2.0 l_0_15_380) l_0_15_386)) (* (* 2.0 l_0_15_381) l_0_15_387))))
 (let ((?x91992 (- (- ?x91986 (* (* 2.0 l_0_15_412) l_0_15_418)) (* (* 2.0 l_0_15_413) l_0_15_419))))
 (let ((?x91998 (- (- ?x91992 (* (* 2.0 l_0_15_414) l_0_15_420)) (* (* 2.0 l_0_15_415) l_0_15_421))))
 (let ((?x92004 (- (- ?x91998 (* (* 2.0 l_0_15_416) l_0_15_422)) (* (* 2.0 l_0_15_417) l_0_15_423))))
 (let ((?x92010 (- (- ?x92004 (* (* 2.0 l_0_15_448) l_0_15_454)) (* (* 2.0 l_0_15_449) l_0_15_455))))
 (let ((?x92016 (- (- ?x92010 (* (* 2.0 l_0_15_450) l_0_15_456)) (* (* 2.0 l_0_15_451) l_0_15_457))))
 (let ((?x92022 (- (- ?x92016 (* (* 2.0 l_0_15_452) l_0_15_458)) (* (* 2.0 l_0_15_453) l_0_15_459))))
 (let ((?x92028 (- (- ?x92022 (* (* 2.0 l_0_15_484) l_0_15_490)) (* (* 2.0 l_0_15_485) l_0_15_491))))
 (let ((?x92034 (- (- ?x92028 (* (* 2.0 l_0_15_486) l_0_15_492)) (* (* 2.0 l_0_15_487) l_0_15_493))))
 (let ((?x92040 (- (- ?x92034 (* (* 2.0 l_0_15_488) l_0_15_494)) (* (* 2.0 l_0_15_489) l_0_15_495))))
 (let ((?x92046 (- (- ?x92040 (* (* 2.0 l_0_15_520) l_0_15_526)) (* (* 2.0 l_0_15_521) l_0_15_527))))
 (let ((?x92052 (- (- ?x92046 (* (* 2.0 l_0_15_522) l_0_15_528)) (* (* 2.0 l_0_15_523) l_0_15_529))))
 (let ((?x92058 (- (- ?x92052 (* (* 2.0 l_0_15_524) l_0_15_530)) (* (* 2.0 l_0_15_525) l_0_15_531))))
 (let ((?x92064 (- (- ?x92058 (* (* 2.0 l_0_15_556) l_0_15_562)) (* (* 2.0 l_0_15_557) l_0_15_563))))
 (let ((?x92070 (- (- ?x92064 (* (* 2.0 l_0_15_558) l_0_15_564)) (* (* 2.0 l_0_15_559) l_0_15_565))))
 (let ((?x92076 (- (- ?x92070 (* (* 2.0 l_0_15_560) l_0_15_566)) (* (* 2.0 l_0_15_561) l_0_15_567))))
 (= ?x92076 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x87128 (* 2.0 l_0_15_291)))
 (let ((?x88127 (* ?x87128 l_0_15_318)))
 (let ((?x87125 (* 2.0 l_0_15_290)))
 (let ((?x88125 (* ?x87125 l_0_15_317)))
 (let ((?x84795 (* 2.0 l_0_15_183)))
 (let ((?x85174 (* ?x84795 l_0_15_210)))
 (let ((?x84792 (* 2.0 l_0_15_182)))
 (let ((?x85172 (* ?x84792 l_0_15_209)))
 (let ((?x39892 (* 2.0 l_0_15_147)))
 (let ((?x85170 (* ?x39892 l_0_15_174)))
 (let ((?x84941 (* 2.0 l_0_15_146)))
 (let ((?x89590 (* ?x84941 l_0_15_173)))
 (let ((?x92132 (- (- (- (+ ?x89590 ?x85170) ?x85172) ?x85174) (* (* 2.0 l_0_15_218) l_0_15_232))))
 (let ((?x92138 (- (+ (+ (- ?x92132 (* (* 2.0 l_0_15_219) l_0_15_233)) ?x88125) ?x88127) (* (* 2.0 l_0_15_340) l_0_15_353))))
 (let ((?x92142 (- (- ?x92138 (* (* 2.0 l_0_15_341) l_0_15_354)) (* (* 2.0 l_0_15_342) l_0_15_355))))
 (let ((?x92146 (- (- ?x92142 (* (* 2.0 l_0_15_343) l_0_15_356)) (* (* 2.0 l_0_15_344) l_0_15_357))))
 (let ((?x92150 (- (- ?x92146 (* (* 2.0 l_0_15_345) l_0_15_358)) (* (* 2.0 l_0_15_376) l_0_15_389))))
 (let ((?x92154 (- (- ?x92150 (* (* 2.0 l_0_15_377) l_0_15_390)) (* (* 2.0 l_0_15_378) l_0_15_391))))
 (let ((?x92158 (- (- ?x92154 (* (* 2.0 l_0_15_379) l_0_15_392)) (* (* 2.0 l_0_15_380) l_0_15_393))))
 (let ((?x92162 (- (- ?x92158 (* (* 2.0 l_0_15_381) l_0_15_394)) (* (* 2.0 l_0_15_412) l_0_15_425))))
 (let ((?x92166 (- (- ?x92162 (* (* 2.0 l_0_15_413) l_0_15_426)) (* (* 2.0 l_0_15_414) l_0_15_427))))
 (let ((?x92170 (- (- ?x92166 (* (* 2.0 l_0_15_415) l_0_15_428)) (* (* 2.0 l_0_15_416) l_0_15_429))))
 (let ((?x92174 (- (- ?x92170 (* (* 2.0 l_0_15_417) l_0_15_430)) (* (* 2.0 l_0_15_448) l_0_15_461))))
 (let ((?x92178 (- (- ?x92174 (* (* 2.0 l_0_15_449) l_0_15_462)) (* (* 2.0 l_0_15_450) l_0_15_463))))
 (let ((?x92182 (- (- ?x92178 (* (* 2.0 l_0_15_451) l_0_15_464)) (* (* 2.0 l_0_15_452) l_0_15_465))))
 (let ((?x92186 (- (- ?x92182 (* (* 2.0 l_0_15_453) l_0_15_466)) (* (* 2.0 l_0_15_484) l_0_15_497))))
 (let ((?x92190 (- (- ?x92186 (* (* 2.0 l_0_15_485) l_0_15_498)) (* (* 2.0 l_0_15_486) l_0_15_499))))
 (let ((?x92194 (- (- ?x92190 (* (* 2.0 l_0_15_487) l_0_15_500)) (* (* 2.0 l_0_15_488) l_0_15_501))))
 (let ((?x92198 (- (- ?x92194 (* (* 2.0 l_0_15_489) l_0_15_502)) (* (* 2.0 l_0_15_520) l_0_15_533))))
 (let ((?x92202 (- (- ?x92198 (* (* 2.0 l_0_15_521) l_0_15_534)) (* (* 2.0 l_0_15_522) l_0_15_535))))
 (let ((?x92206 (- (- ?x92202 (* (* 2.0 l_0_15_523) l_0_15_536)) (* (* 2.0 l_0_15_524) l_0_15_537))))
 (let ((?x92210 (- (- ?x92206 (* (* 2.0 l_0_15_525) l_0_15_538)) (* (* 2.0 l_0_15_556) l_0_15_569))))
 (let ((?x92214 (- (- ?x92210 (* (* 2.0 l_0_15_557) l_0_15_570)) (* (* 2.0 l_0_15_558) l_0_15_571))))
 (let ((?x92218 (- (- ?x92214 (* (* 2.0 l_0_15_559) l_0_15_572)) (* (* 2.0 l_0_15_560) l_0_15_573))))
 (= (- ?x92218 (* (* 2.0 l_0_15_561) l_0_15_574)) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7833 (* l_0_15_294 l_0_15_294)))
 (let ((?x7393 (* l_0_15_293 l_0_15_293)))
 (let ((?x66601 (* l_0_15_292 l_0_15_292)))
 (let ((?x85231 (* l_0_15_186 l_0_15_186)))
 (let ((?x85229 (* l_0_15_185 l_0_15_185)))
 (let ((?x85227 (* l_0_15_184 l_0_15_184)))
 (let ((?x85225 (* l_0_15_150 l_0_15_150)))
 (let ((?x71820 (+ (+ (* l_0_15_148 l_0_15_148) (* l_0_15_149 l_0_15_149)) ?x85225)))
 (= (+ (+ (+ (- (- (- ?x71820 ?x85227) ?x85229) ?x85231) ?x66601) ?x7393) ?x7833) 0.0))))))))))
(assert
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x88253 (* ?x84461 l_0_15_301)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x88251 (* ?x84458 l_0_15_300)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x88249 (* ?x84455 l_0_15_299)))
 (let ((?x84962 (* 2.0 l_0_15_258)))
 (let ((?x92251 (* ?x84962 l_0_15_270)))
 (let ((?x84959 (* 2.0 l_0_15_257)))
 (let ((?x92249 (* ?x84959 l_0_15_269)))
 (let ((?x84956 (* 2.0 l_0_15_256)))
 (let ((?x92247 (* ?x84956 l_0_15_268)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85332 (* ?x85023 l_0_15_193)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85330 (* ?x85020 l_0_15_192)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x85328 (* ?x85017 l_0_15_191)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85326 (* ?x85004 l_0_15_157)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85324 (* ?x85001 l_0_15_156)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x85322 (* ?x63799 l_0_15_155)))
 (let ((?x92250 (+ (+ (- (- (- (+ (+ ?x85322 ?x85324) ?x85326) ?x85328) ?x85330) ?x85332) ?x92247) ?x92249)))
 (= (+ (+ (+ (+ ?x92250 ?x92251) ?x88249) ?x88251) ?x88253) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x88286 (* ?x84461 l_0_15_306)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x88283 (* ?x84458 l_0_15_305)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x88280 (* ?x84455 l_0_15_304)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85355 (* ?x85023 l_0_15_198)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85353 (* ?x85020 l_0_15_197)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x40932 (* ?x85017 l_0_15_196)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x63974 (* ?x85004 l_0_15_162)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x63971 (* ?x85001 l_0_15_161)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x86376 (* ?x63799 l_0_15_160)))
 (let ((?x92278 (+ (+ (- (- (- (+ (+ ?x86376 ?x63971) ?x63974) ?x40932) ?x85353) ?x85355) ?x88280) ?x88283)))
 (= (+ ?x92278 ?x88286) 0.0)))))))))))))))))))))
(assert
 (let ((?x84461 (* 2.0 l_0_15_294)))
 (let ((?x88314 (* ?x84461 l_0_15_312)))
 (let ((?x84458 (* 2.0 l_0_15_293)))
 (let ((?x88312 (* ?x84458 l_0_15_311)))
 (let ((?x84455 (* 2.0 l_0_15_292)))
 (let ((?x88310 (* ?x84455 l_0_15_310)))
 (let ((?x84962 (* 2.0 l_0_15_258)))
 (let ((?x92251 (* ?x84962 l_0_15_270)))
 (let ((?x84959 (* 2.0 l_0_15_257)))
 (let ((?x92249 (* ?x84959 l_0_15_269)))
 (let ((?x84956 (* 2.0 l_0_15_256)))
 (let ((?x92247 (* ?x84956 l_0_15_268)))
 (let ((?x85023 (* 2.0 l_0_15_186)))
 (let ((?x85421 (* ?x85023 l_0_15_204)))
 (let ((?x85020 (* 2.0 l_0_15_185)))
 (let ((?x85419 (* ?x85020 l_0_15_203)))
 (let ((?x85017 (* 2.0 l_0_15_184)))
 (let ((?x85417 (* ?x85017 l_0_15_202)))
 (let ((?x85004 (* 2.0 l_0_15_150)))
 (let ((?x85414 (* ?x85004 l_0_15_168)))
 (let ((?x85001 (* 2.0 l_0_15_149)))
 (let ((?x85411 (* ?x85001 l_0_15_167)))
 (let ((?x63799 (* 2.0 l_0_15_148)))
 (let ((?x85408 (* ?x63799 l_0_15_166)))
 (let ((?x71814 (- (- (- (- (- (+ (+ ?x85408 ?x85411) ?x85414) ?x85417) ?x85419) ?x85421) ?x92247) ?x92249)))
 (= (+ (+ (+ (- ?x71814 ?x92251) ?x88310) ?x88312) ?x88314) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x88404 (* l_0_15_303 l_0_15_303)))
 (let ((?x88402 (* l_0_15_302 l_0_15_302)))
 (let ((?x88400 (* l_0_15_301 l_0_15_301)))
 (let ((?x88398 (* l_0_15_300 l_0_15_300)))
 (let ((?x88396 (* l_0_15_299 l_0_15_299)))
 (let ((?x89366 (* 2.0 l_0_15_267)))
 (let ((?x92308 (* ?x89366 l_0_15_272)))
 (let ((?x89363 (* 2.0 l_0_15_266)))
 (let ((?x92306 (* ?x89363 l_0_15_271)))
 (let ((?x89360 (* 2.0 l_0_15_265)))
 (let ((?x92304 (* ?x89360 l_0_15_270)))
 (let ((?x89357 (* 2.0 l_0_15_264)))
 (let ((?x92302 (* ?x89357 l_0_15_269)))
 (let ((?x89354 (* 2.0 l_0_15_263)))
 (let ((?x92300 (* ?x89354 l_0_15_268)))
 (let ((?x85918 (* l_0_15_195 l_0_15_195)))
 (let ((?x85916 (* l_0_15_194 l_0_15_194)))
 (let ((?x85914 (* l_0_15_193 l_0_15_193)))
 (let ((?x85912 (* l_0_15_192 l_0_15_192)))
 (let ((?x85910 (* l_0_15_191 l_0_15_191)))
 (let ((?x85908 (* l_0_15_159 l_0_15_159)))
 (let ((?x85906 (* l_0_15_158 l_0_15_158)))
 (let ((?x85904 (* l_0_15_157 l_0_15_157)))
 (let ((?x71868 (+ (+ (* l_0_15_155 l_0_15_155) (* l_0_15_156 l_0_15_156)) ?x85904)))
 (let ((?x92299 (- (- (- (- (- (+ (+ ?x71868 ?x85906) ?x85908) ?x85910) ?x85912) ?x85914) ?x85916) ?x85918)))
 (let ((?x92311 (+ (+ (+ (+ (+ (+ (+ ?x92299 ?x92300) ?x92302) ?x92304) ?x92306) ?x92308) ?x88396) ?x88398)))
 (= (+ (+ (+ ?x92311 ?x88400) ?x88402) ?x88404) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x88447 (* 2.0 l_0_15_303)))
 (let ((?x88448 (* ?x88447 l_0_15_308)))
 (let ((?x88444 (* 2.0 l_0_15_302)))
 (let ((?x88445 (* ?x88444 l_0_15_307)))
 (let ((?x88441 (* 2.0 l_0_15_301)))
 (let ((?x88442 (* ?x88441 l_0_15_306)))
 (let ((?x88438 (* 2.0 l_0_15_300)))
 (let ((?x88439 (* ?x88438 l_0_15_305)))
 (let ((?x88435 (* 2.0 l_0_15_299)))
 (let ((?x88436 (* ?x88435 l_0_15_304)))
 (let ((?x92344 (* l_0_15_273 l_0_15_273)))
 (let ((?x92342 (* l_0_15_272 l_0_15_272)))
 (let ((?x92340 (* l_0_15_271 l_0_15_271)))
 (let ((?x92338 (* l_0_15_270 l_0_15_270)))
 (let ((?x92336 (* l_0_15_269 l_0_15_269)))
 (let ((?x92334 (* l_0_15_268 l_0_15_268)))
 (let ((?x85994 (* 2.0 l_0_15_195)))
 (let ((?x85995 (* ?x85994 l_0_15_200)))
 (let ((?x85991 (* 2.0 l_0_15_194)))
 (let ((?x85992 (* ?x85991 l_0_15_199)))
 (let ((?x85988 (* 2.0 l_0_15_193)))
 (let ((?x85989 (* ?x85988 l_0_15_198)))
 (let ((?x85985 (* 2.0 l_0_15_192)))
 (let ((?x85986 (* ?x85985 l_0_15_197)))
 (let ((?x85982 (* 2.0 l_0_15_191)))
 (let ((?x85983 (* ?x85982 l_0_15_196)))
 (let ((?x85979 (* 2.0 l_0_15_159)))
 (let ((?x85980 (* ?x85979 l_0_15_164)))
 (let ((?x85976 (* 2.0 l_0_15_158)))
 (let ((?x85977 (* ?x85976 l_0_15_163)))
 (let ((?x85973 (* 2.0 l_0_15_157)))
 (let ((?x85974 (* ?x85973 l_0_15_162)))
 (let ((?x85970 (* 2.0 l_0_15_156)))
 (let ((?x85971 (* ?x85970 l_0_15_161)))
 (let ((?x85967 (* 2.0 l_0_15_155)))
 (let ((?x85968 (* ?x85967 l_0_15_160)))
 (let ((?x92331 (- (- (- (+ (+ (+ (+ ?x85968 ?x85971) ?x85974) ?x85977) ?x85980) ?x85983) ?x85986) ?x85989)))
 (let ((?x92343 (+ (+ (+ (+ (+ (- (- ?x92331 ?x85992) ?x85995) ?x92334) ?x92336) ?x92338) ?x92340) ?x92342)))
 (= (+ (+ (+ (+ (+ (+ ?x92343 ?x92344) ?x88436) ?x88439) ?x88442) ?x88445) ?x88448) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x88447 (* 2.0 l_0_15_303)))
 (let ((?x88492 (* ?x88447 l_0_15_314)))
 (let ((?x88444 (* 2.0 l_0_15_302)))
 (let ((?x88490 (* ?x88444 l_0_15_313)))
 (let ((?x88441 (* 2.0 l_0_15_301)))
 (let ((?x88488 (* ?x88441 l_0_15_312)))
 (let ((?x88438 (* 2.0 l_0_15_300)))
 (let ((?x88486 (* ?x88438 l_0_15_311)))
 (let ((?x88435 (* 2.0 l_0_15_299)))
 (let ((?x88484 (* ?x88435 l_0_15_310)))
 (let ((?x89487 (* 2.0 l_0_15_273)))
 (let ((?x92387 (* ?x89487 l_0_15_279)))
 (let ((?x89484 (* 2.0 l_0_15_272)))
 (let ((?x92385 (* ?x89484 l_0_15_278)))
 (let ((?x89481 (* 2.0 l_0_15_271)))
 (let ((?x92383 (* ?x89481 l_0_15_277)))
 (let ((?x89478 (* 2.0 l_0_15_270)))
 (let ((?x92381 (* ?x89478 l_0_15_276)))
 (let ((?x89475 (* 2.0 l_0_15_269)))
 (let ((?x92379 (* ?x89475 l_0_15_275)))
 (let ((?x89472 (* 2.0 l_0_15_268)))
 (let ((?x92377 (* ?x89472 l_0_15_274)))
 (let ((?x89366 (* 2.0 l_0_15_267)))
 (let ((?x92308 (* ?x89366 l_0_15_272)))
 (let ((?x89363 (* 2.0 l_0_15_266)))
 (let ((?x92306 (* ?x89363 l_0_15_271)))
 (let ((?x89360 (* 2.0 l_0_15_265)))
 (let ((?x92304 (* ?x89360 l_0_15_270)))
 (let ((?x89357 (* 2.0 l_0_15_264)))
 (let ((?x92302 (* ?x89357 l_0_15_269)))
 (let ((?x89354 (* 2.0 l_0_15_263)))
 (let ((?x92300 (* ?x89354 l_0_15_268)))
 (let ((?x85994 (* 2.0 l_0_15_195)))
 (let ((?x86104 (* ?x85994 l_0_15_206)))
 (let ((?x85991 (* 2.0 l_0_15_194)))
 (let ((?x86102 (* ?x85991 l_0_15_205)))
 (let ((?x85988 (* 2.0 l_0_15_193)))
 (let ((?x86100 (* ?x85988 l_0_15_204)))
 (let ((?x85985 (* 2.0 l_0_15_192)))
 (let ((?x86098 (* ?x85985 l_0_15_203)))
 (let ((?x85982 (* 2.0 l_0_15_191)))
 (let ((?x86096 (* ?x85982 l_0_15_202)))
 (let ((?x85979 (* 2.0 l_0_15_159)))
 (let ((?x86094 (* ?x85979 l_0_15_170)))
 (let ((?x85976 (* 2.0 l_0_15_158)))
 (let ((?x86092 (* ?x85976 l_0_15_169)))
 (let ((?x85973 (* 2.0 l_0_15_157)))
 (let ((?x86090 (* ?x85973 l_0_15_168)))
 (let ((?x85970 (* 2.0 l_0_15_156)))
 (let ((?x86088 (* ?x85970 l_0_15_167)))
 (let ((?x85967 (* 2.0 l_0_15_155)))
 (let ((?x86086 (* ?x85967 l_0_15_166)))
 (let ((?x92369 (- (- (- (+ (+ (+ (+ ?x86086 ?x86088) ?x86090) ?x86092) ?x86094) ?x86096) ?x86098) ?x86100)))
 (let ((?x92376 (- (- (- (- (- (- (- ?x92369 ?x86102) ?x86104) ?x92300) ?x92302) ?x92304) ?x92306) ?x92308)))
 (let ((?x92389 (+ (+ (+ (+ (+ (+ (+ ?x92376 ?x92377) ?x92379) ?x92381) ?x92383) ?x92385) ?x92387) ?x88484)))
 (= (+ (+ (+ (+ ?x92389 ?x88486) ?x88488) ?x88490) ?x88492) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x88447 (* 2.0 l_0_15_303)))
 (let ((?x88546 (* ?x88447 l_0_15_321)))
 (let ((?x88444 (* 2.0 l_0_15_302)))
 (let ((?x88544 (* ?x88444 l_0_15_320)))
 (let ((?x88441 (* 2.0 l_0_15_301)))
 (let ((?x88542 (* ?x88441 l_0_15_319)))
 (let ((?x88438 (* 2.0 l_0_15_300)))
 (let ((?x88540 (* ?x88438 l_0_15_318)))
 (let ((?x88435 (* 2.0 l_0_15_299)))
 (let ((?x88538 (* ?x88435 l_0_15_317)))
 (let ((?x89487 (* 2.0 l_0_15_273)))
 (let ((?x89488 (* ?x89487 l_0_15_286)))
 (let ((?x89484 (* 2.0 l_0_15_272)))
 (let ((?x89485 (* ?x89484 l_0_15_285)))
 (let ((?x89481 (* 2.0 l_0_15_271)))
 (let ((?x89482 (* ?x89481 l_0_15_284)))
 (let ((?x89478 (* 2.0 l_0_15_270)))
 (let ((?x89479 (* ?x89478 l_0_15_283)))
 (let ((?x89475 (* 2.0 l_0_15_269)))
 (let ((?x89476 (* ?x89475 l_0_15_282)))
 (let ((?x89472 (* 2.0 l_0_15_268)))
 (let ((?x89473 (* ?x89472 l_0_15_281)))
 (let ((?x85994 (* 2.0 l_0_15_195)))
 (let ((?x86211 (* ?x85994 l_0_15_213)))
 (let ((?x85991 (* 2.0 l_0_15_194)))
 (let ((?x86209 (* ?x85991 l_0_15_212)))
 (let ((?x85988 (* 2.0 l_0_15_193)))
 (let ((?x86207 (* ?x85988 l_0_15_211)))
 (let ((?x85985 (* 2.0 l_0_15_192)))
 (let ((?x86205 (* ?x85985 l_0_15_210)))
 (let ((?x85982 (* 2.0 l_0_15_191)))
 (let ((?x86203 (* ?x85982 l_0_15_209)))
 (let ((?x85979 (* 2.0 l_0_15_159)))
 (let ((?x86201 (* ?x85979 l_0_15_177)))
 (let ((?x85976 (* 2.0 l_0_15_158)))
 (let ((?x86199 (* ?x85976 l_0_15_176)))
 (let ((?x85973 (* 2.0 l_0_15_157)))
 (let ((?x86197 (* ?x85973 l_0_15_175)))
 (let ((?x85970 (* 2.0 l_0_15_156)))
 (let ((?x86195 (* ?x85970 l_0_15_174)))
 (let ((?x85967 (* 2.0 l_0_15_155)))
 (let ((?x86193 (* ?x85967 l_0_15_173)))
 (let ((?x92410 (- (- (- (+ (+ (+ (+ ?x86193 ?x86195) ?x86197) ?x86199) ?x86201) ?x86203) ?x86205) ?x86207)))
 (let ((?x92416 (- (- (- (- ?x92410 ?x86209) ?x86211) (* (* 2.0 l_0_15_227) l_0_15_232)) (* (* 2.0 l_0_15_228) l_0_15_233))))
 (let ((?x92420 (- (- ?x92416 (* (* 2.0 l_0_15_229) l_0_15_234)) (* (* 2.0 l_0_15_230) l_0_15_235))))
 (let ((?x92425 (+ (+ (+ (- ?x92420 (* (* 2.0 l_0_15_231) l_0_15_236)) ?x89473) ?x89476) ?x89479)))
 (let ((?x92432 (+ (+ (+ (+ (+ (+ (+ ?x92425 ?x89482) ?x89485) ?x89488) ?x88538) ?x88540) ?x88542) ?x88544)))
 (= (+ ?x92432 ?x88546) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x88608 (* l_0_15_309 l_0_15_309)))
 (let ((?x88606 (* l_0_15_308 l_0_15_308)))
 (let ((?x88604 (* l_0_15_307 l_0_15_307)))
 (let ((?x88602 (* l_0_15_306 l_0_15_306)))
 (let ((?x88600 (* l_0_15_305 l_0_15_305)))
 (let ((?x88598 (* l_0_15_304 l_0_15_304)))
 (let ((?x86310 (* l_0_15_201 l_0_15_201)))
 (let ((?x86308 (* l_0_15_200 l_0_15_200)))
 (let ((?x86304 (* l_0_15_199 l_0_15_199)))
 (let ((?x86302 (* l_0_15_198 l_0_15_198)))
 (let ((?x86300 (* l_0_15_197 l_0_15_197)))
 (let ((?x86298 (* l_0_15_196 l_0_15_196)))
 (let ((?x86290 (* l_0_15_165 l_0_15_165)))
 (let ((?x86275 (* l_0_15_164 l_0_15_164)))
 (let ((?x86272 (* l_0_15_163 l_0_15_163)))
 (let ((?x86268 (* l_0_15_162 l_0_15_162)))
 (let ((?x50903 (+ (+ (* l_0_15_160 l_0_15_160) (* l_0_15_161 l_0_15_161)) ?x86268)))
 (let ((?x92448 (- (- (- (- (+ (+ (+ ?x50903 ?x86272) ?x86275) ?x86290) ?x86298) ?x86300) ?x86302) ?x86304)))
 (let ((?x92455 (+ (+ (+ (+ (+ (- (- ?x92448 ?x86308) ?x86310) ?x88598) ?x88600) ?x88602) ?x88604) ?x88606)))
 (= (+ ?x92455 ?x88608) 0.0)))))))))))))))))))))
(assert
 (let ((?x88640 (* 2.0 l_0_15_309)))
 (let ((?x88641 (* ?x88640 l_0_15_315)))
 (let ((?x88637 (* 2.0 l_0_15_308)))
 (let ((?x88638 (* ?x88637 l_0_15_314)))
 (let ((?x88634 (* 2.0 l_0_15_307)))
 (let ((?x88635 (* ?x88634 l_0_15_313)))
 (let ((?x88631 (* 2.0 l_0_15_306)))
 (let ((?x88632 (* ?x88631 l_0_15_312)))
 (let ((?x88628 (* 2.0 l_0_15_305)))
 (let ((?x88629 (* ?x88628 l_0_15_311)))
 (let ((?x11269 (* 2.0 l_0_15_304)))
 (let ((?x45586 (* ?x11269 l_0_15_310)))
 (let ((?x92344 (* l_0_15_273 l_0_15_273)))
 (let ((?x92342 (* l_0_15_272 l_0_15_272)))
 (let ((?x92340 (* l_0_15_271 l_0_15_271)))
 (let ((?x92338 (* l_0_15_270 l_0_15_270)))
 (let ((?x92336 (* l_0_15_269 l_0_15_269)))
 (let ((?x92334 (* l_0_15_268 l_0_15_268)))
 (let ((?x86425 (* 2.0 l_0_15_201)))
 (let ((?x86426 (* ?x86425 l_0_15_207)))
 (let ((?x86422 (* 2.0 l_0_15_200)))
 (let ((?x86423 (* ?x86422 l_0_15_206)))
 (let ((?x86416 (* 2.0 l_0_15_199)))
 (let ((?x86417 (* ?x86416 l_0_15_205)))
 (let ((?x86413 (* 2.0 l_0_15_198)))
 (let ((?x86414 (* ?x86413 l_0_15_204)))
 (let ((?x86410 (* 2.0 l_0_15_197)))
 (let ((?x86411 (* ?x86410 l_0_15_203)))
 (let ((?x86407 (* 2.0 l_0_15_196)))
 (let ((?x86408 (* ?x86407 l_0_15_202)))
 (let ((?x86397 (* 2.0 l_0_15_165)))
 (let ((?x86398 (* ?x86397 l_0_15_171)))
 (let ((?x86394 (* 2.0 l_0_15_164)))
 (let ((?x86395 (* ?x86394 l_0_15_170)))
 (let ((?x86391 (* 2.0 l_0_15_163)))
 (let ((?x86392 (* ?x86391 l_0_15_169)))
 (let ((?x86388 (* 2.0 l_0_15_162)))
 (let ((?x86389 (* ?x86388 l_0_15_168)))
 (let ((?x86385 (* 2.0 l_0_15_161)))
 (let ((?x86386 (* ?x86385 l_0_15_167)))
 (let ((?x86382 (* 2.0 l_0_15_160)))
 (let ((?x86383 (* ?x86382 l_0_15_166)))
 (let ((?x92468 (- (- (+ (+ (+ (+ (+ ?x86383 ?x86386) ?x86389) ?x86392) ?x86395) ?x86398) ?x86408) ?x86411)))
 (let ((?x92475 (- (- (- (- (- (- (- ?x92468 ?x86414) ?x86417) ?x86423) ?x86426) ?x92334) ?x92336) ?x92338)))
 (let ((?x92482 (+ (+ (+ (+ (- (- (- ?x92475 ?x92340) ?x92342) ?x92344) ?x45586) ?x88629) ?x88632) ?x88635)))
 (= (+ (+ ?x92482 ?x88638) ?x88641) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x88640 (* 2.0 l_0_15_309)))
 (let ((?x88693 (* ?x88640 l_0_15_322)))
 (let ((?x88637 (* 2.0 l_0_15_308)))
 (let ((?x88691 (* ?x88637 l_0_15_321)))
 (let ((?x88634 (* 2.0 l_0_15_307)))
 (let ((?x88689 (* ?x88634 l_0_15_320)))
 (let ((?x88631 (* 2.0 l_0_15_306)))
 (let ((?x88687 (* ?x88631 l_0_15_319)))
 (let ((?x88628 (* 2.0 l_0_15_305)))
 (let ((?x88685 (* ?x88628 l_0_15_318)))
 (let ((?x11269 (* 2.0 l_0_15_304)))
 (let ((?x88683 (* ?x11269 l_0_15_317)))
 (let ((?x92513 (* l_0_15_237 l_0_15_237)))
 (let ((?x92511 (* l_0_15_236 l_0_15_236)))
 (let ((?x92509 (* l_0_15_235 l_0_15_235)))
 (let ((?x92507 (* l_0_15_234 l_0_15_234)))
 (let ((?x92505 (* l_0_15_233 l_0_15_233)))
 (let ((?x92503 (* l_0_15_232 l_0_15_232)))
 (let ((?x86425 (* 2.0 l_0_15_201)))
 (let ((?x86587 (* ?x86425 l_0_15_214)))
 (let ((?x86422 (* 2.0 l_0_15_200)))
 (let ((?x86585 (* ?x86422 l_0_15_213)))
 (let ((?x86416 (* 2.0 l_0_15_199)))
 (let ((?x86581 (* ?x86416 l_0_15_212)))
 (let ((?x86413 (* 2.0 l_0_15_198)))
 (let ((?x86579 (* ?x86413 l_0_15_211)))
 (let ((?x86410 (* 2.0 l_0_15_197)))
 (let ((?x86577 (* ?x86410 l_0_15_210)))
 (let ((?x86407 (* 2.0 l_0_15_196)))
 (let ((?x86575 (* ?x86407 l_0_15_209)))
 (let ((?x86397 (* 2.0 l_0_15_165)))
 (let ((?x86567 (* ?x86397 l_0_15_178)))
 (let ((?x86394 (* 2.0 l_0_15_164)))
 (let ((?x86565 (* ?x86394 l_0_15_177)))
 (let ((?x86391 (* 2.0 l_0_15_163)))
 (let ((?x86563 (* ?x86391 l_0_15_176)))
 (let ((?x86388 (* 2.0 l_0_15_162)))
 (let ((?x86561 (* ?x86388 l_0_15_175)))
 (let ((?x86385 (* 2.0 l_0_15_161)))
 (let ((?x86559 (* ?x86385 l_0_15_174)))
 (let ((?x86382 (* 2.0 l_0_15_160)))
 (let ((?x86557 (* ?x86382 l_0_15_173)))
 (let ((?x92498 (- (- (+ (+ (+ (+ (+ ?x86557 ?x86559) ?x86561) ?x86563) ?x86565) ?x86567) ?x86575) ?x86577)))
 (let ((?x92508 (- (- (- (- (- (- (- ?x92498 ?x86579) ?x86581) ?x86585) ?x86587) ?x92503) ?x92505) ?x92507)))
 (let ((?x92518 (+ (+ (+ (+ (- (- (- ?x92508 ?x92509) ?x92511) ?x92513) ?x88683) ?x88685) ?x88687) ?x88689)))
 (= (+ (+ ?x92518 ?x88691) ?x88693) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x88734 (* l_0_15_316 l_0_15_316)))
 (let ((?x88732 (* l_0_15_315 l_0_15_315)))
 (let ((?x88730 (* l_0_15_314 l_0_15_314)))
 (let ((?x88728 (* l_0_15_313 l_0_15_313)))
 (let ((?x88726 (* l_0_15_312 l_0_15_312)))
 (let ((?x88724 (* l_0_15_311 l_0_15_311)))
 (let ((?x88722 (* l_0_15_310 l_0_15_310)))
 (let ((?x89487 (* 2.0 l_0_15_273)))
 (let ((?x92387 (* ?x89487 l_0_15_279)))
 (let ((?x89484 (* 2.0 l_0_15_272)))
 (let ((?x92385 (* ?x89484 l_0_15_278)))
 (let ((?x89481 (* 2.0 l_0_15_271)))
 (let ((?x92383 (* ?x89481 l_0_15_277)))
 (let ((?x89478 (* 2.0 l_0_15_270)))
 (let ((?x92381 (* ?x89478 l_0_15_276)))
 (let ((?x89475 (* 2.0 l_0_15_269)))
 (let ((?x92379 (* ?x89475 l_0_15_275)))
 (let ((?x89472 (* 2.0 l_0_15_268)))
 (let ((?x92377 (* ?x89472 l_0_15_274)))
 (let ((?x86692 (* l_0_15_208 l_0_15_208)))
 (let ((?x86690 (* l_0_15_207 l_0_15_207)))
 (let ((?x86688 (* l_0_15_206 l_0_15_206)))
 (let ((?x86686 (* l_0_15_205 l_0_15_205)))
 (let ((?x86684 (* l_0_15_204 l_0_15_204)))
 (let ((?x86682 (* l_0_15_203 l_0_15_203)))
 (let ((?x86680 (* l_0_15_202 l_0_15_202)))
 (let ((?x86678 (* l_0_15_172 l_0_15_172)))
 (let ((?x86676 (* l_0_15_171 l_0_15_171)))
 (let ((?x86674 (* l_0_15_170 l_0_15_170)))
 (let ((?x86672 (* l_0_15_169 l_0_15_169)))
 (let ((?x86670 (* l_0_15_168 l_0_15_168)))
 (let ((?x92547 (+ (+ (* l_0_15_166 l_0_15_166) (* l_0_15_167 l_0_15_167)) ?x86670)))
 (let ((?x92554 (- (- (- (+ (+ (+ (+ ?x92547 ?x86672) ?x86674) ?x86676) ?x86678) ?x86680) ?x86682) ?x86684)))
 (let ((?x92561 (- (- (- (- (- (- (- ?x92554 ?x86686) ?x86688) ?x86690) ?x86692) ?x92377) ?x92379) ?x92381)))
 (let ((?x92568 (+ (+ (+ (+ (- (- (- ?x92561 ?x92383) ?x92385) ?x92387) ?x88722) ?x88724) ?x88726) ?x88728)))
 (= (+ (+ (+ ?x92568 ?x88730) ?x88732) ?x88734) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x88840 (* l_0_15_324 l_0_15_324)))
 (let ((?x88838 (* l_0_15_323 l_0_15_323)))
 (let ((?x88836 (* l_0_15_322 l_0_15_322)))
 (let ((?x88834 (* l_0_15_321 l_0_15_321)))
 (let ((?x88832 (* l_0_15_320 l_0_15_320)))
 (let ((?x88829 (* l_0_15_319 l_0_15_319)))
 (let ((?x88827 (* l_0_15_318 l_0_15_318)))
 (let ((?x41885 (* l_0_15_317 l_0_15_317)))
 (let ((?x87006 (* l_0_15_216 l_0_15_216)))
 (let ((?x87004 (* l_0_15_215 l_0_15_215)))
 (let ((?x87002 (* l_0_15_214 l_0_15_214)))
 (let ((?x87000 (* l_0_15_213 l_0_15_213)))
 (let ((?x86998 (* l_0_15_212 l_0_15_212)))
 (let ((?x86996 (* l_0_15_211 l_0_15_211)))
 (let ((?x86994 (* l_0_15_210 l_0_15_210)))
 (let ((?x86992 (* l_0_15_209 l_0_15_209)))
 (let ((?x86990 (* l_0_15_180 l_0_15_180)))
 (let ((?x86988 (* l_0_15_179 l_0_15_179)))
 (let ((?x86986 (* l_0_15_178 l_0_15_178)))
 (let ((?x86984 (* l_0_15_177 l_0_15_177)))
 (let ((?x86963 (* l_0_15_176 l_0_15_176)))
 (let ((?x86959 (* l_0_15_175 l_0_15_175)))
 (let ((?x17577 (+ (+ (* l_0_15_173 l_0_15_173) (* l_0_15_174 l_0_15_174)) ?x86959)))
 (let ((?x17522 (- (- (+ (+ (+ (+ (+ ?x17577 ?x86963) ?x86984) ?x86986) ?x86988) ?x86990) ?x86992) ?x86994)))
 (let ((?x92587 (- (- (- (- (- (- (- ?x17522 ?x86996) ?x86998) ?x87000) ?x87002) ?x87004) ?x87006) (* (* 2.0 l_0_15_232) l_0_15_245))))
 (let ((?x92591 (- (- ?x92587 (* (* 2.0 l_0_15_233) l_0_15_246)) (* (* 2.0 l_0_15_234) l_0_15_247))))
 (let ((?x92595 (- (- ?x92591 (* (* 2.0 l_0_15_235) l_0_15_248)) (* (* 2.0 l_0_15_236) l_0_15_249))))
 (let ((?x92600 (+ (+ (+ (- ?x92595 (* (* 2.0 l_0_15_237) l_0_15_250)) ?x41885) ?x88827) ?x88829)))
 (= (+ (+ (+ (+ (+ ?x92600 ?x88832) ?x88834) ?x88836) ?x88838) ?x88840) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x89040 (* ?x65259 l_0_15_282)))
 (let ((?x44458 (* 2.0 l_0_15_254)))
 (let ((?x89038 (* ?x44458 l_0_15_281)))
 (let ((?x92617 (- (* (* (- 2.0) l_0_15_218) l_0_15_227) (* (* 2.0 l_0_15_219) l_0_15_228))))
 (let ((?x92623 (- (- (+ (+ ?x92617 ?x89038) ?x89040) (* (* 2.0 l_0_15_335) l_0_15_353)) (* (* 2.0 l_0_15_336) l_0_15_354))))
 (let ((?x92627 (- (- ?x92623 (* (* 2.0 l_0_15_337) l_0_15_355)) (* (* 2.0 l_0_15_338) l_0_15_356))))
 (let ((?x92631 (- (- ?x92627 (* (* 2.0 l_0_15_339) l_0_15_357)) (* (* 2.0 l_0_15_371) l_0_15_389))))
 (let ((?x92635 (- (- ?x92631 (* (* 2.0 l_0_15_372) l_0_15_390)) (* (* 2.0 l_0_15_373) l_0_15_391))))
 (let ((?x92639 (- (- ?x92635 (* (* 2.0 l_0_15_374) l_0_15_392)) (* (* 2.0 l_0_15_375) l_0_15_393))))
 (let ((?x92643 (- (- ?x92639 (* (* 2.0 l_0_15_407) l_0_15_425)) (* (* 2.0 l_0_15_408) l_0_15_426))))
 (let ((?x92647 (- (- ?x92643 (* (* 2.0 l_0_15_409) l_0_15_427)) (* (* 2.0 l_0_15_410) l_0_15_428))))
 (let ((?x92651 (- (- ?x92647 (* (* 2.0 l_0_15_411) l_0_15_429)) (* (* 2.0 l_0_15_443) l_0_15_461))))
 (let ((?x92655 (- (- ?x92651 (* (* 2.0 l_0_15_444) l_0_15_462)) (* (* 2.0 l_0_15_445) l_0_15_463))))
 (let ((?x92659 (- (- ?x92655 (* (* 2.0 l_0_15_446) l_0_15_464)) (* (* 2.0 l_0_15_447) l_0_15_465))))
 (let ((?x92663 (- (- ?x92659 (* (* 2.0 l_0_15_479) l_0_15_497)) (* (* 2.0 l_0_15_480) l_0_15_498))))
 (let ((?x92667 (- (- ?x92663 (* (* 2.0 l_0_15_481) l_0_15_499)) (* (* 2.0 l_0_15_482) l_0_15_500))))
 (let ((?x92671 (- (- ?x92667 (* (* 2.0 l_0_15_483) l_0_15_501)) (* (* 2.0 l_0_15_515) l_0_15_533))))
 (let ((?x92675 (- (- ?x92671 (* (* 2.0 l_0_15_516) l_0_15_534)) (* (* 2.0 l_0_15_517) l_0_15_535))))
 (let ((?x92679 (- (- ?x92675 (* (* 2.0 l_0_15_518) l_0_15_536)) (* (* 2.0 l_0_15_519) l_0_15_537))))
 (let ((?x92683 (- (- ?x92679 (* (* 2.0 l_0_15_551) l_0_15_569)) (* (* 2.0 l_0_15_552) l_0_15_570))))
 (let ((?x92687 (- (- ?x92683 (* (* 2.0 l_0_15_553) l_0_15_571)) (* (* 2.0 l_0_15_554) l_0_15_572))))
 (= (- ?x92687 (* (* 2.0 l_0_15_555) l_0_15_573)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x92852 (* l_0_15_576 l_0_15_576)))
 (let ((?x92850 (* l_0_15_575 l_0_15_575)))
 (let ((?x92848 (* l_0_15_574 l_0_15_574)))
 (let ((?x92846 (* l_0_15_573 l_0_15_573)))
 (let ((?x92844 (* l_0_15_572 l_0_15_572)))
 (let ((?x92842 (* l_0_15_571 l_0_15_571)))
 (let ((?x92840 (* l_0_15_570 l_0_15_570)))
 (let ((?x92838 (* l_0_15_569 l_0_15_569)))
 (let ((?x92836 (* l_0_15_540 l_0_15_540)))
 (let ((?x92834 (* l_0_15_539 l_0_15_539)))
 (let ((?x92832 (* l_0_15_538 l_0_15_538)))
 (let ((?x92830 (* l_0_15_537 l_0_15_537)))
 (let ((?x92828 (* l_0_15_536 l_0_15_536)))
 (let ((?x92826 (* l_0_15_535 l_0_15_535)))
 (let ((?x92824 (* l_0_15_534 l_0_15_534)))
 (let ((?x92822 (* l_0_15_533 l_0_15_533)))
 (let ((?x92820 (* l_0_15_504 l_0_15_504)))
 (let ((?x92818 (* l_0_15_503 l_0_15_503)))
 (let ((?x92816 (* l_0_15_502 l_0_15_502)))
 (let ((?x92814 (* l_0_15_501 l_0_15_501)))
 (let ((?x92812 (* l_0_15_500 l_0_15_500)))
 (let ((?x92810 (* l_0_15_499 l_0_15_499)))
 (let ((?x92808 (* l_0_15_498 l_0_15_498)))
 (let ((?x92806 (* l_0_15_497 l_0_15_497)))
 (let ((?x92804 (* l_0_15_468 l_0_15_468)))
 (let ((?x92802 (* l_0_15_467 l_0_15_467)))
 (let ((?x92800 (* l_0_15_466 l_0_15_466)))
 (let ((?x92798 (* l_0_15_465 l_0_15_465)))
 (let ((?x92796 (* l_0_15_464 l_0_15_464)))
 (let ((?x92794 (* l_0_15_463 l_0_15_463)))
 (let ((?x92792 (* l_0_15_462 l_0_15_462)))
 (let ((?x92790 (* l_0_15_461 l_0_15_461)))
 (let ((?x92788 (* l_0_15_432 l_0_15_432)))
 (let ((?x92786 (* l_0_15_431 l_0_15_431)))
 (let ((?x92784 (* l_0_15_430 l_0_15_430)))
 (let ((?x92782 (* l_0_15_429 l_0_15_429)))
 (let ((?x92780 (* l_0_15_428 l_0_15_428)))
 (let ((?x92778 (* l_0_15_427 l_0_15_427)))
 (let ((?x92776 (* l_0_15_426 l_0_15_426)))
 (let ((?x92774 (* l_0_15_425 l_0_15_425)))
 (let ((?x92772 (* l_0_15_396 l_0_15_396)))
 (let ((?x92770 (* l_0_15_395 l_0_15_395)))
 (let ((?x92768 (* l_0_15_394 l_0_15_394)))
 (let ((?x92766 (* l_0_15_393 l_0_15_393)))
 (let ((?x92764 (* l_0_15_392 l_0_15_392)))
 (let ((?x92762 (* l_0_15_391 l_0_15_391)))
 (let ((?x92760 (* l_0_15_390 l_0_15_390)))
 (let ((?x92758 (* l_0_15_389 l_0_15_389)))
 (let ((?x92756 (* l_0_15_360 l_0_15_360)))
 (let ((?x92754 (* l_0_15_359 l_0_15_359)))
 (let ((?x92752 (* l_0_15_358 l_0_15_358)))
 (let ((?x92750 (* l_0_15_357 l_0_15_357)))
 (let ((?x92748 (* l_0_15_356 l_0_15_356)))
 (let ((?x92746 (* l_0_15_355 l_0_15_355)))
 (let ((?x92744 (* l_0_15_354 l_0_15_354)))
 (let ((?x92742 (* l_0_15_353 l_0_15_353)))
 (let ((?x92741 (- (* (* (- 2.0) l_0_15_218) l_0_15_245) (* (* 2.0 l_0_15_219) l_0_15_246))))
 (let ((?x92755 (- (- (- (- (- (- (- ?x92741 ?x92742) ?x92744) ?x92746) ?x92748) ?x92750) ?x92752) ?x92754)))
 (let ((?x92769 (- (- (- (- (- (- (- ?x92755 ?x92756) ?x92758) ?x92760) ?x92762) ?x92764) ?x92766) ?x92768)))
 (let ((?x92783 (- (- (- (- (- (- (- ?x92769 ?x92770) ?x92772) ?x92774) ?x92776) ?x92778) ?x92780) ?x92782)))
 (let ((?x92797 (- (- (- (- (- (- (- ?x92783 ?x92784) ?x92786) ?x92788) ?x92790) ?x92792) ?x92794) ?x92796)))
 (let ((?x92811 (- (- (- (- (- (- (- ?x92797 ?x92798) ?x92800) ?x92802) ?x92804) ?x92806) ?x92808) ?x92810)))
 (let ((?x92825 (- (- (- (- (- (- (- ?x92811 ?x92812) ?x92814) ?x92816) ?x92818) ?x92820) ?x92822) ?x92824)))
 (let ((?x92839 (- (- (- (- (- (- (- ?x92825 ?x92826) ?x92828) ?x92830) ?x92832) ?x92834) ?x92836) ?x92838)))
 (let ((?x92853 (- (- (- (- (- (- (- ?x92839 ?x92840) ?x92842) ?x92844) ?x92846) ?x92848) ?x92850) ?x92852)))
 (= ?x92853 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x89366 (* 2.0 l_0_15_267)))
 (let ((?x89367 (* ?x89366 l_0_15_285)))
 (let ((?x89363 (* 2.0 l_0_15_266)))
 (let ((?x89364 (* ?x89363 l_0_15_284)))
 (let ((?x89360 (* 2.0 l_0_15_265)))
 (let ((?x89361 (* ?x89360 l_0_15_283)))
 (let ((?x89357 (* 2.0 l_0_15_264)))
 (let ((?x89358 (* ?x89357 l_0_15_282)))
 (let ((?x89354 (* 2.0 l_0_15_263)))
 (let ((?x89355 (* ?x89354 l_0_15_281)))
 (let ((?x92943 (* l_0_15_231 l_0_15_231)))
 (let ((?x92941 (* l_0_15_230 l_0_15_230)))
 (let ((?x92939 (* l_0_15_229 l_0_15_229)))
 (let ((?x92940 (- (- (* (- l_0_15_227) l_0_15_227) (* l_0_15_228 l_0_15_228)) ?x92939)))
 (let ((?x92949 (+ (+ (+ (+ (+ (- (- ?x92940 ?x92941) ?x92943) ?x89355) ?x89358) ?x89361) ?x89364) ?x89367)))
 (= ?x92949 0.0)))))))))))))))))
(assert
 (let ((?x89628 (* l_0_15_288 l_0_15_288)))
 (let ((?x89626 (* l_0_15_287 l_0_15_287)))
 (let ((?x89624 (* l_0_15_286 l_0_15_286)))
 (let ((?x89622 (* l_0_15_285 l_0_15_285)))
 (let ((?x89620 (* l_0_15_284 l_0_15_284)))
 (let ((?x89618 (* l_0_15_283 l_0_15_283)))
 (let ((?x89616 (* l_0_15_282 l_0_15_282)))
 (let ((?x89614 (* l_0_15_281 l_0_15_281)))
 (let ((?x92961 (- (* (* (- 2.0) l_0_15_227) l_0_15_245) (* (* 2.0 l_0_15_228) l_0_15_246))))
 (let ((?x92965 (- (- ?x92961 (* (* 2.0 l_0_15_229) l_0_15_247)) (* (* 2.0 l_0_15_230) l_0_15_248))))
 (let ((?x92970 (+ (+ (+ (- ?x92965 (* (* 2.0 l_0_15_231) l_0_15_249)) ?x89614) ?x89616) ?x89618)))
 (= (+ (+ (+ (+ (+ ?x92970 ?x89620) ?x89622) ?x89624) ?x89626) ?x89628) 0.0)))))))))))))
(assert
 (let ((?x72449 (* l_0_15_252 l_0_15_252)))
 (let ((?x72431 (* l_0_15_251 l_0_15_251)))
 (let ((?x72463 (* l_0_15_250 l_0_15_250)))
 (let ((?x72474 (* l_0_15_249 l_0_15_249)))
 (let ((?x72457 (* l_0_15_248 l_0_15_248)))
 (let ((?x72443 (* l_0_15_247 l_0_15_247)))
 (let ((?x18991 (- (- (* (- l_0_15_245) l_0_15_245) (* l_0_15_246 l_0_15_246)) ?x72443)))
 (= (- (- (- (- (- ?x18991 ?x72457) ?x72474) ?x72463) ?x72431) ?x72449) 0.0)))))))))
(assert
 (let ((?x93011 (- (- (* (- l_0_15_254) l_0_15_254) (* l_0_15_255 l_0_15_255)) (* (* 2.0 l_0_15_326) l_0_15_346))))
 (let ((?x93015 (- (- ?x93011 (* (* 2.0 l_0_15_327) l_0_15_347)) (* (* 2.0 l_0_15_362) l_0_15_382))))
 (let ((?x93019 (- (- ?x93015 (* (* 2.0 l_0_15_363) l_0_15_383)) (* (* 2.0 l_0_15_398) l_0_15_418))))
 (let ((?x93023 (- (- ?x93019 (* (* 2.0 l_0_15_399) l_0_15_419)) (* (* 2.0 l_0_15_434) l_0_15_454))))
 (let ((?x93027 (- (- ?x93023 (* (* 2.0 l_0_15_435) l_0_15_455)) (* (* 2.0 l_0_15_470) l_0_15_490))))
 (let ((?x93031 (- (- ?x93027 (* (* 2.0 l_0_15_471) l_0_15_491)) (* (* 2.0 l_0_15_506) l_0_15_526))))
 (let ((?x93035 (- (- ?x93031 (* (* 2.0 l_0_15_507) l_0_15_527)) (* (* 2.0 l_0_15_542) l_0_15_562))))
 (= (- ?x93035 (* (* 2.0 l_0_15_543) l_0_15_563)) 0.0)))))))))
(assert
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x93090 (* ?x65259 l_0_15_257)))
 (let ((?x93093 (- (- (* (* (- 2.0) l_0_15_254) l_0_15_256) ?x93090) (* (* 2.0 l_0_15_328) l_0_15_346))))
 (let ((?x93097 (- (- ?x93093 (* (* 2.0 l_0_15_329) l_0_15_347)) (* (* 2.0 l_0_15_330) l_0_15_348))))
 (let ((?x93101 (- (- ?x93097 (* (* 2.0 l_0_15_364) l_0_15_382)) (* (* 2.0 l_0_15_365) l_0_15_383))))
 (let ((?x93105 (- (- ?x93101 (* (* 2.0 l_0_15_366) l_0_15_384)) (* (* 2.0 l_0_15_400) l_0_15_418))))
 (let ((?x93109 (- (- ?x93105 (* (* 2.0 l_0_15_401) l_0_15_419)) (* (* 2.0 l_0_15_402) l_0_15_420))))
 (let ((?x93113 (- (- ?x93109 (* (* 2.0 l_0_15_436) l_0_15_454)) (* (* 2.0 l_0_15_437) l_0_15_455))))
 (let ((?x93117 (- (- ?x93113 (* (* 2.0 l_0_15_438) l_0_15_456)) (* (* 2.0 l_0_15_472) l_0_15_490))))
 (let ((?x93121 (- (- ?x93117 (* (* 2.0 l_0_15_473) l_0_15_491)) (* (* 2.0 l_0_15_474) l_0_15_492))))
 (let ((?x93125 (- (- ?x93121 (* (* 2.0 l_0_15_508) l_0_15_526)) (* (* 2.0 l_0_15_509) l_0_15_527))))
 (let ((?x93129 (- (- ?x93125 (* (* 2.0 l_0_15_510) l_0_15_528)) (* (* 2.0 l_0_15_544) l_0_15_562))))
 (let ((?x93133 (- (- ?x93129 (* (* 2.0 l_0_15_545) l_0_15_563)) (* (* 2.0 l_0_15_546) l_0_15_564))))
 (= ?x93133 0.0)))))))))))))))
(assert
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x93171 (* ?x65259 l_0_15_275)))
 (let ((?x93169 (* ?x65259 l_0_15_264)))
 (let ((?x93168 (+ (* (* (- 2.0) l_0_15_254) l_0_15_263) (* (* 2.0 l_0_15_254) l_0_15_274))))
 (let ((?x93176 (- (- (+ (- ?x93168 ?x93169) ?x93171) (* (* 2.0 l_0_15_335) l_0_15_346)) (* (* 2.0 l_0_15_336) l_0_15_347))))
 (let ((?x93180 (- (- ?x93176 (* (* 2.0 l_0_15_337) l_0_15_348)) (* (* 2.0 l_0_15_338) l_0_15_349))))
 (let ((?x93184 (- (- ?x93180 (* (* 2.0 l_0_15_339) l_0_15_350)) (* (* 2.0 l_0_15_371) l_0_15_382))))
 (let ((?x93188 (- (- ?x93184 (* (* 2.0 l_0_15_372) l_0_15_383)) (* (* 2.0 l_0_15_373) l_0_15_384))))
 (let ((?x93192 (- (- ?x93188 (* (* 2.0 l_0_15_374) l_0_15_385)) (* (* 2.0 l_0_15_375) l_0_15_386))))
 (let ((?x93196 (- (- ?x93192 (* (* 2.0 l_0_15_407) l_0_15_418)) (* (* 2.0 l_0_15_408) l_0_15_419))))
 (let ((?x93200 (- (- ?x93196 (* (* 2.0 l_0_15_409) l_0_15_420)) (* (* 2.0 l_0_15_410) l_0_15_421))))
 (let ((?x93204 (- (- ?x93200 (* (* 2.0 l_0_15_411) l_0_15_422)) (* (* 2.0 l_0_15_443) l_0_15_454))))
 (let ((?x93208 (- (- ?x93204 (* (* 2.0 l_0_15_444) l_0_15_455)) (* (* 2.0 l_0_15_445) l_0_15_456))))
 (let ((?x93212 (- (- ?x93208 (* (* 2.0 l_0_15_446) l_0_15_457)) (* (* 2.0 l_0_15_447) l_0_15_458))))
 (let ((?x93216 (- (- ?x93212 (* (* 2.0 l_0_15_479) l_0_15_490)) (* (* 2.0 l_0_15_480) l_0_15_491))))
 (let ((?x93220 (- (- ?x93216 (* (* 2.0 l_0_15_481) l_0_15_492)) (* (* 2.0 l_0_15_482) l_0_15_493))))
 (let ((?x93224 (- (- ?x93220 (* (* 2.0 l_0_15_483) l_0_15_494)) (* (* 2.0 l_0_15_515) l_0_15_526))))
 (let ((?x93228 (- (- ?x93224 (* (* 2.0 l_0_15_516) l_0_15_527)) (* (* 2.0 l_0_15_517) l_0_15_528))))
 (let ((?x93232 (- (- ?x93228 (* (* 2.0 l_0_15_518) l_0_15_529)) (* (* 2.0 l_0_15_519) l_0_15_530))))
 (let ((?x93236 (- (- ?x93232 (* (* 2.0 l_0_15_551) l_0_15_562)) (* (* 2.0 l_0_15_552) l_0_15_563))))
 (let ((?x93240 (- (- ?x93236 (* (* 2.0 l_0_15_553) l_0_15_564)) (* (* 2.0 l_0_15_554) l_0_15_565))))
 (= (- ?x93240 (* (* 2.0 l_0_15_555) l_0_15_566)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x93432 (* l_0_15_568 l_0_15_568)))
 (let ((?x93430 (* l_0_15_567 l_0_15_567)))
 (let ((?x93428 (* l_0_15_566 l_0_15_566)))
 (let ((?x93426 (* l_0_15_565 l_0_15_565)))
 (let ((?x93424 (* l_0_15_564 l_0_15_564)))
 (let ((?x93422 (* l_0_15_563 l_0_15_563)))
 (let ((?x93420 (* l_0_15_562 l_0_15_562)))
 (let ((?x93418 (* l_0_15_532 l_0_15_532)))
 (let ((?x93416 (* l_0_15_531 l_0_15_531)))
 (let ((?x93414 (* l_0_15_530 l_0_15_530)))
 (let ((?x93412 (* l_0_15_529 l_0_15_529)))
 (let ((?x93410 (* l_0_15_528 l_0_15_528)))
 (let ((?x93408 (* l_0_15_527 l_0_15_527)))
 (let ((?x93406 (* l_0_15_526 l_0_15_526)))
 (let ((?x93404 (* l_0_15_496 l_0_15_496)))
 (let ((?x93402 (* l_0_15_495 l_0_15_495)))
 (let ((?x93400 (* l_0_15_494 l_0_15_494)))
 (let ((?x93398 (* l_0_15_493 l_0_15_493)))
 (let ((?x93396 (* l_0_15_492 l_0_15_492)))
 (let ((?x93394 (* l_0_15_491 l_0_15_491)))
 (let ((?x93392 (* l_0_15_490 l_0_15_490)))
 (let ((?x93390 (* l_0_15_460 l_0_15_460)))
 (let ((?x93388 (* l_0_15_459 l_0_15_459)))
 (let ((?x93386 (* l_0_15_458 l_0_15_458)))
 (let ((?x93384 (* l_0_15_457 l_0_15_457)))
 (let ((?x93382 (* l_0_15_456 l_0_15_456)))
 (let ((?x93380 (* l_0_15_455 l_0_15_455)))
 (let ((?x93378 (* l_0_15_454 l_0_15_454)))
 (let ((?x93376 (* l_0_15_424 l_0_15_424)))
 (let ((?x93374 (* l_0_15_423 l_0_15_423)))
 (let ((?x93372 (* l_0_15_422 l_0_15_422)))
 (let ((?x93370 (* l_0_15_421 l_0_15_421)))
 (let ((?x93368 (* l_0_15_420 l_0_15_420)))
 (let ((?x93366 (* l_0_15_419 l_0_15_419)))
 (let ((?x93364 (* l_0_15_418 l_0_15_418)))
 (let ((?x93362 (* l_0_15_388 l_0_15_388)))
 (let ((?x93360 (* l_0_15_387 l_0_15_387)))
 (let ((?x93358 (* l_0_15_386 l_0_15_386)))
 (let ((?x93356 (* l_0_15_385 l_0_15_385)))
 (let ((?x93354 (* l_0_15_384 l_0_15_384)))
 (let ((?x93352 (* l_0_15_383 l_0_15_383)))
 (let ((?x93350 (* l_0_15_382 l_0_15_382)))
 (let ((?x93348 (* l_0_15_352 l_0_15_352)))
 (let ((?x93346 (* l_0_15_351 l_0_15_351)))
 (let ((?x93344 (* l_0_15_350 l_0_15_350)))
 (let ((?x93342 (* l_0_15_349 l_0_15_349)))
 (let ((?x93340 (* l_0_15_348 l_0_15_348)))
 (let ((?x93338 (* l_0_15_347 l_0_15_347)))
 (let ((?x93336 (* l_0_15_346 l_0_15_346)))
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x93171 (* ?x65259 l_0_15_275)))
 (let ((?x93341 (- (- (- (- (* (* (- 2.0) l_0_15_254) l_0_15_274) ?x93171) ?x93336) ?x93338) ?x93340)))
 (let ((?x93355 (- (- (- (- (- (- (- ?x93341 ?x93342) ?x93344) ?x93346) ?x93348) ?x93350) ?x93352) ?x93354)))
 (let ((?x93369 (- (- (- (- (- (- (- ?x93355 ?x93356) ?x93358) ?x93360) ?x93362) ?x93364) ?x93366) ?x93368)))
 (let ((?x93383 (- (- (- (- (- (- (- ?x93369 ?x93370) ?x93372) ?x93374) ?x93376) ?x93378) ?x93380) ?x93382)))
 (let ((?x93397 (- (- (- (- (- (- (- ?x93383 ?x93384) ?x93386) ?x93388) ?x93390) ?x93392) ?x93394) ?x93396)))
 (let ((?x93411 (- (- (- (- (- (- (- ?x93397 ?x93398) ?x93400) ?x93402) ?x93404) ?x93406) ?x93408) ?x93410)))
 (let ((?x93425 (- (- (- (- (- (- (- ?x93411 ?x93412) ?x93414) ?x93416) ?x93418) ?x93420) ?x93422) ?x93424)))
 (= (- (- (- (- ?x93425 ?x93426) ?x93428) ?x93430) ?x93432) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x93506 (* l_0_15_258 l_0_15_258)))
 (let ((?x93507 (- (- (* (- l_0_15_256) l_0_15_256) (* l_0_15_257 l_0_15_257)) ?x93506)))
 (= ?x93507 0.0))))
(assert
 (let ((?x84962 (* 2.0 l_0_15_258)))
 (let ((?x93530 (* ?x84962 l_0_15_276)))
 (let ((?x93528 (* ?x84962 l_0_15_265)))
 (let ((?x84959 (* 2.0 l_0_15_257)))
 (let ((?x93526 (* ?x84959 l_0_15_275)))
 (let ((?x93524 (* ?x84959 l_0_15_264)))
 (let ((?x93523 (+ (* (* (- 2.0) l_0_15_256) l_0_15_263) (* (* 2.0 l_0_15_256) l_0_15_274))))
 (= (+ (- (+ (- ?x93523 ?x93524) ?x93526) ?x93528) ?x93530) 0.0)))))))))
(assert
 (let ((?x84962 (* 2.0 l_0_15_258)))
 (let ((?x93530 (* ?x84962 l_0_15_276)))
 (let ((?x84959 (* 2.0 l_0_15_257)))
 (let ((?x93526 (* ?x84959 l_0_15_275)))
 (= (- (- (* (* (- 2.0) l_0_15_256) l_0_15_274) ?x93526) ?x93530) 0.0))))))
(assert
 (let ((?x93577 (* l_0_15_267 l_0_15_267)))
 (let ((?x89366 (* 2.0 l_0_15_267)))
 (let ((?x93575 (* ?x89366 l_0_15_278)))
 (let ((?x93573 (* l_0_15_266 l_0_15_266)))
 (let ((?x89363 (* 2.0 l_0_15_266)))
 (let ((?x93571 (* ?x89363 l_0_15_277)))
 (let ((?x93569 (* l_0_15_265 l_0_15_265)))
 (let ((?x89360 (* 2.0 l_0_15_265)))
 (let ((?x93567 (* ?x89360 l_0_15_276)))
 (let ((?x93565 (* l_0_15_264 l_0_15_264)))
 (let ((?x89357 (* 2.0 l_0_15_264)))
 (let ((?x93563 (* ?x89357 l_0_15_275)))
 (let ((?x93561 (* l_0_15_263 l_0_15_263)))
 (let ((?x93568 (+ (- (+ (- (* (* 2.0 l_0_15_263) l_0_15_274) ?x93561) ?x93563) ?x93565) ?x93567)))
 (= (- (+ (- (+ (- ?x93568 ?x93569) ?x93571) ?x93573) ?x93575) ?x93577) 0.0))))))))))))))))
(assert
 (let ((?x93631 (* l_0_15_280 l_0_15_280)))
 (let ((?x93629 (* l_0_15_279 l_0_15_279)))
 (let ((?x93627 (* l_0_15_278 l_0_15_278)))
 (let ((?x93625 (* l_0_15_277 l_0_15_277)))
 (let ((?x93623 (* l_0_15_276 l_0_15_276)))
 (let ((?x93621 (* l_0_15_275 l_0_15_275)))
 (let ((?x93619 (* l_0_15_274 l_0_15_274)))
 (let ((?x89366 (* 2.0 l_0_15_267)))
 (let ((?x93575 (* ?x89366 l_0_15_278)))
 (let ((?x89363 (* 2.0 l_0_15_266)))
 (let ((?x93571 (* ?x89363 l_0_15_277)))
 (let ((?x89360 (* 2.0 l_0_15_265)))
 (let ((?x93567 (* ?x89360 l_0_15_276)))
 (let ((?x89357 (* 2.0 l_0_15_264)))
 (let ((?x93563 (* ?x89357 l_0_15_275)))
 (let ((?x93618 (- (- (- (- (* (* (- 2.0) l_0_15_263) l_0_15_274) ?x93563) ?x93567) ?x93571) ?x93575)))
 (let ((?x93632 (+ (+ (+ (+ (+ (+ (+ ?x93618 ?x93619) ?x93621) ?x93623) ?x93625) ?x93627) ?x93629) ?x93631)))
 (= ?x93632 0.0)))))))))))))))))))
(assert
 (let ((?x93631 (* l_0_15_280 l_0_15_280)))
 (let ((?x93629 (* l_0_15_279 l_0_15_279)))
 (let ((?x93627 (* l_0_15_278 l_0_15_278)))
 (let ((?x93625 (* l_0_15_277 l_0_15_277)))
 (let ((?x93623 (* l_0_15_276 l_0_15_276)))
 (let ((?x93646 (- (- (* (- l_0_15_274) l_0_15_274) (* l_0_15_275 l_0_15_275)) ?x93623)))
 (= (- (- (- (- ?x93646 ?x93625) ?x93627) ?x93629) ?x93631) 0.0))))))))
(assert
 (let ((?x93656 (- (+ (* l_0_15_254 l_0_15_254) (* l_0_15_255 l_0_15_255)) (* (* 2.0 l_0_15_326) l_0_15_335))))
 (let ((?x93660 (- (- ?x93656 (* (* 2.0 l_0_15_327) l_0_15_336)) (* (* 2.0 l_0_15_362) l_0_15_371))))
 (let ((?x93664 (- (- ?x93660 (* (* 2.0 l_0_15_363) l_0_15_372)) (* (* 2.0 l_0_15_398) l_0_15_407))))
 (let ((?x93668 (- (- ?x93664 (* (* 2.0 l_0_15_399) l_0_15_408)) (* (* 2.0 l_0_15_434) l_0_15_443))))
 (let ((?x93672 (- (- ?x93668 (* (* 2.0 l_0_15_435) l_0_15_444)) (* (* 2.0 l_0_15_470) l_0_15_479))))
 (let ((?x93676 (- (- ?x93672 (* (* 2.0 l_0_15_471) l_0_15_480)) (* (* 2.0 l_0_15_506) l_0_15_515))))
 (let ((?x93680 (- (- ?x93676 (* (* 2.0 l_0_15_507) l_0_15_516)) (* (* 2.0 l_0_15_542) l_0_15_551))))
 (= (- ?x93680 (* (* 2.0 l_0_15_543) l_0_15_552)) 0.0)))))))))
(assert
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x93090 (* ?x65259 l_0_15_257)))
 (let ((?x21144 (- (+ (* (* 2.0 l_0_15_254) l_0_15_256) ?x93090) (* (* 2.0 l_0_15_328) l_0_15_335))))
 (let ((?x73025 (- (- ?x21144 (* (* 2.0 l_0_15_329) l_0_15_336)) (* (* 2.0 l_0_15_330) l_0_15_337))))
 (let ((?x21180 (- (- ?x73025 (* (* 2.0 l_0_15_364) l_0_15_371)) (* (* 2.0 l_0_15_365) l_0_15_372))))
 (let ((?x73040 (- (- ?x21180 (* (* 2.0 l_0_15_366) l_0_15_373)) (* (* 2.0 l_0_15_400) l_0_15_407))))
 (let ((?x52624 (- (- ?x73040 (* (* 2.0 l_0_15_401) l_0_15_408)) (* (* 2.0 l_0_15_402) l_0_15_409))))
 (let ((?x93722 (- (- ?x52624 (* (* 2.0 l_0_15_436) l_0_15_443)) (* (* 2.0 l_0_15_437) l_0_15_444))))
 (let ((?x93726 (- (- ?x93722 (* (* 2.0 l_0_15_438) l_0_15_445)) (* (* 2.0 l_0_15_472) l_0_15_479))))
 (let ((?x93730 (- (- ?x93726 (* (* 2.0 l_0_15_473) l_0_15_480)) (* (* 2.0 l_0_15_474) l_0_15_481))))
 (let ((?x93734 (- (- ?x93730 (* (* 2.0 l_0_15_508) l_0_15_515)) (* (* 2.0 l_0_15_509) l_0_15_516))))
 (let ((?x93738 (- (- ?x93734 (* (* 2.0 l_0_15_510) l_0_15_517)) (* (* 2.0 l_0_15_544) l_0_15_551))))
 (let ((?x93742 (- (- ?x93738 (* (* 2.0 l_0_15_545) l_0_15_552)) (* (* 2.0 l_0_15_546) l_0_15_553))))
 (= ?x93742 0.0)))))))))))))))
(assert
 (let ((?x93886 (* l_0_15_555 l_0_15_555)))
 (let ((?x93884 (* l_0_15_554 l_0_15_554)))
 (let ((?x93882 (* l_0_15_553 l_0_15_553)))
 (let ((?x93880 (* l_0_15_552 l_0_15_552)))
 (let ((?x93878 (* l_0_15_551 l_0_15_551)))
 (let ((?x93876 (* l_0_15_519 l_0_15_519)))
 (let ((?x93874 (* l_0_15_518 l_0_15_518)))
 (let ((?x93872 (* l_0_15_517 l_0_15_517)))
 (let ((?x93870 (* l_0_15_516 l_0_15_516)))
 (let ((?x93868 (* l_0_15_515 l_0_15_515)))
 (let ((?x93866 (* l_0_15_483 l_0_15_483)))
 (let ((?x93864 (* l_0_15_482 l_0_15_482)))
 (let ((?x93862 (* l_0_15_481 l_0_15_481)))
 (let ((?x93860 (* l_0_15_480 l_0_15_480)))
 (let ((?x93858 (* l_0_15_479 l_0_15_479)))
 (let ((?x93856 (* l_0_15_447 l_0_15_447)))
 (let ((?x93854 (* l_0_15_446 l_0_15_446)))
 (let ((?x93852 (* l_0_15_445 l_0_15_445)))
 (let ((?x93850 (* l_0_15_444 l_0_15_444)))
 (let ((?x93848 (* l_0_15_443 l_0_15_443)))
 (let ((?x93846 (* l_0_15_411 l_0_15_411)))
 (let ((?x93844 (* l_0_15_410 l_0_15_410)))
 (let ((?x93842 (* l_0_15_409 l_0_15_409)))
 (let ((?x93840 (* l_0_15_408 l_0_15_408)))
 (let ((?x93838 (* l_0_15_407 l_0_15_407)))
 (let ((?x93836 (* l_0_15_375 l_0_15_375)))
 (let ((?x93834 (* l_0_15_374 l_0_15_374)))
 (let ((?x93832 (* l_0_15_373 l_0_15_373)))
 (let ((?x93830 (* l_0_15_372 l_0_15_372)))
 (let ((?x93828 (* l_0_15_371 l_0_15_371)))
 (let ((?x93826 (* l_0_15_339 l_0_15_339)))
 (let ((?x93824 (* l_0_15_338 l_0_15_338)))
 (let ((?x93822 (* l_0_15_337 l_0_15_337)))
 (let ((?x93820 (* l_0_15_336 l_0_15_336)))
 (let ((?x93818 (* l_0_15_335 l_0_15_335)))
 (let ((?x65259 (* 2.0 l_0_15_255)))
 (let ((?x93169 (* ?x65259 l_0_15_264)))
 (let ((?x93823 (- (- (- (+ (* (* 2.0 l_0_15_254) l_0_15_263) ?x93169) ?x93818) ?x93820) ?x93822)))
 (let ((?x93837 (- (- (- (- (- (- (- ?x93823 ?x93824) ?x93826) ?x93828) ?x93830) ?x93832) ?x93834) ?x93836)))
 (let ((?x93851 (- (- (- (- (- (- (- ?x93837 ?x93838) ?x93840) ?x93842) ?x93844) ?x93846) ?x93848) ?x93850)))
 (let ((?x93865 (- (- (- (- (- (- (- ?x93851 ?x93852) ?x93854) ?x93856) ?x93858) ?x93860) ?x93862) ?x93864)))
 (let ((?x93879 (- (- (- (- (- (- (- ?x93865 ?x93866) ?x93868) ?x93870) ?x93872) ?x93874) ?x93876) ?x93878)))
 (= (- (- (- (- ?x93879 ?x93880) ?x93882) ?x93884) ?x93886) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x93506 (* l_0_15_258 l_0_15_258)))
 (let ((?x73256 (+ (+ (* l_0_15_256 l_0_15_256) (* l_0_15_257 l_0_15_257)) ?x93506)))
 (= ?x73256 0.0))))
(assert
 (let ((?x84962 (* 2.0 l_0_15_258)))
 (let ((?x93528 (* ?x84962 l_0_15_265)))
 (let ((?x84959 (* 2.0 l_0_15_257)))
 (let ((?x93524 (* ?x84959 l_0_15_264)))
 (= (+ (+ (* (* 2.0 l_0_15_256) l_0_15_263) ?x93524) ?x93528) 0.0))))))
(assert
 (let ((?x93577 (* l_0_15_267 l_0_15_267)))
 (let ((?x93573 (* l_0_15_266 l_0_15_266)))
 (let ((?x93569 (* l_0_15_265 l_0_15_265)))
 (let ((?x73261 (+ (+ (* l_0_15_263 l_0_15_263) (* l_0_15_264 l_0_15_264)) ?x93569)))
 (= (+ (+ ?x73261 ?x93573) ?x93577) 0.0))))))
(assert
 (let ((?x93951 (- (* (* (- 2.0) l_0_15_326) l_0_15_328) (* (* 2.0 l_0_15_327) l_0_15_329))))
 (let ((?x93955 (- (- ?x93951 (* (* 2.0 l_0_15_362) l_0_15_364)) (* (* 2.0 l_0_15_363) l_0_15_365))))
 (let ((?x93959 (- (- ?x93955 (* (* 2.0 l_0_15_398) l_0_15_400)) (* (* 2.0 l_0_15_399) l_0_15_401))))
 (let ((?x93963 (- (- ?x93959 (* (* 2.0 l_0_15_434) l_0_15_436)) (* (* 2.0 l_0_15_435) l_0_15_437))))
 (let ((?x93967 (- (- ?x93963 (* (* 2.0 l_0_15_470) l_0_15_472)) (* (* 2.0 l_0_15_471) l_0_15_473))))
 (let ((?x93971 (- (- ?x93967 (* (* 2.0 l_0_15_506) l_0_15_508)) (* (* 2.0 l_0_15_507) l_0_15_509))))
 (let ((?x93975 (- (- ?x93971 (* (* 2.0 l_0_15_542) l_0_15_544)) (* (* 2.0 l_0_15_543) l_0_15_545))))
 (= ?x93975 0.0)))))))))
(assert
 (let ((?x94065 (* l_0_15_546 l_0_15_546)))
 (let ((?x94063 (* l_0_15_545 l_0_15_545)))
 (let ((?x94061 (* l_0_15_544 l_0_15_544)))
 (let ((?x94059 (* l_0_15_510 l_0_15_510)))
 (let ((?x94057 (* l_0_15_509 l_0_15_509)))
 (let ((?x94055 (* l_0_15_508 l_0_15_508)))
 (let ((?x94053 (* l_0_15_474 l_0_15_474)))
 (let ((?x94051 (* l_0_15_473 l_0_15_473)))
 (let ((?x94049 (* l_0_15_472 l_0_15_472)))
 (let ((?x94047 (* l_0_15_438 l_0_15_438)))
 (let ((?x94045 (* l_0_15_437 l_0_15_437)))
 (let ((?x94043 (* l_0_15_436 l_0_15_436)))
 (let ((?x94041 (* l_0_15_402 l_0_15_402)))
 (let ((?x94039 (* l_0_15_401 l_0_15_401)))
 (let ((?x94037 (* l_0_15_400 l_0_15_400)))
 (let ((?x94035 (* l_0_15_366 l_0_15_366)))
 (let ((?x94033 (* l_0_15_365 l_0_15_365)))
 (let ((?x94031 (* l_0_15_364 l_0_15_364)))
 (let ((?x94029 (* l_0_15_330 l_0_15_330)))
 (let ((?x94030 (- (- (* (- l_0_15_328) l_0_15_328) (* l_0_15_329 l_0_15_329)) ?x94029)))
 (let ((?x94044 (- (- (- (- (- (- (- ?x94030 ?x94031) ?x94033) ?x94035) ?x94037) ?x94039) ?x94041) ?x94043)))
 (let ((?x94058 (- (- (- (- (- (- (- ?x94044 ?x94045) ?x94047) ?x94049) ?x94051) ?x94053) ?x94055) ?x94057)))
 (= (- (- (- (- ?x94058 ?x94059) ?x94061) ?x94063) ?x94065) 0.0))))))))))))))))))))))))
(assert
 (>= l_0_15_1 0.0))
(assert
 (>= l_0_15_3 0.0))
(assert
 (>= l_0_15_6 0.0))
(assert
 (>= l_0_15_10 0.0))
(assert
 (>= l_0_15_15 0.0))
(assert
 (>= l_0_15_21 0.0))
(assert
 (>= l_0_15_28 0.0))
(assert
 (>= l_0_15_36 0.0))
(assert
 (>= l_0_15_37 0.0))
(assert
 (>= l_0_15_39 0.0))
(assert
 (>= l_0_15_42 0.0))
(assert
 (>= l_0_15_46 0.0))
(assert
 (>= l_0_15_51 0.0))
(assert
 (>= l_0_15_57 0.0))
(assert
 (>= l_0_15_64 0.0))
(assert
 (>= l_0_15_72 0.0))
(assert
 (>= l_0_15_73 0.0))
(assert
 (>= l_0_15_75 0.0))
(assert
 (>= l_0_15_78 0.0))
(assert
 (>= l_0_15_82 0.0))
(assert
 (>= l_0_15_87 0.0))
(assert
 (>= l_0_15_93 0.0))
(assert
 (>= l_0_15_100 0.0))
(assert
 (>= l_0_15_108 0.0))
(assert
 (>= l_0_15_109 0.0))
(assert
 (>= l_0_15_111 0.0))
(assert
 (>= l_0_15_114 0.0))
(assert
 (>= l_0_15_118 0.0))
(assert
 (>= l_0_15_123 0.0))
(assert
 (>= l_0_15_129 0.0))
(assert
 (>= l_0_15_136 0.0))
(assert
 (>= l_0_15_144 0.0))
(assert
 (>= l_0_15_145 0.0))
(assert
 (>= l_0_15_147 0.0))
(assert
 (>= l_0_15_150 0.0))
(assert
 (>= l_0_15_154 0.0))
(assert
 (>= l_0_15_159 0.0))
(assert
 (>= l_0_15_165 0.0))
(assert
 (>= l_0_15_172 0.0))
(assert
 (>= l_0_15_180 0.0))
(assert
 (>= l_0_15_181 0.0))
(assert
 (>= l_0_15_183 0.0))
(assert
 (>= l_0_15_186 0.0))
(assert
 (>= l_0_15_190 0.0))
(assert
 (>= l_0_15_195 0.0))
(assert
 (>= l_0_15_201 0.0))
(assert
 (>= l_0_15_208 0.0))
(assert
 (>= l_0_15_216 0.0))
(assert
 (>= l_0_15_217 0.0))
(assert
 (>= l_0_15_219 0.0))
(assert
 (>= l_0_15_222 0.0))
(assert
 (>= l_0_15_226 0.0))
(assert
 (>= l_0_15_231 0.0))
(assert
 (>= l_0_15_237 0.0))
(assert
 (>= l_0_15_244 0.0))
(assert
 (>= l_0_15_252 0.0))
(assert
 (>= l_0_15_253 0.0))
(assert
 (>= l_0_15_255 0.0))
(assert
 (>= l_0_15_258 0.0))
(assert
 (>= l_0_15_262 0.0))
(assert
 (>= l_0_15_267 0.0))
(assert
 (>= l_0_15_273 0.0))
(assert
 (>= l_0_15_280 0.0))
(assert
 (>= l_0_15_288 0.0))
(assert
 (>= l_0_15_289 0.0))
(assert
 (>= l_0_15_291 0.0))
(assert
 (>= l_0_15_294 0.0))
(assert
 (>= l_0_15_298 0.0))
(assert
 (>= l_0_15_303 0.0))
(assert
 (>= l_0_15_309 0.0))
(assert
 (>= l_0_15_316 0.0))
(assert
 (>= l_0_15_324 0.0))
(assert
 (>= l_0_15_325 0.0))
(assert
 (>= l_0_15_327 0.0))
(assert
 (>= l_0_15_330 0.0))
(assert
 (>= l_0_15_334 0.0))
(assert
 (>= l_0_15_339 0.0))
(assert
 (>= l_0_15_345 0.0))
(assert
 (>= l_0_15_352 0.0))
(assert
 (>= l_0_15_360 0.0))
(assert
 (>= l_0_15_361 0.0))
(assert
 (>= l_0_15_363 0.0))
(assert
 (>= l_0_15_366 0.0))
(assert
 (>= l_0_15_370 0.0))
(assert
 (>= l_0_15_375 0.0))
(assert
 (>= l_0_15_381 0.0))
(assert
 (>= l_0_15_388 0.0))
(assert
 (>= l_0_15_396 0.0))
(assert
 (>= l_0_15_397 0.0))
(assert
 (>= l_0_15_399 0.0))
(assert
 (>= l_0_15_402 0.0))
(assert
 (>= l_0_15_406 0.0))
(assert
 (>= l_0_15_411 0.0))
(assert
 (>= l_0_15_417 0.0))
(assert
 (>= l_0_15_424 0.0))
(assert
 (>= l_0_15_432 0.0))
(assert
 (>= l_0_15_433 0.0))
(assert
 (>= l_0_15_435 0.0))
(assert
 (>= l_0_15_438 0.0))
(assert
 (>= l_0_15_442 0.0))
(assert
 (>= l_0_15_447 0.0))
(assert
 (>= l_0_15_453 0.0))
(assert
 (>= l_0_15_460 0.0))
(assert
 (>= l_0_15_468 0.0))
(assert
 (>= l_0_15_469 0.0))
(assert
 (>= l_0_15_471 0.0))
(assert
 (>= l_0_15_474 0.0))
(assert
 (>= l_0_15_478 0.0))
(assert
 (>= l_0_15_483 0.0))
(assert
 (>= l_0_15_489 0.0))
(assert
 (>= l_0_15_496 0.0))
(assert
 (>= l_0_15_504 0.0))
(assert
 (>= l_0_15_505 0.0))
(assert
 (>= l_0_15_507 0.0))
(assert
 (>= l_0_15_510 0.0))
(assert
 (>= l_0_15_514 0.0))
(assert
 (>= l_0_15_519 0.0))
(assert
 (>= l_0_15_525 0.0))
(assert
 (>= l_0_15_532 0.0))
(assert
 (>= l_0_15_540 0.0))
(assert
 (>= l_0_15_541 0.0))
(assert
 (>= l_0_15_543 0.0))
(assert
 (>= l_0_15_546 0.0))
(assert
 (>= l_0_15_550 0.0))
(assert
 (>= l_0_15_555 0.0))
(assert
 (>= l_0_15_561 0.0))
(assert
 (>= l_0_15_568 0.0))
(assert
 (>= l_0_15_576 0.0))
(assert
 (let ((?x94238 (* l_0_16_219 l_0_16_219)))
 (let ((?x94242 (- (- (- _a_5_ (* l_0_16_218 l_0_16_218)) ?x94238) (* (* 2.0 l_0_16_326) l_0_16_353))))
 (= (- ?x94242 (* (* 2.0 l_0_16_327) l_0_16_354)) 0.0))))
(assert
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x94279 (* ?x94278 l_0_16_282)))
 (let ((?x94275 (* 2.0 l_0_16_254)))
 (let ((?x94276 (* ?x94275 l_0_16_281)))
 (let ((?x94267 (* l_0_16_147 l_0_16_147)))
 (let ((?x94265 (* l_0_16_146 l_0_16_146)))
 (let ((?x94262 (* l_0_16_111 l_0_16_111)))
 (let ((?x94263 (* (/ 1.0 2.0) ?x94262)))
 (let ((?x94266 (- (+ (+ _a_6_ (* (/ 1.0 2.0) (* l_0_16_110 l_0_16_110))) ?x94263) ?x94265)))
 (let ((?x94274 (- (- (- ?x94266 ?x94267) (* (* 2.0 l_0_16_218) l_0_16_238)) (* (* 2.0 l_0_16_219) l_0_16_239))))
 (let ((?x94286 (- (- (- (- ?x94274 ?x94276) ?x94279) (* (* 2.0 l_0_16_346) l_0_16_353)) (* (* 2.0 l_0_16_347) l_0_16_354))))
 (let ((?x94292 (- (- ?x94286 (* (* 2.0 l_0_16_348) l_0_16_355)) (* (* 2.0 l_0_16_349) l_0_16_356))))
 (let ((?x94298 (- (- ?x94292 (* (* 2.0 l_0_16_350) l_0_16_357)) (* (* 2.0 l_0_16_351) l_0_16_358))))
 (let ((?x94304 (- (- ?x94298 (* (* 2.0 l_0_16_352) l_0_16_359)) (* (* (/ 1.0 2.0) l_0_16_74) l_0_16_74))))
 (= (- ?x94304 (* (* (/ 1.0 2.0) l_0_16_75) l_0_16_75)) 0.0))))))))))))))))
(assert
 (let ((?x94374 (* l_0_16_39 l_0_16_39)))
 (let ((?x94372 (* l_0_16_38 l_0_16_38)))
 (let ((?x94361 (* l_0_16_3 l_0_16_3)))
 (let ((?x94355 (* l_0_16_2 l_0_16_2)))
 (let ((?x94353 (* l_0_16_183 l_0_16_183)))
 (let ((?x94351 (* l_0_16_182 l_0_16_182)))
 (let ((?x94267 (* l_0_16_147 l_0_16_147)))
 (let ((?x94356 (- (+ (+ (- (- _a_7_ (* l_0_16_146 l_0_16_146)) ?x94267) ?x94351) ?x94353) ?x94355)))
 (let ((?x94360 (- (- ?x94356 (* (* 2.0 l_0_16_218) l_0_16_220)) (* (* 2.0 l_0_16_219) l_0_16_221))))
 (let ((?x94368 (- (- (- ?x94360 ?x94361) (* (* 2.0 l_0_16_328) l_0_16_353)) (* (* 2.0 l_0_16_329) l_0_16_354))))
 (= (+ (+ (- ?x94368 (* (* 2.0 l_0_16_330) l_0_16_355)) ?x94372) ?x94374) 0.0))))))))))))
(assert
 (let ((?x94405 (* l_0_16_327 l_0_16_327)))
 (= (- (- (- _a_2_) (* l_0_16_326 l_0_16_326)) ?x94405) 0.0)))
(assert
 (let ((?x94374 (* l_0_16_39 l_0_16_39)))
 (let ((?x94372 (* l_0_16_38 l_0_16_38)))
 (let ((?x94361 (* l_0_16_3 l_0_16_3)))
 (let ((?x94420 (* l_0_16_291 l_0_16_291)))
 (let ((?x94418 (* l_0_16_290 l_0_16_290)))
 (let ((?x94424 (- (+ (+ (+ (+ (- _a_3_) (* l_0_16_2 l_0_16_2)) ?x94418) ?x94420) ?x94361) (* (* 2.0 l_0_16_326) l_0_16_331))))
 (= (- (- (- ?x94424 (* (* 2.0 l_0_16_327) l_0_16_332)) ?x94372) ?x94374) 0.0))))))))
(assert
 (let ((?x73421 (* l_0_16_75 l_0_16_75)))
 (let ((?x73419 (* l_0_16_74 l_0_16_74)))
 (let ((?x94420 (* l_0_16_291 l_0_16_291)))
 (let ((?x94418 (* l_0_16_290 l_0_16_290)))
 (let ((?x94262 (* l_0_16_111 l_0_16_111)))
 (let ((?x94440 (+ (+ (- (- (- _a_4_) (* l_0_16_110 l_0_16_110)) ?x94262) ?x94418) ?x94420)))
 (= (+ (+ (- ?x94440 (* (* 2.0 l_0_16_325) l_0_16_326)) ?x73419) ?x73421) 0.0))))))))
(assert
 (let ((?x94466 (* l_0_16_37 l_0_16_37)))
 (let ((?x94464 (* l_0_16_181 l_0_16_181)))
 (let ((?x94465 (+ (- (* (- l_0_16_1) l_0_16_1) (* l_0_16_145 l_0_16_145)) ?x94464)))
 (= (+ ?x94465 ?x94466) 0.0)))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94518 (* ?x94517 l_0_16_38)))
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x94515 (* ?x94514 l_0_16_319)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x94512 (* ?x94511 l_0_16_318)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x94509 (* ?x94508 l_0_16_317)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94503 (* ?x94502 l_0_16_182)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94500 (* ?x94499 l_0_16_146)))
 (let ((?x94483 (+ (* (* (- 2.0) l_0_16_1) l_0_16_2) (* (* 2.0 l_0_16_101) l_0_16_76))))
 (let ((?x94489 (+ (+ ?x94483 (* (* 2.0 l_0_16_102) l_0_16_77)) (* (* 2.0 l_0_16_103) l_0_16_78))))
 (let ((?x94495 (- (- ?x94489 (* (* 2.0 l_0_16_112) l_0_16_137)) (* (* 2.0 l_0_16_113) l_0_16_138))))
 (let ((?x94507 (- (+ (- (- ?x94495 (* (* 2.0 l_0_16_114) l_0_16_139)) ?x94500) ?x94503) (* (* 2.0 l_0_16_217) l_0_16_220))))
 (= (+ (+ (+ (+ ?x94507 ?x94509) ?x94512) ?x94515) ?x94518) 0.0))))))))))))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94575 (* ?x94517 l_0_16_40)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94562 (* ?x94502 l_0_16_184)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94558 (* ?x94499 l_0_16_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_1) l_0_16_4) ?x94558) ?x94562) ?x94575) 0.0))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94592 (* ?x94517 l_0_16_43)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94590 (* ?x94502 l_0_16_187)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x73477 (* ?x94499 l_0_16_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_1) l_0_16_7) ?x73477) ?x94590) ?x94592) 0.0))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94615 (* ?x94517 l_0_16_47)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94613 (* ?x94502 l_0_16_191)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94606 (* ?x94499 l_0_16_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_1) l_0_16_11) ?x94606) ?x94613) ?x94615) 0.0))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94638 (* ?x94517 l_0_16_52)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94636 (* ?x94502 l_0_16_196)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94629 (* ?x94499 l_0_16_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_1) l_0_16_16) ?x94629) ?x94636) ?x94638) 0.0))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94660 (* ?x94517 l_0_16_58)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94658 (* ?x94502 l_0_16_202)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94656 (* ?x94499 l_0_16_166)))
 (let ((?x94558 (* ?x94499 l_0_16_148)))
 (let ((?x94654 (+ (* (* (- 2.0) l_0_16_1) l_0_16_22) (* (* 1.0 l_0_16_109) l_0_16_112))))
 (let ((?x94664 (- (+ (+ (- (- ?x94654 ?x94558) ?x94656) ?x94658) ?x94660) (* (* 1.0 l_0_16_73) l_0_16_76))))
 (= ?x94664 0.0)))))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94689 (* ?x94517 l_0_16_65)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94687 (* ?x94502 l_0_16_209)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94685 (* ?x94499 l_0_16_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_1) l_0_16_29) ?x94685) ?x94687) ?x94689) 0.0))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x94729 (* ?x94728 l_0_16_41)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x94726 (* ?x94725 l_0_16_40)))
 (let ((?x94722 (* 2.0 l_0_16_3)))
 (let ((?x94723 (* ?x94722 l_0_16_5)))
 (let ((?x94720 (* l_0_16_222 l_0_16_222)))
 (let ((?x94718 (* l_0_16_221 l_0_16_221)))
 (let ((?x94716 (* l_0_16_220 l_0_16_220)))
 (let ((?x94713 (* 2.0 l_0_16_2)))
 (let ((?x94714 (* ?x94713 l_0_16_4)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x94711 (* ?x94710 l_0_16_185)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x94708 (* ?x94707 l_0_16_184)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94705 (* ?x94704 l_0_16_149)))
 (let ((?x94715 (- (+ (+ (- (* (* (- 2.0) l_0_16_146) l_0_16_148) ?x94705) ?x94708) ?x94711) ?x94714)))
 (= (+ (+ (- (- (- (- ?x94715 ?x94716) ?x94718) ?x94720) ?x94723) ?x94726) ?x94729) 0.0))))))))))))))))))))
(assert
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x94804 (* ?x94803 l_0_16_67)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x94801 (* ?x94800 l_0_16_66)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x94798 (* ?x94797 l_0_16_65)))
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x94795 (* ?x94728 l_0_16_44)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x94793 (* ?x94725 l_0_16_43)))
 (let ((?x94790 (* 2.0 l_0_16_31)))
 (let ((?x94791 (* ?x94790 l_0_16_6)))
 (let ((?x94787 (* 2.0 l_0_16_30)))
 (let ((?x94788 (* ?x94787 l_0_16_5)))
 (let ((?x94722 (* 2.0 l_0_16_3)))
 (let ((?x94785 (* ?x94722 l_0_16_8)))
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x94515 (* ?x94514 l_0_16_319)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x94512 (* ?x94511 l_0_16_318)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x94509 (* ?x94508 l_0_16_317)))
 (let ((?x94779 (* 2.0 l_0_16_29)))
 (let ((?x94780 (* ?x94779 l_0_16_4)))
 (let ((?x94713 (* 2.0 l_0_16_2)))
 (let ((?x94768 (* ?x94713 l_0_16_7)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x94766 (* ?x94710 l_0_16_188)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x94764 (* ?x94707 l_0_16_187)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94755 (* ?x94704 l_0_16_152)))
 (let ((?x94769 (- (+ (+ (- (* (* (- 2.0) l_0_16_146) l_0_16_151) ?x94755) ?x94764) ?x94766) ?x94768)))
 (let ((?x94775 (- (- ?x94769 (* (* 2.0 l_0_16_220) l_0_16_223)) (* (* 2.0 l_0_16_221) l_0_16_224))))
 (let ((?x94783 (+ (+ (+ (- ?x94775 (* (* 2.0 l_0_16_222) l_0_16_225)) ?x94780) ?x94509) ?x94512)))
 (let ((?x94799 (- (+ (+ (+ (+ (- (+ ?x94783 ?x94515) ?x94785) ?x94788) ?x94791) ?x94793) ?x94795) ?x94798)))
 (= (- (- ?x94799 ?x94801) ?x94804) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x94878 (* ?x94728 l_0_16_48)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x94876 (* ?x94725 l_0_16_47)))
 (let ((?x94873 (* 2.0 l_0_16_258)))
 (let ((?x94874 (* ?x94873 l_0_16_283)))
 (let ((?x94870 (* 2.0 l_0_16_257)))
 (let ((?x94871 (* ?x94870 l_0_16_282)))
 (let ((?x94867 (* 2.0 l_0_16_256)))
 (let ((?x94868 (* ?x94867 l_0_16_281)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x94859 (* ?x94710 l_0_16_192)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x94857 (* ?x94707 l_0_16_191)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94855 (* ?x94704 l_0_16_156)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x94853 (* ?x94852 l_0_16_155)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x94850 (* ?x94849 l_0_16_3)))
 (let ((?x94858 (+ (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_2) ?x94850) ?x94853) ?x94855) ?x94857)))
 (let ((?x94864 (- (- (+ ?x94858 ?x94859) (* (* 2.0 l_0_16_220) l_0_16_227)) (* (* 2.0 l_0_16_221) l_0_16_228))))
 (let ((?x94875 (+ (+ (+ (- ?x94864 (* (* 2.0 l_0_16_222) l_0_16_229)) ?x94868) ?x94871) ?x94874)))
 (= (+ (+ ?x94875 ?x94876) ?x94878) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x94963 (* ?x94728 l_0_16_53)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x94961 (* ?x94725 l_0_16_52)))
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x94515 (* ?x94514 l_0_16_319)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x94512 (* ?x94511 l_0_16_318)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x94509 (* ?x94508 l_0_16_317)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x94950 (* ?x94949 l_0_16_211)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x94947 (* ?x94946 l_0_16_210)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x94944 (* ?x94943 l_0_16_209)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x94941 (* ?x94710 l_0_16_197)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x94939 (* ?x94707 l_0_16_196)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x94937 (* ?x94936 l_0_16_3)))
 (let ((?x94933 (* 2.0 l_0_16_16)))
 (let ((?x94934 (* ?x94933 l_0_16_2)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x94931 (* ?x94930 l_0_16_175)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x94928 (* ?x94927 l_0_16_174)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x94925 (* ?x94924 l_0_16_173)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94922 (* ?x94704 l_0_16_161)))
 (let ((?x94932 (+ (+ (+ (- (* (* (- 2.0) l_0_16_146) l_0_16_160) ?x94922) ?x94925) ?x94928) ?x94931)))
 (let ((?x94951 (- (- (- (+ (+ (- (- ?x94932 ?x94934) ?x94937) ?x94939) ?x94941) ?x94944) ?x94947) ?x94950)))
 (let ((?x94955 (- (- ?x94951 (* (* 2.0 l_0_16_220) l_0_16_232)) (* (* 2.0 l_0_16_221) l_0_16_233))))
 (let ((?x94960 (- (- (- (- ?x94955 (* (* 2.0 l_0_16_222) l_0_16_234)) ?x94509) ?x94512) ?x94515)))
 (= (+ (+ ?x94960 ?x94961) ?x94963) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x95060 (* ?x94728 l_0_16_59)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x95058 (* ?x94725 l_0_16_58)))
 (let ((?x94873 (* 2.0 l_0_16_258)))
 (let ((?x94874 (* ?x94873 l_0_16_283)))
 (let ((?x94870 (* 2.0 l_0_16_257)))
 (let ((?x94871 (* ?x94870 l_0_16_282)))
 (let ((?x94867 (* 2.0 l_0_16_256)))
 (let ((?x94868 (* ?x94867 l_0_16_281)))
 (let ((?x95052 (* 2.0 l_0_16_23)))
 (let ((?x95053 (* ?x95052 l_0_16_3)))
 (let ((?x94713 (* 2.0 l_0_16_2)))
 (let ((?x95044 (* ?x94713 l_0_16_22)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x95042 (* ?x94710 l_0_16_203)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x95040 (* ?x94707 l_0_16_202)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x95038 (* ?x94704 l_0_16_167)))
 (let ((?x94705 (* ?x94704 l_0_16_149)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x95035 (* ?x94852 l_0_16_166)))
 (let ((?x95033 (* ?x94852 l_0_16_148)))
 (let ((?x95032 (+ (* (* 1.0 l_0_16_110) l_0_16_112) (* (* 1.0 l_0_16_111) l_0_16_113))))
 (let ((?x95045 (- (+ (+ (- (- (- (- ?x95032 ?x95033) ?x95035) ?x94705) ?x95038) ?x95040) ?x95042) ?x95044)))
 (let ((?x95049 (- (- ?x95045 (* (* 2.0 l_0_16_220) l_0_16_238)) (* (* 2.0 l_0_16_221) l_0_16_239))))
 (let ((?x95056 (- (- (- (- ?x95049 (* (* 2.0 l_0_16_222) l_0_16_240)) ?x95053) ?x94868) ?x94871)))
 (let ((?x95064 (- (+ (+ (- ?x95056 ?x94874) ?x95058) ?x95060) (* (* 1.0 l_0_16_74) l_0_16_76))))
 (= (- ?x95064 (* (* 1.0 l_0_16_75) l_0_16_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x52905 (* ?x94728 l_0_16_66)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x73670 (* ?x94725 l_0_16_65)))
 (let ((?x94722 (* 2.0 l_0_16_3)))
 (let ((?x52942 (* ?x94722 l_0_16_30)))
 (let ((?x94713 (* 2.0 l_0_16_2)))
 (let ((?x73644 (* ?x94713 l_0_16_29)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x22138 (* ?x94710 l_0_16_210)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x22274 (* ?x94707 l_0_16_209)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x73653 (* ?x94704 l_0_16_174)))
 (let ((?x73656 (- (+ (+ (- (* (* (- 2.0) l_0_16_146) l_0_16_173) ?x73653) ?x22274) ?x22138) ?x73644)))
 (let ((?x73625 (- (- ?x73656 (* (* 2.0 l_0_16_220) l_0_16_245)) (* (* 2.0 l_0_16_221) l_0_16_246))))
 (let ((?x95102 (+ (+ (- (- ?x73625 (* (* 2.0 l_0_16_222) l_0_16_247)) ?x52942) ?x73670) ?x52905)))
 (= ?x95102 0.0)))))))))))))))))))
(assert
 (let ((?x95155 (* l_0_16_6 l_0_16_6)))
 (let ((?x95153 (* l_0_16_5 l_0_16_5)))
 (let ((?x95151 (* l_0_16_42 l_0_16_42)))
 (let ((?x95149 (* l_0_16_41 l_0_16_41)))
 (let ((?x95147 (* l_0_16_40 l_0_16_40)))
 (let ((?x95145 (* l_0_16_4 l_0_16_4)))
 (let ((?x95143 (* l_0_16_186 l_0_16_186)))
 (let ((?x95141 (* l_0_16_185 l_0_16_185)))
 (let ((?x95139 (* l_0_16_184 l_0_16_184)))
 (let ((?x95137 (* l_0_16_150 l_0_16_150)))
 (let ((?x95138 (- (- (* (- l_0_16_148) l_0_16_148) (* l_0_16_149 l_0_16_149)) ?x95137)))
 (let ((?x95152 (+ (+ (+ (- (+ (+ (+ ?x95138 ?x95139) ?x95141) ?x95143) ?x95145) ?x95147) ?x95149) ?x95151)))
 (= (- (- ?x95152 ?x95153) ?x95155) 0.0))))))))))))))
(assert
 (let ((?x95204 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x95201 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x95198 (* ?x94803 l_0_16_45)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x95196 (* ?x94800 l_0_16_44)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x95194 (* ?x94797 l_0_16_43)))
 (let ((?x95192 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x95189 (* ?x94949 l_0_16_189)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x95187 (* ?x94946 l_0_16_188)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x95185 (* ?x94943 l_0_16_187)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x95183 (* ?x94930 l_0_16_153)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x95181 (* ?x94927 l_0_16_152)))
 (let ((?x95188 (+ (+ (- (- (* (* (- 2.0) l_0_16_148) l_0_16_151) ?x95181) ?x95183) ?x95185) ?x95187)))
 (let ((?x95205 (- (- (+ (+ (+ (- (+ ?x95188 ?x95189) ?x95192) ?x95194) ?x95196) ?x95198) ?x95201) ?x95204)))
 (= ?x95205 0.0)))))))))))))))))))))))
(assert
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x95250 (* ?x94803 l_0_16_49)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x95248 (* ?x94800 l_0_16_48)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x95246 (* ?x94797 l_0_16_47)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x95244 (* ?x94949 l_0_16_193)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x95242 (* ?x94946 l_0_16_192)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x95240 (* ?x94943 l_0_16_191)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x95238 (* ?x94930 l_0_16_157)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x95236 (* ?x94927 l_0_16_156)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x95234 (* ?x94924 l_0_16_155)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x95232 (* ?x95231 l_0_16_6)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x73809 (* ?x94849 l_0_16_5)))
 (let ((?x95237 (- (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_4) ?x73809) ?x95232) ?x95234) ?x95236)))
 (let ((?x95251 (+ (+ (+ (+ (+ (+ (- ?x95237 ?x95238) ?x95240) ?x95242) ?x95244) ?x95246) ?x95248) ?x95250)))
 (= ?x95251 0.0))))))))))))))))))))))))))
(assert
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x19247 (* ?x94803 l_0_16_54)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x73817 (* ?x94800 l_0_16_53)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x73815 (* ?x94797 l_0_16_52)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x53016 (* ?x94949 l_0_16_198)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x73807 (* ?x94946 l_0_16_197)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x53006 (* ?x94943 l_0_16_196)))
 (let ((?x22379 (* 2.0 l_0_16_18)))
 (let ((?x52996 (* ?x22379 l_0_16_6)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x22373 (* ?x94936 l_0_16_5)))
 (let ((?x94933 (* 2.0 l_0_16_16)))
 (let ((?x22371 (* ?x94933 l_0_16_4)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x73793 (* ?x94930 l_0_16_162)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x73791 (* ?x94927 l_0_16_161)))
 (let ((?x73800 (- (- (- (- (* (* (- 2.0) l_0_16_148) l_0_16_160) ?x73791) ?x73793) ?x22371) ?x22373)))
 (let ((?x73822 (+ (+ (+ (+ (+ (+ (- ?x73800 ?x52996) ?x53006) ?x73807) ?x53016) ?x73815) ?x73817) ?x19247)))
 (= ?x73822 0.0))))))))))))))))))))))))))
(assert
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x95332 (* ?x94803 l_0_16_60)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x95330 (* ?x94800 l_0_16_59)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x95328 (* ?x94797 l_0_16_58)))
 (let ((?x95325 (* 2.0 l_0_16_24)))
 (let ((?x95326 (* ?x95325 l_0_16_6)))
 (let ((?x95052 (* 2.0 l_0_16_23)))
 (let ((?x95323 (* ?x95052 l_0_16_5)))
 (let ((?x95320 (* 2.0 l_0_16_22)))
 (let ((?x95321 (* ?x95320 l_0_16_4)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x95318 (* ?x94949 l_0_16_204)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x95316 (* ?x94946 l_0_16_203)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x95314 (* ?x94943 l_0_16_202)))
 (let ((?x95137 (* l_0_16_150 l_0_16_150)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x95311 (* ?x94930 l_0_16_168)))
 (let ((?x95135 (* l_0_16_149 l_0_16_149)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x95308 (* ?x94927 l_0_16_167)))
 (let ((?x73790 (* l_0_16_148 l_0_16_148)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x95305 (* ?x94924 l_0_16_166)))
 (let ((?x95293 (* l_0_16_114 l_0_16_114)))
 (let ((?x95294 (* (/ 1.0 2.0) ?x95293)))
 (let ((?x95287 (* l_0_16_113 l_0_16_113)))
 (let ((?x95289 (* (/ 1.0 2.0) ?x95287)))
 (let ((?x73878 (* l_0_16_112 l_0_16_112)))
 (let ((?x95285 (* (/ 1.0 2.0) ?x73878)))
 (let ((?x95312 (- (- (- (- (- (+ (+ ?x95285 ?x95289) ?x95294) ?x95305) ?x73790) ?x95308) ?x95135) ?x95311)))
 (let ((?x95327 (- (- (- (+ (+ (+ (- ?x95312 ?x95137) ?x95314) ?x95316) ?x95318) ?x95321) ?x95323) ?x95326)))
 (let ((?x95336 (- (+ (+ (+ ?x95327 ?x95328) ?x95330) ?x95332) (* (* (/ 1.0 2.0) l_0_16_76) l_0_16_76))))
 (let ((?x95342 (- (- ?x95336 (* (* (/ 1.0 2.0) l_0_16_77) l_0_16_77)) (* (* (/ 1.0 2.0) l_0_16_78) l_0_16_78))))
 (= ?x95342 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x94804 (* ?x94803 l_0_16_67)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x94801 (* ?x94800 l_0_16_66)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x94798 (* ?x94797 l_0_16_65)))
 (let ((?x94790 (* 2.0 l_0_16_31)))
 (let ((?x94791 (* ?x94790 l_0_16_6)))
 (let ((?x94787 (* 2.0 l_0_16_30)))
 (let ((?x94788 (* ?x94787 l_0_16_5)))
 (let ((?x94779 (* 2.0 l_0_16_29)))
 (let ((?x94780 (* ?x94779 l_0_16_4)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x94950 (* ?x94949 l_0_16_211)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x94947 (* ?x94946 l_0_16_210)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x94944 (* ?x94943 l_0_16_209)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x94931 (* ?x94930 l_0_16_175)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x94928 (* ?x94927 l_0_16_174)))
 (let ((?x95380 (+ (+ (- (- (* (* (- 2.0) l_0_16_148) l_0_16_173) ?x94928) ?x94931) ?x94944) ?x94947)))
 (let ((?x95387 (+ (+ (+ (- (- (- (+ ?x95380 ?x94950) ?x94780) ?x94788) ?x94791) ?x94798) ?x94801) ?x94804)))
 (= ?x95387 0.0))))))))))))))))))))))))))
(assert
 (let ((?x95402 (* l_0_16_9 l_0_16_9)))
 (let ((?x95400 (* l_0_16_8 l_0_16_8)))
 (let ((?x95398 (* l_0_16_7 l_0_16_7)))
 (let ((?x95396 (* l_0_16_46 l_0_16_46)))
 (let ((?x95394 (* l_0_16_45 l_0_16_45)))
 (let ((?x95392 (* l_0_16_44 l_0_16_44)))
 (let ((?x73956 (* l_0_16_43 l_0_16_43)))
 (let ((?x22507 (* l_0_16_190 l_0_16_190)))
 (let ((?x73970 (* l_0_16_189 l_0_16_189)))
 (let ((?x53141 (* l_0_16_188 l_0_16_188)))
 (let ((?x22534 (* l_0_16_187 l_0_16_187)))
 (let ((?x53154 (* l_0_16_154 l_0_16_154)))
 (let ((?x73955 (* l_0_16_153 l_0_16_153)))
 (let ((?x73973 (* l_0_16_152 l_0_16_152)))
 (let ((?x73949 (- (- (* (- l_0_16_10) l_0_16_10) (* l_0_16_151 l_0_16_151)) ?x73973)))
 (let ((?x95391 (+ (+ (+ (+ (+ (- (- ?x73949 ?x73955) ?x53154) ?x22534) ?x53141) ?x73970) ?x22507) ?x73956)))
 (= (- (- (- (+ (+ (+ ?x95391 ?x95392) ?x95394) ?x95396) ?x95398) ?x95400) ?x95402) 0.0))))))))))))))))))
(assert
 (let ((?x95465 (* 2.0 l_0_16_46)))
 (let ((?x95466 (* ?x95465 l_0_16_50)))
 (let ((?x95462 (* 2.0 l_0_16_45)))
 (let ((?x95463 (* ?x95462 l_0_16_49)))
 (let ((?x95459 (* 2.0 l_0_16_44)))
 (let ((?x95460 (* ?x95459 l_0_16_48)))
 (let ((?x95456 (* 2.0 l_0_16_43)))
 (let ((?x95457 (* ?x95456 l_0_16_47)))
 (let ((?x95453 (* 2.0 l_0_16_190)))
 (let ((?x95454 (* ?x95453 l_0_16_194)))
 (let ((?x95450 (* 2.0 l_0_16_189)))
 (let ((?x95451 (* ?x95450 l_0_16_193)))
 (let ((?x95447 (* 2.0 l_0_16_188)))
 (let ((?x95448 (* ?x95447 l_0_16_192)))
 (let ((?x95444 (* 2.0 l_0_16_187)))
 (let ((?x95445 (* ?x95444 l_0_16_191)))
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95442 (* ?x95441 l_0_16_158)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95439 (* ?x95438 l_0_16_157)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95436 (* ?x95435 l_0_16_156)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95433 (* ?x95432 l_0_16_155)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x95430 (* ?x95231 l_0_16_9)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x95428 (* ?x94849 l_0_16_8)))
 (let ((?x95425 (* 2.0 l_0_16_11)))
 (let ((?x95426 (* ?x95425 l_0_16_7)))
 (let ((?x95434 (- (- (- (- (* (* (- 2.0) l_0_16_10) l_0_16_14) ?x95426) ?x95428) ?x95430) ?x95433)))
 (let ((?x95455 (+ (+ (+ (+ (- (- (- ?x95434 ?x95436) ?x95439) ?x95442) ?x95445) ?x95448) ?x95451) ?x95454)))
 (= (+ (+ (+ (+ ?x95455 ?x95457) ?x95460) ?x95463) ?x95466) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x95465 (* 2.0 l_0_16_46)))
 (let ((?x95540 (* ?x95465 l_0_16_55)))
 (let ((?x95462 (* 2.0 l_0_16_45)))
 (let ((?x95538 (* ?x95462 l_0_16_54)))
 (let ((?x95459 (* 2.0 l_0_16_44)))
 (let ((?x95536 (* ?x95459 l_0_16_53)))
 (let ((?x95456 (* 2.0 l_0_16_43)))
 (let ((?x95534 (* ?x95456 l_0_16_52)))
 (let ((?x95453 (* 2.0 l_0_16_190)))
 (let ((?x95532 (* ?x95453 l_0_16_199)))
 (let ((?x95450 (* 2.0 l_0_16_189)))
 (let ((?x95530 (* ?x95450 l_0_16_198)))
 (let ((?x95447 (* 2.0 l_0_16_188)))
 (let ((?x95528 (* ?x95447 l_0_16_197)))
 (let ((?x95444 (* 2.0 l_0_16_187)))
 (let ((?x95526 (* ?x95444 l_0_16_196)))
 (let ((?x22379 (* 2.0 l_0_16_18)))
 (let ((?x95524 (* ?x22379 l_0_16_9)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x95522 (* ?x94936 l_0_16_8)))
 (let ((?x94933 (* 2.0 l_0_16_16)))
 (let ((?x95520 (* ?x94933 l_0_16_7)))
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95507 (* ?x95441 l_0_16_163)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95503 (* ?x95438 l_0_16_162)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95499 (* ?x95435 l_0_16_161)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95495 (* ?x95432 l_0_16_160)))
 (let ((?x95508 (- (- (- (- (* (* (- 2.0) l_0_16_10) l_0_16_19) ?x95495) ?x95499) ?x95503) ?x95507)))
 (let ((?x95533 (+ (+ (+ (+ (- (- (- ?x95508 ?x95520) ?x95522) ?x95524) ?x95526) ?x95528) ?x95530) ?x95532)))
 (= (+ (+ (+ (+ ?x95533 ?x95534) ?x95536) ?x95538) ?x95540) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x95465 (* 2.0 l_0_16_46)))
 (let ((?x95601 (* ?x95465 l_0_16_61)))
 (let ((?x95462 (* 2.0 l_0_16_45)))
 (let ((?x95599 (* ?x95462 l_0_16_60)))
 (let ((?x95459 (* 2.0 l_0_16_44)))
 (let ((?x95597 (* ?x95459 l_0_16_59)))
 (let ((?x95456 (* 2.0 l_0_16_43)))
 (let ((?x95595 (* ?x95456 l_0_16_58)))
 (let ((?x95325 (* 2.0 l_0_16_24)))
 (let ((?x95593 (* ?x95325 l_0_16_9)))
 (let ((?x95052 (* 2.0 l_0_16_23)))
 (let ((?x95591 (* ?x95052 l_0_16_8)))
 (let ((?x95320 (* 2.0 l_0_16_22)))
 (let ((?x95589 (* ?x95320 l_0_16_7)))
 (let ((?x95453 (* 2.0 l_0_16_190)))
 (let ((?x95587 (* ?x95453 l_0_16_205)))
 (let ((?x95450 (* 2.0 l_0_16_189)))
 (let ((?x95585 (* ?x95450 l_0_16_204)))
 (let ((?x95447 (* 2.0 l_0_16_188)))
 (let ((?x95583 (* ?x95447 l_0_16_203)))
 (let ((?x95444 (* 2.0 l_0_16_187)))
 (let ((?x95581 (* ?x95444 l_0_16_202)))
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95579 (* ?x95441 l_0_16_169)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95577 (* ?x95438 l_0_16_168)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95575 (* ?x95435 l_0_16_167)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95573 (* ?x95432 l_0_16_166)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x95183 (* ?x94930 l_0_16_153)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x95181 (* ?x94927 l_0_16_152)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x95569 (* ?x94924 l_0_16_151)))
 (let ((?x74131 (+ (* (* (- 2.0) l_0_16_10) l_0_16_25) (* (* 1.0 l_0_16_112) l_0_16_115))))
 (let ((?x95568 (+ (+ ?x74131 (* (* 1.0 l_0_16_113) l_0_16_116)) (* (* 1.0 l_0_16_114) l_0_16_117))))
 (let ((?x95580 (- (- (- (- (- (- (- ?x95568 ?x95569) ?x95181) ?x95183) ?x95573) ?x95575) ?x95577) ?x95579)))
 (let ((?x95594 (- (- (- (+ (+ (+ (+ ?x95580 ?x95581) ?x95583) ?x95585) ?x95587) ?x95589) ?x95591) ?x95593)))
 (let ((?x95605 (- (+ (+ (+ (+ ?x95594 ?x95595) ?x95597) ?x95599) ?x95601) (* (* 1.0 l_0_16_76) l_0_16_79))))
 (let ((?x95611 (- (- ?x95605 (* (* 1.0 l_0_16_77) l_0_16_80)) (* (* 1.0 l_0_16_78) l_0_16_81))))
 (= ?x95611 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x95465 (* 2.0 l_0_16_46)))
 (let ((?x95721 (* ?x95465 l_0_16_68)))
 (let ((?x95462 (* 2.0 l_0_16_45)))
 (let ((?x95719 (* ?x95462 l_0_16_67)))
 (let ((?x95459 (* 2.0 l_0_16_44)))
 (let ((?x95717 (* ?x95459 l_0_16_66)))
 (let ((?x95456 (* 2.0 l_0_16_43)))
 (let ((?x95715 (* ?x95456 l_0_16_65)))
 (let ((?x94790 (* 2.0 l_0_16_31)))
 (let ((?x95713 (* ?x94790 l_0_16_9)))
 (let ((?x94787 (* 2.0 l_0_16_30)))
 (let ((?x95711 (* ?x94787 l_0_16_8)))
 (let ((?x94779 (* 2.0 l_0_16_29)))
 (let ((?x95709 (* ?x94779 l_0_16_7)))
 (let ((?x95453 (* 2.0 l_0_16_190)))
 (let ((?x95707 (* ?x95453 l_0_16_212)))
 (let ((?x95450 (* 2.0 l_0_16_189)))
 (let ((?x95705 (* ?x95450 l_0_16_211)))
 (let ((?x95447 (* 2.0 l_0_16_188)))
 (let ((?x95703 (* ?x95447 l_0_16_210)))
 (let ((?x95444 (* 2.0 l_0_16_187)))
 (let ((?x95701 (* ?x95444 l_0_16_209)))
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95699 (* ?x95441 l_0_16_176)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95697 (* ?x95438 l_0_16_175)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95695 (* ?x95435 l_0_16_174)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95693 (* ?x95432 l_0_16_173)))
 (let ((?x95700 (- (- (- (- (* (* (- 2.0) l_0_16_10) l_0_16_32) ?x95693) ?x95695) ?x95697) ?x95699)))
 (let ((?x95714 (- (- (- (+ (+ (+ (+ ?x95700 ?x95701) ?x95703) ?x95705) ?x95707) ?x95709) ?x95711) ?x95713)))
 (= (+ (+ (+ (+ ?x95714 ?x95715) ?x95717) ?x95719) ?x95721) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x95801 (* l_0_16_51 l_0_16_51)))
 (let ((?x95799 (* l_0_16_50 l_0_16_50)))
 (let ((?x95797 (* l_0_16_49 l_0_16_49)))
 (let ((?x95795 (* l_0_16_48 l_0_16_48)))
 (let ((?x95793 (* l_0_16_47 l_0_16_47)))
 (let ((?x95791 (* l_0_16_195 l_0_16_195)))
 (let ((?x95789 (* l_0_16_194 l_0_16_194)))
 (let ((?x95787 (* l_0_16_193 l_0_16_193)))
 (let ((?x95785 (* l_0_16_192 l_0_16_192)))
 (let ((?x95783 (* l_0_16_191 l_0_16_191)))
 (let ((?x95781 (* l_0_16_159 l_0_16_159)))
 (let ((?x95779 (* l_0_16_158 l_0_16_158)))
 (let ((?x95777 (* l_0_16_157 l_0_16_157)))
 (let ((?x95775 (* l_0_16_156 l_0_16_156)))
 (let ((?x95773 (* l_0_16_155 l_0_16_155)))
 (let ((?x95771 (* l_0_16_15 l_0_16_15)))
 (let ((?x95769 (* l_0_16_14 l_0_16_14)))
 (let ((?x95767 (* l_0_16_13 l_0_16_13)))
 (let ((?x95768 (- (- (* (- l_0_16_11) l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x95767)))
 (let ((?x95782 (- (- (- (- (- (- (- ?x95768 ?x95769) ?x95771) ?x95773) ?x95775) ?x95777) ?x95779) ?x95781)))
 (let ((?x95796 (+ (+ (+ (+ (+ (+ (+ ?x95782 ?x95783) ?x95785) ?x95787) ?x95789) ?x95791) ?x95793) ?x95795)))
 (= (+ (+ (+ ?x95796 ?x95797) ?x95799) ?x95801) 0.0)))))))))))))))))))))))
(assert
 (let ((?x95887 (* 2.0 l_0_16_51)))
 (let ((?x95888 (* ?x95887 l_0_16_56)))
 (let ((?x95884 (* 2.0 l_0_16_50)))
 (let ((?x95885 (* ?x95884 l_0_16_55)))
 (let ((?x95881 (* 2.0 l_0_16_49)))
 (let ((?x95882 (* ?x95881 l_0_16_54)))
 (let ((?x95878 (* 2.0 l_0_16_48)))
 (let ((?x95879 (* ?x95878 l_0_16_53)))
 (let ((?x95875 (* 2.0 l_0_16_47)))
 (let ((?x95876 (* ?x95875 l_0_16_52)))
 (let ((?x95872 (* 2.0 l_0_16_195)))
 (let ((?x95873 (* ?x95872 l_0_16_200)))
 (let ((?x95869 (* 2.0 l_0_16_194)))
 (let ((?x95870 (* ?x95869 l_0_16_199)))
 (let ((?x95866 (* 2.0 l_0_16_193)))
 (let ((?x95867 (* ?x95866 l_0_16_198)))
 (let ((?x95863 (* 2.0 l_0_16_192)))
 (let ((?x95864 (* ?x95863 l_0_16_197)))
 (let ((?x95860 (* 2.0 l_0_16_191)))
 (let ((?x95861 (* ?x95860 l_0_16_196)))
 (let ((?x95857 (* 2.0 l_0_16_159)))
 (let ((?x95858 (* ?x95857 l_0_16_164)))
 (let ((?x95854 (* 2.0 l_0_16_158)))
 (let ((?x95855 (* ?x95854 l_0_16_163)))
 (let ((?x95851 (* 2.0 l_0_16_157)))
 (let ((?x95852 (* ?x95851 l_0_16_162)))
 (let ((?x95848 (* 2.0 l_0_16_156)))
 (let ((?x95849 (* ?x95848 l_0_16_161)))
 (let ((?x95845 (* 2.0 l_0_16_155)))
 (let ((?x95846 (* ?x95845 l_0_16_160)))
 (let ((?x95842 (* 2.0 l_0_16_15)))
 (let ((?x95843 (* ?x95842 l_0_16_20)))
 (let ((?x95839 (* 2.0 l_0_16_14)))
 (let ((?x95840 (* ?x95839 l_0_16_19)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x95837 (* ?x95231 l_0_16_18)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x95835 (* ?x94849 l_0_16_17)))
 (let ((?x95844 (- (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_16) ?x95835) ?x95837) ?x95840) ?x95843)))
 (let ((?x95865 (+ (+ (- (- (- (- (- ?x95844 ?x95846) ?x95849) ?x95852) ?x95855) ?x95858) ?x95861) ?x95864)))
 (let ((?x95886 (+ (+ (+ (+ (+ (+ (+ ?x95865 ?x95867) ?x95870) ?x95873) ?x95876) ?x95879) ?x95882) ?x95885)))
 (= (+ ?x95886 ?x95888) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x95887 (* 2.0 l_0_16_51)))
 (let ((?x95959 (* ?x95887 l_0_16_62)))
 (let ((?x95884 (* 2.0 l_0_16_50)))
 (let ((?x95957 (* ?x95884 l_0_16_61)))
 (let ((?x95881 (* 2.0 l_0_16_49)))
 (let ((?x95955 (* ?x95881 l_0_16_60)))
 (let ((?x95878 (* 2.0 l_0_16_48)))
 (let ((?x95953 (* ?x95878 l_0_16_59)))
 (let ((?x95875 (* 2.0 l_0_16_47)))
 (let ((?x95951 (* ?x95875 l_0_16_58)))
 (let ((?x95872 (* 2.0 l_0_16_195)))
 (let ((?x95949 (* ?x95872 l_0_16_206)))
 (let ((?x95869 (* 2.0 l_0_16_194)))
 (let ((?x95947 (* ?x95869 l_0_16_205)))
 (let ((?x95866 (* 2.0 l_0_16_193)))
 (let ((?x95945 (* ?x95866 l_0_16_204)))
 (let ((?x95863 (* 2.0 l_0_16_192)))
 (let ((?x95943 (* ?x95863 l_0_16_203)))
 (let ((?x95860 (* 2.0 l_0_16_191)))
 (let ((?x95941 (* ?x95860 l_0_16_202)))
 (let ((?x95857 (* 2.0 l_0_16_159)))
 (let ((?x95939 (* ?x95857 l_0_16_170)))
 (let ((?x95854 (* 2.0 l_0_16_158)))
 (let ((?x95937 (* ?x95854 l_0_16_169)))
 (let ((?x95851 (* 2.0 l_0_16_157)))
 (let ((?x95935 (* ?x95851 l_0_16_168)))
 (let ((?x95848 (* 2.0 l_0_16_156)))
 (let ((?x95933 (* ?x95848 l_0_16_167)))
 (let ((?x95845 (* 2.0 l_0_16_155)))
 (let ((?x95931 (* ?x95845 l_0_16_166)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x95238 (* ?x94930 l_0_16_157)))
 (let ((?x95842 (* 2.0 l_0_16_15)))
 (let ((?x95928 (* ?x95842 l_0_16_26)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x95236 (* ?x94927 l_0_16_156)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x95234 (* ?x94924 l_0_16_155)))
 (let ((?x95839 (* 2.0 l_0_16_14)))
 (let ((?x95924 (* ?x95839 l_0_16_25)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x74230 (* ?x95231 l_0_16_24)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x74201 (* ?x94849 l_0_16_23)))
 (let ((?x74119 (+ (* (* (- 2.0) l_0_16_11) l_0_16_22) (* (* 1.0 l_0_16_112) l_0_16_119))))
 (let ((?x74184 (+ (+ ?x74119 (* (* 1.0 l_0_16_113) l_0_16_120)) (* (* 1.0 l_0_16_114) l_0_16_121))))
 (let ((?x95930 (- (- (- (- (- (- (- ?x74184 ?x74201) ?x74230) ?x95924) ?x95234) ?x95236) ?x95928) ?x95238)))
 (let ((?x95944 (+ (+ (- (- (- (- (- ?x95930 ?x95931) ?x95933) ?x95935) ?x95937) ?x95939) ?x95941) ?x95943)))
 (let ((?x95958 (+ (+ (+ (+ (+ (+ (+ ?x95944 ?x95945) ?x95947) ?x95949) ?x95951) ?x95953) ?x95955) ?x95957)))
 (let ((?x95964 (- (- (+ ?x95958 ?x95959) (* (* 1.0 l_0_16_76) l_0_16_83)) (* (* 1.0 l_0_16_77) l_0_16_84))))
 (= (- ?x95964 (* (* 1.0 l_0_16_78) l_0_16_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x95887 (* 2.0 l_0_16_51)))
 (let ((?x96011 (* ?x95887 l_0_16_69)))
 (let ((?x95884 (* 2.0 l_0_16_50)))
 (let ((?x96009 (* ?x95884 l_0_16_68)))
 (let ((?x95881 (* 2.0 l_0_16_49)))
 (let ((?x96007 (* ?x95881 l_0_16_67)))
 (let ((?x95878 (* 2.0 l_0_16_48)))
 (let ((?x96005 (* ?x95878 l_0_16_66)))
 (let ((?x95875 (* 2.0 l_0_16_47)))
 (let ((?x96003 (* ?x95875 l_0_16_65)))
 (let ((?x95872 (* 2.0 l_0_16_195)))
 (let ((?x96001 (* ?x95872 l_0_16_213)))
 (let ((?x95869 (* 2.0 l_0_16_194)))
 (let ((?x95999 (* ?x95869 l_0_16_212)))
 (let ((?x95866 (* 2.0 l_0_16_193)))
 (let ((?x95997 (* ?x95866 l_0_16_211)))
 (let ((?x95863 (* 2.0 l_0_16_192)))
 (let ((?x95995 (* ?x95863 l_0_16_210)))
 (let ((?x95860 (* 2.0 l_0_16_191)))
 (let ((?x95993 (* ?x95860 l_0_16_209)))
 (let ((?x95857 (* 2.0 l_0_16_159)))
 (let ((?x95991 (* ?x95857 l_0_16_177)))
 (let ((?x95854 (* 2.0 l_0_16_158)))
 (let ((?x95989 (* ?x95854 l_0_16_176)))
 (let ((?x95851 (* 2.0 l_0_16_157)))
 (let ((?x95987 (* ?x95851 l_0_16_175)))
 (let ((?x95848 (* 2.0 l_0_16_156)))
 (let ((?x95985 (* ?x95848 l_0_16_174)))
 (let ((?x95845 (* 2.0 l_0_16_155)))
 (let ((?x95983 (* ?x95845 l_0_16_173)))
 (let ((?x95842 (* 2.0 l_0_16_15)))
 (let ((?x74357 (* ?x95842 l_0_16_33)))
 (let ((?x95839 (* 2.0 l_0_16_14)))
 (let ((?x22853 (* ?x95839 l_0_16_32)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x22864 (* ?x95231 l_0_16_31)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x22855 (* ?x94849 l_0_16_30)))
 (let ((?x22876 (- (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_29) ?x22855) ?x22864) ?x22853) ?x74357)))
 (let ((?x95996 (+ (+ (- (- (- (- (- ?x22876 ?x95983) ?x95985) ?x95987) ?x95989) ?x95991) ?x95993) ?x95995)))
 (let ((?x96010 (+ (+ (+ (+ (+ (+ (+ ?x95996 ?x95997) ?x95999) ?x96001) ?x96003) ?x96005) ?x96007) ?x96009)))
 (= (+ ?x96010 ?x96011) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96104 (* l_0_16_57 l_0_16_57)))
 (let ((?x96102 (* l_0_16_56 l_0_16_56)))
 (let ((?x96100 (* l_0_16_55 l_0_16_55)))
 (let ((?x96098 (* l_0_16_54 l_0_16_54)))
 (let ((?x96096 (* l_0_16_53 l_0_16_53)))
 (let ((?x96094 (* l_0_16_52 l_0_16_52)))
 (let ((?x96092 (* l_0_16_21 l_0_16_21)))
 (let ((?x96090 (* l_0_16_201 l_0_16_201)))
 (let ((?x96088 (* l_0_16_200 l_0_16_200)))
 (let ((?x96086 (* l_0_16_20 l_0_16_20)))
 (let ((?x96084 (* l_0_16_199 l_0_16_199)))
 (let ((?x96082 (* l_0_16_198 l_0_16_198)))
 (let ((?x96080 (* l_0_16_197 l_0_16_197)))
 (let ((?x96078 (* l_0_16_196 l_0_16_196)))
 (let ((?x96076 (* l_0_16_19 l_0_16_19)))
 (let ((?x96074 (* l_0_16_18 l_0_16_18)))
 (let ((?x96072 (* l_0_16_17 l_0_16_17)))
 (let ((?x96070 (* l_0_16_165 l_0_16_165)))
 (let ((?x96055 (* l_0_16_164 l_0_16_164)))
 (let ((?x96052 (* l_0_16_163 l_0_16_163)))
 (let ((?x96048 (* l_0_16_162 l_0_16_162)))
 (let ((?x96044 (* l_0_16_161 l_0_16_161)))
 (let ((?x96046 (- (- (* (- l_0_16_16) l_0_16_16) (* l_0_16_160 l_0_16_160)) ?x96044)))
 (let ((?x96077 (- (- (- (- (- (- (- ?x96046 ?x96048) ?x96052) ?x96055) ?x96070) ?x96072) ?x96074) ?x96076)))
 (let ((?x96091 (+ (+ (- (+ (+ (+ (+ ?x96077 ?x96078) ?x96080) ?x96082) ?x96084) ?x96086) ?x96088) ?x96090)))
 (let ((?x96105 (+ (+ (+ (+ (+ (+ (- ?x96091 ?x96092) ?x96094) ?x96096) ?x96098) ?x96100) ?x96102) ?x96104)))
 (= ?x96105 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x96231 (* 2.0 l_0_16_57)))
 (let ((?x96232 (* ?x96231 l_0_16_63)))
 (let ((?x96228 (* 2.0 l_0_16_56)))
 (let ((?x96229 (* ?x96228 l_0_16_62)))
 (let ((?x96225 (* 2.0 l_0_16_55)))
 (let ((?x96226 (* ?x96225 l_0_16_61)))
 (let ((?x96222 (* 2.0 l_0_16_54)))
 (let ((?x96223 (* ?x96222 l_0_16_60)))
 (let ((?x96219 (* 2.0 l_0_16_53)))
 (let ((?x96220 (* ?x96219 l_0_16_59)))
 (let ((?x96216 (* 2.0 l_0_16_52)))
 (let ((?x96217 (* ?x96216 l_0_16_58)))
 (let ((?x96213 (* 2.0 l_0_16_21)))
 (let ((?x96214 (* ?x96213 l_0_16_27)))
 (let ((?x96210 (* 2.0 l_0_16_201)))
 (let ((?x96211 (* ?x96210 l_0_16_207)))
 (let ((?x96207 (* 2.0 l_0_16_200)))
 (let ((?x96208 (* ?x96207 l_0_16_206)))
 (let ((?x96204 (* 2.0 l_0_16_20)))
 (let ((?x96205 (* ?x96204 l_0_16_26)))
 (let ((?x96201 (* 2.0 l_0_16_199)))
 (let ((?x96202 (* ?x96201 l_0_16_205)))
 (let ((?x96198 (* 2.0 l_0_16_198)))
 (let ((?x96199 (* ?x96198 l_0_16_204)))
 (let ((?x96195 (* 2.0 l_0_16_197)))
 (let ((?x96196 (* ?x96195 l_0_16_203)))
 (let ((?x96192 (* 2.0 l_0_16_196)))
 (let ((?x96193 (* ?x96192 l_0_16_202)))
 (let ((?x96189 (* 2.0 l_0_16_19)))
 (let ((?x96190 (* ?x96189 l_0_16_25)))
 (let ((?x22379 (* 2.0 l_0_16_18)))
 (let ((?x96187 (* ?x22379 l_0_16_24)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x96185 (* ?x94936 l_0_16_23)))
 (let ((?x96182 (* 2.0 l_0_16_165)))
 (let ((?x96183 (* ?x96182 l_0_16_171)))
 (let ((?x96179 (* 2.0 l_0_16_164)))
 (let ((?x96180 (* ?x96179 l_0_16_170)))
 (let ((?x96176 (* 2.0 l_0_16_163)))
 (let ((?x96177 (* ?x96176 l_0_16_169)))
 (let ((?x96173 (* 2.0 l_0_16_162)))
 (let ((?x96174 (* ?x96173 l_0_16_168)))
 (let ((?x96170 (* 2.0 l_0_16_161)))
 (let ((?x96171 (* ?x96170 l_0_16_167)))
 (let ((?x96167 (* 2.0 l_0_16_160)))
 (let ((?x96168 (* ?x96167 l_0_16_166)))
 (let ((?x94933 (* 2.0 l_0_16_16)))
 (let ((?x96165 (* ?x94933 l_0_16_22)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x73793 (* ?x94930 l_0_16_162)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x73791 (* ?x94927 l_0_16_161)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x96161 (* ?x94924 l_0_16_160)))
 (let ((?x96158 (+ (* (* 1.0 l_0_16_112) l_0_16_124) (* (* 1.0 l_0_16_113) l_0_16_125))))
 (let ((?x96164 (- (- (- (+ ?x96158 (* (* 1.0 l_0_16_114) l_0_16_126)) ?x96161) ?x73791) ?x73793)))
 (let ((?x96184 (- (- (- (- (- (- (- ?x96164 ?x96165) ?x96168) ?x96171) ?x96174) ?x96177) ?x96180) ?x96183)))
 (let ((?x96203 (+ (+ (+ (+ (- (- (- ?x96184 ?x96185) ?x96187) ?x96190) ?x96193) ?x96196) ?x96199) ?x96202)))
 (let ((?x96224 (+ (+ (+ (- (+ (+ (- ?x96203 ?x96205) ?x96208) ?x96211) ?x96214) ?x96217) ?x96220) ?x96223)))
 (let ((?x96235 (- (+ (+ (+ ?x96224 ?x96226) ?x96229) ?x96232) (* (* 1.0 l_0_16_76) l_0_16_88))))
 (let ((?x96239 (- (- ?x96235 (* (* 1.0 l_0_16_77) l_0_16_89)) (* (* 1.0 l_0_16_78) l_0_16_90))))
 (= ?x96239 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96231 (* 2.0 l_0_16_57)))
 (let ((?x96379 (* ?x96231 l_0_16_70)))
 (let ((?x96228 (* 2.0 l_0_16_56)))
 (let ((?x96377 (* ?x96228 l_0_16_69)))
 (let ((?x96225 (* 2.0 l_0_16_55)))
 (let ((?x96375 (* ?x96225 l_0_16_68)))
 (let ((?x96222 (* 2.0 l_0_16_54)))
 (let ((?x96373 (* ?x96222 l_0_16_67)))
 (let ((?x96219 (* 2.0 l_0_16_53)))
 (let ((?x96371 (* ?x96219 l_0_16_66)))
 (let ((?x96216 (* 2.0 l_0_16_52)))
 (let ((?x96369 (* ?x96216 l_0_16_65)))
 (let ((?x96213 (* 2.0 l_0_16_21)))
 (let ((?x96367 (* ?x96213 l_0_16_34)))
 (let ((?x96210 (* 2.0 l_0_16_201)))
 (let ((?x96365 (* ?x96210 l_0_16_214)))
 (let ((?x96207 (* 2.0 l_0_16_200)))
 (let ((?x96363 (* ?x96207 l_0_16_213)))
 (let ((?x96204 (* 2.0 l_0_16_20)))
 (let ((?x96361 (* ?x96204 l_0_16_33)))
 (let ((?x96201 (* 2.0 l_0_16_199)))
 (let ((?x96359 (* ?x96201 l_0_16_212)))
 (let ((?x96198 (* 2.0 l_0_16_198)))
 (let ((?x96357 (* ?x96198 l_0_16_211)))
 (let ((?x96195 (* 2.0 l_0_16_197)))
 (let ((?x96355 (* ?x96195 l_0_16_210)))
 (let ((?x96192 (* 2.0 l_0_16_196)))
 (let ((?x96353 (* ?x96192 l_0_16_209)))
 (let ((?x96189 (* 2.0 l_0_16_19)))
 (let ((?x96351 (* ?x96189 l_0_16_32)))
 (let ((?x22379 (* 2.0 l_0_16_18)))
 (let ((?x96349 (* ?x22379 l_0_16_31)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x96347 (* ?x94936 l_0_16_30)))
 (let ((?x96182 (* 2.0 l_0_16_165)))
 (let ((?x96345 (* ?x96182 l_0_16_178)))
 (let ((?x96179 (* 2.0 l_0_16_164)))
 (let ((?x96343 (* ?x96179 l_0_16_177)))
 (let ((?x96176 (* 2.0 l_0_16_163)))
 (let ((?x96341 (* ?x96176 l_0_16_176)))
 (let ((?x96173 (* 2.0 l_0_16_162)))
 (let ((?x96339 (* ?x96173 l_0_16_175)))
 (let ((?x96170 (* 2.0 l_0_16_161)))
 (let ((?x96337 (* ?x96170 l_0_16_174)))
 (let ((?x96167 (* 2.0 l_0_16_160)))
 (let ((?x96335 (* ?x96167 l_0_16_173)))
 (let ((?x96342 (- (- (- (- (* (* (- 2.0) l_0_16_16) l_0_16_29) ?x96335) ?x96337) ?x96339) ?x96341)))
 (let ((?x96356 (+ (+ (- (- (- (- (- ?x96342 ?x96343) ?x96345) ?x96347) ?x96349) ?x96351) ?x96353) ?x96355)))
 (let ((?x96370 (+ (- (+ (+ (- (+ (+ ?x96356 ?x96357) ?x96359) ?x96361) ?x96363) ?x96365) ?x96367) ?x96369)))
 (= (+ (+ (+ (+ (+ ?x96370 ?x96371) ?x96373) ?x96375) ?x96377) ?x96379) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96484 (* l_0_16_64 l_0_16_64)))
 (let ((?x96482 (* l_0_16_63 l_0_16_63)))
 (let ((?x96480 (* l_0_16_62 l_0_16_62)))
 (let ((?x96478 (* l_0_16_61 l_0_16_61)))
 (let ((?x96476 (* l_0_16_60 l_0_16_60)))
 (let ((?x96474 (* l_0_16_59 l_0_16_59)))
 (let ((?x96472 (* l_0_16_58 l_0_16_58)))
 (let ((?x96470 (* l_0_16_28 l_0_16_28)))
 (let ((?x96468 (* l_0_16_27 l_0_16_27)))
 (let ((?x96466 (* l_0_16_26 l_0_16_26)))
 (let ((?x96464 (* l_0_16_25 l_0_16_25)))
 (let ((?x96462 (* l_0_16_24 l_0_16_24)))
 (let ((?x96460 (* l_0_16_23 l_0_16_23)))
 (let ((?x96458 (* l_0_16_22 l_0_16_22)))
 (let ((?x96456 (* l_0_16_208 l_0_16_208)))
 (let ((?x96454 (* l_0_16_207 l_0_16_207)))
 (let ((?x96452 (* l_0_16_206 l_0_16_206)))
 (let ((?x96450 (* l_0_16_205 l_0_16_205)))
 (let ((?x96448 (* l_0_16_204 l_0_16_204)))
 (let ((?x96446 (* l_0_16_203 l_0_16_203)))
 (let ((?x96444 (* l_0_16_202 l_0_16_202)))
 (let ((?x96442 (* l_0_16_172 l_0_16_172)))
 (let ((?x96440 (* l_0_16_171 l_0_16_171)))
 (let ((?x96438 (* l_0_16_170 l_0_16_170)))
 (let ((?x96436 (* l_0_16_169 l_0_16_169)))
 (let ((?x96434 (* l_0_16_168 l_0_16_168)))
 (let ((?x96432 (* l_0_16_167 l_0_16_167)))
 (let ((?x96430 (* l_0_16_166 l_0_16_166)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x95311 (* ?x94930 l_0_16_168)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x95308 (* ?x94927 l_0_16_167)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x95305 (* ?x94924 l_0_16_166)))
 (let ((?x74600 (+ (* (* 1.0 l_0_16_112) l_0_16_130) (* (* 1.0 l_0_16_113) l_0_16_131))))
 (let ((?x96429 (- (- (- (+ ?x74600 (* (* 1.0 l_0_16_114) l_0_16_132)) ?x95305) ?x95308) ?x95311)))
 (let ((?x96443 (- (- (- (- (- (- (- ?x96429 ?x96430) ?x96432) ?x96434) ?x96436) ?x96438) ?x96440) ?x96442)))
 (let ((?x96457 (+ (+ (+ (+ (+ (+ (+ ?x96443 ?x96444) ?x96446) ?x96448) ?x96450) ?x96452) ?x96454) ?x96456)))
 (let ((?x96471 (- (- (- (- (- (- (- ?x96457 ?x96458) ?x96460) ?x96462) ?x96464) ?x96466) ?x96468) ?x96470)))
 (let ((?x96485 (+ (+ (+ (+ (+ (+ (+ ?x96471 ?x96472) ?x96474) ?x96476) ?x96478) ?x96480) ?x96482) ?x96484)))
 (let ((?x96489 (- (- ?x96485 (* (* 1.0 l_0_16_76) l_0_16_94)) (* (* 1.0 l_0_16_77) l_0_16_95))))
 (= (- ?x96489 (* (* 1.0 l_0_16_78) l_0_16_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96634 (* (* 2.0 l_0_16_64) l_0_16_71)))
 (let ((?x96631 (* (* 2.0 l_0_16_63) l_0_16_70)))
 (let ((?x96628 (* (* 2.0 l_0_16_62) l_0_16_69)))
 (let ((?x96625 (* (* 2.0 l_0_16_61) l_0_16_68)))
 (let ((?x96622 (* (* 2.0 l_0_16_60) l_0_16_67)))
 (let ((?x96619 (* (* 2.0 l_0_16_59) l_0_16_66)))
 (let ((?x96616 (* (* 2.0 l_0_16_58) l_0_16_65)))
 (let ((?x96613 (* (* 2.0 l_0_16_28) l_0_16_35)))
 (let ((?x96610 (* (* 2.0 l_0_16_27) l_0_16_34)))
 (let ((?x96607 (* (* 2.0 l_0_16_26) l_0_16_33)))
 (let ((?x96604 (* (* 2.0 l_0_16_25) l_0_16_32)))
 (let ((?x95325 (* 2.0 l_0_16_24)))
 (let ((?x96601 (* ?x95325 l_0_16_31)))
 (let ((?x95052 (* 2.0 l_0_16_23)))
 (let ((?x96599 (* ?x95052 l_0_16_30)))
 (let ((?x95320 (* 2.0 l_0_16_22)))
 (let ((?x96597 (* ?x95320 l_0_16_29)))
 (let ((?x96595 (* (* 2.0 l_0_16_208) l_0_16_215)))
 (let ((?x96592 (* (* 2.0 l_0_16_207) l_0_16_214)))
 (let ((?x96589 (* (* 2.0 l_0_16_206) l_0_16_213)))
 (let ((?x96586 (* (* 2.0 l_0_16_205) l_0_16_212)))
 (let ((?x96583 (* (* 2.0 l_0_16_204) l_0_16_211)))
 (let ((?x96580 (* (* 2.0 l_0_16_203) l_0_16_210)))
 (let ((?x96577 (* (* 2.0 l_0_16_202) l_0_16_209)))
 (let ((?x96574 (* (* 2.0 l_0_16_172) l_0_16_179)))
 (let ((?x96571 (* (* 2.0 l_0_16_171) l_0_16_178)))
 (let ((?x96568 (* (* 2.0 l_0_16_170) l_0_16_177)))
 (let ((?x96565 (* (* 2.0 l_0_16_169) l_0_16_176)))
 (let ((?x96562 (* (* 2.0 l_0_16_168) l_0_16_175)))
 (let ((?x96559 (* (* 2.0 l_0_16_167) l_0_16_174)))
 (let ((?x96556 (* (* 2.0 l_0_16_166) l_0_16_173)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x94931 (* ?x94930 l_0_16_175)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x94928 (* ?x94927 l_0_16_174)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x94925 (* ?x94924 l_0_16_173)))
 (let ((?x96542 (- (* (* (- 1.0) l_0_16_101) l_0_16_76) (* (* 1.0 l_0_16_102) l_0_16_77))))
 (let ((?x96547 (+ (- ?x96542 (* (* 1.0 l_0_16_103) l_0_16_78)) (* (* 1.0 l_0_16_112) l_0_16_137))))
 (let ((?x96551 (+ (+ ?x96547 (* (* 1.0 l_0_16_113) l_0_16_138)) (* (* 1.0 l_0_16_114) l_0_16_139))))
 (let ((?x96566 (- (- (- (- (- (- (- ?x96551 ?x94925) ?x94928) ?x94931) ?x96556) ?x96559) ?x96562) ?x96565)))
 (let ((?x96587 (+ (+ (+ (+ (- (- (- ?x96566 ?x96568) ?x96571) ?x96574) ?x96577) ?x96580) ?x96583) ?x96586)))
 (let ((?x96605 (- (- (- (- (+ (+ (+ ?x96587 ?x96589) ?x96592) ?x96595) ?x96597) ?x96599) ?x96601) ?x96604)))
 (let ((?x96626 (+ (+ (+ (+ (- (- (- ?x96605 ?x96607) ?x96610) ?x96613) ?x96616) ?x96619) ?x96622) ?x96625)))
 (= (+ (+ (+ ?x96626 ?x96628) ?x96631) ?x96634) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96787 (* l_0_16_72 l_0_16_72)))
 (let ((?x96785 (* l_0_16_71 l_0_16_71)))
 (let ((?x96783 (* l_0_16_70 l_0_16_70)))
 (let ((?x96781 (* l_0_16_69 l_0_16_69)))
 (let ((?x96779 (* l_0_16_68 l_0_16_68)))
 (let ((?x96777 (* l_0_16_67 l_0_16_67)))
 (let ((?x96775 (* l_0_16_66 l_0_16_66)))
 (let ((?x96773 (* l_0_16_65 l_0_16_65)))
 (let ((?x96771 (* l_0_16_36 l_0_16_36)))
 (let ((?x96769 (* l_0_16_35 l_0_16_35)))
 (let ((?x96767 (* l_0_16_34 l_0_16_34)))
 (let ((?x96765 (* l_0_16_33 l_0_16_33)))
 (let ((?x96763 (* l_0_16_32 l_0_16_32)))
 (let ((?x96761 (* l_0_16_31 l_0_16_31)))
 (let ((?x96759 (* l_0_16_30 l_0_16_30)))
 (let ((?x96757 (* l_0_16_29 l_0_16_29)))
 (let ((?x96755 (* l_0_16_216 l_0_16_216)))
 (let ((?x96753 (* l_0_16_215 l_0_16_215)))
 (let ((?x96751 (* l_0_16_214 l_0_16_214)))
 (let ((?x96749 (* l_0_16_213 l_0_16_213)))
 (let ((?x96747 (* l_0_16_212 l_0_16_212)))
 (let ((?x96745 (* l_0_16_211 l_0_16_211)))
 (let ((?x96743 (* l_0_16_210 l_0_16_210)))
 (let ((?x96741 (* l_0_16_209 l_0_16_209)))
 (let ((?x96739 (* l_0_16_180 l_0_16_180)))
 (let ((?x96737 (* l_0_16_179 l_0_16_179)))
 (let ((?x96735 (* l_0_16_178 l_0_16_178)))
 (let ((?x96733 (* l_0_16_177 l_0_16_177)))
 (let ((?x96712 (* l_0_16_176 l_0_16_176)))
 (let ((?x96708 (* l_0_16_175 l_0_16_175)))
 (let ((?x96710 (- (- (* (- l_0_16_173) l_0_16_173) (* l_0_16_174 l_0_16_174)) ?x96708)))
 (let ((?x96744 (+ (+ (- (- (- (- (- ?x96710 ?x96712) ?x96733) ?x96735) ?x96737) ?x96739) ?x96741) ?x96743)))
 (let ((?x96758 (- (+ (+ (+ (+ (+ (+ ?x96744 ?x96745) ?x96747) ?x96749) ?x96751) ?x96753) ?x96755) ?x96757)))
 (let ((?x96772 (- (- (- (- (- (- (- ?x96758 ?x96759) ?x96761) ?x96763) ?x96765) ?x96767) ?x96769) ?x96771)))
 (let ((?x96786 (+ (+ (+ (+ (+ (+ (+ ?x96772 ?x96773) ?x96775) ?x96777) ?x96779) ?x96781) ?x96783) ?x96785)))
 (= (+ ?x96786 ?x96787) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x94466 (* l_0_16_37 l_0_16_37)))
 (let ((?x96825 (* l_0_16_289 l_0_16_289)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96823 (* ?x96822 l_0_16_295)))
 (let ((?x96824 (+ (- (* l_0_16_1 l_0_16_1) (* (* 2.0 l_0_16_109) l_0_16_115)) ?x96823)))
 (= (+ (- (+ ?x96824 ?x96825) ?x94466) (* (* 2.0 l_0_16_73) l_0_16_79)) 0.0)))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94518 (* ?x94517 l_0_16_38)))
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x96855 (* ?x96854 l_0_16_296)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x96852 (* ?x96851 l_0_16_295)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96849 (* ?x96822 l_0_16_290)))
 (let ((?x96845 (- (* (* 2.0 l_0_16_1) l_0_16_2) (* (* 2.0 l_0_16_110) l_0_16_115))))
 (let ((?x96856 (+ (+ (+ (- ?x96845 (* (* 2.0 l_0_16_111) l_0_16_116)) ?x96849) ?x96852) ?x96855)))
 (let ((?x96862 (+ (- (- ?x96856 (* (* 2.0 l_0_16_325) l_0_16_331)) ?x94518) (* (* 2.0 l_0_16_74) l_0_16_79))))
 (= (+ ?x96862 (* (* 2.0 l_0_16_75) l_0_16_80)) 0.0)))))))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94575 (* ?x94517 l_0_16_40)))
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x96884 (* ?x94514 l_0_16_297)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x96882 (* ?x94511 l_0_16_296)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x96880 (* ?x94508 l_0_16_295)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96878 (* ?x96822 l_0_16_292)))
 (let ((?x74860 (- (* (* 2.0 l_0_16_1) l_0_16_4) (* (* 2.0 l_0_16_112) l_0_16_115))))
 (let ((?x96877 (- (- ?x74860 (* (* 2.0 l_0_16_113) l_0_16_116)) (* (* 2.0 l_0_16_114) l_0_16_117))))
 (let ((?x96889 (+ (- (+ (+ (+ (+ ?x96877 ?x96878) ?x96880) ?x96882) ?x96884) ?x94575) (* (* 2.0 l_0_16_76) l_0_16_79))))
 (let ((?x96895 (+ (+ ?x96889 (* (* 2.0 l_0_16_77) l_0_16_80)) (* (* 2.0 l_0_16_78) l_0_16_81))))
 (= ?x96895 0.0))))))))))))))))
(assert
 (let ((?x96937 (* l_0_16_82 l_0_16_82)))
 (let ((?x96935 (* l_0_16_81 l_0_16_81)))
 (let ((?x96933 (* l_0_16_80 l_0_16_80)))
 (let ((?x96931 (* l_0_16_79 l_0_16_79)))
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94592 (* ?x94517 l_0_16_43)))
 (let ((?x96928 (* l_0_16_298 l_0_16_298)))
 (let ((?x96926 (* l_0_16_297 l_0_16_297)))
 (let ((?x96924 (* l_0_16_296 l_0_16_296)))
 (let ((?x96922 (* l_0_16_295 l_0_16_295)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96823 (* ?x96822 l_0_16_295)))
 (let ((?x96919 (* l_0_16_118 l_0_16_118)))
 (let ((?x96917 (* l_0_16_117 l_0_16_117)))
 (let ((?x96915 (* l_0_16_116 l_0_16_116)))
 (let ((?x96916 (- (- (* (* 2.0 l_0_16_1) l_0_16_7) (* l_0_16_115 l_0_16_115)) ?x96915)))
 (let ((?x96929 (+ (+ (+ (+ (+ (- (- ?x96916 ?x96917) ?x96919) ?x96823) ?x96922) ?x96924) ?x96926) ?x96928)))
 (= (+ (+ (+ (+ (- ?x96929 ?x94592) ?x96931) ?x96933) ?x96935) ?x96937) 0.0)))))))))))))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94615 (* ?x94517 l_0_16_47)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x96980 (* ?x96979 l_0_16_302)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x96977 (* ?x96976 l_0_16_301)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x96974 (* ?x96973 l_0_16_300)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x96971 (* ?x96970 l_0_16_299)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96968 (* ?x96822 l_0_16_299)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x96966 (* ?x96965 l_0_16_259)))
 (let ((?x96955 (- (* (* 2.0 l_0_16_1) l_0_16_11) (* (* 2.0 l_0_16_115) l_0_16_119))))
 (let ((?x96961 (- (- ?x96955 (* (* 2.0 l_0_16_116) l_0_16_120)) (* (* 2.0 l_0_16_117) l_0_16_121))))
 (let ((?x96972 (+ (+ (+ (- ?x96961 (* (* 2.0 l_0_16_118) l_0_16_122)) ?x96966) ?x96968) ?x96971)))
 (let ((?x96985 (+ (- (+ (+ (+ ?x96972 ?x96974) ?x96977) ?x96980) ?x94615) (* (* 2.0 l_0_16_79) l_0_16_83))))
 (let ((?x96991 (+ (+ ?x96985 (* (* 2.0 l_0_16_80) l_0_16_84)) (* (* 2.0 l_0_16_81) l_0_16_85))))
 (= (+ ?x96991 (* (* 2.0 l_0_16_82) l_0_16_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94638 (* ?x94517 l_0_16_52)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x97038 (* ?x96979 l_0_16_307)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x97036 (* ?x96976 l_0_16_306)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x97034 (* ?x96973 l_0_16_305)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x97032 (* ?x96970 l_0_16_304)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x97030 (* ?x96822 l_0_16_304)))
 (let ((?x96823 (* ?x96822 l_0_16_295)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94590 (* ?x94502 l_0_16_187)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x73477 (* ?x94499 l_0_16_151)))
 (let ((?x97020 (- (* (* 2.0 l_0_16_1) l_0_16_16) (* (* 2.0 l_0_16_115) l_0_16_124))))
 (let ((?x97024 (- (- ?x97020 (* (* 2.0 l_0_16_116) l_0_16_125)) (* (* 2.0 l_0_16_117) l_0_16_126))))
 (let ((?x97029 (- (- (+ (- ?x97024 (* (* 2.0 l_0_16_118) l_0_16_127)) ?x73477) ?x94590) ?x96823)))
 (let ((?x97042 (+ (- (+ (+ (+ (+ (+ ?x97029 ?x97030) ?x97032) ?x97034) ?x97036) ?x97038) ?x94638) (* (* 2.0 l_0_16_79) l_0_16_88))))
 (let ((?x97046 (+ (+ ?x97042 (* (* 2.0 l_0_16_80) l_0_16_89)) (* (* 2.0 l_0_16_81) l_0_16_90))))
 (= (+ ?x97046 (* (* 2.0 l_0_16_82) l_0_16_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94660 (* ?x94517 l_0_16_58)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x97099 (* ?x96979 l_0_16_313)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x97097 (* ?x96976 l_0_16_312)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x97095 (* ?x96973 l_0_16_311)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x97093 (* ?x96970 l_0_16_310)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x97091 (* ?x96822 l_0_16_310)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x96966 (* ?x96965 l_0_16_259)))
 (let ((?x97072 (- (* (* 2.0 l_0_16_1) l_0_16_22) (* (* 2.0 l_0_16_115) l_0_16_130))))
 (let ((?x97087 (- (- ?x97072 (* (* 2.0 l_0_16_116) l_0_16_131)) (* (* 2.0 l_0_16_117) l_0_16_132))))
 (let ((?x97094 (+ (+ (- (- ?x97087 (* (* 2.0 l_0_16_118) l_0_16_133)) ?x96966) ?x97091) ?x97093)))
 (let ((?x97103 (+ (- (+ (+ (+ ?x97094 ?x97095) ?x97097) ?x97099) ?x94660) (* (* 2.0 l_0_16_79) l_0_16_94))))
 (let ((?x97107 (+ (+ ?x97103 (* (* 2.0 l_0_16_80) l_0_16_95)) (* (* 2.0 l_0_16_81) l_0_16_96))))
 (= (+ ?x97107 (* (* 2.0 l_0_16_82) l_0_16_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x94517 (* 2.0 l_0_16_37)))
 (let ((?x94689 (* ?x94517 l_0_16_65)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x97181 (* ?x96979 l_0_16_320)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x97179 (* ?x96976 l_0_16_319)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x97177 (* ?x96973 l_0_16_318)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x97175 (* ?x96970 l_0_16_317)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x97173 (* ?x96822 l_0_16_317)))
 (let ((?x97155 (+ (* (* 2.0 l_0_16_1) l_0_16_29) (* (* 2.0 l_0_16_101) l_0_16_79))))
 (let ((?x97159 (+ (+ ?x97155 (* (* 2.0 l_0_16_102) l_0_16_80)) (* (* 2.0 l_0_16_103) l_0_16_81))))
 (let ((?x97164 (- (+ ?x97159 (* (* 2.0 l_0_16_104) l_0_16_82)) (* (* 2.0 l_0_16_115) l_0_16_137))))
 (let ((?x97168 (- (- ?x97164 (* (* 2.0 l_0_16_116) l_0_16_138)) (* (* 2.0 l_0_16_117) l_0_16_139))))
 (let ((?x97172 (- (- ?x97168 (* (* 2.0 l_0_16_118) l_0_16_140)) (* (* 2.0 l_0_16_217) l_0_16_223))))
 (= (- (+ (+ (+ (+ (+ ?x97172 ?x97173) ?x97175) ?x97177) ?x97179) ?x97181) ?x94689) 0.0)))))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x94729 (* ?x94728 l_0_16_41)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x94726 (* ?x94725 l_0_16_40)))
 (let ((?x94722 (* 2.0 l_0_16_3)))
 (let ((?x94723 (* ?x94722 l_0_16_5)))
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x23429 (* ?x96854 l_0_16_293)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x23417 (* ?x96851 l_0_16_292)))
 (let ((?x94713 (* 2.0 l_0_16_2)))
 (let ((?x94714 (* ?x94713 l_0_16_4)))
 (let ((?x53825 (- (+ (+ (+ ?x94714 ?x23417) ?x23429) ?x94723) (* (* 2.0 l_0_16_328) l_0_16_331))))
 (let ((?x75136 (- (- ?x53825 (* (* 2.0 l_0_16_329) l_0_16_332)) (* (* 2.0 l_0_16_330) l_0_16_333))))
 (= (- (- ?x75136 ?x94726) ?x94729) 0.0))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x94795 (* ?x94728 l_0_16_44)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x94793 (* ?x94725 l_0_16_43)))
 (let ((?x97234 (* l_0_16_334 l_0_16_334)))
 (let ((?x75250 (* l_0_16_333 l_0_16_333)))
 (let ((?x23778 (* l_0_16_332 l_0_16_332)))
 (let ((?x75235 (* l_0_16_331 l_0_16_331)))
 (let ((?x94722 (* 2.0 l_0_16_3)))
 (let ((?x94785 (* ?x94722 l_0_16_8)))
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x96855 (* ?x96854 l_0_16_296)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x96852 (* ?x96851 l_0_16_295)))
 (let ((?x94713 (* 2.0 l_0_16_2)))
 (let ((?x94768 (* ?x94713 l_0_16_7)))
 (let ((?x97235 (- (- (- (- (+ (+ (+ ?x94768 ?x96852) ?x96855) ?x94785) ?x75235) ?x23778) ?x75250) ?x97234)))
 (= (- (- ?x97235 ?x94793) ?x94795) 0.0)))))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x94878 (* ?x94728 l_0_16_48)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x94876 (* ?x94725 l_0_16_47)))
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x97250 (* ?x96854 l_0_16_300)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x97248 (* ?x96851 l_0_16_299)))
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x97246 (* ?x94278 l_0_16_260)))
 (let ((?x94275 (* 2.0 l_0_16_254)))
 (let ((?x97244 (* ?x94275 l_0_16_259)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x94850 (* ?x94849 l_0_16_3)))
 (let ((?x97249 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_2) ?x94850) ?x97244) ?x97246) ?x97248)))
 (let ((?x97257 (- (- (+ ?x97249 ?x97250) (* (* 2.0 l_0_16_331) l_0_16_335)) (* (* 2.0 l_0_16_332) l_0_16_336))))
 (let ((?x97263 (- (- ?x97257 (* (* 2.0 l_0_16_333) l_0_16_337)) (* (* 2.0 l_0_16_334) l_0_16_338))))
 (= (- (- ?x97263 ?x94876) ?x94878) 0.0)))))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x94963 (* ?x94728 l_0_16_53)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x94961 (* ?x94725 l_0_16_52)))
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x97292 (* ?x96854 l_0_16_305)))
 (let ((?x96855 (* ?x96854 l_0_16_296)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x97289 (* ?x96851 l_0_16_304)))
 (let ((?x96852 (* ?x96851 l_0_16_295)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x94766 (* ?x94710 l_0_16_188)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x94764 (* ?x94707 l_0_16_187)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x94937 (* ?x94936 l_0_16_3)))
 (let ((?x94933 (* 2.0 l_0_16_16)))
 (let ((?x94934 (* ?x94933 l_0_16_2)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94755 (* ?x94704 l_0_16_152)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x75508 (* ?x94852 l_0_16_151)))
 (let ((?x97290 (+ (- (- (- (+ (+ (+ ?x75508 ?x94755) ?x94934) ?x94937) ?x94764) ?x94766) ?x96852) ?x97289)))
 (let ((?x97297 (- (- (+ (- ?x97290 ?x96855) ?x97292) (* (* 2.0 l_0_16_331) l_0_16_340)) (* (* 2.0 l_0_16_332) l_0_16_341))))
 (let ((?x97301 (- (- ?x97297 (* (* 2.0 l_0_16_333) l_0_16_342)) (* (* 2.0 l_0_16_334) l_0_16_343))))
 (= (- (- ?x97301 ?x94961) ?x94963) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x95060 (* ?x94728 l_0_16_59)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x95058 (* ?x94725 l_0_16_58)))
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x75590 (* ?x96854 l_0_16_311)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x75592 (* ?x96851 l_0_16_310)))
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x97246 (* ?x94278 l_0_16_260)))
 (let ((?x94275 (* 2.0 l_0_16_254)))
 (let ((?x97244 (* ?x94275 l_0_16_259)))
 (let ((?x95052 (* 2.0 l_0_16_23)))
 (let ((?x95053 (* ?x95052 l_0_16_3)))
 (let ((?x94713 (* 2.0 l_0_16_2)))
 (let ((?x95044 (* ?x94713 l_0_16_22)))
 (let ((?x97315 (- (+ (+ (- (- (+ ?x95044 ?x95053) ?x97244) ?x97246) ?x75592) ?x75590) (* (* 2.0 l_0_16_331) l_0_16_346))))
 (let ((?x97319 (- (- ?x97315 (* (* 2.0 l_0_16_332) l_0_16_347)) (* (* 2.0 l_0_16_333) l_0_16_348))))
 (= (- (- (- ?x97319 (* (* 2.0 l_0_16_334) l_0_16_349)) ?x95058) ?x95060) 0.0))))))))))))))))))))
(assert
 (let ((?x94728 (* 2.0 l_0_16_39)))
 (let ((?x52905 (* ?x94728 l_0_16_66)))
 (let ((?x94725 (* 2.0 l_0_16_38)))
 (let ((?x73670 (* ?x94725 l_0_16_65)))
 (let ((?x94722 (* 2.0 l_0_16_3)))
 (let ((?x52942 (* ?x94722 l_0_16_30)))
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x97352 (* ?x96854 l_0_16_318)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x97350 (* ?x96851 l_0_16_317)))
 (let ((?x94713 (* 2.0 l_0_16_2)))
 (let ((?x73644 (* ?x94713 l_0_16_29)))
 (let ((?x97349 (- (- ?x73644 (* (* 2.0 l_0_16_218) l_0_16_223)) (* (* 2.0 l_0_16_219) l_0_16_224))))
 (let ((?x97356 (- (+ (+ (+ ?x97349 ?x97350) ?x97352) ?x52942) (* (* 2.0 l_0_16_331) l_0_16_353))))
 (let ((?x97360 (- (- ?x97356 (* (* 2.0 l_0_16_332) l_0_16_354)) (* (* 2.0 l_0_16_333) l_0_16_355))))
 (= (- (- (- ?x97360 (* (* 2.0 l_0_16_334) l_0_16_356)) ?x73670) ?x52905) 0.0)))))))))))))))))
(assert
 (let ((?x95155 (* l_0_16_6 l_0_16_6)))
 (let ((?x95153 (* l_0_16_5 l_0_16_5)))
 (let ((?x95151 (* l_0_16_42 l_0_16_42)))
 (let ((?x95149 (* l_0_16_41 l_0_16_41)))
 (let ((?x95147 (* l_0_16_40 l_0_16_40)))
 (let ((?x95145 (* l_0_16_4 l_0_16_4)))
 (let ((?x97396 (* l_0_16_294 l_0_16_294)))
 (let ((?x97397 (+ (+ (* l_0_16_292 l_0_16_292) (* l_0_16_293 l_0_16_293)) ?x97396)))
 (= (+ (+ (- (- (- (+ ?x97397 ?x95145) ?x95147) ?x95149) ?x95151) ?x95153) ?x95155) 0.0))))))))))
(assert
 (let ((?x95204 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x95201 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x95198 (* ?x94803 l_0_16_45)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x95196 (* ?x94800 l_0_16_44)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x95194 (* ?x94797 l_0_16_43)))
 (let ((?x95192 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x96884 (* ?x94514 l_0_16_297)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x96882 (* ?x94511 l_0_16_296)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x96880 (* ?x94508 l_0_16_295)))
 (let ((?x54116 (+ (- (- (- (+ (+ (+ ?x96880 ?x96882) ?x96884) ?x95192) ?x95194) ?x95196) ?x95198) ?x95201)))
 (= (+ ?x54116 ?x95204) 0.0))))))))))))))))))
(assert
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x95250 (* ?x94803 l_0_16_49)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x95248 (* ?x94800 l_0_16_48)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x95246 (* ?x94797 l_0_16_47)))
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x97420 (* ?x94514 l_0_16_301)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x97418 (* ?x94511 l_0_16_300)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x97416 (* ?x94508 l_0_16_299)))
 (let ((?x94873 (* 2.0 l_0_16_258)))
 (let ((?x97414 (* ?x94873 l_0_16_261)))
 (let ((?x94870 (* 2.0 l_0_16_257)))
 (let ((?x97412 (* ?x94870 l_0_16_260)))
 (let ((?x94867 (* 2.0 l_0_16_256)))
 (let ((?x97410 (* ?x94867 l_0_16_259)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x95232 (* ?x95231 l_0_16_6)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x73809 (* ?x94849 l_0_16_5)))
 (let ((?x97413 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_4) ?x73809) ?x95232) ?x97410) ?x97412)))
 (let ((?x97424 (- (- (- (+ (+ (+ (+ ?x97413 ?x97414) ?x97416) ?x97418) ?x97420) ?x95246) ?x95248) ?x95250)))
 (= ?x97424 0.0))))))))))))))))))))))))))
(assert
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x19247 (* ?x94803 l_0_16_54)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x73817 (* ?x94800 l_0_16_53)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x73815 (* ?x94797 l_0_16_52)))
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x97448 (* ?x94514 l_0_16_306)))
 (let ((?x96884 (* ?x94514 l_0_16_297)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x97445 (* ?x94511 l_0_16_305)))
 (let ((?x96882 (* ?x94511 l_0_16_296)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x97442 (* ?x94508 l_0_16_304)))
 (let ((?x96880 (* ?x94508 l_0_16_295)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x95189 (* ?x94949 l_0_16_189)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x95187 (* ?x94946 l_0_16_188)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x95185 (* ?x94943 l_0_16_187)))
 (let ((?x22379 (* 2.0 l_0_16_18)))
 (let ((?x52996 (* ?x22379 l_0_16_6)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x22373 (* ?x94936 l_0_16_5)))
 (let ((?x94933 (* 2.0 l_0_16_16)))
 (let ((?x22371 (* ?x94933 l_0_16_4)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x95183 (* ?x94930 l_0_16_153)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x95181 (* ?x94927 l_0_16_152)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x95569 (* ?x94924 l_0_16_151)))
 (let ((?x97439 (- (- (+ (+ (+ (+ (+ ?x95569 ?x95181) ?x95183) ?x22371) ?x22373) ?x52996) ?x95185) ?x95187)))
 (let ((?x97449 (+ (- (+ (- (+ (- (- ?x97439 ?x95189) ?x96880) ?x97442) ?x96882) ?x97445) ?x96884) ?x97448)))
 (= (- (- (- ?x97449 ?x73815) ?x73817) ?x19247) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x94803 (* 2.0 l_0_16_42)))
 (let ((?x95332 (* ?x94803 l_0_16_60)))
 (let ((?x94800 (* 2.0 l_0_16_41)))
 (let ((?x95330 (* ?x94800 l_0_16_59)))
 (let ((?x94797 (* 2.0 l_0_16_40)))
 (let ((?x95328 (* ?x94797 l_0_16_58)))
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x97476 (* ?x94514 l_0_16_312)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x97474 (* ?x94511 l_0_16_311)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x97472 (* ?x94508 l_0_16_310)))
 (let ((?x94873 (* 2.0 l_0_16_258)))
 (let ((?x97414 (* ?x94873 l_0_16_261)))
 (let ((?x94870 (* 2.0 l_0_16_257)))
 (let ((?x97412 (* ?x94870 l_0_16_260)))
 (let ((?x94867 (* 2.0 l_0_16_256)))
 (let ((?x97410 (* ?x94867 l_0_16_259)))
 (let ((?x95325 (* 2.0 l_0_16_24)))
 (let ((?x95326 (* ?x95325 l_0_16_6)))
 (let ((?x95052 (* 2.0 l_0_16_23)))
 (let ((?x95323 (* ?x95052 l_0_16_5)))
 (let ((?x95320 (* 2.0 l_0_16_22)))
 (let ((?x95321 (* ?x95320 l_0_16_4)))
 (let ((?x97475 (+ (+ (- (- (- (+ (+ ?x95321 ?x95323) ?x95326) ?x97410) ?x97412) ?x97414) ?x97472) ?x97474)))
 (= (- (- (- (+ ?x97475 ?x97476) ?x95328) ?x95330) ?x95332) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x95402 (* l_0_16_9 l_0_16_9)))
 (let ((?x95400 (* l_0_16_8 l_0_16_8)))
 (let ((?x95398 (* l_0_16_7 l_0_16_7)))
 (let ((?x95396 (* l_0_16_46 l_0_16_46)))
 (let ((?x95394 (* l_0_16_45 l_0_16_45)))
 (let ((?x95392 (* l_0_16_44 l_0_16_44)))
 (let ((?x73956 (* l_0_16_43 l_0_16_43)))
 (let ((?x96928 (* l_0_16_298 l_0_16_298)))
 (let ((?x96926 (* l_0_16_297 l_0_16_297)))
 (let ((?x96924 (* l_0_16_296 l_0_16_296)))
 (let ((?x97495 (+ (+ (+ (* l_0_16_10 l_0_16_10) (* l_0_16_295 l_0_16_295)) ?x96924) ?x96926)))
 (let ((?x97502 (+ (+ (- (- (- (- (+ ?x97495 ?x96928) ?x73956) ?x95392) ?x95394) ?x95396) ?x95398) ?x95400)))
 (= (+ ?x97502 ?x95402) 0.0))))))))))))))
(assert
 (let ((?x95465 (* 2.0 l_0_16_46)))
 (let ((?x95466 (* ?x95465 l_0_16_50)))
 (let ((?x95462 (* 2.0 l_0_16_45)))
 (let ((?x95463 (* ?x95462 l_0_16_49)))
 (let ((?x95459 (* 2.0 l_0_16_44)))
 (let ((?x95460 (* ?x95459 l_0_16_48)))
 (let ((?x95456 (* 2.0 l_0_16_43)))
 (let ((?x95457 (* ?x95456 l_0_16_47)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x96980 (* ?x96979 l_0_16_302)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x96977 (* ?x96976 l_0_16_301)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x96974 (* ?x96973 l_0_16_300)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x96971 (* ?x96970 l_0_16_299)))
 (let ((?x97505 (* l_0_16_262 l_0_16_262)))
 (let ((?x24463 (* l_0_16_261 l_0_16_261)))
 (let ((?x76082 (* l_0_16_260 l_0_16_260)))
 (let ((?x24472 (* l_0_16_259 l_0_16_259)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x95430 (* ?x95231 l_0_16_9)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x95428 (* ?x94849 l_0_16_8)))
 (let ((?x95425 (* 2.0 l_0_16_11)))
 (let ((?x95426 (* ?x95425 l_0_16_7)))
 (let ((?x76081 (+ (+ (+ (+ (* (* 2.0 l_0_16_10) l_0_16_14) ?x95426) ?x95428) ?x95430) ?x24472)))
 (let ((?x97510 (+ (+ (+ (+ (+ (+ (+ ?x76081 ?x76082) ?x24463) ?x97505) ?x96971) ?x96974) ?x96977) ?x96980)))
 (= (- (- (- (- ?x97510 ?x95457) ?x95460) ?x95463) ?x95466) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x95465 (* 2.0 l_0_16_46)))
 (let ((?x95540 (* ?x95465 l_0_16_55)))
 (let ((?x95462 (* 2.0 l_0_16_45)))
 (let ((?x95538 (* ?x95462 l_0_16_54)))
 (let ((?x95459 (* 2.0 l_0_16_44)))
 (let ((?x95536 (* ?x95459 l_0_16_53)))
 (let ((?x95456 (* 2.0 l_0_16_43)))
 (let ((?x95534 (* ?x95456 l_0_16_52)))
 (let ((?x96928 (* l_0_16_298 l_0_16_298)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x97038 (* ?x96979 l_0_16_307)))
 (let ((?x96926 (* l_0_16_297 l_0_16_297)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x97036 (* ?x96976 l_0_16_306)))
 (let ((?x96924 (* l_0_16_296 l_0_16_296)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x97034 (* ?x96973 l_0_16_305)))
 (let ((?x96922 (* l_0_16_295 l_0_16_295)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x97032 (* ?x96970 l_0_16_304)))
 (let ((?x22507 (* l_0_16_190 l_0_16_190)))
 (let ((?x73970 (* l_0_16_189 l_0_16_189)))
 (let ((?x53141 (* l_0_16_188 l_0_16_188)))
 (let ((?x22534 (* l_0_16_187 l_0_16_187)))
 (let ((?x22379 (* 2.0 l_0_16_18)))
 (let ((?x95524 (* ?x22379 l_0_16_9)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x95522 (* ?x94936 l_0_16_8)))
 (let ((?x94933 (* 2.0 l_0_16_16)))
 (let ((?x95520 (* ?x94933 l_0_16_7)))
 (let ((?x53154 (* l_0_16_154 l_0_16_154)))
 (let ((?x73955 (* l_0_16_153 l_0_16_153)))
 (let ((?x73973 (* l_0_16_152 l_0_16_152)))
 (let ((?x53150 (* l_0_16_151 l_0_16_151)))
 (let ((?x97519 (+ (+ (+ (+ (* (* 2.0 l_0_16_10) l_0_16_19) ?x53150) ?x73973) ?x73955) ?x53154)))
 (let ((?x97526 (- (- (- (- (+ (+ (+ ?x97519 ?x95520) ?x95522) ?x95524) ?x22534) ?x53141) ?x73970) ?x22507)))
 (let ((?x97533 (+ (- (+ (- (+ (- (+ ?x97526 ?x97032) ?x96922) ?x97034) ?x96924) ?x97036) ?x96926) ?x97038)))
 (= (- (- (- (- (- ?x97533 ?x96928) ?x95534) ?x95536) ?x95538) ?x95540) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x95465 (* 2.0 l_0_16_46)))
 (let ((?x95601 (* ?x95465 l_0_16_61)))
 (let ((?x95462 (* 2.0 l_0_16_45)))
 (let ((?x95599 (* ?x95462 l_0_16_60)))
 (let ((?x95459 (* 2.0 l_0_16_44)))
 (let ((?x95597 (* ?x95459 l_0_16_59)))
 (let ((?x95456 (* 2.0 l_0_16_43)))
 (let ((?x95595 (* ?x95456 l_0_16_58)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x97099 (* ?x96979 l_0_16_313)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x97097 (* ?x96976 l_0_16_312)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x97095 (* ?x96973 l_0_16_311)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x97093 (* ?x96970 l_0_16_310)))
 (let ((?x97505 (* l_0_16_262 l_0_16_262)))
 (let ((?x24463 (* l_0_16_261 l_0_16_261)))
 (let ((?x76082 (* l_0_16_260 l_0_16_260)))
 (let ((?x24472 (* l_0_16_259 l_0_16_259)))
 (let ((?x95325 (* 2.0 l_0_16_24)))
 (let ((?x95593 (* ?x95325 l_0_16_9)))
 (let ((?x95052 (* 2.0 l_0_16_23)))
 (let ((?x95591 (* ?x95052 l_0_16_8)))
 (let ((?x95320 (* 2.0 l_0_16_22)))
 (let ((?x95589 (* ?x95320 l_0_16_7)))
 (let ((?x97550 (- (+ (+ (+ (* (* 2.0 l_0_16_10) l_0_16_25) ?x95589) ?x95591) ?x95593) ?x24472)))
 (let ((?x97557 (+ (+ (+ (+ (- (- (- ?x97550 ?x76082) ?x24463) ?x97505) ?x97093) ?x97095) ?x97097) ?x97099)))
 (= (- (- (- (- ?x97557 ?x95595) ?x95597) ?x95599) ?x95601) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x95465 (* 2.0 l_0_16_46)))
 (let ((?x95721 (* ?x95465 l_0_16_68)))
 (let ((?x95462 (* 2.0 l_0_16_45)))
 (let ((?x95719 (* ?x95462 l_0_16_67)))
 (let ((?x95459 (* 2.0 l_0_16_44)))
 (let ((?x95717 (* ?x95459 l_0_16_66)))
 (let ((?x95456 (* 2.0 l_0_16_43)))
 (let ((?x95715 (* ?x95456 l_0_16_65)))
 (let ((?x94790 (* 2.0 l_0_16_31)))
 (let ((?x95713 (* ?x94790 l_0_16_9)))
 (let ((?x94787 (* 2.0 l_0_16_30)))
 (let ((?x95711 (* ?x94787 l_0_16_8)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x97181 (* ?x96979 l_0_16_320)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x97179 (* ?x96976 l_0_16_319)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x97177 (* ?x96973 l_0_16_318)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x97175 (* ?x96970 l_0_16_317)))
 (let ((?x94779 (* 2.0 l_0_16_29)))
 (let ((?x95709 (* ?x94779 l_0_16_7)))
 (let ((?x97566 (* l_0_16_226 l_0_16_226)))
 (let ((?x97564 (* l_0_16_225 l_0_16_225)))
 (let ((?x18065 (* l_0_16_224 l_0_16_224)))
 (let ((?x76336 (* l_0_16_223 l_0_16_223)))
 (let ((?x97567 (- (- (- (- (* (* 2.0 l_0_16_10) l_0_16_32) ?x76336) ?x18065) ?x97564) ?x97566)))
 (let ((?x97574 (+ (+ (+ (+ (+ (+ (+ ?x97567 ?x95709) ?x97175) ?x97177) ?x97179) ?x97181) ?x95711) ?x95713)))
 (= (- (- (- (- ?x97574 ?x95715) ?x95717) ?x95719) ?x95721) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x95801 (* l_0_16_51 l_0_16_51)))
 (let ((?x95799 (* l_0_16_50 l_0_16_50)))
 (let ((?x95797 (* l_0_16_49 l_0_16_49)))
 (let ((?x95795 (* l_0_16_48 l_0_16_48)))
 (let ((?x95793 (* l_0_16_47 l_0_16_47)))
 (let ((?x97594 (* l_0_16_303 l_0_16_303)))
 (let ((?x97592 (* l_0_16_302 l_0_16_302)))
 (let ((?x97590 (* l_0_16_301 l_0_16_301)))
 (let ((?x97588 (* l_0_16_300 l_0_16_300)))
 (let ((?x97586 (* l_0_16_299 l_0_16_299)))
 (let ((?x76377 (* 2.0 l_0_16_262)))
 (let ((?x97584 (* ?x76377 l_0_16_266)))
 (let ((?x76376 (* 2.0 l_0_16_261)))
 (let ((?x76378 (* ?x76376 l_0_16_265)))
 (let ((?x76356 (* 2.0 l_0_16_260)))
 (let ((?x76368 (* ?x76356 l_0_16_264)))
 (let ((?x54648 (* 2.0 l_0_16_259)))
 (let ((?x20547 (* ?x54648 l_0_16_263)))
 (let ((?x95771 (* l_0_16_15 l_0_16_15)))
 (let ((?x95769 (* l_0_16_14 l_0_16_14)))
 (let ((?x95767 (* l_0_16_13 l_0_16_13)))
 (let ((?x76426 (+ (+ (+ (* l_0_16_11 l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x95767) ?x95769)))
 (let ((?x97589 (+ (+ (+ (+ (+ (+ (+ ?x76426 ?x95771) ?x20547) ?x76368) ?x76378) ?x97584) ?x97586) ?x97588)))
 (let ((?x97599 (- (- (- (- (+ (+ (+ ?x97589 ?x97590) ?x97592) ?x97594) ?x95793) ?x95795) ?x95797) ?x95799)))
 (= (- ?x97599 ?x95801) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x95887 (* 2.0 l_0_16_51)))
 (let ((?x95888 (* ?x95887 l_0_16_56)))
 (let ((?x95884 (* 2.0 l_0_16_50)))
 (let ((?x95885 (* ?x95884 l_0_16_55)))
 (let ((?x95881 (* 2.0 l_0_16_49)))
 (let ((?x95882 (* ?x95881 l_0_16_54)))
 (let ((?x95878 (* 2.0 l_0_16_48)))
 (let ((?x95879 (* ?x95878 l_0_16_53)))
 (let ((?x95875 (* 2.0 l_0_16_47)))
 (let ((?x95876 (* ?x95875 l_0_16_52)))
 (let ((?x97632 (* 2.0 l_0_16_303)))
 (let ((?x97633 (* ?x97632 l_0_16_308)))
 (let ((?x97629 (* 2.0 l_0_16_302)))
 (let ((?x97630 (* ?x97629 l_0_16_307)))
 (let ((?x97626 (* 2.0 l_0_16_301)))
 (let ((?x97627 (* ?x97626 l_0_16_306)))
 (let ((?x97623 (* 2.0 l_0_16_300)))
 (let ((?x97624 (* ?x97623 l_0_16_305)))
 (let ((?x97620 (* 2.0 l_0_16_299)))
 (let ((?x97621 (* ?x97620 l_0_16_304)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x96980 (* ?x96979 l_0_16_302)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x96977 (* ?x96976 l_0_16_301)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x96974 (* ?x96973 l_0_16_300)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x96971 (* ?x96970 l_0_16_299)))
 (let ((?x76377 (* 2.0 l_0_16_262)))
 (let ((?x97614 (* ?x76377 l_0_16_271)))
 (let ((?x76376 (* 2.0 l_0_16_261)))
 (let ((?x97612 (* ?x76376 l_0_16_270)))
 (let ((?x76356 (* 2.0 l_0_16_260)))
 (let ((?x97610 (* ?x76356 l_0_16_269)))
 (let ((?x54648 (* 2.0 l_0_16_259)))
 (let ((?x97608 (* ?x54648 l_0_16_268)))
 (let ((?x95453 (* 2.0 l_0_16_190)))
 (let ((?x95454 (* ?x95453 l_0_16_194)))
 (let ((?x95450 (* 2.0 l_0_16_189)))
 (let ((?x95451 (* ?x95450 l_0_16_193)))
 (let ((?x95447 (* 2.0 l_0_16_188)))
 (let ((?x95448 (* ?x95447 l_0_16_192)))
 (let ((?x95444 (* 2.0 l_0_16_187)))
 (let ((?x95445 (* ?x95444 l_0_16_191)))
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95442 (* ?x95441 l_0_16_158)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95439 (* ?x95438 l_0_16_157)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95436 (* ?x95435 l_0_16_156)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95433 (* ?x95432 l_0_16_155)))
 (let ((?x95842 (* 2.0 l_0_16_15)))
 (let ((?x95843 (* ?x95842 l_0_16_20)))
 (let ((?x95839 (* 2.0 l_0_16_14)))
 (let ((?x95840 (* ?x95839 l_0_16_19)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x95837 (* ?x95231 l_0_16_18)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x95835 (* ?x94849 l_0_16_17)))
 (let ((?x76497 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_16) ?x95835) ?x95837) ?x95840) ?x95843)))
 (let ((?x18517 (- (- (- (+ (+ (+ (+ ?x76497 ?x95433) ?x95436) ?x95439) ?x95442) ?x95445) ?x95448) ?x95451)))
 (let ((?x97617 (- (- (+ (+ (+ (+ (- ?x18517 ?x95454) ?x97608) ?x97610) ?x97612) ?x97614) ?x96971) ?x96974)))
 (let ((?x97634 (+ (+ (+ (+ (+ (- (- ?x97617 ?x96977) ?x96980) ?x97621) ?x97624) ?x97627) ?x97630) ?x97633)))
 (= (- (- (- (- (- ?x97634 ?x95876) ?x95879) ?x95882) ?x95885) ?x95888) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x95887 (* 2.0 l_0_16_51)))
 (let ((?x95959 (* ?x95887 l_0_16_62)))
 (let ((?x95884 (* 2.0 l_0_16_50)))
 (let ((?x95957 (* ?x95884 l_0_16_61)))
 (let ((?x95881 (* 2.0 l_0_16_49)))
 (let ((?x95955 (* ?x95881 l_0_16_60)))
 (let ((?x95878 (* 2.0 l_0_16_48)))
 (let ((?x95953 (* ?x95878 l_0_16_59)))
 (let ((?x95875 (* 2.0 l_0_16_47)))
 (let ((?x95951 (* ?x95875 l_0_16_58)))
 (let ((?x97632 (* 2.0 l_0_16_303)))
 (let ((?x97676 (* ?x97632 l_0_16_314)))
 (let ((?x97629 (* 2.0 l_0_16_302)))
 (let ((?x97674 (* ?x97629 l_0_16_313)))
 (let ((?x97626 (* 2.0 l_0_16_301)))
 (let ((?x97672 (* ?x97626 l_0_16_312)))
 (let ((?x97623 (* 2.0 l_0_16_300)))
 (let ((?x97670 (* ?x97623 l_0_16_311)))
 (let ((?x97620 (* 2.0 l_0_16_299)))
 (let ((?x97668 (* ?x97620 l_0_16_310)))
 (let ((?x76377 (* 2.0 l_0_16_262)))
 (let ((?x97666 (* ?x76377 l_0_16_277)))
 (let ((?x97584 (* ?x76377 l_0_16_266)))
 (let ((?x76376 (* 2.0 l_0_16_261)))
 (let ((?x19891 (* ?x76376 l_0_16_276)))
 (let ((?x76378 (* ?x76376 l_0_16_265)))
 (let ((?x76356 (* 2.0 l_0_16_260)))
 (let ((?x21290 (* ?x76356 l_0_16_275)))
 (let ((?x76368 (* ?x76356 l_0_16_264)))
 (let ((?x54648 (* 2.0 l_0_16_259)))
 (let ((?x76681 (* ?x54648 l_0_16_274)))
 (let ((?x20547 (* ?x54648 l_0_16_263)))
 (let ((?x95842 (* 2.0 l_0_16_15)))
 (let ((?x95928 (* ?x95842 l_0_16_26)))
 (let ((?x95839 (* 2.0 l_0_16_14)))
 (let ((?x95924 (* ?x95839 l_0_16_25)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x74230 (* ?x95231 l_0_16_24)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x74201 (* ?x94849 l_0_16_23)))
 (let ((?x54823 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_22) ?x74201) ?x74230) ?x95924) ?x95928)))
 (let ((?x97665 (- (+ (- (+ (- (+ (- ?x54823 ?x20547) ?x76681) ?x76368) ?x21290) ?x76378) ?x19891) ?x97584)))
 (let ((?x97678 (- (+ (+ (+ (+ (+ (+ ?x97665 ?x97666) ?x97668) ?x97670) ?x97672) ?x97674) ?x97676) ?x95951)))
 (= (- (- (- (- ?x97678 ?x95953) ?x95955) ?x95957) ?x95959) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x95887 (* 2.0 l_0_16_51)))
 (let ((?x96011 (* ?x95887 l_0_16_69)))
 (let ((?x95884 (* 2.0 l_0_16_50)))
 (let ((?x96009 (* ?x95884 l_0_16_68)))
 (let ((?x95881 (* 2.0 l_0_16_49)))
 (let ((?x96007 (* ?x95881 l_0_16_67)))
 (let ((?x95878 (* 2.0 l_0_16_48)))
 (let ((?x96005 (* ?x95878 l_0_16_66)))
 (let ((?x95875 (* 2.0 l_0_16_47)))
 (let ((?x96003 (* ?x95875 l_0_16_65)))
 (let ((?x97632 (* 2.0 l_0_16_303)))
 (let ((?x97731 (* ?x97632 l_0_16_321)))
 (let ((?x97629 (* 2.0 l_0_16_302)))
 (let ((?x97729 (* ?x97629 l_0_16_320)))
 (let ((?x97626 (* 2.0 l_0_16_301)))
 (let ((?x97727 (* ?x97626 l_0_16_319)))
 (let ((?x97623 (* 2.0 l_0_16_300)))
 (let ((?x97725 (* ?x97623 l_0_16_318)))
 (let ((?x97620 (* 2.0 l_0_16_299)))
 (let ((?x97723 (* ?x97620 l_0_16_317)))
 (let ((?x76377 (* 2.0 l_0_16_262)))
 (let ((?x97721 (* ?x76377 l_0_16_284)))
 (let ((?x76376 (* 2.0 l_0_16_261)))
 (let ((?x97719 (* ?x76376 l_0_16_283)))
 (let ((?x76356 (* 2.0 l_0_16_260)))
 (let ((?x97717 (* ?x76356 l_0_16_282)))
 (let ((?x54648 (* 2.0 l_0_16_259)))
 (let ((?x97715 (* ?x54648 l_0_16_281)))
 (let ((?x95842 (* 2.0 l_0_16_15)))
 (let ((?x74357 (* ?x95842 l_0_16_33)))
 (let ((?x95839 (* 2.0 l_0_16_14)))
 (let ((?x22853 (* ?x95839 l_0_16_32)))
 (let ((?x95231 (* 2.0 l_0_16_13)))
 (let ((?x22864 (* ?x95231 l_0_16_31)))
 (let ((?x94849 (* 2.0 l_0_16_12)))
 (let ((?x22855 (* ?x94849 l_0_16_30)))
 (let ((?x76833 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_29) ?x22855) ?x22864) ?x22853) ?x74357)))
 (let ((?x54888 (- (- ?x76833 (* (* 2.0 l_0_16_223) l_0_16_227)) (* (* 2.0 l_0_16_224) l_0_16_228))))
 (let ((?x97714 (- (- ?x54888 (* (* 2.0 l_0_16_225) l_0_16_229)) (* (* 2.0 l_0_16_226) l_0_16_230))))
 (let ((?x97728 (+ (+ (+ (+ (+ (+ (+ ?x97714 ?x97715) ?x97717) ?x97719) ?x97721) ?x97723) ?x97725) ?x97727)))
 (let ((?x97737 (- (- (- (- (- (+ (+ ?x97728 ?x97729) ?x97731) ?x96003) ?x96005) ?x96007) ?x96009) ?x96011)))
 (= ?x97737 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96104 (* l_0_16_57 l_0_16_57)))
 (let ((?x96102 (* l_0_16_56 l_0_16_56)))
 (let ((?x96100 (* l_0_16_55 l_0_16_55)))
 (let ((?x96098 (* l_0_16_54 l_0_16_54)))
 (let ((?x96096 (* l_0_16_53 l_0_16_53)))
 (let ((?x96094 (* l_0_16_52 l_0_16_52)))
 (let ((?x97806 (* l_0_16_309 l_0_16_309)))
 (let ((?x97804 (* l_0_16_308 l_0_16_308)))
 (let ((?x97802 (* l_0_16_307 l_0_16_307)))
 (let ((?x97800 (* l_0_16_306 l_0_16_306)))
 (let ((?x97798 (* l_0_16_305 l_0_16_305)))
 (let ((?x97796 (* l_0_16_304 l_0_16_304)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x97038 (* ?x96979 l_0_16_307)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x97036 (* ?x96976 l_0_16_306)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x97034 (* ?x96973 l_0_16_305)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x97032 (* ?x96970 l_0_16_304)))
 (let ((?x96092 (* l_0_16_21 l_0_16_21)))
 (let ((?x96086 (* l_0_16_20 l_0_16_20)))
 (let ((?x95453 (* 2.0 l_0_16_190)))
 (let ((?x95532 (* ?x95453 l_0_16_199)))
 (let ((?x96076 (* l_0_16_19 l_0_16_19)))
 (let ((?x95450 (* 2.0 l_0_16_189)))
 (let ((?x95530 (* ?x95450 l_0_16_198)))
 (let ((?x95447 (* 2.0 l_0_16_188)))
 (let ((?x95528 (* ?x95447 l_0_16_197)))
 (let ((?x95444 (* 2.0 l_0_16_187)))
 (let ((?x95526 (* ?x95444 l_0_16_196)))
 (let ((?x96074 (* l_0_16_18 l_0_16_18)))
 (let ((?x96072 (* l_0_16_17 l_0_16_17)))
 (let ((?x96108 (* l_0_16_16 l_0_16_16)))
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95507 (* ?x95441 l_0_16_163)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95503 (* ?x95438 l_0_16_162)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95499 (* ?x95435 l_0_16_161)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95495 (* ?x95432 l_0_16_160)))
 (let ((?x97785 (- (+ (+ (+ (+ (+ (+ ?x95495 ?x95499) ?x95503) ?x95507) ?x96108) ?x96072) ?x96074) ?x95526)))
 (let ((?x97792 (- (+ (+ (- (+ (- (- ?x97785 ?x95528) ?x95530) ?x96076) ?x95532) ?x96086) ?x96092) ?x97032)))
 (let ((?x97803 (+ (+ (+ (+ (- (- (- ?x97792 ?x97034) ?x97036) ?x97038) ?x97796) ?x97798) ?x97800) ?x97802)))
 (let ((?x97812 (- (- (- (- (- (+ (+ ?x97803 ?x97804) ?x97806) ?x96094) ?x96096) ?x96098) ?x96100) ?x96102)))
 (= (- ?x97812 ?x96104) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96231 (* 2.0 l_0_16_57)))
 (let ((?x96232 (* ?x96231 l_0_16_63)))
 (let ((?x96228 (* 2.0 l_0_16_56)))
 (let ((?x96229 (* ?x96228 l_0_16_62)))
 (let ((?x96225 (* 2.0 l_0_16_55)))
 (let ((?x96226 (* ?x96225 l_0_16_61)))
 (let ((?x96222 (* 2.0 l_0_16_54)))
 (let ((?x96223 (* ?x96222 l_0_16_60)))
 (let ((?x96219 (* 2.0 l_0_16_53)))
 (let ((?x96220 (* ?x96219 l_0_16_59)))
 (let ((?x96216 (* 2.0 l_0_16_52)))
 (let ((?x96217 (* ?x96216 l_0_16_58)))
 (let ((?x97821 (* 2.0 l_0_16_309)))
 (let ((?x97822 (* ?x97821 l_0_16_315)))
 (let ((?x97818 (* 2.0 l_0_16_308)))
 (let ((?x97819 (* ?x97818 l_0_16_314)))
 (let ((?x97815 (* 2.0 l_0_16_307)))
 (let ((?x97816 (* ?x97815 l_0_16_313)))
 (let ((?x77000 (* 2.0 l_0_16_306)))
 (let ((?x76981 (* ?x77000 l_0_16_312)))
 (let ((?x77008 (* 2.0 l_0_16_305)))
 (let ((?x76996 (* ?x77008 l_0_16_311)))
 (let ((?x77027 (* 2.0 l_0_16_304)))
 (let ((?x77004 (* ?x77027 l_0_16_310)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x97099 (* ?x96979 l_0_16_313)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x97097 (* ?x96976 l_0_16_312)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x97095 (* ?x96973 l_0_16_311)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x97093 (* ?x96970 l_0_16_310)))
 (let ((?x76377 (* 2.0 l_0_16_262)))
 (let ((?x97614 (* ?x76377 l_0_16_271)))
 (let ((?x76376 (* 2.0 l_0_16_261)))
 (let ((?x97612 (* ?x76376 l_0_16_270)))
 (let ((?x76356 (* 2.0 l_0_16_260)))
 (let ((?x97610 (* ?x76356 l_0_16_269)))
 (let ((?x54648 (* 2.0 l_0_16_259)))
 (let ((?x97608 (* ?x54648 l_0_16_268)))
 (let ((?x96213 (* 2.0 l_0_16_21)))
 (let ((?x96214 (* ?x96213 l_0_16_27)))
 (let ((?x96204 (* 2.0 l_0_16_20)))
 (let ((?x96205 (* ?x96204 l_0_16_26)))
 (let ((?x95453 (* 2.0 l_0_16_190)))
 (let ((?x95587 (* ?x95453 l_0_16_205)))
 (let ((?x96189 (* 2.0 l_0_16_19)))
 (let ((?x96190 (* ?x96189 l_0_16_25)))
 (let ((?x95450 (* 2.0 l_0_16_189)))
 (let ((?x95585 (* ?x95450 l_0_16_204)))
 (let ((?x95447 (* 2.0 l_0_16_188)))
 (let ((?x95583 (* ?x95447 l_0_16_203)))
 (let ((?x95444 (* 2.0 l_0_16_187)))
 (let ((?x95581 (* ?x95444 l_0_16_202)))
 (let ((?x22379 (* 2.0 l_0_16_18)))
 (let ((?x96187 (* ?x22379 l_0_16_24)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x96185 (* ?x94936 l_0_16_23)))
 (let ((?x94933 (* 2.0 l_0_16_16)))
 (let ((?x96165 (* ?x94933 l_0_16_22)))
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95579 (* ?x95441 l_0_16_169)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95577 (* ?x95438 l_0_16_168)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95575 (* ?x95435 l_0_16_167)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95573 (* ?x95432 l_0_16_166)))
 (let ((?x25762 (- (+ (+ (+ (+ (+ (+ ?x95573 ?x95575) ?x95577) ?x95579) ?x96165) ?x96185) ?x96187) ?x95581)))
 (let ((?x77107 (- (+ (+ (- (+ (- (- ?x25762 ?x95583) ?x95585) ?x96190) ?x95587) ?x96205) ?x96214) ?x97608)))
 (let ((?x77031 (- (- (- (- (- (- (- ?x77107 ?x97610) ?x97612) ?x97614) ?x97093) ?x97095) ?x97097) ?x97099)))
 (let ((?x97824 (- (+ (+ (+ (+ (+ (+ ?x77031 ?x77004) ?x76996) ?x76981) ?x97816) ?x97819) ?x97822) ?x96217)))
 (= (- (- (- (- (- ?x97824 ?x96220) ?x96223) ?x96226) ?x96229) ?x96232) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96231 (* 2.0 l_0_16_57)))
 (let ((?x96379 (* ?x96231 l_0_16_70)))
 (let ((?x96228 (* 2.0 l_0_16_56)))
 (let ((?x96377 (* ?x96228 l_0_16_69)))
 (let ((?x96225 (* 2.0 l_0_16_55)))
 (let ((?x96375 (* ?x96225 l_0_16_68)))
 (let ((?x96222 (* 2.0 l_0_16_54)))
 (let ((?x96373 (* ?x96222 l_0_16_67)))
 (let ((?x96219 (* 2.0 l_0_16_53)))
 (let ((?x96371 (* ?x96219 l_0_16_66)))
 (let ((?x96216 (* 2.0 l_0_16_52)))
 (let ((?x96369 (* ?x96216 l_0_16_65)))
 (let ((?x97821 (* 2.0 l_0_16_309)))
 (let ((?x97875 (* ?x97821 l_0_16_322)))
 (let ((?x97818 (* 2.0 l_0_16_308)))
 (let ((?x97873 (* ?x97818 l_0_16_321)))
 (let ((?x97815 (* 2.0 l_0_16_307)))
 (let ((?x97871 (* ?x97815 l_0_16_320)))
 (let ((?x77000 (* 2.0 l_0_16_306)))
 (let ((?x97869 (* ?x77000 l_0_16_319)))
 (let ((?x77008 (* 2.0 l_0_16_305)))
 (let ((?x97867 (* ?x77008 l_0_16_318)))
 (let ((?x77027 (* 2.0 l_0_16_304)))
 (let ((?x97865 (* ?x77027 l_0_16_317)))
 (let ((?x96979 (* 2.0 l_0_16_298)))
 (let ((?x97181 (* ?x96979 l_0_16_320)))
 (let ((?x96976 (* 2.0 l_0_16_297)))
 (let ((?x97179 (* ?x96976 l_0_16_319)))
 (let ((?x96973 (* 2.0 l_0_16_296)))
 (let ((?x97177 (* ?x96973 l_0_16_318)))
 (let ((?x96970 (* 2.0 l_0_16_295)))
 (let ((?x97175 (* ?x96970 l_0_16_317)))
 (let ((?x96213 (* 2.0 l_0_16_21)))
 (let ((?x96367 (* ?x96213 l_0_16_34)))
 (let ((?x96204 (* 2.0 l_0_16_20)))
 (let ((?x96361 (* ?x96204 l_0_16_33)))
 (let ((?x95453 (* 2.0 l_0_16_190)))
 (let ((?x95707 (* ?x95453 l_0_16_212)))
 (let ((?x96189 (* 2.0 l_0_16_19)))
 (let ((?x96351 (* ?x96189 l_0_16_32)))
 (let ((?x95450 (* 2.0 l_0_16_189)))
 (let ((?x95705 (* ?x95450 l_0_16_211)))
 (let ((?x95447 (* 2.0 l_0_16_188)))
 (let ((?x95703 (* ?x95447 l_0_16_210)))
 (let ((?x95444 (* 2.0 l_0_16_187)))
 (let ((?x95701 (* ?x95444 l_0_16_209)))
 (let ((?x22379 (* 2.0 l_0_16_18)))
 (let ((?x96349 (* ?x22379 l_0_16_31)))
 (let ((?x94936 (* 2.0 l_0_16_17)))
 (let ((?x96347 (* ?x94936 l_0_16_30)))
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95699 (* ?x95441 l_0_16_176)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95697 (* ?x95438 l_0_16_175)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95695 (* ?x95435 l_0_16_174)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95693 (* ?x95432 l_0_16_173)))
 (let ((?x97843 (+ (+ (+ (+ ?x95693 ?x95695) ?x95697) ?x95699) (* (* 2.0 l_0_16_16) l_0_16_29))))
 (let ((?x97850 (- (+ (- (- (- (+ (+ ?x97843 ?x96347) ?x96349) ?x95701) ?x95703) ?x95705) ?x96351) ?x95707)))
 (let ((?x97856 (- (- (+ (+ ?x97850 ?x96361) ?x96367) (* (* 2.0 l_0_16_223) l_0_16_232)) (* (* 2.0 l_0_16_224) l_0_16_233))))
 (let ((?x97860 (- (- ?x97856 (* (* 2.0 l_0_16_225) l_0_16_234)) (* (* 2.0 l_0_16_226) l_0_16_235))))
 (let ((?x97870 (+ (+ (+ (- (- (- (- ?x97860 ?x97175) ?x97177) ?x97179) ?x97181) ?x97865) ?x97867) ?x97869)))
 (let ((?x97880 (- (- (- (- (+ (+ (+ ?x97870 ?x97871) ?x97873) ?x97875) ?x96369) ?x96371) ?x96373) ?x96375)))
 (= (- (- ?x97880 ?x96377) ?x96379) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96484 (* l_0_16_64 l_0_16_64)))
 (let ((?x96482 (* l_0_16_63 l_0_16_63)))
 (let ((?x96480 (* l_0_16_62 l_0_16_62)))
 (let ((?x96478 (* l_0_16_61 l_0_16_61)))
 (let ((?x96476 (* l_0_16_60 l_0_16_60)))
 (let ((?x96474 (* l_0_16_59 l_0_16_59)))
 (let ((?x96472 (* l_0_16_58 l_0_16_58)))
 (let ((?x97909 (* l_0_16_316 l_0_16_316)))
 (let ((?x97907 (* l_0_16_315 l_0_16_315)))
 (let ((?x97905 (* l_0_16_314 l_0_16_314)))
 (let ((?x97903 (* l_0_16_313 l_0_16_313)))
 (let ((?x97901 (* l_0_16_312 l_0_16_312)))
 (let ((?x97899 (* l_0_16_311 l_0_16_311)))
 (let ((?x97897 (* l_0_16_310 l_0_16_310)))
 (let ((?x96470 (* l_0_16_28 l_0_16_28)))
 (let ((?x96468 (* l_0_16_27 l_0_16_27)))
 (let ((?x76377 (* 2.0 l_0_16_262)))
 (let ((?x97666 (* ?x76377 l_0_16_277)))
 (let ((?x76376 (* 2.0 l_0_16_261)))
 (let ((?x19891 (* ?x76376 l_0_16_276)))
 (let ((?x76356 (* 2.0 l_0_16_260)))
 (let ((?x21290 (* ?x76356 l_0_16_275)))
 (let ((?x96466 (* l_0_16_26 l_0_16_26)))
 (let ((?x54648 (* 2.0 l_0_16_259)))
 (let ((?x76681 (* ?x54648 l_0_16_274)))
 (let ((?x96464 (* l_0_16_25 l_0_16_25)))
 (let ((?x96462 (* l_0_16_24 l_0_16_24)))
 (let ((?x97889 (+ (+ (+ (* l_0_16_22 l_0_16_22) (* l_0_16_23 l_0_16_23)) ?x96462) ?x96464)))
 (let ((?x97896 (+ (+ (- (- (- (+ (- ?x97889 ?x76681) ?x96466) ?x21290) ?x19891) ?x97666) ?x96468) ?x96470)))
 (let ((?x97910 (+ (+ (+ (+ (+ (+ (+ ?x97896 ?x97897) ?x97899) ?x97901) ?x97903) ?x97905) ?x97907) ?x97909)))
 (let ((?x97917 (- (- (- (- (- (- (- ?x97910 ?x96472) ?x96474) ?x96476) ?x96478) ?x96480) ?x96482) ?x96484)))
 (= ?x97917 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x96634 (* (* 2.0 l_0_16_64) l_0_16_71)))
 (let ((?x96631 (* (* 2.0 l_0_16_63) l_0_16_70)))
 (let ((?x96628 (* (* 2.0 l_0_16_62) l_0_16_69)))
 (let ((?x96625 (* (* 2.0 l_0_16_61) l_0_16_68)))
 (let ((?x96622 (* (* 2.0 l_0_16_60) l_0_16_67)))
 (let ((?x96619 (* (* 2.0 l_0_16_59) l_0_16_66)))
 (let ((?x96616 (* (* 2.0 l_0_16_58) l_0_16_65)))
 (let ((?x97949 (* (* 2.0 l_0_16_316) l_0_16_323)))
 (let ((?x97946 (* (* 2.0 l_0_16_315) l_0_16_322)))
 (let ((?x97943 (* (* 2.0 l_0_16_314) l_0_16_321)))
 (let ((?x97940 (* (* 2.0 l_0_16_313) l_0_16_320)))
 (let ((?x97937 (* (* 2.0 l_0_16_312) l_0_16_319)))
 (let ((?x97934 (* (* 2.0 l_0_16_311) l_0_16_318)))
 (let ((?x97931 (* (* 2.0 l_0_16_310) l_0_16_317)))
 (let ((?x96613 (* (* 2.0 l_0_16_28) l_0_16_35)))
 (let ((?x96610 (* (* 2.0 l_0_16_27) l_0_16_34)))
 (let ((?x76377 (* 2.0 l_0_16_262)))
 (let ((?x97721 (* ?x76377 l_0_16_284)))
 (let ((?x76376 (* 2.0 l_0_16_261)))
 (let ((?x97719 (* ?x76376 l_0_16_283)))
 (let ((?x76356 (* 2.0 l_0_16_260)))
 (let ((?x97717 (* ?x76356 l_0_16_282)))
 (let ((?x96607 (* (* 2.0 l_0_16_26) l_0_16_33)))
 (let ((?x54648 (* 2.0 l_0_16_259)))
 (let ((?x97715 (* ?x54648 l_0_16_281)))
 (let ((?x96604 (* (* 2.0 l_0_16_25) l_0_16_32)))
 (let ((?x95325 (* 2.0 l_0_16_24)))
 (let ((?x96601 (* ?x95325 l_0_16_31)))
 (let ((?x95052 (* 2.0 l_0_16_23)))
 (let ((?x96599 (* ?x95052 l_0_16_30)))
 (let ((?x95320 (* 2.0 l_0_16_22)))
 (let ((?x96597 (* ?x95320 l_0_16_29)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94755 (* ?x94704 l_0_16_152)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x75508 (* ?x94852 l_0_16_151)))
 (let ((?x77647 (+ (* (* 1.0 l_0_16_110) l_0_16_115) (* (* 1.0 l_0_16_111) l_0_16_116))))
 (let ((?x55293 (- (+ (- (- ?x77647 ?x75508) ?x94755) ?x96597) (* (* 2.0 l_0_16_223) l_0_16_238))))
 (let ((?x55287 (- (- ?x55293 (* (* 2.0 l_0_16_224) l_0_16_239)) (* (* 2.0 l_0_16_225) l_0_16_240))))
 (let ((?x97922 (+ (+ (+ (- ?x55287 (* (* 2.0 l_0_16_226) l_0_16_241)) ?x96599) ?x96601) ?x96604)))
 (let ((?x97929 (+ (+ (- (- (- (+ (- ?x97922 ?x97715) ?x96607) ?x97717) ?x97719) ?x97721) ?x96610) ?x96613)))
 (let ((?x97950 (+ (+ (+ (+ (+ (+ (+ ?x97929 ?x97931) ?x97934) ?x97937) ?x97940) ?x97943) ?x97946) ?x97949)))
 (let ((?x97957 (- (- (- (- (- (- (- ?x97950 ?x96616) ?x96619) ?x96622) ?x96625) ?x96628) ?x96631) ?x96634)))
 (let ((?x97961 (- (- ?x97957 (* (* 1.0 l_0_16_74) l_0_16_79)) (* (* 1.0 l_0_16_75) l_0_16_80))))
 (= ?x97961 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x96787 (* l_0_16_72 l_0_16_72)))
 (let ((?x96785 (* l_0_16_71 l_0_16_71)))
 (let ((?x96783 (* l_0_16_70 l_0_16_70)))
 (let ((?x96781 (* l_0_16_69 l_0_16_69)))
 (let ((?x96779 (* l_0_16_68 l_0_16_68)))
 (let ((?x96777 (* l_0_16_67 l_0_16_67)))
 (let ((?x96775 (* l_0_16_66 l_0_16_66)))
 (let ((?x96773 (* l_0_16_65 l_0_16_65)))
 (let ((?x96771 (* l_0_16_36 l_0_16_36)))
 (let ((?x96769 (* l_0_16_35 l_0_16_35)))
 (let ((?x96767 (* l_0_16_34 l_0_16_34)))
 (let ((?x96765 (* l_0_16_33 l_0_16_33)))
 (let ((?x98006 (* l_0_16_324 l_0_16_324)))
 (let ((?x98004 (* l_0_16_323 l_0_16_323)))
 (let ((?x98002 (* l_0_16_322 l_0_16_322)))
 (let ((?x98000 (* l_0_16_321 l_0_16_321)))
 (let ((?x97998 (* l_0_16_320 l_0_16_320)))
 (let ((?x96763 (* l_0_16_32 l_0_16_32)))
 (let ((?x97995 (* l_0_16_319 l_0_16_319)))
 (let ((?x97993 (* l_0_16_318 l_0_16_318)))
 (let ((?x97991 (* l_0_16_317 l_0_16_317)))
 (let ((?x96761 (* l_0_16_31 l_0_16_31)))
 (let ((?x96759 (* l_0_16_30 l_0_16_30)))
 (let ((?x96757 (* l_0_16_29 l_0_16_29)))
 (let ((?x55407 (- (* (* (- 2.0) l_0_16_223) l_0_16_245) (* (* 2.0 l_0_16_224) l_0_16_246))))
 (let ((?x97987 (- (- ?x55407 (* (* 2.0 l_0_16_225) l_0_16_247)) (* (* 2.0 l_0_16_226) l_0_16_248))))
 (let ((?x97997 (+ (+ (+ (+ (+ (+ (+ ?x97987 ?x96757) ?x96759) ?x96761) ?x97991) ?x97993) ?x97995) ?x96763)))
 (let ((?x98009 (+ (+ (+ (+ (+ (+ (+ ?x97997 ?x97998) ?x98000) ?x98002) ?x98004) ?x98006) ?x96765) ?x96767)))
 (let ((?x98016 (- (- (- (- (- (+ (+ ?x98009 ?x96769) ?x96771) ?x96773) ?x96775) ?x96777) ?x96779) ?x96781)))
 (= (- (- (- ?x98016 ?x96783) ?x96785) ?x96787) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x94462 (* l_0_16_145 l_0_16_145)))
 (let ((?x77905 (* l_0_16_109 l_0_16_109)))
 (let ((?x77906 (* (/ 1.0 2.0) ?x77905)))
 (= (- (- ?x77906 ?x94462) (* (* (/ 1.0 2.0) l_0_16_73) l_0_16_73)) 0.0)))))
(assert
 (let ((?x97949 (* (* 2.0 l_0_16_316) l_0_16_323)))
 (let ((?x97946 (* (* 2.0 l_0_16_315) l_0_16_322)))
 (let ((?x97943 (* (* 2.0 l_0_16_314) l_0_16_321)))
 (let ((?x97940 (* (* 2.0 l_0_16_313) l_0_16_320)))
 (let ((?x97937 (* (* 2.0 l_0_16_312) l_0_16_319)))
 (let ((?x97934 (* (* 2.0 l_0_16_311) l_0_16_318)))
 (let ((?x97931 (* (* 2.0 l_0_16_310) l_0_16_317)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x98082 (* ?x96965 l_0_16_281)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94500 (* ?x94499 l_0_16_146)))
 (let ((?x98043 (+ (* (* 2.0 l_0_16_100) l_0_16_107) (* (* 2.0 l_0_16_101) l_0_16_94))))
 (let ((?x98047 (+ (+ ?x98043 (* (* 2.0 l_0_16_102) l_0_16_95)) (* (* 2.0 l_0_16_103) l_0_16_96))))
 (let ((?x98052 (+ (+ ?x98047 (* (* 2.0 l_0_16_104) l_0_16_97)) (* (* 2.0 l_0_16_105) l_0_16_98))))
 (let ((?x98057 (+ (+ ?x98052 (* (* 2.0 l_0_16_106) l_0_16_99)) (* (* 1.0 l_0_16_109) l_0_16_110))))
 (let ((?x98063 (- (- ?x98057 (* (* 2.0 l_0_16_130) l_0_16_137)) (* (* 2.0 l_0_16_131) l_0_16_138))))
 (let ((?x98069 (- (- ?x98063 (* (* 2.0 l_0_16_132) l_0_16_139)) (* (* 2.0 l_0_16_133) l_0_16_140))))
 (let ((?x98075 (- (- ?x98069 (* (* 2.0 l_0_16_134) l_0_16_141)) (* (* 2.0 l_0_16_135) l_0_16_142))))
 (let ((?x98081 (- (- (- ?x98075 (* (* 2.0 l_0_16_136) l_0_16_143)) ?x94500) (* (* 2.0 l_0_16_217) l_0_16_238))))
 (let ((?x98089 (+ (+ (+ (+ (+ (+ (- ?x98081 ?x98082) ?x97931) ?x97934) ?x97937) ?x97940) ?x97943) ?x97946)))
 (= (- (+ ?x98089 ?x97949) (* (* 1.0 l_0_16_73) l_0_16_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x73477 (* ?x94499 l_0_16_151)))
 (let ((?x98143 (- (- (* (* 1.0 l_0_16_109) l_0_16_115) ?x73477) (* (* 1.0 l_0_16_73) l_0_16_79))))
 (= ?x98143 0.0)))))
(assert
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94606 (* ?x94499 l_0_16_155)))
 (let ((?x98156 (- (- (* (* 1.0 l_0_16_109) l_0_16_119) ?x94606) (* (* 1.0 l_0_16_73) l_0_16_83))))
 (= ?x98156 0.0)))))
(assert
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94629 (* ?x94499 l_0_16_160)))
 (let ((?x98171 (- (- (* (* 1.0 l_0_16_109) l_0_16_124) ?x94629) (* (* 1.0 l_0_16_73) l_0_16_88))))
 (= ?x98171 0.0)))))
(assert
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94656 (* ?x94499 l_0_16_166)))
 (let ((?x98182 (- (- (* (* 1.0 l_0_16_109) l_0_16_130) ?x94656) (* (* 1.0 l_0_16_73) l_0_16_94))))
 (= ?x98182 0.0)))))
(assert
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94685 (* ?x94499 l_0_16_173)))
 (let ((?x98192 (+ (* (* (- 1.0) l_0_16_101) l_0_16_73) (* (* 1.0 l_0_16_109) l_0_16_137))))
 (= (- ?x98192 ?x94685) 0.0)))))
(assert
 (let ((?x98254 (* (* 2.0 l_0_16_280) l_0_16_287)))
 (let ((?x98251 (* (* 2.0 l_0_16_279) l_0_16_286)))
 (let ((?x98248 (* (* 2.0 l_0_16_278) l_0_16_285)))
 (let ((?x98245 (* (* 2.0 l_0_16_277) l_0_16_284)))
 (let ((?x98242 (* (* 2.0 l_0_16_276) l_0_16_283)))
 (let ((?x98239 (* (* 2.0 l_0_16_275) l_0_16_282)))
 (let ((?x98236 (* (* 2.0 l_0_16_274) l_0_16_281)))
 (let ((?x98232 (* 2.0 l_0_16_267)))
 (let ((?x98233 (* ?x98232 l_0_16_285)))
 (let ((?x98229 (* 2.0 l_0_16_266)))
 (let ((?x98230 (* ?x98229 l_0_16_284)))
 (let ((?x98226 (* 2.0 l_0_16_265)))
 (let ((?x98227 (* ?x98226 l_0_16_283)))
 (let ((?x98223 (* 2.0 l_0_16_264)))
 (let ((?x98224 (* ?x98223 l_0_16_282)))
 (let ((?x98220 (* 2.0 l_0_16_263)))
 (let ((?x98221 (* ?x98220 l_0_16_281)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94855 (* ?x94704 l_0_16_156)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x94853 (* ?x94852 l_0_16_155)))
 (let ((?x98202 (+ (* (* 1.0 l_0_16_110) l_0_16_119) (* (* 1.0 l_0_16_111) l_0_16_120))))
 (let ((?x98210 (- (- (- (- ?x98202 ?x94853) ?x94855) (* (* 2.0 l_0_16_227) l_0_16_238)) (* (* 2.0 l_0_16_228) l_0_16_239))))
 (let ((?x98216 (- (- ?x98210 (* (* 2.0 l_0_16_229) l_0_16_240)) (* (* 2.0 l_0_16_230) l_0_16_241))))
 (let ((?x98228 (- (- (- (- ?x98216 (* (* 2.0 l_0_16_231) l_0_16_242)) ?x98221) ?x98224) ?x98227)))
 (let ((?x98249 (+ (+ (+ (+ (+ (- (- ?x98228 ?x98230) ?x98233) ?x98236) ?x98239) ?x98242) ?x98245) ?x98248)))
 (let ((?x98259 (- (- (+ (+ ?x98249 ?x98251) ?x98254) (* (* 1.0 l_0_16_74) l_0_16_83)) (* (* 1.0 l_0_16_75) l_0_16_84))))
 (= ?x98259 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x97949 (* (* 2.0 l_0_16_316) l_0_16_323)))
 (let ((?x97946 (* (* 2.0 l_0_16_315) l_0_16_322)))
 (let ((?x97943 (* (* 2.0 l_0_16_314) l_0_16_321)))
 (let ((?x97940 (* (* 2.0 l_0_16_313) l_0_16_320)))
 (let ((?x97937 (* (* 2.0 l_0_16_312) l_0_16_319)))
 (let ((?x97934 (* (* 2.0 l_0_16_311) l_0_16_318)))
 (let ((?x97931 (* (* 2.0 l_0_16_310) l_0_16_317)))
 (let ((?x98379 (* 2.0 l_0_16_273)))
 (let ((?x98380 (* ?x98379 l_0_16_286)))
 (let ((?x98376 (* 2.0 l_0_16_272)))
 (let ((?x98377 (* ?x98376 l_0_16_285)))
 (let ((?x98373 (* 2.0 l_0_16_271)))
 (let ((?x98374 (* ?x98373 l_0_16_284)))
 (let ((?x98370 (* 2.0 l_0_16_270)))
 (let ((?x98371 (* ?x98370 l_0_16_283)))
 (let ((?x98367 (* 2.0 l_0_16_269)))
 (let ((?x98368 (* ?x98367 l_0_16_282)))
 (let ((?x98364 (* 2.0 l_0_16_268)))
 (let ((?x98365 (* ?x98364 l_0_16_281)))
 (let ((?x96595 (* (* 2.0 l_0_16_208) l_0_16_215)))
 (let ((?x96592 (* (* 2.0 l_0_16_207) l_0_16_214)))
 (let ((?x96589 (* (* 2.0 l_0_16_206) l_0_16_213)))
 (let ((?x96586 (* (* 2.0 l_0_16_205) l_0_16_212)))
 (let ((?x96583 (* (* 2.0 l_0_16_204) l_0_16_211)))
 (let ((?x96580 (* (* 2.0 l_0_16_203) l_0_16_210)))
 (let ((?x96577 (* (* 2.0 l_0_16_202) l_0_16_209)))
 (let ((?x96574 (* (* 2.0 l_0_16_172) l_0_16_179)))
 (let ((?x96571 (* (* 2.0 l_0_16_171) l_0_16_178)))
 (let ((?x96568 (* (* 2.0 l_0_16_170) l_0_16_177)))
 (let ((?x96565 (* (* 2.0 l_0_16_169) l_0_16_176)))
 (let ((?x96562 (* (* 2.0 l_0_16_168) l_0_16_175)))
 (let ((?x96559 (* (* 2.0 l_0_16_167) l_0_16_174)))
 (let ((?x96556 (* (* 2.0 l_0_16_166) l_0_16_173)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94922 (* ?x94704 l_0_16_161)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x98329 (* ?x94852 l_0_16_160)))
 (let ((?x98328 (+ (* (* 1.0 l_0_16_110) l_0_16_124) (* (* 1.0 l_0_16_111) l_0_16_125))))
 (let ((?x98336 (+ (+ (+ (+ (+ (- (- ?x98328 ?x98329) ?x94922) ?x96556) ?x96559) ?x96562) ?x96565) ?x96568)))
 (let ((?x98343 (- (- (- (- (- (+ (+ ?x98336 ?x96571) ?x96574) ?x96577) ?x96580) ?x96583) ?x96586) ?x96589)))
 (let ((?x98351 (- (- (- (- ?x98343 ?x96592) ?x96595) (* (* 2.0 l_0_16_232) l_0_16_238)) (* (* 2.0 l_0_16_233) l_0_16_239))))
 (let ((?x98357 (- (- ?x98351 (* (* 2.0 l_0_16_234) l_0_16_240)) (* (* 2.0 l_0_16_235) l_0_16_241))))
 (let ((?x98363 (- (- ?x98357 (* (* 2.0 l_0_16_236) l_0_16_242)) (* (* 2.0 l_0_16_237) l_0_16_243))))
 (let ((?x98382 (- (- (- (- (- (- (- ?x98363 ?x98365) ?x98368) ?x98371) ?x98374) ?x98377) ?x98380) ?x97931)))
 (let ((?x98390 (- (- (- (- (- (- (- ?x98382 ?x97934) ?x97937) ?x97940) ?x97943) ?x97946) ?x97949) (* (* 1.0 l_0_16_74) l_0_16_88))))
 (= (- ?x98390 (* (* 1.0 l_0_16_75) l_0_16_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x98254 (* (* 2.0 l_0_16_280) l_0_16_287)))
 (let ((?x98251 (* (* 2.0 l_0_16_279) l_0_16_286)))
 (let ((?x98248 (* (* 2.0 l_0_16_278) l_0_16_285)))
 (let ((?x98245 (* (* 2.0 l_0_16_277) l_0_16_284)))
 (let ((?x98242 (* (* 2.0 l_0_16_276) l_0_16_283)))
 (let ((?x98239 (* (* 2.0 l_0_16_275) l_0_16_282)))
 (let ((?x98236 (* (* 2.0 l_0_16_274) l_0_16_281)))
 (let ((?x98421 (* l_0_16_244 l_0_16_244)))
 (let ((?x98419 (* l_0_16_243 l_0_16_243)))
 (let ((?x98417 (* l_0_16_242 l_0_16_242)))
 (let ((?x98415 (* l_0_16_241 l_0_16_241)))
 (let ((?x98413 (* l_0_16_240 l_0_16_240)))
 (let ((?x98411 (* l_0_16_239 l_0_16_239)))
 (let ((?x98409 (* l_0_16_238 l_0_16_238)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x95038 (* ?x94704 l_0_16_167)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x95035 (* ?x94852 l_0_16_166)))
 (let ((?x98406 (+ (* (* 1.0 l_0_16_110) l_0_16_130) (* (* 1.0 l_0_16_111) l_0_16_131))))
 (let ((?x98418 (- (- (- (- (- (- (- ?x98406 ?x95035) ?x95038) ?x98409) ?x98411) ?x98413) ?x98415) ?x98417)))
 (let ((?x98427 (- (- (- (- (- (- (- ?x98418 ?x98419) ?x98421) ?x98236) ?x98239) ?x98242) ?x98245) ?x98248)))
 (let ((?x98433 (- (- (- (- ?x98427 ?x98251) ?x98254) (* (* 1.0 l_0_16_74) l_0_16_94)) (* (* 1.0 l_0_16_75) l_0_16_95))))
 (= ?x98433 0.0))))))))))))))))))))))))
(assert
 (let ((?x98499 (* l_0_16_288 l_0_16_288)))
 (let ((?x98497 (* l_0_16_287 l_0_16_287)))
 (let ((?x98495 (* l_0_16_286 l_0_16_286)))
 (let ((?x98493 (* l_0_16_285 l_0_16_285)))
 (let ((?x98491 (* l_0_16_284 l_0_16_284)))
 (let ((?x98489 (* l_0_16_283 l_0_16_283)))
 (let ((?x98487 (* l_0_16_282 l_0_16_282)))
 (let ((?x98485 (* l_0_16_281 l_0_16_281)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x73653 (* ?x94704 l_0_16_174)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x98461 (* ?x94852 l_0_16_173)))
 (let ((?x98456 (- (* (* (- 1.0) l_0_16_101) l_0_16_74) (* (* 1.0 l_0_16_102) l_0_16_75))))
 (let ((?x98460 (+ (+ ?x98456 (* (* 1.0 l_0_16_110) l_0_16_137)) (* (* 1.0 l_0_16_111) l_0_16_138))))
 (let ((?x98469 (- (- (- (- ?x98460 ?x98461) ?x73653) (* (* 2.0 l_0_16_238) l_0_16_245)) (* (* 2.0 l_0_16_239) l_0_16_246))))
 (let ((?x98475 (- (- ?x98469 (* (* 2.0 l_0_16_240) l_0_16_247)) (* (* 2.0 l_0_16_241) l_0_16_248))))
 (let ((?x98481 (- (- ?x98475 (* (* 2.0 l_0_16_242) l_0_16_249)) (* (* 2.0 l_0_16_243) l_0_16_250))))
 (let ((?x98490 (- (- (- (- ?x98481 (* (* 2.0 l_0_16_244) l_0_16_251)) ?x98485) ?x98487) ?x98489)))
 (= (- (- (- (- (- ?x98490 ?x98491) ?x98493) ?x98495) ?x98497) ?x98499) 0.0))))))))))))))))))))
(assert
 (let ((?x53154 (* l_0_16_154 l_0_16_154)))
 (let ((?x73955 (* l_0_16_153 l_0_16_153)))
 (let ((?x73973 (* l_0_16_152 l_0_16_152)))
 (let ((?x53150 (* l_0_16_151 l_0_16_151)))
 (let ((?x98549 (+ (* (/ 1.0 2.0) (* l_0_16_115 l_0_16_115)) (* (/ 1.0 2.0) (* l_0_16_116 l_0_16_116)))))
 (let ((?x98553 (+ (+ ?x98549 (* (/ 1.0 2.0) (* l_0_16_117 l_0_16_117))) (* (/ 1.0 2.0) (* l_0_16_118 l_0_16_118)))))
 (let ((?x98560 (- (- (- (- (- ?x98553 ?x53150) ?x73973) ?x73955) ?x53154) (* (* (/ 1.0 2.0) l_0_16_79) l_0_16_79))))
 (let ((?x98566 (- (- ?x98560 (* (* (/ 1.0 2.0) l_0_16_80) l_0_16_80)) (* (* (/ 1.0 2.0) l_0_16_81) l_0_16_81))))
 (= (- ?x98566 (* (* (/ 1.0 2.0) l_0_16_82) l_0_16_82)) 0.0))))))))))
(assert
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95442 (* ?x95441 l_0_16_158)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95439 (* ?x95438 l_0_16_157)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95436 (* ?x95435 l_0_16_156)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95433 (* ?x95432 l_0_16_155)))
 (let ((?x78304 (+ (* (* 1.0 l_0_16_115) l_0_16_119) (* (* 1.0 l_0_16_116) l_0_16_120))))
 (let ((?x55936 (+ (+ ?x78304 (* (* 1.0 l_0_16_117) l_0_16_121)) (* (* 1.0 l_0_16_118) l_0_16_122))))
 (let ((?x98577 (- (- (- (- (- ?x55936 ?x95433) ?x95436) ?x95439) ?x95442) (* (* 1.0 l_0_16_79) l_0_16_83))))
 (let ((?x98583 (- (- ?x98577 (* (* 1.0 l_0_16_80) l_0_16_84)) (* (* 1.0 l_0_16_81) l_0_16_85))))
 (= (- ?x98583 (* (* 1.0 l_0_16_82) l_0_16_86)) 0.0))))))))))))))
(assert
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95507 (* ?x95441 l_0_16_163)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95503 (* ?x95438 l_0_16_162)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95499 (* ?x95435 l_0_16_161)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95495 (* ?x95432 l_0_16_160)))
 (let ((?x98608 (+ (* (* 1.0 l_0_16_115) l_0_16_124) (* (* 1.0 l_0_16_116) l_0_16_125))))
 (let ((?x98612 (+ (+ ?x98608 (* (* 1.0 l_0_16_117) l_0_16_126)) (* (* 1.0 l_0_16_118) l_0_16_127))))
 (let ((?x98618 (- (- (- (- (- ?x98612 ?x95495) ?x95499) ?x95503) ?x95507) (* (* 1.0 l_0_16_79) l_0_16_88))))
 (let ((?x98622 (- (- ?x98618 (* (* 1.0 l_0_16_80) l_0_16_89)) (* (* 1.0 l_0_16_81) l_0_16_90))))
 (= (- ?x98622 (* (* 1.0 l_0_16_82) l_0_16_91)) 0.0))))))))))))))
(assert
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95579 (* ?x95441 l_0_16_169)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95577 (* ?x95438 l_0_16_168)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95575 (* ?x95435 l_0_16_167)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95573 (* ?x95432 l_0_16_166)))
 (let ((?x98643 (+ (* (* 1.0 l_0_16_115) l_0_16_130) (* (* 1.0 l_0_16_116) l_0_16_131))))
 (let ((?x98647 (+ (+ ?x98643 (* (* 1.0 l_0_16_117) l_0_16_132)) (* (* 1.0 l_0_16_118) l_0_16_133))))
 (let ((?x98653 (- (- (- (- (- ?x98647 ?x95573) ?x95575) ?x95577) ?x95579) (* (* 1.0 l_0_16_79) l_0_16_94))))
 (let ((?x98657 (- (- ?x98653 (* (* 1.0 l_0_16_80) l_0_16_95)) (* (* 1.0 l_0_16_81) l_0_16_96))))
 (= (- ?x98657 (* (* 1.0 l_0_16_82) l_0_16_97)) 0.0))))))))))))))
(assert
 (let ((?x95441 (* 2.0 l_0_16_154)))
 (let ((?x95699 (* ?x95441 l_0_16_176)))
 (let ((?x95438 (* 2.0 l_0_16_153)))
 (let ((?x95697 (* ?x95438 l_0_16_175)))
 (let ((?x95435 (* 2.0 l_0_16_152)))
 (let ((?x95695 (* ?x95435 l_0_16_174)))
 (let ((?x95432 (* 2.0 l_0_16_151)))
 (let ((?x95693 (* ?x95432 l_0_16_173)))
 (let ((?x98682 (- (* (* (- 1.0) l_0_16_101) l_0_16_79) (* (* 1.0 l_0_16_102) l_0_16_80))))
 (let ((?x98687 (- (- ?x98682 (* (* 1.0 l_0_16_103) l_0_16_81)) (* (* 1.0 l_0_16_104) l_0_16_82))))
 (let ((?x98691 (+ (+ ?x98687 (* (* 1.0 l_0_16_115) l_0_16_137)) (* (* 1.0 l_0_16_116) l_0_16_138))))
 (let ((?x98695 (+ (+ ?x98691 (* (* 1.0 l_0_16_117) l_0_16_139)) (* (* 1.0 l_0_16_118) l_0_16_140))))
 (= (- (- (- (- ?x98695 ?x95693) ?x95695) ?x95697) ?x95699) 0.0))))))))))))))
(assert
 (let ((?x95781 (* l_0_16_159 l_0_16_159)))
 (let ((?x95779 (* l_0_16_158 l_0_16_158)))
 (let ((?x95777 (* l_0_16_157 l_0_16_157)))
 (let ((?x95775 (* l_0_16_156 l_0_16_156)))
 (let ((?x95773 (* l_0_16_155 l_0_16_155)))
 (let ((?x98726 (+ (* (/ 1.0 2.0) (* l_0_16_119 l_0_16_119)) (* (/ 1.0 2.0) (* l_0_16_120 l_0_16_120)))))
 (let ((?x98732 (+ (+ ?x98726 (* (/ 1.0 2.0) (* l_0_16_121 l_0_16_121))) (* (/ 1.0 2.0) (* l_0_16_122 l_0_16_122)))))
 (let ((?x98738 (- (- (- (+ ?x98732 (* (/ 1.0 2.0) (* l_0_16_123 l_0_16_123))) ?x95773) ?x95775) ?x95777)))
 (let ((?x98746 (- (- (- (- ?x98738 ?x95779) ?x95781) (* (* (/ 1.0 2.0) l_0_16_83) l_0_16_83)) (* (* (/ 1.0 2.0) l_0_16_84) l_0_16_84))))
 (let ((?x98752 (- (- ?x98746 (* (* (/ 1.0 2.0) l_0_16_85) l_0_16_85)) (* (* (/ 1.0 2.0) l_0_16_86) l_0_16_86))))
 (= (- ?x98752 (* (* (/ 1.0 2.0) l_0_16_87) l_0_16_87)) 0.0))))))))))))
(assert
 (let ((?x95857 (* 2.0 l_0_16_159)))
 (let ((?x95858 (* ?x95857 l_0_16_164)))
 (let ((?x95854 (* 2.0 l_0_16_158)))
 (let ((?x95855 (* ?x95854 l_0_16_163)))
 (let ((?x95851 (* 2.0 l_0_16_157)))
 (let ((?x95852 (* ?x95851 l_0_16_162)))
 (let ((?x95848 (* 2.0 l_0_16_156)))
 (let ((?x95849 (* ?x95848 l_0_16_161)))
 (let ((?x95845 (* 2.0 l_0_16_155)))
 (let ((?x95846 (* ?x95845 l_0_16_160)))
 (let ((?x98779 (+ (* (* 1.0 l_0_16_119) l_0_16_124) (* (* 1.0 l_0_16_120) l_0_16_125))))
 (let ((?x98785 (+ (+ ?x98779 (* (* 1.0 l_0_16_121) l_0_16_126)) (* (* 1.0 l_0_16_122) l_0_16_127))))
 (let ((?x98791 (- (- (- (+ ?x98785 (* (* 1.0 l_0_16_123) l_0_16_128)) ?x95846) ?x95849) ?x95852)))
 (let ((?x98799 (- (- (- (- ?x98791 ?x95855) ?x95858) (* (* 1.0 l_0_16_83) l_0_16_88)) (* (* 1.0 l_0_16_84) l_0_16_89))))
 (let ((?x98805 (- (- ?x98799 (* (* 1.0 l_0_16_85) l_0_16_90)) (* (* 1.0 l_0_16_86) l_0_16_91))))
 (= (- ?x98805 (* (* 1.0 l_0_16_87) l_0_16_92)) 0.0)))))))))))))))))
(assert
 (let ((?x95857 (* 2.0 l_0_16_159)))
 (let ((?x95939 (* ?x95857 l_0_16_170)))
 (let ((?x95854 (* 2.0 l_0_16_158)))
 (let ((?x95937 (* ?x95854 l_0_16_169)))
 (let ((?x95851 (* 2.0 l_0_16_157)))
 (let ((?x95935 (* ?x95851 l_0_16_168)))
 (let ((?x95848 (* 2.0 l_0_16_156)))
 (let ((?x95933 (* ?x95848 l_0_16_167)))
 (let ((?x95845 (* 2.0 l_0_16_155)))
 (let ((?x95931 (* ?x95845 l_0_16_166)))
 (let ((?x98837 (+ (* (* 1.0 l_0_16_119) l_0_16_130) (* (* 1.0 l_0_16_120) l_0_16_131))))
 (let ((?x98841 (+ (+ ?x98837 (* (* 1.0 l_0_16_121) l_0_16_132)) (* (* 1.0 l_0_16_122) l_0_16_133))))
 (let ((?x98846 (- (- (- (+ ?x98841 (* (* 1.0 l_0_16_123) l_0_16_134)) ?x95931) ?x95933) ?x95935)))
 (let ((?x98852 (- (- (- (- ?x98846 ?x95937) ?x95939) (* (* 1.0 l_0_16_83) l_0_16_94)) (* (* 1.0 l_0_16_84) l_0_16_95))))
 (let ((?x98856 (- (- ?x98852 (* (* 1.0 l_0_16_85) l_0_16_96)) (* (* 1.0 l_0_16_86) l_0_16_97))))
 (= (- ?x98856 (* (* 1.0 l_0_16_87) l_0_16_98)) 0.0)))))))))))))))))
(assert
 (let ((?x95857 (* 2.0 l_0_16_159)))
 (let ((?x95991 (* ?x95857 l_0_16_177)))
 (let ((?x95854 (* 2.0 l_0_16_158)))
 (let ((?x95989 (* ?x95854 l_0_16_176)))
 (let ((?x95851 (* 2.0 l_0_16_157)))
 (let ((?x95987 (* ?x95851 l_0_16_175)))
 (let ((?x95848 (* 2.0 l_0_16_156)))
 (let ((?x95985 (* ?x95848 l_0_16_174)))
 (let ((?x95845 (* 2.0 l_0_16_155)))
 (let ((?x95983 (* ?x95845 l_0_16_173)))
 (let ((?x78434 (- (* (* (- 1.0) l_0_16_101) l_0_16_83) (* (* 1.0 l_0_16_102) l_0_16_84))))
 (let ((?x56131 (- (- ?x78434 (* (* 1.0 l_0_16_103) l_0_16_85)) (* (* 1.0 l_0_16_104) l_0_16_86))))
 (let ((?x98863 (+ (- ?x56131 (* (* 1.0 l_0_16_105) l_0_16_87)) (* (* 1.0 l_0_16_119) l_0_16_137))))
 (let ((?x98867 (+ (+ ?x98863 (* (* 1.0 l_0_16_120) l_0_16_138)) (* (* 1.0 l_0_16_121) l_0_16_139))))
 (let ((?x98871 (+ (+ ?x98867 (* (* 1.0 l_0_16_122) l_0_16_140)) (* (* 1.0 l_0_16_123) l_0_16_141))))
 (= (- (- (- (- (- ?x98871 ?x95983) ?x95985) ?x95987) ?x95989) ?x95991) 0.0)))))))))))))))))
(assert
 (let ((?x96070 (* l_0_16_165 l_0_16_165)))
 (let ((?x96055 (* l_0_16_164 l_0_16_164)))
 (let ((?x96052 (* l_0_16_163 l_0_16_163)))
 (let ((?x96048 (* l_0_16_162 l_0_16_162)))
 (let ((?x96044 (* l_0_16_161 l_0_16_161)))
 (let ((?x96040 (* l_0_16_160 l_0_16_160)))
 (let ((?x98910 (+ (* (/ 1.0 2.0) (* l_0_16_124 l_0_16_124)) (* (/ 1.0 2.0) (* l_0_16_125 l_0_16_125)))))
 (let ((?x98916 (+ (+ ?x98910 (* (/ 1.0 2.0) (* l_0_16_126 l_0_16_126))) (* (/ 1.0 2.0) (* l_0_16_127 l_0_16_127)))))
 (let ((?x98922 (+ (+ ?x98916 (* (/ 1.0 2.0) (* l_0_16_128 l_0_16_128))) (* (/ 1.0 2.0) (* l_0_16_129 l_0_16_129)))))
 (let ((?x98931 (- (- (- (- (- (- (- ?x98922 ?x96040) ?x96044) ?x96048) ?x96052) ?x96055) ?x96070) (* (* (/ 1.0 2.0) l_0_16_88) l_0_16_88))))
 (let ((?x98937 (- (- ?x98931 (* (* (/ 1.0 2.0) l_0_16_89) l_0_16_89)) (* (* (/ 1.0 2.0) l_0_16_90) l_0_16_90))))
 (let ((?x98943 (- (- ?x98937 (* (* (/ 1.0 2.0) l_0_16_91) l_0_16_91)) (* (* (/ 1.0 2.0) l_0_16_92) l_0_16_92))))
 (= (- ?x98943 (* (* (/ 1.0 2.0) l_0_16_93) l_0_16_93)) 0.0))))))))))))))
(assert
 (let ((?x96182 (* 2.0 l_0_16_165)))
 (let ((?x96183 (* ?x96182 l_0_16_171)))
 (let ((?x96179 (* 2.0 l_0_16_164)))
 (let ((?x96180 (* ?x96179 l_0_16_170)))
 (let ((?x96176 (* 2.0 l_0_16_163)))
 (let ((?x96177 (* ?x96176 l_0_16_169)))
 (let ((?x96173 (* 2.0 l_0_16_162)))
 (let ((?x96174 (* ?x96173 l_0_16_168)))
 (let ((?x96170 (* 2.0 l_0_16_161)))
 (let ((?x96171 (* ?x96170 l_0_16_167)))
 (let ((?x96167 (* 2.0 l_0_16_160)))
 (let ((?x96168 (* ?x96167 l_0_16_166)))
 (let ((?x98976 (+ (* (* 1.0 l_0_16_124) l_0_16_130) (* (* 1.0 l_0_16_125) l_0_16_131))))
 (let ((?x98982 (+ (+ ?x98976 (* (* 1.0 l_0_16_126) l_0_16_132)) (* (* 1.0 l_0_16_127) l_0_16_133))))
 (let ((?x98988 (+ (+ ?x98982 (* (* 1.0 l_0_16_128) l_0_16_134)) (* (* 1.0 l_0_16_129) l_0_16_135))))
 (let ((?x98997 (- (- (- (- (- (- (- ?x98988 ?x96168) ?x96171) ?x96174) ?x96177) ?x96180) ?x96183) (* (* 1.0 l_0_16_88) l_0_16_94))))
 (let ((?x99003 (- (- ?x98997 (* (* 1.0 l_0_16_89) l_0_16_95)) (* (* 1.0 l_0_16_90) l_0_16_96))))
 (let ((?x99009 (- (- ?x99003 (* (* 1.0 l_0_16_91) l_0_16_97)) (* (* 1.0 l_0_16_92) l_0_16_98))))
 (= (- ?x99009 (* (* 1.0 l_0_16_93) l_0_16_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x96182 (* 2.0 l_0_16_165)))
 (let ((?x96345 (* ?x96182 l_0_16_178)))
 (let ((?x96179 (* 2.0 l_0_16_164)))
 (let ((?x96343 (* ?x96179 l_0_16_177)))
 (let ((?x96176 (* 2.0 l_0_16_163)))
 (let ((?x96341 (* ?x96176 l_0_16_176)))
 (let ((?x96173 (* 2.0 l_0_16_162)))
 (let ((?x96339 (* ?x96173 l_0_16_175)))
 (let ((?x96170 (* 2.0 l_0_16_161)))
 (let ((?x96337 (* ?x96170 l_0_16_174)))
 (let ((?x96167 (* 2.0 l_0_16_160)))
 (let ((?x96335 (* ?x96167 l_0_16_173)))
 (let ((?x99049 (- (* (* (- 1.0) l_0_16_101) l_0_16_88) (* (* 1.0 l_0_16_102) l_0_16_89))))
 (let ((?x99053 (- (- ?x99049 (* (* 1.0 l_0_16_103) l_0_16_90)) (* (* 1.0 l_0_16_104) l_0_16_91))))
 (let ((?x99058 (- (- ?x99053 (* (* 1.0 l_0_16_105) l_0_16_92)) (* (* 1.0 l_0_16_106) l_0_16_93))))
 (let ((?x99062 (+ (+ ?x99058 (* (* 1.0 l_0_16_124) l_0_16_137)) (* (* 1.0 l_0_16_125) l_0_16_138))))
 (let ((?x99066 (+ (+ ?x99062 (* (* 1.0 l_0_16_126) l_0_16_139)) (* (* 1.0 l_0_16_127) l_0_16_140))))
 (let ((?x99070 (+ (+ ?x99066 (* (* 1.0 l_0_16_128) l_0_16_141)) (* (* 1.0 l_0_16_129) l_0_16_142))))
 (= (- (- (- (- (- (- ?x99070 ?x96335) ?x96337) ?x96339) ?x96341) ?x96343) ?x96345) 0.0))))))))))))))))))))
(assert
 (let ((?x96442 (* l_0_16_172 l_0_16_172)))
 (let ((?x96440 (* l_0_16_171 l_0_16_171)))
 (let ((?x96438 (* l_0_16_170 l_0_16_170)))
 (let ((?x96436 (* l_0_16_169 l_0_16_169)))
 (let ((?x96434 (* l_0_16_168 l_0_16_168)))
 (let ((?x96432 (* l_0_16_167 l_0_16_167)))
 (let ((?x96430 (* l_0_16_166 l_0_16_166)))
 (let ((?x78518 (+ (* (* (- (/ 1.0 2.0)) l_0_16_100) l_0_16_100) (* (/ 1.0 2.0) (* l_0_16_130 l_0_16_130)))))
 (let ((?x27469 (+ (+ ?x78518 (* (/ 1.0 2.0) (* l_0_16_131 l_0_16_131))) (* (/ 1.0 2.0) (* l_0_16_132 l_0_16_132)))))
 (let ((?x99098 (+ (+ ?x27469 (* (/ 1.0 2.0) (* l_0_16_133 l_0_16_133))) (* (/ 1.0 2.0) (* l_0_16_134 l_0_16_134)))))
 (let ((?x99104 (+ (+ ?x99098 (* (/ 1.0 2.0) (* l_0_16_135 l_0_16_135))) (* (/ 1.0 2.0) (* l_0_16_136 l_0_16_136)))))
 (let ((?x99111 (- (- (- (- (- (- (- ?x99104 ?x96430) ?x96432) ?x96434) ?x96436) ?x96438) ?x96440) ?x96442)))
 (let ((?x99117 (- (- ?x99111 (* (* (/ 1.0 2.0) l_0_16_94) l_0_16_94)) (* (* (/ 1.0 2.0) l_0_16_95) l_0_16_95))))
 (let ((?x99123 (- (- ?x99117 (* (* (/ 1.0 2.0) l_0_16_96) l_0_16_96)) (* (* (/ 1.0 2.0) l_0_16_97) l_0_16_97))))
 (let ((?x99129 (- (- ?x99123 (* (* (/ 1.0 2.0) l_0_16_98) l_0_16_98)) (* (* (/ 1.0 2.0) l_0_16_99) l_0_16_99))))
 (= ?x99129 0.0)))))))))))))))))
(assert
 (let ((?x96574 (* (* 2.0 l_0_16_172) l_0_16_179)))
 (let ((?x96571 (* (* 2.0 l_0_16_171) l_0_16_178)))
 (let ((?x96568 (* (* 2.0 l_0_16_170) l_0_16_177)))
 (let ((?x96565 (* (* 2.0 l_0_16_169) l_0_16_176)))
 (let ((?x96562 (* (* 2.0 l_0_16_168) l_0_16_175)))
 (let ((?x96559 (* (* 2.0 l_0_16_167) l_0_16_174)))
 (let ((?x96556 (* (* 2.0 l_0_16_166) l_0_16_173)))
 (let ((?x99159 (- (* (* (- 1.0) l_0_16_100) l_0_16_107) (* (* 1.0 l_0_16_101) l_0_16_94))))
 (let ((?x99163 (- (- ?x99159 (* (* 1.0 l_0_16_102) l_0_16_95)) (* (* 1.0 l_0_16_103) l_0_16_96))))
 (let ((?x99167 (- (- ?x99163 (* (* 1.0 l_0_16_104) l_0_16_97)) (* (* 1.0 l_0_16_105) l_0_16_98))))
 (let ((?x99172 (+ (- ?x99167 (* (* 1.0 l_0_16_106) l_0_16_99)) (* (* 1.0 l_0_16_130) l_0_16_137))))
 (let ((?x99178 (+ (+ ?x99172 (* (* 1.0 l_0_16_131) l_0_16_138)) (* (* 1.0 l_0_16_132) l_0_16_139))))
 (let ((?x99184 (+ (+ ?x99178 (* (* 1.0 l_0_16_133) l_0_16_140)) (* (* 1.0 l_0_16_134) l_0_16_141))))
 (let ((?x99190 (+ (+ ?x99184 (* (* 1.0 l_0_16_135) l_0_16_142)) (* (* 1.0 l_0_16_136) l_0_16_143))))
 (let ((?x99197 (- (- (- (- (- (- (- ?x99190 ?x96556) ?x96559) ?x96562) ?x96565) ?x96568) ?x96571) ?x96574)))
 (= ?x99197 0.0)))))))))))))))))
(assert
 (let ((?x96739 (* l_0_16_180 l_0_16_180)))
 (let ((?x96737 (* l_0_16_179 l_0_16_179)))
 (let ((?x96735 (* l_0_16_178 l_0_16_178)))
 (let ((?x96733 (* l_0_16_177 l_0_16_177)))
 (let ((?x96712 (* l_0_16_176 l_0_16_176)))
 (let ((?x96708 (* l_0_16_175 l_0_16_175)))
 (let ((?x96704 (* l_0_16_174 l_0_16_174)))
 (let ((?x23215 (* l_0_16_173 l_0_16_173)))
 (let ((?x99228 (- (* (* (- (/ 1.0 2.0)) l_0_16_101) l_0_16_101) (* (* (/ 1.0 2.0) l_0_16_102) l_0_16_102))))
 (let ((?x99234 (- (- ?x99228 (* (* (/ 1.0 2.0) l_0_16_103) l_0_16_103)) (* (* (/ 1.0 2.0) l_0_16_104) l_0_16_104))))
 (let ((?x99240 (- (- ?x99234 (* (* (/ 1.0 2.0) l_0_16_105) l_0_16_105)) (* (* (/ 1.0 2.0) l_0_16_106) l_0_16_106))))
 (let ((?x99246 (- (- ?x99240 (* (* (/ 1.0 2.0) l_0_16_107) l_0_16_107)) (* (* (/ 1.0 2.0) l_0_16_108) l_0_16_108))))
 (let ((?x99252 (+ (+ ?x99246 (* (/ 1.0 2.0) (* l_0_16_137 l_0_16_137))) (* (/ 1.0 2.0) (* l_0_16_138 l_0_16_138)))))
 (let ((?x99258 (+ (+ ?x99252 (* (/ 1.0 2.0) (* l_0_16_139 l_0_16_139))) (* (/ 1.0 2.0) (* l_0_16_140 l_0_16_140)))))
 (let ((?x99264 (+ (+ ?x99258 (* (/ 1.0 2.0) (* l_0_16_141 l_0_16_141))) (* (/ 1.0 2.0) (* l_0_16_142 l_0_16_142)))))
 (let ((?x99270 (+ (+ ?x99264 (* (/ 1.0 2.0) (* l_0_16_143 l_0_16_143))) (* (/ 1.0 2.0) (* l_0_16_144 l_0_16_144)))))
 (let ((?x99277 (- (- (- (- (- (- (- ?x99270 ?x23215) ?x96704) ?x96708) ?x96712) ?x96733) ?x96735) ?x96737)))
 (= (- ?x99277 ?x96739) 0.0)))))))))))))))))))
(assert
 (let ((?x55418 (* l_0_16_73 l_0_16_73)))
 (let ((?x78698 (+ (+ (* (- l_0_16_109) l_0_16_109) (* l_0_16_289 l_0_16_289)) ?x55418)))
 (= ?x78698 0.0))))
(assert
 (let ((?x27653 (* l_0_16_325 l_0_16_325)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96849 (* ?x96822 l_0_16_290)))
 (let ((?x78731 (+ (- (+ (* (* (- 2.0) l_0_16_109) l_0_16_110) ?x96849) ?x27653) (* (* 2.0 l_0_16_73) l_0_16_74))))
 (= ?x78731 0.0))))))
(assert
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96878 (* ?x96822 l_0_16_292)))
 (let ((?x99306 (+ (+ (* (* (- 2.0) l_0_16_109) l_0_16_112) ?x96878) (* (* 2.0 l_0_16_73) l_0_16_76))))
 (= ?x99306 0.0)))))
(assert
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96968 (* ?x96822 l_0_16_299)))
 (let ((?x99313 (* l_0_16_253 l_0_16_253)))
 (let ((?x99317 (+ (+ (+ (* (* (- 2.0) l_0_16_109) l_0_16_119) ?x99313) ?x96968) (* (* 2.0 l_0_16_73) l_0_16_83))))
 (= ?x99317 0.0))))))
(assert
 (let ((?x96825 (* l_0_16_289 l_0_16_289)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x97030 (* ?x96822 l_0_16_304)))
 (let ((?x94464 (* l_0_16_181 l_0_16_181)))
 (let ((?x94462 (* l_0_16_145 l_0_16_145)))
 (let ((?x99327 (- (+ (- (+ (* (* (- 2.0) l_0_16_109) l_0_16_124) ?x94462) ?x94464) ?x97030) ?x96825)))
 (= (+ ?x99327 (* (* 2.0 l_0_16_73) l_0_16_88)) 0.0))))))))
(assert
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x97091 (* ?x96822 l_0_16_310)))
 (let ((?x99313 (* l_0_16_253 l_0_16_253)))
 (let ((?x99342 (+ (+ (- (* (* (- 2.0) l_0_16_109) l_0_16_130) ?x99313) ?x97091) (* (* 2.0 l_0_16_73) l_0_16_94))))
 (= ?x99342 0.0))))))
(assert
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x97173 (* ?x96822 l_0_16_317)))
 (let ((?x99353 (* l_0_16_217 l_0_16_217)))
 (let ((?x99352 (- (* (* 2.0 l_0_16_101) l_0_16_73) (* (* 2.0 l_0_16_109) l_0_16_137))))
 (= (+ (- ?x99352 ?x99353) ?x97173) 0.0))))))
(assert
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x23429 (* ?x96854 l_0_16_293)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x23417 (* ?x96851 l_0_16_292)))
 (let ((?x99366 (- (* (* (- 2.0) l_0_16_110) l_0_16_112) (* (* 2.0 l_0_16_111) l_0_16_113))))
 (let ((?x99372 (+ (- (+ (+ ?x99366 ?x23417) ?x23429) (* (* 2.0 l_0_16_325) l_0_16_328)) (* (* 2.0 l_0_16_74) l_0_16_76))))
 (= (+ ?x99372 (* (* 2.0 l_0_16_75) l_0_16_77)) 0.0))))))))
(assert
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x97250 (* ?x96854 l_0_16_300)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x97248 (* ?x96851 l_0_16_299)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x99390 (* ?x96965 l_0_16_254)))
 (let ((?x99389 (- (* (* (- 2.0) l_0_16_110) l_0_16_119) (* (* 2.0 l_0_16_111) l_0_16_120))))
 (let ((?x99395 (- (+ (+ (+ ?x99389 ?x99390) ?x97248) ?x97250) (* (* 2.0 l_0_16_325) l_0_16_335))))
 (let ((?x99399 (+ (+ ?x99395 (* (* 2.0 l_0_16_74) l_0_16_83)) (* (* 2.0 l_0_16_75) l_0_16_84))))
 (= ?x99399 0.0)))))))))))
(assert
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x97292 (* ?x96854 l_0_16_305)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x97289 (* ?x96851 l_0_16_304)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96849 (* ?x96822 l_0_16_290)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94503 (* ?x94502 l_0_16_182)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94500 (* ?x94499 l_0_16_146)))
 (let ((?x99414 (- (* (* (- 2.0) l_0_16_110) l_0_16_124) (* (* 2.0 l_0_16_111) l_0_16_125))))
 (let ((?x99421 (- (+ (+ (- (- (+ ?x99414 ?x94500) ?x94503) ?x96849) ?x97289) ?x97292) (* (* 2.0 l_0_16_325) l_0_16_340))))
 (let ((?x99425 (+ (+ ?x99421 (* (* 2.0 l_0_16_74) l_0_16_88)) (* (* 2.0 l_0_16_75) l_0_16_89))))
 (= ?x99425 0.0)))))))))))))))
(assert
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x75590 (* ?x96854 l_0_16_311)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x75592 (* ?x96851 l_0_16_310)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x99390 (* ?x96965 l_0_16_254)))
 (let ((?x99449 (- (* (* (- 2.0) l_0_16_110) l_0_16_130) (* (* 2.0 l_0_16_111) l_0_16_131))))
 (let ((?x99454 (- (+ (+ (- ?x99449 ?x99390) ?x75592) ?x75590) (* (* 2.0 l_0_16_325) l_0_16_346))))
 (let ((?x99458 (+ (+ ?x99454 (* (* 2.0 l_0_16_74) l_0_16_94)) (* (* 2.0 l_0_16_75) l_0_16_95))))
 (= ?x99458 0.0)))))))))))
(assert
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x97352 (* ?x96854 l_0_16_318)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x97350 (* ?x96851 l_0_16_317)))
 (let ((?x99473 (+ (* (* 2.0 l_0_16_101) l_0_16_74) (* (* 2.0 l_0_16_102) l_0_16_75))))
 (let ((?x99477 (- (- ?x99473 (* (* 2.0 l_0_16_110) l_0_16_137)) (* (* 2.0 l_0_16_111) l_0_16_138))))
 (let ((?x99483 (- (+ (+ (- ?x99477 (* (* 2.0 l_0_16_217) l_0_16_218)) ?x97350) ?x97352) (* (* 2.0 l_0_16_325) l_0_16_353))))
 (= ?x99483 0.0)))))))))
(assert
 (let ((?x95372 (* l_0_16_78 l_0_16_78)))
 (let ((?x95368 (* l_0_16_77 l_0_16_77)))
 (let ((?x73903 (* l_0_16_76 l_0_16_76)))
 (let ((?x97396 (* l_0_16_294 l_0_16_294)))
 (let ((?x97394 (* l_0_16_293 l_0_16_293)))
 (let ((?x97393 (* l_0_16_292 l_0_16_292)))
 (let ((?x95293 (* l_0_16_114 l_0_16_114)))
 (let ((?x99501 (- (- (* (- l_0_16_112) l_0_16_112) (* l_0_16_113 l_0_16_113)) ?x95293)))
 (= (+ (+ (+ (+ (+ (+ ?x99501 ?x97393) ?x97394) ?x97396) ?x73903) ?x95368) ?x95372) 0.0))))))))))
(assert
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x97420 (* ?x94514 l_0_16_301)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x97418 (* ?x94511 l_0_16_300)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x97416 (* ?x94508 l_0_16_299)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x99520 (* ?x96965 l_0_16_256)))
 (let ((?x99517 (- (* (* (- 2.0) l_0_16_112) l_0_16_119) (* (* 2.0 l_0_16_113) l_0_16_120))))
 (let ((?x99523 (+ (+ (+ (- ?x99517 (* (* 2.0 l_0_16_114) l_0_16_121)) ?x99520) ?x97416) ?x97418)))
 (let ((?x99528 (+ (+ (+ ?x99523 ?x97420) (* (* 2.0 l_0_16_76) l_0_16_83)) (* (* 2.0 l_0_16_77) l_0_16_84))))
 (= (+ ?x99528 (* (* 2.0 l_0_16_78) l_0_16_85)) 0.0)))))))))))))
(assert
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x97448 (* ?x94514 l_0_16_306)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x97445 (* ?x94511 l_0_16_305)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x97442 (* ?x94508 l_0_16_304)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96878 (* ?x96822 l_0_16_292)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94562 (* ?x94502 l_0_16_184)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94558 (* ?x94499 l_0_16_148)))
 (let ((?x99549 (- (* (* (- 2.0) l_0_16_112) l_0_16_124) (* (* 2.0 l_0_16_113) l_0_16_125))))
 (let ((?x99554 (- (- (+ (- ?x99549 (* (* 2.0 l_0_16_114) l_0_16_126)) ?x94558) ?x94562) ?x96878)))
 (let ((?x99559 (+ (+ (+ (+ ?x99554 ?x97442) ?x97445) ?x97448) (* (* 2.0 l_0_16_76) l_0_16_88))))
 (let ((?x99563 (+ (+ ?x99559 (* (* 2.0 l_0_16_77) l_0_16_89)) (* (* 2.0 l_0_16_78) l_0_16_90))))
 (= ?x99563 0.0))))))))))))))))))
(assert
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x97476 (* ?x94514 l_0_16_312)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x97474 (* ?x94511 l_0_16_311)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x97472 (* ?x94508 l_0_16_310)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x99520 (* ?x96965 l_0_16_256)))
 (let ((?x78843 (- (* (* (- 2.0) l_0_16_112) l_0_16_130) (* (* 2.0 l_0_16_113) l_0_16_131))))
 (let ((?x99586 (+ (+ (- (- ?x78843 (* (* 2.0 l_0_16_114) l_0_16_132)) ?x99520) ?x97472) ?x97474)))
 (let ((?x99591 (+ (+ (+ ?x99586 ?x97476) (* (* 2.0 l_0_16_76) l_0_16_94)) (* (* 2.0 l_0_16_77) l_0_16_95))))
 (= (+ ?x99591 (* (* 2.0 l_0_16_78) l_0_16_96)) 0.0)))))))))))))
(assert
 (let ((?x27339 (* l_0_16_87 l_0_16_87)))
 (let ((?x56082 (* l_0_16_86 l_0_16_86)))
 (let ((?x56079 (* l_0_16_85 l_0_16_85)))
 (let ((?x56076 (* l_0_16_84 l_0_16_84)))
 (let ((?x20775 (* l_0_16_83 l_0_16_83)))
 (let ((?x97594 (* l_0_16_303 l_0_16_303)))
 (let ((?x97592 (* l_0_16_302 l_0_16_302)))
 (let ((?x97590 (* l_0_16_301 l_0_16_301)))
 (let ((?x97588 (* l_0_16_300 l_0_16_300)))
 (let ((?x97586 (* l_0_16_299 l_0_16_299)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x99613 (* ?x96965 l_0_16_263)))
 (let ((?x98733 (* l_0_16_123 l_0_16_123)))
 (let ((?x98730 (* l_0_16_122 l_0_16_122)))
 (let ((?x98727 (* l_0_16_121 l_0_16_121)))
 (let ((?x99610 (- (- (* (- l_0_16_119) l_0_16_119) (* l_0_16_120 l_0_16_120)) ?x98727)))
 (let ((?x99618 (+ (+ (+ (+ (+ (- (- ?x99610 ?x98730) ?x98733) ?x99613) ?x97586) ?x97588) ?x97590) ?x97592)))
 (= (+ (+ (+ (+ (+ (+ ?x99618 ?x97594) ?x20775) ?x56076) ?x56079) ?x56082) ?x27339) 0.0)))))))))))))))))))
(assert
 (let ((?x97632 (* 2.0 l_0_16_303)))
 (let ((?x97633 (* ?x97632 l_0_16_308)))
 (let ((?x97629 (* 2.0 l_0_16_302)))
 (let ((?x97630 (* ?x97629 l_0_16_307)))
 (let ((?x97626 (* 2.0 l_0_16_301)))
 (let ((?x97627 (* ?x97626 l_0_16_306)))
 (let ((?x97623 (* 2.0 l_0_16_300)))
 (let ((?x97624 (* ?x97623 l_0_16_305)))
 (let ((?x97620 (* 2.0 l_0_16_299)))
 (let ((?x97621 (* ?x97620 l_0_16_304)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x96968 (* ?x96822 l_0_16_299)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x99648 (* ?x96965 l_0_16_268)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94613 (* ?x94502 l_0_16_191)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94606 (* ?x94499 l_0_16_155)))
 (let ((?x99636 (- (* (* (- 2.0) l_0_16_119) l_0_16_124) (* (* 2.0 l_0_16_120) l_0_16_125))))
 (let ((?x99642 (- (- ?x99636 (* (* 2.0 l_0_16_121) l_0_16_126)) (* (* 2.0 l_0_16_122) l_0_16_127))))
 (let ((?x99649 (+ (- (+ (- ?x99642 (* (* 2.0 l_0_16_123) l_0_16_128)) ?x94606) ?x94613) ?x99648)))
 (let ((?x99658 (+ (+ (+ (+ (+ (+ (- ?x99649 ?x96968) ?x97621) ?x97624) ?x97627) ?x97630) ?x97633) (* (* 2.0 l_0_16_83) l_0_16_88))))
 (let ((?x99664 (+ (+ ?x99658 (* (* 2.0 l_0_16_84) l_0_16_89)) (* (* 2.0 l_0_16_85) l_0_16_90))))
 (let ((?x99670 (+ (+ ?x99664 (* (* 2.0 l_0_16_86) l_0_16_91)) (* (* 2.0 l_0_16_87) l_0_16_92))))
 (= ?x99670 0.0))))))))))))))))))))))))))
(assert
 (let ((?x97632 (* 2.0 l_0_16_303)))
 (let ((?x97676 (* ?x97632 l_0_16_314)))
 (let ((?x97629 (* 2.0 l_0_16_302)))
 (let ((?x97674 (* ?x97629 l_0_16_313)))
 (let ((?x97626 (* 2.0 l_0_16_301)))
 (let ((?x97672 (* ?x97626 l_0_16_312)))
 (let ((?x97623 (* 2.0 l_0_16_300)))
 (let ((?x97670 (* ?x97623 l_0_16_311)))
 (let ((?x97620 (* 2.0 l_0_16_299)))
 (let ((?x97668 (* ?x97620 l_0_16_310)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x99709 (* ?x96965 l_0_16_274)))
 (let ((?x99613 (* ?x96965 l_0_16_263)))
 (let ((?x99701 (- (* (* (- 2.0) l_0_16_119) l_0_16_130) (* (* 2.0 l_0_16_120) l_0_16_131))))
 (let ((?x99705 (- (- ?x99701 (* (* 2.0 l_0_16_121) l_0_16_132)) (* (* 2.0 l_0_16_122) l_0_16_133))))
 (let ((?x99711 (+ (+ (- (- ?x99705 (* (* 2.0 l_0_16_123) l_0_16_134)) ?x99613) ?x99709) ?x97668)))
 (let ((?x99717 (+ (+ (+ (+ (+ ?x99711 ?x97670) ?x97672) ?x97674) ?x97676) (* (* 2.0 l_0_16_83) l_0_16_94))))
 (let ((?x99721 (+ (+ ?x99717 (* (* 2.0 l_0_16_84) l_0_16_95)) (* (* 2.0 l_0_16_85) l_0_16_96))))
 (let ((?x99725 (+ (+ ?x99721 (* (* 2.0 l_0_16_86) l_0_16_97)) (* (* 2.0 l_0_16_87) l_0_16_98))))
 (= ?x99725 0.0)))))))))))))))))))))
(assert
 (let ((?x97632 (* 2.0 l_0_16_303)))
 (let ((?x97731 (* ?x97632 l_0_16_321)))
 (let ((?x97629 (* 2.0 l_0_16_302)))
 (let ((?x97729 (* ?x97629 l_0_16_320)))
 (let ((?x97626 (* 2.0 l_0_16_301)))
 (let ((?x97727 (* ?x97626 l_0_16_319)))
 (let ((?x97623 (* 2.0 l_0_16_300)))
 (let ((?x97725 (* ?x97623 l_0_16_318)))
 (let ((?x97620 (* 2.0 l_0_16_299)))
 (let ((?x97723 (* ?x97620 l_0_16_317)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x98082 (* ?x96965 l_0_16_281)))
 (let ((?x56556 (+ (* (* 2.0 l_0_16_101) l_0_16_83) (* (* 2.0 l_0_16_102) l_0_16_84))))
 (let ((?x56567 (+ (+ ?x56556 (* (* 2.0 l_0_16_103) l_0_16_85)) (* (* 2.0 l_0_16_104) l_0_16_86))))
 (let ((?x99740 (- (+ ?x56567 (* (* 2.0 l_0_16_105) l_0_16_87)) (* (* 2.0 l_0_16_119) l_0_16_137))))
 (let ((?x99744 (- (- ?x99740 (* (* 2.0 l_0_16_120) l_0_16_138)) (* (* 2.0 l_0_16_121) l_0_16_139))))
 (let ((?x99748 (- (- ?x99744 (* (* 2.0 l_0_16_122) l_0_16_140)) (* (* 2.0 l_0_16_123) l_0_16_141))))
 (let ((?x99753 (+ (+ (+ (- ?x99748 (* (* 2.0 l_0_16_217) l_0_16_227)) ?x98082) ?x97723) ?x97725)))
 (= (+ (+ (+ ?x99753 ?x97727) ?x97729) ?x97731) 0.0))))))))))))))))))))
(assert
 (let ((?x78555 (* l_0_16_93 l_0_16_93)))
 (let ((?x56215 (* l_0_16_92 l_0_16_92)))
 (let ((?x78547 (* l_0_16_91 l_0_16_91)))
 (let ((?x56211 (* l_0_16_90 l_0_16_90)))
 (let ((?x78539 (* l_0_16_89 l_0_16_89)))
 (let ((?x78536 (* l_0_16_88 l_0_16_88)))
 (let ((?x97806 (* l_0_16_309 l_0_16_309)))
 (let ((?x97804 (* l_0_16_308 l_0_16_308)))
 (let ((?x97802 (* l_0_16_307 l_0_16_307)))
 (let ((?x97800 (* l_0_16_306 l_0_16_306)))
 (let ((?x97798 (* l_0_16_305 l_0_16_305)))
 (let ((?x97796 (* l_0_16_304 l_0_16_304)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x97030 (* ?x96822 l_0_16_304)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94636 (* ?x94502 l_0_16_196)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94629 (* ?x94499 l_0_16_160)))
 (let ((?x98920 (* l_0_16_129 l_0_16_129)))
 (let ((?x98917 (* l_0_16_128 l_0_16_128)))
 (let ((?x98914 (* l_0_16_127 l_0_16_127)))
 (let ((?x98911 (* l_0_16_126 l_0_16_126)))
 (let ((?x77828 (- (- (* (- l_0_16_124) l_0_16_124) (* l_0_16_125 l_0_16_125)) ?x98911)))
 (let ((?x26570 (+ (- (- (+ (- (- (- ?x77828 ?x98914) ?x98917) ?x98920) ?x94629) ?x94636) ?x97030) ?x97796)))
 (let ((?x99789 (+ (+ (+ (+ (+ (+ (+ ?x26570 ?x97798) ?x97800) ?x97802) ?x97804) ?x97806) ?x78536) ?x78539)))
 (= (+ (+ (+ (+ ?x99789 ?x56211) ?x78547) ?x56215) ?x78555) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x97821 (* 2.0 l_0_16_309)))
 (let ((?x97822 (* ?x97821 l_0_16_315)))
 (let ((?x97818 (* 2.0 l_0_16_308)))
 (let ((?x97819 (* ?x97818 l_0_16_314)))
 (let ((?x97815 (* 2.0 l_0_16_307)))
 (let ((?x97816 (* ?x97815 l_0_16_313)))
 (let ((?x77000 (* 2.0 l_0_16_306)))
 (let ((?x76981 (* ?x77000 l_0_16_312)))
 (let ((?x77008 (* 2.0 l_0_16_305)))
 (let ((?x76996 (* ?x77008 l_0_16_311)))
 (let ((?x77027 (* 2.0 l_0_16_304)))
 (let ((?x77004 (* ?x77027 l_0_16_310)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x97091 (* ?x96822 l_0_16_310)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x99648 (* ?x96965 l_0_16_268)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94658 (* ?x94502 l_0_16_202)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94656 (* ?x94499 l_0_16_166)))
 (let ((?x99824 (- (* (* (- 2.0) l_0_16_124) l_0_16_130) (* (* 2.0 l_0_16_125) l_0_16_131))))
 (let ((?x99830 (- (- ?x99824 (* (* 2.0 l_0_16_126) l_0_16_132)) (* (* 2.0 l_0_16_127) l_0_16_133))))
 (let ((?x99836 (- (- ?x99830 (* (* 2.0 l_0_16_128) l_0_16_134)) (* (* 2.0 l_0_16_129) l_0_16_135))))
 (let ((?x99843 (+ (+ (+ (- (- (- (+ ?x99836 ?x94656) ?x94658) ?x99648) ?x97091) ?x77004) ?x76996) ?x76981)))
 (let ((?x99849 (+ (+ (+ (+ ?x99843 ?x97816) ?x97819) ?x97822) (* (* 2.0 l_0_16_88) l_0_16_94))))
 (let ((?x99855 (+ (+ ?x99849 (* (* 2.0 l_0_16_89) l_0_16_95)) (* (* 2.0 l_0_16_90) l_0_16_96))))
 (let ((?x99861 (+ (+ ?x99855 (* (* 2.0 l_0_16_91) l_0_16_97)) (* (* 2.0 l_0_16_92) l_0_16_98))))
 (= (+ ?x99861 (* (* 2.0 l_0_16_93) l_0_16_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x97821 (* 2.0 l_0_16_309)))
 (let ((?x97875 (* ?x97821 l_0_16_322)))
 (let ((?x97818 (* 2.0 l_0_16_308)))
 (let ((?x97873 (* ?x97818 l_0_16_321)))
 (let ((?x97815 (* 2.0 l_0_16_307)))
 (let ((?x97871 (* ?x97815 l_0_16_320)))
 (let ((?x77000 (* 2.0 l_0_16_306)))
 (let ((?x97869 (* ?x77000 l_0_16_319)))
 (let ((?x77008 (* 2.0 l_0_16_305)))
 (let ((?x97867 (* ?x77008 l_0_16_318)))
 (let ((?x77027 (* 2.0 l_0_16_304)))
 (let ((?x97865 (* ?x77027 l_0_16_317)))
 (let ((?x96822 (* 2.0 l_0_16_289)))
 (let ((?x97173 (* ?x96822 l_0_16_317)))
 (let ((?x94502 (* 2.0 l_0_16_181)))
 (let ((?x94687 (* ?x94502 l_0_16_209)))
 (let ((?x94499 (* 2.0 l_0_16_145)))
 (let ((?x94685 (* ?x94499 l_0_16_173)))
 (let ((?x99891 (+ (* (* 2.0 l_0_16_101) l_0_16_88) (* (* 2.0 l_0_16_102) l_0_16_89))))
 (let ((?x99895 (+ (+ ?x99891 (* (* 2.0 l_0_16_103) l_0_16_90)) (* (* 2.0 l_0_16_104) l_0_16_91))))
 (let ((?x99908 (+ (+ ?x99895 (* (* 2.0 l_0_16_105) l_0_16_92)) (* (* 2.0 l_0_16_106) l_0_16_93))))
 (let ((?x99913 (- (- ?x99908 (* (* 2.0 l_0_16_124) l_0_16_137)) (* (* 2.0 l_0_16_125) l_0_16_138))))
 (let ((?x99917 (- (- ?x99913 (* (* 2.0 l_0_16_126) l_0_16_139)) (* (* 2.0 l_0_16_127) l_0_16_140))))
 (let ((?x99921 (- (- ?x99917 (* (* 2.0 l_0_16_128) l_0_16_141)) (* (* 2.0 l_0_16_129) l_0_16_142))))
 (let ((?x99926 (- (- (- (+ ?x99921 ?x94685) ?x94687) (* (* 2.0 l_0_16_217) l_0_16_232)) ?x97173)))
 (= (+ (+ (+ (+ (+ (+ ?x99926 ?x97865) ?x97867) ?x97869) ?x97871) ?x97873) ?x97875) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x27592 (* l_0_16_99 l_0_16_99)))
 (let ((?x27586 (* l_0_16_98 l_0_16_98)))
 (let ((?x56296 (* l_0_16_97 l_0_16_97)))
 (let ((?x78681 (* l_0_16_96 l_0_16_96)))
 (let ((?x56292 (* l_0_16_95 l_0_16_95)))
 (let ((?x78678 (* l_0_16_94 l_0_16_94)))
 (let ((?x97909 (* l_0_16_316 l_0_16_316)))
 (let ((?x97907 (* l_0_16_315 l_0_16_315)))
 (let ((?x97905 (* l_0_16_314 l_0_16_314)))
 (let ((?x97903 (* l_0_16_313 l_0_16_313)))
 (let ((?x97901 (* l_0_16_312 l_0_16_312)))
 (let ((?x97899 (* l_0_16_311 l_0_16_311)))
 (let ((?x97897 (* l_0_16_310 l_0_16_310)))
 (let ((?x96965 (* 2.0 l_0_16_253)))
 (let ((?x99709 (* ?x96965 l_0_16_274)))
 (let ((?x99102 (* l_0_16_136 l_0_16_136)))
 (let ((?x99099 (* l_0_16_135 l_0_16_135)))
 (let ((?x99096 (* l_0_16_134 l_0_16_134)))
 (let ((?x56222 (* l_0_16_133 l_0_16_133)))
 (let ((?x78567 (* l_0_16_132 l_0_16_132)))
 (let ((?x78524 (* l_0_16_131 l_0_16_131)))
 (let ((?x78873 (- (- (* l_0_16_100 l_0_16_100) (* l_0_16_130 l_0_16_130)) ?x78524)))
 (let ((?x99954 (+ (- (- (- (- (- (- ?x78873 ?x78567) ?x56222) ?x99096) ?x99099) ?x99102) ?x99709) ?x97897)))
 (let ((?x99961 (+ (+ (+ (+ (+ (+ (+ ?x99954 ?x97899) ?x97901) ?x97903) ?x97905) ?x97907) ?x97909) ?x78678)))
 (= (+ (+ (+ (+ (+ ?x99961 ?x56292) ?x78681) ?x56296) ?x27586) ?x27592) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x98006 (* l_0_16_324 l_0_16_324)))
 (let ((?x98004 (* l_0_16_323 l_0_16_323)))
 (let ((?x98002 (* l_0_16_322 l_0_16_322)))
 (let ((?x98000 (* l_0_16_321 l_0_16_321)))
 (let ((?x97998 (* l_0_16_320 l_0_16_320)))
 (let ((?x97995 (* l_0_16_319 l_0_16_319)))
 (let ((?x97993 (* l_0_16_318 l_0_16_318)))
 (let ((?x97991 (* l_0_16_317 l_0_16_317)))
 (let ((?x99268 (* l_0_16_144 l_0_16_144)))
 (let ((?x99265 (* l_0_16_143 l_0_16_143)))
 (let ((?x99262 (* l_0_16_142 l_0_16_142)))
 (let ((?x99259 (* l_0_16_141 l_0_16_141)))
 (let ((?x99256 (* l_0_16_140 l_0_16_140)))
 (let ((?x99253 (* l_0_16_139 l_0_16_139)))
 (let ((?x99250 (* l_0_16_138 l_0_16_138)))
 (let ((?x99247 (* l_0_16_137 l_0_16_137)))
 (let ((?x27660 (* l_0_16_108 l_0_16_108)))
 (let ((?x27656 (* l_0_16_107 l_0_16_107)))
 (let ((?x78723 (* l_0_16_106 l_0_16_106)))
 (let ((?x27581 (* l_0_16_105 l_0_16_105)))
 (let ((?x78714 (* l_0_16_104 l_0_16_104)))
 (let ((?x78711 (* l_0_16_103 l_0_16_103)))
 (let ((?x28370 (+ (+ (* l_0_16_101 l_0_16_101) (* l_0_16_102 l_0_16_102)) ?x78711)))
 (let ((?x99979 (- (- (+ (+ (+ (+ (+ ?x28370 ?x78714) ?x27581) ?x78723) ?x27656) ?x27660) ?x99247) ?x99250)))
 (let ((?x99987 (- (- (- (- (- (- (- ?x99979 ?x99253) ?x99256) ?x99259) ?x99262) ?x99265) ?x99268) (* (* 2.0 l_0_16_217) l_0_16_245))))
 (let ((?x99994 (+ (+ (+ (+ (+ (+ (+ ?x99987 ?x97991) ?x97993) ?x97995) ?x97998) ?x98000) ?x98002) ?x98004)))
 (= (+ ?x99994 ?x98006) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x94420 (* l_0_16_291 l_0_16_291)))
 (let ((?x94418 (* l_0_16_290 l_0_16_290)))
 (let ((?x94353 (* l_0_16_183 l_0_16_183)))
 (let ((?x94351 (* l_0_16_182 l_0_16_182)))
 (let ((?x28508 (- (+ (* l_0_16_146 l_0_16_146) (* l_0_16_147 l_0_16_147)) ?x94351)))
 (let ((?x100025 (- (- (- (- ?x28508 ?x94353) ?x94418) ?x94420) (* (* 2.0 l_0_16_326) l_0_16_340))))
 (= (- ?x100025 (* (* 2.0 l_0_16_327) l_0_16_341)) 0.0))))))))
(assert
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x23429 (* ?x96854 l_0_16_293)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x23417 (* ?x96851 l_0_16_292)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x94711 (* ?x94710 l_0_16_185)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x94708 (* ?x94707 l_0_16_184)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94705 (* ?x94704 l_0_16_149)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x95033 (* ?x94852 l_0_16_148)))
 (let ((?x100053 (- (- (- (- (- (+ ?x95033 ?x94705) ?x94708) ?x94711) ?x23417) ?x23429) (* (* 2.0 l_0_16_328) l_0_16_340))))
 (let ((?x100057 (- (- ?x100053 (* (* 2.0 l_0_16_329) l_0_16_341)) (* (* 2.0 l_0_16_330) l_0_16_342))))
 (= ?x100057 0.0))))))))))))))))
(assert
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x97250 (* ?x96854 l_0_16_300)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x97248 (* ?x96851 l_0_16_299)))
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x100082 (* ?x94278 l_0_16_269)))
 (let ((?x94275 (* 2.0 l_0_16_254)))
 (let ((?x100080 (* ?x94275 l_0_16_268)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x94859 (* ?x94710 l_0_16_192)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x94857 (* ?x94707 l_0_16_191)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94855 (* ?x94704 l_0_16_156)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x94853 (* ?x94852 l_0_16_155)))
 (let ((?x100085 (- (- (+ (+ (- (- (+ ?x94853 ?x94855) ?x94857) ?x94859) ?x100080) ?x100082) ?x97248) ?x97250)))
 (let ((?x100091 (- (- ?x100085 (* (* 2.0 l_0_16_335) l_0_16_340)) (* (* 2.0 l_0_16_336) l_0_16_341))))
 (let ((?x100097 (- (- ?x100091 (* (* 2.0 l_0_16_337) l_0_16_342)) (* (* 2.0 l_0_16_338) l_0_16_343))))
 (= (- ?x100097 (* (* 2.0 l_0_16_339) l_0_16_344)) 0.0)))))))))))))))))))))
(assert
 (let ((?x100144 (* l_0_16_345 l_0_16_345)))
 (let ((?x100142 (* l_0_16_344 l_0_16_344)))
 (let ((?x100140 (* l_0_16_343 l_0_16_343)))
 (let ((?x100138 (* l_0_16_342 l_0_16_342)))
 (let ((?x100136 (* l_0_16_341 l_0_16_341)))
 (let ((?x100134 (* l_0_16_340 l_0_16_340)))
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x97292 (* ?x96854 l_0_16_305)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x97289 (* ?x96851 l_0_16_304)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x94941 (* ?x94710 l_0_16_197)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x94939 (* ?x94707 l_0_16_196)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x94922 (* ?x94704 l_0_16_161)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x98329 (* ?x94852 l_0_16_160)))
 (let ((?x100137 (- (- (- (- (- (- (+ ?x98329 ?x94922) ?x94939) ?x94941) ?x97289) ?x97292) ?x100134) ?x100136)))
 (= (- (- (- (- ?x100137 ?x100138) ?x100140) ?x100142) ?x100144) 0.0)))))))))))))))))))))
(assert
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x75590 (* ?x96854 l_0_16_311)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x75592 (* ?x96851 l_0_16_310)))
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x100082 (* ?x94278 l_0_16_269)))
 (let ((?x94275 (* 2.0 l_0_16_254)))
 (let ((?x100080 (* ?x94275 l_0_16_268)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x95042 (* ?x94710 l_0_16_203)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x95040 (* ?x94707 l_0_16_202)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x95038 (* ?x94704 l_0_16_167)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x95035 (* ?x94852 l_0_16_166)))
 (let ((?x100170 (- (- (- (- (- (- (+ ?x95035 ?x95038) ?x95040) ?x95042) ?x100080) ?x100082) ?x75592) ?x75590)))
 (let ((?x100176 (- (- ?x100170 (* (* 2.0 l_0_16_340) l_0_16_346)) (* (* 2.0 l_0_16_341) l_0_16_347))))
 (let ((?x100182 (- (- ?x100176 (* (* 2.0 l_0_16_342) l_0_16_348)) (* (* 2.0 l_0_16_343) l_0_16_349))))
 (let ((?x100188 (- (- ?x100182 (* (* 2.0 l_0_16_344) l_0_16_350)) (* (* 2.0 l_0_16_345) l_0_16_351))))
 (= ?x100188 0.0))))))))))))))))))))))
(assert
 (let ((?x96854 (* 2.0 l_0_16_291)))
 (let ((?x97352 (* ?x96854 l_0_16_318)))
 (let ((?x96851 (* 2.0 l_0_16_290)))
 (let ((?x97350 (* ?x96851 l_0_16_317)))
 (let ((?x94710 (* 2.0 l_0_16_183)))
 (let ((?x22138 (* ?x94710 l_0_16_210)))
 (let ((?x94707 (* 2.0 l_0_16_182)))
 (let ((?x22274 (* ?x94707 l_0_16_209)))
 (let ((?x94704 (* 2.0 l_0_16_147)))
 (let ((?x73653 (* ?x94704 l_0_16_174)))
 (let ((?x94852 (* 2.0 l_0_16_146)))
 (let ((?x98461 (* ?x94852 l_0_16_173)))
 (let ((?x100211 (- (- (- (+ ?x98461 ?x73653) ?x22274) ?x22138) (* (* 2.0 l_0_16_218) l_0_16_232))))
 (let ((?x100217 (- (- (- (- ?x100211 (* (* 2.0 l_0_16_219) l_0_16_233)) ?x97350) ?x97352) (* (* 2.0 l_0_16_340) l_0_16_353))))
 (let ((?x100221 (- (- ?x100217 (* (* 2.0 l_0_16_341) l_0_16_354)) (* (* 2.0 l_0_16_342) l_0_16_355))))
 (let ((?x100225 (- (- ?x100221 (* (* 2.0 l_0_16_343) l_0_16_356)) (* (* 2.0 l_0_16_344) l_0_16_357))))
 (= (- ?x100225 (* (* 2.0 l_0_16_345) l_0_16_358)) 0.0))))))))))))))))))
(assert
 (let ((?x97396 (* l_0_16_294 l_0_16_294)))
 (let ((?x97394 (* l_0_16_293 l_0_16_293)))
 (let ((?x97393 (* l_0_16_292 l_0_16_292)))
 (let ((?x95143 (* l_0_16_186 l_0_16_186)))
 (let ((?x95141 (* l_0_16_185 l_0_16_185)))
 (let ((?x95139 (* l_0_16_184 l_0_16_184)))
 (let ((?x95137 (* l_0_16_150 l_0_16_150)))
 (let ((?x100257 (+ (+ (* l_0_16_148 l_0_16_148) (* l_0_16_149 l_0_16_149)) ?x95137)))
 (= (- (- (- (- (- (- ?x100257 ?x95139) ?x95141) ?x95143) ?x97393) ?x97394) ?x97396) 0.0))))))))))
(assert
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x97420 (* ?x94514 l_0_16_301)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x97418 (* ?x94511 l_0_16_300)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x97416 (* ?x94508 l_0_16_299)))
 (let ((?x94873 (* 2.0 l_0_16_258)))
 (let ((?x100276 (* ?x94873 l_0_16_270)))
 (let ((?x94870 (* 2.0 l_0_16_257)))
 (let ((?x100274 (* ?x94870 l_0_16_269)))
 (let ((?x94867 (* 2.0 l_0_16_256)))
 (let ((?x100272 (* ?x94867 l_0_16_268)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x95244 (* ?x94949 l_0_16_193)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x95242 (* ?x94946 l_0_16_192)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x95240 (* ?x94943 l_0_16_191)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x95238 (* ?x94930 l_0_16_157)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x95236 (* ?x94927 l_0_16_156)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x95234 (* ?x94924 l_0_16_155)))
 (let ((?x100275 (+ (+ (- (- (- (+ (+ ?x95234 ?x95236) ?x95238) ?x95240) ?x95242) ?x95244) ?x100272) ?x100274)))
 (= (- (- (- (+ ?x100275 ?x100276) ?x97416) ?x97418) ?x97420) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x97448 (* ?x94514 l_0_16_306)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x97445 (* ?x94511 l_0_16_305)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x97442 (* ?x94508 l_0_16_304)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x53016 (* ?x94949 l_0_16_198)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x73807 (* ?x94946 l_0_16_197)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x53006 (* ?x94943 l_0_16_196)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x73793 (* ?x94930 l_0_16_162)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x73791 (* ?x94927 l_0_16_161)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x96161 (* ?x94924 l_0_16_160)))
 (let ((?x100307 (- (- (- (- (- (+ (+ ?x96161 ?x73791) ?x73793) ?x53006) ?x73807) ?x53016) ?x97442) ?x97445)))
 (= (- ?x100307 ?x97448) 0.0)))))))))))))))))))))
(assert
 (let ((?x94514 (* 2.0 l_0_16_294)))
 (let ((?x97476 (* ?x94514 l_0_16_312)))
 (let ((?x94511 (* 2.0 l_0_16_293)))
 (let ((?x97474 (* ?x94511 l_0_16_311)))
 (let ((?x94508 (* 2.0 l_0_16_292)))
 (let ((?x97472 (* ?x94508 l_0_16_310)))
 (let ((?x94873 (* 2.0 l_0_16_258)))
 (let ((?x100276 (* ?x94873 l_0_16_270)))
 (let ((?x94870 (* 2.0 l_0_16_257)))
 (let ((?x100274 (* ?x94870 l_0_16_269)))
 (let ((?x94867 (* 2.0 l_0_16_256)))
 (let ((?x100272 (* ?x94867 l_0_16_268)))
 (let ((?x94949 (* 2.0 l_0_16_186)))
 (let ((?x95318 (* ?x94949 l_0_16_204)))
 (let ((?x94946 (* 2.0 l_0_16_185)))
 (let ((?x95316 (* ?x94946 l_0_16_203)))
 (let ((?x94943 (* 2.0 l_0_16_184)))
 (let ((?x95314 (* ?x94943 l_0_16_202)))
 (let ((?x94930 (* 2.0 l_0_16_150)))
 (let ((?x95311 (* ?x94930 l_0_16_168)))
 (let ((?x94927 (* 2.0 l_0_16_149)))
 (let ((?x95308 (* ?x94927 l_0_16_167)))
 (let ((?x94924 (* 2.0 l_0_16_148)))
 (let ((?x95305 (* ?x94924 l_0_16_166)))
 (let ((?x100322 (- (- (- (- (- (+ (+ ?x95305 ?x95308) ?x95311) ?x95314) ?x95316) ?x95318) ?x100272) ?x100274)))
 (= (- (- (- (- ?x100322 ?x100276) ?x97472) ?x97474) ?x97476) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x97594 (* l_0_16_303 l_0_16_303)))
 (let ((?x97592 (* l_0_16_302 l_0_16_302)))
 (let ((?x97590 (* l_0_16_301 l_0_16_301)))
 (let ((?x97588 (* l_0_16_300 l_0_16_300)))
 (let ((?x97586 (* l_0_16_299 l_0_16_299)))
 (let ((?x98232 (* 2.0 l_0_16_267)))
 (let ((?x100351 (* ?x98232 l_0_16_272)))
 (let ((?x98229 (* 2.0 l_0_16_266)))
 (let ((?x100349 (* ?x98229 l_0_16_271)))
 (let ((?x98226 (* 2.0 l_0_16_265)))
 (let ((?x100347 (* ?x98226 l_0_16_270)))
 (let ((?x98223 (* 2.0 l_0_16_264)))
 (let ((?x100345 (* ?x98223 l_0_16_269)))
 (let ((?x98220 (* 2.0 l_0_16_263)))
 (let ((?x100343 (* ?x98220 l_0_16_268)))
 (let ((?x95791 (* l_0_16_195 l_0_16_195)))
 (let ((?x95789 (* l_0_16_194 l_0_16_194)))
 (let ((?x95787 (* l_0_16_193 l_0_16_193)))
 (let ((?x95785 (* l_0_16_192 l_0_16_192)))
 (let ((?x95783 (* l_0_16_191 l_0_16_191)))
 (let ((?x95781 (* l_0_16_159 l_0_16_159)))
 (let ((?x95779 (* l_0_16_158 l_0_16_158)))
 (let ((?x95777 (* l_0_16_157 l_0_16_157)))
 (let ((?x29796 (+ (+ (* l_0_16_155 l_0_16_155) (* l_0_16_156 l_0_16_156)) ?x95777)))
 (let ((?x100342 (- (- (- (- (- (+ (+ ?x29796 ?x95779) ?x95781) ?x95783) ?x95785) ?x95787) ?x95789) ?x95791)))
 (let ((?x100354 (- (- (+ (+ (+ (+ (+ ?x100342 ?x100343) ?x100345) ?x100347) ?x100349) ?x100351) ?x97586) ?x97588)))
 (= (- (- (- ?x100354 ?x97590) ?x97592) ?x97594) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x97632 (* 2.0 l_0_16_303)))
 (let ((?x97633 (* ?x97632 l_0_16_308)))
 (let ((?x97629 (* 2.0 l_0_16_302)))
 (let ((?x97630 (* ?x97629 l_0_16_307)))
 (let ((?x97626 (* 2.0 l_0_16_301)))
 (let ((?x97627 (* ?x97626 l_0_16_306)))
 (let ((?x97623 (* 2.0 l_0_16_300)))
 (let ((?x97624 (* ?x97623 l_0_16_305)))
 (let ((?x97620 (* 2.0 l_0_16_299)))
 (let ((?x97621 (* ?x97620 l_0_16_304)))
 (let ((?x100398 (* l_0_16_273 l_0_16_273)))
 (let ((?x100396 (* l_0_16_272 l_0_16_272)))
 (let ((?x100394 (* l_0_16_271 l_0_16_271)))
 (let ((?x100392 (* l_0_16_270 l_0_16_270)))
 (let ((?x100390 (* l_0_16_269 l_0_16_269)))
 (let ((?x100388 (* l_0_16_268 l_0_16_268)))
 (let ((?x95872 (* 2.0 l_0_16_195)))
 (let ((?x95873 (* ?x95872 l_0_16_200)))
 (let ((?x95869 (* 2.0 l_0_16_194)))
 (let ((?x95870 (* ?x95869 l_0_16_199)))
 (let ((?x95866 (* 2.0 l_0_16_193)))
 (let ((?x95867 (* ?x95866 l_0_16_198)))
 (let ((?x95863 (* 2.0 l_0_16_192)))
 (let ((?x95864 (* ?x95863 l_0_16_197)))
 (let ((?x95860 (* 2.0 l_0_16_191)))
 (let ((?x95861 (* ?x95860 l_0_16_196)))
 (let ((?x95857 (* 2.0 l_0_16_159)))
 (let ((?x95858 (* ?x95857 l_0_16_164)))
 (let ((?x95854 (* 2.0 l_0_16_158)))
 (let ((?x95855 (* ?x95854 l_0_16_163)))
 (let ((?x95851 (* 2.0 l_0_16_157)))
 (let ((?x95852 (* ?x95851 l_0_16_162)))
 (let ((?x95848 (* 2.0 l_0_16_156)))
 (let ((?x95849 (* ?x95848 l_0_16_161)))
 (let ((?x95845 (* 2.0 l_0_16_155)))
 (let ((?x95846 (* ?x95845 l_0_16_160)))
 (let ((?x100385 (- (- (- (+ (+ (+ (+ ?x95846 ?x95849) ?x95852) ?x95855) ?x95858) ?x95861) ?x95864) ?x95867)))
 (let ((?x100397 (+ (+ (+ (+ (+ (- (- ?x100385 ?x95870) ?x95873) ?x100388) ?x100390) ?x100392) ?x100394) ?x100396)))
 (= (- (- (- (- (- (+ ?x100397 ?x100398) ?x97621) ?x97624) ?x97627) ?x97630) ?x97633) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x97632 (* 2.0 l_0_16_303)))
 (let ((?x97676 (* ?x97632 l_0_16_314)))
 (let ((?x97629 (* 2.0 l_0_16_302)))
 (let ((?x97674 (* ?x97629 l_0_16_313)))
 (let ((?x97626 (* 2.0 l_0_16_301)))
 (let ((?x97672 (* ?x97626 l_0_16_312)))
 (let ((?x97623 (* 2.0 l_0_16_300)))
 (let ((?x97670 (* ?x97623 l_0_16_311)))
 (let ((?x97620 (* 2.0 l_0_16_299)))
 (let ((?x97668 (* ?x97620 l_0_16_310)))
 (let ((?x98379 (* 2.0 l_0_16_273)))
 (let ((?x100454 (* ?x98379 l_0_16_279)))
 (let ((?x98376 (* 2.0 l_0_16_272)))
 (let ((?x100452 (* ?x98376 l_0_16_278)))
 (let ((?x98373 (* 2.0 l_0_16_271)))
 (let ((?x100450 (* ?x98373 l_0_16_277)))
 (let ((?x98370 (* 2.0 l_0_16_270)))
 (let ((?x100448 (* ?x98370 l_0_16_276)))
 (let ((?x98367 (* 2.0 l_0_16_269)))
 (let ((?x100446 (* ?x98367 l_0_16_275)))
 (let ((?x98364 (* 2.0 l_0_16_268)))
 (let ((?x100444 (* ?x98364 l_0_16_274)))
 (let ((?x98232 (* 2.0 l_0_16_267)))
 (let ((?x100351 (* ?x98232 l_0_16_272)))
 (let ((?x98229 (* 2.0 l_0_16_266)))
 (let ((?x100349 (* ?x98229 l_0_16_271)))
 (let ((?x98226 (* 2.0 l_0_16_265)))
 (let ((?x100347 (* ?x98226 l_0_16_270)))
 (let ((?x98223 (* 2.0 l_0_16_264)))
 (let ((?x100345 (* ?x98223 l_0_16_269)))
 (let ((?x98220 (* 2.0 l_0_16_263)))
 (let ((?x100343 (* ?x98220 l_0_16_268)))
 (let ((?x95872 (* 2.0 l_0_16_195)))
 (let ((?x95949 (* ?x95872 l_0_16_206)))
 (let ((?x95869 (* 2.0 l_0_16_194)))
 (let ((?x95947 (* ?x95869 l_0_16_205)))
 (let ((?x95866 (* 2.0 l_0_16_193)))
 (let ((?x95945 (* ?x95866 l_0_16_204)))
 (let ((?x95863 (* 2.0 l_0_16_192)))
 (let ((?x95943 (* ?x95863 l_0_16_203)))
 (let ((?x95860 (* 2.0 l_0_16_191)))
 (let ((?x95941 (* ?x95860 l_0_16_202)))
 (let ((?x95857 (* 2.0 l_0_16_159)))
 (let ((?x95939 (* ?x95857 l_0_16_170)))
 (let ((?x95854 (* 2.0 l_0_16_158)))
 (let ((?x95937 (* ?x95854 l_0_16_169)))
 (let ((?x95851 (* 2.0 l_0_16_157)))
 (let ((?x95935 (* ?x95851 l_0_16_168)))
 (let ((?x95848 (* 2.0 l_0_16_156)))
 (let ((?x95933 (* ?x95848 l_0_16_167)))
 (let ((?x95845 (* 2.0 l_0_16_155)))
 (let ((?x95931 (* ?x95845 l_0_16_166)))
 (let ((?x100436 (- (- (- (+ (+ (+ (+ ?x95931 ?x95933) ?x95935) ?x95937) ?x95939) ?x95941) ?x95943) ?x95945)))
 (let ((?x100443 (- (- (- (- (- (- (- ?x100436 ?x95947) ?x95949) ?x100343) ?x100345) ?x100347) ?x100349) ?x100351)))
 (let ((?x100456 (- (+ (+ (+ (+ (+ (+ ?x100443 ?x100444) ?x100446) ?x100448) ?x100450) ?x100452) ?x100454) ?x97668)))
 (= (- (- (- (- ?x100456 ?x97670) ?x97672) ?x97674) ?x97676) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x97632 (* 2.0 l_0_16_303)))
 (let ((?x97731 (* ?x97632 l_0_16_321)))
 (let ((?x97629 (* 2.0 l_0_16_302)))
 (let ((?x97729 (* ?x97629 l_0_16_320)))
 (let ((?x97626 (* 2.0 l_0_16_301)))
 (let ((?x97727 (* ?x97626 l_0_16_319)))
 (let ((?x97623 (* 2.0 l_0_16_300)))
 (let ((?x97725 (* ?x97623 l_0_16_318)))
 (let ((?x97620 (* 2.0 l_0_16_299)))
 (let ((?x97723 (* ?x97620 l_0_16_317)))
 (let ((?x98379 (* 2.0 l_0_16_273)))
 (let ((?x98380 (* ?x98379 l_0_16_286)))
 (let ((?x98376 (* 2.0 l_0_16_272)))
 (let ((?x98377 (* ?x98376 l_0_16_285)))
 (let ((?x98373 (* 2.0 l_0_16_271)))
 (let ((?x98374 (* ?x98373 l_0_16_284)))
 (let ((?x98370 (* 2.0 l_0_16_270)))
 (let ((?x98371 (* ?x98370 l_0_16_283)))
 (let ((?x98367 (* 2.0 l_0_16_269)))
 (let ((?x98368 (* ?x98367 l_0_16_282)))
 (let ((?x98364 (* 2.0 l_0_16_268)))
 (let ((?x98365 (* ?x98364 l_0_16_281)))
 (let ((?x95872 (* 2.0 l_0_16_195)))
 (let ((?x96001 (* ?x95872 l_0_16_213)))
 (let ((?x95869 (* 2.0 l_0_16_194)))
 (let ((?x95999 (* ?x95869 l_0_16_212)))
 (let ((?x95866 (* 2.0 l_0_16_193)))
 (let ((?x95997 (* ?x95866 l_0_16_211)))
 (let ((?x95863 (* 2.0 l_0_16_192)))
 (let ((?x95995 (* ?x95863 l_0_16_210)))
 (let ((?x95860 (* 2.0 l_0_16_191)))
 (let ((?x95993 (* ?x95860 l_0_16_209)))
 (let ((?x95857 (* 2.0 l_0_16_159)))
 (let ((?x95991 (* ?x95857 l_0_16_177)))
 (let ((?x95854 (* 2.0 l_0_16_158)))
 (let ((?x95989 (* ?x95854 l_0_16_176)))
 (let ((?x95851 (* 2.0 l_0_16_157)))
 (let ((?x95987 (* ?x95851 l_0_16_175)))
 (let ((?x95848 (* 2.0 l_0_16_156)))
 (let ((?x95985 (* ?x95848 l_0_16_174)))
 (let ((?x95845 (* 2.0 l_0_16_155)))
 (let ((?x95983 (* ?x95845 l_0_16_173)))
 (let ((?x100489 (- (- (- (+ (+ (+ (+ ?x95983 ?x95985) ?x95987) ?x95989) ?x95991) ?x95993) ?x95995) ?x95997)))
 (let ((?x100495 (- (- (- (- ?x100489 ?x95999) ?x96001) (* (* 2.0 l_0_16_227) l_0_16_232)) (* (* 2.0 l_0_16_228) l_0_16_233))))
 (let ((?x100499 (- (- ?x100495 (* (* 2.0 l_0_16_229) l_0_16_234)) (* (* 2.0 l_0_16_230) l_0_16_235))))
 (let ((?x100504 (+ (+ (+ (- ?x100499 (* (* 2.0 l_0_16_231) l_0_16_236)) ?x98365) ?x98368) ?x98371)))
 (let ((?x100511 (- (- (- (- (+ (+ (+ ?x100504 ?x98374) ?x98377) ?x98380) ?x97723) ?x97725) ?x97727) ?x97729)))
 (= (- ?x100511 ?x97731) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x97806 (* l_0_16_309 l_0_16_309)))
 (let ((?x97804 (* l_0_16_308 l_0_16_308)))
 (let ((?x97802 (* l_0_16_307 l_0_16_307)))
 (let ((?x97800 (* l_0_16_306 l_0_16_306)))
 (let ((?x97798 (* l_0_16_305 l_0_16_305)))
 (let ((?x97796 (* l_0_16_304 l_0_16_304)))
 (let ((?x96090 (* l_0_16_201 l_0_16_201)))
 (let ((?x96088 (* l_0_16_200 l_0_16_200)))
 (let ((?x96084 (* l_0_16_199 l_0_16_199)))
 (let ((?x96082 (* l_0_16_198 l_0_16_198)))
 (let ((?x96080 (* l_0_16_197 l_0_16_197)))
 (let ((?x96078 (* l_0_16_196 l_0_16_196)))
 (let ((?x96070 (* l_0_16_165 l_0_16_165)))
 (let ((?x96055 (* l_0_16_164 l_0_16_164)))
 (let ((?x96052 (* l_0_16_163 l_0_16_163)))
 (let ((?x96048 (* l_0_16_162 l_0_16_162)))
 (let ((?x100543 (+ (+ (* l_0_16_160 l_0_16_160) (* l_0_16_161 l_0_16_161)) ?x96048)))
 (let ((?x100550 (- (- (- (- (+ (+ (+ ?x100543 ?x96052) ?x96055) ?x96070) ?x96078) ?x96080) ?x96082) ?x96084)))
 (let ((?x100557 (- (- (- (- (- (- (- ?x100550 ?x96088) ?x96090) ?x97796) ?x97798) ?x97800) ?x97802) ?x97804)))
 (= (- ?x100557 ?x97806) 0.0)))))))))))))))))))))
(assert
 (let ((?x97821 (* 2.0 l_0_16_309)))
 (let ((?x97822 (* ?x97821 l_0_16_315)))
 (let ((?x97818 (* 2.0 l_0_16_308)))
 (let ((?x97819 (* ?x97818 l_0_16_314)))
 (let ((?x97815 (* 2.0 l_0_16_307)))
 (let ((?x97816 (* ?x97815 l_0_16_313)))
 (let ((?x77000 (* 2.0 l_0_16_306)))
 (let ((?x76981 (* ?x77000 l_0_16_312)))
 (let ((?x77008 (* 2.0 l_0_16_305)))
 (let ((?x76996 (* ?x77008 l_0_16_311)))
 (let ((?x77027 (* 2.0 l_0_16_304)))
 (let ((?x77004 (* ?x77027 l_0_16_310)))
 (let ((?x100398 (* l_0_16_273 l_0_16_273)))
 (let ((?x100396 (* l_0_16_272 l_0_16_272)))
 (let ((?x100394 (* l_0_16_271 l_0_16_271)))
 (let ((?x100392 (* l_0_16_270 l_0_16_270)))
 (let ((?x100390 (* l_0_16_269 l_0_16_269)))
 (let ((?x100388 (* l_0_16_268 l_0_16_268)))
 (let ((?x96210 (* 2.0 l_0_16_201)))
 (let ((?x96211 (* ?x96210 l_0_16_207)))
 (let ((?x96207 (* 2.0 l_0_16_200)))
 (let ((?x96208 (* ?x96207 l_0_16_206)))
 (let ((?x96201 (* 2.0 l_0_16_199)))
 (let ((?x96202 (* ?x96201 l_0_16_205)))
 (let ((?x96198 (* 2.0 l_0_16_198)))
 (let ((?x96199 (* ?x96198 l_0_16_204)))
 (let ((?x96195 (* 2.0 l_0_16_197)))
 (let ((?x96196 (* ?x96195 l_0_16_203)))
 (let ((?x96192 (* 2.0 l_0_16_196)))
 (let ((?x96193 (* ?x96192 l_0_16_202)))
 (let ((?x96182 (* 2.0 l_0_16_165)))
 (let ((?x96183 (* ?x96182 l_0_16_171)))
 (let ((?x96179 (* 2.0 l_0_16_164)))
 (let ((?x96180 (* ?x96179 l_0_16_170)))
 (let ((?x96176 (* 2.0 l_0_16_163)))
 (let ((?x96177 (* ?x96176 l_0_16_169)))
 (let ((?x96173 (* 2.0 l_0_16_162)))
 (let ((?x96174 (* ?x96173 l_0_16_168)))
 (let ((?x96170 (* 2.0 l_0_16_161)))
 (let ((?x96171 (* ?x96170 l_0_16_167)))
 (let ((?x96167 (* 2.0 l_0_16_160)))
 (let ((?x96168 (* ?x96167 l_0_16_166)))
 (let ((?x100566 (- (- (+ (+ (+ (+ (+ ?x96168 ?x96171) ?x96174) ?x96177) ?x96180) ?x96183) ?x96193) ?x96196)))
 (let ((?x100573 (- (- (- (- (- (- (- ?x100566 ?x96199) ?x96202) ?x96208) ?x96211) ?x100388) ?x100390) ?x100392)))
 (let ((?x100580 (- (- (- (- (- (- (- ?x100573 ?x100394) ?x100396) ?x100398) ?x77004) ?x76996) ?x76981) ?x97816)))
 (= (- (- ?x100580 ?x97819) ?x97822) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x97821 (* 2.0 l_0_16_309)))
 (let ((?x97875 (* ?x97821 l_0_16_322)))
 (let ((?x97818 (* 2.0 l_0_16_308)))
 (let ((?x97873 (* ?x97818 l_0_16_321)))
 (let ((?x97815 (* 2.0 l_0_16_307)))
 (let ((?x97871 (* ?x97815 l_0_16_320)))
 (let ((?x77000 (* 2.0 l_0_16_306)))
 (let ((?x97869 (* ?x77000 l_0_16_319)))
 (let ((?x77008 (* 2.0 l_0_16_305)))
 (let ((?x97867 (* ?x77008 l_0_16_318)))
 (let ((?x77027 (* 2.0 l_0_16_304)))
 (let ((?x97865 (* ?x77027 l_0_16_317)))
 (let ((?x100610 (* l_0_16_237 l_0_16_237)))
 (let ((?x100608 (* l_0_16_236 l_0_16_236)))
 (let ((?x100606 (* l_0_16_235 l_0_16_235)))
 (let ((?x100604 (* l_0_16_234 l_0_16_234)))
 (let ((?x100602 (* l_0_16_233 l_0_16_233)))
 (let ((?x100600 (* l_0_16_232 l_0_16_232)))
 (let ((?x96210 (* 2.0 l_0_16_201)))
 (let ((?x96365 (* ?x96210 l_0_16_214)))
 (let ((?x96207 (* 2.0 l_0_16_200)))
 (let ((?x96363 (* ?x96207 l_0_16_213)))
 (let ((?x96201 (* 2.0 l_0_16_199)))
 (let ((?x96359 (* ?x96201 l_0_16_212)))
 (let ((?x96198 (* 2.0 l_0_16_198)))
 (let ((?x96357 (* ?x96198 l_0_16_211)))
 (let ((?x96195 (* 2.0 l_0_16_197)))
 (let ((?x96355 (* ?x96195 l_0_16_210)))
 (let ((?x96192 (* 2.0 l_0_16_196)))
 (let ((?x96353 (* ?x96192 l_0_16_209)))
 (let ((?x96182 (* 2.0 l_0_16_165)))
 (let ((?x96345 (* ?x96182 l_0_16_178)))
 (let ((?x96179 (* 2.0 l_0_16_164)))
 (let ((?x96343 (* ?x96179 l_0_16_177)))
 (let ((?x96176 (* 2.0 l_0_16_163)))
 (let ((?x96341 (* ?x96176 l_0_16_176)))
 (let ((?x96173 (* 2.0 l_0_16_162)))
 (let ((?x96339 (* ?x96173 l_0_16_175)))
 (let ((?x96170 (* 2.0 l_0_16_161)))
 (let ((?x96337 (* ?x96170 l_0_16_174)))
 (let ((?x96167 (* 2.0 l_0_16_160)))
 (let ((?x96335 (* ?x96167 l_0_16_173)))
 (let ((?x100595 (- (- (+ (+ (+ (+ (+ ?x96335 ?x96337) ?x96339) ?x96341) ?x96343) ?x96345) ?x96353) ?x96355)))
 (let ((?x100605 (- (- (- (- (- (- (- ?x100595 ?x96357) ?x96359) ?x96363) ?x96365) ?x100600) ?x100602) ?x100604)))
 (let ((?x100615 (- (- (- (- (- (- (- ?x100605 ?x100606) ?x100608) ?x100610) ?x97865) ?x97867) ?x97869) ?x97871)))
 (= (- (- ?x100615 ?x97873) ?x97875) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x97909 (* l_0_16_316 l_0_16_316)))
 (let ((?x97907 (* l_0_16_315 l_0_16_315)))
 (let ((?x97905 (* l_0_16_314 l_0_16_314)))
 (let ((?x97903 (* l_0_16_313 l_0_16_313)))
 (let ((?x97901 (* l_0_16_312 l_0_16_312)))
 (let ((?x97899 (* l_0_16_311 l_0_16_311)))
 (let ((?x97897 (* l_0_16_310 l_0_16_310)))
 (let ((?x98379 (* 2.0 l_0_16_273)))
 (let ((?x100454 (* ?x98379 l_0_16_279)))
 (let ((?x98376 (* 2.0 l_0_16_272)))
 (let ((?x100452 (* ?x98376 l_0_16_278)))
 (let ((?x98373 (* 2.0 l_0_16_271)))
 (let ((?x100450 (* ?x98373 l_0_16_277)))
 (let ((?x98370 (* 2.0 l_0_16_270)))
 (let ((?x100448 (* ?x98370 l_0_16_276)))
 (let ((?x98367 (* 2.0 l_0_16_269)))
 (let ((?x100446 (* ?x98367 l_0_16_275)))
 (let ((?x98364 (* 2.0 l_0_16_268)))
 (let ((?x100444 (* ?x98364 l_0_16_274)))
 (let ((?x96456 (* l_0_16_208 l_0_16_208)))
 (let ((?x96454 (* l_0_16_207 l_0_16_207)))
 (let ((?x96452 (* l_0_16_206 l_0_16_206)))
 (let ((?x96450 (* l_0_16_205 l_0_16_205)))
 (let ((?x96448 (* l_0_16_204 l_0_16_204)))
 (let ((?x96446 (* l_0_16_203 l_0_16_203)))
 (let ((?x96444 (* l_0_16_202 l_0_16_202)))
 (let ((?x96442 (* l_0_16_172 l_0_16_172)))
 (let ((?x96440 (* l_0_16_171 l_0_16_171)))
 (let ((?x96438 (* l_0_16_170 l_0_16_170)))
 (let ((?x96436 (* l_0_16_169 l_0_16_169)))
 (let ((?x96434 (* l_0_16_168 l_0_16_168)))
 (let ((?x100639 (+ (+ (* l_0_16_166 l_0_16_166) (* l_0_16_167 l_0_16_167)) ?x96434)))
 (let ((?x100646 (- (- (- (+ (+ (+ (+ ?x100639 ?x96436) ?x96438) ?x96440) ?x96442) ?x96444) ?x96446) ?x96448)))
 (let ((?x100653 (- (- (- (- (- (- (- ?x100646 ?x96450) ?x96452) ?x96454) ?x96456) ?x100444) ?x100446) ?x100448)))
 (let ((?x100660 (- (- (- (- (- (- (- ?x100653 ?x100450) ?x100452) ?x100454) ?x97897) ?x97899) ?x97901) ?x97903)))
 (= (- (- (- ?x100660 ?x97905) ?x97907) ?x97909) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x98006 (* l_0_16_324 l_0_16_324)))
 (let ((?x98004 (* l_0_16_323 l_0_16_323)))
 (let ((?x98002 (* l_0_16_322 l_0_16_322)))
 (let ((?x98000 (* l_0_16_321 l_0_16_321)))
 (let ((?x97998 (* l_0_16_320 l_0_16_320)))
 (let ((?x97995 (* l_0_16_319 l_0_16_319)))
 (let ((?x97993 (* l_0_16_318 l_0_16_318)))
 (let ((?x97991 (* l_0_16_317 l_0_16_317)))
 (let ((?x96755 (* l_0_16_216 l_0_16_216)))
 (let ((?x96753 (* l_0_16_215 l_0_16_215)))
 (let ((?x96751 (* l_0_16_214 l_0_16_214)))
 (let ((?x96749 (* l_0_16_213 l_0_16_213)))
 (let ((?x96747 (* l_0_16_212 l_0_16_212)))
 (let ((?x96745 (* l_0_16_211 l_0_16_211)))
 (let ((?x96743 (* l_0_16_210 l_0_16_210)))
 (let ((?x96741 (* l_0_16_209 l_0_16_209)))
 (let ((?x96739 (* l_0_16_180 l_0_16_180)))
 (let ((?x96737 (* l_0_16_179 l_0_16_179)))
 (let ((?x96735 (* l_0_16_178 l_0_16_178)))
 (let ((?x96733 (* l_0_16_177 l_0_16_177)))
 (let ((?x96712 (* l_0_16_176 l_0_16_176)))
 (let ((?x96708 (* l_0_16_175 l_0_16_175)))
 (let ((?x100675 (+ (+ (* l_0_16_173 l_0_16_173) (* l_0_16_174 l_0_16_174)) ?x96708)))
 (let ((?x100682 (- (- (+ (+ (+ (+ (+ ?x100675 ?x96712) ?x96733) ?x96735) ?x96737) ?x96739) ?x96741) ?x96743)))
 (let ((?x100690 (- (- (- (- (- (- (- ?x100682 ?x96745) ?x96747) ?x96749) ?x96751) ?x96753) ?x96755) (* (* 2.0 l_0_16_232) l_0_16_245))))
 (let ((?x100694 (- (- ?x100690 (* (* 2.0 l_0_16_233) l_0_16_246)) (* (* 2.0 l_0_16_234) l_0_16_247))))
 (let ((?x100698 (- (- ?x100694 (* (* 2.0 l_0_16_235) l_0_16_248)) (* (* 2.0 l_0_16_236) l_0_16_249))))
 (let ((?x100703 (- (- (- (- ?x100698 (* (* 2.0 l_0_16_237) l_0_16_250)) ?x97991) ?x97993) ?x97995)))
 (= (- (- (- (- (- ?x100703 ?x97998) ?x98000) ?x98002) ?x98004) ?x98006) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x94279 (* ?x94278 l_0_16_282)))
 (let ((?x94275 (* 2.0 l_0_16_254)))
 (let ((?x94276 (* ?x94275 l_0_16_281)))
 (let ((?x79416 (- (* (* (- 2.0) l_0_16_218) l_0_16_227) (* (* 2.0 l_0_16_219) l_0_16_228))))
 (let ((?x31667 (- (- (+ (+ ?x79416 ?x94276) ?x94279) (* (* 2.0 l_0_16_335) l_0_16_353)) (* (* 2.0 l_0_16_336) l_0_16_354))))
 (let ((?x79345 (- (- ?x31667 (* (* 2.0 l_0_16_337) l_0_16_355)) (* (* 2.0 l_0_16_338) l_0_16_356))))
 (= (- ?x79345 (* (* 2.0 l_0_16_339) l_0_16_357)) 0.0)))))))))
(assert
 (let ((?x100747 (* l_0_16_360 l_0_16_360)))
 (let ((?x100745 (* l_0_16_359 l_0_16_359)))
 (let ((?x100743 (* l_0_16_358 l_0_16_358)))
 (let ((?x100741 (* l_0_16_357 l_0_16_357)))
 (let ((?x100739 (* l_0_16_356 l_0_16_356)))
 (let ((?x100737 (* l_0_16_355 l_0_16_355)))
 (let ((?x100735 (* l_0_16_354 l_0_16_354)))
 (let ((?x100733 (* l_0_16_353 l_0_16_353)))
 (let ((?x100732 (- (* (* (- 2.0) l_0_16_218) l_0_16_245) (* (* 2.0 l_0_16_219) l_0_16_246))))
 (let ((?x100746 (- (- (- (- (- (- (- ?x100732 ?x100733) ?x100735) ?x100737) ?x100739) ?x100741) ?x100743) ?x100745)))
 (= (- ?x100746 ?x100747) 0.0))))))))))))
(assert
 (let ((?x98232 (* 2.0 l_0_16_267)))
 (let ((?x98233 (* ?x98232 l_0_16_285)))
 (let ((?x98229 (* 2.0 l_0_16_266)))
 (let ((?x98230 (* ?x98229 l_0_16_284)))
 (let ((?x98226 (* 2.0 l_0_16_265)))
 (let ((?x98227 (* ?x98226 l_0_16_283)))
 (let ((?x98223 (* 2.0 l_0_16_264)))
 (let ((?x98224 (* ?x98223 l_0_16_282)))
 (let ((?x98220 (* 2.0 l_0_16_263)))
 (let ((?x98221 (* ?x98220 l_0_16_281)))
 (let ((?x100778 (* l_0_16_231 l_0_16_231)))
 (let ((?x100776 (* l_0_16_230 l_0_16_230)))
 (let ((?x100774 (* l_0_16_229 l_0_16_229)))
 (let ((?x100775 (- (- (* (- l_0_16_227) l_0_16_227) (* l_0_16_228 l_0_16_228)) ?x100774)))
 (let ((?x100784 (+ (+ (+ (+ (+ (- (- ?x100775 ?x100776) ?x100778) ?x98221) ?x98224) ?x98227) ?x98230) ?x98233)))
 (= ?x100784 0.0)))))))))))))))))
(assert
 (let ((?x98499 (* l_0_16_288 l_0_16_288)))
 (let ((?x98497 (* l_0_16_287 l_0_16_287)))
 (let ((?x98495 (* l_0_16_286 l_0_16_286)))
 (let ((?x98493 (* l_0_16_285 l_0_16_285)))
 (let ((?x98491 (* l_0_16_284 l_0_16_284)))
 (let ((?x98489 (* l_0_16_283 l_0_16_283)))
 (let ((?x98487 (* l_0_16_282 l_0_16_282)))
 (let ((?x98485 (* l_0_16_281 l_0_16_281)))
 (let ((?x100797 (- (* (* (- 2.0) l_0_16_227) l_0_16_245) (* (* 2.0 l_0_16_228) l_0_16_246))))
 (let ((?x100801 (- (- ?x100797 (* (* 2.0 l_0_16_229) l_0_16_247)) (* (* 2.0 l_0_16_230) l_0_16_248))))
 (let ((?x100806 (+ (+ (+ (- ?x100801 (* (* 2.0 l_0_16_231) l_0_16_249)) ?x98485) ?x98487) ?x98489)))
 (= (+ (+ (+ (+ (+ ?x100806 ?x98491) ?x98493) ?x98495) ?x98497) ?x98499) 0.0)))))))))))))
(assert
 (let ((?x100841 (* l_0_16_252 l_0_16_252)))
 (let ((?x100839 (* l_0_16_251 l_0_16_251)))
 (let ((?x100837 (* l_0_16_250 l_0_16_250)))
 (let ((?x100835 (* l_0_16_249 l_0_16_249)))
 (let ((?x100833 (* l_0_16_248 l_0_16_248)))
 (let ((?x58556 (* l_0_16_247 l_0_16_247)))
 (let ((?x100832 (- (- (* (- l_0_16_245) l_0_16_245) (* l_0_16_246 l_0_16_246)) ?x58556)))
 (= (- (- (- (- (- ?x100832 ?x100833) ?x100835) ?x100837) ?x100839) ?x100841) 0.0)))))))))
(assert
 (let ((?x100863 (- (- (* (- l_0_16_254) l_0_16_254) (* l_0_16_255 l_0_16_255)) (* (* 2.0 l_0_16_326) l_0_16_346))))
 (= (- ?x100863 (* (* 2.0 l_0_16_327) l_0_16_347)) 0.0)))
(assert
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x100883 (* ?x94278 l_0_16_257)))
 (let ((?x100886 (- (- (* (* (- 2.0) l_0_16_254) l_0_16_256) ?x100883) (* (* 2.0 l_0_16_328) l_0_16_346))))
 (let ((?x100890 (- (- ?x100886 (* (* 2.0 l_0_16_329) l_0_16_347)) (* (* 2.0 l_0_16_330) l_0_16_348))))
 (= ?x100890 0.0))))))
(assert
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x100914 (* ?x94278 l_0_16_275)))
 (let ((?x100912 (* ?x94278 l_0_16_264)))
 (let ((?x100911 (+ (* (* (- 2.0) l_0_16_254) l_0_16_263) (* (* 2.0 l_0_16_254) l_0_16_274))))
 (let ((?x100919 (- (- (+ (- ?x100911 ?x100912) ?x100914) (* (* 2.0 l_0_16_335) l_0_16_346)) (* (* 2.0 l_0_16_336) l_0_16_347))))
 (let ((?x100923 (- (- ?x100919 (* (* 2.0 l_0_16_337) l_0_16_348)) (* (* 2.0 l_0_16_338) l_0_16_349))))
 (= (- ?x100923 (* (* 2.0 l_0_16_339) l_0_16_350)) 0.0))))))))
(assert
 (let ((?x100978 (* l_0_16_352 l_0_16_352)))
 (let ((?x100976 (* l_0_16_351 l_0_16_351)))
 (let ((?x100974 (* l_0_16_350 l_0_16_350)))
 (let ((?x100972 (* l_0_16_349 l_0_16_349)))
 (let ((?x100970 (* l_0_16_348 l_0_16_348)))
 (let ((?x100968 (* l_0_16_347 l_0_16_347)))
 (let ((?x100966 (* l_0_16_346 l_0_16_346)))
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x100914 (* ?x94278 l_0_16_275)))
 (let ((?x100971 (- (- (- (- (* (* (- 2.0) l_0_16_254) l_0_16_274) ?x100914) ?x100966) ?x100968) ?x100970)))
 (= (- (- (- (- ?x100971 ?x100972) ?x100974) ?x100976) ?x100978) 0.0))))))))))))
(assert
 (let ((?x100996 (* l_0_16_258 l_0_16_258)))
 (let ((?x100997 (- (- (* (- l_0_16_256) l_0_16_256) (* l_0_16_257 l_0_16_257)) ?x100996)))
 (= ?x100997 0.0))))
(assert
 (let ((?x94873 (* 2.0 l_0_16_258)))
 (let ((?x101017 (* ?x94873 l_0_16_276)))
 (let ((?x101015 (* ?x94873 l_0_16_265)))
 (let ((?x94870 (* 2.0 l_0_16_257)))
 (let ((?x101013 (* ?x94870 l_0_16_275)))
 (let ((?x101011 (* ?x94870 l_0_16_264)))
 (let ((?x101010 (+ (* (* (- 2.0) l_0_16_256) l_0_16_263) (* (* 2.0 l_0_16_256) l_0_16_274))))
 (= (+ (- (+ (- ?x101010 ?x101011) ?x101013) ?x101015) ?x101017) 0.0)))))))))
(assert
 (let ((?x94873 (* 2.0 l_0_16_258)))
 (let ((?x101017 (* ?x94873 l_0_16_276)))
 (let ((?x94870 (* 2.0 l_0_16_257)))
 (let ((?x101013 (* ?x94870 l_0_16_275)))
 (= (- (- (* (* (- 2.0) l_0_16_256) l_0_16_274) ?x101013) ?x101017) 0.0))))))
(assert
 (let ((?x101064 (* l_0_16_267 l_0_16_267)))
 (let ((?x98232 (* 2.0 l_0_16_267)))
 (let ((?x101062 (* ?x98232 l_0_16_278)))
 (let ((?x101060 (* l_0_16_266 l_0_16_266)))
 (let ((?x98229 (* 2.0 l_0_16_266)))
 (let ((?x101058 (* ?x98229 l_0_16_277)))
 (let ((?x101056 (* l_0_16_265 l_0_16_265)))
 (let ((?x98226 (* 2.0 l_0_16_265)))
 (let ((?x101054 (* ?x98226 l_0_16_276)))
 (let ((?x101052 (* l_0_16_264 l_0_16_264)))
 (let ((?x98223 (* 2.0 l_0_16_264)))
 (let ((?x101050 (* ?x98223 l_0_16_275)))
 (let ((?x101048 (* l_0_16_263 l_0_16_263)))
 (let ((?x101055 (+ (- (+ (- (* (* 2.0 l_0_16_263) l_0_16_274) ?x101048) ?x101050) ?x101052) ?x101054)))
 (= (- (+ (- (+ (- ?x101055 ?x101056) ?x101058) ?x101060) ?x101062) ?x101064) 0.0))))))))))))))))
(assert
 (let ((?x101112 (* l_0_16_280 l_0_16_280)))
 (let ((?x101110 (* l_0_16_279 l_0_16_279)))
 (let ((?x101108 (* l_0_16_278 l_0_16_278)))
 (let ((?x101106 (* l_0_16_277 l_0_16_277)))
 (let ((?x101104 (* l_0_16_276 l_0_16_276)))
 (let ((?x101102 (* l_0_16_275 l_0_16_275)))
 (let ((?x101100 (* l_0_16_274 l_0_16_274)))
 (let ((?x98232 (* 2.0 l_0_16_267)))
 (let ((?x101062 (* ?x98232 l_0_16_278)))
 (let ((?x98229 (* 2.0 l_0_16_266)))
 (let ((?x101058 (* ?x98229 l_0_16_277)))
 (let ((?x98226 (* 2.0 l_0_16_265)))
 (let ((?x101054 (* ?x98226 l_0_16_276)))
 (let ((?x98223 (* 2.0 l_0_16_264)))
 (let ((?x101050 (* ?x98223 l_0_16_275)))
 (let ((?x101099 (- (- (- (- (* (* (- 2.0) l_0_16_263) l_0_16_274) ?x101050) ?x101054) ?x101058) ?x101062)))
 (let ((?x101113 (+ (+ (+ (+ (+ (+ (+ ?x101099 ?x101100) ?x101102) ?x101104) ?x101106) ?x101108) ?x101110) ?x101112)))
 (= ?x101113 0.0)))))))))))))))))))
(assert
 (let ((?x101112 (* l_0_16_280 l_0_16_280)))
 (let ((?x101110 (* l_0_16_279 l_0_16_279)))
 (let ((?x101108 (* l_0_16_278 l_0_16_278)))
 (let ((?x101106 (* l_0_16_277 l_0_16_277)))
 (let ((?x101104 (* l_0_16_276 l_0_16_276)))
 (let ((?x79673 (- (- (* (- l_0_16_274) l_0_16_274) (* l_0_16_275 l_0_16_275)) ?x101104)))
 (= (- (- (- (- ?x79673 ?x101106) ?x101108) ?x101110) ?x101112) 0.0))))))))
(assert
 (let ((?x79766 (- (+ (* l_0_16_254 l_0_16_254) (* l_0_16_255 l_0_16_255)) (* (* 2.0 l_0_16_326) l_0_16_335))))
 (= (- ?x79766 (* (* 2.0 l_0_16_327) l_0_16_336)) 0.0)))
(assert
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x100883 (* ?x94278 l_0_16_257)))
 (let ((?x79643 (- (+ (* (* 2.0 l_0_16_254) l_0_16_256) ?x100883) (* (* 2.0 l_0_16_328) l_0_16_335))))
 (let ((?x79655 (- (- ?x79643 (* (* 2.0 l_0_16_329) l_0_16_336)) (* (* 2.0 l_0_16_330) l_0_16_337))))
 (= ?x79655 0.0))))))
(assert
 (let ((?x58809 (* l_0_16_339 l_0_16_339)))
 (let ((?x32423 (* l_0_16_338 l_0_16_338)))
 (let ((?x58751 (* l_0_16_337 l_0_16_337)))
 (let ((?x79799 (* l_0_16_336 l_0_16_336)))
 (let ((?x79800 (* l_0_16_335 l_0_16_335)))
 (let ((?x94278 (* 2.0 l_0_16_255)))
 (let ((?x100912 (* ?x94278 l_0_16_264)))
 (let ((?x58745 (- (- (- (+ (* (* 2.0 l_0_16_254) l_0_16_263) ?x100912) ?x79800) ?x79799) ?x58751)))
 (= (- (- ?x58745 ?x32423) ?x58809) 0.0))))))))))
(assert
 (let ((?x100996 (* l_0_16_258 l_0_16_258)))
 (let ((?x101121 (+ (+ (* l_0_16_256 l_0_16_256) (* l_0_16_257 l_0_16_257)) ?x100996)))
 (= ?x101121 0.0))))
(assert
 (let ((?x94873 (* 2.0 l_0_16_258)))
 (let ((?x101015 (* ?x94873 l_0_16_265)))
 (let ((?x94870 (* 2.0 l_0_16_257)))
 (let ((?x101011 (* ?x94870 l_0_16_264)))
 (= (+ (+ (* (* 2.0 l_0_16_256) l_0_16_263) ?x101011) ?x101015) 0.0))))))
(assert
 (let ((?x101064 (* l_0_16_267 l_0_16_267)))
 (let ((?x101060 (* l_0_16_266 l_0_16_266)))
 (let ((?x101056 (* l_0_16_265 l_0_16_265)))
 (let ((?x59194 (+ (+ (* l_0_16_263 l_0_16_263) (* l_0_16_264 l_0_16_264)) ?x101056)))
 (= (+ (+ ?x59194 ?x101060) ?x101064) 0.0))))))
(assert
 (let ((?x101132 (- (* (* (- 2.0) l_0_16_326) l_0_16_328) (* (* 2.0 l_0_16_327) l_0_16_329))))
 (= ?x101132 0.0)))
(assert
 (let ((?x101149 (* l_0_16_330 l_0_16_330)))
 (let ((?x101150 (- (- (* (- l_0_16_328) l_0_16_328) (* l_0_16_329 l_0_16_329)) ?x101149)))
 (= ?x101150 0.0))))
(assert
 (>= l_0_16_1 0.0))
(assert
 (>= l_0_16_3 0.0))
(assert
 (>= l_0_16_6 0.0))
(assert
 (>= l_0_16_10 0.0))
(assert
 (>= l_0_16_15 0.0))
(assert
 (>= l_0_16_21 0.0))
(assert
 (>= l_0_16_28 0.0))
(assert
 (>= l_0_16_36 0.0))
(assert
 (>= l_0_16_37 0.0))
(assert
 (>= l_0_16_39 0.0))
(assert
 (>= l_0_16_42 0.0))
(assert
 (>= l_0_16_46 0.0))
(assert
 (>= l_0_16_51 0.0))
(assert
 (>= l_0_16_57 0.0))
(assert
 (>= l_0_16_64 0.0))
(assert
 (>= l_0_16_72 0.0))
(assert
 (>= l_0_16_73 0.0))
(assert
 (>= l_0_16_75 0.0))
(assert
 (>= l_0_16_78 0.0))
(assert
 (>= l_0_16_82 0.0))
(assert
 (>= l_0_16_87 0.0))
(assert
 (>= l_0_16_93 0.0))
(assert
 (>= l_0_16_100 0.0))
(assert
 (>= l_0_16_108 0.0))
(assert
 (>= l_0_16_109 0.0))
(assert
 (>= l_0_16_111 0.0))
(assert
 (>= l_0_16_114 0.0))
(assert
 (>= l_0_16_118 0.0))
(assert
 (>= l_0_16_123 0.0))
(assert
 (>= l_0_16_129 0.0))
(assert
 (>= l_0_16_136 0.0))
(assert
 (>= l_0_16_144 0.0))
(assert
 (>= l_0_16_145 0.0))
(assert
 (>= l_0_16_147 0.0))
(assert
 (>= l_0_16_150 0.0))
(assert
 (>= l_0_16_154 0.0))
(assert
 (>= l_0_16_159 0.0))
(assert
 (>= l_0_16_165 0.0))
(assert
 (>= l_0_16_172 0.0))
(assert
 (>= l_0_16_180 0.0))
(assert
 (>= l_0_16_181 0.0))
(assert
 (>= l_0_16_183 0.0))
(assert
 (>= l_0_16_186 0.0))
(assert
 (>= l_0_16_190 0.0))
(assert
 (>= l_0_16_195 0.0))
(assert
 (>= l_0_16_201 0.0))
(assert
 (>= l_0_16_208 0.0))
(assert
 (>= l_0_16_216 0.0))
(assert
 (>= l_0_16_217 0.0))
(assert
 (>= l_0_16_219 0.0))
(assert
 (>= l_0_16_222 0.0))
(assert
 (>= l_0_16_226 0.0))
(assert
 (>= l_0_16_231 0.0))
(assert
 (>= l_0_16_237 0.0))
(assert
 (>= l_0_16_244 0.0))
(assert
 (>= l_0_16_252 0.0))
(assert
 (>= l_0_16_253 0.0))
(assert
 (>= l_0_16_255 0.0))
(assert
 (>= l_0_16_258 0.0))
(assert
 (>= l_0_16_262 0.0))
(assert
 (>= l_0_16_267 0.0))
(assert
 (>= l_0_16_273 0.0))
(assert
 (>= l_0_16_280 0.0))
(assert
 (>= l_0_16_288 0.0))
(assert
 (>= l_0_16_289 0.0))
(assert
 (>= l_0_16_291 0.0))
(assert
 (>= l_0_16_294 0.0))
(assert
 (>= l_0_16_298 0.0))
(assert
 (>= l_0_16_303 0.0))
(assert
 (>= l_0_16_309 0.0))
(assert
 (>= l_0_16_316 0.0))
(assert
 (>= l_0_16_324 0.0))
(assert
 (>= l_0_16_325 0.0))
(assert
 (>= l_0_16_327 0.0))
(assert
 (>= l_0_16_330 0.0))
(assert
 (>= l_0_16_334 0.0))
(assert
 (>= l_0_16_339 0.0))
(assert
 (>= l_0_16_345 0.0))
(assert
 (>= l_0_16_352 0.0))
(assert
 (>= l_0_16_360 0.0))
(assert
 (let ((?x101244 (* l_0_17_363 l_0_17_363)))
 (let ((?x101242 (* l_0_17_362 l_0_17_362)))
 (let ((?x101240 (* l_0_17_327 l_0_17_327)))
 (= (- (- (- (- _a_2_ (* l_0_17_326 l_0_17_326)) ?x101240) ?x101242) ?x101244) 0.0)))))
(assert
 (let ((?x101277 (* l_0_17_39 l_0_17_39)))
 (let ((?x101275 (* l_0_17_38 l_0_17_38)))
 (let ((?x101261 (* l_0_17_3 l_0_17_3)))
 (let ((?x101259 (* l_0_17_291 l_0_17_291)))
 (let ((?x101260 (+ (+ (+ _a_3_ (* l_0_17_2 l_0_17_2)) (* l_0_17_290 l_0_17_290)) ?x101259)))
 (let ((?x101268 (- (- (+ ?x101260 ?x101261) (* (* 2.0 l_0_17_326) l_0_17_331)) (* (* 2.0 l_0_17_327) l_0_17_332))))
 (let ((?x101274 (- (- ?x101268 (* (* 2.0 l_0_17_362) l_0_17_367)) (* (* 2.0 l_0_17_363) l_0_17_368))))
 (= (- (- ?x101274 ?x101275) ?x101277) 0.0)))))))))
(assert
 (let ((?x101306 (* l_0_17_75 l_0_17_75)))
 (let ((?x101304 (* l_0_17_74 l_0_17_74)))
 (let ((?x101259 (* l_0_17_291 l_0_17_291)))
 (let ((?x101257 (* l_0_17_290 l_0_17_290)))
 (let ((?x32861 (* l_0_17_111 l_0_17_111)))
 (let ((?x101300 (- (+ (+ (- (- _a_4_ (* l_0_17_110 l_0_17_110)) ?x32861) ?x101257) ?x101259) (* (* 2.0 l_0_17_325) l_0_17_326))))
 (= (+ (+ (- ?x101300 (* (* 2.0 l_0_17_361) l_0_17_362)) ?x101304) ?x101306) 0.0))))))))
(assert
 (let ((?x101325 (* l_0_17_219 l_0_17_219)))
 (let ((?x101328 (- (- (- (- _a_5_) (* l_0_17_218 l_0_17_218)) ?x101325) (* (* 2.0 l_0_17_326) l_0_17_353))))
 (let ((?x101332 (- (- ?x101328 (* (* 2.0 l_0_17_327) l_0_17_354)) (* (* 2.0 l_0_17_362) l_0_17_389))))
 (= (- ?x101332 (* (* 2.0 l_0_17_363) l_0_17_390)) 0.0)))))
(assert
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x101367 (* ?x101366 l_0_17_282)))
 (let ((?x101363 (* 2.0 l_0_17_254)))
 (let ((?x101364 (* ?x101363 l_0_17_281)))
 (let ((?x101355 (* l_0_17_147 l_0_17_147)))
 (let ((?x101353 (* l_0_17_146 l_0_17_146)))
 (let ((?x101352 (+ (+ (- _a_6_) (* (/ 1.0 2.0) (* l_0_17_110 l_0_17_110))) (* (/ 1.0 2.0) (* l_0_17_111 l_0_17_111)))))
 (let ((?x101362 (- (- (- (- ?x101352 ?x101353) ?x101355) (* (* 2.0 l_0_17_218) l_0_17_238)) (* (* 2.0 l_0_17_219) l_0_17_239))))
 (let ((?x101374 (- (- (- (- ?x101362 ?x101364) ?x101367) (* (* 2.0 l_0_17_346) l_0_17_353)) (* (* 2.0 l_0_17_347) l_0_17_354))))
 (let ((?x101380 (- (- ?x101374 (* (* 2.0 l_0_17_348) l_0_17_355)) (* (* 2.0 l_0_17_349) l_0_17_356))))
 (let ((?x101386 (- (- ?x101380 (* (* 2.0 l_0_17_350) l_0_17_357)) (* (* 2.0 l_0_17_351) l_0_17_358))))
 (let ((?x101392 (- (- ?x101386 (* (* 2.0 l_0_17_352) l_0_17_359)) (* (* 2.0 l_0_17_382) l_0_17_389))))
 (let ((?x101398 (- (- ?x101392 (* (* 2.0 l_0_17_383) l_0_17_390)) (* (* 2.0 l_0_17_384) l_0_17_391))))
 (let ((?x101404 (- (- ?x101398 (* (* 2.0 l_0_17_385) l_0_17_392)) (* (* 2.0 l_0_17_386) l_0_17_393))))
 (let ((?x101410 (- (- ?x101404 (* (* 2.0 l_0_17_387) l_0_17_394)) (* (* 2.0 l_0_17_388) l_0_17_395))))
 (let ((?x101416 (- (- ?x101410 (* (* (/ 1.0 2.0) l_0_17_74) l_0_17_74)) (* (* (/ 1.0 2.0) l_0_17_75) l_0_17_75))))
 (= ?x101416 0.0))))))))))))))))))
(assert
 (let ((?x101277 (* l_0_17_39 l_0_17_39)))
 (let ((?x101275 (* l_0_17_38 l_0_17_38)))
 (let ((?x101261 (* l_0_17_3 l_0_17_3)))
 (let ((?x59283 (* l_0_17_2 l_0_17_2)))
 (let ((?x101476 (* l_0_17_183 l_0_17_183)))
 (let ((?x101474 (* l_0_17_182 l_0_17_182)))
 (let ((?x101355 (* l_0_17_147 l_0_17_147)))
 (let ((?x101477 (+ (+ (- (- (- _a_7_) (* l_0_17_146 l_0_17_146)) ?x101355) ?x101474) ?x101476)))
 (let ((?x101482 (- (- (- ?x101477 ?x59283) (* (* 2.0 l_0_17_218) l_0_17_220)) (* (* 2.0 l_0_17_219) l_0_17_221))))
 (let ((?x101489 (- (- (- ?x101482 ?x101261) (* (* 2.0 l_0_17_328) l_0_17_353)) (* (* 2.0 l_0_17_329) l_0_17_354))))
 (let ((?x101495 (- (- ?x101489 (* (* 2.0 l_0_17_330) l_0_17_355)) (* (* 2.0 l_0_17_364) l_0_17_389))))
 (let ((?x101501 (- (- ?x101495 (* (* 2.0 l_0_17_365) l_0_17_390)) (* (* 2.0 l_0_17_366) l_0_17_391))))
 (= (+ (+ ?x101501 ?x101275) ?x101277) 0.0))))))))))))))
(assert
 (let ((?x101527 (* l_0_17_37 l_0_17_37)))
 (let ((?x101525 (* l_0_17_181 l_0_17_181)))
 (let ((?x101526 (+ (- (* (- l_0_17_1) l_0_17_1) (* l_0_17_145 l_0_17_145)) ?x101525)))
 (= (+ ?x101526 ?x101527) 0.0)))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101579 (* ?x101578 l_0_17_38)))
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x101576 (* ?x101575 l_0_17_319)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x101573 (* ?x101572 l_0_17_318)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x101570 (* ?x101569 l_0_17_317)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101564 (* ?x101563 l_0_17_182)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101561 (* ?x101560 l_0_17_146)))
 (let ((?x101544 (+ (* (* (- 2.0) l_0_17_1) l_0_17_2) (* (* 2.0 l_0_17_101) l_0_17_76))))
 (let ((?x101550 (+ (+ ?x101544 (* (* 2.0 l_0_17_102) l_0_17_77)) (* (* 2.0 l_0_17_103) l_0_17_78))))
 (let ((?x101556 (- (- ?x101550 (* (* 2.0 l_0_17_112) l_0_17_137)) (* (* 2.0 l_0_17_113) l_0_17_138))))
 (let ((?x101568 (- (+ (- (- ?x101556 (* (* 2.0 l_0_17_114) l_0_17_139)) ?x101561) ?x101564) (* (* 2.0 l_0_17_217) l_0_17_220))))
 (= (+ (+ (+ (+ ?x101568 ?x101570) ?x101573) ?x101576) ?x101579) 0.0))))))))))))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101617 (* ?x101578 l_0_17_40)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101604 (* ?x101563 l_0_17_184)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101600 (* ?x101560 l_0_17_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_1) l_0_17_4) ?x101600) ?x101604) ?x101617) 0.0))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101631 (* ?x101578 l_0_17_43)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101629 (* ?x101563 l_0_17_187)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101627 (* ?x101560 l_0_17_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_1) l_0_17_7) ?x101627) ?x101629) ?x101631) 0.0))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101654 (* ?x101578 l_0_17_47)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101652 (* ?x101563 l_0_17_191)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101645 (* ?x101560 l_0_17_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_1) l_0_17_11) ?x101645) ?x101652) ?x101654) 0.0))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101673 (* ?x101578 l_0_17_52)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101671 (* ?x101563 l_0_17_196)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101669 (* ?x101560 l_0_17_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_1) l_0_17_16) ?x101669) ?x101671) ?x101673) 0.0))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101696 (* ?x101578 l_0_17_58)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101694 (* ?x101563 l_0_17_202)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101692 (* ?x101560 l_0_17_166)))
 (let ((?x101600 (* ?x101560 l_0_17_148)))
 (let ((?x101690 (+ (* (* (- 2.0) l_0_17_1) l_0_17_22) (* (* 1.0 l_0_17_109) l_0_17_112))))
 (let ((?x101700 (- (+ (+ (- (- ?x101690 ?x101600) ?x101692) ?x101694) ?x101696) (* (* 1.0 l_0_17_73) l_0_17_76))))
 (= ?x101700 0.0)))))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101723 (* ?x101578 l_0_17_65)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101721 (* ?x101563 l_0_17_209)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101719 (* ?x101560 l_0_17_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_1) l_0_17_29) ?x101719) ?x101721) ?x101723) 0.0))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x101763 (* ?x101762 l_0_17_41)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x101760 (* ?x101759 l_0_17_40)))
 (let ((?x101756 (* 2.0 l_0_17_3)))
 (let ((?x101757 (* ?x101756 l_0_17_5)))
 (let ((?x101754 (* l_0_17_222 l_0_17_222)))
 (let ((?x101752 (* l_0_17_221 l_0_17_221)))
 (let ((?x101750 (* l_0_17_220 l_0_17_220)))
 (let ((?x101747 (* 2.0 l_0_17_2)))
 (let ((?x101748 (* ?x101747 l_0_17_4)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x101745 (* ?x101744 l_0_17_185)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x101742 (* ?x101741 l_0_17_184)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101739 (* ?x101738 l_0_17_149)))
 (let ((?x101749 (- (+ (+ (- (* (* (- 2.0) l_0_17_146) l_0_17_148) ?x101739) ?x101742) ?x101745) ?x101748)))
 (= (+ (+ (- (- (- (- ?x101749 ?x101750) ?x101752) ?x101754) ?x101757) ?x101760) ?x101763) 0.0))))))))))))))))))))
(assert
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x101828 (* ?x101827 l_0_17_67)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x101825 (* ?x101824 l_0_17_66)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x101822 (* ?x101821 l_0_17_65)))
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x101819 (* ?x101762 l_0_17_44)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x101817 (* ?x101759 l_0_17_43)))
 (let ((?x101814 (* 2.0 l_0_17_31)))
 (let ((?x101815 (* ?x101814 l_0_17_6)))
 (let ((?x101811 (* 2.0 l_0_17_30)))
 (let ((?x101812 (* ?x101811 l_0_17_5)))
 (let ((?x101756 (* 2.0 l_0_17_3)))
 (let ((?x101809 (* ?x101756 l_0_17_8)))
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x101576 (* ?x101575 l_0_17_319)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x101573 (* ?x101572 l_0_17_318)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x101570 (* ?x101569 l_0_17_317)))
 (let ((?x101803 (* 2.0 l_0_17_29)))
 (let ((?x101804 (* ?x101803 l_0_17_4)))
 (let ((?x101747 (* 2.0 l_0_17_2)))
 (let ((?x101792 (* ?x101747 l_0_17_7)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x101790 (* ?x101744 l_0_17_188)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x101788 (* ?x101741 l_0_17_187)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101786 (* ?x101738 l_0_17_152)))
 (let ((?x101793 (- (+ (+ (- (* (* (- 2.0) l_0_17_146) l_0_17_151) ?x101786) ?x101788) ?x101790) ?x101792)))
 (let ((?x101799 (- (- ?x101793 (* (* 2.0 l_0_17_220) l_0_17_223)) (* (* 2.0 l_0_17_221) l_0_17_224))))
 (let ((?x101807 (+ (+ (+ (- ?x101799 (* (* 2.0 l_0_17_222) l_0_17_225)) ?x101804) ?x101570) ?x101573)))
 (let ((?x101823 (- (+ (+ (+ (+ (- (+ ?x101807 ?x101576) ?x101809) ?x101812) ?x101815) ?x101817) ?x101819) ?x101822)))
 (= (- (- ?x101823 ?x101825) ?x101828) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x101900 (* ?x101762 l_0_17_48)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x101898 (* ?x101759 l_0_17_47)))
 (let ((?x101895 (* 2.0 l_0_17_258)))
 (let ((?x101896 (* ?x101895 l_0_17_283)))
 (let ((?x101892 (* 2.0 l_0_17_257)))
 (let ((?x101893 (* ?x101892 l_0_17_282)))
 (let ((?x101889 (* 2.0 l_0_17_256)))
 (let ((?x101890 (* ?x101889 l_0_17_281)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x101881 (* ?x101744 l_0_17_192)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x101879 (* ?x101741 l_0_17_191)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101877 (* ?x101738 l_0_17_156)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x101875 (* ?x101874 l_0_17_155)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x101872 (* ?x101871 l_0_17_3)))
 (let ((?x101880 (+ (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_2) ?x101872) ?x101875) ?x101877) ?x101879)))
 (let ((?x101886 (- (- (+ ?x101880 ?x101881) (* (* 2.0 l_0_17_220) l_0_17_227)) (* (* 2.0 l_0_17_221) l_0_17_228))))
 (let ((?x101897 (+ (+ (+ (- ?x101886 (* (* 2.0 l_0_17_222) l_0_17_229)) ?x101890) ?x101893) ?x101896)))
 (= (+ (+ ?x101897 ?x101898) ?x101900) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x101968 (* ?x101762 l_0_17_53)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x101966 (* ?x101759 l_0_17_52)))
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x101576 (* ?x101575 l_0_17_319)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x101573 (* ?x101572 l_0_17_318)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x101570 (* ?x101569 l_0_17_317)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x101955 (* ?x101954 l_0_17_211)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x101952 (* ?x101951 l_0_17_210)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x101949 (* ?x101948 l_0_17_209)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x101946 (* ?x101744 l_0_17_197)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x101944 (* ?x101741 l_0_17_196)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x101942 (* ?x101941 l_0_17_3)))
 (let ((?x101938 (* 2.0 l_0_17_16)))
 (let ((?x101939 (* ?x101938 l_0_17_2)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x101936 (* ?x101935 l_0_17_175)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x101933 (* ?x101932 l_0_17_174)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x101920 (* ?x101918 l_0_17_173)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101914 (* ?x101738 l_0_17_161)))
 (let ((?x101937 (+ (+ (+ (- (* (* (- 2.0) l_0_17_146) l_0_17_160) ?x101914) ?x101920) ?x101933) ?x101936)))
 (let ((?x101956 (- (- (- (+ (+ (- (- ?x101937 ?x101939) ?x101942) ?x101944) ?x101946) ?x101949) ?x101952) ?x101955)))
 (let ((?x101960 (- (- ?x101956 (* (* 2.0 l_0_17_220) l_0_17_232)) (* (* 2.0 l_0_17_221) l_0_17_233))))
 (let ((?x101965 (- (- (- (- ?x101960 (* (* 2.0 l_0_17_222) l_0_17_234)) ?x101570) ?x101573) ?x101576)))
 (= (+ (+ ?x101965 ?x101966) ?x101968) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x102053 (* ?x101762 l_0_17_59)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x102051 (* ?x101759 l_0_17_58)))
 (let ((?x101895 (* 2.0 l_0_17_258)))
 (let ((?x101896 (* ?x101895 l_0_17_283)))
 (let ((?x101892 (* 2.0 l_0_17_257)))
 (let ((?x101893 (* ?x101892 l_0_17_282)))
 (let ((?x101889 (* 2.0 l_0_17_256)))
 (let ((?x101890 (* ?x101889 l_0_17_281)))
 (let ((?x102045 (* 2.0 l_0_17_23)))
 (let ((?x102046 (* ?x102045 l_0_17_3)))
 (let ((?x101747 (* 2.0 l_0_17_2)))
 (let ((?x102037 (* ?x101747 l_0_17_22)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x102035 (* ?x101744 l_0_17_203)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x102033 (* ?x101741 l_0_17_202)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x102031 (* ?x101738 l_0_17_167)))
 (let ((?x101739 (* ?x101738 l_0_17_149)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x102028 (* ?x101874 l_0_17_166)))
 (let ((?x102026 (* ?x101874 l_0_17_148)))
 (let ((?x102025 (+ (* (* 1.0 l_0_17_110) l_0_17_112) (* (* 1.0 l_0_17_111) l_0_17_113))))
 (let ((?x102038 (- (+ (+ (- (- (- (- ?x102025 ?x102026) ?x102028) ?x101739) ?x102031) ?x102033) ?x102035) ?x102037)))
 (let ((?x102042 (- (- ?x102038 (* (* 2.0 l_0_17_220) l_0_17_238)) (* (* 2.0 l_0_17_221) l_0_17_239))))
 (let ((?x102049 (- (- (- (- ?x102042 (* (* 2.0 l_0_17_222) l_0_17_240)) ?x102046) ?x101890) ?x101893)))
 (let ((?x102057 (- (+ (+ (- ?x102049 ?x101896) ?x102051) ?x102053) (* (* 1.0 l_0_17_74) l_0_17_76))))
 (= (- ?x102057 (* (* 1.0 l_0_17_75) l_0_17_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x102109 (* ?x101762 l_0_17_66)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x102107 (* ?x101759 l_0_17_65)))
 (let ((?x101756 (* 2.0 l_0_17_3)))
 (let ((?x102105 (* ?x101756 l_0_17_30)))
 (let ((?x101747 (* 2.0 l_0_17_2)))
 (let ((?x102097 (* ?x101747 l_0_17_29)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x102095 (* ?x101744 l_0_17_210)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x102093 (* ?x101741 l_0_17_209)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x102091 (* ?x101738 l_0_17_174)))
 (let ((?x102098 (- (+ (+ (- (* (* (- 2.0) l_0_17_146) l_0_17_173) ?x102091) ?x102093) ?x102095) ?x102097)))
 (let ((?x102102 (- (- ?x102098 (* (* 2.0 l_0_17_220) l_0_17_245)) (* (* 2.0 l_0_17_221) l_0_17_246))))
 (let ((?x102110 (+ (+ (- (- ?x102102 (* (* 2.0 l_0_17_222) l_0_17_247)) ?x102105) ?x102107) ?x102109)))
 (= ?x102110 0.0)))))))))))))))))))
(assert
 (let ((?x102163 (* l_0_17_6 l_0_17_6)))
 (let ((?x102161 (* l_0_17_5 l_0_17_5)))
 (let ((?x102159 (* l_0_17_42 l_0_17_42)))
 (let ((?x102157 (* l_0_17_41 l_0_17_41)))
 (let ((?x102155 (* l_0_17_40 l_0_17_40)))
 (let ((?x102153 (* l_0_17_4 l_0_17_4)))
 (let ((?x102151 (* l_0_17_186 l_0_17_186)))
 (let ((?x102149 (* l_0_17_185 l_0_17_185)))
 (let ((?x102147 (* l_0_17_184 l_0_17_184)))
 (let ((?x102145 (* l_0_17_150 l_0_17_150)))
 (let ((?x102146 (- (- (* (- l_0_17_148) l_0_17_148) (* l_0_17_149 l_0_17_149)) ?x102145)))
 (let ((?x102160 (+ (+ (+ (- (+ (+ (+ ?x102146 ?x102147) ?x102149) ?x102151) ?x102153) ?x102155) ?x102157) ?x102159)))
 (= (- (- ?x102160 ?x102161) ?x102163) 0.0))))))))))))))
(assert
 (let ((?x102210 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x102207 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x102204 (* ?x101827 l_0_17_45)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x102202 (* ?x101824 l_0_17_44)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x102200 (* ?x101821 l_0_17_43)))
 (let ((?x102198 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x102195 (* ?x101954 l_0_17_189)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x102193 (* ?x101951 l_0_17_188)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x102191 (* ?x101948 l_0_17_187)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102189 (* ?x101935 l_0_17_153)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102187 (* ?x101932 l_0_17_152)))
 (let ((?x102194 (+ (+ (- (- (* (* (- 2.0) l_0_17_148) l_0_17_151) ?x102187) ?x102189) ?x102191) ?x102193)))
 (let ((?x102211 (- (- (+ (+ (+ (- (+ ?x102194 ?x102195) ?x102198) ?x102200) ?x102202) ?x102204) ?x102207) ?x102210)))
 (= ?x102211 0.0)))))))))))))))))))))))
(assert
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x102263 (* ?x101827 l_0_17_49)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x102261 (* ?x101824 l_0_17_48)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x102259 (* ?x101821 l_0_17_47)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x102257 (* ?x101954 l_0_17_193)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x102255 (* ?x101951 l_0_17_192)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x102253 (* ?x101948 l_0_17_191)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102251 (* ?x101935 l_0_17_157)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102249 (* ?x101932 l_0_17_156)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x102247 (* ?x101918 l_0_17_155)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x102245 (* ?x102244 l_0_17_6)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x102242 (* ?x101871 l_0_17_5)))
 (let ((?x102250 (- (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_4) ?x102242) ?x102245) ?x102247) ?x102249)))
 (let ((?x102264 (+ (+ (+ (+ (+ (+ (- ?x102250 ?x102251) ?x102253) ?x102255) ?x102257) ?x102259) ?x102261) ?x102263)))
 (= ?x102264 0.0))))))))))))))))))))))))))
(assert
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x102312 (* ?x101827 l_0_17_54)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x102310 (* ?x101824 l_0_17_53)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x102308 (* ?x101821 l_0_17_52)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x102306 (* ?x101954 l_0_17_198)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x102304 (* ?x101951 l_0_17_197)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x102302 (* ?x101948 l_0_17_196)))
 (let ((?x102299 (* 2.0 l_0_17_18)))
 (let ((?x102300 (* ?x102299 l_0_17_6)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x102297 (* ?x101941 l_0_17_5)))
 (let ((?x101938 (* 2.0 l_0_17_16)))
 (let ((?x102286 (* ?x101938 l_0_17_4)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102282 (* ?x101935 l_0_17_162)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102278 (* ?x101932 l_0_17_161)))
 (let ((?x102298 (- (- (- (- (* (* (- 2.0) l_0_17_148) l_0_17_160) ?x102278) ?x102282) ?x102286) ?x102297)))
 (let ((?x102313 (+ (+ (+ (+ (+ (+ (- ?x102298 ?x102300) ?x102302) ?x102304) ?x102306) ?x102308) ?x102310) ?x102312)))
 (= ?x102313 0.0))))))))))))))))))))))))))
(assert
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x102386 (* ?x101827 l_0_17_60)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x102384 (* ?x101824 l_0_17_59)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x102382 (* ?x101821 l_0_17_58)))
 (let ((?x102379 (* 2.0 l_0_17_24)))
 (let ((?x102380 (* ?x102379 l_0_17_6)))
 (let ((?x102045 (* 2.0 l_0_17_23)))
 (let ((?x102377 (* ?x102045 l_0_17_5)))
 (let ((?x102374 (* 2.0 l_0_17_22)))
 (let ((?x102375 (* ?x102374 l_0_17_4)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x102372 (* ?x101954 l_0_17_204)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x102370 (* ?x101951 l_0_17_203)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x102368 (* ?x101948 l_0_17_202)))
 (let ((?x102145 (* l_0_17_150 l_0_17_150)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102365 (* ?x101935 l_0_17_168)))
 (let ((?x102136 (* l_0_17_149 l_0_17_149)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102362 (* ?x101932 l_0_17_167)))
 (let ((?x102167 (* l_0_17_148 l_0_17_148)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x102359 (* ?x101918 l_0_17_166)))
 (let ((?x102345 (+ (* (/ 1.0 2.0) (* l_0_17_112 l_0_17_112)) (* (/ 1.0 2.0) (* l_0_17_113 l_0_17_113)))))
 (let ((?x102363 (- (- (- (+ ?x102345 (* (/ 1.0 2.0) (* l_0_17_114 l_0_17_114))) ?x102359) ?x102167) ?x102362)))
 (let ((?x102376 (- (+ (+ (+ (- (- (- ?x102363 ?x102136) ?x102365) ?x102145) ?x102368) ?x102370) ?x102372) ?x102375)))
 (let ((?x102390 (- (+ (+ (+ (- (- ?x102376 ?x102377) ?x102380) ?x102382) ?x102384) ?x102386) (* (* (/ 1.0 2.0) l_0_17_76) l_0_17_76))))
 (let ((?x102396 (- (- ?x102390 (* (* (/ 1.0 2.0) l_0_17_77) l_0_17_77)) (* (* (/ 1.0 2.0) l_0_17_78) l_0_17_78))))
 (= ?x102396 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x101828 (* ?x101827 l_0_17_67)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x101825 (* ?x101824 l_0_17_66)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x101822 (* ?x101821 l_0_17_65)))
 (let ((?x101814 (* 2.0 l_0_17_31)))
 (let ((?x101815 (* ?x101814 l_0_17_6)))
 (let ((?x101811 (* 2.0 l_0_17_30)))
 (let ((?x101812 (* ?x101811 l_0_17_5)))
 (let ((?x101803 (* 2.0 l_0_17_29)))
 (let ((?x101804 (* ?x101803 l_0_17_4)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x101955 (* ?x101954 l_0_17_211)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x101952 (* ?x101951 l_0_17_210)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x101949 (* ?x101948 l_0_17_209)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x101936 (* ?x101935 l_0_17_175)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x101933 (* ?x101932 l_0_17_174)))
 (let ((?x102419 (+ (+ (- (- (* (* (- 2.0) l_0_17_148) l_0_17_173) ?x101933) ?x101936) ?x101949) ?x101952)))
 (let ((?x102426 (+ (+ (+ (- (- (- (+ ?x102419 ?x101955) ?x101804) ?x101812) ?x101815) ?x101822) ?x101825) ?x101828)))
 (= ?x102426 0.0))))))))))))))))))))))))))
(assert
 (let ((?x102449 (* l_0_17_9 l_0_17_9)))
 (let ((?x102447 (* l_0_17_8 l_0_17_8)))
 (let ((?x102445 (* l_0_17_7 l_0_17_7)))
 (let ((?x102443 (* l_0_17_46 l_0_17_46)))
 (let ((?x102441 (* l_0_17_45 l_0_17_45)))
 (let ((?x102439 (* l_0_17_44 l_0_17_44)))
 (let ((?x102437 (* l_0_17_43 l_0_17_43)))
 (let ((?x102435 (* l_0_17_190 l_0_17_190)))
 (let ((?x102433 (* l_0_17_189 l_0_17_189)))
 (let ((?x102431 (* l_0_17_188 l_0_17_188)))
 (let ((?x80751 (* l_0_17_187 l_0_17_187)))
 (let ((?x80755 (* l_0_17_154 l_0_17_154)))
 (let ((?x80753 (* l_0_17_153 l_0_17_153)))
 (let ((?x60555 (* l_0_17_152 l_0_17_152)))
 (let ((?x80765 (- (- (* (- l_0_17_10) l_0_17_10) (* l_0_17_151 l_0_17_151)) ?x60555)))
 (let ((?x102438 (+ (+ (+ (+ (+ (- (- ?x80765 ?x80753) ?x80755) ?x80751) ?x102431) ?x102433) ?x102435) ?x102437)))
 (= (- (- (- (+ (+ (+ ?x102438 ?x102439) ?x102441) ?x102443) ?x102445) ?x102447) ?x102449) 0.0))))))))))))))))))
(assert
 (let ((?x102511 (* 2.0 l_0_17_46)))
 (let ((?x102512 (* ?x102511 l_0_17_50)))
 (let ((?x102508 (* 2.0 l_0_17_45)))
 (let ((?x102509 (* ?x102508 l_0_17_49)))
 (let ((?x102505 (* 2.0 l_0_17_44)))
 (let ((?x102506 (* ?x102505 l_0_17_48)))
 (let ((?x102502 (* 2.0 l_0_17_43)))
 (let ((?x102503 (* ?x102502 l_0_17_47)))
 (let ((?x102499 (* 2.0 l_0_17_190)))
 (let ((?x102500 (* ?x102499 l_0_17_194)))
 (let ((?x102496 (* 2.0 l_0_17_189)))
 (let ((?x102497 (* ?x102496 l_0_17_193)))
 (let ((?x102493 (* 2.0 l_0_17_188)))
 (let ((?x102494 (* ?x102493 l_0_17_192)))
 (let ((?x102490 (* 2.0 l_0_17_187)))
 (let ((?x102491 (* ?x102490 l_0_17_191)))
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102488 (* ?x102487 l_0_17_158)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102485 (* ?x102484 l_0_17_157)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102482 (* ?x102481 l_0_17_156)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x102479 (* ?x102478 l_0_17_155)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x102476 (* ?x102244 l_0_17_9)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x102474 (* ?x101871 l_0_17_8)))
 (let ((?x102471 (* 2.0 l_0_17_11)))
 (let ((?x102472 (* ?x102471 l_0_17_7)))
 (let ((?x102480 (- (- (- (- (* (* (- 2.0) l_0_17_10) l_0_17_14) ?x102472) ?x102474) ?x102476) ?x102479)))
 (let ((?x102501 (+ (+ (+ (+ (- (- (- ?x102480 ?x102482) ?x102485) ?x102488) ?x102491) ?x102494) ?x102497) ?x102500)))
 (= (+ (+ (+ (+ ?x102501 ?x102503) ?x102506) ?x102509) ?x102512) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x102511 (* 2.0 l_0_17_46)))
 (let ((?x102574 (* ?x102511 l_0_17_55)))
 (let ((?x102508 (* 2.0 l_0_17_45)))
 (let ((?x102572 (* ?x102508 l_0_17_54)))
 (let ((?x102505 (* 2.0 l_0_17_44)))
 (let ((?x102570 (* ?x102505 l_0_17_53)))
 (let ((?x102502 (* 2.0 l_0_17_43)))
 (let ((?x102568 (* ?x102502 l_0_17_52)))
 (let ((?x102499 (* 2.0 l_0_17_190)))
 (let ((?x102566 (* ?x102499 l_0_17_199)))
 (let ((?x102496 (* 2.0 l_0_17_189)))
 (let ((?x102564 (* ?x102496 l_0_17_198)))
 (let ((?x102493 (* 2.0 l_0_17_188)))
 (let ((?x102562 (* ?x102493 l_0_17_197)))
 (let ((?x102490 (* 2.0 l_0_17_187)))
 (let ((?x102560 (* ?x102490 l_0_17_196)))
 (let ((?x102299 (* 2.0 l_0_17_18)))
 (let ((?x102558 (* ?x102299 l_0_17_9)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x102556 (* ?x101941 l_0_17_8)))
 (let ((?x101938 (* 2.0 l_0_17_16)))
 (let ((?x102554 (* ?x101938 l_0_17_7)))
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102541 (* ?x102487 l_0_17_163)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102537 (* ?x102484 l_0_17_162)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102533 (* ?x102481 l_0_17_161)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x33937 (* ?x102478 l_0_17_160)))
 (let ((?x102542 (- (- (- (- (* (* (- 2.0) l_0_17_10) l_0_17_19) ?x33937) ?x102533) ?x102537) ?x102541)))
 (let ((?x102567 (+ (+ (+ (+ (- (- (- ?x102542 ?x102554) ?x102556) ?x102558) ?x102560) ?x102562) ?x102564) ?x102566)))
 (= (+ (+ (+ (+ ?x102567 ?x102568) ?x102570) ?x102572) ?x102574) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x102511 (* 2.0 l_0_17_46)))
 (let ((?x102644 (* ?x102511 l_0_17_61)))
 (let ((?x102508 (* 2.0 l_0_17_45)))
 (let ((?x102642 (* ?x102508 l_0_17_60)))
 (let ((?x102505 (* 2.0 l_0_17_44)))
 (let ((?x102640 (* ?x102505 l_0_17_59)))
 (let ((?x102502 (* 2.0 l_0_17_43)))
 (let ((?x102638 (* ?x102502 l_0_17_58)))
 (let ((?x102379 (* 2.0 l_0_17_24)))
 (let ((?x102636 (* ?x102379 l_0_17_9)))
 (let ((?x102045 (* 2.0 l_0_17_23)))
 (let ((?x102634 (* ?x102045 l_0_17_8)))
 (let ((?x102374 (* 2.0 l_0_17_22)))
 (let ((?x102632 (* ?x102374 l_0_17_7)))
 (let ((?x102499 (* 2.0 l_0_17_190)))
 (let ((?x102630 (* ?x102499 l_0_17_205)))
 (let ((?x102496 (* 2.0 l_0_17_189)))
 (let ((?x102628 (* ?x102496 l_0_17_204)))
 (let ((?x102493 (* 2.0 l_0_17_188)))
 (let ((?x102626 (* ?x102493 l_0_17_203)))
 (let ((?x102490 (* 2.0 l_0_17_187)))
 (let ((?x102624 (* ?x102490 l_0_17_202)))
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102622 (* ?x102487 l_0_17_169)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102620 (* ?x102484 l_0_17_168)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102618 (* ?x102481 l_0_17_167)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x102616 (* ?x102478 l_0_17_166)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102189 (* ?x101935 l_0_17_153)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102187 (* ?x101932 l_0_17_152)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x102612 (* ?x101918 l_0_17_151)))
 (let ((?x60670 (+ (* (* (- 2.0) l_0_17_10) l_0_17_25) (* (* 1.0 l_0_17_112) l_0_17_115))))
 (let ((?x102611 (+ (+ ?x60670 (* (* 1.0 l_0_17_113) l_0_17_116)) (* (* 1.0 l_0_17_114) l_0_17_117))))
 (let ((?x102623 (- (- (- (- (- (- (- ?x102611 ?x102612) ?x102187) ?x102189) ?x102616) ?x102618) ?x102620) ?x102622)))
 (let ((?x102637 (- (- (- (+ (+ (+ (+ ?x102623 ?x102624) ?x102626) ?x102628) ?x102630) ?x102632) ?x102634) ?x102636)))
 (let ((?x102648 (- (+ (+ (+ (+ ?x102637 ?x102638) ?x102640) ?x102642) ?x102644) (* (* 1.0 l_0_17_76) l_0_17_79))))
 (let ((?x102654 (- (- ?x102648 (* (* 1.0 l_0_17_77) l_0_17_80)) (* (* 1.0 l_0_17_78) l_0_17_81))))
 (= ?x102654 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x102511 (* 2.0 l_0_17_46)))
 (let ((?x102741 (* ?x102511 l_0_17_68)))
 (let ((?x102508 (* 2.0 l_0_17_45)))
 (let ((?x102739 (* ?x102508 l_0_17_67)))
 (let ((?x102505 (* 2.0 l_0_17_44)))
 (let ((?x102737 (* ?x102505 l_0_17_66)))
 (let ((?x102502 (* 2.0 l_0_17_43)))
 (let ((?x102735 (* ?x102502 l_0_17_65)))
 (let ((?x101814 (* 2.0 l_0_17_31)))
 (let ((?x102733 (* ?x101814 l_0_17_9)))
 (let ((?x101811 (* 2.0 l_0_17_30)))
 (let ((?x102731 (* ?x101811 l_0_17_8)))
 (let ((?x101803 (* 2.0 l_0_17_29)))
 (let ((?x102729 (* ?x101803 l_0_17_7)))
 (let ((?x102499 (* 2.0 l_0_17_190)))
 (let ((?x102727 (* ?x102499 l_0_17_212)))
 (let ((?x102496 (* 2.0 l_0_17_189)))
 (let ((?x102725 (* ?x102496 l_0_17_211)))
 (let ((?x102493 (* 2.0 l_0_17_188)))
 (let ((?x102723 (* ?x102493 l_0_17_210)))
 (let ((?x102490 (* 2.0 l_0_17_187)))
 (let ((?x102721 (* ?x102490 l_0_17_209)))
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102719 (* ?x102487 l_0_17_176)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102717 (* ?x102484 l_0_17_175)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102715 (* ?x102481 l_0_17_174)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x102713 (* ?x102478 l_0_17_173)))
 (let ((?x102720 (- (- (- (- (* (* (- 2.0) l_0_17_10) l_0_17_32) ?x102713) ?x102715) ?x102717) ?x102719)))
 (let ((?x102734 (- (- (- (+ (+ (+ (+ ?x102720 ?x102721) ?x102723) ?x102725) ?x102727) ?x102729) ?x102731) ?x102733)))
 (= (+ (+ (+ (+ ?x102734 ?x102735) ?x102737) ?x102739) ?x102741) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x102818 (* l_0_17_51 l_0_17_51)))
 (let ((?x102816 (* l_0_17_50 l_0_17_50)))
 (let ((?x102814 (* l_0_17_49 l_0_17_49)))
 (let ((?x102812 (* l_0_17_48 l_0_17_48)))
 (let ((?x102810 (* l_0_17_47 l_0_17_47)))
 (let ((?x102808 (* l_0_17_195 l_0_17_195)))
 (let ((?x102806 (* l_0_17_194 l_0_17_194)))
 (let ((?x102804 (* l_0_17_193 l_0_17_193)))
 (let ((?x102802 (* l_0_17_192 l_0_17_192)))
 (let ((?x102800 (* l_0_17_191 l_0_17_191)))
 (let ((?x102798 (* l_0_17_159 l_0_17_159)))
 (let ((?x102796 (* l_0_17_158 l_0_17_158)))
 (let ((?x102794 (* l_0_17_157 l_0_17_157)))
 (let ((?x102792 (* l_0_17_156 l_0_17_156)))
 (let ((?x102790 (* l_0_17_155 l_0_17_155)))
 (let ((?x102788 (* l_0_17_15 l_0_17_15)))
 (let ((?x102786 (* l_0_17_14 l_0_17_14)))
 (let ((?x102784 (* l_0_17_13 l_0_17_13)))
 (let ((?x102785 (- (- (* (- l_0_17_11) l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x102784)))
 (let ((?x102799 (- (- (- (- (- (- (- ?x102785 ?x102786) ?x102788) ?x102790) ?x102792) ?x102794) ?x102796) ?x102798)))
 (let ((?x102813 (+ (+ (+ (+ (+ (+ (+ ?x102799 ?x102800) ?x102802) ?x102804) ?x102806) ?x102808) ?x102810) ?x102812)))
 (= (+ (+ (+ ?x102813 ?x102814) ?x102816) ?x102818) 0.0)))))))))))))))))))))))
(assert
 (let ((?x102888 (* 2.0 l_0_17_51)))
 (let ((?x102889 (* ?x102888 l_0_17_56)))
 (let ((?x102885 (* 2.0 l_0_17_50)))
 (let ((?x102886 (* ?x102885 l_0_17_55)))
 (let ((?x102882 (* 2.0 l_0_17_49)))
 (let ((?x102883 (* ?x102882 l_0_17_54)))
 (let ((?x102879 (* 2.0 l_0_17_48)))
 (let ((?x102880 (* ?x102879 l_0_17_53)))
 (let ((?x102876 (* 2.0 l_0_17_47)))
 (let ((?x102877 (* ?x102876 l_0_17_52)))
 (let ((?x102873 (* 2.0 l_0_17_195)))
 (let ((?x102874 (* ?x102873 l_0_17_200)))
 (let ((?x102870 (* 2.0 l_0_17_194)))
 (let ((?x102871 (* ?x102870 l_0_17_199)))
 (let ((?x102867 (* 2.0 l_0_17_193)))
 (let ((?x102868 (* ?x102867 l_0_17_198)))
 (let ((?x102864 (* 2.0 l_0_17_192)))
 (let ((?x102865 (* ?x102864 l_0_17_197)))
 (let ((?x102861 (* 2.0 l_0_17_191)))
 (let ((?x102862 (* ?x102861 l_0_17_196)))
 (let ((?x102858 (* 2.0 l_0_17_159)))
 (let ((?x102859 (* ?x102858 l_0_17_164)))
 (let ((?x102855 (* 2.0 l_0_17_158)))
 (let ((?x102856 (* ?x102855 l_0_17_163)))
 (let ((?x102852 (* 2.0 l_0_17_157)))
 (let ((?x102853 (* ?x102852 l_0_17_162)))
 (let ((?x102849 (* 2.0 l_0_17_156)))
 (let ((?x102850 (* ?x102849 l_0_17_161)))
 (let ((?x102846 (* 2.0 l_0_17_155)))
 (let ((?x102847 (* ?x102846 l_0_17_160)))
 (let ((?x102843 (* 2.0 l_0_17_15)))
 (let ((?x102844 (* ?x102843 l_0_17_20)))
 (let ((?x102840 (* 2.0 l_0_17_14)))
 (let ((?x102841 (* ?x102840 l_0_17_19)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x102838 (* ?x102244 l_0_17_18)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x102836 (* ?x101871 l_0_17_17)))
 (let ((?x102845 (- (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_16) ?x102836) ?x102838) ?x102841) ?x102844)))
 (let ((?x102866 (+ (+ (- (- (- (- (- ?x102845 ?x102847) ?x102850) ?x102853) ?x102856) ?x102859) ?x102862) ?x102865)))
 (let ((?x102887 (+ (+ (+ (+ (+ (+ (+ ?x102866 ?x102868) ?x102871) ?x102874) ?x102877) ?x102880) ?x102883) ?x102886)))
 (= (+ ?x102887 ?x102889) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x102888 (* 2.0 l_0_17_51)))
 (let ((?x102984 (* ?x102888 l_0_17_62)))
 (let ((?x102885 (* 2.0 l_0_17_50)))
 (let ((?x102982 (* ?x102885 l_0_17_61)))
 (let ((?x102882 (* 2.0 l_0_17_49)))
 (let ((?x102980 (* ?x102882 l_0_17_60)))
 (let ((?x102879 (* 2.0 l_0_17_48)))
 (let ((?x102978 (* ?x102879 l_0_17_59)))
 (let ((?x102876 (* 2.0 l_0_17_47)))
 (let ((?x102976 (* ?x102876 l_0_17_58)))
 (let ((?x102873 (* 2.0 l_0_17_195)))
 (let ((?x102974 (* ?x102873 l_0_17_206)))
 (let ((?x102870 (* 2.0 l_0_17_194)))
 (let ((?x102972 (* ?x102870 l_0_17_205)))
 (let ((?x102867 (* 2.0 l_0_17_193)))
 (let ((?x102970 (* ?x102867 l_0_17_204)))
 (let ((?x102864 (* 2.0 l_0_17_192)))
 (let ((?x102968 (* ?x102864 l_0_17_203)))
 (let ((?x102861 (* 2.0 l_0_17_191)))
 (let ((?x102966 (* ?x102861 l_0_17_202)))
 (let ((?x102858 (* 2.0 l_0_17_159)))
 (let ((?x102964 (* ?x102858 l_0_17_170)))
 (let ((?x102855 (* 2.0 l_0_17_158)))
 (let ((?x102962 (* ?x102855 l_0_17_169)))
 (let ((?x102852 (* 2.0 l_0_17_157)))
 (let ((?x102960 (* ?x102852 l_0_17_168)))
 (let ((?x102849 (* 2.0 l_0_17_156)))
 (let ((?x102958 (* ?x102849 l_0_17_167)))
 (let ((?x102846 (* 2.0 l_0_17_155)))
 (let ((?x102956 (* ?x102846 l_0_17_166)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102251 (* ?x101935 l_0_17_157)))
 (let ((?x102843 (* 2.0 l_0_17_15)))
 (let ((?x102953 (* ?x102843 l_0_17_26)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102249 (* ?x101932 l_0_17_156)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x102247 (* ?x101918 l_0_17_155)))
 (let ((?x102840 (* 2.0 l_0_17_14)))
 (let ((?x102949 (* ?x102840 l_0_17_25)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x102934 (* ?x102244 l_0_17_24)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x102930 (* ?x101871 l_0_17_23)))
 (let ((?x102920 (+ (* (* (- 2.0) l_0_17_11) l_0_17_22) (* (* 1.0 l_0_17_112) l_0_17_119))))
 (let ((?x102928 (+ (+ ?x102920 (* (* 1.0 l_0_17_113) l_0_17_120)) (* (* 1.0 l_0_17_114) l_0_17_121))))
 (let ((?x102955 (- (- (- (- (- (- (- ?x102928 ?x102930) ?x102934) ?x102949) ?x102247) ?x102249) ?x102953) ?x102251)))
 (let ((?x102969 (+ (+ (- (- (- (- (- ?x102955 ?x102956) ?x102958) ?x102960) ?x102962) ?x102964) ?x102966) ?x102968)))
 (let ((?x102983 (+ (+ (+ (+ (+ (+ (+ ?x102969 ?x102970) ?x102972) ?x102974) ?x102976) ?x102978) ?x102980) ?x102982)))
 (let ((?x102989 (- (- (+ ?x102983 ?x102984) (* (* 1.0 l_0_17_76) l_0_17_83)) (* (* 1.0 l_0_17_77) l_0_17_84))))
 (= (- ?x102989 (* (* 1.0 l_0_17_78) l_0_17_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x102888 (* 2.0 l_0_17_51)))
 (let ((?x103079 (* ?x102888 l_0_17_69)))
 (let ((?x102885 (* 2.0 l_0_17_50)))
 (let ((?x103077 (* ?x102885 l_0_17_68)))
 (let ((?x102882 (* 2.0 l_0_17_49)))
 (let ((?x103075 (* ?x102882 l_0_17_67)))
 (let ((?x102879 (* 2.0 l_0_17_48)))
 (let ((?x103073 (* ?x102879 l_0_17_66)))
 (let ((?x102876 (* 2.0 l_0_17_47)))
 (let ((?x103071 (* ?x102876 l_0_17_65)))
 (let ((?x102873 (* 2.0 l_0_17_195)))
 (let ((?x103069 (* ?x102873 l_0_17_213)))
 (let ((?x102870 (* 2.0 l_0_17_194)))
 (let ((?x103067 (* ?x102870 l_0_17_212)))
 (let ((?x102867 (* 2.0 l_0_17_193)))
 (let ((?x103065 (* ?x102867 l_0_17_211)))
 (let ((?x102864 (* 2.0 l_0_17_192)))
 (let ((?x103063 (* ?x102864 l_0_17_210)))
 (let ((?x102861 (* 2.0 l_0_17_191)))
 (let ((?x103061 (* ?x102861 l_0_17_209)))
 (let ((?x102858 (* 2.0 l_0_17_159)))
 (let ((?x103059 (* ?x102858 l_0_17_177)))
 (let ((?x102855 (* 2.0 l_0_17_158)))
 (let ((?x103057 (* ?x102855 l_0_17_176)))
 (let ((?x102852 (* 2.0 l_0_17_157)))
 (let ((?x103055 (* ?x102852 l_0_17_175)))
 (let ((?x102849 (* 2.0 l_0_17_156)))
 (let ((?x103053 (* ?x102849 l_0_17_174)))
 (let ((?x102846 (* 2.0 l_0_17_155)))
 (let ((?x103051 (* ?x102846 l_0_17_173)))
 (let ((?x102843 (* 2.0 l_0_17_15)))
 (let ((?x103049 (* ?x102843 l_0_17_33)))
 (let ((?x102840 (* 2.0 l_0_17_14)))
 (let ((?x103047 (* ?x102840 l_0_17_32)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x103045 (* ?x102244 l_0_17_31)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x103043 (* ?x101871 l_0_17_30)))
 (let ((?x103050 (- (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_29) ?x103043) ?x103045) ?x103047) ?x103049)))
 (let ((?x103064 (+ (+ (- (- (- (- (- ?x103050 ?x103051) ?x103053) ?x103055) ?x103057) ?x103059) ?x103061) ?x103063)))
 (let ((?x103078 (+ (+ (+ (+ (+ (+ (+ ?x103064 ?x103065) ?x103067) ?x103069) ?x103071) ?x103073) ?x103075) ?x103077)))
 (= (+ ?x103078 ?x103079) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103171 (* l_0_17_57 l_0_17_57)))
 (let ((?x103169 (* l_0_17_56 l_0_17_56)))
 (let ((?x103167 (* l_0_17_55 l_0_17_55)))
 (let ((?x103165 (* l_0_17_54 l_0_17_54)))
 (let ((?x103163 (* l_0_17_53 l_0_17_53)))
 (let ((?x103161 (* l_0_17_52 l_0_17_52)))
 (let ((?x103159 (* l_0_17_21 l_0_17_21)))
 (let ((?x103157 (* l_0_17_201 l_0_17_201)))
 (let ((?x103155 (* l_0_17_200 l_0_17_200)))
 (let ((?x103153 (* l_0_17_20 l_0_17_20)))
 (let ((?x103151 (* l_0_17_199 l_0_17_199)))
 (let ((?x103149 (* l_0_17_198 l_0_17_198)))
 (let ((?x103147 (* l_0_17_197 l_0_17_197)))
 (let ((?x103145 (* l_0_17_196 l_0_17_196)))
 (let ((?x103143 (* l_0_17_19 l_0_17_19)))
 (let ((?x103141 (* l_0_17_18 l_0_17_18)))
 (let ((?x103139 (* l_0_17_17 l_0_17_17)))
 (let ((?x103137 (* l_0_17_165 l_0_17_165)))
 (let ((?x103135 (* l_0_17_164 l_0_17_164)))
 (let ((?x103133 (* l_0_17_163 l_0_17_163)))
 (let ((?x103131 (* l_0_17_162 l_0_17_162)))
 (let ((?x103129 (* l_0_17_161 l_0_17_161)))
 (let ((?x103130 (- (- (* (- l_0_17_16) l_0_17_16) (* l_0_17_160 l_0_17_160)) ?x103129)))
 (let ((?x103144 (- (- (- (- (- (- (- ?x103130 ?x103131) ?x103133) ?x103135) ?x103137) ?x103139) ?x103141) ?x103143)))
 (let ((?x103158 (+ (+ (- (+ (+ (+ (+ ?x103144 ?x103145) ?x103147) ?x103149) ?x103151) ?x103153) ?x103155) ?x103157)))
 (let ((?x103172 (+ (+ (+ (+ (+ (+ (- ?x103158 ?x103159) ?x103161) ?x103163) ?x103165) ?x103167) ?x103169) ?x103171)))
 (= ?x103172 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x103291 (* 2.0 l_0_17_57)))
 (let ((?x103292 (* ?x103291 l_0_17_63)))
 (let ((?x103288 (* 2.0 l_0_17_56)))
 (let ((?x103289 (* ?x103288 l_0_17_62)))
 (let ((?x103285 (* 2.0 l_0_17_55)))
 (let ((?x103286 (* ?x103285 l_0_17_61)))
 (let ((?x103282 (* 2.0 l_0_17_54)))
 (let ((?x103283 (* ?x103282 l_0_17_60)))
 (let ((?x103279 (* 2.0 l_0_17_53)))
 (let ((?x103280 (* ?x103279 l_0_17_59)))
 (let ((?x103276 (* 2.0 l_0_17_52)))
 (let ((?x103277 (* ?x103276 l_0_17_58)))
 (let ((?x103273 (* 2.0 l_0_17_21)))
 (let ((?x103274 (* ?x103273 l_0_17_27)))
 (let ((?x103270 (* 2.0 l_0_17_201)))
 (let ((?x103271 (* ?x103270 l_0_17_207)))
 (let ((?x103267 (* 2.0 l_0_17_200)))
 (let ((?x103268 (* ?x103267 l_0_17_206)))
 (let ((?x103264 (* 2.0 l_0_17_20)))
 (let ((?x103265 (* ?x103264 l_0_17_26)))
 (let ((?x103261 (* 2.0 l_0_17_199)))
 (let ((?x103262 (* ?x103261 l_0_17_205)))
 (let ((?x103258 (* 2.0 l_0_17_198)))
 (let ((?x103259 (* ?x103258 l_0_17_204)))
 (let ((?x103255 (* 2.0 l_0_17_197)))
 (let ((?x103256 (* ?x103255 l_0_17_203)))
 (let ((?x103252 (* 2.0 l_0_17_196)))
 (let ((?x103253 (* ?x103252 l_0_17_202)))
 (let ((?x103249 (* 2.0 l_0_17_19)))
 (let ((?x103250 (* ?x103249 l_0_17_25)))
 (let ((?x102299 (* 2.0 l_0_17_18)))
 (let ((?x103247 (* ?x102299 l_0_17_24)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x103245 (* ?x101941 l_0_17_23)))
 (let ((?x103242 (* 2.0 l_0_17_165)))
 (let ((?x103243 (* ?x103242 l_0_17_171)))
 (let ((?x103239 (* 2.0 l_0_17_164)))
 (let ((?x103240 (* ?x103239 l_0_17_170)))
 (let ((?x103236 (* 2.0 l_0_17_163)))
 (let ((?x103237 (* ?x103236 l_0_17_169)))
 (let ((?x103233 (* 2.0 l_0_17_162)))
 (let ((?x103234 (* ?x103233 l_0_17_168)))
 (let ((?x103230 (* 2.0 l_0_17_161)))
 (let ((?x103231 (* ?x103230 l_0_17_167)))
 (let ((?x103227 (* 2.0 l_0_17_160)))
 (let ((?x103228 (* ?x103227 l_0_17_166)))
 (let ((?x101938 (* 2.0 l_0_17_16)))
 (let ((?x103225 (* ?x101938 l_0_17_22)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102282 (* ?x101935 l_0_17_162)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102278 (* ?x101932 l_0_17_161)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x103221 (* ?x101918 l_0_17_160)))
 (let ((?x103218 (+ (* (* 1.0 l_0_17_112) l_0_17_124) (* (* 1.0 l_0_17_113) l_0_17_125))))
 (let ((?x103224 (- (- (- (+ ?x103218 (* (* 1.0 l_0_17_114) l_0_17_126)) ?x103221) ?x102278) ?x102282)))
 (let ((?x103244 (- (- (- (- (- (- (- ?x103224 ?x103225) ?x103228) ?x103231) ?x103234) ?x103237) ?x103240) ?x103243)))
 (let ((?x103263 (+ (+ (+ (+ (- (- (- ?x103244 ?x103245) ?x103247) ?x103250) ?x103253) ?x103256) ?x103259) ?x103262)))
 (let ((?x103284 (+ (+ (+ (- (+ (+ (- ?x103263 ?x103265) ?x103268) ?x103271) ?x103274) ?x103277) ?x103280) ?x103283)))
 (let ((?x103295 (- (+ (+ (+ ?x103284 ?x103286) ?x103289) ?x103292) (* (* 1.0 l_0_17_76) l_0_17_88))))
 (let ((?x103299 (- (- ?x103295 (* (* 1.0 l_0_17_77) l_0_17_89)) (* (* 1.0 l_0_17_78) l_0_17_90))))
 (= ?x103299 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103291 (* 2.0 l_0_17_57)))
 (let ((?x103416 (* ?x103291 l_0_17_70)))
 (let ((?x103288 (* 2.0 l_0_17_56)))
 (let ((?x103414 (* ?x103288 l_0_17_69)))
 (let ((?x103285 (* 2.0 l_0_17_55)))
 (let ((?x103412 (* ?x103285 l_0_17_68)))
 (let ((?x103282 (* 2.0 l_0_17_54)))
 (let ((?x103410 (* ?x103282 l_0_17_67)))
 (let ((?x103279 (* 2.0 l_0_17_53)))
 (let ((?x103408 (* ?x103279 l_0_17_66)))
 (let ((?x103276 (* 2.0 l_0_17_52)))
 (let ((?x103406 (* ?x103276 l_0_17_65)))
 (let ((?x103273 (* 2.0 l_0_17_21)))
 (let ((?x103404 (* ?x103273 l_0_17_34)))
 (let ((?x103270 (* 2.0 l_0_17_201)))
 (let ((?x103402 (* ?x103270 l_0_17_214)))
 (let ((?x103267 (* 2.0 l_0_17_200)))
 (let ((?x103400 (* ?x103267 l_0_17_213)))
 (let ((?x103264 (* 2.0 l_0_17_20)))
 (let ((?x103398 (* ?x103264 l_0_17_33)))
 (let ((?x103261 (* 2.0 l_0_17_199)))
 (let ((?x103396 (* ?x103261 l_0_17_212)))
 (let ((?x103258 (* 2.0 l_0_17_198)))
 (let ((?x103394 (* ?x103258 l_0_17_211)))
 (let ((?x103255 (* 2.0 l_0_17_197)))
 (let ((?x103392 (* ?x103255 l_0_17_210)))
 (let ((?x103252 (* 2.0 l_0_17_196)))
 (let ((?x103390 (* ?x103252 l_0_17_209)))
 (let ((?x103249 (* 2.0 l_0_17_19)))
 (let ((?x103388 (* ?x103249 l_0_17_32)))
 (let ((?x102299 (* 2.0 l_0_17_18)))
 (let ((?x103386 (* ?x102299 l_0_17_31)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x103384 (* ?x101941 l_0_17_30)))
 (let ((?x103242 (* 2.0 l_0_17_165)))
 (let ((?x103382 (* ?x103242 l_0_17_178)))
 (let ((?x103239 (* 2.0 l_0_17_164)))
 (let ((?x103380 (* ?x103239 l_0_17_177)))
 (let ((?x103236 (* 2.0 l_0_17_163)))
 (let ((?x103378 (* ?x103236 l_0_17_176)))
 (let ((?x103233 (* 2.0 l_0_17_162)))
 (let ((?x103376 (* ?x103233 l_0_17_175)))
 (let ((?x103230 (* 2.0 l_0_17_161)))
 (let ((?x103374 (* ?x103230 l_0_17_174)))
 (let ((?x103227 (* 2.0 l_0_17_160)))
 (let ((?x103372 (* ?x103227 l_0_17_173)))
 (let ((?x103379 (- (- (- (- (* (* (- 2.0) l_0_17_16) l_0_17_29) ?x103372) ?x103374) ?x103376) ?x103378)))
 (let ((?x103393 (+ (+ (- (- (- (- (- ?x103379 ?x103380) ?x103382) ?x103384) ?x103386) ?x103388) ?x103390) ?x103392)))
 (let ((?x103407 (+ (- (+ (+ (- (+ (+ ?x103393 ?x103394) ?x103396) ?x103398) ?x103400) ?x103402) ?x103404) ?x103406)))
 (= (+ (+ (+ (+ (+ ?x103407 ?x103408) ?x103410) ?x103412) ?x103414) ?x103416) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103524 (* l_0_17_64 l_0_17_64)))
 (let ((?x103522 (* l_0_17_63 l_0_17_63)))
 (let ((?x103520 (* l_0_17_62 l_0_17_62)))
 (let ((?x103518 (* l_0_17_61 l_0_17_61)))
 (let ((?x103516 (* l_0_17_60 l_0_17_60)))
 (let ((?x103514 (* l_0_17_59 l_0_17_59)))
 (let ((?x103512 (* l_0_17_58 l_0_17_58)))
 (let ((?x103510 (* l_0_17_28 l_0_17_28)))
 (let ((?x103508 (* l_0_17_27 l_0_17_27)))
 (let ((?x103506 (* l_0_17_26 l_0_17_26)))
 (let ((?x103504 (* l_0_17_25 l_0_17_25)))
 (let ((?x103502 (* l_0_17_24 l_0_17_24)))
 (let ((?x103500 (* l_0_17_23 l_0_17_23)))
 (let ((?x103498 (* l_0_17_22 l_0_17_22)))
 (let ((?x103496 (* l_0_17_208 l_0_17_208)))
 (let ((?x103494 (* l_0_17_207 l_0_17_207)))
 (let ((?x103492 (* l_0_17_206 l_0_17_206)))
 (let ((?x103490 (* l_0_17_205 l_0_17_205)))
 (let ((?x103488 (* l_0_17_204 l_0_17_204)))
 (let ((?x103486 (* l_0_17_203 l_0_17_203)))
 (let ((?x103484 (* l_0_17_202 l_0_17_202)))
 (let ((?x103482 (* l_0_17_172 l_0_17_172)))
 (let ((?x103480 (* l_0_17_171 l_0_17_171)))
 (let ((?x103478 (* l_0_17_170 l_0_17_170)))
 (let ((?x103476 (* l_0_17_169 l_0_17_169)))
 (let ((?x103474 (* l_0_17_168 l_0_17_168)))
 (let ((?x103472 (* l_0_17_167 l_0_17_167)))
 (let ((?x103470 (* l_0_17_166 l_0_17_166)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102365 (* ?x101935 l_0_17_168)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102362 (* ?x101932 l_0_17_167)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x102359 (* ?x101918 l_0_17_166)))
 (let ((?x61079 (+ (* (* 1.0 l_0_17_112) l_0_17_130) (* (* 1.0 l_0_17_113) l_0_17_131))))
 (let ((?x103469 (- (- (- (+ ?x61079 (* (* 1.0 l_0_17_114) l_0_17_132)) ?x102359) ?x102362) ?x102365)))
 (let ((?x103483 (- (- (- (- (- (- (- ?x103469 ?x103470) ?x103472) ?x103474) ?x103476) ?x103478) ?x103480) ?x103482)))
 (let ((?x103497 (+ (+ (+ (+ (+ (+ (+ ?x103483 ?x103484) ?x103486) ?x103488) ?x103490) ?x103492) ?x103494) ?x103496)))
 (let ((?x103511 (- (- (- (- (- (- (- ?x103497 ?x103498) ?x103500) ?x103502) ?x103504) ?x103506) ?x103508) ?x103510)))
 (let ((?x103525 (+ (+ (+ (+ (+ (+ (+ ?x103511 ?x103512) ?x103514) ?x103516) ?x103518) ?x103520) ?x103522) ?x103524)))
 (let ((?x103529 (- (- ?x103525 (* (* 1.0 l_0_17_76) l_0_17_94)) (* (* 1.0 l_0_17_77) l_0_17_95))))
 (= (- ?x103529 (* (* 1.0 l_0_17_78) l_0_17_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103676 (* (* 2.0 l_0_17_64) l_0_17_71)))
 (let ((?x103673 (* (* 2.0 l_0_17_63) l_0_17_70)))
 (let ((?x103670 (* (* 2.0 l_0_17_62) l_0_17_69)))
 (let ((?x103667 (* (* 2.0 l_0_17_61) l_0_17_68)))
 (let ((?x103664 (* (* 2.0 l_0_17_60) l_0_17_67)))
 (let ((?x103661 (* (* 2.0 l_0_17_59) l_0_17_66)))
 (let ((?x103658 (* (* 2.0 l_0_17_58) l_0_17_65)))
 (let ((?x103655 (* (* 2.0 l_0_17_28) l_0_17_35)))
 (let ((?x103652 (* (* 2.0 l_0_17_27) l_0_17_34)))
 (let ((?x103649 (* (* 2.0 l_0_17_26) l_0_17_33)))
 (let ((?x103646 (* (* 2.0 l_0_17_25) l_0_17_32)))
 (let ((?x102379 (* 2.0 l_0_17_24)))
 (let ((?x103643 (* ?x102379 l_0_17_31)))
 (let ((?x102045 (* 2.0 l_0_17_23)))
 (let ((?x103641 (* ?x102045 l_0_17_30)))
 (let ((?x102374 (* 2.0 l_0_17_22)))
 (let ((?x103639 (* ?x102374 l_0_17_29)))
 (let ((?x103637 (* (* 2.0 l_0_17_208) l_0_17_215)))
 (let ((?x103634 (* (* 2.0 l_0_17_207) l_0_17_214)))
 (let ((?x103631 (* (* 2.0 l_0_17_206) l_0_17_213)))
 (let ((?x103628 (* (* 2.0 l_0_17_205) l_0_17_212)))
 (let ((?x103625 (* (* 2.0 l_0_17_204) l_0_17_211)))
 (let ((?x103622 (* (* 2.0 l_0_17_203) l_0_17_210)))
 (let ((?x103619 (* (* 2.0 l_0_17_202) l_0_17_209)))
 (let ((?x103616 (* (* 2.0 l_0_17_172) l_0_17_179)))
 (let ((?x103613 (* (* 2.0 l_0_17_171) l_0_17_178)))
 (let ((?x103610 (* (* 2.0 l_0_17_170) l_0_17_177)))
 (let ((?x103607 (* (* 2.0 l_0_17_169) l_0_17_176)))
 (let ((?x103604 (* (* 2.0 l_0_17_168) l_0_17_175)))
 (let ((?x103601 (* (* 2.0 l_0_17_167) l_0_17_174)))
 (let ((?x103598 (* (* 2.0 l_0_17_166) l_0_17_173)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x101936 (* ?x101935 l_0_17_175)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x101933 (* ?x101932 l_0_17_174)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x101920 (* ?x101918 l_0_17_173)))
 (let ((?x103584 (- (* (* (- 1.0) l_0_17_101) l_0_17_76) (* (* 1.0 l_0_17_102) l_0_17_77))))
 (let ((?x103589 (+ (- ?x103584 (* (* 1.0 l_0_17_103) l_0_17_78)) (* (* 1.0 l_0_17_112) l_0_17_137))))
 (let ((?x103593 (+ (+ ?x103589 (* (* 1.0 l_0_17_113) l_0_17_138)) (* (* 1.0 l_0_17_114) l_0_17_139))))
 (let ((?x103608 (- (- (- (- (- (- (- ?x103593 ?x101920) ?x101933) ?x101936) ?x103598) ?x103601) ?x103604) ?x103607)))
 (let ((?x103629 (+ (+ (+ (+ (- (- (- ?x103608 ?x103610) ?x103613) ?x103616) ?x103619) ?x103622) ?x103625) ?x103628)))
 (let ((?x103647 (- (- (- (- (+ (+ (+ ?x103629 ?x103631) ?x103634) ?x103637) ?x103639) ?x103641) ?x103643) ?x103646)))
 (let ((?x103668 (+ (+ (+ (+ (- (- (- ?x103647 ?x103649) ?x103652) ?x103655) ?x103658) ?x103661) ?x103664) ?x103667)))
 (= (+ (+ (+ ?x103668 ?x103670) ?x103673) ?x103676) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103801 (* l_0_17_72 l_0_17_72)))
 (let ((?x103799 (* l_0_17_71 l_0_17_71)))
 (let ((?x103797 (* l_0_17_70 l_0_17_70)))
 (let ((?x103795 (* l_0_17_69 l_0_17_69)))
 (let ((?x103793 (* l_0_17_68 l_0_17_68)))
 (let ((?x103791 (* l_0_17_67 l_0_17_67)))
 (let ((?x103789 (* l_0_17_66 l_0_17_66)))
 (let ((?x103787 (* l_0_17_65 l_0_17_65)))
 (let ((?x103785 (* l_0_17_36 l_0_17_36)))
 (let ((?x103783 (* l_0_17_35 l_0_17_35)))
 (let ((?x103781 (* l_0_17_34 l_0_17_34)))
 (let ((?x103779 (* l_0_17_33 l_0_17_33)))
 (let ((?x103777 (* l_0_17_32 l_0_17_32)))
 (let ((?x103775 (* l_0_17_31 l_0_17_31)))
 (let ((?x103773 (* l_0_17_30 l_0_17_30)))
 (let ((?x103771 (* l_0_17_29 l_0_17_29)))
 (let ((?x103769 (* l_0_17_216 l_0_17_216)))
 (let ((?x103767 (* l_0_17_215 l_0_17_215)))
 (let ((?x103765 (* l_0_17_214 l_0_17_214)))
 (let ((?x103763 (* l_0_17_213 l_0_17_213)))
 (let ((?x103761 (* l_0_17_212 l_0_17_212)))
 (let ((?x103759 (* l_0_17_211 l_0_17_211)))
 (let ((?x103757 (* l_0_17_210 l_0_17_210)))
 (let ((?x103755 (* l_0_17_209 l_0_17_209)))
 (let ((?x103753 (* l_0_17_180 l_0_17_180)))
 (let ((?x103751 (* l_0_17_179 l_0_17_179)))
 (let ((?x103749 (* l_0_17_178 l_0_17_178)))
 (let ((?x103747 (* l_0_17_177 l_0_17_177)))
 (let ((?x103745 (* l_0_17_176 l_0_17_176)))
 (let ((?x103743 (* l_0_17_175 l_0_17_175)))
 (let ((?x103744 (- (- (* (- l_0_17_173) l_0_17_173) (* l_0_17_174 l_0_17_174)) ?x103743)))
 (let ((?x103758 (+ (+ (- (- (- (- (- ?x103744 ?x103745) ?x103747) ?x103749) ?x103751) ?x103753) ?x103755) ?x103757)))
 (let ((?x103772 (- (+ (+ (+ (+ (+ (+ ?x103758 ?x103759) ?x103761) ?x103763) ?x103765) ?x103767) ?x103769) ?x103771)))
 (let ((?x103786 (- (- (- (- (- (- (- ?x103772 ?x103773) ?x103775) ?x103777) ?x103779) ?x103781) ?x103783) ?x103785)))
 (let ((?x103800 (+ (+ (+ (+ (+ (+ (+ ?x103786 ?x103787) ?x103789) ?x103791) ?x103793) ?x103795) ?x103797) ?x103799)))
 (= (+ ?x103800 ?x103801) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x101527 (* l_0_17_37 l_0_17_37)))
 (let ((?x103851 (* l_0_17_289 l_0_17_289)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x103849 (* ?x103848 l_0_17_295)))
 (let ((?x103850 (+ (- (* l_0_17_1 l_0_17_1) (* (* 2.0 l_0_17_109) l_0_17_115)) ?x103849)))
 (= (+ (- (+ ?x103850 ?x103851) ?x101527) (* (* 2.0 l_0_17_73) l_0_17_79)) 0.0)))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101579 (* ?x101578 l_0_17_38)))
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x103881 (* ?x103880 l_0_17_296)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x103878 (* ?x103877 l_0_17_295)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x103875 (* ?x103848 l_0_17_290)))
 (let ((?x103871 (- (* (* 2.0 l_0_17_1) l_0_17_2) (* (* 2.0 l_0_17_110) l_0_17_115))))
 (let ((?x103882 (+ (+ (+ (- ?x103871 (* (* 2.0 l_0_17_111) l_0_17_116)) ?x103875) ?x103878) ?x103881)))
 (let ((?x103886 (- (- ?x103882 (* (* 2.0 l_0_17_325) l_0_17_331)) (* (* 2.0 l_0_17_361) l_0_17_367))))
 (let ((?x103893 (+ (+ (- ?x103886 ?x101579) (* (* 2.0 l_0_17_74) l_0_17_79)) (* (* 2.0 l_0_17_75) l_0_17_80))))
 (= ?x103893 0.0))))))))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101617 (* ?x101578 l_0_17_40)))
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x103925 (* ?x101575 l_0_17_297)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x103923 (* ?x101572 l_0_17_296)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x103921 (* ?x101569 l_0_17_295)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x103919 (* ?x103848 l_0_17_292)))
 (let ((?x103914 (- (* (* 2.0 l_0_17_1) l_0_17_4) (* (* 2.0 l_0_17_112) l_0_17_115))))
 (let ((?x103918 (- (- ?x103914 (* (* 2.0 l_0_17_113) l_0_17_116)) (* (* 2.0 l_0_17_114) l_0_17_117))))
 (let ((?x103930 (+ (- (+ (+ (+ (+ ?x103918 ?x103919) ?x103921) ?x103923) ?x103925) ?x101617) (* (* 2.0 l_0_17_76) l_0_17_79))))
 (let ((?x103936 (+ (+ ?x103930 (* (* 2.0 l_0_17_77) l_0_17_80)) (* (* 2.0 l_0_17_78) l_0_17_81))))
 (= ?x103936 0.0))))))))))))))))
(assert
 (let ((?x103977 (* l_0_17_82 l_0_17_82)))
 (let ((?x103975 (* l_0_17_81 l_0_17_81)))
 (let ((?x103973 (* l_0_17_80 l_0_17_80)))
 (let ((?x103971 (* l_0_17_79 l_0_17_79)))
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101631 (* ?x101578 l_0_17_43)))
 (let ((?x103968 (* l_0_17_298 l_0_17_298)))
 (let ((?x103966 (* l_0_17_297 l_0_17_297)))
 (let ((?x103964 (* l_0_17_296 l_0_17_296)))
 (let ((?x103962 (* l_0_17_295 l_0_17_295)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x103849 (* ?x103848 l_0_17_295)))
 (let ((?x103959 (* l_0_17_118 l_0_17_118)))
 (let ((?x103957 (* l_0_17_117 l_0_17_117)))
 (let ((?x103955 (* l_0_17_116 l_0_17_116)))
 (let ((?x103956 (- (- (* (* 2.0 l_0_17_1) l_0_17_7) (* l_0_17_115 l_0_17_115)) ?x103955)))
 (let ((?x103969 (+ (+ (+ (+ (+ (- (- ?x103956 ?x103957) ?x103959) ?x103849) ?x103962) ?x103964) ?x103966) ?x103968)))
 (= (+ (+ (+ (+ (- ?x103969 ?x101631) ?x103971) ?x103973) ?x103975) ?x103977) 0.0)))))))))))))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101654 (* ?x101578 l_0_17_47)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104017 (* ?x104016 l_0_17_302)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104014 (* ?x104013 l_0_17_301)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104011 (* ?x104010 l_0_17_300)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104008 (* ?x104007 l_0_17_299)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104005 (* ?x103848 l_0_17_299)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x104003 (* ?x104002 l_0_17_259)))
 (let ((?x103992 (- (* (* 2.0 l_0_17_1) l_0_17_11) (* (* 2.0 l_0_17_115) l_0_17_119))))
 (let ((?x103998 (- (- ?x103992 (* (* 2.0 l_0_17_116) l_0_17_120)) (* (* 2.0 l_0_17_117) l_0_17_121))))
 (let ((?x104009 (+ (+ (+ (- ?x103998 (* (* 2.0 l_0_17_118) l_0_17_122)) ?x104003) ?x104005) ?x104008)))
 (let ((?x104022 (+ (- (+ (+ (+ ?x104009 ?x104011) ?x104014) ?x104017) ?x101654) (* (* 2.0 l_0_17_79) l_0_17_83))))
 (let ((?x104028 (+ (+ ?x104022 (* (* 2.0 l_0_17_80) l_0_17_84)) (* (* 2.0 l_0_17_81) l_0_17_85))))
 (= (+ ?x104028 (* (* 2.0 l_0_17_82) l_0_17_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101673 (* ?x101578 l_0_17_52)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104077 (* ?x104016 l_0_17_307)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104075 (* ?x104013 l_0_17_306)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104073 (* ?x104010 l_0_17_305)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104071 (* ?x104007 l_0_17_304)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104069 (* ?x103848 l_0_17_304)))
 (let ((?x103849 (* ?x103848 l_0_17_295)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101629 (* ?x101563 l_0_17_187)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101627 (* ?x101560 l_0_17_151)))
 (let ((?x104059 (- (* (* 2.0 l_0_17_1) l_0_17_16) (* (* 2.0 l_0_17_115) l_0_17_124))))
 (let ((?x104063 (- (- ?x104059 (* (* 2.0 l_0_17_116) l_0_17_125)) (* (* 2.0 l_0_17_117) l_0_17_126))))
 (let ((?x104068 (- (- (+ (- ?x104063 (* (* 2.0 l_0_17_118) l_0_17_127)) ?x101627) ?x101629) ?x103849)))
 (let ((?x104081 (+ (- (+ (+ (+ (+ (+ ?x104068 ?x104069) ?x104071) ?x104073) ?x104075) ?x104077) ?x101673) (* (* 2.0 l_0_17_79) l_0_17_88))))
 (let ((?x104085 (+ (+ ?x104081 (* (* 2.0 l_0_17_80) l_0_17_89)) (* (* 2.0 l_0_17_81) l_0_17_90))))
 (= (+ ?x104085 (* (* 2.0 l_0_17_82) l_0_17_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101696 (* ?x101578 l_0_17_58)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104126 (* ?x104016 l_0_17_313)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104124 (* ?x104013 l_0_17_312)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104122 (* ?x104010 l_0_17_311)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104120 (* ?x104007 l_0_17_310)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104118 (* ?x103848 l_0_17_310)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x104003 (* ?x104002 l_0_17_259)))
 (let ((?x104110 (- (* (* 2.0 l_0_17_1) l_0_17_22) (* (* 2.0 l_0_17_115) l_0_17_130))))
 (let ((?x104114 (- (- ?x104110 (* (* 2.0 l_0_17_116) l_0_17_131)) (* (* 2.0 l_0_17_117) l_0_17_132))))
 (let ((?x104121 (+ (+ (- (- ?x104114 (* (* 2.0 l_0_17_118) l_0_17_133)) ?x104003) ?x104118) ?x104120)))
 (let ((?x104130 (+ (- (+ (+ (+ ?x104121 ?x104122) ?x104124) ?x104126) ?x101696) (* (* 2.0 l_0_17_79) l_0_17_94))))
 (let ((?x104134 (+ (+ ?x104130 (* (* 2.0 l_0_17_80) l_0_17_95)) (* (* 2.0 l_0_17_81) l_0_17_96))))
 (= (+ ?x104134 (* (* 2.0 l_0_17_82) l_0_17_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x101578 (* 2.0 l_0_17_37)))
 (let ((?x101723 (* ?x101578 l_0_17_65)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104215 (* ?x104016 l_0_17_320)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104213 (* ?x104013 l_0_17_319)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104211 (* ?x104010 l_0_17_318)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104209 (* ?x104007 l_0_17_317)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104207 (* ?x103848 l_0_17_317)))
 (let ((?x104177 (+ (* (* 2.0 l_0_17_1) l_0_17_29) (* (* 2.0 l_0_17_101) l_0_17_79))))
 (let ((?x104193 (+ (+ ?x104177 (* (* 2.0 l_0_17_102) l_0_17_80)) (* (* 2.0 l_0_17_103) l_0_17_81))))
 (let ((?x104198 (- (+ ?x104193 (* (* 2.0 l_0_17_104) l_0_17_82)) (* (* 2.0 l_0_17_115) l_0_17_137))))
 (let ((?x104202 (- (- ?x104198 (* (* 2.0 l_0_17_116) l_0_17_138)) (* (* 2.0 l_0_17_117) l_0_17_139))))
 (let ((?x104206 (- (- ?x104202 (* (* 2.0 l_0_17_118) l_0_17_140)) (* (* 2.0 l_0_17_217) l_0_17_223))))
 (= (- (+ (+ (+ (+ (+ ?x104206 ?x104207) ?x104209) ?x104211) ?x104213) ?x104215) ?x101723) 0.0)))))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x101763 (* ?x101762 l_0_17_41)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x101760 (* ?x101759 l_0_17_40)))
 (let ((?x101756 (* 2.0 l_0_17_3)))
 (let ((?x101757 (* ?x101756 l_0_17_5)))
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104269 (* ?x103880 l_0_17_293)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104267 (* ?x103877 l_0_17_292)))
 (let ((?x101747 (* 2.0 l_0_17_2)))
 (let ((?x101748 (* ?x101747 l_0_17_4)))
 (let ((?x104273 (- (+ (+ (+ ?x101748 ?x104267) ?x104269) ?x101757) (* (* 2.0 l_0_17_328) l_0_17_331))))
 (let ((?x104277 (- (- ?x104273 (* (* 2.0 l_0_17_329) l_0_17_332)) (* (* 2.0 l_0_17_330) l_0_17_333))))
 (let ((?x104281 (- (- ?x104277 (* (* 2.0 l_0_17_364) l_0_17_367)) (* (* 2.0 l_0_17_365) l_0_17_368))))
 (= (- (- (- ?x104281 (* (* 2.0 l_0_17_366) l_0_17_369)) ?x101760) ?x101763) 0.0)))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x101819 (* ?x101762 l_0_17_44)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x101817 (* ?x101759 l_0_17_43)))
 (let ((?x104321 (* l_0_17_370 l_0_17_370)))
 (let ((?x104319 (* l_0_17_369 l_0_17_369)))
 (let ((?x104317 (* l_0_17_368 l_0_17_368)))
 (let ((?x104315 (* l_0_17_367 l_0_17_367)))
 (let ((?x104313 (* l_0_17_334 l_0_17_334)))
 (let ((?x104311 (* l_0_17_333 l_0_17_333)))
 (let ((?x104309 (* l_0_17_332 l_0_17_332)))
 (let ((?x104307 (* l_0_17_331 l_0_17_331)))
 (let ((?x101756 (* 2.0 l_0_17_3)))
 (let ((?x101809 (* ?x101756 l_0_17_8)))
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x103881 (* ?x103880 l_0_17_296)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x103878 (* ?x103877 l_0_17_295)))
 (let ((?x101747 (* 2.0 l_0_17_2)))
 (let ((?x101792 (* ?x101747 l_0_17_7)))
 (let ((?x104314 (- (- (- (- (+ (+ (+ ?x101792 ?x103878) ?x103881) ?x101809) ?x104307) ?x104309) ?x104311) ?x104313)))
 (= (- (- (- (- (- (- ?x104314 ?x104315) ?x104317) ?x104319) ?x104321) ?x101817) ?x101819) 0.0)))))))))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x101900 (* ?x101762 l_0_17_48)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x101898 (* ?x101759 l_0_17_47)))
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104351 (* ?x103880 l_0_17_300)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104349 (* ?x103877 l_0_17_299)))
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x104347 (* ?x101366 l_0_17_260)))
 (let ((?x101363 (* 2.0 l_0_17_254)))
 (let ((?x104345 (* ?x101363 l_0_17_259)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x101872 (* ?x101871 l_0_17_3)))
 (let ((?x104350 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_2) ?x101872) ?x104345) ?x104347) ?x104349)))
 (let ((?x104358 (- (- (+ ?x104350 ?x104351) (* (* 2.0 l_0_17_331) l_0_17_335)) (* (* 2.0 l_0_17_332) l_0_17_336))))
 (let ((?x104364 (- (- ?x104358 (* (* 2.0 l_0_17_333) l_0_17_337)) (* (* 2.0 l_0_17_334) l_0_17_338))))
 (let ((?x104370 (- (- ?x104364 (* (* 2.0 l_0_17_367) l_0_17_371)) (* (* 2.0 l_0_17_368) l_0_17_372))))
 (let ((?x104376 (- (- ?x104370 (* (* 2.0 l_0_17_369) l_0_17_373)) (* (* 2.0 l_0_17_370) l_0_17_374))))
 (= (- (- ?x104376 ?x101898) ?x101900) 0.0)))))))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x101968 (* ?x101762 l_0_17_53)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x101966 (* ?x101759 l_0_17_52)))
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x81681 (* ?x103880 l_0_17_305)))
 (let ((?x103881 (* ?x103880 l_0_17_296)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x81722 (* ?x103877 l_0_17_304)))
 (let ((?x103878 (* ?x103877 l_0_17_295)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x101790 (* ?x101744 l_0_17_188)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x101788 (* ?x101741 l_0_17_187)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x101942 (* ?x101941 l_0_17_3)))
 (let ((?x101938 (* 2.0 l_0_17_16)))
 (let ((?x101939 (* ?x101938 l_0_17_2)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101786 (* ?x101738 l_0_17_152)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x35430 (* ?x101874 l_0_17_151)))
 (let ((?x35152 (+ (- (- (- (+ (+ (+ ?x35430 ?x101786) ?x101939) ?x101942) ?x101788) ?x101790) ?x103878) ?x81722)))
 (let ((?x35279 (- (- (+ (- ?x35152 ?x103881) ?x81681) (* (* 2.0 l_0_17_331) l_0_17_340)) (* (* 2.0 l_0_17_332) l_0_17_341))))
 (let ((?x104399 (- (- ?x35279 (* (* 2.0 l_0_17_333) l_0_17_342)) (* (* 2.0 l_0_17_334) l_0_17_343))))
 (let ((?x104403 (- (- ?x104399 (* (* 2.0 l_0_17_367) l_0_17_376)) (* (* 2.0 l_0_17_368) l_0_17_377))))
 (let ((?x104407 (- (- ?x104403 (* (* 2.0 l_0_17_369) l_0_17_378)) (* (* 2.0 l_0_17_370) l_0_17_379))))
 (= (- (- ?x104407 ?x101966) ?x101968) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x102053 (* ?x101762 l_0_17_59)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x102051 (* ?x101759 l_0_17_58)))
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104431 (* ?x103880 l_0_17_311)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104429 (* ?x103877 l_0_17_310)))
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x104347 (* ?x101366 l_0_17_260)))
 (let ((?x101363 (* 2.0 l_0_17_254)))
 (let ((?x104345 (* ?x101363 l_0_17_259)))
 (let ((?x102045 (* 2.0 l_0_17_23)))
 (let ((?x102046 (* ?x102045 l_0_17_3)))
 (let ((?x101747 (* 2.0 l_0_17_2)))
 (let ((?x102037 (* ?x101747 l_0_17_22)))
 (let ((?x104434 (- (+ (+ (- (- (+ ?x102037 ?x102046) ?x104345) ?x104347) ?x104429) ?x104431) (* (* 2.0 l_0_17_331) l_0_17_346))))
 (let ((?x104438 (- (- ?x104434 (* (* 2.0 l_0_17_332) l_0_17_347)) (* (* 2.0 l_0_17_333) l_0_17_348))))
 (let ((?x104442 (- (- ?x104438 (* (* 2.0 l_0_17_334) l_0_17_349)) (* (* 2.0 l_0_17_367) l_0_17_382))))
 (let ((?x104446 (- (- ?x104442 (* (* 2.0 l_0_17_368) l_0_17_383)) (* (* 2.0 l_0_17_369) l_0_17_384))))
 (= (- (- (- ?x104446 (* (* 2.0 l_0_17_370) l_0_17_385)) ?x102051) ?x102053) 0.0))))))))))))))))))))))
(assert
 (let ((?x101762 (* 2.0 l_0_17_39)))
 (let ((?x102109 (* ?x101762 l_0_17_66)))
 (let ((?x101759 (* 2.0 l_0_17_38)))
 (let ((?x102107 (* ?x101759 l_0_17_65)))
 (let ((?x101756 (* 2.0 l_0_17_3)))
 (let ((?x102105 (* ?x101756 l_0_17_30)))
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104489 (* ?x103880 l_0_17_318)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104487 (* ?x103877 l_0_17_317)))
 (let ((?x101747 (* 2.0 l_0_17_2)))
 (let ((?x102097 (* ?x101747 l_0_17_29)))
 (let ((?x104486 (- (- ?x102097 (* (* 2.0 l_0_17_218) l_0_17_223)) (* (* 2.0 l_0_17_219) l_0_17_224))))
 (let ((?x104493 (- (+ (+ (+ ?x104486 ?x104487) ?x104489) ?x102105) (* (* 2.0 l_0_17_331) l_0_17_353))))
 (let ((?x104497 (- (- ?x104493 (* (* 2.0 l_0_17_332) l_0_17_354)) (* (* 2.0 l_0_17_333) l_0_17_355))))
 (let ((?x104501 (- (- ?x104497 (* (* 2.0 l_0_17_334) l_0_17_356)) (* (* 2.0 l_0_17_367) l_0_17_389))))
 (let ((?x104505 (- (- ?x104501 (* (* 2.0 l_0_17_368) l_0_17_390)) (* (* 2.0 l_0_17_369) l_0_17_391))))
 (= (- (- (- ?x104505 (* (* 2.0 l_0_17_370) l_0_17_392)) ?x102107) ?x102109) 0.0)))))))))))))))))))
(assert
 (let ((?x102163 (* l_0_17_6 l_0_17_6)))
 (let ((?x102161 (* l_0_17_5 l_0_17_5)))
 (let ((?x102159 (* l_0_17_42 l_0_17_42)))
 (let ((?x102157 (* l_0_17_41 l_0_17_41)))
 (let ((?x102155 (* l_0_17_40 l_0_17_40)))
 (let ((?x102153 (* l_0_17_4 l_0_17_4)))
 (let ((?x104541 (* l_0_17_294 l_0_17_294)))
 (let ((?x104542 (+ (+ (* l_0_17_292 l_0_17_292) (* l_0_17_293 l_0_17_293)) ?x104541)))
 (= (+ (+ (- (- (- (+ ?x104542 ?x102153) ?x102155) ?x102157) ?x102159) ?x102161) ?x102163) 0.0))))))))))
(assert
 (let ((?x102210 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x102207 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x102204 (* ?x101827 l_0_17_45)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x102202 (* ?x101824 l_0_17_44)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x102200 (* ?x101821 l_0_17_43)))
 (let ((?x102198 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x103925 (* ?x101575 l_0_17_297)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x103923 (* ?x101572 l_0_17_296)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x103921 (* ?x101569 l_0_17_295)))
 (let ((?x104551 (+ (- (- (- (+ (+ (+ ?x103921 ?x103923) ?x103925) ?x102198) ?x102200) ?x102202) ?x102204) ?x102207)))
 (= (+ ?x104551 ?x102210) 0.0))))))))))))))))))
(assert
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x102263 (* ?x101827 l_0_17_49)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x102261 (* ?x101824 l_0_17_48)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x102259 (* ?x101821 l_0_17_47)))
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x82038 (* ?x101575 l_0_17_301)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x35610 (* ?x101572 l_0_17_300)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x61389 (* ?x101569 l_0_17_299)))
 (let ((?x101895 (* 2.0 l_0_17_258)))
 (let ((?x82028 (* ?x101895 l_0_17_261)))
 (let ((?x101892 (* 2.0 l_0_17_257)))
 (let ((?x82026 (* ?x101892 l_0_17_260)))
 (let ((?x101889 (* 2.0 l_0_17_256)))
 (let ((?x35600 (* ?x101889 l_0_17_259)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x102245 (* ?x102244 l_0_17_6)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x102242 (* ?x101871 l_0_17_5)))
 (let ((?x35604 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_4) ?x102242) ?x102245) ?x35600) ?x82026)))
 (let ((?x35620 (- (- (- (+ (+ (+ (+ ?x35604 ?x82028) ?x61389) ?x35610) ?x82038) ?x102259) ?x102261) ?x102263)))
 (= ?x35620 0.0))))))))))))))))))))))))))
(assert
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x102312 (* ?x101827 l_0_17_54)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x102310 (* ?x101824 l_0_17_53)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x102308 (* ?x101821 l_0_17_52)))
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x104561 (* ?x101575 l_0_17_306)))
 (let ((?x103925 (* ?x101575 l_0_17_297)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x104558 (* ?x101572 l_0_17_305)))
 (let ((?x103923 (* ?x101572 l_0_17_296)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x104555 (* ?x101569 l_0_17_304)))
 (let ((?x103921 (* ?x101569 l_0_17_295)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x102195 (* ?x101954 l_0_17_189)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x102193 (* ?x101951 l_0_17_188)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x102191 (* ?x101948 l_0_17_187)))
 (let ((?x102299 (* 2.0 l_0_17_18)))
 (let ((?x102300 (* ?x102299 l_0_17_6)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x102297 (* ?x101941 l_0_17_5)))
 (let ((?x101938 (* 2.0 l_0_17_16)))
 (let ((?x102286 (* ?x101938 l_0_17_4)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102189 (* ?x101935 l_0_17_153)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102187 (* ?x101932 l_0_17_152)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x102612 (* ?x101918 l_0_17_151)))
 (let ((?x35741 (- (- (+ (+ (+ (+ (+ ?x102612 ?x102187) ?x102189) ?x102286) ?x102297) ?x102300) ?x102191) ?x102193)))
 (let ((?x104562 (+ (- (+ (- (+ (- (- ?x35741 ?x102195) ?x103921) ?x104555) ?x103923) ?x104558) ?x103925) ?x104561)))
 (= (- (- (- ?x104562 ?x102308) ?x102310) ?x102312) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x101827 (* 2.0 l_0_17_42)))
 (let ((?x102386 (* ?x101827 l_0_17_60)))
 (let ((?x101824 (* 2.0 l_0_17_41)))
 (let ((?x102384 (* ?x101824 l_0_17_59)))
 (let ((?x101821 (* 2.0 l_0_17_40)))
 (let ((?x102382 (* ?x101821 l_0_17_58)))
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x104590 (* ?x101575 l_0_17_312)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x104588 (* ?x101572 l_0_17_311)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x104586 (* ?x101569 l_0_17_310)))
 (let ((?x101895 (* 2.0 l_0_17_258)))
 (let ((?x82028 (* ?x101895 l_0_17_261)))
 (let ((?x101892 (* 2.0 l_0_17_257)))
 (let ((?x82026 (* ?x101892 l_0_17_260)))
 (let ((?x101889 (* 2.0 l_0_17_256)))
 (let ((?x35600 (* ?x101889 l_0_17_259)))
 (let ((?x102379 (* 2.0 l_0_17_24)))
 (let ((?x102380 (* ?x102379 l_0_17_6)))
 (let ((?x102045 (* 2.0 l_0_17_23)))
 (let ((?x102377 (* ?x102045 l_0_17_5)))
 (let ((?x102374 (* 2.0 l_0_17_22)))
 (let ((?x102375 (* ?x102374 l_0_17_4)))
 (let ((?x104589 (+ (+ (- (- (- (+ (+ ?x102375 ?x102377) ?x102380) ?x35600) ?x82026) ?x82028) ?x104586) ?x104588)))
 (= (- (- (- (+ ?x104589 ?x104590) ?x102382) ?x102384) ?x102386) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x102449 (* l_0_17_9 l_0_17_9)))
 (let ((?x102447 (* l_0_17_8 l_0_17_8)))
 (let ((?x102445 (* l_0_17_7 l_0_17_7)))
 (let ((?x102443 (* l_0_17_46 l_0_17_46)))
 (let ((?x102441 (* l_0_17_45 l_0_17_45)))
 (let ((?x102439 (* l_0_17_44 l_0_17_44)))
 (let ((?x102437 (* l_0_17_43 l_0_17_43)))
 (let ((?x103968 (* l_0_17_298 l_0_17_298)))
 (let ((?x103966 (* l_0_17_297 l_0_17_297)))
 (let ((?x103964 (* l_0_17_296 l_0_17_296)))
 (let ((?x35914 (+ (+ (+ (* l_0_17_10 l_0_17_10) (* l_0_17_295 l_0_17_295)) ?x103964) ?x103966)))
 (let ((?x104614 (+ (+ (- (- (- (- (+ ?x35914 ?x103968) ?x102437) ?x102439) ?x102441) ?x102443) ?x102445) ?x102447)))
 (= (+ ?x104614 ?x102449) 0.0))))))))))))))
(assert
 (let ((?x102511 (* 2.0 l_0_17_46)))
 (let ((?x102512 (* ?x102511 l_0_17_50)))
 (let ((?x102508 (* 2.0 l_0_17_45)))
 (let ((?x102509 (* ?x102508 l_0_17_49)))
 (let ((?x102505 (* 2.0 l_0_17_44)))
 (let ((?x102506 (* ?x102505 l_0_17_48)))
 (let ((?x102502 (* 2.0 l_0_17_43)))
 (let ((?x102503 (* ?x102502 l_0_17_47)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104017 (* ?x104016 l_0_17_302)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104014 (* ?x104013 l_0_17_301)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104011 (* ?x104010 l_0_17_300)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104008 (* ?x104007 l_0_17_299)))
 (let ((?x104628 (* l_0_17_262 l_0_17_262)))
 (let ((?x104626 (* l_0_17_261 l_0_17_261)))
 (let ((?x104624 (* l_0_17_260 l_0_17_260)))
 (let ((?x104622 (* l_0_17_259 l_0_17_259)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x102476 (* ?x102244 l_0_17_9)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x102474 (* ?x101871 l_0_17_8)))
 (let ((?x102471 (* 2.0 l_0_17_11)))
 (let ((?x102472 (* ?x102471 l_0_17_7)))
 (let ((?x104623 (+ (+ (+ (+ (* (* 2.0 l_0_17_10) l_0_17_14) ?x102472) ?x102474) ?x102476) ?x104622)))
 (let ((?x104633 (+ (+ (+ (+ (+ (+ (+ ?x104623 ?x104624) ?x104626) ?x104628) ?x104008) ?x104011) ?x104014) ?x104017)))
 (= (- (- (- (- ?x104633 ?x102503) ?x102506) ?x102509) ?x102512) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x102511 (* 2.0 l_0_17_46)))
 (let ((?x102574 (* ?x102511 l_0_17_55)))
 (let ((?x102508 (* 2.0 l_0_17_45)))
 (let ((?x102572 (* ?x102508 l_0_17_54)))
 (let ((?x102505 (* 2.0 l_0_17_44)))
 (let ((?x102570 (* ?x102505 l_0_17_53)))
 (let ((?x102502 (* 2.0 l_0_17_43)))
 (let ((?x102568 (* ?x102502 l_0_17_52)))
 (let ((?x103968 (* l_0_17_298 l_0_17_298)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104077 (* ?x104016 l_0_17_307)))
 (let ((?x103966 (* l_0_17_297 l_0_17_297)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104075 (* ?x104013 l_0_17_306)))
 (let ((?x103964 (* l_0_17_296 l_0_17_296)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104073 (* ?x104010 l_0_17_305)))
 (let ((?x103962 (* l_0_17_295 l_0_17_295)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104071 (* ?x104007 l_0_17_304)))
 (let ((?x102435 (* l_0_17_190 l_0_17_190)))
 (let ((?x102433 (* l_0_17_189 l_0_17_189)))
 (let ((?x102431 (* l_0_17_188 l_0_17_188)))
 (let ((?x80751 (* l_0_17_187 l_0_17_187)))
 (let ((?x102299 (* 2.0 l_0_17_18)))
 (let ((?x102558 (* ?x102299 l_0_17_9)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x102556 (* ?x101941 l_0_17_8)))
 (let ((?x101938 (* 2.0 l_0_17_16)))
 (let ((?x102554 (* ?x101938 l_0_17_7)))
 (let ((?x80755 (* l_0_17_154 l_0_17_154)))
 (let ((?x80753 (* l_0_17_153 l_0_17_153)))
 (let ((?x60555 (* l_0_17_152 l_0_17_152)))
 (let ((?x60545 (* l_0_17_151 l_0_17_151)))
 (let ((?x104640 (+ (+ (+ (+ (* (* 2.0 l_0_17_10) l_0_17_19) ?x60545) ?x60555) ?x80753) ?x80755)))
 (let ((?x104647 (- (- (- (- (+ (+ (+ ?x104640 ?x102554) ?x102556) ?x102558) ?x80751) ?x102431) ?x102433) ?x102435)))
 (let ((?x104654 (+ (- (+ (- (+ (- (+ ?x104647 ?x104071) ?x103962) ?x104073) ?x103964) ?x104075) ?x103966) ?x104077)))
 (= (- (- (- (- (- ?x104654 ?x103968) ?x102568) ?x102570) ?x102572) ?x102574) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x102511 (* 2.0 l_0_17_46)))
 (let ((?x102644 (* ?x102511 l_0_17_61)))
 (let ((?x102508 (* 2.0 l_0_17_45)))
 (let ((?x102642 (* ?x102508 l_0_17_60)))
 (let ((?x102505 (* 2.0 l_0_17_44)))
 (let ((?x102640 (* ?x102505 l_0_17_59)))
 (let ((?x102502 (* 2.0 l_0_17_43)))
 (let ((?x102638 (* ?x102502 l_0_17_58)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104126 (* ?x104016 l_0_17_313)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104124 (* ?x104013 l_0_17_312)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104122 (* ?x104010 l_0_17_311)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104120 (* ?x104007 l_0_17_310)))
 (let ((?x104628 (* l_0_17_262 l_0_17_262)))
 (let ((?x104626 (* l_0_17_261 l_0_17_261)))
 (let ((?x104624 (* l_0_17_260 l_0_17_260)))
 (let ((?x104622 (* l_0_17_259 l_0_17_259)))
 (let ((?x102379 (* 2.0 l_0_17_24)))
 (let ((?x102636 (* ?x102379 l_0_17_9)))
 (let ((?x102045 (* 2.0 l_0_17_23)))
 (let ((?x102634 (* ?x102045 l_0_17_8)))
 (let ((?x102374 (* 2.0 l_0_17_22)))
 (let ((?x102632 (* ?x102374 l_0_17_7)))
 (let ((?x82390 (- (+ (+ (+ (* (* 2.0 l_0_17_10) l_0_17_25) ?x102632) ?x102634) ?x102636) ?x104622)))
 (let ((?x82244 (+ (+ (+ (+ (- (- (- ?x82390 ?x104624) ?x104626) ?x104628) ?x104120) ?x104122) ?x104124) ?x104126)))
 (= (- (- (- (- ?x82244 ?x102638) ?x102640) ?x102642) ?x102644) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x102511 (* 2.0 l_0_17_46)))
 (let ((?x102741 (* ?x102511 l_0_17_68)))
 (let ((?x102508 (* 2.0 l_0_17_45)))
 (let ((?x102739 (* ?x102508 l_0_17_67)))
 (let ((?x102505 (* 2.0 l_0_17_44)))
 (let ((?x102737 (* ?x102505 l_0_17_66)))
 (let ((?x102502 (* 2.0 l_0_17_43)))
 (let ((?x102735 (* ?x102502 l_0_17_65)))
 (let ((?x101814 (* 2.0 l_0_17_31)))
 (let ((?x102733 (* ?x101814 l_0_17_9)))
 (let ((?x101811 (* 2.0 l_0_17_30)))
 (let ((?x102731 (* ?x101811 l_0_17_8)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104215 (* ?x104016 l_0_17_320)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104213 (* ?x104013 l_0_17_319)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104211 (* ?x104010 l_0_17_318)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104209 (* ?x104007 l_0_17_317)))
 (let ((?x101803 (* 2.0 l_0_17_29)))
 (let ((?x102729 (* ?x101803 l_0_17_7)))
 (let ((?x36007 (* l_0_17_226 l_0_17_226)))
 (let ((?x35913 (* l_0_17_225 l_0_17_225)))
 (let ((?x82217 (* l_0_17_224 l_0_17_224)))
 (let ((?x82419 (* l_0_17_223 l_0_17_223)))
 (let ((?x35997 (- (- (- (- (* (* 2.0 l_0_17_10) l_0_17_32) ?x82419) ?x82217) ?x35913) ?x36007)))
 (let ((?x36151 (+ (+ (+ (+ (+ (+ (+ ?x35997 ?x102729) ?x104209) ?x104211) ?x104213) ?x104215) ?x102731) ?x102733)))
 (= (- (- (- (- ?x36151 ?x102735) ?x102737) ?x102739) ?x102741) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x102818 (* l_0_17_51 l_0_17_51)))
 (let ((?x102816 (* l_0_17_50 l_0_17_50)))
 (let ((?x102814 (* l_0_17_49 l_0_17_49)))
 (let ((?x102812 (* l_0_17_48 l_0_17_48)))
 (let ((?x102810 (* l_0_17_47 l_0_17_47)))
 (let ((?x104690 (* l_0_17_303 l_0_17_303)))
 (let ((?x104688 (* l_0_17_302 l_0_17_302)))
 (let ((?x104686 (* l_0_17_301 l_0_17_301)))
 (let ((?x104684 (* l_0_17_300 l_0_17_300)))
 (let ((?x104682 (* l_0_17_299 l_0_17_299)))
 (let ((?x104679 (* 2.0 l_0_17_262)))
 (let ((?x104680 (* ?x104679 l_0_17_266)))
 (let ((?x104676 (* 2.0 l_0_17_261)))
 (let ((?x104677 (* ?x104676 l_0_17_265)))
 (let ((?x104673 (* 2.0 l_0_17_260)))
 (let ((?x104674 (* ?x104673 l_0_17_264)))
 (let ((?x104670 (* 2.0 l_0_17_259)))
 (let ((?x104671 (* ?x104670 l_0_17_263)))
 (let ((?x102788 (* l_0_17_15 l_0_17_15)))
 (let ((?x102786 (* l_0_17_14 l_0_17_14)))
 (let ((?x102784 (* l_0_17_13 l_0_17_13)))
 (let ((?x104668 (+ (+ (+ (* l_0_17_11 l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x102784) ?x102786)))
 (let ((?x104685 (+ (+ (+ (+ (+ (+ (+ ?x104668 ?x102788) ?x104671) ?x104674) ?x104677) ?x104680) ?x104682) ?x104684)))
 (let ((?x104695 (- (- (- (- (+ (+ (+ ?x104685 ?x104686) ?x104688) ?x104690) ?x102810) ?x102812) ?x102814) ?x102816)))
 (= (- ?x104695 ?x102818) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x102888 (* 2.0 l_0_17_51)))
 (let ((?x102889 (* ?x102888 l_0_17_56)))
 (let ((?x102885 (* 2.0 l_0_17_50)))
 (let ((?x102886 (* ?x102885 l_0_17_55)))
 (let ((?x102882 (* 2.0 l_0_17_49)))
 (let ((?x102883 (* ?x102882 l_0_17_54)))
 (let ((?x102879 (* 2.0 l_0_17_48)))
 (let ((?x102880 (* ?x102879 l_0_17_53)))
 (let ((?x102876 (* 2.0 l_0_17_47)))
 (let ((?x102877 (* ?x102876 l_0_17_52)))
 (let ((?x104735 (* 2.0 l_0_17_303)))
 (let ((?x104736 (* ?x104735 l_0_17_308)))
 (let ((?x104732 (* 2.0 l_0_17_302)))
 (let ((?x104733 (* ?x104732 l_0_17_307)))
 (let ((?x104729 (* 2.0 l_0_17_301)))
 (let ((?x104730 (* ?x104729 l_0_17_306)))
 (let ((?x104726 (* 2.0 l_0_17_300)))
 (let ((?x104727 (* ?x104726 l_0_17_305)))
 (let ((?x104723 (* 2.0 l_0_17_299)))
 (let ((?x104724 (* ?x104723 l_0_17_304)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104017 (* ?x104016 l_0_17_302)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104014 (* ?x104013 l_0_17_301)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104011 (* ?x104010 l_0_17_300)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104008 (* ?x104007 l_0_17_299)))
 (let ((?x104679 (* 2.0 l_0_17_262)))
 (let ((?x104717 (* ?x104679 l_0_17_271)))
 (let ((?x104676 (* 2.0 l_0_17_261)))
 (let ((?x104715 (* ?x104676 l_0_17_270)))
 (let ((?x104673 (* 2.0 l_0_17_260)))
 (let ((?x104713 (* ?x104673 l_0_17_269)))
 (let ((?x104670 (* 2.0 l_0_17_259)))
 (let ((?x104711 (* ?x104670 l_0_17_268)))
 (let ((?x102499 (* 2.0 l_0_17_190)))
 (let ((?x102500 (* ?x102499 l_0_17_194)))
 (let ((?x102496 (* 2.0 l_0_17_189)))
 (let ((?x102497 (* ?x102496 l_0_17_193)))
 (let ((?x102493 (* 2.0 l_0_17_188)))
 (let ((?x102494 (* ?x102493 l_0_17_192)))
 (let ((?x102490 (* 2.0 l_0_17_187)))
 (let ((?x102491 (* ?x102490 l_0_17_191)))
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102488 (* ?x102487 l_0_17_158)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102485 (* ?x102484 l_0_17_157)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102482 (* ?x102481 l_0_17_156)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x102479 (* ?x102478 l_0_17_155)))
 (let ((?x102843 (* 2.0 l_0_17_15)))
 (let ((?x102844 (* ?x102843 l_0_17_20)))
 (let ((?x102840 (* 2.0 l_0_17_14)))
 (let ((?x102841 (* ?x102840 l_0_17_19)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x102838 (* ?x102244 l_0_17_18)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x102836 (* ?x101871 l_0_17_17)))
 (let ((?x82437 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_16) ?x102836) ?x102838) ?x102841) ?x102844)))
 (let ((?x104709 (- (- (- (+ (+ (+ (+ ?x82437 ?x102479) ?x102482) ?x102485) ?x102488) ?x102491) ?x102494) ?x102497)))
 (let ((?x104720 (- (- (+ (+ (+ (+ (- ?x104709 ?x102500) ?x104711) ?x104713) ?x104715) ?x104717) ?x104008) ?x104011)))
 (let ((?x104737 (+ (+ (+ (+ (+ (- (- ?x104720 ?x104014) ?x104017) ?x104724) ?x104727) ?x104730) ?x104733) ?x104736)))
 (= (- (- (- (- (- ?x104737 ?x102877) ?x102880) ?x102883) ?x102886) ?x102889) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x102888 (* 2.0 l_0_17_51)))
 (let ((?x102984 (* ?x102888 l_0_17_62)))
 (let ((?x102885 (* 2.0 l_0_17_50)))
 (let ((?x102982 (* ?x102885 l_0_17_61)))
 (let ((?x102882 (* 2.0 l_0_17_49)))
 (let ((?x102980 (* ?x102882 l_0_17_60)))
 (let ((?x102879 (* 2.0 l_0_17_48)))
 (let ((?x102978 (* ?x102879 l_0_17_59)))
 (let ((?x102876 (* 2.0 l_0_17_47)))
 (let ((?x102976 (* ?x102876 l_0_17_58)))
 (let ((?x104735 (* 2.0 l_0_17_303)))
 (let ((?x104791 (* ?x104735 l_0_17_314)))
 (let ((?x104732 (* 2.0 l_0_17_302)))
 (let ((?x104789 (* ?x104732 l_0_17_313)))
 (let ((?x104729 (* 2.0 l_0_17_301)))
 (let ((?x104787 (* ?x104729 l_0_17_312)))
 (let ((?x104726 (* 2.0 l_0_17_300)))
 (let ((?x104785 (* ?x104726 l_0_17_311)))
 (let ((?x104723 (* 2.0 l_0_17_299)))
 (let ((?x104783 (* ?x104723 l_0_17_310)))
 (let ((?x104679 (* 2.0 l_0_17_262)))
 (let ((?x104781 (* ?x104679 l_0_17_277)))
 (let ((?x104680 (* ?x104679 l_0_17_266)))
 (let ((?x104676 (* 2.0 l_0_17_261)))
 (let ((?x104778 (* ?x104676 l_0_17_276)))
 (let ((?x104677 (* ?x104676 l_0_17_265)))
 (let ((?x104673 (* 2.0 l_0_17_260)))
 (let ((?x104775 (* ?x104673 l_0_17_275)))
 (let ((?x104674 (* ?x104673 l_0_17_264)))
 (let ((?x104670 (* 2.0 l_0_17_259)))
 (let ((?x104772 (* ?x104670 l_0_17_274)))
 (let ((?x104671 (* ?x104670 l_0_17_263)))
 (let ((?x102843 (* 2.0 l_0_17_15)))
 (let ((?x102953 (* ?x102843 l_0_17_26)))
 (let ((?x102840 (* 2.0 l_0_17_14)))
 (let ((?x102949 (* ?x102840 l_0_17_25)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x102934 (* ?x102244 l_0_17_24)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x102930 (* ?x101871 l_0_17_23)))
 (let ((?x104770 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_22) ?x102930) ?x102934) ?x102949) ?x102953)))
 (let ((?x104780 (- (+ (- (+ (- (+ (- ?x104770 ?x104671) ?x104772) ?x104674) ?x104775) ?x104677) ?x104778) ?x104680)))
 (let ((?x104793 (- (+ (+ (+ (+ (+ (+ ?x104780 ?x104781) ?x104783) ?x104785) ?x104787) ?x104789) ?x104791) ?x102976)))
 (= (- (- (- (- ?x104793 ?x102978) ?x102980) ?x102982) ?x102984) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x102888 (* 2.0 l_0_17_51)))
 (let ((?x103079 (* ?x102888 l_0_17_69)))
 (let ((?x102885 (* 2.0 l_0_17_50)))
 (let ((?x103077 (* ?x102885 l_0_17_68)))
 (let ((?x102882 (* 2.0 l_0_17_49)))
 (let ((?x103075 (* ?x102882 l_0_17_67)))
 (let ((?x102879 (* 2.0 l_0_17_48)))
 (let ((?x103073 (* ?x102879 l_0_17_66)))
 (let ((?x102876 (* 2.0 l_0_17_47)))
 (let ((?x103071 (* ?x102876 l_0_17_65)))
 (let ((?x104735 (* 2.0 l_0_17_303)))
 (let ((?x104853 (* ?x104735 l_0_17_321)))
 (let ((?x104732 (* 2.0 l_0_17_302)))
 (let ((?x104851 (* ?x104732 l_0_17_320)))
 (let ((?x104729 (* 2.0 l_0_17_301)))
 (let ((?x104849 (* ?x104729 l_0_17_319)))
 (let ((?x104726 (* 2.0 l_0_17_300)))
 (let ((?x104847 (* ?x104726 l_0_17_318)))
 (let ((?x104723 (* 2.0 l_0_17_299)))
 (let ((?x104845 (* ?x104723 l_0_17_317)))
 (let ((?x104679 (* 2.0 l_0_17_262)))
 (let ((?x104843 (* ?x104679 l_0_17_284)))
 (let ((?x104676 (* 2.0 l_0_17_261)))
 (let ((?x104841 (* ?x104676 l_0_17_283)))
 (let ((?x104673 (* 2.0 l_0_17_260)))
 (let ((?x104839 (* ?x104673 l_0_17_282)))
 (let ((?x104670 (* 2.0 l_0_17_259)))
 (let ((?x104837 (* ?x104670 l_0_17_281)))
 (let ((?x102843 (* 2.0 l_0_17_15)))
 (let ((?x103049 (* ?x102843 l_0_17_33)))
 (let ((?x102840 (* 2.0 l_0_17_14)))
 (let ((?x103047 (* ?x102840 l_0_17_32)))
 (let ((?x102244 (* 2.0 l_0_17_13)))
 (let ((?x103045 (* ?x102244 l_0_17_31)))
 (let ((?x101871 (* 2.0 l_0_17_12)))
 (let ((?x103043 (* ?x101871 l_0_17_30)))
 (let ((?x82513 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_29) ?x103043) ?x103045) ?x103047) ?x103049)))
 (let ((?x104830 (- (- ?x82513 (* (* 2.0 l_0_17_223) l_0_17_227)) (* (* 2.0 l_0_17_224) l_0_17_228))))
 (let ((?x104836 (- (- ?x104830 (* (* 2.0 l_0_17_225) l_0_17_229)) (* (* 2.0 l_0_17_226) l_0_17_230))))
 (let ((?x104850 (+ (+ (+ (+ (+ (+ (+ ?x104836 ?x104837) ?x104839) ?x104841) ?x104843) ?x104845) ?x104847) ?x104849)))
 (let ((?x104859 (- (- (- (- (- (+ (+ ?x104850 ?x104851) ?x104853) ?x103071) ?x103073) ?x103075) ?x103077) ?x103079)))
 (= ?x104859 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103171 (* l_0_17_57 l_0_17_57)))
 (let ((?x103169 (* l_0_17_56 l_0_17_56)))
 (let ((?x103167 (* l_0_17_55 l_0_17_55)))
 (let ((?x103165 (* l_0_17_54 l_0_17_54)))
 (let ((?x103163 (* l_0_17_53 l_0_17_53)))
 (let ((?x103161 (* l_0_17_52 l_0_17_52)))
 (let ((?x104923 (* l_0_17_309 l_0_17_309)))
 (let ((?x104921 (* l_0_17_308 l_0_17_308)))
 (let ((?x104919 (* l_0_17_307 l_0_17_307)))
 (let ((?x104917 (* l_0_17_306 l_0_17_306)))
 (let ((?x104915 (* l_0_17_305 l_0_17_305)))
 (let ((?x104913 (* l_0_17_304 l_0_17_304)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104077 (* ?x104016 l_0_17_307)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104075 (* ?x104013 l_0_17_306)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104073 (* ?x104010 l_0_17_305)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104071 (* ?x104007 l_0_17_304)))
 (let ((?x103159 (* l_0_17_21 l_0_17_21)))
 (let ((?x103153 (* l_0_17_20 l_0_17_20)))
 (let ((?x102499 (* 2.0 l_0_17_190)))
 (let ((?x102566 (* ?x102499 l_0_17_199)))
 (let ((?x103143 (* l_0_17_19 l_0_17_19)))
 (let ((?x102496 (* 2.0 l_0_17_189)))
 (let ((?x102564 (* ?x102496 l_0_17_198)))
 (let ((?x102493 (* 2.0 l_0_17_188)))
 (let ((?x102562 (* ?x102493 l_0_17_197)))
 (let ((?x102490 (* 2.0 l_0_17_187)))
 (let ((?x102560 (* ?x102490 l_0_17_196)))
 (let ((?x103141 (* l_0_17_18 l_0_17_18)))
 (let ((?x103139 (* l_0_17_17 l_0_17_17)))
 (let ((?x103175 (* l_0_17_16 l_0_17_16)))
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102541 (* ?x102487 l_0_17_163)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102537 (* ?x102484 l_0_17_162)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102533 (* ?x102481 l_0_17_161)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x33937 (* ?x102478 l_0_17_160)))
 (let ((?x104902 (- (+ (+ (+ (+ (+ (+ ?x33937 ?x102533) ?x102537) ?x102541) ?x103175) ?x103139) ?x103141) ?x102560)))
 (let ((?x104909 (- (+ (+ (- (+ (- (- ?x104902 ?x102562) ?x102564) ?x103143) ?x102566) ?x103153) ?x103159) ?x104071)))
 (let ((?x104920 (+ (+ (+ (+ (- (- (- ?x104909 ?x104073) ?x104075) ?x104077) ?x104913) ?x104915) ?x104917) ?x104919)))
 (let ((?x104929 (- (- (- (- (- (+ (+ ?x104920 ?x104921) ?x104923) ?x103161) ?x103163) ?x103165) ?x103167) ?x103169)))
 (= (- ?x104929 ?x103171) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103291 (* 2.0 l_0_17_57)))
 (let ((?x103292 (* ?x103291 l_0_17_63)))
 (let ((?x103288 (* 2.0 l_0_17_56)))
 (let ((?x103289 (* ?x103288 l_0_17_62)))
 (let ((?x103285 (* 2.0 l_0_17_55)))
 (let ((?x103286 (* ?x103285 l_0_17_61)))
 (let ((?x103282 (* 2.0 l_0_17_54)))
 (let ((?x103283 (* ?x103282 l_0_17_60)))
 (let ((?x103279 (* 2.0 l_0_17_53)))
 (let ((?x103280 (* ?x103279 l_0_17_59)))
 (let ((?x103276 (* 2.0 l_0_17_52)))
 (let ((?x103277 (* ?x103276 l_0_17_58)))
 (let ((?x104972 (* 2.0 l_0_17_309)))
 (let ((?x104973 (* ?x104972 l_0_17_315)))
 (let ((?x104969 (* 2.0 l_0_17_308)))
 (let ((?x104970 (* ?x104969 l_0_17_314)))
 (let ((?x104966 (* 2.0 l_0_17_307)))
 (let ((?x104967 (* ?x104966 l_0_17_313)))
 (let ((?x104963 (* 2.0 l_0_17_306)))
 (let ((?x104964 (* ?x104963 l_0_17_312)))
 (let ((?x104960 (* 2.0 l_0_17_305)))
 (let ((?x104961 (* ?x104960 l_0_17_311)))
 (let ((?x104957 (* 2.0 l_0_17_304)))
 (let ((?x104958 (* ?x104957 l_0_17_310)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104126 (* ?x104016 l_0_17_313)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104124 (* ?x104013 l_0_17_312)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104122 (* ?x104010 l_0_17_311)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104120 (* ?x104007 l_0_17_310)))
 (let ((?x104679 (* 2.0 l_0_17_262)))
 (let ((?x104717 (* ?x104679 l_0_17_271)))
 (let ((?x104676 (* 2.0 l_0_17_261)))
 (let ((?x104715 (* ?x104676 l_0_17_270)))
 (let ((?x104673 (* 2.0 l_0_17_260)))
 (let ((?x104713 (* ?x104673 l_0_17_269)))
 (let ((?x104670 (* 2.0 l_0_17_259)))
 (let ((?x104711 (* ?x104670 l_0_17_268)))
 (let ((?x103273 (* 2.0 l_0_17_21)))
 (let ((?x103274 (* ?x103273 l_0_17_27)))
 (let ((?x103264 (* 2.0 l_0_17_20)))
 (let ((?x103265 (* ?x103264 l_0_17_26)))
 (let ((?x102499 (* 2.0 l_0_17_190)))
 (let ((?x102630 (* ?x102499 l_0_17_205)))
 (let ((?x103249 (* 2.0 l_0_17_19)))
 (let ((?x103250 (* ?x103249 l_0_17_25)))
 (let ((?x102496 (* 2.0 l_0_17_189)))
 (let ((?x102628 (* ?x102496 l_0_17_204)))
 (let ((?x102493 (* 2.0 l_0_17_188)))
 (let ((?x102626 (* ?x102493 l_0_17_203)))
 (let ((?x102490 (* 2.0 l_0_17_187)))
 (let ((?x102624 (* ?x102490 l_0_17_202)))
 (let ((?x102299 (* 2.0 l_0_17_18)))
 (let ((?x103247 (* ?x102299 l_0_17_24)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x103245 (* ?x101941 l_0_17_23)))
 (let ((?x101938 (* 2.0 l_0_17_16)))
 (let ((?x103225 (* ?x101938 l_0_17_22)))
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102622 (* ?x102487 l_0_17_169)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102620 (* ?x102484 l_0_17_168)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102618 (* ?x102481 l_0_17_167)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x102616 (* ?x102478 l_0_17_166)))
 (let ((?x104942 (- (+ (+ (+ (+ (+ (+ ?x102616 ?x102618) ?x102620) ?x102622) ?x103225) ?x103245) ?x103247) ?x102624)))
 (let ((?x104949 (- (+ (+ (- (+ (- (- ?x104942 ?x102626) ?x102628) ?x103250) ?x102630) ?x103265) ?x103274) ?x104711)))
 (let ((?x104956 (- (- (- (- (- (- (- ?x104949 ?x104713) ?x104715) ?x104717) ?x104120) ?x104122) ?x104124) ?x104126)))
 (let ((?x104975 (- (+ (+ (+ (+ (+ (+ ?x104956 ?x104958) ?x104961) ?x104964) ?x104967) ?x104970) ?x104973) ?x103277)))
 (= (- (- (- (- (- ?x104975 ?x103280) ?x103283) ?x103286) ?x103289) ?x103292) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103291 (* 2.0 l_0_17_57)))
 (let ((?x103416 (* ?x103291 l_0_17_70)))
 (let ((?x103288 (* 2.0 l_0_17_56)))
 (let ((?x103414 (* ?x103288 l_0_17_69)))
 (let ((?x103285 (* 2.0 l_0_17_55)))
 (let ((?x103412 (* ?x103285 l_0_17_68)))
 (let ((?x103282 (* 2.0 l_0_17_54)))
 (let ((?x103410 (* ?x103282 l_0_17_67)))
 (let ((?x103279 (* 2.0 l_0_17_53)))
 (let ((?x103408 (* ?x103279 l_0_17_66)))
 (let ((?x103276 (* 2.0 l_0_17_52)))
 (let ((?x103406 (* ?x103276 l_0_17_65)))
 (let ((?x104972 (* 2.0 l_0_17_309)))
 (let ((?x105046 (* ?x104972 l_0_17_322)))
 (let ((?x104969 (* 2.0 l_0_17_308)))
 (let ((?x105044 (* ?x104969 l_0_17_321)))
 (let ((?x104966 (* 2.0 l_0_17_307)))
 (let ((?x105042 (* ?x104966 l_0_17_320)))
 (let ((?x104963 (* 2.0 l_0_17_306)))
 (let ((?x105040 (* ?x104963 l_0_17_319)))
 (let ((?x104960 (* 2.0 l_0_17_305)))
 (let ((?x105038 (* ?x104960 l_0_17_318)))
 (let ((?x104957 (* 2.0 l_0_17_304)))
 (let ((?x105036 (* ?x104957 l_0_17_317)))
 (let ((?x104016 (* 2.0 l_0_17_298)))
 (let ((?x104215 (* ?x104016 l_0_17_320)))
 (let ((?x104013 (* 2.0 l_0_17_297)))
 (let ((?x104213 (* ?x104013 l_0_17_319)))
 (let ((?x104010 (* 2.0 l_0_17_296)))
 (let ((?x104211 (* ?x104010 l_0_17_318)))
 (let ((?x104007 (* 2.0 l_0_17_295)))
 (let ((?x104209 (* ?x104007 l_0_17_317)))
 (let ((?x103273 (* 2.0 l_0_17_21)))
 (let ((?x103404 (* ?x103273 l_0_17_34)))
 (let ((?x103264 (* 2.0 l_0_17_20)))
 (let ((?x103398 (* ?x103264 l_0_17_33)))
 (let ((?x102499 (* 2.0 l_0_17_190)))
 (let ((?x102727 (* ?x102499 l_0_17_212)))
 (let ((?x103249 (* 2.0 l_0_17_19)))
 (let ((?x103388 (* ?x103249 l_0_17_32)))
 (let ((?x102496 (* 2.0 l_0_17_189)))
 (let ((?x102725 (* ?x102496 l_0_17_211)))
 (let ((?x102493 (* 2.0 l_0_17_188)))
 (let ((?x102723 (* ?x102493 l_0_17_210)))
 (let ((?x102490 (* 2.0 l_0_17_187)))
 (let ((?x102721 (* ?x102490 l_0_17_209)))
 (let ((?x102299 (* 2.0 l_0_17_18)))
 (let ((?x103386 (* ?x102299 l_0_17_31)))
 (let ((?x101941 (* 2.0 l_0_17_17)))
 (let ((?x103384 (* ?x101941 l_0_17_30)))
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102719 (* ?x102487 l_0_17_176)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102717 (* ?x102484 l_0_17_175)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102715 (* ?x102481 l_0_17_174)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x102713 (* ?x102478 l_0_17_173)))
 (let ((?x105014 (+ (+ (+ (+ ?x102713 ?x102715) ?x102717) ?x102719) (* (* 2.0 l_0_17_16) l_0_17_29))))
 (let ((?x105021 (- (+ (- (- (- (+ (+ ?x105014 ?x103384) ?x103386) ?x102721) ?x102723) ?x102725) ?x103388) ?x102727)))
 (let ((?x105027 (- (- (+ (+ ?x105021 ?x103398) ?x103404) (* (* 2.0 l_0_17_223) l_0_17_232)) (* (* 2.0 l_0_17_224) l_0_17_233))))
 (let ((?x105031 (- (- ?x105027 (* (* 2.0 l_0_17_225) l_0_17_234)) (* (* 2.0 l_0_17_226) l_0_17_235))))
 (let ((?x105041 (+ (+ (+ (- (- (- (- ?x105031 ?x104209) ?x104211) ?x104213) ?x104215) ?x105036) ?x105038) ?x105040)))
 (let ((?x105051 (- (- (- (- (+ (+ (+ ?x105041 ?x105042) ?x105044) ?x105046) ?x103406) ?x103408) ?x103410) ?x103412)))
 (= (- (- ?x105051 ?x103414) ?x103416) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103524 (* l_0_17_64 l_0_17_64)))
 (let ((?x103522 (* l_0_17_63 l_0_17_63)))
 (let ((?x103520 (* l_0_17_62 l_0_17_62)))
 (let ((?x103518 (* l_0_17_61 l_0_17_61)))
 (let ((?x103516 (* l_0_17_60 l_0_17_60)))
 (let ((?x103514 (* l_0_17_59 l_0_17_59)))
 (let ((?x103512 (* l_0_17_58 l_0_17_58)))
 (let ((?x105102 (* l_0_17_316 l_0_17_316)))
 (let ((?x105100 (* l_0_17_315 l_0_17_315)))
 (let ((?x105098 (* l_0_17_314 l_0_17_314)))
 (let ((?x105096 (* l_0_17_313 l_0_17_313)))
 (let ((?x105094 (* l_0_17_312 l_0_17_312)))
 (let ((?x105092 (* l_0_17_311 l_0_17_311)))
 (let ((?x105090 (* l_0_17_310 l_0_17_310)))
 (let ((?x103510 (* l_0_17_28 l_0_17_28)))
 (let ((?x103508 (* l_0_17_27 l_0_17_27)))
 (let ((?x104679 (* 2.0 l_0_17_262)))
 (let ((?x104781 (* ?x104679 l_0_17_277)))
 (let ((?x104676 (* 2.0 l_0_17_261)))
 (let ((?x104778 (* ?x104676 l_0_17_276)))
 (let ((?x104673 (* 2.0 l_0_17_260)))
 (let ((?x104775 (* ?x104673 l_0_17_275)))
 (let ((?x103506 (* l_0_17_26 l_0_17_26)))
 (let ((?x104670 (* 2.0 l_0_17_259)))
 (let ((?x104772 (* ?x104670 l_0_17_274)))
 (let ((?x103504 (* l_0_17_25 l_0_17_25)))
 (let ((?x103502 (* l_0_17_24 l_0_17_24)))
 (let ((?x105082 (+ (+ (+ (* l_0_17_22 l_0_17_22) (* l_0_17_23 l_0_17_23)) ?x103502) ?x103504)))
 (let ((?x105089 (+ (+ (- (- (- (+ (- ?x105082 ?x104772) ?x103506) ?x104775) ?x104778) ?x104781) ?x103508) ?x103510)))
 (let ((?x105103 (+ (+ (+ (+ (+ (+ (+ ?x105089 ?x105090) ?x105092) ?x105094) ?x105096) ?x105098) ?x105100) ?x105102)))
 (let ((?x105110 (- (- (- (- (- (- (- ?x105103 ?x103512) ?x103514) ?x103516) ?x103518) ?x103520) ?x103522) ?x103524)))
 (= ?x105110 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x103676 (* (* 2.0 l_0_17_64) l_0_17_71)))
 (let ((?x103673 (* (* 2.0 l_0_17_63) l_0_17_70)))
 (let ((?x103670 (* (* 2.0 l_0_17_62) l_0_17_69)))
 (let ((?x103667 (* (* 2.0 l_0_17_61) l_0_17_68)))
 (let ((?x103664 (* (* 2.0 l_0_17_60) l_0_17_67)))
 (let ((?x103661 (* (* 2.0 l_0_17_59) l_0_17_66)))
 (let ((?x103658 (* (* 2.0 l_0_17_58) l_0_17_65)))
 (let ((?x105158 (* (* 2.0 l_0_17_316) l_0_17_323)))
 (let ((?x105155 (* (* 2.0 l_0_17_315) l_0_17_322)))
 (let ((?x105152 (* (* 2.0 l_0_17_314) l_0_17_321)))
 (let ((?x105149 (* (* 2.0 l_0_17_313) l_0_17_320)))
 (let ((?x105146 (* (* 2.0 l_0_17_312) l_0_17_319)))
 (let ((?x105143 (* (* 2.0 l_0_17_311) l_0_17_318)))
 (let ((?x105140 (* (* 2.0 l_0_17_310) l_0_17_317)))
 (let ((?x103655 (* (* 2.0 l_0_17_28) l_0_17_35)))
 (let ((?x103652 (* (* 2.0 l_0_17_27) l_0_17_34)))
 (let ((?x104679 (* 2.0 l_0_17_262)))
 (let ((?x104843 (* ?x104679 l_0_17_284)))
 (let ((?x104676 (* 2.0 l_0_17_261)))
 (let ((?x104841 (* ?x104676 l_0_17_283)))
 (let ((?x104673 (* 2.0 l_0_17_260)))
 (let ((?x104839 (* ?x104673 l_0_17_282)))
 (let ((?x103649 (* (* 2.0 l_0_17_26) l_0_17_33)))
 (let ((?x104670 (* 2.0 l_0_17_259)))
 (let ((?x104837 (* ?x104670 l_0_17_281)))
 (let ((?x103646 (* (* 2.0 l_0_17_25) l_0_17_32)))
 (let ((?x102379 (* 2.0 l_0_17_24)))
 (let ((?x103643 (* ?x102379 l_0_17_31)))
 (let ((?x102045 (* 2.0 l_0_17_23)))
 (let ((?x103641 (* ?x102045 l_0_17_30)))
 (let ((?x102374 (* 2.0 l_0_17_22)))
 (let ((?x103639 (* ?x102374 l_0_17_29)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101786 (* ?x101738 l_0_17_152)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x35430 (* ?x101874 l_0_17_151)))
 (let ((?x105117 (+ (* (* 1.0 l_0_17_110) l_0_17_115) (* (* 1.0 l_0_17_111) l_0_17_116))))
 (let ((?x105122 (- (+ (- (- ?x105117 ?x35430) ?x101786) ?x103639) (* (* 2.0 l_0_17_223) l_0_17_238))))
 (let ((?x105126 (- (- ?x105122 (* (* 2.0 l_0_17_224) l_0_17_239)) (* (* 2.0 l_0_17_225) l_0_17_240))))
 (let ((?x105131 (+ (+ (+ (- ?x105126 (* (* 2.0 l_0_17_226) l_0_17_241)) ?x103641) ?x103643) ?x103646)))
 (let ((?x105138 (+ (+ (- (- (- (+ (- ?x105131 ?x104837) ?x103649) ?x104839) ?x104841) ?x104843) ?x103652) ?x103655)))
 (let ((?x105159 (+ (+ (+ (+ (+ (+ (+ ?x105138 ?x105140) ?x105143) ?x105146) ?x105149) ?x105152) ?x105155) ?x105158)))
 (let ((?x105166 (- (- (- (- (- (- (- ?x105159 ?x103658) ?x103661) ?x103664) ?x103667) ?x103670) ?x103673) ?x103676)))
 (let ((?x105170 (- (- ?x105166 (* (* 1.0 l_0_17_74) l_0_17_79)) (* (* 1.0 l_0_17_75) l_0_17_80))))
 (= ?x105170 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x103801 (* l_0_17_72 l_0_17_72)))
 (let ((?x103799 (* l_0_17_71 l_0_17_71)))
 (let ((?x103797 (* l_0_17_70 l_0_17_70)))
 (let ((?x103795 (* l_0_17_69 l_0_17_69)))
 (let ((?x103793 (* l_0_17_68 l_0_17_68)))
 (let ((?x103791 (* l_0_17_67 l_0_17_67)))
 (let ((?x103789 (* l_0_17_66 l_0_17_66)))
 (let ((?x103787 (* l_0_17_65 l_0_17_65)))
 (let ((?x103785 (* l_0_17_36 l_0_17_36)))
 (let ((?x103783 (* l_0_17_35 l_0_17_35)))
 (let ((?x103781 (* l_0_17_34 l_0_17_34)))
 (let ((?x103779 (* l_0_17_33 l_0_17_33)))
 (let ((?x105247 (* l_0_17_324 l_0_17_324)))
 (let ((?x105245 (* l_0_17_323 l_0_17_323)))
 (let ((?x105243 (* l_0_17_322 l_0_17_322)))
 (let ((?x105241 (* l_0_17_321 l_0_17_321)))
 (let ((?x105239 (* l_0_17_320 l_0_17_320)))
 (let ((?x103777 (* l_0_17_32 l_0_17_32)))
 (let ((?x105236 (* l_0_17_319 l_0_17_319)))
 (let ((?x105234 (* l_0_17_318 l_0_17_318)))
 (let ((?x105232 (* l_0_17_317 l_0_17_317)))
 (let ((?x103775 (* l_0_17_31 l_0_17_31)))
 (let ((?x103773 (* l_0_17_30 l_0_17_30)))
 (let ((?x103771 (* l_0_17_29 l_0_17_29)))
 (let ((?x105224 (- (* (* (- 2.0) l_0_17_223) l_0_17_245) (* (* 2.0 l_0_17_224) l_0_17_246))))
 (let ((?x105228 (- (- ?x105224 (* (* 2.0 l_0_17_225) l_0_17_247)) (* (* 2.0 l_0_17_226) l_0_17_248))))
 (let ((?x105238 (+ (+ (+ (+ (+ (+ (+ ?x105228 ?x103771) ?x103773) ?x103775) ?x105232) ?x105234) ?x105236) ?x103777)))
 (let ((?x105250 (+ (+ (+ (+ (+ (+ (+ ?x105238 ?x105239) ?x105241) ?x105243) ?x105245) ?x105247) ?x103779) ?x103781)))
 (let ((?x105257 (- (- (- (- (- (+ (+ ?x105250 ?x103783) ?x103785) ?x103787) ?x103789) ?x103791) ?x103793) ?x103795)))
 (= (- (- (- ?x105257 ?x103797) ?x103799) ?x103801) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x101523 (* l_0_17_145 l_0_17_145)))
 (let ((?x82956 (* l_0_17_109 l_0_17_109)))
 (let ((?x82964 (* (/ 1.0 2.0) ?x82956)))
 (= (- (- ?x82964 ?x101523) (* (* (/ 1.0 2.0) l_0_17_73) l_0_17_73)) 0.0)))))
(assert
 (let ((?x105158 (* (* 2.0 l_0_17_316) l_0_17_323)))
 (let ((?x105155 (* (* 2.0 l_0_17_315) l_0_17_322)))
 (let ((?x105152 (* (* 2.0 l_0_17_314) l_0_17_321)))
 (let ((?x105149 (* (* 2.0 l_0_17_313) l_0_17_320)))
 (let ((?x105146 (* (* 2.0 l_0_17_312) l_0_17_319)))
 (let ((?x105143 (* (* 2.0 l_0_17_311) l_0_17_318)))
 (let ((?x105140 (* (* 2.0 l_0_17_310) l_0_17_317)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x105310 (* ?x104002 l_0_17_281)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101561 (* ?x101560 l_0_17_146)))
 (let ((?x37600 (+ (* (* 2.0 l_0_17_100) l_0_17_107) (* (* 2.0 l_0_17_101) l_0_17_94))))
 (let ((?x82935 (+ (+ ?x37600 (* (* 2.0 l_0_17_102) l_0_17_95)) (* (* 2.0 l_0_17_103) l_0_17_96))))
 (let ((?x105280 (+ (+ ?x82935 (* (* 2.0 l_0_17_104) l_0_17_97)) (* (* 2.0 l_0_17_105) l_0_17_98))))
 (let ((?x105285 (+ (+ ?x105280 (* (* 2.0 l_0_17_106) l_0_17_99)) (* (* 1.0 l_0_17_109) l_0_17_110))))
 (let ((?x105291 (- (- ?x105285 (* (* 2.0 l_0_17_130) l_0_17_137)) (* (* 2.0 l_0_17_131) l_0_17_138))))
 (let ((?x105297 (- (- ?x105291 (* (* 2.0 l_0_17_132) l_0_17_139)) (* (* 2.0 l_0_17_133) l_0_17_140))))
 (let ((?x105303 (- (- ?x105297 (* (* 2.0 l_0_17_134) l_0_17_141)) (* (* 2.0 l_0_17_135) l_0_17_142))))
 (let ((?x105309 (- (- (- ?x105303 (* (* 2.0 l_0_17_136) l_0_17_143)) ?x101561) (* (* 2.0 l_0_17_217) l_0_17_238))))
 (let ((?x105317 (+ (+ (+ (+ (+ (+ (- ?x105309 ?x105310) ?x105140) ?x105143) ?x105146) ?x105149) ?x105152) ?x105155)))
 (= (- (+ ?x105317 ?x105158) (* (* 1.0 l_0_17_73) l_0_17_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101627 (* ?x101560 l_0_17_151)))
 (let ((?x105379 (- (- (* (* 1.0 l_0_17_109) l_0_17_115) ?x101627) (* (* 1.0 l_0_17_73) l_0_17_79))))
 (= ?x105379 0.0)))))
(assert
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101645 (* ?x101560 l_0_17_155)))
 (let ((?x105392 (- (- (* (* 1.0 l_0_17_109) l_0_17_119) ?x101645) (* (* 1.0 l_0_17_73) l_0_17_83))))
 (= ?x105392 0.0)))))
(assert
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101669 (* ?x101560 l_0_17_160)))
 (let ((?x105404 (- (- (* (* 1.0 l_0_17_109) l_0_17_124) ?x101669) (* (* 1.0 l_0_17_73) l_0_17_88))))
 (= ?x105404 0.0)))))
(assert
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101692 (* ?x101560 l_0_17_166)))
 (let ((?x105416 (- (- (* (* 1.0 l_0_17_109) l_0_17_130) ?x101692) (* (* 1.0 l_0_17_73) l_0_17_94))))
 (= ?x105416 0.0)))))
(assert
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101719 (* ?x101560 l_0_17_173)))
 (let ((?x105427 (+ (* (* (- 1.0) l_0_17_101) l_0_17_73) (* (* 1.0 l_0_17_109) l_0_17_137))))
 (= (- ?x105427 ?x101719) 0.0)))))
(assert
 (let ((?x105490 (* (* 2.0 l_0_17_280) l_0_17_287)))
 (let ((?x105487 (* (* 2.0 l_0_17_279) l_0_17_286)))
 (let ((?x105484 (* (* 2.0 l_0_17_278) l_0_17_285)))
 (let ((?x105481 (* (* 2.0 l_0_17_277) l_0_17_284)))
 (let ((?x105478 (* (* 2.0 l_0_17_276) l_0_17_283)))
 (let ((?x105475 (* (* 2.0 l_0_17_275) l_0_17_282)))
 (let ((?x105472 (* (* 2.0 l_0_17_274) l_0_17_281)))
 (let ((?x105468 (* 2.0 l_0_17_267)))
 (let ((?x105469 (* ?x105468 l_0_17_285)))
 (let ((?x105465 (* 2.0 l_0_17_266)))
 (let ((?x105466 (* ?x105465 l_0_17_284)))
 (let ((?x105462 (* 2.0 l_0_17_265)))
 (let ((?x105463 (* ?x105462 l_0_17_283)))
 (let ((?x105459 (* 2.0 l_0_17_264)))
 (let ((?x105460 (* ?x105459 l_0_17_282)))
 (let ((?x105456 (* 2.0 l_0_17_263)))
 (let ((?x105457 (* ?x105456 l_0_17_281)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101877 (* ?x101738 l_0_17_156)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x101875 (* ?x101874 l_0_17_155)))
 (let ((?x105438 (+ (* (* 1.0 l_0_17_110) l_0_17_119) (* (* 1.0 l_0_17_111) l_0_17_120))))
 (let ((?x105446 (- (- (- (- ?x105438 ?x101875) ?x101877) (* (* 2.0 l_0_17_227) l_0_17_238)) (* (* 2.0 l_0_17_228) l_0_17_239))))
 (let ((?x105452 (- (- ?x105446 (* (* 2.0 l_0_17_229) l_0_17_240)) (* (* 2.0 l_0_17_230) l_0_17_241))))
 (let ((?x105464 (- (- (- (- ?x105452 (* (* 2.0 l_0_17_231) l_0_17_242)) ?x105457) ?x105460) ?x105463)))
 (let ((?x105485 (+ (+ (+ (+ (+ (- (- ?x105464 ?x105466) ?x105469) ?x105472) ?x105475) ?x105478) ?x105481) ?x105484)))
 (let ((?x105495 (- (- (+ (+ ?x105485 ?x105487) ?x105490) (* (* 1.0 l_0_17_74) l_0_17_83)) (* (* 1.0 l_0_17_75) l_0_17_84))))
 (= ?x105495 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x105158 (* (* 2.0 l_0_17_316) l_0_17_323)))
 (let ((?x105155 (* (* 2.0 l_0_17_315) l_0_17_322)))
 (let ((?x105152 (* (* 2.0 l_0_17_314) l_0_17_321)))
 (let ((?x105149 (* (* 2.0 l_0_17_313) l_0_17_320)))
 (let ((?x105146 (* (* 2.0 l_0_17_312) l_0_17_319)))
 (let ((?x105143 (* (* 2.0 l_0_17_311) l_0_17_318)))
 (let ((?x105140 (* (* 2.0 l_0_17_310) l_0_17_317)))
 (let ((?x105618 (* 2.0 l_0_17_273)))
 (let ((?x105619 (* ?x105618 l_0_17_286)))
 (let ((?x105615 (* 2.0 l_0_17_272)))
 (let ((?x105616 (* ?x105615 l_0_17_285)))
 (let ((?x105612 (* 2.0 l_0_17_271)))
 (let ((?x105613 (* ?x105612 l_0_17_284)))
 (let ((?x105609 (* 2.0 l_0_17_270)))
 (let ((?x105610 (* ?x105609 l_0_17_283)))
 (let ((?x105606 (* 2.0 l_0_17_269)))
 (let ((?x105607 (* ?x105606 l_0_17_282)))
 (let ((?x105603 (* 2.0 l_0_17_268)))
 (let ((?x105604 (* ?x105603 l_0_17_281)))
 (let ((?x103637 (* (* 2.0 l_0_17_208) l_0_17_215)))
 (let ((?x103634 (* (* 2.0 l_0_17_207) l_0_17_214)))
 (let ((?x103631 (* (* 2.0 l_0_17_206) l_0_17_213)))
 (let ((?x103628 (* (* 2.0 l_0_17_205) l_0_17_212)))
 (let ((?x103625 (* (* 2.0 l_0_17_204) l_0_17_211)))
 (let ((?x103622 (* (* 2.0 l_0_17_203) l_0_17_210)))
 (let ((?x103619 (* (* 2.0 l_0_17_202) l_0_17_209)))
 (let ((?x103616 (* (* 2.0 l_0_17_172) l_0_17_179)))
 (let ((?x103613 (* (* 2.0 l_0_17_171) l_0_17_178)))
 (let ((?x103610 (* (* 2.0 l_0_17_170) l_0_17_177)))
 (let ((?x103607 (* (* 2.0 l_0_17_169) l_0_17_176)))
 (let ((?x103604 (* (* 2.0 l_0_17_168) l_0_17_175)))
 (let ((?x103601 (* (* 2.0 l_0_17_167) l_0_17_174)))
 (let ((?x103598 (* (* 2.0 l_0_17_166) l_0_17_173)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101914 (* ?x101738 l_0_17_161)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x105568 (* ?x101874 l_0_17_160)))
 (let ((?x105567 (+ (* (* 1.0 l_0_17_110) l_0_17_124) (* (* 1.0 l_0_17_111) l_0_17_125))))
 (let ((?x105575 (+ (+ (+ (+ (+ (- (- ?x105567 ?x105568) ?x101914) ?x103598) ?x103601) ?x103604) ?x103607) ?x103610)))
 (let ((?x105582 (- (- (- (- (- (+ (+ ?x105575 ?x103613) ?x103616) ?x103619) ?x103622) ?x103625) ?x103628) ?x103631)))
 (let ((?x105590 (- (- (- (- ?x105582 ?x103634) ?x103637) (* (* 2.0 l_0_17_232) l_0_17_238)) (* (* 2.0 l_0_17_233) l_0_17_239))))
 (let ((?x105596 (- (- ?x105590 (* (* 2.0 l_0_17_234) l_0_17_240)) (* (* 2.0 l_0_17_235) l_0_17_241))))
 (let ((?x105602 (- (- ?x105596 (* (* 2.0 l_0_17_236) l_0_17_242)) (* (* 2.0 l_0_17_237) l_0_17_243))))
 (let ((?x105621 (- (- (- (- (- (- (- ?x105602 ?x105604) ?x105607) ?x105610) ?x105613) ?x105616) ?x105619) ?x105140)))
 (let ((?x105629 (- (- (- (- (- (- (- ?x105621 ?x105143) ?x105146) ?x105149) ?x105152) ?x105155) ?x105158) (* (* 1.0 l_0_17_74) l_0_17_88))))
 (= (- ?x105629 (* (* 1.0 l_0_17_75) l_0_17_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x105490 (* (* 2.0 l_0_17_280) l_0_17_287)))
 (let ((?x105487 (* (* 2.0 l_0_17_279) l_0_17_286)))
 (let ((?x105484 (* (* 2.0 l_0_17_278) l_0_17_285)))
 (let ((?x105481 (* (* 2.0 l_0_17_277) l_0_17_284)))
 (let ((?x105478 (* (* 2.0 l_0_17_276) l_0_17_283)))
 (let ((?x105475 (* (* 2.0 l_0_17_275) l_0_17_282)))
 (let ((?x105472 (* (* 2.0 l_0_17_274) l_0_17_281)))
 (let ((?x62188 (* l_0_17_244 l_0_17_244)))
 (let ((?x62150 (* l_0_17_243 l_0_17_243)))
 (let ((?x38001 (* l_0_17_242 l_0_17_242)))
 (let ((?x38004 (* l_0_17_241 l_0_17_241)))
 (let ((?x38003 (* l_0_17_240 l_0_17_240)))
 (let ((?x38000 (* l_0_17_239 l_0_17_239)))
 (let ((?x62140 (* l_0_17_238 l_0_17_238)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x102031 (* ?x101738 l_0_17_167)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x102028 (* ?x101874 l_0_17_166)))
 (let ((?x62138 (+ (* (* 1.0 l_0_17_110) l_0_17_130) (* (* 1.0 l_0_17_111) l_0_17_131))))
 (let ((?x62184 (- (- (- (- (- (- (- ?x62138 ?x102028) ?x102031) ?x62140) ?x38000) ?x38003) ?x38004) ?x38001)))
 (let ((?x62191 (- (- (- (- (- (- (- ?x62184 ?x62150) ?x62188) ?x105472) ?x105475) ?x105478) ?x105481) ?x105484)))
 (let ((?x38062 (- (- (- (- ?x62191 ?x105487) ?x105490) (* (* 1.0 l_0_17_74) l_0_17_94)) (* (* 1.0 l_0_17_75) l_0_17_95))))
 (= ?x38062 0.0))))))))))))))))))))))))
(assert
 (let ((?x105661 (* l_0_17_288 l_0_17_288)))
 (let ((?x105659 (* l_0_17_287 l_0_17_287)))
 (let ((?x105657 (* l_0_17_286 l_0_17_286)))
 (let ((?x105655 (* l_0_17_285 l_0_17_285)))
 (let ((?x105653 (* l_0_17_284 l_0_17_284)))
 (let ((?x105651 (* l_0_17_283 l_0_17_283)))
 (let ((?x105649 (* l_0_17_282 l_0_17_282)))
 (let ((?x105647 (* l_0_17_281 l_0_17_281)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x102091 (* ?x101738 l_0_17_174)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x83267 (* ?x101874 l_0_17_173)))
 (let ((?x58992 (- (* (* (- 1.0) l_0_17_101) l_0_17_74) (* (* 1.0 l_0_17_102) l_0_17_75))))
 (let ((?x83289 (+ (+ ?x58992 (* (* 1.0 l_0_17_110) l_0_17_137)) (* (* 1.0 l_0_17_111) l_0_17_138))))
 (let ((?x62102 (- (- (- (- ?x83289 ?x83267) ?x102091) (* (* 2.0 l_0_17_238) l_0_17_245)) (* (* 2.0 l_0_17_239) l_0_17_246))))
 (let ((?x62099 (- (- ?x62102 (* (* 2.0 l_0_17_240) l_0_17_247)) (* (* 2.0 l_0_17_241) l_0_17_248))))
 (let ((?x105643 (- (- ?x62099 (* (* 2.0 l_0_17_242) l_0_17_249)) (* (* 2.0 l_0_17_243) l_0_17_250))))
 (let ((?x105652 (- (- (- (- ?x105643 (* (* 2.0 l_0_17_244) l_0_17_251)) ?x105647) ?x105649) ?x105651)))
 (= (- (- (- (- (- ?x105652 ?x105653) ?x105655) ?x105657) ?x105659) ?x105661) 0.0))))))))))))))))))))
(assert
 (let ((?x80755 (* l_0_17_154 l_0_17_154)))
 (let ((?x80753 (* l_0_17_153 l_0_17_153)))
 (let ((?x60555 (* l_0_17_152 l_0_17_152)))
 (let ((?x60545 (* l_0_17_151 l_0_17_151)))
 (let ((?x105698 (+ (* (/ 1.0 2.0) (* l_0_17_115 l_0_17_115)) (* (/ 1.0 2.0) (* l_0_17_116 l_0_17_116)))))
 (let ((?x105702 (+ (+ ?x105698 (* (/ 1.0 2.0) (* l_0_17_117 l_0_17_117))) (* (/ 1.0 2.0) (* l_0_17_118 l_0_17_118)))))
 (let ((?x105709 (- (- (- (- (- ?x105702 ?x60545) ?x60555) ?x80753) ?x80755) (* (* (/ 1.0 2.0) l_0_17_79) l_0_17_79))))
 (let ((?x105715 (- (- ?x105709 (* (* (/ 1.0 2.0) l_0_17_80) l_0_17_80)) (* (* (/ 1.0 2.0) l_0_17_81) l_0_17_81))))
 (= (- ?x105715 (* (* (/ 1.0 2.0) l_0_17_82) l_0_17_82)) 0.0))))))))))
(assert
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102488 (* ?x102487 l_0_17_158)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102485 (* ?x102484 l_0_17_157)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102482 (* ?x102481 l_0_17_156)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x102479 (* ?x102478 l_0_17_155)))
 (let ((?x105738 (+ (* (* 1.0 l_0_17_115) l_0_17_119) (* (* 1.0 l_0_17_116) l_0_17_120))))
 (let ((?x105744 (+ (+ ?x105738 (* (* 1.0 l_0_17_117) l_0_17_121)) (* (* 1.0 l_0_17_118) l_0_17_122))))
 (let ((?x105751 (- (- (- (- (- ?x105744 ?x102479) ?x102482) ?x102485) ?x102488) (* (* 1.0 l_0_17_79) l_0_17_83))))
 (let ((?x105757 (- (- ?x105751 (* (* 1.0 l_0_17_80) l_0_17_84)) (* (* 1.0 l_0_17_81) l_0_17_85))))
 (= (- ?x105757 (* (* 1.0 l_0_17_82) l_0_17_86)) 0.0))))))))))))))
(assert
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102541 (* ?x102487 l_0_17_163)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102537 (* ?x102484 l_0_17_162)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102533 (* ?x102481 l_0_17_161)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x33937 (* ?x102478 l_0_17_160)))
 (let ((?x105782 (+ (* (* 1.0 l_0_17_115) l_0_17_124) (* (* 1.0 l_0_17_116) l_0_17_125))))
 (let ((?x105786 (+ (+ ?x105782 (* (* 1.0 l_0_17_117) l_0_17_126)) (* (* 1.0 l_0_17_118) l_0_17_127))))
 (let ((?x105792 (- (- (- (- (- ?x105786 ?x33937) ?x102533) ?x102537) ?x102541) (* (* 1.0 l_0_17_79) l_0_17_88))))
 (let ((?x105796 (- (- ?x105792 (* (* 1.0 l_0_17_80) l_0_17_89)) (* (* 1.0 l_0_17_81) l_0_17_90))))
 (= (- ?x105796 (* (* 1.0 l_0_17_82) l_0_17_91)) 0.0))))))))))))))
(assert
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102622 (* ?x102487 l_0_17_169)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102620 (* ?x102484 l_0_17_168)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102618 (* ?x102481 l_0_17_167)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x102616 (* ?x102478 l_0_17_166)))
 (let ((?x105817 (+ (* (* 1.0 l_0_17_115) l_0_17_130) (* (* 1.0 l_0_17_116) l_0_17_131))))
 (let ((?x105821 (+ (+ ?x105817 (* (* 1.0 l_0_17_117) l_0_17_132)) (* (* 1.0 l_0_17_118) l_0_17_133))))
 (let ((?x105827 (- (- (- (- (- ?x105821 ?x102616) ?x102618) ?x102620) ?x102622) (* (* 1.0 l_0_17_79) l_0_17_94))))
 (let ((?x105831 (- (- ?x105827 (* (* 1.0 l_0_17_80) l_0_17_95)) (* (* 1.0 l_0_17_81) l_0_17_96))))
 (= (- ?x105831 (* (* 1.0 l_0_17_82) l_0_17_97)) 0.0))))))))))))))
(assert
 (let ((?x102487 (* 2.0 l_0_17_154)))
 (let ((?x102719 (* ?x102487 l_0_17_176)))
 (let ((?x102484 (* 2.0 l_0_17_153)))
 (let ((?x102717 (* ?x102484 l_0_17_175)))
 (let ((?x102481 (* 2.0 l_0_17_152)))
 (let ((?x102715 (* ?x102481 l_0_17_174)))
 (let ((?x102478 (* 2.0 l_0_17_151)))
 (let ((?x102713 (* ?x102478 l_0_17_173)))
 (let ((?x62494 (- (* (* (- 1.0) l_0_17_101) l_0_17_79) (* (* 1.0 l_0_17_102) l_0_17_80))))
 (let ((?x38407 (- (- ?x62494 (* (* 1.0 l_0_17_103) l_0_17_81)) (* (* 1.0 l_0_17_104) l_0_17_82))))
 (let ((?x105851 (+ (+ ?x38407 (* (* 1.0 l_0_17_115) l_0_17_137)) (* (* 1.0 l_0_17_116) l_0_17_138))))
 (let ((?x105855 (+ (+ ?x105851 (* (* 1.0 l_0_17_117) l_0_17_139)) (* (* 1.0 l_0_17_118) l_0_17_140))))
 (= (- (- (- (- ?x105855 ?x102713) ?x102715) ?x102717) ?x102719) 0.0))))))))))))))
(assert
 (let ((?x102798 (* l_0_17_159 l_0_17_159)))
 (let ((?x102796 (* l_0_17_158 l_0_17_158)))
 (let ((?x102794 (* l_0_17_157 l_0_17_157)))
 (let ((?x102792 (* l_0_17_156 l_0_17_156)))
 (let ((?x102790 (* l_0_17_155 l_0_17_155)))
 (let ((?x105877 (+ (* (/ 1.0 2.0) (* l_0_17_119 l_0_17_119)) (* (/ 1.0 2.0) (* l_0_17_120 l_0_17_120)))))
 (let ((?x105883 (+ (+ ?x105877 (* (/ 1.0 2.0) (* l_0_17_121 l_0_17_121))) (* (/ 1.0 2.0) (* l_0_17_122 l_0_17_122)))))
 (let ((?x105889 (- (- (- (+ ?x105883 (* (/ 1.0 2.0) (* l_0_17_123 l_0_17_123))) ?x102790) ?x102792) ?x102794)))
 (let ((?x105897 (- (- (- (- ?x105889 ?x102796) ?x102798) (* (* (/ 1.0 2.0) l_0_17_83) l_0_17_83)) (* (* (/ 1.0 2.0) l_0_17_84) l_0_17_84))))
 (let ((?x105903 (- (- ?x105897 (* (* (/ 1.0 2.0) l_0_17_85) l_0_17_85)) (* (* (/ 1.0 2.0) l_0_17_86) l_0_17_86))))
 (= (- ?x105903 (* (* (/ 1.0 2.0) l_0_17_87) l_0_17_87)) 0.0))))))))))))
(assert
 (let ((?x102858 (* 2.0 l_0_17_159)))
 (let ((?x102859 (* ?x102858 l_0_17_164)))
 (let ((?x102855 (* 2.0 l_0_17_158)))
 (let ((?x102856 (* ?x102855 l_0_17_163)))
 (let ((?x102852 (* 2.0 l_0_17_157)))
 (let ((?x102853 (* ?x102852 l_0_17_162)))
 (let ((?x102849 (* 2.0 l_0_17_156)))
 (let ((?x102850 (* ?x102849 l_0_17_161)))
 (let ((?x102846 (* 2.0 l_0_17_155)))
 (let ((?x102847 (* ?x102846 l_0_17_160)))
 (let ((?x105930 (+ (* (* 1.0 l_0_17_119) l_0_17_124) (* (* 1.0 l_0_17_120) l_0_17_125))))
 (let ((?x105936 (+ (+ ?x105930 (* (* 1.0 l_0_17_121) l_0_17_126)) (* (* 1.0 l_0_17_122) l_0_17_127))))
 (let ((?x105942 (- (- (- (+ ?x105936 (* (* 1.0 l_0_17_123) l_0_17_128)) ?x102847) ?x102850) ?x102853)))
 (let ((?x105950 (- (- (- (- ?x105942 ?x102856) ?x102859) (* (* 1.0 l_0_17_83) l_0_17_88)) (* (* 1.0 l_0_17_84) l_0_17_89))))
 (let ((?x105956 (- (- ?x105950 (* (* 1.0 l_0_17_85) l_0_17_90)) (* (* 1.0 l_0_17_86) l_0_17_91))))
 (= (- ?x105956 (* (* 1.0 l_0_17_87) l_0_17_92)) 0.0)))))))))))))))))
(assert
 (let ((?x102858 (* 2.0 l_0_17_159)))
 (let ((?x102964 (* ?x102858 l_0_17_170)))
 (let ((?x102855 (* 2.0 l_0_17_158)))
 (let ((?x102962 (* ?x102855 l_0_17_169)))
 (let ((?x102852 (* 2.0 l_0_17_157)))
 (let ((?x102960 (* ?x102852 l_0_17_168)))
 (let ((?x102849 (* 2.0 l_0_17_156)))
 (let ((?x102958 (* ?x102849 l_0_17_167)))
 (let ((?x102846 (* 2.0 l_0_17_155)))
 (let ((?x102956 (* ?x102846 l_0_17_166)))
 (let ((?x105988 (+ (* (* 1.0 l_0_17_119) l_0_17_130) (* (* 1.0 l_0_17_120) l_0_17_131))))
 (let ((?x105992 (+ (+ ?x105988 (* (* 1.0 l_0_17_121) l_0_17_132)) (* (* 1.0 l_0_17_122) l_0_17_133))))
 (let ((?x105997 (- (- (- (+ ?x105992 (* (* 1.0 l_0_17_123) l_0_17_134)) ?x102956) ?x102958) ?x102960)))
 (let ((?x106003 (- (- (- (- ?x105997 ?x102962) ?x102964) (* (* 1.0 l_0_17_83) l_0_17_94)) (* (* 1.0 l_0_17_84) l_0_17_95))))
 (let ((?x106007 (- (- ?x106003 (* (* 1.0 l_0_17_85) l_0_17_96)) (* (* 1.0 l_0_17_86) l_0_17_97))))
 (= (- ?x106007 (* (* 1.0 l_0_17_87) l_0_17_98)) 0.0)))))))))))))))))
(assert
 (let ((?x102858 (* 2.0 l_0_17_159)))
 (let ((?x103059 (* ?x102858 l_0_17_177)))
 (let ((?x102855 (* 2.0 l_0_17_158)))
 (let ((?x103057 (* ?x102855 l_0_17_176)))
 (let ((?x102852 (* 2.0 l_0_17_157)))
 (let ((?x103055 (* ?x102852 l_0_17_175)))
 (let ((?x102849 (* 2.0 l_0_17_156)))
 (let ((?x103053 (* ?x102849 l_0_17_174)))
 (let ((?x102846 (* 2.0 l_0_17_155)))
 (let ((?x103051 (* ?x102846 l_0_17_173)))
 (let ((?x106032 (- (* (* (- 1.0) l_0_17_101) l_0_17_83) (* (* 1.0 l_0_17_102) l_0_17_84))))
 (let ((?x106036 (- (- ?x106032 (* (* 1.0 l_0_17_103) l_0_17_85)) (* (* 1.0 l_0_17_104) l_0_17_86))))
 (let ((?x106041 (+ (- ?x106036 (* (* 1.0 l_0_17_105) l_0_17_87)) (* (* 1.0 l_0_17_119) l_0_17_137))))
 (let ((?x106045 (+ (+ ?x106041 (* (* 1.0 l_0_17_120) l_0_17_138)) (* (* 1.0 l_0_17_121) l_0_17_139))))
 (let ((?x106049 (+ (+ ?x106045 (* (* 1.0 l_0_17_122) l_0_17_140)) (* (* 1.0 l_0_17_123) l_0_17_141))))
 (= (- (- (- (- (- ?x106049 ?x103051) ?x103053) ?x103055) ?x103057) ?x103059) 0.0)))))))))))))))))
(assert
 (let ((?x103137 (* l_0_17_165 l_0_17_165)))
 (let ((?x103135 (* l_0_17_164 l_0_17_164)))
 (let ((?x103133 (* l_0_17_163 l_0_17_163)))
 (let ((?x103131 (* l_0_17_162 l_0_17_162)))
 (let ((?x103129 (* l_0_17_161 l_0_17_161)))
 (let ((?x103127 (* l_0_17_160 l_0_17_160)))
 (let ((?x106092 (* l_0_17_129 l_0_17_129)))
 (let ((?x106093 (* (/ 1.0 2.0) ?x106092)))
 (let ((?x106089 (* l_0_17_128 l_0_17_128)))
 (let ((?x106090 (* (/ 1.0 2.0) ?x106089)))
 (let ((?x106086 (* l_0_17_127 l_0_17_127)))
 (let ((?x106087 (* (/ 1.0 2.0) ?x106086)))
 (let ((?x106083 (* l_0_17_126 l_0_17_126)))
 (let ((?x106084 (* (/ 1.0 2.0) ?x106083)))
 (let ((?x106080 (* l_0_17_125 l_0_17_125)))
 (let ((?x106081 (* (/ 1.0 2.0) ?x106080)))
 (let ((?x38564 (* l_0_17_124 l_0_17_124)))
 (let ((?x106079 (* (/ 1.0 2.0) ?x38564)))
 (let ((?x106096 (- (- (+ (+ (+ (+ (+ ?x106079 ?x106081) ?x106084) ?x106087) ?x106090) ?x106093) ?x103127) ?x103129)))
 (let ((?x106103 (- (- (- (- (- ?x106096 ?x103131) ?x103133) ?x103135) ?x103137) (* (* (/ 1.0 2.0) l_0_17_88) l_0_17_88))))
 (let ((?x106109 (- (- ?x106103 (* (* (/ 1.0 2.0) l_0_17_89) l_0_17_89)) (* (* (/ 1.0 2.0) l_0_17_90) l_0_17_90))))
 (let ((?x106115 (- (- ?x106109 (* (* (/ 1.0 2.0) l_0_17_91) l_0_17_91)) (* (* (/ 1.0 2.0) l_0_17_92) l_0_17_92))))
 (= (- ?x106115 (* (* (/ 1.0 2.0) l_0_17_93) l_0_17_93)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x103242 (* 2.0 l_0_17_165)))
 (let ((?x103243 (* ?x103242 l_0_17_171)))
 (let ((?x103239 (* 2.0 l_0_17_164)))
 (let ((?x103240 (* ?x103239 l_0_17_170)))
 (let ((?x103236 (* 2.0 l_0_17_163)))
 (let ((?x103237 (* ?x103236 l_0_17_169)))
 (let ((?x103233 (* 2.0 l_0_17_162)))
 (let ((?x103234 (* ?x103233 l_0_17_168)))
 (let ((?x103230 (* 2.0 l_0_17_161)))
 (let ((?x103231 (* ?x103230 l_0_17_167)))
 (let ((?x103227 (* 2.0 l_0_17_160)))
 (let ((?x103228 (* ?x103227 l_0_17_166)))
 (let ((?x83527 (+ (* (* 1.0 l_0_17_124) l_0_17_130) (* (* 1.0 l_0_17_125) l_0_17_131))))
 (let ((?x83539 (+ (+ ?x83527 (* (* 1.0 l_0_17_126) l_0_17_132)) (* (* 1.0 l_0_17_127) l_0_17_133))))
 (let ((?x62675 (+ (+ ?x83539 (* (* 1.0 l_0_17_128) l_0_17_134)) (* (* 1.0 l_0_17_129) l_0_17_135))))
 (let ((?x83557 (- (- (- (- (- (- (- ?x62675 ?x103228) ?x103231) ?x103234) ?x103237) ?x103240) ?x103243) (* (* 1.0 l_0_17_88) l_0_17_94))))
 (let ((?x106125 (- (- ?x83557 (* (* 1.0 l_0_17_89) l_0_17_95)) (* (* 1.0 l_0_17_90) l_0_17_96))))
 (let ((?x106131 (- (- ?x106125 (* (* 1.0 l_0_17_91) l_0_17_97)) (* (* 1.0 l_0_17_92) l_0_17_98))))
 (= (- ?x106131 (* (* 1.0 l_0_17_93) l_0_17_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x103242 (* 2.0 l_0_17_165)))
 (let ((?x103382 (* ?x103242 l_0_17_178)))
 (let ((?x103239 (* 2.0 l_0_17_164)))
 (let ((?x103380 (* ?x103239 l_0_17_177)))
 (let ((?x103236 (* 2.0 l_0_17_163)))
 (let ((?x103378 (* ?x103236 l_0_17_176)))
 (let ((?x103233 (* 2.0 l_0_17_162)))
 (let ((?x103376 (* ?x103233 l_0_17_175)))
 (let ((?x103230 (* 2.0 l_0_17_161)))
 (let ((?x103374 (* ?x103230 l_0_17_174)))
 (let ((?x103227 (* 2.0 l_0_17_160)))
 (let ((?x103372 (* ?x103227 l_0_17_173)))
 (let ((?x106165 (- (* (* (- 1.0) l_0_17_101) l_0_17_88) (* (* 1.0 l_0_17_102) l_0_17_89))))
 (let ((?x106169 (- (- ?x106165 (* (* 1.0 l_0_17_103) l_0_17_90)) (* (* 1.0 l_0_17_104) l_0_17_91))))
 (let ((?x106174 (- (- ?x106169 (* (* 1.0 l_0_17_105) l_0_17_92)) (* (* 1.0 l_0_17_106) l_0_17_93))))
 (let ((?x106178 (+ (+ ?x106174 (* (* 1.0 l_0_17_124) l_0_17_137)) (* (* 1.0 l_0_17_125) l_0_17_138))))
 (let ((?x106182 (+ (+ ?x106178 (* (* 1.0 l_0_17_126) l_0_17_139)) (* (* 1.0 l_0_17_127) l_0_17_140))))
 (let ((?x106186 (+ (+ ?x106182 (* (* 1.0 l_0_17_128) l_0_17_141)) (* (* 1.0 l_0_17_129) l_0_17_142))))
 (= (- (- (- (- (- (- ?x106186 ?x103372) ?x103374) ?x103376) ?x103378) ?x103380) ?x103382) 0.0))))))))))))))))))))
(assert
 (let ((?x103482 (* l_0_17_172 l_0_17_172)))
 (let ((?x103480 (* l_0_17_171 l_0_17_171)))
 (let ((?x103478 (* l_0_17_170 l_0_17_170)))
 (let ((?x103476 (* l_0_17_169 l_0_17_169)))
 (let ((?x103474 (* l_0_17_168 l_0_17_168)))
 (let ((?x103472 (* l_0_17_167 l_0_17_167)))
 (let ((?x103470 (* l_0_17_166 l_0_17_166)))
 (let ((?x38594 (+ (* (* (- (/ 1.0 2.0)) l_0_17_100) l_0_17_100) (* (/ 1.0 2.0) (* l_0_17_130 l_0_17_130)))))
 (let ((?x83654 (+ (+ ?x38594 (* (/ 1.0 2.0) (* l_0_17_131 l_0_17_131))) (* (/ 1.0 2.0) (* l_0_17_132 l_0_17_132)))))
 (let ((?x38664 (+ (+ ?x83654 (* (/ 1.0 2.0) (* l_0_17_133 l_0_17_133))) (* (/ 1.0 2.0) (* l_0_17_134 l_0_17_134)))))
 (let ((?x30941 (+ (+ ?x38664 (* (/ 1.0 2.0) (* l_0_17_135 l_0_17_135))) (* (/ 1.0 2.0) (* l_0_17_136 l_0_17_136)))))
 (let ((?x38718 (- (- (- (- (- (- (- ?x30941 ?x103470) ?x103472) ?x103474) ?x103476) ?x103478) ?x103480) ?x103482)))
 (let ((?x38728 (- (- ?x38718 (* (* (/ 1.0 2.0) l_0_17_94) l_0_17_94)) (* (* (/ 1.0 2.0) l_0_17_95) l_0_17_95))))
 (let ((?x33278 (- (- ?x38728 (* (* (/ 1.0 2.0) l_0_17_96) l_0_17_96)) (* (* (/ 1.0 2.0) l_0_17_97) l_0_17_97))))
 (let ((?x106212 (- (- ?x33278 (* (* (/ 1.0 2.0) l_0_17_98) l_0_17_98)) (* (* (/ 1.0 2.0) l_0_17_99) l_0_17_99))))
 (= ?x106212 0.0)))))))))))))))))
(assert
 (let ((?x103616 (* (* 2.0 l_0_17_172) l_0_17_179)))
 (let ((?x103613 (* (* 2.0 l_0_17_171) l_0_17_178)))
 (let ((?x103610 (* (* 2.0 l_0_17_170) l_0_17_177)))
 (let ((?x103607 (* (* 2.0 l_0_17_169) l_0_17_176)))
 (let ((?x103604 (* (* 2.0 l_0_17_168) l_0_17_175)))
 (let ((?x103601 (* (* 2.0 l_0_17_167) l_0_17_174)))
 (let ((?x103598 (* (* 2.0 l_0_17_166) l_0_17_173)))
 (let ((?x106233 (- (* (* (- 1.0) l_0_17_100) l_0_17_107) (* (* 1.0 l_0_17_101) l_0_17_94))))
 (let ((?x106237 (- (- ?x106233 (* (* 1.0 l_0_17_102) l_0_17_95)) (* (* 1.0 l_0_17_103) l_0_17_96))))
 (let ((?x106241 (- (- ?x106237 (* (* 1.0 l_0_17_104) l_0_17_97)) (* (* 1.0 l_0_17_105) l_0_17_98))))
 (let ((?x106246 (+ (- ?x106241 (* (* 1.0 l_0_17_106) l_0_17_99)) (* (* 1.0 l_0_17_130) l_0_17_137))))
 (let ((?x106252 (+ (+ ?x106246 (* (* 1.0 l_0_17_131) l_0_17_138)) (* (* 1.0 l_0_17_132) l_0_17_139))))
 (let ((?x106258 (+ (+ ?x106252 (* (* 1.0 l_0_17_133) l_0_17_140)) (* (* 1.0 l_0_17_134) l_0_17_141))))
 (let ((?x106264 (+ (+ ?x106258 (* (* 1.0 l_0_17_135) l_0_17_142)) (* (* 1.0 l_0_17_136) l_0_17_143))))
 (let ((?x106271 (- (- (- (- (- (- (- ?x106264 ?x103598) ?x103601) ?x103604) ?x103607) ?x103610) ?x103613) ?x103616)))
 (= ?x106271 0.0)))))))))))))))))
(assert
 (let ((?x103753 (* l_0_17_180 l_0_17_180)))
 (let ((?x103751 (* l_0_17_179 l_0_17_179)))
 (let ((?x103749 (* l_0_17_178 l_0_17_178)))
 (let ((?x103747 (* l_0_17_177 l_0_17_177)))
 (let ((?x103745 (* l_0_17_176 l_0_17_176)))
 (let ((?x103743 (* l_0_17_175 l_0_17_175)))
 (let ((?x103741 (* l_0_17_174 l_0_17_174)))
 (let ((?x103805 (* l_0_17_173 l_0_17_173)))
 (let ((?x106301 (- (* (* (- (/ 1.0 2.0)) l_0_17_101) l_0_17_101) (* (* (/ 1.0 2.0) l_0_17_102) l_0_17_102))))
 (let ((?x106307 (- (- ?x106301 (* (* (/ 1.0 2.0) l_0_17_103) l_0_17_103)) (* (* (/ 1.0 2.0) l_0_17_104) l_0_17_104))))
 (let ((?x106313 (- (- ?x106307 (* (* (/ 1.0 2.0) l_0_17_105) l_0_17_105)) (* (* (/ 1.0 2.0) l_0_17_106) l_0_17_106))))
 (let ((?x106319 (- (- ?x106313 (* (* (/ 1.0 2.0) l_0_17_107) l_0_17_107)) (* (* (/ 1.0 2.0) l_0_17_108) l_0_17_108))))
 (let ((?x106325 (+ (+ ?x106319 (* (/ 1.0 2.0) (* l_0_17_137 l_0_17_137))) (* (/ 1.0 2.0) (* l_0_17_138 l_0_17_138)))))
 (let ((?x106331 (+ (+ ?x106325 (* (/ 1.0 2.0) (* l_0_17_139 l_0_17_139))) (* (/ 1.0 2.0) (* l_0_17_140 l_0_17_140)))))
 (let ((?x106337 (+ (+ ?x106331 (* (/ 1.0 2.0) (* l_0_17_141 l_0_17_141))) (* (/ 1.0 2.0) (* l_0_17_142 l_0_17_142)))))
 (let ((?x106343 (+ (+ ?x106337 (* (/ 1.0 2.0) (* l_0_17_143 l_0_17_143))) (* (/ 1.0 2.0) (* l_0_17_144 l_0_17_144)))))
 (let ((?x106350 (- (- (- (- (- (- (- ?x106343 ?x103805) ?x103741) ?x103743) ?x103745) ?x103747) ?x103749) ?x103751)))
 (= (- ?x106350 ?x103753) 0.0)))))))))))))))))))
(assert
 (let ((?x83037 (* l_0_17_73 l_0_17_73)))
 (let ((?x63171 (+ (+ (* (- l_0_17_109) l_0_17_109) (* l_0_17_289 l_0_17_289)) ?x83037)))
 (= ?x63171 0.0))))
(assert
 (let ((?x106382 (* l_0_17_361 l_0_17_361)))
 (let ((?x106380 (* l_0_17_325 l_0_17_325)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x103875 (* ?x103848 l_0_17_290)))
 (let ((?x106385 (+ (- (- (+ (* (* (- 2.0) l_0_17_109) l_0_17_110) ?x103875) ?x106380) ?x106382) (* (* 2.0 l_0_17_73) l_0_17_74))))
 (= ?x106385 0.0)))))))
(assert
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x103919 (* ?x103848 l_0_17_292)))
 (let ((?x106398 (+ (+ (* (* (- 2.0) l_0_17_109) l_0_17_112) ?x103919) (* (* 2.0 l_0_17_73) l_0_17_76))))
 (= ?x106398 0.0)))))
(assert
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104005 (* ?x103848 l_0_17_299)))
 (let ((?x106405 (* l_0_17_253 l_0_17_253)))
 (let ((?x106409 (+ (+ (+ (* (* (- 2.0) l_0_17_109) l_0_17_119) ?x106405) ?x104005) (* (* 2.0 l_0_17_73) l_0_17_83))))
 (= ?x106409 0.0))))))
(assert
 (let ((?x103851 (* l_0_17_289 l_0_17_289)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104069 (* ?x103848 l_0_17_304)))
 (let ((?x101525 (* l_0_17_181 l_0_17_181)))
 (let ((?x101523 (* l_0_17_145 l_0_17_145)))
 (let ((?x106419 (- (+ (- (+ (* (* (- 2.0) l_0_17_109) l_0_17_124) ?x101523) ?x101525) ?x104069) ?x103851)))
 (= (+ ?x106419 (* (* 2.0 l_0_17_73) l_0_17_88)) 0.0))))))))
(assert
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104118 (* ?x103848 l_0_17_310)))
 (let ((?x106405 (* l_0_17_253 l_0_17_253)))
 (let ((?x106434 (+ (+ (- (* (* (- 2.0) l_0_17_109) l_0_17_130) ?x106405) ?x104118) (* (* 2.0 l_0_17_73) l_0_17_94))))
 (= ?x106434 0.0))))))
(assert
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104207 (* ?x103848 l_0_17_317)))
 (let ((?x106442 (* l_0_17_217 l_0_17_217)))
 (let ((?x106441 (- (* (* 2.0 l_0_17_101) l_0_17_73) (* (* 2.0 l_0_17_109) l_0_17_137))))
 (= (+ (- ?x106441 ?x106442) ?x104207) 0.0))))))
(assert
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104269 (* ?x103880 l_0_17_293)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104267 (* ?x103877 l_0_17_292)))
 (let ((?x106454 (- (* (* (- 2.0) l_0_17_110) l_0_17_112) (* (* 2.0 l_0_17_111) l_0_17_113))))
 (let ((?x106460 (- (- (+ (+ ?x106454 ?x104267) ?x104269) (* (* 2.0 l_0_17_325) l_0_17_328)) (* (* 2.0 l_0_17_361) l_0_17_364))))
 (let ((?x106464 (+ (+ ?x106460 (* (* 2.0 l_0_17_74) l_0_17_76)) (* (* 2.0 l_0_17_75) l_0_17_77))))
 (= ?x106464 0.0)))))))))
(assert
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104351 (* ?x103880 l_0_17_300)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104349 (* ?x103877 l_0_17_299)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x106483 (* ?x104002 l_0_17_254)))
 (let ((?x106482 (- (* (* (- 2.0) l_0_17_110) l_0_17_119) (* (* 2.0 l_0_17_111) l_0_17_120))))
 (let ((?x106488 (- (+ (+ (+ ?x106482 ?x106483) ?x104349) ?x104351) (* (* 2.0 l_0_17_325) l_0_17_335))))
 (let ((?x106492 (+ (- ?x106488 (* (* 2.0 l_0_17_361) l_0_17_371)) (* (* 2.0 l_0_17_74) l_0_17_83))))
 (= (+ ?x106492 (* (* 2.0 l_0_17_75) l_0_17_84)) 0.0)))))))))))
(assert
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x81681 (* ?x103880 l_0_17_305)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x81722 (* ?x103877 l_0_17_304)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x103875 (* ?x103848 l_0_17_290)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101564 (* ?x101563 l_0_17_182)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101561 (* ?x101560 l_0_17_146)))
 (let ((?x106514 (- (* (* (- 2.0) l_0_17_110) l_0_17_124) (* (* 2.0 l_0_17_111) l_0_17_125))))
 (let ((?x106521 (- (+ (+ (- (- (+ ?x106514 ?x101561) ?x101564) ?x103875) ?x81722) ?x81681) (* (* 2.0 l_0_17_325) l_0_17_340))))
 (let ((?x106525 (+ (- ?x106521 (* (* 2.0 l_0_17_361) l_0_17_376)) (* (* 2.0 l_0_17_74) l_0_17_88))))
 (= (+ ?x106525 (* (* 2.0 l_0_17_75) l_0_17_89)) 0.0)))))))))))))))
(assert
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104431 (* ?x103880 l_0_17_311)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104429 (* ?x103877 l_0_17_310)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x106483 (* ?x104002 l_0_17_254)))
 (let ((?x63300 (- (* (* (- 2.0) l_0_17_110) l_0_17_130) (* (* 2.0 l_0_17_111) l_0_17_131))))
 (let ((?x63220 (- (+ (+ (- ?x63300 ?x106483) ?x104429) ?x104431) (* (* 2.0 l_0_17_325) l_0_17_346))))
 (let ((?x83900 (+ (- ?x63220 (* (* 2.0 l_0_17_361) l_0_17_382)) (* (* 2.0 l_0_17_74) l_0_17_94))))
 (= (+ ?x83900 (* (* 2.0 l_0_17_75) l_0_17_95)) 0.0)))))))))))
(assert
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104489 (* ?x103880 l_0_17_318)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104487 (* ?x103877 l_0_17_317)))
 (let ((?x106556 (+ (* (* 2.0 l_0_17_101) l_0_17_74) (* (* 2.0 l_0_17_102) l_0_17_75))))
 (let ((?x106560 (- (- ?x106556 (* (* 2.0 l_0_17_110) l_0_17_137)) (* (* 2.0 l_0_17_111) l_0_17_138))))
 (let ((?x106566 (- (+ (+ (- ?x106560 (* (* 2.0 l_0_17_217) l_0_17_218)) ?x104487) ?x104489) (* (* 2.0 l_0_17_325) l_0_17_353))))
 (= (- ?x106566 (* (* 2.0 l_0_17_361) l_0_17_389)) 0.0)))))))))
(assert
 (let ((?x77363 (* l_0_17_78 l_0_17_78)))
 (let ((?x80671 (* l_0_17_77 l_0_17_77)))
 (let ((?x80608 (* l_0_17_76 l_0_17_76)))
 (let ((?x104541 (* l_0_17_294 l_0_17_294)))
 (let ((?x104539 (* l_0_17_293 l_0_17_293)))
 (let ((?x35592 (* l_0_17_292 l_0_17_292)))
 (let ((?x102347 (* l_0_17_114 l_0_17_114)))
 (let ((?x106589 (- (- (* (- l_0_17_112) l_0_17_112) (* l_0_17_113 l_0_17_113)) ?x102347)))
 (= (+ (+ (+ (+ (+ (+ ?x106589 ?x35592) ?x104539) ?x104541) ?x80608) ?x80671) ?x77363) 0.0))))))))))
(assert
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x82038 (* ?x101575 l_0_17_301)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x35610 (* ?x101572 l_0_17_300)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x61389 (* ?x101569 l_0_17_299)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x106604 (* ?x104002 l_0_17_256)))
 (let ((?x106601 (- (* (* (- 2.0) l_0_17_112) l_0_17_119) (* (* 2.0 l_0_17_113) l_0_17_120))))
 (let ((?x106607 (+ (+ (+ (- ?x106601 (* (* 2.0 l_0_17_114) l_0_17_121)) ?x106604) ?x61389) ?x35610)))
 (let ((?x106612 (+ (+ (+ ?x106607 ?x82038) (* (* 2.0 l_0_17_76) l_0_17_83)) (* (* 2.0 l_0_17_77) l_0_17_84))))
 (= (+ ?x106612 (* (* 2.0 l_0_17_78) l_0_17_85)) 0.0)))))))))))))
(assert
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x104561 (* ?x101575 l_0_17_306)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x104558 (* ?x101572 l_0_17_305)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x104555 (* ?x101569 l_0_17_304)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x103919 (* ?x103848 l_0_17_292)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101604 (* ?x101563 l_0_17_184)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101600 (* ?x101560 l_0_17_148)))
 (let ((?x106628 (- (* (* (- 2.0) l_0_17_112) l_0_17_124) (* (* 2.0 l_0_17_113) l_0_17_125))))
 (let ((?x106633 (- (- (+ (- ?x106628 (* (* 2.0 l_0_17_114) l_0_17_126)) ?x101600) ?x101604) ?x103919)))
 (let ((?x106638 (+ (+ (+ (+ ?x106633 ?x104555) ?x104558) ?x104561) (* (* 2.0 l_0_17_76) l_0_17_88))))
 (let ((?x106642 (+ (+ ?x106638 (* (* 2.0 l_0_17_77) l_0_17_89)) (* (* 2.0 l_0_17_78) l_0_17_90))))
 (= ?x106642 0.0))))))))))))))))))
(assert
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x104590 (* ?x101575 l_0_17_312)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x104588 (* ?x101572 l_0_17_311)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x104586 (* ?x101569 l_0_17_310)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x106604 (* ?x104002 l_0_17_256)))
 (let ((?x106665 (- (* (* (- 2.0) l_0_17_112) l_0_17_130) (* (* 2.0 l_0_17_113) l_0_17_131))))
 (let ((?x106670 (+ (+ (- (- ?x106665 (* (* 2.0 l_0_17_114) l_0_17_132)) ?x106604) ?x104586) ?x104588)))
 (let ((?x106675 (+ (+ (+ ?x106670 ?x104590) (* (* 2.0 l_0_17_76) l_0_17_94)) (* (* 2.0 l_0_17_77) l_0_17_95))))
 (= (+ ?x106675 (* (* 2.0 l_0_17_78) l_0_17_96)) 0.0)))))))))))))
(assert
 (let ((?x83511 (* l_0_17_87 l_0_17_87)))
 (let ((?x83508 (* l_0_17_86 l_0_17_86)))
 (let ((?x83505 (* l_0_17_85 l_0_17_85)))
 (let ((?x83502 (* l_0_17_84 l_0_17_84)))
 (let ((?x83496 (* l_0_17_83 l_0_17_83)))
 (let ((?x104690 (* l_0_17_303 l_0_17_303)))
 (let ((?x104688 (* l_0_17_302 l_0_17_302)))
 (let ((?x104686 (* l_0_17_301 l_0_17_301)))
 (let ((?x104684 (* l_0_17_300 l_0_17_300)))
 (let ((?x104682 (* l_0_17_299 l_0_17_299)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x106697 (* ?x104002 l_0_17_263)))
 (let ((?x105884 (* l_0_17_123 l_0_17_123)))
 (let ((?x105881 (* l_0_17_122 l_0_17_122)))
 (let ((?x105878 (* l_0_17_121 l_0_17_121)))
 (let ((?x63415 (- (- (* (- l_0_17_119) l_0_17_119) (* l_0_17_120 l_0_17_120)) ?x105878)))
 (let ((?x106702 (+ (+ (+ (+ (+ (- (- ?x63415 ?x105881) ?x105884) ?x106697) ?x104682) ?x104684) ?x104686) ?x104688)))
 (= (+ (+ (+ (+ (+ (+ ?x106702 ?x104690) ?x83496) ?x83502) ?x83505) ?x83508) ?x83511) 0.0)))))))))))))))))))
(assert
 (let ((?x104735 (* 2.0 l_0_17_303)))
 (let ((?x104736 (* ?x104735 l_0_17_308)))
 (let ((?x104732 (* 2.0 l_0_17_302)))
 (let ((?x104733 (* ?x104732 l_0_17_307)))
 (let ((?x104729 (* 2.0 l_0_17_301)))
 (let ((?x104730 (* ?x104729 l_0_17_306)))
 (let ((?x104726 (* 2.0 l_0_17_300)))
 (let ((?x104727 (* ?x104726 l_0_17_305)))
 (let ((?x104723 (* 2.0 l_0_17_299)))
 (let ((?x104724 (* ?x104723 l_0_17_304)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104005 (* ?x103848 l_0_17_299)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x106717 (* ?x104002 l_0_17_268)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101652 (* ?x101563 l_0_17_191)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101645 (* ?x101560 l_0_17_155)))
 (let ((?x63411 (- (* (* (- 2.0) l_0_17_119) l_0_17_124) (* (* 2.0 l_0_17_120) l_0_17_125))))
 (let ((?x84049 (- (- ?x63411 (* (* 2.0 l_0_17_121) l_0_17_126)) (* (* 2.0 l_0_17_122) l_0_17_127))))
 (let ((?x106718 (+ (- (+ (- ?x84049 (* (* 2.0 l_0_17_123) l_0_17_128)) ?x101645) ?x101652) ?x106717)))
 (let ((?x106727 (+ (+ (+ (+ (+ (+ (- ?x106718 ?x104005) ?x104724) ?x104727) ?x104730) ?x104733) ?x104736) (* (* 2.0 l_0_17_83) l_0_17_88))))
 (let ((?x106733 (+ (+ ?x106727 (* (* 2.0 l_0_17_84) l_0_17_89)) (* (* 2.0 l_0_17_85) l_0_17_90))))
 (let ((?x106739 (+ (+ ?x106733 (* (* 2.0 l_0_17_86) l_0_17_91)) (* (* 2.0 l_0_17_87) l_0_17_92))))
 (= ?x106739 0.0))))))))))))))))))))))))))
(assert
 (let ((?x104735 (* 2.0 l_0_17_303)))
 (let ((?x104791 (* ?x104735 l_0_17_314)))
 (let ((?x104732 (* 2.0 l_0_17_302)))
 (let ((?x104789 (* ?x104732 l_0_17_313)))
 (let ((?x104729 (* 2.0 l_0_17_301)))
 (let ((?x104787 (* ?x104729 l_0_17_312)))
 (let ((?x104726 (* 2.0 l_0_17_300)))
 (let ((?x104785 (* ?x104726 l_0_17_311)))
 (let ((?x104723 (* 2.0 l_0_17_299)))
 (let ((?x104783 (* ?x104723 l_0_17_310)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x106776 (* ?x104002 l_0_17_274)))
 (let ((?x106697 (* ?x104002 l_0_17_263)))
 (let ((?x106768 (- (* (* (- 2.0) l_0_17_119) l_0_17_130) (* (* 2.0 l_0_17_120) l_0_17_131))))
 (let ((?x106772 (- (- ?x106768 (* (* 2.0 l_0_17_121) l_0_17_132)) (* (* 2.0 l_0_17_122) l_0_17_133))))
 (let ((?x106778 (+ (+ (- (- ?x106772 (* (* 2.0 l_0_17_123) l_0_17_134)) ?x106697) ?x106776) ?x104783)))
 (let ((?x106784 (+ (+ (+ (+ (+ ?x106778 ?x104785) ?x104787) ?x104789) ?x104791) (* (* 2.0 l_0_17_83) l_0_17_94))))
 (let ((?x106788 (+ (+ ?x106784 (* (* 2.0 l_0_17_84) l_0_17_95)) (* (* 2.0 l_0_17_85) l_0_17_96))))
 (let ((?x106792 (+ (+ ?x106788 (* (* 2.0 l_0_17_86) l_0_17_97)) (* (* 2.0 l_0_17_87) l_0_17_98))))
 (= ?x106792 0.0)))))))))))))))))))))
(assert
 (let ((?x104735 (* 2.0 l_0_17_303)))
 (let ((?x104853 (* ?x104735 l_0_17_321)))
 (let ((?x104732 (* 2.0 l_0_17_302)))
 (let ((?x104851 (* ?x104732 l_0_17_320)))
 (let ((?x104729 (* 2.0 l_0_17_301)))
 (let ((?x104849 (* ?x104729 l_0_17_319)))
 (let ((?x104726 (* 2.0 l_0_17_300)))
 (let ((?x104847 (* ?x104726 l_0_17_318)))
 (let ((?x104723 (* 2.0 l_0_17_299)))
 (let ((?x104845 (* ?x104723 l_0_17_317)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x105310 (* ?x104002 l_0_17_281)))
 (let ((?x39273 (+ (* (* 2.0 l_0_17_101) l_0_17_83) (* (* 2.0 l_0_17_102) l_0_17_84))))
 (let ((?x39151 (+ (+ ?x39273 (* (* 2.0 l_0_17_103) l_0_17_85)) (* (* 2.0 l_0_17_104) l_0_17_86))))
 (let ((?x63476 (- (+ ?x39151 (* (* 2.0 l_0_17_105) l_0_17_87)) (* (* 2.0 l_0_17_119) l_0_17_137))))
 (let ((?x84101 (- (- ?x63476 (* (* 2.0 l_0_17_120) l_0_17_138)) (* (* 2.0 l_0_17_121) l_0_17_139))))
 (let ((?x106804 (- (- ?x84101 (* (* 2.0 l_0_17_122) l_0_17_140)) (* (* 2.0 l_0_17_123) l_0_17_141))))
 (let ((?x106809 (+ (+ (+ (- ?x106804 (* (* 2.0 l_0_17_217) l_0_17_227)) ?x105310) ?x104845) ?x104847)))
 (= (+ (+ (+ ?x106809 ?x104849) ?x104851) ?x104853) 0.0))))))))))))))))))))
(assert
 (let ((?x83658 (* l_0_17_93 l_0_17_93)))
 (let ((?x38652 (* l_0_17_92 l_0_17_92)))
 (let ((?x83655 (* l_0_17_91 l_0_17_91)))
 (let ((?x62904 (* l_0_17_90 l_0_17_90)))
 (let ((?x62900 (* l_0_17_89 l_0_17_89)))
 (let ((?x62822 (* l_0_17_88 l_0_17_88)))
 (let ((?x104923 (* l_0_17_309 l_0_17_309)))
 (let ((?x104921 (* l_0_17_308 l_0_17_308)))
 (let ((?x104919 (* l_0_17_307 l_0_17_307)))
 (let ((?x104917 (* l_0_17_306 l_0_17_306)))
 (let ((?x104915 (* l_0_17_305 l_0_17_305)))
 (let ((?x104913 (* l_0_17_304 l_0_17_304)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104069 (* ?x103848 l_0_17_304)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101671 (* ?x101563 l_0_17_196)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101669 (* ?x101560 l_0_17_160)))
 (let ((?x106092 (* l_0_17_129 l_0_17_129)))
 (let ((?x106089 (* l_0_17_128 l_0_17_128)))
 (let ((?x106086 (* l_0_17_127 l_0_17_127)))
 (let ((?x106083 (* l_0_17_126 l_0_17_126)))
 (let ((?x63513 (- (- (* (- l_0_17_124) l_0_17_124) (* l_0_17_125 l_0_17_125)) ?x106083)))
 (let ((?x63520 (+ (- (- (+ (- (- (- ?x63513 ?x106086) ?x106089) ?x106092) ?x101669) ?x101671) ?x104069) ?x104913)))
 (let ((?x106837 (+ (+ (+ (+ (+ (+ (+ ?x63520 ?x104915) ?x104917) ?x104919) ?x104921) ?x104923) ?x62822) ?x62900)))
 (= (+ (+ (+ (+ ?x106837 ?x62904) ?x83655) ?x38652) ?x83658) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x104972 (* 2.0 l_0_17_309)))
 (let ((?x104973 (* ?x104972 l_0_17_315)))
 (let ((?x104969 (* 2.0 l_0_17_308)))
 (let ((?x104970 (* ?x104969 l_0_17_314)))
 (let ((?x104966 (* 2.0 l_0_17_307)))
 (let ((?x104967 (* ?x104966 l_0_17_313)))
 (let ((?x104963 (* 2.0 l_0_17_306)))
 (let ((?x104964 (* ?x104963 l_0_17_312)))
 (let ((?x104960 (* 2.0 l_0_17_305)))
 (let ((?x104961 (* ?x104960 l_0_17_311)))
 (let ((?x104957 (* 2.0 l_0_17_304)))
 (let ((?x104958 (* ?x104957 l_0_17_310)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104118 (* ?x103848 l_0_17_310)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x106717 (* ?x104002 l_0_17_268)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101694 (* ?x101563 l_0_17_202)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101692 (* ?x101560 l_0_17_166)))
 (let ((?x106868 (- (* (* (- 2.0) l_0_17_124) l_0_17_130) (* (* 2.0 l_0_17_125) l_0_17_131))))
 (let ((?x106874 (- (- ?x106868 (* (* 2.0 l_0_17_126) l_0_17_132)) (* (* 2.0 l_0_17_127) l_0_17_133))))
 (let ((?x106880 (- (- ?x106874 (* (* 2.0 l_0_17_128) l_0_17_134)) (* (* 2.0 l_0_17_129) l_0_17_135))))
 (let ((?x106887 (+ (+ (+ (- (- (- (+ ?x106880 ?x101692) ?x101694) ?x106717) ?x104118) ?x104958) ?x104961) ?x104964)))
 (let ((?x106893 (+ (+ (+ (+ ?x106887 ?x104967) ?x104970) ?x104973) (* (* 2.0 l_0_17_88) l_0_17_94))))
 (let ((?x106899 (+ (+ ?x106893 (* (* 2.0 l_0_17_89) l_0_17_95)) (* (* 2.0 l_0_17_90) l_0_17_96))))
 (let ((?x106905 (+ (+ ?x106899 (* (* 2.0 l_0_17_91) l_0_17_97)) (* (* 2.0 l_0_17_92) l_0_17_98))))
 (= (+ ?x106905 (* (* 2.0 l_0_17_93) l_0_17_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x104972 (* 2.0 l_0_17_309)))
 (let ((?x105046 (* ?x104972 l_0_17_322)))
 (let ((?x104969 (* 2.0 l_0_17_308)))
 (let ((?x105044 (* ?x104969 l_0_17_321)))
 (let ((?x104966 (* 2.0 l_0_17_307)))
 (let ((?x105042 (* ?x104966 l_0_17_320)))
 (let ((?x104963 (* 2.0 l_0_17_306)))
 (let ((?x105040 (* ?x104963 l_0_17_319)))
 (let ((?x104960 (* 2.0 l_0_17_305)))
 (let ((?x105038 (* ?x104960 l_0_17_318)))
 (let ((?x104957 (* 2.0 l_0_17_304)))
 (let ((?x105036 (* ?x104957 l_0_17_317)))
 (let ((?x103848 (* 2.0 l_0_17_289)))
 (let ((?x104207 (* ?x103848 l_0_17_317)))
 (let ((?x101563 (* 2.0 l_0_17_181)))
 (let ((?x101721 (* ?x101563 l_0_17_209)))
 (let ((?x101560 (* 2.0 l_0_17_145)))
 (let ((?x101719 (* ?x101560 l_0_17_173)))
 (let ((?x39353 (+ (* (* 2.0 l_0_17_101) l_0_17_88) (* (* 2.0 l_0_17_102) l_0_17_89))))
 (let ((?x84327 (+ (+ ?x39353 (* (* 2.0 l_0_17_103) l_0_17_90)) (* (* 2.0 l_0_17_104) l_0_17_91))))
 (let ((?x39433 (+ (+ ?x84327 (* (* 2.0 l_0_17_105) l_0_17_92)) (* (* 2.0 l_0_17_106) l_0_17_93))))
 (let ((?x106935 (- (- ?x39433 (* (* 2.0 l_0_17_124) l_0_17_137)) (* (* 2.0 l_0_17_125) l_0_17_138))))
 (let ((?x106939 (- (- ?x106935 (* (* 2.0 l_0_17_126) l_0_17_139)) (* (* 2.0 l_0_17_127) l_0_17_140))))
 (let ((?x106943 (- (- ?x106939 (* (* 2.0 l_0_17_128) l_0_17_141)) (* (* 2.0 l_0_17_129) l_0_17_142))))
 (let ((?x106948 (- (- (- (+ ?x106943 ?x101719) ?x101721) (* (* 2.0 l_0_17_217) l_0_17_232)) ?x104207)))
 (= (+ (+ (+ (+ (+ (+ ?x106948 ?x105036) ?x105038) ?x105040) ?x105042) ?x105044) ?x105046) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x38793 (* l_0_17_99 l_0_17_99)))
 (let ((?x83735 (* l_0_17_98 l_0_17_98)))
 (let ((?x38830 (* l_0_17_97 l_0_17_97)))
 (let ((?x34121 (* l_0_17_96 l_0_17_96)))
 (let ((?x63043 (* l_0_17_95 l_0_17_95)))
 (let ((?x63048 (* l_0_17_94 l_0_17_94)))
 (let ((?x105102 (* l_0_17_316 l_0_17_316)))
 (let ((?x105100 (* l_0_17_315 l_0_17_315)))
 (let ((?x105098 (* l_0_17_314 l_0_17_314)))
 (let ((?x105096 (* l_0_17_313 l_0_17_313)))
 (let ((?x105094 (* l_0_17_312 l_0_17_312)))
 (let ((?x105092 (* l_0_17_311 l_0_17_311)))
 (let ((?x105090 (* l_0_17_310 l_0_17_310)))
 (let ((?x104002 (* 2.0 l_0_17_253)))
 (let ((?x106776 (* ?x104002 l_0_17_274)))
 (let ((?x83667 (* l_0_17_136 l_0_17_136)))
 (let ((?x83662 (* l_0_17_135 l_0_17_135)))
 (let ((?x83657 (* l_0_17_134 l_0_17_134)))
 (let ((?x38651 (* l_0_17_133 l_0_17_133)))
 (let ((?x62903 (* l_0_17_132 l_0_17_132)))
 (let ((?x62896 (* l_0_17_131 l_0_17_131)))
 (let ((?x84497 (- (- (* l_0_17_100 l_0_17_100) (* l_0_17_130 l_0_17_130)) ?x62896)))
 (let ((?x63650 (+ (- (- (- (- (- (- ?x84497 ?x62903) ?x38651) ?x83657) ?x83662) ?x83667) ?x106776) ?x105090)))
 (let ((?x84406 (+ (+ (+ (+ (+ (+ (+ ?x63650 ?x105092) ?x105094) ?x105096) ?x105098) ?x105100) ?x105102) ?x63048)))
 (= (+ (+ (+ (+ (+ ?x84406 ?x63043) ?x34121) ?x38830) ?x83735) ?x38793) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x105247 (* l_0_17_324 l_0_17_324)))
 (let ((?x105245 (* l_0_17_323 l_0_17_323)))
 (let ((?x105243 (* l_0_17_322 l_0_17_322)))
 (let ((?x105241 (* l_0_17_321 l_0_17_321)))
 (let ((?x105239 (* l_0_17_320 l_0_17_320)))
 (let ((?x105236 (* l_0_17_319 l_0_17_319)))
 (let ((?x105234 (* l_0_17_318 l_0_17_318)))
 (let ((?x105232 (* l_0_17_317 l_0_17_317)))
 (let ((?x106341 (* l_0_17_144 l_0_17_144)))
 (let ((?x106338 (* l_0_17_143 l_0_17_143)))
 (let ((?x106335 (* l_0_17_142 l_0_17_142)))
 (let ((?x106332 (* l_0_17_141 l_0_17_141)))
 (let ((?x106329 (* l_0_17_140 l_0_17_140)))
 (let ((?x106326 (* l_0_17_139 l_0_17_139)))
 (let ((?x106323 (* l_0_17_138 l_0_17_138)))
 (let ((?x106320 (* l_0_17_137 l_0_17_137)))
 (let ((?x38896 (* l_0_17_108 l_0_17_108)))
 (let ((?x38893 (* l_0_17_107 l_0_17_107)))
 (let ((?x63168 (* l_0_17_106 l_0_17_106)))
 (let ((?x31362 (* l_0_17_105 l_0_17_105)))
 (let ((?x38860 (* l_0_17_104 l_0_17_104)))
 (let ((?x38858 (* l_0_17_103 l_0_17_103)))
 (let ((?x84720 (+ (+ (* l_0_17_101 l_0_17_101) (* l_0_17_102 l_0_17_102)) ?x38858)))
 (let ((?x39662 (- (- (+ (+ (+ (+ (+ ?x84720 ?x38860) ?x31362) ?x63168) ?x38893) ?x38896) ?x106320) ?x106323)))
 (let ((?x106980 (- (- (- (- (- (- (- ?x39662 ?x106326) ?x106329) ?x106332) ?x106335) ?x106338) ?x106341) (* (* 2.0 l_0_17_217) l_0_17_245))))
 (let ((?x106987 (+ (+ (+ (+ (+ (+ (+ ?x106980 ?x105232) ?x105234) ?x105236) ?x105239) ?x105241) ?x105243) ?x105245)))
 (= (+ ?x106987 ?x105247) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x101259 (* l_0_17_291 l_0_17_291)))
 (let ((?x101257 (* l_0_17_290 l_0_17_290)))
 (let ((?x101476 (* l_0_17_183 l_0_17_183)))
 (let ((?x101474 (* l_0_17_182 l_0_17_182)))
 (let ((?x39754 (- (+ (* l_0_17_146 l_0_17_146) (* l_0_17_147 l_0_17_147)) ?x101474)))
 (let ((?x107012 (- (- (- (- ?x39754 ?x101476) ?x101257) ?x101259) (* (* 2.0 l_0_17_326) l_0_17_340))))
 (let ((?x107016 (- (- ?x107012 (* (* 2.0 l_0_17_327) l_0_17_341)) (* (* 2.0 l_0_17_362) l_0_17_376))))
 (= (- ?x107016 (* (* 2.0 l_0_17_363) l_0_17_377)) 0.0)))))))))
(assert
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104269 (* ?x103880 l_0_17_293)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104267 (* ?x103877 l_0_17_292)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x101745 (* ?x101744 l_0_17_185)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x101742 (* ?x101741 l_0_17_184)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101739 (* ?x101738 l_0_17_149)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x102026 (* ?x101874 l_0_17_148)))
 (let ((?x107043 (- (- (- (- (- (+ ?x102026 ?x101739) ?x101742) ?x101745) ?x104267) ?x104269) (* (* 2.0 l_0_17_328) l_0_17_340))))
 (let ((?x107047 (- (- ?x107043 (* (* 2.0 l_0_17_329) l_0_17_341)) (* (* 2.0 l_0_17_330) l_0_17_342))))
 (let ((?x107051 (- (- ?x107047 (* (* 2.0 l_0_17_364) l_0_17_376)) (* (* 2.0 l_0_17_365) l_0_17_377))))
 (= (- ?x107051 (* (* 2.0 l_0_17_366) l_0_17_378)) 0.0)))))))))))))))))
(assert
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104351 (* ?x103880 l_0_17_300)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104349 (* ?x103877 l_0_17_299)))
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x107091 (* ?x101366 l_0_17_269)))
 (let ((?x101363 (* 2.0 l_0_17_254)))
 (let ((?x107089 (* ?x101363 l_0_17_268)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x101881 (* ?x101744 l_0_17_192)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x101879 (* ?x101741 l_0_17_191)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101877 (* ?x101738 l_0_17_156)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x101875 (* ?x101874 l_0_17_155)))
 (let ((?x107094 (- (- (+ (+ (- (- (+ ?x101875 ?x101877) ?x101879) ?x101881) ?x107089) ?x107091) ?x104349) ?x104351)))
 (let ((?x107100 (- (- ?x107094 (* (* 2.0 l_0_17_335) l_0_17_340)) (* (* 2.0 l_0_17_336) l_0_17_341))))
 (let ((?x107106 (- (- ?x107100 (* (* 2.0 l_0_17_337) l_0_17_342)) (* (* 2.0 l_0_17_338) l_0_17_343))))
 (let ((?x107112 (- (- ?x107106 (* (* 2.0 l_0_17_339) l_0_17_344)) (* (* 2.0 l_0_17_371) l_0_17_376))))
 (let ((?x107118 (- (- ?x107112 (* (* 2.0 l_0_17_372) l_0_17_377)) (* (* 2.0 l_0_17_373) l_0_17_378))))
 (let ((?x107124 (- (- ?x107118 (* (* 2.0 l_0_17_374) l_0_17_379)) (* (* 2.0 l_0_17_375) l_0_17_380))))
 (= ?x107124 0.0))))))))))))))))))))))))
(assert
 (let ((?x107165 (* l_0_17_381 l_0_17_381)))
 (let ((?x107163 (* l_0_17_380 l_0_17_380)))
 (let ((?x107161 (* l_0_17_379 l_0_17_379)))
 (let ((?x107159 (* l_0_17_378 l_0_17_378)))
 (let ((?x107157 (* l_0_17_377 l_0_17_377)))
 (let ((?x107155 (* l_0_17_376 l_0_17_376)))
 (let ((?x107153 (* l_0_17_345 l_0_17_345)))
 (let ((?x107151 (* l_0_17_344 l_0_17_344)))
 (let ((?x107149 (* l_0_17_343 l_0_17_343)))
 (let ((?x107147 (* l_0_17_342 l_0_17_342)))
 (let ((?x107145 (* l_0_17_341 l_0_17_341)))
 (let ((?x107143 (* l_0_17_340 l_0_17_340)))
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x81681 (* ?x103880 l_0_17_305)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x81722 (* ?x103877 l_0_17_304)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x101946 (* ?x101744 l_0_17_197)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x101944 (* ?x101741 l_0_17_196)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x101914 (* ?x101738 l_0_17_161)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x105568 (* ?x101874 l_0_17_160)))
 (let ((?x107146 (- (- (- (- (- (- (+ ?x105568 ?x101914) ?x101944) ?x101946) ?x81722) ?x81681) ?x107143) ?x107145)))
 (let ((?x107160 (- (- (- (- (- (- (- ?x107146 ?x107147) ?x107149) ?x107151) ?x107153) ?x107155) ?x107157) ?x107159)))
 (= (- (- (- ?x107160 ?x107161) ?x107163) ?x107165) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104431 (* ?x103880 l_0_17_311)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104429 (* ?x103877 l_0_17_310)))
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x107091 (* ?x101366 l_0_17_269)))
 (let ((?x101363 (* 2.0 l_0_17_254)))
 (let ((?x107089 (* ?x101363 l_0_17_268)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x102035 (* ?x101744 l_0_17_203)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x102033 (* ?x101741 l_0_17_202)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x102031 (* ?x101738 l_0_17_167)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x102028 (* ?x101874 l_0_17_166)))
 (let ((?x107181 (- (- (- (- (- (- (+ ?x102028 ?x102031) ?x102033) ?x102035) ?x107089) ?x107091) ?x104429) ?x104431)))
 (let ((?x107187 (- (- ?x107181 (* (* 2.0 l_0_17_340) l_0_17_346)) (* (* 2.0 l_0_17_341) l_0_17_347))))
 (let ((?x107193 (- (- ?x107187 (* (* 2.0 l_0_17_342) l_0_17_348)) (* (* 2.0 l_0_17_343) l_0_17_349))))
 (let ((?x107199 (- (- ?x107193 (* (* 2.0 l_0_17_344) l_0_17_350)) (* (* 2.0 l_0_17_345) l_0_17_351))))
 (let ((?x107205 (- (- ?x107199 (* (* 2.0 l_0_17_376) l_0_17_382)) (* (* 2.0 l_0_17_377) l_0_17_383))))
 (let ((?x107211 (- (- ?x107205 (* (* 2.0 l_0_17_378) l_0_17_384)) (* (* 2.0 l_0_17_379) l_0_17_385))))
 (let ((?x107217 (- (- ?x107211 (* (* 2.0 l_0_17_380) l_0_17_386)) (* (* 2.0 l_0_17_381) l_0_17_387))))
 (= ?x107217 0.0)))))))))))))))))))))))))
(assert
 (let ((?x103880 (* 2.0 l_0_17_291)))
 (let ((?x104489 (* ?x103880 l_0_17_318)))
 (let ((?x103877 (* 2.0 l_0_17_290)))
 (let ((?x104487 (* ?x103877 l_0_17_317)))
 (let ((?x101744 (* 2.0 l_0_17_183)))
 (let ((?x102095 (* ?x101744 l_0_17_210)))
 (let ((?x101741 (* 2.0 l_0_17_182)))
 (let ((?x102093 (* ?x101741 l_0_17_209)))
 (let ((?x101738 (* 2.0 l_0_17_147)))
 (let ((?x102091 (* ?x101738 l_0_17_174)))
 (let ((?x101874 (* 2.0 l_0_17_146)))
 (let ((?x83267 (* ?x101874 l_0_17_173)))
 (let ((?x107258 (- (- (- (+ ?x83267 ?x102091) ?x102093) ?x102095) (* (* 2.0 l_0_17_218) l_0_17_232))))
 (let ((?x107264 (- (- (- (- ?x107258 (* (* 2.0 l_0_17_219) l_0_17_233)) ?x104487) ?x104489) (* (* 2.0 l_0_17_340) l_0_17_353))))
 (let ((?x107268 (- (- ?x107264 (* (* 2.0 l_0_17_341) l_0_17_354)) (* (* 2.0 l_0_17_342) l_0_17_355))))
 (let ((?x107272 (- (- ?x107268 (* (* 2.0 l_0_17_343) l_0_17_356)) (* (* 2.0 l_0_17_344) l_0_17_357))))
 (let ((?x107276 (- (- ?x107272 (* (* 2.0 l_0_17_345) l_0_17_358)) (* (* 2.0 l_0_17_376) l_0_17_389))))
 (let ((?x107280 (- (- ?x107276 (* (* 2.0 l_0_17_377) l_0_17_390)) (* (* 2.0 l_0_17_378) l_0_17_391))))
 (let ((?x107284 (- (- ?x107280 (* (* 2.0 l_0_17_379) l_0_17_392)) (* (* 2.0 l_0_17_380) l_0_17_393))))
 (= (- ?x107284 (* (* 2.0 l_0_17_381) l_0_17_394)) 0.0)))))))))))))))))))))
(assert
 (let ((?x104541 (* l_0_17_294 l_0_17_294)))
 (let ((?x104539 (* l_0_17_293 l_0_17_293)))
 (let ((?x35592 (* l_0_17_292 l_0_17_292)))
 (let ((?x102151 (* l_0_17_186 l_0_17_186)))
 (let ((?x102149 (* l_0_17_185 l_0_17_185)))
 (let ((?x102147 (* l_0_17_184 l_0_17_184)))
 (let ((?x102145 (* l_0_17_150 l_0_17_150)))
 (let ((?x85386 (+ (+ (* l_0_17_148 l_0_17_148) (* l_0_17_149 l_0_17_149)) ?x102145)))
 (= (- (- (- (- (- (- ?x85386 ?x102147) ?x102149) ?x102151) ?x35592) ?x104539) ?x104541) 0.0))))))))))
(assert
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x82038 (* ?x101575 l_0_17_301)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x35610 (* ?x101572 l_0_17_300)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x61389 (* ?x101569 l_0_17_299)))
 (let ((?x101895 (* 2.0 l_0_17_258)))
 (let ((?x107325 (* ?x101895 l_0_17_270)))
 (let ((?x101892 (* 2.0 l_0_17_257)))
 (let ((?x107323 (* ?x101892 l_0_17_269)))
 (let ((?x101889 (* 2.0 l_0_17_256)))
 (let ((?x107321 (* ?x101889 l_0_17_268)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x102257 (* ?x101954 l_0_17_193)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x102255 (* ?x101951 l_0_17_192)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x102253 (* ?x101948 l_0_17_191)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102251 (* ?x101935 l_0_17_157)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102249 (* ?x101932 l_0_17_156)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x102247 (* ?x101918 l_0_17_155)))
 (let ((?x107324 (+ (+ (- (- (- (+ (+ ?x102247 ?x102249) ?x102251) ?x102253) ?x102255) ?x102257) ?x107321) ?x107323)))
 (= (- (- (- (+ ?x107324 ?x107325) ?x61389) ?x35610) ?x82038) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x104561 (* ?x101575 l_0_17_306)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x104558 (* ?x101572 l_0_17_305)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x104555 (* ?x101569 l_0_17_304)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x102306 (* ?x101954 l_0_17_198)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x102304 (* ?x101951 l_0_17_197)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x102302 (* ?x101948 l_0_17_196)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102282 (* ?x101935 l_0_17_162)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102278 (* ?x101932 l_0_17_161)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x103221 (* ?x101918 l_0_17_160)))
 (let ((?x107351 (- (- (- (- (- (+ (+ ?x103221 ?x102278) ?x102282) ?x102302) ?x102304) ?x102306) ?x104555) ?x104558)))
 (= (- ?x107351 ?x104561) 0.0)))))))))))))))))))))
(assert
 (let ((?x101575 (* 2.0 l_0_17_294)))
 (let ((?x104590 (* ?x101575 l_0_17_312)))
 (let ((?x101572 (* 2.0 l_0_17_293)))
 (let ((?x104588 (* ?x101572 l_0_17_311)))
 (let ((?x101569 (* 2.0 l_0_17_292)))
 (let ((?x104586 (* ?x101569 l_0_17_310)))
 (let ((?x101895 (* 2.0 l_0_17_258)))
 (let ((?x107325 (* ?x101895 l_0_17_270)))
 (let ((?x101892 (* 2.0 l_0_17_257)))
 (let ((?x107323 (* ?x101892 l_0_17_269)))
 (let ((?x101889 (* 2.0 l_0_17_256)))
 (let ((?x107321 (* ?x101889 l_0_17_268)))
 (let ((?x101954 (* 2.0 l_0_17_186)))
 (let ((?x102372 (* ?x101954 l_0_17_204)))
 (let ((?x101951 (* 2.0 l_0_17_185)))
 (let ((?x102370 (* ?x101951 l_0_17_203)))
 (let ((?x101948 (* 2.0 l_0_17_184)))
 (let ((?x102368 (* ?x101948 l_0_17_202)))
 (let ((?x101935 (* 2.0 l_0_17_150)))
 (let ((?x102365 (* ?x101935 l_0_17_168)))
 (let ((?x101932 (* 2.0 l_0_17_149)))
 (let ((?x102362 (* ?x101932 l_0_17_167)))
 (let ((?x101918 (* 2.0 l_0_17_148)))
 (let ((?x102359 (* ?x101918 l_0_17_166)))
 (let ((?x107369 (- (- (- (- (- (+ (+ ?x102359 ?x102362) ?x102365) ?x102368) ?x102370) ?x102372) ?x107321) ?x107323)))
 (= (- (- (- (- ?x107369 ?x107325) ?x104586) ?x104588) ?x104590) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x104690 (* l_0_17_303 l_0_17_303)))
 (let ((?x104688 (* l_0_17_302 l_0_17_302)))
 (let ((?x104686 (* l_0_17_301 l_0_17_301)))
 (let ((?x104684 (* l_0_17_300 l_0_17_300)))
 (let ((?x104682 (* l_0_17_299 l_0_17_299)))
 (let ((?x105468 (* 2.0 l_0_17_267)))
 (let ((?x107387 (* ?x105468 l_0_17_272)))
 (let ((?x105465 (* 2.0 l_0_17_266)))
 (let ((?x107385 (* ?x105465 l_0_17_271)))
 (let ((?x105462 (* 2.0 l_0_17_265)))
 (let ((?x107383 (* ?x105462 l_0_17_270)))
 (let ((?x105459 (* 2.0 l_0_17_264)))
 (let ((?x107381 (* ?x105459 l_0_17_269)))
 (let ((?x105456 (* 2.0 l_0_17_263)))
 (let ((?x41134 (* ?x105456 l_0_17_268)))
 (let ((?x102808 (* l_0_17_195 l_0_17_195)))
 (let ((?x102806 (* l_0_17_194 l_0_17_194)))
 (let ((?x102804 (* l_0_17_193 l_0_17_193)))
 (let ((?x102802 (* l_0_17_192 l_0_17_192)))
 (let ((?x102800 (* l_0_17_191 l_0_17_191)))
 (let ((?x102798 (* l_0_17_159 l_0_17_159)))
 (let ((?x102796 (* l_0_17_158 l_0_17_158)))
 (let ((?x102794 (* l_0_17_157 l_0_17_157)))
 (let ((?x85539 (+ (+ (* l_0_17_155 l_0_17_155) (* l_0_17_156 l_0_17_156)) ?x102794)))
 (let ((?x41126 (- (- (- (- (- (+ (+ ?x85539 ?x102796) ?x102798) ?x102800) ?x102802) ?x102804) ?x102806) ?x102808)))
 (let ((?x107390 (- (- (+ (+ (+ (+ (+ ?x41126 ?x41134) ?x107381) ?x107383) ?x107385) ?x107387) ?x104682) ?x104684)))
 (= (- (- (- ?x107390 ?x104686) ?x104688) ?x104690) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x104735 (* 2.0 l_0_17_303)))
 (let ((?x104736 (* ?x104735 l_0_17_308)))
 (let ((?x104732 (* 2.0 l_0_17_302)))
 (let ((?x104733 (* ?x104732 l_0_17_307)))
 (let ((?x104729 (* 2.0 l_0_17_301)))
 (let ((?x104730 (* ?x104729 l_0_17_306)))
 (let ((?x104726 (* 2.0 l_0_17_300)))
 (let ((?x104727 (* ?x104726 l_0_17_305)))
 (let ((?x104723 (* 2.0 l_0_17_299)))
 (let ((?x104724 (* ?x104723 l_0_17_304)))
 (let ((?x107435 (* l_0_17_273 l_0_17_273)))
 (let ((?x107433 (* l_0_17_272 l_0_17_272)))
 (let ((?x107431 (* l_0_17_271 l_0_17_271)))
 (let ((?x107429 (* l_0_17_270 l_0_17_270)))
 (let ((?x107427 (* l_0_17_269 l_0_17_269)))
 (let ((?x107425 (* l_0_17_268 l_0_17_268)))
 (let ((?x102873 (* 2.0 l_0_17_195)))
 (let ((?x102874 (* ?x102873 l_0_17_200)))
 (let ((?x102870 (* 2.0 l_0_17_194)))
 (let ((?x102871 (* ?x102870 l_0_17_199)))
 (let ((?x102867 (* 2.0 l_0_17_193)))
 (let ((?x102868 (* ?x102867 l_0_17_198)))
 (let ((?x102864 (* 2.0 l_0_17_192)))
 (let ((?x102865 (* ?x102864 l_0_17_197)))
 (let ((?x102861 (* 2.0 l_0_17_191)))
 (let ((?x102862 (* ?x102861 l_0_17_196)))
 (let ((?x102858 (* 2.0 l_0_17_159)))
 (let ((?x102859 (* ?x102858 l_0_17_164)))
 (let ((?x102855 (* 2.0 l_0_17_158)))
 (let ((?x102856 (* ?x102855 l_0_17_163)))
 (let ((?x102852 (* 2.0 l_0_17_157)))
 (let ((?x102853 (* ?x102852 l_0_17_162)))
 (let ((?x102849 (* 2.0 l_0_17_156)))
 (let ((?x102850 (* ?x102849 l_0_17_161)))
 (let ((?x102846 (* 2.0 l_0_17_155)))
 (let ((?x102847 (* ?x102846 l_0_17_160)))
 (let ((?x107422 (- (- (- (+ (+ (+ (+ ?x102847 ?x102850) ?x102853) ?x102856) ?x102859) ?x102862) ?x102865) ?x102868)))
 (let ((?x107434 (+ (+ (+ (+ (+ (- (- ?x107422 ?x102871) ?x102874) ?x107425) ?x107427) ?x107429) ?x107431) ?x107433)))
 (= (- (- (- (- (- (+ ?x107434 ?x107435) ?x104724) ?x104727) ?x104730) ?x104733) ?x104736) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x104735 (* 2.0 l_0_17_303)))
 (let ((?x104791 (* ?x104735 l_0_17_314)))
 (let ((?x104732 (* 2.0 l_0_17_302)))
 (let ((?x104789 (* ?x104732 l_0_17_313)))
 (let ((?x104729 (* 2.0 l_0_17_301)))
 (let ((?x104787 (* ?x104729 l_0_17_312)))
 (let ((?x104726 (* 2.0 l_0_17_300)))
 (let ((?x104785 (* ?x104726 l_0_17_311)))
 (let ((?x104723 (* 2.0 l_0_17_299)))
 (let ((?x104783 (* ?x104723 l_0_17_310)))
 (let ((?x105618 (* 2.0 l_0_17_273)))
 (let ((?x107489 (* ?x105618 l_0_17_279)))
 (let ((?x105615 (* 2.0 l_0_17_272)))
 (let ((?x107487 (* ?x105615 l_0_17_278)))
 (let ((?x105612 (* 2.0 l_0_17_271)))
 (let ((?x107485 (* ?x105612 l_0_17_277)))
 (let ((?x105609 (* 2.0 l_0_17_270)))
 (let ((?x107483 (* ?x105609 l_0_17_276)))
 (let ((?x105606 (* 2.0 l_0_17_269)))
 (let ((?x107481 (* ?x105606 l_0_17_275)))
 (let ((?x105603 (* 2.0 l_0_17_268)))
 (let ((?x107479 (* ?x105603 l_0_17_274)))
 (let ((?x105468 (* 2.0 l_0_17_267)))
 (let ((?x107387 (* ?x105468 l_0_17_272)))
 (let ((?x105465 (* 2.0 l_0_17_266)))
 (let ((?x107385 (* ?x105465 l_0_17_271)))
 (let ((?x105462 (* 2.0 l_0_17_265)))
 (let ((?x107383 (* ?x105462 l_0_17_270)))
 (let ((?x105459 (* 2.0 l_0_17_264)))
 (let ((?x107381 (* ?x105459 l_0_17_269)))
 (let ((?x105456 (* 2.0 l_0_17_263)))
 (let ((?x41134 (* ?x105456 l_0_17_268)))
 (let ((?x102873 (* 2.0 l_0_17_195)))
 (let ((?x102974 (* ?x102873 l_0_17_206)))
 (let ((?x102870 (* 2.0 l_0_17_194)))
 (let ((?x102972 (* ?x102870 l_0_17_205)))
 (let ((?x102867 (* 2.0 l_0_17_193)))
 (let ((?x102970 (* ?x102867 l_0_17_204)))
 (let ((?x102864 (* 2.0 l_0_17_192)))
 (let ((?x102968 (* ?x102864 l_0_17_203)))
 (let ((?x102861 (* 2.0 l_0_17_191)))
 (let ((?x102966 (* ?x102861 l_0_17_202)))
 (let ((?x102858 (* 2.0 l_0_17_159)))
 (let ((?x102964 (* ?x102858 l_0_17_170)))
 (let ((?x102855 (* 2.0 l_0_17_158)))
 (let ((?x102962 (* ?x102855 l_0_17_169)))
 (let ((?x102852 (* 2.0 l_0_17_157)))
 (let ((?x102960 (* ?x102852 l_0_17_168)))
 (let ((?x102849 (* 2.0 l_0_17_156)))
 (let ((?x102958 (* ?x102849 l_0_17_167)))
 (let ((?x102846 (* 2.0 l_0_17_155)))
 (let ((?x102956 (* ?x102846 l_0_17_166)))
 (let ((?x107471 (- (- (- (+ (+ (+ (+ ?x102956 ?x102958) ?x102960) ?x102962) ?x102964) ?x102966) ?x102968) ?x102970)))
 (let ((?x107478 (- (- (- (- (- (- (- ?x107471 ?x102972) ?x102974) ?x41134) ?x107381) ?x107383) ?x107385) ?x107387)))
 (let ((?x107491 (- (+ (+ (+ (+ (+ (+ ?x107478 ?x107479) ?x107481) ?x107483) ?x107485) ?x107487) ?x107489) ?x104783)))
 (= (- (- (- (- ?x107491 ?x104785) ?x104787) ?x104789) ?x104791) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x104735 (* 2.0 l_0_17_303)))
 (let ((?x104853 (* ?x104735 l_0_17_321)))
 (let ((?x104732 (* 2.0 l_0_17_302)))
 (let ((?x104851 (* ?x104732 l_0_17_320)))
 (let ((?x104729 (* 2.0 l_0_17_301)))
 (let ((?x104849 (* ?x104729 l_0_17_319)))
 (let ((?x104726 (* 2.0 l_0_17_300)))
 (let ((?x104847 (* ?x104726 l_0_17_318)))
 (let ((?x104723 (* 2.0 l_0_17_299)))
 (let ((?x104845 (* ?x104723 l_0_17_317)))
 (let ((?x105618 (* 2.0 l_0_17_273)))
 (let ((?x105619 (* ?x105618 l_0_17_286)))
 (let ((?x105615 (* 2.0 l_0_17_272)))
 (let ((?x105616 (* ?x105615 l_0_17_285)))
 (let ((?x105612 (* 2.0 l_0_17_271)))
 (let ((?x105613 (* ?x105612 l_0_17_284)))
 (let ((?x105609 (* 2.0 l_0_17_270)))
 (let ((?x105610 (* ?x105609 l_0_17_283)))
 (let ((?x105606 (* 2.0 l_0_17_269)))
 (let ((?x105607 (* ?x105606 l_0_17_282)))
 (let ((?x105603 (* 2.0 l_0_17_268)))
 (let ((?x105604 (* ?x105603 l_0_17_281)))
 (let ((?x102873 (* 2.0 l_0_17_195)))
 (let ((?x103069 (* ?x102873 l_0_17_213)))
 (let ((?x102870 (* 2.0 l_0_17_194)))
 (let ((?x103067 (* ?x102870 l_0_17_212)))
 (let ((?x102867 (* 2.0 l_0_17_193)))
 (let ((?x103065 (* ?x102867 l_0_17_211)))
 (let ((?x102864 (* 2.0 l_0_17_192)))
 (let ((?x103063 (* ?x102864 l_0_17_210)))
 (let ((?x102861 (* 2.0 l_0_17_191)))
 (let ((?x103061 (* ?x102861 l_0_17_209)))
 (let ((?x102858 (* 2.0 l_0_17_159)))
 (let ((?x103059 (* ?x102858 l_0_17_177)))
 (let ((?x102855 (* 2.0 l_0_17_158)))
 (let ((?x103057 (* ?x102855 l_0_17_176)))
 (let ((?x102852 (* 2.0 l_0_17_157)))
 (let ((?x103055 (* ?x102852 l_0_17_175)))
 (let ((?x102849 (* 2.0 l_0_17_156)))
 (let ((?x103053 (* ?x102849 l_0_17_174)))
 (let ((?x102846 (* 2.0 l_0_17_155)))
 (let ((?x103051 (* ?x102846 l_0_17_173)))
 (let ((?x107524 (- (- (- (+ (+ (+ (+ ?x103051 ?x103053) ?x103055) ?x103057) ?x103059) ?x103061) ?x103063) ?x103065)))
 (let ((?x107530 (- (- (- (- ?x107524 ?x103067) ?x103069) (* (* 2.0 l_0_17_227) l_0_17_232)) (* (* 2.0 l_0_17_228) l_0_17_233))))
 (let ((?x107534 (- (- ?x107530 (* (* 2.0 l_0_17_229) l_0_17_234)) (* (* 2.0 l_0_17_230) l_0_17_235))))
 (let ((?x107539 (+ (+ (+ (- ?x107534 (* (* 2.0 l_0_17_231) l_0_17_236)) ?x105604) ?x105607) ?x105610)))
 (let ((?x107546 (- (- (- (- (+ (+ (+ ?x107539 ?x105613) ?x105616) ?x105619) ?x104845) ?x104847) ?x104849) ?x104851)))
 (= (- ?x107546 ?x104853) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x104923 (* l_0_17_309 l_0_17_309)))
 (let ((?x104921 (* l_0_17_308 l_0_17_308)))
 (let ((?x104919 (* l_0_17_307 l_0_17_307)))
 (let ((?x104917 (* l_0_17_306 l_0_17_306)))
 (let ((?x104915 (* l_0_17_305 l_0_17_305)))
 (let ((?x104913 (* l_0_17_304 l_0_17_304)))
 (let ((?x103157 (* l_0_17_201 l_0_17_201)))
 (let ((?x103155 (* l_0_17_200 l_0_17_200)))
 (let ((?x103151 (* l_0_17_199 l_0_17_199)))
 (let ((?x103149 (* l_0_17_198 l_0_17_198)))
 (let ((?x103147 (* l_0_17_197 l_0_17_197)))
 (let ((?x103145 (* l_0_17_196 l_0_17_196)))
 (let ((?x103137 (* l_0_17_165 l_0_17_165)))
 (let ((?x103135 (* l_0_17_164 l_0_17_164)))
 (let ((?x103133 (* l_0_17_163 l_0_17_163)))
 (let ((?x103131 (* l_0_17_162 l_0_17_162)))
 (let ((?x107573 (+ (+ (* l_0_17_160 l_0_17_160) (* l_0_17_161 l_0_17_161)) ?x103131)))
 (let ((?x107580 (- (- (- (- (+ (+ (+ ?x107573 ?x103133) ?x103135) ?x103137) ?x103145) ?x103147) ?x103149) ?x103151)))
 (let ((?x107587 (- (- (- (- (- (- (- ?x107580 ?x103155) ?x103157) ?x104913) ?x104915) ?x104917) ?x104919) ?x104921)))
 (= (- ?x107587 ?x104923) 0.0)))))))))))))))))))))
(assert
 (let ((?x104972 (* 2.0 l_0_17_309)))
 (let ((?x104973 (* ?x104972 l_0_17_315)))
 (let ((?x104969 (* 2.0 l_0_17_308)))
 (let ((?x104970 (* ?x104969 l_0_17_314)))
 (let ((?x104966 (* 2.0 l_0_17_307)))
 (let ((?x104967 (* ?x104966 l_0_17_313)))
 (let ((?x104963 (* 2.0 l_0_17_306)))
 (let ((?x104964 (* ?x104963 l_0_17_312)))
 (let ((?x104960 (* 2.0 l_0_17_305)))
 (let ((?x104961 (* ?x104960 l_0_17_311)))
 (let ((?x104957 (* 2.0 l_0_17_304)))
 (let ((?x104958 (* ?x104957 l_0_17_310)))
 (let ((?x107435 (* l_0_17_273 l_0_17_273)))
 (let ((?x107433 (* l_0_17_272 l_0_17_272)))
 (let ((?x107431 (* l_0_17_271 l_0_17_271)))
 (let ((?x107429 (* l_0_17_270 l_0_17_270)))
 (let ((?x107427 (* l_0_17_269 l_0_17_269)))
 (let ((?x107425 (* l_0_17_268 l_0_17_268)))
 (let ((?x103270 (* 2.0 l_0_17_201)))
 (let ((?x103271 (* ?x103270 l_0_17_207)))
 (let ((?x103267 (* 2.0 l_0_17_200)))
 (let ((?x103268 (* ?x103267 l_0_17_206)))
 (let ((?x103261 (* 2.0 l_0_17_199)))
 (let ((?x103262 (* ?x103261 l_0_17_205)))
 (let ((?x103258 (* 2.0 l_0_17_198)))
 (let ((?x103259 (* ?x103258 l_0_17_204)))
 (let ((?x103255 (* 2.0 l_0_17_197)))
 (let ((?x103256 (* ?x103255 l_0_17_203)))
 (let ((?x103252 (* 2.0 l_0_17_196)))
 (let ((?x103253 (* ?x103252 l_0_17_202)))
 (let ((?x103242 (* 2.0 l_0_17_165)))
 (let ((?x103243 (* ?x103242 l_0_17_171)))
 (let ((?x103239 (* 2.0 l_0_17_164)))
 (let ((?x103240 (* ?x103239 l_0_17_170)))
 (let ((?x103236 (* 2.0 l_0_17_163)))
 (let ((?x103237 (* ?x103236 l_0_17_169)))
 (let ((?x103233 (* 2.0 l_0_17_162)))
 (let ((?x103234 (* ?x103233 l_0_17_168)))
 (let ((?x103230 (* 2.0 l_0_17_161)))
 (let ((?x103231 (* ?x103230 l_0_17_167)))
 (let ((?x103227 (* 2.0 l_0_17_160)))
 (let ((?x103228 (* ?x103227 l_0_17_166)))
 (let ((?x86147 (- (- (+ (+ (+ (+ (+ ?x103228 ?x103231) ?x103234) ?x103237) ?x103240) ?x103243) ?x103253) ?x103256)))
 (let ((?x107601 (- (- (- (- (- (- (- ?x86147 ?x103259) ?x103262) ?x103268) ?x103271) ?x107425) ?x107427) ?x107429)))
 (let ((?x107608 (- (- (- (- (- (- (- ?x107601 ?x107431) ?x107433) ?x107435) ?x104958) ?x104961) ?x104964) ?x104967)))
 (= (- (- ?x107608 ?x104970) ?x104973) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x104972 (* 2.0 l_0_17_309)))
 (let ((?x105046 (* ?x104972 l_0_17_322)))
 (let ((?x104969 (* 2.0 l_0_17_308)))
 (let ((?x105044 (* ?x104969 l_0_17_321)))
 (let ((?x104966 (* 2.0 l_0_17_307)))
 (let ((?x105042 (* ?x104966 l_0_17_320)))
 (let ((?x104963 (* 2.0 l_0_17_306)))
 (let ((?x105040 (* ?x104963 l_0_17_319)))
 (let ((?x104960 (* 2.0 l_0_17_305)))
 (let ((?x105038 (* ?x104960 l_0_17_318)))
 (let ((?x104957 (* 2.0 l_0_17_304)))
 (let ((?x105036 (* ?x104957 l_0_17_317)))
 (let ((?x107627 (* l_0_17_237 l_0_17_237)))
 (let ((?x107625 (* l_0_17_236 l_0_17_236)))
 (let ((?x86256 (* l_0_17_235 l_0_17_235)))
 (let ((?x86343 (* l_0_17_234 l_0_17_234)))
 (let ((?x86349 (* l_0_17_233 l_0_17_233)))
 (let ((?x86351 (* l_0_17_232 l_0_17_232)))
 (let ((?x103270 (* 2.0 l_0_17_201)))
 (let ((?x103402 (* ?x103270 l_0_17_214)))
 (let ((?x103267 (* 2.0 l_0_17_200)))
 (let ((?x103400 (* ?x103267 l_0_17_213)))
 (let ((?x103261 (* 2.0 l_0_17_199)))
 (let ((?x103396 (* ?x103261 l_0_17_212)))
 (let ((?x103258 (* 2.0 l_0_17_198)))
 (let ((?x103394 (* ?x103258 l_0_17_211)))
 (let ((?x103255 (* 2.0 l_0_17_197)))
 (let ((?x103392 (* ?x103255 l_0_17_210)))
 (let ((?x103252 (* 2.0 l_0_17_196)))
 (let ((?x103390 (* ?x103252 l_0_17_209)))
 (let ((?x103242 (* 2.0 l_0_17_165)))
 (let ((?x103382 (* ?x103242 l_0_17_178)))
 (let ((?x103239 (* 2.0 l_0_17_164)))
 (let ((?x103380 (* ?x103239 l_0_17_177)))
 (let ((?x103236 (* 2.0 l_0_17_163)))
 (let ((?x103378 (* ?x103236 l_0_17_176)))
 (let ((?x103233 (* 2.0 l_0_17_162)))
 (let ((?x103376 (* ?x103233 l_0_17_175)))
 (let ((?x103230 (* 2.0 l_0_17_161)))
 (let ((?x103374 (* ?x103230 l_0_17_174)))
 (let ((?x103227 (* 2.0 l_0_17_160)))
 (let ((?x103372 (* ?x103227 l_0_17_173)))
 (let ((?x86355 (- (- (+ (+ (+ (+ (+ ?x103372 ?x103374) ?x103376) ?x103378) ?x103380) ?x103382) ?x103390) ?x103392)))
 (let ((?x86340 (- (- (- (- (- (- (- ?x86355 ?x103394) ?x103396) ?x103400) ?x103402) ?x86351) ?x86349) ?x86343)))
 (let ((?x107632 (- (- (- (- (- (- (- ?x86340 ?x86256) ?x107625) ?x107627) ?x105036) ?x105038) ?x105040) ?x105042)))
 (= (- (- ?x107632 ?x105044) ?x105046) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x105102 (* l_0_17_316 l_0_17_316)))
 (let ((?x105100 (* l_0_17_315 l_0_17_315)))
 (let ((?x105098 (* l_0_17_314 l_0_17_314)))
 (let ((?x105096 (* l_0_17_313 l_0_17_313)))
 (let ((?x105094 (* l_0_17_312 l_0_17_312)))
 (let ((?x105092 (* l_0_17_311 l_0_17_311)))
 (let ((?x105090 (* l_0_17_310 l_0_17_310)))
 (let ((?x105618 (* 2.0 l_0_17_273)))
 (let ((?x107489 (* ?x105618 l_0_17_279)))
 (let ((?x105615 (* 2.0 l_0_17_272)))
 (let ((?x107487 (* ?x105615 l_0_17_278)))
 (let ((?x105612 (* 2.0 l_0_17_271)))
 (let ((?x107485 (* ?x105612 l_0_17_277)))
 (let ((?x105609 (* 2.0 l_0_17_270)))
 (let ((?x107483 (* ?x105609 l_0_17_276)))
 (let ((?x105606 (* 2.0 l_0_17_269)))
 (let ((?x107481 (* ?x105606 l_0_17_275)))
 (let ((?x105603 (* 2.0 l_0_17_268)))
 (let ((?x107479 (* ?x105603 l_0_17_274)))
 (let ((?x103496 (* l_0_17_208 l_0_17_208)))
 (let ((?x103494 (* l_0_17_207 l_0_17_207)))
 (let ((?x103492 (* l_0_17_206 l_0_17_206)))
 (let ((?x103490 (* l_0_17_205 l_0_17_205)))
 (let ((?x103488 (* l_0_17_204 l_0_17_204)))
 (let ((?x103486 (* l_0_17_203 l_0_17_203)))
 (let ((?x103484 (* l_0_17_202 l_0_17_202)))
 (let ((?x103482 (* l_0_17_172 l_0_17_172)))
 (let ((?x103480 (* l_0_17_171 l_0_17_171)))
 (let ((?x103478 (* l_0_17_170 l_0_17_170)))
 (let ((?x103476 (* l_0_17_169 l_0_17_169)))
 (let ((?x103474 (* l_0_17_168 l_0_17_168)))
 (let ((?x107650 (+ (+ (* l_0_17_166 l_0_17_166) (* l_0_17_167 l_0_17_167)) ?x103474)))
 (let ((?x107657 (- (- (- (+ (+ (+ (+ ?x107650 ?x103476) ?x103478) ?x103480) ?x103482) ?x103484) ?x103486) ?x103488)))
 (let ((?x107664 (- (- (- (- (- (- (- ?x107657 ?x103490) ?x103492) ?x103494) ?x103496) ?x107479) ?x107481) ?x107483)))
 (let ((?x107671 (- (- (- (- (- (- (- ?x107664 ?x107485) ?x107487) ?x107489) ?x105090) ?x105092) ?x105094) ?x105096)))
 (= (- (- (- ?x107671 ?x105098) ?x105100) ?x105102) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x105247 (* l_0_17_324 l_0_17_324)))
 (let ((?x105245 (* l_0_17_323 l_0_17_323)))
 (let ((?x105243 (* l_0_17_322 l_0_17_322)))
 (let ((?x105241 (* l_0_17_321 l_0_17_321)))
 (let ((?x105239 (* l_0_17_320 l_0_17_320)))
 (let ((?x105236 (* l_0_17_319 l_0_17_319)))
 (let ((?x105234 (* l_0_17_318 l_0_17_318)))
 (let ((?x105232 (* l_0_17_317 l_0_17_317)))
 (let ((?x103769 (* l_0_17_216 l_0_17_216)))
 (let ((?x103767 (* l_0_17_215 l_0_17_215)))
 (let ((?x103765 (* l_0_17_214 l_0_17_214)))
 (let ((?x103763 (* l_0_17_213 l_0_17_213)))
 (let ((?x103761 (* l_0_17_212 l_0_17_212)))
 (let ((?x103759 (* l_0_17_211 l_0_17_211)))
 (let ((?x103757 (* l_0_17_210 l_0_17_210)))
 (let ((?x103755 (* l_0_17_209 l_0_17_209)))
 (let ((?x103753 (* l_0_17_180 l_0_17_180)))
 (let ((?x103751 (* l_0_17_179 l_0_17_179)))
 (let ((?x103749 (* l_0_17_178 l_0_17_178)))
 (let ((?x103747 (* l_0_17_177 l_0_17_177)))
 (let ((?x103745 (* l_0_17_176 l_0_17_176)))
 (let ((?x103743 (* l_0_17_175 l_0_17_175)))
 (let ((?x86761 (+ (+ (* l_0_17_173 l_0_17_173) (* l_0_17_174 l_0_17_174)) ?x103743)))
 (let ((?x86752 (- (- (+ (+ (+ (+ (+ ?x86761 ?x103745) ?x103747) ?x103749) ?x103751) ?x103753) ?x103755) ?x103757)))
 (let ((?x86738 (- (- (- (- (- (- (- ?x86752 ?x103759) ?x103761) ?x103763) ?x103765) ?x103767) ?x103769) (* (* 2.0 l_0_17_232) l_0_17_245))))
 (let ((?x40981 (- (- ?x86738 (* (* 2.0 l_0_17_233) l_0_17_246)) (* (* 2.0 l_0_17_234) l_0_17_247))))
 (let ((?x64480 (- (- ?x40981 (* (* 2.0 l_0_17_235) l_0_17_248)) (* (* 2.0 l_0_17_236) l_0_17_249))))
 (let ((?x86642 (- (- (- (- ?x64480 (* (* 2.0 l_0_17_237) l_0_17_250)) ?x105232) ?x105234) ?x105236)))
 (= (- (- (- (- (- ?x86642 ?x105239) ?x105241) ?x105243) ?x105245) ?x105247) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x101367 (* ?x101366 l_0_17_282)))
 (let ((?x101363 (* 2.0 l_0_17_254)))
 (let ((?x101364 (* ?x101363 l_0_17_281)))
 (let ((?x107696 (- (* (* (- 2.0) l_0_17_218) l_0_17_227) (* (* 2.0 l_0_17_219) l_0_17_228))))
 (let ((?x107702 (- (- (+ (+ ?x107696 ?x101364) ?x101367) (* (* 2.0 l_0_17_335) l_0_17_353)) (* (* 2.0 l_0_17_336) l_0_17_354))))
 (let ((?x107706 (- (- ?x107702 (* (* 2.0 l_0_17_337) l_0_17_355)) (* (* 2.0 l_0_17_338) l_0_17_356))))
 (let ((?x107710 (- (- ?x107706 (* (* 2.0 l_0_17_339) l_0_17_357)) (* (* 2.0 l_0_17_371) l_0_17_389))))
 (let ((?x107714 (- (- ?x107710 (* (* 2.0 l_0_17_372) l_0_17_390)) (* (* 2.0 l_0_17_373) l_0_17_391))))
 (let ((?x107718 (- (- ?x107714 (* (* 2.0 l_0_17_374) l_0_17_392)) (* (* 2.0 l_0_17_375) l_0_17_393))))
 (= ?x107718 0.0))))))))))))
(assert
 (let ((?x107786 (* l_0_17_396 l_0_17_396)))
 (let ((?x107784 (* l_0_17_395 l_0_17_395)))
 (let ((?x107782 (* l_0_17_394 l_0_17_394)))
 (let ((?x107780 (* l_0_17_393 l_0_17_393)))
 (let ((?x107778 (* l_0_17_392 l_0_17_392)))
 (let ((?x107776 (* l_0_17_391 l_0_17_391)))
 (let ((?x107774 (* l_0_17_390 l_0_17_390)))
 (let ((?x107772 (* l_0_17_389 l_0_17_389)))
 (let ((?x107770 (* l_0_17_360 l_0_17_360)))
 (let ((?x107768 (* l_0_17_359 l_0_17_359)))
 (let ((?x107766 (* l_0_17_358 l_0_17_358)))
 (let ((?x107764 (* l_0_17_357 l_0_17_357)))
 (let ((?x107762 (* l_0_17_356 l_0_17_356)))
 (let ((?x107760 (* l_0_17_355 l_0_17_355)))
 (let ((?x107758 (* l_0_17_354 l_0_17_354)))
 (let ((?x107756 (* l_0_17_353 l_0_17_353)))
 (let ((?x107755 (- (* (* (- 2.0) l_0_17_218) l_0_17_245) (* (* 2.0 l_0_17_219) l_0_17_246))))
 (let ((?x107769 (- (- (- (- (- (- (- ?x107755 ?x107756) ?x107758) ?x107760) ?x107762) ?x107764) ?x107766) ?x107768)))
 (let ((?x107783 (- (- (- (- (- (- (- ?x107769 ?x107770) ?x107772) ?x107774) ?x107776) ?x107778) ?x107780) ?x107782)))
 (= (- (- ?x107783 ?x107784) ?x107786) 0.0)))))))))))))))))))))
(assert
 (let ((?x105468 (* 2.0 l_0_17_267)))
 (let ((?x105469 (* ?x105468 l_0_17_285)))
 (let ((?x105465 (* 2.0 l_0_17_266)))
 (let ((?x105466 (* ?x105465 l_0_17_284)))
 (let ((?x105462 (* 2.0 l_0_17_265)))
 (let ((?x105463 (* ?x105462 l_0_17_283)))
 (let ((?x105459 (* 2.0 l_0_17_264)))
 (let ((?x105460 (* ?x105459 l_0_17_282)))
 (let ((?x105456 (* 2.0 l_0_17_263)))
 (let ((?x105457 (* ?x105456 l_0_17_281)))
 (let ((?x107813 (* l_0_17_231 l_0_17_231)))
 (let ((?x107811 (* l_0_17_230 l_0_17_230)))
 (let ((?x107809 (* l_0_17_229 l_0_17_229)))
 (let ((?x107810 (- (- (* (- l_0_17_227) l_0_17_227) (* l_0_17_228 l_0_17_228)) ?x107809)))
 (let ((?x107819 (+ (+ (+ (+ (+ (- (- ?x107810 ?x107811) ?x107813) ?x105457) ?x105460) ?x105463) ?x105466) ?x105469)))
 (= ?x107819 0.0)))))))))))))))))
(assert
 (let ((?x105661 (* l_0_17_288 l_0_17_288)))
 (let ((?x105659 (* l_0_17_287 l_0_17_287)))
 (let ((?x105657 (* l_0_17_286 l_0_17_286)))
 (let ((?x105655 (* l_0_17_285 l_0_17_285)))
 (let ((?x105653 (* l_0_17_284 l_0_17_284)))
 (let ((?x105651 (* l_0_17_283 l_0_17_283)))
 (let ((?x105649 (* l_0_17_282 l_0_17_282)))
 (let ((?x105647 (* l_0_17_281 l_0_17_281)))
 (let ((?x87108 (- (* (* (- 2.0) l_0_17_227) l_0_17_245) (* (* 2.0 l_0_17_228) l_0_17_246))))
 (let ((?x107832 (- (- ?x87108 (* (* 2.0 l_0_17_229) l_0_17_247)) (* (* 2.0 l_0_17_230) l_0_17_248))))
 (let ((?x107837 (+ (+ (+ (- ?x107832 (* (* 2.0 l_0_17_231) l_0_17_249)) ?x105647) ?x105649) ?x105651)))
 (= (+ (+ (+ (+ (+ ?x107837 ?x105653) ?x105655) ?x105657) ?x105659) ?x105661) 0.0)))))))))))))
(assert
 (let ((?x107866 (* l_0_17_252 l_0_17_252)))
 (let ((?x43383 (* l_0_17_251 l_0_17_251)))
 (let ((?x43376 (* l_0_17_250 l_0_17_250)))
 (let ((?x87263 (* l_0_17_249 l_0_17_249)))
 (let ((?x87264 (* l_0_17_248 l_0_17_248)))
 (let ((?x43377 (* l_0_17_247 l_0_17_247)))
 (let ((?x87270 (- (- (* (- l_0_17_245) l_0_17_245) (* l_0_17_246 l_0_17_246)) ?x43377)))
 (= (- (- (- (- (- ?x87270 ?x87264) ?x87263) ?x43376) ?x43383) ?x107866) 0.0)))))))))
(assert
 (let ((?x107885 (- (- (* (- l_0_17_254) l_0_17_254) (* l_0_17_255 l_0_17_255)) (* (* 2.0 l_0_17_326) l_0_17_346))))
 (let ((?x107889 (- (- ?x107885 (* (* 2.0 l_0_17_327) l_0_17_347)) (* (* 2.0 l_0_17_362) l_0_17_382))))
 (= (- ?x107889 (* (* 2.0 l_0_17_363) l_0_17_383)) 0.0))))
(assert
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x107916 (* ?x101366 l_0_17_257)))
 (let ((?x107919 (- (- (* (* (- 2.0) l_0_17_254) l_0_17_256) ?x107916) (* (* 2.0 l_0_17_328) l_0_17_346))))
 (let ((?x107923 (- (- ?x107919 (* (* 2.0 l_0_17_329) l_0_17_347)) (* (* 2.0 l_0_17_330) l_0_17_348))))
 (let ((?x107927 (- (- ?x107923 (* (* 2.0 l_0_17_364) l_0_17_382)) (* (* 2.0 l_0_17_365) l_0_17_383))))
 (= (- ?x107927 (* (* 2.0 l_0_17_366) l_0_17_384)) 0.0)))))))
(assert
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x107959 (* ?x101366 l_0_17_275)))
 (let ((?x107957 (* ?x101366 l_0_17_264)))
 (let ((?x107956 (+ (* (* (- 2.0) l_0_17_254) l_0_17_263) (* (* 2.0 l_0_17_254) l_0_17_274))))
 (let ((?x107964 (- (- (+ (- ?x107956 ?x107957) ?x107959) (* (* 2.0 l_0_17_335) l_0_17_346)) (* (* 2.0 l_0_17_336) l_0_17_347))))
 (let ((?x107968 (- (- ?x107964 (* (* 2.0 l_0_17_337) l_0_17_348)) (* (* 2.0 l_0_17_338) l_0_17_349))))
 (let ((?x107972 (- (- ?x107968 (* (* 2.0 l_0_17_339) l_0_17_350)) (* (* 2.0 l_0_17_371) l_0_17_382))))
 (let ((?x107976 (- (- ?x107972 (* (* 2.0 l_0_17_372) l_0_17_383)) (* (* 2.0 l_0_17_373) l_0_17_384))))
 (let ((?x107980 (- (- ?x107976 (* (* 2.0 l_0_17_374) l_0_17_385)) (* (* 2.0 l_0_17_375) l_0_17_386))))
 (= ?x107980 0.0)))))))))))
(assert
 (let ((?x108062 (* l_0_17_388 l_0_17_388)))
 (let ((?x108060 (* l_0_17_387 l_0_17_387)))
 (let ((?x108058 (* l_0_17_386 l_0_17_386)))
 (let ((?x108056 (* l_0_17_385 l_0_17_385)))
 (let ((?x108054 (* l_0_17_384 l_0_17_384)))
 (let ((?x108052 (* l_0_17_383 l_0_17_383)))
 (let ((?x108050 (* l_0_17_382 l_0_17_382)))
 (let ((?x108048 (* l_0_17_352 l_0_17_352)))
 (let ((?x108046 (* l_0_17_351 l_0_17_351)))
 (let ((?x108044 (* l_0_17_350 l_0_17_350)))
 (let ((?x108042 (* l_0_17_349 l_0_17_349)))
 (let ((?x108040 (* l_0_17_348 l_0_17_348)))
 (let ((?x108038 (* l_0_17_347 l_0_17_347)))
 (let ((?x108036 (* l_0_17_346 l_0_17_346)))
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x107959 (* ?x101366 l_0_17_275)))
 (let ((?x108041 (- (- (- (- (* (* (- 2.0) l_0_17_254) l_0_17_274) ?x107959) ?x108036) ?x108038) ?x108040)))
 (let ((?x108055 (- (- (- (- (- (- (- ?x108041 ?x108042) ?x108044) ?x108046) ?x108048) ?x108050) ?x108052) ?x108054)))
 (= (- (- (- (- ?x108055 ?x108056) ?x108058) ?x108060) ?x108062) 0.0))))))))))))))))))))
(assert
 (let ((?x108086 (* l_0_17_258 l_0_17_258)))
 (let ((?x108087 (- (- (* (- l_0_17_256) l_0_17_256) (* l_0_17_257 l_0_17_257)) ?x108086)))
 (= ?x108087 0.0))))
(assert
 (let ((?x101895 (* 2.0 l_0_17_258)))
 (let ((?x108108 (* ?x101895 l_0_17_276)))
 (let ((?x108106 (* ?x101895 l_0_17_265)))
 (let ((?x101892 (* 2.0 l_0_17_257)))
 (let ((?x108104 (* ?x101892 l_0_17_275)))
 (let ((?x108102 (* ?x101892 l_0_17_264)))
 (let ((?x108101 (+ (* (* (- 2.0) l_0_17_256) l_0_17_263) (* (* 2.0 l_0_17_256) l_0_17_274))))
 (= (+ (- (+ (- ?x108101 ?x108102) ?x108104) ?x108106) ?x108108) 0.0)))))))))
(assert
 (let ((?x101895 (* 2.0 l_0_17_258)))
 (let ((?x108108 (* ?x101895 l_0_17_276)))
 (let ((?x101892 (* 2.0 l_0_17_257)))
 (let ((?x108104 (* ?x101892 l_0_17_275)))
 (= (- (- (* (* (- 2.0) l_0_17_256) l_0_17_274) ?x108104) ?x108108) 0.0))))))
(assert
 (let ((?x108144 (* l_0_17_267 l_0_17_267)))
 (let ((?x105468 (* 2.0 l_0_17_267)))
 (let ((?x108142 (* ?x105468 l_0_17_278)))
 (let ((?x108140 (* l_0_17_266 l_0_17_266)))
 (let ((?x105465 (* 2.0 l_0_17_266)))
 (let ((?x64945 (* ?x105465 l_0_17_277)))
 (let ((?x64947 (* l_0_17_265 l_0_17_265)))
 (let ((?x105462 (* 2.0 l_0_17_265)))
 (let ((?x87484 (* ?x105462 l_0_17_276)))
 (let ((?x87476 (* l_0_17_264 l_0_17_264)))
 (let ((?x105459 (* 2.0 l_0_17_264)))
 (let ((?x87472 (* ?x105459 l_0_17_275)))
 (let ((?x87470 (* l_0_17_263 l_0_17_263)))
 (let ((?x87490 (+ (- (+ (- (* (* 2.0 l_0_17_263) l_0_17_274) ?x87470) ?x87472) ?x87476) ?x87484)))
 (= (- (+ (- (+ (- ?x87490 ?x64947) ?x64945) ?x108140) ?x108142) ?x108144) 0.0))))))))))))))))
(assert
 (let ((?x108191 (* l_0_17_280 l_0_17_280)))
 (let ((?x108189 (* l_0_17_279 l_0_17_279)))
 (let ((?x108187 (* l_0_17_278 l_0_17_278)))
 (let ((?x108185 (* l_0_17_277 l_0_17_277)))
 (let ((?x108183 (* l_0_17_276 l_0_17_276)))
 (let ((?x108181 (* l_0_17_275 l_0_17_275)))
 (let ((?x108179 (* l_0_17_274 l_0_17_274)))
 (let ((?x105468 (* 2.0 l_0_17_267)))
 (let ((?x108142 (* ?x105468 l_0_17_278)))
 (let ((?x105465 (* 2.0 l_0_17_266)))
 (let ((?x64945 (* ?x105465 l_0_17_277)))
 (let ((?x105462 (* 2.0 l_0_17_265)))
 (let ((?x87484 (* ?x105462 l_0_17_276)))
 (let ((?x105459 (* 2.0 l_0_17_264)))
 (let ((?x87472 (* ?x105459 l_0_17_275)))
 (let ((?x108178 (- (- (- (- (* (* (- 2.0) l_0_17_263) l_0_17_274) ?x87472) ?x87484) ?x64945) ?x108142)))
 (let ((?x108192 (+ (+ (+ (+ (+ (+ (+ ?x108178 ?x108179) ?x108181) ?x108183) ?x108185) ?x108187) ?x108189) ?x108191)))
 (= ?x108192 0.0)))))))))))))))))))
(assert
 (let ((?x108191 (* l_0_17_280 l_0_17_280)))
 (let ((?x108189 (* l_0_17_279 l_0_17_279)))
 (let ((?x108187 (* l_0_17_278 l_0_17_278)))
 (let ((?x108185 (* l_0_17_277 l_0_17_277)))
 (let ((?x108183 (* l_0_17_276 l_0_17_276)))
 (let ((?x108209 (- (- (* (- l_0_17_274) l_0_17_274) (* l_0_17_275 l_0_17_275)) ?x108183)))
 (= (- (- (- (- ?x108209 ?x108185) ?x108187) ?x108189) ?x108191) 0.0))))))))
(assert
 (let ((?x64946 (- (+ (* l_0_17_254 l_0_17_254) (* l_0_17_255 l_0_17_255)) (* (* 2.0 l_0_17_326) l_0_17_335))))
 (let ((?x108218 (- (- ?x64946 (* (* 2.0 l_0_17_327) l_0_17_336)) (* (* 2.0 l_0_17_362) l_0_17_371))))
 (= (- ?x108218 (* (* 2.0 l_0_17_363) l_0_17_372)) 0.0))))
(assert
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x107916 (* ?x101366 l_0_17_257)))
 (let ((?x108240 (- (+ (* (* 2.0 l_0_17_254) l_0_17_256) ?x107916) (* (* 2.0 l_0_17_328) l_0_17_335))))
 (let ((?x108244 (- (- ?x108240 (* (* 2.0 l_0_17_329) l_0_17_336)) (* (* 2.0 l_0_17_330) l_0_17_337))))
 (let ((?x108248 (- (- ?x108244 (* (* 2.0 l_0_17_364) l_0_17_371)) (* (* 2.0 l_0_17_365) l_0_17_372))))
 (= (- ?x108248 (* (* 2.0 l_0_17_366) l_0_17_373)) 0.0)))))))
(assert
 (let ((?x108277 (* l_0_17_375 l_0_17_375)))
 (let ((?x108275 (* l_0_17_374 l_0_17_374)))
 (let ((?x108273 (* l_0_17_373 l_0_17_373)))
 (let ((?x108271 (* l_0_17_372 l_0_17_372)))
 (let ((?x108269 (* l_0_17_371 l_0_17_371)))
 (let ((?x108267 (* l_0_17_339 l_0_17_339)))
 (let ((?x108265 (* l_0_17_338 l_0_17_338)))
 (let ((?x108263 (* l_0_17_337 l_0_17_337)))
 (let ((?x108261 (* l_0_17_336 l_0_17_336)))
 (let ((?x108259 (* l_0_17_335 l_0_17_335)))
 (let ((?x101366 (* 2.0 l_0_17_255)))
 (let ((?x107957 (* ?x101366 l_0_17_264)))
 (let ((?x108264 (- (- (- (+ (* (* 2.0 l_0_17_254) l_0_17_263) ?x107957) ?x108259) ?x108261) ?x108263)))
 (let ((?x108278 (- (- (- (- (- (- (- ?x108264 ?x108265) ?x108267) ?x108269) ?x108271) ?x108273) ?x108275) ?x108277)))
 (= ?x108278 0.0))))))))))))))))
(assert
 (let ((?x108086 (* l_0_17_258 l_0_17_258)))
 (let ((?x65140 (+ (+ (* l_0_17_256 l_0_17_256) (* l_0_17_257 l_0_17_257)) ?x108086)))
 (= ?x65140 0.0))))
(assert
 (let ((?x101895 (* 2.0 l_0_17_258)))
 (let ((?x108106 (* ?x101895 l_0_17_265)))
 (let ((?x101892 (* 2.0 l_0_17_257)))
 (let ((?x108102 (* ?x101892 l_0_17_264)))
 (= (+ (+ (* (* 2.0 l_0_17_256) l_0_17_263) ?x108102) ?x108106) 0.0))))))
(assert
 (let ((?x108144 (* l_0_17_267 l_0_17_267)))
 (let ((?x108140 (* l_0_17_266 l_0_17_266)))
 (let ((?x64947 (* l_0_17_265 l_0_17_265)))
 (let ((?x87625 (+ (+ (* l_0_17_263 l_0_17_263) (* l_0_17_264 l_0_17_264)) ?x64947)))
 (= (+ (+ ?x87625 ?x108140) ?x108144) 0.0))))))
(assert
 (let ((?x108306 (- (* (* (- 2.0) l_0_17_326) l_0_17_328) (* (* 2.0 l_0_17_327) l_0_17_329))))
 (let ((?x108310 (- (- ?x108306 (* (* 2.0 l_0_17_362) l_0_17_364)) (* (* 2.0 l_0_17_363) l_0_17_365))))
 (= ?x108310 0.0))))
(assert
 (let ((?x108333 (* l_0_17_366 l_0_17_366)))
 (let ((?x108331 (* l_0_17_365 l_0_17_365)))
 (let ((?x108329 (* l_0_17_364 l_0_17_364)))
 (let ((?x108327 (* l_0_17_330 l_0_17_330)))
 (let ((?x108328 (- (- (* (- l_0_17_328) l_0_17_328) (* l_0_17_329 l_0_17_329)) ?x108327)))
 (= (- (- (- ?x108328 ?x108329) ?x108331) ?x108333) 0.0)))))))
(assert
 (>= l_0_17_1 0.0))
(assert
 (>= l_0_17_3 0.0))
(assert
 (>= l_0_17_6 0.0))
(assert
 (>= l_0_17_10 0.0))
(assert
 (>= l_0_17_15 0.0))
(assert
 (>= l_0_17_21 0.0))
(assert
 (>= l_0_17_28 0.0))
(assert
 (>= l_0_17_36 0.0))
(assert
 (>= l_0_17_37 0.0))
(assert
 (>= l_0_17_39 0.0))
(assert
 (>= l_0_17_42 0.0))
(assert
 (>= l_0_17_46 0.0))
(assert
 (>= l_0_17_51 0.0))
(assert
 (>= l_0_17_57 0.0))
(assert
 (>= l_0_17_64 0.0))
(assert
 (>= l_0_17_72 0.0))
(assert
 (>= l_0_17_73 0.0))
(assert
 (>= l_0_17_75 0.0))
(assert
 (>= l_0_17_78 0.0))
(assert
 (>= l_0_17_82 0.0))
(assert
 (>= l_0_17_87 0.0))
(assert
 (>= l_0_17_93 0.0))
(assert
 (>= l_0_17_100 0.0))
(assert
 (>= l_0_17_108 0.0))
(assert
 (>= l_0_17_109 0.0))
(assert
 (>= l_0_17_111 0.0))
(assert
 (>= l_0_17_114 0.0))
(assert
 (>= l_0_17_118 0.0))
(assert
 (>= l_0_17_123 0.0))
(assert
 (>= l_0_17_129 0.0))
(assert
 (>= l_0_17_136 0.0))
(assert
 (>= l_0_17_144 0.0))
(assert
 (>= l_0_17_145 0.0))
(assert
 (>= l_0_17_147 0.0))
(assert
 (>= l_0_17_150 0.0))
(assert
 (>= l_0_17_154 0.0))
(assert
 (>= l_0_17_159 0.0))
(assert
 (>= l_0_17_165 0.0))
(assert
 (>= l_0_17_172 0.0))
(assert
 (>= l_0_17_180 0.0))
(assert
 (>= l_0_17_181 0.0))
(assert
 (>= l_0_17_183 0.0))
(assert
 (>= l_0_17_186 0.0))
(assert
 (>= l_0_17_190 0.0))
(assert
 (>= l_0_17_195 0.0))
(assert
 (>= l_0_17_201 0.0))
(assert
 (>= l_0_17_208 0.0))
(assert
 (>= l_0_17_216 0.0))
(assert
 (>= l_0_17_217 0.0))
(assert
 (>= l_0_17_219 0.0))
(assert
 (>= l_0_17_222 0.0))
(assert
 (>= l_0_17_226 0.0))
(assert
 (>= l_0_17_231 0.0))
(assert
 (>= l_0_17_237 0.0))
(assert
 (>= l_0_17_244 0.0))
(assert
 (>= l_0_17_252 0.0))
(assert
 (>= l_0_17_253 0.0))
(assert
 (>= l_0_17_255 0.0))
(assert
 (>= l_0_17_258 0.0))
(assert
 (>= l_0_17_262 0.0))
(assert
 (>= l_0_17_267 0.0))
(assert
 (>= l_0_17_273 0.0))
(assert
 (>= l_0_17_280 0.0))
(assert
 (>= l_0_17_288 0.0))
(assert
 (>= l_0_17_289 0.0))
(assert
 (>= l_0_17_291 0.0))
(assert
 (>= l_0_17_294 0.0))
(assert
 (>= l_0_17_298 0.0))
(assert
 (>= l_0_17_303 0.0))
(assert
 (>= l_0_17_309 0.0))
(assert
 (>= l_0_17_316 0.0))
(assert
 (>= l_0_17_324 0.0))
(assert
 (>= l_0_17_325 0.0))
(assert
 (>= l_0_17_327 0.0))
(assert
 (>= l_0_17_330 0.0))
(assert
 (>= l_0_17_334 0.0))
(assert
 (>= l_0_17_339 0.0))
(assert
 (>= l_0_17_345 0.0))
(assert
 (>= l_0_17_352 0.0))
(assert
 (>= l_0_17_360 0.0))
(assert
 (>= l_0_17_361 0.0))
(assert
 (>= l_0_17_363 0.0))
(assert
 (>= l_0_17_366 0.0))
(assert
 (>= l_0_17_370 0.0))
(assert
 (>= l_0_17_375 0.0))
(assert
 (>= l_0_17_381 0.0))
(assert
 (>= l_0_17_388 0.0))
(assert
 (>= l_0_17_396 0.0))
(assert
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x108455 (* ?x108454 l_0_18_282)))
 (let ((?x108451 (* 2.0 l_0_18_254)))
 (let ((?x108452 (* ?x108451 l_0_18_281)))
 (let ((?x108443 (* l_0_18_147 l_0_18_147)))
 (let ((?x108441 (* l_0_18_146 l_0_18_146)))
 (let ((?x108440 (+ (* (/ 1.0 2.0) (* l_0_18_110 l_0_18_110)) (* (/ 1.0 2.0) (* l_0_18_111 l_0_18_111)))))
 (let ((?x108450 (- (- (- (- ?x108440 ?x108441) ?x108443) (* (* 2.0 l_0_18_218) l_0_18_238)) (* (* 2.0 l_0_18_219) l_0_18_239))))
 (let ((?x108462 (- (- (- (- ?x108450 ?x108452) ?x108455) (* (* 2.0 l_0_18_346) l_0_18_353)) (* (* 2.0 l_0_18_347) l_0_18_354))))
 (let ((?x108468 (- (- ?x108462 (* (* 2.0 l_0_18_348) l_0_18_355)) (* (* 2.0 l_0_18_349) l_0_18_356))))
 (let ((?x108474 (- (- ?x108468 (* (* 2.0 l_0_18_350) l_0_18_357)) (* (* 2.0 l_0_18_351) l_0_18_358))))
 (let ((?x108480 (- (- ?x108474 (* (* 2.0 l_0_18_352) l_0_18_359)) (* (* 2.0 l_0_18_382) l_0_18_389))))
 (let ((?x108486 (- (- ?x108480 (* (* 2.0 l_0_18_383) l_0_18_390)) (* (* 2.0 l_0_18_384) l_0_18_391))))
 (let ((?x108492 (- (- ?x108486 (* (* 2.0 l_0_18_385) l_0_18_392)) (* (* 2.0 l_0_18_386) l_0_18_393))))
 (let ((?x108498 (- (- ?x108492 (* (* 2.0 l_0_18_387) l_0_18_394)) (* (* 2.0 l_0_18_388) l_0_18_395))))
 (let ((?x108504 (- (- ?x108498 (* (* 2.0 l_0_18_418) l_0_18_425)) (* (* 2.0 l_0_18_419) l_0_18_426))))
 (let ((?x108510 (- (- ?x108504 (* (* 2.0 l_0_18_420) l_0_18_427)) (* (* 2.0 l_0_18_421) l_0_18_428))))
 (let ((?x108516 (- (- ?x108510 (* (* 2.0 l_0_18_422) l_0_18_429)) (* (* 2.0 l_0_18_423) l_0_18_430))))
 (let ((?x108522 (- (- ?x108516 (* (* 2.0 l_0_18_424) l_0_18_431)) (* (* (/ 1.0 2.0) l_0_18_74) l_0_18_74))))
 (= (+ (- ?x108522 (* (* (/ 1.0 2.0) l_0_18_75) l_0_18_75)) (/ 1.0 4.0)) 0.0)))))))))))))))))))))
(assert
 (let ((?x87790 (* l_0_18_75 l_0_18_75)))
 (let ((?x44442 (* l_0_18_74 l_0_18_74)))
 (let ((?x108596 (* l_0_18_291 l_0_18_291)))
 (let ((?x108594 (* l_0_18_290 l_0_18_290)))
 (let ((?x108595 (+ (- (* (- l_0_18_110) l_0_18_110) (* l_0_18_111 l_0_18_111)) ?x108594)))
 (let ((?x108603 (- (- (+ ?x108595 ?x108596) (* (* 2.0 l_0_18_325) l_0_18_326)) (* (* 2.0 l_0_18_361) l_0_18_362))))
 (let ((?x108609 (- (+ (+ (- ?x108603 (* (* 2.0 l_0_18_397) l_0_18_398)) ?x44442) ?x87790) (/ 1.0 2.0))))
 (= ?x108609 0.0)))))))))
(assert
 (let ((?x108636 (* l_0_18_37 l_0_18_37)))
 (let ((?x108634 (* l_0_18_181 l_0_18_181)))
 (let ((?x108635 (+ (- (* (- l_0_18_1) l_0_18_1) (* l_0_18_145 l_0_18_145)) ?x108634)))
 (= (+ ?x108635 ?x108636) 0.0)))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108688 (* ?x108687 l_0_18_38)))
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x108685 (* ?x108684 l_0_18_319)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x108682 (* ?x108681 l_0_18_318)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x108679 (* ?x108678 l_0_18_317)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108673 (* ?x108672 l_0_18_182)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108670 (* ?x108669 l_0_18_146)))
 (let ((?x108653 (+ (* (* (- 2.0) l_0_18_1) l_0_18_2) (* (* 2.0 l_0_18_101) l_0_18_76))))
 (let ((?x108659 (+ (+ ?x108653 (* (* 2.0 l_0_18_102) l_0_18_77)) (* (* 2.0 l_0_18_103) l_0_18_78))))
 (let ((?x108665 (- (- ?x108659 (* (* 2.0 l_0_18_112) l_0_18_137)) (* (* 2.0 l_0_18_113) l_0_18_138))))
 (let ((?x108677 (- (+ (- (- ?x108665 (* (* 2.0 l_0_18_114) l_0_18_139)) ?x108670) ?x108673) (* (* 2.0 l_0_18_217) l_0_18_220))))
 (= (+ (+ (+ (+ ?x108677 ?x108679) ?x108682) ?x108685) ?x108688) 0.0))))))))))))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108733 (* ?x108687 l_0_18_40)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108731 (* ?x108672 l_0_18_184)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108729 (* ?x108669 l_0_18_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_1) l_0_18_4) ?x108729) ?x108731) ?x108733) 0.0))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108752 (* ?x108687 l_0_18_43)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108750 (* ?x108672 l_0_18_187)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108748 (* ?x108669 l_0_18_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_1) l_0_18_7) ?x108748) ?x108750) ?x108752) 0.0))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108775 (* ?x108687 l_0_18_47)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108773 (* ?x108672 l_0_18_191)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108766 (* ?x108669 l_0_18_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_1) l_0_18_11) ?x108766) ?x108773) ?x108775) 0.0))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108794 (* ?x108687 l_0_18_52)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108792 (* ?x108672 l_0_18_196)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108790 (* ?x108669 l_0_18_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_1) l_0_18_16) ?x108790) ?x108792) ?x108794) 0.0))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108821 (* ?x108687 l_0_18_58)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108819 (* ?x108672 l_0_18_202)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108817 (* ?x108669 l_0_18_166)))
 (let ((?x108729 (* ?x108669 l_0_18_148)))
 (let ((?x108815 (+ (* (* (- 2.0) l_0_18_1) l_0_18_22) (* (* 1.0 l_0_18_109) l_0_18_112))))
 (let ((?x108825 (- (+ (+ (- (- ?x108815 ?x108729) ?x108817) ?x108819) ?x108821) (* (* 1.0 l_0_18_73) l_0_18_76))))
 (= ?x108825 0.0)))))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108848 (* ?x108687 l_0_18_65)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108846 (* ?x108672 l_0_18_209)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108844 (* ?x108669 l_0_18_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_1) l_0_18_29) ?x108844) ?x108846) ?x108848) 0.0))))))))
(assert
 (let ((?x108897 (* l_0_18_39 l_0_18_39)))
 (let ((?x108895 (* l_0_18_38 l_0_18_38)))
 (let ((?x108875 (* l_0_18_3 l_0_18_3)))
 (let ((?x108869 (* l_0_18_2 l_0_18_2)))
 (let ((?x108867 (* l_0_18_183 l_0_18_183)))
 (let ((?x108865 (* l_0_18_182 l_0_18_182)))
 (let ((?x108866 (+ (- (* (- l_0_18_146) l_0_18_146) (* l_0_18_147 l_0_18_147)) ?x108865)))
 (let ((?x108874 (- (- (- (+ ?x108866 ?x108867) ?x108869) (* (* 2.0 l_0_18_218) l_0_18_220)) (* (* 2.0 l_0_18_219) l_0_18_221))))
 (let ((?x108882 (- (- (- ?x108874 ?x108875) (* (* 2.0 l_0_18_328) l_0_18_353)) (* (* 2.0 l_0_18_329) l_0_18_354))))
 (let ((?x108888 (- (- ?x108882 (* (* 2.0 l_0_18_330) l_0_18_355)) (* (* 2.0 l_0_18_364) l_0_18_389))))
 (let ((?x108894 (- (- ?x108888 (* (* 2.0 l_0_18_365) l_0_18_390)) (* (* 2.0 l_0_18_366) l_0_18_391))))
 (let ((?x108904 (- (- (+ (+ ?x108894 ?x108895) ?x108897) (* (* 2.0 l_0_18_400) l_0_18_425)) (* (* 2.0 l_0_18_401) l_0_18_426))))
 (= (- ?x108904 (* (* 2.0 l_0_18_402) l_0_18_427)) 0.0))))))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x108979 (* ?x108978 l_0_18_41)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x108976 (* ?x108975 l_0_18_40)))
 (let ((?x108972 (* 2.0 l_0_18_3)))
 (let ((?x108973 (* ?x108972 l_0_18_5)))
 (let ((?x108970 (* l_0_18_222 l_0_18_222)))
 (let ((?x108968 (* l_0_18_221 l_0_18_221)))
 (let ((?x108966 (* l_0_18_220 l_0_18_220)))
 (let ((?x108963 (* 2.0 l_0_18_2)))
 (let ((?x108964 (* ?x108963 l_0_18_4)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x108961 (* ?x108960 l_0_18_185)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x108958 (* ?x108957 l_0_18_184)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x108955 (* ?x108954 l_0_18_149)))
 (let ((?x108965 (- (+ (+ (- (* (* (- 2.0) l_0_18_146) l_0_18_148) ?x108955) ?x108958) ?x108961) ?x108964)))
 (= (+ (+ (- (- (- (- ?x108965 ?x108966) ?x108968) ?x108970) ?x108973) ?x108976) ?x108979) 0.0))))))))))))))))))))
(assert
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109020 (* ?x109019 l_0_18_67)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109017 (* ?x109016 l_0_18_66)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109014 (* ?x109013 l_0_18_65)))
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109011 (* ?x108978 l_0_18_44)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109009 (* ?x108975 l_0_18_43)))
 (let ((?x109006 (* 2.0 l_0_18_31)))
 (let ((?x109007 (* ?x109006 l_0_18_6)))
 (let ((?x109003 (* 2.0 l_0_18_30)))
 (let ((?x109004 (* ?x109003 l_0_18_5)))
 (let ((?x108972 (* 2.0 l_0_18_3)))
 (let ((?x109001 (* ?x108972 l_0_18_8)))
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x108685 (* ?x108684 l_0_18_319)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x108682 (* ?x108681 l_0_18_318)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x108679 (* ?x108678 l_0_18_317)))
 (let ((?x84973 (* 2.0 l_0_18_29)))
 (let ((?x87798 (* ?x84973 l_0_18_4)))
 (let ((?x108963 (* 2.0 l_0_18_2)))
 (let ((?x44685 (* ?x108963 l_0_18_7)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x87809 (* ?x108960 l_0_18_188)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x44655 (* ?x108957 l_0_18_187)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x87835 (* ?x108954 l_0_18_152)))
 (let ((?x44697 (- (+ (+ (- (* (* (- 2.0) l_0_18_146) l_0_18_151) ?x87835) ?x44655) ?x87809) ?x44685)))
 (let ((?x87844 (- (- ?x44697 (* (* 2.0 l_0_18_220) l_0_18_223)) (* (* 2.0 l_0_18_221) l_0_18_224))))
 (let ((?x65553 (+ (+ (+ (- ?x87844 (* (* 2.0 l_0_18_222) l_0_18_225)) ?x87798) ?x108679) ?x108682)))
 (let ((?x109015 (- (+ (+ (+ (+ (- (+ ?x65553 ?x108685) ?x109001) ?x109004) ?x109007) ?x109009) ?x109011) ?x109014)))
 (= (- (- ?x109015 ?x109017) ?x109020) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109107 (* ?x108978 l_0_18_48)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109105 (* ?x108975 l_0_18_47)))
 (let ((?x109102 (* 2.0 l_0_18_258)))
 (let ((?x109103 (* ?x109102 l_0_18_283)))
 (let ((?x109099 (* 2.0 l_0_18_257)))
 (let ((?x109100 (* ?x109099 l_0_18_282)))
 (let ((?x109096 (* 2.0 l_0_18_256)))
 (let ((?x109097 (* ?x109096 l_0_18_281)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x109088 (* ?x108960 l_0_18_192)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x109086 (* ?x108957 l_0_18_191)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x109084 (* ?x108954 l_0_18_156)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x109082 (* ?x109081 l_0_18_155)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x109079 (* ?x109078 l_0_18_3)))
 (let ((?x109087 (+ (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_2) ?x109079) ?x109082) ?x109084) ?x109086)))
 (let ((?x109093 (- (- (+ ?x109087 ?x109088) (* (* 2.0 l_0_18_220) l_0_18_227)) (* (* 2.0 l_0_18_221) l_0_18_228))))
 (let ((?x109104 (+ (+ (+ (- ?x109093 (* (* 2.0 l_0_18_222) l_0_18_229)) ?x109097) ?x109100) ?x109103)))
 (= (+ (+ ?x109104 ?x109105) ?x109107) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109195 (* ?x108978 l_0_18_53)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109193 (* ?x108975 l_0_18_52)))
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x108685 (* ?x108684 l_0_18_319)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x108682 (* ?x108681 l_0_18_318)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x108679 (* ?x108678 l_0_18_317)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109182 (* ?x109181 l_0_18_211)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109179 (* ?x109178 l_0_18_210)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109176 (* ?x109175 l_0_18_209)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x109173 (* ?x108960 l_0_18_197)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x109171 (* ?x108957 l_0_18_196)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x109169 (* ?x109168 l_0_18_3)))
 (let ((?x109165 (* 2.0 l_0_18_16)))
 (let ((?x109166 (* ?x109165 l_0_18_2)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109163 (* ?x109162 l_0_18_175)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109160 (* ?x109159 l_0_18_174)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109147 (* ?x109145 l_0_18_173)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x109141 (* ?x108954 l_0_18_161)))
 (let ((?x109164 (+ (+ (+ (- (* (* (- 2.0) l_0_18_146) l_0_18_160) ?x109141) ?x109147) ?x109160) ?x109163)))
 (let ((?x109183 (- (- (- (+ (+ (- (- ?x109164 ?x109166) ?x109169) ?x109171) ?x109173) ?x109176) ?x109179) ?x109182)))
 (let ((?x109187 (- (- ?x109183 (* (* 2.0 l_0_18_220) l_0_18_232)) (* (* 2.0 l_0_18_221) l_0_18_233))))
 (let ((?x109192 (- (- (- (- ?x109187 (* (* 2.0 l_0_18_222) l_0_18_234)) ?x108679) ?x108682) ?x108685)))
 (= (+ (+ ?x109192 ?x109193) ?x109195) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109292 (* ?x108978 l_0_18_59)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109290 (* ?x108975 l_0_18_58)))
 (let ((?x109102 (* 2.0 l_0_18_258)))
 (let ((?x109103 (* ?x109102 l_0_18_283)))
 (let ((?x109099 (* 2.0 l_0_18_257)))
 (let ((?x109100 (* ?x109099 l_0_18_282)))
 (let ((?x109096 (* 2.0 l_0_18_256)))
 (let ((?x109097 (* ?x109096 l_0_18_281)))
 (let ((?x109284 (* 2.0 l_0_18_23)))
 (let ((?x109285 (* ?x109284 l_0_18_3)))
 (let ((?x108963 (* 2.0 l_0_18_2)))
 (let ((?x109276 (* ?x108963 l_0_18_22)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x109274 (* ?x108960 l_0_18_203)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x109272 (* ?x108957 l_0_18_202)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x109270 (* ?x108954 l_0_18_167)))
 (let ((?x108955 (* ?x108954 l_0_18_149)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x109267 (* ?x109081 l_0_18_166)))
 (let ((?x109265 (* ?x109081 l_0_18_148)))
 (let ((?x109264 (+ (* (* 1.0 l_0_18_110) l_0_18_112) (* (* 1.0 l_0_18_111) l_0_18_113))))
 (let ((?x109277 (- (+ (+ (- (- (- (- ?x109264 ?x109265) ?x109267) ?x108955) ?x109270) ?x109272) ?x109274) ?x109276)))
 (let ((?x109281 (- (- ?x109277 (* (* 2.0 l_0_18_220) l_0_18_238)) (* (* 2.0 l_0_18_221) l_0_18_239))))
 (let ((?x109288 (- (- (- (- ?x109281 (* (* 2.0 l_0_18_222) l_0_18_240)) ?x109285) ?x109097) ?x109100)))
 (let ((?x109296 (- (+ (+ (- ?x109288 ?x109103) ?x109290) ?x109292) (* (* 1.0 l_0_18_74) l_0_18_76))))
 (= (- ?x109296 (* (* 1.0 l_0_18_75) l_0_18_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109342 (* ?x108978 l_0_18_66)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109340 (* ?x108975 l_0_18_65)))
 (let ((?x108972 (* 2.0 l_0_18_3)))
 (let ((?x109338 (* ?x108972 l_0_18_30)))
 (let ((?x108963 (* 2.0 l_0_18_2)))
 (let ((?x85056 (* ?x108963 l_0_18_29)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x65890 (* ?x108960 l_0_18_210)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x65585 (* ?x108957 l_0_18_209)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x65861 (* ?x108954 l_0_18_174)))
 (let ((?x65958 (- (+ (+ (- (* (* (- 2.0) l_0_18_146) l_0_18_173) ?x65861) ?x65585) ?x65890) ?x85056)))
 (let ((?x109335 (- (- ?x65958 (* (* 2.0 l_0_18_220) l_0_18_245)) (* (* 2.0 l_0_18_221) l_0_18_246))))
 (let ((?x109343 (+ (+ (- (- ?x109335 (* (* 2.0 l_0_18_222) l_0_18_247)) ?x109338) ?x109340) ?x109342)))
 (= ?x109343 0.0)))))))))))))))))))
(assert
 (let ((?x109398 (* l_0_18_6 l_0_18_6)))
 (let ((?x109396 (* l_0_18_5 l_0_18_5)))
 (let ((?x109394 (* l_0_18_42 l_0_18_42)))
 (let ((?x109392 (* l_0_18_41 l_0_18_41)))
 (let ((?x109390 (* l_0_18_40 l_0_18_40)))
 (let ((?x109388 (* l_0_18_4 l_0_18_4)))
 (let ((?x109386 (* l_0_18_186 l_0_18_186)))
 (let ((?x109384 (* l_0_18_185 l_0_18_185)))
 (let ((?x109382 (* l_0_18_184 l_0_18_184)))
 (let ((?x109380 (* l_0_18_150 l_0_18_150)))
 (let ((?x109381 (- (- (* (- l_0_18_148) l_0_18_148) (* l_0_18_149 l_0_18_149)) ?x109380)))
 (let ((?x109395 (+ (+ (+ (- (+ (+ (+ ?x109381 ?x109382) ?x109384) ?x109386) ?x109388) ?x109390) ?x109392) ?x109394)))
 (= (- (- ?x109395 ?x109396) ?x109398) 0.0))))))))))))))
(assert
 (let ((?x109448 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x109445 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109442 (* ?x109019 l_0_18_45)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109440 (* ?x109016 l_0_18_44)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109438 (* ?x109013 l_0_18_43)))
 (let ((?x109436 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109433 (* ?x109181 l_0_18_189)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109431 (* ?x109178 l_0_18_188)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109429 (* ?x109175 l_0_18_187)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109427 (* ?x109162 l_0_18_153)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109425 (* ?x109159 l_0_18_152)))
 (let ((?x109432 (+ (+ (- (- (* (* (- 2.0) l_0_18_148) l_0_18_151) ?x109425) ?x109427) ?x109429) ?x109431)))
 (let ((?x109449 (- (- (+ (+ (+ (- (+ ?x109432 ?x109433) ?x109436) ?x109438) ?x109440) ?x109442) ?x109445) ?x109448)))
 (= ?x109449 0.0)))))))))))))))))))))))
(assert
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109505 (* ?x109019 l_0_18_49)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109503 (* ?x109016 l_0_18_48)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109501 (* ?x109013 l_0_18_47)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109499 (* ?x109181 l_0_18_193)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109497 (* ?x109178 l_0_18_192)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109495 (* ?x109175 l_0_18_191)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109493 (* ?x109162 l_0_18_157)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109491 (* ?x109159 l_0_18_156)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109489 (* ?x109145 l_0_18_155)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x109487 (* ?x109486 l_0_18_6)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x109484 (* ?x109078 l_0_18_5)))
 (let ((?x109492 (- (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_4) ?x109484) ?x109487) ?x109489) ?x109491)))
 (let ((?x109506 (+ (+ (+ (+ (+ (+ (- ?x109492 ?x109493) ?x109495) ?x109497) ?x109499) ?x109501) ?x109503) ?x109505)))
 (= ?x109506 0.0))))))))))))))))))))))))))
(assert
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109562 (* ?x109019 l_0_18_54)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109560 (* ?x109016 l_0_18_53)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109558 (* ?x109013 l_0_18_52)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109556 (* ?x109181 l_0_18_198)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109554 (* ?x109178 l_0_18_197)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109552 (* ?x109175 l_0_18_196)))
 (let ((?x109549 (* 2.0 l_0_18_18)))
 (let ((?x109550 (* ?x109549 l_0_18_6)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x109547 (* ?x109168 l_0_18_5)))
 (let ((?x109165 (* 2.0 l_0_18_16)))
 (let ((?x109536 (* ?x109165 l_0_18_4)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109532 (* ?x109162 l_0_18_162)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109528 (* ?x109159 l_0_18_161)))
 (let ((?x109548 (- (- (- (- (* (* (- 2.0) l_0_18_148) l_0_18_160) ?x109528) ?x109532) ?x109536) ?x109547)))
 (let ((?x109563 (+ (+ (+ (+ (+ (+ (- ?x109548 ?x109550) ?x109552) ?x109554) ?x109556) ?x109558) ?x109560) ?x109562)))
 (= ?x109563 0.0))))))))))))))))))))))))))
(assert
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109635 (* ?x109019 l_0_18_60)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109633 (* ?x109016 l_0_18_59)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109631 (* ?x109013 l_0_18_58)))
 (let ((?x109628 (* 2.0 l_0_18_24)))
 (let ((?x109629 (* ?x109628 l_0_18_6)))
 (let ((?x109284 (* 2.0 l_0_18_23)))
 (let ((?x109626 (* ?x109284 l_0_18_5)))
 (let ((?x109623 (* 2.0 l_0_18_22)))
 (let ((?x109624 (* ?x109623 l_0_18_4)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109621 (* ?x109181 l_0_18_204)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109619 (* ?x109178 l_0_18_203)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109617 (* ?x109175 l_0_18_202)))
 (let ((?x109380 (* l_0_18_150 l_0_18_150)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109614 (* ?x109162 l_0_18_168)))
 (let ((?x109378 (* l_0_18_149 l_0_18_149)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109611 (* ?x109159 l_0_18_167)))
 (let ((?x109402 (* l_0_18_148 l_0_18_148)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109608 (* ?x109145 l_0_18_166)))
 (let ((?x109594 (+ (* (/ 1.0 2.0) (* l_0_18_112 l_0_18_112)) (* (/ 1.0 2.0) (* l_0_18_113 l_0_18_113)))))
 (let ((?x109612 (- (- (- (+ ?x109594 (* (/ 1.0 2.0) (* l_0_18_114 l_0_18_114))) ?x109608) ?x109402) ?x109611)))
 (let ((?x109625 (- (+ (+ (+ (- (- (- ?x109612 ?x109378) ?x109614) ?x109380) ?x109617) ?x109619) ?x109621) ?x109624)))
 (let ((?x109639 (- (+ (+ (+ (- (- ?x109625 ?x109626) ?x109629) ?x109631) ?x109633) ?x109635) (* (* (/ 1.0 2.0) l_0_18_76) l_0_18_76))))
 (let ((?x109645 (- (- ?x109639 (* (* (/ 1.0 2.0) l_0_18_77) l_0_18_77)) (* (* (/ 1.0 2.0) l_0_18_78) l_0_18_78))))
 (= ?x109645 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109020 (* ?x109019 l_0_18_67)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109017 (* ?x109016 l_0_18_66)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109014 (* ?x109013 l_0_18_65)))
 (let ((?x109006 (* 2.0 l_0_18_31)))
 (let ((?x109007 (* ?x109006 l_0_18_6)))
 (let ((?x109003 (* 2.0 l_0_18_30)))
 (let ((?x109004 (* ?x109003 l_0_18_5)))
 (let ((?x84973 (* 2.0 l_0_18_29)))
 (let ((?x87798 (* ?x84973 l_0_18_4)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109182 (* ?x109181 l_0_18_211)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109179 (* ?x109178 l_0_18_210)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109176 (* ?x109175 l_0_18_209)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109163 (* ?x109162 l_0_18_175)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109160 (* ?x109159 l_0_18_174)))
 (let ((?x109674 (+ (+ (- (- (* (* (- 2.0) l_0_18_148) l_0_18_173) ?x109160) ?x109163) ?x109176) ?x109179)))
 (let ((?x109681 (+ (+ (+ (- (- (- (+ ?x109674 ?x109182) ?x87798) ?x109004) ?x109007) ?x109014) ?x109017) ?x109020)))
 (= ?x109681 0.0))))))))))))))))))))))))))
(assert
 (let ((?x109710 (* l_0_18_9 l_0_18_9)))
 (let ((?x109708 (* l_0_18_8 l_0_18_8)))
 (let ((?x109706 (* l_0_18_7 l_0_18_7)))
 (let ((?x109704 (* l_0_18_46 l_0_18_46)))
 (let ((?x109702 (* l_0_18_45 l_0_18_45)))
 (let ((?x109700 (* l_0_18_44 l_0_18_44)))
 (let ((?x109698 (* l_0_18_43 l_0_18_43)))
 (let ((?x109696 (* l_0_18_190 l_0_18_190)))
 (let ((?x109694 (* l_0_18_189 l_0_18_189)))
 (let ((?x109692 (* l_0_18_188 l_0_18_188)))
 (let ((?x109690 (* l_0_18_187 l_0_18_187)))
 (let ((?x109688 (* l_0_18_154 l_0_18_154)))
 (let ((?x109686 (* l_0_18_153 l_0_18_153)))
 (let ((?x88205 (* l_0_18_152 l_0_18_152)))
 (let ((?x109685 (- (- (* (- l_0_18_10) l_0_18_10) (* l_0_18_151 l_0_18_151)) ?x88205)))
 (let ((?x109699 (+ (+ (+ (+ (+ (- (- ?x109685 ?x109686) ?x109688) ?x109690) ?x109692) ?x109694) ?x109696) ?x109698)))
 (= (- (- (- (+ (+ (+ ?x109699 ?x109700) ?x109702) ?x109704) ?x109706) ?x109708) ?x109710) 0.0))))))))))))))))))
(assert
 (let ((?x109781 (* 2.0 l_0_18_46)))
 (let ((?x109782 (* ?x109781 l_0_18_50)))
 (let ((?x109778 (* 2.0 l_0_18_45)))
 (let ((?x109779 (* ?x109778 l_0_18_49)))
 (let ((?x109775 (* 2.0 l_0_18_44)))
 (let ((?x109776 (* ?x109775 l_0_18_48)))
 (let ((?x109772 (* 2.0 l_0_18_43)))
 (let ((?x109773 (* ?x109772 l_0_18_47)))
 (let ((?x109769 (* 2.0 l_0_18_190)))
 (let ((?x109770 (* ?x109769 l_0_18_194)))
 (let ((?x109766 (* 2.0 l_0_18_189)))
 (let ((?x109767 (* ?x109766 l_0_18_193)))
 (let ((?x109763 (* 2.0 l_0_18_188)))
 (let ((?x109764 (* ?x109763 l_0_18_192)))
 (let ((?x109760 (* 2.0 l_0_18_187)))
 (let ((?x109761 (* ?x109760 l_0_18_191)))
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109758 (* ?x109757 l_0_18_158)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109755 (* ?x109754 l_0_18_157)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109752 (* ?x109751 l_0_18_156)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x109749 (* ?x109748 l_0_18_155)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x109746 (* ?x109486 l_0_18_9)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x109744 (* ?x109078 l_0_18_8)))
 (let ((?x109741 (* 2.0 l_0_18_11)))
 (let ((?x109742 (* ?x109741 l_0_18_7)))
 (let ((?x109750 (- (- (- (- (* (* (- 2.0) l_0_18_10) l_0_18_14) ?x109742) ?x109744) ?x109746) ?x109749)))
 (let ((?x109771 (+ (+ (+ (+ (- (- (- ?x109750 ?x109752) ?x109755) ?x109758) ?x109761) ?x109764) ?x109767) ?x109770)))
 (= (+ (+ (+ (+ ?x109771 ?x109773) ?x109776) ?x109779) ?x109782) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x109781 (* 2.0 l_0_18_46)))
 (let ((?x109856 (* ?x109781 l_0_18_55)))
 (let ((?x109778 (* 2.0 l_0_18_45)))
 (let ((?x109854 (* ?x109778 l_0_18_54)))
 (let ((?x109775 (* 2.0 l_0_18_44)))
 (let ((?x109852 (* ?x109775 l_0_18_53)))
 (let ((?x109772 (* 2.0 l_0_18_43)))
 (let ((?x109850 (* ?x109772 l_0_18_52)))
 (let ((?x109769 (* 2.0 l_0_18_190)))
 (let ((?x109848 (* ?x109769 l_0_18_199)))
 (let ((?x109766 (* 2.0 l_0_18_189)))
 (let ((?x109846 (* ?x109766 l_0_18_198)))
 (let ((?x109763 (* 2.0 l_0_18_188)))
 (let ((?x109844 (* ?x109763 l_0_18_197)))
 (let ((?x109760 (* 2.0 l_0_18_187)))
 (let ((?x109842 (* ?x109760 l_0_18_196)))
 (let ((?x109549 (* 2.0 l_0_18_18)))
 (let ((?x109840 (* ?x109549 l_0_18_9)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x109838 (* ?x109168 l_0_18_8)))
 (let ((?x109165 (* 2.0 l_0_18_16)))
 (let ((?x109836 (* ?x109165 l_0_18_7)))
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109823 (* ?x109757 l_0_18_163)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109819 (* ?x109754 l_0_18_162)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109815 (* ?x109751 l_0_18_161)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x7589 (* ?x109748 l_0_18_160)))
 (let ((?x109824 (- (- (- (- (* (* (- 2.0) l_0_18_10) l_0_18_19) ?x7589) ?x109815) ?x109819) ?x109823)))
 (let ((?x109849 (+ (+ (+ (+ (- (- (- ?x109824 ?x109836) ?x109838) ?x109840) ?x109842) ?x109844) ?x109846) ?x109848)))
 (= (+ (+ (+ (+ ?x109849 ?x109850) ?x109852) ?x109854) ?x109856) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x109781 (* 2.0 l_0_18_46)))
 (let ((?x109936 (* ?x109781 l_0_18_61)))
 (let ((?x109778 (* 2.0 l_0_18_45)))
 (let ((?x109934 (* ?x109778 l_0_18_60)))
 (let ((?x109775 (* 2.0 l_0_18_44)))
 (let ((?x109932 (* ?x109775 l_0_18_59)))
 (let ((?x109772 (* 2.0 l_0_18_43)))
 (let ((?x109930 (* ?x109772 l_0_18_58)))
 (let ((?x109628 (* 2.0 l_0_18_24)))
 (let ((?x109928 (* ?x109628 l_0_18_9)))
 (let ((?x109284 (* 2.0 l_0_18_23)))
 (let ((?x109926 (* ?x109284 l_0_18_8)))
 (let ((?x109623 (* 2.0 l_0_18_22)))
 (let ((?x109924 (* ?x109623 l_0_18_7)))
 (let ((?x109769 (* 2.0 l_0_18_190)))
 (let ((?x109922 (* ?x109769 l_0_18_205)))
 (let ((?x109766 (* 2.0 l_0_18_189)))
 (let ((?x109920 (* ?x109766 l_0_18_204)))
 (let ((?x109763 (* 2.0 l_0_18_188)))
 (let ((?x109918 (* ?x109763 l_0_18_203)))
 (let ((?x109760 (* 2.0 l_0_18_187)))
 (let ((?x109916 (* ?x109760 l_0_18_202)))
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109914 (* ?x109757 l_0_18_169)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109912 (* ?x109754 l_0_18_168)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109910 (* ?x109751 l_0_18_167)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x109908 (* ?x109748 l_0_18_166)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109427 (* ?x109162 l_0_18_153)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109425 (* ?x109159 l_0_18_152)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109904 (* ?x109145 l_0_18_151)))
 (let ((?x109897 (+ (* (* (- 2.0) l_0_18_10) l_0_18_25) (* (* 1.0 l_0_18_112) l_0_18_115))))
 (let ((?x109903 (+ (+ ?x109897 (* (* 1.0 l_0_18_113) l_0_18_116)) (* (* 1.0 l_0_18_114) l_0_18_117))))
 (let ((?x109915 (- (- (- (- (- (- (- ?x109903 ?x109904) ?x109425) ?x109427) ?x109908) ?x109910) ?x109912) ?x109914)))
 (let ((?x109929 (- (- (- (+ (+ (+ (+ ?x109915 ?x109916) ?x109918) ?x109920) ?x109922) ?x109924) ?x109926) ?x109928)))
 (let ((?x109940 (- (+ (+ (+ (+ ?x109929 ?x109930) ?x109932) ?x109934) ?x109936) (* (* 1.0 l_0_18_76) l_0_18_79))))
 (let ((?x109946 (- (- ?x109940 (* (* 1.0 l_0_18_77) l_0_18_80)) (* (* 1.0 l_0_18_78) l_0_18_81))))
 (= ?x109946 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x109781 (* 2.0 l_0_18_46)))
 (let ((?x110018 (* ?x109781 l_0_18_68)))
 (let ((?x109778 (* 2.0 l_0_18_45)))
 (let ((?x110016 (* ?x109778 l_0_18_67)))
 (let ((?x109775 (* 2.0 l_0_18_44)))
 (let ((?x110014 (* ?x109775 l_0_18_66)))
 (let ((?x109772 (* 2.0 l_0_18_43)))
 (let ((?x110012 (* ?x109772 l_0_18_65)))
 (let ((?x109006 (* 2.0 l_0_18_31)))
 (let ((?x110010 (* ?x109006 l_0_18_9)))
 (let ((?x109003 (* 2.0 l_0_18_30)))
 (let ((?x110008 (* ?x109003 l_0_18_8)))
 (let ((?x84973 (* 2.0 l_0_18_29)))
 (let ((?x110006 (* ?x84973 l_0_18_7)))
 (let ((?x109769 (* 2.0 l_0_18_190)))
 (let ((?x110004 (* ?x109769 l_0_18_212)))
 (let ((?x109766 (* 2.0 l_0_18_189)))
 (let ((?x110002 (* ?x109766 l_0_18_211)))
 (let ((?x109763 (* 2.0 l_0_18_188)))
 (let ((?x110000 (* ?x109763 l_0_18_210)))
 (let ((?x109760 (* 2.0 l_0_18_187)))
 (let ((?x109998 (* ?x109760 l_0_18_209)))
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109996 (* ?x109757 l_0_18_176)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109994 (* ?x109754 l_0_18_175)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109992 (* ?x109751 l_0_18_174)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x109990 (* ?x109748 l_0_18_173)))
 (let ((?x109997 (- (- (- (- (* (* (- 2.0) l_0_18_10) l_0_18_32) ?x109990) ?x109992) ?x109994) ?x109996)))
 (let ((?x110011 (- (- (- (+ (+ (+ (+ ?x109997 ?x109998) ?x110000) ?x110002) ?x110004) ?x110006) ?x110008) ?x110010)))
 (= (+ (+ (+ (+ ?x110011 ?x110012) ?x110014) ?x110016) ?x110018) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110098 (* l_0_18_51 l_0_18_51)))
 (let ((?x110096 (* l_0_18_50 l_0_18_50)))
 (let ((?x110094 (* l_0_18_49 l_0_18_49)))
 (let ((?x110092 (* l_0_18_48 l_0_18_48)))
 (let ((?x110090 (* l_0_18_47 l_0_18_47)))
 (let ((?x110088 (* l_0_18_195 l_0_18_195)))
 (let ((?x110086 (* l_0_18_194 l_0_18_194)))
 (let ((?x110084 (* l_0_18_193 l_0_18_193)))
 (let ((?x110082 (* l_0_18_192 l_0_18_192)))
 (let ((?x110080 (* l_0_18_191 l_0_18_191)))
 (let ((?x110078 (* l_0_18_159 l_0_18_159)))
 (let ((?x110076 (* l_0_18_158 l_0_18_158)))
 (let ((?x110074 (* l_0_18_157 l_0_18_157)))
 (let ((?x110072 (* l_0_18_156 l_0_18_156)))
 (let ((?x110070 (* l_0_18_155 l_0_18_155)))
 (let ((?x110068 (* l_0_18_15 l_0_18_15)))
 (let ((?x110066 (* l_0_18_14 l_0_18_14)))
 (let ((?x110064 (* l_0_18_13 l_0_18_13)))
 (let ((?x110065 (- (- (* (- l_0_18_11) l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x110064)))
 (let ((?x110079 (- (- (- (- (- (- (- ?x110065 ?x110066) ?x110068) ?x110070) ?x110072) ?x110074) ?x110076) ?x110078)))
 (let ((?x110093 (+ (+ (+ (+ (+ (+ (+ ?x110079 ?x110080) ?x110082) ?x110084) ?x110086) ?x110088) ?x110090) ?x110092)))
 (= (+ (+ (+ ?x110093 ?x110094) ?x110096) ?x110098) 0.0)))))))))))))))))))))))
(assert
 (let ((?x110186 (* 2.0 l_0_18_51)))
 (let ((?x110187 (* ?x110186 l_0_18_56)))
 (let ((?x110183 (* 2.0 l_0_18_50)))
 (let ((?x110184 (* ?x110183 l_0_18_55)))
 (let ((?x110180 (* 2.0 l_0_18_49)))
 (let ((?x110181 (* ?x110180 l_0_18_54)))
 (let ((?x110177 (* 2.0 l_0_18_48)))
 (let ((?x110178 (* ?x110177 l_0_18_53)))
 (let ((?x110174 (* 2.0 l_0_18_47)))
 (let ((?x110175 (* ?x110174 l_0_18_52)))
 (let ((?x110171 (* 2.0 l_0_18_195)))
 (let ((?x110172 (* ?x110171 l_0_18_200)))
 (let ((?x110168 (* 2.0 l_0_18_194)))
 (let ((?x110169 (* ?x110168 l_0_18_199)))
 (let ((?x110165 (* 2.0 l_0_18_193)))
 (let ((?x110166 (* ?x110165 l_0_18_198)))
 (let ((?x110162 (* 2.0 l_0_18_192)))
 (let ((?x110163 (* ?x110162 l_0_18_197)))
 (let ((?x110159 (* 2.0 l_0_18_191)))
 (let ((?x110160 (* ?x110159 l_0_18_196)))
 (let ((?x110156 (* 2.0 l_0_18_159)))
 (let ((?x110157 (* ?x110156 l_0_18_164)))
 (let ((?x110153 (* 2.0 l_0_18_158)))
 (let ((?x110154 (* ?x110153 l_0_18_163)))
 (let ((?x110150 (* 2.0 l_0_18_157)))
 (let ((?x110151 (* ?x110150 l_0_18_162)))
 (let ((?x110147 (* 2.0 l_0_18_156)))
 (let ((?x110148 (* ?x110147 l_0_18_161)))
 (let ((?x110144 (* 2.0 l_0_18_155)))
 (let ((?x110145 (* ?x110144 l_0_18_160)))
 (let ((?x110141 (* 2.0 l_0_18_15)))
 (let ((?x110142 (* ?x110141 l_0_18_20)))
 (let ((?x110138 (* 2.0 l_0_18_14)))
 (let ((?x110139 (* ?x110138 l_0_18_19)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x110136 (* ?x109486 l_0_18_18)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x110134 (* ?x109078 l_0_18_17)))
 (let ((?x110143 (- (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_16) ?x110134) ?x110136) ?x110139) ?x110142)))
 (let ((?x110164 (+ (+ (- (- (- (- (- ?x110143 ?x110145) ?x110148) ?x110151) ?x110154) ?x110157) ?x110160) ?x110163)))
 (let ((?x110185 (+ (+ (+ (+ (+ (+ (+ ?x110164 ?x110166) ?x110169) ?x110172) ?x110175) ?x110178) ?x110181) ?x110184)))
 (= (+ ?x110185 ?x110187) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110186 (* 2.0 l_0_18_51)))
 (let ((?x110284 (* ?x110186 l_0_18_62)))
 (let ((?x110183 (* 2.0 l_0_18_50)))
 (let ((?x110282 (* ?x110183 l_0_18_61)))
 (let ((?x110180 (* 2.0 l_0_18_49)))
 (let ((?x110280 (* ?x110180 l_0_18_60)))
 (let ((?x110177 (* 2.0 l_0_18_48)))
 (let ((?x110278 (* ?x110177 l_0_18_59)))
 (let ((?x110174 (* 2.0 l_0_18_47)))
 (let ((?x110276 (* ?x110174 l_0_18_58)))
 (let ((?x110171 (* 2.0 l_0_18_195)))
 (let ((?x110274 (* ?x110171 l_0_18_206)))
 (let ((?x110168 (* 2.0 l_0_18_194)))
 (let ((?x110272 (* ?x110168 l_0_18_205)))
 (let ((?x110165 (* 2.0 l_0_18_193)))
 (let ((?x110270 (* ?x110165 l_0_18_204)))
 (let ((?x110162 (* 2.0 l_0_18_192)))
 (let ((?x110268 (* ?x110162 l_0_18_203)))
 (let ((?x110159 (* 2.0 l_0_18_191)))
 (let ((?x110266 (* ?x110159 l_0_18_202)))
 (let ((?x110156 (* 2.0 l_0_18_159)))
 (let ((?x110264 (* ?x110156 l_0_18_170)))
 (let ((?x110153 (* 2.0 l_0_18_158)))
 (let ((?x110262 (* ?x110153 l_0_18_169)))
 (let ((?x110150 (* 2.0 l_0_18_157)))
 (let ((?x110260 (* ?x110150 l_0_18_168)))
 (let ((?x110147 (* 2.0 l_0_18_156)))
 (let ((?x110258 (* ?x110147 l_0_18_167)))
 (let ((?x110144 (* 2.0 l_0_18_155)))
 (let ((?x110256 (* ?x110144 l_0_18_166)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109493 (* ?x109162 l_0_18_157)))
 (let ((?x110141 (* 2.0 l_0_18_15)))
 (let ((?x110253 (* ?x110141 l_0_18_26)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109491 (* ?x109159 l_0_18_156)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109489 (* ?x109145 l_0_18_155)))
 (let ((?x110138 (* 2.0 l_0_18_14)))
 (let ((?x110249 (* ?x110138 l_0_18_25)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x110234 (* ?x109486 l_0_18_24)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x110230 (* ?x109078 l_0_18_23)))
 (let ((?x110220 (+ (* (* (- 2.0) l_0_18_11) l_0_18_22) (* (* 1.0 l_0_18_112) l_0_18_119))))
 (let ((?x110228 (+ (+ ?x110220 (* (* 1.0 l_0_18_113) l_0_18_120)) (* (* 1.0 l_0_18_114) l_0_18_121))))
 (let ((?x110255 (- (- (- (- (- (- (- ?x110228 ?x110230) ?x110234) ?x110249) ?x109489) ?x109491) ?x110253) ?x109493)))
 (let ((?x110269 (+ (+ (- (- (- (- (- ?x110255 ?x110256) ?x110258) ?x110260) ?x110262) ?x110264) ?x110266) ?x110268)))
 (let ((?x110283 (+ (+ (+ (+ (+ (+ (+ ?x110269 ?x110270) ?x110272) ?x110274) ?x110276) ?x110278) ?x110280) ?x110282)))
 (let ((?x110289 (- (- (+ ?x110283 ?x110284) (* (* 1.0 l_0_18_76) l_0_18_83)) (* (* 1.0 l_0_18_77) l_0_18_84))))
 (= (- ?x110289 (* (* 1.0 l_0_18_78) l_0_18_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110186 (* 2.0 l_0_18_51)))
 (let ((?x110398 (* ?x110186 l_0_18_69)))
 (let ((?x110183 (* 2.0 l_0_18_50)))
 (let ((?x110396 (* ?x110183 l_0_18_68)))
 (let ((?x110180 (* 2.0 l_0_18_49)))
 (let ((?x110394 (* ?x110180 l_0_18_67)))
 (let ((?x110177 (* 2.0 l_0_18_48)))
 (let ((?x110392 (* ?x110177 l_0_18_66)))
 (let ((?x110174 (* 2.0 l_0_18_47)))
 (let ((?x110390 (* ?x110174 l_0_18_65)))
 (let ((?x110171 (* 2.0 l_0_18_195)))
 (let ((?x110388 (* ?x110171 l_0_18_213)))
 (let ((?x110168 (* 2.0 l_0_18_194)))
 (let ((?x110386 (* ?x110168 l_0_18_212)))
 (let ((?x110165 (* 2.0 l_0_18_193)))
 (let ((?x110384 (* ?x110165 l_0_18_211)))
 (let ((?x110162 (* 2.0 l_0_18_192)))
 (let ((?x110382 (* ?x110162 l_0_18_210)))
 (let ((?x110159 (* 2.0 l_0_18_191)))
 (let ((?x110380 (* ?x110159 l_0_18_209)))
 (let ((?x110156 (* 2.0 l_0_18_159)))
 (let ((?x110378 (* ?x110156 l_0_18_177)))
 (let ((?x110153 (* 2.0 l_0_18_158)))
 (let ((?x110376 (* ?x110153 l_0_18_176)))
 (let ((?x110150 (* 2.0 l_0_18_157)))
 (let ((?x110374 (* ?x110150 l_0_18_175)))
 (let ((?x110147 (* 2.0 l_0_18_156)))
 (let ((?x110372 (* ?x110147 l_0_18_174)))
 (let ((?x110144 (* 2.0 l_0_18_155)))
 (let ((?x110370 (* ?x110144 l_0_18_173)))
 (let ((?x110141 (* 2.0 l_0_18_15)))
 (let ((?x110368 (* ?x110141 l_0_18_33)))
 (let ((?x110138 (* 2.0 l_0_18_14)))
 (let ((?x110366 (* ?x110138 l_0_18_32)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x110364 (* ?x109486 l_0_18_31)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x110362 (* ?x109078 l_0_18_30)))
 (let ((?x110369 (- (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_29) ?x110362) ?x110364) ?x110366) ?x110368)))
 (let ((?x110383 (+ (+ (- (- (- (- (- ?x110369 ?x110370) ?x110372) ?x110374) ?x110376) ?x110378) ?x110380) ?x110382)))
 (let ((?x110397 (+ (+ (+ (+ (+ (+ (+ ?x110383 ?x110384) ?x110386) ?x110388) ?x110390) ?x110392) ?x110394) ?x110396)))
 (= (+ ?x110397 ?x110398) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110508 (* l_0_18_57 l_0_18_57)))
 (let ((?x110506 (* l_0_18_56 l_0_18_56)))
 (let ((?x110504 (* l_0_18_55 l_0_18_55)))
 (let ((?x110502 (* l_0_18_54 l_0_18_54)))
 (let ((?x110500 (* l_0_18_53 l_0_18_53)))
 (let ((?x110498 (* l_0_18_52 l_0_18_52)))
 (let ((?x110496 (* l_0_18_21 l_0_18_21)))
 (let ((?x110494 (* l_0_18_201 l_0_18_201)))
 (let ((?x110492 (* l_0_18_200 l_0_18_200)))
 (let ((?x110490 (* l_0_18_20 l_0_18_20)))
 (let ((?x110488 (* l_0_18_199 l_0_18_199)))
 (let ((?x110486 (* l_0_18_198 l_0_18_198)))
 (let ((?x110484 (* l_0_18_197 l_0_18_197)))
 (let ((?x110482 (* l_0_18_196 l_0_18_196)))
 (let ((?x110480 (* l_0_18_19 l_0_18_19)))
 (let ((?x110478 (* l_0_18_18 l_0_18_18)))
 (let ((?x110476 (* l_0_18_17 l_0_18_17)))
 (let ((?x110474 (* l_0_18_165 l_0_18_165)))
 (let ((?x110459 (* l_0_18_164 l_0_18_164)))
 (let ((?x110456 (* l_0_18_163 l_0_18_163)))
 (let ((?x110452 (* l_0_18_162 l_0_18_162)))
 (let ((?x110448 (* l_0_18_161 l_0_18_161)))
 (let ((?x110450 (- (- (* (- l_0_18_16) l_0_18_16) (* l_0_18_160 l_0_18_160)) ?x110448)))
 (let ((?x110481 (- (- (- (- (- (- (- ?x110450 ?x110452) ?x110456) ?x110459) ?x110474) ?x110476) ?x110478) ?x110480)))
 (let ((?x110495 (+ (+ (- (+ (+ (+ (+ ?x110481 ?x110482) ?x110484) ?x110486) ?x110488) ?x110490) ?x110492) ?x110494)))
 (let ((?x110509 (+ (+ (+ (+ (+ (+ (- ?x110495 ?x110496) ?x110498) ?x110500) ?x110502) ?x110504) ?x110506) ?x110508)))
 (= ?x110509 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x110632 (* 2.0 l_0_18_57)))
 (let ((?x110633 (* ?x110632 l_0_18_63)))
 (let ((?x110629 (* 2.0 l_0_18_56)))
 (let ((?x110630 (* ?x110629 l_0_18_62)))
 (let ((?x110626 (* 2.0 l_0_18_55)))
 (let ((?x110627 (* ?x110626 l_0_18_61)))
 (let ((?x110623 (* 2.0 l_0_18_54)))
 (let ((?x110624 (* ?x110623 l_0_18_60)))
 (let ((?x110620 (* 2.0 l_0_18_53)))
 (let ((?x110621 (* ?x110620 l_0_18_59)))
 (let ((?x110617 (* 2.0 l_0_18_52)))
 (let ((?x110618 (* ?x110617 l_0_18_58)))
 (let ((?x110614 (* 2.0 l_0_18_21)))
 (let ((?x110615 (* ?x110614 l_0_18_27)))
 (let ((?x110611 (* 2.0 l_0_18_201)))
 (let ((?x110612 (* ?x110611 l_0_18_207)))
 (let ((?x110608 (* 2.0 l_0_18_200)))
 (let ((?x110609 (* ?x110608 l_0_18_206)))
 (let ((?x110605 (* 2.0 l_0_18_20)))
 (let ((?x110606 (* ?x110605 l_0_18_26)))
 (let ((?x110602 (* 2.0 l_0_18_199)))
 (let ((?x110603 (* ?x110602 l_0_18_205)))
 (let ((?x110599 (* 2.0 l_0_18_198)))
 (let ((?x110600 (* ?x110599 l_0_18_204)))
 (let ((?x110596 (* 2.0 l_0_18_197)))
 (let ((?x110597 (* ?x110596 l_0_18_203)))
 (let ((?x110593 (* 2.0 l_0_18_196)))
 (let ((?x110594 (* ?x110593 l_0_18_202)))
 (let ((?x110590 (* 2.0 l_0_18_19)))
 (let ((?x110591 (* ?x110590 l_0_18_25)))
 (let ((?x109549 (* 2.0 l_0_18_18)))
 (let ((?x110588 (* ?x109549 l_0_18_24)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x110586 (* ?x109168 l_0_18_23)))
 (let ((?x110583 (* 2.0 l_0_18_165)))
 (let ((?x110584 (* ?x110583 l_0_18_171)))
 (let ((?x110580 (* 2.0 l_0_18_164)))
 (let ((?x110581 (* ?x110580 l_0_18_170)))
 (let ((?x110577 (* 2.0 l_0_18_163)))
 (let ((?x110578 (* ?x110577 l_0_18_169)))
 (let ((?x110574 (* 2.0 l_0_18_162)))
 (let ((?x110575 (* ?x110574 l_0_18_168)))
 (let ((?x110571 (* 2.0 l_0_18_161)))
 (let ((?x110572 (* ?x110571 l_0_18_167)))
 (let ((?x110568 (* 2.0 l_0_18_160)))
 (let ((?x110569 (* ?x110568 l_0_18_166)))
 (let ((?x109165 (* 2.0 l_0_18_16)))
 (let ((?x110566 (* ?x109165 l_0_18_22)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109532 (* ?x109162 l_0_18_162)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109528 (* ?x109159 l_0_18_161)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x110562 (* ?x109145 l_0_18_160)))
 (let ((?x110559 (+ (* (* 1.0 l_0_18_112) l_0_18_124) (* (* 1.0 l_0_18_113) l_0_18_125))))
 (let ((?x110565 (- (- (- (+ ?x110559 (* (* 1.0 l_0_18_114) l_0_18_126)) ?x110562) ?x109528) ?x109532)))
 (let ((?x110585 (- (- (- (- (- (- (- ?x110565 ?x110566) ?x110569) ?x110572) ?x110575) ?x110578) ?x110581) ?x110584)))
 (let ((?x110604 (+ (+ (+ (+ (- (- (- ?x110585 ?x110586) ?x110588) ?x110591) ?x110594) ?x110597) ?x110600) ?x110603)))
 (let ((?x110625 (+ (+ (+ (- (+ (+ (- ?x110604 ?x110606) ?x110609) ?x110612) ?x110615) ?x110618) ?x110621) ?x110624)))
 (let ((?x110636 (- (+ (+ (+ ?x110625 ?x110627) ?x110630) ?x110633) (* (* 1.0 l_0_18_76) l_0_18_88))))
 (let ((?x110640 (- (- ?x110636 (* (* 1.0 l_0_18_77) l_0_18_89)) (* (* 1.0 l_0_18_78) l_0_18_90))))
 (= ?x110640 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110632 (* 2.0 l_0_18_57)))
 (let ((?x110762 (* ?x110632 l_0_18_70)))
 (let ((?x110629 (* 2.0 l_0_18_56)))
 (let ((?x110760 (* ?x110629 l_0_18_69)))
 (let ((?x110626 (* 2.0 l_0_18_55)))
 (let ((?x110758 (* ?x110626 l_0_18_68)))
 (let ((?x110623 (* 2.0 l_0_18_54)))
 (let ((?x110756 (* ?x110623 l_0_18_67)))
 (let ((?x110620 (* 2.0 l_0_18_53)))
 (let ((?x110754 (* ?x110620 l_0_18_66)))
 (let ((?x110617 (* 2.0 l_0_18_52)))
 (let ((?x110752 (* ?x110617 l_0_18_65)))
 (let ((?x110614 (* 2.0 l_0_18_21)))
 (let ((?x110750 (* ?x110614 l_0_18_34)))
 (let ((?x110611 (* 2.0 l_0_18_201)))
 (let ((?x110748 (* ?x110611 l_0_18_214)))
 (let ((?x110608 (* 2.0 l_0_18_200)))
 (let ((?x110746 (* ?x110608 l_0_18_213)))
 (let ((?x110605 (* 2.0 l_0_18_20)))
 (let ((?x110744 (* ?x110605 l_0_18_33)))
 (let ((?x110602 (* 2.0 l_0_18_199)))
 (let ((?x110742 (* ?x110602 l_0_18_212)))
 (let ((?x110599 (* 2.0 l_0_18_198)))
 (let ((?x110740 (* ?x110599 l_0_18_211)))
 (let ((?x110596 (* 2.0 l_0_18_197)))
 (let ((?x110738 (* ?x110596 l_0_18_210)))
 (let ((?x110593 (* 2.0 l_0_18_196)))
 (let ((?x110736 (* ?x110593 l_0_18_209)))
 (let ((?x110590 (* 2.0 l_0_18_19)))
 (let ((?x110734 (* ?x110590 l_0_18_32)))
 (let ((?x109549 (* 2.0 l_0_18_18)))
 (let ((?x110732 (* ?x109549 l_0_18_31)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x110730 (* ?x109168 l_0_18_30)))
 (let ((?x110583 (* 2.0 l_0_18_165)))
 (let ((?x110728 (* ?x110583 l_0_18_178)))
 (let ((?x110580 (* 2.0 l_0_18_164)))
 (let ((?x110726 (* ?x110580 l_0_18_177)))
 (let ((?x110577 (* 2.0 l_0_18_163)))
 (let ((?x110724 (* ?x110577 l_0_18_176)))
 (let ((?x110574 (* 2.0 l_0_18_162)))
 (let ((?x110722 (* ?x110574 l_0_18_175)))
 (let ((?x110571 (* 2.0 l_0_18_161)))
 (let ((?x110720 (* ?x110571 l_0_18_174)))
 (let ((?x110568 (* 2.0 l_0_18_160)))
 (let ((?x110718 (* ?x110568 l_0_18_173)))
 (let ((?x110725 (- (- (- (- (* (* (- 2.0) l_0_18_16) l_0_18_29) ?x110718) ?x110720) ?x110722) ?x110724)))
 (let ((?x110739 (+ (+ (- (- (- (- (- ?x110725 ?x110726) ?x110728) ?x110730) ?x110732) ?x110734) ?x110736) ?x110738)))
 (let ((?x110753 (+ (- (+ (+ (- (+ (+ ?x110739 ?x110740) ?x110742) ?x110744) ?x110746) ?x110748) ?x110750) ?x110752)))
 (= (+ (+ (+ (+ (+ ?x110753 ?x110754) ?x110756) ?x110758) ?x110760) ?x110762) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110881 (* l_0_18_64 l_0_18_64)))
 (let ((?x110879 (* l_0_18_63 l_0_18_63)))
 (let ((?x110877 (* l_0_18_62 l_0_18_62)))
 (let ((?x110875 (* l_0_18_61 l_0_18_61)))
 (let ((?x110873 (* l_0_18_60 l_0_18_60)))
 (let ((?x110871 (* l_0_18_59 l_0_18_59)))
 (let ((?x110869 (* l_0_18_58 l_0_18_58)))
 (let ((?x110867 (* l_0_18_28 l_0_18_28)))
 (let ((?x110865 (* l_0_18_27 l_0_18_27)))
 (let ((?x110863 (* l_0_18_26 l_0_18_26)))
 (let ((?x110861 (* l_0_18_25 l_0_18_25)))
 (let ((?x110859 (* l_0_18_24 l_0_18_24)))
 (let ((?x110857 (* l_0_18_23 l_0_18_23)))
 (let ((?x110855 (* l_0_18_22 l_0_18_22)))
 (let ((?x110853 (* l_0_18_208 l_0_18_208)))
 (let ((?x110851 (* l_0_18_207 l_0_18_207)))
 (let ((?x110849 (* l_0_18_206 l_0_18_206)))
 (let ((?x110847 (* l_0_18_205 l_0_18_205)))
 (let ((?x110845 (* l_0_18_204 l_0_18_204)))
 (let ((?x110843 (* l_0_18_203 l_0_18_203)))
 (let ((?x110841 (* l_0_18_202 l_0_18_202)))
 (let ((?x110839 (* l_0_18_172 l_0_18_172)))
 (let ((?x110837 (* l_0_18_171 l_0_18_171)))
 (let ((?x110835 (* l_0_18_170 l_0_18_170)))
 (let ((?x110833 (* l_0_18_169 l_0_18_169)))
 (let ((?x110831 (* l_0_18_168 l_0_18_168)))
 (let ((?x110829 (* l_0_18_167 l_0_18_167)))
 (let ((?x110827 (* l_0_18_166 l_0_18_166)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109614 (* ?x109162 l_0_18_168)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109611 (* ?x109159 l_0_18_167)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109608 (* ?x109145 l_0_18_166)))
 (let ((?x110807 (+ (* (* 1.0 l_0_18_112) l_0_18_130) (* (* 1.0 l_0_18_113) l_0_18_131))))
 (let ((?x110826 (- (- (- (+ ?x110807 (* (* 1.0 l_0_18_114) l_0_18_132)) ?x109608) ?x109611) ?x109614)))
 (let ((?x110840 (- (- (- (- (- (- (- ?x110826 ?x110827) ?x110829) ?x110831) ?x110833) ?x110835) ?x110837) ?x110839)))
 (let ((?x110854 (+ (+ (+ (+ (+ (+ (+ ?x110840 ?x110841) ?x110843) ?x110845) ?x110847) ?x110849) ?x110851) ?x110853)))
 (let ((?x110868 (- (- (- (- (- (- (- ?x110854 ?x110855) ?x110857) ?x110859) ?x110861) ?x110863) ?x110865) ?x110867)))
 (let ((?x110882 (+ (+ (+ (+ (+ (+ (+ ?x110868 ?x110869) ?x110871) ?x110873) ?x110875) ?x110877) ?x110879) ?x110881)))
 (let ((?x110886 (- (- ?x110882 (* (* 1.0 l_0_18_76) l_0_18_94)) (* (* 1.0 l_0_18_77) l_0_18_95))))
 (= (- ?x110886 (* (* 1.0 l_0_18_78) l_0_18_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x111040 (* (* 2.0 l_0_18_64) l_0_18_71)))
 (let ((?x111037 (* (* 2.0 l_0_18_63) l_0_18_70)))
 (let ((?x111034 (* (* 2.0 l_0_18_62) l_0_18_69)))
 (let ((?x111031 (* (* 2.0 l_0_18_61) l_0_18_68)))
 (let ((?x111028 (* (* 2.0 l_0_18_60) l_0_18_67)))
 (let ((?x111025 (* (* 2.0 l_0_18_59) l_0_18_66)))
 (let ((?x111022 (* (* 2.0 l_0_18_58) l_0_18_65)))
 (let ((?x111019 (* (* 2.0 l_0_18_28) l_0_18_35)))
 (let ((?x111016 (* (* 2.0 l_0_18_27) l_0_18_34)))
 (let ((?x111013 (* (* 2.0 l_0_18_26) l_0_18_33)))
 (let ((?x111010 (* (* 2.0 l_0_18_25) l_0_18_32)))
 (let ((?x109628 (* 2.0 l_0_18_24)))
 (let ((?x111007 (* ?x109628 l_0_18_31)))
 (let ((?x109284 (* 2.0 l_0_18_23)))
 (let ((?x111005 (* ?x109284 l_0_18_30)))
 (let ((?x109623 (* 2.0 l_0_18_22)))
 (let ((?x111003 (* ?x109623 l_0_18_29)))
 (let ((?x111001 (* (* 2.0 l_0_18_208) l_0_18_215)))
 (let ((?x110998 (* (* 2.0 l_0_18_207) l_0_18_214)))
 (let ((?x110995 (* (* 2.0 l_0_18_206) l_0_18_213)))
 (let ((?x110992 (* (* 2.0 l_0_18_205) l_0_18_212)))
 (let ((?x110989 (* (* 2.0 l_0_18_204) l_0_18_211)))
 (let ((?x110986 (* (* 2.0 l_0_18_203) l_0_18_210)))
 (let ((?x110983 (* (* 2.0 l_0_18_202) l_0_18_209)))
 (let ((?x110980 (* (* 2.0 l_0_18_172) l_0_18_179)))
 (let ((?x110977 (* (* 2.0 l_0_18_171) l_0_18_178)))
 (let ((?x110974 (* (* 2.0 l_0_18_170) l_0_18_177)))
 (let ((?x110971 (* (* 2.0 l_0_18_169) l_0_18_176)))
 (let ((?x110968 (* (* 2.0 l_0_18_168) l_0_18_175)))
 (let ((?x110965 (* (* 2.0 l_0_18_167) l_0_18_174)))
 (let ((?x110962 (* (* 2.0 l_0_18_166) l_0_18_173)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109163 (* ?x109162 l_0_18_175)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109160 (* ?x109159 l_0_18_174)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109147 (* ?x109145 l_0_18_173)))
 (let ((?x110948 (- (* (* (- 1.0) l_0_18_101) l_0_18_76) (* (* 1.0 l_0_18_102) l_0_18_77))))
 (let ((?x110953 (+ (- ?x110948 (* (* 1.0 l_0_18_103) l_0_18_78)) (* (* 1.0 l_0_18_112) l_0_18_137))))
 (let ((?x110957 (+ (+ ?x110953 (* (* 1.0 l_0_18_113) l_0_18_138)) (* (* 1.0 l_0_18_114) l_0_18_139))))
 (let ((?x110972 (- (- (- (- (- (- (- ?x110957 ?x109147) ?x109160) ?x109163) ?x110962) ?x110965) ?x110968) ?x110971)))
 (let ((?x110993 (+ (+ (+ (+ (- (- (- ?x110972 ?x110974) ?x110977) ?x110980) ?x110983) ?x110986) ?x110989) ?x110992)))
 (let ((?x111011 (- (- (- (- (+ (+ (+ ?x110993 ?x110995) ?x110998) ?x111001) ?x111003) ?x111005) ?x111007) ?x111010)))
 (let ((?x111032 (+ (+ (+ (+ (- (- (- ?x111011 ?x111013) ?x111016) ?x111019) ?x111022) ?x111025) ?x111028) ?x111031)))
 (= (+ (+ (+ ?x111032 ?x111034) ?x111037) ?x111040) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x111211 (* l_0_18_72 l_0_18_72)))
 (let ((?x111209 (* l_0_18_71 l_0_18_71)))
 (let ((?x111207 (* l_0_18_70 l_0_18_70)))
 (let ((?x111205 (* l_0_18_69 l_0_18_69)))
 (let ((?x111203 (* l_0_18_68 l_0_18_68)))
 (let ((?x111201 (* l_0_18_67 l_0_18_67)))
 (let ((?x111199 (* l_0_18_66 l_0_18_66)))
 (let ((?x111197 (* l_0_18_65 l_0_18_65)))
 (let ((?x111195 (* l_0_18_36 l_0_18_36)))
 (let ((?x111193 (* l_0_18_35 l_0_18_35)))
 (let ((?x111191 (* l_0_18_34 l_0_18_34)))
 (let ((?x111189 (* l_0_18_33 l_0_18_33)))
 (let ((?x111187 (* l_0_18_32 l_0_18_32)))
 (let ((?x111185 (* l_0_18_31 l_0_18_31)))
 (let ((?x111183 (* l_0_18_30 l_0_18_30)))
 (let ((?x111181 (* l_0_18_29 l_0_18_29)))
 (let ((?x111179 (* l_0_18_216 l_0_18_216)))
 (let ((?x111177 (* l_0_18_215 l_0_18_215)))
 (let ((?x111175 (* l_0_18_214 l_0_18_214)))
 (let ((?x111173 (* l_0_18_213 l_0_18_213)))
 (let ((?x111171 (* l_0_18_212 l_0_18_212)))
 (let ((?x111169 (* l_0_18_211 l_0_18_211)))
 (let ((?x111167 (* l_0_18_210 l_0_18_210)))
 (let ((?x111165 (* l_0_18_209 l_0_18_209)))
 (let ((?x111163 (* l_0_18_180 l_0_18_180)))
 (let ((?x111161 (* l_0_18_179 l_0_18_179)))
 (let ((?x111159 (* l_0_18_178 l_0_18_178)))
 (let ((?x111157 (* l_0_18_177 l_0_18_177)))
 (let ((?x111136 (* l_0_18_176 l_0_18_176)))
 (let ((?x111132 (* l_0_18_175 l_0_18_175)))
 (let ((?x111134 (- (- (* (- l_0_18_173) l_0_18_173) (* l_0_18_174 l_0_18_174)) ?x111132)))
 (let ((?x111168 (+ (+ (- (- (- (- (- ?x111134 ?x111136) ?x111157) ?x111159) ?x111161) ?x111163) ?x111165) ?x111167)))
 (let ((?x111182 (- (+ (+ (+ (+ (+ (+ ?x111168 ?x111169) ?x111171) ?x111173) ?x111175) ?x111177) ?x111179) ?x111181)))
 (let ((?x111196 (- (- (- (- (- (- (- ?x111182 ?x111183) ?x111185) ?x111187) ?x111189) ?x111191) ?x111193) ?x111195)))
 (let ((?x111210 (+ (+ (+ (+ (+ (+ (+ ?x111196 ?x111197) ?x111199) ?x111201) ?x111203) ?x111205) ?x111207) ?x111209)))
 (= (+ ?x111210 ?x111211) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x108636 (* l_0_18_37 l_0_18_37)))
 (let ((?x111271 (* l_0_18_289 l_0_18_289)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111269 (* ?x111268 l_0_18_295)))
 (let ((?x111270 (+ (- (* l_0_18_1 l_0_18_1) (* (* 2.0 l_0_18_109) l_0_18_115)) ?x111269)))
 (= (+ (- (+ ?x111270 ?x111271) ?x108636) (* (* 2.0 l_0_18_73) l_0_18_79)) 0.0)))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108688 (* ?x108687 l_0_18_38)))
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111299 (* ?x111298 l_0_18_296)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111296 (* ?x111295 l_0_18_295)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111293 (* ?x111268 l_0_18_290)))
 (let ((?x111289 (- (* (* 2.0 l_0_18_1) l_0_18_2) (* (* 2.0 l_0_18_110) l_0_18_115))))
 (let ((?x111300 (+ (+ (+ (- ?x111289 (* (* 2.0 l_0_18_111) l_0_18_116)) ?x111293) ?x111296) ?x111299)))
 (let ((?x111304 (- (- ?x111300 (* (* 2.0 l_0_18_325) l_0_18_331)) (* (* 2.0 l_0_18_361) l_0_18_367))))
 (let ((?x111310 (+ (- (- ?x111304 ?x108688) (* (* 2.0 l_0_18_397) l_0_18_403)) (* (* 2.0 l_0_18_74) l_0_18_79))))
 (= (+ ?x111310 (* (* 2.0 l_0_18_75) l_0_18_80)) 0.0))))))))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108733 (* ?x108687 l_0_18_40)))
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x111358 (* ?x108684 l_0_18_297)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x111356 (* ?x108681 l_0_18_296)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x111354 (* ?x108678 l_0_18_295)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111352 (* ?x111268 l_0_18_292)))
 (let ((?x111340 (- (* (* 2.0 l_0_18_1) l_0_18_4) (* (* 2.0 l_0_18_112) l_0_18_115))))
 (let ((?x111351 (- (- ?x111340 (* (* 2.0 l_0_18_113) l_0_18_116)) (* (* 2.0 l_0_18_114) l_0_18_117))))
 (let ((?x111363 (+ (- (+ (+ (+ (+ ?x111351 ?x111352) ?x111354) ?x111356) ?x111358) ?x108733) (* (* 2.0 l_0_18_76) l_0_18_79))))
 (let ((?x111369 (+ (+ ?x111363 (* (* 2.0 l_0_18_77) l_0_18_80)) (* (* 2.0 l_0_18_78) l_0_18_81))))
 (= ?x111369 0.0))))))))))))))))
(assert
 (let ((?x111417 (* l_0_18_82 l_0_18_82)))
 (let ((?x111415 (* l_0_18_81 l_0_18_81)))
 (let ((?x111413 (* l_0_18_80 l_0_18_80)))
 (let ((?x111411 (* l_0_18_79 l_0_18_79)))
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108752 (* ?x108687 l_0_18_43)))
 (let ((?x111408 (* l_0_18_298 l_0_18_298)))
 (let ((?x111406 (* l_0_18_297 l_0_18_297)))
 (let ((?x111404 (* l_0_18_296 l_0_18_296)))
 (let ((?x111402 (* l_0_18_295 l_0_18_295)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111269 (* ?x111268 l_0_18_295)))
 (let ((?x111399 (* l_0_18_118 l_0_18_118)))
 (let ((?x111397 (* l_0_18_117 l_0_18_117)))
 (let ((?x68192 (* l_0_18_116 l_0_18_116)))
 (let ((?x111396 (- (- (* (* 2.0 l_0_18_1) l_0_18_7) (* l_0_18_115 l_0_18_115)) ?x68192)))
 (let ((?x111409 (+ (+ (+ (+ (+ (- (- ?x111396 ?x111397) ?x111399) ?x111269) ?x111402) ?x111404) ?x111406) ?x111408)))
 (= (+ (+ (+ (+ (- ?x111409 ?x108752) ?x111411) ?x111413) ?x111415) ?x111417) 0.0)))))))))))))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108775 (* ?x108687 l_0_18_47)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111461 (* ?x111460 l_0_18_302)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111458 (* ?x111457 l_0_18_301)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111455 (* ?x111454 l_0_18_300)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111452 (* ?x111451 l_0_18_299)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111449 (* ?x111268 l_0_18_299)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x111447 (* ?x111446 l_0_18_259)))
 (let ((?x111436 (- (* (* 2.0 l_0_18_1) l_0_18_11) (* (* 2.0 l_0_18_115) l_0_18_119))))
 (let ((?x111442 (- (- ?x111436 (* (* 2.0 l_0_18_116) l_0_18_120)) (* (* 2.0 l_0_18_117) l_0_18_121))))
 (let ((?x111453 (+ (+ (+ (- ?x111442 (* (* 2.0 l_0_18_118) l_0_18_122)) ?x111447) ?x111449) ?x111452)))
 (let ((?x111466 (+ (- (+ (+ (+ ?x111453 ?x111455) ?x111458) ?x111461) ?x108775) (* (* 2.0 l_0_18_79) l_0_18_83))))
 (let ((?x111472 (+ (+ ?x111466 (* (* 2.0 l_0_18_80) l_0_18_84)) (* (* 2.0 l_0_18_81) l_0_18_85))))
 (= (+ ?x111472 (* (* 2.0 l_0_18_82) l_0_18_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108794 (* ?x108687 l_0_18_52)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111540 (* ?x111460 l_0_18_307)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111538 (* ?x111457 l_0_18_306)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111536 (* ?x111454 l_0_18_305)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111534 (* ?x111451 l_0_18_304)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111532 (* ?x111268 l_0_18_304)))
 (let ((?x111269 (* ?x111268 l_0_18_295)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108750 (* ?x108672 l_0_18_187)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108748 (* ?x108669 l_0_18_151)))
 (let ((?x111509 (- (* (* 2.0 l_0_18_1) l_0_18_16) (* (* 2.0 l_0_18_115) l_0_18_124))))
 (let ((?x111526 (- (- ?x111509 (* (* 2.0 l_0_18_116) l_0_18_125)) (* (* 2.0 l_0_18_117) l_0_18_126))))
 (let ((?x111531 (- (- (+ (- ?x111526 (* (* 2.0 l_0_18_118) l_0_18_127)) ?x108748) ?x108750) ?x111269)))
 (let ((?x111544 (+ (- (+ (+ (+ (+ (+ ?x111531 ?x111532) ?x111534) ?x111536) ?x111538) ?x111540) ?x108794) (* (* 2.0 l_0_18_79) l_0_18_88))))
 (let ((?x111548 (+ (+ ?x111544 (* (* 2.0 l_0_18_80) l_0_18_89)) (* (* 2.0 l_0_18_81) l_0_18_90))))
 (= (+ ?x111548 (* (* 2.0 l_0_18_82) l_0_18_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108821 (* ?x108687 l_0_18_58)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111600 (* ?x111460 l_0_18_313)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111598 (* ?x111457 l_0_18_312)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111596 (* ?x111454 l_0_18_311)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111594 (* ?x111451 l_0_18_310)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111592 (* ?x111268 l_0_18_310)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x111447 (* ?x111446 l_0_18_259)))
 (let ((?x111584 (- (* (* 2.0 l_0_18_1) l_0_18_22) (* (* 2.0 l_0_18_115) l_0_18_130))))
 (let ((?x111588 (- (- ?x111584 (* (* 2.0 l_0_18_116) l_0_18_131)) (* (* 2.0 l_0_18_117) l_0_18_132))))
 (let ((?x111595 (+ (+ (- (- ?x111588 (* (* 2.0 l_0_18_118) l_0_18_133)) ?x111447) ?x111592) ?x111594)))
 (let ((?x111604 (+ (- (+ (+ (+ ?x111595 ?x111596) ?x111598) ?x111600) ?x108821) (* (* 2.0 l_0_18_79) l_0_18_94))))
 (let ((?x111608 (+ (+ ?x111604 (* (* 2.0 l_0_18_80) l_0_18_95)) (* (* 2.0 l_0_18_81) l_0_18_96))))
 (= (+ ?x111608 (* (* 2.0 l_0_18_82) l_0_18_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x108687 (* 2.0 l_0_18_37)))
 (let ((?x108848 (* ?x108687 l_0_18_65)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111684 (* ?x111460 l_0_18_320)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111682 (* ?x111457 l_0_18_319)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111680 (* ?x111454 l_0_18_318)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111678 (* ?x111451 l_0_18_317)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111676 (* ?x111268 l_0_18_317)))
 (let ((?x111646 (+ (* (* 2.0 l_0_18_1) l_0_18_29) (* (* 2.0 l_0_18_101) l_0_18_79))))
 (let ((?x111662 (+ (+ ?x111646 (* (* 2.0 l_0_18_102) l_0_18_80)) (* (* 2.0 l_0_18_103) l_0_18_81))))
 (let ((?x111667 (- (+ ?x111662 (* (* 2.0 l_0_18_104) l_0_18_82)) (* (* 2.0 l_0_18_115) l_0_18_137))))
 (let ((?x111671 (- (- ?x111667 (* (* 2.0 l_0_18_116) l_0_18_138)) (* (* 2.0 l_0_18_117) l_0_18_139))))
 (let ((?x111675 (- (- ?x111671 (* (* 2.0 l_0_18_118) l_0_18_140)) (* (* 2.0 l_0_18_217) l_0_18_223))))
 (= (- (+ (+ (+ (+ (+ ?x111675 ?x111676) ?x111678) ?x111680) ?x111682) ?x111684) ?x108848) 0.0)))))))))))))))))))
(assert
 (let ((?x108897 (* l_0_18_39 l_0_18_39)))
 (let ((?x108895 (* l_0_18_38 l_0_18_38)))
 (let ((?x108875 (* l_0_18_3 l_0_18_3)))
 (let ((?x108596 (* l_0_18_291 l_0_18_291)))
 (let ((?x111742 (+ (+ (+ (* l_0_18_2 l_0_18_2) (* l_0_18_290 l_0_18_290)) ?x108596) ?x108875)))
 (let ((?x111748 (- (- ?x111742 (* (* 2.0 l_0_18_326) l_0_18_331)) (* (* 2.0 l_0_18_327) l_0_18_332))))
 (let ((?x111754 (- (- ?x111748 (* (* 2.0 l_0_18_362) l_0_18_367)) (* (* 2.0 l_0_18_363) l_0_18_368))))
 (let ((?x111762 (- (- (- (- ?x111754 ?x108895) ?x108897) (* (* 2.0 l_0_18_398) l_0_18_403)) (* (* 2.0 l_0_18_399) l_0_18_404))))
 (= ?x111762 0.0))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x108979 (* ?x108978 l_0_18_41)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x108976 (* ?x108975 l_0_18_40)))
 (let ((?x108972 (* 2.0 l_0_18_3)))
 (let ((?x108973 (* ?x108972 l_0_18_5)))
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111790 (* ?x111298 l_0_18_293)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111788 (* ?x111295 l_0_18_292)))
 (let ((?x108963 (* 2.0 l_0_18_2)))
 (let ((?x108964 (* ?x108963 l_0_18_4)))
 (let ((?x111794 (- (+ (+ (+ ?x108964 ?x111788) ?x111790) ?x108973) (* (* 2.0 l_0_18_328) l_0_18_331))))
 (let ((?x111798 (- (- ?x111794 (* (* 2.0 l_0_18_329) l_0_18_332)) (* (* 2.0 l_0_18_330) l_0_18_333))))
 (let ((?x111802 (- (- ?x111798 (* (* 2.0 l_0_18_364) l_0_18_367)) (* (* 2.0 l_0_18_365) l_0_18_368))))
 (let ((?x111808 (- (- (- (- ?x111802 (* (* 2.0 l_0_18_366) l_0_18_369)) ?x108976) ?x108979) (* (* 2.0 l_0_18_400) l_0_18_403))))
 (let ((?x111812 (- (- ?x111808 (* (* 2.0 l_0_18_401) l_0_18_404)) (* (* 2.0 l_0_18_402) l_0_18_405))))
 (= ?x111812 0.0)))))))))))))))))))
(assert
 (let ((?x111875 (* l_0_18_406 l_0_18_406)))
 (let ((?x111873 (* l_0_18_405 l_0_18_405)))
 (let ((?x111871 (* l_0_18_404 l_0_18_404)))
 (let ((?x111869 (* l_0_18_403 l_0_18_403)))
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109011 (* ?x108978 l_0_18_44)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109009 (* ?x108975 l_0_18_43)))
 (let ((?x111865 (* l_0_18_370 l_0_18_370)))
 (let ((?x111863 (* l_0_18_369 l_0_18_369)))
 (let ((?x111861 (* l_0_18_368 l_0_18_368)))
 (let ((?x111859 (* l_0_18_367 l_0_18_367)))
 (let ((?x111857 (* l_0_18_334 l_0_18_334)))
 (let ((?x111855 (* l_0_18_333 l_0_18_333)))
 (let ((?x111853 (* l_0_18_332 l_0_18_332)))
 (let ((?x111851 (* l_0_18_331 l_0_18_331)))
 (let ((?x108972 (* 2.0 l_0_18_3)))
 (let ((?x109001 (* ?x108972 l_0_18_8)))
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111299 (* ?x111298 l_0_18_296)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111296 (* ?x111295 l_0_18_295)))
 (let ((?x108963 (* 2.0 l_0_18_2)))
 (let ((?x44685 (* ?x108963 l_0_18_7)))
 (let ((?x111858 (- (- (- (- (+ (+ (+ ?x44685 ?x111296) ?x111299) ?x109001) ?x111851) ?x111853) ?x111855) ?x111857)))
 (let ((?x111870 (- (- (- (- (- (- (- ?x111858 ?x111859) ?x111861) ?x111863) ?x111865) ?x109009) ?x109011) ?x111869)))
 (= (- (- (- ?x111870 ?x111871) ?x111873) ?x111875) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109107 (* ?x108978 l_0_18_48)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109105 (* ?x108975 l_0_18_47)))
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111902 (* ?x111298 l_0_18_300)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111900 (* ?x111295 l_0_18_299)))
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x111898 (* ?x108454 l_0_18_260)))
 (let ((?x108451 (* 2.0 l_0_18_254)))
 (let ((?x111896 (* ?x108451 l_0_18_259)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x109079 (* ?x109078 l_0_18_3)))
 (let ((?x111901 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_2) ?x109079) ?x111896) ?x111898) ?x111900)))
 (let ((?x111909 (- (- (+ ?x111901 ?x111902) (* (* 2.0 l_0_18_331) l_0_18_335)) (* (* 2.0 l_0_18_332) l_0_18_336))))
 (let ((?x111915 (- (- ?x111909 (* (* 2.0 l_0_18_333) l_0_18_337)) (* (* 2.0 l_0_18_334) l_0_18_338))))
 (let ((?x111921 (- (- ?x111915 (* (* 2.0 l_0_18_367) l_0_18_371)) (* (* 2.0 l_0_18_368) l_0_18_372))))
 (let ((?x111927 (- (- ?x111921 (* (* 2.0 l_0_18_369) l_0_18_373)) (* (* 2.0 l_0_18_370) l_0_18_374))))
 (let ((?x111935 (- (- (- (- ?x111927 ?x109105) ?x109107) (* (* 2.0 l_0_18_403) l_0_18_407)) (* (* 2.0 l_0_18_404) l_0_18_408))))
 (let ((?x111941 (- (- ?x111935 (* (* 2.0 l_0_18_405) l_0_18_409)) (* (* 2.0 l_0_18_406) l_0_18_410))))
 (= ?x111941 0.0)))))))))))))))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109195 (* ?x108978 l_0_18_53)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109193 (* ?x108975 l_0_18_52)))
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111990 (* ?x111298 l_0_18_305)))
 (let ((?x111299 (* ?x111298 l_0_18_296)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111987 (* ?x111295 l_0_18_304)))
 (let ((?x111296 (* ?x111295 l_0_18_295)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x87809 (* ?x108960 l_0_18_188)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x44655 (* ?x108957 l_0_18_187)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x109169 (* ?x109168 l_0_18_3)))
 (let ((?x109165 (* 2.0 l_0_18_16)))
 (let ((?x109166 (* ?x109165 l_0_18_2)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x87835 (* ?x108954 l_0_18_152)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x11774 (* ?x109081 l_0_18_151)))
 (let ((?x111988 (+ (- (- (- (+ (+ (+ ?x11774 ?x87835) ?x109166) ?x109169) ?x44655) ?x87809) ?x111296) ?x111987)))
 (let ((?x111995 (- (- (+ (- ?x111988 ?x111299) ?x111990) (* (* 2.0 l_0_18_331) l_0_18_340)) (* (* 2.0 l_0_18_332) l_0_18_341))))
 (let ((?x111999 (- (- ?x111995 (* (* 2.0 l_0_18_333) l_0_18_342)) (* (* 2.0 l_0_18_334) l_0_18_343))))
 (let ((?x112003 (- (- ?x111999 (* (* 2.0 l_0_18_367) l_0_18_376)) (* (* 2.0 l_0_18_368) l_0_18_377))))
 (let ((?x112007 (- (- ?x112003 (* (* 2.0 l_0_18_369) l_0_18_378)) (* (* 2.0 l_0_18_370) l_0_18_379))))
 (let ((?x112013 (- (- (- (- ?x112007 ?x109193) ?x109195) (* (* 2.0 l_0_18_403) l_0_18_412)) (* (* 2.0 l_0_18_404) l_0_18_413))))
 (let ((?x112017 (- (- ?x112013 (* (* 2.0 l_0_18_405) l_0_18_414)) (* (* 2.0 l_0_18_406) l_0_18_415))))
 (= ?x112017 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109292 (* ?x108978 l_0_18_59)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109290 (* ?x108975 l_0_18_58)))
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x112068 (* ?x111298 l_0_18_311)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x112066 (* ?x111295 l_0_18_310)))
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x111898 (* ?x108454 l_0_18_260)))
 (let ((?x108451 (* 2.0 l_0_18_254)))
 (let ((?x111896 (* ?x108451 l_0_18_259)))
 (let ((?x109284 (* 2.0 l_0_18_23)))
 (let ((?x109285 (* ?x109284 l_0_18_3)))
 (let ((?x108963 (* 2.0 l_0_18_2)))
 (let ((?x109276 (* ?x108963 l_0_18_22)))
 (let ((?x112071 (- (+ (+ (- (- (+ ?x109276 ?x109285) ?x111896) ?x111898) ?x112066) ?x112068) (* (* 2.0 l_0_18_331) l_0_18_346))))
 (let ((?x112075 (- (- ?x112071 (* (* 2.0 l_0_18_332) l_0_18_347)) (* (* 2.0 l_0_18_333) l_0_18_348))))
 (let ((?x112079 (- (- ?x112075 (* (* 2.0 l_0_18_334) l_0_18_349)) (* (* 2.0 l_0_18_367) l_0_18_382))))
 (let ((?x112083 (- (- ?x112079 (* (* 2.0 l_0_18_368) l_0_18_383)) (* (* 2.0 l_0_18_369) l_0_18_384))))
 (let ((?x112089 (- (- (- (- ?x112083 (* (* 2.0 l_0_18_370) l_0_18_385)) ?x109290) ?x109292) (* (* 2.0 l_0_18_403) l_0_18_418))))
 (let ((?x112093 (- (- ?x112089 (* (* 2.0 l_0_18_404) l_0_18_419)) (* (* 2.0 l_0_18_405) l_0_18_420))))
 (= (- ?x112093 (* (* 2.0 l_0_18_406) l_0_18_421)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x108978 (* 2.0 l_0_18_39)))
 (let ((?x109342 (* ?x108978 l_0_18_66)))
 (let ((?x108975 (* 2.0 l_0_18_38)))
 (let ((?x109340 (* ?x108975 l_0_18_65)))
 (let ((?x108972 (* 2.0 l_0_18_3)))
 (let ((?x109338 (* ?x108972 l_0_18_30)))
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x112157 (* ?x111298 l_0_18_318)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x112155 (* ?x111295 l_0_18_317)))
 (let ((?x108963 (* 2.0 l_0_18_2)))
 (let ((?x85056 (* ?x108963 l_0_18_29)))
 (let ((?x112154 (- (- ?x85056 (* (* 2.0 l_0_18_218) l_0_18_223)) (* (* 2.0 l_0_18_219) l_0_18_224))))
 (let ((?x112161 (- (+ (+ (+ ?x112154 ?x112155) ?x112157) ?x109338) (* (* 2.0 l_0_18_331) l_0_18_353))))
 (let ((?x112165 (- (- ?x112161 (* (* 2.0 l_0_18_332) l_0_18_354)) (* (* 2.0 l_0_18_333) l_0_18_355))))
 (let ((?x112169 (- (- ?x112165 (* (* 2.0 l_0_18_334) l_0_18_356)) (* (* 2.0 l_0_18_367) l_0_18_389))))
 (let ((?x112173 (- (- ?x112169 (* (* 2.0 l_0_18_368) l_0_18_390)) (* (* 2.0 l_0_18_369) l_0_18_391))))
 (let ((?x112179 (- (- (- (- ?x112173 (* (* 2.0 l_0_18_370) l_0_18_392)) ?x109340) ?x109342) (* (* 2.0 l_0_18_403) l_0_18_425))))
 (let ((?x112183 (- (- ?x112179 (* (* 2.0 l_0_18_404) l_0_18_426)) (* (* 2.0 l_0_18_405) l_0_18_427))))
 (= (- ?x112183 (* (* 2.0 l_0_18_406) l_0_18_428)) 0.0)))))))))))))))))))))
(assert
 (let ((?x109398 (* l_0_18_6 l_0_18_6)))
 (let ((?x109396 (* l_0_18_5 l_0_18_5)))
 (let ((?x109394 (* l_0_18_42 l_0_18_42)))
 (let ((?x109392 (* l_0_18_41 l_0_18_41)))
 (let ((?x109390 (* l_0_18_40 l_0_18_40)))
 (let ((?x109388 (* l_0_18_4 l_0_18_4)))
 (let ((?x112237 (* l_0_18_294 l_0_18_294)))
 (let ((?x112238 (+ (+ (* l_0_18_292 l_0_18_292) (* l_0_18_293 l_0_18_293)) ?x112237)))
 (= (+ (+ (- (- (- (+ ?x112238 ?x109388) ?x109390) ?x109392) ?x109394) ?x109396) ?x109398) 0.0))))))))))
(assert
 (let ((?x109448 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x109445 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109442 (* ?x109019 l_0_18_45)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109440 (* ?x109016 l_0_18_44)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109438 (* ?x109013 l_0_18_43)))
 (let ((?x109436 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x111358 (* ?x108684 l_0_18_297)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x111356 (* ?x108681 l_0_18_296)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x111354 (* ?x108678 l_0_18_295)))
 (let ((?x112255 (+ (- (- (- (+ (+ (+ ?x111354 ?x111356) ?x111358) ?x109436) ?x109438) ?x109440) ?x109442) ?x109445)))
 (= (+ ?x112255 ?x109448) 0.0))))))))))))))))))
(assert
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109505 (* ?x109019 l_0_18_49)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109503 (* ?x109016 l_0_18_48)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109501 (* ?x109013 l_0_18_47)))
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x112268 (* ?x108684 l_0_18_301)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x112266 (* ?x108681 l_0_18_300)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x112264 (* ?x108678 l_0_18_299)))
 (let ((?x109102 (* 2.0 l_0_18_258)))
 (let ((?x112262 (* ?x109102 l_0_18_261)))
 (let ((?x109099 (* 2.0 l_0_18_257)))
 (let ((?x46542 (* ?x109099 l_0_18_260)))
 (let ((?x109096 (* 2.0 l_0_18_256)))
 (let ((?x12139 (* ?x109096 l_0_18_259)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x109487 (* ?x109486 l_0_18_6)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x109484 (* ?x109078 l_0_18_5)))
 (let ((?x46552 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_4) ?x109484) ?x109487) ?x12139) ?x46542)))
 (let ((?x112272 (- (- (- (+ (+ (+ (+ ?x46552 ?x112262) ?x112264) ?x112266) ?x112268) ?x109501) ?x109503) ?x109505)))
 (= ?x112272 0.0))))))))))))))))))))))))))
(assert
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109562 (* ?x109019 l_0_18_54)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109560 (* ?x109016 l_0_18_53)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109558 (* ?x109013 l_0_18_52)))
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x112303 (* ?x108684 l_0_18_306)))
 (let ((?x111358 (* ?x108684 l_0_18_297)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x112300 (* ?x108681 l_0_18_305)))
 (let ((?x111356 (* ?x108681 l_0_18_296)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x112297 (* ?x108678 l_0_18_304)))
 (let ((?x111354 (* ?x108678 l_0_18_295)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109433 (* ?x109181 l_0_18_189)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109431 (* ?x109178 l_0_18_188)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109429 (* ?x109175 l_0_18_187)))
 (let ((?x109549 (* 2.0 l_0_18_18)))
 (let ((?x109550 (* ?x109549 l_0_18_6)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x109547 (* ?x109168 l_0_18_5)))
 (let ((?x109165 (* 2.0 l_0_18_16)))
 (let ((?x109536 (* ?x109165 l_0_18_4)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109427 (* ?x109162 l_0_18_153)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109425 (* ?x109159 l_0_18_152)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109904 (* ?x109145 l_0_18_151)))
 (let ((?x112294 (- (- (+ (+ (+ (+ (+ ?x109904 ?x109425) ?x109427) ?x109536) ?x109547) ?x109550) ?x109429) ?x109431)))
 (let ((?x112304 (+ (- (+ (- (+ (- (- ?x112294 ?x109433) ?x111354) ?x112297) ?x111356) ?x112300) ?x111358) ?x112303)))
 (= (- (- (- ?x112304 ?x109558) ?x109560) ?x109562) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x109019 (* 2.0 l_0_18_42)))
 (let ((?x109635 (* ?x109019 l_0_18_60)))
 (let ((?x109016 (* 2.0 l_0_18_41)))
 (let ((?x109633 (* ?x109016 l_0_18_59)))
 (let ((?x109013 (* 2.0 l_0_18_40)))
 (let ((?x109631 (* ?x109013 l_0_18_58)))
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x112326 (* ?x108684 l_0_18_312)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x112324 (* ?x108681 l_0_18_311)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x112322 (* ?x108678 l_0_18_310)))
 (let ((?x109102 (* 2.0 l_0_18_258)))
 (let ((?x112262 (* ?x109102 l_0_18_261)))
 (let ((?x109099 (* 2.0 l_0_18_257)))
 (let ((?x46542 (* ?x109099 l_0_18_260)))
 (let ((?x109096 (* 2.0 l_0_18_256)))
 (let ((?x12139 (* ?x109096 l_0_18_259)))
 (let ((?x109628 (* 2.0 l_0_18_24)))
 (let ((?x109629 (* ?x109628 l_0_18_6)))
 (let ((?x109284 (* 2.0 l_0_18_23)))
 (let ((?x109626 (* ?x109284 l_0_18_5)))
 (let ((?x109623 (* 2.0 l_0_18_22)))
 (let ((?x109624 (* ?x109623 l_0_18_4)))
 (let ((?x112325 (+ (+ (- (- (- (+ (+ ?x109624 ?x109626) ?x109629) ?x12139) ?x46542) ?x112262) ?x112322) ?x112324)))
 (= (- (- (- (+ ?x112325 ?x112326) ?x109631) ?x109633) ?x109635) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x109710 (* l_0_18_9 l_0_18_9)))
 (let ((?x109708 (* l_0_18_8 l_0_18_8)))
 (let ((?x109706 (* l_0_18_7 l_0_18_7)))
 (let ((?x109704 (* l_0_18_46 l_0_18_46)))
 (let ((?x109702 (* l_0_18_45 l_0_18_45)))
 (let ((?x109700 (* l_0_18_44 l_0_18_44)))
 (let ((?x109698 (* l_0_18_43 l_0_18_43)))
 (let ((?x111408 (* l_0_18_298 l_0_18_298)))
 (let ((?x111406 (* l_0_18_297 l_0_18_297)))
 (let ((?x111404 (* l_0_18_296 l_0_18_296)))
 (let ((?x88964 (+ (+ (+ (* l_0_18_10 l_0_18_10) (* l_0_18_295 l_0_18_295)) ?x111404) ?x111406)))
 (let ((?x88940 (+ (+ (- (- (- (- (+ ?x88964 ?x111408) ?x109698) ?x109700) ?x109702) ?x109704) ?x109706) ?x109708)))
 (= (+ ?x88940 ?x109710) 0.0))))))))))))))
(assert
 (let ((?x109781 (* 2.0 l_0_18_46)))
 (let ((?x109782 (* ?x109781 l_0_18_50)))
 (let ((?x109778 (* 2.0 l_0_18_45)))
 (let ((?x109779 (* ?x109778 l_0_18_49)))
 (let ((?x109775 (* 2.0 l_0_18_44)))
 (let ((?x109776 (* ?x109775 l_0_18_48)))
 (let ((?x109772 (* 2.0 l_0_18_43)))
 (let ((?x109773 (* ?x109772 l_0_18_47)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111461 (* ?x111460 l_0_18_302)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111458 (* ?x111457 l_0_18_301)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111455 (* ?x111454 l_0_18_300)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111452 (* ?x111451 l_0_18_299)))
 (let ((?x112336 (* l_0_18_262 l_0_18_262)))
 (let ((?x112334 (* l_0_18_261 l_0_18_261)))
 (let ((?x112332 (* l_0_18_260 l_0_18_260)))
 (let ((?x46748 (* l_0_18_259 l_0_18_259)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x109746 (* ?x109486 l_0_18_9)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x109744 (* ?x109078 l_0_18_8)))
 (let ((?x109741 (* 2.0 l_0_18_11)))
 (let ((?x109742 (* ?x109741 l_0_18_7)))
 (let ((?x46743 (+ (+ (+ (+ (* (* 2.0 l_0_18_10) l_0_18_14) ?x109742) ?x109744) ?x109746) ?x46748)))
 (let ((?x112341 (+ (+ (+ (+ (+ (+ (+ ?x46743 ?x112332) ?x112334) ?x112336) ?x111452) ?x111455) ?x111458) ?x111461)))
 (= (- (- (- (- ?x112341 ?x109773) ?x109776) ?x109779) ?x109782) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x109781 (* 2.0 l_0_18_46)))
 (let ((?x109856 (* ?x109781 l_0_18_55)))
 (let ((?x109778 (* 2.0 l_0_18_45)))
 (let ((?x109854 (* ?x109778 l_0_18_54)))
 (let ((?x109775 (* 2.0 l_0_18_44)))
 (let ((?x109852 (* ?x109775 l_0_18_53)))
 (let ((?x109772 (* 2.0 l_0_18_43)))
 (let ((?x109850 (* ?x109772 l_0_18_52)))
 (let ((?x111408 (* l_0_18_298 l_0_18_298)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111540 (* ?x111460 l_0_18_307)))
 (let ((?x111406 (* l_0_18_297 l_0_18_297)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111538 (* ?x111457 l_0_18_306)))
 (let ((?x111404 (* l_0_18_296 l_0_18_296)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111536 (* ?x111454 l_0_18_305)))
 (let ((?x111402 (* l_0_18_295 l_0_18_295)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111534 (* ?x111451 l_0_18_304)))
 (let ((?x109696 (* l_0_18_190 l_0_18_190)))
 (let ((?x109694 (* l_0_18_189 l_0_18_189)))
 (let ((?x109692 (* l_0_18_188 l_0_18_188)))
 (let ((?x109690 (* l_0_18_187 l_0_18_187)))
 (let ((?x109549 (* 2.0 l_0_18_18)))
 (let ((?x109840 (* ?x109549 l_0_18_9)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x109838 (* ?x109168 l_0_18_8)))
 (let ((?x109165 (* 2.0 l_0_18_16)))
 (let ((?x109836 (* ?x109165 l_0_18_7)))
 (let ((?x109688 (* l_0_18_154 l_0_18_154)))
 (let ((?x109686 (* l_0_18_153 l_0_18_153)))
 (let ((?x88205 (* l_0_18_152 l_0_18_152)))
 (let ((?x88217 (* l_0_18_151 l_0_18_151)))
 (let ((?x112351 (+ (+ (+ (+ (* (* 2.0 l_0_18_10) l_0_18_19) ?x88217) ?x88205) ?x109686) ?x109688)))
 (let ((?x112358 (- (- (- (- (+ (+ (+ ?x112351 ?x109836) ?x109838) ?x109840) ?x109690) ?x109692) ?x109694) ?x109696)))
 (let ((?x112365 (+ (- (+ (- (+ (- (+ ?x112358 ?x111534) ?x111402) ?x111536) ?x111404) ?x111538) ?x111406) ?x111540)))
 (= (- (- (- (- (- ?x112365 ?x111408) ?x109850) ?x109852) ?x109854) ?x109856) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x109781 (* 2.0 l_0_18_46)))
 (let ((?x109936 (* ?x109781 l_0_18_61)))
 (let ((?x109778 (* 2.0 l_0_18_45)))
 (let ((?x109934 (* ?x109778 l_0_18_60)))
 (let ((?x109775 (* 2.0 l_0_18_44)))
 (let ((?x109932 (* ?x109775 l_0_18_59)))
 (let ((?x109772 (* 2.0 l_0_18_43)))
 (let ((?x109930 (* ?x109772 l_0_18_58)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111600 (* ?x111460 l_0_18_313)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111598 (* ?x111457 l_0_18_312)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111596 (* ?x111454 l_0_18_311)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111594 (* ?x111451 l_0_18_310)))
 (let ((?x112336 (* l_0_18_262 l_0_18_262)))
 (let ((?x112334 (* l_0_18_261 l_0_18_261)))
 (let ((?x112332 (* l_0_18_260 l_0_18_260)))
 (let ((?x46748 (* l_0_18_259 l_0_18_259)))
 (let ((?x109628 (* 2.0 l_0_18_24)))
 (let ((?x109928 (* ?x109628 l_0_18_9)))
 (let ((?x109284 (* 2.0 l_0_18_23)))
 (let ((?x109926 (* ?x109284 l_0_18_8)))
 (let ((?x109623 (* 2.0 l_0_18_22)))
 (let ((?x109924 (* ?x109623 l_0_18_7)))
 (let ((?x112381 (- (+ (+ (+ (* (* 2.0 l_0_18_10) l_0_18_25) ?x109924) ?x109926) ?x109928) ?x46748)))
 (let ((?x112388 (+ (+ (+ (+ (- (- (- ?x112381 ?x112332) ?x112334) ?x112336) ?x111594) ?x111596) ?x111598) ?x111600)))
 (= (- (- (- (- ?x112388 ?x109930) ?x109932) ?x109934) ?x109936) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x109781 (* 2.0 l_0_18_46)))
 (let ((?x110018 (* ?x109781 l_0_18_68)))
 (let ((?x109778 (* 2.0 l_0_18_45)))
 (let ((?x110016 (* ?x109778 l_0_18_67)))
 (let ((?x109775 (* 2.0 l_0_18_44)))
 (let ((?x110014 (* ?x109775 l_0_18_66)))
 (let ((?x109772 (* 2.0 l_0_18_43)))
 (let ((?x110012 (* ?x109772 l_0_18_65)))
 (let ((?x109006 (* 2.0 l_0_18_31)))
 (let ((?x110010 (* ?x109006 l_0_18_9)))
 (let ((?x109003 (* 2.0 l_0_18_30)))
 (let ((?x110008 (* ?x109003 l_0_18_8)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111684 (* ?x111460 l_0_18_320)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111682 (* ?x111457 l_0_18_319)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111680 (* ?x111454 l_0_18_318)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111678 (* ?x111451 l_0_18_317)))
 (let ((?x84973 (* 2.0 l_0_18_29)))
 (let ((?x110006 (* ?x84973 l_0_18_7)))
 (let ((?x112401 (* l_0_18_226 l_0_18_226)))
 (let ((?x112399 (* l_0_18_225 l_0_18_225)))
 (let ((?x89277 (* l_0_18_224 l_0_18_224)))
 (let ((?x89286 (* l_0_18_223 l_0_18_223)))
 (let ((?x112402 (- (- (- (- (* (* 2.0 l_0_18_10) l_0_18_32) ?x89286) ?x89277) ?x112399) ?x112401)))
 (let ((?x112409 (+ (+ (+ (+ (+ (+ (+ ?x112402 ?x110006) ?x111678) ?x111680) ?x111682) ?x111684) ?x110008) ?x110010)))
 (= (- (- (- (- ?x112409 ?x110012) ?x110014) ?x110016) ?x110018) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x110098 (* l_0_18_51 l_0_18_51)))
 (let ((?x110096 (* l_0_18_50 l_0_18_50)))
 (let ((?x110094 (* l_0_18_49 l_0_18_49)))
 (let ((?x110092 (* l_0_18_48 l_0_18_48)))
 (let ((?x110090 (* l_0_18_47 l_0_18_47)))
 (let ((?x112447 (* l_0_18_303 l_0_18_303)))
 (let ((?x112445 (* l_0_18_302 l_0_18_302)))
 (let ((?x112443 (* l_0_18_301 l_0_18_301)))
 (let ((?x112441 (* l_0_18_300 l_0_18_300)))
 (let ((?x112439 (* l_0_18_299 l_0_18_299)))
 (let ((?x112436 (* 2.0 l_0_18_262)))
 (let ((?x112437 (* ?x112436 l_0_18_266)))
 (let ((?x112433 (* 2.0 l_0_18_261)))
 (let ((?x112434 (* ?x112433 l_0_18_265)))
 (let ((?x112430 (* 2.0 l_0_18_260)))
 (let ((?x112431 (* ?x112430 l_0_18_264)))
 (let ((?x112427 (* 2.0 l_0_18_259)))
 (let ((?x112428 (* ?x112427 l_0_18_263)))
 (let ((?x110068 (* l_0_18_15 l_0_18_15)))
 (let ((?x110066 (* l_0_18_14 l_0_18_14)))
 (let ((?x110064 (* l_0_18_13 l_0_18_13)))
 (let ((?x112425 (+ (+ (+ (* l_0_18_11 l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x110064) ?x110066)))
 (let ((?x112442 (+ (+ (+ (+ (+ (+ (+ ?x112425 ?x110068) ?x112428) ?x112431) ?x112434) ?x112437) ?x112439) ?x112441)))
 (let ((?x112452 (- (- (- (- (+ (+ (+ ?x112442 ?x112443) ?x112445) ?x112447) ?x110090) ?x110092) ?x110094) ?x110096)))
 (= (- ?x112452 ?x110098) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x110186 (* 2.0 l_0_18_51)))
 (let ((?x110187 (* ?x110186 l_0_18_56)))
 (let ((?x110183 (* 2.0 l_0_18_50)))
 (let ((?x110184 (* ?x110183 l_0_18_55)))
 (let ((?x110180 (* 2.0 l_0_18_49)))
 (let ((?x110181 (* ?x110180 l_0_18_54)))
 (let ((?x110177 (* 2.0 l_0_18_48)))
 (let ((?x110178 (* ?x110177 l_0_18_53)))
 (let ((?x110174 (* 2.0 l_0_18_47)))
 (let ((?x110175 (* ?x110174 l_0_18_52)))
 (let ((?x112494 (* 2.0 l_0_18_303)))
 (let ((?x112495 (* ?x112494 l_0_18_308)))
 (let ((?x112491 (* 2.0 l_0_18_302)))
 (let ((?x112492 (* ?x112491 l_0_18_307)))
 (let ((?x112488 (* 2.0 l_0_18_301)))
 (let ((?x112489 (* ?x112488 l_0_18_306)))
 (let ((?x112485 (* 2.0 l_0_18_300)))
 (let ((?x112486 (* ?x112485 l_0_18_305)))
 (let ((?x112482 (* 2.0 l_0_18_299)))
 (let ((?x112483 (* ?x112482 l_0_18_304)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111461 (* ?x111460 l_0_18_302)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111458 (* ?x111457 l_0_18_301)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111455 (* ?x111454 l_0_18_300)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111452 (* ?x111451 l_0_18_299)))
 (let ((?x112436 (* 2.0 l_0_18_262)))
 (let ((?x112476 (* ?x112436 l_0_18_271)))
 (let ((?x112433 (* 2.0 l_0_18_261)))
 (let ((?x112474 (* ?x112433 l_0_18_270)))
 (let ((?x112430 (* 2.0 l_0_18_260)))
 (let ((?x112472 (* ?x112430 l_0_18_269)))
 (let ((?x112427 (* 2.0 l_0_18_259)))
 (let ((?x112470 (* ?x112427 l_0_18_268)))
 (let ((?x109769 (* 2.0 l_0_18_190)))
 (let ((?x109770 (* ?x109769 l_0_18_194)))
 (let ((?x109766 (* 2.0 l_0_18_189)))
 (let ((?x109767 (* ?x109766 l_0_18_193)))
 (let ((?x109763 (* 2.0 l_0_18_188)))
 (let ((?x109764 (* ?x109763 l_0_18_192)))
 (let ((?x109760 (* 2.0 l_0_18_187)))
 (let ((?x109761 (* ?x109760 l_0_18_191)))
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109758 (* ?x109757 l_0_18_158)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109755 (* ?x109754 l_0_18_157)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109752 (* ?x109751 l_0_18_156)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x109749 (* ?x109748 l_0_18_155)))
 (let ((?x110141 (* 2.0 l_0_18_15)))
 (let ((?x110142 (* ?x110141 l_0_18_20)))
 (let ((?x110138 (* 2.0 l_0_18_14)))
 (let ((?x110139 (* ?x110138 l_0_18_19)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x110136 (* ?x109486 l_0_18_18)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x110134 (* ?x109078 l_0_18_17)))
 (let ((?x89300 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_16) ?x110134) ?x110136) ?x110139) ?x110142)))
 (let ((?x112468 (- (- (- (+ (+ (+ (+ ?x89300 ?x109749) ?x109752) ?x109755) ?x109758) ?x109761) ?x109764) ?x109767)))
 (let ((?x112479 (- (- (+ (+ (+ (+ (- ?x112468 ?x109770) ?x112470) ?x112472) ?x112474) ?x112476) ?x111452) ?x111455)))
 (let ((?x112496 (+ (+ (+ (+ (+ (- (- ?x112479 ?x111458) ?x111461) ?x112483) ?x112486) ?x112489) ?x112492) ?x112495)))
 (= (- (- (- (- (- ?x112496 ?x110175) ?x110178) ?x110181) ?x110184) ?x110187) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110186 (* 2.0 l_0_18_51)))
 (let ((?x110284 (* ?x110186 l_0_18_62)))
 (let ((?x110183 (* 2.0 l_0_18_50)))
 (let ((?x110282 (* ?x110183 l_0_18_61)))
 (let ((?x110180 (* 2.0 l_0_18_49)))
 (let ((?x110280 (* ?x110180 l_0_18_60)))
 (let ((?x110177 (* 2.0 l_0_18_48)))
 (let ((?x110278 (* ?x110177 l_0_18_59)))
 (let ((?x110174 (* 2.0 l_0_18_47)))
 (let ((?x110276 (* ?x110174 l_0_18_58)))
 (let ((?x112494 (* 2.0 l_0_18_303)))
 (let ((?x89269 (* ?x112494 l_0_18_314)))
 (let ((?x112491 (* 2.0 l_0_18_302)))
 (let ((?x89263 (* ?x112491 l_0_18_313)))
 (let ((?x112488 (* 2.0 l_0_18_301)))
 (let ((?x89212 (* ?x112488 l_0_18_312)))
 (let ((?x112485 (* 2.0 l_0_18_300)))
 (let ((?x89202 (* ?x112485 l_0_18_311)))
 (let ((?x112482 (* 2.0 l_0_18_299)))
 (let ((?x89328 (* ?x112482 l_0_18_310)))
 (let ((?x112436 (* 2.0 l_0_18_262)))
 (let ((?x89316 (* ?x112436 l_0_18_277)))
 (let ((?x112437 (* ?x112436 l_0_18_266)))
 (let ((?x112433 (* 2.0 l_0_18_261)))
 (let ((?x89310 (* ?x112433 l_0_18_276)))
 (let ((?x112434 (* ?x112433 l_0_18_265)))
 (let ((?x112430 (* 2.0 l_0_18_260)))
 (let ((?x47145 (* ?x112430 l_0_18_275)))
 (let ((?x112431 (* ?x112430 l_0_18_264)))
 (let ((?x112427 (* 2.0 l_0_18_259)))
 (let ((?x46897 (* ?x112427 l_0_18_274)))
 (let ((?x112428 (* ?x112427 l_0_18_263)))
 (let ((?x110141 (* 2.0 l_0_18_15)))
 (let ((?x110253 (* ?x110141 l_0_18_26)))
 (let ((?x110138 (* 2.0 l_0_18_14)))
 (let ((?x110249 (* ?x110138 l_0_18_25)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x110234 (* ?x109486 l_0_18_24)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x110230 (* ?x109078 l_0_18_23)))
 (let ((?x89278 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_22) ?x110230) ?x110234) ?x110249) ?x110253)))
 (let ((?x89307 (- (+ (- (+ (- (+ (- ?x89278 ?x112428) ?x46897) ?x112431) ?x47145) ?x112434) ?x89310) ?x112437)))
 (let ((?x44279 (- (+ (+ (+ (+ (+ (+ ?x89307 ?x89316) ?x89328) ?x89202) ?x89212) ?x89263) ?x89269) ?x110276)))
 (= (- (- (- (- ?x44279 ?x110278) ?x110280) ?x110282) ?x110284) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110186 (* 2.0 l_0_18_51)))
 (let ((?x110398 (* ?x110186 l_0_18_69)))
 (let ((?x110183 (* 2.0 l_0_18_50)))
 (let ((?x110396 (* ?x110183 l_0_18_68)))
 (let ((?x110180 (* 2.0 l_0_18_49)))
 (let ((?x110394 (* ?x110180 l_0_18_67)))
 (let ((?x110177 (* 2.0 l_0_18_48)))
 (let ((?x110392 (* ?x110177 l_0_18_66)))
 (let ((?x110174 (* 2.0 l_0_18_47)))
 (let ((?x110390 (* ?x110174 l_0_18_65)))
 (let ((?x112494 (* 2.0 l_0_18_303)))
 (let ((?x112539 (* ?x112494 l_0_18_321)))
 (let ((?x112491 (* 2.0 l_0_18_302)))
 (let ((?x112537 (* ?x112491 l_0_18_320)))
 (let ((?x112488 (* 2.0 l_0_18_301)))
 (let ((?x112535 (* ?x112488 l_0_18_319)))
 (let ((?x112485 (* 2.0 l_0_18_300)))
 (let ((?x112533 (* ?x112485 l_0_18_318)))
 (let ((?x112482 (* 2.0 l_0_18_299)))
 (let ((?x112531 (* ?x112482 l_0_18_317)))
 (let ((?x112436 (* 2.0 l_0_18_262)))
 (let ((?x112529 (* ?x112436 l_0_18_284)))
 (let ((?x112433 (* 2.0 l_0_18_261)))
 (let ((?x112527 (* ?x112433 l_0_18_283)))
 (let ((?x112430 (* 2.0 l_0_18_260)))
 (let ((?x112525 (* ?x112430 l_0_18_282)))
 (let ((?x112427 (* 2.0 l_0_18_259)))
 (let ((?x112523 (* ?x112427 l_0_18_281)))
 (let ((?x110141 (* 2.0 l_0_18_15)))
 (let ((?x110368 (* ?x110141 l_0_18_33)))
 (let ((?x110138 (* 2.0 l_0_18_14)))
 (let ((?x110366 (* ?x110138 l_0_18_32)))
 (let ((?x109486 (* 2.0 l_0_18_13)))
 (let ((?x110364 (* ?x109486 l_0_18_31)))
 (let ((?x109078 (* 2.0 l_0_18_12)))
 (let ((?x110362 (* ?x109078 l_0_18_30)))
 (let ((?x12713 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_29) ?x110362) ?x110364) ?x110366) ?x110368)))
 (let ((?x112516 (- (- ?x12713 (* (* 2.0 l_0_18_223) l_0_18_227)) (* (* 2.0 l_0_18_224) l_0_18_228))))
 (let ((?x112522 (- (- ?x112516 (* (* 2.0 l_0_18_225) l_0_18_229)) (* (* 2.0 l_0_18_226) l_0_18_230))))
 (let ((?x112536 (+ (+ (+ (+ (+ (+ (+ ?x112522 ?x112523) ?x112525) ?x112527) ?x112529) ?x112531) ?x112533) ?x112535)))
 (let ((?x112545 (- (- (- (- (- (+ (+ ?x112536 ?x112537) ?x112539) ?x110390) ?x110392) ?x110394) ?x110396) ?x110398)))
 (= ?x112545 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110508 (* l_0_18_57 l_0_18_57)))
 (let ((?x110506 (* l_0_18_56 l_0_18_56)))
 (let ((?x110504 (* l_0_18_55 l_0_18_55)))
 (let ((?x110502 (* l_0_18_54 l_0_18_54)))
 (let ((?x110500 (* l_0_18_53 l_0_18_53)))
 (let ((?x110498 (* l_0_18_52 l_0_18_52)))
 (let ((?x112615 (* l_0_18_309 l_0_18_309)))
 (let ((?x112613 (* l_0_18_308 l_0_18_308)))
 (let ((?x112611 (* l_0_18_307 l_0_18_307)))
 (let ((?x112609 (* l_0_18_306 l_0_18_306)))
 (let ((?x112607 (* l_0_18_305 l_0_18_305)))
 (let ((?x112605 (* l_0_18_304 l_0_18_304)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111540 (* ?x111460 l_0_18_307)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111538 (* ?x111457 l_0_18_306)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111536 (* ?x111454 l_0_18_305)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111534 (* ?x111451 l_0_18_304)))
 (let ((?x110496 (* l_0_18_21 l_0_18_21)))
 (let ((?x110490 (* l_0_18_20 l_0_18_20)))
 (let ((?x109769 (* 2.0 l_0_18_190)))
 (let ((?x109848 (* ?x109769 l_0_18_199)))
 (let ((?x110480 (* l_0_18_19 l_0_18_19)))
 (let ((?x109766 (* 2.0 l_0_18_189)))
 (let ((?x109846 (* ?x109766 l_0_18_198)))
 (let ((?x109763 (* 2.0 l_0_18_188)))
 (let ((?x109844 (* ?x109763 l_0_18_197)))
 (let ((?x109760 (* 2.0 l_0_18_187)))
 (let ((?x109842 (* ?x109760 l_0_18_196)))
 (let ((?x110478 (* l_0_18_18 l_0_18_18)))
 (let ((?x110476 (* l_0_18_17 l_0_18_17)))
 (let ((?x110512 (* l_0_18_16 l_0_18_16)))
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109823 (* ?x109757 l_0_18_163)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109819 (* ?x109754 l_0_18_162)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109815 (* ?x109751 l_0_18_161)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x7589 (* ?x109748 l_0_18_160)))
 (let ((?x112594 (- (+ (+ (+ (+ (+ (+ ?x7589 ?x109815) ?x109819) ?x109823) ?x110512) ?x110476) ?x110478) ?x109842)))
 (let ((?x112601 (- (+ (+ (- (+ (- (- ?x112594 ?x109844) ?x109846) ?x110480) ?x109848) ?x110490) ?x110496) ?x111534)))
 (let ((?x112612 (+ (+ (+ (+ (- (- (- ?x112601 ?x111536) ?x111538) ?x111540) ?x112605) ?x112607) ?x112609) ?x112611)))
 (let ((?x112621 (- (- (- (- (- (+ (+ ?x112612 ?x112613) ?x112615) ?x110498) ?x110500) ?x110502) ?x110504) ?x110506)))
 (= (- ?x112621 ?x110508) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110632 (* 2.0 l_0_18_57)))
 (let ((?x110633 (* ?x110632 l_0_18_63)))
 (let ((?x110629 (* 2.0 l_0_18_56)))
 (let ((?x110630 (* ?x110629 l_0_18_62)))
 (let ((?x110626 (* 2.0 l_0_18_55)))
 (let ((?x110627 (* ?x110626 l_0_18_61)))
 (let ((?x110623 (* 2.0 l_0_18_54)))
 (let ((?x110624 (* ?x110623 l_0_18_60)))
 (let ((?x110620 (* 2.0 l_0_18_53)))
 (let ((?x110621 (* ?x110620 l_0_18_59)))
 (let ((?x110617 (* 2.0 l_0_18_52)))
 (let ((?x110618 (* ?x110617 l_0_18_58)))
 (let ((?x112660 (* 2.0 l_0_18_309)))
 (let ((?x112661 (* ?x112660 l_0_18_315)))
 (let ((?x112657 (* 2.0 l_0_18_308)))
 (let ((?x112658 (* ?x112657 l_0_18_314)))
 (let ((?x112654 (* 2.0 l_0_18_307)))
 (let ((?x112655 (* ?x112654 l_0_18_313)))
 (let ((?x112651 (* 2.0 l_0_18_306)))
 (let ((?x112652 (* ?x112651 l_0_18_312)))
 (let ((?x112648 (* 2.0 l_0_18_305)))
 (let ((?x112649 (* ?x112648 l_0_18_311)))
 (let ((?x112645 (* 2.0 l_0_18_304)))
 (let ((?x112646 (* ?x112645 l_0_18_310)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111600 (* ?x111460 l_0_18_313)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111598 (* ?x111457 l_0_18_312)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111596 (* ?x111454 l_0_18_311)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111594 (* ?x111451 l_0_18_310)))
 (let ((?x112436 (* 2.0 l_0_18_262)))
 (let ((?x112476 (* ?x112436 l_0_18_271)))
 (let ((?x112433 (* 2.0 l_0_18_261)))
 (let ((?x112474 (* ?x112433 l_0_18_270)))
 (let ((?x112430 (* 2.0 l_0_18_260)))
 (let ((?x112472 (* ?x112430 l_0_18_269)))
 (let ((?x112427 (* 2.0 l_0_18_259)))
 (let ((?x112470 (* ?x112427 l_0_18_268)))
 (let ((?x110614 (* 2.0 l_0_18_21)))
 (let ((?x110615 (* ?x110614 l_0_18_27)))
 (let ((?x110605 (* 2.0 l_0_18_20)))
 (let ((?x110606 (* ?x110605 l_0_18_26)))
 (let ((?x109769 (* 2.0 l_0_18_190)))
 (let ((?x109922 (* ?x109769 l_0_18_205)))
 (let ((?x110590 (* 2.0 l_0_18_19)))
 (let ((?x110591 (* ?x110590 l_0_18_25)))
 (let ((?x109766 (* 2.0 l_0_18_189)))
 (let ((?x109920 (* ?x109766 l_0_18_204)))
 (let ((?x109763 (* 2.0 l_0_18_188)))
 (let ((?x109918 (* ?x109763 l_0_18_203)))
 (let ((?x109760 (* 2.0 l_0_18_187)))
 (let ((?x109916 (* ?x109760 l_0_18_202)))
 (let ((?x109549 (* 2.0 l_0_18_18)))
 (let ((?x110588 (* ?x109549 l_0_18_24)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x110586 (* ?x109168 l_0_18_23)))
 (let ((?x109165 (* 2.0 l_0_18_16)))
 (let ((?x110566 (* ?x109165 l_0_18_22)))
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109914 (* ?x109757 l_0_18_169)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109912 (* ?x109754 l_0_18_168)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109910 (* ?x109751 l_0_18_167)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x109908 (* ?x109748 l_0_18_166)))
 (let ((?x112630 (- (+ (+ (+ (+ (+ (+ ?x109908 ?x109910) ?x109912) ?x109914) ?x110566) ?x110586) ?x110588) ?x109916)))
 (let ((?x112637 (- (+ (+ (- (+ (- (- ?x112630 ?x109918) ?x109920) ?x110591) ?x109922) ?x110606) ?x110615) ?x112470)))
 (let ((?x112644 (- (- (- (- (- (- (- ?x112637 ?x112472) ?x112474) ?x112476) ?x111594) ?x111596) ?x111598) ?x111600)))
 (let ((?x112663 (- (+ (+ (+ (+ (+ (+ ?x112644 ?x112646) ?x112649) ?x112652) ?x112655) ?x112658) ?x112661) ?x110618)))
 (= (- (- (- (- (- ?x112663 ?x110621) ?x110624) ?x110627) ?x110630) ?x110633) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110632 (* 2.0 l_0_18_57)))
 (let ((?x110762 (* ?x110632 l_0_18_70)))
 (let ((?x110629 (* 2.0 l_0_18_56)))
 (let ((?x110760 (* ?x110629 l_0_18_69)))
 (let ((?x110626 (* 2.0 l_0_18_55)))
 (let ((?x110758 (* ?x110626 l_0_18_68)))
 (let ((?x110623 (* 2.0 l_0_18_54)))
 (let ((?x110756 (* ?x110623 l_0_18_67)))
 (let ((?x110620 (* 2.0 l_0_18_53)))
 (let ((?x110754 (* ?x110620 l_0_18_66)))
 (let ((?x110617 (* 2.0 l_0_18_52)))
 (let ((?x110752 (* ?x110617 l_0_18_65)))
 (let ((?x112660 (* 2.0 l_0_18_309)))
 (let ((?x112712 (* ?x112660 l_0_18_322)))
 (let ((?x112657 (* 2.0 l_0_18_308)))
 (let ((?x112710 (* ?x112657 l_0_18_321)))
 (let ((?x112654 (* 2.0 l_0_18_307)))
 (let ((?x112708 (* ?x112654 l_0_18_320)))
 (let ((?x112651 (* 2.0 l_0_18_306)))
 (let ((?x112706 (* ?x112651 l_0_18_319)))
 (let ((?x112648 (* 2.0 l_0_18_305)))
 (let ((?x112704 (* ?x112648 l_0_18_318)))
 (let ((?x112645 (* 2.0 l_0_18_304)))
 (let ((?x112702 (* ?x112645 l_0_18_317)))
 (let ((?x111460 (* 2.0 l_0_18_298)))
 (let ((?x111684 (* ?x111460 l_0_18_320)))
 (let ((?x111457 (* 2.0 l_0_18_297)))
 (let ((?x111682 (* ?x111457 l_0_18_319)))
 (let ((?x111454 (* 2.0 l_0_18_296)))
 (let ((?x111680 (* ?x111454 l_0_18_318)))
 (let ((?x111451 (* 2.0 l_0_18_295)))
 (let ((?x111678 (* ?x111451 l_0_18_317)))
 (let ((?x110614 (* 2.0 l_0_18_21)))
 (let ((?x110750 (* ?x110614 l_0_18_34)))
 (let ((?x110605 (* 2.0 l_0_18_20)))
 (let ((?x110744 (* ?x110605 l_0_18_33)))
 (let ((?x109769 (* 2.0 l_0_18_190)))
 (let ((?x110004 (* ?x109769 l_0_18_212)))
 (let ((?x110590 (* 2.0 l_0_18_19)))
 (let ((?x110734 (* ?x110590 l_0_18_32)))
 (let ((?x109766 (* 2.0 l_0_18_189)))
 (let ((?x110002 (* ?x109766 l_0_18_211)))
 (let ((?x109763 (* 2.0 l_0_18_188)))
 (let ((?x110000 (* ?x109763 l_0_18_210)))
 (let ((?x109760 (* 2.0 l_0_18_187)))
 (let ((?x109998 (* ?x109760 l_0_18_209)))
 (let ((?x109549 (* 2.0 l_0_18_18)))
 (let ((?x110732 (* ?x109549 l_0_18_31)))
 (let ((?x109168 (* 2.0 l_0_18_17)))
 (let ((?x110730 (* ?x109168 l_0_18_30)))
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109996 (* ?x109757 l_0_18_176)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109994 (* ?x109754 l_0_18_175)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109992 (* ?x109751 l_0_18_174)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x109990 (* ?x109748 l_0_18_173)))
 (let ((?x112680 (+ (+ (+ (+ ?x109990 ?x109992) ?x109994) ?x109996) (* (* 2.0 l_0_18_16) l_0_18_29))))
 (let ((?x112687 (- (+ (- (- (- (+ (+ ?x112680 ?x110730) ?x110732) ?x109998) ?x110000) ?x110002) ?x110734) ?x110004)))
 (let ((?x112693 (- (- (+ (+ ?x112687 ?x110744) ?x110750) (* (* 2.0 l_0_18_223) l_0_18_232)) (* (* 2.0 l_0_18_224) l_0_18_233))))
 (let ((?x112697 (- (- ?x112693 (* (* 2.0 l_0_18_225) l_0_18_234)) (* (* 2.0 l_0_18_226) l_0_18_235))))
 (let ((?x112707 (+ (+ (+ (- (- (- (- ?x112697 ?x111678) ?x111680) ?x111682) ?x111684) ?x112702) ?x112704) ?x112706)))
 (let ((?x112717 (- (- (- (- (+ (+ (+ ?x112707 ?x112708) ?x112710) ?x112712) ?x110752) ?x110754) ?x110756) ?x110758)))
 (= (- (- ?x112717 ?x110760) ?x110762) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x110881 (* l_0_18_64 l_0_18_64)))
 (let ((?x110879 (* l_0_18_63 l_0_18_63)))
 (let ((?x110877 (* l_0_18_62 l_0_18_62)))
 (let ((?x110875 (* l_0_18_61 l_0_18_61)))
 (let ((?x110873 (* l_0_18_60 l_0_18_60)))
 (let ((?x110871 (* l_0_18_59 l_0_18_59)))
 (let ((?x110869 (* l_0_18_58 l_0_18_58)))
 (let ((?x112728 (* l_0_18_316 l_0_18_316)))
 (let ((?x112726 (* l_0_18_315 l_0_18_315)))
 (let ((?x112724 (* l_0_18_314 l_0_18_314)))
 (let ((?x112722 (* l_0_18_313 l_0_18_313)))
 (let ((?x89688 (* l_0_18_312 l_0_18_312)))
 (let ((?x89687 (* l_0_18_311 l_0_18_311)))
 (let ((?x89689 (* l_0_18_310 l_0_18_310)))
 (let ((?x110867 (* l_0_18_28 l_0_18_28)))
 (let ((?x110865 (* l_0_18_27 l_0_18_27)))
 (let ((?x112436 (* 2.0 l_0_18_262)))
 (let ((?x89316 (* ?x112436 l_0_18_277)))
 (let ((?x112433 (* 2.0 l_0_18_261)))
 (let ((?x89310 (* ?x112433 l_0_18_276)))
 (let ((?x112430 (* 2.0 l_0_18_260)))
 (let ((?x47145 (* ?x112430 l_0_18_275)))
 (let ((?x110863 (* l_0_18_26 l_0_18_26)))
 (let ((?x112427 (* 2.0 l_0_18_259)))
 (let ((?x46897 (* ?x112427 l_0_18_274)))
 (let ((?x110861 (* l_0_18_25 l_0_18_25)))
 (let ((?x110859 (* l_0_18_24 l_0_18_24)))
 (let ((?x89815 (+ (+ (+ (* l_0_18_22 l_0_18_22) (* l_0_18_23 l_0_18_23)) ?x110859) ?x110861)))
 (let ((?x89736 (+ (+ (- (- (- (+ (- ?x89815 ?x46897) ?x110863) ?x47145) ?x89310) ?x89316) ?x110865) ?x110867)))
 (let ((?x112729 (+ (+ (+ (+ (+ (+ (+ ?x89736 ?x89689) ?x89687) ?x89688) ?x112722) ?x112724) ?x112726) ?x112728)))
 (let ((?x112736 (- (- (- (- (- (- (- ?x112729 ?x110869) ?x110871) ?x110873) ?x110875) ?x110877) ?x110879) ?x110881)))
 (= ?x112736 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x111040 (* (* 2.0 l_0_18_64) l_0_18_71)))
 (let ((?x111037 (* (* 2.0 l_0_18_63) l_0_18_70)))
 (let ((?x111034 (* (* 2.0 l_0_18_62) l_0_18_69)))
 (let ((?x111031 (* (* 2.0 l_0_18_61) l_0_18_68)))
 (let ((?x111028 (* (* 2.0 l_0_18_60) l_0_18_67)))
 (let ((?x111025 (* (* 2.0 l_0_18_59) l_0_18_66)))
 (let ((?x111022 (* (* 2.0 l_0_18_58) l_0_18_65)))
 (let ((?x112754 (* (* 2.0 l_0_18_316) l_0_18_323)))
 (let ((?x112751 (* (* 2.0 l_0_18_315) l_0_18_322)))
 (let ((?x112748 (* (* 2.0 l_0_18_314) l_0_18_321)))
 (let ((?x112745 (* (* 2.0 l_0_18_313) l_0_18_320)))
 (let ((?x112742 (* (* 2.0 l_0_18_312) l_0_18_319)))
 (let ((?x112739 (* (* 2.0 l_0_18_311) l_0_18_318)))
 (let ((?x89906 (* (* 2.0 l_0_18_310) l_0_18_317)))
 (let ((?x111019 (* (* 2.0 l_0_18_28) l_0_18_35)))
 (let ((?x111016 (* (* 2.0 l_0_18_27) l_0_18_34)))
 (let ((?x112436 (* 2.0 l_0_18_262)))
 (let ((?x112529 (* ?x112436 l_0_18_284)))
 (let ((?x112433 (* 2.0 l_0_18_261)))
 (let ((?x112527 (* ?x112433 l_0_18_283)))
 (let ((?x112430 (* 2.0 l_0_18_260)))
 (let ((?x112525 (* ?x112430 l_0_18_282)))
 (let ((?x111013 (* (* 2.0 l_0_18_26) l_0_18_33)))
 (let ((?x112427 (* 2.0 l_0_18_259)))
 (let ((?x112523 (* ?x112427 l_0_18_281)))
 (let ((?x111010 (* (* 2.0 l_0_18_25) l_0_18_32)))
 (let ((?x109628 (* 2.0 l_0_18_24)))
 (let ((?x111007 (* ?x109628 l_0_18_31)))
 (let ((?x109284 (* 2.0 l_0_18_23)))
 (let ((?x111005 (* ?x109284 l_0_18_30)))
 (let ((?x109623 (* 2.0 l_0_18_22)))
 (let ((?x111003 (* ?x109623 l_0_18_29)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x87835 (* ?x108954 l_0_18_152)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x11774 (* ?x109081 l_0_18_151)))
 (let ((?x69817 (+ (* (* 1.0 l_0_18_110) l_0_18_115) (* (* 1.0 l_0_18_111) l_0_18_116))))
 (let ((?x13225 (- (+ (- (- ?x69817 ?x11774) ?x87835) ?x111003) (* (* 2.0 l_0_18_223) l_0_18_238))))
 (let ((?x13211 (- (- ?x13225 (* (* 2.0 l_0_18_224) l_0_18_239)) (* (* 2.0 l_0_18_225) l_0_18_240))))
 (let ((?x89904 (+ (+ (+ (- ?x13211 (* (* 2.0 l_0_18_226) l_0_18_241)) ?x111005) ?x111007) ?x111010)))
 (let ((?x89905 (+ (+ (- (- (- (+ (- ?x89904 ?x112523) ?x111013) ?x112525) ?x112527) ?x112529) ?x111016) ?x111019)))
 (let ((?x112755 (+ (+ (+ (+ (+ (+ (+ ?x89905 ?x89906) ?x112739) ?x112742) ?x112745) ?x112748) ?x112751) ?x112754)))
 (let ((?x112762 (- (- (- (- (- (- (- ?x112755 ?x111022) ?x111025) ?x111028) ?x111031) ?x111034) ?x111037) ?x111040)))
 (let ((?x112766 (- (- ?x112762 (* (* 1.0 l_0_18_74) l_0_18_79)) (* (* 1.0 l_0_18_75) l_0_18_80))))
 (= ?x112766 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x111211 (* l_0_18_72 l_0_18_72)))
 (let ((?x111209 (* l_0_18_71 l_0_18_71)))
 (let ((?x111207 (* l_0_18_70 l_0_18_70)))
 (let ((?x111205 (* l_0_18_69 l_0_18_69)))
 (let ((?x111203 (* l_0_18_68 l_0_18_68)))
 (let ((?x111201 (* l_0_18_67 l_0_18_67)))
 (let ((?x111199 (* l_0_18_66 l_0_18_66)))
 (let ((?x111197 (* l_0_18_65 l_0_18_65)))
 (let ((?x111195 (* l_0_18_36 l_0_18_36)))
 (let ((?x111193 (* l_0_18_35 l_0_18_35)))
 (let ((?x111191 (* l_0_18_34 l_0_18_34)))
 (let ((?x111189 (* l_0_18_33 l_0_18_33)))
 (let ((?x112790 (* l_0_18_324 l_0_18_324)))
 (let ((?x112788 (* l_0_18_323 l_0_18_323)))
 (let ((?x112786 (* l_0_18_322 l_0_18_322)))
 (let ((?x90003 (* l_0_18_321 l_0_18_321)))
 (let ((?x13441 (* l_0_18_320 l_0_18_320)))
 (let ((?x111187 (* l_0_18_32 l_0_18_32)))
 (let ((?x13411 (* l_0_18_319 l_0_18_319)))
 (let ((?x13530 (* l_0_18_318 l_0_18_318)))
 (let ((?x13537 (* l_0_18_317 l_0_18_317)))
 (let ((?x111185 (* l_0_18_31 l_0_18_31)))
 (let ((?x111183 (* l_0_18_30 l_0_18_30)))
 (let ((?x111181 (* l_0_18_29 l_0_18_29)))
 (let ((?x13369 (- (* (* (- 2.0) l_0_18_223) l_0_18_245) (* (* 2.0 l_0_18_224) l_0_18_246))))
 (let ((?x86339 (- (- ?x13369 (* (* 2.0 l_0_18_225) l_0_18_247)) (* (* 2.0 l_0_18_226) l_0_18_248))))
 (let ((?x90116 (+ (+ (+ (+ (+ (+ (+ ?x86339 ?x111181) ?x111183) ?x111185) ?x13537) ?x13530) ?x13411) ?x111187)))
 (let ((?x112793 (+ (+ (+ (+ (+ (+ (+ ?x90116 ?x13441) ?x90003) ?x112786) ?x112788) ?x112790) ?x111189) ?x111191)))
 (let ((?x112800 (- (- (- (- (- (+ (+ ?x112793 ?x111193) ?x111195) ?x111197) ?x111199) ?x111201) ?x111203) ?x111205)))
 (= (- (- (- ?x112800 ?x111207) ?x111209) ?x111211) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x108632 (* l_0_18_145 l_0_18_145)))
 (let ((?x86615 (* l_0_18_109 l_0_18_109)))
 (let ((?x47845 (* (/ 1.0 2.0) ?x86615)))
 (= (- (- ?x47845 ?x108632) (* (* (/ 1.0 2.0) l_0_18_73) l_0_18_73)) 0.0)))))
(assert
 (let ((?x112754 (* (* 2.0 l_0_18_316) l_0_18_323)))
 (let ((?x112751 (* (* 2.0 l_0_18_315) l_0_18_322)))
 (let ((?x112748 (* (* 2.0 l_0_18_314) l_0_18_321)))
 (let ((?x112745 (* (* 2.0 l_0_18_313) l_0_18_320)))
 (let ((?x112742 (* (* 2.0 l_0_18_312) l_0_18_319)))
 (let ((?x112739 (* (* 2.0 l_0_18_311) l_0_18_318)))
 (let ((?x89906 (* (* 2.0 l_0_18_310) l_0_18_317)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x112841 (* ?x111446 l_0_18_281)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108670 (* ?x108669 l_0_18_146)))
 (let ((?x90191 (+ (* (* 2.0 l_0_18_100) l_0_18_107) (* (* 2.0 l_0_18_101) l_0_18_94))))
 (let ((?x90192 (+ (+ ?x90191 (* (* 2.0 l_0_18_102) l_0_18_95)) (* (* 2.0 l_0_18_103) l_0_18_96))))
 (let ((?x13541 (+ (+ ?x90192 (* (* 2.0 l_0_18_104) l_0_18_97)) (* (* 2.0 l_0_18_105) l_0_18_98))))
 (let ((?x47798 (+ (+ ?x13541 (* (* 2.0 l_0_18_106) l_0_18_99)) (* (* 1.0 l_0_18_109) l_0_18_110))))
 (let ((?x112822 (- (- ?x47798 (* (* 2.0 l_0_18_130) l_0_18_137)) (* (* 2.0 l_0_18_131) l_0_18_138))))
 (let ((?x112828 (- (- ?x112822 (* (* 2.0 l_0_18_132) l_0_18_139)) (* (* 2.0 l_0_18_133) l_0_18_140))))
 (let ((?x112834 (- (- ?x112828 (* (* 2.0 l_0_18_134) l_0_18_141)) (* (* 2.0 l_0_18_135) l_0_18_142))))
 (let ((?x112840 (- (- (- ?x112834 (* (* 2.0 l_0_18_136) l_0_18_143)) ?x108670) (* (* 2.0 l_0_18_217) l_0_18_238))))
 (let ((?x112848 (+ (+ (+ (+ (+ (+ (- ?x112840 ?x112841) ?x89906) ?x112739) ?x112742) ?x112745) ?x112748) ?x112751)))
 (= (- (+ ?x112848 ?x112754) (* (* 1.0 l_0_18_73) l_0_18_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108748 (* ?x108669 l_0_18_151)))
 (let ((?x47879 (- (- (* (* 1.0 l_0_18_109) l_0_18_115) ?x108748) (* (* 1.0 l_0_18_73) l_0_18_79))))
 (= ?x47879 0.0)))))
(assert
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108766 (* ?x108669 l_0_18_155)))
 (let ((?x112899 (- (- (* (* 1.0 l_0_18_109) l_0_18_119) ?x108766) (* (* 1.0 l_0_18_73) l_0_18_83))))
 (= ?x112899 0.0)))))
(assert
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108790 (* ?x108669 l_0_18_160)))
 (let ((?x112911 (- (- (* (* 1.0 l_0_18_109) l_0_18_124) ?x108790) (* (* 1.0 l_0_18_73) l_0_18_88))))
 (= ?x112911 0.0)))))
(assert
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108817 (* ?x108669 l_0_18_166)))
 (let ((?x112920 (- (- (* (* 1.0 l_0_18_109) l_0_18_130) ?x108817) (* (* 1.0 l_0_18_73) l_0_18_94))))
 (= ?x112920 0.0)))))
(assert
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108844 (* ?x108669 l_0_18_173)))
 (let ((?x112931 (+ (* (* (- 1.0) l_0_18_101) l_0_18_73) (* (* 1.0 l_0_18_109) l_0_18_137))))
 (= (- ?x112931 ?x108844) 0.0)))))
(assert
 (let ((?x112994 (* (* 2.0 l_0_18_280) l_0_18_287)))
 (let ((?x112991 (* (* 2.0 l_0_18_279) l_0_18_286)))
 (let ((?x112988 (* (* 2.0 l_0_18_278) l_0_18_285)))
 (let ((?x112985 (* (* 2.0 l_0_18_277) l_0_18_284)))
 (let ((?x112982 (* (* 2.0 l_0_18_276) l_0_18_283)))
 (let ((?x112979 (* (* 2.0 l_0_18_275) l_0_18_282)))
 (let ((?x112976 (* (* 2.0 l_0_18_274) l_0_18_281)))
 (let ((?x112972 (* 2.0 l_0_18_267)))
 (let ((?x112973 (* ?x112972 l_0_18_285)))
 (let ((?x112969 (* 2.0 l_0_18_266)))
 (let ((?x112970 (* ?x112969 l_0_18_284)))
 (let ((?x112966 (* 2.0 l_0_18_265)))
 (let ((?x112967 (* ?x112966 l_0_18_283)))
 (let ((?x112963 (* 2.0 l_0_18_264)))
 (let ((?x112964 (* ?x112963 l_0_18_282)))
 (let ((?x112960 (* 2.0 l_0_18_263)))
 (let ((?x112961 (* ?x112960 l_0_18_281)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x109084 (* ?x108954 l_0_18_156)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x109082 (* ?x109081 l_0_18_155)))
 (let ((?x112942 (+ (* (* 1.0 l_0_18_110) l_0_18_119) (* (* 1.0 l_0_18_111) l_0_18_120))))
 (let ((?x112950 (- (- (- (- ?x112942 ?x109082) ?x109084) (* (* 2.0 l_0_18_227) l_0_18_238)) (* (* 2.0 l_0_18_228) l_0_18_239))))
 (let ((?x112956 (- (- ?x112950 (* (* 2.0 l_0_18_229) l_0_18_240)) (* (* 2.0 l_0_18_230) l_0_18_241))))
 (let ((?x112968 (- (- (- (- ?x112956 (* (* 2.0 l_0_18_231) l_0_18_242)) ?x112961) ?x112964) ?x112967)))
 (let ((?x112989 (+ (+ (+ (+ (+ (- (- ?x112968 ?x112970) ?x112973) ?x112976) ?x112979) ?x112982) ?x112985) ?x112988)))
 (let ((?x112999 (- (- (+ (+ ?x112989 ?x112991) ?x112994) (* (* 1.0 l_0_18_74) l_0_18_83)) (* (* 1.0 l_0_18_75) l_0_18_84))))
 (= ?x112999 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x112754 (* (* 2.0 l_0_18_316) l_0_18_323)))
 (let ((?x112751 (* (* 2.0 l_0_18_315) l_0_18_322)))
 (let ((?x112748 (* (* 2.0 l_0_18_314) l_0_18_321)))
 (let ((?x112745 (* (* 2.0 l_0_18_313) l_0_18_320)))
 (let ((?x112742 (* (* 2.0 l_0_18_312) l_0_18_319)))
 (let ((?x112739 (* (* 2.0 l_0_18_311) l_0_18_318)))
 (let ((?x89906 (* (* 2.0 l_0_18_310) l_0_18_317)))
 (let ((?x113116 (* 2.0 l_0_18_273)))
 (let ((?x113117 (* ?x113116 l_0_18_286)))
 (let ((?x113113 (* 2.0 l_0_18_272)))
 (let ((?x113114 (* ?x113113 l_0_18_285)))
 (let ((?x113110 (* 2.0 l_0_18_271)))
 (let ((?x113111 (* ?x113110 l_0_18_284)))
 (let ((?x113107 (* 2.0 l_0_18_270)))
 (let ((?x113108 (* ?x113107 l_0_18_283)))
 (let ((?x113104 (* 2.0 l_0_18_269)))
 (let ((?x113105 (* ?x113104 l_0_18_282)))
 (let ((?x113101 (* 2.0 l_0_18_268)))
 (let ((?x113102 (* ?x113101 l_0_18_281)))
 (let ((?x111001 (* (* 2.0 l_0_18_208) l_0_18_215)))
 (let ((?x110998 (* (* 2.0 l_0_18_207) l_0_18_214)))
 (let ((?x110995 (* (* 2.0 l_0_18_206) l_0_18_213)))
 (let ((?x110992 (* (* 2.0 l_0_18_205) l_0_18_212)))
 (let ((?x110989 (* (* 2.0 l_0_18_204) l_0_18_211)))
 (let ((?x110986 (* (* 2.0 l_0_18_203) l_0_18_210)))
 (let ((?x110983 (* (* 2.0 l_0_18_202) l_0_18_209)))
 (let ((?x110980 (* (* 2.0 l_0_18_172) l_0_18_179)))
 (let ((?x110977 (* (* 2.0 l_0_18_171) l_0_18_178)))
 (let ((?x110974 (* (* 2.0 l_0_18_170) l_0_18_177)))
 (let ((?x110971 (* (* 2.0 l_0_18_169) l_0_18_176)))
 (let ((?x110968 (* (* 2.0 l_0_18_168) l_0_18_175)))
 (let ((?x110965 (* (* 2.0 l_0_18_167) l_0_18_174)))
 (let ((?x110962 (* (* 2.0 l_0_18_166) l_0_18_173)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x109141 (* ?x108954 l_0_18_161)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x113066 (* ?x109081 l_0_18_160)))
 (let ((?x113065 (+ (* (* 1.0 l_0_18_110) l_0_18_124) (* (* 1.0 l_0_18_111) l_0_18_125))))
 (let ((?x113073 (+ (+ (+ (+ (+ (- (- ?x113065 ?x113066) ?x109141) ?x110962) ?x110965) ?x110968) ?x110971) ?x110974)))
 (let ((?x113080 (- (- (- (- (- (+ (+ ?x113073 ?x110977) ?x110980) ?x110983) ?x110986) ?x110989) ?x110992) ?x110995)))
 (let ((?x113088 (- (- (- (- ?x113080 ?x110998) ?x111001) (* (* 2.0 l_0_18_232) l_0_18_238)) (* (* 2.0 l_0_18_233) l_0_18_239))))
 (let ((?x113094 (- (- ?x113088 (* (* 2.0 l_0_18_234) l_0_18_240)) (* (* 2.0 l_0_18_235) l_0_18_241))))
 (let ((?x113100 (- (- ?x113094 (* (* 2.0 l_0_18_236) l_0_18_242)) (* (* 2.0 l_0_18_237) l_0_18_243))))
 (let ((?x113119 (- (- (- (- (- (- (- ?x113100 ?x113102) ?x113105) ?x113108) ?x113111) ?x113114) ?x113117) ?x89906)))
 (let ((?x113127 (- (- (- (- (- (- (- ?x113119 ?x112739) ?x112742) ?x112745) ?x112748) ?x112751) ?x112754) (* (* 1.0 l_0_18_74) l_0_18_88))))
 (= (- ?x113127 (* (* 1.0 l_0_18_75) l_0_18_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x112994 (* (* 2.0 l_0_18_280) l_0_18_287)))
 (let ((?x112991 (* (* 2.0 l_0_18_279) l_0_18_286)))
 (let ((?x112988 (* (* 2.0 l_0_18_278) l_0_18_285)))
 (let ((?x112985 (* (* 2.0 l_0_18_277) l_0_18_284)))
 (let ((?x112982 (* (* 2.0 l_0_18_276) l_0_18_283)))
 (let ((?x112979 (* (* 2.0 l_0_18_275) l_0_18_282)))
 (let ((?x112976 (* (* 2.0 l_0_18_274) l_0_18_281)))
 (let ((?x113153 (* l_0_18_244 l_0_18_244)))
 (let ((?x113151 (* l_0_18_243 l_0_18_243)))
 (let ((?x113149 (* l_0_18_242 l_0_18_242)))
 (let ((?x113147 (* l_0_18_241 l_0_18_241)))
 (let ((?x113145 (* l_0_18_240 l_0_18_240)))
 (let ((?x90673 (* l_0_18_239 l_0_18_239)))
 (let ((?x90669 (* l_0_18_238 l_0_18_238)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x109270 (* ?x108954 l_0_18_167)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x109267 (* ?x109081 l_0_18_166)))
 (let ((?x90647 (+ (* (* 1.0 l_0_18_110) l_0_18_130) (* (* 1.0 l_0_18_111) l_0_18_131))))
 (let ((?x113150 (- (- (- (- (- (- (- ?x90647 ?x109267) ?x109270) ?x90669) ?x90673) ?x113145) ?x113147) ?x113149)))
 (let ((?x113159 (- (- (- (- (- (- (- ?x113150 ?x113151) ?x113153) ?x112976) ?x112979) ?x112982) ?x112985) ?x112988)))
 (let ((?x113165 (- (- (- (- ?x113159 ?x112991) ?x112994) (* (* 1.0 l_0_18_74) l_0_18_94)) (* (* 1.0 l_0_18_75) l_0_18_95))))
 (= ?x113165 0.0))))))))))))))))))))))))
(assert
 (let ((?x113214 (* l_0_18_288 l_0_18_288)))
 (let ((?x113212 (* l_0_18_287 l_0_18_287)))
 (let ((?x113210 (* l_0_18_286 l_0_18_286)))
 (let ((?x113208 (* l_0_18_285 l_0_18_285)))
 (let ((?x113206 (* l_0_18_284 l_0_18_284)))
 (let ((?x113204 (* l_0_18_283 l_0_18_283)))
 (let ((?x113202 (* l_0_18_282 l_0_18_282)))
 (let ((?x113200 (* l_0_18_281 l_0_18_281)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x65861 (* ?x108954 l_0_18_174)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x90731 (* ?x109081 l_0_18_173)))
 (let ((?x48104 (- (* (* (- 1.0) l_0_18_101) l_0_18_74) (* (* 1.0 l_0_18_102) l_0_18_75))))
 (let ((?x90730 (+ (+ ?x48104 (* (* 1.0 l_0_18_110) l_0_18_137)) (* (* 1.0 l_0_18_111) l_0_18_138))))
 (let ((?x113184 (- (- (- (- ?x90730 ?x90731) ?x65861) (* (* 2.0 l_0_18_238) l_0_18_245)) (* (* 2.0 l_0_18_239) l_0_18_246))))
 (let ((?x113190 (- (- ?x113184 (* (* 2.0 l_0_18_240) l_0_18_247)) (* (* 2.0 l_0_18_241) l_0_18_248))))
 (let ((?x113196 (- (- ?x113190 (* (* 2.0 l_0_18_242) l_0_18_249)) (* (* 2.0 l_0_18_243) l_0_18_250))))
 (let ((?x113205 (- (- (- (- ?x113196 (* (* 2.0 l_0_18_244) l_0_18_251)) ?x113200) ?x113202) ?x113204)))
 (= (- (- (- (- (- ?x113205 ?x113206) ?x113208) ?x113210) ?x113212) ?x113214) 0.0))))))))))))))))))))
(assert
 (let ((?x109688 (* l_0_18_154 l_0_18_154)))
 (let ((?x109686 (* l_0_18_153 l_0_18_153)))
 (let ((?x88205 (* l_0_18_152 l_0_18_152)))
 (let ((?x88217 (* l_0_18_151 l_0_18_151)))
 (let ((?x111399 (* l_0_18_118 l_0_18_118)))
 (let ((?x113254 (* (/ 1.0 2.0) ?x111399)))
 (let ((?x111397 (* l_0_18_117 l_0_18_117)))
 (let ((?x113252 (* (/ 1.0 2.0) ?x111397)))
 (let ((?x68192 (* l_0_18_116 l_0_18_116)))
 (let ((?x113250 (* (/ 1.0 2.0) ?x68192)))
 (let ((?x88511 (* l_0_18_115 l_0_18_115)))
 (let ((?x113249 (* (/ 1.0 2.0) ?x88511)))
 (let ((?x113259 (- (- (- (- (+ (+ (+ ?x113249 ?x113250) ?x113252) ?x113254) ?x88217) ?x88205) ?x109686) ?x109688)))
 (let ((?x113265 (- (- ?x113259 (* (* (/ 1.0 2.0) l_0_18_79) l_0_18_79)) (* (* (/ 1.0 2.0) l_0_18_80) l_0_18_80))))
 (let ((?x113271 (- (- ?x113265 (* (* (/ 1.0 2.0) l_0_18_81) l_0_18_81)) (* (* (/ 1.0 2.0) l_0_18_82) l_0_18_82))))
 (= ?x113271 0.0)))))))))))))))))
(assert
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109758 (* ?x109757 l_0_18_158)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109755 (* ?x109754 l_0_18_157)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109752 (* ?x109751 l_0_18_156)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x109749 (* ?x109748 l_0_18_155)))
 (let ((?x113276 (+ (* (* 1.0 l_0_18_115) l_0_18_119) (* (* 1.0 l_0_18_116) l_0_18_120))))
 (let ((?x113282 (+ (+ ?x113276 (* (* 1.0 l_0_18_117) l_0_18_121)) (* (* 1.0 l_0_18_118) l_0_18_122))))
 (let ((?x113289 (- (- (- (- (- ?x113282 ?x109749) ?x109752) ?x109755) ?x109758) (* (* 1.0 l_0_18_79) l_0_18_83))))
 (let ((?x113295 (- (- ?x113289 (* (* 1.0 l_0_18_80) l_0_18_84)) (* (* 1.0 l_0_18_81) l_0_18_85))))
 (= (- ?x113295 (* (* 1.0 l_0_18_82) l_0_18_86)) 0.0))))))))))))))
(assert
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109823 (* ?x109757 l_0_18_163)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109819 (* ?x109754 l_0_18_162)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109815 (* ?x109751 l_0_18_161)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x7589 (* ?x109748 l_0_18_160)))
 (let ((?x113320 (+ (* (* 1.0 l_0_18_115) l_0_18_124) (* (* 1.0 l_0_18_116) l_0_18_125))))
 (let ((?x113324 (+ (+ ?x113320 (* (* 1.0 l_0_18_117) l_0_18_126)) (* (* 1.0 l_0_18_118) l_0_18_127))))
 (let ((?x113330 (- (- (- (- (- ?x113324 ?x7589) ?x109815) ?x109819) ?x109823) (* (* 1.0 l_0_18_79) l_0_18_88))))
 (let ((?x113334 (- (- ?x113330 (* (* 1.0 l_0_18_80) l_0_18_89)) (* (* 1.0 l_0_18_81) l_0_18_90))))
 (= (- ?x113334 (* (* 1.0 l_0_18_82) l_0_18_91)) 0.0))))))))))))))
(assert
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109914 (* ?x109757 l_0_18_169)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109912 (* ?x109754 l_0_18_168)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109910 (* ?x109751 l_0_18_167)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x109908 (* ?x109748 l_0_18_166)))
 (let ((?x90903 (+ (* (* 1.0 l_0_18_115) l_0_18_130) (* (* 1.0 l_0_18_116) l_0_18_131))))
 (let ((?x90916 (+ (+ ?x90903 (* (* 1.0 l_0_18_117) l_0_18_132)) (* (* 1.0 l_0_18_118) l_0_18_133))))
 (let ((?x113351 (- (- (- (- (- ?x90916 ?x109908) ?x109910) ?x109912) ?x109914) (* (* 1.0 l_0_18_79) l_0_18_94))))
 (let ((?x113355 (- (- ?x113351 (* (* 1.0 l_0_18_80) l_0_18_95)) (* (* 1.0 l_0_18_81) l_0_18_96))))
 (= (- ?x113355 (* (* 1.0 l_0_18_82) l_0_18_97)) 0.0))))))))))))))
(assert
 (let ((?x109757 (* 2.0 l_0_18_154)))
 (let ((?x109996 (* ?x109757 l_0_18_176)))
 (let ((?x109754 (* 2.0 l_0_18_153)))
 (let ((?x109994 (* ?x109754 l_0_18_175)))
 (let ((?x109751 (* 2.0 l_0_18_152)))
 (let ((?x109992 (* ?x109751 l_0_18_174)))
 (let ((?x109748 (* 2.0 l_0_18_151)))
 (let ((?x109990 (* ?x109748 l_0_18_173)))
 (let ((?x113382 (- (* (* (- 1.0) l_0_18_101) l_0_18_79) (* (* 1.0 l_0_18_102) l_0_18_80))))
 (let ((?x113387 (- (- ?x113382 (* (* 1.0 l_0_18_103) l_0_18_81)) (* (* 1.0 l_0_18_104) l_0_18_82))))
 (let ((?x113391 (+ (+ ?x113387 (* (* 1.0 l_0_18_115) l_0_18_137)) (* (* 1.0 l_0_18_116) l_0_18_138))))
 (let ((?x113395 (+ (+ ?x113391 (* (* 1.0 l_0_18_117) l_0_18_139)) (* (* 1.0 l_0_18_118) l_0_18_140))))
 (= (- (- (- (- ?x113395 ?x109990) ?x109992) ?x109994) ?x109996) 0.0))))))))))))))
(assert
 (let ((?x110078 (* l_0_18_159 l_0_18_159)))
 (let ((?x110076 (* l_0_18_158 l_0_18_158)))
 (let ((?x110074 (* l_0_18_157 l_0_18_157)))
 (let ((?x110072 (* l_0_18_156 l_0_18_156)))
 (let ((?x110070 (* l_0_18_155 l_0_18_155)))
 (let ((?x113420 (+ (* (/ 1.0 2.0) (* l_0_18_119 l_0_18_119)) (* (/ 1.0 2.0) (* l_0_18_120 l_0_18_120)))))
 (let ((?x113426 (+ (+ ?x113420 (* (/ 1.0 2.0) (* l_0_18_121 l_0_18_121))) (* (/ 1.0 2.0) (* l_0_18_122 l_0_18_122)))))
 (let ((?x113432 (- (- (- (+ ?x113426 (* (/ 1.0 2.0) (* l_0_18_123 l_0_18_123))) ?x110070) ?x110072) ?x110074)))
 (let ((?x113440 (- (- (- (- ?x113432 ?x110076) ?x110078) (* (* (/ 1.0 2.0) l_0_18_83) l_0_18_83)) (* (* (/ 1.0 2.0) l_0_18_84) l_0_18_84))))
 (let ((?x113446 (- (- ?x113440 (* (* (/ 1.0 2.0) l_0_18_85) l_0_18_85)) (* (* (/ 1.0 2.0) l_0_18_86) l_0_18_86))))
 (= (- ?x113446 (* (* (/ 1.0 2.0) l_0_18_87) l_0_18_87)) 0.0))))))))))))
(assert
 (let ((?x110156 (* 2.0 l_0_18_159)))
 (let ((?x110157 (* ?x110156 l_0_18_164)))
 (let ((?x110153 (* 2.0 l_0_18_158)))
 (let ((?x110154 (* ?x110153 l_0_18_163)))
 (let ((?x110150 (* 2.0 l_0_18_157)))
 (let ((?x110151 (* ?x110150 l_0_18_162)))
 (let ((?x110147 (* 2.0 l_0_18_156)))
 (let ((?x110148 (* ?x110147 l_0_18_161)))
 (let ((?x110144 (* 2.0 l_0_18_155)))
 (let ((?x110145 (* ?x110144 l_0_18_160)))
 (let ((?x113452 (+ (* (* 1.0 l_0_18_119) l_0_18_124) (* (* 1.0 l_0_18_120) l_0_18_125))))
 (let ((?x113458 (+ (+ ?x113452 (* (* 1.0 l_0_18_121) l_0_18_126)) (* (* 1.0 l_0_18_122) l_0_18_127))))
 (let ((?x113464 (- (- (- (+ ?x113458 (* (* 1.0 l_0_18_123) l_0_18_128)) ?x110145) ?x110148) ?x110151)))
 (let ((?x113472 (- (- (- (- ?x113464 ?x110154) ?x110157) (* (* 1.0 l_0_18_83) l_0_18_88)) (* (* 1.0 l_0_18_84) l_0_18_89))))
 (let ((?x113478 (- (- ?x113472 (* (* 1.0 l_0_18_85) l_0_18_90)) (* (* 1.0 l_0_18_86) l_0_18_91))))
 (= (- ?x113478 (* (* 1.0 l_0_18_87) l_0_18_92)) 0.0)))))))))))))))))
(assert
 (let ((?x110156 (* 2.0 l_0_18_159)))
 (let ((?x110264 (* ?x110156 l_0_18_170)))
 (let ((?x110153 (* 2.0 l_0_18_158)))
 (let ((?x110262 (* ?x110153 l_0_18_169)))
 (let ((?x110150 (* 2.0 l_0_18_157)))
 (let ((?x110260 (* ?x110150 l_0_18_168)))
 (let ((?x110147 (* 2.0 l_0_18_156)))
 (let ((?x110258 (* ?x110147 l_0_18_167)))
 (let ((?x110144 (* 2.0 l_0_18_155)))
 (let ((?x110256 (* ?x110144 l_0_18_166)))
 (let ((?x113505 (+ (* (* 1.0 l_0_18_119) l_0_18_130) (* (* 1.0 l_0_18_120) l_0_18_131))))
 (let ((?x113509 (+ (+ ?x113505 (* (* 1.0 l_0_18_121) l_0_18_132)) (* (* 1.0 l_0_18_122) l_0_18_133))))
 (let ((?x113514 (- (- (- (+ ?x113509 (* (* 1.0 l_0_18_123) l_0_18_134)) ?x110256) ?x110258) ?x110260)))
 (let ((?x113520 (- (- (- (- ?x113514 ?x110262) ?x110264) (* (* 1.0 l_0_18_83) l_0_18_94)) (* (* 1.0 l_0_18_84) l_0_18_95))))
 (let ((?x113524 (- (- ?x113520 (* (* 1.0 l_0_18_85) l_0_18_96)) (* (* 1.0 l_0_18_86) l_0_18_97))))
 (= (- ?x113524 (* (* 1.0 l_0_18_87) l_0_18_98)) 0.0)))))))))))))))))
(assert
 (let ((?x110156 (* 2.0 l_0_18_159)))
 (let ((?x110378 (* ?x110156 l_0_18_177)))
 (let ((?x110153 (* 2.0 l_0_18_158)))
 (let ((?x110376 (* ?x110153 l_0_18_176)))
 (let ((?x110150 (* 2.0 l_0_18_157)))
 (let ((?x110374 (* ?x110150 l_0_18_175)))
 (let ((?x110147 (* 2.0 l_0_18_156)))
 (let ((?x110372 (* ?x110147 l_0_18_174)))
 (let ((?x110144 (* 2.0 l_0_18_155)))
 (let ((?x110370 (* ?x110144 l_0_18_173)))
 (let ((?x113543 (- (* (* (- 1.0) l_0_18_101) l_0_18_83) (* (* 1.0 l_0_18_102) l_0_18_84))))
 (let ((?x113547 (- (- ?x113543 (* (* 1.0 l_0_18_103) l_0_18_85)) (* (* 1.0 l_0_18_104) l_0_18_86))))
 (let ((?x113552 (+ (- ?x113547 (* (* 1.0 l_0_18_105) l_0_18_87)) (* (* 1.0 l_0_18_119) l_0_18_137))))
 (let ((?x113556 (+ (+ ?x113552 (* (* 1.0 l_0_18_120) l_0_18_138)) (* (* 1.0 l_0_18_121) l_0_18_139))))
 (let ((?x113560 (+ (+ ?x113556 (* (* 1.0 l_0_18_122) l_0_18_140)) (* (* 1.0 l_0_18_123) l_0_18_141))))
 (= (- (- (- (- (- ?x113560 ?x110370) ?x110372) ?x110374) ?x110376) ?x110378) 0.0)))))))))))))))))
(assert
 (let ((?x110474 (* l_0_18_165 l_0_18_165)))
 (let ((?x110459 (* l_0_18_164 l_0_18_164)))
 (let ((?x110456 (* l_0_18_163 l_0_18_163)))
 (let ((?x110452 (* l_0_18_162 l_0_18_162)))
 (let ((?x110448 (* l_0_18_161 l_0_18_161)))
 (let ((?x110444 (* l_0_18_160 l_0_18_160)))
 (let ((?x113594 (+ (* (/ 1.0 2.0) (* l_0_18_124 l_0_18_124)) (* (/ 1.0 2.0) (* l_0_18_125 l_0_18_125)))))
 (let ((?x113600 (+ (+ ?x113594 (* (/ 1.0 2.0) (* l_0_18_126 l_0_18_126))) (* (/ 1.0 2.0) (* l_0_18_127 l_0_18_127)))))
 (let ((?x113606 (+ (+ ?x113600 (* (/ 1.0 2.0) (* l_0_18_128 l_0_18_128))) (* (/ 1.0 2.0) (* l_0_18_129 l_0_18_129)))))
 (let ((?x113615 (- (- (- (- (- (- (- ?x113606 ?x110444) ?x110448) ?x110452) ?x110456) ?x110459) ?x110474) (* (* (/ 1.0 2.0) l_0_18_88) l_0_18_88))))
 (let ((?x113621 (- (- ?x113615 (* (* (/ 1.0 2.0) l_0_18_89) l_0_18_89)) (* (* (/ 1.0 2.0) l_0_18_90) l_0_18_90))))
 (let ((?x113627 (- (- ?x113621 (* (* (/ 1.0 2.0) l_0_18_91) l_0_18_91)) (* (* (/ 1.0 2.0) l_0_18_92) l_0_18_92))))
 (= (- ?x113627 (* (* (/ 1.0 2.0) l_0_18_93) l_0_18_93)) 0.0))))))))))))))
(assert
 (let ((?x110583 (* 2.0 l_0_18_165)))
 (let ((?x110584 (* ?x110583 l_0_18_171)))
 (let ((?x110580 (* 2.0 l_0_18_164)))
 (let ((?x110581 (* ?x110580 l_0_18_170)))
 (let ((?x110577 (* 2.0 l_0_18_163)))
 (let ((?x110578 (* ?x110577 l_0_18_169)))
 (let ((?x110574 (* 2.0 l_0_18_162)))
 (let ((?x110575 (* ?x110574 l_0_18_168)))
 (let ((?x110571 (* 2.0 l_0_18_161)))
 (let ((?x110572 (* ?x110571 l_0_18_167)))
 (let ((?x110568 (* 2.0 l_0_18_160)))
 (let ((?x110569 (* ?x110568 l_0_18_166)))
 (let ((?x113648 (+ (* (* 1.0 l_0_18_124) l_0_18_130) (* (* 1.0 l_0_18_125) l_0_18_131))))
 (let ((?x113654 (+ (+ ?x113648 (* (* 1.0 l_0_18_126) l_0_18_132)) (* (* 1.0 l_0_18_127) l_0_18_133))))
 (let ((?x113660 (+ (+ ?x113654 (* (* 1.0 l_0_18_128) l_0_18_134)) (* (* 1.0 l_0_18_129) l_0_18_135))))
 (let ((?x113669 (- (- (- (- (- (- (- ?x113660 ?x110569) ?x110572) ?x110575) ?x110578) ?x110581) ?x110584) (* (* 1.0 l_0_18_88) l_0_18_94))))
 (let ((?x113675 (- (- ?x113669 (* (* 1.0 l_0_18_89) l_0_18_95)) (* (* 1.0 l_0_18_90) l_0_18_96))))
 (let ((?x113681 (- (- ?x113675 (* (* 1.0 l_0_18_91) l_0_18_97)) (* (* 1.0 l_0_18_92) l_0_18_98))))
 (= (- ?x113681 (* (* 1.0 l_0_18_93) l_0_18_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x110583 (* 2.0 l_0_18_165)))
 (let ((?x110728 (* ?x110583 l_0_18_178)))
 (let ((?x110580 (* 2.0 l_0_18_164)))
 (let ((?x110726 (* ?x110580 l_0_18_177)))
 (let ((?x110577 (* 2.0 l_0_18_163)))
 (let ((?x110724 (* ?x110577 l_0_18_176)))
 (let ((?x110574 (* 2.0 l_0_18_162)))
 (let ((?x110722 (* ?x110574 l_0_18_175)))
 (let ((?x110571 (* 2.0 l_0_18_161)))
 (let ((?x110720 (* ?x110571 l_0_18_174)))
 (let ((?x110568 (* 2.0 l_0_18_160)))
 (let ((?x110718 (* ?x110568 l_0_18_173)))
 (let ((?x113715 (- (* (* (- 1.0) l_0_18_101) l_0_18_88) (* (* 1.0 l_0_18_102) l_0_18_89))))
 (let ((?x113719 (- (- ?x113715 (* (* 1.0 l_0_18_103) l_0_18_90)) (* (* 1.0 l_0_18_104) l_0_18_91))))
 (let ((?x113724 (- (- ?x113719 (* (* 1.0 l_0_18_105) l_0_18_92)) (* (* 1.0 l_0_18_106) l_0_18_93))))
 (let ((?x113728 (+ (+ ?x113724 (* (* 1.0 l_0_18_124) l_0_18_137)) (* (* 1.0 l_0_18_125) l_0_18_138))))
 (let ((?x113732 (+ (+ ?x113728 (* (* 1.0 l_0_18_126) l_0_18_139)) (* (* 1.0 l_0_18_127) l_0_18_140))))
 (let ((?x113736 (+ (+ ?x113732 (* (* 1.0 l_0_18_128) l_0_18_141)) (* (* 1.0 l_0_18_129) l_0_18_142))))
 (= (- (- (- (- (- (- ?x113736 ?x110718) ?x110720) ?x110722) ?x110724) ?x110726) ?x110728) 0.0))))))))))))))))))))
(assert
 (let ((?x110839 (* l_0_18_172 l_0_18_172)))
 (let ((?x110837 (* l_0_18_171 l_0_18_171)))
 (let ((?x110835 (* l_0_18_170 l_0_18_170)))
 (let ((?x110833 (* l_0_18_169 l_0_18_169)))
 (let ((?x110831 (* l_0_18_168 l_0_18_168)))
 (let ((?x110829 (* l_0_18_167 l_0_18_167)))
 (let ((?x110827 (* l_0_18_166 l_0_18_166)))
 (let ((?x113768 (+ (* (* (- (/ 1.0 2.0)) l_0_18_100) l_0_18_100) (* (/ 1.0 2.0) (* l_0_18_130 l_0_18_130)))))
 (let ((?x113774 (+ (+ ?x113768 (* (/ 1.0 2.0) (* l_0_18_131 l_0_18_131))) (* (/ 1.0 2.0) (* l_0_18_132 l_0_18_132)))))
 (let ((?x113780 (+ (+ ?x113774 (* (/ 1.0 2.0) (* l_0_18_133 l_0_18_133))) (* (/ 1.0 2.0) (* l_0_18_134 l_0_18_134)))))
 (let ((?x113786 (+ (+ ?x113780 (* (/ 1.0 2.0) (* l_0_18_135 l_0_18_135))) (* (/ 1.0 2.0) (* l_0_18_136 l_0_18_136)))))
 (let ((?x113793 (- (- (- (- (- (- (- ?x113786 ?x110827) ?x110829) ?x110831) ?x110833) ?x110835) ?x110837) ?x110839)))
 (let ((?x113799 (- (- ?x113793 (* (* (/ 1.0 2.0) l_0_18_94) l_0_18_94)) (* (* (/ 1.0 2.0) l_0_18_95) l_0_18_95))))
 (let ((?x113805 (- (- ?x113799 (* (* (/ 1.0 2.0) l_0_18_96) l_0_18_96)) (* (* (/ 1.0 2.0) l_0_18_97) l_0_18_97))))
 (let ((?x113811 (- (- ?x113805 (* (* (/ 1.0 2.0) l_0_18_98) l_0_18_98)) (* (* (/ 1.0 2.0) l_0_18_99) l_0_18_99))))
 (= ?x113811 0.0)))))))))))))))))
(assert
 (let ((?x110980 (* (* 2.0 l_0_18_172) l_0_18_179)))
 (let ((?x110977 (* (* 2.0 l_0_18_171) l_0_18_178)))
 (let ((?x110974 (* (* 2.0 l_0_18_170) l_0_18_177)))
 (let ((?x110971 (* (* 2.0 l_0_18_169) l_0_18_176)))
 (let ((?x110968 (* (* 2.0 l_0_18_168) l_0_18_175)))
 (let ((?x110965 (* (* 2.0 l_0_18_167) l_0_18_174)))
 (let ((?x110962 (* (* 2.0 l_0_18_166) l_0_18_173)))
 (let ((?x113838 (- (* (* (- 1.0) l_0_18_100) l_0_18_107) (* (* 1.0 l_0_18_101) l_0_18_94))))
 (let ((?x113842 (- (- ?x113838 (* (* 1.0 l_0_18_102) l_0_18_95)) (* (* 1.0 l_0_18_103) l_0_18_96))))
 (let ((?x113846 (- (- ?x113842 (* (* 1.0 l_0_18_104) l_0_18_97)) (* (* 1.0 l_0_18_105) l_0_18_98))))
 (let ((?x113851 (+ (- ?x113846 (* (* 1.0 l_0_18_106) l_0_18_99)) (* (* 1.0 l_0_18_130) l_0_18_137))))
 (let ((?x113857 (+ (+ ?x113851 (* (* 1.0 l_0_18_131) l_0_18_138)) (* (* 1.0 l_0_18_132) l_0_18_139))))
 (let ((?x113863 (+ (+ ?x113857 (* (* 1.0 l_0_18_133) l_0_18_140)) (* (* 1.0 l_0_18_134) l_0_18_141))))
 (let ((?x113869 (+ (+ ?x113863 (* (* 1.0 l_0_18_135) l_0_18_142)) (* (* 1.0 l_0_18_136) l_0_18_143))))
 (let ((?x113876 (- (- (- (- (- (- (- ?x113869 ?x110962) ?x110965) ?x110968) ?x110971) ?x110974) ?x110977) ?x110980)))
 (= ?x113876 0.0)))))))))))))))))
(assert
 (let ((?x111163 (* l_0_18_180 l_0_18_180)))
 (let ((?x111161 (* l_0_18_179 l_0_18_179)))
 (let ((?x111159 (* l_0_18_178 l_0_18_178)))
 (let ((?x111157 (* l_0_18_177 l_0_18_177)))
 (let ((?x111136 (* l_0_18_176 l_0_18_176)))
 (let ((?x111132 (* l_0_18_175 l_0_18_175)))
 (let ((?x111128 (* l_0_18_174 l_0_18_174)))
 (let ((?x111215 (* l_0_18_173 l_0_18_173)))
 (let ((?x113904 (- (* (* (- (/ 1.0 2.0)) l_0_18_101) l_0_18_101) (* (* (/ 1.0 2.0) l_0_18_102) l_0_18_102))))
 (let ((?x113910 (- (- ?x113904 (* (* (/ 1.0 2.0) l_0_18_103) l_0_18_103)) (* (* (/ 1.0 2.0) l_0_18_104) l_0_18_104))))
 (let ((?x113916 (- (- ?x113910 (* (* (/ 1.0 2.0) l_0_18_105) l_0_18_105)) (* (* (/ 1.0 2.0) l_0_18_106) l_0_18_106))))
 (let ((?x113922 (- (- ?x113916 (* (* (/ 1.0 2.0) l_0_18_107) l_0_18_107)) (* (* (/ 1.0 2.0) l_0_18_108) l_0_18_108))))
 (let ((?x113928 (+ (+ ?x113922 (* (/ 1.0 2.0) (* l_0_18_137 l_0_18_137))) (* (/ 1.0 2.0) (* l_0_18_138 l_0_18_138)))))
 (let ((?x113934 (+ (+ ?x113928 (* (/ 1.0 2.0) (* l_0_18_139 l_0_18_139))) (* (/ 1.0 2.0) (* l_0_18_140 l_0_18_140)))))
 (let ((?x113940 (+ (+ ?x113934 (* (/ 1.0 2.0) (* l_0_18_141 l_0_18_141))) (* (/ 1.0 2.0) (* l_0_18_142 l_0_18_142)))))
 (let ((?x113946 (+ (+ ?x113940 (* (/ 1.0 2.0) (* l_0_18_143 l_0_18_143))) (* (/ 1.0 2.0) (* l_0_18_144 l_0_18_144)))))
 (let ((?x113953 (- (- (- (- (- (- (- ?x113946 ?x111215) ?x111128) ?x111132) ?x111136) ?x111157) ?x111159) ?x111161)))
 (= (- ?x113953 ?x111163) 0.0)))))))))))))))))))
(assert
 (let ((?x90252 (* l_0_18_73 l_0_18_73)))
 (let ((?x91385 (+ (+ (* (- l_0_18_109) l_0_18_109) (* l_0_18_289 l_0_18_289)) ?x90252)))
 (= ?x91385 0.0))))
(assert
 (let ((?x91383 (* l_0_18_397 l_0_18_397)))
 (let ((?x91386 (* l_0_18_361 l_0_18_361)))
 (let ((?x91388 (* l_0_18_325 l_0_18_325)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111293 (* ?x111268 l_0_18_290)))
 (let ((?x91384 (- (- (- (+ (* (* (- 2.0) l_0_18_109) l_0_18_110) ?x111293) ?x91388) ?x91386) ?x91383)))
 (= (+ ?x91384 (* (* 2.0 l_0_18_73) l_0_18_74)) 0.0))))))))
(assert
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111352 (* ?x111268 l_0_18_292)))
 (let ((?x114000 (+ (+ (* (* (- 2.0) l_0_18_109) l_0_18_112) ?x111352) (* (* 2.0 l_0_18_73) l_0_18_76))))
 (= ?x114000 0.0)))))
(assert
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111449 (* ?x111268 l_0_18_299)))
 (let ((?x114005 (* l_0_18_253 l_0_18_253)))
 (let ((?x114009 (+ (+ (+ (* (* (- 2.0) l_0_18_109) l_0_18_119) ?x114005) ?x111449) (* (* 2.0 l_0_18_73) l_0_18_83))))
 (= ?x114009 0.0))))))
(assert
 (let ((?x111271 (* l_0_18_289 l_0_18_289)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111532 (* ?x111268 l_0_18_304)))
 (let ((?x108634 (* l_0_18_181 l_0_18_181)))
 (let ((?x108632 (* l_0_18_145 l_0_18_145)))
 (let ((?x114019 (- (+ (- (+ (* (* (- 2.0) l_0_18_109) l_0_18_124) ?x108632) ?x108634) ?x111532) ?x111271)))
 (= (+ ?x114019 (* (* 2.0 l_0_18_73) l_0_18_88)) 0.0))))))))
(assert
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111592 (* ?x111268 l_0_18_310)))
 (let ((?x114005 (* l_0_18_253 l_0_18_253)))
 (let ((?x114037 (+ (+ (- (* (* (- 2.0) l_0_18_109) l_0_18_130) ?x114005) ?x111592) (* (* 2.0 l_0_18_73) l_0_18_94))))
 (= ?x114037 0.0))))))
(assert
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111676 (* ?x111268 l_0_18_317)))
 (let ((?x114044 (* l_0_18_217 l_0_18_217)))
 (let ((?x114043 (- (* (* 2.0 l_0_18_101) l_0_18_73) (* (* 2.0 l_0_18_109) l_0_18_137))))
 (= (+ (- ?x114043 ?x114044) ?x111676) 0.0))))))
(assert
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111790 (* ?x111298 l_0_18_293)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111788 (* ?x111295 l_0_18_292)))
 (let ((?x114056 (- (* (* (- 2.0) l_0_18_110) l_0_18_112) (* (* 2.0 l_0_18_111) l_0_18_113))))
 (let ((?x114062 (- (- (+ (+ ?x114056 ?x111788) ?x111790) (* (* 2.0 l_0_18_325) l_0_18_328)) (* (* 2.0 l_0_18_361) l_0_18_364))))
 (let ((?x114066 (+ (- ?x114062 (* (* 2.0 l_0_18_397) l_0_18_400)) (* (* 2.0 l_0_18_74) l_0_18_76))))
 (= (+ ?x114066 (* (* 2.0 l_0_18_75) l_0_18_77)) 0.0)))))))))
(assert
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111902 (* ?x111298 l_0_18_300)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111900 (* ?x111295 l_0_18_299)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x114091 (* ?x111446 l_0_18_254)))
 (let ((?x114090 (- (* (* (- 2.0) l_0_18_110) l_0_18_119) (* (* 2.0 l_0_18_111) l_0_18_120))))
 (let ((?x114096 (- (+ (+ (+ ?x114090 ?x114091) ?x111900) ?x111902) (* (* 2.0 l_0_18_325) l_0_18_335))))
 (let ((?x114100 (- (- ?x114096 (* (* 2.0 l_0_18_361) l_0_18_371)) (* (* 2.0 l_0_18_397) l_0_18_407))))
 (let ((?x114104 (+ (+ ?x114100 (* (* 2.0 l_0_18_74) l_0_18_83)) (* (* 2.0 l_0_18_75) l_0_18_84))))
 (= ?x114104 0.0))))))))))))
(assert
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111990 (* ?x111298 l_0_18_305)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111987 (* ?x111295 l_0_18_304)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111293 (* ?x111268 l_0_18_290)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108673 (* ?x108672 l_0_18_182)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108670 (* ?x108669 l_0_18_146)))
 (let ((?x114129 (- (* (* (- 2.0) l_0_18_110) l_0_18_124) (* (* 2.0 l_0_18_111) l_0_18_125))))
 (let ((?x114136 (- (+ (+ (- (- (+ ?x114129 ?x108670) ?x108673) ?x111293) ?x111987) ?x111990) (* (* 2.0 l_0_18_325) l_0_18_340))))
 (let ((?x114140 (- (- ?x114136 (* (* 2.0 l_0_18_361) l_0_18_376)) (* (* 2.0 l_0_18_397) l_0_18_412))))
 (let ((?x114144 (+ (+ ?x114140 (* (* 2.0 l_0_18_74) l_0_18_88)) (* (* 2.0 l_0_18_75) l_0_18_89))))
 (= ?x114144 0.0))))))))))))))))
(assert
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x112068 (* ?x111298 l_0_18_311)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x112066 (* ?x111295 l_0_18_310)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x114091 (* ?x111446 l_0_18_254)))
 (let ((?x114171 (- (* (* (- 2.0) l_0_18_110) l_0_18_130) (* (* 2.0 l_0_18_111) l_0_18_131))))
 (let ((?x114176 (- (+ (+ (- ?x114171 ?x114091) ?x112066) ?x112068) (* (* 2.0 l_0_18_325) l_0_18_346))))
 (let ((?x114180 (- (- ?x114176 (* (* 2.0 l_0_18_361) l_0_18_382)) (* (* 2.0 l_0_18_397) l_0_18_418))))
 (let ((?x114184 (+ (+ ?x114180 (* (* 2.0 l_0_18_74) l_0_18_94)) (* (* 2.0 l_0_18_75) l_0_18_95))))
 (= ?x114184 0.0))))))))))))
(assert
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x112157 (* ?x111298 l_0_18_318)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x112155 (* ?x111295 l_0_18_317)))
 (let ((?x114206 (+ (* (* 2.0 l_0_18_101) l_0_18_74) (* (* 2.0 l_0_18_102) l_0_18_75))))
 (let ((?x114210 (- (- ?x114206 (* (* 2.0 l_0_18_110) l_0_18_137)) (* (* 2.0 l_0_18_111) l_0_18_138))))
 (let ((?x114216 (- (+ (+ (- ?x114210 (* (* 2.0 l_0_18_217) l_0_18_218)) ?x112155) ?x112157) (* (* 2.0 l_0_18_325) l_0_18_353))))
 (let ((?x114220 (- (- ?x114216 (* (* 2.0 l_0_18_361) l_0_18_389)) (* (* 2.0 l_0_18_397) l_0_18_425))))
 (= ?x114220 0.0))))))))))
(assert
 (let ((?x44128 (* l_0_18_78 l_0_18_78)))
 (let ((?x88066 (* l_0_18_77 l_0_18_77)))
 (let ((?x88024 (* l_0_18_76 l_0_18_76)))
 (let ((?x112237 (* l_0_18_294 l_0_18_294)))
 (let ((?x112235 (* l_0_18_293 l_0_18_293)))
 (let ((?x112234 (* l_0_18_292 l_0_18_292)))
 (let ((?x109596 (* l_0_18_114 l_0_18_114)))
 (let ((?x114249 (- (- (* (- l_0_18_112) l_0_18_112) (* l_0_18_113 l_0_18_113)) ?x109596)))
 (= (+ (+ (+ (+ (+ (+ ?x114249 ?x112234) ?x112235) ?x112237) ?x88024) ?x88066) ?x44128) 0.0))))))))))
(assert
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x112268 (* ?x108684 l_0_18_301)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x112266 (* ?x108681 l_0_18_300)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x112264 (* ?x108678 l_0_18_299)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x114266 (* ?x111446 l_0_18_256)))
 (let ((?x114263 (- (* (* (- 2.0) l_0_18_112) l_0_18_119) (* (* 2.0 l_0_18_113) l_0_18_120))))
 (let ((?x114269 (+ (+ (+ (- ?x114263 (* (* 2.0 l_0_18_114) l_0_18_121)) ?x114266) ?x112264) ?x112266)))
 (let ((?x114274 (+ (+ (+ ?x114269 ?x112268) (* (* 2.0 l_0_18_76) l_0_18_83)) (* (* 2.0 l_0_18_77) l_0_18_84))))
 (= (+ ?x114274 (* (* 2.0 l_0_18_78) l_0_18_85)) 0.0)))))))))))))
(assert
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x112303 (* ?x108684 l_0_18_306)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x112300 (* ?x108681 l_0_18_305)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x112297 (* ?x108678 l_0_18_304)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111352 (* ?x111268 l_0_18_292)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108731 (* ?x108672 l_0_18_184)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108729 (* ?x108669 l_0_18_148)))
 (let ((?x114292 (- (* (* (- 2.0) l_0_18_112) l_0_18_124) (* (* 2.0 l_0_18_113) l_0_18_125))))
 (let ((?x114297 (- (- (+ (- ?x114292 (* (* 2.0 l_0_18_114) l_0_18_126)) ?x108729) ?x108731) ?x111352)))
 (let ((?x114302 (+ (+ (+ (+ ?x114297 ?x112297) ?x112300) ?x112303) (* (* 2.0 l_0_18_76) l_0_18_88))))
 (let ((?x114306 (+ (+ ?x114302 (* (* 2.0 l_0_18_77) l_0_18_89)) (* (* 2.0 l_0_18_78) l_0_18_90))))
 (= ?x114306 0.0))))))))))))))))))
(assert
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x112326 (* ?x108684 l_0_18_312)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x112324 (* ?x108681 l_0_18_311)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x112322 (* ?x108678 l_0_18_310)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x114266 (* ?x111446 l_0_18_256)))
 (let ((?x91490 (- (* (* (- 2.0) l_0_18_112) l_0_18_130) (* (* 2.0 l_0_18_113) l_0_18_131))))
 (let ((?x91481 (+ (+ (- (- ?x91490 (* (* 2.0 l_0_18_114) l_0_18_132)) ?x114266) ?x112322) ?x112324)))
 (let ((?x70684 (+ (+ (+ ?x91481 ?x112326) (* (* 2.0 l_0_18_76) l_0_18_94)) (* (* 2.0 l_0_18_77) l_0_18_95))))
 (= (+ ?x70684 (* (* 2.0 l_0_18_78) l_0_18_96)) 0.0)))))))))))))
(assert
 (let ((?x90989 (* l_0_18_87 l_0_18_87)))
 (let ((?x66855 (* l_0_18_86 l_0_18_86)))
 (let ((?x90996 (* l_0_18_85 l_0_18_85)))
 (let ((?x90995 (* l_0_18_84 l_0_18_84)))
 (let ((?x90991 (* l_0_18_83 l_0_18_83)))
 (let ((?x112447 (* l_0_18_303 l_0_18_303)))
 (let ((?x112445 (* l_0_18_302 l_0_18_302)))
 (let ((?x112443 (* l_0_18_301 l_0_18_301)))
 (let ((?x112441 (* l_0_18_300 l_0_18_300)))
 (let ((?x112439 (* l_0_18_299 l_0_18_299)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x114337 (* ?x111446 l_0_18_263)))
 (let ((?x113427 (* l_0_18_123 l_0_18_123)))
 (let ((?x113424 (* l_0_18_122 l_0_18_122)))
 (let ((?x113421 (* l_0_18_121 l_0_18_121)))
 (let ((?x114334 (- (- (* (- l_0_18_119) l_0_18_119) (* l_0_18_120 l_0_18_120)) ?x113421)))
 (let ((?x114342 (+ (+ (+ (+ (+ (- (- ?x114334 ?x113424) ?x113427) ?x114337) ?x112439) ?x112441) ?x112443) ?x112445)))
 (= (+ (+ (+ (+ (+ (+ ?x114342 ?x112447) ?x90991) ?x90995) ?x90996) ?x66855) ?x90989) 0.0)))))))))))))))))))
(assert
 (let ((?x112494 (* 2.0 l_0_18_303)))
 (let ((?x112495 (* ?x112494 l_0_18_308)))
 (let ((?x112491 (* 2.0 l_0_18_302)))
 (let ((?x112492 (* ?x112491 l_0_18_307)))
 (let ((?x112488 (* 2.0 l_0_18_301)))
 (let ((?x112489 (* ?x112488 l_0_18_306)))
 (let ((?x112485 (* 2.0 l_0_18_300)))
 (let ((?x112486 (* ?x112485 l_0_18_305)))
 (let ((?x112482 (* 2.0 l_0_18_299)))
 (let ((?x112483 (* ?x112482 l_0_18_304)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111449 (* ?x111268 l_0_18_299)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x114374 (* ?x111446 l_0_18_268)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108773 (* ?x108672 l_0_18_191)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108766 (* ?x108669 l_0_18_155)))
 (let ((?x114362 (- (* (* (- 2.0) l_0_18_119) l_0_18_124) (* (* 2.0 l_0_18_120) l_0_18_125))))
 (let ((?x114368 (- (- ?x114362 (* (* 2.0 l_0_18_121) l_0_18_126)) (* (* 2.0 l_0_18_122) l_0_18_127))))
 (let ((?x114375 (+ (- (+ (- ?x114368 (* (* 2.0 l_0_18_123) l_0_18_128)) ?x108766) ?x108773) ?x114374)))
 (let ((?x114384 (+ (+ (+ (+ (+ (+ (- ?x114375 ?x111449) ?x112483) ?x112486) ?x112489) ?x112492) ?x112495) (* (* 2.0 l_0_18_83) l_0_18_88))))
 (let ((?x114390 (+ (+ ?x114384 (* (* 2.0 l_0_18_84) l_0_18_89)) (* (* 2.0 l_0_18_85) l_0_18_90))))
 (let ((?x114396 (+ (+ ?x114390 (* (* 2.0 l_0_18_86) l_0_18_91)) (* (* 2.0 l_0_18_87) l_0_18_92))))
 (= ?x114396 0.0))))))))))))))))))))))))))
(assert
 (let ((?x112494 (* 2.0 l_0_18_303)))
 (let ((?x89269 (* ?x112494 l_0_18_314)))
 (let ((?x112491 (* 2.0 l_0_18_302)))
 (let ((?x89263 (* ?x112491 l_0_18_313)))
 (let ((?x112488 (* 2.0 l_0_18_301)))
 (let ((?x89212 (* ?x112488 l_0_18_312)))
 (let ((?x112485 (* 2.0 l_0_18_300)))
 (let ((?x89202 (* ?x112485 l_0_18_311)))
 (let ((?x112482 (* 2.0 l_0_18_299)))
 (let ((?x89328 (* ?x112482 l_0_18_310)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x114432 (* ?x111446 l_0_18_274)))
 (let ((?x114337 (* ?x111446 l_0_18_263)))
 (let ((?x114424 (- (* (* (- 2.0) l_0_18_119) l_0_18_130) (* (* 2.0 l_0_18_120) l_0_18_131))))
 (let ((?x114428 (- (- ?x114424 (* (* 2.0 l_0_18_121) l_0_18_132)) (* (* 2.0 l_0_18_122) l_0_18_133))))
 (let ((?x114434 (+ (+ (- (- ?x114428 (* (* 2.0 l_0_18_123) l_0_18_134)) ?x114337) ?x114432) ?x89328)))
 (let ((?x114440 (+ (+ (+ (+ (+ ?x114434 ?x89202) ?x89212) ?x89263) ?x89269) (* (* 2.0 l_0_18_83) l_0_18_94))))
 (let ((?x114444 (+ (+ ?x114440 (* (* 2.0 l_0_18_84) l_0_18_95)) (* (* 2.0 l_0_18_85) l_0_18_96))))
 (let ((?x114448 (+ (+ ?x114444 (* (* 2.0 l_0_18_86) l_0_18_97)) (* (* 2.0 l_0_18_87) l_0_18_98))))
 (= ?x114448 0.0)))))))))))))))))))))
(assert
 (let ((?x112494 (* 2.0 l_0_18_303)))
 (let ((?x112539 (* ?x112494 l_0_18_321)))
 (let ((?x112491 (* 2.0 l_0_18_302)))
 (let ((?x112537 (* ?x112491 l_0_18_320)))
 (let ((?x112488 (* 2.0 l_0_18_301)))
 (let ((?x112535 (* ?x112488 l_0_18_319)))
 (let ((?x112485 (* 2.0 l_0_18_300)))
 (let ((?x112533 (* ?x112485 l_0_18_318)))
 (let ((?x112482 (* 2.0 l_0_18_299)))
 (let ((?x112531 (* ?x112482 l_0_18_317)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x112841 (* ?x111446 l_0_18_281)))
 (let ((?x114459 (+ (* (* 2.0 l_0_18_101) l_0_18_83) (* (* 2.0 l_0_18_102) l_0_18_84))))
 (let ((?x114463 (+ (+ ?x114459 (* (* 2.0 l_0_18_103) l_0_18_85)) (* (* 2.0 l_0_18_104) l_0_18_86))))
 (let ((?x114468 (- (+ ?x114463 (* (* 2.0 l_0_18_105) l_0_18_87)) (* (* 2.0 l_0_18_119) l_0_18_137))))
 (let ((?x114472 (- (- ?x114468 (* (* 2.0 l_0_18_120) l_0_18_138)) (* (* 2.0 l_0_18_121) l_0_18_139))))
 (let ((?x114476 (- (- ?x114472 (* (* 2.0 l_0_18_122) l_0_18_140)) (* (* 2.0 l_0_18_123) l_0_18_141))))
 (let ((?x114481 (+ (+ (+ (- ?x114476 (* (* 2.0 l_0_18_217) l_0_18_227)) ?x112841) ?x112531) ?x112533)))
 (= (+ (+ (+ ?x114481 ?x112535) ?x112537) ?x112539) 0.0))))))))))))))))))))
(assert
 (let ((?x14922 (* l_0_18_93 l_0_18_93)))
 (let ((?x70315 (* l_0_18_92 l_0_18_92)))
 (let ((?x68072 (* l_0_18_91 l_0_18_91)))
 (let ((?x14908 (* l_0_18_90 l_0_18_90)))
 (let ((?x88518 (* l_0_18_89 l_0_18_89)))
 (let ((?x14896 (* l_0_18_88 l_0_18_88)))
 (let ((?x112615 (* l_0_18_309 l_0_18_309)))
 (let ((?x112613 (* l_0_18_308 l_0_18_308)))
 (let ((?x112611 (* l_0_18_307 l_0_18_307)))
 (let ((?x112609 (* l_0_18_306 l_0_18_306)))
 (let ((?x112607 (* l_0_18_305 l_0_18_305)))
 (let ((?x112605 (* l_0_18_304 l_0_18_304)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111532 (* ?x111268 l_0_18_304)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108792 (* ?x108672 l_0_18_196)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108790 (* ?x108669 l_0_18_160)))
 (let ((?x113604 (* l_0_18_129 l_0_18_129)))
 (let ((?x113601 (* l_0_18_128 l_0_18_128)))
 (let ((?x113598 (* l_0_18_127 l_0_18_127)))
 (let ((?x113595 (* l_0_18_126 l_0_18_126)))
 (let ((?x91741 (- (- (* (- l_0_18_124) l_0_18_124) (* l_0_18_125 l_0_18_125)) ?x113595)))
 (let ((?x91611 (+ (- (- (+ (- (- (- ?x91741 ?x113598) ?x113601) ?x113604) ?x108790) ?x108792) ?x111532) ?x112605)))
 (let ((?x91594 (+ (+ (+ (+ (+ (+ (+ ?x91611 ?x112607) ?x112609) ?x112611) ?x112613) ?x112615) ?x14896) ?x88518)))
 (= (+ (+ (+ (+ ?x91594 ?x14908) ?x68072) ?x70315) ?x14922) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x112660 (* 2.0 l_0_18_309)))
 (let ((?x112661 (* ?x112660 l_0_18_315)))
 (let ((?x112657 (* 2.0 l_0_18_308)))
 (let ((?x112658 (* ?x112657 l_0_18_314)))
 (let ((?x112654 (* 2.0 l_0_18_307)))
 (let ((?x112655 (* ?x112654 l_0_18_313)))
 (let ((?x112651 (* 2.0 l_0_18_306)))
 (let ((?x112652 (* ?x112651 l_0_18_312)))
 (let ((?x112648 (* 2.0 l_0_18_305)))
 (let ((?x112649 (* ?x112648 l_0_18_311)))
 (let ((?x112645 (* 2.0 l_0_18_304)))
 (let ((?x112646 (* ?x112645 l_0_18_310)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111592 (* ?x111268 l_0_18_310)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x114374 (* ?x111446 l_0_18_268)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108819 (* ?x108672 l_0_18_202)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108817 (* ?x108669 l_0_18_166)))
 (let ((?x48764 (- (* (* (- 2.0) l_0_18_124) l_0_18_130) (* (* 2.0 l_0_18_125) l_0_18_131))))
 (let ((?x114513 (- (- ?x48764 (* (* 2.0 l_0_18_126) l_0_18_132)) (* (* 2.0 l_0_18_127) l_0_18_133))))
 (let ((?x114519 (- (- ?x114513 (* (* 2.0 l_0_18_128) l_0_18_134)) (* (* 2.0 l_0_18_129) l_0_18_135))))
 (let ((?x114526 (+ (+ (+ (- (- (- (+ ?x114519 ?x108817) ?x108819) ?x114374) ?x111592) ?x112646) ?x112649) ?x112652)))
 (let ((?x114532 (+ (+ (+ (+ ?x114526 ?x112655) ?x112658) ?x112661) (* (* 2.0 l_0_18_88) l_0_18_94))))
 (let ((?x114538 (+ (+ ?x114532 (* (* 2.0 l_0_18_89) l_0_18_95)) (* (* 2.0 l_0_18_90) l_0_18_96))))
 (let ((?x114544 (+ (+ ?x114538 (* (* 2.0 l_0_18_91) l_0_18_97)) (* (* 2.0 l_0_18_92) l_0_18_98))))
 (= (+ ?x114544 (* (* 2.0 l_0_18_93) l_0_18_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x112660 (* 2.0 l_0_18_309)))
 (let ((?x112712 (* ?x112660 l_0_18_322)))
 (let ((?x112657 (* 2.0 l_0_18_308)))
 (let ((?x112710 (* ?x112657 l_0_18_321)))
 (let ((?x112654 (* 2.0 l_0_18_307)))
 (let ((?x112708 (* ?x112654 l_0_18_320)))
 (let ((?x112651 (* 2.0 l_0_18_306)))
 (let ((?x112706 (* ?x112651 l_0_18_319)))
 (let ((?x112648 (* 2.0 l_0_18_305)))
 (let ((?x112704 (* ?x112648 l_0_18_318)))
 (let ((?x112645 (* 2.0 l_0_18_304)))
 (let ((?x112702 (* ?x112645 l_0_18_317)))
 (let ((?x111268 (* 2.0 l_0_18_289)))
 (let ((?x111676 (* ?x111268 l_0_18_317)))
 (let ((?x108672 (* 2.0 l_0_18_181)))
 (let ((?x108846 (* ?x108672 l_0_18_209)))
 (let ((?x108669 (* 2.0 l_0_18_145)))
 (let ((?x108844 (* ?x108669 l_0_18_173)))
 (let ((?x114573 (+ (* (* 2.0 l_0_18_101) l_0_18_88) (* (* 2.0 l_0_18_102) l_0_18_89))))
 (let ((?x114577 (+ (+ ?x114573 (* (* 2.0 l_0_18_103) l_0_18_90)) (* (* 2.0 l_0_18_104) l_0_18_91))))
 (let ((?x114581 (+ (+ ?x114577 (* (* 2.0 l_0_18_105) l_0_18_92)) (* (* 2.0 l_0_18_106) l_0_18_93))))
 (let ((?x114586 (- (- ?x114581 (* (* 2.0 l_0_18_124) l_0_18_137)) (* (* 2.0 l_0_18_125) l_0_18_138))))
 (let ((?x114590 (- (- ?x114586 (* (* 2.0 l_0_18_126) l_0_18_139)) (* (* 2.0 l_0_18_127) l_0_18_140))))
 (let ((?x114594 (- (- ?x114590 (* (* 2.0 l_0_18_128) l_0_18_141)) (* (* 2.0 l_0_18_129) l_0_18_142))))
 (let ((?x114599 (- (- (- (+ ?x114594 ?x108844) ?x108846) (* (* 2.0 l_0_18_217) l_0_18_232)) ?x111676)))
 (= (+ (+ (+ (+ (+ (+ ?x114599 ?x112702) ?x112704) ?x112706) ?x112708) ?x112710) ?x112712) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x91317 (* l_0_18_99 l_0_18_99)))
 (let ((?x48393 (* l_0_18_98 l_0_18_98)))
 (let ((?x91314 (* l_0_18_97 l_0_18_97)))
 (let ((?x91310 (* l_0_18_96 l_0_18_96)))
 (let ((?x48381 (* l_0_18_95 l_0_18_95)))
 (let ((?x91305 (* l_0_18_94 l_0_18_94)))
 (let ((?x112728 (* l_0_18_316 l_0_18_316)))
 (let ((?x112726 (* l_0_18_315 l_0_18_315)))
 (let ((?x112724 (* l_0_18_314 l_0_18_314)))
 (let ((?x112722 (* l_0_18_313 l_0_18_313)))
 (let ((?x89688 (* l_0_18_312 l_0_18_312)))
 (let ((?x89687 (* l_0_18_311 l_0_18_311)))
 (let ((?x89689 (* l_0_18_310 l_0_18_310)))
 (let ((?x111446 (* 2.0 l_0_18_253)))
 (let ((?x114432 (* ?x111446 l_0_18_274)))
 (let ((?x113784 (* l_0_18_136 l_0_18_136)))
 (let ((?x113781 (* l_0_18_135 l_0_18_135)))
 (let ((?x113778 (* l_0_18_134 l_0_18_134)))
 (let ((?x113775 (* l_0_18_133 l_0_18_133)))
 (let ((?x113772 (* l_0_18_132 l_0_18_132)))
 (let ((?x113769 (* l_0_18_131 l_0_18_131)))
 (let ((?x91810 (- (- (* l_0_18_100 l_0_18_100) (* l_0_18_130 l_0_18_130)) ?x113769)))
 (let ((?x48940 (+ (- (- (- (- (- (- ?x91810 ?x113772) ?x113775) ?x113778) ?x113781) ?x113784) ?x114432) ?x89689)))
 (let ((?x114631 (+ (+ (+ (+ (+ (+ (+ ?x48940 ?x89687) ?x89688) ?x112722) ?x112724) ?x112726) ?x112728) ?x91305)))
 (= (+ (+ (+ (+ (+ ?x114631 ?x48381) ?x91310) ?x91314) ?x48393) ?x91317) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x112790 (* l_0_18_324 l_0_18_324)))
 (let ((?x112788 (* l_0_18_323 l_0_18_323)))
 (let ((?x112786 (* l_0_18_322 l_0_18_322)))
 (let ((?x90003 (* l_0_18_321 l_0_18_321)))
 (let ((?x13441 (* l_0_18_320 l_0_18_320)))
 (let ((?x13411 (* l_0_18_319 l_0_18_319)))
 (let ((?x13530 (* l_0_18_318 l_0_18_318)))
 (let ((?x13537 (* l_0_18_317 l_0_18_317)))
 (let ((?x113944 (* l_0_18_144 l_0_18_144)))
 (let ((?x113941 (* l_0_18_143 l_0_18_143)))
 (let ((?x113938 (* l_0_18_142 l_0_18_142)))
 (let ((?x113935 (* l_0_18_141 l_0_18_141)))
 (let ((?x113932 (* l_0_18_140 l_0_18_140)))
 (let ((?x113929 (* l_0_18_139 l_0_18_139)))
 (let ((?x113926 (* l_0_18_138 l_0_18_138)))
 (let ((?x113923 (* l_0_18_137 l_0_18_137)))
 (let ((?x15330 (* l_0_18_108 l_0_18_108)))
 (let ((?x15329 (* l_0_18_107 l_0_18_107)))
 (let ((?x91379 (* l_0_18_106 l_0_18_106)))
 (let ((?x113970 (* l_0_18_105 l_0_18_105)))
 (let ((?x70465 (* l_0_18_104 l_0_18_104)))
 (let ((?x91377 (* l_0_18_103 l_0_18_103)))
 (let ((?x91829 (+ (+ (* l_0_18_101 l_0_18_101) (* l_0_18_102 l_0_18_102)) ?x91377)))
 (let ((?x91825 (- (- (+ (+ (+ (+ (+ ?x91829 ?x70465) ?x113970) ?x91379) ?x15329) ?x15330) ?x113923) ?x113926)))
 (let ((?x114649 (- (- (- (- (- (- (- ?x91825 ?x113929) ?x113932) ?x113935) ?x113938) ?x113941) ?x113944) (* (* 2.0 l_0_18_217) l_0_18_245))))
 (let ((?x114656 (+ (+ (+ (+ (+ (+ (+ ?x114649 ?x13537) ?x13530) ?x13411) ?x13441) ?x90003) ?x112786) ?x112788)))
 (= (+ ?x114656 ?x112790) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x108596 (* l_0_18_291 l_0_18_291)))
 (let ((?x108594 (* l_0_18_290 l_0_18_290)))
 (let ((?x108867 (* l_0_18_183 l_0_18_183)))
 (let ((?x108865 (* l_0_18_182 l_0_18_182)))
 (let ((?x91926 (- (+ (* l_0_18_146 l_0_18_146) (* l_0_18_147 l_0_18_147)) ?x108865)))
 (let ((?x49237 (- (- (- (- ?x91926 ?x108867) ?x108594) ?x108596) (* (* 2.0 l_0_18_326) l_0_18_340))))
 (let ((?x114681 (- (- ?x49237 (* (* 2.0 l_0_18_327) l_0_18_341)) (* (* 2.0 l_0_18_362) l_0_18_376))))
 (let ((?x114685 (- (- ?x114681 (* (* 2.0 l_0_18_363) l_0_18_377)) (* (* 2.0 l_0_18_398) l_0_18_412))))
 (= (- ?x114685 (* (* 2.0 l_0_18_399) l_0_18_413)) 0.0))))))))))
(assert
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111790 (* ?x111298 l_0_18_293)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111788 (* ?x111295 l_0_18_292)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x108961 (* ?x108960 l_0_18_185)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x108958 (* ?x108957 l_0_18_184)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x108955 (* ?x108954 l_0_18_149)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x109265 (* ?x109081 l_0_18_148)))
 (let ((?x114699 (- (- (- (- (- (+ ?x109265 ?x108955) ?x108958) ?x108961) ?x111788) ?x111790) (* (* 2.0 l_0_18_328) l_0_18_340))))
 (let ((?x114703 (- (- ?x114699 (* (* 2.0 l_0_18_329) l_0_18_341)) (* (* 2.0 l_0_18_330) l_0_18_342))))
 (let ((?x114707 (- (- ?x114703 (* (* 2.0 l_0_18_364) l_0_18_376)) (* (* 2.0 l_0_18_365) l_0_18_377))))
 (let ((?x114711 (- (- ?x114707 (* (* 2.0 l_0_18_366) l_0_18_378)) (* (* 2.0 l_0_18_400) l_0_18_412))))
 (let ((?x114715 (- (- ?x114711 (* (* 2.0 l_0_18_401) l_0_18_413)) (* (* 2.0 l_0_18_402) l_0_18_414))))
 (= ?x114715 0.0)))))))))))))))))))
(assert
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111902 (* ?x111298 l_0_18_300)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111900 (* ?x111295 l_0_18_299)))
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x67428 (* ?x108454 l_0_18_269)))
 (let ((?x108451 (* 2.0 l_0_18_254)))
 (let ((?x70979 (* ?x108451 l_0_18_268)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x109088 (* ?x108960 l_0_18_192)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x109086 (* ?x108957 l_0_18_191)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x109084 (* ?x108954 l_0_18_156)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x109082 (* ?x109081 l_0_18_155)))
 (let ((?x70985 (- (- (+ (+ (- (- (+ ?x109082 ?x109084) ?x109086) ?x109088) ?x70979) ?x67428) ?x111900) ?x111902)))
 (let ((?x71016 (- (- ?x70985 (* (* 2.0 l_0_18_335) l_0_18_340)) (* (* 2.0 l_0_18_336) l_0_18_341))))
 (let ((?x71019 (- (- ?x71016 (* (* 2.0 l_0_18_337) l_0_18_342)) (* (* 2.0 l_0_18_338) l_0_18_343))))
 (let ((?x71058 (- (- ?x71019 (* (* 2.0 l_0_18_339) l_0_18_344)) (* (* 2.0 l_0_18_371) l_0_18_376))))
 (let ((?x67686 (- (- ?x71058 (* (* 2.0 l_0_18_372) l_0_18_377)) (* (* 2.0 l_0_18_373) l_0_18_378))))
 (let ((?x114741 (- (- ?x67686 (* (* 2.0 l_0_18_374) l_0_18_379)) (* (* 2.0 l_0_18_375) l_0_18_380))))
 (let ((?x114747 (- (- ?x114741 (* (* 2.0 l_0_18_407) l_0_18_412)) (* (* 2.0 l_0_18_408) l_0_18_413))))
 (let ((?x114753 (- (- ?x114747 (* (* 2.0 l_0_18_409) l_0_18_414)) (* (* 2.0 l_0_18_410) l_0_18_415))))
 (= (- ?x114753 (* (* 2.0 l_0_18_411) l_0_18_416)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x114854 (* l_0_18_417 l_0_18_417)))
 (let ((?x114852 (* l_0_18_416 l_0_18_416)))
 (let ((?x114850 (* l_0_18_415 l_0_18_415)))
 (let ((?x114848 (* l_0_18_414 l_0_18_414)))
 (let ((?x114846 (* l_0_18_413 l_0_18_413)))
 (let ((?x114844 (* l_0_18_412 l_0_18_412)))
 (let ((?x114842 (* l_0_18_381 l_0_18_381)))
 (let ((?x114840 (* l_0_18_380 l_0_18_380)))
 (let ((?x114838 (* l_0_18_379 l_0_18_379)))
 (let ((?x114836 (* l_0_18_378 l_0_18_378)))
 (let ((?x114834 (* l_0_18_377 l_0_18_377)))
 (let ((?x114832 (* l_0_18_376 l_0_18_376)))
 (let ((?x114830 (* l_0_18_345 l_0_18_345)))
 (let ((?x114828 (* l_0_18_344 l_0_18_344)))
 (let ((?x114826 (* l_0_18_343 l_0_18_343)))
 (let ((?x114824 (* l_0_18_342 l_0_18_342)))
 (let ((?x114822 (* l_0_18_341 l_0_18_341)))
 (let ((?x114820 (* l_0_18_340 l_0_18_340)))
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x111990 (* ?x111298 l_0_18_305)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x111987 (* ?x111295 l_0_18_304)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x109173 (* ?x108960 l_0_18_197)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x109171 (* ?x108957 l_0_18_196)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x109141 (* ?x108954 l_0_18_161)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x113066 (* ?x109081 l_0_18_160)))
 (let ((?x114823 (- (- (- (- (- (- (+ ?x113066 ?x109141) ?x109171) ?x109173) ?x111987) ?x111990) ?x114820) ?x114822)))
 (let ((?x114837 (- (- (- (- (- (- (- ?x114823 ?x114824) ?x114826) ?x114828) ?x114830) ?x114832) ?x114834) ?x114836)))
 (let ((?x114851 (- (- (- (- (- (- (- ?x114837 ?x114838) ?x114840) ?x114842) ?x114844) ?x114846) ?x114848) ?x114850)))
 (= (- (- ?x114851 ?x114852) ?x114854) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x112068 (* ?x111298 l_0_18_311)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x112066 (* ?x111295 l_0_18_310)))
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x67428 (* ?x108454 l_0_18_269)))
 (let ((?x108451 (* 2.0 l_0_18_254)))
 (let ((?x70979 (* ?x108451 l_0_18_268)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x109274 (* ?x108960 l_0_18_203)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x109272 (* ?x108957 l_0_18_202)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x109270 (* ?x108954 l_0_18_167)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x109267 (* ?x109081 l_0_18_166)))
 (let ((?x114896 (- (- (- (- (- (- (+ ?x109267 ?x109270) ?x109272) ?x109274) ?x70979) ?x67428) ?x112066) ?x112068)))
 (let ((?x114902 (- (- ?x114896 (* (* 2.0 l_0_18_340) l_0_18_346)) (* (* 2.0 l_0_18_341) l_0_18_347))))
 (let ((?x114908 (- (- ?x114902 (* (* 2.0 l_0_18_342) l_0_18_348)) (* (* 2.0 l_0_18_343) l_0_18_349))))
 (let ((?x114914 (- (- ?x114908 (* (* 2.0 l_0_18_344) l_0_18_350)) (* (* 2.0 l_0_18_345) l_0_18_351))))
 (let ((?x114920 (- (- ?x114914 (* (* 2.0 l_0_18_376) l_0_18_382)) (* (* 2.0 l_0_18_377) l_0_18_383))))
 (let ((?x114926 (- (- ?x114920 (* (* 2.0 l_0_18_378) l_0_18_384)) (* (* 2.0 l_0_18_379) l_0_18_385))))
 (let ((?x114932 (- (- ?x114926 (* (* 2.0 l_0_18_380) l_0_18_386)) (* (* 2.0 l_0_18_381) l_0_18_387))))
 (let ((?x114938 (- (- ?x114932 (* (* 2.0 l_0_18_412) l_0_18_418)) (* (* 2.0 l_0_18_413) l_0_18_419))))
 (let ((?x114944 (- (- ?x114938 (* (* 2.0 l_0_18_414) l_0_18_420)) (* (* 2.0 l_0_18_415) l_0_18_421))))
 (let ((?x114950 (- (- ?x114944 (* (* 2.0 l_0_18_416) l_0_18_422)) (* (* 2.0 l_0_18_417) l_0_18_423))))
 (= ?x114950 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x111298 (* 2.0 l_0_18_291)))
 (let ((?x112157 (* ?x111298 l_0_18_318)))
 (let ((?x111295 (* 2.0 l_0_18_290)))
 (let ((?x112155 (* ?x111295 l_0_18_317)))
 (let ((?x108960 (* 2.0 l_0_18_183)))
 (let ((?x65890 (* ?x108960 l_0_18_210)))
 (let ((?x108957 (* 2.0 l_0_18_182)))
 (let ((?x65585 (* ?x108957 l_0_18_209)))
 (let ((?x108954 (* 2.0 l_0_18_147)))
 (let ((?x65861 (* ?x108954 l_0_18_174)))
 (let ((?x109081 (* 2.0 l_0_18_146)))
 (let ((?x90731 (* ?x109081 l_0_18_173)))
 (let ((?x71316 (- (- (- (+ ?x90731 ?x65861) ?x65585) ?x65890) (* (* 2.0 l_0_18_218) l_0_18_232))))
 (let ((?x68181 (- (- (- (- ?x71316 (* (* 2.0 l_0_18_219) l_0_18_233)) ?x112155) ?x112157) (* (* 2.0 l_0_18_340) l_0_18_353))))
 (let ((?x71260 (- (- ?x68181 (* (* 2.0 l_0_18_341) l_0_18_354)) (* (* 2.0 l_0_18_342) l_0_18_355))))
 (let ((?x49834 (- (- ?x71260 (* (* 2.0 l_0_18_343) l_0_18_356)) (* (* 2.0 l_0_18_344) l_0_18_357))))
 (let ((?x114984 (- (- ?x49834 (* (* 2.0 l_0_18_345) l_0_18_358)) (* (* 2.0 l_0_18_376) l_0_18_389))))
 (let ((?x114988 (- (- ?x114984 (* (* 2.0 l_0_18_377) l_0_18_390)) (* (* 2.0 l_0_18_378) l_0_18_391))))
 (let ((?x114992 (- (- ?x114988 (* (* 2.0 l_0_18_379) l_0_18_392)) (* (* 2.0 l_0_18_380) l_0_18_393))))
 (let ((?x114996 (- (- ?x114992 (* (* 2.0 l_0_18_381) l_0_18_394)) (* (* 2.0 l_0_18_412) l_0_18_425))))
 (let ((?x115000 (- (- ?x114996 (* (* 2.0 l_0_18_413) l_0_18_426)) (* (* 2.0 l_0_18_414) l_0_18_427))))
 (let ((?x115004 (- (- ?x115000 (* (* 2.0 l_0_18_415) l_0_18_428)) (* (* 2.0 l_0_18_416) l_0_18_429))))
 (= (- ?x115004 (* (* 2.0 l_0_18_417) l_0_18_430)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x112237 (* l_0_18_294 l_0_18_294)))
 (let ((?x112235 (* l_0_18_293 l_0_18_293)))
 (let ((?x112234 (* l_0_18_292 l_0_18_292)))
 (let ((?x109386 (* l_0_18_186 l_0_18_186)))
 (let ((?x109384 (* l_0_18_185 l_0_18_185)))
 (let ((?x109382 (* l_0_18_184 l_0_18_184)))
 (let ((?x109380 (* l_0_18_150 l_0_18_150)))
 (let ((?x115058 (+ (+ (* l_0_18_148 l_0_18_148) (* l_0_18_149 l_0_18_149)) ?x109380)))
 (= (- (- (- (- (- (- ?x115058 ?x109382) ?x109384) ?x109386) ?x112234) ?x112235) ?x112237) 0.0))))))))))
(assert
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x112268 (* ?x108684 l_0_18_301)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x112266 (* ?x108681 l_0_18_300)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x112264 (* ?x108678 l_0_18_299)))
 (let ((?x109102 (* 2.0 l_0_18_258)))
 (let ((?x115080 (* ?x109102 l_0_18_270)))
 (let ((?x109099 (* 2.0 l_0_18_257)))
 (let ((?x115078 (* ?x109099 l_0_18_269)))
 (let ((?x109096 (* 2.0 l_0_18_256)))
 (let ((?x115076 (* ?x109096 l_0_18_268)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109499 (* ?x109181 l_0_18_193)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109497 (* ?x109178 l_0_18_192)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109495 (* ?x109175 l_0_18_191)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109493 (* ?x109162 l_0_18_157)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109491 (* ?x109159 l_0_18_156)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109489 (* ?x109145 l_0_18_155)))
 (let ((?x115079 (+ (+ (- (- (- (+ (+ ?x109489 ?x109491) ?x109493) ?x109495) ?x109497) ?x109499) ?x115076) ?x115078)))
 (= (- (- (- (+ ?x115079 ?x115080) ?x112264) ?x112266) ?x112268) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x112303 (* ?x108684 l_0_18_306)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x112300 (* ?x108681 l_0_18_305)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x112297 (* ?x108678 l_0_18_304)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109556 (* ?x109181 l_0_18_198)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109554 (* ?x109178 l_0_18_197)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109552 (* ?x109175 l_0_18_196)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109532 (* ?x109162 l_0_18_162)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109528 (* ?x109159 l_0_18_161)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x110562 (* ?x109145 l_0_18_160)))
 (let ((?x115113 (- (- (- (- (- (+ (+ ?x110562 ?x109528) ?x109532) ?x109552) ?x109554) ?x109556) ?x112297) ?x112300)))
 (= (- ?x115113 ?x112303) 0.0)))))))))))))))))))))
(assert
 (let ((?x108684 (* 2.0 l_0_18_294)))
 (let ((?x112326 (* ?x108684 l_0_18_312)))
 (let ((?x108681 (* 2.0 l_0_18_293)))
 (let ((?x112324 (* ?x108681 l_0_18_311)))
 (let ((?x108678 (* 2.0 l_0_18_292)))
 (let ((?x112322 (* ?x108678 l_0_18_310)))
 (let ((?x109102 (* 2.0 l_0_18_258)))
 (let ((?x115080 (* ?x109102 l_0_18_270)))
 (let ((?x109099 (* 2.0 l_0_18_257)))
 (let ((?x115078 (* ?x109099 l_0_18_269)))
 (let ((?x109096 (* 2.0 l_0_18_256)))
 (let ((?x115076 (* ?x109096 l_0_18_268)))
 (let ((?x109181 (* 2.0 l_0_18_186)))
 (let ((?x109621 (* ?x109181 l_0_18_204)))
 (let ((?x109178 (* 2.0 l_0_18_185)))
 (let ((?x109619 (* ?x109178 l_0_18_203)))
 (let ((?x109175 (* 2.0 l_0_18_184)))
 (let ((?x109617 (* ?x109175 l_0_18_202)))
 (let ((?x109162 (* 2.0 l_0_18_150)))
 (let ((?x109614 (* ?x109162 l_0_18_168)))
 (let ((?x109159 (* 2.0 l_0_18_149)))
 (let ((?x109611 (* ?x109159 l_0_18_167)))
 (let ((?x109145 (* 2.0 l_0_18_148)))
 (let ((?x109608 (* ?x109145 l_0_18_166)))
 (let ((?x115129 (- (- (- (- (- (+ (+ ?x109608 ?x109611) ?x109614) ?x109617) ?x109619) ?x109621) ?x115076) ?x115078)))
 (= (- (- (- (- ?x115129 ?x115080) ?x112322) ?x112324) ?x112326) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x112447 (* l_0_18_303 l_0_18_303)))
 (let ((?x112445 (* l_0_18_302 l_0_18_302)))
 (let ((?x112443 (* l_0_18_301 l_0_18_301)))
 (let ((?x112441 (* l_0_18_300 l_0_18_300)))
 (let ((?x112439 (* l_0_18_299 l_0_18_299)))
 (let ((?x112972 (* 2.0 l_0_18_267)))
 (let ((?x115158 (* ?x112972 l_0_18_272)))
 (let ((?x112969 (* 2.0 l_0_18_266)))
 (let ((?x115156 (* ?x112969 l_0_18_271)))
 (let ((?x112966 (* 2.0 l_0_18_265)))
 (let ((?x115154 (* ?x112966 l_0_18_270)))
 (let ((?x112963 (* 2.0 l_0_18_264)))
 (let ((?x115152 (* ?x112963 l_0_18_269)))
 (let ((?x112960 (* 2.0 l_0_18_263)))
 (let ((?x115150 (* ?x112960 l_0_18_268)))
 (let ((?x110088 (* l_0_18_195 l_0_18_195)))
 (let ((?x110086 (* l_0_18_194 l_0_18_194)))
 (let ((?x110084 (* l_0_18_193 l_0_18_193)))
 (let ((?x110082 (* l_0_18_192 l_0_18_192)))
 (let ((?x110080 (* l_0_18_191 l_0_18_191)))
 (let ((?x110078 (* l_0_18_159 l_0_18_159)))
 (let ((?x110076 (* l_0_18_158 l_0_18_158)))
 (let ((?x110074 (* l_0_18_157 l_0_18_157)))
 (let ((?x115142 (+ (+ (* l_0_18_155 l_0_18_155) (* l_0_18_156 l_0_18_156)) ?x110074)))
 (let ((?x115149 (- (- (- (- (- (+ (+ ?x115142 ?x110076) ?x110078) ?x110080) ?x110082) ?x110084) ?x110086) ?x110088)))
 (let ((?x115161 (- (- (+ (+ (+ (+ (+ ?x115149 ?x115150) ?x115152) ?x115154) ?x115156) ?x115158) ?x112439) ?x112441)))
 (= (- (- (- ?x115161 ?x112443) ?x112445) ?x112447) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x112494 (* 2.0 l_0_18_303)))
 (let ((?x112495 (* ?x112494 l_0_18_308)))
 (let ((?x112491 (* 2.0 l_0_18_302)))
 (let ((?x112492 (* ?x112491 l_0_18_307)))
 (let ((?x112488 (* 2.0 l_0_18_301)))
 (let ((?x112489 (* ?x112488 l_0_18_306)))
 (let ((?x112485 (* 2.0 l_0_18_300)))
 (let ((?x112486 (* ?x112485 l_0_18_305)))
 (let ((?x112482 (* 2.0 l_0_18_299)))
 (let ((?x112483 (* ?x112482 l_0_18_304)))
 (let ((?x115209 (* l_0_18_273 l_0_18_273)))
 (let ((?x115207 (* l_0_18_272 l_0_18_272)))
 (let ((?x115205 (* l_0_18_271 l_0_18_271)))
 (let ((?x115203 (* l_0_18_270 l_0_18_270)))
 (let ((?x115201 (* l_0_18_269 l_0_18_269)))
 (let ((?x115199 (* l_0_18_268 l_0_18_268)))
 (let ((?x110171 (* 2.0 l_0_18_195)))
 (let ((?x110172 (* ?x110171 l_0_18_200)))
 (let ((?x110168 (* 2.0 l_0_18_194)))
 (let ((?x110169 (* ?x110168 l_0_18_199)))
 (let ((?x110165 (* 2.0 l_0_18_193)))
 (let ((?x110166 (* ?x110165 l_0_18_198)))
 (let ((?x110162 (* 2.0 l_0_18_192)))
 (let ((?x110163 (* ?x110162 l_0_18_197)))
 (let ((?x110159 (* 2.0 l_0_18_191)))
 (let ((?x110160 (* ?x110159 l_0_18_196)))
 (let ((?x110156 (* 2.0 l_0_18_159)))
 (let ((?x110157 (* ?x110156 l_0_18_164)))
 (let ((?x110153 (* 2.0 l_0_18_158)))
 (let ((?x110154 (* ?x110153 l_0_18_163)))
 (let ((?x110150 (* 2.0 l_0_18_157)))
 (let ((?x110151 (* ?x110150 l_0_18_162)))
 (let ((?x110147 (* 2.0 l_0_18_156)))
 (let ((?x110148 (* ?x110147 l_0_18_161)))
 (let ((?x110144 (* 2.0 l_0_18_155)))
 (let ((?x110145 (* ?x110144 l_0_18_160)))
 (let ((?x115196 (- (- (- (+ (+ (+ (+ ?x110145 ?x110148) ?x110151) ?x110154) ?x110157) ?x110160) ?x110163) ?x110166)))
 (let ((?x115208 (+ (+ (+ (+ (+ (- (- ?x115196 ?x110169) ?x110172) ?x115199) ?x115201) ?x115203) ?x115205) ?x115207)))
 (= (- (- (- (- (- (+ ?x115208 ?x115209) ?x112483) ?x112486) ?x112489) ?x112492) ?x112495) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x112494 (* 2.0 l_0_18_303)))
 (let ((?x89269 (* ?x112494 l_0_18_314)))
 (let ((?x112491 (* 2.0 l_0_18_302)))
 (let ((?x89263 (* ?x112491 l_0_18_313)))
 (let ((?x112488 (* 2.0 l_0_18_301)))
 (let ((?x89212 (* ?x112488 l_0_18_312)))
 (let ((?x112485 (* 2.0 l_0_18_300)))
 (let ((?x89202 (* ?x112485 l_0_18_311)))
 (let ((?x112482 (* 2.0 l_0_18_299)))
 (let ((?x89328 (* ?x112482 l_0_18_310)))
 (let ((?x113116 (* 2.0 l_0_18_273)))
 (let ((?x115260 (* ?x113116 l_0_18_279)))
 (let ((?x113113 (* 2.0 l_0_18_272)))
 (let ((?x115258 (* ?x113113 l_0_18_278)))
 (let ((?x113110 (* 2.0 l_0_18_271)))
 (let ((?x115256 (* ?x113110 l_0_18_277)))
 (let ((?x113107 (* 2.0 l_0_18_270)))
 (let ((?x115254 (* ?x113107 l_0_18_276)))
 (let ((?x113104 (* 2.0 l_0_18_269)))
 (let ((?x115252 (* ?x113104 l_0_18_275)))
 (let ((?x113101 (* 2.0 l_0_18_268)))
 (let ((?x115250 (* ?x113101 l_0_18_274)))
 (let ((?x112972 (* 2.0 l_0_18_267)))
 (let ((?x115158 (* ?x112972 l_0_18_272)))
 (let ((?x112969 (* 2.0 l_0_18_266)))
 (let ((?x115156 (* ?x112969 l_0_18_271)))
 (let ((?x112966 (* 2.0 l_0_18_265)))
 (let ((?x115154 (* ?x112966 l_0_18_270)))
 (let ((?x112963 (* 2.0 l_0_18_264)))
 (let ((?x115152 (* ?x112963 l_0_18_269)))
 (let ((?x112960 (* 2.0 l_0_18_263)))
 (let ((?x115150 (* ?x112960 l_0_18_268)))
 (let ((?x110171 (* 2.0 l_0_18_195)))
 (let ((?x110274 (* ?x110171 l_0_18_206)))
 (let ((?x110168 (* 2.0 l_0_18_194)))
 (let ((?x110272 (* ?x110168 l_0_18_205)))
 (let ((?x110165 (* 2.0 l_0_18_193)))
 (let ((?x110270 (* ?x110165 l_0_18_204)))
 (let ((?x110162 (* 2.0 l_0_18_192)))
 (let ((?x110268 (* ?x110162 l_0_18_203)))
 (let ((?x110159 (* 2.0 l_0_18_191)))
 (let ((?x110266 (* ?x110159 l_0_18_202)))
 (let ((?x110156 (* 2.0 l_0_18_159)))
 (let ((?x110264 (* ?x110156 l_0_18_170)))
 (let ((?x110153 (* 2.0 l_0_18_158)))
 (let ((?x110262 (* ?x110153 l_0_18_169)))
 (let ((?x110150 (* 2.0 l_0_18_157)))
 (let ((?x110260 (* ?x110150 l_0_18_168)))
 (let ((?x110147 (* 2.0 l_0_18_156)))
 (let ((?x110258 (* ?x110147 l_0_18_167)))
 (let ((?x110144 (* 2.0 l_0_18_155)))
 (let ((?x110256 (* ?x110144 l_0_18_166)))
 (let ((?x115242 (- (- (- (+ (+ (+ (+ ?x110256 ?x110258) ?x110260) ?x110262) ?x110264) ?x110266) ?x110268) ?x110270)))
 (let ((?x115249 (- (- (- (- (- (- (- ?x115242 ?x110272) ?x110274) ?x115150) ?x115152) ?x115154) ?x115156) ?x115158)))
 (let ((?x115262 (- (+ (+ (+ (+ (+ (+ ?x115249 ?x115250) ?x115252) ?x115254) ?x115256) ?x115258) ?x115260) ?x89328)))
 (= (- (- (- (- ?x115262 ?x89202) ?x89212) ?x89263) ?x89269) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x112494 (* 2.0 l_0_18_303)))
 (let ((?x112539 (* ?x112494 l_0_18_321)))
 (let ((?x112491 (* 2.0 l_0_18_302)))
 (let ((?x112537 (* ?x112491 l_0_18_320)))
 (let ((?x112488 (* 2.0 l_0_18_301)))
 (let ((?x112535 (* ?x112488 l_0_18_319)))
 (let ((?x112485 (* 2.0 l_0_18_300)))
 (let ((?x112533 (* ?x112485 l_0_18_318)))
 (let ((?x112482 (* 2.0 l_0_18_299)))
 (let ((?x112531 (* ?x112482 l_0_18_317)))
 (let ((?x113116 (* 2.0 l_0_18_273)))
 (let ((?x113117 (* ?x113116 l_0_18_286)))
 (let ((?x113113 (* 2.0 l_0_18_272)))
 (let ((?x113114 (* ?x113113 l_0_18_285)))
 (let ((?x113110 (* 2.0 l_0_18_271)))
 (let ((?x113111 (* ?x113110 l_0_18_284)))
 (let ((?x113107 (* 2.0 l_0_18_270)))
 (let ((?x113108 (* ?x113107 l_0_18_283)))
 (let ((?x113104 (* 2.0 l_0_18_269)))
 (let ((?x113105 (* ?x113104 l_0_18_282)))
 (let ((?x113101 (* 2.0 l_0_18_268)))
 (let ((?x113102 (* ?x113101 l_0_18_281)))
 (let ((?x110171 (* 2.0 l_0_18_195)))
 (let ((?x110388 (* ?x110171 l_0_18_213)))
 (let ((?x110168 (* 2.0 l_0_18_194)))
 (let ((?x110386 (* ?x110168 l_0_18_212)))
 (let ((?x110165 (* 2.0 l_0_18_193)))
 (let ((?x110384 (* ?x110165 l_0_18_211)))
 (let ((?x110162 (* 2.0 l_0_18_192)))
 (let ((?x110382 (* ?x110162 l_0_18_210)))
 (let ((?x110159 (* 2.0 l_0_18_191)))
 (let ((?x110380 (* ?x110159 l_0_18_209)))
 (let ((?x110156 (* 2.0 l_0_18_159)))
 (let ((?x110378 (* ?x110156 l_0_18_177)))
 (let ((?x110153 (* 2.0 l_0_18_158)))
 (let ((?x110376 (* ?x110153 l_0_18_176)))
 (let ((?x110150 (* 2.0 l_0_18_157)))
 (let ((?x110374 (* ?x110150 l_0_18_175)))
 (let ((?x110147 (* 2.0 l_0_18_156)))
 (let ((?x110372 (* ?x110147 l_0_18_174)))
 (let ((?x110144 (* 2.0 l_0_18_155)))
 (let ((?x110370 (* ?x110144 l_0_18_173)))
 (let ((?x115293 (- (- (- (+ (+ (+ (+ ?x110370 ?x110372) ?x110374) ?x110376) ?x110378) ?x110380) ?x110382) ?x110384)))
 (let ((?x115299 (- (- (- (- ?x115293 ?x110386) ?x110388) (* (* 2.0 l_0_18_227) l_0_18_232)) (* (* 2.0 l_0_18_228) l_0_18_233))))
 (let ((?x115303 (- (- ?x115299 (* (* 2.0 l_0_18_229) l_0_18_234)) (* (* 2.0 l_0_18_230) l_0_18_235))))
 (let ((?x115308 (+ (+ (+ (- ?x115303 (* (* 2.0 l_0_18_231) l_0_18_236)) ?x113102) ?x113105) ?x113108)))
 (let ((?x115315 (- (- (- (- (+ (+ (+ ?x115308 ?x113111) ?x113114) ?x113117) ?x112531) ?x112533) ?x112535) ?x112537)))
 (= (- ?x115315 ?x112539) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x112615 (* l_0_18_309 l_0_18_309)))
 (let ((?x112613 (* l_0_18_308 l_0_18_308)))
 (let ((?x112611 (* l_0_18_307 l_0_18_307)))
 (let ((?x112609 (* l_0_18_306 l_0_18_306)))
 (let ((?x112607 (* l_0_18_305 l_0_18_305)))
 (let ((?x112605 (* l_0_18_304 l_0_18_304)))
 (let ((?x110494 (* l_0_18_201 l_0_18_201)))
 (let ((?x110492 (* l_0_18_200 l_0_18_200)))
 (let ((?x110488 (* l_0_18_199 l_0_18_199)))
 (let ((?x110486 (* l_0_18_198 l_0_18_198)))
 (let ((?x110484 (* l_0_18_197 l_0_18_197)))
 (let ((?x110482 (* l_0_18_196 l_0_18_196)))
 (let ((?x110474 (* l_0_18_165 l_0_18_165)))
 (let ((?x110459 (* l_0_18_164 l_0_18_164)))
 (let ((?x110456 (* l_0_18_163 l_0_18_163)))
 (let ((?x110452 (* l_0_18_162 l_0_18_162)))
 (let ((?x115347 (+ (+ (* l_0_18_160 l_0_18_160) (* l_0_18_161 l_0_18_161)) ?x110452)))
 (let ((?x115354 (- (- (- (- (+ (+ (+ ?x115347 ?x110456) ?x110459) ?x110474) ?x110482) ?x110484) ?x110486) ?x110488)))
 (let ((?x115361 (- (- (- (- (- (- (- ?x115354 ?x110492) ?x110494) ?x112605) ?x112607) ?x112609) ?x112611) ?x112613)))
 (= (- ?x115361 ?x112615) 0.0)))))))))))))))))))))
(assert
 (let ((?x112660 (* 2.0 l_0_18_309)))
 (let ((?x112661 (* ?x112660 l_0_18_315)))
 (let ((?x112657 (* 2.0 l_0_18_308)))
 (let ((?x112658 (* ?x112657 l_0_18_314)))
 (let ((?x112654 (* 2.0 l_0_18_307)))
 (let ((?x112655 (* ?x112654 l_0_18_313)))
 (let ((?x112651 (* 2.0 l_0_18_306)))
 (let ((?x112652 (* ?x112651 l_0_18_312)))
 (let ((?x112648 (* 2.0 l_0_18_305)))
 (let ((?x112649 (* ?x112648 l_0_18_311)))
 (let ((?x112645 (* 2.0 l_0_18_304)))
 (let ((?x112646 (* ?x112645 l_0_18_310)))
 (let ((?x115209 (* l_0_18_273 l_0_18_273)))
 (let ((?x115207 (* l_0_18_272 l_0_18_272)))
 (let ((?x115205 (* l_0_18_271 l_0_18_271)))
 (let ((?x115203 (* l_0_18_270 l_0_18_270)))
 (let ((?x115201 (* l_0_18_269 l_0_18_269)))
 (let ((?x115199 (* l_0_18_268 l_0_18_268)))
 (let ((?x110611 (* 2.0 l_0_18_201)))
 (let ((?x110612 (* ?x110611 l_0_18_207)))
 (let ((?x110608 (* 2.0 l_0_18_200)))
 (let ((?x110609 (* ?x110608 l_0_18_206)))
 (let ((?x110602 (* 2.0 l_0_18_199)))
 (let ((?x110603 (* ?x110602 l_0_18_205)))
 (let ((?x110599 (* 2.0 l_0_18_198)))
 (let ((?x110600 (* ?x110599 l_0_18_204)))
 (let ((?x110596 (* 2.0 l_0_18_197)))
 (let ((?x110597 (* ?x110596 l_0_18_203)))
 (let ((?x110593 (* 2.0 l_0_18_196)))
 (let ((?x110594 (* ?x110593 l_0_18_202)))
 (let ((?x110583 (* 2.0 l_0_18_165)))
 (let ((?x110584 (* ?x110583 l_0_18_171)))
 (let ((?x110580 (* 2.0 l_0_18_164)))
 (let ((?x110581 (* ?x110580 l_0_18_170)))
 (let ((?x110577 (* 2.0 l_0_18_163)))
 (let ((?x110578 (* ?x110577 l_0_18_169)))
 (let ((?x110574 (* 2.0 l_0_18_162)))
 (let ((?x110575 (* ?x110574 l_0_18_168)))
 (let ((?x110571 (* 2.0 l_0_18_161)))
 (let ((?x110572 (* ?x110571 l_0_18_167)))
 (let ((?x110568 (* 2.0 l_0_18_160)))
 (let ((?x110569 (* ?x110568 l_0_18_166)))
 (let ((?x115371 (- (- (+ (+ (+ (+ (+ ?x110569 ?x110572) ?x110575) ?x110578) ?x110581) ?x110584) ?x110594) ?x110597)))
 (let ((?x115378 (- (- (- (- (- (- (- ?x115371 ?x110600) ?x110603) ?x110609) ?x110612) ?x115199) ?x115201) ?x115203)))
 (let ((?x115385 (- (- (- (- (- (- (- ?x115378 ?x115205) ?x115207) ?x115209) ?x112646) ?x112649) ?x112652) ?x112655)))
 (= (- (- ?x115385 ?x112658) ?x112661) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x112660 (* 2.0 l_0_18_309)))
 (let ((?x112712 (* ?x112660 l_0_18_322)))
 (let ((?x112657 (* 2.0 l_0_18_308)))
 (let ((?x112710 (* ?x112657 l_0_18_321)))
 (let ((?x112654 (* 2.0 l_0_18_307)))
 (let ((?x112708 (* ?x112654 l_0_18_320)))
 (let ((?x112651 (* 2.0 l_0_18_306)))
 (let ((?x112706 (* ?x112651 l_0_18_319)))
 (let ((?x112648 (* 2.0 l_0_18_305)))
 (let ((?x112704 (* ?x112648 l_0_18_318)))
 (let ((?x112645 (* 2.0 l_0_18_304)))
 (let ((?x112702 (* ?x112645 l_0_18_317)))
 (let ((?x115436 (* l_0_18_237 l_0_18_237)))
 (let ((?x115434 (* l_0_18_236 l_0_18_236)))
 (let ((?x115432 (* l_0_18_235 l_0_18_235)))
 (let ((?x115430 (* l_0_18_234 l_0_18_234)))
 (let ((?x115428 (* l_0_18_233 l_0_18_233)))
 (let ((?x115426 (* l_0_18_232 l_0_18_232)))
 (let ((?x110611 (* 2.0 l_0_18_201)))
 (let ((?x110748 (* ?x110611 l_0_18_214)))
 (let ((?x110608 (* 2.0 l_0_18_200)))
 (let ((?x110746 (* ?x110608 l_0_18_213)))
 (let ((?x110602 (* 2.0 l_0_18_199)))
 (let ((?x110742 (* ?x110602 l_0_18_212)))
 (let ((?x110599 (* 2.0 l_0_18_198)))
 (let ((?x110740 (* ?x110599 l_0_18_211)))
 (let ((?x110596 (* 2.0 l_0_18_197)))
 (let ((?x110738 (* ?x110596 l_0_18_210)))
 (let ((?x110593 (* 2.0 l_0_18_196)))
 (let ((?x110736 (* ?x110593 l_0_18_209)))
 (let ((?x110583 (* 2.0 l_0_18_165)))
 (let ((?x110728 (* ?x110583 l_0_18_178)))
 (let ((?x110580 (* 2.0 l_0_18_164)))
 (let ((?x110726 (* ?x110580 l_0_18_177)))
 (let ((?x110577 (* 2.0 l_0_18_163)))
 (let ((?x110724 (* ?x110577 l_0_18_176)))
 (let ((?x110574 (* 2.0 l_0_18_162)))
 (let ((?x110722 (* ?x110574 l_0_18_175)))
 (let ((?x110571 (* 2.0 l_0_18_161)))
 (let ((?x110720 (* ?x110571 l_0_18_174)))
 (let ((?x110568 (* 2.0 l_0_18_160)))
 (let ((?x110718 (* ?x110568 l_0_18_173)))
 (let ((?x115421 (- (- (+ (+ (+ (+ (+ ?x110718 ?x110720) ?x110722) ?x110724) ?x110726) ?x110728) ?x110736) ?x110738)))
 (let ((?x115431 (- (- (- (- (- (- (- ?x115421 ?x110740) ?x110742) ?x110746) ?x110748) ?x115426) ?x115428) ?x115430)))
 (let ((?x115441 (- (- (- (- (- (- (- ?x115431 ?x115432) ?x115434) ?x115436) ?x112702) ?x112704) ?x112706) ?x112708)))
 (= (- (- ?x115441 ?x112710) ?x112712) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x112728 (* l_0_18_316 l_0_18_316)))
 (let ((?x112726 (* l_0_18_315 l_0_18_315)))
 (let ((?x112724 (* l_0_18_314 l_0_18_314)))
 (let ((?x112722 (* l_0_18_313 l_0_18_313)))
 (let ((?x89688 (* l_0_18_312 l_0_18_312)))
 (let ((?x89687 (* l_0_18_311 l_0_18_311)))
 (let ((?x89689 (* l_0_18_310 l_0_18_310)))
 (let ((?x113116 (* 2.0 l_0_18_273)))
 (let ((?x115260 (* ?x113116 l_0_18_279)))
 (let ((?x113113 (* 2.0 l_0_18_272)))
 (let ((?x115258 (* ?x113113 l_0_18_278)))
 (let ((?x113110 (* 2.0 l_0_18_271)))
 (let ((?x115256 (* ?x113110 l_0_18_277)))
 (let ((?x113107 (* 2.0 l_0_18_270)))
 (let ((?x115254 (* ?x113107 l_0_18_276)))
 (let ((?x113104 (* 2.0 l_0_18_269)))
 (let ((?x115252 (* ?x113104 l_0_18_275)))
 (let ((?x113101 (* 2.0 l_0_18_268)))
 (let ((?x115250 (* ?x113101 l_0_18_274)))
 (let ((?x110853 (* l_0_18_208 l_0_18_208)))
 (let ((?x110851 (* l_0_18_207 l_0_18_207)))
 (let ((?x110849 (* l_0_18_206 l_0_18_206)))
 (let ((?x110847 (* l_0_18_205 l_0_18_205)))
 (let ((?x110845 (* l_0_18_204 l_0_18_204)))
 (let ((?x110843 (* l_0_18_203 l_0_18_203)))
 (let ((?x110841 (* l_0_18_202 l_0_18_202)))
 (let ((?x110839 (* l_0_18_172 l_0_18_172)))
 (let ((?x110837 (* l_0_18_171 l_0_18_171)))
 (let ((?x110835 (* l_0_18_170 l_0_18_170)))
 (let ((?x110833 (* l_0_18_169 l_0_18_169)))
 (let ((?x110831 (* l_0_18_168 l_0_18_168)))
 (let ((?x51067 (+ (+ (* l_0_18_166 l_0_18_166) (* l_0_18_167 l_0_18_167)) ?x110831)))
 (let ((?x115471 (- (- (- (+ (+ (+ (+ ?x51067 ?x110833) ?x110835) ?x110837) ?x110839) ?x110841) ?x110843) ?x110845)))
 (let ((?x115478 (- (- (- (- (- (- (- ?x115471 ?x110847) ?x110849) ?x110851) ?x110853) ?x115250) ?x115252) ?x115254)))
 (let ((?x115485 (- (- (- (- (- (- (- ?x115478 ?x115256) ?x115258) ?x115260) ?x89689) ?x89687) ?x89688) ?x112722)))
 (= (- (- (- ?x115485 ?x112724) ?x112726) ?x112728) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x112790 (* l_0_18_324 l_0_18_324)))
 (let ((?x112788 (* l_0_18_323 l_0_18_323)))
 (let ((?x112786 (* l_0_18_322 l_0_18_322)))
 (let ((?x90003 (* l_0_18_321 l_0_18_321)))
 (let ((?x13441 (* l_0_18_320 l_0_18_320)))
 (let ((?x13411 (* l_0_18_319 l_0_18_319)))
 (let ((?x13530 (* l_0_18_318 l_0_18_318)))
 (let ((?x13537 (* l_0_18_317 l_0_18_317)))
 (let ((?x111179 (* l_0_18_216 l_0_18_216)))
 (let ((?x111177 (* l_0_18_215 l_0_18_215)))
 (let ((?x111175 (* l_0_18_214 l_0_18_214)))
 (let ((?x111173 (* l_0_18_213 l_0_18_213)))
 (let ((?x111171 (* l_0_18_212 l_0_18_212)))
 (let ((?x111169 (* l_0_18_211 l_0_18_211)))
 (let ((?x111167 (* l_0_18_210 l_0_18_210)))
 (let ((?x111165 (* l_0_18_209 l_0_18_209)))
 (let ((?x111163 (* l_0_18_180 l_0_18_180)))
 (let ((?x111161 (* l_0_18_179 l_0_18_179)))
 (let ((?x111159 (* l_0_18_178 l_0_18_178)))
 (let ((?x111157 (* l_0_18_177 l_0_18_177)))
 (let ((?x111136 (* l_0_18_176 l_0_18_176)))
 (let ((?x111132 (* l_0_18_175 l_0_18_175)))
 (let ((?x17518 (+ (+ (* l_0_18_173 l_0_18_173) (* l_0_18_174 l_0_18_174)) ?x111132)))
 (let ((?x115507 (- (- (+ (+ (+ (+ (+ ?x17518 ?x111136) ?x111157) ?x111159) ?x111161) ?x111163) ?x111165) ?x111167)))
 (let ((?x115515 (- (- (- (- (- (- (- ?x115507 ?x111169) ?x111171) ?x111173) ?x111175) ?x111177) ?x111179) (* (* 2.0 l_0_18_232) l_0_18_245))))
 (let ((?x115519 (- (- ?x115515 (* (* 2.0 l_0_18_233) l_0_18_246)) (* (* 2.0 l_0_18_234) l_0_18_247))))
 (let ((?x115523 (- (- ?x115519 (* (* 2.0 l_0_18_235) l_0_18_248)) (* (* 2.0 l_0_18_236) l_0_18_249))))
 (let ((?x115528 (- (- (- (- ?x115523 (* (* 2.0 l_0_18_237) l_0_18_250)) ?x13537) ?x13530) ?x13411)))
 (= (- (- (- (- (- ?x115528 ?x13441) ?x90003) ?x112786) ?x112788) ?x112790) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x115577 (- (- (* (- l_0_18_218) l_0_18_218) (* l_0_18_219 l_0_18_219)) (* (* 2.0 l_0_18_326) l_0_18_353))))
 (let ((?x115581 (- (- ?x115577 (* (* 2.0 l_0_18_327) l_0_18_354)) (* (* 2.0 l_0_18_362) l_0_18_389))))
 (let ((?x115585 (- (- ?x115581 (* (* 2.0 l_0_18_363) l_0_18_390)) (* (* 2.0 l_0_18_398) l_0_18_425))))
 (= (- ?x115585 (* (* 2.0 l_0_18_399) l_0_18_426)) 0.0)))))
(assert
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x108455 (* ?x108454 l_0_18_282)))
 (let ((?x108451 (* 2.0 l_0_18_254)))
 (let ((?x108452 (* ?x108451 l_0_18_281)))
 (let ((?x115624 (- (* (* (- 2.0) l_0_18_218) l_0_18_227) (* (* 2.0 l_0_18_219) l_0_18_228))))
 (let ((?x115630 (- (- (+ (+ ?x115624 ?x108452) ?x108455) (* (* 2.0 l_0_18_335) l_0_18_353)) (* (* 2.0 l_0_18_336) l_0_18_354))))
 (let ((?x115634 (- (- ?x115630 (* (* 2.0 l_0_18_337) l_0_18_355)) (* (* 2.0 l_0_18_338) l_0_18_356))))
 (let ((?x115638 (- (- ?x115634 (* (* 2.0 l_0_18_339) l_0_18_357)) (* (* 2.0 l_0_18_371) l_0_18_389))))
 (let ((?x115642 (- (- ?x115638 (* (* 2.0 l_0_18_372) l_0_18_390)) (* (* 2.0 l_0_18_373) l_0_18_391))))
 (let ((?x115646 (- (- ?x115642 (* (* 2.0 l_0_18_374) l_0_18_392)) (* (* 2.0 l_0_18_375) l_0_18_393))))
 (let ((?x115650 (- (- ?x115646 (* (* 2.0 l_0_18_407) l_0_18_425)) (* (* 2.0 l_0_18_408) l_0_18_426))))
 (let ((?x115654 (- (- ?x115650 (* (* 2.0 l_0_18_409) l_0_18_427)) (* (* 2.0 l_0_18_410) l_0_18_428))))
 (= (- ?x115654 (* (* 2.0 l_0_18_411) l_0_18_429)) 0.0))))))))))))))
(assert
 (let ((?x115749 (* l_0_18_432 l_0_18_432)))
 (let ((?x115747 (* l_0_18_431 l_0_18_431)))
 (let ((?x115745 (* l_0_18_430 l_0_18_430)))
 (let ((?x115743 (* l_0_18_429 l_0_18_429)))
 (let ((?x115741 (* l_0_18_428 l_0_18_428)))
 (let ((?x115739 (* l_0_18_427 l_0_18_427)))
 (let ((?x115737 (* l_0_18_426 l_0_18_426)))
 (let ((?x115735 (* l_0_18_425 l_0_18_425)))
 (let ((?x115733 (* l_0_18_396 l_0_18_396)))
 (let ((?x115731 (* l_0_18_395 l_0_18_395)))
 (let ((?x115729 (* l_0_18_394 l_0_18_394)))
 (let ((?x115727 (* l_0_18_393 l_0_18_393)))
 (let ((?x115725 (* l_0_18_392 l_0_18_392)))
 (let ((?x115723 (* l_0_18_391 l_0_18_391)))
 (let ((?x115721 (* l_0_18_390 l_0_18_390)))
 (let ((?x115719 (* l_0_18_389 l_0_18_389)))
 (let ((?x115717 (* l_0_18_360 l_0_18_360)))
 (let ((?x115715 (* l_0_18_359 l_0_18_359)))
 (let ((?x115713 (* l_0_18_358 l_0_18_358)))
 (let ((?x115711 (* l_0_18_357 l_0_18_357)))
 (let ((?x115709 (* l_0_18_356 l_0_18_356)))
 (let ((?x115707 (* l_0_18_355 l_0_18_355)))
 (let ((?x115705 (* l_0_18_354 l_0_18_354)))
 (let ((?x115703 (* l_0_18_353 l_0_18_353)))
 (let ((?x115702 (- (* (* (- 2.0) l_0_18_218) l_0_18_245) (* (* 2.0 l_0_18_219) l_0_18_246))))
 (let ((?x115716 (- (- (- (- (- (- (- ?x115702 ?x115703) ?x115705) ?x115707) ?x115709) ?x115711) ?x115713) ?x115715)))
 (let ((?x115730 (- (- (- (- (- (- (- ?x115716 ?x115717) ?x115719) ?x115721) ?x115723) ?x115725) ?x115727) ?x115729)))
 (let ((?x115744 (- (- (- (- (- (- (- ?x115730 ?x115731) ?x115733) ?x115735) ?x115737) ?x115739) ?x115741) ?x115743)))
 (= (- (- (- ?x115744 ?x115745) ?x115747) ?x115749) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x112972 (* 2.0 l_0_18_267)))
 (let ((?x112973 (* ?x112972 l_0_18_285)))
 (let ((?x112969 (* 2.0 l_0_18_266)))
 (let ((?x112970 (* ?x112969 l_0_18_284)))
 (let ((?x112966 (* 2.0 l_0_18_265)))
 (let ((?x112967 (* ?x112966 l_0_18_283)))
 (let ((?x112963 (* 2.0 l_0_18_264)))
 (let ((?x112964 (* ?x112963 l_0_18_282)))
 (let ((?x112960 (* 2.0 l_0_18_263)))
 (let ((?x112961 (* ?x112960 l_0_18_281)))
 (let ((?x92731 (* l_0_18_231 l_0_18_231)))
 (let ((?x92725 (* l_0_18_230 l_0_18_230)))
 (let ((?x51519 (* l_0_18_229 l_0_18_229)))
 (let ((?x18295 (- (- (* (- l_0_18_227) l_0_18_227) (* l_0_18_228 l_0_18_228)) ?x51519)))
 (let ((?x72199 (+ (+ (+ (+ (+ (- (- ?x18295 ?x92725) ?x92731) ?x112961) ?x112964) ?x112967) ?x112970) ?x112973)))
 (= ?x72199 0.0)))))))))))))))))
(assert
 (let ((?x113214 (* l_0_18_288 l_0_18_288)))
 (let ((?x113212 (* l_0_18_287 l_0_18_287)))
 (let ((?x113210 (* l_0_18_286 l_0_18_286)))
 (let ((?x113208 (* l_0_18_285 l_0_18_285)))
 (let ((?x113206 (* l_0_18_284 l_0_18_284)))
 (let ((?x113204 (* l_0_18_283 l_0_18_283)))
 (let ((?x113202 (* l_0_18_282 l_0_18_282)))
 (let ((?x113200 (* l_0_18_281 l_0_18_281)))
 (let ((?x92872 (- (* (* (- 2.0) l_0_18_227) l_0_18_245) (* (* 2.0 l_0_18_228) l_0_18_246))))
 (let ((?x72356 (- (- ?x92872 (* (* 2.0 l_0_18_229) l_0_18_247)) (* (* 2.0 l_0_18_230) l_0_18_248))))
 (let ((?x115789 (+ (+ (+ (- ?x72356 (* (* 2.0 l_0_18_231) l_0_18_249)) ?x113200) ?x113202) ?x113204)))
 (= (+ (+ (+ (+ (+ ?x115789 ?x113206) ?x113208) ?x113210) ?x113212) ?x113214) 0.0)))))))))))))
(assert
 (let ((?x115819 (* l_0_18_252 l_0_18_252)))
 (let ((?x115817 (* l_0_18_251 l_0_18_251)))
 (let ((?x115815 (* l_0_18_250 l_0_18_250)))
 (let ((?x115813 (* l_0_18_249 l_0_18_249)))
 (let ((?x72383 (* l_0_18_248 l_0_18_248)))
 (let ((?x92886 (* l_0_18_247 l_0_18_247)))
 (let ((?x92883 (- (- (* (- l_0_18_245) l_0_18_245) (* l_0_18_246 l_0_18_246)) ?x92886)))
 (= (- (- (- (- (- ?x92883 ?x72383) ?x115813) ?x115815) ?x115817) ?x115819) 0.0)))))))))
(assert
 (let ((?x115839 (- (- (* (- l_0_18_254) l_0_18_254) (* l_0_18_255 l_0_18_255)) (* (* 2.0 l_0_18_326) l_0_18_346))))
 (let ((?x115843 (- (- ?x115839 (* (* 2.0 l_0_18_327) l_0_18_347)) (* (* 2.0 l_0_18_362) l_0_18_382))))
 (let ((?x115847 (- (- ?x115843 (* (* 2.0 l_0_18_363) l_0_18_383)) (* (* 2.0 l_0_18_398) l_0_18_418))))
 (= (- ?x115847 (* (* 2.0 l_0_18_399) l_0_18_419)) 0.0)))))
(assert
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x115871 (* ?x108454 l_0_18_257)))
 (let ((?x115874 (- (- (* (* (- 2.0) l_0_18_254) l_0_18_256) ?x115871) (* (* 2.0 l_0_18_328) l_0_18_346))))
 (let ((?x115878 (- (- ?x115874 (* (* 2.0 l_0_18_329) l_0_18_347)) (* (* 2.0 l_0_18_330) l_0_18_348))))
 (let ((?x115882 (- (- ?x115878 (* (* 2.0 l_0_18_364) l_0_18_382)) (* (* 2.0 l_0_18_365) l_0_18_383))))
 (let ((?x115886 (- (- ?x115882 (* (* 2.0 l_0_18_366) l_0_18_384)) (* (* 2.0 l_0_18_400) l_0_18_418))))
 (let ((?x115890 (- (- ?x115886 (* (* 2.0 l_0_18_401) l_0_18_419)) (* (* 2.0 l_0_18_402) l_0_18_420))))
 (= ?x115890 0.0)))))))))
(assert
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x72375 (* ?x108454 l_0_18_275)))
 (let ((?x92875 (* ?x108454 l_0_18_264)))
 (let ((?x18732 (+ (* (* (- 2.0) l_0_18_254) l_0_18_263) (* (* 2.0 l_0_18_254) l_0_18_274))))
 (let ((?x72386 (- (- (+ (- ?x18732 ?x92875) ?x72375) (* (* 2.0 l_0_18_335) l_0_18_346)) (* (* 2.0 l_0_18_336) l_0_18_347))))
 (let ((?x18754 (- (- ?x72386 (* (* 2.0 l_0_18_337) l_0_18_348)) (* (* 2.0 l_0_18_338) l_0_18_349))))
 (let ((?x51966 (- (- ?x18754 (* (* 2.0 l_0_18_339) l_0_18_350)) (* (* 2.0 l_0_18_371) l_0_18_382))))
 (let ((?x51996 (- (- ?x51966 (* (* 2.0 l_0_18_372) l_0_18_383)) (* (* 2.0 l_0_18_373) l_0_18_384))))
 (let ((?x92913 (- (- ?x51996 (* (* 2.0 l_0_18_374) l_0_18_385)) (* (* 2.0 l_0_18_375) l_0_18_386))))
 (let ((?x70472 (- (- ?x92913 (* (* 2.0 l_0_18_407) l_0_18_418)) (* (* 2.0 l_0_18_408) l_0_18_419))))
 (let ((?x72426 (- (- ?x70472 (* (* 2.0 l_0_18_409) l_0_18_420)) (* (* 2.0 l_0_18_410) l_0_18_421))))
 (= (- ?x72426 (* (* 2.0 l_0_18_411) l_0_18_422)) 0.0)))))))))))))
(assert
 (let ((?x116000 (* l_0_18_424 l_0_18_424)))
 (let ((?x115998 (* l_0_18_423 l_0_18_423)))
 (let ((?x115996 (* l_0_18_422 l_0_18_422)))
 (let ((?x115994 (* l_0_18_421 l_0_18_421)))
 (let ((?x115992 (* l_0_18_420 l_0_18_420)))
 (let ((?x115990 (* l_0_18_419 l_0_18_419)))
 (let ((?x115988 (* l_0_18_418 l_0_18_418)))
 (let ((?x115986 (* l_0_18_388 l_0_18_388)))
 (let ((?x115984 (* l_0_18_387 l_0_18_387)))
 (let ((?x115982 (* l_0_18_386 l_0_18_386)))
 (let ((?x115980 (* l_0_18_385 l_0_18_385)))
 (let ((?x115978 (* l_0_18_384 l_0_18_384)))
 (let ((?x115976 (* l_0_18_383 l_0_18_383)))
 (let ((?x115974 (* l_0_18_382 l_0_18_382)))
 (let ((?x115972 (* l_0_18_352 l_0_18_352)))
 (let ((?x115970 (* l_0_18_351 l_0_18_351)))
 (let ((?x115968 (* l_0_18_350 l_0_18_350)))
 (let ((?x115966 (* l_0_18_349 l_0_18_349)))
 (let ((?x115964 (* l_0_18_348 l_0_18_348)))
 (let ((?x115962 (* l_0_18_347 l_0_18_347)))
 (let ((?x115960 (* l_0_18_346 l_0_18_346)))
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x72375 (* ?x108454 l_0_18_275)))
 (let ((?x115965 (- (- (- (- (* (* (- 2.0) l_0_18_254) l_0_18_274) ?x72375) ?x115960) ?x115962) ?x115964)))
 (let ((?x115979 (- (- (- (- (- (- (- ?x115965 ?x115966) ?x115968) ?x115970) ?x115972) ?x115974) ?x115976) ?x115978)))
 (let ((?x115993 (- (- (- (- (- (- (- ?x115979 ?x115980) ?x115982) ?x115984) ?x115986) ?x115988) ?x115990) ?x115992)))
 (= (- (- (- (- ?x115993 ?x115994) ?x115996) ?x115998) ?x116000) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x116042 (* l_0_18_258 l_0_18_258)))
 (let ((?x116043 (- (- (* (- l_0_18_256) l_0_18_256) (* l_0_18_257 l_0_18_257)) ?x116042)))
 (= ?x116043 0.0))))
(assert
 (let ((?x109102 (* 2.0 l_0_18_258)))
 (let ((?x116062 (* ?x109102 l_0_18_276)))
 (let ((?x116060 (* ?x109102 l_0_18_265)))
 (let ((?x109099 (* 2.0 l_0_18_257)))
 (let ((?x116058 (* ?x109099 l_0_18_275)))
 (let ((?x116056 (* ?x109099 l_0_18_264)))
 (let ((?x116055 (+ (* (* (- 2.0) l_0_18_256) l_0_18_263) (* (* 2.0 l_0_18_256) l_0_18_274))))
 (= (+ (- (+ (- ?x116055 ?x116056) ?x116058) ?x116060) ?x116062) 0.0)))))))))
(assert
 (let ((?x109102 (* 2.0 l_0_18_258)))
 (let ((?x116062 (* ?x109102 l_0_18_276)))
 (let ((?x109099 (* 2.0 l_0_18_257)))
 (let ((?x116058 (* ?x109099 l_0_18_275)))
 (= (- (- (* (* (- 2.0) l_0_18_256) l_0_18_274) ?x116058) ?x116062) 0.0))))))
(assert
 (let ((?x116095 (* l_0_18_267 l_0_18_267)))
 (let ((?x112972 (* 2.0 l_0_18_267)))
 (let ((?x116093 (* ?x112972 l_0_18_278)))
 (let ((?x116091 (* l_0_18_266 l_0_18_266)))
 (let ((?x112969 (* 2.0 l_0_18_266)))
 (let ((?x116089 (* ?x112969 l_0_18_277)))
 (let ((?x116087 (* l_0_18_265 l_0_18_265)))
 (let ((?x112966 (* 2.0 l_0_18_265)))
 (let ((?x116085 (* ?x112966 l_0_18_276)))
 (let ((?x116083 (* l_0_18_264 l_0_18_264)))
 (let ((?x112963 (* 2.0 l_0_18_264)))
 (let ((?x116081 (* ?x112963 l_0_18_275)))
 (let ((?x116079 (* l_0_18_263 l_0_18_263)))
 (let ((?x116086 (+ (- (+ (- (* (* 2.0 l_0_18_263) l_0_18_274) ?x116079) ?x116081) ?x116083) ?x116085)))
 (= (- (+ (- (+ (- ?x116086 ?x116087) ?x116089) ?x116091) ?x116093) ?x116095) 0.0))))))))))))))))
(assert
 (let ((?x116143 (* l_0_18_280 l_0_18_280)))
 (let ((?x116141 (* l_0_18_279 l_0_18_279)))
 (let ((?x116139 (* l_0_18_278 l_0_18_278)))
 (let ((?x116137 (* l_0_18_277 l_0_18_277)))
 (let ((?x116135 (* l_0_18_276 l_0_18_276)))
 (let ((?x116133 (* l_0_18_275 l_0_18_275)))
 (let ((?x116131 (* l_0_18_274 l_0_18_274)))
 (let ((?x112972 (* 2.0 l_0_18_267)))
 (let ((?x116093 (* ?x112972 l_0_18_278)))
 (let ((?x112969 (* 2.0 l_0_18_266)))
 (let ((?x116089 (* ?x112969 l_0_18_277)))
 (let ((?x112966 (* 2.0 l_0_18_265)))
 (let ((?x116085 (* ?x112966 l_0_18_276)))
 (let ((?x112963 (* 2.0 l_0_18_264)))
 (let ((?x116081 (* ?x112963 l_0_18_275)))
 (let ((?x116130 (- (- (- (- (* (* (- 2.0) l_0_18_263) l_0_18_274) ?x116081) ?x116085) ?x116089) ?x116093)))
 (let ((?x116144 (+ (+ (+ (+ (+ (+ (+ ?x116130 ?x116131) ?x116133) ?x116135) ?x116137) ?x116139) ?x116141) ?x116143)))
 (= ?x116144 0.0)))))))))))))))))))
(assert
 (let ((?x116143 (* l_0_18_280 l_0_18_280)))
 (let ((?x116141 (* l_0_18_279 l_0_18_279)))
 (let ((?x116139 (* l_0_18_278 l_0_18_278)))
 (let ((?x116137 (* l_0_18_277 l_0_18_277)))
 (let ((?x116135 (* l_0_18_276 l_0_18_276)))
 (let ((?x116160 (- (- (* (- l_0_18_274) l_0_18_274) (* l_0_18_275 l_0_18_275)) ?x116135)))
 (= (- (- (- (- ?x116160 ?x116137) ?x116139) ?x116141) ?x116143) 0.0))))))))
(assert
 (let ((?x52292 (- (+ (* l_0_18_254 l_0_18_254) (* l_0_18_255 l_0_18_255)) (* (* 2.0 l_0_18_326) l_0_18_335))))
 (let ((?x116168 (- (- ?x52292 (* (* 2.0 l_0_18_327) l_0_18_336)) (* (* 2.0 l_0_18_362) l_0_18_371))))
 (let ((?x116172 (- (- ?x116168 (* (* 2.0 l_0_18_363) l_0_18_372)) (* (* 2.0 l_0_18_398) l_0_18_407))))
 (= (- ?x116172 (* (* 2.0 l_0_18_399) l_0_18_408)) 0.0)))))
(assert
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x115871 (* ?x108454 l_0_18_257)))
 (let ((?x116200 (- (+ (* (* 2.0 l_0_18_254) l_0_18_256) ?x115871) (* (* 2.0 l_0_18_328) l_0_18_335))))
 (let ((?x116204 (- (- ?x116200 (* (* 2.0 l_0_18_329) l_0_18_336)) (* (* 2.0 l_0_18_330) l_0_18_337))))
 (let ((?x116208 (- (- ?x116204 (* (* 2.0 l_0_18_364) l_0_18_371)) (* (* 2.0 l_0_18_365) l_0_18_372))))
 (let ((?x116212 (- (- ?x116208 (* (* 2.0 l_0_18_366) l_0_18_373)) (* (* 2.0 l_0_18_400) l_0_18_407))))
 (let ((?x116216 (- (- ?x116212 (* (* 2.0 l_0_18_401) l_0_18_408)) (* (* 2.0 l_0_18_402) l_0_18_409))))
 (= ?x116216 0.0)))))))))
(assert
 (let ((?x116252 (* l_0_18_411 l_0_18_411)))
 (let ((?x116250 (* l_0_18_410 l_0_18_410)))
 (let ((?x116248 (* l_0_18_409 l_0_18_409)))
 (let ((?x116246 (* l_0_18_408 l_0_18_408)))
 (let ((?x116244 (* l_0_18_407 l_0_18_407)))
 (let ((?x116242 (* l_0_18_375 l_0_18_375)))
 (let ((?x116240 (* l_0_18_374 l_0_18_374)))
 (let ((?x116238 (* l_0_18_373 l_0_18_373)))
 (let ((?x116236 (* l_0_18_372 l_0_18_372)))
 (let ((?x116234 (* l_0_18_371 l_0_18_371)))
 (let ((?x116232 (* l_0_18_339 l_0_18_339)))
 (let ((?x116230 (* l_0_18_338 l_0_18_338)))
 (let ((?x116228 (* l_0_18_337 l_0_18_337)))
 (let ((?x116226 (* l_0_18_336 l_0_18_336)))
 (let ((?x116224 (* l_0_18_335 l_0_18_335)))
 (let ((?x108454 (* 2.0 l_0_18_255)))
 (let ((?x92875 (* ?x108454 l_0_18_264)))
 (let ((?x116229 (- (- (- (+ (* (* 2.0 l_0_18_254) l_0_18_263) ?x92875) ?x116224) ?x116226) ?x116228)))
 (let ((?x116243 (- (- (- (- (- (- (- ?x116229 ?x116230) ?x116232) ?x116234) ?x116236) ?x116238) ?x116240) ?x116242)))
 (= (- (- (- (- (- ?x116243 ?x116244) ?x116246) ?x116248) ?x116250) ?x116252) 0.0)))))))))))))))))))))
(assert
 (let ((?x116042 (* l_0_18_258 l_0_18_258)))
 (let ((?x116282 (+ (+ (* l_0_18_256 l_0_18_256) (* l_0_18_257 l_0_18_257)) ?x116042)))
 (= ?x116282 0.0))))
(assert
 (let ((?x109102 (* 2.0 l_0_18_258)))
 (let ((?x116060 (* ?x109102 l_0_18_265)))
 (let ((?x109099 (* 2.0 l_0_18_257)))
 (let ((?x116056 (* ?x109099 l_0_18_264)))
 (= (+ (+ (* (* 2.0 l_0_18_256) l_0_18_263) ?x116056) ?x116060) 0.0))))))
(assert
 (let ((?x116095 (* l_0_18_267 l_0_18_267)))
 (let ((?x116091 (* l_0_18_266 l_0_18_266)))
 (let ((?x116087 (* l_0_18_265 l_0_18_265)))
 (let ((?x116289 (+ (+ (* l_0_18_263 l_0_18_263) (* l_0_18_264 l_0_18_264)) ?x116087)))
 (= (+ (+ ?x116289 ?x116091) ?x116095) 0.0))))))
(assert
 (let ((?x116299 (* l_0_18_399 l_0_18_399)))
 (let ((?x116297 (* l_0_18_398 l_0_18_398)))
 (let ((?x116295 (* l_0_18_363 l_0_18_363)))
 (let ((?x116293 (* l_0_18_362 l_0_18_362)))
 (let ((?x116294 (- (- (* (- l_0_18_326) l_0_18_326) (* l_0_18_327 l_0_18_327)) ?x116293)))
 (= (- (- (- ?x116294 ?x116295) ?x116297) ?x116299) 0.0)))))))
(assert
 (let ((?x116319 (- (* (* (- 2.0) l_0_18_326) l_0_18_328) (* (* 2.0 l_0_18_327) l_0_18_329))))
 (let ((?x116323 (- (- ?x116319 (* (* 2.0 l_0_18_362) l_0_18_364)) (* (* 2.0 l_0_18_363) l_0_18_365))))
 (let ((?x116327 (- (- ?x116323 (* (* 2.0 l_0_18_398) l_0_18_400)) (* (* 2.0 l_0_18_399) l_0_18_401))))
 (= ?x116327 0.0)))))
(assert
 (let ((?x116365 (* l_0_18_402 l_0_18_402)))
 (let ((?x116363 (* l_0_18_401 l_0_18_401)))
 (let ((?x116361 (* l_0_18_400 l_0_18_400)))
 (let ((?x116359 (* l_0_18_366 l_0_18_366)))
 (let ((?x116357 (* l_0_18_365 l_0_18_365)))
 (let ((?x116355 (* l_0_18_364 l_0_18_364)))
 (let ((?x116353 (* l_0_18_330 l_0_18_330)))
 (let ((?x116354 (- (- (* (- l_0_18_328) l_0_18_328) (* l_0_18_329 l_0_18_329)) ?x116353)))
 (= (- (- (- (- (- (- ?x116354 ?x116355) ?x116357) ?x116359) ?x116361) ?x116363) ?x116365) 0.0))))))))))
(assert
 (>= l_0_18_1 0.0))
(assert
 (>= l_0_18_3 0.0))
(assert
 (>= l_0_18_6 0.0))
(assert
 (>= l_0_18_10 0.0))
(assert
 (>= l_0_18_15 0.0))
(assert
 (>= l_0_18_21 0.0))
(assert
 (>= l_0_18_28 0.0))
(assert
 (>= l_0_18_36 0.0))
(assert
 (>= l_0_18_37 0.0))
(assert
 (>= l_0_18_39 0.0))
(assert
 (>= l_0_18_42 0.0))
(assert
 (>= l_0_18_46 0.0))
(assert
 (>= l_0_18_51 0.0))
(assert
 (>= l_0_18_57 0.0))
(assert
 (>= l_0_18_64 0.0))
(assert
 (>= l_0_18_72 0.0))
(assert
 (>= l_0_18_73 0.0))
(assert
 (>= l_0_18_75 0.0))
(assert
 (>= l_0_18_78 0.0))
(assert
 (>= l_0_18_82 0.0))
(assert
 (>= l_0_18_87 0.0))
(assert
 (>= l_0_18_93 0.0))
(assert
 (>= l_0_18_100 0.0))
(assert
 (>= l_0_18_108 0.0))
(assert
 (>= l_0_18_109 0.0))
(assert
 (>= l_0_18_111 0.0))
(assert
 (>= l_0_18_114 0.0))
(assert
 (>= l_0_18_118 0.0))
(assert
 (>= l_0_18_123 0.0))
(assert
 (>= l_0_18_129 0.0))
(assert
 (>= l_0_18_136 0.0))
(assert
 (>= l_0_18_144 0.0))
(assert
 (>= l_0_18_145 0.0))
(assert
 (>= l_0_18_147 0.0))
(assert
 (>= l_0_18_150 0.0))
(assert
 (>= l_0_18_154 0.0))
(assert
 (>= l_0_18_159 0.0))
(assert
 (>= l_0_18_165 0.0))
(assert
 (>= l_0_18_172 0.0))
(assert
 (>= l_0_18_180 0.0))
(assert
 (>= l_0_18_181 0.0))
(assert
 (>= l_0_18_183 0.0))
(assert
 (>= l_0_18_186 0.0))
(assert
 (>= l_0_18_190 0.0))
(assert
 (>= l_0_18_195 0.0))
(assert
 (>= l_0_18_201 0.0))
(assert
 (>= l_0_18_208 0.0))
(assert
 (>= l_0_18_216 0.0))
(assert
 (>= l_0_18_217 0.0))
(assert
 (>= l_0_18_219 0.0))
(assert
 (>= l_0_18_222 0.0))
(assert
 (>= l_0_18_226 0.0))
(assert
 (>= l_0_18_231 0.0))
(assert
 (>= l_0_18_237 0.0))
(assert
 (>= l_0_18_244 0.0))
(assert
 (>= l_0_18_252 0.0))
(assert
 (>= l_0_18_253 0.0))
(assert
 (>= l_0_18_255 0.0))
(assert
 (>= l_0_18_258 0.0))
(assert
 (>= l_0_18_262 0.0))
(assert
 (>= l_0_18_267 0.0))
(assert
 (>= l_0_18_273 0.0))
(assert
 (>= l_0_18_280 0.0))
(assert
 (>= l_0_18_288 0.0))
(assert
 (>= l_0_18_289 0.0))
(assert
 (>= l_0_18_291 0.0))
(assert
 (>= l_0_18_294 0.0))
(assert
 (>= l_0_18_298 0.0))
(assert
 (>= l_0_18_303 0.0))
(assert
 (>= l_0_18_309 0.0))
(assert
 (>= l_0_18_316 0.0))
(assert
 (>= l_0_18_324 0.0))
(assert
 (>= l_0_18_325 0.0))
(assert
 (>= l_0_18_327 0.0))
(assert
 (>= l_0_18_330 0.0))
(assert
 (>= l_0_18_334 0.0))
(assert
 (>= l_0_18_339 0.0))
(assert
 (>= l_0_18_345 0.0))
(assert
 (>= l_0_18_352 0.0))
(assert
 (>= l_0_18_360 0.0))
(assert
 (>= l_0_18_361 0.0))
(assert
 (>= l_0_18_363 0.0))
(assert
 (>= l_0_18_366 0.0))
(assert
 (>= l_0_18_370 0.0))
(assert
 (>= l_0_18_375 0.0))
(assert
 (>= l_0_18_381 0.0))
(assert
 (>= l_0_18_388 0.0))
(assert
 (>= l_0_18_396 0.0))
(assert
 (>= l_0_18_397 0.0))
(assert
 (>= l_0_18_399 0.0))
(assert
 (>= l_0_18_402 0.0))
(assert
 (>= l_0_18_406 0.0))
(assert
 (>= l_0_18_411 0.0))
(assert
 (>= l_0_18_417 0.0))
(assert
 (>= l_0_18_424 0.0))
(assert
 (>= l_0_18_432 0.0))
(assert
 (let ((?x116503 (* l_0_19_75 l_0_19_75)))
 (let ((?x116501 (* l_0_19_74 l_0_19_74)))
 (let ((?x116487 (* l_0_19_291 l_0_19_291)))
 (let ((?x116485 (* l_0_19_290 l_0_19_290)))
 (let ((?x116486 (+ (- (* (- l_0_19_110) l_0_19_110) (* l_0_19_111 l_0_19_111)) ?x116485)))
 (let ((?x116494 (- (- (+ ?x116486 ?x116487) (* (* 2.0 l_0_19_325) l_0_19_326)) (* (* 2.0 l_0_19_361) l_0_19_362))))
 (let ((?x116500 (- (- ?x116494 (* (* 2.0 l_0_19_397) l_0_19_398)) (* (* 2.0 l_0_19_433) l_0_19_434))))
 (= (+ (+ (+ ?x116500 ?x116501) ?x116503) (/ 1.0 2.0)) 0.0)))))))))
(assert
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x116549 (* ?x116548 l_0_19_282)))
 (let ((?x116545 (* 2.0 l_0_19_254)))
 (let ((?x116546 (* ?x116545 l_0_19_281)))
 (let ((?x116537 (* l_0_19_147 l_0_19_147)))
 (let ((?x116535 (* l_0_19_146 l_0_19_146)))
 (let ((?x116534 (+ (* (/ 1.0 2.0) (* l_0_19_110 l_0_19_110)) (* (/ 1.0 2.0) (* l_0_19_111 l_0_19_111)))))
 (let ((?x116544 (- (- (- (- ?x116534 ?x116535) ?x116537) (* (* 2.0 l_0_19_218) l_0_19_238)) (* (* 2.0 l_0_19_219) l_0_19_239))))
 (let ((?x116556 (- (- (- (- ?x116544 ?x116546) ?x116549) (* (* 2.0 l_0_19_346) l_0_19_353)) (* (* 2.0 l_0_19_347) l_0_19_354))))
 (let ((?x116562 (- (- ?x116556 (* (* 2.0 l_0_19_348) l_0_19_355)) (* (* 2.0 l_0_19_349) l_0_19_356))))
 (let ((?x116568 (- (- ?x116562 (* (* 2.0 l_0_19_350) l_0_19_357)) (* (* 2.0 l_0_19_351) l_0_19_358))))
 (let ((?x116574 (- (- ?x116568 (* (* 2.0 l_0_19_352) l_0_19_359)) (* (* 2.0 l_0_19_382) l_0_19_389))))
 (let ((?x116580 (- (- ?x116574 (* (* 2.0 l_0_19_383) l_0_19_390)) (* (* 2.0 l_0_19_384) l_0_19_391))))
 (let ((?x116586 (- (- ?x116580 (* (* 2.0 l_0_19_385) l_0_19_392)) (* (* 2.0 l_0_19_386) l_0_19_393))))
 (let ((?x116592 (- (- ?x116586 (* (* 2.0 l_0_19_387) l_0_19_394)) (* (* 2.0 l_0_19_388) l_0_19_395))))
 (let ((?x116598 (- (- ?x116592 (* (* 2.0 l_0_19_418) l_0_19_425)) (* (* 2.0 l_0_19_419) l_0_19_426))))
 (let ((?x116604 (- (- ?x116598 (* (* 2.0 l_0_19_420) l_0_19_427)) (* (* 2.0 l_0_19_421) l_0_19_428))))
 (let ((?x116610 (- (- ?x116604 (* (* 2.0 l_0_19_422) l_0_19_429)) (* (* 2.0 l_0_19_423) l_0_19_430))))
 (let ((?x116616 (- (- ?x116610 (* (* 2.0 l_0_19_424) l_0_19_431)) (* (* 2.0 l_0_19_454) l_0_19_461))))
 (let ((?x116622 (- (- ?x116616 (* (* 2.0 l_0_19_455) l_0_19_462)) (* (* 2.0 l_0_19_456) l_0_19_463))))
 (let ((?x116628 (- (- ?x116622 (* (* 2.0 l_0_19_457) l_0_19_464)) (* (* 2.0 l_0_19_458) l_0_19_465))))
 (let ((?x116634 (- (- ?x116628 (* (* 2.0 l_0_19_459) l_0_19_466)) (* (* 2.0 l_0_19_460) l_0_19_467))))
 (let ((?x116640 (- (- ?x116634 (* (* (/ 1.0 2.0) l_0_19_74) l_0_19_74)) (* (* (/ 1.0 2.0) l_0_19_75) l_0_19_75))))
 (= (- ?x116640 (/ 1.0 4.0)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x52464 (* l_0_19_37 l_0_19_37)))
 (let ((?x20897 (* l_0_19_181 l_0_19_181)))
 (let ((?x93446 (+ (- (* (- l_0_19_1) l_0_19_1) (* l_0_19_145 l_0_19_145)) ?x20897)))
 (= (+ ?x93446 ?x52464) 0.0)))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116672 (* ?x116671 l_0_19_38)))
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x116669 (* ?x116668 l_0_19_319)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x116666 (* ?x116665 l_0_19_318)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x93501 (* ?x93499 l_0_19_317)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x93494 (* ?x20756 l_0_19_182)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x52537 (* ?x93488 l_0_19_146)))
 (let ((?x93462 (+ (* (* (- 2.0) l_0_19_1) l_0_19_2) (* (* 2.0 l_0_19_101) l_0_19_76))))
 (let ((?x93470 (+ (+ ?x93462 (* (* 2.0 l_0_19_102) l_0_19_77)) (* (* 2.0 l_0_19_103) l_0_19_78))))
 (let ((?x73000 (- (- ?x93470 (* (* 2.0 l_0_19_112) l_0_19_137)) (* (* 2.0 l_0_19_113) l_0_19_138))))
 (let ((?x93502 (- (+ (- (- ?x73000 (* (* 2.0 l_0_19_114) l_0_19_139)) ?x52537) ?x93494) (* (* 2.0 l_0_19_217) l_0_19_220))))
 (= (+ (+ (+ (+ ?x93502 ?x93501) ?x116666) ?x116669) ?x116672) 0.0))))))))))))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116728 (* ?x116671 l_0_19_40)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116715 (* ?x20756 l_0_19_184)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116711 (* ?x93488 l_0_19_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_19_1) l_0_19_4) ?x116711) ?x116715) ?x116728) 0.0))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116747 (* ?x116671 l_0_19_43)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116745 (* ?x20756 l_0_19_187)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116738 (* ?x93488 l_0_19_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_19_1) l_0_19_7) ?x116738) ?x116745) ?x116747) 0.0))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116770 (* ?x116671 l_0_19_47)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116768 (* ?x20756 l_0_19_191)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116761 (* ?x93488 l_0_19_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_19_1) l_0_19_11) ?x116761) ?x116768) ?x116770) 0.0))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116793 (* ?x116671 l_0_19_52)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116791 (* ?x20756 l_0_19_196)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116784 (* ?x93488 l_0_19_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_19_1) l_0_19_16) ?x116784) ?x116791) ?x116793) 0.0))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116817 (* ?x116671 l_0_19_58)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116815 (* ?x20756 l_0_19_202)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116813 (* ?x93488 l_0_19_166)))
 (let ((?x116711 (* ?x93488 l_0_19_148)))
 (let ((?x116811 (+ (* (* (- 2.0) l_0_19_1) l_0_19_22) (* (* 1.0 l_0_19_109) l_0_19_112))))
 (let ((?x116821 (- (+ (+ (- (- ?x116811 ?x116711) ?x116813) ?x116815) ?x116817) (* (* 1.0 l_0_19_73) l_0_19_76))))
 (= ?x116821 0.0)))))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116852 (* ?x116671 l_0_19_65)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116850 (* ?x20756 l_0_19_209)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116848 (* ?x93488 l_0_19_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_19_1) l_0_19_29) ?x116848) ?x116850) ?x116852) 0.0))))))))
(assert
 (let ((?x116902 (* l_0_19_39 l_0_19_39)))
 (let ((?x116900 (* l_0_19_38 l_0_19_38)))
 (let ((?x116880 (* l_0_19_3 l_0_19_3)))
 (let ((?x116874 (* l_0_19_2 l_0_19_2)))
 (let ((?x116872 (* l_0_19_183 l_0_19_183)))
 (let ((?x116870 (* l_0_19_182 l_0_19_182)))
 (let ((?x116871 (+ (- (* (- l_0_19_146) l_0_19_146) (* l_0_19_147 l_0_19_147)) ?x116870)))
 (let ((?x116879 (- (- (- (+ ?x116871 ?x116872) ?x116874) (* (* 2.0 l_0_19_218) l_0_19_220)) (* (* 2.0 l_0_19_219) l_0_19_221))))
 (let ((?x116887 (- (- (- ?x116879 ?x116880) (* (* 2.0 l_0_19_328) l_0_19_353)) (* (* 2.0 l_0_19_329) l_0_19_354))))
 (let ((?x116893 (- (- ?x116887 (* (* 2.0 l_0_19_330) l_0_19_355)) (* (* 2.0 l_0_19_364) l_0_19_389))))
 (let ((?x116899 (- (- ?x116893 (* (* 2.0 l_0_19_365) l_0_19_390)) (* (* 2.0 l_0_19_366) l_0_19_391))))
 (let ((?x116909 (- (- (+ (+ ?x116899 ?x116900) ?x116902) (* (* 2.0 l_0_19_400) l_0_19_425)) (* (* 2.0 l_0_19_401) l_0_19_426))))
 (let ((?x116915 (- (- ?x116909 (* (* 2.0 l_0_19_402) l_0_19_427)) (* (* 2.0 l_0_19_436) l_0_19_461))))
 (let ((?x116921 (- (- ?x116915 (* (* 2.0 l_0_19_437) l_0_19_462)) (* (* 2.0 l_0_19_438) l_0_19_463))))
 (= ?x116921 0.0))))))))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x116987 (* ?x116986 l_0_19_41)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x116984 (* ?x116983 l_0_19_40)))
 (let ((?x116980 (* 2.0 l_0_19_3)))
 (let ((?x116981 (* ?x116980 l_0_19_5)))
 (let ((?x116978 (* l_0_19_222 l_0_19_222)))
 (let ((?x116976 (* l_0_19_221 l_0_19_221)))
 (let ((?x116974 (* l_0_19_220 l_0_19_220)))
 (let ((?x116971 (* 2.0 l_0_19_2)))
 (let ((?x116972 (* ?x116971 l_0_19_4)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x116969 (* ?x116968 l_0_19_185)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x116966 (* ?x116965 l_0_19_184)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x116963 (* ?x116962 l_0_19_149)))
 (let ((?x116973 (- (+ (+ (- (* (* (- 2.0) l_0_19_146) l_0_19_148) ?x116963) ?x116966) ?x116969) ?x116972)))
 (= (+ (+ (- (- (- (- ?x116973 ?x116974) ?x116976) ?x116978) ?x116981) ?x116984) ?x116987) 0.0))))))))))))))))))))
(assert
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117061 (* ?x117060 l_0_19_67)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117058 (* ?x117057 l_0_19_66)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117055 (* ?x117054 l_0_19_65)))
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117052 (* ?x116986 l_0_19_44)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117050 (* ?x116983 l_0_19_43)))
 (let ((?x117047 (* 2.0 l_0_19_31)))
 (let ((?x117048 (* ?x117047 l_0_19_6)))
 (let ((?x117044 (* 2.0 l_0_19_30)))
 (let ((?x117045 (* ?x117044 l_0_19_5)))
 (let ((?x116980 (* 2.0 l_0_19_3)))
 (let ((?x117042 (* ?x116980 l_0_19_8)))
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x116669 (* ?x116668 l_0_19_319)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x116666 (* ?x116665 l_0_19_318)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x93501 (* ?x93499 l_0_19_317)))
 (let ((?x117036 (* 2.0 l_0_19_29)))
 (let ((?x117037 (* ?x117036 l_0_19_4)))
 (let ((?x116971 (* 2.0 l_0_19_2)))
 (let ((?x117025 (* ?x116971 l_0_19_7)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117023 (* ?x116968 l_0_19_188)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117021 (* ?x116965 l_0_19_187)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117019 (* ?x116962 l_0_19_152)))
 (let ((?x117026 (- (+ (+ (- (* (* (- 2.0) l_0_19_146) l_0_19_151) ?x117019) ?x117021) ?x117023) ?x117025)))
 (let ((?x117032 (- (- ?x117026 (* (* 2.0 l_0_19_220) l_0_19_223)) (* (* 2.0 l_0_19_221) l_0_19_224))))
 (let ((?x117040 (+ (+ (+ (- ?x117032 (* (* 2.0 l_0_19_222) l_0_19_225)) ?x117037) ?x93501) ?x116666)))
 (let ((?x117056 (- (+ (+ (+ (+ (- (+ ?x117040 ?x116669) ?x117042) ?x117045) ?x117048) ?x117050) ?x117052) ?x117055)))
 (= (- (- ?x117056 ?x117058) ?x117061) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117139 (* ?x116986 l_0_19_48)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117137 (* ?x116983 l_0_19_47)))
 (let ((?x117134 (* 2.0 l_0_19_258)))
 (let ((?x117135 (* ?x117134 l_0_19_283)))
 (let ((?x117131 (* 2.0 l_0_19_257)))
 (let ((?x117132 (* ?x117131 l_0_19_282)))
 (let ((?x117128 (* 2.0 l_0_19_256)))
 (let ((?x117129 (* ?x117128 l_0_19_281)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117120 (* ?x116968 l_0_19_192)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117118 (* ?x116965 l_0_19_191)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117116 (* ?x116962 l_0_19_156)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x117114 (* ?x117113 l_0_19_155)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x117111 (* ?x117110 l_0_19_3)))
 (let ((?x117119 (+ (- (- (- (* (* (- 2.0) l_0_19_11) l_0_19_2) ?x117111) ?x117114) ?x117116) ?x117118)))
 (let ((?x117125 (- (- (+ ?x117119 ?x117120) (* (* 2.0 l_0_19_220) l_0_19_227)) (* (* 2.0 l_0_19_221) l_0_19_228))))
 (let ((?x117136 (+ (+ (+ (- ?x117125 (* (* 2.0 l_0_19_222) l_0_19_229)) ?x117129) ?x117132) ?x117135)))
 (= (+ (+ ?x117136 ?x117137) ?x117139) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117196 (* ?x116986 l_0_19_53)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117194 (* ?x116983 l_0_19_52)))
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x116669 (* ?x116668 l_0_19_319)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x116666 (* ?x116665 l_0_19_318)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x93501 (* ?x93499 l_0_19_317)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117183 (* ?x117182 l_0_19_211)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117180 (* ?x117179 l_0_19_210)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117177 (* ?x117176 l_0_19_209)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117174 (* ?x116968 l_0_19_197)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117172 (* ?x116965 l_0_19_196)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x117170 (* ?x117169 l_0_19_3)))
 (let ((?x117166 (* 2.0 l_0_19_16)))
 (let ((?x117167 (* ?x117166 l_0_19_2)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117164 (* ?x117163 l_0_19_175)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117161 (* ?x117160 l_0_19_174)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117158 (* ?x117157 l_0_19_173)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x93815 (* ?x116962 l_0_19_161)))
 (let ((?x117165 (+ (+ (+ (- (* (* (- 2.0) l_0_19_146) l_0_19_160) ?x93815) ?x117158) ?x117161) ?x117164)))
 (let ((?x117184 (- (- (- (+ (+ (- (- ?x117165 ?x117167) ?x117170) ?x117172) ?x117174) ?x117177) ?x117180) ?x117183)))
 (let ((?x117188 (- (- ?x117184 (* (* 2.0 l_0_19_220) l_0_19_232)) (* (* 2.0 l_0_19_221) l_0_19_233))))
 (let ((?x117193 (- (- (- (- ?x117188 (* (* 2.0 l_0_19_222) l_0_19_234)) ?x93501) ?x116666) ?x116669)))
 (= (+ (+ ?x117193 ?x117194) ?x117196) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117284 (* ?x116986 l_0_19_59)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117282 (* ?x116983 l_0_19_58)))
 (let ((?x117134 (* 2.0 l_0_19_258)))
 (let ((?x117135 (* ?x117134 l_0_19_283)))
 (let ((?x117131 (* 2.0 l_0_19_257)))
 (let ((?x117132 (* ?x117131 l_0_19_282)))
 (let ((?x117128 (* 2.0 l_0_19_256)))
 (let ((?x117129 (* ?x117128 l_0_19_281)))
 (let ((?x117276 (* 2.0 l_0_19_23)))
 (let ((?x117277 (* ?x117276 l_0_19_3)))
 (let ((?x116971 (* 2.0 l_0_19_2)))
 (let ((?x117268 (* ?x116971 l_0_19_22)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117266 (* ?x116968 l_0_19_203)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117264 (* ?x116965 l_0_19_202)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117262 (* ?x116962 l_0_19_167)))
 (let ((?x116963 (* ?x116962 l_0_19_149)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x117259 (* ?x117113 l_0_19_166)))
 (let ((?x117257 (* ?x117113 l_0_19_148)))
 (let ((?x117256 (+ (* (* 1.0 l_0_19_110) l_0_19_112) (* (* 1.0 l_0_19_111) l_0_19_113))))
 (let ((?x117269 (- (+ (+ (- (- (- (- ?x117256 ?x117257) ?x117259) ?x116963) ?x117262) ?x117264) ?x117266) ?x117268)))
 (let ((?x117273 (- (- ?x117269 (* (* 2.0 l_0_19_220) l_0_19_238)) (* (* 2.0 l_0_19_221) l_0_19_239))))
 (let ((?x117280 (- (- (- (- ?x117273 (* (* 2.0 l_0_19_222) l_0_19_240)) ?x117277) ?x117129) ?x117132)))
 (let ((?x117288 (- (+ (+ (- ?x117280 ?x117135) ?x117282) ?x117284) (* (* 1.0 l_0_19_74) l_0_19_76))))
 (= (- ?x117288 (* (* 1.0 l_0_19_75) l_0_19_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117368 (* ?x116986 l_0_19_66)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117366 (* ?x116983 l_0_19_65)))
 (let ((?x116980 (* 2.0 l_0_19_3)))
 (let ((?x117364 (* ?x116980 l_0_19_30)))
 (let ((?x116971 (* 2.0 l_0_19_2)))
 (let ((?x117356 (* ?x116971 l_0_19_29)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117354 (* ?x116968 l_0_19_210)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117352 (* ?x116965 l_0_19_209)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117350 (* ?x116962 l_0_19_174)))
 (let ((?x117357 (- (+ (+ (- (* (* (- 2.0) l_0_19_146) l_0_19_173) ?x117350) ?x117352) ?x117354) ?x117356)))
 (let ((?x117361 (- (- ?x117357 (* (* 2.0 l_0_19_220) l_0_19_245)) (* (* 2.0 l_0_19_221) l_0_19_246))))
 (let ((?x117369 (+ (+ (- (- ?x117361 (* (* 2.0 l_0_19_222) l_0_19_247)) ?x117364) ?x117366) ?x117368)))
 (= ?x117369 0.0)))))))))))))))))))
(assert
 (let ((?x117427 (* l_0_19_6 l_0_19_6)))
 (let ((?x117425 (* l_0_19_5 l_0_19_5)))
 (let ((?x117423 (* l_0_19_42 l_0_19_42)))
 (let ((?x117421 (* l_0_19_41 l_0_19_41)))
 (let ((?x117419 (* l_0_19_40 l_0_19_40)))
 (let ((?x117417 (* l_0_19_4 l_0_19_4)))
 (let ((?x117415 (* l_0_19_186 l_0_19_186)))
 (let ((?x117413 (* l_0_19_185 l_0_19_185)))
 (let ((?x117411 (* l_0_19_184 l_0_19_184)))
 (let ((?x117409 (* l_0_19_150 l_0_19_150)))
 (let ((?x117410 (- (- (* (- l_0_19_148) l_0_19_148) (* l_0_19_149 l_0_19_149)) ?x117409)))
 (let ((?x117424 (+ (+ (+ (- (+ (+ (+ ?x117410 ?x117411) ?x117413) ?x117415) ?x117417) ?x117419) ?x117421) ?x117423)))
 (= (- (- ?x117424 ?x117425) ?x117427) 0.0))))))))))))))
(assert
 (let ((?x117477 (* (* 2.0 l_0_19_6) l_0_19_9)))
 (let ((?x117474 (* (* 2.0 l_0_19_5) l_0_19_8)))
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117471 (* ?x117060 l_0_19_45)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117469 (* ?x117057 l_0_19_44)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117467 (* ?x117054 l_0_19_43)))
 (let ((?x117465 (* (* 2.0 l_0_19_4) l_0_19_7)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117462 (* ?x117182 l_0_19_189)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117460 (* ?x117179 l_0_19_188)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117458 (* ?x117176 l_0_19_187)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117456 (* ?x117163 l_0_19_153)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117454 (* ?x117160 l_0_19_152)))
 (let ((?x117461 (+ (+ (- (- (* (* (- 2.0) l_0_19_148) l_0_19_151) ?x117454) ?x117456) ?x117458) ?x117460)))
 (let ((?x117478 (- (- (+ (+ (+ (- (+ ?x117461 ?x117462) ?x117465) ?x117467) ?x117469) ?x117471) ?x117474) ?x117477)))
 (= ?x117478 0.0)))))))))))))))))))))))
(assert
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117511 (* ?x117060 l_0_19_49)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117509 (* ?x117057 l_0_19_48)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117507 (* ?x117054 l_0_19_47)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117505 (* ?x117182 l_0_19_193)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117503 (* ?x117179 l_0_19_192)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117501 (* ?x117176 l_0_19_191)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117499 (* ?x117163 l_0_19_157)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117497 (* ?x117160 l_0_19_156)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117495 (* ?x117157 l_0_19_155)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x117493 (* ?x117492 l_0_19_6)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x117490 (* ?x117110 l_0_19_5)))
 (let ((?x117498 (- (- (- (- (* (* (- 2.0) l_0_19_11) l_0_19_4) ?x117490) ?x117493) ?x117495) ?x117497)))
 (let ((?x117512 (+ (+ (+ (+ (+ (+ (- ?x117498 ?x117499) ?x117501) ?x117503) ?x117505) ?x117507) ?x117509) ?x117511)))
 (= ?x117512 0.0))))))))))))))))))))))))))
(assert
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117539 (* ?x117060 l_0_19_54)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117537 (* ?x117057 l_0_19_53)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117535 (* ?x117054 l_0_19_52)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117533 (* ?x117182 l_0_19_198)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117531 (* ?x117179 l_0_19_197)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117529 (* ?x117176 l_0_19_196)))
 (let ((?x94106 (* 2.0 l_0_19_18)))
 (let ((?x117527 (* ?x94106 l_0_19_6)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x21795 (* ?x117169 l_0_19_5)))
 (let ((?x117166 (* 2.0 l_0_19_16)))
 (let ((?x94105 (* ?x117166 l_0_19_4)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x21791 (* ?x117163 l_0_19_162)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x94098 (* ?x117160 l_0_19_161)))
 (let ((?x94104 (- (- (- (- (* (* (- 2.0) l_0_19_148) l_0_19_160) ?x94098) ?x21791) ?x94105) ?x21795)))
 (let ((?x117540 (+ (+ (+ (+ (+ (+ (- ?x94104 ?x117527) ?x117529) ?x117531) ?x117533) ?x117535) ?x117537) ?x117539)))
 (= ?x117540 0.0))))))))))))))))))))))))))
(assert
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117608 (* ?x117060 l_0_19_60)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117606 (* ?x117057 l_0_19_59)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117604 (* ?x117054 l_0_19_58)))
 (let ((?x117601 (* 2.0 l_0_19_24)))
 (let ((?x117602 (* ?x117601 l_0_19_6)))
 (let ((?x117276 (* 2.0 l_0_19_23)))
 (let ((?x117599 (* ?x117276 l_0_19_5)))
 (let ((?x117596 (* 2.0 l_0_19_22)))
 (let ((?x117597 (* ?x117596 l_0_19_4)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117594 (* ?x117182 l_0_19_204)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117592 (* ?x117179 l_0_19_203)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117590 (* ?x117176 l_0_19_202)))
 (let ((?x117409 (* l_0_19_150 l_0_19_150)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117587 (* ?x117163 l_0_19_168)))
 (let ((?x117400 (* l_0_19_149 l_0_19_149)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117584 (* ?x117160 l_0_19_167)))
 (let ((?x117431 (* l_0_19_148 l_0_19_148)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117581 (* ?x117157 l_0_19_166)))
 (let ((?x117567 (+ (* (/ 1.0 2.0) (* l_0_19_112 l_0_19_112)) (* (/ 1.0 2.0) (* l_0_19_113 l_0_19_113)))))
 (let ((?x117585 (- (- (- (+ ?x117567 (* (/ 1.0 2.0) (* l_0_19_114 l_0_19_114))) ?x117581) ?x117431) ?x117584)))
 (let ((?x117598 (- (+ (+ (+ (- (- (- ?x117585 ?x117400) ?x117587) ?x117409) ?x117590) ?x117592) ?x117594) ?x117597)))
 (let ((?x117612 (- (+ (+ (+ (- (- ?x117598 ?x117599) ?x117602) ?x117604) ?x117606) ?x117608) (* (* (/ 1.0 2.0) l_0_19_76) l_0_19_76))))
 (let ((?x117618 (- (- ?x117612 (* (* (/ 1.0 2.0) l_0_19_77) l_0_19_77)) (* (* (/ 1.0 2.0) l_0_19_78) l_0_19_78))))
 (= ?x117618 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117061 (* ?x117060 l_0_19_67)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117058 (* ?x117057 l_0_19_66)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117055 (* ?x117054 l_0_19_65)))
 (let ((?x117047 (* 2.0 l_0_19_31)))
 (let ((?x117048 (* ?x117047 l_0_19_6)))
 (let ((?x117044 (* 2.0 l_0_19_30)))
 (let ((?x117045 (* ?x117044 l_0_19_5)))
 (let ((?x117036 (* 2.0 l_0_19_29)))
 (let ((?x117037 (* ?x117036 l_0_19_4)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117183 (* ?x117182 l_0_19_211)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117180 (* ?x117179 l_0_19_210)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117177 (* ?x117176 l_0_19_209)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117164 (* ?x117163 l_0_19_175)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117161 (* ?x117160 l_0_19_174)))
 (let ((?x117664 (+ (+ (- (- (* (* (- 2.0) l_0_19_148) l_0_19_173) ?x117161) ?x117164) ?x117177) ?x117180)))
 (let ((?x117671 (+ (+ (+ (- (- (- (+ ?x117664 ?x117183) ?x117037) ?x117045) ?x117048) ?x117055) ?x117058) ?x117061)))
 (= ?x117671 0.0))))))))))))))))))))))))))
(assert
 (let ((?x117694 (* l_0_19_9 l_0_19_9)))
 (let ((?x117692 (* l_0_19_8 l_0_19_8)))
 (let ((?x117690 (* l_0_19_7 l_0_19_7)))
 (let ((?x117688 (* l_0_19_46 l_0_19_46)))
 (let ((?x117686 (* l_0_19_45 l_0_19_45)))
 (let ((?x117684 (* l_0_19_44 l_0_19_44)))
 (let ((?x117682 (* l_0_19_43 l_0_19_43)))
 (let ((?x117680 (* l_0_19_190 l_0_19_190)))
 (let ((?x117678 (* l_0_19_189 l_0_19_189)))
 (let ((?x117676 (* l_0_19_188 l_0_19_188)))
 (let ((?x73424 (* l_0_19_187 l_0_19_187)))
 (let ((?x94382 (* l_0_19_154 l_0_19_154)))
 (let ((?x94393 (* l_0_19_153 l_0_19_153)))
 (let ((?x94399 (* l_0_19_152 l_0_19_152)))
 (let ((?x94400 (- (- (* (- l_0_19_10) l_0_19_10) (* l_0_19_151 l_0_19_151)) ?x94399)))
 (let ((?x117683 (+ (+ (+ (+ (+ (- (- ?x94400 ?x94393) ?x94382) ?x73424) ?x117676) ?x117678) ?x117680) ?x117682)))
 (= (- (- (- (+ (+ (+ ?x117683 ?x117684) ?x117686) ?x117688) ?x117690) ?x117692) ?x117694) 0.0))))))))))))))))))
(assert
 (let ((?x117766 (* 2.0 l_0_19_46)))
 (let ((?x117767 (* ?x117766 l_0_19_50)))
 (let ((?x117763 (* 2.0 l_0_19_45)))
 (let ((?x117764 (* ?x117763 l_0_19_49)))
 (let ((?x117760 (* 2.0 l_0_19_44)))
 (let ((?x117761 (* ?x117760 l_0_19_48)))
 (let ((?x117757 (* 2.0 l_0_19_43)))
 (let ((?x117758 (* ?x117757 l_0_19_47)))
 (let ((?x117754 (* 2.0 l_0_19_190)))
 (let ((?x117755 (* ?x117754 l_0_19_194)))
 (let ((?x117751 (* 2.0 l_0_19_189)))
 (let ((?x117752 (* ?x117751 l_0_19_193)))
 (let ((?x117748 (* 2.0 l_0_19_188)))
 (let ((?x117749 (* ?x117748 l_0_19_192)))
 (let ((?x117745 (* 2.0 l_0_19_187)))
 (let ((?x117746 (* ?x117745 l_0_19_191)))
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117743 (* ?x117742 l_0_19_158)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x117740 (* ?x117739 l_0_19_157)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x117737 (* ?x117736 l_0_19_156)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x117734 (* ?x117733 l_0_19_155)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x117731 (* ?x117492 l_0_19_9)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x117729 (* ?x117110 l_0_19_8)))
 (let ((?x117726 (* 2.0 l_0_19_11)))
 (let ((?x117727 (* ?x117726 l_0_19_7)))
 (let ((?x117735 (- (- (- (- (* (* (- 2.0) l_0_19_10) l_0_19_14) ?x117727) ?x117729) ?x117731) ?x117734)))
 (let ((?x117756 (+ (+ (+ (+ (- (- (- ?x117735 ?x117737) ?x117740) ?x117743) ?x117746) ?x117749) ?x117752) ?x117755)))
 (= (+ (+ (+ (+ ?x117756 ?x117758) ?x117761) ?x117764) ?x117767) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x117766 (* 2.0 l_0_19_46)))
 (let ((?x117818 (* ?x117766 l_0_19_55)))
 (let ((?x117763 (* 2.0 l_0_19_45)))
 (let ((?x117816 (* ?x117763 l_0_19_54)))
 (let ((?x117760 (* 2.0 l_0_19_44)))
 (let ((?x117814 (* ?x117760 l_0_19_53)))
 (let ((?x117757 (* 2.0 l_0_19_43)))
 (let ((?x117812 (* ?x117757 l_0_19_52)))
 (let ((?x117754 (* 2.0 l_0_19_190)))
 (let ((?x117810 (* ?x117754 l_0_19_199)))
 (let ((?x117751 (* 2.0 l_0_19_189)))
 (let ((?x117808 (* ?x117751 l_0_19_198)))
 (let ((?x117748 (* 2.0 l_0_19_188)))
 (let ((?x117806 (* ?x117748 l_0_19_197)))
 (let ((?x117745 (* 2.0 l_0_19_187)))
 (let ((?x117804 (* ?x117745 l_0_19_196)))
 (let ((?x94106 (* 2.0 l_0_19_18)))
 (let ((?x117802 (* ?x94106 l_0_19_9)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x117800 (* ?x117169 l_0_19_8)))
 (let ((?x117166 (* 2.0 l_0_19_16)))
 (let ((?x117798 (* ?x117166 l_0_19_7)))
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117785 (* ?x117742 l_0_19_163)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x94554 (* ?x117739 l_0_19_162)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x94551 (* ?x117736 l_0_19_161)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x94534 (* ?x117733 l_0_19_160)))
 (let ((?x117786 (- (- (- (- (* (* (- 2.0) l_0_19_10) l_0_19_19) ?x94534) ?x94551) ?x94554) ?x117785)))
 (let ((?x117811 (+ (+ (+ (+ (- (- (- ?x117786 ?x117798) ?x117800) ?x117802) ?x117804) ?x117806) ?x117808) ?x117810)))
 (= (+ (+ (+ (+ ?x117811 ?x117812) ?x117814) ?x117816) ?x117818) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x117766 (* 2.0 l_0_19_46)))
 (let ((?x117877 (* ?x117766 l_0_19_61)))
 (let ((?x117763 (* 2.0 l_0_19_45)))
 (let ((?x117875 (* ?x117763 l_0_19_60)))
 (let ((?x117760 (* 2.0 l_0_19_44)))
 (let ((?x117873 (* ?x117760 l_0_19_59)))
 (let ((?x117757 (* 2.0 l_0_19_43)))
 (let ((?x117871 (* ?x117757 l_0_19_58)))
 (let ((?x117601 (* 2.0 l_0_19_24)))
 (let ((?x117869 (* ?x117601 l_0_19_9)))
 (let ((?x117276 (* 2.0 l_0_19_23)))
 (let ((?x117867 (* ?x117276 l_0_19_8)))
 (let ((?x117596 (* 2.0 l_0_19_22)))
 (let ((?x117865 (* ?x117596 l_0_19_7)))
 (let ((?x117754 (* 2.0 l_0_19_190)))
 (let ((?x117863 (* ?x117754 l_0_19_205)))
 (let ((?x117751 (* 2.0 l_0_19_189)))
 (let ((?x117861 (* ?x117751 l_0_19_204)))
 (let ((?x117748 (* 2.0 l_0_19_188)))
 (let ((?x117859 (* ?x117748 l_0_19_203)))
 (let ((?x117745 (* 2.0 l_0_19_187)))
 (let ((?x117857 (* ?x117745 l_0_19_202)))
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117855 (* ?x117742 l_0_19_169)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x117853 (* ?x117739 l_0_19_168)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x117851 (* ?x117736 l_0_19_167)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x117849 (* ?x117733 l_0_19_166)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117456 (* ?x117163 l_0_19_153)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117454 (* ?x117160 l_0_19_152)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117845 (* ?x117157 l_0_19_151)))
 (let ((?x94812 (+ (* (* (- 2.0) l_0_19_10) l_0_19_25) (* (* 1.0 l_0_19_112) l_0_19_115))))
 (let ((?x117844 (+ (+ ?x94812 (* (* 1.0 l_0_19_113) l_0_19_116)) (* (* 1.0 l_0_19_114) l_0_19_117))))
 (let ((?x117856 (- (- (- (- (- (- (- ?x117844 ?x117845) ?x117454) ?x117456) ?x117849) ?x117851) ?x117853) ?x117855)))
 (let ((?x117870 (- (- (- (+ (+ (+ (+ ?x117856 ?x117857) ?x117859) ?x117861) ?x117863) ?x117865) ?x117867) ?x117869)))
 (let ((?x117881 (- (+ (+ (+ (+ ?x117870 ?x117871) ?x117873) ?x117875) ?x117877) (* (* 1.0 l_0_19_76) l_0_19_79))))
 (let ((?x117887 (- (- ?x117881 (* (* 1.0 l_0_19_77) l_0_19_80)) (* (* 1.0 l_0_19_78) l_0_19_81))))
 (= ?x117887 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x117766 (* 2.0 l_0_19_46)))
 (let ((?x117977 (* ?x117766 l_0_19_68)))
 (let ((?x117763 (* 2.0 l_0_19_45)))
 (let ((?x117975 (* ?x117763 l_0_19_67)))
 (let ((?x117760 (* 2.0 l_0_19_44)))
 (let ((?x117973 (* ?x117760 l_0_19_66)))
 (let ((?x117757 (* 2.0 l_0_19_43)))
 (let ((?x117971 (* ?x117757 l_0_19_65)))
 (let ((?x117047 (* 2.0 l_0_19_31)))
 (let ((?x117969 (* ?x117047 l_0_19_9)))
 (let ((?x117044 (* 2.0 l_0_19_30)))
 (let ((?x117967 (* ?x117044 l_0_19_8)))
 (let ((?x117036 (* 2.0 l_0_19_29)))
 (let ((?x117965 (* ?x117036 l_0_19_7)))
 (let ((?x117754 (* 2.0 l_0_19_190)))
 (let ((?x117963 (* ?x117754 l_0_19_212)))
 (let ((?x117751 (* 2.0 l_0_19_189)))
 (let ((?x117961 (* ?x117751 l_0_19_211)))
 (let ((?x117748 (* 2.0 l_0_19_188)))
 (let ((?x117959 (* ?x117748 l_0_19_210)))
 (let ((?x117745 (* 2.0 l_0_19_187)))
 (let ((?x117957 (* ?x117745 l_0_19_209)))
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117955 (* ?x117742 l_0_19_176)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x117953 (* ?x117739 l_0_19_175)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x117951 (* ?x117736 l_0_19_174)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x117949 (* ?x117733 l_0_19_173)))
 (let ((?x117956 (- (- (- (- (* (* (- 2.0) l_0_19_10) l_0_19_32) ?x117949) ?x117951) ?x117953) ?x117955)))
 (let ((?x117970 (- (- (- (+ (+ (+ (+ ?x117956 ?x117957) ?x117959) ?x117961) ?x117963) ?x117965) ?x117967) ?x117969)))
 (= (+ (+ (+ (+ ?x117970 ?x117971) ?x117973) ?x117975) ?x117977) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118055 (* l_0_19_51 l_0_19_51)))
 (let ((?x118053 (* l_0_19_50 l_0_19_50)))
 (let ((?x118051 (* l_0_19_49 l_0_19_49)))
 (let ((?x118049 (* l_0_19_48 l_0_19_48)))
 (let ((?x118047 (* l_0_19_47 l_0_19_47)))
 (let ((?x118045 (* l_0_19_195 l_0_19_195)))
 (let ((?x118043 (* l_0_19_194 l_0_19_194)))
 (let ((?x118041 (* l_0_19_193 l_0_19_193)))
 (let ((?x118039 (* l_0_19_192 l_0_19_192)))
 (let ((?x118037 (* l_0_19_191 l_0_19_191)))
 (let ((?x118035 (* l_0_19_159 l_0_19_159)))
 (let ((?x118033 (* l_0_19_158 l_0_19_158)))
 (let ((?x118031 (* l_0_19_157 l_0_19_157)))
 (let ((?x118029 (* l_0_19_156 l_0_19_156)))
 (let ((?x118027 (* l_0_19_155 l_0_19_155)))
 (let ((?x118025 (* l_0_19_15 l_0_19_15)))
 (let ((?x118023 (* l_0_19_14 l_0_19_14)))
 (let ((?x118010 (* l_0_19_13 l_0_19_13)))
 (let ((?x118022 (- (- (* (- l_0_19_11) l_0_19_11) (* l_0_19_12 l_0_19_12)) ?x118010)))
 (let ((?x118036 (- (- (- (- (- (- (- ?x118022 ?x118023) ?x118025) ?x118027) ?x118029) ?x118031) ?x118033) ?x118035)))
 (let ((?x118050 (+ (+ (+ (+ (+ (+ (+ ?x118036 ?x118037) ?x118039) ?x118041) ?x118043) ?x118045) ?x118047) ?x118049)))
 (= (+ (+ (+ ?x118050 ?x118051) ?x118053) ?x118055) 0.0)))))))))))))))))))))))
(assert
 (let ((?x118141 (* 2.0 l_0_19_51)))
 (let ((?x118142 (* ?x118141 l_0_19_56)))
 (let ((?x118138 (* 2.0 l_0_19_50)))
 (let ((?x118139 (* ?x118138 l_0_19_55)))
 (let ((?x118135 (* 2.0 l_0_19_49)))
 (let ((?x118136 (* ?x118135 l_0_19_54)))
 (let ((?x118132 (* 2.0 l_0_19_48)))
 (let ((?x118133 (* ?x118132 l_0_19_53)))
 (let ((?x118129 (* 2.0 l_0_19_47)))
 (let ((?x118130 (* ?x118129 l_0_19_52)))
 (let ((?x118126 (* 2.0 l_0_19_195)))
 (let ((?x118127 (* ?x118126 l_0_19_200)))
 (let ((?x118123 (* 2.0 l_0_19_194)))
 (let ((?x118124 (* ?x118123 l_0_19_199)))
 (let ((?x118120 (* 2.0 l_0_19_193)))
 (let ((?x118121 (* ?x118120 l_0_19_198)))
 (let ((?x118117 (* 2.0 l_0_19_192)))
 (let ((?x118118 (* ?x118117 l_0_19_197)))
 (let ((?x118114 (* 2.0 l_0_19_191)))
 (let ((?x118115 (* ?x118114 l_0_19_196)))
 (let ((?x118111 (* 2.0 l_0_19_159)))
 (let ((?x118112 (* ?x118111 l_0_19_164)))
 (let ((?x118108 (* 2.0 l_0_19_158)))
 (let ((?x118109 (* ?x118108 l_0_19_163)))
 (let ((?x118105 (* 2.0 l_0_19_157)))
 (let ((?x118106 (* ?x118105 l_0_19_162)))
 (let ((?x118102 (* 2.0 l_0_19_156)))
 (let ((?x118103 (* ?x118102 l_0_19_161)))
 (let ((?x118099 (* 2.0 l_0_19_155)))
 (let ((?x118100 (* ?x118099 l_0_19_160)))
 (let ((?x118096 (* 2.0 l_0_19_15)))
 (let ((?x118097 (* ?x118096 l_0_19_20)))
 (let ((?x118093 (* 2.0 l_0_19_14)))
 (let ((?x118094 (* ?x118093 l_0_19_19)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x118091 (* ?x117492 l_0_19_18)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x118089 (* ?x117110 l_0_19_17)))
 (let ((?x118098 (- (- (- (- (* (* (- 2.0) l_0_19_11) l_0_19_16) ?x118089) ?x118091) ?x118094) ?x118097)))
 (let ((?x118119 (+ (+ (- (- (- (- (- ?x118098 ?x118100) ?x118103) ?x118106) ?x118109) ?x118112) ?x118115) ?x118118)))
 (let ((?x118140 (+ (+ (+ (+ (+ (+ (+ ?x118119 ?x118121) ?x118124) ?x118127) ?x118130) ?x118133) ?x118136) ?x118139)))
 (= (+ ?x118140 ?x118142) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118141 (* 2.0 l_0_19_51)))
 (let ((?x118232 (* ?x118141 l_0_19_62)))
 (let ((?x118138 (* 2.0 l_0_19_50)))
 (let ((?x118230 (* ?x118138 l_0_19_61)))
 (let ((?x118135 (* 2.0 l_0_19_49)))
 (let ((?x118228 (* ?x118135 l_0_19_60)))
 (let ((?x118132 (* 2.0 l_0_19_48)))
 (let ((?x118226 (* ?x118132 l_0_19_59)))
 (let ((?x118129 (* 2.0 l_0_19_47)))
 (let ((?x118224 (* ?x118129 l_0_19_58)))
 (let ((?x118126 (* 2.0 l_0_19_195)))
 (let ((?x118222 (* ?x118126 l_0_19_206)))
 (let ((?x118123 (* 2.0 l_0_19_194)))
 (let ((?x118220 (* ?x118123 l_0_19_205)))
 (let ((?x118120 (* 2.0 l_0_19_193)))
 (let ((?x118218 (* ?x118120 l_0_19_204)))
 (let ((?x118117 (* 2.0 l_0_19_192)))
 (let ((?x118216 (* ?x118117 l_0_19_203)))
 (let ((?x118114 (* 2.0 l_0_19_191)))
 (let ((?x118214 (* ?x118114 l_0_19_202)))
 (let ((?x118111 (* 2.0 l_0_19_159)))
 (let ((?x118212 (* ?x118111 l_0_19_170)))
 (let ((?x118108 (* 2.0 l_0_19_158)))
 (let ((?x118210 (* ?x118108 l_0_19_169)))
 (let ((?x118105 (* 2.0 l_0_19_157)))
 (let ((?x118208 (* ?x118105 l_0_19_168)))
 (let ((?x118102 (* 2.0 l_0_19_156)))
 (let ((?x118206 (* ?x118102 l_0_19_167)))
 (let ((?x118099 (* 2.0 l_0_19_155)))
 (let ((?x118204 (* ?x118099 l_0_19_166)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117499 (* ?x117163 l_0_19_157)))
 (let ((?x118096 (* 2.0 l_0_19_15)))
 (let ((?x118201 (* ?x118096 l_0_19_26)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117497 (* ?x117160 l_0_19_156)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117495 (* ?x117157 l_0_19_155)))
 (let ((?x118093 (* 2.0 l_0_19_14)))
 (let ((?x118197 (* ?x118093 l_0_19_25)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x118195 (* ?x117492 l_0_19_24)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x118193 (* ?x117110 l_0_19_23)))
 (let ((?x118188 (+ (* (* (- 2.0) l_0_19_11) l_0_19_22) (* (* 1.0 l_0_19_112) l_0_19_119))))
 (let ((?x118192 (+ (+ ?x118188 (* (* 1.0 l_0_19_113) l_0_19_120)) (* (* 1.0 l_0_19_114) l_0_19_121))))
 (let ((?x118203 (- (- (- (- (- (- (- ?x118192 ?x118193) ?x118195) ?x118197) ?x117495) ?x117497) ?x118201) ?x117499)))
 (let ((?x118217 (+ (+ (- (- (- (- (- ?x118203 ?x118204) ?x118206) ?x118208) ?x118210) ?x118212) ?x118214) ?x118216)))
 (let ((?x118231 (+ (+ (+ (+ (+ (+ (+ ?x118217 ?x118218) ?x118220) ?x118222) ?x118224) ?x118226) ?x118228) ?x118230)))
 (let ((?x118237 (- (- (+ ?x118231 ?x118232) (* (* 1.0 l_0_19_76) l_0_19_83)) (* (* 1.0 l_0_19_77) l_0_19_84))))
 (= (- ?x118237 (* (* 1.0 l_0_19_78) l_0_19_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118141 (* 2.0 l_0_19_51)))
 (let ((?x118321 (* ?x118141 l_0_19_69)))
 (let ((?x118138 (* 2.0 l_0_19_50)))
 (let ((?x118319 (* ?x118138 l_0_19_68)))
 (let ((?x118135 (* 2.0 l_0_19_49)))
 (let ((?x118317 (* ?x118135 l_0_19_67)))
 (let ((?x118132 (* 2.0 l_0_19_48)))
 (let ((?x118315 (* ?x118132 l_0_19_66)))
 (let ((?x118129 (* 2.0 l_0_19_47)))
 (let ((?x118313 (* ?x118129 l_0_19_65)))
 (let ((?x118126 (* 2.0 l_0_19_195)))
 (let ((?x118311 (* ?x118126 l_0_19_213)))
 (let ((?x118123 (* 2.0 l_0_19_194)))
 (let ((?x118309 (* ?x118123 l_0_19_212)))
 (let ((?x118120 (* 2.0 l_0_19_193)))
 (let ((?x118307 (* ?x118120 l_0_19_211)))
 (let ((?x118117 (* 2.0 l_0_19_192)))
 (let ((?x118305 (* ?x118117 l_0_19_210)))
 (let ((?x118114 (* 2.0 l_0_19_191)))
 (let ((?x118303 (* ?x118114 l_0_19_209)))
 (let ((?x118111 (* 2.0 l_0_19_159)))
 (let ((?x118301 (* ?x118111 l_0_19_177)))
 (let ((?x118108 (* 2.0 l_0_19_158)))
 (let ((?x118299 (* ?x118108 l_0_19_176)))
 (let ((?x118105 (* 2.0 l_0_19_157)))
 (let ((?x118297 (* ?x118105 l_0_19_175)))
 (let ((?x118102 (* 2.0 l_0_19_156)))
 (let ((?x118295 (* ?x118102 l_0_19_174)))
 (let ((?x118099 (* 2.0 l_0_19_155)))
 (let ((?x118293 (* ?x118099 l_0_19_173)))
 (let ((?x118096 (* 2.0 l_0_19_15)))
 (let ((?x118291 (* ?x118096 l_0_19_33)))
 (let ((?x118093 (* 2.0 l_0_19_14)))
 (let ((?x118289 (* ?x118093 l_0_19_32)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x118287 (* ?x117492 l_0_19_31)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x118285 (* ?x117110 l_0_19_30)))
 (let ((?x118292 (- (- (- (- (* (* (- 2.0) l_0_19_11) l_0_19_29) ?x118285) ?x118287) ?x118289) ?x118291)))
 (let ((?x118306 (+ (+ (- (- (- (- (- ?x118292 ?x118293) ?x118295) ?x118297) ?x118299) ?x118301) ?x118303) ?x118305)))
 (let ((?x118320 (+ (+ (+ (+ (+ (+ (+ ?x118306 ?x118307) ?x118309) ?x118311) ?x118313) ?x118315) ?x118317) ?x118319)))
 (= (+ ?x118320 ?x118321) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118430 (* l_0_19_57 l_0_19_57)))
 (let ((?x118428 (* l_0_19_56 l_0_19_56)))
 (let ((?x118426 (* l_0_19_55 l_0_19_55)))
 (let ((?x118424 (* l_0_19_54 l_0_19_54)))
 (let ((?x118422 (* l_0_19_53 l_0_19_53)))
 (let ((?x118420 (* l_0_19_52 l_0_19_52)))
 (let ((?x118418 (* l_0_19_21 l_0_19_21)))
 (let ((?x118416 (* l_0_19_201 l_0_19_201)))
 (let ((?x118414 (* l_0_19_200 l_0_19_200)))
 (let ((?x118412 (* l_0_19_20 l_0_19_20)))
 (let ((?x118410 (* l_0_19_199 l_0_19_199)))
 (let ((?x118408 (* l_0_19_198 l_0_19_198)))
 (let ((?x118406 (* l_0_19_197 l_0_19_197)))
 (let ((?x118404 (* l_0_19_196 l_0_19_196)))
 (let ((?x118402 (* l_0_19_19 l_0_19_19)))
 (let ((?x118400 (* l_0_19_18 l_0_19_18)))
 (let ((?x118398 (* l_0_19_17 l_0_19_17)))
 (let ((?x118396 (* l_0_19_165 l_0_19_165)))
 (let ((?x118381 (* l_0_19_164 l_0_19_164)))
 (let ((?x118378 (* l_0_19_163 l_0_19_163)))
 (let ((?x118374 (* l_0_19_162 l_0_19_162)))
 (let ((?x118370 (* l_0_19_161 l_0_19_161)))
 (let ((?x118372 (- (- (* (- l_0_19_16) l_0_19_16) (* l_0_19_160 l_0_19_160)) ?x118370)))
 (let ((?x118403 (- (- (- (- (- (- (- ?x118372 ?x118374) ?x118378) ?x118381) ?x118396) ?x118398) ?x118400) ?x118402)))
 (let ((?x118417 (+ (+ (- (+ (+ (+ (+ ?x118403 ?x118404) ?x118406) ?x118408) ?x118410) ?x118412) ?x118414) ?x118416)))
 (let ((?x118431 (+ (+ (+ (+ (+ (+ (- ?x118417 ?x118418) ?x118420) ?x118422) ?x118424) ?x118426) ?x118428) ?x118430)))
 (= ?x118431 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x118550 (* 2.0 l_0_19_57)))
 (let ((?x118551 (* ?x118550 l_0_19_63)))
 (let ((?x118547 (* 2.0 l_0_19_56)))
 (let ((?x118548 (* ?x118547 l_0_19_62)))
 (let ((?x118544 (* 2.0 l_0_19_55)))
 (let ((?x118545 (* ?x118544 l_0_19_61)))
 (let ((?x118541 (* 2.0 l_0_19_54)))
 (let ((?x118542 (* ?x118541 l_0_19_60)))
 (let ((?x118538 (* 2.0 l_0_19_53)))
 (let ((?x118539 (* ?x118538 l_0_19_59)))
 (let ((?x118535 (* 2.0 l_0_19_52)))
 (let ((?x118536 (* ?x118535 l_0_19_58)))
 (let ((?x118532 (* 2.0 l_0_19_21)))
 (let ((?x118533 (* ?x118532 l_0_19_27)))
 (let ((?x118529 (* 2.0 l_0_19_201)))
 (let ((?x118530 (* ?x118529 l_0_19_207)))
 (let ((?x118526 (* 2.0 l_0_19_200)))
 (let ((?x118527 (* ?x118526 l_0_19_206)))
 (let ((?x118523 (* 2.0 l_0_19_20)))
 (let ((?x118524 (* ?x118523 l_0_19_26)))
 (let ((?x118520 (* 2.0 l_0_19_199)))
 (let ((?x118521 (* ?x118520 l_0_19_205)))
 (let ((?x118517 (* 2.0 l_0_19_198)))
 (let ((?x118518 (* ?x118517 l_0_19_204)))
 (let ((?x118514 (* 2.0 l_0_19_197)))
 (let ((?x118515 (* ?x118514 l_0_19_203)))
 (let ((?x118511 (* 2.0 l_0_19_196)))
 (let ((?x118512 (* ?x118511 l_0_19_202)))
 (let ((?x118508 (* 2.0 l_0_19_19)))
 (let ((?x118509 (* ?x118508 l_0_19_25)))
 (let ((?x94106 (* 2.0 l_0_19_18)))
 (let ((?x118506 (* ?x94106 l_0_19_24)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x118504 (* ?x117169 l_0_19_23)))
 (let ((?x118501 (* 2.0 l_0_19_165)))
 (let ((?x118502 (* ?x118501 l_0_19_171)))
 (let ((?x118498 (* 2.0 l_0_19_164)))
 (let ((?x118499 (* ?x118498 l_0_19_170)))
 (let ((?x118495 (* 2.0 l_0_19_163)))
 (let ((?x118496 (* ?x118495 l_0_19_169)))
 (let ((?x118492 (* 2.0 l_0_19_162)))
 (let ((?x118493 (* ?x118492 l_0_19_168)))
 (let ((?x118489 (* 2.0 l_0_19_161)))
 (let ((?x118490 (* ?x118489 l_0_19_167)))
 (let ((?x118486 (* 2.0 l_0_19_160)))
 (let ((?x118487 (* ?x118486 l_0_19_166)))
 (let ((?x117166 (* 2.0 l_0_19_16)))
 (let ((?x118484 (* ?x117166 l_0_19_22)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x21791 (* ?x117163 l_0_19_162)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x94098 (* ?x117160 l_0_19_161)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x118480 (* ?x117157 l_0_19_160)))
 (let ((?x118477 (+ (* (* 1.0 l_0_19_112) l_0_19_124) (* (* 1.0 l_0_19_113) l_0_19_125))))
 (let ((?x118483 (- (- (- (+ ?x118477 (* (* 1.0 l_0_19_114) l_0_19_126)) ?x118480) ?x94098) ?x21791)))
 (let ((?x118503 (- (- (- (- (- (- (- ?x118483 ?x118484) ?x118487) ?x118490) ?x118493) ?x118496) ?x118499) ?x118502)))
 (let ((?x118522 (+ (+ (+ (+ (- (- (- ?x118503 ?x118504) ?x118506) ?x118509) ?x118512) ?x118515) ?x118518) ?x118521)))
 (let ((?x118543 (+ (+ (+ (- (+ (+ (- ?x118522 ?x118524) ?x118527) ?x118530) ?x118533) ?x118536) ?x118539) ?x118542)))
 (let ((?x118554 (- (+ (+ (+ ?x118543 ?x118545) ?x118548) ?x118551) (* (* 1.0 l_0_19_76) l_0_19_88))))
 (let ((?x118558 (- (- ?x118554 (* (* 1.0 l_0_19_77) l_0_19_89)) (* (* 1.0 l_0_19_78) l_0_19_90))))
 (= ?x118558 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118550 (* 2.0 l_0_19_57)))
 (let ((?x118701 (* ?x118550 l_0_19_70)))
 (let ((?x118547 (* 2.0 l_0_19_56)))
 (let ((?x118699 (* ?x118547 l_0_19_69)))
 (let ((?x118544 (* 2.0 l_0_19_55)))
 (let ((?x118697 (* ?x118544 l_0_19_68)))
 (let ((?x118541 (* 2.0 l_0_19_54)))
 (let ((?x118695 (* ?x118541 l_0_19_67)))
 (let ((?x118538 (* 2.0 l_0_19_53)))
 (let ((?x118693 (* ?x118538 l_0_19_66)))
 (let ((?x118535 (* 2.0 l_0_19_52)))
 (let ((?x118691 (* ?x118535 l_0_19_65)))
 (let ((?x118532 (* 2.0 l_0_19_21)))
 (let ((?x118689 (* ?x118532 l_0_19_34)))
 (let ((?x118529 (* 2.0 l_0_19_201)))
 (let ((?x118687 (* ?x118529 l_0_19_214)))
 (let ((?x118526 (* 2.0 l_0_19_200)))
 (let ((?x118685 (* ?x118526 l_0_19_213)))
 (let ((?x118523 (* 2.0 l_0_19_20)))
 (let ((?x118683 (* ?x118523 l_0_19_33)))
 (let ((?x118520 (* 2.0 l_0_19_199)))
 (let ((?x118681 (* ?x118520 l_0_19_212)))
 (let ((?x118517 (* 2.0 l_0_19_198)))
 (let ((?x118679 (* ?x118517 l_0_19_211)))
 (let ((?x118514 (* 2.0 l_0_19_197)))
 (let ((?x118677 (* ?x118514 l_0_19_210)))
 (let ((?x118511 (* 2.0 l_0_19_196)))
 (let ((?x118675 (* ?x118511 l_0_19_209)))
 (let ((?x118508 (* 2.0 l_0_19_19)))
 (let ((?x118673 (* ?x118508 l_0_19_32)))
 (let ((?x94106 (* 2.0 l_0_19_18)))
 (let ((?x118671 (* ?x94106 l_0_19_31)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x118669 (* ?x117169 l_0_19_30)))
 (let ((?x118501 (* 2.0 l_0_19_165)))
 (let ((?x118667 (* ?x118501 l_0_19_178)))
 (let ((?x118498 (* 2.0 l_0_19_164)))
 (let ((?x118665 (* ?x118498 l_0_19_177)))
 (let ((?x118495 (* 2.0 l_0_19_163)))
 (let ((?x118663 (* ?x118495 l_0_19_176)))
 (let ((?x118492 (* 2.0 l_0_19_162)))
 (let ((?x118661 (* ?x118492 l_0_19_175)))
 (let ((?x118489 (* 2.0 l_0_19_161)))
 (let ((?x118659 (* ?x118489 l_0_19_174)))
 (let ((?x118486 (* 2.0 l_0_19_160)))
 (let ((?x118657 (* ?x118486 l_0_19_173)))
 (let ((?x118664 (- (- (- (- (* (* (- 2.0) l_0_19_16) l_0_19_29) ?x118657) ?x118659) ?x118661) ?x118663)))
 (let ((?x118678 (+ (+ (- (- (- (- (- ?x118664 ?x118665) ?x118667) ?x118669) ?x118671) ?x118673) ?x118675) ?x118677)))
 (let ((?x118692 (+ (- (+ (+ (- (+ (+ ?x118678 ?x118679) ?x118681) ?x118683) ?x118685) ?x118687) ?x118689) ?x118691)))
 (= (+ (+ (+ (+ (+ ?x118692 ?x118693) ?x118695) ?x118697) ?x118699) ?x118701) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118814 (* l_0_19_64 l_0_19_64)))
 (let ((?x118812 (* l_0_19_63 l_0_19_63)))
 (let ((?x118810 (* l_0_19_62 l_0_19_62)))
 (let ((?x118808 (* l_0_19_61 l_0_19_61)))
 (let ((?x118806 (* l_0_19_60 l_0_19_60)))
 (let ((?x118804 (* l_0_19_59 l_0_19_59)))
 (let ((?x118802 (* l_0_19_58 l_0_19_58)))
 (let ((?x118800 (* l_0_19_28 l_0_19_28)))
 (let ((?x118798 (* l_0_19_27 l_0_19_27)))
 (let ((?x118796 (* l_0_19_26 l_0_19_26)))
 (let ((?x118794 (* l_0_19_25 l_0_19_25)))
 (let ((?x118792 (* l_0_19_24 l_0_19_24)))
 (let ((?x118790 (* l_0_19_23 l_0_19_23)))
 (let ((?x118788 (* l_0_19_22 l_0_19_22)))
 (let ((?x118786 (* l_0_19_208 l_0_19_208)))
 (let ((?x118784 (* l_0_19_207 l_0_19_207)))
 (let ((?x118782 (* l_0_19_206 l_0_19_206)))
 (let ((?x118780 (* l_0_19_205 l_0_19_205)))
 (let ((?x118778 (* l_0_19_204 l_0_19_204)))
 (let ((?x118776 (* l_0_19_203 l_0_19_203)))
 (let ((?x118774 (* l_0_19_202 l_0_19_202)))
 (let ((?x118772 (* l_0_19_172 l_0_19_172)))
 (let ((?x118770 (* l_0_19_171 l_0_19_171)))
 (let ((?x118768 (* l_0_19_170 l_0_19_170)))
 (let ((?x118766 (* l_0_19_169 l_0_19_169)))
 (let ((?x118764 (* l_0_19_168 l_0_19_168)))
 (let ((?x118762 (* l_0_19_167 l_0_19_167)))
 (let ((?x118760 (* l_0_19_166 l_0_19_166)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117587 (* ?x117163 l_0_19_168)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117584 (* ?x117160 l_0_19_167)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117581 (* ?x117157 l_0_19_166)))
 (let ((?x74126 (+ (* (* 1.0 l_0_19_112) l_0_19_130) (* (* 1.0 l_0_19_113) l_0_19_131))))
 (let ((?x118759 (- (- (- (+ ?x74126 (* (* 1.0 l_0_19_114) l_0_19_132)) ?x117581) ?x117584) ?x117587)))
 (let ((?x118773 (- (- (- (- (- (- (- ?x118759 ?x118760) ?x118762) ?x118764) ?x118766) ?x118768) ?x118770) ?x118772)))
 (let ((?x118787 (+ (+ (+ (+ (+ (+ (+ ?x118773 ?x118774) ?x118776) ?x118778) ?x118780) ?x118782) ?x118784) ?x118786)))
 (let ((?x118801 (- (- (- (- (- (- (- ?x118787 ?x118788) ?x118790) ?x118792) ?x118794) ?x118796) ?x118798) ?x118800)))
 (let ((?x118815 (+ (+ (+ (+ (+ (+ (+ ?x118801 ?x118802) ?x118804) ?x118806) ?x118808) ?x118810) ?x118812) ?x118814)))
 (let ((?x118819 (- (- ?x118815 (* (* 1.0 l_0_19_76) l_0_19_94)) (* (* 1.0 l_0_19_77) l_0_19_95))))
 (= (- ?x118819 (* (* 1.0 l_0_19_78) l_0_19_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118962 (* (* 2.0 l_0_19_64) l_0_19_71)))
 (let ((?x118959 (* (* 2.0 l_0_19_63) l_0_19_70)))
 (let ((?x118956 (* (* 2.0 l_0_19_62) l_0_19_69)))
 (let ((?x118953 (* (* 2.0 l_0_19_61) l_0_19_68)))
 (let ((?x118950 (* (* 2.0 l_0_19_60) l_0_19_67)))
 (let ((?x118947 (* (* 2.0 l_0_19_59) l_0_19_66)))
 (let ((?x118944 (* (* 2.0 l_0_19_58) l_0_19_65)))
 (let ((?x118941 (* (* 2.0 l_0_19_28) l_0_19_35)))
 (let ((?x118938 (* (* 2.0 l_0_19_27) l_0_19_34)))
 (let ((?x118935 (* (* 2.0 l_0_19_26) l_0_19_33)))
 (let ((?x118932 (* (* 2.0 l_0_19_25) l_0_19_32)))
 (let ((?x117601 (* 2.0 l_0_19_24)))
 (let ((?x118929 (* ?x117601 l_0_19_31)))
 (let ((?x117276 (* 2.0 l_0_19_23)))
 (let ((?x118927 (* ?x117276 l_0_19_30)))
 (let ((?x117596 (* 2.0 l_0_19_22)))
 (let ((?x118925 (* ?x117596 l_0_19_29)))
 (let ((?x118923 (* (* 2.0 l_0_19_208) l_0_19_215)))
 (let ((?x118920 (* (* 2.0 l_0_19_207) l_0_19_214)))
 (let ((?x118917 (* (* 2.0 l_0_19_206) l_0_19_213)))
 (let ((?x118914 (* (* 2.0 l_0_19_205) l_0_19_212)))
 (let ((?x118911 (* (* 2.0 l_0_19_204) l_0_19_211)))
 (let ((?x118908 (* (* 2.0 l_0_19_203) l_0_19_210)))
 (let ((?x118905 (* (* 2.0 l_0_19_202) l_0_19_209)))
 (let ((?x118902 (* (* 2.0 l_0_19_172) l_0_19_179)))
 (let ((?x118899 (* (* 2.0 l_0_19_171) l_0_19_178)))
 (let ((?x118896 (* (* 2.0 l_0_19_170) l_0_19_177)))
 (let ((?x118893 (* (* 2.0 l_0_19_169) l_0_19_176)))
 (let ((?x118890 (* (* 2.0 l_0_19_168) l_0_19_175)))
 (let ((?x118887 (* (* 2.0 l_0_19_167) l_0_19_174)))
 (let ((?x118884 (* (* 2.0 l_0_19_166) l_0_19_173)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117164 (* ?x117163 l_0_19_175)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117161 (* ?x117160 l_0_19_174)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117158 (* ?x117157 l_0_19_173)))
 (let ((?x118870 (- (* (* (- 1.0) l_0_19_101) l_0_19_76) (* (* 1.0 l_0_19_102) l_0_19_77))))
 (let ((?x118875 (+ (- ?x118870 (* (* 1.0 l_0_19_103) l_0_19_78)) (* (* 1.0 l_0_19_112) l_0_19_137))))
 (let ((?x118879 (+ (+ ?x118875 (* (* 1.0 l_0_19_113) l_0_19_138)) (* (* 1.0 l_0_19_114) l_0_19_139))))
 (let ((?x118894 (- (- (- (- (- (- (- ?x118879 ?x117158) ?x117161) ?x117164) ?x118884) ?x118887) ?x118890) ?x118893)))
 (let ((?x118915 (+ (+ (+ (+ (- (- (- ?x118894 ?x118896) ?x118899) ?x118902) ?x118905) ?x118908) ?x118911) ?x118914)))
 (let ((?x118933 (- (- (- (- (+ (+ (+ ?x118915 ?x118917) ?x118920) ?x118923) ?x118925) ?x118927) ?x118929) ?x118932)))
 (let ((?x118954 (+ (+ (+ (+ (- (- (- ?x118933 ?x118935) ?x118938) ?x118941) ?x118944) ?x118947) ?x118950) ?x118953)))
 (= (+ (+ (+ ?x118954 ?x118956) ?x118959) ?x118962) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x119100 (* l_0_19_72 l_0_19_72)))
 (let ((?x119098 (* l_0_19_71 l_0_19_71)))
 (let ((?x119096 (* l_0_19_70 l_0_19_70)))
 (let ((?x119094 (* l_0_19_69 l_0_19_69)))
 (let ((?x119092 (* l_0_19_68 l_0_19_68)))
 (let ((?x119090 (* l_0_19_67 l_0_19_67)))
 (let ((?x119088 (* l_0_19_66 l_0_19_66)))
 (let ((?x119086 (* l_0_19_65 l_0_19_65)))
 (let ((?x119084 (* l_0_19_36 l_0_19_36)))
 (let ((?x119082 (* l_0_19_35 l_0_19_35)))
 (let ((?x119080 (* l_0_19_34 l_0_19_34)))
 (let ((?x119078 (* l_0_19_33 l_0_19_33)))
 (let ((?x119076 (* l_0_19_32 l_0_19_32)))
 (let ((?x119074 (* l_0_19_31 l_0_19_31)))
 (let ((?x119072 (* l_0_19_30 l_0_19_30)))
 (let ((?x119070 (* l_0_19_29 l_0_19_29)))
 (let ((?x119068 (* l_0_19_216 l_0_19_216)))
 (let ((?x119066 (* l_0_19_215 l_0_19_215)))
 (let ((?x119064 (* l_0_19_214 l_0_19_214)))
 (let ((?x119062 (* l_0_19_213 l_0_19_213)))
 (let ((?x119060 (* l_0_19_212 l_0_19_212)))
 (let ((?x119058 (* l_0_19_211 l_0_19_211)))
 (let ((?x119056 (* l_0_19_210 l_0_19_210)))
 (let ((?x119054 (* l_0_19_209 l_0_19_209)))
 (let ((?x119052 (* l_0_19_180 l_0_19_180)))
 (let ((?x119050 (* l_0_19_179 l_0_19_179)))
 (let ((?x119048 (* l_0_19_178 l_0_19_178)))
 (let ((?x119046 (* l_0_19_177 l_0_19_177)))
 (let ((?x119044 (* l_0_19_176 l_0_19_176)))
 (let ((?x119042 (* l_0_19_175 l_0_19_175)))
 (let ((?x119043 (- (- (* (- l_0_19_173) l_0_19_173) (* l_0_19_174 l_0_19_174)) ?x119042)))
 (let ((?x119057 (+ (+ (- (- (- (- (- ?x119043 ?x119044) ?x119046) ?x119048) ?x119050) ?x119052) ?x119054) ?x119056)))
 (let ((?x119071 (- (+ (+ (+ (+ (+ (+ ?x119057 ?x119058) ?x119060) ?x119062) ?x119064) ?x119066) ?x119068) ?x119070)))
 (let ((?x119085 (- (- (- (- (- (- (- ?x119071 ?x119072) ?x119074) ?x119076) ?x119078) ?x119080) ?x119082) ?x119084)))
 (let ((?x119099 (+ (+ (+ (+ (+ (+ (+ ?x119085 ?x119086) ?x119088) ?x119090) ?x119092) ?x119094) ?x119096) ?x119098)))
 (= (+ ?x119099 ?x119100) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x52464 (* l_0_19_37 l_0_19_37)))
 (let ((?x119148 (* l_0_19_289 l_0_19_289)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119146 (* ?x119145 l_0_19_295)))
 (let ((?x119147 (+ (- (* l_0_19_1 l_0_19_1) (* (* 2.0 l_0_19_109) l_0_19_115)) ?x119146)))
 (= (+ (- (+ ?x119147 ?x119148) ?x52464) (* (* 2.0 l_0_19_73) l_0_19_79)) 0.0)))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116672 (* ?x116671 l_0_19_38)))
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119182 (* ?x119181 l_0_19_296)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119179 (* ?x119178 l_0_19_295)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119176 (* ?x119145 l_0_19_290)))
 (let ((?x119172 (- (* (* 2.0 l_0_19_1) l_0_19_2) (* (* 2.0 l_0_19_110) l_0_19_115))))
 (let ((?x119183 (+ (+ (+ (- ?x119172 (* (* 2.0 l_0_19_111) l_0_19_116)) ?x119176) ?x119179) ?x119182)))
 (let ((?x119187 (- (- ?x119183 (* (* 2.0 l_0_19_325) l_0_19_331)) (* (* 2.0 l_0_19_361) l_0_19_367))))
 (let ((?x119192 (- (- (- ?x119187 ?x116672) (* (* 2.0 l_0_19_397) l_0_19_403)) (* (* 2.0 l_0_19_433) l_0_19_439))))
 (let ((?x119198 (+ (+ ?x119192 (* (* 2.0 l_0_19_74) l_0_19_79)) (* (* 2.0 l_0_19_75) l_0_19_80))))
 (= ?x119198 0.0)))))))))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116728 (* ?x116671 l_0_19_40)))
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x119231 (* ?x116668 l_0_19_297)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x119229 (* ?x116665 l_0_19_296)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x119227 (* ?x93499 l_0_19_295)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119225 (* ?x119145 l_0_19_292)))
 (let ((?x119220 (- (* (* 2.0 l_0_19_1) l_0_19_4) (* (* 2.0 l_0_19_112) l_0_19_115))))
 (let ((?x119224 (- (- ?x119220 (* (* 2.0 l_0_19_113) l_0_19_116)) (* (* 2.0 l_0_19_114) l_0_19_117))))
 (let ((?x119236 (+ (- (+ (+ (+ (+ ?x119224 ?x119225) ?x119227) ?x119229) ?x119231) ?x116728) (* (* 2.0 l_0_19_76) l_0_19_79))))
 (let ((?x119242 (+ (+ ?x119236 (* (* 2.0 l_0_19_77) l_0_19_80)) (* (* 2.0 l_0_19_78) l_0_19_81))))
 (= ?x119242 0.0))))))))))))))))
(assert
 (let ((?x119283 (* l_0_19_82 l_0_19_82)))
 (let ((?x119281 (* l_0_19_81 l_0_19_81)))
 (let ((?x119279 (* l_0_19_80 l_0_19_80)))
 (let ((?x119277 (* l_0_19_79 l_0_19_79)))
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116747 (* ?x116671 l_0_19_43)))
 (let ((?x119274 (* l_0_19_298 l_0_19_298)))
 (let ((?x119272 (* l_0_19_297 l_0_19_297)))
 (let ((?x119270 (* l_0_19_296 l_0_19_296)))
 (let ((?x119268 (* l_0_19_295 l_0_19_295)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119146 (* ?x119145 l_0_19_295)))
 (let ((?x119265 (* l_0_19_118 l_0_19_118)))
 (let ((?x119263 (* l_0_19_117 l_0_19_117)))
 (let ((?x119261 (* l_0_19_116 l_0_19_116)))
 (let ((?x119262 (- (- (* (* 2.0 l_0_19_1) l_0_19_7) (* l_0_19_115 l_0_19_115)) ?x119261)))
 (let ((?x119275 (+ (+ (+ (+ (+ (- (- ?x119262 ?x119263) ?x119265) ?x119146) ?x119268) ?x119270) ?x119272) ?x119274)))
 (= (+ (+ (+ (+ (- ?x119275 ?x116747) ?x119277) ?x119279) ?x119281) ?x119283) 0.0)))))))))))))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116770 (* ?x116671 l_0_19_47)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119318 (* ?x119317 l_0_19_302)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119315 (* ?x119314 l_0_19_301)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119312 (* ?x119311 l_0_19_300)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119309 (* ?x119308 l_0_19_299)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119306 (* ?x119145 l_0_19_299)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x119304 (* ?x119303 l_0_19_259)))
 (let ((?x119293 (- (* (* 2.0 l_0_19_1) l_0_19_11) (* (* 2.0 l_0_19_115) l_0_19_119))))
 (let ((?x119299 (- (- ?x119293 (* (* 2.0 l_0_19_116) l_0_19_120)) (* (* 2.0 l_0_19_117) l_0_19_121))))
 (let ((?x119310 (+ (+ (+ (- ?x119299 (* (* 2.0 l_0_19_118) l_0_19_122)) ?x119304) ?x119306) ?x119309)))
 (let ((?x119323 (+ (- (+ (+ (+ ?x119310 ?x119312) ?x119315) ?x119318) ?x116770) (* (* 2.0 l_0_19_79) l_0_19_83))))
 (let ((?x119329 (+ (+ ?x119323 (* (* 2.0 l_0_19_80) l_0_19_84)) (* (* 2.0 l_0_19_81) l_0_19_85))))
 (= (+ ?x119329 (* (* 2.0 l_0_19_82) l_0_19_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116793 (* ?x116671 l_0_19_52)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119386 (* ?x119317 l_0_19_307)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119384 (* ?x119314 l_0_19_306)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119382 (* ?x119311 l_0_19_305)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119380 (* ?x119308 l_0_19_304)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119378 (* ?x119145 l_0_19_304)))
 (let ((?x119146 (* ?x119145 l_0_19_295)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116745 (* ?x20756 l_0_19_187)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116738 (* ?x93488 l_0_19_151)))
 (let ((?x119355 (- (* (* 2.0 l_0_19_1) l_0_19_16) (* (* 2.0 l_0_19_115) l_0_19_124))))
 (let ((?x119372 (- (- ?x119355 (* (* 2.0 l_0_19_116) l_0_19_125)) (* (* 2.0 l_0_19_117) l_0_19_126))))
 (let ((?x119377 (- (- (+ (- ?x119372 (* (* 2.0 l_0_19_118) l_0_19_127)) ?x116738) ?x116745) ?x119146)))
 (let ((?x119390 (+ (- (+ (+ (+ (+ (+ ?x119377 ?x119378) ?x119380) ?x119382) ?x119384) ?x119386) ?x116793) (* (* 2.0 l_0_19_79) l_0_19_88))))
 (let ((?x119394 (+ (+ ?x119390 (* (* 2.0 l_0_19_80) l_0_19_89)) (* (* 2.0 l_0_19_81) l_0_19_90))))
 (= (+ ?x119394 (* (* 2.0 l_0_19_82) l_0_19_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116817 (* ?x116671 l_0_19_58)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119442 (* ?x119317 l_0_19_313)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119440 (* ?x119314 l_0_19_312)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119438 (* ?x119311 l_0_19_311)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119436 (* ?x119308 l_0_19_310)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119434 (* ?x119145 l_0_19_310)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x119304 (* ?x119303 l_0_19_259)))
 (let ((?x96325 (- (* (* 2.0 l_0_19_1) l_0_19_22) (* (* 2.0 l_0_19_115) l_0_19_130))))
 (let ((?x119430 (- (- ?x96325 (* (* 2.0 l_0_19_116) l_0_19_131)) (* (* 2.0 l_0_19_117) l_0_19_132))))
 (let ((?x119437 (+ (+ (- (- ?x119430 (* (* 2.0 l_0_19_118) l_0_19_133)) ?x119304) ?x119434) ?x119436)))
 (let ((?x119446 (+ (- (+ (+ (+ ?x119437 ?x119438) ?x119440) ?x119442) ?x116817) (* (* 2.0 l_0_19_79) l_0_19_94))))
 (let ((?x119450 (+ (+ ?x119446 (* (* 2.0 l_0_19_80) l_0_19_95)) (* (* 2.0 l_0_19_81) l_0_19_96))))
 (= (+ ?x119450 (* (* 2.0 l_0_19_82) l_0_19_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x116671 (* 2.0 l_0_19_37)))
 (let ((?x116852 (* ?x116671 l_0_19_65)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119525 (* ?x119317 l_0_19_320)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119523 (* ?x119314 l_0_19_319)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119521 (* ?x119311 l_0_19_318)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119519 (* ?x119308 l_0_19_317)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119517 (* ?x119145 l_0_19_317)))
 (let ((?x119487 (+ (* (* 2.0 l_0_19_1) l_0_19_29) (* (* 2.0 l_0_19_101) l_0_19_79))))
 (let ((?x119503 (+ (+ ?x119487 (* (* 2.0 l_0_19_102) l_0_19_80)) (* (* 2.0 l_0_19_103) l_0_19_81))))
 (let ((?x119508 (- (+ ?x119503 (* (* 2.0 l_0_19_104) l_0_19_82)) (* (* 2.0 l_0_19_115) l_0_19_137))))
 (let ((?x119512 (- (- ?x119508 (* (* 2.0 l_0_19_116) l_0_19_138)) (* (* 2.0 l_0_19_117) l_0_19_139))))
 (let ((?x119516 (- (- ?x119512 (* (* 2.0 l_0_19_118) l_0_19_140)) (* (* 2.0 l_0_19_217) l_0_19_223))))
 (= (- (+ (+ (+ (+ (+ ?x119516 ?x119517) ?x119519) ?x119521) ?x119523) ?x119525) ?x116852) 0.0)))))))))))))))))))
(assert
 (let ((?x116902 (* l_0_19_39 l_0_19_39)))
 (let ((?x116900 (* l_0_19_38 l_0_19_38)))
 (let ((?x116880 (* l_0_19_3 l_0_19_3)))
 (let ((?x116487 (* l_0_19_291 l_0_19_291)))
 (let ((?x119557 (+ (+ (+ (* l_0_19_2 l_0_19_2) (* l_0_19_290 l_0_19_290)) ?x116487) ?x116880)))
 (let ((?x119563 (- (- ?x119557 (* (* 2.0 l_0_19_326) l_0_19_331)) (* (* 2.0 l_0_19_327) l_0_19_332))))
 (let ((?x119569 (- (- ?x119563 (* (* 2.0 l_0_19_362) l_0_19_367)) (* (* 2.0 l_0_19_363) l_0_19_368))))
 (let ((?x119577 (- (- (- (- ?x119569 ?x116900) ?x116902) (* (* 2.0 l_0_19_398) l_0_19_403)) (* (* 2.0 l_0_19_399) l_0_19_404))))
 (let ((?x119583 (- (- ?x119577 (* (* 2.0 l_0_19_434) l_0_19_439)) (* (* 2.0 l_0_19_435) l_0_19_440))))
 (= ?x119583 0.0)))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x116987 (* ?x116986 l_0_19_41)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x116984 (* ?x116983 l_0_19_40)))
 (let ((?x116980 (* 2.0 l_0_19_3)))
 (let ((?x116981 (* ?x116980 l_0_19_5)))
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x53495 (* ?x119181 l_0_19_293)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x74724 (* ?x119178 l_0_19_292)))
 (let ((?x116971 (* 2.0 l_0_19_2)))
 (let ((?x116972 (* ?x116971 l_0_19_4)))
 (let ((?x119593 (- (+ (+ (+ ?x116972 ?x74724) ?x53495) ?x116981) (* (* 2.0 l_0_19_328) l_0_19_331))))
 (let ((?x119597 (- (- ?x119593 (* (* 2.0 l_0_19_329) l_0_19_332)) (* (* 2.0 l_0_19_330) l_0_19_333))))
 (let ((?x119601 (- (- ?x119597 (* (* 2.0 l_0_19_364) l_0_19_367)) (* (* 2.0 l_0_19_365) l_0_19_368))))
 (let ((?x119607 (- (- (- (- ?x119601 (* (* 2.0 l_0_19_366) l_0_19_369)) ?x116984) ?x116987) (* (* 2.0 l_0_19_400) l_0_19_403))))
 (let ((?x119611 (- (- ?x119607 (* (* 2.0 l_0_19_401) l_0_19_404)) (* (* 2.0 l_0_19_402) l_0_19_405))))
 (let ((?x119615 (- (- ?x119611 (* (* 2.0 l_0_19_436) l_0_19_439)) (* (* 2.0 l_0_19_437) l_0_19_440))))
 (= (- ?x119615 (* (* 2.0 l_0_19_438) l_0_19_441)) 0.0))))))))))))))))))))
(assert
 (let ((?x119667 (* l_0_19_442 l_0_19_442)))
 (let ((?x119665 (* l_0_19_441 l_0_19_441)))
 (let ((?x119663 (* l_0_19_440 l_0_19_440)))
 (let ((?x119661 (* l_0_19_439 l_0_19_439)))
 (let ((?x119659 (* l_0_19_406 l_0_19_406)))
 (let ((?x119657 (* l_0_19_405 l_0_19_405)))
 (let ((?x119655 (* l_0_19_404 l_0_19_404)))
 (let ((?x119653 (* l_0_19_403 l_0_19_403)))
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117052 (* ?x116986 l_0_19_44)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117050 (* ?x116983 l_0_19_43)))
 (let ((?x119649 (* l_0_19_370 l_0_19_370)))
 (let ((?x119647 (* l_0_19_369 l_0_19_369)))
 (let ((?x119645 (* l_0_19_368 l_0_19_368)))
 (let ((?x119643 (* l_0_19_367 l_0_19_367)))
 (let ((?x119641 (* l_0_19_334 l_0_19_334)))
 (let ((?x96698 (* l_0_19_333 l_0_19_333)))
 (let ((?x74789 (* l_0_19_332 l_0_19_332)))
 (let ((?x23132 (* l_0_19_331 l_0_19_331)))
 (let ((?x116980 (* 2.0 l_0_19_3)))
 (let ((?x117042 (* ?x116980 l_0_19_8)))
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119182 (* ?x119181 l_0_19_296)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119179 (* ?x119178 l_0_19_295)))
 (let ((?x116971 (* 2.0 l_0_19_2)))
 (let ((?x117025 (* ?x116971 l_0_19_7)))
 (let ((?x119642 (- (- (- (- (+ (+ (+ ?x117025 ?x119179) ?x119182) ?x117042) ?x23132) ?x74789) ?x96698) ?x119641)))
 (let ((?x119654 (- (- (- (- (- (- (- ?x119642 ?x119643) ?x119645) ?x119647) ?x119649) ?x117050) ?x117052) ?x119653)))
 (let ((?x119668 (- (- (- (- (- (- (- ?x119654 ?x119655) ?x119657) ?x119659) ?x119661) ?x119663) ?x119665) ?x119667)))
 (= ?x119668 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117139 (* ?x116986 l_0_19_48)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117137 (* ?x116983 l_0_19_47)))
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119692 (* ?x119181 l_0_19_300)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119690 (* ?x119178 l_0_19_299)))
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x119688 (* ?x116548 l_0_19_260)))
 (let ((?x116545 (* 2.0 l_0_19_254)))
 (let ((?x119686 (* ?x116545 l_0_19_259)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x117111 (* ?x117110 l_0_19_3)))
 (let ((?x119691 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_2) ?x117111) ?x119686) ?x119688) ?x119690)))
 (let ((?x119699 (- (- (+ ?x119691 ?x119692) (* (* 2.0 l_0_19_331) l_0_19_335)) (* (* 2.0 l_0_19_332) l_0_19_336))))
 (let ((?x119705 (- (- ?x119699 (* (* 2.0 l_0_19_333) l_0_19_337)) (* (* 2.0 l_0_19_334) l_0_19_338))))
 (let ((?x119711 (- (- ?x119705 (* (* 2.0 l_0_19_367) l_0_19_371)) (* (* 2.0 l_0_19_368) l_0_19_372))))
 (let ((?x119717 (- (- ?x119711 (* (* 2.0 l_0_19_369) l_0_19_373)) (* (* 2.0 l_0_19_370) l_0_19_374))))
 (let ((?x119725 (- (- (- (- ?x119717 ?x117137) ?x117139) (* (* 2.0 l_0_19_403) l_0_19_407)) (* (* 2.0 l_0_19_404) l_0_19_408))))
 (let ((?x119731 (- (- ?x119725 (* (* 2.0 l_0_19_405) l_0_19_409)) (* (* 2.0 l_0_19_406) l_0_19_410))))
 (let ((?x119737 (- (- ?x119731 (* (* 2.0 l_0_19_439) l_0_19_443)) (* (* 2.0 l_0_19_440) l_0_19_444))))
 (let ((?x119743 (- (- ?x119737 (* (* 2.0 l_0_19_441) l_0_19_445)) (* (* 2.0 l_0_19_442) l_0_19_446))))
 (= ?x119743 0.0)))))))))))))))))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117196 (* ?x116986 l_0_19_53)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117194 (* ?x116983 l_0_19_52)))
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119791 (* ?x119181 l_0_19_305)))
 (let ((?x119182 (* ?x119181 l_0_19_296)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119788 (* ?x119178 l_0_19_304)))
 (let ((?x119179 (* ?x119178 l_0_19_295)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117023 (* ?x116968 l_0_19_188)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117021 (* ?x116965 l_0_19_187)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x117170 (* ?x117169 l_0_19_3)))
 (let ((?x117166 (* 2.0 l_0_19_16)))
 (let ((?x117167 (* ?x117166 l_0_19_2)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117019 (* ?x116962 l_0_19_152)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x97139 (* ?x117113 l_0_19_151)))
 (let ((?x119789 (+ (- (- (- (+ (+ (+ ?x97139 ?x117019) ?x117167) ?x117170) ?x117021) ?x117023) ?x119179) ?x119788)))
 (let ((?x119796 (- (- (+ (- ?x119789 ?x119182) ?x119791) (* (* 2.0 l_0_19_331) l_0_19_340)) (* (* 2.0 l_0_19_332) l_0_19_341))))
 (let ((?x119800 (- (- ?x119796 (* (* 2.0 l_0_19_333) l_0_19_342)) (* (* 2.0 l_0_19_334) l_0_19_343))))
 (let ((?x119804 (- (- ?x119800 (* (* 2.0 l_0_19_367) l_0_19_376)) (* (* 2.0 l_0_19_368) l_0_19_377))))
 (let ((?x119808 (- (- ?x119804 (* (* 2.0 l_0_19_369) l_0_19_378)) (* (* 2.0 l_0_19_370) l_0_19_379))))
 (let ((?x119814 (- (- (- (- ?x119808 ?x117194) ?x117196) (* (* 2.0 l_0_19_403) l_0_19_412)) (* (* 2.0 l_0_19_404) l_0_19_413))))
 (let ((?x119818 (- (- ?x119814 (* (* 2.0 l_0_19_405) l_0_19_414)) (* (* 2.0 l_0_19_406) l_0_19_415))))
 (let ((?x119822 (- (- ?x119818 (* (* 2.0 l_0_19_439) l_0_19_448)) (* (* 2.0 l_0_19_440) l_0_19_449))))
 (let ((?x119826 (- (- ?x119822 (* (* 2.0 l_0_19_441) l_0_19_450)) (* (* 2.0 l_0_19_442) l_0_19_451))))
 (= ?x119826 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117284 (* ?x116986 l_0_19_59)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117282 (* ?x116983 l_0_19_58)))
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119856 (* ?x119181 l_0_19_311)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119854 (* ?x119178 l_0_19_310)))
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x119688 (* ?x116548 l_0_19_260)))
 (let ((?x116545 (* 2.0 l_0_19_254)))
 (let ((?x119686 (* ?x116545 l_0_19_259)))
 (let ((?x117276 (* 2.0 l_0_19_23)))
 (let ((?x117277 (* ?x117276 l_0_19_3)))
 (let ((?x116971 (* 2.0 l_0_19_2)))
 (let ((?x117268 (* ?x116971 l_0_19_22)))
 (let ((?x119859 (- (+ (+ (- (- (+ ?x117268 ?x117277) ?x119686) ?x119688) ?x119854) ?x119856) (* (* 2.0 l_0_19_331) l_0_19_346))))
 (let ((?x119863 (- (- ?x119859 (* (* 2.0 l_0_19_332) l_0_19_347)) (* (* 2.0 l_0_19_333) l_0_19_348))))
 (let ((?x119867 (- (- ?x119863 (* (* 2.0 l_0_19_334) l_0_19_349)) (* (* 2.0 l_0_19_367) l_0_19_382))))
 (let ((?x119871 (- (- ?x119867 (* (* 2.0 l_0_19_368) l_0_19_383)) (* (* 2.0 l_0_19_369) l_0_19_384))))
 (let ((?x119877 (- (- (- (- ?x119871 (* (* 2.0 l_0_19_370) l_0_19_385)) ?x117282) ?x117284) (* (* 2.0 l_0_19_403) l_0_19_418))))
 (let ((?x119881 (- (- ?x119877 (* (* 2.0 l_0_19_404) l_0_19_419)) (* (* 2.0 l_0_19_405) l_0_19_420))))
 (let ((?x119885 (- (- ?x119881 (* (* 2.0 l_0_19_406) l_0_19_421)) (* (* 2.0 l_0_19_439) l_0_19_454))))
 (let ((?x119889 (- (- ?x119885 (* (* 2.0 l_0_19_440) l_0_19_455)) (* (* 2.0 l_0_19_441) l_0_19_456))))
 (= (- ?x119889 (* (* 2.0 l_0_19_442) l_0_19_457)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x116986 (* 2.0 l_0_19_39)))
 (let ((?x117368 (* ?x116986 l_0_19_66)))
 (let ((?x116983 (* 2.0 l_0_19_38)))
 (let ((?x117366 (* ?x116983 l_0_19_65)))
 (let ((?x116980 (* 2.0 l_0_19_3)))
 (let ((?x117364 (* ?x116980 l_0_19_30)))
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119955 (* ?x119181 l_0_19_318)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119953 (* ?x119178 l_0_19_317)))
 (let ((?x116971 (* 2.0 l_0_19_2)))
 (let ((?x117356 (* ?x116971 l_0_19_29)))
 (let ((?x119952 (- (- ?x117356 (* (* 2.0 l_0_19_218) l_0_19_223)) (* (* 2.0 l_0_19_219) l_0_19_224))))
 (let ((?x119959 (- (+ (+ (+ ?x119952 ?x119953) ?x119955) ?x117364) (* (* 2.0 l_0_19_331) l_0_19_353))))
 (let ((?x119963 (- (- ?x119959 (* (* 2.0 l_0_19_332) l_0_19_354)) (* (* 2.0 l_0_19_333) l_0_19_355))))
 (let ((?x119967 (- (- ?x119963 (* (* 2.0 l_0_19_334) l_0_19_356)) (* (* 2.0 l_0_19_367) l_0_19_389))))
 (let ((?x119971 (- (- ?x119967 (* (* 2.0 l_0_19_368) l_0_19_390)) (* (* 2.0 l_0_19_369) l_0_19_391))))
 (let ((?x119977 (- (- (- (- ?x119971 (* (* 2.0 l_0_19_370) l_0_19_392)) ?x117366) ?x117368) (* (* 2.0 l_0_19_403) l_0_19_425))))
 (let ((?x119981 (- (- ?x119977 (* (* 2.0 l_0_19_404) l_0_19_426)) (* (* 2.0 l_0_19_405) l_0_19_427))))
 (let ((?x119985 (- (- ?x119981 (* (* 2.0 l_0_19_406) l_0_19_428)) (* (* 2.0 l_0_19_439) l_0_19_461))))
 (let ((?x119989 (- (- ?x119985 (* (* 2.0 l_0_19_440) l_0_19_462)) (* (* 2.0 l_0_19_441) l_0_19_463))))
 (= (- ?x119989 (* (* 2.0 l_0_19_442) l_0_19_464)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x117427 (* l_0_19_6 l_0_19_6)))
 (let ((?x117425 (* l_0_19_5 l_0_19_5)))
 (let ((?x117423 (* l_0_19_42 l_0_19_42)))
 (let ((?x117421 (* l_0_19_41 l_0_19_41)))
 (let ((?x117419 (* l_0_19_40 l_0_19_40)))
 (let ((?x117417 (* l_0_19_4 l_0_19_4)))
 (let ((?x17210 (* l_0_19_294 l_0_19_294)))
 (let ((?x120048 (+ (+ (* l_0_19_292 l_0_19_292) (* l_0_19_293 l_0_19_293)) ?x17210)))
 (= (+ (+ (- (- (- (+ ?x120048 ?x117417) ?x117419) ?x117421) ?x117423) ?x117425) ?x117427) 0.0))))))))))
(assert
 (let ((?x117477 (* (* 2.0 l_0_19_6) l_0_19_9)))
 (let ((?x117474 (* (* 2.0 l_0_19_5) l_0_19_8)))
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117471 (* ?x117060 l_0_19_45)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117469 (* ?x117057 l_0_19_44)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117467 (* ?x117054 l_0_19_43)))
 (let ((?x117465 (* (* 2.0 l_0_19_4) l_0_19_7)))
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x119231 (* ?x116668 l_0_19_297)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x119229 (* ?x116665 l_0_19_296)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x119227 (* ?x93499 l_0_19_295)))
 (let ((?x120065 (+ (- (- (- (+ (+ (+ ?x119227 ?x119229) ?x119231) ?x117465) ?x117467) ?x117469) ?x117471) ?x117474)))
 (= (+ ?x120065 ?x117477) 0.0))))))))))))))))))
(assert
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117511 (* ?x117060 l_0_19_49)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117509 (* ?x117057 l_0_19_48)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117507 (* ?x117054 l_0_19_47)))
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x120078 (* ?x116668 l_0_19_301)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x120076 (* ?x116665 l_0_19_300)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x120074 (* ?x93499 l_0_19_299)))
 (let ((?x117134 (* 2.0 l_0_19_258)))
 (let ((?x120072 (* ?x117134 l_0_19_261)))
 (let ((?x117131 (* 2.0 l_0_19_257)))
 (let ((?x120070 (* ?x117131 l_0_19_260)))
 (let ((?x117128 (* 2.0 l_0_19_256)))
 (let ((?x75904 (* ?x117128 l_0_19_259)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x117493 (* ?x117492 l_0_19_6)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x117490 (* ?x117110 l_0_19_5)))
 (let ((?x120071 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_4) ?x117490) ?x117493) ?x75904) ?x120070)))
 (let ((?x120082 (- (- (- (+ (+ (+ (+ ?x120071 ?x120072) ?x120074) ?x120076) ?x120078) ?x117507) ?x117509) ?x117511)))
 (= ?x120082 0.0))))))))))))))))))))))))))
(assert
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117539 (* ?x117060 l_0_19_54)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117537 (* ?x117057 l_0_19_53)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117535 (* ?x117054 l_0_19_52)))
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x120113 (* ?x116668 l_0_19_306)))
 (let ((?x119231 (* ?x116668 l_0_19_297)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x120110 (* ?x116665 l_0_19_305)))
 (let ((?x119229 (* ?x116665 l_0_19_296)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x120107 (* ?x93499 l_0_19_304)))
 (let ((?x119227 (* ?x93499 l_0_19_295)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117462 (* ?x117182 l_0_19_189)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117460 (* ?x117179 l_0_19_188)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117458 (* ?x117176 l_0_19_187)))
 (let ((?x94106 (* 2.0 l_0_19_18)))
 (let ((?x117527 (* ?x94106 l_0_19_6)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x21795 (* ?x117169 l_0_19_5)))
 (let ((?x117166 (* 2.0 l_0_19_16)))
 (let ((?x94105 (* ?x117166 l_0_19_4)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117456 (* ?x117163 l_0_19_153)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117454 (* ?x117160 l_0_19_152)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117845 (* ?x117157 l_0_19_151)))
 (let ((?x120104 (- (- (+ (+ (+ (+ (+ ?x117845 ?x117454) ?x117456) ?x94105) ?x21795) ?x117527) ?x117458) ?x117460)))
 (let ((?x120114 (+ (- (+ (- (+ (- (- ?x120104 ?x117462) ?x119227) ?x120107) ?x119229) ?x120110) ?x119231) ?x120113)))
 (= (- (- (- ?x120114 ?x117535) ?x117537) ?x117539) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x117060 (* 2.0 l_0_19_42)))
 (let ((?x117608 (* ?x117060 l_0_19_60)))
 (let ((?x117057 (* 2.0 l_0_19_41)))
 (let ((?x117606 (* ?x117057 l_0_19_59)))
 (let ((?x117054 (* 2.0 l_0_19_40)))
 (let ((?x117604 (* ?x117054 l_0_19_58)))
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x120139 (* ?x116668 l_0_19_312)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x120137 (* ?x116665 l_0_19_311)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x120135 (* ?x93499 l_0_19_310)))
 (let ((?x117134 (* 2.0 l_0_19_258)))
 (let ((?x120072 (* ?x117134 l_0_19_261)))
 (let ((?x117131 (* 2.0 l_0_19_257)))
 (let ((?x120070 (* ?x117131 l_0_19_260)))
 (let ((?x117128 (* 2.0 l_0_19_256)))
 (let ((?x75904 (* ?x117128 l_0_19_259)))
 (let ((?x117601 (* 2.0 l_0_19_24)))
 (let ((?x117602 (* ?x117601 l_0_19_6)))
 (let ((?x117276 (* 2.0 l_0_19_23)))
 (let ((?x117599 (* ?x117276 l_0_19_5)))
 (let ((?x117596 (* 2.0 l_0_19_22)))
 (let ((?x117597 (* ?x117596 l_0_19_4)))
 (let ((?x120138 (+ (+ (- (- (- (+ (+ ?x117597 ?x117599) ?x117602) ?x75904) ?x120070) ?x120072) ?x120135) ?x120137)))
 (= (- (- (- (+ ?x120138 ?x120139) ?x117604) ?x117606) ?x117608) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x117694 (* l_0_19_9 l_0_19_9)))
 (let ((?x117692 (* l_0_19_8 l_0_19_8)))
 (let ((?x117690 (* l_0_19_7 l_0_19_7)))
 (let ((?x117688 (* l_0_19_46 l_0_19_46)))
 (let ((?x117686 (* l_0_19_45 l_0_19_45)))
 (let ((?x117684 (* l_0_19_44 l_0_19_44)))
 (let ((?x117682 (* l_0_19_43 l_0_19_43)))
 (let ((?x119274 (* l_0_19_298 l_0_19_298)))
 (let ((?x119272 (* l_0_19_297 l_0_19_297)))
 (let ((?x119270 (* l_0_19_296 l_0_19_296)))
 (let ((?x120159 (+ (+ (+ (* l_0_19_10 l_0_19_10) (* l_0_19_295 l_0_19_295)) ?x119270) ?x119272)))
 (let ((?x120166 (+ (+ (- (- (- (- (+ ?x120159 ?x119274) ?x117682) ?x117684) ?x117686) ?x117688) ?x117690) ?x117692)))
 (= (+ ?x120166 ?x117694) 0.0))))))))))))))
(assert
 (let ((?x117766 (* 2.0 l_0_19_46)))
 (let ((?x117767 (* ?x117766 l_0_19_50)))
 (let ((?x117763 (* 2.0 l_0_19_45)))
 (let ((?x117764 (* ?x117763 l_0_19_49)))
 (let ((?x117760 (* 2.0 l_0_19_44)))
 (let ((?x117761 (* ?x117760 l_0_19_48)))
 (let ((?x117757 (* 2.0 l_0_19_43)))
 (let ((?x117758 (* ?x117757 l_0_19_47)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119318 (* ?x119317 l_0_19_302)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119315 (* ?x119314 l_0_19_301)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119312 (* ?x119311 l_0_19_300)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119309 (* ?x119308 l_0_19_299)))
 (let ((?x120174 (* l_0_19_262 l_0_19_262)))
 (let ((?x120172 (* l_0_19_261 l_0_19_261)))
 (let ((?x120170 (* l_0_19_260 l_0_19_260)))
 (let ((?x76136 (* l_0_19_259 l_0_19_259)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x117731 (* ?x117492 l_0_19_9)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x117729 (* ?x117110 l_0_19_8)))
 (let ((?x117726 (* 2.0 l_0_19_11)))
 (let ((?x117727 (* ?x117726 l_0_19_7)))
 (let ((?x120169 (+ (+ (+ (+ (* (* 2.0 l_0_19_10) l_0_19_14) ?x117727) ?x117729) ?x117731) ?x76136)))
 (let ((?x120179 (+ (+ (+ (+ (+ (+ (+ ?x120169 ?x120170) ?x120172) ?x120174) ?x119309) ?x119312) ?x119315) ?x119318)))
 (= (- (- (- (- ?x120179 ?x117758) ?x117761) ?x117764) ?x117767) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x117766 (* 2.0 l_0_19_46)))
 (let ((?x117818 (* ?x117766 l_0_19_55)))
 (let ((?x117763 (* 2.0 l_0_19_45)))
 (let ((?x117816 (* ?x117763 l_0_19_54)))
 (let ((?x117760 (* 2.0 l_0_19_44)))
 (let ((?x117814 (* ?x117760 l_0_19_53)))
 (let ((?x117757 (* 2.0 l_0_19_43)))
 (let ((?x117812 (* ?x117757 l_0_19_52)))
 (let ((?x119274 (* l_0_19_298 l_0_19_298)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119386 (* ?x119317 l_0_19_307)))
 (let ((?x119272 (* l_0_19_297 l_0_19_297)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119384 (* ?x119314 l_0_19_306)))
 (let ((?x119270 (* l_0_19_296 l_0_19_296)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119382 (* ?x119311 l_0_19_305)))
 (let ((?x119268 (* l_0_19_295 l_0_19_295)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119380 (* ?x119308 l_0_19_304)))
 (let ((?x117680 (* l_0_19_190 l_0_19_190)))
 (let ((?x117678 (* l_0_19_189 l_0_19_189)))
 (let ((?x117676 (* l_0_19_188 l_0_19_188)))
 (let ((?x73424 (* l_0_19_187 l_0_19_187)))
 (let ((?x94106 (* 2.0 l_0_19_18)))
 (let ((?x117802 (* ?x94106 l_0_19_9)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x117800 (* ?x117169 l_0_19_8)))
 (let ((?x117166 (* 2.0 l_0_19_16)))
 (let ((?x117798 (* ?x117166 l_0_19_7)))
 (let ((?x94382 (* l_0_19_154 l_0_19_154)))
 (let ((?x94393 (* l_0_19_153 l_0_19_153)))
 (let ((?x94399 (* l_0_19_152 l_0_19_152)))
 (let ((?x52821 (* l_0_19_151 l_0_19_151)))
 (let ((?x97545 (+ (+ (+ (+ (* (* 2.0 l_0_19_10) l_0_19_19) ?x52821) ?x94399) ?x94393) ?x94382)))
 (let ((?x120191 (- (- (- (- (+ (+ (+ ?x97545 ?x117798) ?x117800) ?x117802) ?x73424) ?x117676) ?x117678) ?x117680)))
 (let ((?x120198 (+ (- (+ (- (+ (- (+ ?x120191 ?x119380) ?x119268) ?x119382) ?x119270) ?x119384) ?x119272) ?x119386)))
 (= (- (- (- (- (- ?x120198 ?x119274) ?x117812) ?x117814) ?x117816) ?x117818) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x117766 (* 2.0 l_0_19_46)))
 (let ((?x117877 (* ?x117766 l_0_19_61)))
 (let ((?x117763 (* 2.0 l_0_19_45)))
 (let ((?x117875 (* ?x117763 l_0_19_60)))
 (let ((?x117760 (* 2.0 l_0_19_44)))
 (let ((?x117873 (* ?x117760 l_0_19_59)))
 (let ((?x117757 (* 2.0 l_0_19_43)))
 (let ((?x117871 (* ?x117757 l_0_19_58)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119442 (* ?x119317 l_0_19_313)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119440 (* ?x119314 l_0_19_312)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119438 (* ?x119311 l_0_19_311)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119436 (* ?x119308 l_0_19_310)))
 (let ((?x120174 (* l_0_19_262 l_0_19_262)))
 (let ((?x120172 (* l_0_19_261 l_0_19_261)))
 (let ((?x120170 (* l_0_19_260 l_0_19_260)))
 (let ((?x76136 (* l_0_19_259 l_0_19_259)))
 (let ((?x117601 (* 2.0 l_0_19_24)))
 (let ((?x117869 (* ?x117601 l_0_19_9)))
 (let ((?x117276 (* 2.0 l_0_19_23)))
 (let ((?x117867 (* ?x117276 l_0_19_8)))
 (let ((?x117596 (* 2.0 l_0_19_22)))
 (let ((?x117865 (* ?x117596 l_0_19_7)))
 (let ((?x97580 (- (+ (+ (+ (* (* 2.0 l_0_19_10) l_0_19_25) ?x117865) ?x117867) ?x117869) ?x76136)))
 (let ((?x54644 (+ (+ (+ (+ (- (- (- ?x97580 ?x120170) ?x120172) ?x120174) ?x119436) ?x119438) ?x119440) ?x119442)))
 (= (- (- (- (- ?x54644 ?x117871) ?x117873) ?x117875) ?x117877) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x117766 (* 2.0 l_0_19_46)))
 (let ((?x117977 (* ?x117766 l_0_19_68)))
 (let ((?x117763 (* 2.0 l_0_19_45)))
 (let ((?x117975 (* ?x117763 l_0_19_67)))
 (let ((?x117760 (* 2.0 l_0_19_44)))
 (let ((?x117973 (* ?x117760 l_0_19_66)))
 (let ((?x117757 (* 2.0 l_0_19_43)))
 (let ((?x117971 (* ?x117757 l_0_19_65)))
 (let ((?x117047 (* 2.0 l_0_19_31)))
 (let ((?x117969 (* ?x117047 l_0_19_9)))
 (let ((?x117044 (* 2.0 l_0_19_30)))
 (let ((?x117967 (* ?x117044 l_0_19_8)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119525 (* ?x119317 l_0_19_320)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119523 (* ?x119314 l_0_19_319)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119521 (* ?x119311 l_0_19_318)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119519 (* ?x119308 l_0_19_317)))
 (let ((?x117036 (* 2.0 l_0_19_29)))
 (let ((?x117965 (* ?x117036 l_0_19_7)))
 (let ((?x120233 (* l_0_19_226 l_0_19_226)))
 (let ((?x120231 (* l_0_19_225 l_0_19_225)))
 (let ((?x120229 (* l_0_19_224 l_0_19_224)))
 (let ((?x120227 (* l_0_19_223 l_0_19_223)))
 (let ((?x120234 (- (- (- (- (* (* 2.0 l_0_19_10) l_0_19_32) ?x120227) ?x120229) ?x120231) ?x120233)))
 (let ((?x120241 (+ (+ (+ (+ (+ (+ (+ ?x120234 ?x117965) ?x119519) ?x119521) ?x119523) ?x119525) ?x117967) ?x117969)))
 (= (- (- (- (- ?x120241 ?x117971) ?x117973) ?x117975) ?x117977) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x118055 (* l_0_19_51 l_0_19_51)))
 (let ((?x118053 (* l_0_19_50 l_0_19_50)))
 (let ((?x118051 (* l_0_19_49 l_0_19_49)))
 (let ((?x118049 (* l_0_19_48 l_0_19_48)))
 (let ((?x118047 (* l_0_19_47 l_0_19_47)))
 (let ((?x120274 (* l_0_19_303 l_0_19_303)))
 (let ((?x120272 (* l_0_19_302 l_0_19_302)))
 (let ((?x120270 (* l_0_19_301 l_0_19_301)))
 (let ((?x120268 (* l_0_19_300 l_0_19_300)))
 (let ((?x120266 (* l_0_19_299 l_0_19_299)))
 (let ((?x120263 (* 2.0 l_0_19_262)))
 (let ((?x120264 (* ?x120263 l_0_19_266)))
 (let ((?x120260 (* 2.0 l_0_19_261)))
 (let ((?x120261 (* ?x120260 l_0_19_265)))
 (let ((?x120257 (* 2.0 l_0_19_260)))
 (let ((?x120258 (* ?x120257 l_0_19_264)))
 (let ((?x120254 (* 2.0 l_0_19_259)))
 (let ((?x120255 (* ?x120254 l_0_19_263)))
 (let ((?x118025 (* l_0_19_15 l_0_19_15)))
 (let ((?x118023 (* l_0_19_14 l_0_19_14)))
 (let ((?x118010 (* l_0_19_13 l_0_19_13)))
 (let ((?x25125 (+ (+ (+ (* l_0_19_11 l_0_19_11) (* l_0_19_12 l_0_19_12)) ?x118010) ?x118023)))
 (let ((?x120269 (+ (+ (+ (+ (+ (+ (+ ?x25125 ?x118025) ?x120255) ?x120258) ?x120261) ?x120264) ?x120266) ?x120268)))
 (let ((?x120279 (- (- (- (- (+ (+ (+ ?x120269 ?x120270) ?x120272) ?x120274) ?x118047) ?x118049) ?x118051) ?x118053)))
 (= (- ?x120279 ?x118055) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x118141 (* 2.0 l_0_19_51)))
 (let ((?x118142 (* ?x118141 l_0_19_56)))
 (let ((?x118138 (* 2.0 l_0_19_50)))
 (let ((?x118139 (* ?x118138 l_0_19_55)))
 (let ((?x118135 (* 2.0 l_0_19_49)))
 (let ((?x118136 (* ?x118135 l_0_19_54)))
 (let ((?x118132 (* 2.0 l_0_19_48)))
 (let ((?x118133 (* ?x118132 l_0_19_53)))
 (let ((?x118129 (* 2.0 l_0_19_47)))
 (let ((?x118130 (* ?x118129 l_0_19_52)))
 (let ((?x120323 (* 2.0 l_0_19_303)))
 (let ((?x120324 (* ?x120323 l_0_19_308)))
 (let ((?x120320 (* 2.0 l_0_19_302)))
 (let ((?x120321 (* ?x120320 l_0_19_307)))
 (let ((?x120317 (* 2.0 l_0_19_301)))
 (let ((?x120318 (* ?x120317 l_0_19_306)))
 (let ((?x120314 (* 2.0 l_0_19_300)))
 (let ((?x120315 (* ?x120314 l_0_19_305)))
 (let ((?x120311 (* 2.0 l_0_19_299)))
 (let ((?x120312 (* ?x120311 l_0_19_304)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119318 (* ?x119317 l_0_19_302)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119315 (* ?x119314 l_0_19_301)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119312 (* ?x119311 l_0_19_300)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119309 (* ?x119308 l_0_19_299)))
 (let ((?x120263 (* 2.0 l_0_19_262)))
 (let ((?x120305 (* ?x120263 l_0_19_271)))
 (let ((?x120260 (* 2.0 l_0_19_261)))
 (let ((?x120303 (* ?x120260 l_0_19_270)))
 (let ((?x120257 (* 2.0 l_0_19_260)))
 (let ((?x120301 (* ?x120257 l_0_19_269)))
 (let ((?x120254 (* 2.0 l_0_19_259)))
 (let ((?x120299 (* ?x120254 l_0_19_268)))
 (let ((?x117754 (* 2.0 l_0_19_190)))
 (let ((?x117755 (* ?x117754 l_0_19_194)))
 (let ((?x117751 (* 2.0 l_0_19_189)))
 (let ((?x117752 (* ?x117751 l_0_19_193)))
 (let ((?x117748 (* 2.0 l_0_19_188)))
 (let ((?x117749 (* ?x117748 l_0_19_192)))
 (let ((?x117745 (* 2.0 l_0_19_187)))
 (let ((?x117746 (* ?x117745 l_0_19_191)))
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117743 (* ?x117742 l_0_19_158)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x117740 (* ?x117739 l_0_19_157)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x117737 (* ?x117736 l_0_19_156)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x117734 (* ?x117733 l_0_19_155)))
 (let ((?x118096 (* 2.0 l_0_19_15)))
 (let ((?x118097 (* ?x118096 l_0_19_20)))
 (let ((?x118093 (* 2.0 l_0_19_14)))
 (let ((?x118094 (* ?x118093 l_0_19_19)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x118091 (* ?x117492 l_0_19_18)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x118089 (* ?x117110 l_0_19_17)))
 (let ((?x120290 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_16) ?x118089) ?x118091) ?x118094) ?x118097)))
 (let ((?x120297 (- (- (- (+ (+ (+ (+ ?x120290 ?x117734) ?x117737) ?x117740) ?x117743) ?x117746) ?x117749) ?x117752)))
 (let ((?x120308 (- (- (+ (+ (+ (+ (- ?x120297 ?x117755) ?x120299) ?x120301) ?x120303) ?x120305) ?x119309) ?x119312)))
 (let ((?x120325 (+ (+ (+ (+ (+ (- (- ?x120308 ?x119315) ?x119318) ?x120312) ?x120315) ?x120318) ?x120321) ?x120324)))
 (= (- (- (- (- (- ?x120325 ?x118130) ?x118133) ?x118136) ?x118139) ?x118142) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118141 (* 2.0 l_0_19_51)))
 (let ((?x118232 (* ?x118141 l_0_19_62)))
 (let ((?x118138 (* 2.0 l_0_19_50)))
 (let ((?x118230 (* ?x118138 l_0_19_61)))
 (let ((?x118135 (* 2.0 l_0_19_49)))
 (let ((?x118228 (* ?x118135 l_0_19_60)))
 (let ((?x118132 (* 2.0 l_0_19_48)))
 (let ((?x118226 (* ?x118132 l_0_19_59)))
 (let ((?x118129 (* 2.0 l_0_19_47)))
 (let ((?x118224 (* ?x118129 l_0_19_58)))
 (let ((?x120323 (* 2.0 l_0_19_303)))
 (let ((?x120373 (* ?x120323 l_0_19_314)))
 (let ((?x120320 (* 2.0 l_0_19_302)))
 (let ((?x120371 (* ?x120320 l_0_19_313)))
 (let ((?x120317 (* 2.0 l_0_19_301)))
 (let ((?x120369 (* ?x120317 l_0_19_312)))
 (let ((?x120314 (* 2.0 l_0_19_300)))
 (let ((?x120367 (* ?x120314 l_0_19_311)))
 (let ((?x120311 (* 2.0 l_0_19_299)))
 (let ((?x120365 (* ?x120311 l_0_19_310)))
 (let ((?x120263 (* 2.0 l_0_19_262)))
 (let ((?x120363 (* ?x120263 l_0_19_277)))
 (let ((?x120264 (* ?x120263 l_0_19_266)))
 (let ((?x120260 (* 2.0 l_0_19_261)))
 (let ((?x120360 (* ?x120260 l_0_19_276)))
 (let ((?x120261 (* ?x120260 l_0_19_265)))
 (let ((?x120257 (* 2.0 l_0_19_260)))
 (let ((?x120357 (* ?x120257 l_0_19_275)))
 (let ((?x120258 (* ?x120257 l_0_19_264)))
 (let ((?x120254 (* 2.0 l_0_19_259)))
 (let ((?x120354 (* ?x120254 l_0_19_274)))
 (let ((?x120255 (* ?x120254 l_0_19_263)))
 (let ((?x118096 (* 2.0 l_0_19_15)))
 (let ((?x118201 (* ?x118096 l_0_19_26)))
 (let ((?x118093 (* 2.0 l_0_19_14)))
 (let ((?x118197 (* ?x118093 l_0_19_25)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x118195 (* ?x117492 l_0_19_24)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x118193 (* ?x117110 l_0_19_23)))
 (let ((?x120352 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_22) ?x118193) ?x118195) ?x118197) ?x118201)))
 (let ((?x120362 (- (+ (- (+ (- (+ (- ?x120352 ?x120255) ?x120354) ?x120258) ?x120357) ?x120261) ?x120360) ?x120264)))
 (let ((?x120375 (- (+ (+ (+ (+ (+ (+ ?x120362 ?x120363) ?x120365) ?x120367) ?x120369) ?x120371) ?x120373) ?x118224)))
 (= (- (- (- (- ?x120375 ?x118226) ?x118228) ?x118230) ?x118232) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118141 (* 2.0 l_0_19_51)))
 (let ((?x118321 (* ?x118141 l_0_19_69)))
 (let ((?x118138 (* 2.0 l_0_19_50)))
 (let ((?x118319 (* ?x118138 l_0_19_68)))
 (let ((?x118135 (* 2.0 l_0_19_49)))
 (let ((?x118317 (* ?x118135 l_0_19_67)))
 (let ((?x118132 (* 2.0 l_0_19_48)))
 (let ((?x118315 (* ?x118132 l_0_19_66)))
 (let ((?x118129 (* 2.0 l_0_19_47)))
 (let ((?x118313 (* ?x118129 l_0_19_65)))
 (let ((?x120323 (* 2.0 l_0_19_303)))
 (let ((?x120444 (* ?x120323 l_0_19_321)))
 (let ((?x120320 (* 2.0 l_0_19_302)))
 (let ((?x120442 (* ?x120320 l_0_19_320)))
 (let ((?x120317 (* 2.0 l_0_19_301)))
 (let ((?x120440 (* ?x120317 l_0_19_319)))
 (let ((?x120314 (* 2.0 l_0_19_300)))
 (let ((?x120438 (* ?x120314 l_0_19_318)))
 (let ((?x120311 (* 2.0 l_0_19_299)))
 (let ((?x120436 (* ?x120311 l_0_19_317)))
 (let ((?x120263 (* 2.0 l_0_19_262)))
 (let ((?x120434 (* ?x120263 l_0_19_284)))
 (let ((?x120260 (* 2.0 l_0_19_261)))
 (let ((?x120432 (* ?x120260 l_0_19_283)))
 (let ((?x120257 (* 2.0 l_0_19_260)))
 (let ((?x120430 (* ?x120257 l_0_19_282)))
 (let ((?x120254 (* 2.0 l_0_19_259)))
 (let ((?x120428 (* ?x120254 l_0_19_281)))
 (let ((?x118096 (* 2.0 l_0_19_15)))
 (let ((?x118291 (* ?x118096 l_0_19_33)))
 (let ((?x118093 (* 2.0 l_0_19_14)))
 (let ((?x118289 (* ?x118093 l_0_19_32)))
 (let ((?x117492 (* 2.0 l_0_19_13)))
 (let ((?x118287 (* ?x117492 l_0_19_31)))
 (let ((?x117110 (* 2.0 l_0_19_12)))
 (let ((?x118285 (* ?x117110 l_0_19_30)))
 (let ((?x120415 (+ (+ (+ (+ (* (* 2.0 l_0_19_11) l_0_19_29) ?x118285) ?x118287) ?x118289) ?x118291)))
 (let ((?x120421 (- (- ?x120415 (* (* 2.0 l_0_19_223) l_0_19_227)) (* (* 2.0 l_0_19_224) l_0_19_228))))
 (let ((?x120427 (- (- ?x120421 (* (* 2.0 l_0_19_225) l_0_19_229)) (* (* 2.0 l_0_19_226) l_0_19_230))))
 (let ((?x120441 (+ (+ (+ (+ (+ (+ (+ ?x120427 ?x120428) ?x120430) ?x120432) ?x120434) ?x120436) ?x120438) ?x120440)))
 (let ((?x120450 (- (- (- (- (- (+ (+ ?x120441 ?x120442) ?x120444) ?x118313) ?x118315) ?x118317) ?x118319) ?x118321)))
 (= ?x120450 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118430 (* l_0_19_57 l_0_19_57)))
 (let ((?x118428 (* l_0_19_56 l_0_19_56)))
 (let ((?x118426 (* l_0_19_55 l_0_19_55)))
 (let ((?x118424 (* l_0_19_54 l_0_19_54)))
 (let ((?x118422 (* l_0_19_53 l_0_19_53)))
 (let ((?x118420 (* l_0_19_52 l_0_19_52)))
 (let ((?x120522 (* l_0_19_309 l_0_19_309)))
 (let ((?x120520 (* l_0_19_308 l_0_19_308)))
 (let ((?x120518 (* l_0_19_307 l_0_19_307)))
 (let ((?x120516 (* l_0_19_306 l_0_19_306)))
 (let ((?x120514 (* l_0_19_305 l_0_19_305)))
 (let ((?x120512 (* l_0_19_304 l_0_19_304)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119386 (* ?x119317 l_0_19_307)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119384 (* ?x119314 l_0_19_306)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119382 (* ?x119311 l_0_19_305)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119380 (* ?x119308 l_0_19_304)))
 (let ((?x118418 (* l_0_19_21 l_0_19_21)))
 (let ((?x118412 (* l_0_19_20 l_0_19_20)))
 (let ((?x117754 (* 2.0 l_0_19_190)))
 (let ((?x117810 (* ?x117754 l_0_19_199)))
 (let ((?x118402 (* l_0_19_19 l_0_19_19)))
 (let ((?x117751 (* 2.0 l_0_19_189)))
 (let ((?x117808 (* ?x117751 l_0_19_198)))
 (let ((?x117748 (* 2.0 l_0_19_188)))
 (let ((?x117806 (* ?x117748 l_0_19_197)))
 (let ((?x117745 (* 2.0 l_0_19_187)))
 (let ((?x117804 (* ?x117745 l_0_19_196)))
 (let ((?x118400 (* l_0_19_18 l_0_19_18)))
 (let ((?x118398 (* l_0_19_17 l_0_19_17)))
 (let ((?x118434 (* l_0_19_16 l_0_19_16)))
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117785 (* ?x117742 l_0_19_163)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x94554 (* ?x117739 l_0_19_162)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x94551 (* ?x117736 l_0_19_161)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x94534 (* ?x117733 l_0_19_160)))
 (let ((?x120501 (- (+ (+ (+ (+ (+ (+ ?x94534 ?x94551) ?x94554) ?x117785) ?x118434) ?x118398) ?x118400) ?x117804)))
 (let ((?x120508 (- (+ (+ (- (+ (- (- ?x120501 ?x117806) ?x117808) ?x118402) ?x117810) ?x118412) ?x118418) ?x119380)))
 (let ((?x120519 (+ (+ (+ (+ (- (- (- ?x120508 ?x119382) ?x119384) ?x119386) ?x120512) ?x120514) ?x120516) ?x120518)))
 (let ((?x120528 (- (- (- (- (- (+ (+ ?x120519 ?x120520) ?x120522) ?x118420) ?x118422) ?x118424) ?x118426) ?x118428)))
 (= (- ?x120528 ?x118430) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118550 (* 2.0 l_0_19_57)))
 (let ((?x118551 (* ?x118550 l_0_19_63)))
 (let ((?x118547 (* 2.0 l_0_19_56)))
 (let ((?x118548 (* ?x118547 l_0_19_62)))
 (let ((?x118544 (* 2.0 l_0_19_55)))
 (let ((?x118545 (* ?x118544 l_0_19_61)))
 (let ((?x118541 (* 2.0 l_0_19_54)))
 (let ((?x118542 (* ?x118541 l_0_19_60)))
 (let ((?x118538 (* 2.0 l_0_19_53)))
 (let ((?x118539 (* ?x118538 l_0_19_59)))
 (let ((?x118535 (* 2.0 l_0_19_52)))
 (let ((?x118536 (* ?x118535 l_0_19_58)))
 (let ((?x120567 (* 2.0 l_0_19_309)))
 (let ((?x120568 (* ?x120567 l_0_19_315)))
 (let ((?x120564 (* 2.0 l_0_19_308)))
 (let ((?x120565 (* ?x120564 l_0_19_314)))
 (let ((?x120561 (* 2.0 l_0_19_307)))
 (let ((?x120562 (* ?x120561 l_0_19_313)))
 (let ((?x120558 (* 2.0 l_0_19_306)))
 (let ((?x120559 (* ?x120558 l_0_19_312)))
 (let ((?x120555 (* 2.0 l_0_19_305)))
 (let ((?x120556 (* ?x120555 l_0_19_311)))
 (let ((?x120552 (* 2.0 l_0_19_304)))
 (let ((?x120553 (* ?x120552 l_0_19_310)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119442 (* ?x119317 l_0_19_313)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119440 (* ?x119314 l_0_19_312)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119438 (* ?x119311 l_0_19_311)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119436 (* ?x119308 l_0_19_310)))
 (let ((?x120263 (* 2.0 l_0_19_262)))
 (let ((?x120305 (* ?x120263 l_0_19_271)))
 (let ((?x120260 (* 2.0 l_0_19_261)))
 (let ((?x120303 (* ?x120260 l_0_19_270)))
 (let ((?x120257 (* 2.0 l_0_19_260)))
 (let ((?x120301 (* ?x120257 l_0_19_269)))
 (let ((?x120254 (* 2.0 l_0_19_259)))
 (let ((?x120299 (* ?x120254 l_0_19_268)))
 (let ((?x118532 (* 2.0 l_0_19_21)))
 (let ((?x118533 (* ?x118532 l_0_19_27)))
 (let ((?x118523 (* 2.0 l_0_19_20)))
 (let ((?x118524 (* ?x118523 l_0_19_26)))
 (let ((?x117754 (* 2.0 l_0_19_190)))
 (let ((?x117863 (* ?x117754 l_0_19_205)))
 (let ((?x118508 (* 2.0 l_0_19_19)))
 (let ((?x118509 (* ?x118508 l_0_19_25)))
 (let ((?x117751 (* 2.0 l_0_19_189)))
 (let ((?x117861 (* ?x117751 l_0_19_204)))
 (let ((?x117748 (* 2.0 l_0_19_188)))
 (let ((?x117859 (* ?x117748 l_0_19_203)))
 (let ((?x117745 (* 2.0 l_0_19_187)))
 (let ((?x117857 (* ?x117745 l_0_19_202)))
 (let ((?x94106 (* 2.0 l_0_19_18)))
 (let ((?x118506 (* ?x94106 l_0_19_24)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x118504 (* ?x117169 l_0_19_23)))
 (let ((?x117166 (* 2.0 l_0_19_16)))
 (let ((?x118484 (* ?x117166 l_0_19_22)))
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117855 (* ?x117742 l_0_19_169)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x117853 (* ?x117739 l_0_19_168)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x117851 (* ?x117736 l_0_19_167)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x117849 (* ?x117733 l_0_19_166)))
 (let ((?x55108 (- (+ (+ (+ (+ (+ (+ ?x117849 ?x117851) ?x117853) ?x117855) ?x118484) ?x118504) ?x118506) ?x117857)))
 (let ((?x120544 (- (+ (+ (- (+ (- (- ?x55108 ?x117859) ?x117861) ?x118509) ?x117863) ?x118524) ?x118533) ?x120299)))
 (let ((?x120551 (- (- (- (- (- (- (- ?x120544 ?x120301) ?x120303) ?x120305) ?x119436) ?x119438) ?x119440) ?x119442)))
 (let ((?x120570 (- (+ (+ (+ (+ (+ (+ ?x120551 ?x120553) ?x120556) ?x120559) ?x120562) ?x120565) ?x120568) ?x118536)))
 (= (- (- (- (- (- ?x120570 ?x118539) ?x118542) ?x118545) ?x118548) ?x118551) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118550 (* 2.0 l_0_19_57)))
 (let ((?x118701 (* ?x118550 l_0_19_70)))
 (let ((?x118547 (* 2.0 l_0_19_56)))
 (let ((?x118699 (* ?x118547 l_0_19_69)))
 (let ((?x118544 (* 2.0 l_0_19_55)))
 (let ((?x118697 (* ?x118544 l_0_19_68)))
 (let ((?x118541 (* 2.0 l_0_19_54)))
 (let ((?x118695 (* ?x118541 l_0_19_67)))
 (let ((?x118538 (* 2.0 l_0_19_53)))
 (let ((?x118693 (* ?x118538 l_0_19_66)))
 (let ((?x118535 (* 2.0 l_0_19_52)))
 (let ((?x118691 (* ?x118535 l_0_19_65)))
 (let ((?x120567 (* 2.0 l_0_19_309)))
 (let ((?x120624 (* ?x120567 l_0_19_322)))
 (let ((?x120564 (* 2.0 l_0_19_308)))
 (let ((?x120622 (* ?x120564 l_0_19_321)))
 (let ((?x120561 (* 2.0 l_0_19_307)))
 (let ((?x120620 (* ?x120561 l_0_19_320)))
 (let ((?x120558 (* 2.0 l_0_19_306)))
 (let ((?x120618 (* ?x120558 l_0_19_319)))
 (let ((?x120555 (* 2.0 l_0_19_305)))
 (let ((?x120616 (* ?x120555 l_0_19_318)))
 (let ((?x120552 (* 2.0 l_0_19_304)))
 (let ((?x120614 (* ?x120552 l_0_19_317)))
 (let ((?x119317 (* 2.0 l_0_19_298)))
 (let ((?x119525 (* ?x119317 l_0_19_320)))
 (let ((?x119314 (* 2.0 l_0_19_297)))
 (let ((?x119523 (* ?x119314 l_0_19_319)))
 (let ((?x119311 (* 2.0 l_0_19_296)))
 (let ((?x119521 (* ?x119311 l_0_19_318)))
 (let ((?x119308 (* 2.0 l_0_19_295)))
 (let ((?x119519 (* ?x119308 l_0_19_317)))
 (let ((?x118532 (* 2.0 l_0_19_21)))
 (let ((?x118689 (* ?x118532 l_0_19_34)))
 (let ((?x118523 (* 2.0 l_0_19_20)))
 (let ((?x118683 (* ?x118523 l_0_19_33)))
 (let ((?x117754 (* 2.0 l_0_19_190)))
 (let ((?x117963 (* ?x117754 l_0_19_212)))
 (let ((?x118508 (* 2.0 l_0_19_19)))
 (let ((?x118673 (* ?x118508 l_0_19_32)))
 (let ((?x117751 (* 2.0 l_0_19_189)))
 (let ((?x117961 (* ?x117751 l_0_19_211)))
 (let ((?x117748 (* 2.0 l_0_19_188)))
 (let ((?x117959 (* ?x117748 l_0_19_210)))
 (let ((?x117745 (* 2.0 l_0_19_187)))
 (let ((?x117957 (* ?x117745 l_0_19_209)))
 (let ((?x94106 (* 2.0 l_0_19_18)))
 (let ((?x118671 (* ?x94106 l_0_19_31)))
 (let ((?x117169 (* 2.0 l_0_19_17)))
 (let ((?x118669 (* ?x117169 l_0_19_30)))
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117955 (* ?x117742 l_0_19_176)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x117953 (* ?x117739 l_0_19_175)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x117951 (* ?x117736 l_0_19_174)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x117949 (* ?x117733 l_0_19_173)))
 (let ((?x120592 (+ (+ (+ (+ ?x117949 ?x117951) ?x117953) ?x117955) (* (* 2.0 l_0_19_16) l_0_19_29))))
 (let ((?x120599 (- (+ (- (- (- (+ (+ ?x120592 ?x118669) ?x118671) ?x117957) ?x117959) ?x117961) ?x118673) ?x117963)))
 (let ((?x120605 (- (- (+ (+ ?x120599 ?x118683) ?x118689) (* (* 2.0 l_0_19_223) l_0_19_232)) (* (* 2.0 l_0_19_224) l_0_19_233))))
 (let ((?x120609 (- (- ?x120605 (* (* 2.0 l_0_19_225) l_0_19_234)) (* (* 2.0 l_0_19_226) l_0_19_235))))
 (let ((?x120619 (+ (+ (+ (- (- (- (- ?x120609 ?x119519) ?x119521) ?x119523) ?x119525) ?x120614) ?x120616) ?x120618)))
 (let ((?x120629 (- (- (- (- (+ (+ (+ ?x120619 ?x120620) ?x120622) ?x120624) ?x118691) ?x118693) ?x118695) ?x118697)))
 (= (- (- ?x120629 ?x118699) ?x118701) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x118814 (* l_0_19_64 l_0_19_64)))
 (let ((?x118812 (* l_0_19_63 l_0_19_63)))
 (let ((?x118810 (* l_0_19_62 l_0_19_62)))
 (let ((?x118808 (* l_0_19_61 l_0_19_61)))
 (let ((?x118806 (* l_0_19_60 l_0_19_60)))
 (let ((?x118804 (* l_0_19_59 l_0_19_59)))
 (let ((?x118802 (* l_0_19_58 l_0_19_58)))
 (let ((?x120680 (* l_0_19_316 l_0_19_316)))
 (let ((?x120678 (* l_0_19_315 l_0_19_315)))
 (let ((?x120676 (* l_0_19_314 l_0_19_314)))
 (let ((?x120674 (* l_0_19_313 l_0_19_313)))
 (let ((?x120672 (* l_0_19_312 l_0_19_312)))
 (let ((?x120670 (* l_0_19_311 l_0_19_311)))
 (let ((?x120668 (* l_0_19_310 l_0_19_310)))
 (let ((?x118800 (* l_0_19_28 l_0_19_28)))
 (let ((?x118798 (* l_0_19_27 l_0_19_27)))
 (let ((?x120263 (* 2.0 l_0_19_262)))
 (let ((?x120363 (* ?x120263 l_0_19_277)))
 (let ((?x120260 (* 2.0 l_0_19_261)))
 (let ((?x120360 (* ?x120260 l_0_19_276)))
 (let ((?x120257 (* 2.0 l_0_19_260)))
 (let ((?x120357 (* ?x120257 l_0_19_275)))
 (let ((?x118796 (* l_0_19_26 l_0_19_26)))
 (let ((?x120254 (* 2.0 l_0_19_259)))
 (let ((?x120354 (* ?x120254 l_0_19_274)))
 (let ((?x118794 (* l_0_19_25 l_0_19_25)))
 (let ((?x118792 (* l_0_19_24 l_0_19_24)))
 (let ((?x97963 (+ (+ (+ (* l_0_19_22 l_0_19_22) (* l_0_19_23 l_0_19_23)) ?x118792) ?x118794)))
 (let ((?x120667 (+ (+ (- (- (- (+ (- ?x97963 ?x120354) ?x118796) ?x120357) ?x120360) ?x120363) ?x118798) ?x118800)))
 (let ((?x120681 (+ (+ (+ (+ (+ (+ (+ ?x120667 ?x120668) ?x120670) ?x120672) ?x120674) ?x120676) ?x120678) ?x120680)))
 (let ((?x120688 (- (- (- (- (- (- (- ?x120681 ?x118802) ?x118804) ?x118806) ?x118808) ?x118810) ?x118812) ?x118814)))
 (= ?x120688 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x118962 (* (* 2.0 l_0_19_64) l_0_19_71)))
 (let ((?x118959 (* (* 2.0 l_0_19_63) l_0_19_70)))
 (let ((?x118956 (* (* 2.0 l_0_19_62) l_0_19_69)))
 (let ((?x118953 (* (* 2.0 l_0_19_61) l_0_19_68)))
 (let ((?x118950 (* (* 2.0 l_0_19_60) l_0_19_67)))
 (let ((?x118947 (* (* 2.0 l_0_19_59) l_0_19_66)))
 (let ((?x118944 (* (* 2.0 l_0_19_58) l_0_19_65)))
 (let ((?x120728 (* (* 2.0 l_0_19_316) l_0_19_323)))
 (let ((?x120725 (* (* 2.0 l_0_19_315) l_0_19_322)))
 (let ((?x120722 (* (* 2.0 l_0_19_314) l_0_19_321)))
 (let ((?x120719 (* (* 2.0 l_0_19_313) l_0_19_320)))
 (let ((?x120716 (* (* 2.0 l_0_19_312) l_0_19_319)))
 (let ((?x120713 (* (* 2.0 l_0_19_311) l_0_19_318)))
 (let ((?x120710 (* (* 2.0 l_0_19_310) l_0_19_317)))
 (let ((?x118941 (* (* 2.0 l_0_19_28) l_0_19_35)))
 (let ((?x118938 (* (* 2.0 l_0_19_27) l_0_19_34)))
 (let ((?x120263 (* 2.0 l_0_19_262)))
 (let ((?x120434 (* ?x120263 l_0_19_284)))
 (let ((?x120260 (* 2.0 l_0_19_261)))
 (let ((?x120432 (* ?x120260 l_0_19_283)))
 (let ((?x120257 (* 2.0 l_0_19_260)))
 (let ((?x120430 (* ?x120257 l_0_19_282)))
 (let ((?x118935 (* (* 2.0 l_0_19_26) l_0_19_33)))
 (let ((?x120254 (* 2.0 l_0_19_259)))
 (let ((?x120428 (* ?x120254 l_0_19_281)))
 (let ((?x118932 (* (* 2.0 l_0_19_25) l_0_19_32)))
 (let ((?x117601 (* 2.0 l_0_19_24)))
 (let ((?x118929 (* ?x117601 l_0_19_31)))
 (let ((?x117276 (* 2.0 l_0_19_23)))
 (let ((?x118927 (* ?x117276 l_0_19_30)))
 (let ((?x117596 (* 2.0 l_0_19_22)))
 (let ((?x118925 (* ?x117596 l_0_19_29)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117019 (* ?x116962 l_0_19_152)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x97139 (* ?x117113 l_0_19_151)))
 (let ((?x26444 (+ (* (* 1.0 l_0_19_110) l_0_19_115) (* (* 1.0 l_0_19_111) l_0_19_116))))
 (let ((?x120692 (- (+ (- (- ?x26444 ?x97139) ?x117019) ?x118925) (* (* 2.0 l_0_19_223) l_0_19_238))))
 (let ((?x120696 (- (- ?x120692 (* (* 2.0 l_0_19_224) l_0_19_239)) (* (* 2.0 l_0_19_225) l_0_19_240))))
 (let ((?x120701 (+ (+ (+ (- ?x120696 (* (* 2.0 l_0_19_226) l_0_19_241)) ?x118927) ?x118929) ?x118932)))
 (let ((?x120708 (+ (+ (- (- (- (+ (- ?x120701 ?x120428) ?x118935) ?x120430) ?x120432) ?x120434) ?x118938) ?x118941)))
 (let ((?x120729 (+ (+ (+ (+ (+ (+ (+ ?x120708 ?x120710) ?x120713) ?x120716) ?x120719) ?x120722) ?x120725) ?x120728)))
 (let ((?x120736 (- (- (- (- (- (- (- ?x120729 ?x118944) ?x118947) ?x118950) ?x118953) ?x118956) ?x118959) ?x118962)))
 (let ((?x120740 (- (- ?x120736 (* (* 1.0 l_0_19_74) l_0_19_79)) (* (* 1.0 l_0_19_75) l_0_19_80))))
 (= ?x120740 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x119100 (* l_0_19_72 l_0_19_72)))
 (let ((?x119098 (* l_0_19_71 l_0_19_71)))
 (let ((?x119096 (* l_0_19_70 l_0_19_70)))
 (let ((?x119094 (* l_0_19_69 l_0_19_69)))
 (let ((?x119092 (* l_0_19_68 l_0_19_68)))
 (let ((?x119090 (* l_0_19_67 l_0_19_67)))
 (let ((?x119088 (* l_0_19_66 l_0_19_66)))
 (let ((?x119086 (* l_0_19_65 l_0_19_65)))
 (let ((?x119084 (* l_0_19_36 l_0_19_36)))
 (let ((?x119082 (* l_0_19_35 l_0_19_35)))
 (let ((?x119080 (* l_0_19_34 l_0_19_34)))
 (let ((?x119078 (* l_0_19_33 l_0_19_33)))
 (let ((?x120818 (* l_0_19_324 l_0_19_324)))
 (let ((?x120816 (* l_0_19_323 l_0_19_323)))
 (let ((?x120814 (* l_0_19_322 l_0_19_322)))
 (let ((?x120812 (* l_0_19_321 l_0_19_321)))
 (let ((?x120810 (* l_0_19_320 l_0_19_320)))
 (let ((?x119076 (* l_0_19_32 l_0_19_32)))
 (let ((?x120807 (* l_0_19_319 l_0_19_319)))
 (let ((?x120805 (* l_0_19_318 l_0_19_318)))
 (let ((?x120803 (* l_0_19_317 l_0_19_317)))
 (let ((?x119074 (* l_0_19_31 l_0_19_31)))
 (let ((?x119072 (* l_0_19_30 l_0_19_30)))
 (let ((?x119070 (* l_0_19_29 l_0_19_29)))
 (let ((?x120795 (- (* (* (- 2.0) l_0_19_223) l_0_19_245) (* (* 2.0 l_0_19_224) l_0_19_246))))
 (let ((?x120799 (- (- ?x120795 (* (* 2.0 l_0_19_225) l_0_19_247)) (* (* 2.0 l_0_19_226) l_0_19_248))))
 (let ((?x120809 (+ (+ (+ (+ (+ (+ (+ ?x120799 ?x119070) ?x119072) ?x119074) ?x120803) ?x120805) ?x120807) ?x119076)))
 (let ((?x120821 (+ (+ (+ (+ (+ (+ (+ ?x120809 ?x120810) ?x120812) ?x120814) ?x120816) ?x120818) ?x119078) ?x119080)))
 (let ((?x120828 (- (- (- (- (- (+ (+ ?x120821 ?x119082) ?x119084) ?x119086) ?x119088) ?x119090) ?x119092) ?x119094)))
 (= (- (- (- ?x120828 ?x119096) ?x119098) ?x119100) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x93559 (* l_0_19_145 l_0_19_145)))
 (let ((?x55555 (* l_0_19_109 l_0_19_109)))
 (let ((?x98175 (* (/ 1.0 2.0) ?x55555)))
 (= (- (- ?x98175 ?x93559) (* (* (/ 1.0 2.0) l_0_19_73) l_0_19_73)) 0.0)))))
(assert
 (let ((?x120728 (* (* 2.0 l_0_19_316) l_0_19_323)))
 (let ((?x120725 (* (* 2.0 l_0_19_315) l_0_19_322)))
 (let ((?x120722 (* (* 2.0 l_0_19_314) l_0_19_321)))
 (let ((?x120719 (* (* 2.0 l_0_19_313) l_0_19_320)))
 (let ((?x120716 (* (* 2.0 l_0_19_312) l_0_19_319)))
 (let ((?x120713 (* (* 2.0 l_0_19_311) l_0_19_318)))
 (let ((?x120710 (* (* 2.0 l_0_19_310) l_0_19_317)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x120860 (* ?x119303 l_0_19_281)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x52537 (* ?x93488 l_0_19_146)))
 (let ((?x55425 (+ (* (* 2.0 l_0_19_100) l_0_19_107) (* (* 2.0 l_0_19_101) l_0_19_94))))
 (let ((?x98095 (+ (+ ?x55425 (* (* 2.0 l_0_19_102) l_0_19_95)) (* (* 2.0 l_0_19_103) l_0_19_96))))
 (let ((?x98105 (+ (+ ?x98095 (* (* 2.0 l_0_19_104) l_0_19_97)) (* (* 2.0 l_0_19_105) l_0_19_98))))
 (let ((?x26764 (+ (+ ?x98105 (* (* 2.0 l_0_19_106) l_0_19_99)) (* (* 1.0 l_0_19_109) l_0_19_110))))
 (let ((?x77967 (- (- ?x26764 (* (* 2.0 l_0_19_130) l_0_19_137)) (* (* 2.0 l_0_19_131) l_0_19_138))))
 (let ((?x120847 (- (- ?x77967 (* (* 2.0 l_0_19_132) l_0_19_139)) (* (* 2.0 l_0_19_133) l_0_19_140))))
 (let ((?x120853 (- (- ?x120847 (* (* 2.0 l_0_19_134) l_0_19_141)) (* (* 2.0 l_0_19_135) l_0_19_142))))
 (let ((?x120859 (- (- (- ?x120853 (* (* 2.0 l_0_19_136) l_0_19_143)) ?x52537) (* (* 2.0 l_0_19_217) l_0_19_238))))
 (let ((?x120867 (+ (+ (+ (+ (+ (+ (- ?x120859 ?x120860) ?x120710) ?x120713) ?x120716) ?x120719) ?x120722) ?x120725)))
 (= (- (+ ?x120867 ?x120728) (* (* 1.0 l_0_19_73) l_0_19_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116738 (* ?x93488 l_0_19_151)))
 (let ((?x98281 (- (- (* (* 1.0 l_0_19_109) l_0_19_115) ?x116738) (* (* 1.0 l_0_19_73) l_0_19_79))))
 (= ?x98281 0.0)))))
(assert
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116761 (* ?x93488 l_0_19_155)))
 (let ((?x120918 (- (- (* (* 1.0 l_0_19_109) l_0_19_119) ?x116761) (* (* 1.0 l_0_19_73) l_0_19_83))))
 (= ?x120918 0.0)))))
(assert
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116784 (* ?x93488 l_0_19_160)))
 (let ((?x120933 (- (- (* (* 1.0 l_0_19_109) l_0_19_124) ?x116784) (* (* 1.0 l_0_19_73) l_0_19_88))))
 (= ?x120933 0.0)))))
(assert
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116813 (* ?x93488 l_0_19_166)))
 (let ((?x120945 (- (- (* (* 1.0 l_0_19_109) l_0_19_130) ?x116813) (* (* 1.0 l_0_19_73) l_0_19_94))))
 (= ?x120945 0.0)))))
(assert
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116848 (* ?x93488 l_0_19_173)))
 (let ((?x120956 (+ (* (* (- 1.0) l_0_19_101) l_0_19_73) (* (* 1.0 l_0_19_109) l_0_19_137))))
 (= (- ?x120956 ?x116848) 0.0)))))
(assert
 (let ((?x121022 (* (* 2.0 l_0_19_280) l_0_19_287)))
 (let ((?x121019 (* (* 2.0 l_0_19_279) l_0_19_286)))
 (let ((?x121016 (* (* 2.0 l_0_19_278) l_0_19_285)))
 (let ((?x121013 (* (* 2.0 l_0_19_277) l_0_19_284)))
 (let ((?x121010 (* (* 2.0 l_0_19_276) l_0_19_283)))
 (let ((?x121007 (* (* 2.0 l_0_19_275) l_0_19_282)))
 (let ((?x121004 (* (* 2.0 l_0_19_274) l_0_19_281)))
 (let ((?x121000 (* 2.0 l_0_19_267)))
 (let ((?x121001 (* ?x121000 l_0_19_285)))
 (let ((?x120997 (* 2.0 l_0_19_266)))
 (let ((?x120998 (* ?x120997 l_0_19_284)))
 (let ((?x120994 (* 2.0 l_0_19_265)))
 (let ((?x120995 (* ?x120994 l_0_19_283)))
 (let ((?x120991 (* 2.0 l_0_19_264)))
 (let ((?x120992 (* ?x120991 l_0_19_282)))
 (let ((?x120988 (* 2.0 l_0_19_263)))
 (let ((?x120989 (* ?x120988 l_0_19_281)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117116 (* ?x116962 l_0_19_156)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x117114 (* ?x117113 l_0_19_155)))
 (let ((?x120970 (+ (* (* 1.0 l_0_19_110) l_0_19_119) (* (* 1.0 l_0_19_111) l_0_19_120))))
 (let ((?x120978 (- (- (- (- ?x120970 ?x117114) ?x117116) (* (* 2.0 l_0_19_227) l_0_19_238)) (* (* 2.0 l_0_19_228) l_0_19_239))))
 (let ((?x120984 (- (- ?x120978 (* (* 2.0 l_0_19_229) l_0_19_240)) (* (* 2.0 l_0_19_230) l_0_19_241))))
 (let ((?x120996 (- (- (- (- ?x120984 (* (* 2.0 l_0_19_231) l_0_19_242)) ?x120989) ?x120992) ?x120995)))
 (let ((?x121017 (+ (+ (+ (+ (+ (- (- ?x120996 ?x120998) ?x121001) ?x121004) ?x121007) ?x121010) ?x121013) ?x121016)))
 (let ((?x121027 (- (- (+ (+ ?x121017 ?x121019) ?x121022) (* (* 1.0 l_0_19_74) l_0_19_83)) (* (* 1.0 l_0_19_75) l_0_19_84))))
 (= ?x121027 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x120728 (* (* 2.0 l_0_19_316) l_0_19_323)))
 (let ((?x120725 (* (* 2.0 l_0_19_315) l_0_19_322)))
 (let ((?x120722 (* (* 2.0 l_0_19_314) l_0_19_321)))
 (let ((?x120719 (* (* 2.0 l_0_19_313) l_0_19_320)))
 (let ((?x120716 (* (* 2.0 l_0_19_312) l_0_19_319)))
 (let ((?x120713 (* (* 2.0 l_0_19_311) l_0_19_318)))
 (let ((?x120710 (* (* 2.0 l_0_19_310) l_0_19_317)))
 (let ((?x121150 (* 2.0 l_0_19_273)))
 (let ((?x121151 (* ?x121150 l_0_19_286)))
 (let ((?x121147 (* 2.0 l_0_19_272)))
 (let ((?x121148 (* ?x121147 l_0_19_285)))
 (let ((?x121144 (* 2.0 l_0_19_271)))
 (let ((?x121145 (* ?x121144 l_0_19_284)))
 (let ((?x121141 (* 2.0 l_0_19_270)))
 (let ((?x121142 (* ?x121141 l_0_19_283)))
 (let ((?x121138 (* 2.0 l_0_19_269)))
 (let ((?x121139 (* ?x121138 l_0_19_282)))
 (let ((?x121135 (* 2.0 l_0_19_268)))
 (let ((?x121136 (* ?x121135 l_0_19_281)))
 (let ((?x118923 (* (* 2.0 l_0_19_208) l_0_19_215)))
 (let ((?x118920 (* (* 2.0 l_0_19_207) l_0_19_214)))
 (let ((?x118917 (* (* 2.0 l_0_19_206) l_0_19_213)))
 (let ((?x118914 (* (* 2.0 l_0_19_205) l_0_19_212)))
 (let ((?x118911 (* (* 2.0 l_0_19_204) l_0_19_211)))
 (let ((?x118908 (* (* 2.0 l_0_19_203) l_0_19_210)))
 (let ((?x118905 (* (* 2.0 l_0_19_202) l_0_19_209)))
 (let ((?x118902 (* (* 2.0 l_0_19_172) l_0_19_179)))
 (let ((?x118899 (* (* 2.0 l_0_19_171) l_0_19_178)))
 (let ((?x118896 (* (* 2.0 l_0_19_170) l_0_19_177)))
 (let ((?x118893 (* (* 2.0 l_0_19_169) l_0_19_176)))
 (let ((?x118890 (* (* 2.0 l_0_19_168) l_0_19_175)))
 (let ((?x118887 (* (* 2.0 l_0_19_167) l_0_19_174)))
 (let ((?x118884 (* (* 2.0 l_0_19_166) l_0_19_173)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x93815 (* ?x116962 l_0_19_161)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x121100 (* ?x117113 l_0_19_160)))
 (let ((?x121099 (+ (* (* 1.0 l_0_19_110) l_0_19_124) (* (* 1.0 l_0_19_111) l_0_19_125))))
 (let ((?x121107 (+ (+ (+ (+ (+ (- (- ?x121099 ?x121100) ?x93815) ?x118884) ?x118887) ?x118890) ?x118893) ?x118896)))
 (let ((?x121114 (- (- (- (- (- (+ (+ ?x121107 ?x118899) ?x118902) ?x118905) ?x118908) ?x118911) ?x118914) ?x118917)))
 (let ((?x121122 (- (- (- (- ?x121114 ?x118920) ?x118923) (* (* 2.0 l_0_19_232) l_0_19_238)) (* (* 2.0 l_0_19_233) l_0_19_239))))
 (let ((?x121128 (- (- ?x121122 (* (* 2.0 l_0_19_234) l_0_19_240)) (* (* 2.0 l_0_19_235) l_0_19_241))))
 (let ((?x121134 (- (- ?x121128 (* (* 2.0 l_0_19_236) l_0_19_242)) (* (* 2.0 l_0_19_237) l_0_19_243))))
 (let ((?x121153 (- (- (- (- (- (- (- ?x121134 ?x121136) ?x121139) ?x121142) ?x121145) ?x121148) ?x121151) ?x120710)))
 (let ((?x121161 (- (- (- (- (- (- (- ?x121153 ?x120713) ?x120716) ?x120719) ?x120722) ?x120725) ?x120728) (* (* 1.0 l_0_19_74) l_0_19_88))))
 (= (- ?x121161 (* (* 1.0 l_0_19_75) l_0_19_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x121022 (* (* 2.0 l_0_19_280) l_0_19_287)))
 (let ((?x121019 (* (* 2.0 l_0_19_279) l_0_19_286)))
 (let ((?x121016 (* (* 2.0 l_0_19_278) l_0_19_285)))
 (let ((?x121013 (* (* 2.0 l_0_19_277) l_0_19_284)))
 (let ((?x121010 (* (* 2.0 l_0_19_276) l_0_19_283)))
 (let ((?x121007 (* (* 2.0 l_0_19_275) l_0_19_282)))
 (let ((?x121004 (* (* 2.0 l_0_19_274) l_0_19_281)))
 (let ((?x121207 (* l_0_19_244 l_0_19_244)))
 (let ((?x121205 (* l_0_19_243 l_0_19_243)))
 (let ((?x121203 (* l_0_19_242 l_0_19_242)))
 (let ((?x121201 (* l_0_19_241 l_0_19_241)))
 (let ((?x121199 (* l_0_19_240 l_0_19_240)))
 (let ((?x121197 (* l_0_19_239 l_0_19_239)))
 (let ((?x121195 (* l_0_19_238 l_0_19_238)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117262 (* ?x116962 l_0_19_167)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x117259 (* ?x117113 l_0_19_166)))
 (let ((?x121192 (+ (* (* 1.0 l_0_19_110) l_0_19_130) (* (* 1.0 l_0_19_111) l_0_19_131))))
 (let ((?x121204 (- (- (- (- (- (- (- ?x121192 ?x117259) ?x117262) ?x121195) ?x121197) ?x121199) ?x121201) ?x121203)))
 (let ((?x121213 (- (- (- (- (- (- (- ?x121204 ?x121205) ?x121207) ?x121004) ?x121007) ?x121010) ?x121013) ?x121016)))
 (let ((?x121219 (- (- (- (- ?x121213 ?x121019) ?x121022) (* (* 1.0 l_0_19_74) l_0_19_94)) (* (* 1.0 l_0_19_75) l_0_19_95))))
 (= ?x121219 0.0))))))))))))))))))))))))
(assert
 (let ((?x121272 (* l_0_19_288 l_0_19_288)))
 (let ((?x121270 (* l_0_19_287 l_0_19_287)))
 (let ((?x121268 (* l_0_19_286 l_0_19_286)))
 (let ((?x121266 (* l_0_19_285 l_0_19_285)))
 (let ((?x121264 (* l_0_19_284 l_0_19_284)))
 (let ((?x121262 (* l_0_19_283 l_0_19_283)))
 (let ((?x121260 (* l_0_19_282 l_0_19_282)))
 (let ((?x121258 (* l_0_19_281 l_0_19_281)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117350 (* ?x116962 l_0_19_174)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x98527 (* ?x117113 l_0_19_173)))
 (let ((?x98538 (- (* (* (- 1.0) l_0_19_101) l_0_19_74) (* (* 1.0 l_0_19_102) l_0_19_75))))
 (let ((?x98531 (+ (+ ?x98538 (* (* 1.0 l_0_19_110) l_0_19_137)) (* (* 1.0 l_0_19_111) l_0_19_138))))
 (let ((?x121242 (- (- (- (- ?x98531 ?x98527) ?x117350) (* (* 2.0 l_0_19_238) l_0_19_245)) (* (* 2.0 l_0_19_239) l_0_19_246))))
 (let ((?x121248 (- (- ?x121242 (* (* 2.0 l_0_19_240) l_0_19_247)) (* (* 2.0 l_0_19_241) l_0_19_248))))
 (let ((?x121254 (- (- ?x121248 (* (* 2.0 l_0_19_242) l_0_19_249)) (* (* 2.0 l_0_19_243) l_0_19_250))))
 (let ((?x121263 (- (- (- (- ?x121254 (* (* 2.0 l_0_19_244) l_0_19_251)) ?x121258) ?x121260) ?x121262)))
 (= (- (- (- (- (- ?x121263 ?x121264) ?x121266) ?x121268) ?x121270) ?x121272) 0.0))))))))))))))))))))
(assert
 (let ((?x94382 (* l_0_19_154 l_0_19_154)))
 (let ((?x94393 (* l_0_19_153 l_0_19_153)))
 (let ((?x94399 (* l_0_19_152 l_0_19_152)))
 (let ((?x52821 (* l_0_19_151 l_0_19_151)))
 (let ((?x121300 (+ (* (/ 1.0 2.0) (* l_0_19_115 l_0_19_115)) (* (/ 1.0 2.0) (* l_0_19_116 l_0_19_116)))))
 (let ((?x121304 (+ (+ ?x121300 (* (/ 1.0 2.0) (* l_0_19_117 l_0_19_117))) (* (/ 1.0 2.0) (* l_0_19_118 l_0_19_118)))))
 (let ((?x121311 (- (- (- (- (- ?x121304 ?x52821) ?x94399) ?x94393) ?x94382) (* (* (/ 1.0 2.0) l_0_19_79) l_0_19_79))))
 (let ((?x121317 (- (- ?x121311 (* (* (/ 1.0 2.0) l_0_19_80) l_0_19_80)) (* (* (/ 1.0 2.0) l_0_19_81) l_0_19_81))))
 (= (- ?x121317 (* (* (/ 1.0 2.0) l_0_19_82) l_0_19_82)) 0.0))))))))))
(assert
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117743 (* ?x117742 l_0_19_158)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x117740 (* ?x117739 l_0_19_157)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x117737 (* ?x117736 l_0_19_156)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x117734 (* ?x117733 l_0_19_155)))
 (let ((?x121327 (+ (* (* 1.0 l_0_19_115) l_0_19_119) (* (* 1.0 l_0_19_116) l_0_19_120))))
 (let ((?x121333 (+ (+ ?x121327 (* (* 1.0 l_0_19_117) l_0_19_121)) (* (* 1.0 l_0_19_118) l_0_19_122))))
 (let ((?x121340 (- (- (- (- (- ?x121333 ?x117734) ?x117737) ?x117740) ?x117743) (* (* 1.0 l_0_19_79) l_0_19_83))))
 (let ((?x121346 (- (- ?x121340 (* (* 1.0 l_0_19_80) l_0_19_84)) (* (* 1.0 l_0_19_81) l_0_19_85))))
 (= (- ?x121346 (* (* 1.0 l_0_19_82) l_0_19_86)) 0.0))))))))))))))
(assert
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117785 (* ?x117742 l_0_19_163)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x94554 (* ?x117739 l_0_19_162)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x94551 (* ?x117736 l_0_19_161)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x94534 (* ?x117733 l_0_19_160)))
 (let ((?x121361 (+ (* (* 1.0 l_0_19_115) l_0_19_124) (* (* 1.0 l_0_19_116) l_0_19_125))))
 (let ((?x121365 (+ (+ ?x121361 (* (* 1.0 l_0_19_117) l_0_19_126)) (* (* 1.0 l_0_19_118) l_0_19_127))))
 (let ((?x121371 (- (- (- (- (- ?x121365 ?x94534) ?x94551) ?x94554) ?x117785) (* (* 1.0 l_0_19_79) l_0_19_88))))
 (let ((?x121375 (- (- ?x121371 (* (* 1.0 l_0_19_80) l_0_19_89)) (* (* 1.0 l_0_19_81) l_0_19_90))))
 (= (- ?x121375 (* (* 1.0 l_0_19_82) l_0_19_91)) 0.0))))))))))))))
(assert
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117855 (* ?x117742 l_0_19_169)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x117853 (* ?x117739 l_0_19_168)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x117851 (* ?x117736 l_0_19_167)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x117849 (* ?x117733 l_0_19_166)))
 (let ((?x121391 (+ (* (* 1.0 l_0_19_115) l_0_19_130) (* (* 1.0 l_0_19_116) l_0_19_131))))
 (let ((?x121395 (+ (+ ?x121391 (* (* 1.0 l_0_19_117) l_0_19_132)) (* (* 1.0 l_0_19_118) l_0_19_133))))
 (let ((?x121401 (- (- (- (- (- ?x121395 ?x117849) ?x117851) ?x117853) ?x117855) (* (* 1.0 l_0_19_79) l_0_19_94))))
 (let ((?x121405 (- (- ?x121401 (* (* 1.0 l_0_19_80) l_0_19_95)) (* (* 1.0 l_0_19_81) l_0_19_96))))
 (= (- ?x121405 (* (* 1.0 l_0_19_82) l_0_19_97)) 0.0))))))))))))))
(assert
 (let ((?x117742 (* 2.0 l_0_19_154)))
 (let ((?x117955 (* ?x117742 l_0_19_176)))
 (let ((?x117739 (* 2.0 l_0_19_153)))
 (let ((?x117953 (* ?x117739 l_0_19_175)))
 (let ((?x117736 (* 2.0 l_0_19_152)))
 (let ((?x117951 (* ?x117736 l_0_19_174)))
 (let ((?x117733 (* 2.0 l_0_19_151)))
 (let ((?x117949 (* ?x117733 l_0_19_173)))
 (let ((?x121430 (- (* (* (- 1.0) l_0_19_101) l_0_19_79) (* (* 1.0 l_0_19_102) l_0_19_80))))
 (let ((?x121435 (- (- ?x121430 (* (* 1.0 l_0_19_103) l_0_19_81)) (* (* 1.0 l_0_19_104) l_0_19_82))))
 (let ((?x121439 (+ (+ ?x121435 (* (* 1.0 l_0_19_115) l_0_19_137)) (* (* 1.0 l_0_19_116) l_0_19_138))))
 (let ((?x121443 (+ (+ ?x121439 (* (* 1.0 l_0_19_117) l_0_19_139)) (* (* 1.0 l_0_19_118) l_0_19_140))))
 (= (- (- (- (- ?x121443 ?x117949) ?x117951) ?x117953) ?x117955) 0.0))))))))))))))
(assert
 (let ((?x118035 (* l_0_19_159 l_0_19_159)))
 (let ((?x118033 (* l_0_19_158 l_0_19_158)))
 (let ((?x118031 (* l_0_19_157 l_0_19_157)))
 (let ((?x118029 (* l_0_19_156 l_0_19_156)))
 (let ((?x118027 (* l_0_19_155 l_0_19_155)))
 (let ((?x121460 (+ (* (/ 1.0 2.0) (* l_0_19_119 l_0_19_119)) (* (/ 1.0 2.0) (* l_0_19_120 l_0_19_120)))))
 (let ((?x121466 (+ (+ ?x121460 (* (/ 1.0 2.0) (* l_0_19_121 l_0_19_121))) (* (/ 1.0 2.0) (* l_0_19_122 l_0_19_122)))))
 (let ((?x121472 (- (- (- (+ ?x121466 (* (/ 1.0 2.0) (* l_0_19_123 l_0_19_123))) ?x118027) ?x118029) ?x118031)))
 (let ((?x121480 (- (- (- (- ?x121472 ?x118033) ?x118035) (* (* (/ 1.0 2.0) l_0_19_83) l_0_19_83)) (* (* (/ 1.0 2.0) l_0_19_84) l_0_19_84))))
 (let ((?x121486 (- (- ?x121480 (* (* (/ 1.0 2.0) l_0_19_85) l_0_19_85)) (* (* (/ 1.0 2.0) l_0_19_86) l_0_19_86))))
 (= (- ?x121486 (* (* (/ 1.0 2.0) l_0_19_87) l_0_19_87)) 0.0))))))))))))
(assert
 (let ((?x118111 (* 2.0 l_0_19_159)))
 (let ((?x118112 (* ?x118111 l_0_19_164)))
 (let ((?x118108 (* 2.0 l_0_19_158)))
 (let ((?x118109 (* ?x118108 l_0_19_163)))
 (let ((?x118105 (* 2.0 l_0_19_157)))
 (let ((?x118106 (* ?x118105 l_0_19_162)))
 (let ((?x118102 (* 2.0 l_0_19_156)))
 (let ((?x118103 (* ?x118102 l_0_19_161)))
 (let ((?x118099 (* 2.0 l_0_19_155)))
 (let ((?x118100 (* ?x118099 l_0_19_160)))
 (let ((?x121498 (+ (* (* 1.0 l_0_19_119) l_0_19_124) (* (* 1.0 l_0_19_120) l_0_19_125))))
 (let ((?x121504 (+ (+ ?x121498 (* (* 1.0 l_0_19_121) l_0_19_126)) (* (* 1.0 l_0_19_122) l_0_19_127))))
 (let ((?x121510 (- (- (- (+ ?x121504 (* (* 1.0 l_0_19_123) l_0_19_128)) ?x118100) ?x118103) ?x118106)))
 (let ((?x121518 (- (- (- (- ?x121510 ?x118109) ?x118112) (* (* 1.0 l_0_19_83) l_0_19_88)) (* (* 1.0 l_0_19_84) l_0_19_89))))
 (let ((?x121524 (- (- ?x121518 (* (* 1.0 l_0_19_85) l_0_19_90)) (* (* 1.0 l_0_19_86) l_0_19_91))))
 (= (- ?x121524 (* (* 1.0 l_0_19_87) l_0_19_92)) 0.0)))))))))))))))))
(assert
 (let ((?x118111 (* 2.0 l_0_19_159)))
 (let ((?x118212 (* ?x118111 l_0_19_170)))
 (let ((?x118108 (* 2.0 l_0_19_158)))
 (let ((?x118210 (* ?x118108 l_0_19_169)))
 (let ((?x118105 (* 2.0 l_0_19_157)))
 (let ((?x118208 (* ?x118105 l_0_19_168)))
 (let ((?x118102 (* 2.0 l_0_19_156)))
 (let ((?x118206 (* ?x118102 l_0_19_167)))
 (let ((?x118099 (* 2.0 l_0_19_155)))
 (let ((?x118204 (* ?x118099 l_0_19_166)))
 (let ((?x121545 (+ (* (* 1.0 l_0_19_119) l_0_19_130) (* (* 1.0 l_0_19_120) l_0_19_131))))
 (let ((?x121549 (+ (+ ?x121545 (* (* 1.0 l_0_19_121) l_0_19_132)) (* (* 1.0 l_0_19_122) l_0_19_133))))
 (let ((?x121554 (- (- (- (+ ?x121549 (* (* 1.0 l_0_19_123) l_0_19_134)) ?x118204) ?x118206) ?x118208)))
 (let ((?x121560 (- (- (- (- ?x121554 ?x118210) ?x118212) (* (* 1.0 l_0_19_83) l_0_19_94)) (* (* 1.0 l_0_19_84) l_0_19_95))))
 (let ((?x121564 (- (- ?x121560 (* (* 1.0 l_0_19_85) l_0_19_96)) (* (* 1.0 l_0_19_86) l_0_19_97))))
 (= (- ?x121564 (* (* 1.0 l_0_19_87) l_0_19_98)) 0.0)))))))))))))))))
(assert
 (let ((?x118111 (* 2.0 l_0_19_159)))
 (let ((?x118301 (* ?x118111 l_0_19_177)))
 (let ((?x118108 (* 2.0 l_0_19_158)))
 (let ((?x118299 (* ?x118108 l_0_19_176)))
 (let ((?x118105 (* 2.0 l_0_19_157)))
 (let ((?x118297 (* ?x118105 l_0_19_175)))
 (let ((?x118102 (* 2.0 l_0_19_156)))
 (let ((?x118295 (* ?x118102 l_0_19_174)))
 (let ((?x118099 (* 2.0 l_0_19_155)))
 (let ((?x118293 (* ?x118099 l_0_19_173)))
 (let ((?x121582 (- (* (* (- 1.0) l_0_19_101) l_0_19_83) (* (* 1.0 l_0_19_102) l_0_19_84))))
 (let ((?x121586 (- (- ?x121582 (* (* 1.0 l_0_19_103) l_0_19_85)) (* (* 1.0 l_0_19_104) l_0_19_86))))
 (let ((?x121591 (+ (- ?x121586 (* (* 1.0 l_0_19_105) l_0_19_87)) (* (* 1.0 l_0_19_119) l_0_19_137))))
 (let ((?x121595 (+ (+ ?x121591 (* (* 1.0 l_0_19_120) l_0_19_138)) (* (* 1.0 l_0_19_121) l_0_19_139))))
 (let ((?x121599 (+ (+ ?x121595 (* (* 1.0 l_0_19_122) l_0_19_140)) (* (* 1.0 l_0_19_123) l_0_19_141))))
 (= (- (- (- (- (- ?x121599 ?x118293) ?x118295) ?x118297) ?x118299) ?x118301) 0.0)))))))))))))))))
(assert
 (let ((?x118396 (* l_0_19_165 l_0_19_165)))
 (let ((?x118381 (* l_0_19_164 l_0_19_164)))
 (let ((?x118378 (* l_0_19_163 l_0_19_163)))
 (let ((?x118374 (* l_0_19_162 l_0_19_162)))
 (let ((?x118370 (* l_0_19_161 l_0_19_161)))
 (let ((?x118366 (* l_0_19_160 l_0_19_160)))
 (let ((?x96122 (+ (* (/ 1.0 2.0) (* l_0_19_124 l_0_19_124)) (* (/ 1.0 2.0) (* l_0_19_125 l_0_19_125)))))
 (let ((?x121628 (+ (+ ?x96122 (* (/ 1.0 2.0) (* l_0_19_126 l_0_19_126))) (* (/ 1.0 2.0) (* l_0_19_127 l_0_19_127)))))
 (let ((?x121634 (+ (+ ?x121628 (* (/ 1.0 2.0) (* l_0_19_128 l_0_19_128))) (* (/ 1.0 2.0) (* l_0_19_129 l_0_19_129)))))
 (let ((?x121643 (- (- (- (- (- (- (- ?x121634 ?x118366) ?x118370) ?x118374) ?x118378) ?x118381) ?x118396) (* (* (/ 1.0 2.0) l_0_19_88) l_0_19_88))))
 (let ((?x121649 (- (- ?x121643 (* (* (/ 1.0 2.0) l_0_19_89) l_0_19_89)) (* (* (/ 1.0 2.0) l_0_19_90) l_0_19_90))))
 (let ((?x121655 (- (- ?x121649 (* (* (/ 1.0 2.0) l_0_19_91) l_0_19_91)) (* (* (/ 1.0 2.0) l_0_19_92) l_0_19_92))))
 (= (- ?x121655 (* (* (/ 1.0 2.0) l_0_19_93) l_0_19_93)) 0.0))))))))))))))
(assert
 (let ((?x118501 (* 2.0 l_0_19_165)))
 (let ((?x118502 (* ?x118501 l_0_19_171)))
 (let ((?x118498 (* 2.0 l_0_19_164)))
 (let ((?x118499 (* ?x118498 l_0_19_170)))
 (let ((?x118495 (* 2.0 l_0_19_163)))
 (let ((?x118496 (* ?x118495 l_0_19_169)))
 (let ((?x118492 (* 2.0 l_0_19_162)))
 (let ((?x118493 (* ?x118492 l_0_19_168)))
 (let ((?x118489 (* 2.0 l_0_19_161)))
 (let ((?x118490 (* ?x118489 l_0_19_167)))
 (let ((?x118486 (* 2.0 l_0_19_160)))
 (let ((?x118487 (* ?x118486 l_0_19_166)))
 (let ((?x121670 (+ (* (* 1.0 l_0_19_124) l_0_19_130) (* (* 1.0 l_0_19_125) l_0_19_131))))
 (let ((?x121676 (+ (+ ?x121670 (* (* 1.0 l_0_19_126) l_0_19_132)) (* (* 1.0 l_0_19_127) l_0_19_133))))
 (let ((?x121682 (+ (+ ?x121676 (* (* 1.0 l_0_19_128) l_0_19_134)) (* (* 1.0 l_0_19_129) l_0_19_135))))
 (let ((?x121691 (- (- (- (- (- (- (- ?x121682 ?x118487) ?x118490) ?x118493) ?x118496) ?x118499) ?x118502) (* (* 1.0 l_0_19_88) l_0_19_94))))
 (let ((?x121697 (- (- ?x121691 (* (* 1.0 l_0_19_89) l_0_19_95)) (* (* 1.0 l_0_19_90) l_0_19_96))))
 (let ((?x121703 (- (- ?x121697 (* (* 1.0 l_0_19_91) l_0_19_97)) (* (* 1.0 l_0_19_92) l_0_19_98))))
 (= (- ?x121703 (* (* 1.0 l_0_19_93) l_0_19_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x118501 (* 2.0 l_0_19_165)))
 (let ((?x118667 (* ?x118501 l_0_19_178)))
 (let ((?x118498 (* 2.0 l_0_19_164)))
 (let ((?x118665 (* ?x118498 l_0_19_177)))
 (let ((?x118495 (* 2.0 l_0_19_163)))
 (let ((?x118663 (* ?x118495 l_0_19_176)))
 (let ((?x118492 (* 2.0 l_0_19_162)))
 (let ((?x118661 (* ?x118492 l_0_19_175)))
 (let ((?x118489 (* 2.0 l_0_19_161)))
 (let ((?x118659 (* ?x118489 l_0_19_174)))
 (let ((?x118486 (* 2.0 l_0_19_160)))
 (let ((?x118657 (* ?x118486 l_0_19_173)))
 (let ((?x121738 (- (* (* (- 1.0) l_0_19_101) l_0_19_88) (* (* 1.0 l_0_19_102) l_0_19_89))))
 (let ((?x121742 (- (- ?x121738 (* (* 1.0 l_0_19_103) l_0_19_90)) (* (* 1.0 l_0_19_104) l_0_19_91))))
 (let ((?x121747 (- (- ?x121742 (* (* 1.0 l_0_19_105) l_0_19_92)) (* (* 1.0 l_0_19_106) l_0_19_93))))
 (let ((?x121751 (+ (+ ?x121747 (* (* 1.0 l_0_19_124) l_0_19_137)) (* (* 1.0 l_0_19_125) l_0_19_138))))
 (let ((?x121755 (+ (+ ?x121751 (* (* 1.0 l_0_19_126) l_0_19_139)) (* (* 1.0 l_0_19_127) l_0_19_140))))
 (let ((?x121759 (+ (+ ?x121755 (* (* 1.0 l_0_19_128) l_0_19_141)) (* (* 1.0 l_0_19_129) l_0_19_142))))
 (= (- (- (- (- (- (- ?x121759 ?x118657) ?x118659) ?x118661) ?x118663) ?x118665) ?x118667) 0.0))))))))))))))))))))
(assert
 (let ((?x118772 (* l_0_19_172 l_0_19_172)))
 (let ((?x118770 (* l_0_19_171 l_0_19_171)))
 (let ((?x118768 (* l_0_19_170 l_0_19_170)))
 (let ((?x118766 (* l_0_19_169 l_0_19_169)))
 (let ((?x118764 (* l_0_19_168 l_0_19_168)))
 (let ((?x118762 (* l_0_19_167 l_0_19_167)))
 (let ((?x118760 (* l_0_19_166 l_0_19_166)))
 (let ((?x78693 (+ (* (* (- (/ 1.0 2.0)) l_0_19_100) l_0_19_100) (* (/ 1.0 2.0) (* l_0_19_130 l_0_19_130)))))
 (let ((?x121787 (+ (+ ?x78693 (* (/ 1.0 2.0) (* l_0_19_131 l_0_19_131))) (* (/ 1.0 2.0) (* l_0_19_132 l_0_19_132)))))
 (let ((?x121793 (+ (+ ?x121787 (* (/ 1.0 2.0) (* l_0_19_133 l_0_19_133))) (* (/ 1.0 2.0) (* l_0_19_134 l_0_19_134)))))
 (let ((?x121799 (+ (+ ?x121793 (* (/ 1.0 2.0) (* l_0_19_135 l_0_19_135))) (* (/ 1.0 2.0) (* l_0_19_136 l_0_19_136)))))
 (let ((?x121806 (- (- (- (- (- (- (- ?x121799 ?x118760) ?x118762) ?x118764) ?x118766) ?x118768) ?x118770) ?x118772)))
 (let ((?x121812 (- (- ?x121806 (* (* (/ 1.0 2.0) l_0_19_94) l_0_19_94)) (* (* (/ 1.0 2.0) l_0_19_95) l_0_19_95))))
 (let ((?x121818 (- (- ?x121812 (* (* (/ 1.0 2.0) l_0_19_96) l_0_19_96)) (* (* (/ 1.0 2.0) l_0_19_97) l_0_19_97))))
 (let ((?x121824 (- (- ?x121818 (* (* (/ 1.0 2.0) l_0_19_98) l_0_19_98)) (* (* (/ 1.0 2.0) l_0_19_99) l_0_19_99))))
 (= ?x121824 0.0)))))))))))))))))
(assert
 (let ((?x118902 (* (* 2.0 l_0_19_172) l_0_19_179)))
 (let ((?x118899 (* (* 2.0 l_0_19_171) l_0_19_178)))
 (let ((?x118896 (* (* 2.0 l_0_19_170) l_0_19_177)))
 (let ((?x118893 (* (* 2.0 l_0_19_169) l_0_19_176)))
 (let ((?x118890 (* (* 2.0 l_0_19_168) l_0_19_175)))
 (let ((?x118887 (* (* 2.0 l_0_19_167) l_0_19_174)))
 (let ((?x118884 (* (* 2.0 l_0_19_166) l_0_19_173)))
 (let ((?x121843 (- (* (* (- 1.0) l_0_19_100) l_0_19_107) (* (* 1.0 l_0_19_101) l_0_19_94))))
 (let ((?x121847 (- (- ?x121843 (* (* 1.0 l_0_19_102) l_0_19_95)) (* (* 1.0 l_0_19_103) l_0_19_96))))
 (let ((?x121851 (- (- ?x121847 (* (* 1.0 l_0_19_104) l_0_19_97)) (* (* 1.0 l_0_19_105) l_0_19_98))))
 (let ((?x121856 (+ (- ?x121851 (* (* 1.0 l_0_19_106) l_0_19_99)) (* (* 1.0 l_0_19_130) l_0_19_137))))
 (let ((?x121862 (+ (+ ?x121856 (* (* 1.0 l_0_19_131) l_0_19_138)) (* (* 1.0 l_0_19_132) l_0_19_139))))
 (let ((?x121868 (+ (+ ?x121862 (* (* 1.0 l_0_19_133) l_0_19_140)) (* (* 1.0 l_0_19_134) l_0_19_141))))
 (let ((?x121874 (+ (+ ?x121868 (* (* 1.0 l_0_19_135) l_0_19_142)) (* (* 1.0 l_0_19_136) l_0_19_143))))
 (let ((?x121881 (- (- (- (- (- (- (- ?x121874 ?x118884) ?x118887) ?x118890) ?x118893) ?x118896) ?x118899) ?x118902)))
 (= ?x121881 0.0)))))))))))))))))
(assert
 (let ((?x119052 (* l_0_19_180 l_0_19_180)))
 (let ((?x119050 (* l_0_19_179 l_0_19_179)))
 (let ((?x119048 (* l_0_19_178 l_0_19_178)))
 (let ((?x119046 (* l_0_19_177 l_0_19_177)))
 (let ((?x119044 (* l_0_19_176 l_0_19_176)))
 (let ((?x119042 (* l_0_19_175 l_0_19_175)))
 (let ((?x119040 (* l_0_19_174 l_0_19_174)))
 (let ((?x119104 (* l_0_19_173 l_0_19_173)))
 (let ((?x99298 (- (* (* (- (/ 1.0 2.0)) l_0_19_101) l_0_19_101) (* (* (/ 1.0 2.0) l_0_19_102) l_0_19_102))))
 (let ((?x74801 (- (- ?x99298 (* (* (/ 1.0 2.0) l_0_19_103) l_0_19_103)) (* (* (/ 1.0 2.0) l_0_19_104) l_0_19_104))))
 (let ((?x121904 (- (- ?x74801 (* (* (/ 1.0 2.0) l_0_19_105) l_0_19_105)) (* (* (/ 1.0 2.0) l_0_19_106) l_0_19_106))))
 (let ((?x121910 (- (- ?x121904 (* (* (/ 1.0 2.0) l_0_19_107) l_0_19_107)) (* (* (/ 1.0 2.0) l_0_19_108) l_0_19_108))))
 (let ((?x121916 (+ (+ ?x121910 (* (/ 1.0 2.0) (* l_0_19_137 l_0_19_137))) (* (/ 1.0 2.0) (* l_0_19_138 l_0_19_138)))))
 (let ((?x121922 (+ (+ ?x121916 (* (/ 1.0 2.0) (* l_0_19_139 l_0_19_139))) (* (/ 1.0 2.0) (* l_0_19_140 l_0_19_140)))))
 (let ((?x121928 (+ (+ ?x121922 (* (/ 1.0 2.0) (* l_0_19_141 l_0_19_141))) (* (/ 1.0 2.0) (* l_0_19_142 l_0_19_142)))))
 (let ((?x121934 (+ (+ ?x121928 (* (/ 1.0 2.0) (* l_0_19_143 l_0_19_143))) (* (/ 1.0 2.0) (* l_0_19_144 l_0_19_144)))))
 (let ((?x121941 (- (- (- (- (- (- (- ?x121934 ?x119104) ?x119040) ?x119042) ?x119044) ?x119046) ?x119048) ?x119050)))
 (= (- ?x121941 ?x119052) 0.0)))))))))))))))))))
(assert
 (let ((?x26817 (* l_0_19_73 l_0_19_73)))
 (let ((?x99436 (+ (+ (* (- l_0_19_109) l_0_19_109) (* l_0_19_289 l_0_19_289)) ?x26817)))
 (= ?x99436 0.0))))
(assert
 (let ((?x121961 (* l_0_19_433 l_0_19_433)))
 (let ((?x121959 (* l_0_19_397 l_0_19_397)))
 (let ((?x99404 (* l_0_19_361 l_0_19_361)))
 (let ((?x99435 (* l_0_19_325 l_0_19_325)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119176 (* ?x119145 l_0_19_290)))
 (let ((?x121960 (- (- (- (+ (* (* (- 2.0) l_0_19_109) l_0_19_110) ?x119176) ?x99435) ?x99404) ?x121959)))
 (= (+ (- ?x121960 ?x121961) (* (* 2.0 l_0_19_73) l_0_19_74)) 0.0)))))))))
(assert
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119225 (* ?x119145 l_0_19_292)))
 (let ((?x121978 (+ (+ (* (* (- 2.0) l_0_19_109) l_0_19_112) ?x119225) (* (* 2.0 l_0_19_73) l_0_19_76))))
 (= ?x121978 0.0)))))
(assert
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119306 (* ?x119145 l_0_19_299)))
 (let ((?x121982 (* l_0_19_253 l_0_19_253)))
 (let ((?x121986 (+ (+ (+ (* (* (- 2.0) l_0_19_109) l_0_19_119) ?x121982) ?x119306) (* (* 2.0 l_0_19_73) l_0_19_83))))
 (= ?x121986 0.0))))))
(assert
 (let ((?x119148 (* l_0_19_289 l_0_19_289)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119378 (* ?x119145 l_0_19_304)))
 (let ((?x20897 (* l_0_19_181 l_0_19_181)))
 (let ((?x93559 (* l_0_19_145 l_0_19_145)))
 (let ((?x121996 (- (+ (- (+ (* (* (- 2.0) l_0_19_109) l_0_19_124) ?x93559) ?x20897) ?x119378) ?x119148)))
 (= (+ ?x121996 (* (* 2.0 l_0_19_73) l_0_19_88)) 0.0))))))))
(assert
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119434 (* ?x119145 l_0_19_310)))
 (let ((?x121982 (* l_0_19_253 l_0_19_253)))
 (let ((?x122016 (+ (+ (- (* (* (- 2.0) l_0_19_109) l_0_19_130) ?x121982) ?x119434) (* (* 2.0 l_0_19_73) l_0_19_94))))
 (= ?x122016 0.0))))))
(assert
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119517 (* ?x119145 l_0_19_317)))
 (let ((?x122022 (* l_0_19_217 l_0_19_217)))
 (let ((?x122021 (- (* (* 2.0 l_0_19_101) l_0_19_73) (* (* 2.0 l_0_19_109) l_0_19_137))))
 (= (+ (- ?x122021 ?x122022) ?x119517) 0.0))))))
(assert
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x53495 (* ?x119181 l_0_19_293)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x74724 (* ?x119178 l_0_19_292)))
 (let ((?x122034 (- (* (* (- 2.0) l_0_19_110) l_0_19_112) (* (* 2.0 l_0_19_111) l_0_19_113))))
 (let ((?x122040 (- (- (+ (+ ?x122034 ?x74724) ?x53495) (* (* 2.0 l_0_19_325) l_0_19_328)) (* (* 2.0 l_0_19_361) l_0_19_364))))
 (let ((?x122044 (- (- ?x122040 (* (* 2.0 l_0_19_397) l_0_19_400)) (* (* 2.0 l_0_19_433) l_0_19_436))))
 (let ((?x122048 (+ (+ ?x122044 (* (* 2.0 l_0_19_74) l_0_19_76)) (* (* 2.0 l_0_19_75) l_0_19_77))))
 (= ?x122048 0.0))))))))))
(assert
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119692 (* ?x119181 l_0_19_300)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119690 (* ?x119178 l_0_19_299)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x122066 (* ?x119303 l_0_19_254)))
 (let ((?x122065 (- (* (* (- 2.0) l_0_19_110) l_0_19_119) (* (* 2.0 l_0_19_111) l_0_19_120))))
 (let ((?x122071 (- (+ (+ (+ ?x122065 ?x122066) ?x119690) ?x119692) (* (* 2.0 l_0_19_325) l_0_19_335))))
 (let ((?x122075 (- (- ?x122071 (* (* 2.0 l_0_19_361) l_0_19_371)) (* (* 2.0 l_0_19_397) l_0_19_407))))
 (let ((?x122079 (+ (- ?x122075 (* (* 2.0 l_0_19_433) l_0_19_443)) (* (* 2.0 l_0_19_74) l_0_19_83))))
 (= (+ ?x122079 (* (* 2.0 l_0_19_75) l_0_19_84)) 0.0))))))))))))
(assert
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119791 (* ?x119181 l_0_19_305)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119788 (* ?x119178 l_0_19_304)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119176 (* ?x119145 l_0_19_290)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x93494 (* ?x20756 l_0_19_182)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x52537 (* ?x93488 l_0_19_146)))
 (let ((?x122108 (- (* (* (- 2.0) l_0_19_110) l_0_19_124) (* (* 2.0 l_0_19_111) l_0_19_125))))
 (let ((?x122115 (- (+ (+ (- (- (+ ?x122108 ?x52537) ?x93494) ?x119176) ?x119788) ?x119791) (* (* 2.0 l_0_19_325) l_0_19_340))))
 (let ((?x122119 (- (- ?x122115 (* (* 2.0 l_0_19_361) l_0_19_376)) (* (* 2.0 l_0_19_397) l_0_19_412))))
 (let ((?x122123 (+ (- ?x122119 (* (* 2.0 l_0_19_433) l_0_19_448)) (* (* 2.0 l_0_19_74) l_0_19_88))))
 (= (+ ?x122123 (* (* 2.0 l_0_19_75) l_0_19_89)) 0.0))))))))))))))))
(assert
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119856 (* ?x119181 l_0_19_311)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119854 (* ?x119178 l_0_19_310)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x122066 (* ?x119303 l_0_19_254)))
 (let ((?x122147 (- (* (* (- 2.0) l_0_19_110) l_0_19_130) (* (* 2.0 l_0_19_111) l_0_19_131))))
 (let ((?x122152 (- (+ (+ (- ?x122147 ?x122066) ?x119854) ?x119856) (* (* 2.0 l_0_19_325) l_0_19_346))))
 (let ((?x122156 (- (- ?x122152 (* (* 2.0 l_0_19_361) l_0_19_382)) (* (* 2.0 l_0_19_397) l_0_19_418))))
 (let ((?x122160 (+ (- ?x122156 (* (* 2.0 l_0_19_433) l_0_19_454)) (* (* 2.0 l_0_19_74) l_0_19_94))))
 (= (+ ?x122160 (* (* 2.0 l_0_19_75) l_0_19_95)) 0.0))))))))))))
(assert
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119955 (* ?x119181 l_0_19_318)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119953 (* ?x119178 l_0_19_317)))
 (let ((?x99771 (+ (* (* 2.0 l_0_19_101) l_0_19_74) (* (* 2.0 l_0_19_102) l_0_19_75))))
 (let ((?x122190 (- (- ?x99771 (* (* 2.0 l_0_19_110) l_0_19_137)) (* (* 2.0 l_0_19_111) l_0_19_138))))
 (let ((?x122196 (- (+ (+ (- ?x122190 (* (* 2.0 l_0_19_217) l_0_19_218)) ?x119953) ?x119955) (* (* 2.0 l_0_19_325) l_0_19_353))))
 (let ((?x122200 (- (- ?x122196 (* (* 2.0 l_0_19_361) l_0_19_389)) (* (* 2.0 l_0_19_397) l_0_19_425))))
 (= (- ?x122200 (* (* 2.0 l_0_19_433) l_0_19_461)) 0.0))))))))))
(assert
 (let ((?x73389 (* l_0_19_78 l_0_19_78)))
 (let ((?x21861 (* l_0_19_77 l_0_19_77)))
 (let ((?x117647 (* l_0_19_76 l_0_19_76)))
 (let ((?x17210 (* l_0_19_294 l_0_19_294)))
 (let ((?x75848 (* l_0_19_293 l_0_19_293)))
 (let ((?x54187 (* l_0_19_292 l_0_19_292)))
 (let ((?x117569 (* l_0_19_114 l_0_19_114)))
 (let ((?x122229 (- (- (* (- l_0_19_112) l_0_19_112) (* l_0_19_113 l_0_19_113)) ?x117569)))
 (= (+ (+ (+ (+ (+ (+ ?x122229 ?x54187) ?x75848) ?x17210) ?x117647) ?x21861) ?x73389) 0.0))))))))))
(assert
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x120078 (* ?x116668 l_0_19_301)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x120076 (* ?x116665 l_0_19_300)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x120074 (* ?x93499 l_0_19_299)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x28234 (* ?x119303 l_0_19_256)))
 (let ((?x99809 (- (* (* (- 2.0) l_0_19_112) l_0_19_119) (* (* 2.0 l_0_19_113) l_0_19_120))))
 (let ((?x122243 (+ (+ (+ (- ?x99809 (* (* 2.0 l_0_19_114) l_0_19_121)) ?x28234) ?x120074) ?x120076)))
 (let ((?x122248 (+ (+ (+ ?x122243 ?x120078) (* (* 2.0 l_0_19_76) l_0_19_83)) (* (* 2.0 l_0_19_77) l_0_19_84))))
 (= (+ ?x122248 (* (* 2.0 l_0_19_78) l_0_19_85)) 0.0)))))))))))))
(assert
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x120113 (* ?x116668 l_0_19_306)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x120110 (* ?x116665 l_0_19_305)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x120107 (* ?x93499 l_0_19_304)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119225 (* ?x119145 l_0_19_292)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116715 (* ?x20756 l_0_19_184)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116711 (* ?x93488 l_0_19_148)))
 (let ((?x122267 (- (* (* (- 2.0) l_0_19_112) l_0_19_124) (* (* 2.0 l_0_19_113) l_0_19_125))))
 (let ((?x122272 (- (- (+ (- ?x122267 (* (* 2.0 l_0_19_114) l_0_19_126)) ?x116711) ?x116715) ?x119225)))
 (let ((?x122277 (+ (+ (+ (+ ?x122272 ?x120107) ?x120110) ?x120113) (* (* 2.0 l_0_19_76) l_0_19_88))))
 (let ((?x122281 (+ (+ ?x122277 (* (* 2.0 l_0_19_77) l_0_19_89)) (* (* 2.0 l_0_19_78) l_0_19_90))))
 (= ?x122281 0.0))))))))))))))))))
(assert
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x120139 (* ?x116668 l_0_19_312)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x120137 (* ?x116665 l_0_19_311)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x120135 (* ?x93499 l_0_19_310)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x28234 (* ?x119303 l_0_19_256)))
 (let ((?x122297 (- (* (* (- 2.0) l_0_19_112) l_0_19_130) (* (* 2.0 l_0_19_113) l_0_19_131))))
 (let ((?x122302 (+ (+ (- (- ?x122297 (* (* 2.0 l_0_19_114) l_0_19_132)) ?x28234) ?x120135) ?x120137)))
 (let ((?x122307 (+ (+ (+ ?x122302 ?x120139) (* (* 2.0 l_0_19_76) l_0_19_94)) (* (* 2.0 l_0_19_77) l_0_19_95))))
 (= (+ ?x122307 (* (* 2.0 l_0_19_78) l_0_19_96)) 0.0)))))))))))))
(assert
 (let ((?x56136 (* l_0_19_87 l_0_19_87)))
 (let ((?x22843 (* l_0_19_86 l_0_19_86)))
 (let ((?x74347 (* l_0_19_85 l_0_19_85)))
 (let ((?x78414 (* l_0_19_84 l_0_19_84)))
 (let ((?x27390 (* l_0_19_83 l_0_19_83)))
 (let ((?x120274 (* l_0_19_303 l_0_19_303)))
 (let ((?x120272 (* l_0_19_302 l_0_19_302)))
 (let ((?x120270 (* l_0_19_301 l_0_19_301)))
 (let ((?x120268 (* l_0_19_300 l_0_19_300)))
 (let ((?x120266 (* l_0_19_299 l_0_19_299)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x99886 (* ?x119303 l_0_19_263)))
 (let ((?x121467 (* l_0_19_123 l_0_19_123)))
 (let ((?x121464 (* l_0_19_122 l_0_19_122)))
 (let ((?x121461 (* l_0_19_121 l_0_19_121)))
 (let ((?x99875 (- (- (* (- l_0_19_119) l_0_19_119) (* l_0_19_120 l_0_19_120)) ?x121461)))
 (let ((?x122322 (+ (+ (+ (+ (+ (- (- ?x99875 ?x121464) ?x121467) ?x99886) ?x120266) ?x120268) ?x120270) ?x120272)))
 (= (+ (+ (+ (+ (+ (+ ?x122322 ?x120274) ?x27390) ?x78414) ?x74347) ?x22843) ?x56136) 0.0)))))))))))))))))))
(assert
 (let ((?x120323 (* 2.0 l_0_19_303)))
 (let ((?x120324 (* ?x120323 l_0_19_308)))
 (let ((?x120320 (* 2.0 l_0_19_302)))
 (let ((?x120321 (* ?x120320 l_0_19_307)))
 (let ((?x120317 (* 2.0 l_0_19_301)))
 (let ((?x120318 (* ?x120317 l_0_19_306)))
 (let ((?x120314 (* 2.0 l_0_19_300)))
 (let ((?x120315 (* ?x120314 l_0_19_305)))
 (let ((?x120311 (* 2.0 l_0_19_299)))
 (let ((?x120312 (* ?x120311 l_0_19_304)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119306 (* ?x119145 l_0_19_299)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x122351 (* ?x119303 l_0_19_268)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116768 (* ?x20756 l_0_19_191)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116761 (* ?x93488 l_0_19_155)))
 (let ((?x122339 (- (* (* (- 2.0) l_0_19_119) l_0_19_124) (* (* 2.0 l_0_19_120) l_0_19_125))))
 (let ((?x122345 (- (- ?x122339 (* (* 2.0 l_0_19_121) l_0_19_126)) (* (* 2.0 l_0_19_122) l_0_19_127))))
 (let ((?x122352 (+ (- (+ (- ?x122345 (* (* 2.0 l_0_19_123) l_0_19_128)) ?x116761) ?x116768) ?x122351)))
 (let ((?x122361 (+ (+ (+ (+ (+ (+ (- ?x122352 ?x119306) ?x120312) ?x120315) ?x120318) ?x120321) ?x120324) (* (* 2.0 l_0_19_83) l_0_19_88))))
 (let ((?x122367 (+ (+ ?x122361 (* (* 2.0 l_0_19_84) l_0_19_89)) (* (* 2.0 l_0_19_85) l_0_19_90))))
 (let ((?x122373 (+ (+ ?x122367 (* (* 2.0 l_0_19_86) l_0_19_91)) (* (* 2.0 l_0_19_87) l_0_19_92))))
 (= ?x122373 0.0))))))))))))))))))))))))))
(assert
 (let ((?x120323 (* 2.0 l_0_19_303)))
 (let ((?x120373 (* ?x120323 l_0_19_314)))
 (let ((?x120320 (* 2.0 l_0_19_302)))
 (let ((?x120371 (* ?x120320 l_0_19_313)))
 (let ((?x120317 (* 2.0 l_0_19_301)))
 (let ((?x120369 (* ?x120317 l_0_19_312)))
 (let ((?x120314 (* 2.0 l_0_19_300)))
 (let ((?x120367 (* ?x120314 l_0_19_311)))
 (let ((?x120311 (* 2.0 l_0_19_299)))
 (let ((?x120365 (* ?x120311 l_0_19_310)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x122408 (* ?x119303 l_0_19_274)))
 (let ((?x99886 (* ?x119303 l_0_19_263)))
 (let ((?x122400 (- (* (* (- 2.0) l_0_19_119) l_0_19_130) (* (* 2.0 l_0_19_120) l_0_19_131))))
 (let ((?x122404 (- (- ?x122400 (* (* 2.0 l_0_19_121) l_0_19_132)) (* (* 2.0 l_0_19_122) l_0_19_133))))
 (let ((?x122410 (+ (+ (- (- ?x122404 (* (* 2.0 l_0_19_123) l_0_19_134)) ?x99886) ?x122408) ?x120365)))
 (let ((?x122416 (+ (+ (+ (+ (+ ?x122410 ?x120367) ?x120369) ?x120371) ?x120373) (* (* 2.0 l_0_19_83) l_0_19_94))))
 (let ((?x122420 (+ (+ ?x122416 (* (* 2.0 l_0_19_84) l_0_19_95)) (* (* 2.0 l_0_19_85) l_0_19_96))))
 (let ((?x122424 (+ (+ ?x122420 (* (* 2.0 l_0_19_86) l_0_19_97)) (* (* 2.0 l_0_19_87) l_0_19_98))))
 (= ?x122424 0.0)))))))))))))))))))))
(assert
 (let ((?x120323 (* 2.0 l_0_19_303)))
 (let ((?x120444 (* ?x120323 l_0_19_321)))
 (let ((?x120320 (* 2.0 l_0_19_302)))
 (let ((?x120442 (* ?x120320 l_0_19_320)))
 (let ((?x120317 (* 2.0 l_0_19_301)))
 (let ((?x120440 (* ?x120317 l_0_19_319)))
 (let ((?x120314 (* 2.0 l_0_19_300)))
 (let ((?x120438 (* ?x120314 l_0_19_318)))
 (let ((?x120311 (* 2.0 l_0_19_299)))
 (let ((?x120436 (* ?x120311 l_0_19_317)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x120860 (* ?x119303 l_0_19_281)))
 (let ((?x122437 (+ (* (* 2.0 l_0_19_101) l_0_19_83) (* (* 2.0 l_0_19_102) l_0_19_84))))
 (let ((?x122441 (+ (+ ?x122437 (* (* 2.0 l_0_19_103) l_0_19_85)) (* (* 2.0 l_0_19_104) l_0_19_86))))
 (let ((?x122446 (- (+ ?x122441 (* (* 2.0 l_0_19_105) l_0_19_87)) (* (* 2.0 l_0_19_119) l_0_19_137))))
 (let ((?x122450 (- (- ?x122446 (* (* 2.0 l_0_19_120) l_0_19_138)) (* (* 2.0 l_0_19_121) l_0_19_139))))
 (let ((?x122454 (- (- ?x122450 (* (* 2.0 l_0_19_122) l_0_19_140)) (* (* 2.0 l_0_19_123) l_0_19_141))))
 (let ((?x122459 (+ (+ (+ (- ?x122454 (* (* 2.0 l_0_19_217) l_0_19_227)) ?x120860) ?x120436) ?x120438)))
 (= (+ (+ (+ ?x122459 ?x120440) ?x120442) ?x120444) 0.0))))))))))))))))))))
(assert
 (let ((?x27499 (* l_0_19_93 l_0_19_93)))
 (let ((?x96386 (* l_0_19_92 l_0_19_92)))
 (let ((?x78574 (* l_0_19_91 l_0_19_91)))
 (let ((?x27463 (* l_0_19_90 l_0_19_90)))
 (let ((?x99090 (* l_0_19_89 l_0_19_89)))
 (let ((?x99085 (* l_0_19_88 l_0_19_88)))
 (let ((?x120522 (* l_0_19_309 l_0_19_309)))
 (let ((?x120520 (* l_0_19_308 l_0_19_308)))
 (let ((?x120518 (* l_0_19_307 l_0_19_307)))
 (let ((?x120516 (* l_0_19_306 l_0_19_306)))
 (let ((?x120514 (* l_0_19_305 l_0_19_305)))
 (let ((?x120512 (* l_0_19_304 l_0_19_304)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119378 (* ?x119145 l_0_19_304)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116791 (* ?x20756 l_0_19_196)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116784 (* ?x93488 l_0_19_160)))
 (let ((?x121632 (* l_0_19_129 l_0_19_129)))
 (let ((?x121629 (* l_0_19_128 l_0_19_128)))
 (let ((?x98963 (* l_0_19_127 l_0_19_127)))
 (let ((?x96125 (* l_0_19_126 l_0_19_126)))
 (let ((?x100019 (- (- (* (- l_0_19_124) l_0_19_124) (* l_0_19_125 l_0_19_125)) ?x96125)))
 (let ((?x122495 (+ (- (- (+ (- (- (- ?x100019 ?x98963) ?x121629) ?x121632) ?x116784) ?x116791) ?x119378) ?x120512)))
 (let ((?x122502 (+ (+ (+ (+ (+ (+ (+ ?x122495 ?x120514) ?x120516) ?x120518) ?x120520) ?x120522) ?x99085) ?x99090)))
 (= (+ (+ (+ (+ ?x122502 ?x27463) ?x78574) ?x96386) ?x27499) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x120567 (* 2.0 l_0_19_309)))
 (let ((?x120568 (* ?x120567 l_0_19_315)))
 (let ((?x120564 (* 2.0 l_0_19_308)))
 (let ((?x120565 (* ?x120564 l_0_19_314)))
 (let ((?x120561 (* 2.0 l_0_19_307)))
 (let ((?x120562 (* ?x120561 l_0_19_313)))
 (let ((?x120558 (* 2.0 l_0_19_306)))
 (let ((?x120559 (* ?x120558 l_0_19_312)))
 (let ((?x120555 (* 2.0 l_0_19_305)))
 (let ((?x120556 (* ?x120555 l_0_19_311)))
 (let ((?x120552 (* 2.0 l_0_19_304)))
 (let ((?x120553 (* ?x120552 l_0_19_310)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119434 (* ?x119145 l_0_19_310)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x122351 (* ?x119303 l_0_19_268)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116815 (* ?x20756 l_0_19_202)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116813 (* ?x93488 l_0_19_166)))
 (let ((?x122527 (- (* (* (- 2.0) l_0_19_124) l_0_19_130) (* (* 2.0 l_0_19_125) l_0_19_131))))
 (let ((?x122533 (- (- ?x122527 (* (* 2.0 l_0_19_126) l_0_19_132)) (* (* 2.0 l_0_19_127) l_0_19_133))))
 (let ((?x122539 (- (- ?x122533 (* (* 2.0 l_0_19_128) l_0_19_134)) (* (* 2.0 l_0_19_129) l_0_19_135))))
 (let ((?x122546 (+ (+ (+ (- (- (- (+ ?x122539 ?x116813) ?x116815) ?x122351) ?x119434) ?x120553) ?x120556) ?x120559)))
 (let ((?x122552 (+ (+ (+ (+ ?x122546 ?x120562) ?x120565) ?x120568) (* (* 2.0 l_0_19_88) l_0_19_94))))
 (let ((?x122558 (+ (+ ?x122552 (* (* 2.0 l_0_19_89) l_0_19_95)) (* (* 2.0 l_0_19_90) l_0_19_96))))
 (let ((?x122564 (+ (+ ?x122558 (* (* 2.0 l_0_19_91) l_0_19_97)) (* (* 2.0 l_0_19_92) l_0_19_98))))
 (= (+ ?x122564 (* (* 2.0 l_0_19_93) l_0_19_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x120567 (* 2.0 l_0_19_309)))
 (let ((?x120624 (* ?x120567 l_0_19_322)))
 (let ((?x120564 (* 2.0 l_0_19_308)))
 (let ((?x120622 (* ?x120564 l_0_19_321)))
 (let ((?x120561 (* 2.0 l_0_19_307)))
 (let ((?x120620 (* ?x120561 l_0_19_320)))
 (let ((?x120558 (* 2.0 l_0_19_306)))
 (let ((?x120618 (* ?x120558 l_0_19_319)))
 (let ((?x120555 (* 2.0 l_0_19_305)))
 (let ((?x120616 (* ?x120555 l_0_19_318)))
 (let ((?x120552 (* 2.0 l_0_19_304)))
 (let ((?x120614 (* ?x120552 l_0_19_317)))
 (let ((?x119145 (* 2.0 l_0_19_289)))
 (let ((?x119517 (* ?x119145 l_0_19_317)))
 (let ((?x20756 (* 2.0 l_0_19_181)))
 (let ((?x116850 (* ?x20756 l_0_19_209)))
 (let ((?x93488 (* 2.0 l_0_19_145)))
 (let ((?x116848 (* ?x93488 l_0_19_173)))
 (let ((?x122592 (+ (* (* 2.0 l_0_19_101) l_0_19_88) (* (* 2.0 l_0_19_102) l_0_19_89))))
 (let ((?x122596 (+ (+ ?x122592 (* (* 2.0 l_0_19_103) l_0_19_90)) (* (* 2.0 l_0_19_104) l_0_19_91))))
 (let ((?x122600 (+ (+ ?x122596 (* (* 2.0 l_0_19_105) l_0_19_92)) (* (* 2.0 l_0_19_106) l_0_19_93))))
 (let ((?x122605 (- (- ?x122600 (* (* 2.0 l_0_19_124) l_0_19_137)) (* (* 2.0 l_0_19_125) l_0_19_138))))
 (let ((?x122609 (- (- ?x122605 (* (* 2.0 l_0_19_126) l_0_19_139)) (* (* 2.0 l_0_19_127) l_0_19_140))))
 (let ((?x122613 (- (- ?x122609 (* (* 2.0 l_0_19_128) l_0_19_141)) (* (* 2.0 l_0_19_129) l_0_19_142))))
 (let ((?x122618 (- (- (- (+ ?x122613 ?x116848) ?x116850) (* (* 2.0 l_0_19_217) l_0_19_232)) ?x119517)))
 (= (+ (+ (+ (+ (+ (+ ?x122618 ?x120614) ?x120616) ?x120618) ?x120620) ?x120622) ?x120624) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x78729 (* l_0_19_99 l_0_19_99)))
 (let ((?x78726 (* l_0_19_98 l_0_19_98)))
 (let ((?x99299 (* l_0_19_97 l_0_19_97)))
 (let ((?x99296 (* l_0_19_96 l_0_19_96)))
 (let ((?x78717 (* l_0_19_95 l_0_19_95)))
 (let ((?x99287 (* l_0_19_94 l_0_19_94)))
 (let ((?x120680 (* l_0_19_316 l_0_19_316)))
 (let ((?x120678 (* l_0_19_315 l_0_19_315)))
 (let ((?x120676 (* l_0_19_314 l_0_19_314)))
 (let ((?x120674 (* l_0_19_313 l_0_19_313)))
 (let ((?x120672 (* l_0_19_312 l_0_19_312)))
 (let ((?x120670 (* l_0_19_311 l_0_19_311)))
 (let ((?x120668 (* l_0_19_310 l_0_19_310)))
 (let ((?x119303 (* 2.0 l_0_19_253)))
 (let ((?x122408 (* ?x119303 l_0_19_274)))
 (let ((?x121797 (* l_0_19_136 l_0_19_136)))
 (let ((?x121794 (* l_0_19_135 l_0_19_135)))
 (let ((?x121791 (* l_0_19_134 l_0_19_134)))
 (let ((?x121788 (* l_0_19_133 l_0_19_133)))
 (let ((?x121785 (* l_0_19_132 l_0_19_132)))
 (let ((?x99145 (* l_0_19_131 l_0_19_131)))
 (let ((?x100148 (- (- (* l_0_19_100 l_0_19_100) (* l_0_19_130 l_0_19_130)) ?x99145)))
 (let ((?x100126 (+ (- (- (- (- (- (- ?x100148 ?x121785) ?x121788) ?x121791) ?x121794) ?x121797) ?x122408) ?x120668)))
 (let ((?x122654 (+ (+ (+ (+ (+ (+ (+ ?x100126 ?x120670) ?x120672) ?x120674) ?x120676) ?x120678) ?x120680) ?x99287)))
 (= (+ (+ (+ (+ (+ ?x122654 ?x78717) ?x99296) ?x99299) ?x78726) ?x78729) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x120818 (* l_0_19_324 l_0_19_324)))
 (let ((?x120816 (* l_0_19_323 l_0_19_323)))
 (let ((?x120814 (* l_0_19_322 l_0_19_322)))
 (let ((?x120812 (* l_0_19_321 l_0_19_321)))
 (let ((?x120810 (* l_0_19_320 l_0_19_320)))
 (let ((?x120807 (* l_0_19_319 l_0_19_319)))
 (let ((?x120805 (* l_0_19_318 l_0_19_318)))
 (let ((?x120803 (* l_0_19_317 l_0_19_317)))
 (let ((?x121932 (* l_0_19_144 l_0_19_144)))
 (let ((?x121929 (* l_0_19_143 l_0_19_143)))
 (let ((?x121926 (* l_0_19_142 l_0_19_142)))
 (let ((?x121923 (* l_0_19_141 l_0_19_141)))
 (let ((?x121920 (* l_0_19_140 l_0_19_140)))
 (let ((?x121917 (* l_0_19_139 l_0_19_139)))
 (let ((?x121914 (* l_0_19_138 l_0_19_138)))
 (let ((?x121911 (* l_0_19_137 l_0_19_137)))
 (let ((?x99411 (* l_0_19_108 l_0_19_108)))
 (let ((?x78795 (* l_0_19_107 l_0_19_107)))
 (let ((?x56325 (* l_0_19_106 l_0_19_106)))
 (let ((?x27664 (* l_0_19_105 l_0_19_105)))
 (let ((?x121951 (* l_0_19_104 l_0_19_104)))
 (let ((?x27710 (* l_0_19_103 l_0_19_103)))
 (let ((?x56984 (+ (+ (* l_0_19_101 l_0_19_101) (* l_0_19_102 l_0_19_102)) ?x27710)))
 (let ((?x29065 (- (- (+ (+ (+ (+ (+ ?x56984 ?x121951) ?x27664) ?x56325) ?x78795) ?x99411) ?x121911) ?x121914)))
 (let ((?x122667 (- (- (- (- (- (- (- ?x29065 ?x121917) ?x121920) ?x121923) ?x121926) ?x121929) ?x121932) (* (* 2.0 l_0_19_217) l_0_19_245))))
 (let ((?x122674 (+ (+ (+ (+ (+ (+ (+ ?x122667 ?x120803) ?x120805) ?x120807) ?x120810) ?x120812) ?x120814) ?x120816)))
 (= (+ ?x122674 ?x120818) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x116487 (* l_0_19_291 l_0_19_291)))
 (let ((?x116485 (* l_0_19_290 l_0_19_290)))
 (let ((?x116872 (* l_0_19_183 l_0_19_183)))
 (let ((?x116870 (* l_0_19_182 l_0_19_182)))
 (let ((?x79029 (- (+ (* l_0_19_146 l_0_19_146) (* l_0_19_147 l_0_19_147)) ?x116870)))
 (let ((?x29169 (- (- (- (- ?x79029 ?x116872) ?x116485) ?x116487) (* (* 2.0 l_0_19_326) l_0_19_340))))
 (let ((?x122702 (- (- ?x29169 (* (* 2.0 l_0_19_327) l_0_19_341)) (* (* 2.0 l_0_19_362) l_0_19_376))))
 (let ((?x122706 (- (- ?x122702 (* (* 2.0 l_0_19_363) l_0_19_377)) (* (* 2.0 l_0_19_398) l_0_19_412))))
 (let ((?x122710 (- (- ?x122706 (* (* 2.0 l_0_19_399) l_0_19_413)) (* (* 2.0 l_0_19_434) l_0_19_448))))
 (= (- ?x122710 (* (* 2.0 l_0_19_435) l_0_19_449)) 0.0)))))))))))
(assert
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x53495 (* ?x119181 l_0_19_293)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x74724 (* ?x119178 l_0_19_292)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x116969 (* ?x116968 l_0_19_185)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x116966 (* ?x116965 l_0_19_184)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x116963 (* ?x116962 l_0_19_149)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x117257 (* ?x117113 l_0_19_148)))
 (let ((?x122738 (- (- (- (- (- (+ ?x117257 ?x116963) ?x116966) ?x116969) ?x74724) ?x53495) (* (* 2.0 l_0_19_328) l_0_19_340))))
 (let ((?x122742 (- (- ?x122738 (* (* 2.0 l_0_19_329) l_0_19_341)) (* (* 2.0 l_0_19_330) l_0_19_342))))
 (let ((?x122746 (- (- ?x122742 (* (* 2.0 l_0_19_364) l_0_19_376)) (* (* 2.0 l_0_19_365) l_0_19_377))))
 (let ((?x122750 (- (- ?x122746 (* (* 2.0 l_0_19_366) l_0_19_378)) (* (* 2.0 l_0_19_400) l_0_19_412))))
 (let ((?x122754 (- (- ?x122750 (* (* 2.0 l_0_19_401) l_0_19_413)) (* (* 2.0 l_0_19_402) l_0_19_414))))
 (let ((?x122758 (- (- ?x122754 (* (* 2.0 l_0_19_436) l_0_19_448)) (* (* 2.0 l_0_19_437) l_0_19_449))))
 (= (- ?x122758 (* (* 2.0 l_0_19_438) l_0_19_450)) 0.0))))))))))))))))))))
(assert
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119692 (* ?x119181 l_0_19_300)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119690 (* ?x119178 l_0_19_299)))
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x122817 (* ?x116548 l_0_19_269)))
 (let ((?x116545 (* 2.0 l_0_19_254)))
 (let ((?x122815 (* ?x116545 l_0_19_268)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117120 (* ?x116968 l_0_19_192)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117118 (* ?x116965 l_0_19_191)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117116 (* ?x116962 l_0_19_156)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x117114 (* ?x117113 l_0_19_155)))
 (let ((?x122820 (- (- (+ (+ (- (- (+ ?x117114 ?x117116) ?x117118) ?x117120) ?x122815) ?x122817) ?x119690) ?x119692)))
 (let ((?x122826 (- (- ?x122820 (* (* 2.0 l_0_19_335) l_0_19_340)) (* (* 2.0 l_0_19_336) l_0_19_341))))
 (let ((?x122832 (- (- ?x122826 (* (* 2.0 l_0_19_337) l_0_19_342)) (* (* 2.0 l_0_19_338) l_0_19_343))))
 (let ((?x122838 (- (- ?x122832 (* (* 2.0 l_0_19_339) l_0_19_344)) (* (* 2.0 l_0_19_371) l_0_19_376))))
 (let ((?x122844 (- (- ?x122838 (* (* 2.0 l_0_19_372) l_0_19_377)) (* (* 2.0 l_0_19_373) l_0_19_378))))
 (let ((?x122850 (- (- ?x122844 (* (* 2.0 l_0_19_374) l_0_19_379)) (* (* 2.0 l_0_19_375) l_0_19_380))))
 (let ((?x122856 (- (- ?x122850 (* (* 2.0 l_0_19_407) l_0_19_412)) (* (* 2.0 l_0_19_408) l_0_19_413))))
 (let ((?x122862 (- (- ?x122856 (* (* 2.0 l_0_19_409) l_0_19_414)) (* (* 2.0 l_0_19_410) l_0_19_415))))
 (let ((?x122868 (- (- ?x122862 (* (* 2.0 l_0_19_411) l_0_19_416)) (* (* 2.0 l_0_19_443) l_0_19_448))))
 (let ((?x122874 (- (- ?x122868 (* (* 2.0 l_0_19_444) l_0_19_449)) (* (* 2.0 l_0_19_445) l_0_19_450))))
 (let ((?x122880 (- (- ?x122874 (* (* 2.0 l_0_19_446) l_0_19_451)) (* (* 2.0 l_0_19_447) l_0_19_452))))
 (= ?x122880 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x123006 (* l_0_19_453 l_0_19_453)))
 (let ((?x123004 (* l_0_19_452 l_0_19_452)))
 (let ((?x123002 (* l_0_19_451 l_0_19_451)))
 (let ((?x123000 (* l_0_19_450 l_0_19_450)))
 (let ((?x122998 (* l_0_19_449 l_0_19_449)))
 (let ((?x122996 (* l_0_19_448 l_0_19_448)))
 (let ((?x122994 (* l_0_19_417 l_0_19_417)))
 (let ((?x122992 (* l_0_19_416 l_0_19_416)))
 (let ((?x122990 (* l_0_19_415 l_0_19_415)))
 (let ((?x122988 (* l_0_19_414 l_0_19_414)))
 (let ((?x122986 (* l_0_19_413 l_0_19_413)))
 (let ((?x122984 (* l_0_19_412 l_0_19_412)))
 (let ((?x122982 (* l_0_19_381 l_0_19_381)))
 (let ((?x122980 (* l_0_19_380 l_0_19_380)))
 (let ((?x122978 (* l_0_19_379 l_0_19_379)))
 (let ((?x122976 (* l_0_19_378 l_0_19_378)))
 (let ((?x122974 (* l_0_19_377 l_0_19_377)))
 (let ((?x122972 (* l_0_19_376 l_0_19_376)))
 (let ((?x122970 (* l_0_19_345 l_0_19_345)))
 (let ((?x122968 (* l_0_19_344 l_0_19_344)))
 (let ((?x122966 (* l_0_19_343 l_0_19_343)))
 (let ((?x122964 (* l_0_19_342 l_0_19_342)))
 (let ((?x122962 (* l_0_19_341 l_0_19_341)))
 (let ((?x122960 (* l_0_19_340 l_0_19_340)))
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119791 (* ?x119181 l_0_19_305)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119788 (* ?x119178 l_0_19_304)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117174 (* ?x116968 l_0_19_197)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117172 (* ?x116965 l_0_19_196)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x93815 (* ?x116962 l_0_19_161)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x121100 (* ?x117113 l_0_19_160)))
 (let ((?x122963 (- (- (- (- (- (- (+ ?x121100 ?x93815) ?x117172) ?x117174) ?x119788) ?x119791) ?x122960) ?x122962)))
 (let ((?x122977 (- (- (- (- (- (- (- ?x122963 ?x122964) ?x122966) ?x122968) ?x122970) ?x122972) ?x122974) ?x122976)))
 (let ((?x122991 (- (- (- (- (- (- (- ?x122977 ?x122978) ?x122980) ?x122982) ?x122984) ?x122986) ?x122988) ?x122990)))
 (let ((?x123005 (- (- (- (- (- (- (- ?x122991 ?x122992) ?x122994) ?x122996) ?x122998) ?x123000) ?x123002) ?x123004)))
 (= (- ?x123005 ?x123006) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119856 (* ?x119181 l_0_19_311)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119854 (* ?x119178 l_0_19_310)))
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x122817 (* ?x116548 l_0_19_269)))
 (let ((?x116545 (* 2.0 l_0_19_254)))
 (let ((?x122815 (* ?x116545 l_0_19_268)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117266 (* ?x116968 l_0_19_203)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117264 (* ?x116965 l_0_19_202)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117262 (* ?x116962 l_0_19_167)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x117259 (* ?x117113 l_0_19_166)))
 (let ((?x123048 (- (- (- (- (- (- (+ ?x117259 ?x117262) ?x117264) ?x117266) ?x122815) ?x122817) ?x119854) ?x119856)))
 (let ((?x123054 (- (- ?x123048 (* (* 2.0 l_0_19_340) l_0_19_346)) (* (* 2.0 l_0_19_341) l_0_19_347))))
 (let ((?x123060 (- (- ?x123054 (* (* 2.0 l_0_19_342) l_0_19_348)) (* (* 2.0 l_0_19_343) l_0_19_349))))
 (let ((?x123066 (- (- ?x123060 (* (* 2.0 l_0_19_344) l_0_19_350)) (* (* 2.0 l_0_19_345) l_0_19_351))))
 (let ((?x123072 (- (- ?x123066 (* (* 2.0 l_0_19_376) l_0_19_382)) (* (* 2.0 l_0_19_377) l_0_19_383))))
 (let ((?x123078 (- (- ?x123072 (* (* 2.0 l_0_19_378) l_0_19_384)) (* (* 2.0 l_0_19_379) l_0_19_385))))
 (let ((?x123084 (- (- ?x123078 (* (* 2.0 l_0_19_380) l_0_19_386)) (* (* 2.0 l_0_19_381) l_0_19_387))))
 (let ((?x123090 (- (- ?x123084 (* (* 2.0 l_0_19_412) l_0_19_418)) (* (* 2.0 l_0_19_413) l_0_19_419))))
 (let ((?x123096 (- (- ?x123090 (* (* 2.0 l_0_19_414) l_0_19_420)) (* (* 2.0 l_0_19_415) l_0_19_421))))
 (let ((?x123102 (- (- ?x123096 (* (* 2.0 l_0_19_416) l_0_19_422)) (* (* 2.0 l_0_19_417) l_0_19_423))))
 (let ((?x123108 (- (- ?x123102 (* (* 2.0 l_0_19_448) l_0_19_454)) (* (* 2.0 l_0_19_449) l_0_19_455))))
 (let ((?x123114 (- (- ?x123108 (* (* 2.0 l_0_19_450) l_0_19_456)) (* (* 2.0 l_0_19_451) l_0_19_457))))
 (let ((?x123120 (- (- ?x123114 (* (* 2.0 l_0_19_452) l_0_19_458)) (* (* 2.0 l_0_19_453) l_0_19_459))))
 (= ?x123120 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x119181 (* 2.0 l_0_19_291)))
 (let ((?x119955 (* ?x119181 l_0_19_318)))
 (let ((?x119178 (* 2.0 l_0_19_290)))
 (let ((?x119953 (* ?x119178 l_0_19_317)))
 (let ((?x116968 (* 2.0 l_0_19_183)))
 (let ((?x117354 (* ?x116968 l_0_19_210)))
 (let ((?x116965 (* 2.0 l_0_19_182)))
 (let ((?x117352 (* ?x116965 l_0_19_209)))
 (let ((?x116962 (* 2.0 l_0_19_147)))
 (let ((?x117350 (* ?x116962 l_0_19_174)))
 (let ((?x117113 (* 2.0 l_0_19_146)))
 (let ((?x98527 (* ?x117113 l_0_19_173)))
 (let ((?x123200 (- (- (- (+ ?x98527 ?x117350) ?x117352) ?x117354) (* (* 2.0 l_0_19_218) l_0_19_232))))
 (let ((?x123206 (- (- (- (- ?x123200 (* (* 2.0 l_0_19_219) l_0_19_233)) ?x119953) ?x119955) (* (* 2.0 l_0_19_340) l_0_19_353))))
 (let ((?x123210 (- (- ?x123206 (* (* 2.0 l_0_19_341) l_0_19_354)) (* (* 2.0 l_0_19_342) l_0_19_355))))
 (let ((?x123214 (- (- ?x123210 (* (* 2.0 l_0_19_343) l_0_19_356)) (* (* 2.0 l_0_19_344) l_0_19_357))))
 (let ((?x123218 (- (- ?x123214 (* (* 2.0 l_0_19_345) l_0_19_358)) (* (* 2.0 l_0_19_376) l_0_19_389))))
 (let ((?x123222 (- (- ?x123218 (* (* 2.0 l_0_19_377) l_0_19_390)) (* (* 2.0 l_0_19_378) l_0_19_391))))
 (let ((?x123226 (- (- ?x123222 (* (* 2.0 l_0_19_379) l_0_19_392)) (* (* 2.0 l_0_19_380) l_0_19_393))))
 (let ((?x123230 (- (- ?x123226 (* (* 2.0 l_0_19_381) l_0_19_394)) (* (* 2.0 l_0_19_412) l_0_19_425))))
 (let ((?x123234 (- (- ?x123230 (* (* 2.0 l_0_19_413) l_0_19_426)) (* (* 2.0 l_0_19_414) l_0_19_427))))
 (let ((?x123238 (- (- ?x123234 (* (* 2.0 l_0_19_415) l_0_19_428)) (* (* 2.0 l_0_19_416) l_0_19_429))))
 (let ((?x123242 (- (- ?x123238 (* (* 2.0 l_0_19_417) l_0_19_430)) (* (* 2.0 l_0_19_448) l_0_19_461))))
 (let ((?x123246 (- (- ?x123242 (* (* 2.0 l_0_19_449) l_0_19_462)) (* (* 2.0 l_0_19_450) l_0_19_463))))
 (let ((?x123250 (- (- ?x123246 (* (* 2.0 l_0_19_451) l_0_19_464)) (* (* 2.0 l_0_19_452) l_0_19_465))))
 (= (- ?x123250 (* (* 2.0 l_0_19_453) l_0_19_466)) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x17210 (* l_0_19_294 l_0_19_294)))
 (let ((?x75848 (* l_0_19_293 l_0_19_293)))
 (let ((?x54187 (* l_0_19_292 l_0_19_292)))
 (let ((?x117415 (* l_0_19_186 l_0_19_186)))
 (let ((?x117413 (* l_0_19_185 l_0_19_185)))
 (let ((?x117411 (* l_0_19_184 l_0_19_184)))
 (let ((?x117409 (* l_0_19_150 l_0_19_150)))
 (let ((?x123330 (+ (+ (* l_0_19_148 l_0_19_148) (* l_0_19_149 l_0_19_149)) ?x117409)))
 (= (- (- (- (- (- (- ?x123330 ?x117411) ?x117413) ?x117415) ?x54187) ?x75848) ?x17210) 0.0))))))))))
(assert
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x120078 (* ?x116668 l_0_19_301)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x120076 (* ?x116665 l_0_19_300)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x120074 (* ?x93499 l_0_19_299)))
 (let ((?x117134 (* 2.0 l_0_19_258)))
 (let ((?x123359 (* ?x117134 l_0_19_270)))
 (let ((?x117131 (* 2.0 l_0_19_257)))
 (let ((?x123357 (* ?x117131 l_0_19_269)))
 (let ((?x117128 (* 2.0 l_0_19_256)))
 (let ((?x123355 (* ?x117128 l_0_19_268)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117505 (* ?x117182 l_0_19_193)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117503 (* ?x117179 l_0_19_192)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117501 (* ?x117176 l_0_19_191)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117499 (* ?x117163 l_0_19_157)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117497 (* ?x117160 l_0_19_156)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117495 (* ?x117157 l_0_19_155)))
 (let ((?x123358 (+ (+ (- (- (- (+ (+ ?x117495 ?x117497) ?x117499) ?x117501) ?x117503) ?x117505) ?x123355) ?x123357)))
 (= (- (- (- (+ ?x123358 ?x123359) ?x120074) ?x120076) ?x120078) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x120113 (* ?x116668 l_0_19_306)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x120110 (* ?x116665 l_0_19_305)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x120107 (* ?x93499 l_0_19_304)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117533 (* ?x117182 l_0_19_198)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117531 (* ?x117179 l_0_19_197)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117529 (* ?x117176 l_0_19_196)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x21791 (* ?x117163 l_0_19_162)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x94098 (* ?x117160 l_0_19_161)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x118480 (* ?x117157 l_0_19_160)))
 (let ((?x123388 (- (- (- (- (- (+ (+ ?x118480 ?x94098) ?x21791) ?x117529) ?x117531) ?x117533) ?x120107) ?x120110)))
 (= (- ?x123388 ?x120113) 0.0)))))))))))))))))))))
(assert
 (let ((?x116668 (* 2.0 l_0_19_294)))
 (let ((?x120139 (* ?x116668 l_0_19_312)))
 (let ((?x116665 (* 2.0 l_0_19_293)))
 (let ((?x120137 (* ?x116665 l_0_19_311)))
 (let ((?x93499 (* 2.0 l_0_19_292)))
 (let ((?x120135 (* ?x93499 l_0_19_310)))
 (let ((?x117134 (* 2.0 l_0_19_258)))
 (let ((?x123359 (* ?x117134 l_0_19_270)))
 (let ((?x117131 (* 2.0 l_0_19_257)))
 (let ((?x123357 (* ?x117131 l_0_19_269)))
 (let ((?x117128 (* 2.0 l_0_19_256)))
 (let ((?x123355 (* ?x117128 l_0_19_268)))
 (let ((?x117182 (* 2.0 l_0_19_186)))
 (let ((?x117594 (* ?x117182 l_0_19_204)))
 (let ((?x117179 (* 2.0 l_0_19_185)))
 (let ((?x117592 (* ?x117179 l_0_19_203)))
 (let ((?x117176 (* 2.0 l_0_19_184)))
 (let ((?x117590 (* ?x117176 l_0_19_202)))
 (let ((?x117163 (* 2.0 l_0_19_150)))
 (let ((?x117587 (* ?x117163 l_0_19_168)))
 (let ((?x117160 (* 2.0 l_0_19_149)))
 (let ((?x117584 (* ?x117160 l_0_19_167)))
 (let ((?x117157 (* 2.0 l_0_19_148)))
 (let ((?x117581 (* ?x117157 l_0_19_166)))
 (let ((?x123407 (- (- (- (- (- (+ (+ ?x117581 ?x117584) ?x117587) ?x117590) ?x117592) ?x117594) ?x123355) ?x123357)))
 (= (- (- (- (- ?x123407 ?x123359) ?x120135) ?x120137) ?x120139) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x120274 (* l_0_19_303 l_0_19_303)))
 (let ((?x120272 (* l_0_19_302 l_0_19_302)))
 (let ((?x120270 (* l_0_19_301 l_0_19_301)))
 (let ((?x120268 (* l_0_19_300 l_0_19_300)))
 (let ((?x120266 (* l_0_19_299 l_0_19_299)))
 (let ((?x121000 (* 2.0 l_0_19_267)))
 (let ((?x123433 (* ?x121000 l_0_19_272)))
 (let ((?x120997 (* 2.0 l_0_19_266)))
 (let ((?x123431 (* ?x120997 l_0_19_271)))
 (let ((?x120994 (* 2.0 l_0_19_265)))
 (let ((?x123429 (* ?x120994 l_0_19_270)))
 (let ((?x120991 (* 2.0 l_0_19_264)))
 (let ((?x123427 (* ?x120991 l_0_19_269)))
 (let ((?x120988 (* 2.0 l_0_19_263)))
 (let ((?x123425 (* ?x120988 l_0_19_268)))
 (let ((?x118045 (* l_0_19_195 l_0_19_195)))
 (let ((?x118043 (* l_0_19_194 l_0_19_194)))
 (let ((?x118041 (* l_0_19_193 l_0_19_193)))
 (let ((?x118039 (* l_0_19_192 l_0_19_192)))
 (let ((?x118037 (* l_0_19_191 l_0_19_191)))
 (let ((?x118035 (* l_0_19_159 l_0_19_159)))
 (let ((?x118033 (* l_0_19_158 l_0_19_158)))
 (let ((?x118031 (* l_0_19_157 l_0_19_157)))
 (let ((?x31318 (+ (+ (* l_0_19_155 l_0_19_155) (* l_0_19_156 l_0_19_156)) ?x118031)))
 (let ((?x123424 (- (- (- (- (- (+ (+ ?x31318 ?x118033) ?x118035) ?x118037) ?x118039) ?x118041) ?x118043) ?x118045)))
 (let ((?x123436 (- (- (+ (+ (+ (+ (+ ?x123424 ?x123425) ?x123427) ?x123429) ?x123431) ?x123433) ?x120266) ?x120268)))
 (= (- (- (- ?x123436 ?x120270) ?x120272) ?x120274) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x120323 (* 2.0 l_0_19_303)))
 (let ((?x120324 (* ?x120323 l_0_19_308)))
 (let ((?x120320 (* 2.0 l_0_19_302)))
 (let ((?x120321 (* ?x120320 l_0_19_307)))
 (let ((?x120317 (* 2.0 l_0_19_301)))
 (let ((?x120318 (* ?x120317 l_0_19_306)))
 (let ((?x120314 (* 2.0 l_0_19_300)))
 (let ((?x120315 (* ?x120314 l_0_19_305)))
 (let ((?x120311 (* 2.0 l_0_19_299)))
 (let ((?x120312 (* ?x120311 l_0_19_304)))
 (let ((?x123486 (* l_0_19_273 l_0_19_273)))
 (let ((?x123484 (* l_0_19_272 l_0_19_272)))
 (let ((?x123482 (* l_0_19_271 l_0_19_271)))
 (let ((?x123480 (* l_0_19_270 l_0_19_270)))
 (let ((?x123478 (* l_0_19_269 l_0_19_269)))
 (let ((?x123476 (* l_0_19_268 l_0_19_268)))
 (let ((?x118126 (* 2.0 l_0_19_195)))
 (let ((?x118127 (* ?x118126 l_0_19_200)))
 (let ((?x118123 (* 2.0 l_0_19_194)))
 (let ((?x118124 (* ?x118123 l_0_19_199)))
 (let ((?x118120 (* 2.0 l_0_19_193)))
 (let ((?x118121 (* ?x118120 l_0_19_198)))
 (let ((?x118117 (* 2.0 l_0_19_192)))
 (let ((?x118118 (* ?x118117 l_0_19_197)))
 (let ((?x118114 (* 2.0 l_0_19_191)))
 (let ((?x118115 (* ?x118114 l_0_19_196)))
 (let ((?x118111 (* 2.0 l_0_19_159)))
 (let ((?x118112 (* ?x118111 l_0_19_164)))
 (let ((?x118108 (* 2.0 l_0_19_158)))
 (let ((?x118109 (* ?x118108 l_0_19_163)))
 (let ((?x118105 (* 2.0 l_0_19_157)))
 (let ((?x118106 (* ?x118105 l_0_19_162)))
 (let ((?x118102 (* 2.0 l_0_19_156)))
 (let ((?x118103 (* ?x118102 l_0_19_161)))
 (let ((?x118099 (* 2.0 l_0_19_155)))
 (let ((?x118100 (* ?x118099 l_0_19_160)))
 (let ((?x123473 (- (- (- (+ (+ (+ (+ ?x118100 ?x118103) ?x118106) ?x118109) ?x118112) ?x118115) ?x118118) ?x118121)))
 (let ((?x123485 (+ (+ (+ (+ (+ (- (- ?x123473 ?x118124) ?x118127) ?x123476) ?x123478) ?x123480) ?x123482) ?x123484)))
 (= (- (- (- (- (- (+ ?x123485 ?x123486) ?x120312) ?x120315) ?x120318) ?x120321) ?x120324) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x120323 (* 2.0 l_0_19_303)))
 (let ((?x120373 (* ?x120323 l_0_19_314)))
 (let ((?x120320 (* 2.0 l_0_19_302)))
 (let ((?x120371 (* ?x120320 l_0_19_313)))
 (let ((?x120317 (* 2.0 l_0_19_301)))
 (let ((?x120369 (* ?x120317 l_0_19_312)))
 (let ((?x120314 (* 2.0 l_0_19_300)))
 (let ((?x120367 (* ?x120314 l_0_19_311)))
 (let ((?x120311 (* 2.0 l_0_19_299)))
 (let ((?x120365 (* ?x120311 l_0_19_310)))
 (let ((?x121150 (* 2.0 l_0_19_273)))
 (let ((?x123540 (* ?x121150 l_0_19_279)))
 (let ((?x121147 (* 2.0 l_0_19_272)))
 (let ((?x123538 (* ?x121147 l_0_19_278)))
 (let ((?x121144 (* 2.0 l_0_19_271)))
 (let ((?x123536 (* ?x121144 l_0_19_277)))
 (let ((?x121141 (* 2.0 l_0_19_270)))
 (let ((?x123534 (* ?x121141 l_0_19_276)))
 (let ((?x121138 (* 2.0 l_0_19_269)))
 (let ((?x123532 (* ?x121138 l_0_19_275)))
 (let ((?x121135 (* 2.0 l_0_19_268)))
 (let ((?x123530 (* ?x121135 l_0_19_274)))
 (let ((?x121000 (* 2.0 l_0_19_267)))
 (let ((?x123433 (* ?x121000 l_0_19_272)))
 (let ((?x120997 (* 2.0 l_0_19_266)))
 (let ((?x123431 (* ?x120997 l_0_19_271)))
 (let ((?x120994 (* 2.0 l_0_19_265)))
 (let ((?x123429 (* ?x120994 l_0_19_270)))
 (let ((?x120991 (* 2.0 l_0_19_264)))
 (let ((?x123427 (* ?x120991 l_0_19_269)))
 (let ((?x120988 (* 2.0 l_0_19_263)))
 (let ((?x123425 (* ?x120988 l_0_19_268)))
 (let ((?x118126 (* 2.0 l_0_19_195)))
 (let ((?x118222 (* ?x118126 l_0_19_206)))
 (let ((?x118123 (* 2.0 l_0_19_194)))
 (let ((?x118220 (* ?x118123 l_0_19_205)))
 (let ((?x118120 (* 2.0 l_0_19_193)))
 (let ((?x118218 (* ?x118120 l_0_19_204)))
 (let ((?x118117 (* 2.0 l_0_19_192)))
 (let ((?x118216 (* ?x118117 l_0_19_203)))
 (let ((?x118114 (* 2.0 l_0_19_191)))
 (let ((?x118214 (* ?x118114 l_0_19_202)))
 (let ((?x118111 (* 2.0 l_0_19_159)))
 (let ((?x118212 (* ?x118111 l_0_19_170)))
 (let ((?x118108 (* 2.0 l_0_19_158)))
 (let ((?x118210 (* ?x118108 l_0_19_169)))
 (let ((?x118105 (* 2.0 l_0_19_157)))
 (let ((?x118208 (* ?x118105 l_0_19_168)))
 (let ((?x118102 (* 2.0 l_0_19_156)))
 (let ((?x118206 (* ?x118102 l_0_19_167)))
 (let ((?x118099 (* 2.0 l_0_19_155)))
 (let ((?x118204 (* ?x118099 l_0_19_166)))
 (let ((?x123522 (- (- (- (+ (+ (+ (+ ?x118204 ?x118206) ?x118208) ?x118210) ?x118212) ?x118214) ?x118216) ?x118218)))
 (let ((?x123529 (- (- (- (- (- (- (- ?x123522 ?x118220) ?x118222) ?x123425) ?x123427) ?x123429) ?x123431) ?x123433)))
 (let ((?x123542 (- (+ (+ (+ (+ (+ (+ ?x123529 ?x123530) ?x123532) ?x123534) ?x123536) ?x123538) ?x123540) ?x120365)))
 (= (- (- (- (- ?x123542 ?x120367) ?x120369) ?x120371) ?x120373) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x120323 (* 2.0 l_0_19_303)))
 (let ((?x120444 (* ?x120323 l_0_19_321)))
 (let ((?x120320 (* 2.0 l_0_19_302)))
 (let ((?x120442 (* ?x120320 l_0_19_320)))
 (let ((?x120317 (* 2.0 l_0_19_301)))
 (let ((?x120440 (* ?x120317 l_0_19_319)))
 (let ((?x120314 (* 2.0 l_0_19_300)))
 (let ((?x120438 (* ?x120314 l_0_19_318)))
 (let ((?x120311 (* 2.0 l_0_19_299)))
 (let ((?x120436 (* ?x120311 l_0_19_317)))
 (let ((?x121150 (* 2.0 l_0_19_273)))
 (let ((?x121151 (* ?x121150 l_0_19_286)))
 (let ((?x121147 (* 2.0 l_0_19_272)))
 (let ((?x121148 (* ?x121147 l_0_19_285)))
 (let ((?x121144 (* 2.0 l_0_19_271)))
 (let ((?x121145 (* ?x121144 l_0_19_284)))
 (let ((?x121141 (* 2.0 l_0_19_270)))
 (let ((?x121142 (* ?x121141 l_0_19_283)))
 (let ((?x121138 (* 2.0 l_0_19_269)))
 (let ((?x121139 (* ?x121138 l_0_19_282)))
 (let ((?x121135 (* 2.0 l_0_19_268)))
 (let ((?x121136 (* ?x121135 l_0_19_281)))
 (let ((?x118126 (* 2.0 l_0_19_195)))
 (let ((?x118311 (* ?x118126 l_0_19_213)))
 (let ((?x118123 (* 2.0 l_0_19_194)))
 (let ((?x118309 (* ?x118123 l_0_19_212)))
 (let ((?x118120 (* 2.0 l_0_19_193)))
 (let ((?x118307 (* ?x118120 l_0_19_211)))
 (let ((?x118117 (* 2.0 l_0_19_192)))
 (let ((?x118305 (* ?x118117 l_0_19_210)))
 (let ((?x118114 (* 2.0 l_0_19_191)))
 (let ((?x118303 (* ?x118114 l_0_19_209)))
 (let ((?x118111 (* 2.0 l_0_19_159)))
 (let ((?x118301 (* ?x118111 l_0_19_177)))
 (let ((?x118108 (* 2.0 l_0_19_158)))
 (let ((?x118299 (* ?x118108 l_0_19_176)))
 (let ((?x118105 (* 2.0 l_0_19_157)))
 (let ((?x118297 (* ?x118105 l_0_19_175)))
 (let ((?x118102 (* 2.0 l_0_19_156)))
 (let ((?x118295 (* ?x118102 l_0_19_174)))
 (let ((?x118099 (* 2.0 l_0_19_155)))
 (let ((?x118293 (* ?x118099 l_0_19_173)))
 (let ((?x123579 (- (- (- (+ (+ (+ (+ ?x118293 ?x118295) ?x118297) ?x118299) ?x118301) ?x118303) ?x118305) ?x118307)))
 (let ((?x123585 (- (- (- (- ?x123579 ?x118309) ?x118311) (* (* 2.0 l_0_19_227) l_0_19_232)) (* (* 2.0 l_0_19_228) l_0_19_233))))
 (let ((?x123589 (- (- ?x123585 (* (* 2.0 l_0_19_229) l_0_19_234)) (* (* 2.0 l_0_19_230) l_0_19_235))))
 (let ((?x123594 (+ (+ (+ (- ?x123589 (* (* 2.0 l_0_19_231) l_0_19_236)) ?x121136) ?x121139) ?x121142)))
 (let ((?x123601 (- (- (- (- (+ (+ (+ ?x123594 ?x121145) ?x121148) ?x121151) ?x120436) ?x120438) ?x120440) ?x120442)))
 (= (- ?x123601 ?x120444) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x120522 (* l_0_19_309 l_0_19_309)))
 (let ((?x120520 (* l_0_19_308 l_0_19_308)))
 (let ((?x120518 (* l_0_19_307 l_0_19_307)))
 (let ((?x120516 (* l_0_19_306 l_0_19_306)))
 (let ((?x120514 (* l_0_19_305 l_0_19_305)))
 (let ((?x120512 (* l_0_19_304 l_0_19_304)))
 (let ((?x118416 (* l_0_19_201 l_0_19_201)))
 (let ((?x118414 (* l_0_19_200 l_0_19_200)))
 (let ((?x118410 (* l_0_19_199 l_0_19_199)))
 (let ((?x118408 (* l_0_19_198 l_0_19_198)))
 (let ((?x118406 (* l_0_19_197 l_0_19_197)))
 (let ((?x118404 (* l_0_19_196 l_0_19_196)))
 (let ((?x118396 (* l_0_19_165 l_0_19_165)))
 (let ((?x118381 (* l_0_19_164 l_0_19_164)))
 (let ((?x118378 (* l_0_19_163 l_0_19_163)))
 (let ((?x118374 (* l_0_19_162 l_0_19_162)))
 (let ((?x58497 (+ (+ (* l_0_19_160 l_0_19_160) (* l_0_19_161 l_0_19_161)) ?x118374)))
 (let ((?x123629 (- (- (- (- (+ (+ (+ ?x58497 ?x118378) ?x118381) ?x118396) ?x118404) ?x118406) ?x118408) ?x118410)))
 (let ((?x123636 (- (- (- (- (- (- (- ?x123629 ?x118414) ?x118416) ?x120512) ?x120514) ?x120516) ?x120518) ?x120520)))
 (= (- ?x123636 ?x120522) 0.0)))))))))))))))))))))
(assert
 (let ((?x120567 (* 2.0 l_0_19_309)))
 (let ((?x120568 (* ?x120567 l_0_19_315)))
 (let ((?x120564 (* 2.0 l_0_19_308)))
 (let ((?x120565 (* ?x120564 l_0_19_314)))
 (let ((?x120561 (* 2.0 l_0_19_307)))
 (let ((?x120562 (* ?x120561 l_0_19_313)))
 (let ((?x120558 (* 2.0 l_0_19_306)))
 (let ((?x120559 (* ?x120558 l_0_19_312)))
 (let ((?x120555 (* 2.0 l_0_19_305)))
 (let ((?x120556 (* ?x120555 l_0_19_311)))
 (let ((?x120552 (* 2.0 l_0_19_304)))
 (let ((?x120553 (* ?x120552 l_0_19_310)))
 (let ((?x123486 (* l_0_19_273 l_0_19_273)))
 (let ((?x123484 (* l_0_19_272 l_0_19_272)))
 (let ((?x123482 (* l_0_19_271 l_0_19_271)))
 (let ((?x123480 (* l_0_19_270 l_0_19_270)))
 (let ((?x123478 (* l_0_19_269 l_0_19_269)))
 (let ((?x123476 (* l_0_19_268 l_0_19_268)))
 (let ((?x118529 (* 2.0 l_0_19_201)))
 (let ((?x118530 (* ?x118529 l_0_19_207)))
 (let ((?x118526 (* 2.0 l_0_19_200)))
 (let ((?x118527 (* ?x118526 l_0_19_206)))
 (let ((?x118520 (* 2.0 l_0_19_199)))
 (let ((?x118521 (* ?x118520 l_0_19_205)))
 (let ((?x118517 (* 2.0 l_0_19_198)))
 (let ((?x118518 (* ?x118517 l_0_19_204)))
 (let ((?x118514 (* 2.0 l_0_19_197)))
 (let ((?x118515 (* ?x118514 l_0_19_203)))
 (let ((?x118511 (* 2.0 l_0_19_196)))
 (let ((?x118512 (* ?x118511 l_0_19_202)))
 (let ((?x118501 (* 2.0 l_0_19_165)))
 (let ((?x118502 (* ?x118501 l_0_19_171)))
 (let ((?x118498 (* 2.0 l_0_19_164)))
 (let ((?x118499 (* ?x118498 l_0_19_170)))
 (let ((?x118495 (* 2.0 l_0_19_163)))
 (let ((?x118496 (* ?x118495 l_0_19_169)))
 (let ((?x118492 (* 2.0 l_0_19_162)))
 (let ((?x118493 (* ?x118492 l_0_19_168)))
 (let ((?x118489 (* 2.0 l_0_19_161)))
 (let ((?x118490 (* ?x118489 l_0_19_167)))
 (let ((?x118486 (* 2.0 l_0_19_160)))
 (let ((?x118487 (* ?x118486 l_0_19_166)))
 (let ((?x79615 (- (- (+ (+ (+ (+ (+ ?x118487 ?x118490) ?x118493) ?x118496) ?x118499) ?x118502) ?x118512) ?x118515)))
 (let ((?x123648 (- (- (- (- (- (- (- ?x79615 ?x118518) ?x118521) ?x118527) ?x118530) ?x123476) ?x123478) ?x123480)))
 (let ((?x123655 (- (- (- (- (- (- (- ?x123648 ?x123482) ?x123484) ?x123486) ?x120553) ?x120556) ?x120559) ?x120562)))
 (= (- (- ?x123655 ?x120565) ?x120568) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x120567 (* 2.0 l_0_19_309)))
 (let ((?x120624 (* ?x120567 l_0_19_322)))
 (let ((?x120564 (* 2.0 l_0_19_308)))
 (let ((?x120622 (* ?x120564 l_0_19_321)))
 (let ((?x120561 (* 2.0 l_0_19_307)))
 (let ((?x120620 (* ?x120561 l_0_19_320)))
 (let ((?x120558 (* 2.0 l_0_19_306)))
 (let ((?x120618 (* ?x120558 l_0_19_319)))
 (let ((?x120555 (* 2.0 l_0_19_305)))
 (let ((?x120616 (* ?x120555 l_0_19_318)))
 (let ((?x120552 (* 2.0 l_0_19_304)))
 (let ((?x120614 (* ?x120552 l_0_19_317)))
 (let ((?x123669 (* l_0_19_237 l_0_19_237)))
 (let ((?x123667 (* l_0_19_236 l_0_19_236)))
 (let ((?x100830 (* l_0_19_235 l_0_19_235)))
 (let ((?x100851 (* l_0_19_234 l_0_19_234)))
 (let ((?x100854 (* l_0_19_233 l_0_19_233)))
 (let ((?x100857 (* l_0_19_232 l_0_19_232)))
 (let ((?x118529 (* 2.0 l_0_19_201)))
 (let ((?x118687 (* ?x118529 l_0_19_214)))
 (let ((?x118526 (* 2.0 l_0_19_200)))
 (let ((?x118685 (* ?x118526 l_0_19_213)))
 (let ((?x118520 (* 2.0 l_0_19_199)))
 (let ((?x118681 (* ?x118520 l_0_19_212)))
 (let ((?x118517 (* 2.0 l_0_19_198)))
 (let ((?x118679 (* ?x118517 l_0_19_211)))
 (let ((?x118514 (* 2.0 l_0_19_197)))
 (let ((?x118677 (* ?x118514 l_0_19_210)))
 (let ((?x118511 (* 2.0 l_0_19_196)))
 (let ((?x118675 (* ?x118511 l_0_19_209)))
 (let ((?x118501 (* 2.0 l_0_19_165)))
 (let ((?x118667 (* ?x118501 l_0_19_178)))
 (let ((?x118498 (* 2.0 l_0_19_164)))
 (let ((?x118665 (* ?x118498 l_0_19_177)))
 (let ((?x118495 (* 2.0 l_0_19_163)))
 (let ((?x118663 (* ?x118495 l_0_19_176)))
 (let ((?x118492 (* 2.0 l_0_19_162)))
 (let ((?x118661 (* ?x118492 l_0_19_175)))
 (let ((?x118489 (* 2.0 l_0_19_161)))
 (let ((?x118659 (* ?x118489 l_0_19_174)))
 (let ((?x118486 (* 2.0 l_0_19_160)))
 (let ((?x118657 (* ?x118486 l_0_19_173)))
 (let ((?x32272 (- (- (+ (+ (+ (+ (+ ?x118657 ?x118659) ?x118661) ?x118663) ?x118665) ?x118667) ?x118675) ?x118677)))
 (let ((?x100844 (- (- (- (- (- (- (- ?x32272 ?x118679) ?x118681) ?x118685) ?x118687) ?x100857) ?x100854) ?x100851)))
 (let ((?x123674 (- (- (- (- (- (- (- ?x100844 ?x100830) ?x123667) ?x123669) ?x120614) ?x120616) ?x120618) ?x120620)))
 (= (- (- ?x123674 ?x120622) ?x120624) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x120680 (* l_0_19_316 l_0_19_316)))
 (let ((?x120678 (* l_0_19_315 l_0_19_315)))
 (let ((?x120676 (* l_0_19_314 l_0_19_314)))
 (let ((?x120674 (* l_0_19_313 l_0_19_313)))
 (let ((?x120672 (* l_0_19_312 l_0_19_312)))
 (let ((?x120670 (* l_0_19_311 l_0_19_311)))
 (let ((?x120668 (* l_0_19_310 l_0_19_310)))
 (let ((?x121150 (* 2.0 l_0_19_273)))
 (let ((?x123540 (* ?x121150 l_0_19_279)))
 (let ((?x121147 (* 2.0 l_0_19_272)))
 (let ((?x123538 (* ?x121147 l_0_19_278)))
 (let ((?x121144 (* 2.0 l_0_19_271)))
 (let ((?x123536 (* ?x121144 l_0_19_277)))
 (let ((?x121141 (* 2.0 l_0_19_270)))
 (let ((?x123534 (* ?x121141 l_0_19_276)))
 (let ((?x121138 (* 2.0 l_0_19_269)))
 (let ((?x123532 (* ?x121138 l_0_19_275)))
 (let ((?x121135 (* 2.0 l_0_19_268)))
 (let ((?x123530 (* ?x121135 l_0_19_274)))
 (let ((?x118786 (* l_0_19_208 l_0_19_208)))
 (let ((?x118784 (* l_0_19_207 l_0_19_207)))
 (let ((?x118782 (* l_0_19_206 l_0_19_206)))
 (let ((?x118780 (* l_0_19_205 l_0_19_205)))
 (let ((?x118778 (* l_0_19_204 l_0_19_204)))
 (let ((?x118776 (* l_0_19_203 l_0_19_203)))
 (let ((?x118774 (* l_0_19_202 l_0_19_202)))
 (let ((?x118772 (* l_0_19_172 l_0_19_172)))
 (let ((?x118770 (* l_0_19_171 l_0_19_171)))
 (let ((?x118768 (* l_0_19_170 l_0_19_170)))
 (let ((?x118766 (* l_0_19_169 l_0_19_169)))
 (let ((?x118764 (* l_0_19_168 l_0_19_168)))
 (let ((?x101082 (+ (+ (* l_0_19_166 l_0_19_166) (* l_0_19_167 l_0_19_167)) ?x118764)))
 (let ((?x58902 (- (- (- (+ (+ (+ (+ ?x101082 ?x118766) ?x118768) ?x118770) ?x118772) ?x118774) ?x118776) ?x118778)))
 (let ((?x100956 (- (- (- (- (- (- (- ?x58902 ?x118780) ?x118782) ?x118784) ?x118786) ?x123530) ?x123532) ?x123534)))
 (let ((?x123690 (- (- (- (- (- (- (- ?x100956 ?x123536) ?x123538) ?x123540) ?x120668) ?x120670) ?x120672) ?x120674)))
 (= (- (- (- ?x123690 ?x120676) ?x120678) ?x120680) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x120818 (* l_0_19_324 l_0_19_324)))
 (let ((?x120816 (* l_0_19_323 l_0_19_323)))
 (let ((?x120814 (* l_0_19_322 l_0_19_322)))
 (let ((?x120812 (* l_0_19_321 l_0_19_321)))
 (let ((?x120810 (* l_0_19_320 l_0_19_320)))
 (let ((?x120807 (* l_0_19_319 l_0_19_319)))
 (let ((?x120805 (* l_0_19_318 l_0_19_318)))
 (let ((?x120803 (* l_0_19_317 l_0_19_317)))
 (let ((?x119068 (* l_0_19_216 l_0_19_216)))
 (let ((?x119066 (* l_0_19_215 l_0_19_215)))
 (let ((?x119064 (* l_0_19_214 l_0_19_214)))
 (let ((?x119062 (* l_0_19_213 l_0_19_213)))
 (let ((?x119060 (* l_0_19_212 l_0_19_212)))
 (let ((?x119058 (* l_0_19_211 l_0_19_211)))
 (let ((?x119056 (* l_0_19_210 l_0_19_210)))
 (let ((?x119054 (* l_0_19_209 l_0_19_209)))
 (let ((?x119052 (* l_0_19_180 l_0_19_180)))
 (let ((?x119050 (* l_0_19_179 l_0_19_179)))
 (let ((?x119048 (* l_0_19_178 l_0_19_178)))
 (let ((?x119046 (* l_0_19_177 l_0_19_177)))
 (let ((?x119044 (* l_0_19_176 l_0_19_176)))
 (let ((?x119042 (* l_0_19_175 l_0_19_175)))
 (let ((?x123703 (+ (+ (* l_0_19_173 l_0_19_173) (* l_0_19_174 l_0_19_174)) ?x119042)))
 (let ((?x123710 (- (- (+ (+ (+ (+ (+ ?x123703 ?x119044) ?x119046) ?x119048) ?x119050) ?x119052) ?x119054) ?x119056)))
 (let ((?x123718 (- (- (- (- (- (- (- ?x123710 ?x119058) ?x119060) ?x119062) ?x119064) ?x119066) ?x119068) (* (* 2.0 l_0_19_232) l_0_19_245))))
 (let ((?x123722 (- (- ?x123718 (* (* 2.0 l_0_19_233) l_0_19_246)) (* (* 2.0 l_0_19_234) l_0_19_247))))
 (let ((?x123726 (- (- ?x123722 (* (* 2.0 l_0_19_235) l_0_19_248)) (* (* 2.0 l_0_19_236) l_0_19_249))))
 (let ((?x123731 (- (- (- (- ?x123726 (* (* 2.0 l_0_19_237) l_0_19_250)) ?x120803) ?x120805) ?x120807)))
 (= (- (- (- (- (- ?x123731 ?x120810) ?x120812) ?x120814) ?x120816) ?x120818) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x79767 (- (- (* (- l_0_19_218) l_0_19_218) (* l_0_19_219 l_0_19_219)) (* (* 2.0 l_0_19_326) l_0_19_353))))
 (let ((?x32609 (- (- ?x79767 (* (* 2.0 l_0_19_327) l_0_19_354)) (* (* 2.0 l_0_19_362) l_0_19_389))))
 (let ((?x123747 (- (- ?x32609 (* (* 2.0 l_0_19_363) l_0_19_390)) (* (* 2.0 l_0_19_398) l_0_19_425))))
 (let ((?x123751 (- (- ?x123747 (* (* 2.0 l_0_19_399) l_0_19_426)) (* (* 2.0 l_0_19_434) l_0_19_461))))
 (= (- ?x123751 (* (* 2.0 l_0_19_435) l_0_19_462)) 0.0))))))
(assert
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x116549 (* ?x116548 l_0_19_282)))
 (let ((?x116545 (* 2.0 l_0_19_254)))
 (let ((?x116546 (* ?x116545 l_0_19_281)))
 (let ((?x123789 (- (* (* (- 2.0) l_0_19_218) l_0_19_227) (* (* 2.0 l_0_19_219) l_0_19_228))))
 (let ((?x123795 (- (- (+ (+ ?x123789 ?x116546) ?x116549) (* (* 2.0 l_0_19_335) l_0_19_353)) (* (* 2.0 l_0_19_336) l_0_19_354))))
 (let ((?x123799 (- (- ?x123795 (* (* 2.0 l_0_19_337) l_0_19_355)) (* (* 2.0 l_0_19_338) l_0_19_356))))
 (let ((?x123803 (- (- ?x123799 (* (* 2.0 l_0_19_339) l_0_19_357)) (* (* 2.0 l_0_19_371) l_0_19_389))))
 (let ((?x123807 (- (- ?x123803 (* (* 2.0 l_0_19_372) l_0_19_390)) (* (* 2.0 l_0_19_373) l_0_19_391))))
 (let ((?x123811 (- (- ?x123807 (* (* 2.0 l_0_19_374) l_0_19_392)) (* (* 2.0 l_0_19_375) l_0_19_393))))
 (let ((?x123815 (- (- ?x123811 (* (* 2.0 l_0_19_407) l_0_19_425)) (* (* 2.0 l_0_19_408) l_0_19_426))))
 (let ((?x123819 (- (- ?x123815 (* (* 2.0 l_0_19_409) l_0_19_427)) (* (* 2.0 l_0_19_410) l_0_19_428))))
 (let ((?x123823 (- (- ?x123819 (* (* 2.0 l_0_19_411) l_0_19_429)) (* (* 2.0 l_0_19_443) l_0_19_461))))
 (let ((?x123827 (- (- ?x123823 (* (* 2.0 l_0_19_444) l_0_19_462)) (* (* 2.0 l_0_19_445) l_0_19_463))))
 (let ((?x123831 (- (- ?x123827 (* (* 2.0 l_0_19_446) l_0_19_464)) (* (* 2.0 l_0_19_447) l_0_19_465))))
 (= ?x123831 0.0)))))))))))))))))
(assert
 (let ((?x123930 (* l_0_19_468 l_0_19_468)))
 (let ((?x123928 (* l_0_19_467 l_0_19_467)))
 (let ((?x123926 (* l_0_19_466 l_0_19_466)))
 (let ((?x123924 (* l_0_19_465 l_0_19_465)))
 (let ((?x123922 (* l_0_19_464 l_0_19_464)))
 (let ((?x123920 (* l_0_19_463 l_0_19_463)))
 (let ((?x123918 (* l_0_19_462 l_0_19_462)))
 (let ((?x123916 (* l_0_19_461 l_0_19_461)))
 (let ((?x123914 (* l_0_19_432 l_0_19_432)))
 (let ((?x123912 (* l_0_19_431 l_0_19_431)))
 (let ((?x123910 (* l_0_19_430 l_0_19_430)))
 (let ((?x123908 (* l_0_19_429 l_0_19_429)))
 (let ((?x123906 (* l_0_19_428 l_0_19_428)))
 (let ((?x123904 (* l_0_19_427 l_0_19_427)))
 (let ((?x123902 (* l_0_19_426 l_0_19_426)))
 (let ((?x123900 (* l_0_19_425 l_0_19_425)))
 (let ((?x123898 (* l_0_19_396 l_0_19_396)))
 (let ((?x123896 (* l_0_19_395 l_0_19_395)))
 (let ((?x123894 (* l_0_19_394 l_0_19_394)))
 (let ((?x123892 (* l_0_19_393 l_0_19_393)))
 (let ((?x123890 (* l_0_19_392 l_0_19_392)))
 (let ((?x123888 (* l_0_19_391 l_0_19_391)))
 (let ((?x123886 (* l_0_19_390 l_0_19_390)))
 (let ((?x123884 (* l_0_19_389 l_0_19_389)))
 (let ((?x123882 (* l_0_19_360 l_0_19_360)))
 (let ((?x123880 (* l_0_19_359 l_0_19_359)))
 (let ((?x123878 (* l_0_19_358 l_0_19_358)))
 (let ((?x123876 (* l_0_19_357 l_0_19_357)))
 (let ((?x123874 (* l_0_19_356 l_0_19_356)))
 (let ((?x123872 (* l_0_19_355 l_0_19_355)))
 (let ((?x123870 (* l_0_19_354 l_0_19_354)))
 (let ((?x79988 (* l_0_19_353 l_0_19_353)))
 (let ((?x33134 (- (* (* (- 2.0) l_0_19_218) l_0_19_245) (* (* 2.0 l_0_19_219) l_0_19_246))))
 (let ((?x123881 (- (- (- (- (- (- (- ?x33134 ?x79988) ?x123870) ?x123872) ?x123874) ?x123876) ?x123878) ?x123880)))
 (let ((?x123895 (- (- (- (- (- (- (- ?x123881 ?x123882) ?x123884) ?x123886) ?x123888) ?x123890) ?x123892) ?x123894)))
 (let ((?x123909 (- (- (- (- (- (- (- ?x123895 ?x123896) ?x123898) ?x123900) ?x123902) ?x123904) ?x123906) ?x123908)))
 (let ((?x123923 (- (- (- (- (- (- (- ?x123909 ?x123910) ?x123912) ?x123914) ?x123916) ?x123918) ?x123920) ?x123922)))
 (= (- (- (- (- ?x123923 ?x123924) ?x123926) ?x123928) ?x123930) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x121000 (* 2.0 l_0_19_267)))
 (let ((?x121001 (* ?x121000 l_0_19_285)))
 (let ((?x120997 (* 2.0 l_0_19_266)))
 (let ((?x120998 (* ?x120997 l_0_19_284)))
 (let ((?x120994 (* 2.0 l_0_19_265)))
 (let ((?x120995 (* ?x120994 l_0_19_283)))
 (let ((?x120991 (* 2.0 l_0_19_264)))
 (let ((?x120992 (* ?x120991 l_0_19_282)))
 (let ((?x120988 (* 2.0 l_0_19_263)))
 (let ((?x120989 (* ?x120988 l_0_19_281)))
 (let ((?x123961 (* l_0_19_231 l_0_19_231)))
 (let ((?x123959 (* l_0_19_230 l_0_19_230)))
 (let ((?x123957 (* l_0_19_229 l_0_19_229)))
 (let ((?x123958 (- (- (* (- l_0_19_227) l_0_19_227) (* l_0_19_228 l_0_19_228)) ?x123957)))
 (let ((?x123967 (+ (+ (+ (+ (+ (- (- ?x123958 ?x123959) ?x123961) ?x120989) ?x120992) ?x120995) ?x120998) ?x121001)))
 (= ?x123967 0.0)))))))))))))))))
(assert
 (let ((?x121272 (* l_0_19_288 l_0_19_288)))
 (let ((?x121270 (* l_0_19_287 l_0_19_287)))
 (let ((?x121268 (* l_0_19_286 l_0_19_286)))
 (let ((?x121266 (* l_0_19_285 l_0_19_285)))
 (let ((?x121264 (* l_0_19_284 l_0_19_284)))
 (let ((?x121262 (* l_0_19_283 l_0_19_283)))
 (let ((?x121260 (* l_0_19_282 l_0_19_282)))
 (let ((?x121258 (* l_0_19_281 l_0_19_281)))
 (let ((?x101852 (- (* (* (- 2.0) l_0_19_227) l_0_19_245) (* (* 2.0 l_0_19_228) l_0_19_246))))
 (let ((?x123979 (- (- ?x101852 (* (* 2.0 l_0_19_229) l_0_19_247)) (* (* 2.0 l_0_19_230) l_0_19_248))))
 (let ((?x123984 (+ (+ (+ (- ?x123979 (* (* 2.0 l_0_19_231) l_0_19_249)) ?x121258) ?x121260) ?x121262)))
 (= (+ (+ (+ (+ (+ ?x123984 ?x121264) ?x121266) ?x121268) ?x121270) ?x121272) 0.0)))))))))))))
(assert
 (let ((?x124014 (* l_0_19_252 l_0_19_252)))
 (let ((?x124012 (* l_0_19_251 l_0_19_251)))
 (let ((?x124010 (* l_0_19_250 l_0_19_250)))
 (let ((?x124008 (* l_0_19_249 l_0_19_249)))
 (let ((?x124006 (* l_0_19_248 l_0_19_248)))
 (let ((?x124004 (* l_0_19_247 l_0_19_247)))
 (let ((?x124005 (- (- (* (- l_0_19_245) l_0_19_245) (* l_0_19_246 l_0_19_246)) ?x124004)))
 (= (- (- (- (- (- ?x124005 ?x124006) ?x124008) ?x124010) ?x124012) ?x124014) 0.0)))))))))
(assert
 (let ((?x124027 (- (- (* (- l_0_19_254) l_0_19_254) (* l_0_19_255 l_0_19_255)) (* (* 2.0 l_0_19_326) l_0_19_346))))
 (let ((?x124031 (- (- ?x124027 (* (* 2.0 l_0_19_327) l_0_19_347)) (* (* 2.0 l_0_19_362) l_0_19_382))))
 (let ((?x124035 (- (- ?x124031 (* (* 2.0 l_0_19_363) l_0_19_383)) (* (* 2.0 l_0_19_398) l_0_19_418))))
 (let ((?x124039 (- (- ?x124035 (* (* 2.0 l_0_19_399) l_0_19_419)) (* (* 2.0 l_0_19_434) l_0_19_454))))
 (= (- ?x124039 (* (* 2.0 l_0_19_435) l_0_19_455)) 0.0))))))
(assert
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x124077 (* ?x116548 l_0_19_257)))
 (let ((?x124080 (- (- (* (* (- 2.0) l_0_19_254) l_0_19_256) ?x124077) (* (* 2.0 l_0_19_328) l_0_19_346))))
 (let ((?x124084 (- (- ?x124080 (* (* 2.0 l_0_19_329) l_0_19_347)) (* (* 2.0 l_0_19_330) l_0_19_348))))
 (let ((?x124088 (- (- ?x124084 (* (* 2.0 l_0_19_364) l_0_19_382)) (* (* 2.0 l_0_19_365) l_0_19_383))))
 (let ((?x124092 (- (- ?x124088 (* (* 2.0 l_0_19_366) l_0_19_384)) (* (* 2.0 l_0_19_400) l_0_19_418))))
 (let ((?x124096 (- (- ?x124092 (* (* 2.0 l_0_19_401) l_0_19_419)) (* (* 2.0 l_0_19_402) l_0_19_420))))
 (let ((?x124100 (- (- ?x124096 (* (* 2.0 l_0_19_436) l_0_19_454)) (* (* 2.0 l_0_19_437) l_0_19_455))))
 (= (- ?x124100 (* (* 2.0 l_0_19_438) l_0_19_456)) 0.0))))))))))
(assert
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x124136 (* ?x116548 l_0_19_275)))
 (let ((?x102084 (* ?x116548 l_0_19_264)))
 (let ((?x102081 (+ (* (* (- 2.0) l_0_19_254) l_0_19_263) (* (* 2.0 l_0_19_254) l_0_19_274))))
 (let ((?x124141 (- (- (+ (- ?x102081 ?x102084) ?x124136) (* (* 2.0 l_0_19_335) l_0_19_346)) (* (* 2.0 l_0_19_336) l_0_19_347))))
 (let ((?x124145 (- (- ?x124141 (* (* 2.0 l_0_19_337) l_0_19_348)) (* (* 2.0 l_0_19_338) l_0_19_349))))
 (let ((?x124149 (- (- ?x124145 (* (* 2.0 l_0_19_339) l_0_19_350)) (* (* 2.0 l_0_19_371) l_0_19_382))))
 (let ((?x124153 (- (- ?x124149 (* (* 2.0 l_0_19_372) l_0_19_383)) (* (* 2.0 l_0_19_373) l_0_19_384))))
 (let ((?x124157 (- (- ?x124153 (* (* 2.0 l_0_19_374) l_0_19_385)) (* (* 2.0 l_0_19_375) l_0_19_386))))
 (let ((?x124161 (- (- ?x124157 (* (* 2.0 l_0_19_407) l_0_19_418)) (* (* 2.0 l_0_19_408) l_0_19_419))))
 (let ((?x124165 (- (- ?x124161 (* (* 2.0 l_0_19_409) l_0_19_420)) (* (* 2.0 l_0_19_410) l_0_19_421))))
 (let ((?x124169 (- (- ?x124165 (* (* 2.0 l_0_19_411) l_0_19_422)) (* (* 2.0 l_0_19_443) l_0_19_454))))
 (let ((?x124173 (- (- ?x124169 (* (* 2.0 l_0_19_444) l_0_19_455)) (* (* 2.0 l_0_19_445) l_0_19_456))))
 (let ((?x124177 (- (- ?x124173 (* (* 2.0 l_0_19_446) l_0_19_457)) (* (* 2.0 l_0_19_447) l_0_19_458))))
 (= ?x124177 0.0))))))))))))))))
(assert
 (let ((?x124303 (* l_0_19_460 l_0_19_460)))
 (let ((?x124301 (* l_0_19_459 l_0_19_459)))
 (let ((?x124299 (* l_0_19_458 l_0_19_458)))
 (let ((?x124297 (* l_0_19_457 l_0_19_457)))
 (let ((?x124295 (* l_0_19_456 l_0_19_456)))
 (let ((?x124293 (* l_0_19_455 l_0_19_455)))
 (let ((?x124291 (* l_0_19_454 l_0_19_454)))
 (let ((?x124289 (* l_0_19_424 l_0_19_424)))
 (let ((?x124287 (* l_0_19_423 l_0_19_423)))
 (let ((?x124285 (* l_0_19_422 l_0_19_422)))
 (let ((?x124283 (* l_0_19_421 l_0_19_421)))
 (let ((?x124281 (* l_0_19_420 l_0_19_420)))
 (let ((?x124279 (* l_0_19_419 l_0_19_419)))
 (let ((?x124277 (* l_0_19_418 l_0_19_418)))
 (let ((?x124275 (* l_0_19_388 l_0_19_388)))
 (let ((?x124273 (* l_0_19_387 l_0_19_387)))
 (let ((?x124271 (* l_0_19_386 l_0_19_386)))
 (let ((?x124269 (* l_0_19_385 l_0_19_385)))
 (let ((?x124267 (* l_0_19_384 l_0_19_384)))
 (let ((?x124265 (* l_0_19_383 l_0_19_383)))
 (let ((?x124263 (* l_0_19_382 l_0_19_382)))
 (let ((?x124261 (* l_0_19_352 l_0_19_352)))
 (let ((?x124259 (* l_0_19_351 l_0_19_351)))
 (let ((?x124257 (* l_0_19_350 l_0_19_350)))
 (let ((?x124255 (* l_0_19_349 l_0_19_349)))
 (let ((?x124253 (* l_0_19_348 l_0_19_348)))
 (let ((?x124251 (* l_0_19_347 l_0_19_347)))
 (let ((?x124249 (* l_0_19_346 l_0_19_346)))
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x124136 (* ?x116548 l_0_19_275)))
 (let ((?x124254 (- (- (- (- (* (* (- 2.0) l_0_19_254) l_0_19_274) ?x124136) ?x124249) ?x124251) ?x124253)))
 (let ((?x124268 (- (- (- (- (- (- (- ?x124254 ?x124255) ?x124257) ?x124259) ?x124261) ?x124263) ?x124265) ?x124267)))
 (let ((?x124282 (- (- (- (- (- (- (- ?x124268 ?x124269) ?x124271) ?x124273) ?x124275) ?x124277) ?x124279) ?x124281)))
 (let ((?x124296 (- (- (- (- (- (- (- ?x124282 ?x124283) ?x124285) ?x124287) ?x124289) ?x124291) ?x124293) ?x124295)))
 (= (- (- (- (- ?x124296 ?x124297) ?x124299) ?x124301) ?x124303) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x124341 (* l_0_19_258 l_0_19_258)))
 (let ((?x124342 (- (- (* (- l_0_19_256) l_0_19_256) (* l_0_19_257 l_0_19_257)) ?x124341)))
 (= ?x124342 0.0))))
(assert
 (let ((?x117134 (* 2.0 l_0_19_258)))
 (let ((?x124360 (* ?x117134 l_0_19_276)))
 (let ((?x124358 (* ?x117134 l_0_19_265)))
 (let ((?x117131 (* 2.0 l_0_19_257)))
 (let ((?x124356 (* ?x117131 l_0_19_275)))
 (let ((?x124354 (* ?x117131 l_0_19_264)))
 (let ((?x124353 (+ (* (* (- 2.0) l_0_19_256) l_0_19_263) (* (* 2.0 l_0_19_256) l_0_19_274))))
 (= (+ (- (+ (- ?x124353 ?x124354) ?x124356) ?x124358) ?x124360) 0.0)))))))))
(assert
 (let ((?x117134 (* 2.0 l_0_19_258)))
 (let ((?x124360 (* ?x117134 l_0_19_276)))
 (let ((?x117131 (* 2.0 l_0_19_257)))
 (let ((?x124356 (* ?x117131 l_0_19_275)))
 (= (- (- (* (* (- 2.0) l_0_19_256) l_0_19_274) ?x124356) ?x124360) 0.0))))))
(assert
 (let ((?x124406 (* l_0_19_267 l_0_19_267)))
 (let ((?x121000 (* 2.0 l_0_19_267)))
 (let ((?x124404 (* ?x121000 l_0_19_278)))
 (let ((?x124402 (* l_0_19_266 l_0_19_266)))
 (let ((?x120997 (* 2.0 l_0_19_266)))
 (let ((?x124400 (* ?x120997 l_0_19_277)))
 (let ((?x124398 (* l_0_19_265 l_0_19_265)))
 (let ((?x120994 (* 2.0 l_0_19_265)))
 (let ((?x124396 (* ?x120994 l_0_19_276)))
 (let ((?x124394 (* l_0_19_264 l_0_19_264)))
 (let ((?x120991 (* 2.0 l_0_19_264)))
 (let ((?x124392 (* ?x120991 l_0_19_275)))
 (let ((?x80767 (* l_0_19_263 l_0_19_263)))
 (let ((?x124397 (+ (- (+ (- (* (* 2.0 l_0_19_263) l_0_19_274) ?x80767) ?x124392) ?x124394) ?x124396)))
 (= (- (+ (- (+ (- ?x124397 ?x124398) ?x124400) ?x124402) ?x124404) ?x124406) 0.0))))))))))))))))
(assert
 (let ((?x124450 (* l_0_19_280 l_0_19_280)))
 (let ((?x124448 (* l_0_19_279 l_0_19_279)))
 (let ((?x124446 (* l_0_19_278 l_0_19_278)))
 (let ((?x124444 (* l_0_19_277 l_0_19_277)))
 (let ((?x124442 (* l_0_19_276 l_0_19_276)))
 (let ((?x124440 (* l_0_19_275 l_0_19_275)))
 (let ((?x124438 (* l_0_19_274 l_0_19_274)))
 (let ((?x121000 (* 2.0 l_0_19_267)))
 (let ((?x124404 (* ?x121000 l_0_19_278)))
 (let ((?x120997 (* 2.0 l_0_19_266)))
 (let ((?x124400 (* ?x120997 l_0_19_277)))
 (let ((?x120994 (* 2.0 l_0_19_265)))
 (let ((?x124396 (* ?x120994 l_0_19_276)))
 (let ((?x120991 (* 2.0 l_0_19_264)))
 (let ((?x124392 (* ?x120991 l_0_19_275)))
 (let ((?x124437 (- (- (- (- (* (* (- 2.0) l_0_19_263) l_0_19_274) ?x124392) ?x124396) ?x124400) ?x124404)))
 (let ((?x124451 (+ (+ (+ (+ (+ (+ (+ ?x124437 ?x124438) ?x124440) ?x124442) ?x124444) ?x124446) ?x124448) ?x124450)))
 (= ?x124451 0.0)))))))))))))))))))
(assert
 (let ((?x124450 (* l_0_19_280 l_0_19_280)))
 (let ((?x124448 (* l_0_19_279 l_0_19_279)))
 (let ((?x124446 (* l_0_19_278 l_0_19_278)))
 (let ((?x124444 (* l_0_19_277 l_0_19_277)))
 (let ((?x124442 (* l_0_19_276 l_0_19_276)))
 (let ((?x124467 (- (- (* (- l_0_19_274) l_0_19_274) (* l_0_19_275 l_0_19_275)) ?x124442)))
 (= (- (- (- (- ?x124467 ?x124444) ?x124446) ?x124448) ?x124450) 0.0))))))))
(assert
 (let ((?x102516 (- (+ (* l_0_19_254 l_0_19_254) (* l_0_19_255 l_0_19_255)) (* (* 2.0 l_0_19_326) l_0_19_335))))
 (let ((?x77755 (- (- ?x102516 (* (* 2.0 l_0_19_327) l_0_19_336)) (* (* 2.0 l_0_19_362) l_0_19_371))))
 (let ((?x124476 (- (- ?x77755 (* (* 2.0 l_0_19_363) l_0_19_372)) (* (* 2.0 l_0_19_398) l_0_19_407))))
 (let ((?x124480 (- (- ?x124476 (* (* 2.0 l_0_19_399) l_0_19_408)) (* (* 2.0 l_0_19_434) l_0_19_443))))
 (= (- ?x124480 (* (* 2.0 l_0_19_435) l_0_19_444)) 0.0))))))
(assert
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x124077 (* ?x116548 l_0_19_257)))
 (let ((?x124505 (- (+ (* (* 2.0 l_0_19_254) l_0_19_256) ?x124077) (* (* 2.0 l_0_19_328) l_0_19_335))))
 (let ((?x124509 (- (- ?x124505 (* (* 2.0 l_0_19_329) l_0_19_336)) (* (* 2.0 l_0_19_330) l_0_19_337))))
 (let ((?x124513 (- (- ?x124509 (* (* 2.0 l_0_19_364) l_0_19_371)) (* (* 2.0 l_0_19_365) l_0_19_372))))
 (let ((?x124517 (- (- ?x124513 (* (* 2.0 l_0_19_366) l_0_19_373)) (* (* 2.0 l_0_19_400) l_0_19_407))))
 (let ((?x124521 (- (- ?x124517 (* (* 2.0 l_0_19_401) l_0_19_408)) (* (* 2.0 l_0_19_402) l_0_19_409))))
 (let ((?x124525 (- (- ?x124521 (* (* 2.0 l_0_19_436) l_0_19_443)) (* (* 2.0 l_0_19_437) l_0_19_444))))
 (= (- ?x124525 (* (* 2.0 l_0_19_438) l_0_19_445)) 0.0))))))))))
(assert
 (let ((?x124599 (* l_0_19_447 l_0_19_447)))
 (let ((?x124597 (* l_0_19_446 l_0_19_446)))
 (let ((?x124595 (* l_0_19_445 l_0_19_445)))
 (let ((?x124593 (* l_0_19_444 l_0_19_444)))
 (let ((?x124591 (* l_0_19_443 l_0_19_443)))
 (let ((?x124589 (* l_0_19_411 l_0_19_411)))
 (let ((?x124587 (* l_0_19_410 l_0_19_410)))
 (let ((?x124585 (* l_0_19_409 l_0_19_409)))
 (let ((?x124583 (* l_0_19_408 l_0_19_408)))
 (let ((?x124581 (* l_0_19_407 l_0_19_407)))
 (let ((?x124579 (* l_0_19_375 l_0_19_375)))
 (let ((?x124577 (* l_0_19_374 l_0_19_374)))
 (let ((?x124575 (* l_0_19_373 l_0_19_373)))
 (let ((?x124573 (* l_0_19_372 l_0_19_372)))
 (let ((?x124571 (* l_0_19_371 l_0_19_371)))
 (let ((?x124569 (* l_0_19_339 l_0_19_339)))
 (let ((?x124567 (* l_0_19_338 l_0_19_338)))
 (let ((?x124565 (* l_0_19_337 l_0_19_337)))
 (let ((?x124563 (* l_0_19_336 l_0_19_336)))
 (let ((?x124561 (* l_0_19_335 l_0_19_335)))
 (let ((?x116548 (* 2.0 l_0_19_255)))
 (let ((?x102084 (* ?x116548 l_0_19_264)))
 (let ((?x124566 (- (- (- (+ (* (* 2.0 l_0_19_254) l_0_19_263) ?x102084) ?x124561) ?x124563) ?x124565)))
 (let ((?x124580 (- (- (- (- (- (- (- ?x124566 ?x124567) ?x124569) ?x124571) ?x124573) ?x124575) ?x124577) ?x124579)))
 (let ((?x124594 (- (- (- (- (- (- (- ?x124580 ?x124581) ?x124583) ?x124585) ?x124587) ?x124589) ?x124591) ?x124593)))
 (= (- (- (- ?x124594 ?x124595) ?x124597) ?x124599) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x124341 (* l_0_19_258 l_0_19_258)))
 (let ((?x124626 (+ (+ (* l_0_19_256 l_0_19_256) (* l_0_19_257 l_0_19_257)) ?x124341)))
 (= ?x124626 0.0))))
(assert
 (let ((?x117134 (* 2.0 l_0_19_258)))
 (let ((?x124358 (* ?x117134 l_0_19_265)))
 (let ((?x117131 (* 2.0 l_0_19_257)))
 (let ((?x124354 (* ?x117131 l_0_19_264)))
 (= (+ (+ (* (* 2.0 l_0_19_256) l_0_19_263) ?x124354) ?x124358) 0.0))))))
(assert
 (let ((?x124406 (* l_0_19_267 l_0_19_267)))
 (let ((?x124402 (* l_0_19_266 l_0_19_266)))
 (let ((?x124398 (* l_0_19_265 l_0_19_265)))
 (let ((?x124633 (+ (+ (* l_0_19_263 l_0_19_263) (* l_0_19_264 l_0_19_264)) ?x124398)))
 (= (+ (+ ?x124633 ?x124402) ?x124406) 0.0))))))
(assert
 (let ((?x124647 (* l_0_19_435 l_0_19_435)))
 (let ((?x124645 (* l_0_19_434 l_0_19_434)))
 (let ((?x124643 (* l_0_19_399 l_0_19_399)))
 (let ((?x124641 (* l_0_19_398 l_0_19_398)))
 (let ((?x124639 (* l_0_19_363 l_0_19_363)))
 (let ((?x124637 (* l_0_19_362 l_0_19_362)))
 (let ((?x124638 (- (- (* (- l_0_19_326) l_0_19_326) (* l_0_19_327 l_0_19_327)) ?x124637)))
 (= (- (- (- (- (- ?x124638 ?x124639) ?x124641) ?x124643) ?x124645) ?x124647) 0.0)))))))))
(assert
 (let ((?x124669 (- (* (* (- 2.0) l_0_19_326) l_0_19_328) (* (* 2.0 l_0_19_327) l_0_19_329))))
 (let ((?x124673 (- (- ?x124669 (* (* 2.0 l_0_19_362) l_0_19_364)) (* (* 2.0 l_0_19_363) l_0_19_365))))
 (let ((?x124677 (- (- ?x124673 (* (* 2.0 l_0_19_398) l_0_19_400)) (* (* 2.0 l_0_19_399) l_0_19_401))))
 (let ((?x124681 (- (- ?x124677 (* (* 2.0 l_0_19_434) l_0_19_436)) (* (* 2.0 l_0_19_435) l_0_19_437))))
 (= ?x124681 0.0))))))
(assert
 (let ((?x124719 (* l_0_19_438 l_0_19_438)))
 (let ((?x124717 (* l_0_19_437 l_0_19_437)))
 (let ((?x124715 (* l_0_19_436 l_0_19_436)))
 (let ((?x124713 (* l_0_19_402 l_0_19_402)))
 (let ((?x124711 (* l_0_19_401 l_0_19_401)))
 (let ((?x124709 (* l_0_19_400 l_0_19_400)))
 (let ((?x124707 (* l_0_19_366 l_0_19_366)))
 (let ((?x124705 (* l_0_19_365 l_0_19_365)))
 (let ((?x124703 (* l_0_19_364 l_0_19_364)))
 (let ((?x124701 (* l_0_19_330 l_0_19_330)))
 (let ((?x124702 (- (- (* (- l_0_19_328) l_0_19_328) (* l_0_19_329 l_0_19_329)) ?x124701)))
 (let ((?x124716 (- (- (- (- (- (- (- ?x124702 ?x124703) ?x124705) ?x124707) ?x124709) ?x124711) ?x124713) ?x124715)))
 (= (- (- ?x124716 ?x124717) ?x124719) 0.0))))))))))))))
(assert
 (>= l_0_19_1 0.0))
(assert
 (>= l_0_19_3 0.0))
(assert
 (>= l_0_19_6 0.0))
(assert
 (>= l_0_19_10 0.0))
(assert
 (>= l_0_19_15 0.0))
(assert
 (>= l_0_19_21 0.0))
(assert
 (>= l_0_19_28 0.0))
(assert
 (>= l_0_19_36 0.0))
(assert
 (>= l_0_19_37 0.0))
(assert
 (>= l_0_19_39 0.0))
(assert
 (>= l_0_19_42 0.0))
(assert
 (>= l_0_19_46 0.0))
(assert
 (>= l_0_19_51 0.0))
(assert
 (>= l_0_19_57 0.0))
(assert
 (>= l_0_19_64 0.0))
(assert
 (>= l_0_19_72 0.0))
(assert
 (>= l_0_19_73 0.0))
(assert
 (>= l_0_19_75 0.0))
(assert
 (>= l_0_19_78 0.0))
(assert
 (>= l_0_19_82 0.0))
(assert
 (>= l_0_19_87 0.0))
(assert
 (>= l_0_19_93 0.0))
(assert
 (>= l_0_19_100 0.0))
(assert
 (>= l_0_19_108 0.0))
(assert
 (>= l_0_19_109 0.0))
(assert
 (>= l_0_19_111 0.0))
(assert
 (>= l_0_19_114 0.0))
(assert
 (>= l_0_19_118 0.0))
(assert
 (>= l_0_19_123 0.0))
(assert
 (>= l_0_19_129 0.0))
(assert
 (>= l_0_19_136 0.0))
(assert
 (>= l_0_19_144 0.0))
(assert
 (>= l_0_19_145 0.0))
(assert
 (>= l_0_19_147 0.0))
(assert
 (>= l_0_19_150 0.0))
(assert
 (>= l_0_19_154 0.0))
(assert
 (>= l_0_19_159 0.0))
(assert
 (>= l_0_19_165 0.0))
(assert
 (>= l_0_19_172 0.0))
(assert
 (>= l_0_19_180 0.0))
(assert
 (>= l_0_19_181 0.0))
(assert
 (>= l_0_19_183 0.0))
(assert
 (>= l_0_19_186 0.0))
(assert
 (>= l_0_19_190 0.0))
(assert
 (>= l_0_19_195 0.0))
(assert
 (>= l_0_19_201 0.0))
(assert
 (>= l_0_19_208 0.0))
(assert
 (>= l_0_19_216 0.0))
(assert
 (>= l_0_19_217 0.0))
(assert
 (>= l_0_19_219 0.0))
(assert
 (>= l_0_19_222 0.0))
(assert
 (>= l_0_19_226 0.0))
(assert
 (>= l_0_19_231 0.0))
(assert
 (>= l_0_19_237 0.0))
(assert
 (>= l_0_19_244 0.0))
(assert
 (>= l_0_19_252 0.0))
(assert
 (>= l_0_19_253 0.0))
(assert
 (>= l_0_19_255 0.0))
(assert
 (>= l_0_19_258 0.0))
(assert
 (>= l_0_19_262 0.0))
(assert
 (>= l_0_19_267 0.0))
(assert
 (>= l_0_19_273 0.0))
(assert
 (>= l_0_19_280 0.0))
(assert
 (>= l_0_19_288 0.0))
(assert
 (>= l_0_19_289 0.0))
(assert
 (>= l_0_19_291 0.0))
(assert
 (>= l_0_19_294 0.0))
(assert
 (>= l_0_19_298 0.0))
(assert
 (>= l_0_19_303 0.0))
(assert
 (>= l_0_19_309 0.0))
(assert
 (>= l_0_19_316 0.0))
(assert
 (>= l_0_19_324 0.0))
(assert
 (>= l_0_19_325 0.0))
(assert
 (>= l_0_19_327 0.0))
(assert
 (>= l_0_19_330 0.0))
(assert
 (>= l_0_19_334 0.0))
(assert
 (>= l_0_19_339 0.0))
(assert
 (>= l_0_19_345 0.0))
(assert
 (>= l_0_19_352 0.0))
(assert
 (>= l_0_19_360 0.0))
(assert
 (>= l_0_19_361 0.0))
(assert
 (>= l_0_19_363 0.0))
(assert
 (>= l_0_19_366 0.0))
(assert
 (>= l_0_19_370 0.0))
(assert
 (>= l_0_19_375 0.0))
(assert
 (>= l_0_19_381 0.0))
(assert
 (>= l_0_19_388 0.0))
(assert
 (>= l_0_19_396 0.0))
(assert
 (>= l_0_19_397 0.0))
(assert
 (>= l_0_19_399 0.0))
(assert
 (>= l_0_19_402 0.0))
(assert
 (>= l_0_19_406 0.0))
(assert
 (>= l_0_19_411 0.0))
(assert
 (>= l_0_19_417 0.0))
(assert
 (>= l_0_19_424 0.0))
(assert
 (>= l_0_19_432 0.0))
(assert
 (>= l_0_19_433 0.0))
(assert
 (>= l_0_19_435 0.0))
(assert
 (>= l_0_19_438 0.0))
(assert
 (>= l_0_19_442 0.0))
(assert
 (>= l_0_19_447 0.0))
(assert
 (>= l_0_19_453 0.0))
(assert
 (>= l_0_19_460 0.0))
(assert
 (>= l_0_19_468 0.0))
(assert
 (let ((?x124849 (* l_0_20_219 l_0_20_219)))
 (let ((?x124853 (- (- (- _a_5_ (* l_0_20_218 l_0_20_218)) ?x124849) (* (* 2.0 l_0_20_326) l_0_20_353))))
 (let ((?x124859 (- (- ?x124853 (* (* 2.0 l_0_20_327) l_0_20_354)) (* (* 2.0 l_0_20_362) l_0_20_389))))
 (let ((?x124865 (- (- ?x124859 (* (* 2.0 l_0_20_363) l_0_20_390)) (* (* 2.0 l_0_20_398) l_0_20_425))))
 (let ((?x124871 (- (- ?x124865 (* (* 2.0 l_0_20_399) l_0_20_426)) (* (* 2.0 l_0_20_434) l_0_20_461))))
 (let ((?x124877 (- (- ?x124871 (* (* 2.0 l_0_20_435) l_0_20_462)) (* (* 2.0 l_0_20_470) l_0_20_497))))
 (= (- ?x124877 (* (* 2.0 l_0_20_471) l_0_20_498)) 0.0))))))))
(assert
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x124921 (* ?x124920 l_0_20_282)))
 (let ((?x124917 (* 2.0 l_0_20_254)))
 (let ((?x124918 (* ?x124917 l_0_20_281)))
 (let ((?x124909 (* l_0_20_147 l_0_20_147)))
 (let ((?x124907 (* l_0_20_146 l_0_20_146)))
 (let ((?x124904 (* l_0_20_111 l_0_20_111)))
 (let ((?x124905 (* (/ 1.0 2.0) ?x124904)))
 (let ((?x124908 (- (+ (+ _a_6_ (* (/ 1.0 2.0) (* l_0_20_110 l_0_20_110))) ?x124905) ?x124907)))
 (let ((?x124916 (- (- (- ?x124908 ?x124909) (* (* 2.0 l_0_20_218) l_0_20_238)) (* (* 2.0 l_0_20_219) l_0_20_239))))
 (let ((?x124928 (- (- (- (- ?x124916 ?x124918) ?x124921) (* (* 2.0 l_0_20_346) l_0_20_353)) (* (* 2.0 l_0_20_347) l_0_20_354))))
 (let ((?x124934 (- (- ?x124928 (* (* 2.0 l_0_20_348) l_0_20_355)) (* (* 2.0 l_0_20_349) l_0_20_356))))
 (let ((?x124940 (- (- ?x124934 (* (* 2.0 l_0_20_350) l_0_20_357)) (* (* 2.0 l_0_20_351) l_0_20_358))))
 (let ((?x124946 (- (- ?x124940 (* (* 2.0 l_0_20_352) l_0_20_359)) (* (* 2.0 l_0_20_382) l_0_20_389))))
 (let ((?x124952 (- (- ?x124946 (* (* 2.0 l_0_20_383) l_0_20_390)) (* (* 2.0 l_0_20_384) l_0_20_391))))
 (let ((?x124958 (- (- ?x124952 (* (* 2.0 l_0_20_385) l_0_20_392)) (* (* 2.0 l_0_20_386) l_0_20_393))))
 (let ((?x124964 (- (- ?x124958 (* (* 2.0 l_0_20_387) l_0_20_394)) (* (* 2.0 l_0_20_388) l_0_20_395))))
 (let ((?x124970 (- (- ?x124964 (* (* 2.0 l_0_20_418) l_0_20_425)) (* (* 2.0 l_0_20_419) l_0_20_426))))
 (let ((?x124976 (- (- ?x124970 (* (* 2.0 l_0_20_420) l_0_20_427)) (* (* 2.0 l_0_20_421) l_0_20_428))))
 (let ((?x124982 (- (- ?x124976 (* (* 2.0 l_0_20_422) l_0_20_429)) (* (* 2.0 l_0_20_423) l_0_20_430))))
 (let ((?x124988 (- (- ?x124982 (* (* 2.0 l_0_20_424) l_0_20_431)) (* (* 2.0 l_0_20_454) l_0_20_461))))
 (let ((?x124994 (- (- ?x124988 (* (* 2.0 l_0_20_455) l_0_20_462)) (* (* 2.0 l_0_20_456) l_0_20_463))))
 (let ((?x125000 (- (- ?x124994 (* (* 2.0 l_0_20_457) l_0_20_464)) (* (* 2.0 l_0_20_458) l_0_20_465))))
 (let ((?x125006 (- (- ?x125000 (* (* 2.0 l_0_20_459) l_0_20_466)) (* (* 2.0 l_0_20_460) l_0_20_467))))
 (let ((?x125012 (- (- ?x125006 (* (* 2.0 l_0_20_490) l_0_20_497)) (* (* 2.0 l_0_20_491) l_0_20_498))))
 (let ((?x125018 (- (- ?x125012 (* (* 2.0 l_0_20_492) l_0_20_499)) (* (* 2.0 l_0_20_493) l_0_20_500))))
 (let ((?x125024 (- (- ?x125018 (* (* 2.0 l_0_20_494) l_0_20_501)) (* (* 2.0 l_0_20_495) l_0_20_502))))
 (let ((?x125030 (- (- ?x125024 (* (* 2.0 l_0_20_496) l_0_20_503)) (* (* (/ 1.0 2.0) l_0_20_74) l_0_20_74))))
 (= (+ (- ?x125030 (* (* (/ 1.0 2.0) l_0_20_75) l_0_20_75)) (/ 1.0 2.0)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x125157 (* l_0_20_39 l_0_20_39)))
 (let ((?x125155 (* l_0_20_38 l_0_20_38)))
 (let ((?x125135 (* l_0_20_3 l_0_20_3)))
 (let ((?x125129 (* l_0_20_2 l_0_20_2)))
 (let ((?x125127 (* l_0_20_183 l_0_20_183)))
 (let ((?x125125 (* l_0_20_182 l_0_20_182)))
 (let ((?x124909 (* l_0_20_147 l_0_20_147)))
 (let ((?x125130 (- (+ (+ (- (- _a_7_ (* l_0_20_146 l_0_20_146)) ?x124909) ?x125125) ?x125127) ?x125129)))
 (let ((?x125134 (- (- ?x125130 (* (* 2.0 l_0_20_218) l_0_20_220)) (* (* 2.0 l_0_20_219) l_0_20_221))))
 (let ((?x125142 (- (- (- ?x125134 ?x125135) (* (* 2.0 l_0_20_328) l_0_20_353)) (* (* 2.0 l_0_20_329) l_0_20_354))))
 (let ((?x125148 (- (- ?x125142 (* (* 2.0 l_0_20_330) l_0_20_355)) (* (* 2.0 l_0_20_364) l_0_20_389))))
 (let ((?x125154 (- (- ?x125148 (* (* 2.0 l_0_20_365) l_0_20_390)) (* (* 2.0 l_0_20_366) l_0_20_391))))
 (let ((?x125164 (- (- (+ (+ ?x125154 ?x125155) ?x125157) (* (* 2.0 l_0_20_400) l_0_20_425)) (* (* 2.0 l_0_20_401) l_0_20_426))))
 (let ((?x125170 (- (- ?x125164 (* (* 2.0 l_0_20_402) l_0_20_427)) (* (* 2.0 l_0_20_436) l_0_20_461))))
 (let ((?x125176 (- (- ?x125170 (* (* 2.0 l_0_20_437) l_0_20_462)) (* (* 2.0 l_0_20_438) l_0_20_463))))
 (let ((?x125182 (- (- ?x125176 (* (* 2.0 l_0_20_472) l_0_20_497)) (* (* 2.0 l_0_20_473) l_0_20_498))))
 (= (- ?x125182 (* (* 2.0 l_0_20_474) l_0_20_499)) 0.0))))))))))))))))))
(assert
 (let ((?x125224 (* l_0_20_291 l_0_20_291)))
 (let ((?x125222 (* l_0_20_290 l_0_20_290)))
 (let ((?x125127 (* l_0_20_183 l_0_20_183)))
 (let ((?x125125 (* l_0_20_182 l_0_20_182)))
 (let ((?x125220 (- (+ (* l_0_20_146 l_0_20_146) (* l_0_20_147 l_0_20_147)) ?x125125)))
 (let ((?x125227 (- (- (- (- ?x125220 ?x125127) ?x125222) ?x125224) (* (* 2.0 l_0_20_326) l_0_20_340))))
 (let ((?x125231 (- (- ?x125227 (* (* 2.0 l_0_20_327) l_0_20_341)) (* (* 2.0 l_0_20_362) l_0_20_376))))
 (let ((?x125235 (- (- ?x125231 (* (* 2.0 l_0_20_363) l_0_20_377)) (* (* 2.0 l_0_20_398) l_0_20_412))))
 (let ((?x125239 (- (- ?x125235 (* (* 2.0 l_0_20_399) l_0_20_413)) (* (* 2.0 l_0_20_434) l_0_20_448))))
 (let ((?x125243 (- (- ?x125239 (* (* 2.0 l_0_20_435) l_0_20_449)) (* (* 2.0 l_0_20_470) l_0_20_484))))
 (= (- (- ?x125243 (* (* 2.0 l_0_20_471) l_0_20_485)) 1.0) 0.0))))))))))))
(assert
 (let ((?x125270 (* l_0_20_37 l_0_20_37)))
 (let ((?x125268 (* l_0_20_181 l_0_20_181)))
 (let ((?x125269 (+ (- (* (- l_0_20_1) l_0_20_1) (* l_0_20_145 l_0_20_145)) ?x125268)))
 (= (+ ?x125269 ?x125270) 0.0)))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125322 (* ?x125321 l_0_20_38)))
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x125319 (* ?x125318 l_0_20_319)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x125316 (* ?x125315 l_0_20_318)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x125313 (* ?x125312 l_0_20_317)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125307 (* ?x125306 l_0_20_182)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125304 (* ?x125303 l_0_20_146)))
 (let ((?x125287 (+ (* (* (- 2.0) l_0_20_1) l_0_20_2) (* (* 2.0 l_0_20_101) l_0_20_76))))
 (let ((?x125293 (+ (+ ?x125287 (* (* 2.0 l_0_20_102) l_0_20_77)) (* (* 2.0 l_0_20_103) l_0_20_78))))
 (let ((?x125299 (- (- ?x125293 (* (* 2.0 l_0_20_112) l_0_20_137)) (* (* 2.0 l_0_20_113) l_0_20_138))))
 (let ((?x125311 (- (+ (- (- ?x125299 (* (* 2.0 l_0_20_114) l_0_20_139)) ?x125304) ?x125307) (* (* 2.0 l_0_20_217) l_0_20_220))))
 (= (+ (+ (+ (+ ?x125311 ?x125313) ?x125316) ?x125319) ?x125322) 0.0))))))))))))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125364 (* ?x125321 l_0_20_40)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125351 (* ?x125306 l_0_20_184)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125347 (* ?x125303 l_0_20_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_20_1) l_0_20_4) ?x125347) ?x125351) ?x125364) 0.0))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x104227 (* ?x125321 l_0_20_43)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x104223 (* ?x125306 l_0_20_187)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x104219 (* ?x125303 l_0_20_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_20_1) l_0_20_7) ?x104219) ?x104223) ?x104227) 0.0))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125390 (* ?x125321 l_0_20_47)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125388 (* ?x125306 l_0_20_191)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125381 (* ?x125303 l_0_20_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_20_1) l_0_20_11) ?x125381) ?x125388) ?x125390) 0.0))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125413 (* ?x125321 l_0_20_52)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125411 (* ?x125306 l_0_20_196)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125404 (* ?x125303 l_0_20_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_20_1) l_0_20_16) ?x125404) ?x125411) ?x125413) 0.0))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125435 (* ?x125321 l_0_20_58)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125433 (* ?x125306 l_0_20_202)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125431 (* ?x125303 l_0_20_166)))
 (let ((?x125347 (* ?x125303 l_0_20_148)))
 (let ((?x125429 (+ (* (* (- 2.0) l_0_20_1) l_0_20_22) (* (* 1.0 l_0_20_109) l_0_20_112))))
 (let ((?x125439 (- (+ (+ (- (- ?x125429 ?x125347) ?x125431) ?x125433) ?x125435) (* (* 1.0 l_0_20_73) l_0_20_76))))
 (= ?x125439 0.0)))))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125464 (* ?x125321 l_0_20_65)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125462 (* ?x125306 l_0_20_209)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125460 (* ?x125303 l_0_20_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_20_1) l_0_20_29) ?x125460) ?x125462) ?x125464) 0.0))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125504 (* ?x125503 l_0_20_41)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125501 (* ?x125500 l_0_20_40)))
 (let ((?x125497 (* 2.0 l_0_20_3)))
 (let ((?x125498 (* ?x125497 l_0_20_5)))
 (let ((?x125495 (* l_0_20_222 l_0_20_222)))
 (let ((?x125493 (* l_0_20_221 l_0_20_221)))
 (let ((?x125491 (* l_0_20_220 l_0_20_220)))
 (let ((?x125488 (* 2.0 l_0_20_2)))
 (let ((?x125489 (* ?x125488 l_0_20_4)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125486 (* ?x125485 l_0_20_185)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125483 (* ?x125482 l_0_20_184)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125480 (* ?x125479 l_0_20_149)))
 (let ((?x125490 (- (+ (+ (- (* (* (- 2.0) l_0_20_146) l_0_20_148) ?x125480) ?x125483) ?x125486) ?x125489)))
 (= (+ (+ (- (- (- (- ?x125490 ?x125491) ?x125493) ?x125495) ?x125498) ?x125501) ?x125504) 0.0))))))))))))))))))))
(assert
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x125575 (* ?x125574 l_0_20_67)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x125572 (* ?x125571 l_0_20_66)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x125569 (* ?x125568 l_0_20_65)))
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125566 (* ?x125503 l_0_20_44)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125564 (* ?x125500 l_0_20_43)))
 (let ((?x125561 (* 2.0 l_0_20_31)))
 (let ((?x125562 (* ?x125561 l_0_20_6)))
 (let ((?x125558 (* 2.0 l_0_20_30)))
 (let ((?x125559 (* ?x125558 l_0_20_5)))
 (let ((?x125497 (* 2.0 l_0_20_3)))
 (let ((?x125556 (* ?x125497 l_0_20_8)))
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x125319 (* ?x125318 l_0_20_319)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x125316 (* ?x125315 l_0_20_318)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x125313 (* ?x125312 l_0_20_317)))
 (let ((?x125550 (* 2.0 l_0_20_29)))
 (let ((?x125551 (* ?x125550 l_0_20_4)))
 (let ((?x125488 (* 2.0 l_0_20_2)))
 (let ((?x125539 (* ?x125488 l_0_20_7)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125537 (* ?x125485 l_0_20_188)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125535 (* ?x125482 l_0_20_187)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125533 (* ?x125479 l_0_20_152)))
 (let ((?x125540 (- (+ (+ (- (* (* (- 2.0) l_0_20_146) l_0_20_151) ?x125533) ?x125535) ?x125537) ?x125539)))
 (let ((?x125546 (- (- ?x125540 (* (* 2.0 l_0_20_220) l_0_20_223)) (* (* 2.0 l_0_20_221) l_0_20_224))))
 (let ((?x125554 (+ (+ (+ (- ?x125546 (* (* 2.0 l_0_20_222) l_0_20_225)) ?x125551) ?x125313) ?x125316)))
 (let ((?x125570 (- (+ (+ (+ (+ (- (+ ?x125554 ?x125319) ?x125556) ?x125559) ?x125562) ?x125564) ?x125566) ?x125569)))
 (= (- (- ?x125570 ?x125572) ?x125575) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125649 (* ?x125503 l_0_20_48)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125647 (* ?x125500 l_0_20_47)))
 (let ((?x125644 (* 2.0 l_0_20_258)))
 (let ((?x125645 (* ?x125644 l_0_20_283)))
 (let ((?x125641 (* 2.0 l_0_20_257)))
 (let ((?x125642 (* ?x125641 l_0_20_282)))
 (let ((?x125638 (* 2.0 l_0_20_256)))
 (let ((?x125639 (* ?x125638 l_0_20_281)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125630 (* ?x125485 l_0_20_192)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125628 (* ?x125482 l_0_20_191)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125626 (* ?x125479 l_0_20_156)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x125624 (* ?x125623 l_0_20_155)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x125621 (* ?x125620 l_0_20_3)))
 (let ((?x125629 (+ (- (- (- (* (* (- 2.0) l_0_20_11) l_0_20_2) ?x125621) ?x125624) ?x125626) ?x125628)))
 (let ((?x125635 (- (- (+ ?x125629 ?x125630) (* (* 2.0 l_0_20_220) l_0_20_227)) (* (* 2.0 l_0_20_221) l_0_20_228))))
 (let ((?x125646 (+ (+ (+ (- ?x125635 (* (* 2.0 l_0_20_222) l_0_20_229)) ?x125639) ?x125642) ?x125645)))
 (= (+ (+ ?x125646 ?x125647) ?x125649) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125732 (* ?x125503 l_0_20_53)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125730 (* ?x125500 l_0_20_52)))
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x125319 (* ?x125318 l_0_20_319)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x125316 (* ?x125315 l_0_20_318)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x125313 (* ?x125312 l_0_20_317)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x125719 (* ?x125718 l_0_20_211)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x125716 (* ?x125715 l_0_20_210)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x125713 (* ?x125712 l_0_20_209)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125710 (* ?x125485 l_0_20_197)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125708 (* ?x125482 l_0_20_196)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x125706 (* ?x125705 l_0_20_3)))
 (let ((?x125702 (* 2.0 l_0_20_16)))
 (let ((?x125703 (* ?x125702 l_0_20_2)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x125700 (* ?x125699 l_0_20_175)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x125697 (* ?x125696 l_0_20_174)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x125684 (* ?x125682 l_0_20_173)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x81850 (* ?x125479 l_0_20_161)))
 (let ((?x125701 (+ (+ (+ (- (* (* (- 2.0) l_0_20_146) l_0_20_160) ?x81850) ?x125684) ?x125697) ?x125700)))
 (let ((?x125720 (- (- (- (+ (+ (- (- ?x125701 ?x125703) ?x125706) ?x125708) ?x125710) ?x125713) ?x125716) ?x125719)))
 (let ((?x125724 (- (- ?x125720 (* (* 2.0 l_0_20_220) l_0_20_232)) (* (* 2.0 l_0_20_221) l_0_20_233))))
 (let ((?x125729 (- (- (- (- ?x125724 (* (* 2.0 l_0_20_222) l_0_20_234)) ?x125313) ?x125316) ?x125319)))
 (= (+ (+ ?x125729 ?x125730) ?x125732) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125828 (* ?x125503 l_0_20_59)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125826 (* ?x125500 l_0_20_58)))
 (let ((?x125644 (* 2.0 l_0_20_258)))
 (let ((?x125645 (* ?x125644 l_0_20_283)))
 (let ((?x125641 (* 2.0 l_0_20_257)))
 (let ((?x125642 (* ?x125641 l_0_20_282)))
 (let ((?x125638 (* 2.0 l_0_20_256)))
 (let ((?x125639 (* ?x125638 l_0_20_281)))
 (let ((?x125820 (* 2.0 l_0_20_23)))
 (let ((?x125821 (* ?x125820 l_0_20_3)))
 (let ((?x125488 (* 2.0 l_0_20_2)))
 (let ((?x125812 (* ?x125488 l_0_20_22)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125810 (* ?x125485 l_0_20_203)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125808 (* ?x125482 l_0_20_202)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125806 (* ?x125479 l_0_20_167)))
 (let ((?x125480 (* ?x125479 l_0_20_149)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x125803 (* ?x125623 l_0_20_166)))
 (let ((?x125801 (* ?x125623 l_0_20_148)))
 (let ((?x125800 (+ (* (* 1.0 l_0_20_110) l_0_20_112) (* (* 1.0 l_0_20_111) l_0_20_113))))
 (let ((?x125813 (- (+ (+ (- (- (- (- ?x125800 ?x125801) ?x125803) ?x125480) ?x125806) ?x125808) ?x125810) ?x125812)))
 (let ((?x125817 (- (- ?x125813 (* (* 2.0 l_0_20_220) l_0_20_238)) (* (* 2.0 l_0_20_221) l_0_20_239))))
 (let ((?x125824 (- (- (- (- ?x125817 (* (* 2.0 l_0_20_222) l_0_20_240)) ?x125821) ?x125639) ?x125642)))
 (let ((?x125832 (- (+ (+ (- ?x125824 ?x125645) ?x125826) ?x125828) (* (* 1.0 l_0_20_74) l_0_20_76))))
 (= (- ?x125832 (* (* 1.0 l_0_20_75) l_0_20_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125899 (* ?x125503 l_0_20_66)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125897 (* ?x125500 l_0_20_65)))
 (let ((?x125497 (* 2.0 l_0_20_3)))
 (let ((?x125895 (* ?x125497 l_0_20_30)))
 (let ((?x125488 (* 2.0 l_0_20_2)))
 (let ((?x125887 (* ?x125488 l_0_20_29)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125885 (* ?x125485 l_0_20_210)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125883 (* ?x125482 l_0_20_209)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125881 (* ?x125479 l_0_20_174)))
 (let ((?x125888 (- (+ (+ (- (* (* (- 2.0) l_0_20_146) l_0_20_173) ?x125881) ?x125883) ?x125885) ?x125887)))
 (let ((?x125892 (- (- ?x125888 (* (* 2.0 l_0_20_220) l_0_20_245)) (* (* 2.0 l_0_20_221) l_0_20_246))))
 (let ((?x125900 (+ (+ (- (- ?x125892 (* (* 2.0 l_0_20_222) l_0_20_247)) ?x125895) ?x125897) ?x125899)))
 (= ?x125900 0.0)))))))))))))))))))
(assert
 (let ((?x125958 (* l_0_20_6 l_0_20_6)))
 (let ((?x125956 (* l_0_20_5 l_0_20_5)))
 (let ((?x125954 (* l_0_20_42 l_0_20_42)))
 (let ((?x125952 (* l_0_20_41 l_0_20_41)))
 (let ((?x125950 (* l_0_20_40 l_0_20_40)))
 (let ((?x125948 (* l_0_20_4 l_0_20_4)))
 (let ((?x125946 (* l_0_20_186 l_0_20_186)))
 (let ((?x125944 (* l_0_20_185 l_0_20_185)))
 (let ((?x125942 (* l_0_20_184 l_0_20_184)))
 (let ((?x125940 (* l_0_20_150 l_0_20_150)))
 (let ((?x125941 (- (- (* (- l_0_20_148) l_0_20_148) (* l_0_20_149 l_0_20_149)) ?x125940)))
 (let ((?x125955 (+ (+ (+ (- (+ (+ (+ ?x125941 ?x125942) ?x125944) ?x125946) ?x125948) ?x125950) ?x125952) ?x125954)))
 (= (- (- ?x125955 ?x125956) ?x125958) 0.0))))))))))))))
(assert
 (let ((?x126008 (* (* 2.0 l_0_20_6) l_0_20_9)))
 (let ((?x126005 (* (* 2.0 l_0_20_5) l_0_20_8)))
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x126002 (* ?x125574 l_0_20_45)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x126000 (* ?x125571 l_0_20_44)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x125998 (* ?x125568 l_0_20_43)))
 (let ((?x125996 (* (* 2.0 l_0_20_4) l_0_20_7)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x125993 (* ?x125718 l_0_20_189)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x125991 (* ?x125715 l_0_20_188)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x125989 (* ?x125712 l_0_20_187)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x125987 (* ?x125699 l_0_20_153)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x125985 (* ?x125696 l_0_20_152)))
 (let ((?x125992 (+ (+ (- (- (* (* (- 2.0) l_0_20_148) l_0_20_151) ?x125985) ?x125987) ?x125989) ?x125991)))
 (let ((?x126009 (- (- (+ (+ (+ (- (+ ?x125992 ?x125993) ?x125996) ?x125998) ?x126000) ?x126002) ?x126005) ?x126008)))
 (= ?x126009 0.0)))))))))))))))))))))))
(assert
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x126059 (* ?x125574 l_0_20_49)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x126057 (* ?x125571 l_0_20_48)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x126055 (* ?x125568 l_0_20_47)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x126053 (* ?x125718 l_0_20_193)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x126051 (* ?x125715 l_0_20_192)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x126049 (* ?x125712 l_0_20_191)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x126047 (* ?x125699 l_0_20_157)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x126045 (* ?x125696 l_0_20_156)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x126043 (* ?x125682 l_0_20_155)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126041 (* ?x126040 l_0_20_6)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126038 (* ?x125620 l_0_20_5)))
 (let ((?x126046 (- (- (- (- (* (* (- 2.0) l_0_20_11) l_0_20_4) ?x126038) ?x126041) ?x126043) ?x126045)))
 (let ((?x126060 (+ (+ (+ (+ (+ (+ (- ?x126046 ?x126047) ?x126049) ?x126051) ?x126053) ?x126055) ?x126057) ?x126059)))
 (= ?x126060 0.0))))))))))))))))))))))))))
(assert
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x126115 (* ?x125574 l_0_20_54)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x126113 (* ?x125571 l_0_20_53)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x126111 (* ?x125568 l_0_20_52)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x126109 (* ?x125718 l_0_20_198)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x126107 (* ?x125715 l_0_20_197)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x126105 (* ?x125712 l_0_20_196)))
 (let ((?x126102 (* 2.0 l_0_20_18)))
 (let ((?x126103 (* ?x126102 l_0_20_6)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x126100 (* ?x125705 l_0_20_5)))
 (let ((?x125702 (* 2.0 l_0_20_16)))
 (let ((?x126098 (* ?x125702 l_0_20_4)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x126096 (* ?x125699 l_0_20_162)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x126094 (* ?x125696 l_0_20_161)))
 (let ((?x126101 (- (- (- (- (* (* (- 2.0) l_0_20_148) l_0_20_160) ?x126094) ?x126096) ?x126098) ?x126100)))
 (let ((?x126116 (+ (+ (+ (+ (+ (+ (- ?x126101 ?x126103) ?x126105) ?x126107) ?x126109) ?x126111) ?x126113) ?x126115)))
 (= ?x126116 0.0))))))))))))))))))))))))))
(assert
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x126181 (* ?x125574 l_0_20_60)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x126179 (* ?x125571 l_0_20_59)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x126177 (* ?x125568 l_0_20_58)))
 (let ((?x126174 (* 2.0 l_0_20_24)))
 (let ((?x126175 (* ?x126174 l_0_20_6)))
 (let ((?x125820 (* 2.0 l_0_20_23)))
 (let ((?x126172 (* ?x125820 l_0_20_5)))
 (let ((?x126169 (* 2.0 l_0_20_22)))
 (let ((?x126170 (* ?x126169 l_0_20_4)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x126167 (* ?x125718 l_0_20_204)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x126165 (* ?x125715 l_0_20_203)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x126163 (* ?x125712 l_0_20_202)))
 (let ((?x125940 (* l_0_20_150 l_0_20_150)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x126160 (* ?x125699 l_0_20_168)))
 (let ((?x125938 (* l_0_20_149 l_0_20_149)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x126157 (* ?x125696 l_0_20_167)))
 (let ((?x125962 (* l_0_20_148 l_0_20_148)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x126154 (* ?x125682 l_0_20_166)))
 (let ((?x35697 (+ (* (/ 1.0 2.0) (* l_0_20_112 l_0_20_112)) (* (/ 1.0 2.0) (* l_0_20_113 l_0_20_113)))))
 (let ((?x126158 (- (- (- (+ ?x35697 (* (/ 1.0 2.0) (* l_0_20_114 l_0_20_114))) ?x126154) ?x125962) ?x126157)))
 (let ((?x126171 (- (+ (+ (+ (- (- (- ?x126158 ?x125938) ?x126160) ?x125940) ?x126163) ?x126165) ?x126167) ?x126170)))
 (let ((?x126185 (- (+ (+ (+ (- (- ?x126171 ?x126172) ?x126175) ?x126177) ?x126179) ?x126181) (* (* (/ 1.0 2.0) l_0_20_76) l_0_20_76))))
 (let ((?x126191 (- (- ?x126185 (* (* (/ 1.0 2.0) l_0_20_77) l_0_20_77)) (* (* (/ 1.0 2.0) l_0_20_78) l_0_20_78))))
 (= ?x126191 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x125575 (* ?x125574 l_0_20_67)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x125572 (* ?x125571 l_0_20_66)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x125569 (* ?x125568 l_0_20_65)))
 (let ((?x125561 (* 2.0 l_0_20_31)))
 (let ((?x125562 (* ?x125561 l_0_20_6)))
 (let ((?x125558 (* 2.0 l_0_20_30)))
 (let ((?x125559 (* ?x125558 l_0_20_5)))
 (let ((?x125550 (* 2.0 l_0_20_29)))
 (let ((?x125551 (* ?x125550 l_0_20_4)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x125719 (* ?x125718 l_0_20_211)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x125716 (* ?x125715 l_0_20_210)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x125713 (* ?x125712 l_0_20_209)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x125700 (* ?x125699 l_0_20_175)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x125697 (* ?x125696 l_0_20_174)))
 (let ((?x126253 (+ (+ (- (- (* (* (- 2.0) l_0_20_148) l_0_20_173) ?x125697) ?x125700) ?x125713) ?x125716)))
 (let ((?x126260 (+ (+ (+ (- (- (- (+ ?x126253 ?x125719) ?x125551) ?x125559) ?x125562) ?x125569) ?x125572) ?x125575)))
 (= ?x126260 0.0))))))))))))))))))))))))))
(assert
 (let ((?x126282 (* l_0_20_9 l_0_20_9)))
 (let ((?x126280 (* l_0_20_8 l_0_20_8)))
 (let ((?x126278 (* l_0_20_7 l_0_20_7)))
 (let ((?x126276 (* l_0_20_46 l_0_20_46)))
 (let ((?x126274 (* l_0_20_45 l_0_20_45)))
 (let ((?x126272 (* l_0_20_44 l_0_20_44)))
 (let ((?x126270 (* l_0_20_43 l_0_20_43)))
 (let ((?x126268 (* l_0_20_190 l_0_20_190)))
 (let ((?x126266 (* l_0_20_189 l_0_20_189)))
 (let ((?x82201 (* l_0_20_188 l_0_20_188)))
 (let ((?x82204 (* l_0_20_187 l_0_20_187)))
 (let ((?x82207 (* l_0_20_154 l_0_20_154)))
 (let ((?x104570 (* l_0_20_153 l_0_20_153)))
 (let ((?x104574 (* l_0_20_152 l_0_20_152)))
 (let ((?x104569 (- (- (* (- l_0_20_10) l_0_20_10) (* l_0_20_151 l_0_20_151)) ?x104574)))
 (let ((?x126271 (+ (+ (+ (+ (+ (- (- ?x104569 ?x104570) ?x82207) ?x82204) ?x82201) ?x126266) ?x126268) ?x126270)))
 (= (- (- (- (+ (+ (+ ?x126271 ?x126272) ?x126274) ?x126276) ?x126278) ?x126280) ?x126282) 0.0))))))))))))))))))
(assert
 (let ((?x126345 (* 2.0 l_0_20_46)))
 (let ((?x126346 (* ?x126345 l_0_20_50)))
 (let ((?x126342 (* 2.0 l_0_20_45)))
 (let ((?x126343 (* ?x126342 l_0_20_49)))
 (let ((?x126339 (* 2.0 l_0_20_44)))
 (let ((?x126340 (* ?x126339 l_0_20_48)))
 (let ((?x126336 (* 2.0 l_0_20_43)))
 (let ((?x126337 (* ?x126336 l_0_20_47)))
 (let ((?x126333 (* 2.0 l_0_20_190)))
 (let ((?x126334 (* ?x126333 l_0_20_194)))
 (let ((?x126330 (* 2.0 l_0_20_189)))
 (let ((?x126331 (* ?x126330 l_0_20_193)))
 (let ((?x126327 (* 2.0 l_0_20_188)))
 (let ((?x126328 (* ?x126327 l_0_20_192)))
 (let ((?x126324 (* 2.0 l_0_20_187)))
 (let ((?x126325 (* ?x126324 l_0_20_191)))
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126322 (* ?x126321 l_0_20_158)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126319 (* ?x126318 l_0_20_157)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126316 (* ?x126315 l_0_20_156)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x126313 (* ?x126312 l_0_20_155)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126310 (* ?x126040 l_0_20_9)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126308 (* ?x125620 l_0_20_8)))
 (let ((?x126305 (* 2.0 l_0_20_11)))
 (let ((?x126306 (* ?x126305 l_0_20_7)))
 (let ((?x126314 (- (- (- (- (* (* (- 2.0) l_0_20_10) l_0_20_14) ?x126306) ?x126308) ?x126310) ?x126313)))
 (let ((?x126335 (+ (+ (+ (+ (- (- (- ?x126314 ?x126316) ?x126319) ?x126322) ?x126325) ?x126328) ?x126331) ?x126334)))
 (= (+ (+ (+ (+ ?x126335 ?x126337) ?x126340) ?x126343) ?x126346) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x126345 (* 2.0 l_0_20_46)))
 (let ((?x126419 (* ?x126345 l_0_20_55)))
 (let ((?x126342 (* 2.0 l_0_20_45)))
 (let ((?x126417 (* ?x126342 l_0_20_54)))
 (let ((?x126339 (* 2.0 l_0_20_44)))
 (let ((?x126415 (* ?x126339 l_0_20_53)))
 (let ((?x126336 (* 2.0 l_0_20_43)))
 (let ((?x126413 (* ?x126336 l_0_20_52)))
 (let ((?x126333 (* 2.0 l_0_20_190)))
 (let ((?x126411 (* ?x126333 l_0_20_199)))
 (let ((?x126330 (* 2.0 l_0_20_189)))
 (let ((?x126409 (* ?x126330 l_0_20_198)))
 (let ((?x126327 (* 2.0 l_0_20_188)))
 (let ((?x126407 (* ?x126327 l_0_20_197)))
 (let ((?x126324 (* 2.0 l_0_20_187)))
 (let ((?x126405 (* ?x126324 l_0_20_196)))
 (let ((?x126102 (* 2.0 l_0_20_18)))
 (let ((?x126403 (* ?x126102 l_0_20_9)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x126401 (* ?x125705 l_0_20_8)))
 (let ((?x125702 (* 2.0 l_0_20_16)))
 (let ((?x126399 (* ?x125702 l_0_20_7)))
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126386 (* ?x126321 l_0_20_163)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126382 (* ?x126318 l_0_20_162)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126378 (* ?x126315 l_0_20_161)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x30424 (* ?x126312 l_0_20_160)))
 (let ((?x126387 (- (- (- (- (* (* (- 2.0) l_0_20_10) l_0_20_19) ?x30424) ?x126378) ?x126382) ?x126386)))
 (let ((?x126412 (+ (+ (+ (+ (- (- (- ?x126387 ?x126399) ?x126401) ?x126403) ?x126405) ?x126407) ?x126409) ?x126411)))
 (= (+ (+ (+ (+ ?x126412 ?x126413) ?x126415) ?x126417) ?x126419) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x126345 (* 2.0 l_0_20_46)))
 (let ((?x126506 (* ?x126345 l_0_20_61)))
 (let ((?x126342 (* 2.0 l_0_20_45)))
 (let ((?x126504 (* ?x126342 l_0_20_60)))
 (let ((?x126339 (* 2.0 l_0_20_44)))
 (let ((?x126502 (* ?x126339 l_0_20_59)))
 (let ((?x126336 (* 2.0 l_0_20_43)))
 (let ((?x126500 (* ?x126336 l_0_20_58)))
 (let ((?x126174 (* 2.0 l_0_20_24)))
 (let ((?x126498 (* ?x126174 l_0_20_9)))
 (let ((?x125820 (* 2.0 l_0_20_23)))
 (let ((?x126496 (* ?x125820 l_0_20_8)))
 (let ((?x126169 (* 2.0 l_0_20_22)))
 (let ((?x126494 (* ?x126169 l_0_20_7)))
 (let ((?x126333 (* 2.0 l_0_20_190)))
 (let ((?x126492 (* ?x126333 l_0_20_205)))
 (let ((?x126330 (* 2.0 l_0_20_189)))
 (let ((?x126490 (* ?x126330 l_0_20_204)))
 (let ((?x126327 (* 2.0 l_0_20_188)))
 (let ((?x126488 (* ?x126327 l_0_20_203)))
 (let ((?x126324 (* 2.0 l_0_20_187)))
 (let ((?x126486 (* ?x126324 l_0_20_202)))
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126484 (* ?x126321 l_0_20_169)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126482 (* ?x126318 l_0_20_168)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126480 (* ?x126315 l_0_20_167)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x126478 (* ?x126312 l_0_20_166)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x125987 (* ?x125699 l_0_20_153)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x125985 (* ?x125696 l_0_20_152)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x126474 (* ?x125682 l_0_20_151)))
 (let ((?x82263 (+ (* (* (- 2.0) l_0_20_10) l_0_20_25) (* (* 1.0 l_0_20_112) l_0_20_115))))
 (let ((?x126473 (+ (+ ?x82263 (* (* 1.0 l_0_20_113) l_0_20_116)) (* (* 1.0 l_0_20_114) l_0_20_117))))
 (let ((?x126485 (- (- (- (- (- (- (- ?x126473 ?x126474) ?x125985) ?x125987) ?x126478) ?x126480) ?x126482) ?x126484)))
 (let ((?x126499 (- (- (- (+ (+ (+ (+ ?x126485 ?x126486) ?x126488) ?x126490) ?x126492) ?x126494) ?x126496) ?x126498)))
 (let ((?x126510 (- (+ (+ (+ (+ ?x126499 ?x126500) ?x126502) ?x126504) ?x126506) (* (* 1.0 l_0_20_76) l_0_20_79))))
 (let ((?x126516 (- (- ?x126510 (* (* 1.0 l_0_20_77) l_0_20_80)) (* (* 1.0 l_0_20_78) l_0_20_81))))
 (= ?x126516 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x126345 (* 2.0 l_0_20_46)))
 (let ((?x126622 (* ?x126345 l_0_20_68)))
 (let ((?x126342 (* 2.0 l_0_20_45)))
 (let ((?x126620 (* ?x126342 l_0_20_67)))
 (let ((?x126339 (* 2.0 l_0_20_44)))
 (let ((?x126618 (* ?x126339 l_0_20_66)))
 (let ((?x126336 (* 2.0 l_0_20_43)))
 (let ((?x126616 (* ?x126336 l_0_20_65)))
 (let ((?x125561 (* 2.0 l_0_20_31)))
 (let ((?x126614 (* ?x125561 l_0_20_9)))
 (let ((?x125558 (* 2.0 l_0_20_30)))
 (let ((?x126612 (* ?x125558 l_0_20_8)))
 (let ((?x125550 (* 2.0 l_0_20_29)))
 (let ((?x126610 (* ?x125550 l_0_20_7)))
 (let ((?x126333 (* 2.0 l_0_20_190)))
 (let ((?x126608 (* ?x126333 l_0_20_212)))
 (let ((?x126330 (* 2.0 l_0_20_189)))
 (let ((?x126606 (* ?x126330 l_0_20_211)))
 (let ((?x126327 (* 2.0 l_0_20_188)))
 (let ((?x126604 (* ?x126327 l_0_20_210)))
 (let ((?x126324 (* 2.0 l_0_20_187)))
 (let ((?x126602 (* ?x126324 l_0_20_209)))
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126600 (* ?x126321 l_0_20_176)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126598 (* ?x126318 l_0_20_175)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126596 (* ?x126315 l_0_20_174)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x126594 (* ?x126312 l_0_20_173)))
 (let ((?x126601 (- (- (- (- (* (* (- 2.0) l_0_20_10) l_0_20_32) ?x126594) ?x126596) ?x126598) ?x126600)))
 (let ((?x126615 (- (- (- (+ (+ (+ (+ ?x126601 ?x126602) ?x126604) ?x126606) ?x126608) ?x126610) ?x126612) ?x126614)))
 (= (+ (+ (+ (+ ?x126615 ?x126616) ?x126618) ?x126620) ?x126622) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x126706 (* l_0_20_51 l_0_20_51)))
 (let ((?x126704 (* l_0_20_50 l_0_20_50)))
 (let ((?x126702 (* l_0_20_49 l_0_20_49)))
 (let ((?x126700 (* l_0_20_48 l_0_20_48)))
 (let ((?x126698 (* l_0_20_47 l_0_20_47)))
 (let ((?x126696 (* l_0_20_195 l_0_20_195)))
 (let ((?x126694 (* l_0_20_194 l_0_20_194)))
 (let ((?x126692 (* l_0_20_193 l_0_20_193)))
 (let ((?x126690 (* l_0_20_192 l_0_20_192)))
 (let ((?x126688 (* l_0_20_191 l_0_20_191)))
 (let ((?x126686 (* l_0_20_159 l_0_20_159)))
 (let ((?x126684 (* l_0_20_158 l_0_20_158)))
 (let ((?x126682 (* l_0_20_157 l_0_20_157)))
 (let ((?x126680 (* l_0_20_156 l_0_20_156)))
 (let ((?x126678 (* l_0_20_155 l_0_20_155)))
 (let ((?x126676 (* l_0_20_15 l_0_20_15)))
 (let ((?x126674 (* l_0_20_14 l_0_20_14)))
 (let ((?x126672 (* l_0_20_13 l_0_20_13)))
 (let ((?x126673 (- (- (* (- l_0_20_11) l_0_20_11) (* l_0_20_12 l_0_20_12)) ?x126672)))
 (let ((?x126687 (- (- (- (- (- (- (- ?x126673 ?x126674) ?x126676) ?x126678) ?x126680) ?x126682) ?x126684) ?x126686)))
 (let ((?x126701 (+ (+ (+ (+ (+ (+ (+ ?x126687 ?x126688) ?x126690) ?x126692) ?x126694) ?x126696) ?x126698) ?x126700)))
 (= (+ (+ (+ ?x126701 ?x126702) ?x126704) ?x126706) 0.0)))))))))))))))))))))))
(assert
 (let ((?x126792 (* 2.0 l_0_20_51)))
 (let ((?x126793 (* ?x126792 l_0_20_56)))
 (let ((?x126789 (* 2.0 l_0_20_50)))
 (let ((?x126790 (* ?x126789 l_0_20_55)))
 (let ((?x126786 (* 2.0 l_0_20_49)))
 (let ((?x126787 (* ?x126786 l_0_20_54)))
 (let ((?x126783 (* 2.0 l_0_20_48)))
 (let ((?x126784 (* ?x126783 l_0_20_53)))
 (let ((?x126780 (* 2.0 l_0_20_47)))
 (let ((?x126781 (* ?x126780 l_0_20_52)))
 (let ((?x126777 (* 2.0 l_0_20_195)))
 (let ((?x126778 (* ?x126777 l_0_20_200)))
 (let ((?x126774 (* 2.0 l_0_20_194)))
 (let ((?x126775 (* ?x126774 l_0_20_199)))
 (let ((?x126771 (* 2.0 l_0_20_193)))
 (let ((?x126772 (* ?x126771 l_0_20_198)))
 (let ((?x126768 (* 2.0 l_0_20_192)))
 (let ((?x126769 (* ?x126768 l_0_20_197)))
 (let ((?x126765 (* 2.0 l_0_20_191)))
 (let ((?x126766 (* ?x126765 l_0_20_196)))
 (let ((?x126762 (* 2.0 l_0_20_159)))
 (let ((?x126763 (* ?x126762 l_0_20_164)))
 (let ((?x126759 (* 2.0 l_0_20_158)))
 (let ((?x126760 (* ?x126759 l_0_20_163)))
 (let ((?x126756 (* 2.0 l_0_20_157)))
 (let ((?x126757 (* ?x126756 l_0_20_162)))
 (let ((?x126753 (* 2.0 l_0_20_156)))
 (let ((?x126754 (* ?x126753 l_0_20_161)))
 (let ((?x126750 (* 2.0 l_0_20_155)))
 (let ((?x126751 (* ?x126750 l_0_20_160)))
 (let ((?x126747 (* 2.0 l_0_20_15)))
 (let ((?x126748 (* ?x126747 l_0_20_20)))
 (let ((?x126744 (* 2.0 l_0_20_14)))
 (let ((?x126745 (* ?x126744 l_0_20_19)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126742 (* ?x126040 l_0_20_18)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126740 (* ?x125620 l_0_20_17)))
 (let ((?x126749 (- (- (- (- (* (* (- 2.0) l_0_20_11) l_0_20_16) ?x126740) ?x126742) ?x126745) ?x126748)))
 (let ((?x126770 (+ (+ (- (- (- (- (- ?x126749 ?x126751) ?x126754) ?x126757) ?x126760) ?x126763) ?x126766) ?x126769)))
 (let ((?x126791 (+ (+ (+ (+ (+ (+ (+ ?x126770 ?x126772) ?x126775) ?x126778) ?x126781) ?x126784) ?x126787) ?x126790)))
 (= (+ ?x126791 ?x126793) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x126792 (* 2.0 l_0_20_51)))
 (let ((?x126898 (* ?x126792 l_0_20_62)))
 (let ((?x126789 (* 2.0 l_0_20_50)))
 (let ((?x126896 (* ?x126789 l_0_20_61)))
 (let ((?x126786 (* 2.0 l_0_20_49)))
 (let ((?x126894 (* ?x126786 l_0_20_60)))
 (let ((?x126783 (* 2.0 l_0_20_48)))
 (let ((?x126892 (* ?x126783 l_0_20_59)))
 (let ((?x126780 (* 2.0 l_0_20_47)))
 (let ((?x126890 (* ?x126780 l_0_20_58)))
 (let ((?x126777 (* 2.0 l_0_20_195)))
 (let ((?x126888 (* ?x126777 l_0_20_206)))
 (let ((?x126774 (* 2.0 l_0_20_194)))
 (let ((?x126886 (* ?x126774 l_0_20_205)))
 (let ((?x126771 (* 2.0 l_0_20_193)))
 (let ((?x126884 (* ?x126771 l_0_20_204)))
 (let ((?x126768 (* 2.0 l_0_20_192)))
 (let ((?x126882 (* ?x126768 l_0_20_203)))
 (let ((?x126765 (* 2.0 l_0_20_191)))
 (let ((?x126880 (* ?x126765 l_0_20_202)))
 (let ((?x126762 (* 2.0 l_0_20_159)))
 (let ((?x126878 (* ?x126762 l_0_20_170)))
 (let ((?x126759 (* 2.0 l_0_20_158)))
 (let ((?x126876 (* ?x126759 l_0_20_169)))
 (let ((?x126756 (* 2.0 l_0_20_157)))
 (let ((?x126874 (* ?x126756 l_0_20_168)))
 (let ((?x126753 (* 2.0 l_0_20_156)))
 (let ((?x126872 (* ?x126753 l_0_20_167)))
 (let ((?x126750 (* 2.0 l_0_20_155)))
 (let ((?x126870 (* ?x126750 l_0_20_166)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x126047 (* ?x125699 l_0_20_157)))
 (let ((?x126747 (* 2.0 l_0_20_15)))
 (let ((?x126867 (* ?x126747 l_0_20_26)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x126045 (* ?x125696 l_0_20_156)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x126043 (* ?x125682 l_0_20_155)))
 (let ((?x126744 (* 2.0 l_0_20_14)))
 (let ((?x126863 (* ?x126744 l_0_20_25)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126848 (* ?x126040 l_0_20_24)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126844 (* ?x125620 l_0_20_23)))
 (let ((?x126834 (+ (* (* (- 2.0) l_0_20_11) l_0_20_22) (* (* 1.0 l_0_20_112) l_0_20_119))))
 (let ((?x126842 (+ (+ ?x126834 (* (* 1.0 l_0_20_113) l_0_20_120)) (* (* 1.0 l_0_20_114) l_0_20_121))))
 (let ((?x126869 (- (- (- (- (- (- (- ?x126842 ?x126844) ?x126848) ?x126863) ?x126043) ?x126045) ?x126867) ?x126047)))
 (let ((?x126883 (+ (+ (- (- (- (- (- ?x126869 ?x126870) ?x126872) ?x126874) ?x126876) ?x126878) ?x126880) ?x126882)))
 (let ((?x126897 (+ (+ (+ (+ (+ (+ (+ ?x126883 ?x126884) ?x126886) ?x126888) ?x126890) ?x126892) ?x126894) ?x126896)))
 (let ((?x126903 (- (- (+ ?x126897 ?x126898) (* (* 1.0 l_0_20_76) l_0_20_83)) (* (* 1.0 l_0_20_77) l_0_20_84))))
 (= (- ?x126903 (* (* 1.0 l_0_20_78) l_0_20_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x126792 (* 2.0 l_0_20_51)))
 (let ((?x126984 (* ?x126792 l_0_20_69)))
 (let ((?x126789 (* 2.0 l_0_20_50)))
 (let ((?x126982 (* ?x126789 l_0_20_68)))
 (let ((?x126786 (* 2.0 l_0_20_49)))
 (let ((?x126980 (* ?x126786 l_0_20_67)))
 (let ((?x126783 (* 2.0 l_0_20_48)))
 (let ((?x126978 (* ?x126783 l_0_20_66)))
 (let ((?x126780 (* 2.0 l_0_20_47)))
 (let ((?x126976 (* ?x126780 l_0_20_65)))
 (let ((?x126777 (* 2.0 l_0_20_195)))
 (let ((?x126974 (* ?x126777 l_0_20_213)))
 (let ((?x126774 (* 2.0 l_0_20_194)))
 (let ((?x126972 (* ?x126774 l_0_20_212)))
 (let ((?x126771 (* 2.0 l_0_20_193)))
 (let ((?x126970 (* ?x126771 l_0_20_211)))
 (let ((?x126768 (* 2.0 l_0_20_192)))
 (let ((?x126968 (* ?x126768 l_0_20_210)))
 (let ((?x126765 (* 2.0 l_0_20_191)))
 (let ((?x126966 (* ?x126765 l_0_20_209)))
 (let ((?x126762 (* 2.0 l_0_20_159)))
 (let ((?x126964 (* ?x126762 l_0_20_177)))
 (let ((?x126759 (* 2.0 l_0_20_158)))
 (let ((?x126962 (* ?x126759 l_0_20_176)))
 (let ((?x126756 (* 2.0 l_0_20_157)))
 (let ((?x126960 (* ?x126756 l_0_20_175)))
 (let ((?x126753 (* 2.0 l_0_20_156)))
 (let ((?x126958 (* ?x126753 l_0_20_174)))
 (let ((?x126750 (* 2.0 l_0_20_155)))
 (let ((?x126956 (* ?x126750 l_0_20_173)))
 (let ((?x126747 (* 2.0 l_0_20_15)))
 (let ((?x126954 (* ?x126747 l_0_20_33)))
 (let ((?x126744 (* 2.0 l_0_20_14)))
 (let ((?x126952 (* ?x126744 l_0_20_32)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126950 (* ?x126040 l_0_20_31)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126948 (* ?x125620 l_0_20_30)))
 (let ((?x126955 (- (- (- (- (* (* (- 2.0) l_0_20_11) l_0_20_29) ?x126948) ?x126950) ?x126952) ?x126954)))
 (let ((?x126969 (+ (+ (- (- (- (- (- ?x126955 ?x126956) ?x126958) ?x126960) ?x126962) ?x126964) ?x126966) ?x126968)))
 (let ((?x126983 (+ (+ (+ (+ (+ (+ (+ ?x126969 ?x126970) ?x126972) ?x126974) ?x126976) ?x126978) ?x126980) ?x126982)))
 (= (+ ?x126983 ?x126984) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127092 (* l_0_20_57 l_0_20_57)))
 (let ((?x127090 (* l_0_20_56 l_0_20_56)))
 (let ((?x127088 (* l_0_20_55 l_0_20_55)))
 (let ((?x127086 (* l_0_20_54 l_0_20_54)))
 (let ((?x127084 (* l_0_20_53 l_0_20_53)))
 (let ((?x127082 (* l_0_20_52 l_0_20_52)))
 (let ((?x127080 (* l_0_20_21 l_0_20_21)))
 (let ((?x127078 (* l_0_20_201 l_0_20_201)))
 (let ((?x127076 (* l_0_20_200 l_0_20_200)))
 (let ((?x127074 (* l_0_20_20 l_0_20_20)))
 (let ((?x127072 (* l_0_20_199 l_0_20_199)))
 (let ((?x127070 (* l_0_20_198 l_0_20_198)))
 (let ((?x127068 (* l_0_20_197 l_0_20_197)))
 (let ((?x127066 (* l_0_20_196 l_0_20_196)))
 (let ((?x127064 (* l_0_20_19 l_0_20_19)))
 (let ((?x127062 (* l_0_20_18 l_0_20_18)))
 (let ((?x127060 (* l_0_20_17 l_0_20_17)))
 (let ((?x127058 (* l_0_20_165 l_0_20_165)))
 (let ((?x127043 (* l_0_20_164 l_0_20_164)))
 (let ((?x127040 (* l_0_20_163 l_0_20_163)))
 (let ((?x127036 (* l_0_20_162 l_0_20_162)))
 (let ((?x127032 (* l_0_20_161 l_0_20_161)))
 (let ((?x127034 (- (- (* (- l_0_20_16) l_0_20_16) (* l_0_20_160 l_0_20_160)) ?x127032)))
 (let ((?x127065 (- (- (- (- (- (- (- ?x127034 ?x127036) ?x127040) ?x127043) ?x127058) ?x127060) ?x127062) ?x127064)))
 (let ((?x127079 (+ (+ (- (+ (+ (+ (+ ?x127065 ?x127066) ?x127068) ?x127070) ?x127072) ?x127074) ?x127076) ?x127078)))
 (let ((?x127093 (+ (+ (+ (+ (+ (+ (- ?x127079 ?x127080) ?x127082) ?x127084) ?x127086) ?x127088) ?x127090) ?x127092)))
 (= ?x127093 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x127210 (* 2.0 l_0_20_57)))
 (let ((?x127211 (* ?x127210 l_0_20_63)))
 (let ((?x127207 (* 2.0 l_0_20_56)))
 (let ((?x127208 (* ?x127207 l_0_20_62)))
 (let ((?x127204 (* 2.0 l_0_20_55)))
 (let ((?x127205 (* ?x127204 l_0_20_61)))
 (let ((?x127201 (* 2.0 l_0_20_54)))
 (let ((?x127202 (* ?x127201 l_0_20_60)))
 (let ((?x127198 (* 2.0 l_0_20_53)))
 (let ((?x127199 (* ?x127198 l_0_20_59)))
 (let ((?x127195 (* 2.0 l_0_20_52)))
 (let ((?x127196 (* ?x127195 l_0_20_58)))
 (let ((?x127192 (* 2.0 l_0_20_21)))
 (let ((?x127193 (* ?x127192 l_0_20_27)))
 (let ((?x127189 (* 2.0 l_0_20_201)))
 (let ((?x127190 (* ?x127189 l_0_20_207)))
 (let ((?x127186 (* 2.0 l_0_20_200)))
 (let ((?x127187 (* ?x127186 l_0_20_206)))
 (let ((?x127183 (* 2.0 l_0_20_20)))
 (let ((?x127184 (* ?x127183 l_0_20_26)))
 (let ((?x127180 (* 2.0 l_0_20_199)))
 (let ((?x127181 (* ?x127180 l_0_20_205)))
 (let ((?x127177 (* 2.0 l_0_20_198)))
 (let ((?x127178 (* ?x127177 l_0_20_204)))
 (let ((?x127174 (* 2.0 l_0_20_197)))
 (let ((?x127175 (* ?x127174 l_0_20_203)))
 (let ((?x127171 (* 2.0 l_0_20_196)))
 (let ((?x127172 (* ?x127171 l_0_20_202)))
 (let ((?x127168 (* 2.0 l_0_20_19)))
 (let ((?x127169 (* ?x127168 l_0_20_25)))
 (let ((?x126102 (* 2.0 l_0_20_18)))
 (let ((?x127166 (* ?x126102 l_0_20_24)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x127164 (* ?x125705 l_0_20_23)))
 (let ((?x127161 (* 2.0 l_0_20_165)))
 (let ((?x127162 (* ?x127161 l_0_20_171)))
 (let ((?x127158 (* 2.0 l_0_20_164)))
 (let ((?x127159 (* ?x127158 l_0_20_170)))
 (let ((?x127155 (* 2.0 l_0_20_163)))
 (let ((?x127156 (* ?x127155 l_0_20_169)))
 (let ((?x127152 (* 2.0 l_0_20_162)))
 (let ((?x127153 (* ?x127152 l_0_20_168)))
 (let ((?x127149 (* 2.0 l_0_20_161)))
 (let ((?x127150 (* ?x127149 l_0_20_167)))
 (let ((?x127146 (* 2.0 l_0_20_160)))
 (let ((?x127147 (* ?x127146 l_0_20_166)))
 (let ((?x125702 (* 2.0 l_0_20_16)))
 (let ((?x127144 (* ?x125702 l_0_20_22)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x126096 (* ?x125699 l_0_20_162)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x126094 (* ?x125696 l_0_20_161)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x127140 (* ?x125682 l_0_20_160)))
 (let ((?x127137 (+ (* (* 1.0 l_0_20_112) l_0_20_124) (* (* 1.0 l_0_20_113) l_0_20_125))))
 (let ((?x127143 (- (- (- (+ ?x127137 (* (* 1.0 l_0_20_114) l_0_20_126)) ?x127140) ?x126094) ?x126096)))
 (let ((?x127163 (- (- (- (- (- (- (- ?x127143 ?x127144) ?x127147) ?x127150) ?x127153) ?x127156) ?x127159) ?x127162)))
 (let ((?x127182 (+ (+ (+ (+ (- (- (- ?x127163 ?x127164) ?x127166) ?x127169) ?x127172) ?x127175) ?x127178) ?x127181)))
 (let ((?x127203 (+ (+ (+ (- (+ (+ (- ?x127182 ?x127184) ?x127187) ?x127190) ?x127193) ?x127196) ?x127199) ?x127202)))
 (let ((?x127214 (- (+ (+ (+ ?x127203 ?x127205) ?x127208) ?x127211) (* (* 1.0 l_0_20_76) l_0_20_88))))
 (let ((?x127218 (- (- ?x127214 (* (* 1.0 l_0_20_77) l_0_20_89)) (* (* 1.0 l_0_20_78) l_0_20_90))))
 (= ?x127218 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127210 (* 2.0 l_0_20_57)))
 (let ((?x127362 (* ?x127210 l_0_20_70)))
 (let ((?x127207 (* 2.0 l_0_20_56)))
 (let ((?x127360 (* ?x127207 l_0_20_69)))
 (let ((?x127204 (* 2.0 l_0_20_55)))
 (let ((?x127358 (* ?x127204 l_0_20_68)))
 (let ((?x127201 (* 2.0 l_0_20_54)))
 (let ((?x127356 (* ?x127201 l_0_20_67)))
 (let ((?x127198 (* 2.0 l_0_20_53)))
 (let ((?x127354 (* ?x127198 l_0_20_66)))
 (let ((?x127195 (* 2.0 l_0_20_52)))
 (let ((?x127352 (* ?x127195 l_0_20_65)))
 (let ((?x127192 (* 2.0 l_0_20_21)))
 (let ((?x127350 (* ?x127192 l_0_20_34)))
 (let ((?x127189 (* 2.0 l_0_20_201)))
 (let ((?x127348 (* ?x127189 l_0_20_214)))
 (let ((?x127186 (* 2.0 l_0_20_200)))
 (let ((?x127346 (* ?x127186 l_0_20_213)))
 (let ((?x127183 (* 2.0 l_0_20_20)))
 (let ((?x127344 (* ?x127183 l_0_20_33)))
 (let ((?x127180 (* 2.0 l_0_20_199)))
 (let ((?x127342 (* ?x127180 l_0_20_212)))
 (let ((?x127177 (* 2.0 l_0_20_198)))
 (let ((?x127340 (* ?x127177 l_0_20_211)))
 (let ((?x127174 (* 2.0 l_0_20_197)))
 (let ((?x127338 (* ?x127174 l_0_20_210)))
 (let ((?x127171 (* 2.0 l_0_20_196)))
 (let ((?x127336 (* ?x127171 l_0_20_209)))
 (let ((?x127168 (* 2.0 l_0_20_19)))
 (let ((?x127334 (* ?x127168 l_0_20_32)))
 (let ((?x126102 (* 2.0 l_0_20_18)))
 (let ((?x127332 (* ?x126102 l_0_20_31)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x127330 (* ?x125705 l_0_20_30)))
 (let ((?x127161 (* 2.0 l_0_20_165)))
 (let ((?x127328 (* ?x127161 l_0_20_178)))
 (let ((?x127158 (* 2.0 l_0_20_164)))
 (let ((?x127326 (* ?x127158 l_0_20_177)))
 (let ((?x127155 (* 2.0 l_0_20_163)))
 (let ((?x127324 (* ?x127155 l_0_20_176)))
 (let ((?x127152 (* 2.0 l_0_20_162)))
 (let ((?x127322 (* ?x127152 l_0_20_175)))
 (let ((?x127149 (* 2.0 l_0_20_161)))
 (let ((?x127320 (* ?x127149 l_0_20_174)))
 (let ((?x127146 (* 2.0 l_0_20_160)))
 (let ((?x127318 (* ?x127146 l_0_20_173)))
 (let ((?x127325 (- (- (- (- (* (* (- 2.0) l_0_20_16) l_0_20_29) ?x127318) ?x127320) ?x127322) ?x127324)))
 (let ((?x127339 (+ (+ (- (- (- (- (- ?x127325 ?x127326) ?x127328) ?x127330) ?x127332) ?x127334) ?x127336) ?x127338)))
 (let ((?x127353 (+ (- (+ (+ (- (+ (+ ?x127339 ?x127340) ?x127342) ?x127344) ?x127346) ?x127348) ?x127350) ?x127352)))
 (= (+ (+ (+ (+ (+ ?x127353 ?x127354) ?x127356) ?x127358) ?x127360) ?x127362) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127479 (* l_0_20_64 l_0_20_64)))
 (let ((?x127477 (* l_0_20_63 l_0_20_63)))
 (let ((?x127475 (* l_0_20_62 l_0_20_62)))
 (let ((?x127473 (* l_0_20_61 l_0_20_61)))
 (let ((?x127471 (* l_0_20_60 l_0_20_60)))
 (let ((?x127469 (* l_0_20_59 l_0_20_59)))
 (let ((?x127467 (* l_0_20_58 l_0_20_58)))
 (let ((?x127465 (* l_0_20_28 l_0_20_28)))
 (let ((?x127463 (* l_0_20_27 l_0_20_27)))
 (let ((?x127461 (* l_0_20_26 l_0_20_26)))
 (let ((?x127459 (* l_0_20_25 l_0_20_25)))
 (let ((?x127457 (* l_0_20_24 l_0_20_24)))
 (let ((?x127455 (* l_0_20_23 l_0_20_23)))
 (let ((?x127453 (* l_0_20_22 l_0_20_22)))
 (let ((?x127451 (* l_0_20_208 l_0_20_208)))
 (let ((?x127449 (* l_0_20_207 l_0_20_207)))
 (let ((?x127447 (* l_0_20_206 l_0_20_206)))
 (let ((?x127445 (* l_0_20_205 l_0_20_205)))
 (let ((?x127443 (* l_0_20_204 l_0_20_204)))
 (let ((?x127441 (* l_0_20_203 l_0_20_203)))
 (let ((?x127439 (* l_0_20_202 l_0_20_202)))
 (let ((?x127437 (* l_0_20_172 l_0_20_172)))
 (let ((?x127435 (* l_0_20_171 l_0_20_171)))
 (let ((?x127433 (* l_0_20_170 l_0_20_170)))
 (let ((?x127431 (* l_0_20_169 l_0_20_169)))
 (let ((?x127429 (* l_0_20_168 l_0_20_168)))
 (let ((?x127427 (* l_0_20_167 l_0_20_167)))
 (let ((?x127425 (* l_0_20_166 l_0_20_166)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x126160 (* ?x125699 l_0_20_168)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x126157 (* ?x125696 l_0_20_167)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x126154 (* ?x125682 l_0_20_166)))
 (let ((?x127419 (+ (* (* 1.0 l_0_20_112) l_0_20_130) (* (* 1.0 l_0_20_113) l_0_20_131))))
 (let ((?x127424 (- (- (- (+ ?x127419 (* (* 1.0 l_0_20_114) l_0_20_132)) ?x126154) ?x126157) ?x126160)))
 (let ((?x127438 (- (- (- (- (- (- (- ?x127424 ?x127425) ?x127427) ?x127429) ?x127431) ?x127433) ?x127435) ?x127437)))
 (let ((?x127452 (+ (+ (+ (+ (+ (+ (+ ?x127438 ?x127439) ?x127441) ?x127443) ?x127445) ?x127447) ?x127449) ?x127451)))
 (let ((?x127466 (- (- (- (- (- (- (- ?x127452 ?x127453) ?x127455) ?x127457) ?x127459) ?x127461) ?x127463) ?x127465)))
 (let ((?x127480 (+ (+ (+ (+ (+ (+ (+ ?x127466 ?x127467) ?x127469) ?x127471) ?x127473) ?x127475) ?x127477) ?x127479)))
 (let ((?x127484 (- (- ?x127480 (* (* 1.0 l_0_20_76) l_0_20_94)) (* (* 1.0 l_0_20_77) l_0_20_95))))
 (= (- ?x127484 (* (* 1.0 l_0_20_78) l_0_20_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127647 (* (* 2.0 l_0_20_64) l_0_20_71)))
 (let ((?x127644 (* (* 2.0 l_0_20_63) l_0_20_70)))
 (let ((?x127641 (* (* 2.0 l_0_20_62) l_0_20_69)))
 (let ((?x127638 (* (* 2.0 l_0_20_61) l_0_20_68)))
 (let ((?x127635 (* (* 2.0 l_0_20_60) l_0_20_67)))
 (let ((?x127632 (* (* 2.0 l_0_20_59) l_0_20_66)))
 (let ((?x127629 (* (* 2.0 l_0_20_58) l_0_20_65)))
 (let ((?x127626 (* (* 2.0 l_0_20_28) l_0_20_35)))
 (let ((?x127623 (* (* 2.0 l_0_20_27) l_0_20_34)))
 (let ((?x127620 (* (* 2.0 l_0_20_26) l_0_20_33)))
 (let ((?x127617 (* (* 2.0 l_0_20_25) l_0_20_32)))
 (let ((?x126174 (* 2.0 l_0_20_24)))
 (let ((?x127614 (* ?x126174 l_0_20_31)))
 (let ((?x125820 (* 2.0 l_0_20_23)))
 (let ((?x127612 (* ?x125820 l_0_20_30)))
 (let ((?x126169 (* 2.0 l_0_20_22)))
 (let ((?x127610 (* ?x126169 l_0_20_29)))
 (let ((?x127608 (* (* 2.0 l_0_20_208) l_0_20_215)))
 (let ((?x127605 (* (* 2.0 l_0_20_207) l_0_20_214)))
 (let ((?x127602 (* (* 2.0 l_0_20_206) l_0_20_213)))
 (let ((?x127599 (* (* 2.0 l_0_20_205) l_0_20_212)))
 (let ((?x127596 (* (* 2.0 l_0_20_204) l_0_20_211)))
 (let ((?x127593 (* (* 2.0 l_0_20_203) l_0_20_210)))
 (let ((?x127590 (* (* 2.0 l_0_20_202) l_0_20_209)))
 (let ((?x127587 (* (* 2.0 l_0_20_172) l_0_20_179)))
 (let ((?x127584 (* (* 2.0 l_0_20_171) l_0_20_178)))
 (let ((?x127581 (* (* 2.0 l_0_20_170) l_0_20_177)))
 (let ((?x127578 (* (* 2.0 l_0_20_169) l_0_20_176)))
 (let ((?x127575 (* (* 2.0 l_0_20_168) l_0_20_175)))
 (let ((?x127572 (* (* 2.0 l_0_20_167) l_0_20_174)))
 (let ((?x127569 (* (* 2.0 l_0_20_166) l_0_20_173)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x125700 (* ?x125699 l_0_20_175)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x125697 (* ?x125696 l_0_20_174)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x125684 (* ?x125682 l_0_20_173)))
 (let ((?x127555 (- (* (* (- 1.0) l_0_20_101) l_0_20_76) (* (* 1.0 l_0_20_102) l_0_20_77))))
 (let ((?x127560 (+ (- ?x127555 (* (* 1.0 l_0_20_103) l_0_20_78)) (* (* 1.0 l_0_20_112) l_0_20_137))))
 (let ((?x127564 (+ (+ ?x127560 (* (* 1.0 l_0_20_113) l_0_20_138)) (* (* 1.0 l_0_20_114) l_0_20_139))))
 (let ((?x127579 (- (- (- (- (- (- (- ?x127564 ?x125684) ?x125697) ?x125700) ?x127569) ?x127572) ?x127575) ?x127578)))
 (let ((?x127600 (+ (+ (+ (+ (- (- (- ?x127579 ?x127581) ?x127584) ?x127587) ?x127590) ?x127593) ?x127596) ?x127599)))
 (let ((?x127618 (- (- (- (- (+ (+ (+ ?x127600 ?x127602) ?x127605) ?x127608) ?x127610) ?x127612) ?x127614) ?x127617)))
 (let ((?x127639 (+ (+ (+ (+ (- (- (- ?x127618 ?x127620) ?x127623) ?x127626) ?x127629) ?x127632) ?x127635) ?x127638)))
 (= (+ (+ (+ ?x127639 ?x127641) ?x127644) ?x127647) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127811 (* l_0_20_72 l_0_20_72)))
 (let ((?x127809 (* l_0_20_71 l_0_20_71)))
 (let ((?x127807 (* l_0_20_70 l_0_20_70)))
 (let ((?x127805 (* l_0_20_69 l_0_20_69)))
 (let ((?x127803 (* l_0_20_68 l_0_20_68)))
 (let ((?x127801 (* l_0_20_67 l_0_20_67)))
 (let ((?x127799 (* l_0_20_66 l_0_20_66)))
 (let ((?x127797 (* l_0_20_65 l_0_20_65)))
 (let ((?x127795 (* l_0_20_36 l_0_20_36)))
 (let ((?x127793 (* l_0_20_35 l_0_20_35)))
 (let ((?x127791 (* l_0_20_34 l_0_20_34)))
 (let ((?x127789 (* l_0_20_33 l_0_20_33)))
 (let ((?x127787 (* l_0_20_32 l_0_20_32)))
 (let ((?x127785 (* l_0_20_31 l_0_20_31)))
 (let ((?x127783 (* l_0_20_30 l_0_20_30)))
 (let ((?x127781 (* l_0_20_29 l_0_20_29)))
 (let ((?x127779 (* l_0_20_216 l_0_20_216)))
 (let ((?x127777 (* l_0_20_215 l_0_20_215)))
 (let ((?x127775 (* l_0_20_214 l_0_20_214)))
 (let ((?x127773 (* l_0_20_213 l_0_20_213)))
 (let ((?x127771 (* l_0_20_212 l_0_20_212)))
 (let ((?x127769 (* l_0_20_211 l_0_20_211)))
 (let ((?x127767 (* l_0_20_210 l_0_20_210)))
 (let ((?x127765 (* l_0_20_209 l_0_20_209)))
 (let ((?x127763 (* l_0_20_180 l_0_20_180)))
 (let ((?x127761 (* l_0_20_179 l_0_20_179)))
 (let ((?x127759 (* l_0_20_178 l_0_20_178)))
 (let ((?x127757 (* l_0_20_177 l_0_20_177)))
 (let ((?x127736 (* l_0_20_176 l_0_20_176)))
 (let ((?x127732 (* l_0_20_175 l_0_20_175)))
 (let ((?x127734 (- (- (* (- l_0_20_173) l_0_20_173) (* l_0_20_174 l_0_20_174)) ?x127732)))
 (let ((?x127768 (+ (+ (- (- (- (- (- ?x127734 ?x127736) ?x127757) ?x127759) ?x127761) ?x127763) ?x127765) ?x127767)))
 (let ((?x127782 (- (+ (+ (+ (+ (+ (+ ?x127768 ?x127769) ?x127771) ?x127773) ?x127775) ?x127777) ?x127779) ?x127781)))
 (let ((?x127796 (- (- (- (- (- (- (- ?x127782 ?x127783) ?x127785) ?x127787) ?x127789) ?x127791) ?x127793) ?x127795)))
 (let ((?x127810 (+ (+ (+ (+ (+ (+ (+ ?x127796 ?x127797) ?x127799) ?x127801) ?x127803) ?x127805) ?x127807) ?x127809)))
 (= (+ ?x127810 ?x127811) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x125270 (* l_0_20_37 l_0_20_37)))
 (let ((?x127849 (* l_0_20_289 l_0_20_289)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x127847 (* ?x127846 l_0_20_295)))
 (let ((?x127848 (+ (- (* l_0_20_1 l_0_20_1) (* (* 2.0 l_0_20_109) l_0_20_115)) ?x127847)))
 (= (+ (- (+ ?x127848 ?x127849) ?x125270) (* (* 2.0 l_0_20_73) l_0_20_79)) 0.0)))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125322 (* ?x125321 l_0_20_38)))
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x127879 (* ?x127878 l_0_20_296)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x127876 (* ?x127875 l_0_20_295)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x127873 (* ?x127846 l_0_20_290)))
 (let ((?x127869 (- (* (* 2.0 l_0_20_1) l_0_20_2) (* (* 2.0 l_0_20_110) l_0_20_115))))
 (let ((?x127880 (+ (+ (+ (- ?x127869 (* (* 2.0 l_0_20_111) l_0_20_116)) ?x127873) ?x127876) ?x127879)))
 (let ((?x127886 (- (- ?x127880 (* (* 2.0 l_0_20_325) l_0_20_331)) (* (* 2.0 l_0_20_361) l_0_20_367))))
 (let ((?x127893 (- (- (- ?x127886 ?x125322) (* (* 2.0 l_0_20_397) l_0_20_403)) (* (* 2.0 l_0_20_433) l_0_20_439))))
 (let ((?x127899 (+ (- ?x127893 (* (* 2.0 l_0_20_469) l_0_20_475)) (* (* 2.0 l_0_20_74) l_0_20_79))))
 (= (+ ?x127899 (* (* 2.0 l_0_20_75) l_0_20_80)) 0.0)))))))))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125364 (* ?x125321 l_0_20_40)))
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x127950 (* ?x125318 l_0_20_297)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x127948 (* ?x125315 l_0_20_296)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x127946 (* ?x125312 l_0_20_295)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x127944 (* ?x127846 l_0_20_292)))
 (let ((?x127932 (- (* (* 2.0 l_0_20_1) l_0_20_4) (* (* 2.0 l_0_20_112) l_0_20_115))))
 (let ((?x127943 (- (- ?x127932 (* (* 2.0 l_0_20_113) l_0_20_116)) (* (* 2.0 l_0_20_114) l_0_20_117))))
 (let ((?x127955 (+ (- (+ (+ (+ (+ ?x127943 ?x127944) ?x127946) ?x127948) ?x127950) ?x125364) (* (* 2.0 l_0_20_76) l_0_20_79))))
 (let ((?x127961 (+ (+ ?x127955 (* (* 2.0 l_0_20_77) l_0_20_80)) (* (* 2.0 l_0_20_78) l_0_20_81))))
 (= ?x127961 0.0))))))))))))))))
(assert
 (let ((?x128006 (* l_0_20_82 l_0_20_82)))
 (let ((?x128004 (* l_0_20_81 l_0_20_81)))
 (let ((?x128002 (* l_0_20_80 l_0_20_80)))
 (let ((?x128000 (* l_0_20_79 l_0_20_79)))
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x104227 (* ?x125321 l_0_20_43)))
 (let ((?x127997 (* l_0_20_298 l_0_20_298)))
 (let ((?x127995 (* l_0_20_297 l_0_20_297)))
 (let ((?x127993 (* l_0_20_296 l_0_20_296)))
 (let ((?x127991 (* l_0_20_295 l_0_20_295)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x127847 (* ?x127846 l_0_20_295)))
 (let ((?x127988 (* l_0_20_118 l_0_20_118)))
 (let ((?x127986 (* l_0_20_117 l_0_20_117)))
 (let ((?x127984 (* l_0_20_116 l_0_20_116)))
 (let ((?x127985 (- (- (* (* 2.0 l_0_20_1) l_0_20_7) (* l_0_20_115 l_0_20_115)) ?x127984)))
 (let ((?x127998 (+ (+ (+ (+ (+ (- (- ?x127985 ?x127986) ?x127988) ?x127847) ?x127991) ?x127993) ?x127995) ?x127997)))
 (= (+ (+ (+ (+ (- ?x127998 ?x104227) ?x128000) ?x128002) ?x128004) ?x128006) 0.0)))))))))))))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125390 (* ?x125321 l_0_20_47)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128051 (* ?x128050 l_0_20_302)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128048 (* ?x128047 l_0_20_301)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128045 (* ?x128044 l_0_20_300)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128042 (* ?x128041 l_0_20_299)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128039 (* ?x127846 l_0_20_299)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x128037 (* ?x128036 l_0_20_259)))
 (let ((?x128026 (- (* (* 2.0 l_0_20_1) l_0_20_11) (* (* 2.0 l_0_20_115) l_0_20_119))))
 (let ((?x128032 (- (- ?x128026 (* (* 2.0 l_0_20_116) l_0_20_120)) (* (* 2.0 l_0_20_117) l_0_20_121))))
 (let ((?x128043 (+ (+ (+ (- ?x128032 (* (* 2.0 l_0_20_118) l_0_20_122)) ?x128037) ?x128039) ?x128042)))
 (let ((?x128056 (+ (- (+ (+ (+ ?x128043 ?x128045) ?x128048) ?x128051) ?x125390) (* (* 2.0 l_0_20_79) l_0_20_83))))
 (let ((?x128062 (+ (+ ?x128056 (* (* 2.0 l_0_20_80) l_0_20_84)) (* (* 2.0 l_0_20_81) l_0_20_85))))
 (= (+ ?x128062 (* (* 2.0 l_0_20_82) l_0_20_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125413 (* ?x125321 l_0_20_52)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128130 (* ?x128050 l_0_20_307)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128128 (* ?x128047 l_0_20_306)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128126 (* ?x128044 l_0_20_305)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128124 (* ?x128041 l_0_20_304)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128122 (* ?x127846 l_0_20_304)))
 (let ((?x127847 (* ?x127846 l_0_20_295)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x104223 (* ?x125306 l_0_20_187)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x104219 (* ?x125303 l_0_20_151)))
 (let ((?x128099 (- (* (* 2.0 l_0_20_1) l_0_20_16) (* (* 2.0 l_0_20_115) l_0_20_124))))
 (let ((?x128116 (- (- ?x128099 (* (* 2.0 l_0_20_116) l_0_20_125)) (* (* 2.0 l_0_20_117) l_0_20_126))))
 (let ((?x128121 (- (- (+ (- ?x128116 (* (* 2.0 l_0_20_118) l_0_20_127)) ?x104219) ?x104223) ?x127847)))
 (let ((?x128134 (+ (- (+ (+ (+ (+ (+ ?x128121 ?x128122) ?x128124) ?x128126) ?x128128) ?x128130) ?x125413) (* (* 2.0 l_0_20_79) l_0_20_88))))
 (let ((?x128138 (+ (+ ?x128134 (* (* 2.0 l_0_20_80) l_0_20_89)) (* (* 2.0 l_0_20_81) l_0_20_90))))
 (= (+ ?x128138 (* (* 2.0 l_0_20_82) l_0_20_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125435 (* ?x125321 l_0_20_58)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128187 (* ?x128050 l_0_20_313)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128185 (* ?x128047 l_0_20_312)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128183 (* ?x128044 l_0_20_311)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128181 (* ?x128041 l_0_20_310)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128179 (* ?x127846 l_0_20_310)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x128037 (* ?x128036 l_0_20_259)))
 (let ((?x128171 (- (* (* 2.0 l_0_20_1) l_0_20_22) (* (* 2.0 l_0_20_115) l_0_20_130))))
 (let ((?x128175 (- (- ?x128171 (* (* 2.0 l_0_20_116) l_0_20_131)) (* (* 2.0 l_0_20_117) l_0_20_132))))
 (let ((?x128182 (+ (+ (- (- ?x128175 (* (* 2.0 l_0_20_118) l_0_20_133)) ?x128037) ?x128179) ?x128181)))
 (let ((?x128191 (+ (- (+ (+ (+ ?x128182 ?x128183) ?x128185) ?x128187) ?x125435) (* (* 2.0 l_0_20_79) l_0_20_94))))
 (let ((?x128195 (+ (+ ?x128191 (* (* 2.0 l_0_20_80) l_0_20_95)) (* (* 2.0 l_0_20_81) l_0_20_96))))
 (= (+ ?x128195 (* (* 2.0 l_0_20_82) l_0_20_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x125321 (* 2.0 l_0_20_37)))
 (let ((?x125464 (* ?x125321 l_0_20_65)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128274 (* ?x128050 l_0_20_320)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128272 (* ?x128047 l_0_20_319)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128270 (* ?x128044 l_0_20_318)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128268 (* ?x128041 l_0_20_317)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128266 (* ?x127846 l_0_20_317)))
 (let ((?x128236 (+ (* (* 2.0 l_0_20_1) l_0_20_29) (* (* 2.0 l_0_20_101) l_0_20_79))))
 (let ((?x128252 (+ (+ ?x128236 (* (* 2.0 l_0_20_102) l_0_20_80)) (* (* 2.0 l_0_20_103) l_0_20_81))))
 (let ((?x128257 (- (+ ?x128252 (* (* 2.0 l_0_20_104) l_0_20_82)) (* (* 2.0 l_0_20_115) l_0_20_137))))
 (let ((?x128261 (- (- ?x128257 (* (* 2.0 l_0_20_116) l_0_20_138)) (* (* 2.0 l_0_20_117) l_0_20_139))))
 (let ((?x128265 (- (- ?x128261 (* (* 2.0 l_0_20_118) l_0_20_140)) (* (* 2.0 l_0_20_217) l_0_20_223))))
 (= (- (+ (+ (+ (+ (+ ?x128265 ?x128266) ?x128268) ?x128270) ?x128272) ?x128274) ?x125464) 0.0)))))))))))))))))))
(assert
 (let ((?x125157 (* l_0_20_39 l_0_20_39)))
 (let ((?x125155 (* l_0_20_38 l_0_20_38)))
 (let ((?x125135 (* l_0_20_3 l_0_20_3)))
 (let ((?x125224 (* l_0_20_291 l_0_20_291)))
 (let ((?x128333 (+ (+ (+ (* l_0_20_2 l_0_20_2) (* l_0_20_290 l_0_20_290)) ?x125224) ?x125135)))
 (let ((?x128337 (- (- ?x128333 (* (* 2.0 l_0_20_326) l_0_20_331)) (* (* 2.0 l_0_20_327) l_0_20_332))))
 (let ((?x128341 (- (- ?x128337 (* (* 2.0 l_0_20_362) l_0_20_367)) (* (* 2.0 l_0_20_363) l_0_20_368))))
 (let ((?x128347 (- (- (- (- ?x128341 ?x125155) ?x125157) (* (* 2.0 l_0_20_398) l_0_20_403)) (* (* 2.0 l_0_20_399) l_0_20_404))))
 (let ((?x128351 (- (- ?x128347 (* (* 2.0 l_0_20_434) l_0_20_439)) (* (* 2.0 l_0_20_435) l_0_20_440))))
 (let ((?x128355 (- (- ?x128351 (* (* 2.0 l_0_20_470) l_0_20_475)) (* (* 2.0 l_0_20_471) l_0_20_476))))
 (= ?x128355 0.0))))))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125504 (* ?x125503 l_0_20_41)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125501 (* ?x125500 l_0_20_40)))
 (let ((?x125497 (* 2.0 l_0_20_3)))
 (let ((?x125498 (* ?x125497 l_0_20_5)))
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x37524 (* ?x127878 l_0_20_293)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x105276 (* ?x127875 l_0_20_292)))
 (let ((?x125488 (* 2.0 l_0_20_2)))
 (let ((?x125489 (* ?x125488 l_0_20_4)))
 (let ((?x105187 (- (+ (+ (+ ?x125489 ?x105276) ?x37524) ?x125498) (* (* 2.0 l_0_20_328) l_0_20_331))))
 (let ((?x82898 (- (- ?x105187 (* (* 2.0 l_0_20_329) l_0_20_332)) (* (* 2.0 l_0_20_330) l_0_20_333))))
 (let ((?x128387 (- (- ?x82898 (* (* 2.0 l_0_20_364) l_0_20_367)) (* (* 2.0 l_0_20_365) l_0_20_368))))
 (let ((?x128393 (- (- (- (- ?x128387 (* (* 2.0 l_0_20_366) l_0_20_369)) ?x125501) ?x125504) (* (* 2.0 l_0_20_400) l_0_20_403))))
 (let ((?x128397 (- (- ?x128393 (* (* 2.0 l_0_20_401) l_0_20_404)) (* (* 2.0 l_0_20_402) l_0_20_405))))
 (let ((?x128401 (- (- ?x128397 (* (* 2.0 l_0_20_436) l_0_20_439)) (* (* 2.0 l_0_20_437) l_0_20_440))))
 (let ((?x128405 (- (- ?x128401 (* (* 2.0 l_0_20_438) l_0_20_441)) (* (* 2.0 l_0_20_472) l_0_20_475))))
 (let ((?x128409 (- (- ?x128405 (* (* 2.0 l_0_20_473) l_0_20_476)) (* (* 2.0 l_0_20_474) l_0_20_477))))
 (= ?x128409 0.0))))))))))))))))))))))
(assert
 (let ((?x128479 (* l_0_20_478 l_0_20_478)))
 (let ((?x128477 (* l_0_20_477 l_0_20_477)))
 (let ((?x128475 (* l_0_20_476 l_0_20_476)))
 (let ((?x128473 (* l_0_20_475 l_0_20_475)))
 (let ((?x128471 (* l_0_20_442 l_0_20_442)))
 (let ((?x128469 (* l_0_20_441 l_0_20_441)))
 (let ((?x128467 (* l_0_20_440 l_0_20_440)))
 (let ((?x128465 (* l_0_20_439 l_0_20_439)))
 (let ((?x128463 (* l_0_20_406 l_0_20_406)))
 (let ((?x128461 (* l_0_20_405 l_0_20_405)))
 (let ((?x128459 (* l_0_20_404 l_0_20_404)))
 (let ((?x128457 (* l_0_20_403 l_0_20_403)))
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125566 (* ?x125503 l_0_20_44)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125564 (* ?x125500 l_0_20_43)))
 (let ((?x37745 (* l_0_20_370 l_0_20_370)))
 (let ((?x37760 (* l_0_20_369 l_0_20_369)))
 (let ((?x37756 (* l_0_20_368 l_0_20_368)))
 (let ((?x105342 (* l_0_20_367 l_0_20_367)))
 (let ((?x105333 (* l_0_20_334 l_0_20_334)))
 (let ((?x105329 (* l_0_20_333 l_0_20_333)))
 (let ((?x105325 (* l_0_20_332 l_0_20_332)))
 (let ((?x105365 (* l_0_20_331 l_0_20_331)))
 (let ((?x125497 (* 2.0 l_0_20_3)))
 (let ((?x125556 (* ?x125497 l_0_20_8)))
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x127879 (* ?x127878 l_0_20_296)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x127876 (* ?x127875 l_0_20_295)))
 (let ((?x125488 (* 2.0 l_0_20_2)))
 (let ((?x125539 (* ?x125488 l_0_20_7)))
 (let ((?x105335 (- (- (- (- (+ (+ (+ ?x125539 ?x127876) ?x127879) ?x125556) ?x105365) ?x105325) ?x105329) ?x105333)))
 (let ((?x128458 (- (- (- (- (- (- (- ?x105335 ?x105342) ?x37756) ?x37760) ?x37745) ?x125564) ?x125566) ?x128457)))
 (let ((?x128472 (- (- (- (- (- (- (- ?x128458 ?x128459) ?x128461) ?x128463) ?x128465) ?x128467) ?x128469) ?x128471)))
 (= (- (- (- (- ?x128472 ?x128473) ?x128475) ?x128477) ?x128479) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125649 (* ?x125503 l_0_20_48)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125647 (* ?x125500 l_0_20_47)))
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128508 (* ?x127878 l_0_20_300)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128506 (* ?x127875 l_0_20_299)))
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x128504 (* ?x124920 l_0_20_260)))
 (let ((?x124917 (* 2.0 l_0_20_254)))
 (let ((?x128502 (* ?x124917 l_0_20_259)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x125621 (* ?x125620 l_0_20_3)))
 (let ((?x128507 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_2) ?x125621) ?x128502) ?x128504) ?x128506)))
 (let ((?x128515 (- (- (+ ?x128507 ?x128508) (* (* 2.0 l_0_20_331) l_0_20_335)) (* (* 2.0 l_0_20_332) l_0_20_336))))
 (let ((?x128521 (- (- ?x128515 (* (* 2.0 l_0_20_333) l_0_20_337)) (* (* 2.0 l_0_20_334) l_0_20_338))))
 (let ((?x128527 (- (- ?x128521 (* (* 2.0 l_0_20_367) l_0_20_371)) (* (* 2.0 l_0_20_368) l_0_20_372))))
 (let ((?x128533 (- (- ?x128527 (* (* 2.0 l_0_20_369) l_0_20_373)) (* (* 2.0 l_0_20_370) l_0_20_374))))
 (let ((?x128541 (- (- (- (- ?x128533 ?x125647) ?x125649) (* (* 2.0 l_0_20_403) l_0_20_407)) (* (* 2.0 l_0_20_404) l_0_20_408))))
 (let ((?x128547 (- (- ?x128541 (* (* 2.0 l_0_20_405) l_0_20_409)) (* (* 2.0 l_0_20_406) l_0_20_410))))
 (let ((?x128553 (- (- ?x128547 (* (* 2.0 l_0_20_439) l_0_20_443)) (* (* 2.0 l_0_20_440) l_0_20_444))))
 (let ((?x128559 (- (- ?x128553 (* (* 2.0 l_0_20_441) l_0_20_445)) (* (* 2.0 l_0_20_442) l_0_20_446))))
 (let ((?x128565 (- (- ?x128559 (* (* 2.0 l_0_20_475) l_0_20_479)) (* (* 2.0 l_0_20_476) l_0_20_480))))
 (let ((?x128571 (- (- ?x128565 (* (* 2.0 l_0_20_477) l_0_20_481)) (* (* 2.0 l_0_20_478) l_0_20_482))))
 (= ?x128571 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125732 (* ?x125503 l_0_20_53)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125730 (* ?x125500 l_0_20_52)))
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128641 (* ?x127878 l_0_20_305)))
 (let ((?x127879 (* ?x127878 l_0_20_296)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128638 (* ?x127875 l_0_20_304)))
 (let ((?x127876 (* ?x127875 l_0_20_295)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125537 (* ?x125485 l_0_20_188)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125535 (* ?x125482 l_0_20_187)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x125706 (* ?x125705 l_0_20_3)))
 (let ((?x125702 (* 2.0 l_0_20_16)))
 (let ((?x125703 (* ?x125702 l_0_20_2)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125533 (* ?x125479 l_0_20_152)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x128631 (* ?x125623 l_0_20_151)))
 (let ((?x128639 (+ (- (- (- (+ (+ (+ ?x128631 ?x125533) ?x125703) ?x125706) ?x125535) ?x125537) ?x127876) ?x128638)))
 (let ((?x128646 (- (- (+ (- ?x128639 ?x127879) ?x128641) (* (* 2.0 l_0_20_331) l_0_20_340)) (* (* 2.0 l_0_20_332) l_0_20_341))))
 (let ((?x128650 (- (- ?x128646 (* (* 2.0 l_0_20_333) l_0_20_342)) (* (* 2.0 l_0_20_334) l_0_20_343))))
 (let ((?x128654 (- (- ?x128650 (* (* 2.0 l_0_20_367) l_0_20_376)) (* (* 2.0 l_0_20_368) l_0_20_377))))
 (let ((?x128658 (- (- ?x128654 (* (* 2.0 l_0_20_369) l_0_20_378)) (* (* 2.0 l_0_20_370) l_0_20_379))))
 (let ((?x128664 (- (- (- (- ?x128658 ?x125730) ?x125732) (* (* 2.0 l_0_20_403) l_0_20_412)) (* (* 2.0 l_0_20_404) l_0_20_413))))
 (let ((?x128668 (- (- ?x128664 (* (* 2.0 l_0_20_405) l_0_20_414)) (* (* 2.0 l_0_20_406) l_0_20_415))))
 (let ((?x128672 (- (- ?x128668 (* (* 2.0 l_0_20_439) l_0_20_448)) (* (* 2.0 l_0_20_440) l_0_20_449))))
 (let ((?x128676 (- (- ?x128672 (* (* 2.0 l_0_20_441) l_0_20_450)) (* (* 2.0 l_0_20_442) l_0_20_451))))
 (let ((?x128680 (- (- ?x128676 (* (* 2.0 l_0_20_475) l_0_20_484)) (* (* 2.0 l_0_20_476) l_0_20_485))))
 (let ((?x128684 (- (- ?x128680 (* (* 2.0 l_0_20_477) l_0_20_486)) (* (* 2.0 l_0_20_478) l_0_20_487))))
 (= ?x128684 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125828 (* ?x125503 l_0_20_59)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125826 (* ?x125500 l_0_20_58)))
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128718 (* ?x127878 l_0_20_311)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128716 (* ?x127875 l_0_20_310)))
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x128504 (* ?x124920 l_0_20_260)))
 (let ((?x124917 (* 2.0 l_0_20_254)))
 (let ((?x128502 (* ?x124917 l_0_20_259)))
 (let ((?x125820 (* 2.0 l_0_20_23)))
 (let ((?x125821 (* ?x125820 l_0_20_3)))
 (let ((?x125488 (* 2.0 l_0_20_2)))
 (let ((?x125812 (* ?x125488 l_0_20_22)))
 (let ((?x128721 (- (+ (+ (- (- (+ ?x125812 ?x125821) ?x128502) ?x128504) ?x128716) ?x128718) (* (* 2.0 l_0_20_331) l_0_20_346))))
 (let ((?x128725 (- (- ?x128721 (* (* 2.0 l_0_20_332) l_0_20_347)) (* (* 2.0 l_0_20_333) l_0_20_348))))
 (let ((?x128729 (- (- ?x128725 (* (* 2.0 l_0_20_334) l_0_20_349)) (* (* 2.0 l_0_20_367) l_0_20_382))))
 (let ((?x128733 (- (- ?x128729 (* (* 2.0 l_0_20_368) l_0_20_383)) (* (* 2.0 l_0_20_369) l_0_20_384))))
 (let ((?x128739 (- (- (- (- ?x128733 (* (* 2.0 l_0_20_370) l_0_20_385)) ?x125826) ?x125828) (* (* 2.0 l_0_20_403) l_0_20_418))))
 (let ((?x128743 (- (- ?x128739 (* (* 2.0 l_0_20_404) l_0_20_419)) (* (* 2.0 l_0_20_405) l_0_20_420))))
 (let ((?x128747 (- (- ?x128743 (* (* 2.0 l_0_20_406) l_0_20_421)) (* (* 2.0 l_0_20_439) l_0_20_454))))
 (let ((?x128751 (- (- ?x128747 (* (* 2.0 l_0_20_440) l_0_20_455)) (* (* 2.0 l_0_20_441) l_0_20_456))))
 (let ((?x128755 (- (- ?x128751 (* (* 2.0 l_0_20_442) l_0_20_457)) (* (* 2.0 l_0_20_475) l_0_20_490))))
 (let ((?x128759 (- (- ?x128755 (* (* 2.0 l_0_20_476) l_0_20_491)) (* (* 2.0 l_0_20_477) l_0_20_492))))
 (= (- ?x128759 (* (* 2.0 l_0_20_478) l_0_20_493)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x125503 (* 2.0 l_0_20_39)))
 (let ((?x125899 (* ?x125503 l_0_20_66)))
 (let ((?x125500 (* 2.0 l_0_20_38)))
 (let ((?x125897 (* ?x125500 l_0_20_65)))
 (let ((?x125497 (* 2.0 l_0_20_3)))
 (let ((?x125895 (* ?x125497 l_0_20_30)))
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128819 (* ?x127878 l_0_20_318)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128817 (* ?x127875 l_0_20_317)))
 (let ((?x125488 (* 2.0 l_0_20_2)))
 (let ((?x125887 (* ?x125488 l_0_20_29)))
 (let ((?x128816 (- (- ?x125887 (* (* 2.0 l_0_20_218) l_0_20_223)) (* (* 2.0 l_0_20_219) l_0_20_224))))
 (let ((?x128823 (- (+ (+ (+ ?x128816 ?x128817) ?x128819) ?x125895) (* (* 2.0 l_0_20_331) l_0_20_353))))
 (let ((?x128827 (- (- ?x128823 (* (* 2.0 l_0_20_332) l_0_20_354)) (* (* 2.0 l_0_20_333) l_0_20_355))))
 (let ((?x128831 (- (- ?x128827 (* (* 2.0 l_0_20_334) l_0_20_356)) (* (* 2.0 l_0_20_367) l_0_20_389))))
 (let ((?x128835 (- (- ?x128831 (* (* 2.0 l_0_20_368) l_0_20_390)) (* (* 2.0 l_0_20_369) l_0_20_391))))
 (let ((?x128841 (- (- (- (- ?x128835 (* (* 2.0 l_0_20_370) l_0_20_392)) ?x125897) ?x125899) (* (* 2.0 l_0_20_403) l_0_20_425))))
 (let ((?x128845 (- (- ?x128841 (* (* 2.0 l_0_20_404) l_0_20_426)) (* (* 2.0 l_0_20_405) l_0_20_427))))
 (let ((?x128849 (- (- ?x128845 (* (* 2.0 l_0_20_406) l_0_20_428)) (* (* 2.0 l_0_20_439) l_0_20_461))))
 (let ((?x128853 (- (- ?x128849 (* (* 2.0 l_0_20_440) l_0_20_462)) (* (* 2.0 l_0_20_441) l_0_20_463))))
 (let ((?x128857 (- (- ?x128853 (* (* 2.0 l_0_20_442) l_0_20_464)) (* (* 2.0 l_0_20_475) l_0_20_497))))
 (let ((?x128861 (- (- ?x128857 (* (* 2.0 l_0_20_476) l_0_20_498)) (* (* 2.0 l_0_20_477) l_0_20_499))))
 (= (- ?x128861 (* (* 2.0 l_0_20_478) l_0_20_500)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x125958 (* l_0_20_6 l_0_20_6)))
 (let ((?x125956 (* l_0_20_5 l_0_20_5)))
 (let ((?x125954 (* l_0_20_42 l_0_20_42)))
 (let ((?x125952 (* l_0_20_41 l_0_20_41)))
 (let ((?x125950 (* l_0_20_40 l_0_20_40)))
 (let ((?x125948 (* l_0_20_4 l_0_20_4)))
 (let ((?x83528 (* l_0_20_294 l_0_20_294)))
 (let ((?x105977 (+ (+ (* l_0_20_292 l_0_20_292) (* l_0_20_293 l_0_20_293)) ?x83528)))
 (= (+ (+ (- (- (- (+ ?x105977 ?x125948) ?x125950) ?x125952) ?x125954) ?x125956) ?x125958) 0.0))))))))))
(assert
 (let ((?x126008 (* (* 2.0 l_0_20_6) l_0_20_9)))
 (let ((?x126005 (* (* 2.0 l_0_20_5) l_0_20_8)))
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x126002 (* ?x125574 l_0_20_45)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x126000 (* ?x125571 l_0_20_44)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x125998 (* ?x125568 l_0_20_43)))
 (let ((?x125996 (* (* 2.0 l_0_20_4) l_0_20_7)))
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x127950 (* ?x125318 l_0_20_297)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x127948 (* ?x125315 l_0_20_296)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x127946 (* ?x125312 l_0_20_295)))
 (let ((?x128902 (+ (- (- (- (+ (+ (+ ?x127946 ?x127948) ?x127950) ?x125996) ?x125998) ?x126000) ?x126002) ?x126005)))
 (= (+ ?x128902 ?x126008) 0.0))))))))))))))))))
(assert
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x126059 (* ?x125574 l_0_20_49)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x126057 (* ?x125571 l_0_20_48)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x126055 (* ?x125568 l_0_20_47)))
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x128911 (* ?x125318 l_0_20_301)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x128909 (* ?x125315 l_0_20_300)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x128907 (* ?x125312 l_0_20_299)))
 (let ((?x125644 (* 2.0 l_0_20_258)))
 (let ((?x38498 (* ?x125644 l_0_20_261)))
 (let ((?x125641 (* 2.0 l_0_20_257)))
 (let ((?x106022 (* ?x125641 l_0_20_260)))
 (let ((?x125638 (* 2.0 l_0_20_256)))
 (let ((?x38524 (* ?x125638 l_0_20_259)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126041 (* ?x126040 l_0_20_6)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126038 (* ?x125620 l_0_20_5)))
 (let ((?x106021 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_4) ?x126038) ?x126041) ?x38524) ?x106022)))
 (let ((?x128915 (- (- (- (+ (+ (+ (+ ?x106021 ?x38498) ?x128907) ?x128909) ?x128911) ?x126055) ?x126057) ?x126059)))
 (= ?x128915 0.0))))))))))))))))))))))))))
(assert
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x126115 (* ?x125574 l_0_20_54)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x126113 (* ?x125571 l_0_20_53)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x126111 (* ?x125568 l_0_20_52)))
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x128939 (* ?x125318 l_0_20_306)))
 (let ((?x127950 (* ?x125318 l_0_20_297)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x128936 (* ?x125315 l_0_20_305)))
 (let ((?x127948 (* ?x125315 l_0_20_296)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x128933 (* ?x125312 l_0_20_304)))
 (let ((?x127946 (* ?x125312 l_0_20_295)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x125993 (* ?x125718 l_0_20_189)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x125991 (* ?x125715 l_0_20_188)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x125989 (* ?x125712 l_0_20_187)))
 (let ((?x126102 (* 2.0 l_0_20_18)))
 (let ((?x126103 (* ?x126102 l_0_20_6)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x126100 (* ?x125705 l_0_20_5)))
 (let ((?x125702 (* 2.0 l_0_20_16)))
 (let ((?x126098 (* ?x125702 l_0_20_4)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x125987 (* ?x125699 l_0_20_153)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x125985 (* ?x125696 l_0_20_152)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x126474 (* ?x125682 l_0_20_151)))
 (let ((?x128930 (- (- (+ (+ (+ (+ (+ ?x126474 ?x125985) ?x125987) ?x126098) ?x126100) ?x126103) ?x125989) ?x125991)))
 (let ((?x128940 (+ (- (+ (- (+ (- (- ?x128930 ?x125993) ?x127946) ?x128933) ?x127948) ?x128936) ?x127950) ?x128939)))
 (= (- (- (- ?x128940 ?x126111) ?x126113) ?x126115) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x125574 (* 2.0 l_0_20_42)))
 (let ((?x126181 (* ?x125574 l_0_20_60)))
 (let ((?x125571 (* 2.0 l_0_20_41)))
 (let ((?x126179 (* ?x125571 l_0_20_59)))
 (let ((?x125568 (* 2.0 l_0_20_40)))
 (let ((?x126177 (* ?x125568 l_0_20_58)))
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x128958 (* ?x125318 l_0_20_312)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x83519 (* ?x125315 l_0_20_311)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x62908 (* ?x125312 l_0_20_310)))
 (let ((?x125644 (* 2.0 l_0_20_258)))
 (let ((?x38498 (* ?x125644 l_0_20_261)))
 (let ((?x125641 (* 2.0 l_0_20_257)))
 (let ((?x106022 (* ?x125641 l_0_20_260)))
 (let ((?x125638 (* 2.0 l_0_20_256)))
 (let ((?x38524 (* ?x125638 l_0_20_259)))
 (let ((?x126174 (* 2.0 l_0_20_24)))
 (let ((?x126175 (* ?x126174 l_0_20_6)))
 (let ((?x125820 (* 2.0 l_0_20_23)))
 (let ((?x126172 (* ?x125820 l_0_20_5)))
 (let ((?x126169 (* 2.0 l_0_20_22)))
 (let ((?x126170 (* ?x126169 l_0_20_4)))
 (let ((?x128957 (+ (+ (- (- (- (+ (+ ?x126170 ?x126172) ?x126175) ?x38524) ?x106022) ?x38498) ?x62908) ?x83519)))
 (= (- (- (- (+ ?x128957 ?x128958) ?x126177) ?x126179) ?x126181) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x126282 (* l_0_20_9 l_0_20_9)))
 (let ((?x126280 (* l_0_20_8 l_0_20_8)))
 (let ((?x126278 (* l_0_20_7 l_0_20_7)))
 (let ((?x126276 (* l_0_20_46 l_0_20_46)))
 (let ((?x126274 (* l_0_20_45 l_0_20_45)))
 (let ((?x126272 (* l_0_20_44 l_0_20_44)))
 (let ((?x126270 (* l_0_20_43 l_0_20_43)))
 (let ((?x127997 (* l_0_20_298 l_0_20_298)))
 (let ((?x127995 (* l_0_20_297 l_0_20_297)))
 (let ((?x127993 (* l_0_20_296 l_0_20_296)))
 (let ((?x62935 (+ (+ (+ (* l_0_20_10 l_0_20_10) (* l_0_20_295 l_0_20_295)) ?x127993) ?x127995)))
 (let ((?x106150 (+ (+ (- (- (- (- (+ ?x62935 ?x127997) ?x126270) ?x126272) ?x126274) ?x126276) ?x126278) ?x126280)))
 (= (+ ?x106150 ?x126282) 0.0))))))))))))))
(assert
 (let ((?x126345 (* 2.0 l_0_20_46)))
 (let ((?x126346 (* ?x126345 l_0_20_50)))
 (let ((?x126342 (* 2.0 l_0_20_45)))
 (let ((?x126343 (* ?x126342 l_0_20_49)))
 (let ((?x126339 (* 2.0 l_0_20_44)))
 (let ((?x126340 (* ?x126339 l_0_20_48)))
 (let ((?x126336 (* 2.0 l_0_20_43)))
 (let ((?x126337 (* ?x126336 l_0_20_47)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128051 (* ?x128050 l_0_20_302)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128048 (* ?x128047 l_0_20_301)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128045 (* ?x128044 l_0_20_300)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128042 (* ?x128041 l_0_20_299)))
 (let ((?x128988 (* l_0_20_262 l_0_20_262)))
 (let ((?x128986 (* l_0_20_261 l_0_20_261)))
 (let ((?x128984 (* l_0_20_260 l_0_20_260)))
 (let ((?x128982 (* l_0_20_259 l_0_20_259)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126310 (* ?x126040 l_0_20_9)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126308 (* ?x125620 l_0_20_8)))
 (let ((?x126305 (* 2.0 l_0_20_11)))
 (let ((?x126306 (* ?x126305 l_0_20_7)))
 (let ((?x128983 (+ (+ (+ (+ (* (* 2.0 l_0_20_10) l_0_20_14) ?x126306) ?x126308) ?x126310) ?x128982)))
 (let ((?x128993 (+ (+ (+ (+ (+ (+ (+ ?x128983 ?x128984) ?x128986) ?x128988) ?x128042) ?x128045) ?x128048) ?x128051)))
 (= (- (- (- (- ?x128993 ?x126337) ?x126340) ?x126343) ?x126346) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x126345 (* 2.0 l_0_20_46)))
 (let ((?x126419 (* ?x126345 l_0_20_55)))
 (let ((?x126342 (* 2.0 l_0_20_45)))
 (let ((?x126417 (* ?x126342 l_0_20_54)))
 (let ((?x126339 (* 2.0 l_0_20_44)))
 (let ((?x126415 (* ?x126339 l_0_20_53)))
 (let ((?x126336 (* 2.0 l_0_20_43)))
 (let ((?x126413 (* ?x126336 l_0_20_52)))
 (let ((?x127997 (* l_0_20_298 l_0_20_298)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128130 (* ?x128050 l_0_20_307)))
 (let ((?x127995 (* l_0_20_297 l_0_20_297)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128128 (* ?x128047 l_0_20_306)))
 (let ((?x127993 (* l_0_20_296 l_0_20_296)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128126 (* ?x128044 l_0_20_305)))
 (let ((?x127991 (* l_0_20_295 l_0_20_295)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128124 (* ?x128041 l_0_20_304)))
 (let ((?x126268 (* l_0_20_190 l_0_20_190)))
 (let ((?x126266 (* l_0_20_189 l_0_20_189)))
 (let ((?x82201 (* l_0_20_188 l_0_20_188)))
 (let ((?x82204 (* l_0_20_187 l_0_20_187)))
 (let ((?x126102 (* 2.0 l_0_20_18)))
 (let ((?x126403 (* ?x126102 l_0_20_9)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x126401 (* ?x125705 l_0_20_8)))
 (let ((?x125702 (* 2.0 l_0_20_16)))
 (let ((?x126399 (* ?x125702 l_0_20_7)))
 (let ((?x82207 (* l_0_20_154 l_0_20_154)))
 (let ((?x104570 (* l_0_20_153 l_0_20_153)))
 (let ((?x104574 (* l_0_20_152 l_0_20_152)))
 (let ((?x82216 (* l_0_20_151 l_0_20_151)))
 (let ((?x83677 (+ (+ (+ (+ (* (* 2.0 l_0_20_10) l_0_20_19) ?x82216) ?x104574) ?x104570) ?x82207)))
 (let ((?x129002 (- (- (- (- (+ (+ (+ ?x83677 ?x126399) ?x126401) ?x126403) ?x82204) ?x82201) ?x126266) ?x126268)))
 (let ((?x129009 (+ (- (+ (- (+ (- (+ ?x129002 ?x128124) ?x127991) ?x128126) ?x127993) ?x128128) ?x127995) ?x128130)))
 (= (- (- (- (- (- ?x129009 ?x127997) ?x126413) ?x126415) ?x126417) ?x126419) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x126345 (* 2.0 l_0_20_46)))
 (let ((?x126506 (* ?x126345 l_0_20_61)))
 (let ((?x126342 (* 2.0 l_0_20_45)))
 (let ((?x126504 (* ?x126342 l_0_20_60)))
 (let ((?x126339 (* 2.0 l_0_20_44)))
 (let ((?x126502 (* ?x126339 l_0_20_59)))
 (let ((?x126336 (* 2.0 l_0_20_43)))
 (let ((?x126500 (* ?x126336 l_0_20_58)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128187 (* ?x128050 l_0_20_313)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128185 (* ?x128047 l_0_20_312)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128183 (* ?x128044 l_0_20_311)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128181 (* ?x128041 l_0_20_310)))
 (let ((?x128988 (* l_0_20_262 l_0_20_262)))
 (let ((?x128986 (* l_0_20_261 l_0_20_261)))
 (let ((?x128984 (* l_0_20_260 l_0_20_260)))
 (let ((?x128982 (* l_0_20_259 l_0_20_259)))
 (let ((?x126174 (* 2.0 l_0_20_24)))
 (let ((?x126498 (* ?x126174 l_0_20_9)))
 (let ((?x125820 (* 2.0 l_0_20_23)))
 (let ((?x126496 (* ?x125820 l_0_20_8)))
 (let ((?x126169 (* 2.0 l_0_20_22)))
 (let ((?x126494 (* ?x126169 l_0_20_7)))
 (let ((?x106287 (- (+ (+ (+ (* (* 2.0 l_0_20_10) l_0_20_25) ?x126494) ?x126496) ?x126498) ?x128982)))
 (let ((?x83752 (+ (+ (+ (+ (- (- (- ?x106287 ?x128984) ?x128986) ?x128988) ?x128181) ?x128183) ?x128185) ?x128187)))
 (= (- (- (- (- ?x83752 ?x126500) ?x126502) ?x126504) ?x126506) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x126345 (* 2.0 l_0_20_46)))
 (let ((?x126622 (* ?x126345 l_0_20_68)))
 (let ((?x126342 (* 2.0 l_0_20_45)))
 (let ((?x126620 (* ?x126342 l_0_20_67)))
 (let ((?x126339 (* 2.0 l_0_20_44)))
 (let ((?x126618 (* ?x126339 l_0_20_66)))
 (let ((?x126336 (* 2.0 l_0_20_43)))
 (let ((?x126616 (* ?x126336 l_0_20_65)))
 (let ((?x125561 (* 2.0 l_0_20_31)))
 (let ((?x126614 (* ?x125561 l_0_20_9)))
 (let ((?x125558 (* 2.0 l_0_20_30)))
 (let ((?x126612 (* ?x125558 l_0_20_8)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128274 (* ?x128050 l_0_20_320)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128272 (* ?x128047 l_0_20_319)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128270 (* ?x128044 l_0_20_318)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128268 (* ?x128041 l_0_20_317)))
 (let ((?x125550 (* 2.0 l_0_20_29)))
 (let ((?x126610 (* ?x125550 l_0_20_7)))
 (let ((?x63144 (* l_0_20_226 l_0_20_226)))
 (let ((?x106373 (* l_0_20_225 l_0_20_225)))
 (let ((?x106376 (* l_0_20_224 l_0_20_224)))
 (let ((?x38906 (* l_0_20_223 l_0_20_223)))
 (let ((?x106367 (- (- (- (- (* (* 2.0 l_0_20_10) l_0_20_32) ?x38906) ?x106376) ?x106373) ?x63144)))
 (let ((?x129027 (+ (+ (+ (+ (+ (+ (+ ?x106367 ?x126610) ?x128268) ?x128270) ?x128272) ?x128274) ?x126612) ?x126614)))
 (= (- (- (- (- ?x129027 ?x126616) ?x126618) ?x126620) ?x126622) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x126706 (* l_0_20_51 l_0_20_51)))
 (let ((?x126704 (* l_0_20_50 l_0_20_50)))
 (let ((?x126702 (* l_0_20_49 l_0_20_49)))
 (let ((?x126700 (* l_0_20_48 l_0_20_48)))
 (let ((?x126698 (* l_0_20_47 l_0_20_47)))
 (let ((?x129051 (* l_0_20_303 l_0_20_303)))
 (let ((?x129049 (* l_0_20_302 l_0_20_302)))
 (let ((?x129047 (* l_0_20_301 l_0_20_301)))
 (let ((?x129045 (* l_0_20_300 l_0_20_300)))
 (let ((?x129043 (* l_0_20_299 l_0_20_299)))
 (let ((?x83878 (* 2.0 l_0_20_262)))
 (let ((?x63213 (* ?x83878 l_0_20_266)))
 (let ((?x106354 (* 2.0 l_0_20_261)))
 (let ((?x106359 (* ?x106354 l_0_20_265)))
 (let ((?x106374 (* 2.0 l_0_20_260)))
 (let ((?x106377 (* ?x106374 l_0_20_264)))
 (let ((?x106393 (* 2.0 l_0_20_259)))
 (let ((?x106362 (* ?x106393 l_0_20_263)))
 (let ((?x126676 (* l_0_20_15 l_0_20_15)))
 (let ((?x126674 (* l_0_20_14 l_0_20_14)))
 (let ((?x126672 (* l_0_20_13 l_0_20_13)))
 (let ((?x106449 (+ (+ (+ (* l_0_20_11 l_0_20_11) (* l_0_20_12 l_0_20_12)) ?x126672) ?x126674)))
 (let ((?x129046 (+ (+ (+ (+ (+ (+ (+ ?x106449 ?x126676) ?x106362) ?x106377) ?x106359) ?x63213) ?x129043) ?x129045)))
 (let ((?x129056 (- (- (- (- (+ (+ (+ ?x129046 ?x129047) ?x129049) ?x129051) ?x126698) ?x126700) ?x126702) ?x126704)))
 (= (- ?x129056 ?x126706) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x126792 (* 2.0 l_0_20_51)))
 (let ((?x126793 (* ?x126792 l_0_20_56)))
 (let ((?x126789 (* 2.0 l_0_20_50)))
 (let ((?x126790 (* ?x126789 l_0_20_55)))
 (let ((?x126786 (* 2.0 l_0_20_49)))
 (let ((?x126787 (* ?x126786 l_0_20_54)))
 (let ((?x126783 (* 2.0 l_0_20_48)))
 (let ((?x126784 (* ?x126783 l_0_20_53)))
 (let ((?x126780 (* 2.0 l_0_20_47)))
 (let ((?x126781 (* ?x126780 l_0_20_52)))
 (let ((?x129086 (* 2.0 l_0_20_303)))
 (let ((?x129087 (* ?x129086 l_0_20_308)))
 (let ((?x129083 (* 2.0 l_0_20_302)))
 (let ((?x129084 (* ?x129083 l_0_20_307)))
 (let ((?x129080 (* 2.0 l_0_20_301)))
 (let ((?x129081 (* ?x129080 l_0_20_306)))
 (let ((?x129077 (* 2.0 l_0_20_300)))
 (let ((?x129078 (* ?x129077 l_0_20_305)))
 (let ((?x129074 (* 2.0 l_0_20_299)))
 (let ((?x129075 (* ?x129074 l_0_20_304)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128051 (* ?x128050 l_0_20_302)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128048 (* ?x128047 l_0_20_301)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128045 (* ?x128044 l_0_20_300)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128042 (* ?x128041 l_0_20_299)))
 (let ((?x83878 (* 2.0 l_0_20_262)))
 (let ((?x129068 (* ?x83878 l_0_20_271)))
 (let ((?x106354 (* 2.0 l_0_20_261)))
 (let ((?x129066 (* ?x106354 l_0_20_270)))
 (let ((?x106374 (* 2.0 l_0_20_260)))
 (let ((?x129064 (* ?x106374 l_0_20_269)))
 (let ((?x106393 (* 2.0 l_0_20_259)))
 (let ((?x83893 (* ?x106393 l_0_20_268)))
 (let ((?x126333 (* 2.0 l_0_20_190)))
 (let ((?x126334 (* ?x126333 l_0_20_194)))
 (let ((?x126330 (* 2.0 l_0_20_189)))
 (let ((?x126331 (* ?x126330 l_0_20_193)))
 (let ((?x126327 (* 2.0 l_0_20_188)))
 (let ((?x126328 (* ?x126327 l_0_20_192)))
 (let ((?x126324 (* 2.0 l_0_20_187)))
 (let ((?x126325 (* ?x126324 l_0_20_191)))
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126322 (* ?x126321 l_0_20_158)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126319 (* ?x126318 l_0_20_157)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126316 (* ?x126315 l_0_20_156)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x126313 (* ?x126312 l_0_20_155)))
 (let ((?x126747 (* 2.0 l_0_20_15)))
 (let ((?x126748 (* ?x126747 l_0_20_20)))
 (let ((?x126744 (* 2.0 l_0_20_14)))
 (let ((?x126745 (* ?x126744 l_0_20_19)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126742 (* ?x126040 l_0_20_18)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126740 (* ?x125620 l_0_20_17)))
 (let ((?x106507 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_16) ?x126740) ?x126742) ?x126745) ?x126748)))
 (let ((?x106499 (- (- (- (+ (+ (+ (+ ?x106507 ?x126313) ?x126316) ?x126319) ?x126322) ?x126325) ?x126328) ?x126331)))
 (let ((?x129071 (- (- (+ (+ (+ (+ (- ?x106499 ?x126334) ?x83893) ?x129064) ?x129066) ?x129068) ?x128042) ?x128045)))
 (let ((?x129088 (+ (+ (+ (+ (+ (- (- ?x129071 ?x128048) ?x128051) ?x129075) ?x129078) ?x129081) ?x129084) ?x129087)))
 (= (- (- (- (- (- ?x129088 ?x126781) ?x126784) ?x126787) ?x126790) ?x126793) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x126792 (* 2.0 l_0_20_51)))
 (let ((?x126898 (* ?x126792 l_0_20_62)))
 (let ((?x126789 (* 2.0 l_0_20_50)))
 (let ((?x126896 (* ?x126789 l_0_20_61)))
 (let ((?x126786 (* 2.0 l_0_20_49)))
 (let ((?x126894 (* ?x126786 l_0_20_60)))
 (let ((?x126783 (* 2.0 l_0_20_48)))
 (let ((?x126892 (* ?x126783 l_0_20_59)))
 (let ((?x126780 (* 2.0 l_0_20_47)))
 (let ((?x126890 (* ?x126780 l_0_20_58)))
 (let ((?x129086 (* 2.0 l_0_20_303)))
 (let ((?x129115 (* ?x129086 l_0_20_314)))
 (let ((?x129083 (* 2.0 l_0_20_302)))
 (let ((?x129113 (* ?x129083 l_0_20_313)))
 (let ((?x129080 (* 2.0 l_0_20_301)))
 (let ((?x129111 (* ?x129080 l_0_20_312)))
 (let ((?x129077 (* 2.0 l_0_20_300)))
 (let ((?x129109 (* ?x129077 l_0_20_311)))
 (let ((?x129074 (* 2.0 l_0_20_299)))
 (let ((?x129107 (* ?x129074 l_0_20_310)))
 (let ((?x83878 (* 2.0 l_0_20_262)))
 (let ((?x129105 (* ?x83878 l_0_20_277)))
 (let ((?x63213 (* ?x83878 l_0_20_266)))
 (let ((?x106354 (* 2.0 l_0_20_261)))
 (let ((?x63369 (* ?x106354 l_0_20_276)))
 (let ((?x106359 (* ?x106354 l_0_20_265)))
 (let ((?x106374 (* 2.0 l_0_20_260)))
 (let ((?x106576 (* ?x106374 l_0_20_275)))
 (let ((?x106377 (* ?x106374 l_0_20_264)))
 (let ((?x106393 (* 2.0 l_0_20_259)))
 (let ((?x83992 (* ?x106393 l_0_20_274)))
 (let ((?x106362 (* ?x106393 l_0_20_263)))
 (let ((?x126747 (* 2.0 l_0_20_15)))
 (let ((?x126867 (* ?x126747 l_0_20_26)))
 (let ((?x126744 (* 2.0 l_0_20_14)))
 (let ((?x126863 (* ?x126744 l_0_20_25)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126848 (* ?x126040 l_0_20_24)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126844 (* ?x125620 l_0_20_23)))
 (let ((?x106647 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_22) ?x126844) ?x126848) ?x126863) ?x126867)))
 (let ((?x106583 (- (+ (- (+ (- (+ (- ?x106647 ?x106362) ?x83992) ?x106377) ?x106576) ?x106359) ?x63369) ?x63213)))
 (let ((?x129117 (- (+ (+ (+ (+ (+ (+ ?x106583 ?x129105) ?x129107) ?x129109) ?x129111) ?x129113) ?x129115) ?x126890)))
 (= (- (- (- (- ?x129117 ?x126892) ?x126894) ?x126896) ?x126898) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x126792 (* 2.0 l_0_20_51)))
 (let ((?x126984 (* ?x126792 l_0_20_69)))
 (let ((?x126789 (* 2.0 l_0_20_50)))
 (let ((?x126982 (* ?x126789 l_0_20_68)))
 (let ((?x126786 (* 2.0 l_0_20_49)))
 (let ((?x126980 (* ?x126786 l_0_20_67)))
 (let ((?x126783 (* 2.0 l_0_20_48)))
 (let ((?x126978 (* ?x126783 l_0_20_66)))
 (let ((?x126780 (* 2.0 l_0_20_47)))
 (let ((?x126976 (* ?x126780 l_0_20_65)))
 (let ((?x129086 (* 2.0 l_0_20_303)))
 (let ((?x129183 (* ?x129086 l_0_20_321)))
 (let ((?x129083 (* 2.0 l_0_20_302)))
 (let ((?x129181 (* ?x129083 l_0_20_320)))
 (let ((?x129080 (* 2.0 l_0_20_301)))
 (let ((?x129179 (* ?x129080 l_0_20_319)))
 (let ((?x129077 (* 2.0 l_0_20_300)))
 (let ((?x129177 (* ?x129077 l_0_20_318)))
 (let ((?x129074 (* 2.0 l_0_20_299)))
 (let ((?x129175 (* ?x129074 l_0_20_317)))
 (let ((?x83878 (* 2.0 l_0_20_262)))
 (let ((?x129173 (* ?x83878 l_0_20_284)))
 (let ((?x106354 (* 2.0 l_0_20_261)))
 (let ((?x129171 (* ?x106354 l_0_20_283)))
 (let ((?x106374 (* 2.0 l_0_20_260)))
 (let ((?x129169 (* ?x106374 l_0_20_282)))
 (let ((?x106393 (* 2.0 l_0_20_259)))
 (let ((?x129167 (* ?x106393 l_0_20_281)))
 (let ((?x126747 (* 2.0 l_0_20_15)))
 (let ((?x126954 (* ?x126747 l_0_20_33)))
 (let ((?x126744 (* 2.0 l_0_20_14)))
 (let ((?x126952 (* ?x126744 l_0_20_32)))
 (let ((?x126040 (* 2.0 l_0_20_13)))
 (let ((?x126950 (* ?x126040 l_0_20_31)))
 (let ((?x125620 (* 2.0 l_0_20_12)))
 (let ((?x126948 (* ?x125620 l_0_20_30)))
 (let ((?x129154 (+ (+ (+ (+ (* (* 2.0 l_0_20_11) l_0_20_29) ?x126948) ?x126950) ?x126952) ?x126954)))
 (let ((?x129160 (- (- ?x129154 (* (* 2.0 l_0_20_223) l_0_20_227)) (* (* 2.0 l_0_20_224) l_0_20_228))))
 (let ((?x129166 (- (- ?x129160 (* (* 2.0 l_0_20_225) l_0_20_229)) (* (* 2.0 l_0_20_226) l_0_20_230))))
 (let ((?x129180 (+ (+ (+ (+ (+ (+ (+ ?x129166 ?x129167) ?x129169) ?x129171) ?x129173) ?x129175) ?x129177) ?x129179)))
 (let ((?x129189 (- (- (- (- (- (+ (+ ?x129180 ?x129181) ?x129183) ?x126976) ?x126978) ?x126980) ?x126982) ?x126984)))
 (= ?x129189 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127092 (* l_0_20_57 l_0_20_57)))
 (let ((?x127090 (* l_0_20_56 l_0_20_56)))
 (let ((?x127088 (* l_0_20_55 l_0_20_55)))
 (let ((?x127086 (* l_0_20_54 l_0_20_54)))
 (let ((?x127084 (* l_0_20_53 l_0_20_53)))
 (let ((?x127082 (* l_0_20_52 l_0_20_52)))
 (let ((?x129254 (* l_0_20_309 l_0_20_309)))
 (let ((?x129252 (* l_0_20_308 l_0_20_308)))
 (let ((?x129250 (* l_0_20_307 l_0_20_307)))
 (let ((?x129248 (* l_0_20_306 l_0_20_306)))
 (let ((?x129246 (* l_0_20_305 l_0_20_305)))
 (let ((?x129244 (* l_0_20_304 l_0_20_304)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128130 (* ?x128050 l_0_20_307)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128128 (* ?x128047 l_0_20_306)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128126 (* ?x128044 l_0_20_305)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128124 (* ?x128041 l_0_20_304)))
 (let ((?x127080 (* l_0_20_21 l_0_20_21)))
 (let ((?x127074 (* l_0_20_20 l_0_20_20)))
 (let ((?x126333 (* 2.0 l_0_20_190)))
 (let ((?x126411 (* ?x126333 l_0_20_199)))
 (let ((?x127064 (* l_0_20_19 l_0_20_19)))
 (let ((?x126330 (* 2.0 l_0_20_189)))
 (let ((?x126409 (* ?x126330 l_0_20_198)))
 (let ((?x126327 (* 2.0 l_0_20_188)))
 (let ((?x126407 (* ?x126327 l_0_20_197)))
 (let ((?x126324 (* 2.0 l_0_20_187)))
 (let ((?x126405 (* ?x126324 l_0_20_196)))
 (let ((?x127062 (* l_0_20_18 l_0_20_18)))
 (let ((?x127060 (* l_0_20_17 l_0_20_17)))
 (let ((?x127096 (* l_0_20_16 l_0_20_16)))
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126386 (* ?x126321 l_0_20_163)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126382 (* ?x126318 l_0_20_162)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126378 (* ?x126315 l_0_20_161)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x30424 (* ?x126312 l_0_20_160)))
 (let ((?x129233 (- (+ (+ (+ (+ (+ (+ ?x30424 ?x126378) ?x126382) ?x126386) ?x127096) ?x127060) ?x127062) ?x126405)))
 (let ((?x129240 (- (+ (+ (- (+ (- (- ?x129233 ?x126407) ?x126409) ?x127064) ?x126411) ?x127074) ?x127080) ?x128124)))
 (let ((?x129251 (+ (+ (+ (+ (- (- (- ?x129240 ?x128126) ?x128128) ?x128130) ?x129244) ?x129246) ?x129248) ?x129250)))
 (let ((?x129260 (- (- (- (- (- (+ (+ ?x129251 ?x129252) ?x129254) ?x127082) ?x127084) ?x127086) ?x127088) ?x127090)))
 (= (- ?x129260 ?x127092) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127210 (* 2.0 l_0_20_57)))
 (let ((?x127211 (* ?x127210 l_0_20_63)))
 (let ((?x127207 (* 2.0 l_0_20_56)))
 (let ((?x127208 (* ?x127207 l_0_20_62)))
 (let ((?x127204 (* 2.0 l_0_20_55)))
 (let ((?x127205 (* ?x127204 l_0_20_61)))
 (let ((?x127201 (* 2.0 l_0_20_54)))
 (let ((?x127202 (* ?x127201 l_0_20_60)))
 (let ((?x127198 (* 2.0 l_0_20_53)))
 (let ((?x127199 (* ?x127198 l_0_20_59)))
 (let ((?x127195 (* 2.0 l_0_20_52)))
 (let ((?x127196 (* ?x127195 l_0_20_58)))
 (let ((?x129286 (* 2.0 l_0_20_309)))
 (let ((?x129287 (* ?x129286 l_0_20_315)))
 (let ((?x129283 (* 2.0 l_0_20_308)))
 (let ((?x129284 (* ?x129283 l_0_20_314)))
 (let ((?x129280 (* 2.0 l_0_20_307)))
 (let ((?x129281 (* ?x129280 l_0_20_313)))
 (let ((?x129277 (* 2.0 l_0_20_306)))
 (let ((?x129278 (* ?x129277 l_0_20_312)))
 (let ((?x129274 (* 2.0 l_0_20_305)))
 (let ((?x129275 (* ?x129274 l_0_20_311)))
 (let ((?x129271 (* 2.0 l_0_20_304)))
 (let ((?x129272 (* ?x129271 l_0_20_310)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128187 (* ?x128050 l_0_20_313)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128185 (* ?x128047 l_0_20_312)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128183 (* ?x128044 l_0_20_311)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128181 (* ?x128041 l_0_20_310)))
 (let ((?x83878 (* 2.0 l_0_20_262)))
 (let ((?x129068 (* ?x83878 l_0_20_271)))
 (let ((?x106354 (* 2.0 l_0_20_261)))
 (let ((?x129066 (* ?x106354 l_0_20_270)))
 (let ((?x106374 (* 2.0 l_0_20_260)))
 (let ((?x129064 (* ?x106374 l_0_20_269)))
 (let ((?x106393 (* 2.0 l_0_20_259)))
 (let ((?x83893 (* ?x106393 l_0_20_268)))
 (let ((?x127192 (* 2.0 l_0_20_21)))
 (let ((?x127193 (* ?x127192 l_0_20_27)))
 (let ((?x127183 (* 2.0 l_0_20_20)))
 (let ((?x127184 (* ?x127183 l_0_20_26)))
 (let ((?x126333 (* 2.0 l_0_20_190)))
 (let ((?x126492 (* ?x126333 l_0_20_205)))
 (let ((?x127168 (* 2.0 l_0_20_19)))
 (let ((?x127169 (* ?x127168 l_0_20_25)))
 (let ((?x126330 (* 2.0 l_0_20_189)))
 (let ((?x126490 (* ?x126330 l_0_20_204)))
 (let ((?x126327 (* 2.0 l_0_20_188)))
 (let ((?x126488 (* ?x126327 l_0_20_203)))
 (let ((?x126324 (* 2.0 l_0_20_187)))
 (let ((?x126486 (* ?x126324 l_0_20_202)))
 (let ((?x126102 (* 2.0 l_0_20_18)))
 (let ((?x127166 (* ?x126102 l_0_20_24)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x127164 (* ?x125705 l_0_20_23)))
 (let ((?x125702 (* 2.0 l_0_20_16)))
 (let ((?x127144 (* ?x125702 l_0_20_22)))
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126484 (* ?x126321 l_0_20_169)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126482 (* ?x126318 l_0_20_168)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126480 (* ?x126315 l_0_20_167)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x126478 (* ?x126312 l_0_20_166)))
 (let ((?x39395 (- (+ (+ (+ (+ (+ (+ ?x126478 ?x126480) ?x126482) ?x126484) ?x127144) ?x127164) ?x127166) ?x126486)))
 (let ((?x129263 (- (+ (+ (- (+ (- (- ?x39395 ?x126488) ?x126490) ?x127169) ?x126492) ?x127184) ?x127193) ?x83893)))
 (let ((?x129270 (- (- (- (- (- (- (- ?x129263 ?x129064) ?x129066) ?x129068) ?x128181) ?x128183) ?x128185) ?x128187)))
 (let ((?x129289 (- (+ (+ (+ (+ (+ (+ ?x129270 ?x129272) ?x129275) ?x129278) ?x129281) ?x129284) ?x129287) ?x127196)))
 (= (- (- (- (- (- ?x129289 ?x127199) ?x127202) ?x127205) ?x127208) ?x127211) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127210 (* 2.0 l_0_20_57)))
 (let ((?x127362 (* ?x127210 l_0_20_70)))
 (let ((?x127207 (* 2.0 l_0_20_56)))
 (let ((?x127360 (* ?x127207 l_0_20_69)))
 (let ((?x127204 (* 2.0 l_0_20_55)))
 (let ((?x127358 (* ?x127204 l_0_20_68)))
 (let ((?x127201 (* 2.0 l_0_20_54)))
 (let ((?x127356 (* ?x127201 l_0_20_67)))
 (let ((?x127198 (* 2.0 l_0_20_53)))
 (let ((?x127354 (* ?x127198 l_0_20_66)))
 (let ((?x127195 (* 2.0 l_0_20_52)))
 (let ((?x127352 (* ?x127195 l_0_20_65)))
 (let ((?x129286 (* 2.0 l_0_20_309)))
 (let ((?x129343 (* ?x129286 l_0_20_322)))
 (let ((?x129283 (* 2.0 l_0_20_308)))
 (let ((?x129341 (* ?x129283 l_0_20_321)))
 (let ((?x129280 (* 2.0 l_0_20_307)))
 (let ((?x129339 (* ?x129280 l_0_20_320)))
 (let ((?x129277 (* 2.0 l_0_20_306)))
 (let ((?x129337 (* ?x129277 l_0_20_319)))
 (let ((?x129274 (* 2.0 l_0_20_305)))
 (let ((?x129335 (* ?x129274 l_0_20_318)))
 (let ((?x129271 (* 2.0 l_0_20_304)))
 (let ((?x129333 (* ?x129271 l_0_20_317)))
 (let ((?x128050 (* 2.0 l_0_20_298)))
 (let ((?x128274 (* ?x128050 l_0_20_320)))
 (let ((?x128047 (* 2.0 l_0_20_297)))
 (let ((?x128272 (* ?x128047 l_0_20_319)))
 (let ((?x128044 (* 2.0 l_0_20_296)))
 (let ((?x128270 (* ?x128044 l_0_20_318)))
 (let ((?x128041 (* 2.0 l_0_20_295)))
 (let ((?x128268 (* ?x128041 l_0_20_317)))
 (let ((?x127192 (* 2.0 l_0_20_21)))
 (let ((?x127350 (* ?x127192 l_0_20_34)))
 (let ((?x127183 (* 2.0 l_0_20_20)))
 (let ((?x127344 (* ?x127183 l_0_20_33)))
 (let ((?x126333 (* 2.0 l_0_20_190)))
 (let ((?x126608 (* ?x126333 l_0_20_212)))
 (let ((?x127168 (* 2.0 l_0_20_19)))
 (let ((?x127334 (* ?x127168 l_0_20_32)))
 (let ((?x126330 (* 2.0 l_0_20_189)))
 (let ((?x126606 (* ?x126330 l_0_20_211)))
 (let ((?x126327 (* 2.0 l_0_20_188)))
 (let ((?x126604 (* ?x126327 l_0_20_210)))
 (let ((?x126324 (* 2.0 l_0_20_187)))
 (let ((?x126602 (* ?x126324 l_0_20_209)))
 (let ((?x126102 (* 2.0 l_0_20_18)))
 (let ((?x127332 (* ?x126102 l_0_20_31)))
 (let ((?x125705 (* 2.0 l_0_20_17)))
 (let ((?x127330 (* ?x125705 l_0_20_30)))
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126600 (* ?x126321 l_0_20_176)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126598 (* ?x126318 l_0_20_175)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126596 (* ?x126315 l_0_20_174)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x126594 (* ?x126312 l_0_20_173)))
 (let ((?x129311 (+ (+ (+ (+ ?x126594 ?x126596) ?x126598) ?x126600) (* (* 2.0 l_0_20_16) l_0_20_29))))
 (let ((?x129318 (- (+ (- (- (- (+ (+ ?x129311 ?x127330) ?x127332) ?x126602) ?x126604) ?x126606) ?x127334) ?x126608)))
 (let ((?x129324 (- (- (+ (+ ?x129318 ?x127344) ?x127350) (* (* 2.0 l_0_20_223) l_0_20_232)) (* (* 2.0 l_0_20_224) l_0_20_233))))
 (let ((?x129328 (- (- ?x129324 (* (* 2.0 l_0_20_225) l_0_20_234)) (* (* 2.0 l_0_20_226) l_0_20_235))))
 (let ((?x129338 (+ (+ (+ (- (- (- (- ?x129328 ?x128268) ?x128270) ?x128272) ?x128274) ?x129333) ?x129335) ?x129337)))
 (let ((?x129348 (- (- (- (- (+ (+ (+ ?x129338 ?x129339) ?x129341) ?x129343) ?x127352) ?x127354) ?x127356) ?x127358)))
 (= (- (- ?x129348 ?x127360) ?x127362) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127479 (* l_0_20_64 l_0_20_64)))
 (let ((?x127477 (* l_0_20_63 l_0_20_63)))
 (let ((?x127475 (* l_0_20_62 l_0_20_62)))
 (let ((?x127473 (* l_0_20_61 l_0_20_61)))
 (let ((?x127471 (* l_0_20_60 l_0_20_60)))
 (let ((?x127469 (* l_0_20_59 l_0_20_59)))
 (let ((?x127467 (* l_0_20_58 l_0_20_58)))
 (let ((?x129391 (* l_0_20_316 l_0_20_316)))
 (let ((?x129389 (* l_0_20_315 l_0_20_315)))
 (let ((?x129387 (* l_0_20_314 l_0_20_314)))
 (let ((?x129385 (* l_0_20_313 l_0_20_313)))
 (let ((?x129383 (* l_0_20_312 l_0_20_312)))
 (let ((?x129381 (* l_0_20_311 l_0_20_311)))
 (let ((?x129379 (* l_0_20_310 l_0_20_310)))
 (let ((?x127465 (* l_0_20_28 l_0_20_28)))
 (let ((?x127463 (* l_0_20_27 l_0_20_27)))
 (let ((?x83878 (* 2.0 l_0_20_262)))
 (let ((?x129105 (* ?x83878 l_0_20_277)))
 (let ((?x106354 (* 2.0 l_0_20_261)))
 (let ((?x63369 (* ?x106354 l_0_20_276)))
 (let ((?x106374 (* 2.0 l_0_20_260)))
 (let ((?x106576 (* ?x106374 l_0_20_275)))
 (let ((?x127461 (* l_0_20_26 l_0_20_26)))
 (let ((?x106393 (* 2.0 l_0_20_259)))
 (let ((?x83992 (* ?x106393 l_0_20_274)))
 (let ((?x127459 (* l_0_20_25 l_0_20_25)))
 (let ((?x127457 (* l_0_20_24 l_0_20_24)))
 (let ((?x39857 (+ (+ (+ (* l_0_20_22 l_0_20_22) (* l_0_20_23 l_0_20_23)) ?x127457) ?x127459)))
 (let ((?x129378 (+ (+ (- (- (- (+ (- ?x39857 ?x83992) ?x127461) ?x106576) ?x63369) ?x129105) ?x127463) ?x127465)))
 (let ((?x129392 (+ (+ (+ (+ (+ (+ (+ ?x129378 ?x129379) ?x129381) ?x129383) ?x129385) ?x129387) ?x129389) ?x129391)))
 (let ((?x129399 (- (- (- (- (- (- (- ?x129392 ?x127467) ?x127469) ?x127471) ?x127473) ?x127475) ?x127477) ?x127479)))
 (= ?x129399 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x127647 (* (* 2.0 l_0_20_64) l_0_20_71)))
 (let ((?x127644 (* (* 2.0 l_0_20_63) l_0_20_70)))
 (let ((?x127641 (* (* 2.0 l_0_20_62) l_0_20_69)))
 (let ((?x127638 (* (* 2.0 l_0_20_61) l_0_20_68)))
 (let ((?x127635 (* (* 2.0 l_0_20_60) l_0_20_67)))
 (let ((?x127632 (* (* 2.0 l_0_20_59) l_0_20_66)))
 (let ((?x127629 (* (* 2.0 l_0_20_58) l_0_20_65)))
 (let ((?x129442 (* (* 2.0 l_0_20_316) l_0_20_323)))
 (let ((?x129439 (* (* 2.0 l_0_20_315) l_0_20_322)))
 (let ((?x129436 (* (* 2.0 l_0_20_314) l_0_20_321)))
 (let ((?x129433 (* (* 2.0 l_0_20_313) l_0_20_320)))
 (let ((?x129430 (* (* 2.0 l_0_20_312) l_0_20_319)))
 (let ((?x129427 (* (* 2.0 l_0_20_311) l_0_20_318)))
 (let ((?x129424 (* (* 2.0 l_0_20_310) l_0_20_317)))
 (let ((?x127626 (* (* 2.0 l_0_20_28) l_0_20_35)))
 (let ((?x127623 (* (* 2.0 l_0_20_27) l_0_20_34)))
 (let ((?x83878 (* 2.0 l_0_20_262)))
 (let ((?x129173 (* ?x83878 l_0_20_284)))
 (let ((?x106354 (* 2.0 l_0_20_261)))
 (let ((?x129171 (* ?x106354 l_0_20_283)))
 (let ((?x106374 (* 2.0 l_0_20_260)))
 (let ((?x129169 (* ?x106374 l_0_20_282)))
 (let ((?x127620 (* (* 2.0 l_0_20_26) l_0_20_33)))
 (let ((?x106393 (* 2.0 l_0_20_259)))
 (let ((?x129167 (* ?x106393 l_0_20_281)))
 (let ((?x127617 (* (* 2.0 l_0_20_25) l_0_20_32)))
 (let ((?x126174 (* 2.0 l_0_20_24)))
 (let ((?x127614 (* ?x126174 l_0_20_31)))
 (let ((?x125820 (* 2.0 l_0_20_23)))
 (let ((?x127612 (* ?x125820 l_0_20_30)))
 (let ((?x126169 (* 2.0 l_0_20_22)))
 (let ((?x127610 (* ?x126169 l_0_20_29)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125533 (* ?x125479 l_0_20_152)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x128631 (* ?x125623 l_0_20_151)))
 (let ((?x129401 (+ (* (* 1.0 l_0_20_110) l_0_20_115) (* (* 1.0 l_0_20_111) l_0_20_116))))
 (let ((?x129406 (- (+ (- (- ?x129401 ?x128631) ?x125533) ?x127610) (* (* 2.0 l_0_20_223) l_0_20_238))))
 (let ((?x129410 (- (- ?x129406 (* (* 2.0 l_0_20_224) l_0_20_239)) (* (* 2.0 l_0_20_225) l_0_20_240))))
 (let ((?x129415 (+ (+ (+ (- ?x129410 (* (* 2.0 l_0_20_226) l_0_20_241)) ?x127612) ?x127614) ?x127617)))
 (let ((?x129422 (+ (+ (- (- (- (+ (- ?x129415 ?x129167) ?x127620) ?x129169) ?x129171) ?x129173) ?x127623) ?x127626)))
 (let ((?x129443 (+ (+ (+ (+ (+ (+ (+ ?x129422 ?x129424) ?x129427) ?x129430) ?x129433) ?x129436) ?x129439) ?x129442)))
 (let ((?x129450 (- (- (- (- (- (- (- ?x129443 ?x127629) ?x127632) ?x127635) ?x127638) ?x127641) ?x127644) ?x127647)))
 (let ((?x129454 (- (- ?x129450 (* (* 1.0 l_0_20_74) l_0_20_79)) (* (* 1.0 l_0_20_75) l_0_20_80))))
 (= ?x129454 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127811 (* l_0_20_72 l_0_20_72)))
 (let ((?x127809 (* l_0_20_71 l_0_20_71)))
 (let ((?x127807 (* l_0_20_70 l_0_20_70)))
 (let ((?x127805 (* l_0_20_69 l_0_20_69)))
 (let ((?x127803 (* l_0_20_68 l_0_20_68)))
 (let ((?x127801 (* l_0_20_67 l_0_20_67)))
 (let ((?x127799 (* l_0_20_66 l_0_20_66)))
 (let ((?x127797 (* l_0_20_65 l_0_20_65)))
 (let ((?x127795 (* l_0_20_36 l_0_20_36)))
 (let ((?x127793 (* l_0_20_35 l_0_20_35)))
 (let ((?x127791 (* l_0_20_34 l_0_20_34)))
 (let ((?x127789 (* l_0_20_33 l_0_20_33)))
 (let ((?x129489 (* l_0_20_324 l_0_20_324)))
 (let ((?x129487 (* l_0_20_323 l_0_20_323)))
 (let ((?x129485 (* l_0_20_322 l_0_20_322)))
 (let ((?x129483 (* l_0_20_321 l_0_20_321)))
 (let ((?x129481 (* l_0_20_320 l_0_20_320)))
 (let ((?x127787 (* l_0_20_32 l_0_20_32)))
 (let ((?x129478 (* l_0_20_319 l_0_20_319)))
 (let ((?x129476 (* l_0_20_318 l_0_20_318)))
 (let ((?x129474 (* l_0_20_317 l_0_20_317)))
 (let ((?x127785 (* l_0_20_31 l_0_20_31)))
 (let ((?x127783 (* l_0_20_30 l_0_20_30)))
 (let ((?x127781 (* l_0_20_29 l_0_20_29)))
 (let ((?x63792 (- (* (* (- 2.0) l_0_20_223) l_0_20_245) (* (* 2.0 l_0_20_224) l_0_20_246))))
 (let ((?x84997 (- (- ?x63792 (* (* 2.0 l_0_20_225) l_0_20_247)) (* (* 2.0 l_0_20_226) l_0_20_248))))
 (let ((?x129480 (+ (+ (+ (+ (+ (+ (+ ?x84997 ?x127781) ?x127783) ?x127785) ?x129474) ?x129476) ?x129478) ?x127787)))
 (let ((?x129492 (+ (+ (+ (+ (+ (+ (+ ?x129480 ?x129481) ?x129483) ?x129485) ?x129487) ?x129489) ?x127789) ?x127791)))
 (let ((?x129499 (- (- (- (- (- (+ (+ ?x129492 ?x127793) ?x127795) ?x127797) ?x127799) ?x127801) ?x127803) ?x127805)))
 (= (- (- (- ?x129499 ?x127807) ?x127809) ?x127811) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x125266 (* l_0_20_145 l_0_20_145)))
 (let ((?x107241 (* l_0_20_109 l_0_20_109)))
 (let ((?x107244 (* (/ 1.0 2.0) ?x107241)))
 (= (- (- ?x107244 ?x125266) (* (* (/ 1.0 2.0) l_0_20_73) l_0_20_73)) 0.0)))))
(assert
 (let ((?x129442 (* (* 2.0 l_0_20_316) l_0_20_323)))
 (let ((?x129439 (* (* 2.0 l_0_20_315) l_0_20_322)))
 (let ((?x129436 (* (* 2.0 l_0_20_314) l_0_20_321)))
 (let ((?x129433 (* (* 2.0 l_0_20_313) l_0_20_320)))
 (let ((?x129430 (* (* 2.0 l_0_20_312) l_0_20_319)))
 (let ((?x129427 (* (* 2.0 l_0_20_311) l_0_20_318)))
 (let ((?x129424 (* (* 2.0 l_0_20_310) l_0_20_317)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x129559 (* ?x128036 l_0_20_281)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125304 (* ?x125303 l_0_20_146)))
 (let ((?x129520 (+ (* (* 2.0 l_0_20_100) l_0_20_107) (* (* 2.0 l_0_20_101) l_0_20_94))))
 (let ((?x129524 (+ (+ ?x129520 (* (* 2.0 l_0_20_102) l_0_20_95)) (* (* 2.0 l_0_20_103) l_0_20_96))))
 (let ((?x129529 (+ (+ ?x129524 (* (* 2.0 l_0_20_104) l_0_20_97)) (* (* 2.0 l_0_20_105) l_0_20_98))))
 (let ((?x129534 (+ (+ ?x129529 (* (* 2.0 l_0_20_106) l_0_20_99)) (* (* 1.0 l_0_20_109) l_0_20_110))))
 (let ((?x129540 (- (- ?x129534 (* (* 2.0 l_0_20_130) l_0_20_137)) (* (* 2.0 l_0_20_131) l_0_20_138))))
 (let ((?x129546 (- (- ?x129540 (* (* 2.0 l_0_20_132) l_0_20_139)) (* (* 2.0 l_0_20_133) l_0_20_140))))
 (let ((?x129552 (- (- ?x129546 (* (* 2.0 l_0_20_134) l_0_20_141)) (* (* 2.0 l_0_20_135) l_0_20_142))))
 (let ((?x129558 (- (- (- ?x129552 (* (* 2.0 l_0_20_136) l_0_20_143)) ?x125304) (* (* 2.0 l_0_20_217) l_0_20_238))))
 (let ((?x129566 (+ (+ (+ (+ (+ (+ (- ?x129558 ?x129559) ?x129424) ?x129427) ?x129430) ?x129433) ?x129436) ?x129439)))
 (= (- (+ ?x129566 ?x129442) (* (* 1.0 l_0_20_73) l_0_20_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x104219 (* ?x125303 l_0_20_151)))
 (let ((?x129622 (- (- (* (* 1.0 l_0_20_109) l_0_20_115) ?x104219) (* (* 1.0 l_0_20_73) l_0_20_79))))
 (= ?x129622 0.0)))))
(assert
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125381 (* ?x125303 l_0_20_155)))
 (let ((?x129633 (- (- (* (* 1.0 l_0_20_109) l_0_20_119) ?x125381) (* (* 1.0 l_0_20_73) l_0_20_83))))
 (= ?x129633 0.0)))))
(assert
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125404 (* ?x125303 l_0_20_160)))
 (let ((?x129648 (- (- (* (* 1.0 l_0_20_109) l_0_20_124) ?x125404) (* (* 1.0 l_0_20_73) l_0_20_88))))
 (= ?x129648 0.0)))))
(assert
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125431 (* ?x125303 l_0_20_166)))
 (let ((?x129660 (- (- (* (* 1.0 l_0_20_109) l_0_20_130) ?x125431) (* (* 1.0 l_0_20_73) l_0_20_94))))
 (= ?x129660 0.0)))))
(assert
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125460 (* ?x125303 l_0_20_173)))
 (let ((?x129671 (+ (* (* (- 1.0) l_0_20_101) l_0_20_73) (* (* 1.0 l_0_20_109) l_0_20_137))))
 (= (- ?x129671 ?x125460) 0.0)))))
(assert
 (let ((?x129737 (* (* 2.0 l_0_20_280) l_0_20_287)))
 (let ((?x129734 (* (* 2.0 l_0_20_279) l_0_20_286)))
 (let ((?x129731 (* (* 2.0 l_0_20_278) l_0_20_285)))
 (let ((?x129728 (* (* 2.0 l_0_20_277) l_0_20_284)))
 (let ((?x129725 (* (* 2.0 l_0_20_276) l_0_20_283)))
 (let ((?x129722 (* (* 2.0 l_0_20_275) l_0_20_282)))
 (let ((?x129719 (* (* 2.0 l_0_20_274) l_0_20_281)))
 (let ((?x129715 (* 2.0 l_0_20_267)))
 (let ((?x129716 (* ?x129715 l_0_20_285)))
 (let ((?x129712 (* 2.0 l_0_20_266)))
 (let ((?x129713 (* ?x129712 l_0_20_284)))
 (let ((?x129709 (* 2.0 l_0_20_265)))
 (let ((?x129710 (* ?x129709 l_0_20_283)))
 (let ((?x129706 (* 2.0 l_0_20_264)))
 (let ((?x129707 (* ?x129706 l_0_20_282)))
 (let ((?x129703 (* 2.0 l_0_20_263)))
 (let ((?x129704 (* ?x129703 l_0_20_281)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125626 (* ?x125479 l_0_20_156)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x125624 (* ?x125623 l_0_20_155)))
 (let ((?x129685 (+ (* (* 1.0 l_0_20_110) l_0_20_119) (* (* 1.0 l_0_20_111) l_0_20_120))))
 (let ((?x129693 (- (- (- (- ?x129685 ?x125624) ?x125626) (* (* 2.0 l_0_20_227) l_0_20_238)) (* (* 2.0 l_0_20_228) l_0_20_239))))
 (let ((?x129699 (- (- ?x129693 (* (* 2.0 l_0_20_229) l_0_20_240)) (* (* 2.0 l_0_20_230) l_0_20_241))))
 (let ((?x129711 (- (- (- (- ?x129699 (* (* 2.0 l_0_20_231) l_0_20_242)) ?x129704) ?x129707) ?x129710)))
 (let ((?x129732 (+ (+ (+ (+ (+ (- (- ?x129711 ?x129713) ?x129716) ?x129719) ?x129722) ?x129725) ?x129728) ?x129731)))
 (let ((?x129742 (- (- (+ (+ ?x129732 ?x129734) ?x129737) (* (* 1.0 l_0_20_74) l_0_20_83)) (* (* 1.0 l_0_20_75) l_0_20_84))))
 (= ?x129742 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x129442 (* (* 2.0 l_0_20_316) l_0_20_323)))
 (let ((?x129439 (* (* 2.0 l_0_20_315) l_0_20_322)))
 (let ((?x129436 (* (* 2.0 l_0_20_314) l_0_20_321)))
 (let ((?x129433 (* (* 2.0 l_0_20_313) l_0_20_320)))
 (let ((?x129430 (* (* 2.0 l_0_20_312) l_0_20_319)))
 (let ((?x129427 (* (* 2.0 l_0_20_311) l_0_20_318)))
 (let ((?x129424 (* (* 2.0 l_0_20_310) l_0_20_317)))
 (let ((?x129842 (* 2.0 l_0_20_273)))
 (let ((?x129843 (* ?x129842 l_0_20_286)))
 (let ((?x129839 (* 2.0 l_0_20_272)))
 (let ((?x129840 (* ?x129839 l_0_20_285)))
 (let ((?x129836 (* 2.0 l_0_20_271)))
 (let ((?x129837 (* ?x129836 l_0_20_284)))
 (let ((?x129833 (* 2.0 l_0_20_270)))
 (let ((?x129834 (* ?x129833 l_0_20_283)))
 (let ((?x129830 (* 2.0 l_0_20_269)))
 (let ((?x129831 (* ?x129830 l_0_20_282)))
 (let ((?x129827 (* 2.0 l_0_20_268)))
 (let ((?x129828 (* ?x129827 l_0_20_281)))
 (let ((?x127608 (* (* 2.0 l_0_20_208) l_0_20_215)))
 (let ((?x127605 (* (* 2.0 l_0_20_207) l_0_20_214)))
 (let ((?x127602 (* (* 2.0 l_0_20_206) l_0_20_213)))
 (let ((?x127599 (* (* 2.0 l_0_20_205) l_0_20_212)))
 (let ((?x127596 (* (* 2.0 l_0_20_204) l_0_20_211)))
 (let ((?x127593 (* (* 2.0 l_0_20_203) l_0_20_210)))
 (let ((?x127590 (* (* 2.0 l_0_20_202) l_0_20_209)))
 (let ((?x127587 (* (* 2.0 l_0_20_172) l_0_20_179)))
 (let ((?x127584 (* (* 2.0 l_0_20_171) l_0_20_178)))
 (let ((?x127581 (* (* 2.0 l_0_20_170) l_0_20_177)))
 (let ((?x127578 (* (* 2.0 l_0_20_169) l_0_20_176)))
 (let ((?x127575 (* (* 2.0 l_0_20_168) l_0_20_175)))
 (let ((?x127572 (* (* 2.0 l_0_20_167) l_0_20_174)))
 (let ((?x127569 (* (* 2.0 l_0_20_166) l_0_20_173)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x81850 (* ?x125479 l_0_20_161)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x129792 (* ?x125623 l_0_20_160)))
 (let ((?x129791 (+ (* (* 1.0 l_0_20_110) l_0_20_124) (* (* 1.0 l_0_20_111) l_0_20_125))))
 (let ((?x129799 (+ (+ (+ (+ (+ (- (- ?x129791 ?x129792) ?x81850) ?x127569) ?x127572) ?x127575) ?x127578) ?x127581)))
 (let ((?x129806 (- (- (- (- (- (+ (+ ?x129799 ?x127584) ?x127587) ?x127590) ?x127593) ?x127596) ?x127599) ?x127602)))
 (let ((?x129814 (- (- (- (- ?x129806 ?x127605) ?x127608) (* (* 2.0 l_0_20_232) l_0_20_238)) (* (* 2.0 l_0_20_233) l_0_20_239))))
 (let ((?x129820 (- (- ?x129814 (* (* 2.0 l_0_20_234) l_0_20_240)) (* (* 2.0 l_0_20_235) l_0_20_241))))
 (let ((?x129826 (- (- ?x129820 (* (* 2.0 l_0_20_236) l_0_20_242)) (* (* 2.0 l_0_20_237) l_0_20_243))))
 (let ((?x129845 (- (- (- (- (- (- (- ?x129826 ?x129828) ?x129831) ?x129834) ?x129837) ?x129840) ?x129843) ?x129424)))
 (let ((?x129853 (- (- (- (- (- (- (- ?x129845 ?x129427) ?x129430) ?x129433) ?x129436) ?x129439) ?x129442) (* (* 1.0 l_0_20_74) l_0_20_88))))
 (= (- ?x129853 (* (* 1.0 l_0_20_75) l_0_20_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x129737 (* (* 2.0 l_0_20_280) l_0_20_287)))
 (let ((?x129734 (* (* 2.0 l_0_20_279) l_0_20_286)))
 (let ((?x129731 (* (* 2.0 l_0_20_278) l_0_20_285)))
 (let ((?x129728 (* (* 2.0 l_0_20_277) l_0_20_284)))
 (let ((?x129725 (* (* 2.0 l_0_20_276) l_0_20_283)))
 (let ((?x129722 (* (* 2.0 l_0_20_275) l_0_20_282)))
 (let ((?x129719 (* (* 2.0 l_0_20_274) l_0_20_281)))
 (let ((?x129928 (* l_0_20_244 l_0_20_244)))
 (let ((?x129926 (* l_0_20_243 l_0_20_243)))
 (let ((?x129924 (* l_0_20_242 l_0_20_242)))
 (let ((?x129922 (* l_0_20_241 l_0_20_241)))
 (let ((?x129920 (* l_0_20_240 l_0_20_240)))
 (let ((?x129918 (* l_0_20_239 l_0_20_239)))
 (let ((?x129916 (* l_0_20_238 l_0_20_238)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125806 (* ?x125479 l_0_20_167)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x125803 (* ?x125623 l_0_20_166)))
 (let ((?x129913 (+ (* (* 1.0 l_0_20_110) l_0_20_130) (* (* 1.0 l_0_20_111) l_0_20_131))))
 (let ((?x129925 (- (- (- (- (- (- (- ?x129913 ?x125803) ?x125806) ?x129916) ?x129918) ?x129920) ?x129922) ?x129924)))
 (let ((?x129934 (- (- (- (- (- (- (- ?x129925 ?x129926) ?x129928) ?x129719) ?x129722) ?x129725) ?x129728) ?x129731)))
 (let ((?x129940 (- (- (- (- ?x129934 ?x129734) ?x129737) (* (* 1.0 l_0_20_74) l_0_20_94)) (* (* 1.0 l_0_20_75) l_0_20_95))))
 (= ?x129940 0.0))))))))))))))))))))))))
(assert
 (let ((?x130002 (* l_0_20_288 l_0_20_288)))
 (let ((?x130000 (* l_0_20_287 l_0_20_287)))
 (let ((?x129998 (* l_0_20_286 l_0_20_286)))
 (let ((?x129996 (* l_0_20_285 l_0_20_285)))
 (let ((?x129994 (* l_0_20_284 l_0_20_284)))
 (let ((?x129992 (* l_0_20_283 l_0_20_283)))
 (let ((?x129990 (* l_0_20_282 l_0_20_282)))
 (let ((?x129988 (* l_0_20_281 l_0_20_281)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125881 (* ?x125479 l_0_20_174)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x129964 (* ?x125623 l_0_20_173)))
 (let ((?x129959 (- (* (* (- 1.0) l_0_20_101) l_0_20_74) (* (* 1.0 l_0_20_102) l_0_20_75))))
 (let ((?x129963 (+ (+ ?x129959 (* (* 1.0 l_0_20_110) l_0_20_137)) (* (* 1.0 l_0_20_111) l_0_20_138))))
 (let ((?x129972 (- (- (- (- ?x129963 ?x129964) ?x125881) (* (* 2.0 l_0_20_238) l_0_20_245)) (* (* 2.0 l_0_20_239) l_0_20_246))))
 (let ((?x129978 (- (- ?x129972 (* (* 2.0 l_0_20_240) l_0_20_247)) (* (* 2.0 l_0_20_241) l_0_20_248))))
 (let ((?x129984 (- (- ?x129978 (* (* 2.0 l_0_20_242) l_0_20_249)) (* (* 2.0 l_0_20_243) l_0_20_250))))
 (let ((?x129993 (- (- (- (- ?x129984 (* (* 2.0 l_0_20_244) l_0_20_251)) ?x129988) ?x129990) ?x129992)))
 (= (- (- (- (- (- ?x129993 ?x129994) ?x129996) ?x129998) ?x130000) ?x130002) 0.0))))))))))))))))))))
(assert
 (let ((?x82207 (* l_0_20_154 l_0_20_154)))
 (let ((?x104570 (* l_0_20_153 l_0_20_153)))
 (let ((?x104574 (* l_0_20_152 l_0_20_152)))
 (let ((?x82216 (* l_0_20_151 l_0_20_151)))
 (let ((?x130046 (+ (* (/ 1.0 2.0) (* l_0_20_115 l_0_20_115)) (* (/ 1.0 2.0) (* l_0_20_116 l_0_20_116)))))
 (let ((?x130050 (+ (+ ?x130046 (* (/ 1.0 2.0) (* l_0_20_117 l_0_20_117))) (* (/ 1.0 2.0) (* l_0_20_118 l_0_20_118)))))
 (let ((?x130057 (- (- (- (- (- ?x130050 ?x82216) ?x104574) ?x104570) ?x82207) (* (* (/ 1.0 2.0) l_0_20_79) l_0_20_79))))
 (let ((?x130063 (- (- ?x130057 (* (* (/ 1.0 2.0) l_0_20_80) l_0_20_80)) (* (* (/ 1.0 2.0) l_0_20_81) l_0_20_81))))
 (= (- ?x130063 (* (* (/ 1.0 2.0) l_0_20_82) l_0_20_82)) 0.0))))))))))
(assert
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126322 (* ?x126321 l_0_20_158)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126319 (* ?x126318 l_0_20_157)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126316 (* ?x126315 l_0_20_156)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x126313 (* ?x126312 l_0_20_155)))
 (let ((?x130085 (+ (* (* 1.0 l_0_20_115) l_0_20_119) (* (* 1.0 l_0_20_116) l_0_20_120))))
 (let ((?x130091 (+ (+ ?x130085 (* (* 1.0 l_0_20_117) l_0_20_121)) (* (* 1.0 l_0_20_118) l_0_20_122))))
 (let ((?x130098 (- (- (- (- (- ?x130091 ?x126313) ?x126316) ?x126319) ?x126322) (* (* 1.0 l_0_20_79) l_0_20_83))))
 (let ((?x130104 (- (- ?x130098 (* (* 1.0 l_0_20_80) l_0_20_84)) (* (* 1.0 l_0_20_81) l_0_20_85))))
 (= (- ?x130104 (* (* 1.0 l_0_20_82) l_0_20_86)) 0.0))))))))))))))
(assert
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126386 (* ?x126321 l_0_20_163)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126382 (* ?x126318 l_0_20_162)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126378 (* ?x126315 l_0_20_161)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x30424 (* ?x126312 l_0_20_160)))
 (let ((?x130135 (+ (* (* 1.0 l_0_20_115) l_0_20_124) (* (* 1.0 l_0_20_116) l_0_20_125))))
 (let ((?x130139 (+ (+ ?x130135 (* (* 1.0 l_0_20_117) l_0_20_126)) (* (* 1.0 l_0_20_118) l_0_20_127))))
 (let ((?x130145 (- (- (- (- (- ?x130139 ?x30424) ?x126378) ?x126382) ?x126386) (* (* 1.0 l_0_20_79) l_0_20_88))))
 (let ((?x130149 (- (- ?x130145 (* (* 1.0 l_0_20_80) l_0_20_89)) (* (* 1.0 l_0_20_81) l_0_20_90))))
 (= (- ?x130149 (* (* 1.0 l_0_20_82) l_0_20_91)) 0.0))))))))))))))
(assert
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126484 (* ?x126321 l_0_20_169)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126482 (* ?x126318 l_0_20_168)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126480 (* ?x126315 l_0_20_167)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x126478 (* ?x126312 l_0_20_166)))
 (let ((?x86030 (+ (* (* 1.0 l_0_20_115) l_0_20_130) (* (* 1.0 l_0_20_116) l_0_20_131))))
 (let ((?x42002 (+ (+ ?x86030 (* (* 1.0 l_0_20_117) l_0_20_132)) (* (* 1.0 l_0_20_118) l_0_20_133))))
 (let ((?x130162 (- (- (- (- (- ?x42002 ?x126478) ?x126480) ?x126482) ?x126484) (* (* 1.0 l_0_20_79) l_0_20_94))))
 (let ((?x130166 (- (- ?x130162 (* (* 1.0 l_0_20_80) l_0_20_95)) (* (* 1.0 l_0_20_81) l_0_20_96))))
 (= (- ?x130166 (* (* 1.0 l_0_20_82) l_0_20_97)) 0.0))))))))))))))
(assert
 (let ((?x126321 (* 2.0 l_0_20_154)))
 (let ((?x126600 (* ?x126321 l_0_20_176)))
 (let ((?x126318 (* 2.0 l_0_20_153)))
 (let ((?x126598 (* ?x126318 l_0_20_175)))
 (let ((?x126315 (* 2.0 l_0_20_152)))
 (let ((?x126596 (* ?x126315 l_0_20_174)))
 (let ((?x126312 (* 2.0 l_0_20_151)))
 (let ((?x126594 (* ?x126312 l_0_20_173)))
 (let ((?x130192 (- (* (* (- 1.0) l_0_20_101) l_0_20_79) (* (* 1.0 l_0_20_102) l_0_20_80))))
 (let ((?x130197 (- (- ?x130192 (* (* 1.0 l_0_20_103) l_0_20_81)) (* (* 1.0 l_0_20_104) l_0_20_82))))
 (let ((?x130201 (+ (+ ?x130197 (* (* 1.0 l_0_20_115) l_0_20_137)) (* (* 1.0 l_0_20_116) l_0_20_138))))
 (let ((?x130205 (+ (+ ?x130201 (* (* 1.0 l_0_20_117) l_0_20_139)) (* (* 1.0 l_0_20_118) l_0_20_140))))
 (= (- (- (- (- ?x130205 ?x126594) ?x126596) ?x126598) ?x126600) 0.0))))))))))))))
(assert
 (let ((?x126686 (* l_0_20_159 l_0_20_159)))
 (let ((?x126684 (* l_0_20_158 l_0_20_158)))
 (let ((?x126682 (* l_0_20_157 l_0_20_157)))
 (let ((?x126680 (* l_0_20_156 l_0_20_156)))
 (let ((?x126678 (* l_0_20_155 l_0_20_155)))
 (let ((?x130237 (+ (* (/ 1.0 2.0) (* l_0_20_119 l_0_20_119)) (* (/ 1.0 2.0) (* l_0_20_120 l_0_20_120)))))
 (let ((?x130243 (+ (+ ?x130237 (* (/ 1.0 2.0) (* l_0_20_121 l_0_20_121))) (* (/ 1.0 2.0) (* l_0_20_122 l_0_20_122)))))
 (let ((?x130249 (- (- (- (+ ?x130243 (* (/ 1.0 2.0) (* l_0_20_123 l_0_20_123))) ?x126678) ?x126680) ?x126682)))
 (let ((?x130257 (- (- (- (- ?x130249 ?x126684) ?x126686) (* (* (/ 1.0 2.0) l_0_20_83) l_0_20_83)) (* (* (/ 1.0 2.0) l_0_20_84) l_0_20_84))))
 (let ((?x130263 (- (- ?x130257 (* (* (/ 1.0 2.0) l_0_20_85) l_0_20_85)) (* (* (/ 1.0 2.0) l_0_20_86) l_0_20_86))))
 (= (- ?x130263 (* (* (/ 1.0 2.0) l_0_20_87) l_0_20_87)) 0.0))))))))))))
(assert
 (let ((?x126762 (* 2.0 l_0_20_159)))
 (let ((?x126763 (* ?x126762 l_0_20_164)))
 (let ((?x126759 (* 2.0 l_0_20_158)))
 (let ((?x126760 (* ?x126759 l_0_20_163)))
 (let ((?x126756 (* 2.0 l_0_20_157)))
 (let ((?x126757 (* ?x126756 l_0_20_162)))
 (let ((?x126753 (* 2.0 l_0_20_156)))
 (let ((?x126754 (* ?x126753 l_0_20_161)))
 (let ((?x126750 (* 2.0 l_0_20_155)))
 (let ((?x126751 (* ?x126750 l_0_20_160)))
 (let ((?x130296 (+ (* (* 1.0 l_0_20_119) l_0_20_124) (* (* 1.0 l_0_20_120) l_0_20_125))))
 (let ((?x130302 (+ (+ ?x130296 (* (* 1.0 l_0_20_121) l_0_20_126)) (* (* 1.0 l_0_20_122) l_0_20_127))))
 (let ((?x130308 (- (- (- (+ ?x130302 (* (* 1.0 l_0_20_123) l_0_20_128)) ?x126751) ?x126754) ?x126757)))
 (let ((?x130316 (- (- (- (- ?x130308 ?x126760) ?x126763) (* (* 1.0 l_0_20_83) l_0_20_88)) (* (* 1.0 l_0_20_84) l_0_20_89))))
 (let ((?x130322 (- (- ?x130316 (* (* 1.0 l_0_20_85) l_0_20_90)) (* (* 1.0 l_0_20_86) l_0_20_91))))
 (= (- ?x130322 (* (* 1.0 l_0_20_87) l_0_20_92)) 0.0)))))))))))))))))
(assert
 (let ((?x126762 (* 2.0 l_0_20_159)))
 (let ((?x126878 (* ?x126762 l_0_20_170)))
 (let ((?x126759 (* 2.0 l_0_20_158)))
 (let ((?x126876 (* ?x126759 l_0_20_169)))
 (let ((?x126756 (* 2.0 l_0_20_157)))
 (let ((?x126874 (* ?x126756 l_0_20_168)))
 (let ((?x126753 (* 2.0 l_0_20_156)))
 (let ((?x126872 (* ?x126753 l_0_20_167)))
 (let ((?x126750 (* 2.0 l_0_20_155)))
 (let ((?x126870 (* ?x126750 l_0_20_166)))
 (let ((?x130358 (+ (* (* 1.0 l_0_20_119) l_0_20_130) (* (* 1.0 l_0_20_120) l_0_20_131))))
 (let ((?x130362 (+ (+ ?x130358 (* (* 1.0 l_0_20_121) l_0_20_132)) (* (* 1.0 l_0_20_122) l_0_20_133))))
 (let ((?x130367 (- (- (- (+ ?x130362 (* (* 1.0 l_0_20_123) l_0_20_134)) ?x126870) ?x126872) ?x126874)))
 (let ((?x130373 (- (- (- (- ?x130367 ?x126876) ?x126878) (* (* 1.0 l_0_20_83) l_0_20_94)) (* (* 1.0 l_0_20_84) l_0_20_95))))
 (let ((?x130377 (- (- ?x130373 (* (* 1.0 l_0_20_85) l_0_20_96)) (* (* 1.0 l_0_20_86) l_0_20_97))))
 (= (- ?x130377 (* (* 1.0 l_0_20_87) l_0_20_98)) 0.0)))))))))))))))))
(assert
 (let ((?x126762 (* 2.0 l_0_20_159)))
 (let ((?x126964 (* ?x126762 l_0_20_177)))
 (let ((?x126759 (* 2.0 l_0_20_158)))
 (let ((?x126962 (* ?x126759 l_0_20_176)))
 (let ((?x126756 (* 2.0 l_0_20_157)))
 (let ((?x126960 (* ?x126756 l_0_20_175)))
 (let ((?x126753 (* 2.0 l_0_20_156)))
 (let ((?x126958 (* ?x126753 l_0_20_174)))
 (let ((?x126750 (* 2.0 l_0_20_155)))
 (let ((?x126956 (* ?x126750 l_0_20_173)))
 (let ((?x130398 (- (* (* (- 1.0) l_0_20_101) l_0_20_83) (* (* 1.0 l_0_20_102) l_0_20_84))))
 (let ((?x130402 (- (- ?x130398 (* (* 1.0 l_0_20_103) l_0_20_85)) (* (* 1.0 l_0_20_104) l_0_20_86))))
 (let ((?x130407 (+ (- ?x130402 (* (* 1.0 l_0_20_105) l_0_20_87)) (* (* 1.0 l_0_20_119) l_0_20_137))))
 (let ((?x130411 (+ (+ ?x130407 (* (* 1.0 l_0_20_120) l_0_20_138)) (* (* 1.0 l_0_20_121) l_0_20_139))))
 (let ((?x130415 (+ (+ ?x130411 (* (* 1.0 l_0_20_122) l_0_20_140)) (* (* 1.0 l_0_20_123) l_0_20_141))))
 (= (- (- (- (- (- ?x130415 ?x126956) ?x126958) ?x126960) ?x126962) ?x126964) 0.0)))))))))))))))))
(assert
 (let ((?x127058 (* l_0_20_165 l_0_20_165)))
 (let ((?x127043 (* l_0_20_164 l_0_20_164)))
 (let ((?x127040 (* l_0_20_163 l_0_20_163)))
 (let ((?x127036 (* l_0_20_162 l_0_20_162)))
 (let ((?x127032 (* l_0_20_161 l_0_20_161)))
 (let ((?x127028 (* l_0_20_160 l_0_20_160)))
 (let ((?x130457 (+ (* (/ 1.0 2.0) (* l_0_20_124 l_0_20_124)) (* (/ 1.0 2.0) (* l_0_20_125 l_0_20_125)))))
 (let ((?x130463 (+ (+ ?x130457 (* (/ 1.0 2.0) (* l_0_20_126 l_0_20_126))) (* (/ 1.0 2.0) (* l_0_20_127 l_0_20_127)))))
 (let ((?x130469 (+ (+ ?x130463 (* (/ 1.0 2.0) (* l_0_20_128 l_0_20_128))) (* (/ 1.0 2.0) (* l_0_20_129 l_0_20_129)))))
 (let ((?x130478 (- (- (- (- (- (- (- ?x130469 ?x127028) ?x127032) ?x127036) ?x127040) ?x127043) ?x127058) (* (* (/ 1.0 2.0) l_0_20_88) l_0_20_88))))
 (let ((?x130484 (- (- ?x130478 (* (* (/ 1.0 2.0) l_0_20_89) l_0_20_89)) (* (* (/ 1.0 2.0) l_0_20_90) l_0_20_90))))
 (let ((?x130490 (- (- ?x130484 (* (* (/ 1.0 2.0) l_0_20_91) l_0_20_91)) (* (* (/ 1.0 2.0) l_0_20_92) l_0_20_92))))
 (= (- ?x130490 (* (* (/ 1.0 2.0) l_0_20_93) l_0_20_93)) 0.0))))))))))))))
(assert
 (let ((?x127161 (* 2.0 l_0_20_165)))
 (let ((?x127162 (* ?x127161 l_0_20_171)))
 (let ((?x127158 (* 2.0 l_0_20_164)))
 (let ((?x127159 (* ?x127158 l_0_20_170)))
 (let ((?x127155 (* 2.0 l_0_20_163)))
 (let ((?x127156 (* ?x127155 l_0_20_169)))
 (let ((?x127152 (* 2.0 l_0_20_162)))
 (let ((?x127153 (* ?x127152 l_0_20_168)))
 (let ((?x127149 (* 2.0 l_0_20_161)))
 (let ((?x127150 (* ?x127149 l_0_20_167)))
 (let ((?x127146 (* 2.0 l_0_20_160)))
 (let ((?x127147 (* ?x127146 l_0_20_166)))
 (let ((?x130520 (+ (* (* 1.0 l_0_20_124) l_0_20_130) (* (* 1.0 l_0_20_125) l_0_20_131))))
 (let ((?x130526 (+ (+ ?x130520 (* (* 1.0 l_0_20_126) l_0_20_132)) (* (* 1.0 l_0_20_127) l_0_20_133))))
 (let ((?x130532 (+ (+ ?x130526 (* (* 1.0 l_0_20_128) l_0_20_134)) (* (* 1.0 l_0_20_129) l_0_20_135))))
 (let ((?x130541 (- (- (- (- (- (- (- ?x130532 ?x127147) ?x127150) ?x127153) ?x127156) ?x127159) ?x127162) (* (* 1.0 l_0_20_88) l_0_20_94))))
 (let ((?x130547 (- (- ?x130541 (* (* 1.0 l_0_20_89) l_0_20_95)) (* (* 1.0 l_0_20_90) l_0_20_96))))
 (let ((?x130553 (- (- ?x130547 (* (* 1.0 l_0_20_91) l_0_20_97)) (* (* 1.0 l_0_20_92) l_0_20_98))))
 (= (- ?x130553 (* (* 1.0 l_0_20_93) l_0_20_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x127161 (* 2.0 l_0_20_165)))
 (let ((?x127328 (* ?x127161 l_0_20_178)))
 (let ((?x127158 (* 2.0 l_0_20_164)))
 (let ((?x127326 (* ?x127158 l_0_20_177)))
 (let ((?x127155 (* 2.0 l_0_20_163)))
 (let ((?x127324 (* ?x127155 l_0_20_176)))
 (let ((?x127152 (* 2.0 l_0_20_162)))
 (let ((?x127322 (* ?x127152 l_0_20_175)))
 (let ((?x127149 (* 2.0 l_0_20_161)))
 (let ((?x127320 (* ?x127149 l_0_20_174)))
 (let ((?x127146 (* 2.0 l_0_20_160)))
 (let ((?x127318 (* ?x127146 l_0_20_173)))
 (let ((?x130583 (- (* (* (- 1.0) l_0_20_101) l_0_20_88) (* (* 1.0 l_0_20_102) l_0_20_89))))
 (let ((?x130587 (- (- ?x130583 (* (* 1.0 l_0_20_103) l_0_20_90)) (* (* 1.0 l_0_20_104) l_0_20_91))))
 (let ((?x130592 (- (- ?x130587 (* (* 1.0 l_0_20_105) l_0_20_92)) (* (* 1.0 l_0_20_106) l_0_20_93))))
 (let ((?x130596 (+ (+ ?x130592 (* (* 1.0 l_0_20_124) l_0_20_137)) (* (* 1.0 l_0_20_125) l_0_20_138))))
 (let ((?x130600 (+ (+ ?x130596 (* (* 1.0 l_0_20_126) l_0_20_139)) (* (* 1.0 l_0_20_127) l_0_20_140))))
 (let ((?x130604 (+ (+ ?x130600 (* (* 1.0 l_0_20_128) l_0_20_141)) (* (* 1.0 l_0_20_129) l_0_20_142))))
 (= (- (- (- (- (- (- ?x130604 ?x127318) ?x127320) ?x127322) ?x127324) ?x127326) ?x127328) 0.0))))))))))))))))))))
(assert
 (let ((?x127437 (* l_0_20_172 l_0_20_172)))
 (let ((?x127435 (* l_0_20_171 l_0_20_171)))
 (let ((?x127433 (* l_0_20_170 l_0_20_170)))
 (let ((?x127431 (* l_0_20_169 l_0_20_169)))
 (let ((?x127429 (* l_0_20_168 l_0_20_168)))
 (let ((?x127427 (* l_0_20_167 l_0_20_167)))
 (let ((?x127425 (* l_0_20_166 l_0_20_166)))
 (let ((?x130647 (+ (* (* (- (/ 1.0 2.0)) l_0_20_100) l_0_20_100) (* (/ 1.0 2.0) (* l_0_20_130 l_0_20_130)))))
 (let ((?x130653 (+ (+ ?x130647 (* (/ 1.0 2.0) (* l_0_20_131 l_0_20_131))) (* (/ 1.0 2.0) (* l_0_20_132 l_0_20_132)))))
 (let ((?x130659 (+ (+ ?x130653 (* (/ 1.0 2.0) (* l_0_20_133 l_0_20_133))) (* (/ 1.0 2.0) (* l_0_20_134 l_0_20_134)))))
 (let ((?x130665 (+ (+ ?x130659 (* (/ 1.0 2.0) (* l_0_20_135 l_0_20_135))) (* (/ 1.0 2.0) (* l_0_20_136 l_0_20_136)))))
 (let ((?x130672 (- (- (- (- (- (- (- ?x130665 ?x127425) ?x127427) ?x127429) ?x127431) ?x127433) ?x127435) ?x127437)))
 (let ((?x130678 (- (- ?x130672 (* (* (/ 1.0 2.0) l_0_20_94) l_0_20_94)) (* (* (/ 1.0 2.0) l_0_20_95) l_0_20_95))))
 (let ((?x130684 (- (- ?x130678 (* (* (/ 1.0 2.0) l_0_20_96) l_0_20_96)) (* (* (/ 1.0 2.0) l_0_20_97) l_0_20_97))))
 (let ((?x130690 (- (- ?x130684 (* (* (/ 1.0 2.0) l_0_20_98) l_0_20_98)) (* (* (/ 1.0 2.0) l_0_20_99) l_0_20_99))))
 (= ?x130690 0.0)))))))))))))))))
(assert
 (let ((?x127587 (* (* 2.0 l_0_20_172) l_0_20_179)))
 (let ((?x127584 (* (* 2.0 l_0_20_171) l_0_20_178)))
 (let ((?x127581 (* (* 2.0 l_0_20_170) l_0_20_177)))
 (let ((?x127578 (* (* 2.0 l_0_20_169) l_0_20_176)))
 (let ((?x127575 (* (* 2.0 l_0_20_168) l_0_20_175)))
 (let ((?x127572 (* (* 2.0 l_0_20_167) l_0_20_174)))
 (let ((?x127569 (* (* 2.0 l_0_20_166) l_0_20_173)))
 (let ((?x130727 (- (* (* (- 1.0) l_0_20_100) l_0_20_107) (* (* 1.0 l_0_20_101) l_0_20_94))))
 (let ((?x130731 (- (- ?x130727 (* (* 1.0 l_0_20_102) l_0_20_95)) (* (* 1.0 l_0_20_103) l_0_20_96))))
 (let ((?x130735 (- (- ?x130731 (* (* 1.0 l_0_20_104) l_0_20_97)) (* (* 1.0 l_0_20_105) l_0_20_98))))
 (let ((?x130740 (+ (- ?x130735 (* (* 1.0 l_0_20_106) l_0_20_99)) (* (* 1.0 l_0_20_130) l_0_20_137))))
 (let ((?x130746 (+ (+ ?x130740 (* (* 1.0 l_0_20_131) l_0_20_138)) (* (* 1.0 l_0_20_132) l_0_20_139))))
 (let ((?x130752 (+ (+ ?x130746 (* (* 1.0 l_0_20_133) l_0_20_140)) (* (* 1.0 l_0_20_134) l_0_20_141))))
 (let ((?x130758 (+ (+ ?x130752 (* (* 1.0 l_0_20_135) l_0_20_142)) (* (* 1.0 l_0_20_136) l_0_20_143))))
 (let ((?x130765 (- (- (- (- (- (- (- ?x130758 ?x127569) ?x127572) ?x127575) ?x127578) ?x127581) ?x127584) ?x127587)))
 (= ?x130765 0.0)))))))))))))))))
(assert
 (let ((?x127763 (* l_0_20_180 l_0_20_180)))
 (let ((?x127761 (* l_0_20_179 l_0_20_179)))
 (let ((?x127759 (* l_0_20_178 l_0_20_178)))
 (let ((?x127757 (* l_0_20_177 l_0_20_177)))
 (let ((?x127736 (* l_0_20_176 l_0_20_176)))
 (let ((?x127732 (* l_0_20_175 l_0_20_175)))
 (let ((?x127728 (* l_0_20_174 l_0_20_174)))
 (let ((?x127815 (* l_0_20_173 l_0_20_173)))
 (let ((?x130807 (- (* (* (- (/ 1.0 2.0)) l_0_20_101) l_0_20_101) (* (* (/ 1.0 2.0) l_0_20_102) l_0_20_102))))
 (let ((?x130813 (- (- ?x130807 (* (* (/ 1.0 2.0) l_0_20_103) l_0_20_103)) (* (* (/ 1.0 2.0) l_0_20_104) l_0_20_104))))
 (let ((?x130819 (- (- ?x130813 (* (* (/ 1.0 2.0) l_0_20_105) l_0_20_105)) (* (* (/ 1.0 2.0) l_0_20_106) l_0_20_106))))
 (let ((?x130825 (- (- ?x130819 (* (* (/ 1.0 2.0) l_0_20_107) l_0_20_107)) (* (* (/ 1.0 2.0) l_0_20_108) l_0_20_108))))
 (let ((?x130831 (+ (+ ?x130825 (* (/ 1.0 2.0) (* l_0_20_137 l_0_20_137))) (* (/ 1.0 2.0) (* l_0_20_138 l_0_20_138)))))
 (let ((?x130837 (+ (+ ?x130831 (* (/ 1.0 2.0) (* l_0_20_139 l_0_20_139))) (* (/ 1.0 2.0) (* l_0_20_140 l_0_20_140)))))
 (let ((?x130843 (+ (+ ?x130837 (* (/ 1.0 2.0) (* l_0_20_141 l_0_20_141))) (* (/ 1.0 2.0) (* l_0_20_142 l_0_20_142)))))
 (let ((?x130849 (+ (+ ?x130843 (* (/ 1.0 2.0) (* l_0_20_143 l_0_20_143))) (* (/ 1.0 2.0) (* l_0_20_144 l_0_20_144)))))
 (let ((?x130856 (- (- (- (- (- (- (- ?x130849 ?x127815) ?x127728) ?x127732) ?x127736) ?x127757) ?x127759) ?x127761)))
 (= (- ?x130856 ?x127763) 0.0)))))))))))))))))))
(assert
 (let ((?x85202 (* l_0_20_73 l_0_20_73)))
 (let ((?x87048 (+ (+ (* (- l_0_20_109) l_0_20_109) (* l_0_20_289 l_0_20_289)) ?x85202)))
 (= ?x87048 0.0))))
(assert
 (let ((?x130905 (* l_0_20_469 l_0_20_469)))
 (let ((?x130903 (* l_0_20_433 l_0_20_433)))
 (let ((?x130901 (* l_0_20_397 l_0_20_397)))
 (let ((?x130899 (* l_0_20_361 l_0_20_361)))
 (let ((?x130897 (* l_0_20_325 l_0_20_325)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x127873 (* ?x127846 l_0_20_290)))
 (let ((?x130902 (- (- (- (+ (* (* (- 2.0) l_0_20_109) l_0_20_110) ?x127873) ?x130897) ?x130899) ?x130901)))
 (= (+ (- (- ?x130902 ?x130903) ?x130905) (* (* 2.0 l_0_20_73) l_0_20_74)) 0.0))))))))))
(assert
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x127944 (* ?x127846 l_0_20_292)))
 (let ((?x130927 (+ (+ (* (* (- 2.0) l_0_20_109) l_0_20_112) ?x127944) (* (* 2.0 l_0_20_73) l_0_20_76))))
 (= ?x130927 0.0)))))
(assert
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128039 (* ?x127846 l_0_20_299)))
 (let ((?x130931 (* l_0_20_253 l_0_20_253)))
 (let ((?x130935 (+ (+ (+ (* (* (- 2.0) l_0_20_109) l_0_20_119) ?x130931) ?x128039) (* (* 2.0 l_0_20_73) l_0_20_83))))
 (= ?x130935 0.0))))))
(assert
 (let ((?x127849 (* l_0_20_289 l_0_20_289)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128122 (* ?x127846 l_0_20_304)))
 (let ((?x125268 (* l_0_20_181 l_0_20_181)))
 (let ((?x125266 (* l_0_20_145 l_0_20_145)))
 (let ((?x130945 (- (+ (- (+ (* (* (- 2.0) l_0_20_109) l_0_20_124) ?x125266) ?x125268) ?x128122) ?x127849)))
 (= (+ ?x130945 (* (* 2.0 l_0_20_73) l_0_20_88)) 0.0))))))))
(assert
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128179 (* ?x127846 l_0_20_310)))
 (let ((?x130931 (* l_0_20_253 l_0_20_253)))
 (let ((?x130960 (+ (+ (- (* (* (- 2.0) l_0_20_109) l_0_20_130) ?x130931) ?x128179) (* (* 2.0 l_0_20_73) l_0_20_94))))
 (= ?x130960 0.0))))))
(assert
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128266 (* ?x127846 l_0_20_317)))
 (let ((?x130971 (* l_0_20_217 l_0_20_217)))
 (let ((?x130970 (- (* (* 2.0 l_0_20_101) l_0_20_73) (* (* 2.0 l_0_20_109) l_0_20_137))))
 (= (+ (- ?x130970 ?x130971) ?x128266) 0.0))))))
(assert
 (let ((?x81475 (* l_0_20_75 l_0_20_75)))
 (let ((?x103804 (* l_0_20_74 l_0_20_74)))
 (let ((?x125224 (* l_0_20_291 l_0_20_291)))
 (let ((?x125222 (* l_0_20_290 l_0_20_290)))
 (let ((?x130983 (+ (- (* (- l_0_20_110) l_0_20_110) (* l_0_20_111 l_0_20_111)) ?x125222)))
 (let ((?x130988 (- (- (+ ?x130983 ?x125224) (* (* 2.0 l_0_20_325) l_0_20_326)) (* (* 2.0 l_0_20_361) l_0_20_362))))
 (let ((?x130992 (- (- ?x130988 (* (* 2.0 l_0_20_397) l_0_20_398)) (* (* 2.0 l_0_20_433) l_0_20_434))))
 (= (+ (+ (- ?x130992 (* (* 2.0 l_0_20_469) l_0_20_470)) ?x103804) ?x81475) 0.0)))))))))
(assert
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x37524 (* ?x127878 l_0_20_293)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x105276 (* ?x127875 l_0_20_292)))
 (let ((?x43148 (- (* (* (- 2.0) l_0_20_110) l_0_20_112) (* (* 2.0 l_0_20_111) l_0_20_113))))
 (let ((?x131013 (- (- (+ (+ ?x43148 ?x105276) ?x37524) (* (* 2.0 l_0_20_325) l_0_20_328)) (* (* 2.0 l_0_20_361) l_0_20_364))))
 (let ((?x131017 (- (- ?x131013 (* (* 2.0 l_0_20_397) l_0_20_400)) (* (* 2.0 l_0_20_433) l_0_20_436))))
 (let ((?x131021 (+ (- ?x131017 (* (* 2.0 l_0_20_469) l_0_20_472)) (* (* 2.0 l_0_20_74) l_0_20_76))))
 (= (+ ?x131021 (* (* 2.0 l_0_20_75) l_0_20_77)) 0.0))))))))))
(assert
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128508 (* ?x127878 l_0_20_300)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128506 (* ?x127875 l_0_20_299)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x131049 (* ?x128036 l_0_20_254)))
 (let ((?x131048 (- (* (* (- 2.0) l_0_20_110) l_0_20_119) (* (* 2.0 l_0_20_111) l_0_20_120))))
 (let ((?x131054 (- (+ (+ (+ ?x131048 ?x131049) ?x128506) ?x128508) (* (* 2.0 l_0_20_325) l_0_20_335))))
 (let ((?x131058 (- (- ?x131054 (* (* 2.0 l_0_20_361) l_0_20_371)) (* (* 2.0 l_0_20_397) l_0_20_407))))
 (let ((?x131062 (- (- ?x131058 (* (* 2.0 l_0_20_433) l_0_20_443)) (* (* 2.0 l_0_20_469) l_0_20_479))))
 (let ((?x131066 (+ (+ ?x131062 (* (* 2.0 l_0_20_74) l_0_20_83)) (* (* 2.0 l_0_20_75) l_0_20_84))))
 (= ?x131066 0.0)))))))))))))
(assert
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128641 (* ?x127878 l_0_20_305)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128638 (* ?x127875 l_0_20_304)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x127873 (* ?x127846 l_0_20_290)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125307 (* ?x125306 l_0_20_182)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125304 (* ?x125303 l_0_20_146)))
 (let ((?x107804 (- (* (* (- 2.0) l_0_20_110) l_0_20_124) (* (* 2.0 l_0_20_111) l_0_20_125))))
 (let ((?x131086 (- (+ (+ (- (- (+ ?x107804 ?x125304) ?x125307) ?x127873) ?x128638) ?x128641) (* (* 2.0 l_0_20_325) l_0_20_340))))
 (let ((?x131090 (- (- ?x131086 (* (* 2.0 l_0_20_361) l_0_20_376)) (* (* 2.0 l_0_20_397) l_0_20_412))))
 (let ((?x131094 (- (- ?x131090 (* (* 2.0 l_0_20_433) l_0_20_448)) (* (* 2.0 l_0_20_469) l_0_20_484))))
 (let ((?x131098 (+ (+ ?x131094 (* (* 2.0 l_0_20_74) l_0_20_88)) (* (* 2.0 l_0_20_75) l_0_20_89))))
 (= ?x131098 0.0)))))))))))))))))
(assert
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128718 (* ?x127878 l_0_20_311)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128716 (* ?x127875 l_0_20_310)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x131049 (* ?x128036 l_0_20_254)))
 (let ((?x131127 (- (* (* (- 2.0) l_0_20_110) l_0_20_130) (* (* 2.0 l_0_20_111) l_0_20_131))))
 (let ((?x131132 (- (+ (+ (- ?x131127 ?x131049) ?x128716) ?x128718) (* (* 2.0 l_0_20_325) l_0_20_346))))
 (let ((?x131136 (- (- ?x131132 (* (* 2.0 l_0_20_361) l_0_20_382)) (* (* 2.0 l_0_20_397) l_0_20_418))))
 (let ((?x131140 (- (- ?x131136 (* (* 2.0 l_0_20_433) l_0_20_454)) (* (* 2.0 l_0_20_469) l_0_20_490))))
 (let ((?x131144 (+ (+ ?x131140 (* (* 2.0 l_0_20_74) l_0_20_94)) (* (* 2.0 l_0_20_75) l_0_20_95))))
 (= ?x131144 0.0)))))))))))))
(assert
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128819 (* ?x127878 l_0_20_318)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128817 (* ?x127875 l_0_20_317)))
 (let ((?x131156 (+ (* (* 2.0 l_0_20_101) l_0_20_74) (* (* 2.0 l_0_20_102) l_0_20_75))))
 (let ((?x131160 (- (- ?x131156 (* (* 2.0 l_0_20_110) l_0_20_137)) (* (* 2.0 l_0_20_111) l_0_20_138))))
 (let ((?x131166 (- (+ (+ (- ?x131160 (* (* 2.0 l_0_20_217) l_0_20_218)) ?x128817) ?x128819) (* (* 2.0 l_0_20_325) l_0_20_353))))
 (let ((?x131170 (- (- ?x131166 (* (* 2.0 l_0_20_361) l_0_20_389)) (* (* 2.0 l_0_20_397) l_0_20_425))))
 (let ((?x131174 (- (- ?x131170 (* (* 2.0 l_0_20_433) l_0_20_461)) (* (* 2.0 l_0_20_469) l_0_20_497))))
 (= ?x131174 0.0)))))))))))
(assert
 (let ((?x35791 (* l_0_20_78 l_0_20_78)))
 (let ((?x61463 (* l_0_20_77 l_0_20_77)))
 (let ((?x126228 (* l_0_20_76 l_0_20_76)))
 (let ((?x83528 (* l_0_20_294 l_0_20_294)))
 (let ((?x105974 (* l_0_20_293 l_0_20_293)))
 (let ((?x83526 (* l_0_20_292 l_0_20_292)))
 (let ((?x126142 (* l_0_20_114 l_0_20_114)))
 (let ((?x131195 (- (- (* (- l_0_20_112) l_0_20_112) (* l_0_20_113 l_0_20_113)) ?x126142)))
 (= (+ (+ (+ (+ (+ (+ ?x131195 ?x83526) ?x105974) ?x83528) ?x126228) ?x61463) ?x35791) 0.0))))))))))
(assert
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x128911 (* ?x125318 l_0_20_301)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x128909 (* ?x125315 l_0_20_300)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x128907 (* ?x125312 l_0_20_299)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x131212 (* ?x128036 l_0_20_256)))
 (let ((?x131209 (- (* (* (- 2.0) l_0_20_112) l_0_20_119) (* (* 2.0 l_0_20_113) l_0_20_120))))
 (let ((?x131215 (+ (+ (+ (- ?x131209 (* (* 2.0 l_0_20_114) l_0_20_121)) ?x131212) ?x128907) ?x128909)))
 (let ((?x131220 (+ (+ (+ ?x131215 ?x128911) (* (* 2.0 l_0_20_76) l_0_20_83)) (* (* 2.0 l_0_20_77) l_0_20_84))))
 (= (+ ?x131220 (* (* 2.0 l_0_20_78) l_0_20_85)) 0.0)))))))))))))
(assert
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x128939 (* ?x125318 l_0_20_306)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x128936 (* ?x125315 l_0_20_305)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x128933 (* ?x125312 l_0_20_304)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x127944 (* ?x127846 l_0_20_292)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125351 (* ?x125306 l_0_20_184)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125347 (* ?x125303 l_0_20_148)))
 (let ((?x131238 (- (* (* (- 2.0) l_0_20_112) l_0_20_124) (* (* 2.0 l_0_20_113) l_0_20_125))))
 (let ((?x131243 (- (- (+ (- ?x131238 (* (* 2.0 l_0_20_114) l_0_20_126)) ?x125347) ?x125351) ?x127944)))
 (let ((?x131248 (+ (+ (+ (+ ?x131243 ?x128933) ?x128936) ?x128939) (* (* 2.0 l_0_20_76) l_0_20_88))))
 (let ((?x131252 (+ (+ ?x131248 (* (* 2.0 l_0_20_77) l_0_20_89)) (* (* 2.0 l_0_20_78) l_0_20_90))))
 (= ?x131252 0.0))))))))))))))))))
(assert
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x128958 (* ?x125318 l_0_20_312)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x83519 (* ?x125315 l_0_20_311)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x62908 (* ?x125312 l_0_20_310)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x131212 (* ?x128036 l_0_20_256)))
 (let ((?x108016 (- (* (* (- 2.0) l_0_20_112) l_0_20_130) (* (* 2.0 l_0_20_113) l_0_20_131))))
 (let ((?x131265 (+ (+ (- (- ?x108016 (* (* 2.0 l_0_20_114) l_0_20_132)) ?x131212) ?x62908) ?x83519)))
 (let ((?x131270 (+ (+ (+ ?x131265 ?x128958) (* (* 2.0 l_0_20_76) l_0_20_94)) (* (* 2.0 l_0_20_77) l_0_20_95))))
 (= (+ ?x131270 (* (* 2.0 l_0_20_78) l_0_20_96)) 0.0)))))))))))))
(assert
 (let ((?x130282 (* l_0_20_87 l_0_20_87)))
 (let ((?x107612 (* l_0_20_86 l_0_20_86)))
 (let ((?x86165 (* l_0_20_85 l_0_20_85)))
 (let ((?x86239 (* l_0_20_84 l_0_20_84)))
 (let ((?x86235 (* l_0_20_83 l_0_20_83)))
 (let ((?x129051 (* l_0_20_303 l_0_20_303)))
 (let ((?x129049 (* l_0_20_302 l_0_20_302)))
 (let ((?x129047 (* l_0_20_301 l_0_20_301)))
 (let ((?x129045 (* l_0_20_300 l_0_20_300)))
 (let ((?x129043 (* l_0_20_299 l_0_20_299)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x131290 (* ?x128036 l_0_20_263)))
 (let ((?x130244 (* l_0_20_123 l_0_20_123)))
 (let ((?x130241 (* l_0_20_122 l_0_20_122)))
 (let ((?x130238 (* l_0_20_121 l_0_20_121)))
 (let ((?x131287 (- (- (* (- l_0_20_119) l_0_20_119) (* l_0_20_120 l_0_20_120)) ?x130238)))
 (let ((?x131295 (+ (+ (+ (+ (+ (- (- ?x131287 ?x130241) ?x130244) ?x131290) ?x129043) ?x129045) ?x129047) ?x129049)))
 (= (+ (+ (+ (+ (+ (+ ?x131295 ?x129051) ?x86235) ?x86239) ?x86165) ?x107612) ?x130282) 0.0)))))))))))))))))))
(assert
 (let ((?x129086 (* 2.0 l_0_20_303)))
 (let ((?x129087 (* ?x129086 l_0_20_308)))
 (let ((?x129083 (* 2.0 l_0_20_302)))
 (let ((?x129084 (* ?x129083 l_0_20_307)))
 (let ((?x129080 (* 2.0 l_0_20_301)))
 (let ((?x129081 (* ?x129080 l_0_20_306)))
 (let ((?x129077 (* 2.0 l_0_20_300)))
 (let ((?x129078 (* ?x129077 l_0_20_305)))
 (let ((?x129074 (* 2.0 l_0_20_299)))
 (let ((?x129075 (* ?x129074 l_0_20_304)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128039 (* ?x127846 l_0_20_299)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x131322 (* ?x128036 l_0_20_268)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125388 (* ?x125306 l_0_20_191)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125381 (* ?x125303 l_0_20_155)))
 (let ((?x131310 (- (* (* (- 2.0) l_0_20_119) l_0_20_124) (* (* 2.0 l_0_20_120) l_0_20_125))))
 (let ((?x131316 (- (- ?x131310 (* (* 2.0 l_0_20_121) l_0_20_126)) (* (* 2.0 l_0_20_122) l_0_20_127))))
 (let ((?x131323 (+ (- (+ (- ?x131316 (* (* 2.0 l_0_20_123) l_0_20_128)) ?x125381) ?x125388) ?x131322)))
 (let ((?x131332 (+ (+ (+ (+ (+ (+ (- ?x131323 ?x128039) ?x129075) ?x129078) ?x129081) ?x129084) ?x129087) (* (* 2.0 l_0_20_83) l_0_20_88))))
 (let ((?x131338 (+ (+ ?x131332 (* (* 2.0 l_0_20_84) l_0_20_89)) (* (* 2.0 l_0_20_85) l_0_20_90))))
 (let ((?x131344 (+ (+ ?x131338 (* (* 2.0 l_0_20_86) l_0_20_91)) (* (* 2.0 l_0_20_87) l_0_20_92))))
 (= ?x131344 0.0))))))))))))))))))))))))))
(assert
 (let ((?x129086 (* 2.0 l_0_20_303)))
 (let ((?x129115 (* ?x129086 l_0_20_314)))
 (let ((?x129083 (* 2.0 l_0_20_302)))
 (let ((?x129113 (* ?x129083 l_0_20_313)))
 (let ((?x129080 (* 2.0 l_0_20_301)))
 (let ((?x129111 (* ?x129080 l_0_20_312)))
 (let ((?x129077 (* 2.0 l_0_20_300)))
 (let ((?x129109 (* ?x129077 l_0_20_311)))
 (let ((?x129074 (* 2.0 l_0_20_299)))
 (let ((?x129107 (* ?x129074 l_0_20_310)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x108081 (* ?x128036 l_0_20_274)))
 (let ((?x131290 (* ?x128036 l_0_20_263)))
 (let ((?x87485 (- (* (* (- 2.0) l_0_20_119) l_0_20_130) (* (* 2.0 l_0_20_120) l_0_20_131))))
 (let ((?x43890 (- (- ?x87485 (* (* 2.0 l_0_20_121) l_0_20_132)) (* (* 2.0 l_0_20_122) l_0_20_133))))
 (let ((?x131358 (+ (+ (- (- ?x43890 (* (* 2.0 l_0_20_123) l_0_20_134)) ?x131290) ?x108081) ?x129107)))
 (let ((?x131364 (+ (+ (+ (+ (+ ?x131358 ?x129109) ?x129111) ?x129113) ?x129115) (* (* 2.0 l_0_20_83) l_0_20_94))))
 (let ((?x131368 (+ (+ ?x131364 (* (* 2.0 l_0_20_84) l_0_20_95)) (* (* 2.0 l_0_20_85) l_0_20_96))))
 (let ((?x131372 (+ (+ ?x131368 (* (* 2.0 l_0_20_86) l_0_20_97)) (* (* 2.0 l_0_20_87) l_0_20_98))))
 (= ?x131372 0.0)))))))))))))))))))))
(assert
 (let ((?x129086 (* 2.0 l_0_20_303)))
 (let ((?x129183 (* ?x129086 l_0_20_321)))
 (let ((?x129083 (* 2.0 l_0_20_302)))
 (let ((?x129181 (* ?x129083 l_0_20_320)))
 (let ((?x129080 (* 2.0 l_0_20_301)))
 (let ((?x129179 (* ?x129080 l_0_20_319)))
 (let ((?x129077 (* 2.0 l_0_20_300)))
 (let ((?x129177 (* ?x129077 l_0_20_318)))
 (let ((?x129074 (* 2.0 l_0_20_299)))
 (let ((?x129175 (* ?x129074 l_0_20_317)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x129559 (* ?x128036 l_0_20_281)))
 (let ((?x64961 (+ (* (* 2.0 l_0_20_101) l_0_20_83) (* (* 2.0 l_0_20_102) l_0_20_84))))
 (let ((?x108139 (+ (+ ?x64961 (* (* 2.0 l_0_20_103) l_0_20_85)) (* (* 2.0 l_0_20_104) l_0_20_86))))
 (let ((?x131381 (- (+ ?x108139 (* (* 2.0 l_0_20_105) l_0_20_87)) (* (* 2.0 l_0_20_119) l_0_20_137))))
 (let ((?x131385 (- (- ?x131381 (* (* 2.0 l_0_20_120) l_0_20_138)) (* (* 2.0 l_0_20_121) l_0_20_139))))
 (let ((?x131389 (- (- ?x131385 (* (* 2.0 l_0_20_122) l_0_20_140)) (* (* 2.0 l_0_20_123) l_0_20_141))))
 (let ((?x131394 (+ (+ (+ (- ?x131389 (* (* 2.0 l_0_20_217) l_0_20_227)) ?x129559) ?x129175) ?x129177)))
 (= (+ (+ (+ ?x131394 ?x129179) ?x129181) ?x129183) 0.0))))))))))))))))))))
(assert
 (let ((?x86616 (* l_0_20_93 l_0_20_93)))
 (let ((?x86506 (* l_0_20_92 l_0_20_92)))
 (let ((?x42430 (* l_0_20_91 l_0_20_91)))
 (let ((?x86536 (* l_0_20_90 l_0_20_90)))
 (let ((?x42367 (* l_0_20_89 l_0_20_89)))
 (let ((?x86529 (* l_0_20_88 l_0_20_88)))
 (let ((?x129254 (* l_0_20_309 l_0_20_309)))
 (let ((?x129252 (* l_0_20_308 l_0_20_308)))
 (let ((?x129250 (* l_0_20_307 l_0_20_307)))
 (let ((?x129248 (* l_0_20_306 l_0_20_306)))
 (let ((?x129246 (* l_0_20_305 l_0_20_305)))
 (let ((?x129244 (* l_0_20_304 l_0_20_304)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128122 (* ?x127846 l_0_20_304)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125411 (* ?x125306 l_0_20_196)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125404 (* ?x125303 l_0_20_160)))
 (let ((?x130467 (* l_0_20_129 l_0_20_129)))
 (let ((?x130464 (* l_0_20_128 l_0_20_128)))
 (let ((?x130461 (* l_0_20_127 l_0_20_127)))
 (let ((?x130458 (* l_0_20_126 l_0_20_126)))
 (let ((?x131438 (- (- (* (- l_0_20_124) l_0_20_124) (* l_0_20_125 l_0_20_125)) ?x130458)))
 (let ((?x131445 (+ (- (- (+ (- (- (- ?x131438 ?x130461) ?x130464) ?x130467) ?x125404) ?x125411) ?x128122) ?x129244)))
 (let ((?x131452 (+ (+ (+ (+ (+ (+ (+ ?x131445 ?x129246) ?x129248) ?x129250) ?x129252) ?x129254) ?x86529) ?x42367)))
 (= (+ (+ (+ (+ ?x131452 ?x86536) ?x42430) ?x86506) ?x86616) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x129286 (* 2.0 l_0_20_309)))
 (let ((?x129287 (* ?x129286 l_0_20_315)))
 (let ((?x129283 (* 2.0 l_0_20_308)))
 (let ((?x129284 (* ?x129283 l_0_20_314)))
 (let ((?x129280 (* 2.0 l_0_20_307)))
 (let ((?x129281 (* ?x129280 l_0_20_313)))
 (let ((?x129277 (* 2.0 l_0_20_306)))
 (let ((?x129278 (* ?x129277 l_0_20_312)))
 (let ((?x129274 (* 2.0 l_0_20_305)))
 (let ((?x129275 (* ?x129274 l_0_20_311)))
 (let ((?x129271 (* 2.0 l_0_20_304)))
 (let ((?x129272 (* ?x129271 l_0_20_310)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128179 (* ?x127846 l_0_20_310)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x131322 (* ?x128036 l_0_20_268)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125433 (* ?x125306 l_0_20_202)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125431 (* ?x125303 l_0_20_166)))
 (let ((?x64962 (- (* (* (- 2.0) l_0_20_124) l_0_20_130) (* (* 2.0 l_0_20_125) l_0_20_131))))
 (let ((?x131469 (- (- ?x64962 (* (* 2.0 l_0_20_126) l_0_20_132)) (* (* 2.0 l_0_20_127) l_0_20_133))))
 (let ((?x131475 (- (- ?x131469 (* (* 2.0 l_0_20_128) l_0_20_134)) (* (* 2.0 l_0_20_129) l_0_20_135))))
 (let ((?x131482 (+ (+ (+ (- (- (- (+ ?x131475 ?x125431) ?x125433) ?x131322) ?x128179) ?x129272) ?x129275) ?x129278)))
 (let ((?x131488 (+ (+ (+ (+ ?x131482 ?x129281) ?x129284) ?x129287) (* (* 2.0 l_0_20_88) l_0_20_94))))
 (let ((?x131494 (+ (+ ?x131488 (* (* 2.0 l_0_20_89) l_0_20_95)) (* (* 2.0 l_0_20_90) l_0_20_96))))
 (let ((?x131500 (+ (+ ?x131494 (* (* 2.0 l_0_20_91) l_0_20_97)) (* (* 2.0 l_0_20_92) l_0_20_98))))
 (= (+ ?x131500 (* (* 2.0 l_0_20_93) l_0_20_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x129286 (* 2.0 l_0_20_309)))
 (let ((?x129343 (* ?x129286 l_0_20_322)))
 (let ((?x129283 (* 2.0 l_0_20_308)))
 (let ((?x129341 (* ?x129283 l_0_20_321)))
 (let ((?x129280 (* 2.0 l_0_20_307)))
 (let ((?x129339 (* ?x129280 l_0_20_320)))
 (let ((?x129277 (* 2.0 l_0_20_306)))
 (let ((?x129337 (* ?x129277 l_0_20_319)))
 (let ((?x129274 (* 2.0 l_0_20_305)))
 (let ((?x129335 (* ?x129274 l_0_20_318)))
 (let ((?x129271 (* 2.0 l_0_20_304)))
 (let ((?x129333 (* ?x129271 l_0_20_317)))
 (let ((?x127846 (* 2.0 l_0_20_289)))
 (let ((?x128266 (* ?x127846 l_0_20_317)))
 (let ((?x125306 (* 2.0 l_0_20_181)))
 (let ((?x125462 (* ?x125306 l_0_20_209)))
 (let ((?x125303 (* 2.0 l_0_20_145)))
 (let ((?x125460 (* ?x125303 l_0_20_173)))
 (let ((?x108284 (+ (* (* 2.0 l_0_20_101) l_0_20_88) (* (* 2.0 l_0_20_102) l_0_20_89))))
 (let ((?x87614 (+ (+ ?x108284 (* (* 2.0 l_0_20_103) l_0_20_90)) (* (* 2.0 l_0_20_104) l_0_20_91))))
 (let ((?x131539 (+ (+ ?x87614 (* (* 2.0 l_0_20_105) l_0_20_92)) (* (* 2.0 l_0_20_106) l_0_20_93))))
 (let ((?x131544 (- (- ?x131539 (* (* 2.0 l_0_20_124) l_0_20_137)) (* (* 2.0 l_0_20_125) l_0_20_138))))
 (let ((?x131548 (- (- ?x131544 (* (* 2.0 l_0_20_126) l_0_20_139)) (* (* 2.0 l_0_20_127) l_0_20_140))))
 (let ((?x131552 (- (- ?x131548 (* (* 2.0 l_0_20_128) l_0_20_141)) (* (* 2.0 l_0_20_129) l_0_20_142))))
 (let ((?x131557 (- (- (- (+ ?x131552 ?x125460) ?x125462) (* (* 2.0 l_0_20_217) l_0_20_232)) ?x128266)))
 (= (+ (+ (+ (+ (+ (+ ?x131557 ?x129333) ?x129335) ?x129337) ?x129339) ?x129341) ?x129343) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x107691 (* l_0_20_99 l_0_20_99)))
 (let ((?x107689 (* l_0_20_98 l_0_20_98)))
 (let ((?x107687 (* l_0_20_97 l_0_20_97)))
 (let ((?x86755 (* l_0_20_96 l_0_20_96)))
 (let ((?x86889 (* l_0_20_95 l_0_20_95)))
 (let ((?x64509 (* l_0_20_94 l_0_20_94)))
 (let ((?x129391 (* l_0_20_316 l_0_20_316)))
 (let ((?x129389 (* l_0_20_315 l_0_20_315)))
 (let ((?x129387 (* l_0_20_314 l_0_20_314)))
 (let ((?x129385 (* l_0_20_313 l_0_20_313)))
 (let ((?x129383 (* l_0_20_312 l_0_20_312)))
 (let ((?x129381 (* l_0_20_311 l_0_20_311)))
 (let ((?x129379 (* l_0_20_310 l_0_20_310)))
 (let ((?x128036 (* 2.0 l_0_20_253)))
 (let ((?x108081 (* ?x128036 l_0_20_274)))
 (let ((?x130663 (* l_0_20_136 l_0_20_136)))
 (let ((?x130660 (* l_0_20_135 l_0_20_135)))
 (let ((?x130657 (* l_0_20_134 l_0_20_134)))
 (let ((?x130654 (* l_0_20_133 l_0_20_133)))
 (let ((?x130651 (* l_0_20_132 l_0_20_132)))
 (let ((?x130648 (* l_0_20_131 l_0_20_131)))
 (let ((?x65118 (- (- (* l_0_20_100 l_0_20_100) (* l_0_20_130 l_0_20_130)) ?x130648)))
 (let ((?x131592 (+ (- (- (- (- (- (- ?x65118 ?x130651) ?x130654) ?x130657) ?x130660) ?x130663) ?x108081) ?x129379)))
 (let ((?x131599 (+ (+ (+ (+ (+ (+ (+ ?x131592 ?x129381) ?x129383) ?x129385) ?x129387) ?x129389) ?x129391) ?x64509)))
 (= (+ (+ (+ (+ (+ ?x131599 ?x86889) ?x86755) ?x107687) ?x107689) ?x107691) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x129489 (* l_0_20_324 l_0_20_324)))
 (let ((?x129487 (* l_0_20_323 l_0_20_323)))
 (let ((?x129485 (* l_0_20_322 l_0_20_322)))
 (let ((?x129483 (* l_0_20_321 l_0_20_321)))
 (let ((?x129481 (* l_0_20_320 l_0_20_320)))
 (let ((?x129478 (* l_0_20_319 l_0_20_319)))
 (let ((?x129476 (* l_0_20_318 l_0_20_318)))
 (let ((?x129474 (* l_0_20_317 l_0_20_317)))
 (let ((?x130847 (* l_0_20_144 l_0_20_144)))
 (let ((?x130844 (* l_0_20_143 l_0_20_143)))
 (let ((?x130841 (* l_0_20_142 l_0_20_142)))
 (let ((?x130838 (* l_0_20_141 l_0_20_141)))
 (let ((?x130835 (* l_0_20_140 l_0_20_140)))
 (let ((?x130832 (* l_0_20_139 l_0_20_139)))
 (let ((?x130829 (* l_0_20_138 l_0_20_138)))
 (let ((?x130826 (* l_0_20_137 l_0_20_137)))
 (let ((?x42818 (* l_0_20_108 l_0_20_108)))
 (let ((?x107695 (* l_0_20_107 l_0_20_107)))
 (let ((?x130877 (* l_0_20_106 l_0_20_106)))
 (let ((?x86933 (* l_0_20_105 l_0_20_105)))
 (let ((?x86931 (* l_0_20_104 l_0_20_104)))
 (let ((?x86925 (* l_0_20_103 l_0_20_103)))
 (let ((?x65252 (+ (+ (* l_0_20_101 l_0_20_101) (* l_0_20_102 l_0_20_102)) ?x86925)))
 (let ((?x131617 (- (- (+ (+ (+ (+ (+ ?x65252 ?x86931) ?x86933) ?x130877) ?x107695) ?x42818) ?x130826) ?x130829)))
 (let ((?x131625 (- (- (- (- (- (- (- ?x131617 ?x130832) ?x130835) ?x130838) ?x130841) ?x130844) ?x130847) (* (* 2.0 l_0_20_217) l_0_20_245))))
 (let ((?x131632 (+ (+ (+ (+ (+ (+ (+ ?x131625 ?x129474) ?x129476) ?x129478) ?x129481) ?x129483) ?x129485) ?x129487)))
 (= (+ ?x131632 ?x129489) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x37524 (* ?x127878 l_0_20_293)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x105276 (* ?x127875 l_0_20_292)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125486 (* ?x125485 l_0_20_185)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125483 (* ?x125482 l_0_20_184)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125480 (* ?x125479 l_0_20_149)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x125801 (* ?x125623 l_0_20_148)))
 (let ((?x108555 (- (- (- (- (- (+ ?x125801 ?x125480) ?x125483) ?x125486) ?x105276) ?x37524) (* (* 2.0 l_0_20_328) l_0_20_340))))
 (let ((?x131660 (- (- ?x108555 (* (* 2.0 l_0_20_329) l_0_20_341)) (* (* 2.0 l_0_20_330) l_0_20_342))))
 (let ((?x131664 (- (- ?x131660 (* (* 2.0 l_0_20_364) l_0_20_376)) (* (* 2.0 l_0_20_365) l_0_20_377))))
 (let ((?x131668 (- (- ?x131664 (* (* 2.0 l_0_20_366) l_0_20_378)) (* (* 2.0 l_0_20_400) l_0_20_412))))
 (let ((?x131672 (- (- ?x131668 (* (* 2.0 l_0_20_401) l_0_20_413)) (* (* 2.0 l_0_20_402) l_0_20_414))))
 (let ((?x131676 (- (- ?x131672 (* (* 2.0 l_0_20_436) l_0_20_448)) (* (* 2.0 l_0_20_437) l_0_20_449))))
 (let ((?x131680 (- (- ?x131676 (* (* 2.0 l_0_20_438) l_0_20_450)) (* (* 2.0 l_0_20_472) l_0_20_484))))
 (let ((?x131684 (- (- ?x131680 (* (* 2.0 l_0_20_473) l_0_20_485)) (* (* 2.0 l_0_20_474) l_0_20_486))))
 (= ?x131684 0.0))))))))))))))))))))))
(assert
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128508 (* ?x127878 l_0_20_300)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128506 (* ?x127875 l_0_20_299)))
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x108564 (* ?x124920 l_0_20_269)))
 (let ((?x124917 (* 2.0 l_0_20_254)))
 (let ((?x108554 (* ?x124917 l_0_20_268)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125630 (* ?x125485 l_0_20_192)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125628 (* ?x125482 l_0_20_191)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125626 (* ?x125479 l_0_20_156)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x125624 (* ?x125623 l_0_20_155)))
 (let ((?x108576 (- (- (+ (+ (- (- (+ ?x125624 ?x125626) ?x125628) ?x125630) ?x108554) ?x108564) ?x128506) ?x128508)))
 (let ((?x87788 (- (- ?x108576 (* (* 2.0 l_0_20_335) l_0_20_340)) (* (* 2.0 l_0_20_336) l_0_20_341))))
 (let ((?x131736 (- (- ?x87788 (* (* 2.0 l_0_20_337) l_0_20_342)) (* (* 2.0 l_0_20_338) l_0_20_343))))
 (let ((?x131742 (- (- ?x131736 (* (* 2.0 l_0_20_339) l_0_20_344)) (* (* 2.0 l_0_20_371) l_0_20_376))))
 (let ((?x131748 (- (- ?x131742 (* (* 2.0 l_0_20_372) l_0_20_377)) (* (* 2.0 l_0_20_373) l_0_20_378))))
 (let ((?x131754 (- (- ?x131748 (* (* 2.0 l_0_20_374) l_0_20_379)) (* (* 2.0 l_0_20_375) l_0_20_380))))
 (let ((?x131760 (- (- ?x131754 (* (* 2.0 l_0_20_407) l_0_20_412)) (* (* 2.0 l_0_20_408) l_0_20_413))))
 (let ((?x131766 (- (- ?x131760 (* (* 2.0 l_0_20_409) l_0_20_414)) (* (* 2.0 l_0_20_410) l_0_20_415))))
 (let ((?x131772 (- (- ?x131766 (* (* 2.0 l_0_20_411) l_0_20_416)) (* (* 2.0 l_0_20_443) l_0_20_448))))
 (let ((?x131778 (- (- ?x131772 (* (* 2.0 l_0_20_444) l_0_20_449)) (* (* 2.0 l_0_20_445) l_0_20_450))))
 (let ((?x131784 (- (- ?x131778 (* (* 2.0 l_0_20_446) l_0_20_451)) (* (* 2.0 l_0_20_447) l_0_20_452))))
 (let ((?x131790 (- (- ?x131784 (* (* 2.0 l_0_20_479) l_0_20_484)) (* (* 2.0 l_0_20_480) l_0_20_485))))
 (let ((?x131796 (- (- ?x131790 (* (* 2.0 l_0_20_481) l_0_20_486)) (* (* 2.0 l_0_20_482) l_0_20_487))))
 (= (- ?x131796 (* (* 2.0 l_0_20_483) l_0_20_488)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x131914 (* l_0_20_489 l_0_20_489)))
 (let ((?x131912 (* l_0_20_488 l_0_20_488)))
 (let ((?x131910 (* l_0_20_487 l_0_20_487)))
 (let ((?x131908 (* l_0_20_486 l_0_20_486)))
 (let ((?x131906 (* l_0_20_485 l_0_20_485)))
 (let ((?x131904 (* l_0_20_484 l_0_20_484)))
 (let ((?x131902 (* l_0_20_453 l_0_20_453)))
 (let ((?x131900 (* l_0_20_452 l_0_20_452)))
 (let ((?x131898 (* l_0_20_451 l_0_20_451)))
 (let ((?x131896 (* l_0_20_450 l_0_20_450)))
 (let ((?x131894 (* l_0_20_449 l_0_20_449)))
 (let ((?x131892 (* l_0_20_448 l_0_20_448)))
 (let ((?x131890 (* l_0_20_417 l_0_20_417)))
 (let ((?x131888 (* l_0_20_416 l_0_20_416)))
 (let ((?x131886 (* l_0_20_415 l_0_20_415)))
 (let ((?x131884 (* l_0_20_414 l_0_20_414)))
 (let ((?x131882 (* l_0_20_413 l_0_20_413)))
 (let ((?x131880 (* l_0_20_412 l_0_20_412)))
 (let ((?x131878 (* l_0_20_381 l_0_20_381)))
 (let ((?x131876 (* l_0_20_380 l_0_20_380)))
 (let ((?x131874 (* l_0_20_379 l_0_20_379)))
 (let ((?x131872 (* l_0_20_378 l_0_20_378)))
 (let ((?x131870 (* l_0_20_377 l_0_20_377)))
 (let ((?x131868 (* l_0_20_376 l_0_20_376)))
 (let ((?x131866 (* l_0_20_345 l_0_20_345)))
 (let ((?x131864 (* l_0_20_344 l_0_20_344)))
 (let ((?x131862 (* l_0_20_343 l_0_20_343)))
 (let ((?x131860 (* l_0_20_342 l_0_20_342)))
 (let ((?x131858 (* l_0_20_341 l_0_20_341)))
 (let ((?x131856 (* l_0_20_340 l_0_20_340)))
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128641 (* ?x127878 l_0_20_305)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128638 (* ?x127875 l_0_20_304)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125710 (* ?x125485 l_0_20_197)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125708 (* ?x125482 l_0_20_196)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x81850 (* ?x125479 l_0_20_161)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x129792 (* ?x125623 l_0_20_160)))
 (let ((?x131859 (- (- (- (- (- (- (+ ?x129792 ?x81850) ?x125708) ?x125710) ?x128638) ?x128641) ?x131856) ?x131858)))
 (let ((?x131873 (- (- (- (- (- (- (- ?x131859 ?x131860) ?x131862) ?x131864) ?x131866) ?x131868) ?x131870) ?x131872)))
 (let ((?x131887 (- (- (- (- (- (- (- ?x131873 ?x131874) ?x131876) ?x131878) ?x131880) ?x131882) ?x131884) ?x131886)))
 (let ((?x131901 (- (- (- (- (- (- (- ?x131887 ?x131888) ?x131890) ?x131892) ?x131894) ?x131896) ?x131898) ?x131900)))
 (let ((?x131915 (- (- (- (- (- (- (- ?x131901 ?x131902) ?x131904) ?x131906) ?x131908) ?x131910) ?x131912) ?x131914)))
 (= ?x131915 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128718 (* ?x127878 l_0_20_311)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128716 (* ?x127875 l_0_20_310)))
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x108564 (* ?x124920 l_0_20_269)))
 (let ((?x124917 (* 2.0 l_0_20_254)))
 (let ((?x108554 (* ?x124917 l_0_20_268)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125810 (* ?x125485 l_0_20_203)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125808 (* ?x125482 l_0_20_202)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125806 (* ?x125479 l_0_20_167)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x125803 (* ?x125623 l_0_20_166)))
 (let ((?x131952 (- (- (- (- (- (- (+ ?x125803 ?x125806) ?x125808) ?x125810) ?x108554) ?x108564) ?x128716) ?x128718)))
 (let ((?x131958 (- (- ?x131952 (* (* 2.0 l_0_20_340) l_0_20_346)) (* (* 2.0 l_0_20_341) l_0_20_347))))
 (let ((?x131964 (- (- ?x131958 (* (* 2.0 l_0_20_342) l_0_20_348)) (* (* 2.0 l_0_20_343) l_0_20_349))))
 (let ((?x131970 (- (- ?x131964 (* (* 2.0 l_0_20_344) l_0_20_350)) (* (* 2.0 l_0_20_345) l_0_20_351))))
 (let ((?x131976 (- (- ?x131970 (* (* 2.0 l_0_20_376) l_0_20_382)) (* (* 2.0 l_0_20_377) l_0_20_383))))
 (let ((?x131982 (- (- ?x131976 (* (* 2.0 l_0_20_378) l_0_20_384)) (* (* 2.0 l_0_20_379) l_0_20_385))))
 (let ((?x131988 (- (- ?x131982 (* (* 2.0 l_0_20_380) l_0_20_386)) (* (* 2.0 l_0_20_381) l_0_20_387))))
 (let ((?x131994 (- (- ?x131988 (* (* 2.0 l_0_20_412) l_0_20_418)) (* (* 2.0 l_0_20_413) l_0_20_419))))
 (let ((?x132000 (- (- ?x131994 (* (* 2.0 l_0_20_414) l_0_20_420)) (* (* 2.0 l_0_20_415) l_0_20_421))))
 (let ((?x132006 (- (- ?x132000 (* (* 2.0 l_0_20_416) l_0_20_422)) (* (* 2.0 l_0_20_417) l_0_20_423))))
 (let ((?x132012 (- (- ?x132006 (* (* 2.0 l_0_20_448) l_0_20_454)) (* (* 2.0 l_0_20_449) l_0_20_455))))
 (let ((?x132018 (- (- ?x132012 (* (* 2.0 l_0_20_450) l_0_20_456)) (* (* 2.0 l_0_20_451) l_0_20_457))))
 (let ((?x132024 (- (- ?x132018 (* (* 2.0 l_0_20_452) l_0_20_458)) (* (* 2.0 l_0_20_453) l_0_20_459))))
 (let ((?x132030 (- (- ?x132024 (* (* 2.0 l_0_20_484) l_0_20_490)) (* (* 2.0 l_0_20_485) l_0_20_491))))
 (let ((?x132036 (- (- ?x132030 (* (* 2.0 l_0_20_486) l_0_20_492)) (* (* 2.0 l_0_20_487) l_0_20_493))))
 (let ((?x132042 (- (- ?x132036 (* (* 2.0 l_0_20_488) l_0_20_494)) (* (* 2.0 l_0_20_489) l_0_20_495))))
 (= ?x132042 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x127878 (* 2.0 l_0_20_291)))
 (let ((?x128819 (* ?x127878 l_0_20_318)))
 (let ((?x127875 (* 2.0 l_0_20_290)))
 (let ((?x128817 (* ?x127875 l_0_20_317)))
 (let ((?x125485 (* 2.0 l_0_20_183)))
 (let ((?x125885 (* ?x125485 l_0_20_210)))
 (let ((?x125482 (* 2.0 l_0_20_182)))
 (let ((?x125883 (* ?x125482 l_0_20_209)))
 (let ((?x125479 (* 2.0 l_0_20_147)))
 (let ((?x125881 (* ?x125479 l_0_20_174)))
 (let ((?x125623 (* 2.0 l_0_20_146)))
 (let ((?x129964 (* ?x125623 l_0_20_173)))
 (let ((?x132097 (- (- (- (+ ?x129964 ?x125881) ?x125883) ?x125885) (* (* 2.0 l_0_20_218) l_0_20_232))))
 (let ((?x132103 (- (- (- (- ?x132097 (* (* 2.0 l_0_20_219) l_0_20_233)) ?x128817) ?x128819) (* (* 2.0 l_0_20_340) l_0_20_353))))
 (let ((?x132107 (- (- ?x132103 (* (* 2.0 l_0_20_341) l_0_20_354)) (* (* 2.0 l_0_20_342) l_0_20_355))))
 (let ((?x132111 (- (- ?x132107 (* (* 2.0 l_0_20_343) l_0_20_356)) (* (* 2.0 l_0_20_344) l_0_20_357))))
 (let ((?x132115 (- (- ?x132111 (* (* 2.0 l_0_20_345) l_0_20_358)) (* (* 2.0 l_0_20_376) l_0_20_389))))
 (let ((?x132119 (- (- ?x132115 (* (* 2.0 l_0_20_377) l_0_20_390)) (* (* 2.0 l_0_20_378) l_0_20_391))))
 (let ((?x132123 (- (- ?x132119 (* (* 2.0 l_0_20_379) l_0_20_392)) (* (* 2.0 l_0_20_380) l_0_20_393))))
 (let ((?x132127 (- (- ?x132123 (* (* 2.0 l_0_20_381) l_0_20_394)) (* (* 2.0 l_0_20_412) l_0_20_425))))
 (let ((?x132131 (- (- ?x132127 (* (* 2.0 l_0_20_413) l_0_20_426)) (* (* 2.0 l_0_20_414) l_0_20_427))))
 (let ((?x132135 (- (- ?x132131 (* (* 2.0 l_0_20_415) l_0_20_428)) (* (* 2.0 l_0_20_416) l_0_20_429))))
 (let ((?x132139 (- (- ?x132135 (* (* 2.0 l_0_20_417) l_0_20_430)) (* (* 2.0 l_0_20_448) l_0_20_461))))
 (let ((?x132143 (- (- ?x132139 (* (* 2.0 l_0_20_449) l_0_20_462)) (* (* 2.0 l_0_20_450) l_0_20_463))))
 (let ((?x132147 (- (- ?x132143 (* (* 2.0 l_0_20_451) l_0_20_464)) (* (* 2.0 l_0_20_452) l_0_20_465))))
 (let ((?x132151 (- (- ?x132147 (* (* 2.0 l_0_20_453) l_0_20_466)) (* (* 2.0 l_0_20_484) l_0_20_497))))
 (let ((?x132155 (- (- ?x132151 (* (* 2.0 l_0_20_485) l_0_20_498)) (* (* 2.0 l_0_20_486) l_0_20_499))))
 (let ((?x132159 (- (- ?x132155 (* (* 2.0 l_0_20_487) l_0_20_500)) (* (* 2.0 l_0_20_488) l_0_20_501))))
 (= (- ?x132159 (* (* 2.0 l_0_20_489) l_0_20_502)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x83528 (* l_0_20_294 l_0_20_294)))
 (let ((?x105974 (* l_0_20_293 l_0_20_293)))
 (let ((?x83526 (* l_0_20_292 l_0_20_292)))
 (let ((?x125946 (* l_0_20_186 l_0_20_186)))
 (let ((?x125944 (* l_0_20_185 l_0_20_185)))
 (let ((?x125942 (* l_0_20_184 l_0_20_184)))
 (let ((?x125940 (* l_0_20_150 l_0_20_150)))
 (let ((?x66597 (+ (+ (* l_0_20_148 l_0_20_148) (* l_0_20_149 l_0_20_149)) ?x125940)))
 (= (- (- (- (- (- (- ?x66597 ?x125942) ?x125944) ?x125946) ?x83526) ?x105974) ?x83528) 0.0))))))))))
(assert
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x128911 (* ?x125318 l_0_20_301)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x128909 (* ?x125315 l_0_20_300)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x128907 (* ?x125312 l_0_20_299)))
 (let ((?x125644 (* 2.0 l_0_20_258)))
 (let ((?x132232 (* ?x125644 l_0_20_270)))
 (let ((?x125641 (* 2.0 l_0_20_257)))
 (let ((?x132230 (* ?x125641 l_0_20_269)))
 (let ((?x125638 (* 2.0 l_0_20_256)))
 (let ((?x132228 (* ?x125638 l_0_20_268)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x126053 (* ?x125718 l_0_20_193)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x126051 (* ?x125715 l_0_20_192)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x126049 (* ?x125712 l_0_20_191)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x126047 (* ?x125699 l_0_20_157)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x126045 (* ?x125696 l_0_20_156)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x126043 (* ?x125682 l_0_20_155)))
 (let ((?x132231 (+ (+ (- (- (- (+ (+ ?x126043 ?x126045) ?x126047) ?x126049) ?x126051) ?x126053) ?x132228) ?x132230)))
 (= (- (- (- (+ ?x132231 ?x132232) ?x128907) ?x128909) ?x128911) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x128939 (* ?x125318 l_0_20_306)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x128936 (* ?x125315 l_0_20_305)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x128933 (* ?x125312 l_0_20_304)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x126109 (* ?x125718 l_0_20_198)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x126107 (* ?x125715 l_0_20_197)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x126105 (* ?x125712 l_0_20_196)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x126096 (* ?x125699 l_0_20_162)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x126094 (* ?x125696 l_0_20_161)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x127140 (* ?x125682 l_0_20_160)))
 (let ((?x132261 (- (- (- (- (- (+ (+ ?x127140 ?x126094) ?x126096) ?x126105) ?x126107) ?x126109) ?x128933) ?x128936)))
 (= (- ?x132261 ?x128939) 0.0)))))))))))))))))))))
(assert
 (let ((?x125318 (* 2.0 l_0_20_294)))
 (let ((?x128958 (* ?x125318 l_0_20_312)))
 (let ((?x125315 (* 2.0 l_0_20_293)))
 (let ((?x83519 (* ?x125315 l_0_20_311)))
 (let ((?x125312 (* 2.0 l_0_20_292)))
 (let ((?x62908 (* ?x125312 l_0_20_310)))
 (let ((?x125644 (* 2.0 l_0_20_258)))
 (let ((?x132232 (* ?x125644 l_0_20_270)))
 (let ((?x125641 (* 2.0 l_0_20_257)))
 (let ((?x132230 (* ?x125641 l_0_20_269)))
 (let ((?x125638 (* 2.0 l_0_20_256)))
 (let ((?x132228 (* ?x125638 l_0_20_268)))
 (let ((?x125718 (* 2.0 l_0_20_186)))
 (let ((?x126167 (* ?x125718 l_0_20_204)))
 (let ((?x125715 (* 2.0 l_0_20_185)))
 (let ((?x126165 (* ?x125715 l_0_20_203)))
 (let ((?x125712 (* 2.0 l_0_20_184)))
 (let ((?x126163 (* ?x125712 l_0_20_202)))
 (let ((?x125699 (* 2.0 l_0_20_150)))
 (let ((?x126160 (* ?x125699 l_0_20_168)))
 (let ((?x125696 (* 2.0 l_0_20_149)))
 (let ((?x126157 (* ?x125696 l_0_20_167)))
 (let ((?x125682 (* 2.0 l_0_20_148)))
 (let ((?x126154 (* ?x125682 l_0_20_166)))
 (let ((?x132272 (- (- (- (- (- (+ (+ ?x126154 ?x126157) ?x126160) ?x126163) ?x126165) ?x126167) ?x132228) ?x132230)))
 (= (- (- (- (- ?x132272 ?x132232) ?x62908) ?x83519) ?x128958) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x129051 (* l_0_20_303 l_0_20_303)))
 (let ((?x129049 (* l_0_20_302 l_0_20_302)))
 (let ((?x129047 (* l_0_20_301 l_0_20_301)))
 (let ((?x129045 (* l_0_20_300 l_0_20_300)))
 (let ((?x129043 (* l_0_20_299 l_0_20_299)))
 (let ((?x129715 (* 2.0 l_0_20_267)))
 (let ((?x132296 (* ?x129715 l_0_20_272)))
 (let ((?x129712 (* 2.0 l_0_20_266)))
 (let ((?x132294 (* ?x129712 l_0_20_271)))
 (let ((?x129709 (* 2.0 l_0_20_265)))
 (let ((?x132292 (* ?x129709 l_0_20_270)))
 (let ((?x129706 (* 2.0 l_0_20_264)))
 (let ((?x132290 (* ?x129706 l_0_20_269)))
 (let ((?x129703 (* 2.0 l_0_20_263)))
 (let ((?x132288 (* ?x129703 l_0_20_268)))
 (let ((?x126696 (* l_0_20_195 l_0_20_195)))
 (let ((?x126694 (* l_0_20_194 l_0_20_194)))
 (let ((?x126692 (* l_0_20_193 l_0_20_193)))
 (let ((?x126690 (* l_0_20_192 l_0_20_192)))
 (let ((?x126688 (* l_0_20_191 l_0_20_191)))
 (let ((?x126686 (* l_0_20_159 l_0_20_159)))
 (let ((?x126684 (* l_0_20_158 l_0_20_158)))
 (let ((?x126682 (* l_0_20_157 l_0_20_157)))
 (let ((?x110320 (+ (+ (* l_0_20_155 l_0_20_155) (* l_0_20_156 l_0_20_156)) ?x126682)))
 (let ((?x132287 (- (- (- (- (- (+ (+ ?x110320 ?x126684) ?x126686) ?x126688) ?x126690) ?x126692) ?x126694) ?x126696)))
 (let ((?x132299 (- (- (+ (+ (+ (+ (+ ?x132287 ?x132288) ?x132290) ?x132292) ?x132294) ?x132296) ?x129043) ?x129045)))
 (= (- (- (- ?x132299 ?x129047) ?x129049) ?x129051) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x129086 (* 2.0 l_0_20_303)))
 (let ((?x129087 (* ?x129086 l_0_20_308)))
 (let ((?x129083 (* 2.0 l_0_20_302)))
 (let ((?x129084 (* ?x129083 l_0_20_307)))
 (let ((?x129080 (* 2.0 l_0_20_301)))
 (let ((?x129081 (* ?x129080 l_0_20_306)))
 (let ((?x129077 (* 2.0 l_0_20_300)))
 (let ((?x129078 (* ?x129077 l_0_20_305)))
 (let ((?x129074 (* 2.0 l_0_20_299)))
 (let ((?x129075 (* ?x129074 l_0_20_304)))
 (let ((?x132335 (* l_0_20_273 l_0_20_273)))
 (let ((?x132333 (* l_0_20_272 l_0_20_272)))
 (let ((?x132331 (* l_0_20_271 l_0_20_271)))
 (let ((?x132329 (* l_0_20_270 l_0_20_270)))
 (let ((?x132327 (* l_0_20_269 l_0_20_269)))
 (let ((?x132325 (* l_0_20_268 l_0_20_268)))
 (let ((?x126777 (* 2.0 l_0_20_195)))
 (let ((?x126778 (* ?x126777 l_0_20_200)))
 (let ((?x126774 (* 2.0 l_0_20_194)))
 (let ((?x126775 (* ?x126774 l_0_20_199)))
 (let ((?x126771 (* 2.0 l_0_20_193)))
 (let ((?x126772 (* ?x126771 l_0_20_198)))
 (let ((?x126768 (* 2.0 l_0_20_192)))
 (let ((?x126769 (* ?x126768 l_0_20_197)))
 (let ((?x126765 (* 2.0 l_0_20_191)))
 (let ((?x126766 (* ?x126765 l_0_20_196)))
 (let ((?x126762 (* 2.0 l_0_20_159)))
 (let ((?x126763 (* ?x126762 l_0_20_164)))
 (let ((?x126759 (* 2.0 l_0_20_158)))
 (let ((?x126760 (* ?x126759 l_0_20_163)))
 (let ((?x126756 (* 2.0 l_0_20_157)))
 (let ((?x126757 (* ?x126756 l_0_20_162)))
 (let ((?x126753 (* 2.0 l_0_20_156)))
 (let ((?x126754 (* ?x126753 l_0_20_161)))
 (let ((?x126750 (* 2.0 l_0_20_155)))
 (let ((?x126751 (* ?x126750 l_0_20_160)))
 (let ((?x132322 (- (- (- (+ (+ (+ (+ ?x126751 ?x126754) ?x126757) ?x126760) ?x126763) ?x126766) ?x126769) ?x126772)))
 (let ((?x132334 (+ (+ (+ (+ (+ (- (- ?x132322 ?x126775) ?x126778) ?x132325) ?x132327) ?x132329) ?x132331) ?x132333)))
 (= (- (- (- (- (- (+ ?x132334 ?x132335) ?x129075) ?x129078) ?x129081) ?x129084) ?x129087) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x129086 (* 2.0 l_0_20_303)))
 (let ((?x129115 (* ?x129086 l_0_20_314)))
 (let ((?x129083 (* 2.0 l_0_20_302)))
 (let ((?x129113 (* ?x129083 l_0_20_313)))
 (let ((?x129080 (* 2.0 l_0_20_301)))
 (let ((?x129111 (* ?x129080 l_0_20_312)))
 (let ((?x129077 (* 2.0 l_0_20_300)))
 (let ((?x129109 (* ?x129077 l_0_20_311)))
 (let ((?x129074 (* 2.0 l_0_20_299)))
 (let ((?x129107 (* ?x129074 l_0_20_310)))
 (let ((?x129842 (* 2.0 l_0_20_273)))
 (let ((?x132373 (* ?x129842 l_0_20_279)))
 (let ((?x129839 (* 2.0 l_0_20_272)))
 (let ((?x132371 (* ?x129839 l_0_20_278)))
 (let ((?x129836 (* 2.0 l_0_20_271)))
 (let ((?x132369 (* ?x129836 l_0_20_277)))
 (let ((?x129833 (* 2.0 l_0_20_270)))
 (let ((?x132367 (* ?x129833 l_0_20_276)))
 (let ((?x129830 (* 2.0 l_0_20_269)))
 (let ((?x132365 (* ?x129830 l_0_20_275)))
 (let ((?x129827 (* 2.0 l_0_20_268)))
 (let ((?x132363 (* ?x129827 l_0_20_274)))
 (let ((?x129715 (* 2.0 l_0_20_267)))
 (let ((?x132296 (* ?x129715 l_0_20_272)))
 (let ((?x129712 (* 2.0 l_0_20_266)))
 (let ((?x132294 (* ?x129712 l_0_20_271)))
 (let ((?x129709 (* 2.0 l_0_20_265)))
 (let ((?x132292 (* ?x129709 l_0_20_270)))
 (let ((?x129706 (* 2.0 l_0_20_264)))
 (let ((?x132290 (* ?x129706 l_0_20_269)))
 (let ((?x129703 (* 2.0 l_0_20_263)))
 (let ((?x132288 (* ?x129703 l_0_20_268)))
 (let ((?x126777 (* 2.0 l_0_20_195)))
 (let ((?x126888 (* ?x126777 l_0_20_206)))
 (let ((?x126774 (* 2.0 l_0_20_194)))
 (let ((?x126886 (* ?x126774 l_0_20_205)))
 (let ((?x126771 (* 2.0 l_0_20_193)))
 (let ((?x126884 (* ?x126771 l_0_20_204)))
 (let ((?x126768 (* 2.0 l_0_20_192)))
 (let ((?x126882 (* ?x126768 l_0_20_203)))
 (let ((?x126765 (* 2.0 l_0_20_191)))
 (let ((?x126880 (* ?x126765 l_0_20_202)))
 (let ((?x126762 (* 2.0 l_0_20_159)))
 (let ((?x126878 (* ?x126762 l_0_20_170)))
 (let ((?x126759 (* 2.0 l_0_20_158)))
 (let ((?x126876 (* ?x126759 l_0_20_169)))
 (let ((?x126756 (* 2.0 l_0_20_157)))
 (let ((?x126874 (* ?x126756 l_0_20_168)))
 (let ((?x126753 (* 2.0 l_0_20_156)))
 (let ((?x126872 (* ?x126753 l_0_20_167)))
 (let ((?x126750 (* 2.0 l_0_20_155)))
 (let ((?x126870 (* ?x126750 l_0_20_166)))
 (let ((?x132355 (- (- (- (+ (+ (+ (+ ?x126870 ?x126872) ?x126874) ?x126876) ?x126878) ?x126880) ?x126882) ?x126884)))
 (let ((?x132362 (- (- (- (- (- (- (- ?x132355 ?x126886) ?x126888) ?x132288) ?x132290) ?x132292) ?x132294) ?x132296)))
 (let ((?x132375 (- (+ (+ (+ (+ (+ (+ ?x132362 ?x132363) ?x132365) ?x132367) ?x132369) ?x132371) ?x132373) ?x129107)))
 (= (- (- (- (- ?x132375 ?x129109) ?x129111) ?x129113) ?x129115) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x129086 (* 2.0 l_0_20_303)))
 (let ((?x129183 (* ?x129086 l_0_20_321)))
 (let ((?x129083 (* 2.0 l_0_20_302)))
 (let ((?x129181 (* ?x129083 l_0_20_320)))
 (let ((?x129080 (* 2.0 l_0_20_301)))
 (let ((?x129179 (* ?x129080 l_0_20_319)))
 (let ((?x129077 (* 2.0 l_0_20_300)))
 (let ((?x129177 (* ?x129077 l_0_20_318)))
 (let ((?x129074 (* 2.0 l_0_20_299)))
 (let ((?x129175 (* ?x129074 l_0_20_317)))
 (let ((?x129842 (* 2.0 l_0_20_273)))
 (let ((?x129843 (* ?x129842 l_0_20_286)))
 (let ((?x129839 (* 2.0 l_0_20_272)))
 (let ((?x129840 (* ?x129839 l_0_20_285)))
 (let ((?x129836 (* 2.0 l_0_20_271)))
 (let ((?x129837 (* ?x129836 l_0_20_284)))
 (let ((?x129833 (* 2.0 l_0_20_270)))
 (let ((?x129834 (* ?x129833 l_0_20_283)))
 (let ((?x129830 (* 2.0 l_0_20_269)))
 (let ((?x129831 (* ?x129830 l_0_20_282)))
 (let ((?x129827 (* 2.0 l_0_20_268)))
 (let ((?x129828 (* ?x129827 l_0_20_281)))
 (let ((?x126777 (* 2.0 l_0_20_195)))
 (let ((?x126974 (* ?x126777 l_0_20_213)))
 (let ((?x126774 (* 2.0 l_0_20_194)))
 (let ((?x126972 (* ?x126774 l_0_20_212)))
 (let ((?x126771 (* 2.0 l_0_20_193)))
 (let ((?x126970 (* ?x126771 l_0_20_211)))
 (let ((?x126768 (* 2.0 l_0_20_192)))
 (let ((?x126968 (* ?x126768 l_0_20_210)))
 (let ((?x126765 (* 2.0 l_0_20_191)))
 (let ((?x126966 (* ?x126765 l_0_20_209)))
 (let ((?x126762 (* 2.0 l_0_20_159)))
 (let ((?x126964 (* ?x126762 l_0_20_177)))
 (let ((?x126759 (* 2.0 l_0_20_158)))
 (let ((?x126962 (* ?x126759 l_0_20_176)))
 (let ((?x126756 (* 2.0 l_0_20_157)))
 (let ((?x126960 (* ?x126756 l_0_20_175)))
 (let ((?x126753 (* 2.0 l_0_20_156)))
 (let ((?x126958 (* ?x126753 l_0_20_174)))
 (let ((?x126750 (* 2.0 l_0_20_155)))
 (let ((?x126956 (* ?x126750 l_0_20_173)))
 (let ((?x132407 (- (- (- (+ (+ (+ (+ ?x126956 ?x126958) ?x126960) ?x126962) ?x126964) ?x126966) ?x126968) ?x126970)))
 (let ((?x132413 (- (- (- (- ?x132407 ?x126972) ?x126974) (* (* 2.0 l_0_20_227) l_0_20_232)) (* (* 2.0 l_0_20_228) l_0_20_233))))
 (let ((?x132417 (- (- ?x132413 (* (* 2.0 l_0_20_229) l_0_20_234)) (* (* 2.0 l_0_20_230) l_0_20_235))))
 (let ((?x132422 (+ (+ (+ (- ?x132417 (* (* 2.0 l_0_20_231) l_0_20_236)) ?x129828) ?x129831) ?x129834)))
 (let ((?x132429 (- (- (- (- (+ (+ (+ ?x132422 ?x129837) ?x129840) ?x129843) ?x129175) ?x129177) ?x129179) ?x129181)))
 (= (- ?x132429 ?x129183) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x129254 (* l_0_20_309 l_0_20_309)))
 (let ((?x129252 (* l_0_20_308 l_0_20_308)))
 (let ((?x129250 (* l_0_20_307 l_0_20_307)))
 (let ((?x129248 (* l_0_20_306 l_0_20_306)))
 (let ((?x129246 (* l_0_20_305 l_0_20_305)))
 (let ((?x129244 (* l_0_20_304 l_0_20_304)))
 (let ((?x127078 (* l_0_20_201 l_0_20_201)))
 (let ((?x127076 (* l_0_20_200 l_0_20_200)))
 (let ((?x127072 (* l_0_20_199 l_0_20_199)))
 (let ((?x127070 (* l_0_20_198 l_0_20_198)))
 (let ((?x127068 (* l_0_20_197 l_0_20_197)))
 (let ((?x127066 (* l_0_20_196 l_0_20_196)))
 (let ((?x127058 (* l_0_20_165 l_0_20_165)))
 (let ((?x127043 (* l_0_20_164 l_0_20_164)))
 (let ((?x127040 (* l_0_20_163 l_0_20_163)))
 (let ((?x127036 (* l_0_20_162 l_0_20_162)))
 (let ((?x67585 (+ (+ (* l_0_20_160 l_0_20_160) (* l_0_20_161 l_0_20_161)) ?x127036)))
 (let ((?x132450 (- (- (- (- (+ (+ (+ ?x67585 ?x127040) ?x127043) ?x127058) ?x127066) ?x127068) ?x127070) ?x127072)))
 (let ((?x132457 (- (- (- (- (- (- (- ?x132450 ?x127076) ?x127078) ?x129244) ?x129246) ?x129248) ?x129250) ?x129252)))
 (= (- ?x132457 ?x129254) 0.0)))))))))))))))))))))
(assert
 (let ((?x129286 (* 2.0 l_0_20_309)))
 (let ((?x129287 (* ?x129286 l_0_20_315)))
 (let ((?x129283 (* 2.0 l_0_20_308)))
 (let ((?x129284 (* ?x129283 l_0_20_314)))
 (let ((?x129280 (* 2.0 l_0_20_307)))
 (let ((?x129281 (* ?x129280 l_0_20_313)))
 (let ((?x129277 (* 2.0 l_0_20_306)))
 (let ((?x129278 (* ?x129277 l_0_20_312)))
 (let ((?x129274 (* 2.0 l_0_20_305)))
 (let ((?x129275 (* ?x129274 l_0_20_311)))
 (let ((?x129271 (* 2.0 l_0_20_304)))
 (let ((?x129272 (* ?x129271 l_0_20_310)))
 (let ((?x132335 (* l_0_20_273 l_0_20_273)))
 (let ((?x132333 (* l_0_20_272 l_0_20_272)))
 (let ((?x132331 (* l_0_20_271 l_0_20_271)))
 (let ((?x132329 (* l_0_20_270 l_0_20_270)))
 (let ((?x132327 (* l_0_20_269 l_0_20_269)))
 (let ((?x132325 (* l_0_20_268 l_0_20_268)))
 (let ((?x127189 (* 2.0 l_0_20_201)))
 (let ((?x127190 (* ?x127189 l_0_20_207)))
 (let ((?x127186 (* 2.0 l_0_20_200)))
 (let ((?x127187 (* ?x127186 l_0_20_206)))
 (let ((?x127180 (* 2.0 l_0_20_199)))
 (let ((?x127181 (* ?x127180 l_0_20_205)))
 (let ((?x127177 (* 2.0 l_0_20_198)))
 (let ((?x127178 (* ?x127177 l_0_20_204)))
 (let ((?x127174 (* 2.0 l_0_20_197)))
 (let ((?x127175 (* ?x127174 l_0_20_203)))
 (let ((?x127171 (* 2.0 l_0_20_196)))
 (let ((?x127172 (* ?x127171 l_0_20_202)))
 (let ((?x127161 (* 2.0 l_0_20_165)))
 (let ((?x127162 (* ?x127161 l_0_20_171)))
 (let ((?x127158 (* 2.0 l_0_20_164)))
 (let ((?x127159 (* ?x127158 l_0_20_170)))
 (let ((?x127155 (* 2.0 l_0_20_163)))
 (let ((?x127156 (* ?x127155 l_0_20_169)))
 (let ((?x127152 (* 2.0 l_0_20_162)))
 (let ((?x127153 (* ?x127152 l_0_20_168)))
 (let ((?x127149 (* 2.0 l_0_20_161)))
 (let ((?x127150 (* ?x127149 l_0_20_167)))
 (let ((?x127146 (* 2.0 l_0_20_160)))
 (let ((?x127147 (* ?x127146 l_0_20_166)))
 (let ((?x110921 (- (- (+ (+ (+ (+ (+ ?x127147 ?x127150) ?x127153) ?x127156) ?x127159) ?x127162) ?x127172) ?x127175)))
 (let ((?x132467 (- (- (- (- (- (- (- ?x110921 ?x127178) ?x127181) ?x127187) ?x127190) ?x132325) ?x132327) ?x132329)))
 (let ((?x132474 (- (- (- (- (- (- (- ?x132467 ?x132331) ?x132333) ?x132335) ?x129272) ?x129275) ?x129278) ?x129281)))
 (= (- (- ?x132474 ?x129284) ?x129287) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x129286 (* 2.0 l_0_20_309)))
 (let ((?x129343 (* ?x129286 l_0_20_322)))
 (let ((?x129283 (* 2.0 l_0_20_308)))
 (let ((?x129341 (* ?x129283 l_0_20_321)))
 (let ((?x129280 (* 2.0 l_0_20_307)))
 (let ((?x129339 (* ?x129280 l_0_20_320)))
 (let ((?x129277 (* 2.0 l_0_20_306)))
 (let ((?x129337 (* ?x129277 l_0_20_319)))
 (let ((?x129274 (* 2.0 l_0_20_305)))
 (let ((?x129335 (* ?x129274 l_0_20_318)))
 (let ((?x129271 (* 2.0 l_0_20_304)))
 (let ((?x129333 (* ?x129271 l_0_20_317)))
 (let ((?x132499 (* l_0_20_237 l_0_20_237)))
 (let ((?x132497 (* l_0_20_236 l_0_20_236)))
 (let ((?x132495 (* l_0_20_235 l_0_20_235)))
 (let ((?x132493 (* l_0_20_234 l_0_20_234)))
 (let ((?x132491 (* l_0_20_233 l_0_20_233)))
 (let ((?x111122 (* l_0_20_232 l_0_20_232)))
 (let ((?x127189 (* 2.0 l_0_20_201)))
 (let ((?x127348 (* ?x127189 l_0_20_214)))
 (let ((?x127186 (* 2.0 l_0_20_200)))
 (let ((?x127346 (* ?x127186 l_0_20_213)))
 (let ((?x127180 (* 2.0 l_0_20_199)))
 (let ((?x127342 (* ?x127180 l_0_20_212)))
 (let ((?x127177 (* 2.0 l_0_20_198)))
 (let ((?x127340 (* ?x127177 l_0_20_211)))
 (let ((?x127174 (* 2.0 l_0_20_197)))
 (let ((?x127338 (* ?x127174 l_0_20_210)))
 (let ((?x127171 (* 2.0 l_0_20_196)))
 (let ((?x127336 (* ?x127171 l_0_20_209)))
 (let ((?x127161 (* 2.0 l_0_20_165)))
 (let ((?x127328 (* ?x127161 l_0_20_178)))
 (let ((?x127158 (* 2.0 l_0_20_164)))
 (let ((?x127326 (* ?x127158 l_0_20_177)))
 (let ((?x127155 (* 2.0 l_0_20_163)))
 (let ((?x127324 (* ?x127155 l_0_20_176)))
 (let ((?x127152 (* 2.0 l_0_20_162)))
 (let ((?x127322 (* ?x127152 l_0_20_175)))
 (let ((?x127149 (* 2.0 l_0_20_161)))
 (let ((?x127320 (* ?x127149 l_0_20_174)))
 (let ((?x127146 (* 2.0 l_0_20_160)))
 (let ((?x127318 (* ?x127146 l_0_20_173)))
 (let ((?x111102 (- (- (+ (+ (+ (+ (+ ?x127318 ?x127320) ?x127322) ?x127324) ?x127326) ?x127328) ?x127336) ?x127338)))
 (let ((?x132494 (- (- (- (- (- (- (- ?x111102 ?x127340) ?x127342) ?x127346) ?x127348) ?x111122) ?x132491) ?x132493)))
 (let ((?x132504 (- (- (- (- (- (- (- ?x132494 ?x132495) ?x132497) ?x132499) ?x129333) ?x129335) ?x129337) ?x129339)))
 (= (- (- ?x132504 ?x129341) ?x129343) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x129391 (* l_0_20_316 l_0_20_316)))
 (let ((?x129389 (* l_0_20_315 l_0_20_315)))
 (let ((?x129387 (* l_0_20_314 l_0_20_314)))
 (let ((?x129385 (* l_0_20_313 l_0_20_313)))
 (let ((?x129383 (* l_0_20_312 l_0_20_312)))
 (let ((?x129381 (* l_0_20_311 l_0_20_311)))
 (let ((?x129379 (* l_0_20_310 l_0_20_310)))
 (let ((?x129842 (* 2.0 l_0_20_273)))
 (let ((?x132373 (* ?x129842 l_0_20_279)))
 (let ((?x129839 (* 2.0 l_0_20_272)))
 (let ((?x132371 (* ?x129839 l_0_20_278)))
 (let ((?x129836 (* 2.0 l_0_20_271)))
 (let ((?x132369 (* ?x129836 l_0_20_277)))
 (let ((?x129833 (* 2.0 l_0_20_270)))
 (let ((?x132367 (* ?x129833 l_0_20_276)))
 (let ((?x129830 (* 2.0 l_0_20_269)))
 (let ((?x132365 (* ?x129830 l_0_20_275)))
 (let ((?x129827 (* 2.0 l_0_20_268)))
 (let ((?x132363 (* ?x129827 l_0_20_274)))
 (let ((?x127451 (* l_0_20_208 l_0_20_208)))
 (let ((?x127449 (* l_0_20_207 l_0_20_207)))
 (let ((?x127447 (* l_0_20_206 l_0_20_206)))
 (let ((?x127445 (* l_0_20_205 l_0_20_205)))
 (let ((?x127443 (* l_0_20_204 l_0_20_204)))
 (let ((?x127441 (* l_0_20_203 l_0_20_203)))
 (let ((?x127439 (* l_0_20_202 l_0_20_202)))
 (let ((?x127437 (* l_0_20_172 l_0_20_172)))
 (let ((?x127435 (* l_0_20_171 l_0_20_171)))
 (let ((?x127433 (* l_0_20_170 l_0_20_170)))
 (let ((?x127431 (* l_0_20_169 l_0_20_169)))
 (let ((?x127429 (* l_0_20_168 l_0_20_168)))
 (let ((?x68172 (+ (+ (* l_0_20_166 l_0_20_166) (* l_0_20_167 l_0_20_167)) ?x127429)))
 (let ((?x111242 (- (- (- (+ (+ (+ (+ ?x68172 ?x127431) ?x127433) ?x127435) ?x127437) ?x127439) ?x127441) ?x127443)))
 (let ((?x132520 (- (- (- (- (- (- (- ?x111242 ?x127445) ?x127447) ?x127449) ?x127451) ?x132363) ?x132365) ?x132367)))
 (let ((?x132527 (- (- (- (- (- (- (- ?x132520 ?x132369) ?x132371) ?x132373) ?x129379) ?x129381) ?x129383) ?x129385)))
 (= (- (- (- ?x132527 ?x129387) ?x129389) ?x129391) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x129489 (* l_0_20_324 l_0_20_324)))
 (let ((?x129487 (* l_0_20_323 l_0_20_323)))
 (let ((?x129485 (* l_0_20_322 l_0_20_322)))
 (let ((?x129483 (* l_0_20_321 l_0_20_321)))
 (let ((?x129481 (* l_0_20_320 l_0_20_320)))
 (let ((?x129478 (* l_0_20_319 l_0_20_319)))
 (let ((?x129476 (* l_0_20_318 l_0_20_318)))
 (let ((?x129474 (* l_0_20_317 l_0_20_317)))
 (let ((?x127779 (* l_0_20_216 l_0_20_216)))
 (let ((?x127777 (* l_0_20_215 l_0_20_215)))
 (let ((?x127775 (* l_0_20_214 l_0_20_214)))
 (let ((?x127773 (* l_0_20_213 l_0_20_213)))
 (let ((?x127771 (* l_0_20_212 l_0_20_212)))
 (let ((?x127769 (* l_0_20_211 l_0_20_211)))
 (let ((?x127767 (* l_0_20_210 l_0_20_210)))
 (let ((?x127765 (* l_0_20_209 l_0_20_209)))
 (let ((?x127763 (* l_0_20_180 l_0_20_180)))
 (let ((?x127761 (* l_0_20_179 l_0_20_179)))
 (let ((?x127759 (* l_0_20_178 l_0_20_178)))
 (let ((?x127757 (* l_0_20_177 l_0_20_177)))
 (let ((?x127736 (* l_0_20_176 l_0_20_176)))
 (let ((?x127732 (* l_0_20_175 l_0_20_175)))
 (let ((?x68437 (+ (+ (* l_0_20_173 l_0_20_173) (* l_0_20_174 l_0_20_174)) ?x127732)))
 (let ((?x111501 (- (- (+ (+ (+ (+ (+ ?x68437 ?x127736) ?x127757) ?x127759) ?x127761) ?x127763) ?x127765) ?x127767)))
 (let ((?x111424 (- (- (- (- (- (- (- ?x111501 ?x127769) ?x127771) ?x127773) ?x127775) ?x127777) ?x127779) (* (* 2.0 l_0_20_232) l_0_20_245))))
 (let ((?x111379 (- (- ?x111424 (* (* 2.0 l_0_20_233) l_0_20_246)) (* (* 2.0 l_0_20_234) l_0_20_247))))
 (let ((?x111388 (- (- ?x111379 (* (* 2.0 l_0_20_235) l_0_20_248)) (* (* 2.0 l_0_20_236) l_0_20_249))))
 (let ((?x132543 (- (- (- (- ?x111388 (* (* 2.0 l_0_20_237) l_0_20_250)) ?x129474) ?x129476) ?x129478)))
 (= (- (- (- (- (- ?x132543 ?x129481) ?x129483) ?x129485) ?x129487) ?x129489) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x124921 (* ?x124920 l_0_20_282)))
 (let ((?x124917 (* 2.0 l_0_20_254)))
 (let ((?x124918 (* ?x124917 l_0_20_281)))
 (let ((?x111728 (- (* (* (- 2.0) l_0_20_218) l_0_20_227) (* (* 2.0 l_0_20_219) l_0_20_228))))
 (let ((?x132560 (- (- (+ (+ ?x111728 ?x124918) ?x124921) (* (* 2.0 l_0_20_335) l_0_20_353)) (* (* 2.0 l_0_20_336) l_0_20_354))))
 (let ((?x132564 (- (- ?x132560 (* (* 2.0 l_0_20_337) l_0_20_355)) (* (* 2.0 l_0_20_338) l_0_20_356))))
 (let ((?x132568 (- (- ?x132564 (* (* 2.0 l_0_20_339) l_0_20_357)) (* (* 2.0 l_0_20_371) l_0_20_389))))
 (let ((?x132572 (- (- ?x132568 (* (* 2.0 l_0_20_372) l_0_20_390)) (* (* 2.0 l_0_20_373) l_0_20_391))))
 (let ((?x132576 (- (- ?x132572 (* (* 2.0 l_0_20_374) l_0_20_392)) (* (* 2.0 l_0_20_375) l_0_20_393))))
 (let ((?x132580 (- (- ?x132576 (* (* 2.0 l_0_20_407) l_0_20_425)) (* (* 2.0 l_0_20_408) l_0_20_426))))
 (let ((?x132584 (- (- ?x132580 (* (* 2.0 l_0_20_409) l_0_20_427)) (* (* 2.0 l_0_20_410) l_0_20_428))))
 (let ((?x132588 (- (- ?x132584 (* (* 2.0 l_0_20_411) l_0_20_429)) (* (* 2.0 l_0_20_443) l_0_20_461))))
 (let ((?x132592 (- (- ?x132588 (* (* 2.0 l_0_20_444) l_0_20_462)) (* (* 2.0 l_0_20_445) l_0_20_463))))
 (let ((?x132596 (- (- ?x132592 (* (* 2.0 l_0_20_446) l_0_20_464)) (* (* 2.0 l_0_20_447) l_0_20_465))))
 (let ((?x132600 (- (- ?x132596 (* (* 2.0 l_0_20_479) l_0_20_497)) (* (* 2.0 l_0_20_480) l_0_20_498))))
 (let ((?x132604 (- (- ?x132600 (* (* 2.0 l_0_20_481) l_0_20_499)) (* (* 2.0 l_0_20_482) l_0_20_500))))
 (= (- ?x132604 (* (* 2.0 l_0_20_483) l_0_20_501)) 0.0)))))))))))))))))))
(assert
 (let ((?x132730 (* l_0_20_504 l_0_20_504)))
 (let ((?x132728 (* l_0_20_503 l_0_20_503)))
 (let ((?x132726 (* l_0_20_502 l_0_20_502)))
 (let ((?x132724 (* l_0_20_501 l_0_20_501)))
 (let ((?x132722 (* l_0_20_500 l_0_20_500)))
 (let ((?x132720 (* l_0_20_499 l_0_20_499)))
 (let ((?x132718 (* l_0_20_498 l_0_20_498)))
 (let ((?x132716 (* l_0_20_497 l_0_20_497)))
 (let ((?x132714 (* l_0_20_468 l_0_20_468)))
 (let ((?x132712 (* l_0_20_467 l_0_20_467)))
 (let ((?x132710 (* l_0_20_466 l_0_20_466)))
 (let ((?x132708 (* l_0_20_465 l_0_20_465)))
 (let ((?x132706 (* l_0_20_464 l_0_20_464)))
 (let ((?x132704 (* l_0_20_463 l_0_20_463)))
 (let ((?x132702 (* l_0_20_462 l_0_20_462)))
 (let ((?x132700 (* l_0_20_461 l_0_20_461)))
 (let ((?x132698 (* l_0_20_432 l_0_20_432)))
 (let ((?x132696 (* l_0_20_431 l_0_20_431)))
 (let ((?x132694 (* l_0_20_430 l_0_20_430)))
 (let ((?x132692 (* l_0_20_429 l_0_20_429)))
 (let ((?x132690 (* l_0_20_428 l_0_20_428)))
 (let ((?x132688 (* l_0_20_427 l_0_20_427)))
 (let ((?x132686 (* l_0_20_426 l_0_20_426)))
 (let ((?x132684 (* l_0_20_425 l_0_20_425)))
 (let ((?x132682 (* l_0_20_396 l_0_20_396)))
 (let ((?x132680 (* l_0_20_395 l_0_20_395)))
 (let ((?x132678 (* l_0_20_394 l_0_20_394)))
 (let ((?x132676 (* l_0_20_393 l_0_20_393)))
 (let ((?x132674 (* l_0_20_392 l_0_20_392)))
 (let ((?x132672 (* l_0_20_391 l_0_20_391)))
 (let ((?x132670 (* l_0_20_390 l_0_20_390)))
 (let ((?x132668 (* l_0_20_389 l_0_20_389)))
 (let ((?x132666 (* l_0_20_360 l_0_20_360)))
 (let ((?x132664 (* l_0_20_359 l_0_20_359)))
 (let ((?x132662 (* l_0_20_358 l_0_20_358)))
 (let ((?x132660 (* l_0_20_357 l_0_20_357)))
 (let ((?x132658 (* l_0_20_356 l_0_20_356)))
 (let ((?x132656 (* l_0_20_355 l_0_20_355)))
 (let ((?x132654 (* l_0_20_354 l_0_20_354)))
 (let ((?x132652 (* l_0_20_353 l_0_20_353)))
 (let ((?x132651 (- (* (* (- 2.0) l_0_20_218) l_0_20_245) (* (* 2.0 l_0_20_219) l_0_20_246))))
 (let ((?x132665 (- (- (- (- (- (- (- ?x132651 ?x132652) ?x132654) ?x132656) ?x132658) ?x132660) ?x132662) ?x132664)))
 (let ((?x132679 (- (- (- (- (- (- (- ?x132665 ?x132666) ?x132668) ?x132670) ?x132672) ?x132674) ?x132676) ?x132678)))
 (let ((?x132693 (- (- (- (- (- (- (- ?x132679 ?x132680) ?x132682) ?x132684) ?x132686) ?x132688) ?x132690) ?x132692)))
 (let ((?x132707 (- (- (- (- (- (- (- ?x132693 ?x132694) ?x132696) ?x132698) ?x132700) ?x132702) ?x132704) ?x132706)))
 (let ((?x132721 (- (- (- (- (- (- (- ?x132707 ?x132708) ?x132710) ?x132712) ?x132714) ?x132716) ?x132718) ?x132720)))
 (= (- (- (- (- (- ?x132721 ?x132722) ?x132724) ?x132726) ?x132728) ?x132730) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x129715 (* 2.0 l_0_20_267)))
 (let ((?x129716 (* ?x129715 l_0_20_285)))
 (let ((?x129712 (* 2.0 l_0_20_266)))
 (let ((?x129713 (* ?x129712 l_0_20_284)))
 (let ((?x129709 (* 2.0 l_0_20_265)))
 (let ((?x129710 (* ?x129709 l_0_20_283)))
 (let ((?x129706 (* 2.0 l_0_20_264)))
 (let ((?x129707 (* ?x129706 l_0_20_282)))
 (let ((?x129703 (* 2.0 l_0_20_263)))
 (let ((?x129704 (* ?x129703 l_0_20_281)))
 (let ((?x132797 (* l_0_20_231 l_0_20_231)))
 (let ((?x132795 (* l_0_20_230 l_0_20_230)))
 (let ((?x132793 (* l_0_20_229 l_0_20_229)))
 (let ((?x132794 (- (- (* (- l_0_20_227) l_0_20_227) (* l_0_20_228 l_0_20_228)) ?x132793)))
 (let ((?x132803 (+ (+ (+ (+ (+ (- (- ?x132794 ?x132795) ?x132797) ?x129704) ?x129707) ?x129710) ?x129713) ?x129716)))
 (= ?x132803 0.0)))))))))))))))))
(assert
 (let ((?x130002 (* l_0_20_288 l_0_20_288)))
 (let ((?x130000 (* l_0_20_287 l_0_20_287)))
 (let ((?x129998 (* l_0_20_286 l_0_20_286)))
 (let ((?x129996 (* l_0_20_285 l_0_20_285)))
 (let ((?x129994 (* l_0_20_284 l_0_20_284)))
 (let ((?x129992 (* l_0_20_283 l_0_20_283)))
 (let ((?x129990 (* l_0_20_282 l_0_20_282)))
 (let ((?x129988 (* l_0_20_281 l_0_20_281)))
 (let ((?x112055 (- (* (* (- 2.0) l_0_20_227) l_0_20_245) (* (* 2.0 l_0_20_228) l_0_20_246))))
 (let ((?x112042 (- (- ?x112055 (* (* 2.0 l_0_20_229) l_0_20_247)) (* (* 2.0 l_0_20_230) l_0_20_248))))
 (let ((?x88803 (+ (+ (+ (- ?x112042 (* (* 2.0 l_0_20_231) l_0_20_249)) ?x129988) ?x129990) ?x129992)))
 (= (+ (+ (+ (+ (+ ?x88803 ?x129994) ?x129996) ?x129998) ?x130000) ?x130002) 0.0)))))))))))))
(assert
 (let ((?x132845 (* l_0_20_252 l_0_20_252)))
 (let ((?x132843 (* l_0_20_251 l_0_20_251)))
 (let ((?x132841 (* l_0_20_250 l_0_20_250)))
 (let ((?x112098 (* l_0_20_249 l_0_20_249)))
 (let ((?x111943 (* l_0_20_248 l_0_20_248)))
 (let ((?x112105 (* l_0_20_247 l_0_20_247)))
 (let ((?x69123 (- (- (* (- l_0_20_245) l_0_20_245) (* l_0_20_246 l_0_20_246)) ?x112105)))
 (= (- (- (- (- (- ?x69123 ?x111943) ?x112098) ?x132841) ?x132843) ?x132845) 0.0)))))))))
(assert
 (let ((?x132863 (- (- (* (- l_0_20_254) l_0_20_254) (* l_0_20_255 l_0_20_255)) (* (* 2.0 l_0_20_326) l_0_20_346))))
 (let ((?x132867 (- (- ?x132863 (* (* 2.0 l_0_20_327) l_0_20_347)) (* (* 2.0 l_0_20_362) l_0_20_382))))
 (let ((?x132871 (- (- ?x132867 (* (* 2.0 l_0_20_363) l_0_20_383)) (* (* 2.0 l_0_20_398) l_0_20_418))))
 (let ((?x132875 (- (- ?x132871 (* (* 2.0 l_0_20_399) l_0_20_419)) (* (* 2.0 l_0_20_434) l_0_20_454))))
 (let ((?x132879 (- (- ?x132875 (* (* 2.0 l_0_20_435) l_0_20_455)) (* (* 2.0 l_0_20_470) l_0_20_490))))
 (= (- ?x132879 (* (* 2.0 l_0_20_471) l_0_20_491)) 0.0)))))))
(assert
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x132919 (* ?x124920 l_0_20_257)))
 (let ((?x132922 (- (- (* (* (- 2.0) l_0_20_254) l_0_20_256) ?x132919) (* (* 2.0 l_0_20_328) l_0_20_346))))
 (let ((?x132926 (- (- ?x132922 (* (* 2.0 l_0_20_329) l_0_20_347)) (* (* 2.0 l_0_20_330) l_0_20_348))))
 (let ((?x132930 (- (- ?x132926 (* (* 2.0 l_0_20_364) l_0_20_382)) (* (* 2.0 l_0_20_365) l_0_20_383))))
 (let ((?x132934 (- (- ?x132930 (* (* 2.0 l_0_20_366) l_0_20_384)) (* (* 2.0 l_0_20_400) l_0_20_418))))
 (let ((?x132938 (- (- ?x132934 (* (* 2.0 l_0_20_401) l_0_20_419)) (* (* 2.0 l_0_20_402) l_0_20_420))))
 (let ((?x132942 (- (- ?x132938 (* (* 2.0 l_0_20_436) l_0_20_454)) (* (* 2.0 l_0_20_437) l_0_20_455))))
 (let ((?x132946 (- (- ?x132942 (* (* 2.0 l_0_20_438) l_0_20_456)) (* (* 2.0 l_0_20_472) l_0_20_490))))
 (let ((?x132950 (- (- ?x132946 (* (* 2.0 l_0_20_473) l_0_20_491)) (* (* 2.0 l_0_20_474) l_0_20_492))))
 (= ?x132950 0.0))))))))))))
(assert
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x109356 (* ?x124920 l_0_20_275)))
 (let ((?x88869 (* ?x124920 l_0_20_264)))
 (let ((?x69162 (+ (* (* (- 2.0) l_0_20_254) l_0_20_263) (* (* 2.0 l_0_20_254) l_0_20_274))))
 (let ((?x112226 (- (- (+ (- ?x69162 ?x88869) ?x109356) (* (* 2.0 l_0_20_335) l_0_20_346)) (* (* 2.0 l_0_20_336) l_0_20_347))))
 (let ((?x112229 (- (- ?x112226 (* (* 2.0 l_0_20_337) l_0_20_348)) (* (* 2.0 l_0_20_338) l_0_20_349))))
 (let ((?x133004 (- (- ?x112229 (* (* 2.0 l_0_20_339) l_0_20_350)) (* (* 2.0 l_0_20_371) l_0_20_382))))
 (let ((?x133008 (- (- ?x133004 (* (* 2.0 l_0_20_372) l_0_20_383)) (* (* 2.0 l_0_20_373) l_0_20_384))))
 (let ((?x133012 (- (- ?x133008 (* (* 2.0 l_0_20_374) l_0_20_385)) (* (* 2.0 l_0_20_375) l_0_20_386))))
 (let ((?x133016 (- (- ?x133012 (* (* 2.0 l_0_20_407) l_0_20_418)) (* (* 2.0 l_0_20_408) l_0_20_419))))
 (let ((?x133020 (- (- ?x133016 (* (* 2.0 l_0_20_409) l_0_20_420)) (* (* 2.0 l_0_20_410) l_0_20_421))))
 (let ((?x133024 (- (- ?x133020 (* (* 2.0 l_0_20_411) l_0_20_422)) (* (* 2.0 l_0_20_443) l_0_20_454))))
 (let ((?x133028 (- (- ?x133024 (* (* 2.0 l_0_20_444) l_0_20_455)) (* (* 2.0 l_0_20_445) l_0_20_456))))
 (let ((?x133032 (- (- ?x133028 (* (* 2.0 l_0_20_446) l_0_20_457)) (* (* 2.0 l_0_20_447) l_0_20_458))))
 (let ((?x133036 (- (- ?x133032 (* (* 2.0 l_0_20_479) l_0_20_490)) (* (* 2.0 l_0_20_480) l_0_20_491))))
 (let ((?x133040 (- (- ?x133036 (* (* 2.0 l_0_20_481) l_0_20_492)) (* (* 2.0 l_0_20_482) l_0_20_493))))
 (= (- ?x133040 (* (* 2.0 l_0_20_483) l_0_20_494)) 0.0))))))))))))))))))
(assert
 (let ((?x133225 (* l_0_20_496 l_0_20_496)))
 (let ((?x133223 (* l_0_20_495 l_0_20_495)))
 (let ((?x133221 (* l_0_20_494 l_0_20_494)))
 (let ((?x133219 (* l_0_20_493 l_0_20_493)))
 (let ((?x133217 (* l_0_20_492 l_0_20_492)))
 (let ((?x133215 (* l_0_20_491 l_0_20_491)))
 (let ((?x133213 (* l_0_20_490 l_0_20_490)))
 (let ((?x133211 (* l_0_20_460 l_0_20_460)))
 (let ((?x133209 (* l_0_20_459 l_0_20_459)))
 (let ((?x133207 (* l_0_20_458 l_0_20_458)))
 (let ((?x133205 (* l_0_20_457 l_0_20_457)))
 (let ((?x133203 (* l_0_20_456 l_0_20_456)))
 (let ((?x133201 (* l_0_20_455 l_0_20_455)))
 (let ((?x133199 (* l_0_20_454 l_0_20_454)))
 (let ((?x133197 (* l_0_20_424 l_0_20_424)))
 (let ((?x133195 (* l_0_20_423 l_0_20_423)))
 (let ((?x133193 (* l_0_20_422 l_0_20_422)))
 (let ((?x133191 (* l_0_20_421 l_0_20_421)))
 (let ((?x133189 (* l_0_20_420 l_0_20_420)))
 (let ((?x133187 (* l_0_20_419 l_0_20_419)))
 (let ((?x133185 (* l_0_20_418 l_0_20_418)))
 (let ((?x133183 (* l_0_20_388 l_0_20_388)))
 (let ((?x133181 (* l_0_20_387 l_0_20_387)))
 (let ((?x133179 (* l_0_20_386 l_0_20_386)))
 (let ((?x133177 (* l_0_20_385 l_0_20_385)))
 (let ((?x133175 (* l_0_20_384 l_0_20_384)))
 (let ((?x133173 (* l_0_20_383 l_0_20_383)))
 (let ((?x133171 (* l_0_20_382 l_0_20_382)))
 (let ((?x133169 (* l_0_20_352 l_0_20_352)))
 (let ((?x133167 (* l_0_20_351 l_0_20_351)))
 (let ((?x133165 (* l_0_20_350 l_0_20_350)))
 (let ((?x133163 (* l_0_20_349 l_0_20_349)))
 (let ((?x133161 (* l_0_20_348 l_0_20_348)))
 (let ((?x133159 (* l_0_20_347 l_0_20_347)))
 (let ((?x133157 (* l_0_20_346 l_0_20_346)))
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x109356 (* ?x124920 l_0_20_275)))
 (let ((?x133162 (- (- (- (- (* (* (- 2.0) l_0_20_254) l_0_20_274) ?x109356) ?x133157) ?x133159) ?x133161)))
 (let ((?x133176 (- (- (- (- (- (- (- ?x133162 ?x133163) ?x133165) ?x133167) ?x133169) ?x133171) ?x133173) ?x133175)))
 (let ((?x133190 (- (- (- (- (- (- (- ?x133176 ?x133177) ?x133179) ?x133181) ?x133183) ?x133185) ?x133187) ?x133189)))
 (let ((?x133204 (- (- (- (- (- (- (- ?x133190 ?x133191) ?x133193) ?x133195) ?x133197) ?x133199) ?x133201) ?x133203)))
 (let ((?x133218 (- (- (- (- (- (- (- ?x133204 ?x133205) ?x133207) ?x133209) ?x133211) ?x133213) ?x133215) ?x133217)))
 (= (- (- (- (- ?x133218 ?x133219) ?x133221) ?x133223) ?x133225) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x133290 (* l_0_20_258 l_0_20_258)))
 (let ((?x133291 (- (- (* (- l_0_20_256) l_0_20_256) (* l_0_20_257 l_0_20_257)) ?x133290)))
 (= ?x133291 0.0))))
(assert
 (let ((?x125644 (* 2.0 l_0_20_258)))
 (let ((?x133314 (* ?x125644 l_0_20_276)))
 (let ((?x133312 (* ?x125644 l_0_20_265)))
 (let ((?x125641 (* 2.0 l_0_20_257)))
 (let ((?x133310 (* ?x125641 l_0_20_275)))
 (let ((?x133308 (* ?x125641 l_0_20_264)))
 (let ((?x133307 (+ (* (* (- 2.0) l_0_20_256) l_0_20_263) (* (* 2.0 l_0_20_256) l_0_20_274))))
 (= (+ (- (+ (- ?x133307 ?x133308) ?x133310) ?x133312) ?x133314) 0.0)))))))))
(assert
 (let ((?x125644 (* 2.0 l_0_20_258)))
 (let ((?x133314 (* ?x125644 l_0_20_276)))
 (let ((?x125641 (* 2.0 l_0_20_257)))
 (let ((?x133310 (* ?x125641 l_0_20_275)))
 (= (- (- (* (* (- 2.0) l_0_20_256) l_0_20_274) ?x133310) ?x133314) 0.0))))))
(assert
 (let ((?x133363 (* l_0_20_267 l_0_20_267)))
 (let ((?x129715 (* 2.0 l_0_20_267)))
 (let ((?x133361 (* ?x129715 l_0_20_278)))
 (let ((?x133359 (* l_0_20_266 l_0_20_266)))
 (let ((?x129712 (* 2.0 l_0_20_266)))
 (let ((?x133357 (* ?x129712 l_0_20_277)))
 (let ((?x133355 (* l_0_20_265 l_0_20_265)))
 (let ((?x129709 (* 2.0 l_0_20_265)))
 (let ((?x133353 (* ?x129709 l_0_20_276)))
 (let ((?x133351 (* l_0_20_264 l_0_20_264)))
 (let ((?x129706 (* 2.0 l_0_20_264)))
 (let ((?x133349 (* ?x129706 l_0_20_275)))
 (let ((?x133347 (* l_0_20_263 l_0_20_263)))
 (let ((?x133354 (+ (- (+ (- (* (* 2.0 l_0_20_263) l_0_20_274) ?x133347) ?x133349) ?x133351) ?x133353)))
 (= (- (+ (- (+ (- ?x133354 ?x133355) ?x133357) ?x133359) ?x133361) ?x133363) 0.0))))))))))))))))
(assert
 (let ((?x133408 (* l_0_20_280 l_0_20_280)))
 (let ((?x133406 (* l_0_20_279 l_0_20_279)))
 (let ((?x133404 (* l_0_20_278 l_0_20_278)))
 (let ((?x133402 (* l_0_20_277 l_0_20_277)))
 (let ((?x133400 (* l_0_20_276 l_0_20_276)))
 (let ((?x133398 (* l_0_20_275 l_0_20_275)))
 (let ((?x133396 (* l_0_20_274 l_0_20_274)))
 (let ((?x129715 (* 2.0 l_0_20_267)))
 (let ((?x133361 (* ?x129715 l_0_20_278)))
 (let ((?x129712 (* 2.0 l_0_20_266)))
 (let ((?x133357 (* ?x129712 l_0_20_277)))
 (let ((?x129709 (* 2.0 l_0_20_265)))
 (let ((?x133353 (* ?x129709 l_0_20_276)))
 (let ((?x129706 (* 2.0 l_0_20_264)))
 (let ((?x133349 (* ?x129706 l_0_20_275)))
 (let ((?x133395 (- (- (- (- (* (* (- 2.0) l_0_20_263) l_0_20_274) ?x133349) ?x133353) ?x133357) ?x133361)))
 (let ((?x133409 (+ (+ (+ (+ (+ (+ (+ ?x133395 ?x133396) ?x133398) ?x133400) ?x133402) ?x133404) ?x133406) ?x133408)))
 (= ?x133409 0.0)))))))))))))))))))
(assert
 (let ((?x133408 (* l_0_20_280 l_0_20_280)))
 (let ((?x133406 (* l_0_20_279 l_0_20_279)))
 (let ((?x133404 (* l_0_20_278 l_0_20_278)))
 (let ((?x133402 (* l_0_20_277 l_0_20_277)))
 (let ((?x133400 (* l_0_20_276 l_0_20_276)))
 (let ((?x133426 (- (- (* (- l_0_20_274) l_0_20_274) (* l_0_20_275 l_0_20_275)) ?x133400)))
 (= (- (- (- (- ?x133426 ?x133402) ?x133404) ?x133406) ?x133408) 0.0))))))))
(assert
 (let ((?x66441 (- (+ (* l_0_20_254 l_0_20_254) (* l_0_20_255 l_0_20_255)) (* (* 2.0 l_0_20_326) l_0_20_335))))
 (let ((?x112372 (- (- ?x66441 (* (* 2.0 l_0_20_327) l_0_20_336)) (* (* 2.0 l_0_20_362) l_0_20_371))))
 (let ((?x89262 (- (- ?x112372 (* (* 2.0 l_0_20_363) l_0_20_372)) (* (* 2.0 l_0_20_398) l_0_20_407))))
 (let ((?x133436 (- (- ?x89262 (* (* 2.0 l_0_20_399) l_0_20_408)) (* (* 2.0 l_0_20_434) l_0_20_443))))
 (let ((?x133440 (- (- ?x133436 (* (* 2.0 l_0_20_435) l_0_20_444)) (* (* 2.0 l_0_20_470) l_0_20_479))))
 (= (- ?x133440 (* (* 2.0 l_0_20_471) l_0_20_480)) 0.0)))))))
(assert
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x132919 (* ?x124920 l_0_20_257)))
 (let ((?x133477 (- (+ (* (* 2.0 l_0_20_254) l_0_20_256) ?x132919) (* (* 2.0 l_0_20_328) l_0_20_335))))
 (let ((?x133481 (- (- ?x133477 (* (* 2.0 l_0_20_329) l_0_20_336)) (* (* 2.0 l_0_20_330) l_0_20_337))))
 (let ((?x133485 (- (- ?x133481 (* (* 2.0 l_0_20_364) l_0_20_371)) (* (* 2.0 l_0_20_365) l_0_20_372))))
 (let ((?x133489 (- (- ?x133485 (* (* 2.0 l_0_20_366) l_0_20_373)) (* (* 2.0 l_0_20_400) l_0_20_407))))
 (let ((?x133493 (- (- ?x133489 (* (* 2.0 l_0_20_401) l_0_20_408)) (* (* 2.0 l_0_20_402) l_0_20_409))))
 (let ((?x133497 (- (- ?x133493 (* (* 2.0 l_0_20_436) l_0_20_443)) (* (* 2.0 l_0_20_437) l_0_20_444))))
 (let ((?x133501 (- (- ?x133497 (* (* 2.0 l_0_20_438) l_0_20_445)) (* (* 2.0 l_0_20_472) l_0_20_479))))
 (let ((?x133505 (- (- ?x133501 (* (* 2.0 l_0_20_473) l_0_20_480)) (* (* 2.0 l_0_20_474) l_0_20_481))))
 (= ?x133505 0.0))))))))))))
(assert
 (let ((?x133601 (* l_0_20_483 l_0_20_483)))
 (let ((?x133599 (* l_0_20_482 l_0_20_482)))
 (let ((?x133597 (* l_0_20_481 l_0_20_481)))
 (let ((?x133595 (* l_0_20_480 l_0_20_480)))
 (let ((?x133593 (* l_0_20_479 l_0_20_479)))
 (let ((?x133591 (* l_0_20_447 l_0_20_447)))
 (let ((?x133589 (* l_0_20_446 l_0_20_446)))
 (let ((?x133587 (* l_0_20_445 l_0_20_445)))
 (let ((?x133585 (* l_0_20_444 l_0_20_444)))
 (let ((?x133583 (* l_0_20_443 l_0_20_443)))
 (let ((?x133581 (* l_0_20_411 l_0_20_411)))
 (let ((?x133579 (* l_0_20_410 l_0_20_410)))
 (let ((?x133577 (* l_0_20_409 l_0_20_409)))
 (let ((?x133575 (* l_0_20_408 l_0_20_408)))
 (let ((?x133573 (* l_0_20_407 l_0_20_407)))
 (let ((?x133571 (* l_0_20_375 l_0_20_375)))
 (let ((?x133569 (* l_0_20_374 l_0_20_374)))
 (let ((?x133567 (* l_0_20_373 l_0_20_373)))
 (let ((?x133565 (* l_0_20_372 l_0_20_372)))
 (let ((?x133563 (* l_0_20_371 l_0_20_371)))
 (let ((?x133561 (* l_0_20_339 l_0_20_339)))
 (let ((?x133559 (* l_0_20_338 l_0_20_338)))
 (let ((?x133557 (* l_0_20_337 l_0_20_337)))
 (let ((?x133555 (* l_0_20_336 l_0_20_336)))
 (let ((?x133553 (* l_0_20_335 l_0_20_335)))
 (let ((?x124920 (* 2.0 l_0_20_255)))
 (let ((?x88869 (* ?x124920 l_0_20_264)))
 (let ((?x133558 (- (- (- (+ (* (* 2.0 l_0_20_254) l_0_20_263) ?x88869) ?x133553) ?x133555) ?x133557)))
 (let ((?x133572 (- (- (- (- (- (- (- ?x133558 ?x133559) ?x133561) ?x133563) ?x133565) ?x133567) ?x133569) ?x133571)))
 (let ((?x133586 (- (- (- (- (- (- (- ?x133572 ?x133573) ?x133575) ?x133577) ?x133579) ?x133581) ?x133583) ?x133585)))
 (let ((?x133600 (- (- (- (- (- (- (- ?x133586 ?x133587) ?x133589) ?x133591) ?x133593) ?x133595) ?x133597) ?x133599)))
 (= (- ?x133600 ?x133601) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x133290 (* l_0_20_258 l_0_20_258)))
 (let ((?x133643 (+ (+ (* l_0_20_256 l_0_20_256) (* l_0_20_257 l_0_20_257)) ?x133290)))
 (= ?x133643 0.0))))
(assert
 (let ((?x125644 (* 2.0 l_0_20_258)))
 (let ((?x133312 (* ?x125644 l_0_20_265)))
 (let ((?x125641 (* 2.0 l_0_20_257)))
 (let ((?x133308 (* ?x125641 l_0_20_264)))
 (= (+ (+ (* (* 2.0 l_0_20_256) l_0_20_263) ?x133308) ?x133312) 0.0))))))
(assert
 (let ((?x133363 (* l_0_20_267 l_0_20_267)))
 (let ((?x133359 (* l_0_20_266 l_0_20_266)))
 (let ((?x133355 (* l_0_20_265 l_0_20_265)))
 (let ((?x112511 (+ (+ (* l_0_20_263 l_0_20_263) (* l_0_20_264 l_0_20_264)) ?x133355)))
 (= (+ (+ ?x112511 ?x133359) ?x133363) 0.0))))))
(assert
 (let ((?x133665 (* l_0_20_471 l_0_20_471)))
 (let ((?x133663 (* l_0_20_470 l_0_20_470)))
 (let ((?x133661 (* l_0_20_435 l_0_20_435)))
 (let ((?x133659 (* l_0_20_434 l_0_20_434)))
 (let ((?x133657 (* l_0_20_399 l_0_20_399)))
 (let ((?x133655 (* l_0_20_398 l_0_20_398)))
 (let ((?x133653 (* l_0_20_363 l_0_20_363)))
 (let ((?x133651 (* l_0_20_362 l_0_20_362)))
 (let ((?x133652 (- (- (* (- l_0_20_326) l_0_20_326) (* l_0_20_327 l_0_20_327)) ?x133651)))
 (let ((?x133666 (- (- (- (- (- (- (- ?x133652 ?x133653) ?x133655) ?x133657) ?x133659) ?x133661) ?x133663) ?x133665)))
 (= ?x133666 0.0))))))))))))
(assert
 (let ((?x133691 (- (* (* (- 2.0) l_0_20_326) l_0_20_328) (* (* 2.0 l_0_20_327) l_0_20_329))))
 (let ((?x133695 (- (- ?x133691 (* (* 2.0 l_0_20_362) l_0_20_364)) (* (* 2.0 l_0_20_363) l_0_20_365))))
 (let ((?x133699 (- (- ?x133695 (* (* 2.0 l_0_20_398) l_0_20_400)) (* (* 2.0 l_0_20_399) l_0_20_401))))
 (let ((?x133703 (- (- ?x133699 (* (* 2.0 l_0_20_434) l_0_20_436)) (* (* 2.0 l_0_20_435) l_0_20_437))))
 (let ((?x133707 (- (- ?x133703 (* (* 2.0 l_0_20_470) l_0_20_472)) (* (* 2.0 l_0_20_471) l_0_20_473))))
 (= ?x133707 0.0)))))))
(assert
 (let ((?x133771 (* l_0_20_474 l_0_20_474)))
 (let ((?x133769 (* l_0_20_473 l_0_20_473)))
 (let ((?x133767 (* l_0_20_472 l_0_20_472)))
 (let ((?x133765 (* l_0_20_438 l_0_20_438)))
 (let ((?x133763 (* l_0_20_437 l_0_20_437)))
 (let ((?x133761 (* l_0_20_436 l_0_20_436)))
 (let ((?x133759 (* l_0_20_402 l_0_20_402)))
 (let ((?x133757 (* l_0_20_401 l_0_20_401)))
 (let ((?x133755 (* l_0_20_400 l_0_20_400)))
 (let ((?x133753 (* l_0_20_366 l_0_20_366)))
 (let ((?x133751 (* l_0_20_365 l_0_20_365)))
 (let ((?x133749 (* l_0_20_364 l_0_20_364)))
 (let ((?x133747 (* l_0_20_330 l_0_20_330)))
 (let ((?x133748 (- (- (* (- l_0_20_328) l_0_20_328) (* l_0_20_329 l_0_20_329)) ?x133747)))
 (let ((?x133762 (- (- (- (- (- (- (- ?x133748 ?x133749) ?x133751) ?x133753) ?x133755) ?x133757) ?x133759) ?x133761)))
 (= (- (- (- (- (- ?x133762 ?x133763) ?x133765) ?x133767) ?x133769) ?x133771) 0.0)))))))))))))))))
(assert
 (>= l_0_20_1 0.0))
(assert
 (>= l_0_20_3 0.0))
(assert
 (>= l_0_20_6 0.0))
(assert
 (>= l_0_20_10 0.0))
(assert
 (>= l_0_20_15 0.0))
(assert
 (>= l_0_20_21 0.0))
(assert
 (>= l_0_20_28 0.0))
(assert
 (>= l_0_20_36 0.0))
(assert
 (>= l_0_20_37 0.0))
(assert
 (>= l_0_20_39 0.0))
(assert
 (>= l_0_20_42 0.0))
(assert
 (>= l_0_20_46 0.0))
(assert
 (>= l_0_20_51 0.0))
(assert
 (>= l_0_20_57 0.0))
(assert
 (>= l_0_20_64 0.0))
(assert
 (>= l_0_20_72 0.0))
(assert
 (>= l_0_20_73 0.0))
(assert
 (>= l_0_20_75 0.0))
(assert
 (>= l_0_20_78 0.0))
(assert
 (>= l_0_20_82 0.0))
(assert
 (>= l_0_20_87 0.0))
(assert
 (>= l_0_20_93 0.0))
(assert
 (>= l_0_20_100 0.0))
(assert
 (>= l_0_20_108 0.0))
(assert
 (>= l_0_20_109 0.0))
(assert
 (>= l_0_20_111 0.0))
(assert
 (>= l_0_20_114 0.0))
(assert
 (>= l_0_20_118 0.0))
(assert
 (>= l_0_20_123 0.0))
(assert
 (>= l_0_20_129 0.0))
(assert
 (>= l_0_20_136 0.0))
(assert
 (>= l_0_20_144 0.0))
(assert
 (>= l_0_20_145 0.0))
(assert
 (>= l_0_20_147 0.0))
(assert
 (>= l_0_20_150 0.0))
(assert
 (>= l_0_20_154 0.0))
(assert
 (>= l_0_20_159 0.0))
(assert
 (>= l_0_20_165 0.0))
(assert
 (>= l_0_20_172 0.0))
(assert
 (>= l_0_20_180 0.0))
(assert
 (>= l_0_20_181 0.0))
(assert
 (>= l_0_20_183 0.0))
(assert
 (>= l_0_20_186 0.0))
(assert
 (>= l_0_20_190 0.0))
(assert
 (>= l_0_20_195 0.0))
(assert
 (>= l_0_20_201 0.0))
(assert
 (>= l_0_20_208 0.0))
(assert
 (>= l_0_20_216 0.0))
(assert
 (>= l_0_20_217 0.0))
(assert
 (>= l_0_20_219 0.0))
(assert
 (>= l_0_20_222 0.0))
(assert
 (>= l_0_20_226 0.0))
(assert
 (>= l_0_20_231 0.0))
(assert
 (>= l_0_20_237 0.0))
(assert
 (>= l_0_20_244 0.0))
(assert
 (>= l_0_20_252 0.0))
(assert
 (>= l_0_20_253 0.0))
(assert
 (>= l_0_20_255 0.0))
(assert
 (>= l_0_20_258 0.0))
(assert
 (>= l_0_20_262 0.0))
(assert
 (>= l_0_20_267 0.0))
(assert
 (>= l_0_20_273 0.0))
(assert
 (>= l_0_20_280 0.0))
(assert
 (>= l_0_20_288 0.0))
(assert
 (>= l_0_20_289 0.0))
(assert
 (>= l_0_20_291 0.0))
(assert
 (>= l_0_20_294 0.0))
(assert
 (>= l_0_20_298 0.0))
(assert
 (>= l_0_20_303 0.0))
(assert
 (>= l_0_20_309 0.0))
(assert
 (>= l_0_20_316 0.0))
(assert
 (>= l_0_20_324 0.0))
(assert
 (>= l_0_20_325 0.0))
(assert
 (>= l_0_20_327 0.0))
(assert
 (>= l_0_20_330 0.0))
(assert
 (>= l_0_20_334 0.0))
(assert
 (>= l_0_20_339 0.0))
(assert
 (>= l_0_20_345 0.0))
(assert
 (>= l_0_20_352 0.0))
(assert
 (>= l_0_20_360 0.0))
(assert
 (>= l_0_20_361 0.0))
(assert
 (>= l_0_20_363 0.0))
(assert
 (>= l_0_20_366 0.0))
(assert
 (>= l_0_20_370 0.0))
(assert
 (>= l_0_20_375 0.0))
(assert
 (>= l_0_20_381 0.0))
(assert
 (>= l_0_20_388 0.0))
(assert
 (>= l_0_20_396 0.0))
(assert
 (>= l_0_20_397 0.0))
(assert
 (>= l_0_20_399 0.0))
(assert
 (>= l_0_20_402 0.0))
(assert
 (>= l_0_20_406 0.0))
(assert
 (>= l_0_20_411 0.0))
(assert
 (>= l_0_20_417 0.0))
(assert
 (>= l_0_20_424 0.0))
(assert
 (>= l_0_20_432 0.0))
(assert
 (>= l_0_20_433 0.0))
(assert
 (>= l_0_20_435 0.0))
(assert
 (>= l_0_20_438 0.0))
(assert
 (>= l_0_20_442 0.0))
(assert
 (>= l_0_20_447 0.0))
(assert
 (>= l_0_20_453 0.0))
(assert
 (>= l_0_20_460 0.0))
(assert
 (>= l_0_20_468 0.0))
(assert
 (>= l_0_20_469 0.0))
(assert
 (>= l_0_20_471 0.0))
(assert
 (>= l_0_20_474 0.0))
(assert
 (>= l_0_20_478 0.0))
(assert
 (>= l_0_20_483 0.0))
(assert
 (>= l_0_20_489 0.0))
(assert
 (>= l_0_20_496 0.0))
(assert
 (>= l_0_20_504 0.0))
(assert
 (let ((?x133920 (* l_0_21_291 l_0_21_291)))
 (let ((?x133918 (* l_0_21_290 l_0_21_290)))
 (let ((?x133916 (* l_0_21_183 l_0_21_183)))
 (let ((?x133914 (* l_0_21_182 l_0_21_182)))
 (let ((?x133912 (* l_0_21_147 l_0_21_147)))
 (let ((?x133911 (* l_0_21_146 l_0_21_146)))
 (let ((?x133913 (+ ?x133911 ?x133912)))
 (let ((?x133924 (- (- (- (- (- ?x133913 ?x133914) ?x133916) ?x133918) ?x133920) (* (* 2.0 l_0_21_326) l_0_21_340))))
 (let ((?x133930 (- (- ?x133924 (* (* 2.0 l_0_21_327) l_0_21_341)) (* (* 2.0 l_0_21_362) l_0_21_376))))
 (let ((?x133936 (- (- ?x133930 (* (* 2.0 l_0_21_363) l_0_21_377)) (* (* 2.0 l_0_21_398) l_0_21_412))))
 (let ((?x133942 (- (- ?x133936 (* (* 2.0 l_0_21_399) l_0_21_413)) (* (* 2.0 l_0_21_434) l_0_21_448))))
 (let ((?x133948 (- (- ?x133942 (* (* 2.0 l_0_21_435) l_0_21_449)) (* (* 2.0 l_0_21_470) l_0_21_484))))
 (let ((?x133954 (- (- ?x133948 (* (* 2.0 l_0_21_471) l_0_21_485)) (* (* 2.0 l_0_21_506) l_0_21_520))))
 (= (+ (- ?x133954 (* (* 2.0 l_0_21_507) l_0_21_521)) 1.0) 0.0)))))))))))))))
(assert
 (let ((?x134010 (* l_0_21_219 l_0_21_219)))
 (let ((?x134013 (- (- (- (- _a_5_) (* l_0_21_218 l_0_21_218)) ?x134010) (* (* 2.0 l_0_21_326) l_0_21_353))))
 (let ((?x134017 (- (- ?x134013 (* (* 2.0 l_0_21_327) l_0_21_354)) (* (* 2.0 l_0_21_362) l_0_21_389))))
 (let ((?x134021 (- (- ?x134017 (* (* 2.0 l_0_21_363) l_0_21_390)) (* (* 2.0 l_0_21_398) l_0_21_425))))
 (let ((?x134025 (- (- ?x134021 (* (* 2.0 l_0_21_399) l_0_21_426)) (* (* 2.0 l_0_21_434) l_0_21_461))))
 (let ((?x134029 (- (- ?x134025 (* (* 2.0 l_0_21_435) l_0_21_462)) (* (* 2.0 l_0_21_470) l_0_21_497))))
 (let ((?x134033 (- (- ?x134029 (* (* 2.0 l_0_21_471) l_0_21_498)) (* (* 2.0 l_0_21_506) l_0_21_533))))
 (= (- ?x134033 (* (* 2.0 l_0_21_507) l_0_21_534)) 0.0)))))))))
(assert
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x134093 (* ?x134092 l_0_21_282)))
 (let ((?x134089 (* 2.0 l_0_21_254)))
 (let ((?x134090 (* ?x134089 l_0_21_281)))
 (let ((?x133912 (* l_0_21_147 l_0_21_147)))
 (let ((?x133911 (* l_0_21_146 l_0_21_146)))
 (let ((?x134078 (* l_0_21_111 l_0_21_111)))
 (let ((?x134079 (* (/ 1.0 2.0) ?x134078)))
 (let ((?x134081 (- (+ (+ (- _a_6_) (* (/ 1.0 2.0) (* l_0_21_110 l_0_21_110))) ?x134079) ?x133911)))
 (let ((?x134088 (- (- (- ?x134081 ?x133912) (* (* 2.0 l_0_21_218) l_0_21_238)) (* (* 2.0 l_0_21_219) l_0_21_239))))
 (let ((?x134100 (- (- (- (- ?x134088 ?x134090) ?x134093) (* (* 2.0 l_0_21_346) l_0_21_353)) (* (* 2.0 l_0_21_347) l_0_21_354))))
 (let ((?x134106 (- (- ?x134100 (* (* 2.0 l_0_21_348) l_0_21_355)) (* (* 2.0 l_0_21_349) l_0_21_356))))
 (let ((?x134112 (- (- ?x134106 (* (* 2.0 l_0_21_350) l_0_21_357)) (* (* 2.0 l_0_21_351) l_0_21_358))))
 (let ((?x134118 (- (- ?x134112 (* (* 2.0 l_0_21_352) l_0_21_359)) (* (* 2.0 l_0_21_382) l_0_21_389))))
 (let ((?x134124 (- (- ?x134118 (* (* 2.0 l_0_21_383) l_0_21_390)) (* (* 2.0 l_0_21_384) l_0_21_391))))
 (let ((?x134130 (- (- ?x134124 (* (* 2.0 l_0_21_385) l_0_21_392)) (* (* 2.0 l_0_21_386) l_0_21_393))))
 (let ((?x134136 (- (- ?x134130 (* (* 2.0 l_0_21_387) l_0_21_394)) (* (* 2.0 l_0_21_388) l_0_21_395))))
 (let ((?x134142 (- (- ?x134136 (* (* 2.0 l_0_21_418) l_0_21_425)) (* (* 2.0 l_0_21_419) l_0_21_426))))
 (let ((?x134148 (- (- ?x134142 (* (* 2.0 l_0_21_420) l_0_21_427)) (* (* 2.0 l_0_21_421) l_0_21_428))))
 (let ((?x134154 (- (- ?x134148 (* (* 2.0 l_0_21_422) l_0_21_429)) (* (* 2.0 l_0_21_423) l_0_21_430))))
 (let ((?x134160 (- (- ?x134154 (* (* 2.0 l_0_21_424) l_0_21_431)) (* (* 2.0 l_0_21_454) l_0_21_461))))
 (let ((?x134166 (- (- ?x134160 (* (* 2.0 l_0_21_455) l_0_21_462)) (* (* 2.0 l_0_21_456) l_0_21_463))))
 (let ((?x134172 (- (- ?x134166 (* (* 2.0 l_0_21_457) l_0_21_464)) (* (* 2.0 l_0_21_458) l_0_21_465))))
 (let ((?x134178 (- (- ?x134172 (* (* 2.0 l_0_21_459) l_0_21_466)) (* (* 2.0 l_0_21_460) l_0_21_467))))
 (let ((?x134184 (- (- ?x134178 (* (* 2.0 l_0_21_490) l_0_21_497)) (* (* 2.0 l_0_21_491) l_0_21_498))))
 (let ((?x134190 (- (- ?x134184 (* (* 2.0 l_0_21_492) l_0_21_499)) (* (* 2.0 l_0_21_493) l_0_21_500))))
 (let ((?x134196 (- (- ?x134190 (* (* 2.0 l_0_21_494) l_0_21_501)) (* (* 2.0 l_0_21_495) l_0_21_502))))
 (let ((?x134202 (- (- ?x134196 (* (* 2.0 l_0_21_496) l_0_21_503)) (* (* 2.0 l_0_21_526) l_0_21_533))))
 (let ((?x134208 (- (- ?x134202 (* (* 2.0 l_0_21_527) l_0_21_534)) (* (* 2.0 l_0_21_528) l_0_21_535))))
 (let ((?x134214 (- (- ?x134208 (* (* 2.0 l_0_21_529) l_0_21_536)) (* (* 2.0 l_0_21_530) l_0_21_537))))
 (let ((?x134220 (- (- ?x134214 (* (* 2.0 l_0_21_531) l_0_21_538)) (* (* 2.0 l_0_21_532) l_0_21_539))))
 (let ((?x134226 (- (- ?x134220 (* (* (/ 1.0 2.0) l_0_21_74) l_0_21_74)) (* (* (/ 1.0 2.0) l_0_21_75) l_0_21_75))))
 (= ?x134226 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x134386 (* l_0_21_39 l_0_21_39)))
 (let ((?x134384 (* l_0_21_38 l_0_21_38)))
 (let ((?x134364 (* l_0_21_3 l_0_21_3)))
 (let ((?x134358 (* l_0_21_2 l_0_21_2)))
 (let ((?x133916 (* l_0_21_183 l_0_21_183)))
 (let ((?x133914 (* l_0_21_182 l_0_21_182)))
 (let ((?x133912 (* l_0_21_147 l_0_21_147)))
 (let ((?x134357 (+ (+ (- (- (- _a_7_) (* l_0_21_146 l_0_21_146)) ?x133912) ?x133914) ?x133916)))
 (let ((?x134363 (- (- (- ?x134357 ?x134358) (* (* 2.0 l_0_21_218) l_0_21_220)) (* (* 2.0 l_0_21_219) l_0_21_221))))
 (let ((?x134371 (- (- (- ?x134363 ?x134364) (* (* 2.0 l_0_21_328) l_0_21_353)) (* (* 2.0 l_0_21_329) l_0_21_354))))
 (let ((?x134377 (- (- ?x134371 (* (* 2.0 l_0_21_330) l_0_21_355)) (* (* 2.0 l_0_21_364) l_0_21_389))))
 (let ((?x134383 (- (- ?x134377 (* (* 2.0 l_0_21_365) l_0_21_390)) (* (* 2.0 l_0_21_366) l_0_21_391))))
 (let ((?x134393 (- (- (+ (+ ?x134383 ?x134384) ?x134386) (* (* 2.0 l_0_21_400) l_0_21_425)) (* (* 2.0 l_0_21_401) l_0_21_426))))
 (let ((?x134399 (- (- ?x134393 (* (* 2.0 l_0_21_402) l_0_21_427)) (* (* 2.0 l_0_21_436) l_0_21_461))))
 (let ((?x134405 (- (- ?x134399 (* (* 2.0 l_0_21_437) l_0_21_462)) (* (* 2.0 l_0_21_438) l_0_21_463))))
 (let ((?x134411 (- (- ?x134405 (* (* 2.0 l_0_21_472) l_0_21_497)) (* (* 2.0 l_0_21_473) l_0_21_498))))
 (let ((?x134417 (- (- ?x134411 (* (* 2.0 l_0_21_474) l_0_21_499)) (* (* 2.0 l_0_21_508) l_0_21_533))))
 (let ((?x134423 (- (- ?x134417 (* (* 2.0 l_0_21_509) l_0_21_534)) (* (* 2.0 l_0_21_510) l_0_21_535))))
 (= ?x134423 0.0))))))))))))))))))))
(assert
 (let ((?x134511 (* l_0_21_37 l_0_21_37)))
 (let ((?x134509 (* l_0_21_181 l_0_21_181)))
 (let ((?x134510 (+ (- (* (- l_0_21_1) l_0_21_1) (* l_0_21_145 l_0_21_145)) ?x134509)))
 (= (+ ?x134510 ?x134511) 0.0)))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134558 (* ?x134557 l_0_21_38)))
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x134555 (* ?x134554 l_0_21_319)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x134552 (* ?x134551 l_0_21_318)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x134549 (* ?x134548 l_0_21_317)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134543 (* ?x134542 l_0_21_182)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134540 (* ?x134539 l_0_21_146)))
 (let ((?x134523 (+ (* (* (- 2.0) l_0_21_1) l_0_21_2) (* (* 2.0 l_0_21_101) l_0_21_76))))
 (let ((?x134529 (+ (+ ?x134523 (* (* 2.0 l_0_21_102) l_0_21_77)) (* (* 2.0 l_0_21_103) l_0_21_78))))
 (let ((?x134535 (- (- ?x134529 (* (* 2.0 l_0_21_112) l_0_21_137)) (* (* 2.0 l_0_21_113) l_0_21_138))))
 (let ((?x134547 (- (+ (- (- ?x134535 (* (* 2.0 l_0_21_114) l_0_21_139)) ?x134540) ?x134543) (* (* 2.0 l_0_21_217) l_0_21_220))))
 (= (+ (+ (+ (+ ?x134547 ?x134549) ?x134552) ?x134555) ?x134558) 0.0))))))))))))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134607 (* ?x134557 l_0_21_40)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134594 (* ?x134542 l_0_21_184)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134590 (* ?x134539 l_0_21_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_21_1) l_0_21_4) ?x134590) ?x134594) ?x134607) 0.0))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134622 (* ?x134557 l_0_21_43)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134620 (* ?x134542 l_0_21_187)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x112893 (* ?x134539 l_0_21_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_21_1) l_0_21_7) ?x112893) ?x134620) ?x134622) 0.0))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134641 (* ?x134557 l_0_21_47)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134639 (* ?x134542 l_0_21_191)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134637 (* ?x134539 l_0_21_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_21_1) l_0_21_11) ?x134637) ?x134639) ?x134641) 0.0))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134664 (* ?x134557 l_0_21_52)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134662 (* ?x134542 l_0_21_196)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134655 (* ?x134539 l_0_21_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_21_1) l_0_21_16) ?x134655) ?x134662) ?x134664) 0.0))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134686 (* ?x134557 l_0_21_58)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134684 (* ?x134542 l_0_21_202)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134682 (* ?x134539 l_0_21_166)))
 (let ((?x134590 (* ?x134539 l_0_21_148)))
 (let ((?x134680 (+ (* (* (- 2.0) l_0_21_1) l_0_21_22) (* (* 1.0 l_0_21_109) l_0_21_112))))
 (let ((?x134690 (- (+ (+ (- (- ?x134680 ?x134590) ?x134682) ?x134684) ?x134686) (* (* 1.0 l_0_21_73) l_0_21_76))))
 (= ?x134690 0.0)))))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134711 (* ?x134557 l_0_21_65)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134709 (* ?x134542 l_0_21_209)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134707 (* ?x134539 l_0_21_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_21_1) l_0_21_29) ?x134707) ?x134709) ?x134711) 0.0))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x134751 (* ?x134750 l_0_21_41)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x134748 (* ?x134747 l_0_21_40)))
 (let ((?x134744 (* 2.0 l_0_21_3)))
 (let ((?x134745 (* ?x134744 l_0_21_5)))
 (let ((?x134742 (* l_0_21_222 l_0_21_222)))
 (let ((?x134740 (* l_0_21_221 l_0_21_221)))
 (let ((?x134738 (* l_0_21_220 l_0_21_220)))
 (let ((?x134735 (* 2.0 l_0_21_2)))
 (let ((?x134736 (* ?x134735 l_0_21_4)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x134733 (* ?x134732 l_0_21_185)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x134730 (* ?x134729 l_0_21_184)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x134727 (* ?x134726 l_0_21_149)))
 (let ((?x134737 (- (+ (+ (- (* (* (- 2.0) l_0_21_146) l_0_21_148) ?x134727) ?x134730) ?x134733) ?x134736)))
 (= (+ (+ (- (- (- (- ?x134737 ?x134738) ?x134740) ?x134742) ?x134745) ?x134748) ?x134751) 0.0))))))))))))))))))))
(assert
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x134814 (* ?x134813 l_0_21_67)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x134811 (* ?x134810 l_0_21_66)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x134808 (* ?x134807 l_0_21_65)))
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x134805 (* ?x134750 l_0_21_44)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x134803 (* ?x134747 l_0_21_43)))
 (let ((?x134800 (* 2.0 l_0_21_31)))
 (let ((?x134801 (* ?x134800 l_0_21_6)))
 (let ((?x134797 (* 2.0 l_0_21_30)))
 (let ((?x134798 (* ?x134797 l_0_21_5)))
 (let ((?x134744 (* 2.0 l_0_21_3)))
 (let ((?x134795 (* ?x134744 l_0_21_8)))
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x134555 (* ?x134554 l_0_21_319)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x134552 (* ?x134551 l_0_21_318)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x134549 (* ?x134548 l_0_21_317)))
 (let ((?x134789 (* 2.0 l_0_21_29)))
 (let ((?x134790 (* ?x134789 l_0_21_4)))
 (let ((?x134735 (* 2.0 l_0_21_2)))
 (let ((?x134778 (* ?x134735 l_0_21_7)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x134776 (* ?x134732 l_0_21_188)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x134774 (* ?x134729 l_0_21_187)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x112937 (* ?x134726 l_0_21_152)))
 (let ((?x134779 (- (+ (+ (- (* (* (- 2.0) l_0_21_146) l_0_21_151) ?x112937) ?x134774) ?x134776) ?x134778)))
 (let ((?x134785 (- (- ?x134779 (* (* 2.0 l_0_21_220) l_0_21_223)) (* (* 2.0 l_0_21_221) l_0_21_224))))
 (let ((?x134793 (+ (+ (+ (- ?x134785 (* (* 2.0 l_0_21_222) l_0_21_225)) ?x134790) ?x134549) ?x134552)))
 (let ((?x134809 (- (+ (+ (+ (+ (- (+ ?x134793 ?x134555) ?x134795) ?x134798) ?x134801) ?x134803) ?x134805) ?x134808)))
 (= (- (- ?x134809 ?x134811) ?x134814) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x134889 (* ?x134750 l_0_21_48)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x134887 (* ?x134747 l_0_21_47)))
 (let ((?x134884 (* 2.0 l_0_21_258)))
 (let ((?x134885 (* ?x134884 l_0_21_283)))
 (let ((?x134881 (* 2.0 l_0_21_257)))
 (let ((?x134882 (* ?x134881 l_0_21_282)))
 (let ((?x134878 (* 2.0 l_0_21_256)))
 (let ((?x134879 (* ?x134878 l_0_21_281)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x134870 (* ?x134732 l_0_21_192)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x134868 (* ?x134729 l_0_21_191)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x134866 (* ?x134726 l_0_21_156)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x134864 (* ?x134863 l_0_21_155)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x113028 (* ?x113027 l_0_21_3)))
 (let ((?x134869 (+ (- (- (- (* (* (- 2.0) l_0_21_11) l_0_21_2) ?x113028) ?x134864) ?x134866) ?x134868)))
 (let ((?x134875 (- (- (+ ?x134869 ?x134870) (* (* 2.0 l_0_21_220) l_0_21_227)) (* (* 2.0 l_0_21_221) l_0_21_228))))
 (let ((?x134886 (+ (+ (+ (- ?x134875 (* (* 2.0 l_0_21_222) l_0_21_229)) ?x134879) ?x134882) ?x134885)))
 (= (+ (+ ?x134886 ?x134887) ?x134889) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x134961 (* ?x134750 l_0_21_53)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x134959 (* ?x134747 l_0_21_52)))
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x134555 (* ?x134554 l_0_21_319)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x134552 (* ?x134551 l_0_21_318)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x134549 (* ?x134548 l_0_21_317)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x134948 (* ?x134947 l_0_21_211)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x134945 (* ?x134944 l_0_21_210)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x134942 (* ?x134941 l_0_21_209)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x134939 (* ?x134732 l_0_21_197)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x134937 (* ?x134729 l_0_21_196)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x134935 (* ?x134934 l_0_21_3)))
 (let ((?x134931 (* 2.0 l_0_21_16)))
 (let ((?x134932 (* ?x134931 l_0_21_2)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x134929 (* ?x134928 l_0_21_175)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x134926 (* ?x134925 l_0_21_174)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x134913 (* ?x134911 l_0_21_173)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x90511 (* ?x134726 l_0_21_161)))
 (let ((?x134930 (+ (+ (+ (- (* (* (- 2.0) l_0_21_146) l_0_21_160) ?x90511) ?x134913) ?x134926) ?x134929)))
 (let ((?x134949 (- (- (- (+ (+ (- (- ?x134930 ?x134932) ?x134935) ?x134937) ?x134939) ?x134942) ?x134945) ?x134948)))
 (let ((?x134953 (- (- ?x134949 (* (* 2.0 l_0_21_220) l_0_21_232)) (* (* 2.0 l_0_21_221) l_0_21_233))))
 (let ((?x134958 (- (- (- (- ?x134953 (* (* 2.0 l_0_21_222) l_0_21_234)) ?x134549) ?x134552) ?x134555)))
 (= (+ (+ ?x134958 ?x134959) ?x134961) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x135055 (* ?x134750 l_0_21_59)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x135053 (* ?x134747 l_0_21_58)))
 (let ((?x134884 (* 2.0 l_0_21_258)))
 (let ((?x134885 (* ?x134884 l_0_21_283)))
 (let ((?x134881 (* 2.0 l_0_21_257)))
 (let ((?x134882 (* ?x134881 l_0_21_282)))
 (let ((?x134878 (* 2.0 l_0_21_256)))
 (let ((?x134879 (* ?x134878 l_0_21_281)))
 (let ((?x135047 (* 2.0 l_0_21_23)))
 (let ((?x135048 (* ?x135047 l_0_21_3)))
 (let ((?x134735 (* 2.0 l_0_21_2)))
 (let ((?x135039 (* ?x134735 l_0_21_22)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x135037 (* ?x134732 l_0_21_203)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x135035 (* ?x134729 l_0_21_202)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x135033 (* ?x134726 l_0_21_167)))
 (let ((?x134727 (* ?x134726 l_0_21_149)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x135030 (* ?x134863 l_0_21_166)))
 (let ((?x135028 (* ?x134863 l_0_21_148)))
 (let ((?x135027 (+ (* (* 1.0 l_0_21_110) l_0_21_112) (* (* 1.0 l_0_21_111) l_0_21_113))))
 (let ((?x135040 (- (+ (+ (- (- (- (- ?x135027 ?x135028) ?x135030) ?x134727) ?x135033) ?x135035) ?x135037) ?x135039)))
 (let ((?x135044 (- (- ?x135040 (* (* 2.0 l_0_21_220) l_0_21_238)) (* (* 2.0 l_0_21_221) l_0_21_239))))
 (let ((?x135051 (- (- (- (- ?x135044 (* (* 2.0 l_0_21_222) l_0_21_240)) ?x135048) ?x134879) ?x134882)))
 (let ((?x135059 (- (+ (+ (- ?x135051 ?x134885) ?x135053) ?x135055) (* (* 1.0 l_0_21_74) l_0_21_76))))
 (= (- ?x135059 (* (* 1.0 l_0_21_75) l_0_21_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x135128 (* ?x134750 l_0_21_66)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x135126 (* ?x134747 l_0_21_65)))
 (let ((?x134744 (* 2.0 l_0_21_3)))
 (let ((?x135124 (* ?x134744 l_0_21_30)))
 (let ((?x134735 (* 2.0 l_0_21_2)))
 (let ((?x135116 (* ?x134735 l_0_21_29)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x135114 (* ?x134732 l_0_21_210)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x135112 (* ?x134729 l_0_21_209)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x135110 (* ?x134726 l_0_21_174)))
 (let ((?x135117 (- (+ (+ (- (* (* (- 2.0) l_0_21_146) l_0_21_173) ?x135110) ?x135112) ?x135114) ?x135116)))
 (let ((?x135121 (- (- ?x135117 (* (* 2.0 l_0_21_220) l_0_21_245)) (* (* 2.0 l_0_21_221) l_0_21_246))))
 (let ((?x135129 (+ (+ (- (- ?x135121 (* (* 2.0 l_0_21_222) l_0_21_247)) ?x135124) ?x135126) ?x135128)))
 (= ?x135129 0.0)))))))))))))))))))
(assert
 (let ((?x135162 (* l_0_21_6 l_0_21_6)))
 (let ((?x135160 (* l_0_21_5 l_0_21_5)))
 (let ((?x135158 (* l_0_21_42 l_0_21_42)))
 (let ((?x135156 (* l_0_21_41 l_0_21_41)))
 (let ((?x135154 (* l_0_21_40 l_0_21_40)))
 (let ((?x135152 (* l_0_21_4 l_0_21_4)))
 (let ((?x113143 (* l_0_21_186 l_0_21_186)))
 (let ((?x90668 (* l_0_21_185 l_0_21_185)))
 (let ((?x90667 (* l_0_21_184 l_0_21_184)))
 (let ((?x90614 (* l_0_21_150 l_0_21_150)))
 (let ((?x90648 (- (- (* (- l_0_21_148) l_0_21_148) (* l_0_21_149 l_0_21_149)) ?x90614)))
 (let ((?x135159 (+ (+ (+ (- (+ (+ (+ ?x90648 ?x90667) ?x90668) ?x113143) ?x135152) ?x135154) ?x135156) ?x135158)))
 (= (- (- ?x135159 ?x135160) ?x135162) 0.0))))))))))))))
(assert
 (let ((?x135210 (* (* 2.0 l_0_21_6) l_0_21_9)))
 (let ((?x135207 (* (* 2.0 l_0_21_5) l_0_21_8)))
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x135204 (* ?x134813 l_0_21_45)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x135202 (* ?x134810 l_0_21_44)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x135200 (* ?x134807 l_0_21_43)))
 (let ((?x135198 (* (* 2.0 l_0_21_4) l_0_21_7)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x135195 (* ?x134947 l_0_21_189)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x135193 (* ?x134944 l_0_21_188)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x135191 (* ?x134941 l_0_21_187)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135189 (* ?x134928 l_0_21_153)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135187 (* ?x134925 l_0_21_152)))
 (let ((?x135194 (+ (+ (- (- (* (* (- 2.0) l_0_21_148) l_0_21_151) ?x135187) ?x135189) ?x135191) ?x135193)))
 (let ((?x135211 (- (- (+ (+ (+ (- (+ ?x135194 ?x135195) ?x135198) ?x135200) ?x135202) ?x135204) ?x135207) ?x135210)))
 (= ?x135211 0.0)))))))))))))))))))))))
(assert
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x135274 (* ?x134813 l_0_21_49)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x135272 (* ?x134810 l_0_21_48)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x135270 (* ?x134807 l_0_21_47)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x135268 (* ?x134947 l_0_21_193)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x135266 (* ?x134944 l_0_21_192)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x135264 (* ?x134941 l_0_21_191)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135262 (* ?x134928 l_0_21_157)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135260 (* ?x134925 l_0_21_156)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x135258 (* ?x134911 l_0_21_155)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x135256 (* ?x135255 l_0_21_6)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x135253 (* ?x113027 l_0_21_5)))
 (let ((?x135261 (- (- (- (- (* (* (- 2.0) l_0_21_11) l_0_21_4) ?x135253) ?x135256) ?x135258) ?x135260)))
 (let ((?x135275 (+ (+ (+ (+ (+ (+ (- ?x135261 ?x135262) ?x135264) ?x135266) ?x135268) ?x135270) ?x135272) ?x135274)))
 (= ?x135275 0.0))))))))))))))))))))))))))
(assert
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x135321 (* ?x134813 l_0_21_54)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x135319 (* ?x134810 l_0_21_53)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x135317 (* ?x134807 l_0_21_52)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x135315 (* ?x134947 l_0_21_198)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x135313 (* ?x134944 l_0_21_197)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x135311 (* ?x134941 l_0_21_196)))
 (let ((?x135308 (* 2.0 l_0_21_18)))
 (let ((?x135309 (* ?x135308 l_0_21_6)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x135306 (* ?x134934 l_0_21_5)))
 (let ((?x134931 (* 2.0 l_0_21_16)))
 (let ((?x135304 (* ?x134931 l_0_21_4)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135302 (* ?x134928 l_0_21_162)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135300 (* ?x134925 l_0_21_161)))
 (let ((?x135307 (- (- (- (- (* (* (- 2.0) l_0_21_148) l_0_21_160) ?x135300) ?x135302) ?x135304) ?x135306)))
 (let ((?x135322 (+ (+ (+ (+ (+ (+ (- ?x135307 ?x135309) ?x135311) ?x135313) ?x135315) ?x135317) ?x135319) ?x135321)))
 (= ?x135322 0.0))))))))))))))))))))))))))
(assert
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x135394 (* ?x134813 l_0_21_60)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x135392 (* ?x134810 l_0_21_59)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x135390 (* ?x134807 l_0_21_58)))
 (let ((?x135387 (* 2.0 l_0_21_24)))
 (let ((?x135388 (* ?x135387 l_0_21_6)))
 (let ((?x135047 (* 2.0 l_0_21_23)))
 (let ((?x135385 (* ?x135047 l_0_21_5)))
 (let ((?x135382 (* 2.0 l_0_21_22)))
 (let ((?x135383 (* ?x135382 l_0_21_4)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x135380 (* ?x134947 l_0_21_204)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x135378 (* ?x134944 l_0_21_203)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x135376 (* ?x134941 l_0_21_202)))
 (let ((?x90614 (* l_0_21_150 l_0_21_150)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135373 (* ?x134928 l_0_21_168)))
 (let ((?x90449 (* l_0_21_149 l_0_21_149)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135370 (* ?x134925 l_0_21_167)))
 (let ((?x135166 (* l_0_21_148 l_0_21_148)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x135367 (* ?x134911 l_0_21_166)))
 (let ((?x135355 (* l_0_21_114 l_0_21_114)))
 (let ((?x135356 (* (/ 1.0 2.0) ?x135355)))
 (let ((?x135349 (* l_0_21_113 l_0_21_113)))
 (let ((?x135351 (* (/ 1.0 2.0) ?x135349)))
 (let ((?x135345 (* l_0_21_112 l_0_21_112)))
 (let ((?x135347 (* (/ 1.0 2.0) ?x135345)))
 (let ((?x135374 (- (- (- (- (- (+ (+ ?x135347 ?x135351) ?x135356) ?x135367) ?x135166) ?x135370) ?x90449) ?x135373)))
 (let ((?x135389 (- (- (- (+ (+ (+ (- ?x135374 ?x90614) ?x135376) ?x135378) ?x135380) ?x135383) ?x135385) ?x135388)))
 (let ((?x135398 (- (+ (+ (+ ?x135389 ?x135390) ?x135392) ?x135394) (* (* (/ 1.0 2.0) l_0_21_76) l_0_21_76))))
 (let ((?x135404 (- (- ?x135398 (* (* (/ 1.0 2.0) l_0_21_77) l_0_21_77)) (* (* (/ 1.0 2.0) l_0_21_78) l_0_21_78))))
 (= ?x135404 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x134814 (* ?x134813 l_0_21_67)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x134811 (* ?x134810 l_0_21_66)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x134808 (* ?x134807 l_0_21_65)))
 (let ((?x134800 (* 2.0 l_0_21_31)))
 (let ((?x134801 (* ?x134800 l_0_21_6)))
 (let ((?x134797 (* 2.0 l_0_21_30)))
 (let ((?x134798 (* ?x134797 l_0_21_5)))
 (let ((?x134789 (* 2.0 l_0_21_29)))
 (let ((?x134790 (* ?x134789 l_0_21_4)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x134948 (* ?x134947 l_0_21_211)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x134945 (* ?x134944 l_0_21_210)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x134942 (* ?x134941 l_0_21_209)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x134929 (* ?x134928 l_0_21_175)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x134926 (* ?x134925 l_0_21_174)))
 (let ((?x135439 (+ (+ (- (- (* (* (- 2.0) l_0_21_148) l_0_21_173) ?x134926) ?x134929) ?x134942) ?x134945)))
 (let ((?x135446 (+ (+ (+ (- (- (- (+ ?x135439 ?x134948) ?x134790) ?x134798) ?x134801) ?x134808) ?x134811) ?x134814)))
 (= ?x135446 0.0))))))))))))))))))))))))))
(assert
 (let ((?x135475 (* l_0_21_9 l_0_21_9)))
 (let ((?x135473 (* l_0_21_8 l_0_21_8)))
 (let ((?x135471 (* l_0_21_7 l_0_21_7)))
 (let ((?x135469 (* l_0_21_46 l_0_21_46)))
 (let ((?x135467 (* l_0_21_45 l_0_21_45)))
 (let ((?x135465 (* l_0_21_44 l_0_21_44)))
 (let ((?x135463 (* l_0_21_43 l_0_21_43)))
 (let ((?x135461 (* l_0_21_190 l_0_21_190)))
 (let ((?x135459 (* l_0_21_189 l_0_21_189)))
 (let ((?x135457 (* l_0_21_188 l_0_21_188)))
 (let ((?x135455 (* l_0_21_187 l_0_21_187)))
 (let ((?x90844 (* l_0_21_154 l_0_21_154)))
 (let ((?x90851 (* l_0_21_153 l_0_21_153)))
 (let ((?x88194 (* l_0_21_152 l_0_21_152)))
 (let ((?x70191 (- (- (* (- l_0_21_10) l_0_21_10) (* l_0_21_151 l_0_21_151)) ?x88194)))
 (let ((?x135464 (+ (+ (+ (+ (+ (- (- ?x70191 ?x90851) ?x90844) ?x135455) ?x135457) ?x135459) ?x135461) ?x135463)))
 (= (- (- (- (+ (+ (+ ?x135464 ?x135465) ?x135467) ?x135469) ?x135471) ?x135473) ?x135475) 0.0))))))))))))))))))
(assert
 (let ((?x135536 (* 2.0 l_0_21_46)))
 (let ((?x135537 (* ?x135536 l_0_21_50)))
 (let ((?x135533 (* 2.0 l_0_21_45)))
 (let ((?x135534 (* ?x135533 l_0_21_49)))
 (let ((?x135530 (* 2.0 l_0_21_44)))
 (let ((?x135531 (* ?x135530 l_0_21_48)))
 (let ((?x135527 (* 2.0 l_0_21_43)))
 (let ((?x135528 (* ?x135527 l_0_21_47)))
 (let ((?x135524 (* 2.0 l_0_21_190)))
 (let ((?x135525 (* ?x135524 l_0_21_194)))
 (let ((?x135521 (* 2.0 l_0_21_189)))
 (let ((?x135522 (* ?x135521 l_0_21_193)))
 (let ((?x135518 (* 2.0 l_0_21_188)))
 (let ((?x135519 (* ?x135518 l_0_21_192)))
 (let ((?x135515 (* 2.0 l_0_21_187)))
 (let ((?x135516 (* ?x135515 l_0_21_191)))
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135513 (* ?x135512 l_0_21_158)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135510 (* ?x135509 l_0_21_157)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135507 (* ?x135506 l_0_21_156)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135504 (* ?x135503 l_0_21_155)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x135501 (* ?x135255 l_0_21_9)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x135499 (* ?x113027 l_0_21_8)))
 (let ((?x135496 (* 2.0 l_0_21_11)))
 (let ((?x135497 (* ?x135496 l_0_21_7)))
 (let ((?x135505 (- (- (- (- (* (* (- 2.0) l_0_21_10) l_0_21_14) ?x135497) ?x135499) ?x135501) ?x135504)))
 (let ((?x135526 (+ (+ (+ (+ (- (- (- ?x135505 ?x135507) ?x135510) ?x135513) ?x135516) ?x135519) ?x135522) ?x135525)))
 (= (+ (+ (+ (+ ?x135526 ?x135528) ?x135531) ?x135534) ?x135537) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x135536 (* 2.0 l_0_21_46)))
 (let ((?x135597 (* ?x135536 l_0_21_55)))
 (let ((?x135533 (* 2.0 l_0_21_45)))
 (let ((?x135595 (* ?x135533 l_0_21_54)))
 (let ((?x135530 (* 2.0 l_0_21_44)))
 (let ((?x135593 (* ?x135530 l_0_21_53)))
 (let ((?x135527 (* 2.0 l_0_21_43)))
 (let ((?x135591 (* ?x135527 l_0_21_52)))
 (let ((?x135524 (* 2.0 l_0_21_190)))
 (let ((?x135589 (* ?x135524 l_0_21_199)))
 (let ((?x135521 (* 2.0 l_0_21_189)))
 (let ((?x135587 (* ?x135521 l_0_21_198)))
 (let ((?x135518 (* 2.0 l_0_21_188)))
 (let ((?x135585 (* ?x135518 l_0_21_197)))
 (let ((?x135515 (* 2.0 l_0_21_187)))
 (let ((?x135583 (* ?x135515 l_0_21_196)))
 (let ((?x135308 (* 2.0 l_0_21_18)))
 (let ((?x135581 (* ?x135308 l_0_21_9)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x135579 (* ?x134934 l_0_21_8)))
 (let ((?x134931 (* 2.0 l_0_21_16)))
 (let ((?x135577 (* ?x134931 l_0_21_7)))
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135575 (* ?x135512 l_0_21_163)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135573 (* ?x135509 l_0_21_162)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135571 (* ?x135506 l_0_21_161)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135569 (* ?x135503 l_0_21_160)))
 (let ((?x135576 (- (- (- (- (* (* (- 2.0) l_0_21_10) l_0_21_19) ?x135569) ?x135571) ?x135573) ?x135575)))
 (let ((?x135590 (+ (+ (+ (+ (- (- (- ?x135576 ?x135577) ?x135579) ?x135581) ?x135583) ?x135585) ?x135587) ?x135589)))
 (= (+ (+ (+ (+ ?x135590 ?x135591) ?x135593) ?x135595) ?x135597) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x135536 (* 2.0 l_0_21_46)))
 (let ((?x135667 (* ?x135536 l_0_21_61)))
 (let ((?x135533 (* 2.0 l_0_21_45)))
 (let ((?x135665 (* ?x135533 l_0_21_60)))
 (let ((?x135530 (* 2.0 l_0_21_44)))
 (let ((?x135663 (* ?x135530 l_0_21_59)))
 (let ((?x135527 (* 2.0 l_0_21_43)))
 (let ((?x135661 (* ?x135527 l_0_21_58)))
 (let ((?x135387 (* 2.0 l_0_21_24)))
 (let ((?x135659 (* ?x135387 l_0_21_9)))
 (let ((?x135047 (* 2.0 l_0_21_23)))
 (let ((?x135657 (* ?x135047 l_0_21_8)))
 (let ((?x135382 (* 2.0 l_0_21_22)))
 (let ((?x135655 (* ?x135382 l_0_21_7)))
 (let ((?x135524 (* 2.0 l_0_21_190)))
 (let ((?x135653 (* ?x135524 l_0_21_205)))
 (let ((?x135521 (* 2.0 l_0_21_189)))
 (let ((?x135651 (* ?x135521 l_0_21_204)))
 (let ((?x135518 (* 2.0 l_0_21_188)))
 (let ((?x135649 (* ?x135518 l_0_21_203)))
 (let ((?x135515 (* 2.0 l_0_21_187)))
 (let ((?x135647 (* ?x135515 l_0_21_202)))
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135645 (* ?x135512 l_0_21_169)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135643 (* ?x135509 l_0_21_168)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135641 (* ?x135506 l_0_21_167)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135639 (* ?x135503 l_0_21_166)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135189 (* ?x134928 l_0_21_153)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135187 (* ?x134925 l_0_21_152)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x135635 (* ?x134911 l_0_21_151)))
 (let ((?x135628 (+ (* (* (- 2.0) l_0_21_10) l_0_21_25) (* (* 1.0 l_0_21_112) l_0_21_115))))
 (let ((?x135634 (+ (+ ?x135628 (* (* 1.0 l_0_21_113) l_0_21_116)) (* (* 1.0 l_0_21_114) l_0_21_117))))
 (let ((?x135646 (- (- (- (- (- (- (- ?x135634 ?x135635) ?x135187) ?x135189) ?x135639) ?x135641) ?x135643) ?x135645)))
 (let ((?x135660 (- (- (- (+ (+ (+ (+ ?x135646 ?x135647) ?x135649) ?x135651) ?x135653) ?x135655) ?x135657) ?x135659)))
 (let ((?x135671 (- (+ (+ (+ (+ ?x135660 ?x135661) ?x135663) ?x135665) ?x135667) (* (* 1.0 l_0_21_76) l_0_21_79))))
 (let ((?x135677 (- (- ?x135671 (* (* 1.0 l_0_21_77) l_0_21_80)) (* (* 1.0 l_0_21_78) l_0_21_81))))
 (= ?x135677 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x135536 (* 2.0 l_0_21_46)))
 (let ((?x135767 (* ?x135536 l_0_21_68)))
 (let ((?x135533 (* 2.0 l_0_21_45)))
 (let ((?x135765 (* ?x135533 l_0_21_67)))
 (let ((?x135530 (* 2.0 l_0_21_44)))
 (let ((?x135763 (* ?x135530 l_0_21_66)))
 (let ((?x135527 (* 2.0 l_0_21_43)))
 (let ((?x135761 (* ?x135527 l_0_21_65)))
 (let ((?x134800 (* 2.0 l_0_21_31)))
 (let ((?x135759 (* ?x134800 l_0_21_9)))
 (let ((?x134797 (* 2.0 l_0_21_30)))
 (let ((?x135757 (* ?x134797 l_0_21_8)))
 (let ((?x134789 (* 2.0 l_0_21_29)))
 (let ((?x135755 (* ?x134789 l_0_21_7)))
 (let ((?x135524 (* 2.0 l_0_21_190)))
 (let ((?x135753 (* ?x135524 l_0_21_212)))
 (let ((?x135521 (* 2.0 l_0_21_189)))
 (let ((?x135751 (* ?x135521 l_0_21_211)))
 (let ((?x135518 (* 2.0 l_0_21_188)))
 (let ((?x135749 (* ?x135518 l_0_21_210)))
 (let ((?x135515 (* 2.0 l_0_21_187)))
 (let ((?x135747 (* ?x135515 l_0_21_209)))
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135745 (* ?x135512 l_0_21_176)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135743 (* ?x135509 l_0_21_175)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135741 (* ?x135506 l_0_21_174)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135739 (* ?x135503 l_0_21_173)))
 (let ((?x135746 (- (- (- (- (* (* (- 2.0) l_0_21_10) l_0_21_32) ?x135739) ?x135741) ?x135743) ?x135745)))
 (let ((?x135760 (- (- (- (+ (+ (+ (+ ?x135746 ?x135747) ?x135749) ?x135751) ?x135753) ?x135755) ?x135757) ?x135759)))
 (= (+ (+ (+ (+ ?x135760 ?x135761) ?x135763) ?x135765) ?x135767) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x135843 (* l_0_21_51 l_0_21_51)))
 (let ((?x135841 (* l_0_21_50 l_0_21_50)))
 (let ((?x135839 (* l_0_21_49 l_0_21_49)))
 (let ((?x135837 (* l_0_21_48 l_0_21_48)))
 (let ((?x135835 (* l_0_21_47 l_0_21_47)))
 (let ((?x135833 (* l_0_21_195 l_0_21_195)))
 (let ((?x135831 (* l_0_21_194 l_0_21_194)))
 (let ((?x135829 (* l_0_21_193 l_0_21_193)))
 (let ((?x135827 (* l_0_21_192 l_0_21_192)))
 (let ((?x135825 (* l_0_21_191 l_0_21_191)))
 (let ((?x135823 (* l_0_21_159 l_0_21_159)))
 (let ((?x135821 (* l_0_21_158 l_0_21_158)))
 (let ((?x135819 (* l_0_21_157 l_0_21_157)))
 (let ((?x135817 (* l_0_21_156 l_0_21_156)))
 (let ((?x135815 (* l_0_21_155 l_0_21_155)))
 (let ((?x135813 (* l_0_21_15 l_0_21_15)))
 (let ((?x135811 (* l_0_21_14 l_0_21_14)))
 (let ((?x135798 (* l_0_21_13 l_0_21_13)))
 (let ((?x135810 (- (- (* (- l_0_21_11) l_0_21_11) (* l_0_21_12 l_0_21_12)) ?x135798)))
 (let ((?x135824 (- (- (- (- (- (- (- ?x135810 ?x135811) ?x135813) ?x135815) ?x135817) ?x135819) ?x135821) ?x135823)))
 (let ((?x135838 (+ (+ (+ (+ (+ (+ (+ ?x135824 ?x135825) ?x135827) ?x135829) ?x135831) ?x135833) ?x135835) ?x135837)))
 (= (+ (+ (+ ?x135838 ?x135839) ?x135841) ?x135843) 0.0)))))))))))))))))))))))
(assert
 (let ((?x135919 (* 2.0 l_0_21_51)))
 (let ((?x135920 (* ?x135919 l_0_21_56)))
 (let ((?x135916 (* 2.0 l_0_21_50)))
 (let ((?x135917 (* ?x135916 l_0_21_55)))
 (let ((?x135913 (* 2.0 l_0_21_49)))
 (let ((?x135914 (* ?x135913 l_0_21_54)))
 (let ((?x135910 (* 2.0 l_0_21_48)))
 (let ((?x135911 (* ?x135910 l_0_21_53)))
 (let ((?x135907 (* 2.0 l_0_21_47)))
 (let ((?x135908 (* ?x135907 l_0_21_52)))
 (let ((?x135904 (* 2.0 l_0_21_195)))
 (let ((?x135905 (* ?x135904 l_0_21_200)))
 (let ((?x135901 (* 2.0 l_0_21_194)))
 (let ((?x135902 (* ?x135901 l_0_21_199)))
 (let ((?x135898 (* 2.0 l_0_21_193)))
 (let ((?x135899 (* ?x135898 l_0_21_198)))
 (let ((?x135895 (* 2.0 l_0_21_192)))
 (let ((?x135896 (* ?x135895 l_0_21_197)))
 (let ((?x135892 (* 2.0 l_0_21_191)))
 (let ((?x135893 (* ?x135892 l_0_21_196)))
 (let ((?x135889 (* 2.0 l_0_21_159)))
 (let ((?x135890 (* ?x135889 l_0_21_164)))
 (let ((?x135886 (* 2.0 l_0_21_158)))
 (let ((?x135887 (* ?x135886 l_0_21_163)))
 (let ((?x135883 (* 2.0 l_0_21_157)))
 (let ((?x135884 (* ?x135883 l_0_21_162)))
 (let ((?x135880 (* 2.0 l_0_21_156)))
 (let ((?x135881 (* ?x135880 l_0_21_161)))
 (let ((?x135877 (* 2.0 l_0_21_155)))
 (let ((?x135878 (* ?x135877 l_0_21_160)))
 (let ((?x135874 (* 2.0 l_0_21_15)))
 (let ((?x135875 (* ?x135874 l_0_21_20)))
 (let ((?x135871 (* 2.0 l_0_21_14)))
 (let ((?x135872 (* ?x135871 l_0_21_19)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x135869 (* ?x135255 l_0_21_18)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x135867 (* ?x113027 l_0_21_17)))
 (let ((?x135876 (- (- (- (- (* (* (- 2.0) l_0_21_11) l_0_21_16) ?x135867) ?x135869) ?x135872) ?x135875)))
 (let ((?x135897 (+ (+ (- (- (- (- (- ?x135876 ?x135878) ?x135881) ?x135884) ?x135887) ?x135890) ?x135893) ?x135896)))
 (let ((?x135918 (+ (+ (+ (+ (+ (+ (+ ?x135897 ?x135899) ?x135902) ?x135905) ?x135908) ?x135911) ?x135914) ?x135917)))
 (= (+ ?x135918 ?x135920) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x135919 (* 2.0 l_0_21_51)))
 (let ((?x136014 (* ?x135919 l_0_21_62)))
 (let ((?x135916 (* 2.0 l_0_21_50)))
 (let ((?x136012 (* ?x135916 l_0_21_61)))
 (let ((?x135913 (* 2.0 l_0_21_49)))
 (let ((?x136010 (* ?x135913 l_0_21_60)))
 (let ((?x135910 (* 2.0 l_0_21_48)))
 (let ((?x136008 (* ?x135910 l_0_21_59)))
 (let ((?x135907 (* 2.0 l_0_21_47)))
 (let ((?x136006 (* ?x135907 l_0_21_58)))
 (let ((?x135904 (* 2.0 l_0_21_195)))
 (let ((?x136004 (* ?x135904 l_0_21_206)))
 (let ((?x135901 (* 2.0 l_0_21_194)))
 (let ((?x136002 (* ?x135901 l_0_21_205)))
 (let ((?x135898 (* 2.0 l_0_21_193)))
 (let ((?x136000 (* ?x135898 l_0_21_204)))
 (let ((?x135895 (* 2.0 l_0_21_192)))
 (let ((?x135998 (* ?x135895 l_0_21_203)))
 (let ((?x135892 (* 2.0 l_0_21_191)))
 (let ((?x135996 (* ?x135892 l_0_21_202)))
 (let ((?x135889 (* 2.0 l_0_21_159)))
 (let ((?x135994 (* ?x135889 l_0_21_170)))
 (let ((?x135886 (* 2.0 l_0_21_158)))
 (let ((?x135992 (* ?x135886 l_0_21_169)))
 (let ((?x135883 (* 2.0 l_0_21_157)))
 (let ((?x135990 (* ?x135883 l_0_21_168)))
 (let ((?x135880 (* 2.0 l_0_21_156)))
 (let ((?x135988 (* ?x135880 l_0_21_167)))
 (let ((?x135877 (* 2.0 l_0_21_155)))
 (let ((?x135986 (* ?x135877 l_0_21_166)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135262 (* ?x134928 l_0_21_157)))
 (let ((?x135874 (* 2.0 l_0_21_15)))
 (let ((?x135983 (* ?x135874 l_0_21_26)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135260 (* ?x134925 l_0_21_156)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x135258 (* ?x134911 l_0_21_155)))
 (let ((?x135871 (* 2.0 l_0_21_14)))
 (let ((?x135979 (* ?x135871 l_0_21_25)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x135964 (* ?x135255 l_0_21_24)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x135960 (* ?x113027 l_0_21_23)))
 (let ((?x135950 (+ (* (* (- 2.0) l_0_21_11) l_0_21_22) (* (* 1.0 l_0_21_112) l_0_21_119))))
 (let ((?x135958 (+ (+ ?x135950 (* (* 1.0 l_0_21_113) l_0_21_120)) (* (* 1.0 l_0_21_114) l_0_21_121))))
 (let ((?x135985 (- (- (- (- (- (- (- ?x135958 ?x135960) ?x135964) ?x135979) ?x135258) ?x135260) ?x135983) ?x135262)))
 (let ((?x135999 (+ (+ (- (- (- (- (- ?x135985 ?x135986) ?x135988) ?x135990) ?x135992) ?x135994) ?x135996) ?x135998)))
 (let ((?x136013 (+ (+ (+ (+ (+ (+ (+ ?x135999 ?x136000) ?x136002) ?x136004) ?x136006) ?x136008) ?x136010) ?x136012)))
 (let ((?x136019 (- (- (+ ?x136013 ?x136014) (* (* 1.0 l_0_21_76) l_0_21_83)) (* (* 1.0 l_0_21_77) l_0_21_84))))
 (= (- ?x136019 (* (* 1.0 l_0_21_78) l_0_21_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x135919 (* 2.0 l_0_21_51)))
 (let ((?x136067 (* ?x135919 l_0_21_69)))
 (let ((?x135916 (* 2.0 l_0_21_50)))
 (let ((?x136065 (* ?x135916 l_0_21_68)))
 (let ((?x135913 (* 2.0 l_0_21_49)))
 (let ((?x136063 (* ?x135913 l_0_21_67)))
 (let ((?x135910 (* 2.0 l_0_21_48)))
 (let ((?x136061 (* ?x135910 l_0_21_66)))
 (let ((?x135907 (* 2.0 l_0_21_47)))
 (let ((?x136059 (* ?x135907 l_0_21_65)))
 (let ((?x135904 (* 2.0 l_0_21_195)))
 (let ((?x136057 (* ?x135904 l_0_21_213)))
 (let ((?x135901 (* 2.0 l_0_21_194)))
 (let ((?x136055 (* ?x135901 l_0_21_212)))
 (let ((?x135898 (* 2.0 l_0_21_193)))
 (let ((?x136053 (* ?x135898 l_0_21_211)))
 (let ((?x135895 (* 2.0 l_0_21_192)))
 (let ((?x136051 (* ?x135895 l_0_21_210)))
 (let ((?x135892 (* 2.0 l_0_21_191)))
 (let ((?x136049 (* ?x135892 l_0_21_209)))
 (let ((?x135889 (* 2.0 l_0_21_159)))
 (let ((?x136047 (* ?x135889 l_0_21_177)))
 (let ((?x135886 (* 2.0 l_0_21_158)))
 (let ((?x136045 (* ?x135886 l_0_21_176)))
 (let ((?x135883 (* 2.0 l_0_21_157)))
 (let ((?x136043 (* ?x135883 l_0_21_175)))
 (let ((?x135880 (* 2.0 l_0_21_156)))
 (let ((?x136041 (* ?x135880 l_0_21_174)))
 (let ((?x135877 (* 2.0 l_0_21_155)))
 (let ((?x136039 (* ?x135877 l_0_21_173)))
 (let ((?x135874 (* 2.0 l_0_21_15)))
 (let ((?x136037 (* ?x135874 l_0_21_33)))
 (let ((?x135871 (* 2.0 l_0_21_14)))
 (let ((?x91247 (* ?x135871 l_0_21_32)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x70406 (* ?x135255 l_0_21_31)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x113755 (* ?x113027 l_0_21_30)))
 (let ((?x136038 (- (- (- (- (* (* (- 2.0) l_0_21_11) l_0_21_29) ?x113755) ?x70406) ?x91247) ?x136037)))
 (let ((?x136052 (+ (+ (- (- (- (- (- ?x136038 ?x136039) ?x136041) ?x136043) ?x136045) ?x136047) ?x136049) ?x136051)))
 (let ((?x136066 (+ (+ (+ (+ (+ (+ (+ ?x136052 ?x136053) ?x136055) ?x136057) ?x136059) ?x136061) ?x136063) ?x136065)))
 (= (+ ?x136066 ?x136067) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136172 (* l_0_21_57 l_0_21_57)))
 (let ((?x136170 (* l_0_21_56 l_0_21_56)))
 (let ((?x136168 (* l_0_21_55 l_0_21_55)))
 (let ((?x136166 (* l_0_21_54 l_0_21_54)))
 (let ((?x136164 (* l_0_21_53 l_0_21_53)))
 (let ((?x136162 (* l_0_21_52 l_0_21_52)))
 (let ((?x136160 (* l_0_21_21 l_0_21_21)))
 (let ((?x136158 (* l_0_21_201 l_0_21_201)))
 (let ((?x136156 (* l_0_21_200 l_0_21_200)))
 (let ((?x136154 (* l_0_21_20 l_0_21_20)))
 (let ((?x136152 (* l_0_21_199 l_0_21_199)))
 (let ((?x136150 (* l_0_21_198 l_0_21_198)))
 (let ((?x136148 (* l_0_21_197 l_0_21_197)))
 (let ((?x136146 (* l_0_21_196 l_0_21_196)))
 (let ((?x136144 (* l_0_21_19 l_0_21_19)))
 (let ((?x136142 (* l_0_21_18 l_0_21_18)))
 (let ((?x136140 (* l_0_21_17 l_0_21_17)))
 (let ((?x136138 (* l_0_21_165 l_0_21_165)))
 (let ((?x136123 (* l_0_21_164 l_0_21_164)))
 (let ((?x136120 (* l_0_21_163 l_0_21_163)))
 (let ((?x136116 (* l_0_21_162 l_0_21_162)))
 (let ((?x136112 (* l_0_21_161 l_0_21_161)))
 (let ((?x136114 (- (- (* (- l_0_21_16) l_0_21_16) (* l_0_21_160 l_0_21_160)) ?x136112)))
 (let ((?x136145 (- (- (- (- (- (- (- ?x136114 ?x136116) ?x136120) ?x136123) ?x136138) ?x136140) ?x136142) ?x136144)))
 (let ((?x136159 (+ (+ (- (+ (+ (+ (+ ?x136145 ?x136146) ?x136148) ?x136150) ?x136152) ?x136154) ?x136156) ?x136158)))
 (let ((?x136173 (+ (+ (+ (+ (+ (+ (- ?x136159 ?x136160) ?x136162) ?x136164) ?x136166) ?x136168) ?x136170) ?x136172)))
 (= ?x136173 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x136284 (* 2.0 l_0_21_57)))
 (let ((?x136285 (* ?x136284 l_0_21_63)))
 (let ((?x136281 (* 2.0 l_0_21_56)))
 (let ((?x136282 (* ?x136281 l_0_21_62)))
 (let ((?x136278 (* 2.0 l_0_21_55)))
 (let ((?x136279 (* ?x136278 l_0_21_61)))
 (let ((?x136275 (* 2.0 l_0_21_54)))
 (let ((?x136276 (* ?x136275 l_0_21_60)))
 (let ((?x136272 (* 2.0 l_0_21_53)))
 (let ((?x136273 (* ?x136272 l_0_21_59)))
 (let ((?x136269 (* 2.0 l_0_21_52)))
 (let ((?x136270 (* ?x136269 l_0_21_58)))
 (let ((?x136266 (* 2.0 l_0_21_21)))
 (let ((?x136267 (* ?x136266 l_0_21_27)))
 (let ((?x136263 (* 2.0 l_0_21_201)))
 (let ((?x136264 (* ?x136263 l_0_21_207)))
 (let ((?x136260 (* 2.0 l_0_21_200)))
 (let ((?x136261 (* ?x136260 l_0_21_206)))
 (let ((?x136257 (* 2.0 l_0_21_20)))
 (let ((?x136258 (* ?x136257 l_0_21_26)))
 (let ((?x136254 (* 2.0 l_0_21_199)))
 (let ((?x136255 (* ?x136254 l_0_21_205)))
 (let ((?x136251 (* 2.0 l_0_21_198)))
 (let ((?x136252 (* ?x136251 l_0_21_204)))
 (let ((?x136248 (* 2.0 l_0_21_197)))
 (let ((?x136249 (* ?x136248 l_0_21_203)))
 (let ((?x136245 (* 2.0 l_0_21_196)))
 (let ((?x136246 (* ?x136245 l_0_21_202)))
 (let ((?x136242 (* 2.0 l_0_21_19)))
 (let ((?x136243 (* ?x136242 l_0_21_25)))
 (let ((?x135308 (* 2.0 l_0_21_18)))
 (let ((?x136240 (* ?x135308 l_0_21_24)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x136238 (* ?x134934 l_0_21_23)))
 (let ((?x136235 (* 2.0 l_0_21_165)))
 (let ((?x136236 (* ?x136235 l_0_21_171)))
 (let ((?x136232 (* 2.0 l_0_21_164)))
 (let ((?x136233 (* ?x136232 l_0_21_170)))
 (let ((?x136229 (* 2.0 l_0_21_163)))
 (let ((?x136230 (* ?x136229 l_0_21_169)))
 (let ((?x136226 (* 2.0 l_0_21_162)))
 (let ((?x136227 (* ?x136226 l_0_21_168)))
 (let ((?x136223 (* 2.0 l_0_21_161)))
 (let ((?x136224 (* ?x136223 l_0_21_167)))
 (let ((?x136220 (* 2.0 l_0_21_160)))
 (let ((?x136221 (* ?x136220 l_0_21_166)))
 (let ((?x134931 (* 2.0 l_0_21_16)))
 (let ((?x136218 (* ?x134931 l_0_21_22)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135302 (* ?x134928 l_0_21_162)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135300 (* ?x134925 l_0_21_161)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x136214 (* ?x134911 l_0_21_160)))
 (let ((?x136211 (+ (* (* 1.0 l_0_21_112) l_0_21_124) (* (* 1.0 l_0_21_113) l_0_21_125))))
 (let ((?x136217 (- (- (- (+ ?x136211 (* (* 1.0 l_0_21_114) l_0_21_126)) ?x136214) ?x135300) ?x135302)))
 (let ((?x136237 (- (- (- (- (- (- (- ?x136217 ?x136218) ?x136221) ?x136224) ?x136227) ?x136230) ?x136233) ?x136236)))
 (let ((?x136256 (+ (+ (+ (+ (- (- (- ?x136237 ?x136238) ?x136240) ?x136243) ?x136246) ?x136249) ?x136252) ?x136255)))
 (let ((?x136277 (+ (+ (+ (- (+ (+ (- ?x136256 ?x136258) ?x136261) ?x136264) ?x136267) ?x136270) ?x136273) ?x136276)))
 (let ((?x136288 (- (+ (+ (+ ?x136277 ?x136279) ?x136282) ?x136285) (* (* 1.0 l_0_21_76) l_0_21_88))))
 (let ((?x136292 (- (- ?x136288 (* (* 1.0 l_0_21_77) l_0_21_89)) (* (* 1.0 l_0_21_78) l_0_21_90))))
 (= ?x136292 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136284 (* 2.0 l_0_21_57)))
 (let ((?x136420 (* ?x136284 l_0_21_70)))
 (let ((?x136281 (* 2.0 l_0_21_56)))
 (let ((?x136418 (* ?x136281 l_0_21_69)))
 (let ((?x136278 (* 2.0 l_0_21_55)))
 (let ((?x136416 (* ?x136278 l_0_21_68)))
 (let ((?x136275 (* 2.0 l_0_21_54)))
 (let ((?x136414 (* ?x136275 l_0_21_67)))
 (let ((?x136272 (* 2.0 l_0_21_53)))
 (let ((?x136412 (* ?x136272 l_0_21_66)))
 (let ((?x136269 (* 2.0 l_0_21_52)))
 (let ((?x136410 (* ?x136269 l_0_21_65)))
 (let ((?x136266 (* 2.0 l_0_21_21)))
 (let ((?x136408 (* ?x136266 l_0_21_34)))
 (let ((?x136263 (* 2.0 l_0_21_201)))
 (let ((?x136406 (* ?x136263 l_0_21_214)))
 (let ((?x136260 (* 2.0 l_0_21_200)))
 (let ((?x136404 (* ?x136260 l_0_21_213)))
 (let ((?x136257 (* 2.0 l_0_21_20)))
 (let ((?x136402 (* ?x136257 l_0_21_33)))
 (let ((?x136254 (* 2.0 l_0_21_199)))
 (let ((?x136400 (* ?x136254 l_0_21_212)))
 (let ((?x136251 (* 2.0 l_0_21_198)))
 (let ((?x136398 (* ?x136251 l_0_21_211)))
 (let ((?x136248 (* 2.0 l_0_21_197)))
 (let ((?x136396 (* ?x136248 l_0_21_210)))
 (let ((?x136245 (* 2.0 l_0_21_196)))
 (let ((?x136394 (* ?x136245 l_0_21_209)))
 (let ((?x136242 (* 2.0 l_0_21_19)))
 (let ((?x136392 (* ?x136242 l_0_21_32)))
 (let ((?x135308 (* 2.0 l_0_21_18)))
 (let ((?x136390 (* ?x135308 l_0_21_31)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x136388 (* ?x134934 l_0_21_30)))
 (let ((?x136235 (* 2.0 l_0_21_165)))
 (let ((?x136386 (* ?x136235 l_0_21_178)))
 (let ((?x136232 (* 2.0 l_0_21_164)))
 (let ((?x136384 (* ?x136232 l_0_21_177)))
 (let ((?x136229 (* 2.0 l_0_21_163)))
 (let ((?x136382 (* ?x136229 l_0_21_176)))
 (let ((?x136226 (* 2.0 l_0_21_162)))
 (let ((?x136380 (* ?x136226 l_0_21_175)))
 (let ((?x136223 (* 2.0 l_0_21_161)))
 (let ((?x136378 (* ?x136223 l_0_21_174)))
 (let ((?x136220 (* 2.0 l_0_21_160)))
 (let ((?x136376 (* ?x136220 l_0_21_173)))
 (let ((?x136383 (- (- (- (- (* (* (- 2.0) l_0_21_16) l_0_21_29) ?x136376) ?x136378) ?x136380) ?x136382)))
 (let ((?x136397 (+ (+ (- (- (- (- (- ?x136383 ?x136384) ?x136386) ?x136388) ?x136390) ?x136392) ?x136394) ?x136396)))
 (let ((?x136411 (+ (- (+ (+ (- (+ (+ ?x136397 ?x136398) ?x136400) ?x136402) ?x136404) ?x136406) ?x136408) ?x136410)))
 (= (+ (+ (+ (+ (+ ?x136411 ?x136412) ?x136414) ?x136416) ?x136418) ?x136420) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136515 (* l_0_21_64 l_0_21_64)))
 (let ((?x136513 (* l_0_21_63 l_0_21_63)))
 (let ((?x136511 (* l_0_21_62 l_0_21_62)))
 (let ((?x136509 (* l_0_21_61 l_0_21_61)))
 (let ((?x136507 (* l_0_21_60 l_0_21_60)))
 (let ((?x136505 (* l_0_21_59 l_0_21_59)))
 (let ((?x136503 (* l_0_21_58 l_0_21_58)))
 (let ((?x136501 (* l_0_21_28 l_0_21_28)))
 (let ((?x136499 (* l_0_21_27 l_0_21_27)))
 (let ((?x136497 (* l_0_21_26 l_0_21_26)))
 (let ((?x136495 (* l_0_21_25 l_0_21_25)))
 (let ((?x136493 (* l_0_21_24 l_0_21_24)))
 (let ((?x136491 (* l_0_21_23 l_0_21_23)))
 (let ((?x136489 (* l_0_21_22 l_0_21_22)))
 (let ((?x136487 (* l_0_21_208 l_0_21_208)))
 (let ((?x136485 (* l_0_21_207 l_0_21_207)))
 (let ((?x136483 (* l_0_21_206 l_0_21_206)))
 (let ((?x136481 (* l_0_21_205 l_0_21_205)))
 (let ((?x136479 (* l_0_21_204 l_0_21_204)))
 (let ((?x136477 (* l_0_21_203 l_0_21_203)))
 (let ((?x136475 (* l_0_21_202 l_0_21_202)))
 (let ((?x136473 (* l_0_21_172 l_0_21_172)))
 (let ((?x136471 (* l_0_21_171 l_0_21_171)))
 (let ((?x136469 (* l_0_21_170 l_0_21_170)))
 (let ((?x136467 (* l_0_21_169 l_0_21_169)))
 (let ((?x136465 (* l_0_21_168 l_0_21_168)))
 (let ((?x136463 (* l_0_21_167 l_0_21_167)))
 (let ((?x136461 (* l_0_21_166 l_0_21_166)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135373 (* ?x134928 l_0_21_168)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135370 (* ?x134925 l_0_21_167)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x135367 (* ?x134911 l_0_21_166)))
 (let ((?x136443 (+ (* (* 1.0 l_0_21_112) l_0_21_130) (* (* 1.0 l_0_21_113) l_0_21_131))))
 (let ((?x136460 (- (- (- (+ ?x136443 (* (* 1.0 l_0_21_114) l_0_21_132)) ?x135367) ?x135370) ?x135373)))
 (let ((?x136474 (- (- (- (- (- (- (- ?x136460 ?x136461) ?x136463) ?x136465) ?x136467) ?x136469) ?x136471) ?x136473)))
 (let ((?x136488 (+ (+ (+ (+ (+ (+ (+ ?x136474 ?x136475) ?x136477) ?x136479) ?x136481) ?x136483) ?x136485) ?x136487)))
 (let ((?x136502 (- (- (- (- (- (- (- ?x136488 ?x136489) ?x136491) ?x136493) ?x136495) ?x136497) ?x136499) ?x136501)))
 (let ((?x136516 (+ (+ (+ (+ (+ (+ (+ ?x136502 ?x136503) ?x136505) ?x136507) ?x136509) ?x136511) ?x136513) ?x136515)))
 (let ((?x136520 (- (- ?x136516 (* (* 1.0 l_0_21_76) l_0_21_94)) (* (* 1.0 l_0_21_77) l_0_21_95))))
 (= (- ?x136520 (* (* 1.0 l_0_21_78) l_0_21_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136665 (* (* 2.0 l_0_21_64) l_0_21_71)))
 (let ((?x136662 (* (* 2.0 l_0_21_63) l_0_21_70)))
 (let ((?x136659 (* (* 2.0 l_0_21_62) l_0_21_69)))
 (let ((?x136656 (* (* 2.0 l_0_21_61) l_0_21_68)))
 (let ((?x136653 (* (* 2.0 l_0_21_60) l_0_21_67)))
 (let ((?x136650 (* (* 2.0 l_0_21_59) l_0_21_66)))
 (let ((?x136647 (* (* 2.0 l_0_21_58) l_0_21_65)))
 (let ((?x136644 (* (* 2.0 l_0_21_28) l_0_21_35)))
 (let ((?x136641 (* (* 2.0 l_0_21_27) l_0_21_34)))
 (let ((?x136638 (* (* 2.0 l_0_21_26) l_0_21_33)))
 (let ((?x136635 (* (* 2.0 l_0_21_25) l_0_21_32)))
 (let ((?x135387 (* 2.0 l_0_21_24)))
 (let ((?x136632 (* ?x135387 l_0_21_31)))
 (let ((?x135047 (* 2.0 l_0_21_23)))
 (let ((?x136630 (* ?x135047 l_0_21_30)))
 (let ((?x135382 (* 2.0 l_0_21_22)))
 (let ((?x136628 (* ?x135382 l_0_21_29)))
 (let ((?x136626 (* (* 2.0 l_0_21_208) l_0_21_215)))
 (let ((?x136623 (* (* 2.0 l_0_21_207) l_0_21_214)))
 (let ((?x136620 (* (* 2.0 l_0_21_206) l_0_21_213)))
 (let ((?x136617 (* (* 2.0 l_0_21_205) l_0_21_212)))
 (let ((?x136614 (* (* 2.0 l_0_21_204) l_0_21_211)))
 (let ((?x136611 (* (* 2.0 l_0_21_203) l_0_21_210)))
 (let ((?x136608 (* (* 2.0 l_0_21_202) l_0_21_209)))
 (let ((?x136605 (* (* 2.0 l_0_21_172) l_0_21_179)))
 (let ((?x136602 (* (* 2.0 l_0_21_171) l_0_21_178)))
 (let ((?x136599 (* (* 2.0 l_0_21_170) l_0_21_177)))
 (let ((?x136596 (* (* 2.0 l_0_21_169) l_0_21_176)))
 (let ((?x136593 (* (* 2.0 l_0_21_168) l_0_21_175)))
 (let ((?x136590 (* (* 2.0 l_0_21_167) l_0_21_174)))
 (let ((?x136587 (* (* 2.0 l_0_21_166) l_0_21_173)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x134929 (* ?x134928 l_0_21_175)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x134926 (* ?x134925 l_0_21_174)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x134913 (* ?x134911 l_0_21_173)))
 (let ((?x136573 (- (* (* (- 1.0) l_0_21_101) l_0_21_76) (* (* 1.0 l_0_21_102) l_0_21_77))))
 (let ((?x136578 (+ (- ?x136573 (* (* 1.0 l_0_21_103) l_0_21_78)) (* (* 1.0 l_0_21_112) l_0_21_137))))
 (let ((?x136582 (+ (+ ?x136578 (* (* 1.0 l_0_21_113) l_0_21_138)) (* (* 1.0 l_0_21_114) l_0_21_139))))
 (let ((?x136597 (- (- (- (- (- (- (- ?x136582 ?x134913) ?x134926) ?x134929) ?x136587) ?x136590) ?x136593) ?x136596)))
 (let ((?x136618 (+ (+ (+ (+ (- (- (- ?x136597 ?x136599) ?x136602) ?x136605) ?x136608) ?x136611) ?x136614) ?x136617)))
 (let ((?x136636 (- (- (- (- (+ (+ (+ ?x136618 ?x136620) ?x136623) ?x136626) ?x136628) ?x136630) ?x136632) ?x136635)))
 (let ((?x136657 (+ (+ (+ (+ (- (- (- ?x136636 ?x136638) ?x136641) ?x136644) ?x136647) ?x136650) ?x136653) ?x136656)))
 (= (+ (+ (+ ?x136657 ?x136659) ?x136662) ?x136665) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136803 (* l_0_21_72 l_0_21_72)))
 (let ((?x136801 (* l_0_21_71 l_0_21_71)))
 (let ((?x136799 (* l_0_21_70 l_0_21_70)))
 (let ((?x136797 (* l_0_21_69 l_0_21_69)))
 (let ((?x136795 (* l_0_21_68 l_0_21_68)))
 (let ((?x136793 (* l_0_21_67 l_0_21_67)))
 (let ((?x136791 (* l_0_21_66 l_0_21_66)))
 (let ((?x136789 (* l_0_21_65 l_0_21_65)))
 (let ((?x136787 (* l_0_21_36 l_0_21_36)))
 (let ((?x136785 (* l_0_21_35 l_0_21_35)))
 (let ((?x136783 (* l_0_21_34 l_0_21_34)))
 (let ((?x136781 (* l_0_21_33 l_0_21_33)))
 (let ((?x136779 (* l_0_21_32 l_0_21_32)))
 (let ((?x136777 (* l_0_21_31 l_0_21_31)))
 (let ((?x136775 (* l_0_21_30 l_0_21_30)))
 (let ((?x136773 (* l_0_21_29 l_0_21_29)))
 (let ((?x136771 (* l_0_21_216 l_0_21_216)))
 (let ((?x136769 (* l_0_21_215 l_0_21_215)))
 (let ((?x136767 (* l_0_21_214 l_0_21_214)))
 (let ((?x136765 (* l_0_21_213 l_0_21_213)))
 (let ((?x136763 (* l_0_21_212 l_0_21_212)))
 (let ((?x136761 (* l_0_21_211 l_0_21_211)))
 (let ((?x136759 (* l_0_21_210 l_0_21_210)))
 (let ((?x136757 (* l_0_21_209 l_0_21_209)))
 (let ((?x136755 (* l_0_21_180 l_0_21_180)))
 (let ((?x136753 (* l_0_21_179 l_0_21_179)))
 (let ((?x136751 (* l_0_21_178 l_0_21_178)))
 (let ((?x136749 (* l_0_21_177 l_0_21_177)))
 (let ((?x136728 (* l_0_21_176 l_0_21_176)))
 (let ((?x136724 (* l_0_21_175 l_0_21_175)))
 (let ((?x136726 (- (- (* (- l_0_21_173) l_0_21_173) (* l_0_21_174 l_0_21_174)) ?x136724)))
 (let ((?x136760 (+ (+ (- (- (- (- (- ?x136726 ?x136728) ?x136749) ?x136751) ?x136753) ?x136755) ?x136757) ?x136759)))
 (let ((?x136774 (- (+ (+ (+ (+ (+ (+ ?x136760 ?x136761) ?x136763) ?x136765) ?x136767) ?x136769) ?x136771) ?x136773)))
 (let ((?x136788 (- (- (- (- (- (- (- ?x136774 ?x136775) ?x136777) ?x136779) ?x136781) ?x136783) ?x136785) ?x136787)))
 (let ((?x136802 (+ (+ (+ (+ (+ (+ (+ ?x136788 ?x136789) ?x136791) ?x136793) ?x136795) ?x136797) ?x136799) ?x136801)))
 (= (+ ?x136802 ?x136803) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x134511 (* l_0_21_37 l_0_21_37)))
 (let ((?x136852 (* l_0_21_289 l_0_21_289)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x136850 (* ?x136849 l_0_21_295)))
 (let ((?x136851 (+ (- (* l_0_21_1 l_0_21_1) (* (* 2.0 l_0_21_109) l_0_21_115)) ?x136850)))
 (= (+ (- (+ ?x136851 ?x136852) ?x134511) (* (* 2.0 l_0_21_73) l_0_21_79)) 0.0)))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134558 (* ?x134557 l_0_21_38)))
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x136883 (* ?x136882 l_0_21_296)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x136880 (* ?x136879 l_0_21_295)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x136877 (* ?x136849 l_0_21_290)))
 (let ((?x136873 (- (* (* 2.0 l_0_21_1) l_0_21_2) (* (* 2.0 l_0_21_110) l_0_21_115))))
 (let ((?x136884 (+ (+ (+ (- ?x136873 (* (* 2.0 l_0_21_111) l_0_21_116)) ?x136877) ?x136880) ?x136883)))
 (let ((?x136890 (- (- ?x136884 (* (* 2.0 l_0_21_325) l_0_21_331)) (* (* 2.0 l_0_21_361) l_0_21_367))))
 (let ((?x136897 (- (- (- ?x136890 ?x134558) (* (* 2.0 l_0_21_397) l_0_21_403)) (* (* 2.0 l_0_21_433) l_0_21_439))))
 (let ((?x136903 (- (- ?x136897 (* (* 2.0 l_0_21_469) l_0_21_475)) (* (* 2.0 l_0_21_505) l_0_21_511))))
 (let ((?x136909 (+ (+ ?x136903 (* (* 2.0 l_0_21_74) l_0_21_79)) (* (* 2.0 l_0_21_75) l_0_21_80))))
 (= ?x136909 0.0))))))))))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134607 (* ?x134557 l_0_21_40)))
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x136961 (* ?x134554 l_0_21_297)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x136959 (* ?x134551 l_0_21_296)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x136957 (* ?x134548 l_0_21_295)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x136955 (* ?x136849 l_0_21_292)))
 (let ((?x136943 (- (* (* 2.0 l_0_21_1) l_0_21_4) (* (* 2.0 l_0_21_112) l_0_21_115))))
 (let ((?x136954 (- (- ?x136943 (* (* 2.0 l_0_21_113) l_0_21_116)) (* (* 2.0 l_0_21_114) l_0_21_117))))
 (let ((?x136966 (+ (- (+ (+ (+ (+ ?x136954 ?x136955) ?x136957) ?x136959) ?x136961) ?x134607) (* (* 2.0 l_0_21_76) l_0_21_79))))
 (let ((?x136972 (+ (+ ?x136966 (* (* 2.0 l_0_21_77) l_0_21_80)) (* (* 2.0 l_0_21_78) l_0_21_81))))
 (= ?x136972 0.0))))))))))))))))
(assert
 (let ((?x137009 (* l_0_21_82 l_0_21_82)))
 (let ((?x137007 (* l_0_21_81 l_0_21_81)))
 (let ((?x137005 (* l_0_21_80 l_0_21_80)))
 (let ((?x137003 (* l_0_21_79 l_0_21_79)))
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134622 (* ?x134557 l_0_21_43)))
 (let ((?x137000 (* l_0_21_298 l_0_21_298)))
 (let ((?x136998 (* l_0_21_297 l_0_21_297)))
 (let ((?x136996 (* l_0_21_296 l_0_21_296)))
 (let ((?x136994 (* l_0_21_295 l_0_21_295)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x136850 (* ?x136849 l_0_21_295)))
 (let ((?x136991 (* l_0_21_118 l_0_21_118)))
 (let ((?x136989 (* l_0_21_117 l_0_21_117)))
 (let ((?x136987 (* l_0_21_116 l_0_21_116)))
 (let ((?x136988 (- (- (* (* 2.0 l_0_21_1) l_0_21_7) (* l_0_21_115 l_0_21_115)) ?x136987)))
 (let ((?x137001 (+ (+ (+ (+ (+ (- (- ?x136988 ?x136989) ?x136991) ?x136850) ?x136994) ?x136996) ?x136998) ?x137000)))
 (= (+ (+ (+ (+ (- ?x137001 ?x134622) ?x137003) ?x137005) ?x137007) ?x137009) 0.0)))))))))))))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134641 (* ?x134557 l_0_21_47)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137061 (* ?x137060 l_0_21_302)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137058 (* ?x137057 l_0_21_301)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137055 (* ?x137054 l_0_21_300)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137052 (* ?x137051 l_0_21_299)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137049 (* ?x136849 l_0_21_299)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x137047 (* ?x137046 l_0_21_259)))
 (let ((?x137036 (- (* (* 2.0 l_0_21_1) l_0_21_11) (* (* 2.0 l_0_21_115) l_0_21_119))))
 (let ((?x137042 (- (- ?x137036 (* (* 2.0 l_0_21_116) l_0_21_120)) (* (* 2.0 l_0_21_117) l_0_21_121))))
 (let ((?x137053 (+ (+ (+ (- ?x137042 (* (* 2.0 l_0_21_118) l_0_21_122)) ?x137047) ?x137049) ?x137052)))
 (let ((?x137066 (+ (- (+ (+ (+ ?x137053 ?x137055) ?x137058) ?x137061) ?x134641) (* (* 2.0 l_0_21_79) l_0_21_83))))
 (let ((?x137072 (+ (+ ?x137066 (* (* 2.0 l_0_21_80) l_0_21_84)) (* (* 2.0 l_0_21_81) l_0_21_85))))
 (= (+ ?x137072 (* (* 2.0 l_0_21_82) l_0_21_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134664 (* ?x134557 l_0_21_52)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137135 (* ?x137060 l_0_21_307)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137133 (* ?x137057 l_0_21_306)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137131 (* ?x137054 l_0_21_305)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137129 (* ?x137051 l_0_21_304)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137127 (* ?x136849 l_0_21_304)))
 (let ((?x136850 (* ?x136849 l_0_21_295)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134620 (* ?x134542 l_0_21_187)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x112893 (* ?x134539 l_0_21_151)))
 (let ((?x137104 (- (* (* 2.0 l_0_21_1) l_0_21_16) (* (* 2.0 l_0_21_115) l_0_21_124))))
 (let ((?x137121 (- (- ?x137104 (* (* 2.0 l_0_21_116) l_0_21_125)) (* (* 2.0 l_0_21_117) l_0_21_126))))
 (let ((?x137126 (- (- (+ (- ?x137121 (* (* 2.0 l_0_21_118) l_0_21_127)) ?x112893) ?x134620) ?x136850)))
 (let ((?x137139 (+ (- (+ (+ (+ (+ (+ ?x137126 ?x137127) ?x137129) ?x137131) ?x137133) ?x137135) ?x134664) (* (* 2.0 l_0_21_79) l_0_21_88))))
 (let ((?x137143 (+ (+ ?x137139 (* (* 2.0 l_0_21_80) l_0_21_89)) (* (* 2.0 l_0_21_81) l_0_21_90))))
 (= (+ ?x137143 (* (* 2.0 l_0_21_82) l_0_21_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134686 (* ?x134557 l_0_21_58)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137193 (* ?x137060 l_0_21_313)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137191 (* ?x137057 l_0_21_312)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137189 (* ?x137054 l_0_21_311)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137187 (* ?x137051 l_0_21_310)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137185 (* ?x136849 l_0_21_310)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x137047 (* ?x137046 l_0_21_259)))
 (let ((?x16009 (- (* (* 2.0 l_0_21_1) l_0_21_22) (* (* 2.0 l_0_21_115) l_0_21_130))))
 (let ((?x137181 (- (- ?x16009 (* (* 2.0 l_0_21_116) l_0_21_131)) (* (* 2.0 l_0_21_117) l_0_21_132))))
 (let ((?x137188 (+ (+ (- (- ?x137181 (* (* 2.0 l_0_21_118) l_0_21_133)) ?x137047) ?x137185) ?x137187)))
 (let ((?x137197 (+ (- (+ (+ (+ ?x137188 ?x137189) ?x137191) ?x137193) ?x134686) (* (* 2.0 l_0_21_79) l_0_21_94))))
 (let ((?x137201 (+ (+ ?x137197 (* (* 2.0 l_0_21_80) l_0_21_95)) (* (* 2.0 l_0_21_81) l_0_21_96))))
 (= (+ ?x137201 (* (* 2.0 l_0_21_82) l_0_21_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x134557 (* 2.0 l_0_21_37)))
 (let ((?x134711 (* ?x134557 l_0_21_65)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137274 (* ?x137060 l_0_21_320)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137272 (* ?x137057 l_0_21_319)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137270 (* ?x137054 l_0_21_318)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137268 (* ?x137051 l_0_21_317)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137266 (* ?x136849 l_0_21_317)))
 (let ((?x137248 (+ (* (* 2.0 l_0_21_1) l_0_21_29) (* (* 2.0 l_0_21_101) l_0_21_79))))
 (let ((?x137252 (+ (+ ?x137248 (* (* 2.0 l_0_21_102) l_0_21_80)) (* (* 2.0 l_0_21_103) l_0_21_81))))
 (let ((?x137257 (- (+ ?x137252 (* (* 2.0 l_0_21_104) l_0_21_82)) (* (* 2.0 l_0_21_115) l_0_21_137))))
 (let ((?x137261 (- (- ?x137257 (* (* 2.0 l_0_21_116) l_0_21_138)) (* (* 2.0 l_0_21_117) l_0_21_139))))
 (let ((?x137265 (- (- ?x137261 (* (* 2.0 l_0_21_118) l_0_21_140)) (* (* 2.0 l_0_21_217) l_0_21_223))))
 (= (- (+ (+ (+ (+ (+ ?x137265 ?x137266) ?x137268) ?x137270) ?x137272) ?x137274) ?x134711) 0.0)))))))))))))))))))
(assert
 (let ((?x134386 (* l_0_21_39 l_0_21_39)))
 (let ((?x134384 (* l_0_21_38 l_0_21_38)))
 (let ((?x134364 (* l_0_21_3 l_0_21_3)))
 (let ((?x133920 (* l_0_21_291 l_0_21_291)))
 (let ((?x137327 (+ (+ (+ (* l_0_21_2 l_0_21_2) (* l_0_21_290 l_0_21_290)) ?x133920) ?x134364)))
 (let ((?x137331 (- (- ?x137327 (* (* 2.0 l_0_21_326) l_0_21_331)) (* (* 2.0 l_0_21_327) l_0_21_332))))
 (let ((?x137335 (- (- ?x137331 (* (* 2.0 l_0_21_362) l_0_21_367)) (* (* 2.0 l_0_21_363) l_0_21_368))))
 (let ((?x137341 (- (- (- (- ?x137335 ?x134384) ?x134386) (* (* 2.0 l_0_21_398) l_0_21_403)) (* (* 2.0 l_0_21_399) l_0_21_404))))
 (let ((?x137345 (- (- ?x137341 (* (* 2.0 l_0_21_434) l_0_21_439)) (* (* 2.0 l_0_21_435) l_0_21_440))))
 (let ((?x137349 (- (- ?x137345 (* (* 2.0 l_0_21_470) l_0_21_475)) (* (* 2.0 l_0_21_471) l_0_21_476))))
 (let ((?x137353 (- (- ?x137349 (* (* 2.0 l_0_21_506) l_0_21_511)) (* (* 2.0 l_0_21_507) l_0_21_512))))
 (= ?x137353 0.0)))))))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x134751 (* ?x134750 l_0_21_41)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x134748 (* ?x134747 l_0_21_40)))
 (let ((?x134744 (* 2.0 l_0_21_3)))
 (let ((?x134745 (* ?x134744 l_0_21_5)))
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137406 (* ?x136882 l_0_21_293)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137404 (* ?x136879 l_0_21_292)))
 (let ((?x134735 (* 2.0 l_0_21_2)))
 (let ((?x134736 (* ?x134735 l_0_21_4)))
 (let ((?x137410 (- (+ (+ (+ ?x134736 ?x137404) ?x137406) ?x134745) (* (* 2.0 l_0_21_328) l_0_21_331))))
 (let ((?x137414 (- (- ?x137410 (* (* 2.0 l_0_21_329) l_0_21_332)) (* (* 2.0 l_0_21_330) l_0_21_333))))
 (let ((?x137418 (- (- ?x137414 (* (* 2.0 l_0_21_364) l_0_21_367)) (* (* 2.0 l_0_21_365) l_0_21_368))))
 (let ((?x137424 (- (- (- (- ?x137418 (* (* 2.0 l_0_21_366) l_0_21_369)) ?x134748) ?x134751) (* (* 2.0 l_0_21_400) l_0_21_403))))
 (let ((?x137428 (- (- ?x137424 (* (* 2.0 l_0_21_401) l_0_21_404)) (* (* 2.0 l_0_21_402) l_0_21_405))))
 (let ((?x137432 (- (- ?x137428 (* (* 2.0 l_0_21_436) l_0_21_439)) (* (* 2.0 l_0_21_437) l_0_21_440))))
 (let ((?x137436 (- (- ?x137432 (* (* 2.0 l_0_21_438) l_0_21_441)) (* (* 2.0 l_0_21_472) l_0_21_475))))
 (let ((?x137440 (- (- ?x137436 (* (* 2.0 l_0_21_473) l_0_21_476)) (* (* 2.0 l_0_21_474) l_0_21_477))))
 (let ((?x137444 (- (- ?x137440 (* (* 2.0 l_0_21_508) l_0_21_511)) (* (* 2.0 l_0_21_509) l_0_21_512))))
 (= (- ?x137444 (* (* 2.0 l_0_21_510) l_0_21_513)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x137525 (* l_0_21_514 l_0_21_514)))
 (let ((?x137523 (* l_0_21_513 l_0_21_513)))
 (let ((?x137521 (* l_0_21_512 l_0_21_512)))
 (let ((?x137519 (* l_0_21_511 l_0_21_511)))
 (let ((?x137517 (* l_0_21_478 l_0_21_478)))
 (let ((?x137515 (* l_0_21_477 l_0_21_477)))
 (let ((?x137513 (* l_0_21_476 l_0_21_476)))
 (let ((?x137511 (* l_0_21_475 l_0_21_475)))
 (let ((?x137509 (* l_0_21_442 l_0_21_442)))
 (let ((?x137507 (* l_0_21_441 l_0_21_441)))
 (let ((?x137505 (* l_0_21_440 l_0_21_440)))
 (let ((?x137503 (* l_0_21_439 l_0_21_439)))
 (let ((?x137501 (* l_0_21_406 l_0_21_406)))
 (let ((?x137499 (* l_0_21_405 l_0_21_405)))
 (let ((?x137497 (* l_0_21_404 l_0_21_404)))
 (let ((?x137495 (* l_0_21_403 l_0_21_403)))
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x134805 (* ?x134750 l_0_21_44)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x134803 (* ?x134747 l_0_21_43)))
 (let ((?x137491 (* l_0_21_370 l_0_21_370)))
 (let ((?x137489 (* l_0_21_369 l_0_21_369)))
 (let ((?x137487 (* l_0_21_368 l_0_21_368)))
 (let ((?x137485 (* l_0_21_367 l_0_21_367)))
 (let ((?x137483 (* l_0_21_334 l_0_21_334)))
 (let ((?x137481 (* l_0_21_333 l_0_21_333)))
 (let ((?x137479 (* l_0_21_332 l_0_21_332)))
 (let ((?x16163 (* l_0_21_331 l_0_21_331)))
 (let ((?x134744 (* 2.0 l_0_21_3)))
 (let ((?x134795 (* ?x134744 l_0_21_8)))
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x136883 (* ?x136882 l_0_21_296)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x136880 (* ?x136879 l_0_21_295)))
 (let ((?x134735 (* 2.0 l_0_21_2)))
 (let ((?x134778 (* ?x134735 l_0_21_7)))
 (let ((?x137484 (- (- (- (- (+ (+ (+ ?x134778 ?x136880) ?x136883) ?x134795) ?x16163) ?x137479) ?x137481) ?x137483)))
 (let ((?x137496 (- (- (- (- (- (- (- ?x137484 ?x137485) ?x137487) ?x137489) ?x137491) ?x134803) ?x134805) ?x137495)))
 (let ((?x137510 (- (- (- (- (- (- (- ?x137496 ?x137497) ?x137499) ?x137501) ?x137503) ?x137505) ?x137507) ?x137509)))
 (let ((?x137524 (- (- (- (- (- (- (- ?x137510 ?x137511) ?x137513) ?x137515) ?x137517) ?x137519) ?x137521) ?x137523)))
 (= (- ?x137524 ?x137525) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x134889 (* ?x134750 l_0_21_48)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x134887 (* ?x134747 l_0_21_47)))
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x114810 (* ?x136882 l_0_21_300)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x9049 (* ?x136879 l_0_21_299)))
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x114788 (* ?x134092 l_0_21_260)))
 (let ((?x134089 (* 2.0 l_0_21_254)))
 (let ((?x114809 (* ?x134089 l_0_21_259)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x113028 (* ?x113027 l_0_21_3)))
 (let ((?x114813 (+ (+ (+ (+ (* (* 2.0 l_0_21_11) l_0_21_2) ?x113028) ?x114809) ?x114788) ?x9049)))
 (let ((?x137568 (- (- (+ ?x114813 ?x114810) (* (* 2.0 l_0_21_331) l_0_21_335)) (* (* 2.0 l_0_21_332) l_0_21_336))))
 (let ((?x137574 (- (- ?x137568 (* (* 2.0 l_0_21_333) l_0_21_337)) (* (* 2.0 l_0_21_334) l_0_21_338))))
 (let ((?x137580 (- (- ?x137574 (* (* 2.0 l_0_21_367) l_0_21_371)) (* (* 2.0 l_0_21_368) l_0_21_372))))
 (let ((?x137586 (- (- ?x137580 (* (* 2.0 l_0_21_369) l_0_21_373)) (* (* 2.0 l_0_21_370) l_0_21_374))))
 (let ((?x137594 (- (- (- (- ?x137586 ?x134887) ?x134889) (* (* 2.0 l_0_21_403) l_0_21_407)) (* (* 2.0 l_0_21_404) l_0_21_408))))
 (let ((?x137600 (- (- ?x137594 (* (* 2.0 l_0_21_405) l_0_21_409)) (* (* 2.0 l_0_21_406) l_0_21_410))))
 (let ((?x137606 (- (- ?x137600 (* (* 2.0 l_0_21_439) l_0_21_443)) (* (* 2.0 l_0_21_440) l_0_21_444))))
 (let ((?x137612 (- (- ?x137606 (* (* 2.0 l_0_21_441) l_0_21_445)) (* (* 2.0 l_0_21_442) l_0_21_446))))
 (let ((?x137618 (- (- ?x137612 (* (* 2.0 l_0_21_475) l_0_21_479)) (* (* 2.0 l_0_21_476) l_0_21_480))))
 (let ((?x137624 (- (- ?x137618 (* (* 2.0 l_0_21_477) l_0_21_481)) (* (* 2.0 l_0_21_478) l_0_21_482))))
 (let ((?x137630 (- (- ?x137624 (* (* 2.0 l_0_21_511) l_0_21_515)) (* (* 2.0 l_0_21_512) l_0_21_516))))
 (let ((?x137636 (- (- ?x137630 (* (* 2.0 l_0_21_513) l_0_21_517)) (* (* 2.0 l_0_21_514) l_0_21_518))))
 (= ?x137636 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x134961 (* ?x134750 l_0_21_53)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x134959 (* ?x134747 l_0_21_52)))
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137706 (* ?x136882 l_0_21_305)))
 (let ((?x136883 (* ?x136882 l_0_21_296)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137703 (* ?x136879 l_0_21_304)))
 (let ((?x136880 (* ?x136879 l_0_21_295)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x134776 (* ?x134732 l_0_21_188)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x134774 (* ?x134729 l_0_21_187)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x134935 (* ?x134934 l_0_21_3)))
 (let ((?x134931 (* 2.0 l_0_21_16)))
 (let ((?x134932 (* ?x134931 l_0_21_2)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x112937 (* ?x134726 l_0_21_152)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x137696 (* ?x134863 l_0_21_151)))
 (let ((?x137704 (+ (- (- (- (+ (+ (+ ?x137696 ?x112937) ?x134932) ?x134935) ?x134774) ?x134776) ?x136880) ?x137703)))
 (let ((?x137711 (- (- (+ (- ?x137704 ?x136883) ?x137706) (* (* 2.0 l_0_21_331) l_0_21_340)) (* (* 2.0 l_0_21_332) l_0_21_341))))
 (let ((?x137715 (- (- ?x137711 (* (* 2.0 l_0_21_333) l_0_21_342)) (* (* 2.0 l_0_21_334) l_0_21_343))))
 (let ((?x137719 (- (- ?x137715 (* (* 2.0 l_0_21_367) l_0_21_376)) (* (* 2.0 l_0_21_368) l_0_21_377))))
 (let ((?x137723 (- (- ?x137719 (* (* 2.0 l_0_21_369) l_0_21_378)) (* (* 2.0 l_0_21_370) l_0_21_379))))
 (let ((?x137729 (- (- (- (- ?x137723 ?x134959) ?x134961) (* (* 2.0 l_0_21_403) l_0_21_412)) (* (* 2.0 l_0_21_404) l_0_21_413))))
 (let ((?x137733 (- (- ?x137729 (* (* 2.0 l_0_21_405) l_0_21_414)) (* (* 2.0 l_0_21_406) l_0_21_415))))
 (let ((?x137737 (- (- ?x137733 (* (* 2.0 l_0_21_439) l_0_21_448)) (* (* 2.0 l_0_21_440) l_0_21_449))))
 (let ((?x137741 (- (- ?x137737 (* (* 2.0 l_0_21_441) l_0_21_450)) (* (* 2.0 l_0_21_442) l_0_21_451))))
 (let ((?x137745 (- (- ?x137741 (* (* 2.0 l_0_21_475) l_0_21_484)) (* (* 2.0 l_0_21_476) l_0_21_485))))
 (let ((?x137749 (- (- ?x137745 (* (* 2.0 l_0_21_477) l_0_21_486)) (* (* 2.0 l_0_21_478) l_0_21_487))))
 (let ((?x137753 (- (- ?x137749 (* (* 2.0 l_0_21_511) l_0_21_520)) (* (* 2.0 l_0_21_512) l_0_21_521))))
 (let ((?x137757 (- (- ?x137753 (* (* 2.0 l_0_21_513) l_0_21_522)) (* (* 2.0 l_0_21_514) l_0_21_523))))
 (= ?x137757 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x135055 (* ?x134750 l_0_21_59)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x135053 (* ?x134747 l_0_21_58)))
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137822 (* ?x136882 l_0_21_311)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137820 (* ?x136879 l_0_21_310)))
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x114788 (* ?x134092 l_0_21_260)))
 (let ((?x134089 (* 2.0 l_0_21_254)))
 (let ((?x114809 (* ?x134089 l_0_21_259)))
 (let ((?x135047 (* 2.0 l_0_21_23)))
 (let ((?x135048 (* ?x135047 l_0_21_3)))
 (let ((?x134735 (* 2.0 l_0_21_2)))
 (let ((?x135039 (* ?x134735 l_0_21_22)))
 (let ((?x137825 (- (+ (+ (- (- (+ ?x135039 ?x135048) ?x114809) ?x114788) ?x137820) ?x137822) (* (* 2.0 l_0_21_331) l_0_21_346))))
 (let ((?x137829 (- (- ?x137825 (* (* 2.0 l_0_21_332) l_0_21_347)) (* (* 2.0 l_0_21_333) l_0_21_348))))
 (let ((?x137833 (- (- ?x137829 (* (* 2.0 l_0_21_334) l_0_21_349)) (* (* 2.0 l_0_21_367) l_0_21_382))))
 (let ((?x137837 (- (- ?x137833 (* (* 2.0 l_0_21_368) l_0_21_383)) (* (* 2.0 l_0_21_369) l_0_21_384))))
 (let ((?x137843 (- (- (- (- ?x137837 (* (* 2.0 l_0_21_370) l_0_21_385)) ?x135053) ?x135055) (* (* 2.0 l_0_21_403) l_0_21_418))))
 (let ((?x137847 (- (- ?x137843 (* (* 2.0 l_0_21_404) l_0_21_419)) (* (* 2.0 l_0_21_405) l_0_21_420))))
 (let ((?x137851 (- (- ?x137847 (* (* 2.0 l_0_21_406) l_0_21_421)) (* (* 2.0 l_0_21_439) l_0_21_454))))
 (let ((?x137855 (- (- ?x137851 (* (* 2.0 l_0_21_440) l_0_21_455)) (* (* 2.0 l_0_21_441) l_0_21_456))))
 (let ((?x137859 (- (- ?x137855 (* (* 2.0 l_0_21_442) l_0_21_457)) (* (* 2.0 l_0_21_475) l_0_21_490))))
 (let ((?x137863 (- (- ?x137859 (* (* 2.0 l_0_21_476) l_0_21_491)) (* (* 2.0 l_0_21_477) l_0_21_492))))
 (let ((?x137867 (- (- ?x137863 (* (* 2.0 l_0_21_478) l_0_21_493)) (* (* 2.0 l_0_21_511) l_0_21_526))))
 (let ((?x137871 (- (- ?x137867 (* (* 2.0 l_0_21_512) l_0_21_527)) (* (* 2.0 l_0_21_513) l_0_21_528))))
 (= (- ?x137871 (* (* 2.0 l_0_21_514) l_0_21_529)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x134750 (* 2.0 l_0_21_39)))
 (let ((?x135128 (* ?x134750 l_0_21_66)))
 (let ((?x134747 (* 2.0 l_0_21_38)))
 (let ((?x135126 (* ?x134747 l_0_21_65)))
 (let ((?x134744 (* 2.0 l_0_21_3)))
 (let ((?x135124 (* ?x134744 l_0_21_30)))
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137958 (* ?x136882 l_0_21_318)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137956 (* ?x136879 l_0_21_317)))
 (let ((?x134735 (* 2.0 l_0_21_2)))
 (let ((?x135116 (* ?x134735 l_0_21_29)))
 (let ((?x137955 (- (- ?x135116 (* (* 2.0 l_0_21_218) l_0_21_223)) (* (* 2.0 l_0_21_219) l_0_21_224))))
 (let ((?x137962 (- (+ (+ (+ ?x137955 ?x137956) ?x137958) ?x135124) (* (* 2.0 l_0_21_331) l_0_21_353))))
 (let ((?x137966 (- (- ?x137962 (* (* 2.0 l_0_21_332) l_0_21_354)) (* (* 2.0 l_0_21_333) l_0_21_355))))
 (let ((?x137970 (- (- ?x137966 (* (* 2.0 l_0_21_334) l_0_21_356)) (* (* 2.0 l_0_21_367) l_0_21_389))))
 (let ((?x137974 (- (- ?x137970 (* (* 2.0 l_0_21_368) l_0_21_390)) (* (* 2.0 l_0_21_369) l_0_21_391))))
 (let ((?x137980 (- (- (- (- ?x137974 (* (* 2.0 l_0_21_370) l_0_21_392)) ?x135126) ?x135128) (* (* 2.0 l_0_21_403) l_0_21_425))))
 (let ((?x137984 (- (- ?x137980 (* (* 2.0 l_0_21_404) l_0_21_426)) (* (* 2.0 l_0_21_405) l_0_21_427))))
 (let ((?x137988 (- (- ?x137984 (* (* 2.0 l_0_21_406) l_0_21_428)) (* (* 2.0 l_0_21_439) l_0_21_461))))
 (let ((?x137992 (- (- ?x137988 (* (* 2.0 l_0_21_440) l_0_21_462)) (* (* 2.0 l_0_21_441) l_0_21_463))))
 (let ((?x137996 (- (- ?x137992 (* (* 2.0 l_0_21_442) l_0_21_464)) (* (* 2.0 l_0_21_475) l_0_21_497))))
 (let ((?x138000 (- (- ?x137996 (* (* 2.0 l_0_21_476) l_0_21_498)) (* (* 2.0 l_0_21_477) l_0_21_499))))
 (let ((?x138004 (- (- ?x138000 (* (* 2.0 l_0_21_478) l_0_21_500)) (* (* 2.0 l_0_21_511) l_0_21_533))))
 (let ((?x138008 (- (- ?x138004 (* (* 2.0 l_0_21_512) l_0_21_534)) (* (* 2.0 l_0_21_513) l_0_21_535))))
 (= (- ?x138008 (* (* 2.0 l_0_21_514) l_0_21_536)) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x135162 (* l_0_21_6 l_0_21_6)))
 (let ((?x135160 (* l_0_21_5 l_0_21_5)))
 (let ((?x135158 (* l_0_21_42 l_0_21_42)))
 (let ((?x135156 (* l_0_21_41 l_0_21_41)))
 (let ((?x135154 (* l_0_21_40 l_0_21_40)))
 (let ((?x135152 (* l_0_21_4 l_0_21_4)))
 (let ((?x138098 (* l_0_21_294 l_0_21_294)))
 (let ((?x138099 (+ (+ (* l_0_21_292 l_0_21_292) (* l_0_21_293 l_0_21_293)) ?x138098)))
 (= (+ (+ (- (- (- (+ ?x138099 ?x135152) ?x135154) ?x135156) ?x135158) ?x135160) ?x135162) 0.0))))))))))
(assert
 (let ((?x135210 (* (* 2.0 l_0_21_6) l_0_21_9)))
 (let ((?x135207 (* (* 2.0 l_0_21_5) l_0_21_8)))
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x135204 (* ?x134813 l_0_21_45)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x135202 (* ?x134810 l_0_21_44)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x135200 (* ?x134807 l_0_21_43)))
 (let ((?x135198 (* (* 2.0 l_0_21_4) l_0_21_7)))
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x136961 (* ?x134554 l_0_21_297)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x136959 (* ?x134551 l_0_21_296)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x136957 (* ?x134548 l_0_21_295)))
 (let ((?x138110 (+ (- (- (- (+ (+ (+ ?x136957 ?x136959) ?x136961) ?x135198) ?x135200) ?x135202) ?x135204) ?x135207)))
 (= (+ ?x138110 ?x135210) 0.0))))))))))))))))))
(assert
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x135274 (* ?x134813 l_0_21_49)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x135272 (* ?x134810 l_0_21_48)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x135270 (* ?x134807 l_0_21_47)))
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x138129 (* ?x134554 l_0_21_301)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x138127 (* ?x134551 l_0_21_300)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x138125 (* ?x134548 l_0_21_299)))
 (let ((?x134884 (* 2.0 l_0_21_258)))
 (let ((?x138123 (* ?x134884 l_0_21_261)))
 (let ((?x134881 (* 2.0 l_0_21_257)))
 (let ((?x138121 (* ?x134881 l_0_21_260)))
 (let ((?x134878 (* 2.0 l_0_21_256)))
 (let ((?x138119 (* ?x134878 l_0_21_259)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x135256 (* ?x135255 l_0_21_6)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x135253 (* ?x113027 l_0_21_5)))
 (let ((?x138122 (+ (+ (+ (+ (* (* 2.0 l_0_21_11) l_0_21_4) ?x135253) ?x135256) ?x138119) ?x138121)))
 (let ((?x138133 (- (- (- (+ (+ (+ (+ ?x138122 ?x138123) ?x138125) ?x138127) ?x138129) ?x135270) ?x135272) ?x135274)))
 (= ?x138133 0.0))))))))))))))))))))))))))
(assert
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x135321 (* ?x134813 l_0_21_54)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x135319 (* ?x134810 l_0_21_53)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x135317 (* ?x134807 l_0_21_52)))
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x138168 (* ?x134554 l_0_21_306)))
 (let ((?x136961 (* ?x134554 l_0_21_297)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x138165 (* ?x134551 l_0_21_305)))
 (let ((?x136959 (* ?x134551 l_0_21_296)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x138162 (* ?x134548 l_0_21_304)))
 (let ((?x136957 (* ?x134548 l_0_21_295)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x135195 (* ?x134947 l_0_21_189)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x135193 (* ?x134944 l_0_21_188)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x135191 (* ?x134941 l_0_21_187)))
 (let ((?x135308 (* 2.0 l_0_21_18)))
 (let ((?x135309 (* ?x135308 l_0_21_6)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x135306 (* ?x134934 l_0_21_5)))
 (let ((?x134931 (* 2.0 l_0_21_16)))
 (let ((?x135304 (* ?x134931 l_0_21_4)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135189 (* ?x134928 l_0_21_153)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135187 (* ?x134925 l_0_21_152)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x135635 (* ?x134911 l_0_21_151)))
 (let ((?x138159 (- (- (+ (+ (+ (+ (+ ?x135635 ?x135187) ?x135189) ?x135304) ?x135306) ?x135309) ?x135191) ?x135193)))
 (let ((?x138169 (+ (- (+ (- (+ (- (- ?x138159 ?x135195) ?x136957) ?x138162) ?x136959) ?x138165) ?x136961) ?x138168)))
 (= (- (- (- ?x138169 ?x135317) ?x135319) ?x135321) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x134813 (* 2.0 l_0_21_42)))
 (let ((?x135394 (* ?x134813 l_0_21_60)))
 (let ((?x134810 (* 2.0 l_0_21_41)))
 (let ((?x135392 (* ?x134810 l_0_21_59)))
 (let ((?x134807 (* 2.0 l_0_21_40)))
 (let ((?x135390 (* ?x134807 l_0_21_58)))
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x138197 (* ?x134554 l_0_21_312)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x138195 (* ?x134551 l_0_21_311)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x138193 (* ?x134548 l_0_21_310)))
 (let ((?x134884 (* 2.0 l_0_21_258)))
 (let ((?x138123 (* ?x134884 l_0_21_261)))
 (let ((?x134881 (* 2.0 l_0_21_257)))
 (let ((?x138121 (* ?x134881 l_0_21_260)))
 (let ((?x134878 (* 2.0 l_0_21_256)))
 (let ((?x138119 (* ?x134878 l_0_21_259)))
 (let ((?x135387 (* 2.0 l_0_21_24)))
 (let ((?x135388 (* ?x135387 l_0_21_6)))
 (let ((?x135047 (* 2.0 l_0_21_23)))
 (let ((?x135385 (* ?x135047 l_0_21_5)))
 (let ((?x135382 (* 2.0 l_0_21_22)))
 (let ((?x135383 (* ?x135382 l_0_21_4)))
 (let ((?x138196 (+ (+ (- (- (- (+ (+ ?x135383 ?x135385) ?x135388) ?x138119) ?x138121) ?x138123) ?x138193) ?x138195)))
 (= (- (- (- (+ ?x138196 ?x138197) ?x135390) ?x135392) ?x135394) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x135475 (* l_0_21_9 l_0_21_9)))
 (let ((?x135473 (* l_0_21_8 l_0_21_8)))
 (let ((?x135471 (* l_0_21_7 l_0_21_7)))
 (let ((?x135469 (* l_0_21_46 l_0_21_46)))
 (let ((?x135467 (* l_0_21_45 l_0_21_45)))
 (let ((?x135465 (* l_0_21_44 l_0_21_44)))
 (let ((?x135463 (* l_0_21_43 l_0_21_43)))
 (let ((?x137000 (* l_0_21_298 l_0_21_298)))
 (let ((?x136998 (* l_0_21_297 l_0_21_297)))
 (let ((?x136996 (* l_0_21_296 l_0_21_296)))
 (let ((?x138216 (+ (+ (+ (* l_0_21_10 l_0_21_10) (* l_0_21_295 l_0_21_295)) ?x136996) ?x136998)))
 (let ((?x138223 (+ (+ (- (- (- (- (+ ?x138216 ?x137000) ?x135463) ?x135465) ?x135467) ?x135469) ?x135471) ?x135473)))
 (= (+ ?x138223 ?x135475) 0.0))))))))))))))
(assert
 (let ((?x135536 (* 2.0 l_0_21_46)))
 (let ((?x135537 (* ?x135536 l_0_21_50)))
 (let ((?x135533 (* 2.0 l_0_21_45)))
 (let ((?x135534 (* ?x135533 l_0_21_49)))
 (let ((?x135530 (* 2.0 l_0_21_44)))
 (let ((?x135531 (* ?x135530 l_0_21_48)))
 (let ((?x135527 (* 2.0 l_0_21_43)))
 (let ((?x135528 (* ?x135527 l_0_21_47)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137061 (* ?x137060 l_0_21_302)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137058 (* ?x137057 l_0_21_301)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137055 (* ?x137054 l_0_21_300)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137052 (* ?x137051 l_0_21_299)))
 (let ((?x138233 (* l_0_21_262 l_0_21_262)))
 (let ((?x138231 (* l_0_21_261 l_0_21_261)))
 (let ((?x138229 (* l_0_21_260 l_0_21_260)))
 (let ((?x138227 (* l_0_21_259 l_0_21_259)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x135501 (* ?x135255 l_0_21_9)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x135499 (* ?x113027 l_0_21_8)))
 (let ((?x135496 (* 2.0 l_0_21_11)))
 (let ((?x135497 (* ?x135496 l_0_21_7)))
 (let ((?x138228 (+ (+ (+ (+ (* (* 2.0 l_0_21_10) l_0_21_14) ?x135497) ?x135499) ?x135501) ?x138227)))
 (let ((?x138238 (+ (+ (+ (+ (+ (+ (+ ?x138228 ?x138229) ?x138231) ?x138233) ?x137052) ?x137055) ?x137058) ?x137061)))
 (= (- (- (- (- ?x138238 ?x135528) ?x135531) ?x135534) ?x135537) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x135536 (* 2.0 l_0_21_46)))
 (let ((?x135597 (* ?x135536 l_0_21_55)))
 (let ((?x135533 (* 2.0 l_0_21_45)))
 (let ((?x135595 (* ?x135533 l_0_21_54)))
 (let ((?x135530 (* 2.0 l_0_21_44)))
 (let ((?x135593 (* ?x135530 l_0_21_53)))
 (let ((?x135527 (* 2.0 l_0_21_43)))
 (let ((?x135591 (* ?x135527 l_0_21_52)))
 (let ((?x137000 (* l_0_21_298 l_0_21_298)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137135 (* ?x137060 l_0_21_307)))
 (let ((?x136998 (* l_0_21_297 l_0_21_297)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137133 (* ?x137057 l_0_21_306)))
 (let ((?x136996 (* l_0_21_296 l_0_21_296)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137131 (* ?x137054 l_0_21_305)))
 (let ((?x136994 (* l_0_21_295 l_0_21_295)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137129 (* ?x137051 l_0_21_304)))
 (let ((?x135461 (* l_0_21_190 l_0_21_190)))
 (let ((?x135459 (* l_0_21_189 l_0_21_189)))
 (let ((?x135457 (* l_0_21_188 l_0_21_188)))
 (let ((?x135455 (* l_0_21_187 l_0_21_187)))
 (let ((?x135308 (* 2.0 l_0_21_18)))
 (let ((?x135581 (* ?x135308 l_0_21_9)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x135579 (* ?x134934 l_0_21_8)))
 (let ((?x134931 (* 2.0 l_0_21_16)))
 (let ((?x135577 (* ?x134931 l_0_21_7)))
 (let ((?x90844 (* l_0_21_154 l_0_21_154)))
 (let ((?x90851 (* l_0_21_153 l_0_21_153)))
 (let ((?x88194 (* l_0_21_152 l_0_21_152)))
 (let ((?x113303 (* l_0_21_151 l_0_21_151)))
 (let ((?x138253 (+ (+ (+ (+ (* (* 2.0 l_0_21_10) l_0_21_19) ?x113303) ?x88194) ?x90851) ?x90844)))
 (let ((?x138260 (- (- (- (- (+ (+ (+ ?x138253 ?x135577) ?x135579) ?x135581) ?x135455) ?x135457) ?x135459) ?x135461)))
 (let ((?x138267 (+ (- (+ (- (+ (- (+ ?x138260 ?x137129) ?x136994) ?x137131) ?x136996) ?x137133) ?x136998) ?x137135)))
 (= (- (- (- (- (- ?x138267 ?x137000) ?x135591) ?x135593) ?x135595) ?x135597) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x135536 (* 2.0 l_0_21_46)))
 (let ((?x135667 (* ?x135536 l_0_21_61)))
 (let ((?x135533 (* 2.0 l_0_21_45)))
 (let ((?x135665 (* ?x135533 l_0_21_60)))
 (let ((?x135530 (* 2.0 l_0_21_44)))
 (let ((?x135663 (* ?x135530 l_0_21_59)))
 (let ((?x135527 (* 2.0 l_0_21_43)))
 (let ((?x135661 (* ?x135527 l_0_21_58)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137193 (* ?x137060 l_0_21_313)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137191 (* ?x137057 l_0_21_312)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137189 (* ?x137054 l_0_21_311)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137187 (* ?x137051 l_0_21_310)))
 (let ((?x138233 (* l_0_21_262 l_0_21_262)))
 (let ((?x138231 (* l_0_21_261 l_0_21_261)))
 (let ((?x138229 (* l_0_21_260 l_0_21_260)))
 (let ((?x138227 (* l_0_21_259 l_0_21_259)))
 (let ((?x135387 (* 2.0 l_0_21_24)))
 (let ((?x135659 (* ?x135387 l_0_21_9)))
 (let ((?x135047 (* 2.0 l_0_21_23)))
 (let ((?x135657 (* ?x135047 l_0_21_8)))
 (let ((?x135382 (* 2.0 l_0_21_22)))
 (let ((?x135655 (* ?x135382 l_0_21_7)))
 (let ((?x138283 (- (+ (+ (+ (* (* 2.0 l_0_21_10) l_0_21_25) ?x135655) ?x135657) ?x135659) ?x138227)))
 (let ((?x138290 (+ (+ (+ (+ (- (- (- ?x138283 ?x138229) ?x138231) ?x138233) ?x137187) ?x137189) ?x137191) ?x137193)))
 (= (- (- (- (- ?x138290 ?x135661) ?x135663) ?x135665) ?x135667) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x135536 (* 2.0 l_0_21_46)))
 (let ((?x135767 (* ?x135536 l_0_21_68)))
 (let ((?x135533 (* 2.0 l_0_21_45)))
 (let ((?x135765 (* ?x135533 l_0_21_67)))
 (let ((?x135530 (* 2.0 l_0_21_44)))
 (let ((?x135763 (* ?x135530 l_0_21_66)))
 (let ((?x135527 (* 2.0 l_0_21_43)))
 (let ((?x135761 (* ?x135527 l_0_21_65)))
 (let ((?x134800 (* 2.0 l_0_21_31)))
 (let ((?x135759 (* ?x134800 l_0_21_9)))
 (let ((?x134797 (* 2.0 l_0_21_30)))
 (let ((?x135757 (* ?x134797 l_0_21_8)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137274 (* ?x137060 l_0_21_320)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137272 (* ?x137057 l_0_21_319)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137270 (* ?x137054 l_0_21_318)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137268 (* ?x137051 l_0_21_317)))
 (let ((?x134789 (* 2.0 l_0_21_29)))
 (let ((?x135755 (* ?x134789 l_0_21_7)))
 (let ((?x92486 (* l_0_21_226 l_0_21_226)))
 (let ((?x115407 (* l_0_21_225 l_0_21_225)))
 (let ((?x92460 (* l_0_21_224 l_0_21_224)))
 (let ((?x115396 (* l_0_21_223 l_0_21_223)))
 (let ((?x92488 (- (- (- (- (* (* 2.0 l_0_21_10) l_0_21_32) ?x115396) ?x92460) ?x115407) ?x92486)))
 (let ((?x86502 (+ (+ (+ (+ (+ (+ (+ ?x92488 ?x135755) ?x137268) ?x137270) ?x137272) ?x137274) ?x135757) ?x135759)))
 (= (- (- (- (- ?x86502 ?x135761) ?x135763) ?x135765) ?x135767) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x135843 (* l_0_21_51 l_0_21_51)))
 (let ((?x135841 (* l_0_21_50 l_0_21_50)))
 (let ((?x135839 (* l_0_21_49 l_0_21_49)))
 (let ((?x135837 (* l_0_21_48 l_0_21_48)))
 (let ((?x135835 (* l_0_21_47 l_0_21_47)))
 (let ((?x138337 (* l_0_21_303 l_0_21_303)))
 (let ((?x138335 (* l_0_21_302 l_0_21_302)))
 (let ((?x138333 (* l_0_21_301 l_0_21_301)))
 (let ((?x138331 (* l_0_21_300 l_0_21_300)))
 (let ((?x138329 (* l_0_21_299 l_0_21_299)))
 (let ((?x138326 (* 2.0 l_0_21_262)))
 (let ((?x138327 (* ?x138326 l_0_21_266)))
 (let ((?x138323 (* 2.0 l_0_21_261)))
 (let ((?x138324 (* ?x138323 l_0_21_265)))
 (let ((?x138320 (* 2.0 l_0_21_260)))
 (let ((?x138321 (* ?x138320 l_0_21_264)))
 (let ((?x138317 (* 2.0 l_0_21_259)))
 (let ((?x138318 (* ?x138317 l_0_21_263)))
 (let ((?x135813 (* l_0_21_15 l_0_21_15)))
 (let ((?x135811 (* l_0_21_14 l_0_21_14)))
 (let ((?x135798 (* l_0_21_13 l_0_21_13)))
 (let ((?x72044 (+ (+ (+ (* l_0_21_11 l_0_21_11) (* l_0_21_12 l_0_21_12)) ?x135798) ?x135811)))
 (let ((?x138332 (+ (+ (+ (+ (+ (+ (+ ?x72044 ?x135813) ?x138318) ?x138321) ?x138324) ?x138327) ?x138329) ?x138331)))
 (let ((?x138342 (- (- (- (- (+ (+ (+ ?x138332 ?x138333) ?x138335) ?x138337) ?x135835) ?x135837) ?x135839) ?x135841)))
 (= (- ?x138342 ?x135843) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x135919 (* 2.0 l_0_21_51)))
 (let ((?x135920 (* ?x135919 l_0_21_56)))
 (let ((?x135916 (* 2.0 l_0_21_50)))
 (let ((?x135917 (* ?x135916 l_0_21_55)))
 (let ((?x135913 (* 2.0 l_0_21_49)))
 (let ((?x135914 (* ?x135913 l_0_21_54)))
 (let ((?x135910 (* 2.0 l_0_21_48)))
 (let ((?x135911 (* ?x135910 l_0_21_53)))
 (let ((?x135907 (* 2.0 l_0_21_47)))
 (let ((?x135908 (* ?x135907 l_0_21_52)))
 (let ((?x138377 (* 2.0 l_0_21_303)))
 (let ((?x138378 (* ?x138377 l_0_21_308)))
 (let ((?x138374 (* 2.0 l_0_21_302)))
 (let ((?x138375 (* ?x138374 l_0_21_307)))
 (let ((?x138371 (* 2.0 l_0_21_301)))
 (let ((?x138372 (* ?x138371 l_0_21_306)))
 (let ((?x138368 (* 2.0 l_0_21_300)))
 (let ((?x138369 (* ?x138368 l_0_21_305)))
 (let ((?x138365 (* 2.0 l_0_21_299)))
 (let ((?x138366 (* ?x138365 l_0_21_304)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137061 (* ?x137060 l_0_21_302)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137058 (* ?x137057 l_0_21_301)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137055 (* ?x137054 l_0_21_300)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137052 (* ?x137051 l_0_21_299)))
 (let ((?x138326 (* 2.0 l_0_21_262)))
 (let ((?x138359 (* ?x138326 l_0_21_271)))
 (let ((?x138323 (* 2.0 l_0_21_261)))
 (let ((?x138357 (* ?x138323 l_0_21_270)))
 (let ((?x138320 (* 2.0 l_0_21_260)))
 (let ((?x138355 (* ?x138320 l_0_21_269)))
 (let ((?x138317 (* 2.0 l_0_21_259)))
 (let ((?x138353 (* ?x138317 l_0_21_268)))
 (let ((?x135524 (* 2.0 l_0_21_190)))
 (let ((?x135525 (* ?x135524 l_0_21_194)))
 (let ((?x135521 (* 2.0 l_0_21_189)))
 (let ((?x135522 (* ?x135521 l_0_21_193)))
 (let ((?x135518 (* 2.0 l_0_21_188)))
 (let ((?x135519 (* ?x135518 l_0_21_192)))
 (let ((?x135515 (* 2.0 l_0_21_187)))
 (let ((?x135516 (* ?x135515 l_0_21_191)))
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135513 (* ?x135512 l_0_21_158)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135510 (* ?x135509 l_0_21_157)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135507 (* ?x135506 l_0_21_156)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135504 (* ?x135503 l_0_21_155)))
 (let ((?x135874 (* 2.0 l_0_21_15)))
 (let ((?x135875 (* ?x135874 l_0_21_20)))
 (let ((?x135871 (* 2.0 l_0_21_14)))
 (let ((?x135872 (* ?x135871 l_0_21_19)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x135869 (* ?x135255 l_0_21_18)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x135867 (* ?x113027 l_0_21_17)))
 (let ((?x51166 (+ (+ (+ (+ (* (* 2.0 l_0_21_11) l_0_21_16) ?x135867) ?x135869) ?x135872) ?x135875)))
 (let ((?x138351 (- (- (- (+ (+ (+ (+ ?x51166 ?x135504) ?x135507) ?x135510) ?x135513) ?x135516) ?x135519) ?x135522)))
 (let ((?x138362 (- (- (+ (+ (+ (+ (- ?x138351 ?x135525) ?x138353) ?x138355) ?x138357) ?x138359) ?x137052) ?x137055)))
 (let ((?x138379 (+ (+ (+ (+ (+ (- (- ?x138362 ?x137058) ?x137061) ?x138366) ?x138369) ?x138372) ?x138375) ?x138378)))
 (= (- (- (- (- (- ?x138379 ?x135908) ?x135911) ?x135914) ?x135917) ?x135920) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x135919 (* 2.0 l_0_21_51)))
 (let ((?x136014 (* ?x135919 l_0_21_62)))
 (let ((?x135916 (* 2.0 l_0_21_50)))
 (let ((?x136012 (* ?x135916 l_0_21_61)))
 (let ((?x135913 (* 2.0 l_0_21_49)))
 (let ((?x136010 (* ?x135913 l_0_21_60)))
 (let ((?x135910 (* 2.0 l_0_21_48)))
 (let ((?x136008 (* ?x135910 l_0_21_59)))
 (let ((?x135907 (* 2.0 l_0_21_47)))
 (let ((?x136006 (* ?x135907 l_0_21_58)))
 (let ((?x138377 (* 2.0 l_0_21_303)))
 (let ((?x138453 (* ?x138377 l_0_21_314)))
 (let ((?x138374 (* 2.0 l_0_21_302)))
 (let ((?x138451 (* ?x138374 l_0_21_313)))
 (let ((?x138371 (* 2.0 l_0_21_301)))
 (let ((?x138449 (* ?x138371 l_0_21_312)))
 (let ((?x138368 (* 2.0 l_0_21_300)))
 (let ((?x138447 (* ?x138368 l_0_21_311)))
 (let ((?x138365 (* 2.0 l_0_21_299)))
 (let ((?x138445 (* ?x138365 l_0_21_310)))
 (let ((?x138326 (* 2.0 l_0_21_262)))
 (let ((?x138443 (* ?x138326 l_0_21_277)))
 (let ((?x138327 (* ?x138326 l_0_21_266)))
 (let ((?x138323 (* 2.0 l_0_21_261)))
 (let ((?x138440 (* ?x138323 l_0_21_276)))
 (let ((?x138324 (* ?x138323 l_0_21_265)))
 (let ((?x138320 (* 2.0 l_0_21_260)))
 (let ((?x138437 (* ?x138320 l_0_21_275)))
 (let ((?x138321 (* ?x138320 l_0_21_264)))
 (let ((?x138317 (* 2.0 l_0_21_259)))
 (let ((?x138434 (* ?x138317 l_0_21_274)))
 (let ((?x138318 (* ?x138317 l_0_21_263)))
 (let ((?x135874 (* 2.0 l_0_21_15)))
 (let ((?x135983 (* ?x135874 l_0_21_26)))
 (let ((?x135871 (* 2.0 l_0_21_14)))
 (let ((?x135979 (* ?x135871 l_0_21_25)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x135964 (* ?x135255 l_0_21_24)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x135960 (* ?x113027 l_0_21_23)))
 (let ((?x138432 (+ (+ (+ (+ (* (* 2.0 l_0_21_11) l_0_21_22) ?x135960) ?x135964) ?x135979) ?x135983)))
 (let ((?x138442 (- (+ (- (+ (- (+ (- ?x138432 ?x138318) ?x138434) ?x138321) ?x138437) ?x138324) ?x138440) ?x138327)))
 (let ((?x138455 (- (+ (+ (+ (+ (+ (+ ?x138442 ?x138443) ?x138445) ?x138447) ?x138449) ?x138451) ?x138453) ?x136006)))
 (= (- (- (- (- ?x138455 ?x136008) ?x136010) ?x136012) ?x136014) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x135919 (* 2.0 l_0_21_51)))
 (let ((?x136067 (* ?x135919 l_0_21_69)))
 (let ((?x135916 (* 2.0 l_0_21_50)))
 (let ((?x136065 (* ?x135916 l_0_21_68)))
 (let ((?x135913 (* 2.0 l_0_21_49)))
 (let ((?x136063 (* ?x135913 l_0_21_67)))
 (let ((?x135910 (* 2.0 l_0_21_48)))
 (let ((?x136061 (* ?x135910 l_0_21_66)))
 (let ((?x135907 (* 2.0 l_0_21_47)))
 (let ((?x136059 (* ?x135907 l_0_21_65)))
 (let ((?x138377 (* 2.0 l_0_21_303)))
 (let ((?x138524 (* ?x138377 l_0_21_321)))
 (let ((?x138374 (* 2.0 l_0_21_302)))
 (let ((?x138522 (* ?x138374 l_0_21_320)))
 (let ((?x138371 (* 2.0 l_0_21_301)))
 (let ((?x138520 (* ?x138371 l_0_21_319)))
 (let ((?x138368 (* 2.0 l_0_21_300)))
 (let ((?x138518 (* ?x138368 l_0_21_318)))
 (let ((?x138365 (* 2.0 l_0_21_299)))
 (let ((?x138516 (* ?x138365 l_0_21_317)))
 (let ((?x138326 (* 2.0 l_0_21_262)))
 (let ((?x138514 (* ?x138326 l_0_21_284)))
 (let ((?x138323 (* 2.0 l_0_21_261)))
 (let ((?x138512 (* ?x138323 l_0_21_283)))
 (let ((?x138320 (* 2.0 l_0_21_260)))
 (let ((?x138510 (* ?x138320 l_0_21_282)))
 (let ((?x138317 (* 2.0 l_0_21_259)))
 (let ((?x138508 (* ?x138317 l_0_21_281)))
 (let ((?x135874 (* 2.0 l_0_21_15)))
 (let ((?x136037 (* ?x135874 l_0_21_33)))
 (let ((?x135871 (* 2.0 l_0_21_14)))
 (let ((?x91247 (* ?x135871 l_0_21_32)))
 (let ((?x135255 (* 2.0 l_0_21_13)))
 (let ((?x70406 (* ?x135255 l_0_21_31)))
 (let ((?x113027 (* 2.0 l_0_21_12)))
 (let ((?x113755 (* ?x113027 l_0_21_30)))
 (let ((?x138495 (+ (+ (+ (+ (* (* 2.0 l_0_21_11) l_0_21_29) ?x113755) ?x70406) ?x91247) ?x136037)))
 (let ((?x138501 (- (- ?x138495 (* (* 2.0 l_0_21_223) l_0_21_227)) (* (* 2.0 l_0_21_224) l_0_21_228))))
 (let ((?x138507 (- (- ?x138501 (* (* 2.0 l_0_21_225) l_0_21_229)) (* (* 2.0 l_0_21_226) l_0_21_230))))
 (let ((?x138521 (+ (+ (+ (+ (+ (+ (+ ?x138507 ?x138508) ?x138510) ?x138512) ?x138514) ?x138516) ?x138518) ?x138520)))
 (let ((?x138530 (- (- (- (- (- (+ (+ ?x138521 ?x138522) ?x138524) ?x136059) ?x136061) ?x136063) ?x136065) ?x136067)))
 (= ?x138530 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136172 (* l_0_21_57 l_0_21_57)))
 (let ((?x136170 (* l_0_21_56 l_0_21_56)))
 (let ((?x136168 (* l_0_21_55 l_0_21_55)))
 (let ((?x136166 (* l_0_21_54 l_0_21_54)))
 (let ((?x136164 (* l_0_21_53 l_0_21_53)))
 (let ((?x136162 (* l_0_21_52 l_0_21_52)))
 (let ((?x138594 (* l_0_21_309 l_0_21_309)))
 (let ((?x138592 (* l_0_21_308 l_0_21_308)))
 (let ((?x138590 (* l_0_21_307 l_0_21_307)))
 (let ((?x138588 (* l_0_21_306 l_0_21_306)))
 (let ((?x138586 (* l_0_21_305 l_0_21_305)))
 (let ((?x138584 (* l_0_21_304 l_0_21_304)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137135 (* ?x137060 l_0_21_307)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137133 (* ?x137057 l_0_21_306)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137131 (* ?x137054 l_0_21_305)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137129 (* ?x137051 l_0_21_304)))
 (let ((?x136160 (* l_0_21_21 l_0_21_21)))
 (let ((?x136154 (* l_0_21_20 l_0_21_20)))
 (let ((?x135524 (* 2.0 l_0_21_190)))
 (let ((?x135589 (* ?x135524 l_0_21_199)))
 (let ((?x136144 (* l_0_21_19 l_0_21_19)))
 (let ((?x135521 (* 2.0 l_0_21_189)))
 (let ((?x135587 (* ?x135521 l_0_21_198)))
 (let ((?x135518 (* 2.0 l_0_21_188)))
 (let ((?x135585 (* ?x135518 l_0_21_197)))
 (let ((?x135515 (* 2.0 l_0_21_187)))
 (let ((?x135583 (* ?x135515 l_0_21_196)))
 (let ((?x136142 (* l_0_21_18 l_0_21_18)))
 (let ((?x136140 (* l_0_21_17 l_0_21_17)))
 (let ((?x136176 (* l_0_21_16 l_0_21_16)))
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135575 (* ?x135512 l_0_21_163)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135573 (* ?x135509 l_0_21_162)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135571 (* ?x135506 l_0_21_161)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135569 (* ?x135503 l_0_21_160)))
 (let ((?x138573 (- (+ (+ (+ (+ (+ (+ ?x135569 ?x135571) ?x135573) ?x135575) ?x136176) ?x136140) ?x136142) ?x135583)))
 (let ((?x138580 (- (+ (+ (- (+ (- (- ?x138573 ?x135585) ?x135587) ?x136144) ?x135589) ?x136154) ?x136160) ?x137129)))
 (let ((?x138591 (+ (+ (+ (+ (- (- (- ?x138580 ?x137131) ?x137133) ?x137135) ?x138584) ?x138586) ?x138588) ?x138590)))
 (let ((?x138600 (- (- (- (- (- (+ (+ ?x138591 ?x138592) ?x138594) ?x136162) ?x136164) ?x136166) ?x136168) ?x136170)))
 (= (- ?x138600 ?x136172) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136284 (* 2.0 l_0_21_57)))
 (let ((?x136285 (* ?x136284 l_0_21_63)))
 (let ((?x136281 (* 2.0 l_0_21_56)))
 (let ((?x136282 (* ?x136281 l_0_21_62)))
 (let ((?x136278 (* 2.0 l_0_21_55)))
 (let ((?x136279 (* ?x136278 l_0_21_61)))
 (let ((?x136275 (* 2.0 l_0_21_54)))
 (let ((?x136276 (* ?x136275 l_0_21_60)))
 (let ((?x136272 (* 2.0 l_0_21_53)))
 (let ((?x136273 (* ?x136272 l_0_21_59)))
 (let ((?x136269 (* 2.0 l_0_21_52)))
 (let ((?x136270 (* ?x136269 l_0_21_58)))
 (let ((?x138619 (* 2.0 l_0_21_309)))
 (let ((?x138620 (* ?x138619 l_0_21_315)))
 (let ((?x138616 (* 2.0 l_0_21_308)))
 (let ((?x138617 (* ?x138616 l_0_21_314)))
 (let ((?x138613 (* 2.0 l_0_21_307)))
 (let ((?x138614 (* ?x138613 l_0_21_313)))
 (let ((?x138610 (* 2.0 l_0_21_306)))
 (let ((?x138611 (* ?x138610 l_0_21_312)))
 (let ((?x138607 (* 2.0 l_0_21_305)))
 (let ((?x138608 (* ?x138607 l_0_21_311)))
 (let ((?x138604 (* 2.0 l_0_21_304)))
 (let ((?x138605 (* ?x138604 l_0_21_310)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137193 (* ?x137060 l_0_21_313)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137191 (* ?x137057 l_0_21_312)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137189 (* ?x137054 l_0_21_311)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137187 (* ?x137051 l_0_21_310)))
 (let ((?x138326 (* 2.0 l_0_21_262)))
 (let ((?x138359 (* ?x138326 l_0_21_271)))
 (let ((?x138323 (* 2.0 l_0_21_261)))
 (let ((?x138357 (* ?x138323 l_0_21_270)))
 (let ((?x138320 (* 2.0 l_0_21_260)))
 (let ((?x138355 (* ?x138320 l_0_21_269)))
 (let ((?x138317 (* 2.0 l_0_21_259)))
 (let ((?x138353 (* ?x138317 l_0_21_268)))
 (let ((?x136266 (* 2.0 l_0_21_21)))
 (let ((?x136267 (* ?x136266 l_0_21_27)))
 (let ((?x136257 (* 2.0 l_0_21_20)))
 (let ((?x136258 (* ?x136257 l_0_21_26)))
 (let ((?x135524 (* 2.0 l_0_21_190)))
 (let ((?x135653 (* ?x135524 l_0_21_205)))
 (let ((?x136242 (* 2.0 l_0_21_19)))
 (let ((?x136243 (* ?x136242 l_0_21_25)))
 (let ((?x135521 (* 2.0 l_0_21_189)))
 (let ((?x135651 (* ?x135521 l_0_21_204)))
 (let ((?x135518 (* 2.0 l_0_21_188)))
 (let ((?x135649 (* ?x135518 l_0_21_203)))
 (let ((?x135515 (* 2.0 l_0_21_187)))
 (let ((?x135647 (* ?x135515 l_0_21_202)))
 (let ((?x135308 (* 2.0 l_0_21_18)))
 (let ((?x136240 (* ?x135308 l_0_21_24)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x136238 (* ?x134934 l_0_21_23)))
 (let ((?x134931 (* 2.0 l_0_21_16)))
 (let ((?x136218 (* ?x134931 l_0_21_22)))
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135645 (* ?x135512 l_0_21_169)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135643 (* ?x135509 l_0_21_168)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135641 (* ?x135506 l_0_21_167)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135639 (* ?x135503 l_0_21_166)))
 (let ((?x115544 (- (+ (+ (+ (+ (+ (+ ?x135639 ?x135641) ?x135643) ?x135645) ?x136218) ?x136238) ?x136240) ?x135647)))
 (let ((?x72191 (- (+ (+ (- (+ (- (- ?x115544 ?x135649) ?x135651) ?x136243) ?x135653) ?x136258) ?x136267) ?x138353)))
 (let ((?x138603 (- (- (- (- (- (- (- ?x72191 ?x138355) ?x138357) ?x138359) ?x137187) ?x137189) ?x137191) ?x137193)))
 (let ((?x138622 (- (+ (+ (+ (+ (+ (+ ?x138603 ?x138605) ?x138608) ?x138611) ?x138614) ?x138617) ?x138620) ?x136270)))
 (= (- (- (- (- (- ?x138622 ?x136273) ?x136276) ?x136279) ?x136282) ?x136285) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136284 (* 2.0 l_0_21_57)))
 (let ((?x136420 (* ?x136284 l_0_21_70)))
 (let ((?x136281 (* 2.0 l_0_21_56)))
 (let ((?x136418 (* ?x136281 l_0_21_69)))
 (let ((?x136278 (* 2.0 l_0_21_55)))
 (let ((?x136416 (* ?x136278 l_0_21_68)))
 (let ((?x136275 (* 2.0 l_0_21_54)))
 (let ((?x136414 (* ?x136275 l_0_21_67)))
 (let ((?x136272 (* 2.0 l_0_21_53)))
 (let ((?x136412 (* ?x136272 l_0_21_66)))
 (let ((?x136269 (* 2.0 l_0_21_52)))
 (let ((?x136410 (* ?x136269 l_0_21_65)))
 (let ((?x138619 (* 2.0 l_0_21_309)))
 (let ((?x138654 (* ?x138619 l_0_21_322)))
 (let ((?x138616 (* 2.0 l_0_21_308)))
 (let ((?x138652 (* ?x138616 l_0_21_321)))
 (let ((?x138613 (* 2.0 l_0_21_307)))
 (let ((?x138650 (* ?x138613 l_0_21_320)))
 (let ((?x138610 (* 2.0 l_0_21_306)))
 (let ((?x138648 (* ?x138610 l_0_21_319)))
 (let ((?x138607 (* 2.0 l_0_21_305)))
 (let ((?x138646 (* ?x138607 l_0_21_318)))
 (let ((?x138604 (* 2.0 l_0_21_304)))
 (let ((?x138644 (* ?x138604 l_0_21_317)))
 (let ((?x137060 (* 2.0 l_0_21_298)))
 (let ((?x137274 (* ?x137060 l_0_21_320)))
 (let ((?x137057 (* 2.0 l_0_21_297)))
 (let ((?x137272 (* ?x137057 l_0_21_319)))
 (let ((?x137054 (* 2.0 l_0_21_296)))
 (let ((?x137270 (* ?x137054 l_0_21_318)))
 (let ((?x137051 (* 2.0 l_0_21_295)))
 (let ((?x137268 (* ?x137051 l_0_21_317)))
 (let ((?x136266 (* 2.0 l_0_21_21)))
 (let ((?x136408 (* ?x136266 l_0_21_34)))
 (let ((?x136257 (* 2.0 l_0_21_20)))
 (let ((?x136402 (* ?x136257 l_0_21_33)))
 (let ((?x135524 (* 2.0 l_0_21_190)))
 (let ((?x135753 (* ?x135524 l_0_21_212)))
 (let ((?x136242 (* 2.0 l_0_21_19)))
 (let ((?x136392 (* ?x136242 l_0_21_32)))
 (let ((?x135521 (* 2.0 l_0_21_189)))
 (let ((?x135751 (* ?x135521 l_0_21_211)))
 (let ((?x135518 (* 2.0 l_0_21_188)))
 (let ((?x135749 (* ?x135518 l_0_21_210)))
 (let ((?x135515 (* 2.0 l_0_21_187)))
 (let ((?x135747 (* ?x135515 l_0_21_209)))
 (let ((?x135308 (* 2.0 l_0_21_18)))
 (let ((?x136390 (* ?x135308 l_0_21_31)))
 (let ((?x134934 (* 2.0 l_0_21_17)))
 (let ((?x136388 (* ?x134934 l_0_21_30)))
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135745 (* ?x135512 l_0_21_176)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135743 (* ?x135509 l_0_21_175)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135741 (* ?x135506 l_0_21_174)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135739 (* ?x135503 l_0_21_173)))
 (let ((?x18429 (+ (+ (+ (+ ?x135739 ?x135741) ?x135743) ?x135745) (* (* 2.0 l_0_21_16) l_0_21_29))))
 (let ((?x138629 (- (+ (- (- (- (+ (+ ?x18429 ?x136388) ?x136390) ?x135747) ?x135749) ?x135751) ?x136392) ?x135753)))
 (let ((?x138635 (- (- (+ (+ ?x138629 ?x136402) ?x136408) (* (* 2.0 l_0_21_223) l_0_21_232)) (* (* 2.0 l_0_21_224) l_0_21_233))))
 (let ((?x138639 (- (- ?x138635 (* (* 2.0 l_0_21_225) l_0_21_234)) (* (* 2.0 l_0_21_226) l_0_21_235))))
 (let ((?x138649 (+ (+ (+ (- (- (- (- ?x138639 ?x137268) ?x137270) ?x137272) ?x137274) ?x138644) ?x138646) ?x138648)))
 (let ((?x138659 (- (- (- (- (+ (+ (+ ?x138649 ?x138650) ?x138652) ?x138654) ?x136410) ?x136412) ?x136414) ?x136416)))
 (= (- (- ?x138659 ?x136418) ?x136420) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136515 (* l_0_21_64 l_0_21_64)))
 (let ((?x136513 (* l_0_21_63 l_0_21_63)))
 (let ((?x136511 (* l_0_21_62 l_0_21_62)))
 (let ((?x136509 (* l_0_21_61 l_0_21_61)))
 (let ((?x136507 (* l_0_21_60 l_0_21_60)))
 (let ((?x136505 (* l_0_21_59 l_0_21_59)))
 (let ((?x136503 (* l_0_21_58 l_0_21_58)))
 (let ((?x17542 (* l_0_21_316 l_0_21_316)))
 (let ((?x115758 (* l_0_21_315 l_0_21_315)))
 (let ((?x51856 (* l_0_21_314 l_0_21_314)))
 (let ((?x92859 (* l_0_21_313 l_0_21_313)))
 (let ((?x92719 (* l_0_21_312 l_0_21_312)))
 (let ((?x72354 (* l_0_21_311 l_0_21_311)))
 (let ((?x51830 (* l_0_21_310 l_0_21_310)))
 (let ((?x136501 (* l_0_21_28 l_0_21_28)))
 (let ((?x136499 (* l_0_21_27 l_0_21_27)))
 (let ((?x138326 (* 2.0 l_0_21_262)))
 (let ((?x138443 (* ?x138326 l_0_21_277)))
 (let ((?x138323 (* 2.0 l_0_21_261)))
 (let ((?x138440 (* ?x138323 l_0_21_276)))
 (let ((?x138320 (* 2.0 l_0_21_260)))
 (let ((?x138437 (* ?x138320 l_0_21_275)))
 (let ((?x136497 (* l_0_21_26 l_0_21_26)))
 (let ((?x138317 (* 2.0 l_0_21_259)))
 (let ((?x138434 (* ?x138317 l_0_21_274)))
 (let ((?x136495 (* l_0_21_25 l_0_21_25)))
 (let ((?x136493 (* l_0_21_24 l_0_21_24)))
 (let ((?x115865 (+ (+ (+ (* l_0_21_22 l_0_21_22) (* l_0_21_23 l_0_21_23)) ?x136493) ?x136495)))
 (let ((?x115778 (+ (+ (- (- (- (+ (- ?x115865 ?x138434) ?x136497) ?x138437) ?x138440) ?x138443) ?x136499) ?x136501)))
 (let ((?x92863 (+ (+ (+ (+ (+ (+ (+ ?x115778 ?x51830) ?x72354) ?x92719) ?x92859) ?x51856) ?x115758) ?x17542)))
 (let ((?x138665 (- (- (- (- (- (- (- ?x92863 ?x136503) ?x136505) ?x136507) ?x136509) ?x136511) ?x136513) ?x136515)))
 (= ?x138665 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x136665 (* (* 2.0 l_0_21_64) l_0_21_71)))
 (let ((?x136662 (* (* 2.0 l_0_21_63) l_0_21_70)))
 (let ((?x136659 (* (* 2.0 l_0_21_62) l_0_21_69)))
 (let ((?x136656 (* (* 2.0 l_0_21_61) l_0_21_68)))
 (let ((?x136653 (* (* 2.0 l_0_21_60) l_0_21_67)))
 (let ((?x136650 (* (* 2.0 l_0_21_59) l_0_21_66)))
 (let ((?x136647 (* (* 2.0 l_0_21_58) l_0_21_65)))
 (let ((?x138694 (* (* 2.0 l_0_21_316) l_0_21_323)))
 (let ((?x138691 (* (* 2.0 l_0_21_315) l_0_21_322)))
 (let ((?x138688 (* (* 2.0 l_0_21_314) l_0_21_321)))
 (let ((?x138685 (* (* 2.0 l_0_21_313) l_0_21_320)))
 (let ((?x138682 (* (* 2.0 l_0_21_312) l_0_21_319)))
 (let ((?x138679 (* (* 2.0 l_0_21_311) l_0_21_318)))
 (let ((?x138676 (* (* 2.0 l_0_21_310) l_0_21_317)))
 (let ((?x136644 (* (* 2.0 l_0_21_28) l_0_21_35)))
 (let ((?x136641 (* (* 2.0 l_0_21_27) l_0_21_34)))
 (let ((?x138326 (* 2.0 l_0_21_262)))
 (let ((?x138514 (* ?x138326 l_0_21_284)))
 (let ((?x138323 (* 2.0 l_0_21_261)))
 (let ((?x138512 (* ?x138323 l_0_21_283)))
 (let ((?x138320 (* 2.0 l_0_21_260)))
 (let ((?x138510 (* ?x138320 l_0_21_282)))
 (let ((?x136638 (* (* 2.0 l_0_21_26) l_0_21_33)))
 (let ((?x138317 (* 2.0 l_0_21_259)))
 (let ((?x138508 (* ?x138317 l_0_21_281)))
 (let ((?x136635 (* (* 2.0 l_0_21_25) l_0_21_32)))
 (let ((?x135387 (* 2.0 l_0_21_24)))
 (let ((?x136632 (* ?x135387 l_0_21_31)))
 (let ((?x135047 (* 2.0 l_0_21_23)))
 (let ((?x136630 (* ?x135047 l_0_21_30)))
 (let ((?x135382 (* 2.0 l_0_21_22)))
 (let ((?x136628 (* ?x135382 l_0_21_29)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x112937 (* ?x134726 l_0_21_152)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x137696 (* ?x134863 l_0_21_151)))
 (let ((?x92930 (+ (* (* 1.0 l_0_21_110) l_0_21_115) (* (* 1.0 l_0_21_111) l_0_21_116))))
 (let ((?x92925 (- (+ (- (- ?x92930 ?x137696) ?x112937) ?x136628) (* (* 2.0 l_0_21_223) l_0_21_238))))
 (let ((?x92919 (- (- ?x92925 (* (* 2.0 l_0_21_224) l_0_21_239)) (* (* 2.0 l_0_21_225) l_0_21_240))))
 (let ((?x51859 (+ (+ (+ (- ?x92919 (* (* 2.0 l_0_21_226) l_0_21_241)) ?x136630) ?x136632) ?x136635)))
 (let ((?x138674 (+ (+ (- (- (- (+ (- ?x51859 ?x138508) ?x136638) ?x138510) ?x138512) ?x138514) ?x136641) ?x136644)))
 (let ((?x138695 (+ (+ (+ (+ (+ (+ (+ ?x138674 ?x138676) ?x138679) ?x138682) ?x138685) ?x138688) ?x138691) ?x138694)))
 (let ((?x138702 (- (- (- (- (- (- (- ?x138695 ?x136647) ?x136650) ?x136653) ?x136656) ?x136659) ?x136662) ?x136665)))
 (let ((?x138706 (- (- ?x138702 (* (* 1.0 l_0_21_74) l_0_21_79)) (* (* 1.0 l_0_21_75) l_0_21_80))))
 (= ?x138706 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136803 (* l_0_21_72 l_0_21_72)))
 (let ((?x136801 (* l_0_21_71 l_0_21_71)))
 (let ((?x136799 (* l_0_21_70 l_0_21_70)))
 (let ((?x136797 (* l_0_21_69 l_0_21_69)))
 (let ((?x136795 (* l_0_21_68 l_0_21_68)))
 (let ((?x136793 (* l_0_21_67 l_0_21_67)))
 (let ((?x136791 (* l_0_21_66 l_0_21_66)))
 (let ((?x136789 (* l_0_21_65 l_0_21_65)))
 (let ((?x136787 (* l_0_21_36 l_0_21_36)))
 (let ((?x136785 (* l_0_21_35 l_0_21_35)))
 (let ((?x136783 (* l_0_21_34 l_0_21_34)))
 (let ((?x136781 (* l_0_21_33 l_0_21_33)))
 (let ((?x138743 (* l_0_21_324 l_0_21_324)))
 (let ((?x138741 (* l_0_21_323 l_0_21_323)))
 (let ((?x138739 (* l_0_21_322 l_0_21_322)))
 (let ((?x138737 (* l_0_21_321 l_0_21_321)))
 (let ((?x138735 (* l_0_21_320 l_0_21_320)))
 (let ((?x136779 (* l_0_21_32 l_0_21_32)))
 (let ((?x138732 (* l_0_21_319 l_0_21_319)))
 (let ((?x138730 (* l_0_21_318 l_0_21_318)))
 (let ((?x138728 (* l_0_21_317 l_0_21_317)))
 (let ((?x136777 (* l_0_21_31 l_0_21_31)))
 (let ((?x136775 (* l_0_21_30 l_0_21_30)))
 (let ((?x136773 (* l_0_21_29 l_0_21_29)))
 (let ((?x93065 (- (* (* (- 2.0) l_0_21_223) l_0_21_245) (* (* 2.0 l_0_21_224) l_0_21_246))))
 (let ((?x92996 (- (- ?x93065 (* (* 2.0 l_0_21_225) l_0_21_247)) (* (* 2.0 l_0_21_226) l_0_21_248))))
 (let ((?x138734 (+ (+ (+ (+ (+ (+ (+ ?x92996 ?x136773) ?x136775) ?x136777) ?x138728) ?x138730) ?x138732) ?x136779)))
 (let ((?x138746 (+ (+ (+ (+ (+ (+ (+ ?x138734 ?x138735) ?x138737) ?x138739) ?x138741) ?x138743) ?x136781) ?x136783)))
 (let ((?x138753 (- (- (- (- (- (+ (+ ?x138746 ?x136785) ?x136787) ?x136789) ?x136791) ?x136793) ?x136795) ?x136797)))
 (= (- (- (- ?x138753 ?x136799) ?x136801) ?x136803) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x134507 (* l_0_21_145 l_0_21_145)))
 (let ((?x93149 (* l_0_21_109 l_0_21_109)))
 (let ((?x116110 (* (/ 1.0 2.0) ?x93149)))
 (= (- (- ?x116110 ?x134507) (* (* (/ 1.0 2.0) l_0_21_73) l_0_21_73)) 0.0)))))
(assert
 (let ((?x138694 (* (* 2.0 l_0_21_316) l_0_21_323)))
 (let ((?x138691 (* (* 2.0 l_0_21_315) l_0_21_322)))
 (let ((?x138688 (* (* 2.0 l_0_21_314) l_0_21_321)))
 (let ((?x138685 (* (* 2.0 l_0_21_313) l_0_21_320)))
 (let ((?x138682 (* (* 2.0 l_0_21_312) l_0_21_319)))
 (let ((?x138679 (* (* 2.0 l_0_21_311) l_0_21_318)))
 (let ((?x138676 (* (* 2.0 l_0_21_310) l_0_21_317)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x138786 (* ?x137046 l_0_21_281)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134540 (* ?x134539 l_0_21_146)))
 (let ((?x93058 (+ (* (* 2.0 l_0_21_100) l_0_21_107) (* (* 2.0 l_0_21_101) l_0_21_94))))
 (let ((?x93064 (+ (+ ?x93058 (* (* 2.0 l_0_21_102) l_0_21_95)) (* (* 2.0 l_0_21_103) l_0_21_96))))
 (let ((?x116027 (+ (+ ?x93064 (* (* 2.0 l_0_21_104) l_0_21_97)) (* (* 2.0 l_0_21_105) l_0_21_98))))
 (let ((?x93079 (+ (+ ?x116027 (* (* 2.0 l_0_21_106) l_0_21_99)) (* (* 1.0 l_0_21_109) l_0_21_110))))
 (let ((?x138767 (- (- ?x93079 (* (* 2.0 l_0_21_130) l_0_21_137)) (* (* 2.0 l_0_21_131) l_0_21_138))))
 (let ((?x138773 (- (- ?x138767 (* (* 2.0 l_0_21_132) l_0_21_139)) (* (* 2.0 l_0_21_133) l_0_21_140))))
 (let ((?x138779 (- (- ?x138773 (* (* 2.0 l_0_21_134) l_0_21_141)) (* (* 2.0 l_0_21_135) l_0_21_142))))
 (let ((?x138785 (- (- (- ?x138779 (* (* 2.0 l_0_21_136) l_0_21_143)) ?x134540) (* (* 2.0 l_0_21_217) l_0_21_238))))
 (let ((?x138793 (+ (+ (+ (+ (+ (+ (- ?x138785 ?x138786) ?x138676) ?x138679) ?x138682) ?x138685) ?x138688) ?x138691)))
 (= (- (+ ?x138793 ?x138694) (* (* 1.0 l_0_21_73) l_0_21_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x112893 (* ?x134539 l_0_21_151)))
 (let ((?x138857 (- (- (* (* 1.0 l_0_21_109) l_0_21_115) ?x112893) (* (* 1.0 l_0_21_73) l_0_21_79))))
 (= ?x138857 0.0)))))
(assert
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134637 (* ?x134539 l_0_21_155)))
 (let ((?x138870 (- (- (* (* 1.0 l_0_21_109) l_0_21_119) ?x134637) (* (* 1.0 l_0_21_73) l_0_21_83))))
 (= ?x138870 0.0)))))
(assert
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134655 (* ?x134539 l_0_21_160)))
 (let ((?x138882 (- (- (* (* 1.0 l_0_21_109) l_0_21_124) ?x134655) (* (* 1.0 l_0_21_73) l_0_21_88))))
 (= ?x138882 0.0)))))
(assert
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134682 (* ?x134539 l_0_21_166)))
 (let ((?x138894 (- (- (* (* 1.0 l_0_21_109) l_0_21_130) ?x134682) (* (* 1.0 l_0_21_73) l_0_21_94))))
 (= ?x138894 0.0)))))
(assert
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134707 (* ?x134539 l_0_21_173)))
 (let ((?x138905 (+ (* (* (- 1.0) l_0_21_101) l_0_21_73) (* (* 1.0 l_0_21_109) l_0_21_137))))
 (= (- ?x138905 ?x134707) 0.0)))))
(assert
 (let ((?x138968 (* (* 2.0 l_0_21_280) l_0_21_287)))
 (let ((?x138965 (* (* 2.0 l_0_21_279) l_0_21_286)))
 (let ((?x138962 (* (* 2.0 l_0_21_278) l_0_21_285)))
 (let ((?x138959 (* (* 2.0 l_0_21_277) l_0_21_284)))
 (let ((?x138956 (* (* 2.0 l_0_21_276) l_0_21_283)))
 (let ((?x138953 (* (* 2.0 l_0_21_275) l_0_21_282)))
 (let ((?x138950 (* (* 2.0 l_0_21_274) l_0_21_281)))
 (let ((?x138946 (* 2.0 l_0_21_267)))
 (let ((?x138947 (* ?x138946 l_0_21_285)))
 (let ((?x138943 (* 2.0 l_0_21_266)))
 (let ((?x138944 (* ?x138943 l_0_21_284)))
 (let ((?x138940 (* 2.0 l_0_21_265)))
 (let ((?x138941 (* ?x138940 l_0_21_283)))
 (let ((?x138937 (* 2.0 l_0_21_264)))
 (let ((?x138938 (* ?x138937 l_0_21_282)))
 (let ((?x138934 (* 2.0 l_0_21_263)))
 (let ((?x138935 (* ?x138934 l_0_21_281)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x134866 (* ?x134726 l_0_21_156)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x134864 (* ?x134863 l_0_21_155)))
 (let ((?x138916 (+ (* (* 1.0 l_0_21_110) l_0_21_119) (* (* 1.0 l_0_21_111) l_0_21_120))))
 (let ((?x138924 (- (- (- (- ?x138916 ?x134864) ?x134866) (* (* 2.0 l_0_21_227) l_0_21_238)) (* (* 2.0 l_0_21_228) l_0_21_239))))
 (let ((?x138930 (- (- ?x138924 (* (* 2.0 l_0_21_229) l_0_21_240)) (* (* 2.0 l_0_21_230) l_0_21_241))))
 (let ((?x138942 (- (- (- (- ?x138930 (* (* 2.0 l_0_21_231) l_0_21_242)) ?x138935) ?x138938) ?x138941)))
 (let ((?x138963 (+ (+ (+ (+ (+ (- (- ?x138942 ?x138944) ?x138947) ?x138950) ?x138953) ?x138956) ?x138959) ?x138962)))
 (let ((?x138973 (- (- (+ (+ ?x138963 ?x138965) ?x138968) (* (* 1.0 l_0_21_74) l_0_21_83)) (* (* 1.0 l_0_21_75) l_0_21_84))))
 (= ?x138973 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x138694 (* (* 2.0 l_0_21_316) l_0_21_323)))
 (let ((?x138691 (* (* 2.0 l_0_21_315) l_0_21_322)))
 (let ((?x138688 (* (* 2.0 l_0_21_314) l_0_21_321)))
 (let ((?x138685 (* (* 2.0 l_0_21_313) l_0_21_320)))
 (let ((?x138682 (* (* 2.0 l_0_21_312) l_0_21_319)))
 (let ((?x138679 (* (* 2.0 l_0_21_311) l_0_21_318)))
 (let ((?x138676 (* (* 2.0 l_0_21_310) l_0_21_317)))
 (let ((?x139080 (* 2.0 l_0_21_273)))
 (let ((?x139081 (* ?x139080 l_0_21_286)))
 (let ((?x139077 (* 2.0 l_0_21_272)))
 (let ((?x139078 (* ?x139077 l_0_21_285)))
 (let ((?x139074 (* 2.0 l_0_21_271)))
 (let ((?x139075 (* ?x139074 l_0_21_284)))
 (let ((?x139071 (* 2.0 l_0_21_270)))
 (let ((?x139072 (* ?x139071 l_0_21_283)))
 (let ((?x139068 (* 2.0 l_0_21_269)))
 (let ((?x139069 (* ?x139068 l_0_21_282)))
 (let ((?x139065 (* 2.0 l_0_21_268)))
 (let ((?x139066 (* ?x139065 l_0_21_281)))
 (let ((?x136626 (* (* 2.0 l_0_21_208) l_0_21_215)))
 (let ((?x136623 (* (* 2.0 l_0_21_207) l_0_21_214)))
 (let ((?x136620 (* (* 2.0 l_0_21_206) l_0_21_213)))
 (let ((?x136617 (* (* 2.0 l_0_21_205) l_0_21_212)))
 (let ((?x136614 (* (* 2.0 l_0_21_204) l_0_21_211)))
 (let ((?x136611 (* (* 2.0 l_0_21_203) l_0_21_210)))
 (let ((?x136608 (* (* 2.0 l_0_21_202) l_0_21_209)))
 (let ((?x136605 (* (* 2.0 l_0_21_172) l_0_21_179)))
 (let ((?x136602 (* (* 2.0 l_0_21_171) l_0_21_178)))
 (let ((?x136599 (* (* 2.0 l_0_21_170) l_0_21_177)))
 (let ((?x136596 (* (* 2.0 l_0_21_169) l_0_21_176)))
 (let ((?x136593 (* (* 2.0 l_0_21_168) l_0_21_175)))
 (let ((?x136590 (* (* 2.0 l_0_21_167) l_0_21_174)))
 (let ((?x136587 (* (* 2.0 l_0_21_166) l_0_21_173)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x90511 (* ?x134726 l_0_21_161)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x139030 (* ?x134863 l_0_21_160)))
 (let ((?x139029 (+ (* (* 1.0 l_0_21_110) l_0_21_124) (* (* 1.0 l_0_21_111) l_0_21_125))))
 (let ((?x139037 (+ (+ (+ (+ (+ (- (- ?x139029 ?x139030) ?x90511) ?x136587) ?x136590) ?x136593) ?x136596) ?x136599)))
 (let ((?x139044 (- (- (- (- (- (+ (+ ?x139037 ?x136602) ?x136605) ?x136608) ?x136611) ?x136614) ?x136617) ?x136620)))
 (let ((?x139052 (- (- (- (- ?x139044 ?x136623) ?x136626) (* (* 2.0 l_0_21_232) l_0_21_238)) (* (* 2.0 l_0_21_233) l_0_21_239))))
 (let ((?x139058 (- (- ?x139052 (* (* 2.0 l_0_21_234) l_0_21_240)) (* (* 2.0 l_0_21_235) l_0_21_241))))
 (let ((?x139064 (- (- ?x139058 (* (* 2.0 l_0_21_236) l_0_21_242)) (* (* 2.0 l_0_21_237) l_0_21_243))))
 (let ((?x139083 (- (- (- (- (- (- (- ?x139064 ?x139066) ?x139069) ?x139072) ?x139075) ?x139078) ?x139081) ?x138676)))
 (let ((?x139091 (- (- (- (- (- (- (- ?x139083 ?x138679) ?x138682) ?x138685) ?x138688) ?x138691) ?x138694) (* (* 1.0 l_0_21_74) l_0_21_88))))
 (= (- ?x139091 (* (* 1.0 l_0_21_75) l_0_21_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x138968 (* (* 2.0 l_0_21_280) l_0_21_287)))
 (let ((?x138965 (* (* 2.0 l_0_21_279) l_0_21_286)))
 (let ((?x138962 (* (* 2.0 l_0_21_278) l_0_21_285)))
 (let ((?x138959 (* (* 2.0 l_0_21_277) l_0_21_284)))
 (let ((?x138956 (* (* 2.0 l_0_21_276) l_0_21_283)))
 (let ((?x138953 (* (* 2.0 l_0_21_275) l_0_21_282)))
 (let ((?x138950 (* (* 2.0 l_0_21_274) l_0_21_281)))
 (let ((?x139122 (* l_0_21_244 l_0_21_244)))
 (let ((?x139120 (* l_0_21_243 l_0_21_243)))
 (let ((?x139118 (* l_0_21_242 l_0_21_242)))
 (let ((?x139116 (* l_0_21_241 l_0_21_241)))
 (let ((?x139114 (* l_0_21_240 l_0_21_240)))
 (let ((?x139112 (* l_0_21_239 l_0_21_239)))
 (let ((?x139110 (* l_0_21_238 l_0_21_238)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x135033 (* ?x134726 l_0_21_167)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x135030 (* ?x134863 l_0_21_166)))
 (let ((?x139107 (+ (* (* 1.0 l_0_21_110) l_0_21_130) (* (* 1.0 l_0_21_111) l_0_21_131))))
 (let ((?x139119 (- (- (- (- (- (- (- ?x139107 ?x135030) ?x135033) ?x139110) ?x139112) ?x139114) ?x139116) ?x139118)))
 (let ((?x139128 (- (- (- (- (- (- (- ?x139119 ?x139120) ?x139122) ?x138950) ?x138953) ?x138956) ?x138959) ?x138962)))
 (let ((?x139134 (- (- (- (- ?x139128 ?x138965) ?x138968) (* (* 1.0 l_0_21_74) l_0_21_94)) (* (* 1.0 l_0_21_75) l_0_21_95))))
 (= ?x139134 0.0))))))))))))))))))))))))
(assert
 (let ((?x139197 (* l_0_21_288 l_0_21_288)))
 (let ((?x139195 (* l_0_21_287 l_0_21_287)))
 (let ((?x139193 (* l_0_21_286 l_0_21_286)))
 (let ((?x139191 (* l_0_21_285 l_0_21_285)))
 (let ((?x139189 (* l_0_21_284 l_0_21_284)))
 (let ((?x139187 (* l_0_21_283 l_0_21_283)))
 (let ((?x139185 (* l_0_21_282 l_0_21_282)))
 (let ((?x139183 (* l_0_21_281 l_0_21_281)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x135110 (* ?x134726 l_0_21_174)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x139159 (* ?x134863 l_0_21_173)))
 (let ((?x139154 (- (* (* (- 1.0) l_0_21_101) l_0_21_74) (* (* 1.0 l_0_21_102) l_0_21_75))))
 (let ((?x139158 (+ (+ ?x139154 (* (* 1.0 l_0_21_110) l_0_21_137)) (* (* 1.0 l_0_21_111) l_0_21_138))))
 (let ((?x139167 (- (- (- (- ?x139158 ?x139159) ?x135110) (* (* 2.0 l_0_21_238) l_0_21_245)) (* (* 2.0 l_0_21_239) l_0_21_246))))
 (let ((?x139173 (- (- ?x139167 (* (* 2.0 l_0_21_240) l_0_21_247)) (* (* 2.0 l_0_21_241) l_0_21_248))))
 (let ((?x139179 (- (- ?x139173 (* (* 2.0 l_0_21_242) l_0_21_249)) (* (* 2.0 l_0_21_243) l_0_21_250))))
 (let ((?x139188 (- (- (- (- ?x139179 (* (* 2.0 l_0_21_244) l_0_21_251)) ?x139183) ?x139185) ?x139187)))
 (= (- (- (- (- (- ?x139188 ?x139189) ?x139191) ?x139193) ?x139195) ?x139197) 0.0))))))))))))))))))))
(assert
 (let ((?x90844 (* l_0_21_154 l_0_21_154)))
 (let ((?x90851 (* l_0_21_153 l_0_21_153)))
 (let ((?x88194 (* l_0_21_152 l_0_21_152)))
 (let ((?x113303 (* l_0_21_151 l_0_21_151)))
 (let ((?x136991 (* l_0_21_118 l_0_21_118)))
 (let ((?x93273 (* (/ 1.0 2.0) ?x136991)))
 (let ((?x136989 (* l_0_21_117 l_0_21_117)))
 (let ((?x93301 (* (/ 1.0 2.0) ?x136989)))
 (let ((?x136987 (* l_0_21_116 l_0_21_116)))
 (let ((?x72751 (* (/ 1.0 2.0) ?x136987)))
 (let ((?x136985 (* l_0_21_115 l_0_21_115)))
 (let ((?x116658 (* (/ 1.0 2.0) ?x136985)))
 (let ((?x116656 (- (- (- (- (+ (+ (+ ?x116658 ?x72751) ?x93301) ?x93273) ?x113303) ?x88194) ?x90851) ?x90844)))
 (let ((?x93444 (- (- ?x116656 (* (* (/ 1.0 2.0) l_0_21_79) l_0_21_79)) (* (* (/ 1.0 2.0) l_0_21_80) l_0_21_80))))
 (let ((?x93635 (- (- ?x93444 (* (* (/ 1.0 2.0) l_0_21_81) l_0_21_81)) (* (* (/ 1.0 2.0) l_0_21_82) l_0_21_82))))
 (= ?x93635 0.0)))))))))))))))))
(assert
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135513 (* ?x135512 l_0_21_158)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135510 (* ?x135509 l_0_21_157)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135507 (* ?x135506 l_0_21_156)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135504 (* ?x135503 l_0_21_155)))
 (let ((?x116705 (+ (* (* 1.0 l_0_21_115) l_0_21_119) (* (* 1.0 l_0_21_116) l_0_21_120))))
 (let ((?x139234 (+ (+ ?x116705 (* (* 1.0 l_0_21_117) l_0_21_121)) (* (* 1.0 l_0_21_118) l_0_21_122))))
 (let ((?x139241 (- (- (- (- (- ?x139234 ?x135504) ?x135507) ?x135510) ?x135513) (* (* 1.0 l_0_21_79) l_0_21_83))))
 (let ((?x139247 (- (- ?x139241 (* (* 1.0 l_0_21_80) l_0_21_84)) (* (* 1.0 l_0_21_81) l_0_21_85))))
 (= (- ?x139247 (* (* 1.0 l_0_21_82) l_0_21_86)) 0.0))))))))))))))
(assert
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135575 (* ?x135512 l_0_21_163)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135573 (* ?x135509 l_0_21_162)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135571 (* ?x135506 l_0_21_161)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135569 (* ?x135503 l_0_21_160)))
 (let ((?x139268 (+ (* (* 1.0 l_0_21_115) l_0_21_124) (* (* 1.0 l_0_21_116) l_0_21_125))))
 (let ((?x139272 (+ (+ ?x139268 (* (* 1.0 l_0_21_117) l_0_21_126)) (* (* 1.0 l_0_21_118) l_0_21_127))))
 (let ((?x139278 (- (- (- (- (- ?x139272 ?x135569) ?x135571) ?x135573) ?x135575) (* (* 1.0 l_0_21_79) l_0_21_88))))
 (let ((?x139282 (- (- ?x139278 (* (* 1.0 l_0_21_80) l_0_21_89)) (* (* 1.0 l_0_21_81) l_0_21_90))))
 (= (- ?x139282 (* (* 1.0 l_0_21_82) l_0_21_91)) 0.0))))))))))))))
(assert
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135645 (* ?x135512 l_0_21_169)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135643 (* ?x135509 l_0_21_168)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135641 (* ?x135506 l_0_21_167)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135639 (* ?x135503 l_0_21_166)))
 (let ((?x116947 (+ (* (* 1.0 l_0_21_115) l_0_21_130) (* (* 1.0 l_0_21_116) l_0_21_131))))
 (let ((?x139298 (+ (+ ?x116947 (* (* 1.0 l_0_21_117) l_0_21_132)) (* (* 1.0 l_0_21_118) l_0_21_133))))
 (let ((?x139304 (- (- (- (- (- ?x139298 ?x135639) ?x135641) ?x135643) ?x135645) (* (* 1.0 l_0_21_79) l_0_21_94))))
 (let ((?x139308 (- (- ?x139304 (* (* 1.0 l_0_21_80) l_0_21_95)) (* (* 1.0 l_0_21_81) l_0_21_96))))
 (= (- ?x139308 (* (* 1.0 l_0_21_82) l_0_21_97)) 0.0))))))))))))))
(assert
 (let ((?x135512 (* 2.0 l_0_21_154)))
 (let ((?x135745 (* ?x135512 l_0_21_176)))
 (let ((?x135509 (* 2.0 l_0_21_153)))
 (let ((?x135743 (* ?x135509 l_0_21_175)))
 (let ((?x135506 (* 2.0 l_0_21_152)))
 (let ((?x135741 (* ?x135506 l_0_21_174)))
 (let ((?x135503 (* 2.0 l_0_21_151)))
 (let ((?x135739 (* ?x135503 l_0_21_173)))
 (let ((?x139338 (- (* (* (- 1.0) l_0_21_101) l_0_21_79) (* (* 1.0 l_0_21_102) l_0_21_80))))
 (let ((?x139343 (- (- ?x139338 (* (* 1.0 l_0_21_103) l_0_21_81)) (* (* 1.0 l_0_21_104) l_0_21_82))))
 (let ((?x139347 (+ (+ ?x139343 (* (* 1.0 l_0_21_115) l_0_21_137)) (* (* 1.0 l_0_21_116) l_0_21_138))))
 (let ((?x139351 (+ (+ ?x139347 (* (* 1.0 l_0_21_117) l_0_21_139)) (* (* 1.0 l_0_21_118) l_0_21_140))))
 (= (- (- (- (- ?x139351 ?x135739) ?x135741) ?x135743) ?x135745) 0.0))))))))))))))
(assert
 (let ((?x135823 (* l_0_21_159 l_0_21_159)))
 (let ((?x135821 (* l_0_21_158 l_0_21_158)))
 (let ((?x135819 (* l_0_21_157 l_0_21_157)))
 (let ((?x135817 (* l_0_21_156 l_0_21_156)))
 (let ((?x135815 (* l_0_21_155 l_0_21_155)))
 (let ((?x139389 (* l_0_21_123 l_0_21_123)))
 (let ((?x139390 (* (/ 1.0 2.0) ?x139389)))
 (let ((?x139386 (* l_0_21_122 l_0_21_122)))
 (let ((?x139387 (* (/ 1.0 2.0) ?x139386)))
 (let ((?x139383 (* l_0_21_121 l_0_21_121)))
 (let ((?x139384 (* (/ 1.0 2.0) ?x139383)))
 (let ((?x139380 (* l_0_21_120 l_0_21_120)))
 (let ((?x139381 (* (/ 1.0 2.0) ?x139380)))
 (let ((?x139378 (* l_0_21_119 l_0_21_119)))
 (let ((?x139379 (* (/ 1.0 2.0) ?x139378)))
 (let ((?x139394 (- (- (- (+ (+ (+ (+ ?x139379 ?x139381) ?x139384) ?x139387) ?x139390) ?x135815) ?x135817) ?x135819)))
 (let ((?x139402 (- (- (- (- ?x139394 ?x135821) ?x135823) (* (* (/ 1.0 2.0) l_0_21_83) l_0_21_83)) (* (* (/ 1.0 2.0) l_0_21_84) l_0_21_84))))
 (let ((?x139408 (- (- ?x139402 (* (* (/ 1.0 2.0) l_0_21_85) l_0_21_85)) (* (* (/ 1.0 2.0) l_0_21_86) l_0_21_86))))
 (= (- ?x139408 (* (* (/ 1.0 2.0) l_0_21_87) l_0_21_87)) 0.0))))))))))))))))))))
(assert
 (let ((?x135889 (* 2.0 l_0_21_159)))
 (let ((?x135890 (* ?x135889 l_0_21_164)))
 (let ((?x135886 (* 2.0 l_0_21_158)))
 (let ((?x135887 (* ?x135886 l_0_21_163)))
 (let ((?x135883 (* 2.0 l_0_21_157)))
 (let ((?x135884 (* ?x135883 l_0_21_162)))
 (let ((?x135880 (* 2.0 l_0_21_156)))
 (let ((?x135881 (* ?x135880 l_0_21_161)))
 (let ((?x135877 (* 2.0 l_0_21_155)))
 (let ((?x135878 (* ?x135877 l_0_21_160)))
 (let ((?x116960 (+ (* (* 1.0 l_0_21_119) l_0_21_124) (* (* 1.0 l_0_21_120) l_0_21_125))))
 (let ((?x139420 (+ (+ ?x116960 (* (* 1.0 l_0_21_121) l_0_21_126)) (* (* 1.0 l_0_21_122) l_0_21_127))))
 (let ((?x139426 (- (- (- (+ ?x139420 (* (* 1.0 l_0_21_123) l_0_21_128)) ?x135878) ?x135881) ?x135884)))
 (let ((?x139434 (- (- (- (- ?x139426 ?x135887) ?x135890) (* (* 1.0 l_0_21_83) l_0_21_88)) (* (* 1.0 l_0_21_84) l_0_21_89))))
 (let ((?x139440 (- (- ?x139434 (* (* 1.0 l_0_21_85) l_0_21_90)) (* (* 1.0 l_0_21_86) l_0_21_91))))
 (= (- ?x139440 (* (* 1.0 l_0_21_87) l_0_21_92)) 0.0)))))))))))))))))
(assert
 (let ((?x135889 (* 2.0 l_0_21_159)))
 (let ((?x135994 (* ?x135889 l_0_21_170)))
 (let ((?x135886 (* 2.0 l_0_21_158)))
 (let ((?x135992 (* ?x135886 l_0_21_169)))
 (let ((?x135883 (* 2.0 l_0_21_157)))
 (let ((?x135990 (* ?x135883 l_0_21_168)))
 (let ((?x135880 (* 2.0 l_0_21_156)))
 (let ((?x135988 (* ?x135880 l_0_21_167)))
 (let ((?x135877 (* 2.0 l_0_21_155)))
 (let ((?x135986 (* ?x135877 l_0_21_166)))
 (let ((?x139466 (+ (* (* 1.0 l_0_21_119) l_0_21_130) (* (* 1.0 l_0_21_120) l_0_21_131))))
 (let ((?x139470 (+ (+ ?x139466 (* (* 1.0 l_0_21_121) l_0_21_132)) (* (* 1.0 l_0_21_122) l_0_21_133))))
 (let ((?x139475 (- (- (- (+ ?x139470 (* (* 1.0 l_0_21_123) l_0_21_134)) ?x135986) ?x135988) ?x135990)))
 (let ((?x139481 (- (- (- (- ?x139475 ?x135992) ?x135994) (* (* 1.0 l_0_21_83) l_0_21_94)) (* (* 1.0 l_0_21_84) l_0_21_95))))
 (let ((?x139485 (- (- ?x139481 (* (* 1.0 l_0_21_85) l_0_21_96)) (* (* 1.0 l_0_21_86) l_0_21_97))))
 (= (- ?x139485 (* (* 1.0 l_0_21_87) l_0_21_98)) 0.0)))))))))))))))))
(assert
 (let ((?x135889 (* 2.0 l_0_21_159)))
 (let ((?x136047 (* ?x135889 l_0_21_177)))
 (let ((?x135886 (* 2.0 l_0_21_158)))
 (let ((?x136045 (* ?x135886 l_0_21_176)))
 (let ((?x135883 (* 2.0 l_0_21_157)))
 (let ((?x136043 (* ?x135883 l_0_21_175)))
 (let ((?x135880 (* 2.0 l_0_21_156)))
 (let ((?x136041 (* ?x135880 l_0_21_174)))
 (let ((?x135877 (* 2.0 l_0_21_155)))
 (let ((?x136039 (* ?x135877 l_0_21_173)))
 (let ((?x139501 (- (* (* (- 1.0) l_0_21_101) l_0_21_83) (* (* 1.0 l_0_21_102) l_0_21_84))))
 (let ((?x139505 (- (- ?x139501 (* (* 1.0 l_0_21_103) l_0_21_85)) (* (* 1.0 l_0_21_104) l_0_21_86))))
 (let ((?x139510 (+ (- ?x139505 (* (* 1.0 l_0_21_105) l_0_21_87)) (* (* 1.0 l_0_21_119) l_0_21_137))))
 (let ((?x139514 (+ (+ ?x139510 (* (* 1.0 l_0_21_120) l_0_21_138)) (* (* 1.0 l_0_21_121) l_0_21_139))))
 (let ((?x139518 (+ (+ ?x139514 (* (* 1.0 l_0_21_122) l_0_21_140)) (* (* 1.0 l_0_21_123) l_0_21_141))))
 (= (- (- (- (- (- ?x139518 ?x136039) ?x136041) ?x136043) ?x136045) ?x136047) 0.0)))))))))))))))))
(assert
 (let ((?x136138 (* l_0_21_165 l_0_21_165)))
 (let ((?x136123 (* l_0_21_164 l_0_21_164)))
 (let ((?x136120 (* l_0_21_163 l_0_21_163)))
 (let ((?x136116 (* l_0_21_162 l_0_21_162)))
 (let ((?x136112 (* l_0_21_161 l_0_21_161)))
 (let ((?x136108 (* l_0_21_160 l_0_21_160)))
 (let ((?x139570 (* l_0_21_129 l_0_21_129)))
 (let ((?x139571 (* (/ 1.0 2.0) ?x139570)))
 (let ((?x139567 (* l_0_21_128 l_0_21_128)))
 (let ((?x139568 (* (/ 1.0 2.0) ?x139567)))
 (let ((?x139564 (* l_0_21_127 l_0_21_127)))
 (let ((?x139565 (* (/ 1.0 2.0) ?x139564)))
 (let ((?x139561 (* l_0_21_126 l_0_21_126)))
 (let ((?x139562 (* (/ 1.0 2.0) ?x139561)))
 (let ((?x139558 (* l_0_21_125 l_0_21_125)))
 (let ((?x139559 (* (/ 1.0 2.0) ?x139558)))
 (let ((?x139556 (* l_0_21_124 l_0_21_124)))
 (let ((?x139557 (* (/ 1.0 2.0) ?x139556)))
 (let ((?x139574 (- (- (+ (+ (+ (+ (+ ?x139557 ?x139559) ?x139562) ?x139565) ?x139568) ?x139571) ?x136108) ?x136112)))
 (let ((?x139581 (- (- (- (- (- ?x139574 ?x136116) ?x136120) ?x136123) ?x136138) (* (* (/ 1.0 2.0) l_0_21_88) l_0_21_88))))
 (let ((?x139587 (- (- ?x139581 (* (* (/ 1.0 2.0) l_0_21_89) l_0_21_89)) (* (* (/ 1.0 2.0) l_0_21_90) l_0_21_90))))
 (let ((?x139593 (- (- ?x139587 (* (* (/ 1.0 2.0) l_0_21_91) l_0_21_91)) (* (* (/ 1.0 2.0) l_0_21_92) l_0_21_92))))
 (= (- ?x139593 (* (* (/ 1.0 2.0) l_0_21_93) l_0_21_93)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x136235 (* 2.0 l_0_21_165)))
 (let ((?x136236 (* ?x136235 l_0_21_171)))
 (let ((?x136232 (* 2.0 l_0_21_164)))
 (let ((?x136233 (* ?x136232 l_0_21_170)))
 (let ((?x136229 (* 2.0 l_0_21_163)))
 (let ((?x136230 (* ?x136229 l_0_21_169)))
 (let ((?x136226 (* 2.0 l_0_21_162)))
 (let ((?x136227 (* ?x136226 l_0_21_168)))
 (let ((?x136223 (* 2.0 l_0_21_161)))
 (let ((?x136224 (* ?x136223 l_0_21_167)))
 (let ((?x136220 (* 2.0 l_0_21_160)))
 (let ((?x136221 (* ?x136220 l_0_21_166)))
 (let ((?x139615 (+ (* (* 1.0 l_0_21_124) l_0_21_130) (* (* 1.0 l_0_21_125) l_0_21_131))))
 (let ((?x139621 (+ (+ ?x139615 (* (* 1.0 l_0_21_126) l_0_21_132)) (* (* 1.0 l_0_21_127) l_0_21_133))))
 (let ((?x139627 (+ (+ ?x139621 (* (* 1.0 l_0_21_128) l_0_21_134)) (* (* 1.0 l_0_21_129) l_0_21_135))))
 (let ((?x139636 (- (- (- (- (- (- (- ?x139627 ?x136221) ?x136224) ?x136227) ?x136230) ?x136233) ?x136236) (* (* 1.0 l_0_21_88) l_0_21_94))))
 (let ((?x139642 (- (- ?x139636 (* (* 1.0 l_0_21_89) l_0_21_95)) (* (* 1.0 l_0_21_90) l_0_21_96))))
 (let ((?x139648 (- (- ?x139642 (* (* 1.0 l_0_21_91) l_0_21_97)) (* (* 1.0 l_0_21_92) l_0_21_98))))
 (= (- ?x139648 (* (* 1.0 l_0_21_93) l_0_21_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x136235 (* 2.0 l_0_21_165)))
 (let ((?x136386 (* ?x136235 l_0_21_178)))
 (let ((?x136232 (* 2.0 l_0_21_164)))
 (let ((?x136384 (* ?x136232 l_0_21_177)))
 (let ((?x136229 (* 2.0 l_0_21_163)))
 (let ((?x136382 (* ?x136229 l_0_21_176)))
 (let ((?x136226 (* 2.0 l_0_21_162)))
 (let ((?x136380 (* ?x136226 l_0_21_175)))
 (let ((?x136223 (* 2.0 l_0_21_161)))
 (let ((?x136378 (* ?x136223 l_0_21_174)))
 (let ((?x136220 (* 2.0 l_0_21_160)))
 (let ((?x136376 (* ?x136220 l_0_21_173)))
 (let ((?x139678 (- (* (* (- 1.0) l_0_21_101) l_0_21_88) (* (* 1.0 l_0_21_102) l_0_21_89))))
 (let ((?x139682 (- (- ?x139678 (* (* 1.0 l_0_21_103) l_0_21_90)) (* (* 1.0 l_0_21_104) l_0_21_91))))
 (let ((?x139687 (- (- ?x139682 (* (* 1.0 l_0_21_105) l_0_21_92)) (* (* 1.0 l_0_21_106) l_0_21_93))))
 (let ((?x139691 (+ (+ ?x139687 (* (* 1.0 l_0_21_124) l_0_21_137)) (* (* 1.0 l_0_21_125) l_0_21_138))))
 (let ((?x139695 (+ (+ ?x139691 (* (* 1.0 l_0_21_126) l_0_21_139)) (* (* 1.0 l_0_21_127) l_0_21_140))))
 (let ((?x139699 (+ (+ ?x139695 (* (* 1.0 l_0_21_128) l_0_21_141)) (* (* 1.0 l_0_21_129) l_0_21_142))))
 (= (- (- (- (- (- (- ?x139699 ?x136376) ?x136378) ?x136380) ?x136382) ?x136384) ?x136386) 0.0))))))))))))))))))))
(assert
 (let ((?x136473 (* l_0_21_172 l_0_21_172)))
 (let ((?x136471 (* l_0_21_171 l_0_21_171)))
 (let ((?x136469 (* l_0_21_170 l_0_21_170)))
 (let ((?x136467 (* l_0_21_169 l_0_21_169)))
 (let ((?x136465 (* l_0_21_168 l_0_21_168)))
 (let ((?x136463 (* l_0_21_167 l_0_21_167)))
 (let ((?x136461 (* l_0_21_166 l_0_21_166)))
 (let ((?x139735 (* l_0_21_136 l_0_21_136)))
 (let ((?x139736 (* (/ 1.0 2.0) ?x139735)))
 (let ((?x139732 (* l_0_21_135 l_0_21_135)))
 (let ((?x139733 (* (/ 1.0 2.0) ?x139732)))
 (let ((?x139729 (* l_0_21_134 l_0_21_134)))
 (let ((?x139730 (* (/ 1.0 2.0) ?x139729)))
 (let ((?x139726 (* l_0_21_133 l_0_21_133)))
 (let ((?x139727 (* (/ 1.0 2.0) ?x139726)))
 (let ((?x117396 (* l_0_21_132 l_0_21_132)))
 (let ((?x139724 (* (/ 1.0 2.0) ?x117396)))
 (let ((?x117398 (* l_0_21_131 l_0_21_131)))
 (let ((?x94001 (* (/ 1.0 2.0) ?x117398)))
 (let ((?x94013 (* l_0_21_130 l_0_21_130)))
 (let ((?x117435 (* (/ 1.0 2.0) ?x94013)))
 (let ((?x139728 (+ (+ (+ (+ (* (* (- (/ 1.0 2.0)) l_0_21_100) l_0_21_100) ?x117435) ?x94001) ?x139724) ?x139727)))
 (let ((?x139741 (- (- (- (- (+ (+ (+ ?x139728 ?x139730) ?x139733) ?x139736) ?x136461) ?x136463) ?x136465) ?x136467)))
 (let ((?x139747 (- (- (- (- ?x139741 ?x136469) ?x136471) ?x136473) (* (* (/ 1.0 2.0) l_0_21_94) l_0_21_94))))
 (let ((?x139753 (- (- ?x139747 (* (* (/ 1.0 2.0) l_0_21_95) l_0_21_95)) (* (* (/ 1.0 2.0) l_0_21_96) l_0_21_96))))
 (let ((?x139759 (- (- ?x139753 (* (* (/ 1.0 2.0) l_0_21_97) l_0_21_97)) (* (* (/ 1.0 2.0) l_0_21_98) l_0_21_98))))
 (= (- ?x139759 (* (* (/ 1.0 2.0) l_0_21_99) l_0_21_99)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x136605 (* (* 2.0 l_0_21_172) l_0_21_179)))
 (let ((?x136602 (* (* 2.0 l_0_21_171) l_0_21_178)))
 (let ((?x136599 (* (* 2.0 l_0_21_170) l_0_21_177)))
 (let ((?x136596 (* (* 2.0 l_0_21_169) l_0_21_176)))
 (let ((?x136593 (* (* 2.0 l_0_21_168) l_0_21_175)))
 (let ((?x136590 (* (* 2.0 l_0_21_167) l_0_21_174)))
 (let ((?x136587 (* (* 2.0 l_0_21_166) l_0_21_173)))
 (let ((?x139789 (- (* (* (- 1.0) l_0_21_100) l_0_21_107) (* (* 1.0 l_0_21_101) l_0_21_94))))
 (let ((?x139793 (- (- ?x139789 (* (* 1.0 l_0_21_102) l_0_21_95)) (* (* 1.0 l_0_21_103) l_0_21_96))))
 (let ((?x139797 (- (- ?x139793 (* (* 1.0 l_0_21_104) l_0_21_97)) (* (* 1.0 l_0_21_105) l_0_21_98))))
 (let ((?x139802 (+ (- ?x139797 (* (* 1.0 l_0_21_106) l_0_21_99)) (* (* 1.0 l_0_21_130) l_0_21_137))))
 (let ((?x139808 (+ (+ ?x139802 (* (* 1.0 l_0_21_131) l_0_21_138)) (* (* 1.0 l_0_21_132) l_0_21_139))))
 (let ((?x139814 (+ (+ ?x139808 (* (* 1.0 l_0_21_133) l_0_21_140)) (* (* 1.0 l_0_21_134) l_0_21_141))))
 (let ((?x139820 (+ (+ ?x139814 (* (* 1.0 l_0_21_135) l_0_21_142)) (* (* 1.0 l_0_21_136) l_0_21_143))))
 (let ((?x139827 (- (- (- (- (- (- (- ?x139820 ?x136587) ?x136590) ?x136593) ?x136596) ?x136599) ?x136602) ?x136605)))
 (= ?x139827 0.0)))))))))))))))))
(assert
 (let ((?x136755 (* l_0_21_180 l_0_21_180)))
 (let ((?x136753 (* l_0_21_179 l_0_21_179)))
 (let ((?x136751 (* l_0_21_178 l_0_21_178)))
 (let ((?x136749 (* l_0_21_177 l_0_21_177)))
 (let ((?x136728 (* l_0_21_176 l_0_21_176)))
 (let ((?x136724 (* l_0_21_175 l_0_21_175)))
 (let ((?x136720 (* l_0_21_174 l_0_21_174)))
 (let ((?x114326 (* l_0_21_173 l_0_21_173)))
 (let ((?x139904 (* l_0_21_144 l_0_21_144)))
 (let ((?x139905 (* (/ 1.0 2.0) ?x139904)))
 (let ((?x139901 (* l_0_21_143 l_0_21_143)))
 (let ((?x139902 (* (/ 1.0 2.0) ?x139901)))
 (let ((?x139898 (* l_0_21_142 l_0_21_142)))
 (let ((?x139899 (* (/ 1.0 2.0) ?x139898)))
 (let ((?x139895 (* l_0_21_141 l_0_21_141)))
 (let ((?x139896 (* (/ 1.0 2.0) ?x139895)))
 (let ((?x139892 (* l_0_21_140 l_0_21_140)))
 (let ((?x139893 (* (/ 1.0 2.0) ?x139892)))
 (let ((?x139889 (* l_0_21_139 l_0_21_139)))
 (let ((?x139890 (* (/ 1.0 2.0) ?x139889)))
 (let ((?x139886 (* l_0_21_138 l_0_21_138)))
 (let ((?x139887 (* (/ 1.0 2.0) ?x139886)))
 (let ((?x139883 (* l_0_21_137 l_0_21_137)))
 (let ((?x139884 (* (/ 1.0 2.0) ?x139883)))
 (let ((?x139864 (- (* (* (- (/ 1.0 2.0)) l_0_21_101) l_0_21_101) (* (* (/ 1.0 2.0) l_0_21_102) l_0_21_102))))
 (let ((?x139870 (- (- ?x139864 (* (* (/ 1.0 2.0) l_0_21_103) l_0_21_103)) (* (* (/ 1.0 2.0) l_0_21_104) l_0_21_104))))
 (let ((?x139876 (- (- ?x139870 (* (* (/ 1.0 2.0) l_0_21_105) l_0_21_105)) (* (* (/ 1.0 2.0) l_0_21_106) l_0_21_106))))
 (let ((?x139882 (- (- ?x139876 (* (* (/ 1.0 2.0) l_0_21_107) l_0_21_107)) (* (* (/ 1.0 2.0) l_0_21_108) l_0_21_108))))
 (let ((?x139903 (+ (+ (+ (+ (+ (+ (+ ?x139882 ?x139884) ?x139887) ?x139890) ?x139893) ?x139896) ?x139899) ?x139902)))
 (let ((?x139912 (- (- (- (- (- (- (+ ?x139903 ?x139905) ?x114326) ?x136720) ?x136724) ?x136728) ?x136749) ?x136751)))
 (= (- (- ?x139912 ?x136753) ?x136755) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x72619 (* l_0_21_73 l_0_21_73)))
 (let ((?x94390 (+ (+ (* (- l_0_21_109) l_0_21_109) (* l_0_21_289 l_0_21_289)) ?x72619)))
 (= ?x94390 0.0))))
(assert
 (let ((?x139946 (* l_0_21_505 l_0_21_505)))
 (let ((?x139944 (* l_0_21_469 l_0_21_469)))
 (let ((?x139942 (* l_0_21_433 l_0_21_433)))
 (let ((?x139940 (* l_0_21_397 l_0_21_397)))
 (let ((?x139938 (* l_0_21_361 l_0_21_361)))
 (let ((?x139936 (* l_0_21_325 l_0_21_325)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x136877 (* ?x136849 l_0_21_290)))
 (let ((?x139941 (- (- (- (+ (* (* (- 2.0) l_0_21_109) l_0_21_110) ?x136877) ?x139936) ?x139938) ?x139940)))
 (let ((?x139949 (+ (- (- (- ?x139941 ?x139942) ?x139944) ?x139946) (* (* 2.0 l_0_21_73) l_0_21_74))))
 (= ?x139949 0.0))))))))))))
(assert
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x136955 (* ?x136849 l_0_21_292)))
 (let ((?x94541 (+ (+ (* (* (- 2.0) l_0_21_109) l_0_21_112) ?x136955) (* (* 2.0 l_0_21_73) l_0_21_76))))
 (= ?x94541 0.0)))))
(assert
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137049 (* ?x136849 l_0_21_299)))
 (let ((?x139970 (* l_0_21_253 l_0_21_253)))
 (let ((?x139974 (+ (+ (+ (* (* (- 2.0) l_0_21_109) l_0_21_119) ?x139970) ?x137049) (* (* 2.0 l_0_21_73) l_0_21_83))))
 (= ?x139974 0.0))))))
(assert
 (let ((?x136852 (* l_0_21_289 l_0_21_289)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137127 (* ?x136849 l_0_21_304)))
 (let ((?x134509 (* l_0_21_181 l_0_21_181)))
 (let ((?x134507 (* l_0_21_145 l_0_21_145)))
 (let ((?x139984 (- (+ (- (+ (* (* (- 2.0) l_0_21_109) l_0_21_124) ?x134507) ?x134509) ?x137127) ?x136852)))
 (= (+ ?x139984 (* (* 2.0 l_0_21_73) l_0_21_88)) 0.0))))))))
(assert
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137185 (* ?x136849 l_0_21_310)))
 (let ((?x139970 (* l_0_21_253 l_0_21_253)))
 (let ((?x140001 (+ (+ (- (* (* (- 2.0) l_0_21_109) l_0_21_130) ?x139970) ?x137185) (* (* 2.0 l_0_21_73) l_0_21_94))))
 (= ?x140001 0.0))))))
(assert
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137266 (* ?x136849 l_0_21_317)))
 (let ((?x140010 (* l_0_21_217 l_0_21_217)))
 (let ((?x140009 (- (* (* 2.0 l_0_21_101) l_0_21_73) (* (* 2.0 l_0_21_109) l_0_21_137))))
 (= (+ (- ?x140009 ?x140010) ?x137266) 0.0))))))
(assert
 (let ((?x69062 (* l_0_21_75 l_0_21_75)))
 (let ((?x134346 (* l_0_21_74 l_0_21_74)))
 (let ((?x133920 (* l_0_21_291 l_0_21_291)))
 (let ((?x133918 (* l_0_21_290 l_0_21_290)))
 (let ((?x140023 (+ (- (* (- l_0_21_110) l_0_21_110) (* l_0_21_111 l_0_21_111)) ?x133918)))
 (let ((?x140028 (- (- (+ ?x140023 ?x133920) (* (* 2.0 l_0_21_325) l_0_21_326)) (* (* 2.0 l_0_21_361) l_0_21_362))))
 (let ((?x140032 (- (- ?x140028 (* (* 2.0 l_0_21_397) l_0_21_398)) (* (* 2.0 l_0_21_433) l_0_21_434))))
 (let ((?x140036 (- (- ?x140032 (* (* 2.0 l_0_21_469) l_0_21_470)) (* (* 2.0 l_0_21_505) l_0_21_506))))
 (= (+ (+ ?x140036 ?x134346) ?x69062) 0.0))))))))))
(assert
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137406 (* ?x136882 l_0_21_293)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137404 (* ?x136879 l_0_21_292)))
 (let ((?x140057 (- (* (* (- 2.0) l_0_21_110) l_0_21_112) (* (* 2.0 l_0_21_111) l_0_21_113))))
 (let ((?x140063 (- (- (+ (+ ?x140057 ?x137404) ?x137406) (* (* 2.0 l_0_21_325) l_0_21_328)) (* (* 2.0 l_0_21_361) l_0_21_364))))
 (let ((?x140067 (- (- ?x140063 (* (* 2.0 l_0_21_397) l_0_21_400)) (* (* 2.0 l_0_21_433) l_0_21_436))))
 (let ((?x140071 (- (- ?x140067 (* (* 2.0 l_0_21_469) l_0_21_472)) (* (* 2.0 l_0_21_505) l_0_21_508))))
 (let ((?x140075 (+ (+ ?x140071 (* (* 2.0 l_0_21_74) l_0_21_76)) (* (* 2.0 l_0_21_75) l_0_21_77))))
 (= ?x140075 0.0)))))))))))
(assert
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x114810 (* ?x136882 l_0_21_300)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x9049 (* ?x136879 l_0_21_299)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x140106 (* ?x137046 l_0_21_254)))
 (let ((?x140105 (- (* (* (- 2.0) l_0_21_110) l_0_21_119) (* (* 2.0 l_0_21_111) l_0_21_120))))
 (let ((?x140111 (- (+ (+ (+ ?x140105 ?x140106) ?x9049) ?x114810) (* (* 2.0 l_0_21_325) l_0_21_335))))
 (let ((?x140115 (- (- ?x140111 (* (* 2.0 l_0_21_361) l_0_21_371)) (* (* 2.0 l_0_21_397) l_0_21_407))))
 (let ((?x140119 (- (- ?x140115 (* (* 2.0 l_0_21_433) l_0_21_443)) (* (* 2.0 l_0_21_469) l_0_21_479))))
 (let ((?x140123 (+ (- ?x140119 (* (* 2.0 l_0_21_505) l_0_21_515)) (* (* 2.0 l_0_21_74) l_0_21_83))))
 (= (+ ?x140123 (* (* 2.0 l_0_21_75) l_0_21_84)) 0.0)))))))))))))
(assert
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137706 (* ?x136882 l_0_21_305)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137703 (* ?x136879 l_0_21_304)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x136877 (* ?x136849 l_0_21_290)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134543 (* ?x134542 l_0_21_182)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134540 (* ?x134539 l_0_21_146)))
 (let ((?x140147 (- (* (* (- 2.0) l_0_21_110) l_0_21_124) (* (* 2.0 l_0_21_111) l_0_21_125))))
 (let ((?x140154 (- (+ (+ (- (- (+ ?x140147 ?x134540) ?x134543) ?x136877) ?x137703) ?x137706) (* (* 2.0 l_0_21_325) l_0_21_340))))
 (let ((?x140158 (- (- ?x140154 (* (* 2.0 l_0_21_361) l_0_21_376)) (* (* 2.0 l_0_21_397) l_0_21_412))))
 (let ((?x140162 (- (- ?x140158 (* (* 2.0 l_0_21_433) l_0_21_448)) (* (* 2.0 l_0_21_469) l_0_21_484))))
 (let ((?x140166 (+ (- ?x140162 (* (* 2.0 l_0_21_505) l_0_21_520)) (* (* 2.0 l_0_21_74) l_0_21_88))))
 (= (+ ?x140166 (* (* 2.0 l_0_21_75) l_0_21_89)) 0.0)))))))))))))))))
(assert
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137822 (* ?x136882 l_0_21_311)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137820 (* ?x136879 l_0_21_310)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x140106 (* ?x137046 l_0_21_254)))
 (let ((?x140197 (- (* (* (- 2.0) l_0_21_110) l_0_21_130) (* (* 2.0 l_0_21_111) l_0_21_131))))
 (let ((?x140202 (- (+ (+ (- ?x140197 ?x140106) ?x137820) ?x137822) (* (* 2.0 l_0_21_325) l_0_21_346))))
 (let ((?x140206 (- (- ?x140202 (* (* 2.0 l_0_21_361) l_0_21_382)) (* (* 2.0 l_0_21_397) l_0_21_418))))
 (let ((?x140210 (- (- ?x140206 (* (* 2.0 l_0_21_433) l_0_21_454)) (* (* 2.0 l_0_21_469) l_0_21_490))))
 (let ((?x140214 (+ (- ?x140210 (* (* 2.0 l_0_21_505) l_0_21_526)) (* (* 2.0 l_0_21_74) l_0_21_94))))
 (= (+ ?x140214 (* (* 2.0 l_0_21_75) l_0_21_95)) 0.0)))))))))))))
(assert
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137958 (* ?x136882 l_0_21_318)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137956 (* ?x136879 l_0_21_317)))
 (let ((?x140239 (+ (* (* 2.0 l_0_21_101) l_0_21_74) (* (* 2.0 l_0_21_102) l_0_21_75))))
 (let ((?x140248 (- (- ?x140239 (* (* 2.0 l_0_21_110) l_0_21_137)) (* (* 2.0 l_0_21_111) l_0_21_138))))
 (let ((?x140254 (- (+ (+ (- ?x140248 (* (* 2.0 l_0_21_217) l_0_21_218)) ?x137956) ?x137958) (* (* 2.0 l_0_21_325) l_0_21_353))))
 (let ((?x140258 (- (- ?x140254 (* (* 2.0 l_0_21_361) l_0_21_389)) (* (* 2.0 l_0_21_397) l_0_21_425))))
 (let ((?x140262 (- (- ?x140258 (* (* 2.0 l_0_21_433) l_0_21_461)) (* (* 2.0 l_0_21_469) l_0_21_497))))
 (= (- ?x140262 (* (* 2.0 l_0_21_505) l_0_21_533)) 0.0)))))))))))
(assert
 (let ((?x90845 (* l_0_21_78 l_0_21_78)))
 (let ((?x135428 (* l_0_21_77 l_0_21_77)))
 (let ((?x113220 (* l_0_21_76 l_0_21_76)))
 (let ((?x138098 (* l_0_21_294 l_0_21_294)))
 (let ((?x138096 (* l_0_21_293 l_0_21_293)))
 (let ((?x138095 (* l_0_21_292 l_0_21_292)))
 (let ((?x135355 (* l_0_21_114 l_0_21_114)))
 (let ((?x140297 (- (- (* (- l_0_21_112) l_0_21_112) (* l_0_21_113 l_0_21_113)) ?x135355)))
 (= (+ (+ (+ (+ (+ (+ ?x140297 ?x138095) ?x138096) ?x138098) ?x113220) ?x135428) ?x90845) 0.0))))))))))
(assert
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x138129 (* ?x134554 l_0_21_301)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x138127 (* ?x134551 l_0_21_300)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x138125 (* ?x134548 l_0_21_299)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x140308 (* ?x137046 l_0_21_256)))
 (let ((?x118360 (- (* (* (- 2.0) l_0_21_112) l_0_21_119) (* (* 2.0 l_0_21_113) l_0_21_120))))
 (let ((?x140311 (+ (+ (+ (- ?x118360 (* (* 2.0 l_0_21_114) l_0_21_121)) ?x140308) ?x138125) ?x138127)))
 (let ((?x140316 (+ (+ (+ ?x140311 ?x138129) (* (* 2.0 l_0_21_76) l_0_21_83)) (* (* 2.0 l_0_21_77) l_0_21_84))))
 (= (+ ?x140316 (* (* 2.0 l_0_21_78) l_0_21_85)) 0.0)))))))))))))
(assert
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x138168 (* ?x134554 l_0_21_306)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x138165 (* ?x134551 l_0_21_305)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x138162 (* ?x134548 l_0_21_304)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x136955 (* ?x136849 l_0_21_292)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134594 (* ?x134542 l_0_21_184)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134590 (* ?x134539 l_0_21_148)))
 (let ((?x118443 (- (* (* (- 2.0) l_0_21_112) l_0_21_124) (* (* 2.0 l_0_21_113) l_0_21_125))))
 (let ((?x140338 (- (- (+ (- ?x118443 (* (* 2.0 l_0_21_114) l_0_21_126)) ?x134590) ?x134594) ?x136955)))
 (let ((?x140343 (+ (+ (+ (+ ?x140338 ?x138162) ?x138165) ?x138168) (* (* 2.0 l_0_21_76) l_0_21_88))))
 (let ((?x140347 (+ (+ ?x140343 (* (* 2.0 l_0_21_77) l_0_21_89)) (* (* 2.0 l_0_21_78) l_0_21_90))))
 (= ?x140347 0.0))))))))))))))))))
(assert
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x138197 (* ?x134554 l_0_21_312)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x138195 (* ?x134551 l_0_21_311)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x138193 (* ?x134548 l_0_21_310)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x140308 (* ?x137046 l_0_21_256)))
 (let ((?x118565 (- (* (* (- 2.0) l_0_21_112) l_0_21_130) (* (* 2.0 l_0_21_113) l_0_21_131))))
 (let ((?x140359 (+ (+ (- (- ?x118565 (* (* 2.0 l_0_21_114) l_0_21_132)) ?x140308) ?x138193) ?x138195)))
 (let ((?x140364 (+ (+ (+ ?x140359 ?x138197) (* (* 2.0 l_0_21_76) l_0_21_94)) (* (* 2.0 l_0_21_77) l_0_21_95))))
 (= (+ ?x140364 (* (* 2.0 l_0_21_78) l_0_21_96)) 0.0)))))))))))))
(assert
 (let ((?x117073 (* l_0_21_87 l_0_21_87)))
 (let ((?x117068 (* l_0_21_86 l_0_21_86)))
 (let ((?x93763 (* l_0_21_85 l_0_21_85)))
 (let ((?x117005 (* l_0_21_84 l_0_21_84)))
 (let ((?x116999 (* l_0_21_83 l_0_21_83)))
 (let ((?x138337 (* l_0_21_303 l_0_21_303)))
 (let ((?x138335 (* l_0_21_302 l_0_21_302)))
 (let ((?x138333 (* l_0_21_301 l_0_21_301)))
 (let ((?x138331 (* l_0_21_300 l_0_21_300)))
 (let ((?x138329 (* l_0_21_299 l_0_21_299)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x140383 (* ?x137046 l_0_21_263)))
 (let ((?x139389 (* l_0_21_123 l_0_21_123)))
 (let ((?x139386 (* l_0_21_122 l_0_21_122)))
 (let ((?x139383 (* l_0_21_121 l_0_21_121)))
 (let ((?x140380 (- (- (* (- l_0_21_119) l_0_21_119) (* l_0_21_120 l_0_21_120)) ?x139383)))
 (let ((?x140388 (+ (+ (+ (+ (+ (- (- ?x140380 ?x139386) ?x139389) ?x140383) ?x138329) ?x138331) ?x138333) ?x138335)))
 (= (+ (+ (+ (+ (+ (+ ?x140388 ?x138337) ?x116999) ?x117005) ?x93763) ?x117068) ?x117073) 0.0)))))))))))))))))))
(assert
 (let ((?x138377 (* 2.0 l_0_21_303)))
 (let ((?x138378 (* ?x138377 l_0_21_308)))
 (let ((?x138374 (* 2.0 l_0_21_302)))
 (let ((?x138375 (* ?x138374 l_0_21_307)))
 (let ((?x138371 (* 2.0 l_0_21_301)))
 (let ((?x138372 (* ?x138371 l_0_21_306)))
 (let ((?x138368 (* 2.0 l_0_21_300)))
 (let ((?x138369 (* ?x138368 l_0_21_305)))
 (let ((?x138365 (* 2.0 l_0_21_299)))
 (let ((?x138366 (* ?x138365 l_0_21_304)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137049 (* ?x136849 l_0_21_299)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x140419 (* ?x137046 l_0_21_268)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134639 (* ?x134542 l_0_21_191)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134637 (* ?x134539 l_0_21_155)))
 (let ((?x140407 (- (* (* (- 2.0) l_0_21_119) l_0_21_124) (* (* 2.0 l_0_21_120) l_0_21_125))))
 (let ((?x140413 (- (- ?x140407 (* (* 2.0 l_0_21_121) l_0_21_126)) (* (* 2.0 l_0_21_122) l_0_21_127))))
 (let ((?x140420 (+ (- (+ (- ?x140413 (* (* 2.0 l_0_21_123) l_0_21_128)) ?x134637) ?x134639) ?x140419)))
 (let ((?x140429 (+ (+ (+ (+ (+ (+ (- ?x140420 ?x137049) ?x138366) ?x138369) ?x138372) ?x138375) ?x138378) (* (* 2.0 l_0_21_83) l_0_21_88))))
 (let ((?x140435 (+ (+ ?x140429 (* (* 2.0 l_0_21_84) l_0_21_89)) (* (* 2.0 l_0_21_85) l_0_21_90))))
 (let ((?x140441 (+ (+ ?x140435 (* (* 2.0 l_0_21_86) l_0_21_91)) (* (* 2.0 l_0_21_87) l_0_21_92))))
 (= ?x140441 0.0))))))))))))))))))))))))))
(assert
 (let ((?x138377 (* 2.0 l_0_21_303)))
 (let ((?x138453 (* ?x138377 l_0_21_314)))
 (let ((?x138374 (* 2.0 l_0_21_302)))
 (let ((?x138451 (* ?x138374 l_0_21_313)))
 (let ((?x138371 (* 2.0 l_0_21_301)))
 (let ((?x138449 (* ?x138371 l_0_21_312)))
 (let ((?x138368 (* 2.0 l_0_21_300)))
 (let ((?x138447 (* ?x138368 l_0_21_311)))
 (let ((?x138365 (* 2.0 l_0_21_299)))
 (let ((?x138445 (* ?x138365 l_0_21_310)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x140472 (* ?x137046 l_0_21_274)))
 (let ((?x140383 (* ?x137046 l_0_21_263)))
 (let ((?x118604 (- (* (* (- 2.0) l_0_21_119) l_0_21_130) (* (* 2.0 l_0_21_120) l_0_21_131))))
 (let ((?x140468 (- (- ?x118604 (* (* 2.0 l_0_21_121) l_0_21_132)) (* (* 2.0 l_0_21_122) l_0_21_133))))
 (let ((?x140474 (+ (+ (- (- ?x140468 (* (* 2.0 l_0_21_123) l_0_21_134)) ?x140383) ?x140472) ?x138445)))
 (let ((?x140480 (+ (+ (+ (+ (+ ?x140474 ?x138447) ?x138449) ?x138451) ?x138453) (* (* 2.0 l_0_21_83) l_0_21_94))))
 (let ((?x140484 (+ (+ ?x140480 (* (* 2.0 l_0_21_84) l_0_21_95)) (* (* 2.0 l_0_21_85) l_0_21_96))))
 (let ((?x140488 (+ (+ ?x140484 (* (* 2.0 l_0_21_86) l_0_21_97)) (* (* 2.0 l_0_21_87) l_0_21_98))))
 (= ?x140488 0.0)))))))))))))))))))))
(assert
 (let ((?x138377 (* 2.0 l_0_21_303)))
 (let ((?x138524 (* ?x138377 l_0_21_321)))
 (let ((?x138374 (* 2.0 l_0_21_302)))
 (let ((?x138522 (* ?x138374 l_0_21_320)))
 (let ((?x138371 (* 2.0 l_0_21_301)))
 (let ((?x138520 (* ?x138371 l_0_21_319)))
 (let ((?x138368 (* 2.0 l_0_21_300)))
 (let ((?x138518 (* ?x138368 l_0_21_318)))
 (let ((?x138365 (* 2.0 l_0_21_299)))
 (let ((?x138516 (* ?x138365 l_0_21_317)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x138786 (* ?x137046 l_0_21_281)))
 (let ((?x22575 (+ (* (* 2.0 l_0_21_101) l_0_21_83) (* (* 2.0 l_0_21_102) l_0_21_84))))
 (let ((?x118726 (+ (+ ?x22575 (* (* 2.0 l_0_21_103) l_0_21_85)) (* (* 2.0 l_0_21_104) l_0_21_86))))
 (let ((?x140502 (- (+ ?x118726 (* (* 2.0 l_0_21_105) l_0_21_87)) (* (* 2.0 l_0_21_119) l_0_21_137))))
 (let ((?x140506 (- (- ?x140502 (* (* 2.0 l_0_21_120) l_0_21_138)) (* (* 2.0 l_0_21_121) l_0_21_139))))
 (let ((?x140510 (- (- ?x140506 (* (* 2.0 l_0_21_122) l_0_21_140)) (* (* 2.0 l_0_21_123) l_0_21_141))))
 (let ((?x140515 (+ (+ (+ (- ?x140510 (* (* 2.0 l_0_21_217) l_0_21_227)) ?x138786) ?x138516) ?x138518)))
 (= (+ (+ (+ ?x140515 ?x138520) ?x138522) ?x138524) 0.0))))))))))))))))))))
(assert
 (let ((?x117318 (* l_0_21_93 l_0_21_93)))
 (let ((?x117314 (* l_0_21_92 l_0_21_92)))
 (let ((?x117312 (* l_0_21_91 l_0_21_91)))
 (let ((?x117308 (* l_0_21_90 l_0_21_90)))
 (let ((?x93930 (* l_0_21_89 l_0_21_89)))
 (let ((?x116994 (* l_0_21_88 l_0_21_88)))
 (let ((?x138594 (* l_0_21_309 l_0_21_309)))
 (let ((?x138592 (* l_0_21_308 l_0_21_308)))
 (let ((?x138590 (* l_0_21_307 l_0_21_307)))
 (let ((?x138588 (* l_0_21_306 l_0_21_306)))
 (let ((?x138586 (* l_0_21_305 l_0_21_305)))
 (let ((?x138584 (* l_0_21_304 l_0_21_304)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137127 (* ?x136849 l_0_21_304)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134662 (* ?x134542 l_0_21_196)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134655 (* ?x134539 l_0_21_160)))
 (let ((?x139570 (* l_0_21_129 l_0_21_129)))
 (let ((?x139567 (* l_0_21_128 l_0_21_128)))
 (let ((?x139564 (* l_0_21_127 l_0_21_127)))
 (let ((?x139561 (* l_0_21_126 l_0_21_126)))
 (let ((?x140538 (- (- (* (- l_0_21_124) l_0_21_124) (* l_0_21_125 l_0_21_125)) ?x139561)))
 (let ((?x140545 (+ (- (- (+ (- (- (- ?x140538 ?x139564) ?x139567) ?x139570) ?x134655) ?x134662) ?x137127) ?x138584)))
 (let ((?x140552 (+ (+ (+ (+ (+ (+ (+ ?x140545 ?x138586) ?x138588) ?x138590) ?x138592) ?x138594) ?x116994) ?x93930)))
 (= (+ (+ (+ (+ ?x140552 ?x117308) ?x117312) ?x117314) ?x117318) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x138619 (* 2.0 l_0_21_309)))
 (let ((?x138620 (* ?x138619 l_0_21_315)))
 (let ((?x138616 (* 2.0 l_0_21_308)))
 (let ((?x138617 (* ?x138616 l_0_21_314)))
 (let ((?x138613 (* 2.0 l_0_21_307)))
 (let ((?x138614 (* ?x138613 l_0_21_313)))
 (let ((?x138610 (* 2.0 l_0_21_306)))
 (let ((?x138611 (* ?x138610 l_0_21_312)))
 (let ((?x138607 (* 2.0 l_0_21_305)))
 (let ((?x138608 (* ?x138607 l_0_21_311)))
 (let ((?x138604 (* 2.0 l_0_21_304)))
 (let ((?x138605 (* ?x138604 l_0_21_310)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137185 (* ?x136849 l_0_21_310)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x140419 (* ?x137046 l_0_21_268)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134684 (* ?x134542 l_0_21_202)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134682 (* ?x134539 l_0_21_166)))
 (let ((?x118845 (- (* (* (- 2.0) l_0_21_124) l_0_21_130) (* (* 2.0 l_0_21_125) l_0_21_131))))
 (let ((?x140567 (- (- ?x118845 (* (* 2.0 l_0_21_126) l_0_21_132)) (* (* 2.0 l_0_21_127) l_0_21_133))))
 (let ((?x140573 (- (- ?x140567 (* (* 2.0 l_0_21_128) l_0_21_134)) (* (* 2.0 l_0_21_129) l_0_21_135))))
 (let ((?x140580 (+ (+ (+ (- (- (- (+ ?x140573 ?x134682) ?x134684) ?x140419) ?x137185) ?x138605) ?x138608) ?x138611)))
 (let ((?x140586 (+ (+ (+ (+ ?x140580 ?x138614) ?x138617) ?x138620) (* (* 2.0 l_0_21_88) l_0_21_94))))
 (let ((?x140592 (+ (+ ?x140586 (* (* 2.0 l_0_21_89) l_0_21_95)) (* (* 2.0 l_0_21_90) l_0_21_96))))
 (let ((?x140598 (+ (+ ?x140592 (* (* 2.0 l_0_21_91) l_0_21_97)) (* (* 2.0 l_0_21_92) l_0_21_98))))
 (= (+ ?x140598 (* (* 2.0 l_0_21_93) l_0_21_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x138619 (* 2.0 l_0_21_309)))
 (let ((?x138654 (* ?x138619 l_0_21_322)))
 (let ((?x138616 (* 2.0 l_0_21_308)))
 (let ((?x138652 (* ?x138616 l_0_21_321)))
 (let ((?x138613 (* 2.0 l_0_21_307)))
 (let ((?x138650 (* ?x138613 l_0_21_320)))
 (let ((?x138610 (* 2.0 l_0_21_306)))
 (let ((?x138648 (* ?x138610 l_0_21_319)))
 (let ((?x138607 (* 2.0 l_0_21_305)))
 (let ((?x138646 (* ?x138607 l_0_21_318)))
 (let ((?x138604 (* 2.0 l_0_21_304)))
 (let ((?x138644 (* ?x138604 l_0_21_317)))
 (let ((?x136849 (* 2.0 l_0_21_289)))
 (let ((?x137266 (* ?x136849 l_0_21_317)))
 (let ((?x134542 (* 2.0 l_0_21_181)))
 (let ((?x134709 (* ?x134542 l_0_21_209)))
 (let ((?x134539 (* 2.0 l_0_21_145)))
 (let ((?x134707 (* ?x134539 l_0_21_173)))
 (let ((?x118991 (+ (* (* 2.0 l_0_21_101) l_0_21_88) (* (* 2.0 l_0_21_102) l_0_21_89))))
 (let ((?x140630 (+ (+ ?x118991 (* (* 2.0 l_0_21_103) l_0_21_90)) (* (* 2.0 l_0_21_104) l_0_21_91))))
 (let ((?x140649 (+ (+ ?x140630 (* (* 2.0 l_0_21_105) l_0_21_92)) (* (* 2.0 l_0_21_106) l_0_21_93))))
 (let ((?x140654 (- (- ?x140649 (* (* 2.0 l_0_21_124) l_0_21_137)) (* (* 2.0 l_0_21_125) l_0_21_138))))
 (let ((?x140658 (- (- ?x140654 (* (* 2.0 l_0_21_126) l_0_21_139)) (* (* 2.0 l_0_21_127) l_0_21_140))))
 (let ((?x140662 (- (- ?x140658 (* (* 2.0 l_0_21_128) l_0_21_141)) (* (* 2.0 l_0_21_129) l_0_21_142))))
 (let ((?x140667 (- (- (- (+ ?x140662 ?x134707) ?x134709) (* (* 2.0 l_0_21_217) l_0_21_232)) ?x137266)))
 (= (+ (+ (+ (+ (+ (+ ?x140667 ?x138644) ?x138646) ?x138648) ?x138650) ?x138652) ?x138654) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x73378 (* l_0_21_99 l_0_21_99)))
 (let ((?x117624 (* l_0_21_98 l_0_21_98)))
 (let ((?x94309 (* l_0_21_97 l_0_21_97)))
 (let ((?x94253 (* l_0_21_96 l_0_21_96)))
 (let ((?x117555 (* l_0_21_95 l_0_21_95)))
 (let ((?x117549 (* l_0_21_94 l_0_21_94)))
 (let ((?x17542 (* l_0_21_316 l_0_21_316)))
 (let ((?x115758 (* l_0_21_315 l_0_21_315)))
 (let ((?x51856 (* l_0_21_314 l_0_21_314)))
 (let ((?x92859 (* l_0_21_313 l_0_21_313)))
 (let ((?x92719 (* l_0_21_312 l_0_21_312)))
 (let ((?x72354 (* l_0_21_311 l_0_21_311)))
 (let ((?x51830 (* l_0_21_310 l_0_21_310)))
 (let ((?x137046 (* 2.0 l_0_21_253)))
 (let ((?x140472 (* ?x137046 l_0_21_274)))
 (let ((?x139735 (* l_0_21_136 l_0_21_136)))
 (let ((?x139732 (* l_0_21_135 l_0_21_135)))
 (let ((?x139729 (* l_0_21_134 l_0_21_134)))
 (let ((?x139726 (* l_0_21_133 l_0_21_133)))
 (let ((?x117396 (* l_0_21_132 l_0_21_132)))
 (let ((?x117398 (* l_0_21_131 l_0_21_131)))
 (let ((?x119113 (- (- (* l_0_21_100 l_0_21_100) (* l_0_21_130 l_0_21_130)) ?x117398)))
 (let ((?x140695 (+ (- (- (- (- (- (- ?x119113 ?x117396) ?x139726) ?x139729) ?x139732) ?x139735) ?x140472) ?x51830)))
 (let ((?x140702 (+ (+ (+ (+ (+ (+ (+ ?x140695 ?x72354) ?x92719) ?x92859) ?x51856) ?x115758) ?x17542) ?x117549)))
 (= (+ (+ (+ (+ (+ ?x140702 ?x117555) ?x94253) ?x94309) ?x117624) ?x73378) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x138743 (* l_0_21_324 l_0_21_324)))
 (let ((?x138741 (* l_0_21_323 l_0_21_323)))
 (let ((?x138739 (* l_0_21_322 l_0_21_322)))
 (let ((?x138737 (* l_0_21_321 l_0_21_321)))
 (let ((?x138735 (* l_0_21_320 l_0_21_320)))
 (let ((?x138732 (* l_0_21_319 l_0_21_319)))
 (let ((?x138730 (* l_0_21_318 l_0_21_318)))
 (let ((?x138728 (* l_0_21_317 l_0_21_317)))
 (let ((?x139904 (* l_0_21_144 l_0_21_144)))
 (let ((?x139901 (* l_0_21_143 l_0_21_143)))
 (let ((?x139898 (* l_0_21_142 l_0_21_142)))
 (let ((?x139895 (* l_0_21_141 l_0_21_141)))
 (let ((?x139892 (* l_0_21_140 l_0_21_140)))
 (let ((?x139889 (* l_0_21_139 l_0_21_139)))
 (let ((?x139886 (* l_0_21_138 l_0_21_138)))
 (let ((?x139883 (* l_0_21_137 l_0_21_137)))
 (let ((?x21904 (* l_0_21_108 l_0_21_108)))
 (let ((?x117654 (* l_0_21_107 l_0_21_107)))
 (let ((?x73425 (* l_0_21_106 l_0_21_106)))
 (let ((?x117674 (* l_0_21_105 l_0_21_105)))
 (let ((?x94338 (* l_0_21_104 l_0_21_104)))
 (let ((?x117646 (* l_0_21_103 l_0_21_103)))
 (let ((?x74366 (+ (+ (* l_0_21_101 l_0_21_101) (* l_0_21_102 l_0_21_102)) ?x117646)))
 (let ((?x119206 (- (- (+ (+ (+ (+ (+ ?x74366 ?x94338) ?x117674) ?x73425) ?x117654) ?x21904) ?x139883) ?x139886)))
 (let ((?x140715 (- (- (- (- (- (- (- ?x119206 ?x139889) ?x139892) ?x139895) ?x139898) ?x139901) ?x139904) (* (* 2.0 l_0_21_217) l_0_21_245))))
 (let ((?x140722 (+ (+ (+ (+ (+ (+ (+ ?x140715 ?x138728) ?x138730) ?x138732) ?x138735) ?x138737) ?x138739) ?x138741)))
 (= (+ ?x140722 ?x138743) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137406 (* ?x136882 l_0_21_293)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137404 (* ?x136879 l_0_21_292)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x134733 (* ?x134732 l_0_21_185)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x134730 (* ?x134729 l_0_21_184)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x134727 (* ?x134726 l_0_21_149)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x135028 (* ?x134863 l_0_21_148)))
 (let ((?x140744 (- (- (- (- (- (+ ?x135028 ?x134727) ?x134730) ?x134733) ?x137404) ?x137406) (* (* 2.0 l_0_21_328) l_0_21_340))))
 (let ((?x140748 (- (- ?x140744 (* (* 2.0 l_0_21_329) l_0_21_341)) (* (* 2.0 l_0_21_330) l_0_21_342))))
 (let ((?x140752 (- (- ?x140748 (* (* 2.0 l_0_21_364) l_0_21_376)) (* (* 2.0 l_0_21_365) l_0_21_377))))
 (let ((?x140756 (- (- ?x140752 (* (* 2.0 l_0_21_366) l_0_21_378)) (* (* 2.0 l_0_21_400) l_0_21_412))))
 (let ((?x140760 (- (- ?x140756 (* (* 2.0 l_0_21_401) l_0_21_413)) (* (* 2.0 l_0_21_402) l_0_21_414))))
 (let ((?x140764 (- (- ?x140760 (* (* 2.0 l_0_21_436) l_0_21_448)) (* (* 2.0 l_0_21_437) l_0_21_449))))
 (let ((?x140768 (- (- ?x140764 (* (* 2.0 l_0_21_438) l_0_21_450)) (* (* 2.0 l_0_21_472) l_0_21_484))))
 (let ((?x140772 (- (- ?x140768 (* (* 2.0 l_0_21_473) l_0_21_485)) (* (* 2.0 l_0_21_474) l_0_21_486))))
 (let ((?x140776 (- (- ?x140772 (* (* 2.0 l_0_21_508) l_0_21_520)) (* (* 2.0 l_0_21_509) l_0_21_521))))
 (= (- ?x140776 (* (* 2.0 l_0_21_510) l_0_21_522)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x114810 (* ?x136882 l_0_21_300)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x9049 (* ?x136879 l_0_21_299)))
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x140838 (* ?x134092 l_0_21_269)))
 (let ((?x134089 (* 2.0 l_0_21_254)))
 (let ((?x140836 (* ?x134089 l_0_21_268)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x134870 (* ?x134732 l_0_21_192)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x134868 (* ?x134729 l_0_21_191)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x134866 (* ?x134726 l_0_21_156)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x134864 (* ?x134863 l_0_21_155)))
 (let ((?x140841 (- (- (+ (+ (- (- (+ ?x134864 ?x134866) ?x134868) ?x134870) ?x140836) ?x140838) ?x9049) ?x114810)))
 (let ((?x140847 (- (- ?x140841 (* (* 2.0 l_0_21_335) l_0_21_340)) (* (* 2.0 l_0_21_336) l_0_21_341))))
 (let ((?x140853 (- (- ?x140847 (* (* 2.0 l_0_21_337) l_0_21_342)) (* (* 2.0 l_0_21_338) l_0_21_343))))
 (let ((?x140859 (- (- ?x140853 (* (* 2.0 l_0_21_339) l_0_21_344)) (* (* 2.0 l_0_21_371) l_0_21_376))))
 (let ((?x140865 (- (- ?x140859 (* (* 2.0 l_0_21_372) l_0_21_377)) (* (* 2.0 l_0_21_373) l_0_21_378))))
 (let ((?x140871 (- (- ?x140865 (* (* 2.0 l_0_21_374) l_0_21_379)) (* (* 2.0 l_0_21_375) l_0_21_380))))
 (let ((?x140877 (- (- ?x140871 (* (* 2.0 l_0_21_407) l_0_21_412)) (* (* 2.0 l_0_21_408) l_0_21_413))))
 (let ((?x140883 (- (- ?x140877 (* (* 2.0 l_0_21_409) l_0_21_414)) (* (* 2.0 l_0_21_410) l_0_21_415))))
 (let ((?x140889 (- (- ?x140883 (* (* 2.0 l_0_21_411) l_0_21_416)) (* (* 2.0 l_0_21_443) l_0_21_448))))
 (let ((?x140895 (- (- ?x140889 (* (* 2.0 l_0_21_444) l_0_21_449)) (* (* 2.0 l_0_21_445) l_0_21_450))))
 (let ((?x140901 (- (- ?x140895 (* (* 2.0 l_0_21_446) l_0_21_451)) (* (* 2.0 l_0_21_447) l_0_21_452))))
 (let ((?x140907 (- (- ?x140901 (* (* 2.0 l_0_21_479) l_0_21_484)) (* (* 2.0 l_0_21_480) l_0_21_485))))
 (let ((?x140913 (- (- ?x140907 (* (* 2.0 l_0_21_481) l_0_21_486)) (* (* 2.0 l_0_21_482) l_0_21_487))))
 (let ((?x140919 (- (- ?x140913 (* (* 2.0 l_0_21_483) l_0_21_488)) (* (* 2.0 l_0_21_515) l_0_21_520))))
 (let ((?x140925 (- (- ?x140919 (* (* 2.0 l_0_21_516) l_0_21_521)) (* (* 2.0 l_0_21_517) l_0_21_522))))
 (let ((?x140931 (- (- ?x140925 (* (* 2.0 l_0_21_518) l_0_21_523)) (* (* 2.0 l_0_21_519) l_0_21_524))))
 (= ?x140931 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x141086 (* l_0_21_525 l_0_21_525)))
 (let ((?x141084 (* l_0_21_524 l_0_21_524)))
 (let ((?x141082 (* l_0_21_523 l_0_21_523)))
 (let ((?x141080 (* l_0_21_522 l_0_21_522)))
 (let ((?x141078 (* l_0_21_521 l_0_21_521)))
 (let ((?x141076 (* l_0_21_520 l_0_21_520)))
 (let ((?x141074 (* l_0_21_489 l_0_21_489)))
 (let ((?x141072 (* l_0_21_488 l_0_21_488)))
 (let ((?x141070 (* l_0_21_487 l_0_21_487)))
 (let ((?x141068 (* l_0_21_486 l_0_21_486)))
 (let ((?x141066 (* l_0_21_485 l_0_21_485)))
 (let ((?x141064 (* l_0_21_484 l_0_21_484)))
 (let ((?x141062 (* l_0_21_453 l_0_21_453)))
 (let ((?x141060 (* l_0_21_452 l_0_21_452)))
 (let ((?x141058 (* l_0_21_451 l_0_21_451)))
 (let ((?x141056 (* l_0_21_450 l_0_21_450)))
 (let ((?x141054 (* l_0_21_449 l_0_21_449)))
 (let ((?x141052 (* l_0_21_448 l_0_21_448)))
 (let ((?x141050 (* l_0_21_417 l_0_21_417)))
 (let ((?x141048 (* l_0_21_416 l_0_21_416)))
 (let ((?x141046 (* l_0_21_415 l_0_21_415)))
 (let ((?x141044 (* l_0_21_414 l_0_21_414)))
 (let ((?x141042 (* l_0_21_413 l_0_21_413)))
 (let ((?x141040 (* l_0_21_412 l_0_21_412)))
 (let ((?x141038 (* l_0_21_381 l_0_21_381)))
 (let ((?x141036 (* l_0_21_380 l_0_21_380)))
 (let ((?x141034 (* l_0_21_379 l_0_21_379)))
 (let ((?x141032 (* l_0_21_378 l_0_21_378)))
 (let ((?x141030 (* l_0_21_377 l_0_21_377)))
 (let ((?x141028 (* l_0_21_376 l_0_21_376)))
 (let ((?x141026 (* l_0_21_345 l_0_21_345)))
 (let ((?x141024 (* l_0_21_344 l_0_21_344)))
 (let ((?x141022 (* l_0_21_343 l_0_21_343)))
 (let ((?x141020 (* l_0_21_342 l_0_21_342)))
 (let ((?x141018 (* l_0_21_341 l_0_21_341)))
 (let ((?x141016 (* l_0_21_340 l_0_21_340)))
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137706 (* ?x136882 l_0_21_305)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137703 (* ?x136879 l_0_21_304)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x134939 (* ?x134732 l_0_21_197)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x134937 (* ?x134729 l_0_21_196)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x90511 (* ?x134726 l_0_21_161)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x139030 (* ?x134863 l_0_21_160)))
 (let ((?x141019 (- (- (- (- (- (- (+ ?x139030 ?x90511) ?x134937) ?x134939) ?x137703) ?x137706) ?x141016) ?x141018)))
 (let ((?x141033 (- (- (- (- (- (- (- ?x141019 ?x141020) ?x141022) ?x141024) ?x141026) ?x141028) ?x141030) ?x141032)))
 (let ((?x141047 (- (- (- (- (- (- (- ?x141033 ?x141034) ?x141036) ?x141038) ?x141040) ?x141042) ?x141044) ?x141046)))
 (let ((?x141061 (- (- (- (- (- (- (- ?x141047 ?x141048) ?x141050) ?x141052) ?x141054) ?x141056) ?x141058) ?x141060)))
 (let ((?x141075 (- (- (- (- (- (- (- ?x141061 ?x141062) ?x141064) ?x141066) ?x141068) ?x141070) ?x141072) ?x141074)))
 (= (- (- (- (- (- (- ?x141075 ?x141076) ?x141078) ?x141080) ?x141082) ?x141084) ?x141086) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137822 (* ?x136882 l_0_21_311)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137820 (* ?x136879 l_0_21_310)))
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x140838 (* ?x134092 l_0_21_269)))
 (let ((?x134089 (* 2.0 l_0_21_254)))
 (let ((?x140836 (* ?x134089 l_0_21_268)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x135037 (* ?x134732 l_0_21_203)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x135035 (* ?x134729 l_0_21_202)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x135033 (* ?x134726 l_0_21_167)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x135030 (* ?x134863 l_0_21_166)))
 (let ((?x141119 (- (- (- (- (- (- (+ ?x135030 ?x135033) ?x135035) ?x135037) ?x140836) ?x140838) ?x137820) ?x137822)))
 (let ((?x141125 (- (- ?x141119 (* (* 2.0 l_0_21_340) l_0_21_346)) (* (* 2.0 l_0_21_341) l_0_21_347))))
 (let ((?x141131 (- (- ?x141125 (* (* 2.0 l_0_21_342) l_0_21_348)) (* (* 2.0 l_0_21_343) l_0_21_349))))
 (let ((?x141137 (- (- ?x141131 (* (* 2.0 l_0_21_344) l_0_21_350)) (* (* 2.0 l_0_21_345) l_0_21_351))))
 (let ((?x141143 (- (- ?x141137 (* (* 2.0 l_0_21_376) l_0_21_382)) (* (* 2.0 l_0_21_377) l_0_21_383))))
 (let ((?x141149 (- (- ?x141143 (* (* 2.0 l_0_21_378) l_0_21_384)) (* (* 2.0 l_0_21_379) l_0_21_385))))
 (let ((?x141155 (- (- ?x141149 (* (* 2.0 l_0_21_380) l_0_21_386)) (* (* 2.0 l_0_21_381) l_0_21_387))))
 (let ((?x141161 (- (- ?x141155 (* (* 2.0 l_0_21_412) l_0_21_418)) (* (* 2.0 l_0_21_413) l_0_21_419))))
 (let ((?x141167 (- (- ?x141161 (* (* 2.0 l_0_21_414) l_0_21_420)) (* (* 2.0 l_0_21_415) l_0_21_421))))
 (let ((?x141173 (- (- ?x141167 (* (* 2.0 l_0_21_416) l_0_21_422)) (* (* 2.0 l_0_21_417) l_0_21_423))))
 (let ((?x141179 (- (- ?x141173 (* (* 2.0 l_0_21_448) l_0_21_454)) (* (* 2.0 l_0_21_449) l_0_21_455))))
 (let ((?x141185 (- (- ?x141179 (* (* 2.0 l_0_21_450) l_0_21_456)) (* (* 2.0 l_0_21_451) l_0_21_457))))
 (let ((?x141191 (- (- ?x141185 (* (* 2.0 l_0_21_452) l_0_21_458)) (* (* 2.0 l_0_21_453) l_0_21_459))))
 (let ((?x141197 (- (- ?x141191 (* (* 2.0 l_0_21_484) l_0_21_490)) (* (* 2.0 l_0_21_485) l_0_21_491))))
 (let ((?x141203 (- (- ?x141197 (* (* 2.0 l_0_21_486) l_0_21_492)) (* (* 2.0 l_0_21_487) l_0_21_493))))
 (let ((?x141209 (- (- ?x141203 (* (* 2.0 l_0_21_488) l_0_21_494)) (* (* 2.0 l_0_21_489) l_0_21_495))))
 (let ((?x141215 (- (- ?x141209 (* (* 2.0 l_0_21_520) l_0_21_526)) (* (* 2.0 l_0_21_521) l_0_21_527))))
 (let ((?x141221 (- (- ?x141215 (* (* 2.0 l_0_21_522) l_0_21_528)) (* (* 2.0 l_0_21_523) l_0_21_529))))
 (let ((?x141227 (- (- ?x141221 (* (* 2.0 l_0_21_524) l_0_21_530)) (* (* 2.0 l_0_21_525) l_0_21_531))))
 (= ?x141227 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x136882 (* 2.0 l_0_21_291)))
 (let ((?x137958 (* ?x136882 l_0_21_318)))
 (let ((?x136879 (* 2.0 l_0_21_290)))
 (let ((?x137956 (* ?x136879 l_0_21_317)))
 (let ((?x134732 (* 2.0 l_0_21_183)))
 (let ((?x135114 (* ?x134732 l_0_21_210)))
 (let ((?x134729 (* 2.0 l_0_21_182)))
 (let ((?x135112 (* ?x134729 l_0_21_209)))
 (let ((?x134726 (* 2.0 l_0_21_147)))
 (let ((?x135110 (* ?x134726 l_0_21_174)))
 (let ((?x134863 (* 2.0 l_0_21_146)))
 (let ((?x139159 (* ?x134863 l_0_21_173)))
 (let ((?x141323 (- (- (- (+ ?x139159 ?x135110) ?x135112) ?x135114) (* (* 2.0 l_0_21_218) l_0_21_232))))
 (let ((?x141329 (- (- (- (- ?x141323 (* (* 2.0 l_0_21_219) l_0_21_233)) ?x137956) ?x137958) (* (* 2.0 l_0_21_340) l_0_21_353))))
 (let ((?x141333 (- (- ?x141329 (* (* 2.0 l_0_21_341) l_0_21_354)) (* (* 2.0 l_0_21_342) l_0_21_355))))
 (let ((?x141337 (- (- ?x141333 (* (* 2.0 l_0_21_343) l_0_21_356)) (* (* 2.0 l_0_21_344) l_0_21_357))))
 (let ((?x141341 (- (- ?x141337 (* (* 2.0 l_0_21_345) l_0_21_358)) (* (* 2.0 l_0_21_376) l_0_21_389))))
 (let ((?x141345 (- (- ?x141341 (* (* 2.0 l_0_21_377) l_0_21_390)) (* (* 2.0 l_0_21_378) l_0_21_391))))
 (let ((?x141349 (- (- ?x141345 (* (* 2.0 l_0_21_379) l_0_21_392)) (* (* 2.0 l_0_21_380) l_0_21_393))))
 (let ((?x141353 (- (- ?x141349 (* (* 2.0 l_0_21_381) l_0_21_394)) (* (* 2.0 l_0_21_412) l_0_21_425))))
 (let ((?x141357 (- (- ?x141353 (* (* 2.0 l_0_21_413) l_0_21_426)) (* (* 2.0 l_0_21_414) l_0_21_427))))
 (let ((?x141361 (- (- ?x141357 (* (* 2.0 l_0_21_415) l_0_21_428)) (* (* 2.0 l_0_21_416) l_0_21_429))))
 (let ((?x141365 (- (- ?x141361 (* (* 2.0 l_0_21_417) l_0_21_430)) (* (* 2.0 l_0_21_448) l_0_21_461))))
 (let ((?x141369 (- (- ?x141365 (* (* 2.0 l_0_21_449) l_0_21_462)) (* (* 2.0 l_0_21_450) l_0_21_463))))
 (let ((?x141373 (- (- ?x141369 (* (* 2.0 l_0_21_451) l_0_21_464)) (* (* 2.0 l_0_21_452) l_0_21_465))))
 (let ((?x141377 (- (- ?x141373 (* (* 2.0 l_0_21_453) l_0_21_466)) (* (* 2.0 l_0_21_484) l_0_21_497))))
 (let ((?x141381 (- (- ?x141377 (* (* 2.0 l_0_21_485) l_0_21_498)) (* (* 2.0 l_0_21_486) l_0_21_499))))
 (let ((?x141385 (- (- ?x141381 (* (* 2.0 l_0_21_487) l_0_21_500)) (* (* 2.0 l_0_21_488) l_0_21_501))))
 (let ((?x141389 (- (- ?x141385 (* (* 2.0 l_0_21_489) l_0_21_502)) (* (* 2.0 l_0_21_520) l_0_21_533))))
 (let ((?x141393 (- (- ?x141389 (* (* 2.0 l_0_21_521) l_0_21_534)) (* (* 2.0 l_0_21_522) l_0_21_535))))
 (let ((?x141397 (- (- ?x141393 (* (* 2.0 l_0_21_523) l_0_21_536)) (* (* 2.0 l_0_21_524) l_0_21_537))))
 (= (- ?x141397 (* (* 2.0 l_0_21_525) l_0_21_538)) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x138098 (* l_0_21_294 l_0_21_294)))
 (let ((?x138096 (* l_0_21_293 l_0_21_293)))
 (let ((?x138095 (* l_0_21_292 l_0_21_292)))
 (let ((?x113143 (* l_0_21_186 l_0_21_186)))
 (let ((?x90668 (* l_0_21_185 l_0_21_185)))
 (let ((?x90667 (* l_0_21_184 l_0_21_184)))
 (let ((?x90614 (* l_0_21_150 l_0_21_150)))
 (let ((?x141468 (+ (+ (* l_0_21_148 l_0_21_148) (* l_0_21_149 l_0_21_149)) ?x90614)))
 (= (- (- (- (- (- (- ?x141468 ?x90667) ?x90668) ?x113143) ?x138095) ?x138096) ?x138098) 0.0))))))))))
(assert
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x138129 (* ?x134554 l_0_21_301)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x138127 (* ?x134551 l_0_21_300)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x138125 (* ?x134548 l_0_21_299)))
 (let ((?x134884 (* 2.0 l_0_21_258)))
 (let ((?x141490 (* ?x134884 l_0_21_270)))
 (let ((?x134881 (* 2.0 l_0_21_257)))
 (let ((?x141488 (* ?x134881 l_0_21_269)))
 (let ((?x134878 (* 2.0 l_0_21_256)))
 (let ((?x141486 (* ?x134878 l_0_21_268)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x135268 (* ?x134947 l_0_21_193)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x135266 (* ?x134944 l_0_21_192)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x135264 (* ?x134941 l_0_21_191)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135262 (* ?x134928 l_0_21_157)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135260 (* ?x134925 l_0_21_156)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x135258 (* ?x134911 l_0_21_155)))
 (let ((?x141489 (+ (+ (- (- (- (+ (+ ?x135258 ?x135260) ?x135262) ?x135264) ?x135266) ?x135268) ?x141486) ?x141488)))
 (= (- (- (- (+ ?x141489 ?x141490) ?x138125) ?x138127) ?x138129) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x138168 (* ?x134554 l_0_21_306)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x138165 (* ?x134551 l_0_21_305)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x138162 (* ?x134548 l_0_21_304)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x135315 (* ?x134947 l_0_21_198)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x135313 (* ?x134944 l_0_21_197)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x135311 (* ?x134941 l_0_21_196)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135302 (* ?x134928 l_0_21_162)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135300 (* ?x134925 l_0_21_161)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x136214 (* ?x134911 l_0_21_160)))
 (let ((?x141526 (- (- (- (- (- (+ (+ ?x136214 ?x135300) ?x135302) ?x135311) ?x135313) ?x135315) ?x138162) ?x138165)))
 (= (- ?x141526 ?x138168) 0.0)))))))))))))))))))))
(assert
 (let ((?x134554 (* 2.0 l_0_21_294)))
 (let ((?x138197 (* ?x134554 l_0_21_312)))
 (let ((?x134551 (* 2.0 l_0_21_293)))
 (let ((?x138195 (* ?x134551 l_0_21_311)))
 (let ((?x134548 (* 2.0 l_0_21_292)))
 (let ((?x138193 (* ?x134548 l_0_21_310)))
 (let ((?x134884 (* 2.0 l_0_21_258)))
 (let ((?x141490 (* ?x134884 l_0_21_270)))
 (let ((?x134881 (* 2.0 l_0_21_257)))
 (let ((?x141488 (* ?x134881 l_0_21_269)))
 (let ((?x134878 (* 2.0 l_0_21_256)))
 (let ((?x141486 (* ?x134878 l_0_21_268)))
 (let ((?x134947 (* 2.0 l_0_21_186)))
 (let ((?x135380 (* ?x134947 l_0_21_204)))
 (let ((?x134944 (* 2.0 l_0_21_185)))
 (let ((?x135378 (* ?x134944 l_0_21_203)))
 (let ((?x134941 (* 2.0 l_0_21_184)))
 (let ((?x135376 (* ?x134941 l_0_21_202)))
 (let ((?x134928 (* 2.0 l_0_21_150)))
 (let ((?x135373 (* ?x134928 l_0_21_168)))
 (let ((?x134925 (* 2.0 l_0_21_149)))
 (let ((?x135370 (* ?x134925 l_0_21_167)))
 (let ((?x134911 (* 2.0 l_0_21_148)))
 (let ((?x135367 (* ?x134911 l_0_21_166)))
 (let ((?x141541 (- (- (- (- (- (+ (+ ?x135367 ?x135370) ?x135373) ?x135376) ?x135378) ?x135380) ?x141486) ?x141488)))
 (= (- (- (- (- ?x141541 ?x141490) ?x138193) ?x138195) ?x138197) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x138337 (* l_0_21_303 l_0_21_303)))
 (let ((?x138335 (* l_0_21_302 l_0_21_302)))
 (let ((?x138333 (* l_0_21_301 l_0_21_301)))
 (let ((?x138331 (* l_0_21_300 l_0_21_300)))
 (let ((?x138329 (* l_0_21_299 l_0_21_299)))
 (let ((?x138946 (* 2.0 l_0_21_267)))
 (let ((?x141577 (* ?x138946 l_0_21_272)))
 (let ((?x138943 (* 2.0 l_0_21_266)))
 (let ((?x141575 (* ?x138943 l_0_21_271)))
 (let ((?x138940 (* 2.0 l_0_21_265)))
 (let ((?x141573 (* ?x138940 l_0_21_270)))
 (let ((?x138937 (* 2.0 l_0_21_264)))
 (let ((?x141571 (* ?x138937 l_0_21_269)))
 (let ((?x138934 (* 2.0 l_0_21_263)))
 (let ((?x141569 (* ?x138934 l_0_21_268)))
 (let ((?x135833 (* l_0_21_195 l_0_21_195)))
 (let ((?x135831 (* l_0_21_194 l_0_21_194)))
 (let ((?x135829 (* l_0_21_193 l_0_21_193)))
 (let ((?x135827 (* l_0_21_192 l_0_21_192)))
 (let ((?x135825 (* l_0_21_191 l_0_21_191)))
 (let ((?x135823 (* l_0_21_159 l_0_21_159)))
 (let ((?x135821 (* l_0_21_158 l_0_21_158)))
 (let ((?x135819 (* l_0_21_157 l_0_21_157)))
 (let ((?x141561 (+ (+ (* l_0_21_155 l_0_21_155) (* l_0_21_156 l_0_21_156)) ?x135819)))
 (let ((?x141568 (- (- (- (- (- (+ (+ ?x141561 ?x135821) ?x135823) ?x135825) ?x135827) ?x135829) ?x135831) ?x135833)))
 (let ((?x141580 (- (- (+ (+ (+ (+ (+ ?x141568 ?x141569) ?x141571) ?x141573) ?x141575) ?x141577) ?x138329) ?x138331)))
 (= (- (- (- ?x141580 ?x138333) ?x138335) ?x138337) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x138377 (* 2.0 l_0_21_303)))
 (let ((?x138378 (* ?x138377 l_0_21_308)))
 (let ((?x138374 (* 2.0 l_0_21_302)))
 (let ((?x138375 (* ?x138374 l_0_21_307)))
 (let ((?x138371 (* 2.0 l_0_21_301)))
 (let ((?x138372 (* ?x138371 l_0_21_306)))
 (let ((?x138368 (* 2.0 l_0_21_300)))
 (let ((?x138369 (* ?x138368 l_0_21_305)))
 (let ((?x138365 (* 2.0 l_0_21_299)))
 (let ((?x138366 (* ?x138365 l_0_21_304)))
 (let ((?x141623 (* l_0_21_273 l_0_21_273)))
 (let ((?x141621 (* l_0_21_272 l_0_21_272)))
 (let ((?x141619 (* l_0_21_271 l_0_21_271)))
 (let ((?x141617 (* l_0_21_270 l_0_21_270)))
 (let ((?x141615 (* l_0_21_269 l_0_21_269)))
 (let ((?x141613 (* l_0_21_268 l_0_21_268)))
 (let ((?x135904 (* 2.0 l_0_21_195)))
 (let ((?x135905 (* ?x135904 l_0_21_200)))
 (let ((?x135901 (* 2.0 l_0_21_194)))
 (let ((?x135902 (* ?x135901 l_0_21_199)))
 (let ((?x135898 (* 2.0 l_0_21_193)))
 (let ((?x135899 (* ?x135898 l_0_21_198)))
 (let ((?x135895 (* 2.0 l_0_21_192)))
 (let ((?x135896 (* ?x135895 l_0_21_197)))
 (let ((?x135892 (* 2.0 l_0_21_191)))
 (let ((?x135893 (* ?x135892 l_0_21_196)))
 (let ((?x135889 (* 2.0 l_0_21_159)))
 (let ((?x135890 (* ?x135889 l_0_21_164)))
 (let ((?x135886 (* 2.0 l_0_21_158)))
 (let ((?x135887 (* ?x135886 l_0_21_163)))
 (let ((?x135883 (* 2.0 l_0_21_157)))
 (let ((?x135884 (* ?x135883 l_0_21_162)))
 (let ((?x135880 (* 2.0 l_0_21_156)))
 (let ((?x135881 (* ?x135880 l_0_21_161)))
 (let ((?x135877 (* 2.0 l_0_21_155)))
 (let ((?x135878 (* ?x135877 l_0_21_160)))
 (let ((?x141610 (- (- (- (+ (+ (+ (+ ?x135878 ?x135881) ?x135884) ?x135887) ?x135890) ?x135893) ?x135896) ?x135899)))
 (let ((?x141622 (+ (+ (+ (+ (+ (- (- ?x141610 ?x135902) ?x135905) ?x141613) ?x141615) ?x141617) ?x141619) ?x141621)))
 (= (- (- (- (- (- (+ ?x141622 ?x141623) ?x138366) ?x138369) ?x138372) ?x138375) ?x138378) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x138377 (* 2.0 l_0_21_303)))
 (let ((?x138453 (* ?x138377 l_0_21_314)))
 (let ((?x138374 (* 2.0 l_0_21_302)))
 (let ((?x138451 (* ?x138374 l_0_21_313)))
 (let ((?x138371 (* 2.0 l_0_21_301)))
 (let ((?x138449 (* ?x138371 l_0_21_312)))
 (let ((?x138368 (* 2.0 l_0_21_300)))
 (let ((?x138447 (* ?x138368 l_0_21_311)))
 (let ((?x138365 (* 2.0 l_0_21_299)))
 (let ((?x138445 (* ?x138365 l_0_21_310)))
 (let ((?x139080 (* 2.0 l_0_21_273)))
 (let ((?x141668 (* ?x139080 l_0_21_279)))
 (let ((?x139077 (* 2.0 l_0_21_272)))
 (let ((?x141666 (* ?x139077 l_0_21_278)))
 (let ((?x139074 (* 2.0 l_0_21_271)))
 (let ((?x141664 (* ?x139074 l_0_21_277)))
 (let ((?x139071 (* 2.0 l_0_21_270)))
 (let ((?x141662 (* ?x139071 l_0_21_276)))
 (let ((?x139068 (* 2.0 l_0_21_269)))
 (let ((?x141660 (* ?x139068 l_0_21_275)))
 (let ((?x139065 (* 2.0 l_0_21_268)))
 (let ((?x141658 (* ?x139065 l_0_21_274)))
 (let ((?x138946 (* 2.0 l_0_21_267)))
 (let ((?x141577 (* ?x138946 l_0_21_272)))
 (let ((?x138943 (* 2.0 l_0_21_266)))
 (let ((?x141575 (* ?x138943 l_0_21_271)))
 (let ((?x138940 (* 2.0 l_0_21_265)))
 (let ((?x141573 (* ?x138940 l_0_21_270)))
 (let ((?x138937 (* 2.0 l_0_21_264)))
 (let ((?x141571 (* ?x138937 l_0_21_269)))
 (let ((?x138934 (* 2.0 l_0_21_263)))
 (let ((?x141569 (* ?x138934 l_0_21_268)))
 (let ((?x135904 (* 2.0 l_0_21_195)))
 (let ((?x136004 (* ?x135904 l_0_21_206)))
 (let ((?x135901 (* 2.0 l_0_21_194)))
 (let ((?x136002 (* ?x135901 l_0_21_205)))
 (let ((?x135898 (* 2.0 l_0_21_193)))
 (let ((?x136000 (* ?x135898 l_0_21_204)))
 (let ((?x135895 (* 2.0 l_0_21_192)))
 (let ((?x135998 (* ?x135895 l_0_21_203)))
 (let ((?x135892 (* 2.0 l_0_21_191)))
 (let ((?x135996 (* ?x135892 l_0_21_202)))
 (let ((?x135889 (* 2.0 l_0_21_159)))
 (let ((?x135994 (* ?x135889 l_0_21_170)))
 (let ((?x135886 (* 2.0 l_0_21_158)))
 (let ((?x135992 (* ?x135886 l_0_21_169)))
 (let ((?x135883 (* 2.0 l_0_21_157)))
 (let ((?x135990 (* ?x135883 l_0_21_168)))
 (let ((?x135880 (* 2.0 l_0_21_156)))
 (let ((?x135988 (* ?x135880 l_0_21_167)))
 (let ((?x135877 (* 2.0 l_0_21_155)))
 (let ((?x135986 (* ?x135877 l_0_21_166)))
 (let ((?x141650 (- (- (- (+ (+ (+ (+ ?x135986 ?x135988) ?x135990) ?x135992) ?x135994) ?x135996) ?x135998) ?x136000)))
 (let ((?x141657 (- (- (- (- (- (- (- ?x141650 ?x136002) ?x136004) ?x141569) ?x141571) ?x141573) ?x141575) ?x141577)))
 (let ((?x141670 (- (+ (+ (+ (+ (+ (+ ?x141657 ?x141658) ?x141660) ?x141662) ?x141664) ?x141666) ?x141668) ?x138445)))
 (= (- (- (- (- ?x141670 ?x138447) ?x138449) ?x138451) ?x138453) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x138377 (* 2.0 l_0_21_303)))
 (let ((?x138524 (* ?x138377 l_0_21_321)))
 (let ((?x138374 (* 2.0 l_0_21_302)))
 (let ((?x138522 (* ?x138374 l_0_21_320)))
 (let ((?x138371 (* 2.0 l_0_21_301)))
 (let ((?x138520 (* ?x138371 l_0_21_319)))
 (let ((?x138368 (* 2.0 l_0_21_300)))
 (let ((?x138518 (* ?x138368 l_0_21_318)))
 (let ((?x138365 (* 2.0 l_0_21_299)))
 (let ((?x138516 (* ?x138365 l_0_21_317)))
 (let ((?x139080 (* 2.0 l_0_21_273)))
 (let ((?x139081 (* ?x139080 l_0_21_286)))
 (let ((?x139077 (* 2.0 l_0_21_272)))
 (let ((?x139078 (* ?x139077 l_0_21_285)))
 (let ((?x139074 (* 2.0 l_0_21_271)))
 (let ((?x139075 (* ?x139074 l_0_21_284)))
 (let ((?x139071 (* 2.0 l_0_21_270)))
 (let ((?x139072 (* ?x139071 l_0_21_283)))
 (let ((?x139068 (* 2.0 l_0_21_269)))
 (let ((?x139069 (* ?x139068 l_0_21_282)))
 (let ((?x139065 (* 2.0 l_0_21_268)))
 (let ((?x139066 (* ?x139065 l_0_21_281)))
 (let ((?x135904 (* 2.0 l_0_21_195)))
 (let ((?x136057 (* ?x135904 l_0_21_213)))
 (let ((?x135901 (* 2.0 l_0_21_194)))
 (let ((?x136055 (* ?x135901 l_0_21_212)))
 (let ((?x135898 (* 2.0 l_0_21_193)))
 (let ((?x136053 (* ?x135898 l_0_21_211)))
 (let ((?x135895 (* 2.0 l_0_21_192)))
 (let ((?x136051 (* ?x135895 l_0_21_210)))
 (let ((?x135892 (* 2.0 l_0_21_191)))
 (let ((?x136049 (* ?x135892 l_0_21_209)))
 (let ((?x135889 (* 2.0 l_0_21_159)))
 (let ((?x136047 (* ?x135889 l_0_21_177)))
 (let ((?x135886 (* 2.0 l_0_21_158)))
 (let ((?x136045 (* ?x135886 l_0_21_176)))
 (let ((?x135883 (* 2.0 l_0_21_157)))
 (let ((?x136043 (* ?x135883 l_0_21_175)))
 (let ((?x135880 (* 2.0 l_0_21_156)))
 (let ((?x136041 (* ?x135880 l_0_21_174)))
 (let ((?x135877 (* 2.0 l_0_21_155)))
 (let ((?x136039 (* ?x135877 l_0_21_173)))
 (let ((?x141700 (- (- (- (+ (+ (+ (+ ?x136039 ?x136041) ?x136043) ?x136045) ?x136047) ?x136049) ?x136051) ?x136053)))
 (let ((?x141706 (- (- (- (- ?x141700 ?x136055) ?x136057) (* (* 2.0 l_0_21_227) l_0_21_232)) (* (* 2.0 l_0_21_228) l_0_21_233))))
 (let ((?x141710 (- (- ?x141706 (* (* 2.0 l_0_21_229) l_0_21_234)) (* (* 2.0 l_0_21_230) l_0_21_235))))
 (let ((?x141715 (+ (+ (+ (- ?x141710 (* (* 2.0 l_0_21_231) l_0_21_236)) ?x139066) ?x139069) ?x139072)))
 (let ((?x141722 (- (- (- (- (+ (+ (+ ?x141715 ?x139075) ?x139078) ?x139081) ?x138516) ?x138518) ?x138520) ?x138522)))
 (= (- ?x141722 ?x138524) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x138594 (* l_0_21_309 l_0_21_309)))
 (let ((?x138592 (* l_0_21_308 l_0_21_308)))
 (let ((?x138590 (* l_0_21_307 l_0_21_307)))
 (let ((?x138588 (* l_0_21_306 l_0_21_306)))
 (let ((?x138586 (* l_0_21_305 l_0_21_305)))
 (let ((?x138584 (* l_0_21_304 l_0_21_304)))
 (let ((?x136158 (* l_0_21_201 l_0_21_201)))
 (let ((?x136156 (* l_0_21_200 l_0_21_200)))
 (let ((?x136152 (* l_0_21_199 l_0_21_199)))
 (let ((?x136150 (* l_0_21_198 l_0_21_198)))
 (let ((?x136148 (* l_0_21_197 l_0_21_197)))
 (let ((?x136146 (* l_0_21_196 l_0_21_196)))
 (let ((?x136138 (* l_0_21_165 l_0_21_165)))
 (let ((?x136123 (* l_0_21_164 l_0_21_164)))
 (let ((?x136120 (* l_0_21_163 l_0_21_163)))
 (let ((?x136116 (* l_0_21_162 l_0_21_162)))
 (let ((?x141754 (+ (+ (* l_0_21_160 l_0_21_160) (* l_0_21_161 l_0_21_161)) ?x136116)))
 (let ((?x141761 (- (- (- (- (+ (+ (+ ?x141754 ?x136120) ?x136123) ?x136138) ?x136146) ?x136148) ?x136150) ?x136152)))
 (let ((?x141768 (- (- (- (- (- (- (- ?x141761 ?x136156) ?x136158) ?x138584) ?x138586) ?x138588) ?x138590) ?x138592)))
 (= (- ?x141768 ?x138594) 0.0)))))))))))))))))))))
(assert
 (let ((?x138619 (* 2.0 l_0_21_309)))
 (let ((?x138620 (* ?x138619 l_0_21_315)))
 (let ((?x138616 (* 2.0 l_0_21_308)))
 (let ((?x138617 (* ?x138616 l_0_21_314)))
 (let ((?x138613 (* 2.0 l_0_21_307)))
 (let ((?x138614 (* ?x138613 l_0_21_313)))
 (let ((?x138610 (* 2.0 l_0_21_306)))
 (let ((?x138611 (* ?x138610 l_0_21_312)))
 (let ((?x138607 (* 2.0 l_0_21_305)))
 (let ((?x138608 (* ?x138607 l_0_21_311)))
 (let ((?x138604 (* 2.0 l_0_21_304)))
 (let ((?x138605 (* ?x138604 l_0_21_310)))
 (let ((?x141623 (* l_0_21_273 l_0_21_273)))
 (let ((?x141621 (* l_0_21_272 l_0_21_272)))
 (let ((?x141619 (* l_0_21_271 l_0_21_271)))
 (let ((?x141617 (* l_0_21_270 l_0_21_270)))
 (let ((?x141615 (* l_0_21_269 l_0_21_269)))
 (let ((?x141613 (* l_0_21_268 l_0_21_268)))
 (let ((?x136263 (* 2.0 l_0_21_201)))
 (let ((?x136264 (* ?x136263 l_0_21_207)))
 (let ((?x136260 (* 2.0 l_0_21_200)))
 (let ((?x136261 (* ?x136260 l_0_21_206)))
 (let ((?x136254 (* 2.0 l_0_21_199)))
 (let ((?x136255 (* ?x136254 l_0_21_205)))
 (let ((?x136251 (* 2.0 l_0_21_198)))
 (let ((?x136252 (* ?x136251 l_0_21_204)))
 (let ((?x136248 (* 2.0 l_0_21_197)))
 (let ((?x136249 (* ?x136248 l_0_21_203)))
 (let ((?x136245 (* 2.0 l_0_21_196)))
 (let ((?x136246 (* ?x136245 l_0_21_202)))
 (let ((?x136235 (* 2.0 l_0_21_165)))
 (let ((?x136236 (* ?x136235 l_0_21_171)))
 (let ((?x136232 (* 2.0 l_0_21_164)))
 (let ((?x136233 (* ?x136232 l_0_21_170)))
 (let ((?x136229 (* 2.0 l_0_21_163)))
 (let ((?x136230 (* ?x136229 l_0_21_169)))
 (let ((?x136226 (* 2.0 l_0_21_162)))
 (let ((?x136227 (* ?x136226 l_0_21_168)))
 (let ((?x136223 (* 2.0 l_0_21_161)))
 (let ((?x136224 (* ?x136223 l_0_21_167)))
 (let ((?x136220 (* 2.0 l_0_21_160)))
 (let ((?x136221 (* ?x136220 l_0_21_166)))
 (let ((?x141784 (- (- (+ (+ (+ (+ (+ ?x136221 ?x136224) ?x136227) ?x136230) ?x136233) ?x136236) ?x136246) ?x136249)))
 (let ((?x141791 (- (- (- (- (- (- (- ?x141784 ?x136252) ?x136255) ?x136261) ?x136264) ?x141613) ?x141615) ?x141617)))
 (let ((?x141798 (- (- (- (- (- (- (- ?x141791 ?x141619) ?x141621) ?x141623) ?x138605) ?x138608) ?x138611) ?x138614)))
 (= (- (- ?x141798 ?x138617) ?x138620) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x138619 (* 2.0 l_0_21_309)))
 (let ((?x138654 (* ?x138619 l_0_21_322)))
 (let ((?x138616 (* 2.0 l_0_21_308)))
 (let ((?x138652 (* ?x138616 l_0_21_321)))
 (let ((?x138613 (* 2.0 l_0_21_307)))
 (let ((?x138650 (* ?x138613 l_0_21_320)))
 (let ((?x138610 (* 2.0 l_0_21_306)))
 (let ((?x138648 (* ?x138610 l_0_21_319)))
 (let ((?x138607 (* 2.0 l_0_21_305)))
 (let ((?x138646 (* ?x138607 l_0_21_318)))
 (let ((?x138604 (* 2.0 l_0_21_304)))
 (let ((?x138644 (* ?x138604 l_0_21_317)))
 (let ((?x141835 (* l_0_21_237 l_0_21_237)))
 (let ((?x141833 (* l_0_21_236 l_0_21_236)))
 (let ((?x141831 (* l_0_21_235 l_0_21_235)))
 (let ((?x141829 (* l_0_21_234 l_0_21_234)))
 (let ((?x141827 (* l_0_21_233 l_0_21_233)))
 (let ((?x141825 (* l_0_21_232 l_0_21_232)))
 (let ((?x136263 (* 2.0 l_0_21_201)))
 (let ((?x136406 (* ?x136263 l_0_21_214)))
 (let ((?x136260 (* 2.0 l_0_21_200)))
 (let ((?x136404 (* ?x136260 l_0_21_213)))
 (let ((?x136254 (* 2.0 l_0_21_199)))
 (let ((?x136400 (* ?x136254 l_0_21_212)))
 (let ((?x136251 (* 2.0 l_0_21_198)))
 (let ((?x136398 (* ?x136251 l_0_21_211)))
 (let ((?x136248 (* 2.0 l_0_21_197)))
 (let ((?x136396 (* ?x136248 l_0_21_210)))
 (let ((?x136245 (* 2.0 l_0_21_196)))
 (let ((?x136394 (* ?x136245 l_0_21_209)))
 (let ((?x136235 (* 2.0 l_0_21_165)))
 (let ((?x136386 (* ?x136235 l_0_21_178)))
 (let ((?x136232 (* 2.0 l_0_21_164)))
 (let ((?x136384 (* ?x136232 l_0_21_177)))
 (let ((?x136229 (* 2.0 l_0_21_163)))
 (let ((?x136382 (* ?x136229 l_0_21_176)))
 (let ((?x136226 (* 2.0 l_0_21_162)))
 (let ((?x136380 (* ?x136226 l_0_21_175)))
 (let ((?x136223 (* 2.0 l_0_21_161)))
 (let ((?x136378 (* ?x136223 l_0_21_174)))
 (let ((?x136220 (* 2.0 l_0_21_160)))
 (let ((?x136376 (* ?x136220 l_0_21_173)))
 (let ((?x141820 (- (- (+ (+ (+ (+ (+ ?x136376 ?x136378) ?x136380) ?x136382) ?x136384) ?x136386) ?x136394) ?x136396)))
 (let ((?x141830 (- (- (- (- (- (- (- ?x141820 ?x136398) ?x136400) ?x136404) ?x136406) ?x141825) ?x141827) ?x141829)))
 (let ((?x141840 (- (- (- (- (- (- (- ?x141830 ?x141831) ?x141833) ?x141835) ?x138644) ?x138646) ?x138648) ?x138650)))
 (= (- (- ?x141840 ?x138652) ?x138654) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x17542 (* l_0_21_316 l_0_21_316)))
 (let ((?x115758 (* l_0_21_315 l_0_21_315)))
 (let ((?x51856 (* l_0_21_314 l_0_21_314)))
 (let ((?x92859 (* l_0_21_313 l_0_21_313)))
 (let ((?x92719 (* l_0_21_312 l_0_21_312)))
 (let ((?x72354 (* l_0_21_311 l_0_21_311)))
 (let ((?x51830 (* l_0_21_310 l_0_21_310)))
 (let ((?x139080 (* 2.0 l_0_21_273)))
 (let ((?x141668 (* ?x139080 l_0_21_279)))
 (let ((?x139077 (* 2.0 l_0_21_272)))
 (let ((?x141666 (* ?x139077 l_0_21_278)))
 (let ((?x139074 (* 2.0 l_0_21_271)))
 (let ((?x141664 (* ?x139074 l_0_21_277)))
 (let ((?x139071 (* 2.0 l_0_21_270)))
 (let ((?x141662 (* ?x139071 l_0_21_276)))
 (let ((?x139068 (* 2.0 l_0_21_269)))
 (let ((?x141660 (* ?x139068 l_0_21_275)))
 (let ((?x139065 (* 2.0 l_0_21_268)))
 (let ((?x141658 (* ?x139065 l_0_21_274)))
 (let ((?x136487 (* l_0_21_208 l_0_21_208)))
 (let ((?x136485 (* l_0_21_207 l_0_21_207)))
 (let ((?x136483 (* l_0_21_206 l_0_21_206)))
 (let ((?x136481 (* l_0_21_205 l_0_21_205)))
 (let ((?x136479 (* l_0_21_204 l_0_21_204)))
 (let ((?x136477 (* l_0_21_203 l_0_21_203)))
 (let ((?x136475 (* l_0_21_202 l_0_21_202)))
 (let ((?x136473 (* l_0_21_172 l_0_21_172)))
 (let ((?x136471 (* l_0_21_171 l_0_21_171)))
 (let ((?x136469 (* l_0_21_170 l_0_21_170)))
 (let ((?x136467 (* l_0_21_169 l_0_21_169)))
 (let ((?x136465 (* l_0_21_168 l_0_21_168)))
 (let ((?x77223 (+ (+ (* l_0_21_166 l_0_21_166) (* l_0_21_167 l_0_21_167)) ?x136465)))
 (let ((?x141868 (- (- (- (+ (+ (+ (+ ?x77223 ?x136467) ?x136469) ?x136471) ?x136473) ?x136475) ?x136477) ?x136479)))
 (let ((?x141875 (- (- (- (- (- (- (- ?x141868 ?x136481) ?x136483) ?x136485) ?x136487) ?x141658) ?x141660) ?x141662)))
 (let ((?x141882 (- (- (- (- (- (- (- ?x141875 ?x141664) ?x141666) ?x141668) ?x51830) ?x72354) ?x92719) ?x92859)))
 (= (- (- (- ?x141882 ?x51856) ?x115758) ?x17542) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x138743 (* l_0_21_324 l_0_21_324)))
 (let ((?x138741 (* l_0_21_323 l_0_21_323)))
 (let ((?x138739 (* l_0_21_322 l_0_21_322)))
 (let ((?x138737 (* l_0_21_321 l_0_21_321)))
 (let ((?x138735 (* l_0_21_320 l_0_21_320)))
 (let ((?x138732 (* l_0_21_319 l_0_21_319)))
 (let ((?x138730 (* l_0_21_318 l_0_21_318)))
 (let ((?x138728 (* l_0_21_317 l_0_21_317)))
 (let ((?x136771 (* l_0_21_216 l_0_21_216)))
 (let ((?x136769 (* l_0_21_215 l_0_21_215)))
 (let ((?x136767 (* l_0_21_214 l_0_21_214)))
 (let ((?x136765 (* l_0_21_213 l_0_21_213)))
 (let ((?x136763 (* l_0_21_212 l_0_21_212)))
 (let ((?x136761 (* l_0_21_211 l_0_21_211)))
 (let ((?x136759 (* l_0_21_210 l_0_21_210)))
 (let ((?x136757 (* l_0_21_209 l_0_21_209)))
 (let ((?x136755 (* l_0_21_180 l_0_21_180)))
 (let ((?x136753 (* l_0_21_179 l_0_21_179)))
 (let ((?x136751 (* l_0_21_178 l_0_21_178)))
 (let ((?x136749 (* l_0_21_177 l_0_21_177)))
 (let ((?x136728 (* l_0_21_176 l_0_21_176)))
 (let ((?x136724 (* l_0_21_175 l_0_21_175)))
 (let ((?x77222 (+ (+ (* l_0_21_173 l_0_21_173) (* l_0_21_174 l_0_21_174)) ?x136724)))
 (let ((?x141921 (- (- (+ (+ (+ (+ (+ ?x77222 ?x136728) ?x136749) ?x136751) ?x136753) ?x136755) ?x136757) ?x136759)))
 (let ((?x141929 (- (- (- (- (- (- (- ?x141921 ?x136761) ?x136763) ?x136765) ?x136767) ?x136769) ?x136771) (* (* 2.0 l_0_21_232) l_0_21_245))))
 (let ((?x141933 (- (- ?x141929 (* (* 2.0 l_0_21_233) l_0_21_246)) (* (* 2.0 l_0_21_234) l_0_21_247))))
 (let ((?x141937 (- (- ?x141933 (* (* 2.0 l_0_21_235) l_0_21_248)) (* (* 2.0 l_0_21_236) l_0_21_249))))
 (let ((?x141942 (- (- (- (- ?x141937 (* (* 2.0 l_0_21_237) l_0_21_250)) ?x138728) ?x138730) ?x138732)))
 (= (- (- (- (- (- ?x141942 ?x138735) ?x138737) ?x138739) ?x138741) ?x138743) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x134093 (* ?x134092 l_0_21_282)))
 (let ((?x134089 (* 2.0 l_0_21_254)))
 (let ((?x134090 (* ?x134089 l_0_21_281)))
 (let ((?x141974 (- (* (* (- 2.0) l_0_21_218) l_0_21_227) (* (* 2.0 l_0_21_219) l_0_21_228))))
 (let ((?x141980 (- (- (+ (+ ?x141974 ?x134090) ?x134093) (* (* 2.0 l_0_21_335) l_0_21_353)) (* (* 2.0 l_0_21_336) l_0_21_354))))
 (let ((?x141984 (- (- ?x141980 (* (* 2.0 l_0_21_337) l_0_21_355)) (* (* 2.0 l_0_21_338) l_0_21_356))))
 (let ((?x141988 (- (- ?x141984 (* (* 2.0 l_0_21_339) l_0_21_357)) (* (* 2.0 l_0_21_371) l_0_21_389))))
 (let ((?x141992 (- (- ?x141988 (* (* 2.0 l_0_21_372) l_0_21_390)) (* (* 2.0 l_0_21_373) l_0_21_391))))
 (let ((?x141996 (- (- ?x141992 (* (* 2.0 l_0_21_374) l_0_21_392)) (* (* 2.0 l_0_21_375) l_0_21_393))))
 (let ((?x142000 (- (- ?x141996 (* (* 2.0 l_0_21_407) l_0_21_425)) (* (* 2.0 l_0_21_408) l_0_21_426))))
 (let ((?x142004 (- (- ?x142000 (* (* 2.0 l_0_21_409) l_0_21_427)) (* (* 2.0 l_0_21_410) l_0_21_428))))
 (let ((?x142008 (- (- ?x142004 (* (* 2.0 l_0_21_411) l_0_21_429)) (* (* 2.0 l_0_21_443) l_0_21_461))))
 (let ((?x142012 (- (- ?x142008 (* (* 2.0 l_0_21_444) l_0_21_462)) (* (* 2.0 l_0_21_445) l_0_21_463))))
 (let ((?x142016 (- (- ?x142012 (* (* 2.0 l_0_21_446) l_0_21_464)) (* (* 2.0 l_0_21_447) l_0_21_465))))
 (let ((?x142020 (- (- ?x142016 (* (* 2.0 l_0_21_479) l_0_21_497)) (* (* 2.0 l_0_21_480) l_0_21_498))))
 (let ((?x142024 (- (- ?x142020 (* (* 2.0 l_0_21_481) l_0_21_499)) (* (* 2.0 l_0_21_482) l_0_21_500))))
 (let ((?x142028 (- (- ?x142024 (* (* 2.0 l_0_21_483) l_0_21_501)) (* (* 2.0 l_0_21_515) l_0_21_533))))
 (let ((?x142032 (- (- ?x142028 (* (* 2.0 l_0_21_516) l_0_21_534)) (* (* 2.0 l_0_21_517) l_0_21_535))))
 (let ((?x142036 (- (- ?x142032 (* (* 2.0 l_0_21_518) l_0_21_536)) (* (* 2.0 l_0_21_519) l_0_21_537))))
 (= ?x142036 0.0))))))))))))))))))))))
(assert
 (let ((?x142209 (* l_0_21_540 l_0_21_540)))
 (let ((?x142207 (* l_0_21_539 l_0_21_539)))
 (let ((?x142205 (* l_0_21_538 l_0_21_538)))
 (let ((?x142203 (* l_0_21_537 l_0_21_537)))
 (let ((?x142201 (* l_0_21_536 l_0_21_536)))
 (let ((?x142199 (* l_0_21_535 l_0_21_535)))
 (let ((?x142197 (* l_0_21_534 l_0_21_534)))
 (let ((?x142195 (* l_0_21_533 l_0_21_533)))
 (let ((?x142193 (* l_0_21_504 l_0_21_504)))
 (let ((?x142191 (* l_0_21_503 l_0_21_503)))
 (let ((?x142189 (* l_0_21_502 l_0_21_502)))
 (let ((?x142187 (* l_0_21_501 l_0_21_501)))
 (let ((?x142185 (* l_0_21_500 l_0_21_500)))
 (let ((?x142183 (* l_0_21_499 l_0_21_499)))
 (let ((?x142181 (* l_0_21_498 l_0_21_498)))
 (let ((?x142179 (* l_0_21_497 l_0_21_497)))
 (let ((?x142177 (* l_0_21_468 l_0_21_468)))
 (let ((?x142175 (* l_0_21_467 l_0_21_467)))
 (let ((?x142173 (* l_0_21_466 l_0_21_466)))
 (let ((?x142171 (* l_0_21_465 l_0_21_465)))
 (let ((?x142169 (* l_0_21_464 l_0_21_464)))
 (let ((?x142167 (* l_0_21_463 l_0_21_463)))
 (let ((?x142165 (* l_0_21_462 l_0_21_462)))
 (let ((?x142163 (* l_0_21_461 l_0_21_461)))
 (let ((?x142161 (* l_0_21_432 l_0_21_432)))
 (let ((?x142159 (* l_0_21_431 l_0_21_431)))
 (let ((?x142157 (* l_0_21_430 l_0_21_430)))
 (let ((?x142155 (* l_0_21_429 l_0_21_429)))
 (let ((?x142153 (* l_0_21_428 l_0_21_428)))
 (let ((?x142151 (* l_0_21_427 l_0_21_427)))
 (let ((?x142149 (* l_0_21_426 l_0_21_426)))
 (let ((?x142147 (* l_0_21_425 l_0_21_425)))
 (let ((?x142145 (* l_0_21_396 l_0_21_396)))
 (let ((?x142143 (* l_0_21_395 l_0_21_395)))
 (let ((?x142141 (* l_0_21_394 l_0_21_394)))
 (let ((?x142139 (* l_0_21_393 l_0_21_393)))
 (let ((?x142137 (* l_0_21_392 l_0_21_392)))
 (let ((?x142135 (* l_0_21_391 l_0_21_391)))
 (let ((?x142133 (* l_0_21_390 l_0_21_390)))
 (let ((?x142131 (* l_0_21_389 l_0_21_389)))
 (let ((?x142129 (* l_0_21_360 l_0_21_360)))
 (let ((?x142127 (* l_0_21_359 l_0_21_359)))
 (let ((?x142125 (* l_0_21_358 l_0_21_358)))
 (let ((?x142123 (* l_0_21_357 l_0_21_357)))
 (let ((?x142121 (* l_0_21_356 l_0_21_356)))
 (let ((?x142119 (* l_0_21_355 l_0_21_355)))
 (let ((?x142117 (* l_0_21_354 l_0_21_354)))
 (let ((?x142115 (* l_0_21_353 l_0_21_353)))
 (let ((?x142114 (- (* (* (- 2.0) l_0_21_218) l_0_21_245) (* (* 2.0 l_0_21_219) l_0_21_246))))
 (let ((?x142128 (- (- (- (- (- (- (- ?x142114 ?x142115) ?x142117) ?x142119) ?x142121) ?x142123) ?x142125) ?x142127)))
 (let ((?x142142 (- (- (- (- (- (- (- ?x142128 ?x142129) ?x142131) ?x142133) ?x142135) ?x142137) ?x142139) ?x142141)))
 (let ((?x142156 (- (- (- (- (- (- (- ?x142142 ?x142143) ?x142145) ?x142147) ?x142149) ?x142151) ?x142153) ?x142155)))
 (let ((?x142170 (- (- (- (- (- (- (- ?x142156 ?x142157) ?x142159) ?x142161) ?x142163) ?x142165) ?x142167) ?x142169)))
 (let ((?x142184 (- (- (- (- (- (- (- ?x142170 ?x142171) ?x142173) ?x142175) ?x142177) ?x142179) ?x142181) ?x142183)))
 (let ((?x142198 (- (- (- (- (- (- (- ?x142184 ?x142185) ?x142187) ?x142189) ?x142191) ?x142193) ?x142195) ?x142197)))
 (= (- (- (- (- (- (- ?x142198 ?x142199) ?x142201) ?x142203) ?x142205) ?x142207) ?x142209) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x138946 (* 2.0 l_0_21_267)))
 (let ((?x138947 (* ?x138946 l_0_21_285)))
 (let ((?x138943 (* 2.0 l_0_21_266)))
 (let ((?x138944 (* ?x138943 l_0_21_284)))
 (let ((?x138940 (* 2.0 l_0_21_265)))
 (let ((?x138941 (* ?x138940 l_0_21_283)))
 (let ((?x138937 (* 2.0 l_0_21_264)))
 (let ((?x138938 (* ?x138937 l_0_21_282)))
 (let ((?x138934 (* 2.0 l_0_21_263)))
 (let ((?x138935 (* ?x138934 l_0_21_281)))
 (let ((?x142290 (* l_0_21_231 l_0_21_231)))
 (let ((?x142288 (* l_0_21_230 l_0_21_230)))
 (let ((?x142286 (* l_0_21_229 l_0_21_229)))
 (let ((?x142287 (- (- (* (- l_0_21_227) l_0_21_227) (* l_0_21_228 l_0_21_228)) ?x142286)))
 (let ((?x142296 (+ (+ (+ (+ (+ (- (- ?x142287 ?x142288) ?x142290) ?x138935) ?x138938) ?x138941) ?x138944) ?x138947)))
 (= ?x142296 0.0)))))))))))))))))
(assert
 (let ((?x139197 (* l_0_21_288 l_0_21_288)))
 (let ((?x139195 (* l_0_21_287 l_0_21_287)))
 (let ((?x139193 (* l_0_21_286 l_0_21_286)))
 (let ((?x139191 (* l_0_21_285 l_0_21_285)))
 (let ((?x139189 (* l_0_21_284 l_0_21_284)))
 (let ((?x139187 (* l_0_21_283 l_0_21_283)))
 (let ((?x139185 (* l_0_21_282 l_0_21_282)))
 (let ((?x139183 (* l_0_21_281 l_0_21_281)))
 (let ((?x142311 (- (* (* (- 2.0) l_0_21_227) l_0_21_245) (* (* 2.0 l_0_21_228) l_0_21_246))))
 (let ((?x142315 (- (- ?x142311 (* (* 2.0 l_0_21_229) l_0_21_247)) (* (* 2.0 l_0_21_230) l_0_21_248))))
 (let ((?x142320 (+ (+ (+ (- ?x142315 (* (* 2.0 l_0_21_231) l_0_21_249)) ?x139183) ?x139185) ?x139187)))
 (= (+ (+ (+ (+ (+ ?x142320 ?x139189) ?x139191) ?x139193) ?x139195) ?x139197) 0.0)))))))))))))
(assert
 (let ((?x142350 (* l_0_21_252 l_0_21_252)))
 (let ((?x142348 (* l_0_21_251 l_0_21_251)))
 (let ((?x142346 (* l_0_21_250 l_0_21_250)))
 (let ((?x142344 (* l_0_21_249 l_0_21_249)))
 (let ((?x142342 (* l_0_21_248 l_0_21_248)))
 (let ((?x120891 (* l_0_21_247 l_0_21_247)))
 (let ((?x142341 (- (- (* (- l_0_21_245) l_0_21_245) (* l_0_21_246 l_0_21_246)) ?x120891)))
 (= (- (- (- (- (- ?x142341 ?x142342) ?x142344) ?x142346) ?x142348) ?x142350) 0.0)))))))))
(assert
 (let ((?x142372 (- (- (* (- l_0_21_254) l_0_21_254) (* l_0_21_255 l_0_21_255)) (* (* 2.0 l_0_21_326) l_0_21_346))))
 (let ((?x142376 (- (- ?x142372 (* (* 2.0 l_0_21_327) l_0_21_347)) (* (* 2.0 l_0_21_362) l_0_21_382))))
 (let ((?x142380 (- (- ?x142376 (* (* 2.0 l_0_21_363) l_0_21_383)) (* (* 2.0 l_0_21_398) l_0_21_418))))
 (let ((?x142384 (- (- ?x142380 (* (* 2.0 l_0_21_399) l_0_21_419)) (* (* 2.0 l_0_21_434) l_0_21_454))))
 (let ((?x142388 (- (- ?x142384 (* (* 2.0 l_0_21_435) l_0_21_455)) (* (* 2.0 l_0_21_470) l_0_21_490))))
 (let ((?x142392 (- (- ?x142388 (* (* 2.0 l_0_21_471) l_0_21_491)) (* (* 2.0 l_0_21_506) l_0_21_526))))
 (= (- ?x142392 (* (* 2.0 l_0_21_507) l_0_21_527)) 0.0))))))))
(assert
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x98396 (* ?x134092 l_0_21_257)))
 (let ((?x120913 (- (- (* (* (- 2.0) l_0_21_254) l_0_21_256) ?x98396) (* (* 2.0 l_0_21_328) l_0_21_346))))
 (let ((?x142413 (- (- ?x120913 (* (* 2.0 l_0_21_329) l_0_21_347)) (* (* 2.0 l_0_21_330) l_0_21_348))))
 (let ((?x142417 (- (- ?x142413 (* (* 2.0 l_0_21_364) l_0_21_382)) (* (* 2.0 l_0_21_365) l_0_21_383))))
 (let ((?x142421 (- (- ?x142417 (* (* 2.0 l_0_21_366) l_0_21_384)) (* (* 2.0 l_0_21_400) l_0_21_418))))
 (let ((?x142425 (- (- ?x142421 (* (* 2.0 l_0_21_401) l_0_21_419)) (* (* 2.0 l_0_21_402) l_0_21_420))))
 (let ((?x142429 (- (- ?x142425 (* (* 2.0 l_0_21_436) l_0_21_454)) (* (* 2.0 l_0_21_437) l_0_21_455))))
 (let ((?x142433 (- (- ?x142429 (* (* 2.0 l_0_21_438) l_0_21_456)) (* (* 2.0 l_0_21_472) l_0_21_490))))
 (let ((?x142437 (- (- ?x142433 (* (* 2.0 l_0_21_473) l_0_21_491)) (* (* 2.0 l_0_21_474) l_0_21_492))))
 (let ((?x142441 (- (- ?x142437 (* (* 2.0 l_0_21_508) l_0_21_526)) (* (* 2.0 l_0_21_509) l_0_21_527))))
 (= (- ?x142441 (* (* 2.0 l_0_21_510) l_0_21_528)) 0.0)))))))))))))
(assert
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x142499 (* ?x134092 l_0_21_275)))
 (let ((?x142497 (* ?x134092 l_0_21_264)))
 (let ((?x142496 (+ (* (* (- 2.0) l_0_21_254) l_0_21_263) (* (* 2.0 l_0_21_254) l_0_21_274))))
 (let ((?x142504 (- (- (+ (- ?x142496 ?x142497) ?x142499) (* (* 2.0 l_0_21_335) l_0_21_346)) (* (* 2.0 l_0_21_336) l_0_21_347))))
 (let ((?x142508 (- (- ?x142504 (* (* 2.0 l_0_21_337) l_0_21_348)) (* (* 2.0 l_0_21_338) l_0_21_349))))
 (let ((?x142512 (- (- ?x142508 (* (* 2.0 l_0_21_339) l_0_21_350)) (* (* 2.0 l_0_21_371) l_0_21_382))))
 (let ((?x142516 (- (- ?x142512 (* (* 2.0 l_0_21_372) l_0_21_383)) (* (* 2.0 l_0_21_373) l_0_21_384))))
 (let ((?x142520 (- (- ?x142516 (* (* 2.0 l_0_21_374) l_0_21_385)) (* (* 2.0 l_0_21_375) l_0_21_386))))
 (let ((?x142524 (- (- ?x142520 (* (* 2.0 l_0_21_407) l_0_21_418)) (* (* 2.0 l_0_21_408) l_0_21_419))))
 (let ((?x142528 (- (- ?x142524 (* (* 2.0 l_0_21_409) l_0_21_420)) (* (* 2.0 l_0_21_410) l_0_21_421))))
 (let ((?x142532 (- (- ?x142528 (* (* 2.0 l_0_21_411) l_0_21_422)) (* (* 2.0 l_0_21_443) l_0_21_454))))
 (let ((?x142536 (- (- ?x142532 (* (* 2.0 l_0_21_444) l_0_21_455)) (* (* 2.0 l_0_21_445) l_0_21_456))))
 (let ((?x142540 (- (- ?x142536 (* (* 2.0 l_0_21_446) l_0_21_457)) (* (* 2.0 l_0_21_447) l_0_21_458))))
 (let ((?x142544 (- (- ?x142540 (* (* 2.0 l_0_21_479) l_0_21_490)) (* (* 2.0 l_0_21_480) l_0_21_491))))
 (let ((?x142548 (- (- ?x142544 (* (* 2.0 l_0_21_481) l_0_21_492)) (* (* 2.0 l_0_21_482) l_0_21_493))))
 (let ((?x142552 (- (- ?x142548 (* (* 2.0 l_0_21_483) l_0_21_494)) (* (* 2.0 l_0_21_515) l_0_21_526))))
 (let ((?x142556 (- (- ?x142552 (* (* 2.0 l_0_21_516) l_0_21_527)) (* (* 2.0 l_0_21_517) l_0_21_528))))
 (let ((?x142560 (- (- ?x142556 (* (* 2.0 l_0_21_518) l_0_21_529)) (* (* 2.0 l_0_21_519) l_0_21_530))))
 (= ?x142560 0.0)))))))))))))))))))))
(assert
 (let ((?x142745 (* l_0_21_532 l_0_21_532)))
 (let ((?x142743 (* l_0_21_531 l_0_21_531)))
 (let ((?x142741 (* l_0_21_530 l_0_21_530)))
 (let ((?x142739 (* l_0_21_529 l_0_21_529)))
 (let ((?x142737 (* l_0_21_528 l_0_21_528)))
 (let ((?x142735 (* l_0_21_527 l_0_21_527)))
 (let ((?x142733 (* l_0_21_526 l_0_21_526)))
 (let ((?x142731 (* l_0_21_496 l_0_21_496)))
 (let ((?x142729 (* l_0_21_495 l_0_21_495)))
 (let ((?x142727 (* l_0_21_494 l_0_21_494)))
 (let ((?x142725 (* l_0_21_493 l_0_21_493)))
 (let ((?x142723 (* l_0_21_492 l_0_21_492)))
 (let ((?x142721 (* l_0_21_491 l_0_21_491)))
 (let ((?x142719 (* l_0_21_490 l_0_21_490)))
 (let ((?x142717 (* l_0_21_460 l_0_21_460)))
 (let ((?x142715 (* l_0_21_459 l_0_21_459)))
 (let ((?x142713 (* l_0_21_458 l_0_21_458)))
 (let ((?x142711 (* l_0_21_457 l_0_21_457)))
 (let ((?x142709 (* l_0_21_456 l_0_21_456)))
 (let ((?x142707 (* l_0_21_455 l_0_21_455)))
 (let ((?x142705 (* l_0_21_454 l_0_21_454)))
 (let ((?x142703 (* l_0_21_424 l_0_21_424)))
 (let ((?x142701 (* l_0_21_423 l_0_21_423)))
 (let ((?x142699 (* l_0_21_422 l_0_21_422)))
 (let ((?x142697 (* l_0_21_421 l_0_21_421)))
 (let ((?x142695 (* l_0_21_420 l_0_21_420)))
 (let ((?x142693 (* l_0_21_419 l_0_21_419)))
 (let ((?x142691 (* l_0_21_418 l_0_21_418)))
 (let ((?x142689 (* l_0_21_388 l_0_21_388)))
 (let ((?x142687 (* l_0_21_387 l_0_21_387)))
 (let ((?x142685 (* l_0_21_386 l_0_21_386)))
 (let ((?x142683 (* l_0_21_385 l_0_21_385)))
 (let ((?x142681 (* l_0_21_384 l_0_21_384)))
 (let ((?x142679 (* l_0_21_383 l_0_21_383)))
 (let ((?x142677 (* l_0_21_382 l_0_21_382)))
 (let ((?x142675 (* l_0_21_352 l_0_21_352)))
 (let ((?x142673 (* l_0_21_351 l_0_21_351)))
 (let ((?x142671 (* l_0_21_350 l_0_21_350)))
 (let ((?x142669 (* l_0_21_349 l_0_21_349)))
 (let ((?x142667 (* l_0_21_348 l_0_21_348)))
 (let ((?x142665 (* l_0_21_347 l_0_21_347)))
 (let ((?x142663 (* l_0_21_346 l_0_21_346)))
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x142499 (* ?x134092 l_0_21_275)))
 (let ((?x142668 (- (- (- (- (* (* (- 2.0) l_0_21_254) l_0_21_274) ?x142499) ?x142663) ?x142665) ?x142667)))
 (let ((?x142682 (- (- (- (- (- (- (- ?x142668 ?x142669) ?x142671) ?x142673) ?x142675) ?x142677) ?x142679) ?x142681)))
 (let ((?x142696 (- (- (- (- (- (- (- ?x142682 ?x142683) ?x142685) ?x142687) ?x142689) ?x142691) ?x142693) ?x142695)))
 (let ((?x142710 (- (- (- (- (- (- (- ?x142696 ?x142697) ?x142699) ?x142701) ?x142703) ?x142705) ?x142707) ?x142709)))
 (let ((?x142724 (- (- (- (- (- (- (- ?x142710 ?x142711) ?x142713) ?x142715) ?x142717) ?x142719) ?x142721) ?x142723)))
 (let ((?x142738 (- (- (- (- (- (- (- ?x142724 ?x142725) ?x142727) ?x142729) ?x142731) ?x142733) ?x142735) ?x142737)))
 (= (- (- (- (- ?x142738 ?x142739) ?x142741) ?x142743) ?x142745) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x142806 (* l_0_21_258 l_0_21_258)))
 (let ((?x142807 (- (- (* (- l_0_21_256) l_0_21_256) (* l_0_21_257 l_0_21_257)) ?x142806)))
 (= ?x142807 0.0))))
(assert
 (let ((?x134884 (* 2.0 l_0_21_258)))
 (let ((?x142817 (* ?x134884 l_0_21_276)))
 (let ((?x142815 (* ?x134884 l_0_21_265)))
 (let ((?x134881 (* 2.0 l_0_21_257)))
 (let ((?x142813 (* ?x134881 l_0_21_275)))
 (let ((?x142811 (* ?x134881 l_0_21_264)))
 (let ((?x142810 (+ (* (* (- 2.0) l_0_21_256) l_0_21_263) (* (* 2.0 l_0_21_256) l_0_21_274))))
 (= (+ (- (+ (- ?x142810 ?x142811) ?x142813) ?x142815) ?x142817) 0.0)))))))))
(assert
 (let ((?x134884 (* 2.0 l_0_21_258)))
 (let ((?x142817 (* ?x134884 l_0_21_276)))
 (let ((?x134881 (* 2.0 l_0_21_257)))
 (let ((?x142813 (* ?x134881 l_0_21_275)))
 (= (- (- (* (* (- 2.0) l_0_21_256) l_0_21_274) ?x142813) ?x142817) 0.0))))))
(assert
 (let ((?x142868 (* l_0_21_267 l_0_21_267)))
 (let ((?x138946 (* 2.0 l_0_21_267)))
 (let ((?x142866 (* ?x138946 l_0_21_278)))
 (let ((?x142864 (* l_0_21_266 l_0_21_266)))
 (let ((?x138943 (* 2.0 l_0_21_266)))
 (let ((?x142862 (* ?x138943 l_0_21_277)))
 (let ((?x142860 (* l_0_21_265 l_0_21_265)))
 (let ((?x138940 (* 2.0 l_0_21_265)))
 (let ((?x142858 (* ?x138940 l_0_21_276)))
 (let ((?x142856 (* l_0_21_264 l_0_21_264)))
 (let ((?x138937 (* 2.0 l_0_21_264)))
 (let ((?x142854 (* ?x138937 l_0_21_275)))
 (let ((?x142852 (* l_0_21_263 l_0_21_263)))
 (let ((?x142859 (+ (- (+ (- (* (* 2.0 l_0_21_263) l_0_21_274) ?x142852) ?x142854) ?x142856) ?x142858)))
 (= (- (+ (- (+ (- ?x142859 ?x142860) ?x142862) ?x142864) ?x142866) ?x142868) 0.0))))))))))))))))
(assert
 (let ((?x142916 (* l_0_21_280 l_0_21_280)))
 (let ((?x142914 (* l_0_21_279 l_0_21_279)))
 (let ((?x142912 (* l_0_21_278 l_0_21_278)))
 (let ((?x142910 (* l_0_21_277 l_0_21_277)))
 (let ((?x142908 (* l_0_21_276 l_0_21_276)))
 (let ((?x142906 (* l_0_21_275 l_0_21_275)))
 (let ((?x142904 (* l_0_21_274 l_0_21_274)))
 (let ((?x138946 (* 2.0 l_0_21_267)))
 (let ((?x142866 (* ?x138946 l_0_21_278)))
 (let ((?x138943 (* 2.0 l_0_21_266)))
 (let ((?x142862 (* ?x138943 l_0_21_277)))
 (let ((?x138940 (* 2.0 l_0_21_265)))
 (let ((?x142858 (* ?x138940 l_0_21_276)))
 (let ((?x138937 (* 2.0 l_0_21_264)))
 (let ((?x142854 (* ?x138937 l_0_21_275)))
 (let ((?x142903 (- (- (- (- (* (* (- 2.0) l_0_21_263) l_0_21_274) ?x142854) ?x142858) ?x142862) ?x142866)))
 (let ((?x142917 (+ (+ (+ (+ (+ (+ (+ ?x142903 ?x142904) ?x142906) ?x142908) ?x142910) ?x142912) ?x142914) ?x142916)))
 (= ?x142917 0.0)))))))))))))))))))
(assert
 (let ((?x142916 (* l_0_21_280 l_0_21_280)))
 (let ((?x142914 (* l_0_21_279 l_0_21_279)))
 (let ((?x142912 (* l_0_21_278 l_0_21_278)))
 (let ((?x142910 (* l_0_21_277 l_0_21_277)))
 (let ((?x142908 (* l_0_21_276 l_0_21_276)))
 (let ((?x98708 (- (- (* (- l_0_21_274) l_0_21_274) (* l_0_21_275 l_0_21_275)) ?x142908)))
 (= (- (- (- (- ?x98708 ?x142910) ?x142912) ?x142914) ?x142916) 0.0))))))))
(assert
 (let ((?x121380 (- (+ (* l_0_21_254 l_0_21_254) (* l_0_21_255 l_0_21_255)) (* (* 2.0 l_0_21_326) l_0_21_335))))
 (let ((?x98758 (- (- ?x121380 (* (* 2.0 l_0_21_327) l_0_21_336)) (* (* 2.0 l_0_21_362) l_0_21_371))))
 (let ((?x94545 (- (- ?x98758 (* (* 2.0 l_0_21_363) l_0_21_372)) (* (* 2.0 l_0_21_398) l_0_21_407))))
 (let ((?x142930 (- (- ?x94545 (* (* 2.0 l_0_21_399) l_0_21_408)) (* (* 2.0 l_0_21_434) l_0_21_443))))
 (let ((?x142934 (- (- ?x142930 (* (* 2.0 l_0_21_435) l_0_21_444)) (* (* 2.0 l_0_21_470) l_0_21_479))))
 (let ((?x142938 (- (- ?x142934 (* (* 2.0 l_0_21_471) l_0_21_480)) (* (* 2.0 l_0_21_506) l_0_21_515))))
 (= (- ?x142938 (* (* 2.0 l_0_21_507) l_0_21_516)) 0.0))))))))
(assert
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x98396 (* ?x134092 l_0_21_257)))
 (let ((?x142962 (- (+ (* (* 2.0 l_0_21_254) l_0_21_256) ?x98396) (* (* 2.0 l_0_21_328) l_0_21_335))))
 (let ((?x142966 (- (- ?x142962 (* (* 2.0 l_0_21_329) l_0_21_336)) (* (* 2.0 l_0_21_330) l_0_21_337))))
 (let ((?x142970 (- (- ?x142966 (* (* 2.0 l_0_21_364) l_0_21_371)) (* (* 2.0 l_0_21_365) l_0_21_372))))
 (let ((?x142974 (- (- ?x142970 (* (* 2.0 l_0_21_366) l_0_21_373)) (* (* 2.0 l_0_21_400) l_0_21_407))))
 (let ((?x142978 (- (- ?x142974 (* (* 2.0 l_0_21_401) l_0_21_408)) (* (* 2.0 l_0_21_402) l_0_21_409))))
 (let ((?x142982 (- (- ?x142978 (* (* 2.0 l_0_21_436) l_0_21_443)) (* (* 2.0 l_0_21_437) l_0_21_444))))
 (let ((?x142986 (- (- ?x142982 (* (* 2.0 l_0_21_438) l_0_21_445)) (* (* 2.0 l_0_21_472) l_0_21_479))))
 (let ((?x142990 (- (- ?x142986 (* (* 2.0 l_0_21_473) l_0_21_480)) (* (* 2.0 l_0_21_474) l_0_21_481))))
 (let ((?x142994 (- (- ?x142990 (* (* 2.0 l_0_21_508) l_0_21_515)) (* (* 2.0 l_0_21_509) l_0_21_516))))
 (= (- ?x142994 (* (* 2.0 l_0_21_510) l_0_21_517)) 0.0)))))))))))))
(assert
 (let ((?x143078 (* l_0_21_519 l_0_21_519)))
 (let ((?x143076 (* l_0_21_518 l_0_21_518)))
 (let ((?x143074 (* l_0_21_517 l_0_21_517)))
 (let ((?x143072 (* l_0_21_516 l_0_21_516)))
 (let ((?x143070 (* l_0_21_515 l_0_21_515)))
 (let ((?x143068 (* l_0_21_483 l_0_21_483)))
 (let ((?x143066 (* l_0_21_482 l_0_21_482)))
 (let ((?x143064 (* l_0_21_481 l_0_21_481)))
 (let ((?x143062 (* l_0_21_480 l_0_21_480)))
 (let ((?x143060 (* l_0_21_479 l_0_21_479)))
 (let ((?x143058 (* l_0_21_447 l_0_21_447)))
 (let ((?x143056 (* l_0_21_446 l_0_21_446)))
 (let ((?x143054 (* l_0_21_445 l_0_21_445)))
 (let ((?x143052 (* l_0_21_444 l_0_21_444)))
 (let ((?x143050 (* l_0_21_443 l_0_21_443)))
 (let ((?x143048 (* l_0_21_411 l_0_21_411)))
 (let ((?x143046 (* l_0_21_410 l_0_21_410)))
 (let ((?x143044 (* l_0_21_409 l_0_21_409)))
 (let ((?x143042 (* l_0_21_408 l_0_21_408)))
 (let ((?x143040 (* l_0_21_407 l_0_21_407)))
 (let ((?x143038 (* l_0_21_375 l_0_21_375)))
 (let ((?x143036 (* l_0_21_374 l_0_21_374)))
 (let ((?x143034 (* l_0_21_373 l_0_21_373)))
 (let ((?x143032 (* l_0_21_372 l_0_21_372)))
 (let ((?x143030 (* l_0_21_371 l_0_21_371)))
 (let ((?x143028 (* l_0_21_339 l_0_21_339)))
 (let ((?x143026 (* l_0_21_338 l_0_21_338)))
 (let ((?x143024 (* l_0_21_337 l_0_21_337)))
 (let ((?x121571 (* l_0_21_336 l_0_21_336)))
 (let ((?x98954 (* l_0_21_335 l_0_21_335)))
 (let ((?x134092 (* 2.0 l_0_21_255)))
 (let ((?x142497 (* ?x134092 l_0_21_264)))
 (let ((?x143025 (- (- (- (+ (* (* 2.0 l_0_21_254) l_0_21_263) ?x142497) ?x98954) ?x121571) ?x143024)))
 (let ((?x143039 (- (- (- (- (- (- (- ?x143025 ?x143026) ?x143028) ?x143030) ?x143032) ?x143034) ?x143036) ?x143038)))
 (let ((?x143053 (- (- (- (- (- (- (- ?x143039 ?x143040) ?x143042) ?x143044) ?x143046) ?x143048) ?x143050) ?x143052)))
 (let ((?x143067 (- (- (- (- (- (- (- ?x143053 ?x143054) ?x143056) ?x143058) ?x143060) ?x143062) ?x143064) ?x143066)))
 (= (- (- (- (- (- (- ?x143067 ?x143068) ?x143070) ?x143072) ?x143074) ?x143076) ?x143078) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x142806 (* l_0_21_258 l_0_21_258)))
 (let ((?x118436 (+ (+ (* l_0_21_256 l_0_21_256) (* l_0_21_257 l_0_21_257)) ?x142806)))
 (= ?x118436 0.0))))
(assert
 (let ((?x134884 (* 2.0 l_0_21_258)))
 (let ((?x142815 (* ?x134884 l_0_21_265)))
 (let ((?x134881 (* 2.0 l_0_21_257)))
 (let ((?x142811 (* ?x134881 l_0_21_264)))
 (= (+ (+ (* (* 2.0 l_0_21_256) l_0_21_263) ?x142811) ?x142815) 0.0))))))
(assert
 (let ((?x142868 (* l_0_21_267 l_0_21_267)))
 (let ((?x142864 (* l_0_21_266 l_0_21_266)))
 (let ((?x142860 (* l_0_21_265 l_0_21_265)))
 (let ((?x118448 (+ (+ (* l_0_21_263 l_0_21_263) (* l_0_21_264 l_0_21_264)) ?x142860)))
 (= (+ (+ ?x118448 ?x142864) ?x142868) 0.0))))))
(assert
 (let ((?x143127 (* l_0_21_507 l_0_21_507)))
 (let ((?x143125 (* l_0_21_506 l_0_21_506)))
 (let ((?x143123 (* l_0_21_471 l_0_21_471)))
 (let ((?x143121 (* l_0_21_470 l_0_21_470)))
 (let ((?x143119 (* l_0_21_435 l_0_21_435)))
 (let ((?x143117 (* l_0_21_434 l_0_21_434)))
 (let ((?x143115 (* l_0_21_399 l_0_21_399)))
 (let ((?x143113 (* l_0_21_398 l_0_21_398)))
 (let ((?x143111 (* l_0_21_363 l_0_21_363)))
 (let ((?x78654 (* l_0_21_362 l_0_21_362)))
 (let ((?x78541 (- (- (* (- l_0_21_326) l_0_21_326) (* l_0_21_327 l_0_21_327)) ?x78654)))
 (let ((?x143124 (- (- (- (- (- (- (- ?x78541 ?x143111) ?x143113) ?x143115) ?x143117) ?x143119) ?x143121) ?x143123)))
 (= (- (- ?x143124 ?x143125) ?x143127) 0.0))))))))))))))
(assert
 (let ((?x143144 (- (* (* (- 2.0) l_0_21_326) l_0_21_328) (* (* 2.0 l_0_21_327) l_0_21_329))))
 (let ((?x143148 (- (- ?x143144 (* (* 2.0 l_0_21_362) l_0_21_364)) (* (* 2.0 l_0_21_363) l_0_21_365))))
 (let ((?x143152 (- (- ?x143148 (* (* 2.0 l_0_21_398) l_0_21_400)) (* (* 2.0 l_0_21_399) l_0_21_401))))
 (let ((?x143156 (- (- ?x143152 (* (* 2.0 l_0_21_434) l_0_21_436)) (* (* 2.0 l_0_21_435) l_0_21_437))))
 (let ((?x143160 (- (- ?x143156 (* (* 2.0 l_0_21_470) l_0_21_472)) (* (* 2.0 l_0_21_471) l_0_21_473))))
 (let ((?x143164 (- (- ?x143160 (* (* 2.0 l_0_21_506) l_0_21_508)) (* (* 2.0 l_0_21_507) l_0_21_509))))
 (= ?x143164 0.0))))))))
(assert
 (let ((?x143231 (* l_0_21_510 l_0_21_510)))
 (let ((?x143229 (* l_0_21_509 l_0_21_509)))
 (let ((?x143227 (* l_0_21_508 l_0_21_508)))
 (let ((?x143225 (* l_0_21_474 l_0_21_474)))
 (let ((?x143223 (* l_0_21_473 l_0_21_473)))
 (let ((?x143221 (* l_0_21_472 l_0_21_472)))
 (let ((?x143219 (* l_0_21_438 l_0_21_438)))
 (let ((?x143217 (* l_0_21_437 l_0_21_437)))
 (let ((?x143215 (* l_0_21_436 l_0_21_436)))
 (let ((?x143213 (* l_0_21_402 l_0_21_402)))
 (let ((?x143211 (* l_0_21_401 l_0_21_401)))
 (let ((?x143209 (* l_0_21_400 l_0_21_400)))
 (let ((?x143207 (* l_0_21_366 l_0_21_366)))
 (let ((?x143205 (* l_0_21_365 l_0_21_365)))
 (let ((?x143203 (* l_0_21_364 l_0_21_364)))
 (let ((?x143201 (* l_0_21_330 l_0_21_330)))
 (let ((?x143202 (- (- (* (- l_0_21_328) l_0_21_328) (* l_0_21_329 l_0_21_329)) ?x143201)))
 (let ((?x143216 (- (- (- (- (- (- (- ?x143202 ?x143203) ?x143205) ?x143207) ?x143209) ?x143211) ?x143213) ?x143215)))
 (let ((?x143230 (- (- (- (- (- (- (- ?x143216 ?x143217) ?x143219) ?x143221) ?x143223) ?x143225) ?x143227) ?x143229)))
 (= (- ?x143230 ?x143231) 0.0)))))))))))))))))))))
(assert
 (>= l_0_21_1 0.0))
(assert
 (>= l_0_21_3 0.0))
(assert
 (>= l_0_21_6 0.0))
(assert
 (>= l_0_21_10 0.0))
(assert
 (>= l_0_21_15 0.0))
(assert
 (>= l_0_21_21 0.0))
(assert
 (>= l_0_21_28 0.0))
(assert
 (>= l_0_21_36 0.0))
(assert
 (>= l_0_21_37 0.0))
(assert
 (>= l_0_21_39 0.0))
(assert
 (>= l_0_21_42 0.0))
(assert
 (>= l_0_21_46 0.0))
(assert
 (>= l_0_21_51 0.0))
(assert
 (>= l_0_21_57 0.0))
(assert
 (>= l_0_21_64 0.0))
(assert
 (>= l_0_21_72 0.0))
(assert
 (>= l_0_21_73 0.0))
(assert
 (>= l_0_21_75 0.0))
(assert
 (>= l_0_21_78 0.0))
(assert
 (>= l_0_21_82 0.0))
(assert
 (>= l_0_21_87 0.0))
(assert
 (>= l_0_21_93 0.0))
(assert
 (>= l_0_21_100 0.0))
(assert
 (>= l_0_21_108 0.0))
(assert
 (>= l_0_21_109 0.0))
(assert
 (>= l_0_21_111 0.0))
(assert
 (>= l_0_21_114 0.0))
(assert
 (>= l_0_21_118 0.0))
(assert
 (>= l_0_21_123 0.0))
(assert
 (>= l_0_21_129 0.0))
(assert
 (>= l_0_21_136 0.0))
(assert
 (>= l_0_21_144 0.0))
(assert
 (>= l_0_21_145 0.0))
(assert
 (>= l_0_21_147 0.0))
(assert
 (>= l_0_21_150 0.0))
(assert
 (>= l_0_21_154 0.0))
(assert
 (>= l_0_21_159 0.0))
(assert
 (>= l_0_21_165 0.0))
(assert
 (>= l_0_21_172 0.0))
(assert
 (>= l_0_21_180 0.0))
(assert
 (>= l_0_21_181 0.0))
(assert
 (>= l_0_21_183 0.0))
(assert
 (>= l_0_21_186 0.0))
(assert
 (>= l_0_21_190 0.0))
(assert
 (>= l_0_21_195 0.0))
(assert
 (>= l_0_21_201 0.0))
(assert
 (>= l_0_21_208 0.0))
(assert
 (>= l_0_21_216 0.0))
(assert
 (>= l_0_21_217 0.0))
(assert
 (>= l_0_21_219 0.0))
(assert
 (>= l_0_21_222 0.0))
(assert
 (>= l_0_21_226 0.0))
(assert
 (>= l_0_21_231 0.0))
(assert
 (>= l_0_21_237 0.0))
(assert
 (>= l_0_21_244 0.0))
(assert
 (>= l_0_21_252 0.0))
(assert
 (>= l_0_21_253 0.0))
(assert
 (>= l_0_21_255 0.0))
(assert
 (>= l_0_21_258 0.0))
(assert
 (>= l_0_21_262 0.0))
(assert
 (>= l_0_21_267 0.0))
(assert
 (>= l_0_21_273 0.0))
(assert
 (>= l_0_21_280 0.0))
(assert
 (>= l_0_21_288 0.0))
(assert
 (>= l_0_21_289 0.0))
(assert
 (>= l_0_21_291 0.0))
(assert
 (>= l_0_21_294 0.0))
(assert
 (>= l_0_21_298 0.0))
(assert
 (>= l_0_21_303 0.0))
(assert
 (>= l_0_21_309 0.0))
(assert
 (>= l_0_21_316 0.0))
(assert
 (>= l_0_21_324 0.0))
(assert
 (>= l_0_21_325 0.0))
(assert
 (>= l_0_21_327 0.0))
(assert
 (>= l_0_21_330 0.0))
(assert
 (>= l_0_21_334 0.0))
(assert
 (>= l_0_21_339 0.0))
(assert
 (>= l_0_21_345 0.0))
(assert
 (>= l_0_21_352 0.0))
(assert
 (>= l_0_21_360 0.0))
(assert
 (>= l_0_21_361 0.0))
(assert
 (>= l_0_21_363 0.0))
(assert
 (>= l_0_21_366 0.0))
(assert
 (>= l_0_21_370 0.0))
(assert
 (>= l_0_21_375 0.0))
(assert
 (>= l_0_21_381 0.0))
(assert
 (>= l_0_21_388 0.0))
(assert
 (>= l_0_21_396 0.0))
(assert
 (>= l_0_21_397 0.0))
(assert
 (>= l_0_21_399 0.0))
(assert
 (>= l_0_21_402 0.0))
(assert
 (>= l_0_21_406 0.0))
(assert
 (>= l_0_21_411 0.0))
(assert
 (>= l_0_21_417 0.0))
(assert
 (>= l_0_21_424 0.0))
(assert
 (>= l_0_21_432 0.0))
(assert
 (>= l_0_21_433 0.0))
(assert
 (>= l_0_21_435 0.0))
(assert
 (>= l_0_21_438 0.0))
(assert
 (>= l_0_21_442 0.0))
(assert
 (>= l_0_21_447 0.0))
(assert
 (>= l_0_21_453 0.0))
(assert
 (>= l_0_21_460 0.0))
(assert
 (>= l_0_21_468 0.0))
(assert
 (>= l_0_21_469 0.0))
(assert
 (>= l_0_21_471 0.0))
(assert
 (>= l_0_21_474 0.0))
(assert
 (>= l_0_21_478 0.0))
(assert
 (>= l_0_21_483 0.0))
(assert
 (>= l_0_21_489 0.0))
(assert
 (>= l_0_21_496 0.0))
(assert
 (>= l_0_21_504 0.0))
(assert
 (>= l_0_21_505 0.0))
(assert
 (>= l_0_21_507 0.0))
(assert
 (>= l_0_21_510 0.0))
(assert
 (>= l_0_21_514 0.0))
(assert
 (>= l_0_21_519 0.0))
(assert
 (>= l_0_21_525 0.0))
(assert
 (>= l_0_21_532 0.0))
(assert
 (>= l_0_21_540 0.0))
(assert
 (let ((?x143374 (- (- (* (- l_0_22_218) l_0_22_218) (* l_0_22_219 l_0_22_219)) (* (* 2.0 l_0_22_326) l_0_22_353))))
 (let ((?x143380 (- (- ?x143374 (* (* 2.0 l_0_22_327) l_0_22_354)) (* (* 2.0 l_0_22_362) l_0_22_389))))
 (let ((?x143386 (- (- ?x143380 (* (* 2.0 l_0_22_363) l_0_22_390)) (* (* 2.0 l_0_22_398) l_0_22_425))))
 (let ((?x143392 (- (- ?x143386 (* (* 2.0 l_0_22_399) l_0_22_426)) (* (* 2.0 l_0_22_434) l_0_22_461))))
 (let ((?x143398 (- (- ?x143392 (* (* 2.0 l_0_22_435) l_0_22_462)) (* (* 2.0 l_0_22_470) l_0_22_497))))
 (let ((?x143404 (- (- ?x143398 (* (* 2.0 l_0_22_471) l_0_22_498)) (* (* 2.0 l_0_22_506) l_0_22_533))))
 (let ((?x143410 (- (- ?x143404 (* (* 2.0 l_0_22_507) l_0_22_534)) (* (* 2.0 l_0_22_542) l_0_22_569))))
 (= (+ (- ?x143410 (* (* 2.0 l_0_22_543) l_0_22_570)) 1.0) 0.0)))))))))
(assert
 (let ((?x143471 (* l_0_22_543 l_0_22_543)))
 (let ((?x143469 (* l_0_22_542 l_0_22_542)))
 (let ((?x143467 (* l_0_22_507 l_0_22_507)))
 (let ((?x143465 (* l_0_22_506 l_0_22_506)))
 (let ((?x143463 (* l_0_22_471 l_0_22_471)))
 (let ((?x143461 (* l_0_22_470 l_0_22_470)))
 (let ((?x143459 (* l_0_22_435 l_0_22_435)))
 (let ((?x143457 (* l_0_22_434 l_0_22_434)))
 (let ((?x143455 (* l_0_22_399 l_0_22_399)))
 (let ((?x143453 (* l_0_22_398 l_0_22_398)))
 (let ((?x99487 (* l_0_22_363 l_0_22_363)))
 (let ((?x121955 (* l_0_22_362 l_0_22_362)))
 (let ((?x27773 (- (- (* (- l_0_22_326) l_0_22_326) (* l_0_22_327 l_0_22_327)) ?x121955)))
 (let ((?x143464 (- (- (- (- (- (- (- ?x27773 ?x99487) ?x143453) ?x143455) ?x143457) ?x143459) ?x143461) ?x143463)))
 (= (- (- (- (- ?x143464 ?x143465) ?x143467) ?x143469) ?x143471) 0.0))))))))))))))))
(assert
 (let ((?x143492 (* l_0_22_37 l_0_22_37)))
 (let ((?x143490 (* l_0_22_181 l_0_22_181)))
 (let ((?x143491 (+ (- (* (- l_0_22_1) l_0_22_1) (* l_0_22_145 l_0_22_145)) ?x143490)))
 (= (+ ?x143491 ?x143492) 0.0)))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143544 (* ?x143543 l_0_22_38)))
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x143541 (* ?x143540 l_0_22_319)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x143538 (* ?x143537 l_0_22_318)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x143535 (* ?x143534 l_0_22_317)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143529 (* ?x143528 l_0_22_182)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143526 (* ?x143525 l_0_22_146)))
 (let ((?x143509 (+ (* (* (- 2.0) l_0_22_1) l_0_22_2) (* (* 2.0 l_0_22_101) l_0_22_76))))
 (let ((?x143515 (+ (+ ?x143509 (* (* 2.0 l_0_22_102) l_0_22_77)) (* (* 2.0 l_0_22_103) l_0_22_78))))
 (let ((?x143521 (- (- ?x143515 (* (* 2.0 l_0_22_112) l_0_22_137)) (* (* 2.0 l_0_22_113) l_0_22_138))))
 (let ((?x143533 (- (+ (- (- ?x143521 (* (* 2.0 l_0_22_114) l_0_22_139)) ?x143526) ?x143529) (* (* 2.0 l_0_22_217) l_0_22_220))))
 (= (+ (+ (+ (+ ?x143533 ?x143535) ?x143538) ?x143541) ?x143544) 0.0))))))))))))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143588 (* ?x143543 l_0_22_40)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143575 (* ?x143528 l_0_22_184)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143571 (* ?x143525 l_0_22_148)))
 (= (+ (+ (- (* (* (- 2.0) l_0_22_1) l_0_22_4) ?x143571) ?x143575) ?x143588) 0.0))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143602 (* ?x143543 l_0_22_43)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143600 (* ?x143528 l_0_22_187)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x99673 (* ?x143525 l_0_22_151)))
 (= (+ (+ (- (* (* (- 2.0) l_0_22_1) l_0_22_7) ?x99673) ?x143600) ?x143602) 0.0))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143625 (* ?x143543 l_0_22_47)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143623 (* ?x143528 l_0_22_191)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143616 (* ?x143525 l_0_22_155)))
 (= (+ (+ (- (* (* (- 2.0) l_0_22_1) l_0_22_11) ?x143616) ?x143623) ?x143625) 0.0))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143643 (* ?x143543 l_0_22_52)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143641 (* ?x143528 l_0_22_196)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143639 (* ?x143525 l_0_22_160)))
 (= (+ (+ (- (* (* (- 2.0) l_0_22_1) l_0_22_16) ?x143639) ?x143641) ?x143643) 0.0))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143670 (* ?x143543 l_0_22_58)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143668 (* ?x143528 l_0_22_202)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143666 (* ?x143525 l_0_22_166)))
 (let ((?x143571 (* ?x143525 l_0_22_148)))
 (let ((?x143664 (+ (* (* (- 2.0) l_0_22_1) l_0_22_22) (* (* 1.0 l_0_22_109) l_0_22_112))))
 (let ((?x143674 (- (+ (+ (- (- ?x143664 ?x143571) ?x143666) ?x143668) ?x143670) (* (* 1.0 l_0_22_73) l_0_22_76))))
 (= ?x143674 0.0)))))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143700 (* ?x143543 l_0_22_65)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143698 (* ?x143528 l_0_22_209)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143696 (* ?x143525 l_0_22_173)))
 (= (+ (+ (- (* (* (- 2.0) l_0_22_1) l_0_22_29) ?x143696) ?x143698) ?x143700) 0.0))))))))
(assert
 (let ((?x143751 (* l_0_22_39 l_0_22_39)))
 (let ((?x143749 (* l_0_22_38 l_0_22_38)))
 (let ((?x143729 (* l_0_22_3 l_0_22_3)))
 (let ((?x143721 (* l_0_22_2 l_0_22_2)))
 (let ((?x143719 (* l_0_22_183 l_0_22_183)))
 (let ((?x143717 (* l_0_22_182 l_0_22_182)))
 (let ((?x143718 (+ (- (* (- l_0_22_146) l_0_22_146) (* l_0_22_147 l_0_22_147)) ?x143717)))
 (let ((?x143728 (- (- (- (+ ?x143718 ?x143719) ?x143721) (* (* 2.0 l_0_22_218) l_0_22_220)) (* (* 2.0 l_0_22_219) l_0_22_221))))
 (let ((?x143736 (- (- (- ?x143728 ?x143729) (* (* 2.0 l_0_22_328) l_0_22_353)) (* (* 2.0 l_0_22_329) l_0_22_354))))
 (let ((?x143742 (- (- ?x143736 (* (* 2.0 l_0_22_330) l_0_22_355)) (* (* 2.0 l_0_22_364) l_0_22_389))))
 (let ((?x143748 (- (- ?x143742 (* (* 2.0 l_0_22_365) l_0_22_390)) (* (* 2.0 l_0_22_366) l_0_22_391))))
 (let ((?x143758 (- (- (+ (+ ?x143748 ?x143749) ?x143751) (* (* 2.0 l_0_22_400) l_0_22_425)) (* (* 2.0 l_0_22_401) l_0_22_426))))
 (let ((?x143764 (- (- ?x143758 (* (* 2.0 l_0_22_402) l_0_22_427)) (* (* 2.0 l_0_22_436) l_0_22_461))))
 (let ((?x143770 (- (- ?x143764 (* (* 2.0 l_0_22_437) l_0_22_462)) (* (* 2.0 l_0_22_438) l_0_22_463))))
 (let ((?x143776 (- (- ?x143770 (* (* 2.0 l_0_22_472) l_0_22_497)) (* (* 2.0 l_0_22_473) l_0_22_498))))
 (let ((?x143782 (- (- ?x143776 (* (* 2.0 l_0_22_474) l_0_22_499)) (* (* 2.0 l_0_22_508) l_0_22_533))))
 (let ((?x143788 (- (- ?x143782 (* (* 2.0 l_0_22_509) l_0_22_534)) (* (* 2.0 l_0_22_510) l_0_22_535))))
 (let ((?x143794 (- (- ?x143788 (* (* 2.0 l_0_22_544) l_0_22_569)) (* (* 2.0 l_0_22_545) l_0_22_570))))
 (= (- ?x143794 (* (* 2.0 l_0_22_546) l_0_22_571)) 0.0))))))))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x143879 (* ?x143878 l_0_22_41)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x143876 (* ?x143875 l_0_22_40)))
 (let ((?x143872 (* 2.0 l_0_22_3)))
 (let ((?x143873 (* ?x143872 l_0_22_5)))
 (let ((?x143870 (* l_0_22_222 l_0_22_222)))
 (let ((?x143868 (* l_0_22_221 l_0_22_221)))
 (let ((?x143866 (* l_0_22_220 l_0_22_220)))
 (let ((?x143863 (* 2.0 l_0_22_2)))
 (let ((?x143864 (* ?x143863 l_0_22_4)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x143861 (* ?x143860 l_0_22_185)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x143858 (* ?x143857 l_0_22_184)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x143855 (* ?x143854 l_0_22_149)))
 (let ((?x143865 (- (+ (+ (- (* (* (- 2.0) l_0_22_146) l_0_22_148) ?x143855) ?x143858) ?x143861) ?x143864)))
 (= (+ (+ (- (- (- (- ?x143865 ?x143866) ?x143868) ?x143870) ?x143873) ?x143876) ?x143879) 0.0))))))))))))))))))))
(assert
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x143951 (* ?x143950 l_0_22_67)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x143948 (* ?x143947 l_0_22_66)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x143945 (* ?x143944 l_0_22_65)))
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x143942 (* ?x143878 l_0_22_44)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x143940 (* ?x143875 l_0_22_43)))
 (let ((?x143937 (* 2.0 l_0_22_31)))
 (let ((?x143938 (* ?x143937 l_0_22_6)))
 (let ((?x143934 (* 2.0 l_0_22_30)))
 (let ((?x143935 (* ?x143934 l_0_22_5)))
 (let ((?x143872 (* 2.0 l_0_22_3)))
 (let ((?x143932 (* ?x143872 l_0_22_8)))
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x143541 (* ?x143540 l_0_22_319)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x143538 (* ?x143537 l_0_22_318)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x143535 (* ?x143534 l_0_22_317)))
 (let ((?x143926 (* 2.0 l_0_22_29)))
 (let ((?x143927 (* ?x143926 l_0_22_4)))
 (let ((?x143863 (* 2.0 l_0_22_2)))
 (let ((?x143915 (* ?x143863 l_0_22_7)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x143913 (* ?x143860 l_0_22_188)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x143911 (* ?x143857 l_0_22_187)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x143909 (* ?x143854 l_0_22_152)))
 (let ((?x143916 (- (+ (+ (- (* (* (- 2.0) l_0_22_146) l_0_22_151) ?x143909) ?x143911) ?x143913) ?x143915)))
 (let ((?x143922 (- (- ?x143916 (* (* 2.0 l_0_22_220) l_0_22_223)) (* (* 2.0 l_0_22_221) l_0_22_224))))
 (let ((?x143930 (+ (+ (+ (- ?x143922 (* (* 2.0 l_0_22_222) l_0_22_225)) ?x143927) ?x143535) ?x143538)))
 (let ((?x143946 (- (+ (+ (+ (+ (- (+ ?x143930 ?x143541) ?x143932) ?x143935) ?x143938) ?x143940) ?x143942) ?x143945)))
 (= (- (- ?x143946 ?x143948) ?x143951) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x144030 (* ?x143878 l_0_22_48)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x144028 (* ?x143875 l_0_22_47)))
 (let ((?x144025 (* 2.0 l_0_22_258)))
 (let ((?x144026 (* ?x144025 l_0_22_283)))
 (let ((?x144022 (* 2.0 l_0_22_257)))
 (let ((?x144023 (* ?x144022 l_0_22_282)))
 (let ((?x144019 (* 2.0 l_0_22_256)))
 (let ((?x144020 (* ?x144019 l_0_22_281)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x144011 (* ?x143860 l_0_22_192)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x144009 (* ?x143857 l_0_22_191)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144007 (* ?x143854 l_0_22_156)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x144005 (* ?x144004 l_0_22_155)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x144002 (* ?x144001 l_0_22_3)))
 (let ((?x144010 (+ (- (- (- (* (* (- 2.0) l_0_22_11) l_0_22_2) ?x144002) ?x144005) ?x144007) ?x144009)))
 (let ((?x144016 (- (- (+ ?x144010 ?x144011) (* (* 2.0 l_0_22_220) l_0_22_227)) (* (* 2.0 l_0_22_221) l_0_22_228))))
 (let ((?x144027 (+ (+ (+ (- ?x144016 (* (* 2.0 l_0_22_222) l_0_22_229)) ?x144020) ?x144023) ?x144026)))
 (= (+ (+ ?x144027 ?x144028) ?x144030) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x144110 (* ?x143878 l_0_22_53)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x144108 (* ?x143875 l_0_22_52)))
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x143541 (* ?x143540 l_0_22_319)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x143538 (* ?x143537 l_0_22_318)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x143535 (* ?x143534 l_0_22_317)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144097 (* ?x144096 l_0_22_211)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144094 (* ?x144093 l_0_22_210)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144091 (* ?x144090 l_0_22_209)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x144088 (* ?x143860 l_0_22_197)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x144086 (* ?x143857 l_0_22_196)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x144084 (* ?x144083 l_0_22_3)))
 (let ((?x144080 (* 2.0 l_0_22_16)))
 (let ((?x144081 (* ?x144080 l_0_22_2)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144078 (* ?x144077 l_0_22_175)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144075 (* ?x144074 l_0_22_174)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144072 (* ?x144071 l_0_22_173)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144069 (* ?x143854 l_0_22_161)))
 (let ((?x144079 (+ (+ (+ (- (* (* (- 2.0) l_0_22_146) l_0_22_160) ?x144069) ?x144072) ?x144075) ?x144078)))
 (let ((?x144098 (- (- (- (+ (+ (- (- ?x144079 ?x144081) ?x144084) ?x144086) ?x144088) ?x144091) ?x144094) ?x144097)))
 (let ((?x144102 (- (- ?x144098 (* (* 2.0 l_0_22_220) l_0_22_232)) (* (* 2.0 l_0_22_221) l_0_22_233))))
 (let ((?x144107 (- (- (- (- ?x144102 (* (* 2.0 l_0_22_222) l_0_22_234)) ?x143535) ?x143538) ?x143541)))
 (= (+ (+ ?x144107 ?x144108) ?x144110) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x144197 (* ?x143878 l_0_22_59)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x144195 (* ?x143875 l_0_22_58)))
 (let ((?x144025 (* 2.0 l_0_22_258)))
 (let ((?x144026 (* ?x144025 l_0_22_283)))
 (let ((?x144022 (* 2.0 l_0_22_257)))
 (let ((?x144023 (* ?x144022 l_0_22_282)))
 (let ((?x144019 (* 2.0 l_0_22_256)))
 (let ((?x144020 (* ?x144019 l_0_22_281)))
 (let ((?x144189 (* 2.0 l_0_22_23)))
 (let ((?x144190 (* ?x144189 l_0_22_3)))
 (let ((?x143863 (* 2.0 l_0_22_2)))
 (let ((?x144181 (* ?x143863 l_0_22_22)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x144179 (* ?x143860 l_0_22_203)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x144177 (* ?x143857 l_0_22_202)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144175 (* ?x143854 l_0_22_167)))
 (let ((?x143855 (* ?x143854 l_0_22_149)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x144172 (* ?x144004 l_0_22_166)))
 (let ((?x144170 (* ?x144004 l_0_22_148)))
 (let ((?x144169 (+ (* (* 1.0 l_0_22_110) l_0_22_112) (* (* 1.0 l_0_22_111) l_0_22_113))))
 (let ((?x144182 (- (+ (+ (- (- (- (- ?x144169 ?x144170) ?x144172) ?x143855) ?x144175) ?x144177) ?x144179) ?x144181)))
 (let ((?x144186 (- (- ?x144182 (* (* 2.0 l_0_22_220) l_0_22_238)) (* (* 2.0 l_0_22_221) l_0_22_239))))
 (let ((?x144193 (- (- (- (- ?x144186 (* (* 2.0 l_0_22_222) l_0_22_240)) ?x144190) ?x144020) ?x144023)))
 (let ((?x144201 (- (+ (+ (- ?x144193 ?x144026) ?x144195) ?x144197) (* (* 1.0 l_0_22_74) l_0_22_76))))
 (= (- ?x144201 (* (* 1.0 l_0_22_75) l_0_22_77)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x144269 (* ?x143878 l_0_22_66)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x144267 (* ?x143875 l_0_22_65)))
 (let ((?x143872 (* 2.0 l_0_22_3)))
 (let ((?x144265 (* ?x143872 l_0_22_30)))
 (let ((?x143863 (* 2.0 l_0_22_2)))
 (let ((?x144257 (* ?x143863 l_0_22_29)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x144255 (* ?x143860 l_0_22_210)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x144253 (* ?x143857 l_0_22_209)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144251 (* ?x143854 l_0_22_174)))
 (let ((?x144258 (- (+ (+ (- (* (* (- 2.0) l_0_22_146) l_0_22_173) ?x144251) ?x144253) ?x144255) ?x144257)))
 (let ((?x144262 (- (- ?x144258 (* (* 2.0 l_0_22_220) l_0_22_245)) (* (* 2.0 l_0_22_221) l_0_22_246))))
 (let ((?x144270 (+ (+ (- (- ?x144262 (* (* 2.0 l_0_22_222) l_0_22_247)) ?x144265) ?x144267) ?x144269)))
 (= ?x144270 0.0)))))))))))))))))))
(assert
 (let ((?x144327 (* l_0_22_6 l_0_22_6)))
 (let ((?x144325 (* l_0_22_5 l_0_22_5)))
 (let ((?x144323 (* l_0_22_42 l_0_22_42)))
 (let ((?x144321 (* l_0_22_41 l_0_22_41)))
 (let ((?x144319 (* l_0_22_40 l_0_22_40)))
 (let ((?x144317 (* l_0_22_4 l_0_22_4)))
 (let ((?x144315 (* l_0_22_186 l_0_22_186)))
 (let ((?x144313 (* l_0_22_185 l_0_22_185)))
 (let ((?x144311 (* l_0_22_184 l_0_22_184)))
 (let ((?x144309 (* l_0_22_150 l_0_22_150)))
 (let ((?x144310 (- (- (* (- l_0_22_148) l_0_22_148) (* l_0_22_149 l_0_22_149)) ?x144309)))
 (let ((?x144324 (+ (+ (+ (- (+ (+ (+ ?x144310 ?x144311) ?x144313) ?x144315) ?x144317) ?x144319) ?x144321) ?x144323)))
 (= (- (- ?x144324 ?x144325) ?x144327) 0.0))))))))))))))
(assert
 (let ((?x144378 (* (* 2.0 l_0_22_6) l_0_22_9)))
 (let ((?x144375 (* (* 2.0 l_0_22_5) l_0_22_8)))
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x144372 (* ?x143950 l_0_22_45)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x144370 (* ?x143947 l_0_22_44)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x144368 (* ?x143944 l_0_22_43)))
 (let ((?x144366 (* (* 2.0 l_0_22_4) l_0_22_7)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144363 (* ?x144096 l_0_22_189)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144361 (* ?x144093 l_0_22_188)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144359 (* ?x144090 l_0_22_187)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144357 (* ?x144077 l_0_22_153)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144355 (* ?x144074 l_0_22_152)))
 (let ((?x144362 (+ (+ (- (- (* (* (- 2.0) l_0_22_148) l_0_22_151) ?x144355) ?x144357) ?x144359) ?x144361)))
 (let ((?x144379 (- (- (+ (+ (+ (- (+ ?x144362 ?x144363) ?x144366) ?x144368) ?x144370) ?x144372) ?x144375) ?x144378)))
 (= ?x144379 0.0)))))))))))))))))))))))
(assert
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x144432 (* ?x143950 l_0_22_49)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x144430 (* ?x143947 l_0_22_48)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x144428 (* ?x143944 l_0_22_47)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144426 (* ?x144096 l_0_22_193)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144424 (* ?x144093 l_0_22_192)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144422 (* ?x144090 l_0_22_191)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144420 (* ?x144077 l_0_22_157)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144418 (* ?x144074 l_0_22_156)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144416 (* ?x144071 l_0_22_155)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x144414 (* ?x144413 l_0_22_6)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x144411 (* ?x144001 l_0_22_5)))
 (let ((?x144419 (- (- (- (- (* (* (- 2.0) l_0_22_11) l_0_22_4) ?x144411) ?x144414) ?x144416) ?x144418)))
 (let ((?x144433 (+ (+ (+ (+ (+ (+ (- ?x144419 ?x144420) ?x144422) ?x144424) ?x144426) ?x144428) ?x144430) ?x144432)))
 (= ?x144433 0.0))))))))))))))))))))))))))
(assert
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x144492 (* ?x143950 l_0_22_54)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x144490 (* ?x143947 l_0_22_53)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x144488 (* ?x143944 l_0_22_52)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144486 (* ?x144096 l_0_22_198)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144484 (* ?x144093 l_0_22_197)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144482 (* ?x144090 l_0_22_196)))
 (let ((?x144479 (* 2.0 l_0_22_18)))
 (let ((?x144480 (* ?x144479 l_0_22_6)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x144477 (* ?x144083 l_0_22_5)))
 (let ((?x144080 (* 2.0 l_0_22_16)))
 (let ((?x144466 (* ?x144080 l_0_22_4)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144462 (* ?x144077 l_0_22_162)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144458 (* ?x144074 l_0_22_161)))
 (let ((?x144478 (- (- (- (- (* (* (- 2.0) l_0_22_148) l_0_22_160) ?x144458) ?x144462) ?x144466) ?x144477)))
 (let ((?x144493 (+ (+ (+ (+ (+ (+ (- ?x144478 ?x144480) ?x144482) ?x144484) ?x144486) ?x144488) ?x144490) ?x144492)))
 (= ?x144493 0.0))))))))))))))))))))))))))
(assert
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x144565 (* ?x143950 l_0_22_60)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x144563 (* ?x143947 l_0_22_59)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x144561 (* ?x143944 l_0_22_58)))
 (let ((?x144558 (* 2.0 l_0_22_24)))
 (let ((?x144559 (* ?x144558 l_0_22_6)))
 (let ((?x144189 (* 2.0 l_0_22_23)))
 (let ((?x144556 (* ?x144189 l_0_22_5)))
 (let ((?x144553 (* 2.0 l_0_22_22)))
 (let ((?x144554 (* ?x144553 l_0_22_4)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144551 (* ?x144096 l_0_22_204)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144549 (* ?x144093 l_0_22_203)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144547 (* ?x144090 l_0_22_202)))
 (let ((?x144309 (* l_0_22_150 l_0_22_150)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144544 (* ?x144077 l_0_22_168)))
 (let ((?x144307 (* l_0_22_149 l_0_22_149)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144541 (* ?x144074 l_0_22_167)))
 (let ((?x78987 (* l_0_22_148 l_0_22_148)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144538 (* ?x144071 l_0_22_166)))
 (let ((?x144526 (* l_0_22_114 l_0_22_114)))
 (let ((?x144527 (* (/ 1.0 2.0) ?x144526)))
 (let ((?x144520 (* l_0_22_113 l_0_22_113)))
 (let ((?x144522 (* (/ 1.0 2.0) ?x144520)))
 (let ((?x122715 (* l_0_22_112 l_0_22_112)))
 (let ((?x144518 (* (/ 1.0 2.0) ?x122715)))
 (let ((?x144545 (- (- (- (- (- (+ (+ ?x144518 ?x144522) ?x144527) ?x144538) ?x78987) ?x144541) ?x144307) ?x144544)))
 (let ((?x144560 (- (- (- (+ (+ (+ (- ?x144545 ?x144309) ?x144547) ?x144549) ?x144551) ?x144554) ?x144556) ?x144559)))
 (let ((?x144569 (- (+ (+ (+ ?x144560 ?x144561) ?x144563) ?x144565) (* (* (/ 1.0 2.0) l_0_22_76) l_0_22_76))))
 (let ((?x144575 (- (- ?x144569 (* (* (/ 1.0 2.0) l_0_22_77) l_0_22_77)) (* (* (/ 1.0 2.0) l_0_22_78) l_0_22_78))))
 (= ?x144575 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x143951 (* ?x143950 l_0_22_67)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x143948 (* ?x143947 l_0_22_66)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x143945 (* ?x143944 l_0_22_65)))
 (let ((?x143937 (* 2.0 l_0_22_31)))
 (let ((?x143938 (* ?x143937 l_0_22_6)))
 (let ((?x143934 (* 2.0 l_0_22_30)))
 (let ((?x143935 (* ?x143934 l_0_22_5)))
 (let ((?x143926 (* 2.0 l_0_22_29)))
 (let ((?x143927 (* ?x143926 l_0_22_4)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144097 (* ?x144096 l_0_22_211)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144094 (* ?x144093 l_0_22_210)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144091 (* ?x144090 l_0_22_209)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144078 (* ?x144077 l_0_22_175)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144075 (* ?x144074 l_0_22_174)))
 (let ((?x144615 (+ (+ (- (- (* (* (- 2.0) l_0_22_148) l_0_22_173) ?x144075) ?x144078) ?x144091) ?x144094)))
 (let ((?x144622 (+ (+ (+ (- (- (- (+ ?x144615 ?x144097) ?x143927) ?x143935) ?x143938) ?x143945) ?x143948) ?x143951)))
 (= ?x144622 0.0))))))))))))))))))))))))))
(assert
 (let ((?x144651 (* l_0_22_9 l_0_22_9)))
 (let ((?x144649 (* l_0_22_8 l_0_22_8)))
 (let ((?x144647 (* l_0_22_7 l_0_22_7)))
 (let ((?x144645 (* l_0_22_46 l_0_22_46)))
 (let ((?x144643 (* l_0_22_45 l_0_22_45)))
 (let ((?x144641 (* l_0_22_44 l_0_22_44)))
 (let ((?x144639 (* l_0_22_43 l_0_22_43)))
 (let ((?x144637 (* l_0_22_190 l_0_22_190)))
 (let ((?x144635 (* l_0_22_189 l_0_22_189)))
 (let ((?x144633 (* l_0_22_188 l_0_22_188)))
 (let ((?x144631 (* l_0_22_187 l_0_22_187)))
 (let ((?x144629 (* l_0_22_154 l_0_22_154)))
 (let ((?x144627 (* l_0_22_153 l_0_22_153)))
 (let ((?x100242 (* l_0_22_152 l_0_22_152)))
 (let ((?x100238 (- (- (* (- l_0_22_10) l_0_22_10) (* l_0_22_151 l_0_22_151)) ?x100242)))
 (let ((?x144640 (+ (+ (+ (+ (+ (- (- ?x100238 ?x144627) ?x144629) ?x144631) ?x144633) ?x144635) ?x144637) ?x144639)))
 (= (- (- (- (+ (+ (+ ?x144640 ?x144641) ?x144643) ?x144645) ?x144647) ?x144649) ?x144651) 0.0))))))))))))))))))
(assert
 (let ((?x144722 (* 2.0 l_0_22_46)))
 (let ((?x144723 (* ?x144722 l_0_22_50)))
 (let ((?x144719 (* 2.0 l_0_22_45)))
 (let ((?x144720 (* ?x144719 l_0_22_49)))
 (let ((?x144716 (* 2.0 l_0_22_44)))
 (let ((?x144717 (* ?x144716 l_0_22_48)))
 (let ((?x144713 (* 2.0 l_0_22_43)))
 (let ((?x144714 (* ?x144713 l_0_22_47)))
 (let ((?x144710 (* 2.0 l_0_22_190)))
 (let ((?x144711 (* ?x144710 l_0_22_194)))
 (let ((?x144707 (* 2.0 l_0_22_189)))
 (let ((?x144708 (* ?x144707 l_0_22_193)))
 (let ((?x144704 (* 2.0 l_0_22_188)))
 (let ((?x144705 (* ?x144704 l_0_22_192)))
 (let ((?x144701 (* 2.0 l_0_22_187)))
 (let ((?x144702 (* ?x144701 l_0_22_191)))
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144699 (* ?x144698 l_0_22_158)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144696 (* ?x144695 l_0_22_157)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144693 (* ?x144692 l_0_22_156)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144690 (* ?x144689 l_0_22_155)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x144687 (* ?x144413 l_0_22_9)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x144685 (* ?x144001 l_0_22_8)))
 (let ((?x144682 (* 2.0 l_0_22_11)))
 (let ((?x144683 (* ?x144682 l_0_22_7)))
 (let ((?x144691 (- (- (- (- (* (* (- 2.0) l_0_22_10) l_0_22_14) ?x144683) ?x144685) ?x144687) ?x144690)))
 (let ((?x144712 (+ (+ (+ (+ (- (- (- ?x144691 ?x144693) ?x144696) ?x144699) ?x144702) ?x144705) ?x144708) ?x144711)))
 (= (+ (+ (+ (+ ?x144712 ?x144714) ?x144717) ?x144720) ?x144723) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x144722 (* 2.0 l_0_22_46)))
 (let ((?x144779 (* ?x144722 l_0_22_55)))
 (let ((?x144719 (* 2.0 l_0_22_45)))
 (let ((?x144777 (* ?x144719 l_0_22_54)))
 (let ((?x144716 (* 2.0 l_0_22_44)))
 (let ((?x144775 (* ?x144716 l_0_22_53)))
 (let ((?x144713 (* 2.0 l_0_22_43)))
 (let ((?x144773 (* ?x144713 l_0_22_52)))
 (let ((?x144710 (* 2.0 l_0_22_190)))
 (let ((?x144771 (* ?x144710 l_0_22_199)))
 (let ((?x144707 (* 2.0 l_0_22_189)))
 (let ((?x144769 (* ?x144707 l_0_22_198)))
 (let ((?x144704 (* 2.0 l_0_22_188)))
 (let ((?x144767 (* ?x144704 l_0_22_197)))
 (let ((?x144701 (* 2.0 l_0_22_187)))
 (let ((?x144765 (* ?x144701 l_0_22_196)))
 (let ((?x144479 (* 2.0 l_0_22_18)))
 (let ((?x144763 (* ?x144479 l_0_22_9)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x144761 (* ?x144083 l_0_22_8)))
 (let ((?x144080 (* 2.0 l_0_22_16)))
 (let ((?x144759 (* ?x144080 l_0_22_7)))
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144746 (* ?x144698 l_0_22_163)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144742 (* ?x144695 l_0_22_162)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144738 (* ?x144692 l_0_22_161)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144734 (* ?x144689 l_0_22_160)))
 (let ((?x144747 (- (- (- (- (* (* (- 2.0) l_0_22_10) l_0_22_19) ?x144734) ?x144738) ?x144742) ?x144746)))
 (let ((?x144772 (+ (+ (+ (+ (- (- (- ?x144747 ?x144759) ?x144761) ?x144763) ?x144765) ?x144767) ?x144769) ?x144771)))
 (= (+ (+ (+ (+ ?x144772 ?x144773) ?x144775) ?x144777) ?x144779) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x144722 (* 2.0 l_0_22_46)))
 (let ((?x144857 (* ?x144722 l_0_22_61)))
 (let ((?x144719 (* 2.0 l_0_22_45)))
 (let ((?x144855 (* ?x144719 l_0_22_60)))
 (let ((?x144716 (* 2.0 l_0_22_44)))
 (let ((?x144853 (* ?x144716 l_0_22_59)))
 (let ((?x144713 (* 2.0 l_0_22_43)))
 (let ((?x144851 (* ?x144713 l_0_22_58)))
 (let ((?x144558 (* 2.0 l_0_22_24)))
 (let ((?x144849 (* ?x144558 l_0_22_9)))
 (let ((?x144189 (* 2.0 l_0_22_23)))
 (let ((?x144847 (* ?x144189 l_0_22_8)))
 (let ((?x144553 (* 2.0 l_0_22_22)))
 (let ((?x144845 (* ?x144553 l_0_22_7)))
 (let ((?x144710 (* 2.0 l_0_22_190)))
 (let ((?x144843 (* ?x144710 l_0_22_205)))
 (let ((?x144707 (* 2.0 l_0_22_189)))
 (let ((?x144841 (* ?x144707 l_0_22_204)))
 (let ((?x144704 (* 2.0 l_0_22_188)))
 (let ((?x144839 (* ?x144704 l_0_22_203)))
 (let ((?x144701 (* 2.0 l_0_22_187)))
 (let ((?x144837 (* ?x144701 l_0_22_202)))
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144835 (* ?x144698 l_0_22_169)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144833 (* ?x144695 l_0_22_168)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144831 (* ?x144692 l_0_22_167)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144829 (* ?x144689 l_0_22_166)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144357 (* ?x144077 l_0_22_153)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144355 (* ?x144074 l_0_22_152)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144825 (* ?x144071 l_0_22_151)))
 (let ((?x122924 (+ (* (* (- 2.0) l_0_22_10) l_0_22_25) (* (* 1.0 l_0_22_112) l_0_22_115))))
 (let ((?x144824 (+ (+ ?x122924 (* (* 1.0 l_0_22_113) l_0_22_116)) (* (* 1.0 l_0_22_114) l_0_22_117))))
 (let ((?x144836 (- (- (- (- (- (- (- ?x144824 ?x144825) ?x144355) ?x144357) ?x144829) ?x144831) ?x144833) ?x144835)))
 (let ((?x144850 (- (- (- (+ (+ (+ (+ ?x144836 ?x144837) ?x144839) ?x144841) ?x144843) ?x144845) ?x144847) ?x144849)))
 (let ((?x144861 (- (+ (+ (+ (+ ?x144850 ?x144851) ?x144853) ?x144855) ?x144857) (* (* 1.0 l_0_22_76) l_0_22_79))))
 (let ((?x144867 (- (- ?x144861 (* (* 1.0 l_0_22_77) l_0_22_80)) (* (* 1.0 l_0_22_78) l_0_22_81))))
 (= ?x144867 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x144722 (* 2.0 l_0_22_46)))
 (let ((?x144977 (* ?x144722 l_0_22_68)))
 (let ((?x144719 (* 2.0 l_0_22_45)))
 (let ((?x144975 (* ?x144719 l_0_22_67)))
 (let ((?x144716 (* 2.0 l_0_22_44)))
 (let ((?x144973 (* ?x144716 l_0_22_66)))
 (let ((?x144713 (* 2.0 l_0_22_43)))
 (let ((?x144971 (* ?x144713 l_0_22_65)))
 (let ((?x143937 (* 2.0 l_0_22_31)))
 (let ((?x144969 (* ?x143937 l_0_22_9)))
 (let ((?x143934 (* 2.0 l_0_22_30)))
 (let ((?x144967 (* ?x143934 l_0_22_8)))
 (let ((?x143926 (* 2.0 l_0_22_29)))
 (let ((?x144965 (* ?x143926 l_0_22_7)))
 (let ((?x144710 (* 2.0 l_0_22_190)))
 (let ((?x144963 (* ?x144710 l_0_22_212)))
 (let ((?x144707 (* 2.0 l_0_22_189)))
 (let ((?x144961 (* ?x144707 l_0_22_211)))
 (let ((?x144704 (* 2.0 l_0_22_188)))
 (let ((?x144959 (* ?x144704 l_0_22_210)))
 (let ((?x144701 (* 2.0 l_0_22_187)))
 (let ((?x144957 (* ?x144701 l_0_22_209)))
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144955 (* ?x144698 l_0_22_176)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144953 (* ?x144695 l_0_22_175)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144951 (* ?x144692 l_0_22_174)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144949 (* ?x144689 l_0_22_173)))
 (let ((?x144956 (- (- (- (- (* (* (- 2.0) l_0_22_10) l_0_22_32) ?x144949) ?x144951) ?x144953) ?x144955)))
 (let ((?x144970 (- (- (- (+ (+ (+ (+ ?x144956 ?x144957) ?x144959) ?x144961) ?x144963) ?x144965) ?x144967) ?x144969)))
 (= (+ (+ (+ (+ ?x144970 ?x144971) ?x144973) ?x144975) ?x144977) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145033 (* l_0_22_51 l_0_22_51)))
 (let ((?x145031 (* l_0_22_50 l_0_22_50)))
 (let ((?x145029 (* l_0_22_49 l_0_22_49)))
 (let ((?x145027 (* l_0_22_48 l_0_22_48)))
 (let ((?x145025 (* l_0_22_47 l_0_22_47)))
 (let ((?x145023 (* l_0_22_195 l_0_22_195)))
 (let ((?x145021 (* l_0_22_194 l_0_22_194)))
 (let ((?x145019 (* l_0_22_193 l_0_22_193)))
 (let ((?x145017 (* l_0_22_192 l_0_22_192)))
 (let ((?x145015 (* l_0_22_191 l_0_22_191)))
 (let ((?x145013 (* l_0_22_159 l_0_22_159)))
 (let ((?x145011 (* l_0_22_158 l_0_22_158)))
 (let ((?x145009 (* l_0_22_157 l_0_22_157)))
 (let ((?x145007 (* l_0_22_156 l_0_22_156)))
 (let ((?x145005 (* l_0_22_155 l_0_22_155)))
 (let ((?x145003 (* l_0_22_15 l_0_22_15)))
 (let ((?x145001 (* l_0_22_14 l_0_22_14)))
 (let ((?x144999 (* l_0_22_13 l_0_22_13)))
 (let ((?x145000 (- (- (* (- l_0_22_11) l_0_22_11) (* l_0_22_12 l_0_22_12)) ?x144999)))
 (let ((?x145014 (- (- (- (- (- (- (- ?x145000 ?x145001) ?x145003) ?x145005) ?x145007) ?x145009) ?x145011) ?x145013)))
 (let ((?x145028 (+ (+ (+ (+ (+ (+ (+ ?x145014 ?x145015) ?x145017) ?x145019) ?x145021) ?x145023) ?x145025) ?x145027)))
 (= (+ (+ (+ ?x145028 ?x145029) ?x145031) ?x145033) 0.0)))))))))))))))))))))))
(assert
 (let ((?x145113 (* 2.0 l_0_22_51)))
 (let ((?x145114 (* ?x145113 l_0_22_56)))
 (let ((?x145110 (* 2.0 l_0_22_50)))
 (let ((?x145111 (* ?x145110 l_0_22_55)))
 (let ((?x145107 (* 2.0 l_0_22_49)))
 (let ((?x145108 (* ?x145107 l_0_22_54)))
 (let ((?x145104 (* 2.0 l_0_22_48)))
 (let ((?x145105 (* ?x145104 l_0_22_53)))
 (let ((?x145101 (* 2.0 l_0_22_47)))
 (let ((?x145102 (* ?x145101 l_0_22_52)))
 (let ((?x145098 (* 2.0 l_0_22_195)))
 (let ((?x145099 (* ?x145098 l_0_22_200)))
 (let ((?x145095 (* 2.0 l_0_22_194)))
 (let ((?x145096 (* ?x145095 l_0_22_199)))
 (let ((?x145092 (* 2.0 l_0_22_193)))
 (let ((?x145093 (* ?x145092 l_0_22_198)))
 (let ((?x145089 (* 2.0 l_0_22_192)))
 (let ((?x145090 (* ?x145089 l_0_22_197)))
 (let ((?x145086 (* 2.0 l_0_22_191)))
 (let ((?x145087 (* ?x145086 l_0_22_196)))
 (let ((?x145083 (* 2.0 l_0_22_159)))
 (let ((?x145084 (* ?x145083 l_0_22_164)))
 (let ((?x145080 (* 2.0 l_0_22_158)))
 (let ((?x145081 (* ?x145080 l_0_22_163)))
 (let ((?x145077 (* 2.0 l_0_22_157)))
 (let ((?x145078 (* ?x145077 l_0_22_162)))
 (let ((?x145074 (* 2.0 l_0_22_156)))
 (let ((?x145075 (* ?x145074 l_0_22_161)))
 (let ((?x145071 (* 2.0 l_0_22_155)))
 (let ((?x145072 (* ?x145071 l_0_22_160)))
 (let ((?x145068 (* 2.0 l_0_22_15)))
 (let ((?x145069 (* ?x145068 l_0_22_20)))
 (let ((?x145065 (* 2.0 l_0_22_14)))
 (let ((?x145066 (* ?x145065 l_0_22_19)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x145063 (* ?x144413 l_0_22_18)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x145061 (* ?x144001 l_0_22_17)))
 (let ((?x145070 (- (- (- (- (* (* (- 2.0) l_0_22_11) l_0_22_16) ?x145061) ?x145063) ?x145066) ?x145069)))
 (let ((?x145091 (+ (+ (- (- (- (- (- ?x145070 ?x145072) ?x145075) ?x145078) ?x145081) ?x145084) ?x145087) ?x145090)))
 (let ((?x145112 (+ (+ (+ (+ (+ (+ (+ ?x145091 ?x145093) ?x145096) ?x145099) ?x145102) ?x145105) ?x145108) ?x145111)))
 (= (+ ?x145112 ?x145114) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145113 (* 2.0 l_0_22_51)))
 (let ((?x145186 (* ?x145113 l_0_22_62)))
 (let ((?x145110 (* 2.0 l_0_22_50)))
 (let ((?x145184 (* ?x145110 l_0_22_61)))
 (let ((?x145107 (* 2.0 l_0_22_49)))
 (let ((?x145182 (* ?x145107 l_0_22_60)))
 (let ((?x145104 (* 2.0 l_0_22_48)))
 (let ((?x145180 (* ?x145104 l_0_22_59)))
 (let ((?x145101 (* 2.0 l_0_22_47)))
 (let ((?x145178 (* ?x145101 l_0_22_58)))
 (let ((?x145098 (* 2.0 l_0_22_195)))
 (let ((?x145176 (* ?x145098 l_0_22_206)))
 (let ((?x145095 (* 2.0 l_0_22_194)))
 (let ((?x145174 (* ?x145095 l_0_22_205)))
 (let ((?x145092 (* 2.0 l_0_22_193)))
 (let ((?x145172 (* ?x145092 l_0_22_204)))
 (let ((?x145089 (* 2.0 l_0_22_192)))
 (let ((?x145170 (* ?x145089 l_0_22_203)))
 (let ((?x145086 (* 2.0 l_0_22_191)))
 (let ((?x145168 (* ?x145086 l_0_22_202)))
 (let ((?x145083 (* 2.0 l_0_22_159)))
 (let ((?x145166 (* ?x145083 l_0_22_170)))
 (let ((?x145080 (* 2.0 l_0_22_158)))
 (let ((?x145164 (* ?x145080 l_0_22_169)))
 (let ((?x145077 (* 2.0 l_0_22_157)))
 (let ((?x145162 (* ?x145077 l_0_22_168)))
 (let ((?x145074 (* 2.0 l_0_22_156)))
 (let ((?x145160 (* ?x145074 l_0_22_167)))
 (let ((?x145071 (* 2.0 l_0_22_155)))
 (let ((?x145158 (* ?x145071 l_0_22_166)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144420 (* ?x144077 l_0_22_157)))
 (let ((?x145068 (* 2.0 l_0_22_15)))
 (let ((?x145155 (* ?x145068 l_0_22_26)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144418 (* ?x144074 l_0_22_156)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144416 (* ?x144071 l_0_22_155)))
 (let ((?x145065 (* 2.0 l_0_22_14)))
 (let ((?x145151 (* ?x145065 l_0_22_25)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x145149 (* ?x144413 l_0_22_24)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x145147 (* ?x144001 l_0_22_23)))
 (let ((?x145142 (+ (* (* (- 2.0) l_0_22_11) l_0_22_22) (* (* 1.0 l_0_22_112) l_0_22_119))))
 (let ((?x145146 (+ (+ ?x145142 (* (* 1.0 l_0_22_113) l_0_22_120)) (* (* 1.0 l_0_22_114) l_0_22_121))))
 (let ((?x145157 (- (- (- (- (- (- (- ?x145146 ?x145147) ?x145149) ?x145151) ?x144416) ?x144418) ?x145155) ?x144420)))
 (let ((?x145171 (+ (+ (- (- (- (- (- ?x145157 ?x145158) ?x145160) ?x145162) ?x145164) ?x145166) ?x145168) ?x145170)))
 (let ((?x145185 (+ (+ (+ (+ (+ (+ (+ ?x145171 ?x145172) ?x145174) ?x145176) ?x145178) ?x145180) ?x145182) ?x145184)))
 (let ((?x145191 (- (- (+ ?x145185 ?x145186) (* (* 1.0 l_0_22_76) l_0_22_83)) (* (* 1.0 l_0_22_77) l_0_22_84))))
 (= (- ?x145191 (* (* 1.0 l_0_22_78) l_0_22_85)) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145113 (* 2.0 l_0_22_51)))
 (let ((?x145293 (* ?x145113 l_0_22_69)))
 (let ((?x145110 (* 2.0 l_0_22_50)))
 (let ((?x145291 (* ?x145110 l_0_22_68)))
 (let ((?x145107 (* 2.0 l_0_22_49)))
 (let ((?x145289 (* ?x145107 l_0_22_67)))
 (let ((?x145104 (* 2.0 l_0_22_48)))
 (let ((?x145287 (* ?x145104 l_0_22_66)))
 (let ((?x145101 (* 2.0 l_0_22_47)))
 (let ((?x145285 (* ?x145101 l_0_22_65)))
 (let ((?x145098 (* 2.0 l_0_22_195)))
 (let ((?x145283 (* ?x145098 l_0_22_213)))
 (let ((?x145095 (* 2.0 l_0_22_194)))
 (let ((?x145281 (* ?x145095 l_0_22_212)))
 (let ((?x145092 (* 2.0 l_0_22_193)))
 (let ((?x145279 (* ?x145092 l_0_22_211)))
 (let ((?x145089 (* 2.0 l_0_22_192)))
 (let ((?x145277 (* ?x145089 l_0_22_210)))
 (let ((?x145086 (* 2.0 l_0_22_191)))
 (let ((?x145275 (* ?x145086 l_0_22_209)))
 (let ((?x145083 (* 2.0 l_0_22_159)))
 (let ((?x145273 (* ?x145083 l_0_22_177)))
 (let ((?x145080 (* 2.0 l_0_22_158)))
 (let ((?x145271 (* ?x145080 l_0_22_176)))
 (let ((?x145077 (* 2.0 l_0_22_157)))
 (let ((?x145269 (* ?x145077 l_0_22_175)))
 (let ((?x145074 (* 2.0 l_0_22_156)))
 (let ((?x145267 (* ?x145074 l_0_22_174)))
 (let ((?x145071 (* 2.0 l_0_22_155)))
 (let ((?x145265 (* ?x145071 l_0_22_173)))
 (let ((?x145068 (* 2.0 l_0_22_15)))
 (let ((?x145263 (* ?x145068 l_0_22_33)))
 (let ((?x145065 (* 2.0 l_0_22_14)))
 (let ((?x145261 (* ?x145065 l_0_22_32)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x145259 (* ?x144413 l_0_22_31)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x145257 (* ?x144001 l_0_22_30)))
 (let ((?x145264 (- (- (- (- (* (* (- 2.0) l_0_22_11) l_0_22_29) ?x145257) ?x145259) ?x145261) ?x145263)))
 (let ((?x145278 (+ (+ (- (- (- (- (- ?x145264 ?x145265) ?x145267) ?x145269) ?x145271) ?x145273) ?x145275) ?x145277)))
 (let ((?x145292 (+ (+ (+ (+ (+ (+ (+ ?x145278 ?x145279) ?x145281) ?x145283) ?x145285) ?x145287) ?x145289) ?x145291)))
 (= (+ ?x145292 ?x145293) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145400 (* l_0_22_57 l_0_22_57)))
 (let ((?x145398 (* l_0_22_56 l_0_22_56)))
 (let ((?x145396 (* l_0_22_55 l_0_22_55)))
 (let ((?x145394 (* l_0_22_54 l_0_22_54)))
 (let ((?x145392 (* l_0_22_53 l_0_22_53)))
 (let ((?x145390 (* l_0_22_52 l_0_22_52)))
 (let ((?x145388 (* l_0_22_21 l_0_22_21)))
 (let ((?x145386 (* l_0_22_201 l_0_22_201)))
 (let ((?x145384 (* l_0_22_200 l_0_22_200)))
 (let ((?x145382 (* l_0_22_20 l_0_22_20)))
 (let ((?x145380 (* l_0_22_199 l_0_22_199)))
 (let ((?x145378 (* l_0_22_198 l_0_22_198)))
 (let ((?x145376 (* l_0_22_197 l_0_22_197)))
 (let ((?x145374 (* l_0_22_196 l_0_22_196)))
 (let ((?x145372 (* l_0_22_19 l_0_22_19)))
 (let ((?x145370 (* l_0_22_18 l_0_22_18)))
 (let ((?x145368 (* l_0_22_17 l_0_22_17)))
 (let ((?x145366 (* l_0_22_165 l_0_22_165)))
 (let ((?x145351 (* l_0_22_164 l_0_22_164)))
 (let ((?x145348 (* l_0_22_163 l_0_22_163)))
 (let ((?x145344 (* l_0_22_162 l_0_22_162)))
 (let ((?x145340 (* l_0_22_161 l_0_22_161)))
 (let ((?x145342 (- (- (* (- l_0_22_16) l_0_22_16) (* l_0_22_160 l_0_22_160)) ?x145340)))
 (let ((?x145373 (- (- (- (- (- (- (- ?x145342 ?x145344) ?x145348) ?x145351) ?x145366) ?x145368) ?x145370) ?x145372)))
 (let ((?x145387 (+ (+ (- (+ (+ (+ (+ ?x145373 ?x145374) ?x145376) ?x145378) ?x145380) ?x145382) ?x145384) ?x145386)))
 (let ((?x145401 (+ (+ (+ (+ (+ (+ (- ?x145387 ?x145388) ?x145390) ?x145392) ?x145394) ?x145396) ?x145398) ?x145400)))
 (= ?x145401 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x145524 (* 2.0 l_0_22_57)))
 (let ((?x145525 (* ?x145524 l_0_22_63)))
 (let ((?x145521 (* 2.0 l_0_22_56)))
 (let ((?x145522 (* ?x145521 l_0_22_62)))
 (let ((?x145518 (* 2.0 l_0_22_55)))
 (let ((?x145519 (* ?x145518 l_0_22_61)))
 (let ((?x145515 (* 2.0 l_0_22_54)))
 (let ((?x145516 (* ?x145515 l_0_22_60)))
 (let ((?x145512 (* 2.0 l_0_22_53)))
 (let ((?x145513 (* ?x145512 l_0_22_59)))
 (let ((?x145509 (* 2.0 l_0_22_52)))
 (let ((?x145510 (* ?x145509 l_0_22_58)))
 (let ((?x145506 (* 2.0 l_0_22_21)))
 (let ((?x145507 (* ?x145506 l_0_22_27)))
 (let ((?x145503 (* 2.0 l_0_22_201)))
 (let ((?x145504 (* ?x145503 l_0_22_207)))
 (let ((?x145500 (* 2.0 l_0_22_200)))
 (let ((?x145501 (* ?x145500 l_0_22_206)))
 (let ((?x145497 (* 2.0 l_0_22_20)))
 (let ((?x145498 (* ?x145497 l_0_22_26)))
 (let ((?x145494 (* 2.0 l_0_22_199)))
 (let ((?x145495 (* ?x145494 l_0_22_205)))
 (let ((?x145491 (* 2.0 l_0_22_198)))
 (let ((?x145492 (* ?x145491 l_0_22_204)))
 (let ((?x145488 (* 2.0 l_0_22_197)))
 (let ((?x145489 (* ?x145488 l_0_22_203)))
 (let ((?x145485 (* 2.0 l_0_22_196)))
 (let ((?x145486 (* ?x145485 l_0_22_202)))
 (let ((?x145482 (* 2.0 l_0_22_19)))
 (let ((?x145483 (* ?x145482 l_0_22_25)))
 (let ((?x144479 (* 2.0 l_0_22_18)))
 (let ((?x145480 (* ?x144479 l_0_22_24)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x145478 (* ?x144083 l_0_22_23)))
 (let ((?x145475 (* 2.0 l_0_22_165)))
 (let ((?x145476 (* ?x145475 l_0_22_171)))
 (let ((?x145472 (* 2.0 l_0_22_164)))
 (let ((?x145473 (* ?x145472 l_0_22_170)))
 (let ((?x145469 (* 2.0 l_0_22_163)))
 (let ((?x145470 (* ?x145469 l_0_22_169)))
 (let ((?x145466 (* 2.0 l_0_22_162)))
 (let ((?x145467 (* ?x145466 l_0_22_168)))
 (let ((?x145463 (* 2.0 l_0_22_161)))
 (let ((?x145464 (* ?x145463 l_0_22_167)))
 (let ((?x145460 (* 2.0 l_0_22_160)))
 (let ((?x145461 (* ?x145460 l_0_22_166)))
 (let ((?x144080 (* 2.0 l_0_22_16)))
 (let ((?x145458 (* ?x144080 l_0_22_22)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144462 (* ?x144077 l_0_22_162)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144458 (* ?x144074 l_0_22_161)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x145454 (* ?x144071 l_0_22_160)))
 (let ((?x145451 (+ (* (* 1.0 l_0_22_112) l_0_22_124) (* (* 1.0 l_0_22_113) l_0_22_125))))
 (let ((?x145457 (- (- (- (+ ?x145451 (* (* 1.0 l_0_22_114) l_0_22_126)) ?x145454) ?x144458) ?x144462)))
 (let ((?x145477 (- (- (- (- (- (- (- ?x145457 ?x145458) ?x145461) ?x145464) ?x145467) ?x145470) ?x145473) ?x145476)))
 (let ((?x145496 (+ (+ (+ (+ (- (- (- ?x145477 ?x145478) ?x145480) ?x145483) ?x145486) ?x145489) ?x145492) ?x145495)))
 (let ((?x145517 (+ (+ (+ (- (+ (+ (- ?x145496 ?x145498) ?x145501) ?x145504) ?x145507) ?x145510) ?x145513) ?x145516)))
 (let ((?x145528 (- (+ (+ (+ ?x145517 ?x145519) ?x145522) ?x145525) (* (* 1.0 l_0_22_76) l_0_22_88))))
 (let ((?x145532 (- (- ?x145528 (* (* 1.0 l_0_22_77) l_0_22_89)) (* (* 1.0 l_0_22_78) l_0_22_90))))
 (= ?x145532 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145524 (* 2.0 l_0_22_57)))
 (let ((?x145658 (* ?x145524 l_0_22_70)))
 (let ((?x145521 (* 2.0 l_0_22_56)))
 (let ((?x145656 (* ?x145521 l_0_22_69)))
 (let ((?x145518 (* 2.0 l_0_22_55)))
 (let ((?x145654 (* ?x145518 l_0_22_68)))
 (let ((?x145515 (* 2.0 l_0_22_54)))
 (let ((?x145652 (* ?x145515 l_0_22_67)))
 (let ((?x145512 (* 2.0 l_0_22_53)))
 (let ((?x145650 (* ?x145512 l_0_22_66)))
 (let ((?x145509 (* 2.0 l_0_22_52)))
 (let ((?x145648 (* ?x145509 l_0_22_65)))
 (let ((?x145506 (* 2.0 l_0_22_21)))
 (let ((?x145646 (* ?x145506 l_0_22_34)))
 (let ((?x145503 (* 2.0 l_0_22_201)))
 (let ((?x145644 (* ?x145503 l_0_22_214)))
 (let ((?x145500 (* 2.0 l_0_22_200)))
 (let ((?x145642 (* ?x145500 l_0_22_213)))
 (let ((?x145497 (* 2.0 l_0_22_20)))
 (let ((?x145640 (* ?x145497 l_0_22_33)))
 (let ((?x145494 (* 2.0 l_0_22_199)))
 (let ((?x145638 (* ?x145494 l_0_22_212)))
 (let ((?x145491 (* 2.0 l_0_22_198)))
 (let ((?x145636 (* ?x145491 l_0_22_211)))
 (let ((?x145488 (* 2.0 l_0_22_197)))
 (let ((?x145634 (* ?x145488 l_0_22_210)))
 (let ((?x145485 (* 2.0 l_0_22_196)))
 (let ((?x145632 (* ?x145485 l_0_22_209)))
 (let ((?x145482 (* 2.0 l_0_22_19)))
 (let ((?x145630 (* ?x145482 l_0_22_32)))
 (let ((?x144479 (* 2.0 l_0_22_18)))
 (let ((?x145628 (* ?x144479 l_0_22_31)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x145626 (* ?x144083 l_0_22_30)))
 (let ((?x145475 (* 2.0 l_0_22_165)))
 (let ((?x145624 (* ?x145475 l_0_22_178)))
 (let ((?x145472 (* 2.0 l_0_22_164)))
 (let ((?x145622 (* ?x145472 l_0_22_177)))
 (let ((?x145469 (* 2.0 l_0_22_163)))
 (let ((?x145620 (* ?x145469 l_0_22_176)))
 (let ((?x145466 (* 2.0 l_0_22_162)))
 (let ((?x145618 (* ?x145466 l_0_22_175)))
 (let ((?x145463 (* 2.0 l_0_22_161)))
 (let ((?x145616 (* ?x145463 l_0_22_174)))
 (let ((?x145460 (* 2.0 l_0_22_160)))
 (let ((?x145614 (* ?x145460 l_0_22_173)))
 (let ((?x145621 (- (- (- (- (* (* (- 2.0) l_0_22_16) l_0_22_29) ?x145614) ?x145616) ?x145618) ?x145620)))
 (let ((?x145635 (+ (+ (- (- (- (- (- ?x145621 ?x145622) ?x145624) ?x145626) ?x145628) ?x145630) ?x145632) ?x145634)))
 (let ((?x145649 (+ (- (+ (+ (- (+ (+ ?x145635 ?x145636) ?x145638) ?x145640) ?x145642) ?x145644) ?x145646) ?x145648)))
 (= (+ (+ (+ (+ (+ ?x145649 ?x145650) ?x145652) ?x145654) ?x145656) ?x145658) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145790 (* l_0_22_64 l_0_22_64)))
 (let ((?x145788 (* l_0_22_63 l_0_22_63)))
 (let ((?x145786 (* l_0_22_62 l_0_22_62)))
 (let ((?x145784 (* l_0_22_61 l_0_22_61)))
 (let ((?x145782 (* l_0_22_60 l_0_22_60)))
 (let ((?x145780 (* l_0_22_59 l_0_22_59)))
 (let ((?x145778 (* l_0_22_58 l_0_22_58)))
 (let ((?x145776 (* l_0_22_28 l_0_22_28)))
 (let ((?x145774 (* l_0_22_27 l_0_22_27)))
 (let ((?x145772 (* l_0_22_26 l_0_22_26)))
 (let ((?x145770 (* l_0_22_25 l_0_22_25)))
 (let ((?x145768 (* l_0_22_24 l_0_22_24)))
 (let ((?x145766 (* l_0_22_23 l_0_22_23)))
 (let ((?x145764 (* l_0_22_22 l_0_22_22)))
 (let ((?x145762 (* l_0_22_208 l_0_22_208)))
 (let ((?x145760 (* l_0_22_207 l_0_22_207)))
 (let ((?x145758 (* l_0_22_206 l_0_22_206)))
 (let ((?x145756 (* l_0_22_205 l_0_22_205)))
 (let ((?x145754 (* l_0_22_204 l_0_22_204)))
 (let ((?x145752 (* l_0_22_203 l_0_22_203)))
 (let ((?x145750 (* l_0_22_202 l_0_22_202)))
 (let ((?x145748 (* l_0_22_172 l_0_22_172)))
 (let ((?x145746 (* l_0_22_171 l_0_22_171)))
 (let ((?x145744 (* l_0_22_170 l_0_22_170)))
 (let ((?x145742 (* l_0_22_169 l_0_22_169)))
 (let ((?x145740 (* l_0_22_168 l_0_22_168)))
 (let ((?x145738 (* l_0_22_167 l_0_22_167)))
 (let ((?x145736 (* l_0_22_166 l_0_22_166)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144544 (* ?x144077 l_0_22_168)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144541 (* ?x144074 l_0_22_167)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144538 (* ?x144071 l_0_22_166)))
 (let ((?x145716 (+ (* (* 1.0 l_0_22_112) l_0_22_130) (* (* 1.0 l_0_22_113) l_0_22_131))))
 (let ((?x145735 (- (- (- (+ ?x145716 (* (* 1.0 l_0_22_114) l_0_22_132)) ?x144538) ?x144541) ?x144544)))
 (let ((?x145749 (- (- (- (- (- (- (- ?x145735 ?x145736) ?x145738) ?x145740) ?x145742) ?x145744) ?x145746) ?x145748)))
 (let ((?x145763 (+ (+ (+ (+ (+ (+ (+ ?x145749 ?x145750) ?x145752) ?x145754) ?x145756) ?x145758) ?x145760) ?x145762)))
 (let ((?x145777 (- (- (- (- (- (- (- ?x145763 ?x145764) ?x145766) ?x145768) ?x145770) ?x145772) ?x145774) ?x145776)))
 (let ((?x145791 (+ (+ (+ (+ (+ (+ (+ ?x145777 ?x145778) ?x145780) ?x145782) ?x145784) ?x145786) ?x145788) ?x145790)))
 (let ((?x145795 (- (- ?x145791 (* (* 1.0 l_0_22_76) l_0_22_94)) (* (* 1.0 l_0_22_77) l_0_22_95))))
 (= (- ?x145795 (* (* 1.0 l_0_22_78) l_0_22_96)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145928 (* (* 2.0 l_0_22_64) l_0_22_71)))
 (let ((?x145925 (* (* 2.0 l_0_22_63) l_0_22_70)))
 (let ((?x145922 (* (* 2.0 l_0_22_62) l_0_22_69)))
 (let ((?x145919 (* (* 2.0 l_0_22_61) l_0_22_68)))
 (let ((?x145916 (* (* 2.0 l_0_22_60) l_0_22_67)))
 (let ((?x145913 (* (* 2.0 l_0_22_59) l_0_22_66)))
 (let ((?x145910 (* (* 2.0 l_0_22_58) l_0_22_65)))
 (let ((?x145907 (* (* 2.0 l_0_22_28) l_0_22_35)))
 (let ((?x145904 (* (* 2.0 l_0_22_27) l_0_22_34)))
 (let ((?x145901 (* (* 2.0 l_0_22_26) l_0_22_33)))
 (let ((?x145898 (* (* 2.0 l_0_22_25) l_0_22_32)))
 (let ((?x144558 (* 2.0 l_0_22_24)))
 (let ((?x145895 (* ?x144558 l_0_22_31)))
 (let ((?x144189 (* 2.0 l_0_22_23)))
 (let ((?x145893 (* ?x144189 l_0_22_30)))
 (let ((?x144553 (* 2.0 l_0_22_22)))
 (let ((?x145891 (* ?x144553 l_0_22_29)))
 (let ((?x145889 (* (* 2.0 l_0_22_208) l_0_22_215)))
 (let ((?x145886 (* (* 2.0 l_0_22_207) l_0_22_214)))
 (let ((?x145883 (* (* 2.0 l_0_22_206) l_0_22_213)))
 (let ((?x145880 (* (* 2.0 l_0_22_205) l_0_22_212)))
 (let ((?x145877 (* (* 2.0 l_0_22_204) l_0_22_211)))
 (let ((?x145874 (* (* 2.0 l_0_22_203) l_0_22_210)))
 (let ((?x145871 (* (* 2.0 l_0_22_202) l_0_22_209)))
 (let ((?x145868 (* (* 2.0 l_0_22_172) l_0_22_179)))
 (let ((?x145865 (* (* 2.0 l_0_22_171) l_0_22_178)))
 (let ((?x145862 (* (* 2.0 l_0_22_170) l_0_22_177)))
 (let ((?x145859 (* (* 2.0 l_0_22_169) l_0_22_176)))
 (let ((?x145856 (* (* 2.0 l_0_22_168) l_0_22_175)))
 (let ((?x145853 (* (* 2.0 l_0_22_167) l_0_22_174)))
 (let ((?x145850 (* (* 2.0 l_0_22_166) l_0_22_173)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144078 (* ?x144077 l_0_22_175)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144075 (* ?x144074 l_0_22_174)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144072 (* ?x144071 l_0_22_173)))
 (let ((?x145836 (- (* (* (- 1.0) l_0_22_101) l_0_22_76) (* (* 1.0 l_0_22_102) l_0_22_77))))
 (let ((?x145841 (+ (- ?x145836 (* (* 1.0 l_0_22_103) l_0_22_78)) (* (* 1.0 l_0_22_112) l_0_22_137))))
 (let ((?x145845 (+ (+ ?x145841 (* (* 1.0 l_0_22_113) l_0_22_138)) (* (* 1.0 l_0_22_114) l_0_22_139))))
 (let ((?x145860 (- (- (- (- (- (- (- ?x145845 ?x144072) ?x144075) ?x144078) ?x145850) ?x145853) ?x145856) ?x145859)))
 (let ((?x145881 (+ (+ (+ (+ (- (- (- ?x145860 ?x145862) ?x145865) ?x145868) ?x145871) ?x145874) ?x145877) ?x145880)))
 (let ((?x145899 (- (- (- (- (+ (+ (+ ?x145881 ?x145883) ?x145886) ?x145889) ?x145891) ?x145893) ?x145895) ?x145898)))
 (let ((?x145920 (+ (+ (+ (+ (- (- (- ?x145899 ?x145901) ?x145904) ?x145907) ?x145910) ?x145913) ?x145916) ?x145919)))
 (= (+ (+ (+ ?x145920 ?x145922) ?x145925) ?x145928) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x146079 (* l_0_22_72 l_0_22_72)))
 (let ((?x146077 (* l_0_22_71 l_0_22_71)))
 (let ((?x146075 (* l_0_22_70 l_0_22_70)))
 (let ((?x146073 (* l_0_22_69 l_0_22_69)))
 (let ((?x146071 (* l_0_22_68 l_0_22_68)))
 (let ((?x146069 (* l_0_22_67 l_0_22_67)))
 (let ((?x146067 (* l_0_22_66 l_0_22_66)))
 (let ((?x146065 (* l_0_22_65 l_0_22_65)))
 (let ((?x146063 (* l_0_22_36 l_0_22_36)))
 (let ((?x146061 (* l_0_22_35 l_0_22_35)))
 (let ((?x146059 (* l_0_22_34 l_0_22_34)))
 (let ((?x146057 (* l_0_22_33 l_0_22_33)))
 (let ((?x146055 (* l_0_22_32 l_0_22_32)))
 (let ((?x146053 (* l_0_22_31 l_0_22_31)))
 (let ((?x146051 (* l_0_22_30 l_0_22_30)))
 (let ((?x146049 (* l_0_22_29 l_0_22_29)))
 (let ((?x146047 (* l_0_22_216 l_0_22_216)))
 (let ((?x146045 (* l_0_22_215 l_0_22_215)))
 (let ((?x146043 (* l_0_22_214 l_0_22_214)))
 (let ((?x146041 (* l_0_22_213 l_0_22_213)))
 (let ((?x146039 (* l_0_22_212 l_0_22_212)))
 (let ((?x146037 (* l_0_22_211 l_0_22_211)))
 (let ((?x146035 (* l_0_22_210 l_0_22_210)))
 (let ((?x146033 (* l_0_22_209 l_0_22_209)))
 (let ((?x146031 (* l_0_22_180 l_0_22_180)))
 (let ((?x146029 (* l_0_22_179 l_0_22_179)))
 (let ((?x146027 (* l_0_22_178 l_0_22_178)))
 (let ((?x146025 (* l_0_22_177 l_0_22_177)))
 (let ((?x146023 (* l_0_22_176 l_0_22_176)))
 (let ((?x146021 (* l_0_22_175 l_0_22_175)))
 (let ((?x146022 (- (- (* (- l_0_22_173) l_0_22_173) (* l_0_22_174 l_0_22_174)) ?x146021)))
 (let ((?x146036 (+ (+ (- (- (- (- (- ?x146022 ?x146023) ?x146025) ?x146027) ?x146029) ?x146031) ?x146033) ?x146035)))
 (let ((?x146050 (- (+ (+ (+ (+ (+ (+ ?x146036 ?x146037) ?x146039) ?x146041) ?x146043) ?x146045) ?x146047) ?x146049)))
 (let ((?x146064 (- (- (- (- (- (- (- ?x146050 ?x146051) ?x146053) ?x146055) ?x146057) ?x146059) ?x146061) ?x146063)))
 (let ((?x146078 (+ (+ (+ (+ (+ (+ (+ ?x146064 ?x146065) ?x146067) ?x146069) ?x146071) ?x146073) ?x146075) ?x146077)))
 (= (+ ?x146078 ?x146079) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x143492 (* l_0_22_37 l_0_22_37)))
 (let ((?x146132 (* l_0_22_289 l_0_22_289)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146130 (* ?x146129 l_0_22_295)))
 (let ((?x146131 (+ (- (* l_0_22_1 l_0_22_1) (* (* 2.0 l_0_22_109) l_0_22_115)) ?x146130)))
 (= (+ (- (+ ?x146131 ?x146132) ?x143492) (* (* 2.0 l_0_22_73) l_0_22_79)) 0.0)))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143544 (* ?x143543 l_0_22_38)))
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x146165 (* ?x146164 l_0_22_296)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x146162 (* ?x146161 l_0_22_295)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146159 (* ?x146129 l_0_22_290)))
 (let ((?x146155 (- (* (* 2.0 l_0_22_1) l_0_22_2) (* (* 2.0 l_0_22_110) l_0_22_115))))
 (let ((?x146166 (+ (+ (+ (- ?x146155 (* (* 2.0 l_0_22_111) l_0_22_116)) ?x146159) ?x146162) ?x146165)))
 (let ((?x146172 (- (- ?x146166 (* (* 2.0 l_0_22_325) l_0_22_331)) (* (* 2.0 l_0_22_361) l_0_22_367))))
 (let ((?x146179 (- (- (- ?x146172 ?x143544) (* (* 2.0 l_0_22_397) l_0_22_403)) (* (* 2.0 l_0_22_433) l_0_22_439))))
 (let ((?x146185 (- (- ?x146179 (* (* 2.0 l_0_22_469) l_0_22_475)) (* (* 2.0 l_0_22_505) l_0_22_511))))
 (let ((?x146191 (+ (- ?x146185 (* (* 2.0 l_0_22_541) l_0_22_547)) (* (* 2.0 l_0_22_74) l_0_22_79))))
 (= (+ ?x146191 (* (* 2.0 l_0_22_75) l_0_22_80)) 0.0))))))))))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143588 (* ?x143543 l_0_22_40)))
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x146240 (* ?x143540 l_0_22_297)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x146238 (* ?x143537 l_0_22_296)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x146236 (* ?x143534 l_0_22_295)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146234 (* ?x146129 l_0_22_292)))
 (let ((?x146229 (- (* (* 2.0 l_0_22_1) l_0_22_4) (* (* 2.0 l_0_22_112) l_0_22_115))))
 (let ((?x146233 (- (- ?x146229 (* (* 2.0 l_0_22_113) l_0_22_116)) (* (* 2.0 l_0_22_114) l_0_22_117))))
 (let ((?x146245 (+ (- (+ (+ (+ (+ ?x146233 ?x146234) ?x146236) ?x146238) ?x146240) ?x143588) (* (* 2.0 l_0_22_76) l_0_22_79))))
 (let ((?x146251 (+ (+ ?x146245 (* (* 2.0 l_0_22_77) l_0_22_80)) (* (* 2.0 l_0_22_78) l_0_22_81))))
 (= ?x146251 0.0))))))))))))))))
(assert
 (let ((?x146299 (* l_0_22_82 l_0_22_82)))
 (let ((?x146297 (* l_0_22_81 l_0_22_81)))
 (let ((?x146295 (* l_0_22_80 l_0_22_80)))
 (let ((?x146293 (* l_0_22_79 l_0_22_79)))
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143602 (* ?x143543 l_0_22_43)))
 (let ((?x146290 (* l_0_22_298 l_0_22_298)))
 (let ((?x146288 (* l_0_22_297 l_0_22_297)))
 (let ((?x146286 (* l_0_22_296 l_0_22_296)))
 (let ((?x146284 (* l_0_22_295 l_0_22_295)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146130 (* ?x146129 l_0_22_295)))
 (let ((?x146281 (* l_0_22_118 l_0_22_118)))
 (let ((?x146279 (* l_0_22_117 l_0_22_117)))
 (let ((?x146277 (* l_0_22_116 l_0_22_116)))
 (let ((?x146278 (- (- (* (* 2.0 l_0_22_1) l_0_22_7) (* l_0_22_115 l_0_22_115)) ?x146277)))
 (let ((?x146291 (+ (+ (+ (+ (+ (- (- ?x146278 ?x146279) ?x146281) ?x146130) ?x146284) ?x146286) ?x146288) ?x146290)))
 (= (+ (+ (+ (+ (- ?x146291 ?x143602) ?x146293) ?x146295) ?x146297) ?x146299) 0.0)))))))))))))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143625 (* ?x143543 l_0_22_47)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146338 (* ?x146337 l_0_22_302)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146335 (* ?x146334 l_0_22_301)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146332 (* ?x146331 l_0_22_300)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146329 (* ?x146328 l_0_22_299)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146326 (* ?x146129 l_0_22_299)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x146324 (* ?x146323 l_0_22_259)))
 (let ((?x146313 (- (* (* 2.0 l_0_22_1) l_0_22_11) (* (* 2.0 l_0_22_115) l_0_22_119))))
 (let ((?x146319 (- (- ?x146313 (* (* 2.0 l_0_22_116) l_0_22_120)) (* (* 2.0 l_0_22_117) l_0_22_121))))
 (let ((?x146330 (+ (+ (+ (- ?x146319 (* (* 2.0 l_0_22_118) l_0_22_122)) ?x146324) ?x146326) ?x146329)))
 (let ((?x146343 (+ (- (+ (+ (+ ?x146330 ?x146332) ?x146335) ?x146338) ?x143625) (* (* 2.0 l_0_22_79) l_0_22_83))))
 (let ((?x146349 (+ (+ ?x146343 (* (* 2.0 l_0_22_80) l_0_22_84)) (* (* 2.0 l_0_22_81) l_0_22_85))))
 (= (+ ?x146349 (* (* 2.0 l_0_22_82) l_0_22_86)) 0.0)))))))))))))))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143643 (* ?x143543 l_0_22_52)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146402 (* ?x146337 l_0_22_307)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146400 (* ?x146334 l_0_22_306)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146398 (* ?x146331 l_0_22_305)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146396 (* ?x146328 l_0_22_304)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146394 (* ?x146129 l_0_22_304)))
 (let ((?x146130 (* ?x146129 l_0_22_295)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143600 (* ?x143528 l_0_22_187)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x99673 (* ?x143525 l_0_22_151)))
 (let ((?x146384 (- (* (* 2.0 l_0_22_1) l_0_22_16) (* (* 2.0 l_0_22_115) l_0_22_124))))
 (let ((?x146388 (- (- ?x146384 (* (* 2.0 l_0_22_116) l_0_22_125)) (* (* 2.0 l_0_22_117) l_0_22_126))))
 (let ((?x146393 (- (- (+ (- ?x146388 (* (* 2.0 l_0_22_118) l_0_22_127)) ?x99673) ?x143600) ?x146130)))
 (let ((?x146406 (+ (- (+ (+ (+ (+ (+ ?x146393 ?x146394) ?x146396) ?x146398) ?x146400) ?x146402) ?x143643) (* (* 2.0 l_0_22_79) l_0_22_88))))
 (let ((?x146410 (+ (+ ?x146406 (* (* 2.0 l_0_22_80) l_0_22_89)) (* (* 2.0 l_0_22_81) l_0_22_90))))
 (= (+ ?x146410 (* (* 2.0 l_0_22_82) l_0_22_91)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143670 (* ?x143543 l_0_22_58)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146462 (* ?x146337 l_0_22_313)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146460 (* ?x146334 l_0_22_312)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146458 (* ?x146331 l_0_22_311)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146456 (* ?x146328 l_0_22_310)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146454 (* ?x146129 l_0_22_310)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x146324 (* ?x146323 l_0_22_259)))
 (let ((?x146446 (- (* (* 2.0 l_0_22_1) l_0_22_22) (* (* 2.0 l_0_22_115) l_0_22_130))))
 (let ((?x146450 (- (- ?x146446 (* (* 2.0 l_0_22_116) l_0_22_131)) (* (* 2.0 l_0_22_117) l_0_22_132))))
 (let ((?x146457 (+ (+ (- (- ?x146450 (* (* 2.0 l_0_22_118) l_0_22_133)) ?x146324) ?x146454) ?x146456)))
 (let ((?x146466 (+ (- (+ (+ (+ ?x146457 ?x146458) ?x146460) ?x146462) ?x143670) (* (* 2.0 l_0_22_79) l_0_22_94))))
 (let ((?x146470 (+ (+ ?x146466 (* (* 2.0 l_0_22_80) l_0_22_95)) (* (* 2.0 l_0_22_81) l_0_22_96))))
 (= (+ ?x146470 (* (* 2.0 l_0_22_82) l_0_22_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x143543 (* 2.0 l_0_22_37)))
 (let ((?x143700 (* ?x143543 l_0_22_65)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146538 (* ?x146337 l_0_22_320)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146536 (* ?x146334 l_0_22_319)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146534 (* ?x146331 l_0_22_318)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146532 (* ?x146328 l_0_22_317)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146530 (* ?x146129 l_0_22_317)))
 (let ((?x146512 (+ (* (* 2.0 l_0_22_1) l_0_22_29) (* (* 2.0 l_0_22_101) l_0_22_79))))
 (let ((?x146516 (+ (+ ?x146512 (* (* 2.0 l_0_22_102) l_0_22_80)) (* (* 2.0 l_0_22_103) l_0_22_81))))
 (let ((?x146521 (- (+ ?x146516 (* (* 2.0 l_0_22_104) l_0_22_82)) (* (* 2.0 l_0_22_115) l_0_22_137))))
 (let ((?x146525 (- (- ?x146521 (* (* 2.0 l_0_22_116) l_0_22_138)) (* (* 2.0 l_0_22_117) l_0_22_139))))
 (let ((?x146529 (- (- ?x146525 (* (* 2.0 l_0_22_118) l_0_22_140)) (* (* 2.0 l_0_22_217) l_0_22_223))))
 (= (- (+ (+ (+ (+ (+ ?x146529 ?x146530) ?x146532) ?x146534) ?x146536) ?x146538) ?x143700) 0.0)))))))))))))))))))
(assert
 (let ((?x143751 (* l_0_22_39 l_0_22_39)))
 (let ((?x143749 (* l_0_22_38 l_0_22_38)))
 (let ((?x143729 (* l_0_22_3 l_0_22_3)))
 (let ((?x146591 (* l_0_22_291 l_0_22_291)))
 (let ((?x146593 (+ (+ (+ (* l_0_22_2 l_0_22_2) (* l_0_22_290 l_0_22_290)) ?x146591) ?x143729)))
 (let ((?x146597 (- (- ?x146593 (* (* 2.0 l_0_22_326) l_0_22_331)) (* (* 2.0 l_0_22_327) l_0_22_332))))
 (let ((?x146601 (- (- ?x146597 (* (* 2.0 l_0_22_362) l_0_22_367)) (* (* 2.0 l_0_22_363) l_0_22_368))))
 (let ((?x146607 (- (- (- (- ?x146601 ?x143749) ?x143751) (* (* 2.0 l_0_22_398) l_0_22_403)) (* (* 2.0 l_0_22_399) l_0_22_404))))
 (let ((?x146611 (- (- ?x146607 (* (* 2.0 l_0_22_434) l_0_22_439)) (* (* 2.0 l_0_22_435) l_0_22_440))))
 (let ((?x146615 (- (- ?x146611 (* (* 2.0 l_0_22_470) l_0_22_475)) (* (* 2.0 l_0_22_471) l_0_22_476))))
 (let ((?x146619 (- (- ?x146615 (* (* 2.0 l_0_22_506) l_0_22_511)) (* (* 2.0 l_0_22_507) l_0_22_512))))
 (let ((?x146623 (- (- ?x146619 (* (* 2.0 l_0_22_542) l_0_22_547)) (* (* 2.0 l_0_22_543) l_0_22_548))))
 (= ?x146623 0.0))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x143879 (* ?x143878 l_0_22_41)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x143876 (* ?x143875 l_0_22_40)))
 (let ((?x143872 (* 2.0 l_0_22_3)))
 (let ((?x143873 (* ?x143872 l_0_22_5)))
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x146664 (* ?x146164 l_0_22_293)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x146662 (* ?x146161 l_0_22_292)))
 (let ((?x143863 (* 2.0 l_0_22_2)))
 (let ((?x143864 (* ?x143863 l_0_22_4)))
 (let ((?x146668 (- (+ (+ (+ ?x143864 ?x146662) ?x146664) ?x143873) (* (* 2.0 l_0_22_328) l_0_22_331))))
 (let ((?x146672 (- (- ?x146668 (* (* 2.0 l_0_22_329) l_0_22_332)) (* (* 2.0 l_0_22_330) l_0_22_333))))
 (let ((?x146676 (- (- ?x146672 (* (* 2.0 l_0_22_364) l_0_22_367)) (* (* 2.0 l_0_22_365) l_0_22_368))))
 (let ((?x146682 (- (- (- (- ?x146676 (* (* 2.0 l_0_22_366) l_0_22_369)) ?x143876) ?x143879) (* (* 2.0 l_0_22_400) l_0_22_403))))
 (let ((?x146686 (- (- ?x146682 (* (* 2.0 l_0_22_401) l_0_22_404)) (* (* 2.0 l_0_22_402) l_0_22_405))))
 (let ((?x146690 (- (- ?x146686 (* (* 2.0 l_0_22_436) l_0_22_439)) (* (* 2.0 l_0_22_437) l_0_22_440))))
 (let ((?x146694 (- (- ?x146690 (* (* 2.0 l_0_22_438) l_0_22_441)) (* (* 2.0 l_0_22_472) l_0_22_475))))
 (let ((?x146698 (- (- ?x146694 (* (* 2.0 l_0_22_473) l_0_22_476)) (* (* 2.0 l_0_22_474) l_0_22_477))))
 (let ((?x146702 (- (- ?x146698 (* (* 2.0 l_0_22_508) l_0_22_511)) (* (* 2.0 l_0_22_509) l_0_22_512))))
 (let ((?x146706 (- (- ?x146702 (* (* 2.0 l_0_22_510) l_0_22_513)) (* (* 2.0 l_0_22_544) l_0_22_547))))
 (let ((?x146710 (- (- ?x146706 (* (* 2.0 l_0_22_545) l_0_22_548)) (* (* 2.0 l_0_22_546) l_0_22_549))))
 (= ?x146710 0.0)))))))))))))))))))))))))
(assert
 (let ((?x146827 (* l_0_22_550 l_0_22_550)))
 (let ((?x146825 (* l_0_22_549 l_0_22_549)))
 (let ((?x146823 (* l_0_22_548 l_0_22_548)))
 (let ((?x146821 (* l_0_22_547 l_0_22_547)))
 (let ((?x146819 (* l_0_22_514 l_0_22_514)))
 (let ((?x146817 (* l_0_22_513 l_0_22_513)))
 (let ((?x146815 (* l_0_22_512 l_0_22_512)))
 (let ((?x146813 (* l_0_22_511 l_0_22_511)))
 (let ((?x146811 (* l_0_22_478 l_0_22_478)))
 (let ((?x146809 (* l_0_22_477 l_0_22_477)))
 (let ((?x146807 (* l_0_22_476 l_0_22_476)))
 (let ((?x146805 (* l_0_22_475 l_0_22_475)))
 (let ((?x146803 (* l_0_22_442 l_0_22_442)))
 (let ((?x146801 (* l_0_22_441 l_0_22_441)))
 (let ((?x146799 (* l_0_22_440 l_0_22_440)))
 (let ((?x146797 (* l_0_22_439 l_0_22_439)))
 (let ((?x146795 (* l_0_22_406 l_0_22_406)))
 (let ((?x146793 (* l_0_22_405 l_0_22_405)))
 (let ((?x146791 (* l_0_22_404 l_0_22_404)))
 (let ((?x146789 (* l_0_22_403 l_0_22_403)))
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x143942 (* ?x143878 l_0_22_44)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x143940 (* ?x143875 l_0_22_43)))
 (let ((?x146785 (* l_0_22_370 l_0_22_370)))
 (let ((?x146783 (* l_0_22_369 l_0_22_369)))
 (let ((?x146781 (* l_0_22_368 l_0_22_368)))
 (let ((?x146779 (* l_0_22_367 l_0_22_367)))
 (let ((?x146777 (* l_0_22_334 l_0_22_334)))
 (let ((?x146775 (* l_0_22_333 l_0_22_333)))
 (let ((?x146773 (* l_0_22_332 l_0_22_332)))
 (let ((?x146771 (* l_0_22_331 l_0_22_331)))
 (let ((?x143872 (* 2.0 l_0_22_3)))
 (let ((?x143932 (* ?x143872 l_0_22_8)))
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x146165 (* ?x146164 l_0_22_296)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x146162 (* ?x146161 l_0_22_295)))
 (let ((?x143863 (* 2.0 l_0_22_2)))
 (let ((?x143915 (* ?x143863 l_0_22_7)))
 (let ((?x146778 (- (- (- (- (+ (+ (+ ?x143915 ?x146162) ?x146165) ?x143932) ?x146771) ?x146773) ?x146775) ?x146777)))
 (let ((?x146790 (- (- (- (- (- (- (- ?x146778 ?x146779) ?x146781) ?x146783) ?x146785) ?x143940) ?x143942) ?x146789)))
 (let ((?x146804 (- (- (- (- (- (- (- ?x146790 ?x146791) ?x146793) ?x146795) ?x146797) ?x146799) ?x146801) ?x146803)))
 (let ((?x146818 (- (- (- (- (- (- (- ?x146804 ?x146805) ?x146807) ?x146809) ?x146811) ?x146813) ?x146815) ?x146817)))
 (= (- (- (- (- (- ?x146818 ?x146819) ?x146821) ?x146823) ?x146825) ?x146827) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x144030 (* ?x143878 l_0_22_48)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x144028 (* ?x143875 l_0_22_47)))
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x146888 (* ?x146164 l_0_22_300)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x146886 (* ?x146161 l_0_22_299)))
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x146884 (* ?x146883 l_0_22_260)))
 (let ((?x146880 (* 2.0 l_0_22_254)))
 (let ((?x146881 (* ?x146880 l_0_22_259)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x144002 (* ?x144001 l_0_22_3)))
 (let ((?x146887 (+ (+ (+ (+ (* (* 2.0 l_0_22_11) l_0_22_2) ?x144002) ?x146881) ?x146884) ?x146886)))
 (let ((?x146895 (- (- (+ ?x146887 ?x146888) (* (* 2.0 l_0_22_331) l_0_22_335)) (* (* 2.0 l_0_22_332) l_0_22_336))))
 (let ((?x146901 (- (- ?x146895 (* (* 2.0 l_0_22_333) l_0_22_337)) (* (* 2.0 l_0_22_334) l_0_22_338))))
 (let ((?x146907 (- (- ?x146901 (* (* 2.0 l_0_22_367) l_0_22_371)) (* (* 2.0 l_0_22_368) l_0_22_372))))
 (let ((?x146913 (- (- ?x146907 (* (* 2.0 l_0_22_369) l_0_22_373)) (* (* 2.0 l_0_22_370) l_0_22_374))))
 (let ((?x146921 (- (- (- (- ?x146913 ?x144028) ?x144030) (* (* 2.0 l_0_22_403) l_0_22_407)) (* (* 2.0 l_0_22_404) l_0_22_408))))
 (let ((?x146927 (- (- ?x146921 (* (* 2.0 l_0_22_405) l_0_22_409)) (* (* 2.0 l_0_22_406) l_0_22_410))))
 (let ((?x146933 (- (- ?x146927 (* (* 2.0 l_0_22_439) l_0_22_443)) (* (* 2.0 l_0_22_440) l_0_22_444))))
 (let ((?x146939 (- (- ?x146933 (* (* 2.0 l_0_22_441) l_0_22_445)) (* (* 2.0 l_0_22_442) l_0_22_446))))
 (let ((?x146945 (- (- ?x146939 (* (* 2.0 l_0_22_475) l_0_22_479)) (* (* 2.0 l_0_22_476) l_0_22_480))))
 (let ((?x146951 (- (- ?x146945 (* (* 2.0 l_0_22_477) l_0_22_481)) (* (* 2.0 l_0_22_478) l_0_22_482))))
 (let ((?x146957 (- (- ?x146951 (* (* 2.0 l_0_22_511) l_0_22_515)) (* (* 2.0 l_0_22_512) l_0_22_516))))
 (let ((?x146963 (- (- ?x146957 (* (* 2.0 l_0_22_513) l_0_22_517)) (* (* 2.0 l_0_22_514) l_0_22_518))))
 (let ((?x146969 (- (- ?x146963 (* (* 2.0 l_0_22_547) l_0_22_551)) (* (* 2.0 l_0_22_548) l_0_22_552))))
 (let ((?x146975 (- (- ?x146969 (* (* 2.0 l_0_22_549) l_0_22_553)) (* (* 2.0 l_0_22_550) l_0_22_554))))
 (= ?x146975 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x144110 (* ?x143878 l_0_22_53)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x144108 (* ?x143875 l_0_22_52)))
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x147091 (* ?x146164 l_0_22_305)))
 (let ((?x146165 (* ?x146164 l_0_22_296)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x147088 (* ?x146161 l_0_22_304)))
 (let ((?x146162 (* ?x146161 l_0_22_295)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x143913 (* ?x143860 l_0_22_188)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x143911 (* ?x143857 l_0_22_187)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x144084 (* ?x144083 l_0_22_3)))
 (let ((?x144080 (* 2.0 l_0_22_16)))
 (let ((?x144081 (* ?x144080 l_0_22_2)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x143909 (* ?x143854 l_0_22_152)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x29180 (* ?x144004 l_0_22_151)))
 (let ((?x147089 (+ (- (- (- (+ (+ (+ ?x29180 ?x143909) ?x144081) ?x144084) ?x143911) ?x143913) ?x146162) ?x147088)))
 (let ((?x147096 (- (- (+ (- ?x147089 ?x146165) ?x147091) (* (* 2.0 l_0_22_331) l_0_22_340)) (* (* 2.0 l_0_22_332) l_0_22_341))))
 (let ((?x147100 (- (- ?x147096 (* (* 2.0 l_0_22_333) l_0_22_342)) (* (* 2.0 l_0_22_334) l_0_22_343))))
 (let ((?x147104 (- (- ?x147100 (* (* 2.0 l_0_22_367) l_0_22_376)) (* (* 2.0 l_0_22_368) l_0_22_377))))
 (let ((?x147108 (- (- ?x147104 (* (* 2.0 l_0_22_369) l_0_22_378)) (* (* 2.0 l_0_22_370) l_0_22_379))))
 (let ((?x147114 (- (- (- (- ?x147108 ?x144108) ?x144110) (* (* 2.0 l_0_22_403) l_0_22_412)) (* (* 2.0 l_0_22_404) l_0_22_413))))
 (let ((?x147118 (- (- ?x147114 (* (* 2.0 l_0_22_405) l_0_22_414)) (* (* 2.0 l_0_22_406) l_0_22_415))))
 (let ((?x147122 (- (- ?x147118 (* (* 2.0 l_0_22_439) l_0_22_448)) (* (* 2.0 l_0_22_440) l_0_22_449))))
 (let ((?x147126 (- (- ?x147122 (* (* 2.0 l_0_22_441) l_0_22_450)) (* (* 2.0 l_0_22_442) l_0_22_451))))
 (let ((?x147130 (- (- ?x147126 (* (* 2.0 l_0_22_475) l_0_22_484)) (* (* 2.0 l_0_22_476) l_0_22_485))))
 (let ((?x147134 (- (- ?x147130 (* (* 2.0 l_0_22_477) l_0_22_486)) (* (* 2.0 l_0_22_478) l_0_22_487))))
 (let ((?x147138 (- (- ?x147134 (* (* 2.0 l_0_22_511) l_0_22_520)) (* (* 2.0 l_0_22_512) l_0_22_521))))
 (let ((?x147142 (- (- ?x147138 (* (* 2.0 l_0_22_513) l_0_22_522)) (* (* 2.0 l_0_22_514) l_0_22_523))))
 (let ((?x147146 (- (- ?x147142 (* (* 2.0 l_0_22_547) l_0_22_556)) (* (* 2.0 l_0_22_548) l_0_22_557))))
 (let ((?x147150 (- (- ?x147146 (* (* 2.0 l_0_22_549) l_0_22_558)) (* (* 2.0 l_0_22_550) l_0_22_559))))
 (= ?x147150 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x144197 (* ?x143878 l_0_22_59)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x144195 (* ?x143875 l_0_22_58)))
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x147188 (* ?x146164 l_0_22_311)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x147186 (* ?x146161 l_0_22_310)))
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x146884 (* ?x146883 l_0_22_260)))
 (let ((?x146880 (* 2.0 l_0_22_254)))
 (let ((?x146881 (* ?x146880 l_0_22_259)))
 (let ((?x144189 (* 2.0 l_0_22_23)))
 (let ((?x144190 (* ?x144189 l_0_22_3)))
 (let ((?x143863 (* 2.0 l_0_22_2)))
 (let ((?x144181 (* ?x143863 l_0_22_22)))
 (let ((?x147191 (- (+ (+ (- (- (+ ?x144181 ?x144190) ?x146881) ?x146884) ?x147186) ?x147188) (* (* 2.0 l_0_22_331) l_0_22_346))))
 (let ((?x147195 (- (- ?x147191 (* (* 2.0 l_0_22_332) l_0_22_347)) (* (* 2.0 l_0_22_333) l_0_22_348))))
 (let ((?x147199 (- (- ?x147195 (* (* 2.0 l_0_22_334) l_0_22_349)) (* (* 2.0 l_0_22_367) l_0_22_382))))
 (let ((?x147203 (- (- ?x147199 (* (* 2.0 l_0_22_368) l_0_22_383)) (* (* 2.0 l_0_22_369) l_0_22_384))))
 (let ((?x147209 (- (- (- (- ?x147203 (* (* 2.0 l_0_22_370) l_0_22_385)) ?x144195) ?x144197) (* (* 2.0 l_0_22_403) l_0_22_418))))
 (let ((?x147213 (- (- ?x147209 (* (* 2.0 l_0_22_404) l_0_22_419)) (* (* 2.0 l_0_22_405) l_0_22_420))))
 (let ((?x147217 (- (- ?x147213 (* (* 2.0 l_0_22_406) l_0_22_421)) (* (* 2.0 l_0_22_439) l_0_22_454))))
 (let ((?x147221 (- (- ?x147217 (* (* 2.0 l_0_22_440) l_0_22_455)) (* (* 2.0 l_0_22_441) l_0_22_456))))
 (let ((?x147225 (- (- ?x147221 (* (* 2.0 l_0_22_442) l_0_22_457)) (* (* 2.0 l_0_22_475) l_0_22_490))))
 (let ((?x147229 (- (- ?x147225 (* (* 2.0 l_0_22_476) l_0_22_491)) (* (* 2.0 l_0_22_477) l_0_22_492))))
 (let ((?x147233 (- (- ?x147229 (* (* 2.0 l_0_22_478) l_0_22_493)) (* (* 2.0 l_0_22_511) l_0_22_526))))
 (let ((?x147237 (- (- ?x147233 (* (* 2.0 l_0_22_512) l_0_22_527)) (* (* 2.0 l_0_22_513) l_0_22_528))))
 (let ((?x147241 (- (- ?x147237 (* (* 2.0 l_0_22_514) l_0_22_529)) (* (* 2.0 l_0_22_547) l_0_22_562))))
 (let ((?x147245 (- (- ?x147241 (* (* 2.0 l_0_22_548) l_0_22_563)) (* (* 2.0 l_0_22_549) l_0_22_564))))
 (= (- ?x147245 (* (* 2.0 l_0_22_550) l_0_22_565)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x143878 (* 2.0 l_0_22_39)))
 (let ((?x144269 (* ?x143878 l_0_22_66)))
 (let ((?x143875 (* 2.0 l_0_22_38)))
 (let ((?x144267 (* ?x143875 l_0_22_65)))
 (let ((?x143872 (* 2.0 l_0_22_3)))
 (let ((?x144265 (* ?x143872 l_0_22_30)))
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x147316 (* ?x146164 l_0_22_318)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x147314 (* ?x146161 l_0_22_317)))
 (let ((?x143863 (* 2.0 l_0_22_2)))
 (let ((?x144257 (* ?x143863 l_0_22_29)))
 (let ((?x147313 (- (- ?x144257 (* (* 2.0 l_0_22_218) l_0_22_223)) (* (* 2.0 l_0_22_219) l_0_22_224))))
 (let ((?x147320 (- (+ (+ (+ ?x147313 ?x147314) ?x147316) ?x144265) (* (* 2.0 l_0_22_331) l_0_22_353))))
 (let ((?x147324 (- (- ?x147320 (* (* 2.0 l_0_22_332) l_0_22_354)) (* (* 2.0 l_0_22_333) l_0_22_355))))
 (let ((?x147328 (- (- ?x147324 (* (* 2.0 l_0_22_334) l_0_22_356)) (* (* 2.0 l_0_22_367) l_0_22_389))))
 (let ((?x147332 (- (- ?x147328 (* (* 2.0 l_0_22_368) l_0_22_390)) (* (* 2.0 l_0_22_369) l_0_22_391))))
 (let ((?x147338 (- (- (- (- ?x147332 (* (* 2.0 l_0_22_370) l_0_22_392)) ?x144267) ?x144269) (* (* 2.0 l_0_22_403) l_0_22_425))))
 (let ((?x147342 (- (- ?x147338 (* (* 2.0 l_0_22_404) l_0_22_426)) (* (* 2.0 l_0_22_405) l_0_22_427))))
 (let ((?x147346 (- (- ?x147342 (* (* 2.0 l_0_22_406) l_0_22_428)) (* (* 2.0 l_0_22_439) l_0_22_461))))
 (let ((?x147350 (- (- ?x147346 (* (* 2.0 l_0_22_440) l_0_22_462)) (* (* 2.0 l_0_22_441) l_0_22_463))))
 (let ((?x147354 (- (- ?x147350 (* (* 2.0 l_0_22_442) l_0_22_464)) (* (* 2.0 l_0_22_475) l_0_22_497))))
 (let ((?x147358 (- (- ?x147354 (* (* 2.0 l_0_22_476) l_0_22_498)) (* (* 2.0 l_0_22_477) l_0_22_499))))
 (let ((?x147362 (- (- ?x147358 (* (* 2.0 l_0_22_478) l_0_22_500)) (* (* 2.0 l_0_22_511) l_0_22_533))))
 (let ((?x147366 (- (- ?x147362 (* (* 2.0 l_0_22_512) l_0_22_534)) (* (* 2.0 l_0_22_513) l_0_22_535))))
 (let ((?x147370 (- (- ?x147366 (* (* 2.0 l_0_22_514) l_0_22_536)) (* (* 2.0 l_0_22_547) l_0_22_569))))
 (let ((?x147374 (- (- ?x147370 (* (* 2.0 l_0_22_548) l_0_22_570)) (* (* 2.0 l_0_22_549) l_0_22_571))))
 (= (- ?x147374 (* (* 2.0 l_0_22_550) l_0_22_572)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x144327 (* l_0_22_6 l_0_22_6)))
 (let ((?x144325 (* l_0_22_5 l_0_22_5)))
 (let ((?x144323 (* l_0_22_42 l_0_22_42)))
 (let ((?x144321 (* l_0_22_41 l_0_22_41)))
 (let ((?x144319 (* l_0_22_40 l_0_22_40)))
 (let ((?x144317 (* l_0_22_4 l_0_22_4)))
 (let ((?x147452 (* l_0_22_294 l_0_22_294)))
 (let ((?x147453 (+ (+ (* l_0_22_292 l_0_22_292) (* l_0_22_293 l_0_22_293)) ?x147452)))
 (= (+ (+ (- (- (- (+ ?x147453 ?x144317) ?x144319) ?x144321) ?x144323) ?x144325) ?x144327) 0.0))))))))))
(assert
 (let ((?x144378 (* (* 2.0 l_0_22_6) l_0_22_9)))
 (let ((?x144375 (* (* 2.0 l_0_22_5) l_0_22_8)))
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x144372 (* ?x143950 l_0_22_45)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x144370 (* ?x143947 l_0_22_44)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x144368 (* ?x143944 l_0_22_43)))
 (let ((?x144366 (* (* 2.0 l_0_22_4) l_0_22_7)))
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x146240 (* ?x143540 l_0_22_297)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x146238 (* ?x143537 l_0_22_296)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x146236 (* ?x143534 l_0_22_295)))
 (let ((?x124241 (+ (- (- (- (+ (+ (+ ?x146236 ?x146238) ?x146240) ?x144366) ?x144368) ?x144370) ?x144372) ?x144375)))
 (= (+ ?x124241 ?x144378) 0.0))))))))))))))))))
(assert
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x144432 (* ?x143950 l_0_22_49)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x144430 (* ?x143947 l_0_22_48)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x144428 (* ?x143944 l_0_22_47)))
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x124240 (* ?x143540 l_0_22_301)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x60408 (* ?x143537 l_0_22_300)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x102320 (* ?x143534 l_0_22_299)))
 (let ((?x144025 (* 2.0 l_0_22_258)))
 (let ((?x124210 (* ?x144025 l_0_22_261)))
 (let ((?x144022 (* 2.0 l_0_22_257)))
 (let ((?x124192 (* ?x144022 l_0_22_260)))
 (let ((?x144019 (* 2.0 l_0_22_256)))
 (let ((?x124237 (* ?x144019 l_0_22_259)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x144414 (* ?x144413 l_0_22_6)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x144411 (* ?x144001 l_0_22_5)))
 (let ((?x124198 (+ (+ (+ (+ (* (* 2.0 l_0_22_11) l_0_22_4) ?x144411) ?x144414) ?x124237) ?x124192)))
 (let ((?x147464 (- (- (- (+ (+ (+ (+ ?x124198 ?x124210) ?x102320) ?x60408) ?x124240) ?x144428) ?x144430) ?x144432)))
 (= ?x147464 0.0))))))))))))))))))))))))))
(assert
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x144492 (* ?x143950 l_0_22_54)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x144490 (* ?x143947 l_0_22_53)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x144488 (* ?x143944 l_0_22_52)))
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x147489 (* ?x143540 l_0_22_306)))
 (let ((?x146240 (* ?x143540 l_0_22_297)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x147486 (* ?x143537 l_0_22_305)))
 (let ((?x146238 (* ?x143537 l_0_22_296)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x147483 (* ?x143534 l_0_22_304)))
 (let ((?x146236 (* ?x143534 l_0_22_295)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144363 (* ?x144096 l_0_22_189)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144361 (* ?x144093 l_0_22_188)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144359 (* ?x144090 l_0_22_187)))
 (let ((?x144479 (* 2.0 l_0_22_18)))
 (let ((?x144480 (* ?x144479 l_0_22_6)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x144477 (* ?x144083 l_0_22_5)))
 (let ((?x144080 (* 2.0 l_0_22_16)))
 (let ((?x144466 (* ?x144080 l_0_22_4)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144357 (* ?x144077 l_0_22_153)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144355 (* ?x144074 l_0_22_152)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144825 (* ?x144071 l_0_22_151)))
 (let ((?x147480 (- (- (+ (+ (+ (+ (+ ?x144825 ?x144355) ?x144357) ?x144466) ?x144477) ?x144480) ?x144359) ?x144361)))
 (let ((?x147490 (+ (- (+ (- (+ (- (- ?x147480 ?x144363) ?x146236) ?x147483) ?x146238) ?x147486) ?x146240) ?x147489)))
 (= (- (- (- ?x147490 ?x144488) ?x144490) ?x144492) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x143950 (* 2.0 l_0_22_42)))
 (let ((?x144565 (* ?x143950 l_0_22_60)))
 (let ((?x143947 (* 2.0 l_0_22_41)))
 (let ((?x144563 (* ?x143947 l_0_22_59)))
 (let ((?x143944 (* 2.0 l_0_22_40)))
 (let ((?x144561 (* ?x143944 l_0_22_58)))
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x60503 (* ?x143540 l_0_22_312)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x25909 (* ?x143537 l_0_22_311)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x60464 (* ?x143534 l_0_22_310)))
 (let ((?x144025 (* 2.0 l_0_22_258)))
 (let ((?x124210 (* ?x144025 l_0_22_261)))
 (let ((?x144022 (* 2.0 l_0_22_257)))
 (let ((?x124192 (* ?x144022 l_0_22_260)))
 (let ((?x144019 (* 2.0 l_0_22_256)))
 (let ((?x124237 (* ?x144019 l_0_22_259)))
 (let ((?x144558 (* 2.0 l_0_22_24)))
 (let ((?x144559 (* ?x144558 l_0_22_6)))
 (let ((?x144189 (* 2.0 l_0_22_23)))
 (let ((?x144556 (* ?x144189 l_0_22_5)))
 (let ((?x144553 (* 2.0 l_0_22_22)))
 (let ((?x144554 (* ?x144553 l_0_22_4)))
 (let ((?x124326 (+ (+ (- (- (- (+ (+ ?x144554 ?x144556) ?x144559) ?x124237) ?x124192) ?x124210) ?x60464) ?x25909)))
 (= (- (- (- (+ ?x124326 ?x60503) ?x144561) ?x144563) ?x144565) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x144651 (* l_0_22_9 l_0_22_9)))
 (let ((?x144649 (* l_0_22_8 l_0_22_8)))
 (let ((?x144647 (* l_0_22_7 l_0_22_7)))
 (let ((?x144645 (* l_0_22_46 l_0_22_46)))
 (let ((?x144643 (* l_0_22_45 l_0_22_45)))
 (let ((?x144641 (* l_0_22_44 l_0_22_44)))
 (let ((?x144639 (* l_0_22_43 l_0_22_43)))
 (let ((?x146290 (* l_0_22_298 l_0_22_298)))
 (let ((?x146288 (* l_0_22_297 l_0_22_297)))
 (let ((?x146286 (* l_0_22_296 l_0_22_296)))
 (let ((?x77593 (+ (+ (+ (* l_0_22_10 l_0_22_10) (* l_0_22_295 l_0_22_295)) ?x146286) ?x146288)))
 (let ((?x147497 (+ (+ (- (- (- (- (+ ?x77593 ?x146290) ?x144639) ?x144641) ?x144643) ?x144645) ?x144647) ?x144649)))
 (= (+ ?x147497 ?x144651) 0.0))))))))))))))
(assert
 (let ((?x144722 (* 2.0 l_0_22_46)))
 (let ((?x144723 (* ?x144722 l_0_22_50)))
 (let ((?x144719 (* 2.0 l_0_22_45)))
 (let ((?x144720 (* ?x144719 l_0_22_49)))
 (let ((?x144716 (* 2.0 l_0_22_44)))
 (let ((?x144717 (* ?x144716 l_0_22_48)))
 (let ((?x144713 (* 2.0 l_0_22_43)))
 (let ((?x144714 (* ?x144713 l_0_22_47)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146338 (* ?x146337 l_0_22_302)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146335 (* ?x146334 l_0_22_301)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146332 (* ?x146331 l_0_22_300)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146329 (* ?x146328 l_0_22_299)))
 (let ((?x147516 (* l_0_22_262 l_0_22_262)))
 (let ((?x147514 (* l_0_22_261 l_0_22_261)))
 (let ((?x147512 (* l_0_22_260 l_0_22_260)))
 (let ((?x147510 (* l_0_22_259 l_0_22_259)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x144687 (* ?x144413 l_0_22_9)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x144685 (* ?x144001 l_0_22_8)))
 (let ((?x144682 (* 2.0 l_0_22_11)))
 (let ((?x144683 (* ?x144682 l_0_22_7)))
 (let ((?x147511 (+ (+ (+ (+ (* (* 2.0 l_0_22_10) l_0_22_14) ?x144683) ?x144685) ?x144687) ?x147510)))
 (let ((?x147521 (+ (+ (+ (+ (+ (+ (+ ?x147511 ?x147512) ?x147514) ?x147516) ?x146329) ?x146332) ?x146335) ?x146338)))
 (= (- (- (- (- ?x147521 ?x144714) ?x144717) ?x144720) ?x144723) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x144722 (* 2.0 l_0_22_46)))
 (let ((?x144779 (* ?x144722 l_0_22_55)))
 (let ((?x144719 (* 2.0 l_0_22_45)))
 (let ((?x144777 (* ?x144719 l_0_22_54)))
 (let ((?x144716 (* 2.0 l_0_22_44)))
 (let ((?x144775 (* ?x144716 l_0_22_53)))
 (let ((?x144713 (* 2.0 l_0_22_43)))
 (let ((?x144773 (* ?x144713 l_0_22_52)))
 (let ((?x146290 (* l_0_22_298 l_0_22_298)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146402 (* ?x146337 l_0_22_307)))
 (let ((?x146288 (* l_0_22_297 l_0_22_297)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146400 (* ?x146334 l_0_22_306)))
 (let ((?x146286 (* l_0_22_296 l_0_22_296)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146398 (* ?x146331 l_0_22_305)))
 (let ((?x146284 (* l_0_22_295 l_0_22_295)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146396 (* ?x146328 l_0_22_304)))
 (let ((?x144637 (* l_0_22_190 l_0_22_190)))
 (let ((?x144635 (* l_0_22_189 l_0_22_189)))
 (let ((?x144633 (* l_0_22_188 l_0_22_188)))
 (let ((?x144631 (* l_0_22_187 l_0_22_187)))
 (let ((?x144479 (* 2.0 l_0_22_18)))
 (let ((?x144763 (* ?x144479 l_0_22_9)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x144761 (* ?x144083 l_0_22_8)))
 (let ((?x144080 (* 2.0 l_0_22_16)))
 (let ((?x144759 (* ?x144080 l_0_22_7)))
 (let ((?x144629 (* l_0_22_154 l_0_22_154)))
 (let ((?x144627 (* l_0_22_153 l_0_22_153)))
 (let ((?x100242 (* l_0_22_152 l_0_22_152)))
 (let ((?x122787 (* l_0_22_151 l_0_22_151)))
 (let ((?x124487 (+ (+ (+ (+ (* (* 2.0 l_0_22_10) l_0_22_19) ?x122787) ?x100242) ?x144627) ?x144629)))
 (let ((?x147532 (- (- (- (- (+ (+ (+ ?x124487 ?x144759) ?x144761) ?x144763) ?x144631) ?x144633) ?x144635) ?x144637)))
 (let ((?x147539 (+ (- (+ (- (+ (- (+ ?x147532 ?x146396) ?x146284) ?x146398) ?x146286) ?x146400) ?x146288) ?x146402)))
 (= (- (- (- (- (- ?x147539 ?x146290) ?x144773) ?x144775) ?x144777) ?x144779) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x144722 (* 2.0 l_0_22_46)))
 (let ((?x144857 (* ?x144722 l_0_22_61)))
 (let ((?x144719 (* 2.0 l_0_22_45)))
 (let ((?x144855 (* ?x144719 l_0_22_60)))
 (let ((?x144716 (* 2.0 l_0_22_44)))
 (let ((?x144853 (* ?x144716 l_0_22_59)))
 (let ((?x144713 (* 2.0 l_0_22_43)))
 (let ((?x144851 (* ?x144713 l_0_22_58)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146462 (* ?x146337 l_0_22_313)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146460 (* ?x146334 l_0_22_312)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146458 (* ?x146331 l_0_22_311)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146456 (* ?x146328 l_0_22_310)))
 (let ((?x147516 (* l_0_22_262 l_0_22_262)))
 (let ((?x147514 (* l_0_22_261 l_0_22_261)))
 (let ((?x147512 (* l_0_22_260 l_0_22_260)))
 (let ((?x147510 (* l_0_22_259 l_0_22_259)))
 (let ((?x144558 (* 2.0 l_0_22_24)))
 (let ((?x144849 (* ?x144558 l_0_22_9)))
 (let ((?x144189 (* 2.0 l_0_22_23)))
 (let ((?x144847 (* ?x144189 l_0_22_8)))
 (let ((?x144553 (* 2.0 l_0_22_22)))
 (let ((?x144845 (* ?x144553 l_0_22_7)))
 (let ((?x147547 (- (+ (+ (+ (* (* 2.0 l_0_22_10) l_0_22_25) ?x144845) ?x144847) ?x144849) ?x147510)))
 (let ((?x147554 (+ (+ (+ (+ (- (- (- ?x147547 ?x147512) ?x147514) ?x147516) ?x146456) ?x146458) ?x146460) ?x146462)))
 (= (- (- (- (- ?x147554 ?x144851) ?x144853) ?x144855) ?x144857) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x144722 (* 2.0 l_0_22_46)))
 (let ((?x144977 (* ?x144722 l_0_22_68)))
 (let ((?x144719 (* 2.0 l_0_22_45)))
 (let ((?x144975 (* ?x144719 l_0_22_67)))
 (let ((?x144716 (* 2.0 l_0_22_44)))
 (let ((?x144973 (* ?x144716 l_0_22_66)))
 (let ((?x144713 (* 2.0 l_0_22_43)))
 (let ((?x144971 (* ?x144713 l_0_22_65)))
 (let ((?x143937 (* 2.0 l_0_22_31)))
 (let ((?x144969 (* ?x143937 l_0_22_9)))
 (let ((?x143934 (* 2.0 l_0_22_30)))
 (let ((?x144967 (* ?x143934 l_0_22_8)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146538 (* ?x146337 l_0_22_320)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146536 (* ?x146334 l_0_22_319)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146534 (* ?x146331 l_0_22_318)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146532 (* ?x146328 l_0_22_317)))
 (let ((?x143926 (* 2.0 l_0_22_29)))
 (let ((?x144965 (* ?x143926 l_0_22_7)))
 (let ((?x124552 (* l_0_22_226 l_0_22_226)))
 (let ((?x124608 (* l_0_22_225 l_0_22_225)))
 (let ((?x102899 (* l_0_22_224 l_0_22_224)))
 (let ((?x124614 (* l_0_22_223 l_0_22_223)))
 (let ((?x124555 (- (- (- (- (* (* 2.0 l_0_22_10) l_0_22_32) ?x124614) ?x102899) ?x124608) ?x124552)))
 (let ((?x60769 (+ (+ (+ (+ (+ (+ (+ ?x124555 ?x144965) ?x146532) ?x146534) ?x146536) ?x146538) ?x144967) ?x144969)))
 (= (- (- (- (- ?x60769 ?x144971) ?x144973) ?x144975) ?x144977) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x145033 (* l_0_22_51 l_0_22_51)))
 (let ((?x145031 (* l_0_22_50 l_0_22_50)))
 (let ((?x145029 (* l_0_22_49 l_0_22_49)))
 (let ((?x145027 (* l_0_22_48 l_0_22_48)))
 (let ((?x145025 (* l_0_22_47 l_0_22_47)))
 (let ((?x147589 (* l_0_22_303 l_0_22_303)))
 (let ((?x147587 (* l_0_22_302 l_0_22_302)))
 (let ((?x147585 (* l_0_22_301 l_0_22_301)))
 (let ((?x147583 (* l_0_22_300 l_0_22_300)))
 (let ((?x147581 (* l_0_22_299 l_0_22_299)))
 (let ((?x147578 (* 2.0 l_0_22_262)))
 (let ((?x147579 (* ?x147578 l_0_22_266)))
 (let ((?x124661 (* 2.0 l_0_22_261)))
 (let ((?x60802 (* ?x124661 l_0_22_265)))
 (let ((?x124663 (* 2.0 l_0_22_260)))
 (let ((?x124662 (* ?x124663 l_0_22_264)))
 (let ((?x57935 (* 2.0 l_0_22_259)))
 (let ((?x103010 (* ?x57935 l_0_22_263)))
 (let ((?x145003 (* l_0_22_15 l_0_22_15)))
 (let ((?x145001 (* l_0_22_14 l_0_22_14)))
 (let ((?x144999 (* l_0_22_13 l_0_22_13)))
 (let ((?x103008 (+ (+ (+ (* l_0_22_11 l_0_22_11) (* l_0_22_12 l_0_22_12)) ?x144999) ?x145001)))
 (let ((?x147584 (+ (+ (+ (+ (+ (+ (+ ?x103008 ?x145003) ?x103010) ?x124662) ?x60802) ?x147579) ?x147581) ?x147583)))
 (let ((?x147594 (- (- (- (- (+ (+ (+ ?x147584 ?x147585) ?x147587) ?x147589) ?x145025) ?x145027) ?x145029) ?x145031)))
 (= (- ?x147594 ?x145033) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x145113 (* 2.0 l_0_22_51)))
 (let ((?x145114 (* ?x145113 l_0_22_56)))
 (let ((?x145110 (* 2.0 l_0_22_50)))
 (let ((?x145111 (* ?x145110 l_0_22_55)))
 (let ((?x145107 (* 2.0 l_0_22_49)))
 (let ((?x145108 (* ?x145107 l_0_22_54)))
 (let ((?x145104 (* 2.0 l_0_22_48)))
 (let ((?x145105 (* ?x145104 l_0_22_53)))
 (let ((?x145101 (* 2.0 l_0_22_47)))
 (let ((?x145102 (* ?x145101 l_0_22_52)))
 (let ((?x147637 (* 2.0 l_0_22_303)))
 (let ((?x147638 (* ?x147637 l_0_22_308)))
 (let ((?x147634 (* 2.0 l_0_22_302)))
 (let ((?x147635 (* ?x147634 l_0_22_307)))
 (let ((?x147631 (* 2.0 l_0_22_301)))
 (let ((?x147632 (* ?x147631 l_0_22_306)))
 (let ((?x147628 (* 2.0 l_0_22_300)))
 (let ((?x147629 (* ?x147628 l_0_22_305)))
 (let ((?x147625 (* 2.0 l_0_22_299)))
 (let ((?x147626 (* ?x147625 l_0_22_304)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146338 (* ?x146337 l_0_22_302)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146335 (* ?x146334 l_0_22_301)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146332 (* ?x146331 l_0_22_300)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146329 (* ?x146328 l_0_22_299)))
 (let ((?x147578 (* 2.0 l_0_22_262)))
 (let ((?x147619 (* ?x147578 l_0_22_271)))
 (let ((?x124661 (* 2.0 l_0_22_261)))
 (let ((?x147617 (* ?x124661 l_0_22_270)))
 (let ((?x124663 (* 2.0 l_0_22_260)))
 (let ((?x147615 (* ?x124663 l_0_22_269)))
 (let ((?x57935 (* 2.0 l_0_22_259)))
 (let ((?x147613 (* ?x57935 l_0_22_268)))
 (let ((?x144710 (* 2.0 l_0_22_190)))
 (let ((?x144711 (* ?x144710 l_0_22_194)))
 (let ((?x144707 (* 2.0 l_0_22_189)))
 (let ((?x144708 (* ?x144707 l_0_22_193)))
 (let ((?x144704 (* 2.0 l_0_22_188)))
 (let ((?x144705 (* ?x144704 l_0_22_192)))
 (let ((?x144701 (* 2.0 l_0_22_187)))
 (let ((?x144702 (* ?x144701 l_0_22_191)))
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144699 (* ?x144698 l_0_22_158)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144696 (* ?x144695 l_0_22_157)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144693 (* ?x144692 l_0_22_156)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144690 (* ?x144689 l_0_22_155)))
 (let ((?x145068 (* 2.0 l_0_22_15)))
 (let ((?x145069 (* ?x145068 l_0_22_20)))
 (let ((?x145065 (* 2.0 l_0_22_14)))
 (let ((?x145066 (* ?x145065 l_0_22_19)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x145063 (* ?x144413 l_0_22_18)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x145061 (* ?x144001 l_0_22_17)))
 (let ((?x124692 (+ (+ (+ (+ (* (* 2.0 l_0_22_11) l_0_22_16) ?x145061) ?x145063) ?x145066) ?x145069)))
 (let ((?x147611 (- (- (- (+ (+ (+ (+ ?x124692 ?x144690) ?x144693) ?x144696) ?x144699) ?x144702) ?x144705) ?x144708)))
 (let ((?x147622 (- (- (+ (+ (+ (+ (- ?x147611 ?x144711) ?x147613) ?x147615) ?x147617) ?x147619) ?x146329) ?x146332)))
 (let ((?x147639 (+ (+ (+ (+ (+ (- (- ?x147622 ?x146335) ?x146338) ?x147626) ?x147629) ?x147632) ?x147635) ?x147638)))
 (= (- (- (- (- (- ?x147639 ?x145102) ?x145105) ?x145108) ?x145111) ?x145114) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145113 (* 2.0 l_0_22_51)))
 (let ((?x145186 (* ?x145113 l_0_22_62)))
 (let ((?x145110 (* 2.0 l_0_22_50)))
 (let ((?x145184 (* ?x145110 l_0_22_61)))
 (let ((?x145107 (* 2.0 l_0_22_49)))
 (let ((?x145182 (* ?x145107 l_0_22_60)))
 (let ((?x145104 (* 2.0 l_0_22_48)))
 (let ((?x145180 (* ?x145104 l_0_22_59)))
 (let ((?x145101 (* 2.0 l_0_22_47)))
 (let ((?x145178 (* ?x145101 l_0_22_58)))
 (let ((?x147637 (* 2.0 l_0_22_303)))
 (let ((?x147658 (* ?x147637 l_0_22_314)))
 (let ((?x147634 (* 2.0 l_0_22_302)))
 (let ((?x147656 (* ?x147634 l_0_22_313)))
 (let ((?x147631 (* 2.0 l_0_22_301)))
 (let ((?x147654 (* ?x147631 l_0_22_312)))
 (let ((?x147628 (* 2.0 l_0_22_300)))
 (let ((?x147652 (* ?x147628 l_0_22_311)))
 (let ((?x147625 (* 2.0 l_0_22_299)))
 (let ((?x147650 (* ?x147625 l_0_22_310)))
 (let ((?x147578 (* 2.0 l_0_22_262)))
 (let ((?x147648 (* ?x147578 l_0_22_277)))
 (let ((?x147579 (* ?x147578 l_0_22_266)))
 (let ((?x124661 (* 2.0 l_0_22_261)))
 (let ((?x34346 (* ?x124661 l_0_22_276)))
 (let ((?x60802 (* ?x124661 l_0_22_265)))
 (let ((?x124663 (* 2.0 l_0_22_260)))
 (let ((?x124689 (* ?x124663 l_0_22_275)))
 (let ((?x124662 (* ?x124663 l_0_22_264)))
 (let ((?x57935 (* 2.0 l_0_22_259)))
 (let ((?x103201 (* ?x57935 l_0_22_274)))
 (let ((?x103010 (* ?x57935 l_0_22_263)))
 (let ((?x145068 (* 2.0 l_0_22_15)))
 (let ((?x145155 (* ?x145068 l_0_22_26)))
 (let ((?x145065 (* 2.0 l_0_22_14)))
 (let ((?x145151 (* ?x145065 l_0_22_25)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x145149 (* ?x144413 l_0_22_24)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x145147 (* ?x144001 l_0_22_23)))
 (let ((?x103195 (+ (+ (+ (+ (* (* 2.0 l_0_22_11) l_0_22_22) ?x145147) ?x145149) ?x145151) ?x145155)))
 (let ((?x147647 (- (+ (- (+ (- (+ (- ?x103195 ?x103010) ?x103201) ?x124662) ?x124689) ?x60802) ?x34346) ?x147579)))
 (let ((?x147660 (- (+ (+ (+ (+ (+ (+ ?x147647 ?x147648) ?x147650) ?x147652) ?x147654) ?x147656) ?x147658) ?x145178)))
 (= (- (- (- (- ?x147660 ?x145180) ?x145182) ?x145184) ?x145186) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145113 (* 2.0 l_0_22_51)))
 (let ((?x145293 (* ?x145113 l_0_22_69)))
 (let ((?x145110 (* 2.0 l_0_22_50)))
 (let ((?x145291 (* ?x145110 l_0_22_68)))
 (let ((?x145107 (* 2.0 l_0_22_49)))
 (let ((?x145289 (* ?x145107 l_0_22_67)))
 (let ((?x145104 (* 2.0 l_0_22_48)))
 (let ((?x145287 (* ?x145104 l_0_22_66)))
 (let ((?x145101 (* 2.0 l_0_22_47)))
 (let ((?x145285 (* ?x145101 l_0_22_65)))
 (let ((?x147637 (* 2.0 l_0_22_303)))
 (let ((?x147712 (* ?x147637 l_0_22_321)))
 (let ((?x147634 (* 2.0 l_0_22_302)))
 (let ((?x147710 (* ?x147634 l_0_22_320)))
 (let ((?x147631 (* 2.0 l_0_22_301)))
 (let ((?x147708 (* ?x147631 l_0_22_319)))
 (let ((?x147628 (* 2.0 l_0_22_300)))
 (let ((?x147706 (* ?x147628 l_0_22_318)))
 (let ((?x147625 (* 2.0 l_0_22_299)))
 (let ((?x147704 (* ?x147625 l_0_22_317)))
 (let ((?x147578 (* 2.0 l_0_22_262)))
 (let ((?x147702 (* ?x147578 l_0_22_284)))
 (let ((?x124661 (* 2.0 l_0_22_261)))
 (let ((?x147700 (* ?x124661 l_0_22_283)))
 (let ((?x124663 (* 2.0 l_0_22_260)))
 (let ((?x147698 (* ?x124663 l_0_22_282)))
 (let ((?x57935 (* 2.0 l_0_22_259)))
 (let ((?x147696 (* ?x57935 l_0_22_281)))
 (let ((?x145068 (* 2.0 l_0_22_15)))
 (let ((?x145263 (* ?x145068 l_0_22_33)))
 (let ((?x145065 (* 2.0 l_0_22_14)))
 (let ((?x145261 (* ?x145065 l_0_22_32)))
 (let ((?x144413 (* 2.0 l_0_22_13)))
 (let ((?x145259 (* ?x144413 l_0_22_31)))
 (let ((?x144001 (* 2.0 l_0_22_12)))
 (let ((?x145257 (* ?x144001 l_0_22_30)))
 (let ((?x125059 (+ (+ (+ (+ (* (* 2.0 l_0_22_11) l_0_22_29) ?x145257) ?x145259) ?x145261) ?x145263)))
 (let ((?x147689 (- (- ?x125059 (* (* 2.0 l_0_22_223) l_0_22_227)) (* (* 2.0 l_0_22_224) l_0_22_228))))
 (let ((?x147695 (- (- ?x147689 (* (* 2.0 l_0_22_225) l_0_22_229)) (* (* 2.0 l_0_22_226) l_0_22_230))))
 (let ((?x147709 (+ (+ (+ (+ (+ (+ (+ ?x147695 ?x147696) ?x147698) ?x147700) ?x147702) ?x147704) ?x147706) ?x147708)))
 (let ((?x147718 (- (- (- (- (- (+ (+ ?x147709 ?x147710) ?x147712) ?x145285) ?x145287) ?x145289) ?x145291) ?x145293)))
 (= ?x147718 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145400 (* l_0_22_57 l_0_22_57)))
 (let ((?x145398 (* l_0_22_56 l_0_22_56)))
 (let ((?x145396 (* l_0_22_55 l_0_22_55)))
 (let ((?x145394 (* l_0_22_54 l_0_22_54)))
 (let ((?x145392 (* l_0_22_53 l_0_22_53)))
 (let ((?x145390 (* l_0_22_52 l_0_22_52)))
 (let ((?x147782 (* l_0_22_309 l_0_22_309)))
 (let ((?x147780 (* l_0_22_308 l_0_22_308)))
 (let ((?x147778 (* l_0_22_307 l_0_22_307)))
 (let ((?x147776 (* l_0_22_306 l_0_22_306)))
 (let ((?x147774 (* l_0_22_305 l_0_22_305)))
 (let ((?x147772 (* l_0_22_304 l_0_22_304)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146402 (* ?x146337 l_0_22_307)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146400 (* ?x146334 l_0_22_306)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146398 (* ?x146331 l_0_22_305)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146396 (* ?x146328 l_0_22_304)))
 (let ((?x145388 (* l_0_22_21 l_0_22_21)))
 (let ((?x145382 (* l_0_22_20 l_0_22_20)))
 (let ((?x144710 (* 2.0 l_0_22_190)))
 (let ((?x144771 (* ?x144710 l_0_22_199)))
 (let ((?x145372 (* l_0_22_19 l_0_22_19)))
 (let ((?x144707 (* 2.0 l_0_22_189)))
 (let ((?x144769 (* ?x144707 l_0_22_198)))
 (let ((?x144704 (* 2.0 l_0_22_188)))
 (let ((?x144767 (* ?x144704 l_0_22_197)))
 (let ((?x144701 (* 2.0 l_0_22_187)))
 (let ((?x144765 (* ?x144701 l_0_22_196)))
 (let ((?x145370 (* l_0_22_18 l_0_22_18)))
 (let ((?x145368 (* l_0_22_17 l_0_22_17)))
 (let ((?x145404 (* l_0_22_16 l_0_22_16)))
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144746 (* ?x144698 l_0_22_163)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144742 (* ?x144695 l_0_22_162)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144738 (* ?x144692 l_0_22_161)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144734 (* ?x144689 l_0_22_160)))
 (let ((?x147761 (- (+ (+ (+ (+ (+ (+ ?x144734 ?x144738) ?x144742) ?x144746) ?x145404) ?x145368) ?x145370) ?x144765)))
 (let ((?x147768 (- (+ (+ (- (+ (- (- ?x147761 ?x144767) ?x144769) ?x145372) ?x144771) ?x145382) ?x145388) ?x146396)))
 (let ((?x147779 (+ (+ (+ (+ (- (- (- ?x147768 ?x146398) ?x146400) ?x146402) ?x147772) ?x147774) ?x147776) ?x147778)))
 (let ((?x147788 (- (- (- (- (- (+ (+ ?x147779 ?x147780) ?x147782) ?x145390) ?x145392) ?x145394) ?x145396) ?x145398)))
 (= (- ?x147788 ?x145400) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145524 (* 2.0 l_0_22_57)))
 (let ((?x145525 (* ?x145524 l_0_22_63)))
 (let ((?x145521 (* 2.0 l_0_22_56)))
 (let ((?x145522 (* ?x145521 l_0_22_62)))
 (let ((?x145518 (* 2.0 l_0_22_55)))
 (let ((?x145519 (* ?x145518 l_0_22_61)))
 (let ((?x145515 (* 2.0 l_0_22_54)))
 (let ((?x145516 (* ?x145515 l_0_22_60)))
 (let ((?x145512 (* 2.0 l_0_22_53)))
 (let ((?x145513 (* ?x145512 l_0_22_59)))
 (let ((?x145509 (* 2.0 l_0_22_52)))
 (let ((?x145510 (* ?x145509 l_0_22_58)))
 (let ((?x147816 (* 2.0 l_0_22_309)))
 (let ((?x147817 (* ?x147816 l_0_22_315)))
 (let ((?x147813 (* 2.0 l_0_22_308)))
 (let ((?x147814 (* ?x147813 l_0_22_314)))
 (let ((?x147810 (* 2.0 l_0_22_307)))
 (let ((?x147811 (* ?x147810 l_0_22_313)))
 (let ((?x147807 (* 2.0 l_0_22_306)))
 (let ((?x147808 (* ?x147807 l_0_22_312)))
 (let ((?x147804 (* 2.0 l_0_22_305)))
 (let ((?x147805 (* ?x147804 l_0_22_311)))
 (let ((?x147801 (* 2.0 l_0_22_304)))
 (let ((?x147802 (* ?x147801 l_0_22_310)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146462 (* ?x146337 l_0_22_313)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146460 (* ?x146334 l_0_22_312)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146458 (* ?x146331 l_0_22_311)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146456 (* ?x146328 l_0_22_310)))
 (let ((?x147578 (* 2.0 l_0_22_262)))
 (let ((?x147619 (* ?x147578 l_0_22_271)))
 (let ((?x124661 (* 2.0 l_0_22_261)))
 (let ((?x147617 (* ?x124661 l_0_22_270)))
 (let ((?x124663 (* 2.0 l_0_22_260)))
 (let ((?x147615 (* ?x124663 l_0_22_269)))
 (let ((?x57935 (* 2.0 l_0_22_259)))
 (let ((?x147613 (* ?x57935 l_0_22_268)))
 (let ((?x145506 (* 2.0 l_0_22_21)))
 (let ((?x145507 (* ?x145506 l_0_22_27)))
 (let ((?x145497 (* 2.0 l_0_22_20)))
 (let ((?x145498 (* ?x145497 l_0_22_26)))
 (let ((?x144710 (* 2.0 l_0_22_190)))
 (let ((?x144843 (* ?x144710 l_0_22_205)))
 (let ((?x145482 (* 2.0 l_0_22_19)))
 (let ((?x145483 (* ?x145482 l_0_22_25)))
 (let ((?x144707 (* 2.0 l_0_22_189)))
 (let ((?x144841 (* ?x144707 l_0_22_204)))
 (let ((?x144704 (* 2.0 l_0_22_188)))
 (let ((?x144839 (* ?x144704 l_0_22_203)))
 (let ((?x144701 (* 2.0 l_0_22_187)))
 (let ((?x144837 (* ?x144701 l_0_22_202)))
 (let ((?x144479 (* 2.0 l_0_22_18)))
 (let ((?x145480 (* ?x144479 l_0_22_24)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x145478 (* ?x144083 l_0_22_23)))
 (let ((?x144080 (* 2.0 l_0_22_16)))
 (let ((?x145458 (* ?x144080 l_0_22_22)))
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144835 (* ?x144698 l_0_22_169)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144833 (* ?x144695 l_0_22_168)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144831 (* ?x144692 l_0_22_167)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144829 (* ?x144689 l_0_22_166)))
 (let ((?x125099 (- (+ (+ (+ (+ (+ (+ ?x144829 ?x144831) ?x144833) ?x144835) ?x145458) ?x145478) ?x145480) ?x144837)))
 (let ((?x147793 (- (+ (+ (- (+ (- (- ?x125099 ?x144839) ?x144841) ?x145483) ?x144843) ?x145498) ?x145507) ?x147613)))
 (let ((?x147800 (- (- (- (- (- (- (- ?x147793 ?x147615) ?x147617) ?x147619) ?x146456) ?x146458) ?x146460) ?x146462)))
 (let ((?x147819 (- (+ (+ (+ (+ (+ (+ ?x147800 ?x147802) ?x147805) ?x147808) ?x147811) ?x147814) ?x147817) ?x145510)))
 (= (- (- (- (- (- ?x147819 ?x145513) ?x145516) ?x145519) ?x145522) ?x145525) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145524 (* 2.0 l_0_22_57)))
 (let ((?x145658 (* ?x145524 l_0_22_70)))
 (let ((?x145521 (* 2.0 l_0_22_56)))
 (let ((?x145656 (* ?x145521 l_0_22_69)))
 (let ((?x145518 (* 2.0 l_0_22_55)))
 (let ((?x145654 (* ?x145518 l_0_22_68)))
 (let ((?x145515 (* 2.0 l_0_22_54)))
 (let ((?x145652 (* ?x145515 l_0_22_67)))
 (let ((?x145512 (* 2.0 l_0_22_53)))
 (let ((?x145650 (* ?x145512 l_0_22_66)))
 (let ((?x145509 (* 2.0 l_0_22_52)))
 (let ((?x145648 (* ?x145509 l_0_22_65)))
 (let ((?x147816 (* 2.0 l_0_22_309)))
 (let ((?x147854 (* ?x147816 l_0_22_322)))
 (let ((?x147813 (* 2.0 l_0_22_308)))
 (let ((?x147852 (* ?x147813 l_0_22_321)))
 (let ((?x147810 (* 2.0 l_0_22_307)))
 (let ((?x147850 (* ?x147810 l_0_22_320)))
 (let ((?x147807 (* 2.0 l_0_22_306)))
 (let ((?x147848 (* ?x147807 l_0_22_319)))
 (let ((?x147804 (* 2.0 l_0_22_305)))
 (let ((?x147846 (* ?x147804 l_0_22_318)))
 (let ((?x147801 (* 2.0 l_0_22_304)))
 (let ((?x147844 (* ?x147801 l_0_22_317)))
 (let ((?x146337 (* 2.0 l_0_22_298)))
 (let ((?x146538 (* ?x146337 l_0_22_320)))
 (let ((?x146334 (* 2.0 l_0_22_297)))
 (let ((?x146536 (* ?x146334 l_0_22_319)))
 (let ((?x146331 (* 2.0 l_0_22_296)))
 (let ((?x146534 (* ?x146331 l_0_22_318)))
 (let ((?x146328 (* 2.0 l_0_22_295)))
 (let ((?x146532 (* ?x146328 l_0_22_317)))
 (let ((?x145506 (* 2.0 l_0_22_21)))
 (let ((?x145646 (* ?x145506 l_0_22_34)))
 (let ((?x145497 (* 2.0 l_0_22_20)))
 (let ((?x145640 (* ?x145497 l_0_22_33)))
 (let ((?x144710 (* 2.0 l_0_22_190)))
 (let ((?x144963 (* ?x144710 l_0_22_212)))
 (let ((?x145482 (* 2.0 l_0_22_19)))
 (let ((?x145630 (* ?x145482 l_0_22_32)))
 (let ((?x144707 (* 2.0 l_0_22_189)))
 (let ((?x144961 (* ?x144707 l_0_22_211)))
 (let ((?x144704 (* 2.0 l_0_22_188)))
 (let ((?x144959 (* ?x144704 l_0_22_210)))
 (let ((?x144701 (* 2.0 l_0_22_187)))
 (let ((?x144957 (* ?x144701 l_0_22_209)))
 (let ((?x144479 (* 2.0 l_0_22_18)))
 (let ((?x145628 (* ?x144479 l_0_22_31)))
 (let ((?x144083 (* 2.0 l_0_22_17)))
 (let ((?x145626 (* ?x144083 l_0_22_30)))
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144955 (* ?x144698 l_0_22_176)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144953 (* ?x144695 l_0_22_175)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144951 (* ?x144692 l_0_22_174)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144949 (* ?x144689 l_0_22_173)))
 (let ((?x103906 (+ (+ (+ (+ ?x144949 ?x144951) ?x144953) ?x144955) (* (* 2.0 l_0_22_16) l_0_22_29))))
 (let ((?x147829 (- (+ (- (- (- (+ (+ ?x103906 ?x145626) ?x145628) ?x144957) ?x144959) ?x144961) ?x145630) ?x144963)))
 (let ((?x147835 (- (- (+ (+ ?x147829 ?x145640) ?x145646) (* (* 2.0 l_0_22_223) l_0_22_232)) (* (* 2.0 l_0_22_224) l_0_22_233))))
 (let ((?x147839 (- (- ?x147835 (* (* 2.0 l_0_22_225) l_0_22_234)) (* (* 2.0 l_0_22_226) l_0_22_235))))
 (let ((?x147849 (+ (+ (+ (- (- (- (- ?x147839 ?x146532) ?x146534) ?x146536) ?x146538) ?x147844) ?x147846) ?x147848)))
 (let ((?x147859 (- (- (- (- (+ (+ (+ ?x147849 ?x147850) ?x147852) ?x147854) ?x145648) ?x145650) ?x145652) ?x145654)))
 (= (- (- ?x147859 ?x145656) ?x145658) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x145790 (* l_0_22_64 l_0_22_64)))
 (let ((?x145788 (* l_0_22_63 l_0_22_63)))
 (let ((?x145786 (* l_0_22_62 l_0_22_62)))
 (let ((?x145784 (* l_0_22_61 l_0_22_61)))
 (let ((?x145782 (* l_0_22_60 l_0_22_60)))
 (let ((?x145780 (* l_0_22_59 l_0_22_59)))
 (let ((?x145778 (* l_0_22_58 l_0_22_58)))
 (let ((?x147882 (* l_0_22_316 l_0_22_316)))
 (let ((?x104154 (* l_0_22_315 l_0_22_315)))
 (let ((?x125265 (* l_0_22_314 l_0_22_314)))
 (let ((?x125248 (* l_0_22_313 l_0_22_313)))
 (let ((?x125262 (* l_0_22_312 l_0_22_312)))
 (let ((?x34925 (* l_0_22_311 l_0_22_311)))
 (let ((?x81540 (* l_0_22_310 l_0_22_310)))
 (let ((?x145776 (* l_0_22_28 l_0_22_28)))
 (let ((?x145774 (* l_0_22_27 l_0_22_27)))
 (let ((?x147578 (* 2.0 l_0_22_262)))
 (let ((?x147648 (* ?x147578 l_0_22_277)))
 (let ((?x124661 (* 2.0 l_0_22_261)))
 (let ((?x34346 (* ?x124661 l_0_22_276)))
 (let ((?x124663 (* 2.0 l_0_22_260)))
 (let ((?x124689 (* ?x124663 l_0_22_275)))
 (let ((?x145772 (* l_0_22_26 l_0_22_26)))
 (let ((?x57935 (* 2.0 l_0_22_259)))
 (let ((?x103201 (* ?x57935 l_0_22_274)))
 (let ((?x145770 (* l_0_22_25 l_0_22_25)))
 (let ((?x145768 (* l_0_22_24 l_0_22_24)))
 (let ((?x125345 (+ (+ (+ (* l_0_22_22 l_0_22_22) (* l_0_22_23 l_0_22_23)) ?x145768) ?x145770)))
 (let ((?x81620 (+ (+ (- (- (- (+ (- ?x125345 ?x103201) ?x145772) ?x124689) ?x34346) ?x147648) ?x145774) ?x145776)))
 (let ((?x147883 (+ (+ (+ (+ (+ (+ (+ ?x81620 ?x81540) ?x34925) ?x125262) ?x125248) ?x125265) ?x104154) ?x147882)))
 (let ((?x147890 (- (- (- (- (- (- (- ?x147883 ?x145778) ?x145780) ?x145782) ?x145784) ?x145786) ?x145788) ?x145790)))
 (= ?x147890 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x145928 (* (* 2.0 l_0_22_64) l_0_22_71)))
 (let ((?x145925 (* (* 2.0 l_0_22_63) l_0_22_70)))
 (let ((?x145922 (* (* 2.0 l_0_22_62) l_0_22_69)))
 (let ((?x145919 (* (* 2.0 l_0_22_61) l_0_22_68)))
 (let ((?x145916 (* (* 2.0 l_0_22_60) l_0_22_67)))
 (let ((?x145913 (* (* 2.0 l_0_22_59) l_0_22_66)))
 (let ((?x145910 (* (* 2.0 l_0_22_58) l_0_22_65)))
 (let ((?x147927 (* (* 2.0 l_0_22_316) l_0_22_323)))
 (let ((?x147924 (* (* 2.0 l_0_22_315) l_0_22_322)))
 (let ((?x147921 (* (* 2.0 l_0_22_314) l_0_22_321)))
 (let ((?x147918 (* (* 2.0 l_0_22_313) l_0_22_320)))
 (let ((?x147915 (* (* 2.0 l_0_22_312) l_0_22_319)))
 (let ((?x147912 (* (* 2.0 l_0_22_311) l_0_22_318)))
 (let ((?x147909 (* (* 2.0 l_0_22_310) l_0_22_317)))
 (let ((?x145907 (* (* 2.0 l_0_22_28) l_0_22_35)))
 (let ((?x145904 (* (* 2.0 l_0_22_27) l_0_22_34)))
 (let ((?x147578 (* 2.0 l_0_22_262)))
 (let ((?x147702 (* ?x147578 l_0_22_284)))
 (let ((?x124661 (* 2.0 l_0_22_261)))
 (let ((?x147700 (* ?x124661 l_0_22_283)))
 (let ((?x124663 (* 2.0 l_0_22_260)))
 (let ((?x147698 (* ?x124663 l_0_22_282)))
 (let ((?x145901 (* (* 2.0 l_0_22_26) l_0_22_33)))
 (let ((?x57935 (* 2.0 l_0_22_259)))
 (let ((?x147696 (* ?x57935 l_0_22_281)))
 (let ((?x145898 (* (* 2.0 l_0_22_25) l_0_22_32)))
 (let ((?x144558 (* 2.0 l_0_22_24)))
 (let ((?x145895 (* ?x144558 l_0_22_31)))
 (let ((?x144189 (* 2.0 l_0_22_23)))
 (let ((?x145893 (* ?x144189 l_0_22_30)))
 (let ((?x144553 (* 2.0 l_0_22_22)))
 (let ((?x145891 (* ?x144553 l_0_22_29)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x143909 (* ?x143854 l_0_22_152)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x29180 (* ?x144004 l_0_22_151)))
 (let ((?x104303 (+ (* (* 1.0 l_0_22_110) l_0_22_115) (* (* 1.0 l_0_22_111) l_0_22_116))))
 (let ((?x125445 (- (+ (- (- ?x104303 ?x29180) ?x143909) ?x145891) (* (* 2.0 l_0_22_223) l_0_22_238))))
 (let ((?x147895 (- (- ?x125445 (* (* 2.0 l_0_22_224) l_0_22_239)) (* (* 2.0 l_0_22_225) l_0_22_240))))
 (let ((?x147900 (+ (+ (+ (- ?x147895 (* (* 2.0 l_0_22_226) l_0_22_241)) ?x145893) ?x145895) ?x145898)))
 (let ((?x147907 (+ (+ (- (- (- (+ (- ?x147900 ?x147696) ?x145901) ?x147698) ?x147700) ?x147702) ?x145904) ?x145907)))
 (let ((?x147928 (+ (+ (+ (+ (+ (+ (+ ?x147907 ?x147909) ?x147912) ?x147915) ?x147918) ?x147921) ?x147924) ?x147927)))
 (let ((?x147935 (- (- (- (- (- (- (- ?x147928 ?x145910) ?x145913) ?x145916) ?x145919) ?x145922) ?x145925) ?x145928)))
 (let ((?x147939 (- (- ?x147935 (* (* 1.0 l_0_22_74) l_0_22_79)) (* (* 1.0 l_0_22_75) l_0_22_80))))
 (= ?x147939 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x146079 (* l_0_22_72 l_0_22_72)))
 (let ((?x146077 (* l_0_22_71 l_0_22_71)))
 (let ((?x146075 (* l_0_22_70 l_0_22_70)))
 (let ((?x146073 (* l_0_22_69 l_0_22_69)))
 (let ((?x146071 (* l_0_22_68 l_0_22_68)))
 (let ((?x146069 (* l_0_22_67 l_0_22_67)))
 (let ((?x146067 (* l_0_22_66 l_0_22_66)))
 (let ((?x146065 (* l_0_22_65 l_0_22_65)))
 (let ((?x146063 (* l_0_22_36 l_0_22_36)))
 (let ((?x146061 (* l_0_22_35 l_0_22_35)))
 (let ((?x146059 (* l_0_22_34 l_0_22_34)))
 (let ((?x146057 (* l_0_22_33 l_0_22_33)))
 (let ((?x147975 (* l_0_22_324 l_0_22_324)))
 (let ((?x147973 (* l_0_22_323 l_0_22_323)))
 (let ((?x147971 (* l_0_22_322 l_0_22_322)))
 (let ((?x147969 (* l_0_22_321 l_0_22_321)))
 (let ((?x147967 (* l_0_22_320 l_0_22_320)))
 (let ((?x146055 (* l_0_22_32 l_0_22_32)))
 (let ((?x147964 (* l_0_22_319 l_0_22_319)))
 (let ((?x147962 (* l_0_22_318 l_0_22_318)))
 (let ((?x147960 (* l_0_22_317 l_0_22_317)))
 (let ((?x146053 (* l_0_22_31 l_0_22_31)))
 (let ((?x146051 (* l_0_22_30 l_0_22_30)))
 (let ((?x146049 (* l_0_22_29 l_0_22_29)))
 (let ((?x125778 (- (* (* (- 2.0) l_0_22_223) l_0_22_245) (* (* 2.0 l_0_22_224) l_0_22_246))))
 (let ((?x81871 (- (- ?x125778 (* (* 2.0 l_0_22_225) l_0_22_247)) (* (* 2.0 l_0_22_226) l_0_22_248))))
 (let ((?x147966 (+ (+ (+ (+ (+ (+ (+ ?x81871 ?x146049) ?x146051) ?x146053) ?x147960) ?x147962) ?x147964) ?x146055)))
 (let ((?x147978 (+ (+ (+ (+ (+ (+ (+ ?x147966 ?x147967) ?x147969) ?x147971) ?x147973) ?x147975) ?x146057) ?x146059)))
 (let ((?x147985 (- (- (- (- (- (+ (+ ?x147978 ?x146061) ?x146063) ?x146065) ?x146067) ?x146069) ?x146071) ?x146073)))
 (= (- (- (- ?x147985 ?x146075) ?x146077) ?x146079) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x143488 (* l_0_22_145 l_0_22_145)))
 (let ((?x35456 (* l_0_22_109 l_0_22_109)))
 (let ((?x125872 (* (/ 1.0 2.0) ?x35456)))
 (= (- (- ?x125872 ?x143488) (* (* (/ 1.0 2.0) l_0_22_73) l_0_22_73)) 0.0)))))
(assert
 (let ((?x147927 (* (* 2.0 l_0_22_316) l_0_22_323)))
 (let ((?x147924 (* (* 2.0 l_0_22_315) l_0_22_322)))
 (let ((?x147921 (* (* 2.0 l_0_22_314) l_0_22_321)))
 (let ((?x147918 (* (* 2.0 l_0_22_313) l_0_22_320)))
 (let ((?x147915 (* (* 2.0 l_0_22_312) l_0_22_319)))
 (let ((?x147912 (* (* 2.0 l_0_22_311) l_0_22_318)))
 (let ((?x147909 (* (* 2.0 l_0_22_310) l_0_22_317)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x148040 (* ?x146323 l_0_22_281)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143526 (* ?x143525 l_0_22_146)))
 (let ((?x125865 (+ (* (* 2.0 l_0_22_100) l_0_22_107) (* (* 2.0 l_0_22_101) l_0_22_94))))
 (let ((?x148005 (+ (+ ?x125865 (* (* 2.0 l_0_22_102) l_0_22_95)) (* (* 2.0 l_0_22_103) l_0_22_96))))
 (let ((?x148010 (+ (+ ?x148005 (* (* 2.0 l_0_22_104) l_0_22_97)) (* (* 2.0 l_0_22_105) l_0_22_98))))
 (let ((?x148015 (+ (+ ?x148010 (* (* 2.0 l_0_22_106) l_0_22_99)) (* (* 1.0 l_0_22_109) l_0_22_110))))
 (let ((?x148021 (- (- ?x148015 (* (* 2.0 l_0_22_130) l_0_22_137)) (* (* 2.0 l_0_22_131) l_0_22_138))))
 (let ((?x148027 (- (- ?x148021 (* (* 2.0 l_0_22_132) l_0_22_139)) (* (* 2.0 l_0_22_133) l_0_22_140))))
 (let ((?x148033 (- (- ?x148027 (* (* 2.0 l_0_22_134) l_0_22_141)) (* (* 2.0 l_0_22_135) l_0_22_142))))
 (let ((?x148039 (- (- (- ?x148033 (* (* 2.0 l_0_22_136) l_0_22_143)) ?x143526) (* (* 2.0 l_0_22_217) l_0_22_238))))
 (let ((?x148047 (+ (+ (+ (+ (+ (+ (- ?x148039 ?x148040) ?x147909) ?x147912) ?x147915) ?x147918) ?x147921) ?x147924)))
 (= (- (+ ?x148047 ?x147927) (* (* 1.0 l_0_22_73) l_0_22_74)) 0.0))))))))))))))))))))))
(assert
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x99673 (* ?x143525 l_0_22_151)))
 (let ((?x148083 (- (- (* (* 1.0 l_0_22_109) l_0_22_115) ?x99673) (* (* 1.0 l_0_22_73) l_0_22_79))))
 (= ?x148083 0.0)))))
(assert
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143616 (* ?x143525 l_0_22_155)))
 (let ((?x148096 (- (- (* (* 1.0 l_0_22_109) l_0_22_119) ?x143616) (* (* 1.0 l_0_22_73) l_0_22_83))))
 (= ?x148096 0.0)))))
(assert
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143639 (* ?x143525 l_0_22_160)))
 (let ((?x148108 (- (- (* (* 1.0 l_0_22_109) l_0_22_124) ?x143639) (* (* 1.0 l_0_22_73) l_0_22_88))))
 (= ?x148108 0.0)))))
(assert
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143666 (* ?x143525 l_0_22_166)))
 (let ((?x104538 (- (- (* (* 1.0 l_0_22_109) l_0_22_130) ?x143666) (* (* 1.0 l_0_22_73) l_0_22_94))))
 (= ?x104538 0.0)))))
(assert
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143696 (* ?x143525 l_0_22_173)))
 (let ((?x148128 (+ (* (* (- 1.0) l_0_22_101) l_0_22_73) (* (* 1.0 l_0_22_109) l_0_22_137))))
 (= (- ?x148128 ?x143696) 0.0)))))
(assert
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x148151 (* ?x146883 l_0_22_282)))
 (let ((?x146880 (* 2.0 l_0_22_254)))
 (let ((?x148149 (* ?x146880 l_0_22_281)))
 (let ((?x143715 (* l_0_22_147 l_0_22_147)))
 (let ((?x143800 (* l_0_22_146 l_0_22_146)))
 (let ((?x148140 (* l_0_22_111 l_0_22_111)))
 (let ((?x148141 (* (/ 1.0 2.0) ?x148140)))
 (let ((?x148138 (* l_0_22_110 l_0_22_110)))
 (let ((?x148139 (* (/ 1.0 2.0) ?x148138)))
 (let ((?x148142 (+ ?x148139 ?x148141)))
 (let ((?x148148 (- (- (- (- ?x148142 ?x143800) ?x143715) (* (* 2.0 l_0_22_218) l_0_22_238)) (* (* 2.0 l_0_22_219) l_0_22_239))))
 (let ((?x148158 (- (- (- (- ?x148148 ?x148149) ?x148151) (* (* 2.0 l_0_22_346) l_0_22_353)) (* (* 2.0 l_0_22_347) l_0_22_354))))
 (let ((?x148164 (- (- ?x148158 (* (* 2.0 l_0_22_348) l_0_22_355)) (* (* 2.0 l_0_22_349) l_0_22_356))))
 (let ((?x148170 (- (- ?x148164 (* (* 2.0 l_0_22_350) l_0_22_357)) (* (* 2.0 l_0_22_351) l_0_22_358))))
 (let ((?x148176 (- (- ?x148170 (* (* 2.0 l_0_22_352) l_0_22_359)) (* (* 2.0 l_0_22_382) l_0_22_389))))
 (let ((?x148182 (- (- ?x148176 (* (* 2.0 l_0_22_383) l_0_22_390)) (* (* 2.0 l_0_22_384) l_0_22_391))))
 (let ((?x148188 (- (- ?x148182 (* (* 2.0 l_0_22_385) l_0_22_392)) (* (* 2.0 l_0_22_386) l_0_22_393))))
 (let ((?x148194 (- (- ?x148188 (* (* 2.0 l_0_22_387) l_0_22_394)) (* (* 2.0 l_0_22_388) l_0_22_395))))
 (let ((?x148200 (- (- ?x148194 (* (* 2.0 l_0_22_418) l_0_22_425)) (* (* 2.0 l_0_22_419) l_0_22_426))))
 (let ((?x148206 (- (- ?x148200 (* (* 2.0 l_0_22_420) l_0_22_427)) (* (* 2.0 l_0_22_421) l_0_22_428))))
 (let ((?x148212 (- (- ?x148206 (* (* 2.0 l_0_22_422) l_0_22_429)) (* (* 2.0 l_0_22_423) l_0_22_430))))
 (let ((?x148218 (- (- ?x148212 (* (* 2.0 l_0_22_424) l_0_22_431)) (* (* 2.0 l_0_22_454) l_0_22_461))))
 (let ((?x148224 (- (- ?x148218 (* (* 2.0 l_0_22_455) l_0_22_462)) (* (* 2.0 l_0_22_456) l_0_22_463))))
 (let ((?x148230 (- (- ?x148224 (* (* 2.0 l_0_22_457) l_0_22_464)) (* (* 2.0 l_0_22_458) l_0_22_465))))
 (let ((?x148236 (- (- ?x148230 (* (* 2.0 l_0_22_459) l_0_22_466)) (* (* 2.0 l_0_22_460) l_0_22_467))))
 (let ((?x148242 (- (- ?x148236 (* (* 2.0 l_0_22_490) l_0_22_497)) (* (* 2.0 l_0_22_491) l_0_22_498))))
 (let ((?x148248 (- (- ?x148242 (* (* 2.0 l_0_22_492) l_0_22_499)) (* (* 2.0 l_0_22_493) l_0_22_500))))
 (let ((?x148254 (- (- ?x148248 (* (* 2.0 l_0_22_494) l_0_22_501)) (* (* 2.0 l_0_22_495) l_0_22_502))))
 (let ((?x148260 (- (- ?x148254 (* (* 2.0 l_0_22_496) l_0_22_503)) (* (* 2.0 l_0_22_526) l_0_22_533))))
 (let ((?x148266 (- (- ?x148260 (* (* 2.0 l_0_22_527) l_0_22_534)) (* (* 2.0 l_0_22_528) l_0_22_535))))
 (let ((?x148272 (- (- ?x148266 (* (* 2.0 l_0_22_529) l_0_22_536)) (* (* 2.0 l_0_22_530) l_0_22_537))))
 (let ((?x148278 (- (- ?x148272 (* (* 2.0 l_0_22_531) l_0_22_538)) (* (* 2.0 l_0_22_532) l_0_22_539))))
 (let ((?x148284 (- (- ?x148278 (* (* 2.0 l_0_22_562) l_0_22_569)) (* (* 2.0 l_0_22_563) l_0_22_570))))
 (let ((?x148290 (- (- ?x148284 (* (* 2.0 l_0_22_564) l_0_22_571)) (* (* 2.0 l_0_22_565) l_0_22_572))))
 (let ((?x148296 (- (- ?x148290 (* (* 2.0 l_0_22_566) l_0_22_573)) (* (* 2.0 l_0_22_567) l_0_22_574))))
 (let ((?x148302 (- (- ?x148296 (* (* 2.0 l_0_22_568) l_0_22_575)) (* (* (/ 1.0 2.0) l_0_22_74) l_0_22_74))))
 (= (- ?x148302 (* (* (/ 1.0 2.0) l_0_22_75) l_0_22_75)) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x148476 (* (* 2.0 l_0_22_280) l_0_22_287)))
 (let ((?x148473 (* (* 2.0 l_0_22_279) l_0_22_286)))
 (let ((?x148470 (* (* 2.0 l_0_22_278) l_0_22_285)))
 (let ((?x148467 (* (* 2.0 l_0_22_277) l_0_22_284)))
 (let ((?x148464 (* (* 2.0 l_0_22_276) l_0_22_283)))
 (let ((?x148461 (* (* 2.0 l_0_22_275) l_0_22_282)))
 (let ((?x148458 (* (* 2.0 l_0_22_274) l_0_22_281)))
 (let ((?x148454 (* 2.0 l_0_22_267)))
 (let ((?x148455 (* ?x148454 l_0_22_285)))
 (let ((?x148451 (* 2.0 l_0_22_266)))
 (let ((?x148452 (* ?x148451 l_0_22_284)))
 (let ((?x148448 (* 2.0 l_0_22_265)))
 (let ((?x148449 (* ?x148448 l_0_22_283)))
 (let ((?x148445 (* 2.0 l_0_22_264)))
 (let ((?x148446 (* ?x148445 l_0_22_282)))
 (let ((?x148442 (* 2.0 l_0_22_263)))
 (let ((?x148443 (* ?x148442 l_0_22_281)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144007 (* ?x143854 l_0_22_156)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x144005 (* ?x144004 l_0_22_155)))
 (let ((?x148424 (+ (* (* 1.0 l_0_22_110) l_0_22_119) (* (* 1.0 l_0_22_111) l_0_22_120))))
 (let ((?x148432 (- (- (- (- ?x148424 ?x144005) ?x144007) (* (* 2.0 l_0_22_227) l_0_22_238)) (* (* 2.0 l_0_22_228) l_0_22_239))))
 (let ((?x148438 (- (- ?x148432 (* (* 2.0 l_0_22_229) l_0_22_240)) (* (* 2.0 l_0_22_230) l_0_22_241))))
 (let ((?x148450 (- (- (- (- ?x148438 (* (* 2.0 l_0_22_231) l_0_22_242)) ?x148443) ?x148446) ?x148449)))
 (let ((?x148471 (+ (+ (+ (+ (+ (- (- ?x148450 ?x148452) ?x148455) ?x148458) ?x148461) ?x148464) ?x148467) ?x148470)))
 (let ((?x148481 (- (- (+ (+ ?x148471 ?x148473) ?x148476) (* (* 1.0 l_0_22_74) l_0_22_83)) (* (* 1.0 l_0_22_75) l_0_22_84))))
 (= ?x148481 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x147927 (* (* 2.0 l_0_22_316) l_0_22_323)))
 (let ((?x147924 (* (* 2.0 l_0_22_315) l_0_22_322)))
 (let ((?x147921 (* (* 2.0 l_0_22_314) l_0_22_321)))
 (let ((?x147918 (* (* 2.0 l_0_22_313) l_0_22_320)))
 (let ((?x147915 (* (* 2.0 l_0_22_312) l_0_22_319)))
 (let ((?x147912 (* (* 2.0 l_0_22_311) l_0_22_318)))
 (let ((?x147909 (* (* 2.0 l_0_22_310) l_0_22_317)))
 (let ((?x148600 (* 2.0 l_0_22_273)))
 (let ((?x148601 (* ?x148600 l_0_22_286)))
 (let ((?x148597 (* 2.0 l_0_22_272)))
 (let ((?x148598 (* ?x148597 l_0_22_285)))
 (let ((?x148594 (* 2.0 l_0_22_271)))
 (let ((?x148595 (* ?x148594 l_0_22_284)))
 (let ((?x148591 (* 2.0 l_0_22_270)))
 (let ((?x148592 (* ?x148591 l_0_22_283)))
 (let ((?x148588 (* 2.0 l_0_22_269)))
 (let ((?x148589 (* ?x148588 l_0_22_282)))
 (let ((?x148585 (* 2.0 l_0_22_268)))
 (let ((?x148586 (* ?x148585 l_0_22_281)))
 (let ((?x145889 (* (* 2.0 l_0_22_208) l_0_22_215)))
 (let ((?x145886 (* (* 2.0 l_0_22_207) l_0_22_214)))
 (let ((?x145883 (* (* 2.0 l_0_22_206) l_0_22_213)))
 (let ((?x145880 (* (* 2.0 l_0_22_205) l_0_22_212)))
 (let ((?x145877 (* (* 2.0 l_0_22_204) l_0_22_211)))
 (let ((?x145874 (* (* 2.0 l_0_22_203) l_0_22_210)))
 (let ((?x145871 (* (* 2.0 l_0_22_202) l_0_22_209)))
 (let ((?x145868 (* (* 2.0 l_0_22_172) l_0_22_179)))
 (let ((?x145865 (* (* 2.0 l_0_22_171) l_0_22_178)))
 (let ((?x145862 (* (* 2.0 l_0_22_170) l_0_22_177)))
 (let ((?x145859 (* (* 2.0 l_0_22_169) l_0_22_176)))
 (let ((?x145856 (* (* 2.0 l_0_22_168) l_0_22_175)))
 (let ((?x145853 (* (* 2.0 l_0_22_167) l_0_22_174)))
 (let ((?x145850 (* (* 2.0 l_0_22_166) l_0_22_173)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144069 (* ?x143854 l_0_22_161)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x148550 (* ?x144004 l_0_22_160)))
 (let ((?x148549 (+ (* (* 1.0 l_0_22_110) l_0_22_124) (* (* 1.0 l_0_22_111) l_0_22_125))))
 (let ((?x148557 (+ (+ (+ (+ (+ (- (- ?x148549 ?x148550) ?x144069) ?x145850) ?x145853) ?x145856) ?x145859) ?x145862)))
 (let ((?x148564 (- (- (- (- (- (+ (+ ?x148557 ?x145865) ?x145868) ?x145871) ?x145874) ?x145877) ?x145880) ?x145883)))
 (let ((?x148572 (- (- (- (- ?x148564 ?x145886) ?x145889) (* (* 2.0 l_0_22_232) l_0_22_238)) (* (* 2.0 l_0_22_233) l_0_22_239))))
 (let ((?x148578 (- (- ?x148572 (* (* 2.0 l_0_22_234) l_0_22_240)) (* (* 2.0 l_0_22_235) l_0_22_241))))
 (let ((?x148584 (- (- ?x148578 (* (* 2.0 l_0_22_236) l_0_22_242)) (* (* 2.0 l_0_22_237) l_0_22_243))))
 (let ((?x148603 (- (- (- (- (- (- (- ?x148584 ?x148586) ?x148589) ?x148592) ?x148595) ?x148598) ?x148601) ?x147909)))
 (let ((?x148611 (- (- (- (- (- (- (- ?x148603 ?x147912) ?x147915) ?x147918) ?x147921) ?x147924) ?x147927) (* (* 1.0 l_0_22_74) l_0_22_88))))
 (= (- ?x148611 (* (* 1.0 l_0_22_75) l_0_22_89)) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x148476 (* (* 2.0 l_0_22_280) l_0_22_287)))
 (let ((?x148473 (* (* 2.0 l_0_22_279) l_0_22_286)))
 (let ((?x148470 (* (* 2.0 l_0_22_278) l_0_22_285)))
 (let ((?x148467 (* (* 2.0 l_0_22_277) l_0_22_284)))
 (let ((?x148464 (* (* 2.0 l_0_22_276) l_0_22_283)))
 (let ((?x148461 (* (* 2.0 l_0_22_275) l_0_22_282)))
 (let ((?x148458 (* (* 2.0 l_0_22_274) l_0_22_281)))
 (let ((?x148659 (* l_0_22_244 l_0_22_244)))
 (let ((?x148657 (* l_0_22_243 l_0_22_243)))
 (let ((?x148655 (* l_0_22_242 l_0_22_242)))
 (let ((?x148653 (* l_0_22_241 l_0_22_241)))
 (let ((?x148651 (* l_0_22_240 l_0_22_240)))
 (let ((?x148649 (* l_0_22_239 l_0_22_239)))
 (let ((?x148647 (* l_0_22_238 l_0_22_238)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144175 (* ?x143854 l_0_22_167)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x144172 (* ?x144004 l_0_22_166)))
 (let ((?x148644 (+ (* (* 1.0 l_0_22_110) l_0_22_130) (* (* 1.0 l_0_22_111) l_0_22_131))))
 (let ((?x148656 (- (- (- (- (- (- (- ?x148644 ?x144172) ?x144175) ?x148647) ?x148649) ?x148651) ?x148653) ?x148655)))
 (let ((?x148665 (- (- (- (- (- (- (- ?x148656 ?x148657) ?x148659) ?x148458) ?x148461) ?x148464) ?x148467) ?x148470)))
 (let ((?x148671 (- (- (- (- ?x148665 ?x148473) ?x148476) (* (* 1.0 l_0_22_74) l_0_22_94)) (* (* 1.0 l_0_22_75) l_0_22_95))))
 (= ?x148671 0.0))))))))))))))))))))))))
(assert
 (let ((?x148707 (* l_0_22_288 l_0_22_288)))
 (let ((?x148705 (* l_0_22_287 l_0_22_287)))
 (let ((?x148703 (* l_0_22_286 l_0_22_286)))
 (let ((?x148701 (* l_0_22_285 l_0_22_285)))
 (let ((?x148699 (* l_0_22_284 l_0_22_284)))
 (let ((?x148697 (* l_0_22_283 l_0_22_283)))
 (let ((?x148695 (* l_0_22_282 l_0_22_282)))
 (let ((?x148693 (* l_0_22_281 l_0_22_281)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144251 (* ?x143854 l_0_22_174)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x127516 (* ?x144004 l_0_22_173)))
 (let ((?x127526 (- (* (* (- 1.0) l_0_22_101) l_0_22_74) (* (* 1.0 l_0_22_102) l_0_22_75))))
 (let ((?x37069 (+ (+ ?x127526 (* (* 1.0 l_0_22_110) l_0_22_137)) (* (* 1.0 l_0_22_111) l_0_22_138))))
 (let ((?x127499 (- (- (- (- ?x37069 ?x127516) ?x144251) (* (* 2.0 l_0_22_238) l_0_22_245)) (* (* 2.0 l_0_22_239) l_0_22_246))))
 (let ((?x148683 (- (- ?x127499 (* (* 2.0 l_0_22_240) l_0_22_247)) (* (* 2.0 l_0_22_241) l_0_22_248))))
 (let ((?x148689 (- (- ?x148683 (* (* 2.0 l_0_22_242) l_0_22_249)) (* (* 2.0 l_0_22_243) l_0_22_250))))
 (let ((?x148698 (- (- (- (- ?x148689 (* (* 2.0 l_0_22_244) l_0_22_251)) ?x148693) ?x148695) ?x148697)))
 (= (- (- (- (- (- ?x148698 ?x148699) ?x148701) ?x148703) ?x148705) ?x148707) 0.0))))))))))))))))))))
(assert
 (let ((?x144629 (* l_0_22_154 l_0_22_154)))
 (let ((?x144627 (* l_0_22_153 l_0_22_153)))
 (let ((?x100242 (* l_0_22_152 l_0_22_152)))
 (let ((?x122787 (* l_0_22_151 l_0_22_151)))
 (let ((?x146281 (* l_0_22_118 l_0_22_118)))
 (let ((?x127723 (* (/ 1.0 2.0) ?x146281)))
 (let ((?x146279 (* l_0_22_117 l_0_22_117)))
 (let ((?x37217 (* (/ 1.0 2.0) ?x146279)))
 (let ((?x146277 (* l_0_22_116 l_0_22_116)))
 (let ((?x61650 (* (/ 1.0 2.0) ?x146277)))
 (let ((?x146275 (* l_0_22_115 l_0_22_115)))
 (let ((?x127706 (* (/ 1.0 2.0) ?x146275)))
 (let ((?x148757 (- (- (- (- (+ (+ (+ ?x127706 ?x61650) ?x37217) ?x127723) ?x122787) ?x100242) ?x144627) ?x144629)))
 (let ((?x148763 (- (- ?x148757 (* (* (/ 1.0 2.0) l_0_22_79) l_0_22_79)) (* (* (/ 1.0 2.0) l_0_22_80) l_0_22_80))))
 (let ((?x148769 (- (- ?x148763 (* (* (/ 1.0 2.0) l_0_22_81) l_0_22_81)) (* (* (/ 1.0 2.0) l_0_22_82) l_0_22_82))))
 (= ?x148769 0.0)))))))))))))))))
(assert
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144699 (* ?x144698 l_0_22_158)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144696 (* ?x144695 l_0_22_157)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144693 (* ?x144692 l_0_22_156)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144690 (* ?x144689 l_0_22_155)))
 (let ((?x148780 (+ (* (* 1.0 l_0_22_115) l_0_22_119) (* (* 1.0 l_0_22_116) l_0_22_120))))
 (let ((?x148786 (+ (+ ?x148780 (* (* 1.0 l_0_22_117) l_0_22_121)) (* (* 1.0 l_0_22_118) l_0_22_122))))
 (let ((?x148793 (- (- (- (- (- ?x148786 ?x144690) ?x144693) ?x144696) ?x144699) (* (* 1.0 l_0_22_79) l_0_22_83))))
 (let ((?x148799 (- (- ?x148793 (* (* 1.0 l_0_22_80) l_0_22_84)) (* (* 1.0 l_0_22_81) l_0_22_85))))
 (= (- ?x148799 (* (* 1.0 l_0_22_82) l_0_22_86)) 0.0))))))))))))))
(assert
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144746 (* ?x144698 l_0_22_163)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144742 (* ?x144695 l_0_22_162)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144738 (* ?x144692 l_0_22_161)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144734 (* ?x144689 l_0_22_160)))
 (let ((?x148824 (+ (* (* 1.0 l_0_22_115) l_0_22_124) (* (* 1.0 l_0_22_116) l_0_22_125))))
 (let ((?x148828 (+ (+ ?x148824 (* (* 1.0 l_0_22_117) l_0_22_126)) (* (* 1.0 l_0_22_118) l_0_22_127))))
 (let ((?x148834 (- (- (- (- (- ?x148828 ?x144734) ?x144738) ?x144742) ?x144746) (* (* 1.0 l_0_22_79) l_0_22_88))))
 (let ((?x148838 (- (- ?x148834 (* (* 1.0 l_0_22_80) l_0_22_89)) (* (* 1.0 l_0_22_81) l_0_22_90))))
 (= (- ?x148838 (* (* 1.0 l_0_22_82) l_0_22_91)) 0.0))))))))))))))
(assert
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144835 (* ?x144698 l_0_22_169)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144833 (* ?x144695 l_0_22_168)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144831 (* ?x144692 l_0_22_167)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144829 (* ?x144689 l_0_22_166)))
 (let ((?x148855 (+ (* (* 1.0 l_0_22_115) l_0_22_130) (* (* 1.0 l_0_22_116) l_0_22_131))))
 (let ((?x148859 (+ (+ ?x148855 (* (* 1.0 l_0_22_117) l_0_22_132)) (* (* 1.0 l_0_22_118) l_0_22_133))))
 (let ((?x148865 (- (- (- (- (- ?x148859 ?x144829) ?x144831) ?x144833) ?x144835) (* (* 1.0 l_0_22_79) l_0_22_94))))
 (let ((?x148869 (- (- ?x148865 (* (* 1.0 l_0_22_80) l_0_22_95)) (* (* 1.0 l_0_22_81) l_0_22_96))))
 (= (- ?x148869 (* (* 1.0 l_0_22_82) l_0_22_97)) 0.0))))))))))))))
(assert
 (let ((?x144698 (* 2.0 l_0_22_154)))
 (let ((?x144955 (* ?x144698 l_0_22_176)))
 (let ((?x144695 (* 2.0 l_0_22_153)))
 (let ((?x144953 (* ?x144695 l_0_22_175)))
 (let ((?x144692 (* 2.0 l_0_22_152)))
 (let ((?x144951 (* ?x144692 l_0_22_174)))
 (let ((?x144689 (* 2.0 l_0_22_151)))
 (let ((?x144949 (* ?x144689 l_0_22_173)))
 (let ((?x148899 (- (* (* (- 1.0) l_0_22_101) l_0_22_79) (* (* 1.0 l_0_22_102) l_0_22_80))))
 (let ((?x148904 (- (- ?x148899 (* (* 1.0 l_0_22_103) l_0_22_81)) (* (* 1.0 l_0_22_104) l_0_22_82))))
 (let ((?x148908 (+ (+ ?x148904 (* (* 1.0 l_0_22_115) l_0_22_137)) (* (* 1.0 l_0_22_116) l_0_22_138))))
 (let ((?x148912 (+ (+ ?x148908 (* (* 1.0 l_0_22_117) l_0_22_139)) (* (* 1.0 l_0_22_118) l_0_22_140))))
 (= (- (- (- (- ?x148912 ?x144949) ?x144951) ?x144953) ?x144955) 0.0))))))))))))))
(assert
 (let ((?x145013 (* l_0_22_159 l_0_22_159)))
 (let ((?x145011 (* l_0_22_158 l_0_22_158)))
 (let ((?x145009 (* l_0_22_157 l_0_22_157)))
 (let ((?x145007 (* l_0_22_156 l_0_22_156)))
 (let ((?x145005 (* l_0_22_155 l_0_22_155)))
 (let ((?x148937 (* l_0_22_123 l_0_22_123)))
 (let ((?x148938 (* (/ 1.0 2.0) ?x148937)))
 (let ((?x148934 (* l_0_22_122 l_0_22_122)))
 (let ((?x148935 (* (/ 1.0 2.0) ?x148934)))
 (let ((?x148931 (* l_0_22_121 l_0_22_121)))
 (let ((?x148932 (* (/ 1.0 2.0) ?x148931)))
 (let ((?x148928 (* l_0_22_120 l_0_22_120)))
 (let ((?x148929 (* (/ 1.0 2.0) ?x148928)))
 (let ((?x127929 (* l_0_22_119 l_0_22_119)))
 (let ((?x148927 (* (/ 1.0 2.0) ?x127929)))
 (let ((?x148942 (- (- (- (+ (+ (+ (+ ?x148927 ?x148929) ?x148932) ?x148935) ?x148938) ?x145005) ?x145007) ?x145009)))
 (let ((?x148950 (- (- (- (- ?x148942 ?x145011) ?x145013) (* (* (/ 1.0 2.0) l_0_22_83) l_0_22_83)) (* (* (/ 1.0 2.0) l_0_22_84) l_0_22_84))))
 (let ((?x148956 (- (- ?x148950 (* (* (/ 1.0 2.0) l_0_22_85) l_0_22_85)) (* (* (/ 1.0 2.0) l_0_22_86) l_0_22_86))))
 (= (- ?x148956 (* (* (/ 1.0 2.0) l_0_22_87) l_0_22_87)) 0.0))))))))))))))))))))
(assert
 (let ((?x145083 (* 2.0 l_0_22_159)))
 (let ((?x145084 (* ?x145083 l_0_22_164)))
 (let ((?x145080 (* 2.0 l_0_22_158)))
 (let ((?x145081 (* ?x145080 l_0_22_163)))
 (let ((?x145077 (* 2.0 l_0_22_157)))
 (let ((?x145078 (* ?x145077 l_0_22_162)))
 (let ((?x145074 (* 2.0 l_0_22_156)))
 (let ((?x145075 (* ?x145074 l_0_22_161)))
 (let ((?x145071 (* 2.0 l_0_22_155)))
 (let ((?x145072 (* ?x145071 l_0_22_160)))
 (let ((?x148974 (+ (* (* 1.0 l_0_22_119) l_0_22_124) (* (* 1.0 l_0_22_120) l_0_22_125))))
 (let ((?x148980 (+ (+ ?x148974 (* (* 1.0 l_0_22_121) l_0_22_126)) (* (* 1.0 l_0_22_122) l_0_22_127))))
 (let ((?x148986 (- (- (- (+ ?x148980 (* (* 1.0 l_0_22_123) l_0_22_128)) ?x145072) ?x145075) ?x145078)))
 (let ((?x148994 (- (- (- (- ?x148986 ?x145081) ?x145084) (* (* 1.0 l_0_22_83) l_0_22_88)) (* (* 1.0 l_0_22_84) l_0_22_89))))
 (let ((?x149000 (- (- ?x148994 (* (* 1.0 l_0_22_85) l_0_22_90)) (* (* 1.0 l_0_22_86) l_0_22_91))))
 (= (- ?x149000 (* (* 1.0 l_0_22_87) l_0_22_92)) 0.0)))))))))))))))))
(assert
 (let ((?x145083 (* 2.0 l_0_22_159)))
 (let ((?x145166 (* ?x145083 l_0_22_170)))
 (let ((?x145080 (* 2.0 l_0_22_158)))
 (let ((?x145164 (* ?x145080 l_0_22_169)))
 (let ((?x145077 (* 2.0 l_0_22_157)))
 (let ((?x145162 (* ?x145077 l_0_22_168)))
 (let ((?x145074 (* 2.0 l_0_22_156)))
 (let ((?x145160 (* ?x145074 l_0_22_167)))
 (let ((?x145071 (* 2.0 l_0_22_155)))
 (let ((?x145158 (* ?x145071 l_0_22_166)))
 (let ((?x149022 (+ (* (* 1.0 l_0_22_119) l_0_22_130) (* (* 1.0 l_0_22_120) l_0_22_131))))
 (let ((?x149026 (+ (+ ?x149022 (* (* 1.0 l_0_22_121) l_0_22_132)) (* (* 1.0 l_0_22_122) l_0_22_133))))
 (let ((?x149031 (- (- (- (+ ?x149026 (* (* 1.0 l_0_22_123) l_0_22_134)) ?x145158) ?x145160) ?x145162)))
 (let ((?x149037 (- (- (- (- ?x149031 ?x145164) ?x145166) (* (* 1.0 l_0_22_83) l_0_22_94)) (* (* 1.0 l_0_22_84) l_0_22_95))))
 (let ((?x149041 (- (- ?x149037 (* (* 1.0 l_0_22_85) l_0_22_96)) (* (* 1.0 l_0_22_86) l_0_22_97))))
 (= (- ?x149041 (* (* 1.0 l_0_22_87) l_0_22_98)) 0.0)))))))))))))))))
(assert
 (let ((?x145083 (* 2.0 l_0_22_159)))
 (let ((?x145273 (* ?x145083 l_0_22_177)))
 (let ((?x145080 (* 2.0 l_0_22_158)))
 (let ((?x145271 (* ?x145080 l_0_22_176)))
 (let ((?x145077 (* 2.0 l_0_22_157)))
 (let ((?x145269 (* ?x145077 l_0_22_175)))
 (let ((?x145074 (* 2.0 l_0_22_156)))
 (let ((?x145267 (* ?x145074 l_0_22_174)))
 (let ((?x145071 (* 2.0 l_0_22_155)))
 (let ((?x145265 (* ?x145071 l_0_22_173)))
 (let ((?x149054 (- (* (* (- 1.0) l_0_22_101) l_0_22_83) (* (* 1.0 l_0_22_102) l_0_22_84))))
 (let ((?x149058 (- (- ?x149054 (* (* 1.0 l_0_22_103) l_0_22_85)) (* (* 1.0 l_0_22_104) l_0_22_86))))
 (let ((?x149063 (+ (- ?x149058 (* (* 1.0 l_0_22_105) l_0_22_87)) (* (* 1.0 l_0_22_119) l_0_22_137))))
 (let ((?x149067 (+ (+ ?x149063 (* (* 1.0 l_0_22_120) l_0_22_138)) (* (* 1.0 l_0_22_121) l_0_22_139))))
 (let ((?x149071 (+ (+ ?x149067 (* (* 1.0 l_0_22_122) l_0_22_140)) (* (* 1.0 l_0_22_123) l_0_22_141))))
 (= (- (- (- (- (- ?x149071 ?x145265) ?x145267) ?x145269) ?x145271) ?x145273) 0.0)))))))))))))))))
(assert
 (let ((?x145366 (* l_0_22_165 l_0_22_165)))
 (let ((?x145351 (* l_0_22_164 l_0_22_164)))
 (let ((?x145348 (* l_0_22_163 l_0_22_163)))
 (let ((?x145344 (* l_0_22_162 l_0_22_162)))
 (let ((?x145340 (* l_0_22_161 l_0_22_161)))
 (let ((?x145336 (* l_0_22_160 l_0_22_160)))
 (let ((?x149123 (* l_0_22_129 l_0_22_129)))
 (let ((?x149124 (* (/ 1.0 2.0) ?x149123)))
 (let ((?x149120 (* l_0_22_128 l_0_22_128)))
 (let ((?x149121 (* (/ 1.0 2.0) ?x149120)))
 (let ((?x149117 (* l_0_22_127 l_0_22_127)))
 (let ((?x149118 (* (/ 1.0 2.0) ?x149117)))
 (let ((?x149114 (* l_0_22_126 l_0_22_126)))
 (let ((?x149115 (* (/ 1.0 2.0) ?x149114)))
 (let ((?x149111 (* l_0_22_125 l_0_22_125)))
 (let ((?x149112 (* (/ 1.0 2.0) ?x149111)))
 (let ((?x149109 (* l_0_22_124 l_0_22_124)))
 (let ((?x149110 (* (/ 1.0 2.0) ?x149109)))
 (let ((?x149127 (- (- (+ (+ (+ (+ (+ ?x149110 ?x149112) ?x149115) ?x149118) ?x149121) ?x149124) ?x145336) ?x145340)))
 (let ((?x149134 (- (- (- (- (- ?x149127 ?x145344) ?x145348) ?x145351) ?x145366) (* (* (/ 1.0 2.0) l_0_22_88) l_0_22_88))))
 (let ((?x149140 (- (- ?x149134 (* (* (/ 1.0 2.0) l_0_22_89) l_0_22_89)) (* (* (/ 1.0 2.0) l_0_22_90) l_0_22_90))))
 (let ((?x149146 (- (- ?x149140 (* (* (/ 1.0 2.0) l_0_22_91) l_0_22_91)) (* (* (/ 1.0 2.0) l_0_22_92) l_0_22_92))))
 (= (- ?x149146 (* (* (/ 1.0 2.0) l_0_22_93) l_0_22_93)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x145475 (* 2.0 l_0_22_165)))
 (let ((?x145476 (* ?x145475 l_0_22_171)))
 (let ((?x145472 (* 2.0 l_0_22_164)))
 (let ((?x145473 (* ?x145472 l_0_22_170)))
 (let ((?x145469 (* 2.0 l_0_22_163)))
 (let ((?x145470 (* ?x145469 l_0_22_169)))
 (let ((?x145466 (* 2.0 l_0_22_162)))
 (let ((?x145467 (* ?x145466 l_0_22_168)))
 (let ((?x145463 (* 2.0 l_0_22_161)))
 (let ((?x145464 (* ?x145463 l_0_22_167)))
 (let ((?x145460 (* 2.0 l_0_22_160)))
 (let ((?x145461 (* ?x145460 l_0_22_166)))
 (let ((?x149165 (+ (* (* 1.0 l_0_22_124) l_0_22_130) (* (* 1.0 l_0_22_125) l_0_22_131))))
 (let ((?x149171 (+ (+ ?x149165 (* (* 1.0 l_0_22_126) l_0_22_132)) (* (* 1.0 l_0_22_127) l_0_22_133))))
 (let ((?x149177 (+ (+ ?x149171 (* (* 1.0 l_0_22_128) l_0_22_134)) (* (* 1.0 l_0_22_129) l_0_22_135))))
 (let ((?x149186 (- (- (- (- (- (- (- ?x149177 ?x145461) ?x145464) ?x145467) ?x145470) ?x145473) ?x145476) (* (* 1.0 l_0_22_88) l_0_22_94))))
 (let ((?x149192 (- (- ?x149186 (* (* 1.0 l_0_22_89) l_0_22_95)) (* (* 1.0 l_0_22_90) l_0_22_96))))
 (let ((?x149198 (- (- ?x149192 (* (* 1.0 l_0_22_91) l_0_22_97)) (* (* 1.0 l_0_22_92) l_0_22_98))))
 (= (- ?x149198 (* (* 1.0 l_0_22_93) l_0_22_99)) 0.0))))))))))))))))))))
(assert
 (let ((?x145475 (* 2.0 l_0_22_165)))
 (let ((?x145624 (* ?x145475 l_0_22_178)))
 (let ((?x145472 (* 2.0 l_0_22_164)))
 (let ((?x145622 (* ?x145472 l_0_22_177)))
 (let ((?x145469 (* 2.0 l_0_22_163)))
 (let ((?x145620 (* ?x145469 l_0_22_176)))
 (let ((?x145466 (* 2.0 l_0_22_162)))
 (let ((?x145618 (* ?x145466 l_0_22_175)))
 (let ((?x145463 (* 2.0 l_0_22_161)))
 (let ((?x145616 (* ?x145463 l_0_22_174)))
 (let ((?x145460 (* 2.0 l_0_22_160)))
 (let ((?x145614 (* ?x145460 l_0_22_173)))
 (let ((?x149225 (- (* (* (- 1.0) l_0_22_101) l_0_22_88) (* (* 1.0 l_0_22_102) l_0_22_89))))
 (let ((?x149229 (- (- ?x149225 (* (* 1.0 l_0_22_103) l_0_22_90)) (* (* 1.0 l_0_22_104) l_0_22_91))))
 (let ((?x149234 (- (- ?x149229 (* (* 1.0 l_0_22_105) l_0_22_92)) (* (* 1.0 l_0_22_106) l_0_22_93))))
 (let ((?x149238 (+ (+ ?x149234 (* (* 1.0 l_0_22_124) l_0_22_137)) (* (* 1.0 l_0_22_125) l_0_22_138))))
 (let ((?x149242 (+ (+ ?x149238 (* (* 1.0 l_0_22_126) l_0_22_139)) (* (* 1.0 l_0_22_127) l_0_22_140))))
 (let ((?x149246 (+ (+ ?x149242 (* (* 1.0 l_0_22_128) l_0_22_141)) (* (* 1.0 l_0_22_129) l_0_22_142))))
 (= (- (- (- (- (- (- ?x149246 ?x145614) ?x145616) ?x145618) ?x145620) ?x145622) ?x145624) 0.0))))))))))))))))))))
(assert
 (let ((?x145748 (* l_0_22_172 l_0_22_172)))
 (let ((?x145746 (* l_0_22_171 l_0_22_171)))
 (let ((?x145744 (* l_0_22_170 l_0_22_170)))
 (let ((?x145742 (* l_0_22_169 l_0_22_169)))
 (let ((?x145740 (* l_0_22_168 l_0_22_168)))
 (let ((?x145738 (* l_0_22_167 l_0_22_167)))
 (let ((?x145736 (* l_0_22_166 l_0_22_166)))
 (let ((?x149301 (* l_0_22_136 l_0_22_136)))
 (let ((?x149302 (* (/ 1.0 2.0) ?x149301)))
 (let ((?x149298 (* l_0_22_135 l_0_22_135)))
 (let ((?x149299 (* (/ 1.0 2.0) ?x149298)))
 (let ((?x149295 (* l_0_22_134 l_0_22_134)))
 (let ((?x149296 (* (/ 1.0 2.0) ?x149295)))
 (let ((?x149292 (* l_0_22_133 l_0_22_133)))
 (let ((?x149293 (* (/ 1.0 2.0) ?x149292)))
 (let ((?x149289 (* l_0_22_132 l_0_22_132)))
 (let ((?x149290 (* (/ 1.0 2.0) ?x149289)))
 (let ((?x149286 (* l_0_22_131 l_0_22_131)))
 (let ((?x149287 (* (/ 1.0 2.0) ?x149286)))
 (let ((?x149283 (* l_0_22_130 l_0_22_130)))
 (let ((?x149284 (* (/ 1.0 2.0) ?x149283)))
 (let ((?x149294 (+ (+ (+ (+ (* (* (- (/ 1.0 2.0)) l_0_22_100) l_0_22_100) ?x149284) ?x149287) ?x149290) ?x149293)))
 (let ((?x149307 (- (- (- (- (+ (+ (+ ?x149294 ?x149296) ?x149299) ?x149302) ?x145736) ?x145738) ?x145740) ?x145742)))
 (let ((?x149313 (- (- (- (- ?x149307 ?x145744) ?x145746) ?x145748) (* (* (/ 1.0 2.0) l_0_22_94) l_0_22_94))))
 (let ((?x149319 (- (- ?x149313 (* (* (/ 1.0 2.0) l_0_22_95) l_0_22_95)) (* (* (/ 1.0 2.0) l_0_22_96) l_0_22_96))))
 (let ((?x149325 (- (- ?x149319 (* (* (/ 1.0 2.0) l_0_22_97) l_0_22_97)) (* (* (/ 1.0 2.0) l_0_22_98) l_0_22_98))))
 (= (- ?x149325 (* (* (/ 1.0 2.0) l_0_22_99) l_0_22_99)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x145868 (* (* 2.0 l_0_22_172) l_0_22_179)))
 (let ((?x145865 (* (* 2.0 l_0_22_171) l_0_22_178)))
 (let ((?x145862 (* (* 2.0 l_0_22_170) l_0_22_177)))
 (let ((?x145859 (* (* 2.0 l_0_22_169) l_0_22_176)))
 (let ((?x145856 (* (* 2.0 l_0_22_168) l_0_22_175)))
 (let ((?x145853 (* (* 2.0 l_0_22_167) l_0_22_174)))
 (let ((?x145850 (* (* 2.0 l_0_22_166) l_0_22_173)))
 (let ((?x149337 (- (* (* (- 1.0) l_0_22_100) l_0_22_107) (* (* 1.0 l_0_22_101) l_0_22_94))))
 (let ((?x149341 (- (- ?x149337 (* (* 1.0 l_0_22_102) l_0_22_95)) (* (* 1.0 l_0_22_103) l_0_22_96))))
 (let ((?x149345 (- (- ?x149341 (* (* 1.0 l_0_22_104) l_0_22_97)) (* (* 1.0 l_0_22_105) l_0_22_98))))
 (let ((?x149350 (+ (- ?x149345 (* (* 1.0 l_0_22_106) l_0_22_99)) (* (* 1.0 l_0_22_130) l_0_22_137))))
 (let ((?x149356 (+ (+ ?x149350 (* (* 1.0 l_0_22_131) l_0_22_138)) (* (* 1.0 l_0_22_132) l_0_22_139))))
 (let ((?x149362 (+ (+ ?x149356 (* (* 1.0 l_0_22_133) l_0_22_140)) (* (* 1.0 l_0_22_134) l_0_22_141))))
 (let ((?x149368 (+ (+ ?x149362 (* (* 1.0 l_0_22_135) l_0_22_142)) (* (* 1.0 l_0_22_136) l_0_22_143))))
 (let ((?x149375 (- (- (- (- (- (- (- ?x149368 ?x145850) ?x145853) ?x145856) ?x145859) ?x145862) ?x145865) ?x145868)))
 (= ?x149375 0.0)))))))))))))))))
(assert
 (let ((?x146031 (* l_0_22_180 l_0_22_180)))
 (let ((?x146029 (* l_0_22_179 l_0_22_179)))
 (let ((?x146027 (* l_0_22_178 l_0_22_178)))
 (let ((?x146025 (* l_0_22_177 l_0_22_177)))
 (let ((?x146023 (* l_0_22_176 l_0_22_176)))
 (let ((?x146021 (* l_0_22_175 l_0_22_175)))
 (let ((?x146019 (* l_0_22_174 l_0_22_174)))
 (let ((?x100631 (* l_0_22_173 l_0_22_173)))
 (let ((?x149441 (* l_0_22_144 l_0_22_144)))
 (let ((?x149442 (* (/ 1.0 2.0) ?x149441)))
 (let ((?x149438 (* l_0_22_143 l_0_22_143)))
 (let ((?x149439 (* (/ 1.0 2.0) ?x149438)))
 (let ((?x149435 (* l_0_22_142 l_0_22_142)))
 (let ((?x149436 (* (/ 1.0 2.0) ?x149435)))
 (let ((?x149432 (* l_0_22_141 l_0_22_141)))
 (let ((?x149433 (* (/ 1.0 2.0) ?x149432)))
 (let ((?x149429 (* l_0_22_140 l_0_22_140)))
 (let ((?x149430 (* (/ 1.0 2.0) ?x149429)))
 (let ((?x149426 (* l_0_22_139 l_0_22_139)))
 (let ((?x149427 (* (/ 1.0 2.0) ?x149426)))
 (let ((?x149423 (* l_0_22_138 l_0_22_138)))
 (let ((?x149424 (* (/ 1.0 2.0) ?x149423)))
 (let ((?x149420 (* l_0_22_137 l_0_22_137)))
 (let ((?x149421 (* (/ 1.0 2.0) ?x149420)))
 (let ((?x149401 (- (* (* (- (/ 1.0 2.0)) l_0_22_101) l_0_22_101) (* (* (/ 1.0 2.0) l_0_22_102) l_0_22_102))))
 (let ((?x149407 (- (- ?x149401 (* (* (/ 1.0 2.0) l_0_22_103) l_0_22_103)) (* (* (/ 1.0 2.0) l_0_22_104) l_0_22_104))))
 (let ((?x149413 (- (- ?x149407 (* (* (/ 1.0 2.0) l_0_22_105) l_0_22_105)) (* (* (/ 1.0 2.0) l_0_22_106) l_0_22_106))))
 (let ((?x149419 (- (- ?x149413 (* (* (/ 1.0 2.0) l_0_22_107) l_0_22_107)) (* (* (/ 1.0 2.0) l_0_22_108) l_0_22_108))))
 (let ((?x149440 (+ (+ (+ (+ (+ (+ (+ ?x149419 ?x149421) ?x149424) ?x149427) ?x149430) ?x149433) ?x149436) ?x149439)))
 (let ((?x149449 (- (- (- (- (- (- (+ ?x149440 ?x149442) ?x100631) ?x146019) ?x146021) ?x146023) ?x146025) ?x146027)))
 (= (- (- ?x149449 ?x146029) ?x146031) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x125961 (* l_0_22_73 l_0_22_73)))
 (let ((?x149464 (+ (+ (* (- l_0_22_109) l_0_22_109) (* l_0_22_289 l_0_22_289)) ?x125961)))
 (= ?x149464 0.0))))
(assert
 (let ((?x149483 (* l_0_22_541 l_0_22_541)))
 (let ((?x149481 (* l_0_22_505 l_0_22_505)))
 (let ((?x149479 (* l_0_22_469 l_0_22_469)))
 (let ((?x149477 (* l_0_22_433 l_0_22_433)))
 (let ((?x149475 (* l_0_22_397 l_0_22_397)))
 (let ((?x149473 (* l_0_22_361 l_0_22_361)))
 (let ((?x149471 (* l_0_22_325 l_0_22_325)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146159 (* ?x146129 l_0_22_290)))
 (let ((?x149476 (- (- (- (+ (* (* (- 2.0) l_0_22_109) l_0_22_110) ?x146159) ?x149471) ?x149473) ?x149475)))
 (let ((?x149486 (+ (- (- (- (- ?x149476 ?x149477) ?x149479) ?x149481) ?x149483) (* (* 2.0 l_0_22_73) l_0_22_74))))
 (= ?x149486 0.0)))))))))))))
(assert
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146234 (* ?x146129 l_0_22_292)))
 (let ((?x149508 (+ (+ (* (* (- 2.0) l_0_22_109) l_0_22_112) ?x146234) (* (* 2.0 l_0_22_73) l_0_22_76))))
 (= ?x149508 0.0)))))
(assert
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146326 (* ?x146129 l_0_22_299)))
 (let ((?x149512 (* l_0_22_253 l_0_22_253)))
 (let ((?x149516 (+ (+ (+ (* (* (- 2.0) l_0_22_109) l_0_22_119) ?x149512) ?x146326) (* (* 2.0 l_0_22_73) l_0_22_83))))
 (= ?x149516 0.0))))))
(assert
 (let ((?x146132 (* l_0_22_289 l_0_22_289)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146394 (* ?x146129 l_0_22_304)))
 (let ((?x143490 (* l_0_22_181 l_0_22_181)))
 (let ((?x143488 (* l_0_22_145 l_0_22_145)))
 (let ((?x149526 (- (+ (- (+ (* (* (- 2.0) l_0_22_109) l_0_22_124) ?x143488) ?x143490) ?x146394) ?x146132)))
 (= (+ ?x149526 (* (* 2.0 l_0_22_73) l_0_22_88)) 0.0))))))))
(assert
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146454 (* ?x146129 l_0_22_310)))
 (let ((?x149512 (* l_0_22_253 l_0_22_253)))
 (let ((?x149541 (+ (+ (- (* (* (- 2.0) l_0_22_109) l_0_22_130) ?x149512) ?x146454) (* (* 2.0 l_0_22_73) l_0_22_94))))
 (= ?x149541 0.0))))))
(assert
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146530 (* ?x146129 l_0_22_317)))
 (let ((?x149552 (* l_0_22_217 l_0_22_217)))
 (let ((?x149551 (- (* (* 2.0 l_0_22_101) l_0_22_73) (* (* 2.0 l_0_22_109) l_0_22_137))))
 (= (+ (- ?x149551 ?x149552) ?x146530) 0.0))))))
(assert
 (let ((?x104662 (* l_0_22_75 l_0_22_75)))
 (let ((?x104661 (* l_0_22_74 l_0_22_74)))
 (let ((?x146591 (* l_0_22_291 l_0_22_291)))
 (let ((?x146589 (* l_0_22_290 l_0_22_290)))
 (let ((?x149564 (+ (- (* (- l_0_22_110) l_0_22_110) (* l_0_22_111 l_0_22_111)) ?x146589)))
 (let ((?x149569 (- (- (+ ?x149564 ?x146591) (* (* 2.0 l_0_22_325) l_0_22_326)) (* (* 2.0 l_0_22_361) l_0_22_362))))
 (let ((?x149573 (- (- ?x149569 (* (* 2.0 l_0_22_397) l_0_22_398)) (* (* 2.0 l_0_22_433) l_0_22_434))))
 (let ((?x149577 (- (- ?x149573 (* (* 2.0 l_0_22_469) l_0_22_470)) (* (* 2.0 l_0_22_505) l_0_22_506))))
 (= (+ (+ (- ?x149577 (* (* 2.0 l_0_22_541) l_0_22_542)) ?x104661) ?x104662) 0.0))))))))))
(assert
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x146664 (* ?x146164 l_0_22_293)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x146662 (* ?x146161 l_0_22_292)))
 (let ((?x62197 (- (* (* (- 2.0) l_0_22_110) l_0_22_112) (* (* 2.0 l_0_22_111) l_0_22_113))))
 (let ((?x149590 (- (- (+ (+ ?x62197 ?x146662) ?x146664) (* (* 2.0 l_0_22_325) l_0_22_328)) (* (* 2.0 l_0_22_361) l_0_22_364))))
 (let ((?x149594 (- (- ?x149590 (* (* 2.0 l_0_22_397) l_0_22_400)) (* (* 2.0 l_0_22_433) l_0_22_436))))
 (let ((?x149598 (- (- ?x149594 (* (* 2.0 l_0_22_469) l_0_22_472)) (* (* 2.0 l_0_22_505) l_0_22_508))))
 (let ((?x149602 (+ (- ?x149598 (* (* 2.0 l_0_22_541) l_0_22_544)) (* (* 2.0 l_0_22_74) l_0_22_76))))
 (= (+ ?x149602 (* (* 2.0 l_0_22_75) l_0_22_77)) 0.0)))))))))))
(assert
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x146888 (* ?x146164 l_0_22_300)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x146886 (* ?x146161 l_0_22_299)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x149645 (* ?x146323 l_0_22_254)))
 (let ((?x83208 (- (* (* (- 2.0) l_0_22_110) l_0_22_119) (* (* 2.0 l_0_22_111) l_0_22_120))))
 (let ((?x149650 (- (+ (+ (+ ?x83208 ?x149645) ?x146886) ?x146888) (* (* 2.0 l_0_22_325) l_0_22_335))))
 (let ((?x149654 (- (- ?x149650 (* (* 2.0 l_0_22_361) l_0_22_371)) (* (* 2.0 l_0_22_397) l_0_22_407))))
 (let ((?x149658 (- (- ?x149654 (* (* 2.0 l_0_22_433) l_0_22_443)) (* (* 2.0 l_0_22_469) l_0_22_479))))
 (let ((?x149662 (- (- ?x149658 (* (* 2.0 l_0_22_505) l_0_22_515)) (* (* 2.0 l_0_22_541) l_0_22_551))))
 (let ((?x149666 (+ (+ ?x149662 (* (* 2.0 l_0_22_74) l_0_22_83)) (* (* 2.0 l_0_22_75) l_0_22_84))))
 (= ?x149666 0.0))))))))))))))
(assert
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x147091 (* ?x146164 l_0_22_305)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x147088 (* ?x146161 l_0_22_304)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146159 (* ?x146129 l_0_22_290)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143529 (* ?x143528 l_0_22_182)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143526 (* ?x143525 l_0_22_146)))
 (let ((?x149700 (- (* (* (- 2.0) l_0_22_110) l_0_22_124) (* (* 2.0 l_0_22_111) l_0_22_125))))
 (let ((?x149715 (- (+ (+ (- (- (+ ?x149700 ?x143526) ?x143529) ?x146159) ?x147088) ?x147091) (* (* 2.0 l_0_22_325) l_0_22_340))))
 (let ((?x149719 (- (- ?x149715 (* (* 2.0 l_0_22_361) l_0_22_376)) (* (* 2.0 l_0_22_397) l_0_22_412))))
 (let ((?x149723 (- (- ?x149719 (* (* 2.0 l_0_22_433) l_0_22_448)) (* (* 2.0 l_0_22_469) l_0_22_484))))
 (let ((?x149727 (- (- ?x149723 (* (* 2.0 l_0_22_505) l_0_22_520)) (* (* 2.0 l_0_22_541) l_0_22_556))))
 (let ((?x149731 (+ (+ ?x149727 (* (* 2.0 l_0_22_74) l_0_22_88)) (* (* 2.0 l_0_22_75) l_0_22_89))))
 (= ?x149731 0.0))))))))))))))))))
(assert
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x147188 (* ?x146164 l_0_22_311)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x147186 (* ?x146161 l_0_22_310)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x149645 (* ?x146323 l_0_22_254)))
 (let ((?x128769 (- (* (* (- 2.0) l_0_22_110) l_0_22_130) (* (* 2.0 l_0_22_111) l_0_22_131))))
 (let ((?x59098 (- (+ (+ (- ?x128769 ?x149645) ?x147186) ?x147188) (* (* 2.0 l_0_22_325) l_0_22_346))))
 (let ((?x149757 (- (- ?x59098 (* (* 2.0 l_0_22_361) l_0_22_382)) (* (* 2.0 l_0_22_397) l_0_22_418))))
 (let ((?x149761 (- (- ?x149757 (* (* 2.0 l_0_22_433) l_0_22_454)) (* (* 2.0 l_0_22_469) l_0_22_490))))
 (let ((?x149765 (- (- ?x149761 (* (* 2.0 l_0_22_505) l_0_22_526)) (* (* 2.0 l_0_22_541) l_0_22_562))))
 (let ((?x149769 (+ (+ ?x149765 (* (* 2.0 l_0_22_74) l_0_22_94)) (* (* 2.0 l_0_22_75) l_0_22_95))))
 (= ?x149769 0.0))))))))))))))
(assert
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x147316 (* ?x146164 l_0_22_318)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x147314 (* ?x146161 l_0_22_317)))
 (let ((?x149805 (+ (* (* 2.0 l_0_22_101) l_0_22_74) (* (* 2.0 l_0_22_102) l_0_22_75))))
 (let ((?x149809 (- (- ?x149805 (* (* 2.0 l_0_22_110) l_0_22_137)) (* (* 2.0 l_0_22_111) l_0_22_138))))
 (let ((?x149815 (- (+ (+ (- ?x149809 (* (* 2.0 l_0_22_217) l_0_22_218)) ?x147314) ?x147316) (* (* 2.0 l_0_22_325) l_0_22_353))))
 (let ((?x149819 (- (- ?x149815 (* (* 2.0 l_0_22_361) l_0_22_389)) (* (* 2.0 l_0_22_397) l_0_22_425))))
 (let ((?x149823 (- (- ?x149819 (* (* 2.0 l_0_22_433) l_0_22_461)) (* (* 2.0 l_0_22_469) l_0_22_497))))
 (let ((?x149827 (- (- ?x149823 (* (* 2.0 l_0_22_505) l_0_22_533)) (* (* 2.0 l_0_22_541) l_0_22_569))))
 (= ?x149827 0.0))))))))))))
(assert
 (let ((?x122768 (* l_0_22_78 l_0_22_78)))
 (let ((?x100248 (* l_0_22_77 l_0_22_77)))
 (let ((?x144601 (* l_0_22_76 l_0_22_76)))
 (let ((?x147452 (* l_0_22_294 l_0_22_294)))
 (let ((?x147450 (* l_0_22_293 l_0_22_293)))
 (let ((?x147449 (* l_0_22_292 l_0_22_292)))
 (let ((?x144526 (* l_0_22_114 l_0_22_114)))
 (let ((?x149862 (- (- (* (- l_0_22_112) l_0_22_112) (* l_0_22_113 l_0_22_113)) ?x144526)))
 (= (+ (+ (+ (+ (+ (+ ?x149862 ?x147449) ?x147450) ?x147452) ?x144601) ?x100248) ?x122768) 0.0))))))))))
(assert
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x124240 (* ?x143540 l_0_22_301)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x60408 (* ?x143537 l_0_22_300)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x102320 (* ?x143534 l_0_22_299)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x149882 (* ?x146323 l_0_22_256)))
 (let ((?x149879 (- (* (* (- 2.0) l_0_22_112) l_0_22_119) (* (* 2.0 l_0_22_113) l_0_22_120))))
 (let ((?x149885 (+ (+ (+ (- ?x149879 (* (* 2.0 l_0_22_114) l_0_22_121)) ?x149882) ?x102320) ?x60408)))
 (let ((?x149890 (+ (+ (+ ?x149885 ?x124240) (* (* 2.0 l_0_22_76) l_0_22_83)) (* (* 2.0 l_0_22_77) l_0_22_84))))
 (= (+ ?x149890 (* (* 2.0 l_0_22_78) l_0_22_85)) 0.0)))))))))))))
(assert
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x147489 (* ?x143540 l_0_22_306)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x147486 (* ?x143537 l_0_22_305)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x147483 (* ?x143534 l_0_22_304)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146234 (* ?x146129 l_0_22_292)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143575 (* ?x143528 l_0_22_184)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143571 (* ?x143525 l_0_22_148)))
 (let ((?x105804 (- (* (* (- 2.0) l_0_22_112) l_0_22_124) (* (* 2.0 l_0_22_113) l_0_22_125))))
 (let ((?x128805 (- (- (+ (- ?x105804 (* (* 2.0 l_0_22_114) l_0_22_126)) ?x143571) ?x143575) ?x146234)))
 (let ((?x128808 (+ (+ (+ (+ ?x128805 ?x147483) ?x147486) ?x147489) (* (* 2.0 l_0_22_76) l_0_22_88))))
 (let ((?x149906 (+ (+ ?x128808 (* (* 2.0 l_0_22_77) l_0_22_89)) (* (* 2.0 l_0_22_78) l_0_22_90))))
 (= ?x149906 0.0))))))))))))))))))
(assert
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x60503 (* ?x143540 l_0_22_312)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x25909 (* ?x143537 l_0_22_311)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x60464 (* ?x143534 l_0_22_310)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x149882 (* ?x146323 l_0_22_256)))
 (let ((?x38403 (- (* (* (- 2.0) l_0_22_112) l_0_22_130) (* (* 2.0 l_0_22_113) l_0_22_131))))
 (let ((?x149931 (+ (+ (- (- ?x38403 (* (* 2.0 l_0_22_114) l_0_22_132)) ?x149882) ?x60464) ?x25909)))
 (let ((?x149936 (+ (+ (+ ?x149931 ?x60503) (* (* 2.0 l_0_22_76) l_0_22_94)) (* (* 2.0 l_0_22_77) l_0_22_95))))
 (= (+ ?x149936 (* (* 2.0 l_0_22_78) l_0_22_96)) 0.0)))))))))))))
(assert
 (let ((?x61726 (* l_0_22_87 l_0_22_87)))
 (let ((?x37389 (* l_0_22_86 l_0_22_86)))
 (let ((?x128069 (* l_0_22_85 l_0_22_85)))
 (let ((?x128020 (* l_0_22_84 l_0_22_84)))
 (let ((?x128019 (* l_0_22_83 l_0_22_83)))
 (let ((?x147589 (* l_0_22_303 l_0_22_303)))
 (let ((?x147587 (* l_0_22_302 l_0_22_302)))
 (let ((?x147585 (* l_0_22_301 l_0_22_301)))
 (let ((?x147583 (* l_0_22_300 l_0_22_300)))
 (let ((?x147581 (* l_0_22_299 l_0_22_299)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x149957 (* ?x146323 l_0_22_263)))
 (let ((?x148937 (* l_0_22_123 l_0_22_123)))
 (let ((?x148934 (* l_0_22_122 l_0_22_122)))
 (let ((?x148931 (* l_0_22_121 l_0_22_121)))
 (let ((?x149954 (- (- (* (- l_0_22_119) l_0_22_119) (* l_0_22_120 l_0_22_120)) ?x148931)))
 (let ((?x149962 (+ (+ (+ (+ (+ (- (- ?x149954 ?x148934) ?x148937) ?x149957) ?x147581) ?x147583) ?x147585) ?x147587)))
 (= (+ (+ (+ (+ (+ (+ ?x149962 ?x147589) ?x128019) ?x128020) ?x128069) ?x37389) ?x61726) 0.0)))))))))))))))))))
(assert
 (let ((?x147637 (* 2.0 l_0_22_303)))
 (let ((?x147638 (* ?x147637 l_0_22_308)))
 (let ((?x147634 (* 2.0 l_0_22_302)))
 (let ((?x147635 (* ?x147634 l_0_22_307)))
 (let ((?x147631 (* 2.0 l_0_22_301)))
 (let ((?x147632 (* ?x147631 l_0_22_306)))
 (let ((?x147628 (* 2.0 l_0_22_300)))
 (let ((?x147629 (* ?x147628 l_0_22_305)))
 (let ((?x147625 (* 2.0 l_0_22_299)))
 (let ((?x147626 (* ?x147625 l_0_22_304)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146326 (* ?x146129 l_0_22_299)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x149994 (* ?x146323 l_0_22_268)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143623 (* ?x143528 l_0_22_191)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143616 (* ?x143525 l_0_22_155)))
 (let ((?x149982 (- (* (* (- 2.0) l_0_22_119) l_0_22_124) (* (* 2.0 l_0_22_120) l_0_22_125))))
 (let ((?x149988 (- (- ?x149982 (* (* 2.0 l_0_22_121) l_0_22_126)) (* (* 2.0 l_0_22_122) l_0_22_127))))
 (let ((?x149995 (+ (- (+ (- ?x149988 (* (* 2.0 l_0_22_123) l_0_22_128)) ?x143616) ?x143623) ?x149994)))
 (let ((?x150004 (+ (+ (+ (+ (+ (+ (- ?x149995 ?x146326) ?x147626) ?x147629) ?x147632) ?x147635) ?x147638) (* (* 2.0 l_0_22_83) l_0_22_88))))
 (let ((?x150010 (+ (+ ?x150004 (* (* 2.0 l_0_22_84) l_0_22_89)) (* (* 2.0 l_0_22_85) l_0_22_90))))
 (let ((?x150016 (+ (+ ?x150010 (* (* 2.0 l_0_22_86) l_0_22_91)) (* (* 2.0 l_0_22_87) l_0_22_92))))
 (= ?x150016 0.0))))))))))))))))))))))))))
(assert
 (let ((?x147637 (* 2.0 l_0_22_303)))
 (let ((?x147658 (* ?x147637 l_0_22_314)))
 (let ((?x147634 (* 2.0 l_0_22_302)))
 (let ((?x147656 (* ?x147634 l_0_22_313)))
 (let ((?x147631 (* 2.0 l_0_22_301)))
 (let ((?x147654 (* ?x147631 l_0_22_312)))
 (let ((?x147628 (* 2.0 l_0_22_300)))
 (let ((?x147652 (* ?x147628 l_0_22_311)))
 (let ((?x147625 (* 2.0 l_0_22_299)))
 (let ((?x147650 (* ?x147625 l_0_22_310)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x150053 (* ?x146323 l_0_22_274)))
 (let ((?x149957 (* ?x146323 l_0_22_263)))
 (let ((?x150045 (- (* (* (- 2.0) l_0_22_119) l_0_22_130) (* (* 2.0 l_0_22_120) l_0_22_131))))
 (let ((?x150049 (- (- ?x150045 (* (* 2.0 l_0_22_121) l_0_22_132)) (* (* 2.0 l_0_22_122) l_0_22_133))))
 (let ((?x150055 (+ (+ (- (- ?x150049 (* (* 2.0 l_0_22_123) l_0_22_134)) ?x149957) ?x150053) ?x147650)))
 (let ((?x150061 (+ (+ (+ (+ (+ ?x150055 ?x147652) ?x147654) ?x147656) ?x147658) (* (* 2.0 l_0_22_83) l_0_22_94))))
 (let ((?x150065 (+ (+ ?x150061 (* (* 2.0 l_0_22_84) l_0_22_95)) (* (* 2.0 l_0_22_85) l_0_22_96))))
 (let ((?x150069 (+ (+ ?x150065 (* (* 2.0 l_0_22_86) l_0_22_97)) (* (* 2.0 l_0_22_87) l_0_22_98))))
 (= ?x150069 0.0)))))))))))))))))))))
(assert
 (let ((?x147637 (* 2.0 l_0_22_303)))
 (let ((?x147712 (* ?x147637 l_0_22_321)))
 (let ((?x147634 (* 2.0 l_0_22_302)))
 (let ((?x147710 (* ?x147634 l_0_22_320)))
 (let ((?x147631 (* 2.0 l_0_22_301)))
 (let ((?x147708 (* ?x147631 l_0_22_319)))
 (let ((?x147628 (* 2.0 l_0_22_300)))
 (let ((?x147706 (* ?x147628 l_0_22_318)))
 (let ((?x147625 (* 2.0 l_0_22_299)))
 (let ((?x147704 (* ?x147625 l_0_22_317)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x148040 (* ?x146323 l_0_22_281)))
 (let ((?x128870 (+ (* (* 2.0 l_0_22_101) l_0_22_83) (* (* 2.0 l_0_22_102) l_0_22_84))))
 (let ((?x128887 (+ (+ ?x128870 (* (* 2.0 l_0_22_103) l_0_22_85)) (* (* 2.0 l_0_22_104) l_0_22_86))))
 (let ((?x105914 (- (+ ?x128887 (* (* 2.0 l_0_22_105) l_0_22_87)) (* (* 2.0 l_0_22_119) l_0_22_137))))
 (let ((?x105969 (- (- ?x105914 (* (* 2.0 l_0_22_120) l_0_22_138)) (* (* 2.0 l_0_22_121) l_0_22_139))))
 (let ((?x81023 (- (- ?x105969 (* (* 2.0 l_0_22_122) l_0_22_140)) (* (* 2.0 l_0_22_123) l_0_22_141))))
 (let ((?x150082 (+ (+ (+ (- ?x81023 (* (* 2.0 l_0_22_217) l_0_22_227)) ?x148040) ?x147704) ?x147706)))
 (= (+ (+ (+ ?x150082 ?x147708) ?x147710) ?x147712) 0.0))))))))))))))))))))
(assert
 (let ((?x34687 (* l_0_22_93 l_0_22_93)))
 (let ((?x128381 (* l_0_22_92 l_0_22_92)))
 (let ((?x128378 (* l_0_22_91 l_0_22_91)))
 (let ((?x61868 (* l_0_22_90 l_0_22_90)))
 (let ((?x37531 (* l_0_22_89 l_0_22_89)))
 (let ((?x128369 (* l_0_22_88 l_0_22_88)))
 (let ((?x147782 (* l_0_22_309 l_0_22_309)))
 (let ((?x147780 (* l_0_22_308 l_0_22_308)))
 (let ((?x147778 (* l_0_22_307 l_0_22_307)))
 (let ((?x147776 (* l_0_22_306 l_0_22_306)))
 (let ((?x147774 (* l_0_22_305 l_0_22_305)))
 (let ((?x147772 (* l_0_22_304 l_0_22_304)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146394 (* ?x146129 l_0_22_304)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143641 (* ?x143528 l_0_22_196)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143639 (* ?x143525 l_0_22_160)))
 (let ((?x149123 (* l_0_22_129 l_0_22_129)))
 (let ((?x149120 (* l_0_22_128 l_0_22_128)))
 (let ((?x149117 (* l_0_22_127 l_0_22_127)))
 (let ((?x149114 (* l_0_22_126 l_0_22_126)))
 (let ((?x104522 (- (- (* (- l_0_22_124) l_0_22_124) (* l_0_22_125 l_0_22_125)) ?x149114)))
 (let ((?x150118 (+ (- (- (+ (- (- (- ?x104522 ?x149117) ?x149120) ?x149123) ?x143639) ?x143641) ?x146394) ?x147772)))
 (let ((?x150125 (+ (+ (+ (+ (+ (+ (+ ?x150118 ?x147774) ?x147776) ?x147778) ?x147780) ?x147782) ?x128369) ?x37531)))
 (= (+ (+ (+ (+ ?x150125 ?x61868) ?x128378) ?x128381) ?x34687) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x147816 (* 2.0 l_0_22_309)))
 (let ((?x147817 (* ?x147816 l_0_22_315)))
 (let ((?x147813 (* 2.0 l_0_22_308)))
 (let ((?x147814 (* ?x147813 l_0_22_314)))
 (let ((?x147810 (* 2.0 l_0_22_307)))
 (let ((?x147811 (* ?x147810 l_0_22_313)))
 (let ((?x147807 (* 2.0 l_0_22_306)))
 (let ((?x147808 (* ?x147807 l_0_22_312)))
 (let ((?x147804 (* 2.0 l_0_22_305)))
 (let ((?x147805 (* ?x147804 l_0_22_311)))
 (let ((?x147801 (* 2.0 l_0_22_304)))
 (let ((?x147802 (* ?x147801 l_0_22_310)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146454 (* ?x146129 l_0_22_310)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x149994 (* ?x146323 l_0_22_268)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143668 (* ?x143528 l_0_22_202)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143666 (* ?x143525 l_0_22_166)))
 (let ((?x150149 (- (* (* (- 2.0) l_0_22_124) l_0_22_130) (* (* 2.0 l_0_22_125) l_0_22_131))))
 (let ((?x150155 (- (- ?x150149 (* (* 2.0 l_0_22_126) l_0_22_132)) (* (* 2.0 l_0_22_127) l_0_22_133))))
 (let ((?x150161 (- (- ?x150155 (* (* 2.0 l_0_22_128) l_0_22_134)) (* (* 2.0 l_0_22_129) l_0_22_135))))
 (let ((?x150168 (+ (+ (+ (- (- (- (+ ?x150161 ?x143666) ?x143668) ?x149994) ?x146454) ?x147802) ?x147805) ?x147808)))
 (let ((?x150174 (+ (+ (+ (+ ?x150168 ?x147811) ?x147814) ?x147817) (* (* 2.0 l_0_22_88) l_0_22_94))))
 (let ((?x150180 (+ (+ ?x150174 (* (* 2.0 l_0_22_89) l_0_22_95)) (* (* 2.0 l_0_22_90) l_0_22_96))))
 (let ((?x150186 (+ (+ ?x150180 (* (* 2.0 l_0_22_91) l_0_22_97)) (* (* 2.0 l_0_22_92) l_0_22_98))))
 (= (+ ?x150186 (* (* 2.0 l_0_22_93) l_0_22_99)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x147816 (* 2.0 l_0_22_309)))
 (let ((?x147854 (* ?x147816 l_0_22_322)))
 (let ((?x147813 (* 2.0 l_0_22_308)))
 (let ((?x147852 (* ?x147813 l_0_22_321)))
 (let ((?x147810 (* 2.0 l_0_22_307)))
 (let ((?x147850 (* ?x147810 l_0_22_320)))
 (let ((?x147807 (* 2.0 l_0_22_306)))
 (let ((?x147848 (* ?x147807 l_0_22_319)))
 (let ((?x147804 (* 2.0 l_0_22_305)))
 (let ((?x147846 (* ?x147804 l_0_22_318)))
 (let ((?x147801 (* 2.0 l_0_22_304)))
 (let ((?x147844 (* ?x147801 l_0_22_317)))
 (let ((?x146129 (* 2.0 l_0_22_289)))
 (let ((?x146530 (* ?x146129 l_0_22_317)))
 (let ((?x143528 (* 2.0 l_0_22_181)))
 (let ((?x143698 (* ?x143528 l_0_22_209)))
 (let ((?x143525 (* 2.0 l_0_22_145)))
 (let ((?x143696 (* ?x143525 l_0_22_173)))
 (let ((?x128949 (+ (* (* 2.0 l_0_22_101) l_0_22_88) (* (* 2.0 l_0_22_102) l_0_22_89))))
 (let ((?x150211 (+ (+ ?x128949 (* (* 2.0 l_0_22_103) l_0_22_90)) (* (* 2.0 l_0_22_104) l_0_22_91))))
 (let ((?x150230 (+ (+ ?x150211 (* (* 2.0 l_0_22_105) l_0_22_92)) (* (* 2.0 l_0_22_106) l_0_22_93))))
 (let ((?x150235 (- (- ?x150230 (* (* 2.0 l_0_22_124) l_0_22_137)) (* (* 2.0 l_0_22_125) l_0_22_138))))
 (let ((?x150239 (- (- ?x150235 (* (* 2.0 l_0_22_126) l_0_22_139)) (* (* 2.0 l_0_22_127) l_0_22_140))))
 (let ((?x150243 (- (- ?x150239 (* (* 2.0 l_0_22_128) l_0_22_141)) (* (* 2.0 l_0_22_129) l_0_22_142))))
 (let ((?x150248 (- (- (- (+ ?x150243 ?x143696) ?x143698) (* (* 2.0 l_0_22_217) l_0_22_232)) ?x146530)))
 (= (+ (+ (+ (+ (+ (+ ?x150248 ?x147844) ?x147846) ?x147848) ?x147850) ?x147852) ?x147854) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x60011 (* l_0_22_99 l_0_22_99)))
 (let ((?x105434 (* l_0_22_98 l_0_22_98)))
 (let ((?x105433 (* l_0_22_97 l_0_22_97)))
 (let ((?x105411 (* l_0_22_96 l_0_22_96)))
 (let ((?x128482 (* l_0_22_95 l_0_22_95)))
 (let ((?x105398 (* l_0_22_94 l_0_22_94)))
 (let ((?x147882 (* l_0_22_316 l_0_22_316)))
 (let ((?x104154 (* l_0_22_315 l_0_22_315)))
 (let ((?x125265 (* l_0_22_314 l_0_22_314)))
 (let ((?x125248 (* l_0_22_313 l_0_22_313)))
 (let ((?x125262 (* l_0_22_312 l_0_22_312)))
 (let ((?x34925 (* l_0_22_311 l_0_22_311)))
 (let ((?x81540 (* l_0_22_310 l_0_22_310)))
 (let ((?x146323 (* 2.0 l_0_22_253)))
 (let ((?x150053 (* ?x146323 l_0_22_274)))
 (let ((?x149301 (* l_0_22_136 l_0_22_136)))
 (let ((?x149298 (* l_0_22_135 l_0_22_135)))
 (let ((?x149295 (* l_0_22_134 l_0_22_134)))
 (let ((?x149292 (* l_0_22_133 l_0_22_133)))
 (let ((?x149289 (* l_0_22_132 l_0_22_132)))
 (let ((?x149286 (* l_0_22_131 l_0_22_131)))
 (let ((?x150284 (- (- (* l_0_22_100 l_0_22_100) (* l_0_22_130 l_0_22_130)) ?x149286)))
 (let ((?x150291 (+ (- (- (- (- (- (- ?x150284 ?x149289) ?x149292) ?x149295) ?x149298) ?x149301) ?x150053) ?x81540)))
 (let ((?x150298 (+ (+ (+ (+ (+ (+ (+ ?x150291 ?x34925) ?x125262) ?x125248) ?x125265) ?x104154) ?x147882) ?x105398)))
 (= (+ (+ (+ (+ (+ ?x150298 ?x128482) ?x105411) ?x105433) ?x105434) ?x60011) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x147975 (* l_0_22_324 l_0_22_324)))
 (let ((?x147973 (* l_0_22_323 l_0_22_323)))
 (let ((?x147971 (* l_0_22_322 l_0_22_322)))
 (let ((?x147969 (* l_0_22_321 l_0_22_321)))
 (let ((?x147967 (* l_0_22_320 l_0_22_320)))
 (let ((?x147964 (* l_0_22_319 l_0_22_319)))
 (let ((?x147962 (* l_0_22_318 l_0_22_318)))
 (let ((?x147960 (* l_0_22_317 l_0_22_317)))
 (let ((?x149441 (* l_0_22_144 l_0_22_144)))
 (let ((?x149438 (* l_0_22_143 l_0_22_143)))
 (let ((?x149435 (* l_0_22_142 l_0_22_142)))
 (let ((?x149432 (* l_0_22_141 l_0_22_141)))
 (let ((?x149429 (* l_0_22_140 l_0_22_140)))
 (let ((?x149426 (* l_0_22_139 l_0_22_139)))
 (let ((?x149423 (* l_0_22_138 l_0_22_138)))
 (let ((?x149420 (* l_0_22_137 l_0_22_137)))
 (let ((?x105637 (* l_0_22_108 l_0_22_108)))
 (let ((?x62092 (* l_0_22_107 l_0_22_107)))
 (let ((?x128581 (* l_0_22_106 l_0_22_106)))
 (let ((?x105431 (* l_0_22_105 l_0_22_105)))
 (let ((?x128494 (* l_0_22_104 l_0_22_104)))
 (let ((?x128491 (* l_0_22_103 l_0_22_103)))
 (let ((?x83679 (+ (+ (* l_0_22_101 l_0_22_101) (* l_0_22_102 l_0_22_102)) ?x128491)))
 (let ((?x150317 (- (- (+ (+ (+ (+ (+ ?x83679 ?x128494) ?x105431) ?x128581) ?x62092) ?x105637) ?x149420) ?x149423)))
 (let ((?x150325 (- (- (- (- (- (- (- ?x150317 ?x149426) ?x149429) ?x149432) ?x149435) ?x149438) ?x149441) (* (* 2.0 l_0_22_217) l_0_22_245))))
 (let ((?x150332 (+ (+ (+ (+ (+ (+ (+ ?x150325 ?x147960) ?x147962) ?x147964) ?x147967) ?x147969) ?x147971) ?x147973)))
 (= (+ ?x150332 ?x147975) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x146591 (* l_0_22_291 l_0_22_291)))
 (let ((?x146589 (* l_0_22_290 l_0_22_290)))
 (let ((?x143719 (* l_0_22_183 l_0_22_183)))
 (let ((?x143717 (* l_0_22_182 l_0_22_182)))
 (let ((?x106279 (- (+ (* l_0_22_146 l_0_22_146) (* l_0_22_147 l_0_22_147)) ?x143717)))
 (let ((?x63083 (- (- (- (- ?x106279 ?x143719) ?x146589) ?x146591) (* (* 2.0 l_0_22_326) l_0_22_340))))
 (let ((?x38822 (- (- ?x63083 (* (* 2.0 l_0_22_327) l_0_22_341)) (* (* 2.0 l_0_22_362) l_0_22_376))))
 (let ((?x150358 (- (- ?x38822 (* (* 2.0 l_0_22_363) l_0_22_377)) (* (* 2.0 l_0_22_398) l_0_22_412))))
 (let ((?x150362 (- (- ?x150358 (* (* 2.0 l_0_22_399) l_0_22_413)) (* (* 2.0 l_0_22_434) l_0_22_448))))
 (let ((?x150366 (- (- ?x150362 (* (* 2.0 l_0_22_435) l_0_22_449)) (* (* 2.0 l_0_22_470) l_0_22_484))))
 (let ((?x150370 (- (- ?x150366 (* (* 2.0 l_0_22_471) l_0_22_485)) (* (* 2.0 l_0_22_506) l_0_22_520))))
 (let ((?x150374 (- (- ?x150370 (* (* 2.0 l_0_22_507) l_0_22_521)) (* (* 2.0 l_0_22_542) l_0_22_556))))
 (= (- ?x150374 (* (* 2.0 l_0_22_543) l_0_22_557)) 0.0))))))))))))))
(assert
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x146664 (* ?x146164 l_0_22_293)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x146662 (* ?x146161 l_0_22_292)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x143861 (* ?x143860 l_0_22_185)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x143858 (* ?x143857 l_0_22_184)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x143855 (* ?x143854 l_0_22_149)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x144170 (* ?x144004 l_0_22_148)))
 (let ((?x150442 (- (- (- (- (- (+ ?x144170 ?x143855) ?x143858) ?x143861) ?x146662) ?x146664) (* (* 2.0 l_0_22_328) l_0_22_340))))
 (let ((?x150446 (- (- ?x150442 (* (* 2.0 l_0_22_329) l_0_22_341)) (* (* 2.0 l_0_22_330) l_0_22_342))))
 (let ((?x150450 (- (- ?x150446 (* (* 2.0 l_0_22_364) l_0_22_376)) (* (* 2.0 l_0_22_365) l_0_22_377))))
 (let ((?x150454 (- (- ?x150450 (* (* 2.0 l_0_22_366) l_0_22_378)) (* (* 2.0 l_0_22_400) l_0_22_412))))
 (let ((?x150458 (- (- ?x150454 (* (* 2.0 l_0_22_401) l_0_22_413)) (* (* 2.0 l_0_22_402) l_0_22_414))))
 (let ((?x150462 (- (- ?x150458 (* (* 2.0 l_0_22_436) l_0_22_448)) (* (* 2.0 l_0_22_437) l_0_22_449))))
 (let ((?x150466 (- (- ?x150462 (* (* 2.0 l_0_22_438) l_0_22_450)) (* (* 2.0 l_0_22_472) l_0_22_484))))
 (let ((?x150470 (- (- ?x150466 (* (* 2.0 l_0_22_473) l_0_22_485)) (* (* 2.0 l_0_22_474) l_0_22_486))))
 (let ((?x150474 (- (- ?x150470 (* (* 2.0 l_0_22_508) l_0_22_520)) (* (* 2.0 l_0_22_509) l_0_22_521))))
 (let ((?x150478 (- (- ?x150474 (* (* 2.0 l_0_22_510) l_0_22_522)) (* (* 2.0 l_0_22_544) l_0_22_556))))
 (let ((?x150482 (- (- ?x150478 (* (* 2.0 l_0_22_545) l_0_22_557)) (* (* 2.0 l_0_22_546) l_0_22_558))))
 (= ?x150482 0.0)))))))))))))))))))))))))
(assert
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x146888 (* ?x146164 l_0_22_300)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x146886 (* ?x146161 l_0_22_299)))
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x150568 (* ?x146883 l_0_22_269)))
 (let ((?x146880 (* 2.0 l_0_22_254)))
 (let ((?x150566 (* ?x146880 l_0_22_268)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x144011 (* ?x143860 l_0_22_192)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x144009 (* ?x143857 l_0_22_191)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144007 (* ?x143854 l_0_22_156)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x144005 (* ?x144004 l_0_22_155)))
 (let ((?x150571 (- (- (+ (+ (- (- (+ ?x144005 ?x144007) ?x144009) ?x144011) ?x150566) ?x150568) ?x146886) ?x146888)))
 (let ((?x150577 (- (- ?x150571 (* (* 2.0 l_0_22_335) l_0_22_340)) (* (* 2.0 l_0_22_336) l_0_22_341))))
 (let ((?x150583 (- (- ?x150577 (* (* 2.0 l_0_22_337) l_0_22_342)) (* (* 2.0 l_0_22_338) l_0_22_343))))
 (let ((?x150589 (- (- ?x150583 (* (* 2.0 l_0_22_339) l_0_22_344)) (* (* 2.0 l_0_22_371) l_0_22_376))))
 (let ((?x150595 (- (- ?x150589 (* (* 2.0 l_0_22_372) l_0_22_377)) (* (* 2.0 l_0_22_373) l_0_22_378))))
 (let ((?x150601 (- (- ?x150595 (* (* 2.0 l_0_22_374) l_0_22_379)) (* (* 2.0 l_0_22_375) l_0_22_380))))
 (let ((?x150607 (- (- ?x150601 (* (* 2.0 l_0_22_407) l_0_22_412)) (* (* 2.0 l_0_22_408) l_0_22_413))))
 (let ((?x150613 (- (- ?x150607 (* (* 2.0 l_0_22_409) l_0_22_414)) (* (* 2.0 l_0_22_410) l_0_22_415))))
 (let ((?x150619 (- (- ?x150613 (* (* 2.0 l_0_22_411) l_0_22_416)) (* (* 2.0 l_0_22_443) l_0_22_448))))
 (let ((?x150625 (- (- ?x150619 (* (* 2.0 l_0_22_444) l_0_22_449)) (* (* 2.0 l_0_22_445) l_0_22_450))))
 (let ((?x150631 (- (- ?x150625 (* (* 2.0 l_0_22_446) l_0_22_451)) (* (* 2.0 l_0_22_447) l_0_22_452))))
 (let ((?x150637 (- (- ?x150631 (* (* 2.0 l_0_22_479) l_0_22_484)) (* (* 2.0 l_0_22_480) l_0_22_485))))
 (let ((?x150643 (- (- ?x150637 (* (* 2.0 l_0_22_481) l_0_22_486)) (* (* 2.0 l_0_22_482) l_0_22_487))))
 (let ((?x150649 (- (- ?x150643 (* (* 2.0 l_0_22_483) l_0_22_488)) (* (* 2.0 l_0_22_515) l_0_22_520))))
 (let ((?x150655 (- (- ?x150649 (* (* 2.0 l_0_22_516) l_0_22_521)) (* (* 2.0 l_0_22_517) l_0_22_522))))
 (let ((?x150661 (- (- ?x150655 (* (* 2.0 l_0_22_518) l_0_22_523)) (* (* 2.0 l_0_22_519) l_0_22_524))))
 (let ((?x150667 (- (- ?x150661 (* (* 2.0 l_0_22_551) l_0_22_556)) (* (* 2.0 l_0_22_552) l_0_22_557))))
 (let ((?x150673 (- (- ?x150667 (* (* 2.0 l_0_22_553) l_0_22_558)) (* (* 2.0 l_0_22_554) l_0_22_559))))
 (= (- ?x150673 (* (* 2.0 l_0_22_555) l_0_22_560)) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x150869 (* l_0_22_561 l_0_22_561)))
 (let ((?x150867 (* l_0_22_560 l_0_22_560)))
 (let ((?x150865 (* l_0_22_559 l_0_22_559)))
 (let ((?x150863 (* l_0_22_558 l_0_22_558)))
 (let ((?x150861 (* l_0_22_557 l_0_22_557)))
 (let ((?x150859 (* l_0_22_556 l_0_22_556)))
 (let ((?x150857 (* l_0_22_525 l_0_22_525)))
 (let ((?x150855 (* l_0_22_524 l_0_22_524)))
 (let ((?x150853 (* l_0_22_523 l_0_22_523)))
 (let ((?x150851 (* l_0_22_522 l_0_22_522)))
 (let ((?x150849 (* l_0_22_521 l_0_22_521)))
 (let ((?x150847 (* l_0_22_520 l_0_22_520)))
 (let ((?x150845 (* l_0_22_489 l_0_22_489)))
 (let ((?x150843 (* l_0_22_488 l_0_22_488)))
 (let ((?x150841 (* l_0_22_487 l_0_22_487)))
 (let ((?x150839 (* l_0_22_486 l_0_22_486)))
 (let ((?x150837 (* l_0_22_485 l_0_22_485)))
 (let ((?x150835 (* l_0_22_484 l_0_22_484)))
 (let ((?x150833 (* l_0_22_453 l_0_22_453)))
 (let ((?x150831 (* l_0_22_452 l_0_22_452)))
 (let ((?x150829 (* l_0_22_451 l_0_22_451)))
 (let ((?x150827 (* l_0_22_450 l_0_22_450)))
 (let ((?x150825 (* l_0_22_449 l_0_22_449)))
 (let ((?x150823 (* l_0_22_448 l_0_22_448)))
 (let ((?x150821 (* l_0_22_417 l_0_22_417)))
 (let ((?x150819 (* l_0_22_416 l_0_22_416)))
 (let ((?x150817 (* l_0_22_415 l_0_22_415)))
 (let ((?x150815 (* l_0_22_414 l_0_22_414)))
 (let ((?x150813 (* l_0_22_413 l_0_22_413)))
 (let ((?x150811 (* l_0_22_412 l_0_22_412)))
 (let ((?x150809 (* l_0_22_381 l_0_22_381)))
 (let ((?x150807 (* l_0_22_380 l_0_22_380)))
 (let ((?x150805 (* l_0_22_379 l_0_22_379)))
 (let ((?x150803 (* l_0_22_378 l_0_22_378)))
 (let ((?x150801 (* l_0_22_377 l_0_22_377)))
 (let ((?x150799 (* l_0_22_376 l_0_22_376)))
 (let ((?x150797 (* l_0_22_345 l_0_22_345)))
 (let ((?x150795 (* l_0_22_344 l_0_22_344)))
 (let ((?x150793 (* l_0_22_343 l_0_22_343)))
 (let ((?x150791 (* l_0_22_342 l_0_22_342)))
 (let ((?x150789 (* l_0_22_341 l_0_22_341)))
 (let ((?x150787 (* l_0_22_340 l_0_22_340)))
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x147091 (* ?x146164 l_0_22_305)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x147088 (* ?x146161 l_0_22_304)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x144088 (* ?x143860 l_0_22_197)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x144086 (* ?x143857 l_0_22_196)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144069 (* ?x143854 l_0_22_161)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x148550 (* ?x144004 l_0_22_160)))
 (let ((?x150790 (- (- (- (- (- (- (+ ?x148550 ?x144069) ?x144086) ?x144088) ?x147088) ?x147091) ?x150787) ?x150789)))
 (let ((?x150804 (- (- (- (- (- (- (- ?x150790 ?x150791) ?x150793) ?x150795) ?x150797) ?x150799) ?x150801) ?x150803)))
 (let ((?x150818 (- (- (- (- (- (- (- ?x150804 ?x150805) ?x150807) ?x150809) ?x150811) ?x150813) ?x150815) ?x150817)))
 (let ((?x150832 (- (- (- (- (- (- (- ?x150818 ?x150819) ?x150821) ?x150823) ?x150825) ?x150827) ?x150829) ?x150831)))
 (let ((?x150846 (- (- (- (- (- (- (- ?x150832 ?x150833) ?x150835) ?x150837) ?x150839) ?x150841) ?x150843) ?x150845)))
 (let ((?x150860 (- (- (- (- (- (- (- ?x150846 ?x150847) ?x150849) ?x150851) ?x150853) ?x150855) ?x150857) ?x150859)))
 (= (- (- (- (- (- ?x150860 ?x150861) ?x150863) ?x150865) ?x150867) ?x150869) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x147188 (* ?x146164 l_0_22_311)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x147186 (* ?x146161 l_0_22_310)))
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x150568 (* ?x146883 l_0_22_269)))
 (let ((?x146880 (* 2.0 l_0_22_254)))
 (let ((?x150566 (* ?x146880 l_0_22_268)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x144179 (* ?x143860 l_0_22_203)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x144177 (* ?x143857 l_0_22_202)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144175 (* ?x143854 l_0_22_167)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x144172 (* ?x144004 l_0_22_166)))
 (let ((?x150946 (- (- (- (- (- (- (+ ?x144172 ?x144175) ?x144177) ?x144179) ?x150566) ?x150568) ?x147186) ?x147188)))
 (let ((?x150952 (- (- ?x150946 (* (* 2.0 l_0_22_340) l_0_22_346)) (* (* 2.0 l_0_22_341) l_0_22_347))))
 (let ((?x150958 (- (- ?x150952 (* (* 2.0 l_0_22_342) l_0_22_348)) (* (* 2.0 l_0_22_343) l_0_22_349))))
 (let ((?x150964 (- (- ?x150958 (* (* 2.0 l_0_22_344) l_0_22_350)) (* (* 2.0 l_0_22_345) l_0_22_351))))
 (let ((?x150970 (- (- ?x150964 (* (* 2.0 l_0_22_376) l_0_22_382)) (* (* 2.0 l_0_22_377) l_0_22_383))))
 (let ((?x150976 (- (- ?x150970 (* (* 2.0 l_0_22_378) l_0_22_384)) (* (* 2.0 l_0_22_379) l_0_22_385))))
 (let ((?x150982 (- (- ?x150976 (* (* 2.0 l_0_22_380) l_0_22_386)) (* (* 2.0 l_0_22_381) l_0_22_387))))
 (let ((?x150988 (- (- ?x150982 (* (* 2.0 l_0_22_412) l_0_22_418)) (* (* 2.0 l_0_22_413) l_0_22_419))))
 (let ((?x150994 (- (- ?x150988 (* (* 2.0 l_0_22_414) l_0_22_420)) (* (* 2.0 l_0_22_415) l_0_22_421))))
 (let ((?x151000 (- (- ?x150994 (* (* 2.0 l_0_22_416) l_0_22_422)) (* (* 2.0 l_0_22_417) l_0_22_423))))
 (let ((?x151006 (- (- ?x151000 (* (* 2.0 l_0_22_448) l_0_22_454)) (* (* 2.0 l_0_22_449) l_0_22_455))))
 (let ((?x151012 (- (- ?x151006 (* (* 2.0 l_0_22_450) l_0_22_456)) (* (* 2.0 l_0_22_451) l_0_22_457))))
 (let ((?x151018 (- (- ?x151012 (* (* 2.0 l_0_22_452) l_0_22_458)) (* (* 2.0 l_0_22_453) l_0_22_459))))
 (let ((?x151024 (- (- ?x151018 (* (* 2.0 l_0_22_484) l_0_22_490)) (* (* 2.0 l_0_22_485) l_0_22_491))))
 (let ((?x151030 (- (- ?x151024 (* (* 2.0 l_0_22_486) l_0_22_492)) (* (* 2.0 l_0_22_487) l_0_22_493))))
 (let ((?x151036 (- (- ?x151030 (* (* 2.0 l_0_22_488) l_0_22_494)) (* (* 2.0 l_0_22_489) l_0_22_495))))
 (let ((?x151042 (- (- ?x151036 (* (* 2.0 l_0_22_520) l_0_22_526)) (* (* 2.0 l_0_22_521) l_0_22_527))))
 (let ((?x151048 (- (- ?x151042 (* (* 2.0 l_0_22_522) l_0_22_528)) (* (* 2.0 l_0_22_523) l_0_22_529))))
 (let ((?x151054 (- (- ?x151048 (* (* 2.0 l_0_22_524) l_0_22_530)) (* (* 2.0 l_0_22_525) l_0_22_531))))
 (let ((?x151060 (- (- ?x151054 (* (* 2.0 l_0_22_556) l_0_22_562)) (* (* 2.0 l_0_22_557) l_0_22_563))))
 (let ((?x151066 (- (- ?x151060 (* (* 2.0 l_0_22_558) l_0_22_564)) (* (* 2.0 l_0_22_559) l_0_22_565))))
 (let ((?x151072 (- (- ?x151066 (* (* 2.0 l_0_22_560) l_0_22_566)) (* (* 2.0 l_0_22_561) l_0_22_567))))
 (= ?x151072 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x146164 (* 2.0 l_0_22_291)))
 (let ((?x147316 (* ?x146164 l_0_22_318)))
 (let ((?x146161 (* 2.0 l_0_22_290)))
 (let ((?x147314 (* ?x146161 l_0_22_317)))
 (let ((?x143860 (* 2.0 l_0_22_183)))
 (let ((?x144255 (* ?x143860 l_0_22_210)))
 (let ((?x143857 (* 2.0 l_0_22_182)))
 (let ((?x144253 (* ?x143857 l_0_22_209)))
 (let ((?x143854 (* 2.0 l_0_22_147)))
 (let ((?x144251 (* ?x143854 l_0_22_174)))
 (let ((?x144004 (* 2.0 l_0_22_146)))
 (let ((?x127516 (* ?x144004 l_0_22_173)))
 (let ((?x151196 (- (- (- (+ ?x127516 ?x144251) ?x144253) ?x144255) (* (* 2.0 l_0_22_218) l_0_22_232))))
 (let ((?x151202 (- (- (- (- ?x151196 (* (* 2.0 l_0_22_219) l_0_22_233)) ?x147314) ?x147316) (* (* 2.0 l_0_22_340) l_0_22_353))))
 (let ((?x151206 (- (- ?x151202 (* (* 2.0 l_0_22_341) l_0_22_354)) (* (* 2.0 l_0_22_342) l_0_22_355))))
 (let ((?x151210 (- (- ?x151206 (* (* 2.0 l_0_22_343) l_0_22_356)) (* (* 2.0 l_0_22_344) l_0_22_357))))
 (let ((?x151214 (- (- ?x151210 (* (* 2.0 l_0_22_345) l_0_22_358)) (* (* 2.0 l_0_22_376) l_0_22_389))))
 (let ((?x151218 (- (- ?x151214 (* (* 2.0 l_0_22_377) l_0_22_390)) (* (* 2.0 l_0_22_378) l_0_22_391))))
 (let ((?x151222 (- (- ?x151218 (* (* 2.0 l_0_22_379) l_0_22_392)) (* (* 2.0 l_0_22_380) l_0_22_393))))
 (let ((?x151226 (- (- ?x151222 (* (* 2.0 l_0_22_381) l_0_22_394)) (* (* 2.0 l_0_22_412) l_0_22_425))))
 (let ((?x151230 (- (- ?x151226 (* (* 2.0 l_0_22_413) l_0_22_426)) (* (* 2.0 l_0_22_414) l_0_22_427))))
 (let ((?x151234 (- (- ?x151230 (* (* 2.0 l_0_22_415) l_0_22_428)) (* (* 2.0 l_0_22_416) l_0_22_429))))
 (let ((?x151238 (- (- ?x151234 (* (* 2.0 l_0_22_417) l_0_22_430)) (* (* 2.0 l_0_22_448) l_0_22_461))))
 (let ((?x151242 (- (- ?x151238 (* (* 2.0 l_0_22_449) l_0_22_462)) (* (* 2.0 l_0_22_450) l_0_22_463))))
 (let ((?x151246 (- (- ?x151242 (* (* 2.0 l_0_22_451) l_0_22_464)) (* (* 2.0 l_0_22_452) l_0_22_465))))
 (let ((?x151250 (- (- ?x151246 (* (* 2.0 l_0_22_453) l_0_22_466)) (* (* 2.0 l_0_22_484) l_0_22_497))))
 (let ((?x151254 (- (- ?x151250 (* (* 2.0 l_0_22_485) l_0_22_498)) (* (* 2.0 l_0_22_486) l_0_22_499))))
 (let ((?x151258 (- (- ?x151254 (* (* 2.0 l_0_22_487) l_0_22_500)) (* (* 2.0 l_0_22_488) l_0_22_501))))
 (let ((?x151262 (- (- ?x151258 (* (* 2.0 l_0_22_489) l_0_22_502)) (* (* 2.0 l_0_22_520) l_0_22_533))))
 (let ((?x151266 (- (- ?x151262 (* (* 2.0 l_0_22_521) l_0_22_534)) (* (* 2.0 l_0_22_522) l_0_22_535))))
 (let ((?x151270 (- (- ?x151266 (* (* 2.0 l_0_22_523) l_0_22_536)) (* (* 2.0 l_0_22_524) l_0_22_537))))
 (let ((?x151274 (- (- ?x151270 (* (* 2.0 l_0_22_525) l_0_22_538)) (* (* 2.0 l_0_22_556) l_0_22_569))))
 (let ((?x151278 (- (- ?x151274 (* (* 2.0 l_0_22_557) l_0_22_570)) (* (* 2.0 l_0_22_558) l_0_22_571))))
 (let ((?x151282 (- (- ?x151278 (* (* 2.0 l_0_22_559) l_0_22_572)) (* (* 2.0 l_0_22_560) l_0_22_573))))
 (= (- ?x151282 (* (* 2.0 l_0_22_561) l_0_22_574)) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x147452 (* l_0_22_294 l_0_22_294)))
 (let ((?x147450 (* l_0_22_293 l_0_22_293)))
 (let ((?x147449 (* l_0_22_292 l_0_22_292)))
 (let ((?x144315 (* l_0_22_186 l_0_22_186)))
 (let ((?x144313 (* l_0_22_185 l_0_22_185)))
 (let ((?x144311 (* l_0_22_184 l_0_22_184)))
 (let ((?x144309 (* l_0_22_150 l_0_22_150)))
 (let ((?x129774 (+ (+ (* l_0_22_148 l_0_22_148) (* l_0_22_149 l_0_22_149)) ?x144309)))
 (= (- (- (- (- (- (- ?x129774 ?x144311) ?x144313) ?x144315) ?x147449) ?x147450) ?x147452) 0.0))))))))))
(assert
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x124240 (* ?x143540 l_0_22_301)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x60408 (* ?x143537 l_0_22_300)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x102320 (* ?x143534 l_0_22_299)))
 (let ((?x144025 (* 2.0 l_0_22_258)))
 (let ((?x151381 (* ?x144025 l_0_22_270)))
 (let ((?x144022 (* 2.0 l_0_22_257)))
 (let ((?x151379 (* ?x144022 l_0_22_269)))
 (let ((?x144019 (* 2.0 l_0_22_256)))
 (let ((?x151377 (* ?x144019 l_0_22_268)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144426 (* ?x144096 l_0_22_193)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144424 (* ?x144093 l_0_22_192)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144422 (* ?x144090 l_0_22_191)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144420 (* ?x144077 l_0_22_157)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144418 (* ?x144074 l_0_22_156)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144416 (* ?x144071 l_0_22_155)))
 (let ((?x151380 (+ (+ (- (- (- (+ (+ ?x144416 ?x144418) ?x144420) ?x144422) ?x144424) ?x144426) ?x151377) ?x151379)))
 (= (- (- (- (+ ?x151380 ?x151381) ?x102320) ?x60408) ?x124240) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x147489 (* ?x143540 l_0_22_306)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x147486 (* ?x143537 l_0_22_305)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x147483 (* ?x143534 l_0_22_304)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144486 (* ?x144096 l_0_22_198)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144484 (* ?x144093 l_0_22_197)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144482 (* ?x144090 l_0_22_196)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144462 (* ?x144077 l_0_22_162)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144458 (* ?x144074 l_0_22_161)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x145454 (* ?x144071 l_0_22_160)))
 (let ((?x151408 (- (- (- (- (- (+ (+ ?x145454 ?x144458) ?x144462) ?x144482) ?x144484) ?x144486) ?x147483) ?x147486)))
 (= (- ?x151408 ?x147489) 0.0)))))))))))))))))))))
(assert
 (let ((?x143540 (* 2.0 l_0_22_294)))
 (let ((?x60503 (* ?x143540 l_0_22_312)))
 (let ((?x143537 (* 2.0 l_0_22_293)))
 (let ((?x25909 (* ?x143537 l_0_22_311)))
 (let ((?x143534 (* 2.0 l_0_22_292)))
 (let ((?x60464 (* ?x143534 l_0_22_310)))
 (let ((?x144025 (* 2.0 l_0_22_258)))
 (let ((?x151381 (* ?x144025 l_0_22_270)))
 (let ((?x144022 (* 2.0 l_0_22_257)))
 (let ((?x151379 (* ?x144022 l_0_22_269)))
 (let ((?x144019 (* 2.0 l_0_22_256)))
 (let ((?x151377 (* ?x144019 l_0_22_268)))
 (let ((?x144096 (* 2.0 l_0_22_186)))
 (let ((?x144551 (* ?x144096 l_0_22_204)))
 (let ((?x144093 (* 2.0 l_0_22_185)))
 (let ((?x144549 (* ?x144093 l_0_22_203)))
 (let ((?x144090 (* 2.0 l_0_22_184)))
 (let ((?x144547 (* ?x144090 l_0_22_202)))
 (let ((?x144077 (* 2.0 l_0_22_150)))
 (let ((?x144544 (* ?x144077 l_0_22_168)))
 (let ((?x144074 (* 2.0 l_0_22_149)))
 (let ((?x144541 (* ?x144074 l_0_22_167)))
 (let ((?x144071 (* 2.0 l_0_22_148)))
 (let ((?x144538 (* ?x144071 l_0_22_166)))
 (let ((?x151426 (- (- (- (- (- (+ (+ ?x144538 ?x144541) ?x144544) ?x144547) ?x144549) ?x144551) ?x151377) ?x151379)))
 (= (- (- (- (- ?x151426 ?x151381) ?x60464) ?x25909) ?x60503) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x147589 (* l_0_22_303 l_0_22_303)))
 (let ((?x147587 (* l_0_22_302 l_0_22_302)))
 (let ((?x147585 (* l_0_22_301 l_0_22_301)))
 (let ((?x147583 (* l_0_22_300 l_0_22_300)))
 (let ((?x147581 (* l_0_22_299 l_0_22_299)))
 (let ((?x148454 (* 2.0 l_0_22_267)))
 (let ((?x151458 (* ?x148454 l_0_22_272)))
 (let ((?x148451 (* 2.0 l_0_22_266)))
 (let ((?x151456 (* ?x148451 l_0_22_271)))
 (let ((?x148448 (* 2.0 l_0_22_265)))
 (let ((?x151454 (* ?x148448 l_0_22_270)))
 (let ((?x148445 (* 2.0 l_0_22_264)))
 (let ((?x151452 (* ?x148445 l_0_22_269)))
 (let ((?x148442 (* 2.0 l_0_22_263)))
 (let ((?x151450 (* ?x148442 l_0_22_268)))
 (let ((?x145023 (* l_0_22_195 l_0_22_195)))
 (let ((?x145021 (* l_0_22_194 l_0_22_194)))
 (let ((?x145019 (* l_0_22_193 l_0_22_193)))
 (let ((?x145017 (* l_0_22_192 l_0_22_192)))
 (let ((?x145015 (* l_0_22_191 l_0_22_191)))
 (let ((?x145013 (* l_0_22_159 l_0_22_159)))
 (let ((?x145011 (* l_0_22_158 l_0_22_158)))
 (let ((?x145009 (* l_0_22_157 l_0_22_157)))
 (let ((?x151442 (+ (+ (* l_0_22_155 l_0_22_155) (* l_0_22_156 l_0_22_156)) ?x145009)))
 (let ((?x151449 (- (- (- (- (- (+ (+ ?x151442 ?x145011) ?x145013) ?x145015) ?x145017) ?x145019) ?x145021) ?x145023)))
 (let ((?x151461 (- (- (+ (+ (+ (+ (+ ?x151449 ?x151450) ?x151452) ?x151454) ?x151456) ?x151458) ?x147581) ?x147583)))
 (= (- (- (- ?x151461 ?x147585) ?x147587) ?x147589) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x147637 (* 2.0 l_0_22_303)))
 (let ((?x147638 (* ?x147637 l_0_22_308)))
 (let ((?x147634 (* 2.0 l_0_22_302)))
 (let ((?x147635 (* ?x147634 l_0_22_307)))
 (let ((?x147631 (* 2.0 l_0_22_301)))
 (let ((?x147632 (* ?x147631 l_0_22_306)))
 (let ((?x147628 (* 2.0 l_0_22_300)))
 (let ((?x147629 (* ?x147628 l_0_22_305)))
 (let ((?x147625 (* 2.0 l_0_22_299)))
 (let ((?x147626 (* ?x147625 l_0_22_304)))
 (let ((?x151480 (* l_0_22_273 l_0_22_273)))
 (let ((?x151478 (* l_0_22_272 l_0_22_272)))
 (let ((?x151476 (* l_0_22_271 l_0_22_271)))
 (let ((?x151474 (* l_0_22_270 l_0_22_270)))
 (let ((?x151472 (* l_0_22_269 l_0_22_269)))
 (let ((?x129897 (* l_0_22_268 l_0_22_268)))
 (let ((?x145098 (* 2.0 l_0_22_195)))
 (let ((?x145099 (* ?x145098 l_0_22_200)))
 (let ((?x145095 (* 2.0 l_0_22_194)))
 (let ((?x145096 (* ?x145095 l_0_22_199)))
 (let ((?x145092 (* 2.0 l_0_22_193)))
 (let ((?x145093 (* ?x145092 l_0_22_198)))
 (let ((?x145089 (* 2.0 l_0_22_192)))
 (let ((?x145090 (* ?x145089 l_0_22_197)))
 (let ((?x145086 (* 2.0 l_0_22_191)))
 (let ((?x145087 (* ?x145086 l_0_22_196)))
 (let ((?x145083 (* 2.0 l_0_22_159)))
 (let ((?x145084 (* ?x145083 l_0_22_164)))
 (let ((?x145080 (* 2.0 l_0_22_158)))
 (let ((?x145081 (* ?x145080 l_0_22_163)))
 (let ((?x145077 (* 2.0 l_0_22_157)))
 (let ((?x145078 (* ?x145077 l_0_22_162)))
 (let ((?x145074 (* 2.0 l_0_22_156)))
 (let ((?x145075 (* ?x145074 l_0_22_161)))
 (let ((?x145071 (* 2.0 l_0_22_155)))
 (let ((?x145072 (* ?x145071 l_0_22_160)))
 (let ((?x129901 (- (- (- (+ (+ (+ (+ ?x145072 ?x145075) ?x145078) ?x145081) ?x145084) ?x145087) ?x145090) ?x145093)))
 (let ((?x151479 (+ (+ (+ (+ (+ (- (- ?x129901 ?x145096) ?x145099) ?x129897) ?x151472) ?x151474) ?x151476) ?x151478)))
 (= (- (- (- (- (- (+ ?x151479 ?x151480) ?x147626) ?x147629) ?x147632) ?x147635) ?x147638) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x147637 (* 2.0 l_0_22_303)))
 (let ((?x147658 (* ?x147637 l_0_22_314)))
 (let ((?x147634 (* 2.0 l_0_22_302)))
 (let ((?x147656 (* ?x147634 l_0_22_313)))
 (let ((?x147631 (* 2.0 l_0_22_301)))
 (let ((?x147654 (* ?x147631 l_0_22_312)))
 (let ((?x147628 (* 2.0 l_0_22_300)))
 (let ((?x147652 (* ?x147628 l_0_22_311)))
 (let ((?x147625 (* 2.0 l_0_22_299)))
 (let ((?x147650 (* ?x147625 l_0_22_310)))
 (let ((?x148600 (* 2.0 l_0_22_273)))
 (let ((?x151538 (* ?x148600 l_0_22_279)))
 (let ((?x148597 (* 2.0 l_0_22_272)))
 (let ((?x151536 (* ?x148597 l_0_22_278)))
 (let ((?x148594 (* 2.0 l_0_22_271)))
 (let ((?x151534 (* ?x148594 l_0_22_277)))
 (let ((?x148591 (* 2.0 l_0_22_270)))
 (let ((?x151532 (* ?x148591 l_0_22_276)))
 (let ((?x148588 (* 2.0 l_0_22_269)))
 (let ((?x151530 (* ?x148588 l_0_22_275)))
 (let ((?x148585 (* 2.0 l_0_22_268)))
 (let ((?x151528 (* ?x148585 l_0_22_274)))
 (let ((?x148454 (* 2.0 l_0_22_267)))
 (let ((?x151458 (* ?x148454 l_0_22_272)))
 (let ((?x148451 (* 2.0 l_0_22_266)))
 (let ((?x151456 (* ?x148451 l_0_22_271)))
 (let ((?x148448 (* 2.0 l_0_22_265)))
 (let ((?x151454 (* ?x148448 l_0_22_270)))
 (let ((?x148445 (* 2.0 l_0_22_264)))
 (let ((?x151452 (* ?x148445 l_0_22_269)))
 (let ((?x148442 (* 2.0 l_0_22_263)))
 (let ((?x151450 (* ?x148442 l_0_22_268)))
 (let ((?x145098 (* 2.0 l_0_22_195)))
 (let ((?x145176 (* ?x145098 l_0_22_206)))
 (let ((?x145095 (* 2.0 l_0_22_194)))
 (let ((?x145174 (* ?x145095 l_0_22_205)))
 (let ((?x145092 (* 2.0 l_0_22_193)))
 (let ((?x145172 (* ?x145092 l_0_22_204)))
 (let ((?x145089 (* 2.0 l_0_22_192)))
 (let ((?x145170 (* ?x145089 l_0_22_203)))
 (let ((?x145086 (* 2.0 l_0_22_191)))
 (let ((?x145168 (* ?x145086 l_0_22_202)))
 (let ((?x145083 (* 2.0 l_0_22_159)))
 (let ((?x145166 (* ?x145083 l_0_22_170)))
 (let ((?x145080 (* 2.0 l_0_22_158)))
 (let ((?x145164 (* ?x145080 l_0_22_169)))
 (let ((?x145077 (* 2.0 l_0_22_157)))
 (let ((?x145162 (* ?x145077 l_0_22_168)))
 (let ((?x145074 (* 2.0 l_0_22_156)))
 (let ((?x145160 (* ?x145074 l_0_22_167)))
 (let ((?x145071 (* 2.0 l_0_22_155)))
 (let ((?x145158 (* ?x145071 l_0_22_166)))
 (let ((?x151520 (- (- (- (+ (+ (+ (+ ?x145158 ?x145160) ?x145162) ?x145164) ?x145166) ?x145168) ?x145170) ?x145172)))
 (let ((?x151527 (- (- (- (- (- (- (- ?x151520 ?x145174) ?x145176) ?x151450) ?x151452) ?x151454) ?x151456) ?x151458)))
 (let ((?x151540 (- (+ (+ (+ (+ (+ (+ ?x151527 ?x151528) ?x151530) ?x151532) ?x151534) ?x151536) ?x151538) ?x147650)))
 (= (- (- (- (- ?x151540 ?x147652) ?x147654) ?x147656) ?x147658) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x147637 (* 2.0 l_0_22_303)))
 (let ((?x147712 (* ?x147637 l_0_22_321)))
 (let ((?x147634 (* 2.0 l_0_22_302)))
 (let ((?x147710 (* ?x147634 l_0_22_320)))
 (let ((?x147631 (* 2.0 l_0_22_301)))
 (let ((?x147708 (* ?x147631 l_0_22_319)))
 (let ((?x147628 (* 2.0 l_0_22_300)))
 (let ((?x147706 (* ?x147628 l_0_22_318)))
 (let ((?x147625 (* 2.0 l_0_22_299)))
 (let ((?x147704 (* ?x147625 l_0_22_317)))
 (let ((?x148600 (* 2.0 l_0_22_273)))
 (let ((?x148601 (* ?x148600 l_0_22_286)))
 (let ((?x148597 (* 2.0 l_0_22_272)))
 (let ((?x148598 (* ?x148597 l_0_22_285)))
 (let ((?x148594 (* 2.0 l_0_22_271)))
 (let ((?x148595 (* ?x148594 l_0_22_284)))
 (let ((?x148591 (* 2.0 l_0_22_270)))
 (let ((?x148592 (* ?x148591 l_0_22_283)))
 (let ((?x148588 (* 2.0 l_0_22_269)))
 (let ((?x148589 (* ?x148588 l_0_22_282)))
 (let ((?x148585 (* 2.0 l_0_22_268)))
 (let ((?x148586 (* ?x148585 l_0_22_281)))
 (let ((?x145098 (* 2.0 l_0_22_195)))
 (let ((?x145283 (* ?x145098 l_0_22_213)))
 (let ((?x145095 (* 2.0 l_0_22_194)))
 (let ((?x145281 (* ?x145095 l_0_22_212)))
 (let ((?x145092 (* 2.0 l_0_22_193)))
 (let ((?x145279 (* ?x145092 l_0_22_211)))
 (let ((?x145089 (* 2.0 l_0_22_192)))
 (let ((?x145277 (* ?x145089 l_0_22_210)))
 (let ((?x145086 (* 2.0 l_0_22_191)))
 (let ((?x145275 (* ?x145086 l_0_22_209)))
 (let ((?x145083 (* 2.0 l_0_22_159)))
 (let ((?x145273 (* ?x145083 l_0_22_177)))
 (let ((?x145080 (* 2.0 l_0_22_158)))
 (let ((?x145271 (* ?x145080 l_0_22_176)))
 (let ((?x145077 (* 2.0 l_0_22_157)))
 (let ((?x145269 (* ?x145077 l_0_22_175)))
 (let ((?x145074 (* 2.0 l_0_22_156)))
 (let ((?x145267 (* ?x145074 l_0_22_174)))
 (let ((?x145071 (* 2.0 l_0_22_155)))
 (let ((?x145265 (* ?x145071 l_0_22_173)))
 (let ((?x151560 (- (- (- (+ (+ (+ (+ ?x145265 ?x145267) ?x145269) ?x145271) ?x145273) ?x145275) ?x145277) ?x145279)))
 (let ((?x151566 (- (- (- (- ?x151560 ?x145281) ?x145283) (* (* 2.0 l_0_22_227) l_0_22_232)) (* (* 2.0 l_0_22_228) l_0_22_233))))
 (let ((?x151570 (- (- ?x151566 (* (* 2.0 l_0_22_229) l_0_22_234)) (* (* 2.0 l_0_22_230) l_0_22_235))))
 (let ((?x151575 (+ (+ (+ (- ?x151570 (* (* 2.0 l_0_22_231) l_0_22_236)) ?x148586) ?x148589) ?x148592)))
 (let ((?x151582 (- (- (- (- (+ (+ (+ ?x151575 ?x148595) ?x148598) ?x148601) ?x147704) ?x147706) ?x147708) ?x147710)))
 (= (- ?x151582 ?x147712) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x147782 (* l_0_22_309 l_0_22_309)))
 (let ((?x147780 (* l_0_22_308 l_0_22_308)))
 (let ((?x147778 (* l_0_22_307 l_0_22_307)))
 (let ((?x147776 (* l_0_22_306 l_0_22_306)))
 (let ((?x147774 (* l_0_22_305 l_0_22_305)))
 (let ((?x147772 (* l_0_22_304 l_0_22_304)))
 (let ((?x145386 (* l_0_22_201 l_0_22_201)))
 (let ((?x145384 (* l_0_22_200 l_0_22_200)))
 (let ((?x145380 (* l_0_22_199 l_0_22_199)))
 (let ((?x145378 (* l_0_22_198 l_0_22_198)))
 (let ((?x145376 (* l_0_22_197 l_0_22_197)))
 (let ((?x145374 (* l_0_22_196 l_0_22_196)))
 (let ((?x145366 (* l_0_22_165 l_0_22_165)))
 (let ((?x145351 (* l_0_22_164 l_0_22_164)))
 (let ((?x145348 (* l_0_22_163 l_0_22_163)))
 (let ((?x145344 (* l_0_22_162 l_0_22_162)))
 (let ((?x64261 (+ (+ (* l_0_22_160 l_0_22_160) (* l_0_22_161 l_0_22_161)) ?x145344)))
 (let ((?x151598 (- (- (- (- (+ (+ (+ ?x64261 ?x145348) ?x145351) ?x145366) ?x145374) ?x145376) ?x145378) ?x145380)))
 (let ((?x151605 (- (- (- (- (- (- (- ?x151598 ?x145384) ?x145386) ?x147772) ?x147774) ?x147776) ?x147778) ?x147780)))
 (= (- ?x151605 ?x147782) 0.0)))))))))))))))))))))
(assert
 (let ((?x147816 (* 2.0 l_0_22_309)))
 (let ((?x147817 (* ?x147816 l_0_22_315)))
 (let ((?x147813 (* 2.0 l_0_22_308)))
 (let ((?x147814 (* ?x147813 l_0_22_314)))
 (let ((?x147810 (* 2.0 l_0_22_307)))
 (let ((?x147811 (* ?x147810 l_0_22_313)))
 (let ((?x147807 (* 2.0 l_0_22_306)))
 (let ((?x147808 (* ?x147807 l_0_22_312)))
 (let ((?x147804 (* 2.0 l_0_22_305)))
 (let ((?x147805 (* ?x147804 l_0_22_311)))
 (let ((?x147801 (* 2.0 l_0_22_304)))
 (let ((?x147802 (* ?x147801 l_0_22_310)))
 (let ((?x151480 (* l_0_22_273 l_0_22_273)))
 (let ((?x151478 (* l_0_22_272 l_0_22_272)))
 (let ((?x151476 (* l_0_22_271 l_0_22_271)))
 (let ((?x151474 (* l_0_22_270 l_0_22_270)))
 (let ((?x151472 (* l_0_22_269 l_0_22_269)))
 (let ((?x129897 (* l_0_22_268 l_0_22_268)))
 (let ((?x145503 (* 2.0 l_0_22_201)))
 (let ((?x145504 (* ?x145503 l_0_22_207)))
 (let ((?x145500 (* 2.0 l_0_22_200)))
 (let ((?x145501 (* ?x145500 l_0_22_206)))
 (let ((?x145494 (* 2.0 l_0_22_199)))
 (let ((?x145495 (* ?x145494 l_0_22_205)))
 (let ((?x145491 (* 2.0 l_0_22_198)))
 (let ((?x145492 (* ?x145491 l_0_22_204)))
 (let ((?x145488 (* 2.0 l_0_22_197)))
 (let ((?x145489 (* ?x145488 l_0_22_203)))
 (let ((?x145485 (* 2.0 l_0_22_196)))
 (let ((?x145486 (* ?x145485 l_0_22_202)))
 (let ((?x145475 (* 2.0 l_0_22_165)))
 (let ((?x145476 (* ?x145475 l_0_22_171)))
 (let ((?x145472 (* 2.0 l_0_22_164)))
 (let ((?x145473 (* ?x145472 l_0_22_170)))
 (let ((?x145469 (* 2.0 l_0_22_163)))
 (let ((?x145470 (* ?x145469 l_0_22_169)))
 (let ((?x145466 (* 2.0 l_0_22_162)))
 (let ((?x145467 (* ?x145466 l_0_22_168)))
 (let ((?x145463 (* 2.0 l_0_22_161)))
 (let ((?x145464 (* ?x145463 l_0_22_167)))
 (let ((?x145460 (* 2.0 l_0_22_160)))
 (let ((?x145461 (* ?x145460 l_0_22_166)))
 (let ((?x151616 (- (- (+ (+ (+ (+ (+ ?x145461 ?x145464) ?x145467) ?x145470) ?x145473) ?x145476) ?x145486) ?x145489)))
 (let ((?x151623 (- (- (- (- (- (- (- ?x151616 ?x145492) ?x145495) ?x145501) ?x145504) ?x129897) ?x151472) ?x151474)))
 (let ((?x151630 (- (- (- (- (- (- (- ?x151623 ?x151476) ?x151478) ?x151480) ?x147802) ?x147805) ?x147808) ?x147811)))
 (= (- (- ?x151630 ?x147814) ?x147817) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x147816 (* 2.0 l_0_22_309)))
 (let ((?x147854 (* ?x147816 l_0_22_322)))
 (let ((?x147813 (* 2.0 l_0_22_308)))
 (let ((?x147852 (* ?x147813 l_0_22_321)))
 (let ((?x147810 (* 2.0 l_0_22_307)))
 (let ((?x147850 (* ?x147810 l_0_22_320)))
 (let ((?x147807 (* 2.0 l_0_22_306)))
 (let ((?x147848 (* ?x147807 l_0_22_319)))
 (let ((?x147804 (* 2.0 l_0_22_305)))
 (let ((?x147846 (* ?x147804 l_0_22_318)))
 (let ((?x147801 (* 2.0 l_0_22_304)))
 (let ((?x147844 (* ?x147801 l_0_22_317)))
 (let ((?x64317 (* l_0_22_237 l_0_22_237)))
 (let ((?x130221 (* l_0_22_236 l_0_22_236)))
 (let ((?x126637 (* l_0_22_235 l_0_22_235)))
 (let ((?x36165 (* l_0_22_234 l_0_22_234)))
 (let ((?x130226 (* l_0_22_233 l_0_22_233)))
 (let ((?x130284 (* l_0_22_232 l_0_22_232)))
 (let ((?x145503 (* 2.0 l_0_22_201)))
 (let ((?x145644 (* ?x145503 l_0_22_214)))
 (let ((?x145500 (* 2.0 l_0_22_200)))
 (let ((?x145642 (* ?x145500 l_0_22_213)))
 (let ((?x145494 (* 2.0 l_0_22_199)))
 (let ((?x145638 (* ?x145494 l_0_22_212)))
 (let ((?x145491 (* 2.0 l_0_22_198)))
 (let ((?x145636 (* ?x145491 l_0_22_211)))
 (let ((?x145488 (* 2.0 l_0_22_197)))
 (let ((?x145634 (* ?x145488 l_0_22_210)))
 (let ((?x145485 (* 2.0 l_0_22_196)))
 (let ((?x145632 (* ?x145485 l_0_22_209)))
 (let ((?x145475 (* 2.0 l_0_22_165)))
 (let ((?x145624 (* ?x145475 l_0_22_178)))
 (let ((?x145472 (* 2.0 l_0_22_164)))
 (let ((?x145622 (* ?x145472 l_0_22_177)))
 (let ((?x145469 (* 2.0 l_0_22_163)))
 (let ((?x145620 (* ?x145469 l_0_22_176)))
 (let ((?x145466 (* 2.0 l_0_22_162)))
 (let ((?x145618 (* ?x145466 l_0_22_175)))
 (let ((?x145463 (* 2.0 l_0_22_161)))
 (let ((?x145616 (* ?x145463 l_0_22_174)))
 (let ((?x145460 (* 2.0 l_0_22_160)))
 (let ((?x145614 (* ?x145460 l_0_22_173)))
 (let ((?x126724 (- (- (+ (+ (+ (+ (+ ?x145614 ?x145616) ?x145618) ?x145620) ?x145622) ?x145624) ?x145632) ?x145634)))
 (let ((?x130225 (- (- (- (- (- (- (- ?x126724 ?x145636) ?x145638) ?x145642) ?x145644) ?x130284) ?x130226) ?x36165)))
 (let ((?x130186 (- (- (- (- (- (- (- ?x130225 ?x126637) ?x130221) ?x64317) ?x147844) ?x147846) ?x147848) ?x147850)))
 (= (- (- ?x130186 ?x147852) ?x147854) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x147882 (* l_0_22_316 l_0_22_316)))
 (let ((?x104154 (* l_0_22_315 l_0_22_315)))
 (let ((?x125265 (* l_0_22_314 l_0_22_314)))
 (let ((?x125248 (* l_0_22_313 l_0_22_313)))
 (let ((?x125262 (* l_0_22_312 l_0_22_312)))
 (let ((?x34925 (* l_0_22_311 l_0_22_311)))
 (let ((?x81540 (* l_0_22_310 l_0_22_310)))
 (let ((?x148600 (* 2.0 l_0_22_273)))
 (let ((?x151538 (* ?x148600 l_0_22_279)))
 (let ((?x148597 (* 2.0 l_0_22_272)))
 (let ((?x151536 (* ?x148597 l_0_22_278)))
 (let ((?x148594 (* 2.0 l_0_22_271)))
 (let ((?x151534 (* ?x148594 l_0_22_277)))
 (let ((?x148591 (* 2.0 l_0_22_270)))
 (let ((?x151532 (* ?x148591 l_0_22_276)))
 (let ((?x148588 (* 2.0 l_0_22_269)))
 (let ((?x151530 (* ?x148588 l_0_22_275)))
 (let ((?x148585 (* 2.0 l_0_22_268)))
 (let ((?x151528 (* ?x148585 l_0_22_274)))
 (let ((?x145762 (* l_0_22_208 l_0_22_208)))
 (let ((?x145760 (* l_0_22_207 l_0_22_207)))
 (let ((?x145758 (* l_0_22_206 l_0_22_206)))
 (let ((?x145756 (* l_0_22_205 l_0_22_205)))
 (let ((?x145754 (* l_0_22_204 l_0_22_204)))
 (let ((?x145752 (* l_0_22_203 l_0_22_203)))
 (let ((?x145750 (* l_0_22_202 l_0_22_202)))
 (let ((?x145748 (* l_0_22_172 l_0_22_172)))
 (let ((?x145746 (* l_0_22_171 l_0_22_171)))
 (let ((?x145744 (* l_0_22_170 l_0_22_170)))
 (let ((?x145742 (* l_0_22_169 l_0_22_169)))
 (let ((?x145740 (* l_0_22_168 l_0_22_168)))
 (let ((?x126825 (+ (+ (* l_0_22_166 l_0_22_166) (* l_0_22_167 l_0_22_167)) ?x145740)))
 (let ((?x151650 (- (- (- (+ (+ (+ (+ ?x126825 ?x145742) ?x145744) ?x145746) ?x145748) ?x145750) ?x145752) ?x145754)))
 (let ((?x151657 (- (- (- (- (- (- (- ?x151650 ?x145756) ?x145758) ?x145760) ?x145762) ?x151528) ?x151530) ?x151532)))
 (let ((?x151664 (- (- (- (- (- (- (- ?x151657 ?x151534) ?x151536) ?x151538) ?x81540) ?x34925) ?x125262) ?x125248)))
 (= (- (- (- ?x151664 ?x125265) ?x104154) ?x147882) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x147975 (* l_0_22_324 l_0_22_324)))
 (let ((?x147973 (* l_0_22_323 l_0_22_323)))
 (let ((?x147971 (* l_0_22_322 l_0_22_322)))
 (let ((?x147969 (* l_0_22_321 l_0_22_321)))
 (let ((?x147967 (* l_0_22_320 l_0_22_320)))
 (let ((?x147964 (* l_0_22_319 l_0_22_319)))
 (let ((?x147962 (* l_0_22_318 l_0_22_318)))
 (let ((?x147960 (* l_0_22_317 l_0_22_317)))
 (let ((?x146047 (* l_0_22_216 l_0_22_216)))
 (let ((?x146045 (* l_0_22_215 l_0_22_215)))
 (let ((?x146043 (* l_0_22_214 l_0_22_214)))
 (let ((?x146041 (* l_0_22_213 l_0_22_213)))
 (let ((?x146039 (* l_0_22_212 l_0_22_212)))
 (let ((?x146037 (* l_0_22_211 l_0_22_211)))
 (let ((?x146035 (* l_0_22_210 l_0_22_210)))
 (let ((?x146033 (* l_0_22_209 l_0_22_209)))
 (let ((?x146031 (* l_0_22_180 l_0_22_180)))
 (let ((?x146029 (* l_0_22_179 l_0_22_179)))
 (let ((?x146027 (* l_0_22_178 l_0_22_178)))
 (let ((?x146025 (* l_0_22_177 l_0_22_177)))
 (let ((?x146023 (* l_0_22_176 l_0_22_176)))
 (let ((?x146021 (* l_0_22_175 l_0_22_175)))
 (let ((?x42394 (+ (+ (* l_0_22_173 l_0_22_173) (* l_0_22_174 l_0_22_174)) ?x146021)))
 (let ((?x127113 (- (- (+ (+ (+ (+ (+ ?x42394 ?x146023) ?x146025) ?x146027) ?x146029) ?x146031) ?x146033) ?x146035)))
 (let ((?x82475 (- (- (- (- (- (- (- ?x127113 ?x146037) ?x146039) ?x146041) ?x146043) ?x146045) ?x146047) (* (* 2.0 l_0_22_232) l_0_22_245))))
 (let ((?x130446 (- (- ?x82475 (* (* 2.0 l_0_22_233) l_0_22_246)) (* (* 2.0 l_0_22_234) l_0_22_247))))
 (let ((?x130434 (- (- ?x130446 (* (* 2.0 l_0_22_235) l_0_22_248)) (* (* 2.0 l_0_22_236) l_0_22_249))))
 (let ((?x151676 (- (- (- (- ?x130434 (* (* 2.0 l_0_22_237) l_0_22_250)) ?x147960) ?x147962) ?x147964)))
 (= (- (- (- (- (- ?x151676 ?x147967) ?x147969) ?x147971) ?x147973) ?x147975) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x148151 (* ?x146883 l_0_22_282)))
 (let ((?x146880 (* 2.0 l_0_22_254)))
 (let ((?x148149 (* ?x146880 l_0_22_281)))
 (let ((?x61604 (- (* (* (- 2.0) l_0_22_218) l_0_22_227) (* (* 2.0 l_0_22_219) l_0_22_228))))
 (let ((?x151690 (- (- (+ (+ ?x61604 ?x148149) ?x148151) (* (* 2.0 l_0_22_335) l_0_22_353)) (* (* 2.0 l_0_22_336) l_0_22_354))))
 (let ((?x151694 (- (- ?x151690 (* (* 2.0 l_0_22_337) l_0_22_355)) (* (* 2.0 l_0_22_338) l_0_22_356))))
 (let ((?x151698 (- (- ?x151694 (* (* 2.0 l_0_22_339) l_0_22_357)) (* (* 2.0 l_0_22_371) l_0_22_389))))
 (let ((?x151702 (- (- ?x151698 (* (* 2.0 l_0_22_372) l_0_22_390)) (* (* 2.0 l_0_22_373) l_0_22_391))))
 (let ((?x151706 (- (- ?x151702 (* (* 2.0 l_0_22_374) l_0_22_392)) (* (* 2.0 l_0_22_375) l_0_22_393))))
 (let ((?x151710 (- (- ?x151706 (* (* 2.0 l_0_22_407) l_0_22_425)) (* (* 2.0 l_0_22_408) l_0_22_426))))
 (let ((?x151714 (- (- ?x151710 (* (* 2.0 l_0_22_409) l_0_22_427)) (* (* 2.0 l_0_22_410) l_0_22_428))))
 (let ((?x151718 (- (- ?x151714 (* (* 2.0 l_0_22_411) l_0_22_429)) (* (* 2.0 l_0_22_443) l_0_22_461))))
 (let ((?x151722 (- (- ?x151718 (* (* 2.0 l_0_22_444) l_0_22_462)) (* (* 2.0 l_0_22_445) l_0_22_463))))
 (let ((?x151726 (- (- ?x151722 (* (* 2.0 l_0_22_446) l_0_22_464)) (* (* 2.0 l_0_22_447) l_0_22_465))))
 (let ((?x151730 (- (- ?x151726 (* (* 2.0 l_0_22_479) l_0_22_497)) (* (* 2.0 l_0_22_480) l_0_22_498))))
 (let ((?x151734 (- (- ?x151730 (* (* 2.0 l_0_22_481) l_0_22_499)) (* (* 2.0 l_0_22_482) l_0_22_500))))
 (let ((?x151738 (- (- ?x151734 (* (* 2.0 l_0_22_483) l_0_22_501)) (* (* 2.0 l_0_22_515) l_0_22_533))))
 (let ((?x151742 (- (- ?x151738 (* (* 2.0 l_0_22_516) l_0_22_534)) (* (* 2.0 l_0_22_517) l_0_22_535))))
 (let ((?x151746 (- (- ?x151742 (* (* 2.0 l_0_22_518) l_0_22_536)) (* (* 2.0 l_0_22_519) l_0_22_537))))
 (let ((?x151750 (- (- ?x151746 (* (* 2.0 l_0_22_551) l_0_22_569)) (* (* 2.0 l_0_22_552) l_0_22_570))))
 (let ((?x151754 (- (- ?x151750 (* (* 2.0 l_0_22_553) l_0_22_571)) (* (* 2.0 l_0_22_554) l_0_22_572))))
 (= (- ?x151754 (* (* 2.0 l_0_22_555) l_0_22_573)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x151894 (* l_0_22_576 l_0_22_576)))
 (let ((?x151892 (* l_0_22_575 l_0_22_575)))
 (let ((?x151890 (* l_0_22_574 l_0_22_574)))
 (let ((?x151888 (* l_0_22_573 l_0_22_573)))
 (let ((?x151886 (* l_0_22_572 l_0_22_572)))
 (let ((?x151884 (* l_0_22_571 l_0_22_571)))
 (let ((?x151882 (* l_0_22_570 l_0_22_570)))
 (let ((?x151880 (* l_0_22_569 l_0_22_569)))
 (let ((?x151878 (* l_0_22_540 l_0_22_540)))
 (let ((?x151876 (* l_0_22_539 l_0_22_539)))
 (let ((?x151874 (* l_0_22_538 l_0_22_538)))
 (let ((?x151872 (* l_0_22_537 l_0_22_537)))
 (let ((?x151870 (* l_0_22_536 l_0_22_536)))
 (let ((?x151868 (* l_0_22_535 l_0_22_535)))
 (let ((?x151866 (* l_0_22_534 l_0_22_534)))
 (let ((?x151864 (* l_0_22_533 l_0_22_533)))
 (let ((?x151862 (* l_0_22_504 l_0_22_504)))
 (let ((?x151860 (* l_0_22_503 l_0_22_503)))
 (let ((?x151858 (* l_0_22_502 l_0_22_502)))
 (let ((?x151856 (* l_0_22_501 l_0_22_501)))
 (let ((?x151854 (* l_0_22_500 l_0_22_500)))
 (let ((?x151852 (* l_0_22_499 l_0_22_499)))
 (let ((?x151850 (* l_0_22_498 l_0_22_498)))
 (let ((?x151848 (* l_0_22_497 l_0_22_497)))
 (let ((?x151846 (* l_0_22_468 l_0_22_468)))
 (let ((?x151844 (* l_0_22_467 l_0_22_467)))
 (let ((?x151842 (* l_0_22_466 l_0_22_466)))
 (let ((?x151840 (* l_0_22_465 l_0_22_465)))
 (let ((?x151838 (* l_0_22_464 l_0_22_464)))
 (let ((?x151836 (* l_0_22_463 l_0_22_463)))
 (let ((?x151834 (* l_0_22_462 l_0_22_462)))
 (let ((?x151832 (* l_0_22_461 l_0_22_461)))
 (let ((?x151830 (* l_0_22_432 l_0_22_432)))
 (let ((?x151828 (* l_0_22_431 l_0_22_431)))
 (let ((?x151826 (* l_0_22_430 l_0_22_430)))
 (let ((?x151824 (* l_0_22_429 l_0_22_429)))
 (let ((?x151822 (* l_0_22_428 l_0_22_428)))
 (let ((?x151820 (* l_0_22_427 l_0_22_427)))
 (let ((?x151818 (* l_0_22_426 l_0_22_426)))
 (let ((?x151816 (* l_0_22_425 l_0_22_425)))
 (let ((?x151814 (* l_0_22_396 l_0_22_396)))
 (let ((?x151812 (* l_0_22_395 l_0_22_395)))
 (let ((?x151810 (* l_0_22_394 l_0_22_394)))
 (let ((?x151808 (* l_0_22_393 l_0_22_393)))
 (let ((?x151806 (* l_0_22_392 l_0_22_392)))
 (let ((?x151804 (* l_0_22_391 l_0_22_391)))
 (let ((?x151802 (* l_0_22_390 l_0_22_390)))
 (let ((?x151800 (* l_0_22_389 l_0_22_389)))
 (let ((?x151798 (* l_0_22_360 l_0_22_360)))
 (let ((?x151796 (* l_0_22_359 l_0_22_359)))
 (let ((?x151794 (* l_0_22_358 l_0_22_358)))
 (let ((?x151792 (* l_0_22_357 l_0_22_357)))
 (let ((?x151790 (* l_0_22_356 l_0_22_356)))
 (let ((?x151788 (* l_0_22_355 l_0_22_355)))
 (let ((?x151786 (* l_0_22_354 l_0_22_354)))
 (let ((?x151784 (* l_0_22_353 l_0_22_353)))
 (let ((?x151783 (- (* (* (- 2.0) l_0_22_218) l_0_22_245) (* (* 2.0 l_0_22_219) l_0_22_246))))
 (let ((?x151797 (- (- (- (- (- (- (- ?x151783 ?x151784) ?x151786) ?x151788) ?x151790) ?x151792) ?x151794) ?x151796)))
 (let ((?x151811 (- (- (- (- (- (- (- ?x151797 ?x151798) ?x151800) ?x151802) ?x151804) ?x151806) ?x151808) ?x151810)))
 (let ((?x151825 (- (- (- (- (- (- (- ?x151811 ?x151812) ?x151814) ?x151816) ?x151818) ?x151820) ?x151822) ?x151824)))
 (let ((?x151839 (- (- (- (- (- (- (- ?x151825 ?x151826) ?x151828) ?x151830) ?x151832) ?x151834) ?x151836) ?x151838)))
 (let ((?x151853 (- (- (- (- (- (- (- ?x151839 ?x151840) ?x151842) ?x151844) ?x151846) ?x151848) ?x151850) ?x151852)))
 (let ((?x151867 (- (- (- (- (- (- (- ?x151853 ?x151854) ?x151856) ?x151858) ?x151860) ?x151862) ?x151864) ?x151866)))
 (let ((?x151881 (- (- (- (- (- (- (- ?x151867 ?x151868) ?x151870) ?x151872) ?x151874) ?x151876) ?x151878) ?x151880)))
 (let ((?x151895 (- (- (- (- (- (- (- ?x151881 ?x151882) ?x151884) ?x151886) ?x151888) ?x151890) ?x151892) ?x151894)))
 (= ?x151895 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x148454 (* 2.0 l_0_22_267)))
 (let ((?x148455 (* ?x148454 l_0_22_285)))
 (let ((?x148451 (* 2.0 l_0_22_266)))
 (let ((?x148452 (* ?x148451 l_0_22_284)))
 (let ((?x148448 (* 2.0 l_0_22_265)))
 (let ((?x148449 (* ?x148448 l_0_22_283)))
 (let ((?x148445 (* 2.0 l_0_22_264)))
 (let ((?x148446 (* ?x148445 l_0_22_282)))
 (let ((?x148442 (* 2.0 l_0_22_263)))
 (let ((?x148443 (* ?x148442 l_0_22_281)))
 (let ((?x151949 (* l_0_22_231 l_0_22_231)))
 (let ((?x151947 (* l_0_22_230 l_0_22_230)))
 (let ((?x108023 (* l_0_22_229 l_0_22_229)))
 (let ((?x151946 (- (- (* (- l_0_22_227) l_0_22_227) (* l_0_22_228 l_0_22_228)) ?x108023)))
 (let ((?x151955 (+ (+ (+ (+ (+ (- (- ?x151946 ?x151947) ?x151949) ?x148443) ?x148446) ?x148449) ?x148452) ?x148455)))
 (= ?x151955 0.0)))))))))))))))))
(assert
 (let ((?x148707 (* l_0_22_288 l_0_22_288)))
 (let ((?x148705 (* l_0_22_287 l_0_22_287)))
 (let ((?x148703 (* l_0_22_286 l_0_22_286)))
 (let ((?x148701 (* l_0_22_285 l_0_22_285)))
 (let ((?x148699 (* l_0_22_284 l_0_22_284)))
 (let ((?x148697 (* l_0_22_283 l_0_22_283)))
 (let ((?x148695 (* l_0_22_282 l_0_22_282)))
 (let ((?x148693 (* l_0_22_281 l_0_22_281)))
 (let ((?x131282 (- (* (* (- 2.0) l_0_22_227) l_0_22_245) (* (* 2.0 l_0_22_228) l_0_22_246))))
 (let ((?x151969 (- (- ?x131282 (* (* 2.0 l_0_22_229) l_0_22_247)) (* (* 2.0 l_0_22_230) l_0_22_248))))
 (let ((?x151974 (+ (+ (+ (- ?x151969 (* (* 2.0 l_0_22_231) l_0_22_249)) ?x148693) ?x148695) ?x148697)))
 (= (+ (+ (+ (+ (+ ?x151974 ?x148699) ?x148701) ?x148703) ?x148705) ?x148707) 0.0)))))))))))))
(assert
 (let ((?x152007 (* l_0_22_252 l_0_22_252)))
 (let ((?x152005 (* l_0_22_251 l_0_22_251)))
 (let ((?x152003 (* l_0_22_250 l_0_22_250)))
 (let ((?x152001 (* l_0_22_249 l_0_22_249)))
 (let ((?x131348 (* l_0_22_248 l_0_22_248)))
 (let ((?x131354 (* l_0_22_247 l_0_22_247)))
 (let ((?x131347 (- (- (* (- l_0_22_245) l_0_22_245) (* l_0_22_246 l_0_22_246)) ?x131354)))
 (= (- (- (- (- (- ?x131347 ?x131348) ?x152001) ?x152003) ?x152005) ?x152007) 0.0)))))))))
(assert
 (let ((?x152027 (- (- (* (- l_0_22_254) l_0_22_254) (* l_0_22_255 l_0_22_255)) (* (* 2.0 l_0_22_326) l_0_22_346))))
 (let ((?x152031 (- (- ?x152027 (* (* 2.0 l_0_22_327) l_0_22_347)) (* (* 2.0 l_0_22_362) l_0_22_382))))
 (let ((?x152035 (- (- ?x152031 (* (* 2.0 l_0_22_363) l_0_22_383)) (* (* 2.0 l_0_22_398) l_0_22_418))))
 (let ((?x152039 (- (- ?x152035 (* (* 2.0 l_0_22_399) l_0_22_419)) (* (* 2.0 l_0_22_434) l_0_22_454))))
 (let ((?x152043 (- (- ?x152039 (* (* 2.0 l_0_22_435) l_0_22_455)) (* (* 2.0 l_0_22_470) l_0_22_490))))
 (let ((?x152047 (- (- ?x152043 (* (* 2.0 l_0_22_471) l_0_22_491)) (* (* 2.0 l_0_22_506) l_0_22_526))))
 (let ((?x152051 (- (- ?x152047 (* (* 2.0 l_0_22_507) l_0_22_527)) (* (* 2.0 l_0_22_542) l_0_22_562))))
 (= (- ?x152051 (* (* 2.0 l_0_22_543) l_0_22_563)) 0.0)))))))))
(assert
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x65008 (* ?x146883 l_0_22_257)))
 (let ((?x152097 (- (- (* (* (- 2.0) l_0_22_254) l_0_22_256) ?x65008) (* (* 2.0 l_0_22_328) l_0_22_346))))
 (let ((?x152101 (- (- ?x152097 (* (* 2.0 l_0_22_329) l_0_22_347)) (* (* 2.0 l_0_22_330) l_0_22_348))))
 (let ((?x152105 (- (- ?x152101 (* (* 2.0 l_0_22_364) l_0_22_382)) (* (* 2.0 l_0_22_365) l_0_22_383))))
 (let ((?x152109 (- (- ?x152105 (* (* 2.0 l_0_22_366) l_0_22_384)) (* (* 2.0 l_0_22_400) l_0_22_418))))
 (let ((?x152113 (- (- ?x152109 (* (* 2.0 l_0_22_401) l_0_22_419)) (* (* 2.0 l_0_22_402) l_0_22_420))))
 (let ((?x152117 (- (- ?x152113 (* (* 2.0 l_0_22_436) l_0_22_454)) (* (* 2.0 l_0_22_437) l_0_22_455))))
 (let ((?x152121 (- (- ?x152117 (* (* 2.0 l_0_22_438) l_0_22_456)) (* (* 2.0 l_0_22_472) l_0_22_490))))
 (let ((?x152125 (- (- ?x152121 (* (* 2.0 l_0_22_473) l_0_22_491)) (* (* 2.0 l_0_22_474) l_0_22_492))))
 (let ((?x152129 (- (- ?x152125 (* (* 2.0 l_0_22_508) l_0_22_526)) (* (* 2.0 l_0_22_509) l_0_22_527))))
 (let ((?x152133 (- (- ?x152129 (* (* 2.0 l_0_22_510) l_0_22_528)) (* (* 2.0 l_0_22_544) l_0_22_562))))
 (let ((?x152137 (- (- ?x152133 (* (* 2.0 l_0_22_545) l_0_22_563)) (* (* 2.0 l_0_22_546) l_0_22_564))))
 (= ?x152137 0.0)))))))))))))))
(assert
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x131566 (* ?x146883 l_0_22_275)))
 (let ((?x131575 (* ?x146883 l_0_22_264)))
 (let ((?x131569 (+ (* (* (- 2.0) l_0_22_254) l_0_22_263) (* (* 2.0 l_0_22_254) l_0_22_274))))
 (let ((?x108322 (- (- (+ (- ?x131569 ?x131575) ?x131566) (* (* 2.0 l_0_22_335) l_0_22_346)) (* (* 2.0 l_0_22_336) l_0_22_347))))
 (let ((?x108342 (- (- ?x108322 (* (* 2.0 l_0_22_337) l_0_22_348)) (* (* 2.0 l_0_22_338) l_0_22_349))))
 (let ((?x152205 (- (- ?x108342 (* (* 2.0 l_0_22_339) l_0_22_350)) (* (* 2.0 l_0_22_371) l_0_22_382))))
 (let ((?x152209 (- (- ?x152205 (* (* 2.0 l_0_22_372) l_0_22_383)) (* (* 2.0 l_0_22_373) l_0_22_384))))
 (let ((?x152213 (- (- ?x152209 (* (* 2.0 l_0_22_374) l_0_22_385)) (* (* 2.0 l_0_22_375) l_0_22_386))))
 (let ((?x152217 (- (- ?x152213 (* (* 2.0 l_0_22_407) l_0_22_418)) (* (* 2.0 l_0_22_408) l_0_22_419))))
 (let ((?x152221 (- (- ?x152217 (* (* 2.0 l_0_22_409) l_0_22_420)) (* (* 2.0 l_0_22_410) l_0_22_421))))
 (let ((?x152225 (- (- ?x152221 (* (* 2.0 l_0_22_411) l_0_22_422)) (* (* 2.0 l_0_22_443) l_0_22_454))))
 (let ((?x152229 (- (- ?x152225 (* (* 2.0 l_0_22_444) l_0_22_455)) (* (* 2.0 l_0_22_445) l_0_22_456))))
 (let ((?x152233 (- (- ?x152229 (* (* 2.0 l_0_22_446) l_0_22_457)) (* (* 2.0 l_0_22_447) l_0_22_458))))
 (let ((?x152237 (- (- ?x152233 (* (* 2.0 l_0_22_479) l_0_22_490)) (* (* 2.0 l_0_22_480) l_0_22_491))))
 (let ((?x152241 (- (- ?x152237 (* (* 2.0 l_0_22_481) l_0_22_492)) (* (* 2.0 l_0_22_482) l_0_22_493))))
 (let ((?x152245 (- (- ?x152241 (* (* 2.0 l_0_22_483) l_0_22_494)) (* (* 2.0 l_0_22_515) l_0_22_526))))
 (let ((?x152249 (- (- ?x152245 (* (* 2.0 l_0_22_516) l_0_22_527)) (* (* 2.0 l_0_22_517) l_0_22_528))))
 (let ((?x152253 (- (- ?x152249 (* (* 2.0 l_0_22_518) l_0_22_529)) (* (* 2.0 l_0_22_519) l_0_22_530))))
 (let ((?x152257 (- (- ?x152253 (* (* 2.0 l_0_22_551) l_0_22_562)) (* (* 2.0 l_0_22_552) l_0_22_563))))
 (let ((?x152261 (- (- ?x152257 (* (* 2.0 l_0_22_553) l_0_22_564)) (* (* 2.0 l_0_22_554) l_0_22_565))))
 (= (- ?x152261 (* (* 2.0 l_0_22_555) l_0_22_566)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x152516 (* l_0_22_568 l_0_22_568)))
 (let ((?x152514 (* l_0_22_567 l_0_22_567)))
 (let ((?x152512 (* l_0_22_566 l_0_22_566)))
 (let ((?x152510 (* l_0_22_565 l_0_22_565)))
 (let ((?x152508 (* l_0_22_564 l_0_22_564)))
 (let ((?x152506 (* l_0_22_563 l_0_22_563)))
 (let ((?x152504 (* l_0_22_562 l_0_22_562)))
 (let ((?x152502 (* l_0_22_532 l_0_22_532)))
 (let ((?x152500 (* l_0_22_531 l_0_22_531)))
 (let ((?x152498 (* l_0_22_530 l_0_22_530)))
 (let ((?x152496 (* l_0_22_529 l_0_22_529)))
 (let ((?x152494 (* l_0_22_528 l_0_22_528)))
 (let ((?x152492 (* l_0_22_527 l_0_22_527)))
 (let ((?x152490 (* l_0_22_526 l_0_22_526)))
 (let ((?x152488 (* l_0_22_496 l_0_22_496)))
 (let ((?x152486 (* l_0_22_495 l_0_22_495)))
 (let ((?x152484 (* l_0_22_494 l_0_22_494)))
 (let ((?x152482 (* l_0_22_493 l_0_22_493)))
 (let ((?x152480 (* l_0_22_492 l_0_22_492)))
 (let ((?x152478 (* l_0_22_491 l_0_22_491)))
 (let ((?x152476 (* l_0_22_490 l_0_22_490)))
 (let ((?x152474 (* l_0_22_460 l_0_22_460)))
 (let ((?x152472 (* l_0_22_459 l_0_22_459)))
 (let ((?x152470 (* l_0_22_458 l_0_22_458)))
 (let ((?x152468 (* l_0_22_457 l_0_22_457)))
 (let ((?x152466 (* l_0_22_456 l_0_22_456)))
 (let ((?x152464 (* l_0_22_455 l_0_22_455)))
 (let ((?x152462 (* l_0_22_454 l_0_22_454)))
 (let ((?x152460 (* l_0_22_424 l_0_22_424)))
 (let ((?x152458 (* l_0_22_423 l_0_22_423)))
 (let ((?x152456 (* l_0_22_422 l_0_22_422)))
 (let ((?x152454 (* l_0_22_421 l_0_22_421)))
 (let ((?x152452 (* l_0_22_420 l_0_22_420)))
 (let ((?x152450 (* l_0_22_419 l_0_22_419)))
 (let ((?x152448 (* l_0_22_418 l_0_22_418)))
 (let ((?x152446 (* l_0_22_388 l_0_22_388)))
 (let ((?x152444 (* l_0_22_387 l_0_22_387)))
 (let ((?x152442 (* l_0_22_386 l_0_22_386)))
 (let ((?x152440 (* l_0_22_385 l_0_22_385)))
 (let ((?x152438 (* l_0_22_384 l_0_22_384)))
 (let ((?x152436 (* l_0_22_383 l_0_22_383)))
 (let ((?x152434 (* l_0_22_382 l_0_22_382)))
 (let ((?x152432 (* l_0_22_352 l_0_22_352)))
 (let ((?x152430 (* l_0_22_351 l_0_22_351)))
 (let ((?x152428 (* l_0_22_350 l_0_22_350)))
 (let ((?x152426 (* l_0_22_349 l_0_22_349)))
 (let ((?x152424 (* l_0_22_348 l_0_22_348)))
 (let ((?x152422 (* l_0_22_347 l_0_22_347)))
 (let ((?x152420 (* l_0_22_346 l_0_22_346)))
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x131566 (* ?x146883 l_0_22_275)))
 (let ((?x152425 (- (- (- (- (* (* (- 2.0) l_0_22_254) l_0_22_274) ?x131566) ?x152420) ?x152422) ?x152424)))
 (let ((?x152439 (- (- (- (- (- (- (- ?x152425 ?x152426) ?x152428) ?x152430) ?x152432) ?x152434) ?x152436) ?x152438)))
 (let ((?x152453 (- (- (- (- (- (- (- ?x152439 ?x152440) ?x152442) ?x152444) ?x152446) ?x152448) ?x152450) ?x152452)))
 (let ((?x152467 (- (- (- (- (- (- (- ?x152453 ?x152454) ?x152456) ?x152458) ?x152460) ?x152462) ?x152464) ?x152466)))
 (let ((?x152481 (- (- (- (- (- (- (- ?x152467 ?x152468) ?x152470) ?x152472) ?x152474) ?x152476) ?x152478) ?x152480)))
 (let ((?x152495 (- (- (- (- (- (- (- ?x152481 ?x152482) ?x152484) ?x152486) ?x152488) ?x152490) ?x152492) ?x152494)))
 (let ((?x152509 (- (- (- (- (- (- (- ?x152495 ?x152496) ?x152498) ?x152500) ?x152502) ?x152504) ?x152506) ?x152508)))
 (= (- (- (- (- ?x152509 ?x152510) ?x152512) ?x152514) ?x152516) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x152578 (* l_0_22_258 l_0_22_258)))
 (let ((?x152579 (- (- (* (- l_0_22_256) l_0_22_256) (* l_0_22_257 l_0_22_257)) ?x152578)))
 (= ?x152579 0.0))))
(assert
 (let ((?x144025 (* 2.0 l_0_22_258)))
 (let ((?x152599 (* ?x144025 l_0_22_276)))
 (let ((?x152597 (* ?x144025 l_0_22_265)))
 (let ((?x144022 (* 2.0 l_0_22_257)))
 (let ((?x152595 (* ?x144022 l_0_22_275)))
 (let ((?x152593 (* ?x144022 l_0_22_264)))
 (let ((?x152592 (+ (* (* (- 2.0) l_0_22_256) l_0_22_263) (* (* 2.0 l_0_22_256) l_0_22_274))))
 (= (+ (- (+ (- ?x152592 ?x152593) ?x152595) ?x152597) ?x152599) 0.0)))))))))
(assert
 (let ((?x144025 (* 2.0 l_0_22_258)))
 (let ((?x152599 (* ?x144025 l_0_22_276)))
 (let ((?x144022 (* 2.0 l_0_22_257)))
 (let ((?x152595 (* ?x144022 l_0_22_275)))
 (= (- (- (* (* (- 2.0) l_0_22_256) l_0_22_274) ?x152595) ?x152599) 0.0))))))
(assert
 (let ((?x152646 (* l_0_22_267 l_0_22_267)))
 (let ((?x148454 (* 2.0 l_0_22_267)))
 (let ((?x152644 (* ?x148454 l_0_22_278)))
 (let ((?x152642 (* l_0_22_266 l_0_22_266)))
 (let ((?x148451 (* 2.0 l_0_22_266)))
 (let ((?x152640 (* ?x148451 l_0_22_277)))
 (let ((?x152638 (* l_0_22_265 l_0_22_265)))
 (let ((?x148448 (* 2.0 l_0_22_265)))
 (let ((?x152636 (* ?x148448 l_0_22_276)))
 (let ((?x152634 (* l_0_22_264 l_0_22_264)))
 (let ((?x148445 (* 2.0 l_0_22_264)))
 (let ((?x152632 (* ?x148445 l_0_22_275)))
 (let ((?x152630 (* l_0_22_263 l_0_22_263)))
 (let ((?x152637 (+ (- (+ (- (* (* 2.0 l_0_22_263) l_0_22_274) ?x152630) ?x152632) ?x152634) ?x152636)))
 (= (- (+ (- (+ (- ?x152637 ?x152638) ?x152640) ?x152642) ?x152644) ?x152646) 0.0))))))))))))))))
(assert
 (let ((?x152694 (* l_0_22_280 l_0_22_280)))
 (let ((?x152692 (* l_0_22_279 l_0_22_279)))
 (let ((?x152690 (* l_0_22_278 l_0_22_278)))
 (let ((?x152688 (* l_0_22_277 l_0_22_277)))
 (let ((?x152686 (* l_0_22_276 l_0_22_276)))
 (let ((?x152684 (* l_0_22_275 l_0_22_275)))
 (let ((?x152682 (* l_0_22_274 l_0_22_274)))
 (let ((?x148454 (* 2.0 l_0_22_267)))
 (let ((?x152644 (* ?x148454 l_0_22_278)))
 (let ((?x148451 (* 2.0 l_0_22_266)))
 (let ((?x152640 (* ?x148451 l_0_22_277)))
 (let ((?x148448 (* 2.0 l_0_22_265)))
 (let ((?x152636 (* ?x148448 l_0_22_276)))
 (let ((?x148445 (* 2.0 l_0_22_264)))
 (let ((?x152632 (* ?x148445 l_0_22_275)))
 (let ((?x152681 (- (- (- (- (* (* (- 2.0) l_0_22_263) l_0_22_274) ?x152632) ?x152636) ?x152640) ?x152644)))
 (let ((?x152695 (+ (+ (+ (+ (+ (+ (+ ?x152681 ?x152682) ?x152684) ?x152686) ?x152688) ?x152690) ?x152692) ?x152694)))
 (= ?x152695 0.0)))))))))))))))))))
(assert
 (let ((?x152694 (* l_0_22_280 l_0_22_280)))
 (let ((?x152692 (* l_0_22_279 l_0_22_279)))
 (let ((?x152690 (* l_0_22_278 l_0_22_278)))
 (let ((?x152688 (* l_0_22_277 l_0_22_277)))
 (let ((?x152686 (* l_0_22_276 l_0_22_276)))
 (let ((?x131839 (- (- (* (- l_0_22_274) l_0_22_274) (* l_0_22_275 l_0_22_275)) ?x152686)))
 (= (- (- (- (- ?x131839 ?x152688) ?x152690) ?x152692) ?x152694) 0.0))))))))
(assert
 (let ((?x152024 (* l_0_22_255 l_0_22_255)))
 (let ((?x131375 (* l_0_22_254 l_0_22_254)))
 (let ((?x109046 (+ ?x131375 ?x152024)))
 (let ((?x109060 (- (- ?x109046 (* (* 2.0 l_0_22_326) l_0_22_335)) (* (* 2.0 l_0_22_327) l_0_22_336))))
 (let ((?x109038 (- (- ?x109060 (* (* 2.0 l_0_22_362) l_0_22_371)) (* (* 2.0 l_0_22_363) l_0_22_372))))
 (let ((?x87934 (- (- ?x109038 (* (* 2.0 l_0_22_398) l_0_22_407)) (* (* 2.0 l_0_22_399) l_0_22_408))))
 (let ((?x152701 (- (- ?x87934 (* (* 2.0 l_0_22_434) l_0_22_443)) (* (* 2.0 l_0_22_435) l_0_22_444))))
 (let ((?x152705 (- (- ?x152701 (* (* 2.0 l_0_22_470) l_0_22_479)) (* (* 2.0 l_0_22_471) l_0_22_480))))
 (let ((?x152709 (- (- ?x152705 (* (* 2.0 l_0_22_506) l_0_22_515)) (* (* 2.0 l_0_22_507) l_0_22_516))))
 (let ((?x152713 (- (- ?x152709 (* (* 2.0 l_0_22_542) l_0_22_551)) (* (* 2.0 l_0_22_543) l_0_22_552))))
 (= ?x152713 0.0))))))))))))
(assert
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x65008 (* ?x146883 l_0_22_257)))
 (let ((?x41187 (- (+ (* (* 2.0 l_0_22_254) l_0_22_256) ?x65008) (* (* 2.0 l_0_22_328) l_0_22_335))))
 (let ((?x44965 (- (- ?x41187 (* (* 2.0 l_0_22_329) l_0_22_336)) (* (* 2.0 l_0_22_330) l_0_22_337))))
 (let ((?x65580 (- (- ?x44965 (* (* 2.0 l_0_22_364) l_0_22_371)) (* (* 2.0 l_0_22_365) l_0_22_372))))
 (let ((?x109244 (- (- ?x65580 (* (* 2.0 l_0_22_366) l_0_22_373)) (* (* 2.0 l_0_22_400) l_0_22_407))))
 (let ((?x131942 (- (- ?x109244 (* (* 2.0 l_0_22_401) l_0_22_408)) (* (* 2.0 l_0_22_402) l_0_22_409))))
 (let ((?x152741 (- (- ?x131942 (* (* 2.0 l_0_22_436) l_0_22_443)) (* (* 2.0 l_0_22_437) l_0_22_444))))
 (let ((?x152745 (- (- ?x152741 (* (* 2.0 l_0_22_438) l_0_22_445)) (* (* 2.0 l_0_22_472) l_0_22_479))))
 (let ((?x152749 (- (- ?x152745 (* (* 2.0 l_0_22_473) l_0_22_480)) (* (* 2.0 l_0_22_474) l_0_22_481))))
 (let ((?x152753 (- (- ?x152749 (* (* 2.0 l_0_22_508) l_0_22_515)) (* (* 2.0 l_0_22_509) l_0_22_516))))
 (let ((?x152757 (- (- ?x152753 (* (* 2.0 l_0_22_510) l_0_22_517)) (* (* 2.0 l_0_22_544) l_0_22_551))))
 (let ((?x152761 (- (- ?x152757 (* (* 2.0 l_0_22_545) l_0_22_552)) (* (* 2.0 l_0_22_546) l_0_22_553))))
 (= ?x152761 0.0)))))))))))))))
(assert
 (let ((?x152899 (* l_0_22_555 l_0_22_555)))
 (let ((?x152897 (* l_0_22_554 l_0_22_554)))
 (let ((?x152895 (* l_0_22_553 l_0_22_553)))
 (let ((?x152893 (* l_0_22_552 l_0_22_552)))
 (let ((?x152891 (* l_0_22_551 l_0_22_551)))
 (let ((?x152889 (* l_0_22_519 l_0_22_519)))
 (let ((?x152887 (* l_0_22_518 l_0_22_518)))
 (let ((?x152885 (* l_0_22_517 l_0_22_517)))
 (let ((?x152883 (* l_0_22_516 l_0_22_516)))
 (let ((?x152881 (* l_0_22_515 l_0_22_515)))
 (let ((?x152879 (* l_0_22_483 l_0_22_483)))
 (let ((?x152877 (* l_0_22_482 l_0_22_482)))
 (let ((?x152875 (* l_0_22_481 l_0_22_481)))
 (let ((?x152873 (* l_0_22_480 l_0_22_480)))
 (let ((?x152871 (* l_0_22_479 l_0_22_479)))
 (let ((?x152869 (* l_0_22_447 l_0_22_447)))
 (let ((?x152867 (* l_0_22_446 l_0_22_446)))
 (let ((?x152865 (* l_0_22_445 l_0_22_445)))
 (let ((?x152863 (* l_0_22_444 l_0_22_444)))
 (let ((?x152861 (* l_0_22_443 l_0_22_443)))
 (let ((?x152859 (* l_0_22_411 l_0_22_411)))
 (let ((?x152857 (* l_0_22_410 l_0_22_410)))
 (let ((?x152855 (* l_0_22_409 l_0_22_409)))
 (let ((?x152853 (* l_0_22_408 l_0_22_408)))
 (let ((?x152851 (* l_0_22_407 l_0_22_407)))
 (let ((?x152849 (* l_0_22_375 l_0_22_375)))
 (let ((?x152847 (* l_0_22_374 l_0_22_374)))
 (let ((?x152845 (* l_0_22_373 l_0_22_373)))
 (let ((?x152843 (* l_0_22_372 l_0_22_372)))
 (let ((?x152841 (* l_0_22_371 l_0_22_371)))
 (let ((?x152839 (* l_0_22_339 l_0_22_339)))
 (let ((?x152837 (* l_0_22_338 l_0_22_338)))
 (let ((?x152835 (* l_0_22_337 l_0_22_337)))
 (let ((?x152833 (* l_0_22_336 l_0_22_336)))
 (let ((?x152831 (* l_0_22_335 l_0_22_335)))
 (let ((?x146883 (* 2.0 l_0_22_255)))
 (let ((?x131575 (* ?x146883 l_0_22_264)))
 (let ((?x152836 (- (- (- (+ (* (* 2.0 l_0_22_254) l_0_22_263) ?x131575) ?x152831) ?x152833) ?x152835)))
 (let ((?x152850 (- (- (- (- (- (- (- ?x152836 ?x152837) ?x152839) ?x152841) ?x152843) ?x152845) ?x152847) ?x152849)))
 (let ((?x152864 (- (- (- (- (- (- (- ?x152850 ?x152851) ?x152853) ?x152855) ?x152857) ?x152859) ?x152861) ?x152863)))
 (let ((?x152878 (- (- (- (- (- (- (- ?x152864 ?x152865) ?x152867) ?x152869) ?x152871) ?x152873) ?x152875) ?x152877)))
 (let ((?x152892 (- (- (- (- (- (- (- ?x152878 ?x152879) ?x152881) ?x152883) ?x152885) ?x152887) ?x152889) ?x152891)))
 (= (- (- (- (- ?x152892 ?x152893) ?x152895) ?x152897) ?x152899) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x152578 (* l_0_22_258 l_0_22_258)))
 (let ((?x45054 (+ (+ (* l_0_22_256 l_0_22_256) (* l_0_22_257 l_0_22_257)) ?x152578)))
 (= ?x45054 0.0))))
(assert
 (let ((?x144025 (* 2.0 l_0_22_258)))
 (let ((?x152597 (* ?x144025 l_0_22_265)))
 (let ((?x144022 (* 2.0 l_0_22_257)))
 (let ((?x152593 (* ?x144022 l_0_22_264)))
 (= (+ (+ (* (* 2.0 l_0_22_256) l_0_22_263) ?x152593) ?x152597) 0.0))))))
(assert
 (let ((?x152646 (* l_0_22_267 l_0_22_267)))
 (let ((?x152642 (* l_0_22_266 l_0_22_266)))
 (let ((?x152638 (* l_0_22_265 l_0_22_265)))
 (let ((?x132072 (+ (+ (* l_0_22_263 l_0_22_263) (* l_0_22_264 l_0_22_264)) ?x152638)))
 (= (+ (+ ?x132072 ?x152642) ?x152646) 0.0))))))
(assert
 (let ((?x109647 (- (* (* (- 2.0) l_0_22_326) l_0_22_328) (* (* 2.0 l_0_22_327) l_0_22_329))))
 (let ((?x152945 (- (- ?x109647 (* (* 2.0 l_0_22_362) l_0_22_364)) (* (* 2.0 l_0_22_363) l_0_22_365))))
 (let ((?x152949 (- (- ?x152945 (* (* 2.0 l_0_22_398) l_0_22_400)) (* (* 2.0 l_0_22_399) l_0_22_401))))
 (let ((?x152953 (- (- ?x152949 (* (* 2.0 l_0_22_434) l_0_22_436)) (* (* 2.0 l_0_22_435) l_0_22_437))))
 (let ((?x152957 (- (- ?x152953 (* (* 2.0 l_0_22_470) l_0_22_472)) (* (* 2.0 l_0_22_471) l_0_22_473))))
 (let ((?x152961 (- (- ?x152957 (* (* 2.0 l_0_22_506) l_0_22_508)) (* (* 2.0 l_0_22_507) l_0_22_509))))
 (let ((?x152965 (- (- ?x152961 (* (* 2.0 l_0_22_542) l_0_22_544)) (* (* 2.0 l_0_22_543) l_0_22_545))))
 (= ?x152965 0.0)))))))))
(assert
 (let ((?x153060 (* l_0_22_546 l_0_22_546)))
 (let ((?x153058 (* l_0_22_545 l_0_22_545)))
 (let ((?x153056 (* l_0_22_544 l_0_22_544)))
 (let ((?x153054 (* l_0_22_510 l_0_22_510)))
 (let ((?x153052 (* l_0_22_509 l_0_22_509)))
 (let ((?x153050 (* l_0_22_508 l_0_22_508)))
 (let ((?x153048 (* l_0_22_474 l_0_22_474)))
 (let ((?x153046 (* l_0_22_473 l_0_22_473)))
 (let ((?x153044 (* l_0_22_472 l_0_22_472)))
 (let ((?x153042 (* l_0_22_438 l_0_22_438)))
 (let ((?x153040 (* l_0_22_437 l_0_22_437)))
 (let ((?x153038 (* l_0_22_436 l_0_22_436)))
 (let ((?x153036 (* l_0_22_402 l_0_22_402)))
 (let ((?x153034 (* l_0_22_401 l_0_22_401)))
 (let ((?x153032 (* l_0_22_400 l_0_22_400)))
 (let ((?x153030 (* l_0_22_366 l_0_22_366)))
 (let ((?x153028 (* l_0_22_365 l_0_22_365)))
 (let ((?x153026 (* l_0_22_364 l_0_22_364)))
 (let ((?x153024 (* l_0_22_330 l_0_22_330)))
 (let ((?x153025 (- (- (* (- l_0_22_328) l_0_22_328) (* l_0_22_329 l_0_22_329)) ?x153024)))
 (let ((?x153039 (- (- (- (- (- (- (- ?x153025 ?x153026) ?x153028) ?x153030) ?x153032) ?x153034) ?x153036) ?x153038)))
 (let ((?x153053 (- (- (- (- (- (- (- ?x153039 ?x153040) ?x153042) ?x153044) ?x153046) ?x153048) ?x153050) ?x153052)))
 (= (- (- (- (- ?x153053 ?x153054) ?x153056) ?x153058) ?x153060) 0.0))))))))))))))))))))))))
(assert
 (>= l_0_22_1 0.0))
(assert
 (>= l_0_22_3 0.0))
(assert
 (>= l_0_22_6 0.0))
(assert
 (>= l_0_22_10 0.0))
(assert
 (>= l_0_22_15 0.0))
(assert
 (>= l_0_22_21 0.0))
(assert
 (>= l_0_22_28 0.0))
(assert
 (>= l_0_22_36 0.0))
(assert
 (>= l_0_22_37 0.0))
(assert
 (>= l_0_22_39 0.0))
(assert
 (>= l_0_22_42 0.0))
(assert
 (>= l_0_22_46 0.0))
(assert
 (>= l_0_22_51 0.0))
(assert
 (>= l_0_22_57 0.0))
(assert
 (>= l_0_22_64 0.0))
(assert
 (>= l_0_22_72 0.0))
(assert
 (>= l_0_22_73 0.0))
(assert
 (>= l_0_22_75 0.0))
(assert
 (>= l_0_22_78 0.0))
(assert
 (>= l_0_22_82 0.0))
(assert
 (>= l_0_22_87 0.0))
(assert
 (>= l_0_22_93 0.0))
(assert
 (>= l_0_22_100 0.0))
(assert
 (>= l_0_22_108 0.0))
(assert
 (>= l_0_22_109 0.0))
(assert
 (>= l_0_22_111 0.0))
(assert
 (>= l_0_22_114 0.0))
(assert
 (>= l_0_22_118 0.0))
(assert
 (>= l_0_22_123 0.0))
(assert
 (>= l_0_22_129 0.0))
(assert
 (>= l_0_22_136 0.0))
(assert
 (>= l_0_22_144 0.0))
(assert
 (>= l_0_22_145 0.0))
(assert
 (>= l_0_22_147 0.0))
(assert
 (>= l_0_22_150 0.0))
(assert
 (>= l_0_22_154 0.0))
(assert
 (>= l_0_22_159 0.0))
(assert
 (>= l_0_22_165 0.0))
(assert
 (>= l_0_22_172 0.0))
(assert
 (>= l_0_22_180 0.0))
(assert
 (>= l_0_22_181 0.0))
(assert
 (>= l_0_22_183 0.0))
(assert
 (>= l_0_22_186 0.0))
(assert
 (>= l_0_22_190 0.0))
(assert
 (>= l_0_22_195 0.0))
(assert
 (>= l_0_22_201 0.0))
(assert
 (>= l_0_22_208 0.0))
(assert
 (>= l_0_22_216 0.0))
(assert
 (>= l_0_22_217 0.0))
(assert
 (>= l_0_22_219 0.0))
(assert
 (>= l_0_22_222 0.0))
(assert
 (>= l_0_22_226 0.0))
(assert
 (>= l_0_22_231 0.0))
(assert
 (>= l_0_22_237 0.0))
(assert
 (>= l_0_22_244 0.0))
(assert
 (>= l_0_22_252 0.0))
(assert
 (>= l_0_22_253 0.0))
(assert
 (>= l_0_22_255 0.0))
(assert
 (>= l_0_22_258 0.0))
(assert
 (>= l_0_22_262 0.0))
(assert
 (>= l_0_22_267 0.0))
(assert
 (>= l_0_22_273 0.0))
(assert
 (>= l_0_22_280 0.0))
(assert
 (>= l_0_22_288 0.0))
(assert
 (>= l_0_22_289 0.0))
(assert
 (>= l_0_22_291 0.0))
(assert
 (>= l_0_22_294 0.0))
(assert
 (>= l_0_22_298 0.0))
(assert
 (>= l_0_22_303 0.0))
(assert
 (>= l_0_22_309 0.0))
(assert
 (>= l_0_22_316 0.0))
(assert
 (>= l_0_22_324 0.0))
(assert
 (>= l_0_22_325 0.0))
(assert
 (>= l_0_22_327 0.0))
(assert
 (>= l_0_22_330 0.0))
(assert
 (>= l_0_22_334 0.0))
(assert
 (>= l_0_22_339 0.0))
(assert
 (>= l_0_22_345 0.0))
(assert
 (>= l_0_22_352 0.0))
(assert
 (>= l_0_22_360 0.0))
(assert
 (>= l_0_22_361 0.0))
(assert
 (>= l_0_22_363 0.0))
(assert
 (>= l_0_22_366 0.0))
(assert
 (>= l_0_22_370 0.0))
(assert
 (>= l_0_22_375 0.0))
(assert
 (>= l_0_22_381 0.0))
(assert
 (>= l_0_22_388 0.0))
(assert
 (>= l_0_22_396 0.0))
(assert
 (>= l_0_22_397 0.0))
(assert
 (>= l_0_22_399 0.0))
(assert
 (>= l_0_22_402 0.0))
(assert
 (>= l_0_22_406 0.0))
(assert
 (>= l_0_22_411 0.0))
(assert
 (>= l_0_22_417 0.0))
(assert
 (>= l_0_22_424 0.0))
(assert
 (>= l_0_22_432 0.0))
(assert
 (>= l_0_22_433 0.0))
(assert
 (>= l_0_22_435 0.0))
(assert
 (>= l_0_22_438 0.0))
(assert
 (>= l_0_22_442 0.0))
(assert
 (>= l_0_22_447 0.0))
(assert
 (>= l_0_22_453 0.0))
(assert
 (>= l_0_22_460 0.0))
(assert
 (>= l_0_22_468 0.0))
(assert
 (>= l_0_22_469 0.0))
(assert
 (>= l_0_22_471 0.0))
(assert
 (>= l_0_22_474 0.0))
(assert
 (>= l_0_22_478 0.0))
(assert
 (>= l_0_22_483 0.0))
(assert
 (>= l_0_22_489 0.0))
(assert
 (>= l_0_22_496 0.0))
(assert
 (>= l_0_22_504 0.0))
(assert
 (>= l_0_22_505 0.0))
(assert
 (>= l_0_22_507 0.0))
(assert
 (>= l_0_22_510 0.0))
(assert
 (>= l_0_22_514 0.0))
(assert
 (>= l_0_22_519 0.0))
(assert
 (>= l_0_22_525 0.0))
(assert
 (>= l_0_22_532 0.0))
(assert
 (>= l_0_22_540 0.0))
(assert
 (>= l_0_22_541 0.0))
(assert
 (>= l_0_22_543 0.0))
(assert
 (>= l_0_22_546 0.0))
(assert
 (>= l_0_22_550 0.0))
(assert
 (>= l_0_22_555 0.0))
(assert
 (>= l_0_22_561 0.0))
(assert
 (>= l_0_22_568 0.0))
(assert
 (>= l_0_22_576 0.0))
(check-sat)
(get-model)