(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_2_66 () Real)
(declare-fun l_0_2_65 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_74 () Real)
(declare-fun l_0_2_64 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_53 () Real)
(declare-fun l_0_2_43 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_41 () Real)
(declare-fun l_0_2_40 () Real)
(declare-fun l_0_2_39 () Real)
(declare-fun l_0_2_38 () Real)
(declare-fun l_0_2_37 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_75 () Real)
(declare-fun l_0_2_76 () Real)
(declare-fun l_0_2_69 () Real)
(declare-fun l_0_2_68 () Real)
(declare-fun l_0_2_67 () Real)
(declare-fun l_0_2_77 () Real)
(declare-fun l_0_2_73 () Real)
(declare-fun l_0_2_72 () Real)
(declare-fun l_0_2_71 () Real)
(declare-fun l_0_2_70 () Real)
(declare-fun l_0_2_54 () Real)
(declare-fun l_0_2_45 () Real)
(declare-fun l_0_2_44 () Real)
(declare-fun l_0_2_78 () Real)
(declare-fun l_0_2_83 () Real)
(declare-fun l_0_2_82 () Real)
(declare-fun l_0_2_81 () Real)
(declare-fun l_0_2_80 () Real)
(declare-fun l_0_2_79 () Real)
(declare-fun l_0_2_55 () Real)
(declare-fun l_0_2_48 () Real)
(declare-fun l_0_2_47 () Real)
(declare-fun l_0_2_46 () Real)
(declare-fun l_0_2_56 () Real)
(declare-fun l_0_2_52 () Real)
(declare-fun l_0_2_51 () Real)
(declare-fun l_0_2_50 () Real)
(declare-fun l_0_2_49 () Real)
(declare-fun l_0_2_57 () Real)
(declare-fun l_0_2_62 () Real)
(declare-fun l_0_2_61 () Real)
(declare-fun l_0_2_60 () Real)
(declare-fun l_0_2_59 () Real)
(declare-fun l_0_2_58 () Real)
(declare-fun l_0_2_42 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_63 () Real)
(declare-fun l_0_2_84 () Real)
(declare-fun l_0_3_96 () Real)
(declare-fun l_0_3_87 () Real)
(declare-fun l_0_3_95 () Real)
(declare-fun l_0_3_86 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_117 () Real)
(declare-fun l_0_3_108 () Real)
(declare-fun l_0_3_116 () Real)
(declare-fun l_0_3_107 () Real)
(declare-fun l_0_3_81 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_80 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_79 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_123 () Real)
(declare-fun l_0_3_111 () Real)
(declare-fun l_0_3_122 () Real)
(declare-fun l_0_3_110 () Real)
(declare-fun l_0_3_121 () Real)
(declare-fun l_0_3_109 () Real)
(declare-fun l_0_3_90 () Real)
(declare-fun l_0_3_102 () Real)
(declare-fun l_0_3_89 () Real)
(declare-fun l_0_3_101 () Real)
(declare-fun l_0_3_88 () Real)
(declare-fun l_0_3_100 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_3_92 () Real)
(declare-fun l_0_3_91 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_113 () Real)
(declare-fun l_0_3_112 () Real)
(declare-fun l_0_3_85 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_106 () Real)
(declare-fun l_0_3_97 () Real)
(declare-fun l_0_3_76 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_98 () Real)
(declare-fun l_0_3_94 () Real)
(declare-fun l_0_3_93 () Real)
(declare-fun l_0_3_77 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_99 () Real)
(declare-fun l_0_3_78 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_83 () Real)
(declare-fun l_0_3_82 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_104 () Real)
(declare-fun l_0_3_103 () Real)
(declare-fun l_0_3_118 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_119 () Real)
(declare-fun l_0_3_115 () Real)
(declare-fun l_0_3_114 () Real)
(declare-fun l_0_3_120 () Real)
(declare-fun l_0_3_125 () Real)
(declare-fun l_0_3_124 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_84 () Real)
(declare-fun l_0_3_105 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_126 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_144 () Real)
(declare-fun l_0_4_132 () Real)
(declare-fun l_0_4_143 () Real)
(declare-fun l_0_4_131 () Real)
(declare-fun l_0_4_142 () Real)
(declare-fun l_0_4_130 () Real)
(declare-fun l_0_4_123 () Real)
(declare-fun l_0_4_111 () Real)
(declare-fun l_0_4_122 () Real)
(declare-fun l_0_4_110 () Real)
(declare-fun l_0_4_121 () Real)
(declare-fun l_0_4_109 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_129 () Real)
(declare-fun l_0_4_128 () Real)
(declare-fun l_0_4_108 () Real)
(declare-fun l_0_4_107 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_134 () Real)
(declare-fun l_0_4_133 () Real)
(declare-fun l_0_4_113 () Real)
(declare-fun l_0_4_112 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_138 () Real)
(declare-fun l_0_4_137 () Real)
(declare-fun l_0_4_117 () Real)
(declare-fun l_0_4_116 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_127 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_106 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_139 () Real)
(declare-fun l_0_4_118 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_140 () Real)
(declare-fun l_0_4_136 () Real)
(declare-fun l_0_4_135 () Real)
(declare-fun l_0_4_119 () Real)
(declare-fun l_0_4_115 () Real)
(declare-fun l_0_4_114 () Real)
(declare-fun l_0_4_141 () Real)
(declare-fun l_0_4_120 () Real)
(declare-fun l_0_4_146 () Real)
(declare-fun l_0_4_145 () Real)
(declare-fun l_0_4_125 () Real)
(declare-fun l_0_4_124 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_147 () Real)
(declare-fun l_0_4_126 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_117 () Real)
(declare-fun l_0_5_108 () Real)
(declare-fun l_0_5_116 () Real)
(declare-fun l_0_5_107 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_123 () Real)
(declare-fun l_0_5_111 () Real)
(declare-fun l_0_5_122 () Real)
(declare-fun l_0_5_110 () Real)
(declare-fun l_0_5_121 () Real)
(declare-fun l_0_5_109 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_106 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_113 () Real)
(declare-fun l_0_5_112 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_118 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_119 () Real)
(declare-fun l_0_5_115 () Real)
(declare-fun l_0_5_114 () Real)
(declare-fun l_0_5_120 () Real)
(declare-fun l_0_5_125 () Real)
(declare-fun l_0_5_124 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_126 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_144 () Real)
(declare-fun l_0_6_132 () Real)
(declare-fun l_0_6_143 () Real)
(declare-fun l_0_6_131 () Real)
(declare-fun l_0_6_142 () Real)
(declare-fun l_0_6_130 () Real)
(declare-fun l_0_6_123 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_122 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_121 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_129 () Real)
(declare-fun l_0_6_128 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_127 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_134 () Real)
(declare-fun l_0_6_133 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_138 () Real)
(declare-fun l_0_6_137 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_139 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_140 () Real)
(declare-fun l_0_6_136 () Real)
(declare-fun l_0_6_135 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_141 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_146 () Real)
(declare-fun l_0_6_145 () Real)
(declare-fun l_0_6_125 () Real)
(declare-fun l_0_6_124 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_147 () Real)
(declare-fun l_0_6_126 () Real)
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (= (- l_0_0_3) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- l_0_1_2) 0.0))
(assert
 (= (- (- (- l_0_1_3) l_0_1_4) l_0_1_5) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (>= l_0_1_5 0.0))
(assert
 (= (+ (- (* (- l_0_2_65) l_0_2_65) (* l_0_2_66 l_0_2_66)) 1.0) 0.0))
(assert
 (let ((?x729 (* l_0_2_22 l_0_2_22)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x727 (* ?x726 l_0_2_32)))
 (let ((?x728 (- (- (* (* 2.0 l_0_2_1) l_0_2_11) (* l_0_2_1 l_0_2_1)) ?x727)))
 (= (+ ?x728 ?x729) 0.0))))))
(assert
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x762 (* ?x761 l_0_2_33)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x759 (* ?x758 l_0_2_32)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x756 (* ?x726 l_0_2_23)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x754 (* ?x753 l_0_2_3)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x751 (* ?x750 l_0_2_2)))
 (let ((?x760 (- (+ (+ (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) ?x751) ?x754) ?x756) ?x759)))
 (= (- (- ?x760 ?x762) (* (* 2.0 l_0_2_64) l_0_2_74)) 0.0)))))))))))))
(assert
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x818 (* ?x817 l_0_2_34)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x815 (* ?x814 l_0_2_33)))
 (let ((?x811 (* 2.0 l_0_2_25)))
 (let ((?x812 (* ?x811 l_0_2_32)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x809 (* ?x726 l_0_2_25)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x807 (* ?x806 l_0_2_6)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x804 (* ?x753 l_0_2_5)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x802 (* ?x750 l_0_2_4)))
 (let ((?x810 (+ (+ (+ (+ (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x802) ?x804) ?x807) ?x809)))
 (= (- (- (- ?x810 ?x812) ?x815) ?x818) 0.0)))))))))))))))))
(assert
 (let ((?x880 (* 2.0 l_0_2_31)))
 (let ((?x881 (* ?x880 l_0_2_35)))
 (let ((?x877 (* 2.0 l_0_2_30)))
 (let ((?x878 (* ?x877 l_0_2_34)))
 (let ((?x874 (* 2.0 l_0_2_29)))
 (let ((?x875 (* ?x874 l_0_2_33)))
 (let ((?x871 (* 2.0 l_0_2_28)))
 (let ((?x872 (* ?x871 l_0_2_32)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x727 (* ?x726 l_0_2_32)))
 (let ((?x868 (* ?x726 l_0_2_28)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x866 (* ?x806 l_0_2_9)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x864 (* ?x753 l_0_2_8)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x862 (* ?x750 l_0_2_7)))
 (let ((?x859 (* 2.0 l_0_2_10)))
 (let ((?x860 (* ?x859 l_0_2_14)))
 (let ((?x722 (* 2.0 l_0_2_1)))
 (let ((?x857 (* ?x722 l_0_2_7)))
 (let ((?x723 (* ?x722 l_0_2_11)))
 (let ((?x870 (- (+ (+ (+ (+ (+ (- ?x723 ?x857) ?x860) ?x862) ?x864) ?x866) ?x868) ?x727)))
 (let ((?x885 (+ (- (- (- (- ?x870 ?x872) ?x875) ?x878) ?x881) (* (* 2.0 l_0_2_43) l_0_2_53))))
 (= ?x885 0.0))))))))))))))))))))))))))
(assert
 (let ((?x954 (* l_0_2_36 l_0_2_36)))
 (let ((?x952 (* l_0_2_35 l_0_2_35)))
 (let ((?x950 (* l_0_2_34 l_0_2_34)))
 (let ((?x948 (* l_0_2_33 l_0_2_33)))
 (let ((?x946 (* l_0_2_32 l_0_2_32)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x727 (* ?x726 l_0_2_32)))
 (let ((?x943 (* l_0_2_15 l_0_2_15)))
 (let ((?x941 (* l_0_2_14 l_0_2_14)))
 (let ((?x939 (* l_0_2_13 l_0_2_13)))
 (let ((?x937 (* l_0_2_12 l_0_2_12)))
 (let ((?x938 (+ (+ (* (* (- 2.0) l_0_2_1) l_0_2_11) (* l_0_2_11 l_0_2_11)) ?x937)))
 (let ((?x951 (- (- (- (+ (+ (+ (+ ?x938 ?x939) ?x941) ?x943) ?x727) ?x946) ?x948) ?x950)))
 (= (- (- ?x951 ?x952) ?x954) 0.0)))))))))))))))
(assert
 (let ((?x1008 (* (* 2.0 l_0_2_36) l_0_2_41)))
 (let ((?x1005 (* (* 2.0 l_0_2_35) l_0_2_40)))
 (let ((?x1002 (* (* 2.0 l_0_2_34) l_0_2_39)))
 (let ((?x999 (* (* 2.0 l_0_2_33) l_0_2_38)))
 (let ((?x996 (* (* 2.0 l_0_2_32) l_0_2_37)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x993 (* ?x726 l_0_2_37)))
 (let ((?x991 (* (* 2.0 l_0_2_15) l_0_2_20)))
 (let ((?x988 (* (* 2.0 l_0_2_14) l_0_2_19)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x985 (* ?x806 l_0_2_18)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x983 (* ?x753 l_0_2_17)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x981 (* ?x750 l_0_2_16)))
 (let ((?x989 (+ (+ (+ (+ (* (* (- 2.0) l_0_2_1) l_0_2_16) ?x981) ?x983) ?x985) ?x988)))
 (let ((?x1009 (- (- (- (- (- (+ (+ ?x989 ?x991) ?x993) ?x996) ?x999) ?x1002) ?x1005) ?x1008)))
 (= ?x1009 0.0)))))))))))))))))))
(assert
 (let ((?x1071 (* l_0_2_3 l_0_2_3)))
 (let ((?x1069 (* l_0_2_24 l_0_2_24)))
 (let ((?x1072 (- (+ (+ (* (- l_0_2_2) l_0_2_2) (* l_0_2_23 l_0_2_23)) ?x1069) ?x1071)))
 (let ((?x1078 (- (- ?x1072 (* (* 2.0 l_0_2_65) l_0_2_74)) (* (* 2.0 l_0_2_66) l_0_2_75))))
 (= ?x1078 0.0))))))
(assert
 (let ((?x1106 (* 2.0 l_0_2_3)))
 (let ((?x1107 (* ?x1106 l_0_2_5)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1104 (* ?x761 l_0_2_26)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1102 (* ?x758 l_0_2_25)))
 (let ((?x1111 (- (- (+ (+ (* (* (- 2.0) l_0_2_2) l_0_2_4) ?x1102) ?x1104) ?x1107) (* (* 2.0 l_0_2_67) l_0_2_74))))
 (let ((?x1117 (- (- ?x1111 (* (* 2.0 l_0_2_68) l_0_2_75)) (* (* 2.0 l_0_2_69) l_0_2_76))))
 (= ?x1117 0.0))))))))))
(assert
 (let ((?x1106 (* 2.0 l_0_2_3)))
 (let ((?x1165 (* ?x1106 l_0_2_8)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x762 (* ?x761 l_0_2_33)))
 (let ((?x1162 (* ?x761 l_0_2_29)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x759 (* ?x758 l_0_2_32)))
 (let ((?x1159 (* ?x758 l_0_2_28)))
 (let ((?x1156 (* 2.0 l_0_2_2)))
 (let ((?x1157 (* ?x1156 l_0_2_7)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x754 (* ?x753 l_0_2_3)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x751 (* ?x750 l_0_2_2)))
 (let ((?x1155 (+ ?x751 ?x754)))
 (let ((?x1169 (+ (- (- (+ (- (+ (- ?x1155 ?x1157) ?x1159) ?x759) ?x1162) ?x762) ?x1165) (* (* 2.0 l_0_2_44) l_0_2_53))))
 (let ((?x1175 (- (+ ?x1169 (* (* 2.0 l_0_2_45) l_0_2_54)) (* (* 2.0 l_0_2_70) l_0_2_74))))
 (let ((?x1181 (- (- ?x1175 (* (* 2.0 l_0_2_71) l_0_2_75)) (* (* 2.0 l_0_2_72) l_0_2_76))))
 (= (- ?x1181 (* (* 2.0 l_0_2_73) l_0_2_77)) 0.0))))))))))))))))))))
(assert
 (let ((?x1252 (* l_0_2_78 l_0_2_78)))
 (let ((?x1250 (* l_0_2_77 l_0_2_77)))
 (let ((?x1248 (* l_0_2_76 l_0_2_76)))
 (let ((?x1246 (* l_0_2_75 l_0_2_75)))
 (let ((?x1244 (* l_0_2_74 l_0_2_74)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x762 (* ?x761 l_0_2_33)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x759 (* ?x758 l_0_2_32)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x754 (* ?x753 l_0_2_3)))
 (let ((?x1245 (- (+ (+ (- (* (* (- 2.0) l_0_2_11) l_0_2_2) ?x754) ?x759) ?x762) ?x1244)))
 (= (- (- (- (- ?x1245 ?x1246) ?x1248) ?x1250) ?x1252) 0.0))))))))))))))
(assert
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1283 (* ?x761 l_0_2_38)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1281 (* ?x758 l_0_2_37)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1279 (* ?x1278 l_0_2_3)))
 (let ((?x1287 (- (+ (+ (- (* (* (- 2.0) l_0_2_16) l_0_2_2) ?x1279) ?x1281) ?x1283) (* (* 2.0 l_0_2_74) l_0_2_79))))
 (let ((?x1293 (- (- ?x1287 (* (* 2.0 l_0_2_75) l_0_2_80)) (* (* 2.0 l_0_2_76) l_0_2_81))))
 (let ((?x1299 (- (- ?x1293 (* (* 2.0 l_0_2_77) l_0_2_82)) (* (* 2.0 l_0_2_78) l_0_2_83))))
 (= ?x1299 0.0)))))))))))
(assert
 (let ((?x1358 (* l_0_2_6 l_0_2_6)))
 (let ((?x1356 (* l_0_2_5 l_0_2_5)))
 (let ((?x1354 (* l_0_2_4 l_0_2_4)))
 (let ((?x1352 (* l_0_2_27 l_0_2_27)))
 (let ((?x1355 (- (+ (+ (* l_0_2_25 l_0_2_25) (* l_0_2_26 l_0_2_26)) ?x1352) ?x1354)))
 (= (- (- ?x1355 ?x1356) ?x1358) 0.0)))))))
(assert
 (let ((?x1399 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x1396 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x1384 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x818 (* ?x817 l_0_2_34)))
 (let ((?x1380 (* ?x817 l_0_2_30)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x815 (* ?x814 l_0_2_33)))
 (let ((?x1377 (* ?x814 l_0_2_29)))
 (let ((?x811 (* 2.0 l_0_2_25)))
 (let ((?x812 (* ?x811 l_0_2_32)))
 (let ((?x1374 (* ?x811 l_0_2_28)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x807 (* ?x806 l_0_2_6)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x804 (* ?x753 l_0_2_5)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x802 (* ?x750 l_0_2_4)))
 (let ((?x1373 (+ (+ ?x802 ?x804) ?x807)))
 (let ((?x1385 (- (- (+ (- (+ (- (+ ?x1373 ?x1374) ?x812) ?x1377) ?x815) ?x1380) ?x818) ?x1384)))
 (let ((?x1391 (+ (+ ?x1385 (* (* 2.0 l_0_2_46) l_0_2_53)) (* (* 2.0 l_0_2_47) l_0_2_54))))
 (= (- (- (+ ?x1391 (* (* 2.0 l_0_2_48) l_0_2_55)) ?x1396) ?x1399) 0.0)))))))))))))))))))))))
(assert
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x818 (* ?x817 l_0_2_34)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x815 (* ?x814 l_0_2_33)))
 (let ((?x811 (* 2.0 l_0_2_25)))
 (let ((?x812 (* ?x811 l_0_2_32)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x807 (* ?x806 l_0_2_6)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x804 (* ?x753 l_0_2_5)))
 (let ((?x1447 (+ (+ (- (- (* (* (- 2.0) l_0_2_11) l_0_2_4) ?x804) ?x807) ?x812) ?x815)))
 (= (+ ?x1447 ?x818) 0.0)))))))))))))
(assert
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x1472 (* ?x817 l_0_2_39)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x1470 (* ?x814 l_0_2_38)))
 (let ((?x811 (* 2.0 l_0_2_25)))
 (let ((?x1468 (* ?x811 l_0_2_37)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x762 (* ?x761 l_0_2_33)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x759 (* ?x758 l_0_2_32)))
 (let ((?x1463 (* 2.0 l_0_2_18)))
 (let ((?x1464 (* ?x1463 l_0_2_6)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1461 (* ?x1278 l_0_2_5)))
 (let ((?x1456 (* 2.0 l_0_2_16)))
 (let ((?x1459 (* ?x1456 l_0_2_4)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x754 (* ?x753 l_0_2_3)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x751 (* ?x750 l_0_2_2)))
 (let ((?x1155 (+ ?x751 ?x754)))
 (let ((?x1471 (+ (+ (- (- (- (- (- ?x1155 ?x1459) ?x1461) ?x1464) ?x759) ?x762) ?x1468) ?x1470)))
 (= (+ ?x1471 ?x1472) 0.0))))))))))))))))))))))))
(assert
 (let ((?x1538 (* l_0_2_9 l_0_2_9)))
 (let ((?x1536 (* l_0_2_8 l_0_2_8)))
 (let ((?x1534 (* l_0_2_7 l_0_2_7)))
 (let ((?x1520 (* l_0_2_31 l_0_2_31)))
 (let ((?x880 (* 2.0 l_0_2_31)))
 (let ((?x881 (* ?x880 l_0_2_35)))
 (let ((?x1517 (* l_0_2_30 l_0_2_30)))
 (let ((?x877 (* 2.0 l_0_2_30)))
 (let ((?x878 (* ?x877 l_0_2_34)))
 (let ((?x1514 (* l_0_2_29 l_0_2_29)))
 (let ((?x874 (* 2.0 l_0_2_29)))
 (let ((?x875 (* ?x874 l_0_2_33)))
 (let ((?x1511 (* l_0_2_28 l_0_2_28)))
 (let ((?x871 (* 2.0 l_0_2_28)))
 (let ((?x872 (* ?x871 l_0_2_32)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x866 (* ?x806 l_0_2_9)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x864 (* ?x753 l_0_2_8)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x862 (* ?x750 l_0_2_7)))
 (let ((?x1507 (+ (- (* (* 2.0 l_0_2_10) l_0_2_14) (* l_0_2_10 l_0_2_10)) ?x862)))
 (let ((?x1516 (- (+ (- (+ (- (+ (+ ?x1507 ?x864) ?x866) ?x872) ?x1511) ?x875) ?x1514) ?x878)))
 (let ((?x1524 (+ (+ (- (+ ?x1516 ?x1517) ?x881) ?x1520) (* (* 2.0 l_0_2_49) l_0_2_53))))
 (let ((?x1530 (+ (+ ?x1524 (* (* 2.0 l_0_2_50) l_0_2_54)) (* (* 2.0 l_0_2_51) l_0_2_55))))
 (let ((?x1539 (- (- (- (+ ?x1530 (* (* 2.0 l_0_2_52) l_0_2_56)) ?x1534) ?x1536) ?x1538)))
 (= ?x1539 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x1601 (* l_0_2_57 l_0_2_57)))
 (let ((?x1599 (* l_0_2_56 l_0_2_56)))
 (let ((?x1597 (* l_0_2_55 l_0_2_55)))
 (let ((?x1595 (* l_0_2_54 l_0_2_54)))
 (let ((?x1593 (* l_0_2_53 l_0_2_53)))
 (let ((?x954 (* l_0_2_36 l_0_2_36)))
 (let ((?x952 (* l_0_2_35 l_0_2_35)))
 (let ((?x950 (* l_0_2_34 l_0_2_34)))
 (let ((?x948 (* l_0_2_33 l_0_2_33)))
 (let ((?x946 (* l_0_2_32 l_0_2_32)))
 (let ((?x880 (* 2.0 l_0_2_31)))
 (let ((?x881 (* ?x880 l_0_2_35)))
 (let ((?x877 (* 2.0 l_0_2_30)))
 (let ((?x878 (* ?x877 l_0_2_34)))
 (let ((?x874 (* 2.0 l_0_2_29)))
 (let ((?x875 (* ?x874 l_0_2_33)))
 (let ((?x871 (* 2.0 l_0_2_28)))
 (let ((?x872 (* ?x871 l_0_2_32)))
 (let ((?x943 (* l_0_2_15 l_0_2_15)))
 (let ((?x941 (* l_0_2_14 l_0_2_14)))
 (let ((?x939 (* l_0_2_13 l_0_2_13)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x866 (* ?x806 l_0_2_9)))
 (let ((?x937 (* l_0_2_12 l_0_2_12)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x864 (* ?x753 l_0_2_8)))
 (let ((?x935 (* l_0_2_11 l_0_2_11)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x862 (* ?x750 l_0_2_7)))
 (let ((?x1579 (+ (- (+ (- (* (* (- 2.0) l_0_2_10) l_0_2_14) ?x862) ?x935) ?x864) ?x937)))
 (let ((?x1586 (+ (+ (+ (+ (+ (+ (- ?x1579 ?x866) ?x939) ?x941) ?x943) ?x872) ?x875) ?x878)))
 (let ((?x1594 (+ (- (- (- (- (- (+ ?x1586 ?x881) ?x946) ?x948) ?x950) ?x952) ?x954) ?x1593)))
 (= (+ (+ (+ (+ ?x1594 ?x1595) ?x1597) ?x1599) ?x1601) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1008 (* (* 2.0 l_0_2_36) l_0_2_41)))
 (let ((?x1005 (* (* 2.0 l_0_2_35) l_0_2_40)))
 (let ((?x1002 (* (* 2.0 l_0_2_34) l_0_2_39)))
 (let ((?x999 (* (* 2.0 l_0_2_33) l_0_2_38)))
 (let ((?x996 (* (* 2.0 l_0_2_32) l_0_2_37)))
 (let ((?x880 (* 2.0 l_0_2_31)))
 (let ((?x1655 (* ?x880 l_0_2_40)))
 (let ((?x877 (* 2.0 l_0_2_30)))
 (let ((?x1653 (* ?x877 l_0_2_39)))
 (let ((?x874 (* 2.0 l_0_2_29)))
 (let ((?x1651 (* ?x874 l_0_2_38)))
 (let ((?x871 (* 2.0 l_0_2_28)))
 (let ((?x1649 (* ?x871 l_0_2_37)))
 (let ((?x1463 (* 2.0 l_0_2_18)))
 (let ((?x1647 (* ?x1463 l_0_2_9)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1645 (* ?x1278 l_0_2_8)))
 (let ((?x1456 (* 2.0 l_0_2_16)))
 (let ((?x1643 (* ?x1456 l_0_2_7)))
 (let ((?x991 (* (* 2.0 l_0_2_15) l_0_2_20)))
 (let ((?x988 (* (* 2.0 l_0_2_14) l_0_2_19)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x985 (* ?x806 l_0_2_18)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x983 (* ?x753 l_0_2_17)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x981 (* ?x750 l_0_2_16)))
 (let ((?x1641 (+ (+ (+ (+ (* (* (- 2.0) l_0_2_10) l_0_2_19) ?x981) ?x983) ?x985) ?x988)))
 (let ((?x1654 (+ (+ (+ (- (- (- (+ ?x1641 ?x991) ?x1643) ?x1645) ?x1647) ?x1649) ?x1651) ?x1653)))
 (let ((?x1664 (+ (- (- (- (- (- (+ ?x1654 ?x1655) ?x996) ?x999) ?x1002) ?x1005) ?x1008) (* (* 2.0 l_0_2_53) l_0_2_58))))
 (let ((?x1670 (+ (+ ?x1664 (* (* 2.0 l_0_2_54) l_0_2_59)) (* (* 2.0 l_0_2_55) l_0_2_60))))
 (let ((?x1676 (+ (+ ?x1670 (* (* 2.0 l_0_2_56) l_0_2_61)) (* (* 2.0 l_0_2_57) l_0_2_62))))
 (= ?x1676 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x954 (* l_0_2_36 l_0_2_36)))
 (let ((?x952 (* l_0_2_35 l_0_2_35)))
 (let ((?x950 (* l_0_2_34 l_0_2_34)))
 (let ((?x948 (* l_0_2_33 l_0_2_33)))
 (let ((?x946 (* l_0_2_32 l_0_2_32)))
 (let ((?x943 (* l_0_2_15 l_0_2_15)))
 (let ((?x941 (* l_0_2_14 l_0_2_14)))
 (let ((?x939 (* l_0_2_13 l_0_2_13)))
 (let ((?x1734 (- (- (- (* (- l_0_2_11) l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x939) ?x941)))
 (= (+ (+ (+ (+ (+ (- ?x1734 ?x943) ?x946) ?x948) ?x950) ?x952) ?x954) 0.0)))))))))))
(assert
 (let ((?x1008 (* (* 2.0 l_0_2_36) l_0_2_41)))
 (let ((?x1005 (* (* 2.0 l_0_2_35) l_0_2_40)))
 (let ((?x1002 (* (* 2.0 l_0_2_34) l_0_2_39)))
 (let ((?x999 (* (* 2.0 l_0_2_33) l_0_2_38)))
 (let ((?x996 (* (* 2.0 l_0_2_32) l_0_2_37)))
 (let ((?x991 (* (* 2.0 l_0_2_15) l_0_2_20)))
 (let ((?x988 (* (* 2.0 l_0_2_14) l_0_2_19)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x985 (* ?x806 l_0_2_18)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x983 (* ?x753 l_0_2_17)))
 (let ((?x1756 (- (- (- (- (* (* (- 2.0) l_0_2_11) l_0_2_16) ?x983) ?x985) ?x988) ?x991)))
 (= (+ (+ (+ (+ (+ ?x1756 ?x996) ?x999) ?x1002) ?x1005) ?x1008) 0.0))))))))))))))
(assert
 (let ((?x1799 (* l_0_2_42 l_0_2_42)))
 (let ((?x1797 (* l_0_2_41 l_0_2_41)))
 (let ((?x1795 (* l_0_2_40 l_0_2_40)))
 (let ((?x1793 (* l_0_2_39 l_0_2_39)))
 (let ((?x1791 (* l_0_2_38 l_0_2_38)))
 (let ((?x1789 (* l_0_2_37 l_0_2_37)))
 (let ((?x1787 (* l_0_2_21 l_0_2_21)))
 (let ((?x1785 (* l_0_2_20 l_0_2_20)))
 (let ((?x1783 (* l_0_2_19 l_0_2_19)))
 (let ((?x1781 (* l_0_2_18 l_0_2_18)))
 (let ((?x1784 (- (- (- (* (- l_0_2_16) l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x1781) ?x1783)))
 (let ((?x1798 (+ (+ (+ (+ (+ (- (- ?x1784 ?x1785) ?x1787) ?x1789) ?x1791) ?x1793) ?x1795) ?x1797)))
 (= (+ ?x1798 ?x1799) 0.0))))))))))))))
(assert
 (= (- (* l_0_2_1 l_0_2_1) (* l_0_2_22 l_0_2_22)) 0.0))
(assert
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x1472 (* ?x817 l_0_2_39)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x1470 (* ?x814 l_0_2_38)))
 (let ((?x811 (* 2.0 l_0_2_25)))
 (let ((?x1468 (* ?x811 l_0_2_37)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x756 (* ?x726 l_0_2_23)))
 (let ((?x1463 (* 2.0 l_0_2_18)))
 (let ((?x1464 (* ?x1463 l_0_2_6)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1461 (* ?x1278 l_0_2_5)))
 (let ((?x1456 (* 2.0 l_0_2_16)))
 (let ((?x1459 (* ?x1456 l_0_2_4)))
 (let ((?x722 (* 2.0 l_0_2_1)))
 (let ((?x1832 (* ?x722 l_0_2_2)))
 (let ((?x1839 (- (- (- (- (+ (+ (+ ?x1832 ?x1459) ?x1461) ?x1464) ?x756) ?x1468) ?x1470) ?x1472)))
 (= ?x1839 0.0)))))))))))))))))))
(assert
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x809 (* ?x726 l_0_2_25)))
 (let ((?x1859 (- (* (* 2.0 l_0_2_1) l_0_2_4) ?x809)))
 (= ?x1859 0.0)))))
(assert
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x868 (* ?x726 l_0_2_28)))
 (let ((?x722 (* 2.0 l_0_2_1)))
 (let ((?x857 (* ?x722 l_0_2_7)))
 (= (- ?x857 ?x868) 0.0))))))
(assert
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x727 (* ?x726 l_0_2_32)))
 (let ((?x722 (* 2.0 l_0_2_1)))
 (let ((?x723 (* ?x722 l_0_2_11)))
 (= (- ?x723 ?x727) 0.0))))))
(assert
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x993 (* ?x726 l_0_2_37)))
 (let ((?x722 (* 2.0 l_0_2_1)))
 (let ((?x1877 (* ?x722 l_0_2_16)))
 (= (- ?x1877 ?x993) 0.0))))))
(assert
 (let ((?x1071 (* l_0_2_3 l_0_2_3)))
 (let ((?x1069 (* l_0_2_24 l_0_2_24)))
 (let ((?x1886 (+ (- (- (* l_0_2_2 l_0_2_2) (* l_0_2_23 l_0_2_23)) ?x1069) ?x1071)))
 (let ((?x1890 (- (- ?x1886 (* (* 2.0 l_0_2_67) l_0_2_79)) (* (* 2.0 l_0_2_68) l_0_2_80))))
 (= (- ?x1890 (* (* 2.0 l_0_2_69) l_0_2_81)) 0.0))))))
(assert
 (let ((?x1106 (* 2.0 l_0_2_3)))
 (let ((?x1107 (* ?x1106 l_0_2_5)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1104 (* ?x761 l_0_2_26)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1102 (* ?x758 l_0_2_25)))
 (let ((?x1924 (+ (- (- (* (* 2.0 l_0_2_2) l_0_2_4) ?x1102) ?x1104) ?x1107)))
 (= ?x1924 0.0)))))))))
(assert
 (let ((?x1106 (* 2.0 l_0_2_3)))
 (let ((?x1165 (* ?x1106 l_0_2_8)))
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x1472 (* ?x817 l_0_2_39)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x1470 (* ?x814 l_0_2_38)))
 (let ((?x811 (* 2.0 l_0_2_25)))
 (let ((?x1468 (* ?x811 l_0_2_37)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1162 (* ?x761 l_0_2_29)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1159 (* ?x758 l_0_2_28)))
 (let ((?x1156 (* 2.0 l_0_2_2)))
 (let ((?x1157 (* ?x1156 l_0_2_7)))
 (let ((?x1463 (* 2.0 l_0_2_18)))
 (let ((?x1464 (* ?x1463 l_0_2_6)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1461 (* ?x1278 l_0_2_5)))
 (let ((?x1456 (* 2.0 l_0_2_16)))
 (let ((?x1459 (* ?x1456 l_0_2_4)))
 (let ((?x1935 (+ (+ ?x1459 ?x1461) ?x1464)))
 (let ((?x1942 (+ (- (- (- (- (- (+ ?x1935 ?x1157) ?x1159) ?x1162) ?x1468) ?x1470) ?x1472) ?x1165)))
 (let ((?x1946 (+ (+ ?x1942 (* (* 2.0 l_0_2_46) l_0_2_58)) (* (* 2.0 l_0_2_47) l_0_2_59))))
 (= (+ ?x1946 (* (* 2.0 l_0_2_48) l_0_2_60)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1283 (* ?x761 l_0_2_38)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1281 (* ?x758 l_0_2_37)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1279 (* ?x1278 l_0_2_3)))
 (let ((?x1976 (- (- (+ (* (* 2.0 l_0_2_16) l_0_2_2) ?x1279) ?x1281) ?x1283)))
 (= ?x1976 0.0)))))))))
(assert
 (let ((?x1358 (* l_0_2_6 l_0_2_6)))
 (let ((?x1356 (* l_0_2_5 l_0_2_5)))
 (let ((?x1354 (* l_0_2_4 l_0_2_4)))
 (let ((?x1352 (* l_0_2_27 l_0_2_27)))
 (let ((?x1990 (+ (- (- (* (- l_0_2_25) l_0_2_25) (* l_0_2_26 l_0_2_26)) ?x1352) ?x1354)))
 (= (+ (+ ?x1990 ?x1356) ?x1358) 0.0)))))))
(assert
 (let ((?x1399 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x1396 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x1384 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x1380 (* ?x817 l_0_2_30)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x1377 (* ?x814 l_0_2_29)))
 (let ((?x2005 (+ (- (- (* (* (- 2.0) l_0_2_25) l_0_2_28) ?x1377) ?x1380) ?x1384)))
 (= (+ (+ ?x2005 ?x1396) ?x1399) 0.0))))))))))
(assert
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x818 (* ?x817 l_0_2_34)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x815 (* ?x814 l_0_2_33)))
 (let ((?x811 (* 2.0 l_0_2_25)))
 (let ((?x812 (* ?x811 l_0_2_32)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x807 (* ?x806 l_0_2_6)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x804 (* ?x753 l_0_2_5)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x802 (* ?x750 l_0_2_4)))
 (let ((?x1373 (+ (+ ?x802 ?x804) ?x807)))
 (= (- (- (- ?x1373 ?x812) ?x815) ?x818) 0.0)))))))))))))))
(assert
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x1472 (* ?x817 l_0_2_39)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x1470 (* ?x814 l_0_2_38)))
 (let ((?x811 (* 2.0 l_0_2_25)))
 (let ((?x1468 (* ?x811 l_0_2_37)))
 (let ((?x1463 (* 2.0 l_0_2_18)))
 (let ((?x1464 (* ?x1463 l_0_2_6)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1461 (* ?x1278 l_0_2_5)))
 (let ((?x1456 (* 2.0 l_0_2_16)))
 (let ((?x1459 (* ?x1456 l_0_2_4)))
 (let ((?x1935 (+ (+ ?x1459 ?x1461) ?x1464)))
 (= (- (- (- ?x1935 ?x1468) ?x1470) ?x1472) 0.0)))))))))))))))
(assert
 (let ((?x1538 (* l_0_2_9 l_0_2_9)))
 (let ((?x1536 (* l_0_2_8 l_0_2_8)))
 (let ((?x1534 (* l_0_2_7 l_0_2_7)))
 (let ((?x1520 (* l_0_2_31 l_0_2_31)))
 (let ((?x1517 (* l_0_2_30 l_0_2_30)))
 (let ((?x1514 (* l_0_2_29 l_0_2_29)))
 (let ((?x2044 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_28 l_0_2_28)) ?x1514) ?x1517)))
 (let ((?x2045 (- ?x2044 ?x1520)))
 (= (+ (+ (+ ?x2045 ?x1534) ?x1536) ?x1538) 0.0))))))))))
(assert
 (let ((?x880 (* 2.0 l_0_2_31)))
 (let ((?x881 (* ?x880 l_0_2_35)))
 (let ((?x877 (* 2.0 l_0_2_30)))
 (let ((?x878 (* ?x877 l_0_2_34)))
 (let ((?x874 (* 2.0 l_0_2_29)))
 (let ((?x875 (* ?x874 l_0_2_33)))
 (let ((?x871 (* 2.0 l_0_2_28)))
 (let ((?x872 (* ?x871 l_0_2_32)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x866 (* ?x806 l_0_2_9)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x864 (* ?x753 l_0_2_8)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x862 (* ?x750 l_0_2_7)))
 (let ((?x859 (* 2.0 l_0_2_10)))
 (let ((?x860 (* ?x859 l_0_2_14)))
 (let ((?x2069 (- (- (- (- (+ (+ (+ ?x860 ?x862) ?x864) ?x866) ?x872) ?x875) ?x878) ?x881)))
 (= ?x2069 0.0)))))))))))))))))))
(assert
 (let ((?x880 (* 2.0 l_0_2_31)))
 (let ((?x1655 (* ?x880 l_0_2_40)))
 (let ((?x877 (* 2.0 l_0_2_30)))
 (let ((?x1653 (* ?x877 l_0_2_39)))
 (let ((?x874 (* 2.0 l_0_2_29)))
 (let ((?x1651 (* ?x874 l_0_2_38)))
 (let ((?x871 (* 2.0 l_0_2_28)))
 (let ((?x1649 (* ?x871 l_0_2_37)))
 (let ((?x1463 (* 2.0 l_0_2_18)))
 (let ((?x1647 (* ?x1463 l_0_2_9)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1645 (* ?x1278 l_0_2_8)))
 (let ((?x1456 (* 2.0 l_0_2_16)))
 (let ((?x1643 (* ?x1456 l_0_2_7)))
 (let ((?x859 (* 2.0 l_0_2_10)))
 (let ((?x2081 (* ?x859 l_0_2_19)))
 (let ((?x2088 (- (- (- (- (+ (+ (+ ?x2081 ?x1643) ?x1645) ?x1647) ?x1649) ?x1651) ?x1653) ?x1655)))
 (= ?x2088 0.0)))))))))))))))))))
(assert
 (let ((?x954 (* l_0_2_36 l_0_2_36)))
 (let ((?x952 (* l_0_2_35 l_0_2_35)))
 (let ((?x950 (* l_0_2_34 l_0_2_34)))
 (let ((?x948 (* l_0_2_33 l_0_2_33)))
 (let ((?x946 (* l_0_2_32 l_0_2_32)))
 (let ((?x943 (* l_0_2_15 l_0_2_15)))
 (let ((?x941 (* l_0_2_14 l_0_2_14)))
 (let ((?x939 (* l_0_2_13 l_0_2_13)))
 (let ((?x2111 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x939) ?x941)))
 (= (- (- (- (- (- (+ ?x2111 ?x943) ?x946) ?x948) ?x950) ?x952) ?x954) 0.0)))))))))))
(assert
 (let ((?x1008 (* (* 2.0 l_0_2_36) l_0_2_41)))
 (let ((?x1005 (* (* 2.0 l_0_2_35) l_0_2_40)))
 (let ((?x1002 (* (* 2.0 l_0_2_34) l_0_2_39)))
 (let ((?x999 (* (* 2.0 l_0_2_33) l_0_2_38)))
 (let ((?x996 (* (* 2.0 l_0_2_32) l_0_2_37)))
 (let ((?x991 (* (* 2.0 l_0_2_15) l_0_2_20)))
 (let ((?x988 (* (* 2.0 l_0_2_14) l_0_2_19)))
 (let ((?x806 (* 2.0 l_0_2_13)))
 (let ((?x985 (* ?x806 l_0_2_18)))
 (let ((?x753 (* 2.0 l_0_2_12)))
 (let ((?x983 (* ?x753 l_0_2_17)))
 (let ((?x750 (* 2.0 l_0_2_11)))
 (let ((?x981 (* ?x750 l_0_2_16)))
 (let ((?x2135 (- (- (- (+ (+ (+ (+ ?x981 ?x983) ?x985) ?x988) ?x991) ?x996) ?x999) ?x1002)))
 (= (- (- ?x2135 ?x1005) ?x1008) 0.0))))))))))))))))
(assert
 (let ((?x1799 (* l_0_2_42 l_0_2_42)))
 (let ((?x1797 (* l_0_2_41 l_0_2_41)))
 (let ((?x1795 (* l_0_2_40 l_0_2_40)))
 (let ((?x1793 (* l_0_2_39 l_0_2_39)))
 (let ((?x1791 (* l_0_2_38 l_0_2_38)))
 (let ((?x1789 (* l_0_2_37 l_0_2_37)))
 (let ((?x1787 (* l_0_2_21 l_0_2_21)))
 (let ((?x1785 (* l_0_2_20 l_0_2_20)))
 (let ((?x1783 (* l_0_2_19 l_0_2_19)))
 (let ((?x1781 (* l_0_2_18 l_0_2_18)))
 (let ((?x2151 (+ (+ (+ (* l_0_2_16 l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x1781) ?x1783)))
 (let ((?x2158 (- (- (- (- (- (+ (+ ?x2151 ?x1785) ?x1787) ?x1789) ?x1791) ?x1793) ?x1795) ?x1797)))
 (let ((?x2159 (- ?x2158 ?x1799)))
 (= ?x2159 0.0)))))))))))))))
(assert
 (= (- (* l_0_2_1 l_0_2_1) (* l_0_2_22 l_0_2_22)) 0.0))
(assert
 (let ((?x2174 (* l_0_2_64 l_0_2_64)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x756 (* ?x726 l_0_2_23)))
 (let ((?x722 (* 2.0 l_0_2_1)))
 (let ((?x1832 (* ?x722 l_0_2_2)))
 (= (- (- ?x1832 ?x756) ?x2174) 0.0)))))))
(assert
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x809 (* ?x726 l_0_2_25)))
 (let ((?x1859 (- (* (* 2.0 l_0_2_1) l_0_2_4) ?x809)))
 (= ?x1859 0.0)))))
(assert
 (let ((?x2186 (* l_0_2_43 l_0_2_43)))
 (let ((?x729 (* l_0_2_22 l_0_2_22)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x868 (* ?x726 l_0_2_28)))
 (let ((?x2184 (- (+ (* (* 2.0 l_0_2_1) l_0_2_7) (* l_0_2_1 l_0_2_1)) ?x868)))
 (= (+ (- ?x2184 ?x729) ?x2186) 0.0)))))))
(assert
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x993 (* ?x726 l_0_2_37)))
 (let ((?x722 (* 2.0 l_0_2_1)))
 (let ((?x1877 (* ?x722 l_0_2_16)))
 (= (- ?x1877 ?x993) 0.0))))))
(assert
 (let ((?x1071 (* l_0_2_3 l_0_2_3)))
 (let ((?x1069 (* l_0_2_24 l_0_2_24)))
 (let ((?x1886 (+ (- (- (* l_0_2_2 l_0_2_2) (* l_0_2_23 l_0_2_23)) ?x1069) ?x1071)))
 (= (- ?x1886 (* (* 2.0 l_0_2_64) l_0_2_65)) 0.0)))))
(assert
 (let ((?x1106 (* 2.0 l_0_2_3)))
 (let ((?x1107 (* ?x1106 l_0_2_5)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1104 (* ?x761 l_0_2_26)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1102 (* ?x758 l_0_2_25)))
 (let ((?x1924 (+ (- (- (* (* 2.0 l_0_2_2) l_0_2_4) ?x1102) ?x1104) ?x1107)))
 (= (- ?x1924 (* (* 2.0 l_0_2_64) l_0_2_67)) 0.0)))))))))
(assert
 (let ((?x1106 (* 2.0 l_0_2_3)))
 (let ((?x1165 (* ?x1106 l_0_2_8)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1162 (* ?x761 l_0_2_29)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1159 (* ?x758 l_0_2_28)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x756 (* ?x726 l_0_2_23)))
 (let ((?x1156 (* 2.0 l_0_2_2)))
 (let ((?x1157 (* ?x1156 l_0_2_7)))
 (let ((?x722 (* 2.0 l_0_2_1)))
 (let ((?x1832 (* ?x722 l_0_2_2)))
 (let ((?x2223 (+ (+ (- (- (- (+ ?x1832 ?x1157) ?x756) ?x1159) ?x1162) ?x1165) (* (* 2.0 l_0_2_43) l_0_2_44))))
 (= (- ?x2223 (* (* 2.0 l_0_2_64) l_0_2_70)) 0.0)))))))))))))))
(assert
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1283 (* ?x761 l_0_2_38)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1281 (* ?x758 l_0_2_37)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1279 (* ?x1278 l_0_2_3)))
 (let ((?x1976 (- (- (+ (* (* 2.0 l_0_2_16) l_0_2_2) ?x1279) ?x1281) ?x1283)))
 (= (- ?x1976 (* (* 2.0 l_0_2_64) l_0_2_79)) 0.0)))))))))
(assert
 (let ((?x1358 (* l_0_2_6 l_0_2_6)))
 (let ((?x1356 (* l_0_2_5 l_0_2_5)))
 (let ((?x1354 (* l_0_2_4 l_0_2_4)))
 (let ((?x1352 (* l_0_2_27 l_0_2_27)))
 (let ((?x1990 (+ (- (- (* (- l_0_2_25) l_0_2_25) (* l_0_2_26 l_0_2_26)) ?x1352) ?x1354)))
 (= (+ (+ ?x1990 ?x1356) ?x1358) 0.0)))))))
(assert
 (let ((?x1399 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x1396 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x1384 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x1380 (* ?x817 l_0_2_30)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x1377 (* ?x814 l_0_2_29)))
 (let ((?x811 (* 2.0 l_0_2_25)))
 (let ((?x1374 (* ?x811 l_0_2_28)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x809 (* ?x726 l_0_2_25)))
 (let ((?x1859 (- (* (* 2.0 l_0_2_1) l_0_2_4) ?x809)))
 (let ((?x2259 (+ (+ (- (- (- ?x1859 ?x1374) ?x1377) ?x1380) ?x1384) (* (* 2.0 l_0_2_43) l_0_2_46))))
 (= (+ (+ ?x2259 ?x1396) ?x1399) 0.0)))))))))))))))
(assert
 (let ((?x1538 (* l_0_2_9 l_0_2_9)))
 (let ((?x1536 (* l_0_2_8 l_0_2_8)))
 (let ((?x1534 (* l_0_2_7 l_0_2_7)))
 (let ((?x1520 (* l_0_2_31 l_0_2_31)))
 (let ((?x1517 (* l_0_2_30 l_0_2_30)))
 (let ((?x1514 (* l_0_2_29 l_0_2_29)))
 (let ((?x1511 (* l_0_2_28 l_0_2_28)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x868 (* ?x726 l_0_2_28)))
 (let ((?x2275 (- (+ (* (* 2.0 l_0_2_1) l_0_2_7) (* l_0_2_10 l_0_2_10)) ?x868)))
 (let ((?x2281 (+ (- (- (- (- ?x2275 ?x1511) ?x1514) ?x1517) ?x1520) (* (* 2.0 l_0_2_43) l_0_2_49))))
 (= (+ (+ (+ ?x2281 ?x1534) ?x1536) ?x1538) 0.0)))))))))))))
(assert
 (let ((?x880 (* 2.0 l_0_2_31)))
 (let ((?x1655 (* ?x880 l_0_2_40)))
 (let ((?x877 (* 2.0 l_0_2_30)))
 (let ((?x1653 (* ?x877 l_0_2_39)))
 (let ((?x874 (* 2.0 l_0_2_29)))
 (let ((?x1651 (* ?x874 l_0_2_38)))
 (let ((?x871 (* 2.0 l_0_2_28)))
 (let ((?x1649 (* ?x871 l_0_2_37)))
 (let ((?x726 (* 2.0 l_0_2_22)))
 (let ((?x993 (* ?x726 l_0_2_37)))
 (let ((?x1463 (* 2.0 l_0_2_18)))
 (let ((?x1647 (* ?x1463 l_0_2_9)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1645 (* ?x1278 l_0_2_8)))
 (let ((?x1456 (* 2.0 l_0_2_16)))
 (let ((?x1643 (* ?x1456 l_0_2_7)))
 (let ((?x859 (* 2.0 l_0_2_10)))
 (let ((?x2081 (* ?x859 l_0_2_19)))
 (let ((?x722 (* 2.0 l_0_2_1)))
 (let ((?x1877 (* ?x722 l_0_2_16)))
 (let ((?x2307 (- (- (- (+ (+ (+ (+ ?x1877 ?x2081) ?x1643) ?x1645) ?x1647) ?x993) ?x1649) ?x1651)))
 (= (+ (- (- ?x2307 ?x1653) ?x1655) (* (* 2.0 l_0_2_43) l_0_2_58)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x1799 (* l_0_2_42 l_0_2_42)))
 (let ((?x1797 (* l_0_2_41 l_0_2_41)))
 (let ((?x1795 (* l_0_2_40 l_0_2_40)))
 (let ((?x1793 (* l_0_2_39 l_0_2_39)))
 (let ((?x1791 (* l_0_2_38 l_0_2_38)))
 (let ((?x1789 (* l_0_2_37 l_0_2_37)))
 (let ((?x1787 (* l_0_2_21 l_0_2_21)))
 (let ((?x1785 (* l_0_2_20 l_0_2_20)))
 (let ((?x1783 (* l_0_2_19 l_0_2_19)))
 (let ((?x1781 (* l_0_2_18 l_0_2_18)))
 (let ((?x2151 (+ (+ (+ (* l_0_2_16 l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x1781) ?x1783)))
 (let ((?x2158 (- (- (- (- (- (+ (+ ?x2151 ?x1785) ?x1787) ?x1789) ?x1791) ?x1793) ?x1795) ?x1797)))
 (let ((?x2159 (- ?x2158 ?x1799)))
 (= ?x2159 0.0)))))))))))))))
(assert
 (let ((?x2330 (* l_0_2_45 l_0_2_45)))
 (let ((?x2328 (* l_0_2_44 l_0_2_44)))
 (let ((?x1071 (* l_0_2_3 l_0_2_3)))
 (let ((?x1069 (* l_0_2_24 l_0_2_24)))
 (let ((?x1886 (+ (- (- (* l_0_2_2 l_0_2_2) (* l_0_2_23 l_0_2_23)) ?x1069) ?x1071)))
 (let ((?x2335 (- (- (+ (+ ?x1886 ?x2328) ?x2330) (* (* 2.0 l_0_2_65) l_0_2_70)) (* (* 2.0 l_0_2_66) l_0_2_71))))
 (= ?x2335 0.0))))))))
(assert
 (let ((?x1106 (* 2.0 l_0_2_3)))
 (let ((?x1107 (* ?x1106 l_0_2_5)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1104 (* ?x761 l_0_2_26)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1102 (* ?x758 l_0_2_25)))
 (let ((?x1924 (+ (- (- (* (* 2.0 l_0_2_2) l_0_2_4) ?x1102) ?x1104) ?x1107)))
 (let ((?x2357 (+ (+ ?x1924 (* (* 2.0 l_0_2_44) l_0_2_46)) (* (* 2.0 l_0_2_45) l_0_2_47))))
 (let ((?x2361 (- (- ?x2357 (* (* 2.0 l_0_2_67) l_0_2_70)) (* (* 2.0 l_0_2_68) l_0_2_71))))
 (= (- ?x2361 (* (* 2.0 l_0_2_69) l_0_2_72)) 0.0)))))))))))
(assert
 (let ((?x2402 (* l_0_2_73 l_0_2_73)))
 (let ((?x2400 (* l_0_2_72 l_0_2_72)))
 (let ((?x2398 (* l_0_2_71 l_0_2_71)))
 (let ((?x2396 (* l_0_2_70 l_0_2_70)))
 (let ((?x1106 (* 2.0 l_0_2_3)))
 (let ((?x1165 (* ?x1106 l_0_2_8)))
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1162 (* ?x761 l_0_2_29)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1159 (* ?x758 l_0_2_28)))
 (let ((?x1156 (* 2.0 l_0_2_2)))
 (let ((?x1157 (* ?x1156 l_0_2_7)))
 (let ((?x2393 (+ (+ (- (- ?x1157 ?x1159) ?x1162) ?x1165) (* (* 2.0 l_0_2_44) l_0_2_49))))
 (let ((?x2401 (- (- (- (+ ?x2393 (* (* 2.0 l_0_2_45) l_0_2_50)) ?x2396) ?x2398) ?x2400)))
 (= (- ?x2401 ?x2402) 0.0))))))))))))))))
(assert
 (let ((?x761 (* 2.0 l_0_2_24)))
 (let ((?x1283 (* ?x761 l_0_2_38)))
 (let ((?x758 (* 2.0 l_0_2_23)))
 (let ((?x1281 (* ?x758 l_0_2_37)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1279 (* ?x1278 l_0_2_3)))
 (let ((?x1976 (- (- (+ (* (* 2.0 l_0_2_16) l_0_2_2) ?x1279) ?x1281) ?x1283)))
 (let ((?x2430 (+ (+ ?x1976 (* (* 2.0 l_0_2_44) l_0_2_58)) (* (* 2.0 l_0_2_45) l_0_2_59))))
 (let ((?x2434 (- (- ?x2430 (* (* 2.0 l_0_2_70) l_0_2_79)) (* (* 2.0 l_0_2_71) l_0_2_80))))
 (let ((?x2438 (- (- ?x2434 (* (* 2.0 l_0_2_72) l_0_2_81)) (* (* 2.0 l_0_2_73) l_0_2_82))))
 (= ?x2438 0.0))))))))))))
(assert
 (let ((?x1358 (* l_0_2_6 l_0_2_6)))
 (let ((?x1356 (* l_0_2_5 l_0_2_5)))
 (let ((?x2474 (* l_0_2_48 l_0_2_48)))
 (let ((?x2472 (* l_0_2_47 l_0_2_47)))
 (let ((?x2470 (* l_0_2_46 l_0_2_46)))
 (let ((?x1354 (* l_0_2_4 l_0_2_4)))
 (let ((?x1352 (* l_0_2_27 l_0_2_27)))
 (let ((?x1990 (+ (- (- (* (- l_0_2_25) l_0_2_25) (* l_0_2_26 l_0_2_26)) ?x1352) ?x1354)))
 (= (+ (+ (+ (+ (+ ?x1990 ?x2470) ?x2472) ?x2474) ?x1356) ?x1358) 0.0))))))))))
(assert
 (let ((?x1399 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x1396 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x1384 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x817 (* 2.0 l_0_2_27)))
 (let ((?x1380 (* ?x817 l_0_2_30)))
 (let ((?x814 (* 2.0 l_0_2_26)))
 (let ((?x1377 (* ?x814 l_0_2_29)))
 (let ((?x2005 (+ (- (- (* (* (- 2.0) l_0_2_25) l_0_2_28) ?x1377) ?x1380) ?x1384)))
 (let ((?x2488 (+ (+ ?x2005 (* (* 2.0 l_0_2_46) l_0_2_49)) (* (* 2.0 l_0_2_47) l_0_2_50))))
 (= (+ (+ (+ ?x2488 (* (* 2.0 l_0_2_48) l_0_2_51)) ?x1396) ?x1399) 0.0)))))))))))
(assert
 (let ((?x1538 (* l_0_2_9 l_0_2_9)))
 (let ((?x1536 (* l_0_2_8 l_0_2_8)))
 (let ((?x1534 (* l_0_2_7 l_0_2_7)))
 (let ((?x2509 (* l_0_2_52 l_0_2_52)))
 (let ((?x2507 (* l_0_2_51 l_0_2_51)))
 (let ((?x2500 (* l_0_2_50 l_0_2_50)))
 (let ((?x2496 (* l_0_2_49 l_0_2_49)))
 (let ((?x1520 (* l_0_2_31 l_0_2_31)))
 (let ((?x1517 (* l_0_2_30 l_0_2_30)))
 (let ((?x1514 (* l_0_2_29 l_0_2_29)))
 (let ((?x2044 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_28 l_0_2_28)) ?x1514) ?x1517)))
 (let ((?x2045 (- ?x2044 ?x1520)))
 (let ((?x2513 (+ (+ (+ (+ (+ (+ (+ ?x2045 ?x2496) ?x2500) ?x2507) ?x2509) ?x1534) ?x1536) ?x1538)))
 (= ?x2513 0.0)))))))))))))))
(assert
 (let ((?x880 (* 2.0 l_0_2_31)))
 (let ((?x1655 (* ?x880 l_0_2_40)))
 (let ((?x877 (* 2.0 l_0_2_30)))
 (let ((?x1653 (* ?x877 l_0_2_39)))
 (let ((?x874 (* 2.0 l_0_2_29)))
 (let ((?x1651 (* ?x874 l_0_2_38)))
 (let ((?x871 (* 2.0 l_0_2_28)))
 (let ((?x1649 (* ?x871 l_0_2_37)))
 (let ((?x1463 (* 2.0 l_0_2_18)))
 (let ((?x1647 (* ?x1463 l_0_2_9)))
 (let ((?x1278 (* 2.0 l_0_2_17)))
 (let ((?x1645 (* ?x1278 l_0_2_8)))
 (let ((?x1456 (* 2.0 l_0_2_16)))
 (let ((?x1643 (* ?x1456 l_0_2_7)))
 (let ((?x859 (* 2.0 l_0_2_10)))
 (let ((?x2081 (* ?x859 l_0_2_19)))
 (let ((?x2088 (- (- (- (- (+ (+ (+ ?x2081 ?x1643) ?x1645) ?x1647) ?x1649) ?x1651) ?x1653) ?x1655)))
 (let ((?x2520 (+ (+ ?x2088 (* (* 2.0 l_0_2_49) l_0_2_58)) (* (* 2.0 l_0_2_50) l_0_2_59))))
 (let ((?x2524 (+ (+ ?x2520 (* (* 2.0 l_0_2_51) l_0_2_60)) (* (* 2.0 l_0_2_52) l_0_2_61))))
 (= ?x2524 0.0)))))))))))))))))))))
(assert
 (let ((?x2546 (* l_0_2_63 l_0_2_63)))
 (let ((?x2544 (* l_0_2_62 l_0_2_62)))
 (let ((?x2542 (* l_0_2_61 l_0_2_61)))
 (let ((?x2540 (* l_0_2_60 l_0_2_60)))
 (let ((?x2538 (* l_0_2_59 l_0_2_59)))
 (let ((?x2536 (* l_0_2_58 l_0_2_58)))
 (let ((?x1799 (* l_0_2_42 l_0_2_42)))
 (let ((?x1797 (* l_0_2_41 l_0_2_41)))
 (let ((?x1795 (* l_0_2_40 l_0_2_40)))
 (let ((?x1793 (* l_0_2_39 l_0_2_39)))
 (let ((?x1791 (* l_0_2_38 l_0_2_38)))
 (let ((?x1789 (* l_0_2_37 l_0_2_37)))
 (let ((?x1787 (* l_0_2_21 l_0_2_21)))
 (let ((?x1785 (* l_0_2_20 l_0_2_20)))
 (let ((?x1783 (* l_0_2_19 l_0_2_19)))
 (let ((?x1781 (* l_0_2_18 l_0_2_18)))
 (let ((?x2151 (+ (+ (+ (* l_0_2_16 l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x1781) ?x1783)))
 (let ((?x2158 (- (- (- (- (- (+ (+ ?x2151 ?x1785) ?x1787) ?x1789) ?x1791) ?x1793) ?x1795) ?x1797)))
 (let ((?x2159 (- ?x2158 ?x1799)))
 (= (+ (+ (+ (+ (+ (+ ?x2159 ?x2536) ?x2538) ?x2540) ?x2542) ?x2544) ?x2546) 0.0)))))))))))))))))))))
(assert
 (let ((?x2554 (- (* (* (- 2.0) l_0_2_65) l_0_2_67) (* (* 2.0 l_0_2_66) l_0_2_68))))
 (= ?x2554 0.0)))
(assert
 (let ((?x2569 (- (* (* (- 2.0) l_0_2_65) l_0_2_79) (* (* 2.0 l_0_2_66) l_0_2_80))))
 (= ?x2569 0.0)))
(assert
 (let ((?x2586 (* l_0_2_69 l_0_2_69)))
 (= (- (- (* (- l_0_2_67) l_0_2_67) (* l_0_2_68 l_0_2_68)) ?x2586) 0.0)))
(assert
 (let ((?x2610 (* l_0_2_84 l_0_2_84)))
 (let ((?x2608 (* l_0_2_83 l_0_2_83)))
 (let ((?x2606 (* l_0_2_82 l_0_2_82)))
 (let ((?x2604 (* l_0_2_81 l_0_2_81)))
 (let ((?x2607 (- (- (- (* (- l_0_2_79) l_0_2_79) (* l_0_2_80 l_0_2_80)) ?x2604) ?x2606)))
 (= (- (- ?x2607 ?x2608) ?x2610) 0.0)))))))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_10 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_22 0.0))
(assert
 (>= l_0_2_24 0.0))
(assert
 (>= l_0_2_27 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (>= l_0_2_42 0.0))
(assert
 (>= l_0_2_43 0.0))
(assert
 (>= l_0_2_45 0.0))
(assert
 (>= l_0_2_48 0.0))
(assert
 (>= l_0_2_52 0.0))
(assert
 (>= l_0_2_57 0.0))
(assert
 (>= l_0_2_63 0.0))
(assert
 (>= l_0_2_64 0.0))
(assert
 (>= l_0_2_66 0.0))
(assert
 (>= l_0_2_69 0.0))
(assert
 (>= l_0_2_73 0.0))
(assert
 (>= l_0_2_78 0.0))
(assert
 (>= l_0_2_84 0.0))
(assert
 (let ((?x2679 (* 2.0 l_0_3_87)))
 (let ((?x2680 (* ?x2679 l_0_3_96)))
 (let ((?x2676 (* 2.0 l_0_3_86)))
 (let ((?x2677 (* ?x2676 l_0_3_95)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2674 (* ?x2673 l_0_3_75)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2671 (* ?x2670 l_0_3_74)))
 (let ((?x2668 (* l_0_3_3 l_0_3_3)))
 (let ((?x2666 (* l_0_3_24 l_0_3_24)))
 (let ((?x2664 (* l_0_3_23 l_0_3_23)))
 (let ((?x2662 (* l_0_3_2 l_0_3_2)))
 (let ((?x2661 (- (* (* (- 2.0) l_0_3_107) l_0_3_116) (* (* 2.0 l_0_3_108) l_0_3_117))))
 (let ((?x2678 (- (+ (+ (- (+ (+ (- ?x2661 ?x2662) ?x2664) ?x2666) ?x2668) ?x2671) ?x2674) ?x2677)))
 (= (+ (- ?x2678 ?x2680) 1.0) 0.0))))))))))))))))
(assert
 (let ((?x2758 (* 2.0 l_0_3_69)))
 (let ((?x2759 (* ?x2758 l_0_3_81)))
 (let ((?x2755 (* 2.0 l_0_3_68)))
 (let ((?x2756 (* ?x2755 l_0_3_80)))
 (let ((?x2752 (* 2.0 l_0_3_67)))
 (let ((?x2753 (* ?x2752 l_0_3_79)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2750 (* ?x2673 l_0_3_80)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2748 (* ?x2670 l_0_3_79)))
 (let ((?x2668 (* l_0_3_3 l_0_3_3)))
 (let ((?x2666 (* l_0_3_24 l_0_3_24)))
 (let ((?x2664 (* l_0_3_23 l_0_3_23)))
 (let ((?x2662 (* l_0_3_2 l_0_3_2)))
 (let ((?x2732 (* 2.0 l_0_3_102)))
 (let ((?x2733 (* ?x2732 l_0_3_90)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x2730 (* ?x2727 l_0_3_89)))
 (let ((?x2728 (* ?x2727 l_0_3_87)))
 (let ((?x2716 (* 2.0 l_0_3_100)))
 (let ((?x2725 (* ?x2716 l_0_3_88)))
 (let ((?x2724 (* ?x2716 l_0_3_86)))
 (let ((?x2737 (- (- (- (+ (- ?x2724 ?x2725) ?x2728) ?x2730) ?x2733) (* (* 2.0 l_0_3_109) l_0_3_121))))
 (let ((?x2743 (- (- ?x2737 (* (* 2.0 l_0_3_110) l_0_3_122)) (* (* 2.0 l_0_3_111) l_0_3_123))))
 (let ((?x2754 (+ (- (- (+ (- (- (+ ?x2743 ?x2662) ?x2664) ?x2666) ?x2668) ?x2748) ?x2750) ?x2753)))
 (= (- (+ (+ ?x2754 ?x2756) ?x2759) 1.0) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x2850 (* l_0_3_87 l_0_3_87)))
 (let ((?x2679 (* 2.0 l_0_3_87)))
 (let ((?x2848 (* ?x2679 l_0_3_89)))
 (let ((?x2846 (* l_0_3_86 l_0_3_86)))
 (let ((?x2676 (* 2.0 l_0_3_86)))
 (let ((?x2844 (* ?x2676 l_0_3_88)))
 (let ((?x2842 (* l_0_3_66 l_0_3_66)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2840 (* ?x2673 l_0_3_68)))
 (let ((?x2838 (* l_0_3_65 l_0_3_65)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2836 (* ?x2670 l_0_3_67)))
 (let ((?x2835 (- (* (* (- 2.0) l_0_3_107) l_0_3_109) (* (* 2.0 l_0_3_108) l_0_3_110))))
 (let ((?x2849 (- (+ (- (- (+ (- (+ ?x2835 ?x2836) ?x2838) ?x2840) ?x2842) ?x2844) ?x2846) ?x2848)))
 (= (- (+ ?x2849 ?x2850) 1.0) 0.0))))))))))))))))
(assert
 (let ((?x2900 (* l_0_3_108 l_0_3_108)))
 (let ((?x2903 (+ (- (- (- _a_0_) (* l_0_3_107 l_0_3_107)) ?x2900) (* 1.0 (* l_0_3_65 l_0_3_65)))))
 (let ((?x2908 (- (+ ?x2903 (* 1.0 (* l_0_3_66 l_0_3_66))) (* (* 1.0 l_0_3_86) l_0_3_86))))
 (= (+ (- ?x2908 (* (* 1.0 l_0_3_87) l_0_3_87)) 1.0) 0.0)))))
(assert
 (let ((?x2679 (* 2.0 l_0_3_87)))
 (let ((?x2944 (* ?x2679 l_0_3_92)))
 (let ((?x2676 (* 2.0 l_0_3_86)))
 (let ((?x2942 (* ?x2676 l_0_3_91)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2940 (* ?x2673 l_0_3_71)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2938 (* ?x2670 l_0_3_70)))
 (let ((?x2936 (* l_0_3_45 l_0_3_45)))
 (let ((?x2934 (* l_0_3_44 l_0_3_44)))
 (let ((?x2668 (* l_0_3_3 l_0_3_3)))
 (let ((?x2666 (* l_0_3_24 l_0_3_24)))
 (let ((?x2664 (* l_0_3_23 l_0_3_23)))
 (let ((?x2662 (* l_0_3_2 l_0_3_2)))
 (let ((?x2929 (- (* (* (- 2.0) l_0_3_107) l_0_3_112) (* (* 2.0 l_0_3_108) l_0_3_113))))
 (let ((?x2939 (+ (- (- (+ (- (- (+ ?x2929 ?x2662) ?x2664) ?x2666) ?x2668) ?x2934) ?x2936) ?x2938)))
 (= (- (- (- (+ ?x2939 ?x2940) ?x2942) ?x2944) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x3001 (* ?x3000 l_0_3_95)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x2998 (* ?x2997 l_0_3_74)))
 (let ((?x2995 (* l_0_3_22 l_0_3_22)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x2993 (* ?x2992 l_0_3_32)))
 (let ((?x2994 (- (- (* (* 2.0 l_0_3_1) l_0_3_11) (* l_0_3_1 l_0_3_1)) ?x2993)))
 (= (- (+ (+ ?x2994 ?x2995) ?x2998) ?x3001) 0.0))))))))))
(assert
 (let ((?x2679 (* 2.0 l_0_3_87)))
 (let ((?x2680 (* ?x2679 l_0_3_96)))
 (let ((?x2676 (* 2.0 l_0_3_86)))
 (let ((?x2677 (* ?x2676 l_0_3_95)))
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x3001 (* ?x3000 l_0_3_95)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2674 (* ?x2673 l_0_3_75)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2671 (* ?x2670 l_0_3_74)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x2998 (* ?x2997 l_0_3_74)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3046 (* ?x3045 l_0_3_33)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3043 (* ?x3042 l_0_3_32)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3040 (* ?x2992 l_0_3_23)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3038 (* ?x3037 l_0_3_3)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3035 (* ?x3034 l_0_3_2)))
 (let ((?x3033 (- (* (* (- 2.0) l_0_3_1) l_0_3_2) (* (* 2.0 l_0_3_106) l_0_3_116))))
 (let ((?x3049 (+ (+ (- (- (+ (+ (+ ?x3033 ?x3035) ?x3038) ?x3040) ?x3043) ?x3046) ?x2998) ?x2671)))
 (= (- (- (- (+ ?x3049 ?x2674) ?x3001) ?x2677) ?x2680) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x3123 (* 2.0 l_0_3_90)))
 (let ((?x3124 (* ?x3123 l_0_3_97)))
 (let ((?x3120 (* 2.0 l_0_3_89)))
 (let ((?x3121 (* ?x3120 l_0_3_96)))
 (let ((?x3117 (* 2.0 l_0_3_88)))
 (let ((?x3118 (* ?x3117 l_0_3_95)))
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x3001 (* ?x3000 l_0_3_95)))
 (let ((?x2758 (* 2.0 l_0_3_69)))
 (let ((?x3114 (* ?x2758 l_0_3_76)))
 (let ((?x2755 (* 2.0 l_0_3_68)))
 (let ((?x3112 (* ?x2755 l_0_3_75)))
 (let ((?x2752 (* 2.0 l_0_3_67)))
 (let ((?x3110 (* ?x2752 l_0_3_74)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x2998 (* ?x2997 l_0_3_74)))
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x3107 (* ?x3106 l_0_3_34)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x3104 (* ?x3103 l_0_3_33)))
 (let ((?x3100 (* 2.0 l_0_3_25)))
 (let ((?x3101 (* ?x3100 l_0_3_32)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3098 (* ?x2992 l_0_3_25)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3096 (* ?x3095 l_0_3_6)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3093 (* ?x3037 l_0_3_5)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3091 (* ?x3034 l_0_3_4)))
 (let ((?x3099 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x3091) ?x3093) ?x3096) ?x3098)))
 (let ((?x3115 (+ (+ (+ (- (- (- (- ?x3099 ?x3101) ?x3104) ?x3107) ?x2998) ?x3110) ?x3112) ?x3114)))
 (= (- (- (- (+ ?x3115 ?x3001) ?x3118) ?x3121) ?x3124) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3245 (* (* 2.0 l_0_3_94) l_0_3_98)))
 (let ((?x3242 (* (* 2.0 l_0_3_93) l_0_3_97)))
 (let ((?x3239 (* (* 2.0 l_0_3_92) l_0_3_96)))
 (let ((?x3236 (* (* 2.0 l_0_3_91) l_0_3_95)))
 (let ((?x3232 (* 2.0 l_0_3_73)))
 (let ((?x3233 (* ?x3232 l_0_3_77)))
 (let ((?x3229 (* 2.0 l_0_3_72)))
 (let ((?x3230 (* ?x3229 l_0_3_76)))
 (let ((?x3226 (* 2.0 l_0_3_71)))
 (let ((?x3227 (* ?x3226 l_0_3_75)))
 (let ((?x3223 (* 2.0 l_0_3_70)))
 (let ((?x3224 (* ?x3223 l_0_3_74)))
 (let ((?x3217 (* 2.0 l_0_3_31)))
 (let ((?x3218 (* ?x3217 l_0_3_35)))
 (let ((?x3214 (* 2.0 l_0_3_30)))
 (let ((?x3215 (* ?x3214 l_0_3_34)))
 (let ((?x3211 (* 2.0 l_0_3_29)))
 (let ((?x3212 (* ?x3211 l_0_3_33)))
 (let ((?x3208 (* 2.0 l_0_3_28)))
 (let ((?x3209 (* ?x3208 l_0_3_32)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x2993 (* ?x2992 l_0_3_32)))
 (let ((?x3205 (* ?x2992 l_0_3_28)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3203 (* ?x3095 l_0_3_9)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3201 (* ?x3037 l_0_3_8)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3199 (* ?x3034 l_0_3_7)))
 (let ((?x3196 (* 2.0 l_0_3_10)))
 (let ((?x3197 (* ?x3196 l_0_3_14)))
 (let ((?x2988 (* 2.0 l_0_3_1)))
 (let ((?x3194 (* ?x2988 l_0_3_7)))
 (let ((?x2989 (* ?x2988 l_0_3_11)))
 (let ((?x3207 (- (+ (+ (+ (+ (+ (- ?x2989 ?x3194) ?x3197) ?x3199) ?x3201) ?x3203) ?x3205) ?x2993)))
 (let ((?x3222 (- (- (- (- (- ?x3207 ?x3209) ?x3212) ?x3215) ?x3218) (* (* 2.0 l_0_3_43) l_0_3_53))))
 (let ((?x3243 (- (- (- (+ (+ (+ (+ ?x3222 ?x3224) ?x3227) ?x3230) ?x3233) ?x3236) ?x3239) ?x3242)))
 (= (- ?x3243 ?x3245) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3371 (* l_0_3_99 l_0_3_99)))
 (let ((?x3369 (* l_0_3_98 l_0_3_98)))
 (let ((?x3367 (* l_0_3_97 l_0_3_97)))
 (let ((?x3365 (* l_0_3_96 l_0_3_96)))
 (let ((?x3363 (* l_0_3_95 l_0_3_95)))
 (let ((?x3361 (* l_0_3_78 l_0_3_78)))
 (let ((?x3359 (* l_0_3_77 l_0_3_77)))
 (let ((?x3357 (* l_0_3_76 l_0_3_76)))
 (let ((?x3355 (* l_0_3_75 l_0_3_75)))
 (let ((?x3353 (* l_0_3_74 l_0_3_74)))
 (let ((?x3351 (* l_0_3_36 l_0_3_36)))
 (let ((?x3349 (* l_0_3_35 l_0_3_35)))
 (let ((?x3347 (* l_0_3_34 l_0_3_34)))
 (let ((?x3345 (* l_0_3_33 l_0_3_33)))
 (let ((?x3343 (* l_0_3_32 l_0_3_32)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x2993 (* ?x2992 l_0_3_32)))
 (let ((?x3340 (* l_0_3_15 l_0_3_15)))
 (let ((?x3338 (* l_0_3_14 l_0_3_14)))
 (let ((?x3336 (* l_0_3_13 l_0_3_13)))
 (let ((?x3334 (* l_0_3_12 l_0_3_12)))
 (let ((?x3335 (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) (* l_0_3_11 l_0_3_11)) ?x3334)))
 (let ((?x3348 (- (- (- (+ (+ (+ (+ ?x3335 ?x3336) ?x3338) ?x3340) ?x2993) ?x3343) ?x3345) ?x3347)))
 (let ((?x3362 (+ (+ (+ (+ (+ (- (- ?x3348 ?x3349) ?x3351) ?x3353) ?x3355) ?x3357) ?x3359) ?x3361)))
 (= (- (- (- (- (- ?x3362 ?x3363) ?x3365) ?x3367) ?x3369) ?x3371) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x3473 (* (* 2.0 l_0_3_78) l_0_3_83)))
 (let ((?x3470 (* (* 2.0 l_0_3_77) l_0_3_82)))
 (let ((?x3467 (* (* 2.0 l_0_3_76) l_0_3_81)))
 (let ((?x3464 (* (* 2.0 l_0_3_75) l_0_3_80)))
 (let ((?x3461 (* (* 2.0 l_0_3_74) l_0_3_79)))
 (let ((?x3458 (* (* 2.0 l_0_3_36) l_0_3_41)))
 (let ((?x3455 (* (* 2.0 l_0_3_35) l_0_3_40)))
 (let ((?x3452 (* (* 2.0 l_0_3_34) l_0_3_39)))
 (let ((?x3449 (* (* 2.0 l_0_3_33) l_0_3_38)))
 (let ((?x3446 (* (* 2.0 l_0_3_32) l_0_3_37)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3443 (* ?x2992 l_0_3_37)))
 (let ((?x3441 (* (* 2.0 l_0_3_15) l_0_3_20)))
 (let ((?x3438 (* (* 2.0 l_0_3_14) l_0_3_19)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3435 (* ?x3095 l_0_3_18)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3433 (* ?x3037 l_0_3_17)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3431 (* ?x3034 l_0_3_16)))
 (let ((?x3429 (* (* 2.0 l_0_3_104) l_0_3_99)))
 (let ((?x3425 (* 2.0 l_0_3_103)))
 (let ((?x3426 (* ?x3425 l_0_3_98)))
 (let ((?x2732 (* 2.0 l_0_3_102)))
 (let ((?x3423 (* ?x2732 l_0_3_97)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x3421 (* ?x2727 l_0_3_96)))
 (let ((?x2716 (* 2.0 l_0_3_100)))
 (let ((?x3419 (* ?x2716 l_0_3_95)))
 (let ((?x3427 (- (- (- (- (* (* (- 2.0) l_0_3_1) l_0_3_16) ?x3419) ?x3421) ?x3423) ?x3426)))
 (let ((?x3444 (+ (+ (+ (+ (+ (+ (- ?x3427 ?x3429) ?x3431) ?x3433) ?x3435) ?x3438) ?x3441) ?x3443)))
 (let ((?x3465 (+ (+ (- (- (- (- (- ?x3444 ?x3446) ?x3449) ?x3452) ?x3455) ?x3458) ?x3461) ?x3464)))
 (= (+ (+ (+ ?x3465 ?x3467) ?x3470) ?x3473) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3123 (* 2.0 l_0_3_90)))
 (let ((?x3124 (* ?x3123 l_0_3_97)))
 (let ((?x3120 (* 2.0 l_0_3_89)))
 (let ((?x3121 (* ?x3120 l_0_3_96)))
 (let ((?x3117 (* 2.0 l_0_3_88)))
 (let ((?x3118 (* ?x3117 l_0_3_95)))
 (let ((?x2679 (* 2.0 l_0_3_87)))
 (let ((?x2680 (* ?x2679 l_0_3_96)))
 (let ((?x2676 (* 2.0 l_0_3_86)))
 (let ((?x2677 (* ?x2676 l_0_3_95)))
 (let ((?x2758 (* 2.0 l_0_3_69)))
 (let ((?x3114 (* ?x2758 l_0_3_76)))
 (let ((?x2755 (* 2.0 l_0_3_68)))
 (let ((?x3112 (* ?x2755 l_0_3_75)))
 (let ((?x2752 (* 2.0 l_0_3_67)))
 (let ((?x3110 (* ?x2752 l_0_3_74)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2674 (* ?x2673 l_0_3_75)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2671 (* ?x2670 l_0_3_74)))
 (let ((?x3583 (* 2.0 l_0_3_3)))
 (let ((?x3584 (* ?x3583 l_0_3_5)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3581 (* ?x3045 l_0_3_26)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3579 (* ?x3042 l_0_3_25)))
 (let ((?x3576 (* 2.0 l_0_3_2)))
 (let ((?x3577 (* ?x3576 l_0_3_4)))
 (let ((?x3558 (- (* (* (- 2.0) l_0_3_109) l_0_3_116) (* (* 2.0 l_0_3_110) l_0_3_117))))
 (let ((?x3582 (+ (+ (- (- ?x3558 (* (* 2.0 l_0_3_111) l_0_3_118)) ?x3577) ?x3579) ?x3581)))
 (let ((?x3591 (+ (+ (+ (+ (- (- (- ?x3582 ?x3584) ?x2671) ?x2674) ?x3110) ?x3112) ?x3114) ?x2677)))
 (= (- (- (- (+ ?x3591 ?x2680) ?x3118) ?x3121) ?x3124) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x3245 (* (* 2.0 l_0_3_94) l_0_3_98)))
 (let ((?x3242 (* (* 2.0 l_0_3_93) l_0_3_97)))
 (let ((?x3239 (* (* 2.0 l_0_3_92) l_0_3_96)))
 (let ((?x3236 (* (* 2.0 l_0_3_91) l_0_3_95)))
 (let ((?x3232 (* 2.0 l_0_3_73)))
 (let ((?x3233 (* ?x3232 l_0_3_77)))
 (let ((?x3229 (* 2.0 l_0_3_72)))
 (let ((?x3230 (* ?x3229 l_0_3_76)))
 (let ((?x3226 (* 2.0 l_0_3_71)))
 (let ((?x3227 (* ?x3226 l_0_3_75)))
 (let ((?x3223 (* 2.0 l_0_3_70)))
 (let ((?x3224 (* ?x3223 l_0_3_74)))
 (let ((?x3583 (* 2.0 l_0_3_3)))
 (let ((?x3667 (* ?x3583 l_0_3_8)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3046 (* ?x3045 l_0_3_33)))
 (let ((?x3664 (* ?x3045 l_0_3_29)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3043 (* ?x3042 l_0_3_32)))
 (let ((?x3661 (* ?x3042 l_0_3_28)))
 (let ((?x3576 (* 2.0 l_0_3_2)))
 (let ((?x3659 (* ?x3576 l_0_3_7)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3038 (* ?x3037 l_0_3_3)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3035 (* ?x3034 l_0_3_2)))
 (let ((?x3651 (- (- ?x3035 (* (* 2.0 l_0_3_112) l_0_3_116)) (* (* 2.0 l_0_3_113) l_0_3_117))))
 (let ((?x3657 (- (- ?x3651 (* (* 2.0 l_0_3_114) l_0_3_118)) (* (* 2.0 l_0_3_115) l_0_3_119))))
 (let ((?x3668 (- (- (+ (- (+ (- (+ ?x3657 ?x3038) ?x3659) ?x3661) ?x3043) ?x3664) ?x3046) ?x3667)))
 (let ((?x3674 (- (- ?x3668 (* (* 2.0 l_0_3_44) l_0_3_53)) (* (* 2.0 l_0_3_45) l_0_3_54))))
 (let ((?x3681 (- (- (- (+ (+ (+ (+ ?x3674 ?x3224) ?x3227) ?x3230) ?x3233) ?x3236) ?x3239) ?x3242)))
 (= (- ?x3681 ?x3245) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3046 (* ?x3045 l_0_3_33)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3043 (* ?x3042 l_0_3_32)))
 (let ((?x3764 (* l_0_3_120 l_0_3_120)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3038 (* ?x3037 l_0_3_3)))
 (let ((?x3761 (* l_0_3_119 l_0_3_119)))
 (let ((?x3759 (* l_0_3_118 l_0_3_118)))
 (let ((?x3757 (* l_0_3_117 l_0_3_117)))
 (let ((?x3758 (- (- (* (* (- 2.0) l_0_3_11) l_0_3_2) (* l_0_3_116 l_0_3_116)) ?x3757)))
 (let ((?x3769 (+ (+ (+ (- (- (- (- ?x3758 ?x3759) ?x3761) ?x3038) ?x3764) ?x3043) ?x3046) (* 1.0 (* l_0_3_74 l_0_3_74)))))
 (let ((?x3773 (+ (+ ?x3769 (* 1.0 (* l_0_3_75 l_0_3_75))) (* 1.0 (* l_0_3_76 l_0_3_76)))))
 (let ((?x3777 (+ (+ ?x3773 (* 1.0 (* l_0_3_77 l_0_3_77))) (* 1.0 (* l_0_3_78 l_0_3_78)))))
 (let ((?x3783 (- (- ?x3777 (* (* 1.0 l_0_3_95) l_0_3_95)) (* (* 1.0 l_0_3_96) l_0_3_96))))
 (let ((?x3789 (- (- ?x3783 (* (* 1.0 l_0_3_97) l_0_3_97)) (* (* 1.0 l_0_3_98) l_0_3_98))))
 (= (- ?x3789 (* (* 1.0 l_0_3_99) l_0_3_99)) 0.0))))))))))))))))))
(assert
 (let ((?x3473 (* (* 2.0 l_0_3_78) l_0_3_83)))
 (let ((?x3470 (* (* 2.0 l_0_3_77) l_0_3_82)))
 (let ((?x3467 (* (* 2.0 l_0_3_76) l_0_3_81)))
 (let ((?x3464 (* (* 2.0 l_0_3_75) l_0_3_80)))
 (let ((?x3461 (* (* 2.0 l_0_3_74) l_0_3_79)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3855 (* ?x3045 l_0_3_38)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3853 (* ?x3042 l_0_3_37)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x3851 (* ?x3850 l_0_3_3)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x3848 (* ?x3847 l_0_3_2)))
 (let ((?x3429 (* (* 2.0 l_0_3_104) l_0_3_99)))
 (let ((?x3425 (* 2.0 l_0_3_103)))
 (let ((?x3426 (* ?x3425 l_0_3_98)))
 (let ((?x2732 (* 2.0 l_0_3_102)))
 (let ((?x3423 (* ?x2732 l_0_3_97)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x3421 (* ?x2727 l_0_3_96)))
 (let ((?x3831 (- (- (- (- (* (* (- 2.0) l_0_3_100) l_0_3_95) ?x3421) ?x3423) ?x3426) ?x3429)))
 (let ((?x3837 (- (- ?x3831 (* (* 2.0 l_0_3_116) l_0_3_121)) (* (* 2.0 l_0_3_117) l_0_3_122))))
 (let ((?x3843 (- (- ?x3837 (* (* 2.0 l_0_3_118) l_0_3_123)) (* (* 2.0 l_0_3_119) l_0_3_124))))
 (let ((?x3854 (+ (- (- (- ?x3843 (* (* 2.0 l_0_3_120) l_0_3_125)) ?x3848) ?x3851) ?x3853)))
 (= (+ (+ (+ (+ (+ (+ ?x3854 ?x3855) ?x3461) ?x3464) ?x3467) ?x3470) ?x3473) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x3123 (* 2.0 l_0_3_90)))
 (let ((?x3124 (* ?x3123 l_0_3_97)))
 (let ((?x3120 (* 2.0 l_0_3_89)))
 (let ((?x3121 (* ?x3120 l_0_3_96)))
 (let ((?x3117 (* 2.0 l_0_3_88)))
 (let ((?x3118 (* ?x3117 l_0_3_95)))
 (let ((?x2758 (* 2.0 l_0_3_69)))
 (let ((?x3114 (* ?x2758 l_0_3_76)))
 (let ((?x2755 (* 2.0 l_0_3_68)))
 (let ((?x3112 (* ?x2755 l_0_3_75)))
 (let ((?x2752 (* 2.0 l_0_3_67)))
 (let ((?x3110 (* ?x2752 l_0_3_74)))
 (let ((?x3933 (* l_0_3_6 l_0_3_6)))
 (let ((?x3931 (* l_0_3_5 l_0_3_5)))
 (let ((?x3929 (* l_0_3_4 l_0_3_4)))
 (let ((?x3927 (* l_0_3_27 l_0_3_27)))
 (let ((?x3930 (- (+ (+ (* l_0_3_25 l_0_3_25) (* l_0_3_26 l_0_3_26)) ?x3927) ?x3929)))
 (let ((?x3939 (+ (+ (- (- (- (- (- ?x3930 ?x3931) ?x3933) ?x3110) ?x3112) ?x3114) ?x3118) ?x3121)))
 (= (+ ?x3939 ?x3124) 0.0))))))))))))))))))))
(assert
 (let ((?x3245 (* (* 2.0 l_0_3_94) l_0_3_98)))
 (let ((?x3242 (* (* 2.0 l_0_3_93) l_0_3_97)))
 (let ((?x3239 (* (* 2.0 l_0_3_92) l_0_3_96)))
 (let ((?x3236 (* (* 2.0 l_0_3_91) l_0_3_95)))
 (let ((?x3232 (* 2.0 l_0_3_73)))
 (let ((?x3233 (* ?x3232 l_0_3_77)))
 (let ((?x3229 (* 2.0 l_0_3_72)))
 (let ((?x3230 (* ?x3229 l_0_3_76)))
 (let ((?x3226 (* 2.0 l_0_3_71)))
 (let ((?x3227 (* ?x3226 l_0_3_75)))
 (let ((?x3223 (* 2.0 l_0_3_70)))
 (let ((?x3224 (* ?x3223 l_0_3_74)))
 (let ((?x3993 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3990 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3978 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x3107 (* ?x3106 l_0_3_34)))
 (let ((?x3974 (* ?x3106 l_0_3_30)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x3104 (* ?x3103 l_0_3_33)))
 (let ((?x3971 (* ?x3103 l_0_3_29)))
 (let ((?x3100 (* 2.0 l_0_3_25)))
 (let ((?x3101 (* ?x3100 l_0_3_32)))
 (let ((?x3968 (* ?x3100 l_0_3_28)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3096 (* ?x3095 l_0_3_6)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3093 (* ?x3037 l_0_3_5)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3091 (* ?x3034 l_0_3_4)))
 (let ((?x3967 (+ (+ ?x3091 ?x3093) ?x3096)))
 (let ((?x3979 (- (- (+ (- (+ (- (+ ?x3967 ?x3968) ?x3101) ?x3971) ?x3104) ?x3974) ?x3107) ?x3978)))
 (let ((?x3985 (- (- ?x3979 (* (* 2.0 l_0_3_46) l_0_3_53)) (* (* 2.0 l_0_3_47) l_0_3_54))))
 (let ((?x3995 (- (- (- (- ?x3985 (* (* 2.0 l_0_3_48) l_0_3_55)) ?x3990) ?x3993) ?x3224)))
 (let ((?x4002 (+ (+ (+ (+ (- (- (- ?x3995 ?x3227) ?x3230) ?x3233) ?x3236) ?x3239) ?x3242) ?x3245)))
 (= ?x4002 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3371 (* l_0_3_99 l_0_3_99)))
 (let ((?x3369 (* l_0_3_98 l_0_3_98)))
 (let ((?x3367 (* l_0_3_97 l_0_3_97)))
 (let ((?x3365 (* l_0_3_96 l_0_3_96)))
 (let ((?x3363 (* l_0_3_95 l_0_3_95)))
 (let ((?x3361 (* l_0_3_78 l_0_3_78)))
 (let ((?x3359 (* l_0_3_77 l_0_3_77)))
 (let ((?x3357 (* l_0_3_76 l_0_3_76)))
 (let ((?x3355 (* l_0_3_75 l_0_3_75)))
 (let ((?x3353 (* l_0_3_74 l_0_3_74)))
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x3107 (* ?x3106 l_0_3_34)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x3104 (* ?x3103 l_0_3_33)))
 (let ((?x3100 (* 2.0 l_0_3_25)))
 (let ((?x3101 (* ?x3100 l_0_3_32)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3096 (* ?x3095 l_0_3_6)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3093 (* ?x3037 l_0_3_5)))
 (let ((?x4077 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x3093) ?x3096) ?x3101) ?x3104)))
 (let ((?x4084 (+ (- (- (- (- (- (+ ?x4077 ?x3107) ?x3353) ?x3355) ?x3357) ?x3359) ?x3361) ?x3363)))
 (= (+ (+ (+ (+ ?x4084 ?x3365) ?x3367) ?x3369) ?x3371) 0.0))))))))))))))))))))))))
(assert
 (let ((?x3473 (* (* 2.0 l_0_3_78) l_0_3_83)))
 (let ((?x3470 (* (* 2.0 l_0_3_77) l_0_3_82)))
 (let ((?x3467 (* (* 2.0 l_0_3_76) l_0_3_81)))
 (let ((?x3464 (* (* 2.0 l_0_3_75) l_0_3_80)))
 (let ((?x3461 (* (* 2.0 l_0_3_74) l_0_3_79)))
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x4128 (* ?x3106 l_0_3_39)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x4126 (* ?x3103 l_0_3_38)))
 (let ((?x3100 (* 2.0 l_0_3_25)))
 (let ((?x4124 (* ?x3100 l_0_3_37)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3046 (* ?x3045 l_0_3_33)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3043 (* ?x3042 l_0_3_32)))
 (let ((?x4119 (* 2.0 l_0_3_18)))
 (let ((?x4120 (* ?x4119 l_0_3_6)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x4117 (* ?x3850 l_0_3_5)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x4115 (* ?x3847 l_0_3_4)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3038 (* ?x3037 l_0_3_3)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3035 (* ?x3034 l_0_3_2)))
 (let ((?x3429 (* (* 2.0 l_0_3_104) l_0_3_99)))
 (let ((?x3425 (* 2.0 l_0_3_103)))
 (let ((?x3426 (* ?x3425 l_0_3_98)))
 (let ((?x2732 (* 2.0 l_0_3_102)))
 (let ((?x3423 (* ?x2732 l_0_3_97)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x3421 (* ?x2727 l_0_3_96)))
 (let ((?x2716 (* 2.0 l_0_3_100)))
 (let ((?x3419 (* ?x2716 l_0_3_95)))
 (let ((?x4116 (- (+ (+ (+ (+ (+ (+ ?x3419 ?x3421) ?x3423) ?x3426) ?x3429) ?x3035) ?x3038) ?x4115)))
 (let ((?x4129 (+ (+ (+ (- (- (- (- ?x4116 ?x4117) ?x4120) ?x3043) ?x3046) ?x4124) ?x4126) ?x4128)))
 (= (- (- (- (- (- ?x4129 ?x3461) ?x3464) ?x3467) ?x3470) ?x3473) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4215 (* l_0_3_9 l_0_3_9)))
 (let ((?x4213 (* l_0_3_8 l_0_3_8)))
 (let ((?x4211 (* l_0_3_7 l_0_3_7)))
 (let ((?x4197 (* l_0_3_31 l_0_3_31)))
 (let ((?x3217 (* 2.0 l_0_3_31)))
 (let ((?x3218 (* ?x3217 l_0_3_35)))
 (let ((?x4194 (* l_0_3_30 l_0_3_30)))
 (let ((?x3214 (* 2.0 l_0_3_30)))
 (let ((?x3215 (* ?x3214 l_0_3_34)))
 (let ((?x4191 (* l_0_3_29 l_0_3_29)))
 (let ((?x3211 (* 2.0 l_0_3_29)))
 (let ((?x3212 (* ?x3211 l_0_3_33)))
 (let ((?x4188 (* l_0_3_28 l_0_3_28)))
 (let ((?x3208 (* 2.0 l_0_3_28)))
 (let ((?x3209 (* ?x3208 l_0_3_32)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3203 (* ?x3095 l_0_3_9)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3201 (* ?x3037 l_0_3_8)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3199 (* ?x3034 l_0_3_7)))
 (let ((?x4184 (+ (- (* (* 2.0 l_0_3_10) l_0_3_14) (* l_0_3_10 l_0_3_10)) ?x3199)))
 (let ((?x4193 (- (+ (- (+ (- (+ (+ ?x4184 ?x3201) ?x3203) ?x3209) ?x4188) ?x3212) ?x4191) ?x3215)))
 (let ((?x4201 (- (+ (- (+ ?x4193 ?x4194) ?x3218) ?x4197) (* (* 2.0 l_0_3_49) l_0_3_53))))
 (let ((?x4207 (- (- ?x4201 (* (* 2.0 l_0_3_50) l_0_3_54)) (* (* 2.0 l_0_3_51) l_0_3_55))))
 (let ((?x4216 (- (- (- (- ?x4207 (* (* 2.0 l_0_3_52) l_0_3_56)) ?x4211) ?x4213) ?x4215)))
 (= ?x4216 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4294 (* l_0_3_57 l_0_3_57)))
 (let ((?x4292 (* l_0_3_56 l_0_3_56)))
 (let ((?x4290 (* l_0_3_55 l_0_3_55)))
 (let ((?x4288 (* l_0_3_54 l_0_3_54)))
 (let ((?x4286 (* l_0_3_53 l_0_3_53)))
 (let ((?x3351 (* l_0_3_36 l_0_3_36)))
 (let ((?x3349 (* l_0_3_35 l_0_3_35)))
 (let ((?x3347 (* l_0_3_34 l_0_3_34)))
 (let ((?x3345 (* l_0_3_33 l_0_3_33)))
 (let ((?x3343 (* l_0_3_32 l_0_3_32)))
 (let ((?x3217 (* 2.0 l_0_3_31)))
 (let ((?x3218 (* ?x3217 l_0_3_35)))
 (let ((?x3214 (* 2.0 l_0_3_30)))
 (let ((?x3215 (* ?x3214 l_0_3_34)))
 (let ((?x3211 (* 2.0 l_0_3_29)))
 (let ((?x3212 (* ?x3211 l_0_3_33)))
 (let ((?x3208 (* 2.0 l_0_3_28)))
 (let ((?x3209 (* ?x3208 l_0_3_32)))
 (let ((?x3340 (* l_0_3_15 l_0_3_15)))
 (let ((?x3338 (* l_0_3_14 l_0_3_14)))
 (let ((?x3336 (* l_0_3_13 l_0_3_13)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3203 (* ?x3095 l_0_3_9)))
 (let ((?x3334 (* l_0_3_12 l_0_3_12)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3201 (* ?x3037 l_0_3_8)))
 (let ((?x3332 (* l_0_3_11 l_0_3_11)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3199 (* ?x3034 l_0_3_7)))
 (let ((?x4272 (+ (- (+ (- (* (* (- 2.0) l_0_3_10) l_0_3_14) ?x3199) ?x3332) ?x3201) ?x3334)))
 (let ((?x4279 (+ (+ (+ (+ (+ (+ (- ?x4272 ?x3203) ?x3336) ?x3338) ?x3340) ?x3209) ?x3212) ?x3215)))
 (let ((?x4287 (- (- (- (- (- (- (+ ?x4279 ?x3218) ?x3343) ?x3345) ?x3347) ?x3349) ?x3351) ?x4286)))
 (= (- (- (- (- ?x4287 ?x4288) ?x4290) ?x4292) ?x4294) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3458 (* (* 2.0 l_0_3_36) l_0_3_41)))
 (let ((?x3455 (* (* 2.0 l_0_3_35) l_0_3_40)))
 (let ((?x3452 (* (* 2.0 l_0_3_34) l_0_3_39)))
 (let ((?x3449 (* (* 2.0 l_0_3_33) l_0_3_38)))
 (let ((?x3446 (* (* 2.0 l_0_3_32) l_0_3_37)))
 (let ((?x3217 (* 2.0 l_0_3_31)))
 (let ((?x4358 (* ?x3217 l_0_3_40)))
 (let ((?x3214 (* 2.0 l_0_3_30)))
 (let ((?x4356 (* ?x3214 l_0_3_39)))
 (let ((?x3211 (* 2.0 l_0_3_29)))
 (let ((?x4354 (* ?x3211 l_0_3_38)))
 (let ((?x3208 (* 2.0 l_0_3_28)))
 (let ((?x4352 (* ?x3208 l_0_3_37)))
 (let ((?x4119 (* 2.0 l_0_3_18)))
 (let ((?x4350 (* ?x4119 l_0_3_9)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x4348 (* ?x3850 l_0_3_8)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x4346 (* ?x3847 l_0_3_7)))
 (let ((?x3441 (* (* 2.0 l_0_3_15) l_0_3_20)))
 (let ((?x3438 (* (* 2.0 l_0_3_14) l_0_3_19)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3435 (* ?x3095 l_0_3_18)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3433 (* ?x3037 l_0_3_17)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3431 (* ?x3034 l_0_3_16)))
 (let ((?x4344 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_10) l_0_3_19) ?x3431) ?x3433) ?x3435) ?x3438)))
 (let ((?x4357 (+ (+ (+ (- (- (- (+ ?x4344 ?x3441) ?x4346) ?x4348) ?x4350) ?x4352) ?x4354) ?x4356)))
 (let ((?x4367 (- (- (- (- (- (- (+ ?x4357 ?x4358) ?x3446) ?x3449) ?x3452) ?x3455) ?x3458) (* (* 2.0 l_0_3_53) l_0_3_58))))
 (let ((?x4373 (- (- ?x4367 (* (* 2.0 l_0_3_54) l_0_3_59)) (* (* 2.0 l_0_3_55) l_0_3_60))))
 (let ((?x4379 (- (- ?x4373 (* (* 2.0 l_0_3_56) l_0_3_61)) (* (* 2.0 l_0_3_57) l_0_3_62))))
 (= ?x4379 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3351 (* l_0_3_36 l_0_3_36)))
 (let ((?x3349 (* l_0_3_35 l_0_3_35)))
 (let ((?x3347 (* l_0_3_34 l_0_3_34)))
 (let ((?x3345 (* l_0_3_33 l_0_3_33)))
 (let ((?x3343 (* l_0_3_32 l_0_3_32)))
 (let ((?x3340 (* l_0_3_15 l_0_3_15)))
 (let ((?x3338 (* l_0_3_14 l_0_3_14)))
 (let ((?x3336 (* l_0_3_13 l_0_3_13)))
 (let ((?x4456 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3336) ?x3338)))
 (= (+ (+ (+ (+ (+ (- ?x4456 ?x3340) ?x3343) ?x3345) ?x3347) ?x3349) ?x3351) 0.0)))))))))))
(assert
 (let ((?x3458 (* (* 2.0 l_0_3_36) l_0_3_41)))
 (let ((?x3455 (* (* 2.0 l_0_3_35) l_0_3_40)))
 (let ((?x3452 (* (* 2.0 l_0_3_34) l_0_3_39)))
 (let ((?x3449 (* (* 2.0 l_0_3_33) l_0_3_38)))
 (let ((?x3446 (* (* 2.0 l_0_3_32) l_0_3_37)))
 (let ((?x3441 (* (* 2.0 l_0_3_15) l_0_3_20)))
 (let ((?x3438 (* (* 2.0 l_0_3_14) l_0_3_19)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3435 (* ?x3095 l_0_3_18)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3433 (* ?x3037 l_0_3_17)))
 (let ((?x4478 (- (- (- (- (* (* (- 2.0) l_0_3_11) l_0_3_16) ?x3433) ?x3435) ?x3438) ?x3441)))
 (= (+ (+ (+ (+ (+ ?x4478 ?x3446) ?x3449) ?x3452) ?x3455) ?x3458) 0.0))))))))))))))
(assert
 (let ((?x4521 (* l_0_3_42 l_0_3_42)))
 (let ((?x4519 (* l_0_3_41 l_0_3_41)))
 (let ((?x4517 (* l_0_3_40 l_0_3_40)))
 (let ((?x4515 (* l_0_3_39 l_0_3_39)))
 (let ((?x4513 (* l_0_3_38 l_0_3_38)))
 (let ((?x4511 (* l_0_3_37 l_0_3_37)))
 (let ((?x4509 (* l_0_3_21 l_0_3_21)))
 (let ((?x4507 (* l_0_3_20 l_0_3_20)))
 (let ((?x4505 (* l_0_3_19 l_0_3_19)))
 (let ((?x4503 (* l_0_3_18 l_0_3_18)))
 (let ((?x4506 (- (- (- (* (- l_0_3_16) l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x4503) ?x4505)))
 (let ((?x4520 (+ (+ (+ (+ (+ (- (- ?x4506 ?x4507) ?x4509) ?x4511) ?x4513) ?x4515) ?x4517) ?x4519)))
 (= (+ ?x4520 ?x4521) 0.0))))))))))))))
(assert
 (let ((?x2995 (* l_0_3_22 l_0_3_22)))
 (let ((?x2990 (* l_0_3_1 l_0_3_1)))
 (let ((?x4542 (- ?x2990 ?x2995)))
 (= ?x4542 0.0)))))
(assert
 (let ((?x2758 (* 2.0 l_0_3_69)))
 (let ((?x2759 (* ?x2758 l_0_3_81)))
 (let ((?x2755 (* 2.0 l_0_3_68)))
 (let ((?x2756 (* ?x2755 l_0_3_80)))
 (let ((?x2752 (* 2.0 l_0_3_67)))
 (let ((?x2753 (* ?x2752 l_0_3_79)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x4567 (* ?x2997 l_0_3_79)))
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x4128 (* ?x3106 l_0_3_39)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x4126 (* ?x3103 l_0_3_38)))
 (let ((?x3100 (* 2.0 l_0_3_25)))
 (let ((?x4124 (* ?x3100 l_0_3_37)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3040 (* ?x2992 l_0_3_23)))
 (let ((?x4119 (* 2.0 l_0_3_18)))
 (let ((?x4120 (* ?x4119 l_0_3_6)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x4117 (* ?x3850 l_0_3_5)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x4115 (* ?x3847 l_0_3_4)))
 (let ((?x2732 (* 2.0 l_0_3_102)))
 (let ((?x2733 (* ?x2732 l_0_3_90)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x2730 (* ?x2727 l_0_3_89)))
 (let ((?x2716 (* 2.0 l_0_3_100)))
 (let ((?x2725 (* ?x2716 l_0_3_88)))
 (let ((?x4558 (- (- (+ (* (* 2.0 l_0_3_1) l_0_3_2) (* ?x2716 l_0_3_85)) ?x2725) ?x2730)))
 (let ((?x4565 (- (- (- (+ (+ (+ (- ?x4558 ?x2733) ?x4115) ?x4117) ?x4120) ?x3040) ?x4124) ?x4126)))
 (= (+ (+ (+ (- (- ?x4565 ?x4128) ?x4567) ?x2753) ?x2756) ?x2759) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3098 (* ?x2992 l_0_3_25)))
 (let ((?x4613 (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x3098)))
 (= ?x4613 0.0)))))
(assert
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3205 (* ?x2992 l_0_3_28)))
 (let ((?x2988 (* 2.0 l_0_3_1)))
 (let ((?x3194 (* ?x2988 l_0_3_7)))
 (= (- ?x3194 ?x3205) 0.0))))))
(assert
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x2993 (* ?x2992 l_0_3_32)))
 (let ((?x2988 (* 2.0 l_0_3_1)))
 (let ((?x2989 (* ?x2988 l_0_3_11)))
 (= (- ?x2989 ?x2993) 0.0))))))
(assert
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3443 (* ?x2992 l_0_3_37)))
 (let ((?x2988 (* 2.0 l_0_3_1)))
 (let ((?x4631 (* ?x2988 l_0_3_16)))
 (= (- ?x4631 ?x3443) 0.0))))))
(assert
 (let ((?x2758 (* 2.0 l_0_3_69)))
 (let ((?x2759 (* ?x2758 l_0_3_81)))
 (let ((?x2755 (* 2.0 l_0_3_68)))
 (let ((?x2756 (* ?x2755 l_0_3_80)))
 (let ((?x2752 (* 2.0 l_0_3_67)))
 (let ((?x2753 (* ?x2752 l_0_3_79)))
 (let ((?x3583 (* 2.0 l_0_3_3)))
 (let ((?x3584 (* ?x3583 l_0_3_5)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3581 (* ?x3045 l_0_3_26)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3579 (* ?x3042 l_0_3_25)))
 (let ((?x3576 (* 2.0 l_0_3_2)))
 (let ((?x3577 (* ?x3576 l_0_3_4)))
 (let ((?x2732 (* 2.0 l_0_3_102)))
 (let ((?x2733 (* ?x2732 l_0_3_90)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x2730 (* ?x2727 l_0_3_89)))
 (let ((?x2716 (* 2.0 l_0_3_100)))
 (let ((?x2725 (* ?x2716 l_0_3_88)))
 (let ((?x4644 (- (+ (- (- (+ (+ (+ ?x2725 ?x2730) ?x2733) ?x3577) ?x3579) ?x3581) ?x3584) ?x2753)))
 (= (- (- ?x4644 ?x2756) ?x2759) 0.0)))))))))))))))))))))))
(assert
 (let ((?x3232 (* 2.0 l_0_3_73)))
 (let ((?x4695 (* ?x3232 l_0_3_82)))
 (let ((?x3229 (* 2.0 l_0_3_72)))
 (let ((?x4693 (* ?x3229 l_0_3_81)))
 (let ((?x3226 (* 2.0 l_0_3_71)))
 (let ((?x4691 (* ?x3226 l_0_3_80)))
 (let ((?x3223 (* 2.0 l_0_3_70)))
 (let ((?x4689 (* ?x3223 l_0_3_79)))
 (let ((?x3583 (* 2.0 l_0_3_3)))
 (let ((?x3667 (* ?x3583 l_0_3_8)))
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x4128 (* ?x3106 l_0_3_39)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x4126 (* ?x3103 l_0_3_38)))
 (let ((?x3100 (* 2.0 l_0_3_25)))
 (let ((?x4124 (* ?x3100 l_0_3_37)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3664 (* ?x3045 l_0_3_29)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3661 (* ?x3042 l_0_3_28)))
 (let ((?x3576 (* 2.0 l_0_3_2)))
 (let ((?x3659 (* ?x3576 l_0_3_7)))
 (let ((?x4119 (* 2.0 l_0_3_18)))
 (let ((?x4120 (* ?x4119 l_0_3_6)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x4117 (* ?x3850 l_0_3_5)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x4115 (* ?x3847 l_0_3_4)))
 (let ((?x3425 (* 2.0 l_0_3_103)))
 (let ((?x4671 (* ?x3425 l_0_3_94)))
 (let ((?x2732 (* 2.0 l_0_3_102)))
 (let ((?x4669 (* ?x2732 l_0_3_93)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x4667 (* ?x2727 l_0_3_92)))
 (let ((?x2716 (* 2.0 l_0_3_100)))
 (let ((?x4666 (* ?x2716 l_0_3_91)))
 (let ((?x4676 (+ (+ (+ (+ (+ (+ (+ ?x4666 ?x4667) ?x4669) ?x4671) ?x4115) ?x4117) ?x4120) ?x3659)))
 (let ((?x4684 (- (+ (- (- (- (- (- ?x4676 ?x3661) ?x3664) ?x4124) ?x4126) ?x4128) ?x3667) (* (* 2.0 l_0_3_46) l_0_3_58))))
 (let ((?x4688 (- (- ?x4684 (* (* 2.0 l_0_3_47) l_0_3_59)) (* (* 2.0 l_0_3_48) l_0_3_60))))
 (= (- (- (- (- ?x4688 ?x4689) ?x4691) ?x4693) ?x4695) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4790 (* l_0_3_84 l_0_3_84)))
 (let ((?x4788 (* l_0_3_83 l_0_3_83)))
 (let ((?x4786 (* l_0_3_82 l_0_3_82)))
 (let ((?x4784 (* l_0_3_81 l_0_3_81)))
 (let ((?x4782 (* l_0_3_80 l_0_3_80)))
 (let ((?x4780 (* l_0_3_79 l_0_3_79)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3855 (* ?x3045 l_0_3_38)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3853 (* ?x3042 l_0_3_37)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x3851 (* ?x3850 l_0_3_3)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x3848 (* ?x3847 l_0_3_2)))
 (let ((?x4774 (* l_0_3_105 l_0_3_105)))
 (let ((?x4772 (* l_0_3_104 l_0_3_104)))
 (let ((?x4770 (* l_0_3_103 l_0_3_103)))
 (let ((?x4768 (* l_0_3_102 l_0_3_102)))
 (let ((?x4771 (+ (+ (+ (* l_0_3_100 l_0_3_100) (* l_0_3_101 l_0_3_101)) ?x4768) ?x4770)))
 (let ((?x4781 (- (- (- (+ (+ (+ (+ ?x4771 ?x4772) ?x4774) ?x3848) ?x3851) ?x3853) ?x3855) ?x4780)))
 (= (- (- (- (- (- ?x4781 ?x4782) ?x4784) ?x4786) ?x4788) ?x4790) 0.0))))))))))))))))))))))
(assert
 (let ((?x3933 (* l_0_3_6 l_0_3_6)))
 (let ((?x3931 (* l_0_3_5 l_0_3_5)))
 (let ((?x3929 (* l_0_3_4 l_0_3_4)))
 (let ((?x3927 (* l_0_3_27 l_0_3_27)))
 (let ((?x4825 (+ (- (- (* (- l_0_3_25) l_0_3_25) (* l_0_3_26 l_0_3_26)) ?x3927) ?x3929)))
 (let ((?x4827 (+ (+ ?x4825 ?x3931) ?x3933)))
 (= ?x4827 0.0))))))))
(assert
 (let ((?x3993 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3990 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3978 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x3974 (* ?x3106 l_0_3_30)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x3971 (* ?x3103 l_0_3_29)))
 (let ((?x4838 (+ (- (- (* (* (- 2.0) l_0_3_25) l_0_3_28) ?x3971) ?x3974) ?x3978)))
 (= (+ (+ ?x4838 ?x3990) ?x3993) 0.0))))))))))
(assert
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x3107 (* ?x3106 l_0_3_34)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x3104 (* ?x3103 l_0_3_33)))
 (let ((?x3100 (* 2.0 l_0_3_25)))
 (let ((?x3101 (* ?x3100 l_0_3_32)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3096 (* ?x3095 l_0_3_6)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3093 (* ?x3037 l_0_3_5)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3091 (* ?x3034 l_0_3_4)))
 (let ((?x3967 (+ (+ ?x3091 ?x3093) ?x3096)))
 (= (- (- (- ?x3967 ?x3101) ?x3104) ?x3107) 0.0)))))))))))))))
(assert
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x4128 (* ?x3106 l_0_3_39)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x4126 (* ?x3103 l_0_3_38)))
 (let ((?x3100 (* 2.0 l_0_3_25)))
 (let ((?x4124 (* ?x3100 l_0_3_37)))
 (let ((?x4119 (* 2.0 l_0_3_18)))
 (let ((?x4120 (* ?x4119 l_0_3_6)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x4117 (* ?x3850 l_0_3_5)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x4115 (* ?x3847 l_0_3_4)))
 (= (- (- (- (+ (+ ?x4115 ?x4117) ?x4120) ?x4124) ?x4126) ?x4128) 0.0))))))))))))))
(assert
 (let ((?x4215 (* l_0_3_9 l_0_3_9)))
 (let ((?x4213 (* l_0_3_8 l_0_3_8)))
 (let ((?x4211 (* l_0_3_7 l_0_3_7)))
 (let ((?x4197 (* l_0_3_31 l_0_3_31)))
 (let ((?x4194 (* l_0_3_30 l_0_3_30)))
 (let ((?x4191 (* l_0_3_29 l_0_3_29)))
 (let ((?x4881 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_28 l_0_3_28)) ?x4191) ?x4194)))
 (let ((?x4882 (- ?x4881 ?x4197)))
 (= (+ (+ (+ ?x4882 ?x4211) ?x4213) ?x4215) 0.0))))))))))
(assert
 (let ((?x3217 (* 2.0 l_0_3_31)))
 (let ((?x3218 (* ?x3217 l_0_3_35)))
 (let ((?x3214 (* 2.0 l_0_3_30)))
 (let ((?x3215 (* ?x3214 l_0_3_34)))
 (let ((?x3211 (* 2.0 l_0_3_29)))
 (let ((?x3212 (* ?x3211 l_0_3_33)))
 (let ((?x3208 (* 2.0 l_0_3_28)))
 (let ((?x3209 (* ?x3208 l_0_3_32)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3203 (* ?x3095 l_0_3_9)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3201 (* ?x3037 l_0_3_8)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3199 (* ?x3034 l_0_3_7)))
 (let ((?x3196 (* 2.0 l_0_3_10)))
 (let ((?x3197 (* ?x3196 l_0_3_14)))
 (let ((?x4906 (- (- (- (- (+ (+ (+ ?x3197 ?x3199) ?x3201) ?x3203) ?x3209) ?x3212) ?x3215) ?x3218)))
 (= ?x4906 0.0)))))))))))))))))))
(assert
 (let ((?x3217 (* 2.0 l_0_3_31)))
 (let ((?x4358 (* ?x3217 l_0_3_40)))
 (let ((?x3214 (* 2.0 l_0_3_30)))
 (let ((?x4356 (* ?x3214 l_0_3_39)))
 (let ((?x3211 (* 2.0 l_0_3_29)))
 (let ((?x4354 (* ?x3211 l_0_3_38)))
 (let ((?x3208 (* 2.0 l_0_3_28)))
 (let ((?x4352 (* ?x3208 l_0_3_37)))
 (let ((?x4119 (* 2.0 l_0_3_18)))
 (let ((?x4350 (* ?x4119 l_0_3_9)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x4348 (* ?x3850 l_0_3_8)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x4346 (* ?x3847 l_0_3_7)))
 (let ((?x3196 (* 2.0 l_0_3_10)))
 (let ((?x4918 (* ?x3196 l_0_3_19)))
 (let ((?x4925 (- (- (- (- (+ (+ (+ ?x4918 ?x4346) ?x4348) ?x4350) ?x4352) ?x4354) ?x4356) ?x4358)))
 (= ?x4925 0.0)))))))))))))))))))
(assert
 (let ((?x3351 (* l_0_3_36 l_0_3_36)))
 (let ((?x3349 (* l_0_3_35 l_0_3_35)))
 (let ((?x3347 (* l_0_3_34 l_0_3_34)))
 (let ((?x3345 (* l_0_3_33 l_0_3_33)))
 (let ((?x3343 (* l_0_3_32 l_0_3_32)))
 (let ((?x3340 (* l_0_3_15 l_0_3_15)))
 (let ((?x3338 (* l_0_3_14 l_0_3_14)))
 (let ((?x3336 (* l_0_3_13 l_0_3_13)))
 (let ((?x4948 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3336) ?x3338)))
 (= (- (- (- (- (- (+ ?x4948 ?x3340) ?x3343) ?x3345) ?x3347) ?x3349) ?x3351) 0.0)))))))))))
(assert
 (let ((?x3458 (* (* 2.0 l_0_3_36) l_0_3_41)))
 (let ((?x3455 (* (* 2.0 l_0_3_35) l_0_3_40)))
 (let ((?x3452 (* (* 2.0 l_0_3_34) l_0_3_39)))
 (let ((?x3449 (* (* 2.0 l_0_3_33) l_0_3_38)))
 (let ((?x3446 (* (* 2.0 l_0_3_32) l_0_3_37)))
 (let ((?x3441 (* (* 2.0 l_0_3_15) l_0_3_20)))
 (let ((?x3438 (* (* 2.0 l_0_3_14) l_0_3_19)))
 (let ((?x3095 (* 2.0 l_0_3_13)))
 (let ((?x3435 (* ?x3095 l_0_3_18)))
 (let ((?x3037 (* 2.0 l_0_3_12)))
 (let ((?x3433 (* ?x3037 l_0_3_17)))
 (let ((?x3034 (* 2.0 l_0_3_11)))
 (let ((?x3431 (* ?x3034 l_0_3_16)))
 (let ((?x4972 (- (- (- (+ (+ (+ (+ ?x3431 ?x3433) ?x3435) ?x3438) ?x3441) ?x3446) ?x3449) ?x3452)))
 (= (- (- ?x4972 ?x3455) ?x3458) 0.0))))))))))))))))
(assert
 (let ((?x4521 (* l_0_3_42 l_0_3_42)))
 (let ((?x4519 (* l_0_3_41 l_0_3_41)))
 (let ((?x4517 (* l_0_3_40 l_0_3_40)))
 (let ((?x4515 (* l_0_3_39 l_0_3_39)))
 (let ((?x4513 (* l_0_3_38 l_0_3_38)))
 (let ((?x4511 (* l_0_3_37 l_0_3_37)))
 (let ((?x4509 (* l_0_3_21 l_0_3_21)))
 (let ((?x4507 (* l_0_3_20 l_0_3_20)))
 (let ((?x4505 (* l_0_3_19 l_0_3_19)))
 (let ((?x4503 (* l_0_3_18 l_0_3_18)))
 (let ((?x4988 (+ (+ (+ (* l_0_3_16 l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x4503) ?x4505)))
 (let ((?x4995 (- (- (- (- (- (+ (+ ?x4988 ?x4507) ?x4509) ?x4511) ?x4513) ?x4515) ?x4517) ?x4519)))
 (let ((?x4996 (- ?x4995 ?x4521)))
 (= ?x4996 0.0)))))))))))))))
(assert
 (let ((?x5012 (* l_0_3_85 l_0_3_85)))
 (let ((?x5010 (* l_0_3_64 l_0_3_64)))
 (let ((?x2995 (* l_0_3_22 l_0_3_22)))
 (let ((?x2990 (* l_0_3_1 l_0_3_1)))
 (let ((?x4542 (- ?x2990 ?x2995)))
 (= (- (+ ?x4542 ?x5010) ?x5012) 0.0)))))))
(assert
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x5027 (* ?x3000 l_0_3_86)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x5023 (* ?x2997 l_0_3_65)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3040 (* ?x2992 l_0_3_23)))
 (let ((?x5022 (- (- (* (* 2.0 l_0_3_1) l_0_3_2) (* l_0_3_106 l_0_3_106)) ?x3040)))
 (let ((?x5031 (- (- (+ (+ ?x5022 ?x5023) (* 1.0 (* l_0_3_64 l_0_3_64))) ?x5027) (* (* 1.0 l_0_3_85) l_0_3_85))))
 (= ?x5031 0.0))))))))))
(assert
 (let ((?x5012 (* l_0_3_85 l_0_3_85)))
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x5052 (* ?x3000 l_0_3_88)))
 (let ((?x5010 (* l_0_3_64 l_0_3_64)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x5049 (* ?x2997 l_0_3_67)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3098 (* ?x2992 l_0_3_25)))
 (let ((?x4613 (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x3098)))
 (= (+ (- (- (+ ?x4613 ?x5049) ?x5010) ?x5052) ?x5012) 0.0)))))))))))
(assert
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x5077 (* ?x3000 l_0_3_91)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x5075 (* ?x2997 l_0_3_70)))
 (let ((?x5073 (* l_0_3_43 l_0_3_43)))
 (let ((?x2995 (* l_0_3_22 l_0_3_22)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3205 (* ?x2992 l_0_3_28)))
 (let ((?x5071 (- (+ (* (* 2.0 l_0_3_1) l_0_3_7) (* l_0_3_1 l_0_3_1)) ?x3205)))
 (= (- (+ (- (- ?x5071 ?x2995) ?x5073) ?x5075) ?x5077) 0.0)))))))))))
(assert
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x4567 (* ?x2997 l_0_3_79)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3443 (* ?x2992 l_0_3_37)))
 (let ((?x2716 (* 2.0 l_0_3_100)))
 (let ((?x4555 (* ?x2716 l_0_3_85)))
 (let ((?x2988 (* 2.0 l_0_3_1)))
 (let ((?x4631 (* ?x2988 l_0_3_16)))
 (= (+ (- (- ?x4631 ?x4555) ?x3443) ?x4567) 0.0))))))))))
(assert
 (let ((?x2850 (* l_0_3_87 l_0_3_87)))
 (let ((?x2846 (* l_0_3_86 l_0_3_86)))
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x5027 (* ?x3000 l_0_3_86)))
 (let ((?x2842 (* l_0_3_66 l_0_3_66)))
 (let ((?x2838 (* l_0_3_65 l_0_3_65)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x5023 (* ?x2997 l_0_3_65)))
 (let ((?x2668 (* l_0_3_3 l_0_3_3)))
 (let ((?x2666 (* l_0_3_24 l_0_3_24)))
 (let ((?x2664 (* l_0_3_23 l_0_3_23)))
 (let ((?x5104 (- (+ (* (* (- 2.0) l_0_3_106) l_0_3_107) (* l_0_3_2 l_0_3_2)) ?x2664)))
 (let ((?x5111 (- (- (+ (+ (+ (+ (- ?x5104 ?x2666) ?x2668) ?x5023) ?x2838) ?x2842) ?x5027) ?x2846)))
 (= (- ?x5111 ?x2850) 0.0)))))))))))))))
(assert
 (let ((?x2679 (* 2.0 l_0_3_87)))
 (let ((?x2848 (* ?x2679 l_0_3_89)))
 (let ((?x2676 (* 2.0 l_0_3_86)))
 (let ((?x2844 (* ?x2676 l_0_3_88)))
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x5052 (* ?x3000 l_0_3_88)))
 (let ((?x5027 (* ?x3000 l_0_3_86)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2840 (* ?x2673 l_0_3_68)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2836 (* ?x2670 l_0_3_67)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x5049 (* ?x2997 l_0_3_67)))
 (let ((?x5023 (* ?x2997 l_0_3_65)))
 (let ((?x3583 (* 2.0 l_0_3_3)))
 (let ((?x3584 (* ?x3583 l_0_3_5)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3581 (* ?x3045 l_0_3_26)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3579 (* ?x3042 l_0_3_25)))
 (let ((?x3576 (* 2.0 l_0_3_2)))
 (let ((?x3577 (* ?x3576 l_0_3_4)))
 (let ((?x5121 (+ (- (- (+ (* (* (- 2.0) l_0_3_106) l_0_3_109) ?x3577) ?x3579) ?x3581) ?x3584)))
 (let ((?x5128 (- (- (+ (+ (+ (+ (- ?x5121 ?x5023) ?x5049) ?x2836) ?x2840) ?x5027) ?x5052) ?x2844)))
 (= (- ?x5128 ?x2848) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2679 (* 2.0 l_0_3_87)))
 (let ((?x2944 (* ?x2679 l_0_3_92)))
 (let ((?x2676 (* 2.0 l_0_3_86)))
 (let ((?x2942 (* ?x2676 l_0_3_91)))
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x5077 (* ?x3000 l_0_3_91)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2940 (* ?x2673 l_0_3_71)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2938 (* ?x2670 l_0_3_70)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x5075 (* ?x2997 l_0_3_70)))
 (let ((?x3583 (* 2.0 l_0_3_3)))
 (let ((?x3667 (* ?x3583 l_0_3_8)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3664 (* ?x3045 l_0_3_29)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3661 (* ?x3042 l_0_3_28)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3040 (* ?x2992 l_0_3_23)))
 (let ((?x3576 (* 2.0 l_0_3_2)))
 (let ((?x3659 (* ?x3576 l_0_3_7)))
 (let ((?x2988 (* 2.0 l_0_3_1)))
 (let ((?x4554 (* ?x2988 l_0_3_2)))
 (let ((?x792 (- (- (+ (- ?x4554 (* (* 2.0 l_0_3_106) l_0_3_112)) ?x3659) ?x3040) ?x3661)))
 (let ((?x5148 (+ (- (+ (- ?x792 ?x3664) ?x3667) (* (* 2.0 l_0_3_43) l_0_3_44)) ?x5075)))
 (= (- (- (- (+ (+ ?x5148 ?x2938) ?x2940) ?x5077) ?x2942) ?x2944) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2750 (* ?x2673 l_0_3_80)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2748 (* ?x2670 l_0_3_79)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x4567 (* ?x2997 l_0_3_79)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3855 (* ?x3045 l_0_3_38)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3853 (* ?x3042 l_0_3_37)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x3851 (* ?x3850 l_0_3_3)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x3848 (* ?x3847 l_0_3_2)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x2728 (* ?x2727 l_0_3_87)))
 (let ((?x2716 (* 2.0 l_0_3_100)))
 (let ((?x2724 (* ?x2716 l_0_3_86)))
 (let ((?x5176 (- (- (- (* (* (- 2.0) l_0_3_100) l_0_3_85) ?x2724) ?x2728) (* (* 2.0 l_0_3_106) l_0_3_121))))
 (let ((?x5183 (+ (+ (+ (- (- (+ (+ ?x5176 ?x3848) ?x3851) ?x3853) ?x3855) ?x4567) ?x2748) ?x2750)))
 (= ?x5183 0.0))))))))))))))))))))))
(assert
 (let ((?x5204 (* l_0_3_90 l_0_3_90)))
 (let ((?x5202 (* l_0_3_89 l_0_3_89)))
 (let ((?x5200 (* l_0_3_88 l_0_3_88)))
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x5052 (* ?x3000 l_0_3_88)))
 (let ((?x5197 (* l_0_3_69 l_0_3_69)))
 (let ((?x5195 (* l_0_3_68 l_0_3_68)))
 (let ((?x5193 (* l_0_3_67 l_0_3_67)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x5049 (* ?x2997 l_0_3_67)))
 (let ((?x3933 (* l_0_3_6 l_0_3_6)))
 (let ((?x3931 (* l_0_3_5 l_0_3_5)))
 (let ((?x3929 (* l_0_3_4 l_0_3_4)))
 (let ((?x3927 (* l_0_3_27 l_0_3_27)))
 (let ((?x4825 (+ (- (- (* (- l_0_3_25) l_0_3_25) (* l_0_3_26 l_0_3_26)) ?x3927) ?x3929)))
 (let ((?x4827 (+ (+ ?x4825 ?x3931) ?x3933)))
 (let ((?x5203 (- (- (+ (+ (+ (+ (- ?x4827 ?x5049) ?x5193) ?x5195) ?x5197) ?x5052) ?x5200) ?x5202)))
 (= (- ?x5203 ?x5204) 0.0)))))))))))))))))))
(assert
 (let ((?x3123 (* 2.0 l_0_3_90)))
 (let ((?x5245 (* ?x3123 l_0_3_93)))
 (let ((?x3120 (* 2.0 l_0_3_89)))
 (let ((?x5243 (* ?x3120 l_0_3_92)))
 (let ((?x3117 (* 2.0 l_0_3_88)))
 (let ((?x5241 (* ?x3117 l_0_3_91)))
 (let ((?x3000 (* 2.0 l_0_3_85)))
 (let ((?x5077 (* ?x3000 l_0_3_91)))
 (let ((?x2758 (* 2.0 l_0_3_69)))
 (let ((?x5238 (* ?x2758 l_0_3_72)))
 (let ((?x2755 (* 2.0 l_0_3_68)))
 (let ((?x5236 (* ?x2755 l_0_3_71)))
 (let ((?x2752 (* 2.0 l_0_3_67)))
 (let ((?x5234 (* ?x2752 l_0_3_70)))
 (let ((?x2997 (* 2.0 l_0_3_64)))
 (let ((?x5075 (* ?x2997 l_0_3_70)))
 (let ((?x3993 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3990 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3978 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x3974 (* ?x3106 l_0_3_30)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x3971 (* ?x3103 l_0_3_29)))
 (let ((?x3100 (* 2.0 l_0_3_25)))
 (let ((?x3968 (* ?x3100 l_0_3_28)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3098 (* ?x2992 l_0_3_25)))
 (let ((?x4613 (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x3098)))
 (let ((?x5230 (- (+ (- (- (- ?x4613 ?x3968) ?x3971) ?x3974) ?x3978) (* (* 2.0 l_0_3_43) l_0_3_46))))
 (let ((?x5240 (+ (+ (+ (+ (- (+ (+ ?x5230 ?x3990) ?x3993) ?x5075) ?x5234) ?x5236) ?x5238) ?x5077)))
 (= (- (- (- ?x5240 ?x5241) ?x5243) ?x5245) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x5304 (* l_0_3_94 l_0_3_94)))
 (let ((?x5302 (* l_0_3_93 l_0_3_93)))
 (let ((?x5300 (* l_0_3_92 l_0_3_92)))
 (let ((?x5298 (* l_0_3_91 l_0_3_91)))
 (let ((?x4215 (* l_0_3_9 l_0_3_9)))
 (let ((?x4213 (* l_0_3_8 l_0_3_8)))
 (let ((?x5294 (* l_0_3_73 l_0_3_73)))
 (let ((?x5292 (* l_0_3_72 l_0_3_72)))
 (let ((?x5290 (* l_0_3_71 l_0_3_71)))
 (let ((?x5288 (* l_0_3_70 l_0_3_70)))
 (let ((?x4211 (* l_0_3_7 l_0_3_7)))
 (let ((?x4197 (* l_0_3_31 l_0_3_31)))
 (let ((?x4194 (* l_0_3_30 l_0_3_30)))
 (let ((?x4191 (* l_0_3_29 l_0_3_29)))
 (let ((?x4188 (* l_0_3_28 l_0_3_28)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3205 (* ?x2992 l_0_3_28)))
 (let ((?x5280 (- (+ (* (* 2.0 l_0_3_1) l_0_3_7) (* l_0_3_10 l_0_3_10)) ?x3205)))
 (let ((?x5286 (- (- (- (- (- ?x5280 ?x4188) ?x4191) ?x4194) ?x4197) (* (* 2.0 l_0_3_43) l_0_3_49))))
 (let ((?x5297 (+ (+ (+ (+ (+ (+ (+ ?x5286 ?x4211) ?x5288) ?x5290) ?x5292) ?x5294) ?x4213) ?x4215)))
 (= (- (- (- (- ?x5297 ?x5298) ?x5300) ?x5302) ?x5304) 0.0))))))))))))))))))))))
(assert
 (let ((?x3232 (* 2.0 l_0_3_73)))
 (let ((?x4695 (* ?x3232 l_0_3_82)))
 (let ((?x3229 (* 2.0 l_0_3_72)))
 (let ((?x4693 (* ?x3229 l_0_3_81)))
 (let ((?x3226 (* 2.0 l_0_3_71)))
 (let ((?x4691 (* ?x3226 l_0_3_80)))
 (let ((?x3223 (* 2.0 l_0_3_70)))
 (let ((?x4689 (* ?x3223 l_0_3_79)))
 (let ((?x3217 (* 2.0 l_0_3_31)))
 (let ((?x4358 (* ?x3217 l_0_3_40)))
 (let ((?x3214 (* 2.0 l_0_3_30)))
 (let ((?x4356 (* ?x3214 l_0_3_39)))
 (let ((?x3211 (* 2.0 l_0_3_29)))
 (let ((?x4354 (* ?x3211 l_0_3_38)))
 (let ((?x3208 (* 2.0 l_0_3_28)))
 (let ((?x4352 (* ?x3208 l_0_3_37)))
 (let ((?x2992 (* 2.0 l_0_3_22)))
 (let ((?x3443 (* ?x2992 l_0_3_37)))
 (let ((?x4119 (* 2.0 l_0_3_18)))
 (let ((?x4350 (* ?x4119 l_0_3_9)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x4348 (* ?x3850 l_0_3_8)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x4346 (* ?x3847 l_0_3_7)))
 (let ((?x3425 (* 2.0 l_0_3_103)))
 (let ((?x4671 (* ?x3425 l_0_3_94)))
 (let ((?x2732 (* 2.0 l_0_3_102)))
 (let ((?x4669 (* ?x2732 l_0_3_93)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x4667 (* ?x2727 l_0_3_92)))
 (let ((?x2716 (* 2.0 l_0_3_100)))
 (let ((?x4666 (* ?x2716 l_0_3_91)))
 (let ((?x3196 (* 2.0 l_0_3_10)))
 (let ((?x4918 (* ?x3196 l_0_3_19)))
 (let ((?x2988 (* 2.0 l_0_3_1)))
 (let ((?x4631 (* ?x2988 l_0_3_16)))
 (let ((?x5336 (+ (+ (- (- (- (- (+ ?x4631 ?x4918) ?x4666) ?x4667) ?x4669) ?x4671) ?x4346) ?x4348)))
 (let ((?x5344 (- (- (- (- (- (- (+ ?x5336 ?x4350) ?x3443) ?x4352) ?x4354) ?x4356) ?x4358) (* (* 2.0 l_0_3_43) l_0_3_58))))
 (= (+ (+ (+ (+ ?x5344 ?x4689) ?x4691) ?x4693) ?x4695) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4790 (* l_0_3_84 l_0_3_84)))
 (let ((?x4788 (* l_0_3_83 l_0_3_83)))
 (let ((?x4786 (* l_0_3_82 l_0_3_82)))
 (let ((?x4784 (* l_0_3_81 l_0_3_81)))
 (let ((?x4782 (* l_0_3_80 l_0_3_80)))
 (let ((?x4780 (* l_0_3_79 l_0_3_79)))
 (let ((?x4521 (* l_0_3_42 l_0_3_42)))
 (let ((?x4519 (* l_0_3_41 l_0_3_41)))
 (let ((?x4517 (* l_0_3_40 l_0_3_40)))
 (let ((?x4515 (* l_0_3_39 l_0_3_39)))
 (let ((?x4513 (* l_0_3_38 l_0_3_38)))
 (let ((?x4511 (* l_0_3_37 l_0_3_37)))
 (let ((?x4509 (* l_0_3_21 l_0_3_21)))
 (let ((?x4507 (* l_0_3_20 l_0_3_20)))
 (let ((?x4505 (* l_0_3_19 l_0_3_19)))
 (let ((?x4503 (* l_0_3_18 l_0_3_18)))
 (let ((?x4501 (* l_0_3_17 l_0_3_17)))
 (let ((?x4525 (* l_0_3_16 l_0_3_16)))
 (let ((?x4774 (* l_0_3_105 l_0_3_105)))
 (let ((?x4772 (* l_0_3_104 l_0_3_104)))
 (let ((?x4770 (* l_0_3_103 l_0_3_103)))
 (let ((?x4768 (* l_0_3_102 l_0_3_102)))
 (let ((?x5356 (- (- (* (- l_0_3_100) l_0_3_100) (* l_0_3_101 l_0_3_101)) ?x4768)))
 (let ((?x5363 (+ (+ (+ (+ (- (- (- ?x5356 ?x4770) ?x4772) ?x4774) ?x4525) ?x4501) ?x4503) ?x4505)))
 (let ((?x5370 (- (- (- (- (- (+ (+ ?x5363 ?x4507) ?x4509) ?x4511) ?x4513) ?x4515) ?x4517) ?x4519)))
 (let ((?x5377 (+ (+ (+ (+ (+ (+ (- ?x5370 ?x4521) ?x4780) ?x4782) ?x4784) ?x4786) ?x4788) ?x4790)))
 (= ?x5377 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x3123 (* 2.0 l_0_3_90)))
 (let ((?x5245 (* ?x3123 l_0_3_93)))
 (let ((?x3120 (* 2.0 l_0_3_89)))
 (let ((?x5243 (* ?x3120 l_0_3_92)))
 (let ((?x3117 (* 2.0 l_0_3_88)))
 (let ((?x5241 (* ?x3117 l_0_3_91)))
 (let ((?x2679 (* 2.0 l_0_3_87)))
 (let ((?x2944 (* ?x2679 l_0_3_92)))
 (let ((?x2676 (* 2.0 l_0_3_86)))
 (let ((?x2942 (* ?x2676 l_0_3_91)))
 (let ((?x2758 (* 2.0 l_0_3_69)))
 (let ((?x5238 (* ?x2758 l_0_3_72)))
 (let ((?x2755 (* 2.0 l_0_3_68)))
 (let ((?x5236 (* ?x2755 l_0_3_71)))
 (let ((?x2752 (* 2.0 l_0_3_67)))
 (let ((?x5234 (* ?x2752 l_0_3_70)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2940 (* ?x2673 l_0_3_71)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2938 (* ?x2670 l_0_3_70)))
 (let ((?x3583 (* 2.0 l_0_3_3)))
 (let ((?x3584 (* ?x3583 l_0_3_5)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3581 (* ?x3045 l_0_3_26)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3579 (* ?x3042 l_0_3_25)))
 (let ((?x3576 (* 2.0 l_0_3_2)))
 (let ((?x3577 (* ?x3576 l_0_3_4)))
 (let ((?x5399 (- (* (* (- 2.0) l_0_3_109) l_0_3_112) (* (* 2.0 l_0_3_110) l_0_3_113))))
 (let ((?x5404 (- (- (+ (- ?x5399 (* (* 2.0 l_0_3_111) l_0_3_114)) ?x3577) ?x3579) ?x3581)))
 (let ((?x5409 (- (- (+ ?x5404 ?x3584) (* (* 2.0 l_0_3_44) l_0_3_46)) (* (* 2.0 l_0_3_45) l_0_3_47))))
 (let ((?x5416 (+ (+ (+ (+ (+ (- (- ?x5409 ?x2938) ?x2940) ?x5234) ?x5236) ?x5238) ?x2942) ?x2944)))
 (= (- (- (- ?x5416 ?x5241) ?x5243) ?x5245) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3583 (* 2.0 l_0_3_3)))
 (let ((?x3667 (* ?x3583 l_0_3_8)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3664 (* ?x3045 l_0_3_29)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3661 (* ?x3042 l_0_3_28)))
 (let ((?x3576 (* 2.0 l_0_3_2)))
 (let ((?x3659 (* ?x3576 l_0_3_7)))
 (let ((?x1340 (* l_0_3_115 l_0_3_115)))
 (let ((?x1343 (* l_0_3_114 l_0_3_114)))
 (let ((?x1337 (- (- (* (- l_0_3_112) l_0_3_112) (* l_0_3_113 l_0_3_113)) ?x1343)))
 (let ((?x5444 (- (+ (- (- (+ (- ?x1337 ?x1340) ?x3659) ?x3661) ?x3664) ?x3667) (* (* 2.0 l_0_3_44) l_0_3_49))))
 (let ((?x5448 (+ (- ?x5444 (* (* 2.0 l_0_3_45) l_0_3_50)) (* 1.0 (* l_0_3_70 l_0_3_70)))))
 (let ((?x5452 (+ (+ ?x5448 (* 1.0 (* l_0_3_71 l_0_3_71))) (* 1.0 (* l_0_3_72 l_0_3_72)))))
 (let ((?x5457 (- (+ ?x5452 (* 1.0 (* l_0_3_73 l_0_3_73))) (* (* 1.0 l_0_3_91) l_0_3_91))))
 (let ((?x5463 (- (- ?x5457 (* (* 1.0 l_0_3_92) l_0_3_92)) (* (* 1.0 l_0_3_93) l_0_3_93))))
 (= (- ?x5463 (* (* 1.0 l_0_3_94) l_0_3_94)) 0.0))))))))))))))))))
(assert
 (let ((?x3232 (* 2.0 l_0_3_73)))
 (let ((?x4695 (* ?x3232 l_0_3_82)))
 (let ((?x3229 (* 2.0 l_0_3_72)))
 (let ((?x4693 (* ?x3229 l_0_3_81)))
 (let ((?x3226 (* 2.0 l_0_3_71)))
 (let ((?x4691 (* ?x3226 l_0_3_80)))
 (let ((?x3223 (* 2.0 l_0_3_70)))
 (let ((?x4689 (* ?x3223 l_0_3_79)))
 (let ((?x3045 (* 2.0 l_0_3_24)))
 (let ((?x3855 (* ?x3045 l_0_3_38)))
 (let ((?x3042 (* 2.0 l_0_3_23)))
 (let ((?x3853 (* ?x3042 l_0_3_37)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x3851 (* ?x3850 l_0_3_3)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x3848 (* ?x3847 l_0_3_2)))
 (let ((?x3425 (* 2.0 l_0_3_103)))
 (let ((?x4671 (* ?x3425 l_0_3_94)))
 (let ((?x2732 (* 2.0 l_0_3_102)))
 (let ((?x4669 (* ?x2732 l_0_3_93)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x4667 (* ?x2727 l_0_3_92)))
 (let ((?x5486 (- (- (- (- (* (* (- 2.0) l_0_3_100) l_0_3_91) ?x4667) ?x4669) ?x4671) (* (* 2.0 l_0_3_112) l_0_3_121))))
 (let ((?x5490 (- (- ?x5486 (* (* 2.0 l_0_3_113) l_0_3_122)) (* (* 2.0 l_0_3_114) l_0_3_123))))
 (let ((?x5495 (- (+ (+ (- ?x5490 (* (* 2.0 l_0_3_115) l_0_3_124)) ?x3848) ?x3851) ?x3853)))
 (let ((?x5500 (- (- (- ?x5495 ?x3855) (* (* 2.0 l_0_3_44) l_0_3_58)) (* (* 2.0 l_0_3_45) l_0_3_59))))
 (= (+ (+ (+ (+ ?x5500 ?x4689) ?x4691) ?x4693) ?x4695) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x3123 (* 2.0 l_0_3_90)))
 (let ((?x5245 (* ?x3123 l_0_3_93)))
 (let ((?x3120 (* 2.0 l_0_3_89)))
 (let ((?x5243 (* ?x3120 l_0_3_92)))
 (let ((?x3117 (* 2.0 l_0_3_88)))
 (let ((?x5241 (* ?x3117 l_0_3_91)))
 (let ((?x2758 (* 2.0 l_0_3_69)))
 (let ((?x5238 (* ?x2758 l_0_3_72)))
 (let ((?x2755 (* 2.0 l_0_3_68)))
 (let ((?x5236 (* ?x2755 l_0_3_71)))
 (let ((?x2752 (* 2.0 l_0_3_67)))
 (let ((?x5234 (* ?x2752 l_0_3_70)))
 (let ((?x3933 (* l_0_3_6 l_0_3_6)))
 (let ((?x3931 (* l_0_3_5 l_0_3_5)))
 (let ((?x5523 (* l_0_3_48 l_0_3_48)))
 (let ((?x5521 (* l_0_3_47 l_0_3_47)))
 (let ((?x1608 (* l_0_3_46 l_0_3_46)))
 (let ((?x3929 (* l_0_3_4 l_0_3_4)))
 (let ((?x3927 (* l_0_3_27 l_0_3_27)))
 (let ((?x4825 (+ (- (- (* (- l_0_3_25) l_0_3_25) (* l_0_3_26 l_0_3_26)) ?x3927) ?x3929)))
 (let ((?x5528 (- (- (+ (+ (- (- (- ?x4825 ?x1608) ?x5521) ?x5523) ?x3931) ?x3933) ?x5234) ?x5236)))
 (= (+ (+ (+ (- ?x5528 ?x5238) ?x5241) ?x5243) ?x5245) 0.0)))))))))))))))))))))))
(assert
 (let ((?x5304 (* l_0_3_94 l_0_3_94)))
 (let ((?x5302 (* l_0_3_93 l_0_3_93)))
 (let ((?x5300 (* l_0_3_92 l_0_3_92)))
 (let ((?x5298 (* l_0_3_91 l_0_3_91)))
 (let ((?x5294 (* l_0_3_73 l_0_3_73)))
 (let ((?x5292 (* l_0_3_72 l_0_3_72)))
 (let ((?x5290 (* l_0_3_71 l_0_3_71)))
 (let ((?x5288 (* l_0_3_70 l_0_3_70)))
 (let ((?x3993 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3990 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3978 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3106 (* 2.0 l_0_3_27)))
 (let ((?x3974 (* ?x3106 l_0_3_30)))
 (let ((?x3103 (* 2.0 l_0_3_26)))
 (let ((?x3971 (* ?x3103 l_0_3_29)))
 (let ((?x4838 (+ (- (- (* (* (- 2.0) l_0_3_25) l_0_3_28) ?x3971) ?x3974) ?x3978)))
 (let ((?x1616 (- (- ?x4838 (* (* 2.0 l_0_3_46) l_0_3_49)) (* (* 2.0 l_0_3_47) l_0_3_50))))
 (let ((?x5550 (- (+ (+ (- ?x1616 (* (* 2.0 l_0_3_48) l_0_3_51)) ?x3990) ?x3993) ?x5288)))
 (let ((?x5557 (+ (+ (+ (+ (- (- (- ?x5550 ?x5290) ?x5292) ?x5294) ?x5298) ?x5300) ?x5302) ?x5304)))
 (= ?x5557 0.0)))))))))))))))))))))
(assert
 (let ((?x4215 (* l_0_3_9 l_0_3_9)))
 (let ((?x4213 (* l_0_3_8 l_0_3_8)))
 (let ((?x4211 (* l_0_3_7 l_0_3_7)))
 (let ((?x5576 (* l_0_3_52 l_0_3_52)))
 (let ((?x1690 (* l_0_3_51 l_0_3_51)))
 (let ((?x1686 (* l_0_3_50 l_0_3_50)))
 (let ((?x1698 (* l_0_3_49 l_0_3_49)))
 (let ((?x4197 (* l_0_3_31 l_0_3_31)))
 (let ((?x4194 (* l_0_3_30 l_0_3_30)))
 (let ((?x4191 (* l_0_3_29 l_0_3_29)))
 (let ((?x4881 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_28 l_0_3_28)) ?x4191) ?x4194)))
 (let ((?x4882 (- ?x4881 ?x4197)))
 (let ((?x5580 (+ (+ (+ (- (- (- (- ?x4882 ?x1698) ?x1686) ?x1690) ?x5576) ?x4211) ?x4213) ?x4215)))
 (= ?x5580 0.0)))))))))))))))
(assert
 (let ((?x3217 (* 2.0 l_0_3_31)))
 (let ((?x4358 (* ?x3217 l_0_3_40)))
 (let ((?x3214 (* 2.0 l_0_3_30)))
 (let ((?x4356 (* ?x3214 l_0_3_39)))
 (let ((?x3211 (* 2.0 l_0_3_29)))
 (let ((?x4354 (* ?x3211 l_0_3_38)))
 (let ((?x3208 (* 2.0 l_0_3_28)))
 (let ((?x4352 (* ?x3208 l_0_3_37)))
 (let ((?x4119 (* 2.0 l_0_3_18)))
 (let ((?x4350 (* ?x4119 l_0_3_9)))
 (let ((?x3850 (* 2.0 l_0_3_17)))
 (let ((?x4348 (* ?x3850 l_0_3_8)))
 (let ((?x3847 (* 2.0 l_0_3_16)))
 (let ((?x4346 (* ?x3847 l_0_3_7)))
 (let ((?x3196 (* 2.0 l_0_3_10)))
 (let ((?x4918 (* ?x3196 l_0_3_19)))
 (let ((?x4925 (- (- (- (- (+ (+ (+ ?x4918 ?x4346) ?x4348) ?x4350) ?x4352) ?x4354) ?x4356) ?x4358)))
 (let ((?x5593 (- (- ?x4925 (* (* 2.0 l_0_3_49) l_0_3_58)) (* (* 2.0 l_0_3_50) l_0_3_59))))
 (let ((?x5597 (- (- ?x5593 (* (* 2.0 l_0_3_51) l_0_3_60)) (* (* 2.0 l_0_3_52) l_0_3_61))))
 (= ?x5597 0.0)))))))))))))))))))))
(assert
 (let ((?x5623 (* l_0_3_63 l_0_3_63)))
 (let ((?x5621 (* l_0_3_62 l_0_3_62)))
 (let ((?x5619 (* l_0_3_61 l_0_3_61)))
 (let ((?x5617 (* l_0_3_60 l_0_3_60)))
 (let ((?x5615 (* l_0_3_59 l_0_3_59)))
 (let ((?x5613 (* l_0_3_58 l_0_3_58)))
 (let ((?x4521 (* l_0_3_42 l_0_3_42)))
 (let ((?x4519 (* l_0_3_41 l_0_3_41)))
 (let ((?x4517 (* l_0_3_40 l_0_3_40)))
 (let ((?x4515 (* l_0_3_39 l_0_3_39)))
 (let ((?x4513 (* l_0_3_38 l_0_3_38)))
 (let ((?x4511 (* l_0_3_37 l_0_3_37)))
 (let ((?x4509 (* l_0_3_21 l_0_3_21)))
 (let ((?x4507 (* l_0_3_20 l_0_3_20)))
 (let ((?x4505 (* l_0_3_19 l_0_3_19)))
 (let ((?x4503 (* l_0_3_18 l_0_3_18)))
 (let ((?x4988 (+ (+ (+ (* l_0_3_16 l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x4503) ?x4505)))
 (let ((?x4995 (- (- (- (- (- (+ (+ ?x4988 ?x4507) ?x4509) ?x4511) ?x4513) ?x4515) ?x4517) ?x4519)))
 (let ((?x4996 (- ?x4995 ?x4521)))
 (= (- (- (- (- (- (- ?x4996 ?x5613) ?x5615) ?x5617) ?x5619) ?x5621) ?x5623) 0.0)))))))))))))))))))))
(assert
 (let ((?x2679 (* 2.0 l_0_3_87)))
 (let ((?x2848 (* ?x2679 l_0_3_89)))
 (let ((?x2676 (* 2.0 l_0_3_86)))
 (let ((?x2844 (* ?x2676 l_0_3_88)))
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2840 (* ?x2673 l_0_3_68)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2836 (* ?x2670 l_0_3_67)))
 (let ((?x5644 (* l_0_3_111 l_0_3_111)))
 (let ((?x5645 (- (- (* (- l_0_3_109) l_0_3_109) (* l_0_3_110 l_0_3_110)) ?x5644)))
 (let ((?x5651 (+ (+ (- (- ?x5645 ?x2836) ?x2840) (* 1.0 (* l_0_3_67 l_0_3_67))) (* 1.0 (* l_0_3_68 l_0_3_68)))))
 (let ((?x5658 (- (+ (+ (+ ?x5651 (* 1.0 (* l_0_3_69 l_0_3_69))) ?x2844) ?x2848) (* (* 1.0 l_0_3_88) l_0_3_88))))
 (let ((?x5664 (- (- ?x5658 (* (* 1.0 l_0_3_89) l_0_3_89)) (* (* 1.0 l_0_3_90) l_0_3_90))))
 (= ?x5664 0.0)))))))))))))))
(assert
 (let ((?x5204 (* l_0_3_90 l_0_3_90)))
 (let ((?x5202 (* l_0_3_89 l_0_3_89)))
 (let ((?x5200 (* l_0_3_88 l_0_3_88)))
 (let ((?x5197 (* l_0_3_69 l_0_3_69)))
 (let ((?x1804 (+ (- (- (* (- l_0_3_67) l_0_3_67) (* l_0_3_68 l_0_3_68)) ?x5197) ?x5200)))
 (= (+ (+ ?x1804 ?x5202) ?x5204) 0.0)))))))
(assert
 (let ((?x2673 (* 2.0 l_0_3_66)))
 (let ((?x2750 (* ?x2673 l_0_3_80)))
 (let ((?x2670 (* 2.0 l_0_3_65)))
 (let ((?x2748 (* ?x2670 l_0_3_79)))
 (let ((?x2727 (* 2.0 l_0_3_101)))
 (let ((?x2728 (* ?x2727 l_0_3_87)))
 (let ((?x5678 (- (- (* (* (- 2.0) l_0_3_100) l_0_3_86) ?x2728) (* (* 2.0 l_0_3_107) l_0_3_121))))
 (= (+ (+ (- ?x5678 (* (* 2.0 l_0_3_108) l_0_3_122)) ?x2748) ?x2750) 0.0)))))))))
(assert
 (let ((?x5724 (* l_0_3_126 l_0_3_126)))
 (let ((?x5722 (* l_0_3_125 l_0_3_125)))
 (let ((?x5720 (* l_0_3_124 l_0_3_124)))
 (let ((?x5718 (* l_0_3_123 l_0_3_123)))
 (let ((?x5716 (* l_0_3_122 l_0_3_122)))
 (let ((?x5714 (* l_0_3_121 l_0_3_121)))
 (let ((?x5701 (- (* (* (- 1.0) l_0_3_100) l_0_3_100) (* (* 1.0 l_0_3_101) l_0_3_101))))
 (let ((?x5707 (- (- ?x5701 (* (* 1.0 l_0_3_102) l_0_3_102)) (* (* 1.0 l_0_3_103) l_0_3_103))))
 (let ((?x5713 (- (- ?x5707 (* (* 1.0 l_0_3_104) l_0_3_104)) (* (* 1.0 l_0_3_105) l_0_3_105))))
 (let ((?x5727 (+ (- (- (- (- (- (- ?x5713 ?x5714) ?x5716) ?x5718) ?x5720) ?x5722) ?x5724) (* 1.0 (* l_0_3_79 l_0_3_79)))))
 (let ((?x5731 (+ (+ ?x5727 (* 1.0 (* l_0_3_80 l_0_3_80))) (* 1.0 (* l_0_3_81 l_0_3_81)))))
 (let ((?x5735 (+ (+ ?x5731 (* 1.0 (* l_0_3_82 l_0_3_82))) (* 1.0 (* l_0_3_83 l_0_3_83)))))
 (= (+ ?x5735 (* 1.0 (* l_0_3_84 l_0_3_84))) 0.0))))))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_22 0.0))
(assert
 (>= l_0_3_24 0.0))
(assert
 (>= l_0_3_27 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_42 0.0))
(assert
 (>= l_0_3_43 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_52 0.0))
(assert
 (>= l_0_3_57 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_64 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_69 0.0))
(assert
 (>= l_0_3_73 0.0))
(assert
 (>= l_0_3_78 0.0))
(assert
 (>= l_0_3_84 0.0))
(assert
 (>= l_0_3_85 0.0))
(assert
 (>= l_0_3_87 0.0))
(assert
 (>= l_0_3_90 0.0))
(assert
 (>= l_0_3_94 0.0))
(assert
 (>= l_0_3_99 0.0))
(assert
 (>= l_0_3_105 0.0))
(assert
 (>= l_0_3_106 0.0))
(assert
 (>= l_0_3_108 0.0))
(assert
 (>= l_0_3_111 0.0))
(assert
 (>= l_0_3_115 0.0))
(assert
 (>= l_0_3_120 0.0))
(assert
 (>= l_0_3_126 0.0))
(assert
 (let ((?x5843 (* 2.0 l_0_4_69)))
 (let ((?x5844 (* ?x5843 l_0_4_81)))
 (let ((?x5840 (* 2.0 l_0_4_68)))
 (let ((?x5841 (* ?x5840 l_0_4_80)))
 (let ((?x5837 (* 2.0 l_0_4_67)))
 (let ((?x5838 (* ?x5837 l_0_4_79)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x5835 (* ?x5834 l_0_4_80)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x5832 (* ?x5831 l_0_4_79)))
 (let ((?x5829 (* l_0_4_3 l_0_4_3)))
 (let ((?x5827 (* l_0_4_24 l_0_4_24)))
 (let ((?x5825 (* l_0_4_23 l_0_4_23)))
 (let ((?x5823 (* l_0_4_2 l_0_4_2)))
 (let ((?x5802 (* 2.0 l_0_4_102)))
 (let ((?x5803 (* ?x5802 l_0_4_90)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x5800 (* ?x5797 l_0_4_89)))
 (let ((?x5798 (* ?x5797 l_0_4_87)))
 (let ((?x5793 (* 2.0 l_0_4_100)))
 (let ((?x5795 (* ?x5793 l_0_4_88)))
 (let ((?x5794 (* ?x5793 l_0_4_86)))
 (let ((?x5807 (- (- (- (+ (- ?x5794 ?x5795) ?x5798) ?x5800) ?x5803) (* (* 2.0 l_0_4_109) l_0_4_121))))
 (let ((?x5813 (- (- ?x5807 (* (* 2.0 l_0_4_110) l_0_4_122)) (* (* 2.0 l_0_4_111) l_0_4_123))))
 (let ((?x5819 (- (- ?x5813 (* (* 2.0 l_0_4_130) l_0_4_142)) (* (* 2.0 l_0_4_131) l_0_4_143))))
 (let ((?x5828 (- (- (+ (- ?x5819 (* (* 2.0 l_0_4_132) l_0_4_144)) ?x5823) ?x5825) ?x5827)))
 (let ((?x5846 (+ (+ (+ (+ (- (- (+ ?x5828 ?x5829) ?x5832) ?x5835) ?x5838) ?x5841) ?x5844) 1.0)))
 (= ?x5846 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x5943 (* l_0_4_87 l_0_4_87)))
 (let ((?x5940 (* 2.0 l_0_4_87)))
 (let ((?x5941 (* ?x5940 l_0_4_89)))
 (let ((?x5938 (* l_0_4_86 l_0_4_86)))
 (let ((?x5935 (* 2.0 l_0_4_86)))
 (let ((?x5936 (* ?x5935 l_0_4_88)))
 (let ((?x5933 (* l_0_4_66 l_0_4_66)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x5931 (* ?x5834 l_0_4_68)))
 (let ((?x5929 (* l_0_4_65 l_0_4_65)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x5927 (* ?x5831 l_0_4_67)))
 (let ((?x5920 (- (* (* (- 2.0) l_0_4_107) l_0_4_109) (* (* 2.0 l_0_4_108) l_0_4_110))))
 (let ((?x5926 (- (- ?x5920 (* (* 2.0 l_0_4_128) l_0_4_130)) (* (* 2.0 l_0_4_129) l_0_4_131))))
 (let ((?x5942 (- (+ (- (- (+ (- (+ ?x5926 ?x5927) ?x5929) ?x5931) ?x5933) ?x5936) ?x5938) ?x5941)))
 (= (+ (+ ?x5942 ?x5943) 1.0) 0.0)))))))))))))))))
(assert
 (let ((?x5985 (* l_0_4_129 l_0_4_129)))
 (let ((?x5983 (* l_0_4_128 l_0_4_128)))
 (let ((?x5984 (- (- (- _a_0_ (* l_0_4_107 l_0_4_107)) (* l_0_4_108 l_0_4_108)) ?x5983)))
 (let ((?x5990 (+ (+ (- ?x5984 ?x5985) (* 1.0 (* l_0_4_65 l_0_4_65))) (* 1.0 (* l_0_4_66 l_0_4_66)))))
 (let ((?x5996 (- (- ?x5990 (* (* 1.0 l_0_4_86) l_0_4_86)) (* (* 1.0 l_0_4_87) l_0_4_87))))
 (= (- ?x5996 1.0) 0.0)))))))
(assert
 (let ((?x5940 (* 2.0 l_0_4_87)))
 (let ((?x6031 (* ?x5940 l_0_4_92)))
 (let ((?x5935 (* 2.0 l_0_4_86)))
 (let ((?x6029 (* ?x5935 l_0_4_91)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x6027 (* ?x5834 l_0_4_71)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x6025 (* ?x5831 l_0_4_70)))
 (let ((?x6023 (* l_0_4_45 l_0_4_45)))
 (let ((?x6021 (* l_0_4_44 l_0_4_44)))
 (let ((?x5829 (* l_0_4_3 l_0_4_3)))
 (let ((?x5827 (* l_0_4_24 l_0_4_24)))
 (let ((?x5825 (* l_0_4_23 l_0_4_23)))
 (let ((?x5823 (* l_0_4_2 l_0_4_2)))
 (let ((?x6012 (- (* (* (- 2.0) l_0_4_107) l_0_4_112) (* (* 2.0 l_0_4_108) l_0_4_113))))
 (let ((?x6016 (- (- ?x6012 (* (* 2.0 l_0_4_128) l_0_4_133)) (* (* 2.0 l_0_4_129) l_0_4_134))))
 (let ((?x6026 (+ (- (- (+ (- (- (+ ?x6016 ?x5823) ?x5825) ?x5827) ?x5829) ?x6021) ?x6023) ?x6025)))
 (= (+ (- (- (+ ?x6026 ?x6027) ?x6029) ?x6031) 1.0) 0.0)))))))))))))))))))
(assert
 (let ((?x5940 (* 2.0 l_0_4_87)))
 (let ((?x6082 (* ?x5940 l_0_4_96)))
 (let ((?x5935 (* 2.0 l_0_4_86)))
 (let ((?x6080 (* ?x5935 l_0_4_95)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x6078 (* ?x5834 l_0_4_75)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x6076 (* ?x5831 l_0_4_74)))
 (let ((?x5829 (* l_0_4_3 l_0_4_3)))
 (let ((?x5827 (* l_0_4_24 l_0_4_24)))
 (let ((?x5825 (* l_0_4_23 l_0_4_23)))
 (let ((?x5823 (* l_0_4_2 l_0_4_2)))
 (let ((?x6067 (- (* (* (- 2.0) l_0_4_107) l_0_4_116) (* (* 2.0 l_0_4_108) l_0_4_117))))
 (let ((?x6071 (- (- ?x6067 (* (* 2.0 l_0_4_128) l_0_4_137)) (* (* 2.0 l_0_4_129) l_0_4_138))))
 (let ((?x6081 (- (+ (+ (- (+ (+ (- ?x6071 ?x5823) ?x5825) ?x5827) ?x5829) ?x6076) ?x6078) ?x6080)))
 (= (- (- ?x6081 ?x6082) 1.0) 0.0)))))))))))))))))
(assert
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x6131 (* ?x6130 l_0_4_95)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x6128 (* ?x6127 l_0_4_74)))
 (let ((?x6125 (* l_0_4_22 l_0_4_22)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6123 (* ?x6122 l_0_4_32)))
 (let ((?x6124 (- (- (* (* 2.0 l_0_4_1) l_0_4_11) (* l_0_4_1 l_0_4_1)) ?x6123)))
 (= (- (+ (+ ?x6124 ?x6125) ?x6128) ?x6131) 0.0))))))))))
(assert
 (let ((?x5940 (* 2.0 l_0_4_87)))
 (let ((?x6082 (* ?x5940 l_0_4_96)))
 (let ((?x5935 (* 2.0 l_0_4_86)))
 (let ((?x6080 (* ?x5935 l_0_4_95)))
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x6131 (* ?x6130 l_0_4_95)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x6078 (* ?x5834 l_0_4_75)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x6076 (* ?x5831 l_0_4_74)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x6128 (* ?x6127 l_0_4_74)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6177 (* ?x6176 l_0_4_33)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6174 (* ?x6173 l_0_4_32)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6171 (* ?x6122 l_0_4_23)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6166 (* ?x6165 l_0_4_3)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6163 (* ?x6162 l_0_4_2)))
 (let ((?x6161 (- (* (* (- 2.0) l_0_4_1) l_0_4_2) (* (* 2.0 l_0_4_106) l_0_4_116))))
 (let ((?x6172 (+ (- (+ (+ ?x6161 ?x6163) ?x6166) (* (* 2.0 l_0_4_127) l_0_4_137)) ?x6171)))
 (let ((?x6183 (- (- (+ (+ (+ (- (- ?x6172 ?x6174) ?x6177) ?x6128) ?x6076) ?x6078) ?x6131) ?x6080)))
 (= (- ?x6183 ?x6082) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x6241 (* 2.0 l_0_4_90)))
 (let ((?x6242 (* ?x6241 l_0_4_97)))
 (let ((?x6238 (* 2.0 l_0_4_89)))
 (let ((?x6239 (* ?x6238 l_0_4_96)))
 (let ((?x6235 (* 2.0 l_0_4_88)))
 (let ((?x6236 (* ?x6235 l_0_4_95)))
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x6131 (* ?x6130 l_0_4_95)))
 (let ((?x5843 (* 2.0 l_0_4_69)))
 (let ((?x6232 (* ?x5843 l_0_4_76)))
 (let ((?x5840 (* 2.0 l_0_4_68)))
 (let ((?x6230 (* ?x5840 l_0_4_75)))
 (let ((?x5837 (* 2.0 l_0_4_67)))
 (let ((?x6228 (* ?x5837 l_0_4_74)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x6128 (* ?x6127 l_0_4_74)))
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6225 (* ?x6224 l_0_4_34)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6222 (* ?x6221 l_0_4_33)))
 (let ((?x6218 (* 2.0 l_0_4_25)))
 (let ((?x6219 (* ?x6218 l_0_4_32)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6216 (* ?x6122 l_0_4_25)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6214 (* ?x6213 l_0_4_6)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6211 (* ?x6165 l_0_4_5)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6209 (* ?x6162 l_0_4_4)))
 (let ((?x6217 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x6209) ?x6211) ?x6214) ?x6216)))
 (let ((?x6233 (+ (+ (+ (- (- (- (- ?x6217 ?x6219) ?x6222) ?x6225) ?x6128) ?x6228) ?x6230) ?x6232)))
 (= (- (- (- (+ ?x6233 ?x6131) ?x6236) ?x6239) ?x6242) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6334 (* (* 2.0 l_0_4_94) l_0_4_98)))
 (let ((?x6331 (* (* 2.0 l_0_4_93) l_0_4_97)))
 (let ((?x6328 (* (* 2.0 l_0_4_92) l_0_4_96)))
 (let ((?x6325 (* (* 2.0 l_0_4_91) l_0_4_95)))
 (let ((?x6321 (* 2.0 l_0_4_73)))
 (let ((?x6322 (* ?x6321 l_0_4_77)))
 (let ((?x6318 (* 2.0 l_0_4_72)))
 (let ((?x6319 (* ?x6318 l_0_4_76)))
 (let ((?x6315 (* 2.0 l_0_4_71)))
 (let ((?x6316 (* ?x6315 l_0_4_75)))
 (let ((?x6312 (* 2.0 l_0_4_70)))
 (let ((?x6313 (* ?x6312 l_0_4_74)))
 (let ((?x6306 (* 2.0 l_0_4_31)))
 (let ((?x6307 (* ?x6306 l_0_4_35)))
 (let ((?x6303 (* 2.0 l_0_4_30)))
 (let ((?x6304 (* ?x6303 l_0_4_34)))
 (let ((?x6300 (* 2.0 l_0_4_29)))
 (let ((?x6301 (* ?x6300 l_0_4_33)))
 (let ((?x6297 (* 2.0 l_0_4_28)))
 (let ((?x6298 (* ?x6297 l_0_4_32)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6123 (* ?x6122 l_0_4_32)))
 (let ((?x6294 (* ?x6122 l_0_4_28)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6292 (* ?x6213 l_0_4_9)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6290 (* ?x6165 l_0_4_8)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6288 (* ?x6162 l_0_4_7)))
 (let ((?x6285 (* 2.0 l_0_4_10)))
 (let ((?x6286 (* ?x6285 l_0_4_14)))
 (let ((?x6118 (* 2.0 l_0_4_1)))
 (let ((?x6283 (* ?x6118 l_0_4_7)))
 (let ((?x6119 (* ?x6118 l_0_4_11)))
 (let ((?x6296 (- (+ (+ (+ (+ (+ (- ?x6119 ?x6283) ?x6286) ?x6288) ?x6290) ?x6292) ?x6294) ?x6123)))
 (let ((?x6311 (- (- (- (- (- ?x6296 ?x6298) ?x6301) ?x6304) ?x6307) (* (* 2.0 l_0_4_43) l_0_4_53))))
 (let ((?x6332 (- (- (- (+ (+ (+ (+ ?x6311 ?x6313) ?x6316) ?x6319) ?x6322) ?x6325) ?x6328) ?x6331)))
 (= (- ?x6332 ?x6334) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6436 (* l_0_4_99 l_0_4_99)))
 (let ((?x6434 (* l_0_4_98 l_0_4_98)))
 (let ((?x6432 (* l_0_4_97 l_0_4_97)))
 (let ((?x6430 (* l_0_4_96 l_0_4_96)))
 (let ((?x6428 (* l_0_4_95 l_0_4_95)))
 (let ((?x6426 (* l_0_4_78 l_0_4_78)))
 (let ((?x6424 (* l_0_4_77 l_0_4_77)))
 (let ((?x6422 (* l_0_4_76 l_0_4_76)))
 (let ((?x6420 (* l_0_4_75 l_0_4_75)))
 (let ((?x6418 (* l_0_4_74 l_0_4_74)))
 (let ((?x6416 (* l_0_4_36 l_0_4_36)))
 (let ((?x6414 (* l_0_4_35 l_0_4_35)))
 (let ((?x6412 (* l_0_4_34 l_0_4_34)))
 (let ((?x6410 (* l_0_4_33 l_0_4_33)))
 (let ((?x6408 (* l_0_4_32 l_0_4_32)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6123 (* ?x6122 l_0_4_32)))
 (let ((?x6405 (* l_0_4_15 l_0_4_15)))
 (let ((?x6403 (* l_0_4_14 l_0_4_14)))
 (let ((?x6401 (* l_0_4_13 l_0_4_13)))
 (let ((?x6399 (* l_0_4_12 l_0_4_12)))
 (let ((?x6400 (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) (* l_0_4_11 l_0_4_11)) ?x6399)))
 (let ((?x6413 (- (- (- (+ (+ (+ (+ ?x6400 ?x6401) ?x6403) ?x6405) ?x6123) ?x6408) ?x6410) ?x6412)))
 (let ((?x6427 (+ (+ (+ (+ (+ (- (- ?x6413 ?x6414) ?x6416) ?x6418) ?x6420) ?x6422) ?x6424) ?x6426)))
 (= (- (- (- (- (- ?x6427 ?x6428) ?x6430) ?x6432) ?x6434) ?x6436) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x6508 (* (* 2.0 l_0_4_78) l_0_4_83)))
 (let ((?x6505 (* (* 2.0 l_0_4_77) l_0_4_82)))
 (let ((?x6502 (* (* 2.0 l_0_4_76) l_0_4_81)))
 (let ((?x6499 (* (* 2.0 l_0_4_75) l_0_4_80)))
 (let ((?x6496 (* (* 2.0 l_0_4_74) l_0_4_79)))
 (let ((?x6493 (* (* 2.0 l_0_4_36) l_0_4_41)))
 (let ((?x6490 (* (* 2.0 l_0_4_35) l_0_4_40)))
 (let ((?x6487 (* (* 2.0 l_0_4_34) l_0_4_39)))
 (let ((?x6484 (* (* 2.0 l_0_4_33) l_0_4_38)))
 (let ((?x6481 (* (* 2.0 l_0_4_32) l_0_4_37)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6478 (* ?x6122 l_0_4_37)))
 (let ((?x6476 (* (* 2.0 l_0_4_15) l_0_4_20)))
 (let ((?x6473 (* (* 2.0 l_0_4_14) l_0_4_19)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6470 (* ?x6213 l_0_4_18)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6468 (* ?x6165 l_0_4_17)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6466 (* ?x6162 l_0_4_16)))
 (let ((?x6464 (* (* 2.0 l_0_4_104) l_0_4_99)))
 (let ((?x6460 (* 2.0 l_0_4_103)))
 (let ((?x6461 (* ?x6460 l_0_4_98)))
 (let ((?x5802 (* 2.0 l_0_4_102)))
 (let ((?x6458 (* ?x5802 l_0_4_97)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x6456 (* ?x5797 l_0_4_96)))
 (let ((?x5793 (* 2.0 l_0_4_100)))
 (let ((?x6454 (* ?x5793 l_0_4_95)))
 (let ((?x6462 (- (- (- (- (* (* (- 2.0) l_0_4_1) l_0_4_16) ?x6454) ?x6456) ?x6458) ?x6461)))
 (let ((?x6479 (+ (+ (+ (+ (+ (+ (- ?x6462 ?x6464) ?x6466) ?x6468) ?x6470) ?x6473) ?x6476) ?x6478)))
 (let ((?x6500 (+ (+ (- (- (- (- (- ?x6479 ?x6481) ?x6484) ?x6487) ?x6490) ?x6493) ?x6496) ?x6499)))
 (= (+ (+ (+ ?x6500 ?x6502) ?x6505) ?x6508) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6241 (* 2.0 l_0_4_90)))
 (let ((?x6242 (* ?x6241 l_0_4_97)))
 (let ((?x6238 (* 2.0 l_0_4_89)))
 (let ((?x6239 (* ?x6238 l_0_4_96)))
 (let ((?x6235 (* 2.0 l_0_4_88)))
 (let ((?x6236 (* ?x6235 l_0_4_95)))
 (let ((?x5940 (* 2.0 l_0_4_87)))
 (let ((?x6082 (* ?x5940 l_0_4_96)))
 (let ((?x5935 (* 2.0 l_0_4_86)))
 (let ((?x6080 (* ?x5935 l_0_4_95)))
 (let ((?x5843 (* 2.0 l_0_4_69)))
 (let ((?x6232 (* ?x5843 l_0_4_76)))
 (let ((?x5840 (* 2.0 l_0_4_68)))
 (let ((?x6230 (* ?x5840 l_0_4_75)))
 (let ((?x5837 (* 2.0 l_0_4_67)))
 (let ((?x6228 (* ?x5837 l_0_4_74)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x6078 (* ?x5834 l_0_4_75)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x6076 (* ?x5831 l_0_4_74)))
 (let ((?x6580 (* 2.0 l_0_4_3)))
 (let ((?x6581 (* ?x6580 l_0_4_5)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6578 (* ?x6176 l_0_4_26)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6576 (* ?x6173 l_0_4_25)))
 (let ((?x6573 (* 2.0 l_0_4_2)))
 (let ((?x6574 (* ?x6573 l_0_4_4)))
 (let ((?x6549 (- (* (* (- 2.0) l_0_4_109) l_0_4_116) (* (* 2.0 l_0_4_110) l_0_4_117))))
 (let ((?x6568 (- (- ?x6549 (* (* 2.0 l_0_4_111) l_0_4_118)) (* (* 2.0 l_0_4_130) l_0_4_137))))
 (let ((?x6572 (- (- ?x6568 (* (* 2.0 l_0_4_131) l_0_4_138)) (* (* 2.0 l_0_4_132) l_0_4_139))))
 (let ((?x6585 (+ (- (- (- (+ (+ (- ?x6572 ?x6574) ?x6576) ?x6578) ?x6581) ?x6076) ?x6078) ?x6228)))
 (let ((?x6592 (- (- (- (+ (+ (+ (+ ?x6585 ?x6230) ?x6232) ?x6080) ?x6082) ?x6236) ?x6239) ?x6242)))
 (= ?x6592 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6334 (* (* 2.0 l_0_4_94) l_0_4_98)))
 (let ((?x6331 (* (* 2.0 l_0_4_93) l_0_4_97)))
 (let ((?x6328 (* (* 2.0 l_0_4_92) l_0_4_96)))
 (let ((?x6325 (* (* 2.0 l_0_4_91) l_0_4_95)))
 (let ((?x6321 (* 2.0 l_0_4_73)))
 (let ((?x6322 (* ?x6321 l_0_4_77)))
 (let ((?x6318 (* 2.0 l_0_4_72)))
 (let ((?x6319 (* ?x6318 l_0_4_76)))
 (let ((?x6315 (* 2.0 l_0_4_71)))
 (let ((?x6316 (* ?x6315 l_0_4_75)))
 (let ((?x6312 (* 2.0 l_0_4_70)))
 (let ((?x6313 (* ?x6312 l_0_4_74)))
 (let ((?x6580 (* 2.0 l_0_4_3)))
 (let ((?x6627 (* ?x6580 l_0_4_8)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6177 (* ?x6176 l_0_4_33)))
 (let ((?x6624 (* ?x6176 l_0_4_29)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6174 (* ?x6173 l_0_4_32)))
 (let ((?x6621 (* ?x6173 l_0_4_28)))
 (let ((?x6573 (* 2.0 l_0_4_2)))
 (let ((?x6619 (* ?x6573 l_0_4_7)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6166 (* ?x6165 l_0_4_3)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6163 (* ?x6162 l_0_4_2)))
 (let ((?x2859 (- (- ?x6163 (* (* 2.0 l_0_4_112) l_0_4_116)) (* (* 2.0 l_0_4_113) l_0_4_117))))
 (let ((?x6605 (- (- ?x2859 (* (* 2.0 l_0_4_114) l_0_4_118)) (* (* 2.0 l_0_4_115) l_0_4_119))))
 (let ((?x6612 (- (- (+ ?x6605 ?x6166) (* (* 2.0 l_0_4_133) l_0_4_137)) (* (* 2.0 l_0_4_134) l_0_4_138))))
 (let ((?x6618 (- (- ?x6612 (* (* 2.0 l_0_4_135) l_0_4_139)) (* (* 2.0 l_0_4_136) l_0_4_140))))
 (let ((?x6631 (- (- (- (+ (- (+ (- ?x6618 ?x6619) ?x6621) ?x6174) ?x6624) ?x6177) ?x6627) (* (* 2.0 l_0_4_44) l_0_4_53))))
 (let ((?x6637 (+ (+ (+ (- ?x6631 (* (* 2.0 l_0_4_45) l_0_4_54)) ?x6313) ?x6316) ?x6319)))
 (= (- (- (- (- (+ ?x6637 ?x6322) ?x6325) ?x6328) ?x6331) ?x6334) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6177 (* ?x6176 l_0_4_33)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6174 (* ?x6173 l_0_4_32)))
 (let ((?x6697 (* l_0_4_141 l_0_4_141)))
 (let ((?x6695 (* l_0_4_140 l_0_4_140)))
 (let ((?x6693 (* l_0_4_139 l_0_4_139)))
 (let ((?x6691 (* l_0_4_138 l_0_4_138)))
 (let ((?x6689 (* l_0_4_137 l_0_4_137)))
 (let ((?x6687 (* l_0_4_120 l_0_4_120)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6166 (* ?x6165 l_0_4_3)))
 (let ((?x6684 (* l_0_4_119 l_0_4_119)))
 (let ((?x3293 (* l_0_4_118 l_0_4_118)))
 (let ((?x3290 (* l_0_4_117 l_0_4_117)))
 (let ((?x3292 (- (- (* (* (- 2.0) l_0_4_11) l_0_4_2) (* l_0_4_116 l_0_4_116)) ?x3290)))
 (let ((?x6694 (- (- (- (- (- (- (- ?x3292 ?x3293) ?x6684) ?x6166) ?x6687) ?x6689) ?x6691) ?x6693)))
 (let ((?x6702 (+ (+ (+ (- (- ?x6694 ?x6695) ?x6697) ?x6174) ?x6177) (* 1.0 (* l_0_4_74 l_0_4_74)))))
 (let ((?x6706 (+ (+ ?x6702 (* 1.0 (* l_0_4_75 l_0_4_75))) (* 1.0 (* l_0_4_76 l_0_4_76)))))
 (let ((?x6710 (+ (+ ?x6706 (* 1.0 (* l_0_4_77 l_0_4_77))) (* 1.0 (* l_0_4_78 l_0_4_78)))))
 (let ((?x6716 (- (- ?x6710 (* (* 1.0 l_0_4_95) l_0_4_95)) (* (* 1.0 l_0_4_96) l_0_4_96))))
 (let ((?x6722 (- (- ?x6716 (* (* 1.0 l_0_4_97) l_0_4_97)) (* (* 1.0 l_0_4_98) l_0_4_98))))
 (= (- ?x6722 (* (* 1.0 l_0_4_99) l_0_4_99)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x6508 (* (* 2.0 l_0_4_78) l_0_4_83)))
 (let ((?x6505 (* (* 2.0 l_0_4_77) l_0_4_82)))
 (let ((?x6502 (* (* 2.0 l_0_4_76) l_0_4_81)))
 (let ((?x6499 (* (* 2.0 l_0_4_75) l_0_4_80)))
 (let ((?x6496 (* (* 2.0 l_0_4_74) l_0_4_79)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6783 (* ?x6176 l_0_4_38)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6781 (* ?x6173 l_0_4_37)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x6779 (* ?x6778 l_0_4_3)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x6776 (* ?x6775 l_0_4_2)))
 (let ((?x6464 (* (* 2.0 l_0_4_104) l_0_4_99)))
 (let ((?x6460 (* 2.0 l_0_4_103)))
 (let ((?x6461 (* ?x6460 l_0_4_98)))
 (let ((?x5802 (* 2.0 l_0_4_102)))
 (let ((?x6458 (* ?x5802 l_0_4_97)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x6456 (* ?x5797 l_0_4_96)))
 (let ((?x6744 (- (- (- (- (* (* (- 2.0) l_0_4_100) l_0_4_95) ?x6456) ?x6458) ?x6461) ?x6464)))
 (let ((?x6750 (- (- ?x6744 (* (* 2.0 l_0_4_116) l_0_4_121)) (* (* 2.0 l_0_4_117) l_0_4_122))))
 (let ((?x6756 (- (- ?x6750 (* (* 2.0 l_0_4_118) l_0_4_123)) (* (* 2.0 l_0_4_119) l_0_4_124))))
 (let ((?x6762 (- (- ?x6756 (* (* 2.0 l_0_4_120) l_0_4_125)) (* (* 2.0 l_0_4_137) l_0_4_142))))
 (let ((?x6768 (- (- ?x6762 (* (* 2.0 l_0_4_138) l_0_4_143)) (* (* 2.0 l_0_4_139) l_0_4_144))))
 (let ((?x6774 (- (- ?x6768 (* (* 2.0 l_0_4_140) l_0_4_145)) (* (* 2.0 l_0_4_141) l_0_4_146))))
 (let ((?x6787 (+ (+ (+ (+ (+ (- (- ?x6774 ?x6776) ?x6779) ?x6781) ?x6783) ?x6496) ?x6499) ?x6502)))
 (= (+ (+ ?x6787 ?x6505) ?x6508) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x6241 (* 2.0 l_0_4_90)))
 (let ((?x6242 (* ?x6241 l_0_4_97)))
 (let ((?x6238 (* 2.0 l_0_4_89)))
 (let ((?x6239 (* ?x6238 l_0_4_96)))
 (let ((?x6235 (* 2.0 l_0_4_88)))
 (let ((?x6236 (* ?x6235 l_0_4_95)))
 (let ((?x5843 (* 2.0 l_0_4_69)))
 (let ((?x6232 (* ?x5843 l_0_4_76)))
 (let ((?x5840 (* 2.0 l_0_4_68)))
 (let ((?x6230 (* ?x5840 l_0_4_75)))
 (let ((?x5837 (* 2.0 l_0_4_67)))
 (let ((?x6228 (* ?x5837 l_0_4_74)))
 (let ((?x6824 (* l_0_4_6 l_0_4_6)))
 (let ((?x6822 (* l_0_4_5 l_0_4_5)))
 (let ((?x6820 (* l_0_4_4 l_0_4_4)))
 (let ((?x6818 (* l_0_4_27 l_0_4_27)))
 (let ((?x6821 (- (+ (+ (* l_0_4_25 l_0_4_25) (* l_0_4_26 l_0_4_26)) ?x6818) ?x6820)))
 (let ((?x6830 (+ (+ (- (- (- (- (- ?x6821 ?x6822) ?x6824) ?x6228) ?x6230) ?x6232) ?x6236) ?x6239)))
 (= (+ ?x6830 ?x6242) 0.0))))))))))))))))))))
(assert
 (let ((?x6334 (* (* 2.0 l_0_4_94) l_0_4_98)))
 (let ((?x6331 (* (* 2.0 l_0_4_93) l_0_4_97)))
 (let ((?x6328 (* (* 2.0 l_0_4_92) l_0_4_96)))
 (let ((?x6325 (* (* 2.0 l_0_4_91) l_0_4_95)))
 (let ((?x6321 (* 2.0 l_0_4_73)))
 (let ((?x6322 (* ?x6321 l_0_4_77)))
 (let ((?x6318 (* 2.0 l_0_4_72)))
 (let ((?x6319 (* ?x6318 l_0_4_76)))
 (let ((?x6315 (* 2.0 l_0_4_71)))
 (let ((?x6316 (* ?x6315 l_0_4_75)))
 (let ((?x6312 (* 2.0 l_0_4_70)))
 (let ((?x6313 (* ?x6312 l_0_4_74)))
 (let ((?x6867 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6864 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6852 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6225 (* ?x6224 l_0_4_34)))
 (let ((?x6848 (* ?x6224 l_0_4_30)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6222 (* ?x6221 l_0_4_33)))
 (let ((?x6845 (* ?x6221 l_0_4_29)))
 (let ((?x6218 (* 2.0 l_0_4_25)))
 (let ((?x6219 (* ?x6218 l_0_4_32)))
 (let ((?x6842 (* ?x6218 l_0_4_28)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6214 (* ?x6213 l_0_4_6)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6211 (* ?x6165 l_0_4_5)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6209 (* ?x6162 l_0_4_4)))
 (let ((?x3740 (+ (+ ?x6209 ?x6211) ?x6214)))
 (let ((?x6853 (- (- (+ (- (+ (- (+ ?x3740 ?x6842) ?x6219) ?x6845) ?x6222) ?x6848) ?x6225) ?x6852)))
 (let ((?x6859 (- (- ?x6853 (* (* 2.0 l_0_4_46) l_0_4_53)) (* (* 2.0 l_0_4_47) l_0_4_54))))
 (let ((?x6869 (- (- (- (- ?x6859 (* (* 2.0 l_0_4_48) l_0_4_55)) ?x6864) ?x6867) ?x6313)))
 (let ((?x6876 (+ (+ (+ (+ (- (- (- ?x6869 ?x6316) ?x6319) ?x6322) ?x6325) ?x6328) ?x6331) ?x6334)))
 (= ?x6876 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6436 (* l_0_4_99 l_0_4_99)))
 (let ((?x6434 (* l_0_4_98 l_0_4_98)))
 (let ((?x6432 (* l_0_4_97 l_0_4_97)))
 (let ((?x6430 (* l_0_4_96 l_0_4_96)))
 (let ((?x6428 (* l_0_4_95 l_0_4_95)))
 (let ((?x6426 (* l_0_4_78 l_0_4_78)))
 (let ((?x6424 (* l_0_4_77 l_0_4_77)))
 (let ((?x6422 (* l_0_4_76 l_0_4_76)))
 (let ((?x6420 (* l_0_4_75 l_0_4_75)))
 (let ((?x6418 (* l_0_4_74 l_0_4_74)))
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6225 (* ?x6224 l_0_4_34)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6222 (* ?x6221 l_0_4_33)))
 (let ((?x6218 (* 2.0 l_0_4_25)))
 (let ((?x6219 (* ?x6218 l_0_4_32)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6214 (* ?x6213 l_0_4_6)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6211 (* ?x6165 l_0_4_5)))
 (let ((?x6906 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x6211) ?x6214) ?x6219) ?x6222)))
 (let ((?x6913 (+ (- (- (- (- (- (+ ?x6906 ?x6225) ?x6418) ?x6420) ?x6422) ?x6424) ?x6426) ?x6428)))
 (= (+ (+ (+ (+ ?x6913 ?x6430) ?x6432) ?x6434) ?x6436) 0.0))))))))))))))))))))))))
(assert
 (let ((?x6508 (* (* 2.0 l_0_4_78) l_0_4_83)))
 (let ((?x6505 (* (* 2.0 l_0_4_77) l_0_4_82)))
 (let ((?x6502 (* (* 2.0 l_0_4_76) l_0_4_81)))
 (let ((?x6499 (* (* 2.0 l_0_4_75) l_0_4_80)))
 (let ((?x6496 (* (* 2.0 l_0_4_74) l_0_4_79)))
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6948 (* ?x6224 l_0_4_39)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6946 (* ?x6221 l_0_4_38)))
 (let ((?x6218 (* 2.0 l_0_4_25)))
 (let ((?x6944 (* ?x6218 l_0_4_37)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6177 (* ?x6176 l_0_4_33)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6174 (* ?x6173 l_0_4_32)))
 (let ((?x6939 (* 2.0 l_0_4_18)))
 (let ((?x6940 (* ?x6939 l_0_4_6)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x6937 (* ?x6778 l_0_4_5)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x6935 (* ?x6775 l_0_4_4)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6166 (* ?x6165 l_0_4_3)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6163 (* ?x6162 l_0_4_2)))
 (let ((?x6464 (* (* 2.0 l_0_4_104) l_0_4_99)))
 (let ((?x6460 (* 2.0 l_0_4_103)))
 (let ((?x6461 (* ?x6460 l_0_4_98)))
 (let ((?x5802 (* 2.0 l_0_4_102)))
 (let ((?x6458 (* ?x5802 l_0_4_97)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x6456 (* ?x5797 l_0_4_96)))
 (let ((?x5793 (* 2.0 l_0_4_100)))
 (let ((?x6454 (* ?x5793 l_0_4_95)))
 (let ((?x6936 (- (+ (+ (+ (+ (+ (+ ?x6454 ?x6456) ?x6458) ?x6461) ?x6464) ?x6163) ?x6166) ?x6935)))
 (let ((?x6949 (+ (+ (+ (- (- (- (- ?x6936 ?x6937) ?x6940) ?x6174) ?x6177) ?x6944) ?x6946) ?x6948)))
 (= (- (- (- (- (- ?x6949 ?x6496) ?x6499) ?x6502) ?x6505) ?x6508) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7009 (* l_0_4_9 l_0_4_9)))
 (let ((?x7007 (* l_0_4_8 l_0_4_8)))
 (let ((?x7005 (* l_0_4_7 l_0_4_7)))
 (let ((?x6991 (* l_0_4_31 l_0_4_31)))
 (let ((?x6306 (* 2.0 l_0_4_31)))
 (let ((?x6307 (* ?x6306 l_0_4_35)))
 (let ((?x6988 (* l_0_4_30 l_0_4_30)))
 (let ((?x6303 (* 2.0 l_0_4_30)))
 (let ((?x6304 (* ?x6303 l_0_4_34)))
 (let ((?x6985 (* l_0_4_29 l_0_4_29)))
 (let ((?x6300 (* 2.0 l_0_4_29)))
 (let ((?x6301 (* ?x6300 l_0_4_33)))
 (let ((?x6982 (* l_0_4_28 l_0_4_28)))
 (let ((?x6297 (* 2.0 l_0_4_28)))
 (let ((?x6298 (* ?x6297 l_0_4_32)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6292 (* ?x6213 l_0_4_9)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6290 (* ?x6165 l_0_4_8)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6288 (* ?x6162 l_0_4_7)))
 (let ((?x6978 (+ (- (* (* 2.0 l_0_4_10) l_0_4_14) (* l_0_4_10 l_0_4_10)) ?x6288)))
 (let ((?x6987 (- (+ (- (+ (- (+ (+ ?x6978 ?x6290) ?x6292) ?x6298) ?x6982) ?x6301) ?x6985) ?x6304)))
 (let ((?x6995 (- (+ (- (+ ?x6987 ?x6988) ?x6307) ?x6991) (* (* 2.0 l_0_4_49) l_0_4_53))))
 (let ((?x7001 (- (- ?x6995 (* (* 2.0 l_0_4_50) l_0_4_54)) (* (* 2.0 l_0_4_51) l_0_4_55))))
 (let ((?x7010 (- (- (- (- ?x7001 (* (* 2.0 l_0_4_52) l_0_4_56)) ?x7005) ?x7007) ?x7009)))
 (= ?x7010 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x7052 (* l_0_4_57 l_0_4_57)))
 (let ((?x7050 (* l_0_4_56 l_0_4_56)))
 (let ((?x7048 (* l_0_4_55 l_0_4_55)))
 (let ((?x7046 (* l_0_4_54 l_0_4_54)))
 (let ((?x7044 (* l_0_4_53 l_0_4_53)))
 (let ((?x6416 (* l_0_4_36 l_0_4_36)))
 (let ((?x6414 (* l_0_4_35 l_0_4_35)))
 (let ((?x6412 (* l_0_4_34 l_0_4_34)))
 (let ((?x6410 (* l_0_4_33 l_0_4_33)))
 (let ((?x6408 (* l_0_4_32 l_0_4_32)))
 (let ((?x6306 (* 2.0 l_0_4_31)))
 (let ((?x6307 (* ?x6306 l_0_4_35)))
 (let ((?x6303 (* 2.0 l_0_4_30)))
 (let ((?x6304 (* ?x6303 l_0_4_34)))
 (let ((?x6300 (* 2.0 l_0_4_29)))
 (let ((?x6301 (* ?x6300 l_0_4_33)))
 (let ((?x6297 (* 2.0 l_0_4_28)))
 (let ((?x6298 (* ?x6297 l_0_4_32)))
 (let ((?x6405 (* l_0_4_15 l_0_4_15)))
 (let ((?x6403 (* l_0_4_14 l_0_4_14)))
 (let ((?x6401 (* l_0_4_13 l_0_4_13)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6292 (* ?x6213 l_0_4_9)))
 (let ((?x6399 (* l_0_4_12 l_0_4_12)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6290 (* ?x6165 l_0_4_8)))
 (let ((?x6397 (* l_0_4_11 l_0_4_11)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6288 (* ?x6162 l_0_4_7)))
 (let ((?x7030 (+ (- (+ (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x6288) ?x6397) ?x6290) ?x6399)))
 (let ((?x7037 (+ (+ (+ (+ (+ (+ (- ?x7030 ?x6292) ?x6401) ?x6403) ?x6405) ?x6298) ?x6301) ?x6304)))
 (let ((?x7045 (- (- (- (- (- (- (+ ?x7037 ?x6307) ?x6408) ?x6410) ?x6412) ?x6414) ?x6416) ?x7044)))
 (= (- (- (- (- ?x7045 ?x7046) ?x7048) ?x7050) ?x7052) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6493 (* (* 2.0 l_0_4_36) l_0_4_41)))
 (let ((?x6490 (* (* 2.0 l_0_4_35) l_0_4_40)))
 (let ((?x6487 (* (* 2.0 l_0_4_34) l_0_4_39)))
 (let ((?x6484 (* (* 2.0 l_0_4_33) l_0_4_38)))
 (let ((?x6481 (* (* 2.0 l_0_4_32) l_0_4_37)))
 (let ((?x6306 (* 2.0 l_0_4_31)))
 (let ((?x7085 (* ?x6306 l_0_4_40)))
 (let ((?x6303 (* 2.0 l_0_4_30)))
 (let ((?x7083 (* ?x6303 l_0_4_39)))
 (let ((?x6300 (* 2.0 l_0_4_29)))
 (let ((?x7081 (* ?x6300 l_0_4_38)))
 (let ((?x6297 (* 2.0 l_0_4_28)))
 (let ((?x7079 (* ?x6297 l_0_4_37)))
 (let ((?x6939 (* 2.0 l_0_4_18)))
 (let ((?x7077 (* ?x6939 l_0_4_9)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x7075 (* ?x6778 l_0_4_8)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x7073 (* ?x6775 l_0_4_7)))
 (let ((?x6476 (* (* 2.0 l_0_4_15) l_0_4_20)))
 (let ((?x6473 (* (* 2.0 l_0_4_14) l_0_4_19)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6470 (* ?x6213 l_0_4_18)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6468 (* ?x6165 l_0_4_17)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6466 (* ?x6162 l_0_4_16)))
 (let ((?x7071 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_10) l_0_4_19) ?x6466) ?x6468) ?x6470) ?x6473)))
 (let ((?x7084 (+ (+ (+ (- (- (- (+ ?x7071 ?x6476) ?x7073) ?x7075) ?x7077) ?x7079) ?x7081) ?x7083)))
 (let ((?x7094 (- (- (- (- (- (- (+ ?x7084 ?x7085) ?x6481) ?x6484) ?x6487) ?x6490) ?x6493) (* (* 2.0 l_0_4_53) l_0_4_58))))
 (let ((?x7100 (- (- ?x7094 (* (* 2.0 l_0_4_54) l_0_4_59)) (* (* 2.0 l_0_4_55) l_0_4_60))))
 (let ((?x7106 (- (- ?x7100 (* (* 2.0 l_0_4_56) l_0_4_61)) (* (* 2.0 l_0_4_57) l_0_4_62))))
 (= ?x7106 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6416 (* l_0_4_36 l_0_4_36)))
 (let ((?x6414 (* l_0_4_35 l_0_4_35)))
 (let ((?x6412 (* l_0_4_34 l_0_4_34)))
 (let ((?x6410 (* l_0_4_33 l_0_4_33)))
 (let ((?x6408 (* l_0_4_32 l_0_4_32)))
 (let ((?x6405 (* l_0_4_15 l_0_4_15)))
 (let ((?x6403 (* l_0_4_14 l_0_4_14)))
 (let ((?x6401 (* l_0_4_13 l_0_4_13)))
 (let ((?x7129 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x6401) ?x6403)))
 (= (+ (+ (+ (+ (+ (- ?x7129 ?x6405) ?x6408) ?x6410) ?x6412) ?x6414) ?x6416) 0.0)))))))))))
(assert
 (let ((?x6493 (* (* 2.0 l_0_4_36) l_0_4_41)))
 (let ((?x6490 (* (* 2.0 l_0_4_35) l_0_4_40)))
 (let ((?x6487 (* (* 2.0 l_0_4_34) l_0_4_39)))
 (let ((?x6484 (* (* 2.0 l_0_4_33) l_0_4_38)))
 (let ((?x6481 (* (* 2.0 l_0_4_32) l_0_4_37)))
 (let ((?x6476 (* (* 2.0 l_0_4_15) l_0_4_20)))
 (let ((?x6473 (* (* 2.0 l_0_4_14) l_0_4_19)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6470 (* ?x6213 l_0_4_18)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6468 (* ?x6165 l_0_4_17)))
 (let ((?x7141 (- (- (- (- (* (* (- 2.0) l_0_4_11) l_0_4_16) ?x6468) ?x6470) ?x6473) ?x6476)))
 (= (+ (+ (+ (+ (+ ?x7141 ?x6481) ?x6484) ?x6487) ?x6490) ?x6493) 0.0))))))))))))))
(assert
 (let ((?x7177 (* l_0_4_42 l_0_4_42)))
 (let ((?x7175 (* l_0_4_41 l_0_4_41)))
 (let ((?x7173 (* l_0_4_40 l_0_4_40)))
 (let ((?x7171 (* l_0_4_39 l_0_4_39)))
 (let ((?x7169 (* l_0_4_38 l_0_4_38)))
 (let ((?x7167 (* l_0_4_37 l_0_4_37)))
 (let ((?x7165 (* l_0_4_21 l_0_4_21)))
 (let ((?x7163 (* l_0_4_20 l_0_4_20)))
 (let ((?x7161 (* l_0_4_19 l_0_4_19)))
 (let ((?x7159 (* l_0_4_18 l_0_4_18)))
 (let ((?x7162 (- (- (- (* (- l_0_4_16) l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x7159) ?x7161)))
 (let ((?x7176 (+ (+ (+ (+ (+ (- (- ?x7162 ?x7163) ?x7165) ?x7167) ?x7169) ?x7171) ?x7173) ?x7175)))
 (= (+ ?x7176 ?x7177) 0.0))))))))))))))
(assert
 (let ((?x6125 (* l_0_4_22 l_0_4_22)))
 (let ((?x6120 (* l_0_4_1 l_0_4_1)))
 (let ((?x4313 (- ?x6120 ?x6125)))
 (= ?x4313 0.0)))))
(assert
 (let ((?x5843 (* 2.0 l_0_4_69)))
 (let ((?x5844 (* ?x5843 l_0_4_81)))
 (let ((?x5840 (* 2.0 l_0_4_68)))
 (let ((?x5841 (* ?x5840 l_0_4_80)))
 (let ((?x5837 (* 2.0 l_0_4_67)))
 (let ((?x5838 (* ?x5837 l_0_4_79)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7213 (* ?x6127 l_0_4_79)))
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6948 (* ?x6224 l_0_4_39)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6946 (* ?x6221 l_0_4_38)))
 (let ((?x6218 (* 2.0 l_0_4_25)))
 (let ((?x6944 (* ?x6218 l_0_4_37)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6171 (* ?x6122 l_0_4_23)))
 (let ((?x6939 (* 2.0 l_0_4_18)))
 (let ((?x6940 (* ?x6939 l_0_4_6)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x6937 (* ?x6778 l_0_4_5)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x6935 (* ?x6775 l_0_4_4)))
 (let ((?x5802 (* 2.0 l_0_4_102)))
 (let ((?x5803 (* ?x5802 l_0_4_90)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x5800 (* ?x5797 l_0_4_89)))
 (let ((?x5793 (* 2.0 l_0_4_100)))
 (let ((?x5795 (* ?x5793 l_0_4_88)))
 (let ((?x7204 (- (- (+ (* (* 2.0 l_0_4_1) l_0_4_2) (* ?x5793 l_0_4_85)) ?x5795) ?x5800)))
 (let ((?x7211 (- (- (- (+ (+ (+ (- ?x7204 ?x5803) ?x6935) ?x6937) ?x6940) ?x6171) ?x6944) ?x6946)))
 (= (+ (+ (+ (- (- ?x7211 ?x6948) ?x7213) ?x5838) ?x5841) ?x5844) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6216 (* ?x6122 l_0_4_25)))
 (let ((?x4326 (- (* (* 2.0 l_0_4_1) l_0_4_4) ?x6216)))
 (= ?x4326 0.0)))))
(assert
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6294 (* ?x6122 l_0_4_28)))
 (let ((?x6118 (* 2.0 l_0_4_1)))
 (let ((?x6283 (* ?x6118 l_0_4_7)))
 (= (- ?x6283 ?x6294) 0.0))))))
(assert
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6123 (* ?x6122 l_0_4_32)))
 (let ((?x6118 (* 2.0 l_0_4_1)))
 (let ((?x6119 (* ?x6118 l_0_4_11)))
 (= (- ?x6119 ?x6123) 0.0))))))
(assert
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6478 (* ?x6122 l_0_4_37)))
 (let ((?x6118 (* 2.0 l_0_4_1)))
 (let ((?x4334 (* ?x6118 l_0_4_16)))
 (= (- ?x4334 ?x6478) 0.0))))))
(assert
 (let ((?x5843 (* 2.0 l_0_4_69)))
 (let ((?x5844 (* ?x5843 l_0_4_81)))
 (let ((?x5840 (* 2.0 l_0_4_68)))
 (let ((?x5841 (* ?x5840 l_0_4_80)))
 (let ((?x5837 (* 2.0 l_0_4_67)))
 (let ((?x5838 (* ?x5837 l_0_4_79)))
 (let ((?x6580 (* 2.0 l_0_4_3)))
 (let ((?x6581 (* ?x6580 l_0_4_5)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6578 (* ?x6176 l_0_4_26)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6576 (* ?x6173 l_0_4_25)))
 (let ((?x6573 (* 2.0 l_0_4_2)))
 (let ((?x6574 (* ?x6573 l_0_4_4)))
 (let ((?x5802 (* 2.0 l_0_4_102)))
 (let ((?x5803 (* ?x5802 l_0_4_90)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x5800 (* ?x5797 l_0_4_89)))
 (let ((?x5793 (* 2.0 l_0_4_100)))
 (let ((?x5795 (* ?x5793 l_0_4_88)))
 (let ((?x7229 (- (+ (- (- (+ (+ (+ ?x5795 ?x5800) ?x5803) ?x6574) ?x6576) ?x6578) ?x6581) ?x5838)))
 (= (- (- ?x7229 ?x5841) ?x5844) 0.0)))))))))))))))))))))))
(assert
 (let ((?x6321 (* 2.0 l_0_4_73)))
 (let ((?x7272 (* ?x6321 l_0_4_82)))
 (let ((?x6318 (* 2.0 l_0_4_72)))
 (let ((?x7270 (* ?x6318 l_0_4_81)))
 (let ((?x6315 (* 2.0 l_0_4_71)))
 (let ((?x7268 (* ?x6315 l_0_4_80)))
 (let ((?x6312 (* 2.0 l_0_4_70)))
 (let ((?x7266 (* ?x6312 l_0_4_79)))
 (let ((?x6580 (* 2.0 l_0_4_3)))
 (let ((?x6627 (* ?x6580 l_0_4_8)))
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6948 (* ?x6224 l_0_4_39)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6946 (* ?x6221 l_0_4_38)))
 (let ((?x6218 (* 2.0 l_0_4_25)))
 (let ((?x6944 (* ?x6218 l_0_4_37)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6624 (* ?x6176 l_0_4_29)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6621 (* ?x6173 l_0_4_28)))
 (let ((?x6573 (* 2.0 l_0_4_2)))
 (let ((?x6619 (* ?x6573 l_0_4_7)))
 (let ((?x6939 (* 2.0 l_0_4_18)))
 (let ((?x6940 (* ?x6939 l_0_4_6)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x6937 (* ?x6778 l_0_4_5)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x6935 (* ?x6775 l_0_4_4)))
 (let ((?x6460 (* 2.0 l_0_4_103)))
 (let ((?x7248 (* ?x6460 l_0_4_94)))
 (let ((?x5802 (* 2.0 l_0_4_102)))
 (let ((?x7246 (* ?x5802 l_0_4_93)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x7244 (* ?x5797 l_0_4_92)))
 (let ((?x5793 (* 2.0 l_0_4_100)))
 (let ((?x7243 (* ?x5793 l_0_4_91)))
 (let ((?x7253 (+ (+ (+ (+ (+ (+ (+ ?x7243 ?x7244) ?x7246) ?x7248) ?x6935) ?x6937) ?x6940) ?x6619)))
 (let ((?x7261 (- (+ (- (- (- (- (- ?x7253 ?x6621) ?x6624) ?x6944) ?x6946) ?x6948) ?x6627) (* (* 2.0 l_0_4_46) l_0_4_58))))
 (let ((?x7265 (- (- ?x7261 (* (* 2.0 l_0_4_47) l_0_4_59)) (* (* 2.0 l_0_4_48) l_0_4_60))))
 (= (- (- (- (- ?x7265 ?x7266) ?x7268) ?x7270) ?x7272) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7317 (* l_0_4_84 l_0_4_84)))
 (let ((?x7315 (* l_0_4_83 l_0_4_83)))
 (let ((?x7313 (* l_0_4_82 l_0_4_82)))
 (let ((?x7311 (* l_0_4_81 l_0_4_81)))
 (let ((?x7309 (* l_0_4_80 l_0_4_80)))
 (let ((?x7307 (* l_0_4_79 l_0_4_79)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6783 (* ?x6176 l_0_4_38)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6781 (* ?x6173 l_0_4_37)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x6779 (* ?x6778 l_0_4_3)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x6776 (* ?x6775 l_0_4_2)))
 (let ((?x7301 (* l_0_4_105 l_0_4_105)))
 (let ((?x7299 (* l_0_4_104 l_0_4_104)))
 (let ((?x7297 (* l_0_4_103 l_0_4_103)))
 (let ((?x4534 (* l_0_4_102 l_0_4_102)))
 (let ((?x7298 (+ (+ (+ (* l_0_4_100 l_0_4_100) (* l_0_4_101 l_0_4_101)) ?x4534) ?x7297)))
 (let ((?x7308 (- (- (- (+ (+ (+ (+ ?x7298 ?x7299) ?x7301) ?x6776) ?x6779) ?x6781) ?x6783) ?x7307)))
 (= (- (- (- (- (- ?x7308 ?x7309) ?x7311) ?x7313) ?x7315) ?x7317) 0.0))))))))))))))))))))))
(assert
 (let ((?x6824 (* l_0_4_6 l_0_4_6)))
 (let ((?x6822 (* l_0_4_5 l_0_4_5)))
 (let ((?x6820 (* l_0_4_4 l_0_4_4)))
 (let ((?x6818 (* l_0_4_27 l_0_4_27)))
 (let ((?x7337 (+ (- (- (* (- l_0_4_25) l_0_4_25) (* l_0_4_26 l_0_4_26)) ?x6818) ?x6820)))
 (let ((?x7339 (+ (+ ?x7337 ?x6822) ?x6824)))
 (= ?x7339 0.0))))))))
(assert
 (let ((?x6867 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6864 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6852 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6848 (* ?x6224 l_0_4_30)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6845 (* ?x6221 l_0_4_29)))
 (let ((?x7347 (+ (- (- (* (* (- 2.0) l_0_4_25) l_0_4_28) ?x6845) ?x6848) ?x6852)))
 (= (+ (+ ?x7347 ?x6864) ?x6867) 0.0))))))))))
(assert
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6225 (* ?x6224 l_0_4_34)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6222 (* ?x6221 l_0_4_33)))
 (let ((?x6218 (* 2.0 l_0_4_25)))
 (let ((?x6219 (* ?x6218 l_0_4_32)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6214 (* ?x6213 l_0_4_6)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6211 (* ?x6165 l_0_4_5)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6209 (* ?x6162 l_0_4_4)))
 (let ((?x3740 (+ (+ ?x6209 ?x6211) ?x6214)))
 (= (- (- (- ?x3740 ?x6219) ?x6222) ?x6225) 0.0)))))))))))))))
(assert
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6948 (* ?x6224 l_0_4_39)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6946 (* ?x6221 l_0_4_38)))
 (let ((?x6218 (* 2.0 l_0_4_25)))
 (let ((?x6944 (* ?x6218 l_0_4_37)))
 (let ((?x6939 (* 2.0 l_0_4_18)))
 (let ((?x6940 (* ?x6939 l_0_4_6)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x6937 (* ?x6778 l_0_4_5)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x6935 (* ?x6775 l_0_4_4)))
 (= (- (- (- (+ (+ ?x6935 ?x6937) ?x6940) ?x6944) ?x6946) ?x6948) 0.0))))))))))))))
(assert
 (let ((?x7009 (* l_0_4_9 l_0_4_9)))
 (let ((?x7007 (* l_0_4_8 l_0_4_8)))
 (let ((?x7005 (* l_0_4_7 l_0_4_7)))
 (let ((?x6991 (* l_0_4_31 l_0_4_31)))
 (let ((?x6988 (* l_0_4_30 l_0_4_30)))
 (let ((?x6985 (* l_0_4_29 l_0_4_29)))
 (let ((?x7369 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_28 l_0_4_28)) ?x6985) ?x6988)))
 (let ((?x7370 (- ?x7369 ?x6991)))
 (= (+ (+ (+ ?x7370 ?x7005) ?x7007) ?x7009) 0.0))))))))))
(assert
 (let ((?x6306 (* 2.0 l_0_4_31)))
 (let ((?x6307 (* ?x6306 l_0_4_35)))
 (let ((?x6303 (* 2.0 l_0_4_30)))
 (let ((?x6304 (* ?x6303 l_0_4_34)))
 (let ((?x6300 (* 2.0 l_0_4_29)))
 (let ((?x6301 (* ?x6300 l_0_4_33)))
 (let ((?x6297 (* 2.0 l_0_4_28)))
 (let ((?x6298 (* ?x6297 l_0_4_32)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6292 (* ?x6213 l_0_4_9)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6290 (* ?x6165 l_0_4_8)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6288 (* ?x6162 l_0_4_7)))
 (let ((?x6285 (* 2.0 l_0_4_10)))
 (let ((?x6286 (* ?x6285 l_0_4_14)))
 (let ((?x7384 (- (- (- (- (+ (+ (+ ?x6286 ?x6288) ?x6290) ?x6292) ?x6298) ?x6301) ?x6304) ?x6307)))
 (= ?x7384 0.0)))))))))))))))))))
(assert
 (let ((?x6306 (* 2.0 l_0_4_31)))
 (let ((?x7085 (* ?x6306 l_0_4_40)))
 (let ((?x6303 (* 2.0 l_0_4_30)))
 (let ((?x7083 (* ?x6303 l_0_4_39)))
 (let ((?x6300 (* 2.0 l_0_4_29)))
 (let ((?x7081 (* ?x6300 l_0_4_38)))
 (let ((?x6297 (* 2.0 l_0_4_28)))
 (let ((?x7079 (* ?x6297 l_0_4_37)))
 (let ((?x6939 (* 2.0 l_0_4_18)))
 (let ((?x7077 (* ?x6939 l_0_4_9)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x7075 (* ?x6778 l_0_4_8)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x7073 (* ?x6775 l_0_4_7)))
 (let ((?x6285 (* 2.0 l_0_4_10)))
 (let ((?x7396 (* ?x6285 l_0_4_19)))
 (let ((?x7403 (- (- (- (- (+ (+ (+ ?x7396 ?x7073) ?x7075) ?x7077) ?x7079) ?x7081) ?x7083) ?x7085)))
 (= ?x7403 0.0)))))))))))))))))))
(assert
 (let ((?x6416 (* l_0_4_36 l_0_4_36)))
 (let ((?x6414 (* l_0_4_35 l_0_4_35)))
 (let ((?x6412 (* l_0_4_34 l_0_4_34)))
 (let ((?x6410 (* l_0_4_33 l_0_4_33)))
 (let ((?x6408 (* l_0_4_32 l_0_4_32)))
 (let ((?x6405 (* l_0_4_15 l_0_4_15)))
 (let ((?x6403 (* l_0_4_14 l_0_4_14)))
 (let ((?x6401 (* l_0_4_13 l_0_4_13)))
 (let ((?x7408 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x6401) ?x6403)))
 (= (- (- (- (- (- (+ ?x7408 ?x6405) ?x6408) ?x6410) ?x6412) ?x6414) ?x6416) 0.0)))))))))))
(assert
 (let ((?x6493 (* (* 2.0 l_0_4_36) l_0_4_41)))
 (let ((?x6490 (* (* 2.0 l_0_4_35) l_0_4_40)))
 (let ((?x6487 (* (* 2.0 l_0_4_34) l_0_4_39)))
 (let ((?x6484 (* (* 2.0 l_0_4_33) l_0_4_38)))
 (let ((?x6481 (* (* 2.0 l_0_4_32) l_0_4_37)))
 (let ((?x6476 (* (* 2.0 l_0_4_15) l_0_4_20)))
 (let ((?x6473 (* (* 2.0 l_0_4_14) l_0_4_19)))
 (let ((?x6213 (* 2.0 l_0_4_13)))
 (let ((?x6470 (* ?x6213 l_0_4_18)))
 (let ((?x6165 (* 2.0 l_0_4_12)))
 (let ((?x6468 (* ?x6165 l_0_4_17)))
 (let ((?x6162 (* 2.0 l_0_4_11)))
 (let ((?x6466 (* ?x6162 l_0_4_16)))
 (let ((?x7428 (- (- (- (+ (+ (+ (+ ?x6466 ?x6468) ?x6470) ?x6473) ?x6476) ?x6481) ?x6484) ?x6487)))
 (= (- (- ?x7428 ?x6490) ?x6493) 0.0))))))))))))))))
(assert
 (let ((?x7177 (* l_0_4_42 l_0_4_42)))
 (let ((?x7175 (* l_0_4_41 l_0_4_41)))
 (let ((?x7173 (* l_0_4_40 l_0_4_40)))
 (let ((?x7171 (* l_0_4_39 l_0_4_39)))
 (let ((?x7169 (* l_0_4_38 l_0_4_38)))
 (let ((?x7167 (* l_0_4_37 l_0_4_37)))
 (let ((?x7165 (* l_0_4_21 l_0_4_21)))
 (let ((?x7163 (* l_0_4_20 l_0_4_20)))
 (let ((?x7161 (* l_0_4_19 l_0_4_19)))
 (let ((?x7159 (* l_0_4_18 l_0_4_18)))
 (let ((?x7444 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x7159) ?x7161)))
 (let ((?x7451 (- (- (- (- (- (+ (+ ?x7444 ?x7163) ?x7165) ?x7167) ?x7169) ?x7171) ?x7173) ?x7175)))
 (let ((?x7452 (- ?x7451 ?x7177)))
 (= ?x7452 0.0)))))))))))))))
(assert
 (let ((?x4909 (* l_0_4_85 l_0_4_85)))
 (let ((?x4913 (* l_0_4_64 l_0_4_64)))
 (let ((?x6125 (* l_0_4_22 l_0_4_22)))
 (let ((?x6120 (* l_0_4_1 l_0_4_1)))
 (let ((?x4313 (- ?x6120 ?x6125)))
 (= (- (+ ?x4313 ?x4913) ?x4909) 0.0)))))))
(assert
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x7467 (* ?x6130 l_0_4_86)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7463 (* ?x6127 l_0_4_65)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6171 (* ?x6122 l_0_4_23)))
 (let ((?x7460 (* l_0_4_127 l_0_4_127)))
 (let ((?x7461 (- (- (* (* 2.0 l_0_4_1) l_0_4_2) (* l_0_4_106 l_0_4_106)) ?x7460)))
 (let ((?x7468 (- (+ (+ (- ?x7461 ?x6171) ?x7463) (* 1.0 (* l_0_4_64 l_0_4_64))) ?x7467)))
 (= (- ?x7468 (* (* 1.0 l_0_4_85) l_0_4_85)) 0.0)))))))))))
(assert
 (let ((?x4909 (* l_0_4_85 l_0_4_85)))
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x7487 (* ?x6130 l_0_4_88)))
 (let ((?x4913 (* l_0_4_64 l_0_4_64)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7484 (* ?x6127 l_0_4_67)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6216 (* ?x6122 l_0_4_25)))
 (let ((?x4326 (- (* (* 2.0 l_0_4_1) l_0_4_4) ?x6216)))
 (= (+ (- (- (+ ?x4326 ?x7484) ?x4913) ?x7487) ?x4909) 0.0)))))))))))
(assert
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x7507 (* ?x6130 l_0_4_91)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7505 (* ?x6127 l_0_4_70)))
 (let ((?x7503 (* l_0_4_43 l_0_4_43)))
 (let ((?x6125 (* l_0_4_22 l_0_4_22)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6294 (* ?x6122 l_0_4_28)))
 (let ((?x7501 (- (+ (* (* 2.0 l_0_4_1) l_0_4_7) (* l_0_4_1 l_0_4_1)) ?x6294)))
 (= (- (+ (- (- ?x7501 ?x6125) ?x7503) ?x7505) ?x7507) 0.0)))))))))))
(assert
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7213 (* ?x6127 l_0_4_79)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6478 (* ?x6122 l_0_4_37)))
 (let ((?x5793 (* 2.0 l_0_4_100)))
 (let ((?x4315 (* ?x5793 l_0_4_85)))
 (let ((?x6118 (* 2.0 l_0_4_1)))
 (let ((?x4334 (* ?x6118 l_0_4_16)))
 (= (+ (- (- ?x4334 ?x4315) ?x6478) ?x7213) 0.0))))))))))
(assert
 (let ((?x5943 (* l_0_4_87 l_0_4_87)))
 (let ((?x5938 (* l_0_4_86 l_0_4_86)))
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x7467 (* ?x6130 l_0_4_86)))
 (let ((?x5933 (* l_0_4_66 l_0_4_66)))
 (let ((?x5929 (* l_0_4_65 l_0_4_65)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7463 (* ?x6127 l_0_4_65)))
 (let ((?x5829 (* l_0_4_3 l_0_4_3)))
 (let ((?x5827 (* l_0_4_24 l_0_4_24)))
 (let ((?x5825 (* l_0_4_23 l_0_4_23)))
 (let ((?x5823 (* l_0_4_2 l_0_4_2)))
 (let ((?x7536 (- (* (* (- 2.0) l_0_4_106) l_0_4_107) (* (* 2.0 l_0_4_127) l_0_4_128))))
 (let ((?x7543 (+ (+ (+ (+ (- (- (+ ?x7536 ?x5823) ?x5825) ?x5827) ?x5829) ?x7463) ?x5929) ?x5933)))
 (= (- (- (- ?x7543 ?x7467) ?x5938) ?x5943) 0.0))))))))))))))))
(assert
 (let ((?x5940 (* 2.0 l_0_4_87)))
 (let ((?x5941 (* ?x5940 l_0_4_89)))
 (let ((?x5935 (* 2.0 l_0_4_86)))
 (let ((?x5936 (* ?x5935 l_0_4_88)))
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x7487 (* ?x6130 l_0_4_88)))
 (let ((?x7467 (* ?x6130 l_0_4_86)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x5931 (* ?x5834 l_0_4_68)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x5927 (* ?x5831 l_0_4_67)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7484 (* ?x6127 l_0_4_67)))
 (let ((?x7463 (* ?x6127 l_0_4_65)))
 (let ((?x6580 (* 2.0 l_0_4_3)))
 (let ((?x6581 (* ?x6580 l_0_4_5)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6578 (* ?x6176 l_0_4_26)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6576 (* ?x6173 l_0_4_25)))
 (let ((?x6573 (* 2.0 l_0_4_2)))
 (let ((?x6574 (* ?x6573 l_0_4_4)))
 (let ((?x7563 (- (* (* (- 2.0) l_0_4_106) l_0_4_109) (* (* 2.0 l_0_4_127) l_0_4_130))))
 (let ((?x7570 (+ (+ (- (+ (- (- (+ ?x7563 ?x6574) ?x6576) ?x6578) ?x6581) ?x7463) ?x7484) ?x5927)))
 (= (- (- (- (+ (+ ?x7570 ?x5931) ?x7467) ?x7487) ?x5936) ?x5941) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x5940 (* 2.0 l_0_4_87)))
 (let ((?x6031 (* ?x5940 l_0_4_92)))
 (let ((?x5935 (* 2.0 l_0_4_86)))
 (let ((?x6029 (* ?x5935 l_0_4_91)))
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x7507 (* ?x6130 l_0_4_91)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x6027 (* ?x5834 l_0_4_71)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x6025 (* ?x5831 l_0_4_70)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7505 (* ?x6127 l_0_4_70)))
 (let ((?x6580 (* 2.0 l_0_4_3)))
 (let ((?x6627 (* ?x6580 l_0_4_8)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6624 (* ?x6176 l_0_4_29)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6621 (* ?x6173 l_0_4_28)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6171 (* ?x6122 l_0_4_23)))
 (let ((?x6573 (* 2.0 l_0_4_2)))
 (let ((?x6619 (* ?x6573 l_0_4_7)))
 (let ((?x6118 (* 2.0 l_0_4_1)))
 (let ((?x4317 (* ?x6118 l_0_4_2)))
 (let ((?x5083 (- (- ?x4317 (* (* 2.0 l_0_4_106) l_0_4_112)) (* (* 2.0 l_0_4_127) l_0_4_133))))
 (let ((?x7595 (- (+ (- (- (- (+ ?x5083 ?x6619) ?x6171) ?x6621) ?x6624) ?x6627) (* (* 2.0 l_0_4_43) l_0_4_44))))
 (= (- (- (- (+ (+ (+ ?x7595 ?x7505) ?x6025) ?x6027) ?x7507) ?x6029) ?x6031) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x5835 (* ?x5834 l_0_4_80)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x5832 (* ?x5831 l_0_4_79)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7213 (* ?x6127 l_0_4_79)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6783 (* ?x6176 l_0_4_38)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6781 (* ?x6173 l_0_4_37)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x6779 (* ?x6778 l_0_4_3)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x6776 (* ?x6775 l_0_4_2)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x5798 (* ?x5797 l_0_4_87)))
 (let ((?x5793 (* 2.0 l_0_4_100)))
 (let ((?x5794 (* ?x5793 l_0_4_86)))
 (let ((?x5136 (- (- (- (* (* (- 2.0) l_0_4_100) l_0_4_85) ?x5794) ?x5798) (* (* 2.0 l_0_4_106) l_0_4_121))))
 (let ((?x7622 (- (+ (+ (- ?x5136 (* (* 2.0 l_0_4_127) l_0_4_142)) ?x6776) ?x6779) ?x6781)))
 (= (+ (+ (+ (- ?x7622 ?x6783) ?x7213) ?x5832) ?x5835) 0.0))))))))))))))))))))))
(assert
 (let ((?x7645 (* l_0_4_90 l_0_4_90)))
 (let ((?x7643 (* l_0_4_89 l_0_4_89)))
 (let ((?x7641 (* l_0_4_88 l_0_4_88)))
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x7487 (* ?x6130 l_0_4_88)))
 (let ((?x7638 (* l_0_4_69 l_0_4_69)))
 (let ((?x7636 (* l_0_4_68 l_0_4_68)))
 (let ((?x7634 (* l_0_4_67 l_0_4_67)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7484 (* ?x6127 l_0_4_67)))
 (let ((?x6824 (* l_0_4_6 l_0_4_6)))
 (let ((?x6822 (* l_0_4_5 l_0_4_5)))
 (let ((?x6820 (* l_0_4_4 l_0_4_4)))
 (let ((?x6818 (* l_0_4_27 l_0_4_27)))
 (let ((?x7337 (+ (- (- (* (- l_0_4_25) l_0_4_25) (* l_0_4_26 l_0_4_26)) ?x6818) ?x6820)))
 (let ((?x7339 (+ (+ ?x7337 ?x6822) ?x6824)))
 (let ((?x7644 (- (- (+ (+ (+ (+ (- ?x7339 ?x7484) ?x7634) ?x7636) ?x7638) ?x7487) ?x7641) ?x7643)))
 (= (- ?x7644 ?x7645) 0.0)))))))))))))))))))
(assert
 (let ((?x6241 (* 2.0 l_0_4_90)))
 (let ((?x7688 (* ?x6241 l_0_4_93)))
 (let ((?x6238 (* 2.0 l_0_4_89)))
 (let ((?x7686 (* ?x6238 l_0_4_92)))
 (let ((?x6235 (* 2.0 l_0_4_88)))
 (let ((?x7684 (* ?x6235 l_0_4_91)))
 (let ((?x6130 (* 2.0 l_0_4_85)))
 (let ((?x7507 (* ?x6130 l_0_4_91)))
 (let ((?x5843 (* 2.0 l_0_4_69)))
 (let ((?x7681 (* ?x5843 l_0_4_72)))
 (let ((?x5840 (* 2.0 l_0_4_68)))
 (let ((?x7679 (* ?x5840 l_0_4_71)))
 (let ((?x5837 (* 2.0 l_0_4_67)))
 (let ((?x7677 (* ?x5837 l_0_4_70)))
 (let ((?x6127 (* 2.0 l_0_4_64)))
 (let ((?x7505 (* ?x6127 l_0_4_70)))
 (let ((?x6867 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6864 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6852 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6848 (* ?x6224 l_0_4_30)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6845 (* ?x6221 l_0_4_29)))
 (let ((?x6218 (* 2.0 l_0_4_25)))
 (let ((?x6842 (* ?x6218 l_0_4_28)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6216 (* ?x6122 l_0_4_25)))
 (let ((?x4326 (- (* (* 2.0 l_0_4_1) l_0_4_4) ?x6216)))
 (let ((?x7673 (- (+ (- (- (- ?x4326 ?x6842) ?x6845) ?x6848) ?x6852) (* (* 2.0 l_0_4_43) l_0_4_46))))
 (let ((?x7683 (+ (+ (+ (+ (- (+ (+ ?x7673 ?x6864) ?x6867) ?x7505) ?x7677) ?x7679) ?x7681) ?x7507)))
 (= (- (- (- ?x7683 ?x7684) ?x7686) ?x7688) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x7745 (* l_0_4_94 l_0_4_94)))
 (let ((?x7743 (* l_0_4_93 l_0_4_93)))
 (let ((?x7741 (* l_0_4_92 l_0_4_92)))
 (let ((?x7739 (* l_0_4_91 l_0_4_91)))
 (let ((?x7009 (* l_0_4_9 l_0_4_9)))
 (let ((?x7007 (* l_0_4_8 l_0_4_8)))
 (let ((?x7735 (* l_0_4_73 l_0_4_73)))
 (let ((?x7733 (* l_0_4_72 l_0_4_72)))
 (let ((?x7731 (* l_0_4_71 l_0_4_71)))
 (let ((?x7729 (* l_0_4_70 l_0_4_70)))
 (let ((?x7005 (* l_0_4_7 l_0_4_7)))
 (let ((?x6991 (* l_0_4_31 l_0_4_31)))
 (let ((?x6988 (* l_0_4_30 l_0_4_30)))
 (let ((?x6985 (* l_0_4_29 l_0_4_29)))
 (let ((?x6982 (* l_0_4_28 l_0_4_28)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6294 (* ?x6122 l_0_4_28)))
 (let ((?x7721 (- (+ (* (* 2.0 l_0_4_1) l_0_4_7) (* l_0_4_10 l_0_4_10)) ?x6294)))
 (let ((?x7727 (- (- (- (- (- ?x7721 ?x6982) ?x6985) ?x6988) ?x6991) (* (* 2.0 l_0_4_43) l_0_4_49))))
 (let ((?x7738 (+ (+ (+ (+ (+ (+ (+ ?x7727 ?x7005) ?x7729) ?x7731) ?x7733) ?x7735) ?x7007) ?x7009)))
 (= (- (- (- (- ?x7738 ?x7739) ?x7741) ?x7743) ?x7745) 0.0))))))))))))))))))))))
(assert
 (let ((?x6321 (* 2.0 l_0_4_73)))
 (let ((?x7272 (* ?x6321 l_0_4_82)))
 (let ((?x6318 (* 2.0 l_0_4_72)))
 (let ((?x7270 (* ?x6318 l_0_4_81)))
 (let ((?x6315 (* 2.0 l_0_4_71)))
 (let ((?x7268 (* ?x6315 l_0_4_80)))
 (let ((?x6312 (* 2.0 l_0_4_70)))
 (let ((?x7266 (* ?x6312 l_0_4_79)))
 (let ((?x6306 (* 2.0 l_0_4_31)))
 (let ((?x7085 (* ?x6306 l_0_4_40)))
 (let ((?x6303 (* 2.0 l_0_4_30)))
 (let ((?x7083 (* ?x6303 l_0_4_39)))
 (let ((?x6300 (* 2.0 l_0_4_29)))
 (let ((?x7081 (* ?x6300 l_0_4_38)))
 (let ((?x6297 (* 2.0 l_0_4_28)))
 (let ((?x7079 (* ?x6297 l_0_4_37)))
 (let ((?x6122 (* 2.0 l_0_4_22)))
 (let ((?x6478 (* ?x6122 l_0_4_37)))
 (let ((?x6939 (* 2.0 l_0_4_18)))
 (let ((?x7077 (* ?x6939 l_0_4_9)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x7075 (* ?x6778 l_0_4_8)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x7073 (* ?x6775 l_0_4_7)))
 (let ((?x6460 (* 2.0 l_0_4_103)))
 (let ((?x7248 (* ?x6460 l_0_4_94)))
 (let ((?x5802 (* 2.0 l_0_4_102)))
 (let ((?x7246 (* ?x5802 l_0_4_93)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x7244 (* ?x5797 l_0_4_92)))
 (let ((?x5793 (* 2.0 l_0_4_100)))
 (let ((?x7243 (* ?x5793 l_0_4_91)))
 (let ((?x6285 (* 2.0 l_0_4_10)))
 (let ((?x7396 (* ?x6285 l_0_4_19)))
 (let ((?x6118 (* 2.0 l_0_4_1)))
 (let ((?x4334 (* ?x6118 l_0_4_16)))
 (let ((?x7767 (+ (+ (- (- (- (- (+ ?x4334 ?x7396) ?x7243) ?x7244) ?x7246) ?x7248) ?x7073) ?x7075)))
 (let ((?x7775 (- (- (- (- (- (- (+ ?x7767 ?x7077) ?x6478) ?x7079) ?x7081) ?x7083) ?x7085) (* (* 2.0 l_0_4_43) l_0_4_58))))
 (= (+ (+ (+ (+ ?x7775 ?x7266) ?x7268) ?x7270) ?x7272) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7317 (* l_0_4_84 l_0_4_84)))
 (let ((?x7315 (* l_0_4_83 l_0_4_83)))
 (let ((?x7313 (* l_0_4_82 l_0_4_82)))
 (let ((?x7311 (* l_0_4_81 l_0_4_81)))
 (let ((?x7309 (* l_0_4_80 l_0_4_80)))
 (let ((?x7307 (* l_0_4_79 l_0_4_79)))
 (let ((?x7177 (* l_0_4_42 l_0_4_42)))
 (let ((?x7175 (* l_0_4_41 l_0_4_41)))
 (let ((?x7173 (* l_0_4_40 l_0_4_40)))
 (let ((?x7171 (* l_0_4_39 l_0_4_39)))
 (let ((?x7169 (* l_0_4_38 l_0_4_38)))
 (let ((?x7167 (* l_0_4_37 l_0_4_37)))
 (let ((?x7165 (* l_0_4_21 l_0_4_21)))
 (let ((?x7163 (* l_0_4_20 l_0_4_20)))
 (let ((?x7161 (* l_0_4_19 l_0_4_19)))
 (let ((?x7159 (* l_0_4_18 l_0_4_18)))
 (let ((?x7157 (* l_0_4_17 l_0_4_17)))
 (let ((?x7181 (* l_0_4_16 l_0_4_16)))
 (let ((?x7301 (* l_0_4_105 l_0_4_105)))
 (let ((?x7299 (* l_0_4_104 l_0_4_104)))
 (let ((?x7297 (* l_0_4_103 l_0_4_103)))
 (let ((?x4534 (* l_0_4_102 l_0_4_102)))
 (let ((?x7797 (- (- (* (- l_0_4_100) l_0_4_100) (* l_0_4_101 l_0_4_101)) ?x4534)))
 (let ((?x7804 (+ (+ (+ (+ (- (- (- ?x7797 ?x7297) ?x7299) ?x7301) ?x7181) ?x7157) ?x7159) ?x7161)))
 (let ((?x7811 (- (- (- (- (- (+ (+ ?x7804 ?x7163) ?x7165) ?x7167) ?x7169) ?x7171) ?x7173) ?x7175)))
 (let ((?x7818 (+ (+ (+ (+ (+ (+ (- ?x7811 ?x7177) ?x7307) ?x7309) ?x7311) ?x7313) ?x7315) ?x7317)))
 (= ?x7818 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x6241 (* 2.0 l_0_4_90)))
 (let ((?x7688 (* ?x6241 l_0_4_93)))
 (let ((?x6238 (* 2.0 l_0_4_89)))
 (let ((?x7686 (* ?x6238 l_0_4_92)))
 (let ((?x6235 (* 2.0 l_0_4_88)))
 (let ((?x7684 (* ?x6235 l_0_4_91)))
 (let ((?x5940 (* 2.0 l_0_4_87)))
 (let ((?x6031 (* ?x5940 l_0_4_92)))
 (let ((?x5935 (* 2.0 l_0_4_86)))
 (let ((?x6029 (* ?x5935 l_0_4_91)))
 (let ((?x5843 (* 2.0 l_0_4_69)))
 (let ((?x7681 (* ?x5843 l_0_4_72)))
 (let ((?x5840 (* 2.0 l_0_4_68)))
 (let ((?x7679 (* ?x5840 l_0_4_71)))
 (let ((?x5837 (* 2.0 l_0_4_67)))
 (let ((?x7677 (* ?x5837 l_0_4_70)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x6027 (* ?x5834 l_0_4_71)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x6025 (* ?x5831 l_0_4_70)))
 (let ((?x6580 (* 2.0 l_0_4_3)))
 (let ((?x6581 (* ?x6580 l_0_4_5)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6578 (* ?x6176 l_0_4_26)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6576 (* ?x6173 l_0_4_25)))
 (let ((?x6573 (* 2.0 l_0_4_2)))
 (let ((?x6574 (* ?x6573 l_0_4_4)))
 (let ((?x7844 (- (* (* (- 2.0) l_0_4_109) l_0_4_112) (* (* 2.0 l_0_4_110) l_0_4_113))))
 (let ((?x7848 (- (- ?x7844 (* (* 2.0 l_0_4_111) l_0_4_114)) (* (* 2.0 l_0_4_130) l_0_4_133))))
 (let ((?x7852 (- (- ?x7848 (* (* 2.0 l_0_4_131) l_0_4_134)) (* (* 2.0 l_0_4_132) l_0_4_135))))
 (let ((?x7858 (- (+ (- (- (+ ?x7852 ?x6574) ?x6576) ?x6578) ?x6581) (* (* 2.0 l_0_4_44) l_0_4_46))))
 (let ((?x7863 (+ (- (- (- ?x7858 (* (* 2.0 l_0_4_45) l_0_4_47)) ?x6025) ?x6027) ?x7677)))
 (let ((?x7870 (- (- (- (+ (+ (+ (+ ?x7863 ?x7679) ?x7681) ?x6029) ?x6031) ?x7684) ?x7686) ?x7688)))
 (= ?x7870 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6580 (* 2.0 l_0_4_3)))
 (let ((?x6627 (* ?x6580 l_0_4_8)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6624 (* ?x6176 l_0_4_29)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6621 (* ?x6173 l_0_4_28)))
 (let ((?x6573 (* 2.0 l_0_4_2)))
 (let ((?x6619 (* ?x6573 l_0_4_7)))
 (let ((?x7918 (* l_0_4_136 l_0_4_136)))
 (let ((?x7916 (* l_0_4_135 l_0_4_135)))
 (let ((?x7914 (* l_0_4_134 l_0_4_134)))
 (let ((?x7912 (* l_0_4_133 l_0_4_133)))
 (let ((?x7910 (* l_0_4_115 l_0_4_115)))
 (let ((?x7908 (* l_0_4_114 l_0_4_114)))
 (let ((?x7909 (- (- (* (- l_0_4_112) l_0_4_112) (* l_0_4_113 l_0_4_113)) ?x7908)))
 (let ((?x7921 (- (+ (- (- (- (- (- ?x7909 ?x7910) ?x7912) ?x7914) ?x7916) ?x7918) ?x6619) ?x6621)))
 (let ((?x7927 (- (- (+ (- ?x7921 ?x6624) ?x6627) (* (* 2.0 l_0_4_44) l_0_4_49)) (* (* 2.0 l_0_4_45) l_0_4_50))))
 (let ((?x7931 (+ (+ ?x7927 (* 1.0 (* l_0_4_70 l_0_4_70))) (* 1.0 (* l_0_4_71 l_0_4_71)))))
 (let ((?x7935 (+ (+ ?x7931 (* 1.0 (* l_0_4_72 l_0_4_72))) (* 1.0 (* l_0_4_73 l_0_4_73)))))
 (let ((?x7941 (- (- ?x7935 (* (* 1.0 l_0_4_91) l_0_4_91)) (* (* 1.0 l_0_4_92) l_0_4_92))))
 (let ((?x7947 (- (- ?x7941 (* (* 1.0 l_0_4_93) l_0_4_93)) (* (* 1.0 l_0_4_94) l_0_4_94))))
 (= ?x7947 0.0)))))))))))))))))))))))
(assert
 (let ((?x6321 (* 2.0 l_0_4_73)))
 (let ((?x7272 (* ?x6321 l_0_4_82)))
 (let ((?x6318 (* 2.0 l_0_4_72)))
 (let ((?x7270 (* ?x6318 l_0_4_81)))
 (let ((?x6315 (* 2.0 l_0_4_71)))
 (let ((?x7268 (* ?x6315 l_0_4_80)))
 (let ((?x6312 (* 2.0 l_0_4_70)))
 (let ((?x7266 (* ?x6312 l_0_4_79)))
 (let ((?x6176 (* 2.0 l_0_4_24)))
 (let ((?x6783 (* ?x6176 l_0_4_38)))
 (let ((?x6173 (* 2.0 l_0_4_23)))
 (let ((?x6781 (* ?x6173 l_0_4_37)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x6779 (* ?x6778 l_0_4_3)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x6776 (* ?x6775 l_0_4_2)))
 (let ((?x6460 (* 2.0 l_0_4_103)))
 (let ((?x7248 (* ?x6460 l_0_4_94)))
 (let ((?x5802 (* 2.0 l_0_4_102)))
 (let ((?x7246 (* ?x5802 l_0_4_93)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x7244 (* ?x5797 l_0_4_92)))
 (let ((?x5429 (- (- (- (- (* (* (- 2.0) l_0_4_100) l_0_4_91) ?x7244) ?x7246) ?x7248) (* (* 2.0 l_0_4_112) l_0_4_121))))
 (let ((?x7978 (- (- ?x5429 (* (* 2.0 l_0_4_113) l_0_4_122)) (* (* 2.0 l_0_4_114) l_0_4_123))))
 (let ((?x7982 (- (- ?x7978 (* (* 2.0 l_0_4_115) l_0_4_124)) (* (* 2.0 l_0_4_133) l_0_4_142))))
 (let ((?x7986 (- (- ?x7982 (* (* 2.0 l_0_4_134) l_0_4_143)) (* (* 2.0 l_0_4_135) l_0_4_144))))
 (let ((?x7991 (- (+ (+ (- ?x7986 (* (* 2.0 l_0_4_136) l_0_4_145)) ?x6776) ?x6779) ?x6781)))
 (let ((?x7996 (- (- (- ?x7991 ?x6783) (* (* 2.0 l_0_4_44) l_0_4_58)) (* (* 2.0 l_0_4_45) l_0_4_59))))
 (= (+ (+ (+ (+ ?x7996 ?x7266) ?x7268) ?x7270) ?x7272) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x6241 (* 2.0 l_0_4_90)))
 (let ((?x7688 (* ?x6241 l_0_4_93)))
 (let ((?x6238 (* 2.0 l_0_4_89)))
 (let ((?x7686 (* ?x6238 l_0_4_92)))
 (let ((?x6235 (* 2.0 l_0_4_88)))
 (let ((?x7684 (* ?x6235 l_0_4_91)))
 (let ((?x5843 (* 2.0 l_0_4_69)))
 (let ((?x7681 (* ?x5843 l_0_4_72)))
 (let ((?x5840 (* 2.0 l_0_4_68)))
 (let ((?x7679 (* ?x5840 l_0_4_71)))
 (let ((?x5837 (* 2.0 l_0_4_67)))
 (let ((?x7677 (* ?x5837 l_0_4_70)))
 (let ((?x6824 (* l_0_4_6 l_0_4_6)))
 (let ((?x6822 (* l_0_4_5 l_0_4_5)))
 (let ((?x5484 (* l_0_4_48 l_0_4_48)))
 (let ((?x1366 (* l_0_4_47 l_0_4_47)))
 (let ((?x1192 (* l_0_4_46 l_0_4_46)))
 (let ((?x6820 (* l_0_4_4 l_0_4_4)))
 (let ((?x6818 (* l_0_4_27 l_0_4_27)))
 (let ((?x7337 (+ (- (- (* (- l_0_4_25) l_0_4_25) (* l_0_4_26 l_0_4_26)) ?x6818) ?x6820)))
 (let ((?x8023 (- (- (+ (+ (- (- (- ?x7337 ?x1192) ?x1366) ?x5484) ?x6822) ?x6824) ?x7677) ?x7679)))
 (= (+ (+ (+ (- ?x8023 ?x7681) ?x7684) ?x7686) ?x7688) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7745 (* l_0_4_94 l_0_4_94)))
 (let ((?x7743 (* l_0_4_93 l_0_4_93)))
 (let ((?x7741 (* l_0_4_92 l_0_4_92)))
 (let ((?x7739 (* l_0_4_91 l_0_4_91)))
 (let ((?x7735 (* l_0_4_73 l_0_4_73)))
 (let ((?x7733 (* l_0_4_72 l_0_4_72)))
 (let ((?x7731 (* l_0_4_71 l_0_4_71)))
 (let ((?x7729 (* l_0_4_70 l_0_4_70)))
 (let ((?x6867 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6864 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6852 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6224 (* 2.0 l_0_4_27)))
 (let ((?x6848 (* ?x6224 l_0_4_30)))
 (let ((?x6221 (* 2.0 l_0_4_26)))
 (let ((?x6845 (* ?x6221 l_0_4_29)))
 (let ((?x7347 (+ (- (- (* (* (- 2.0) l_0_4_25) l_0_4_28) ?x6845) ?x6848) ?x6852)))
 (let ((?x8045 (- (- ?x7347 (* (* 2.0 l_0_4_46) l_0_4_49)) (* (* 2.0 l_0_4_47) l_0_4_50))))
 (let ((?x8050 (- (+ (+ (- ?x8045 (* (* 2.0 l_0_4_48) l_0_4_51)) ?x6864) ?x6867) ?x7729)))
 (let ((?x8057 (+ (+ (+ (+ (- (- (- ?x8050 ?x7731) ?x7733) ?x7735) ?x7739) ?x7741) ?x7743) ?x7745)))
 (= ?x8057 0.0)))))))))))))))))))))
(assert
 (let ((?x7009 (* l_0_4_9 l_0_4_9)))
 (let ((?x7007 (* l_0_4_8 l_0_4_8)))
 (let ((?x7005 (* l_0_4_7 l_0_4_7)))
 (let ((?x8093 (* l_0_4_52 l_0_4_52)))
 (let ((?x8091 (* l_0_4_51 l_0_4_51)))
 (let ((?x8089 (* l_0_4_50 l_0_4_50)))
 (let ((?x1483 (* l_0_4_49 l_0_4_49)))
 (let ((?x6991 (* l_0_4_31 l_0_4_31)))
 (let ((?x6988 (* l_0_4_30 l_0_4_30)))
 (let ((?x6985 (* l_0_4_29 l_0_4_29)))
 (let ((?x7369 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_28 l_0_4_28)) ?x6985) ?x6988)))
 (let ((?x7370 (- ?x7369 ?x6991)))
 (let ((?x8097 (+ (+ (+ (- (- (- (- ?x7370 ?x1483) ?x8089) ?x8091) ?x8093) ?x7005) ?x7007) ?x7009)))
 (= ?x8097 0.0)))))))))))))))
(assert
 (let ((?x6306 (* 2.0 l_0_4_31)))
 (let ((?x7085 (* ?x6306 l_0_4_40)))
 (let ((?x6303 (* 2.0 l_0_4_30)))
 (let ((?x7083 (* ?x6303 l_0_4_39)))
 (let ((?x6300 (* 2.0 l_0_4_29)))
 (let ((?x7081 (* ?x6300 l_0_4_38)))
 (let ((?x6297 (* 2.0 l_0_4_28)))
 (let ((?x7079 (* ?x6297 l_0_4_37)))
 (let ((?x6939 (* 2.0 l_0_4_18)))
 (let ((?x7077 (* ?x6939 l_0_4_9)))
 (let ((?x6778 (* 2.0 l_0_4_17)))
 (let ((?x7075 (* ?x6778 l_0_4_8)))
 (let ((?x6775 (* 2.0 l_0_4_16)))
 (let ((?x7073 (* ?x6775 l_0_4_7)))
 (let ((?x6285 (* 2.0 l_0_4_10)))
 (let ((?x7396 (* ?x6285 l_0_4_19)))
 (let ((?x7403 (- (- (- (- (+ (+ (+ ?x7396 ?x7073) ?x7075) ?x7077) ?x7079) ?x7081) ?x7083) ?x7085)))
 (let ((?x8108 (- (- ?x7403 (* (* 2.0 l_0_4_49) l_0_4_58)) (* (* 2.0 l_0_4_50) l_0_4_59))))
 (let ((?x8112 (- (- ?x8108 (* (* 2.0 l_0_4_51) l_0_4_60)) (* (* 2.0 l_0_4_52) l_0_4_61))))
 (= ?x8112 0.0)))))))))))))))))))))
(assert
 (let ((?x8130 (* l_0_4_63 l_0_4_63)))
 (let ((?x8128 (* l_0_4_62 l_0_4_62)))
 (let ((?x1544 (* l_0_4_61 l_0_4_61)))
 (let ((?x1566 (* l_0_4_60 l_0_4_60)))
 (let ((?x5516 (* l_0_4_59 l_0_4_59)))
 (let ((?x5539 (* l_0_4_58 l_0_4_58)))
 (let ((?x7177 (* l_0_4_42 l_0_4_42)))
 (let ((?x7175 (* l_0_4_41 l_0_4_41)))
 (let ((?x7173 (* l_0_4_40 l_0_4_40)))
 (let ((?x7171 (* l_0_4_39 l_0_4_39)))
 (let ((?x7169 (* l_0_4_38 l_0_4_38)))
 (let ((?x7167 (* l_0_4_37 l_0_4_37)))
 (let ((?x7165 (* l_0_4_21 l_0_4_21)))
 (let ((?x7163 (* l_0_4_20 l_0_4_20)))
 (let ((?x7161 (* l_0_4_19 l_0_4_19)))
 (let ((?x7159 (* l_0_4_18 l_0_4_18)))
 (let ((?x7444 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x7159) ?x7161)))
 (let ((?x7451 (- (- (- (- (- (+ (+ ?x7444 ?x7163) ?x7165) ?x7167) ?x7169) ?x7171) ?x7173) ?x7175)))
 (let ((?x7452 (- ?x7451 ?x7177)))
 (= (- (- (- (- (- (- ?x7452 ?x5539) ?x5516) ?x1566) ?x1544) ?x8128) ?x8130) 0.0)))))))))))))))))))))
(assert
 (let ((?x5940 (* 2.0 l_0_4_87)))
 (let ((?x5941 (* ?x5940 l_0_4_89)))
 (let ((?x5935 (* 2.0 l_0_4_86)))
 (let ((?x5936 (* ?x5935 l_0_4_88)))
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x5931 (* ?x5834 l_0_4_68)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x5927 (* ?x5831 l_0_4_67)))
 (let ((?x8157 (* l_0_4_132 l_0_4_132)))
 (let ((?x8155 (* l_0_4_131 l_0_4_131)))
 (let ((?x8153 (* l_0_4_130 l_0_4_130)))
 (let ((?x8151 (* l_0_4_111 l_0_4_111)))
 (let ((?x8152 (- (- (* (- l_0_4_109) l_0_4_109) (* l_0_4_110 l_0_4_110)) ?x8151)))
 (let ((?x8162 (+ (- (- (- (- (- ?x8152 ?x8153) ?x8155) ?x8157) ?x5927) ?x5931) (* 1.0 (* l_0_4_67 l_0_4_67)))))
 (let ((?x8166 (+ (+ ?x8162 (* 1.0 (* l_0_4_68 l_0_4_68))) (* 1.0 (* l_0_4_69 l_0_4_69)))))
 (let ((?x8174 (- (- (+ (+ ?x8166 ?x5936) ?x5941) (* (* 1.0 l_0_4_88) l_0_4_88)) (* (* 1.0 l_0_4_89) l_0_4_89))))
 (= (- ?x8174 (* (* 1.0 l_0_4_90) l_0_4_90)) 0.0))))))))))))))))))
(assert
 (let ((?x7645 (* l_0_4_90 l_0_4_90)))
 (let ((?x7643 (* l_0_4_89 l_0_4_89)))
 (let ((?x7641 (* l_0_4_88 l_0_4_88)))
 (let ((?x7638 (* l_0_4_69 l_0_4_69)))
 (let ((?x8196 (+ (- (- (* (- l_0_4_67) l_0_4_67) (* l_0_4_68 l_0_4_68)) ?x7638) ?x7641)))
 (= (+ (+ ?x8196 ?x7643) ?x7645) 0.0)))))))
(assert
 (let ((?x5834 (* 2.0 l_0_4_66)))
 (let ((?x5835 (* ?x5834 l_0_4_80)))
 (let ((?x5831 (* 2.0 l_0_4_65)))
 (let ((?x5832 (* ?x5831 l_0_4_79)))
 (let ((?x5797 (* 2.0 l_0_4_101)))
 (let ((?x5798 (* ?x5797 l_0_4_87)))
 (let ((?x8204 (- (- (* (* (- 2.0) l_0_4_100) l_0_4_86) ?x5798) (* (* 2.0 l_0_4_107) l_0_4_121))))
 (let ((?x8208 (- (- ?x8204 (* (* 2.0 l_0_4_108) l_0_4_122)) (* (* 2.0 l_0_4_128) l_0_4_142))))
 (= (+ (+ (- ?x8208 (* (* 2.0 l_0_4_129) l_0_4_143)) ?x5832) ?x5835) 0.0))))))))))
(assert
 (let ((?x8266 (* l_0_4_147 l_0_4_147)))
 (let ((?x8264 (* l_0_4_146 l_0_4_146)))
 (let ((?x8262 (* l_0_4_145 l_0_4_145)))
 (let ((?x8260 (* l_0_4_144 l_0_4_144)))
 (let ((?x8258 (* l_0_4_143 l_0_4_143)))
 (let ((?x8256 (* l_0_4_142 l_0_4_142)))
 (let ((?x8254 (* l_0_4_126 l_0_4_126)))
 (let ((?x8252 (* l_0_4_125 l_0_4_125)))
 (let ((?x8250 (* l_0_4_124 l_0_4_124)))
 (let ((?x8248 (* l_0_4_123 l_0_4_123)))
 (let ((?x8246 (* l_0_4_122 l_0_4_122)))
 (let ((?x8244 (* l_0_4_121 l_0_4_121)))
 (let ((?x8231 (- (* (* (- 1.0) l_0_4_100) l_0_4_100) (* (* 1.0 l_0_4_101) l_0_4_101))))
 (let ((?x8237 (- (- ?x8231 (* (* 1.0 l_0_4_102) l_0_4_102)) (* (* 1.0 l_0_4_103) l_0_4_103))))
 (let ((?x8243 (- (- ?x8237 (* (* 1.0 l_0_4_104) l_0_4_104)) (* (* 1.0 l_0_4_105) l_0_4_105))))
 (let ((?x8257 (- (- (- (- (- (- (- ?x8243 ?x8244) ?x8246) ?x8248) ?x8250) ?x8252) ?x8254) ?x8256)))
 (let ((?x8269 (+ (- (- (- (- (- ?x8257 ?x8258) ?x8260) ?x8262) ?x8264) ?x8266) (* 1.0 (* l_0_4_79 l_0_4_79)))))
 (let ((?x8273 (+ (+ ?x8269 (* 1.0 (* l_0_4_80 l_0_4_80))) (* 1.0 (* l_0_4_81 l_0_4_81)))))
 (let ((?x8277 (+ (+ ?x8273 (* 1.0 (* l_0_4_82 l_0_4_82))) (* 1.0 (* l_0_4_83 l_0_4_83)))))
 (= (+ ?x8277 (* 1.0 (* l_0_4_84 l_0_4_84))) 0.0)))))))))))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_22 0.0))
(assert
 (>= l_0_4_24 0.0))
(assert
 (>= l_0_4_27 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_42 0.0))
(assert
 (>= l_0_4_43 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_52 0.0))
(assert
 (>= l_0_4_57 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_64 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_69 0.0))
(assert
 (>= l_0_4_73 0.0))
(assert
 (>= l_0_4_78 0.0))
(assert
 (>= l_0_4_84 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_87 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_94 0.0))
(assert
 (>= l_0_4_99 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (>= l_0_4_106 0.0))
(assert
 (>= l_0_4_108 0.0))
(assert
 (>= l_0_4_111 0.0))
(assert
 (>= l_0_4_115 0.0))
(assert
 (>= l_0_4_120 0.0))
(assert
 (>= l_0_4_126 0.0))
(assert
 (>= l_0_4_127 0.0))
(assert
 (>= l_0_4_129 0.0))
(assert
 (>= l_0_4_132 0.0))
(assert
 (>= l_0_4_136 0.0))
(assert
 (>= l_0_4_141 0.0))
(assert
 (>= l_0_4_147 0.0))
(assert
 (let ((?x8369 (* 2.0 l_0_5_87)))
 (let ((?x8370 (* ?x8369 l_0_5_96)))
 (let ((?x8366 (* 2.0 l_0_5_86)))
 (let ((?x8367 (* ?x8366 l_0_5_95)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x8364 (* ?x8363 l_0_5_75)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x8361 (* ?x8360 l_0_5_74)))
 (let ((?x8358 (* l_0_5_3 l_0_5_3)))
 (let ((?x8356 (* l_0_5_24 l_0_5_24)))
 (let ((?x8354 (* l_0_5_23 l_0_5_23)))
 (let ((?x8352 (* l_0_5_2 l_0_5_2)))
 (let ((?x8351 (- (* (* (- 2.0) l_0_5_107) l_0_5_116) (* (* 2.0 l_0_5_108) l_0_5_117))))
 (let ((?x8368 (+ (- (- (- (+ (+ (- ?x8351 ?x8352) ?x8354) ?x8356) ?x8358) ?x8361) ?x8364) ?x8367)))
 (= (+ (+ ?x8368 ?x8370) 1.0) 0.0))))))))))))))))
(assert
 (let ((?x8439 (* 2.0 l_0_5_69)))
 (let ((?x8440 (* ?x8439 l_0_5_81)))
 (let ((?x8436 (* 2.0 l_0_5_68)))
 (let ((?x8437 (* ?x8436 l_0_5_80)))
 (let ((?x8433 (* 2.0 l_0_5_67)))
 (let ((?x8434 (* ?x8433 l_0_5_79)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x8431 (* ?x8363 l_0_5_80)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x8429 (* ?x8360 l_0_5_79)))
 (let ((?x8358 (* l_0_5_3 l_0_5_3)))
 (let ((?x8356 (* l_0_5_24 l_0_5_24)))
 (let ((?x8354 (* l_0_5_23 l_0_5_23)))
 (let ((?x8352 (* l_0_5_2 l_0_5_2)))
 (let ((?x8413 (* 2.0 l_0_5_102)))
 (let ((?x8414 (* ?x8413 l_0_5_90)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x8411 (* ?x8408 l_0_5_89)))
 (let ((?x8409 (* ?x8408 l_0_5_87)))
 (let ((?x8398 (* 2.0 l_0_5_100)))
 (let ((?x8406 (* ?x8398 l_0_5_88)))
 (let ((?x8415 (+ (+ (- (+ (* (* (- 2.0) l_0_5_100) l_0_5_86) ?x8406) ?x8409) ?x8411) ?x8414)))
 (let ((?x8421 (- (- ?x8415 (* (* 2.0 l_0_5_109) l_0_5_121)) (* (* 2.0 l_0_5_110) l_0_5_122))))
 (let ((?x8427 (- (- (+ (- ?x8421 (* (* 2.0 l_0_5_111) l_0_5_123)) ?x8352) ?x8354) ?x8356)))
 (let ((?x8442 (- (- (- (- (+ (+ (+ ?x8427 ?x8358) ?x8429) ?x8431) ?x8434) ?x8437) ?x8440) 1.0)))
 (= ?x8442 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x8489 (* l_0_5_108 l_0_5_108)))
 (let ((?x8493 (- (- (- (- _a_1_) (* l_0_5_107 l_0_5_107)) ?x8489) (* (* 1.0 l_0_5_65) l_0_5_65))))
 (let ((?x8499 (+ (- ?x8493 (* (* 1.0 l_0_5_66) l_0_5_66)) (* 1.0 (* l_0_5_86 l_0_5_86)))))
 (= (+ (+ ?x8499 (* 1.0 (* l_0_5_87 l_0_5_87))) 1.0) 0.0)))))
(assert
 (let ((?x8500 (* l_0_5_87 l_0_5_87)))
 (let ((?x8497 (* l_0_5_86 l_0_5_86)))
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x8528 (* ?x8527 l_0_5_86)))
 (let ((?x8512 (* l_0_5_66 l_0_5_66)))
 (let ((?x8508 (* l_0_5_65 l_0_5_65)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x8523 (* ?x8522 l_0_5_65)))
 (let ((?x8358 (* l_0_5_3 l_0_5_3)))
 (let ((?x8356 (* l_0_5_24 l_0_5_24)))
 (let ((?x8354 (* l_0_5_23 l_0_5_23)))
 (let ((?x8352 (* l_0_5_2 l_0_5_2)))
 (let ((?x8519 (- (+ (- (- _a_2_) (* (* 2.0 l_0_5_106) l_0_5_107)) ?x8352) ?x8354)))
 (let ((?x8530 (+ (+ (- (- (- (+ (- ?x8519 ?x8356) ?x8358) ?x8523) ?x8508) ?x8512) ?x8528) ?x8497)))
 (= (+ ?x8530 ?x8500) 0.0))))))))))))))))
(assert
 (let ((?x8369 (* 2.0 l_0_5_87)))
 (let ((?x8559 (* ?x8369 l_0_5_92)))
 (let ((?x8366 (* 2.0 l_0_5_86)))
 (let ((?x8557 (* ?x8366 l_0_5_91)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x8555 (* ?x8363 l_0_5_71)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x8553 (* ?x8360 l_0_5_70)))
 (let ((?x8551 (* l_0_5_45 l_0_5_45)))
 (let ((?x5746 (* l_0_5_44 l_0_5_44)))
 (let ((?x8358 (* l_0_5_3 l_0_5_3)))
 (let ((?x8356 (* l_0_5_24 l_0_5_24)))
 (let ((?x8354 (* l_0_5_23 l_0_5_23)))
 (let ((?x8352 (* l_0_5_2 l_0_5_2)))
 (let ((?x5751 (- (* (* (- 2.0) l_0_5_107) l_0_5_112) (* (* 2.0 l_0_5_108) l_0_5_113))))
 (let ((?x8554 (- (- (- (+ (- (- (+ ?x5751 ?x8352) ?x8354) ?x8356) ?x8358) ?x5746) ?x8551) ?x8553)))
 (= (- (+ (+ (- ?x8554 ?x8555) ?x8557) ?x8559) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x8599 (* ?x8527 l_0_5_95)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x8597 (* ?x8522 l_0_5_74)))
 (let ((?x8595 (* l_0_5_22 l_0_5_22)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8593 (* ?x8592 l_0_5_32)))
 (let ((?x8594 (- (- (* (* 2.0 l_0_5_1) l_0_5_11) (* l_0_5_1 l_0_5_1)) ?x8593)))
 (= (+ (- (+ ?x8594 ?x8595) ?x8597) ?x8599) 0.0))))))))))
(assert
 (let ((?x8369 (* 2.0 l_0_5_87)))
 (let ((?x8370 (* ?x8369 l_0_5_96)))
 (let ((?x8366 (* 2.0 l_0_5_86)))
 (let ((?x8367 (* ?x8366 l_0_5_95)))
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x8599 (* ?x8527 l_0_5_95)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x8364 (* ?x8363 l_0_5_75)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x8361 (* ?x8360 l_0_5_74)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x8597 (* ?x8522 l_0_5_74)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x8630 (* ?x8629 l_0_5_33)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x8627 (* ?x8626 l_0_5_32)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8624 (* ?x8592 l_0_5_23)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8622 (* ?x8621 l_0_5_3)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8619 (* ?x8618 l_0_5_2)))
 (let ((?x8617 (- (* (* (- 2.0) l_0_5_1) l_0_5_2) (* (* 2.0 l_0_5_106) l_0_5_116))))
 (let ((?x8633 (- (- (- (- (+ (+ (+ ?x8617 ?x8619) ?x8622) ?x8624) ?x8627) ?x8630) ?x8597) ?x8361)))
 (= (+ (+ (+ (- ?x8633 ?x8364) ?x8599) ?x8367) ?x8370) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x8686 (* 2.0 l_0_5_90)))
 (let ((?x8687 (* ?x8686 l_0_5_97)))
 (let ((?x8683 (* 2.0 l_0_5_89)))
 (let ((?x8684 (* ?x8683 l_0_5_96)))
 (let ((?x8680 (* 2.0 l_0_5_88)))
 (let ((?x8681 (* ?x8680 l_0_5_95)))
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x8599 (* ?x8527 l_0_5_95)))
 (let ((?x8439 (* 2.0 l_0_5_69)))
 (let ((?x8677 (* ?x8439 l_0_5_76)))
 (let ((?x8436 (* 2.0 l_0_5_68)))
 (let ((?x8675 (* ?x8436 l_0_5_75)))
 (let ((?x8433 (* 2.0 l_0_5_67)))
 (let ((?x8673 (* ?x8433 l_0_5_74)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x8597 (* ?x8522 l_0_5_74)))
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x8670 (* ?x8669 l_0_5_34)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x8667 (* ?x8666 l_0_5_33)))
 (let ((?x8663 (* 2.0 l_0_5_25)))
 (let ((?x8664 (* ?x8663 l_0_5_32)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8661 (* ?x8592 l_0_5_25)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8659 (* ?x8658 l_0_5_6)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x5901 (* ?x8621 l_0_5_5)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x5897 (* ?x8618 l_0_5_4)))
 (let ((?x8662 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x5897) ?x5901) ?x8659) ?x8661)))
 (let ((?x8678 (- (- (- (+ (- (- (- ?x8662 ?x8664) ?x8667) ?x8670) ?x8597) ?x8673) ?x8675) ?x8677)))
 (= (+ (+ (+ (- ?x8678 ?x8599) ?x8681) ?x8684) ?x8687) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8766 (* (* 2.0 l_0_5_94) l_0_5_98)))
 (let ((?x8763 (* (* 2.0 l_0_5_93) l_0_5_97)))
 (let ((?x8760 (* (* 2.0 l_0_5_92) l_0_5_96)))
 (let ((?x8757 (* (* 2.0 l_0_5_91) l_0_5_95)))
 (let ((?x8753 (* 2.0 l_0_5_73)))
 (let ((?x8754 (* ?x8753 l_0_5_77)))
 (let ((?x8750 (* 2.0 l_0_5_72)))
 (let ((?x8751 (* ?x8750 l_0_5_76)))
 (let ((?x8747 (* 2.0 l_0_5_71)))
 (let ((?x8748 (* ?x8747 l_0_5_75)))
 (let ((?x8744 (* 2.0 l_0_5_70)))
 (let ((?x8745 (* ?x8744 l_0_5_74)))
 (let ((?x8738 (* 2.0 l_0_5_31)))
 (let ((?x8739 (* ?x8738 l_0_5_35)))
 (let ((?x8735 (* 2.0 l_0_5_30)))
 (let ((?x8736 (* ?x8735 l_0_5_34)))
 (let ((?x8732 (* 2.0 l_0_5_29)))
 (let ((?x8733 (* ?x8732 l_0_5_33)))
 (let ((?x8729 (* 2.0 l_0_5_28)))
 (let ((?x8730 (* ?x8729 l_0_5_32)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8593 (* ?x8592 l_0_5_32)))
 (let ((?x8726 (* ?x8592 l_0_5_28)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8724 (* ?x8658 l_0_5_9)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8722 (* ?x8621 l_0_5_8)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8720 (* ?x8618 l_0_5_7)))
 (let ((?x8707 (* 2.0 l_0_5_10)))
 (let ((?x8708 (* ?x8707 l_0_5_14)))
 (let ((?x8588 (* 2.0 l_0_5_1)))
 (let ((?x2144 (* ?x8588 l_0_5_7)))
 (let ((?x8589 (* ?x8588 l_0_5_11)))
 (let ((?x8728 (- (+ (+ (+ (+ (+ (- ?x8589 ?x2144) ?x8708) ?x8720) ?x8722) ?x8724) ?x8726) ?x8593)))
 (let ((?x8743 (- (- (- (- (- ?x8728 ?x8730) ?x8733) ?x8736) ?x8739) (* (* 2.0 l_0_5_43) l_0_5_53))))
 (let ((?x8764 (+ (+ (+ (- (- (- (- ?x8743 ?x8745) ?x8748) ?x8751) ?x8754) ?x8757) ?x8760) ?x8763)))
 (= (+ ?x8764 ?x8766) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8845 (* l_0_5_99 l_0_5_99)))
 (let ((?x8843 (* l_0_5_98 l_0_5_98)))
 (let ((?x8841 (* l_0_5_97 l_0_5_97)))
 (let ((?x8839 (* l_0_5_96 l_0_5_96)))
 (let ((?x8837 (* l_0_5_95 l_0_5_95)))
 (let ((?x8835 (* l_0_5_78 l_0_5_78)))
 (let ((?x8833 (* l_0_5_77 l_0_5_77)))
 (let ((?x8831 (* l_0_5_76 l_0_5_76)))
 (let ((?x8829 (* l_0_5_75 l_0_5_75)))
 (let ((?x8827 (* l_0_5_74 l_0_5_74)))
 (let ((?x8825 (* l_0_5_36 l_0_5_36)))
 (let ((?x8823 (* l_0_5_35 l_0_5_35)))
 (let ((?x8821 (* l_0_5_34 l_0_5_34)))
 (let ((?x8819 (* l_0_5_33 l_0_5_33)))
 (let ((?x8817 (* l_0_5_32 l_0_5_32)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8593 (* ?x8592 l_0_5_32)))
 (let ((?x8814 (* l_0_5_15 l_0_5_15)))
 (let ((?x8812 (* l_0_5_14 l_0_5_14)))
 (let ((?x8810 (* l_0_5_13 l_0_5_13)))
 (let ((?x8796 (* l_0_5_12 l_0_5_12)))
 (let ((?x8797 (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) (* l_0_5_11 l_0_5_11)) ?x8796)))
 (let ((?x8822 (- (- (- (+ (+ (+ (+ ?x8797 ?x8810) ?x8812) ?x8814) ?x8593) ?x8817) ?x8819) ?x8821)))
 (let ((?x8836 (- (- (- (- (- (- (- ?x8822 ?x8823) ?x8825) ?x8827) ?x8829) ?x8831) ?x8833) ?x8835)))
 (= (+ (+ (+ (+ (+ ?x8836 ?x8837) ?x8839) ?x8841) ?x8843) ?x8845) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x8913 (* (* 2.0 l_0_5_78) l_0_5_83)))
 (let ((?x8910 (* (* 2.0 l_0_5_77) l_0_5_82)))
 (let ((?x8907 (* (* 2.0 l_0_5_76) l_0_5_81)))
 (let ((?x8904 (* (* 2.0 l_0_5_75) l_0_5_80)))
 (let ((?x8901 (* (* 2.0 l_0_5_74) l_0_5_79)))
 (let ((?x8898 (* (* 2.0 l_0_5_36) l_0_5_41)))
 (let ((?x8895 (* (* 2.0 l_0_5_35) l_0_5_40)))
 (let ((?x8892 (* (* 2.0 l_0_5_34) l_0_5_39)))
 (let ((?x8889 (* (* 2.0 l_0_5_33) l_0_5_38)))
 (let ((?x8886 (* (* 2.0 l_0_5_32) l_0_5_37)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8883 (* ?x8592 l_0_5_37)))
 (let ((?x8881 (* (* 2.0 l_0_5_15) l_0_5_20)))
 (let ((?x8878 (* (* 2.0 l_0_5_14) l_0_5_19)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8875 (* ?x8658 l_0_5_18)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8873 (* ?x8621 l_0_5_17)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8871 (* ?x8618 l_0_5_16)))
 (let ((?x8869 (* (* 2.0 l_0_5_104) l_0_5_99)))
 (let ((?x8865 (* 2.0 l_0_5_103)))
 (let ((?x8866 (* ?x8865 l_0_5_98)))
 (let ((?x8413 (* 2.0 l_0_5_102)))
 (let ((?x8863 (* ?x8413 l_0_5_97)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x8861 (* ?x8408 l_0_5_96)))
 (let ((?x8398 (* 2.0 l_0_5_100)))
 (let ((?x8859 (* ?x8398 l_0_5_95)))
 (let ((?x8867 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_16) ?x8859) ?x8861) ?x8863) ?x8866)))
 (let ((?x8884 (+ (+ (+ (+ (+ (+ (+ ?x8867 ?x8869) ?x8871) ?x8873) ?x8875) ?x8878) ?x8881) ?x8883)))
 (let ((?x8905 (- (- (- (- (- (- (- ?x8884 ?x8886) ?x8889) ?x8892) ?x8895) ?x8898) ?x8901) ?x8904)))
 (= (- (- (- ?x8905 ?x8907) ?x8910) ?x8913) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8686 (* 2.0 l_0_5_90)))
 (let ((?x8687 (* ?x8686 l_0_5_97)))
 (let ((?x8683 (* 2.0 l_0_5_89)))
 (let ((?x8684 (* ?x8683 l_0_5_96)))
 (let ((?x8680 (* 2.0 l_0_5_88)))
 (let ((?x8681 (* ?x8680 l_0_5_95)))
 (let ((?x8369 (* 2.0 l_0_5_87)))
 (let ((?x8370 (* ?x8369 l_0_5_96)))
 (let ((?x8366 (* 2.0 l_0_5_86)))
 (let ((?x8367 (* ?x8366 l_0_5_95)))
 (let ((?x8439 (* 2.0 l_0_5_69)))
 (let ((?x8677 (* ?x8439 l_0_5_76)))
 (let ((?x8436 (* 2.0 l_0_5_68)))
 (let ((?x8675 (* ?x8436 l_0_5_75)))
 (let ((?x8433 (* 2.0 l_0_5_67)))
 (let ((?x8673 (* ?x8433 l_0_5_74)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x8364 (* ?x8363 l_0_5_75)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x8361 (* ?x8360 l_0_5_74)))
 (let ((?x8994 (* 2.0 l_0_5_3)))
 (let ((?x8995 (* ?x8994 l_0_5_5)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x8992 (* ?x8629 l_0_5_26)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x8990 (* ?x8626 l_0_5_25)))
 (let ((?x8987 (* 2.0 l_0_5_2)))
 (let ((?x8988 (* ?x8987 l_0_5_4)))
 (let ((?x8984 (- (* (* (- 2.0) l_0_5_109) l_0_5_116) (* (* 2.0 l_0_5_110) l_0_5_117))))
 (let ((?x8993 (+ (+ (- (- ?x8984 (* (* 2.0 l_0_5_111) l_0_5_118)) ?x8988) ?x8990) ?x8992)))
 (let ((?x9002 (- (- (- (- (+ (+ (- ?x8993 ?x8995) ?x8361) ?x8364) ?x8673) ?x8675) ?x8677) ?x8367)))
 (= (+ (+ (+ (- ?x9002 ?x8370) ?x8681) ?x8684) ?x8687) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x8766 (* (* 2.0 l_0_5_94) l_0_5_98)))
 (let ((?x8763 (* (* 2.0 l_0_5_93) l_0_5_97)))
 (let ((?x8760 (* (* 2.0 l_0_5_92) l_0_5_96)))
 (let ((?x8757 (* (* 2.0 l_0_5_91) l_0_5_95)))
 (let ((?x8753 (* 2.0 l_0_5_73)))
 (let ((?x8754 (* ?x8753 l_0_5_77)))
 (let ((?x8750 (* 2.0 l_0_5_72)))
 (let ((?x8751 (* ?x8750 l_0_5_76)))
 (let ((?x8747 (* 2.0 l_0_5_71)))
 (let ((?x8748 (* ?x8747 l_0_5_75)))
 (let ((?x8744 (* 2.0 l_0_5_70)))
 (let ((?x8745 (* ?x8744 l_0_5_74)))
 (let ((?x8994 (* 2.0 l_0_5_3)))
 (let ((?x9048 (* ?x8994 l_0_5_8)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x8630 (* ?x8629 l_0_5_33)))
 (let ((?x9045 (* ?x8629 l_0_5_29)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x8627 (* ?x8626 l_0_5_32)))
 (let ((?x9042 (* ?x8626 l_0_5_28)))
 (let ((?x8987 (* 2.0 l_0_5_2)))
 (let ((?x9040 (* ?x8987 l_0_5_7)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8622 (* ?x8621 l_0_5_3)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8619 (* ?x8618 l_0_5_2)))
 (let ((?x9032 (- (- ?x8619 (* (* 2.0 l_0_5_112) l_0_5_116)) (* (* 2.0 l_0_5_113) l_0_5_117))))
 (let ((?x9038 (- (- ?x9032 (* (* 2.0 l_0_5_114) l_0_5_118)) (* (* 2.0 l_0_5_115) l_0_5_119))))
 (let ((?x9049 (- (- (+ (- (+ (- (+ ?x9038 ?x8622) ?x9040) ?x9042) ?x8627) ?x9045) ?x8630) ?x9048)))
 (let ((?x9055 (- (- ?x9049 (* (* 2.0 l_0_5_44) l_0_5_53)) (* (* 2.0 l_0_5_45) l_0_5_54))))
 (let ((?x9062 (+ (+ (+ (- (- (- (- ?x9055 ?x8745) ?x8748) ?x8751) ?x8754) ?x8757) ?x8760) ?x8763)))
 (= (+ ?x9062 ?x8766) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x8630 (* ?x8629 l_0_5_33)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x8627 (* ?x8626 l_0_5_32)))
 (let ((?x9109 (* l_0_5_120 l_0_5_120)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8622 (* ?x8621 l_0_5_3)))
 (let ((?x9106 (* l_0_5_119 l_0_5_119)))
 (let ((?x9104 (* l_0_5_118 l_0_5_118)))
 (let ((?x9102 (* l_0_5_117 l_0_5_117)))
 (let ((?x9103 (- (- (* (* (- 2.0) l_0_5_11) l_0_5_2) (* l_0_5_116 l_0_5_116)) ?x9102)))
 (let ((?x9115 (- (+ (+ (- (- (- (- ?x9103 ?x9104) ?x9106) ?x8622) ?x9109) ?x8627) ?x8630) (* (* 1.0 l_0_5_74) l_0_5_74))))
 (let ((?x9121 (- (- ?x9115 (* (* 1.0 l_0_5_75) l_0_5_75)) (* (* 1.0 l_0_5_76) l_0_5_76))))
 (let ((?x9127 (- (- ?x9121 (* (* 1.0 l_0_5_77) l_0_5_77)) (* (* 1.0 l_0_5_78) l_0_5_78))))
 (let ((?x9131 (+ (+ ?x9127 (* 1.0 (* l_0_5_95 l_0_5_95))) (* 1.0 (* l_0_5_96 l_0_5_96)))))
 (let ((?x9135 (+ (+ ?x9131 (* 1.0 (* l_0_5_97 l_0_5_97))) (* 1.0 (* l_0_5_98 l_0_5_98)))))
 (= (+ ?x9135 (* 1.0 (* l_0_5_99 l_0_5_99))) 0.0))))))))))))))))))
(assert
 (let ((?x8913 (* (* 2.0 l_0_5_78) l_0_5_83)))
 (let ((?x8910 (* (* 2.0 l_0_5_77) l_0_5_82)))
 (let ((?x8907 (* (* 2.0 l_0_5_76) l_0_5_81)))
 (let ((?x8904 (* (* 2.0 l_0_5_75) l_0_5_80)))
 (let ((?x8901 (* (* 2.0 l_0_5_74) l_0_5_79)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x9167 (* ?x8629 l_0_5_38)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x9165 (* ?x8626 l_0_5_37)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9163 (* ?x9162 l_0_5_3)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9160 (* ?x9159 l_0_5_2)))
 (let ((?x8869 (* (* 2.0 l_0_5_104) l_0_5_99)))
 (let ((?x8865 (* 2.0 l_0_5_103)))
 (let ((?x8866 (* ?x8865 l_0_5_98)))
 (let ((?x8413 (* 2.0 l_0_5_102)))
 (let ((?x8863 (* ?x8413 l_0_5_97)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x8861 (* ?x8408 l_0_5_96)))
 (let ((?x8398 (* 2.0 l_0_5_100)))
 (let ((?x8859 (* ?x8398 l_0_5_95)))
 (let ((?x3023 (- (+ (+ (+ (+ ?x8859 ?x8861) ?x8863) ?x8866) ?x8869) (* (* 2.0 l_0_5_116) l_0_5_121))))
 (let ((?x9152 (- (- ?x3023 (* (* 2.0 l_0_5_117) l_0_5_122)) (* (* 2.0 l_0_5_118) l_0_5_123))))
 (let ((?x9158 (- (- ?x9152 (* (* 2.0 l_0_5_119) l_0_5_124)) (* (* 2.0 l_0_5_120) l_0_5_125))))
 (let ((?x9171 (- (- (- (+ (+ (- (- ?x9158 ?x9160) ?x9163) ?x9165) ?x9167) ?x8901) ?x8904) ?x8907)))
 (= (- (- ?x9171 ?x8910) ?x8913) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8686 (* 2.0 l_0_5_90)))
 (let ((?x8687 (* ?x8686 l_0_5_97)))
 (let ((?x8683 (* 2.0 l_0_5_89)))
 (let ((?x8684 (* ?x8683 l_0_5_96)))
 (let ((?x8680 (* 2.0 l_0_5_88)))
 (let ((?x8681 (* ?x8680 l_0_5_95)))
 (let ((?x8439 (* 2.0 l_0_5_69)))
 (let ((?x8677 (* ?x8439 l_0_5_76)))
 (let ((?x8436 (* 2.0 l_0_5_68)))
 (let ((?x8675 (* ?x8436 l_0_5_75)))
 (let ((?x8433 (* 2.0 l_0_5_67)))
 (let ((?x8673 (* ?x8433 l_0_5_74)))
 (let ((?x9198 (* l_0_5_6 l_0_5_6)))
 (let ((?x9196 (* l_0_5_5 l_0_5_5)))
 (let ((?x9194 (* l_0_5_4 l_0_5_4)))
 (let ((?x9192 (* l_0_5_27 l_0_5_27)))
 (let ((?x9195 (- (+ (+ (* l_0_5_25 l_0_5_25) (* l_0_5_26 l_0_5_26)) ?x9192) ?x9194)))
 (let ((?x9204 (- (- (+ (+ (+ (- (- ?x9195 ?x9196) ?x9198) ?x8673) ?x8675) ?x8677) ?x8681) ?x8684)))
 (= (- ?x9204 ?x8687) 0.0))))))))))))))))))))
(assert
 (let ((?x8766 (* (* 2.0 l_0_5_94) l_0_5_98)))
 (let ((?x8763 (* (* 2.0 l_0_5_93) l_0_5_97)))
 (let ((?x8760 (* (* 2.0 l_0_5_92) l_0_5_96)))
 (let ((?x8757 (* (* 2.0 l_0_5_91) l_0_5_95)))
 (let ((?x8753 (* 2.0 l_0_5_73)))
 (let ((?x8754 (* ?x8753 l_0_5_77)))
 (let ((?x8750 (* 2.0 l_0_5_72)))
 (let ((?x8751 (* ?x8750 l_0_5_76)))
 (let ((?x8747 (* 2.0 l_0_5_71)))
 (let ((?x8748 (* ?x8747 l_0_5_75)))
 (let ((?x8744 (* 2.0 l_0_5_70)))
 (let ((?x8745 (* ?x8744 l_0_5_74)))
 (let ((?x9244 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9241 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9229 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x8670 (* ?x8669 l_0_5_34)))
 (let ((?x9225 (* ?x8669 l_0_5_30)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x8667 (* ?x8666 l_0_5_33)))
 (let ((?x9222 (* ?x8666 l_0_5_29)))
 (let ((?x8663 (* 2.0 l_0_5_25)))
 (let ((?x8664 (* ?x8663 l_0_5_32)))
 (let ((?x9219 (* ?x8663 l_0_5_28)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8659 (* ?x8658 l_0_5_6)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x5901 (* ?x8621 l_0_5_5)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x5897 (* ?x8618 l_0_5_4)))
 (let ((?x9218 (+ (+ ?x5897 ?x5901) ?x8659)))
 (let ((?x9230 (- (- (+ (- (+ (- (+ ?x9218 ?x9219) ?x8664) ?x9222) ?x8667) ?x9225) ?x8670) ?x9229)))
 (let ((?x9236 (- (- ?x9230 (* (* 2.0 l_0_5_46) l_0_5_53)) (* (* 2.0 l_0_5_47) l_0_5_54))))
 (let ((?x9246 (+ (- (- (- ?x9236 (* (* 2.0 l_0_5_48) l_0_5_55)) ?x9241) ?x9244) ?x8745)))
 (let ((?x9253 (- (- (- (- (+ (+ (+ ?x9246 ?x8748) ?x8751) ?x8754) ?x8757) ?x8760) ?x8763) ?x8766)))
 (= ?x9253 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8845 (* l_0_5_99 l_0_5_99)))
 (let ((?x8843 (* l_0_5_98 l_0_5_98)))
 (let ((?x8841 (* l_0_5_97 l_0_5_97)))
 (let ((?x8839 (* l_0_5_96 l_0_5_96)))
 (let ((?x8837 (* l_0_5_95 l_0_5_95)))
 (let ((?x8835 (* l_0_5_78 l_0_5_78)))
 (let ((?x8833 (* l_0_5_77 l_0_5_77)))
 (let ((?x8831 (* l_0_5_76 l_0_5_76)))
 (let ((?x8829 (* l_0_5_75 l_0_5_75)))
 (let ((?x8827 (* l_0_5_74 l_0_5_74)))
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x8670 (* ?x8669 l_0_5_34)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x8667 (* ?x8666 l_0_5_33)))
 (let ((?x8663 (* 2.0 l_0_5_25)))
 (let ((?x8664 (* ?x8663 l_0_5_32)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8659 (* ?x8658 l_0_5_6)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x5901 (* ?x8621 l_0_5_5)))
 (let ((?x6737 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x5901) ?x8659) ?x8664) ?x8667)))
 (let ((?x9278 (- (+ (+ (+ (+ (+ (+ ?x6737 ?x8670) ?x8827) ?x8829) ?x8831) ?x8833) ?x8835) ?x8837)))
 (= (- (- (- (- ?x9278 ?x8839) ?x8841) ?x8843) ?x8845) 0.0))))))))))))))))))))))))
(assert
 (let ((?x8913 (* (* 2.0 l_0_5_78) l_0_5_83)))
 (let ((?x8910 (* (* 2.0 l_0_5_77) l_0_5_82)))
 (let ((?x8907 (* (* 2.0 l_0_5_76) l_0_5_81)))
 (let ((?x8904 (* (* 2.0 l_0_5_75) l_0_5_80)))
 (let ((?x8901 (* (* 2.0 l_0_5_74) l_0_5_79)))
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x9311 (* ?x8669 l_0_5_39)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x9309 (* ?x8666 l_0_5_38)))
 (let ((?x8663 (* 2.0 l_0_5_25)))
 (let ((?x9307 (* ?x8663 l_0_5_37)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x8630 (* ?x8629 l_0_5_33)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x8627 (* ?x8626 l_0_5_32)))
 (let ((?x9302 (* 2.0 l_0_5_18)))
 (let ((?x9303 (* ?x9302 l_0_5_6)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9300 (* ?x9162 l_0_5_5)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9298 (* ?x9159 l_0_5_4)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8622 (* ?x8621 l_0_5_3)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8619 (* ?x8618 l_0_5_2)))
 (let ((?x8869 (* (* 2.0 l_0_5_104) l_0_5_99)))
 (let ((?x8865 (* 2.0 l_0_5_103)))
 (let ((?x8866 (* ?x8865 l_0_5_98)))
 (let ((?x8413 (* 2.0 l_0_5_102)))
 (let ((?x8863 (* ?x8413 l_0_5_97)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x8861 (* ?x8408 l_0_5_96)))
 (let ((?x9295 (- (- (- (- (* (* (- 2.0) l_0_5_100) l_0_5_95) ?x8861) ?x8863) ?x8866) ?x8869)))
 (let ((?x9306 (- (- (- (- (- (+ (+ ?x9295 ?x8619) ?x8622) ?x9298) ?x9300) ?x9303) ?x8627) ?x8630)))
 (let ((?x9316 (+ (+ (+ (+ (+ (+ (+ ?x9306 ?x9307) ?x9309) ?x9311) ?x8901) ?x8904) ?x8907) ?x8910)))
 (= (+ ?x9316 ?x8913) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9374 (* l_0_5_9 l_0_5_9)))
 (let ((?x9372 (* l_0_5_8 l_0_5_8)))
 (let ((?x9370 (* l_0_5_7 l_0_5_7)))
 (let ((?x9356 (* l_0_5_31 l_0_5_31)))
 (let ((?x8738 (* 2.0 l_0_5_31)))
 (let ((?x8739 (* ?x8738 l_0_5_35)))
 (let ((?x9353 (* l_0_5_30 l_0_5_30)))
 (let ((?x8735 (* 2.0 l_0_5_30)))
 (let ((?x8736 (* ?x8735 l_0_5_34)))
 (let ((?x9350 (* l_0_5_29 l_0_5_29)))
 (let ((?x8732 (* 2.0 l_0_5_29)))
 (let ((?x8733 (* ?x8732 l_0_5_33)))
 (let ((?x9347 (* l_0_5_28 l_0_5_28)))
 (let ((?x8729 (* 2.0 l_0_5_28)))
 (let ((?x8730 (* ?x8729 l_0_5_32)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8724 (* ?x8658 l_0_5_9)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8722 (* ?x8621 l_0_5_8)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8720 (* ?x8618 l_0_5_7)))
 (let ((?x9343 (+ (- (* (* 2.0 l_0_5_10) l_0_5_14) (* l_0_5_10 l_0_5_10)) ?x8720)))
 (let ((?x9352 (- (+ (- (+ (- (+ (+ ?x9343 ?x8722) ?x8724) ?x8730) ?x9347) ?x8733) ?x9350) ?x8736)))
 (let ((?x9360 (- (+ (- (+ ?x9352 ?x9353) ?x8739) ?x9356) (* (* 2.0 l_0_5_49) l_0_5_53))))
 (let ((?x9366 (- (- ?x9360 (* (* 2.0 l_0_5_50) l_0_5_54)) (* (* 2.0 l_0_5_51) l_0_5_55))))
 (let ((?x9375 (- (- (- (- ?x9366 (* (* 2.0 l_0_5_52) l_0_5_56)) ?x9370) ?x9372) ?x9374)))
 (= ?x9375 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9418 (* l_0_5_57 l_0_5_57)))
 (let ((?x9416 (* l_0_5_56 l_0_5_56)))
 (let ((?x9414 (* l_0_5_55 l_0_5_55)))
 (let ((?x9412 (* l_0_5_54 l_0_5_54)))
 (let ((?x9410 (* l_0_5_53 l_0_5_53)))
 (let ((?x8825 (* l_0_5_36 l_0_5_36)))
 (let ((?x8823 (* l_0_5_35 l_0_5_35)))
 (let ((?x8821 (* l_0_5_34 l_0_5_34)))
 (let ((?x8819 (* l_0_5_33 l_0_5_33)))
 (let ((?x8817 (* l_0_5_32 l_0_5_32)))
 (let ((?x8738 (* 2.0 l_0_5_31)))
 (let ((?x8739 (* ?x8738 l_0_5_35)))
 (let ((?x8735 (* 2.0 l_0_5_30)))
 (let ((?x8736 (* ?x8735 l_0_5_34)))
 (let ((?x8732 (* 2.0 l_0_5_29)))
 (let ((?x8733 (* ?x8732 l_0_5_33)))
 (let ((?x8729 (* 2.0 l_0_5_28)))
 (let ((?x8730 (* ?x8729 l_0_5_32)))
 (let ((?x8814 (* l_0_5_15 l_0_5_15)))
 (let ((?x8812 (* l_0_5_14 l_0_5_14)))
 (let ((?x8810 (* l_0_5_13 l_0_5_13)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8724 (* ?x8658 l_0_5_9)))
 (let ((?x8796 (* l_0_5_12 l_0_5_12)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8722 (* ?x8621 l_0_5_8)))
 (let ((?x6151 (* l_0_5_11 l_0_5_11)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8720 (* ?x8618 l_0_5_7)))
 (let ((?x9396 (+ (- (+ (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x8720) ?x6151) ?x8722) ?x8796)))
 (let ((?x9403 (+ (+ (+ (+ (+ (+ (- ?x9396 ?x8724) ?x8810) ?x8812) ?x8814) ?x8730) ?x8733) ?x8736)))
 (let ((?x9411 (- (- (- (- (- (- (+ ?x9403 ?x8739) ?x8817) ?x8819) ?x8821) ?x8823) ?x8825) ?x9410)))
 (= (- (- (- (- ?x9411 ?x9412) ?x9414) ?x9416) ?x9418) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8898 (* (* 2.0 l_0_5_36) l_0_5_41)))
 (let ((?x8895 (* (* 2.0 l_0_5_35) l_0_5_40)))
 (let ((?x8892 (* (* 2.0 l_0_5_34) l_0_5_39)))
 (let ((?x8889 (* (* 2.0 l_0_5_33) l_0_5_38)))
 (let ((?x8886 (* (* 2.0 l_0_5_32) l_0_5_37)))
 (let ((?x8738 (* 2.0 l_0_5_31)))
 (let ((?x9444 (* ?x8738 l_0_5_40)))
 (let ((?x8735 (* 2.0 l_0_5_30)))
 (let ((?x9442 (* ?x8735 l_0_5_39)))
 (let ((?x8732 (* 2.0 l_0_5_29)))
 (let ((?x9440 (* ?x8732 l_0_5_38)))
 (let ((?x8729 (* 2.0 l_0_5_28)))
 (let ((?x9438 (* ?x8729 l_0_5_37)))
 (let ((?x9302 (* 2.0 l_0_5_18)))
 (let ((?x9436 (* ?x9302 l_0_5_9)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9434 (* ?x9162 l_0_5_8)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9432 (* ?x9159 l_0_5_7)))
 (let ((?x8881 (* (* 2.0 l_0_5_15) l_0_5_20)))
 (let ((?x8878 (* (* 2.0 l_0_5_14) l_0_5_19)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8875 (* ?x8658 l_0_5_18)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8873 (* ?x8621 l_0_5_17)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8871 (* ?x8618 l_0_5_16)))
 (let ((?x9430 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_10) l_0_5_19) ?x8871) ?x8873) ?x8875) ?x8878)))
 (let ((?x9443 (+ (+ (+ (- (- (- (+ ?x9430 ?x8881) ?x9432) ?x9434) ?x9436) ?x9438) ?x9440) ?x9442)))
 (let ((?x9453 (- (- (- (- (- (- (+ ?x9443 ?x9444) ?x8886) ?x8889) ?x8892) ?x8895) ?x8898) (* (* 2.0 l_0_5_53) l_0_5_58))))
 (let ((?x9459 (- (- ?x9453 (* (* 2.0 l_0_5_54) l_0_5_59)) (* (* 2.0 l_0_5_55) l_0_5_60))))
 (let ((?x9465 (- (- ?x9459 (* (* 2.0 l_0_5_56) l_0_5_61)) (* (* 2.0 l_0_5_57) l_0_5_62))))
 (= ?x9465 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8825 (* l_0_5_36 l_0_5_36)))
 (let ((?x8823 (* l_0_5_35 l_0_5_35)))
 (let ((?x8821 (* l_0_5_34 l_0_5_34)))
 (let ((?x8819 (* l_0_5_33 l_0_5_33)))
 (let ((?x8817 (* l_0_5_32 l_0_5_32)))
 (let ((?x8814 (* l_0_5_15 l_0_5_15)))
 (let ((?x8812 (* l_0_5_14 l_0_5_14)))
 (let ((?x8810 (* l_0_5_13 l_0_5_13)))
 (let ((?x9508 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x8810) ?x8812)))
 (= (+ (+ (+ (+ (+ (- ?x9508 ?x8814) ?x8817) ?x8819) ?x8821) ?x8823) ?x8825) 0.0)))))))))))
(assert
 (let ((?x8898 (* (* 2.0 l_0_5_36) l_0_5_41)))
 (let ((?x8895 (* (* 2.0 l_0_5_35) l_0_5_40)))
 (let ((?x8892 (* (* 2.0 l_0_5_34) l_0_5_39)))
 (let ((?x8889 (* (* 2.0 l_0_5_33) l_0_5_38)))
 (let ((?x8886 (* (* 2.0 l_0_5_32) l_0_5_37)))
 (let ((?x8881 (* (* 2.0 l_0_5_15) l_0_5_20)))
 (let ((?x8878 (* (* 2.0 l_0_5_14) l_0_5_19)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8875 (* ?x8658 l_0_5_18)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8873 (* ?x8621 l_0_5_17)))
 (let ((?x9535 (- (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_16) ?x8873) ?x8875) ?x8878) ?x8881)))
 (= (+ (+ (+ (+ (+ ?x9535 ?x8886) ?x8889) ?x8892) ?x8895) ?x8898) 0.0))))))))))))))
(assert
 (let ((?x9568 (* l_0_5_42 l_0_5_42)))
 (let ((?x9566 (* l_0_5_41 l_0_5_41)))
 (let ((?x9564 (* l_0_5_40 l_0_5_40)))
 (let ((?x9562 (* l_0_5_39 l_0_5_39)))
 (let ((?x9560 (* l_0_5_38 l_0_5_38)))
 (let ((?x9558 (* l_0_5_37 l_0_5_37)))
 (let ((?x9556 (* l_0_5_21 l_0_5_21)))
 (let ((?x9554 (* l_0_5_20 l_0_5_20)))
 (let ((?x9552 (* l_0_5_19 l_0_5_19)))
 (let ((?x9550 (* l_0_5_18 l_0_5_18)))
 (let ((?x9553 (- (- (- (* (- l_0_5_16) l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x9550) ?x9552)))
 (let ((?x9567 (+ (+ (+ (+ (+ (- (- ?x9553 ?x9554) ?x9556) ?x9558) ?x9560) ?x9562) ?x9564) ?x9566)))
 (= (+ ?x9567 ?x9568) 0.0))))))))))))))
(assert
 (let ((?x8595 (* l_0_5_22 l_0_5_22)))
 (let ((?x8590 (* l_0_5_1 l_0_5_1)))
 (let ((?x4028 (- ?x8590 ?x8595)))
 (= ?x4028 0.0)))))
(assert
 (let ((?x8439 (* 2.0 l_0_5_69)))
 (let ((?x8440 (* ?x8439 l_0_5_81)))
 (let ((?x8436 (* 2.0 l_0_5_68)))
 (let ((?x8437 (* ?x8436 l_0_5_80)))
 (let ((?x8433 (* 2.0 l_0_5_67)))
 (let ((?x8434 (* ?x8433 l_0_5_79)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x9605 (* ?x8522 l_0_5_79)))
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x9311 (* ?x8669 l_0_5_39)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x9309 (* ?x8666 l_0_5_38)))
 (let ((?x8663 (* 2.0 l_0_5_25)))
 (let ((?x9307 (* ?x8663 l_0_5_37)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8624 (* ?x8592 l_0_5_23)))
 (let ((?x9302 (* 2.0 l_0_5_18)))
 (let ((?x9303 (* ?x9302 l_0_5_6)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9300 (* ?x9162 l_0_5_5)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9298 (* ?x9159 l_0_5_4)))
 (let ((?x8413 (* 2.0 l_0_5_102)))
 (let ((?x8414 (* ?x8413 l_0_5_90)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x8411 (* ?x8408 l_0_5_89)))
 (let ((?x8398 (* 2.0 l_0_5_100)))
 (let ((?x8406 (* ?x8398 l_0_5_88)))
 (let ((?x9596 (+ (+ (- (* (* 2.0 l_0_5_1) l_0_5_2) (* ?x8398 l_0_5_85)) ?x8406) ?x8411)))
 (let ((?x9603 (- (- (- (+ (+ (+ (+ ?x9596 ?x8414) ?x9298) ?x9300) ?x9303) ?x8624) ?x9307) ?x9309)))
 (= (- (- (- (+ (- ?x9603 ?x9311) ?x9605) ?x8434) ?x8437) ?x8440) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8661 (* ?x8592 l_0_5_25)))
 (let ((?x7057 (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x8661)))
 (= ?x7057 0.0)))))
(assert
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8726 (* ?x8592 l_0_5_28)))
 (let ((?x8588 (* 2.0 l_0_5_1)))
 (let ((?x2144 (* ?x8588 l_0_5_7)))
 (= (- ?x2144 ?x8726) 0.0))))))
(assert
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8593 (* ?x8592 l_0_5_32)))
 (let ((?x8588 (* 2.0 l_0_5_1)))
 (let ((?x8589 (* ?x8588 l_0_5_11)))
 (= (- ?x8589 ?x8593) 0.0))))))
(assert
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8883 (* ?x8592 l_0_5_37)))
 (let ((?x8588 (* 2.0 l_0_5_1)))
 (let ((?x7063 (* ?x8588 l_0_5_16)))
 (= (- ?x7063 ?x8883) 0.0))))))
(assert
 (let ((?x8439 (* 2.0 l_0_5_69)))
 (let ((?x8440 (* ?x8439 l_0_5_81)))
 (let ((?x8436 (* 2.0 l_0_5_68)))
 (let ((?x8437 (* ?x8436 l_0_5_80)))
 (let ((?x8433 (* 2.0 l_0_5_67)))
 (let ((?x8434 (* ?x8433 l_0_5_79)))
 (let ((?x8994 (* 2.0 l_0_5_3)))
 (let ((?x8995 (* ?x8994 l_0_5_5)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x8992 (* ?x8629 l_0_5_26)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x8990 (* ?x8626 l_0_5_25)))
 (let ((?x8987 (* 2.0 l_0_5_2)))
 (let ((?x8988 (* ?x8987 l_0_5_4)))
 (let ((?x8413 (* 2.0 l_0_5_102)))
 (let ((?x8414 (* ?x8413 l_0_5_90)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x8411 (* ?x8408 l_0_5_89)))
 (let ((?x9618 (- (+ (- (- (* (* (- 2.0) l_0_5_100) l_0_5_88) ?x8411) ?x8414) ?x8988) ?x8990)))
 (= (+ (+ (+ (+ (- ?x9618 ?x8992) ?x8995) ?x8434) ?x8437) ?x8440) 0.0)))))))))))))))))))))
(assert
 (let ((?x8753 (* 2.0 l_0_5_73)))
 (let ((?x9656 (* ?x8753 l_0_5_82)))
 (let ((?x8750 (* 2.0 l_0_5_72)))
 (let ((?x9654 (* ?x8750 l_0_5_81)))
 (let ((?x8747 (* 2.0 l_0_5_71)))
 (let ((?x9652 (* ?x8747 l_0_5_80)))
 (let ((?x8744 (* 2.0 l_0_5_70)))
 (let ((?x9650 (* ?x8744 l_0_5_79)))
 (let ((?x8994 (* 2.0 l_0_5_3)))
 (let ((?x9048 (* ?x8994 l_0_5_8)))
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x9311 (* ?x8669 l_0_5_39)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x9309 (* ?x8666 l_0_5_38)))
 (let ((?x8663 (* 2.0 l_0_5_25)))
 (let ((?x9307 (* ?x8663 l_0_5_37)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x9045 (* ?x8629 l_0_5_29)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x9042 (* ?x8626 l_0_5_28)))
 (let ((?x8987 (* 2.0 l_0_5_2)))
 (let ((?x9040 (* ?x8987 l_0_5_7)))
 (let ((?x9302 (* 2.0 l_0_5_18)))
 (let ((?x9303 (* ?x9302 l_0_5_6)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9300 (* ?x9162 l_0_5_5)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9298 (* ?x9159 l_0_5_4)))
 (let ((?x8865 (* 2.0 l_0_5_103)))
 (let ((?x9632 (* ?x8865 l_0_5_94)))
 (let ((?x8413 (* 2.0 l_0_5_102)))
 (let ((?x7117 (* ?x8413 l_0_5_93)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x7116 (* ?x8408 l_0_5_92)))
 (let ((?x9634 (+ (- (- (- (* (* (- 2.0) l_0_5_100) l_0_5_91) ?x7116) ?x7117) ?x9632) ?x9298)))
 (let ((?x9641 (- (- (- (- (+ (+ (+ ?x9634 ?x9300) ?x9303) ?x9040) ?x9042) ?x9045) ?x9307) ?x9309)))
 (let ((?x9647 (- (- (+ (- ?x9641 ?x9311) ?x9048) (* (* 2.0 l_0_5_46) l_0_5_58)) (* (* 2.0 l_0_5_47) l_0_5_59))))
 (let ((?x9655 (+ (+ (+ (- ?x9647 (* (* 2.0 l_0_5_48) l_0_5_60)) ?x9650) ?x9652) ?x9654)))
 (= (+ ?x9655 ?x9656) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9714 (* l_0_5_84 l_0_5_84)))
 (let ((?x9712 (* l_0_5_83 l_0_5_83)))
 (let ((?x9710 (* l_0_5_82 l_0_5_82)))
 (let ((?x9708 (* l_0_5_81 l_0_5_81)))
 (let ((?x9706 (* l_0_5_80 l_0_5_80)))
 (let ((?x9704 (* l_0_5_79 l_0_5_79)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x9167 (* ?x8629 l_0_5_38)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x9165 (* ?x8626 l_0_5_37)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9163 (* ?x9162 l_0_5_3)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9160 (* ?x9159 l_0_5_2)))
 (let ((?x9698 (* l_0_5_105 l_0_5_105)))
 (let ((?x9696 (* l_0_5_104 l_0_5_104)))
 (let ((?x9694 (* l_0_5_103 l_0_5_103)))
 (let ((?x9692 (* l_0_5_102 l_0_5_102)))
 (let ((?x9693 (- (- (* (- l_0_5_100) l_0_5_100) (* l_0_5_101 l_0_5_101)) ?x9692)))
 (let ((?x9703 (- (- (+ (+ (- (- (- ?x9693 ?x9694) ?x9696) ?x9698) ?x9160) ?x9163) ?x9165) ?x9167)))
 (= (+ (+ (+ (+ (+ (+ ?x9703 ?x9704) ?x9706) ?x9708) ?x9710) ?x9712) ?x9714) 0.0))))))))))))))))))))))
(assert
 (let ((?x9198 (* l_0_5_6 l_0_5_6)))
 (let ((?x9196 (* l_0_5_5 l_0_5_5)))
 (let ((?x9194 (* l_0_5_4 l_0_5_4)))
 (let ((?x9192 (* l_0_5_27 l_0_5_27)))
 (let ((?x9736 (+ (- (- (* (- l_0_5_25) l_0_5_25) (* l_0_5_26 l_0_5_26)) ?x9192) ?x9194)))
 (let ((?x9738 (+ (+ ?x9736 ?x9196) ?x9198)))
 (= ?x9738 0.0))))))))
(assert
 (let ((?x9244 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9241 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9229 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x9225 (* ?x8669 l_0_5_30)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x9222 (* ?x8666 l_0_5_29)))
 (let ((?x9743 (+ (- (- (* (* (- 2.0) l_0_5_25) l_0_5_28) ?x9222) ?x9225) ?x9229)))
 (= (+ (+ ?x9743 ?x9241) ?x9244) 0.0))))))))))
(assert
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x8670 (* ?x8669 l_0_5_34)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x8667 (* ?x8666 l_0_5_33)))
 (let ((?x8663 (* 2.0 l_0_5_25)))
 (let ((?x8664 (* ?x8663 l_0_5_32)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8659 (* ?x8658 l_0_5_6)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x5901 (* ?x8621 l_0_5_5)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x5897 (* ?x8618 l_0_5_4)))
 (let ((?x9218 (+ (+ ?x5897 ?x5901) ?x8659)))
 (= (- (- (- ?x9218 ?x8664) ?x8667) ?x8670) 0.0)))))))))))))))
(assert
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x9311 (* ?x8669 l_0_5_39)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x9309 (* ?x8666 l_0_5_38)))
 (let ((?x8663 (* 2.0 l_0_5_25)))
 (let ((?x9307 (* ?x8663 l_0_5_37)))
 (let ((?x9302 (* 2.0 l_0_5_18)))
 (let ((?x9303 (* ?x9302 l_0_5_6)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9300 (* ?x9162 l_0_5_5)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9298 (* ?x9159 l_0_5_4)))
 (= (- (- (- (+ (+ ?x9298 ?x9300) ?x9303) ?x9307) ?x9309) ?x9311) 0.0))))))))))))))
(assert
 (let ((?x9374 (* l_0_5_9 l_0_5_9)))
 (let ((?x9372 (* l_0_5_8 l_0_5_8)))
 (let ((?x9370 (* l_0_5_7 l_0_5_7)))
 (let ((?x9356 (* l_0_5_31 l_0_5_31)))
 (let ((?x9353 (* l_0_5_30 l_0_5_30)))
 (let ((?x9350 (* l_0_5_29 l_0_5_29)))
 (let ((?x4395 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_28 l_0_5_28)) ?x9350) ?x9353)))
 (let ((?x9770 (- ?x4395 ?x9356)))
 (= (+ (+ (+ ?x9770 ?x9370) ?x9372) ?x9374) 0.0))))))))))
(assert
 (let ((?x8738 (* 2.0 l_0_5_31)))
 (let ((?x8739 (* ?x8738 l_0_5_35)))
 (let ((?x8735 (* 2.0 l_0_5_30)))
 (let ((?x8736 (* ?x8735 l_0_5_34)))
 (let ((?x8732 (* 2.0 l_0_5_29)))
 (let ((?x8733 (* ?x8732 l_0_5_33)))
 (let ((?x8729 (* 2.0 l_0_5_28)))
 (let ((?x8730 (* ?x8729 l_0_5_32)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8724 (* ?x8658 l_0_5_9)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8722 (* ?x8621 l_0_5_8)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8720 (* ?x8618 l_0_5_7)))
 (let ((?x8707 (* 2.0 l_0_5_10)))
 (let ((?x8708 (* ?x8707 l_0_5_14)))
 (let ((?x9782 (- (- (- (- (+ (+ (+ ?x8708 ?x8720) ?x8722) ?x8724) ?x8730) ?x8733) ?x8736) ?x8739)))
 (= ?x9782 0.0)))))))))))))))))))
(assert
 (let ((?x8738 (* 2.0 l_0_5_31)))
 (let ((?x9444 (* ?x8738 l_0_5_40)))
 (let ((?x8735 (* 2.0 l_0_5_30)))
 (let ((?x9442 (* ?x8735 l_0_5_39)))
 (let ((?x8732 (* 2.0 l_0_5_29)))
 (let ((?x9440 (* ?x8732 l_0_5_38)))
 (let ((?x8729 (* 2.0 l_0_5_28)))
 (let ((?x9438 (* ?x8729 l_0_5_37)))
 (let ((?x9302 (* 2.0 l_0_5_18)))
 (let ((?x9436 (* ?x9302 l_0_5_9)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9434 (* ?x9162 l_0_5_8)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9432 (* ?x9159 l_0_5_7)))
 (let ((?x8707 (* 2.0 l_0_5_10)))
 (let ((?x9792 (* ?x8707 l_0_5_19)))
 (let ((?x9799 (- (- (- (- (+ (+ (+ ?x9792 ?x9432) ?x9434) ?x9436) ?x9438) ?x9440) ?x9442) ?x9444)))
 (= ?x9799 0.0)))))))))))))))))))
(assert
 (let ((?x8825 (* l_0_5_36 l_0_5_36)))
 (let ((?x8823 (* l_0_5_35 l_0_5_35)))
 (let ((?x8821 (* l_0_5_34 l_0_5_34)))
 (let ((?x8819 (* l_0_5_33 l_0_5_33)))
 (let ((?x8817 (* l_0_5_32 l_0_5_32)))
 (let ((?x8814 (* l_0_5_15 l_0_5_15)))
 (let ((?x8812 (* l_0_5_14 l_0_5_14)))
 (let ((?x8810 (* l_0_5_13 l_0_5_13)))
 (let ((?x7286 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x8810) ?x8812)))
 (= (- (- (- (- (- (+ ?x7286 ?x8814) ?x8817) ?x8819) ?x8821) ?x8823) ?x8825) 0.0)))))))))))
(assert
 (let ((?x8898 (* (* 2.0 l_0_5_36) l_0_5_41)))
 (let ((?x8895 (* (* 2.0 l_0_5_35) l_0_5_40)))
 (let ((?x8892 (* (* 2.0 l_0_5_34) l_0_5_39)))
 (let ((?x8889 (* (* 2.0 l_0_5_33) l_0_5_38)))
 (let ((?x8886 (* (* 2.0 l_0_5_32) l_0_5_37)))
 (let ((?x8881 (* (* 2.0 l_0_5_15) l_0_5_20)))
 (let ((?x8878 (* (* 2.0 l_0_5_14) l_0_5_19)))
 (let ((?x8658 (* 2.0 l_0_5_13)))
 (let ((?x8875 (* ?x8658 l_0_5_18)))
 (let ((?x8621 (* 2.0 l_0_5_12)))
 (let ((?x8873 (* ?x8621 l_0_5_17)))
 (let ((?x8618 (* 2.0 l_0_5_11)))
 (let ((?x8871 (* ?x8618 l_0_5_16)))
 (let ((?x9821 (- (- (- (+ (+ (+ (+ ?x8871 ?x8873) ?x8875) ?x8878) ?x8881) ?x8886) ?x8889) ?x8892)))
 (= (- (- ?x9821 ?x8895) ?x8898) 0.0))))))))))))))))
(assert
 (let ((?x9568 (* l_0_5_42 l_0_5_42)))
 (let ((?x9566 (* l_0_5_41 l_0_5_41)))
 (let ((?x9564 (* l_0_5_40 l_0_5_40)))
 (let ((?x9562 (* l_0_5_39 l_0_5_39)))
 (let ((?x9560 (* l_0_5_38 l_0_5_38)))
 (let ((?x9558 (* l_0_5_37 l_0_5_37)))
 (let ((?x9556 (* l_0_5_21 l_0_5_21)))
 (let ((?x9554 (* l_0_5_20 l_0_5_20)))
 (let ((?x9552 (* l_0_5_19 l_0_5_19)))
 (let ((?x9550 (* l_0_5_18 l_0_5_18)))
 (let ((?x4495 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x9550) ?x9552)))
 (let ((?x9841 (- (- (- (- (- (+ (+ ?x4495 ?x9554) ?x9556) ?x9558) ?x9560) ?x9562) ?x9564) ?x9566)))
 (let ((?x9842 (- ?x9841 ?x9568)))
 (= ?x9842 0.0)))))))))))))))
(assert
 (let ((?x4622 (* l_0_5_85 l_0_5_85)))
 (let ((?x7325 (* l_0_5_64 l_0_5_64)))
 (let ((?x8595 (* l_0_5_22 l_0_5_22)))
 (let ((?x8590 (* l_0_5_1 l_0_5_1)))
 (let ((?x4028 (- ?x8590 ?x8595)))
 (= (+ (- ?x4028 ?x7325) ?x4622) 0.0)))))))
(assert
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x8528 (* ?x8527 l_0_5_86)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x8523 (* ?x8522 l_0_5_65)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8624 (* ?x8592 l_0_5_23)))
 (let ((?x9844 (- (- (* (* 2.0 l_0_5_1) l_0_5_2) (* l_0_5_106 l_0_5_106)) ?x8624)))
 (let ((?x9851 (+ (+ (- (- ?x9844 ?x8523) (* (* 1.0 l_0_5_64) l_0_5_64)) ?x8528) (* 1.0 (* l_0_5_85 l_0_5_85)))))
 (= ?x9851 0.0))))))))))
(assert
 (let ((?x4622 (* l_0_5_85 l_0_5_85)))
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x9860 (* ?x8527 l_0_5_88)))
 (let ((?x7325 (* l_0_5_64 l_0_5_64)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x9857 (* ?x8522 l_0_5_67)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8661 (* ?x8592 l_0_5_25)))
 (let ((?x7057 (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x8661)))
 (= (- (+ (+ (- ?x7057 ?x9857) ?x7325) ?x9860) ?x4622) 0.0)))))))))))
(assert
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x9880 (* ?x8527 l_0_5_91)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x9878 (* ?x8522 l_0_5_70)))
 (let ((?x9876 (* l_0_5_43 l_0_5_43)))
 (let ((?x8595 (* l_0_5_22 l_0_5_22)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8726 (* ?x8592 l_0_5_28)))
 (let ((?x9874 (- (+ (* (* 2.0 l_0_5_1) l_0_5_7) (* l_0_5_1 l_0_5_1)) ?x8726)))
 (= (+ (- (- (- ?x9874 ?x8595) ?x9876) ?x9878) ?x9880) 0.0)))))))))))
(assert
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x9605 (* ?x8522 l_0_5_79)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8883 (* ?x8592 l_0_5_37)))
 (let ((?x8398 (* 2.0 l_0_5_100)))
 (let ((?x9593 (* ?x8398 l_0_5_85)))
 (let ((?x8588 (* 2.0 l_0_5_1)))
 (let ((?x7063 (* ?x8588 l_0_5_16)))
 (= (- (- (+ ?x7063 ?x9593) ?x8883) ?x9605) 0.0))))))))))
(assert
 (let ((?x8369 (* 2.0 l_0_5_87)))
 (let ((?x9913 (* ?x8369 l_0_5_89)))
 (let ((?x8366 (* 2.0 l_0_5_86)))
 (let ((?x9911 (* ?x8366 l_0_5_88)))
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x9860 (* ?x8527 l_0_5_88)))
 (let ((?x8528 (* ?x8527 l_0_5_86)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x9907 (* ?x8363 l_0_5_68)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x9905 (* ?x8360 l_0_5_67)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x9857 (* ?x8522 l_0_5_67)))
 (let ((?x8523 (* ?x8522 l_0_5_65)))
 (let ((?x8994 (* 2.0 l_0_5_3)))
 (let ((?x8995 (* ?x8994 l_0_5_5)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x8992 (* ?x8629 l_0_5_26)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x8990 (* ?x8626 l_0_5_25)))
 (let ((?x8987 (* 2.0 l_0_5_2)))
 (let ((?x8988 (* ?x8987 l_0_5_4)))
 (let ((?x9902 (+ (- (- (+ (* (* (- 2.0) l_0_5_106) l_0_5_109) ?x8988) ?x8990) ?x8992) ?x8995)))
 (let ((?x9912 (+ (+ (- (- (- (- (+ ?x9902 ?x8523) ?x9857) ?x9905) ?x9907) ?x8528) ?x9860) ?x9911)))
 (= (+ ?x9912 ?x9913) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x8369 (* 2.0 l_0_5_87)))
 (let ((?x8559 (* ?x8369 l_0_5_92)))
 (let ((?x8366 (* 2.0 l_0_5_86)))
 (let ((?x8557 (* ?x8366 l_0_5_91)))
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x9880 (* ?x8527 l_0_5_91)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x8555 (* ?x8363 l_0_5_71)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x8553 (* ?x8360 l_0_5_70)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x9878 (* ?x8522 l_0_5_70)))
 (let ((?x8994 (* 2.0 l_0_5_3)))
 (let ((?x9048 (* ?x8994 l_0_5_8)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x9045 (* ?x8629 l_0_5_29)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x9042 (* ?x8626 l_0_5_28)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8624 (* ?x8592 l_0_5_23)))
 (let ((?x8987 (* 2.0 l_0_5_2)))
 (let ((?x9040 (* ?x8987 l_0_5_7)))
 (let ((?x8588 (* 2.0 l_0_5_1)))
 (let ((?x9592 (* ?x8588 l_0_5_2)))
 (let ((?x9945 (- (- (+ (- ?x9592 (* (* 2.0 l_0_5_106) l_0_5_112)) ?x9040) ?x8624) ?x9042)))
 (let ((?x9950 (- (- (+ (- ?x9945 ?x9045) ?x9048) (* (* 2.0 l_0_5_43) l_0_5_44)) ?x9878)))
 (= (+ (+ (+ (- (- ?x9950 ?x8553) ?x8555) ?x9880) ?x8557) ?x8559) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x8431 (* ?x8363 l_0_5_80)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x8429 (* ?x8360 l_0_5_79)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x9605 (* ?x8522 l_0_5_79)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x9167 (* ?x8629 l_0_5_38)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x9165 (* ?x8626 l_0_5_37)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9163 (* ?x9162 l_0_5_3)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9160 (* ?x9159 l_0_5_2)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x8409 (* ?x8408 l_0_5_87)))
 (let ((?x8398 (* 2.0 l_0_5_100)))
 (let ((?x7439 (* ?x8398 l_0_5_86)))
 (let ((?x9593 (* ?x8398 l_0_5_85)))
 (let ((?x9974 (+ (- (+ (+ ?x9593 ?x7439) ?x8409) (* (* 2.0 l_0_5_106) l_0_5_121)) ?x9160)))
 (= (- (- (- (- (- (+ ?x9974 ?x9163) ?x9165) ?x9167) ?x9605) ?x8429) ?x8431) 0.0))))))))))))))))))))))
(assert
 (let ((?x10002 (* l_0_5_90 l_0_5_90)))
 (let ((?x10000 (* l_0_5_89 l_0_5_89)))
 (let ((?x9998 (* l_0_5_88 l_0_5_88)))
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x9860 (* ?x8527 l_0_5_88)))
 (let ((?x7454 (* l_0_5_69 l_0_5_69)))
 (let ((?x7482 (* l_0_5_68 l_0_5_68)))
 (let ((?x4960 (* l_0_5_67 l_0_5_67)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x9857 (* ?x8522 l_0_5_67)))
 (let ((?x9198 (* l_0_5_6 l_0_5_6)))
 (let ((?x9196 (* l_0_5_5 l_0_5_5)))
 (let ((?x9194 (* l_0_5_4 l_0_5_4)))
 (let ((?x9192 (* l_0_5_27 l_0_5_27)))
 (let ((?x9736 (+ (- (- (* (- l_0_5_25) l_0_5_25) (* l_0_5_26 l_0_5_26)) ?x9192) ?x9194)))
 (let ((?x9738 (+ (+ ?x9736 ?x9196) ?x9198)))
 (let ((?x10001 (+ (+ (- (- (- (- (+ ?x9738 ?x9857) ?x4960) ?x7482) ?x7454) ?x9860) ?x9998) ?x10000)))
 (= (+ ?x10001 ?x10002) 0.0)))))))))))))))))))
(assert
 (let ((?x8686 (* 2.0 l_0_5_90)))
 (let ((?x10045 (* ?x8686 l_0_5_93)))
 (let ((?x8683 (* 2.0 l_0_5_89)))
 (let ((?x10043 (* ?x8683 l_0_5_92)))
 (let ((?x8680 (* 2.0 l_0_5_88)))
 (let ((?x10041 (* ?x8680 l_0_5_91)))
 (let ((?x8527 (* 2.0 l_0_5_85)))
 (let ((?x9880 (* ?x8527 l_0_5_91)))
 (let ((?x8439 (* 2.0 l_0_5_69)))
 (let ((?x10038 (* ?x8439 l_0_5_72)))
 (let ((?x8436 (* 2.0 l_0_5_68)))
 (let ((?x10036 (* ?x8436 l_0_5_71)))
 (let ((?x8433 (* 2.0 l_0_5_67)))
 (let ((?x10034 (* ?x8433 l_0_5_70)))
 (let ((?x8522 (* 2.0 l_0_5_64)))
 (let ((?x9878 (* ?x8522 l_0_5_70)))
 (let ((?x9244 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9241 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9229 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x9225 (* ?x8669 l_0_5_30)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x9222 (* ?x8666 l_0_5_29)))
 (let ((?x8663 (* 2.0 l_0_5_25)))
 (let ((?x9219 (* ?x8663 l_0_5_28)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8661 (* ?x8592 l_0_5_25)))
 (let ((?x7057 (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x8661)))
 (let ((?x10030 (- (+ (- (- (- ?x7057 ?x9219) ?x9222) ?x9225) ?x9229) (* (* 2.0 l_0_5_43) l_0_5_46))))
 (let ((?x10040 (- (- (- (- (+ (+ (+ ?x10030 ?x9241) ?x9244) ?x9878) ?x10034) ?x10036) ?x10038) ?x9880)))
 (= (+ (+ (+ ?x10040 ?x10041) ?x10043) ?x10045) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x10098 (* l_0_5_94 l_0_5_94)))
 (let ((?x10096 (* l_0_5_93 l_0_5_93)))
 (let ((?x10094 (* l_0_5_92 l_0_5_92)))
 (let ((?x10092 (* l_0_5_91 l_0_5_91)))
 (let ((?x9374 (* l_0_5_9 l_0_5_9)))
 (let ((?x9372 (* l_0_5_8 l_0_5_8)))
 (let ((?x10088 (* l_0_5_73 l_0_5_73)))
 (let ((?x10086 (* l_0_5_72 l_0_5_72)))
 (let ((?x10084 (* l_0_5_71 l_0_5_71)))
 (let ((?x10082 (* l_0_5_70 l_0_5_70)))
 (let ((?x9370 (* l_0_5_7 l_0_5_7)))
 (let ((?x9356 (* l_0_5_31 l_0_5_31)))
 (let ((?x9353 (* l_0_5_30 l_0_5_30)))
 (let ((?x9350 (* l_0_5_29 l_0_5_29)))
 (let ((?x9347 (* l_0_5_28 l_0_5_28)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8726 (* ?x8592 l_0_5_28)))
 (let ((?x10074 (- (+ (* (* 2.0 l_0_5_1) l_0_5_7) (* l_0_5_10 l_0_5_10)) ?x8726)))
 (let ((?x10080 (- (- (- (- (- ?x10074 ?x9347) ?x9350) ?x9353) ?x9356) (* (* 2.0 l_0_5_43) l_0_5_49))))
 (let ((?x10091 (+ (+ (- (- (- (- (+ ?x10080 ?x9370) ?x10082) ?x10084) ?x10086) ?x10088) ?x9372) ?x9374)))
 (= (+ (+ (+ (+ ?x10091 ?x10092) ?x10094) ?x10096) ?x10098) 0.0))))))))))))))))))))))
(assert
 (let ((?x8753 (* 2.0 l_0_5_73)))
 (let ((?x9656 (* ?x8753 l_0_5_82)))
 (let ((?x8750 (* 2.0 l_0_5_72)))
 (let ((?x9654 (* ?x8750 l_0_5_81)))
 (let ((?x8747 (* 2.0 l_0_5_71)))
 (let ((?x9652 (* ?x8747 l_0_5_80)))
 (let ((?x8744 (* 2.0 l_0_5_70)))
 (let ((?x9650 (* ?x8744 l_0_5_79)))
 (let ((?x8738 (* 2.0 l_0_5_31)))
 (let ((?x9444 (* ?x8738 l_0_5_40)))
 (let ((?x8735 (* 2.0 l_0_5_30)))
 (let ((?x9442 (* ?x8735 l_0_5_39)))
 (let ((?x8732 (* 2.0 l_0_5_29)))
 (let ((?x9440 (* ?x8732 l_0_5_38)))
 (let ((?x8729 (* 2.0 l_0_5_28)))
 (let ((?x9438 (* ?x8729 l_0_5_37)))
 (let ((?x8592 (* 2.0 l_0_5_22)))
 (let ((?x8883 (* ?x8592 l_0_5_37)))
 (let ((?x9302 (* 2.0 l_0_5_18)))
 (let ((?x9436 (* ?x9302 l_0_5_9)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9434 (* ?x9162 l_0_5_8)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9432 (* ?x9159 l_0_5_7)))
 (let ((?x8865 (* 2.0 l_0_5_103)))
 (let ((?x9632 (* ?x8865 l_0_5_94)))
 (let ((?x8413 (* 2.0 l_0_5_102)))
 (let ((?x7117 (* ?x8413 l_0_5_93)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x7116 (* ?x8408 l_0_5_92)))
 (let ((?x8398 (* 2.0 l_0_5_100)))
 (let ((?x10121 (* ?x8398 l_0_5_91)))
 (let ((?x8707 (* 2.0 l_0_5_10)))
 (let ((?x9792 (* ?x8707 l_0_5_19)))
 (let ((?x8588 (* 2.0 l_0_5_1)))
 (let ((?x7063 (* ?x8588 l_0_5_16)))
 (let ((?x10127 (+ (+ (+ (+ (+ (+ (+ ?x7063 ?x9792) ?x10121) ?x7116) ?x7117) ?x9632) ?x9432) ?x9434)))
 (let ((?x10135 (- (- (- (- (- (- (+ ?x10127 ?x9436) ?x8883) ?x9438) ?x9440) ?x9442) ?x9444) (* (* 2.0 l_0_5_43) l_0_5_58))))
 (= (- (- (- (- ?x10135 ?x9650) ?x9652) ?x9654) ?x9656) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9714 (* l_0_5_84 l_0_5_84)))
 (let ((?x9712 (* l_0_5_83 l_0_5_83)))
 (let ((?x9710 (* l_0_5_82 l_0_5_82)))
 (let ((?x9708 (* l_0_5_81 l_0_5_81)))
 (let ((?x9706 (* l_0_5_80 l_0_5_80)))
 (let ((?x9704 (* l_0_5_79 l_0_5_79)))
 (let ((?x9568 (* l_0_5_42 l_0_5_42)))
 (let ((?x9566 (* l_0_5_41 l_0_5_41)))
 (let ((?x9564 (* l_0_5_40 l_0_5_40)))
 (let ((?x9562 (* l_0_5_39 l_0_5_39)))
 (let ((?x9560 (* l_0_5_38 l_0_5_38)))
 (let ((?x9558 (* l_0_5_37 l_0_5_37)))
 (let ((?x9556 (* l_0_5_21 l_0_5_21)))
 (let ((?x9554 (* l_0_5_20 l_0_5_20)))
 (let ((?x9552 (* l_0_5_19 l_0_5_19)))
 (let ((?x9550 (* l_0_5_18 l_0_5_18)))
 (let ((?x4017 (* l_0_5_17 l_0_5_17)))
 (let ((?x9572 (* l_0_5_16 l_0_5_16)))
 (let ((?x9698 (* l_0_5_105 l_0_5_105)))
 (let ((?x9696 (* l_0_5_104 l_0_5_104)))
 (let ((?x9694 (* l_0_5_103 l_0_5_103)))
 (let ((?x9692 (* l_0_5_102 l_0_5_102)))
 (let ((?x7587 (+ (+ (+ (* l_0_5_100 l_0_5_100) (* l_0_5_101 l_0_5_101)) ?x9692) ?x9694)))
 (let ((?x10159 (+ (+ (+ (+ (+ (+ (+ ?x7587 ?x9696) ?x9698) ?x9572) ?x4017) ?x9550) ?x9552) ?x9554)))
 (let ((?x10166 (- (- (- (- (- (- (+ ?x10159 ?x9556) ?x9558) ?x9560) ?x9562) ?x9564) ?x9566) ?x9568)))
 (= (- (- (- (- (- (- ?x10166 ?x9704) ?x9706) ?x9708) ?x9710) ?x9712) ?x9714) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x8686 (* 2.0 l_0_5_90)))
 (let ((?x10045 (* ?x8686 l_0_5_93)))
 (let ((?x8683 (* 2.0 l_0_5_89)))
 (let ((?x10043 (* ?x8683 l_0_5_92)))
 (let ((?x8680 (* 2.0 l_0_5_88)))
 (let ((?x10041 (* ?x8680 l_0_5_91)))
 (let ((?x8369 (* 2.0 l_0_5_87)))
 (let ((?x8559 (* ?x8369 l_0_5_92)))
 (let ((?x8366 (* 2.0 l_0_5_86)))
 (let ((?x8557 (* ?x8366 l_0_5_91)))
 (let ((?x8439 (* 2.0 l_0_5_69)))
 (let ((?x10038 (* ?x8439 l_0_5_72)))
 (let ((?x8436 (* 2.0 l_0_5_68)))
 (let ((?x10036 (* ?x8436 l_0_5_71)))
 (let ((?x8433 (* 2.0 l_0_5_67)))
 (let ((?x10034 (* ?x8433 l_0_5_70)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x8555 (* ?x8363 l_0_5_71)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x8553 (* ?x8360 l_0_5_70)))
 (let ((?x8994 (* 2.0 l_0_5_3)))
 (let ((?x8995 (* ?x8994 l_0_5_5)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x8992 (* ?x8629 l_0_5_26)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x8990 (* ?x8626 l_0_5_25)))
 (let ((?x8987 (* 2.0 l_0_5_2)))
 (let ((?x8988 (* ?x8987 l_0_5_4)))
 (let ((?x5137 (- (* (* (- 2.0) l_0_5_109) l_0_5_112) (* (* 2.0 l_0_5_110) l_0_5_113))))
 (let ((?x7617 (- (- (+ (- ?x5137 (* (* 2.0 l_0_5_111) l_0_5_114)) ?x8988) ?x8990) ?x8992)))
 (let ((?x735 (- (- (+ ?x7617 ?x8995) (* (* 2.0 l_0_5_44) l_0_5_46)) (* (* 2.0 l_0_5_45) l_0_5_47))))
 (let ((?x10190 (- (- (- (- (- (+ (+ ?x735 ?x8553) ?x8555) ?x10034) ?x10036) ?x10038) ?x8557) ?x8559)))
 (= (+ (+ (+ ?x10190 ?x10041) ?x10043) ?x10045) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8994 (* 2.0 l_0_5_3)))
 (let ((?x9048 (* ?x8994 l_0_5_8)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x9045 (* ?x8629 l_0_5_29)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x9042 (* ?x8626 l_0_5_28)))
 (let ((?x8987 (* 2.0 l_0_5_2)))
 (let ((?x9040 (* ?x8987 l_0_5_7)))
 (let ((?x10224 (* l_0_5_115 l_0_5_115)))
 (let ((?x10222 (* l_0_5_114 l_0_5_114)))
 (let ((?x10223 (- (- (* (- l_0_5_112) l_0_5_112) (* l_0_5_113 l_0_5_113)) ?x10222)))
 (let ((?x10231 (- (+ (- (- (+ (- ?x10223 ?x10224) ?x9040) ?x9042) ?x9045) ?x9048) (* (* 2.0 l_0_5_44) l_0_5_49))))
 (let ((?x10236 (- (- ?x10231 (* (* 2.0 l_0_5_45) l_0_5_50)) (* (* 1.0 l_0_5_70) l_0_5_70))))
 (let ((?x10242 (- (- ?x10236 (* (* 1.0 l_0_5_71) l_0_5_71)) (* (* 1.0 l_0_5_72) l_0_5_72))))
 (let ((?x10247 (+ (- ?x10242 (* (* 1.0 l_0_5_73) l_0_5_73)) (* 1.0 (* l_0_5_91 l_0_5_91)))))
 (let ((?x10251 (+ (+ ?x10247 (* 1.0 (* l_0_5_92 l_0_5_92))) (* 1.0 (* l_0_5_93 l_0_5_93)))))
 (= (+ ?x10251 (* 1.0 (* l_0_5_94 l_0_5_94))) 0.0))))))))))))))))))
(assert
 (let ((?x8753 (* 2.0 l_0_5_73)))
 (let ((?x9656 (* ?x8753 l_0_5_82)))
 (let ((?x8750 (* 2.0 l_0_5_72)))
 (let ((?x9654 (* ?x8750 l_0_5_81)))
 (let ((?x8747 (* 2.0 l_0_5_71)))
 (let ((?x9652 (* ?x8747 l_0_5_80)))
 (let ((?x8744 (* 2.0 l_0_5_70)))
 (let ((?x9650 (* ?x8744 l_0_5_79)))
 (let ((?x8629 (* 2.0 l_0_5_24)))
 (let ((?x9167 (* ?x8629 l_0_5_38)))
 (let ((?x8626 (* 2.0 l_0_5_23)))
 (let ((?x9165 (* ?x8626 l_0_5_37)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9163 (* ?x9162 l_0_5_3)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9160 (* ?x9159 l_0_5_2)))
 (let ((?x8865 (* 2.0 l_0_5_103)))
 (let ((?x9632 (* ?x8865 l_0_5_94)))
 (let ((?x8413 (* 2.0 l_0_5_102)))
 (let ((?x7117 (* ?x8413 l_0_5_93)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x7116 (* ?x8408 l_0_5_92)))
 (let ((?x8398 (* 2.0 l_0_5_100)))
 (let ((?x10121 (* ?x8398 l_0_5_91)))
 (let ((?x7698 (- (+ (+ (+ ?x10121 ?x7116) ?x7117) ?x9632) (* (* 2.0 l_0_5_112) l_0_5_121))))
 (let ((?x10279 (- (- ?x7698 (* (* 2.0 l_0_5_113) l_0_5_122)) (* (* 2.0 l_0_5_114) l_0_5_123))))
 (let ((?x10284 (- (+ (+ (- ?x10279 (* (* 2.0 l_0_5_115) l_0_5_124)) ?x9160) ?x9163) ?x9165)))
 (let ((?x10289 (- (- (- ?x10284 ?x9167) (* (* 2.0 l_0_5_44) l_0_5_58)) (* (* 2.0 l_0_5_45) l_0_5_59))))
 (= (- (- (- (- ?x10289 ?x9650) ?x9652) ?x9654) ?x9656) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x8686 (* 2.0 l_0_5_90)))
 (let ((?x10045 (* ?x8686 l_0_5_93)))
 (let ((?x8683 (* 2.0 l_0_5_89)))
 (let ((?x10043 (* ?x8683 l_0_5_92)))
 (let ((?x8680 (* 2.0 l_0_5_88)))
 (let ((?x10041 (* ?x8680 l_0_5_91)))
 (let ((?x8439 (* 2.0 l_0_5_69)))
 (let ((?x10038 (* ?x8439 l_0_5_72)))
 (let ((?x8436 (* 2.0 l_0_5_68)))
 (let ((?x10036 (* ?x8436 l_0_5_71)))
 (let ((?x8433 (* 2.0 l_0_5_67)))
 (let ((?x10034 (* ?x8433 l_0_5_70)))
 (let ((?x9198 (* l_0_5_6 l_0_5_6)))
 (let ((?x9196 (* l_0_5_5 l_0_5_5)))
 (let ((?x10322 (* l_0_5_48 l_0_5_48)))
 (let ((?x10320 (* l_0_5_47 l_0_5_47)))
 (let ((?x5254 (* l_0_5_46 l_0_5_46)))
 (let ((?x9194 (* l_0_5_4 l_0_5_4)))
 (let ((?x9192 (* l_0_5_27 l_0_5_27)))
 (let ((?x9736 (+ (- (- (* (- l_0_5_25) l_0_5_25) (* l_0_5_26 l_0_5_26)) ?x9192) ?x9194)))
 (let ((?x10327 (+ (+ (+ (+ (- (- (- ?x9736 ?x5254) ?x10320) ?x10322) ?x9196) ?x9198) ?x10034) ?x10036)))
 (= (- (- (- (+ ?x10327 ?x10038) ?x10041) ?x10043) ?x10045) 0.0)))))))))))))))))))))))
(assert
 (let ((?x10098 (* l_0_5_94 l_0_5_94)))
 (let ((?x10096 (* l_0_5_93 l_0_5_93)))
 (let ((?x10094 (* l_0_5_92 l_0_5_92)))
 (let ((?x10092 (* l_0_5_91 l_0_5_91)))
 (let ((?x10088 (* l_0_5_73 l_0_5_73)))
 (let ((?x10086 (* l_0_5_72 l_0_5_72)))
 (let ((?x10084 (* l_0_5_71 l_0_5_71)))
 (let ((?x10082 (* l_0_5_70 l_0_5_70)))
 (let ((?x9244 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9241 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9229 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x8669 (* 2.0 l_0_5_27)))
 (let ((?x9225 (* ?x8669 l_0_5_30)))
 (let ((?x8666 (* 2.0 l_0_5_26)))
 (let ((?x9222 (* ?x8666 l_0_5_29)))
 (let ((?x9743 (+ (- (- (* (* (- 2.0) l_0_5_25) l_0_5_28) ?x9222) ?x9225) ?x9229)))
 (let ((?x10350 (- (- ?x9743 (* (* 2.0 l_0_5_46) l_0_5_49)) (* (* 2.0 l_0_5_47) l_0_5_50))))
 (let ((?x10355 (+ (+ (+ (- ?x10350 (* (* 2.0 l_0_5_48) l_0_5_51)) ?x9241) ?x9244) ?x10082)))
 (let ((?x10362 (- (- (- (- (+ (+ (+ ?x10355 ?x10084) ?x10086) ?x10088) ?x10092) ?x10094) ?x10096) ?x10098)))
 (= ?x10362 0.0)))))))))))))))))))))
(assert
 (let ((?x9374 (* l_0_5_9 l_0_5_9)))
 (let ((?x9372 (* l_0_5_8 l_0_5_8)))
 (let ((?x9370 (* l_0_5_7 l_0_5_7)))
 (let ((?x10386 (* l_0_5_52 l_0_5_52)))
 (let ((?x10384 (* l_0_5_51 l_0_5_51)))
 (let ((?x10382 (* l_0_5_50 l_0_5_50)))
 (let ((?x7832 (* l_0_5_49 l_0_5_49)))
 (let ((?x9356 (* l_0_5_31 l_0_5_31)))
 (let ((?x9353 (* l_0_5_30 l_0_5_30)))
 (let ((?x9350 (* l_0_5_29 l_0_5_29)))
 (let ((?x4395 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_28 l_0_5_28)) ?x9350) ?x9353)))
 (let ((?x9770 (- ?x4395 ?x9356)))
 (let ((?x10390 (+ (+ (+ (- (- (- (- ?x9770 ?x7832) ?x10382) ?x10384) ?x10386) ?x9370) ?x9372) ?x9374)))
 (= ?x10390 0.0)))))))))))))))
(assert
 (let ((?x8738 (* 2.0 l_0_5_31)))
 (let ((?x9444 (* ?x8738 l_0_5_40)))
 (let ((?x8735 (* 2.0 l_0_5_30)))
 (let ((?x9442 (* ?x8735 l_0_5_39)))
 (let ((?x8732 (* 2.0 l_0_5_29)))
 (let ((?x9440 (* ?x8732 l_0_5_38)))
 (let ((?x8729 (* 2.0 l_0_5_28)))
 (let ((?x9438 (* ?x8729 l_0_5_37)))
 (let ((?x9302 (* 2.0 l_0_5_18)))
 (let ((?x9436 (* ?x9302 l_0_5_9)))
 (let ((?x9162 (* 2.0 l_0_5_17)))
 (let ((?x9434 (* ?x9162 l_0_5_8)))
 (let ((?x9159 (* 2.0 l_0_5_16)))
 (let ((?x9432 (* ?x9159 l_0_5_7)))
 (let ((?x8707 (* 2.0 l_0_5_10)))
 (let ((?x9792 (* ?x8707 l_0_5_19)))
 (let ((?x9799 (- (- (- (- (+ (+ (+ ?x9792 ?x9432) ?x9434) ?x9436) ?x9438) ?x9440) ?x9442) ?x9444)))
 (let ((?x10402 (- (- ?x9799 (* (* 2.0 l_0_5_49) l_0_5_58)) (* (* 2.0 l_0_5_50) l_0_5_59))))
 (let ((?x10406 (- (- ?x10402 (* (* 2.0 l_0_5_51) l_0_5_60)) (* (* 2.0 l_0_5_52) l_0_5_61))))
 (= ?x10406 0.0)))))))))))))))))))))
(assert
 (let ((?x10433 (* l_0_5_63 l_0_5_63)))
 (let ((?x10431 (* l_0_5_62 l_0_5_62)))
 (let ((?x10429 (* l_0_5_61 l_0_5_61)))
 (let ((?x10427 (* l_0_5_60 l_0_5_60)))
 (let ((?x10425 (* l_0_5_59 l_0_5_59)))
 (let ((?x7885 (* l_0_5_58 l_0_5_58)))
 (let ((?x9568 (* l_0_5_42 l_0_5_42)))
 (let ((?x9566 (* l_0_5_41 l_0_5_41)))
 (let ((?x9564 (* l_0_5_40 l_0_5_40)))
 (let ((?x9562 (* l_0_5_39 l_0_5_39)))
 (let ((?x9560 (* l_0_5_38 l_0_5_38)))
 (let ((?x9558 (* l_0_5_37 l_0_5_37)))
 (let ((?x9556 (* l_0_5_21 l_0_5_21)))
 (let ((?x9554 (* l_0_5_20 l_0_5_20)))
 (let ((?x9552 (* l_0_5_19 l_0_5_19)))
 (let ((?x9550 (* l_0_5_18 l_0_5_18)))
 (let ((?x4495 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x9550) ?x9552)))
 (let ((?x9841 (- (- (- (- (- (+ (+ ?x4495 ?x9554) ?x9556) ?x9558) ?x9560) ?x9562) ?x9564) ?x9566)))
 (let ((?x9842 (- ?x9841 ?x9568)))
 (= (- (- (- (- (- (- ?x9842 ?x7885) ?x10425) ?x10427) ?x10429) ?x10431) ?x10433) 0.0)))))))))))))))))))))
(assert
 (let ((?x8500 (* l_0_5_87 l_0_5_87)))
 (let ((?x8369 (* 2.0 l_0_5_87)))
 (let ((?x9913 (* ?x8369 l_0_5_89)))
 (let ((?x8497 (* l_0_5_86 l_0_5_86)))
 (let ((?x8366 (* 2.0 l_0_5_86)))
 (let ((?x9911 (* ?x8366 l_0_5_88)))
 (let ((?x8512 (* l_0_5_66 l_0_5_66)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x9907 (* ?x8363 l_0_5_68)))
 (let ((?x8508 (* l_0_5_65 l_0_5_65)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x9905 (* ?x8360 l_0_5_67)))
 (let ((?x1141 (- (* (* (- 2.0) l_0_5_107) l_0_5_109) (* (* 2.0 l_0_5_108) l_0_5_110))))
 (let ((?x10455 (+ (- (+ (+ (- (+ (- ?x1141 ?x9905) ?x8508) ?x9907) ?x8512) ?x9911) ?x8497) ?x9913)))
 (= (- ?x10455 ?x8500) 0.0))))))))))))))))
(assert
 (let ((?x8369 (* 2.0 l_0_5_87)))
 (let ((?x9913 (* ?x8369 l_0_5_89)))
 (let ((?x8366 (* 2.0 l_0_5_86)))
 (let ((?x9911 (* ?x8366 l_0_5_88)))
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x9907 (* ?x8363 l_0_5_68)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x9905 (* ?x8360 l_0_5_67)))
 (let ((?x10476 (* l_0_5_111 l_0_5_111)))
 (let ((?x10477 (- (- (* (- l_0_5_109) l_0_5_109) (* l_0_5_110 l_0_5_110)) ?x10476)))
 (let ((?x10485 (- (- (+ (+ ?x10477 ?x9905) ?x9907) (* (* 1.0 l_0_5_67) l_0_5_67)) (* (* 1.0 l_0_5_68) l_0_5_68))))
 (let ((?x10492 (+ (- (- (- ?x10485 (* (* 1.0 l_0_5_69) l_0_5_69)) ?x9911) ?x9913) (* 1.0 (* l_0_5_88 l_0_5_88)))))
 (let ((?x10496 (+ (+ ?x10492 (* 1.0 (* l_0_5_89 l_0_5_89))) (* 1.0 (* l_0_5_90 l_0_5_90)))))
 (= ?x10496 0.0)))))))))))))))
(assert
 (let ((?x10002 (* l_0_5_90 l_0_5_90)))
 (let ((?x10000 (* l_0_5_89 l_0_5_89)))
 (let ((?x9998 (* l_0_5_88 l_0_5_88)))
 (let ((?x7454 (* l_0_5_69 l_0_5_69)))
 (let ((?x1217 (- (+ (+ (* l_0_5_67 l_0_5_67) (* l_0_5_68 l_0_5_68)) ?x7454) ?x9998)))
 (= (- (- ?x1217 ?x10000) ?x10002) 0.0)))))))
(assert
 (let ((?x8363 (* 2.0 l_0_5_66)))
 (let ((?x8431 (* ?x8363 l_0_5_80)))
 (let ((?x8360 (* 2.0 l_0_5_65)))
 (let ((?x8429 (* ?x8360 l_0_5_79)))
 (let ((?x8408 (* 2.0 l_0_5_101)))
 (let ((?x8409 (* ?x8408 l_0_5_87)))
 (let ((?x8398 (* 2.0 l_0_5_100)))
 (let ((?x7439 (* ?x8398 l_0_5_86)))
 (let ((?x923 (- (- (+ ?x7439 ?x8409) (* (* 2.0 l_0_5_107) l_0_5_121)) (* (* 2.0 l_0_5_108) l_0_5_122))))
 (= (- (- ?x923 ?x8429) ?x8431) 0.0)))))))))))
(assert
 (let ((?x10538 (* l_0_5_126 l_0_5_126)))
 (let ((?x10536 (* l_0_5_125 l_0_5_125)))
 (let ((?x10534 (* l_0_5_124 l_0_5_124)))
 (let ((?x10532 (* l_0_5_123 l_0_5_123)))
 (let ((?x10530 (* l_0_5_122 l_0_5_122)))
 (let ((?x10528 (* l_0_5_121 l_0_5_121)))
 (let ((?x10519 (+ (* 1.0 (* l_0_5_100 l_0_5_100)) (* 1.0 (* l_0_5_101 l_0_5_101)))))
 (let ((?x10523 (+ (+ ?x10519 (* 1.0 (* l_0_5_102 l_0_5_102))) (* 1.0 (* l_0_5_103 l_0_5_103)))))
 (let ((?x10527 (+ (+ ?x10523 (* 1.0 (* l_0_5_104 l_0_5_104))) (* 1.0 (* l_0_5_105 l_0_5_105)))))
 (let ((?x10542 (- (- (- (- (- (- (- ?x10527 ?x10528) ?x10530) ?x10532) ?x10534) ?x10536) ?x10538) (* (* 1.0 l_0_5_79) l_0_5_79))))
 (let ((?x10548 (- (- ?x10542 (* (* 1.0 l_0_5_80) l_0_5_80)) (* (* 1.0 l_0_5_81) l_0_5_81))))
 (let ((?x10554 (- (- ?x10548 (* (* 1.0 l_0_5_82) l_0_5_82)) (* (* 1.0 l_0_5_83) l_0_5_83))))
 (= (- ?x10554 (* (* 1.0 l_0_5_84) l_0_5_84)) 0.0))))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_22 0.0))
(assert
 (>= l_0_5_24 0.0))
(assert
 (>= l_0_5_27 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_42 0.0))
(assert
 (>= l_0_5_43 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_52 0.0))
(assert
 (>= l_0_5_57 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_64 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_69 0.0))
(assert
 (>= l_0_5_73 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_84 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_87 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_94 0.0))
(assert
 (>= l_0_5_99 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (>= l_0_5_106 0.0))
(assert
 (>= l_0_5_108 0.0))
(assert
 (>= l_0_5_111 0.0))
(assert
 (>= l_0_5_115 0.0))
(assert
 (>= l_0_5_120 0.0))
(assert
 (>= l_0_5_126 0.0))
(assert
 (let ((?x10667 (* 2.0 l_0_6_69)))
 (let ((?x10668 (* ?x10667 l_0_6_81)))
 (let ((?x10664 (* 2.0 l_0_6_68)))
 (let ((?x10665 (* ?x10664 l_0_6_80)))
 (let ((?x10661 (* 2.0 l_0_6_67)))
 (let ((?x10662 (* ?x10661 l_0_6_79)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x10659 (* ?x10658 l_0_6_80)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x10656 (* ?x10655 l_0_6_79)))
 (let ((?x10653 (* l_0_6_3 l_0_6_3)))
 (let ((?x10651 (* l_0_6_24 l_0_6_24)))
 (let ((?x10649 (* l_0_6_23 l_0_6_23)))
 (let ((?x10647 (* l_0_6_2 l_0_6_2)))
 (let ((?x10626 (* 2.0 l_0_6_102)))
 (let ((?x10627 (* ?x10626 l_0_6_90)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x10624 (* ?x10621 l_0_6_89)))
 (let ((?x10622 (* ?x10621 l_0_6_87)))
 (let ((?x10618 (* 2.0 l_0_6_100)))
 (let ((?x10619 (* ?x10618 l_0_6_88)))
 (let ((?x10628 (+ (+ (- (+ (* (* (- 2.0) l_0_6_100) l_0_6_86) ?x10619) ?x10622) ?x10624) ?x10627)))
 (let ((?x10634 (- (- ?x10628 (* (* 2.0 l_0_6_109) l_0_6_121)) (* (* 2.0 l_0_6_110) l_0_6_122))))
 (let ((?x10640 (- (- ?x10634 (* (* 2.0 l_0_6_111) l_0_6_123)) (* (* 2.0 l_0_6_130) l_0_6_142))))
 (let ((?x10646 (- (- ?x10640 (* (* 2.0 l_0_6_131) l_0_6_143)) (* (* 2.0 l_0_6_132) l_0_6_144))))
 (let ((?x10663 (- (+ (+ (+ (- (- (+ ?x10646 ?x10647) ?x10649) ?x10651) ?x10653) ?x10656) ?x10659) ?x10662)))
 (= (+ (- (- ?x10663 ?x10665) ?x10668) 1.0) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x10736 (* l_0_6_129 l_0_6_129)))
 (let ((?x10734 (* l_0_6_128 l_0_6_128)))
 (let ((?x10735 (- (- (- _a_1_ (* l_0_6_107 l_0_6_107)) (* l_0_6_108 l_0_6_108)) ?x10734)))
 (let ((?x10743 (- (- (- ?x10735 ?x10736) (* (* 1.0 l_0_6_65) l_0_6_65)) (* (* 1.0 l_0_6_66) l_0_6_66))))
 (let ((?x10749 (+ (+ ?x10743 (* 1.0 (* l_0_6_86 l_0_6_86))) (* 1.0 (* l_0_6_87 l_0_6_87)))))
 (= (- ?x10749 1.0) 0.0)))))))
(assert
 (let ((?x10747 (* l_0_6_87 l_0_6_87)))
 (let ((?x10744 (* l_0_6_86 l_0_6_86)))
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x10785 (* ?x10784 l_0_6_86)))
 (let ((?x1415 (* l_0_6_66 l_0_6_66)))
 (let ((?x10760 (* l_0_6_65 l_0_6_65)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x10780 (* ?x10779 l_0_6_65)))
 (let ((?x10653 (* l_0_6_3 l_0_6_3)))
 (let ((?x10651 (* l_0_6_24 l_0_6_24)))
 (let ((?x10649 (* l_0_6_23 l_0_6_23)))
 (let ((?x10647 (* l_0_6_2 l_0_6_2)))
 (let ((?x10774 (- (- _a_2_ (* (* 2.0 l_0_6_106) l_0_6_107)) (* (* 2.0 l_0_6_127) l_0_6_128))))
 (let ((?x10783 (- (- (- (+ (- (- (+ ?x10774 ?x10647) ?x10649) ?x10651) ?x10653) ?x10780) ?x10760) ?x1415)))
 (= (+ (+ (+ ?x10783 ?x10785) ?x10744) ?x10747) 0.0))))))))))))))))
(assert
 (let ((?x10810 (* 2.0 l_0_6_87)))
 (let ((?x10811 (* ?x10810 l_0_6_92)))
 (let ((?x10807 (* 2.0 l_0_6_86)))
 (let ((?x10808 (* ?x10807 l_0_6_91)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x10805 (* ?x10658 l_0_6_71)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x10803 (* ?x10655 l_0_6_70)))
 (let ((?x10801 (* l_0_6_45 l_0_6_45)))
 (let ((?x10799 (* l_0_6_44 l_0_6_44)))
 (let ((?x10653 (* l_0_6_3 l_0_6_3)))
 (let ((?x10651 (* l_0_6_24 l_0_6_24)))
 (let ((?x10649 (* l_0_6_23 l_0_6_23)))
 (let ((?x10647 (* l_0_6_2 l_0_6_2)))
 (let ((?x5470 (- (* (* (- 2.0) l_0_6_107) l_0_6_112) (* (* 2.0 l_0_6_108) l_0_6_113))))
 (let ((?x5483 (- (- ?x5470 (* (* 2.0 l_0_6_128) l_0_6_133)) (* (* 2.0 l_0_6_129) l_0_6_134))))
 (let ((?x10804 (- (- (- (+ (- (- (+ ?x5483 ?x10647) ?x10649) ?x10651) ?x10653) ?x10799) ?x10801) ?x10803)))
 (= (+ (+ (+ (- ?x10804 ?x10805) ?x10808) ?x10811) 1.0) 0.0)))))))))))))))))))
(assert
 (let ((?x10810 (* 2.0 l_0_6_87)))
 (let ((?x10855 (* ?x10810 l_0_6_96)))
 (let ((?x10807 (* 2.0 l_0_6_86)))
 (let ((?x10853 (* ?x10807 l_0_6_95)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x10851 (* ?x10658 l_0_6_75)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x10849 (* ?x10655 l_0_6_74)))
 (let ((?x10653 (* l_0_6_3 l_0_6_3)))
 (let ((?x10651 (* l_0_6_24 l_0_6_24)))
 (let ((?x10649 (* l_0_6_23 l_0_6_23)))
 (let ((?x10647 (* l_0_6_2 l_0_6_2)))
 (let ((?x8064 (- (* (* (- 2.0) l_0_6_107) l_0_6_116) (* (* 2.0 l_0_6_108) l_0_6_117))))
 (let ((?x10844 (- (- ?x8064 (* (* 2.0 l_0_6_128) l_0_6_137)) (* (* 2.0 l_0_6_129) l_0_6_138))))
 (let ((?x10854 (+ (- (- (- (+ (+ (- ?x10844 ?x10647) ?x10649) ?x10651) ?x10653) ?x10849) ?x10851) ?x10853)))
 (= (- (+ ?x10854 ?x10855) 1.0) 0.0)))))))))))))))))
(assert
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x10899 (* ?x10784 l_0_6_95)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x10897 (* ?x10779 l_0_6_74)))
 (let ((?x10895 (* l_0_6_22 l_0_6_22)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10893 (* ?x10892 l_0_6_32)))
 (let ((?x10894 (- (- (* (* 2.0 l_0_6_1) l_0_6_11) (* l_0_6_1 l_0_6_1)) ?x10893)))
 (= (+ (- (+ ?x10894 ?x10895) ?x10897) ?x10899) 0.0))))))))))
(assert
 (let ((?x10810 (* 2.0 l_0_6_87)))
 (let ((?x10855 (* ?x10810 l_0_6_96)))
 (let ((?x10807 (* 2.0 l_0_6_86)))
 (let ((?x10853 (* ?x10807 l_0_6_95)))
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x10899 (* ?x10784 l_0_6_95)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x10851 (* ?x10658 l_0_6_75)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x10849 (* ?x10655 l_0_6_74)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x10897 (* ?x10779 l_0_6_74)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x10933 (* ?x10932 l_0_6_33)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x10930 (* ?x10929 l_0_6_32)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10927 (* ?x10892 l_0_6_23)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x10923 (* ?x10922 l_0_6_3)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x10920 (* ?x10919 l_0_6_2)))
 (let ((?x10918 (- (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 2.0 l_0_6_106) l_0_6_116))))
 (let ((?x10928 (+ (- (+ (+ ?x10918 ?x10920) ?x10923) (* (* 2.0 l_0_6_127) l_0_6_137)) ?x10927)))
 (let ((?x10939 (+ (+ (- (- (- (- (- ?x10928 ?x10930) ?x10933) ?x10897) ?x10849) ?x10851) ?x10899) ?x10853)))
 (= (+ ?x10939 ?x10855) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x10994 (* 2.0 l_0_6_90)))
 (let ((?x10995 (* ?x10994 l_0_6_97)))
 (let ((?x10991 (* 2.0 l_0_6_89)))
 (let ((?x10992 (* ?x10991 l_0_6_96)))
 (let ((?x10988 (* 2.0 l_0_6_88)))
 (let ((?x10989 (* ?x10988 l_0_6_95)))
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x10899 (* ?x10784 l_0_6_95)))
 (let ((?x10667 (* 2.0 l_0_6_69)))
 (let ((?x10985 (* ?x10667 l_0_6_76)))
 (let ((?x10664 (* 2.0 l_0_6_68)))
 (let ((?x10983 (* ?x10664 l_0_6_75)))
 (let ((?x10661 (* 2.0 l_0_6_67)))
 (let ((?x10981 (* ?x10661 l_0_6_74)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x10897 (* ?x10779 l_0_6_74)))
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x10978 (* ?x10977 l_0_6_34)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x10975 (* ?x10974 l_0_6_33)))
 (let ((?x10971 (* 2.0 l_0_6_25)))
 (let ((?x10972 (* ?x10971 l_0_6_32)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10969 (* ?x10892 l_0_6_25)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x10967 (* ?x10966 l_0_6_6)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x10964 (* ?x10922 l_0_6_5)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x10962 (* ?x10919 l_0_6_4)))
 (let ((?x10970 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x10962) ?x10964) ?x10967) ?x10969)))
 (let ((?x10986 (- (- (- (+ (- (- (- ?x10970 ?x10972) ?x10975) ?x10978) ?x10897) ?x10981) ?x10983) ?x10985)))
 (= (+ (+ (+ (- ?x10986 ?x10899) ?x10989) ?x10992) ?x10995) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11085 (* (* 2.0 l_0_6_94) l_0_6_98)))
 (let ((?x11082 (* (* 2.0 l_0_6_93) l_0_6_97)))
 (let ((?x11079 (* (* 2.0 l_0_6_92) l_0_6_96)))
 (let ((?x11076 (* (* 2.0 l_0_6_91) l_0_6_95)))
 (let ((?x11072 (* 2.0 l_0_6_73)))
 (let ((?x11073 (* ?x11072 l_0_6_77)))
 (let ((?x11069 (* 2.0 l_0_6_72)))
 (let ((?x11070 (* ?x11069 l_0_6_76)))
 (let ((?x11066 (* 2.0 l_0_6_71)))
 (let ((?x11067 (* ?x11066 l_0_6_75)))
 (let ((?x11063 (* 2.0 l_0_6_70)))
 (let ((?x11064 (* ?x11063 l_0_6_74)))
 (let ((?x11057 (* 2.0 l_0_6_31)))
 (let ((?x11058 (* ?x11057 l_0_6_35)))
 (let ((?x11054 (* 2.0 l_0_6_30)))
 (let ((?x11055 (* ?x11054 l_0_6_34)))
 (let ((?x11051 (* 2.0 l_0_6_29)))
 (let ((?x11052 (* ?x11051 l_0_6_33)))
 (let ((?x11048 (* 2.0 l_0_6_28)))
 (let ((?x11049 (* ?x11048 l_0_6_32)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10893 (* ?x10892 l_0_6_32)))
 (let ((?x11045 (* ?x10892 l_0_6_28)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x11043 (* ?x10966 l_0_6_9)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x11041 (* ?x10922 l_0_6_8)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x11039 (* ?x10919 l_0_6_7)))
 (let ((?x11026 (* 2.0 l_0_6_10)))
 (let ((?x11027 (* ?x11026 l_0_6_14)))
 (let ((?x10888 (* 2.0 l_0_6_1)))
 (let ((?x8223 (* ?x10888 l_0_6_7)))
 (let ((?x10889 (* ?x10888 l_0_6_11)))
 (let ((?x11047 (- (+ (+ (+ (+ (+ (- ?x10889 ?x8223) ?x11027) ?x11039) ?x11041) ?x11043) ?x11045) ?x10893)))
 (let ((?x11062 (- (- (- (- (- ?x11047 ?x11049) ?x11052) ?x11055) ?x11058) (* (* 2.0 l_0_6_43) l_0_6_53))))
 (let ((?x11083 (+ (+ (+ (- (- (- (- ?x11062 ?x11064) ?x11067) ?x11070) ?x11073) ?x11076) ?x11079) ?x11082)))
 (= (+ ?x11083 ?x11085) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11155 (* l_0_6_99 l_0_6_99)))
 (let ((?x11153 (* l_0_6_98 l_0_6_98)))
 (let ((?x11151 (* l_0_6_97 l_0_6_97)))
 (let ((?x11149 (* l_0_6_96 l_0_6_96)))
 (let ((?x11147 (* l_0_6_95 l_0_6_95)))
 (let ((?x11145 (* l_0_6_78 l_0_6_78)))
 (let ((?x11143 (* l_0_6_77 l_0_6_77)))
 (let ((?x11141 (* l_0_6_76 l_0_6_76)))
 (let ((?x11139 (* l_0_6_75 l_0_6_75)))
 (let ((?x11137 (* l_0_6_74 l_0_6_74)))
 (let ((?x11135 (* l_0_6_36 l_0_6_36)))
 (let ((?x11133 (* l_0_6_35 l_0_6_35)))
 (let ((?x11131 (* l_0_6_34 l_0_6_34)))
 (let ((?x11129 (* l_0_6_33 l_0_6_33)))
 (let ((?x11127 (* l_0_6_32 l_0_6_32)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10893 (* ?x10892 l_0_6_32)))
 (let ((?x11124 (* l_0_6_15 l_0_6_15)))
 (let ((?x11122 (* l_0_6_14 l_0_6_14)))
 (let ((?x11120 (* l_0_6_13 l_0_6_13)))
 (let ((?x11118 (* l_0_6_12 l_0_6_12)))
 (let ((?x11119 (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) (* l_0_6_11 l_0_6_11)) ?x11118)))
 (let ((?x11132 (- (- (- (+ (+ (+ (+ ?x11119 ?x11120) ?x11122) ?x11124) ?x10893) ?x11127) ?x11129) ?x11131)))
 (let ((?x11146 (- (- (- (- (- (- (- ?x11132 ?x11133) ?x11135) ?x11137) ?x11139) ?x11141) ?x11143) ?x11145)))
 (= (+ (+ (+ (+ (+ ?x11146 ?x11147) ?x11149) ?x11151) ?x11153) ?x11155) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x11235 (* (* 2.0 l_0_6_78) l_0_6_83)))
 (let ((?x11232 (* (* 2.0 l_0_6_77) l_0_6_82)))
 (let ((?x11229 (* (* 2.0 l_0_6_76) l_0_6_81)))
 (let ((?x11226 (* (* 2.0 l_0_6_75) l_0_6_80)))
 (let ((?x11223 (* (* 2.0 l_0_6_74) l_0_6_79)))
 (let ((?x11220 (* (* 2.0 l_0_6_36) l_0_6_41)))
 (let ((?x11217 (* (* 2.0 l_0_6_35) l_0_6_40)))
 (let ((?x11214 (* (* 2.0 l_0_6_34) l_0_6_39)))
 (let ((?x11211 (* (* 2.0 l_0_6_33) l_0_6_38)))
 (let ((?x11208 (* (* 2.0 l_0_6_32) l_0_6_37)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x11205 (* ?x10892 l_0_6_37)))
 (let ((?x11203 (* (* 2.0 l_0_6_15) l_0_6_20)))
 (let ((?x11200 (* (* 2.0 l_0_6_14) l_0_6_19)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x11197 (* ?x10966 l_0_6_18)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x11195 (* ?x10922 l_0_6_17)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x11193 (* ?x10919 l_0_6_16)))
 (let ((?x11191 (* (* 2.0 l_0_6_104) l_0_6_99)))
 (let ((?x11187 (* 2.0 l_0_6_103)))
 (let ((?x11188 (* ?x11187 l_0_6_98)))
 (let ((?x10626 (* 2.0 l_0_6_102)))
 (let ((?x11185 (* ?x10626 l_0_6_97)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x11183 (* ?x10621 l_0_6_96)))
 (let ((?x10618 (* 2.0 l_0_6_100)))
 (let ((?x11181 (* ?x10618 l_0_6_95)))
 (let ((?x11189 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_16) ?x11181) ?x11183) ?x11185) ?x11188)))
 (let ((?x11206 (+ (+ (+ (+ (+ (+ (+ ?x11189 ?x11191) ?x11193) ?x11195) ?x11197) ?x11200) ?x11203) ?x11205)))
 (let ((?x11227 (- (- (- (- (- (- (- ?x11206 ?x11208) ?x11211) ?x11214) ?x11217) ?x11220) ?x11223) ?x11226)))
 (= (- (- (- ?x11227 ?x11229) ?x11232) ?x11235) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10994 (* 2.0 l_0_6_90)))
 (let ((?x10995 (* ?x10994 l_0_6_97)))
 (let ((?x10991 (* 2.0 l_0_6_89)))
 (let ((?x10992 (* ?x10991 l_0_6_96)))
 (let ((?x10988 (* 2.0 l_0_6_88)))
 (let ((?x10989 (* ?x10988 l_0_6_95)))
 (let ((?x10810 (* 2.0 l_0_6_87)))
 (let ((?x10855 (* ?x10810 l_0_6_96)))
 (let ((?x10807 (* 2.0 l_0_6_86)))
 (let ((?x10853 (* ?x10807 l_0_6_95)))
 (let ((?x10667 (* 2.0 l_0_6_69)))
 (let ((?x10985 (* ?x10667 l_0_6_76)))
 (let ((?x10664 (* 2.0 l_0_6_68)))
 (let ((?x10983 (* ?x10664 l_0_6_75)))
 (let ((?x10661 (* 2.0 l_0_6_67)))
 (let ((?x10981 (* ?x10661 l_0_6_74)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x10851 (* ?x10658 l_0_6_75)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x10849 (* ?x10655 l_0_6_74)))
 (let ((?x11290 (* 2.0 l_0_6_3)))
 (let ((?x11291 (* ?x11290 l_0_6_5)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11288 (* ?x10932 l_0_6_26)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11286 (* ?x10929 l_0_6_25)))
 (let ((?x11283 (* 2.0 l_0_6_2)))
 (let ((?x11284 (* ?x11283 l_0_6_4)))
 (let ((?x5864 (- (* (* (- 2.0) l_0_6_109) l_0_6_116) (* (* 2.0 l_0_6_110) l_0_6_117))))
 (let ((?x11278 (- (- ?x5864 (* (* 2.0 l_0_6_111) l_0_6_118)) (* (* 2.0 l_0_6_130) l_0_6_137))))
 (let ((?x11282 (- (- ?x11278 (* (* 2.0 l_0_6_131) l_0_6_138)) (* (* 2.0 l_0_6_132) l_0_6_139))))
 (let ((?x11295 (- (+ (+ (- (+ (+ (- ?x11282 ?x11284) ?x11286) ?x11288) ?x11291) ?x10849) ?x10851) ?x10981)))
 (let ((?x11302 (+ (+ (+ (- (- (- (- ?x11295 ?x10983) ?x10985) ?x10853) ?x10855) ?x10989) ?x10992) ?x10995)))
 (= ?x11302 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11085 (* (* 2.0 l_0_6_94) l_0_6_98)))
 (let ((?x11082 (* (* 2.0 l_0_6_93) l_0_6_97)))
 (let ((?x11079 (* (* 2.0 l_0_6_92) l_0_6_96)))
 (let ((?x11076 (* (* 2.0 l_0_6_91) l_0_6_95)))
 (let ((?x11072 (* 2.0 l_0_6_73)))
 (let ((?x11073 (* ?x11072 l_0_6_77)))
 (let ((?x11069 (* 2.0 l_0_6_72)))
 (let ((?x11070 (* ?x11069 l_0_6_76)))
 (let ((?x11066 (* 2.0 l_0_6_71)))
 (let ((?x11067 (* ?x11066 l_0_6_75)))
 (let ((?x11063 (* 2.0 l_0_6_70)))
 (let ((?x11064 (* ?x11063 l_0_6_74)))
 (let ((?x11290 (* 2.0 l_0_6_3)))
 (let ((?x11364 (* ?x11290 l_0_6_8)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x10933 (* ?x10932 l_0_6_33)))
 (let ((?x11361 (* ?x10932 l_0_6_29)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x10930 (* ?x10929 l_0_6_32)))
 (let ((?x11358 (* ?x10929 l_0_6_28)))
 (let ((?x11283 (* 2.0 l_0_6_2)))
 (let ((?x11356 (* ?x11283 l_0_6_7)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x10923 (* ?x10922 l_0_6_3)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x10920 (* ?x10919 l_0_6_2)))
 (let ((?x11336 (- (- ?x10920 (* (* 2.0 l_0_6_112) l_0_6_116)) (* (* 2.0 l_0_6_113) l_0_6_117))))
 (let ((?x11342 (- (- ?x11336 (* (* 2.0 l_0_6_114) l_0_6_118)) (* (* 2.0 l_0_6_115) l_0_6_119))))
 (let ((?x11349 (- (- (+ ?x11342 ?x10923) (* (* 2.0 l_0_6_133) l_0_6_137)) (* (* 2.0 l_0_6_134) l_0_6_138))))
 (let ((?x11355 (- (- ?x11349 (* (* 2.0 l_0_6_135) l_0_6_139)) (* (* 2.0 l_0_6_136) l_0_6_140))))
 (let ((?x11368 (- (- (- (+ (- (+ (- ?x11355 ?x11356) ?x11358) ?x10930) ?x11361) ?x10933) ?x11364) (* (* 2.0 l_0_6_44) l_0_6_53))))
 (let ((?x11374 (- (- (- (- ?x11368 (* (* 2.0 l_0_6_45) l_0_6_54)) ?x11064) ?x11067) ?x11070)))
 (= (+ (+ (+ (+ (- ?x11374 ?x11073) ?x11076) ?x11079) ?x11082) ?x11085) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x10933 (* ?x10932 l_0_6_33)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x10930 (* ?x10929 l_0_6_32)))
 (let ((?x11437 (* l_0_6_141 l_0_6_141)))
 (let ((?x11435 (* l_0_6_140 l_0_6_140)))
 (let ((?x11433 (* l_0_6_139 l_0_6_139)))
 (let ((?x11431 (* l_0_6_138 l_0_6_138)))
 (let ((?x11429 (* l_0_6_137 l_0_6_137)))
 (let ((?x11427 (* l_0_6_120 l_0_6_120)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x10923 (* ?x10922 l_0_6_3)))
 (let ((?x11424 (* l_0_6_119 l_0_6_119)))
 (let ((?x11422 (* l_0_6_118 l_0_6_118)))
 (let ((?x11420 (* l_0_6_117 l_0_6_117)))
 (let ((?x11421 (- (- (* (* (- 2.0) l_0_6_11) l_0_6_2) (* l_0_6_116 l_0_6_116)) ?x11420)))
 (let ((?x11434 (- (- (- (- (- (- (- ?x11421 ?x11422) ?x11424) ?x10923) ?x11427) ?x11429) ?x11431) ?x11433)))
 (let ((?x11443 (- (+ (+ (- (- ?x11434 ?x11435) ?x11437) ?x10930) ?x10933) (* (* 1.0 l_0_6_74) l_0_6_74))))
 (let ((?x11449 (- (- ?x11443 (* (* 1.0 l_0_6_75) l_0_6_75)) (* (* 1.0 l_0_6_76) l_0_6_76))))
 (let ((?x11455 (- (- ?x11449 (* (* 1.0 l_0_6_77) l_0_6_77)) (* (* 1.0 l_0_6_78) l_0_6_78))))
 (let ((?x11459 (+ (+ ?x11455 (* 1.0 (* l_0_6_95 l_0_6_95))) (* 1.0 (* l_0_6_96 l_0_6_96)))))
 (let ((?x11463 (+ (+ ?x11459 (* 1.0 (* l_0_6_97 l_0_6_97))) (* 1.0 (* l_0_6_98 l_0_6_98)))))
 (= (+ ?x11463 (* 1.0 (* l_0_6_99 l_0_6_99))) 0.0))))))))))))))))))))))))
(assert
 (let ((?x11235 (* (* 2.0 l_0_6_78) l_0_6_83)))
 (let ((?x11232 (* (* 2.0 l_0_6_77) l_0_6_82)))
 (let ((?x11229 (* (* 2.0 l_0_6_76) l_0_6_81)))
 (let ((?x11226 (* (* 2.0 l_0_6_75) l_0_6_80)))
 (let ((?x11223 (* (* 2.0 l_0_6_74) l_0_6_79)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11519 (* ?x10932 l_0_6_38)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11517 (* ?x10929 l_0_6_37)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11515 (* ?x11514 l_0_6_3)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11512 (* ?x11511 l_0_6_2)))
 (let ((?x11191 (* (* 2.0 l_0_6_104) l_0_6_99)))
 (let ((?x11187 (* 2.0 l_0_6_103)))
 (let ((?x11188 (* ?x11187 l_0_6_98)))
 (let ((?x10626 (* 2.0 l_0_6_102)))
 (let ((?x11185 (* ?x10626 l_0_6_97)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x11183 (* ?x10621 l_0_6_96)))
 (let ((?x10618 (* 2.0 l_0_6_100)))
 (let ((?x11181 (* ?x10618 l_0_6_95)))
 (let ((?x6361 (- (+ (+ (+ (+ ?x11181 ?x11183) ?x11185) ?x11188) ?x11191) (* (* 2.0 l_0_6_116) l_0_6_121))))
 (let ((?x11489 (- (- ?x6361 (* (* 2.0 l_0_6_117) l_0_6_122)) (* (* 2.0 l_0_6_118) l_0_6_123))))
 (let ((?x11495 (- (- ?x11489 (* (* 2.0 l_0_6_119) l_0_6_124)) (* (* 2.0 l_0_6_120) l_0_6_125))))
 (let ((?x11501 (- (- ?x11495 (* (* 2.0 l_0_6_137) l_0_6_142)) (* (* 2.0 l_0_6_138) l_0_6_143))))
 (let ((?x11507 (- (- ?x11501 (* (* 2.0 l_0_6_139) l_0_6_144)) (* (* 2.0 l_0_6_140) l_0_6_145))))
 (let ((?x11518 (+ (- (- (- ?x11507 (* (* 2.0 l_0_6_141) l_0_6_146)) ?x11512) ?x11515) ?x11517)))
 (= (- (- (- (- (- (+ ?x11518 ?x11519) ?x11223) ?x11226) ?x11229) ?x11232) ?x11235) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x10994 (* 2.0 l_0_6_90)))
 (let ((?x10995 (* ?x10994 l_0_6_97)))
 (let ((?x10991 (* 2.0 l_0_6_89)))
 (let ((?x10992 (* ?x10991 l_0_6_96)))
 (let ((?x10988 (* 2.0 l_0_6_88)))
 (let ((?x10989 (* ?x10988 l_0_6_95)))
 (let ((?x10667 (* 2.0 l_0_6_69)))
 (let ((?x10985 (* ?x10667 l_0_6_76)))
 (let ((?x10664 (* 2.0 l_0_6_68)))
 (let ((?x10983 (* ?x10664 l_0_6_75)))
 (let ((?x10661 (* 2.0 l_0_6_67)))
 (let ((?x10981 (* ?x10661 l_0_6_74)))
 (let ((?x11558 (* l_0_6_6 l_0_6_6)))
 (let ((?x6142 (* l_0_6_5 l_0_6_5)))
 (let ((?x2923 (* l_0_6_4 l_0_6_4)))
 (let ((?x9071 (* l_0_6_27 l_0_6_27)))
 (let ((?x2860 (- (+ (+ (* l_0_6_25 l_0_6_25) (* l_0_6_26 l_0_6_26)) ?x9071) ?x2923)))
 (let ((?x11564 (- (- (+ (+ (+ (- (- ?x2860 ?x6142) ?x11558) ?x10981) ?x10983) ?x10985) ?x10989) ?x10992)))
 (= (- ?x11564 ?x10995) 0.0))))))))))))))))))))
(assert
 (let ((?x11085 (* (* 2.0 l_0_6_94) l_0_6_98)))
 (let ((?x11082 (* (* 2.0 l_0_6_93) l_0_6_97)))
 (let ((?x11079 (* (* 2.0 l_0_6_92) l_0_6_96)))
 (let ((?x11076 (* (* 2.0 l_0_6_91) l_0_6_95)))
 (let ((?x11072 (* 2.0 l_0_6_73)))
 (let ((?x11073 (* ?x11072 l_0_6_77)))
 (let ((?x11069 (* 2.0 l_0_6_72)))
 (let ((?x11070 (* ?x11069 l_0_6_76)))
 (let ((?x11066 (* 2.0 l_0_6_71)))
 (let ((?x11067 (* ?x11066 l_0_6_75)))
 (let ((?x11063 (* 2.0 l_0_6_70)))
 (let ((?x11064 (* ?x11063 l_0_6_74)))
 (let ((?x11606 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11603 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11591 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x10978 (* ?x10977 l_0_6_34)))
 (let ((?x11587 (* ?x10977 l_0_6_30)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x10975 (* ?x10974 l_0_6_33)))
 (let ((?x11584 (* ?x10974 l_0_6_29)))
 (let ((?x10971 (* 2.0 l_0_6_25)))
 (let ((?x10972 (* ?x10971 l_0_6_32)))
 (let ((?x11581 (* ?x10971 l_0_6_28)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x10967 (* ?x10966 l_0_6_6)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x10964 (* ?x10922 l_0_6_5)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x10962 (* ?x10919 l_0_6_4)))
 (let ((?x11580 (+ (+ ?x10962 ?x10964) ?x10967)))
 (let ((?x11592 (- (- (+ (- (+ (- (+ ?x11580 ?x11581) ?x10972) ?x11584) ?x10975) ?x11587) ?x10978) ?x11591)))
 (let ((?x11598 (- (- ?x11592 (* (* 2.0 l_0_6_46) l_0_6_53)) (* (* 2.0 l_0_6_47) l_0_6_54))))
 (let ((?x11608 (+ (- (- (- ?x11598 (* (* 2.0 l_0_6_48) l_0_6_55)) ?x11603) ?x11606) ?x11064)))
 (let ((?x11615 (- (- (- (- (+ (+ (+ ?x11608 ?x11067) ?x11070) ?x11073) ?x11076) ?x11079) ?x11082) ?x11085)))
 (= ?x11615 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11155 (* l_0_6_99 l_0_6_99)))
 (let ((?x11153 (* l_0_6_98 l_0_6_98)))
 (let ((?x11151 (* l_0_6_97 l_0_6_97)))
 (let ((?x11149 (* l_0_6_96 l_0_6_96)))
 (let ((?x11147 (* l_0_6_95 l_0_6_95)))
 (let ((?x11145 (* l_0_6_78 l_0_6_78)))
 (let ((?x11143 (* l_0_6_77 l_0_6_77)))
 (let ((?x11141 (* l_0_6_76 l_0_6_76)))
 (let ((?x11139 (* l_0_6_75 l_0_6_75)))
 (let ((?x11137 (* l_0_6_74 l_0_6_74)))
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x10978 (* ?x10977 l_0_6_34)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x10975 (* ?x10974 l_0_6_33)))
 (let ((?x10971 (* 2.0 l_0_6_25)))
 (let ((?x10972 (* ?x10971 l_0_6_32)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x10967 (* ?x10966 l_0_6_6)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x10964 (* ?x10922 l_0_6_5)))
 (let ((?x11653 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x10964) ?x10967) ?x10972) ?x10975)))
 (let ((?x11660 (- (+ (+ (+ (+ (+ (+ ?x11653 ?x10978) ?x11137) ?x11139) ?x11141) ?x11143) ?x11145) ?x11147)))
 (= (- (- (- (- ?x11660 ?x11149) ?x11151) ?x11153) ?x11155) 0.0))))))))))))))))))))))))
(assert
 (let ((?x11235 (* (* 2.0 l_0_6_78) l_0_6_83)))
 (let ((?x11232 (* (* 2.0 l_0_6_77) l_0_6_82)))
 (let ((?x11229 (* (* 2.0 l_0_6_76) l_0_6_81)))
 (let ((?x11226 (* (* 2.0 l_0_6_75) l_0_6_80)))
 (let ((?x11223 (* (* 2.0 l_0_6_74) l_0_6_79)))
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x11679 (* ?x10977 l_0_6_39)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x11677 (* ?x10974 l_0_6_38)))
 (let ((?x10971 (* 2.0 l_0_6_25)))
 (let ((?x11675 (* ?x10971 l_0_6_37)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x10933 (* ?x10932 l_0_6_33)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x10930 (* ?x10929 l_0_6_32)))
 (let ((?x11670 (* 2.0 l_0_6_18)))
 (let ((?x11671 (* ?x11670 l_0_6_6)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11668 (* ?x11514 l_0_6_5)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11666 (* ?x11511 l_0_6_4)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x10923 (* ?x10922 l_0_6_3)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x10920 (* ?x10919 l_0_6_2)))
 (let ((?x11191 (* (* 2.0 l_0_6_104) l_0_6_99)))
 (let ((?x11187 (* 2.0 l_0_6_103)))
 (let ((?x11188 (* ?x11187 l_0_6_98)))
 (let ((?x10626 (* 2.0 l_0_6_102)))
 (let ((?x11185 (* ?x10626 l_0_6_97)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x11183 (* ?x10621 l_0_6_96)))
 (let ((?x6374 (- (- (- (- (* (* (- 2.0) l_0_6_100) l_0_6_95) ?x11183) ?x11185) ?x11188) ?x11191)))
 (let ((?x11674 (- (- (- (- (- (+ (+ ?x6374 ?x10920) ?x10923) ?x11666) ?x11668) ?x11671) ?x10930) ?x10933)))
 (let ((?x11684 (+ (+ (+ (+ (+ (+ (+ ?x11674 ?x11675) ?x11677) ?x11679) ?x11223) ?x11226) ?x11229) ?x11232)))
 (= (+ ?x11684 ?x11235) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11739 (* l_0_6_9 l_0_6_9)))
 (let ((?x11737 (* l_0_6_8 l_0_6_8)))
 (let ((?x11735 (* l_0_6_7 l_0_6_7)))
 (let ((?x11721 (* l_0_6_31 l_0_6_31)))
 (let ((?x11057 (* 2.0 l_0_6_31)))
 (let ((?x11058 (* ?x11057 l_0_6_35)))
 (let ((?x11718 (* l_0_6_30 l_0_6_30)))
 (let ((?x11054 (* 2.0 l_0_6_30)))
 (let ((?x11055 (* ?x11054 l_0_6_34)))
 (let ((?x11715 (* l_0_6_29 l_0_6_29)))
 (let ((?x11051 (* 2.0 l_0_6_29)))
 (let ((?x11052 (* ?x11051 l_0_6_33)))
 (let ((?x11712 (* l_0_6_28 l_0_6_28)))
 (let ((?x11048 (* 2.0 l_0_6_28)))
 (let ((?x11049 (* ?x11048 l_0_6_32)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x11043 (* ?x10966 l_0_6_9)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x11041 (* ?x10922 l_0_6_8)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x11039 (* ?x10919 l_0_6_7)))
 (let ((?x11703 (+ (- (* (* 2.0 l_0_6_10) l_0_6_14) (* l_0_6_10 l_0_6_10)) ?x11039)))
 (let ((?x11717 (- (+ (- (+ (- (+ (+ ?x11703 ?x11041) ?x11043) ?x11049) ?x11712) ?x11052) ?x11715) ?x11055)))
 (let ((?x11725 (- (+ (- (+ ?x11717 ?x11718) ?x11058) ?x11721) (* (* 2.0 l_0_6_49) l_0_6_53))))
 (let ((?x11731 (- (- ?x11725 (* (* 2.0 l_0_6_50) l_0_6_54)) (* (* 2.0 l_0_6_51) l_0_6_55))))
 (let ((?x11740 (- (- (- (- ?x11731 (* (* 2.0 l_0_6_52) l_0_6_56)) ?x11735) ?x11737) ?x11739)))
 (= ?x11740 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x11802 (* l_0_6_57 l_0_6_57)))
 (let ((?x11800 (* l_0_6_56 l_0_6_56)))
 (let ((?x11798 (* l_0_6_55 l_0_6_55)))
 (let ((?x11796 (* l_0_6_54 l_0_6_54)))
 (let ((?x11794 (* l_0_6_53 l_0_6_53)))
 (let ((?x11135 (* l_0_6_36 l_0_6_36)))
 (let ((?x11133 (* l_0_6_35 l_0_6_35)))
 (let ((?x11131 (* l_0_6_34 l_0_6_34)))
 (let ((?x11129 (* l_0_6_33 l_0_6_33)))
 (let ((?x11127 (* l_0_6_32 l_0_6_32)))
 (let ((?x11057 (* 2.0 l_0_6_31)))
 (let ((?x11058 (* ?x11057 l_0_6_35)))
 (let ((?x11054 (* 2.0 l_0_6_30)))
 (let ((?x11055 (* ?x11054 l_0_6_34)))
 (let ((?x11051 (* 2.0 l_0_6_29)))
 (let ((?x11052 (* ?x11051 l_0_6_33)))
 (let ((?x11048 (* 2.0 l_0_6_28)))
 (let ((?x11049 (* ?x11048 l_0_6_32)))
 (let ((?x11124 (* l_0_6_15 l_0_6_15)))
 (let ((?x11122 (* l_0_6_14 l_0_6_14)))
 (let ((?x11120 (* l_0_6_13 l_0_6_13)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x11043 (* ?x10966 l_0_6_9)))
 (let ((?x11118 (* l_0_6_12 l_0_6_12)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x11041 (* ?x10922 l_0_6_8)))
 (let ((?x11116 (* l_0_6_11 l_0_6_11)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x11039 (* ?x10919 l_0_6_7)))
 (let ((?x11780 (+ (- (+ (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x11039) ?x11116) ?x11041) ?x11118)))
 (let ((?x11787 (+ (+ (+ (+ (+ (+ (- ?x11780 ?x11043) ?x11120) ?x11122) ?x11124) ?x11049) ?x11052) ?x11055)))
 (let ((?x11795 (- (- (- (- (- (- (+ ?x11787 ?x11058) ?x11127) ?x11129) ?x11131) ?x11133) ?x11135) ?x11794)))
 (= (- (- (- (- ?x11795 ?x11796) ?x11798) ?x11800) ?x11802) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11220 (* (* 2.0 l_0_6_36) l_0_6_41)))
 (let ((?x11217 (* (* 2.0 l_0_6_35) l_0_6_40)))
 (let ((?x11214 (* (* 2.0 l_0_6_34) l_0_6_39)))
 (let ((?x11211 (* (* 2.0 l_0_6_33) l_0_6_38)))
 (let ((?x11208 (* (* 2.0 l_0_6_32) l_0_6_37)))
 (let ((?x11057 (* 2.0 l_0_6_31)))
 (let ((?x11836 (* ?x11057 l_0_6_40)))
 (let ((?x11054 (* 2.0 l_0_6_30)))
 (let ((?x11834 (* ?x11054 l_0_6_39)))
 (let ((?x11051 (* 2.0 l_0_6_29)))
 (let ((?x11832 (* ?x11051 l_0_6_38)))
 (let ((?x11048 (* 2.0 l_0_6_28)))
 (let ((?x11830 (* ?x11048 l_0_6_37)))
 (let ((?x11670 (* 2.0 l_0_6_18)))
 (let ((?x11828 (* ?x11670 l_0_6_9)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11826 (* ?x11514 l_0_6_8)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11824 (* ?x11511 l_0_6_7)))
 (let ((?x11203 (* (* 2.0 l_0_6_15) l_0_6_20)))
 (let ((?x11200 (* (* 2.0 l_0_6_14) l_0_6_19)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x11197 (* ?x10966 l_0_6_18)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x11195 (* ?x10922 l_0_6_17)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x11193 (* ?x10919 l_0_6_16)))
 (let ((?x11822 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_10) l_0_6_19) ?x11193) ?x11195) ?x11197) ?x11200)))
 (let ((?x11835 (+ (+ (+ (- (- (- (+ ?x11822 ?x11203) ?x11824) ?x11826) ?x11828) ?x11830) ?x11832) ?x11834)))
 (let ((?x11845 (- (- (- (- (- (- (+ ?x11835 ?x11836) ?x11208) ?x11211) ?x11214) ?x11217) ?x11220) (* (* 2.0 l_0_6_53) l_0_6_58))))
 (let ((?x11851 (- (- ?x11845 (* (* 2.0 l_0_6_54) l_0_6_59)) (* (* 2.0 l_0_6_55) l_0_6_60))))
 (let ((?x11857 (- (- ?x11851 (* (* 2.0 l_0_6_56) l_0_6_61)) (* (* 2.0 l_0_6_57) l_0_6_62))))
 (= ?x11857 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11135 (* l_0_6_36 l_0_6_36)))
 (let ((?x11133 (* l_0_6_35 l_0_6_35)))
 (let ((?x11131 (* l_0_6_34 l_0_6_34)))
 (let ((?x11129 (* l_0_6_33 l_0_6_33)))
 (let ((?x11127 (* l_0_6_32 l_0_6_32)))
 (let ((?x11124 (* l_0_6_15 l_0_6_15)))
 (let ((?x11122 (* l_0_6_14 l_0_6_14)))
 (let ((?x11120 (* l_0_6_13 l_0_6_13)))
 (let ((?x11881 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x11120) ?x11122)))
 (= (+ (+ (+ (+ (+ (- ?x11881 ?x11124) ?x11127) ?x11129) ?x11131) ?x11133) ?x11135) 0.0)))))))))))
(assert
 (let ((?x11220 (* (* 2.0 l_0_6_36) l_0_6_41)))
 (let ((?x11217 (* (* 2.0 l_0_6_35) l_0_6_40)))
 (let ((?x11214 (* (* 2.0 l_0_6_34) l_0_6_39)))
 (let ((?x11211 (* (* 2.0 l_0_6_33) l_0_6_38)))
 (let ((?x11208 (* (* 2.0 l_0_6_32) l_0_6_37)))
 (let ((?x11203 (* (* 2.0 l_0_6_15) l_0_6_20)))
 (let ((?x11200 (* (* 2.0 l_0_6_14) l_0_6_19)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x11197 (* ?x10966 l_0_6_18)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x11195 (* ?x10922 l_0_6_17)))
 (let ((?x11897 (- (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_16) ?x11195) ?x11197) ?x11200) ?x11203)))
 (= (+ (+ (+ (+ (+ ?x11897 ?x11208) ?x11211) ?x11214) ?x11217) ?x11220) 0.0))))))))))))))
(assert
 (let ((?x11934 (* l_0_6_42 l_0_6_42)))
 (let ((?x11932 (* l_0_6_41 l_0_6_41)))
 (let ((?x11930 (* l_0_6_40 l_0_6_40)))
 (let ((?x11928 (* l_0_6_39 l_0_6_39)))
 (let ((?x11926 (* l_0_6_38 l_0_6_38)))
 (let ((?x11924 (* l_0_6_37 l_0_6_37)))
 (let ((?x11922 (* l_0_6_21 l_0_6_21)))
 (let ((?x11920 (* l_0_6_20 l_0_6_20)))
 (let ((?x11918 (* l_0_6_19 l_0_6_19)))
 (let ((?x11916 (* l_0_6_18 l_0_6_18)))
 (let ((?x11919 (- (- (- (* (- l_0_6_16) l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x11916) ?x11918)))
 (let ((?x11933 (+ (+ (+ (+ (+ (- (- ?x11919 ?x11920) ?x11922) ?x11924) ?x11926) ?x11928) ?x11930) ?x11932)))
 (= (+ ?x11933 ?x11934) 0.0))))))))))))))
(assert
 (let ((?x10895 (* l_0_6_22 l_0_6_22)))
 (let ((?x10890 (* l_0_6_1 l_0_6_1)))
 (let ((?x3879 (- ?x10890 ?x10895)))
 (= ?x3879 0.0)))))
(assert
 (let ((?x10667 (* 2.0 l_0_6_69)))
 (let ((?x10668 (* ?x10667 l_0_6_81)))
 (let ((?x10664 (* 2.0 l_0_6_68)))
 (let ((?x10665 (* ?x10664 l_0_6_80)))
 (let ((?x10661 (* 2.0 l_0_6_67)))
 (let ((?x10662 (* ?x10661 l_0_6_79)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x11975 (* ?x10779 l_0_6_79)))
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x11679 (* ?x10977 l_0_6_39)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x11677 (* ?x10974 l_0_6_38)))
 (let ((?x10971 (* 2.0 l_0_6_25)))
 (let ((?x11675 (* ?x10971 l_0_6_37)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10927 (* ?x10892 l_0_6_23)))
 (let ((?x11670 (* 2.0 l_0_6_18)))
 (let ((?x11671 (* ?x11670 l_0_6_6)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11668 (* ?x11514 l_0_6_5)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11666 (* ?x11511 l_0_6_4)))
 (let ((?x10626 (* 2.0 l_0_6_102)))
 (let ((?x10627 (* ?x10626 l_0_6_90)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x10624 (* ?x10621 l_0_6_89)))
 (let ((?x10618 (* 2.0 l_0_6_100)))
 (let ((?x10619 (* ?x10618 l_0_6_88)))
 (let ((?x11966 (+ (+ (- (* (* 2.0 l_0_6_1) l_0_6_2) (* ?x10618 l_0_6_85)) ?x10619) ?x10624)))
 (let ((?x11973 (- (- (- (+ (+ (+ (+ ?x11966 ?x10627) ?x11666) ?x11668) ?x11671) ?x10927) ?x11675) ?x11677)))
 (= (- (- (- (+ (- ?x11973 ?x11679) ?x11975) ?x10662) ?x10665) ?x10668) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10969 (* ?x10892 l_0_6_25)))
 (let ((?x9495 (- (* (* 2.0 l_0_6_1) l_0_6_4) ?x10969)))
 (= ?x9495 0.0)))))
(assert
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x11045 (* ?x10892 l_0_6_28)))
 (let ((?x10888 (* 2.0 l_0_6_1)))
 (let ((?x8223 (* ?x10888 l_0_6_7)))
 (= (- ?x8223 ?x11045) 0.0))))))
(assert
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10893 (* ?x10892 l_0_6_32)))
 (let ((?x10888 (* 2.0 l_0_6_1)))
 (let ((?x10889 (* ?x10888 l_0_6_11)))
 (= (- ?x10889 ?x10893) 0.0))))))
(assert
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x11205 (* ?x10892 l_0_6_37)))
 (let ((?x10888 (* 2.0 l_0_6_1)))
 (let ((?x6925 (* ?x10888 l_0_6_16)))
 (= (- ?x6925 ?x11205) 0.0))))))
(assert
 (let ((?x10667 (* 2.0 l_0_6_69)))
 (let ((?x10668 (* ?x10667 l_0_6_81)))
 (let ((?x10664 (* 2.0 l_0_6_68)))
 (let ((?x10665 (* ?x10664 l_0_6_80)))
 (let ((?x10661 (* 2.0 l_0_6_67)))
 (let ((?x10662 (* ?x10661 l_0_6_79)))
 (let ((?x11290 (* 2.0 l_0_6_3)))
 (let ((?x11291 (* ?x11290 l_0_6_5)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11288 (* ?x10932 l_0_6_26)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11286 (* ?x10929 l_0_6_25)))
 (let ((?x11283 (* 2.0 l_0_6_2)))
 (let ((?x11284 (* ?x11283 l_0_6_4)))
 (let ((?x10626 (* 2.0 l_0_6_102)))
 (let ((?x10627 (* ?x10626 l_0_6_90)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x10624 (* ?x10621 l_0_6_89)))
 (let ((?x11992 (- (+ (- (- (* (* (- 2.0) l_0_6_100) l_0_6_88) ?x10624) ?x10627) ?x11284) ?x11286)))
 (= (+ (+ (+ (+ (- ?x11992 ?x11288) ?x11291) ?x10662) ?x10665) ?x10668) 0.0)))))))))))))))))))))
(assert
 (let ((?x11072 (* 2.0 l_0_6_73)))
 (let ((?x12033 (* ?x11072 l_0_6_82)))
 (let ((?x11069 (* 2.0 l_0_6_72)))
 (let ((?x12031 (* ?x11069 l_0_6_81)))
 (let ((?x11066 (* 2.0 l_0_6_71)))
 (let ((?x12029 (* ?x11066 l_0_6_80)))
 (let ((?x11063 (* 2.0 l_0_6_70)))
 (let ((?x12027 (* ?x11063 l_0_6_79)))
 (let ((?x11290 (* 2.0 l_0_6_3)))
 (let ((?x11364 (* ?x11290 l_0_6_8)))
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x11679 (* ?x10977 l_0_6_39)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x11677 (* ?x10974 l_0_6_38)))
 (let ((?x10971 (* 2.0 l_0_6_25)))
 (let ((?x11675 (* ?x10971 l_0_6_37)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11361 (* ?x10932 l_0_6_29)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11358 (* ?x10929 l_0_6_28)))
 (let ((?x11283 (* 2.0 l_0_6_2)))
 (let ((?x11356 (* ?x11283 l_0_6_7)))
 (let ((?x11670 (* 2.0 l_0_6_18)))
 (let ((?x11671 (* ?x11670 l_0_6_6)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11668 (* ?x11514 l_0_6_5)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11666 (* ?x11511 l_0_6_4)))
 (let ((?x11187 (* 2.0 l_0_6_103)))
 (let ((?x12009 (* ?x11187 l_0_6_94)))
 (let ((?x10626 (* 2.0 l_0_6_102)))
 (let ((?x3955 (* ?x10626 l_0_6_93)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x6974 (* ?x10621 l_0_6_92)))
 (let ((?x12011 (+ (- (- (- (* (* (- 2.0) l_0_6_100) l_0_6_91) ?x6974) ?x3955) ?x12009) ?x11666)))
 (let ((?x12018 (- (- (- (- (+ (+ (+ ?x12011 ?x11668) ?x11671) ?x11356) ?x11358) ?x11361) ?x11675) ?x11677)))
 (let ((?x12024 (- (- (+ (- ?x12018 ?x11679) ?x11364) (* (* 2.0 l_0_6_46) l_0_6_58)) (* (* 2.0 l_0_6_47) l_0_6_59))))
 (let ((?x12032 (+ (+ (+ (- ?x12024 (* (* 2.0 l_0_6_48) l_0_6_60)) ?x12027) ?x12029) ?x12031)))
 (= (+ ?x12032 ?x12033) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12088 (* l_0_6_84 l_0_6_84)))
 (let ((?x12086 (* l_0_6_83 l_0_6_83)))
 (let ((?x12084 (* l_0_6_82 l_0_6_82)))
 (let ((?x12082 (* l_0_6_81 l_0_6_81)))
 (let ((?x12080 (* l_0_6_80 l_0_6_80)))
 (let ((?x12078 (* l_0_6_79 l_0_6_79)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11519 (* ?x10932 l_0_6_38)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11517 (* ?x10929 l_0_6_37)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11515 (* ?x11514 l_0_6_3)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11512 (* ?x11511 l_0_6_2)))
 (let ((?x12072 (* l_0_6_105 l_0_6_105)))
 (let ((?x12070 (* l_0_6_104 l_0_6_104)))
 (let ((?x12068 (* l_0_6_103 l_0_6_103)))
 (let ((?x12059 (* l_0_6_102 l_0_6_102)))
 (let ((?x12067 (- (- (* (- l_0_6_100) l_0_6_100) (* l_0_6_101 l_0_6_101)) ?x12059)))
 (let ((?x12077 (- (- (+ (+ (- (- (- ?x12067 ?x12068) ?x12070) ?x12072) ?x11512) ?x11515) ?x11517) ?x11519)))
 (= (+ (+ (+ (+ (+ (+ ?x12077 ?x12078) ?x12080) ?x12082) ?x12084) ?x12086) ?x12088) 0.0))))))))))))))))))))))
(assert
 (let ((?x11558 (* l_0_6_6 l_0_6_6)))
 (let ((?x6142 (* l_0_6_5 l_0_6_5)))
 (let ((?x2923 (* l_0_6_4 l_0_6_4)))
 (let ((?x9071 (* l_0_6_27 l_0_6_27)))
 (let ((?x12114 (+ (- (- (* (- l_0_6_25) l_0_6_25) (* l_0_6_26 l_0_6_26)) ?x9071) ?x2923)))
 (let ((?x12116 (+ (+ ?x12114 ?x6142) ?x11558)))
 (= ?x12116 0.0))))))))
(assert
 (let ((?x11606 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11603 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11591 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x11587 (* ?x10977 l_0_6_30)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x11584 (* ?x10974 l_0_6_29)))
 (let ((?x12122 (+ (- (- (* (* (- 2.0) l_0_6_25) l_0_6_28) ?x11584) ?x11587) ?x11591)))
 (= (+ (+ ?x12122 ?x11603) ?x11606) 0.0))))))))))
(assert
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x10978 (* ?x10977 l_0_6_34)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x10975 (* ?x10974 l_0_6_33)))
 (let ((?x10971 (* 2.0 l_0_6_25)))
 (let ((?x10972 (* ?x10971 l_0_6_32)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x10967 (* ?x10966 l_0_6_6)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x10964 (* ?x10922 l_0_6_5)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x10962 (* ?x10919 l_0_6_4)))
 (let ((?x11580 (+ (+ ?x10962 ?x10964) ?x10967)))
 (= (- (- (- ?x11580 ?x10972) ?x10975) ?x10978) 0.0)))))))))))))))
(assert
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x11679 (* ?x10977 l_0_6_39)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x11677 (* ?x10974 l_0_6_38)))
 (let ((?x10971 (* 2.0 l_0_6_25)))
 (let ((?x11675 (* ?x10971 l_0_6_37)))
 (let ((?x11670 (* 2.0 l_0_6_18)))
 (let ((?x11671 (* ?x11670 l_0_6_6)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11668 (* ?x11514 l_0_6_5)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11666 (* ?x11511 l_0_6_4)))
 (= (- (- (- (+ (+ ?x11666 ?x11668) ?x11671) ?x11675) ?x11677) ?x11679) 0.0))))))))))))))
(assert
 (let ((?x11739 (* l_0_6_9 l_0_6_9)))
 (let ((?x11737 (* l_0_6_8 l_0_6_8)))
 (let ((?x11735 (* l_0_6_7 l_0_6_7)))
 (let ((?x11721 (* l_0_6_31 l_0_6_31)))
 (let ((?x11718 (* l_0_6_30 l_0_6_30)))
 (let ((?x11715 (* l_0_6_29 l_0_6_29)))
 (let ((?x12143 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_28 l_0_6_28)) ?x11715) ?x11718)))
 (let ((?x12144 (- ?x12143 ?x11721)))
 (= (+ (+ (+ ?x12144 ?x11735) ?x11737) ?x11739) 0.0))))))))))
(assert
 (let ((?x11057 (* 2.0 l_0_6_31)))
 (let ((?x11058 (* ?x11057 l_0_6_35)))
 (let ((?x11054 (* 2.0 l_0_6_30)))
 (let ((?x11055 (* ?x11054 l_0_6_34)))
 (let ((?x11051 (* 2.0 l_0_6_29)))
 (let ((?x11052 (* ?x11051 l_0_6_33)))
 (let ((?x11048 (* 2.0 l_0_6_28)))
 (let ((?x11049 (* ?x11048 l_0_6_32)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x11043 (* ?x10966 l_0_6_9)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x11041 (* ?x10922 l_0_6_8)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x11039 (* ?x10919 l_0_6_7)))
 (let ((?x11026 (* 2.0 l_0_6_10)))
 (let ((?x11027 (* ?x11026 l_0_6_14)))
 (let ((?x7156 (- (- (- (- (+ (+ (+ ?x11027 ?x11039) ?x11041) ?x11043) ?x11049) ?x11052) ?x11055) ?x11058)))
 (= ?x7156 0.0)))))))))))))))))))
(assert
 (let ((?x11057 (* 2.0 l_0_6_31)))
 (let ((?x11836 (* ?x11057 l_0_6_40)))
 (let ((?x11054 (* 2.0 l_0_6_30)))
 (let ((?x11834 (* ?x11054 l_0_6_39)))
 (let ((?x11051 (* 2.0 l_0_6_29)))
 (let ((?x11832 (* ?x11051 l_0_6_38)))
 (let ((?x11048 (* 2.0 l_0_6_28)))
 (let ((?x11830 (* ?x11048 l_0_6_37)))
 (let ((?x11670 (* 2.0 l_0_6_18)))
 (let ((?x11828 (* ?x11670 l_0_6_9)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11826 (* ?x11514 l_0_6_8)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11824 (* ?x11511 l_0_6_7)))
 (let ((?x11026 (* 2.0 l_0_6_10)))
 (let ((?x12154 (* ?x11026 l_0_6_19)))
 (let ((?x12161 (- (- (- (- (+ (+ (+ ?x12154 ?x11824) ?x11826) ?x11828) ?x11830) ?x11832) ?x11834) ?x11836)))
 (= ?x12161 0.0)))))))))))))))))))
(assert
 (let ((?x11135 (* l_0_6_36 l_0_6_36)))
 (let ((?x11133 (* l_0_6_35 l_0_6_35)))
 (let ((?x11131 (* l_0_6_34 l_0_6_34)))
 (let ((?x11129 (* l_0_6_33 l_0_6_33)))
 (let ((?x11127 (* l_0_6_32 l_0_6_32)))
 (let ((?x11124 (* l_0_6_15 l_0_6_15)))
 (let ((?x11122 (* l_0_6_14 l_0_6_14)))
 (let ((?x11120 (* l_0_6_13 l_0_6_13)))
 (let ((?x9789 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x11120) ?x11122)))
 (= (- (- (- (- (- (+ ?x9789 ?x11124) ?x11127) ?x11129) ?x11131) ?x11133) ?x11135) 0.0)))))))))))
(assert
 (let ((?x11220 (* (* 2.0 l_0_6_36) l_0_6_41)))
 (let ((?x11217 (* (* 2.0 l_0_6_35) l_0_6_40)))
 (let ((?x11214 (* (* 2.0 l_0_6_34) l_0_6_39)))
 (let ((?x11211 (* (* 2.0 l_0_6_33) l_0_6_38)))
 (let ((?x11208 (* (* 2.0 l_0_6_32) l_0_6_37)))
 (let ((?x11203 (* (* 2.0 l_0_6_15) l_0_6_20)))
 (let ((?x11200 (* (* 2.0 l_0_6_14) l_0_6_19)))
 (let ((?x10966 (* 2.0 l_0_6_13)))
 (let ((?x11197 (* ?x10966 l_0_6_18)))
 (let ((?x10922 (* 2.0 l_0_6_12)))
 (let ((?x11195 (* ?x10922 l_0_6_17)))
 (let ((?x10919 (* 2.0 l_0_6_11)))
 (let ((?x11193 (* ?x10919 l_0_6_16)))
 (let ((?x12184 (- (- (- (+ (+ (+ (+ ?x11193 ?x11195) ?x11197) ?x11200) ?x11203) ?x11208) ?x11211) ?x11214)))
 (= (- (- ?x12184 ?x11217) ?x11220) 0.0))))))))))))))))
(assert
 (let ((?x11934 (* l_0_6_42 l_0_6_42)))
 (let ((?x11932 (* l_0_6_41 l_0_6_41)))
 (let ((?x11930 (* l_0_6_40 l_0_6_40)))
 (let ((?x11928 (* l_0_6_39 l_0_6_39)))
 (let ((?x11926 (* l_0_6_38 l_0_6_38)))
 (let ((?x11924 (* l_0_6_37 l_0_6_37)))
 (let ((?x11922 (* l_0_6_21 l_0_6_21)))
 (let ((?x11920 (* l_0_6_20 l_0_6_20)))
 (let ((?x11918 (* l_0_6_19 l_0_6_19)))
 (let ((?x11916 (* l_0_6_18 l_0_6_18)))
 (let ((?x12201 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x11916) ?x11918)))
 (let ((?x12208 (- (- (- (- (- (+ (+ ?x12201 ?x11920) ?x11922) ?x11924) ?x11926) ?x11928) ?x11930) ?x11932)))
 (let ((?x12209 (- ?x12208 ?x11934)))
 (= ?x12209 0.0)))))))))))))))
(assert
 (let ((?x2782 (* l_0_6_85 l_0_6_85)))
 (let ((?x7327 (* l_0_6_64 l_0_6_64)))
 (let ((?x10895 (* l_0_6_22 l_0_6_22)))
 (let ((?x10890 (* l_0_6_1 l_0_6_1)))
 (let ((?x3879 (- ?x10890 ?x10895)))
 (= (+ (- ?x3879 ?x7327) ?x2782) 0.0)))))))
(assert
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x10785 (* ?x10784 l_0_6_86)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x10780 (* ?x10779 l_0_6_65)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10927 (* ?x10892 l_0_6_23)))
 (let ((?x9809 (* l_0_6_127 l_0_6_127)))
 (let ((?x9810 (- (- (* (* 2.0 l_0_6_1) l_0_6_2) (* l_0_6_106 l_0_6_106)) ?x9809)))
 (let ((?x12216 (+ (- (- (- ?x9810 ?x10927) ?x10780) (* (* 1.0 l_0_6_64) l_0_6_64)) ?x10785)))
 (= (+ ?x12216 (* 1.0 (* l_0_6_85 l_0_6_85))) 0.0)))))))))))
(assert
 (let ((?x2782 (* l_0_6_85 l_0_6_85)))
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x12225 (* ?x10784 l_0_6_88)))
 (let ((?x7327 (* l_0_6_64 l_0_6_64)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x9870 (* ?x10779 l_0_6_67)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10969 (* ?x10892 l_0_6_25)))
 (let ((?x9495 (- (* (* 2.0 l_0_6_1) l_0_6_4) ?x10969)))
 (= (- (+ (+ (- ?x9495 ?x9870) ?x7327) ?x12225) ?x2782) 0.0)))))))))))
(assert
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x12247 (* ?x10784 l_0_6_91)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x12245 (* ?x10779 l_0_6_70)))
 (let ((?x12243 (* l_0_6_43 l_0_6_43)))
 (let ((?x10895 (* l_0_6_22 l_0_6_22)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x11045 (* ?x10892 l_0_6_28)))
 (let ((?x12241 (- (+ (* (* 2.0 l_0_6_1) l_0_6_7) (* l_0_6_1 l_0_6_1)) ?x11045)))
 (= (+ (- (- (- ?x12241 ?x10895) ?x12243) ?x12245) ?x12247) 0.0)))))))))))
(assert
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x11975 (* ?x10779 l_0_6_79)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x11205 (* ?x10892 l_0_6_37)))
 (let ((?x10618 (* 2.0 l_0_6_100)))
 (let ((?x11963 (* ?x10618 l_0_6_85)))
 (let ((?x10888 (* 2.0 l_0_6_1)))
 (let ((?x6925 (* ?x10888 l_0_6_16)))
 (= (- (- (+ ?x6925 ?x11963) ?x11205) ?x11975) 0.0))))))))))
(assert
 (let ((?x10810 (* 2.0 l_0_6_87)))
 (let ((?x12283 (* ?x10810 l_0_6_89)))
 (let ((?x10807 (* 2.0 l_0_6_86)))
 (let ((?x12281 (* ?x10807 l_0_6_88)))
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x12225 (* ?x10784 l_0_6_88)))
 (let ((?x10785 (* ?x10784 l_0_6_86)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x12277 (* ?x10658 l_0_6_68)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x12275 (* ?x10655 l_0_6_67)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x9870 (* ?x10779 l_0_6_67)))
 (let ((?x10780 (* ?x10779 l_0_6_65)))
 (let ((?x11290 (* 2.0 l_0_6_3)))
 (let ((?x11291 (* ?x11290 l_0_6_5)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11288 (* ?x10932 l_0_6_26)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11286 (* ?x10929 l_0_6_25)))
 (let ((?x11283 (* 2.0 l_0_6_2)))
 (let ((?x11284 (* ?x11283 l_0_6_4)))
 (let ((?x12268 (- (* (* (- 2.0) l_0_6_106) l_0_6_109) (* (* 2.0 l_0_6_127) l_0_6_130))))
 (let ((?x12276 (- (- (+ (+ (- (- (+ ?x12268 ?x11284) ?x11286) ?x11288) ?x11291) ?x10780) ?x9870) ?x12275)))
 (= (+ (+ (+ (- (- ?x12276 ?x12277) ?x10785) ?x12225) ?x12281) ?x12283) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x10810 (* 2.0 l_0_6_87)))
 (let ((?x10811 (* ?x10810 l_0_6_92)))
 (let ((?x10807 (* 2.0 l_0_6_86)))
 (let ((?x10808 (* ?x10807 l_0_6_91)))
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x12247 (* ?x10784 l_0_6_91)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x10805 (* ?x10658 l_0_6_71)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x10803 (* ?x10655 l_0_6_70)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x12245 (* ?x10779 l_0_6_70)))
 (let ((?x11290 (* 2.0 l_0_6_3)))
 (let ((?x11364 (* ?x11290 l_0_6_8)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11361 (* ?x10932 l_0_6_29)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11358 (* ?x10929 l_0_6_28)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10927 (* ?x10892 l_0_6_23)))
 (let ((?x11283 (* 2.0 l_0_6_2)))
 (let ((?x11356 (* ?x11283 l_0_6_7)))
 (let ((?x10888 (* 2.0 l_0_6_1)))
 (let ((?x11962 (* ?x10888 l_0_6_2)))
 (let ((?x12311 (- (- ?x11962 (* (* 2.0 l_0_6_106) l_0_6_112)) (* (* 2.0 l_0_6_127) l_0_6_133))))
 (let ((?x12318 (- (+ (- (- (- (+ ?x12311 ?x11356) ?x10927) ?x11358) ?x11361) ?x11364) (* (* 2.0 l_0_6_43) l_0_6_44))))
 (= (+ (+ (+ (- (- (- ?x12318 ?x12245) ?x10803) ?x10805) ?x12247) ?x10808) ?x10811) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x10659 (* ?x10658 l_0_6_80)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x10656 (* ?x10655 l_0_6_79)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x11975 (* ?x10779 l_0_6_79)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11519 (* ?x10932 l_0_6_38)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11517 (* ?x10929 l_0_6_37)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11515 (* ?x11514 l_0_6_3)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11512 (* ?x11511 l_0_6_2)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x10622 (* ?x10621 l_0_6_87)))
 (let ((?x10618 (* 2.0 l_0_6_100)))
 (let ((?x9992 (* ?x10618 l_0_6_86)))
 (let ((?x11963 (* ?x10618 l_0_6_85)))
 (let ((?x12344 (- (- (+ (+ ?x11963 ?x9992) ?x10622) (* (* 2.0 l_0_6_106) l_0_6_121)) (* (* 2.0 l_0_6_127) l_0_6_142))))
 (let ((?x12351 (- (- (- (- (- (+ (+ ?x12344 ?x11512) ?x11515) ?x11517) ?x11519) ?x11975) ?x10656) ?x10659)))
 (= ?x12351 0.0)))))))))))))))))))))))
(assert
 (let ((?x12380 (* l_0_6_90 l_0_6_90)))
 (let ((?x12378 (* l_0_6_89 l_0_6_89)))
 (let ((?x12376 (* l_0_6_88 l_0_6_88)))
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x12225 (* ?x10784 l_0_6_88)))
 (let ((?x12373 (* l_0_6_69 l_0_6_69)))
 (let ((?x12371 (* l_0_6_68 l_0_6_68)))
 (let ((?x12369 (* l_0_6_67 l_0_6_67)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x9870 (* ?x10779 l_0_6_67)))
 (let ((?x11558 (* l_0_6_6 l_0_6_6)))
 (let ((?x6142 (* l_0_6_5 l_0_6_5)))
 (let ((?x2923 (* l_0_6_4 l_0_6_4)))
 (let ((?x9071 (* l_0_6_27 l_0_6_27)))
 (let ((?x12114 (+ (- (- (* (- l_0_6_25) l_0_6_25) (* l_0_6_26 l_0_6_26)) ?x9071) ?x2923)))
 (let ((?x12116 (+ (+ ?x12114 ?x6142) ?x11558)))
 (let ((?x12379 (+ (+ (- (- (- (- (+ ?x12116 ?x9870) ?x12369) ?x12371) ?x12373) ?x12225) ?x12376) ?x12378)))
 (= (+ ?x12379 ?x12380) 0.0)))))))))))))))))))
(assert
 (let ((?x10994 (* 2.0 l_0_6_90)))
 (let ((?x12418 (* ?x10994 l_0_6_93)))
 (let ((?x10991 (* 2.0 l_0_6_89)))
 (let ((?x12416 (* ?x10991 l_0_6_92)))
 (let ((?x10988 (* 2.0 l_0_6_88)))
 (let ((?x12414 (* ?x10988 l_0_6_91)))
 (let ((?x10784 (* 2.0 l_0_6_85)))
 (let ((?x12247 (* ?x10784 l_0_6_91)))
 (let ((?x10667 (* 2.0 l_0_6_69)))
 (let ((?x12411 (* ?x10667 l_0_6_72)))
 (let ((?x10664 (* 2.0 l_0_6_68)))
 (let ((?x12409 (* ?x10664 l_0_6_71)))
 (let ((?x10661 (* 2.0 l_0_6_67)))
 (let ((?x12407 (* ?x10661 l_0_6_70)))
 (let ((?x10779 (* 2.0 l_0_6_64)))
 (let ((?x12245 (* ?x10779 l_0_6_70)))
 (let ((?x11606 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11603 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11591 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x11587 (* ?x10977 l_0_6_30)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x11584 (* ?x10974 l_0_6_29)))
 (let ((?x10971 (* 2.0 l_0_6_25)))
 (let ((?x11581 (* ?x10971 l_0_6_28)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x10969 (* ?x10892 l_0_6_25)))
 (let ((?x9495 (- (* (* 2.0 l_0_6_1) l_0_6_4) ?x10969)))
 (let ((?x12403 (- (+ (- (- (- ?x9495 ?x11581) ?x11584) ?x11587) ?x11591) (* (* 2.0 l_0_6_43) l_0_6_46))))
 (let ((?x12413 (- (- (- (- (+ (+ (+ ?x12403 ?x11603) ?x11606) ?x12245) ?x12407) ?x12409) ?x12411) ?x12247)))
 (= (+ (+ (+ ?x12413 ?x12414) ?x12416) ?x12418) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x12471 (* l_0_6_94 l_0_6_94)))
 (let ((?x12469 (* l_0_6_93 l_0_6_93)))
 (let ((?x12467 (* l_0_6_92 l_0_6_92)))
 (let ((?x12465 (* l_0_6_91 l_0_6_91)))
 (let ((?x11739 (* l_0_6_9 l_0_6_9)))
 (let ((?x11737 (* l_0_6_8 l_0_6_8)))
 (let ((?x12461 (* l_0_6_73 l_0_6_73)))
 (let ((?x12459 (* l_0_6_72 l_0_6_72)))
 (let ((?x12457 (* l_0_6_71 l_0_6_71)))
 (let ((?x12455 (* l_0_6_70 l_0_6_70)))
 (let ((?x11735 (* l_0_6_7 l_0_6_7)))
 (let ((?x11721 (* l_0_6_31 l_0_6_31)))
 (let ((?x11718 (* l_0_6_30 l_0_6_30)))
 (let ((?x11715 (* l_0_6_29 l_0_6_29)))
 (let ((?x11712 (* l_0_6_28 l_0_6_28)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x11045 (* ?x10892 l_0_6_28)))
 (let ((?x4976 (- (+ (* (* 2.0 l_0_6_1) l_0_6_7) (* l_0_6_10 l_0_6_10)) ?x11045)))
 (let ((?x12453 (- (- (- (- (- ?x4976 ?x11712) ?x11715) ?x11718) ?x11721) (* (* 2.0 l_0_6_43) l_0_6_49))))
 (let ((?x12464 (+ (+ (- (- (- (- (+ ?x12453 ?x11735) ?x12455) ?x12457) ?x12459) ?x12461) ?x11737) ?x11739)))
 (= (+ (+ (+ (+ ?x12464 ?x12465) ?x12467) ?x12469) ?x12471) 0.0))))))))))))))))))))))
(assert
 (let ((?x11072 (* 2.0 l_0_6_73)))
 (let ((?x12033 (* ?x11072 l_0_6_82)))
 (let ((?x11069 (* 2.0 l_0_6_72)))
 (let ((?x12031 (* ?x11069 l_0_6_81)))
 (let ((?x11066 (* 2.0 l_0_6_71)))
 (let ((?x12029 (* ?x11066 l_0_6_80)))
 (let ((?x11063 (* 2.0 l_0_6_70)))
 (let ((?x12027 (* ?x11063 l_0_6_79)))
 (let ((?x11057 (* 2.0 l_0_6_31)))
 (let ((?x11836 (* ?x11057 l_0_6_40)))
 (let ((?x11054 (* 2.0 l_0_6_30)))
 (let ((?x11834 (* ?x11054 l_0_6_39)))
 (let ((?x11051 (* 2.0 l_0_6_29)))
 (let ((?x11832 (* ?x11051 l_0_6_38)))
 (let ((?x11048 (* 2.0 l_0_6_28)))
 (let ((?x11830 (* ?x11048 l_0_6_37)))
 (let ((?x10892 (* 2.0 l_0_6_22)))
 (let ((?x11205 (* ?x10892 l_0_6_37)))
 (let ((?x11670 (* 2.0 l_0_6_18)))
 (let ((?x11828 (* ?x11670 l_0_6_9)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11826 (* ?x11514 l_0_6_8)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11824 (* ?x11511 l_0_6_7)))
 (let ((?x11187 (* 2.0 l_0_6_103)))
 (let ((?x12009 (* ?x11187 l_0_6_94)))
 (let ((?x10626 (* 2.0 l_0_6_102)))
 (let ((?x3955 (* ?x10626 l_0_6_93)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x6974 (* ?x10621 l_0_6_92)))
 (let ((?x10618 (* 2.0 l_0_6_100)))
 (let ((?x7514 (* ?x10618 l_0_6_91)))
 (let ((?x11026 (* 2.0 l_0_6_10)))
 (let ((?x12154 (* ?x11026 l_0_6_19)))
 (let ((?x10888 (* 2.0 l_0_6_1)))
 (let ((?x6925 (* ?x10888 l_0_6_16)))
 (let ((?x12505 (+ (+ (+ (+ (+ (+ (+ ?x6925 ?x12154) ?x7514) ?x6974) ?x3955) ?x12009) ?x11824) ?x11826)))
 (let ((?x12513 (- (- (- (- (- (- (+ ?x12505 ?x11828) ?x11205) ?x11830) ?x11832) ?x11834) ?x11836) (* (* 2.0 l_0_6_43) l_0_6_58))))
 (= (- (- (- (- ?x12513 ?x12027) ?x12029) ?x12031) ?x12033) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12088 (* l_0_6_84 l_0_6_84)))
 (let ((?x12086 (* l_0_6_83 l_0_6_83)))
 (let ((?x12084 (* l_0_6_82 l_0_6_82)))
 (let ((?x12082 (* l_0_6_81 l_0_6_81)))
 (let ((?x12080 (* l_0_6_80 l_0_6_80)))
 (let ((?x12078 (* l_0_6_79 l_0_6_79)))
 (let ((?x11934 (* l_0_6_42 l_0_6_42)))
 (let ((?x11932 (* l_0_6_41 l_0_6_41)))
 (let ((?x11930 (* l_0_6_40 l_0_6_40)))
 (let ((?x11928 (* l_0_6_39 l_0_6_39)))
 (let ((?x11926 (* l_0_6_38 l_0_6_38)))
 (let ((?x11924 (* l_0_6_37 l_0_6_37)))
 (let ((?x11922 (* l_0_6_21 l_0_6_21)))
 (let ((?x11920 (* l_0_6_20 l_0_6_20)))
 (let ((?x11918 (* l_0_6_19 l_0_6_19)))
 (let ((?x11916 (* l_0_6_18 l_0_6_18)))
 (let ((?x11914 (* l_0_6_17 l_0_6_17)))
 (let ((?x11938 (* l_0_6_16 l_0_6_16)))
 (let ((?x12072 (* l_0_6_105 l_0_6_105)))
 (let ((?x12070 (* l_0_6_104 l_0_6_104)))
 (let ((?x12068 (* l_0_6_103 l_0_6_103)))
 (let ((?x12059 (* l_0_6_102 l_0_6_102)))
 (let ((?x7481 (+ (+ (+ (* l_0_6_100 l_0_6_100) (* l_0_6_101 l_0_6_101)) ?x12059) ?x12068)))
 (let ((?x12538 (+ (+ (+ (+ (+ (+ (+ ?x7481 ?x12070) ?x12072) ?x11938) ?x11914) ?x11916) ?x11918) ?x11920)))
 (let ((?x12545 (- (- (- (- (- (- (+ ?x12538 ?x11922) ?x11924) ?x11926) ?x11928) ?x11930) ?x11932) ?x11934)))
 (= (- (- (- (- (- (- ?x12545 ?x12078) ?x12080) ?x12082) ?x12084) ?x12086) ?x12088) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x10994 (* 2.0 l_0_6_90)))
 (let ((?x12418 (* ?x10994 l_0_6_93)))
 (let ((?x10991 (* 2.0 l_0_6_89)))
 (let ((?x12416 (* ?x10991 l_0_6_92)))
 (let ((?x10988 (* 2.0 l_0_6_88)))
 (let ((?x12414 (* ?x10988 l_0_6_91)))
 (let ((?x10810 (* 2.0 l_0_6_87)))
 (let ((?x10811 (* ?x10810 l_0_6_92)))
 (let ((?x10807 (* 2.0 l_0_6_86)))
 (let ((?x10808 (* ?x10807 l_0_6_91)))
 (let ((?x10667 (* 2.0 l_0_6_69)))
 (let ((?x12411 (* ?x10667 l_0_6_72)))
 (let ((?x10664 (* 2.0 l_0_6_68)))
 (let ((?x12409 (* ?x10664 l_0_6_71)))
 (let ((?x10661 (* 2.0 l_0_6_67)))
 (let ((?x12407 (* ?x10661 l_0_6_70)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x10805 (* ?x10658 l_0_6_71)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x10803 (* ?x10655 l_0_6_70)))
 (let ((?x11290 (* 2.0 l_0_6_3)))
 (let ((?x11291 (* ?x11290 l_0_6_5)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11288 (* ?x10932 l_0_6_26)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11286 (* ?x10929 l_0_6_25)))
 (let ((?x11283 (* 2.0 l_0_6_2)))
 (let ((?x11284 (* ?x11283 l_0_6_4)))
 (let ((?x10156 (- (* (* (- 2.0) l_0_6_109) l_0_6_112) (* (* 2.0 l_0_6_110) l_0_6_113))))
 (let ((?x12568 (- (- ?x10156 (* (* 2.0 l_0_6_111) l_0_6_114)) (* (* 2.0 l_0_6_130) l_0_6_133))))
 (let ((?x12572 (- (- ?x12568 (* (* 2.0 l_0_6_131) l_0_6_134)) (* (* 2.0 l_0_6_132) l_0_6_135))))
 (let ((?x12578 (- (+ (- (- (+ ?x12572 ?x11284) ?x11286) ?x11288) ?x11291) (* (* 2.0 l_0_6_44) l_0_6_46))))
 (let ((?x12583 (- (+ (+ (- ?x12578 (* (* 2.0 l_0_6_45) l_0_6_47)) ?x10803) ?x10805) ?x12407)))
 (let ((?x12590 (+ (+ (+ (- (- (- (- ?x12583 ?x12409) ?x12411) ?x10808) ?x10811) ?x12414) ?x12416) ?x12418)))
 (= ?x12590 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11290 (* 2.0 l_0_6_3)))
 (let ((?x11364 (* ?x11290 l_0_6_8)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11361 (* ?x10932 l_0_6_29)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11358 (* ?x10929 l_0_6_28)))
 (let ((?x11283 (* 2.0 l_0_6_2)))
 (let ((?x11356 (* ?x11283 l_0_6_7)))
 (let ((?x12644 (* l_0_6_136 l_0_6_136)))
 (let ((?x12642 (* l_0_6_135 l_0_6_135)))
 (let ((?x12640 (* l_0_6_134 l_0_6_134)))
 (let ((?x12638 (* l_0_6_133 l_0_6_133)))
 (let ((?x12636 (* l_0_6_115 l_0_6_115)))
 (let ((?x12634 (* l_0_6_114 l_0_6_114)))
 (let ((?x12635 (- (- (* (- l_0_6_112) l_0_6_112) (* l_0_6_113 l_0_6_113)) ?x12634)))
 (let ((?x12647 (- (+ (- (- (- (- (- ?x12635 ?x12636) ?x12638) ?x12640) ?x12642) ?x12644) ?x11356) ?x11358)))
 (let ((?x12653 (- (- (+ (- ?x12647 ?x11361) ?x11364) (* (* 2.0 l_0_6_44) l_0_6_49)) (* (* 2.0 l_0_6_45) l_0_6_50))))
 (let ((?x12659 (- (- ?x12653 (* (* 1.0 l_0_6_70) l_0_6_70)) (* (* 1.0 l_0_6_71) l_0_6_71))))
 (let ((?x12665 (- (- ?x12659 (* (* 1.0 l_0_6_72) l_0_6_72)) (* (* 1.0 l_0_6_73) l_0_6_73))))
 (let ((?x12669 (+ (+ ?x12665 (* 1.0 (* l_0_6_91 l_0_6_91))) (* 1.0 (* l_0_6_92 l_0_6_92)))))
 (let ((?x12673 (+ (+ ?x12669 (* 1.0 (* l_0_6_93 l_0_6_93))) (* 1.0 (* l_0_6_94 l_0_6_94)))))
 (= ?x12673 0.0)))))))))))))))))))))))
(assert
 (let ((?x11072 (* 2.0 l_0_6_73)))
 (let ((?x12033 (* ?x11072 l_0_6_82)))
 (let ((?x11069 (* 2.0 l_0_6_72)))
 (let ((?x12031 (* ?x11069 l_0_6_81)))
 (let ((?x11066 (* 2.0 l_0_6_71)))
 (let ((?x12029 (* ?x11066 l_0_6_80)))
 (let ((?x11063 (* 2.0 l_0_6_70)))
 (let ((?x12027 (* ?x11063 l_0_6_79)))
 (let ((?x10932 (* 2.0 l_0_6_24)))
 (let ((?x11519 (* ?x10932 l_0_6_38)))
 (let ((?x10929 (* 2.0 l_0_6_23)))
 (let ((?x11517 (* ?x10929 l_0_6_37)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11515 (* ?x11514 l_0_6_3)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11512 (* ?x11511 l_0_6_2)))
 (let ((?x11187 (* 2.0 l_0_6_103)))
 (let ((?x12009 (* ?x11187 l_0_6_94)))
 (let ((?x10626 (* 2.0 l_0_6_102)))
 (let ((?x3955 (* ?x10626 l_0_6_93)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x6974 (* ?x10621 l_0_6_92)))
 (let ((?x10618 (* 2.0 l_0_6_100)))
 (let ((?x7514 (* ?x10618 l_0_6_91)))
 (let ((?x10215 (- (+ (+ (+ ?x7514 ?x6974) ?x3955) ?x12009) (* (* 2.0 l_0_6_112) l_0_6_121))))
 (let ((?x7658 (- (- ?x10215 (* (* 2.0 l_0_6_113) l_0_6_122)) (* (* 2.0 l_0_6_114) l_0_6_123))))
 (let ((?x12698 (- (- ?x7658 (* (* 2.0 l_0_6_115) l_0_6_124)) (* (* 2.0 l_0_6_133) l_0_6_142))))
 (let ((?x12702 (- (- ?x12698 (* (* 2.0 l_0_6_134) l_0_6_143)) (* (* 2.0 l_0_6_135) l_0_6_144))))
 (let ((?x12707 (- (+ (+ (- ?x12702 (* (* 2.0 l_0_6_136) l_0_6_145)) ?x11512) ?x11515) ?x11517)))
 (let ((?x12712 (- (- (- ?x12707 ?x11519) (* (* 2.0 l_0_6_44) l_0_6_58)) (* (* 2.0 l_0_6_45) l_0_6_59))))
 (= (- (- (- (- ?x12712 ?x12027) ?x12029) ?x12031) ?x12033) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x10994 (* 2.0 l_0_6_90)))
 (let ((?x12418 (* ?x10994 l_0_6_93)))
 (let ((?x10991 (* 2.0 l_0_6_89)))
 (let ((?x12416 (* ?x10991 l_0_6_92)))
 (let ((?x10988 (* 2.0 l_0_6_88)))
 (let ((?x12414 (* ?x10988 l_0_6_91)))
 (let ((?x10667 (* 2.0 l_0_6_69)))
 (let ((?x12411 (* ?x10667 l_0_6_72)))
 (let ((?x10664 (* 2.0 l_0_6_68)))
 (let ((?x12409 (* ?x10664 l_0_6_71)))
 (let ((?x10661 (* 2.0 l_0_6_67)))
 (let ((?x12407 (* ?x10661 l_0_6_70)))
 (let ((?x11558 (* l_0_6_6 l_0_6_6)))
 (let ((?x6142 (* l_0_6_5 l_0_6_5)))
 (let ((?x12752 (* l_0_6_48 l_0_6_48)))
 (let ((?x12750 (* l_0_6_47 l_0_6_47)))
 (let ((?x12748 (* l_0_6_46 l_0_6_46)))
 (let ((?x2923 (* l_0_6_4 l_0_6_4)))
 (let ((?x9071 (* l_0_6_27 l_0_6_27)))
 (let ((?x12114 (+ (- (- (* (- l_0_6_25) l_0_6_25) (* l_0_6_26 l_0_6_26)) ?x9071) ?x2923)))
 (let ((?x12757 (+ (+ (+ (+ (- (- (- ?x12114 ?x12748) ?x12750) ?x12752) ?x6142) ?x11558) ?x12407) ?x12409)))
 (= (- (- (- (+ ?x12757 ?x12411) ?x12414) ?x12416) ?x12418) 0.0)))))))))))))))))))))))
(assert
 (let ((?x12471 (* l_0_6_94 l_0_6_94)))
 (let ((?x12469 (* l_0_6_93 l_0_6_93)))
 (let ((?x12467 (* l_0_6_92 l_0_6_92)))
 (let ((?x12465 (* l_0_6_91 l_0_6_91)))
 (let ((?x12461 (* l_0_6_73 l_0_6_73)))
 (let ((?x12459 (* l_0_6_72 l_0_6_72)))
 (let ((?x12457 (* l_0_6_71 l_0_6_71)))
 (let ((?x12455 (* l_0_6_70 l_0_6_70)))
 (let ((?x11606 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11603 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11591 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x10977 (* 2.0 l_0_6_27)))
 (let ((?x11587 (* ?x10977 l_0_6_30)))
 (let ((?x10974 (* 2.0 l_0_6_26)))
 (let ((?x11584 (* ?x10974 l_0_6_29)))
 (let ((?x12122 (+ (- (- (* (* (- 2.0) l_0_6_25) l_0_6_28) ?x11584) ?x11587) ?x11591)))
 (let ((?x12775 (- (- ?x12122 (* (* 2.0 l_0_6_46) l_0_6_49)) (* (* 2.0 l_0_6_47) l_0_6_50))))
 (let ((?x12780 (+ (+ (+ (- ?x12775 (* (* 2.0 l_0_6_48) l_0_6_51)) ?x11603) ?x11606) ?x12455)))
 (let ((?x12787 (- (- (- (- (+ (+ (+ ?x12780 ?x12457) ?x12459) ?x12461) ?x12465) ?x12467) ?x12469) ?x12471)))
 (= ?x12787 0.0)))))))))))))))))))))
(assert
 (let ((?x11739 (* l_0_6_9 l_0_6_9)))
 (let ((?x11737 (* l_0_6_8 l_0_6_8)))
 (let ((?x11735 (* l_0_6_7 l_0_6_7)))
 (let ((?x10317 (* l_0_6_52 l_0_6_52)))
 (let ((?x10316 (* l_0_6_51 l_0_6_51)))
 (let ((?x5186 (* l_0_6_50 l_0_6_50)))
 (let ((?x10342 (* l_0_6_49 l_0_6_49)))
 (let ((?x11721 (* l_0_6_31 l_0_6_31)))
 (let ((?x11718 (* l_0_6_30 l_0_6_30)))
 (let ((?x11715 (* l_0_6_29 l_0_6_29)))
 (let ((?x12143 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_28 l_0_6_28)) ?x11715) ?x11718)))
 (let ((?x12144 (- ?x12143 ?x11721)))
 (let ((?x12802 (+ (+ (+ (- (- (- (- ?x12144 ?x10342) ?x5186) ?x10316) ?x10317) ?x11735) ?x11737) ?x11739)))
 (= ?x12802 0.0)))))))))))))))
(assert
 (let ((?x11057 (* 2.0 l_0_6_31)))
 (let ((?x11836 (* ?x11057 l_0_6_40)))
 (let ((?x11054 (* 2.0 l_0_6_30)))
 (let ((?x11834 (* ?x11054 l_0_6_39)))
 (let ((?x11051 (* 2.0 l_0_6_29)))
 (let ((?x11832 (* ?x11051 l_0_6_38)))
 (let ((?x11048 (* 2.0 l_0_6_28)))
 (let ((?x11830 (* ?x11048 l_0_6_37)))
 (let ((?x11670 (* 2.0 l_0_6_18)))
 (let ((?x11828 (* ?x11670 l_0_6_9)))
 (let ((?x11514 (* 2.0 l_0_6_17)))
 (let ((?x11826 (* ?x11514 l_0_6_8)))
 (let ((?x11511 (* 2.0 l_0_6_16)))
 (let ((?x11824 (* ?x11511 l_0_6_7)))
 (let ((?x11026 (* 2.0 l_0_6_10)))
 (let ((?x12154 (* ?x11026 l_0_6_19)))
 (let ((?x12161 (- (- (- (- (+ (+ (+ ?x12154 ?x11824) ?x11826) ?x11828) ?x11830) ?x11832) ?x11834) ?x11836)))
 (let ((?x12814 (- (- ?x12161 (* (* 2.0 l_0_6_49) l_0_6_58)) (* (* 2.0 l_0_6_50) l_0_6_59))))
 (let ((?x12818 (- (- ?x12814 (* (* 2.0 l_0_6_51) l_0_6_60)) (* (* 2.0 l_0_6_52) l_0_6_61))))
 (= ?x12818 0.0)))))))))))))))))))))
(assert
 (let ((?x12842 (* l_0_6_63 l_0_6_63)))
 (let ((?x12840 (* l_0_6_62 l_0_6_62)))
 (let ((?x12838 (* l_0_6_61 l_0_6_61)))
 (let ((?x12836 (* l_0_6_60 l_0_6_60)))
 (let ((?x12834 (* l_0_6_59 l_0_6_59)))
 (let ((?x12832 (* l_0_6_58 l_0_6_58)))
 (let ((?x11934 (* l_0_6_42 l_0_6_42)))
 (let ((?x11932 (* l_0_6_41 l_0_6_41)))
 (let ((?x11930 (* l_0_6_40 l_0_6_40)))
 (let ((?x11928 (* l_0_6_39 l_0_6_39)))
 (let ((?x11926 (* l_0_6_38 l_0_6_38)))
 (let ((?x11924 (* l_0_6_37 l_0_6_37)))
 (let ((?x11922 (* l_0_6_21 l_0_6_21)))
 (let ((?x11920 (* l_0_6_20 l_0_6_20)))
 (let ((?x11918 (* l_0_6_19 l_0_6_19)))
 (let ((?x11916 (* l_0_6_18 l_0_6_18)))
 (let ((?x12201 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x11916) ?x11918)))
 (let ((?x12208 (- (- (- (- (- (+ (+ ?x12201 ?x11920) ?x11922) ?x11924) ?x11926) ?x11928) ?x11930) ?x11932)))
 (let ((?x12209 (- ?x12208 ?x11934)))
 (= (- (- (- (- (- (- ?x12209 ?x12832) ?x12834) ?x12836) ?x12838) ?x12840) ?x12842) 0.0)))))))))))))))))))))
(assert
 (let ((?x10747 (* l_0_6_87 l_0_6_87)))
 (let ((?x10810 (* 2.0 l_0_6_87)))
 (let ((?x12283 (* ?x10810 l_0_6_89)))
 (let ((?x10744 (* l_0_6_86 l_0_6_86)))
 (let ((?x10807 (* 2.0 l_0_6_86)))
 (let ((?x12281 (* ?x10807 l_0_6_88)))
 (let ((?x1415 (* l_0_6_66 l_0_6_66)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x12277 (* ?x10658 l_0_6_68)))
 (let ((?x10760 (* l_0_6_65 l_0_6_65)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x12275 (* ?x10655 l_0_6_67)))
 (let ((?x12860 (- (* (* (- 2.0) l_0_6_107) l_0_6_109) (* (* 2.0 l_0_6_108) l_0_6_110))))
 (let ((?x12864 (- (- ?x12860 (* (* 2.0 l_0_6_128) l_0_6_130)) (* (* 2.0 l_0_6_129) l_0_6_131))))
 (let ((?x12871 (+ (- (+ (+ (- (+ (- ?x12864 ?x12275) ?x10760) ?x12277) ?x1415) ?x12281) ?x10744) ?x12283)))
 (= (- ?x12871 ?x10747) 0.0)))))))))))))))))
(assert
 (let ((?x10810 (* 2.0 l_0_6_87)))
 (let ((?x12283 (* ?x10810 l_0_6_89)))
 (let ((?x10807 (* 2.0 l_0_6_86)))
 (let ((?x12281 (* ?x10807 l_0_6_88)))
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x12277 (* ?x10658 l_0_6_68)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x12275 (* ?x10655 l_0_6_67)))
 (let ((?x12904 (* l_0_6_132 l_0_6_132)))
 (let ((?x12902 (* l_0_6_131 l_0_6_131)))
 (let ((?x12900 (* l_0_6_130 l_0_6_130)))
 (let ((?x12898 (* l_0_6_111 l_0_6_111)))
 (let ((?x12899 (- (- (* (- l_0_6_109) l_0_6_109) (* l_0_6_110 l_0_6_110)) ?x12898)))
 (let ((?x12910 (- (+ (+ (- (- (- ?x12899 ?x12900) ?x12902) ?x12904) ?x12275) ?x12277) (* (* 1.0 l_0_6_67) l_0_6_67))))
 (let ((?x12916 (- (- ?x12910 (* (* 1.0 l_0_6_68) l_0_6_68)) (* (* 1.0 l_0_6_69) l_0_6_69))))
 (let ((?x12922 (+ (+ (- (- ?x12916 ?x12281) ?x12283) (* 1.0 (* l_0_6_88 l_0_6_88))) (* 1.0 (* l_0_6_89 l_0_6_89)))))
 (= (+ ?x12922 (* 1.0 (* l_0_6_90 l_0_6_90))) 0.0))))))))))))))))))
(assert
 (let ((?x12380 (* l_0_6_90 l_0_6_90)))
 (let ((?x12378 (* l_0_6_89 l_0_6_89)))
 (let ((?x12376 (* l_0_6_88 l_0_6_88)))
 (let ((?x12373 (* l_0_6_69 l_0_6_69)))
 (let ((?x10423 (- (+ (+ (* l_0_6_67 l_0_6_67) (* l_0_6_68 l_0_6_68)) ?x12373) ?x12376)))
 (= (- (- ?x10423 ?x12378) ?x12380) 0.0)))))))
(assert
 (let ((?x10658 (* 2.0 l_0_6_66)))
 (let ((?x10659 (* ?x10658 l_0_6_80)))
 (let ((?x10655 (* 2.0 l_0_6_65)))
 (let ((?x10656 (* ?x10655 l_0_6_79)))
 (let ((?x10621 (* 2.0 l_0_6_101)))
 (let ((?x10622 (* ?x10621 l_0_6_87)))
 (let ((?x10618 (* 2.0 l_0_6_100)))
 (let ((?x9992 (* ?x10618 l_0_6_86)))
 (let ((?x12960 (- (- (+ ?x9992 ?x10622) (* (* 2.0 l_0_6_107) l_0_6_121)) (* (* 2.0 l_0_6_108) l_0_6_122))))
 (let ((?x12964 (- (- ?x12960 (* (* 2.0 l_0_6_128) l_0_6_142)) (* (* 2.0 l_0_6_129) l_0_6_143))))
 (= (- (- ?x12964 ?x10656) ?x10659) 0.0))))))))))))
(assert
 (let ((?x13011 (* l_0_6_147 l_0_6_147)))
 (let ((?x13009 (* l_0_6_146 l_0_6_146)))
 (let ((?x13007 (* l_0_6_145 l_0_6_145)))
 (let ((?x13005 (* l_0_6_144 l_0_6_144)))
 (let ((?x13003 (* l_0_6_143 l_0_6_143)))
 (let ((?x13001 (* l_0_6_142 l_0_6_142)))
 (let ((?x12999 (* l_0_6_126 l_0_6_126)))
 (let ((?x12997 (* l_0_6_125 l_0_6_125)))
 (let ((?x12995 (* l_0_6_124 l_0_6_124)))
 (let ((?x12993 (* l_0_6_123 l_0_6_123)))
 (let ((?x12991 (* l_0_6_122 l_0_6_122)))
 (let ((?x12989 (* l_0_6_121 l_0_6_121)))
 (let ((?x12980 (+ (* 1.0 (* l_0_6_100 l_0_6_100)) (* 1.0 (* l_0_6_101 l_0_6_101)))))
 (let ((?x12984 (+ (+ ?x12980 (* 1.0 (* l_0_6_102 l_0_6_102))) (* 1.0 (* l_0_6_103 l_0_6_103)))))
 (let ((?x12988 (+ (+ ?x12984 (* 1.0 (* l_0_6_104 l_0_6_104))) (* 1.0 (* l_0_6_105 l_0_6_105)))))
 (let ((?x13002 (- (- (- (- (- (- (- ?x12988 ?x12989) ?x12991) ?x12993) ?x12995) ?x12997) ?x12999) ?x13001)))
 (let ((?x13015 (- (- (- (- (- (- ?x13002 ?x13003) ?x13005) ?x13007) ?x13009) ?x13011) (* (* 1.0 l_0_6_79) l_0_6_79))))
 (let ((?x13021 (- (- ?x13015 (* (* 1.0 l_0_6_80) l_0_6_80)) (* (* 1.0 l_0_6_81) l_0_6_81))))
 (let ((?x13027 (- (- ?x13021 (* (* 1.0 l_0_6_82) l_0_6_82)) (* (* 1.0 l_0_6_83) l_0_6_83))))
 (= (- ?x13027 (* (* 1.0 l_0_6_84) l_0_6_84)) 0.0)))))))))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_22 0.0))
(assert
 (>= l_0_6_24 0.0))
(assert
 (>= l_0_6_27 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_42 0.0))
(assert
 (>= l_0_6_43 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_52 0.0))
(assert
 (>= l_0_6_57 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_64 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_69 0.0))
(assert
 (>= l_0_6_73 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_84 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_87 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_94 0.0))
(assert
 (>= l_0_6_99 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_106 0.0))
(assert
 (>= l_0_6_108 0.0))
(assert
 (>= l_0_6_111 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_120 0.0))
(assert
 (>= l_0_6_126 0.0))
(assert
 (>= l_0_6_127 0.0))
(assert
 (>= l_0_6_129 0.0))
(assert
 (>= l_0_6_132 0.0))
(assert
 (>= l_0_6_136 0.0))
(assert
 (>= l_0_6_141 0.0))
(assert
 (>= l_0_6_147 0.0))
(check-sat)
(get-model)