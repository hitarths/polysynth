(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_2_46 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_47 () Real)
(declare-fun l_0_2_48 () Real)
(declare-fun l_0_2_50 () Real)
(declare-fun l_0_2_49 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_53 () Real)
(declare-fun l_0_2_52 () Real)
(declare-fun l_0_2_57 () Real)
(declare-fun l_0_2_56 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_38 () Real)
(declare-fun l_0_2_37 () Real)
(declare-fun l_0_2_42 () Real)
(declare-fun l_0_2_41 () Real)
(declare-fun l_0_2_51 () Real)
(declare-fun l_0_2_54 () Real)
(declare-fun l_0_2_58 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_39 () Real)
(declare-fun l_0_2_43 () Real)
(declare-fun l_0_2_40 () Real)
(declare-fun l_0_2_44 () Real)
(declare-fun l_0_2_45 () Real)
(declare-fun l_0_2_59 () Real)
(declare-fun l_0_2_55 () Real)
(declare-fun l_0_2_60 () Real)
(declare-fun l_0_3_76 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_85 () Real)
(declare-fun l_0_3_84 () Real)
(declare-fun l_0_3_83 () Real)
(declare-fun l_0_3_82 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_3_79 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_3_86 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_77 () Real)
(declare-fun l_0_3_78 () Real)
(declare-fun l_0_3_80 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_87 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_81 () Real)
(declare-fun l_0_3_88 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_89 () Real)
(declare-fun l_0_3_90 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_105 () Real)
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (- 1.0 (* l_0_2_46 l_0_2_46)) 0.0))
(assert
 (let ((?x522 (* l_0_2_16 l_0_2_16)))
 (let ((?x521 (* l_0_2_1 l_0_2_1)))
 (let ((?x523 (- ?x521 ?x522)))
 (= ?x523 0.0)))))
(assert
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x532 (* ?x531 l_0_2_17)))
 (let ((?x529 (* 2.0 l_0_2_1)))
 (let ((?x530 (* ?x529 l_0_2_2)))
 (= (- ?x530 ?x532) 0.0))))))
(assert
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x546 (* ?x531 l_0_2_19)))
 (let ((?x529 (* 2.0 l_0_2_1)))
 (let ((?x545 (* ?x529 l_0_2_4)))
 (let ((?x547 (- ?x545 ?x546)))
 (= ?x547 0.0)))))))
(assert
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x559 (* ?x531 l_0_2_22)))
 (let ((?x560 (- (* (* 2.0 l_0_2_1) l_0_2_7) ?x559)))
 (= ?x560 0.0)))))
(assert
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x572 (* ?x531 l_0_2_26)))
 (let ((?x529 (* 2.0 l_0_2_1)))
 (let ((?x571 (* ?x529 l_0_2_11)))
 (= (- ?x571 ?x572) 0.0))))))
(assert
 (let ((?x590 (* l_0_2_3 l_0_2_3)))
 (let ((?x588 (* l_0_2_2 l_0_2_2)))
 (let ((?x591 (+ (+ (- (* (- l_0_2_17) l_0_2_17) (* l_0_2_18 l_0_2_18)) ?x588) ?x590)))
 (= ?x591 0.0)))))
(assert
 (let ((?x611 (* 2.0 l_0_2_3)))
 (let ((?x612 (* ?x611 l_0_2_5)))
 (let ((?x608 (* 2.0 l_0_2_2)))
 (let ((?x609 (* ?x608 l_0_2_4)))
 (let ((?x605 (* 2.0 l_0_2_18)))
 (let ((?x606 (* ?x605 l_0_2_20)))
 (let ((?x607 (- (* (* (- 2.0) l_0_2_17) l_0_2_19) ?x606)))
 (= (+ (+ ?x607 ?x609) ?x612) 0.0)))))))))
(assert
 (let ((?x611 (* 2.0 l_0_2_3)))
 (let ((?x635 (* ?x611 l_0_2_8)))
 (let ((?x608 (* 2.0 l_0_2_2)))
 (let ((?x633 (* ?x608 l_0_2_7)))
 (let ((?x605 (* 2.0 l_0_2_18)))
 (let ((?x626 (* ?x605 l_0_2_23)))
 (let ((?x627 (- (* (* (- 2.0) l_0_2_17) l_0_2_22) ?x626)))
 (= (+ (+ ?x627 ?x633) ?x635) 0.0)))))))))
(assert
 (let ((?x605 (* 2.0 l_0_2_18)))
 (let ((?x661 (* ?x605 l_0_2_27)))
 (let ((?x658 (* 2.0 l_0_2_17)))
 (let ((?x659 (* ?x658 l_0_2_26)))
 (let ((?x650 (* 2.0 l_0_2_12)))
 (let ((?x656 (* ?x650 l_0_2_3)))
 (let ((?x647 (* 2.0 l_0_2_11)))
 (let ((?x649 (* ?x647 l_0_2_2)))
 (= (- (- (+ ?x649 ?x656) ?x659) ?x661) 0.0))))))))))
(assert
 (let ((?x692 (* l_0_2_6 l_0_2_6)))
 (let ((?x690 (* l_0_2_5 l_0_2_5)))
 (let ((?x688 (* l_0_2_4 l_0_2_4)))
 (let ((?x686 (* l_0_2_21 l_0_2_21)))
 (let ((?x687 (- (- (* (- l_0_2_19) l_0_2_19) (* l_0_2_20 l_0_2_20)) ?x686)))
 (= (+ (+ (+ ?x687 ?x688) ?x690) ?x692) 0.0)))))))
(assert
 (let ((?x724 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x721 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x718 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x714 (* 2.0 l_0_2_21)))
 (let ((?x715 (* ?x714 l_0_2_24)))
 (let ((?x711 (* 2.0 l_0_2_20)))
 (let ((?x712 (* ?x711 l_0_2_23)))
 (let ((?x716 (- (- (* (* (- 2.0) l_0_2_19) l_0_2_22) ?x712) ?x715)))
 (= (+ (+ (+ ?x716 ?x718) ?x721) ?x724) 0.0))))))))))
(assert
 (let ((?x714 (* 2.0 l_0_2_21)))
 (let ((?x761 (* ?x714 l_0_2_28)))
 (let ((?x711 (* 2.0 l_0_2_20)))
 (let ((?x759 (* ?x711 l_0_2_27)))
 (let ((?x756 (* 2.0 l_0_2_19)))
 (let ((?x757 (* ?x756 l_0_2_26)))
 (let ((?x747 (* 2.0 l_0_2_13)))
 (let ((?x754 (* ?x747 l_0_2_6)))
 (let ((?x650 (* 2.0 l_0_2_12)))
 (let ((?x744 (* ?x650 l_0_2_5)))
 (let ((?x758 (- (+ (+ (* (* 2.0 l_0_2_11) l_0_2_4) ?x744) ?x754) ?x757)))
 (= (- (- ?x758 ?x759) ?x761) 0.0)))))))))))))
(assert
 (let ((?x803 (* l_0_2_9 l_0_2_9)))
 (let ((?x801 (* l_0_2_8 l_0_2_8)))
 (let ((?x799 (* l_0_2_7 l_0_2_7)))
 (let ((?x797 (* l_0_2_25 l_0_2_25)))
 (let ((?x795 (* l_0_2_24 l_0_2_24)))
 (let ((?x793 (* l_0_2_23 l_0_2_23)))
 (let ((?x796 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_22 l_0_2_22)) ?x793) ?x795)))
 (let ((?x798 (- ?x796 ?x797)))
 (= (+ (+ (+ ?x798 ?x799) ?x801) ?x803) 0.0))))))))))
(assert
 (let ((?x837 (* (* 2.0 l_0_2_25) l_0_2_29)))
 (let ((?x834 (* (* 2.0 l_0_2_24) l_0_2_28)))
 (let ((?x831 (* (* 2.0 l_0_2_23) l_0_2_27)))
 (let ((?x828 (* (* 2.0 l_0_2_22) l_0_2_26)))
 (let ((?x747 (* 2.0 l_0_2_13)))
 (let ((?x825 (* ?x747 l_0_2_9)))
 (let ((?x650 (* 2.0 l_0_2_12)))
 (let ((?x823 (* ?x650 l_0_2_8)))
 (let ((?x647 (* 2.0 l_0_2_11)))
 (let ((?x821 (* ?x647 l_0_2_7)))
 (let ((?x826 (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x821) ?x823) ?x825)))
 (= (- (- (- (- ?x826 ?x828) ?x831) ?x834) ?x837) 0.0)))))))))))))
(assert
 (let ((?x891 (* l_0_2_30 l_0_2_30)))
 (let ((?x889 (* l_0_2_29 l_0_2_29)))
 (let ((?x887 (* l_0_2_28 l_0_2_28)))
 (let ((?x885 (* l_0_2_27 l_0_2_27)))
 (let ((?x883 (* l_0_2_26 l_0_2_26)))
 (let ((?x881 (* l_0_2_15 l_0_2_15)))
 (let ((?x879 (* l_0_2_14 l_0_2_14)))
 (let ((?x877 (* l_0_2_13 l_0_2_13)))
 (let ((?x880 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x877) ?x879)))
 (= (- (- (- (- (- (+ ?x880 ?x881) ?x883) ?x885) ?x887) ?x889) ?x891) 0.0)))))))))))
(assert
 (let ((?x521 (* l_0_2_1 l_0_2_1)))
 (let ((?x912 (* 3.0 ?x521)))
 (let ((?x918 (- (- ?x912 (* (* 3.0 l_0_2_16) l_0_2_16)) (* (* 2.0 l_0_2_46) l_0_2_47))))
 (= ?x918 0.0)))))
(assert
 (let ((?x941 (* l_0_2_48 l_0_2_48)))
 (let ((?x939 (* l_0_2_47 l_0_2_47)))
 (let ((?x938 (- (* (* 6.0 l_0_2_1) l_0_2_2) (* (* 6.0 l_0_2_16) l_0_2_17))))
 (= (- (- ?x938 ?x939) ?x941) 0.0)))))
(assert
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x532 (* ?x531 l_0_2_17)))
 (let ((?x529 (* 2.0 l_0_2_1)))
 (let ((?x530 (* ?x529 l_0_2_2)))
 (let ((?x962 (- (- (+ ?x530 (* (* 6.0 l_0_2_1) l_0_2_4)) ?x532) (* (* 6.0 l_0_2_16) l_0_2_19))))
 (let ((?x968 (- (+ ?x962 (* (* 2.0 l_0_2_31) l_0_2_32)) (* (* 2.0 l_0_2_47) l_0_2_49))))
 (= (- ?x968 (* (* 2.0 l_0_2_48) l_0_2_50)) 0.0))))))))
(assert
 (let ((?x1000 (- (* (* 6.0 l_0_2_1) l_0_2_7) (* (* 6.0 l_0_2_16) l_0_2_22))))
 (let ((?x1004 (- (- ?x1000 (* (* 2.0 l_0_2_47) l_0_2_52)) (* (* 2.0 l_0_2_48) l_0_2_53))))
 (= ?x1004 0.0))))
(assert
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x532 (* ?x531 l_0_2_17)))
 (let ((?x529 (* 2.0 l_0_2_1)))
 (let ((?x530 (* ?x529 l_0_2_2)))
 (let ((?x1029 (- (+ (- (* (* 6.0 l_0_2_1) l_0_2_11) ?x530) ?x532) (* (* 6.0 l_0_2_16) l_0_2_26))))
 (let ((?x1033 (- (- ?x1029 (* (* 2.0 l_0_2_47) l_0_2_56)) (* (* 2.0 l_0_2_48) l_0_2_57))))
 (= ?x1033 0.0))))))))
(assert
 (let ((?x1065 (- (* (* (- 3.0) l_0_2_17) l_0_2_17) (* (* 3.0 l_0_2_18) l_0_2_18))))
 (let ((?x1069 (+ (+ ?x1065 (* 3.0 (* l_0_2_2 l_0_2_2))) (* 3.0 (* l_0_2_3 l_0_2_3)))))
 (= ?x1069 0.0))))
(assert
 (let ((?x1099 (* l_0_2_33 l_0_2_33)))
 (let ((?x1097 (* l_0_2_32 l_0_2_32)))
 (let ((?x590 (* l_0_2_3 l_0_2_3)))
 (let ((?x588 (* l_0_2_2 l_0_2_2)))
 (let ((?x586 (* l_0_2_18 l_0_2_18)))
 (let ((?x1087 (- (- (* (* (- 6.0) l_0_2_17) l_0_2_19) (* l_0_2_17 l_0_2_17)) (* (* 6.0 l_0_2_18) l_0_2_20))))
 (let ((?x1095 (+ (+ (+ (- ?x1087 ?x586) (* (* 6.0 l_0_2_2) l_0_2_4)) ?x588) (* (* 6.0 l_0_2_3) l_0_2_5))))
 (= (+ (+ (+ ?x1095 ?x590) ?x1097) ?x1099) 0.0)))))))))
(assert
 (let ((?x1114 (- (* (* (- 6.0) l_0_2_17) l_0_2_22) (* (* 6.0 l_0_2_18) l_0_2_23))))
 (let ((?x1125 (+ (+ ?x1114 (* (* 6.0 l_0_2_2) l_0_2_7)) (* (* 6.0 l_0_2_3) l_0_2_8))))
 (= ?x1125 0.0))))
(assert
 (let ((?x590 (* l_0_2_3 l_0_2_3)))
 (let ((?x588 (* l_0_2_2 l_0_2_2)))
 (let ((?x586 (* l_0_2_18 l_0_2_18)))
 (let ((?x594 (* l_0_2_17 l_0_2_17)))
 (let ((?x1142 (+ (* (* 6.0 l_0_2_11) l_0_2_2) (* (* 6.0 l_0_2_12) l_0_2_3))))
 (let ((?x1148 (- (+ (- ?x1142 (* (* 6.0 l_0_2_17) l_0_2_26)) ?x594) (* (* 6.0 l_0_2_18) l_0_2_27))))
 (= (- (- (+ ?x1148 ?x586) ?x588) ?x590) 0.0))))))))
(assert
 (let ((?x611 (* 2.0 l_0_2_3)))
 (let ((?x612 (* ?x611 l_0_2_5)))
 (let ((?x608 (* 2.0 l_0_2_2)))
 (let ((?x609 (* ?x608 l_0_2_4)))
 (let ((?x605 (* 2.0 l_0_2_18)))
 (let ((?x606 (* ?x605 l_0_2_20)))
 (let ((?x607 (- (* (* (- 2.0) l_0_2_17) l_0_2_19) ?x606)))
 (let ((?x1179 (- (+ (- ?x607 (* (* 3.0 l_0_2_19) l_0_2_19)) ?x609) (* (* 3.0 l_0_2_20) l_0_2_20))))
 (let ((?x1186 (+ (+ (- ?x1179 (* (* 3.0 l_0_2_21) l_0_2_21)) ?x612) (* (* 2.0 l_0_2_32) l_0_2_34))))
 (let ((?x1191 (+ (+ ?x1186 (* (* 2.0 l_0_2_33) l_0_2_35)) (* 3.0 (* l_0_2_4 l_0_2_4)))))
 (let ((?x1195 (+ (+ ?x1191 (* 3.0 (* l_0_2_5 l_0_2_5))) (* 3.0 (* l_0_2_6 l_0_2_6)))))
 (= ?x1195 0.0)))))))))))))
(assert
 (let ((?x611 (* 2.0 l_0_2_3)))
 (let ((?x635 (* ?x611 l_0_2_8)))
 (let ((?x608 (* 2.0 l_0_2_2)))
 (let ((?x633 (* ?x608 l_0_2_7)))
 (let ((?x605 (* 2.0 l_0_2_18)))
 (let ((?x626 (* ?x605 l_0_2_23)))
 (let ((?x627 (- (* (* (- 2.0) l_0_2_17) l_0_2_22) ?x626)))
 (let ((?x1230 (- (+ (- ?x627 (* (* 6.0 l_0_2_19) l_0_2_22)) ?x633) (* (* 6.0 l_0_2_20) l_0_2_23))))
 (let ((?x1236 (+ (+ (- ?x1230 (* (* 6.0 l_0_2_21) l_0_2_24)) ?x635) (* (* 2.0 l_0_2_32) l_0_2_37))))
 (let ((?x1241 (+ (+ ?x1236 (* (* 2.0 l_0_2_33) l_0_2_38)) (* (* 6.0 l_0_2_4) l_0_2_7))))
 (let ((?x1247 (+ (+ ?x1241 (* (* 6.0 l_0_2_5) l_0_2_8)) (* (* 6.0 l_0_2_6) l_0_2_9))))
 (= ?x1247 0.0)))))))))))))
(assert
 (let ((?x611 (* 2.0 l_0_2_3)))
 (let ((?x612 (* ?x611 l_0_2_5)))
 (let ((?x608 (* 2.0 l_0_2_2)))
 (let ((?x609 (* ?x608 l_0_2_4)))
 (let ((?x605 (* 2.0 l_0_2_18)))
 (let ((?x661 (* ?x605 l_0_2_27)))
 (let ((?x606 (* ?x605 l_0_2_20)))
 (let ((?x658 (* 2.0 l_0_2_17)))
 (let ((?x659 (* ?x658 l_0_2_26)))
 (let ((?x650 (* 2.0 l_0_2_12)))
 (let ((?x656 (* ?x650 l_0_2_3)))
 (let ((?x647 (* 2.0 l_0_2_11)))
 (let ((?x649 (* ?x647 l_0_2_2)))
 (let ((?x1270 (+ (+ (+ ?x649 (* (* 6.0 l_0_2_11) l_0_2_4)) ?x656) (* (* 6.0 l_0_2_12) l_0_2_5))))
 (let ((?x1286 (- (+ (+ ?x1270 (* (* 6.0 l_0_2_13) l_0_2_6)) (* ?x658 l_0_2_19)) ?x659)))
 (let ((?x1291 (- (- (- (+ ?x1286 ?x606) ?x661) (* (* 6.0 l_0_2_19) l_0_2_26)) ?x609)))
 (let ((?x1295 (- (- ?x1291 (* (* 6.0 l_0_2_20) l_0_2_27)) (* (* 6.0 l_0_2_21) l_0_2_28))))
 (let ((?x1300 (+ (+ (- ?x1295 ?x612) (* (* 2.0 l_0_2_32) l_0_2_41)) (* (* 2.0 l_0_2_33) l_0_2_42))))
 (= ?x1300 0.0))))))))))))))))))))
(assert
 (let ((?x803 (* l_0_2_9 l_0_2_9)))
 (let ((?x1355 (* 3.0 ?x803)))
 (let ((?x801 (* l_0_2_8 l_0_2_8)))
 (let ((?x1353 (* 3.0 ?x801)))
 (let ((?x799 (* l_0_2_7 l_0_2_7)))
 (let ((?x1351 (* 3.0 ?x799)))
 (let ((?x790 (* l_0_2_10 l_0_2_10)))
 (let ((?x1338 (* 3.0 ?x790)))
 (let ((?x1344 (- (- ?x1338 (* (* 3.0 l_0_2_22) l_0_2_22)) (* (* 3.0 l_0_2_23) l_0_2_23))))
 (let ((?x1350 (- (- ?x1344 (* (* 3.0 l_0_2_24) l_0_2_24)) (* (* 3.0 l_0_2_25) l_0_2_25))))
 (= (+ (+ (+ ?x1350 ?x1351) ?x1353) ?x1355) 0.0))))))))))))
(assert
 (let ((?x611 (* 2.0 l_0_2_3)))
 (let ((?x635 (* ?x611 l_0_2_8)))
 (let ((?x608 (* 2.0 l_0_2_2)))
 (let ((?x633 (* ?x608 l_0_2_7)))
 (let ((?x605 (* 2.0 l_0_2_18)))
 (let ((?x626 (* ?x605 l_0_2_23)))
 (let ((?x1383 (+ (* (* 6.0 l_0_2_10) l_0_2_14) (* (* 6.0 l_0_2_11) l_0_2_7))))
 (let ((?x1387 (+ (+ ?x1383 (* (* 6.0 l_0_2_12) l_0_2_8)) (* (* 6.0 l_0_2_13) l_0_2_9))))
 (let ((?x1394 (- (- (+ (+ ?x1387 (* (* 2.0 l_0_2_17) l_0_2_22)) ?x626) ?x633) (* (* 6.0 l_0_2_22) l_0_2_26))))
 (let ((?x1400 (- (- ?x1394 (* (* 6.0 l_0_2_23) l_0_2_27)) (* (* 6.0 l_0_2_24) l_0_2_28))))
 (= (- (- ?x1400 (* (* 6.0 l_0_2_25) l_0_2_29)) ?x635) 0.0))))))))))))
(assert
 (let ((?x605 (* 2.0 l_0_2_18)))
 (let ((?x661 (* ?x605 l_0_2_27)))
 (let ((?x658 (* 2.0 l_0_2_17)))
 (let ((?x659 (* ?x658 l_0_2_26)))
 (let ((?x650 (* 2.0 l_0_2_12)))
 (let ((?x656 (* ?x650 l_0_2_3)))
 (let ((?x1441 (+ (* (* (- 2.0) l_0_2_11) l_0_2_2) (* 3.0 (* l_0_2_11 l_0_2_11)))))
 (let ((?x1446 (+ (+ (- ?x1441 ?x656) (* 3.0 (* l_0_2_12 l_0_2_12))) (* 3.0 (* l_0_2_13 l_0_2_13)))))
 (let ((?x1450 (+ (+ ?x1446 (* 3.0 (* l_0_2_14 l_0_2_14))) (* 3.0 (* l_0_2_15 l_0_2_15)))))
 (let ((?x1458 (- (- (+ (+ ?x1450 ?x659) ?x661) (* (* 3.0 l_0_2_26) l_0_2_26)) (* (* 3.0 l_0_2_27) l_0_2_27))))
 (let ((?x1464 (- (- ?x1458 (* (* 3.0 l_0_2_28) l_0_2_28)) (* (* 3.0 l_0_2_29) l_0_2_29))))
 (= (- ?x1464 (* (* 3.0 l_0_2_30) l_0_2_30)) 0.0)))))))))))))
(assert
 (let ((?x1508 (* l_0_2_31 l_0_2_31)))
 (let ((?x522 (* l_0_2_16 l_0_2_16)))
 (let ((?x521 (* l_0_2_1 l_0_2_1)))
 (let ((?x523 (- ?x521 ?x522)))
 (= (- (+ ?x523 ?x1508) (* (* 2.0 l_0_2_46) l_0_2_49)) 0.0))))))
(assert
 (let ((?x1527 (* l_0_2_51 l_0_2_51)))
 (let ((?x1525 (* l_0_2_50 l_0_2_50)))
 (let ((?x1523 (* l_0_2_49 l_0_2_49)))
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x546 (* ?x531 l_0_2_19)))
 (let ((?x529 (* 2.0 l_0_2_1)))
 (let ((?x545 (* ?x529 l_0_2_4)))
 (let ((?x547 (- ?x545 ?x546)))
 (let ((?x1528 (- (- (- (+ ?x547 (* (* 2.0 l_0_2_31) l_0_2_34)) ?x1523) ?x1525) ?x1527)))
 (= ?x1528 0.0)))))))))))
(assert
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x559 (* ?x531 l_0_2_22)))
 (let ((?x560 (- (* (* 2.0 l_0_2_1) l_0_2_7) ?x559)))
 (let ((?x1547 (- (+ ?x560 (* (* 2.0 l_0_2_31) l_0_2_37)) (* (* 2.0 l_0_2_49) l_0_2_52))))
 (let ((?x1553 (- (- ?x1547 (* (* 2.0 l_0_2_50) l_0_2_53)) (* (* 2.0 l_0_2_51) l_0_2_54))))
 (= ?x1553 0.0)))))))
(assert
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x572 (* ?x531 l_0_2_26)))
 (let ((?x546 (* ?x531 l_0_2_19)))
 (let ((?x529 (* 2.0 l_0_2_1)))
 (let ((?x545 (* ?x529 l_0_2_4)))
 (let ((?x571 (* ?x529 l_0_2_11)))
 (let ((?x1581 (+ (- (+ (- ?x571 ?x545) ?x546) ?x572) (* (* 2.0 l_0_2_31) l_0_2_41))))
 (let ((?x1585 (- (- ?x1581 (* (* 2.0 l_0_2_49) l_0_2_56)) (* (* 2.0 l_0_2_50) l_0_2_57))))
 (= (- ?x1585 (* (* 2.0 l_0_2_51) l_0_2_58)) 0.0))))))))))
(assert
 (let ((?x692 (* l_0_2_6 l_0_2_6)))
 (let ((?x690 (* l_0_2_5 l_0_2_5)))
 (let ((?x688 (* l_0_2_4 l_0_2_4)))
 (let ((?x1625 (* l_0_2_36 l_0_2_36)))
 (let ((?x1623 (* l_0_2_35 l_0_2_35)))
 (let ((?x1621 (* l_0_2_34 l_0_2_34)))
 (let ((?x686 (* l_0_2_21 l_0_2_21)))
 (let ((?x687 (- (- (* (- l_0_2_19) l_0_2_19) (* l_0_2_20 l_0_2_20)) ?x686)))
 (= (+ (+ (+ (+ (+ (+ ?x687 ?x1621) ?x1623) ?x1625) ?x688) ?x690) ?x692) 0.0))))))))))
(assert
 (let ((?x724 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x721 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x718 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x714 (* 2.0 l_0_2_21)))
 (let ((?x715 (* ?x714 l_0_2_24)))
 (let ((?x711 (* 2.0 l_0_2_20)))
 (let ((?x712 (* ?x711 l_0_2_23)))
 (let ((?x716 (- (- (* (* (- 2.0) l_0_2_19) l_0_2_22) ?x712) ?x715)))
 (let ((?x1641 (+ (+ ?x716 (* (* 2.0 l_0_2_34) l_0_2_37)) (* (* 2.0 l_0_2_35) l_0_2_38))))
 (let ((?x1647 (+ (+ (+ (+ ?x1641 (* (* 2.0 l_0_2_36) l_0_2_39)) ?x718) ?x721) ?x724)))
 (= ?x1647 0.0))))))))))))
(assert
 (let ((?x692 (* l_0_2_6 l_0_2_6)))
 (let ((?x690 (* l_0_2_5 l_0_2_5)))
 (let ((?x688 (* l_0_2_4 l_0_2_4)))
 (let ((?x686 (* l_0_2_21 l_0_2_21)))
 (let ((?x714 (* 2.0 l_0_2_21)))
 (let ((?x761 (* ?x714 l_0_2_28)))
 (let ((?x684 (* l_0_2_20 l_0_2_20)))
 (let ((?x711 (* 2.0 l_0_2_20)))
 (let ((?x759 (* ?x711 l_0_2_27)))
 (let ((?x696 (* l_0_2_19 l_0_2_19)))
 (let ((?x756 (* 2.0 l_0_2_19)))
 (let ((?x757 (* ?x756 l_0_2_26)))
 (let ((?x747 (* 2.0 l_0_2_13)))
 (let ((?x754 (* ?x747 l_0_2_6)))
 (let ((?x650 (* 2.0 l_0_2_12)))
 (let ((?x744 (* ?x650 l_0_2_5)))
 (let ((?x758 (- (+ (+ (* (* 2.0 l_0_2_11) l_0_2_4) ?x744) ?x754) ?x757)))
 (let ((?x1666 (+ (+ (- (+ (- (+ ?x758 ?x696) ?x759) ?x684) ?x761) ?x686) (* (* 2.0 l_0_2_34) l_0_2_41))))
 (let ((?x1670 (+ (+ ?x1666 (* (* 2.0 l_0_2_35) l_0_2_42)) (* (* 2.0 l_0_2_36) l_0_2_43))))
 (= (- (- (- ?x1670 ?x688) ?x690) ?x692) 0.0)))))))))))))))))))))
(assert
 (let ((?x803 (* l_0_2_9 l_0_2_9)))
 (let ((?x801 (* l_0_2_8 l_0_2_8)))
 (let ((?x799 (* l_0_2_7 l_0_2_7)))
 (let ((?x1701 (* l_0_2_40 l_0_2_40)))
 (let ((?x1699 (* l_0_2_39 l_0_2_39)))
 (let ((?x1697 (* l_0_2_38 l_0_2_38)))
 (let ((?x1695 (* l_0_2_37 l_0_2_37)))
 (let ((?x797 (* l_0_2_25 l_0_2_25)))
 (let ((?x795 (* l_0_2_24 l_0_2_24)))
 (let ((?x793 (* l_0_2_23 l_0_2_23)))
 (let ((?x796 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_22 l_0_2_22)) ?x793) ?x795)))
 (let ((?x798 (- ?x796 ?x797)))
 (let ((?x1705 (+ (+ (+ (+ (+ (+ (+ ?x798 ?x1695) ?x1697) ?x1699) ?x1701) ?x799) ?x801) ?x803)))
 (= ?x1705 0.0)))))))))))))))
(assert
 (let ((?x724 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x721 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x718 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x837 (* (* 2.0 l_0_2_25) l_0_2_29)))
 (let ((?x834 (* (* 2.0 l_0_2_24) l_0_2_28)))
 (let ((?x831 (* (* 2.0 l_0_2_23) l_0_2_27)))
 (let ((?x828 (* (* 2.0 l_0_2_22) l_0_2_26)))
 (let ((?x714 (* 2.0 l_0_2_21)))
 (let ((?x715 (* ?x714 l_0_2_24)))
 (let ((?x711 (* 2.0 l_0_2_20)))
 (let ((?x712 (* ?x711 l_0_2_23)))
 (let ((?x747 (* 2.0 l_0_2_13)))
 (let ((?x825 (* ?x747 l_0_2_9)))
 (let ((?x650 (* 2.0 l_0_2_12)))
 (let ((?x823 (* ?x650 l_0_2_8)))
 (let ((?x647 (* 2.0 l_0_2_11)))
 (let ((?x821 (* ?x647 l_0_2_7)))
 (let ((?x826 (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x821) ?x823) ?x825)))
 (let ((?x1713 (- (+ (+ (+ ?x826 (* (* 2.0 l_0_2_19) l_0_2_22)) ?x712) ?x715) ?x828)))
 (let ((?x1719 (+ (- (- (- ?x1713 ?x831) ?x834) ?x837) (* (* 2.0 l_0_2_37) l_0_2_41))))
 (let ((?x1725 (+ (+ ?x1719 (* (* 2.0 l_0_2_38) l_0_2_42)) (* (* 2.0 l_0_2_39) l_0_2_43))))
 (let ((?x1731 (- (- (+ (- ?x1725 ?x718) (* (* 2.0 l_0_2_40) l_0_2_44)) ?x721) ?x724)))
 (= ?x1731 0.0))))))))))))))))))))))))
(assert
 (let ((?x1786 (* l_0_2_45 l_0_2_45)))
 (let ((?x1784 (* l_0_2_44 l_0_2_44)))
 (let ((?x1782 (* l_0_2_43 l_0_2_43)))
 (let ((?x1780 (* l_0_2_42 l_0_2_42)))
 (let ((?x1778 (* l_0_2_41 l_0_2_41)))
 (let ((?x891 (* l_0_2_30 l_0_2_30)))
 (let ((?x889 (* l_0_2_29 l_0_2_29)))
 (let ((?x887 (* l_0_2_28 l_0_2_28)))
 (let ((?x885 (* l_0_2_27 l_0_2_27)))
 (let ((?x883 (* l_0_2_26 l_0_2_26)))
 (let ((?x714 (* 2.0 l_0_2_21)))
 (let ((?x761 (* ?x714 l_0_2_28)))
 (let ((?x711 (* 2.0 l_0_2_20)))
 (let ((?x759 (* ?x711 l_0_2_27)))
 (let ((?x756 (* 2.0 l_0_2_19)))
 (let ((?x757 (* ?x756 l_0_2_26)))
 (let ((?x881 (* l_0_2_15 l_0_2_15)))
 (let ((?x879 (* l_0_2_14 l_0_2_14)))
 (let ((?x877 (* l_0_2_13 l_0_2_13)))
 (let ((?x747 (* 2.0 l_0_2_13)))
 (let ((?x754 (* ?x747 l_0_2_6)))
 (let ((?x875 (* l_0_2_12 l_0_2_12)))
 (let ((?x650 (* 2.0 l_0_2_12)))
 (let ((?x744 (* ?x650 l_0_2_5)))
 (let ((?x1764 (- (+ (* (* (- 2.0) l_0_2_11) l_0_2_4) (* l_0_2_11 l_0_2_11)) ?x744)))
 (let ((?x1771 (+ (+ (+ (+ (+ (- (+ ?x1764 ?x875) ?x754) ?x877) ?x879) ?x881) ?x757) ?x759)))
 (let ((?x1779 (+ (- (- (- (- (- (+ ?x1771 ?x761) ?x883) ?x885) ?x887) ?x889) ?x891) ?x1778)))
 (= (+ (+ (+ (+ ?x1779 ?x1780) ?x1782) ?x1784) ?x1786) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x1827 (- (+ (* (- l_0_2_1) l_0_2_1) (* l_0_2_16 l_0_2_16)) (* (* 2.0 l_0_2_46) l_0_2_56))))
 (= ?x1827 0.0)))
(assert
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x559 (* ?x531 l_0_2_22)))
 (let ((?x1845 (- (+ (* (* (- 2.0) l_0_2_1) l_0_2_7) ?x559) (* (* 2.0 l_0_2_52) l_0_2_56))))
 (let ((?x1851 (- (- ?x1845 (* (* 2.0 l_0_2_53) l_0_2_57)) (* (* 2.0 l_0_2_54) l_0_2_58))))
 (= (- ?x1851 (* (* 2.0 l_0_2_55) l_0_2_59)) 0.0))))))
(assert
 (let ((?x1894 (* l_0_2_60 l_0_2_60)))
 (let ((?x1892 (* l_0_2_59 l_0_2_59)))
 (let ((?x1890 (* l_0_2_58 l_0_2_58)))
 (let ((?x1888 (* l_0_2_57 l_0_2_57)))
 (let ((?x1886 (* l_0_2_56 l_0_2_56)))
 (let ((?x531 (* 2.0 l_0_2_16)))
 (let ((?x572 (* ?x531 l_0_2_26)))
 (let ((?x1891 (- (- (- (+ (* (* (- 2.0) l_0_2_1) l_0_2_11) ?x572) ?x1886) ?x1888) ?x1890)))
 (= (- (- ?x1891 ?x1892) ?x1894) 0.0))))))))))
(assert
 (let ((?x803 (* l_0_2_9 l_0_2_9)))
 (let ((?x801 (* l_0_2_8 l_0_2_8)))
 (let ((?x799 (* l_0_2_7 l_0_2_7)))
 (let ((?x797 (* l_0_2_25 l_0_2_25)))
 (let ((?x795 (* l_0_2_24 l_0_2_24)))
 (let ((?x793 (* l_0_2_23 l_0_2_23)))
 (let ((?x1919 (+ (+ (+ (* (- l_0_2_10) l_0_2_10) (* l_0_2_22 l_0_2_22)) ?x793) ?x795)))
 (= (- (- (- (+ ?x1919 ?x797) ?x799) ?x801) ?x803) 0.0)))))))))
(assert
 (let ((?x837 (* (* 2.0 l_0_2_25) l_0_2_29)))
 (let ((?x834 (* (* 2.0 l_0_2_24) l_0_2_28)))
 (let ((?x831 (* (* 2.0 l_0_2_23) l_0_2_27)))
 (let ((?x828 (* (* 2.0 l_0_2_22) l_0_2_26)))
 (let ((?x747 (* 2.0 l_0_2_13)))
 (let ((?x825 (* ?x747 l_0_2_9)))
 (let ((?x650 (* 2.0 l_0_2_12)))
 (let ((?x823 (* ?x650 l_0_2_8)))
 (let ((?x647 (* 2.0 l_0_2_11)))
 (let ((?x821 (* ?x647 l_0_2_7)))
 (let ((?x1942 (+ (- (- (- (* (* (- 2.0) l_0_2_10) l_0_2_14) ?x821) ?x823) ?x825) ?x828)))
 (= (+ (+ (+ ?x1942 ?x831) ?x834) ?x837) 0.0)))))))))))))
(assert
 (let ((?x891 (* l_0_2_30 l_0_2_30)))
 (let ((?x889 (* l_0_2_29 l_0_2_29)))
 (let ((?x887 (* l_0_2_28 l_0_2_28)))
 (let ((?x885 (* l_0_2_27 l_0_2_27)))
 (let ((?x883 (* l_0_2_26 l_0_2_26)))
 (let ((?x881 (* l_0_2_15 l_0_2_15)))
 (let ((?x879 (* l_0_2_14 l_0_2_14)))
 (let ((?x877 (* l_0_2_13 l_0_2_13)))
 (let ((?x1964 (- (- (- (* (- l_0_2_11) l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x877) ?x879)))
 (= (+ (+ (+ (+ (+ (- ?x1964 ?x881) ?x883) ?x885) ?x887) ?x889) ?x891) 0.0)))))))))))
(assert
 (= (* (* (- 2.0) l_0_2_46) l_0_2_52) 0.0))
(assert
 (let ((?x1991 (* l_0_2_55 l_0_2_55)))
 (let ((?x1989 (* l_0_2_54 l_0_2_54)))
 (let ((?x1992 (- (- (- (* (- l_0_2_52) l_0_2_52) (* l_0_2_53 l_0_2_53)) ?x1989) ?x1991)))
 (= ?x1992 0.0)))))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_10 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_16 0.0))
(assert
 (>= l_0_2_18 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_25 0.0))
(assert
 (>= l_0_2_30 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_33 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (>= l_0_2_40 0.0))
(assert
 (>= l_0_2_45 0.0))
(assert
 (>= l_0_2_46 0.0))
(assert
 (>= l_0_2_48 0.0))
(assert
 (>= l_0_2_51 0.0))
(assert
 (>= l_0_2_55 0.0))
(assert
 (>= l_0_2_60 0.0))
(assert
 (= (- (- (- _a_1_) (* l_0_3_76 l_0_3_76)) 1.0) 0.0))
(assert
 (let ((?x2047 (* 2.0 l_0_3_61)))
 (let ((?x2048 (* ?x2047 l_0_3_67)))
 (let ((?x2044 (* 2.0 l_0_3_46)))
 (let ((?x2045 (* ?x2044 l_0_3_52)))
 (let ((?x2049 (+ (- (- (* l_0_3_1 l_0_3_1) (* l_0_3_16 l_0_3_16)) ?x2045) ?x2048)))
 (= (- ?x2049 1.0) 0.0)))))))
(assert
 (let ((?x2076 (* l_0_3_85 l_0_3_85)))
 (let ((?x2074 (* l_0_3_84 l_0_3_84)))
 (let ((?x2072 (* l_0_3_83 l_0_3_83)))
 (let ((?x2070 (* l_0_3_82 l_0_3_82)))
 (let ((?x2073 (- (- (+ (* (- l_0_3_46) l_0_3_46) (* l_0_3_61 l_0_3_61)) ?x2070) ?x2072)))
 (= (- (- (- ?x2073 ?x2074) ?x2076) 3.0) 0.0)))))))
(assert
 (= (- (- (- _a_0_) (* (* 2.0 l_0_3_76) l_0_3_82)) 3.0) 0.0))
(assert
 (let ((?x2120 (* l_0_3_31 l_0_3_31)))
 (let ((?x2121 (- (- (+ (- _a_2_) (* l_0_3_1 l_0_3_1)) (* l_0_3_16 l_0_3_16)) ?x2120)))
 (= (- ?x2121 (* (* 2.0 l_0_3_76) l_0_3_79)) 0.0))))
(assert
 (let ((?x2145 (- (+ (* (- l_0_3_1) l_0_3_1) (* l_0_3_16 l_0_3_16)) (* (* 2.0 l_0_3_76) l_0_3_86))))
 (= (+ ?x2145 1.0) 0.0)))
(assert
 (let ((?x2172 (* 2.0 l_0_3_63)))
 (let ((?x2173 (* ?x2172 l_0_3_68)))
 (let ((?x2169 (* 2.0 l_0_3_62)))
 (let ((?x2170 (* ?x2169 l_0_3_67)))
 (let ((?x2166 (* 2.0 l_0_3_48)))
 (let ((?x2167 (* ?x2166 l_0_3_53)))
 (let ((?x2163 (* 2.0 l_0_3_47)))
 (let ((?x2164 (* ?x2163 l_0_3_52)))
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2161 (* ?x2160 l_0_3_17)))
 (let ((?x2156 (* 2.0 l_0_3_1)))
 (let ((?x2159 (* ?x2156 l_0_3_2)))
 (= (+ (+ (- (- (- ?x2159 ?x2161) ?x2164) ?x2167) ?x2170) ?x2173) 0.0))))))))))))))
(assert
 (let ((?x2220 (* 2.0 l_0_3_66)))
 (let ((?x2221 (* ?x2220 l_0_3_69)))
 (let ((?x2217 (* 2.0 l_0_3_65)))
 (let ((?x2218 (* ?x2217 l_0_3_68)))
 (let ((?x2214 (* 2.0 l_0_3_64)))
 (let ((?x2215 (* ?x2214 l_0_3_67)))
 (let ((?x2211 (* 2.0 l_0_3_51)))
 (let ((?x2212 (* ?x2211 l_0_3_54)))
 (let ((?x2208 (* 2.0 l_0_3_50)))
 (let ((?x2209 (* ?x2208 l_0_3_53)))
 (let ((?x2205 (* 2.0 l_0_3_49)))
 (let ((?x2206 (* ?x2205 l_0_3_52)))
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2203 (* ?x2160 l_0_3_19)))
 (let ((?x2156 (* 2.0 l_0_3_1)))
 (let ((?x2202 (* ?x2156 l_0_3_4)))
 (let ((?x2204 (- ?x2202 ?x2203)))
 (= (+ (+ (+ (- (- (- ?x2204 ?x2206) ?x2209) ?x2212) ?x2215) ?x2218) ?x2221) 0.0)))))))))))))))))))
(assert
 (let ((?x2275 (* l_0_3_70 l_0_3_70)))
 (let ((?x2273 (* l_0_3_69 l_0_3_69)))
 (let ((?x2271 (* l_0_3_68 l_0_3_68)))
 (let ((?x2269 (* l_0_3_67 l_0_3_67)))
 (let ((?x2267 (* l_0_3_55 l_0_3_55)))
 (let ((?x2265 (* l_0_3_54 l_0_3_54)))
 (let ((?x2263 (* l_0_3_53 l_0_3_53)))
 (let ((?x2261 (* l_0_3_52 l_0_3_52)))
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2259 (* ?x2160 l_0_3_22)))
 (let ((?x2260 (- (* (* 2.0 l_0_3_1) l_0_3_7) ?x2259)))
 (let ((?x2274 (+ (+ (+ (- (- (- (- ?x2260 ?x2261) ?x2263) ?x2265) ?x2267) ?x2269) ?x2271) ?x2273)))
 (= (+ ?x2274 ?x2275) 0.0))))))))))))))
(assert
 (let ((?x2330 (* (* 2.0 l_0_3_70) l_0_3_74)))
 (let ((?x2327 (* (* 2.0 l_0_3_69) l_0_3_73)))
 (let ((?x2324 (* (* 2.0 l_0_3_68) l_0_3_72)))
 (let ((?x2321 (* (* 2.0 l_0_3_67) l_0_3_71)))
 (let ((?x2318 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x2315 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x2312 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x2309 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2306 (* ?x2160 l_0_3_26)))
 (let ((?x2156 (* 2.0 l_0_3_1)))
 (let ((?x2298 (* ?x2156 l_0_3_11)))
 (let ((?x2325 (+ (+ (- (- (- (- (- ?x2298 ?x2306) ?x2309) ?x2312) ?x2315) ?x2318) ?x2321) ?x2324)))
 (= (+ (+ ?x2325 ?x2327) ?x2330) 0.0)))))))))))))))
(assert
 (let ((?x2381 (* l_0_3_3 l_0_3_3)))
 (let ((?x2379 (* l_0_3_2 l_0_3_2)))
 (let ((?x2382 (+ (+ (- (* (- l_0_3_17) l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x2379) ?x2381)))
 (= ?x2382 0.0)))))
(assert
 (let ((?x2402 (* 2.0 l_0_3_3)))
 (let ((?x2403 (* ?x2402 l_0_3_5)))
 (let ((?x2399 (* 2.0 l_0_3_2)))
 (let ((?x2400 (* ?x2399 l_0_3_4)))
 (let ((?x2396 (* 2.0 l_0_3_18)))
 (let ((?x2397 (* ?x2396 l_0_3_20)))
 (let ((?x2398 (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x2397)))
 (= (+ (+ ?x2398 ?x2400) ?x2403) 0.0)))))))))
(assert
 (let ((?x2402 (* 2.0 l_0_3_3)))
 (let ((?x2426 (* ?x2402 l_0_3_8)))
 (let ((?x2399 (* 2.0 l_0_3_2)))
 (let ((?x2424 (* ?x2399 l_0_3_7)))
 (let ((?x2396 (* 2.0 l_0_3_18)))
 (let ((?x2417 (* ?x2396 l_0_3_23)))
 (let ((?x2418 (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x2417)))
 (= (+ (+ ?x2418 ?x2424) ?x2426) 0.0)))))))))
(assert
 (let ((?x2396 (* 2.0 l_0_3_18)))
 (let ((?x2452 (* ?x2396 l_0_3_27)))
 (let ((?x2449 (* 2.0 l_0_3_17)))
 (let ((?x2450 (* ?x2449 l_0_3_26)))
 (let ((?x2441 (* 2.0 l_0_3_12)))
 (let ((?x2447 (* ?x2441 l_0_3_3)))
 (let ((?x2438 (* 2.0 l_0_3_11)))
 (let ((?x2440 (* ?x2438 l_0_3_2)))
 (= (- (- (+ ?x2440 ?x2447) ?x2450) ?x2452) 0.0))))))))))
(assert
 (let ((?x2483 (* l_0_3_6 l_0_3_6)))
 (let ((?x2481 (* l_0_3_5 l_0_3_5)))
 (let ((?x2479 (* l_0_3_4 l_0_3_4)))
 (let ((?x2477 (* l_0_3_21 l_0_3_21)))
 (let ((?x2478 (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x2477)))
 (= (+ (+ (+ ?x2478 ?x2479) ?x2481) ?x2483) 0.0)))))))
(assert
 (let ((?x2515 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2512 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2509 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2505 (* 2.0 l_0_3_21)))
 (let ((?x2506 (* ?x2505 l_0_3_24)))
 (let ((?x2502 (* 2.0 l_0_3_20)))
 (let ((?x2503 (* ?x2502 l_0_3_23)))
 (let ((?x2507 (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x2503) ?x2506)))
 (= (+ (+ (+ ?x2507 ?x2509) ?x2512) ?x2515) 0.0))))))))))
(assert
 (let ((?x2505 (* 2.0 l_0_3_21)))
 (let ((?x2552 (* ?x2505 l_0_3_28)))
 (let ((?x2502 (* 2.0 l_0_3_20)))
 (let ((?x2550 (* ?x2502 l_0_3_27)))
 (let ((?x2547 (* 2.0 l_0_3_19)))
 (let ((?x2548 (* ?x2547 l_0_3_26)))
 (let ((?x2538 (* 2.0 l_0_3_13)))
 (let ((?x2545 (* ?x2538 l_0_3_6)))
 (let ((?x2441 (* 2.0 l_0_3_12)))
 (let ((?x2535 (* ?x2441 l_0_3_5)))
 (let ((?x2549 (- (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x2535) ?x2545) ?x2548)))
 (= (- (- ?x2549 ?x2550) ?x2552) 0.0)))))))))))))
(assert
 (let ((?x2594 (* l_0_3_9 l_0_3_9)))
 (let ((?x2592 (* l_0_3_8 l_0_3_8)))
 (let ((?x2590 (* l_0_3_7 l_0_3_7)))
 (let ((?x2588 (* l_0_3_25 l_0_3_25)))
 (let ((?x2586 (* l_0_3_24 l_0_3_24)))
 (let ((?x2584 (* l_0_3_23 l_0_3_23)))
 (let ((?x2587 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x2584) ?x2586)))
 (let ((?x2589 (- ?x2587 ?x2588)))
 (= (+ (+ (+ ?x2589 ?x2590) ?x2592) ?x2594) 0.0))))))))))
(assert
 (let ((?x2628 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x2625 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x2622 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x2619 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x2538 (* 2.0 l_0_3_13)))
 (let ((?x2616 (* ?x2538 l_0_3_9)))
 (let ((?x2441 (* 2.0 l_0_3_12)))
 (let ((?x2614 (* ?x2441 l_0_3_8)))
 (let ((?x2438 (* 2.0 l_0_3_11)))
 (let ((?x2612 (* ?x2438 l_0_3_7)))
 (let ((?x2617 (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x2612) ?x2614) ?x2616)))
 (= (- (- (- (- ?x2617 ?x2619) ?x2622) ?x2625) ?x2628) 0.0)))))))))))))
(assert
 (let ((?x2682 (* l_0_3_30 l_0_3_30)))
 (let ((?x2680 (* l_0_3_29 l_0_3_29)))
 (let ((?x2678 (* l_0_3_28 l_0_3_28)))
 (let ((?x2676 (* l_0_3_27 l_0_3_27)))
 (let ((?x2674 (* l_0_3_26 l_0_3_26)))
 (let ((?x2672 (* l_0_3_15 l_0_3_15)))
 (let ((?x2670 (* l_0_3_14 l_0_3_14)))
 (let ((?x2668 (* l_0_3_13 l_0_3_13)))
 (let ((?x2671 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x2668) ?x2670)))
 (= (- (- (- (- (- (+ ?x2671 ?x2672) ?x2674) ?x2676) ?x2678) ?x2680) ?x2682) 0.0)))))))))))
(assert
 (let ((?x2068 (* l_0_3_61 l_0_3_61)))
 (let ((?x2081 (* l_0_3_46 l_0_3_46)))
 (let ((?x2041 (* l_0_3_1 l_0_3_1)))
 (let ((?x2702 (* 3.0 ?x2041)))
 (let ((?x2709 (- (- (+ (- ?x2702 (* (* 3.0 l_0_3_16) l_0_3_16)) ?x2081) ?x2068) (* (* 2.0 l_0_3_76) l_0_3_77))))
 (= ?x2709 0.0)))))))
(assert
 (let ((?x2738 (* l_0_3_78 l_0_3_78)))
 (let ((?x2736 (* l_0_3_77 l_0_3_77)))
 (let ((?x2047 (* 2.0 l_0_3_61)))
 (let ((?x2734 (* ?x2047 l_0_3_62)))
 (let ((?x2044 (* 2.0 l_0_3_46)))
 (let ((?x2732 (* ?x2044 l_0_3_47)))
 (let ((?x2731 (- (* (* 6.0 l_0_3_1) l_0_3_2) (* (* 6.0 l_0_3_16) l_0_3_17))))
 (= (- (- (- (+ ?x2731 ?x2732) ?x2734) ?x2736) ?x2738) 0.0)))))))))
(assert
 (let ((?x2047 (* 2.0 l_0_3_61)))
 (let ((?x2773 (* ?x2047 l_0_3_64)))
 (let ((?x2044 (* 2.0 l_0_3_46)))
 (let ((?x2771 (* ?x2044 l_0_3_49)))
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2161 (* ?x2160 l_0_3_17)))
 (let ((?x2156 (* 2.0 l_0_3_1)))
 (let ((?x2159 (* ?x2156 l_0_3_2)))
 (let ((?x2767 (- (- (+ ?x2159 (* (* 6.0 l_0_3_1) l_0_3_4)) ?x2161) (* (* 6.0 l_0_3_16) l_0_3_19))))
 (let ((?x2777 (- (- (+ (- ?x2767 (* (* 2.0 l_0_3_31) l_0_3_32)) ?x2771) ?x2773) (* (* 2.0 l_0_3_77) l_0_3_79))))
 (= (- ?x2777 (* (* 2.0 l_0_3_78) l_0_3_80)) 0.0))))))))))))
(assert
 (let ((?x2047 (* 2.0 l_0_3_61)))
 (let ((?x2048 (* ?x2047 l_0_3_67)))
 (let ((?x2044 (* 2.0 l_0_3_46)))
 (let ((?x2045 (* ?x2044 l_0_3_52)))
 (let ((?x2821 (- (* (* 6.0 l_0_3_1) l_0_3_7) (* (* 6.0 l_0_3_16) l_0_3_22))))
 (let ((?x2827 (- (- (- (+ ?x2821 ?x2045) ?x2048) (* (* 2.0 l_0_3_77) l_0_3_82)) (* (* 2.0 l_0_3_78) l_0_3_83))))
 (= ?x2827 0.0))))))))
(assert
 (let ((?x2047 (* 2.0 l_0_3_61)))
 (let ((?x2860 (* ?x2047 l_0_3_71)))
 (let ((?x2044 (* 2.0 l_0_3_46)))
 (let ((?x2858 (* ?x2044 l_0_3_56)))
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2161 (* ?x2160 l_0_3_17)))
 (let ((?x2156 (* 2.0 l_0_3_1)))
 (let ((?x2159 (* ?x2156 l_0_3_2)))
 (let ((?x2857 (- (+ (- (* (* 6.0 l_0_3_1) l_0_3_11) ?x2159) ?x2161) (* (* 6.0 l_0_3_16) l_0_3_26))))
 (let ((?x2865 (- (- (- (+ ?x2857 ?x2858) ?x2860) (* (* 2.0 l_0_3_77) l_0_3_86)) (* (* 2.0 l_0_3_78) l_0_3_87))))
 (= ?x2865 0.0))))))))))))
(assert
 (let ((?x2918 (* l_0_3_63 l_0_3_63)))
 (let ((?x2916 (* l_0_3_62 l_0_3_62)))
 (let ((?x2914 (* l_0_3_48 l_0_3_48)))
 (let ((?x2912 (* l_0_3_47 l_0_3_47)))
 (let ((?x2907 (- (* (* (- 3.0) l_0_3_17) l_0_3_17) (* (* 3.0 l_0_3_18) l_0_3_18))))
 (let ((?x2911 (+ (+ ?x2907 (* 3.0 (* l_0_3_2 l_0_3_2))) (* 3.0 (* l_0_3_3 l_0_3_3)))))
 (= (- (- (+ (+ ?x2911 ?x2912) ?x2914) ?x2916) ?x2918) 0.0))))))))
(assert
 (let ((?x2172 (* 2.0 l_0_3_63)))
 (let ((?x2966 (* ?x2172 l_0_3_65)))
 (let ((?x2169 (* 2.0 l_0_3_62)))
 (let ((?x2964 (* ?x2169 l_0_3_64)))
 (let ((?x2166 (* 2.0 l_0_3_48)))
 (let ((?x2962 (* ?x2166 l_0_3_50)))
 (let ((?x2958 (* l_0_3_33 l_0_3_33)))
 (let ((?x2956 (* l_0_3_32 l_0_3_32)))
 (let ((?x2381 (* l_0_3_3 l_0_3_3)))
 (let ((?x2379 (* l_0_3_2 l_0_3_2)))
 (let ((?x2377 (* l_0_3_18 l_0_3_18)))
 (let ((?x2946 (- (- (* (* (- 6.0) l_0_3_17) l_0_3_19) (* l_0_3_17 l_0_3_17)) (* (* 6.0 l_0_3_18) l_0_3_20))))
 (let ((?x2954 (+ (+ (+ (- ?x2946 ?x2377) (* (* 6.0 l_0_3_2) l_0_3_4)) ?x2379) (* (* 6.0 l_0_3_3) l_0_3_5))))
 (let ((?x2961 (+ (- (- (+ ?x2954 ?x2381) ?x2956) ?x2958) (* (* 2.0 l_0_3_47) l_0_3_49))))
 (= (- (- (+ ?x2961 ?x2962) ?x2964) ?x2966) 0.0))))))))))))))))
(assert
 (let ((?x2172 (* 2.0 l_0_3_63)))
 (let ((?x2173 (* ?x2172 l_0_3_68)))
 (let ((?x2169 (* 2.0 l_0_3_62)))
 (let ((?x2170 (* ?x2169 l_0_3_67)))
 (let ((?x2166 (* 2.0 l_0_3_48)))
 (let ((?x2167 (* ?x2166 l_0_3_53)))
 (let ((?x2163 (* 2.0 l_0_3_47)))
 (let ((?x2164 (* ?x2163 l_0_3_52)))
 (let ((?x3014 (- (* (* (- 6.0) l_0_3_17) l_0_3_22) (* (* 6.0 l_0_3_18) l_0_3_23))))
 (let ((?x3018 (+ (+ ?x3014 (* (* 6.0 l_0_3_2) l_0_3_7)) (* (* 6.0 l_0_3_3) l_0_3_8))))
 (= (- (- (+ (+ ?x3018 ?x2164) ?x2167) ?x2170) ?x2173) 0.0))))))))))))
(assert
 (let ((?x2172 (* 2.0 l_0_3_63)))
 (let ((?x3062 (* ?x2172 l_0_3_72)))
 (let ((?x2169 (* 2.0 l_0_3_62)))
 (let ((?x3060 (* ?x2169 l_0_3_71)))
 (let ((?x2166 (* 2.0 l_0_3_48)))
 (let ((?x3058 (* ?x2166 l_0_3_57)))
 (let ((?x2381 (* l_0_3_3 l_0_3_3)))
 (let ((?x2379 (* l_0_3_2 l_0_3_2)))
 (let ((?x2377 (* l_0_3_18 l_0_3_18)))
 (let ((?x2385 (* l_0_3_17 l_0_3_17)))
 (let ((?x3046 (+ (* (* 6.0 l_0_3_11) l_0_3_2) (* (* 6.0 l_0_3_12) l_0_3_3))))
 (let ((?x3052 (- (+ (- ?x3046 (* (* 6.0 l_0_3_17) l_0_3_26)) ?x2385) (* (* 6.0 l_0_3_18) l_0_3_27))))
 (let ((?x3057 (+ (- (- (+ ?x3052 ?x2377) ?x2379) ?x2381) (* (* 2.0 l_0_3_47) l_0_3_56))))
 (= (- (- (+ ?x3057 ?x3058) ?x3060) ?x3062) 0.0)))))))))))))))
(assert
 (let ((?x3135 (* l_0_3_66 l_0_3_66)))
 (let ((?x3133 (* l_0_3_65 l_0_3_65)))
 (let ((?x3131 (* l_0_3_64 l_0_3_64)))
 (let ((?x3127 (* l_0_3_51 l_0_3_51)))
 (let ((?x3125 (* l_0_3_50 l_0_3_50)))
 (let ((?x3121 (* l_0_3_49 l_0_3_49)))
 (let ((?x2402 (* 2.0 l_0_3_3)))
 (let ((?x2403 (* ?x2402 l_0_3_5)))
 (let ((?x2399 (* 2.0 l_0_3_2)))
 (let ((?x2400 (* ?x2399 l_0_3_4)))
 (let ((?x2396 (* 2.0 l_0_3_18)))
 (let ((?x2397 (* ?x2396 l_0_3_20)))
 (let ((?x2398 (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x2397)))
 (let ((?x3108 (- (+ (- ?x2398 (* (* 3.0 l_0_3_19) l_0_3_19)) ?x2400) (* (* 3.0 l_0_3_20) l_0_3_20))))
 (let ((?x3115 (- (+ (- ?x3108 (* (* 3.0 l_0_3_21) l_0_3_21)) ?x2403) (* (* 2.0 l_0_3_32) l_0_3_34))))
 (let ((?x3120 (+ (- ?x3115 (* (* 2.0 l_0_3_33) l_0_3_35)) (* 3.0 (* l_0_3_4 l_0_3_4)))))
 (let ((?x3128 (+ (+ (+ (+ ?x3120 ?x3121) (* 3.0 (* l_0_3_5 l_0_3_5))) ?x3125) ?x3127)))
 (let ((?x3136 (- (- (- (+ ?x3128 (* 3.0 (* l_0_3_6 l_0_3_6))) ?x3131) ?x3133) ?x3135)))
 (= ?x3136 0.0))))))))))))))))))))
(assert
 (let ((?x2220 (* 2.0 l_0_3_66)))
 (let ((?x2221 (* ?x2220 l_0_3_69)))
 (let ((?x2217 (* 2.0 l_0_3_65)))
 (let ((?x2218 (* ?x2217 l_0_3_68)))
 (let ((?x2214 (* 2.0 l_0_3_64)))
 (let ((?x2215 (* ?x2214 l_0_3_67)))
 (let ((?x2211 (* 2.0 l_0_3_51)))
 (let ((?x2212 (* ?x2211 l_0_3_54)))
 (let ((?x2208 (* 2.0 l_0_3_50)))
 (let ((?x2209 (* ?x2208 l_0_3_53)))
 (let ((?x2205 (* 2.0 l_0_3_49)))
 (let ((?x2206 (* ?x2205 l_0_3_52)))
 (let ((?x2402 (* 2.0 l_0_3_3)))
 (let ((?x2426 (* ?x2402 l_0_3_8)))
 (let ((?x2399 (* 2.0 l_0_3_2)))
 (let ((?x2424 (* ?x2399 l_0_3_7)))
 (let ((?x2396 (* 2.0 l_0_3_18)))
 (let ((?x2417 (* ?x2396 l_0_3_23)))
 (let ((?x2418 (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x2417)))
 (let ((?x3193 (- (+ (- ?x2418 (* (* 6.0 l_0_3_19) l_0_3_22)) ?x2424) (* (* 6.0 l_0_3_20) l_0_3_23))))
 (let ((?x3199 (- (+ (- ?x3193 (* (* 6.0 l_0_3_21) l_0_3_24)) ?x2426) (* (* 2.0 l_0_3_32) l_0_3_37))))
 (let ((?x3204 (+ (- ?x3199 (* (* 2.0 l_0_3_33) l_0_3_38)) (* (* 6.0 l_0_3_4) l_0_3_7))))
 (let ((?x3210 (+ (+ (+ (+ ?x3204 ?x2206) (* (* 6.0 l_0_3_5) l_0_3_8)) ?x2209) ?x2212)))
 (let ((?x3216 (- (- (- (+ ?x3210 (* (* 6.0 l_0_3_6) l_0_3_9)) ?x2215) ?x2218) ?x2221)))
 (= ?x3216 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2220 (* 2.0 l_0_3_66)))
 (let ((?x3301 (* ?x2220 l_0_3_73)))
 (let ((?x2217 (* 2.0 l_0_3_65)))
 (let ((?x3299 (* ?x2217 l_0_3_72)))
 (let ((?x2214 (* 2.0 l_0_3_64)))
 (let ((?x3297 (* ?x2214 l_0_3_71)))
 (let ((?x2211 (* 2.0 l_0_3_51)))
 (let ((?x3295 (* ?x2211 l_0_3_58)))
 (let ((?x2208 (* 2.0 l_0_3_50)))
 (let ((?x3293 (* ?x2208 l_0_3_57)))
 (let ((?x2402 (* 2.0 l_0_3_3)))
 (let ((?x2403 (* ?x2402 l_0_3_5)))
 (let ((?x2399 (* 2.0 l_0_3_2)))
 (let ((?x2400 (* ?x2399 l_0_3_4)))
 (let ((?x2396 (* 2.0 l_0_3_18)))
 (let ((?x2452 (* ?x2396 l_0_3_27)))
 (let ((?x2397 (* ?x2396 l_0_3_20)))
 (let ((?x2449 (* 2.0 l_0_3_17)))
 (let ((?x2450 (* ?x2449 l_0_3_26)))
 (let ((?x2441 (* 2.0 l_0_3_12)))
 (let ((?x2447 (* ?x2441 l_0_3_3)))
 (let ((?x2438 (* 2.0 l_0_3_11)))
 (let ((?x2440 (* ?x2438 l_0_3_2)))
 (let ((?x3270 (+ (+ (+ ?x2440 (* (* 6.0 l_0_3_11) l_0_3_4)) ?x2447) (* (* 6.0 l_0_3_12) l_0_3_5))))
 (let ((?x3276 (- (+ (+ ?x3270 (* (* 6.0 l_0_3_13) l_0_3_6)) (* ?x2449 l_0_3_19)) ?x2450)))
 (let ((?x3281 (- (- (- (+ ?x3276 ?x2397) ?x2452) (* (* 6.0 l_0_3_19) l_0_3_26)) ?x2400)))
 (let ((?x3285 (- (- ?x3281 (* (* 6.0 l_0_3_20) l_0_3_27)) (* (* 6.0 l_0_3_21) l_0_3_28))))
 (let ((?x3290 (- (- (- ?x3285 ?x2403) (* (* 2.0 l_0_3_32) l_0_3_41)) (* (* 2.0 l_0_3_33) l_0_3_42))))
 (let ((?x3298 (- (+ (+ (+ ?x3290 (* (* 2.0 l_0_3_49) l_0_3_56)) ?x3293) ?x3295) ?x3297)))
 (= (- (- ?x3298 ?x3299) ?x3301) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x2594 (* l_0_3_9 l_0_3_9)))
 (let ((?x3399 (* 3.0 ?x2594)))
 (let ((?x2592 (* l_0_3_8 l_0_3_8)))
 (let ((?x3397 (* 3.0 ?x2592)))
 (let ((?x2275 (* l_0_3_70 l_0_3_70)))
 (let ((?x2590 (* l_0_3_7 l_0_3_7)))
 (let ((?x3394 (* 3.0 ?x2590)))
 (let ((?x2273 (* l_0_3_69 l_0_3_69)))
 (let ((?x2271 (* l_0_3_68 l_0_3_68)))
 (let ((?x2269 (* l_0_3_67 l_0_3_67)))
 (let ((?x2047 (* 2.0 l_0_3_61)))
 (let ((?x2734 (* ?x2047 l_0_3_62)))
 (let ((?x2267 (* l_0_3_55 l_0_3_55)))
 (let ((?x2265 (* l_0_3_54 l_0_3_54)))
 (let ((?x2263 (* l_0_3_53 l_0_3_53)))
 (let ((?x2261 (* l_0_3_52 l_0_3_52)))
 (let ((?x2044 (* 2.0 l_0_3_46)))
 (let ((?x2732 (* ?x2044 l_0_3_47)))
 (let ((?x2581 (* l_0_3_10 l_0_3_10)))
 (let ((?x3372 (* 3.0 ?x2581)))
 (let ((?x3378 (- (- ?x3372 (* (* 3.0 l_0_3_22) l_0_3_22)) (* (* 3.0 l_0_3_23) l_0_3_23))))
 (let ((?x3384 (- (- ?x3378 (* (* 3.0 l_0_3_24) l_0_3_24)) (* (* 3.0 l_0_3_25) l_0_3_25))))
 (let ((?x3391 (- (+ (+ (+ (+ (+ (- ?x3384 ?x2732) ?x2261) ?x2263) ?x2265) ?x2267) ?x2734) ?x2269)))
 (= (+ (+ (- (+ (- (- ?x3391 ?x2271) ?x2273) ?x3394) ?x2275) ?x3397) ?x3399) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x2330 (* (* 2.0 l_0_3_70) l_0_3_74)))
 (let ((?x2327 (* (* 2.0 l_0_3_69) l_0_3_73)))
 (let ((?x2324 (* (* 2.0 l_0_3_68) l_0_3_72)))
 (let ((?x2321 (* (* 2.0 l_0_3_67) l_0_3_71)))
 (let ((?x2318 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x2315 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x2312 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x2309 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x2402 (* 2.0 l_0_3_3)))
 (let ((?x2426 (* ?x2402 l_0_3_8)))
 (let ((?x2399 (* 2.0 l_0_3_2)))
 (let ((?x2424 (* ?x2399 l_0_3_7)))
 (let ((?x2396 (* 2.0 l_0_3_18)))
 (let ((?x2417 (* ?x2396 l_0_3_23)))
 (let ((?x3441 (+ (* (* 6.0 l_0_3_10) l_0_3_14) (* (* 6.0 l_0_3_11) l_0_3_7))))
 (let ((?x3445 (+ (+ ?x3441 (* (* 6.0 l_0_3_12) l_0_3_8)) (* (* 6.0 l_0_3_13) l_0_3_9))))
 (let ((?x3452 (- (- (+ (+ ?x3445 (* (* 2.0 l_0_3_17) l_0_3_22)) ?x2417) ?x2424) (* (* 6.0 l_0_3_22) l_0_3_26))))
 (let ((?x3458 (- (- ?x3452 (* (* 6.0 l_0_3_23) l_0_3_27)) (* (* 6.0 l_0_3_24) l_0_3_28))))
 (let ((?x3464 (+ (+ (- (- ?x3458 (* (* 6.0 l_0_3_25) l_0_3_29)) ?x2426) ?x2309) ?x2312)))
 (= (- (- (- (- (+ (+ ?x3464 ?x2315) ?x2318) ?x2321) ?x2324) ?x2327) ?x2330) 0.0)))))))))))))))))))))
(assert
 (let ((?x3569 (* l_0_3_75 l_0_3_75)))
 (let ((?x3567 (* l_0_3_74 l_0_3_74)))
 (let ((?x3565 (* l_0_3_73 l_0_3_73)))
 (let ((?x3563 (* l_0_3_72 l_0_3_72)))
 (let ((?x3561 (* l_0_3_71 l_0_3_71)))
 (let ((?x3559 (* l_0_3_60 l_0_3_60)))
 (let ((?x3557 (* l_0_3_59 l_0_3_59)))
 (let ((?x3555 (* l_0_3_58 l_0_3_58)))
 (let ((?x3553 (* l_0_3_57 l_0_3_57)))
 (let ((?x3551 (* l_0_3_56 l_0_3_56)))
 (let ((?x2396 (* 2.0 l_0_3_18)))
 (let ((?x2452 (* ?x2396 l_0_3_27)))
 (let ((?x2449 (* 2.0 l_0_3_17)))
 (let ((?x2450 (* ?x2449 l_0_3_26)))
 (let ((?x2441 (* 2.0 l_0_3_12)))
 (let ((?x2447 (* ?x2441 l_0_3_3)))
 (let ((?x3524 (+ (* (* (- 2.0) l_0_3_11) l_0_3_2) (* 3.0 (* l_0_3_11 l_0_3_11)))))
 (let ((?x3529 (+ (+ (- ?x3524 ?x2447) (* 3.0 (* l_0_3_12 l_0_3_12))) (* 3.0 (* l_0_3_13 l_0_3_13)))))
 (let ((?x3533 (+ (+ ?x3529 (* 3.0 (* l_0_3_14 l_0_3_14))) (* 3.0 (* l_0_3_15 l_0_3_15)))))
 (let ((?x3541 (- (- (+ (+ ?x3533 ?x2450) ?x2452) (* (* 3.0 l_0_3_26) l_0_3_26)) (* (* 3.0 l_0_3_27) l_0_3_27))))
 (let ((?x3547 (- (- ?x3541 (* (* 3.0 l_0_3_28) l_0_3_28)) (* (* 3.0 l_0_3_29) l_0_3_29))))
 (let ((?x3556 (+ (+ (+ (- ?x3547 (* (* 3.0 l_0_3_30) l_0_3_30)) ?x3551) ?x3553) ?x3555)))
 (let ((?x3570 (- (- (- (- (- (+ (+ ?x3556 ?x3557) ?x3559) ?x3561) ?x3563) ?x3565) ?x3567) ?x3569)))
 (= ?x3570 0.0)))))))))))))))))))))))))
(assert
 (let ((?x3638 (* l_0_3_81 l_0_3_81)))
 (let ((?x3636 (* l_0_3_80 l_0_3_80)))
 (let ((?x3634 (* l_0_3_79 l_0_3_79)))
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2203 (* ?x2160 l_0_3_19)))
 (let ((?x2156 (* 2.0 l_0_3_1)))
 (let ((?x2202 (* ?x2156 l_0_3_4)))
 (let ((?x2204 (- ?x2202 ?x2203)))
 (let ((?x3639 (- (- (- (- ?x2204 (* (* 2.0 l_0_3_31) l_0_3_34)) ?x3634) ?x3636) ?x3638)))
 (= ?x3639 0.0)))))))))))
(assert
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2259 (* ?x2160 l_0_3_22)))
 (let ((?x2260 (- (* (* 2.0 l_0_3_1) l_0_3_7) ?x2259)))
 (let ((?x3661 (- (- ?x2260 (* (* 2.0 l_0_3_31) l_0_3_37)) (* (* 2.0 l_0_3_79) l_0_3_82))))
 (let ((?x3667 (- (- ?x3661 (* (* 2.0 l_0_3_80) l_0_3_83)) (* (* 2.0 l_0_3_81) l_0_3_84))))
 (= ?x3667 0.0)))))))
(assert
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2306 (* ?x2160 l_0_3_26)))
 (let ((?x2203 (* ?x2160 l_0_3_19)))
 (let ((?x2156 (* 2.0 l_0_3_1)))
 (let ((?x2202 (* ?x2156 l_0_3_4)))
 (let ((?x2298 (* ?x2156 l_0_3_11)))
 (let ((?x3698 (- (- (+ (- ?x2298 ?x2202) ?x2203) ?x2306) (* (* 2.0 l_0_3_31) l_0_3_41))))
 (let ((?x3702 (- (- ?x3698 (* (* 2.0 l_0_3_79) l_0_3_86)) (* (* 2.0 l_0_3_80) l_0_3_87))))
 (= (- ?x3702 (* (* 2.0 l_0_3_81) l_0_3_88)) 0.0))))))))))
(assert
 (let ((?x2483 (* l_0_3_6 l_0_3_6)))
 (let ((?x2481 (* l_0_3_5 l_0_3_5)))
 (let ((?x2479 (* l_0_3_4 l_0_3_4)))
 (let ((?x3744 (* l_0_3_36 l_0_3_36)))
 (let ((?x3742 (* l_0_3_35 l_0_3_35)))
 (let ((?x3740 (* l_0_3_34 l_0_3_34)))
 (let ((?x2477 (* l_0_3_21 l_0_3_21)))
 (let ((?x2478 (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x2477)))
 (= (+ (+ (+ (- (- (- ?x2478 ?x3740) ?x3742) ?x3744) ?x2479) ?x2481) ?x2483) 0.0))))))))))
(assert
 (let ((?x2515 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2512 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2509 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2505 (* 2.0 l_0_3_21)))
 (let ((?x2506 (* ?x2505 l_0_3_24)))
 (let ((?x2502 (* 2.0 l_0_3_20)))
 (let ((?x2503 (* ?x2502 l_0_3_23)))
 (let ((?x2507 (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x2503) ?x2506)))
 (let ((?x3766 (- (- ?x2507 (* (* 2.0 l_0_3_34) l_0_3_37)) (* (* 2.0 l_0_3_35) l_0_3_38))))
 (let ((?x3772 (+ (+ (+ (- ?x3766 (* (* 2.0 l_0_3_36) l_0_3_39)) ?x2509) ?x2512) ?x2515)))
 (= ?x3772 0.0))))))))))))
(assert
 (let ((?x2483 (* l_0_3_6 l_0_3_6)))
 (let ((?x2481 (* l_0_3_5 l_0_3_5)))
 (let ((?x2479 (* l_0_3_4 l_0_3_4)))
 (let ((?x2477 (* l_0_3_21 l_0_3_21)))
 (let ((?x2505 (* 2.0 l_0_3_21)))
 (let ((?x2552 (* ?x2505 l_0_3_28)))
 (let ((?x2475 (* l_0_3_20 l_0_3_20)))
 (let ((?x2502 (* 2.0 l_0_3_20)))
 (let ((?x2550 (* ?x2502 l_0_3_27)))
 (let ((?x2487 (* l_0_3_19 l_0_3_19)))
 (let ((?x2547 (* 2.0 l_0_3_19)))
 (let ((?x2548 (* ?x2547 l_0_3_26)))
 (let ((?x2538 (* 2.0 l_0_3_13)))
 (let ((?x2545 (* ?x2538 l_0_3_6)))
 (let ((?x2441 (* 2.0 l_0_3_12)))
 (let ((?x2535 (* ?x2441 l_0_3_5)))
 (let ((?x2549 (- (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x2535) ?x2545) ?x2548)))
 (let ((?x3803 (- (+ (- (+ (- (+ ?x2549 ?x2487) ?x2550) ?x2475) ?x2552) ?x2477) (* (* 2.0 l_0_3_34) l_0_3_41))))
 (let ((?x3807 (- (- ?x3803 (* (* 2.0 l_0_3_35) l_0_3_42)) (* (* 2.0 l_0_3_36) l_0_3_43))))
 (= (- (- (- ?x3807 ?x2479) ?x2481) ?x2483) 0.0)))))))))))))))))))))
(assert
 (let ((?x2594 (* l_0_3_9 l_0_3_9)))
 (let ((?x2592 (* l_0_3_8 l_0_3_8)))
 (let ((?x2590 (* l_0_3_7 l_0_3_7)))
 (let ((?x2047 (* 2.0 l_0_3_61)))
 (let ((?x2773 (* ?x2047 l_0_3_64)))
 (let ((?x2044 (* 2.0 l_0_3_46)))
 (let ((?x2771 (* ?x2044 l_0_3_49)))
 (let ((?x3850 (* l_0_3_40 l_0_3_40)))
 (let ((?x3848 (* l_0_3_39 l_0_3_39)))
 (let ((?x3846 (* l_0_3_38 l_0_3_38)))
 (let ((?x3844 (* l_0_3_37 l_0_3_37)))
 (let ((?x2588 (* l_0_3_25 l_0_3_25)))
 (let ((?x2586 (* l_0_3_24 l_0_3_24)))
 (let ((?x2584 (* l_0_3_23 l_0_3_23)))
 (let ((?x2587 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x2584) ?x2586)))
 (let ((?x2589 (- ?x2587 ?x2588)))
 (let ((?x3854 (+ (+ (- (- (- (- (- ?x2589 ?x3844) ?x3846) ?x3848) ?x3850) ?x2771) ?x2773) ?x2590)))
 (= (+ (+ ?x3854 ?x2592) ?x2594) 0.0)))))))))))))))))))
(assert
 (let ((?x2515 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2512 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2509 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2628 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x2625 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x2622 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x2619 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x2505 (* 2.0 l_0_3_21)))
 (let ((?x2506 (* ?x2505 l_0_3_24)))
 (let ((?x2502 (* 2.0 l_0_3_20)))
 (let ((?x2503 (* ?x2502 l_0_3_23)))
 (let ((?x2538 (* 2.0 l_0_3_13)))
 (let ((?x2616 (* ?x2538 l_0_3_9)))
 (let ((?x2441 (* 2.0 l_0_3_12)))
 (let ((?x2614 (* ?x2441 l_0_3_8)))
 (let ((?x2438 (* 2.0 l_0_3_11)))
 (let ((?x2612 (* ?x2438 l_0_3_7)))
 (let ((?x2617 (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x2612) ?x2614) ?x2616)))
 (let ((?x3880 (- (+ (+ (+ ?x2617 (* (* 2.0 l_0_3_19) l_0_3_22)) ?x2503) ?x2506) ?x2619)))
 (let ((?x3886 (- (- (- (- ?x3880 ?x2622) ?x2625) ?x2628) (* (* 2.0 l_0_3_37) l_0_3_41))))
 (let ((?x3892 (- (- ?x3886 (* (* 2.0 l_0_3_38) l_0_3_42)) (* (* 2.0 l_0_3_39) l_0_3_43))))
 (let ((?x3898 (- (- (- (- ?x3892 ?x2509) (* (* 2.0 l_0_3_40) l_0_3_44)) ?x2512) ?x2515)))
 (= ?x3898 0.0))))))))))))))))))))))))
(assert
 (let ((?x3967 (* l_0_3_45 l_0_3_45)))
 (let ((?x3965 (* l_0_3_44 l_0_3_44)))
 (let ((?x3963 (* l_0_3_43 l_0_3_43)))
 (let ((?x3961 (* l_0_3_42 l_0_3_42)))
 (let ((?x3959 (* l_0_3_41 l_0_3_41)))
 (let ((?x2682 (* l_0_3_30 l_0_3_30)))
 (let ((?x2680 (* l_0_3_29 l_0_3_29)))
 (let ((?x2678 (* l_0_3_28 l_0_3_28)))
 (let ((?x2676 (* l_0_3_27 l_0_3_27)))
 (let ((?x2674 (* l_0_3_26 l_0_3_26)))
 (let ((?x2505 (* 2.0 l_0_3_21)))
 (let ((?x2552 (* ?x2505 l_0_3_28)))
 (let ((?x2502 (* 2.0 l_0_3_20)))
 (let ((?x2550 (* ?x2502 l_0_3_27)))
 (let ((?x2547 (* 2.0 l_0_3_19)))
 (let ((?x2548 (* ?x2547 l_0_3_26)))
 (let ((?x2672 (* l_0_3_15 l_0_3_15)))
 (let ((?x2670 (* l_0_3_14 l_0_3_14)))
 (let ((?x2668 (* l_0_3_13 l_0_3_13)))
 (let ((?x2538 (* 2.0 l_0_3_13)))
 (let ((?x2545 (* ?x2538 l_0_3_6)))
 (let ((?x2666 (* l_0_3_12 l_0_3_12)))
 (let ((?x2441 (* 2.0 l_0_3_12)))
 (let ((?x2535 (* ?x2441 l_0_3_5)))
 (let ((?x3945 (- (+ (* (* (- 2.0) l_0_3_11) l_0_3_4) (* l_0_3_11 l_0_3_11)) ?x2535)))
 (let ((?x3952 (+ (+ (+ (+ (+ (- (+ ?x3945 ?x2666) ?x2545) ?x2668) ?x2670) ?x2672) ?x2548) ?x2550)))
 (let ((?x3960 (- (- (- (- (- (- (+ ?x3952 ?x2552) ?x2674) ?x2676) ?x2678) ?x2680) ?x2682) ?x3959)))
 (= (- (- (- (- ?x3960 ?x3961) ?x3963) ?x3965) ?x3967) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2259 (* ?x2160 l_0_3_22)))
 (let ((?x4019 (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x2259) (* (* 2.0 l_0_3_82) l_0_3_86))))
 (let ((?x4025 (- (- ?x4019 (* (* 2.0 l_0_3_83) l_0_3_87)) (* (* 2.0 l_0_3_84) l_0_3_88))))
 (= (- ?x4025 (* (* 2.0 l_0_3_85) l_0_3_89)) 0.0))))))
(assert
 (let ((?x4067 (* l_0_3_90 l_0_3_90)))
 (let ((?x4065 (* l_0_3_89 l_0_3_89)))
 (let ((?x4063 (* l_0_3_88 l_0_3_88)))
 (let ((?x4061 (* l_0_3_87 l_0_3_87)))
 (let ((?x4059 (* l_0_3_86 l_0_3_86)))
 (let ((?x2160 (* 2.0 l_0_3_16)))
 (let ((?x2306 (* ?x2160 l_0_3_26)))
 (let ((?x4064 (- (- (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x2306) ?x4059) ?x4061) ?x4063)))
 (= (- (- ?x4064 ?x4065) ?x4067) 0.0))))))))))
(assert
 (let ((?x2594 (* l_0_3_9 l_0_3_9)))
 (let ((?x2592 (* l_0_3_8 l_0_3_8)))
 (let ((?x2590 (* l_0_3_7 l_0_3_7)))
 (let ((?x2047 (* 2.0 l_0_3_61)))
 (let ((?x2860 (* ?x2047 l_0_3_71)))
 (let ((?x2044 (* 2.0 l_0_3_46)))
 (let ((?x2858 (* ?x2044 l_0_3_56)))
 (let ((?x2588 (* l_0_3_25 l_0_3_25)))
 (let ((?x2586 (* l_0_3_24 l_0_3_24)))
 (let ((?x2584 (* l_0_3_23 l_0_3_23)))
 (let ((?x4083 (+ (+ (+ (* (- l_0_3_10) l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x2584) ?x2586)))
 (= (- (- (- (+ (- (+ ?x4083 ?x2588) ?x2858) ?x2860) ?x2590) ?x2592) ?x2594) 0.0)))))))))))))
(assert
 (let ((?x2628 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x2625 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x2622 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x2619 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x2538 (* 2.0 l_0_3_13)))
 (let ((?x2616 (* ?x2538 l_0_3_9)))
 (let ((?x2441 (* 2.0 l_0_3_12)))
 (let ((?x2614 (* ?x2441 l_0_3_8)))
 (let ((?x2438 (* 2.0 l_0_3_11)))
 (let ((?x2612 (* ?x2438 l_0_3_7)))
 (let ((?x4106 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_14) ?x2612) ?x2614) ?x2616) ?x2619)))
 (= (+ (+ (+ ?x4106 ?x2622) ?x2625) ?x2628) 0.0)))))))))))))
(assert
 (let ((?x2682 (* l_0_3_30 l_0_3_30)))
 (let ((?x2680 (* l_0_3_29 l_0_3_29)))
 (let ((?x2678 (* l_0_3_28 l_0_3_28)))
 (let ((?x2676 (* l_0_3_27 l_0_3_27)))
 (let ((?x2674 (* l_0_3_26 l_0_3_26)))
 (let ((?x2672 (* l_0_3_15 l_0_3_15)))
 (let ((?x2670 (* l_0_3_14 l_0_3_14)))
 (let ((?x2668 (* l_0_3_13 l_0_3_13)))
 (let ((?x4122 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x2668) ?x2670)))
 (= (+ (+ (+ (+ (+ (- ?x4122 ?x2672) ?x2674) ?x2676) ?x2678) ?x2680) ?x2682) 0.0)))))))))))
(assert
 (let ((?x2918 (* l_0_3_63 l_0_3_63)))
 (let ((?x2916 (* l_0_3_62 l_0_3_62)))
 (let ((?x4134 (+ (+ (- (* (- l_0_3_47) l_0_3_47) (* l_0_3_48 l_0_3_48)) ?x2916) ?x2918)))
 (= ?x4134 0.0)))))
(assert
 (let ((?x2172 (* 2.0 l_0_3_63)))
 (let ((?x2966 (* ?x2172 l_0_3_65)))
 (let ((?x2169 (* 2.0 l_0_3_62)))
 (let ((?x2964 (* ?x2169 l_0_3_64)))
 (let ((?x2166 (* 2.0 l_0_3_48)))
 (let ((?x2962 (* ?x2166 l_0_3_50)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_47) l_0_3_49) ?x2962) ?x2964) ?x2966) 0.0))))))))
(assert
 (let ((?x2172 (* 2.0 l_0_3_63)))
 (let ((?x3062 (* ?x2172 l_0_3_72)))
 (let ((?x2169 (* 2.0 l_0_3_62)))
 (let ((?x3060 (* ?x2169 l_0_3_71)))
 (let ((?x2166 (* 2.0 l_0_3_48)))
 (let ((?x3058 (* ?x2166 l_0_3_57)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_47) l_0_3_56) ?x3058) ?x3060) ?x3062) 0.0))))))))
(assert
 (let ((?x3135 (* l_0_3_66 l_0_3_66)))
 (let ((?x3133 (* l_0_3_65 l_0_3_65)))
 (let ((?x3131 (* l_0_3_64 l_0_3_64)))
 (let ((?x3127 (* l_0_3_51 l_0_3_51)))
 (let ((?x4144 (+ (- (- (* (- l_0_3_49) l_0_3_49) (* l_0_3_50 l_0_3_50)) ?x3127) ?x3131)))
 (= (+ (+ ?x4144 ?x3133) ?x3135) 0.0)))))))
(assert
 (let ((?x2220 (* 2.0 l_0_3_66)))
 (let ((?x3301 (* ?x2220 l_0_3_73)))
 (let ((?x2217 (* 2.0 l_0_3_65)))
 (let ((?x3299 (* ?x2217 l_0_3_72)))
 (let ((?x2214 (* 2.0 l_0_3_64)))
 (let ((?x3297 (* ?x2214 l_0_3_71)))
 (let ((?x2211 (* 2.0 l_0_3_51)))
 (let ((?x3295 (* ?x2211 l_0_3_58)))
 (let ((?x2208 (* 2.0 l_0_3_50)))
 (let ((?x3293 (* ?x2208 l_0_3_57)))
 (let ((?x977 (+ (+ (- (- (* (* (- 2.0) l_0_3_49) l_0_3_56) ?x3293) ?x3295) ?x3297) ?x3299)))
 (= (+ ?x977 ?x3301) 0.0)))))))))))))
(assert
 (let ((?x3569 (* l_0_3_75 l_0_3_75)))
 (let ((?x3567 (* l_0_3_74 l_0_3_74)))
 (let ((?x3565 (* l_0_3_73 l_0_3_73)))
 (let ((?x3563 (* l_0_3_72 l_0_3_72)))
 (let ((?x3561 (* l_0_3_71 l_0_3_71)))
 (let ((?x3559 (* l_0_3_60 l_0_3_60)))
 (let ((?x3557 (* l_0_3_59 l_0_3_59)))
 (let ((?x3555 (* l_0_3_58 l_0_3_58)))
 (let ((?x4157 (- (- (- (* (- l_0_3_56) l_0_3_56) (* l_0_3_57 l_0_3_57)) ?x3555) ?x3557)))
 (= (+ (+ (+ (+ (+ (- ?x4157 ?x3559) ?x3561) ?x3563) ?x3565) ?x3567) ?x3569) 0.0)))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (>= l_0_3_76 0.0))
(assert
 (>= l_0_3_78 0.0))
(assert
 (>= l_0_3_81 0.0))
(assert
 (>= l_0_3_85 0.0))
(assert
 (>= l_0_3_90 0.0))
(assert
 (let ((?x4183 (* 2.0 l_0_4_61)))
 (let ((?x4184 (* ?x4183 l_0_4_67)))
 (let ((?x4180 (* 2.0 l_0_4_46)))
 (let ((?x4181 (* ?x4180 l_0_4_52)))
 (let ((?x4185 (+ (- (- (* l_0_4_1 l_0_4_1) (* l_0_4_16 l_0_4_16)) ?x4181) ?x4184)))
 (= (+ ?x4185 1.0) 0.0)))))))
(assert
 (let ((?x4216 (* l_0_4_99 l_0_4_99)))
 (let ((?x4214 (* l_0_4_98 l_0_4_98)))
 (let ((?x4212 (* l_0_4_97 l_0_4_97)))
 (let ((?x4210 (* l_0_4_85 l_0_4_85)))
 (let ((?x4208 (* l_0_4_84 l_0_4_84)))
 (let ((?x4206 (* l_0_4_83 l_0_4_83)))
 (let ((?x4204 (* l_0_4_82 l_0_4_82)))
 (let ((?x4202 (* l_0_4_61 l_0_4_61)))
 (let ((?x4205 (- (+ (- (* (- l_0_4_100) l_0_4_100) (* l_0_4_46 l_0_4_46)) ?x4202) ?x4204)))
 (let ((?x4218 (+ (- (- (- (- (- (- ?x4205 ?x4206) ?x4208) ?x4210) ?x4212) ?x4214) ?x4216) 3.0)))
 (= ?x4218 0.0))))))))))))
(assert
 (let ((?x4229 (- (- _a_0_ (* (* 2.0 l_0_4_76) l_0_4_82)) (* (* 2.0 l_0_4_91) l_0_4_97))))
 (= (+ ?x4229 3.0) 0.0)))
(assert
 (let ((?x4243 (+ (- (- _a_1_ (* l_0_4_76 l_0_4_76)) (* l_0_4_91 l_0_4_91)) 1.0)))
 (= ?x4243 0.0)))
(assert
 (let ((?x4253 (* l_0_4_31 l_0_4_31)))
 (let ((?x4254 (- (- (+ _a_2_ (* l_0_4_1 l_0_4_1)) (* l_0_4_16 l_0_4_16)) ?x4253)))
 (let ((?x4258 (- (- ?x4254 (* (* 2.0 l_0_4_76) l_0_4_79)) (* (* 2.0 l_0_4_91) l_0_4_94))))
 (= ?x4258 0.0)))))
(assert
 (let ((?x4178 (* l_0_4_16 l_0_4_16)))
 (let ((?x1258 (+ (- (* (- l_0_4_1) l_0_4_1) (* (* 2.0 l_0_4_101) l_0_4_91)) ?x4178)))
 (= (- (- ?x1258 (* (* 2.0 l_0_4_76) l_0_4_86)) 1.0) 0.0))))
(assert
 (let ((?x4289 (* 2.0 l_0_4_63)))
 (let ((?x4290 (* ?x4289 l_0_4_68)))
 (let ((?x4286 (* 2.0 l_0_4_62)))
 (let ((?x4287 (* ?x4286 l_0_4_67)))
 (let ((?x4283 (* 2.0 l_0_4_48)))
 (let ((?x4284 (* ?x4283 l_0_4_53)))
 (let ((?x4280 (* 2.0 l_0_4_47)))
 (let ((?x4281 (* ?x4280 l_0_4_52)))
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x4278 (* ?x4277 l_0_4_17)))
 (let ((?x4275 (* 2.0 l_0_4_1)))
 (let ((?x4276 (* ?x4275 l_0_4_2)))
 (= (+ (+ (- (- (- ?x4276 ?x4278) ?x4281) ?x4284) ?x4287) ?x4290) 0.0))))))))))))))
(assert
 (let ((?x4327 (* 2.0 l_0_4_66)))
 (let ((?x4328 (* ?x4327 l_0_4_69)))
 (let ((?x4324 (* 2.0 l_0_4_65)))
 (let ((?x4325 (* ?x4324 l_0_4_68)))
 (let ((?x4321 (* 2.0 l_0_4_64)))
 (let ((?x4322 (* ?x4321 l_0_4_67)))
 (let ((?x4318 (* 2.0 l_0_4_51)))
 (let ((?x4319 (* ?x4318 l_0_4_54)))
 (let ((?x4315 (* 2.0 l_0_4_50)))
 (let ((?x4316 (* ?x4315 l_0_4_53)))
 (let ((?x4312 (* 2.0 l_0_4_49)))
 (let ((?x4313 (* ?x4312 l_0_4_52)))
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x1326 (* ?x4277 l_0_4_19)))
 (let ((?x4275 (* 2.0 l_0_4_1)))
 (let ((?x1324 (* ?x4275 l_0_4_4)))
 (let ((?x4306 (- ?x1324 ?x1326)))
 (= (+ (+ (+ (- (- (- ?x4306 ?x4313) ?x4316) ?x4319) ?x4322) ?x4325) ?x4328) 0.0)))))))))))))))))))
(assert
 (let ((?x4363 (* l_0_4_70 l_0_4_70)))
 (let ((?x4361 (* l_0_4_69 l_0_4_69)))
 (let ((?x4359 (* l_0_4_68 l_0_4_68)))
 (let ((?x4357 (* l_0_4_67 l_0_4_67)))
 (let ((?x4355 (* l_0_4_55 l_0_4_55)))
 (let ((?x4353 (* l_0_4_54 l_0_4_54)))
 (let ((?x4351 (* l_0_4_53 l_0_4_53)))
 (let ((?x4343 (* l_0_4_52 l_0_4_52)))
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x1373 (* ?x4277 l_0_4_22)))
 (let ((?x1375 (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x1373)))
 (let ((?x4362 (+ (+ (+ (- (- (- (- ?x1375 ?x4343) ?x4351) ?x4353) ?x4355) ?x4357) ?x4359) ?x4361)))
 (= (+ ?x4362 ?x4363) 0.0))))))))))))))
(assert
 (let ((?x4411 (* (* 2.0 l_0_4_70) l_0_4_74)))
 (let ((?x4408 (* (* 2.0 l_0_4_69) l_0_4_73)))
 (let ((?x4405 (* (* 2.0 l_0_4_68) l_0_4_72)))
 (let ((?x4402 (* (* 2.0 l_0_4_67) l_0_4_71)))
 (let ((?x4399 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x4396 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x4393 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x4390 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x4387 (* ?x4277 l_0_4_26)))
 (let ((?x4275 (* 2.0 l_0_4_1)))
 (let ((?x1416 (* ?x4275 l_0_4_11)))
 (let ((?x4406 (+ (+ (- (- (- (- (- ?x1416 ?x4387) ?x4390) ?x4393) ?x4396) ?x4399) ?x4402) ?x4405)))
 (= (+ (+ ?x4406 ?x4408) ?x4411) 0.0)))))))))))))))
(assert
 (let ((?x4438 (* l_0_4_3 l_0_4_3)))
 (let ((?x4429 (* l_0_4_2 l_0_4_2)))
 (let ((?x4439 (+ (+ (- (* (- l_0_4_17) l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x4429) ?x4438)))
 (= ?x4439 0.0)))))
(assert
 (let ((?x4459 (* 2.0 l_0_4_3)))
 (let ((?x4460 (* ?x4459 l_0_4_5)))
 (let ((?x4456 (* 2.0 l_0_4_2)))
 (let ((?x4457 (* ?x4456 l_0_4_4)))
 (let ((?x4453 (* 2.0 l_0_4_18)))
 (let ((?x4454 (* ?x4453 l_0_4_20)))
 (let ((?x4455 (- (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x4454)))
 (= (+ (+ ?x4455 ?x4457) ?x4460) 0.0)))))))))
(assert
 (let ((?x4459 (* 2.0 l_0_4_3)))
 (let ((?x4479 (* ?x4459 l_0_4_8)))
 (let ((?x4456 (* 2.0 l_0_4_2)))
 (let ((?x4477 (* ?x4456 l_0_4_7)))
 (let ((?x4453 (* 2.0 l_0_4_18)))
 (let ((?x4475 (* ?x4453 l_0_4_23)))
 (let ((?x4476 (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x4475)))
 (= (+ (+ ?x4476 ?x4477) ?x4479) 0.0)))))))))
(assert
 (let ((?x4453 (* 2.0 l_0_4_18)))
 (let ((?x4490 (* ?x4453 l_0_4_27)))
 (let ((?x4487 (* 2.0 l_0_4_17)))
 (let ((?x4488 (* ?x4487 l_0_4_26)))
 (let ((?x1497 (* 2.0 l_0_4_12)))
 (let ((?x1498 (* ?x1497 l_0_4_3)))
 (let ((?x1500 (* 2.0 l_0_4_11)))
 (let ((?x1495 (* ?x1500 l_0_4_2)))
 (= (- (- (+ ?x1495 ?x1498) ?x4488) ?x4490) 0.0))))))))))
(assert
 (let ((?x4516 (* l_0_4_6 l_0_4_6)))
 (let ((?x4514 (* l_0_4_5 l_0_4_5)))
 (let ((?x4512 (* l_0_4_4 l_0_4_4)))
 (let ((?x4510 (* l_0_4_21 l_0_4_21)))
 (let ((?x4511 (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x4510)))
 (= (+ (+ (+ ?x4511 ?x4512) ?x4514) ?x4516) 0.0)))))))
(assert
 (let ((?x4545 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4542 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4539 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4535 (* 2.0 l_0_4_21)))
 (let ((?x4536 (* ?x4535 l_0_4_24)))
 (let ((?x4532 (* 2.0 l_0_4_20)))
 (let ((?x4533 (* ?x4532 l_0_4_23)))
 (let ((?x4537 (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x4533) ?x4536)))
 (= (+ (+ (+ ?x4537 ?x4539) ?x4542) ?x4545) 0.0))))))))))
(assert
 (let ((?x4535 (* 2.0 l_0_4_21)))
 (let ((?x4574 (* ?x4535 l_0_4_28)))
 (let ((?x4532 (* 2.0 l_0_4_20)))
 (let ((?x4572 (* ?x4532 l_0_4_27)))
 (let ((?x4569 (* 2.0 l_0_4_19)))
 (let ((?x4570 (* ?x4569 l_0_4_26)))
 (let ((?x4560 (* 2.0 l_0_4_13)))
 (let ((?x4567 (* ?x4560 l_0_4_6)))
 (let ((?x1497 (* 2.0 l_0_4_12)))
 (let ((?x1567 (* ?x1497 l_0_4_5)))
 (let ((?x4571 (- (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x1567) ?x4567) ?x4570)))
 (= (- (- ?x4571 ?x4572) ?x4574) 0.0)))))))))))))
(assert
 (let ((?x4609 (* l_0_4_9 l_0_4_9)))
 (let ((?x4607 (* l_0_4_8 l_0_4_8)))
 (let ((?x4605 (* l_0_4_7 l_0_4_7)))
 (let ((?x4603 (* l_0_4_25 l_0_4_25)))
 (let ((?x4601 (* l_0_4_24 l_0_4_24)))
 (let ((?x4599 (* l_0_4_23 l_0_4_23)))
 (let ((?x4602 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x4599) ?x4601)))
 (let ((?x4604 (- ?x4602 ?x4603)))
 (= (+ (+ (+ ?x4604 ?x4605) ?x4607) ?x4609) 0.0))))))))))
(assert
 (let ((?x4640 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x4637 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x4634 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x4631 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x4560 (* 2.0 l_0_4_13)))
 (let ((?x4628 (* ?x4560 l_0_4_9)))
 (let ((?x1497 (* 2.0 l_0_4_12)))
 (let ((?x4626 (* ?x1497 l_0_4_8)))
 (let ((?x1500 (* 2.0 l_0_4_11)))
 (let ((?x4624 (* ?x1500 l_0_4_7)))
 (let ((?x4629 (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x4624) ?x4626) ?x4628)))
 (= (- (- (- (- ?x4629 ?x4631) ?x4634) ?x4637) ?x4640) 0.0)))))))))))))
(assert
 (let ((?x4679 (* l_0_4_30 l_0_4_30)))
 (let ((?x4677 (* l_0_4_29 l_0_4_29)))
 (let ((?x4675 (* l_0_4_28 l_0_4_28)))
 (let ((?x4673 (* l_0_4_27 l_0_4_27)))
 (let ((?x4671 (* l_0_4_26 l_0_4_26)))
 (let ((?x4669 (* l_0_4_15 l_0_4_15)))
 (let ((?x4667 (* l_0_4_14 l_0_4_14)))
 (let ((?x4665 (* l_0_4_13 l_0_4_13)))
 (let ((?x4668 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x4665) ?x4667)))
 (= (- (- (- (- (- (+ ?x4668 ?x4669) ?x4671) ?x4673) ?x4675) ?x4677) ?x4679) 0.0)))))))))))
(assert
 (let ((?x4202 (* l_0_4_61 l_0_4_61)))
 (let ((?x4200 (* l_0_4_46 l_0_4_46)))
 (let ((?x4698 (- (* 3.0 (* l_0_4_1 l_0_4_1)) (* (* 3.0 l_0_4_16) l_0_4_16))))
 (let ((?x4704 (- (- (- (+ ?x4698 ?x4200) ?x4202) (* (* 2.0 l_0_4_76) l_0_4_77)) (* (* 2.0 l_0_4_91) l_0_4_92))))
 (= ?x4704 0.0))))))
(assert
 (let ((?x4732 (* l_0_4_93 l_0_4_93)))
 (let ((?x4730 (* l_0_4_92 l_0_4_92)))
 (let ((?x4728 (* l_0_4_78 l_0_4_78)))
 (let ((?x4726 (* l_0_4_77 l_0_4_77)))
 (let ((?x4183 (* 2.0 l_0_4_61)))
 (let ((?x4724 (* ?x4183 l_0_4_62)))
 (let ((?x4180 (* 2.0 l_0_4_46)))
 (let ((?x4722 (* ?x4180 l_0_4_47)))
 (let ((?x4721 (- (* (* 6.0 l_0_4_1) l_0_4_2) (* (* 6.0 l_0_4_16) l_0_4_17))))
 (= (- (- (- (- (- (+ ?x4721 ?x4722) ?x4724) ?x4726) ?x4728) ?x4730) ?x4732) 0.0)))))))))))
(assert
 (let ((?x4183 (* 2.0 l_0_4_61)))
 (let ((?x4762 (* ?x4183 l_0_4_64)))
 (let ((?x4180 (* 2.0 l_0_4_46)))
 (let ((?x4760 (* ?x4180 l_0_4_49)))
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x4278 (* ?x4277 l_0_4_17)))
 (let ((?x4275 (* 2.0 l_0_4_1)))
 (let ((?x4276 (* ?x4275 l_0_4_2)))
 (let ((?x4756 (- (- (+ ?x4276 (* (* 6.0 l_0_4_1) l_0_4_4)) ?x4278) (* (* 6.0 l_0_4_16) l_0_4_19))))
 (let ((?x4766 (- (- (+ (- ?x4756 (* (* 2.0 l_0_4_31) l_0_4_32)) ?x4760) ?x4762) (* (* 2.0 l_0_4_77) l_0_4_79))))
 (let ((?x4772 (- (- ?x4766 (* (* 2.0 l_0_4_78) l_0_4_80)) (* (* 2.0 l_0_4_92) l_0_4_94))))
 (= (- ?x4772 (* (* 2.0 l_0_4_93) l_0_4_95)) 0.0)))))))))))))
(assert
 (let ((?x4183 (* 2.0 l_0_4_61)))
 (let ((?x4184 (* ?x4183 l_0_4_67)))
 (let ((?x4180 (* 2.0 l_0_4_46)))
 (let ((?x4181 (* ?x4180 l_0_4_52)))
 (let ((?x4802 (- (* (* 6.0 l_0_4_1) l_0_4_7) (* (* 6.0 l_0_4_16) l_0_4_22))))
 (let ((?x4808 (- (- (- (+ ?x4802 ?x4181) ?x4184) (* (* 2.0 l_0_4_77) l_0_4_82)) (* (* 2.0 l_0_4_78) l_0_4_83))))
 (let ((?x4812 (- (- ?x4808 (* (* 2.0 l_0_4_92) l_0_4_97)) (* (* 2.0 l_0_4_93) l_0_4_98))))
 (= ?x4812 0.0)))))))))
(assert
 (let ((?x4183 (* 2.0 l_0_4_61)))
 (let ((?x4828 (* ?x4183 l_0_4_71)))
 (let ((?x4180 (* 2.0 l_0_4_46)))
 (let ((?x1878 (* ?x4180 l_0_4_56)))
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x4278 (* ?x4277 l_0_4_17)))
 (let ((?x4275 (* 2.0 l_0_4_1)))
 (let ((?x4276 (* ?x4275 l_0_4_2)))
 (let ((?x1910 (- (- (* (* 6.0 l_0_4_1) l_0_4_11) ?x4276) (* (* 2.0 l_0_4_101) l_0_4_92))))
 (let ((?x1875 (- (+ (- ?x1910 (* (* 2.0 l_0_4_102) l_0_4_93)) ?x4278) (* (* 6.0 l_0_4_16) l_0_4_26))))
 (let ((?x4833 (- (- (- (+ ?x1875 ?x1878) ?x4828) (* (* 2.0 l_0_4_77) l_0_4_86)) (* (* 2.0 l_0_4_78) l_0_4_87))))
 (= ?x4833 0.0)))))))))))))
(assert
 (let ((?x4872 (* l_0_4_63 l_0_4_63)))
 (let ((?x4870 (* l_0_4_62 l_0_4_62)))
 (let ((?x4868 (* l_0_4_48 l_0_4_48)))
 (let ((?x4866 (* l_0_4_47 l_0_4_47)))
 (let ((?x4861 (- (* (* (- 3.0) l_0_4_17) l_0_4_17) (* (* 3.0 l_0_4_18) l_0_4_18))))
 (let ((?x4865 (+ (+ ?x4861 (* 3.0 (* l_0_4_2 l_0_4_2))) (* 3.0 (* l_0_4_3 l_0_4_3)))))
 (= (- (- (+ (+ ?x4865 ?x4866) ?x4868) ?x4870) ?x4872) 0.0))))))))
(assert
 (let ((?x4289 (* 2.0 l_0_4_63)))
 (let ((?x4916 (* ?x4289 l_0_4_65)))
 (let ((?x4286 (* 2.0 l_0_4_62)))
 (let ((?x4914 (* ?x4286 l_0_4_64)))
 (let ((?x4283 (* 2.0 l_0_4_48)))
 (let ((?x4912 (* ?x4283 l_0_4_50)))
 (let ((?x4908 (* l_0_4_33 l_0_4_33)))
 (let ((?x4906 (* l_0_4_32 l_0_4_32)))
 (let ((?x4438 (* l_0_4_3 l_0_4_3)))
 (let ((?x4429 (* l_0_4_2 l_0_4_2)))
 (let ((?x4426 (* l_0_4_18 l_0_4_18)))
 (let ((?x4896 (- (- (* (* (- 6.0) l_0_4_17) l_0_4_19) (* l_0_4_17 l_0_4_17)) (* (* 6.0 l_0_4_18) l_0_4_20))))
 (let ((?x4904 (+ (+ (+ (- ?x4896 ?x4426) (* (* 6.0 l_0_4_2) l_0_4_4)) ?x4429) (* (* 6.0 l_0_4_3) l_0_4_5))))
 (let ((?x4911 (+ (- (- (+ ?x4904 ?x4438) ?x4906) ?x4908) (* (* 2.0 l_0_4_47) l_0_4_49))))
 (= (- (- (+ ?x4911 ?x4912) ?x4914) ?x4916) 0.0))))))))))))))))
(assert
 (let ((?x4289 (* 2.0 l_0_4_63)))
 (let ((?x4290 (* ?x4289 l_0_4_68)))
 (let ((?x4286 (* 2.0 l_0_4_62)))
 (let ((?x4287 (* ?x4286 l_0_4_67)))
 (let ((?x4283 (* 2.0 l_0_4_48)))
 (let ((?x4284 (* ?x4283 l_0_4_53)))
 (let ((?x4280 (* 2.0 l_0_4_47)))
 (let ((?x4281 (* ?x4280 l_0_4_52)))
 (let ((?x4932 (- (* (* (- 6.0) l_0_4_17) l_0_4_22) (* (* 6.0 l_0_4_18) l_0_4_23))))
 (let ((?x4936 (+ (+ ?x4932 (* (* 6.0 l_0_4_2) l_0_4_7)) (* (* 6.0 l_0_4_3) l_0_4_8))))
 (= (- (- (+ (+ ?x4936 ?x4281) ?x4284) ?x4287) ?x4290) 0.0))))))))))))
(assert
 (let ((?x4289 (* 2.0 l_0_4_63)))
 (let ((?x4967 (* ?x4289 l_0_4_72)))
 (let ((?x4286 (* 2.0 l_0_4_62)))
 (let ((?x4965 (* ?x4286 l_0_4_71)))
 (let ((?x4283 (* 2.0 l_0_4_48)))
 (let ((?x4963 (* ?x4283 l_0_4_57)))
 (let ((?x4438 (* l_0_4_3 l_0_4_3)))
 (let ((?x4429 (* l_0_4_2 l_0_4_2)))
 (let ((?x4426 (* l_0_4_18 l_0_4_18)))
 (let ((?x4442 (* l_0_4_17 l_0_4_17)))
 (let ((?x4951 (+ (* (* 6.0 l_0_4_11) l_0_4_2) (* (* 6.0 l_0_4_12) l_0_4_3))))
 (let ((?x4957 (- (+ (- ?x4951 (* (* 6.0 l_0_4_17) l_0_4_26)) ?x4442) (* (* 6.0 l_0_4_18) l_0_4_27))))
 (let ((?x4962 (+ (- (- (+ ?x4957 ?x4426) ?x4429) ?x4438) (* (* 2.0 l_0_4_47) l_0_4_56))))
 (= (- (- (+ ?x4962 ?x4963) ?x4965) ?x4967) 0.0)))))))))))))))
(assert
 (let ((?x5028 (* l_0_4_66 l_0_4_66)))
 (let ((?x5026 (* l_0_4_65 l_0_4_65)))
 (let ((?x5024 (* l_0_4_64 l_0_4_64)))
 (let ((?x4516 (* l_0_4_6 l_0_4_6)))
 (let ((?x5022 (* 3.0 ?x4516)))
 (let ((?x5020 (* l_0_4_51 l_0_4_51)))
 (let ((?x5018 (* l_0_4_50 l_0_4_50)))
 (let ((?x4514 (* l_0_4_5 l_0_4_5)))
 (let ((?x5016 (* 3.0 ?x4514)))
 (let ((?x5014 (* l_0_4_49 l_0_4_49)))
 (let ((?x4512 (* l_0_4_4 l_0_4_4)))
 (let ((?x5012 (* 3.0 ?x4512)))
 (let ((?x4459 (* 2.0 l_0_4_3)))
 (let ((?x4460 (* ?x4459 l_0_4_5)))
 (let ((?x4456 (* 2.0 l_0_4_2)))
 (let ((?x4457 (* ?x4456 l_0_4_4)))
 (let ((?x4453 (* 2.0 l_0_4_18)))
 (let ((?x4454 (* ?x4453 l_0_4_20)))
 (let ((?x4455 (- (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x4454)))
 (let ((?x5001 (- (+ (- ?x4455 (* (* 3.0 l_0_4_19) l_0_4_19)) ?x4457) (* (* 3.0 l_0_4_20) l_0_4_20))))
 (let ((?x5008 (- (+ (- ?x5001 (* (* 3.0 l_0_4_21) l_0_4_21)) ?x4460) (* (* 2.0 l_0_4_32) l_0_4_34))))
 (let ((?x5017 (+ (+ (+ (- ?x5008 (* (* 2.0 l_0_4_33) l_0_4_35)) ?x5012) ?x5014) ?x5016)))
 (= (- (- (- (+ (+ (+ ?x5017 ?x5018) ?x5020) ?x5022) ?x5024) ?x5026) ?x5028) 0.0))))))))))))))))))))))))
(assert
 (let ((?x4327 (* 2.0 l_0_4_66)))
 (let ((?x4328 (* ?x4327 l_0_4_69)))
 (let ((?x4324 (* 2.0 l_0_4_65)))
 (let ((?x4325 (* ?x4324 l_0_4_68)))
 (let ((?x4321 (* 2.0 l_0_4_64)))
 (let ((?x4322 (* ?x4321 l_0_4_67)))
 (let ((?x4318 (* 2.0 l_0_4_51)))
 (let ((?x4319 (* ?x4318 l_0_4_54)))
 (let ((?x4315 (* 2.0 l_0_4_50)))
 (let ((?x4316 (* ?x4315 l_0_4_53)))
 (let ((?x4312 (* 2.0 l_0_4_49)))
 (let ((?x4313 (* ?x4312 l_0_4_52)))
 (let ((?x4459 (* 2.0 l_0_4_3)))
 (let ((?x4479 (* ?x4459 l_0_4_8)))
 (let ((?x4456 (* 2.0 l_0_4_2)))
 (let ((?x4477 (* ?x4456 l_0_4_7)))
 (let ((?x4453 (* 2.0 l_0_4_18)))
 (let ((?x4475 (* ?x4453 l_0_4_23)))
 (let ((?x4476 (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x4475)))
 (let ((?x5057 (- (+ (- ?x4476 (* (* 6.0 l_0_4_19) l_0_4_22)) ?x4477) (* (* 6.0 l_0_4_20) l_0_4_23))))
 (let ((?x5063 (- (+ (- ?x5057 (* (* 6.0 l_0_4_21) l_0_4_24)) ?x4479) (* (* 2.0 l_0_4_32) l_0_4_37))))
 (let ((?x5068 (+ (- ?x5063 (* (* 2.0 l_0_4_33) l_0_4_38)) (* (* 6.0 l_0_4_4) l_0_4_7))))
 (let ((?x5074 (+ (+ (+ (+ ?x5068 ?x4313) (* (* 6.0 l_0_4_5) l_0_4_8)) ?x4316) ?x4319)))
 (let ((?x5080 (- (- (- (+ ?x5074 (* (* 6.0 l_0_4_6) l_0_4_9)) ?x4322) ?x4325) ?x4328)))
 (= ?x5080 0.0))))))))))))))))))))))))))
(assert
 (let ((?x4327 (* 2.0 l_0_4_66)))
 (let ((?x5132 (* ?x4327 l_0_4_73)))
 (let ((?x4324 (* 2.0 l_0_4_65)))
 (let ((?x5130 (* ?x4324 l_0_4_72)))
 (let ((?x4321 (* 2.0 l_0_4_64)))
 (let ((?x5128 (* ?x4321 l_0_4_71)))
 (let ((?x4318 (* 2.0 l_0_4_51)))
 (let ((?x5126 (* ?x4318 l_0_4_58)))
 (let ((?x4315 (* 2.0 l_0_4_50)))
 (let ((?x5124 (* ?x4315 l_0_4_57)))
 (let ((?x4459 (* 2.0 l_0_4_3)))
 (let ((?x4460 (* ?x4459 l_0_4_5)))
 (let ((?x4456 (* 2.0 l_0_4_2)))
 (let ((?x4457 (* ?x4456 l_0_4_4)))
 (let ((?x4453 (* 2.0 l_0_4_18)))
 (let ((?x4490 (* ?x4453 l_0_4_27)))
 (let ((?x4454 (* ?x4453 l_0_4_20)))
 (let ((?x4487 (* 2.0 l_0_4_17)))
 (let ((?x4488 (* ?x4487 l_0_4_26)))
 (let ((?x1497 (* 2.0 l_0_4_12)))
 (let ((?x1498 (* ?x1497 l_0_4_3)))
 (let ((?x1500 (* 2.0 l_0_4_11)))
 (let ((?x1495 (* ?x1500 l_0_4_2)))
 (let ((?x5101 (+ (+ (+ ?x1495 (* (* 6.0 l_0_4_11) l_0_4_4)) ?x1498) (* (* 6.0 l_0_4_12) l_0_4_5))))
 (let ((?x5107 (- (+ (+ ?x5101 (* (* 6.0 l_0_4_13) l_0_4_6)) (* ?x4487 l_0_4_19)) ?x4488)))
 (let ((?x5112 (- (- (- (+ ?x5107 ?x4454) ?x4490) (* (* 6.0 l_0_4_19) l_0_4_26)) ?x4457)))
 (let ((?x5116 (- (- ?x5112 (* (* 6.0 l_0_4_20) l_0_4_27)) (* (* 6.0 l_0_4_21) l_0_4_28))))
 (let ((?x5121 (- (- (- ?x5116 ?x4460) (* (* 2.0 l_0_4_32) l_0_4_41)) (* (* 2.0 l_0_4_33) l_0_4_42))))
 (let ((?x5129 (- (+ (+ (+ ?x5121 (* (* 2.0 l_0_4_49) l_0_4_56)) ?x5124) ?x5126) ?x5128)))
 (= (- (- ?x5129 ?x5130) ?x5132) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x4609 (* l_0_4_9 l_0_4_9)))
 (let ((?x5193 (* 3.0 ?x4609)))
 (let ((?x4607 (* l_0_4_8 l_0_4_8)))
 (let ((?x5191 (* 3.0 ?x4607)))
 (let ((?x4363 (* l_0_4_70 l_0_4_70)))
 (let ((?x4605 (* l_0_4_7 l_0_4_7)))
 (let ((?x5188 (* 3.0 ?x4605)))
 (let ((?x4361 (* l_0_4_69 l_0_4_69)))
 (let ((?x4359 (* l_0_4_68 l_0_4_68)))
 (let ((?x4357 (* l_0_4_67 l_0_4_67)))
 (let ((?x4183 (* 2.0 l_0_4_61)))
 (let ((?x4724 (* ?x4183 l_0_4_62)))
 (let ((?x4355 (* l_0_4_55 l_0_4_55)))
 (let ((?x4353 (* l_0_4_54 l_0_4_54)))
 (let ((?x4351 (* l_0_4_53 l_0_4_53)))
 (let ((?x4343 (* l_0_4_52 l_0_4_52)))
 (let ((?x4180 (* 2.0 l_0_4_46)))
 (let ((?x4722 (* ?x4180 l_0_4_47)))
 (let ((?x4596 (* l_0_4_10 l_0_4_10)))
 (let ((?x5166 (* 3.0 ?x4596)))
 (let ((?x5172 (- (- ?x5166 (* (* 3.0 l_0_4_22) l_0_4_22)) (* (* 3.0 l_0_4_23) l_0_4_23))))
 (let ((?x5178 (- (- ?x5172 (* (* 3.0 l_0_4_24) l_0_4_24)) (* (* 3.0 l_0_4_25) l_0_4_25))))
 (let ((?x5185 (- (+ (+ (+ (+ (+ (- ?x5178 ?x4722) ?x4343) ?x4351) ?x4353) ?x4355) ?x4724) ?x4357)))
 (= (+ (+ (- (+ (- (- ?x5185 ?x4359) ?x4361) ?x5188) ?x4363) ?x5191) ?x5193) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x4411 (* (* 2.0 l_0_4_70) l_0_4_74)))
 (let ((?x4408 (* (* 2.0 l_0_4_69) l_0_4_73)))
 (let ((?x4405 (* (* 2.0 l_0_4_68) l_0_4_72)))
 (let ((?x4402 (* (* 2.0 l_0_4_67) l_0_4_71)))
 (let ((?x4399 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x4396 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x4393 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x4390 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x4459 (* 2.0 l_0_4_3)))
 (let ((?x4479 (* ?x4459 l_0_4_8)))
 (let ((?x4456 (* 2.0 l_0_4_2)))
 (let ((?x4477 (* ?x4456 l_0_4_7)))
 (let ((?x4453 (* 2.0 l_0_4_18)))
 (let ((?x4475 (* ?x4453 l_0_4_23)))
 (let ((?x2868 (+ (* (* 6.0 l_0_4_10) l_0_4_14) (* (* 6.0 l_0_4_11) l_0_4_7))))
 (let ((?x2842 (+ (+ ?x2868 (* (* 6.0 l_0_4_12) l_0_4_8)) (* (* 6.0 l_0_4_13) l_0_4_9))))
 (let ((?x2815 (- (- (+ (+ ?x2842 (* (* 2.0 l_0_4_17) l_0_4_22)) ?x4475) ?x4477) (* (* 6.0 l_0_4_22) l_0_4_26))))
 (let ((?x5207 (- (- ?x2815 (* (* 6.0 l_0_4_23) l_0_4_27)) (* (* 6.0 l_0_4_24) l_0_4_28))))
 (let ((?x5213 (+ (+ (- (- ?x5207 (* (* 6.0 l_0_4_25) l_0_4_29)) ?x4479) ?x4390) ?x4393)))
 (= (- (- (- (- (+ (+ ?x5213 ?x4396) ?x4399) ?x4402) ?x4405) ?x4408) ?x4411) 0.0)))))))))))))))))))))
(assert
 (let ((?x5268 (* l_0_4_75 l_0_4_75)))
 (let ((?x5266 (* l_0_4_74 l_0_4_74)))
 (let ((?x5264 (* l_0_4_73 l_0_4_73)))
 (let ((?x5262 (* l_0_4_72 l_0_4_72)))
 (let ((?x5260 (* l_0_4_71 l_0_4_71)))
 (let ((?x5258 (* l_0_4_60 l_0_4_60)))
 (let ((?x5256 (* l_0_4_59 l_0_4_59)))
 (let ((?x5254 (* l_0_4_58 l_0_4_58)))
 (let ((?x5252 (* l_0_4_57 l_0_4_57)))
 (let ((?x5250 (* l_0_4_56 l_0_4_56)))
 (let ((?x4453 (* 2.0 l_0_4_18)))
 (let ((?x4490 (* ?x4453 l_0_4_27)))
 (let ((?x4487 (* 2.0 l_0_4_17)))
 (let ((?x4488 (* ?x4487 l_0_4_26)))
 (let ((?x4669 (* l_0_4_15 l_0_4_15)))
 (let ((?x2977 (* 3.0 ?x4669)))
 (let ((?x4667 (* l_0_4_14 l_0_4_14)))
 (let ((?x2978 (* 3.0 ?x4667)))
 (let ((?x4665 (* l_0_4_13 l_0_4_13)))
 (let ((?x3001 (* 3.0 ?x4665)))
 (let ((?x4663 (* l_0_4_12 l_0_4_12)))
 (let ((?x3004 (* 3.0 ?x4663)))
 (let ((?x1497 (* 2.0 l_0_4_12)))
 (let ((?x1498 (* ?x1497 l_0_4_3)))
 (let ((?x4662 (* l_0_4_11 l_0_4_11)))
 (let ((?x2980 (* 3.0 ?x4662)))
 (let ((?x3002 (+ (+ (- (+ (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x2980) ?x1498) ?x3004) ?x3001)))
 (let ((?x5237 (- (+ (+ (+ (+ ?x3002 ?x2978) ?x2977) ?x4488) ?x4490) (* (* 3.0 l_0_4_26) l_0_4_26))))
 (let ((?x5243 (- (- ?x5237 (* (* 3.0 l_0_4_27) l_0_4_27)) (* (* 3.0 l_0_4_28) l_0_4_28))))
 (let ((?x5249 (- (- ?x5243 (* (* 3.0 l_0_4_29) l_0_4_29)) (* (* 3.0 l_0_4_30) l_0_4_30))))
 (let ((?x5263 (- (- (+ (+ (+ (+ (+ ?x5249 ?x5250) ?x5252) ?x5254) ?x5256) ?x5258) ?x5260) ?x5262)))
 (= (- (- (- ?x5263 ?x5264) ?x5266) ?x5268) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x5293 (* l_0_4_96 l_0_4_96)))
 (let ((?x5291 (* l_0_4_95 l_0_4_95)))
 (let ((?x5289 (* l_0_4_94 l_0_4_94)))
 (let ((?x5287 (* l_0_4_81 l_0_4_81)))
 (let ((?x5285 (* l_0_4_80 l_0_4_80)))
 (let ((?x5283 (* l_0_4_79 l_0_4_79)))
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x1326 (* ?x4277 l_0_4_19)))
 (let ((?x4275 (* 2.0 l_0_4_1)))
 (let ((?x1324 (* ?x4275 l_0_4_4)))
 (let ((?x4306 (- ?x1324 ?x1326)))
 (let ((?x5288 (- (- (- (- ?x4306 (* (* 2.0 l_0_4_31) l_0_4_34)) ?x5283) ?x5285) ?x5287)))
 (= (- (- (- ?x5288 ?x5289) ?x5291) ?x5293) 0.0))))))))))))))
(assert
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x1373 (* ?x4277 l_0_4_22)))
 (let ((?x1375 (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x1373)))
 (let ((?x3177 (- (- ?x1375 (* (* 2.0 l_0_4_31) l_0_4_37)) (* (* 2.0 l_0_4_79) l_0_4_82))))
 (let ((?x5307 (- (- ?x3177 (* (* 2.0 l_0_4_80) l_0_4_83)) (* (* 2.0 l_0_4_81) l_0_4_84))))
 (let ((?x5313 (- (- ?x5307 (* (* 2.0 l_0_4_94) l_0_4_97)) (* (* 2.0 l_0_4_95) l_0_4_98))))
 (= (- ?x5313 (* (* 2.0 l_0_4_96) l_0_4_99)) 0.0))))))))
(assert
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x4387 (* ?x4277 l_0_4_26)))
 (let ((?x1326 (* ?x4277 l_0_4_19)))
 (let ((?x4275 (* 2.0 l_0_4_1)))
 (let ((?x1324 (* ?x4275 l_0_4_4)))
 (let ((?x1416 (* ?x4275 l_0_4_11)))
 (let ((?x5346 (- (- (- ?x1416 ?x1324) (* (* 2.0 l_0_4_101) l_0_4_94)) (* (* 2.0 l_0_4_102) l_0_4_95))))
 (let ((?x5353 (- (- (+ (- ?x5346 (* (* 2.0 l_0_4_103) l_0_4_96)) ?x1326) ?x4387) (* (* 2.0 l_0_4_31) l_0_4_41))))
 (let ((?x5357 (- (- ?x5353 (* (* 2.0 l_0_4_79) l_0_4_86)) (* (* 2.0 l_0_4_80) l_0_4_87))))
 (= (- ?x5357 (* (* 2.0 l_0_4_81) l_0_4_88)) 0.0)))))))))))
(assert
 (let ((?x4516 (* l_0_4_6 l_0_4_6)))
 (let ((?x4514 (* l_0_4_5 l_0_4_5)))
 (let ((?x4512 (* l_0_4_4 l_0_4_4)))
 (let ((?x5375 (* l_0_4_36 l_0_4_36)))
 (let ((?x5373 (* l_0_4_35 l_0_4_35)))
 (let ((?x3356 (* l_0_4_34 l_0_4_34)))
 (let ((?x4510 (* l_0_4_21 l_0_4_21)))
 (let ((?x4511 (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x4510)))
 (= (+ (+ (+ (- (- (- ?x4511 ?x3356) ?x5373) ?x5375) ?x4512) ?x4514) ?x4516) 0.0))))))))))
(assert
 (let ((?x4545 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4542 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4539 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4535 (* 2.0 l_0_4_21)))
 (let ((?x4536 (* ?x4535 l_0_4_24)))
 (let ((?x4532 (* 2.0 l_0_4_20)))
 (let ((?x4533 (* ?x4532 l_0_4_23)))
 (let ((?x4537 (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x4533) ?x4536)))
 (let ((?x5397 (- (- ?x4537 (* (* 2.0 l_0_4_34) l_0_4_37)) (* (* 2.0 l_0_4_35) l_0_4_38))))
 (let ((?x5403 (+ (+ (+ (- ?x5397 (* (* 2.0 l_0_4_36) l_0_4_39)) ?x4539) ?x4542) ?x4545)))
 (= ?x5403 0.0))))))))))))
(assert
 (let ((?x4516 (* l_0_4_6 l_0_4_6)))
 (let ((?x4514 (* l_0_4_5 l_0_4_5)))
 (let ((?x4512 (* l_0_4_4 l_0_4_4)))
 (let ((?x4510 (* l_0_4_21 l_0_4_21)))
 (let ((?x4535 (* 2.0 l_0_4_21)))
 (let ((?x4574 (* ?x4535 l_0_4_28)))
 (let ((?x4508 (* l_0_4_20 l_0_4_20)))
 (let ((?x4532 (* 2.0 l_0_4_20)))
 (let ((?x4572 (* ?x4532 l_0_4_27)))
 (let ((?x1538 (* l_0_4_19 l_0_4_19)))
 (let ((?x4569 (* 2.0 l_0_4_19)))
 (let ((?x4570 (* ?x4569 l_0_4_26)))
 (let ((?x4560 (* 2.0 l_0_4_13)))
 (let ((?x4567 (* ?x4560 l_0_4_6)))
 (let ((?x1497 (* 2.0 l_0_4_12)))
 (let ((?x1567 (* ?x1497 l_0_4_5)))
 (let ((?x4571 (- (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x1567) ?x4567) ?x4570)))
 (let ((?x5425 (- (+ (- (+ (- (+ ?x4571 ?x1538) ?x4572) ?x4508) ?x4574) ?x4510) (* (* 2.0 l_0_4_34) l_0_4_41))))
 (let ((?x5429 (- (- ?x5425 (* (* 2.0 l_0_4_35) l_0_4_42)) (* (* 2.0 l_0_4_36) l_0_4_43))))
 (= (- (- (- ?x5429 ?x4512) ?x4514) ?x4516) 0.0)))))))))))))))))))))
(assert
 (let ((?x4609 (* l_0_4_9 l_0_4_9)))
 (let ((?x4607 (* l_0_4_8 l_0_4_8)))
 (let ((?x4605 (* l_0_4_7 l_0_4_7)))
 (let ((?x4183 (* 2.0 l_0_4_61)))
 (let ((?x4762 (* ?x4183 l_0_4_64)))
 (let ((?x4180 (* 2.0 l_0_4_46)))
 (let ((?x4760 (* ?x4180 l_0_4_49)))
 (let ((?x5452 (* l_0_4_40 l_0_4_40)))
 (let ((?x5450 (* l_0_4_39 l_0_4_39)))
 (let ((?x5448 (* l_0_4_38 l_0_4_38)))
 (let ((?x3429 (* l_0_4_37 l_0_4_37)))
 (let ((?x4603 (* l_0_4_25 l_0_4_25)))
 (let ((?x4601 (* l_0_4_24 l_0_4_24)))
 (let ((?x4599 (* l_0_4_23 l_0_4_23)))
 (let ((?x4602 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x4599) ?x4601)))
 (let ((?x4604 (- ?x4602 ?x4603)))
 (let ((?x5456 (+ (+ (- (- (- (- (- ?x4604 ?x3429) ?x5448) ?x5450) ?x5452) ?x4760) ?x4762) ?x4605)))
 (= (+ (+ ?x5456 ?x4607) ?x4609) 0.0)))))))))))))))))))
(assert
 (let ((?x4545 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4542 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4539 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4640 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x4637 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x4634 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x4631 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x4535 (* 2.0 l_0_4_21)))
 (let ((?x4536 (* ?x4535 l_0_4_24)))
 (let ((?x4532 (* 2.0 l_0_4_20)))
 (let ((?x4533 (* ?x4532 l_0_4_23)))
 (let ((?x4560 (* 2.0 l_0_4_13)))
 (let ((?x4628 (* ?x4560 l_0_4_9)))
 (let ((?x1497 (* 2.0 l_0_4_12)))
 (let ((?x4626 (* ?x1497 l_0_4_8)))
 (let ((?x1500 (* 2.0 l_0_4_11)))
 (let ((?x4624 (* ?x1500 l_0_4_7)))
 (let ((?x4629 (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x4624) ?x4626) ?x4628)))
 (let ((?x5479 (- (+ (+ (+ ?x4629 (* (* 2.0 l_0_4_19) l_0_4_22)) ?x4533) ?x4536) ?x4631)))
 (let ((?x5485 (- (- (- (- ?x5479 ?x4634) ?x4637) ?x4640) (* (* 2.0 l_0_4_37) l_0_4_41))))
 (let ((?x5491 (- (- ?x5485 (* (* 2.0 l_0_4_38) l_0_4_42)) (* (* 2.0 l_0_4_39) l_0_4_43))))
 (let ((?x5497 (- (- (- (- ?x5491 ?x4539) (* (* 2.0 l_0_4_40) l_0_4_44)) ?x4542) ?x4545)))
 (= ?x5497 0.0))))))))))))))))))))))))
(assert
 (let ((?x5537 (* l_0_4_45 l_0_4_45)))
 (let ((?x5535 (* l_0_4_44 l_0_4_44)))
 (let ((?x5533 (* l_0_4_43 l_0_4_43)))
 (let ((?x5531 (* l_0_4_42 l_0_4_42)))
 (let ((?x5529 (* l_0_4_41 l_0_4_41)))
 (let ((?x4679 (* l_0_4_30 l_0_4_30)))
 (let ((?x4677 (* l_0_4_29 l_0_4_29)))
 (let ((?x4675 (* l_0_4_28 l_0_4_28)))
 (let ((?x4673 (* l_0_4_27 l_0_4_27)))
 (let ((?x4671 (* l_0_4_26 l_0_4_26)))
 (let ((?x4535 (* 2.0 l_0_4_21)))
 (let ((?x4574 (* ?x4535 l_0_4_28)))
 (let ((?x4532 (* 2.0 l_0_4_20)))
 (let ((?x4572 (* ?x4532 l_0_4_27)))
 (let ((?x4569 (* 2.0 l_0_4_19)))
 (let ((?x4570 (* ?x4569 l_0_4_26)))
 (let ((?x4669 (* l_0_4_15 l_0_4_15)))
 (let ((?x4667 (* l_0_4_14 l_0_4_14)))
 (let ((?x4665 (* l_0_4_13 l_0_4_13)))
 (let ((?x4560 (* 2.0 l_0_4_13)))
 (let ((?x4567 (* ?x4560 l_0_4_6)))
 (let ((?x4663 (* l_0_4_12 l_0_4_12)))
 (let ((?x1497 (* 2.0 l_0_4_12)))
 (let ((?x1567 (* ?x1497 l_0_4_5)))
 (let ((?x5515 (- (+ (* (* (- 2.0) l_0_4_11) l_0_4_4) (* l_0_4_11 l_0_4_11)) ?x1567)))
 (let ((?x5522 (+ (+ (+ (+ (+ (- (+ ?x5515 ?x4663) ?x4567) ?x4665) ?x4667) ?x4669) ?x4570) ?x4572)))
 (let ((?x5530 (- (- (- (- (- (- (+ ?x5522 ?x4574) ?x4671) ?x4673) ?x4675) ?x4677) ?x4679) ?x5529)))
 (= (- (- (- (- ?x5530 ?x5531) ?x5533) ?x5535) ?x5537) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x1373 (* ?x4277 l_0_4_22)))
 (let ((?x5557 (- (* (* (- 2.0) l_0_4_1) l_0_4_7) (* (* 2.0 l_0_4_100) l_0_4_104))))
 (let ((?x5561 (- (- ?x5557 (* (* 2.0 l_0_4_101) l_0_4_97)) (* (* 2.0 l_0_4_102) l_0_4_98))))
 (let ((?x5567 (- (+ (- ?x5561 (* (* 2.0 l_0_4_103) l_0_4_99)) ?x1373) (* (* 2.0 l_0_4_82) l_0_4_86))))
 (let ((?x5573 (- (- ?x5567 (* (* 2.0 l_0_4_83) l_0_4_87)) (* (* 2.0 l_0_4_84) l_0_4_88))))
 (= (- ?x5573 (* (* 2.0 l_0_4_85) l_0_4_89)) 0.0))))))))
(assert
 (let ((?x5611 (* l_0_4_90 l_0_4_90)))
 (let ((?x5609 (* l_0_4_89 l_0_4_89)))
 (let ((?x5607 (* l_0_4_88 l_0_4_88)))
 (let ((?x5605 (* l_0_4_87 l_0_4_87)))
 (let ((?x5603 (* l_0_4_86 l_0_4_86)))
 (let ((?x4277 (* 2.0 l_0_4_16)))
 (let ((?x4387 (* ?x4277 l_0_4_26)))
 (let ((?x5600 (* l_0_4_105 l_0_4_105)))
 (let ((?x5598 (* l_0_4_104 l_0_4_104)))
 (let ((?x5596 (* l_0_4_103 l_0_4_103)))
 (let ((?x5594 (* l_0_4_102 l_0_4_102)))
 (let ((?x5595 (- (- (* (* (- 2.0) l_0_4_1) l_0_4_11) (* l_0_4_101 l_0_4_101)) ?x5594)))
 (let ((?x5608 (- (- (- (+ (- (- (- ?x5595 ?x5596) ?x5598) ?x5600) ?x4387) ?x5603) ?x5605) ?x5607)))
 (= (- (- ?x5608 ?x5609) ?x5611) 0.0)))))))))))))))
(assert
 (let ((?x4609 (* l_0_4_9 l_0_4_9)))
 (let ((?x4607 (* l_0_4_8 l_0_4_8)))
 (let ((?x4605 (* l_0_4_7 l_0_4_7)))
 (let ((?x4183 (* 2.0 l_0_4_61)))
 (let ((?x4828 (* ?x4183 l_0_4_71)))
 (let ((?x4180 (* 2.0 l_0_4_46)))
 (let ((?x1878 (* ?x4180 l_0_4_56)))
 (let ((?x4603 (* l_0_4_25 l_0_4_25)))
 (let ((?x4601 (* l_0_4_24 l_0_4_24)))
 (let ((?x4599 (* l_0_4_23 l_0_4_23)))
 (let ((?x5636 (+ (+ (+ (* (- l_0_4_10) l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x4599) ?x4601)))
 (= (- (- (- (+ (- (+ ?x5636 ?x4603) ?x1878) ?x4828) ?x4605) ?x4607) ?x4609) 0.0)))))))))))))
(assert
 (let ((?x4640 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x4637 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x4634 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x4631 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x4560 (* 2.0 l_0_4_13)))
 (let ((?x4628 (* ?x4560 l_0_4_9)))
 (let ((?x1497 (* 2.0 l_0_4_12)))
 (let ((?x4626 (* ?x1497 l_0_4_8)))
 (let ((?x1500 (* 2.0 l_0_4_11)))
 (let ((?x4624 (* ?x1500 l_0_4_7)))
 (let ((?x5654 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x4624) ?x4626) ?x4628) ?x4631)))
 (= (+ (+ (+ ?x5654 ?x4634) ?x4637) ?x4640) 0.0)))))))))))))
(assert
 (let ((?x4679 (* l_0_4_30 l_0_4_30)))
 (let ((?x4677 (* l_0_4_29 l_0_4_29)))
 (let ((?x4675 (* l_0_4_28 l_0_4_28)))
 (let ((?x4673 (* l_0_4_27 l_0_4_27)))
 (let ((?x4671 (* l_0_4_26 l_0_4_26)))
 (let ((?x4669 (* l_0_4_15 l_0_4_15)))
 (let ((?x4667 (* l_0_4_14 l_0_4_14)))
 (let ((?x4665 (* l_0_4_13 l_0_4_13)))
 (let ((?x3752 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x4665) ?x4667)))
 (= (+ (+ (+ (+ (+ (- ?x3752 ?x4669) ?x4671) ?x4673) ?x4675) ?x4677) ?x4679) 0.0)))))))))))
(assert
 (let ((?x4872 (* l_0_4_63 l_0_4_63)))
 (let ((?x4870 (* l_0_4_62 l_0_4_62)))
 (let ((?x5677 (+ (+ (- (* (- l_0_4_47) l_0_4_47) (* l_0_4_48 l_0_4_48)) ?x4870) ?x4872)))
 (= ?x5677 0.0)))))
(assert
 (let ((?x4289 (* 2.0 l_0_4_63)))
 (let ((?x4916 (* ?x4289 l_0_4_65)))
 (let ((?x4286 (* 2.0 l_0_4_62)))
 (let ((?x4914 (* ?x4286 l_0_4_64)))
 (let ((?x4283 (* 2.0 l_0_4_48)))
 (let ((?x4912 (* ?x4283 l_0_4_50)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_47) l_0_4_49) ?x4912) ?x4914) ?x4916) 0.0))))))))
(assert
 (let ((?x4289 (* 2.0 l_0_4_63)))
 (let ((?x4967 (* ?x4289 l_0_4_72)))
 (let ((?x4286 (* 2.0 l_0_4_62)))
 (let ((?x4965 (* ?x4286 l_0_4_71)))
 (let ((?x4283 (* 2.0 l_0_4_48)))
 (let ((?x4963 (* ?x4283 l_0_4_57)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_47) l_0_4_56) ?x4963) ?x4965) ?x4967) 0.0))))))))
(assert
 (let ((?x5028 (* l_0_4_66 l_0_4_66)))
 (let ((?x5026 (* l_0_4_65 l_0_4_65)))
 (let ((?x5024 (* l_0_4_64 l_0_4_64)))
 (let ((?x5020 (* l_0_4_51 l_0_4_51)))
 (let ((?x5684 (+ (- (- (* (- l_0_4_49) l_0_4_49) (* l_0_4_50 l_0_4_50)) ?x5020) ?x5024)))
 (= (+ (+ ?x5684 ?x5026) ?x5028) 0.0)))))))
(assert
 (let ((?x4327 (* 2.0 l_0_4_66)))
 (let ((?x5132 (* ?x4327 l_0_4_73)))
 (let ((?x4324 (* 2.0 l_0_4_65)))
 (let ((?x5130 (* ?x4324 l_0_4_72)))
 (let ((?x4321 (* 2.0 l_0_4_64)))
 (let ((?x5128 (* ?x4321 l_0_4_71)))
 (let ((?x4318 (* 2.0 l_0_4_51)))
 (let ((?x5126 (* ?x4318 l_0_4_58)))
 (let ((?x4315 (* 2.0 l_0_4_50)))
 (let ((?x5124 (* ?x4315 l_0_4_57)))
 (let ((?x5696 (+ (+ (- (- (* (* (- 2.0) l_0_4_49) l_0_4_56) ?x5124) ?x5126) ?x5128) ?x5130)))
 (= (+ ?x5696 ?x5132) 0.0)))))))))))))
(assert
 (let ((?x5268 (* l_0_4_75 l_0_4_75)))
 (let ((?x5266 (* l_0_4_74 l_0_4_74)))
 (let ((?x5264 (* l_0_4_73 l_0_4_73)))
 (let ((?x5262 (* l_0_4_72 l_0_4_72)))
 (let ((?x5260 (* l_0_4_71 l_0_4_71)))
 (let ((?x5258 (* l_0_4_60 l_0_4_60)))
 (let ((?x5256 (* l_0_4_59 l_0_4_59)))
 (let ((?x5254 (* l_0_4_58 l_0_4_58)))
 (let ((?x5706 (- (- (- (* (- l_0_4_56) l_0_4_56) (* l_0_4_57 l_0_4_57)) ?x5254) ?x5256)))
 (= (+ (+ (+ (+ (+ (- ?x5706 ?x5258) ?x5260) ?x5262) ?x5264) ?x5266) ?x5268) 0.0)))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (>= l_0_4_76 0.0))
(assert
 (>= l_0_4_78 0.0))
(assert
 (>= l_0_4_81 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_91 0.0))
(assert
 (>= l_0_4_93 0.0))
(assert
 (>= l_0_4_96 0.0))
(assert
 (>= l_0_4_100 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (= (* (- l_0_5_76) l_0_5_76) 0.0))
(assert
 (let ((?x5765 (* 2.0 l_0_5_61)))
 (let ((?x5766 (* ?x5765 l_0_5_67)))
 (let ((?x5762 (* 2.0 l_0_5_46)))
 (let ((?x5763 (* ?x5762 l_0_5_52)))
 (let ((?x5760 (* l_0_5_16 l_0_5_16)))
 (let ((?x5758 (* l_0_5_1 l_0_5_1)))
 (let ((?x5761 (- ?x5758 ?x5760)))
 (= (- (- (+ ?x5761 ?x5763) ?x5766) 1.0) 0.0)))))))))
(assert
 (let ((?x5781 (* l_0_5_61 l_0_5_61)))
 (let ((?x5779 (* l_0_5_46 l_0_5_46)))
 (let ((?x5758 (* l_0_5_1 l_0_5_1)))
 (let ((?x2654 (* 3.0 ?x5758)))
 (let ((?x5785 (- (+ (- (- ?x2654 (* (* 3.0 l_0_5_16) l_0_5_16)) ?x5779) ?x5781) (* (* 2.0 l_0_5_76) l_0_5_77))))
 (= (- ?x5785 3.0) 0.0)))))))
(assert
 (let ((?x5800 (* l_0_5_31 l_0_5_31)))
 (let ((?x5760 (* l_0_5_16 l_0_5_16)))
 (let ((?x5758 (* l_0_5_1 l_0_5_1)))
 (let ((?x5761 (- ?x5758 ?x5760)))
 (= (- (- (- ?x5761 ?x5800) (* (* 2.0 l_0_5_76) l_0_5_79)) 1.0) 0.0))))))
(assert
 (let ((?x5816 (- (+ (* (- l_0_5_1) l_0_5_1) (* l_0_5_16 l_0_5_16)) (* (* 2.0 l_0_5_76) l_0_5_86))))
 (= (+ ?x5816 1.0) 0.0)))
(assert
 (let ((?x5840 (* 2.0 l_0_5_63)))
 (let ((?x5841 (* ?x5840 l_0_5_68)))
 (let ((?x5837 (* 2.0 l_0_5_62)))
 (let ((?x5838 (* ?x5837 l_0_5_67)))
 (let ((?x5834 (* 2.0 l_0_5_48)))
 (let ((?x5835 (* ?x5834 l_0_5_53)))
 (let ((?x5831 (* 2.0 l_0_5_47)))
 (let ((?x5832 (* ?x5831 l_0_5_52)))
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5829 (* ?x5828 l_0_5_17)))
 (let ((?x3927 (* 2.0 l_0_5_1)))
 (let ((?x5827 (* ?x3927 l_0_5_2)))
 (= (- (- (+ (+ (- ?x5827 ?x5829) ?x5832) ?x5835) ?x5838) ?x5841) 0.0))))))))))))))
(assert
 (let ((?x5881 (* 2.0 l_0_5_66)))
 (let ((?x5882 (* ?x5881 l_0_5_69)))
 (let ((?x5878 (* 2.0 l_0_5_65)))
 (let ((?x5879 (* ?x5878 l_0_5_68)))
 (let ((?x5875 (* 2.0 l_0_5_64)))
 (let ((?x5876 (* ?x5875 l_0_5_67)))
 (let ((?x5872 (* 2.0 l_0_5_51)))
 (let ((?x5873 (* ?x5872 l_0_5_54)))
 (let ((?x5869 (* 2.0 l_0_5_50)))
 (let ((?x5870 (* ?x5869 l_0_5_53)))
 (let ((?x5866 (* 2.0 l_0_5_49)))
 (let ((?x5867 (* ?x5866 l_0_5_52)))
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5864 (* ?x5828 l_0_5_19)))
 (let ((?x3927 (* 2.0 l_0_5_1)))
 (let ((?x5863 (* ?x3927 l_0_5_4)))
 (let ((?x5865 (- ?x5863 ?x5864)))
 (= (- (- (- (+ (+ (+ ?x5865 ?x5867) ?x5870) ?x5873) ?x5876) ?x5879) ?x5882) 0.0)))))))))))))))))))
(assert
 (let ((?x5921 (* l_0_5_70 l_0_5_70)))
 (let ((?x5919 (* l_0_5_69 l_0_5_69)))
 (let ((?x5917 (* l_0_5_68 l_0_5_68)))
 (let ((?x5915 (* l_0_5_67 l_0_5_67)))
 (let ((?x5913 (* l_0_5_55 l_0_5_55)))
 (let ((?x5911 (* l_0_5_54 l_0_5_54)))
 (let ((?x5909 (* l_0_5_53 l_0_5_53)))
 (let ((?x5907 (* l_0_5_52 l_0_5_52)))
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5905 (* ?x5828 l_0_5_22)))
 (let ((?x5906 (- (* (* 2.0 l_0_5_1) l_0_5_7) ?x5905)))
 (let ((?x5920 (- (- (- (+ (+ (+ (+ ?x5906 ?x5907) ?x5909) ?x5911) ?x5913) ?x5915) ?x5917) ?x5919)))
 (= (- ?x5920 ?x5921) 0.0))))))))))))))
(assert
 (let ((?x5967 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x5964 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x5961 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x5958 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x5955 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x5952 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x5949 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x5946 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5943 (* ?x5828 l_0_5_26)))
 (let ((?x3927 (* 2.0 l_0_5_1)))
 (let ((?x5942 (* ?x3927 l_0_5_11)))
 (let ((?x5962 (- (- (+ (+ (+ (+ (- ?x5942 ?x5943) ?x5946) ?x5949) ?x5952) ?x5955) ?x5958) ?x5961)))
 (= (- (- ?x5962 ?x5964) ?x5967) 0.0)))))))))))))))
(assert
 (let ((?x6000 (* l_0_5_3 l_0_5_3)))
 (let ((?x5998 (* l_0_5_2 l_0_5_2)))
 (let ((?x6001 (+ (+ (- (* (- l_0_5_17) l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x5998) ?x6000)))
 (= ?x6001 0.0)))))
(assert
 (let ((?x6017 (* 2.0 l_0_5_3)))
 (let ((?x6018 (* ?x6017 l_0_5_5)))
 (let ((?x6014 (* 2.0 l_0_5_2)))
 (let ((?x6015 (* ?x6014 l_0_5_4)))
 (let ((?x6011 (* 2.0 l_0_5_18)))
 (let ((?x6012 (* ?x6011 l_0_5_20)))
 (let ((?x6013 (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x6012)))
 (= (+ (+ ?x6013 ?x6015) ?x6018) 0.0)))))))))
(assert
 (let ((?x6017 (* 2.0 l_0_5_3)))
 (let ((?x6037 (* ?x6017 l_0_5_8)))
 (let ((?x6014 (* 2.0 l_0_5_2)))
 (let ((?x6035 (* ?x6014 l_0_5_7)))
 (let ((?x6011 (* 2.0 l_0_5_18)))
 (let ((?x6033 (* ?x6011 l_0_5_23)))
 (let ((?x6034 (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x6033)))
 (= (+ (+ ?x6034 ?x6035) ?x6037) 0.0)))))))))
(assert
 (let ((?x6011 (* 2.0 l_0_5_18)))
 (let ((?x6052 (* ?x6011 l_0_5_27)))
 (let ((?x6049 (* 2.0 l_0_5_17)))
 (let ((?x6050 (* ?x6049 l_0_5_26)))
 (let ((?x4052 (* 2.0 l_0_5_12)))
 (let ((?x6047 (* ?x4052 l_0_5_3)))
 (let ((?x4048 (* 2.0 l_0_5_11)))
 (let ((?x4051 (* ?x4048 l_0_5_2)))
 (= (- (- (+ ?x4051 ?x6047) ?x6050) ?x6052) 0.0))))))))))
(assert
 (let ((?x6080 (* l_0_5_6 l_0_5_6)))
 (let ((?x6078 (* l_0_5_5 l_0_5_5)))
 (let ((?x6076 (* l_0_5_4 l_0_5_4)))
 (let ((?x6074 (* l_0_5_21 l_0_5_21)))
 (let ((?x6075 (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6074)))
 (= (+ (+ (+ ?x6075 ?x6076) ?x6078) ?x6080) 0.0)))))))
(assert
 (let ((?x6102 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6099 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6096 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6092 (* 2.0 l_0_5_21)))
 (let ((?x6093 (* ?x6092 l_0_5_24)))
 (let ((?x6089 (* 2.0 l_0_5_20)))
 (let ((?x6090 (* ?x6089 l_0_5_23)))
 (let ((?x6094 (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x6090) ?x6093)))
 (= (+ (+ (+ ?x6094 ?x6096) ?x6099) ?x6102) 0.0))))))))))
(assert
 (let ((?x6092 (* 2.0 l_0_5_21)))
 (let ((?x6132 (* ?x6092 l_0_5_28)))
 (let ((?x6089 (* 2.0 l_0_5_20)))
 (let ((?x6130 (* ?x6089 l_0_5_27)))
 (let ((?x6127 (* 2.0 l_0_5_19)))
 (let ((?x6128 (* ?x6127 l_0_5_26)))
 (let ((?x6124 (* 2.0 l_0_5_13)))
 (let ((?x6125 (* ?x6124 l_0_5_6)))
 (let ((?x4052 (* 2.0 l_0_5_12)))
 (let ((?x6122 (* ?x4052 l_0_5_5)))
 (let ((?x6129 (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x6122) ?x6125) ?x6128)))
 (= (- (- ?x6129 ?x6130) ?x6132) 0.0)))))))))))))
(assert
 (let ((?x6164 (* l_0_5_9 l_0_5_9)))
 (let ((?x6162 (* l_0_5_8 l_0_5_8)))
 (let ((?x6160 (* l_0_5_7 l_0_5_7)))
 (let ((?x6158 (* l_0_5_25 l_0_5_25)))
 (let ((?x6156 (* l_0_5_24 l_0_5_24)))
 (let ((?x6154 (* l_0_5_23 l_0_5_23)))
 (let ((?x6157 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6154) ?x6156)))
 (let ((?x6159 (- ?x6157 ?x6158)))
 (= (+ (+ (+ ?x6159 ?x6160) ?x6162) ?x6164) 0.0))))))))))
(assert
 (let ((?x6189 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6186 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6183 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6180 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6124 (* 2.0 l_0_5_13)))
 (let ((?x6177 (* ?x6124 l_0_5_9)))
 (let ((?x4052 (* 2.0 l_0_5_12)))
 (let ((?x6175 (* ?x4052 l_0_5_8)))
 (let ((?x4048 (* 2.0 l_0_5_11)))
 (let ((?x6173 (* ?x4048 l_0_5_7)))
 (let ((?x6178 (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x6173) ?x6175) ?x6177)))
 (= (- (- (- (- ?x6178 ?x6180) ?x6183) ?x6186) ?x6189) 0.0)))))))))))))
(assert
 (let ((?x6240 (* l_0_5_30 l_0_5_30)))
 (let ((?x6238 (* l_0_5_29 l_0_5_29)))
 (let ((?x6236 (* l_0_5_28 l_0_5_28)))
 (let ((?x6234 (* l_0_5_27 l_0_5_27)))
 (let ((?x6232 (* l_0_5_26 l_0_5_26)))
 (let ((?x6230 (* l_0_5_15 l_0_5_15)))
 (let ((?x6228 (* l_0_5_14 l_0_5_14)))
 (let ((?x6226 (* l_0_5_13 l_0_5_13)))
 (let ((?x6229 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6226) ?x6228)))
 (= (- (- (- (- (- (+ ?x6229 ?x6230) ?x6232) ?x6234) ?x6236) ?x6238) ?x6240) 0.0)))))))))))
(assert
 (let ((?x6268 (* l_0_5_78 l_0_5_78)))
 (let ((?x6266 (* l_0_5_77 l_0_5_77)))
 (let ((?x5765 (* 2.0 l_0_5_61)))
 (let ((?x6264 (* ?x5765 l_0_5_62)))
 (let ((?x5762 (* 2.0 l_0_5_46)))
 (let ((?x6262 (* ?x5762 l_0_5_47)))
 (let ((?x6261 (- (* (* 6.0 l_0_5_1) l_0_5_2) (* (* 6.0 l_0_5_16) l_0_5_17))))
 (= (- (- (+ (- ?x6261 ?x6262) ?x6264) ?x6266) ?x6268) 0.0)))))))))
(assert
 (let ((?x5765 (* 2.0 l_0_5_61)))
 (let ((?x6295 (* ?x5765 l_0_5_64)))
 (let ((?x5762 (* 2.0 l_0_5_46)))
 (let ((?x6293 (* ?x5762 l_0_5_49)))
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5829 (* ?x5828 l_0_5_17)))
 (let ((?x3927 (* 2.0 l_0_5_1)))
 (let ((?x5827 (* ?x3927 l_0_5_2)))
 (let ((?x6289 (- (- (+ ?x5827 (* (* 6.0 l_0_5_1) l_0_5_4)) ?x5829) (* (* 6.0 l_0_5_16) l_0_5_19))))
 (let ((?x6299 (- (+ (- (- ?x6289 (* (* 2.0 l_0_5_31) l_0_5_32)) ?x6293) ?x6295) (* (* 2.0 l_0_5_77) l_0_5_79))))
 (= (- ?x6299 (* (* 2.0 l_0_5_78) l_0_5_80)) 0.0))))))))))))
(assert
 (let ((?x5765 (* 2.0 l_0_5_61)))
 (let ((?x5766 (* ?x5765 l_0_5_67)))
 (let ((?x5762 (* 2.0 l_0_5_46)))
 (let ((?x5763 (* ?x5762 l_0_5_52)))
 (let ((?x6332 (- (* (* 6.0 l_0_5_1) l_0_5_7) (* (* 6.0 l_0_5_16) l_0_5_22))))
 (let ((?x6338 (- (- (+ (- ?x6332 ?x5763) ?x5766) (* (* 2.0 l_0_5_77) l_0_5_82)) (* (* 2.0 l_0_5_78) l_0_5_83))))
 (= ?x6338 0.0))))))))
(assert
 (let ((?x5765 (* 2.0 l_0_5_61)))
 (let ((?x6367 (* ?x5765 l_0_5_71)))
 (let ((?x5762 (* 2.0 l_0_5_46)))
 (let ((?x6365 (* ?x5762 l_0_5_56)))
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5829 (* ?x5828 l_0_5_17)))
 (let ((?x3927 (* 2.0 l_0_5_1)))
 (let ((?x5827 (* ?x3927 l_0_5_2)))
 (let ((?x6364 (- (+ (- (* (* 6.0 l_0_5_1) l_0_5_11) ?x5827) ?x5829) (* (* 6.0 l_0_5_16) l_0_5_26))))
 (let ((?x6372 (- (- (+ (- ?x6364 ?x6365) ?x6367) (* (* 2.0 l_0_5_77) l_0_5_86)) (* (* 2.0 l_0_5_78) l_0_5_87))))
 (= ?x6372 0.0))))))))))))
(assert
 (let ((?x6414 (* l_0_5_63 l_0_5_63)))
 (let ((?x6412 (* l_0_5_62 l_0_5_62)))
 (let ((?x6410 (* l_0_5_48 l_0_5_48)))
 (let ((?x6408 (* l_0_5_47 l_0_5_47)))
 (let ((?x6403 (- (* (* (- 3.0) l_0_5_17) l_0_5_17) (* (* 3.0 l_0_5_18) l_0_5_18))))
 (let ((?x6407 (+ (+ ?x6403 (* 3.0 (* l_0_5_2 l_0_5_2))) (* 3.0 (* l_0_5_3 l_0_5_3)))))
 (= (+ (+ (- (- ?x6407 ?x6408) ?x6410) ?x6412) ?x6414) 0.0))))))))
(assert
 (let ((?x5840 (* 2.0 l_0_5_63)))
 (let ((?x6454 (* ?x5840 l_0_5_65)))
 (let ((?x5837 (* 2.0 l_0_5_62)))
 (let ((?x6452 (* ?x5837 l_0_5_64)))
 (let ((?x5834 (* 2.0 l_0_5_48)))
 (let ((?x6450 (* ?x5834 l_0_5_50)))
 (let ((?x5831 (* 2.0 l_0_5_47)))
 (let ((?x6448 (* ?x5831 l_0_5_49)))
 (let ((?x6446 (* l_0_5_33 l_0_5_33)))
 (let ((?x6444 (* l_0_5_32 l_0_5_32)))
 (let ((?x6000 (* l_0_5_3 l_0_5_3)))
 (let ((?x5998 (* l_0_5_2 l_0_5_2)))
 (let ((?x5996 (* l_0_5_18 l_0_5_18)))
 (let ((?x6434 (- (- (* (* (- 6.0) l_0_5_17) l_0_5_19) (* l_0_5_17 l_0_5_17)) (* (* 6.0 l_0_5_18) l_0_5_20))))
 (let ((?x6442 (+ (+ (+ (- ?x6434 ?x5996) (* (* 6.0 l_0_5_2) l_0_5_4)) ?x5998) (* (* 6.0 l_0_5_3) l_0_5_5))))
 (let ((?x6455 (+ (+ (- (- (- (- (+ ?x6442 ?x6000) ?x6444) ?x6446) ?x6448) ?x6450) ?x6452) ?x6454)))
 (= ?x6455 0.0))))))))))))))))))
(assert
 (let ((?x5840 (* 2.0 l_0_5_63)))
 (let ((?x5841 (* ?x5840 l_0_5_68)))
 (let ((?x5837 (* 2.0 l_0_5_62)))
 (let ((?x5838 (* ?x5837 l_0_5_67)))
 (let ((?x5834 (* 2.0 l_0_5_48)))
 (let ((?x5835 (* ?x5834 l_0_5_53)))
 (let ((?x5831 (* 2.0 l_0_5_47)))
 (let ((?x5832 (* ?x5831 l_0_5_52)))
 (let ((?x6470 (- (* (* (- 6.0) l_0_5_17) l_0_5_22) (* (* 6.0 l_0_5_18) l_0_5_23))))
 (let ((?x6474 (+ (+ ?x6470 (* (* 6.0 l_0_5_2) l_0_5_7)) (* (* 6.0 l_0_5_3) l_0_5_8))))
 (= (+ (+ (- (- ?x6474 ?x5832) ?x5835) ?x5838) ?x5841) 0.0))))))))))))
(assert
 (let ((?x5840 (* 2.0 l_0_5_63)))
 (let ((?x6511 (* ?x5840 l_0_5_72)))
 (let ((?x5837 (* 2.0 l_0_5_62)))
 (let ((?x6509 (* ?x5837 l_0_5_71)))
 (let ((?x5834 (* 2.0 l_0_5_48)))
 (let ((?x6507 (* ?x5834 l_0_5_57)))
 (let ((?x5831 (* 2.0 l_0_5_47)))
 (let ((?x6505 (* ?x5831 l_0_5_56)))
 (let ((?x6000 (* l_0_5_3 l_0_5_3)))
 (let ((?x5998 (* l_0_5_2 l_0_5_2)))
 (let ((?x5996 (* l_0_5_18 l_0_5_18)))
 (let ((?x4036 (* l_0_5_17 l_0_5_17)))
 (let ((?x6495 (+ (* (* 6.0 l_0_5_11) l_0_5_2) (* (* 6.0 l_0_5_12) l_0_5_3))))
 (let ((?x6501 (- (+ (- ?x6495 (* (* 6.0 l_0_5_17) l_0_5_26)) ?x4036) (* (* 6.0 l_0_5_18) l_0_5_27))))
 (let ((?x6512 (+ (+ (- (- (- (- (+ ?x6501 ?x5996) ?x5998) ?x6000) ?x6505) ?x6507) ?x6509) ?x6511)))
 (= ?x6512 0.0)))))))))))))))))
(assert
 (let ((?x6569 (* l_0_5_66 l_0_5_66)))
 (let ((?x6567 (* l_0_5_65 l_0_5_65)))
 (let ((?x6565 (* l_0_5_64 l_0_5_64)))
 (let ((?x6561 (* l_0_5_51 l_0_5_51)))
 (let ((?x6559 (* l_0_5_50 l_0_5_50)))
 (let ((?x6555 (* l_0_5_49 l_0_5_49)))
 (let ((?x6017 (* 2.0 l_0_5_3)))
 (let ((?x6018 (* ?x6017 l_0_5_5)))
 (let ((?x6014 (* 2.0 l_0_5_2)))
 (let ((?x6015 (* ?x6014 l_0_5_4)))
 (let ((?x6011 (* 2.0 l_0_5_18)))
 (let ((?x6012 (* ?x6011 l_0_5_20)))
 (let ((?x6013 (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x6012)))
 (let ((?x6542 (- (+ (- ?x6013 (* (* 3.0 l_0_5_19) l_0_5_19)) ?x6015) (* (* 3.0 l_0_5_20) l_0_5_20))))
 (let ((?x6549 (- (+ (- ?x6542 (* (* 3.0 l_0_5_21) l_0_5_21)) ?x6018) (* (* 2.0 l_0_5_32) l_0_5_34))))
 (let ((?x6554 (+ (- ?x6549 (* (* 2.0 l_0_5_33) l_0_5_35)) (* 3.0 (* l_0_5_4 l_0_5_4)))))
 (let ((?x6562 (- (- (+ (- ?x6554 ?x6555) (* 3.0 (* l_0_5_5 l_0_5_5))) ?x6559) ?x6561)))
 (let ((?x6570 (+ (+ (+ (+ ?x6562 (* 3.0 (* l_0_5_6 l_0_5_6))) ?x6565) ?x6567) ?x6569)))
 (= ?x6570 0.0))))))))))))))))))))
(assert
 (let ((?x5881 (* 2.0 l_0_5_66)))
 (let ((?x5882 (* ?x5881 l_0_5_69)))
 (let ((?x5878 (* 2.0 l_0_5_65)))
 (let ((?x5879 (* ?x5878 l_0_5_68)))
 (let ((?x5875 (* 2.0 l_0_5_64)))
 (let ((?x5876 (* ?x5875 l_0_5_67)))
 (let ((?x5872 (* 2.0 l_0_5_51)))
 (let ((?x5873 (* ?x5872 l_0_5_54)))
 (let ((?x5869 (* 2.0 l_0_5_50)))
 (let ((?x5870 (* ?x5869 l_0_5_53)))
 (let ((?x5866 (* 2.0 l_0_5_49)))
 (let ((?x5867 (* ?x5866 l_0_5_52)))
 (let ((?x6017 (* 2.0 l_0_5_3)))
 (let ((?x6037 (* ?x6017 l_0_5_8)))
 (let ((?x6014 (* 2.0 l_0_5_2)))
 (let ((?x6035 (* ?x6014 l_0_5_7)))
 (let ((?x6011 (* 2.0 l_0_5_18)))
 (let ((?x6033 (* ?x6011 l_0_5_23)))
 (let ((?x6034 (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x6033)))
 (let ((?x6601 (- (+ (- ?x6034 (* (* 6.0 l_0_5_19) l_0_5_22)) ?x6035) (* (* 6.0 l_0_5_20) l_0_5_23))))
 (let ((?x6607 (- (+ (- ?x6601 (* (* 6.0 l_0_5_21) l_0_5_24)) ?x6037) (* (* 2.0 l_0_5_32) l_0_5_37))))
 (let ((?x6612 (+ (- ?x6607 (* (* 2.0 l_0_5_33) l_0_5_38)) (* (* 6.0 l_0_5_4) l_0_5_7))))
 (let ((?x6618 (- (- (+ (- ?x6612 ?x5867) (* (* 6.0 l_0_5_5) l_0_5_8)) ?x5870) ?x5873)))
 (let ((?x6624 (+ (+ (+ (+ ?x6618 (* (* 6.0 l_0_5_6) l_0_5_9)) ?x5876) ?x5879) ?x5882)))
 (= ?x6624 0.0))))))))))))))))))))))))))
(assert
 (let ((?x5881 (* 2.0 l_0_5_66)))
 (let ((?x6675 (* ?x5881 l_0_5_73)))
 (let ((?x5878 (* 2.0 l_0_5_65)))
 (let ((?x6673 (* ?x5878 l_0_5_72)))
 (let ((?x5875 (* 2.0 l_0_5_64)))
 (let ((?x6671 (* ?x5875 l_0_5_71)))
 (let ((?x5872 (* 2.0 l_0_5_51)))
 (let ((?x6669 (* ?x5872 l_0_5_58)))
 (let ((?x5869 (* 2.0 l_0_5_50)))
 (let ((?x6667 (* ?x5869 l_0_5_57)))
 (let ((?x5866 (* 2.0 l_0_5_49)))
 (let ((?x6665 (* ?x5866 l_0_5_56)))
 (let ((?x6017 (* 2.0 l_0_5_3)))
 (let ((?x6018 (* ?x6017 l_0_5_5)))
 (let ((?x6014 (* 2.0 l_0_5_2)))
 (let ((?x6015 (* ?x6014 l_0_5_4)))
 (let ((?x6011 (* 2.0 l_0_5_18)))
 (let ((?x6052 (* ?x6011 l_0_5_27)))
 (let ((?x6012 (* ?x6011 l_0_5_20)))
 (let ((?x6049 (* 2.0 l_0_5_17)))
 (let ((?x6050 (* ?x6049 l_0_5_26)))
 (let ((?x4052 (* 2.0 l_0_5_12)))
 (let ((?x6047 (* ?x4052 l_0_5_3)))
 (let ((?x4048 (* 2.0 l_0_5_11)))
 (let ((?x4051 (* ?x4048 l_0_5_2)))
 (let ((?x6644 (+ (+ (+ ?x4051 (* (* 6.0 l_0_5_11) l_0_5_4)) ?x6047) (* (* 6.0 l_0_5_12) l_0_5_5))))
 (let ((?x6650 (- (+ (+ ?x6644 (* (* 6.0 l_0_5_13) l_0_5_6)) (* ?x6049 l_0_5_19)) ?x6050)))
 (let ((?x6655 (- (- (- (+ ?x6650 ?x6012) ?x6052) (* (* 6.0 l_0_5_19) l_0_5_26)) ?x6015)))
 (let ((?x6659 (- (- ?x6655 (* (* 6.0 l_0_5_20) l_0_5_27)) (* (* 6.0 l_0_5_21) l_0_5_28))))
 (let ((?x6664 (- (- (- ?x6659 ?x6018) (* (* 2.0 l_0_5_32) l_0_5_41)) (* (* 2.0 l_0_5_33) l_0_5_42))))
 (= (+ (+ (+ (- (- (- ?x6664 ?x6665) ?x6667) ?x6669) ?x6671) ?x6673) ?x6675) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x5921 (* l_0_5_70 l_0_5_70)))
 (let ((?x5919 (* l_0_5_69 l_0_5_69)))
 (let ((?x5917 (* l_0_5_68 l_0_5_68)))
 (let ((?x5915 (* l_0_5_67 l_0_5_67)))
 (let ((?x5765 (* 2.0 l_0_5_61)))
 (let ((?x6264 (* ?x5765 l_0_5_62)))
 (let ((?x5913 (* l_0_5_55 l_0_5_55)))
 (let ((?x5911 (* l_0_5_54 l_0_5_54)))
 (let ((?x5909 (* l_0_5_53 l_0_5_53)))
 (let ((?x5907 (* l_0_5_52 l_0_5_52)))
 (let ((?x5762 (* 2.0 l_0_5_46)))
 (let ((?x6262 (* ?x5762 l_0_5_47)))
 (let ((?x1754 (- (* 3.0 (* l_0_5_10 l_0_5_10)) (* (* 3.0 l_0_5_22) l_0_5_22))))
 (let ((?x6701 (- (- ?x1754 (* (* 3.0 l_0_5_23) l_0_5_23)) (* (* 3.0 l_0_5_24) l_0_5_24))))
 (let ((?x6707 (- (- (+ (- ?x6701 (* (* 3.0 l_0_5_25) l_0_5_25)) ?x6262) ?x5907) ?x5909)))
 (let ((?x6715 (+ (+ (+ (+ (- (- (- ?x6707 ?x5911) ?x5913) ?x6264) ?x5915) ?x5917) ?x5919) (* 3.0 (* l_0_5_7 l_0_5_7)))))
 (let ((?x6720 (+ (+ (+ ?x6715 ?x5921) (* 3.0 (* l_0_5_8 l_0_5_8))) (* 3.0 (* l_0_5_9 l_0_5_9)))))
 (= ?x6720 0.0)))))))))))))))))))
(assert
 (let ((?x5967 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x5964 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x5961 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x5958 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x5955 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x5952 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x5949 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x5946 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x6017 (* 2.0 l_0_5_3)))
 (let ((?x6037 (* ?x6017 l_0_5_8)))
 (let ((?x6014 (* 2.0 l_0_5_2)))
 (let ((?x6035 (* ?x6014 l_0_5_7)))
 (let ((?x6011 (* 2.0 l_0_5_18)))
 (let ((?x6033 (* ?x6011 l_0_5_23)))
 (let ((?x4780 (+ (* (* 6.0 l_0_5_10) l_0_5_14) (* (* 6.0 l_0_5_11) l_0_5_7))))
 (let ((?x1798 (+ (+ ?x4780 (* (* 6.0 l_0_5_12) l_0_5_8)) (* (* 6.0 l_0_5_13) l_0_5_9))))
 (let ((?x6736 (- (- (+ (+ ?x1798 (* (* 2.0 l_0_5_17) l_0_5_22)) ?x6033) ?x6035) (* (* 6.0 l_0_5_22) l_0_5_26))))
 (let ((?x6742 (- (- ?x6736 (* (* 6.0 l_0_5_23) l_0_5_27)) (* (* 6.0 l_0_5_24) l_0_5_28))))
 (let ((?x6748 (- (- (- (- ?x6742 (* (* 6.0 l_0_5_25) l_0_5_29)) ?x6037) ?x5946) ?x5949)))
 (= (+ (+ (+ (+ (- (- ?x6748 ?x5952) ?x5955) ?x5958) ?x5961) ?x5964) ?x5967) 0.0)))))))))))))))))))))
(assert
 (let ((?x6808 (* l_0_5_75 l_0_5_75)))
 (let ((?x6806 (* l_0_5_74 l_0_5_74)))
 (let ((?x6804 (* l_0_5_73 l_0_5_73)))
 (let ((?x6802 (* l_0_5_72 l_0_5_72)))
 (let ((?x6800 (* l_0_5_71 l_0_5_71)))
 (let ((?x6798 (* l_0_5_60 l_0_5_60)))
 (let ((?x6796 (* l_0_5_59 l_0_5_59)))
 (let ((?x6794 (* l_0_5_58 l_0_5_58)))
 (let ((?x6792 (* l_0_5_57 l_0_5_57)))
 (let ((?x6790 (* l_0_5_56 l_0_5_56)))
 (let ((?x6011 (* 2.0 l_0_5_18)))
 (let ((?x6052 (* ?x6011 l_0_5_27)))
 (let ((?x6049 (* 2.0 l_0_5_17)))
 (let ((?x6050 (* ?x6049 l_0_5_26)))
 (let ((?x6230 (* l_0_5_15 l_0_5_15)))
 (let ((?x4860 (* 3.0 ?x6230)))
 (let ((?x6228 (* l_0_5_14 l_0_5_14)))
 (let ((?x4841 (* 3.0 ?x6228)))
 (let ((?x6226 (* l_0_5_13 l_0_5_13)))
 (let ((?x4859 (* 3.0 ?x6226)))
 (let ((?x6224 (* l_0_5_12 l_0_5_12)))
 (let ((?x4878 (* 3.0 ?x6224)))
 (let ((?x4052 (* 2.0 l_0_5_12)))
 (let ((?x6047 (* ?x4052 l_0_5_3)))
 (let ((?x6223 (* l_0_5_11 l_0_5_11)))
 (let ((?x4884 (* 3.0 ?x6223)))
 (let ((?x4835 (+ (+ (- (+ (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x4884) ?x6047) ?x4878) ?x4859)))
 (let ((?x1932 (- (+ (+ (+ (+ ?x4835 ?x4841) ?x4860) ?x6050) ?x6052) (* (* 3.0 l_0_5_26) l_0_5_26))))
 (let ((?x6783 (- (- ?x1932 (* (* 3.0 l_0_5_27) l_0_5_27)) (* (* 3.0 l_0_5_28) l_0_5_28))))
 (let ((?x6789 (- (- ?x6783 (* (* 3.0 l_0_5_29) l_0_5_29)) (* (* 3.0 l_0_5_30) l_0_5_30))))
 (let ((?x6803 (+ (+ (- (- (- (- (- ?x6789 ?x6790) ?x6792) ?x6794) ?x6796) ?x6798) ?x6800) ?x6802)))
 (= (+ (+ (+ ?x6803 ?x6804) ?x6806) ?x6808) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x6830 (* l_0_5_81 l_0_5_81)))
 (let ((?x6828 (* l_0_5_80 l_0_5_80)))
 (let ((?x4949 (* l_0_5_79 l_0_5_79)))
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5864 (* ?x5828 l_0_5_19)))
 (let ((?x3927 (* 2.0 l_0_5_1)))
 (let ((?x5863 (* ?x3927 l_0_5_4)))
 (let ((?x5865 (- ?x5863 ?x5864)))
 (let ((?x6831 (- (- (- (- ?x5865 (* (* 2.0 l_0_5_31) l_0_5_34)) ?x4949) ?x6828) ?x6830)))
 (= ?x6831 0.0)))))))))))
(assert
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5905 (* ?x5828 l_0_5_22)))
 (let ((?x5906 (- (* (* 2.0 l_0_5_1) l_0_5_7) ?x5905)))
 (let ((?x4976 (- (- ?x5906 (* (* 2.0 l_0_5_31) l_0_5_37)) (* (* 2.0 l_0_5_79) l_0_5_82))))
 (let ((?x6840 (- (- ?x4976 (* (* 2.0 l_0_5_80) l_0_5_83)) (* (* 2.0 l_0_5_81) l_0_5_84))))
 (= ?x6840 0.0)))))))
(assert
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5943 (* ?x5828 l_0_5_26)))
 (let ((?x5864 (* ?x5828 l_0_5_19)))
 (let ((?x3927 (* 2.0 l_0_5_1)))
 (let ((?x5863 (* ?x3927 l_0_5_4)))
 (let ((?x5942 (* ?x3927 l_0_5_11)))
 (let ((?x6856 (- (- (+ (- ?x5942 ?x5863) ?x5864) ?x5943) (* (* 2.0 l_0_5_31) l_0_5_41))))
 (let ((?x6860 (- (- ?x6856 (* (* 2.0 l_0_5_79) l_0_5_86)) (* (* 2.0 l_0_5_80) l_0_5_87))))
 (= (- ?x6860 (* (* 2.0 l_0_5_81) l_0_5_88)) 0.0))))))))))
(assert
 (let ((?x6080 (* l_0_5_6 l_0_5_6)))
 (let ((?x6078 (* l_0_5_5 l_0_5_5)))
 (let ((?x6076 (* l_0_5_4 l_0_5_4)))
 (let ((?x6868 (* l_0_5_36 l_0_5_36)))
 (let ((?x6866 (* l_0_5_35 l_0_5_35)))
 (let ((?x5084 (* l_0_5_34 l_0_5_34)))
 (let ((?x6074 (* l_0_5_21 l_0_5_21)))
 (let ((?x6075 (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6074)))
 (= (+ (+ (+ (- (- (- ?x6075 ?x5084) ?x6866) ?x6868) ?x6076) ?x6078) ?x6080) 0.0))))))))))
(assert
 (let ((?x6102 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6099 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6096 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6092 (* 2.0 l_0_5_21)))
 (let ((?x6093 (* ?x6092 l_0_5_24)))
 (let ((?x6089 (* 2.0 l_0_5_20)))
 (let ((?x6090 (* ?x6089 l_0_5_23)))
 (let ((?x6094 (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x6090) ?x6093)))
 (let ((?x6886 (- (- ?x6094 (* (* 2.0 l_0_5_34) l_0_5_37)) (* (* 2.0 l_0_5_35) l_0_5_38))))
 (let ((?x6892 (+ (+ (+ (- ?x6886 (* (* 2.0 l_0_5_36) l_0_5_39)) ?x6096) ?x6099) ?x6102)))
 (= ?x6892 0.0))))))))))))
(assert
 (let ((?x6080 (* l_0_5_6 l_0_5_6)))
 (let ((?x6078 (* l_0_5_5 l_0_5_5)))
 (let ((?x6076 (* l_0_5_4 l_0_5_4)))
 (let ((?x6074 (* l_0_5_21 l_0_5_21)))
 (let ((?x6092 (* 2.0 l_0_5_21)))
 (let ((?x6132 (* ?x6092 l_0_5_28)))
 (let ((?x6072 (* l_0_5_20 l_0_5_20)))
 (let ((?x6089 (* 2.0 l_0_5_20)))
 (let ((?x6130 (* ?x6089 l_0_5_27)))
 (let ((?x4071 (* l_0_5_19 l_0_5_19)))
 (let ((?x6127 (* 2.0 l_0_5_19)))
 (let ((?x6128 (* ?x6127 l_0_5_26)))
 (let ((?x6124 (* 2.0 l_0_5_13)))
 (let ((?x6125 (* ?x6124 l_0_5_6)))
 (let ((?x4052 (* 2.0 l_0_5_12)))
 (let ((?x6122 (* ?x4052 l_0_5_5)))
 (let ((?x6129 (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x6122) ?x6125) ?x6128)))
 (let ((?x6912 (- (+ (- (+ (- (+ ?x6129 ?x4071) ?x6130) ?x6072) ?x6132) ?x6074) (* (* 2.0 l_0_5_34) l_0_5_41))))
 (let ((?x6916 (- (- ?x6912 (* (* 2.0 l_0_5_35) l_0_5_42)) (* (* 2.0 l_0_5_36) l_0_5_43))))
 (= (- (- (- ?x6916 ?x6076) ?x6078) ?x6080) 0.0)))))))))))))))))))))
(assert
 (let ((?x6164 (* l_0_5_9 l_0_5_9)))
 (let ((?x6162 (* l_0_5_8 l_0_5_8)))
 (let ((?x6160 (* l_0_5_7 l_0_5_7)))
 (let ((?x5765 (* 2.0 l_0_5_61)))
 (let ((?x6295 (* ?x5765 l_0_5_64)))
 (let ((?x5762 (* 2.0 l_0_5_46)))
 (let ((?x6293 (* ?x5762 l_0_5_49)))
 (let ((?x6941 (* l_0_5_40 l_0_5_40)))
 (let ((?x6939 (* l_0_5_39 l_0_5_39)))
 (let ((?x6937 (* l_0_5_38 l_0_5_38)))
 (let ((?x6935 (* l_0_5_37 l_0_5_37)))
 (let ((?x6158 (* l_0_5_25 l_0_5_25)))
 (let ((?x6156 (* l_0_5_24 l_0_5_24)))
 (let ((?x6154 (* l_0_5_23 l_0_5_23)))
 (let ((?x6157 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6154) ?x6156)))
 (let ((?x6159 (- ?x6157 ?x6158)))
 (let ((?x6945 (+ (- (+ (- (- (- (- ?x6159 ?x6935) ?x6937) ?x6939) ?x6941) ?x6293) ?x6295) ?x6160)))
 (= (+ (+ ?x6945 ?x6162) ?x6164) 0.0)))))))))))))))))))
(assert
 (let ((?x6102 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6099 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6096 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6189 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6186 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6183 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6180 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6092 (* 2.0 l_0_5_21)))
 (let ((?x6093 (* ?x6092 l_0_5_24)))
 (let ((?x6089 (* 2.0 l_0_5_20)))
 (let ((?x6090 (* ?x6089 l_0_5_23)))
 (let ((?x6124 (* 2.0 l_0_5_13)))
 (let ((?x6177 (* ?x6124 l_0_5_9)))
 (let ((?x4052 (* 2.0 l_0_5_12)))
 (let ((?x6175 (* ?x4052 l_0_5_8)))
 (let ((?x4048 (* 2.0 l_0_5_11)))
 (let ((?x6173 (* ?x4048 l_0_5_7)))
 (let ((?x6178 (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x6173) ?x6175) ?x6177)))
 (let ((?x6969 (- (+ (+ (+ ?x6178 (* (* 2.0 l_0_5_19) l_0_5_22)) ?x6090) ?x6093) ?x6180)))
 (let ((?x6975 (- (- (- (- ?x6969 ?x6183) ?x6186) ?x6189) (* (* 2.0 l_0_5_37) l_0_5_41))))
 (let ((?x6981 (- (- ?x6975 (* (* 2.0 l_0_5_38) l_0_5_42)) (* (* 2.0 l_0_5_39) l_0_5_43))))
 (let ((?x6987 (- (- (- (- ?x6981 ?x6096) (* (* 2.0 l_0_5_40) l_0_5_44)) ?x6099) ?x6102)))
 (= ?x6987 0.0))))))))))))))))))))))))
(assert
 (let ((?x7011 (* l_0_5_45 l_0_5_45)))
 (let ((?x7009 (* l_0_5_44 l_0_5_44)))
 (let ((?x7007 (* l_0_5_43 l_0_5_43)))
 (let ((?x7005 (* l_0_5_42 l_0_5_42)))
 (let ((?x7003 (* l_0_5_41 l_0_5_41)))
 (let ((?x6240 (* l_0_5_30 l_0_5_30)))
 (let ((?x6238 (* l_0_5_29 l_0_5_29)))
 (let ((?x6236 (* l_0_5_28 l_0_5_28)))
 (let ((?x6234 (* l_0_5_27 l_0_5_27)))
 (let ((?x6232 (* l_0_5_26 l_0_5_26)))
 (let ((?x6092 (* 2.0 l_0_5_21)))
 (let ((?x6132 (* ?x6092 l_0_5_28)))
 (let ((?x6089 (* 2.0 l_0_5_20)))
 (let ((?x6130 (* ?x6089 l_0_5_27)))
 (let ((?x6127 (* 2.0 l_0_5_19)))
 (let ((?x6128 (* ?x6127 l_0_5_26)))
 (let ((?x6230 (* l_0_5_15 l_0_5_15)))
 (let ((?x6228 (* l_0_5_14 l_0_5_14)))
 (let ((?x6226 (* l_0_5_13 l_0_5_13)))
 (let ((?x6124 (* 2.0 l_0_5_13)))
 (let ((?x6125 (* ?x6124 l_0_5_6)))
 (let ((?x6224 (* l_0_5_12 l_0_5_12)))
 (let ((?x4052 (* 2.0 l_0_5_12)))
 (let ((?x6122 (* ?x4052 l_0_5_5)))
 (let ((?x2657 (- (+ (* (* (- 2.0) l_0_5_11) l_0_5_4) (* l_0_5_11 l_0_5_11)) ?x6122)))
 (let ((?x6996 (+ (+ (+ (+ (+ (- (+ ?x2657 ?x6224) ?x6125) ?x6226) ?x6228) ?x6230) ?x6128) ?x6130)))
 (let ((?x7004 (- (- (- (- (- (- (+ ?x6996 ?x6132) ?x6232) ?x6234) ?x6236) ?x6238) ?x6240) ?x7003)))
 (= (- (- (- (- ?x7004 ?x7005) ?x7007) ?x7009) ?x7011) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5905 (* ?x5828 l_0_5_22)))
 (let ((?x7037 (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x5905) (* (* 2.0 l_0_5_82) l_0_5_86))))
 (let ((?x7043 (- (- ?x7037 (* (* 2.0 l_0_5_83) l_0_5_87)) (* (* 2.0 l_0_5_84) l_0_5_88))))
 (= (- ?x7043 (* (* 2.0 l_0_5_85) l_0_5_89)) 0.0))))))
(assert
 (let ((?x7069 (* l_0_5_90 l_0_5_90)))
 (let ((?x7067 (* l_0_5_89 l_0_5_89)))
 (let ((?x7065 (* l_0_5_88 l_0_5_88)))
 (let ((?x7063 (* l_0_5_87 l_0_5_87)))
 (let ((?x7061 (* l_0_5_86 l_0_5_86)))
 (let ((?x5828 (* 2.0 l_0_5_16)))
 (let ((?x5943 (* ?x5828 l_0_5_26)))
 (let ((?x7066 (- (- (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x5943) ?x7061) ?x7063) ?x7065)))
 (= (- (- ?x7066 ?x7067) ?x7069) 0.0))))))))))
(assert
 (let ((?x6164 (* l_0_5_9 l_0_5_9)))
 (let ((?x6162 (* l_0_5_8 l_0_5_8)))
 (let ((?x6160 (* l_0_5_7 l_0_5_7)))
 (let ((?x5765 (* 2.0 l_0_5_61)))
 (let ((?x6367 (* ?x5765 l_0_5_71)))
 (let ((?x5762 (* 2.0 l_0_5_46)))
 (let ((?x6365 (* ?x5762 l_0_5_56)))
 (let ((?x6158 (* l_0_5_25 l_0_5_25)))
 (let ((?x6156 (* l_0_5_24 l_0_5_24)))
 (let ((?x6154 (* l_0_5_23 l_0_5_23)))
 (let ((?x7090 (+ (+ (+ (* (- l_0_5_10) l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6154) ?x6156)))
 (= (- (- (- (- (+ (+ ?x7090 ?x6158) ?x6365) ?x6367) ?x6160) ?x6162) ?x6164) 0.0)))))))))))))
(assert
 (let ((?x6189 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6186 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6183 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6180 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6124 (* 2.0 l_0_5_13)))
 (let ((?x6177 (* ?x6124 l_0_5_9)))
 (let ((?x4052 (* 2.0 l_0_5_12)))
 (let ((?x6175 (* ?x4052 l_0_5_8)))
 (let ((?x4048 (* 2.0 l_0_5_11)))
 (let ((?x6173 (* ?x4048 l_0_5_7)))
 (let ((?x7100 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x6173) ?x6175) ?x6177) ?x6180)))
 (= (+ (+ (+ ?x7100 ?x6183) ?x6186) ?x6189) 0.0)))))))))))))
(assert
 (let ((?x6240 (* l_0_5_30 l_0_5_30)))
 (let ((?x6238 (* l_0_5_29 l_0_5_29)))
 (let ((?x6236 (* l_0_5_28 l_0_5_28)))
 (let ((?x6234 (* l_0_5_27 l_0_5_27)))
 (let ((?x6232 (* l_0_5_26 l_0_5_26)))
 (let ((?x6230 (* l_0_5_15 l_0_5_15)))
 (let ((?x6228 (* l_0_5_14 l_0_5_14)))
 (let ((?x6226 (* l_0_5_13 l_0_5_13)))
 (let ((?x3097 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6226) ?x6228)))
 (= (+ (+ (+ (+ (+ (- ?x3097 ?x6230) ?x6232) ?x6234) ?x6236) ?x6238) ?x6240) 0.0)))))))))))
(assert
 (let ((?x7121 (* l_0_5_85 l_0_5_85)))
 (let ((?x7119 (* l_0_5_84 l_0_5_84)))
 (let ((?x7117 (* l_0_5_83 l_0_5_83)))
 (let ((?x7115 (* l_0_5_82 l_0_5_82)))
 (let ((?x7118 (- (- (- (* l_0_5_46 l_0_5_46) (* l_0_5_61 l_0_5_61)) ?x7115) ?x7117)))
 (= (- (- ?x7118 ?x7119) ?x7121) 0.0)))))))
(assert
 (let ((?x6414 (* l_0_5_63 l_0_5_63)))
 (let ((?x6412 (* l_0_5_62 l_0_5_62)))
 (let ((?x6410 (* l_0_5_48 l_0_5_48)))
 (let ((?x6408 (* l_0_5_47 l_0_5_47)))
 (let ((?x7133 (+ ?x6408 ?x6410)))
 (= (- (- ?x7133 ?x6412) ?x6414) 0.0)))))))
(assert
 (let ((?x5840 (* 2.0 l_0_5_63)))
 (let ((?x6454 (* ?x5840 l_0_5_65)))
 (let ((?x5837 (* 2.0 l_0_5_62)))
 (let ((?x6452 (* ?x5837 l_0_5_64)))
 (let ((?x5834 (* 2.0 l_0_5_48)))
 (let ((?x6450 (* ?x5834 l_0_5_50)))
 (let ((?x5831 (* 2.0 l_0_5_47)))
 (let ((?x6448 (* ?x5831 l_0_5_49)))
 (= (- (- (+ ?x6448 ?x6450) ?x6452) ?x6454) 0.0))))))))))
(assert
 (let ((?x5840 (* 2.0 l_0_5_63)))
 (let ((?x6511 (* ?x5840 l_0_5_72)))
 (let ((?x5837 (* 2.0 l_0_5_62)))
 (let ((?x6509 (* ?x5837 l_0_5_71)))
 (let ((?x5834 (* 2.0 l_0_5_48)))
 (let ((?x6507 (* ?x5834 l_0_5_57)))
 (let ((?x5831 (* 2.0 l_0_5_47)))
 (let ((?x6505 (* ?x5831 l_0_5_56)))
 (= (- (- (+ ?x6505 ?x6507) ?x6509) ?x6511) 0.0))))))))))
(assert
 (let ((?x6569 (* l_0_5_66 l_0_5_66)))
 (let ((?x6567 (* l_0_5_65 l_0_5_65)))
 (let ((?x6565 (* l_0_5_64 l_0_5_64)))
 (let ((?x6561 (* l_0_5_51 l_0_5_51)))
 (let ((?x7148 (- (+ (+ (* l_0_5_49 l_0_5_49) (* l_0_5_50 l_0_5_50)) ?x6561) ?x6565)))
 (= (- (- ?x7148 ?x6567) ?x6569) 0.0)))))))
(assert
 (let ((?x5881 (* 2.0 l_0_5_66)))
 (let ((?x6675 (* ?x5881 l_0_5_73)))
 (let ((?x5878 (* 2.0 l_0_5_65)))
 (let ((?x6673 (* ?x5878 l_0_5_72)))
 (let ((?x5875 (* 2.0 l_0_5_64)))
 (let ((?x6671 (* ?x5875 l_0_5_71)))
 (let ((?x5872 (* 2.0 l_0_5_51)))
 (let ((?x6669 (* ?x5872 l_0_5_58)))
 (let ((?x5869 (* 2.0 l_0_5_50)))
 (let ((?x6667 (* ?x5869 l_0_5_57)))
 (let ((?x5866 (* 2.0 l_0_5_49)))
 (let ((?x6665 (* ?x5866 l_0_5_56)))
 (= (- (- (- (+ (+ ?x6665 ?x6667) ?x6669) ?x6671) ?x6673) ?x6675) 0.0))))))))))))))
(assert
 (let ((?x6808 (* l_0_5_75 l_0_5_75)))
 (let ((?x6806 (* l_0_5_74 l_0_5_74)))
 (let ((?x6804 (* l_0_5_73 l_0_5_73)))
 (let ((?x6802 (* l_0_5_72 l_0_5_72)))
 (let ((?x6800 (* l_0_5_71 l_0_5_71)))
 (let ((?x6798 (* l_0_5_60 l_0_5_60)))
 (let ((?x6796 (* l_0_5_59 l_0_5_59)))
 (let ((?x6794 (* l_0_5_58 l_0_5_58)))
 (let ((?x7157 (+ (+ (+ (* l_0_5_56 l_0_5_56) (* l_0_5_57 l_0_5_57)) ?x6794) ?x6796)))
 (= (- (- (- (- (- (+ ?x7157 ?x6798) ?x6800) ?x6802) ?x6804) ?x6806) ?x6808) 0.0)))))))))))
(assert
 (= (* (* (- 2.0) l_0_5_76) l_0_5_82) 0.0))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (let ((?x7207 (* 2.0 l_0_6_61)))
 (let ((?x7208 (* ?x7207 l_0_6_67)))
 (let ((?x7204 (* 2.0 l_0_6_46)))
 (let ((?x7205 (* ?x7204 l_0_6_52)))
 (let ((?x7202 (* l_0_6_16 l_0_6_16)))
 (let ((?x7201 (* l_0_6_1 l_0_6_1)))
 (let ((?x7203 (- ?x7201 ?x7202)))
 (= (+ (- (+ ?x7203 ?x7205) ?x7208) 1.0) 0.0)))))))))
(assert
 (let ((?x3336 (* l_0_6_61 l_0_6_61)))
 (let ((?x3333 (* l_0_6_46 l_0_6_46)))
 (let ((?x7201 (* l_0_6_1 l_0_6_1)))
 (let ((?x5364 (* 3.0 ?x7201)))
 (let ((?x7223 (- (+ (- (- ?x5364 (* (* 3.0 l_0_6_16) l_0_6_16)) ?x3333) ?x3336) (* (* 2.0 l_0_6_76) l_0_6_77))))
 (= (+ (- ?x7223 (* (* 2.0 l_0_6_91) l_0_6_92)) 3.0) 0.0)))))))
(assert
 (= (- (* (- l_0_6_76) l_0_6_76) (* l_0_6_91 l_0_6_91)) 0.0))
(assert
 (let ((?x7256 (* l_0_6_31 l_0_6_31)))
 (let ((?x7202 (* l_0_6_16 l_0_6_16)))
 (let ((?x7201 (* l_0_6_1 l_0_6_1)))
 (let ((?x7203 (- ?x7201 ?x7202)))
 (let ((?x7261 (- (- (- ?x7203 ?x7256) (* (* 2.0 l_0_6_76) l_0_6_79)) (* (* 2.0 l_0_6_91) l_0_6_94))))
 (= (+ ?x7261 1.0) 0.0)))))))
(assert
 (let ((?x7202 (* l_0_6_16 l_0_6_16)))
 (let ((?x7273 (+ (- (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_101) l_0_6_91)) ?x7202)))
 (= (- (- ?x7273 (* (* 2.0 l_0_6_76) l_0_6_86)) 1.0) 0.0))))
(assert
 (let ((?x7302 (* 2.0 l_0_6_63)))
 (let ((?x7303 (* ?x7302 l_0_6_68)))
 (let ((?x7299 (* 2.0 l_0_6_62)))
 (let ((?x7300 (* ?x7299 l_0_6_67)))
 (let ((?x7296 (* 2.0 l_0_6_48)))
 (let ((?x7297 (* ?x7296 l_0_6_53)))
 (let ((?x7293 (* 2.0 l_0_6_47)))
 (let ((?x7294 (* ?x7293 l_0_6_52)))
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7291 (* ?x7290 l_0_6_17)))
 (let ((?x7288 (* 2.0 l_0_6_1)))
 (let ((?x7289 (* ?x7288 l_0_6_2)))
 (= (- (- (+ (+ (- ?x7289 ?x7291) ?x7294) ?x7297) ?x7300) ?x7303) 0.0))))))))))))))
(assert
 (let ((?x7340 (* 2.0 l_0_6_66)))
 (let ((?x7341 (* ?x7340 l_0_6_69)))
 (let ((?x7337 (* 2.0 l_0_6_65)))
 (let ((?x7338 (* ?x7337 l_0_6_68)))
 (let ((?x7334 (* 2.0 l_0_6_64)))
 (let ((?x7335 (* ?x7334 l_0_6_67)))
 (let ((?x7331 (* 2.0 l_0_6_51)))
 (let ((?x7332 (* ?x7331 l_0_6_54)))
 (let ((?x7328 (* 2.0 l_0_6_50)))
 (let ((?x7329 (* ?x7328 l_0_6_53)))
 (let ((?x7325 (* 2.0 l_0_6_49)))
 (let ((?x7326 (* ?x7325 l_0_6_52)))
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7323 (* ?x7290 l_0_6_19)))
 (let ((?x7288 (* 2.0 l_0_6_1)))
 (let ((?x7322 (* ?x7288 l_0_6_4)))
 (let ((?x7324 (- ?x7322 ?x7323)))
 (= (- (- (- (+ (+ (+ ?x7324 ?x7326) ?x7329) ?x7332) ?x7335) ?x7338) ?x7341) 0.0)))))))))))))))))))
(assert
 (let ((?x7389 (* l_0_6_70 l_0_6_70)))
 (let ((?x7387 (* l_0_6_69 l_0_6_69)))
 (let ((?x7385 (* l_0_6_68 l_0_6_68)))
 (let ((?x7383 (* l_0_6_67 l_0_6_67)))
 (let ((?x7381 (* l_0_6_55 l_0_6_55)))
 (let ((?x7379 (* l_0_6_54 l_0_6_54)))
 (let ((?x7377 (* l_0_6_53 l_0_6_53)))
 (let ((?x7375 (* l_0_6_52 l_0_6_52)))
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7373 (* ?x7290 l_0_6_22)))
 (let ((?x7374 (- (* (* 2.0 l_0_6_1) l_0_6_7) ?x7373)))
 (let ((?x7388 (- (- (- (+ (+ (+ (+ ?x7374 ?x7375) ?x7377) ?x7379) ?x7381) ?x7383) ?x7385) ?x7387)))
 (= (- ?x7388 ?x7389) 0.0))))))))))))))
(assert
 (let ((?x7430 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x7427 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x7424 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x7421 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x7418 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x7415 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x7412 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x7409 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7406 (* ?x7290 l_0_6_26)))
 (let ((?x7288 (* 2.0 l_0_6_1)))
 (let ((?x5473 (* ?x7288 l_0_6_11)))
 (let ((?x7425 (- (- (+ (+ (+ (+ (- ?x5473 ?x7406) ?x7409) ?x7412) ?x7415) ?x7418) ?x7421) ?x7424)))
 (= (- (- ?x7425 ?x7427) ?x7430) 0.0)))))))))))))))
(assert
 (let ((?x7467 (* l_0_6_3 l_0_6_3)))
 (let ((?x7465 (* l_0_6_2 l_0_6_2)))
 (let ((?x7468 (+ (+ (- (* (- l_0_6_17) l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x7465) ?x7467)))
 (= ?x7468 0.0)))))
(assert
 (let ((?x7488 (* 2.0 l_0_6_3)))
 (let ((?x7489 (* ?x7488 l_0_6_5)))
 (let ((?x7485 (* 2.0 l_0_6_2)))
 (let ((?x7486 (* ?x7485 l_0_6_4)))
 (let ((?x7482 (* 2.0 l_0_6_18)))
 (let ((?x7483 (* ?x7482 l_0_6_20)))
 (let ((?x7484 (- (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x7483)))
 (= (+ (+ ?x7484 ?x7486) ?x7489) 0.0)))))))))
(assert
 (let ((?x7488 (* 2.0 l_0_6_3)))
 (let ((?x7507 (* ?x7488 l_0_6_8)))
 (let ((?x7485 (* 2.0 l_0_6_2)))
 (let ((?x7505 (* ?x7485 l_0_6_7)))
 (let ((?x7482 (* 2.0 l_0_6_18)))
 (let ((?x7503 (* ?x7482 l_0_6_23)))
 (let ((?x7504 (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x7503)))
 (= (+ (+ ?x7504 ?x7505) ?x7507) 0.0)))))))))
(assert
 (let ((?x7482 (* 2.0 l_0_6_18)))
 (let ((?x7525 (* ?x7482 l_0_6_27)))
 (let ((?x7522 (* 2.0 l_0_6_17)))
 (let ((?x7523 (* ?x7522 l_0_6_26)))
 (let ((?x7519 (* 2.0 l_0_6_12)))
 (let ((?x7520 (* ?x7519 l_0_6_3)))
 (let ((?x7517 (* 2.0 l_0_6_11)))
 (let ((?x7518 (* ?x7517 l_0_6_2)))
 (= (- (- (+ ?x7518 ?x7520) ?x7523) ?x7525) 0.0))))))))))
(assert
 (let ((?x7553 (* l_0_6_6 l_0_6_6)))
 (let ((?x7551 (* l_0_6_5 l_0_6_5)))
 (let ((?x7549 (* l_0_6_4 l_0_6_4)))
 (let ((?x7547 (* l_0_6_21 l_0_6_21)))
 (let ((?x7548 (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x7547)))
 (= (+ (+ (+ ?x7548 ?x7549) ?x7551) ?x7553) 0.0)))))))
(assert
 (let ((?x7582 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7579 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7576 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7572 (* 2.0 l_0_6_21)))
 (let ((?x7573 (* ?x7572 l_0_6_24)))
 (let ((?x7569 (* 2.0 l_0_6_20)))
 (let ((?x7570 (* ?x7569 l_0_6_23)))
 (let ((?x7574 (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x7570) ?x7573)))
 (= (+ (+ (+ ?x7574 ?x7576) ?x7579) ?x7582) 0.0))))))))))
(assert
 (let ((?x7572 (* 2.0 l_0_6_21)))
 (let ((?x7610 (* ?x7572 l_0_6_28)))
 (let ((?x7569 (* 2.0 l_0_6_20)))
 (let ((?x7608 (* ?x7569 l_0_6_27)))
 (let ((?x7605 (* 2.0 l_0_6_19)))
 (let ((?x7606 (* ?x7605 l_0_6_26)))
 (let ((?x7602 (* 2.0 l_0_6_13)))
 (let ((?x7603 (* ?x7602 l_0_6_6)))
 (let ((?x7519 (* 2.0 l_0_6_12)))
 (let ((?x7600 (* ?x7519 l_0_6_5)))
 (let ((?x7607 (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x7600) ?x7603) ?x7606)))
 (= (- (- ?x7607 ?x7608) ?x7610) 0.0)))))))))))))
(assert
 (let ((?x7646 (* l_0_6_9 l_0_6_9)))
 (let ((?x7644 (* l_0_6_8 l_0_6_8)))
 (let ((?x7642 (* l_0_6_7 l_0_6_7)))
 (let ((?x7640 (* l_0_6_25 l_0_6_25)))
 (let ((?x7638 (* l_0_6_24 l_0_6_24)))
 (let ((?x7636 (* l_0_6_23 l_0_6_23)))
 (let ((?x7639 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x7636) ?x7638)))
 (let ((?x7641 (- ?x7639 ?x7640)))
 (= (+ (+ (+ ?x7641 ?x7642) ?x7644) ?x7646) 0.0))))))))))
(assert
 (let ((?x7674 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x7671 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x7668 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x7665 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x7602 (* 2.0 l_0_6_13)))
 (let ((?x7662 (* ?x7602 l_0_6_9)))
 (let ((?x7519 (* 2.0 l_0_6_12)))
 (let ((?x7660 (* ?x7519 l_0_6_8)))
 (let ((?x7517 (* 2.0 l_0_6_11)))
 (let ((?x7658 (* ?x7517 l_0_6_7)))
 (let ((?x7663 (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x7658) ?x7660) ?x7662)))
 (= (- (- (- (- ?x7663 ?x7665) ?x7668) ?x7671) ?x7674) 0.0)))))))))))))
(assert
 (let ((?x7724 (* l_0_6_30 l_0_6_30)))
 (let ((?x7722 (* l_0_6_29 l_0_6_29)))
 (let ((?x7720 (* l_0_6_28 l_0_6_28)))
 (let ((?x7718 (* l_0_6_27 l_0_6_27)))
 (let ((?x7716 (* l_0_6_26 l_0_6_26)))
 (let ((?x7714 (* l_0_6_15 l_0_6_15)))
 (let ((?x7712 (* l_0_6_14 l_0_6_14)))
 (let ((?x7710 (* l_0_6_13 l_0_6_13)))
 (let ((?x7713 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x7710) ?x7712)))
 (= (- (- (- (- (- (+ ?x7713 ?x7714) ?x7716) ?x7718) ?x7720) ?x7722) ?x7724) 0.0)))))))))))
(assert
 (let ((?x7752 (* l_0_6_93 l_0_6_93)))
 (let ((?x7750 (* l_0_6_92 l_0_6_92)))
 (let ((?x7748 (* l_0_6_78 l_0_6_78)))
 (let ((?x7746 (* l_0_6_77 l_0_6_77)))
 (let ((?x7207 (* 2.0 l_0_6_61)))
 (let ((?x7744 (* ?x7207 l_0_6_62)))
 (let ((?x7204 (* 2.0 l_0_6_46)))
 (let ((?x7742 (* ?x7204 l_0_6_47)))
 (let ((?x7741 (- (* (* 6.0 l_0_6_1) l_0_6_2) (* (* 6.0 l_0_6_16) l_0_6_17))))
 (= (- (- (- (- (+ (- ?x7741 ?x7742) ?x7744) ?x7746) ?x7748) ?x7750) ?x7752) 0.0)))))))))))
(assert
 (let ((?x7207 (* 2.0 l_0_6_61)))
 (let ((?x7775 (* ?x7207 l_0_6_64)))
 (let ((?x7204 (* 2.0 l_0_6_46)))
 (let ((?x7773 (* ?x7204 l_0_6_49)))
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7291 (* ?x7290 l_0_6_17)))
 (let ((?x7288 (* 2.0 l_0_6_1)))
 (let ((?x7289 (* ?x7288 l_0_6_2)))
 (let ((?x3676 (- (- (+ ?x7289 (* (* 6.0 l_0_6_1) l_0_6_4)) ?x7291) (* (* 6.0 l_0_6_16) l_0_6_19))))
 (let ((?x7779 (- (+ (- (- ?x3676 (* (* 2.0 l_0_6_31) l_0_6_32)) ?x7773) ?x7775) (* (* 2.0 l_0_6_77) l_0_6_79))))
 (let ((?x7785 (- (- ?x7779 (* (* 2.0 l_0_6_78) l_0_6_80)) (* (* 2.0 l_0_6_92) l_0_6_94))))
 (= (- ?x7785 (* (* 2.0 l_0_6_93) l_0_6_95)) 0.0)))))))))))))
(assert
 (let ((?x7207 (* 2.0 l_0_6_61)))
 (let ((?x7208 (* ?x7207 l_0_6_67)))
 (let ((?x7204 (* 2.0 l_0_6_46)))
 (let ((?x7205 (* ?x7204 l_0_6_52)))
 (let ((?x7810 (- (* (* 6.0 l_0_6_1) l_0_6_7) (* (* 6.0 l_0_6_16) l_0_6_22))))
 (let ((?x7816 (- (- (+ (- ?x7810 ?x7205) ?x7208) (* (* 2.0 l_0_6_77) l_0_6_82)) (* (* 2.0 l_0_6_78) l_0_6_83))))
 (let ((?x7820 (- (- ?x7816 (* (* 2.0 l_0_6_92) l_0_6_97)) (* (* 2.0 l_0_6_93) l_0_6_98))))
 (= ?x7820 0.0)))))))))
(assert
 (let ((?x7207 (* 2.0 l_0_6_61)))
 (let ((?x7854 (* ?x7207 l_0_6_71)))
 (let ((?x7204 (* 2.0 l_0_6_46)))
 (let ((?x7852 (* ?x7204 l_0_6_56)))
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7291 (* ?x7290 l_0_6_17)))
 (let ((?x7288 (* 2.0 l_0_6_1)))
 (let ((?x7289 (* ?x7288 l_0_6_2)))
 (let ((?x7845 (- (- (* (* 6.0 l_0_6_1) l_0_6_11) ?x7289) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x7851 (- (+ (- ?x7845 (* (* 2.0 l_0_6_102) l_0_6_93)) ?x7291) (* (* 6.0 l_0_6_16) l_0_6_26))))
 (let ((?x7859 (- (- (+ (- ?x7851 ?x7852) ?x7854) (* (* 2.0 l_0_6_77) l_0_6_86)) (* (* 2.0 l_0_6_78) l_0_6_87))))
 (= ?x7859 0.0)))))))))))))
(assert
 (let ((?x7905 (* l_0_6_63 l_0_6_63)))
 (let ((?x7903 (* l_0_6_62 l_0_6_62)))
 (let ((?x7901 (* l_0_6_48 l_0_6_48)))
 (let ((?x7899 (* l_0_6_47 l_0_6_47)))
 (let ((?x7467 (* l_0_6_3 l_0_6_3)))
 (let ((?x7897 (* 3.0 ?x7467)))
 (let ((?x7465 (* l_0_6_2 l_0_6_2)))
 (let ((?x7895 (* 3.0 ?x7465)))
 (let ((?x7894 (- (* (* (- 3.0) l_0_6_17) l_0_6_17) (* (* 3.0 l_0_6_18) l_0_6_18))))
 (= (+ (+ (- (- (+ (+ ?x7894 ?x7895) ?x7897) ?x7899) ?x7901) ?x7903) ?x7905) 0.0)))))))))))
(assert
 (let ((?x7302 (* 2.0 l_0_6_63)))
 (let ((?x7949 (* ?x7302 l_0_6_65)))
 (let ((?x7299 (* 2.0 l_0_6_62)))
 (let ((?x7947 (* ?x7299 l_0_6_64)))
 (let ((?x7296 (* 2.0 l_0_6_48)))
 (let ((?x7945 (* ?x7296 l_0_6_50)))
 (let ((?x7293 (* 2.0 l_0_6_47)))
 (let ((?x7943 (* ?x7293 l_0_6_49)))
 (let ((?x7941 (* l_0_6_33 l_0_6_33)))
 (let ((?x7939 (* l_0_6_32 l_0_6_32)))
 (let ((?x7467 (* l_0_6_3 l_0_6_3)))
 (let ((?x7465 (* l_0_6_2 l_0_6_2)))
 (let ((?x7463 (* l_0_6_18 l_0_6_18)))
 (let ((?x7929 (- (- (* (* (- 6.0) l_0_6_17) l_0_6_19) (* l_0_6_17 l_0_6_17)) (* (* 6.0 l_0_6_18) l_0_6_20))))
 (let ((?x7937 (+ (+ (+ (- ?x7929 ?x7463) (* (* 6.0 l_0_6_2) l_0_6_4)) ?x7465) (* (* 6.0 l_0_6_3) l_0_6_5))))
 (let ((?x7950 (+ (+ (- (- (- (- (+ ?x7937 ?x7467) ?x7939) ?x7941) ?x7943) ?x7945) ?x7947) ?x7949)))
 (= ?x7950 0.0))))))))))))))))))
(assert
 (let ((?x7302 (* 2.0 l_0_6_63)))
 (let ((?x7303 (* ?x7302 l_0_6_68)))
 (let ((?x7299 (* 2.0 l_0_6_62)))
 (let ((?x7300 (* ?x7299 l_0_6_67)))
 (let ((?x7296 (* 2.0 l_0_6_48)))
 (let ((?x7297 (* ?x7296 l_0_6_53)))
 (let ((?x7293 (* 2.0 l_0_6_47)))
 (let ((?x7294 (* ?x7293 l_0_6_52)))
 (let ((?x7981 (- (* (* (- 6.0) l_0_6_17) l_0_6_22) (* (* 6.0 l_0_6_18) l_0_6_23))))
 (let ((?x7985 (+ (+ ?x7981 (* (* 6.0 l_0_6_2) l_0_6_7)) (* (* 6.0 l_0_6_3) l_0_6_8))))
 (= (+ (+ (- (- ?x7985 ?x7294) ?x7297) ?x7300) ?x7303) 0.0))))))))))))
(assert
 (let ((?x7302 (* 2.0 l_0_6_63)))
 (let ((?x8024 (* ?x7302 l_0_6_72)))
 (let ((?x7299 (* 2.0 l_0_6_62)))
 (let ((?x8022 (* ?x7299 l_0_6_71)))
 (let ((?x7296 (* 2.0 l_0_6_48)))
 (let ((?x8020 (* ?x7296 l_0_6_57)))
 (let ((?x7293 (* 2.0 l_0_6_47)))
 (let ((?x8018 (* ?x7293 l_0_6_56)))
 (let ((?x7467 (* l_0_6_3 l_0_6_3)))
 (let ((?x7465 (* l_0_6_2 l_0_6_2)))
 (let ((?x7463 (* l_0_6_18 l_0_6_18)))
 (let ((?x7471 (* l_0_6_17 l_0_6_17)))
 (let ((?x8008 (+ (* (* 6.0 l_0_6_11) l_0_6_2) (* (* 6.0 l_0_6_12) l_0_6_3))))
 (let ((?x8014 (- (+ (- ?x8008 (* (* 6.0 l_0_6_17) l_0_6_26)) ?x7471) (* (* 6.0 l_0_6_18) l_0_6_27))))
 (let ((?x8025 (+ (+ (- (- (- (- (+ ?x8014 ?x7463) ?x7465) ?x7467) ?x8018) ?x8020) ?x8022) ?x8024)))
 (= ?x8025 0.0)))))))))))))))))
(assert
 (let ((?x8081 (* l_0_6_66 l_0_6_66)))
 (let ((?x8079 (* l_0_6_65 l_0_6_65)))
 (let ((?x8077 (* l_0_6_64 l_0_6_64)))
 (let ((?x7553 (* l_0_6_6 l_0_6_6)))
 (let ((?x8075 (* 3.0 ?x7553)))
 (let ((?x8073 (* l_0_6_51 l_0_6_51)))
 (let ((?x8071 (* l_0_6_50 l_0_6_50)))
 (let ((?x7551 (* l_0_6_5 l_0_6_5)))
 (let ((?x8069 (* 3.0 ?x7551)))
 (let ((?x8067 (* l_0_6_49 l_0_6_49)))
 (let ((?x7549 (* l_0_6_4 l_0_6_4)))
 (let ((?x8065 (* 3.0 ?x7549)))
 (let ((?x7488 (* 2.0 l_0_6_3)))
 (let ((?x7489 (* ?x7488 l_0_6_5)))
 (let ((?x7485 (* 2.0 l_0_6_2)))
 (let ((?x7486 (* ?x7485 l_0_6_4)))
 (let ((?x7482 (* 2.0 l_0_6_18)))
 (let ((?x7483 (* ?x7482 l_0_6_20)))
 (let ((?x7484 (- (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x7483)))
 (let ((?x8054 (- (+ (- ?x7484 (* (* 3.0 l_0_6_19) l_0_6_19)) ?x7486) (* (* 3.0 l_0_6_20) l_0_6_20))))
 (let ((?x8061 (- (+ (- ?x8054 (* (* 3.0 l_0_6_21) l_0_6_21)) ?x7489) (* (* 2.0 l_0_6_32) l_0_6_34))))
 (let ((?x8070 (+ (- (+ (- ?x8061 (* (* 2.0 l_0_6_33) l_0_6_35)) ?x8065) ?x8067) ?x8069)))
 (= (+ (+ (+ (+ (- (- ?x8070 ?x8071) ?x8073) ?x8075) ?x8077) ?x8079) ?x8081) 0.0))))))))))))))))))))))))
(assert
 (let ((?x7340 (* 2.0 l_0_6_66)))
 (let ((?x7341 (* ?x7340 l_0_6_69)))
 (let ((?x7337 (* 2.0 l_0_6_65)))
 (let ((?x7338 (* ?x7337 l_0_6_68)))
 (let ((?x7334 (* 2.0 l_0_6_64)))
 (let ((?x7335 (* ?x7334 l_0_6_67)))
 (let ((?x7331 (* 2.0 l_0_6_51)))
 (let ((?x7332 (* ?x7331 l_0_6_54)))
 (let ((?x7328 (* 2.0 l_0_6_50)))
 (let ((?x7329 (* ?x7328 l_0_6_53)))
 (let ((?x7325 (* 2.0 l_0_6_49)))
 (let ((?x7326 (* ?x7325 l_0_6_52)))
 (let ((?x7488 (* 2.0 l_0_6_3)))
 (let ((?x7507 (* ?x7488 l_0_6_8)))
 (let ((?x7485 (* 2.0 l_0_6_2)))
 (let ((?x7505 (* ?x7485 l_0_6_7)))
 (let ((?x7482 (* 2.0 l_0_6_18)))
 (let ((?x7503 (* ?x7482 l_0_6_23)))
 (let ((?x7504 (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x7503)))
 (let ((?x8106 (- (+ (- ?x7504 (* (* 6.0 l_0_6_19) l_0_6_22)) ?x7505) (* (* 6.0 l_0_6_20) l_0_6_23))))
 (let ((?x8112 (- (+ (- ?x8106 (* (* 6.0 l_0_6_21) l_0_6_24)) ?x7507) (* (* 2.0 l_0_6_32) l_0_6_37))))
 (let ((?x8117 (+ (- ?x8112 (* (* 2.0 l_0_6_33) l_0_6_38)) (* (* 6.0 l_0_6_4) l_0_6_7))))
 (let ((?x8123 (- (- (+ (- ?x8117 ?x7326) (* (* 6.0 l_0_6_5) l_0_6_8)) ?x7329) ?x7332)))
 (let ((?x8129 (+ (+ (+ (+ ?x8123 (* (* 6.0 l_0_6_6) l_0_6_9)) ?x7335) ?x7338) ?x7341)))
 (= ?x8129 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7340 (* 2.0 l_0_6_66)))
 (let ((?x8185 (* ?x7340 l_0_6_73)))
 (let ((?x7337 (* 2.0 l_0_6_65)))
 (let ((?x8183 (* ?x7337 l_0_6_72)))
 (let ((?x7334 (* 2.0 l_0_6_64)))
 (let ((?x8181 (* ?x7334 l_0_6_71)))
 (let ((?x7331 (* 2.0 l_0_6_51)))
 (let ((?x8179 (* ?x7331 l_0_6_58)))
 (let ((?x7328 (* 2.0 l_0_6_50)))
 (let ((?x8177 (* ?x7328 l_0_6_57)))
 (let ((?x7325 (* 2.0 l_0_6_49)))
 (let ((?x8175 (* ?x7325 l_0_6_56)))
 (let ((?x7488 (* 2.0 l_0_6_3)))
 (let ((?x7489 (* ?x7488 l_0_6_5)))
 (let ((?x7485 (* 2.0 l_0_6_2)))
 (let ((?x7486 (* ?x7485 l_0_6_4)))
 (let ((?x7482 (* 2.0 l_0_6_18)))
 (let ((?x7525 (* ?x7482 l_0_6_27)))
 (let ((?x7483 (* ?x7482 l_0_6_20)))
 (let ((?x7522 (* 2.0 l_0_6_17)))
 (let ((?x7523 (* ?x7522 l_0_6_26)))
 (let ((?x7519 (* 2.0 l_0_6_12)))
 (let ((?x7520 (* ?x7519 l_0_6_3)))
 (let ((?x7517 (* 2.0 l_0_6_11)))
 (let ((?x7518 (* ?x7517 l_0_6_2)))
 (let ((?x8154 (+ (+ (+ ?x7518 (* (* 6.0 l_0_6_11) l_0_6_4)) ?x7520) (* (* 6.0 l_0_6_12) l_0_6_5))))
 (let ((?x8160 (- (+ (+ ?x8154 (* (* 6.0 l_0_6_13) l_0_6_6)) (* ?x7522 l_0_6_19)) ?x7523)))
 (let ((?x8165 (- (- (- (+ ?x8160 ?x7483) ?x7525) (* (* 6.0 l_0_6_19) l_0_6_26)) ?x7486)))
 (let ((?x8169 (- (- ?x8165 (* (* 6.0 l_0_6_20) l_0_6_27)) (* (* 6.0 l_0_6_21) l_0_6_28))))
 (let ((?x8174 (- (- (- ?x8169 ?x7489) (* (* 2.0 l_0_6_32) l_0_6_41)) (* (* 2.0 l_0_6_33) l_0_6_42))))
 (= (+ (+ (+ (- (- (- ?x8174 ?x8175) ?x8177) ?x8179) ?x8181) ?x8183) ?x8185) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x7646 (* l_0_6_9 l_0_6_9)))
 (let ((?x8247 (* 3.0 ?x7646)))
 (let ((?x7644 (* l_0_6_8 l_0_6_8)))
 (let ((?x8245 (* 3.0 ?x7644)))
 (let ((?x7389 (* l_0_6_70 l_0_6_70)))
 (let ((?x7642 (* l_0_6_7 l_0_6_7)))
 (let ((?x8242 (* 3.0 ?x7642)))
 (let ((?x7387 (* l_0_6_69 l_0_6_69)))
 (let ((?x7385 (* l_0_6_68 l_0_6_68)))
 (let ((?x7383 (* l_0_6_67 l_0_6_67)))
 (let ((?x7207 (* 2.0 l_0_6_61)))
 (let ((?x7744 (* ?x7207 l_0_6_62)))
 (let ((?x7381 (* l_0_6_55 l_0_6_55)))
 (let ((?x7379 (* l_0_6_54 l_0_6_54)))
 (let ((?x7377 (* l_0_6_53 l_0_6_53)))
 (let ((?x7375 (* l_0_6_52 l_0_6_52)))
 (let ((?x7204 (* 2.0 l_0_6_46)))
 (let ((?x7742 (* ?x7204 l_0_6_47)))
 (let ((?x7633 (* l_0_6_10 l_0_6_10)))
 (let ((?x6280 (* 3.0 ?x7633)))
 (let ((?x8226 (- (- ?x6280 (* (* 3.0 l_0_6_22) l_0_6_22)) (* (* 3.0 l_0_6_23) l_0_6_23))))
 (let ((?x8232 (- (- ?x8226 (* (* 3.0 l_0_6_24) l_0_6_24)) (* (* 3.0 l_0_6_25) l_0_6_25))))
 (let ((?x8239 (+ (- (- (- (- (- (+ ?x8232 ?x7742) ?x7375) ?x7377) ?x7379) ?x7381) ?x7744) ?x7383)))
 (= (+ (+ (+ (+ (+ (+ ?x8239 ?x7385) ?x7387) ?x8242) ?x7389) ?x8245) ?x8247) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7430 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x7427 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x7424 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x7421 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x7418 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x7415 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x7412 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x7409 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x7488 (* 2.0 l_0_6_3)))
 (let ((?x7507 (* ?x7488 l_0_6_8)))
 (let ((?x7485 (* 2.0 l_0_6_2)))
 (let ((?x7505 (* ?x7485 l_0_6_7)))
 (let ((?x7482 (* 2.0 l_0_6_18)))
 (let ((?x7503 (* ?x7482 l_0_6_23)))
 (let ((?x6386 (+ (* (* 6.0 l_0_6_10) l_0_6_14) (* (* 6.0 l_0_6_11) l_0_6_7))))
 (let ((?x6381 (+ (+ ?x6386 (* (* 6.0 l_0_6_12) l_0_6_8)) (* (* 6.0 l_0_6_13) l_0_6_9))))
 (let ((?x1048 (- (- (+ (+ ?x6381 (* (* 2.0 l_0_6_17) l_0_6_22)) ?x7503) ?x7505) (* (* 6.0 l_0_6_22) l_0_6_26))))
 (let ((?x6324 (- (- ?x1048 (* (* 6.0 l_0_6_23) l_0_6_27)) (* (* 6.0 l_0_6_24) l_0_6_28))))
 (let ((?x8263 (- (- (- (- ?x6324 (* (* 6.0 l_0_6_25) l_0_6_29)) ?x7507) ?x7409) ?x7412)))
 (= (+ (+ (+ (+ (- (- ?x8263 ?x7415) ?x7418) ?x7421) ?x7424) ?x7427) ?x7430) 0.0)))))))))))))))))))))
(assert
 (let ((?x8319 (* l_0_6_75 l_0_6_75)))
 (let ((?x8317 (* l_0_6_74 l_0_6_74)))
 (let ((?x8315 (* l_0_6_73 l_0_6_73)))
 (let ((?x8313 (* l_0_6_72 l_0_6_72)))
 (let ((?x8311 (* l_0_6_71 l_0_6_71)))
 (let ((?x8309 (* l_0_6_60 l_0_6_60)))
 (let ((?x8307 (* l_0_6_59 l_0_6_59)))
 (let ((?x8305 (* l_0_6_58 l_0_6_58)))
 (let ((?x8303 (* l_0_6_57 l_0_6_57)))
 (let ((?x8301 (* l_0_6_56 l_0_6_56)))
 (let ((?x7482 (* 2.0 l_0_6_18)))
 (let ((?x7525 (* ?x7482 l_0_6_27)))
 (let ((?x7522 (* 2.0 l_0_6_17)))
 (let ((?x7523 (* ?x7522 l_0_6_26)))
 (let ((?x7714 (* l_0_6_15 l_0_6_15)))
 (let ((?x6422 (* 3.0 ?x7714)))
 (let ((?x7712 (* l_0_6_14 l_0_6_14)))
 (let ((?x1131 (* 3.0 ?x7712)))
 (let ((?x7710 (* l_0_6_13 l_0_6_13)))
 (let ((?x4233 (* 3.0 ?x7710)))
 (let ((?x7708 (* l_0_6_12 l_0_6_12)))
 (let ((?x6460 (* 3.0 ?x7708)))
 (let ((?x7519 (* 2.0 l_0_6_12)))
 (let ((?x7520 (* ?x7519 l_0_6_3)))
 (let ((?x7707 (* l_0_6_11 l_0_6_11)))
 (let ((?x6483 (* 3.0 ?x7707)))
 (let ((?x4222 (+ (+ (- (+ (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x6483) ?x7520) ?x6460) ?x4233)))
 (let ((?x8288 (- (+ (+ (+ (+ ?x4222 ?x1131) ?x6422) ?x7523) ?x7525) (* (* 3.0 l_0_6_26) l_0_6_26))))
 (let ((?x8294 (- (- ?x8288 (* (* 3.0 l_0_6_27) l_0_6_27)) (* (* 3.0 l_0_6_28) l_0_6_28))))
 (let ((?x8300 (- (- ?x8294 (* (* 3.0 l_0_6_29) l_0_6_29)) (* (* 3.0 l_0_6_30) l_0_6_30))))
 (let ((?x8314 (+ (+ (- (- (- (- (- ?x8300 ?x8301) ?x8303) ?x8305) ?x8307) ?x8309) ?x8311) ?x8313)))
 (= (+ (+ (+ ?x8314 ?x8315) ?x8317) ?x8319) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x8348 (* l_0_6_96 l_0_6_96)))
 (let ((?x8346 (* l_0_6_95 l_0_6_95)))
 (let ((?x8344 (* l_0_6_94 l_0_6_94)))
 (let ((?x8342 (* l_0_6_81 l_0_6_81)))
 (let ((?x8340 (* l_0_6_80 l_0_6_80)))
 (let ((?x8338 (* l_0_6_79 l_0_6_79)))
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7323 (* ?x7290 l_0_6_19)))
 (let ((?x7288 (* 2.0 l_0_6_1)))
 (let ((?x7322 (* ?x7288 l_0_6_4)))
 (let ((?x7324 (- ?x7322 ?x7323)))
 (let ((?x8343 (- (- (- (- ?x7324 (* (* 2.0 l_0_6_31) l_0_6_34)) ?x8338) ?x8340) ?x8342)))
 (= (- (- (- ?x8343 ?x8344) ?x8346) ?x8348) 0.0))))))))))))))
(assert
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7373 (* ?x7290 l_0_6_22)))
 (let ((?x7374 (- (* (* 2.0 l_0_6_1) l_0_6_7) ?x7373)))
 (let ((?x1418 (- (- ?x7374 (* (* 2.0 l_0_6_31) l_0_6_37)) (* (* 2.0 l_0_6_79) l_0_6_82))))
 (let ((?x8356 (- (- ?x1418 (* (* 2.0 l_0_6_80) l_0_6_83)) (* (* 2.0 l_0_6_81) l_0_6_84))))
 (let ((?x8362 (- (- ?x8356 (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x8362 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0))))))))
(assert
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7406 (* ?x7290 l_0_6_26)))
 (let ((?x7323 (* ?x7290 l_0_6_19)))
 (let ((?x7288 (* 2.0 l_0_6_1)))
 (let ((?x7322 (* ?x7288 l_0_6_4)))
 (let ((?x5473 (* ?x7288 l_0_6_11)))
 (let ((?x8391 (- (- (- ?x5473 ?x7322) (* (* 2.0 l_0_6_101) l_0_6_94)) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x8398 (- (- (+ (- ?x8391 (* (* 2.0 l_0_6_103) l_0_6_96)) ?x7323) ?x7406) (* (* 2.0 l_0_6_31) l_0_6_41))))
 (let ((?x8402 (- (- ?x8398 (* (* 2.0 l_0_6_79) l_0_6_86)) (* (* 2.0 l_0_6_80) l_0_6_87))))
 (= (- ?x8402 (* (* 2.0 l_0_6_81) l_0_6_88)) 0.0)))))))))))
(assert
 (let ((?x7553 (* l_0_6_6 l_0_6_6)))
 (let ((?x7551 (* l_0_6_5 l_0_6_5)))
 (let ((?x7549 (* l_0_6_4 l_0_6_4)))
 (let ((?x8429 (* l_0_6_36 l_0_6_36)))
 (let ((?x8427 (* l_0_6_35 l_0_6_35)))
 (let ((?x8425 (* l_0_6_34 l_0_6_34)))
 (let ((?x7547 (* l_0_6_21 l_0_6_21)))
 (let ((?x7548 (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x7547)))
 (= (+ (+ (+ (- (- (- ?x7548 ?x8425) ?x8427) ?x8429) ?x7549) ?x7551) ?x7553) 0.0))))))))))
(assert
 (let ((?x7582 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7579 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7576 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7572 (* 2.0 l_0_6_21)))
 (let ((?x7573 (* ?x7572 l_0_6_24)))
 (let ((?x7569 (* 2.0 l_0_6_20)))
 (let ((?x7570 (* ?x7569 l_0_6_23)))
 (let ((?x7574 (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x7570) ?x7573)))
 (let ((?x8448 (- (- ?x7574 (* (* 2.0 l_0_6_34) l_0_6_37)) (* (* 2.0 l_0_6_35) l_0_6_38))))
 (let ((?x8454 (+ (+ (+ (- ?x8448 (* (* 2.0 l_0_6_36) l_0_6_39)) ?x7576) ?x7579) ?x7582)))
 (= ?x8454 0.0))))))))))))
(assert
 (let ((?x7553 (* l_0_6_6 l_0_6_6)))
 (let ((?x7551 (* l_0_6_5 l_0_6_5)))
 (let ((?x7549 (* l_0_6_4 l_0_6_4)))
 (let ((?x7547 (* l_0_6_21 l_0_6_21)))
 (let ((?x7572 (* 2.0 l_0_6_21)))
 (let ((?x7610 (* ?x7572 l_0_6_28)))
 (let ((?x7545 (* l_0_6_20 l_0_6_20)))
 (let ((?x7569 (* 2.0 l_0_6_20)))
 (let ((?x7608 (* ?x7569 l_0_6_27)))
 (let ((?x7557 (* l_0_6_19 l_0_6_19)))
 (let ((?x7605 (* 2.0 l_0_6_19)))
 (let ((?x7606 (* ?x7605 l_0_6_26)))
 (let ((?x7602 (* 2.0 l_0_6_13)))
 (let ((?x7603 (* ?x7602 l_0_6_6)))
 (let ((?x7519 (* 2.0 l_0_6_12)))
 (let ((?x7600 (* ?x7519 l_0_6_5)))
 (let ((?x7607 (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x7600) ?x7603) ?x7606)))
 (let ((?x1790 (- (+ (- (+ (- (+ ?x7607 ?x7557) ?x7608) ?x7545) ?x7610) ?x7547) (* (* 2.0 l_0_6_34) l_0_6_41))))
 (let ((?x4685 (- (- ?x1790 (* (* 2.0 l_0_6_35) l_0_6_42)) (* (* 2.0 l_0_6_36) l_0_6_43))))
 (= (- (- (- ?x4685 ?x7549) ?x7551) ?x7553) 0.0)))))))))))))))))))))
(assert
 (let ((?x7646 (* l_0_6_9 l_0_6_9)))
 (let ((?x7644 (* l_0_6_8 l_0_6_8)))
 (let ((?x7642 (* l_0_6_7 l_0_6_7)))
 (let ((?x7207 (* 2.0 l_0_6_61)))
 (let ((?x7775 (* ?x7207 l_0_6_64)))
 (let ((?x7204 (* 2.0 l_0_6_46)))
 (let ((?x7773 (* ?x7204 l_0_6_49)))
 (let ((?x6278 (* l_0_6_40 l_0_6_40)))
 (let ((?x6729 (* l_0_6_39 l_0_6_39)))
 (let ((?x6725 (* l_0_6_38 l_0_6_38)))
 (let ((?x4817 (* l_0_6_37 l_0_6_37)))
 (let ((?x7640 (* l_0_6_25 l_0_6_25)))
 (let ((?x7638 (* l_0_6_24 l_0_6_24)))
 (let ((?x7636 (* l_0_6_23 l_0_6_23)))
 (let ((?x7639 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x7636) ?x7638)))
 (let ((?x7641 (- ?x7639 ?x7640)))
 (let ((?x1861 (+ (- (+ (- (- (- (- ?x7641 ?x4817) ?x6725) ?x6729) ?x6278) ?x7773) ?x7775) ?x7642)))
 (= (+ (+ ?x1861 ?x7644) ?x7646) 0.0)))))))))))))))))))
(assert
 (let ((?x7582 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7579 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7576 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7674 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x7671 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x7668 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x7665 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x7572 (* 2.0 l_0_6_21)))
 (let ((?x7573 (* ?x7572 l_0_6_24)))
 (let ((?x7569 (* 2.0 l_0_6_20)))
 (let ((?x7570 (* ?x7569 l_0_6_23)))
 (let ((?x7602 (* 2.0 l_0_6_13)))
 (let ((?x7662 (* ?x7602 l_0_6_9)))
 (let ((?x7519 (* 2.0 l_0_6_12)))
 (let ((?x7660 (* ?x7519 l_0_6_8)))
 (let ((?x7517 (* 2.0 l_0_6_11)))
 (let ((?x7658 (* ?x7517 l_0_6_7)))
 (let ((?x7663 (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x7658) ?x7660) ?x7662)))
 (let ((?x8511 (- (+ (+ (+ ?x7663 (* (* 2.0 l_0_6_19) l_0_6_22)) ?x7570) ?x7573) ?x7665)))
 (let ((?x8517 (- (- (- (- ?x8511 ?x7668) ?x7671) ?x7674) (* (* 2.0 l_0_6_37) l_0_6_41))))
 (let ((?x8523 (- (- ?x8517 (* (* 2.0 l_0_6_38) l_0_6_42)) (* (* 2.0 l_0_6_39) l_0_6_43))))
 (let ((?x8529 (- (- (- (- ?x8523 ?x7576) (* (* 2.0 l_0_6_40) l_0_6_44)) ?x7579) ?x7582)))
 (= ?x8529 0.0))))))))))))))))))))))))
(assert
 (let ((?x8564 (* l_0_6_45 l_0_6_45)))
 (let ((?x8562 (* l_0_6_44 l_0_6_44)))
 (let ((?x8560 (* l_0_6_43 l_0_6_43)))
 (let ((?x8558 (* l_0_6_42 l_0_6_42)))
 (let ((?x8556 (* l_0_6_41 l_0_6_41)))
 (let ((?x7724 (* l_0_6_30 l_0_6_30)))
 (let ((?x7722 (* l_0_6_29 l_0_6_29)))
 (let ((?x7720 (* l_0_6_28 l_0_6_28)))
 (let ((?x7718 (* l_0_6_27 l_0_6_27)))
 (let ((?x7716 (* l_0_6_26 l_0_6_26)))
 (let ((?x7572 (* 2.0 l_0_6_21)))
 (let ((?x7610 (* ?x7572 l_0_6_28)))
 (let ((?x7569 (* 2.0 l_0_6_20)))
 (let ((?x7608 (* ?x7569 l_0_6_27)))
 (let ((?x7605 (* 2.0 l_0_6_19)))
 (let ((?x7606 (* ?x7605 l_0_6_26)))
 (let ((?x7714 (* l_0_6_15 l_0_6_15)))
 (let ((?x7712 (* l_0_6_14 l_0_6_14)))
 (let ((?x7710 (* l_0_6_13 l_0_6_13)))
 (let ((?x7602 (* 2.0 l_0_6_13)))
 (let ((?x7603 (* ?x7602 l_0_6_6)))
 (let ((?x7708 (* l_0_6_12 l_0_6_12)))
 (let ((?x7519 (* 2.0 l_0_6_12)))
 (let ((?x7600 (* ?x7519 l_0_6_5)))
 (let ((?x6756 (- (+ (* (* (- 2.0) l_0_6_11) l_0_6_4) (* l_0_6_11 l_0_6_11)) ?x7600)))
 (let ((?x1930 (+ (+ (+ (+ (+ (- (+ ?x6756 ?x7708) ?x7603) ?x7710) ?x7712) ?x7714) ?x7606) ?x7608)))
 (let ((?x8557 (- (- (- (- (- (- (+ ?x1930 ?x7610) ?x7716) ?x7718) ?x7720) ?x7722) ?x7724) ?x8556)))
 (= (- (- (- (- ?x8557 ?x8558) ?x8560) ?x8562) ?x8564) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7373 (* ?x7290 l_0_6_22)))
 (let ((?x8582 (- (* (* (- 2.0) l_0_6_1) l_0_6_7) (* (* 2.0 l_0_6_100) l_0_6_104))))
 (let ((?x8586 (- (- ?x8582 (* (* 2.0 l_0_6_101) l_0_6_97)) (* (* 2.0 l_0_6_102) l_0_6_98))))
 (let ((?x8592 (- (+ (- ?x8586 (* (* 2.0 l_0_6_103) l_0_6_99)) ?x7373) (* (* 2.0 l_0_6_82) l_0_6_86))))
 (let ((?x8598 (- (- ?x8592 (* (* 2.0 l_0_6_83) l_0_6_87)) (* (* 2.0 l_0_6_84) l_0_6_88))))
 (= (- ?x8598 (* (* 2.0 l_0_6_85) l_0_6_89)) 0.0))))))))
(assert
 (let ((?x8649 (* l_0_6_90 l_0_6_90)))
 (let ((?x8647 (* l_0_6_89 l_0_6_89)))
 (let ((?x8645 (* l_0_6_88 l_0_6_88)))
 (let ((?x8643 (* l_0_6_87 l_0_6_87)))
 (let ((?x8641 (* l_0_6_86 l_0_6_86)))
 (let ((?x7290 (* 2.0 l_0_6_16)))
 (let ((?x7406 (* ?x7290 l_0_6_26)))
 (let ((?x8638 (* l_0_6_105 l_0_6_105)))
 (let ((?x8636 (* l_0_6_104 l_0_6_104)))
 (let ((?x8634 (* l_0_6_103 l_0_6_103)))
 (let ((?x8632 (* l_0_6_102 l_0_6_102)))
 (let ((?x8633 (- (- (* (* (- 2.0) l_0_6_1) l_0_6_11) (* l_0_6_101 l_0_6_101)) ?x8632)))
 (let ((?x8646 (- (- (- (+ (- (- (- ?x8633 ?x8634) ?x8636) ?x8638) ?x7406) ?x8641) ?x8643) ?x8645)))
 (= (- (- ?x8646 ?x8647) ?x8649) 0.0)))))))))))))))
(assert
 (let ((?x7646 (* l_0_6_9 l_0_6_9)))
 (let ((?x7644 (* l_0_6_8 l_0_6_8)))
 (let ((?x7642 (* l_0_6_7 l_0_6_7)))
 (let ((?x7207 (* 2.0 l_0_6_61)))
 (let ((?x7854 (* ?x7207 l_0_6_71)))
 (let ((?x7204 (* 2.0 l_0_6_46)))
 (let ((?x7852 (* ?x7204 l_0_6_56)))
 (let ((?x7640 (* l_0_6_25 l_0_6_25)))
 (let ((?x7638 (* l_0_6_24 l_0_6_24)))
 (let ((?x7636 (* l_0_6_23 l_0_6_23)))
 (let ((?x8671 (+ (+ (+ (* (- l_0_6_10) l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x7636) ?x7638)))
 (= (- (- (- (- (+ (+ ?x8671 ?x7640) ?x7852) ?x7854) ?x7642) ?x7644) ?x7646) 0.0)))))))))))))
(assert
 (let ((?x7674 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x7671 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x7668 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x7665 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x7602 (* 2.0 l_0_6_13)))
 (let ((?x7662 (* ?x7602 l_0_6_9)))
 (let ((?x7519 (* 2.0 l_0_6_12)))
 (let ((?x7660 (* ?x7519 l_0_6_8)))
 (let ((?x7517 (* 2.0 l_0_6_11)))
 (let ((?x7658 (* ?x7517 l_0_6_7)))
 (let ((?x8689 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x7658) ?x7660) ?x7662) ?x7665)))
 (= (+ (+ (+ ?x8689 ?x7668) ?x7671) ?x7674) 0.0)))))))))))))
(assert
 (let ((?x7724 (* l_0_6_30 l_0_6_30)))
 (let ((?x7722 (* l_0_6_29 l_0_6_29)))
 (let ((?x7720 (* l_0_6_28 l_0_6_28)))
 (let ((?x7718 (* l_0_6_27 l_0_6_27)))
 (let ((?x7716 (* l_0_6_26 l_0_6_26)))
 (let ((?x7714 (* l_0_6_15 l_0_6_15)))
 (let ((?x7712 (* l_0_6_14 l_0_6_14)))
 (let ((?x7710 (* l_0_6_13 l_0_6_13)))
 (let ((?x6881 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x7710) ?x7712)))
 (= (+ (+ (+ (+ (+ (- ?x6881 ?x7714) ?x7716) ?x7718) ?x7720) ?x7722) ?x7724) 0.0)))))))))))
(assert
 (let ((?x8719 (* l_0_6_99 l_0_6_99)))
 (let ((?x8717 (* l_0_6_98 l_0_6_98)))
 (let ((?x8715 (* l_0_6_97 l_0_6_97)))
 (let ((?x8713 (* l_0_6_85 l_0_6_85)))
 (let ((?x8711 (* l_0_6_84 l_0_6_84)))
 (let ((?x8709 (* l_0_6_83 l_0_6_83)))
 (let ((?x8707 (* l_0_6_82 l_0_6_82)))
 (let ((?x3336 (* l_0_6_61 l_0_6_61)))
 (let ((?x8708 (- (- (+ (* (- l_0_6_100) l_0_6_100) (* l_0_6_46 l_0_6_46)) ?x3336) ?x8707)))
 (= (- (- (- (- (- (- ?x8708 ?x8709) ?x8711) ?x8713) ?x8715) ?x8717) ?x8719) 0.0)))))))))))
(assert
 (let ((?x7905 (* l_0_6_63 l_0_6_63)))
 (let ((?x7903 (* l_0_6_62 l_0_6_62)))
 (let ((?x7901 (* l_0_6_48 l_0_6_48)))
 (let ((?x7899 (* l_0_6_47 l_0_6_47)))
 (let ((?x6930 (+ ?x7899 ?x7901)))
 (= (- (- ?x6930 ?x7903) ?x7905) 0.0)))))))
(assert
 (let ((?x7302 (* 2.0 l_0_6_63)))
 (let ((?x7949 (* ?x7302 l_0_6_65)))
 (let ((?x7299 (* 2.0 l_0_6_62)))
 (let ((?x7947 (* ?x7299 l_0_6_64)))
 (let ((?x7296 (* 2.0 l_0_6_48)))
 (let ((?x7945 (* ?x7296 l_0_6_50)))
 (let ((?x7293 (* 2.0 l_0_6_47)))
 (let ((?x7943 (* ?x7293 l_0_6_49)))
 (= (- (- (+ ?x7943 ?x7945) ?x7947) ?x7949) 0.0))))))))))
(assert
 (let ((?x7302 (* 2.0 l_0_6_63)))
 (let ((?x8024 (* ?x7302 l_0_6_72)))
 (let ((?x7299 (* 2.0 l_0_6_62)))
 (let ((?x8022 (* ?x7299 l_0_6_71)))
 (let ((?x7296 (* 2.0 l_0_6_48)))
 (let ((?x8020 (* ?x7296 l_0_6_57)))
 (let ((?x7293 (* 2.0 l_0_6_47)))
 (let ((?x8018 (* ?x7293 l_0_6_56)))
 (= (- (- (+ ?x8018 ?x8020) ?x8022) ?x8024) 0.0))))))))))
(assert
 (let ((?x8081 (* l_0_6_66 l_0_6_66)))
 (let ((?x8079 (* l_0_6_65 l_0_6_65)))
 (let ((?x8077 (* l_0_6_64 l_0_6_64)))
 (let ((?x8073 (* l_0_6_51 l_0_6_51)))
 (let ((?x6958 (- (+ (+ (* l_0_6_49 l_0_6_49) (* l_0_6_50 l_0_6_50)) ?x8073) ?x8077)))
 (= (- (- ?x6958 ?x8079) ?x8081) 0.0)))))))
(assert
 (let ((?x7340 (* 2.0 l_0_6_66)))
 (let ((?x8185 (* ?x7340 l_0_6_73)))
 (let ((?x7337 (* 2.0 l_0_6_65)))
 (let ((?x8183 (* ?x7337 l_0_6_72)))
 (let ((?x7334 (* 2.0 l_0_6_64)))
 (let ((?x8181 (* ?x7334 l_0_6_71)))
 (let ((?x7331 (* 2.0 l_0_6_51)))
 (let ((?x8179 (* ?x7331 l_0_6_58)))
 (let ((?x7328 (* 2.0 l_0_6_50)))
 (let ((?x8177 (* ?x7328 l_0_6_57)))
 (let ((?x7325 (* 2.0 l_0_6_49)))
 (let ((?x8175 (* ?x7325 l_0_6_56)))
 (= (- (- (- (+ (+ ?x8175 ?x8177) ?x8179) ?x8181) ?x8183) ?x8185) 0.0))))))))))))))
(assert
 (let ((?x8319 (* l_0_6_75 l_0_6_75)))
 (let ((?x8317 (* l_0_6_74 l_0_6_74)))
 (let ((?x8315 (* l_0_6_73 l_0_6_73)))
 (let ((?x8313 (* l_0_6_72 l_0_6_72)))
 (let ((?x8311 (* l_0_6_71 l_0_6_71)))
 (let ((?x8309 (* l_0_6_60 l_0_6_60)))
 (let ((?x8307 (* l_0_6_59 l_0_6_59)))
 (let ((?x8305 (* l_0_6_58 l_0_6_58)))
 (let ((?x8756 (+ (+ (+ (* l_0_6_56 l_0_6_56) (* l_0_6_57 l_0_6_57)) ?x8305) ?x8307)))
 (= (- (- (- (- (- (+ ?x8756 ?x8309) ?x8311) ?x8313) ?x8315) ?x8317) ?x8319) 0.0)))))))))))
(assert
 (let ((?x7015 (- (* (* (- 2.0) l_0_6_76) l_0_6_82) (* (* 2.0 l_0_6_91) l_0_6_97))))
 (= ?x7015 0.0)))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(check-sat)
(get-model)