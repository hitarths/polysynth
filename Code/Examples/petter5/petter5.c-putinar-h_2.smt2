(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun _a_5_ () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun _a_3_ () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_40 () Real)
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (- 1.0 l_0_2_1) 0.0))
(assert
 (let ((?x314 (+ (- (- (- (- (- l_0_2_2) l_0_2_3) l_0_2_4) l_0_2_5) l_0_2_6) 1.0)))
 (= ?x314 0.0)))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (let ((?x340 (+ (- (* (* (- 1.0) l_0_3_21) l_0_3_21) (* l_0_3_41 l_0_3_41)) 1.0)))
 (= ?x340 0.0)))
(assert
 (= (+ (* (- l_0_3_1) l_0_3_1) (* l_0_3_11 l_0_3_11)) 0.0))
(assert
 (let ((?x363 (* 2.0 l_0_3_11)))
 (let ((?x364 (* ?x363 l_0_3_12)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) ?x364) 0.0))))
(assert
 (let ((?x363 (* 2.0 l_0_3_11)))
 (let ((?x370 (* ?x363 l_0_3_14)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x370) 0.0))))
(assert
 (let ((?x363 (* 2.0 l_0_3_11)))
 (let ((?x380 (* ?x363 l_0_3_17)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x380) 0.0))))
(assert
 (let ((?x398 (* l_0_3_3 l_0_3_3)))
 (let ((?x396 (* l_0_3_2 l_0_3_2)))
 (let ((?x399 (- (- (+ (* l_0_3_12 l_0_3_12) (* l_0_3_13 l_0_3_13)) ?x396) ?x398)))
 (= ?x399 0.0)))))
(assert
 (let ((?x416 (* 2.0 l_0_3_3)))
 (let ((?x417 (* ?x416 l_0_3_5)))
 (let ((?x413 (* 2.0 l_0_3_2)))
 (let ((?x414 (* ?x413 l_0_3_4)))
 (let ((?x410 (* 2.0 l_0_3_13)))
 (let ((?x411 (* ?x410 l_0_3_15)))
 (= (- (- (+ (* (* 2.0 l_0_3_12) l_0_3_14) ?x411) ?x414) ?x417) 0.0))))))))
(assert
 (let ((?x416 (* 2.0 l_0_3_3)))
 (let ((?x443 (* ?x416 l_0_3_8)))
 (let ((?x413 (* 2.0 l_0_3_2)))
 (let ((?x441 (* ?x413 l_0_3_7)))
 (let ((?x410 (* 2.0 l_0_3_13)))
 (let ((?x439 (* ?x410 l_0_3_18)))
 (= (- (- (+ (* (* 2.0 l_0_3_12) l_0_3_17) ?x439) ?x441) ?x443) 0.0))))))))
(assert
 (let ((?x473 (* l_0_3_6 l_0_3_6)))
 (let ((?x471 (* l_0_3_5 l_0_3_5)))
 (let ((?x469 (* l_0_3_4 l_0_3_4)))
 (let ((?x467 (* l_0_3_16 l_0_3_16)))
 (let ((?x470 (- (+ (+ (* l_0_3_14 l_0_3_14) (* l_0_3_15 l_0_3_15)) ?x467) ?x469)))
 (= (- (- ?x470 ?x471) ?x473) 0.0)))))))
(assert
 (let ((?x502 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x499 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x496 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x493 (* (* 2.0 l_0_3_16) l_0_3_19)))
 (let ((?x490 (* (* 2.0 l_0_3_15) l_0_3_18)))
 (let ((?x500 (- (- (+ (+ (* (* 2.0 l_0_3_14) l_0_3_17) ?x490) ?x493) ?x496) ?x499)))
 (= (- ?x500 ?x502) 0.0))))))))
(assert
 (let ((?x545 (* l_0_3_9 l_0_3_9)))
 (let ((?x543 (* l_0_3_8 l_0_3_8)))
 (let ((?x541 (* l_0_3_7 l_0_3_7)))
 (let ((?x539 (* l_0_3_20 l_0_3_20)))
 (let ((?x537 (* l_0_3_19 l_0_3_19)))
 (let ((?x535 (* l_0_3_18 l_0_3_18)))
 (let ((?x538 (+ (+ (+ (* (- l_0_3_10) l_0_3_10) (* l_0_3_17 l_0_3_17)) ?x535) ?x537)))
 (= (- (- (- (+ ?x538 ?x539) ?x541) ?x543) ?x545) 0.0)))))))))
(assert
 (let ((?x563 (* 2.0 l_0_3_21)))
 (let ((?x564 (* ?x563 l_0_3_27)))
 (let ((?x568 (- (- (- (* l_0_3_1 l_0_3_1) (* l_0_3_11 l_0_3_11)) ?x564) (* (* 2.0 l_0_3_41) l_0_3_47))))
 (= ?x568 0.0)))))
(assert
 (let ((?x597 (* 2.0 l_0_3_31)))
 (let ((?x598 (* ?x597 l_0_3_37)))
 (let ((?x594 (* 2.0 l_0_3_23)))
 (let ((?x595 (* ?x594 l_0_3_28)))
 (let ((?x591 (* 2.0 l_0_3_22)))
 (let ((?x592 (* ?x591 l_0_3_27)))
 (let ((?x563 (* 2.0 l_0_3_21)))
 (let ((?x564 (* ?x563 l_0_3_27)))
 (let ((?x363 (* 2.0 l_0_3_11)))
 (let ((?x364 (* ?x363 l_0_3_12)))
 (let ((?x596 (- (- (- (- (* (* 2.0 l_0_3_1) l_0_3_2) ?x364) ?x564) ?x592) ?x595)))
 (let ((?x605 (- (- (+ ?x596 ?x598) (* (* 2.0 l_0_3_42) l_0_3_47)) (* (* 2.0 l_0_3_43) l_0_3_48))))
 (= ?x605 0.0))))))))))))))
(assert
 (let ((?x597 (* 2.0 l_0_3_31)))
 (let ((?x598 (* ?x597 l_0_3_37)))
 (let ((?x650 (* (* 2.0 l_0_3_26) l_0_3_29)))
 (let ((?x647 (* (* 2.0 l_0_3_25) l_0_3_28)))
 (let ((?x644 (* (* 2.0 l_0_3_24) l_0_3_27)))
 (let ((?x563 (* 2.0 l_0_3_21)))
 (let ((?x564 (* ?x563 l_0_3_27)))
 (let ((?x363 (* 2.0 l_0_3_11)))
 (let ((?x370 (* ?x363 l_0_3_14)))
 (let ((?x648 (- (- (+ (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x370) ?x564) ?x644) ?x647)))
 (let ((?x658 (- (- (- (- ?x648 ?x650) ?x598) (* (* 2.0 l_0_3_44) l_0_3_47)) (* (* 2.0 l_0_3_45) l_0_3_48))))
 (= (- ?x658 (* (* 2.0 l_0_3_46) l_0_3_49)) 0.0)))))))))))))
(assert
 (let ((?x728 (* l_0_3_50 l_0_3_50)))
 (let ((?x726 (* l_0_3_49 l_0_3_49)))
 (let ((?x724 (* l_0_3_48 l_0_3_48)))
 (let ((?x722 (* l_0_3_47 l_0_3_47)))
 (let ((?x363 (* 2.0 l_0_3_11)))
 (let ((?x380 (* ?x363 l_0_3_17)))
 (let ((?x712 (- (- (* (* 2.0 l_0_3_1) l_0_3_7) ?x380) (* (* 1.0 l_0_3_27) l_0_3_27))))
 (let ((?x718 (- (- ?x712 (* (* 1.0 l_0_3_28) l_0_3_28)) (* (* 1.0 l_0_3_29) l_0_3_29))))
 (let ((?x727 (- (- (- (- ?x718 (* (* 1.0 l_0_3_30) l_0_3_30)) ?x722) ?x724) ?x726)))
 (= (- ?x727 ?x728) 0.0)))))))))))
(assert
 (let ((?x773 (* 2.0 l_0_3_33)))
 (let ((?x774 (* ?x773 l_0_3_38)))
 (let ((?x770 (* 2.0 l_0_3_32)))
 (let ((?x771 (* ?x770 l_0_3_37)))
 (let ((?x398 (* l_0_3_3 l_0_3_3)))
 (let ((?x594 (* 2.0 l_0_3_23)))
 (let ((?x595 (* ?x594 l_0_3_28)))
 (let ((?x591 (* 2.0 l_0_3_22)))
 (let ((?x592 (* ?x591 l_0_3_27)))
 (let ((?x396 (* l_0_3_2 l_0_3_2)))
 (let ((?x767 (- (+ (- (* (- l_0_3_12) l_0_3_12) (* l_0_3_13 l_0_3_13)) ?x396) ?x592)))
 (= (+ (+ (+ (- ?x767 ?x595) ?x398) ?x771) ?x774) 0.0)))))))))))))
(assert
 (let ((?x811 (* (* 2.0 l_0_3_36) l_0_3_39)))
 (let ((?x808 (* (* 2.0 l_0_3_35) l_0_3_38)))
 (let ((?x805 (* (* 2.0 l_0_3_34) l_0_3_37)))
 (let ((?x773 (* 2.0 l_0_3_33)))
 (let ((?x774 (* ?x773 l_0_3_38)))
 (let ((?x770 (* 2.0 l_0_3_32)))
 (let ((?x771 (* ?x770 l_0_3_37)))
 (let ((?x416 (* 2.0 l_0_3_3)))
 (let ((?x417 (* ?x416 l_0_3_5)))
 (let ((?x650 (* (* 2.0 l_0_3_26) l_0_3_29)))
 (let ((?x647 (* (* 2.0 l_0_3_25) l_0_3_28)))
 (let ((?x644 (* (* 2.0 l_0_3_24) l_0_3_27)))
 (let ((?x594 (* 2.0 l_0_3_23)))
 (let ((?x595 (* ?x594 l_0_3_28)))
 (let ((?x591 (* 2.0 l_0_3_22)))
 (let ((?x592 (* ?x591 l_0_3_27)))
 (let ((?x413 (* 2.0 l_0_3_2)))
 (let ((?x414 (* ?x413 l_0_3_4)))
 (let ((?x410 (* 2.0 l_0_3_13)))
 (let ((?x411 (* ?x410 l_0_3_15)))
 (let ((?x797 (+ (+ (+ (- (* (* (- 2.0) l_0_3_12) l_0_3_14) ?x411) ?x414) ?x592) ?x595)))
 (let ((?x806 (+ (- (- (+ (- (- (- ?x797 ?x644) ?x647) ?x650) ?x417) ?x771) ?x774) ?x805)))
 (= (+ (+ ?x806 ?x808) ?x811) 0.0))))))))))))))))))))))))
(assert
 (let ((?x857 (* l_0_3_40 l_0_3_40)))
 (let ((?x855 (* l_0_3_39 l_0_3_39)))
 (let ((?x853 (* l_0_3_38 l_0_3_38)))
 (let ((?x851 (* l_0_3_37 l_0_3_37)))
 (let ((?x746 (* l_0_3_30 l_0_3_30)))
 (let ((?x416 (* 2.0 l_0_3_3)))
 (let ((?x443 (* ?x416 l_0_3_8)))
 (let ((?x742 (* l_0_3_29 l_0_3_29)))
 (let ((?x738 (* l_0_3_28 l_0_3_28)))
 (let ((?x734 (* l_0_3_27 l_0_3_27)))
 (let ((?x413 (* 2.0 l_0_3_2)))
 (let ((?x441 (* ?x413 l_0_3_7)))
 (let ((?x410 (* 2.0 l_0_3_13)))
 (let ((?x439 (* ?x410 l_0_3_18)))
 (let ((?x847 (- (- (+ (- (* (* (- 2.0) l_0_3_12) l_0_3_17) ?x439) ?x441) ?x734) ?x738)))
 (let ((?x858 (+ (+ (+ (+ (- (+ (- ?x847 ?x742) ?x443) ?x746) ?x851) ?x853) ?x855) ?x857)))
 (= ?x858 0.0))))))))))))))))))
(assert
 (let ((?x473 (* l_0_3_6 l_0_3_6)))
 (let ((?x471 (* l_0_3_5 l_0_3_5)))
 (let ((?x469 (* l_0_3_4 l_0_3_4)))
 (let ((?x811 (* (* 2.0 l_0_3_36) l_0_3_39)))
 (let ((?x808 (* (* 2.0 l_0_3_35) l_0_3_38)))
 (let ((?x805 (* (* 2.0 l_0_3_34) l_0_3_37)))
 (let ((?x650 (* (* 2.0 l_0_3_26) l_0_3_29)))
 (let ((?x647 (* (* 2.0 l_0_3_25) l_0_3_28)))
 (let ((?x644 (* (* 2.0 l_0_3_24) l_0_3_27)))
 (let ((?x467 (* l_0_3_16 l_0_3_16)))
 (let ((?x885 (+ (- (- (* (- l_0_3_14) l_0_3_14) (* l_0_3_15 l_0_3_15)) ?x467) ?x644)))
 (let ((?x892 (+ (+ (- (- (- (+ (+ ?x885 ?x647) ?x650) ?x805) ?x808) ?x811) ?x469) ?x471)))
 (= (+ ?x892 ?x473) 0.0))))))))))))))
(assert
 (let ((?x502 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x499 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x857 (* l_0_3_40 l_0_3_40)))
 (let ((?x496 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x855 (* l_0_3_39 l_0_3_39)))
 (let ((?x853 (* l_0_3_38 l_0_3_38)))
 (let ((?x851 (* l_0_3_37 l_0_3_37)))
 (let ((?x746 (* l_0_3_30 l_0_3_30)))
 (let ((?x742 (* l_0_3_29 l_0_3_29)))
 (let ((?x738 (* l_0_3_28 l_0_3_28)))
 (let ((?x734 (* l_0_3_27 l_0_3_27)))
 (let ((?x493 (* (* 2.0 l_0_3_16) l_0_3_19)))
 (let ((?x490 (* (* 2.0 l_0_3_15) l_0_3_18)))
 (let ((?x922 (+ (+ (- (- (* (* (- 2.0) l_0_3_14) l_0_3_17) ?x490) ?x493) ?x734) ?x738)))
 (let ((?x929 (- (+ (- (- (- (+ (+ ?x922 ?x742) ?x746) ?x851) ?x853) ?x855) ?x496) ?x857)))
 (= (+ (+ ?x929 ?x499) ?x502) 0.0)))))))))))))))))
(assert
 (let ((?x545 (* l_0_3_9 l_0_3_9)))
 (let ((?x543 (* l_0_3_8 l_0_3_8)))
 (let ((?x541 (* l_0_3_7 l_0_3_7)))
 (let ((?x539 (* l_0_3_20 l_0_3_20)))
 (let ((?x537 (* l_0_3_19 l_0_3_19)))
 (let ((?x535 (* l_0_3_18 l_0_3_18)))
 (let ((?x956 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_17 l_0_3_17)) ?x535) ?x537)))
 (= (+ (+ (+ (- ?x956 ?x539) ?x541) ?x543) ?x545) 0.0)))))))))
(assert
 (let ((?x977 (* l_0_3_31 l_0_3_31)))
 (let ((?x978 (+ (- (* (* (- 2.0) l_0_3_21) l_0_3_22) (* l_0_3_21 l_0_3_21)) ?x977)))
 (= (- ?x978 (* (* 2.0 l_0_3_41) l_0_3_42)) 0.0))))
(assert
 (let ((?x1007 (* l_0_3_43 l_0_3_43)))
 (let ((?x1005 (* l_0_3_42 l_0_3_42)))
 (let ((?x597 (* 2.0 l_0_3_31)))
 (let ((?x1003 (* ?x597 l_0_3_32)))
 (let ((?x974 (* (- 2.0) l_0_3_21)))
 (let ((?x975 (* ?x974 l_0_3_22)))
 (let ((?x1002 (- (- ?x975 (* (* 1.0 l_0_3_22) l_0_3_22)) (* (* 1.0 l_0_3_23) l_0_3_23))))
 (= (- (- (+ ?x1002 ?x1003) ?x1005) ?x1007) 0.0)))))))))
(assert
 (let ((?x597 (* 2.0 l_0_3_31)))
 (let ((?x1037 (* ?x597 l_0_3_34)))
 (let ((?x1003 (* ?x597 l_0_3_32)))
 (let ((?x594 (* 2.0 l_0_3_23)))
 (let ((?x1034 (* ?x594 l_0_3_25)))
 (let ((?x591 (* 2.0 l_0_3_22)))
 (let ((?x1032 (* ?x591 l_0_3_24)))
 (let ((?x563 (* 2.0 l_0_3_21)))
 (let ((?x1030 (* ?x563 l_0_3_24)))
 (let ((?x1040 (- (+ (- (- (- (- (* ?x563 l_0_3_22) ?x1030) ?x1032) ?x1034) ?x1003) ?x1037) (* (* 2.0 l_0_3_42) l_0_3_44))))
 (= (- ?x1040 (* (* 2.0 l_0_3_43) l_0_3_45)) 0.0))))))))))))
(assert
 (let ((?x1086 (* l_0_3_33 l_0_3_33)))
 (let ((?x1084 (* l_0_3_32 l_0_3_32)))
 (let ((?x1087 (+ (+ (- (* (- l_0_3_22) l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x1084) ?x1086)))
 (= ?x1087 0.0)))))
(assert
 (let ((?x1086 (* l_0_3_33 l_0_3_33)))
 (let ((?x773 (* 2.0 l_0_3_33)))
 (let ((?x1103 (* ?x773 l_0_3_35)))
 (let ((?x1084 (* l_0_3_32 l_0_3_32)))
 (let ((?x770 (* 2.0 l_0_3_32)))
 (let ((?x1100 (* ?x770 l_0_3_34)))
 (let ((?x1013 (* l_0_3_23 l_0_3_23)))
 (let ((?x594 (* 2.0 l_0_3_23)))
 (let ((?x1034 (* ?x594 l_0_3_25)))
 (let ((?x1098 (- (+ (* (* (- 2.0) l_0_3_22) l_0_3_24) (* l_0_3_22 l_0_3_22)) ?x1034)))
 (= (- (+ (- (+ (+ ?x1098 ?x1013) ?x1100) ?x1084) ?x1103) ?x1086) 0.0))))))))))))
(assert
 (let ((?x1134 (* l_0_3_36 l_0_3_36)))
 (let ((?x1132 (* l_0_3_35 l_0_3_35)))
 (let ((?x1130 (* l_0_3_34 l_0_3_34)))
 (let ((?x773 (* 2.0 l_0_3_33)))
 (let ((?x1103 (* ?x773 l_0_3_35)))
 (let ((?x770 (* 2.0 l_0_3_32)))
 (let ((?x1100 (* ?x770 l_0_3_34)))
 (let ((?x1126 (* l_0_3_26 l_0_3_26)))
 (let ((?x1124 (* l_0_3_25 l_0_3_25)))
 (let ((?x1122 (* l_0_3_24 l_0_3_24)))
 (let ((?x594 (* 2.0 l_0_3_23)))
 (let ((?x1034 (* ?x594 l_0_3_25)))
 (let ((?x591 (* 2.0 l_0_3_22)))
 (let ((?x1032 (* ?x591 l_0_3_24)))
 (let ((?x1131 (+ (- (- (- (- (- (+ ?x1032 ?x1034) ?x1122) ?x1124) ?x1126) ?x1100) ?x1103) ?x1130)))
 (= (+ (+ ?x1131 ?x1132) ?x1134) 0.0)))))))))))))))))
(assert
 (let ((?x977 (* l_0_3_31 l_0_3_31)))
 (let ((?x1159 (- (+ (* (* (- 2.0) l_0_3_21) l_0_3_24) (* l_0_3_21 l_0_3_21)) ?x977)))
 (= (- ?x1159 (* (* 2.0 l_0_3_41) l_0_3_44)) 0.0))))
(assert
 (let ((?x1187 (* l_0_3_46 l_0_3_46)))
 (let ((?x1185 (* l_0_3_45 l_0_3_45)))
 (let ((?x1183 (* l_0_3_44 l_0_3_44)))
 (let ((?x597 (* 2.0 l_0_3_31)))
 (let ((?x1037 (* ?x597 l_0_3_34)))
 (let ((?x563 (* 2.0 l_0_3_21)))
 (let ((?x1030 (* ?x563 l_0_3_24)))
 (let ((?x1178 (- (- ?x1030 (* (* 1.0 l_0_3_24) l_0_3_24)) (* (* 1.0 l_0_3_25) l_0_3_25))))
 (let ((?x1186 (- (- (- (- ?x1178 (* (* 1.0 l_0_3_26) l_0_3_26)) ?x1037) ?x1183) ?x1185)))
 (= (- ?x1186 ?x1187) 0.0)))))))))))
(assert
 (let ((?x1134 (* l_0_3_36 l_0_3_36)))
 (let ((?x1132 (* l_0_3_35 l_0_3_35)))
 (let ((?x1130 (* l_0_3_34 l_0_3_34)))
 (let ((?x1126 (* l_0_3_26 l_0_3_26)))
 (let ((?x1211 (- (+ (+ (* l_0_3_24 l_0_3_24) (* l_0_3_25 l_0_3_25)) ?x1126) ?x1130)))
 (= (- (- ?x1211 ?x1132) ?x1134) 0.0)))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_11 0.0))
(assert
 (>= l_0_3_13 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_20 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_23 0.0))
(assert
 (>= l_0_3_26 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_41 0.0))
(assert
 (>= l_0_3_43 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_50 0.0))
(assert
 (= (+ (+ (* (- l_0_4_1) l_0_4_1) (* l_0_4_11 l_0_4_11)) 1.0) 0.0))
(assert
 (= (- 6.0 _a_5_) 0.0))
(assert
 (= (- 15.0 _a_4_) 0.0))
(assert
 (let ((?x1280 (* l_0_4_36 l_0_4_36)))
 (let ((?x1278 (* l_0_4_35 l_0_4_35)))
 (let ((?x1276 (* l_0_4_34 l_0_4_34)))
 (let ((?x1274 (* l_0_4_26 l_0_4_26)))
 (let ((?x1272 (* l_0_4_25 l_0_4_25)))
 (let ((?x1279 (+ (+ (+ (+ (+ (- _a_2_) (* l_0_4_24 l_0_4_24)) ?x1272) ?x1274) ?x1276) ?x1278)))
 (= (+ (+ ?x1279 ?x1280) 20.0) 0.0))))))))
(assert
 (let ((?x1314 (* l_0_4_46 l_0_4_46)))
 (let ((?x1312 (* l_0_4_45 l_0_4_45)))
 (let ((?x1310 (* l_0_4_44 l_0_4_44)))
 (let ((?x1307 (* 2.0 l_0_4_31)))
 (let ((?x1308 (* ?x1307 l_0_4_34)))
 (let ((?x1300 (- (+ (- _a_1_) (* (* 2.0 l_0_4_21) l_0_4_24)) (* (* 1.0 l_0_4_24) l_0_4_24))))
 (let ((?x1306 (- (- ?x1300 (* (* 1.0 l_0_4_25) l_0_4_25)) (* (* 1.0 l_0_4_26) l_0_4_26))))
 (= (+ (- (- (- (+ ?x1306 ?x1308) ?x1310) ?x1312) ?x1314) 15.0) 0.0)))))))))
(assert
 (let ((?x1348 (* l_0_4_31 l_0_4_31)))
 (let ((?x1346 (* l_0_4_21 l_0_4_21)))
 (let ((?x1349 (+ (+ (- (- _a_3_) (* (* 2.0 l_0_4_21) l_0_4_24)) ?x1346) ?x1348)))
 (= (+ (- ?x1349 (* (* 2.0 l_0_4_41) l_0_4_44)) 6.0) 0.0)))))
(assert
 (let ((?x1374 (* l_0_4_41 l_0_4_41)))
 (let ((?x1376 (+ (- (- (- _a_0_) (* (* 1.0 l_0_4_21) l_0_4_21)) ?x1374) 1.0)))
 (= ?x1376 0.0))))
(assert
 (let ((?x1288 (* 2.0 l_0_4_21)))
 (let ((?x1386 (* ?x1288 l_0_4_27)))
 (let ((?x1389 (- (- (- (* l_0_4_1 l_0_4_1) (* l_0_4_11 l_0_4_11)) ?x1386) (* (* 2.0 l_0_4_41) l_0_4_47))))
 (= (- ?x1389 1.0) 0.0)))))
(assert
 (let ((?x1414 (* 2.0 l_0_4_11)))
 (let ((?x1415 (* ?x1414 l_0_4_12)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) ?x1415) 0.0))))
(assert
 (let ((?x1414 (* 2.0 l_0_4_11)))
 (let ((?x1421 (* ?x1414 l_0_4_14)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x1421) 0.0))))
(assert
 (let ((?x1414 (* 2.0 l_0_4_11)))
 (let ((?x1431 (* ?x1414 l_0_4_17)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) ?x1431) 0.0))))
(assert
 (let ((?x1449 (* l_0_4_3 l_0_4_3)))
 (let ((?x1447 (* l_0_4_2 l_0_4_2)))
 (let ((?x1450 (- (- (+ (* l_0_4_12 l_0_4_12) (* l_0_4_13 l_0_4_13)) ?x1447) ?x1449)))
 (= ?x1450 0.0)))))
(assert
 (let ((?x1467 (* 2.0 l_0_4_3)))
 (let ((?x1468 (* ?x1467 l_0_4_5)))
 (let ((?x1464 (* 2.0 l_0_4_2)))
 (let ((?x1465 (* ?x1464 l_0_4_4)))
 (let ((?x1461 (* 2.0 l_0_4_13)))
 (let ((?x1462 (* ?x1461 l_0_4_15)))
 (= (- (- (+ (* (* 2.0 l_0_4_12) l_0_4_14) ?x1462) ?x1465) ?x1468) 0.0))))))))
(assert
 (let ((?x1467 (* 2.0 l_0_4_3)))
 (let ((?x1494 (* ?x1467 l_0_4_8)))
 (let ((?x1464 (* 2.0 l_0_4_2)))
 (let ((?x1492 (* ?x1464 l_0_4_7)))
 (let ((?x1461 (* 2.0 l_0_4_13)))
 (let ((?x1490 (* ?x1461 l_0_4_18)))
 (= (- (- (+ (* (* 2.0 l_0_4_12) l_0_4_17) ?x1490) ?x1492) ?x1494) 0.0))))))))
(assert
 (let ((?x1524 (* l_0_4_6 l_0_4_6)))
 (let ((?x1522 (* l_0_4_5 l_0_4_5)))
 (let ((?x1520 (* l_0_4_4 l_0_4_4)))
 (let ((?x1518 (* l_0_4_16 l_0_4_16)))
 (let ((?x1521 (- (+ (+ (* l_0_4_14 l_0_4_14) (* l_0_4_15 l_0_4_15)) ?x1518) ?x1520)))
 (= (- (- ?x1521 ?x1522) ?x1524) 0.0)))))))
(assert
 (let ((?x1553 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x1550 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x1547 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x1544 (* (* 2.0 l_0_4_16) l_0_4_19)))
 (let ((?x1541 (* (* 2.0 l_0_4_15) l_0_4_18)))
 (let ((?x1551 (- (- (+ (+ (* (* 2.0 l_0_4_14) l_0_4_17) ?x1541) ?x1544) ?x1547) ?x1550)))
 (= (- ?x1551 ?x1553) 0.0))))))))
(assert
 (let ((?x1596 (* l_0_4_9 l_0_4_9)))
 (let ((?x1594 (* l_0_4_8 l_0_4_8)))
 (let ((?x1592 (* l_0_4_7 l_0_4_7)))
 (let ((?x1590 (* l_0_4_20 l_0_4_20)))
 (let ((?x1588 (* l_0_4_19 l_0_4_19)))
 (let ((?x1586 (* l_0_4_18 l_0_4_18)))
 (let ((?x1589 (+ (+ (+ (* (- l_0_4_10) l_0_4_10) (* l_0_4_17 l_0_4_17)) ?x1586) ?x1588)))
 (= (- (- (- (+ ?x1589 ?x1590) ?x1592) ?x1594) ?x1596) 0.0)))))))))
(assert
 (let ((?x1307 (* 2.0 l_0_4_31)))
 (let ((?x1623 (* ?x1307 l_0_4_37)))
 (let ((?x1620 (* 2.0 l_0_4_23)))
 (let ((?x1621 (* ?x1620 l_0_4_28)))
 (let ((?x1617 (* 2.0 l_0_4_22)))
 (let ((?x1618 (* ?x1617 l_0_4_27)))
 (let ((?x1288 (* 2.0 l_0_4_21)))
 (let ((?x1386 (* ?x1288 l_0_4_27)))
 (let ((?x1414 (* 2.0 l_0_4_11)))
 (let ((?x1415 (* ?x1414 l_0_4_12)))
 (let ((?x1622 (- (- (- (- (* (* 2.0 l_0_4_1) l_0_4_2) ?x1415) ?x1386) ?x1618) ?x1621)))
 (let ((?x1630 (- (- (- ?x1622 ?x1623) (* (* 2.0 l_0_4_42) l_0_4_47)) (* (* 2.0 l_0_4_43) l_0_4_48))))
 (= ?x1630 0.0))))))))))))))
(assert
 (let ((?x1307 (* 2.0 l_0_4_31)))
 (let ((?x1623 (* ?x1307 l_0_4_37)))
 (let ((?x1680 (* (* 2.0 l_0_4_26) l_0_4_29)))
 (let ((?x1677 (* (* 2.0 l_0_4_25) l_0_4_28)))
 (let ((?x1674 (* (* 2.0 l_0_4_24) l_0_4_27)))
 (let ((?x1288 (* 2.0 l_0_4_21)))
 (let ((?x1386 (* ?x1288 l_0_4_27)))
 (let ((?x1414 (* 2.0 l_0_4_11)))
 (let ((?x1421 (* ?x1414 l_0_4_14)))
 (let ((?x1678 (- (- (+ (- (* (* 2.0 l_0_4_1) l_0_4_4) ?x1421) ?x1386) ?x1674) ?x1677)))
 (let ((?x1688 (- (- (+ (- ?x1678 ?x1680) ?x1623) (* (* 2.0 l_0_4_44) l_0_4_47)) (* (* 2.0 l_0_4_45) l_0_4_48))))
 (= (- ?x1688 (* (* 2.0 l_0_4_46) l_0_4_49)) 0.0)))))))))))))
(assert
 (let ((?x1755 (* l_0_4_50 l_0_4_50)))
 (let ((?x1753 (* l_0_4_49 l_0_4_49)))
 (let ((?x1751 (* l_0_4_48 l_0_4_48)))
 (let ((?x1749 (* l_0_4_47 l_0_4_47)))
 (let ((?x1414 (* 2.0 l_0_4_11)))
 (let ((?x1431 (* ?x1414 l_0_4_17)))
 (let ((?x1739 (- (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x1431) (* (* 1.0 l_0_4_27) l_0_4_27))))
 (let ((?x1745 (- (- ?x1739 (* (* 1.0 l_0_4_28) l_0_4_28)) (* (* 1.0 l_0_4_29) l_0_4_29))))
 (let ((?x1754 (- (- (- (- ?x1745 (* (* 1.0 l_0_4_30) l_0_4_30)) ?x1749) ?x1751) ?x1753)))
 (= (- ?x1754 ?x1755) 0.0)))))))))))
(assert
 (let ((?x1800 (* 2.0 l_0_4_33)))
 (let ((?x1801 (* ?x1800 l_0_4_38)))
 (let ((?x1797 (* 2.0 l_0_4_32)))
 (let ((?x1798 (* ?x1797 l_0_4_37)))
 (let ((?x1449 (* l_0_4_3 l_0_4_3)))
 (let ((?x1620 (* 2.0 l_0_4_23)))
 (let ((?x1621 (* ?x1620 l_0_4_28)))
 (let ((?x1617 (* 2.0 l_0_4_22)))
 (let ((?x1618 (* ?x1617 l_0_4_27)))
 (let ((?x1447 (* l_0_4_2 l_0_4_2)))
 (let ((?x1794 (- (+ (- (* (- l_0_4_12) l_0_4_12) (* l_0_4_13 l_0_4_13)) ?x1447) ?x1618)))
 (= (- (- (+ (- ?x1794 ?x1621) ?x1449) ?x1798) ?x1801) 0.0)))))))))))))
(assert
 (let ((?x1847 (* (* 2.0 l_0_4_36) l_0_4_39)))
 (let ((?x1844 (* (* 2.0 l_0_4_35) l_0_4_38)))
 (let ((?x1841 (* (* 2.0 l_0_4_34) l_0_4_37)))
 (let ((?x1800 (* 2.0 l_0_4_33)))
 (let ((?x1801 (* ?x1800 l_0_4_38)))
 (let ((?x1797 (* 2.0 l_0_4_32)))
 (let ((?x1798 (* ?x1797 l_0_4_37)))
 (let ((?x1467 (* 2.0 l_0_4_3)))
 (let ((?x1468 (* ?x1467 l_0_4_5)))
 (let ((?x1680 (* (* 2.0 l_0_4_26) l_0_4_29)))
 (let ((?x1677 (* (* 2.0 l_0_4_25) l_0_4_28)))
 (let ((?x1674 (* (* 2.0 l_0_4_24) l_0_4_27)))
 (let ((?x1620 (* 2.0 l_0_4_23)))
 (let ((?x1621 (* ?x1620 l_0_4_28)))
 (let ((?x1617 (* 2.0 l_0_4_22)))
 (let ((?x1618 (* ?x1617 l_0_4_27)))
 (let ((?x1464 (* 2.0 l_0_4_2)))
 (let ((?x1465 (* ?x1464 l_0_4_4)))
 (let ((?x1461 (* 2.0 l_0_4_13)))
 (let ((?x1462 (* ?x1461 l_0_4_15)))
 (let ((?x1833 (+ (+ (+ (- (* (* (- 2.0) l_0_4_12) l_0_4_14) ?x1462) ?x1465) ?x1618) ?x1621)))
 (let ((?x1842 (- (+ (+ (+ (- (- (- ?x1833 ?x1674) ?x1677) ?x1680) ?x1468) ?x1798) ?x1801) ?x1841)))
 (= (- (- ?x1842 ?x1844) ?x1847) 0.0))))))))))))))))))))))))
(assert
 (let ((?x1897 (* l_0_4_40 l_0_4_40)))
 (let ((?x1895 (* l_0_4_39 l_0_4_39)))
 (let ((?x1893 (* l_0_4_38 l_0_4_38)))
 (let ((?x1891 (* l_0_4_37 l_0_4_37)))
 (let ((?x1773 (* l_0_4_30 l_0_4_30)))
 (let ((?x1467 (* 2.0 l_0_4_3)))
 (let ((?x1494 (* ?x1467 l_0_4_8)))
 (let ((?x1769 (* l_0_4_29 l_0_4_29)))
 (let ((?x1765 (* l_0_4_28 l_0_4_28)))
 (let ((?x1761 (* l_0_4_27 l_0_4_27)))
 (let ((?x1464 (* 2.0 l_0_4_2)))
 (let ((?x1492 (* ?x1464 l_0_4_7)))
 (let ((?x1461 (* 2.0 l_0_4_13)))
 (let ((?x1490 (* ?x1461 l_0_4_18)))
 (let ((?x1887 (- (- (+ (- (* (* (- 2.0) l_0_4_12) l_0_4_17) ?x1490) ?x1492) ?x1761) ?x1765)))
 (let ((?x1898 (- (- (- (- (- (+ (- ?x1887 ?x1769) ?x1494) ?x1773) ?x1891) ?x1893) ?x1895) ?x1897)))
 (= ?x1898 0.0))))))))))))))))))
(assert
 (let ((?x1524 (* l_0_4_6 l_0_4_6)))
 (let ((?x1522 (* l_0_4_5 l_0_4_5)))
 (let ((?x1520 (* l_0_4_4 l_0_4_4)))
 (let ((?x1847 (* (* 2.0 l_0_4_36) l_0_4_39)))
 (let ((?x1844 (* (* 2.0 l_0_4_35) l_0_4_38)))
 (let ((?x1841 (* (* 2.0 l_0_4_34) l_0_4_37)))
 (let ((?x1680 (* (* 2.0 l_0_4_26) l_0_4_29)))
 (let ((?x1677 (* (* 2.0 l_0_4_25) l_0_4_28)))
 (let ((?x1674 (* (* 2.0 l_0_4_24) l_0_4_27)))
 (let ((?x1518 (* l_0_4_16 l_0_4_16)))
 (let ((?x1933 (+ (- (- (* (- l_0_4_14) l_0_4_14) (* l_0_4_15 l_0_4_15)) ?x1518) ?x1674)))
 (let ((?x1940 (+ (+ (+ (+ (+ (+ (+ ?x1933 ?x1677) ?x1680) ?x1841) ?x1844) ?x1847) ?x1520) ?x1522)))
 (= (+ ?x1940 ?x1524) 0.0))))))))))))))
(assert
 (let ((?x1553 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x1550 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x1897 (* l_0_4_40 l_0_4_40)))
 (let ((?x1547 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x1895 (* l_0_4_39 l_0_4_39)))
 (let ((?x1893 (* l_0_4_38 l_0_4_38)))
 (let ((?x1891 (* l_0_4_37 l_0_4_37)))
 (let ((?x1773 (* l_0_4_30 l_0_4_30)))
 (let ((?x1769 (* l_0_4_29 l_0_4_29)))
 (let ((?x1765 (* l_0_4_28 l_0_4_28)))
 (let ((?x1761 (* l_0_4_27 l_0_4_27)))
 (let ((?x1544 (* (* 2.0 l_0_4_16) l_0_4_19)))
 (let ((?x1541 (* (* 2.0 l_0_4_15) l_0_4_18)))
 (let ((?x1957 (+ (+ (- (- (* (* (- 2.0) l_0_4_14) l_0_4_17) ?x1541) ?x1544) ?x1761) ?x1765)))
 (let ((?x1964 (+ (+ (+ (+ (+ (+ (+ ?x1957 ?x1769) ?x1773) ?x1891) ?x1893) ?x1895) ?x1547) ?x1897)))
 (= (+ (+ ?x1964 ?x1550) ?x1553) 0.0)))))))))))))))))
(assert
 (let ((?x1596 (* l_0_4_9 l_0_4_9)))
 (let ((?x1594 (* l_0_4_8 l_0_4_8)))
 (let ((?x1592 (* l_0_4_7 l_0_4_7)))
 (let ((?x1590 (* l_0_4_20 l_0_4_20)))
 (let ((?x1588 (* l_0_4_19 l_0_4_19)))
 (let ((?x1586 (* l_0_4_18 l_0_4_18)))
 (let ((?x1981 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_17 l_0_4_17)) ?x1586) ?x1588)))
 (= (+ (+ (+ (- ?x1981 ?x1590) ?x1592) ?x1594) ?x1596) 0.0)))))))))
(assert
 (let ((?x1348 (* l_0_4_31 l_0_4_31)))
 (let ((?x2002 (- (- (* (* (- 2.0) l_0_4_21) l_0_4_22) (* l_0_4_21 l_0_4_21)) ?x1348)))
 (= (- ?x2002 (* (* 2.0 l_0_4_41) l_0_4_42)) 0.0))))
(assert
 (let ((?x2031 (* l_0_4_43 l_0_4_43)))
 (let ((?x2029 (* l_0_4_42 l_0_4_42)))
 (let ((?x1307 (* 2.0 l_0_4_31)))
 (let ((?x2027 (* ?x1307 l_0_4_32)))
 (let ((?x2000 (* (* (- 2.0) l_0_4_21) l_0_4_22)))
 (let ((?x2026 (- (- ?x2000 (* (* 1.0 l_0_4_22) l_0_4_22)) (* (* 1.0 l_0_4_23) l_0_4_23))))
 (= (- (- (- ?x2026 ?x2027) ?x2029) ?x2031) 0.0))))))))
(assert
 (let ((?x1307 (* 2.0 l_0_4_31)))
 (let ((?x1308 (* ?x1307 l_0_4_34)))
 (let ((?x2027 (* ?x1307 l_0_4_32)))
 (let ((?x1620 (* 2.0 l_0_4_23)))
 (let ((?x2059 (* ?x1620 l_0_4_25)))
 (let ((?x1617 (* 2.0 l_0_4_22)))
 (let ((?x2057 (* ?x1617 l_0_4_24)))
 (let ((?x1288 (* 2.0 l_0_4_21)))
 (let ((?x1296 (* ?x1288 l_0_4_24)))
 (let ((?x2064 (- (- (+ (- (- (- (* ?x1288 l_0_4_22) ?x1296) ?x2057) ?x2059) ?x2027) ?x1308) (* (* 2.0 l_0_4_42) l_0_4_44))))
 (= (- ?x2064 (* (* 2.0 l_0_4_43) l_0_4_45)) 0.0))))))))))))
(assert
 (let ((?x2105 (* l_0_4_33 l_0_4_33)))
 (let ((?x2103 (* l_0_4_32 l_0_4_32)))
 (let ((?x2106 (- (- (- (* (- l_0_4_22) l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x2103) ?x2105)))
 (= ?x2106 0.0)))))
(assert
 (let ((?x2105 (* l_0_4_33 l_0_4_33)))
 (let ((?x1800 (* 2.0 l_0_4_33)))
 (let ((?x2126 (* ?x1800 l_0_4_35)))
 (let ((?x2103 (* l_0_4_32 l_0_4_32)))
 (let ((?x1797 (* 2.0 l_0_4_32)))
 (let ((?x2123 (* ?x1797 l_0_4_34)))
 (let ((?x2037 (* l_0_4_23 l_0_4_23)))
 (let ((?x1620 (* 2.0 l_0_4_23)))
 (let ((?x2059 (* ?x1620 l_0_4_25)))
 (let ((?x2121 (- (+ (* (* (- 2.0) l_0_4_22) l_0_4_24) (* l_0_4_22 l_0_4_22)) ?x2059)))
 (= (+ (- (+ (- (+ ?x2121 ?x2037) ?x2123) ?x2103) ?x2126) ?x2105) 0.0))))))))))))
(assert
 (let ((?x1280 (* l_0_4_36 l_0_4_36)))
 (let ((?x1278 (* l_0_4_35 l_0_4_35)))
 (let ((?x1276 (* l_0_4_34 l_0_4_34)))
 (let ((?x1800 (* 2.0 l_0_4_33)))
 (let ((?x2126 (* ?x1800 l_0_4_35)))
 (let ((?x1797 (* 2.0 l_0_4_32)))
 (let ((?x2123 (* ?x1797 l_0_4_34)))
 (let ((?x1274 (* l_0_4_26 l_0_4_26)))
 (let ((?x1272 (* l_0_4_25 l_0_4_25)))
 (let ((?x1270 (* l_0_4_24 l_0_4_24)))
 (let ((?x1620 (* 2.0 l_0_4_23)))
 (let ((?x2059 (* ?x1620 l_0_4_25)))
 (let ((?x1617 (* 2.0 l_0_4_22)))
 (let ((?x2057 (* ?x1617 l_0_4_24)))
 (let ((?x2155 (- (+ (+ (- (- (- (+ ?x2057 ?x2059) ?x1270) ?x1272) ?x1274) ?x2123) ?x2126) ?x1276)))
 (= (- (- ?x2155 ?x1278) ?x1280) 0.0)))))))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_11 0.0))
(assert
 (>= l_0_4_13 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_20 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_23 0.0))
(assert
 (>= l_0_4_26 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_41 0.0))
(assert
 (>= l_0_4_43 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_50 0.0))
(assert
 (let ((?x2198 (* 2.0 l_0_5_21)))
 (let ((?x2199 (* ?x2198 l_0_5_27)))
 (let ((?x2203 (- (- (- (* l_0_5_1 l_0_5_1) (* l_0_5_11 l_0_5_11)) ?x2199) (* (* 2.0 l_0_5_41) l_0_5_47))))
 (= (+ (- ?x2203 (* (* 2.0 l_0_5_51) l_0_5_57)) 1.0) 0.0)))))
(assert
 (let ((?x2235 (* l_0_5_51 l_0_5_51)))
 (let ((?x2233 (* l_0_5_41 l_0_5_41)))
 (let ((?x2237 (- (- (- (- _a_0_ (* (* 1.0 l_0_5_21) l_0_5_21)) ?x2233) ?x2235) 1.0)))
 (= ?x2237 0.0)))))
(assert
 (let ((?x2275 (* l_0_5_56 l_0_5_56)))
 (let ((?x2273 (* l_0_5_55 l_0_5_55)))
 (let ((?x2271 (* l_0_5_54 l_0_5_54)))
 (let ((?x2269 (* l_0_5_46 l_0_5_46)))
 (let ((?x2267 (* l_0_5_45 l_0_5_45)))
 (let ((?x2265 (* l_0_5_44 l_0_5_44)))
 (let ((?x2262 (* 2.0 l_0_5_31)))
 (let ((?x2263 (* ?x2262 l_0_5_34)))
 (let ((?x2255 (- (+ _a_1_ (* (* 2.0 l_0_5_21) l_0_5_24)) (* (* 1.0 l_0_5_24) l_0_5_24))))
 (let ((?x2261 (- (- ?x2255 (* (* 1.0 l_0_5_25) l_0_5_25)) (* (* 1.0 l_0_5_26) l_0_5_26))))
 (let ((?x2276 (- (- (- (- (- (- (+ ?x2261 ?x2263) ?x2265) ?x2267) ?x2269) ?x2271) ?x2273) ?x2275)))
 (= (- ?x2276 15.0) 0.0)))))))))))))
(assert
 (let ((?x2327 (* l_0_5_36 l_0_5_36)))
 (let ((?x2325 (* l_0_5_35 l_0_5_35)))
 (let ((?x2323 (* l_0_5_34 l_0_5_34)))
 (let ((?x2290 (* l_0_5_26 l_0_5_26)))
 (let ((?x2322 (+ (+ (+ _a_2_ (* l_0_5_24 l_0_5_24)) (* l_0_5_25 l_0_5_25)) ?x2290)))
 (= (- (+ (+ (+ ?x2322 ?x2323) ?x2325) ?x2327) 20.0) 0.0)))))))
(assert
 (let ((?x2339 (* l_0_5_31 l_0_5_31)))
 (let ((?x2239 (* l_0_5_21 l_0_5_21)))
 (let ((?x2342 (- (+ (+ (- _a_3_ (* (* 2.0 l_0_5_21) l_0_5_24)) ?x2239) ?x2339) (* (* 2.0 l_0_5_41) l_0_5_44))))
 (= (- (- ?x2342 (* (* 2.0 l_0_5_51) l_0_5_54)) 6.0) 0.0)))))
(assert
 (= (- _a_4_ 15.0) 0.0))
(assert
 (= (- _a_5_ 6.0) 0.0))
(assert
 (= (- (+ (* (- l_0_5_1) l_0_5_1) (* l_0_5_11 l_0_5_11)) 1.0) 0.0))
(assert
 (let ((?x2390 (* 2.0 l_0_5_11)))
 (let ((?x2391 (* ?x2390 l_0_5_12)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) ?x2391) 0.0))))
(assert
 (let ((?x2390 (* 2.0 l_0_5_11)))
 (let ((?x2397 (* ?x2390 l_0_5_14)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x2397) 0.0))))
(assert
 (let ((?x2390 (* 2.0 l_0_5_11)))
 (let ((?x2407 (* ?x2390 l_0_5_17)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x2407) 0.0))))
(assert
 (let ((?x2425 (* l_0_5_3 l_0_5_3)))
 (let ((?x2423 (* l_0_5_2 l_0_5_2)))
 (let ((?x2417 (* l_0_5_13 l_0_5_13)))
 (let ((?x2415 (* l_0_5_12 l_0_5_12)))
 (let ((?x2418 (+ ?x2415 ?x2417)))
 (= (- (- ?x2418 ?x2423) ?x2425) 0.0)))))))
(assert
 (let ((?x2443 (* 2.0 l_0_5_3)))
 (let ((?x2444 (* ?x2443 l_0_5_5)))
 (let ((?x2440 (* 2.0 l_0_5_2)))
 (let ((?x2441 (* ?x2440 l_0_5_4)))
 (let ((?x2437 (* 2.0 l_0_5_13)))
 (let ((?x2438 (* ?x2437 l_0_5_15)))
 (= (- (- (+ (* (* 2.0 l_0_5_12) l_0_5_14) ?x2438) ?x2441) ?x2444) 0.0))))))))
(assert
 (let ((?x2443 (* 2.0 l_0_5_3)))
 (let ((?x2470 (* ?x2443 l_0_5_8)))
 (let ((?x2440 (* 2.0 l_0_5_2)))
 (let ((?x2468 (* ?x2440 l_0_5_7)))
 (let ((?x2437 (* 2.0 l_0_5_13)))
 (let ((?x2466 (* ?x2437 l_0_5_18)))
 (= (- (- (+ (* (* 2.0 l_0_5_12) l_0_5_17) ?x2466) ?x2468) ?x2470) 0.0))))))))
(assert
 (let ((?x2500 (* l_0_5_6 l_0_5_6)))
 (let ((?x2498 (* l_0_5_5 l_0_5_5)))
 (let ((?x2496 (* l_0_5_4 l_0_5_4)))
 (let ((?x2494 (* l_0_5_16 l_0_5_16)))
 (let ((?x2497 (- (+ (+ (* l_0_5_14 l_0_5_14) (* l_0_5_15 l_0_5_15)) ?x2494) ?x2496)))
 (= (- (- ?x2497 ?x2498) ?x2500) 0.0)))))))
(assert
 (let ((?x2529 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x2526 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x2523 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x2520 (* (* 2.0 l_0_5_16) l_0_5_19)))
 (let ((?x2517 (* (* 2.0 l_0_5_15) l_0_5_18)))
 (let ((?x2527 (- (- (+ (+ (* (* 2.0 l_0_5_14) l_0_5_17) ?x2517) ?x2520) ?x2523) ?x2526)))
 (= (- ?x2527 ?x2529) 0.0))))))))
(assert
 (let ((?x2572 (* l_0_5_9 l_0_5_9)))
 (let ((?x2570 (* l_0_5_8 l_0_5_8)))
 (let ((?x2568 (* l_0_5_7 l_0_5_7)))
 (let ((?x2566 (* l_0_5_20 l_0_5_20)))
 (let ((?x2564 (* l_0_5_19 l_0_5_19)))
 (let ((?x2562 (* l_0_5_18 l_0_5_18)))
 (let ((?x2565 (+ (+ (+ (* (- l_0_5_10) l_0_5_10) (* l_0_5_17 l_0_5_17)) ?x2562) ?x2564)))
 (= (- (- (- (+ ?x2565 ?x2566) ?x2568) ?x2570) ?x2572) 0.0)))))))))
(assert
 (let ((?x2262 (* 2.0 l_0_5_31)))
 (let ((?x2599 (* ?x2262 l_0_5_37)))
 (let ((?x2596 (* 2.0 l_0_5_23)))
 (let ((?x2597 (* ?x2596 l_0_5_28)))
 (let ((?x2593 (* 2.0 l_0_5_22)))
 (let ((?x2594 (* ?x2593 l_0_5_27)))
 (let ((?x2198 (* 2.0 l_0_5_21)))
 (let ((?x2199 (* ?x2198 l_0_5_27)))
 (let ((?x2390 (* 2.0 l_0_5_11)))
 (let ((?x2391 (* ?x2390 l_0_5_12)))
 (let ((?x2598 (- (- (- (- (* (* 2.0 l_0_5_1) l_0_5_2) ?x2391) ?x2199) ?x2594) ?x2597)))
 (let ((?x2606 (- (- (- ?x2598 ?x2599) (* (* 2.0 l_0_5_42) l_0_5_47)) (* (* 2.0 l_0_5_43) l_0_5_48))))
 (let ((?x2612 (- (- ?x2606 (* (* 2.0 l_0_5_52) l_0_5_57)) (* (* 2.0 l_0_5_53) l_0_5_58))))
 (= ?x2612 0.0)))))))))))))))
(assert
 (let ((?x2262 (* 2.0 l_0_5_31)))
 (let ((?x2599 (* ?x2262 l_0_5_37)))
 (let ((?x2674 (* (* 2.0 l_0_5_26) l_0_5_29)))
 (let ((?x2671 (* (* 2.0 l_0_5_25) l_0_5_28)))
 (let ((?x2668 (* (* 2.0 l_0_5_24) l_0_5_27)))
 (let ((?x2198 (* 2.0 l_0_5_21)))
 (let ((?x2199 (* ?x2198 l_0_5_27)))
 (let ((?x2390 (* 2.0 l_0_5_11)))
 (let ((?x2397 (* ?x2390 l_0_5_14)))
 (let ((?x2672 (- (- (+ (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x2397) ?x2199) ?x2668) ?x2671)))
 (let ((?x2682 (- (- (+ (- ?x2672 ?x2674) ?x2599) (* (* 2.0 l_0_5_44) l_0_5_47)) (* (* 2.0 l_0_5_45) l_0_5_48))))
 (let ((?x2688 (- (- ?x2682 (* (* 2.0 l_0_5_46) l_0_5_49)) (* (* 2.0 l_0_5_54) l_0_5_57))))
 (let ((?x2694 (- (- ?x2688 (* (* 2.0 l_0_5_55) l_0_5_58)) (* (* 2.0 l_0_5_56) l_0_5_59))))
 (= ?x2694 0.0)))))))))))))))
(assert
 (let ((?x2784 (* l_0_5_60 l_0_5_60)))
 (let ((?x2782 (* l_0_5_59 l_0_5_59)))
 (let ((?x2780 (* l_0_5_58 l_0_5_58)))
 (let ((?x2778 (* l_0_5_57 l_0_5_57)))
 (let ((?x2776 (* l_0_5_50 l_0_5_50)))
 (let ((?x2774 (* l_0_5_49 l_0_5_49)))
 (let ((?x2772 (* l_0_5_48 l_0_5_48)))
 (let ((?x2770 (* l_0_5_47 l_0_5_47)))
 (let ((?x2390 (* 2.0 l_0_5_11)))
 (let ((?x2407 (* ?x2390 l_0_5_17)))
 (let ((?x2760 (- (- (* (* 2.0 l_0_5_1) l_0_5_7) ?x2407) (* (* 1.0 l_0_5_27) l_0_5_27))))
 (let ((?x2766 (- (- ?x2760 (* (* 1.0 l_0_5_28) l_0_5_28)) (* (* 1.0 l_0_5_29) l_0_5_29))))
 (let ((?x2775 (- (- (- (- ?x2766 (* (* 1.0 l_0_5_30) l_0_5_30)) ?x2770) ?x2772) ?x2774)))
 (= (- (- (- (- (- ?x2775 ?x2776) ?x2778) ?x2780) ?x2782) ?x2784) 0.0)))))))))))))))
(assert
 (let ((?x2841 (* 2.0 l_0_5_33)))
 (let ((?x2842 (* ?x2841 l_0_5_38)))
 (let ((?x2838 (* 2.0 l_0_5_32)))
 (let ((?x2839 (* ?x2838 l_0_5_37)))
 (let ((?x2425 (* l_0_5_3 l_0_5_3)))
 (let ((?x2596 (* 2.0 l_0_5_23)))
 (let ((?x2597 (* ?x2596 l_0_5_28)))
 (let ((?x2593 (* 2.0 l_0_5_22)))
 (let ((?x2594 (* ?x2593 l_0_5_27)))
 (let ((?x2423 (* l_0_5_2 l_0_5_2)))
 (let ((?x2835 (- (+ (- (* (- l_0_5_12) l_0_5_12) (* l_0_5_13 l_0_5_13)) ?x2423) ?x2594)))
 (= (- (- (+ (- ?x2835 ?x2597) ?x2425) ?x2839) ?x2842) 0.0)))))))))))))
(assert
 (let ((?x2888 (* (* 2.0 l_0_5_36) l_0_5_39)))
 (let ((?x2885 (* (* 2.0 l_0_5_35) l_0_5_38)))
 (let ((?x2882 (* (* 2.0 l_0_5_34) l_0_5_37)))
 (let ((?x2841 (* 2.0 l_0_5_33)))
 (let ((?x2842 (* ?x2841 l_0_5_38)))
 (let ((?x2838 (* 2.0 l_0_5_32)))
 (let ((?x2839 (* ?x2838 l_0_5_37)))
 (let ((?x2443 (* 2.0 l_0_5_3)))
 (let ((?x2444 (* ?x2443 l_0_5_5)))
 (let ((?x2674 (* (* 2.0 l_0_5_26) l_0_5_29)))
 (let ((?x2671 (* (* 2.0 l_0_5_25) l_0_5_28)))
 (let ((?x2668 (* (* 2.0 l_0_5_24) l_0_5_27)))
 (let ((?x2596 (* 2.0 l_0_5_23)))
 (let ((?x2597 (* ?x2596 l_0_5_28)))
 (let ((?x2593 (* 2.0 l_0_5_22)))
 (let ((?x2594 (* ?x2593 l_0_5_27)))
 (let ((?x2440 (* 2.0 l_0_5_2)))
 (let ((?x2441 (* ?x2440 l_0_5_4)))
 (let ((?x2437 (* 2.0 l_0_5_13)))
 (let ((?x2438 (* ?x2437 l_0_5_15)))
 (let ((?x2874 (+ (+ (+ (- (* (* (- 2.0) l_0_5_12) l_0_5_14) ?x2438) ?x2441) ?x2594) ?x2597)))
 (let ((?x2883 (- (+ (+ (+ (- (- (- ?x2874 ?x2668) ?x2671) ?x2674) ?x2444) ?x2839) ?x2842) ?x2882)))
 (= (- (- ?x2883 ?x2885) ?x2888) 0.0))))))))))))))))))))))))
(assert
 (let ((?x2938 (* l_0_5_40 l_0_5_40)))
 (let ((?x2936 (* l_0_5_39 l_0_5_39)))
 (let ((?x2934 (* l_0_5_38 l_0_5_38)))
 (let ((?x2932 (* l_0_5_37 l_0_5_37)))
 (let ((?x2802 (* l_0_5_30 l_0_5_30)))
 (let ((?x2443 (* 2.0 l_0_5_3)))
 (let ((?x2470 (* ?x2443 l_0_5_8)))
 (let ((?x2798 (* l_0_5_29 l_0_5_29)))
 (let ((?x2794 (* l_0_5_28 l_0_5_28)))
 (let ((?x2790 (* l_0_5_27 l_0_5_27)))
 (let ((?x2440 (* 2.0 l_0_5_2)))
 (let ((?x2468 (* ?x2440 l_0_5_7)))
 (let ((?x2437 (* 2.0 l_0_5_13)))
 (let ((?x2466 (* ?x2437 l_0_5_18)))
 (let ((?x2928 (- (- (+ (- (* (* (- 2.0) l_0_5_12) l_0_5_17) ?x2466) ?x2468) ?x2790) ?x2794)))
 (let ((?x2939 (- (- (- (- (- (+ (- ?x2928 ?x2798) ?x2470) ?x2802) ?x2932) ?x2934) ?x2936) ?x2938)))
 (= ?x2939 0.0))))))))))))))))))
(assert
 (let ((?x2500 (* l_0_5_6 l_0_5_6)))
 (let ((?x2498 (* l_0_5_5 l_0_5_5)))
 (let ((?x2496 (* l_0_5_4 l_0_5_4)))
 (let ((?x2888 (* (* 2.0 l_0_5_36) l_0_5_39)))
 (let ((?x2885 (* (* 2.0 l_0_5_35) l_0_5_38)))
 (let ((?x2882 (* (* 2.0 l_0_5_34) l_0_5_37)))
 (let ((?x2674 (* (* 2.0 l_0_5_26) l_0_5_29)))
 (let ((?x2671 (* (* 2.0 l_0_5_25) l_0_5_28)))
 (let ((?x2668 (* (* 2.0 l_0_5_24) l_0_5_27)))
 (let ((?x2494 (* l_0_5_16 l_0_5_16)))
 (let ((?x2974 (+ (- (- (* (- l_0_5_14) l_0_5_14) (* l_0_5_15 l_0_5_15)) ?x2494) ?x2668)))
 (let ((?x2981 (+ (+ (+ (+ (+ (+ (+ ?x2974 ?x2671) ?x2674) ?x2882) ?x2885) ?x2888) ?x2496) ?x2498)))
 (= (+ ?x2981 ?x2500) 0.0))))))))))))))
(assert
 (let ((?x2529 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x2526 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x2938 (* l_0_5_40 l_0_5_40)))
 (let ((?x2523 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x2936 (* l_0_5_39 l_0_5_39)))
 (let ((?x2934 (* l_0_5_38 l_0_5_38)))
 (let ((?x2932 (* l_0_5_37 l_0_5_37)))
 (let ((?x2802 (* l_0_5_30 l_0_5_30)))
 (let ((?x2798 (* l_0_5_29 l_0_5_29)))
 (let ((?x2794 (* l_0_5_28 l_0_5_28)))
 (let ((?x2790 (* l_0_5_27 l_0_5_27)))
 (let ((?x2520 (* (* 2.0 l_0_5_16) l_0_5_19)))
 (let ((?x2517 (* (* 2.0 l_0_5_15) l_0_5_18)))
 (let ((?x2998 (+ (+ (- (- (* (* (- 2.0) l_0_5_14) l_0_5_17) ?x2517) ?x2520) ?x2790) ?x2794)))
 (let ((?x3005 (+ (+ (+ (+ (+ (+ (+ ?x2998 ?x2798) ?x2802) ?x2932) ?x2934) ?x2936) ?x2523) ?x2938)))
 (= (+ (+ ?x3005 ?x2526) ?x2529) 0.0)))))))))))))))))
(assert
 (let ((?x2572 (* l_0_5_9 l_0_5_9)))
 (let ((?x2570 (* l_0_5_8 l_0_5_8)))
 (let ((?x2568 (* l_0_5_7 l_0_5_7)))
 (let ((?x2566 (* l_0_5_20 l_0_5_20)))
 (let ((?x2564 (* l_0_5_19 l_0_5_19)))
 (let ((?x2562 (* l_0_5_18 l_0_5_18)))
 (let ((?x3022 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_17 l_0_5_17)) ?x2562) ?x2564)))
 (= (+ (+ (+ (- ?x3022 ?x2566) ?x2568) ?x2570) ?x2572) 0.0)))))))))
(assert
 (let ((?x2339 (* l_0_5_31 l_0_5_31)))
 (let ((?x3043 (- (- (* (* (- 2.0) l_0_5_21) l_0_5_22) (* l_0_5_21 l_0_5_21)) ?x2339)))
 (let ((?x3047 (- (- ?x3043 (* (* 2.0 l_0_5_41) l_0_5_42)) (* (* 2.0 l_0_5_51) l_0_5_52))))
 (= ?x3047 0.0)))))
(assert
 (let ((?x3085 (* l_0_5_53 l_0_5_53)))
 (let ((?x3083 (* l_0_5_52 l_0_5_52)))
 (let ((?x3081 (* l_0_5_43 l_0_5_43)))
 (let ((?x3079 (* l_0_5_42 l_0_5_42)))
 (let ((?x2262 (* 2.0 l_0_5_31)))
 (let ((?x3077 (* ?x2262 l_0_5_32)))
 (let ((?x3041 (* (* (- 2.0) l_0_5_21) l_0_5_22)))
 (let ((?x3076 (- (- ?x3041 (* (* 1.0 l_0_5_22) l_0_5_22)) (* (* 1.0 l_0_5_23) l_0_5_23))))
 (= (- (- (- (- (- ?x3076 ?x3077) ?x3079) ?x3081) ?x3083) ?x3085) 0.0))))))))))
(assert
 (let ((?x2262 (* 2.0 l_0_5_31)))
 (let ((?x2263 (* ?x2262 l_0_5_34)))
 (let ((?x3077 (* ?x2262 l_0_5_32)))
 (let ((?x2596 (* 2.0 l_0_5_23)))
 (let ((?x3119 (* ?x2596 l_0_5_25)))
 (let ((?x2593 (* 2.0 l_0_5_22)))
 (let ((?x3117 (* ?x2593 l_0_5_24)))
 (let ((?x2198 (* 2.0 l_0_5_21)))
 (let ((?x2251 (* ?x2198 l_0_5_24)))
 (let ((?x3124 (- (- (+ (- (- (- (* ?x2198 l_0_5_22) ?x2251) ?x3117) ?x3119) ?x3077) ?x2263) (* (* 2.0 l_0_5_42) l_0_5_44))))
 (let ((?x3128 (- (- ?x3124 (* (* 2.0 l_0_5_43) l_0_5_45)) (* (* 2.0 l_0_5_52) l_0_5_54))))
 (= (- ?x3128 (* (* 2.0 l_0_5_53) l_0_5_55)) 0.0)))))))))))))
(assert
 (let ((?x3142 (* l_0_5_33 l_0_5_33)))
 (let ((?x3140 (* l_0_5_32 l_0_5_32)))
 (let ((?x3143 (- (- (- (* (- l_0_5_22) l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x3140) ?x3142)))
 (= ?x3143 0.0)))))
(assert
 (let ((?x3142 (* l_0_5_33 l_0_5_33)))
 (let ((?x2841 (* 2.0 l_0_5_33)))
 (let ((?x3158 (* ?x2841 l_0_5_35)))
 (let ((?x3140 (* l_0_5_32 l_0_5_32)))
 (let ((?x2838 (* 2.0 l_0_5_32)))
 (let ((?x3155 (* ?x2838 l_0_5_34)))
 (let ((?x3091 (* l_0_5_23 l_0_5_23)))
 (let ((?x2596 (* 2.0 l_0_5_23)))
 (let ((?x3119 (* ?x2596 l_0_5_25)))
 (let ((?x3153 (- (+ (* (* (- 2.0) l_0_5_22) l_0_5_24) (* l_0_5_22 l_0_5_22)) ?x3119)))
 (= (+ (- (+ (- (+ ?x3153 ?x3091) ?x3155) ?x3140) ?x3158) ?x3142) 0.0))))))))))))
(assert
 (let ((?x2327 (* l_0_5_36 l_0_5_36)))
 (let ((?x2325 (* l_0_5_35 l_0_5_35)))
 (let ((?x2323 (* l_0_5_34 l_0_5_34)))
 (let ((?x2841 (* 2.0 l_0_5_33)))
 (let ((?x3158 (* ?x2841 l_0_5_35)))
 (let ((?x2838 (* 2.0 l_0_5_32)))
 (let ((?x3155 (* ?x2838 l_0_5_34)))
 (let ((?x2290 (* l_0_5_26 l_0_5_26)))
 (let ((?x2286 (* l_0_5_25 l_0_5_25)))
 (let ((?x2282 (* l_0_5_24 l_0_5_24)))
 (let ((?x2596 (* 2.0 l_0_5_23)))
 (let ((?x3119 (* ?x2596 l_0_5_25)))
 (let ((?x2593 (* 2.0 l_0_5_22)))
 (let ((?x3117 (* ?x2593 l_0_5_24)))
 (let ((?x3174 (- (+ (+ (- (- (- (+ ?x3117 ?x3119) ?x2282) ?x2286) ?x2290) ?x3155) ?x3158) ?x2323)))
 (= (- (- ?x3174 ?x2325) ?x2327) 0.0)))))))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_11 0.0))
(assert
 (>= l_0_5_13 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_20 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_23 0.0))
(assert
 (>= l_0_5_26 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_41 0.0))
(assert
 (>= l_0_5_43 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_50 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_53 0.0))
(assert
 (>= l_0_5_56 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (let ((?x3215 (* l_0_6_31 l_0_6_31)))
 (let ((?x3216 (- (- (* (* (- 2.0) l_0_6_21) l_0_6_22) (* l_0_6_21 l_0_6_21)) ?x3215)))
 (let ((?x3222 (- (- ?x3216 (* (* 2.0 l_0_6_41) l_0_6_42)) (* (* 2.0 l_0_6_51) l_0_6_52))))
 (= (+ (- ?x3222 (* (* 2.0 l_0_6_61) l_0_6_62)) 1.0) 0.0)))))
(assert
 (let ((?x3249 (* l_0_6_61 l_0_6_61)))
 (let ((?x3247 (* l_0_6_51 l_0_6_51)))
 (let ((?x3248 (- (- (* (* (- 1.0) l_0_6_21) l_0_6_21) (* l_0_6_41 l_0_6_41)) ?x3247)))
 (= (- ?x3248 ?x3249) 0.0)))))
(assert
 (let ((?x3215 (* l_0_6_31 l_0_6_31)))
 (let ((?x3260 (+ (+ (* (* (- 2.0) l_0_6_21) l_0_6_24) (* l_0_6_21 l_0_6_21)) ?x3215)))
 (let ((?x3264 (- (- ?x3260 (* (* 2.0 l_0_6_41) l_0_6_44)) (* (* 2.0 l_0_6_51) l_0_6_54))))
 (= (- (- ?x3264 (* (* 2.0 l_0_6_61) l_0_6_64)) 1.0) 0.0)))))
(assert
 (= (+ (* (- l_0_6_1) l_0_6_1) (* l_0_6_11 l_0_6_11)) 0.0))
(assert
 (let ((?x3295 (* 2.0 l_0_6_11)))
 (let ((?x3296 (* ?x3295 l_0_6_12)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) ?x3296) 0.0))))
(assert
 (let ((?x3295 (* 2.0 l_0_6_11)))
 (let ((?x3302 (* ?x3295 l_0_6_14)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x3302) 0.0))))
(assert
 (let ((?x3295 (* 2.0 l_0_6_11)))
 (let ((?x692 (* ?x3295 l_0_6_17)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x692) 0.0))))
(assert
 (let ((?x3326 (* l_0_6_3 l_0_6_3)))
 (let ((?x3324 (* l_0_6_2 l_0_6_2)))
 (let ((?x3318 (* l_0_6_13 l_0_6_13)))
 (let ((?x3316 (* l_0_6_12 l_0_6_12)))
 (let ((?x3319 (+ ?x3316 ?x3318)))
 (= (- (- ?x3319 ?x3324) ?x3326) 0.0)))))))
(assert
 (let ((?x3344 (* 2.0 l_0_6_3)))
 (let ((?x3345 (* ?x3344 l_0_6_5)))
 (let ((?x3341 (* 2.0 l_0_6_2)))
 (let ((?x3342 (* ?x3341 l_0_6_4)))
 (let ((?x3338 (* 2.0 l_0_6_13)))
 (let ((?x3339 (* ?x3338 l_0_6_15)))
 (= (- (- (+ (* (* 2.0 l_0_6_12) l_0_6_14) ?x3339) ?x3342) ?x3345) 0.0))))))))
(assert
 (let ((?x3344 (* 2.0 l_0_6_3)))
 (let ((?x3366 (* ?x3344 l_0_6_8)))
 (let ((?x3341 (* 2.0 l_0_6_2)))
 (let ((?x3364 (* ?x3341 l_0_6_7)))
 (let ((?x3338 (* 2.0 l_0_6_13)))
 (let ((?x3362 (* ?x3338 l_0_6_18)))
 (= (- (- (+ (* (* 2.0 l_0_6_12) l_0_6_17) ?x3362) ?x3364) ?x3366) 0.0))))))))
(assert
 (let ((?x3389 (* l_0_6_6 l_0_6_6)))
 (let ((?x3387 (* l_0_6_5 l_0_6_5)))
 (let ((?x3385 (* l_0_6_4 l_0_6_4)))
 (let ((?x3383 (* l_0_6_16 l_0_6_16)))
 (let ((?x3386 (- (+ (+ (* l_0_6_14 l_0_6_14) (* l_0_6_15 l_0_6_15)) ?x3383) ?x3385)))
 (= (- (- ?x3386 ?x3387) ?x3389) 0.0)))))))
(assert
 (let ((?x3414 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x3411 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x3408 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x3405 (* (* 2.0 l_0_6_16) l_0_6_19)))
 (let ((?x3402 (* (* 2.0 l_0_6_15) l_0_6_18)))
 (let ((?x3412 (- (- (+ (+ (* (* 2.0 l_0_6_14) l_0_6_17) ?x3402) ?x3405) ?x3408) ?x3411)))
 (= (- ?x3412 ?x3414) 0.0))))))))
(assert
 (let ((?x3452 (* l_0_6_9 l_0_6_9)))
 (let ((?x3450 (* l_0_6_8 l_0_6_8)))
 (let ((?x3448 (* l_0_6_7 l_0_6_7)))
 (let ((?x3446 (* l_0_6_20 l_0_6_20)))
 (let ((?x3444 (* l_0_6_19 l_0_6_19)))
 (let ((?x3442 (* l_0_6_18 l_0_6_18)))
 (let ((?x3445 (+ (+ (+ (* (- l_0_6_10) l_0_6_10) (* l_0_6_17 l_0_6_17)) ?x3442) ?x3444)))
 (= (- (- (- (+ ?x3445 ?x3446) ?x3448) ?x3450) ?x3452) 0.0)))))))))
(assert
 (let ((?x3466 (* 2.0 l_0_6_21)))
 (let ((?x3467 (* ?x3466 l_0_6_27)))
 (let ((?x3470 (- (- (- (* l_0_6_1 l_0_6_1) (* l_0_6_11 l_0_6_11)) ?x3467) (* (* 2.0 l_0_6_41) l_0_6_47))))
 (let ((?x3474 (- (- ?x3470 (* (* 2.0 l_0_6_51) l_0_6_57)) (* (* 2.0 l_0_6_61) l_0_6_67))))
 (= ?x3474 0.0))))))
(assert
 (let ((?x3502 (* 2.0 l_0_6_31)))
 (let ((?x3503 (* ?x3502 l_0_6_37)))
 (let ((?x3499 (* 2.0 l_0_6_23)))
 (let ((?x3500 (* ?x3499 l_0_6_28)))
 (let ((?x3496 (* 2.0 l_0_6_22)))
 (let ((?x3497 (* ?x3496 l_0_6_27)))
 (let ((?x3466 (* 2.0 l_0_6_21)))
 (let ((?x3467 (* ?x3466 l_0_6_27)))
 (let ((?x3295 (* 2.0 l_0_6_11)))
 (let ((?x3296 (* ?x3295 l_0_6_12)))
 (let ((?x3501 (- (- (- (- (* (* 2.0 l_0_6_1) l_0_6_2) ?x3296) ?x3467) ?x3497) ?x3500)))
 (let ((?x3510 (- (- (- ?x3501 ?x3503) (* (* 2.0 l_0_6_42) l_0_6_47)) (* (* 2.0 l_0_6_43) l_0_6_48))))
 (let ((?x3516 (- (- ?x3510 (* (* 2.0 l_0_6_52) l_0_6_57)) (* (* 2.0 l_0_6_53) l_0_6_58))))
 (let ((?x3522 (- (- ?x3516 (* (* 2.0 l_0_6_62) l_0_6_67)) (* (* 2.0 l_0_6_63) l_0_6_68))))
 (= ?x3522 0.0))))))))))))))))
(assert
 (let ((?x3502 (* 2.0 l_0_6_31)))
 (let ((?x3503 (* ?x3502 l_0_6_37)))
 (let ((?x3557 (* (* 2.0 l_0_6_26) l_0_6_29)))
 (let ((?x3554 (* (* 2.0 l_0_6_25) l_0_6_28)))
 (let ((?x3551 (* (* 2.0 l_0_6_24) l_0_6_27)))
 (let ((?x3466 (* 2.0 l_0_6_21)))
 (let ((?x3467 (* ?x3466 l_0_6_27)))
 (let ((?x3295 (* 2.0 l_0_6_11)))
 (let ((?x3302 (* ?x3295 l_0_6_14)))
 (let ((?x3555 (- (- (+ (- (* (* 2.0 l_0_6_1) l_0_6_4) ?x3302) ?x3467) ?x3551) ?x3554)))
 (let ((?x3565 (- (- (+ (- ?x3555 ?x3557) ?x3503) (* (* 2.0 l_0_6_44) l_0_6_47)) (* (* 2.0 l_0_6_45) l_0_6_48))))
 (let ((?x3571 (- (- ?x3565 (* (* 2.0 l_0_6_46) l_0_6_49)) (* (* 2.0 l_0_6_54) l_0_6_57))))
 (let ((?x3577 (- (- ?x3571 (* (* 2.0 l_0_6_55) l_0_6_58)) (* (* 2.0 l_0_6_56) l_0_6_59))))
 (let ((?x3583 (- (- ?x3577 (* (* 2.0 l_0_6_64) l_0_6_67)) (* (* 2.0 l_0_6_65) l_0_6_68))))
 (= (- ?x3583 (* (* 2.0 l_0_6_66) l_0_6_69)) 0.0))))))))))))))))
(assert
 (let ((?x3653 (* l_0_6_70 l_0_6_70)))
 (let ((?x3651 (* l_0_6_69 l_0_6_69)))
 (let ((?x3649 (* l_0_6_68 l_0_6_68)))
 (let ((?x3647 (* l_0_6_67 l_0_6_67)))
 (let ((?x3645 (* l_0_6_60 l_0_6_60)))
 (let ((?x3643 (* l_0_6_59 l_0_6_59)))
 (let ((?x3641 (* l_0_6_58 l_0_6_58)))
 (let ((?x3639 (* l_0_6_57 l_0_6_57)))
 (let ((?x3637 (* l_0_6_50 l_0_6_50)))
 (let ((?x3635 (* l_0_6_49 l_0_6_49)))
 (let ((?x3633 (* l_0_6_48 l_0_6_48)))
 (let ((?x3631 (* l_0_6_47 l_0_6_47)))
 (let ((?x3295 (* 2.0 l_0_6_11)))
 (let ((?x692 (* ?x3295 l_0_6_17)))
 (let ((?x3621 (- (- (* (* 2.0 l_0_6_1) l_0_6_7) ?x692) (* (* 1.0 l_0_6_27) l_0_6_27))))
 (let ((?x3627 (- (- ?x3621 (* (* 1.0 l_0_6_28) l_0_6_28)) (* (* 1.0 l_0_6_29) l_0_6_29))))
 (let ((?x3636 (- (- (- (- ?x3627 (* (* 1.0 l_0_6_30) l_0_6_30)) ?x3631) ?x3633) ?x3635)))
 (let ((?x3650 (- (- (- (- (- (- (- ?x3636 ?x3637) ?x3639) ?x3641) ?x3643) ?x3645) ?x3647) ?x3649)))
 (= (- (- ?x3650 ?x3651) ?x3653) 0.0))))))))))))))))))))
(assert
 (let ((?x3692 (* 2.0 l_0_6_33)))
 (let ((?x3693 (* ?x3692 l_0_6_38)))
 (let ((?x3689 (* 2.0 l_0_6_32)))
 (let ((?x3690 (* ?x3689 l_0_6_37)))
 (let ((?x3326 (* l_0_6_3 l_0_6_3)))
 (let ((?x3499 (* 2.0 l_0_6_23)))
 (let ((?x3500 (* ?x3499 l_0_6_28)))
 (let ((?x3496 (* 2.0 l_0_6_22)))
 (let ((?x3497 (* ?x3496 l_0_6_27)))
 (let ((?x3324 (* l_0_6_2 l_0_6_2)))
 (let ((?x3686 (- (+ (- (* (- l_0_6_12) l_0_6_12) (* l_0_6_13 l_0_6_13)) ?x3324) ?x3497)))
 (= (- (- (+ (- ?x3686 ?x3500) ?x3326) ?x3690) ?x3693) 0.0)))))))))))))
(assert
 (let ((?x3726 (* (* 2.0 l_0_6_36) l_0_6_39)))
 (let ((?x3723 (* (* 2.0 l_0_6_35) l_0_6_38)))
 (let ((?x3720 (* (* 2.0 l_0_6_34) l_0_6_37)))
 (let ((?x3692 (* 2.0 l_0_6_33)))
 (let ((?x3693 (* ?x3692 l_0_6_38)))
 (let ((?x3689 (* 2.0 l_0_6_32)))
 (let ((?x3690 (* ?x3689 l_0_6_37)))
 (let ((?x3344 (* 2.0 l_0_6_3)))
 (let ((?x3345 (* ?x3344 l_0_6_5)))
 (let ((?x3557 (* (* 2.0 l_0_6_26) l_0_6_29)))
 (let ((?x3554 (* (* 2.0 l_0_6_25) l_0_6_28)))
 (let ((?x3551 (* (* 2.0 l_0_6_24) l_0_6_27)))
 (let ((?x3499 (* 2.0 l_0_6_23)))
 (let ((?x3500 (* ?x3499 l_0_6_28)))
 (let ((?x3496 (* 2.0 l_0_6_22)))
 (let ((?x3497 (* ?x3496 l_0_6_27)))
 (let ((?x3341 (* 2.0 l_0_6_2)))
 (let ((?x3342 (* ?x3341 l_0_6_4)))
 (let ((?x3338 (* 2.0 l_0_6_13)))
 (let ((?x3339 (* ?x3338 l_0_6_15)))
 (let ((?x3712 (+ (+ (+ (- (* (* (- 2.0) l_0_6_12) l_0_6_14) ?x3339) ?x3342) ?x3497) ?x3500)))
 (let ((?x3721 (- (+ (+ (+ (- (- (- ?x3712 ?x3551) ?x3554) ?x3557) ?x3345) ?x3690) ?x3693) ?x3720)))
 (= (- (- ?x3721 ?x3723) ?x3726) 0.0))))))))))))))))))))))))
(assert
 (let ((?x3757 (* l_0_6_40 l_0_6_40)))
 (let ((?x3755 (* l_0_6_39 l_0_6_39)))
 (let ((?x3753 (* l_0_6_38 l_0_6_38)))
 (let ((?x3751 (* l_0_6_37 l_0_6_37)))
 (let ((?x3664 (* l_0_6_30 l_0_6_30)))
 (let ((?x3344 (* 2.0 l_0_6_3)))
 (let ((?x3366 (* ?x3344 l_0_6_8)))
 (let ((?x1055 (* l_0_6_29 l_0_6_29)))
 (let ((?x1052 (* l_0_6_28 l_0_6_28)))
 (let ((?x1046 (* l_0_6_27 l_0_6_27)))
 (let ((?x3341 (* 2.0 l_0_6_2)))
 (let ((?x3364 (* ?x3341 l_0_6_7)))
 (let ((?x3338 (* 2.0 l_0_6_13)))
 (let ((?x3362 (* ?x3338 l_0_6_18)))
 (let ((?x3747 (- (- (+ (- (* (* (- 2.0) l_0_6_12) l_0_6_17) ?x3362) ?x3364) ?x1046) ?x1052)))
 (let ((?x3758 (- (- (- (- (- (+ (- ?x3747 ?x1055) ?x3366) ?x3664) ?x3751) ?x3753) ?x3755) ?x3757)))
 (= ?x3758 0.0))))))))))))))))))
(assert
 (let ((?x3389 (* l_0_6_6 l_0_6_6)))
 (let ((?x3387 (* l_0_6_5 l_0_6_5)))
 (let ((?x3385 (* l_0_6_4 l_0_6_4)))
 (let ((?x3726 (* (* 2.0 l_0_6_36) l_0_6_39)))
 (let ((?x3723 (* (* 2.0 l_0_6_35) l_0_6_38)))
 (let ((?x3720 (* (* 2.0 l_0_6_34) l_0_6_37)))
 (let ((?x3557 (* (* 2.0 l_0_6_26) l_0_6_29)))
 (let ((?x3554 (* (* 2.0 l_0_6_25) l_0_6_28)))
 (let ((?x3551 (* (* 2.0 l_0_6_24) l_0_6_27)))
 (let ((?x3383 (* l_0_6_16 l_0_6_16)))
 (let ((?x1338 (+ (- (- (* (- l_0_6_14) l_0_6_14) (* l_0_6_15 l_0_6_15)) ?x3383) ?x3551)))
 (let ((?x3763 (+ (+ (+ (+ (+ (+ (+ ?x1338 ?x3554) ?x3557) ?x3720) ?x3723) ?x3726) ?x3385) ?x3387)))
 (= (+ ?x3763 ?x3389) 0.0))))))))))))))
(assert
 (let ((?x3414 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x3411 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x3757 (* l_0_6_40 l_0_6_40)))
 (let ((?x3408 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x3755 (* l_0_6_39 l_0_6_39)))
 (let ((?x3753 (* l_0_6_38 l_0_6_38)))
 (let ((?x3751 (* l_0_6_37 l_0_6_37)))
 (let ((?x3664 (* l_0_6_30 l_0_6_30)))
 (let ((?x1055 (* l_0_6_29 l_0_6_29)))
 (let ((?x1052 (* l_0_6_28 l_0_6_28)))
 (let ((?x1046 (* l_0_6_27 l_0_6_27)))
 (let ((?x3405 (* (* 2.0 l_0_6_16) l_0_6_19)))
 (let ((?x3402 (* (* 2.0 l_0_6_15) l_0_6_18)))
 (let ((?x3771 (+ (+ (- (- (* (* (- 2.0) l_0_6_14) l_0_6_17) ?x3402) ?x3405) ?x1046) ?x1052)))
 (let ((?x3778 (+ (+ (+ (+ (+ (+ (+ ?x3771 ?x1055) ?x3664) ?x3751) ?x3753) ?x3755) ?x3408) ?x3757)))
 (= (+ (+ ?x3778 ?x3411) ?x3414) 0.0)))))))))))))))))
(assert
 (let ((?x3452 (* l_0_6_9 l_0_6_9)))
 (let ((?x3450 (* l_0_6_8 l_0_6_8)))
 (let ((?x3448 (* l_0_6_7 l_0_6_7)))
 (let ((?x3446 (* l_0_6_20 l_0_6_20)))
 (let ((?x3444 (* l_0_6_19 l_0_6_19)))
 (let ((?x3442 (* l_0_6_18 l_0_6_18)))
 (let ((?x1409 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_17 l_0_6_17)) ?x3442) ?x3444)))
 (= (+ (+ (+ (- ?x1409 ?x3446) ?x3448) ?x3450) ?x3452) 0.0)))))))))
(assert
 (let ((?x3796 (* l_0_6_63 l_0_6_63)))
 (let ((?x3794 (* l_0_6_62 l_0_6_62)))
 (let ((?x3792 (* l_0_6_53 l_0_6_53)))
 (let ((?x3790 (* l_0_6_52 l_0_6_52)))
 (let ((?x3788 (* l_0_6_43 l_0_6_43)))
 (let ((?x3786 (* l_0_6_42 l_0_6_42)))
 (let ((?x3502 (* 2.0 l_0_6_31)))
 (let ((?x1485 (* ?x3502 l_0_6_32)))
 (let ((?x3211 (* (- 2.0) l_0_6_21)))
 (let ((?x3212 (* ?x3211 l_0_6_22)))
 (let ((?x1505 (- (- ?x3212 (* (* 1.0 l_0_6_22) l_0_6_22)) (* (* 1.0 l_0_6_23) l_0_6_23))))
 (let ((?x3797 (- (- (- (- (- (- (- ?x1505 ?x1485) ?x3786) ?x3788) ?x3790) ?x3792) ?x3794) ?x3796)))
 (= ?x3797 0.0))))))))))))))
(assert
 (let ((?x3502 (* 2.0 l_0_6_31)))
 (let ((?x3822 (* ?x3502 l_0_6_34)))
 (let ((?x1485 (* ?x3502 l_0_6_32)))
 (let ((?x3499 (* 2.0 l_0_6_23)))
 (let ((?x3819 (* ?x3499 l_0_6_25)))
 (let ((?x3496 (* 2.0 l_0_6_22)))
 (let ((?x3817 (* ?x3496 l_0_6_24)))
 (let ((?x3466 (* 2.0 l_0_6_21)))
 (let ((?x3815 (* ?x3466 l_0_6_24)))
 (let ((?x3825 (- (- (+ (- (- (- (* ?x3466 l_0_6_22) ?x3815) ?x3817) ?x3819) ?x1485) ?x3822) (* (* 2.0 l_0_6_42) l_0_6_44))))
 (let ((?x3829 (- (- ?x3825 (* (* 2.0 l_0_6_43) l_0_6_45)) (* (* 2.0 l_0_6_52) l_0_6_54))))
 (let ((?x3833 (- (- ?x3829 (* (* 2.0 l_0_6_53) l_0_6_55)) (* (* 2.0 l_0_6_62) l_0_6_64))))
 (= (- ?x3833 (* (* 2.0 l_0_6_63) l_0_6_65)) 0.0))))))))))))))
(assert
 (let ((?x3865 (* l_0_6_33 l_0_6_33)))
 (let ((?x3863 (* l_0_6_32 l_0_6_32)))
 (let ((?x3866 (- (- (- (* (- l_0_6_22) l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x3863) ?x3865)))
 (= ?x3866 0.0)))))
(assert
 (let ((?x3865 (* l_0_6_33 l_0_6_33)))
 (let ((?x3692 (* 2.0 l_0_6_33)))
 (let ((?x3879 (* ?x3692 l_0_6_35)))
 (let ((?x3863 (* l_0_6_32 l_0_6_32)))
 (let ((?x3689 (* 2.0 l_0_6_32)))
 (let ((?x3876 (* ?x3689 l_0_6_34)))
 (let ((?x1530 (* l_0_6_23 l_0_6_23)))
 (let ((?x3499 (* 2.0 l_0_6_23)))
 (let ((?x3819 (* ?x3499 l_0_6_25)))
 (let ((?x3874 (- (+ (* (* (- 2.0) l_0_6_22) l_0_6_24) (* l_0_6_22 l_0_6_22)) ?x3819)))
 (= (+ (- (+ (- (+ ?x3874 ?x1530) ?x3876) ?x3863) ?x3879) ?x3865) 0.0))))))))))))
(assert
 (let ((?x3903 (* l_0_6_36 l_0_6_36)))
 (let ((?x3901 (* l_0_6_35 l_0_6_35)))
 (let ((?x3899 (* l_0_6_34 l_0_6_34)))
 (let ((?x3692 (* 2.0 l_0_6_33)))
 (let ((?x3879 (* ?x3692 l_0_6_35)))
 (let ((?x3689 (* 2.0 l_0_6_32)))
 (let ((?x3876 (* ?x3689 l_0_6_34)))
 (let ((?x3895 (* l_0_6_26 l_0_6_26)))
 (let ((?x3893 (* l_0_6_25 l_0_6_25)))
 (let ((?x3891 (* l_0_6_24 l_0_6_24)))
 (let ((?x3499 (* 2.0 l_0_6_23)))
 (let ((?x3819 (* ?x3499 l_0_6_25)))
 (let ((?x3496 (* 2.0 l_0_6_22)))
 (let ((?x3817 (* ?x3496 l_0_6_24)))
 (let ((?x3900 (- (+ (+ (- (- (- (+ ?x3817 ?x3819) ?x3891) ?x3893) ?x3895) ?x3876) ?x3879) ?x3899)))
 (= (- (- ?x3900 ?x3901) ?x3903) 0.0)))))))))))))))))
(assert
 (let ((?x3945 (* l_0_6_66 l_0_6_66)))
 (let ((?x3943 (* l_0_6_65 l_0_6_65)))
 (let ((?x3941 (* l_0_6_64 l_0_6_64)))
 (let ((?x3939 (* l_0_6_56 l_0_6_56)))
 (let ((?x3937 (* l_0_6_55 l_0_6_55)))
 (let ((?x3935 (* l_0_6_54 l_0_6_54)))
 (let ((?x3933 (* l_0_6_46 l_0_6_46)))
 (let ((?x3931 (* l_0_6_45 l_0_6_45)))
 (let ((?x3929 (* l_0_6_44 l_0_6_44)))
 (let ((?x3502 (* 2.0 l_0_6_31)))
 (let ((?x3822 (* ?x3502 l_0_6_34)))
 (let ((?x3466 (* 2.0 l_0_6_21)))
 (let ((?x3815 (* ?x3466 l_0_6_24)))
 (let ((?x3924 (- (- ?x3815 (* (* 1.0 l_0_6_24) l_0_6_24)) (* (* 1.0 l_0_6_25) l_0_6_25))))
 (let ((?x3932 (- (- (+ (- ?x3924 (* (* 1.0 l_0_6_26) l_0_6_26)) ?x3822) ?x3929) ?x3931)))
 (let ((?x3946 (- (- (- (- (- (- (- ?x3932 ?x3933) ?x3935) ?x3937) ?x3939) ?x3941) ?x3943) ?x3945)))
 (= ?x3946 0.0))))))))))))))))))
(assert
 (let ((?x3903 (* l_0_6_36 l_0_6_36)))
 (let ((?x3901 (* l_0_6_35 l_0_6_35)))
 (let ((?x3899 (* l_0_6_34 l_0_6_34)))
 (let ((?x3895 (* l_0_6_26 l_0_6_26)))
 (let ((?x3959 (+ (+ (+ (* l_0_6_24 l_0_6_24) (* l_0_6_25 l_0_6_25)) ?x3895) ?x3899)))
 (= (+ (+ ?x3959 ?x3901) ?x3903) 0.0)))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_11 0.0))
(assert
 (>= l_0_6_13 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_20 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_23 0.0))
(assert
 (>= l_0_6_26 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_41 0.0))
(assert
 (>= l_0_6_43 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_50 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_53 0.0))
(assert
 (>= l_0_6_56 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(check-sat)
(get-model)