real dirty,shared,exclusive,invalid,total;
@pre(invalid >= 1);
exclusive = 0;
dirty = 0;
shared = 0;
total = invalid;
while (1 >= 0, (((exclusive >= 0 and dirty >= 0) and (shared >= 0 and invalid >= 0)) and ((dirty + exclusive) + (shared + invalid)) == total)) {
ndif {
[assume ((((dirty == 0 and shared == 0) and exclusive == 0) and invalid >= 1)) {
invalid = (invalid - 1);
exclusive = (_a_0_)*(1)+(_a_1_)*(dirty)+(_a_2_)*(shared)+(_a_3_)*(exclusive)+(_a_4_)*(invalid);
[assume ((invalid >= 1 and dirty >= 1)) {
invalid = (invalid - 1);
dirty = (dirty - 1);
shared = (_a_5_)*(1)+(_a_6_)*(dirty)+(_a_7_)*(shared)+(_a_8_)*(exclusive)+(_a_9_)*(invalid);
[assume ((invalid >= 1 and shared >= 1)) {
invalid = (invalid - 1);
shared = (_a_10_)*(1)+(_a_11_)*(dirty)+(_a_12_)*(shared)+(_a_13_)*(exclusive)+(_a_14_)*(invalid);
exclusive = 0;
[assume ((invalid >= 1 and exclusive >= 1)) {
invalid = (invalid - 1);
shared = (_a_15_)*(1)+(_a_16_)*(dirty)+(_a_17_)*(shared)+(_a_18_)*(exclusive)+(_a_19_)*(invalid);
exclusive = 0;
[assume (exclusive >= 1) {
exclusive = (_a_20_)*(1)+(_a_21_)*(dirty)+(_a_22_)*(shared)+(_a_23_)*(exclusive)+(_a_24_)*(invalid);
dirty = (dirty + 1);
[assume (shared == 1) {
shared = (shared - 1);
exclusive = (_a_25_)*(1)+(_a_26_)*(dirty)+(_a_27_)*(shared)+(_a_28_)*(exclusive)+(_a_29_)*(invalid);
[assume (invalid >= 1) {
invalid = (_a_30_)*(1)+(_a_31_)*(dirty)+(_a_32_)*(shared)+(_a_33_)*(exclusive)+(_a_34_)*(invalid);
exclusive = 0;
shared = 0;
dirty = 1;
}
@post(((exclusive >= 0 and dirty >= 0) and (shared >= 0 and invalid >= 0)));
