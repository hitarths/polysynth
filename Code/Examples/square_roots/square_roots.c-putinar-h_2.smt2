(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_115 () Real)
(declare-fun l_0_4_114 () Real)
(declare-fun l_0_4_113 () Real)
(declare-fun l_0_4_112 () Real)
(declare-fun l_0_4_121 () Real)
(declare-fun l_0_4_106 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_116 () Real)
(declare-fun l_0_4_109 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_110 () Real)
(declare-fun l_0_4_108 () Real)
(declare-fun l_0_4_107 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_111 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_118 () Real)
(declare-fun l_0_4_117 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_123 () Real)
(declare-fun l_0_4_122 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_124 () Real)
(declare-fun l_0_4_125 () Real)
(declare-fun l_0_4_120 () Real)
(declare-fun l_0_4_119 () Real)
(declare-fun l_0_4_126 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_142 () Real)
(declare-fun l_0_5_127 () Real)
(declare-fun l_0_5_121 () Real)
(declare-fun l_0_5_106 () Real)
(declare-fun l_0_5_136 () Real)
(declare-fun l_0_5_135 () Real)
(declare-fun l_0_5_134 () Real)
(declare-fun l_0_5_133 () Real)
(declare-fun l_0_5_115 () Real)
(declare-fun l_0_5_114 () Real)
(declare-fun l_0_5_113 () Real)
(declare-fun l_0_5_112 () Real)
(declare-fun l_0_5_130 () Real)
(declare-fun l_0_5_109 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_131 () Real)
(declare-fun l_0_5_129 () Real)
(declare-fun l_0_5_128 () Real)
(declare-fun l_0_5_110 () Real)
(declare-fun l_0_5_108 () Real)
(declare-fun l_0_5_107 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_132 () Real)
(declare-fun l_0_5_111 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_139 () Real)
(declare-fun l_0_5_138 () Real)
(declare-fun l_0_5_137 () Real)
(declare-fun l_0_5_118 () Real)
(declare-fun l_0_5_117 () Real)
(declare-fun l_0_5_116 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_144 () Real)
(declare-fun l_0_5_143 () Real)
(declare-fun l_0_5_123 () Real)
(declare-fun l_0_5_122 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_145 () Real)
(declare-fun l_0_5_124 () Real)
(declare-fun l_0_5_146 () Real)
(declare-fun l_0_5_141 () Real)
(declare-fun l_0_5_140 () Real)
(declare-fun l_0_5_125 () Real)
(declare-fun l_0_5_120 () Real)
(declare-fun l_0_5_119 () Real)
(declare-fun l_0_5_147 () Real)
(declare-fun l_0_5_126 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_6_130 () Real)
(declare-fun l_0_6_127 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_131 () Real)
(declare-fun l_0_6_129 () Real)
(declare-fun l_0_6_128 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_132 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_135 () Real)
(declare-fun l_0_6_134 () Real)
(declare-fun l_0_6_133 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_139 () Real)
(declare-fun l_0_6_138 () Real)
(declare-fun l_0_6_137 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_144 () Real)
(declare-fun l_0_6_143 () Real)
(declare-fun l_0_6_142 () Real)
(declare-fun l_0_6_121 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_123 () Real)
(declare-fun l_0_6_122 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_124 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_125 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_126 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_145 () Real)
(declare-fun l_0_6_136 () Real)
(declare-fun l_0_6_146 () Real)
(declare-fun l_0_6_141 () Real)
(declare-fun l_0_6_140 () Real)
(declare-fun l_0_6_147 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_7_151 () Real)
(declare-fun l_0_7_148 () Real)
(declare-fun l_0_7_130 () Real)
(declare-fun l_0_7_127 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun _a_0_ () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_7_154 () Real)
(declare-fun l_0_7_133 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_149 () Real)
(declare-fun l_0_7_128 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_152 () Real)
(declare-fun l_0_7_150 () Real)
(declare-fun l_0_7_131 () Real)
(declare-fun l_0_7_129 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_153 () Real)
(declare-fun l_0_7_132 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_156 () Real)
(declare-fun l_0_7_155 () Real)
(declare-fun l_0_7_135 () Real)
(declare-fun l_0_7_134 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_160 () Real)
(declare-fun l_0_7_159 () Real)
(declare-fun l_0_7_158 () Real)
(declare-fun l_0_7_139 () Real)
(declare-fun l_0_7_138 () Real)
(declare-fun l_0_7_137 () Real)
(declare-fun l_0_7_116 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_165 () Real)
(declare-fun l_0_7_164 () Real)
(declare-fun l_0_7_163 () Real)
(declare-fun l_0_7_144 () Real)
(declare-fun l_0_7_143 () Real)
(declare-fun l_0_7_142 () Real)
(declare-fun l_0_7_121 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_114 () Real)
(declare-fun l_0_7_113 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_118 () Real)
(declare-fun l_0_7_117 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_123 () Real)
(declare-fun l_0_7_122 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_115 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_119 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_124 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_120 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_125 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_126 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_166 () Real)
(declare-fun l_0_7_157 () Real)
(declare-fun l_0_7_145 () Real)
(declare-fun l_0_7_136 () Real)
(declare-fun l_0_7_167 () Real)
(declare-fun l_0_7_162 () Real)
(declare-fun l_0_7_161 () Real)
(declare-fun l_0_7_146 () Real)
(declare-fun l_0_7_141 () Real)
(declare-fun l_0_7_140 () Real)
(declare-fun l_0_7_168 () Real)
(declare-fun l_0_7_147 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_184 () Real)
(declare-fun l_0_8_169 () Real)
(declare-fun l_0_8_163 () Real)
(declare-fun l_0_8_148 () Real)
(declare-fun l_0_8_142 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_174 () Real)
(declare-fun l_0_8_173 () Real)
(declare-fun l_0_8_172 () Real)
(declare-fun l_0_8_153 () Real)
(declare-fun l_0_8_152 () Real)
(declare-fun l_0_8_151 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_8_177 () Real)
(declare-fun l_0_8_176 () Real)
(declare-fun l_0_8_175 () Real)
(declare-fun l_0_8_156 () Real)
(declare-fun l_0_8_155 () Real)
(declare-fun l_0_8_154 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun _a_5_ () Real)
(declare-fun l_0_8_178 () Real)
(declare-fun l_0_8_157 () Real)
(declare-fun l_0_8_136 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_171 () Real)
(declare-fun l_0_8_170 () Real)
(declare-fun l_0_8_150 () Real)
(declare-fun l_0_8_149 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_181 () Real)
(declare-fun l_0_8_180 () Real)
(declare-fun l_0_8_179 () Real)
(declare-fun l_0_8_160 () Real)
(declare-fun l_0_8_159 () Real)
(declare-fun l_0_8_158 () Real)
(declare-fun l_0_8_139 () Real)
(declare-fun l_0_8_138 () Real)
(declare-fun l_0_8_137 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_186 () Real)
(declare-fun l_0_8_185 () Real)
(declare-fun l_0_8_165 () Real)
(declare-fun l_0_8_164 () Real)
(declare-fun l_0_8_144 () Real)
(declare-fun l_0_8_143 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_187 () Real)
(declare-fun l_0_8_166 () Real)
(declare-fun l_0_8_145 () Real)
(declare-fun l_0_8_188 () Real)
(declare-fun l_0_8_183 () Real)
(declare-fun l_0_8_182 () Real)
(declare-fun l_0_8_167 () Real)
(declare-fun l_0_8_162 () Real)
(declare-fun l_0_8_161 () Real)
(declare-fun l_0_8_146 () Real)
(declare-fun l_0_8_141 () Real)
(declare-fun l_0_8_140 () Real)
(declare-fun l_0_8_189 () Real)
(declare-fun l_0_8_168 () Real)
(declare-fun l_0_8_147 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_9_195 () Real)
(declare-fun l_0_9_194 () Real)
(declare-fun l_0_9_193 () Real)
(declare-fun l_0_9_174 () Real)
(declare-fun l_0_9_173 () Real)
(declare-fun l_0_9_172 () Real)
(declare-fun l_0_9_153 () Real)
(declare-fun l_0_9_152 () Real)
(declare-fun l_0_9_151 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_190 () Real)
(declare-fun l_0_9_169 () Real)
(declare-fun l_0_9_148 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_198 () Real)
(declare-fun l_0_9_197 () Real)
(declare-fun l_0_9_196 () Real)
(declare-fun l_0_9_177 () Real)
(declare-fun l_0_9_176 () Real)
(declare-fun l_0_9_175 () Real)
(declare-fun l_0_9_156 () Real)
(declare-fun l_0_9_155 () Real)
(declare-fun l_0_9_154 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_199 () Real)
(declare-fun l_0_9_178 () Real)
(declare-fun l_0_9_157 () Real)
(declare-fun l_0_9_136 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_192 () Real)
(declare-fun l_0_9_191 () Real)
(declare-fun l_0_9_171 () Real)
(declare-fun l_0_9_170 () Real)
(declare-fun l_0_9_150 () Real)
(declare-fun l_0_9_149 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_205 () Real)
(declare-fun l_0_9_184 () Real)
(declare-fun l_0_9_163 () Real)
(declare-fun l_0_9_142 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_202 () Real)
(declare-fun l_0_9_201 () Real)
(declare-fun l_0_9_200 () Real)
(declare-fun l_0_9_181 () Real)
(declare-fun l_0_9_180 () Real)
(declare-fun l_0_9_179 () Real)
(declare-fun l_0_9_160 () Real)
(declare-fun l_0_9_159 () Real)
(declare-fun l_0_9_158 () Real)
(declare-fun l_0_9_139 () Real)
(declare-fun l_0_9_138 () Real)
(declare-fun l_0_9_137 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_207 () Real)
(declare-fun l_0_9_206 () Real)
(declare-fun l_0_9_186 () Real)
(declare-fun l_0_9_185 () Real)
(declare-fun l_0_9_165 () Real)
(declare-fun l_0_9_164 () Real)
(declare-fun l_0_9_144 () Real)
(declare-fun l_0_9_143 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_208 () Real)
(declare-fun l_0_9_187 () Real)
(declare-fun l_0_9_166 () Real)
(declare-fun l_0_9_145 () Real)
(declare-fun l_0_9_209 () Real)
(declare-fun l_0_9_204 () Real)
(declare-fun l_0_9_203 () Real)
(declare-fun l_0_9_188 () Real)
(declare-fun l_0_9_183 () Real)
(declare-fun l_0_9_182 () Real)
(declare-fun l_0_9_167 () Real)
(declare-fun l_0_9_162 () Real)
(declare-fun l_0_9_161 () Real)
(declare-fun l_0_9_146 () Real)
(declare-fun l_0_9_141 () Real)
(declare-fun l_0_9_140 () Real)
(declare-fun l_0_9_210 () Real)
(declare-fun l_0_9_189 () Real)
(declare-fun l_0_9_168 () Real)
(declare-fun l_0_9_147 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_11_148 () Real)
(declare-fun l_0_11_127 () Real)
(declare-fun _a_6_ () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_149 () Real)
(declare-fun l_0_11_128 () Real)
(declare-fun l_0_11_106 () Real)
(declare-fun _a_7_ () Real)
(declare-fun l_0_11_151 () Real)
(declare-fun l_0_11_130 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_152 () Real)
(declare-fun l_0_11_150 () Real)
(declare-fun l_0_11_131 () Real)
(declare-fun l_0_11_129 () Real)
(declare-fun l_0_11_109 () Real)
(declare-fun l_0_11_107 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_153 () Real)
(declare-fun l_0_11_132 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_156 () Real)
(declare-fun l_0_11_155 () Real)
(declare-fun l_0_11_154 () Real)
(declare-fun l_0_11_135 () Real)
(declare-fun l_0_11_134 () Real)
(declare-fun l_0_11_133 () Real)
(declare-fun l_0_11_112 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_160 () Real)
(declare-fun l_0_11_159 () Real)
(declare-fun l_0_11_158 () Real)
(declare-fun l_0_11_139 () Real)
(declare-fun l_0_11_138 () Real)
(declare-fun l_0_11_137 () Real)
(declare-fun l_0_11_116 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_165 () Real)
(declare-fun l_0_11_164 () Real)
(declare-fun l_0_11_163 () Real)
(declare-fun l_0_11_144 () Real)
(declare-fun l_0_11_143 () Real)
(declare-fun l_0_11_142 () Real)
(declare-fun l_0_11_121 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_108 () Real)
(declare-fun l_0_11_110 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_111 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_114 () Real)
(declare-fun l_0_11_113 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_118 () Real)
(declare-fun l_0_11_117 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_123 () Real)
(declare-fun l_0_11_122 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_115 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_119 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_124 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_120 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_125 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_126 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_166 () Real)
(declare-fun l_0_11_157 () Real)
(declare-fun l_0_11_145 () Real)
(declare-fun l_0_11_136 () Real)
(declare-fun l_0_11_167 () Real)
(declare-fun l_0_11_162 () Real)
(declare-fun l_0_11_161 () Real)
(declare-fun l_0_11_146 () Real)
(declare-fun l_0_11_141 () Real)
(declare-fun l_0_11_140 () Real)
(declare-fun l_0_11_168 () Real)
(declare-fun l_0_11_147 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_184 () Real)
(declare-fun l_0_12_169 () Real)
(declare-fun l_0_12_163 () Real)
(declare-fun l_0_12_148 () Real)
(declare-fun l_0_12_142 () Real)
(declare-fun l_0_12_127 () Real)
(declare-fun l_0_12_178 () Real)
(declare-fun l_0_12_177 () Real)
(declare-fun l_0_12_176 () Real)
(declare-fun l_0_12_175 () Real)
(declare-fun l_0_12_157 () Real)
(declare-fun l_0_12_156 () Real)
(declare-fun l_0_12_155 () Real)
(declare-fun l_0_12_154 () Real)
(declare-fun l_0_12_136 () Real)
(declare-fun l_0_12_135 () Real)
(declare-fun l_0_12_134 () Real)
(declare-fun l_0_12_133 () Real)
(declare-fun l_0_12_112 () Real)
(declare-fun l_0_12_106 () Real)
(declare-fun l_0_12_172 () Real)
(declare-fun l_0_12_151 () Real)
(declare-fun l_0_12_130 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_173 () Real)
(declare-fun l_0_12_171 () Real)
(declare-fun l_0_12_170 () Real)
(declare-fun l_0_12_152 () Real)
(declare-fun l_0_12_150 () Real)
(declare-fun l_0_12_149 () Real)
(declare-fun l_0_12_131 () Real)
(declare-fun l_0_12_129 () Real)
(declare-fun l_0_12_128 () Real)
(declare-fun l_0_12_109 () Real)
(declare-fun l_0_12_107 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_174 () Real)
(declare-fun l_0_12_153 () Real)
(declare-fun l_0_12_132 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_181 () Real)
(declare-fun l_0_12_180 () Real)
(declare-fun l_0_12_179 () Real)
(declare-fun l_0_12_160 () Real)
(declare-fun l_0_12_159 () Real)
(declare-fun l_0_12_158 () Real)
(declare-fun l_0_12_139 () Real)
(declare-fun l_0_12_138 () Real)
(declare-fun l_0_12_137 () Real)
(declare-fun l_0_12_116 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_186 () Real)
(declare-fun l_0_12_185 () Real)
(declare-fun l_0_12_165 () Real)
(declare-fun l_0_12_164 () Real)
(declare-fun l_0_12_144 () Real)
(declare-fun l_0_12_143 () Real)
(declare-fun l_0_12_121 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_108 () Real)
(declare-fun l_0_12_110 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_111 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_114 () Real)
(declare-fun l_0_12_113 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_118 () Real)
(declare-fun l_0_12_117 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_123 () Real)
(declare-fun l_0_12_122 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_115 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_119 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_124 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_120 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_125 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_126 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_187 () Real)
(declare-fun l_0_12_166 () Real)
(declare-fun l_0_12_145 () Real)
(declare-fun l_0_12_188 () Real)
(declare-fun l_0_12_183 () Real)
(declare-fun l_0_12_182 () Real)
(declare-fun l_0_12_167 () Real)
(declare-fun l_0_12_162 () Real)
(declare-fun l_0_12_161 () Real)
(declare-fun l_0_12_146 () Real)
(declare-fun l_0_12_141 () Real)
(declare-fun l_0_12_140 () Real)
(declare-fun l_0_12_189 () Real)
(declare-fun l_0_12_168 () Real)
(declare-fun l_0_12_147 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_13_64 () Real)
(declare-fun l_0_13_43 () Real)
(declare-fun l_0_13_199 () Real)
(declare-fun l_0_13_198 () Real)
(declare-fun l_0_13_197 () Real)
(declare-fun l_0_13_196 () Real)
(declare-fun l_0_13_178 () Real)
(declare-fun l_0_13_177 () Real)
(declare-fun l_0_13_176 () Real)
(declare-fun l_0_13_175 () Real)
(declare-fun l_0_13_157 () Real)
(declare-fun l_0_13_156 () Real)
(declare-fun l_0_13_155 () Real)
(declare-fun l_0_13_154 () Real)
(declare-fun l_0_13_136 () Real)
(declare-fun l_0_13_135 () Real)
(declare-fun l_0_13_134 () Real)
(declare-fun l_0_13_133 () Real)
(declare-fun l_0_13_112 () Real)
(declare-fun l_0_13_106 () Real)
(declare-fun l_0_13_193 () Real)
(declare-fun l_0_13_190 () Real)
(declare-fun l_0_13_172 () Real)
(declare-fun l_0_13_169 () Real)
(declare-fun l_0_13_151 () Real)
(declare-fun l_0_13_148 () Real)
(declare-fun l_0_13_130 () Real)
(declare-fun l_0_13_127 () Real)
(declare-fun l_0_13_1 () Real)
(declare-fun l_0_13_85 () Real)
(declare-fun l_0_13_25 () Real)
(declare-fun l_0_13_22 () Real)
(declare-fun l_0_13_194 () Real)
(declare-fun l_0_13_192 () Real)
(declare-fun l_0_13_191 () Real)
(declare-fun l_0_13_173 () Real)
(declare-fun l_0_13_171 () Real)
(declare-fun l_0_13_170 () Real)
(declare-fun l_0_13_152 () Real)
(declare-fun l_0_13_150 () Real)
(declare-fun l_0_13_149 () Real)
(declare-fun l_0_13_131 () Real)
(declare-fun l_0_13_129 () Real)
(declare-fun l_0_13_128 () Real)
(declare-fun l_0_13_109 () Real)
(declare-fun l_0_13_107 () Real)
(declare-fun l_0_13_2 () Real)
(declare-fun l_0_13_205 () Real)
(declare-fun l_0_13_184 () Real)
(declare-fun l_0_13_163 () Real)
(declare-fun l_0_13_142 () Real)
(declare-fun l_0_13_195 () Real)
(declare-fun l_0_13_174 () Real)
(declare-fun l_0_13_153 () Real)
(declare-fun l_0_13_132 () Real)
(declare-fun l_0_13_4 () Real)
(declare-fun l_0_13_7 () Real)
(declare-fun l_0_13_88 () Real)
(declare-fun l_0_13_202 () Real)
(declare-fun l_0_13_201 () Real)
(declare-fun l_0_13_200 () Real)
(declare-fun l_0_13_181 () Real)
(declare-fun l_0_13_180 () Real)
(declare-fun l_0_13_179 () Real)
(declare-fun l_0_13_160 () Real)
(declare-fun l_0_13_159 () Real)
(declare-fun l_0_13_158 () Real)
(declare-fun l_0_13_139 () Real)
(declare-fun l_0_13_138 () Real)
(declare-fun l_0_13_137 () Real)
(declare-fun l_0_13_116 () Real)
(declare-fun l_0_13_11 () Real)
(declare-fun l_0_13_67 () Real)
(declare-fun l_0_13_46 () Real)
(declare-fun l_0_13_207 () Real)
(declare-fun l_0_13_206 () Real)
(declare-fun l_0_13_186 () Real)
(declare-fun l_0_13_185 () Real)
(declare-fun l_0_13_165 () Real)
(declare-fun l_0_13_164 () Real)
(declare-fun l_0_13_144 () Real)
(declare-fun l_0_13_143 () Real)
(declare-fun l_0_13_121 () Real)
(declare-fun l_0_13_16 () Real)
(declare-fun l_0_13_86 () Real)
(declare-fun l_0_13_65 () Real)
(declare-fun l_0_13_44 () Real)
(declare-fun l_0_13_3 () Real)
(declare-fun l_0_13_26 () Real)
(declare-fun l_0_13_24 () Real)
(declare-fun l_0_13_23 () Real)
(declare-fun l_0_13_108 () Real)
(declare-fun l_0_13_110 () Real)
(declare-fun l_0_13_5 () Real)
(declare-fun l_0_13_27 () Real)
(declare-fun l_0_13_111 () Real)
(declare-fun l_0_13_91 () Real)
(declare-fun l_0_13_70 () Real)
(declare-fun l_0_13_49 () Real)
(declare-fun l_0_13_8 () Real)
(declare-fun l_0_13_30 () Real)
(declare-fun l_0_13_29 () Real)
(declare-fun l_0_13_28 () Real)
(declare-fun l_0_13_114 () Real)
(declare-fun l_0_13_113 () Real)
(declare-fun l_0_13_89 () Real)
(declare-fun l_0_13_87 () Real)
(declare-fun l_0_13_95 () Real)
(declare-fun l_0_13_74 () Real)
(declare-fun l_0_13_53 () Real)
(declare-fun l_0_13_34 () Real)
(declare-fun l_0_13_33 () Real)
(declare-fun l_0_13_32 () Real)
(declare-fun l_0_13_12 () Real)
(declare-fun l_0_13_118 () Real)
(declare-fun l_0_13_117 () Real)
(declare-fun l_0_13_68 () Real)
(declare-fun l_0_13_66 () Real)
(declare-fun l_0_13_79 () Real)
(declare-fun l_0_13_47 () Real)
(declare-fun l_0_13_45 () Real)
(declare-fun l_0_13_58 () Real)
(declare-fun l_0_13_39 () Real)
(declare-fun l_0_13_38 () Real)
(declare-fun l_0_13_37 () Real)
(declare-fun l_0_13_17 () Real)
(declare-fun l_0_13_123 () Real)
(declare-fun l_0_13_122 () Real)
(declare-fun l_0_13_100 () Real)
(declare-fun l_0_13_6 () Real)
(declare-fun l_0_13_9 () Real)
(declare-fun l_0_13_90 () Real)
(declare-fun l_0_13_13 () Real)
(declare-fun l_0_13_69 () Real)
(declare-fun l_0_13_48 () Real)
(declare-fun l_0_13_18 () Real)
(declare-fun l_0_13_115 () Real)
(declare-fun l_0_13_10 () Real)
(declare-fun l_0_13_93 () Real)
(declare-fun l_0_13_92 () Real)
(declare-fun l_0_13_119 () Real)
(declare-fun l_0_13_14 () Real)
(declare-fun l_0_13_72 () Real)
(declare-fun l_0_13_71 () Real)
(declare-fun l_0_13_51 () Real)
(declare-fun l_0_13_50 () Real)
(declare-fun l_0_13_124 () Real)
(declare-fun l_0_13_19 () Real)
(declare-fun l_0_13_97 () Real)
(declare-fun l_0_13_96 () Real)
(declare-fun l_0_13_15 () Real)
(declare-fun l_0_13_120 () Real)
(declare-fun l_0_13_76 () Real)
(declare-fun l_0_13_75 () Real)
(declare-fun l_0_13_55 () Real)
(declare-fun l_0_13_54 () Real)
(declare-fun l_0_13_20 () Real)
(declare-fun l_0_13_125 () Real)
(declare-fun l_0_13_102 () Real)
(declare-fun l_0_13_101 () Real)
(declare-fun l_0_13_81 () Real)
(declare-fun l_0_13_80 () Real)
(declare-fun l_0_13_60 () Real)
(declare-fun l_0_13_59 () Real)
(declare-fun l_0_13_21 () Real)
(declare-fun l_0_13_126 () Real)
(declare-fun l_0_13_31 () Real)
(declare-fun l_0_13_35 () Real)
(declare-fun l_0_13_40 () Real)
(declare-fun l_0_13_36 () Real)
(declare-fun l_0_13_41 () Real)
(declare-fun l_0_13_42 () Real)
(declare-fun l_0_13_208 () Real)
(declare-fun l_0_13_187 () Real)
(declare-fun l_0_13_166 () Real)
(declare-fun l_0_13_145 () Real)
(declare-fun l_0_13_209 () Real)
(declare-fun l_0_13_204 () Real)
(declare-fun l_0_13_203 () Real)
(declare-fun l_0_13_188 () Real)
(declare-fun l_0_13_183 () Real)
(declare-fun l_0_13_182 () Real)
(declare-fun l_0_13_167 () Real)
(declare-fun l_0_13_162 () Real)
(declare-fun l_0_13_161 () Real)
(declare-fun l_0_13_146 () Real)
(declare-fun l_0_13_141 () Real)
(declare-fun l_0_13_140 () Real)
(declare-fun l_0_13_210 () Real)
(declare-fun l_0_13_189 () Real)
(declare-fun l_0_13_168 () Real)
(declare-fun l_0_13_147 () Real)
(declare-fun l_0_13_73 () Real)
(declare-fun l_0_13_52 () Real)
(declare-fun l_0_13_77 () Real)
(declare-fun l_0_13_56 () Real)
(declare-fun l_0_13_94 () Real)
(declare-fun l_0_13_103 () Real)
(declare-fun l_0_13_82 () Real)
(declare-fun l_0_13_61 () Real)
(declare-fun l_0_13_78 () Real)
(declare-fun l_0_13_57 () Real)
(declare-fun l_0_13_99 () Real)
(declare-fun l_0_13_104 () Real)
(declare-fun l_0_13_98 () Real)
(declare-fun l_0_13_83 () Real)
(declare-fun l_0_13_62 () Real)
(declare-fun l_0_13_105 () Real)
(declare-fun l_0_13_84 () Real)
(declare-fun l_0_13_63 () Real)
(assert
 (= (+ (- (* 1.0 l_0_0_1) l_0_0_3) (/ 1.0 2.0)) 0.0))
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (= (- 1.0 l_0_1_1) 0.0))
(assert
 (let ((?x1788 (- (- (- (- (* 1.0 l_0_1_1) l_0_1_3) l_0_1_4) l_0_1_5) 1.0)))
 (= ?x1788 0.0)))
(assert
 (= (- l_0_1_2) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (>= l_0_1_5 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (let ((?x1819 (- (- (- (- (* 1.0 l_0_2_1) l_0_2_3) l_0_2_4) l_0_2_5) l_0_2_6)))
 (= (- ?x1819 l_0_2_7) 0.0)))
(assert
 (= (- l_0_2_2) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (let ((?x1852 (- (- (- (- (* 1.0 l_0_3_1) l_0_3_3) l_0_3_4) l_0_3_5) l_0_3_6)))
 (= (- (- (- ?x1852 l_0_3_7) l_0_3_8) l_0_3_9) 0.0)))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (= (- l_0_3_2) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_7 0.0))
(assert
 (>= l_0_3_8 0.0))
(assert
 (>= l_0_3_9 0.0))
(assert
 (let ((?x1905 (* l_0_4_64 l_0_4_64)))
 (let ((?x1903 (* l_0_4_43 l_0_4_43)))
 (let ((?x1901 (* l_0_4_115 l_0_4_115)))
 (let ((?x1899 (* l_0_4_114 l_0_4_114)))
 (let ((?x1900 (- (- (* (- l_0_4_112) l_0_4_112) (* l_0_4_113 l_0_4_113)) ?x1899)))
 (= (+ (- (+ (- ?x1900 ?x1901) ?x1903) ?x1905) 1.0) 0.0)))))))
(assert
 (let ((?x1905 (* l_0_4_64 l_0_4_64)))
 (let ((?x1932 (+ (- (* (* (- 2.0) l_0_4_106) l_0_4_121) (* l_0_4_43 l_0_4_43)) ?x1905)))
 (= (- ?x1932 1.0) 0.0))))
(assert
 (let ((?x1949 (+ (- (* (* (- 2.0) l_0_4_106) l_0_4_116) (* l_0_4_85 l_0_4_85)) 1.0)))
 (= ?x1949 0.0)))
(assert
 (= (- (* (- l_0_4_1) l_0_4_1) (* (* 2.0 l_0_4_106) l_0_4_109)) 0.0))
(assert
 (let ((?x1947 (* l_0_4_85 l_0_4_85)))
 (let ((?x1992 (* 2.0 ?x1947)))
 (let ((?x1903 (* l_0_4_43 l_0_4_43)))
 (let ((?x1987 (* 2.0 ?x1903)))
 (let ((?x1980 (- (* (* (- 2.0) l_0_4_1) l_0_4_2) (* (* 2.0 l_0_4_107) l_0_4_109))))
 (let ((?x1986 (- (- ?x1980 (* (* 2.0 l_0_4_108) l_0_4_110)) (* (* 2.0 l_0_4_22) l_0_4_25))))
 (= (+ (- (+ ?x1986 ?x1987) (* (* 2.0 l_0_4_64) l_0_4_64)) ?x1992) 0.0))))))))
(assert
 (let ((?x2028 (* l_0_4_111 l_0_4_111)))
 (let ((?x2026 (* l_0_4_110 l_0_4_110)))
 (let ((?x2027 (- (- (* (* (- 2.0) l_0_4_1) l_0_4_4) (* l_0_4_109 l_0_4_109)) ?x2026)))
 (= (- ?x2027 ?x2028) 0.0)))))
(assert
 (let ((?x2048 (- (* (* (- 2.0) l_0_4_1) l_0_4_7) (* (* 2.0 l_0_4_109) l_0_4_112))))
 (let ((?x2054 (- (- ?x2048 (* (* 2.0 l_0_4_110) l_0_4_113)) (* (* 2.0 l_0_4_111) l_0_4_114))))
 (= ?x2054 0.0))))
(assert
 (let ((?x2081 (- (* (* (- 2.0) l_0_4_1) l_0_4_11) (* (* 2.0 l_0_4_109) l_0_4_116))))
 (let ((?x2085 (- (- ?x2081 (* (* 2.0 l_0_4_110) l_0_4_117)) (* (* 2.0 l_0_4_111) l_0_4_118))))
 (= (- ?x2085 (* (* 2.0 l_0_4_85) l_0_4_88)) 0.0))))
(assert
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x2129 (* ?x1989 l_0_4_67)))
 (let ((?x2126 (* 2.0 l_0_4_43)))
 (let ((?x2127 (* ?x2126 l_0_4_46)))
 (let ((?x2121 (- (* (* (- 2.0) l_0_4_1) l_0_4_16) (* (* 2.0 l_0_4_109) l_0_4_121))))
 (let ((?x2125 (- (- ?x2121 (* (* 2.0 l_0_4_110) l_0_4_122)) (* (* 2.0 l_0_4_111) l_0_4_123))))
 (= (+ (- ?x2125 ?x2127) ?x2129) 0.0))))))))
(assert
 (let ((?x2171 (* l_0_4_3 l_0_4_3)))
 (let ((?x2170 (- (- (* (- l_0_4_2) l_0_4_2) (* (* 2.0 l_0_4_23) l_0_4_25)) (* (* 2.0 l_0_4_24) l_0_4_26))))
 (let ((?x2179 (- (+ (- ?x2170 ?x2171) (* (* 4.0 l_0_4_43) l_0_4_44)) (* (* 4.0 l_0_4_64) l_0_4_65))))
 (= (+ ?x2179 (* (* 4.0 l_0_4_85) l_0_4_86)) 0.0)))))
(assert
 (let ((?x2223 (* l_0_4_27 l_0_4_27)))
 (let ((?x2221 (* l_0_4_26 l_0_4_26)))
 (let ((?x2222 (- (- (* (* (- 2.0) l_0_4_2) l_0_4_4) (* l_0_4_25 l_0_4_25)) ?x2221)))
 (let ((?x2229 (+ (- (- ?x2222 ?x2223) (* (* 2.0 l_0_4_3) l_0_4_5)) (* (* 4.0 l_0_4_43) l_0_4_46))))
 (let ((?x2233 (+ (- ?x2229 (* (* 4.0 l_0_4_64) l_0_4_67)) (* (* 4.0 l_0_4_85) l_0_4_88))))
 (= ?x2233 0.0)))))))
(assert
 (let ((?x2265 (- (* (* (- 2.0) l_0_4_2) l_0_4_7) (* (* 2.0 l_0_4_25) l_0_4_28))))
 (let ((?x2271 (- (- ?x2265 (* (* 2.0 l_0_4_26) l_0_4_29)) (* (* 2.0 l_0_4_27) l_0_4_30))))
 (let ((?x2275 (+ (- ?x2271 (* (* 2.0 l_0_4_3) l_0_4_8)) (* (* 4.0 l_0_4_43) l_0_4_49))))
 (let ((?x2279 (+ (- ?x2275 (* (* 4.0 l_0_4_64) l_0_4_70)) (* (* 4.0 l_0_4_85) l_0_4_91))))
 (= ?x2279 0.0))))))
(assert
 (let ((?x2326 (- (* (* (- 2.0) l_0_4_11) l_0_4_2) (* (* 2.0 l_0_4_12) l_0_4_3))))
 (let ((?x2330 (- (- ?x2326 (* (* 2.0 l_0_4_25) l_0_4_32)) (* (* 2.0 l_0_4_26) l_0_4_33))))
 (let ((?x2334 (+ (- ?x2330 (* (* 2.0 l_0_4_27) l_0_4_34)) (* (* 4.0 l_0_4_43) l_0_4_53))))
 (let ((?x2338 (+ (- ?x2334 (* (* 4.0 l_0_4_64) l_0_4_74)) (* (* 4.0 l_0_4_85) l_0_4_95))))
 (let ((?x2344 (- (- ?x2338 (* (* 2.0 l_0_4_86) l_0_4_88)) (* (* 2.0 l_0_4_87) l_0_4_89))))
 (= ?x2344 0.0)))))))
(assert
 (let ((?x2428 (* 2.0 l_0_4_66)))
 (let ((?x2429 (* ?x2428 l_0_4_68)))
 (let ((?x2425 (* 2.0 l_0_4_65)))
 (let ((?x2426 (* ?x2425 l_0_4_67)))
 (let ((?x2420 (* 2.0 l_0_4_45)))
 (let ((?x2421 (* ?x2420 l_0_4_47)))
 (let ((?x2417 (* 2.0 l_0_4_44)))
 (let ((?x2418 (* ?x2417 l_0_4_46)))
 (let ((?x2405 (- (* (* 4.0 l_0_4_100) l_0_4_85) (* (* 2.0 l_0_4_16) l_0_4_2))))
 (let ((?x2410 (- (- ?x2405 (* (* 2.0 l_0_4_17) l_0_4_3)) (* (* 2.0 l_0_4_25) l_0_4_37))))
 (let ((?x2414 (- (- ?x2410 (* (* 2.0 l_0_4_26) l_0_4_38)) (* (* 2.0 l_0_4_27) l_0_4_39))))
 (let ((?x2424 (- (- (- (+ ?x2414 (* (* 4.0 l_0_4_43) l_0_4_58)) ?x2418) ?x2421) (* (* 4.0 l_0_4_64) l_0_4_79))))
 (= (+ (+ ?x2424 ?x2426) ?x2429) 0.0))))))))))))))
(assert
 (let ((?x2495 (* l_0_4_6 l_0_4_6)))
 (= (- (- (* (- l_0_4_4) l_0_4_4) (* l_0_4_5 l_0_4_5)) ?x2495) 0.0)))
(assert
 (let ((?x2513 (- (* (* (- 2.0) l_0_4_4) l_0_4_7) (* (* 2.0 l_0_4_5) l_0_4_8))))
 (= (- ?x2513 (* (* 2.0 l_0_4_6) l_0_4_9)) 0.0)))
(assert
 (let ((?x2545 (* l_0_4_90 l_0_4_90)))
 (let ((?x2543 (* l_0_4_89 l_0_4_89)))
 (let ((?x2541 (* l_0_4_88 l_0_4_88)))
 (let ((?x2537 (- (* (* (- 2.0) l_0_4_11) l_0_4_4) (* (* 2.0 l_0_4_12) l_0_4_5))))
 (let ((?x2546 (- (- (- (- ?x2537 (* (* 2.0 l_0_4_13) l_0_4_6)) ?x2541) ?x2543) ?x2545)))
 (= ?x2546 0.0)))))))
(assert
 (let ((?x2591 (* l_0_4_69 l_0_4_69)))
 (let ((?x2589 (* l_0_4_68 l_0_4_68)))
 (let ((?x2587 (* l_0_4_67 l_0_4_67)))
 (let ((?x2585 (* l_0_4_48 l_0_4_48)))
 (let ((?x2583 (* l_0_4_47 l_0_4_47)))
 (let ((?x2581 (* l_0_4_46 l_0_4_46)))
 (let ((?x2577 (- (* (* (- 2.0) l_0_4_16) l_0_4_4) (* (* 2.0 l_0_4_17) l_0_4_5))))
 (let ((?x2586 (- (- (- (- ?x2577 (* (* 2.0 l_0_4_18) l_0_4_6)) ?x2581) ?x2583) ?x2585)))
 (= (+ (+ (+ ?x2586 ?x2587) ?x2589) ?x2591) 0.0))))))))))
(assert
 (let ((?x2631 (* l_0_4_9 l_0_4_9)))
 (let ((?x2629 (* l_0_4_8 l_0_4_8)))
 (let ((?x2627 (* l_0_4_7 l_0_4_7)))
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x2129 (* ?x1989 l_0_4_67)))
 (let ((?x2626 (- (+ (* (- l_0_4_10) l_0_4_10) (* (* 2.0 l_0_4_43) l_0_4_46)) ?x2129)))
 (= (- (- (- ?x2626 ?x2627) ?x2629) ?x2631) 0.0))))))))
(assert
 (let ((?x2656 (- (* (* (- 2.0) l_0_4_10) l_0_4_14) (* (* 2.0 l_0_4_11) l_0_4_7))))
 (let ((?x2660 (- (- ?x2656 (* (* 2.0 l_0_4_12) l_0_4_8)) (* (* 2.0 l_0_4_13) l_0_4_9))))
 (let ((?x2666 (- (- ?x2660 (* (* 2.0 l_0_4_88) l_0_4_91)) (* (* 2.0 l_0_4_89) l_0_4_92))))
 (= (- ?x2666 (* (* 2.0 l_0_4_90) l_0_4_93)) 0.0)))))
(assert
 (let ((?x2734 (* 2.0 l_0_4_69)))
 (let ((?x2735 (* ?x2734 l_0_4_72)))
 (let ((?x2731 (* 2.0 l_0_4_68)))
 (let ((?x2732 (* ?x2731 l_0_4_71)))
 (let ((?x2728 (* 2.0 l_0_4_67)))
 (let ((?x2729 (* ?x2728 l_0_4_70)))
 (let ((?x2725 (* 2.0 l_0_4_48)))
 (let ((?x2726 (* ?x2725 l_0_4_51)))
 (let ((?x2722 (* 2.0 l_0_4_47)))
 (let ((?x2723 (* ?x2722 l_0_4_50)))
 (let ((?x2719 (* 2.0 l_0_4_46)))
 (let ((?x2720 (* ?x2719 l_0_4_49)))
 (let ((?x2714 (- (* (* (- 2.0) l_0_4_10) l_0_4_19) (* (* 2.0 l_0_4_16) l_0_4_7))))
 (let ((?x2718 (- (- ?x2714 (* (* 2.0 l_0_4_17) l_0_4_8)) (* (* 2.0 l_0_4_18) l_0_4_9))))
 (= (+ (+ (+ (- (- (- ?x2718 ?x2720) ?x2723) ?x2726) ?x2729) ?x2732) ?x2735) 0.0))))))))))))))))
(assert
 (let ((?x2793 (* l_0_4_15 l_0_4_15)))
 (let ((?x2791 (* l_0_4_14 l_0_4_14)))
 (let ((?x2789 (* l_0_4_13 l_0_4_13)))
 (let ((?x2792 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x2789) ?x2791)))
 (let ((?x2798 (- (- (- ?x2792 ?x2793) (* (* 2.0 l_0_4_88) l_0_4_95)) (* (* 2.0 l_0_4_89) l_0_4_96))))
 (= (- ?x2798 (* (* 2.0 l_0_4_90) l_0_4_97)) 0.0)))))))
(assert
 (let ((?x2734 (* 2.0 l_0_4_69)))
 (let ((?x2867 (* ?x2734 l_0_4_76)))
 (let ((?x2731 (* 2.0 l_0_4_68)))
 (let ((?x2865 (* ?x2731 l_0_4_75)))
 (let ((?x2728 (* 2.0 l_0_4_67)))
 (let ((?x2863 (* ?x2728 l_0_4_74)))
 (let ((?x2725 (* 2.0 l_0_4_48)))
 (let ((?x2861 (* ?x2725 l_0_4_55)))
 (let ((?x2722 (* 2.0 l_0_4_47)))
 (let ((?x2859 (* ?x2722 l_0_4_54)))
 (let ((?x2719 (* 2.0 l_0_4_46)))
 (let ((?x2857 (* ?x2719 l_0_4_53)))
 (let ((?x2841 (- (* (* (- 2.0) l_0_4_100) l_0_4_88) (* (* 2.0 l_0_4_101) l_0_4_89))))
 (let ((?x2846 (- (- ?x2841 (* (* 2.0 l_0_4_102) l_0_4_90)) (* (* 2.0 l_0_4_11) l_0_4_16))))
 (let ((?x2850 (- (- ?x2846 (* (* 2.0 l_0_4_12) l_0_4_17)) (* (* 2.0 l_0_4_13) l_0_4_18))))
 (let ((?x2856 (- (- ?x2850 (* (* 2.0 l_0_4_14) l_0_4_19)) (* (* 2.0 l_0_4_15) l_0_4_20))))
 (= (+ (+ (+ (- (- (- ?x2856 ?x2857) ?x2859) ?x2861) ?x2863) ?x2865) ?x2867) 0.0))))))))))))))))))
(assert
 (let ((?x2734 (* 2.0 l_0_4_69)))
 (let ((?x2963 (* ?x2734 l_0_4_81)))
 (let ((?x2731 (* 2.0 l_0_4_68)))
 (let ((?x2961 (* ?x2731 l_0_4_80)))
 (let ((?x2728 (* 2.0 l_0_4_67)))
 (let ((?x2959 (* ?x2728 l_0_4_79)))
 (let ((?x2725 (* 2.0 l_0_4_48)))
 (let ((?x2957 (* ?x2725 l_0_4_60)))
 (let ((?x2722 (* 2.0 l_0_4_47)))
 (let ((?x2955 (* ?x2722 l_0_4_59)))
 (let ((?x2719 (* 2.0 l_0_4_46)))
 (let ((?x2953 (* ?x2719 l_0_4_58)))
 (let ((?x2951 (* l_0_4_21 l_0_4_21)))
 (let ((?x2949 (* l_0_4_20 l_0_4_20)))
 (let ((?x2947 (* l_0_4_19 l_0_4_19)))
 (let ((?x2945 (* l_0_4_18 l_0_4_18)))
 (let ((?x2948 (- (- (- (* (- l_0_4_16) l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x2945) ?x2947)))
 (let ((?x2962 (+ (+ (- (- (- (- (- ?x2948 ?x2949) ?x2951) ?x2953) ?x2955) ?x2957) ?x2959) ?x2961)))
 (= (+ ?x2962 ?x2963) 0.0))))))))))))))))))))
(assert
 (= (- (* (* (- 2.0) l_0_4_106) l_0_4_107) (* l_0_4_22 l_0_4_22)) 0.0))
(assert
 (let ((?x3027 (- (- (* (- l_0_4_107) l_0_4_107) (* l_0_4_108 l_0_4_108)) (* (* 2.0 l_0_4_22) l_0_4_23))))
 (= ?x3027 0.0)))
(assert
 (let ((?x3046 (- (* (* (- 2.0) l_0_4_107) l_0_4_112) (* (* 2.0 l_0_4_108) l_0_4_113))))
 (= (- ?x3046 (* (* 2.0 l_0_4_22) l_0_4_28)) 0.0)))
(assert
 (let ((?x3069 (- (* (* (- 2.0) l_0_4_107) l_0_4_116) (* (* 2.0 l_0_4_108) l_0_4_117))))
 (let ((?x3073 (- (- ?x3069 (* (* 2.0 l_0_4_22) l_0_4_32)) (* (* 2.0 l_0_4_85) l_0_4_86))))
 (= ?x3073 0.0))))
(assert
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x3104 (* ?x1989 l_0_4_65)))
 (let ((?x2126 (* 2.0 l_0_4_43)))
 (let ((?x3102 (* ?x2126 l_0_4_44)))
 (let ((?x3099 (- (* (* (- 2.0) l_0_4_107) l_0_4_121) (* (* 2.0 l_0_4_108) l_0_4_122))))
 (= (+ (- (- ?x3099 (* (* 2.0 l_0_4_22) l_0_4_37)) ?x3102) ?x3104) 0.0)))))))
(assert
 (= (- (* (- l_0_4_23) l_0_4_23) (* l_0_4_24 l_0_4_24)) 0.0))
(assert
 (let ((?x3146 (- (* (* (- 2.0) l_0_4_23) l_0_4_28) (* (* 2.0 l_0_4_24) l_0_4_29))))
 (= ?x3146 0.0)))
(assert
 (let ((?x3164 (* l_0_4_87 l_0_4_87)))
 (let ((?x3162 (* l_0_4_86 l_0_4_86)))
 (let ((?x3161 (- (* (* (- 2.0) l_0_4_23) l_0_4_32) (* (* 2.0 l_0_4_24) l_0_4_33))))
 (= (- (- ?x3161 ?x3162) ?x3164) 0.0)))))
(assert
 (let ((?x3193 (* l_0_4_66 l_0_4_66)))
 (let ((?x3191 (* l_0_4_65 l_0_4_65)))
 (let ((?x3189 (* l_0_4_45 l_0_4_45)))
 (let ((?x3187 (* l_0_4_44 l_0_4_44)))
 (let ((?x3186 (- (* (* (- 2.0) l_0_4_23) l_0_4_37) (* (* 2.0 l_0_4_24) l_0_4_38))))
 (= (+ (+ (- (- ?x3186 ?x3187) ?x3189) ?x3191) ?x3193) 0.0)))))))
(assert
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x3104 (* ?x1989 l_0_4_65)))
 (let ((?x2126 (* 2.0 l_0_4_43)))
 (let ((?x3102 (* ?x2126 l_0_4_44)))
 (let ((?x3221 (* l_0_4_31 l_0_4_31)))
 (let ((?x3219 (* l_0_4_30 l_0_4_30)))
 (let ((?x3222 (- (- (- (* (- l_0_4_28) l_0_4_28) (* l_0_4_29 l_0_4_29)) ?x3219) ?x3221)))
 (= (- (+ ?x3222 ?x3102) ?x3104) 0.0)))))))))
(assert
 (let ((?x3248 (- (* (* (- 2.0) l_0_4_28) l_0_4_32) (* (* 2.0 l_0_4_29) l_0_4_33))))
 (let ((?x3254 (- (- ?x3248 (* (* 2.0 l_0_4_30) l_0_4_34)) (* (* 2.0 l_0_4_31) l_0_4_35))))
 (let ((?x3258 (- (- ?x3254 (* (* 2.0 l_0_4_86) l_0_4_91)) (* (* 2.0 l_0_4_87) l_0_4_92))))
 (= ?x3258 0.0)))))
(assert
 (let ((?x2428 (* 2.0 l_0_4_66)))
 (let ((?x3308 (* ?x2428 l_0_4_71)))
 (let ((?x2425 (* 2.0 l_0_4_65)))
 (let ((?x3306 (* ?x2425 l_0_4_70)))
 (let ((?x2420 (* 2.0 l_0_4_45)))
 (let ((?x3304 (* ?x2420 l_0_4_50)))
 (let ((?x2417 (* 2.0 l_0_4_44)))
 (let ((?x3302 (* ?x2417 l_0_4_49)))
 (let ((?x3297 (- (* (* (- 2.0) l_0_4_28) l_0_4_37) (* (* 2.0 l_0_4_29) l_0_4_38))))
 (let ((?x3301 (- (- ?x3297 (* (* 2.0 l_0_4_30) l_0_4_39)) (* (* 2.0 l_0_4_31) l_0_4_40))))
 (= (+ (+ (- (- ?x3301 ?x3302) ?x3304) ?x3306) ?x3308) 0.0))))))))))))
(assert
 (let ((?x3358 (* l_0_4_36 l_0_4_36)))
 (let ((?x3356 (* l_0_4_35 l_0_4_35)))
 (let ((?x3354 (* l_0_4_34 l_0_4_34)))
 (let ((?x3357 (- (- (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x3354) ?x3356)))
 (let ((?x3363 (- (- (- ?x3357 ?x3358) (* (* 2.0 l_0_4_86) l_0_4_95)) (* (* 2.0 l_0_4_87) l_0_4_96))))
 (= ?x3363 0.0)))))))
(assert
 (let ((?x2428 (* 2.0 l_0_4_66)))
 (let ((?x3418 (* ?x2428 l_0_4_75)))
 (let ((?x2425 (* 2.0 l_0_4_65)))
 (let ((?x3416 (* ?x2425 l_0_4_74)))
 (let ((?x2420 (* 2.0 l_0_4_45)))
 (let ((?x3414 (* ?x2420 l_0_4_54)))
 (let ((?x2417 (* 2.0 l_0_4_44)))
 (let ((?x3412 (* ?x2417 l_0_4_53)))
 (let ((?x3396 (- (* (* (- 2.0) l_0_4_100) l_0_4_86) (* (* 2.0 l_0_4_101) l_0_4_87))))
 (let ((?x3402 (- (- ?x3396 (* (* 2.0 l_0_4_32) l_0_4_37)) (* (* 2.0 l_0_4_33) l_0_4_38))))
 (let ((?x3408 (- (- ?x3402 (* (* 2.0 l_0_4_34) l_0_4_39)) (* (* 2.0 l_0_4_35) l_0_4_40))))
 (let ((?x3417 (+ (- (- (- ?x3408 (* (* 2.0 l_0_4_36) l_0_4_41)) ?x3412) ?x3414) ?x3416)))
 (= (+ ?x3417 ?x3418) 0.0))))))))))))))
(assert
 (let ((?x2428 (* 2.0 l_0_4_66)))
 (let ((?x3496 (* ?x2428 l_0_4_80)))
 (let ((?x2425 (* 2.0 l_0_4_65)))
 (let ((?x3494 (* ?x2425 l_0_4_79)))
 (let ((?x2420 (* 2.0 l_0_4_45)))
 (let ((?x3492 (* ?x2420 l_0_4_59)))
 (let ((?x2417 (* 2.0 l_0_4_44)))
 (let ((?x3490 (* ?x2417 l_0_4_58)))
 (let ((?x3488 (* l_0_4_42 l_0_4_42)))
 (let ((?x3486 (* l_0_4_41 l_0_4_41)))
 (let ((?x3484 (* l_0_4_40 l_0_4_40)))
 (let ((?x3482 (* l_0_4_39 l_0_4_39)))
 (let ((?x3485 (- (- (- (* (- l_0_4_37) l_0_4_37) (* l_0_4_38 l_0_4_38)) ?x3482) ?x3484)))
 (= (+ (+ (- (- (- (- ?x3485 ?x3486) ?x3488) ?x3490) ?x3492) ?x3494) ?x3496) 0.0)))))))))))))))
(assert
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x3548 (* ?x1989 l_0_4_70)))
 (let ((?x2126 (* 2.0 l_0_4_43)))
 (let ((?x3546 (* ?x2126 l_0_4_49)))
 (let ((?x3539 (- (* (* (- 2.0) l_0_4_112) l_0_4_121) (* (* 2.0 l_0_4_113) l_0_4_122))))
 (let ((?x3545 (- (- ?x3539 (* (* 2.0 l_0_4_114) l_0_4_123)) (* (* 2.0 l_0_4_115) l_0_4_124))))
 (= (+ (- ?x3545 ?x3546) ?x3548) 0.0))))))))
(assert
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x3598 (* ?x1989 l_0_4_74)))
 (let ((?x2126 (* 2.0 l_0_4_43)))
 (let ((?x3596 (* ?x2126 l_0_4_53)))
 (let ((?x3583 (- (* (* (- 2.0) l_0_4_100) l_0_4_85) (* (* 2.0 l_0_4_116) l_0_4_121))))
 (let ((?x3589 (- (- ?x3583 (* (* 2.0 l_0_4_117) l_0_4_122)) (* (* 2.0 l_0_4_118) l_0_4_123))))
 (let ((?x3595 (- (- ?x3589 (* (* 2.0 l_0_4_119) l_0_4_124)) (* (* 2.0 l_0_4_120) l_0_4_125))))
 (= (+ (- ?x3595 ?x3596) ?x3598) 0.0)))))))))
(assert
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x3655 (* ?x1989 l_0_4_79)))
 (let ((?x2126 (* 2.0 l_0_4_43)))
 (let ((?x3653 (* ?x2126 l_0_4_58)))
 (let ((?x3651 (* l_0_4_126 l_0_4_126)))
 (let ((?x3649 (* l_0_4_125 l_0_4_125)))
 (let ((?x3647 (* l_0_4_124 l_0_4_124)))
 (let ((?x3645 (* l_0_4_123 l_0_4_123)))
 (let ((?x3646 (- (- (* (- l_0_4_121) l_0_4_121) (* l_0_4_122 l_0_4_122)) ?x3645)))
 (= (+ (- (- (- (- ?x3646 ?x3647) ?x3649) ?x3651) ?x3653) ?x3655) 0.0)))))))))))
(assert
 (let ((?x3699 (* l_0_4_73 l_0_4_73)))
 (let ((?x3697 (* l_0_4_72 l_0_4_72)))
 (let ((?x3695 (* l_0_4_71 l_0_4_71)))
 (let ((?x3693 (* l_0_4_70 l_0_4_70)))
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x3655 (* ?x1989 l_0_4_79)))
 (let ((?x3690 (* l_0_4_52 l_0_4_52)))
 (let ((?x3688 (* l_0_4_51 l_0_4_51)))
 (let ((?x3686 (* l_0_4_50 l_0_4_50)))
 (let ((?x3687 (- (- (* (* 2.0 l_0_4_43) l_0_4_58) (* l_0_4_49 l_0_4_49)) ?x3686)))
 (let ((?x3700 (+ (+ (+ (+ (- (- (- ?x3687 ?x3688) ?x3690) ?x3655) ?x3693) ?x3695) ?x3697) ?x3699)))
 (= ?x3700 0.0)))))))))))))
(assert
 (let ((?x3748 (* 2.0 l_0_4_73)))
 (let ((?x3749 (* ?x3748 l_0_4_77)))
 (let ((?x3745 (* 2.0 l_0_4_72)))
 (let ((?x3746 (* ?x3745 l_0_4_76)))
 (let ((?x3742 (* 2.0 l_0_4_71)))
 (let ((?x3743 (* ?x3742 l_0_4_75)))
 (let ((?x3739 (* 2.0 l_0_4_70)))
 (let ((?x3740 (* ?x3739 l_0_4_74)))
 (let ((?x3736 (* 2.0 l_0_4_52)))
 (let ((?x3737 (* ?x3736 l_0_4_56)))
 (let ((?x3733 (* 2.0 l_0_4_51)))
 (let ((?x3734 (* ?x3733 l_0_4_55)))
 (let ((?x3730 (* 2.0 l_0_4_50)))
 (let ((?x3731 (* ?x3730 l_0_4_54)))
 (let ((?x3727 (* 2.0 l_0_4_49)))
 (let ((?x3728 (* ?x3727 l_0_4_53)))
 (let ((?x3721 (- (* (* (- 2.0) l_0_4_100) l_0_4_91) (* (* 2.0 l_0_4_101) l_0_4_92))))
 (let ((?x3726 (- (- ?x3721 (* (* 2.0 l_0_4_102) l_0_4_93)) (* (* 2.0 l_0_4_103) l_0_4_94))))
 (let ((?x3747 (+ (+ (+ (- (- (- (- ?x3726 ?x3728) ?x3731) ?x3734) ?x3737) ?x3740) ?x3743) ?x3746)))
 (= (+ ?x3747 ?x3749) 0.0)))))))))))))))))))))
(assert
 (let ((?x3748 (* 2.0 l_0_4_73)))
 (let ((?x3821 (* ?x3748 l_0_4_82)))
 (let ((?x3745 (* 2.0 l_0_4_72)))
 (let ((?x3819 (* ?x3745 l_0_4_81)))
 (let ((?x3742 (* 2.0 l_0_4_71)))
 (let ((?x3817 (* ?x3742 l_0_4_80)))
 (let ((?x3739 (* 2.0 l_0_4_70)))
 (let ((?x3815 (* ?x3739 l_0_4_79)))
 (let ((?x3736 (* 2.0 l_0_4_52)))
 (let ((?x3813 (* ?x3736 l_0_4_61)))
 (let ((?x3733 (* 2.0 l_0_4_51)))
 (let ((?x3804 (* ?x3733 l_0_4_60)))
 (let ((?x3730 (* 2.0 l_0_4_50)))
 (let ((?x3801 (* ?x3730 l_0_4_59)))
 (let ((?x3816 (+ (- (- (- (* (* (- 2.0) l_0_4_49) l_0_4_58) ?x3801) ?x3804) ?x3813) ?x3815)))
 (= (+ (+ (+ ?x3816 ?x3817) ?x3819) ?x3821) 0.0)))))))))))))))))
(assert
 (let ((?x3883 (* l_0_4_78 l_0_4_78)))
 (let ((?x3881 (* l_0_4_77 l_0_4_77)))
 (let ((?x3879 (* l_0_4_76 l_0_4_76)))
 (let ((?x3877 (* l_0_4_75 l_0_4_75)))
 (let ((?x3875 (* l_0_4_74 l_0_4_74)))
 (let ((?x3873 (* l_0_4_57 l_0_4_57)))
 (let ((?x3871 (* l_0_4_56 l_0_4_56)))
 (let ((?x3869 (* l_0_4_55 l_0_4_55)))
 (let ((?x3867 (* l_0_4_54 l_0_4_54)))
 (let ((?x3865 (* l_0_4_53 l_0_4_53)))
 (let ((?x3849 (- (* (* (- 2.0) l_0_4_100) l_0_4_95) (* (* 2.0 l_0_4_101) l_0_4_96))))
 (let ((?x3861 (- (- ?x3849 (* (* 2.0 l_0_4_102) l_0_4_97)) (* (* 2.0 l_0_4_103) l_0_4_98))))
 (let ((?x3870 (- (- (- (- ?x3861 (* (* 2.0 l_0_4_104) l_0_4_99)) ?x3865) ?x3867) ?x3869)))
 (let ((?x3884 (+ (+ (+ (+ (+ (- (- ?x3870 ?x3871) ?x3873) ?x3875) ?x3877) ?x3879) ?x3881) ?x3883)))
 (= ?x3884 0.0))))))))))))))))
(assert
 (let ((?x3974 (* 2.0 l_0_4_78)))
 (let ((?x3975 (* ?x3974 l_0_4_83)))
 (let ((?x3971 (* 2.0 l_0_4_77)))
 (let ((?x3972 (* ?x3971 l_0_4_82)))
 (let ((?x3968 (* 2.0 l_0_4_76)))
 (let ((?x3969 (* ?x3968 l_0_4_81)))
 (let ((?x3965 (* 2.0 l_0_4_75)))
 (let ((?x3966 (* ?x3965 l_0_4_80)))
 (let ((?x3962 (* 2.0 l_0_4_74)))
 (let ((?x3963 (* ?x3962 l_0_4_79)))
 (let ((?x3960 (* (* 2.0 l_0_4_57) l_0_4_62)))
 (let ((?x3957 (* (* 2.0 l_0_4_56) l_0_4_61)))
 (let ((?x3954 (* (* 2.0 l_0_4_55) l_0_4_60)))
 (let ((?x3951 (* (* 2.0 l_0_4_54) l_0_4_59)))
 (let ((?x3948 (* (* 2.0 l_0_4_53) l_0_4_58)))
 (let ((?x3945 (* l_0_4_105 l_0_4_105)))
 (let ((?x3943 (* l_0_4_104 l_0_4_104)))
 (let ((?x3941 (* l_0_4_103 l_0_4_103)))
 (let ((?x3939 (* l_0_4_102 l_0_4_102)))
 (let ((?x3940 (- (- (* (- l_0_4_100) l_0_4_100) (* l_0_4_101 l_0_4_101)) ?x3939)))
 (let ((?x3958 (- (- (- (- (- (- (- ?x3940 ?x3941) ?x3943) ?x3945) ?x3948) ?x3951) ?x3954) ?x3957)))
 (= (+ (+ (+ (+ (+ (- ?x3958 ?x3960) ?x3963) ?x3966) ?x3969) ?x3972) ?x3975) 0.0)))))))))))))))))))))))
(assert
 (let ((?x4060 (* l_0_4_84 l_0_4_84)))
 (let ((?x4058 (* l_0_4_83 l_0_4_83)))
 (let ((?x4056 (* l_0_4_82 l_0_4_82)))
 (let ((?x4054 (* l_0_4_81 l_0_4_81)))
 (let ((?x4052 (* l_0_4_80 l_0_4_80)))
 (let ((?x4050 (* l_0_4_79 l_0_4_79)))
 (let ((?x4048 (* l_0_4_63 l_0_4_63)))
 (let ((?x4046 (* l_0_4_62 l_0_4_62)))
 (let ((?x4044 (* l_0_4_61 l_0_4_61)))
 (let ((?x4035 (* l_0_4_60 l_0_4_60)))
 (let ((?x4045 (- (- (- (* (- l_0_4_58) l_0_4_58) (* l_0_4_59 l_0_4_59)) ?x4035) ?x4044)))
 (let ((?x4059 (+ (+ (+ (+ (+ (- (- ?x4045 ?x4046) ?x4048) ?x4050) ?x4052) ?x4054) ?x4056) ?x4058)))
 (= (+ ?x4059 ?x4060) 0.0))))))))))))))
(assert
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x3548 (* ?x1989 l_0_4_70)))
 (let ((?x2126 (* 2.0 l_0_4_43)))
 (let ((?x3546 (* ?x2126 l_0_4_49)))
 (= (- ?x3546 ?x3548) 0.0))))))
(assert
 (let ((?x4103 (* l_0_4_94 l_0_4_94)))
 (let ((?x4101 (* l_0_4_93 l_0_4_93)))
 (let ((?x4099 (* l_0_4_92 l_0_4_92)))
 (let ((?x4097 (* l_0_4_91 l_0_4_91)))
 (let ((?x1989 (* 2.0 l_0_4_64)))
 (let ((?x3598 (* ?x1989 l_0_4_74)))
 (let ((?x2126 (* 2.0 l_0_4_43)))
 (let ((?x3596 (* ?x2126 l_0_4_53)))
 (= (- (- (- (- (- ?x3596 ?x3598) ?x4097) ?x4099) ?x4101) ?x4103) 0.0))))))))))
(assert
 (let ((?x3193 (* l_0_4_66 l_0_4_66)))
 (let ((?x3191 (* l_0_4_65 l_0_4_65)))
 (let ((?x4125 (- (- (+ (* l_0_4_44 l_0_4_44) (* l_0_4_45 l_0_4_45)) ?x3191) ?x3193)))
 (= ?x4125 0.0)))))
(assert
 (let ((?x4103 (* l_0_4_94 l_0_4_94)))
 (let ((?x4157 (* 2.0 ?x4103)))
 (let ((?x4101 (* l_0_4_93 l_0_4_93)))
 (let ((?x4155 (* 2.0 ?x4101)))
 (let ((?x4099 (* l_0_4_92 l_0_4_92)))
 (let ((?x4153 (* 2.0 ?x4099)))
 (let ((?x4097 (* l_0_4_91 l_0_4_91)))
 (let ((?x4151 (* 2.0 ?x4097)))
 (let ((?x2428 (* 2.0 l_0_4_66)))
 (let ((?x2429 (* ?x2428 l_0_4_68)))
 (let ((?x2425 (* 2.0 l_0_4_65)))
 (let ((?x2426 (* ?x2425 l_0_4_67)))
 (let ((?x3690 (* l_0_4_52 l_0_4_52)))
 (let ((?x4139 (* 2.0 ?x3690)))
 (let ((?x3688 (* l_0_4_51 l_0_4_51)))
 (let ((?x4137 (* 2.0 ?x3688)))
 (let ((?x3686 (* l_0_4_50 l_0_4_50)))
 (let ((?x4135 (* 2.0 ?x3686)))
 (let ((?x3681 (* l_0_4_49 l_0_4_49)))
 (let ((?x4133 (* 2.0 ?x3681)))
 (let ((?x2420 (* 2.0 l_0_4_45)))
 (let ((?x2421 (* ?x2420 l_0_4_47)))
 (let ((?x2417 (* 2.0 l_0_4_44)))
 (let ((?x2418 (* ?x2417 l_0_4_46)))
 (let ((?x4142 (- (- (+ (+ (+ (+ (+ ?x2418 ?x2421) ?x4133) ?x4135) ?x4137) ?x4139) ?x2426) ?x2429)))
 (let ((?x4146 (- (- ?x4142 (* (* 2.0 l_0_4_70) l_0_4_70)) (* (* 2.0 l_0_4_71) l_0_4_71))))
 (let ((?x4150 (- (- ?x4146 (* (* 2.0 l_0_4_72) l_0_4_72)) (* (* 2.0 l_0_4_73) l_0_4_73))))
 (= (+ (+ (+ (+ ?x4150 ?x4151) ?x4153) ?x4155) ?x4157) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x2428 (* 2.0 l_0_4_66)))
 (let ((?x3308 (* ?x2428 l_0_4_71)))
 (let ((?x2425 (* 2.0 l_0_4_65)))
 (let ((?x3306 (* ?x2425 l_0_4_70)))
 (let ((?x2420 (* 2.0 l_0_4_45)))
 (let ((?x3304 (* ?x2420 l_0_4_50)))
 (let ((?x2417 (* 2.0 l_0_4_44)))
 (let ((?x3302 (* ?x2417 l_0_4_49)))
 (= (- (- (+ ?x3302 ?x3304) ?x3306) ?x3308) 0.0))))))))))
(assert
 (let ((?x2428 (* 2.0 l_0_4_66)))
 (let ((?x3418 (* ?x2428 l_0_4_75)))
 (let ((?x2425 (* 2.0 l_0_4_65)))
 (let ((?x3416 (* ?x2425 l_0_4_74)))
 (let ((?x2420 (* 2.0 l_0_4_45)))
 (let ((?x3414 (* ?x2420 l_0_4_54)))
 (let ((?x2417 (* 2.0 l_0_4_44)))
 (let ((?x3412 (* ?x2417 l_0_4_53)))
 (= (- (- (+ ?x3412 ?x3414) ?x3416) ?x3418) 0.0))))))))))
(assert
 (let ((?x2428 (* 2.0 l_0_4_66)))
 (let ((?x3496 (* ?x2428 l_0_4_80)))
 (let ((?x2425 (* 2.0 l_0_4_65)))
 (let ((?x3494 (* ?x2425 l_0_4_79)))
 (let ((?x2420 (* 2.0 l_0_4_45)))
 (let ((?x3492 (* ?x2420 l_0_4_59)))
 (let ((?x2417 (* 2.0 l_0_4_44)))
 (let ((?x3490 (* ?x2417 l_0_4_58)))
 (= (- (- (+ ?x3490 ?x3492) ?x3494) ?x3496) 0.0))))))))))
(assert
 (let ((?x2591 (* l_0_4_69 l_0_4_69)))
 (let ((?x2589 (* l_0_4_68 l_0_4_68)))
 (let ((?x2587 (* l_0_4_67 l_0_4_67)))
 (let ((?x2585 (* l_0_4_48 l_0_4_48)))
 (let ((?x4235 (- (+ (+ (* l_0_4_46 l_0_4_46) (* l_0_4_47 l_0_4_47)) ?x2585) ?x2587)))
 (= (- (- ?x4235 ?x2589) ?x2591) 0.0)))))))
(assert
 (let ((?x2734 (* 2.0 l_0_4_69)))
 (let ((?x2735 (* ?x2734 l_0_4_72)))
 (let ((?x2731 (* 2.0 l_0_4_68)))
 (let ((?x2732 (* ?x2731 l_0_4_71)))
 (let ((?x2728 (* 2.0 l_0_4_67)))
 (let ((?x2729 (* ?x2728 l_0_4_70)))
 (let ((?x2725 (* 2.0 l_0_4_48)))
 (let ((?x2726 (* ?x2725 l_0_4_51)))
 (let ((?x2722 (* 2.0 l_0_4_47)))
 (let ((?x2723 (* ?x2722 l_0_4_50)))
 (let ((?x2719 (* 2.0 l_0_4_46)))
 (let ((?x2720 (* ?x2719 l_0_4_49)))
 (= (- (- (- (+ (+ ?x2720 ?x2723) ?x2726) ?x2729) ?x2732) ?x2735) 0.0))))))))))))))
(assert
 (let ((?x2734 (* 2.0 l_0_4_69)))
 (let ((?x2867 (* ?x2734 l_0_4_76)))
 (let ((?x2731 (* 2.0 l_0_4_68)))
 (let ((?x2865 (* ?x2731 l_0_4_75)))
 (let ((?x2728 (* 2.0 l_0_4_67)))
 (let ((?x2863 (* ?x2728 l_0_4_74)))
 (let ((?x2725 (* 2.0 l_0_4_48)))
 (let ((?x2861 (* ?x2725 l_0_4_55)))
 (let ((?x2722 (* 2.0 l_0_4_47)))
 (let ((?x2859 (* ?x2722 l_0_4_54)))
 (let ((?x2719 (* 2.0 l_0_4_46)))
 (let ((?x2857 (* ?x2719 l_0_4_53)))
 (= (- (- (- (+ (+ ?x2857 ?x2859) ?x2861) ?x2863) ?x2865) ?x2867) 0.0))))))))))))))
(assert
 (let ((?x2734 (* 2.0 l_0_4_69)))
 (let ((?x2963 (* ?x2734 l_0_4_81)))
 (let ((?x2731 (* 2.0 l_0_4_68)))
 (let ((?x2961 (* ?x2731 l_0_4_80)))
 (let ((?x2728 (* 2.0 l_0_4_67)))
 (let ((?x2959 (* ?x2728 l_0_4_79)))
 (let ((?x2725 (* 2.0 l_0_4_48)))
 (let ((?x2957 (* ?x2725 l_0_4_60)))
 (let ((?x2722 (* 2.0 l_0_4_47)))
 (let ((?x2955 (* ?x2722 l_0_4_59)))
 (let ((?x2719 (* 2.0 l_0_4_46)))
 (let ((?x2953 (* ?x2719 l_0_4_58)))
 (= (- (- (- (+ (+ ?x2953 ?x2955) ?x2957) ?x2959) ?x2961) ?x2963) 0.0))))))))))))))
(assert
 (let ((?x3699 (* l_0_4_73 l_0_4_73)))
 (let ((?x3697 (* l_0_4_72 l_0_4_72)))
 (let ((?x3695 (* l_0_4_71 l_0_4_71)))
 (let ((?x3693 (* l_0_4_70 l_0_4_70)))
 (let ((?x3690 (* l_0_4_52 l_0_4_52)))
 (let ((?x3688 (* l_0_4_51 l_0_4_51)))
 (let ((?x4309 (+ (+ (+ (* l_0_4_49 l_0_4_49) (* l_0_4_50 l_0_4_50)) ?x3688) ?x3690)))
 (= (- (- (- (- ?x4309 ?x3693) ?x3695) ?x3697) ?x3699) 0.0)))))))))
(assert
 (let ((?x3748 (* 2.0 l_0_4_73)))
 (let ((?x3749 (* ?x3748 l_0_4_77)))
 (let ((?x3745 (* 2.0 l_0_4_72)))
 (let ((?x3746 (* ?x3745 l_0_4_76)))
 (let ((?x3742 (* 2.0 l_0_4_71)))
 (let ((?x3743 (* ?x3742 l_0_4_75)))
 (let ((?x3739 (* 2.0 l_0_4_70)))
 (let ((?x3740 (* ?x3739 l_0_4_74)))
 (let ((?x3736 (* 2.0 l_0_4_52)))
 (let ((?x3737 (* ?x3736 l_0_4_56)))
 (let ((?x3733 (* 2.0 l_0_4_51)))
 (let ((?x3734 (* ?x3733 l_0_4_55)))
 (let ((?x3730 (* 2.0 l_0_4_50)))
 (let ((?x3731 (* ?x3730 l_0_4_54)))
 (let ((?x3727 (* 2.0 l_0_4_49)))
 (let ((?x3728 (* ?x3727 l_0_4_53)))
 (let ((?x4335 (- (- (- (- (+ (+ (+ ?x3728 ?x3731) ?x3734) ?x3737) ?x3740) ?x3743) ?x3746) ?x3749)))
 (= ?x4335 0.0)))))))))))))))))))
(assert
 (let ((?x3748 (* 2.0 l_0_4_73)))
 (let ((?x3821 (* ?x3748 l_0_4_82)))
 (let ((?x3745 (* 2.0 l_0_4_72)))
 (let ((?x3819 (* ?x3745 l_0_4_81)))
 (let ((?x3742 (* 2.0 l_0_4_71)))
 (let ((?x3817 (* ?x3742 l_0_4_80)))
 (let ((?x3739 (* 2.0 l_0_4_70)))
 (let ((?x3815 (* ?x3739 l_0_4_79)))
 (let ((?x3736 (* 2.0 l_0_4_52)))
 (let ((?x3813 (* ?x3736 l_0_4_61)))
 (let ((?x3733 (* 2.0 l_0_4_51)))
 (let ((?x3804 (* ?x3733 l_0_4_60)))
 (let ((?x3730 (* 2.0 l_0_4_50)))
 (let ((?x3801 (* ?x3730 l_0_4_59)))
 (let ((?x4359 (- (+ (+ (+ (* (* 2.0 l_0_4_49) l_0_4_58) ?x3801) ?x3804) ?x3813) ?x3815)))
 (= (- (- (- ?x4359 ?x3817) ?x3819) ?x3821) 0.0)))))))))))))))))
(assert
 (let ((?x3883 (* l_0_4_78 l_0_4_78)))
 (let ((?x3881 (* l_0_4_77 l_0_4_77)))
 (let ((?x3879 (* l_0_4_76 l_0_4_76)))
 (let ((?x3877 (* l_0_4_75 l_0_4_75)))
 (let ((?x3875 (* l_0_4_74 l_0_4_74)))
 (let ((?x3873 (* l_0_4_57 l_0_4_57)))
 (let ((?x3871 (* l_0_4_56 l_0_4_56)))
 (let ((?x3869 (* l_0_4_55 l_0_4_55)))
 (let ((?x4382 (+ (+ (+ (* l_0_4_53 l_0_4_53) (* l_0_4_54 l_0_4_54)) ?x3869) ?x3871)))
 (= (- (- (- (- (- (+ ?x4382 ?x3873) ?x3875) ?x3877) ?x3879) ?x3881) ?x3883) 0.0)))))))))))
(assert
 (let ((?x3974 (* 2.0 l_0_4_78)))
 (let ((?x3975 (* ?x3974 l_0_4_83)))
 (let ((?x3971 (* 2.0 l_0_4_77)))
 (let ((?x3972 (* ?x3971 l_0_4_82)))
 (let ((?x3968 (* 2.0 l_0_4_76)))
 (let ((?x3969 (* ?x3968 l_0_4_81)))
 (let ((?x3965 (* 2.0 l_0_4_75)))
 (let ((?x3966 (* ?x3965 l_0_4_80)))
 (let ((?x3962 (* 2.0 l_0_4_74)))
 (let ((?x3963 (* ?x3962 l_0_4_79)))
 (let ((?x3960 (* (* 2.0 l_0_4_57) l_0_4_62)))
 (let ((?x3957 (* (* 2.0 l_0_4_56) l_0_4_61)))
 (let ((?x3954 (* (* 2.0 l_0_4_55) l_0_4_60)))
 (let ((?x3951 (* (* 2.0 l_0_4_54) l_0_4_59)))
 (let ((?x3948 (* (* 2.0 l_0_4_53) l_0_4_58)))
 (let ((?x4408 (- (- (- (+ (+ (+ (+ ?x3948 ?x3951) ?x3954) ?x3957) ?x3960) ?x3963) ?x3966) ?x3969)))
 (= (- (- ?x4408 ?x3972) ?x3975) 0.0))))))))))))))))))
(assert
 (let ((?x4060 (* l_0_4_84 l_0_4_84)))
 (let ((?x4058 (* l_0_4_83 l_0_4_83)))
 (let ((?x4056 (* l_0_4_82 l_0_4_82)))
 (let ((?x4054 (* l_0_4_81 l_0_4_81)))
 (let ((?x4052 (* l_0_4_80 l_0_4_80)))
 (let ((?x4050 (* l_0_4_79 l_0_4_79)))
 (let ((?x4048 (* l_0_4_63 l_0_4_63)))
 (let ((?x4046 (* l_0_4_62 l_0_4_62)))
 (let ((?x4044 (* l_0_4_61 l_0_4_61)))
 (let ((?x4035 (* l_0_4_60 l_0_4_60)))
 (let ((?x4436 (+ (+ (+ (* l_0_4_58 l_0_4_58) (* l_0_4_59 l_0_4_59)) ?x4035) ?x4044)))
 (let ((?x4443 (- (- (- (- (- (+ (+ ?x4436 ?x4046) ?x4048) ?x4050) ?x4052) ?x4054) ?x4056) ?x4058)))
 (= (- ?x4443 ?x4060) 0.0))))))))))))))
(assert
 (let ((?x3164 (* l_0_4_87 l_0_4_87)))
 (let ((?x4467 (* 2.0 ?x3164)))
 (let ((?x3162 (* l_0_4_86 l_0_4_86)))
 (let ((?x4465 (* 2.0 ?x3162)))
 (let ((?x3189 (* l_0_4_45 l_0_4_45)))
 (let ((?x4459 (* 2.0 ?x3189)))
 (let ((?x3187 (* l_0_4_44 l_0_4_44)))
 (let ((?x4458 (* 2.0 ?x3187)))
 (let ((?x4464 (- (- (+ ?x4458 ?x4459) (* (* 2.0 l_0_4_65) l_0_4_65)) (* (* 2.0 l_0_4_66) l_0_4_66))))
 (= (+ (+ ?x4464 ?x4465) ?x4467) 0.0)))))))))))
(assert
 (let ((?x4486 (+ (* (* 4.0 l_0_4_44) l_0_4_46) (* (* 4.0 l_0_4_45) l_0_4_47))))
 (let ((?x4492 (- (- ?x4486 (* (* 4.0 l_0_4_65) l_0_4_67)) (* (* 4.0 l_0_4_66) l_0_4_68))))
 (let ((?x4498 (+ (+ ?x4492 (* (* 4.0 l_0_4_86) l_0_4_88)) (* (* 4.0 l_0_4_87) l_0_4_89))))
 (= ?x4498 0.0)))))
(assert
 (let ((?x4519 (+ (* (* 4.0 l_0_4_44) l_0_4_49) (* (* 4.0 l_0_4_45) l_0_4_50))))
 (let ((?x4523 (- (- ?x4519 (* (* 4.0 l_0_4_65) l_0_4_70)) (* (* 4.0 l_0_4_66) l_0_4_71))))
 (let ((?x4527 (+ (+ ?x4523 (* (* 4.0 l_0_4_86) l_0_4_91)) (* (* 4.0 l_0_4_87) l_0_4_92))))
 (= ?x4527 0.0)))))
(assert
 (let ((?x4548 (+ (* (* 4.0 l_0_4_44) l_0_4_53) (* (* 4.0 l_0_4_45) l_0_4_54))))
 (let ((?x4552 (- (- ?x4548 (* (* 4.0 l_0_4_65) l_0_4_74)) (* (* 4.0 l_0_4_66) l_0_4_75))))
 (let ((?x4556 (+ (+ ?x4552 (* (* 4.0 l_0_4_86) l_0_4_95)) (* (* 4.0 l_0_4_87) l_0_4_96))))
 (= ?x4556 0.0)))))
(assert
 (let ((?x4578 (+ (* (* 4.0 l_0_4_100) l_0_4_86) (* (* 4.0 l_0_4_101) l_0_4_87))))
 (let ((?x4582 (+ (+ ?x4578 (* (* 4.0 l_0_4_44) l_0_4_58)) (* (* 4.0 l_0_4_45) l_0_4_59))))
 (let ((?x4586 (- (- ?x4582 (* (* 4.0 l_0_4_65) l_0_4_79)) (* (* 4.0 l_0_4_66) l_0_4_80))))
 (= ?x4586 0.0)))))
(assert
 (let ((?x2545 (* l_0_4_90 l_0_4_90)))
 (let ((?x4619 (* 2.0 ?x2545)))
 (let ((?x2543 (* l_0_4_89 l_0_4_89)))
 (let ((?x4617 (* 2.0 ?x2543)))
 (let ((?x2541 (* l_0_4_88 l_0_4_88)))
 (let ((?x4615 (* 2.0 ?x2541)))
 (let ((?x2585 (* l_0_4_48 l_0_4_48)))
 (let ((?x4607 (* 2.0 ?x2585)))
 (let ((?x2583 (* l_0_4_47 l_0_4_47)))
 (let ((?x4605 (* 2.0 ?x2583)))
 (let ((?x2581 (* l_0_4_46 l_0_4_46)))
 (let ((?x4604 (* 2.0 ?x2581)))
 (let ((?x4612 (- (- (+ (+ ?x4604 ?x4605) ?x4607) (* (* 2.0 l_0_4_67) l_0_4_67)) (* (* 2.0 l_0_4_68) l_0_4_68))))
 (let ((?x4620 (+ (+ (+ (- ?x4612 (* (* 2.0 l_0_4_69) l_0_4_69)) ?x4615) ?x4617) ?x4619)))
 (= ?x4620 0.0))))))))))))))))
(assert
 (let ((?x4644 (+ (* (* 4.0 l_0_4_46) l_0_4_49) (* (* 4.0 l_0_4_47) l_0_4_50))))
 (let ((?x4650 (- (+ ?x4644 (* (* 4.0 l_0_4_48) l_0_4_51)) (* (* 4.0 l_0_4_67) l_0_4_70))))
 (let ((?x4656 (- (- ?x4650 (* (* 4.0 l_0_4_68) l_0_4_71)) (* (* 4.0 l_0_4_69) l_0_4_72))))
 (let ((?x4662 (+ (+ ?x4656 (* (* 4.0 l_0_4_88) l_0_4_91)) (* (* 4.0 l_0_4_89) l_0_4_92))))
 (= (+ ?x4662 (* (* 4.0 l_0_4_90) l_0_4_93)) 0.0))))))
(assert
 (let ((?x4693 (+ (* (* 4.0 l_0_4_46) l_0_4_53) (* (* 4.0 l_0_4_47) l_0_4_54))))
 (let ((?x4697 (- (+ ?x4693 (* (* 4.0 l_0_4_48) l_0_4_55)) (* (* 4.0 l_0_4_67) l_0_4_74))))
 (let ((?x4701 (- (- ?x4697 (* (* 4.0 l_0_4_68) l_0_4_75)) (* (* 4.0 l_0_4_69) l_0_4_76))))
 (let ((?x4705 (+ (+ ?x4701 (* (* 4.0 l_0_4_88) l_0_4_95)) (* (* 4.0 l_0_4_89) l_0_4_96))))
 (= (+ ?x4705 (* (* 4.0 l_0_4_90) l_0_4_97)) 0.0))))))
(assert
 (let ((?x4735 (+ (* (* 4.0 l_0_4_100) l_0_4_88) (* (* 4.0 l_0_4_101) l_0_4_89))))
 (let ((?x4740 (+ (+ ?x4735 (* (* 4.0 l_0_4_102) l_0_4_90)) (* (* 4.0 l_0_4_46) l_0_4_58))))
 (let ((?x4744 (+ (+ ?x4740 (* (* 4.0 l_0_4_47) l_0_4_59)) (* (* 4.0 l_0_4_48) l_0_4_60))))
 (let ((?x4748 (- (- ?x4744 (* (* 4.0 l_0_4_67) l_0_4_79)) (* (* 4.0 l_0_4_68) l_0_4_80))))
 (= (- ?x4748 (* (* 4.0 l_0_4_69) l_0_4_81)) 0.0))))))
(assert
 (let ((?x4779 (+ (* (* 4.0 l_0_4_49) l_0_4_53) (* (* 4.0 l_0_4_50) l_0_4_54))))
 (let ((?x4785 (+ (+ ?x4779 (* (* 4.0 l_0_4_51) l_0_4_55)) (* (* 4.0 l_0_4_52) l_0_4_56))))
 (let ((?x4791 (- (- ?x4785 (* (* 4.0 l_0_4_70) l_0_4_74)) (* (* 4.0 l_0_4_71) l_0_4_75))))
 (let ((?x4797 (- (- ?x4791 (* (* 4.0 l_0_4_72) l_0_4_76)) (* (* 4.0 l_0_4_73) l_0_4_77))))
 (let ((?x4803 (+ (+ ?x4797 (* (* 4.0 l_0_4_91) l_0_4_95)) (* (* 4.0 l_0_4_92) l_0_4_96))))
 (let ((?x4809 (+ (+ ?x4803 (* (* 4.0 l_0_4_93) l_0_4_97)) (* (* 4.0 l_0_4_94) l_0_4_98))))
 (= ?x4809 0.0))))))))
(assert
 (let ((?x4848 (+ (* (* 4.0 l_0_4_100) l_0_4_91) (* (* 4.0 l_0_4_101) l_0_4_92))))
 (let ((?x4853 (+ (+ ?x4848 (* (* 4.0 l_0_4_102) l_0_4_93)) (* (* 4.0 l_0_4_103) l_0_4_94))))
 (let ((?x4857 (+ (+ ?x4853 (* (* 4.0 l_0_4_49) l_0_4_58)) (* (* 4.0 l_0_4_50) l_0_4_59))))
 (let ((?x4861 (+ (+ ?x4857 (* (* 4.0 l_0_4_51) l_0_4_60)) (* (* 4.0 l_0_4_52) l_0_4_61))))
 (let ((?x4865 (- (- ?x4861 (* (* 4.0 l_0_4_70) l_0_4_79)) (* (* 4.0 l_0_4_71) l_0_4_80))))
 (let ((?x4869 (- (- ?x4865 (* (* 4.0 l_0_4_72) l_0_4_81)) (* (* 4.0 l_0_4_73) l_0_4_82))))
 (= ?x4869 0.0))))))))
(assert
 (let ((?x4932 (* l_0_4_99 l_0_4_99)))
 (let ((?x4933 (* 2.0 ?x4932)))
 (let ((?x4929 (* l_0_4_98 l_0_4_98)))
 (let ((?x4930 (* 2.0 ?x4929)))
 (let ((?x4926 (* l_0_4_97 l_0_4_97)))
 (let ((?x4927 (* 2.0 ?x4926)))
 (let ((?x4923 (* l_0_4_96 l_0_4_96)))
 (let ((?x4924 (* 2.0 ?x4923)))
 (let ((?x4920 (* l_0_4_95 l_0_4_95)))
 (let ((?x4921 (* 2.0 ?x4920)))
 (let ((?x3873 (* l_0_4_57 l_0_4_57)))
 (let ((?x4908 (* 2.0 ?x3873)))
 (let ((?x3871 (* l_0_4_56 l_0_4_56)))
 (let ((?x4906 (* 2.0 ?x3871)))
 (let ((?x3869 (* l_0_4_55 l_0_4_55)))
 (let ((?x4904 (* 2.0 ?x3869)))
 (let ((?x3867 (* l_0_4_54 l_0_4_54)))
 (let ((?x4902 (* 2.0 ?x3867)))
 (let ((?x3865 (* l_0_4_53 l_0_4_53)))
 (let ((?x4901 (* 2.0 ?x3865)))
 (let ((?x4911 (- (+ (+ (+ (+ ?x4901 ?x4902) ?x4904) ?x4906) ?x4908) (* (* 2.0 l_0_4_74) l_0_4_74))))
 (let ((?x4915 (- (- ?x4911 (* (* 2.0 l_0_4_75) l_0_4_75)) (* (* 2.0 l_0_4_76) l_0_4_76))))
 (let ((?x4919 (- (- ?x4915 (* (* 2.0 l_0_4_77) l_0_4_77)) (* (* 2.0 l_0_4_78) l_0_4_78))))
 (= (+ (+ (+ (+ (+ ?x4919 ?x4921) ?x4924) ?x4927) ?x4930) ?x4933) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x4966 (+ (* (* 4.0 l_0_4_100) l_0_4_95) (* (* 4.0 l_0_4_101) l_0_4_96))))
 (let ((?x4970 (+ (+ ?x4966 (* (* 4.0 l_0_4_102) l_0_4_97)) (* (* 4.0 l_0_4_103) l_0_4_98))))
 (let ((?x4976 (+ (+ ?x4970 (* (* 4.0 l_0_4_104) l_0_4_99)) (* (* 4.0 l_0_4_53) l_0_4_58))))
 (let ((?x4982 (+ (+ ?x4976 (* (* 4.0 l_0_4_54) l_0_4_59)) (* (* 4.0 l_0_4_55) l_0_4_60))))
 (let ((?x4988 (+ (+ ?x4982 (* (* 4.0 l_0_4_56) l_0_4_61)) (* (* 4.0 l_0_4_57) l_0_4_62))))
 (let ((?x4994 (- (- ?x4988 (* (* 4.0 l_0_4_74) l_0_4_79)) (* (* 4.0 l_0_4_75) l_0_4_80))))
 (let ((?x5000 (- (- ?x4994 (* (* 4.0 l_0_4_76) l_0_4_81)) (* (* 4.0 l_0_4_77) l_0_4_82))))
 (= (- ?x5000 (* (* 4.0 l_0_4_78) l_0_4_83)) 0.0)))))))))
(assert
 (let ((?x4048 (* l_0_4_63 l_0_4_63)))
 (let ((?x5063 (* 2.0 ?x4048)))
 (let ((?x4046 (* l_0_4_62 l_0_4_62)))
 (let ((?x5061 (* 2.0 ?x4046)))
 (let ((?x4044 (* l_0_4_61 l_0_4_61)))
 (let ((?x5059 (* 2.0 ?x4044)))
 (let ((?x4035 (* l_0_4_60 l_0_4_60)))
 (let ((?x5057 (* 2.0 ?x4035)))
 (let ((?x4031 (* l_0_4_59 l_0_4_59)))
 (let ((?x5055 (* 2.0 ?x4031)))
 (let ((?x4064 (* l_0_4_58 l_0_4_58)))
 (let ((?x5053 (* 2.0 ?x4064)))
 (let ((?x3945 (* l_0_4_105 l_0_4_105)))
 (let ((?x5051 (* 2.0 ?x3945)))
 (let ((?x3943 (* l_0_4_104 l_0_4_104)))
 (let ((?x5049 (* 2.0 ?x3943)))
 (let ((?x3941 (* l_0_4_103 l_0_4_103)))
 (let ((?x5047 (* 2.0 ?x3941)))
 (let ((?x3939 (* l_0_4_102 l_0_4_102)))
 (let ((?x5045 (* 2.0 ?x3939)))
 (let ((?x3937 (* l_0_4_101 l_0_4_101)))
 (let ((?x5043 (* 2.0 ?x3937)))
 (let ((?x3979 (* l_0_4_100 l_0_4_100)))
 (let ((?x5042 (* 2.0 ?x3979)))
 (let ((?x5056 (+ (+ (+ (+ (+ (+ (+ ?x5042 ?x5043) ?x5045) ?x5047) ?x5049) ?x5051) ?x5053) ?x5055)))
 (let ((?x5067 (- (+ (+ (+ (+ ?x5056 ?x5057) ?x5059) ?x5061) ?x5063) (* (* 2.0 l_0_4_79) l_0_4_79))))
 (let ((?x5073 (- (- ?x5067 (* (* 2.0 l_0_4_80) l_0_4_80)) (* (* 2.0 l_0_4_81) l_0_4_81))))
 (let ((?x5079 (- (- ?x5073 (* (* 2.0 l_0_4_82) l_0_4_82)) (* (* 2.0 l_0_4_83) l_0_4_83))))
 (= (- ?x5079 (* (* 2.0 l_0_4_84) l_0_4_84)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x5118 (- (* (* (- 2.0) l_0_4_112) l_0_4_116) (* (* 2.0 l_0_4_113) l_0_4_117))))
 (let ((?x5122 (- (- ?x5118 (* (* 2.0 l_0_4_114) l_0_4_118)) (* (* 2.0 l_0_4_115) l_0_4_119))))
 (= (- ?x5122 (* (* 2.0 l_0_4_85) l_0_4_91)) 0.0))))
(assert
 (let ((?x5162 (* l_0_4_120 l_0_4_120)))
 (let ((?x5160 (* l_0_4_119 l_0_4_119)))
 (let ((?x5158 (* l_0_4_118 l_0_4_118)))
 (let ((?x5159 (- (- (* (- l_0_4_116) l_0_4_116) (* l_0_4_117 l_0_4_117)) ?x5158)))
 (= (- (- (- ?x5159 ?x5160) ?x5162) (* (* 2.0 l_0_4_85) l_0_4_95)) 0.0))))))
(assert
 (let ((?x5193 (- (* (* (- 2.0) l_0_4_91) l_0_4_95) (* (* 2.0 l_0_4_92) l_0_4_96))))
 (let ((?x5199 (- (- ?x5193 (* (* 2.0 l_0_4_93) l_0_4_97)) (* (* 2.0 l_0_4_94) l_0_4_98))))
 (= ?x5199 0.0))))
(assert
 (let ((?x4932 (* l_0_4_99 l_0_4_99)))
 (let ((?x4929 (* l_0_4_98 l_0_4_98)))
 (let ((?x4926 (* l_0_4_97 l_0_4_97)))
 (let ((?x5224 (- (- (- (* (- l_0_4_95) l_0_4_95) (* l_0_4_96 l_0_4_96)) ?x4926) ?x4929)))
 (= (- ?x5224 ?x4932) 0.0))))))
(assert
 (= (* (- l_0_4_106) l_0_4_106) 0.0))
(assert
 (= (* (* (- 2.0) l_0_4_106) l_0_4_112) 0.0))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_22 0.0))
(assert
 (>= l_0_4_24 0.0))
(assert
 (>= l_0_4_27 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_42 0.0))
(assert
 (>= l_0_4_43 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_52 0.0))
(assert
 (>= l_0_4_57 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_64 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_69 0.0))
(assert
 (>= l_0_4_73 0.0))
(assert
 (>= l_0_4_78 0.0))
(assert
 (>= l_0_4_84 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_87 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_94 0.0))
(assert
 (>= l_0_4_99 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (>= l_0_4_106 0.0))
(assert
 (>= l_0_4_108 0.0))
(assert
 (>= l_0_4_111 0.0))
(assert
 (>= l_0_4_115 0.0))
(assert
 (>= l_0_4_120 0.0))
(assert
 (>= l_0_4_126 0.0))
(assert
 (let ((?x5295 (* l_0_5_64 l_0_5_64)))
 (let ((?x5293 (* l_0_5_43 l_0_5_43)))
 (let ((?x5292 (- (* (* (- 2.0) l_0_5_106) l_0_5_121) (* (* 2.0 l_0_5_127) l_0_5_142))))
 (= (+ (+ (- ?x5292 ?x5293) ?x5295) 1.0) 0.0)))))
(assert
 (let ((?x5295 (* l_0_5_64 l_0_5_64)))
 (let ((?x5293 (* l_0_5_43 l_0_5_43)))
 (let ((?x5328 (* l_0_5_136 l_0_5_136)))
 (let ((?x5326 (* l_0_5_135 l_0_5_135)))
 (let ((?x5324 (* l_0_5_134 l_0_5_134)))
 (let ((?x5322 (* l_0_5_133 l_0_5_133)))
 (let ((?x5320 (* l_0_5_115 l_0_5_115)))
 (let ((?x5318 (* l_0_5_114 l_0_5_114)))
 (let ((?x5319 (- (- (* (- l_0_5_112) l_0_5_112) (* l_0_5_113 l_0_5_113)) ?x5318)))
 (let ((?x5331 (- (+ (- (- (- (- (- ?x5319 ?x5320) ?x5322) ?x5324) ?x5326) ?x5328) ?x5293) ?x5295)))
 (= (- ?x5331 1.0) 0.0))))))))))))
(assert
 (let ((?x5370 (- (- (* (- l_0_5_1) l_0_5_1) (* (* 2.0 l_0_5_106) l_0_5_109)) (* (* 2.0 l_0_5_127) l_0_5_130))))
 (= ?x5370 0.0)))
(assert
 (let ((?x5411 (* l_0_5_85 l_0_5_85)))
 (let ((?x5412 (* 2.0 ?x5411)))
 (let ((?x5293 (* l_0_5_43 l_0_5_43)))
 (let ((?x5406 (* 2.0 ?x5293)))
 (let ((?x5393 (- (* (* (- 2.0) l_0_5_1) l_0_5_2) (* (* 2.0 l_0_5_107) l_0_5_109))))
 (let ((?x5399 (- (- ?x5393 (* (* 2.0 l_0_5_108) l_0_5_110)) (* (* 2.0 l_0_5_128) l_0_5_130))))
 (let ((?x5405 (- (- ?x5399 (* (* 2.0 l_0_5_129) l_0_5_131)) (* (* 2.0 l_0_5_22) l_0_5_25))))
 (= (+ (- (+ ?x5405 ?x5406) (* (* 2.0 l_0_5_64) l_0_5_64)) ?x5412) 0.0)))))))))
(assert
 (let ((?x5466 (* l_0_5_132 l_0_5_132)))
 (let ((?x5464 (* l_0_5_131 l_0_5_131)))
 (let ((?x5462 (* l_0_5_130 l_0_5_130)))
 (let ((?x5460 (* l_0_5_111 l_0_5_111)))
 (let ((?x5458 (* l_0_5_110 l_0_5_110)))
 (let ((?x5459 (- (- (* (* (- 2.0) l_0_5_1) l_0_5_4) (* l_0_5_109 l_0_5_109)) ?x5458)))
 (= (- (- (- (- ?x5459 ?x5460) ?x5462) ?x5464) ?x5466) 0.0))))))))
(assert
 (let ((?x5495 (- (* (* (- 2.0) l_0_5_1) l_0_5_7) (* (* 2.0 l_0_5_109) l_0_5_112))))
 (let ((?x5501 (- (- ?x5495 (* (* 2.0 l_0_5_110) l_0_5_113)) (* (* 2.0 l_0_5_111) l_0_5_114))))
 (let ((?x5507 (- (- ?x5501 (* (* 2.0 l_0_5_130) l_0_5_133)) (* (* 2.0 l_0_5_131) l_0_5_134))))
 (= (- ?x5507 (* (* 2.0 l_0_5_132) l_0_5_135)) 0.0)))))
(assert
 (let ((?x5555 (- (* (* (- 2.0) l_0_5_1) l_0_5_11) (* (* 2.0 l_0_5_109) l_0_5_116))))
 (let ((?x5559 (- (- ?x5555 (* (* 2.0 l_0_5_110) l_0_5_117)) (* (* 2.0 l_0_5_111) l_0_5_118))))
 (let ((?x5563 (- (- ?x5559 (* (* 2.0 l_0_5_130) l_0_5_137)) (* (* 2.0 l_0_5_131) l_0_5_138))))
 (let ((?x5568 (- (- ?x5563 (* (* 2.0 l_0_5_132) l_0_5_139)) (* (* 2.0 l_0_5_85) l_0_5_88))))
 (= ?x5568 0.0))))))
(assert
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x5633 (* ?x5408 l_0_5_67)))
 (let ((?x5630 (* 2.0 l_0_5_43)))
 (let ((?x5631 (* ?x5630 l_0_5_46)))
 (let ((?x5619 (- (* (* (- 2.0) l_0_5_1) l_0_5_16) (* (* 2.0 l_0_5_109) l_0_5_121))))
 (let ((?x5623 (- (- ?x5619 (* (* 2.0 l_0_5_110) l_0_5_122)) (* (* 2.0 l_0_5_111) l_0_5_123))))
 (let ((?x5627 (- (- ?x5623 (* (* 2.0 l_0_5_130) l_0_5_142)) (* (* 2.0 l_0_5_131) l_0_5_143))))
 (= (+ (- (- ?x5627 (* (* 2.0 l_0_5_132) l_0_5_144)) ?x5631) ?x5633) 0.0)))))))))
(assert
 (let ((?x5693 (* l_0_5_3 l_0_5_3)))
 (let ((?x5692 (- (- (* (- l_0_5_2) l_0_5_2) (* (* 2.0 l_0_5_23) l_0_5_25)) (* (* 2.0 l_0_5_24) l_0_5_26))))
 (let ((?x5700 (- (+ (- ?x5692 ?x5693) (* (* 4.0 l_0_5_43) l_0_5_44)) (* (* 4.0 l_0_5_64) l_0_5_65))))
 (= (+ ?x5700 (* (* 4.0 l_0_5_85) l_0_5_86)) 0.0)))))
(assert
 (let ((?x5743 (* l_0_5_27 l_0_5_27)))
 (let ((?x5741 (* l_0_5_26 l_0_5_26)))
 (let ((?x5742 (- (- (* (* (- 2.0) l_0_5_2) l_0_5_4) (* l_0_5_25 l_0_5_25)) ?x5741)))
 (let ((?x5749 (+ (- (- ?x5742 ?x5743) (* (* 2.0 l_0_5_3) l_0_5_5)) (* (* 4.0 l_0_5_43) l_0_5_46))))
 (let ((?x5753 (+ (- ?x5749 (* (* 4.0 l_0_5_64) l_0_5_67)) (* (* 4.0 l_0_5_85) l_0_5_88))))
 (= ?x5753 0.0)))))))
(assert
 (let ((?x5785 (- (* (* (- 2.0) l_0_5_2) l_0_5_7) (* (* 2.0 l_0_5_25) l_0_5_28))))
 (let ((?x5791 (- (- ?x5785 (* (* 2.0 l_0_5_26) l_0_5_29)) (* (* 2.0 l_0_5_27) l_0_5_30))))
 (let ((?x5795 (+ (- ?x5791 (* (* 2.0 l_0_5_3) l_0_5_8)) (* (* 4.0 l_0_5_43) l_0_5_49))))
 (let ((?x5799 (+ (- ?x5795 (* (* 4.0 l_0_5_64) l_0_5_70)) (* (* 4.0 l_0_5_85) l_0_5_91))))
 (= ?x5799 0.0))))))
(assert
 (let ((?x5846 (- (* (* (- 2.0) l_0_5_11) l_0_5_2) (* (* 2.0 l_0_5_12) l_0_5_3))))
 (let ((?x5850 (- (- ?x5846 (* (* 2.0 l_0_5_25) l_0_5_32)) (* (* 2.0 l_0_5_26) l_0_5_33))))
 (let ((?x5854 (+ (- ?x5850 (* (* 2.0 l_0_5_27) l_0_5_34)) (* (* 4.0 l_0_5_43) l_0_5_53))))
 (let ((?x5858 (+ (- ?x5854 (* (* 4.0 l_0_5_64) l_0_5_74)) (* (* 4.0 l_0_5_85) l_0_5_95))))
 (let ((?x5864 (- (- ?x5858 (* (* 2.0 l_0_5_86) l_0_5_88)) (* (* 2.0 l_0_5_87) l_0_5_89))))
 (= ?x5864 0.0)))))))
(assert
 (let ((?x5948 (* 2.0 l_0_5_66)))
 (let ((?x5949 (* ?x5948 l_0_5_68)))
 (let ((?x5945 (* 2.0 l_0_5_65)))
 (let ((?x5946 (* ?x5945 l_0_5_67)))
 (let ((?x5940 (* 2.0 l_0_5_45)))
 (let ((?x5941 (* ?x5940 l_0_5_47)))
 (let ((?x5937 (* 2.0 l_0_5_44)))
 (let ((?x5938 (* ?x5937 l_0_5_46)))
 (let ((?x5925 (- (* (* 4.0 l_0_5_100) l_0_5_85) (* (* 2.0 l_0_5_16) l_0_5_2))))
 (let ((?x5930 (- (- ?x5925 (* (* 2.0 l_0_5_17) l_0_5_3)) (* (* 2.0 l_0_5_25) l_0_5_37))))
 (let ((?x5934 (- (- ?x5930 (* (* 2.0 l_0_5_26) l_0_5_38)) (* (* 2.0 l_0_5_27) l_0_5_39))))
 (let ((?x5944 (- (- (- (+ ?x5934 (* (* 4.0 l_0_5_43) l_0_5_58)) ?x5938) ?x5941) (* (* 4.0 l_0_5_64) l_0_5_79))))
 (= (+ (+ ?x5944 ?x5946) ?x5949) 0.0))))))))))))))
(assert
 (let ((?x6015 (* l_0_5_6 l_0_5_6)))
 (= (- (- (* (- l_0_5_4) l_0_5_4) (* l_0_5_5 l_0_5_5)) ?x6015) 0.0)))
(assert
 (let ((?x6033 (- (* (* (- 2.0) l_0_5_4) l_0_5_7) (* (* 2.0 l_0_5_5) l_0_5_8))))
 (= (- ?x6033 (* (* 2.0 l_0_5_6) l_0_5_9)) 0.0)))
(assert
 (let ((?x6065 (* l_0_5_90 l_0_5_90)))
 (let ((?x6063 (* l_0_5_89 l_0_5_89)))
 (let ((?x6061 (* l_0_5_88 l_0_5_88)))
 (let ((?x6057 (- (* (* (- 2.0) l_0_5_11) l_0_5_4) (* (* 2.0 l_0_5_12) l_0_5_5))))
 (let ((?x6066 (- (- (- (- ?x6057 (* (* 2.0 l_0_5_13) l_0_5_6)) ?x6061) ?x6063) ?x6065)))
 (= ?x6066 0.0)))))))
(assert
 (let ((?x6111 (* l_0_5_69 l_0_5_69)))
 (let ((?x6109 (* l_0_5_68 l_0_5_68)))
 (let ((?x6107 (* l_0_5_67 l_0_5_67)))
 (let ((?x6105 (* l_0_5_48 l_0_5_48)))
 (let ((?x6103 (* l_0_5_47 l_0_5_47)))
 (let ((?x6101 (* l_0_5_46 l_0_5_46)))
 (let ((?x6097 (- (* (* (- 2.0) l_0_5_16) l_0_5_4) (* (* 2.0 l_0_5_17) l_0_5_5))))
 (let ((?x6106 (- (- (- (- ?x6097 (* (* 2.0 l_0_5_18) l_0_5_6)) ?x6101) ?x6103) ?x6105)))
 (= (+ (+ (+ ?x6106 ?x6107) ?x6109) ?x6111) 0.0))))))))))
(assert
 (let ((?x6151 (* l_0_5_9 l_0_5_9)))
 (let ((?x6149 (* l_0_5_8 l_0_5_8)))
 (let ((?x6147 (* l_0_5_7 l_0_5_7)))
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x5633 (* ?x5408 l_0_5_67)))
 (let ((?x6146 (- (+ (* (- l_0_5_10) l_0_5_10) (* (* 2.0 l_0_5_43) l_0_5_46)) ?x5633)))
 (= (- (- (- ?x6146 ?x6147) ?x6149) ?x6151) 0.0))))))))
(assert
 (let ((?x6176 (- (* (* (- 2.0) l_0_5_10) l_0_5_14) (* (* 2.0 l_0_5_11) l_0_5_7))))
 (let ((?x6180 (- (- ?x6176 (* (* 2.0 l_0_5_12) l_0_5_8)) (* (* 2.0 l_0_5_13) l_0_5_9))))
 (let ((?x6186 (- (- ?x6180 (* (* 2.0 l_0_5_88) l_0_5_91)) (* (* 2.0 l_0_5_89) l_0_5_92))))
 (= (- ?x6186 (* (* 2.0 l_0_5_90) l_0_5_93)) 0.0)))))
(assert
 (let ((?x6254 (* 2.0 l_0_5_69)))
 (let ((?x6255 (* ?x6254 l_0_5_72)))
 (let ((?x6251 (* 2.0 l_0_5_68)))
 (let ((?x6252 (* ?x6251 l_0_5_71)))
 (let ((?x6248 (* 2.0 l_0_5_67)))
 (let ((?x6249 (* ?x6248 l_0_5_70)))
 (let ((?x6245 (* 2.0 l_0_5_48)))
 (let ((?x6246 (* ?x6245 l_0_5_51)))
 (let ((?x6242 (* 2.0 l_0_5_47)))
 (let ((?x6243 (* ?x6242 l_0_5_50)))
 (let ((?x6239 (* 2.0 l_0_5_46)))
 (let ((?x6240 (* ?x6239 l_0_5_49)))
 (let ((?x6234 (- (* (* (- 2.0) l_0_5_10) l_0_5_19) (* (* 2.0 l_0_5_16) l_0_5_7))))
 (let ((?x6238 (- (- ?x6234 (* (* 2.0 l_0_5_17) l_0_5_8)) (* (* 2.0 l_0_5_18) l_0_5_9))))
 (= (+ (+ (+ (- (- (- ?x6238 ?x6240) ?x6243) ?x6246) ?x6249) ?x6252) ?x6255) 0.0))))))))))))))))
(assert
 (let ((?x6313 (* l_0_5_15 l_0_5_15)))
 (let ((?x6311 (* l_0_5_14 l_0_5_14)))
 (let ((?x6309 (* l_0_5_13 l_0_5_13)))
 (let ((?x6312 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6309) ?x6311)))
 (let ((?x6318 (- (- (- ?x6312 ?x6313) (* (* 2.0 l_0_5_88) l_0_5_95)) (* (* 2.0 l_0_5_89) l_0_5_96))))
 (= (- ?x6318 (* (* 2.0 l_0_5_90) l_0_5_97)) 0.0)))))))
(assert
 (let ((?x6254 (* 2.0 l_0_5_69)))
 (let ((?x6387 (* ?x6254 l_0_5_76)))
 (let ((?x6251 (* 2.0 l_0_5_68)))
 (let ((?x6385 (* ?x6251 l_0_5_75)))
 (let ((?x6248 (* 2.0 l_0_5_67)))
 (let ((?x6383 (* ?x6248 l_0_5_74)))
 (let ((?x6245 (* 2.0 l_0_5_48)))
 (let ((?x6381 (* ?x6245 l_0_5_55)))
 (let ((?x6242 (* 2.0 l_0_5_47)))
 (let ((?x6379 (* ?x6242 l_0_5_54)))
 (let ((?x6239 (* 2.0 l_0_5_46)))
 (let ((?x6377 (* ?x6239 l_0_5_53)))
 (let ((?x6361 (- (* (* (- 2.0) l_0_5_100) l_0_5_88) (* (* 2.0 l_0_5_101) l_0_5_89))))
 (let ((?x6366 (- (- ?x6361 (* (* 2.0 l_0_5_102) l_0_5_90)) (* (* 2.0 l_0_5_11) l_0_5_16))))
 (let ((?x6370 (- (- ?x6366 (* (* 2.0 l_0_5_12) l_0_5_17)) (* (* 2.0 l_0_5_13) l_0_5_18))))
 (let ((?x6376 (- (- ?x6370 (* (* 2.0 l_0_5_14) l_0_5_19)) (* (* 2.0 l_0_5_15) l_0_5_20))))
 (= (+ (+ (+ (- (- (- ?x6376 ?x6377) ?x6379) ?x6381) ?x6383) ?x6385) ?x6387) 0.0))))))))))))))))))
(assert
 (let ((?x6254 (* 2.0 l_0_5_69)))
 (let ((?x6483 (* ?x6254 l_0_5_81)))
 (let ((?x6251 (* 2.0 l_0_5_68)))
 (let ((?x6481 (* ?x6251 l_0_5_80)))
 (let ((?x6248 (* 2.0 l_0_5_67)))
 (let ((?x6479 (* ?x6248 l_0_5_79)))
 (let ((?x6245 (* 2.0 l_0_5_48)))
 (let ((?x6477 (* ?x6245 l_0_5_60)))
 (let ((?x6242 (* 2.0 l_0_5_47)))
 (let ((?x6475 (* ?x6242 l_0_5_59)))
 (let ((?x6239 (* 2.0 l_0_5_46)))
 (let ((?x6473 (* ?x6239 l_0_5_58)))
 (let ((?x6471 (* l_0_5_21 l_0_5_21)))
 (let ((?x6469 (* l_0_5_20 l_0_5_20)))
 (let ((?x6467 (* l_0_5_19 l_0_5_19)))
 (let ((?x6465 (* l_0_5_18 l_0_5_18)))
 (let ((?x6468 (- (- (- (* (- l_0_5_16) l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x6465) ?x6467)))
 (let ((?x6482 (+ (+ (- (- (- (- (- ?x6468 ?x6469) ?x6471) ?x6473) ?x6475) ?x6477) ?x6479) ?x6481)))
 (= (+ ?x6482 ?x6483) 0.0))))))))))))))))))))
(assert
 (let ((?x6528 (* l_0_5_22 l_0_5_22)))
 (let ((?x6527 (- (* (* (- 2.0) l_0_5_106) l_0_5_107) (* (* 2.0 l_0_5_127) l_0_5_128))))
 (= (- ?x6527 ?x6528) 0.0))))
(assert
 (let ((?x6556 (* l_0_5_129 l_0_5_129)))
 (let ((?x6554 (* l_0_5_128 l_0_5_128)))
 (let ((?x6555 (- (- (* (- l_0_5_107) l_0_5_107) (* l_0_5_108 l_0_5_108)) ?x6554)))
 (= (- (- ?x6555 ?x6556) (* (* 2.0 l_0_5_22) l_0_5_23)) 0.0)))))
(assert
 (let ((?x6584 (- (* (* (- 2.0) l_0_5_107) l_0_5_112) (* (* 2.0 l_0_5_108) l_0_5_113))))
 (let ((?x6588 (- (- ?x6584 (* (* 2.0 l_0_5_128) l_0_5_133)) (* (* 2.0 l_0_5_129) l_0_5_134))))
 (= (- ?x6588 (* (* 2.0 l_0_5_22) l_0_5_28)) 0.0))))
(assert
 (let ((?x6623 (- (* (* (- 2.0) l_0_5_107) l_0_5_116) (* (* 2.0 l_0_5_108) l_0_5_117))))
 (let ((?x6627 (- (- ?x6623 (* (* 2.0 l_0_5_128) l_0_5_137)) (* (* 2.0 l_0_5_129) l_0_5_138))))
 (let ((?x6631 (- (- ?x6627 (* (* 2.0 l_0_5_22) l_0_5_32)) (* (* 2.0 l_0_5_85) l_0_5_86))))
 (= ?x6631 0.0)))))
(assert
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x6678 (* ?x5408 l_0_5_65)))
 (let ((?x5630 (* 2.0 l_0_5_43)))
 (let ((?x6676 (* ?x5630 l_0_5_44)))
 (let ((?x6669 (- (* (* (- 2.0) l_0_5_107) l_0_5_121) (* (* 2.0 l_0_5_108) l_0_5_122))))
 (let ((?x6673 (- (- ?x6669 (* (* 2.0 l_0_5_128) l_0_5_142)) (* (* 2.0 l_0_5_129) l_0_5_143))))
 (= (+ (- (- ?x6673 (* (* 2.0 l_0_5_22) l_0_5_37)) ?x6676) ?x6678) 0.0))))))))
(assert
 (= (- (* (- l_0_5_23) l_0_5_23) (* l_0_5_24 l_0_5_24)) 0.0))
(assert
 (let ((?x6732 (- (* (* (- 2.0) l_0_5_23) l_0_5_28) (* (* 2.0 l_0_5_24) l_0_5_29))))
 (= ?x6732 0.0)))
(assert
 (let ((?x6750 (* l_0_5_87 l_0_5_87)))
 (let ((?x6748 (* l_0_5_86 l_0_5_86)))
 (let ((?x6747 (- (* (* (- 2.0) l_0_5_23) l_0_5_32) (* (* 2.0 l_0_5_24) l_0_5_33))))
 (= (- (- ?x6747 ?x6748) ?x6750) 0.0)))))
(assert
 (let ((?x6779 (* l_0_5_66 l_0_5_66)))
 (let ((?x6777 (* l_0_5_65 l_0_5_65)))
 (let ((?x6775 (* l_0_5_45 l_0_5_45)))
 (let ((?x6773 (* l_0_5_44 l_0_5_44)))
 (let ((?x6772 (- (* (* (- 2.0) l_0_5_23) l_0_5_37) (* (* 2.0 l_0_5_24) l_0_5_38))))
 (= (+ (+ (- (- ?x6772 ?x6773) ?x6775) ?x6777) ?x6779) 0.0)))))))
(assert
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x6678 (* ?x5408 l_0_5_65)))
 (let ((?x5630 (* 2.0 l_0_5_43)))
 (let ((?x6676 (* ?x5630 l_0_5_44)))
 (let ((?x6807 (* l_0_5_31 l_0_5_31)))
 (let ((?x6805 (* l_0_5_30 l_0_5_30)))
 (let ((?x6808 (- (- (- (* (- l_0_5_28) l_0_5_28) (* l_0_5_29 l_0_5_29)) ?x6805) ?x6807)))
 (= (- (+ ?x6808 ?x6676) ?x6678) 0.0)))))))))
(assert
 (let ((?x6834 (- (* (* (- 2.0) l_0_5_28) l_0_5_32) (* (* 2.0 l_0_5_29) l_0_5_33))))
 (let ((?x6840 (- (- ?x6834 (* (* 2.0 l_0_5_30) l_0_5_34)) (* (* 2.0 l_0_5_31) l_0_5_35))))
 (let ((?x6844 (- (- ?x6840 (* (* 2.0 l_0_5_86) l_0_5_91)) (* (* 2.0 l_0_5_87) l_0_5_92))))
 (= ?x6844 0.0)))))
(assert
 (let ((?x5948 (* 2.0 l_0_5_66)))
 (let ((?x6894 (* ?x5948 l_0_5_71)))
 (let ((?x5945 (* 2.0 l_0_5_65)))
 (let ((?x6892 (* ?x5945 l_0_5_70)))
 (let ((?x5940 (* 2.0 l_0_5_45)))
 (let ((?x6890 (* ?x5940 l_0_5_50)))
 (let ((?x5937 (* 2.0 l_0_5_44)))
 (let ((?x6888 (* ?x5937 l_0_5_49)))
 (let ((?x6883 (- (* (* (- 2.0) l_0_5_28) l_0_5_37) (* (* 2.0 l_0_5_29) l_0_5_38))))
 (let ((?x6887 (- (- ?x6883 (* (* 2.0 l_0_5_30) l_0_5_39)) (* (* 2.0 l_0_5_31) l_0_5_40))))
 (= (+ (+ (- (- ?x6887 ?x6888) ?x6890) ?x6892) ?x6894) 0.0))))))))))))
(assert
 (let ((?x6944 (* l_0_5_36 l_0_5_36)))
 (let ((?x6942 (* l_0_5_35 l_0_5_35)))
 (let ((?x6940 (* l_0_5_34 l_0_5_34)))
 (let ((?x6943 (- (- (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x6940) ?x6942)))
 (let ((?x6949 (- (- (- ?x6943 ?x6944) (* (* 2.0 l_0_5_86) l_0_5_95)) (* (* 2.0 l_0_5_87) l_0_5_96))))
 (= ?x6949 0.0)))))))
(assert
 (let ((?x5948 (* 2.0 l_0_5_66)))
 (let ((?x7004 (* ?x5948 l_0_5_75)))
 (let ((?x5945 (* 2.0 l_0_5_65)))
 (let ((?x7002 (* ?x5945 l_0_5_74)))
 (let ((?x5940 (* 2.0 l_0_5_45)))
 (let ((?x7000 (* ?x5940 l_0_5_54)))
 (let ((?x5937 (* 2.0 l_0_5_44)))
 (let ((?x6998 (* ?x5937 l_0_5_53)))
 (let ((?x6982 (- (* (* (- 2.0) l_0_5_100) l_0_5_86) (* (* 2.0 l_0_5_101) l_0_5_87))))
 (let ((?x6988 (- (- ?x6982 (* (* 2.0 l_0_5_32) l_0_5_37)) (* (* 2.0 l_0_5_33) l_0_5_38))))
 (let ((?x6994 (- (- ?x6988 (* (* 2.0 l_0_5_34) l_0_5_39)) (* (* 2.0 l_0_5_35) l_0_5_40))))
 (let ((?x7003 (+ (- (- (- ?x6994 (* (* 2.0 l_0_5_36) l_0_5_41)) ?x6998) ?x7000) ?x7002)))
 (= (+ ?x7003 ?x7004) 0.0))))))))))))))
(assert
 (let ((?x5948 (* 2.0 l_0_5_66)))
 (let ((?x7082 (* ?x5948 l_0_5_80)))
 (let ((?x5945 (* 2.0 l_0_5_65)))
 (let ((?x7080 (* ?x5945 l_0_5_79)))
 (let ((?x5940 (* 2.0 l_0_5_45)))
 (let ((?x7078 (* ?x5940 l_0_5_59)))
 (let ((?x5937 (* 2.0 l_0_5_44)))
 (let ((?x7076 (* ?x5937 l_0_5_58)))
 (let ((?x7074 (* l_0_5_42 l_0_5_42)))
 (let ((?x7072 (* l_0_5_41 l_0_5_41)))
 (let ((?x7070 (* l_0_5_40 l_0_5_40)))
 (let ((?x7068 (* l_0_5_39 l_0_5_39)))
 (let ((?x7071 (- (- (- (* (- l_0_5_37) l_0_5_37) (* l_0_5_38 l_0_5_38)) ?x7068) ?x7070)))
 (= (+ (+ (- (- (- (- ?x7071 ?x7072) ?x7074) ?x7076) ?x7078) ?x7080) ?x7082) 0.0)))))))))))))))
(assert
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x7146 (* ?x5408 l_0_5_70)))
 (let ((?x5630 (* 2.0 l_0_5_43)))
 (let ((?x7144 (* ?x5630 l_0_5_49)))
 (let ((?x7125 (- (* (* (- 2.0) l_0_5_112) l_0_5_121) (* (* 2.0 l_0_5_113) l_0_5_122))))
 (let ((?x7131 (- (- ?x7125 (* (* 2.0 l_0_5_114) l_0_5_123)) (* (* 2.0 l_0_5_115) l_0_5_124))))
 (let ((?x7137 (- (- ?x7131 (* (* 2.0 l_0_5_133) l_0_5_142)) (* (* 2.0 l_0_5_134) l_0_5_143))))
 (let ((?x7143 (- (- ?x7137 (* (* 2.0 l_0_5_135) l_0_5_144)) (* (* 2.0 l_0_5_136) l_0_5_145))))
 (= (+ (- ?x7143 ?x7144) ?x7146) 0.0))))))))))
(assert
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x7235 (* ?x5408 l_0_5_74)))
 (let ((?x5630 (* 2.0 l_0_5_43)))
 (let ((?x7233 (* ?x5630 l_0_5_53)))
 (let ((?x7205 (- (* (* (- 2.0) l_0_5_100) l_0_5_85) (* (* 2.0 l_0_5_116) l_0_5_121))))
 (let ((?x7211 (- (- ?x7205 (* (* 2.0 l_0_5_117) l_0_5_122)) (* (* 2.0 l_0_5_118) l_0_5_123))))
 (let ((?x7217 (- (- ?x7211 (* (* 2.0 l_0_5_119) l_0_5_124)) (* (* 2.0 l_0_5_120) l_0_5_125))))
 (let ((?x7223 (- (- ?x7217 (* (* 2.0 l_0_5_137) l_0_5_142)) (* (* 2.0 l_0_5_138) l_0_5_143))))
 (let ((?x7229 (- (- ?x7223 (* (* 2.0 l_0_5_139) l_0_5_144)) (* (* 2.0 l_0_5_140) l_0_5_145))))
 (= (+ (- (- ?x7229 (* (* 2.0 l_0_5_141) l_0_5_146)) ?x7233) ?x7235) 0.0)))))))))))
(assert
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x7334 (* ?x5408 l_0_5_79)))
 (let ((?x5630 (* 2.0 l_0_5_43)))
 (let ((?x7332 (* ?x5630 l_0_5_58)))
 (let ((?x7330 (* l_0_5_147 l_0_5_147)))
 (let ((?x7328 (* l_0_5_146 l_0_5_146)))
 (let ((?x7326 (* l_0_5_145 l_0_5_145)))
 (let ((?x7324 (* l_0_5_144 l_0_5_144)))
 (let ((?x7322 (* l_0_5_143 l_0_5_143)))
 (let ((?x7320 (* l_0_5_142 l_0_5_142)))
 (let ((?x7318 (* l_0_5_126 l_0_5_126)))
 (let ((?x7316 (* l_0_5_125 l_0_5_125)))
 (let ((?x7314 (* l_0_5_124 l_0_5_124)))
 (let ((?x7312 (* l_0_5_123 l_0_5_123)))
 (let ((?x7313 (- (- (* (- l_0_5_121) l_0_5_121) (* l_0_5_122 l_0_5_122)) ?x7312)))
 (let ((?x7327 (- (- (- (- (- (- (- ?x7313 ?x7314) ?x7316) ?x7318) ?x7320) ?x7322) ?x7324) ?x7326)))
 (= (+ (- (- (- ?x7327 ?x7328) ?x7330) ?x7332) ?x7334) 0.0))))))))))))))))))
(assert
 (let ((?x7396 (* l_0_5_73 l_0_5_73)))
 (let ((?x7394 (* l_0_5_72 l_0_5_72)))
 (let ((?x7392 (* l_0_5_71 l_0_5_71)))
 (let ((?x7390 (* l_0_5_70 l_0_5_70)))
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x7334 (* ?x5408 l_0_5_79)))
 (let ((?x7387 (* l_0_5_52 l_0_5_52)))
 (let ((?x7385 (* l_0_5_51 l_0_5_51)))
 (let ((?x7383 (* l_0_5_50 l_0_5_50)))
 (let ((?x7384 (- (- (* (* 2.0 l_0_5_43) l_0_5_58) (* l_0_5_49 l_0_5_49)) ?x7383)))
 (let ((?x7397 (+ (+ (+ (+ (- (- (- ?x7384 ?x7385) ?x7387) ?x7334) ?x7390) ?x7392) ?x7394) ?x7396)))
 (= ?x7397 0.0)))))))))))))
(assert
 (let ((?x7445 (* 2.0 l_0_5_73)))
 (let ((?x7446 (* ?x7445 l_0_5_77)))
 (let ((?x7442 (* 2.0 l_0_5_72)))
 (let ((?x7443 (* ?x7442 l_0_5_76)))
 (let ((?x7439 (* 2.0 l_0_5_71)))
 (let ((?x7440 (* ?x7439 l_0_5_75)))
 (let ((?x7436 (* 2.0 l_0_5_70)))
 (let ((?x7437 (* ?x7436 l_0_5_74)))
 (let ((?x7433 (* 2.0 l_0_5_52)))
 (let ((?x7434 (* ?x7433 l_0_5_56)))
 (let ((?x7430 (* 2.0 l_0_5_51)))
 (let ((?x7431 (* ?x7430 l_0_5_55)))
 (let ((?x7427 (* 2.0 l_0_5_50)))
 (let ((?x7428 (* ?x7427 l_0_5_54)))
 (let ((?x7424 (* 2.0 l_0_5_49)))
 (let ((?x7425 (* ?x7424 l_0_5_53)))
 (let ((?x7418 (- (* (* (- 2.0) l_0_5_100) l_0_5_91) (* (* 2.0 l_0_5_101) l_0_5_92))))
 (let ((?x7423 (- (- ?x7418 (* (* 2.0 l_0_5_102) l_0_5_93)) (* (* 2.0 l_0_5_103) l_0_5_94))))
 (let ((?x7444 (+ (+ (+ (- (- (- (- ?x7423 ?x7425) ?x7428) ?x7431) ?x7434) ?x7437) ?x7440) ?x7443)))
 (= (+ ?x7444 ?x7446) 0.0)))))))))))))))))))))
(assert
 (let ((?x7445 (* 2.0 l_0_5_73)))
 (let ((?x7518 (* ?x7445 l_0_5_82)))
 (let ((?x7442 (* 2.0 l_0_5_72)))
 (let ((?x7516 (* ?x7442 l_0_5_81)))
 (let ((?x7439 (* 2.0 l_0_5_71)))
 (let ((?x7514 (* ?x7439 l_0_5_80)))
 (let ((?x7436 (* 2.0 l_0_5_70)))
 (let ((?x7512 (* ?x7436 l_0_5_79)))
 (let ((?x7433 (* 2.0 l_0_5_52)))
 (let ((?x7510 (* ?x7433 l_0_5_61)))
 (let ((?x7430 (* 2.0 l_0_5_51)))
 (let ((?x7501 (* ?x7430 l_0_5_60)))
 (let ((?x7427 (* 2.0 l_0_5_50)))
 (let ((?x7498 (* ?x7427 l_0_5_59)))
 (let ((?x7513 (+ (- (- (- (* (* (- 2.0) l_0_5_49) l_0_5_58) ?x7498) ?x7501) ?x7510) ?x7512)))
 (= (+ (+ (+ ?x7513 ?x7514) ?x7516) ?x7518) 0.0)))))))))))))))))
(assert
 (let ((?x7580 (* l_0_5_78 l_0_5_78)))
 (let ((?x7578 (* l_0_5_77 l_0_5_77)))
 (let ((?x7576 (* l_0_5_76 l_0_5_76)))
 (let ((?x7574 (* l_0_5_75 l_0_5_75)))
 (let ((?x7572 (* l_0_5_74 l_0_5_74)))
 (let ((?x7570 (* l_0_5_57 l_0_5_57)))
 (let ((?x7568 (* l_0_5_56 l_0_5_56)))
 (let ((?x7566 (* l_0_5_55 l_0_5_55)))
 (let ((?x7564 (* l_0_5_54 l_0_5_54)))
 (let ((?x7562 (* l_0_5_53 l_0_5_53)))
 (let ((?x7546 (- (* (* (- 2.0) l_0_5_100) l_0_5_95) (* (* 2.0 l_0_5_101) l_0_5_96))))
 (let ((?x7558 (- (- ?x7546 (* (* 2.0 l_0_5_102) l_0_5_97)) (* (* 2.0 l_0_5_103) l_0_5_98))))
 (let ((?x7567 (- (- (- (- ?x7558 (* (* 2.0 l_0_5_104) l_0_5_99)) ?x7562) ?x7564) ?x7566)))
 (let ((?x7581 (+ (+ (+ (+ (+ (- (- ?x7567 ?x7568) ?x7570) ?x7572) ?x7574) ?x7576) ?x7578) ?x7580)))
 (= ?x7581 0.0))))))))))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_5_78)))
 (let ((?x7672 (* ?x7671 l_0_5_83)))
 (let ((?x7668 (* 2.0 l_0_5_77)))
 (let ((?x7669 (* ?x7668 l_0_5_82)))
 (let ((?x7665 (* 2.0 l_0_5_76)))
 (let ((?x7666 (* ?x7665 l_0_5_81)))
 (let ((?x7662 (* 2.0 l_0_5_75)))
 (let ((?x7663 (* ?x7662 l_0_5_80)))
 (let ((?x7659 (* 2.0 l_0_5_74)))
 (let ((?x7660 (* ?x7659 l_0_5_79)))
 (let ((?x7657 (* (* 2.0 l_0_5_57) l_0_5_62)))
 (let ((?x7654 (* (* 2.0 l_0_5_56) l_0_5_61)))
 (let ((?x7651 (* (* 2.0 l_0_5_55) l_0_5_60)))
 (let ((?x7648 (* (* 2.0 l_0_5_54) l_0_5_59)))
 (let ((?x7645 (* (* 2.0 l_0_5_53) l_0_5_58)))
 (let ((?x7642 (* l_0_5_105 l_0_5_105)))
 (let ((?x7640 (* l_0_5_104 l_0_5_104)))
 (let ((?x7638 (* l_0_5_103 l_0_5_103)))
 (let ((?x7636 (* l_0_5_102 l_0_5_102)))
 (let ((?x7637 (- (- (* (- l_0_5_100) l_0_5_100) (* l_0_5_101 l_0_5_101)) ?x7636)))
 (let ((?x7655 (- (- (- (- (- (- (- ?x7637 ?x7638) ?x7640) ?x7642) ?x7645) ?x7648) ?x7651) ?x7654)))
 (= (+ (+ (+ (+ (+ (- ?x7655 ?x7657) ?x7660) ?x7663) ?x7666) ?x7669) ?x7672) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7757 (* l_0_5_84 l_0_5_84)))
 (let ((?x7755 (* l_0_5_83 l_0_5_83)))
 (let ((?x7753 (* l_0_5_82 l_0_5_82)))
 (let ((?x7751 (* l_0_5_81 l_0_5_81)))
 (let ((?x7749 (* l_0_5_80 l_0_5_80)))
 (let ((?x7747 (* l_0_5_79 l_0_5_79)))
 (let ((?x7745 (* l_0_5_63 l_0_5_63)))
 (let ((?x7743 (* l_0_5_62 l_0_5_62)))
 (let ((?x7741 (* l_0_5_61 l_0_5_61)))
 (let ((?x7732 (* l_0_5_60 l_0_5_60)))
 (let ((?x7742 (- (- (- (* (- l_0_5_58) l_0_5_58) (* l_0_5_59 l_0_5_59)) ?x7732) ?x7741)))
 (let ((?x7756 (+ (+ (+ (+ (+ (- (- ?x7742 ?x7743) ?x7745) ?x7747) ?x7749) ?x7751) ?x7753) ?x7755)))
 (= (+ ?x7756 ?x7757) 0.0))))))))))))))
(assert
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x7146 (* ?x5408 l_0_5_70)))
 (let ((?x5630 (* 2.0 l_0_5_43)))
 (let ((?x7144 (* ?x5630 l_0_5_49)))
 (= (- ?x7144 ?x7146) 0.0))))))
(assert
 (let ((?x7800 (* l_0_5_94 l_0_5_94)))
 (let ((?x7798 (* l_0_5_93 l_0_5_93)))
 (let ((?x7796 (* l_0_5_92 l_0_5_92)))
 (let ((?x7794 (* l_0_5_91 l_0_5_91)))
 (let ((?x5408 (* 2.0 l_0_5_64)))
 (let ((?x7235 (* ?x5408 l_0_5_74)))
 (let ((?x5630 (* 2.0 l_0_5_43)))
 (let ((?x7233 (* ?x5630 l_0_5_53)))
 (= (- (- (- (- (- ?x7233 ?x7235) ?x7794) ?x7796) ?x7798) ?x7800) 0.0))))))))))
(assert
 (let ((?x6779 (* l_0_5_66 l_0_5_66)))
 (let ((?x6777 (* l_0_5_65 l_0_5_65)))
 (let ((?x7822 (- (- (+ (* l_0_5_44 l_0_5_44) (* l_0_5_45 l_0_5_45)) ?x6777) ?x6779)))
 (= ?x7822 0.0)))))
(assert
 (let ((?x7800 (* l_0_5_94 l_0_5_94)))
 (let ((?x7854 (* 2.0 ?x7800)))
 (let ((?x7798 (* l_0_5_93 l_0_5_93)))
 (let ((?x7852 (* 2.0 ?x7798)))
 (let ((?x7796 (* l_0_5_92 l_0_5_92)))
 (let ((?x7850 (* 2.0 ?x7796)))
 (let ((?x7794 (* l_0_5_91 l_0_5_91)))
 (let ((?x7848 (* 2.0 ?x7794)))
 (let ((?x5948 (* 2.0 l_0_5_66)))
 (let ((?x5949 (* ?x5948 l_0_5_68)))
 (let ((?x5945 (* 2.0 l_0_5_65)))
 (let ((?x5946 (* ?x5945 l_0_5_67)))
 (let ((?x7387 (* l_0_5_52 l_0_5_52)))
 (let ((?x7836 (* 2.0 ?x7387)))
 (let ((?x7385 (* l_0_5_51 l_0_5_51)))
 (let ((?x7834 (* 2.0 ?x7385)))
 (let ((?x7383 (* l_0_5_50 l_0_5_50)))
 (let ((?x7832 (* 2.0 ?x7383)))
 (let ((?x7378 (* l_0_5_49 l_0_5_49)))
 (let ((?x7830 (* 2.0 ?x7378)))
 (let ((?x5940 (* 2.0 l_0_5_45)))
 (let ((?x5941 (* ?x5940 l_0_5_47)))
 (let ((?x5937 (* 2.0 l_0_5_44)))
 (let ((?x5938 (* ?x5937 l_0_5_46)))
 (let ((?x7839 (- (- (+ (+ (+ (+ (+ ?x5938 ?x5941) ?x7830) ?x7832) ?x7834) ?x7836) ?x5946) ?x5949)))
 (let ((?x7843 (- (- ?x7839 (* (* 2.0 l_0_5_70) l_0_5_70)) (* (* 2.0 l_0_5_71) l_0_5_71))))
 (let ((?x7847 (- (- ?x7843 (* (* 2.0 l_0_5_72) l_0_5_72)) (* (* 2.0 l_0_5_73) l_0_5_73))))
 (= (+ (+ (+ (+ ?x7847 ?x7848) ?x7850) ?x7852) ?x7854) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x5948 (* 2.0 l_0_5_66)))
 (let ((?x6894 (* ?x5948 l_0_5_71)))
 (let ((?x5945 (* 2.0 l_0_5_65)))
 (let ((?x6892 (* ?x5945 l_0_5_70)))
 (let ((?x5940 (* 2.0 l_0_5_45)))
 (let ((?x6890 (* ?x5940 l_0_5_50)))
 (let ((?x5937 (* 2.0 l_0_5_44)))
 (let ((?x6888 (* ?x5937 l_0_5_49)))
 (= (- (- (+ ?x6888 ?x6890) ?x6892) ?x6894) 0.0))))))))))
(assert
 (let ((?x5948 (* 2.0 l_0_5_66)))
 (let ((?x7004 (* ?x5948 l_0_5_75)))
 (let ((?x5945 (* 2.0 l_0_5_65)))
 (let ((?x7002 (* ?x5945 l_0_5_74)))
 (let ((?x5940 (* 2.0 l_0_5_45)))
 (let ((?x7000 (* ?x5940 l_0_5_54)))
 (let ((?x5937 (* 2.0 l_0_5_44)))
 (let ((?x6998 (* ?x5937 l_0_5_53)))
 (= (- (- (+ ?x6998 ?x7000) ?x7002) ?x7004) 0.0))))))))))
(assert
 (let ((?x5948 (* 2.0 l_0_5_66)))
 (let ((?x7082 (* ?x5948 l_0_5_80)))
 (let ((?x5945 (* 2.0 l_0_5_65)))
 (let ((?x7080 (* ?x5945 l_0_5_79)))
 (let ((?x5940 (* 2.0 l_0_5_45)))
 (let ((?x7078 (* ?x5940 l_0_5_59)))
 (let ((?x5937 (* 2.0 l_0_5_44)))
 (let ((?x7076 (* ?x5937 l_0_5_58)))
 (= (- (- (+ ?x7076 ?x7078) ?x7080) ?x7082) 0.0))))))))))
(assert
 (let ((?x6111 (* l_0_5_69 l_0_5_69)))
 (let ((?x6109 (* l_0_5_68 l_0_5_68)))
 (let ((?x6107 (* l_0_5_67 l_0_5_67)))
 (let ((?x6105 (* l_0_5_48 l_0_5_48)))
 (let ((?x7932 (- (+ (+ (* l_0_5_46 l_0_5_46) (* l_0_5_47 l_0_5_47)) ?x6105) ?x6107)))
 (= (- (- ?x7932 ?x6109) ?x6111) 0.0)))))))
(assert
 (let ((?x6254 (* 2.0 l_0_5_69)))
 (let ((?x6255 (* ?x6254 l_0_5_72)))
 (let ((?x6251 (* 2.0 l_0_5_68)))
 (let ((?x6252 (* ?x6251 l_0_5_71)))
 (let ((?x6248 (* 2.0 l_0_5_67)))
 (let ((?x6249 (* ?x6248 l_0_5_70)))
 (let ((?x6245 (* 2.0 l_0_5_48)))
 (let ((?x6246 (* ?x6245 l_0_5_51)))
 (let ((?x6242 (* 2.0 l_0_5_47)))
 (let ((?x6243 (* ?x6242 l_0_5_50)))
 (let ((?x6239 (* 2.0 l_0_5_46)))
 (let ((?x6240 (* ?x6239 l_0_5_49)))
 (= (- (- (- (+ (+ ?x6240 ?x6243) ?x6246) ?x6249) ?x6252) ?x6255) 0.0))))))))))))))
(assert
 (let ((?x6254 (* 2.0 l_0_5_69)))
 (let ((?x6387 (* ?x6254 l_0_5_76)))
 (let ((?x6251 (* 2.0 l_0_5_68)))
 (let ((?x6385 (* ?x6251 l_0_5_75)))
 (let ((?x6248 (* 2.0 l_0_5_67)))
 (let ((?x6383 (* ?x6248 l_0_5_74)))
 (let ((?x6245 (* 2.0 l_0_5_48)))
 (let ((?x6381 (* ?x6245 l_0_5_55)))
 (let ((?x6242 (* 2.0 l_0_5_47)))
 (let ((?x6379 (* ?x6242 l_0_5_54)))
 (let ((?x6239 (* 2.0 l_0_5_46)))
 (let ((?x6377 (* ?x6239 l_0_5_53)))
 (= (- (- (- (+ (+ ?x6377 ?x6379) ?x6381) ?x6383) ?x6385) ?x6387) 0.0))))))))))))))
(assert
 (let ((?x6254 (* 2.0 l_0_5_69)))
 (let ((?x6483 (* ?x6254 l_0_5_81)))
 (let ((?x6251 (* 2.0 l_0_5_68)))
 (let ((?x6481 (* ?x6251 l_0_5_80)))
 (let ((?x6248 (* 2.0 l_0_5_67)))
 (let ((?x6479 (* ?x6248 l_0_5_79)))
 (let ((?x6245 (* 2.0 l_0_5_48)))
 (let ((?x6477 (* ?x6245 l_0_5_60)))
 (let ((?x6242 (* 2.0 l_0_5_47)))
 (let ((?x6475 (* ?x6242 l_0_5_59)))
 (let ((?x6239 (* 2.0 l_0_5_46)))
 (let ((?x6473 (* ?x6239 l_0_5_58)))
 (= (- (- (- (+ (+ ?x6473 ?x6475) ?x6477) ?x6479) ?x6481) ?x6483) 0.0))))))))))))))
(assert
 (let ((?x7396 (* l_0_5_73 l_0_5_73)))
 (let ((?x7394 (* l_0_5_72 l_0_5_72)))
 (let ((?x7392 (* l_0_5_71 l_0_5_71)))
 (let ((?x7390 (* l_0_5_70 l_0_5_70)))
 (let ((?x7387 (* l_0_5_52 l_0_5_52)))
 (let ((?x7385 (* l_0_5_51 l_0_5_51)))
 (let ((?x8006 (+ (+ (+ (* l_0_5_49 l_0_5_49) (* l_0_5_50 l_0_5_50)) ?x7385) ?x7387)))
 (= (- (- (- (- ?x8006 ?x7390) ?x7392) ?x7394) ?x7396) 0.0)))))))))
(assert
 (let ((?x7445 (* 2.0 l_0_5_73)))
 (let ((?x7446 (* ?x7445 l_0_5_77)))
 (let ((?x7442 (* 2.0 l_0_5_72)))
 (let ((?x7443 (* ?x7442 l_0_5_76)))
 (let ((?x7439 (* 2.0 l_0_5_71)))
 (let ((?x7440 (* ?x7439 l_0_5_75)))
 (let ((?x7436 (* 2.0 l_0_5_70)))
 (let ((?x7437 (* ?x7436 l_0_5_74)))
 (let ((?x7433 (* 2.0 l_0_5_52)))
 (let ((?x7434 (* ?x7433 l_0_5_56)))
 (let ((?x7430 (* 2.0 l_0_5_51)))
 (let ((?x7431 (* ?x7430 l_0_5_55)))
 (let ((?x7427 (* 2.0 l_0_5_50)))
 (let ((?x7428 (* ?x7427 l_0_5_54)))
 (let ((?x7424 (* 2.0 l_0_5_49)))
 (let ((?x7425 (* ?x7424 l_0_5_53)))
 (let ((?x8032 (- (- (- (- (+ (+ (+ ?x7425 ?x7428) ?x7431) ?x7434) ?x7437) ?x7440) ?x7443) ?x7446)))
 (= ?x8032 0.0)))))))))))))))))))
(assert
 (let ((?x7445 (* 2.0 l_0_5_73)))
 (let ((?x7518 (* ?x7445 l_0_5_82)))
 (let ((?x7442 (* 2.0 l_0_5_72)))
 (let ((?x7516 (* ?x7442 l_0_5_81)))
 (let ((?x7439 (* 2.0 l_0_5_71)))
 (let ((?x7514 (* ?x7439 l_0_5_80)))
 (let ((?x7436 (* 2.0 l_0_5_70)))
 (let ((?x7512 (* ?x7436 l_0_5_79)))
 (let ((?x7433 (* 2.0 l_0_5_52)))
 (let ((?x7510 (* ?x7433 l_0_5_61)))
 (let ((?x7430 (* 2.0 l_0_5_51)))
 (let ((?x7501 (* ?x7430 l_0_5_60)))
 (let ((?x7427 (* 2.0 l_0_5_50)))
 (let ((?x7498 (* ?x7427 l_0_5_59)))
 (let ((?x8056 (- (+ (+ (+ (* (* 2.0 l_0_5_49) l_0_5_58) ?x7498) ?x7501) ?x7510) ?x7512)))
 (= (- (- (- ?x8056 ?x7514) ?x7516) ?x7518) 0.0)))))))))))))))))
(assert
 (let ((?x7580 (* l_0_5_78 l_0_5_78)))
 (let ((?x7578 (* l_0_5_77 l_0_5_77)))
 (let ((?x7576 (* l_0_5_76 l_0_5_76)))
 (let ((?x7574 (* l_0_5_75 l_0_5_75)))
 (let ((?x7572 (* l_0_5_74 l_0_5_74)))
 (let ((?x7570 (* l_0_5_57 l_0_5_57)))
 (let ((?x7568 (* l_0_5_56 l_0_5_56)))
 (let ((?x7566 (* l_0_5_55 l_0_5_55)))
 (let ((?x8079 (+ (+ (+ (* l_0_5_53 l_0_5_53) (* l_0_5_54 l_0_5_54)) ?x7566) ?x7568)))
 (= (- (- (- (- (- (+ ?x8079 ?x7570) ?x7572) ?x7574) ?x7576) ?x7578) ?x7580) 0.0)))))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_5_78)))
 (let ((?x7672 (* ?x7671 l_0_5_83)))
 (let ((?x7668 (* 2.0 l_0_5_77)))
 (let ((?x7669 (* ?x7668 l_0_5_82)))
 (let ((?x7665 (* 2.0 l_0_5_76)))
 (let ((?x7666 (* ?x7665 l_0_5_81)))
 (let ((?x7662 (* 2.0 l_0_5_75)))
 (let ((?x7663 (* ?x7662 l_0_5_80)))
 (let ((?x7659 (* 2.0 l_0_5_74)))
 (let ((?x7660 (* ?x7659 l_0_5_79)))
 (let ((?x7657 (* (* 2.0 l_0_5_57) l_0_5_62)))
 (let ((?x7654 (* (* 2.0 l_0_5_56) l_0_5_61)))
 (let ((?x7651 (* (* 2.0 l_0_5_55) l_0_5_60)))
 (let ((?x7648 (* (* 2.0 l_0_5_54) l_0_5_59)))
 (let ((?x7645 (* (* 2.0 l_0_5_53) l_0_5_58)))
 (let ((?x8105 (- (- (- (+ (+ (+ (+ ?x7645 ?x7648) ?x7651) ?x7654) ?x7657) ?x7660) ?x7663) ?x7666)))
 (= (- (- ?x8105 ?x7669) ?x7672) 0.0))))))))))))))))))
(assert
 (let ((?x7757 (* l_0_5_84 l_0_5_84)))
 (let ((?x7755 (* l_0_5_83 l_0_5_83)))
 (let ((?x7753 (* l_0_5_82 l_0_5_82)))
 (let ((?x7751 (* l_0_5_81 l_0_5_81)))
 (let ((?x7749 (* l_0_5_80 l_0_5_80)))
 (let ((?x7747 (* l_0_5_79 l_0_5_79)))
 (let ((?x7745 (* l_0_5_63 l_0_5_63)))
 (let ((?x7743 (* l_0_5_62 l_0_5_62)))
 (let ((?x7741 (* l_0_5_61 l_0_5_61)))
 (let ((?x7732 (* l_0_5_60 l_0_5_60)))
 (let ((?x8133 (+ (+ (+ (* l_0_5_58 l_0_5_58) (* l_0_5_59 l_0_5_59)) ?x7732) ?x7741)))
 (let ((?x8140 (- (- (- (- (- (+ (+ ?x8133 ?x7743) ?x7745) ?x7747) ?x7749) ?x7751) ?x7753) ?x7755)))
 (= (- ?x8140 ?x7757) 0.0))))))))))))))
(assert
 (let ((?x6750 (* l_0_5_87 l_0_5_87)))
 (let ((?x8164 (* 2.0 ?x6750)))
 (let ((?x6748 (* l_0_5_86 l_0_5_86)))
 (let ((?x8162 (* 2.0 ?x6748)))
 (let ((?x6775 (* l_0_5_45 l_0_5_45)))
 (let ((?x8156 (* 2.0 ?x6775)))
 (let ((?x6773 (* l_0_5_44 l_0_5_44)))
 (let ((?x8155 (* 2.0 ?x6773)))
 (let ((?x8161 (- (- (+ ?x8155 ?x8156) (* (* 2.0 l_0_5_65) l_0_5_65)) (* (* 2.0 l_0_5_66) l_0_5_66))))
 (= (+ (+ ?x8161 ?x8162) ?x8164) 0.0)))))))))))
(assert
 (let ((?x8183 (+ (* (* 4.0 l_0_5_44) l_0_5_46) (* (* 4.0 l_0_5_45) l_0_5_47))))
 (let ((?x8189 (- (- ?x8183 (* (* 4.0 l_0_5_65) l_0_5_67)) (* (* 4.0 l_0_5_66) l_0_5_68))))
 (let ((?x8195 (+ (+ ?x8189 (* (* 4.0 l_0_5_86) l_0_5_88)) (* (* 4.0 l_0_5_87) l_0_5_89))))
 (= ?x8195 0.0)))))
(assert
 (let ((?x8216 (+ (* (* 4.0 l_0_5_44) l_0_5_49) (* (* 4.0 l_0_5_45) l_0_5_50))))
 (let ((?x8220 (- (- ?x8216 (* (* 4.0 l_0_5_65) l_0_5_70)) (* (* 4.0 l_0_5_66) l_0_5_71))))
 (let ((?x8224 (+ (+ ?x8220 (* (* 4.0 l_0_5_86) l_0_5_91)) (* (* 4.0 l_0_5_87) l_0_5_92))))
 (= ?x8224 0.0)))))
(assert
 (let ((?x8245 (+ (* (* 4.0 l_0_5_44) l_0_5_53) (* (* 4.0 l_0_5_45) l_0_5_54))))
 (let ((?x8249 (- (- ?x8245 (* (* 4.0 l_0_5_65) l_0_5_74)) (* (* 4.0 l_0_5_66) l_0_5_75))))
 (let ((?x8253 (+ (+ ?x8249 (* (* 4.0 l_0_5_86) l_0_5_95)) (* (* 4.0 l_0_5_87) l_0_5_96))))
 (= ?x8253 0.0)))))
(assert
 (let ((?x8275 (+ (* (* 4.0 l_0_5_100) l_0_5_86) (* (* 4.0 l_0_5_101) l_0_5_87))))
 (let ((?x8279 (+ (+ ?x8275 (* (* 4.0 l_0_5_44) l_0_5_58)) (* (* 4.0 l_0_5_45) l_0_5_59))))
 (let ((?x8283 (- (- ?x8279 (* (* 4.0 l_0_5_65) l_0_5_79)) (* (* 4.0 l_0_5_66) l_0_5_80))))
 (= ?x8283 0.0)))))
(assert
 (let ((?x6065 (* l_0_5_90 l_0_5_90)))
 (let ((?x8316 (* 2.0 ?x6065)))
 (let ((?x6063 (* l_0_5_89 l_0_5_89)))
 (let ((?x8314 (* 2.0 ?x6063)))
 (let ((?x6061 (* l_0_5_88 l_0_5_88)))
 (let ((?x8312 (* 2.0 ?x6061)))
 (let ((?x6105 (* l_0_5_48 l_0_5_48)))
 (let ((?x8304 (* 2.0 ?x6105)))
 (let ((?x6103 (* l_0_5_47 l_0_5_47)))
 (let ((?x8302 (* 2.0 ?x6103)))
 (let ((?x6101 (* l_0_5_46 l_0_5_46)))
 (let ((?x8301 (* 2.0 ?x6101)))
 (let ((?x8309 (- (- (+ (+ ?x8301 ?x8302) ?x8304) (* (* 2.0 l_0_5_67) l_0_5_67)) (* (* 2.0 l_0_5_68) l_0_5_68))))
 (let ((?x8317 (+ (+ (+ (- ?x8309 (* (* 2.0 l_0_5_69) l_0_5_69)) ?x8312) ?x8314) ?x8316)))
 (= ?x8317 0.0))))))))))))))))
(assert
 (let ((?x8341 (+ (* (* 4.0 l_0_5_46) l_0_5_49) (* (* 4.0 l_0_5_47) l_0_5_50))))
 (let ((?x8347 (- (+ ?x8341 (* (* 4.0 l_0_5_48) l_0_5_51)) (* (* 4.0 l_0_5_67) l_0_5_70))))
 (let ((?x8353 (- (- ?x8347 (* (* 4.0 l_0_5_68) l_0_5_71)) (* (* 4.0 l_0_5_69) l_0_5_72))))
 (let ((?x8359 (+ (+ ?x8353 (* (* 4.0 l_0_5_88) l_0_5_91)) (* (* 4.0 l_0_5_89) l_0_5_92))))
 (= (+ ?x8359 (* (* 4.0 l_0_5_90) l_0_5_93)) 0.0))))))
(assert
 (let ((?x8390 (+ (* (* 4.0 l_0_5_46) l_0_5_53) (* (* 4.0 l_0_5_47) l_0_5_54))))
 (let ((?x8394 (- (+ ?x8390 (* (* 4.0 l_0_5_48) l_0_5_55)) (* (* 4.0 l_0_5_67) l_0_5_74))))
 (let ((?x8398 (- (- ?x8394 (* (* 4.0 l_0_5_68) l_0_5_75)) (* (* 4.0 l_0_5_69) l_0_5_76))))
 (let ((?x8402 (+ (+ ?x8398 (* (* 4.0 l_0_5_88) l_0_5_95)) (* (* 4.0 l_0_5_89) l_0_5_96))))
 (= (+ ?x8402 (* (* 4.0 l_0_5_90) l_0_5_97)) 0.0))))))
(assert
 (let ((?x8432 (+ (* (* 4.0 l_0_5_100) l_0_5_88) (* (* 4.0 l_0_5_101) l_0_5_89))))
 (let ((?x8437 (+ (+ ?x8432 (* (* 4.0 l_0_5_102) l_0_5_90)) (* (* 4.0 l_0_5_46) l_0_5_58))))
 (let ((?x8441 (+ (+ ?x8437 (* (* 4.0 l_0_5_47) l_0_5_59)) (* (* 4.0 l_0_5_48) l_0_5_60))))
 (let ((?x8445 (- (- ?x8441 (* (* 4.0 l_0_5_67) l_0_5_79)) (* (* 4.0 l_0_5_68) l_0_5_80))))
 (= (- ?x8445 (* (* 4.0 l_0_5_69) l_0_5_81)) 0.0))))))
(assert
 (let ((?x8476 (+ (* (* 4.0 l_0_5_49) l_0_5_53) (* (* 4.0 l_0_5_50) l_0_5_54))))
 (let ((?x8482 (+ (+ ?x8476 (* (* 4.0 l_0_5_51) l_0_5_55)) (* (* 4.0 l_0_5_52) l_0_5_56))))
 (let ((?x8488 (- (- ?x8482 (* (* 4.0 l_0_5_70) l_0_5_74)) (* (* 4.0 l_0_5_71) l_0_5_75))))
 (let ((?x8494 (- (- ?x8488 (* (* 4.0 l_0_5_72) l_0_5_76)) (* (* 4.0 l_0_5_73) l_0_5_77))))
 (let ((?x8500 (+ (+ ?x8494 (* (* 4.0 l_0_5_91) l_0_5_95)) (* (* 4.0 l_0_5_92) l_0_5_96))))
 (let ((?x8506 (+ (+ ?x8500 (* (* 4.0 l_0_5_93) l_0_5_97)) (* (* 4.0 l_0_5_94) l_0_5_98))))
 (= ?x8506 0.0))))))))
(assert
 (let ((?x8545 (+ (* (* 4.0 l_0_5_100) l_0_5_91) (* (* 4.0 l_0_5_101) l_0_5_92))))
 (let ((?x8550 (+ (+ ?x8545 (* (* 4.0 l_0_5_102) l_0_5_93)) (* (* 4.0 l_0_5_103) l_0_5_94))))
 (let ((?x8554 (+ (+ ?x8550 (* (* 4.0 l_0_5_49) l_0_5_58)) (* (* 4.0 l_0_5_50) l_0_5_59))))
 (let ((?x8558 (+ (+ ?x8554 (* (* 4.0 l_0_5_51) l_0_5_60)) (* (* 4.0 l_0_5_52) l_0_5_61))))
 (let ((?x8562 (- (- ?x8558 (* (* 4.0 l_0_5_70) l_0_5_79)) (* (* 4.0 l_0_5_71) l_0_5_80))))
 (let ((?x8566 (- (- ?x8562 (* (* 4.0 l_0_5_72) l_0_5_81)) (* (* 4.0 l_0_5_73) l_0_5_82))))
 (= ?x8566 0.0))))))))
(assert
 (let ((?x8629 (* l_0_5_99 l_0_5_99)))
 (let ((?x8630 (* 2.0 ?x8629)))
 (let ((?x8626 (* l_0_5_98 l_0_5_98)))
 (let ((?x8627 (* 2.0 ?x8626)))
 (let ((?x8623 (* l_0_5_97 l_0_5_97)))
 (let ((?x8624 (* 2.0 ?x8623)))
 (let ((?x8620 (* l_0_5_96 l_0_5_96)))
 (let ((?x8621 (* 2.0 ?x8620)))
 (let ((?x8617 (* l_0_5_95 l_0_5_95)))
 (let ((?x8618 (* 2.0 ?x8617)))
 (let ((?x7570 (* l_0_5_57 l_0_5_57)))
 (let ((?x8605 (* 2.0 ?x7570)))
 (let ((?x7568 (* l_0_5_56 l_0_5_56)))
 (let ((?x8603 (* 2.0 ?x7568)))
 (let ((?x7566 (* l_0_5_55 l_0_5_55)))
 (let ((?x8601 (* 2.0 ?x7566)))
 (let ((?x7564 (* l_0_5_54 l_0_5_54)))
 (let ((?x8599 (* 2.0 ?x7564)))
 (let ((?x7562 (* l_0_5_53 l_0_5_53)))
 (let ((?x8598 (* 2.0 ?x7562)))
 (let ((?x8608 (- (+ (+ (+ (+ ?x8598 ?x8599) ?x8601) ?x8603) ?x8605) (* (* 2.0 l_0_5_74) l_0_5_74))))
 (let ((?x8612 (- (- ?x8608 (* (* 2.0 l_0_5_75) l_0_5_75)) (* (* 2.0 l_0_5_76) l_0_5_76))))
 (let ((?x8616 (- (- ?x8612 (* (* 2.0 l_0_5_77) l_0_5_77)) (* (* 2.0 l_0_5_78) l_0_5_78))))
 (= (+ (+ (+ (+ (+ ?x8616 ?x8618) ?x8621) ?x8624) ?x8627) ?x8630) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x8663 (+ (* (* 4.0 l_0_5_100) l_0_5_95) (* (* 4.0 l_0_5_101) l_0_5_96))))
 (let ((?x8667 (+ (+ ?x8663 (* (* 4.0 l_0_5_102) l_0_5_97)) (* (* 4.0 l_0_5_103) l_0_5_98))))
 (let ((?x8673 (+ (+ ?x8667 (* (* 4.0 l_0_5_104) l_0_5_99)) (* (* 4.0 l_0_5_53) l_0_5_58))))
 (let ((?x8679 (+ (+ ?x8673 (* (* 4.0 l_0_5_54) l_0_5_59)) (* (* 4.0 l_0_5_55) l_0_5_60))))
 (let ((?x8685 (+ (+ ?x8679 (* (* 4.0 l_0_5_56) l_0_5_61)) (* (* 4.0 l_0_5_57) l_0_5_62))))
 (let ((?x8691 (- (- ?x8685 (* (* 4.0 l_0_5_74) l_0_5_79)) (* (* 4.0 l_0_5_75) l_0_5_80))))
 (let ((?x8697 (- (- ?x8691 (* (* 4.0 l_0_5_76) l_0_5_81)) (* (* 4.0 l_0_5_77) l_0_5_82))))
 (= (- ?x8697 (* (* 4.0 l_0_5_78) l_0_5_83)) 0.0)))))))))
(assert
 (let ((?x7745 (* l_0_5_63 l_0_5_63)))
 (let ((?x8760 (* 2.0 ?x7745)))
 (let ((?x7743 (* l_0_5_62 l_0_5_62)))
 (let ((?x8758 (* 2.0 ?x7743)))
 (let ((?x7741 (* l_0_5_61 l_0_5_61)))
 (let ((?x8756 (* 2.0 ?x7741)))
 (let ((?x7732 (* l_0_5_60 l_0_5_60)))
 (let ((?x8754 (* 2.0 ?x7732)))
 (let ((?x7728 (* l_0_5_59 l_0_5_59)))
 (let ((?x8752 (* 2.0 ?x7728)))
 (let ((?x7761 (* l_0_5_58 l_0_5_58)))
 (let ((?x8750 (* 2.0 ?x7761)))
 (let ((?x7642 (* l_0_5_105 l_0_5_105)))
 (let ((?x8748 (* 2.0 ?x7642)))
 (let ((?x7640 (* l_0_5_104 l_0_5_104)))
 (let ((?x8746 (* 2.0 ?x7640)))
 (let ((?x7638 (* l_0_5_103 l_0_5_103)))
 (let ((?x8744 (* 2.0 ?x7638)))
 (let ((?x7636 (* l_0_5_102 l_0_5_102)))
 (let ((?x8742 (* 2.0 ?x7636)))
 (let ((?x7634 (* l_0_5_101 l_0_5_101)))
 (let ((?x8740 (* 2.0 ?x7634)))
 (let ((?x7676 (* l_0_5_100 l_0_5_100)))
 (let ((?x8739 (* 2.0 ?x7676)))
 (let ((?x8753 (+ (+ (+ (+ (+ (+ (+ ?x8739 ?x8740) ?x8742) ?x8744) ?x8746) ?x8748) ?x8750) ?x8752)))
 (let ((?x8764 (- (+ (+ (+ (+ ?x8753 ?x8754) ?x8756) ?x8758) ?x8760) (* (* 2.0 l_0_5_79) l_0_5_79))))
 (let ((?x8770 (- (- ?x8764 (* (* 2.0 l_0_5_80) l_0_5_80)) (* (* 2.0 l_0_5_81) l_0_5_81))))
 (let ((?x8776 (- (- ?x8770 (* (* 2.0 l_0_5_82) l_0_5_82)) (* (* 2.0 l_0_5_83) l_0_5_83))))
 (= (- ?x8776 (* (* 2.0 l_0_5_84) l_0_5_84)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x5411 (* l_0_5_85 l_0_5_85)))
 (let ((?x8815 (- (* (* (- 2.0) l_0_5_106) l_0_5_116) (* (* 2.0 l_0_5_127) l_0_5_137))))
 (= (- ?x8815 ?x5411) 0.0))))
(assert
 (let ((?x8834 (- (* (* (- 2.0) l_0_5_112) l_0_5_116) (* (* 2.0 l_0_5_113) l_0_5_117))))
 (let ((?x8838 (- (- ?x8834 (* (* 2.0 l_0_5_114) l_0_5_118)) (* (* 2.0 l_0_5_115) l_0_5_119))))
 (let ((?x8842 (- (- ?x8838 (* (* 2.0 l_0_5_133) l_0_5_137)) (* (* 2.0 l_0_5_134) l_0_5_138))))
 (let ((?x8846 (- (- ?x8842 (* (* 2.0 l_0_5_135) l_0_5_139)) (* (* 2.0 l_0_5_136) l_0_5_140))))
 (= (- ?x8846 (* (* 2.0 l_0_5_85) l_0_5_91)) 0.0))))))
(assert
 (let ((?x8920 (* l_0_5_141 l_0_5_141)))
 (let ((?x8918 (* l_0_5_140 l_0_5_140)))
 (let ((?x8916 (* l_0_5_139 l_0_5_139)))
 (let ((?x8914 (* l_0_5_138 l_0_5_138)))
 (let ((?x8912 (* l_0_5_137 l_0_5_137)))
 (let ((?x8910 (* l_0_5_120 l_0_5_120)))
 (let ((?x8908 (* l_0_5_119 l_0_5_119)))
 (let ((?x8906 (* l_0_5_118 l_0_5_118)))
 (let ((?x8907 (- (- (* (- l_0_5_116) l_0_5_116) (* l_0_5_117 l_0_5_117)) ?x8906)))
 (let ((?x8921 (- (- (- (- (- (- (- ?x8907 ?x8908) ?x8910) ?x8912) ?x8914) ?x8916) ?x8918) ?x8920)))
 (= (- ?x8921 (* (* 2.0 l_0_5_85) l_0_5_95)) 0.0))))))))))))
(assert
 (let ((?x8966 (- (* (* (- 2.0) l_0_5_91) l_0_5_95) (* (* 2.0 l_0_5_92) l_0_5_96))))
 (let ((?x8972 (- (- ?x8966 (* (* 2.0 l_0_5_93) l_0_5_97)) (* (* 2.0 l_0_5_94) l_0_5_98))))
 (= ?x8972 0.0))))
(assert
 (let ((?x8629 (* l_0_5_99 l_0_5_99)))
 (let ((?x8626 (* l_0_5_98 l_0_5_98)))
 (let ((?x8623 (* l_0_5_97 l_0_5_97)))
 (let ((?x8997 (- (- (- (* (- l_0_5_95) l_0_5_95) (* l_0_5_96 l_0_5_96)) ?x8623) ?x8626)))
 (= (- ?x8997 ?x8629) 0.0))))))
(assert
 (= (- (* (- l_0_5_106) l_0_5_106) (* l_0_5_127 l_0_5_127)) 0.0))
(assert
 (let ((?x9030 (- (* (* (- 2.0) l_0_5_106) l_0_5_112) (* (* 2.0 l_0_5_127) l_0_5_133))))
 (= ?x9030 0.0)))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_22 0.0))
(assert
 (>= l_0_5_24 0.0))
(assert
 (>= l_0_5_27 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_42 0.0))
(assert
 (>= l_0_5_43 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_52 0.0))
(assert
 (>= l_0_5_57 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_64 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_69 0.0))
(assert
 (>= l_0_5_73 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_84 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_87 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_94 0.0))
(assert
 (>= l_0_5_99 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (>= l_0_5_106 0.0))
(assert
 (>= l_0_5_108 0.0))
(assert
 (>= l_0_5_111 0.0))
(assert
 (>= l_0_5_115 0.0))
(assert
 (>= l_0_5_120 0.0))
(assert
 (>= l_0_5_126 0.0))
(assert
 (>= l_0_5_127 0.0))
(assert
 (>= l_0_5_129 0.0))
(assert
 (>= l_0_5_132 0.0))
(assert
 (>= l_0_5_136 0.0))
(assert
 (>= l_0_5_141 0.0))
(assert
 (>= l_0_5_147 0.0))
(assert
 (let ((?x9092 (- (+ (* (- l_0_6_1) l_0_6_1) (* 1.0 (* l_0_6_106 l_0_6_106))) (* (* 2.0 l_0_6_127) l_0_6_130))))
 (= (+ ?x9092 (/ 1.0 2.0)) 0.0)))
(assert
 (= (* (- l_0_6_127) l_0_6_127) 0.0))
(assert
 (let ((?x9129 (* l_0_6_43 l_0_6_43)))
 (let ((?x9130 (* 2.0 ?x9129)))
 (let ((?x9117 (* 4.0 l_0_6_106)))
 (let ((?x9118 (* ?x9117 l_0_6_109)))
 (let ((?x9116 (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 2.0 l_0_6_106) l_0_6_107))))
 (let ((?x9125 (- (- (- ?x9116 ?x9118) (* (* 2.0 l_0_6_128) l_0_6_130)) (* (* 2.0 l_0_6_129) l_0_6_131))))
 (let ((?x9134 (- (+ (- ?x9125 (* (* 2.0 l_0_6_22) l_0_6_25)) ?x9130) (* (* 2.0 l_0_6_64) l_0_6_64))))
 (= (- ?x9134 (* (* 2.0 l_0_6_85) l_0_6_85)) 0.0)))))))))
(assert
 (let ((?x9189 (* l_0_6_132 l_0_6_132)))
 (let ((?x9187 (* l_0_6_131 l_0_6_131)))
 (let ((?x9185 (* l_0_6_130 l_0_6_130)))
 (let ((?x9184 (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) (* (* 2.0 l_0_6_106) l_0_6_109))))
 (= (- (- (- ?x9184 ?x9185) ?x9187) ?x9189) 0.0))))))
(assert
 (let ((?x9117 (* 4.0 l_0_6_106)))
 (let ((?x9118 (* ?x9117 l_0_6_109)))
 (let ((?x9209 (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x9118) (* (* 2.0 l_0_6_106) l_0_6_112))))
 (let ((?x9215 (- (- ?x9209 (* (* 2.0 l_0_6_130) l_0_6_133)) (* (* 2.0 l_0_6_131) l_0_6_134))))
 (= (- ?x9215 (* (* 2.0 l_0_6_132) l_0_6_135)) 0.0))))))
(assert
 (let ((?x9246 (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_106) l_0_6_116))))
 (let ((?x9250 (- (- ?x9246 (* (* 2.0 l_0_6_130) l_0_6_137)) (* (* 2.0 l_0_6_131) l_0_6_138))))
 (let ((?x9254 (+ (- ?x9250 (* (* 2.0 l_0_6_132) l_0_6_139)) (* (* 2.0 l_0_6_85) l_0_6_88))))
 (= ?x9254 0.0)))))
(assert
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x9297 (* ?x9132 l_0_6_67)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x9295 (* ?x9294 l_0_6_46)))
 (let ((?x9287 (+ (* (* (- 2.0) l_0_6_1) l_0_6_16) (* (* 2.0 l_0_6_106) l_0_6_121))))
 (let ((?x9291 (- (- ?x9287 (* (* 2.0 l_0_6_130) l_0_6_142)) (* (* 2.0 l_0_6_131) l_0_6_143))))
 (= (+ (- (- ?x9291 (* (* 2.0 l_0_6_132) l_0_6_144)) ?x9295) ?x9297) 0.0))))))))
(assert
 (let ((?x9354 (* l_0_6_3 l_0_6_3)))
 (let ((?x9346 (* l_0_6_2 l_0_6_2)))
 (let ((?x9340 (* 4.0 l_0_6_108)))
 (let ((?x9341 (* ?x9340 l_0_6_110)))
 (let ((?x9339 (+ (* (* (- 4.0) l_0_6_107) l_0_6_109) (* 1.0 (* l_0_6_107 l_0_6_107)))))
 (let ((?x9350 (- (- (+ (- ?x9339 ?x9341) (* 1.0 (* l_0_6_108 l_0_6_108))) ?x9346) (* (* 2.0 l_0_6_23) l_0_6_25))))
 (let ((?x9358 (+ (- (- ?x9350 (* (* 2.0 l_0_6_24) l_0_6_26)) ?x9354) (* (* 4.0 l_0_6_43) l_0_6_44))))
 (let ((?x9364 (- (- ?x9358 (* (* 4.0 l_0_6_64) l_0_6_65)) (* (* 4.0 l_0_6_85) l_0_6_86))))
 (= ?x9364 0.0))))))))))
(assert
 (let ((?x9431 (* l_0_6_27 l_0_6_27)))
 (let ((?x9429 (* l_0_6_26 l_0_6_26)))
 (let ((?x9427 (* l_0_6_25 l_0_6_25)))
 (let ((?x9414 (+ (* (* 2.0 l_0_6_107) l_0_6_109) (* (* 2.0 l_0_6_108) l_0_6_110))))
 (let ((?x9420 (- (- ?x9414 (* (* 2.0 l_0_6_109) l_0_6_109)) (* (* 2.0 l_0_6_110) l_0_6_110))))
 (let ((?x9426 (- (- ?x9420 (* (* 2.0 l_0_6_111) l_0_6_111)) (* (* 2.0 l_0_6_2) l_0_6_4))))
 (let ((?x9435 (- (- (- (- ?x9426 ?x9427) ?x9429) ?x9431) (* (* 2.0 l_0_6_3) l_0_6_5))))
 (let ((?x9439 (- (+ ?x9435 (* (* 4.0 l_0_6_43) l_0_6_46)) (* (* 4.0 l_0_6_64) l_0_6_67))))
 (= (- ?x9439 (* (* 4.0 l_0_6_85) l_0_6_88)) 0.0))))))))))
(assert
 (let ((?x9515 (* 4.0 l_0_6_111)))
 (let ((?x9516 (* ?x9515 l_0_6_114)))
 (let ((?x9512 (* 4.0 l_0_6_110)))
 (let ((?x9513 (* ?x9512 l_0_6_113)))
 (let ((?x9509 (* 4.0 l_0_6_109)))
 (let ((?x9510 (* ?x9509 l_0_6_112)))
 (let ((?x9340 (* 4.0 l_0_6_108)))
 (let ((?x9341 (* ?x9340 l_0_6_110)))
 (let ((?x9505 (+ (* (* 4.0 l_0_6_107) l_0_6_109) (* (* 2.0 l_0_6_107) l_0_6_112))))
 (let ((?x9514 (- (- (+ (+ ?x9505 ?x9341) (* (* 2.0 l_0_6_108) l_0_6_113)) ?x9510) ?x9513)))
 (let ((?x9522 (- (- (- ?x9514 ?x9516) (* (* 2.0 l_0_6_2) l_0_6_7)) (* (* 2.0 l_0_6_25) l_0_6_28))))
 (let ((?x9528 (- (- ?x9522 (* (* 2.0 l_0_6_26) l_0_6_29)) (* (* 2.0 l_0_6_27) l_0_6_30))))
 (let ((?x9532 (+ (- ?x9528 (* (* 2.0 l_0_6_3) l_0_6_8)) (* (* 4.0 l_0_6_43) l_0_6_49))))
 (let ((?x9536 (- (- ?x9532 (* (* 4.0 l_0_6_64) l_0_6_70)) (* (* 4.0 l_0_6_85) l_0_6_91))))
 (= ?x9536 0.0))))))))))))))))
(assert
 (let ((?x9515 (* 4.0 l_0_6_111)))
 (let ((?x9618 (* ?x9515 l_0_6_118)))
 (let ((?x9512 (* 4.0 l_0_6_110)))
 (let ((?x9616 (* ?x9512 l_0_6_117)))
 (let ((?x9509 (* 4.0 l_0_6_109)))
 (let ((?x9611 (* ?x9509 l_0_6_116)))
 (let ((?x9610 (+ (* (* 2.0 l_0_6_107) l_0_6_116) (* (* 2.0 l_0_6_108) l_0_6_117))))
 (let ((?x9619 (- (- (- (- ?x9610 ?x9611) (* (* 2.0 l_0_6_11) l_0_6_2)) ?x9616) ?x9618)))
 (let ((?x9624 (- (- ?x9619 (* (* 2.0 l_0_6_12) l_0_6_3)) (* (* 2.0 l_0_6_25) l_0_6_32))))
 (let ((?x9628 (- (- ?x9624 (* (* 2.0 l_0_6_26) l_0_6_33)) (* (* 2.0 l_0_6_27) l_0_6_34))))
 (let ((?x9632 (- (+ ?x9628 (* (* 4.0 l_0_6_43) l_0_6_53)) (* (* 4.0 l_0_6_64) l_0_6_74))))
 (let ((?x9637 (+ (- ?x9632 (* (* 4.0 l_0_6_85) l_0_6_95)) (* (* 2.0 l_0_6_86) l_0_6_88))))
 (= (+ ?x9637 (* (* 2.0 l_0_6_87) l_0_6_89)) 0.0))))))))))))))
(assert
 (let ((?x9753 (* 2.0 l_0_6_66)))
 (let ((?x9754 (* ?x9753 l_0_6_68)))
 (let ((?x9750 (* 2.0 l_0_6_65)))
 (let ((?x9751 (* ?x9750 l_0_6_67)))
 (let ((?x9745 (* 2.0 l_0_6_45)))
 (let ((?x9746 (* ?x9745 l_0_6_47)))
 (let ((?x9742 (* 2.0 l_0_6_44)))
 (let ((?x9743 (* ?x9742 l_0_6_46)))
 (let ((?x9515 (* 4.0 l_0_6_111)))
 (let ((?x9726 (* ?x9515 l_0_6_123)))
 (let ((?x9512 (* 4.0 l_0_6_110)))
 (let ((?x9724 (* ?x9512 l_0_6_122)))
 (let ((?x9509 (* 4.0 l_0_6_109)))
 (let ((?x9722 (* ?x9509 l_0_6_121)))
 (let ((?x9719 (+ (* (* (- 4.0) l_0_6_100) l_0_6_85) (* (* 2.0 l_0_6_107) l_0_6_121))))
 (let ((?x9727 (- (- (- (+ ?x9719 (* (* 2.0 l_0_6_108) l_0_6_122)) ?x9722) ?x9724) ?x9726)))
 (let ((?x9733 (- (- ?x9727 (* (* 2.0 l_0_6_16) l_0_6_2)) (* (* 2.0 l_0_6_17) l_0_6_3))))
 (let ((?x9737 (- (- ?x9733 (* (* 2.0 l_0_6_25) l_0_6_37)) (* (* 2.0 l_0_6_26) l_0_6_38))))
 (let ((?x9741 (+ (- ?x9737 (* (* 2.0 l_0_6_27) l_0_6_39)) (* (* 4.0 l_0_6_43) l_0_6_58))))
 (let ((?x9752 (+ (- (- (- ?x9741 ?x9743) ?x9746) (* (* 4.0 l_0_6_64) l_0_6_79)) ?x9751)))
 (= (+ ?x9752 ?x9754) 0.0))))))))))))))))))))))
(assert
 (let ((?x9852 (* l_0_6_6 l_0_6_6)))
 (let ((?x9850 (* l_0_6_5 l_0_6_5)))
 (let ((?x9848 (* l_0_6_4 l_0_6_4)))
 (let ((?x9837 (+ (* 1.0 (* l_0_6_109 l_0_6_109)) (* 1.0 (* l_0_6_110 l_0_6_110)))))
 (let ((?x9853 (- (- (- (+ ?x9837 (* 1.0 (* l_0_6_111 l_0_6_111))) ?x9848) ?x9850) ?x9852)))
 (= ?x9853 0.0)))))))
(assert
 (let ((?x9458 (* l_0_6_111 l_0_6_111)))
 (let ((?x9459 (* 2.0 ?x9458)))
 (let ((?x9452 (* l_0_6_110 l_0_6_110)))
 (let ((?x9453 (* 2.0 ?x9452)))
 (let ((?x9446 (* l_0_6_109 l_0_6_109)))
 (let ((?x9447 (* 2.0 ?x9446)))
 (let ((?x9869 (+ (+ (* (* 2.0 l_0_6_109) l_0_6_112) ?x9447) (* (* 2.0 l_0_6_110) l_0_6_113))))
 (let ((?x9876 (- (+ (+ (+ ?x9869 ?x9453) (* (* 2.0 l_0_6_111) l_0_6_114)) ?x9459) (* (* 2.0 l_0_6_4) l_0_6_7))))
 (let ((?x9882 (- (- ?x9876 (* (* 2.0 l_0_6_5) l_0_6_8)) (* (* 2.0 l_0_6_6) l_0_6_9))))
 (= ?x9882 0.0)))))))))))
(assert
 (let ((?x9923 (* l_0_6_90 l_0_6_90)))
 (let ((?x9921 (* l_0_6_89 l_0_6_89)))
 (let ((?x9919 (* l_0_6_88 l_0_6_88)))
 (let ((?x9909 (- (* (* 2.0 l_0_6_109) l_0_6_116) (* (* 2.0 l_0_6_11) l_0_6_4))))
 (let ((?x9913 (+ (+ ?x9909 (* (* 2.0 l_0_6_110) l_0_6_117)) (* (* 2.0 l_0_6_111) l_0_6_118))))
 (let ((?x9918 (- (- ?x9913 (* (* 2.0 l_0_6_12) l_0_6_5)) (* (* 2.0 l_0_6_13) l_0_6_6))))
 (= (+ (+ (+ ?x9918 ?x9919) ?x9921) ?x9923) 0.0))))))))
(assert
 (let ((?x9972 (* l_0_6_69 l_0_6_69)))
 (let ((?x9970 (* l_0_6_68 l_0_6_68)))
 (let ((?x9968 (* l_0_6_67 l_0_6_67)))
 (let ((?x9966 (* l_0_6_48 l_0_6_48)))
 (let ((?x9964 (* l_0_6_47 l_0_6_47)))
 (let ((?x9962 (* l_0_6_46 l_0_6_46)))
 (let ((?x9952 (+ (* (* 2.0 l_0_6_109) l_0_6_121) (* (* 2.0 l_0_6_110) l_0_6_122))))
 (let ((?x9956 (- (+ ?x9952 (* (* 2.0 l_0_6_111) l_0_6_123)) (* (* 2.0 l_0_6_16) l_0_6_4))))
 (let ((?x9961 (- (- ?x9956 (* (* 2.0 l_0_6_17) l_0_6_5)) (* (* 2.0 l_0_6_18) l_0_6_6))))
 (= (+ (+ (+ (- (- (- ?x9961 ?x9962) ?x9964) ?x9966) ?x9968) ?x9970) ?x9972) 0.0)))))))))))
(assert
 (let ((?x10031 (* l_0_6_9 l_0_6_9)))
 (let ((?x10029 (* l_0_6_8 l_0_6_8)))
 (let ((?x10027 (* l_0_6_7 l_0_6_7)))
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x9297 (* ?x9132 l_0_6_67)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x9295 (* ?x9294 l_0_6_46)))
 (let ((?x9515 (* 4.0 l_0_6_111)))
 (let ((?x9516 (* ?x9515 l_0_6_114)))
 (let ((?x9512 (* 4.0 l_0_6_110)))
 (let ((?x9513 (* ?x9512 l_0_6_113)))
 (let ((?x9509 (* 4.0 l_0_6_109)))
 (let ((?x9510 (* ?x9509 l_0_6_112)))
 (let ((?x10015 (+ (+ (+ (+ (* (- l_0_6_10) l_0_6_10) ?x9510) ?x9513) ?x9516) (* 1.0 (* l_0_6_112 l_0_6_112)))))
 (let ((?x10021 (+ (+ ?x10015 (* 1.0 (* l_0_6_113 l_0_6_113))) (* 1.0 (* l_0_6_114 l_0_6_114)))))
 (let ((?x10028 (- (- (+ (+ ?x10021 (* 1.0 (* l_0_6_115 l_0_6_115))) ?x9295) ?x9297) ?x10027)))
 (= (- (- ?x10028 ?x10029) ?x10031) 0.0))))))))))))))))))
(assert
 (let ((?x9515 (* 4.0 l_0_6_111)))
 (let ((?x9618 (* ?x9515 l_0_6_118)))
 (let ((?x9512 (* 4.0 l_0_6_110)))
 (let ((?x9616 (* ?x9512 l_0_6_117)))
 (let ((?x9509 (* 4.0 l_0_6_109)))
 (let ((?x9611 (* ?x9509 l_0_6_116)))
 (let ((?x10056 (- (+ (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x9611) (* (* 2.0 l_0_6_11) l_0_6_7))))
 (let ((?x10064 (+ (+ (+ (+ ?x10056 ?x9616) ?x9618) (* (* 2.0 l_0_6_112) l_0_6_116)) (* (* 2.0 l_0_6_113) l_0_6_117))))
 (let ((?x10070 (+ (+ ?x10064 (* (* 2.0 l_0_6_114) l_0_6_118)) (* (* 2.0 l_0_6_115) l_0_6_119))))
 (let ((?x10074 (- (- ?x10070 (* (* 2.0 l_0_6_12) l_0_6_8)) (* (* 2.0 l_0_6_13) l_0_6_9))))
 (let ((?x10080 (+ (+ ?x10074 (* (* 2.0 l_0_6_88) l_0_6_91)) (* (* 2.0 l_0_6_89) l_0_6_92))))
 (= (+ ?x10080 (* (* 2.0 l_0_6_90) l_0_6_93)) 0.0)))))))))))))
(assert
 (let ((?x10156 (* 2.0 l_0_6_69)))
 (let ((?x10157 (* ?x10156 l_0_6_72)))
 (let ((?x10153 (* 2.0 l_0_6_68)))
 (let ((?x10154 (* ?x10153 l_0_6_71)))
 (let ((?x10150 (* 2.0 l_0_6_67)))
 (let ((?x10151 (* ?x10150 l_0_6_70)))
 (let ((?x10147 (* 2.0 l_0_6_48)))
 (let ((?x10148 (* ?x10147 l_0_6_51)))
 (let ((?x10144 (* 2.0 l_0_6_47)))
 (let ((?x10145 (* ?x10144 l_0_6_50)))
 (let ((?x10141 (* 2.0 l_0_6_46)))
 (let ((?x10142 (* ?x10141 l_0_6_49)))
 (let ((?x9515 (* 4.0 l_0_6_111)))
 (let ((?x9726 (* ?x9515 l_0_6_123)))
 (let ((?x9512 (* 4.0 l_0_6_110)))
 (let ((?x9724 (* ?x9512 l_0_6_122)))
 (let ((?x9509 (* 4.0 l_0_6_109)))
 (let ((?x9722 (* ?x9509 l_0_6_121)))
 (let ((?x10128 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_10) l_0_6_19) ?x9722) ?x9724) ?x9726) (* (* 2.0 l_0_6_112) l_0_6_121))))
 (let ((?x10132 (+ (+ ?x10128 (* (* 2.0 l_0_6_113) l_0_6_122)) (* (* 2.0 l_0_6_114) l_0_6_123))))
 (let ((?x10136 (- (+ ?x10132 (* (* 2.0 l_0_6_115) l_0_6_124)) (* (* 2.0 l_0_6_16) l_0_6_7))))
 (let ((?x10140 (- (- ?x10136 (* (* 2.0 l_0_6_17) l_0_6_8)) (* (* 2.0 l_0_6_18) l_0_6_9))))
 (= (+ (+ (+ (- (- (- ?x10140 ?x10142) ?x10145) ?x10148) ?x10151) ?x10154) ?x10157) 0.0))))))))))))))))))))))))
(assert
 (let ((?x10238 (* l_0_6_15 l_0_6_15)))
 (let ((?x10236 (* l_0_6_14 l_0_6_14)))
 (let ((?x10234 (* l_0_6_13 l_0_6_13)))
 (let ((?x10229 (* l_0_6_12 l_0_6_12)))
 (let ((?x10219 (+ (* (- l_0_6_11) l_0_6_11) (* 1.0 (* l_0_6_116 l_0_6_116)))))
 (let ((?x10225 (+ (+ ?x10219 (* 1.0 (* l_0_6_117 l_0_6_117))) (* 1.0 (* l_0_6_118 l_0_6_118)))))
 (let ((?x10233 (+ (- (+ ?x10225 (* 1.0 (* l_0_6_119 l_0_6_119))) ?x10229) (* 1.0 (* l_0_6_120 l_0_6_120)))))
 (let ((?x10241 (+ (- (- (- ?x10233 ?x10234) ?x10236) ?x10238) (* (* 2.0 l_0_6_88) l_0_6_95))))
 (let ((?x10245 (+ (+ ?x10241 (* (* 2.0 l_0_6_89) l_0_6_96)) (* (* 2.0 l_0_6_90) l_0_6_97))))
 (= ?x10245 0.0)))))))))))
(assert
 (let ((?x10156 (* 2.0 l_0_6_69)))
 (let ((?x10317 (* ?x10156 l_0_6_76)))
 (let ((?x10153 (* 2.0 l_0_6_68)))
 (let ((?x10315 (* ?x10153 l_0_6_75)))
 (let ((?x10150 (* 2.0 l_0_6_67)))
 (let ((?x10313 (* ?x10150 l_0_6_74)))
 (let ((?x10147 (* 2.0 l_0_6_48)))
 (let ((?x10311 (* ?x10147 l_0_6_55)))
 (let ((?x10144 (* 2.0 l_0_6_47)))
 (let ((?x10309 (* ?x10144 l_0_6_54)))
 (let ((?x10141 (* 2.0 l_0_6_46)))
 (let ((?x10307 (* ?x10141 l_0_6_53)))
 (let ((?x10276 (+ (* (* 2.0 l_0_6_100) l_0_6_88) (* (* 2.0 l_0_6_101) l_0_6_89))))
 (let ((?x10281 (- (+ ?x10276 (* (* 2.0 l_0_6_102) l_0_6_90)) (* (* 2.0 l_0_6_11) l_0_6_16))))
 (let ((?x10287 (+ (+ ?x10281 (* (* 2.0 l_0_6_116) l_0_6_121)) (* (* 2.0 l_0_6_117) l_0_6_122))))
 (let ((?x10293 (+ (+ ?x10287 (* (* 2.0 l_0_6_118) l_0_6_123)) (* (* 2.0 l_0_6_119) l_0_6_124))))
 (let ((?x10298 (+ (- ?x10293 (* (* 2.0 l_0_6_12) l_0_6_17)) (* (* 2.0 l_0_6_120) l_0_6_125))))
 (let ((?x10303 (- (- ?x10298 (* (* 2.0 l_0_6_13) l_0_6_18)) (* (* 2.0 l_0_6_14) l_0_6_19))))
 (let ((?x10312 (- (- (- (- ?x10303 (* (* 2.0 l_0_6_15) l_0_6_20)) ?x10307) ?x10309) ?x10311)))
 (= (+ (+ (+ ?x10312 ?x10313) ?x10315) ?x10317) 0.0)))))))))))))))))))))
(assert
 (let ((?x10156 (* 2.0 l_0_6_69)))
 (let ((?x10434 (* ?x10156 l_0_6_81)))
 (let ((?x10153 (* 2.0 l_0_6_68)))
 (let ((?x10432 (* ?x10153 l_0_6_80)))
 (let ((?x10150 (* 2.0 l_0_6_67)))
 (let ((?x10430 (* ?x10150 l_0_6_79)))
 (let ((?x10147 (* 2.0 l_0_6_48)))
 (let ((?x10428 (* ?x10147 l_0_6_60)))
 (let ((?x10144 (* 2.0 l_0_6_47)))
 (let ((?x10426 (* ?x10144 l_0_6_59)))
 (let ((?x10141 (* 2.0 l_0_6_46)))
 (let ((?x10424 (* ?x10141 l_0_6_58)))
 (let ((?x10422 (* l_0_6_21 l_0_6_21)))
 (let ((?x10420 (* l_0_6_20 l_0_6_20)))
 (let ((?x10418 (* l_0_6_19 l_0_6_19)))
 (let ((?x10416 (* l_0_6_18 l_0_6_18)))
 (let ((?x10414 (* l_0_6_17 l_0_6_17)))
 (let ((?x10412 (* l_0_6_16 l_0_6_16)))
 (let ((?x10399 (+ (* 1.0 (* l_0_6_121 l_0_6_121)) (* 1.0 (* l_0_6_122 l_0_6_122)))))
 (let ((?x10405 (+ (+ ?x10399 (* 1.0 (* l_0_6_123 l_0_6_123))) (* 1.0 (* l_0_6_124 l_0_6_124)))))
 (let ((?x10411 (+ (+ ?x10405 (* 1.0 (* l_0_6_125 l_0_6_125))) (* 1.0 (* l_0_6_126 l_0_6_126)))))
 (let ((?x10425 (- (- (- (- (- (- (- ?x10411 ?x10412) ?x10414) ?x10416) ?x10418) ?x10420) ?x10422) ?x10424)))
 (= (+ (+ (+ (- (- ?x10425 ?x10426) ?x10428) ?x10430) ?x10432) ?x10434) 0.0))))))))))))))))))))))))
(assert
 (let ((?x10486 (* l_0_6_22 l_0_6_22)))
 (let ((?x10485 (- (* (* (- 2.0) l_0_6_106) l_0_6_106) (* (* 2.0 l_0_6_127) l_0_6_128))))
 (= (- ?x10485 ?x10486) 0.0))))
(assert
 (let ((?x10506 (* l_0_6_129 l_0_6_129)))
 (let ((?x10507 (- (- (* (* (- 4.0) l_0_6_106) l_0_6_107) (* l_0_6_128 l_0_6_128)) ?x10506)))
 (= (- ?x10507 (* (* 2.0 l_0_6_22) l_0_6_23)) 0.0))))
(assert
 (let ((?x9117 (* 4.0 l_0_6_106)))
 (let ((?x10527 (* ?x9117 l_0_6_112)))
 (let ((?x10530 (- (- (* ?x9117 l_0_6_107) ?x10527) (* (* 2.0 l_0_6_128) l_0_6_133))))
 (let ((?x10534 (- (- ?x10530 (* (* 2.0 l_0_6_129) l_0_6_134)) (* (* 2.0 l_0_6_22) l_0_6_28))))
 (= ?x10534 0.0))))))
(assert
 (let ((?x10562 (- (* (* (- 4.0) l_0_6_106) l_0_6_116) (* (* 2.0 l_0_6_128) l_0_6_137))))
 (let ((?x10566 (- (- ?x10562 (* (* 2.0 l_0_6_129) l_0_6_138)) (* (* 2.0 l_0_6_22) l_0_6_32))))
 (= (+ ?x10566 (* (* 2.0 l_0_6_85) l_0_6_86)) 0.0))))
(assert
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x10602 (* ?x9132 l_0_6_65)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x10600 (* ?x9294 l_0_6_44)))
 (let ((?x10595 (- (* (* (- 4.0) l_0_6_106) l_0_6_121) (* (* 2.0 l_0_6_128) l_0_6_142))))
 (let ((?x10599 (- (- ?x10595 (* (* 2.0 l_0_6_129) l_0_6_143)) (* (* 2.0 l_0_6_22) l_0_6_37))))
 (= (+ (- ?x10599 ?x10600) ?x10602) 0.0))))))))
(assert
 (let ((?x10639 (* l_0_6_24 l_0_6_24)))
 (let ((?x10637 (* l_0_6_23 l_0_6_23)))
 (let ((?x10636 (- (* (* (- 2.0) l_0_6_107) l_0_6_107) (* (* 2.0 l_0_6_108) l_0_6_108))))
 (= (- (- ?x10636 ?x10637) ?x10639) 0.0)))))
(assert
 (let ((?x9343 (* l_0_6_108 l_0_6_108)))
 (let ((?x10643 (* 2.0 ?x9343)))
 (let ((?x9340 (* 4.0 l_0_6_108)))
 (let ((?x10659 (* ?x9340 l_0_6_113)))
 (let ((?x9337 (* l_0_6_107 l_0_6_107)))
 (let ((?x10654 (* 2.0 ?x9337)))
 (let ((?x10663 (- (+ (- (+ (* (* (- 4.0) l_0_6_107) l_0_6_112) ?x10654) ?x10659) ?x10643) (* (* 2.0 l_0_6_23) l_0_6_28))))
 (= (- ?x10663 (* (* 2.0 l_0_6_24) l_0_6_29)) 0.0)))))))))
(assert
 (let ((?x10697 (* l_0_6_87 l_0_6_87)))
 (let ((?x10695 (* l_0_6_86 l_0_6_86)))
 (let ((?x9340 (* 4.0 l_0_6_108)))
 (let ((?x10689 (* ?x9340 l_0_6_117)))
 (let ((?x10692 (- (- (* (* (- 4.0) l_0_6_107) l_0_6_116) ?x10689) (* (* 2.0 l_0_6_23) l_0_6_32))))
 (= (+ (+ (- ?x10692 (* (* 2.0 l_0_6_24) l_0_6_33)) ?x10695) ?x10697) 0.0)))))))
(assert
 (let ((?x10736 (* l_0_6_66 l_0_6_66)))
 (let ((?x10734 (* l_0_6_65 l_0_6_65)))
 (let ((?x10732 (* l_0_6_45 l_0_6_45)))
 (let ((?x10730 (* l_0_6_44 l_0_6_44)))
 (let ((?x9340 (* 4.0 l_0_6_108)))
 (let ((?x10724 (* ?x9340 l_0_6_122)))
 (let ((?x10727 (- (- (* (* (- 4.0) l_0_6_107) l_0_6_121) ?x10724) (* (* 2.0 l_0_6_23) l_0_6_37))))
 (let ((?x10735 (+ (- (- (- ?x10727 (* (* 2.0 l_0_6_24) l_0_6_38)) ?x10730) ?x10732) ?x10734)))
 (= (+ ?x10735 ?x10736) 0.0))))))))))
(assert
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x10602 (* ?x9132 l_0_6_65)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x10600 (* ?x9294 l_0_6_44)))
 (let ((?x10784 (* l_0_6_31 l_0_6_31)))
 (let ((?x10782 (* l_0_6_30 l_0_6_30)))
 (let ((?x10780 (* l_0_6_29 l_0_6_29)))
 (let ((?x10778 (* l_0_6_28 l_0_6_28)))
 (let ((?x9340 (* 4.0 l_0_6_108)))
 (let ((?x10659 (* ?x9340 l_0_6_113)))
 (let ((?x10771 (- (+ (* (* 4.0 l_0_6_107) l_0_6_112) ?x10659) (* (* 2.0 l_0_6_112) l_0_6_112))))
 (let ((?x10775 (- (- ?x10771 (* (* 2.0 l_0_6_113) l_0_6_113)) (* (* 2.0 l_0_6_114) l_0_6_114))))
 (let ((?x10783 (- (- (- (- ?x10775 (* (* 2.0 l_0_6_115) l_0_6_115)) ?x10778) ?x10780) ?x10782)))
 (= (- (+ (- ?x10783 ?x10784) ?x10600) ?x10602) 0.0)))))))))))))))
(assert
 (let ((?x10840 (* 4.0 l_0_6_115)))
 (let ((?x10841 (* ?x10840 l_0_6_119)))
 (let ((?x10837 (* 4.0 l_0_6_114)))
 (let ((?x10838 (* ?x10837 l_0_6_118)))
 (let ((?x10834 (* 4.0 l_0_6_113)))
 (let ((?x10835 (* ?x10834 l_0_6_117)))
 (let ((?x10831 (* 4.0 l_0_6_112)))
 (let ((?x10832 (* ?x10831 l_0_6_116)))
 (let ((?x9340 (* 4.0 l_0_6_108)))
 (let ((?x10689 (* ?x9340 l_0_6_117)))
 (let ((?x10839 (- (- (- (+ (* (* 4.0 l_0_6_107) l_0_6_116) ?x10689) ?x10832) ?x10835) ?x10838)))
 (let ((?x10848 (- (- (- ?x10839 ?x10841) (* (* 2.0 l_0_6_28) l_0_6_32)) (* (* 2.0 l_0_6_29) l_0_6_33))))
 (let ((?x10854 (- (- ?x10848 (* (* 2.0 l_0_6_30) l_0_6_34)) (* (* 2.0 l_0_6_31) l_0_6_35))))
 (let ((?x10858 (+ (+ ?x10854 (* (* 2.0 l_0_6_86) l_0_6_91)) (* (* 2.0 l_0_6_87) l_0_6_92))))
 (= ?x10858 0.0))))))))))))))))
(assert
 (let ((?x9753 (* 2.0 l_0_6_66)))
 (let ((?x10935 (* ?x9753 l_0_6_71)))
 (let ((?x9750 (* 2.0 l_0_6_65)))
 (let ((?x10933 (* ?x9750 l_0_6_70)))
 (let ((?x9745 (* 2.0 l_0_6_45)))
 (let ((?x10931 (* ?x9745 l_0_6_50)))
 (let ((?x9742 (* 2.0 l_0_6_44)))
 (let ((?x10929 (* ?x9742 l_0_6_49)))
 (let ((?x10840 (* 4.0 l_0_6_115)))
 (let ((?x10919 (* ?x10840 l_0_6_124)))
 (let ((?x10837 (* 4.0 l_0_6_114)))
 (let ((?x10917 (* ?x10837 l_0_6_123)))
 (let ((?x10834 (* 4.0 l_0_6_113)))
 (let ((?x10915 (* ?x10834 l_0_6_122)))
 (let ((?x10831 (* 4.0 l_0_6_112)))
 (let ((?x10913 (* ?x10831 l_0_6_121)))
 (let ((?x9340 (* 4.0 l_0_6_108)))
 (let ((?x10724 (* ?x9340 l_0_6_122)))
 (let ((?x10918 (- (- (- (+ (* (* 4.0 l_0_6_107) l_0_6_121) ?x10724) ?x10913) ?x10915) ?x10917)))
 (let ((?x10924 (- (- (- ?x10918 ?x10919) (* (* 2.0 l_0_6_28) l_0_6_37)) (* (* 2.0 l_0_6_29) l_0_6_38))))
 (let ((?x10928 (- (- ?x10924 (* (* 2.0 l_0_6_30) l_0_6_39)) (* (* 2.0 l_0_6_31) l_0_6_40))))
 (= (+ (+ (- (- ?x10928 ?x10929) ?x10931) ?x10933) ?x10935) 0.0)))))))))))))))))))))))
(assert
 (let ((?x11019 (* l_0_6_36 l_0_6_36)))
 (let ((?x11017 (* l_0_6_35 l_0_6_35)))
 (let ((?x11015 (* l_0_6_34 l_0_6_34)))
 (let ((?x11013 (* l_0_6_33 l_0_6_33)))
 (let ((?x11011 (* l_0_6_32 l_0_6_32)))
 (let ((?x11004 (- (* (* (- 2.0) l_0_6_116) l_0_6_116) (* (* 2.0 l_0_6_117) l_0_6_117))))
 (let ((?x11008 (- (- ?x11004 (* (* 2.0 l_0_6_118) l_0_6_118)) (* (* 2.0 l_0_6_119) l_0_6_119))))
 (let ((?x11016 (- (- (- (- ?x11008 (* (* 2.0 l_0_6_120) l_0_6_120)) ?x11011) ?x11013) ?x11015)))
 (let ((?x11024 (+ (+ (- (- ?x11016 ?x11017) ?x11019) (* (* 2.0 l_0_6_86) l_0_6_95)) (* (* 2.0 l_0_6_87) l_0_6_96))))
 (= ?x11024 0.0)))))))))))
(assert
 (let ((?x9753 (* 2.0 l_0_6_66)))
 (let ((?x11108 (* ?x9753 l_0_6_75)))
 (let ((?x9750 (* 2.0 l_0_6_65)))
 (let ((?x11106 (* ?x9750 l_0_6_74)))
 (let ((?x9745 (* 2.0 l_0_6_45)))
 (let ((?x11104 (* ?x9745 l_0_6_54)))
 (let ((?x9742 (* 2.0 l_0_6_44)))
 (let ((?x11102 (* ?x9742 l_0_6_53)))
 (let ((?x11085 (* (* 4.0 l_0_6_120) l_0_6_125)))
 (let ((?x11082 (* (* 4.0 l_0_6_119) l_0_6_124)))
 (let ((?x11079 (* (* 4.0 l_0_6_118) l_0_6_123)))
 (let ((?x11076 (* (* 4.0 l_0_6_117) l_0_6_122)))
 (let ((?x11073 (* (* 4.0 l_0_6_116) l_0_6_121)))
 (let ((?x11066 (+ (* (* 2.0 l_0_6_100) l_0_6_86) (* (* 2.0 l_0_6_101) l_0_6_87))))
 (let ((?x11089 (- (- (- (- (- (- ?x11066 ?x11073) ?x11076) ?x11079) ?x11082) ?x11085) (* (* 2.0 l_0_6_32) l_0_6_37))))
 (let ((?x11095 (- (- ?x11089 (* (* 2.0 l_0_6_33) l_0_6_38)) (* (* 2.0 l_0_6_34) l_0_6_39))))
 (let ((?x11101 (- (- ?x11095 (* (* 2.0 l_0_6_35) l_0_6_40)) (* (* 2.0 l_0_6_36) l_0_6_41))))
 (= (+ (+ (- (- ?x11101 ?x11102) ?x11104) ?x11106) ?x11108) 0.0)))))))))))))))))))
(assert
 (let ((?x9753 (* 2.0 l_0_6_66)))
 (let ((?x11226 (* ?x9753 l_0_6_80)))
 (let ((?x9750 (* 2.0 l_0_6_65)))
 (let ((?x11224 (* ?x9750 l_0_6_79)))
 (let ((?x9745 (* 2.0 l_0_6_45)))
 (let ((?x11222 (* ?x9745 l_0_6_59)))
 (let ((?x9742 (* 2.0 l_0_6_44)))
 (let ((?x11220 (* ?x9742 l_0_6_58)))
 (let ((?x11218 (* l_0_6_42 l_0_6_42)))
 (let ((?x11216 (* l_0_6_41 l_0_6_41)))
 (let ((?x11214 (* l_0_6_40 l_0_6_40)))
 (let ((?x11212 (* l_0_6_39 l_0_6_39)))
 (let ((?x11210 (* l_0_6_38 l_0_6_38)))
 (let ((?x11208 (* l_0_6_37 l_0_6_37)))
 (let ((?x11195 (- (* (* (- 2.0) l_0_6_121) l_0_6_121) (* (* 2.0 l_0_6_122) l_0_6_122))))
 (let ((?x11201 (- (- ?x11195 (* (* 2.0 l_0_6_123) l_0_6_123)) (* (* 2.0 l_0_6_124) l_0_6_124))))
 (let ((?x11207 (- (- ?x11201 (* (* 2.0 l_0_6_125) l_0_6_125)) (* (* 2.0 l_0_6_126) l_0_6_126))))
 (let ((?x11221 (- (- (- (- (- (- (- ?x11207 ?x11208) ?x11210) ?x11212) ?x11214) ?x11216) ?x11218) ?x11220)))
 (= (+ (+ (- ?x11221 ?x11222) ?x11224) ?x11226) 0.0))))))))))))))))))))
(assert
 (let ((?x9169 (* l_0_6_64 l_0_6_64)))
 (let ((?x11295 (+ (- (* (* (- 2.0) l_0_6_127) l_0_6_142) (* l_0_6_43 l_0_6_43)) ?x9169)))
 (= ?x11295 0.0))))
(assert
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x11321 (* ?x9132 l_0_6_70)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x11319 (* ?x9294 l_0_6_49)))
 (let ((?x11309 (- (* (* 4.0 l_0_6_106) l_0_6_121) (* (* 2.0 l_0_6_133) l_0_6_142))))
 (let ((?x11315 (- (- ?x11309 (* (* 2.0 l_0_6_134) l_0_6_143)) (* (* 2.0 l_0_6_135) l_0_6_144))))
 (= (+ (- (- ?x11315 (* (* 2.0 l_0_6_136) l_0_6_145)) ?x11319) ?x11321) 0.0))))))))
(assert
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x11374 (* ?x9132 l_0_6_74)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x11372 (* ?x9294 l_0_6_53)))
 (let ((?x11359 (- (* (* 2.0 l_0_6_100) l_0_6_85) (* (* 2.0 l_0_6_137) l_0_6_142))))
 (let ((?x11365 (- (- ?x11359 (* (* 2.0 l_0_6_138) l_0_6_143)) (* (* 2.0 l_0_6_139) l_0_6_144))))
 (let ((?x11371 (- (- ?x11365 (* (* 2.0 l_0_6_140) l_0_6_145)) (* (* 2.0 l_0_6_141) l_0_6_146))))
 (= (+ (- ?x11371 ?x11372) ?x11374) 0.0)))))))))
(assert
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x11431 (* ?x9132 l_0_6_79)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x11429 (* ?x9294 l_0_6_58)))
 (let ((?x11427 (* l_0_6_147 l_0_6_147)))
 (let ((?x11425 (* l_0_6_146 l_0_6_146)))
 (let ((?x11423 (* l_0_6_145 l_0_6_145)))
 (let ((?x11421 (* l_0_6_144 l_0_6_144)))
 (let ((?x11422 (- (- (* (- l_0_6_142) l_0_6_142) (* l_0_6_143 l_0_6_143)) ?x11421)))
 (= (+ (- (- (- (- ?x11422 ?x11423) ?x11425) ?x11427) ?x11429) ?x11431) 0.0)))))))))))
(assert
 (let ((?x11479 (* l_0_6_73 l_0_6_73)))
 (let ((?x11477 (* l_0_6_72 l_0_6_72)))
 (let ((?x11475 (* l_0_6_71 l_0_6_71)))
 (let ((?x11473 (* l_0_6_70 l_0_6_70)))
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x11431 (* ?x9132 l_0_6_79)))
 (let ((?x11470 (* l_0_6_52 l_0_6_52)))
 (let ((?x11468 (* l_0_6_51 l_0_6_51)))
 (let ((?x11466 (* l_0_6_50 l_0_6_50)))
 (let ((?x11464 (* l_0_6_49 l_0_6_49)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x11429 (* ?x9294 l_0_6_58)))
 (let ((?x10840 (* 4.0 l_0_6_115)))
 (let ((?x10919 (* ?x10840 l_0_6_124)))
 (let ((?x10837 (* 4.0 l_0_6_114)))
 (let ((?x10917 (* ?x10837 l_0_6_123)))
 (let ((?x10834 (* 4.0 l_0_6_113)))
 (let ((?x10915 (* ?x10834 l_0_6_122)))
 (let ((?x10831 (* 4.0 l_0_6_112)))
 (let ((?x10913 (* ?x10831 l_0_6_121)))
 (let ((?x11469 (- (- (- (+ (+ (+ (+ ?x10913 ?x10915) ?x10917) ?x10919) ?x11429) ?x11464) ?x11466) ?x11468)))
 (= (+ (+ (+ (+ (- (- ?x11469 ?x11470) ?x11431) ?x11473) ?x11475) ?x11477) ?x11479) 0.0)))))))))))))))))))))))
(assert
 (let ((?x11535 (* 2.0 l_0_6_73)))
 (let ((?x11536 (* ?x11535 l_0_6_77)))
 (let ((?x11532 (* 2.0 l_0_6_72)))
 (let ((?x11533 (* ?x11532 l_0_6_76)))
 (let ((?x11529 (* 2.0 l_0_6_71)))
 (let ((?x11530 (* ?x11529 l_0_6_75)))
 (let ((?x11526 (* 2.0 l_0_6_70)))
 (let ((?x11527 (* ?x11526 l_0_6_74)))
 (let ((?x11523 (* 2.0 l_0_6_52)))
 (let ((?x11524 (* ?x11523 l_0_6_56)))
 (let ((?x11520 (* 2.0 l_0_6_51)))
 (let ((?x11521 (* ?x11520 l_0_6_55)))
 (let ((?x11517 (* 2.0 l_0_6_50)))
 (let ((?x11518 (* ?x11517 l_0_6_54)))
 (let ((?x11514 (* 2.0 l_0_6_49)))
 (let ((?x11515 (* ?x11514 l_0_6_53)))
 (let ((?x11085 (* (* 4.0 l_0_6_120) l_0_6_125)))
 (let ((?x11082 (* (* 4.0 l_0_6_119) l_0_6_124)))
 (let ((?x11079 (* (* 4.0 l_0_6_118) l_0_6_123)))
 (let ((?x11076 (* (* 4.0 l_0_6_117) l_0_6_122)))
 (let ((?x11073 (* (* 4.0 l_0_6_116) l_0_6_121)))
 (let ((?x11503 (+ (* (* 2.0 l_0_6_100) l_0_6_91) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x11508 (+ (+ ?x11503 (* (* 2.0 l_0_6_102) l_0_6_93)) (* (* 2.0 l_0_6_103) l_0_6_94))))
 (let ((?x11519 (- (- (+ (+ (+ (+ (+ ?x11508 ?x11073) ?x11076) ?x11079) ?x11082) ?x11085) ?x11515) ?x11518)))
 (= (+ (+ (+ (+ (- (- ?x11519 ?x11521) ?x11524) ?x11527) ?x11530) ?x11533) ?x11536) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x11535 (* 2.0 l_0_6_73)))
 (let ((?x11601 (* ?x11535 l_0_6_82)))
 (let ((?x11532 (* 2.0 l_0_6_72)))
 (let ((?x11599 (* ?x11532 l_0_6_81)))
 (let ((?x11529 (* 2.0 l_0_6_71)))
 (let ((?x11597 (* ?x11529 l_0_6_80)))
 (let ((?x11526 (* 2.0 l_0_6_70)))
 (let ((?x11595 (* ?x11526 l_0_6_79)))
 (let ((?x11523 (* 2.0 l_0_6_52)))
 (let ((?x11593 (* ?x11523 l_0_6_61)))
 (let ((?x11520 (* 2.0 l_0_6_51)))
 (let ((?x11591 (* ?x11520 l_0_6_60)))
 (let ((?x11517 (* 2.0 l_0_6_50)))
 (let ((?x11589 (* ?x11517 l_0_6_59)))
 (let ((?x11514 (* 2.0 l_0_6_49)))
 (let ((?x11587 (* ?x11514 l_0_6_58)))
 (let ((?x10409 (* l_0_6_126 l_0_6_126)))
 (let ((?x11250 (* 2.0 ?x10409)))
 (let ((?x10406 (* l_0_6_125 l_0_6_125)))
 (let ((?x11245 (* 2.0 ?x10406)))
 (let ((?x10403 (* l_0_6_124 l_0_6_124)))
 (let ((?x11240 (* 2.0 ?x10403)))
 (let ((?x10400 (* l_0_6_123 l_0_6_123)))
 (let ((?x11235 (* 2.0 ?x10400)))
 (let ((?x10397 (* l_0_6_122 l_0_6_122)))
 (let ((?x11230 (* 2.0 ?x10397)))
 (let ((?x10395 (* l_0_6_121 l_0_6_121)))
 (let ((?x11290 (* 2.0 ?x10395)))
 (let ((?x11590 (- (- (+ (+ (+ (+ (+ ?x11290 ?x11230) ?x11235) ?x11240) ?x11245) ?x11250) ?x11587) ?x11589)))
 (= (+ (+ (+ (+ (- (- ?x11590 ?x11591) ?x11593) ?x11595) ?x11597) ?x11599) ?x11601) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x11667 (* l_0_6_78 l_0_6_78)))
 (let ((?x11665 (* l_0_6_77 l_0_6_77)))
 (let ((?x11663 (* l_0_6_76 l_0_6_76)))
 (let ((?x11661 (* l_0_6_75 l_0_6_75)))
 (let ((?x11659 (* l_0_6_74 l_0_6_74)))
 (let ((?x11657 (* l_0_6_57 l_0_6_57)))
 (let ((?x11655 (* l_0_6_56 l_0_6_56)))
 (let ((?x11653 (* l_0_6_55 l_0_6_55)))
 (let ((?x11651 (* l_0_6_54 l_0_6_54)))
 (let ((?x11649 (* l_0_6_53 l_0_6_53)))
 (let ((?x11641 (+ (* (* 2.0 l_0_6_100) l_0_6_95) (* (* 2.0 l_0_6_101) l_0_6_96))))
 (let ((?x11645 (+ (+ ?x11641 (* (* 2.0 l_0_6_102) l_0_6_97)) (* (* 2.0 l_0_6_103) l_0_6_98))))
 (let ((?x11654 (- (- (- (+ ?x11645 (* (* 2.0 l_0_6_104) l_0_6_99)) ?x11649) ?x11651) ?x11653)))
 (let ((?x11668 (+ (+ (+ (+ (+ (- (- ?x11654 ?x11655) ?x11657) ?x11659) ?x11661) ?x11663) ?x11665) ?x11667)))
 (= ?x11668 0.0))))))))))))))))
(assert
 (let ((?x11746 (* 2.0 l_0_6_78)))
 (let ((?x11747 (* ?x11746 l_0_6_83)))
 (let ((?x11743 (* 2.0 l_0_6_77)))
 (let ((?x11744 (* ?x11743 l_0_6_82)))
 (let ((?x11740 (* 2.0 l_0_6_76)))
 (let ((?x11741 (* ?x11740 l_0_6_81)))
 (let ((?x11737 (* 2.0 l_0_6_75)))
 (let ((?x11738 (* ?x11737 l_0_6_80)))
 (let ((?x11734 (* 2.0 l_0_6_74)))
 (let ((?x11735 (* ?x11734 l_0_6_79)))
 (let ((?x11732 (* (* 2.0 l_0_6_57) l_0_6_62)))
 (let ((?x11729 (* (* 2.0 l_0_6_56) l_0_6_61)))
 (let ((?x11726 (* (* 2.0 l_0_6_55) l_0_6_60)))
 (let ((?x11723 (* (* 2.0 l_0_6_54) l_0_6_59)))
 (let ((?x11720 (* (* 2.0 l_0_6_53) l_0_6_58)))
 (let ((?x11717 (* l_0_6_105 l_0_6_105)))
 (let ((?x11715 (* l_0_6_104 l_0_6_104)))
 (let ((?x11713 (* l_0_6_103 l_0_6_103)))
 (let ((?x11711 (* l_0_6_102 l_0_6_102)))
 (let ((?x11714 (+ (+ (+ (* l_0_6_100 l_0_6_100) (* l_0_6_101 l_0_6_101)) ?x11711) ?x11713)))
 (let ((?x11733 (- (- (- (- (- (+ (+ ?x11714 ?x11715) ?x11717) ?x11720) ?x11723) ?x11726) ?x11729) ?x11732)))
 (= (+ (+ (+ (+ (+ ?x11733 ?x11735) ?x11738) ?x11741) ?x11744) ?x11747) 0.0)))))))))))))))))))))))
(assert
 (let ((?x11815 (* l_0_6_84 l_0_6_84)))
 (let ((?x11813 (* l_0_6_83 l_0_6_83)))
 (let ((?x11811 (* l_0_6_82 l_0_6_82)))
 (let ((?x11809 (* l_0_6_81 l_0_6_81)))
 (let ((?x11807 (* l_0_6_80 l_0_6_80)))
 (let ((?x11805 (* l_0_6_79 l_0_6_79)))
 (let ((?x11803 (* l_0_6_63 l_0_6_63)))
 (let ((?x11801 (* l_0_6_62 l_0_6_62)))
 (let ((?x11799 (* l_0_6_61 l_0_6_61)))
 (let ((?x11797 (* l_0_6_60 l_0_6_60)))
 (let ((?x11800 (- (- (- (* (- l_0_6_58) l_0_6_58) (* l_0_6_59 l_0_6_59)) ?x11797) ?x11799)))
 (let ((?x11814 (+ (+ (+ (+ (+ (- (- ?x11800 ?x11801) ?x11803) ?x11805) ?x11807) ?x11809) ?x11811) ?x11813)))
 (= (+ ?x11814 ?x11815) 0.0))))))))))))))
(assert
 (let ((?x9169 (* l_0_6_64 l_0_6_64)))
 (let ((?x9129 (* l_0_6_43 l_0_6_43)))
 (let ((?x11850 (* l_0_6_136 l_0_6_136)))
 (let ((?x11848 (* l_0_6_135 l_0_6_135)))
 (let ((?x11846 (* l_0_6_134 l_0_6_134)))
 (let ((?x11847 (- (- (* (* 4.0 l_0_6_106) l_0_6_112) (* l_0_6_133 l_0_6_133)) ?x11846)))
 (= (- (+ (- (- ?x11847 ?x11848) ?x11850) ?x9129) ?x9169) 0.0))))))))
(assert
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x11321 (* ?x9132 l_0_6_70)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x11319 (* ?x9294 l_0_6_49)))
 (let ((?x10022 (* l_0_6_115 l_0_6_115)))
 (let ((?x10806 (* 2.0 ?x10022)))
 (let ((?x10019 (* l_0_6_114 l_0_6_114)))
 (let ((?x10801 (* 2.0 ?x10019)))
 (let ((?x10016 (* l_0_6_113 l_0_6_113)))
 (let ((?x10796 (* 2.0 ?x10016)))
 (let ((?x10013 (* l_0_6_112 l_0_6_112)))
 (let ((?x10791 (* 2.0 ?x10013)))
 (= (- (+ (+ (+ (+ ?x10791 ?x10796) ?x10801) ?x10806) ?x11319) ?x11321) 0.0))))))))))))))
(assert
 (let ((?x11893 (* l_0_6_94 l_0_6_94)))
 (let ((?x11891 (* l_0_6_93 l_0_6_93)))
 (let ((?x11889 (* l_0_6_92 l_0_6_92)))
 (let ((?x11887 (* l_0_6_91 l_0_6_91)))
 (let ((?x9132 (* 2.0 l_0_6_64)))
 (let ((?x11374 (* ?x9132 l_0_6_74)))
 (let ((?x9294 (* 2.0 l_0_6_43)))
 (let ((?x11372 (* ?x9294 l_0_6_53)))
 (let ((?x10840 (* 4.0 l_0_6_115)))
 (let ((?x10841 (* ?x10840 l_0_6_119)))
 (let ((?x10837 (* 4.0 l_0_6_114)))
 (let ((?x10838 (* ?x10837 l_0_6_118)))
 (let ((?x10834 (* 4.0 l_0_6_113)))
 (let ((?x10835 (* ?x10834 l_0_6_117)))
 (let ((?x10831 (* 4.0 l_0_6_112)))
 (let ((?x10832 (* ?x10831 l_0_6_116)))
 (let ((?x11890 (+ (+ (- (+ (+ (+ (+ ?x10832 ?x10835) ?x10838) ?x10841) ?x11372) ?x11374) ?x11887) ?x11889)))
 (= (+ (+ ?x11890 ?x11891) ?x11893) 0.0)))))))))))))))))))
(assert
 (let ((?x10736 (* l_0_6_66 l_0_6_66)))
 (let ((?x10734 (* l_0_6_65 l_0_6_65)))
 (let ((?x11905 (- (- (+ (* l_0_6_44 l_0_6_44) (* l_0_6_45 l_0_6_45)) ?x10734) ?x10736)))
 (= ?x11905 0.0)))))
(assert
 (let ((?x9753 (* 2.0 l_0_6_66)))
 (let ((?x9754 (* ?x9753 l_0_6_68)))
 (let ((?x9750 (* 2.0 l_0_6_65)))
 (let ((?x9751 (* ?x9750 l_0_6_67)))
 (let ((?x11470 (* l_0_6_52 l_0_6_52)))
 (let ((?x11919 (* 2.0 ?x11470)))
 (let ((?x11468 (* l_0_6_51 l_0_6_51)))
 (let ((?x11917 (* 2.0 ?x11468)))
 (let ((?x11466 (* l_0_6_50 l_0_6_50)))
 (let ((?x11915 (* 2.0 ?x11466)))
 (let ((?x11464 (* l_0_6_49 l_0_6_49)))
 (let ((?x11913 (* 2.0 ?x11464)))
 (let ((?x9745 (* 2.0 l_0_6_45)))
 (let ((?x9746 (* ?x9745 l_0_6_47)))
 (let ((?x9742 (* 2.0 l_0_6_44)))
 (let ((?x9743 (* ?x9742 l_0_6_46)))
 (let ((?x11922 (- (- (+ (+ (+ (+ (+ ?x9743 ?x9746) ?x11913) ?x11915) ?x11917) ?x11919) ?x9751) ?x9754)))
 (let ((?x11926 (- (- ?x11922 (* (* 2.0 l_0_6_70) l_0_6_70)) (* (* 2.0 l_0_6_71) l_0_6_71))))
 (let ((?x11930 (- (- ?x11926 (* (* 2.0 l_0_6_72) l_0_6_72)) (* (* 2.0 l_0_6_73) l_0_6_73))))
 (let ((?x11936 (- (- ?x11930 (* (* 2.0 l_0_6_91) l_0_6_91)) (* (* 2.0 l_0_6_92) l_0_6_92))))
 (let ((?x11942 (- (- ?x11936 (* (* 2.0 l_0_6_93) l_0_6_93)) (* (* 2.0 l_0_6_94) l_0_6_94))))
 (= ?x11942 0.0)))))))))))))))))))))))
(assert
 (let ((?x9753 (* 2.0 l_0_6_66)))
 (let ((?x10935 (* ?x9753 l_0_6_71)))
 (let ((?x9750 (* 2.0 l_0_6_65)))
 (let ((?x10933 (* ?x9750 l_0_6_70)))
 (let ((?x9745 (* 2.0 l_0_6_45)))
 (let ((?x10931 (* ?x9745 l_0_6_50)))
 (let ((?x9742 (* 2.0 l_0_6_44)))
 (let ((?x10929 (* ?x9742 l_0_6_49)))
 (= (- (- (+ ?x10929 ?x10931) ?x10933) ?x10935) 0.0))))))))))
(assert
 (let ((?x9753 (* 2.0 l_0_6_66)))
 (let ((?x11108 (* ?x9753 l_0_6_75)))
 (let ((?x9750 (* 2.0 l_0_6_65)))
 (let ((?x11106 (* ?x9750 l_0_6_74)))
 (let ((?x9745 (* 2.0 l_0_6_45)))
 (let ((?x11104 (* ?x9745 l_0_6_54)))
 (let ((?x9742 (* 2.0 l_0_6_44)))
 (let ((?x11102 (* ?x9742 l_0_6_53)))
 (= (- (- (+ ?x11102 ?x11104) ?x11106) ?x11108) 0.0))))))))))
(assert
 (let ((?x9753 (* 2.0 l_0_6_66)))
 (let ((?x11226 (* ?x9753 l_0_6_80)))
 (let ((?x9750 (* 2.0 l_0_6_65)))
 (let ((?x11224 (* ?x9750 l_0_6_79)))
 (let ((?x9745 (* 2.0 l_0_6_45)))
 (let ((?x11222 (* ?x9745 l_0_6_59)))
 (let ((?x9742 (* 2.0 l_0_6_44)))
 (let ((?x11220 (* ?x9742 l_0_6_58)))
 (= (- (- (+ ?x11220 ?x11222) ?x11224) ?x11226) 0.0))))))))))
(assert
 (let ((?x9972 (* l_0_6_69 l_0_6_69)))
 (let ((?x9970 (* l_0_6_68 l_0_6_68)))
 (let ((?x9968 (* l_0_6_67 l_0_6_67)))
 (let ((?x9966 (* l_0_6_48 l_0_6_48)))
 (let ((?x12038 (- (+ (+ (* l_0_6_46 l_0_6_46) (* l_0_6_47 l_0_6_47)) ?x9966) ?x9968)))
 (= (- (- ?x12038 ?x9970) ?x9972) 0.0)))))))
(assert
 (let ((?x10156 (* 2.0 l_0_6_69)))
 (let ((?x10157 (* ?x10156 l_0_6_72)))
 (let ((?x10153 (* 2.0 l_0_6_68)))
 (let ((?x10154 (* ?x10153 l_0_6_71)))
 (let ((?x10150 (* 2.0 l_0_6_67)))
 (let ((?x10151 (* ?x10150 l_0_6_70)))
 (let ((?x10147 (* 2.0 l_0_6_48)))
 (let ((?x10148 (* ?x10147 l_0_6_51)))
 (let ((?x10144 (* 2.0 l_0_6_47)))
 (let ((?x10145 (* ?x10144 l_0_6_50)))
 (let ((?x10141 (* 2.0 l_0_6_46)))
 (let ((?x10142 (* ?x10141 l_0_6_49)))
 (= (- (- (- (+ (+ ?x10142 ?x10145) ?x10148) ?x10151) ?x10154) ?x10157) 0.0))))))))))))))
(assert
 (let ((?x10156 (* 2.0 l_0_6_69)))
 (let ((?x10317 (* ?x10156 l_0_6_76)))
 (let ((?x10153 (* 2.0 l_0_6_68)))
 (let ((?x10315 (* ?x10153 l_0_6_75)))
 (let ((?x10150 (* 2.0 l_0_6_67)))
 (let ((?x10313 (* ?x10150 l_0_6_74)))
 (let ((?x10147 (* 2.0 l_0_6_48)))
 (let ((?x10311 (* ?x10147 l_0_6_55)))
 (let ((?x10144 (* 2.0 l_0_6_47)))
 (let ((?x10309 (* ?x10144 l_0_6_54)))
 (let ((?x10141 (* 2.0 l_0_6_46)))
 (let ((?x10307 (* ?x10141 l_0_6_53)))
 (= (- (- (- (+ (+ ?x10307 ?x10309) ?x10311) ?x10313) ?x10315) ?x10317) 0.0))))))))))))))
(assert
 (let ((?x10156 (* 2.0 l_0_6_69)))
 (let ((?x10434 (* ?x10156 l_0_6_81)))
 (let ((?x10153 (* 2.0 l_0_6_68)))
 (let ((?x10432 (* ?x10153 l_0_6_80)))
 (let ((?x10150 (* 2.0 l_0_6_67)))
 (let ((?x10430 (* ?x10150 l_0_6_79)))
 (let ((?x10147 (* 2.0 l_0_6_48)))
 (let ((?x10428 (* ?x10147 l_0_6_60)))
 (let ((?x10144 (* 2.0 l_0_6_47)))
 (let ((?x10426 (* ?x10144 l_0_6_59)))
 (let ((?x10141 (* 2.0 l_0_6_46)))
 (let ((?x10424 (* ?x10141 l_0_6_58)))
 (= (- (- (- (+ (+ ?x10424 ?x10426) ?x10428) ?x10430) ?x10432) ?x10434) 0.0))))))))))))))
(assert
 (let ((?x11479 (* l_0_6_73 l_0_6_73)))
 (let ((?x11477 (* l_0_6_72 l_0_6_72)))
 (let ((?x11475 (* l_0_6_71 l_0_6_71)))
 (let ((?x11473 (* l_0_6_70 l_0_6_70)))
 (let ((?x11470 (* l_0_6_52 l_0_6_52)))
 (let ((?x11468 (* l_0_6_51 l_0_6_51)))
 (let ((?x12115 (+ (+ (+ (* l_0_6_49 l_0_6_49) (* l_0_6_50 l_0_6_50)) ?x11468) ?x11470)))
 (= (- (- (- (- ?x12115 ?x11473) ?x11475) ?x11477) ?x11479) 0.0)))))))))
(assert
 (let ((?x11535 (* 2.0 l_0_6_73)))
 (let ((?x11536 (* ?x11535 l_0_6_77)))
 (let ((?x11532 (* 2.0 l_0_6_72)))
 (let ((?x11533 (* ?x11532 l_0_6_76)))
 (let ((?x11529 (* 2.0 l_0_6_71)))
 (let ((?x11530 (* ?x11529 l_0_6_75)))
 (let ((?x11526 (* 2.0 l_0_6_70)))
 (let ((?x11527 (* ?x11526 l_0_6_74)))
 (let ((?x11523 (* 2.0 l_0_6_52)))
 (let ((?x11524 (* ?x11523 l_0_6_56)))
 (let ((?x11520 (* 2.0 l_0_6_51)))
 (let ((?x11521 (* ?x11520 l_0_6_55)))
 (let ((?x11517 (* 2.0 l_0_6_50)))
 (let ((?x11518 (* ?x11517 l_0_6_54)))
 (let ((?x11514 (* 2.0 l_0_6_49)))
 (let ((?x11515 (* ?x11514 l_0_6_53)))
 (let ((?x12141 (- (- (- (- (+ (+ (+ ?x11515 ?x11518) ?x11521) ?x11524) ?x11527) ?x11530) ?x11533) ?x11536)))
 (= ?x12141 0.0)))))))))))))))))))
(assert
 (let ((?x11535 (* 2.0 l_0_6_73)))
 (let ((?x11601 (* ?x11535 l_0_6_82)))
 (let ((?x11532 (* 2.0 l_0_6_72)))
 (let ((?x11599 (* ?x11532 l_0_6_81)))
 (let ((?x11529 (* 2.0 l_0_6_71)))
 (let ((?x11597 (* ?x11529 l_0_6_80)))
 (let ((?x11526 (* 2.0 l_0_6_70)))
 (let ((?x11595 (* ?x11526 l_0_6_79)))
 (let ((?x11523 (* 2.0 l_0_6_52)))
 (let ((?x11593 (* ?x11523 l_0_6_61)))
 (let ((?x11520 (* 2.0 l_0_6_51)))
 (let ((?x11591 (* ?x11520 l_0_6_60)))
 (let ((?x11517 (* 2.0 l_0_6_50)))
 (let ((?x11589 (* ?x11517 l_0_6_59)))
 (let ((?x11514 (* 2.0 l_0_6_49)))
 (let ((?x11587 (* ?x11514 l_0_6_58)))
 (let ((?x12167 (- (- (- (- (+ (+ (+ ?x11587 ?x11589) ?x11591) ?x11593) ?x11595) ?x11597) ?x11599) ?x11601)))
 (= ?x12167 0.0)))))))))))))))))))
(assert
 (let ((?x11667 (* l_0_6_78 l_0_6_78)))
 (let ((?x11665 (* l_0_6_77 l_0_6_77)))
 (let ((?x11663 (* l_0_6_76 l_0_6_76)))
 (let ((?x11661 (* l_0_6_75 l_0_6_75)))
 (let ((?x11659 (* l_0_6_74 l_0_6_74)))
 (let ((?x11657 (* l_0_6_57 l_0_6_57)))
 (let ((?x11655 (* l_0_6_56 l_0_6_56)))
 (let ((?x11653 (* l_0_6_55 l_0_6_55)))
 (let ((?x12189 (+ (+ (+ (* l_0_6_53 l_0_6_53) (* l_0_6_54 l_0_6_54)) ?x11653) ?x11655)))
 (= (- (- (- (- (- (+ ?x12189 ?x11657) ?x11659) ?x11661) ?x11663) ?x11665) ?x11667) 0.0)))))))))))
(assert
 (let ((?x11746 (* 2.0 l_0_6_78)))
 (let ((?x11747 (* ?x11746 l_0_6_83)))
 (let ((?x11743 (* 2.0 l_0_6_77)))
 (let ((?x11744 (* ?x11743 l_0_6_82)))
 (let ((?x11740 (* 2.0 l_0_6_76)))
 (let ((?x11741 (* ?x11740 l_0_6_81)))
 (let ((?x11737 (* 2.0 l_0_6_75)))
 (let ((?x11738 (* ?x11737 l_0_6_80)))
 (let ((?x11734 (* 2.0 l_0_6_74)))
 (let ((?x11735 (* ?x11734 l_0_6_79)))
 (let ((?x11732 (* (* 2.0 l_0_6_57) l_0_6_62)))
 (let ((?x11729 (* (* 2.0 l_0_6_56) l_0_6_61)))
 (let ((?x11726 (* (* 2.0 l_0_6_55) l_0_6_60)))
 (let ((?x11723 (* (* 2.0 l_0_6_54) l_0_6_59)))
 (let ((?x11720 (* (* 2.0 l_0_6_53) l_0_6_58)))
 (let ((?x12215 (- (- (- (+ (+ (+ (+ ?x11720 ?x11723) ?x11726) ?x11729) ?x11732) ?x11735) ?x11738) ?x11741)))
 (= (- (- ?x12215 ?x11744) ?x11747) 0.0))))))))))))))))))
(assert
 (let ((?x11815 (* l_0_6_84 l_0_6_84)))
 (let ((?x11813 (* l_0_6_83 l_0_6_83)))
 (let ((?x11811 (* l_0_6_82 l_0_6_82)))
 (let ((?x11809 (* l_0_6_81 l_0_6_81)))
 (let ((?x11807 (* l_0_6_80 l_0_6_80)))
 (let ((?x11805 (* l_0_6_79 l_0_6_79)))
 (let ((?x11803 (* l_0_6_63 l_0_6_63)))
 (let ((?x11801 (* l_0_6_62 l_0_6_62)))
 (let ((?x11799 (* l_0_6_61 l_0_6_61)))
 (let ((?x11797 (* l_0_6_60 l_0_6_60)))
 (let ((?x12243 (+ (+ (+ (* l_0_6_58 l_0_6_58) (* l_0_6_59 l_0_6_59)) ?x11797) ?x11799)))
 (let ((?x12250 (- (- (- (- (- (+ (+ ?x12243 ?x11801) ?x11803) ?x11805) ?x11807) ?x11809) ?x11811) ?x11813)))
 (= (- ?x12250 ?x11815) 0.0))))))))))))))
(assert
 (let ((?x1829 (+ (* 2.0 (* l_0_6_44 l_0_6_44)) (* 2.0 (* l_0_6_45 l_0_6_45)))))
 (let ((?x1799 (- (- ?x1829 (* (* 2.0 l_0_6_65) l_0_6_65)) (* (* 2.0 l_0_6_66) l_0_6_66))))
 (let ((?x1770 (- (- ?x1799 (* (* 2.0 l_0_6_86) l_0_6_86)) (* (* 2.0 l_0_6_87) l_0_6_87))))
 (= ?x1770 0.0)))))
(assert
 (let ((?x12277 (+ (* (* 4.0 l_0_6_44) l_0_6_46) (* (* 4.0 l_0_6_45) l_0_6_47))))
 (let ((?x12283 (- (- ?x12277 (* (* 4.0 l_0_6_65) l_0_6_67)) (* (* 4.0 l_0_6_66) l_0_6_68))))
 (let ((?x12289 (- (- ?x12283 (* (* 4.0 l_0_6_86) l_0_6_88)) (* (* 4.0 l_0_6_87) l_0_6_89))))
 (= ?x12289 0.0)))))
(assert
 (let ((?x1923 (+ (* (* 4.0 l_0_6_44) l_0_6_49) (* (* 4.0 l_0_6_45) l_0_6_50))))
 (let ((?x12306 (- (- ?x1923 (* (* 4.0 l_0_6_65) l_0_6_70)) (* (* 4.0 l_0_6_66) l_0_6_71))))
 (let ((?x12310 (- (- ?x12306 (* (* 4.0 l_0_6_86) l_0_6_91)) (* (* 4.0 l_0_6_87) l_0_6_92))))
 (= ?x12310 0.0)))))
(assert
 (let ((?x12318 (+ (* (* 4.0 l_0_6_44) l_0_6_53) (* (* 4.0 l_0_6_45) l_0_6_54))))
 (let ((?x12322 (- (- ?x12318 (* (* 4.0 l_0_6_65) l_0_6_74)) (* (* 4.0 l_0_6_66) l_0_6_75))))
 (let ((?x12326 (- (- ?x12322 (* (* 4.0 l_0_6_86) l_0_6_95)) (* (* 4.0 l_0_6_87) l_0_6_96))))
 (= ?x12326 0.0)))))
(assert
 (let ((?x12348 (- (* (* (- 4.0) l_0_6_100) l_0_6_86) (* (* 4.0 l_0_6_101) l_0_6_87))))
 (let ((?x12352 (+ (+ ?x12348 (* (* 4.0 l_0_6_44) l_0_6_58)) (* (* 4.0 l_0_6_45) l_0_6_59))))
 (let ((?x12356 (- (- ?x12352 (* (* 4.0 l_0_6_65) l_0_6_79)) (* (* 4.0 l_0_6_66) l_0_6_80))))
 (= ?x12356 0.0)))))
(assert
 (let ((?x12374 (+ (* 2.0 (* l_0_6_46 l_0_6_46)) (* 2.0 (* l_0_6_47 l_0_6_47)))))
 (let ((?x12378 (- (+ ?x12374 (* 2.0 (* l_0_6_48 l_0_6_48))) (* (* 2.0 l_0_6_67) l_0_6_67))))
 (let ((?x12382 (- (- ?x12378 (* (* 2.0 l_0_6_68) l_0_6_68)) (* (* 2.0 l_0_6_69) l_0_6_69))))
 (let ((?x12386 (- (- ?x12382 (* (* 2.0 l_0_6_88) l_0_6_88)) (* (* 2.0 l_0_6_89) l_0_6_89))))
 (= (- ?x12386 (* (* 2.0 l_0_6_90) l_0_6_90)) 0.0))))))
(assert
 (let ((?x12417 (+ (* (* 4.0 l_0_6_46) l_0_6_49) (* (* 4.0 l_0_6_47) l_0_6_50))))
 (let ((?x12423 (- (+ ?x12417 (* (* 4.0 l_0_6_48) l_0_6_51)) (* (* 4.0 l_0_6_67) l_0_6_70))))
 (let ((?x12429 (- (- ?x12423 (* (* 4.0 l_0_6_68) l_0_6_71)) (* (* 4.0 l_0_6_69) l_0_6_72))))
 (let ((?x12435 (- (- ?x12429 (* (* 4.0 l_0_6_88) l_0_6_91)) (* (* 4.0 l_0_6_89) l_0_6_92))))
 (= (- ?x12435 (* (* 4.0 l_0_6_90) l_0_6_93)) 0.0))))))
(assert
 (let ((?x12462 (+ (* (* 4.0 l_0_6_46) l_0_6_53) (* (* 4.0 l_0_6_47) l_0_6_54))))
 (let ((?x12466 (- (+ ?x12462 (* (* 4.0 l_0_6_48) l_0_6_55)) (* (* 4.0 l_0_6_67) l_0_6_74))))
 (let ((?x12470 (- (- ?x12466 (* (* 4.0 l_0_6_68) l_0_6_75)) (* (* 4.0 l_0_6_69) l_0_6_76))))
 (let ((?x12474 (- (- ?x12470 (* (* 4.0 l_0_6_88) l_0_6_95)) (* (* 4.0 l_0_6_89) l_0_6_96))))
 (= (- ?x12474 (* (* 4.0 l_0_6_90) l_0_6_97)) 0.0))))))
(assert
 (let ((?x2211 (- (* (* (- 4.0) l_0_6_100) l_0_6_88) (* (* 4.0 l_0_6_101) l_0_6_89))))
 (let ((?x2196 (+ (- ?x2211 (* (* 4.0 l_0_6_102) l_0_6_90)) (* (* 4.0 l_0_6_46) l_0_6_58))))
 (let ((?x12491 (+ (+ ?x2196 (* (* 4.0 l_0_6_47) l_0_6_59)) (* (* 4.0 l_0_6_48) l_0_6_60))))
 (let ((?x12495 (- (- ?x12491 (* (* 4.0 l_0_6_67) l_0_6_79)) (* (* 4.0 l_0_6_68) l_0_6_80))))
 (= (- ?x12495 (* (* 4.0 l_0_6_69) l_0_6_81)) 0.0))))))
(assert
 (let ((?x12532 (+ (* (* 4.0 l_0_6_49) l_0_6_53) (* (* 4.0 l_0_6_50) l_0_6_54))))
 (let ((?x12538 (+ (+ ?x12532 (* (* 4.0 l_0_6_51) l_0_6_55)) (* (* 4.0 l_0_6_52) l_0_6_56))))
 (let ((?x12544 (- (- ?x12538 (* (* 4.0 l_0_6_70) l_0_6_74)) (* (* 4.0 l_0_6_71) l_0_6_75))))
 (let ((?x12550 (- (- ?x12544 (* (* 4.0 l_0_6_72) l_0_6_76)) (* (* 4.0 l_0_6_73) l_0_6_77))))
 (let ((?x12556 (- (- ?x12550 (* (* 4.0 l_0_6_91) l_0_6_95)) (* (* 4.0 l_0_6_92) l_0_6_96))))
 (let ((?x12562 (- (- ?x12556 (* (* 4.0 l_0_6_93) l_0_6_97)) (* (* 4.0 l_0_6_94) l_0_6_98))))
 (= ?x12562 0.0))))))))
(assert
 (let ((?x2312 (- (* (* (- 4.0) l_0_6_100) l_0_6_91) (* (* 4.0 l_0_6_101) l_0_6_92))))
 (let ((?x12598 (- (- ?x2312 (* (* 4.0 l_0_6_102) l_0_6_93)) (* (* 4.0 l_0_6_103) l_0_6_94))))
 (let ((?x12602 (+ (+ ?x12598 (* (* 4.0 l_0_6_49) l_0_6_58)) (* (* 4.0 l_0_6_50) l_0_6_59))))
 (let ((?x12606 (+ (+ ?x12602 (* (* 4.0 l_0_6_51) l_0_6_60)) (* (* 4.0 l_0_6_52) l_0_6_61))))
 (let ((?x12610 (- (- ?x12606 (* (* 4.0 l_0_6_70) l_0_6_79)) (* (* 4.0 l_0_6_71) l_0_6_80))))
 (let ((?x12614 (- (- ?x12610 (* (* 4.0 l_0_6_72) l_0_6_81)) (* (* 4.0 l_0_6_73) l_0_6_82))))
 (= ?x12614 0.0))))))))
(assert
 (let ((?x2393 (+ (* 2.0 (* l_0_6_53 l_0_6_53)) (* 2.0 (* l_0_6_54 l_0_6_54)))))
 (let ((?x12634 (+ (+ ?x2393 (* 2.0 (* l_0_6_55 l_0_6_55))) (* 2.0 (* l_0_6_56 l_0_6_56)))))
 (let ((?x12638 (- (+ ?x12634 (* 2.0 (* l_0_6_57 l_0_6_57))) (* (* 2.0 l_0_6_74) l_0_6_74))))
 (let ((?x12642 (- (- ?x12638 (* (* 2.0 l_0_6_75) l_0_6_75)) (* (* 2.0 l_0_6_76) l_0_6_76))))
 (let ((?x12646 (- (- ?x12642 (* (* 2.0 l_0_6_77) l_0_6_77)) (* (* 2.0 l_0_6_78) l_0_6_78))))
 (let ((?x12652 (- (- ?x12646 (* (* 2.0 l_0_6_95) l_0_6_95)) (* (* 2.0 l_0_6_96) l_0_6_96))))
 (let ((?x12658 (- (- ?x12652 (* (* 2.0 l_0_6_97) l_0_6_97)) (* (* 2.0 l_0_6_98) l_0_6_98))))
 (= (- ?x12658 (* (* 2.0 l_0_6_99) l_0_6_99)) 0.0)))))))))
(assert
 (let ((?x12692 (- (* (* (- 4.0) l_0_6_100) l_0_6_95) (* (* 4.0 l_0_6_101) l_0_6_96))))
 (let ((?x12696 (- (- ?x12692 (* (* 4.0 l_0_6_102) l_0_6_97)) (* (* 4.0 l_0_6_103) l_0_6_98))))
 (let ((?x12702 (+ (- ?x12696 (* (* 4.0 l_0_6_104) l_0_6_99)) (* (* 4.0 l_0_6_53) l_0_6_58))))
 (let ((?x12708 (+ (+ ?x12702 (* (* 4.0 l_0_6_54) l_0_6_59)) (* (* 4.0 l_0_6_55) l_0_6_60))))
 (let ((?x12714 (+ (+ ?x12708 (* (* 4.0 l_0_6_56) l_0_6_61)) (* (* 4.0 l_0_6_57) l_0_6_62))))
 (let ((?x12720 (- (- ?x12714 (* (* 4.0 l_0_6_74) l_0_6_79)) (* (* 4.0 l_0_6_75) l_0_6_80))))
 (let ((?x12726 (- (- ?x12720 (* (* 4.0 l_0_6_76) l_0_6_81)) (* (* 4.0 l_0_6_77) l_0_6_82))))
 (= (- ?x12726 (* (* 4.0 l_0_6_78) l_0_6_83)) 0.0)))))))))
(assert
 (let ((?x12765 (- (* (* (- 2.0) l_0_6_100) l_0_6_100) (* (* 2.0 l_0_6_101) l_0_6_101))))
 (let ((?x12769 (- (- ?x12765 (* (* 2.0 l_0_6_102) l_0_6_102)) (* (* 2.0 l_0_6_103) l_0_6_103))))
 (let ((?x12774 (- (- ?x12769 (* (* 2.0 l_0_6_104) l_0_6_104)) (* (* 2.0 l_0_6_105) l_0_6_105))))
 (let ((?x12778 (+ (+ ?x12774 (* 2.0 (* l_0_6_58 l_0_6_58))) (* 2.0 (* l_0_6_59 l_0_6_59)))))
 (let ((?x12782 (+ (+ ?x12778 (* 2.0 (* l_0_6_60 l_0_6_60))) (* 2.0 (* l_0_6_61 l_0_6_61)))))
 (let ((?x12786 (+ (+ ?x12782 (* 2.0 (* l_0_6_62 l_0_6_62))) (* 2.0 (* l_0_6_63 l_0_6_63)))))
 (let ((?x12792 (- (- ?x12786 (* (* 2.0 l_0_6_79) l_0_6_79)) (* (* 2.0 l_0_6_80) l_0_6_80))))
 (let ((?x12798 (- (- ?x12792 (* (* 2.0 l_0_6_81) l_0_6_81)) (* (* 2.0 l_0_6_82) l_0_6_82))))
 (let ((?x12804 (- (- ?x12798 (* (* 2.0 l_0_6_83) l_0_6_83)) (* (* 2.0 l_0_6_84) l_0_6_84))))
 (= ?x12804 0.0)))))))))))
(assert
 (= (+ (* (* (- 2.0) l_0_6_127) l_0_6_137) (* l_0_6_85 l_0_6_85)) 0.0))
(assert
 (let ((?x12852 (- (* (* 4.0 l_0_6_106) l_0_6_116) (* (* 2.0 l_0_6_133) l_0_6_137))))
 (let ((?x12856 (- (- ?x12852 (* (* 2.0 l_0_6_134) l_0_6_138)) (* (* 2.0 l_0_6_135) l_0_6_139))))
 (let ((?x12860 (+ (- ?x12856 (* (* 2.0 l_0_6_136) l_0_6_140)) (* (* 2.0 l_0_6_85) l_0_6_91))))
 (= ?x12860 0.0)))))
(assert
 (let ((?x12874 (* l_0_6_141 l_0_6_141)))
 (let ((?x2705 (* l_0_6_140 l_0_6_140)))
 (let ((?x2708 (* l_0_6_139 l_0_6_139)))
 (let ((?x2702 (- (- (* (- l_0_6_137) l_0_6_137) (* l_0_6_138 l_0_6_138)) ?x2708)))
 (= (+ (- (- ?x2702 ?x2705) ?x12874) (* (* 2.0 l_0_6_85) l_0_6_95)) 0.0))))))
(assert
 (let ((?x10231 (* l_0_6_120 l_0_6_120)))
 (let ((?x11042 (* 2.0 ?x10231)))
 (let ((?x10226 (* l_0_6_119 l_0_6_119)))
 (let ((?x11037 (* 2.0 ?x10226)))
 (let ((?x10223 (* l_0_6_118 l_0_6_118)))
 (let ((?x11032 (* 2.0 ?x10223)))
 (let ((?x10220 (* l_0_6_117 l_0_6_117)))
 (let ((?x11027 (* 2.0 ?x10220)))
 (let ((?x10217 (* l_0_6_116 l_0_6_116)))
 (let ((?x11067 (* 2.0 ?x10217)))
 (let ((?x12900 (+ (+ (+ (+ (+ ?x11067 ?x11027) ?x11032) ?x11037) ?x11042) (* (* 2.0 l_0_6_91) l_0_6_95))))
 (let ((?x12904 (+ (+ ?x12900 (* (* 2.0 l_0_6_92) l_0_6_96)) (* (* 2.0 l_0_6_93) l_0_6_97))))
 (= (+ ?x12904 (* (* 2.0 l_0_6_94) l_0_6_98)) 0.0))))))))))))))
(assert
 (let ((?x2484 (* l_0_6_99 l_0_6_99)))
 (let ((?x2470 (* l_0_6_98 l_0_6_98)))
 (let ((?x2457 (* l_0_6_97 l_0_6_97)))
 (let ((?x12910 (+ (+ (+ (* l_0_6_95 l_0_6_95) (* l_0_6_96 l_0_6_96)) ?x2457) ?x2470)))
 (= (+ ?x12910 ?x2484) 0.0))))))
(assert
 (let ((?x9087 (* l_0_6_106 l_0_6_106)))
 (let ((?x10499 (* 2.0 ?x9087)))
 (= (- ?x10499 (* (* 2.0 l_0_6_127) l_0_6_133)) 0.0))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_22 0.0))
(assert
 (>= l_0_6_24 0.0))
(assert
 (>= l_0_6_27 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_42 0.0))
(assert
 (>= l_0_6_43 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_52 0.0))
(assert
 (>= l_0_6_57 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_64 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_69 0.0))
(assert
 (>= l_0_6_73 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_84 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_87 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_94 0.0))
(assert
 (>= l_0_6_99 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_106 0.0))
(assert
 (>= l_0_6_108 0.0))
(assert
 (>= l_0_6_111 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_120 0.0))
(assert
 (>= l_0_6_126 0.0))
(assert
 (>= l_0_6_127 0.0))
(assert
 (>= l_0_6_129 0.0))
(assert
 (>= l_0_6_132 0.0))
(assert
 (>= l_0_6_136 0.0))
(assert
 (>= l_0_6_141 0.0))
(assert
 (>= l_0_6_147 0.0))
(assert
 (let ((?x12971 (+ (- _a_0_ (* l_0_7_1 l_0_7_1)) (* 1.0 (* l_0_7_106 l_0_7_106)))))
 (let ((?x12977 (- (- ?x12971 (* (* 2.0 l_0_7_127) l_0_7_130)) (* (* 2.0 l_0_7_148) l_0_7_151))))
 (= ?x12977 0.0))))
(assert
 (= (- (- _a_1_ (* l_0_7_127 l_0_7_127)) (* l_0_7_148 l_0_7_148)) 0.0))
(assert
 (let ((?x13006 (- (+ _a_2_ (* 2.0 (* l_0_7_106 l_0_7_106))) (* (* 2.0 l_0_7_127) l_0_7_133))))
 (= (- ?x13006 (* (* 2.0 l_0_7_148) l_0_7_154)) 0.0)))
(assert
 (let ((?x2772 (* l_0_7_22 l_0_7_22)))
 (let ((?x2774 (- (- _a_3_ (* (* 2.0 l_0_7_106) l_0_7_106)) (* (* 2.0 l_0_7_127) l_0_7_128))))
 (= (- (- ?x2774 (* (* 2.0 l_0_7_148) l_0_7_149)) ?x2772) 0.0))))
(assert
 (let ((?x13032 (* 4.0 l_0_7_106)))
 (let ((?x13033 (* ?x13032 l_0_7_109)))
 (let ((?x13031 (+ (* (* (- 2.0) l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_106) l_0_7_107))))
 (let ((?x13040 (- (- (- ?x13031 ?x13033) (* (* 2.0 l_0_7_128) l_0_7_130)) (* (* 2.0 l_0_7_129) l_0_7_131))))
 (let ((?x13046 (- (- ?x13040 (* (* 2.0 l_0_7_149) l_0_7_151)) (* (* 2.0 l_0_7_150) l_0_7_152))))
 (let ((?x13052 (+ (- ?x13046 (* (* 2.0 l_0_7_22) l_0_7_25)) (* 2.0 (* l_0_7_43 l_0_7_43)))))
 (let ((?x13058 (- (- ?x13052 (* (* 2.0 l_0_7_64) l_0_7_64)) (* (* 2.0 l_0_7_85) l_0_7_85))))
 (= ?x13058 0.0)))))))))
(assert
 (let ((?x13103 (* l_0_7_153 l_0_7_153)))
 (let ((?x13101 (* l_0_7_152 l_0_7_152)))
 (let ((?x13099 (* l_0_7_151 l_0_7_151)))
 (let ((?x13097 (* l_0_7_132 l_0_7_132)))
 (let ((?x13095 (* l_0_7_131 l_0_7_131)))
 (let ((?x13093 (* l_0_7_130 l_0_7_130)))
 (let ((?x13092 (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_106) l_0_7_109))))
 (= (- (- (- (- (- (- ?x13092 ?x13093) ?x13095) ?x13097) ?x13099) ?x13101) ?x13103) 0.0)))))))))
(assert
 (let ((?x13032 (* 4.0 l_0_7_106)))
 (let ((?x13033 (* ?x13032 l_0_7_109)))
 (let ((?x13126 (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) ?x13033) (* (* 2.0 l_0_7_106) l_0_7_112))))
 (let ((?x13132 (- (- ?x13126 (* (* 2.0 l_0_7_130) l_0_7_133)) (* (* 2.0 l_0_7_131) l_0_7_134))))
 (let ((?x13138 (- (- ?x13132 (* (* 2.0 l_0_7_132) l_0_7_135)) (* (* 2.0 l_0_7_151) l_0_7_154))))
 (let ((?x13144 (- (- ?x13138 (* (* 2.0 l_0_7_152) l_0_7_155)) (* (* 2.0 l_0_7_153) l_0_7_156))))
 (= ?x13144 0.0))))))))
(assert
 (let ((?x13162 (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_106) l_0_7_116))))
 (let ((?x13166 (- (- ?x13162 (* (* 2.0 l_0_7_130) l_0_7_137)) (* (* 2.0 l_0_7_131) l_0_7_138))))
 (let ((?x13170 (- (- ?x13166 (* (* 2.0 l_0_7_132) l_0_7_139)) (* (* 2.0 l_0_7_151) l_0_7_158))))
 (let ((?x13174 (- (- ?x13170 (* (* 2.0 l_0_7_152) l_0_7_159)) (* (* 2.0 l_0_7_153) l_0_7_160))))
 (= (+ ?x13174 (* (* 2.0 l_0_7_85) l_0_7_88)) 0.0))))))
(assert
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x13192 (* ?x13053 l_0_7_67)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x13190 (* ?x13189 l_0_7_46)))
 (let ((?x3086 (+ (* (* (- 2.0) l_0_7_1) l_0_7_16) (* (* 2.0 l_0_7_106) l_0_7_121))))
 (let ((?x2994 (- (- ?x3086 (* (* 2.0 l_0_7_130) l_0_7_142)) (* (* 2.0 l_0_7_131) l_0_7_143))))
 (let ((?x2998 (- (- ?x2994 (* (* 2.0 l_0_7_132) l_0_7_144)) (* (* 2.0 l_0_7_151) l_0_7_163))))
 (let ((?x13188 (- (- ?x2998 (* (* 2.0 l_0_7_152) l_0_7_164)) (* (* 2.0 l_0_7_153) l_0_7_165))))
 (= (+ (- ?x13188 ?x13190) ?x13192) 0.0))))))))))
(assert
 (let ((?x13240 (* l_0_7_3 l_0_7_3)))
 (let ((?x13232 (* l_0_7_2 l_0_7_2)))
 (let ((?x13226 (* 4.0 l_0_7_108)))
 (let ((?x13227 (* ?x13226 l_0_7_110)))
 (let ((?x13225 (+ (* (* (- 4.0) l_0_7_107) l_0_7_109) (* 1.0 (* l_0_7_107 l_0_7_107)))))
 (let ((?x13236 (- (- (+ (- ?x13225 ?x13227) (* 1.0 (* l_0_7_108 l_0_7_108))) ?x13232) (* (* 2.0 l_0_7_23) l_0_7_25))))
 (let ((?x13244 (+ (- (- ?x13236 (* (* 2.0 l_0_7_24) l_0_7_26)) ?x13240) (* (* 4.0 l_0_7_43) l_0_7_44))))
 (let ((?x13250 (- (- ?x13244 (* (* 4.0 l_0_7_64) l_0_7_65)) (* (* 4.0 l_0_7_85) l_0_7_86))))
 (= ?x13250 0.0))))))))))
(assert
 (let ((?x13291 (* l_0_7_27 l_0_7_27)))
 (let ((?x13289 (* l_0_7_26 l_0_7_26)))
 (let ((?x13287 (* l_0_7_25 l_0_7_25)))
 (let ((?x13274 (+ (* (* 2.0 l_0_7_107) l_0_7_109) (* (* 2.0 l_0_7_108) l_0_7_110))))
 (let ((?x13280 (- (- ?x13274 (* (* 2.0 l_0_7_109) l_0_7_109)) (* (* 2.0 l_0_7_110) l_0_7_110))))
 (let ((?x13286 (- (- ?x13280 (* (* 2.0 l_0_7_111) l_0_7_111)) (* (* 2.0 l_0_7_2) l_0_7_4))))
 (let ((?x13295 (- (- (- (- ?x13286 ?x13287) ?x13289) ?x13291) (* (* 2.0 l_0_7_3) l_0_7_5))))
 (let ((?x13299 (- (+ ?x13295 (* (* 4.0 l_0_7_43) l_0_7_46)) (* (* 4.0 l_0_7_64) l_0_7_67))))
 (= (- ?x13299 (* (* 4.0 l_0_7_85) l_0_7_88)) 0.0))))))))))
(assert
 (let ((?x13345 (* 4.0 l_0_7_111)))
 (let ((?x13346 (* ?x13345 l_0_7_114)))
 (let ((?x13342 (* 4.0 l_0_7_110)))
 (let ((?x13343 (* ?x13342 l_0_7_113)))
 (let ((?x13339 (* 4.0 l_0_7_109)))
 (let ((?x13340 (* ?x13339 l_0_7_112)))
 (let ((?x13226 (* 4.0 l_0_7_108)))
 (let ((?x13227 (* ?x13226 l_0_7_110)))
 (let ((?x13335 (+ (* (* 4.0 l_0_7_107) l_0_7_109) (* (* 2.0 l_0_7_107) l_0_7_112))))
 (let ((?x13344 (- (- (+ (+ ?x13335 ?x13227) (* (* 2.0 l_0_7_108) l_0_7_113)) ?x13340) ?x13343)))
 (let ((?x13352 (- (- (- ?x13344 ?x13346) (* (* 2.0 l_0_7_2) l_0_7_7)) (* (* 2.0 l_0_7_25) l_0_7_28))))
 (let ((?x13358 (- (- ?x13352 (* (* 2.0 l_0_7_26) l_0_7_29)) (* (* 2.0 l_0_7_27) l_0_7_30))))
 (let ((?x13362 (+ (- ?x13358 (* (* 2.0 l_0_7_3) l_0_7_8)) (* (* 4.0 l_0_7_43) l_0_7_49))))
 (let ((?x13366 (- (- ?x13362 (* (* 4.0 l_0_7_64) l_0_7_70)) (* (* 4.0 l_0_7_85) l_0_7_91))))
 (= ?x13366 0.0))))))))))))))))
(assert
 (let ((?x13345 (* 4.0 l_0_7_111)))
 (let ((?x13405 (* ?x13345 l_0_7_118)))
 (let ((?x13342 (* 4.0 l_0_7_110)))
 (let ((?x13403 (* ?x13342 l_0_7_117)))
 (let ((?x13339 (* 4.0 l_0_7_109)))
 (let ((?x13398 (* ?x13339 l_0_7_116)))
 (let ((?x13397 (+ (* (* 2.0 l_0_7_107) l_0_7_116) (* (* 2.0 l_0_7_108) l_0_7_117))))
 (let ((?x13406 (- (- (- (- ?x13397 ?x13398) (* (* 2.0 l_0_7_11) l_0_7_2)) ?x13403) ?x13405)))
 (let ((?x13411 (- (- ?x13406 (* (* 2.0 l_0_7_12) l_0_7_3)) (* (* 2.0 l_0_7_25) l_0_7_32))))
 (let ((?x13415 (- (- ?x13411 (* (* 2.0 l_0_7_26) l_0_7_33)) (* (* 2.0 l_0_7_27) l_0_7_34))))
 (let ((?x13419 (- (+ ?x13415 (* (* 4.0 l_0_7_43) l_0_7_53)) (* (* 4.0 l_0_7_64) l_0_7_74))))
 (let ((?x13424 (+ (- ?x13419 (* (* 4.0 l_0_7_85) l_0_7_95)) (* (* 2.0 l_0_7_86) l_0_7_88))))
 (= (+ ?x13424 (* (* 2.0 l_0_7_87) l_0_7_89)) 0.0))))))))))))))
(assert
 (let ((?x13491 (* 2.0 l_0_7_66)))
 (let ((?x13492 (* ?x13491 l_0_7_68)))
 (let ((?x13488 (* 2.0 l_0_7_65)))
 (let ((?x13489 (* ?x13488 l_0_7_67)))
 (let ((?x13483 (* 2.0 l_0_7_45)))
 (let ((?x13484 (* ?x13483 l_0_7_47)))
 (let ((?x13480 (* 2.0 l_0_7_44)))
 (let ((?x13481 (* ?x13480 l_0_7_46)))
 (let ((?x13345 (* 4.0 l_0_7_111)))
 (let ((?x13464 (* ?x13345 l_0_7_123)))
 (let ((?x13342 (* 4.0 l_0_7_110)))
 (let ((?x13462 (* ?x13342 l_0_7_122)))
 (let ((?x13339 (* 4.0 l_0_7_109)))
 (let ((?x13460 (* ?x13339 l_0_7_121)))
 (let ((?x13457 (+ (* (* (- 4.0) l_0_7_100) l_0_7_85) (* (* 2.0 l_0_7_107) l_0_7_121))))
 (let ((?x13465 (- (- (- (+ ?x13457 (* (* 2.0 l_0_7_108) l_0_7_122)) ?x13460) ?x13462) ?x13464)))
 (let ((?x13471 (- (- ?x13465 (* (* 2.0 l_0_7_16) l_0_7_2)) (* (* 2.0 l_0_7_17) l_0_7_3))))
 (let ((?x13475 (- (- ?x13471 (* (* 2.0 l_0_7_25) l_0_7_37)) (* (* 2.0 l_0_7_26) l_0_7_38))))
 (let ((?x13479 (+ (- ?x13475 (* (* 2.0 l_0_7_27) l_0_7_39)) (* (* 4.0 l_0_7_43) l_0_7_58))))
 (let ((?x13490 (+ (- (- (- ?x13479 ?x13481) ?x13484) (* (* 4.0 l_0_7_64) l_0_7_79)) ?x13489)))
 (= (+ ?x13490 ?x13492) 0.0))))))))))))))))))))))
(assert
 (let ((?x13546 (* l_0_7_6 l_0_7_6)))
 (let ((?x13544 (* l_0_7_5 l_0_7_5)))
 (let ((?x13542 (* l_0_7_4 l_0_7_4)))
 (let ((?x13531 (+ (* 1.0 (* l_0_7_109 l_0_7_109)) (* 1.0 (* l_0_7_110 l_0_7_110)))))
 (let ((?x13547 (- (- (- (+ ?x13531 (* 1.0 (* l_0_7_111 l_0_7_111))) ?x13542) ?x13544) ?x13546)))
 (= ?x13547 0.0)))))))
(assert
 (let ((?x3271 (* l_0_7_111 l_0_7_111)))
 (let ((?x13316 (* 2.0 ?x3271)))
 (let ((?x13312 (* l_0_7_110 l_0_7_110)))
 (let ((?x13313 (* 2.0 ?x13312)))
 (let ((?x13306 (* l_0_7_109 l_0_7_109)))
 (let ((?x13307 (* 2.0 ?x13306)))
 (let ((?x13563 (+ (+ (* (* 2.0 l_0_7_109) l_0_7_112) ?x13307) (* (* 2.0 l_0_7_110) l_0_7_113))))
 (let ((?x13570 (- (+ (+ (+ ?x13563 ?x13313) (* (* 2.0 l_0_7_111) l_0_7_114)) ?x13316) (* (* 2.0 l_0_7_4) l_0_7_7))))
 (let ((?x13576 (- (- ?x13570 (* (* 2.0 l_0_7_5) l_0_7_8)) (* (* 2.0 l_0_7_6) l_0_7_9))))
 (= ?x13576 0.0)))))))))))
(assert
 (let ((?x13594 (* l_0_7_90 l_0_7_90)))
 (let ((?x13592 (* l_0_7_89 l_0_7_89)))
 (let ((?x13590 (* l_0_7_88 l_0_7_88)))
 (let ((?x13580 (- (* (* 2.0 l_0_7_109) l_0_7_116) (* (* 2.0 l_0_7_11) l_0_7_4))))
 (let ((?x13584 (+ (+ ?x13580 (* (* 2.0 l_0_7_110) l_0_7_117)) (* (* 2.0 l_0_7_111) l_0_7_118))))
 (let ((?x13589 (- (- ?x13584 (* (* 2.0 l_0_7_12) l_0_7_5)) (* (* 2.0 l_0_7_13) l_0_7_6))))
 (= (+ (+ (+ ?x13589 ?x13590) ?x13592) ?x13594) 0.0))))))))
(assert
 (let ((?x13637 (* l_0_7_69 l_0_7_69)))
 (let ((?x13635 (* l_0_7_68 l_0_7_68)))
 (let ((?x13633 (* l_0_7_67 l_0_7_67)))
 (let ((?x13631 (* l_0_7_48 l_0_7_48)))
 (let ((?x13629 (* l_0_7_47 l_0_7_47)))
 (let ((?x13627 (* l_0_7_46 l_0_7_46)))
 (let ((?x13617 (+ (* (* 2.0 l_0_7_109) l_0_7_121) (* (* 2.0 l_0_7_110) l_0_7_122))))
 (let ((?x13621 (- (+ ?x13617 (* (* 2.0 l_0_7_111) l_0_7_123)) (* (* 2.0 l_0_7_16) l_0_7_4))))
 (let ((?x13626 (- (- ?x13621 (* (* 2.0 l_0_7_17) l_0_7_5)) (* (* 2.0 l_0_7_18) l_0_7_6))))
 (= (+ (+ (+ (- (- (- ?x13626 ?x13627) ?x13629) ?x13631) ?x13633) ?x13635) ?x13637) 0.0)))))))))))
(assert
 (let ((?x13673 (* l_0_7_9 l_0_7_9)))
 (let ((?x13671 (* l_0_7_8 l_0_7_8)))
 (let ((?x13669 (* l_0_7_7 l_0_7_7)))
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x13192 (* ?x13053 l_0_7_67)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x13190 (* ?x13189 l_0_7_46)))
 (let ((?x13345 (* 4.0 l_0_7_111)))
 (let ((?x13346 (* ?x13345 l_0_7_114)))
 (let ((?x13342 (* 4.0 l_0_7_110)))
 (let ((?x13343 (* ?x13342 l_0_7_113)))
 (let ((?x13339 (* 4.0 l_0_7_109)))
 (let ((?x13340 (* ?x13339 l_0_7_112)))
 (let ((?x13657 (+ (+ (+ (+ (* (- l_0_7_10) l_0_7_10) ?x13340) ?x13343) ?x13346) (* 1.0 (* l_0_7_112 l_0_7_112)))))
 (let ((?x13663 (+ (+ ?x13657 (* 1.0 (* l_0_7_113 l_0_7_113))) (* 1.0 (* l_0_7_114 l_0_7_114)))))
 (let ((?x13670 (- (- (+ (+ ?x13663 (* 1.0 (* l_0_7_115 l_0_7_115))) ?x13190) ?x13192) ?x13669)))
 (= (- (- ?x13670 ?x13671) ?x13673) 0.0))))))))))))))))))
(assert
 (let ((?x13345 (* 4.0 l_0_7_111)))
 (let ((?x13405 (* ?x13345 l_0_7_118)))
 (let ((?x13342 (* 4.0 l_0_7_110)))
 (let ((?x13403 (* ?x13342 l_0_7_117)))
 (let ((?x13339 (* 4.0 l_0_7_109)))
 (let ((?x13398 (* ?x13339 l_0_7_116)))
 (let ((?x13682 (- (+ (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x13398) (* (* 2.0 l_0_7_11) l_0_7_7))))
 (let ((?x13690 (+ (+ (+ (+ ?x13682 ?x13403) ?x13405) (* (* 2.0 l_0_7_112) l_0_7_116)) (* (* 2.0 l_0_7_113) l_0_7_117))))
 (let ((?x13696 (+ (+ ?x13690 (* (* 2.0 l_0_7_114) l_0_7_118)) (* (* 2.0 l_0_7_115) l_0_7_119))))
 (let ((?x13700 (- (- ?x13696 (* (* 2.0 l_0_7_12) l_0_7_8)) (* (* 2.0 l_0_7_13) l_0_7_9))))
 (let ((?x13706 (+ (+ ?x13700 (* (* 2.0 l_0_7_88) l_0_7_91)) (* (* 2.0 l_0_7_89) l_0_7_92))))
 (= (+ ?x13706 (* (* 2.0 l_0_7_90) l_0_7_93)) 0.0)))))))))))))
(assert
 (let ((?x13774 (* 2.0 l_0_7_69)))
 (let ((?x13775 (* ?x13774 l_0_7_72)))
 (let ((?x13771 (* 2.0 l_0_7_68)))
 (let ((?x13772 (* ?x13771 l_0_7_71)))
 (let ((?x13768 (* 2.0 l_0_7_67)))
 (let ((?x13769 (* ?x13768 l_0_7_70)))
 (let ((?x13765 (* 2.0 l_0_7_48)))
 (let ((?x13766 (* ?x13765 l_0_7_51)))
 (let ((?x13762 (* 2.0 l_0_7_47)))
 (let ((?x13763 (* ?x13762 l_0_7_50)))
 (let ((?x13759 (* 2.0 l_0_7_46)))
 (let ((?x13760 (* ?x13759 l_0_7_49)))
 (let ((?x13345 (* 4.0 l_0_7_111)))
 (let ((?x13464 (* ?x13345 l_0_7_123)))
 (let ((?x13342 (* 4.0 l_0_7_110)))
 (let ((?x13462 (* ?x13342 l_0_7_122)))
 (let ((?x13339 (* 4.0 l_0_7_109)))
 (let ((?x13460 (* ?x13339 l_0_7_121)))
 (let ((?x13746 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_10) l_0_7_19) ?x13460) ?x13462) ?x13464) (* (* 2.0 l_0_7_112) l_0_7_121))))
 (let ((?x13750 (+ (+ ?x13746 (* (* 2.0 l_0_7_113) l_0_7_122)) (* (* 2.0 l_0_7_114) l_0_7_123))))
 (let ((?x13754 (- (+ ?x13750 (* (* 2.0 l_0_7_115) l_0_7_124)) (* (* 2.0 l_0_7_16) l_0_7_7))))
 (let ((?x13758 (- (- ?x13754 (* (* 2.0 l_0_7_17) l_0_7_8)) (* (* 2.0 l_0_7_18) l_0_7_9))))
 (= (+ (+ (+ (- (- (- ?x13758 ?x13760) ?x13763) ?x13766) ?x13769) ?x13772) ?x13775) 0.0))))))))))))))))))))))))
(assert
 (let ((?x13818 (* l_0_7_15 l_0_7_15)))
 (let ((?x13816 (* l_0_7_14 l_0_7_14)))
 (let ((?x13814 (* l_0_7_13 l_0_7_13)))
 (let ((?x13809 (* l_0_7_12 l_0_7_12)))
 (let ((?x13799 (+ (* (- l_0_7_11) l_0_7_11) (* 1.0 (* l_0_7_116 l_0_7_116)))))
 (let ((?x13805 (+ (+ ?x13799 (* 1.0 (* l_0_7_117 l_0_7_117))) (* 1.0 (* l_0_7_118 l_0_7_118)))))
 (let ((?x13813 (+ (- (+ ?x13805 (* 1.0 (* l_0_7_119 l_0_7_119))) ?x13809) (* 1.0 (* l_0_7_120 l_0_7_120)))))
 (let ((?x13821 (+ (- (- (- ?x13813 ?x13814) ?x13816) ?x13818) (* (* 2.0 l_0_7_88) l_0_7_95))))
 (let ((?x13825 (+ (+ ?x13821 (* (* 2.0 l_0_7_89) l_0_7_96)) (* (* 2.0 l_0_7_90) l_0_7_97))))
 (= ?x13825 0.0)))))))))))
(assert
 (let ((?x13774 (* 2.0 l_0_7_69)))
 (let ((?x13877 (* ?x13774 l_0_7_76)))
 (let ((?x13771 (* 2.0 l_0_7_68)))
 (let ((?x13875 (* ?x13771 l_0_7_75)))
 (let ((?x13768 (* 2.0 l_0_7_67)))
 (let ((?x13873 (* ?x13768 l_0_7_74)))
 (let ((?x13765 (* 2.0 l_0_7_48)))
 (let ((?x13871 (* ?x13765 l_0_7_55)))
 (let ((?x13762 (* 2.0 l_0_7_47)))
 (let ((?x13869 (* ?x13762 l_0_7_54)))
 (let ((?x13759 (* 2.0 l_0_7_46)))
 (let ((?x13867 (* ?x13759 l_0_7_53)))
 (let ((?x4024 (+ (* (* 2.0 l_0_7_100) l_0_7_88) (* (* 2.0 l_0_7_101) l_0_7_89))))
 (let ((?x13841 (- (+ ?x4024 (* (* 2.0 l_0_7_102) l_0_7_90)) (* (* 2.0 l_0_7_11) l_0_7_16))))
 (let ((?x13847 (+ (+ ?x13841 (* (* 2.0 l_0_7_116) l_0_7_121)) (* (* 2.0 l_0_7_117) l_0_7_122))))
 (let ((?x13853 (+ (+ ?x13847 (* (* 2.0 l_0_7_118) l_0_7_123)) (* (* 2.0 l_0_7_119) l_0_7_124))))
 (let ((?x13858 (+ (- ?x13853 (* (* 2.0 l_0_7_12) l_0_7_17)) (* (* 2.0 l_0_7_120) l_0_7_125))))
 (let ((?x13863 (- (- ?x13858 (* (* 2.0 l_0_7_13) l_0_7_18)) (* (* 2.0 l_0_7_14) l_0_7_19))))
 (let ((?x13872 (- (- (- (- ?x13863 (* (* 2.0 l_0_7_15) l_0_7_20)) ?x13867) ?x13869) ?x13871)))
 (= (+ (+ (+ ?x13872 ?x13873) ?x13875) ?x13877) 0.0)))))))))))))))))))))
(assert
 (let ((?x13774 (* 2.0 l_0_7_69)))
 (let ((?x13970 (* ?x13774 l_0_7_81)))
 (let ((?x13771 (* 2.0 l_0_7_68)))
 (let ((?x13968 (* ?x13771 l_0_7_80)))
 (let ((?x13768 (* 2.0 l_0_7_67)))
 (let ((?x13966 (* ?x13768 l_0_7_79)))
 (let ((?x13765 (* 2.0 l_0_7_48)))
 (let ((?x13964 (* ?x13765 l_0_7_60)))
 (let ((?x13762 (* 2.0 l_0_7_47)))
 (let ((?x13962 (* ?x13762 l_0_7_59)))
 (let ((?x13759 (* 2.0 l_0_7_46)))
 (let ((?x13960 (* ?x13759 l_0_7_58)))
 (let ((?x13958 (* l_0_7_21 l_0_7_21)))
 (let ((?x13956 (* l_0_7_20 l_0_7_20)))
 (let ((?x13954 (* l_0_7_19 l_0_7_19)))
 (let ((?x13952 (* l_0_7_18 l_0_7_18)))
 (let ((?x13950 (* l_0_7_17 l_0_7_17)))
 (let ((?x13948 (* l_0_7_16 l_0_7_16)))
 (let ((?x13935 (+ (* 1.0 (* l_0_7_121 l_0_7_121)) (* 1.0 (* l_0_7_122 l_0_7_122)))))
 (let ((?x13941 (+ (+ ?x13935 (* 1.0 (* l_0_7_123 l_0_7_123))) (* 1.0 (* l_0_7_124 l_0_7_124)))))
 (let ((?x13947 (+ (+ ?x13941 (* 1.0 (* l_0_7_125 l_0_7_125))) (* 1.0 (* l_0_7_126 l_0_7_126)))))
 (let ((?x13961 (- (- (- (- (- (- (- ?x13947 ?x13948) ?x13950) ?x13952) ?x13954) ?x13956) ?x13958) ?x13960)))
 (= (+ (+ (+ (- (- ?x13961 ?x13962) ?x13964) ?x13966) ?x13968) ?x13970) 0.0))))))))))))))))))))))))
(assert
 (let ((?x14003 (* l_0_7_150 l_0_7_150)))
 (let ((?x14001 (* l_0_7_149 l_0_7_149)))
 (let ((?x13999 (* l_0_7_129 l_0_7_129)))
 (let ((?x14000 (- (- (* (* (- 4.0) l_0_7_106) l_0_7_107) (* l_0_7_128 l_0_7_128)) ?x13999)))
 (= (- (- (- ?x14000 ?x14001) ?x14003) (* (* 2.0 l_0_7_22) l_0_7_23)) 0.0))))))
(assert
 (let ((?x13032 (* 4.0 l_0_7_106)))
 (let ((?x14026 (* ?x13032 l_0_7_112)))
 (let ((?x14029 (- (- (* ?x13032 l_0_7_107) ?x14026) (* (* 2.0 l_0_7_128) l_0_7_133))))
 (let ((?x14033 (- (- ?x14029 (* (* 2.0 l_0_7_129) l_0_7_134)) (* (* 2.0 l_0_7_149) l_0_7_154))))
 (let ((?x14037 (- (- ?x14033 (* (* 2.0 l_0_7_150) l_0_7_155)) (* (* 2.0 l_0_7_22) l_0_7_28))))
 (= ?x14037 0.0)))))))
(assert
 (let ((?x14054 (- (* (* (- 4.0) l_0_7_106) l_0_7_116) (* (* 2.0 l_0_7_128) l_0_7_137))))
 (let ((?x14058 (- (- ?x14054 (* (* 2.0 l_0_7_129) l_0_7_138)) (* (* 2.0 l_0_7_149) l_0_7_158))))
 (let ((?x14062 (- (- ?x14058 (* (* 2.0 l_0_7_150) l_0_7_159)) (* (* 2.0 l_0_7_22) l_0_7_32))))
 (= (+ ?x14062 (* (* 2.0 l_0_7_85) l_0_7_86)) 0.0)))))
(assert
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x14104 (* ?x13053 l_0_7_65)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x14102 (* ?x13189 l_0_7_44)))
 (let ((?x14093 (- (* (* (- 4.0) l_0_7_106) l_0_7_121) (* (* 2.0 l_0_7_128) l_0_7_142))))
 (let ((?x14097 (- (- ?x14093 (* (* 2.0 l_0_7_129) l_0_7_143)) (* (* 2.0 l_0_7_149) l_0_7_163))))
 (let ((?x14101 (- (- ?x14097 (* (* 2.0 l_0_7_150) l_0_7_164)) (* (* 2.0 l_0_7_22) l_0_7_37))))
 (= (+ (- ?x14101 ?x14102) ?x14104) 0.0)))))))))
(assert
 (let ((?x14132 (* l_0_7_24 l_0_7_24)))
 (let ((?x14130 (* l_0_7_23 l_0_7_23)))
 (let ((?x14129 (- (* (* (- 2.0) l_0_7_107) l_0_7_107) (* (* 2.0 l_0_7_108) l_0_7_108))))
 (= (- (- ?x14129 ?x14130) ?x14132) 0.0)))))
(assert
 (let ((?x13229 (* l_0_7_108 l_0_7_108)))
 (let ((?x14136 (* 2.0 ?x13229)))
 (let ((?x13226 (* 4.0 l_0_7_108)))
 (let ((?x14144 (* ?x13226 l_0_7_113)))
 (let ((?x13223 (* l_0_7_107 l_0_7_107)))
 (let ((?x4301 (* 2.0 ?x13223)))
 (let ((?x14148 (- (+ (- (+ (* (* (- 4.0) l_0_7_107) l_0_7_112) ?x4301) ?x14144) ?x14136) (* (* 2.0 l_0_7_23) l_0_7_28))))
 (= (- ?x14148 (* (* 2.0 l_0_7_24) l_0_7_29)) 0.0)))))))))
(assert
 (let ((?x14172 (* l_0_7_87 l_0_7_87)))
 (let ((?x14170 (* l_0_7_86 l_0_7_86)))
 (let ((?x13226 (* 4.0 l_0_7_108)))
 (let ((?x14164 (* ?x13226 l_0_7_117)))
 (let ((?x14167 (- (- (* (* (- 4.0) l_0_7_107) l_0_7_116) ?x14164) (* (* 2.0 l_0_7_23) l_0_7_32))))
 (= (+ (+ (- ?x14167 (* (* 2.0 l_0_7_24) l_0_7_33)) ?x14170) ?x14172) 0.0)))))))
(assert
 (let ((?x14203 (* l_0_7_66 l_0_7_66)))
 (let ((?x14201 (* l_0_7_65 l_0_7_65)))
 (let ((?x14199 (* l_0_7_45 l_0_7_45)))
 (let ((?x14197 (* l_0_7_44 l_0_7_44)))
 (let ((?x13226 (* 4.0 l_0_7_108)))
 (let ((?x14191 (* ?x13226 l_0_7_122)))
 (let ((?x14194 (- (- (* (* (- 4.0) l_0_7_107) l_0_7_121) ?x14191) (* (* 2.0 l_0_7_23) l_0_7_37))))
 (let ((?x14202 (+ (- (- (- ?x14194 (* (* 2.0 l_0_7_24) l_0_7_38)) ?x14197) ?x14199) ?x14201)))
 (= (+ ?x14202 ?x14203) 0.0))))))))))
(assert
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x14104 (* ?x13053 l_0_7_65)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x14102 (* ?x13189 l_0_7_44)))
 (let ((?x14239 (* l_0_7_31 l_0_7_31)))
 (let ((?x14237 (* l_0_7_30 l_0_7_30)))
 (let ((?x14235 (* l_0_7_29 l_0_7_29)))
 (let ((?x14233 (* l_0_7_28 l_0_7_28)))
 (let ((?x13226 (* 4.0 l_0_7_108)))
 (let ((?x14144 (* ?x13226 l_0_7_113)))
 (let ((?x14226 (- (+ (* (* 4.0 l_0_7_107) l_0_7_112) ?x14144) (* (* 2.0 l_0_7_112) l_0_7_112))))
 (let ((?x14230 (- (- ?x14226 (* (* 2.0 l_0_7_113) l_0_7_113)) (* (* 2.0 l_0_7_114) l_0_7_114))))
 (let ((?x14238 (- (- (- (- ?x14230 (* (* 2.0 l_0_7_115) l_0_7_115)) ?x14233) ?x14235) ?x14237)))
 (= (- (+ (- ?x14238 ?x14239) ?x14102) ?x14104) 0.0)))))))))))))))
(assert
 (let ((?x14277 (* 4.0 l_0_7_115)))
 (let ((?x14278 (* ?x14277 l_0_7_119)))
 (let ((?x14274 (* 4.0 l_0_7_114)))
 (let ((?x14275 (* ?x14274 l_0_7_118)))
 (let ((?x14271 (* 4.0 l_0_7_113)))
 (let ((?x14272 (* ?x14271 l_0_7_117)))
 (let ((?x14268 (* 4.0 l_0_7_112)))
 (let ((?x14269 (* ?x14268 l_0_7_116)))
 (let ((?x13226 (* 4.0 l_0_7_108)))
 (let ((?x14164 (* ?x13226 l_0_7_117)))
 (let ((?x14276 (- (- (- (+ (* (* 4.0 l_0_7_107) l_0_7_116) ?x14164) ?x14269) ?x14272) ?x14275)))
 (let ((?x14285 (- (- (- ?x14276 ?x14278) (* (* 2.0 l_0_7_28) l_0_7_32)) (* (* 2.0 l_0_7_29) l_0_7_33))))
 (let ((?x14291 (- (- ?x14285 (* (* 2.0 l_0_7_30) l_0_7_34)) (* (* 2.0 l_0_7_31) l_0_7_35))))
 (let ((?x14295 (+ (+ ?x14291 (* (* 2.0 l_0_7_86) l_0_7_91)) (* (* 2.0 l_0_7_87) l_0_7_92))))
 (= ?x14295 0.0))))))))))))))))
(assert
 (let ((?x13491 (* 2.0 l_0_7_66)))
 (let ((?x14344 (* ?x13491 l_0_7_71)))
 (let ((?x13488 (* 2.0 l_0_7_65)))
 (let ((?x14342 (* ?x13488 l_0_7_70)))
 (let ((?x13483 (* 2.0 l_0_7_45)))
 (let ((?x14340 (* ?x13483 l_0_7_50)))
 (let ((?x13480 (* 2.0 l_0_7_44)))
 (let ((?x14338 (* ?x13480 l_0_7_49)))
 (let ((?x14277 (* 4.0 l_0_7_115)))
 (let ((?x14328 (* ?x14277 l_0_7_124)))
 (let ((?x14274 (* 4.0 l_0_7_114)))
 (let ((?x14326 (* ?x14274 l_0_7_123)))
 (let ((?x14271 (* 4.0 l_0_7_113)))
 (let ((?x14324 (* ?x14271 l_0_7_122)))
 (let ((?x14268 (* 4.0 l_0_7_112)))
 (let ((?x14318 (* ?x14268 l_0_7_121)))
 (let ((?x13226 (* 4.0 l_0_7_108)))
 (let ((?x14191 (* ?x13226 l_0_7_122)))
 (let ((?x14327 (- (- (- (+ (* (* 4.0 l_0_7_107) l_0_7_121) ?x14191) ?x14318) ?x14324) ?x14326)))
 (let ((?x14333 (- (- (- ?x14327 ?x14328) (* (* 2.0 l_0_7_28) l_0_7_37)) (* (* 2.0 l_0_7_29) l_0_7_38))))
 (let ((?x14337 (- (- ?x14333 (* (* 2.0 l_0_7_30) l_0_7_39)) (* (* 2.0 l_0_7_31) l_0_7_40))))
 (= (+ (+ (- (- ?x14337 ?x14338) ?x14340) ?x14342) ?x14344) 0.0)))))))))))))))))))))))
(assert
 (let ((?x14360 (* l_0_7_36 l_0_7_36)))
 (let ((?x14358 (* l_0_7_35 l_0_7_35)))
 (let ((?x14356 (* l_0_7_34 l_0_7_34)))
 (let ((?x14354 (* l_0_7_33 l_0_7_33)))
 (let ((?x4476 (* l_0_7_32 l_0_7_32)))
 (let ((?x4537 (- (* (* (- 2.0) l_0_7_116) l_0_7_116) (* (* 2.0 l_0_7_117) l_0_7_117))))
 (let ((?x4509 (- (- ?x4537 (* (* 2.0 l_0_7_118) l_0_7_118)) (* (* 2.0 l_0_7_119) l_0_7_119))))
 (let ((?x14357 (- (- (- (- ?x4509 (* (* 2.0 l_0_7_120) l_0_7_120)) ?x4476) ?x14354) ?x14356)))
 (let ((?x14365 (+ (+ (- (- ?x14357 ?x14358) ?x14360) (* (* 2.0 l_0_7_86) l_0_7_95)) (* (* 2.0 l_0_7_87) l_0_7_96))))
 (= ?x14365 0.0)))))))))))
(assert
 (let ((?x13491 (* 2.0 l_0_7_66)))
 (let ((?x14407 (* ?x13491 l_0_7_75)))
 (let ((?x13488 (* 2.0 l_0_7_65)))
 (let ((?x14405 (* ?x13488 l_0_7_74)))
 (let ((?x13483 (* 2.0 l_0_7_45)))
 (let ((?x14403 (* ?x13483 l_0_7_54)))
 (let ((?x13480 (* 2.0 l_0_7_44)))
 (let ((?x14401 (* ?x13480 l_0_7_53)))
 (let ((?x14384 (* (* 4.0 l_0_7_120) l_0_7_125)))
 (let ((?x14381 (* (* 4.0 l_0_7_119) l_0_7_124)))
 (let ((?x14378 (* (* 4.0 l_0_7_118) l_0_7_123)))
 (let ((?x14375 (* (* 4.0 l_0_7_117) l_0_7_122)))
 (let ((?x14372 (* (* 4.0 l_0_7_116) l_0_7_121)))
 (let ((?x4719 (+ (* (* 2.0 l_0_7_100) l_0_7_86) (* (* 2.0 l_0_7_101) l_0_7_87))))
 (let ((?x14388 (- (- (- (- (- (- ?x4719 ?x14372) ?x14375) ?x14378) ?x14381) ?x14384) (* (* 2.0 l_0_7_32) l_0_7_37))))
 (let ((?x14394 (- (- ?x14388 (* (* 2.0 l_0_7_33) l_0_7_38)) (* (* 2.0 l_0_7_34) l_0_7_39))))
 (let ((?x14400 (- (- ?x14394 (* (* 2.0 l_0_7_35) l_0_7_40)) (* (* 2.0 l_0_7_36) l_0_7_41))))
 (= (+ (+ (- (- ?x14400 ?x14401) ?x14403) ?x14405) ?x14407) 0.0)))))))))))))))))))
(assert
 (let ((?x13491 (* 2.0 l_0_7_66)))
 (let ((?x14479 (* ?x13491 l_0_7_80)))
 (let ((?x13488 (* 2.0 l_0_7_65)))
 (let ((?x14477 (* ?x13488 l_0_7_79)))
 (let ((?x13483 (* 2.0 l_0_7_45)))
 (let ((?x14475 (* ?x13483 l_0_7_59)))
 (let ((?x13480 (* 2.0 l_0_7_44)))
 (let ((?x14473 (* ?x13480 l_0_7_58)))
 (let ((?x14471 (* l_0_7_42 l_0_7_42)))
 (let ((?x14469 (* l_0_7_41 l_0_7_41)))
 (let ((?x14467 (* l_0_7_40 l_0_7_40)))
 (let ((?x14465 (* l_0_7_39 l_0_7_39)))
 (let ((?x14463 (* l_0_7_38 l_0_7_38)))
 (let ((?x14461 (* l_0_7_37 l_0_7_37)))
 (let ((?x14448 (- (* (* (- 2.0) l_0_7_121) l_0_7_121) (* (* 2.0 l_0_7_122) l_0_7_122))))
 (let ((?x14454 (- (- ?x14448 (* (* 2.0 l_0_7_123) l_0_7_123)) (* (* 2.0 l_0_7_124) l_0_7_124))))
 (let ((?x14460 (- (- ?x14454 (* (* 2.0 l_0_7_125) l_0_7_125)) (* (* 2.0 l_0_7_126) l_0_7_126))))
 (let ((?x14474 (- (- (- (- (- (- (- ?x14460 ?x14461) ?x14463) ?x14465) ?x14467) ?x14469) ?x14471) ?x14473)))
 (= (+ (+ (- ?x14474 ?x14475) ?x14477) ?x14479) 0.0))))))))))))))))))))
(assert
 (let ((?x2892 (* l_0_7_64 l_0_7_64)))
 (let ((?x13050 (* l_0_7_43 l_0_7_43)))
 (let ((?x14508 (- (* (* (- 2.0) l_0_7_127) l_0_7_142) (* (* 2.0 l_0_7_148) l_0_7_163))))
 (= (+ (- ?x14508 ?x13050) ?x2892) 0.0)))))
(assert
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x14547 (* ?x13053 l_0_7_70)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x14545 (* ?x13189 l_0_7_49)))
 (let ((?x14523 (- (* (* 4.0 l_0_7_106) l_0_7_121) (* (* 2.0 l_0_7_133) l_0_7_142))))
 (let ((?x14529 (- (- ?x14523 (* (* 2.0 l_0_7_134) l_0_7_143)) (* (* 2.0 l_0_7_135) l_0_7_144))))
 (let ((?x14535 (- (- ?x14529 (* (* 2.0 l_0_7_136) l_0_7_145)) (* (* 2.0 l_0_7_154) l_0_7_163))))
 (let ((?x14541 (- (- ?x14535 (* (* 2.0 l_0_7_155) l_0_7_164)) (* (* 2.0 l_0_7_156) l_0_7_165))))
 (= (+ (- (- ?x14541 (* (* 2.0 l_0_7_157) l_0_7_166)) ?x14545) ?x14547) 0.0))))))))))
(assert
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x14596 (* ?x13053 l_0_7_74)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x14594 (* ?x13189 l_0_7_53)))
 (let ((?x5213 (- (* (* 2.0 l_0_7_100) l_0_7_85) (* (* 2.0 l_0_7_137) l_0_7_142))))
 (let ((?x14572 (- (- ?x5213 (* (* 2.0 l_0_7_138) l_0_7_143)) (* (* 2.0 l_0_7_139) l_0_7_144))))
 (let ((?x14578 (- (- ?x14572 (* (* 2.0 l_0_7_140) l_0_7_145)) (* (* 2.0 l_0_7_141) l_0_7_146))))
 (let ((?x14584 (- (- ?x14578 (* (* 2.0 l_0_7_158) l_0_7_163)) (* (* 2.0 l_0_7_159) l_0_7_164))))
 (let ((?x14590 (- (- ?x14584 (* (* 2.0 l_0_7_160) l_0_7_165)) (* (* 2.0 l_0_7_161) l_0_7_166))))
 (= (+ (- (- ?x14590 (* (* 2.0 l_0_7_162) l_0_7_167)) ?x14594) ?x14596) 0.0)))))))))))
(assert
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x14648 (* ?x13053 l_0_7_79)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x14646 (* ?x13189 l_0_7_58)))
 (let ((?x14644 (* l_0_7_168 l_0_7_168)))
 (let ((?x14642 (* l_0_7_167 l_0_7_167)))
 (let ((?x14640 (* l_0_7_166 l_0_7_166)))
 (let ((?x14638 (* l_0_7_165 l_0_7_165)))
 (let ((?x14636 (* l_0_7_164 l_0_7_164)))
 (let ((?x14634 (* l_0_7_163 l_0_7_163)))
 (let ((?x14632 (* l_0_7_147 l_0_7_147)))
 (let ((?x14630 (* l_0_7_146 l_0_7_146)))
 (let ((?x14628 (* l_0_7_145 l_0_7_145)))
 (let ((?x14626 (* l_0_7_144 l_0_7_144)))
 (let ((?x14627 (- (- (* (- l_0_7_142) l_0_7_142) (* l_0_7_143 l_0_7_143)) ?x14626)))
 (let ((?x14641 (- (- (- (- (- (- (- ?x14627 ?x14628) ?x14630) ?x14632) ?x14634) ?x14636) ?x14638) ?x14640)))
 (= (+ (- (- (- ?x14641 ?x14642) ?x14644) ?x14646) ?x14648) 0.0))))))))))))))))))
(assert
 (let ((?x14683 (* l_0_7_73 l_0_7_73)))
 (let ((?x14681 (* l_0_7_72 l_0_7_72)))
 (let ((?x14679 (* l_0_7_71 l_0_7_71)))
 (let ((?x14677 (* l_0_7_70 l_0_7_70)))
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x14648 (* ?x13053 l_0_7_79)))
 (let ((?x14674 (* l_0_7_52 l_0_7_52)))
 (let ((?x14672 (* l_0_7_51 l_0_7_51)))
 (let ((?x14670 (* l_0_7_50 l_0_7_50)))
 (let ((?x14668 (* l_0_7_49 l_0_7_49)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x14646 (* ?x13189 l_0_7_58)))
 (let ((?x14277 (* 4.0 l_0_7_115)))
 (let ((?x14328 (* ?x14277 l_0_7_124)))
 (let ((?x14274 (* 4.0 l_0_7_114)))
 (let ((?x14326 (* ?x14274 l_0_7_123)))
 (let ((?x14271 (* 4.0 l_0_7_113)))
 (let ((?x14324 (* ?x14271 l_0_7_122)))
 (let ((?x14268 (* 4.0 l_0_7_112)))
 (let ((?x14318 (* ?x14268 l_0_7_121)))
 (let ((?x14673 (- (- (- (+ (+ (+ (+ ?x14318 ?x14324) ?x14326) ?x14328) ?x14646) ?x14668) ?x14670) ?x14672)))
 (= (+ (+ (+ (+ (- (- ?x14673 ?x14674) ?x14648) ?x14677) ?x14679) ?x14681) ?x14683) 0.0)))))))))))))))))))))))
(assert
 (let ((?x14723 (* 2.0 l_0_7_73)))
 (let ((?x14724 (* ?x14723 l_0_7_77)))
 (let ((?x14720 (* 2.0 l_0_7_72)))
 (let ((?x14721 (* ?x14720 l_0_7_76)))
 (let ((?x14717 (* 2.0 l_0_7_71)))
 (let ((?x14718 (* ?x14717 l_0_7_75)))
 (let ((?x14714 (* 2.0 l_0_7_70)))
 (let ((?x14715 (* ?x14714 l_0_7_74)))
 (let ((?x14711 (* 2.0 l_0_7_52)))
 (let ((?x14712 (* ?x14711 l_0_7_56)))
 (let ((?x14708 (* 2.0 l_0_7_51)))
 (let ((?x14709 (* ?x14708 l_0_7_55)))
 (let ((?x14705 (* 2.0 l_0_7_50)))
 (let ((?x14706 (* ?x14705 l_0_7_54)))
 (let ((?x14702 (* 2.0 l_0_7_49)))
 (let ((?x14703 (* ?x14702 l_0_7_53)))
 (let ((?x14384 (* (* 4.0 l_0_7_120) l_0_7_125)))
 (let ((?x14381 (* (* 4.0 l_0_7_119) l_0_7_124)))
 (let ((?x14378 (* (* 4.0 l_0_7_118) l_0_7_123)))
 (let ((?x14375 (* (* 4.0 l_0_7_117) l_0_7_122)))
 (let ((?x14372 (* (* 4.0 l_0_7_116) l_0_7_121)))
 (let ((?x5487 (+ (* (* 2.0 l_0_7_100) l_0_7_91) (* (* 2.0 l_0_7_101) l_0_7_92))))
 (let ((?x14696 (+ (+ ?x5487 (* (* 2.0 l_0_7_102) l_0_7_93)) (* (* 2.0 l_0_7_103) l_0_7_94))))
 (let ((?x14707 (- (- (+ (+ (+ (+ (+ ?x14696 ?x14372) ?x14375) ?x14378) ?x14381) ?x14384) ?x14703) ?x14706)))
 (= (+ (+ (+ (+ (- (- ?x14707 ?x14709) ?x14712) ?x14715) ?x14718) ?x14721) ?x14724) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x14723 (* 2.0 l_0_7_73)))
 (let ((?x14766 (* ?x14723 l_0_7_82)))
 (let ((?x14720 (* 2.0 l_0_7_72)))
 (let ((?x14764 (* ?x14720 l_0_7_81)))
 (let ((?x14717 (* 2.0 l_0_7_71)))
 (let ((?x14762 (* ?x14717 l_0_7_80)))
 (let ((?x14714 (* 2.0 l_0_7_70)))
 (let ((?x14760 (* ?x14714 l_0_7_79)))
 (let ((?x14711 (* 2.0 l_0_7_52)))
 (let ((?x14758 (* ?x14711 l_0_7_61)))
 (let ((?x14708 (* 2.0 l_0_7_51)))
 (let ((?x14756 (* ?x14708 l_0_7_60)))
 (let ((?x14705 (* 2.0 l_0_7_50)))
 (let ((?x14754 (* ?x14705 l_0_7_59)))
 (let ((?x14702 (* 2.0 l_0_7_49)))
 (let ((?x14752 (* ?x14702 l_0_7_58)))
 (let ((?x13945 (* l_0_7_126 l_0_7_126)))
 (let ((?x5037 (* 2.0 ?x13945)))
 (let ((?x13942 (* l_0_7_125 l_0_7_125)))
 (let ((?x5031 (* 2.0 ?x13942)))
 (let ((?x13939 (* l_0_7_124 l_0_7_124)))
 (let ((?x5026 (* 2.0 ?x13939)))
 (let ((?x13936 (* l_0_7_123 l_0_7_123)))
 (let ((?x5020 (* 2.0 ?x13936)))
 (let ((?x13920 (* l_0_7_122 l_0_7_122)))
 (let ((?x14483 (* 2.0 ?x13920)))
 (let ((?x4129 (* l_0_7_121 l_0_7_121)))
 (let ((?x14503 (* 2.0 ?x4129)))
 (let ((?x14755 (- (- (+ (+ (+ (+ (+ ?x14503 ?x14483) ?x5020) ?x5026) ?x5031) ?x5037) ?x14752) ?x14754)))
 (= (+ (+ (+ (+ (- (- ?x14755 ?x14756) ?x14758) ?x14760) ?x14762) ?x14764) ?x14766) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x14803 (* l_0_7_78 l_0_7_78)))
 (let ((?x14801 (* l_0_7_77 l_0_7_77)))
 (let ((?x14799 (* l_0_7_76 l_0_7_76)))
 (let ((?x14797 (* l_0_7_75 l_0_7_75)))
 (let ((?x14795 (* l_0_7_74 l_0_7_74)))
 (let ((?x14793 (* l_0_7_57 l_0_7_57)))
 (let ((?x14791 (* l_0_7_56 l_0_7_56)))
 (let ((?x14789 (* l_0_7_55 l_0_7_55)))
 (let ((?x14787 (* l_0_7_54 l_0_7_54)))
 (let ((?x14785 (* l_0_7_53 l_0_7_53)))
 (let ((?x5606 (+ (* (* 2.0 l_0_7_100) l_0_7_95) (* (* 2.0 l_0_7_101) l_0_7_96))))
 (let ((?x5610 (+ (+ ?x5606 (* (* 2.0 l_0_7_102) l_0_7_97)) (* (* 2.0 l_0_7_103) l_0_7_98))))
 (let ((?x14790 (- (- (- (+ ?x5610 (* (* 2.0 l_0_7_104) l_0_7_99)) ?x14785) ?x14787) ?x14789)))
 (let ((?x14804 (+ (+ (+ (+ (+ (- (- ?x14790 ?x14791) ?x14793) ?x14795) ?x14797) ?x14799) ?x14801) ?x14803)))
 (= ?x14804 0.0))))))))))))))))
(assert
 (let ((?x14877 (* 2.0 l_0_7_78)))
 (let ((?x14878 (* ?x14877 l_0_7_83)))
 (let ((?x14874 (* 2.0 l_0_7_77)))
 (let ((?x14875 (* ?x14874 l_0_7_82)))
 (let ((?x14871 (* 2.0 l_0_7_76)))
 (let ((?x14872 (* ?x14871 l_0_7_81)))
 (let ((?x14868 (* 2.0 l_0_7_75)))
 (let ((?x14869 (* ?x14868 l_0_7_80)))
 (let ((?x14865 (* 2.0 l_0_7_74)))
 (let ((?x14866 (* ?x14865 l_0_7_79)))
 (let ((?x14863 (* (* 2.0 l_0_7_57) l_0_7_62)))
 (let ((?x14860 (* (* 2.0 l_0_7_56) l_0_7_61)))
 (let ((?x14857 (* (* 2.0 l_0_7_55) l_0_7_60)))
 (let ((?x14854 (* (* 2.0 l_0_7_54) l_0_7_59)))
 (let ((?x14851 (* (* 2.0 l_0_7_53) l_0_7_58)))
 (let ((?x14848 (* l_0_7_105 l_0_7_105)))
 (let ((?x14846 (* l_0_7_104 l_0_7_104)))
 (let ((?x14844 (* l_0_7_103 l_0_7_103)))
 (let ((?x14842 (* l_0_7_102 l_0_7_102)))
 (let ((?x14845 (+ (+ (+ (* l_0_7_100 l_0_7_100) (* l_0_7_101 l_0_7_101)) ?x14842) ?x14844)))
 (let ((?x14864 (- (- (- (- (- (+ (+ ?x14845 ?x14846) ?x14848) ?x14851) ?x14854) ?x14857) ?x14860) ?x14863)))
 (= (+ (+ (+ (+ (+ ?x14864 ?x14866) ?x14869) ?x14872) ?x14875) ?x14878) 0.0)))))))))))))))))))))))
(assert
 (let ((?x14921 (* l_0_7_84 l_0_7_84)))
 (let ((?x14919 (* l_0_7_83 l_0_7_83)))
 (let ((?x14917 (* l_0_7_82 l_0_7_82)))
 (let ((?x14915 (* l_0_7_81 l_0_7_81)))
 (let ((?x14913 (* l_0_7_80 l_0_7_80)))
 (let ((?x14911 (* l_0_7_79 l_0_7_79)))
 (let ((?x14909 (* l_0_7_63 l_0_7_63)))
 (let ((?x14907 (* l_0_7_62 l_0_7_62)))
 (let ((?x14905 (* l_0_7_61 l_0_7_61)))
 (let ((?x14903 (* l_0_7_60 l_0_7_60)))
 (let ((?x14906 (- (- (- (* (- l_0_7_58) l_0_7_58) (* l_0_7_59 l_0_7_59)) ?x14903) ?x14905)))
 (let ((?x14920 (+ (+ (+ (+ (+ (- (- ?x14906 ?x14907) ?x14909) ?x14911) ?x14913) ?x14915) ?x14917) ?x14919)))
 (= (+ ?x14920 ?x14921) 0.0))))))))))))))
(assert
 (let ((?x2892 (* l_0_7_64 l_0_7_64)))
 (let ((?x13050 (* l_0_7_43 l_0_7_43)))
 (let ((?x14956 (* l_0_7_157 l_0_7_157)))
 (let ((?x14954 (* l_0_7_156 l_0_7_156)))
 (let ((?x14952 (* l_0_7_155 l_0_7_155)))
 (let ((?x14950 (* l_0_7_154 l_0_7_154)))
 (let ((?x14948 (* l_0_7_136 l_0_7_136)))
 (let ((?x14946 (* l_0_7_135 l_0_7_135)))
 (let ((?x14944 (* l_0_7_134 l_0_7_134)))
 (let ((?x14945 (- (- (* (* 4.0 l_0_7_106) l_0_7_112) (* l_0_7_133 l_0_7_133)) ?x14944)))
 (let ((?x14958 (+ (- (- (- (- (- (- ?x14945 ?x14946) ?x14948) ?x14950) ?x14952) ?x14954) ?x14956) ?x13050)))
 (= (- ?x14958 ?x2892) 0.0)))))))))))))
(assert
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x14547 (* ?x13053 l_0_7_70)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x14545 (* ?x13189 l_0_7_49)))
 (let ((?x13664 (* l_0_7_115 l_0_7_115)))
 (let ((?x4391 (* 2.0 ?x13664)))
 (let ((?x13661 (* l_0_7_114 l_0_7_114)))
 (let ((?x4376 (* 2.0 ?x13661)))
 (let ((?x13658 (* l_0_7_113 l_0_7_113)))
 (let ((?x4373 (* 2.0 ?x13658)))
 (let ((?x13655 (* l_0_7_112 l_0_7_112)))
 (let ((?x14245 (* 2.0 ?x13655)))
 (= (- (+ (+ (+ (+ ?x14245 ?x4373) ?x4376) ?x4391) ?x14545) ?x14547) 0.0))))))))))))))
(assert
 (let ((?x14984 (* l_0_7_94 l_0_7_94)))
 (let ((?x14982 (* l_0_7_93 l_0_7_93)))
 (let ((?x14980 (* l_0_7_92 l_0_7_92)))
 (let ((?x14978 (* l_0_7_91 l_0_7_91)))
 (let ((?x13053 (* 2.0 l_0_7_64)))
 (let ((?x14596 (* ?x13053 l_0_7_74)))
 (let ((?x13189 (* 2.0 l_0_7_43)))
 (let ((?x14594 (* ?x13189 l_0_7_53)))
 (let ((?x14277 (* 4.0 l_0_7_115)))
 (let ((?x14278 (* ?x14277 l_0_7_119)))
 (let ((?x14274 (* 4.0 l_0_7_114)))
 (let ((?x14275 (* ?x14274 l_0_7_118)))
 (let ((?x14271 (* 4.0 l_0_7_113)))
 (let ((?x14272 (* ?x14271 l_0_7_117)))
 (let ((?x14268 (* 4.0 l_0_7_112)))
 (let ((?x14269 (* ?x14268 l_0_7_116)))
 (let ((?x14981 (+ (+ (- (+ (+ (+ (+ ?x14269 ?x14272) ?x14275) ?x14278) ?x14594) ?x14596) ?x14978) ?x14980)))
 (= (+ (+ ?x14981 ?x14982) ?x14984) 0.0)))))))))))))))))))
(assert
 (let ((?x14203 (* l_0_7_66 l_0_7_66)))
 (let ((?x14201 (* l_0_7_65 l_0_7_65)))
 (let ((?x14993 (- (- (+ (* l_0_7_44 l_0_7_44) (* l_0_7_45 l_0_7_45)) ?x14201) ?x14203)))
 (= ?x14993 0.0)))))
(assert
 (let ((?x13491 (* 2.0 l_0_7_66)))
 (let ((?x13492 (* ?x13491 l_0_7_68)))
 (let ((?x13488 (* 2.0 l_0_7_65)))
 (let ((?x13489 (* ?x13488 l_0_7_67)))
 (let ((?x14674 (* l_0_7_52 l_0_7_52)))
 (let ((?x5832 (* 2.0 ?x14674)))
 (let ((?x14672 (* l_0_7_51 l_0_7_51)))
 (let ((?x5835 (* 2.0 ?x14672)))
 (let ((?x14670 (* l_0_7_50 l_0_7_50)))
 (let ((?x5828 (* 2.0 ?x14670)))
 (let ((?x14668 (* l_0_7_49 l_0_7_49)))
 (let ((?x5819 (* 2.0 ?x14668)))
 (let ((?x13483 (* 2.0 l_0_7_45)))
 (let ((?x13484 (* ?x13483 l_0_7_47)))
 (let ((?x13480 (* 2.0 l_0_7_44)))
 (let ((?x13481 (* ?x13480 l_0_7_46)))
 (let ((?x5823 (- (- (+ (+ (+ (+ (+ ?x13481 ?x13484) ?x5819) ?x5828) ?x5835) ?x5832) ?x13489) ?x13492)))
 (let ((?x14997 (- (- ?x5823 (* (* 2.0 l_0_7_70) l_0_7_70)) (* (* 2.0 l_0_7_71) l_0_7_71))))
 (let ((?x15001 (- (- ?x14997 (* (* 2.0 l_0_7_72) l_0_7_72)) (* (* 2.0 l_0_7_73) l_0_7_73))))
 (let ((?x15007 (- (- ?x15001 (* (* 2.0 l_0_7_91) l_0_7_91)) (* (* 2.0 l_0_7_92) l_0_7_92))))
 (let ((?x15013 (- (- ?x15007 (* (* 2.0 l_0_7_93) l_0_7_93)) (* (* 2.0 l_0_7_94) l_0_7_94))))
 (= ?x15013 0.0)))))))))))))))))))))))
(assert
 (let ((?x13491 (* 2.0 l_0_7_66)))
 (let ((?x14344 (* ?x13491 l_0_7_71)))
 (let ((?x13488 (* 2.0 l_0_7_65)))
 (let ((?x14342 (* ?x13488 l_0_7_70)))
 (let ((?x13483 (* 2.0 l_0_7_45)))
 (let ((?x14340 (* ?x13483 l_0_7_50)))
 (let ((?x13480 (* 2.0 l_0_7_44)))
 (let ((?x14338 (* ?x13480 l_0_7_49)))
 (= (- (- (+ ?x14338 ?x14340) ?x14342) ?x14344) 0.0))))))))))
(assert
 (let ((?x13491 (* 2.0 l_0_7_66)))
 (let ((?x14407 (* ?x13491 l_0_7_75)))
 (let ((?x13488 (* 2.0 l_0_7_65)))
 (let ((?x14405 (* ?x13488 l_0_7_74)))
 (let ((?x13483 (* 2.0 l_0_7_45)))
 (let ((?x14403 (* ?x13483 l_0_7_54)))
 (let ((?x13480 (* 2.0 l_0_7_44)))
 (let ((?x14401 (* ?x13480 l_0_7_53)))
 (= (- (- (+ ?x14401 ?x14403) ?x14405) ?x14407) 0.0))))))))))
(assert
 (let ((?x13491 (* 2.0 l_0_7_66)))
 (let ((?x14479 (* ?x13491 l_0_7_80)))
 (let ((?x13488 (* 2.0 l_0_7_65)))
 (let ((?x14477 (* ?x13488 l_0_7_79)))
 (let ((?x13483 (* 2.0 l_0_7_45)))
 (let ((?x14475 (* ?x13483 l_0_7_59)))
 (let ((?x13480 (* 2.0 l_0_7_44)))
 (let ((?x14473 (* ?x13480 l_0_7_58)))
 (= (- (- (+ ?x14473 ?x14475) ?x14477) ?x14479) 0.0))))))))))
(assert
 (let ((?x13637 (* l_0_7_69 l_0_7_69)))
 (let ((?x13635 (* l_0_7_68 l_0_7_68)))
 (let ((?x13633 (* l_0_7_67 l_0_7_67)))
 (let ((?x13631 (* l_0_7_48 l_0_7_48)))
 (let ((?x6074 (- (+ (+ (* l_0_7_46 l_0_7_46) (* l_0_7_47 l_0_7_47)) ?x13631) ?x13633)))
 (= (- (- ?x6074 ?x13635) ?x13637) 0.0)))))))
(assert
 (let ((?x13774 (* 2.0 l_0_7_69)))
 (let ((?x13775 (* ?x13774 l_0_7_72)))
 (let ((?x13771 (* 2.0 l_0_7_68)))
 (let ((?x13772 (* ?x13771 l_0_7_71)))
 (let ((?x13768 (* 2.0 l_0_7_67)))
 (let ((?x13769 (* ?x13768 l_0_7_70)))
 (let ((?x13765 (* 2.0 l_0_7_48)))
 (let ((?x13766 (* ?x13765 l_0_7_51)))
 (let ((?x13762 (* 2.0 l_0_7_47)))
 (let ((?x13763 (* ?x13762 l_0_7_50)))
 (let ((?x13759 (* 2.0 l_0_7_46)))
 (let ((?x13760 (* ?x13759 l_0_7_49)))
 (= (- (- (- (+ (+ ?x13760 ?x13763) ?x13766) ?x13769) ?x13772) ?x13775) 0.0))))))))))))))
(assert
 (let ((?x13774 (* 2.0 l_0_7_69)))
 (let ((?x13877 (* ?x13774 l_0_7_76)))
 (let ((?x13771 (* 2.0 l_0_7_68)))
 (let ((?x13875 (* ?x13771 l_0_7_75)))
 (let ((?x13768 (* 2.0 l_0_7_67)))
 (let ((?x13873 (* ?x13768 l_0_7_74)))
 (let ((?x13765 (* 2.0 l_0_7_48)))
 (let ((?x13871 (* ?x13765 l_0_7_55)))
 (let ((?x13762 (* 2.0 l_0_7_47)))
 (let ((?x13869 (* ?x13762 l_0_7_54)))
 (let ((?x13759 (* 2.0 l_0_7_46)))
 (let ((?x13867 (* ?x13759 l_0_7_53)))
 (= (- (- (- (+ (+ ?x13867 ?x13869) ?x13871) ?x13873) ?x13875) ?x13877) 0.0))))))))))))))
(assert
 (let ((?x13774 (* 2.0 l_0_7_69)))
 (let ((?x13970 (* ?x13774 l_0_7_81)))
 (let ((?x13771 (* 2.0 l_0_7_68)))
 (let ((?x13968 (* ?x13771 l_0_7_80)))
 (let ((?x13768 (* 2.0 l_0_7_67)))
 (let ((?x13966 (* ?x13768 l_0_7_79)))
 (let ((?x13765 (* 2.0 l_0_7_48)))
 (let ((?x13964 (* ?x13765 l_0_7_60)))
 (let ((?x13762 (* 2.0 l_0_7_47)))
 (let ((?x13962 (* ?x13762 l_0_7_59)))
 (let ((?x13759 (* 2.0 l_0_7_46)))
 (let ((?x13960 (* ?x13759 l_0_7_58)))
 (= (- (- (- (+ (+ ?x13960 ?x13962) ?x13964) ?x13966) ?x13968) ?x13970) 0.0))))))))))))))
(assert
 (let ((?x14683 (* l_0_7_73 l_0_7_73)))
 (let ((?x14681 (* l_0_7_72 l_0_7_72)))
 (let ((?x14679 (* l_0_7_71 l_0_7_71)))
 (let ((?x14677 (* l_0_7_70 l_0_7_70)))
 (let ((?x14674 (* l_0_7_52 l_0_7_52)))
 (let ((?x14672 (* l_0_7_51 l_0_7_51)))
 (let ((?x15024 (+ (+ (+ (* l_0_7_49 l_0_7_49) (* l_0_7_50 l_0_7_50)) ?x14672) ?x14674)))
 (= (- (- (- (- ?x15024 ?x14677) ?x14679) ?x14681) ?x14683) 0.0)))))))))
(assert
 (let ((?x14723 (* 2.0 l_0_7_73)))
 (let ((?x14724 (* ?x14723 l_0_7_77)))
 (let ((?x14720 (* 2.0 l_0_7_72)))
 (let ((?x14721 (* ?x14720 l_0_7_76)))
 (let ((?x14717 (* 2.0 l_0_7_71)))
 (let ((?x14718 (* ?x14717 l_0_7_75)))
 (let ((?x14714 (* 2.0 l_0_7_70)))
 (let ((?x14715 (* ?x14714 l_0_7_74)))
 (let ((?x14711 (* 2.0 l_0_7_52)))
 (let ((?x14712 (* ?x14711 l_0_7_56)))
 (let ((?x14708 (* 2.0 l_0_7_51)))
 (let ((?x14709 (* ?x14708 l_0_7_55)))
 (let ((?x14705 (* 2.0 l_0_7_50)))
 (let ((?x14706 (* ?x14705 l_0_7_54)))
 (let ((?x14702 (* 2.0 l_0_7_49)))
 (let ((?x14703 (* ?x14702 l_0_7_53)))
 (let ((?x15050 (- (- (- (- (+ (+ (+ ?x14703 ?x14706) ?x14709) ?x14712) ?x14715) ?x14718) ?x14721) ?x14724)))
 (= ?x15050 0.0)))))))))))))))))))
(assert
 (let ((?x14723 (* 2.0 l_0_7_73)))
 (let ((?x14766 (* ?x14723 l_0_7_82)))
 (let ((?x14720 (* 2.0 l_0_7_72)))
 (let ((?x14764 (* ?x14720 l_0_7_81)))
 (let ((?x14717 (* 2.0 l_0_7_71)))
 (let ((?x14762 (* ?x14717 l_0_7_80)))
 (let ((?x14714 (* 2.0 l_0_7_70)))
 (let ((?x14760 (* ?x14714 l_0_7_79)))
 (let ((?x14711 (* 2.0 l_0_7_52)))
 (let ((?x14758 (* ?x14711 l_0_7_61)))
 (let ((?x14708 (* 2.0 l_0_7_51)))
 (let ((?x14756 (* ?x14708 l_0_7_60)))
 (let ((?x14705 (* 2.0 l_0_7_50)))
 (let ((?x14754 (* ?x14705 l_0_7_59)))
 (let ((?x14702 (* 2.0 l_0_7_49)))
 (let ((?x14752 (* ?x14702 l_0_7_58)))
 (let ((?x6292 (- (- (- (- (+ (+ (+ ?x14752 ?x14754) ?x14756) ?x14758) ?x14760) ?x14762) ?x14764) ?x14766)))
 (= ?x6292 0.0)))))))))))))))))))
(assert
 (let ((?x14803 (* l_0_7_78 l_0_7_78)))
 (let ((?x14801 (* l_0_7_77 l_0_7_77)))
 (let ((?x14799 (* l_0_7_76 l_0_7_76)))
 (let ((?x14797 (* l_0_7_75 l_0_7_75)))
 (let ((?x14795 (* l_0_7_74 l_0_7_74)))
 (let ((?x14793 (* l_0_7_57 l_0_7_57)))
 (let ((?x14791 (* l_0_7_56 l_0_7_56)))
 (let ((?x14789 (* l_0_7_55 l_0_7_55)))
 (let ((?x6354 (+ (+ (+ (* l_0_7_53 l_0_7_53) (* l_0_7_54 l_0_7_54)) ?x14789) ?x14791)))
 (= (- (- (- (- (- (+ ?x6354 ?x14793) ?x14795) ?x14797) ?x14799) ?x14801) ?x14803) 0.0)))))))))))
(assert
 (let ((?x14877 (* 2.0 l_0_7_78)))
 (let ((?x14878 (* ?x14877 l_0_7_83)))
 (let ((?x14874 (* 2.0 l_0_7_77)))
 (let ((?x14875 (* ?x14874 l_0_7_82)))
 (let ((?x14871 (* 2.0 l_0_7_76)))
 (let ((?x14872 (* ?x14871 l_0_7_81)))
 (let ((?x14868 (* 2.0 l_0_7_75)))
 (let ((?x14869 (* ?x14868 l_0_7_80)))
 (let ((?x14865 (* 2.0 l_0_7_74)))
 (let ((?x14866 (* ?x14865 l_0_7_79)))
 (let ((?x14863 (* (* 2.0 l_0_7_57) l_0_7_62)))
 (let ((?x14860 (* (* 2.0 l_0_7_56) l_0_7_61)))
 (let ((?x14857 (* (* 2.0 l_0_7_55) l_0_7_60)))
 (let ((?x14854 (* (* 2.0 l_0_7_54) l_0_7_59)))
 (let ((?x14851 (* (* 2.0 l_0_7_53) l_0_7_58)))
 (let ((?x15063 (- (- (- (+ (+ (+ (+ ?x14851 ?x14854) ?x14857) ?x14860) ?x14863) ?x14866) ?x14869) ?x14872)))
 (= (- (- ?x15063 ?x14875) ?x14878) 0.0))))))))))))))))))
(assert
 (let ((?x14921 (* l_0_7_84 l_0_7_84)))
 (let ((?x14919 (* l_0_7_83 l_0_7_83)))
 (let ((?x14917 (* l_0_7_82 l_0_7_82)))
 (let ((?x14915 (* l_0_7_81 l_0_7_81)))
 (let ((?x14913 (* l_0_7_80 l_0_7_80)))
 (let ((?x14911 (* l_0_7_79 l_0_7_79)))
 (let ((?x14909 (* l_0_7_63 l_0_7_63)))
 (let ((?x14907 (* l_0_7_62 l_0_7_62)))
 (let ((?x14905 (* l_0_7_61 l_0_7_61)))
 (let ((?x14903 (* l_0_7_60 l_0_7_60)))
 (let ((?x6488 (+ (+ (+ (* l_0_7_58 l_0_7_58) (* l_0_7_59 l_0_7_59)) ?x14903) ?x14905)))
 (let ((?x6519 (- (- (- (- (- (+ (+ ?x6488 ?x14907) ?x14909) ?x14911) ?x14913) ?x14915) ?x14917) ?x14919)))
 (= (- ?x6519 ?x14921) 0.0))))))))))))))
(assert
 (let ((?x6604 (+ (* 2.0 (* l_0_7_44 l_0_7_44)) (* 2.0 (* l_0_7_45 l_0_7_45)))))
 (let ((?x6611 (- (- ?x6604 (* (* 2.0 l_0_7_65) l_0_7_65)) (* (* 2.0 l_0_7_66) l_0_7_66))))
 (let ((?x6603 (- (- ?x6611 (* (* 2.0 l_0_7_86) l_0_7_86)) (* (* 2.0 l_0_7_87) l_0_7_87))))
 (= ?x6603 0.0)))))
(assert
 (let ((?x6450 (+ (* (* 4.0 l_0_7_44) l_0_7_46) (* (* 4.0 l_0_7_45) l_0_7_47))))
 (let ((?x6442 (- (- ?x6450 (* (* 4.0 l_0_7_65) l_0_7_67)) (* (* 4.0 l_0_7_66) l_0_7_68))))
 (let ((?x15071 (- (- ?x6442 (* (* 4.0 l_0_7_86) l_0_7_88)) (* (* 4.0 l_0_7_87) l_0_7_89))))
 (= ?x15071 0.0)))))
(assert
 (let ((?x6663 (+ (* (* 4.0 l_0_7_44) l_0_7_49) (* (* 4.0 l_0_7_45) l_0_7_50))))
 (let ((?x15091 (- (- ?x6663 (* (* 4.0 l_0_7_65) l_0_7_70)) (* (* 4.0 l_0_7_66) l_0_7_71))))
 (let ((?x15095 (- (- ?x15091 (* (* 4.0 l_0_7_86) l_0_7_91)) (* (* 4.0 l_0_7_87) l_0_7_92))))
 (= ?x15095 0.0)))))
(assert
 (let ((?x6711 (+ (* (* 4.0 l_0_7_44) l_0_7_53) (* (* 4.0 l_0_7_45) l_0_7_54))))
 (let ((?x15110 (- (- ?x6711 (* (* 4.0 l_0_7_65) l_0_7_74)) (* (* 4.0 l_0_7_66) l_0_7_75))))
 (let ((?x15114 (- (- ?x15110 (* (* 4.0 l_0_7_86) l_0_7_95)) (* (* 4.0 l_0_7_87) l_0_7_96))))
 (= ?x15114 0.0)))))
(assert
 (let ((?x15137 (- (* (* (- 4.0) l_0_7_100) l_0_7_86) (* (* 4.0 l_0_7_101) l_0_7_87))))
 (let ((?x15141 (+ (+ ?x15137 (* (* 4.0 l_0_7_44) l_0_7_58)) (* (* 4.0 l_0_7_45) l_0_7_59))))
 (let ((?x15145 (- (- ?x15141 (* (* 4.0 l_0_7_65) l_0_7_79)) (* (* 4.0 l_0_7_66) l_0_7_80))))
 (= ?x15145 0.0)))))
(assert
 (let ((?x6763 (+ (* 2.0 (* l_0_7_46 l_0_7_46)) (* 2.0 (* l_0_7_47 l_0_7_47)))))
 (let ((?x15162 (- (+ ?x6763 (* 2.0 (* l_0_7_48 l_0_7_48))) (* (* 2.0 l_0_7_67) l_0_7_67))))
 (let ((?x15166 (- (- ?x15162 (* (* 2.0 l_0_7_68) l_0_7_68)) (* (* 2.0 l_0_7_69) l_0_7_69))))
 (let ((?x15170 (- (- ?x15166 (* (* 2.0 l_0_7_88) l_0_7_88)) (* (* 2.0 l_0_7_89) l_0_7_89))))
 (= (- ?x15170 (* (* 2.0 l_0_7_90) l_0_7_90)) 0.0))))))
(assert
 (let ((?x15199 (+ (* (* 4.0 l_0_7_46) l_0_7_49) (* (* 4.0 l_0_7_47) l_0_7_50))))
 (let ((?x15205 (- (+ ?x15199 (* (* 4.0 l_0_7_48) l_0_7_51)) (* (* 4.0 l_0_7_67) l_0_7_70))))
 (let ((?x15211 (- (- ?x15205 (* (* 4.0 l_0_7_68) l_0_7_71)) (* (* 4.0 l_0_7_69) l_0_7_72))))
 (let ((?x15217 (- (- ?x15211 (* (* 4.0 l_0_7_88) l_0_7_91)) (* (* 4.0 l_0_7_89) l_0_7_92))))
 (= (- ?x15217 (* (* 4.0 l_0_7_90) l_0_7_93)) 0.0))))))
(assert
 (let ((?x15248 (+ (* (* 4.0 l_0_7_46) l_0_7_53) (* (* 4.0 l_0_7_47) l_0_7_54))))
 (let ((?x15252 (- (+ ?x15248 (* (* 4.0 l_0_7_48) l_0_7_55)) (* (* 4.0 l_0_7_67) l_0_7_74))))
 (let ((?x15256 (- (- ?x15252 (* (* 4.0 l_0_7_68) l_0_7_75)) (* (* 4.0 l_0_7_69) l_0_7_76))))
 (let ((?x15260 (- (- ?x15256 (* (* 4.0 l_0_7_88) l_0_7_95)) (* (* 4.0 l_0_7_89) l_0_7_96))))
 (= (- ?x15260 (* (* 4.0 l_0_7_90) l_0_7_97)) 0.0))))))
(assert
 (let ((?x15281 (- (* (* (- 4.0) l_0_7_100) l_0_7_88) (* (* 4.0 l_0_7_101) l_0_7_89))))
 (let ((?x15286 (+ (- ?x15281 (* (* 4.0 l_0_7_102) l_0_7_90)) (* (* 4.0 l_0_7_46) l_0_7_58))))
 (let ((?x15290 (+ (+ ?x15286 (* (* 4.0 l_0_7_47) l_0_7_59)) (* (* 4.0 l_0_7_48) l_0_7_60))))
 (let ((?x15294 (- (- ?x15290 (* (* 4.0 l_0_7_67) l_0_7_79)) (* (* 4.0 l_0_7_68) l_0_7_80))))
 (= (- ?x15294 (* (* 4.0 l_0_7_69) l_0_7_81)) 0.0))))))
(assert
 (let ((?x15321 (+ (* (* 4.0 l_0_7_49) l_0_7_53) (* (* 4.0 l_0_7_50) l_0_7_54))))
 (let ((?x15327 (+ (+ ?x15321 (* (* 4.0 l_0_7_51) l_0_7_55)) (* (* 4.0 l_0_7_52) l_0_7_56))))
 (let ((?x15333 (- (- ?x15327 (* (* 4.0 l_0_7_70) l_0_7_74)) (* (* 4.0 l_0_7_71) l_0_7_75))))
 (let ((?x15339 (- (- ?x15333 (* (* 4.0 l_0_7_72) l_0_7_76)) (* (* 4.0 l_0_7_73) l_0_7_77))))
 (let ((?x15345 (- (- ?x15339 (* (* 4.0 l_0_7_91) l_0_7_95)) (* (* 4.0 l_0_7_92) l_0_7_96))))
 (let ((?x15351 (- (- ?x15345 (* (* 4.0 l_0_7_93) l_0_7_97)) (* (* 4.0 l_0_7_94) l_0_7_98))))
 (= ?x15351 0.0))))))))
(assert
 (let ((?x15385 (- (* (* (- 4.0) l_0_7_100) l_0_7_91) (* (* 4.0 l_0_7_101) l_0_7_92))))
 (let ((?x15390 (- (- ?x15385 (* (* 4.0 l_0_7_102) l_0_7_93)) (* (* 4.0 l_0_7_103) l_0_7_94))))
 (let ((?x15394 (+ (+ ?x15390 (* (* 4.0 l_0_7_49) l_0_7_58)) (* (* 4.0 l_0_7_50) l_0_7_59))))
 (let ((?x15398 (+ (+ ?x15394 (* (* 4.0 l_0_7_51) l_0_7_60)) (* (* 4.0 l_0_7_52) l_0_7_61))))
 (let ((?x15402 (- (- ?x15398 (* (* 4.0 l_0_7_70) l_0_7_79)) (* (* 4.0 l_0_7_71) l_0_7_80))))
 (let ((?x15406 (- (- ?x15402 (* (* 4.0 l_0_7_72) l_0_7_81)) (* (* 4.0 l_0_7_73) l_0_7_82))))
 (= ?x15406 0.0))))))))
(assert
 (let ((?x7054 (+ (* 2.0 (* l_0_7_53 l_0_7_53)) (* 2.0 (* l_0_7_54 l_0_7_54)))))
 (let ((?x15430 (+ (+ ?x7054 (* 2.0 (* l_0_7_55 l_0_7_55))) (* 2.0 (* l_0_7_56 l_0_7_56)))))
 (let ((?x15434 (- (+ ?x15430 (* 2.0 (* l_0_7_57 l_0_7_57))) (* (* 2.0 l_0_7_74) l_0_7_74))))
 (let ((?x15438 (- (- ?x15434 (* (* 2.0 l_0_7_75) l_0_7_75)) (* (* 2.0 l_0_7_76) l_0_7_76))))
 (let ((?x15442 (- (- ?x15438 (* (* 2.0 l_0_7_77) l_0_7_77)) (* (* 2.0 l_0_7_78) l_0_7_78))))
 (let ((?x15448 (- (- ?x15442 (* (* 2.0 l_0_7_95) l_0_7_95)) (* (* 2.0 l_0_7_96) l_0_7_96))))
 (let ((?x15454 (- (- ?x15448 (* (* 2.0 l_0_7_97) l_0_7_97)) (* (* 2.0 l_0_7_98) l_0_7_98))))
 (= (- ?x15454 (* (* 2.0 l_0_7_99) l_0_7_99)) 0.0)))))))))
(assert
 (let ((?x15492 (- (* (* (- 4.0) l_0_7_100) l_0_7_95) (* (* 4.0 l_0_7_101) l_0_7_96))))
 (let ((?x15496 (- (- ?x15492 (* (* 4.0 l_0_7_102) l_0_7_97)) (* (* 4.0 l_0_7_103) l_0_7_98))))
 (let ((?x15502 (+ (- ?x15496 (* (* 4.0 l_0_7_104) l_0_7_99)) (* (* 4.0 l_0_7_53) l_0_7_58))))
 (let ((?x15508 (+ (+ ?x15502 (* (* 4.0 l_0_7_54) l_0_7_59)) (* (* 4.0 l_0_7_55) l_0_7_60))))
 (let ((?x15514 (+ (+ ?x15508 (* (* 4.0 l_0_7_56) l_0_7_61)) (* (* 4.0 l_0_7_57) l_0_7_62))))
 (let ((?x15520 (- (- ?x15514 (* (* 4.0 l_0_7_74) l_0_7_79)) (* (* 4.0 l_0_7_75) l_0_7_80))))
 (let ((?x15526 (- (- ?x15520 (* (* 4.0 l_0_7_76) l_0_7_81)) (* (* 4.0 l_0_7_77) l_0_7_82))))
 (= (- ?x15526 (* (* 4.0 l_0_7_78) l_0_7_83)) 0.0)))))))))
(assert
 (let ((?x15567 (- (* (* (- 2.0) l_0_7_100) l_0_7_100) (* (* 2.0 l_0_7_101) l_0_7_101))))
 (let ((?x15571 (- (- ?x15567 (* (* 2.0 l_0_7_102) l_0_7_102)) (* (* 2.0 l_0_7_103) l_0_7_103))))
 (let ((?x15576 (- (- ?x15571 (* (* 2.0 l_0_7_104) l_0_7_104)) (* (* 2.0 l_0_7_105) l_0_7_105))))
 (let ((?x15580 (+ (+ ?x15576 (* 2.0 (* l_0_7_58 l_0_7_58))) (* 2.0 (* l_0_7_59 l_0_7_59)))))
 (let ((?x15584 (+ (+ ?x15580 (* 2.0 (* l_0_7_60 l_0_7_60))) (* 2.0 (* l_0_7_61 l_0_7_61)))))
 (let ((?x15588 (+ (+ ?x15584 (* 2.0 (* l_0_7_62 l_0_7_62))) (* 2.0 (* l_0_7_63 l_0_7_63)))))
 (let ((?x15594 (- (- ?x15588 (* (* 2.0 l_0_7_79) l_0_7_79)) (* (* 2.0 l_0_7_80) l_0_7_80))))
 (let ((?x15600 (- (- ?x15594 (* (* 2.0 l_0_7_81) l_0_7_81)) (* (* 2.0 l_0_7_82) l_0_7_82))))
 (let ((?x15606 (- (- ?x15600 (* (* 2.0 l_0_7_83) l_0_7_83)) (* (* 2.0 l_0_7_84) l_0_7_84))))
 (= ?x15606 0.0)))))))))))
(assert
 (let ((?x13082 (* l_0_7_85 l_0_7_85)))
 (let ((?x15658 (- (* (* (- 2.0) l_0_7_127) l_0_7_137) (* (* 2.0 l_0_7_148) l_0_7_158))))
 (= (+ ?x15658 ?x13082) 0.0))))
(assert
 (let ((?x15670 (- (* (* 4.0 l_0_7_106) l_0_7_116) (* (* 2.0 l_0_7_133) l_0_7_137))))
 (let ((?x15674 (- (- ?x15670 (* (* 2.0 l_0_7_134) l_0_7_138)) (* (* 2.0 l_0_7_135) l_0_7_139))))
 (let ((?x15678 (- (- ?x15674 (* (* 2.0 l_0_7_136) l_0_7_140)) (* (* 2.0 l_0_7_154) l_0_7_158))))
 (let ((?x15682 (- (- ?x15678 (* (* 2.0 l_0_7_155) l_0_7_159)) (* (* 2.0 l_0_7_156) l_0_7_160))))
 (let ((?x15686 (+ (- ?x15682 (* (* 2.0 l_0_7_157) l_0_7_161)) (* (* 2.0 l_0_7_85) l_0_7_91))))
 (= ?x15686 0.0)))))))
(assert
 (let ((?x15696 (* l_0_7_162 l_0_7_162)))
 (let ((?x7300 (* l_0_7_161 l_0_7_161)))
 (let ((?x7303 (* l_0_7_160 l_0_7_160)))
 (let ((?x7291 (* l_0_7_159 l_0_7_159)))
 (let ((?x7279 (* l_0_7_158 l_0_7_158)))
 (let ((?x7374 (* l_0_7_141 l_0_7_141)))
 (let ((?x7377 (* l_0_7_140 l_0_7_140)))
 (let ((?x7370 (* l_0_7_139 l_0_7_139)))
 (let ((?x7339 (- (- (* (- l_0_7_137) l_0_7_137) (* l_0_7_138 l_0_7_138)) ?x7370)))
 (let ((?x15697 (- (- (- (- (- (- (- ?x7339 ?x7377) ?x7374) ?x7279) ?x7291) ?x7303) ?x7300) ?x15696)))
 (= (+ ?x15697 (* (* 2.0 l_0_7_85) l_0_7_95)) 0.0))))))))))))
(assert
 (let ((?x13811 (* l_0_7_120 l_0_7_120)))
 (let ((?x4758 (* 2.0 ?x13811)))
 (let ((?x13806 (* l_0_7_119 l_0_7_119)))
 (let ((?x4727 (* 2.0 ?x13806)))
 (let ((?x13803 (* l_0_7_118 l_0_7_118)))
 (let ((?x4713 (* 2.0 ?x13803)))
 (let ((?x13800 (* l_0_7_117 l_0_7_117)))
 (let ((?x4685 (* 2.0 ?x13800)))
 (let ((?x13797 (* l_0_7_116 l_0_7_116)))
 (let ((?x14368 (* 2.0 ?x13797)))
 (let ((?x15724 (+ (+ (+ (+ (+ ?x14368 ?x4685) ?x4713) ?x4727) ?x4758) (* (* 2.0 l_0_7_91) l_0_7_95))))
 (let ((?x15728 (+ (+ ?x15724 (* (* 2.0 l_0_7_92) l_0_7_96)) (* (* 2.0 l_0_7_93) l_0_7_97))))
 (= (+ ?x15728 (* (* 2.0 l_0_7_94) l_0_7_98)) 0.0))))))))))))))
(assert
 (let ((?x7162 (* l_0_7_99 l_0_7_99)))
 (let ((?x7156 (* l_0_7_98 l_0_7_98)))
 (let ((?x7153 (* l_0_7_97 l_0_7_97)))
 (let ((?x15734 (+ (+ (+ (* l_0_7_95 l_0_7_95) (* l_0_7_96 l_0_7_96)) ?x7153) ?x7156)))
 (= (+ ?x15734 ?x7162) 0.0))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_22 0.0))
(assert
 (>= l_0_7_24 0.0))
(assert
 (>= l_0_7_27 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_42 0.0))
(assert
 (>= l_0_7_43 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_52 0.0))
(assert
 (>= l_0_7_57 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_64 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_69 0.0))
(assert
 (>= l_0_7_73 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_84 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_87 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_94 0.0))
(assert
 (>= l_0_7_99 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (>= l_0_7_106 0.0))
(assert
 (>= l_0_7_108 0.0))
(assert
 (>= l_0_7_111 0.0))
(assert
 (>= l_0_7_115 0.0))
(assert
 (>= l_0_7_120 0.0))
(assert
 (>= l_0_7_126 0.0))
(assert
 (>= l_0_7_127 0.0))
(assert
 (>= l_0_7_129 0.0))
(assert
 (>= l_0_7_132 0.0))
(assert
 (>= l_0_7_136 0.0))
(assert
 (>= l_0_7_141 0.0))
(assert
 (>= l_0_7_147 0.0))
(assert
 (>= l_0_7_148 0.0))
(assert
 (>= l_0_7_150 0.0))
(assert
 (>= l_0_7_153 0.0))
(assert
 (>= l_0_7_157 0.0))
(assert
 (>= l_0_7_162 0.0))
(assert
 (>= l_0_7_168 0.0))
(assert
 (let ((?x15797 (* l_0_8_64 l_0_8_64)))
 (let ((?x15795 (* l_0_8_43 l_0_8_43)))
 (let ((?x15791 (- (* (* (- 2.0) l_0_8_127) l_0_8_142) (* (* 2.0 l_0_8_148) l_0_8_163))))
 (let ((?x15799 (+ (+ (- (- ?x15791 (* (* 2.0 l_0_8_169) l_0_8_184)) ?x15795) ?x15797) 1.0)))
 (= ?x15799 0.0))))))
(assert
 (let ((?x15842 (* l_0_8_174 l_0_8_174)))
 (let ((?x15840 (* l_0_8_173 l_0_8_173)))
 (let ((?x15838 (* l_0_8_172 l_0_8_172)))
 (let ((?x15836 (* l_0_8_153 l_0_8_153)))
 (let ((?x15834 (* l_0_8_152 l_0_8_152)))
 (let ((?x15832 (* l_0_8_151 l_0_8_151)))
 (let ((?x15830 (* l_0_8_132 l_0_8_132)))
 (let ((?x15828 (* l_0_8_131 l_0_8_131)))
 (let ((?x15826 (* l_0_8_130 l_0_8_130)))
 (let ((?x15825 (+ (- (* (- 1.0) _a_0_) (* (* 2.0 l_0_8_1) l_0_8_4)) (* (* 2.0 l_0_8_106) l_0_8_109))))
 (let ((?x15839 (- (- (- (- (- (- (- ?x15825 ?x15826) ?x15828) ?x15830) ?x15832) ?x15834) ?x15836) ?x15838)))
 (= (- (- (- ?x15839 ?x15840) ?x15842) 1.0) 0.0)))))))))))))
(assert
 (let ((?x15864 (+ (- (- (* (- 1.0) _a_1_) (* 2.0 _a_4_)) (* l_0_8_1 l_0_8_1)) (* 1.0 (* l_0_8_106 l_0_8_106)))))
 (let ((?x15869 (- (- ?x15864 (* (* 2.0 l_0_8_127) l_0_8_130)) (* (* 2.0 l_0_8_148) l_0_8_151))))
 (= (- ?x15869 (* (* 2.0 l_0_8_169) l_0_8_172)) 0.0))))
(assert
 (let ((?x15893 (* 4.0 l_0_8_106)))
 (let ((?x15894 (* ?x15893 l_0_8_109)))
 (let ((?x15892 (- (- (* (- 1.0) _a_2_) (* 2.0 _a_5_)) (* (* 2.0 l_0_8_1) l_0_8_7))))
 (let ((?x15900 (- (+ (+ ?x15892 ?x15894) (* (* 2.0 l_0_8_106) l_0_8_112)) (* (* 2.0 l_0_8_130) l_0_8_133))))
 (let ((?x15906 (- (- ?x15900 (* (* 2.0 l_0_8_131) l_0_8_134)) (* (* 2.0 l_0_8_132) l_0_8_135))))
 (let ((?x15912 (- (- ?x15906 (* (* 2.0 l_0_8_151) l_0_8_154)) (* (* 2.0 l_0_8_152) l_0_8_155))))
 (let ((?x15918 (- (- ?x15912 (* (* 2.0 l_0_8_153) l_0_8_156)) (* (* 2.0 l_0_8_172) l_0_8_175))))
 (let ((?x15924 (- (- ?x15918 (* (* 2.0 l_0_8_173) l_0_8_176)) (* (* 2.0 l_0_8_174) l_0_8_177))))
 (= ?x15924 0.0))))))))))
(assert
 (let ((?x7722 (* l_0_8_169 l_0_8_169)))
 (let ((?x7715 (* l_0_8_148 l_0_8_148)))
 (let ((?x7716 (- (- (- (* (- _a_4_) _a_4_) (* l_0_8_127 l_0_8_127)) ?x7715) ?x7722)))
 (= ?x7716 0.0)))))
(assert
 (let ((?x15862 (* l_0_8_106 l_0_8_106)))
 (let ((?x15952 (* 2.0 ?x15862)))
 (let ((?x15955 (- (+ (* (* (- 2.0) _a_4_) _a_5_) ?x15952) (* (* 2.0 l_0_8_127) l_0_8_133))))
 (let ((?x15959 (- (- ?x15955 (* (* 2.0 l_0_8_148) l_0_8_154)) (* (* 2.0 l_0_8_169) l_0_8_175))))
 (= ?x15959 0.0))))))
(assert
 (let ((?x15797 (* l_0_8_64 l_0_8_64)))
 (let ((?x15795 (* l_0_8_43 l_0_8_43)))
 (let ((?x16001 (* l_0_8_178 l_0_8_178)))
 (let ((?x15999 (* l_0_8_177 l_0_8_177)))
 (let ((?x15997 (* l_0_8_176 l_0_8_176)))
 (let ((?x15995 (* l_0_8_175 l_0_8_175)))
 (let ((?x15993 (* l_0_8_157 l_0_8_157)))
 (let ((?x15991 (* l_0_8_156 l_0_8_156)))
 (let ((?x15989 (* l_0_8_155 l_0_8_155)))
 (let ((?x15987 (* l_0_8_154 l_0_8_154)))
 (let ((?x15985 (* l_0_8_136 l_0_8_136)))
 (let ((?x15983 (* l_0_8_135 l_0_8_135)))
 (let ((?x15981 (* l_0_8_134 l_0_8_134)))
 (let ((?x15979 (* l_0_8_133 l_0_8_133)))
 (let ((?x15980 (- (+ (* (- _a_5_) _a_5_) (* (* 4.0 l_0_8_106) l_0_8_112)) ?x15979)))
 (let ((?x15994 (- (- (- (- (- (- (- ?x15980 ?x15981) ?x15983) ?x15985) ?x15987) ?x15989) ?x15991) ?x15993)))
 (= (- (+ (- (- (- (- ?x15994 ?x15995) ?x15997) ?x15999) ?x16001) ?x15795) ?x15797) 0.0))))))))))))))))))
(assert
 (let ((?x15893 (* 4.0 l_0_8_106)))
 (let ((?x15894 (* ?x15893 l_0_8_109)))
 (let ((?x16029 (+ (- (* (- 1.0) _a_3_) (* (* 2.0 l_0_8_1) l_0_8_2)) (* (* 2.0 l_0_8_106) l_0_8_107))))
 (let ((?x16036 (- (- (- ?x16029 ?x15894) (* (* 2.0 l_0_8_128) l_0_8_130)) (* (* 2.0 l_0_8_129) l_0_8_131))))
 (let ((?x16042 (- (- ?x16036 (* (* 2.0 l_0_8_149) l_0_8_151)) (* (* 2.0 l_0_8_150) l_0_8_152))))
 (let ((?x16048 (- (- ?x16042 (* (* 2.0 l_0_8_170) l_0_8_172)) (* (* 2.0 l_0_8_171) l_0_8_173))))
 (let ((?x16053 (+ (- ?x16048 (* (* 2.0 l_0_8_22) l_0_8_25)) (* 2.0 (* l_0_8_43 l_0_8_43)))))
 (let ((?x16059 (- (- ?x16053 (* (* 2.0 l_0_8_64) l_0_8_64)) (* (* 2.0 l_0_8_85) l_0_8_85))))
 (= ?x16059 0.0))))))))))
(assert
 (let ((?x16104 (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_106) l_0_8_116))))
 (let ((?x16108 (- (- ?x16104 (* (* 2.0 l_0_8_130) l_0_8_137)) (* (* 2.0 l_0_8_131) l_0_8_138))))
 (let ((?x16112 (- (- ?x16108 (* (* 2.0 l_0_8_132) l_0_8_139)) (* (* 2.0 l_0_8_151) l_0_8_158))))
 (let ((?x16116 (- (- ?x16112 (* (* 2.0 l_0_8_152) l_0_8_159)) (* (* 2.0 l_0_8_153) l_0_8_160))))
 (let ((?x16120 (- (- ?x16116 (* (* 2.0 l_0_8_172) l_0_8_179)) (* (* 2.0 l_0_8_173) l_0_8_180))))
 (let ((?x16124 (+ (- ?x16120 (* (* 2.0 l_0_8_174) l_0_8_181)) (* (* 2.0 l_0_8_85) l_0_8_88))))
 (= ?x16124 0.0))))))))
(assert
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x16173 (* ?x16054 l_0_8_67)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x16171 (* ?x16170 l_0_8_46)))
 (let ((?x16151 (+ (* (* (- 2.0) l_0_8_1) l_0_8_16) (* (* 2.0 l_0_8_106) l_0_8_121))))
 (let ((?x16155 (- (- ?x16151 (* (* 2.0 l_0_8_130) l_0_8_142)) (* (* 2.0 l_0_8_131) l_0_8_143))))
 (let ((?x16159 (- (- ?x16155 (* (* 2.0 l_0_8_132) l_0_8_144)) (* (* 2.0 l_0_8_151) l_0_8_163))))
 (let ((?x16163 (- (- ?x16159 (* (* 2.0 l_0_8_152) l_0_8_164)) (* (* 2.0 l_0_8_153) l_0_8_165))))
 (let ((?x16167 (- (- ?x16163 (* (* 2.0 l_0_8_172) l_0_8_184)) (* (* 2.0 l_0_8_173) l_0_8_185))))
 (= (+ (- (- ?x16167 (* (* 2.0 l_0_8_174) l_0_8_186)) ?x16171) ?x16173) 0.0)))))))))))
(assert
 (let ((?x16240 (* l_0_8_3 l_0_8_3)))
 (let ((?x16232 (* l_0_8_2 l_0_8_2)))
 (let ((?x16226 (* 4.0 l_0_8_108)))
 (let ((?x16227 (* ?x16226 l_0_8_110)))
 (let ((?x16225 (+ (* (* (- 4.0) l_0_8_107) l_0_8_109) (* 1.0 (* l_0_8_107 l_0_8_107)))))
 (let ((?x16236 (- (- (+ (- ?x16225 ?x16227) (* 1.0 (* l_0_8_108 l_0_8_108))) ?x16232) (* (* 2.0 l_0_8_23) l_0_8_25))))
 (let ((?x16244 (+ (- (- ?x16236 (* (* 2.0 l_0_8_24) l_0_8_26)) ?x16240) (* (* 4.0 l_0_8_43) l_0_8_44))))
 (let ((?x16250 (- (- ?x16244 (* (* 4.0 l_0_8_64) l_0_8_65)) (* (* 4.0 l_0_8_85) l_0_8_86))))
 (= ?x16250 0.0))))))))))
(assert
 (let ((?x16306 (* l_0_8_27 l_0_8_27)))
 (let ((?x16304 (* l_0_8_26 l_0_8_26)))
 (let ((?x16302 (* l_0_8_25 l_0_8_25)))
 (let ((?x16289 (+ (* (* 2.0 l_0_8_107) l_0_8_109) (* (* 2.0 l_0_8_108) l_0_8_110))))
 (let ((?x16295 (- (- ?x16289 (* (* 2.0 l_0_8_109) l_0_8_109)) (* (* 2.0 l_0_8_110) l_0_8_110))))
 (let ((?x16301 (- (- ?x16295 (* (* 2.0 l_0_8_111) l_0_8_111)) (* (* 2.0 l_0_8_2) l_0_8_4))))
 (let ((?x16310 (- (- (- (- ?x16301 ?x16302) ?x16304) ?x16306) (* (* 2.0 l_0_8_3) l_0_8_5))))
 (let ((?x16314 (- (+ ?x16310 (* (* 4.0 l_0_8_43) l_0_8_46)) (* (* 4.0 l_0_8_64) l_0_8_67))))
 (= (- ?x16314 (* (* 4.0 l_0_8_85) l_0_8_88)) 0.0))))))))))
(assert
 (let ((?x16362 (* 4.0 l_0_8_111)))
 (let ((?x16363 (* ?x16362 l_0_8_114)))
 (let ((?x16359 (* 4.0 l_0_8_110)))
 (let ((?x16360 (* ?x16359 l_0_8_113)))
 (let ((?x16356 (* 4.0 l_0_8_109)))
 (let ((?x16357 (* ?x16356 l_0_8_112)))
 (let ((?x16226 (* 4.0 l_0_8_108)))
 (let ((?x16227 (* ?x16226 l_0_8_110)))
 (let ((?x16352 (+ (* (* 4.0 l_0_8_107) l_0_8_109) (* (* 2.0 l_0_8_107) l_0_8_112))))
 (let ((?x16361 (- (- (+ (+ ?x16352 ?x16227) (* (* 2.0 l_0_8_108) l_0_8_113)) ?x16357) ?x16360)))
 (let ((?x16369 (- (- (- ?x16361 ?x16363) (* (* 2.0 l_0_8_2) l_0_8_7)) (* (* 2.0 l_0_8_25) l_0_8_28))))
 (let ((?x16375 (- (- ?x16369 (* (* 2.0 l_0_8_26) l_0_8_29)) (* (* 2.0 l_0_8_27) l_0_8_30))))
 (let ((?x16379 (+ (- ?x16375 (* (* 2.0 l_0_8_3) l_0_8_8)) (* (* 4.0 l_0_8_43) l_0_8_49))))
 (let ((?x16383 (- (- ?x16379 (* (* 4.0 l_0_8_64) l_0_8_70)) (* (* 4.0 l_0_8_85) l_0_8_91))))
 (= ?x16383 0.0))))))))))))))))
(assert
 (let ((?x16362 (* 4.0 l_0_8_111)))
 (let ((?x16407 (* ?x16362 l_0_8_118)))
 (let ((?x16359 (* 4.0 l_0_8_110)))
 (let ((?x16405 (* ?x16359 l_0_8_117)))
 (let ((?x16356 (* 4.0 l_0_8_109)))
 (let ((?x16400 (* ?x16356 l_0_8_116)))
 (let ((?x8327 (+ (* (* 2.0 l_0_8_107) l_0_8_116) (* (* 2.0 l_0_8_108) l_0_8_117))))
 (let ((?x16408 (- (- (- (- ?x8327 ?x16400) (* (* 2.0 l_0_8_11) l_0_8_2)) ?x16405) ?x16407)))
 (let ((?x16413 (- (- ?x16408 (* (* 2.0 l_0_8_12) l_0_8_3)) (* (* 2.0 l_0_8_25) l_0_8_32))))
 (let ((?x16417 (- (- ?x16413 (* (* 2.0 l_0_8_26) l_0_8_33)) (* (* 2.0 l_0_8_27) l_0_8_34))))
 (let ((?x16421 (- (+ ?x16417 (* (* 4.0 l_0_8_43) l_0_8_53)) (* (* 4.0 l_0_8_64) l_0_8_74))))
 (let ((?x16426 (+ (- ?x16421 (* (* 4.0 l_0_8_85) l_0_8_95)) (* (* 2.0 l_0_8_86) l_0_8_88))))
 (= (+ ?x16426 (* (* 2.0 l_0_8_87) l_0_8_89)) 0.0))))))))))))))
(assert
 (let ((?x16490 (* 2.0 l_0_8_66)))
 (let ((?x16491 (* ?x16490 l_0_8_68)))
 (let ((?x16487 (* 2.0 l_0_8_65)))
 (let ((?x16488 (* ?x16487 l_0_8_67)))
 (let ((?x16482 (* 2.0 l_0_8_45)))
 (let ((?x16483 (* ?x16482 l_0_8_47)))
 (let ((?x16479 (* 2.0 l_0_8_44)))
 (let ((?x16480 (* ?x16479 l_0_8_46)))
 (let ((?x16362 (* 4.0 l_0_8_111)))
 (let ((?x16463 (* ?x16362 l_0_8_123)))
 (let ((?x16359 (* 4.0 l_0_8_110)))
 (let ((?x16461 (* ?x16359 l_0_8_122)))
 (let ((?x16356 (* 4.0 l_0_8_109)))
 (let ((?x16459 (* ?x16356 l_0_8_121)))
 (let ((?x16456 (+ (* (* (- 4.0) l_0_8_100) l_0_8_85) (* (* 2.0 l_0_8_107) l_0_8_121))))
 (let ((?x16464 (- (- (- (+ ?x16456 (* (* 2.0 l_0_8_108) l_0_8_122)) ?x16459) ?x16461) ?x16463)))
 (let ((?x16470 (- (- ?x16464 (* (* 2.0 l_0_8_16) l_0_8_2)) (* (* 2.0 l_0_8_17) l_0_8_3))))
 (let ((?x16474 (- (- ?x16470 (* (* 2.0 l_0_8_25) l_0_8_37)) (* (* 2.0 l_0_8_26) l_0_8_38))))
 (let ((?x16478 (+ (- ?x16474 (* (* 2.0 l_0_8_27) l_0_8_39)) (* (* 4.0 l_0_8_43) l_0_8_58))))
 (let ((?x16489 (+ (- (- (- ?x16478 ?x16480) ?x16483) (* (* 4.0 l_0_8_64) l_0_8_79)) ?x16488)))
 (= (+ ?x16489 ?x16491) 0.0))))))))))))))))))))))
(assert
 (let ((?x16552 (* l_0_8_6 l_0_8_6)))
 (let ((?x16550 (* l_0_8_5 l_0_8_5)))
 (let ((?x16548 (* l_0_8_4 l_0_8_4)))
 (let ((?x16537 (+ (* 1.0 (* l_0_8_109 l_0_8_109)) (* 1.0 (* l_0_8_110 l_0_8_110)))))
 (let ((?x16553 (- (- (- (+ ?x16537 (* 1.0 (* l_0_8_111 l_0_8_111))) ?x16548) ?x16550) ?x16552)))
 (= ?x16553 0.0)))))))
(assert
 (let ((?x16331 (* l_0_8_111 l_0_8_111)))
 (let ((?x16332 (* 2.0 ?x16331)))
 (let ((?x8096 (* l_0_8_110 l_0_8_110)))
 (let ((?x16326 (* 2.0 ?x8096)))
 (let ((?x16321 (* l_0_8_109 l_0_8_109)))
 (let ((?x16322 (* 2.0 ?x16321)))
 (let ((?x16569 (+ (+ (* (* 2.0 l_0_8_109) l_0_8_112) ?x16322) (* (* 2.0 l_0_8_110) l_0_8_113))))
 (let ((?x16576 (- (+ (+ (+ ?x16569 ?x16326) (* (* 2.0 l_0_8_111) l_0_8_114)) ?x16332) (* (* 2.0 l_0_8_4) l_0_8_7))))
 (let ((?x16582 (- (- ?x16576 (* (* 2.0 l_0_8_5) l_0_8_8)) (* (* 2.0 l_0_8_6) l_0_8_9))))
 (= ?x16582 0.0)))))))))))
(assert
 (let ((?x16598 (* l_0_8_90 l_0_8_90)))
 (let ((?x16596 (* l_0_8_89 l_0_8_89)))
 (let ((?x16594 (* l_0_8_88 l_0_8_88)))
 (let ((?x8735 (- (* (* 2.0 l_0_8_109) l_0_8_116) (* (* 2.0 l_0_8_11) l_0_8_4))))
 (let ((?x16588 (+ (+ ?x8735 (* (* 2.0 l_0_8_110) l_0_8_117)) (* (* 2.0 l_0_8_111) l_0_8_118))))
 (let ((?x16593 (- (- ?x16588 (* (* 2.0 l_0_8_12) l_0_8_5)) (* (* 2.0 l_0_8_13) l_0_8_6))))
 (= (+ (+ (+ ?x16593 ?x16594) ?x16596) ?x16598) 0.0))))))))
(assert
 (let ((?x16643 (* l_0_8_69 l_0_8_69)))
 (let ((?x16641 (* l_0_8_68 l_0_8_68)))
 (let ((?x16639 (* l_0_8_67 l_0_8_67)))
 (let ((?x16637 (* l_0_8_48 l_0_8_48)))
 (let ((?x16635 (* l_0_8_47 l_0_8_47)))
 (let ((?x16633 (* l_0_8_46 l_0_8_46)))
 (let ((?x16623 (+ (* (* 2.0 l_0_8_109) l_0_8_121) (* (* 2.0 l_0_8_110) l_0_8_122))))
 (let ((?x16627 (- (+ ?x16623 (* (* 2.0 l_0_8_111) l_0_8_123)) (* (* 2.0 l_0_8_16) l_0_8_4))))
 (let ((?x16632 (- (- ?x16627 (* (* 2.0 l_0_8_17) l_0_8_5)) (* (* 2.0 l_0_8_18) l_0_8_6))))
 (= (+ (+ (+ (- (- (- ?x16632 ?x16633) ?x16635) ?x16637) ?x16639) ?x16641) ?x16643) 0.0)))))))))))
(assert
 (let ((?x16680 (* l_0_8_9 l_0_8_9)))
 (let ((?x16678 (* l_0_8_8 l_0_8_8)))
 (let ((?x16676 (* l_0_8_7 l_0_8_7)))
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x16173 (* ?x16054 l_0_8_67)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x16171 (* ?x16170 l_0_8_46)))
 (let ((?x16362 (* 4.0 l_0_8_111)))
 (let ((?x16363 (* ?x16362 l_0_8_114)))
 (let ((?x16359 (* 4.0 l_0_8_110)))
 (let ((?x16360 (* ?x16359 l_0_8_113)))
 (let ((?x16356 (* 4.0 l_0_8_109)))
 (let ((?x16357 (* ?x16356 l_0_8_112)))
 (let ((?x16664 (+ (+ (+ (+ (* (- l_0_8_10) l_0_8_10) ?x16357) ?x16360) ?x16363) (* 1.0 (* l_0_8_112 l_0_8_112)))))
 (let ((?x16670 (+ (+ ?x16664 (* 1.0 (* l_0_8_113 l_0_8_113))) (* 1.0 (* l_0_8_114 l_0_8_114)))))
 (let ((?x16677 (- (- (+ (+ ?x16670 (* 1.0 (* l_0_8_115 l_0_8_115))) ?x16171) ?x16173) ?x16676)))
 (= (- (- ?x16677 ?x16678) ?x16680) 0.0))))))))))))))))))
(assert
 (let ((?x16362 (* 4.0 l_0_8_111)))
 (let ((?x16407 (* ?x16362 l_0_8_118)))
 (let ((?x16359 (* 4.0 l_0_8_110)))
 (let ((?x16405 (* ?x16359 l_0_8_117)))
 (let ((?x16356 (* 4.0 l_0_8_109)))
 (let ((?x16400 (* ?x16356 l_0_8_116)))
 (let ((?x16699 (- (+ (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x16400) (* (* 2.0 l_0_8_11) l_0_8_7))))
 (let ((?x16707 (+ (+ (+ (+ ?x16699 ?x16405) ?x16407) (* (* 2.0 l_0_8_112) l_0_8_116)) (* (* 2.0 l_0_8_113) l_0_8_117))))
 (let ((?x16713 (+ (+ ?x16707 (* (* 2.0 l_0_8_114) l_0_8_118)) (* (* 2.0 l_0_8_115) l_0_8_119))))
 (let ((?x16717 (- (- ?x16713 (* (* 2.0 l_0_8_12) l_0_8_8)) (* (* 2.0 l_0_8_13) l_0_8_9))))
 (let ((?x16723 (+ (+ ?x16717 (* (* 2.0 l_0_8_88) l_0_8_91)) (* (* 2.0 l_0_8_89) l_0_8_92))))
 (= (+ ?x16723 (* (* 2.0 l_0_8_90) l_0_8_93)) 0.0)))))))))))))
(assert
 (let ((?x16793 (* 2.0 l_0_8_69)))
 (let ((?x16794 (* ?x16793 l_0_8_72)))
 (let ((?x16790 (* 2.0 l_0_8_68)))
 (let ((?x16791 (* ?x16790 l_0_8_71)))
 (let ((?x16787 (* 2.0 l_0_8_67)))
 (let ((?x16788 (* ?x16787 l_0_8_70)))
 (let ((?x16784 (* 2.0 l_0_8_48)))
 (let ((?x16785 (* ?x16784 l_0_8_51)))
 (let ((?x16781 (* 2.0 l_0_8_47)))
 (let ((?x16782 (* ?x16781 l_0_8_50)))
 (let ((?x16778 (* 2.0 l_0_8_46)))
 (let ((?x16779 (* ?x16778 l_0_8_49)))
 (let ((?x16362 (* 4.0 l_0_8_111)))
 (let ((?x16463 (* ?x16362 l_0_8_123)))
 (let ((?x16359 (* 4.0 l_0_8_110)))
 (let ((?x16461 (* ?x16359 l_0_8_122)))
 (let ((?x16356 (* 4.0 l_0_8_109)))
 (let ((?x16459 (* ?x16356 l_0_8_121)))
 (let ((?x16765 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_10) l_0_8_19) ?x16459) ?x16461) ?x16463) (* (* 2.0 l_0_8_112) l_0_8_121))))
 (let ((?x16769 (+ (+ ?x16765 (* (* 2.0 l_0_8_113) l_0_8_122)) (* (* 2.0 l_0_8_114) l_0_8_123))))
 (let ((?x16773 (- (+ ?x16769 (* (* 2.0 l_0_8_115) l_0_8_124)) (* (* 2.0 l_0_8_16) l_0_8_7))))
 (let ((?x16777 (- (- ?x16773 (* (* 2.0 l_0_8_17) l_0_8_8)) (* (* 2.0 l_0_8_18) l_0_8_9))))
 (= (+ (+ (+ (- (- (- ?x16777 ?x16779) ?x16782) ?x16785) ?x16788) ?x16791) ?x16794) 0.0))))))))))))))))))))))))
(assert
 (let ((?x16839 (* l_0_8_15 l_0_8_15)))
 (let ((?x16837 (* l_0_8_14 l_0_8_14)))
 (let ((?x16835 (* l_0_8_13 l_0_8_13)))
 (let ((?x16830 (* l_0_8_12 l_0_8_12)))
 (let ((?x16820 (+ (* (- l_0_8_11) l_0_8_11) (* 1.0 (* l_0_8_116 l_0_8_116)))))
 (let ((?x16826 (+ (+ ?x16820 (* 1.0 (* l_0_8_117 l_0_8_117))) (* 1.0 (* l_0_8_118 l_0_8_118)))))
 (let ((?x16834 (+ (- (+ ?x16826 (* 1.0 (* l_0_8_119 l_0_8_119))) ?x16830) (* 1.0 (* l_0_8_120 l_0_8_120)))))
 (let ((?x16842 (+ (- (- (- ?x16834 ?x16835) ?x16837) ?x16839) (* (* 2.0 l_0_8_88) l_0_8_95))))
 (let ((?x16846 (+ (+ ?x16842 (* (* 2.0 l_0_8_89) l_0_8_96)) (* (* 2.0 l_0_8_90) l_0_8_97))))
 (= ?x16846 0.0)))))))))))
(assert
 (let ((?x16793 (* 2.0 l_0_8_69)))
 (let ((?x16899 (* ?x16793 l_0_8_76)))
 (let ((?x16790 (* 2.0 l_0_8_68)))
 (let ((?x16897 (* ?x16790 l_0_8_75)))
 (let ((?x16787 (* 2.0 l_0_8_67)))
 (let ((?x16895 (* ?x16787 l_0_8_74)))
 (let ((?x16784 (* 2.0 l_0_8_48)))
 (let ((?x16893 (* ?x16784 l_0_8_55)))
 (let ((?x16781 (* 2.0 l_0_8_47)))
 (let ((?x16891 (* ?x16781 l_0_8_54)))
 (let ((?x16778 (* 2.0 l_0_8_46)))
 (let ((?x16889 (* ?x16778 l_0_8_53)))
 (let ((?x8954 (+ (* (* 2.0 l_0_8_100) l_0_8_88) (* (* 2.0 l_0_8_101) l_0_8_89))))
 (let ((?x16863 (- (+ ?x8954 (* (* 2.0 l_0_8_102) l_0_8_90)) (* (* 2.0 l_0_8_11) l_0_8_16))))
 (let ((?x16869 (+ (+ ?x16863 (* (* 2.0 l_0_8_116) l_0_8_121)) (* (* 2.0 l_0_8_117) l_0_8_122))))
 (let ((?x16875 (+ (+ ?x16869 (* (* 2.0 l_0_8_118) l_0_8_123)) (* (* 2.0 l_0_8_119) l_0_8_124))))
 (let ((?x16880 (+ (- ?x16875 (* (* 2.0 l_0_8_12) l_0_8_17)) (* (* 2.0 l_0_8_120) l_0_8_125))))
 (let ((?x16885 (- (- ?x16880 (* (* 2.0 l_0_8_13) l_0_8_18)) (* (* 2.0 l_0_8_14) l_0_8_19))))
 (let ((?x16894 (- (- (- (- ?x16885 (* (* 2.0 l_0_8_15) l_0_8_20)) ?x16889) ?x16891) ?x16893)))
 (= (+ (+ (+ ?x16894 ?x16895) ?x16897) ?x16899) 0.0)))))))))))))))))))))
(assert
 (let ((?x16793 (* 2.0 l_0_8_69)))
 (let ((?x16974 (* ?x16793 l_0_8_81)))
 (let ((?x16790 (* 2.0 l_0_8_68)))
 (let ((?x16972 (* ?x16790 l_0_8_80)))
 (let ((?x16787 (* 2.0 l_0_8_67)))
 (let ((?x16970 (* ?x16787 l_0_8_79)))
 (let ((?x16784 (* 2.0 l_0_8_48)))
 (let ((?x16968 (* ?x16784 l_0_8_60)))
 (let ((?x16781 (* 2.0 l_0_8_47)))
 (let ((?x16966 (* ?x16781 l_0_8_59)))
 (let ((?x16778 (* 2.0 l_0_8_46)))
 (let ((?x16964 (* ?x16778 l_0_8_58)))
 (let ((?x16962 (* l_0_8_21 l_0_8_21)))
 (let ((?x16960 (* l_0_8_20 l_0_8_20)))
 (let ((?x16958 (* l_0_8_19 l_0_8_19)))
 (let ((?x16956 (* l_0_8_18 l_0_8_18)))
 (let ((?x16954 (* l_0_8_17 l_0_8_17)))
 (let ((?x16952 (* l_0_8_16 l_0_8_16)))
 (let ((?x16939 (+ (* 1.0 (* l_0_8_121 l_0_8_121)) (* 1.0 (* l_0_8_122 l_0_8_122)))))
 (let ((?x16945 (+ (+ ?x16939 (* 1.0 (* l_0_8_123 l_0_8_123))) (* 1.0 (* l_0_8_124 l_0_8_124)))))
 (let ((?x16951 (+ (+ ?x16945 (* 1.0 (* l_0_8_125 l_0_8_125))) (* 1.0 (* l_0_8_126 l_0_8_126)))))
 (let ((?x16965 (- (- (- (- (- (- (- ?x16951 ?x16952) ?x16954) ?x16956) ?x16958) ?x16960) ?x16962) ?x16964)))
 (= (+ (+ (+ (- (- ?x16965 ?x16966) ?x16968) ?x16970) ?x16972) ?x16974) 0.0))))))))))))))))))))))))
(assert
 (let ((?x17003 (* l_0_8_22 l_0_8_22)))
 (let ((?x16998 (- (* (* (- 2.0) l_0_8_106) l_0_8_106) (* (* 2.0 l_0_8_127) l_0_8_128))))
 (let ((?x17002 (- (- ?x16998 (* (* 2.0 l_0_8_148) l_0_8_149)) (* (* 2.0 l_0_8_169) l_0_8_170))))
 (= (- ?x17002 ?x17003) 0.0)))))
(assert
 (let ((?x17033 (* l_0_8_171 l_0_8_171)))
 (let ((?x17031 (* l_0_8_170 l_0_8_170)))
 (let ((?x17029 (* l_0_8_150 l_0_8_150)))
 (let ((?x17027 (* l_0_8_149 l_0_8_149)))
 (let ((?x17025 (* l_0_8_129 l_0_8_129)))
 (let ((?x17026 (- (- (* (* (- 4.0) l_0_8_106) l_0_8_107) (* l_0_8_128 l_0_8_128)) ?x17025)))
 (let ((?x17036 (- (- (- (- (- ?x17026 ?x17027) ?x17029) ?x17031) ?x17033) (* (* 2.0 l_0_8_22) l_0_8_23))))
 (= ?x17036 0.0)))))))))
(assert
 (let ((?x15893 (* 4.0 l_0_8_106)))
 (let ((?x15977 (* ?x15893 l_0_8_112)))
 (let ((?x9275 (- (- (* ?x15893 l_0_8_107) ?x15977) (* (* 2.0 l_0_8_128) l_0_8_133))))
 (let ((?x17053 (- (- ?x9275 (* (* 2.0 l_0_8_129) l_0_8_134)) (* (* 2.0 l_0_8_149) l_0_8_154))))
 (let ((?x17057 (- (- ?x17053 (* (* 2.0 l_0_8_150) l_0_8_155)) (* (* 2.0 l_0_8_170) l_0_8_175))))
 (let ((?x17061 (- (- ?x17057 (* (* 2.0 l_0_8_171) l_0_8_176)) (* (* 2.0 l_0_8_22) l_0_8_28))))
 (= ?x17061 0.0))))))))
(assert
 (let ((?x9322 (- (* (* (- 4.0) l_0_8_106) l_0_8_116) (* (* 2.0 l_0_8_128) l_0_8_137))))
 (let ((?x17070 (- (- ?x9322 (* (* 2.0 l_0_8_129) l_0_8_138)) (* (* 2.0 l_0_8_149) l_0_8_158))))
 (let ((?x17074 (- (- ?x17070 (* (* 2.0 l_0_8_150) l_0_8_159)) (* (* 2.0 l_0_8_170) l_0_8_179))))
 (let ((?x17078 (- (- ?x17074 (* (* 2.0 l_0_8_171) l_0_8_180)) (* (* 2.0 l_0_8_22) l_0_8_32))))
 (= (+ ?x17078 (* (* 2.0 l_0_8_85) l_0_8_86)) 0.0))))))
(assert
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x17123 (* ?x16054 l_0_8_65)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x17121 (* ?x16170 l_0_8_44)))
 (let ((?x17108 (- (* (* (- 4.0) l_0_8_106) l_0_8_121) (* (* 2.0 l_0_8_128) l_0_8_142))))
 (let ((?x17112 (- (- ?x17108 (* (* 2.0 l_0_8_129) l_0_8_143)) (* (* 2.0 l_0_8_149) l_0_8_163))))
 (let ((?x17116 (- (- ?x17112 (* (* 2.0 l_0_8_150) l_0_8_164)) (* (* 2.0 l_0_8_170) l_0_8_184))))
 (let ((?x17120 (- (- ?x17116 (* (* 2.0 l_0_8_171) l_0_8_185)) (* (* 2.0 l_0_8_22) l_0_8_37))))
 (= (+ (- ?x17120 ?x17121) ?x17123) 0.0))))))))))
(assert
 (let ((?x17146 (* l_0_8_24 l_0_8_24)))
 (let ((?x17144 (* l_0_8_23 l_0_8_23)))
 (let ((?x17143 (- (* (* (- 2.0) l_0_8_107) l_0_8_107) (* (* 2.0 l_0_8_108) l_0_8_108))))
 (= (- (- ?x17143 ?x17144) ?x17146) 0.0)))))
(assert
 (let ((?x16229 (* l_0_8_108 l_0_8_108)))
 (let ((?x17150 (* 2.0 ?x16229)))
 (let ((?x16226 (* 4.0 l_0_8_108)))
 (let ((?x17157 (* ?x16226 l_0_8_113)))
 (let ((?x16223 (* l_0_8_107 l_0_8_107)))
 (let ((?x9585 (* 2.0 ?x16223)))
 (let ((?x17161 (- (+ (- (+ (* (* (- 4.0) l_0_8_107) l_0_8_112) ?x9585) ?x17157) ?x17150) (* (* 2.0 l_0_8_23) l_0_8_28))))
 (= (- ?x17161 (* (* 2.0 l_0_8_24) l_0_8_29)) 0.0)))))))))
(assert
 (let ((?x17179 (* l_0_8_87 l_0_8_87)))
 (let ((?x17177 (* l_0_8_86 l_0_8_86)))
 (let ((?x16226 (* 4.0 l_0_8_108)))
 (let ((?x17171 (* ?x16226 l_0_8_117)))
 (let ((?x17174 (- (- (* (* (- 4.0) l_0_8_107) l_0_8_116) ?x17171) (* (* 2.0 l_0_8_23) l_0_8_32))))
 (= (+ (+ (- ?x17174 (* (* 2.0 l_0_8_24) l_0_8_33)) ?x17177) ?x17179) 0.0)))))))
(assert
 (let ((?x17215 (* l_0_8_66 l_0_8_66)))
 (let ((?x17213 (* l_0_8_65 l_0_8_65)))
 (let ((?x17211 (* l_0_8_45 l_0_8_45)))
 (let ((?x17209 (* l_0_8_44 l_0_8_44)))
 (let ((?x16226 (* 4.0 l_0_8_108)))
 (let ((?x17203 (* ?x16226 l_0_8_122)))
 (let ((?x17206 (- (- (* (* (- 4.0) l_0_8_107) l_0_8_121) ?x17203) (* (* 2.0 l_0_8_23) l_0_8_37))))
 (let ((?x17214 (+ (- (- (- ?x17206 (* (* 2.0 l_0_8_24) l_0_8_38)) ?x17209) ?x17211) ?x17213)))
 (= (+ ?x17214 ?x17215) 0.0))))))))))
(assert
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x17123 (* ?x16054 l_0_8_65)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x17121 (* ?x16170 l_0_8_44)))
 (let ((?x17242 (* l_0_8_31 l_0_8_31)))
 (let ((?x17240 (* l_0_8_30 l_0_8_30)))
 (let ((?x17238 (* l_0_8_29 l_0_8_29)))
 (let ((?x17236 (* l_0_8_28 l_0_8_28)))
 (let ((?x16226 (* 4.0 l_0_8_108)))
 (let ((?x17157 (* ?x16226 l_0_8_113)))
 (let ((?x17229 (- (+ (* (* 4.0 l_0_8_107) l_0_8_112) ?x17157) (* (* 2.0 l_0_8_112) l_0_8_112))))
 (let ((?x17233 (- (- ?x17229 (* (* 2.0 l_0_8_113) l_0_8_113)) (* (* 2.0 l_0_8_114) l_0_8_114))))
 (let ((?x17241 (- (- (- (- ?x17233 (* (* 2.0 l_0_8_115) l_0_8_115)) ?x17236) ?x17238) ?x17240)))
 (= (- (+ (- ?x17241 ?x17242) ?x17121) ?x17123) 0.0)))))))))))))))
(assert
 (let ((?x17277 (* 4.0 l_0_8_115)))
 (let ((?x17278 (* ?x17277 l_0_8_119)))
 (let ((?x17274 (* 4.0 l_0_8_114)))
 (let ((?x17275 (* ?x17274 l_0_8_118)))
 (let ((?x17271 (* 4.0 l_0_8_113)))
 (let ((?x17272 (* ?x17271 l_0_8_117)))
 (let ((?x17268 (* 4.0 l_0_8_112)))
 (let ((?x17269 (* ?x17268 l_0_8_116)))
 (let ((?x16226 (* 4.0 l_0_8_108)))
 (let ((?x17171 (* ?x16226 l_0_8_117)))
 (let ((?x17276 (- (- (- (+ (* (* 4.0 l_0_8_107) l_0_8_116) ?x17171) ?x17269) ?x17272) ?x17275)))
 (let ((?x17285 (- (- (- ?x17276 ?x17278) (* (* 2.0 l_0_8_28) l_0_8_32)) (* (* 2.0 l_0_8_29) l_0_8_33))))
 (let ((?x17291 (- (- ?x17285 (* (* 2.0 l_0_8_30) l_0_8_34)) (* (* 2.0 l_0_8_31) l_0_8_35))))
 (let ((?x17295 (+ (+ ?x17291 (* (* 2.0 l_0_8_86) l_0_8_91)) (* (* 2.0 l_0_8_87) l_0_8_92))))
 (= ?x17295 0.0))))))))))))))))
(assert
 (let ((?x16490 (* 2.0 l_0_8_66)))
 (let ((?x17327 (* ?x16490 l_0_8_71)))
 (let ((?x16487 (* 2.0 l_0_8_65)))
 (let ((?x17325 (* ?x16487 l_0_8_70)))
 (let ((?x16482 (* 2.0 l_0_8_45)))
 (let ((?x17323 (* ?x16482 l_0_8_50)))
 (let ((?x16479 (* 2.0 l_0_8_44)))
 (let ((?x17321 (* ?x16479 l_0_8_49)))
 (let ((?x17277 (* 4.0 l_0_8_115)))
 (let ((?x9829 (* ?x17277 l_0_8_124)))
 (let ((?x17274 (* 4.0 l_0_8_114)))
 (let ((?x9832 (* ?x17274 l_0_8_123)))
 (let ((?x17271 (* 4.0 l_0_8_113)))
 (let ((?x9825 (* ?x17271 l_0_8_122)))
 (let ((?x17268 (* 4.0 l_0_8_112)))
 (let ((?x9890 (* ?x17268 l_0_8_121)))
 (let ((?x16226 (* 4.0 l_0_8_108)))
 (let ((?x17203 (* ?x16226 l_0_8_122)))
 (let ((?x9826 (- (- (- (+ (* (* 4.0 l_0_8_107) l_0_8_121) ?x17203) ?x9890) ?x9825) ?x9832)))
 (let ((?x17316 (- (- (- ?x9826 ?x9829) (* (* 2.0 l_0_8_28) l_0_8_37)) (* (* 2.0 l_0_8_29) l_0_8_38))))
 (let ((?x17320 (- (- ?x17316 (* (* 2.0 l_0_8_30) l_0_8_39)) (* (* 2.0 l_0_8_31) l_0_8_40))))
 (= (+ (+ (- (- ?x17320 ?x17321) ?x17323) ?x17325) ?x17327) 0.0)))))))))))))))))))))))
(assert
 (let ((?x17360 (* l_0_8_36 l_0_8_36)))
 (let ((?x17358 (* l_0_8_35 l_0_8_35)))
 (let ((?x17356 (* l_0_8_34 l_0_8_34)))
 (let ((?x17354 (* l_0_8_33 l_0_8_33)))
 (let ((?x17352 (* l_0_8_32 l_0_8_32)))
 (let ((?x17345 (- (* (* (- 2.0) l_0_8_116) l_0_8_116) (* (* 2.0 l_0_8_117) l_0_8_117))))
 (let ((?x17349 (- (- ?x17345 (* (* 2.0 l_0_8_118) l_0_8_118)) (* (* 2.0 l_0_8_119) l_0_8_119))))
 (let ((?x17357 (- (- (- (- ?x17349 (* (* 2.0 l_0_8_120) l_0_8_120)) ?x17352) ?x17354) ?x17356)))
 (let ((?x17365 (+ (+ (- (- ?x17357 ?x17358) ?x17360) (* (* 2.0 l_0_8_86) l_0_8_95)) (* (* 2.0 l_0_8_87) l_0_8_96))))
 (= ?x17365 0.0)))))))))))
(assert
 (let ((?x16490 (* 2.0 l_0_8_66)))
 (let ((?x17423 (* ?x16490 l_0_8_75)))
 (let ((?x16487 (* 2.0 l_0_8_65)))
 (let ((?x17421 (* ?x16487 l_0_8_74)))
 (let ((?x16482 (* 2.0 l_0_8_45)))
 (let ((?x17419 (* ?x16482 l_0_8_54)))
 (let ((?x16479 (* 2.0 l_0_8_44)))
 (let ((?x17417 (* ?x16479 l_0_8_53)))
 (let ((?x17400 (* (* 4.0 l_0_8_120) l_0_8_125)))
 (let ((?x17397 (* (* 4.0 l_0_8_119) l_0_8_124)))
 (let ((?x17394 (* (* 4.0 l_0_8_118) l_0_8_123)))
 (let ((?x17391 (* (* 4.0 l_0_8_117) l_0_8_122)))
 (let ((?x17388 (* (* 4.0 l_0_8_116) l_0_8_121)))
 (let ((?x17381 (+ (* (* 2.0 l_0_8_100) l_0_8_86) (* (* 2.0 l_0_8_101) l_0_8_87))))
 (let ((?x17404 (- (- (- (- (- (- ?x17381 ?x17388) ?x17391) ?x17394) ?x17397) ?x17400) (* (* 2.0 l_0_8_32) l_0_8_37))))
 (let ((?x17410 (- (- ?x17404 (* (* 2.0 l_0_8_33) l_0_8_38)) (* (* 2.0 l_0_8_34) l_0_8_39))))
 (let ((?x17416 (- (- ?x17410 (* (* 2.0 l_0_8_35) l_0_8_40)) (* (* 2.0 l_0_8_36) l_0_8_41))))
 (= (+ (+ (- (- ?x17416 ?x17417) ?x17419) ?x17421) ?x17423) 0.0)))))))))))))))))))
(assert
 (let ((?x16490 (* 2.0 l_0_8_66)))
 (let ((?x17488 (* ?x16490 l_0_8_80)))
 (let ((?x16487 (* 2.0 l_0_8_65)))
 (let ((?x17486 (* ?x16487 l_0_8_79)))
 (let ((?x16482 (* 2.0 l_0_8_45)))
 (let ((?x17484 (* ?x16482 l_0_8_59)))
 (let ((?x16479 (* 2.0 l_0_8_44)))
 (let ((?x17482 (* ?x16479 l_0_8_58)))
 (let ((?x17480 (* l_0_8_42 l_0_8_42)))
 (let ((?x17478 (* l_0_8_41 l_0_8_41)))
 (let ((?x17476 (* l_0_8_40 l_0_8_40)))
 (let ((?x17474 (* l_0_8_39 l_0_8_39)))
 (let ((?x17472 (* l_0_8_38 l_0_8_38)))
 (let ((?x17470 (* l_0_8_37 l_0_8_37)))
 (let ((?x17457 (- (* (* (- 2.0) l_0_8_121) l_0_8_121) (* (* 2.0 l_0_8_122) l_0_8_122))))
 (let ((?x17463 (- (- ?x17457 (* (* 2.0 l_0_8_123) l_0_8_123)) (* (* 2.0 l_0_8_124) l_0_8_124))))
 (let ((?x17469 (- (- ?x17463 (* (* 2.0 l_0_8_125) l_0_8_125)) (* (* 2.0 l_0_8_126) l_0_8_126))))
 (let ((?x17483 (- (- (- (- (- (- (- ?x17469 ?x17470) ?x17472) ?x17474) ?x17476) ?x17478) ?x17480) ?x17482)))
 (= (+ (+ (- ?x17483 ?x17484) ?x17486) ?x17488) 0.0))))))))))))))))))))
(assert
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x17554 (* ?x16054 l_0_8_70)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x17552 (* ?x16170 l_0_8_49)))
 (let ((?x17518 (- (* (* 4.0 l_0_8_106) l_0_8_121) (* (* 2.0 l_0_8_133) l_0_8_142))))
 (let ((?x17524 (- (- ?x17518 (* (* 2.0 l_0_8_134) l_0_8_143)) (* (* 2.0 l_0_8_135) l_0_8_144))))
 (let ((?x17530 (- (- ?x17524 (* (* 2.0 l_0_8_136) l_0_8_145)) (* (* 2.0 l_0_8_154) l_0_8_163))))
 (let ((?x17536 (- (- ?x17530 (* (* 2.0 l_0_8_155) l_0_8_164)) (* (* 2.0 l_0_8_156) l_0_8_165))))
 (let ((?x17542 (- (- ?x17536 (* (* 2.0 l_0_8_157) l_0_8_166)) (* (* 2.0 l_0_8_175) l_0_8_184))))
 (let ((?x17548 (- (- ?x17542 (* (* 2.0 l_0_8_176) l_0_8_185)) (* (* 2.0 l_0_8_177) l_0_8_186))))
 (= (+ (- (- ?x17548 (* (* 2.0 l_0_8_178) l_0_8_187)) ?x17552) ?x17554) 0.0))))))))))))
(assert
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x17629 (* ?x16054 l_0_8_74)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x17627 (* ?x16170 l_0_8_53)))
 (let ((?x17584 (- (* (* 2.0 l_0_8_100) l_0_8_85) (* (* 2.0 l_0_8_137) l_0_8_142))))
 (let ((?x17590 (- (- ?x17584 (* (* 2.0 l_0_8_138) l_0_8_143)) (* (* 2.0 l_0_8_139) l_0_8_144))))
 (let ((?x17596 (- (- ?x17590 (* (* 2.0 l_0_8_140) l_0_8_145)) (* (* 2.0 l_0_8_141) l_0_8_146))))
 (let ((?x17602 (- (- ?x17596 (* (* 2.0 l_0_8_158) l_0_8_163)) (* (* 2.0 l_0_8_159) l_0_8_164))))
 (let ((?x17608 (- (- ?x17602 (* (* 2.0 l_0_8_160) l_0_8_165)) (* (* 2.0 l_0_8_161) l_0_8_166))))
 (let ((?x17614 (- (- ?x17608 (* (* 2.0 l_0_8_162) l_0_8_167)) (* (* 2.0 l_0_8_179) l_0_8_184))))
 (let ((?x17620 (- (- ?x17614 (* (* 2.0 l_0_8_180) l_0_8_185)) (* (* 2.0 l_0_8_181) l_0_8_186))))
 (let ((?x17626 (- (- ?x17620 (* (* 2.0 l_0_8_182) l_0_8_187)) (* (* 2.0 l_0_8_183) l_0_8_188))))
 (= (+ (- ?x17626 ?x17627) ?x17629) 0.0))))))))))))))
(assert
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x17702 (* ?x16054 l_0_8_79)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x17700 (* ?x16170 l_0_8_58)))
 (let ((?x17698 (* l_0_8_189 l_0_8_189)))
 (let ((?x17696 (* l_0_8_188 l_0_8_188)))
 (let ((?x17694 (* l_0_8_187 l_0_8_187)))
 (let ((?x17692 (* l_0_8_186 l_0_8_186)))
 (let ((?x17690 (* l_0_8_185 l_0_8_185)))
 (let ((?x17688 (* l_0_8_184 l_0_8_184)))
 (let ((?x17686 (* l_0_8_168 l_0_8_168)))
 (let ((?x17684 (* l_0_8_167 l_0_8_167)))
 (let ((?x17682 (* l_0_8_166 l_0_8_166)))
 (let ((?x17680 (* l_0_8_165 l_0_8_165)))
 (let ((?x17678 (* l_0_8_164 l_0_8_164)))
 (let ((?x17676 (* l_0_8_163 l_0_8_163)))
 (let ((?x17674 (* l_0_8_147 l_0_8_147)))
 (let ((?x17672 (* l_0_8_146 l_0_8_146)))
 (let ((?x17670 (* l_0_8_145 l_0_8_145)))
 (let ((?x17668 (* l_0_8_144 l_0_8_144)))
 (let ((?x17669 (- (- (* (- l_0_8_142) l_0_8_142) (* l_0_8_143 l_0_8_143)) ?x17668)))
 (let ((?x17683 (- (- (- (- (- (- (- ?x17669 ?x17670) ?x17672) ?x17674) ?x17676) ?x17678) ?x17680) ?x17682)))
 (let ((?x17697 (- (- (- (- (- (- (- ?x17683 ?x17684) ?x17686) ?x17688) ?x17690) ?x17692) ?x17694) ?x17696)))
 (= (+ (- (- ?x17697 ?x17698) ?x17700) ?x17702) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x17753 (* l_0_8_73 l_0_8_73)))
 (let ((?x17751 (* l_0_8_72 l_0_8_72)))
 (let ((?x17749 (* l_0_8_71 l_0_8_71)))
 (let ((?x17747 (* l_0_8_70 l_0_8_70)))
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x17702 (* ?x16054 l_0_8_79)))
 (let ((?x17744 (* l_0_8_52 l_0_8_52)))
 (let ((?x17742 (* l_0_8_51 l_0_8_51)))
 (let ((?x17740 (* l_0_8_50 l_0_8_50)))
 (let ((?x17738 (* l_0_8_49 l_0_8_49)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x17700 (* ?x16170 l_0_8_58)))
 (let ((?x17277 (* 4.0 l_0_8_115)))
 (let ((?x9829 (* ?x17277 l_0_8_124)))
 (let ((?x17274 (* 4.0 l_0_8_114)))
 (let ((?x9832 (* ?x17274 l_0_8_123)))
 (let ((?x17271 (* 4.0 l_0_8_113)))
 (let ((?x9825 (* ?x17271 l_0_8_122)))
 (let ((?x17268 (* 4.0 l_0_8_112)))
 (let ((?x9890 (* ?x17268 l_0_8_121)))
 (let ((?x17743 (- (- (- (+ (+ (+ (+ ?x9890 ?x9825) ?x9832) ?x9829) ?x17700) ?x17738) ?x17740) ?x17742)))
 (= (+ (+ (+ (+ (- (- ?x17743 ?x17744) ?x17702) ?x17747) ?x17749) ?x17751) ?x17753) 0.0)))))))))))))))))))))))
(assert
 (let ((?x17799 (* 2.0 l_0_8_73)))
 (let ((?x17800 (* ?x17799 l_0_8_77)))
 (let ((?x17796 (* 2.0 l_0_8_72)))
 (let ((?x17797 (* ?x17796 l_0_8_76)))
 (let ((?x17793 (* 2.0 l_0_8_71)))
 (let ((?x17794 (* ?x17793 l_0_8_75)))
 (let ((?x17790 (* 2.0 l_0_8_70)))
 (let ((?x17791 (* ?x17790 l_0_8_74)))
 (let ((?x17787 (* 2.0 l_0_8_52)))
 (let ((?x17788 (* ?x17787 l_0_8_56)))
 (let ((?x17784 (* 2.0 l_0_8_51)))
 (let ((?x17785 (* ?x17784 l_0_8_55)))
 (let ((?x17781 (* 2.0 l_0_8_50)))
 (let ((?x17782 (* ?x17781 l_0_8_54)))
 (let ((?x17778 (* 2.0 l_0_8_49)))
 (let ((?x17779 (* ?x17778 l_0_8_53)))
 (let ((?x17400 (* (* 4.0 l_0_8_120) l_0_8_125)))
 (let ((?x17397 (* (* 4.0 l_0_8_119) l_0_8_124)))
 (let ((?x17394 (* (* 4.0 l_0_8_118) l_0_8_123)))
 (let ((?x17391 (* (* 4.0 l_0_8_117) l_0_8_122)))
 (let ((?x17388 (* (* 4.0 l_0_8_116) l_0_8_121)))
 (let ((?x17767 (+ (* (* 2.0 l_0_8_100) l_0_8_91) (* (* 2.0 l_0_8_101) l_0_8_92))))
 (let ((?x17772 (+ (+ ?x17767 (* (* 2.0 l_0_8_102) l_0_8_93)) (* (* 2.0 l_0_8_103) l_0_8_94))))
 (let ((?x17783 (- (- (+ (+ (+ (+ (+ ?x17772 ?x17388) ?x17391) ?x17394) ?x17397) ?x17400) ?x17779) ?x17782)))
 (= (+ (+ (+ (+ (- (- ?x17783 ?x17785) ?x17788) ?x17791) ?x17794) ?x17797) ?x17800) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x17799 (* 2.0 l_0_8_73)))
 (let ((?x17850 (* ?x17799 l_0_8_82)))
 (let ((?x17796 (* 2.0 l_0_8_72)))
 (let ((?x17848 (* ?x17796 l_0_8_81)))
 (let ((?x17793 (* 2.0 l_0_8_71)))
 (let ((?x17846 (* ?x17793 l_0_8_80)))
 (let ((?x17790 (* 2.0 l_0_8_70)))
 (let ((?x17844 (* ?x17790 l_0_8_79)))
 (let ((?x17787 (* 2.0 l_0_8_52)))
 (let ((?x17842 (* ?x17787 l_0_8_61)))
 (let ((?x17784 (* 2.0 l_0_8_51)))
 (let ((?x17840 (* ?x17784 l_0_8_60)))
 (let ((?x17781 (* 2.0 l_0_8_50)))
 (let ((?x17838 (* ?x17781 l_0_8_59)))
 (let ((?x17778 (* 2.0 l_0_8_49)))
 (let ((?x17836 (* ?x17778 l_0_8_58)))
 (let ((?x16949 (* l_0_8_126 l_0_8_126)))
 (let ((?x10454 (* 2.0 ?x16949)))
 (let ((?x16946 (* l_0_8_125 l_0_8_125)))
 (let ((?x10449 (* 2.0 ?x16946)))
 (let ((?x16943 (* l_0_8_124 l_0_8_124)))
 (let ((?x10443 (* 2.0 ?x16943)))
 (let ((?x16940 (* l_0_8_123 l_0_8_123)))
 (let ((?x10437 (* 2.0 ?x16940)))
 (let ((?x9009 (* l_0_8_122 l_0_8_122)))
 (let ((?x17492 (* 2.0 ?x9009)))
 (let ((?x9010 (* l_0_8_121 l_0_8_121)))
 (let ((?x17513 (* 2.0 ?x9010)))
 (let ((?x17839 (- (- (+ (+ (+ (+ (+ ?x17513 ?x17492) ?x10437) ?x10443) ?x10449) ?x10454) ?x17836) ?x17838)))
 (= (+ (+ (+ (+ (- (- ?x17839 ?x17840) ?x17842) ?x17844) ?x17846) ?x17848) ?x17850) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x17893 (* l_0_8_78 l_0_8_78)))
 (let ((?x17891 (* l_0_8_77 l_0_8_77)))
 (let ((?x17889 (* l_0_8_76 l_0_8_76)))
 (let ((?x17887 (* l_0_8_75 l_0_8_75)))
 (let ((?x17885 (* l_0_8_74 l_0_8_74)))
 (let ((?x17883 (* l_0_8_57 l_0_8_57)))
 (let ((?x17881 (* l_0_8_56 l_0_8_56)))
 (let ((?x17879 (* l_0_8_55 l_0_8_55)))
 (let ((?x17877 (* l_0_8_54 l_0_8_54)))
 (let ((?x17875 (* l_0_8_53 l_0_8_53)))
 (let ((?x17867 (+ (* (* 2.0 l_0_8_100) l_0_8_95) (* (* 2.0 l_0_8_101) l_0_8_96))))
 (let ((?x17871 (+ (+ ?x17867 (* (* 2.0 l_0_8_102) l_0_8_97)) (* (* 2.0 l_0_8_103) l_0_8_98))))
 (let ((?x17880 (- (- (- (+ ?x17871 (* (* 2.0 l_0_8_104) l_0_8_99)) ?x17875) ?x17877) ?x17879)))
 (let ((?x17894 (+ (+ (+ (+ (+ (- (- ?x17880 ?x17881) ?x17883) ?x17885) ?x17887) ?x17889) ?x17891) ?x17893)))
 (= ?x17894 0.0))))))))))))))))
(assert
 (let ((?x17953 (* 2.0 l_0_8_78)))
 (let ((?x17954 (* ?x17953 l_0_8_83)))
 (let ((?x17950 (* 2.0 l_0_8_77)))
 (let ((?x17951 (* ?x17950 l_0_8_82)))
 (let ((?x17947 (* 2.0 l_0_8_76)))
 (let ((?x17948 (* ?x17947 l_0_8_81)))
 (let ((?x17944 (* 2.0 l_0_8_75)))
 (let ((?x17945 (* ?x17944 l_0_8_80)))
 (let ((?x17941 (* 2.0 l_0_8_74)))
 (let ((?x17942 (* ?x17941 l_0_8_79)))
 (let ((?x17939 (* (* 2.0 l_0_8_57) l_0_8_62)))
 (let ((?x17936 (* (* 2.0 l_0_8_56) l_0_8_61)))
 (let ((?x17933 (* (* 2.0 l_0_8_55) l_0_8_60)))
 (let ((?x17930 (* (* 2.0 l_0_8_54) l_0_8_59)))
 (let ((?x17927 (* (* 2.0 l_0_8_53) l_0_8_58)))
 (let ((?x17924 (* l_0_8_105 l_0_8_105)))
 (let ((?x17922 (* l_0_8_104 l_0_8_104)))
 (let ((?x17920 (* l_0_8_103 l_0_8_103)))
 (let ((?x17918 (* l_0_8_102 l_0_8_102)))
 (let ((?x17921 (+ (+ (+ (* l_0_8_100 l_0_8_100) (* l_0_8_101 l_0_8_101)) ?x17918) ?x17920)))
 (let ((?x17940 (- (- (- (- (- (+ (+ ?x17921 ?x17922) ?x17924) ?x17927) ?x17930) ?x17933) ?x17936) ?x17939)))
 (= (+ (+ (+ (+ (+ ?x17940 ?x17942) ?x17945) ?x17948) ?x17951) ?x17954) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18010 (* l_0_8_84 l_0_8_84)))
 (let ((?x18008 (* l_0_8_83 l_0_8_83)))
 (let ((?x18006 (* l_0_8_82 l_0_8_82)))
 (let ((?x18004 (* l_0_8_81 l_0_8_81)))
 (let ((?x18002 (* l_0_8_80 l_0_8_80)))
 (let ((?x18000 (* l_0_8_79 l_0_8_79)))
 (let ((?x17998 (* l_0_8_63 l_0_8_63)))
 (let ((?x17996 (* l_0_8_62 l_0_8_62)))
 (let ((?x17994 (* l_0_8_61 l_0_8_61)))
 (let ((?x17992 (* l_0_8_60 l_0_8_60)))
 (let ((?x17995 (- (- (- (* (- l_0_8_58) l_0_8_58) (* l_0_8_59 l_0_8_59)) ?x17992) ?x17994)))
 (let ((?x18009 (+ (+ (+ (+ (+ (- (- ?x17995 ?x17996) ?x17998) ?x18000) ?x18002) ?x18004) ?x18006) ?x18008)))
 (= (+ ?x18009 ?x18010) 0.0))))))))))))))
(assert
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x17554 (* ?x16054 l_0_8_70)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x17552 (* ?x16170 l_0_8_49)))
 (let ((?x18024 (+ (* 2.0 (* l_0_8_112 l_0_8_112)) (* 2.0 (* l_0_8_113 l_0_8_113)))))
 (let ((?x18034 (+ (+ ?x18024 (* 2.0 (* l_0_8_114 l_0_8_114))) (* 2.0 (* l_0_8_115 l_0_8_115)))))
 (= (- (+ ?x18034 ?x17552) ?x17554) 0.0))))))))
(assert
 (let ((?x18053 (* l_0_8_94 l_0_8_94)))
 (let ((?x18051 (* l_0_8_93 l_0_8_93)))
 (let ((?x18049 (* l_0_8_92 l_0_8_92)))
 (let ((?x18047 (* l_0_8_91 l_0_8_91)))
 (let ((?x16054 (* 2.0 l_0_8_64)))
 (let ((?x17629 (* ?x16054 l_0_8_74)))
 (let ((?x16170 (* 2.0 l_0_8_43)))
 (let ((?x17627 (* ?x16170 l_0_8_53)))
 (let ((?x17277 (* 4.0 l_0_8_115)))
 (let ((?x17278 (* ?x17277 l_0_8_119)))
 (let ((?x17274 (* 4.0 l_0_8_114)))
 (let ((?x17275 (* ?x17274 l_0_8_118)))
 (let ((?x17271 (* 4.0 l_0_8_113)))
 (let ((?x17272 (* ?x17271 l_0_8_117)))
 (let ((?x17268 (* 4.0 l_0_8_112)))
 (let ((?x17269 (* ?x17268 l_0_8_116)))
 (let ((?x18050 (+ (+ (- (+ (+ (+ (+ ?x17269 ?x17272) ?x17275) ?x17278) ?x17627) ?x17629) ?x18047) ?x18049)))
 (= (+ (+ ?x18050 ?x18051) ?x18053) 0.0)))))))))))))))))))
(assert
 (let ((?x17215 (* l_0_8_66 l_0_8_66)))
 (let ((?x17213 (* l_0_8_65 l_0_8_65)))
 (let ((?x18059 (- (- (+ (* l_0_8_44 l_0_8_44) (* l_0_8_45 l_0_8_45)) ?x17213) ?x17215)))
 (= ?x18059 0.0)))))
(assert
 (let ((?x16490 (* 2.0 l_0_8_66)))
 (let ((?x16491 (* ?x16490 l_0_8_68)))
 (let ((?x16487 (* 2.0 l_0_8_65)))
 (let ((?x16488 (* ?x16487 l_0_8_67)))
 (let ((?x17744 (* l_0_8_52 l_0_8_52)))
 (let ((?x11145 (* 2.0 ?x17744)))
 (let ((?x17742 (* l_0_8_51 l_0_8_51)))
 (let ((?x11112 (* 2.0 ?x17742)))
 (let ((?x17740 (* l_0_8_50 l_0_8_50)))
 (let ((?x11134 (* 2.0 ?x17740)))
 (let ((?x17738 (* l_0_8_49 l_0_8_49)))
 (let ((?x11124 (* 2.0 ?x17738)))
 (let ((?x16482 (* 2.0 l_0_8_45)))
 (let ((?x16483 (* ?x16482 l_0_8_47)))
 (let ((?x16479 (* 2.0 l_0_8_44)))
 (let ((?x16480 (* ?x16479 l_0_8_46)))
 (let ((?x11163 (- (- (+ (+ (+ (+ (+ ?x16480 ?x16483) ?x11124) ?x11134) ?x11112) ?x11145) ?x16488) ?x16491)))
 (let ((?x11182 (- (- ?x11163 (* (* 2.0 l_0_8_70) l_0_8_70)) (* (* 2.0 l_0_8_71) l_0_8_71))))
 (let ((?x18061 (- (- ?x11182 (* (* 2.0 l_0_8_72) l_0_8_72)) (* (* 2.0 l_0_8_73) l_0_8_73))))
 (let ((?x18067 (- (- ?x18061 (* (* 2.0 l_0_8_91) l_0_8_91)) (* (* 2.0 l_0_8_92) l_0_8_92))))
 (let ((?x18073 (- (- ?x18067 (* (* 2.0 l_0_8_93) l_0_8_93)) (* (* 2.0 l_0_8_94) l_0_8_94))))
 (= ?x18073 0.0)))))))))))))))))))))))
(assert
 (let ((?x16490 (* 2.0 l_0_8_66)))
 (let ((?x17327 (* ?x16490 l_0_8_71)))
 (let ((?x16487 (* 2.0 l_0_8_65)))
 (let ((?x17325 (* ?x16487 l_0_8_70)))
 (let ((?x16482 (* 2.0 l_0_8_45)))
 (let ((?x17323 (* ?x16482 l_0_8_50)))
 (let ((?x16479 (* 2.0 l_0_8_44)))
 (let ((?x17321 (* ?x16479 l_0_8_49)))
 (= (- (- (+ ?x17321 ?x17323) ?x17325) ?x17327) 0.0))))))))))
(assert
 (let ((?x16490 (* 2.0 l_0_8_66)))
 (let ((?x17423 (* ?x16490 l_0_8_75)))
 (let ((?x16487 (* 2.0 l_0_8_65)))
 (let ((?x17421 (* ?x16487 l_0_8_74)))
 (let ((?x16482 (* 2.0 l_0_8_45)))
 (let ((?x17419 (* ?x16482 l_0_8_54)))
 (let ((?x16479 (* 2.0 l_0_8_44)))
 (let ((?x17417 (* ?x16479 l_0_8_53)))
 (= (- (- (+ ?x17417 ?x17419) ?x17421) ?x17423) 0.0))))))))))
(assert
 (let ((?x16490 (* 2.0 l_0_8_66)))
 (let ((?x17488 (* ?x16490 l_0_8_80)))
 (let ((?x16487 (* 2.0 l_0_8_65)))
 (let ((?x17486 (* ?x16487 l_0_8_79)))
 (let ((?x16482 (* 2.0 l_0_8_45)))
 (let ((?x17484 (* ?x16482 l_0_8_59)))
 (let ((?x16479 (* 2.0 l_0_8_44)))
 (let ((?x17482 (* ?x16479 l_0_8_58)))
 (= (- (- (+ ?x17482 ?x17484) ?x17486) ?x17488) 0.0))))))))))
(assert
 (let ((?x16643 (* l_0_8_69 l_0_8_69)))
 (let ((?x16641 (* l_0_8_68 l_0_8_68)))
 (let ((?x16639 (* l_0_8_67 l_0_8_67)))
 (let ((?x16637 (* l_0_8_48 l_0_8_48)))
 (let ((?x11388 (- (+ (+ (* l_0_8_46 l_0_8_46) (* l_0_8_47 l_0_8_47)) ?x16637) ?x16639)))
 (= (- (- ?x11388 ?x16641) ?x16643) 0.0)))))))
(assert
 (let ((?x16793 (* 2.0 l_0_8_69)))
 (let ((?x16794 (* ?x16793 l_0_8_72)))
 (let ((?x16790 (* 2.0 l_0_8_68)))
 (let ((?x16791 (* ?x16790 l_0_8_71)))
 (let ((?x16787 (* 2.0 l_0_8_67)))
 (let ((?x16788 (* ?x16787 l_0_8_70)))
 (let ((?x16784 (* 2.0 l_0_8_48)))
 (let ((?x16785 (* ?x16784 l_0_8_51)))
 (let ((?x16781 (* 2.0 l_0_8_47)))
 (let ((?x16782 (* ?x16781 l_0_8_50)))
 (let ((?x16778 (* 2.0 l_0_8_46)))
 (let ((?x16779 (* ?x16778 l_0_8_49)))
 (= (- (- (- (+ (+ ?x16779 ?x16782) ?x16785) ?x16788) ?x16791) ?x16794) 0.0))))))))))))))
(assert
 (let ((?x16793 (* 2.0 l_0_8_69)))
 (let ((?x16899 (* ?x16793 l_0_8_76)))
 (let ((?x16790 (* 2.0 l_0_8_68)))
 (let ((?x16897 (* ?x16790 l_0_8_75)))
 (let ((?x16787 (* 2.0 l_0_8_67)))
 (let ((?x16895 (* ?x16787 l_0_8_74)))
 (let ((?x16784 (* 2.0 l_0_8_48)))
 (let ((?x16893 (* ?x16784 l_0_8_55)))
 (let ((?x16781 (* 2.0 l_0_8_47)))
 (let ((?x16891 (* ?x16781 l_0_8_54)))
 (let ((?x16778 (* 2.0 l_0_8_46)))
 (let ((?x16889 (* ?x16778 l_0_8_53)))
 (= (- (- (- (+ (+ ?x16889 ?x16891) ?x16893) ?x16895) ?x16897) ?x16899) 0.0))))))))))))))
(assert
 (let ((?x16793 (* 2.0 l_0_8_69)))
 (let ((?x16974 (* ?x16793 l_0_8_81)))
 (let ((?x16790 (* 2.0 l_0_8_68)))
 (let ((?x16972 (* ?x16790 l_0_8_80)))
 (let ((?x16787 (* 2.0 l_0_8_67)))
 (let ((?x16970 (* ?x16787 l_0_8_79)))
 (let ((?x16784 (* 2.0 l_0_8_48)))
 (let ((?x16968 (* ?x16784 l_0_8_60)))
 (let ((?x16781 (* 2.0 l_0_8_47)))
 (let ((?x16966 (* ?x16781 l_0_8_59)))
 (let ((?x16778 (* 2.0 l_0_8_46)))
 (let ((?x16964 (* ?x16778 l_0_8_58)))
 (= (- (- (- (+ (+ ?x16964 ?x16966) ?x16968) ?x16970) ?x16972) ?x16974) 0.0))))))))))))))
(assert
 (let ((?x17753 (* l_0_8_73 l_0_8_73)))
 (let ((?x17751 (* l_0_8_72 l_0_8_72)))
 (let ((?x17749 (* l_0_8_71 l_0_8_71)))
 (let ((?x17747 (* l_0_8_70 l_0_8_70)))
 (let ((?x17744 (* l_0_8_52 l_0_8_52)))
 (let ((?x17742 (* l_0_8_51 l_0_8_51)))
 (let ((?x18104 (+ (+ (+ (* l_0_8_49 l_0_8_49) (* l_0_8_50 l_0_8_50)) ?x17742) ?x17744)))
 (= (- (- (- (- ?x18104 ?x17747) ?x17749) ?x17751) ?x17753) 0.0)))))))))
(assert
 (let ((?x17799 (* 2.0 l_0_8_73)))
 (let ((?x17800 (* ?x17799 l_0_8_77)))
 (let ((?x17796 (* 2.0 l_0_8_72)))
 (let ((?x17797 (* ?x17796 l_0_8_76)))
 (let ((?x17793 (* 2.0 l_0_8_71)))
 (let ((?x17794 (* ?x17793 l_0_8_75)))
 (let ((?x17790 (* 2.0 l_0_8_70)))
 (let ((?x17791 (* ?x17790 l_0_8_74)))
 (let ((?x17787 (* 2.0 l_0_8_52)))
 (let ((?x17788 (* ?x17787 l_0_8_56)))
 (let ((?x17784 (* 2.0 l_0_8_51)))
 (let ((?x17785 (* ?x17784 l_0_8_55)))
 (let ((?x17781 (* 2.0 l_0_8_50)))
 (let ((?x17782 (* ?x17781 l_0_8_54)))
 (let ((?x17778 (* 2.0 l_0_8_49)))
 (let ((?x17779 (* ?x17778 l_0_8_53)))
 (let ((?x18130 (- (- (- (- (+ (+ (+ ?x17779 ?x17782) ?x17785) ?x17788) ?x17791) ?x17794) ?x17797) ?x17800)))
 (= ?x18130 0.0)))))))))))))))))))
(assert
 (let ((?x17799 (* 2.0 l_0_8_73)))
 (let ((?x17850 (* ?x17799 l_0_8_82)))
 (let ((?x17796 (* 2.0 l_0_8_72)))
 (let ((?x17848 (* ?x17796 l_0_8_81)))
 (let ((?x17793 (* 2.0 l_0_8_71)))
 (let ((?x17846 (* ?x17793 l_0_8_80)))
 (let ((?x17790 (* 2.0 l_0_8_70)))
 (let ((?x17844 (* ?x17790 l_0_8_79)))
 (let ((?x17787 (* 2.0 l_0_8_52)))
 (let ((?x17842 (* ?x17787 l_0_8_61)))
 (let ((?x17784 (* 2.0 l_0_8_51)))
 (let ((?x17840 (* ?x17784 l_0_8_60)))
 (let ((?x17781 (* 2.0 l_0_8_50)))
 (let ((?x17838 (* ?x17781 l_0_8_59)))
 (let ((?x17778 (* 2.0 l_0_8_49)))
 (let ((?x17836 (* ?x17778 l_0_8_58)))
 (let ((?x11677 (- (- (- (- (+ (+ (+ ?x17836 ?x17838) ?x17840) ?x17842) ?x17844) ?x17846) ?x17848) ?x17850)))
 (= ?x11677 0.0)))))))))))))))))))
(assert
 (let ((?x17893 (* l_0_8_78 l_0_8_78)))
 (let ((?x17891 (* l_0_8_77 l_0_8_77)))
 (let ((?x17889 (* l_0_8_76 l_0_8_76)))
 (let ((?x17887 (* l_0_8_75 l_0_8_75)))
 (let ((?x17885 (* l_0_8_74 l_0_8_74)))
 (let ((?x17883 (* l_0_8_57 l_0_8_57)))
 (let ((?x17881 (* l_0_8_56 l_0_8_56)))
 (let ((?x17879 (* l_0_8_55 l_0_8_55)))
 (let ((?x11774 (+ (+ (+ (* l_0_8_53 l_0_8_53) (* l_0_8_54 l_0_8_54)) ?x17879) ?x17881)))
 (= (- (- (- (- (- (+ ?x11774 ?x17883) ?x17885) ?x17887) ?x17889) ?x17891) ?x17893) 0.0)))))))))))
(assert
 (let ((?x17953 (* 2.0 l_0_8_78)))
 (let ((?x17954 (* ?x17953 l_0_8_83)))
 (let ((?x17950 (* 2.0 l_0_8_77)))
 (let ((?x17951 (* ?x17950 l_0_8_82)))
 (let ((?x17947 (* 2.0 l_0_8_76)))
 (let ((?x17948 (* ?x17947 l_0_8_81)))
 (let ((?x17944 (* 2.0 l_0_8_75)))
 (let ((?x17945 (* ?x17944 l_0_8_80)))
 (let ((?x17941 (* 2.0 l_0_8_74)))
 (let ((?x17942 (* ?x17941 l_0_8_79)))
 (let ((?x17939 (* (* 2.0 l_0_8_57) l_0_8_62)))
 (let ((?x17936 (* (* 2.0 l_0_8_56) l_0_8_61)))
 (let ((?x17933 (* (* 2.0 l_0_8_55) l_0_8_60)))
 (let ((?x17930 (* (* 2.0 l_0_8_54) l_0_8_59)))
 (let ((?x17927 (* (* 2.0 l_0_8_53) l_0_8_58)))
 (let ((?x11832 (- (- (- (+ (+ (+ (+ ?x17927 ?x17930) ?x17933) ?x17936) ?x17939) ?x17942) ?x17945) ?x17948)))
 (= (- (- ?x11832 ?x17951) ?x17954) 0.0))))))))))))))))))
(assert
 (let ((?x18010 (* l_0_8_84 l_0_8_84)))
 (let ((?x18008 (* l_0_8_83 l_0_8_83)))
 (let ((?x18006 (* l_0_8_82 l_0_8_82)))
 (let ((?x18004 (* l_0_8_81 l_0_8_81)))
 (let ((?x18002 (* l_0_8_80 l_0_8_80)))
 (let ((?x18000 (* l_0_8_79 l_0_8_79)))
 (let ((?x17998 (* l_0_8_63 l_0_8_63)))
 (let ((?x17996 (* l_0_8_62 l_0_8_62)))
 (let ((?x17994 (* l_0_8_61 l_0_8_61)))
 (let ((?x17992 (* l_0_8_60 l_0_8_60)))
 (let ((?x11960 (+ (+ (+ (* l_0_8_58 l_0_8_58) (* l_0_8_59 l_0_8_59)) ?x17992) ?x17994)))
 (let ((?x18139 (- (- (- (- (- (+ (+ ?x11960 ?x17996) ?x17998) ?x18000) ?x18002) ?x18004) ?x18006) ?x18008)))
 (= (- ?x18139 ?x18010) 0.0))))))))))))))
(assert
 (let ((?x12000 (+ (* 2.0 (* l_0_8_44 l_0_8_44)) (* 2.0 (* l_0_8_45 l_0_8_45)))))
 (let ((?x11985 (- (- ?x12000 (* (* 2.0 l_0_8_65) l_0_8_65)) (* (* 2.0 l_0_8_66) l_0_8_66))))
 (let ((?x11967 (- (- ?x11985 (* (* 2.0 l_0_8_86) l_0_8_86)) (* (* 2.0 l_0_8_87) l_0_8_87))))
 (= ?x11967 0.0)))))
(assert
 (let ((?x18160 (+ (* (* 4.0 l_0_8_44) l_0_8_46) (* (* 4.0 l_0_8_45) l_0_8_47))))
 (let ((?x18166 (- (- ?x18160 (* (* 4.0 l_0_8_65) l_0_8_67)) (* (* 4.0 l_0_8_66) l_0_8_68))))
 (let ((?x18172 (- (- ?x18166 (* (* 4.0 l_0_8_86) l_0_8_88)) (* (* 4.0 l_0_8_87) l_0_8_89))))
 (= ?x18172 0.0)))))
(assert
 (let ((?x18189 (+ (* (* 4.0 l_0_8_44) l_0_8_49) (* (* 4.0 l_0_8_45) l_0_8_50))))
 (let ((?x18193 (- (- ?x18189 (* (* 4.0 l_0_8_65) l_0_8_70)) (* (* 4.0 l_0_8_66) l_0_8_71))))
 (let ((?x18197 (- (- ?x18193 (* (* 4.0 l_0_8_86) l_0_8_91)) (* (* 4.0 l_0_8_87) l_0_8_92))))
 (= ?x18197 0.0)))))
(assert
 (let ((?x18219 (+ (* (* 4.0 l_0_8_44) l_0_8_53) (* (* 4.0 l_0_8_45) l_0_8_54))))
 (let ((?x18223 (- (- ?x18219 (* (* 4.0 l_0_8_65) l_0_8_74)) (* (* 4.0 l_0_8_66) l_0_8_75))))
 (let ((?x18227 (- (- ?x18223 (* (* 4.0 l_0_8_86) l_0_8_95)) (* (* 4.0 l_0_8_87) l_0_8_96))))
 (= ?x18227 0.0)))))
(assert
 (let ((?x18253 (- (* (* (- 4.0) l_0_8_100) l_0_8_86) (* (* 4.0 l_0_8_101) l_0_8_87))))
 (let ((?x18257 (+ (+ ?x18253 (* (* 4.0 l_0_8_44) l_0_8_58)) (* (* 4.0 l_0_8_45) l_0_8_59))))
 (let ((?x18261 (- (- ?x18257 (* (* 4.0 l_0_8_65) l_0_8_79)) (* (* 4.0 l_0_8_66) l_0_8_80))))
 (= ?x18261 0.0)))))
(assert
 (let ((?x18279 (+ (* 2.0 (* l_0_8_46 l_0_8_46)) (* 2.0 (* l_0_8_47 l_0_8_47)))))
 (let ((?x18283 (- (+ ?x18279 (* 2.0 (* l_0_8_48 l_0_8_48))) (* (* 2.0 l_0_8_67) l_0_8_67))))
 (let ((?x18287 (- (- ?x18283 (* (* 2.0 l_0_8_68) l_0_8_68)) (* (* 2.0 l_0_8_69) l_0_8_69))))
 (let ((?x18291 (- (- ?x18287 (* (* 2.0 l_0_8_88) l_0_8_88)) (* (* 2.0 l_0_8_89) l_0_8_89))))
 (= (- ?x18291 (* (* 2.0 l_0_8_90) l_0_8_90)) 0.0))))))
(assert
 (let ((?x18329 (+ (* (* 4.0 l_0_8_46) l_0_8_49) (* (* 4.0 l_0_8_47) l_0_8_50))))
 (let ((?x18335 (- (+ ?x18329 (* (* 4.0 l_0_8_48) l_0_8_51)) (* (* 4.0 l_0_8_67) l_0_8_70))))
 (let ((?x18341 (- (- ?x18335 (* (* 4.0 l_0_8_68) l_0_8_71)) (* (* 4.0 l_0_8_69) l_0_8_72))))
 (let ((?x18347 (- (- ?x18341 (* (* 4.0 l_0_8_88) l_0_8_91)) (* (* 4.0 l_0_8_89) l_0_8_92))))
 (= (- ?x18347 (* (* 4.0 l_0_8_90) l_0_8_93)) 0.0))))))
(assert
 (let ((?x18379 (+ (* (* 4.0 l_0_8_46) l_0_8_53) (* (* 4.0 l_0_8_47) l_0_8_54))))
 (let ((?x18383 (- (+ ?x18379 (* (* 4.0 l_0_8_48) l_0_8_55)) (* (* 4.0 l_0_8_67) l_0_8_74))))
 (let ((?x18387 (- (- ?x18383 (* (* 4.0 l_0_8_68) l_0_8_75)) (* (* 4.0 l_0_8_69) l_0_8_76))))
 (let ((?x18391 (- (- ?x18387 (* (* 4.0 l_0_8_88) l_0_8_95)) (* (* 4.0 l_0_8_89) l_0_8_96))))
 (= (- ?x18391 (* (* 4.0 l_0_8_90) l_0_8_97)) 0.0))))))
(assert
 (let ((?x18418 (- (* (* (- 4.0) l_0_8_100) l_0_8_88) (* (* 4.0 l_0_8_101) l_0_8_89))))
 (let ((?x18423 (+ (- ?x18418 (* (* 4.0 l_0_8_102) l_0_8_90)) (* (* 4.0 l_0_8_46) l_0_8_58))))
 (let ((?x18427 (+ (+ ?x18423 (* (* 4.0 l_0_8_47) l_0_8_59)) (* (* 4.0 l_0_8_48) l_0_8_60))))
 (let ((?x18431 (- (- ?x18427 (* (* 4.0 l_0_8_67) l_0_8_79)) (* (* 4.0 l_0_8_68) l_0_8_80))))
 (= (- ?x18431 (* (* 4.0 l_0_8_69) l_0_8_81)) 0.0))))))
(assert
 (let ((?x18465 (+ (* (* 4.0 l_0_8_49) l_0_8_53) (* (* 4.0 l_0_8_50) l_0_8_54))))
 (let ((?x18471 (+ (+ ?x18465 (* (* 4.0 l_0_8_51) l_0_8_55)) (* (* 4.0 l_0_8_52) l_0_8_56))))
 (let ((?x18477 (- (- ?x18471 (* (* 4.0 l_0_8_70) l_0_8_74)) (* (* 4.0 l_0_8_71) l_0_8_75))))
 (let ((?x18483 (- (- ?x18477 (* (* 4.0 l_0_8_72) l_0_8_76)) (* (* 4.0 l_0_8_73) l_0_8_77))))
 (let ((?x18489 (- (- ?x18483 (* (* 4.0 l_0_8_91) l_0_8_95)) (* (* 4.0 l_0_8_92) l_0_8_96))))
 (let ((?x18495 (- (- ?x18489 (* (* 4.0 l_0_8_93) l_0_8_97)) (* (* 4.0 l_0_8_94) l_0_8_98))))
 (= ?x18495 0.0))))))))
(assert
 (let ((?x18535 (- (* (* (- 4.0) l_0_8_100) l_0_8_91) (* (* 4.0 l_0_8_101) l_0_8_92))))
 (let ((?x18540 (- (- ?x18535 (* (* 4.0 l_0_8_102) l_0_8_93)) (* (* 4.0 l_0_8_103) l_0_8_94))))
 (let ((?x18544 (+ (+ ?x18540 (* (* 4.0 l_0_8_49) l_0_8_58)) (* (* 4.0 l_0_8_50) l_0_8_59))))
 (let ((?x18548 (+ (+ ?x18544 (* (* 4.0 l_0_8_51) l_0_8_60)) (* (* 4.0 l_0_8_52) l_0_8_61))))
 (let ((?x18552 (- (- ?x18548 (* (* 4.0 l_0_8_70) l_0_8_79)) (* (* 4.0 l_0_8_71) l_0_8_80))))
 (let ((?x18556 (- (- ?x18552 (* (* 4.0 l_0_8_72) l_0_8_81)) (* (* 4.0 l_0_8_73) l_0_8_82))))
 (= ?x18556 0.0))))))))
(assert
 (let ((?x18583 (+ (* 2.0 (* l_0_8_53 l_0_8_53)) (* 2.0 (* l_0_8_54 l_0_8_54)))))
 (let ((?x18587 (+ (+ ?x18583 (* 2.0 (* l_0_8_55 l_0_8_55))) (* 2.0 (* l_0_8_56 l_0_8_56)))))
 (let ((?x18591 (- (+ ?x18587 (* 2.0 (* l_0_8_57 l_0_8_57))) (* (* 2.0 l_0_8_74) l_0_8_74))))
 (let ((?x18595 (- (- ?x18591 (* (* 2.0 l_0_8_75) l_0_8_75)) (* (* 2.0 l_0_8_76) l_0_8_76))))
 (let ((?x18599 (- (- ?x18595 (* (* 2.0 l_0_8_77) l_0_8_77)) (* (* 2.0 l_0_8_78) l_0_8_78))))
 (let ((?x18605 (- (- ?x18599 (* (* 2.0 l_0_8_95) l_0_8_95)) (* (* 2.0 l_0_8_96) l_0_8_96))))
 (let ((?x18611 (- (- ?x18605 (* (* 2.0 l_0_8_97) l_0_8_97)) (* (* 2.0 l_0_8_98) l_0_8_98))))
 (= (- ?x18611 (* (* 2.0 l_0_8_99) l_0_8_99)) 0.0)))))))))
(assert
 (let ((?x18654 (- (* (* (- 4.0) l_0_8_100) l_0_8_95) (* (* 4.0 l_0_8_101) l_0_8_96))))
 (let ((?x18658 (- (- ?x18654 (* (* 4.0 l_0_8_102) l_0_8_97)) (* (* 4.0 l_0_8_103) l_0_8_98))))
 (let ((?x18664 (+ (- ?x18658 (* (* 4.0 l_0_8_104) l_0_8_99)) (* (* 4.0 l_0_8_53) l_0_8_58))))
 (let ((?x18670 (+ (+ ?x18664 (* (* 4.0 l_0_8_54) l_0_8_59)) (* (* 4.0 l_0_8_55) l_0_8_60))))
 (let ((?x18676 (+ (+ ?x18670 (* (* 4.0 l_0_8_56) l_0_8_61)) (* (* 4.0 l_0_8_57) l_0_8_62))))
 (let ((?x18682 (- (- ?x18676 (* (* 4.0 l_0_8_74) l_0_8_79)) (* (* 4.0 l_0_8_75) l_0_8_80))))
 (let ((?x18688 (- (- ?x18682 (* (* 4.0 l_0_8_76) l_0_8_81)) (* (* 4.0 l_0_8_77) l_0_8_82))))
 (= (- ?x18688 (* (* 4.0 l_0_8_78) l_0_8_83)) 0.0)))))))))
(assert
 (let ((?x18711 (- (* (* (- 2.0) l_0_8_100) l_0_8_100) (* (* 2.0 l_0_8_101) l_0_8_101))))
 (let ((?x18715 (- (- ?x18711 (* (* 2.0 l_0_8_102) l_0_8_102)) (* (* 2.0 l_0_8_103) l_0_8_103))))
 (let ((?x18720 (- (- ?x18715 (* (* 2.0 l_0_8_104) l_0_8_104)) (* (* 2.0 l_0_8_105) l_0_8_105))))
 (let ((?x18724 (+ (+ ?x18720 (* 2.0 (* l_0_8_58 l_0_8_58))) (* 2.0 (* l_0_8_59 l_0_8_59)))))
 (let ((?x18728 (+ (+ ?x18724 (* 2.0 (* l_0_8_60 l_0_8_60))) (* 2.0 (* l_0_8_61 l_0_8_61)))))
 (let ((?x18732 (+ (+ ?x18728 (* 2.0 (* l_0_8_62 l_0_8_62))) (* 2.0 (* l_0_8_63 l_0_8_63)))))
 (let ((?x18738 (- (- ?x18732 (* (* 2.0 l_0_8_79) l_0_8_79)) (* (* 2.0 l_0_8_80) l_0_8_80))))
 (let ((?x18744 (- (- ?x18738 (* (* 2.0 l_0_8_81) l_0_8_81)) (* (* 2.0 l_0_8_82) l_0_8_82))))
 (let ((?x18750 (- (- ?x18744 (* (* 2.0 l_0_8_83) l_0_8_83)) (* (* 2.0 l_0_8_84) l_0_8_84))))
 (= ?x18750 0.0)))))))))))
(assert
 (let ((?x16093 (* l_0_8_85 l_0_8_85)))
 (let ((?x18782 (- (* (* (- 2.0) l_0_8_127) l_0_8_137) (* (* 2.0 l_0_8_148) l_0_8_158))))
 (= (+ (- ?x18782 (* (* 2.0 l_0_8_169) l_0_8_179)) ?x16093) 0.0))))
(assert
 (let ((?x12410 (- (* (* 4.0 l_0_8_106) l_0_8_116) (* (* 2.0 l_0_8_133) l_0_8_137))))
 (let ((?x18798 (- (- ?x12410 (* (* 2.0 l_0_8_134) l_0_8_138)) (* (* 2.0 l_0_8_135) l_0_8_139))))
 (let ((?x18802 (- (- ?x18798 (* (* 2.0 l_0_8_136) l_0_8_140)) (* (* 2.0 l_0_8_154) l_0_8_158))))
 (let ((?x18806 (- (- ?x18802 (* (* 2.0 l_0_8_155) l_0_8_159)) (* (* 2.0 l_0_8_156) l_0_8_160))))
 (let ((?x18810 (- (- ?x18806 (* (* 2.0 l_0_8_157) l_0_8_161)) (* (* 2.0 l_0_8_175) l_0_8_179))))
 (let ((?x18814 (- (- ?x18810 (* (* 2.0 l_0_8_176) l_0_8_180)) (* (* 2.0 l_0_8_177) l_0_8_181))))
 (let ((?x18818 (+ (- ?x18814 (* (* 2.0 l_0_8_178) l_0_8_182)) (* (* 2.0 l_0_8_85) l_0_8_91))))
 (= ?x18818 0.0)))))))))
(assert
 (let ((?x18843 (* l_0_8_183 l_0_8_183)))
 (let ((?x18841 (* l_0_8_182 l_0_8_182)))
 (let ((?x18839 (* l_0_8_181 l_0_8_181)))
 (let ((?x18837 (* l_0_8_180 l_0_8_180)))
 (let ((?x18835 (* l_0_8_179 l_0_8_179)))
 (let ((?x18833 (* l_0_8_162 l_0_8_162)))
 (let ((?x18831 (* l_0_8_161 l_0_8_161)))
 (let ((?x2198 (* l_0_8_160 l_0_8_160)))
 (let ((?x2238 (* l_0_8_159 l_0_8_159)))
 (let ((?x2145 (* l_0_8_158 l_0_8_158)))
 (let ((?x12519 (* l_0_8_141 l_0_8_141)))
 (let ((?x12516 (* l_0_8_140 l_0_8_140)))
 (let ((?x12520 (* l_0_8_139 l_0_8_139)))
 (let ((?x12521 (- (- (* (- l_0_8_137) l_0_8_137) (* l_0_8_138 l_0_8_138)) ?x12520)))
 (let ((?x18834 (- (- (- (- (- (- (- ?x12521 ?x12516) ?x12519) ?x2145) ?x2238) ?x2198) ?x18831) ?x18833)))
 (let ((?x18846 (+ (- (- (- (- (- ?x18834 ?x18835) ?x18837) ?x18839) ?x18841) ?x18843) (* (* 2.0 l_0_8_85) l_0_8_95))))
 (= ?x18846 0.0))))))))))))))))))
(assert
 (let ((?x16832 (* l_0_8_120 l_0_8_120)))
 (let ((?x10105 (* 2.0 ?x16832)))
 (let ((?x16827 (* l_0_8_119 l_0_8_119)))
 (let ((?x10114 (* 2.0 ?x16827)))
 (let ((?x16824 (* l_0_8_118 l_0_8_118)))
 (let ((?x17368 (* 2.0 ?x16824)))
 (let ((?x16821 (* l_0_8_117 l_0_8_117)))
 (let ((?x10093 (* 2.0 ?x16821)))
 (let ((?x16818 (* l_0_8_116 l_0_8_116)))
 (let ((?x17382 (* 2.0 ?x16818)))
 (let ((?x12586 (+ (+ (+ (+ (+ ?x17382 ?x10093) ?x17368) ?x10114) ?x10105) (* (* 2.0 l_0_8_91) l_0_8_95))))
 (let ((?x2304 (+ (+ ?x12586 (* (* 2.0 l_0_8_92) l_0_8_96)) (* (* 2.0 l_0_8_93) l_0_8_97))))
 (= (+ ?x2304 (* (* 2.0 l_0_8_94) l_0_8_98)) 0.0))))))))))))))
(assert
 (let ((?x12301 (* l_0_8_99 l_0_8_99)))
 (let ((?x12295 (* l_0_8_98 l_0_8_98)))
 (let ((?x12270 (* l_0_8_97 l_0_8_97)))
 (let ((?x18875 (+ (+ (+ (* l_0_8_95 l_0_8_95) (* l_0_8_96 l_0_8_96)) ?x12270) ?x12295)))
 (= (+ ?x18875 ?x12301) 0.0))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_22 0.0))
(assert
 (>= l_0_8_24 0.0))
(assert
 (>= l_0_8_27 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_42 0.0))
(assert
 (>= l_0_8_43 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_52 0.0))
(assert
 (>= l_0_8_57 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_64 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_69 0.0))
(assert
 (>= l_0_8_73 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_84 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_87 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_94 0.0))
(assert
 (>= l_0_8_99 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (>= l_0_8_126 0.0))
(assert
 (>= l_0_8_127 0.0))
(assert
 (>= l_0_8_129 0.0))
(assert
 (>= l_0_8_132 0.0))
(assert
 (>= l_0_8_136 0.0))
(assert
 (>= l_0_8_141 0.0))
(assert
 (>= l_0_8_147 0.0))
(assert
 (>= l_0_8_148 0.0))
(assert
 (>= l_0_8_150 0.0))
(assert
 (>= l_0_8_153 0.0))
(assert
 (>= l_0_8_157 0.0))
(assert
 (>= l_0_8_162 0.0))
(assert
 (>= l_0_8_168 0.0))
(assert
 (>= l_0_8_169 0.0))
(assert
 (>= l_0_8_171 0.0))
(assert
 (>= l_0_8_174 0.0))
(assert
 (>= l_0_8_178 0.0))
(assert
 (>= l_0_8_183 0.0))
(assert
 (>= l_0_8_189 0.0))
(assert
 (let ((?x18963 (* l_0_9_195 l_0_9_195)))
 (let ((?x18961 (* l_0_9_194 l_0_9_194)))
 (let ((?x18959 (* l_0_9_193 l_0_9_193)))
 (let ((?x18957 (* l_0_9_174 l_0_9_174)))
 (let ((?x18955 (* l_0_9_173 l_0_9_173)))
 (let ((?x18953 (* l_0_9_172 l_0_9_172)))
 (let ((?x18951 (* l_0_9_153 l_0_9_153)))
 (let ((?x18949 (* l_0_9_152 l_0_9_152)))
 (let ((?x18947 (* l_0_9_151 l_0_9_151)))
 (let ((?x18945 (* l_0_9_132 l_0_9_132)))
 (let ((?x18943 (* l_0_9_131 l_0_9_131)))
 (let ((?x18941 (* l_0_9_130 l_0_9_130)))
 (let ((?x18940 (+ (- (* 1.0 _a_0_) (* (* 2.0 l_0_9_1) l_0_9_4)) (* (* 2.0 l_0_9_106) l_0_9_109))))
 (let ((?x18954 (- (- (- (- (- (- (- ?x18940 ?x18941) ?x18943) ?x18945) ?x18947) ?x18949) ?x18951) ?x18953)))
 (= (+ (- (- (- (- (- ?x18954 ?x18955) ?x18957) ?x18959) ?x18961) ?x18963) 1.0) 0.0))))))))))))))))
(assert
 (let ((?x19006 (+ (- (+ (* 1.0 _a_1_) (* 2.0 _a_4_)) (* l_0_9_1 l_0_9_1)) (* 1.0 (* l_0_9_106 l_0_9_106)))))
 (let ((?x19012 (- (- ?x19006 (* (* 2.0 l_0_9_127) l_0_9_130)) (* (* 2.0 l_0_9_148) l_0_9_151))))
 (let ((?x19018 (- (- ?x19012 (* (* 2.0 l_0_9_169) l_0_9_172)) (* (* 2.0 l_0_9_190) l_0_9_193))))
 (= ?x19018 0.0)))))
(assert
 (let ((?x19026 (* 4.0 l_0_9_106)))
 (let ((?x19027 (* ?x19026 l_0_9_109)))
 (let ((?x19025 (- (+ (* 1.0 _a_2_) (* 2.0 _a_5_)) (* (* 2.0 l_0_9_1) l_0_9_7))))
 (let ((?x19033 (- (+ (+ ?x19025 ?x19027) (* (* 2.0 l_0_9_106) l_0_9_112)) (* (* 2.0 l_0_9_130) l_0_9_133))))
 (let ((?x19039 (- (- ?x19033 (* (* 2.0 l_0_9_131) l_0_9_134)) (* (* 2.0 l_0_9_132) l_0_9_135))))
 (let ((?x19045 (- (- ?x19039 (* (* 2.0 l_0_9_151) l_0_9_154)) (* (* 2.0 l_0_9_152) l_0_9_155))))
 (let ((?x19051 (- (- ?x19045 (* (* 2.0 l_0_9_153) l_0_9_156)) (* (* 2.0 l_0_9_172) l_0_9_175))))
 (let ((?x19057 (- (- ?x19051 (* (* 2.0 l_0_9_173) l_0_9_176)) (* (* 2.0 l_0_9_174) l_0_9_177))))
 (let ((?x19063 (- (- ?x19057 (* (* 2.0 l_0_9_193) l_0_9_196)) (* (* 2.0 l_0_9_194) l_0_9_197))))
 (= (- ?x19063 (* (* 2.0 l_0_9_195) l_0_9_198)) 0.0)))))))))))
(assert
 (let ((?x2564 (* l_0_9_190 l_0_9_190)))
 (let ((?x12747 (* l_0_9_169 l_0_9_169)))
 (let ((?x12741 (* l_0_9_148 l_0_9_148)))
 (let ((?x2562 (- (- (- (- (* _a_4_ _a_4_) (* l_0_9_127 l_0_9_127)) ?x12741) ?x12747) ?x2564)))
 (= ?x2562 0.0))))))
(assert
 (let ((?x19004 (* l_0_9_106 l_0_9_106)))
 (let ((?x19096 (* 2.0 ?x19004)))
 (let ((?x19099 (- (+ (* (* 2.0 _a_4_) _a_5_) ?x19096) (* (* 2.0 l_0_9_127) l_0_9_133))))
 (let ((?x19103 (- (- ?x19099 (* (* 2.0 l_0_9_148) l_0_9_154)) (* (* 2.0 l_0_9_169) l_0_9_175))))
 (= (- ?x19103 (* (* 2.0 l_0_9_190) l_0_9_196)) 0.0))))))
(assert
 (let ((?x19152 (* l_0_9_64 l_0_9_64)))
 (let ((?x19150 (* l_0_9_43 l_0_9_43)))
 (let ((?x19148 (* l_0_9_199 l_0_9_199)))
 (let ((?x19146 (* l_0_9_198 l_0_9_198)))
 (let ((?x19144 (* l_0_9_197 l_0_9_197)))
 (let ((?x19142 (* l_0_9_196 l_0_9_196)))
 (let ((?x19140 (* l_0_9_178 l_0_9_178)))
 (let ((?x19138 (* l_0_9_177 l_0_9_177)))
 (let ((?x19136 (* l_0_9_176 l_0_9_176)))
 (let ((?x19134 (* l_0_9_175 l_0_9_175)))
 (let ((?x19132 (* l_0_9_157 l_0_9_157)))
 (let ((?x19130 (* l_0_9_156 l_0_9_156)))
 (let ((?x19128 (* l_0_9_155 l_0_9_155)))
 (let ((?x19126 (* l_0_9_154 l_0_9_154)))
 (let ((?x19124 (* l_0_9_136 l_0_9_136)))
 (let ((?x19122 (* l_0_9_135 l_0_9_135)))
 (let ((?x19120 (* l_0_9_134 l_0_9_134)))
 (let ((?x19118 (* l_0_9_133 l_0_9_133)))
 (let ((?x19119 (- (+ (* _a_5_ _a_5_) (* (* 4.0 l_0_9_106) l_0_9_112)) ?x19118)))
 (let ((?x19133 (- (- (- (- (- (- (- ?x19119 ?x19120) ?x19122) ?x19124) ?x19126) ?x19128) ?x19130) ?x19132)))
 (let ((?x19147 (- (- (- (- (- (- (- ?x19133 ?x19134) ?x19136) ?x19138) ?x19140) ?x19142) ?x19144) ?x19146)))
 (= (- (+ (- ?x19147 ?x19148) ?x19150) ?x19152) 0.0)))))))))))))))))))))))
(assert
 (let ((?x19150 (* l_0_9_43 l_0_9_43)))
 (let ((?x19202 (* 2.0 ?x19150)))
 (let ((?x19026 (* 4.0 l_0_9_106)))
 (let ((?x19027 (* ?x19026 l_0_9_109)))
 (let ((?x19173 (+ (- (* 1.0 _a_3_) (* (* 2.0 l_0_9_1) l_0_9_2)) (* (* 2.0 l_0_9_106) l_0_9_107))))
 (let ((?x19180 (- (- (- ?x19173 ?x19027) (* (* 2.0 l_0_9_128) l_0_9_130)) (* (* 2.0 l_0_9_129) l_0_9_131))))
 (let ((?x19186 (- (- ?x19180 (* (* 2.0 l_0_9_149) l_0_9_151)) (* (* 2.0 l_0_9_150) l_0_9_152))))
 (let ((?x19192 (- (- ?x19186 (* (* 2.0 l_0_9_170) l_0_9_172)) (* (* 2.0 l_0_9_171) l_0_9_173))))
 (let ((?x19198 (- (- ?x19192 (* (* 2.0 l_0_9_191) l_0_9_193)) (* (* 2.0 l_0_9_192) l_0_9_194))))
 (let ((?x19206 (- (+ (- ?x19198 (* (* 2.0 l_0_9_22) l_0_9_25)) ?x19202) (* (* 2.0 l_0_9_64) l_0_9_64))))
 (= (- ?x19206 (* (* 2.0 l_0_9_85) l_0_9_85)) 0.0))))))))))))
(assert
 (let ((?x19152 (* l_0_9_64 l_0_9_64)))
 (let ((?x19150 (* l_0_9_43 l_0_9_43)))
 (let ((?x19251 (- (* (* (- 2.0) l_0_9_127) l_0_9_142) (* (* 2.0 l_0_9_148) l_0_9_163))))
 (let ((?x19255 (- (- ?x19251 (* (* 2.0 l_0_9_169) l_0_9_184)) (* (* 2.0 l_0_9_190) l_0_9_205))))
 (= (- (+ (- ?x19255 ?x19150) ?x19152) 1.0) 0.0))))))
(assert
 (let ((?x19286 (+ (* (* (- 2.0) l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_106) l_0_9_116))))
 (let ((?x19290 (- (- ?x19286 (* (* 2.0 l_0_9_130) l_0_9_137)) (* (* 2.0 l_0_9_131) l_0_9_138))))
 (let ((?x19294 (- (- ?x19290 (* (* 2.0 l_0_9_132) l_0_9_139)) (* (* 2.0 l_0_9_151) l_0_9_158))))
 (let ((?x19298 (- (- ?x19294 (* (* 2.0 l_0_9_152) l_0_9_159)) (* (* 2.0 l_0_9_153) l_0_9_160))))
 (let ((?x19302 (- (- ?x19298 (* (* 2.0 l_0_9_172) l_0_9_179)) (* (* 2.0 l_0_9_173) l_0_9_180))))
 (let ((?x19306 (- (- ?x19302 (* (* 2.0 l_0_9_174) l_0_9_181)) (* (* 2.0 l_0_9_193) l_0_9_200))))
 (let ((?x19310 (- (- ?x19306 (* (* 2.0 l_0_9_194) l_0_9_201)) (* (* 2.0 l_0_9_195) l_0_9_202))))
 (= (+ ?x19310 (* (* 2.0 l_0_9_85) l_0_9_88)) 0.0)))))))))
(assert
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x19347 (* ?x19204 l_0_9_67)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x19345 (* ?x19344 l_0_9_46)))
 (let ((?x2895 (+ (* (* (- 2.0) l_0_9_1) l_0_9_16) (* (* 2.0 l_0_9_106) l_0_9_121))))
 (let ((?x13085 (- (- ?x2895 (* (* 2.0 l_0_9_130) l_0_9_142)) (* (* 2.0 l_0_9_131) l_0_9_143))))
 (let ((?x19327 (- (- ?x13085 (* (* 2.0 l_0_9_132) l_0_9_144)) (* (* 2.0 l_0_9_151) l_0_9_163))))
 (let ((?x19331 (- (- ?x19327 (* (* 2.0 l_0_9_152) l_0_9_164)) (* (* 2.0 l_0_9_153) l_0_9_165))))
 (let ((?x19335 (- (- ?x19331 (* (* 2.0 l_0_9_172) l_0_9_184)) (* (* 2.0 l_0_9_173) l_0_9_185))))
 (let ((?x19339 (- (- ?x19335 (* (* 2.0 l_0_9_174) l_0_9_186)) (* (* 2.0 l_0_9_193) l_0_9_205))))
 (let ((?x19343 (- (- ?x19339 (* (* 2.0 l_0_9_194) l_0_9_206)) (* (* 2.0 l_0_9_195) l_0_9_207))))
 (= (+ (- ?x19343 ?x19345) ?x19347) 0.0)))))))))))))
(assert
 (let ((?x19404 (* l_0_9_3 l_0_9_3)))
 (let ((?x19396 (* l_0_9_2 l_0_9_2)))
 (let ((?x3171 (* 4.0 l_0_9_108)))
 (let ((?x3149 (* ?x3171 l_0_9_110)))
 (let ((?x13210 (+ (* (* (- 4.0) l_0_9_107) l_0_9_109) (* 1.0 (* l_0_9_107 l_0_9_107)))))
 (let ((?x19400 (- (- (+ (- ?x13210 ?x3149) (* 1.0 (* l_0_9_108 l_0_9_108))) ?x19396) (* (* 2.0 l_0_9_23) l_0_9_25))))
 (let ((?x19408 (+ (- (- ?x19400 (* (* 2.0 l_0_9_24) l_0_9_26)) ?x19404) (* (* 4.0 l_0_9_43) l_0_9_44))))
 (let ((?x19414 (- (- ?x19408 (* (* 4.0 l_0_9_64) l_0_9_65)) (* (* 4.0 l_0_9_85) l_0_9_86))))
 (= ?x19414 0.0))))))))))
(assert
 (let ((?x19449 (* l_0_9_27 l_0_9_27)))
 (let ((?x19447 (* l_0_9_26 l_0_9_26)))
 (let ((?x19445 (* l_0_9_25 l_0_9_25)))
 (let ((?x3234 (+ (* (* 2.0 l_0_9_107) l_0_9_109) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x13266 (- (- ?x3234 (* (* 2.0 l_0_9_109) l_0_9_109)) (* (* 2.0 l_0_9_110) l_0_9_110))))
 (let ((?x19444 (- (- ?x13266 (* (* 2.0 l_0_9_111) l_0_9_111)) (* (* 2.0 l_0_9_2) l_0_9_4))))
 (let ((?x19453 (- (- (- (- ?x19444 ?x19445) ?x19447) ?x19449) (* (* 2.0 l_0_9_3) l_0_9_5))))
 (let ((?x19457 (- (+ ?x19453 (* (* 4.0 l_0_9_43) l_0_9_46)) (* (* 4.0 l_0_9_64) l_0_9_67))))
 (= (- ?x19457 (* (* 4.0 l_0_9_85) l_0_9_88)) 0.0))))))))))
(assert
 (let ((?x19488 (* 4.0 l_0_9_111)))
 (let ((?x19489 (* ?x19488 l_0_9_114)))
 (let ((?x19485 (* 4.0 l_0_9_110)))
 (let ((?x19486 (* ?x19485 l_0_9_113)))
 (let ((?x19482 (* 4.0 l_0_9_109)))
 (let ((?x19483 (* ?x19482 l_0_9_112)))
 (let ((?x3171 (* 4.0 l_0_9_108)))
 (let ((?x3149 (* ?x3171 l_0_9_110)))
 (let ((?x13327 (+ (* (* 4.0 l_0_9_107) l_0_9_109) (* (* 2.0 l_0_9_107) l_0_9_112))))
 (let ((?x19487 (- (- (+ (+ ?x13327 ?x3149) (* (* 2.0 l_0_9_108) l_0_9_113)) ?x19483) ?x19486)))
 (let ((?x19495 (- (- (- ?x19487 ?x19489) (* (* 2.0 l_0_9_2) l_0_9_7)) (* (* 2.0 l_0_9_25) l_0_9_28))))
 (let ((?x19501 (- (- ?x19495 (* (* 2.0 l_0_9_26) l_0_9_29)) (* (* 2.0 l_0_9_27) l_0_9_30))))
 (let ((?x19505 (+ (- ?x19501 (* (* 2.0 l_0_9_3) l_0_9_8)) (* (* 4.0 l_0_9_43) l_0_9_49))))
 (let ((?x19509 (- (- ?x19505 (* (* 4.0 l_0_9_64) l_0_9_70)) (* (* 4.0 l_0_9_85) l_0_9_91))))
 (= ?x19509 0.0))))))))))))))))
(assert
 (let ((?x19488 (* 4.0 l_0_9_111)))
 (let ((?x19550 (* ?x19488 l_0_9_118)))
 (let ((?x19485 (* 4.0 l_0_9_110)))
 (let ((?x19548 (* ?x19485 l_0_9_117)))
 (let ((?x19482 (* 4.0 l_0_9_109)))
 (let ((?x19543 (* ?x19482 l_0_9_116)))
 (let ((?x19542 (+ (* (* 2.0 l_0_9_107) l_0_9_116) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x19551 (- (- (- (- ?x19542 ?x19543) (* (* 2.0 l_0_9_11) l_0_9_2)) ?x19548) ?x19550)))
 (let ((?x19556 (- (- ?x19551 (* (* 2.0 l_0_9_12) l_0_9_3)) (* (* 2.0 l_0_9_25) l_0_9_32))))
 (let ((?x19560 (- (- ?x19556 (* (* 2.0 l_0_9_26) l_0_9_33)) (* (* 2.0 l_0_9_27) l_0_9_34))))
 (let ((?x19564 (- (+ ?x19560 (* (* 4.0 l_0_9_43) l_0_9_53)) (* (* 4.0 l_0_9_64) l_0_9_74))))
 (let ((?x19569 (+ (- ?x19564 (* (* 4.0 l_0_9_85) l_0_9_95)) (* (* 2.0 l_0_9_86) l_0_9_88))))
 (= (+ ?x19569 (* (* 2.0 l_0_9_87) l_0_9_89)) 0.0))))))))))))))
(assert
 (let ((?x19640 (* 2.0 l_0_9_66)))
 (let ((?x19641 (* ?x19640 l_0_9_68)))
 (let ((?x19637 (* 2.0 l_0_9_65)))
 (let ((?x19638 (* ?x19637 l_0_9_67)))
 (let ((?x19632 (* 2.0 l_0_9_45)))
 (let ((?x19633 (* ?x19632 l_0_9_47)))
 (let ((?x19629 (* 2.0 l_0_9_44)))
 (let ((?x19630 (* ?x19629 l_0_9_46)))
 (let ((?x19488 (* 4.0 l_0_9_111)))
 (let ((?x19613 (* ?x19488 l_0_9_123)))
 (let ((?x19485 (* 4.0 l_0_9_110)))
 (let ((?x19611 (* ?x19485 l_0_9_122)))
 (let ((?x19482 (* 4.0 l_0_9_109)))
 (let ((?x19609 (* ?x19482 l_0_9_121)))
 (let ((?x19606 (+ (* (* (- 4.0) l_0_9_100) l_0_9_85) (* (* 2.0 l_0_9_107) l_0_9_121))))
 (let ((?x19614 (- (- (- (+ ?x19606 (* (* 2.0 l_0_9_108) l_0_9_122)) ?x19609) ?x19611) ?x19613)))
 (let ((?x19620 (- (- ?x19614 (* (* 2.0 l_0_9_16) l_0_9_2)) (* (* 2.0 l_0_9_17) l_0_9_3))))
 (let ((?x19624 (- (- ?x19620 (* (* 2.0 l_0_9_25) l_0_9_37)) (* (* 2.0 l_0_9_26) l_0_9_38))))
 (let ((?x19628 (+ (- ?x19624 (* (* 2.0 l_0_9_27) l_0_9_39)) (* (* 4.0 l_0_9_43) l_0_9_58))))
 (let ((?x19639 (+ (- (- (- ?x19628 ?x19630) ?x19633) (* (* 4.0 l_0_9_64) l_0_9_79)) ?x19638)))
 (= (+ ?x19639 ?x19641) 0.0))))))))))))))))))))))
(assert
 (let ((?x19688 (* l_0_9_6 l_0_9_6)))
 (let ((?x19686 (* l_0_9_5 l_0_9_5)))
 (let ((?x13528 (* l_0_9_4 l_0_9_4)))
 (let ((?x3672 (+ (* 1.0 (* l_0_9_109 l_0_9_109)) (* 1.0 (* l_0_9_110 l_0_9_110)))))
 (let ((?x19689 (- (- (- (+ ?x3672 (* 1.0 (* l_0_9_111 l_0_9_111))) ?x13528) ?x19686) ?x19688)))
 (= ?x19689 0.0)))))))
(assert
 (let ((?x13317 (* l_0_9_111 l_0_9_111)))
 (let ((?x13318 (* 2.0 ?x13317)))
 (let ((?x13311 (* l_0_9_110 l_0_9_110)))
 (let ((?x13314 (* 2.0 ?x13311)))
 (let ((?x19464 (* l_0_9_109 l_0_9_109)))
 (let ((?x19465 (* 2.0 ?x19464)))
 (let ((?x19701 (+ (+ (* (* 2.0 l_0_9_109) l_0_9_112) ?x19465) (* (* 2.0 l_0_9_110) l_0_9_113))))
 (let ((?x19708 (- (+ (+ (+ ?x19701 ?x13314) (* (* 2.0 l_0_9_111) l_0_9_114)) ?x13318) (* (* 2.0 l_0_9_4) l_0_9_7))))
 (let ((?x19714 (- (- ?x19708 (* (* 2.0 l_0_9_5) l_0_9_8)) (* (* 2.0 l_0_9_6) l_0_9_9))))
 (= ?x19714 0.0)))))))))))
(assert
 (let ((?x19739 (* l_0_9_90 l_0_9_90)))
 (let ((?x19737 (* l_0_9_89 l_0_9_89)))
 (let ((?x19735 (* l_0_9_88 l_0_9_88)))
 (let ((?x19725 (- (* (* 2.0 l_0_9_109) l_0_9_116) (* (* 2.0 l_0_9_11) l_0_9_4))))
 (let ((?x19729 (+ (+ ?x19725 (* (* 2.0 l_0_9_110) l_0_9_117)) (* (* 2.0 l_0_9_111) l_0_9_118))))
 (let ((?x19734 (- (- ?x19729 (* (* 2.0 l_0_9_12) l_0_9_5)) (* (* 2.0 l_0_9_13) l_0_9_6))))
 (= (+ (+ (+ ?x19734 ?x19735) ?x19737) ?x19739) 0.0))))))))
(assert
 (let ((?x19775 (* l_0_9_69 l_0_9_69)))
 (let ((?x19773 (* l_0_9_68 l_0_9_68)))
 (let ((?x19771 (* l_0_9_67 l_0_9_67)))
 (let ((?x19769 (* l_0_9_48 l_0_9_48)))
 (let ((?x19767 (* l_0_9_47 l_0_9_47)))
 (let ((?x19765 (* l_0_9_46 l_0_9_46)))
 (let ((?x19755 (+ (* (* 2.0 l_0_9_109) l_0_9_121) (* (* 2.0 l_0_9_110) l_0_9_122))))
 (let ((?x19759 (- (+ ?x19755 (* (* 2.0 l_0_9_111) l_0_9_123)) (* (* 2.0 l_0_9_16) l_0_9_4))))
 (let ((?x19764 (- (- ?x19759 (* (* 2.0 l_0_9_17) l_0_9_5)) (* (* 2.0 l_0_9_18) l_0_9_6))))
 (= (+ (+ (+ (- (- (- ?x19764 ?x19765) ?x19767) ?x19769) ?x19771) ?x19773) ?x19775) 0.0)))))))))))
(assert
 (let ((?x19816 (* l_0_9_9 l_0_9_9)))
 (let ((?x19814 (* l_0_9_8 l_0_9_8)))
 (let ((?x19812 (* l_0_9_7 l_0_9_7)))
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x19347 (* ?x19204 l_0_9_67)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x19345 (* ?x19344 l_0_9_46)))
 (let ((?x19488 (* 4.0 l_0_9_111)))
 (let ((?x19489 (* ?x19488 l_0_9_114)))
 (let ((?x19485 (* 4.0 l_0_9_110)))
 (let ((?x19486 (* ?x19485 l_0_9_113)))
 (let ((?x19482 (* 4.0 l_0_9_109)))
 (let ((?x19483 (* ?x19482 l_0_9_112)))
 (let ((?x19800 (+ (+ (+ (+ (* (- l_0_9_10) l_0_9_10) ?x19483) ?x19486) ?x19489) (* 1.0 (* l_0_9_112 l_0_9_112)))))
 (let ((?x19806 (+ (+ ?x19800 (* 1.0 (* l_0_9_113 l_0_9_113))) (* 1.0 (* l_0_9_114 l_0_9_114)))))
 (let ((?x19813 (- (- (+ (+ ?x19806 (* 1.0 (* l_0_9_115 l_0_9_115))) ?x19345) ?x19347) ?x19812)))
 (= (- (- ?x19813 ?x19814) ?x19816) 0.0))))))))))))))))))
(assert
 (let ((?x19488 (* 4.0 l_0_9_111)))
 (let ((?x19550 (* ?x19488 l_0_9_118)))
 (let ((?x19485 (* 4.0 l_0_9_110)))
 (let ((?x19548 (* ?x19485 l_0_9_117)))
 (let ((?x19482 (* 4.0 l_0_9_109)))
 (let ((?x19543 (* ?x19482 l_0_9_116)))
 (let ((?x19832 (- (+ (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x19543) (* (* 2.0 l_0_9_11) l_0_9_7))))
 (let ((?x19840 (+ (+ (+ (+ ?x19832 ?x19548) ?x19550) (* (* 2.0 l_0_9_112) l_0_9_116)) (* (* 2.0 l_0_9_113) l_0_9_117))))
 (let ((?x19846 (+ (+ ?x19840 (* (* 2.0 l_0_9_114) l_0_9_118)) (* (* 2.0 l_0_9_115) l_0_9_119))))
 (let ((?x19850 (- (- ?x19846 (* (* 2.0 l_0_9_12) l_0_9_8)) (* (* 2.0 l_0_9_13) l_0_9_9))))
 (let ((?x19856 (+ (+ ?x19850 (* (* 2.0 l_0_9_88) l_0_9_91)) (* (* 2.0 l_0_9_89) l_0_9_92))))
 (= (+ ?x19856 (* (* 2.0 l_0_9_90) l_0_9_93)) 0.0)))))))))))))
(assert
 (let ((?x19919 (* 2.0 l_0_9_69)))
 (let ((?x19920 (* ?x19919 l_0_9_72)))
 (let ((?x19916 (* 2.0 l_0_9_68)))
 (let ((?x19917 (* ?x19916 l_0_9_71)))
 (let ((?x19913 (* 2.0 l_0_9_67)))
 (let ((?x19914 (* ?x19913 l_0_9_70)))
 (let ((?x19910 (* 2.0 l_0_9_48)))
 (let ((?x19911 (* ?x19910 l_0_9_51)))
 (let ((?x19907 (* 2.0 l_0_9_47)))
 (let ((?x19908 (* ?x19907 l_0_9_50)))
 (let ((?x19904 (* 2.0 l_0_9_46)))
 (let ((?x19905 (* ?x19904 l_0_9_49)))
 (let ((?x19488 (* 4.0 l_0_9_111)))
 (let ((?x19613 (* ?x19488 l_0_9_123)))
 (let ((?x19485 (* 4.0 l_0_9_110)))
 (let ((?x19611 (* ?x19485 l_0_9_122)))
 (let ((?x19482 (* 4.0 l_0_9_109)))
 (let ((?x19609 (* ?x19482 l_0_9_121)))
 (let ((?x19891 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_10) l_0_9_19) ?x19609) ?x19611) ?x19613) (* (* 2.0 l_0_9_112) l_0_9_121))))
 (let ((?x19895 (+ (+ ?x19891 (* (* 2.0 l_0_9_113) l_0_9_122)) (* (* 2.0 l_0_9_114) l_0_9_123))))
 (let ((?x19899 (- (+ ?x19895 (* (* 2.0 l_0_9_115) l_0_9_124)) (* (* 2.0 l_0_9_16) l_0_9_7))))
 (let ((?x19903 (- (- ?x19899 (* (* 2.0 l_0_9_17) l_0_9_8)) (* (* 2.0 l_0_9_18) l_0_9_9))))
 (= (+ (+ (+ (- (- (- ?x19903 ?x19905) ?x19908) ?x19911) ?x19914) ?x19917) ?x19920) 0.0))))))))))))))))))))))))
(assert
 (let ((?x19972 (* l_0_9_15 l_0_9_15)))
 (let ((?x19970 (* l_0_9_14 l_0_9_14)))
 (let ((?x19968 (* l_0_9_13 l_0_9_13)))
 (let ((?x19963 (* l_0_9_12 l_0_9_12)))
 (let ((?x19953 (+ (* (- l_0_9_11) l_0_9_11) (* 1.0 (* l_0_9_116 l_0_9_116)))))
 (let ((?x19959 (+ (+ ?x19953 (* 1.0 (* l_0_9_117 l_0_9_117))) (* 1.0 (* l_0_9_118 l_0_9_118)))))
 (let ((?x19967 (+ (- (+ ?x19959 (* 1.0 (* l_0_9_119 l_0_9_119))) ?x19963) (* 1.0 (* l_0_9_120 l_0_9_120)))))
 (let ((?x19975 (+ (- (- (- ?x19967 ?x19968) ?x19970) ?x19972) (* (* 2.0 l_0_9_88) l_0_9_95))))
 (let ((?x19979 (+ (+ ?x19975 (* (* 2.0 l_0_9_89) l_0_9_96)) (* (* 2.0 l_0_9_90) l_0_9_97))))
 (= ?x19979 0.0)))))))))))
(assert
 (let ((?x19919 (* 2.0 l_0_9_69)))
 (let ((?x20045 (* ?x19919 l_0_9_76)))
 (let ((?x19916 (* 2.0 l_0_9_68)))
 (let ((?x20043 (* ?x19916 l_0_9_75)))
 (let ((?x19913 (* 2.0 l_0_9_67)))
 (let ((?x20041 (* ?x19913 l_0_9_74)))
 (let ((?x19910 (* 2.0 l_0_9_48)))
 (let ((?x20039 (* ?x19910 l_0_9_55)))
 (let ((?x19907 (* 2.0 l_0_9_47)))
 (let ((?x20037 (* ?x19907 l_0_9_54)))
 (let ((?x19904 (* 2.0 l_0_9_46)))
 (let ((?x20035 (* ?x19904 l_0_9_53)))
 (let ((?x20004 (+ (* (* 2.0 l_0_9_100) l_0_9_88) (* (* 2.0 l_0_9_101) l_0_9_89))))
 (let ((?x20009 (- (+ ?x20004 (* (* 2.0 l_0_9_102) l_0_9_90)) (* (* 2.0 l_0_9_11) l_0_9_16))))
 (let ((?x20015 (+ (+ ?x20009 (* (* 2.0 l_0_9_116) l_0_9_121)) (* (* 2.0 l_0_9_117) l_0_9_122))))
 (let ((?x20021 (+ (+ ?x20015 (* (* 2.0 l_0_9_118) l_0_9_123)) (* (* 2.0 l_0_9_119) l_0_9_124))))
 (let ((?x20026 (+ (- ?x20021 (* (* 2.0 l_0_9_12) l_0_9_17)) (* (* 2.0 l_0_9_120) l_0_9_125))))
 (let ((?x20031 (- (- ?x20026 (* (* 2.0 l_0_9_13) l_0_9_18)) (* (* 2.0 l_0_9_14) l_0_9_19))))
 (let ((?x20040 (- (- (- (- ?x20031 (* (* 2.0 l_0_9_15) l_0_9_20)) ?x20035) ?x20037) ?x20039)))
 (= (+ (+ (+ ?x20040 ?x20041) ?x20043) ?x20045) 0.0)))))))))))))))))))))
(assert
 (let ((?x19919 (* 2.0 l_0_9_69)))
 (let ((?x20123 (* ?x19919 l_0_9_81)))
 (let ((?x19916 (* 2.0 l_0_9_68)))
 (let ((?x20121 (* ?x19916 l_0_9_80)))
 (let ((?x19913 (* 2.0 l_0_9_67)))
 (let ((?x20119 (* ?x19913 l_0_9_79)))
 (let ((?x19910 (* 2.0 l_0_9_48)))
 (let ((?x20117 (* ?x19910 l_0_9_60)))
 (let ((?x19907 (* 2.0 l_0_9_47)))
 (let ((?x20115 (* ?x19907 l_0_9_59)))
 (let ((?x19904 (* 2.0 l_0_9_46)))
 (let ((?x20113 (* ?x19904 l_0_9_58)))
 (let ((?x20111 (* l_0_9_21 l_0_9_21)))
 (let ((?x20109 (* l_0_9_20 l_0_9_20)))
 (let ((?x20107 (* l_0_9_19 l_0_9_19)))
 (let ((?x20105 (* l_0_9_18 l_0_9_18)))
 (let ((?x20103 (* l_0_9_17 l_0_9_17)))
 (let ((?x20101 (* l_0_9_16 l_0_9_16)))
 (let ((?x20088 (+ (* 1.0 (* l_0_9_121 l_0_9_121)) (* 1.0 (* l_0_9_122 l_0_9_122)))))
 (let ((?x20094 (+ (+ ?x20088 (* 1.0 (* l_0_9_123 l_0_9_123))) (* 1.0 (* l_0_9_124 l_0_9_124)))))
 (let ((?x20100 (+ (+ ?x20094 (* 1.0 (* l_0_9_125 l_0_9_125))) (* 1.0 (* l_0_9_126 l_0_9_126)))))
 (let ((?x20114 (- (- (- (- (- (- (- ?x20100 ?x20101) ?x20103) ?x20105) ?x20107) ?x20109) ?x20111) ?x20113)))
 (= (+ (+ (+ (- (- ?x20114 ?x20115) ?x20117) ?x20119) ?x20121) ?x20123) 0.0))))))))))))))))))))))))
(assert
 (let ((?x20159 (* l_0_9_22 l_0_9_22)))
 (let ((?x20152 (- (* (* (- 2.0) l_0_9_106) l_0_9_106) (* (* 2.0 l_0_9_127) l_0_9_128))))
 (let ((?x20156 (- (- ?x20152 (* (* 2.0 l_0_9_148) l_0_9_149)) (* (* 2.0 l_0_9_169) l_0_9_170))))
 (= (- (- ?x20156 (* (* 2.0 l_0_9_190) l_0_9_191)) ?x20159) 0.0)))))
(assert
 (let ((?x20198 (* l_0_9_192 l_0_9_192)))
 (let ((?x20196 (* l_0_9_191 l_0_9_191)))
 (let ((?x20194 (* l_0_9_171 l_0_9_171)))
 (let ((?x20192 (* l_0_9_170 l_0_9_170)))
 (let ((?x20190 (* l_0_9_150 l_0_9_150)))
 (let ((?x20188 (* l_0_9_149 l_0_9_149)))
 (let ((?x20186 (* l_0_9_129 l_0_9_129)))
 (let ((?x20187 (- (- (* (* (- 4.0) l_0_9_106) l_0_9_107) (* l_0_9_128 l_0_9_128)) ?x20186)))
 (let ((?x20201 (- (- (- (- (- (- (- ?x20187 ?x20188) ?x20190) ?x20192) ?x20194) ?x20196) ?x20198) (* (* 2.0 l_0_9_22) l_0_9_23))))
 (= ?x20201 0.0)))))))))))
(assert
 (let ((?x19026 (* 4.0 l_0_9_106)))
 (let ((?x12820 (* ?x19026 l_0_9_112)))
 (let ((?x20219 (- (- (* ?x19026 l_0_9_107) ?x12820) (* (* 2.0 l_0_9_128) l_0_9_133))))
 (let ((?x20223 (- (- ?x20219 (* (* 2.0 l_0_9_129) l_0_9_134)) (* (* 2.0 l_0_9_149) l_0_9_154))))
 (let ((?x20227 (- (- ?x20223 (* (* 2.0 l_0_9_150) l_0_9_155)) (* (* 2.0 l_0_9_170) l_0_9_175))))
 (let ((?x20231 (- (- ?x20227 (* (* 2.0 l_0_9_171) l_0_9_176)) (* (* 2.0 l_0_9_191) l_0_9_196))))
 (let ((?x20235 (- (- ?x20231 (* (* 2.0 l_0_9_192) l_0_9_197)) (* (* 2.0 l_0_9_22) l_0_9_28))))
 (= ?x20235 0.0)))))))))
(assert
 (let ((?x14160 (- (* (* (- 4.0) l_0_9_106) l_0_9_116) (* (* 2.0 l_0_9_128) l_0_9_137))))
 (let ((?x20246 (- (- ?x14160 (* (* 2.0 l_0_9_129) l_0_9_138)) (* (* 2.0 l_0_9_149) l_0_9_158))))
 (let ((?x20250 (- (- ?x20246 (* (* 2.0 l_0_9_150) l_0_9_159)) (* (* 2.0 l_0_9_170) l_0_9_179))))
 (let ((?x20254 (- (- ?x20250 (* (* 2.0 l_0_9_171) l_0_9_180)) (* (* 2.0 l_0_9_191) l_0_9_200))))
 (let ((?x20258 (- (- ?x20254 (* (* 2.0 l_0_9_192) l_0_9_201)) (* (* 2.0 l_0_9_22) l_0_9_32))))
 (= (+ ?x20258 (* (* 2.0 l_0_9_85) l_0_9_86)) 0.0)))))))
(assert
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x20313 (* ?x19204 l_0_9_65)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x20311 (* ?x19344 l_0_9_44)))
 (let ((?x14220 (- (* (* (- 4.0) l_0_9_106) l_0_9_121) (* (* 2.0 l_0_9_128) l_0_9_142))))
 (let ((?x20298 (- (- ?x14220 (* (* 2.0 l_0_9_129) l_0_9_143)) (* (* 2.0 l_0_9_149) l_0_9_163))))
 (let ((?x20302 (- (- ?x20298 (* (* 2.0 l_0_9_150) l_0_9_164)) (* (* 2.0 l_0_9_170) l_0_9_184))))
 (let ((?x20306 (- (- ?x20302 (* (* 2.0 l_0_9_171) l_0_9_185)) (* (* 2.0 l_0_9_191) l_0_9_205))))
 (let ((?x20310 (- (- ?x20306 (* (* 2.0 l_0_9_192) l_0_9_206)) (* (* 2.0 l_0_9_22) l_0_9_37))))
 (= (+ (- ?x20310 ?x20311) ?x20313) 0.0)))))))))))
(assert
 (let ((?x20339 (* l_0_9_24 l_0_9_24)))
 (let ((?x20337 (* l_0_9_23 l_0_9_23)))
 (let ((?x20336 (- (* (* (- 2.0) l_0_9_107) l_0_9_107) (* (* 2.0 l_0_9_108) l_0_9_108))))
 (= (- (- ?x20336 ?x20337) ?x20339) 0.0)))))
(assert
 (let ((?x3153 (* l_0_9_108 l_0_9_108)))
 (let ((?x20343 (* 2.0 ?x3153)))
 (let ((?x3171 (* 4.0 l_0_9_108)))
 (let ((?x20356 (* ?x3171 l_0_9_113)))
 (let ((?x13198 (* l_0_9_107 l_0_9_107)))
 (let ((?x20351 (* 2.0 ?x13198)))
 (let ((?x20360 (- (+ (- (+ (* (* (- 4.0) l_0_9_107) l_0_9_112) ?x20351) ?x20356) ?x20343) (* (* 2.0 l_0_9_23) l_0_9_28))))
 (= (- ?x20360 (* (* 2.0 l_0_9_24) l_0_9_29)) 0.0)))))))))
(assert
 (let ((?x20373 (* l_0_9_87 l_0_9_87)))
 (let ((?x20371 (* l_0_9_86 l_0_9_86)))
 (let ((?x3171 (* 4.0 l_0_9_108)))
 (let ((?x14307 (* ?x3171 l_0_9_117)))
 (let ((?x4447 (- (- (* (* (- 4.0) l_0_9_107) l_0_9_116) ?x14307) (* (* 2.0 l_0_9_23) l_0_9_32))))
 (= (+ (+ (- ?x4447 (* (* 2.0 l_0_9_24) l_0_9_33)) ?x20371) ?x20373) 0.0)))))))
(assert
 (let ((?x20406 (* l_0_9_66 l_0_9_66)))
 (let ((?x20404 (* l_0_9_65 l_0_9_65)))
 (let ((?x20402 (* l_0_9_45 l_0_9_45)))
 (let ((?x20400 (* l_0_9_44 l_0_9_44)))
 (let ((?x3171 (* 4.0 l_0_9_108)))
 (let ((?x20394 (* ?x3171 l_0_9_122)))
 (let ((?x20397 (- (- (* (* (- 4.0) l_0_9_107) l_0_9_121) ?x20394) (* (* 2.0 l_0_9_23) l_0_9_37))))
 (let ((?x20405 (+ (- (- (- ?x20397 (* (* 2.0 l_0_9_24) l_0_9_38)) ?x20400) ?x20402) ?x20404)))
 (= (+ ?x20405 ?x20406) 0.0))))))))))
(assert
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x20313 (* ?x19204 l_0_9_65)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x20311 (* ?x19344 l_0_9_44)))
 (let ((?x20445 (* l_0_9_31 l_0_9_31)))
 (let ((?x20443 (* l_0_9_30 l_0_9_30)))
 (let ((?x20441 (* l_0_9_29 l_0_9_29)))
 (let ((?x20439 (* l_0_9_28 l_0_9_28)))
 (let ((?x3171 (* 4.0 l_0_9_108)))
 (let ((?x20356 (* ?x3171 l_0_9_113)))
 (let ((?x20432 (- (+ (* (* 4.0 l_0_9_107) l_0_9_112) ?x20356) (* (* 2.0 l_0_9_112) l_0_9_112))))
 (let ((?x20436 (- (- ?x20432 (* (* 2.0 l_0_9_113) l_0_9_113)) (* (* 2.0 l_0_9_114) l_0_9_114))))
 (let ((?x20444 (- (- (- (- ?x20436 (* (* 2.0 l_0_9_115) l_0_9_115)) ?x20439) ?x20441) ?x20443)))
 (= (- (+ (- ?x20444 ?x20445) ?x20311) ?x20313) 0.0)))))))))))))))
(assert
 (let ((?x20473 (* 4.0 l_0_9_115)))
 (let ((?x20474 (* ?x20473 l_0_9_119)))
 (let ((?x20470 (* 4.0 l_0_9_114)))
 (let ((?x20471 (* ?x20470 l_0_9_118)))
 (let ((?x20467 (* 4.0 l_0_9_113)))
 (let ((?x20468 (* ?x20467 l_0_9_117)))
 (let ((?x4635 (* 4.0 l_0_9_112)))
 (let ((?x4600 (* ?x4635 l_0_9_116)))
 (let ((?x3171 (* 4.0 l_0_9_108)))
 (let ((?x14307 (* ?x3171 l_0_9_117)))
 (let ((?x20472 (- (- (- (+ (* (* 4.0 l_0_9_107) l_0_9_116) ?x14307) ?x4600) ?x20468) ?x20471)))
 (let ((?x20481 (- (- (- ?x20472 ?x20474) (* (* 2.0 l_0_9_28) l_0_9_32)) (* (* 2.0 l_0_9_29) l_0_9_33))))
 (let ((?x20487 (- (- ?x20481 (* (* 2.0 l_0_9_30) l_0_9_34)) (* (* 2.0 l_0_9_31) l_0_9_35))))
 (let ((?x20491 (+ (+ ?x20487 (* (* 2.0 l_0_9_86) l_0_9_91)) (* (* 2.0 l_0_9_87) l_0_9_92))))
 (= ?x20491 0.0))))))))))))))))
(assert
 (let ((?x19640 (* 2.0 l_0_9_66)))
 (let ((?x20529 (* ?x19640 l_0_9_71)))
 (let ((?x19637 (* 2.0 l_0_9_65)))
 (let ((?x20527 (* ?x19637 l_0_9_70)))
 (let ((?x19632 (* 2.0 l_0_9_45)))
 (let ((?x20525 (* ?x19632 l_0_9_50)))
 (let ((?x19629 (* 2.0 l_0_9_44)))
 (let ((?x20523 (* ?x19629 l_0_9_49)))
 (let ((?x20473 (* 4.0 l_0_9_115)))
 (let ((?x20513 (* ?x20473 l_0_9_124)))
 (let ((?x20470 (* 4.0 l_0_9_114)))
 (let ((?x20511 (* ?x20470 l_0_9_123)))
 (let ((?x20467 (* 4.0 l_0_9_113)))
 (let ((?x20509 (* ?x20467 l_0_9_122)))
 (let ((?x4635 (* 4.0 l_0_9_112)))
 (let ((?x4822 (* ?x4635 l_0_9_121)))
 (let ((?x3171 (* 4.0 l_0_9_108)))
 (let ((?x20394 (* ?x3171 l_0_9_122)))
 (let ((?x20512 (- (- (- (+ (* (* 4.0 l_0_9_107) l_0_9_121) ?x20394) ?x4822) ?x20509) ?x20511)))
 (let ((?x20518 (- (- (- ?x20512 ?x20513) (* (* 2.0 l_0_9_28) l_0_9_37)) (* (* 2.0 l_0_9_29) l_0_9_38))))
 (let ((?x20522 (- (- ?x20518 (* (* 2.0 l_0_9_30) l_0_9_39)) (* (* 2.0 l_0_9_31) l_0_9_40))))
 (= (+ (+ (- (- ?x20522 ?x20523) ?x20525) ?x20527) ?x20529) 0.0)))))))))))))))))))))))
(assert
 (let ((?x20554 (* l_0_9_36 l_0_9_36)))
 (let ((?x20552 (* l_0_9_35 l_0_9_35)))
 (let ((?x20550 (* l_0_9_34 l_0_9_34)))
 (let ((?x20548 (* l_0_9_33 l_0_9_33)))
 (let ((?x20546 (* l_0_9_32 l_0_9_32)))
 (let ((?x14413 (- (* (* (- 2.0) l_0_9_116) l_0_9_116) (* (* 2.0 l_0_9_117) l_0_9_117))))
 (let ((?x4959 (- (- ?x14413 (* (* 2.0 l_0_9_118) l_0_9_118)) (* (* 2.0 l_0_9_119) l_0_9_119))))
 (let ((?x20551 (- (- (- (- ?x4959 (* (* 2.0 l_0_9_120) l_0_9_120)) ?x20546) ?x20548) ?x20550)))
 (let ((?x20559 (+ (+ (- (- ?x20551 ?x20552) ?x20554) (* (* 2.0 l_0_9_86) l_0_9_95)) (* (* 2.0 l_0_9_87) l_0_9_96))))
 (= ?x20559 0.0)))))))))))
(assert
 (let ((?x19640 (* 2.0 l_0_9_66)))
 (let ((?x20601 (* ?x19640 l_0_9_75)))
 (let ((?x19637 (* 2.0 l_0_9_65)))
 (let ((?x20599 (* ?x19637 l_0_9_74)))
 (let ((?x19632 (* 2.0 l_0_9_45)))
 (let ((?x20597 (* ?x19632 l_0_9_54)))
 (let ((?x19629 (* 2.0 l_0_9_44)))
 (let ((?x20595 (* ?x19629 l_0_9_53)))
 (let ((?x20578 (* (* 4.0 l_0_9_120) l_0_9_125)))
 (let ((?x20575 (* (* 4.0 l_0_9_119) l_0_9_124)))
 (let ((?x20572 (* (* 4.0 l_0_9_118) l_0_9_123)))
 (let ((?x20569 (* (* 4.0 l_0_9_117) l_0_9_122)))
 (let ((?x5112 (* (* 4.0 l_0_9_116) l_0_9_121)))
 (let ((?x5105 (+ (* (* 2.0 l_0_9_100) l_0_9_86) (* (* 2.0 l_0_9_101) l_0_9_87))))
 (let ((?x20582 (- (- (- (- (- (- ?x5105 ?x5112) ?x20569) ?x20572) ?x20575) ?x20578) (* (* 2.0 l_0_9_32) l_0_9_37))))
 (let ((?x20588 (- (- ?x20582 (* (* 2.0 l_0_9_33) l_0_9_38)) (* (* 2.0 l_0_9_34) l_0_9_39))))
 (let ((?x20594 (- (- ?x20588 (* (* 2.0 l_0_9_35) l_0_9_40)) (* (* 2.0 l_0_9_36) l_0_9_41))))
 (= (+ (+ (- (- ?x20594 ?x20595) ?x20597) ?x20599) ?x20601) 0.0)))))))))))))))))))
(assert
 (let ((?x19640 (* 2.0 l_0_9_66)))
 (let ((?x20676 (* ?x19640 l_0_9_80)))
 (let ((?x19637 (* 2.0 l_0_9_65)))
 (let ((?x20674 (* ?x19637 l_0_9_79)))
 (let ((?x19632 (* 2.0 l_0_9_45)))
 (let ((?x20672 (* ?x19632 l_0_9_59)))
 (let ((?x19629 (* 2.0 l_0_9_44)))
 (let ((?x20670 (* ?x19629 l_0_9_58)))
 (let ((?x20668 (* l_0_9_42 l_0_9_42)))
 (let ((?x20666 (* l_0_9_41 l_0_9_41)))
 (let ((?x20664 (* l_0_9_40 l_0_9_40)))
 (let ((?x20662 (* l_0_9_39 l_0_9_39)))
 (let ((?x20660 (* l_0_9_38 l_0_9_38)))
 (let ((?x20658 (* l_0_9_37 l_0_9_37)))
 (let ((?x20645 (- (* (* (- 2.0) l_0_9_121) l_0_9_121) (* (* 2.0 l_0_9_122) l_0_9_122))))
 (let ((?x20651 (- (- ?x20645 (* (* 2.0 l_0_9_123) l_0_9_123)) (* (* 2.0 l_0_9_124) l_0_9_124))))
 (let ((?x20657 (- (- ?x20651 (* (* 2.0 l_0_9_125) l_0_9_125)) (* (* 2.0 l_0_9_126) l_0_9_126))))
 (let ((?x20671 (- (- (- (- (- (- (- ?x20657 ?x20658) ?x20660) ?x20662) ?x20664) ?x20666) ?x20668) ?x20670)))
 (= (+ (+ (- ?x20671 ?x20672) ?x20674) ?x20676) 0.0))))))))))))))))))))
(assert
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x20748 (* ?x19204 l_0_9_70)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x20746 (* ?x19344 l_0_9_49)))
 (let ((?x20700 (- (* (* 4.0 l_0_9_106) l_0_9_121) (* (* 2.0 l_0_9_133) l_0_9_142))))
 (let ((?x20706 (- (- ?x20700 (* (* 2.0 l_0_9_134) l_0_9_143)) (* (* 2.0 l_0_9_135) l_0_9_144))))
 (let ((?x20712 (- (- ?x20706 (* (* 2.0 l_0_9_136) l_0_9_145)) (* (* 2.0 l_0_9_154) l_0_9_163))))
 (let ((?x20718 (- (- ?x20712 (* (* 2.0 l_0_9_155) l_0_9_164)) (* (* 2.0 l_0_9_156) l_0_9_165))))
 (let ((?x20724 (- (- ?x20718 (* (* 2.0 l_0_9_157) l_0_9_166)) (* (* 2.0 l_0_9_175) l_0_9_184))))
 (let ((?x20730 (- (- ?x20724 (* (* 2.0 l_0_9_176) l_0_9_185)) (* (* 2.0 l_0_9_177) l_0_9_186))))
 (let ((?x20736 (- (- ?x20730 (* (* 2.0 l_0_9_178) l_0_9_187)) (* (* 2.0 l_0_9_196) l_0_9_205))))
 (let ((?x20742 (- (- ?x20736 (* (* 2.0 l_0_9_197) l_0_9_206)) (* (* 2.0 l_0_9_198) l_0_9_207))))
 (= (+ (- (- ?x20742 (* (* 2.0 l_0_9_199) l_0_9_208)) ?x20746) ?x20748) 0.0))))))))))))))
(assert
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x20856 (* ?x19204 l_0_9_74)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x20854 (* ?x19344 l_0_9_53)))
 (let ((?x20796 (- (* (* 2.0 l_0_9_100) l_0_9_85) (* (* 2.0 l_0_9_137) l_0_9_142))))
 (let ((?x20802 (- (- ?x20796 (* (* 2.0 l_0_9_138) l_0_9_143)) (* (* 2.0 l_0_9_139) l_0_9_144))))
 (let ((?x20808 (- (- ?x20802 (* (* 2.0 l_0_9_140) l_0_9_145)) (* (* 2.0 l_0_9_141) l_0_9_146))))
 (let ((?x20814 (- (- ?x20808 (* (* 2.0 l_0_9_158) l_0_9_163)) (* (* 2.0 l_0_9_159) l_0_9_164))))
 (let ((?x20820 (- (- ?x20814 (* (* 2.0 l_0_9_160) l_0_9_165)) (* (* 2.0 l_0_9_161) l_0_9_166))))
 (let ((?x20826 (- (- ?x20820 (* (* 2.0 l_0_9_162) l_0_9_167)) (* (* 2.0 l_0_9_179) l_0_9_184))))
 (let ((?x20832 (- (- ?x20826 (* (* 2.0 l_0_9_180) l_0_9_185)) (* (* 2.0 l_0_9_181) l_0_9_186))))
 (let ((?x20838 (- (- ?x20832 (* (* 2.0 l_0_9_182) l_0_9_187)) (* (* 2.0 l_0_9_183) l_0_9_188))))
 (let ((?x20844 (- (- ?x20838 (* (* 2.0 l_0_9_200) l_0_9_205)) (* (* 2.0 l_0_9_201) l_0_9_206))))
 (let ((?x20850 (- (- ?x20844 (* (* 2.0 l_0_9_202) l_0_9_207)) (* (* 2.0 l_0_9_203) l_0_9_208))))
 (= (+ (- (- ?x20850 (* (* 2.0 l_0_9_204) l_0_9_209)) ?x20854) ?x20856) 0.0))))))))))))))))
(assert
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x20942 (* ?x19204 l_0_9_79)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x20940 (* ?x19344 l_0_9_58)))
 (let ((?x20938 (* l_0_9_210 l_0_9_210)))
 (let ((?x20936 (* l_0_9_209 l_0_9_209)))
 (let ((?x20934 (* l_0_9_208 l_0_9_208)))
 (let ((?x20932 (* l_0_9_207 l_0_9_207)))
 (let ((?x20930 (* l_0_9_206 l_0_9_206)))
 (let ((?x20928 (* l_0_9_205 l_0_9_205)))
 (let ((?x20926 (* l_0_9_189 l_0_9_189)))
 (let ((?x20924 (* l_0_9_188 l_0_9_188)))
 (let ((?x20922 (* l_0_9_187 l_0_9_187)))
 (let ((?x20920 (* l_0_9_186 l_0_9_186)))
 (let ((?x20918 (* l_0_9_185 l_0_9_185)))
 (let ((?x20916 (* l_0_9_184 l_0_9_184)))
 (let ((?x20914 (* l_0_9_168 l_0_9_168)))
 (let ((?x20912 (* l_0_9_167 l_0_9_167)))
 (let ((?x20910 (* l_0_9_166 l_0_9_166)))
 (let ((?x20908 (* l_0_9_165 l_0_9_165)))
 (let ((?x20906 (* l_0_9_164 l_0_9_164)))
 (let ((?x20904 (* l_0_9_163 l_0_9_163)))
 (let ((?x20902 (* l_0_9_147 l_0_9_147)))
 (let ((?x20900 (* l_0_9_146 l_0_9_146)))
 (let ((?x20898 (* l_0_9_145 l_0_9_145)))
 (let ((?x20896 (* l_0_9_144 l_0_9_144)))
 (let ((?x20897 (- (- (* (- l_0_9_142) l_0_9_142) (* l_0_9_143 l_0_9_143)) ?x20896)))
 (let ((?x20911 (- (- (- (- (- (- (- ?x20897 ?x20898) ?x20900) ?x20902) ?x20904) ?x20906) ?x20908) ?x20910)))
 (let ((?x20925 (- (- (- (- (- (- (- ?x20911 ?x20912) ?x20914) ?x20916) ?x20918) ?x20920) ?x20922) ?x20924)))
 (let ((?x20939 (- (- (- (- (- (- (- ?x20925 ?x20926) ?x20928) ?x20930) ?x20932) ?x20934) ?x20936) ?x20938)))
 (= (+ (- ?x20939 ?x20940) ?x20942) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x20992 (* l_0_9_73 l_0_9_73)))
 (let ((?x20990 (* l_0_9_72 l_0_9_72)))
 (let ((?x20988 (* l_0_9_71 l_0_9_71)))
 (let ((?x20986 (* l_0_9_70 l_0_9_70)))
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x20942 (* ?x19204 l_0_9_79)))
 (let ((?x20983 (* l_0_9_52 l_0_9_52)))
 (let ((?x20981 (* l_0_9_51 l_0_9_51)))
 (let ((?x20979 (* l_0_9_50 l_0_9_50)))
 (let ((?x20977 (* l_0_9_49 l_0_9_49)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x20940 (* ?x19344 l_0_9_58)))
 (let ((?x20473 (* 4.0 l_0_9_115)))
 (let ((?x20513 (* ?x20473 l_0_9_124)))
 (let ((?x20470 (* 4.0 l_0_9_114)))
 (let ((?x20511 (* ?x20470 l_0_9_123)))
 (let ((?x20467 (* 4.0 l_0_9_113)))
 (let ((?x20509 (* ?x20467 l_0_9_122)))
 (let ((?x4635 (* 4.0 l_0_9_112)))
 (let ((?x4822 (* ?x4635 l_0_9_121)))
 (let ((?x20982 (- (- (- (+ (+ (+ (+ ?x4822 ?x20509) ?x20511) ?x20513) ?x20940) ?x20977) ?x20979) ?x20981)))
 (= (+ (+ (+ (+ (- (- ?x20982 ?x20983) ?x20942) ?x20986) ?x20988) ?x20990) ?x20992) 0.0)))))))))))))))))))))))
(assert
 (let ((?x21038 (* 2.0 l_0_9_73)))
 (let ((?x21039 (* ?x21038 l_0_9_77)))
 (let ((?x21035 (* 2.0 l_0_9_72)))
 (let ((?x21036 (* ?x21035 l_0_9_76)))
 (let ((?x21032 (* 2.0 l_0_9_71)))
 (let ((?x21033 (* ?x21032 l_0_9_75)))
 (let ((?x21029 (* 2.0 l_0_9_70)))
 (let ((?x21030 (* ?x21029 l_0_9_74)))
 (let ((?x21026 (* 2.0 l_0_9_52)))
 (let ((?x21027 (* ?x21026 l_0_9_56)))
 (let ((?x21023 (* 2.0 l_0_9_51)))
 (let ((?x21024 (* ?x21023 l_0_9_55)))
 (let ((?x21020 (* 2.0 l_0_9_50)))
 (let ((?x21021 (* ?x21020 l_0_9_54)))
 (let ((?x21017 (* 2.0 l_0_9_49)))
 (let ((?x21018 (* ?x21017 l_0_9_53)))
 (let ((?x20578 (* (* 4.0 l_0_9_120) l_0_9_125)))
 (let ((?x20575 (* (* 4.0 l_0_9_119) l_0_9_124)))
 (let ((?x20572 (* (* 4.0 l_0_9_118) l_0_9_123)))
 (let ((?x20569 (* (* 4.0 l_0_9_117) l_0_9_122)))
 (let ((?x5112 (* (* 4.0 l_0_9_116) l_0_9_121)))
 (let ((?x21006 (+ (* (* 2.0 l_0_9_100) l_0_9_91) (* (* 2.0 l_0_9_101) l_0_9_92))))
 (let ((?x21011 (+ (+ ?x21006 (* (* 2.0 l_0_9_102) l_0_9_93)) (* (* 2.0 l_0_9_103) l_0_9_94))))
 (let ((?x21022 (- (- (+ (+ (+ (+ (+ ?x21011 ?x5112) ?x20569) ?x20572) ?x20575) ?x20578) ?x21018) ?x21021)))
 (= (+ (+ (+ (+ (- (- ?x21022 ?x21024) ?x21027) ?x21030) ?x21033) ?x21036) ?x21039) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x21038 (* 2.0 l_0_9_73)))
 (let ((?x21091 (* ?x21038 l_0_9_82)))
 (let ((?x21035 (* 2.0 l_0_9_72)))
 (let ((?x21089 (* ?x21035 l_0_9_81)))
 (let ((?x21032 (* 2.0 l_0_9_71)))
 (let ((?x21087 (* ?x21032 l_0_9_80)))
 (let ((?x21029 (* 2.0 l_0_9_70)))
 (let ((?x21085 (* ?x21029 l_0_9_79)))
 (let ((?x21026 (* 2.0 l_0_9_52)))
 (let ((?x21083 (* ?x21026 l_0_9_61)))
 (let ((?x21023 (* 2.0 l_0_9_51)))
 (let ((?x21081 (* ?x21023 l_0_9_60)))
 (let ((?x21020 (* 2.0 l_0_9_50)))
 (let ((?x21079 (* ?x21020 l_0_9_59)))
 (let ((?x21017 (* 2.0 l_0_9_49)))
 (let ((?x21077 (* ?x21017 l_0_9_58)))
 (let ((?x20098 (* l_0_9_126 l_0_9_126)))
 (let ((?x14615 (* 2.0 ?x20098)))
 (let ((?x20095 (* l_0_9_125 l_0_9_125)))
 (let ((?x5238 (* 2.0 ?x20095)))
 (let ((?x20092 (* l_0_9_124 l_0_9_124)))
 (let ((?x5308 (* 2.0 ?x20092)))
 (let ((?x20089 (* l_0_9_123 l_0_9_123)))
 (let ((?x20685 (* 2.0 ?x20089)))
 (let ((?x4115 (* l_0_9_122 l_0_9_122)))
 (let ((?x20680 (* 2.0 ?x4115)))
 (let ((?x13881 (* l_0_9_121 l_0_9_121)))
 (let ((?x5377 (* 2.0 ?x13881)))
 (let ((?x21080 (- (- (+ (+ (+ (+ (+ ?x5377 ?x20680) ?x20685) ?x5308) ?x5238) ?x14615) ?x21077) ?x21079)))
 (= (+ (+ (+ (+ (- (- ?x21080 ?x21081) ?x21083) ?x21085) ?x21087) ?x21089) ?x21091) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x21136 (* l_0_9_78 l_0_9_78)))
 (let ((?x21134 (* l_0_9_77 l_0_9_77)))
 (let ((?x21132 (* l_0_9_76 l_0_9_76)))
 (let ((?x21130 (* l_0_9_75 l_0_9_75)))
 (let ((?x21128 (* l_0_9_74 l_0_9_74)))
 (let ((?x21126 (* l_0_9_57 l_0_9_57)))
 (let ((?x21124 (* l_0_9_56 l_0_9_56)))
 (let ((?x21122 (* l_0_9_55 l_0_9_55)))
 (let ((?x21120 (* l_0_9_54 l_0_9_54)))
 (let ((?x21118 (* l_0_9_53 l_0_9_53)))
 (let ((?x21110 (+ (* (* 2.0 l_0_9_100) l_0_9_95) (* (* 2.0 l_0_9_101) l_0_9_96))))
 (let ((?x21114 (+ (+ ?x21110 (* (* 2.0 l_0_9_102) l_0_9_97)) (* (* 2.0 l_0_9_103) l_0_9_98))))
 (let ((?x21123 (- (- (- (+ ?x21114 (* (* 2.0 l_0_9_104) l_0_9_99)) ?x21118) ?x21120) ?x21122)))
 (let ((?x21137 (+ (+ (+ (+ (+ (- (- ?x21123 ?x21124) ?x21126) ?x21128) ?x21130) ?x21132) ?x21134) ?x21136)))
 (= ?x21137 0.0))))))))))))))))
(assert
 (let ((?x21207 (* 2.0 l_0_9_78)))
 (let ((?x21208 (* ?x21207 l_0_9_83)))
 (let ((?x21204 (* 2.0 l_0_9_77)))
 (let ((?x21205 (* ?x21204 l_0_9_82)))
 (let ((?x21201 (* 2.0 l_0_9_76)))
 (let ((?x21202 (* ?x21201 l_0_9_81)))
 (let ((?x21198 (* 2.0 l_0_9_75)))
 (let ((?x21199 (* ?x21198 l_0_9_80)))
 (let ((?x21195 (* 2.0 l_0_9_74)))
 (let ((?x21196 (* ?x21195 l_0_9_79)))
 (let ((?x21193 (* (* 2.0 l_0_9_57) l_0_9_62)))
 (let ((?x21190 (* (* 2.0 l_0_9_56) l_0_9_61)))
 (let ((?x21187 (* (* 2.0 l_0_9_55) l_0_9_60)))
 (let ((?x21184 (* (* 2.0 l_0_9_54) l_0_9_59)))
 (let ((?x21181 (* (* 2.0 l_0_9_53) l_0_9_58)))
 (let ((?x21178 (* l_0_9_105 l_0_9_105)))
 (let ((?x21176 (* l_0_9_104 l_0_9_104)))
 (let ((?x21174 (* l_0_9_103 l_0_9_103)))
 (let ((?x21172 (* l_0_9_102 l_0_9_102)))
 (let ((?x21175 (+ (+ (+ (* l_0_9_100 l_0_9_100) (* l_0_9_101 l_0_9_101)) ?x21172) ?x21174)))
 (let ((?x21194 (- (- (- (- (- (+ (+ ?x21175 ?x21176) ?x21178) ?x21181) ?x21184) ?x21187) ?x21190) ?x21193)))
 (= (+ (+ (+ (+ (+ ?x21194 ?x21196) ?x21199) ?x21202) ?x21205) ?x21208) 0.0)))))))))))))))))))))))
(assert
 (let ((?x21255 (* l_0_9_84 l_0_9_84)))
 (let ((?x21253 (* l_0_9_83 l_0_9_83)))
 (let ((?x21251 (* l_0_9_82 l_0_9_82)))
 (let ((?x21249 (* l_0_9_81 l_0_9_81)))
 (let ((?x21247 (* l_0_9_80 l_0_9_80)))
 (let ((?x21245 (* l_0_9_79 l_0_9_79)))
 (let ((?x21243 (* l_0_9_63 l_0_9_63)))
 (let ((?x21241 (* l_0_9_62 l_0_9_62)))
 (let ((?x21239 (* l_0_9_61 l_0_9_61)))
 (let ((?x21237 (* l_0_9_60 l_0_9_60)))
 (let ((?x21240 (- (- (- (* (- l_0_9_58) l_0_9_58) (* l_0_9_59 l_0_9_59)) ?x21237) ?x21239)))
 (let ((?x21254 (+ (+ (+ (+ (+ (- (- ?x21240 ?x21241) ?x21243) ?x21245) ?x21247) ?x21249) ?x21251) ?x21253)))
 (= (+ ?x21254 ?x21255) 0.0))))))))))))))
(assert
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x20748 (* ?x19204 l_0_9_70)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x20746 (* ?x19344 l_0_9_49)))
 (let ((?x6345 (+ (* 2.0 (* l_0_9_112 l_0_9_112)) (* 2.0 (* l_0_9_113 l_0_9_113)))))
 (let ((?x21280 (+ (+ ?x6345 (* 2.0 (* l_0_9_114 l_0_9_114))) (* 2.0 (* l_0_9_115 l_0_9_115)))))
 (= (- (+ ?x21280 ?x20746) ?x20748) 0.0))))))))
(assert
 (let ((?x21299 (* l_0_9_94 l_0_9_94)))
 (let ((?x21297 (* l_0_9_93 l_0_9_93)))
 (let ((?x21295 (* l_0_9_92 l_0_9_92)))
 (let ((?x21293 (* l_0_9_91 l_0_9_91)))
 (let ((?x19204 (* 2.0 l_0_9_64)))
 (let ((?x20856 (* ?x19204 l_0_9_74)))
 (let ((?x19344 (* 2.0 l_0_9_43)))
 (let ((?x20854 (* ?x19344 l_0_9_53)))
 (let ((?x20473 (* 4.0 l_0_9_115)))
 (let ((?x20474 (* ?x20473 l_0_9_119)))
 (let ((?x20470 (* 4.0 l_0_9_114)))
 (let ((?x20471 (* ?x20470 l_0_9_118)))
 (let ((?x20467 (* 4.0 l_0_9_113)))
 (let ((?x20468 (* ?x20467 l_0_9_117)))
 (let ((?x4635 (* 4.0 l_0_9_112)))
 (let ((?x4600 (* ?x4635 l_0_9_116)))
 (let ((?x21296 (+ (+ (- (+ (+ (+ (+ ?x4600 ?x20468) ?x20471) ?x20474) ?x20854) ?x20856) ?x21293) ?x21295)))
 (= (+ (+ ?x21296 ?x21297) ?x21299) 0.0)))))))))))))))))))
(assert
 (let ((?x20406 (* l_0_9_66 l_0_9_66)))
 (let ((?x20404 (* l_0_9_65 l_0_9_65)))
 (let ((?x6400 (- (- (+ (* l_0_9_44 l_0_9_44) (* l_0_9_45 l_0_9_45)) ?x20404) ?x20406)))
 (= ?x6400 0.0)))))
(assert
 (let ((?x19640 (* 2.0 l_0_9_66)))
 (let ((?x19641 (* ?x19640 l_0_9_68)))
 (let ((?x19637 (* 2.0 l_0_9_65)))
 (let ((?x19638 (* ?x19637 l_0_9_67)))
 (let ((?x19632 (* 2.0 l_0_9_45)))
 (let ((?x19633 (* ?x19632 l_0_9_47)))
 (let ((?x19629 (* 2.0 l_0_9_44)))
 (let ((?x19630 (* ?x19629 l_0_9_46)))
 (let ((?x21306 (+ (+ (+ ?x19630 ?x19633) (* 2.0 (* l_0_9_49 l_0_9_49))) (* 2.0 (* l_0_9_50 l_0_9_50)))))
 (let ((?x21310 (+ (+ ?x21306 (* 2.0 (* l_0_9_51 l_0_9_51))) (* 2.0 (* l_0_9_52 l_0_9_52)))))
 (let ((?x21316 (- (- (- (- ?x21310 ?x19638) ?x19641) (* (* 2.0 l_0_9_70) l_0_9_70)) (* (* 2.0 l_0_9_71) l_0_9_71))))
 (let ((?x21320 (- (- ?x21316 (* (* 2.0 l_0_9_72) l_0_9_72)) (* (* 2.0 l_0_9_73) l_0_9_73))))
 (let ((?x21326 (- (- ?x21320 (* (* 2.0 l_0_9_91) l_0_9_91)) (* (* 2.0 l_0_9_92) l_0_9_92))))
 (let ((?x21332 (- (- ?x21326 (* (* 2.0 l_0_9_93) l_0_9_93)) (* (* 2.0 l_0_9_94) l_0_9_94))))
 (= ?x21332 0.0))))))))))))))))
(assert
 (let ((?x19640 (* 2.0 l_0_9_66)))
 (let ((?x20529 (* ?x19640 l_0_9_71)))
 (let ((?x19637 (* 2.0 l_0_9_65)))
 (let ((?x20527 (* ?x19637 l_0_9_70)))
 (let ((?x19632 (* 2.0 l_0_9_45)))
 (let ((?x20525 (* ?x19632 l_0_9_50)))
 (let ((?x19629 (* 2.0 l_0_9_44)))
 (let ((?x20523 (* ?x19629 l_0_9_49)))
 (= (- (- (+ ?x20523 ?x20525) ?x20527) ?x20529) 0.0))))))))))
(assert
 (let ((?x19640 (* 2.0 l_0_9_66)))
 (let ((?x20601 (* ?x19640 l_0_9_75)))
 (let ((?x19637 (* 2.0 l_0_9_65)))
 (let ((?x20599 (* ?x19637 l_0_9_74)))
 (let ((?x19632 (* 2.0 l_0_9_45)))
 (let ((?x20597 (* ?x19632 l_0_9_54)))
 (let ((?x19629 (* 2.0 l_0_9_44)))
 (let ((?x20595 (* ?x19629 l_0_9_53)))
 (= (- (- (+ ?x20595 ?x20597) ?x20599) ?x20601) 0.0))))))))))
(assert
 (let ((?x19640 (* 2.0 l_0_9_66)))
 (let ((?x20676 (* ?x19640 l_0_9_80)))
 (let ((?x19637 (* 2.0 l_0_9_65)))
 (let ((?x20674 (* ?x19637 l_0_9_79)))
 (let ((?x19632 (* 2.0 l_0_9_45)))
 (let ((?x20672 (* ?x19632 l_0_9_59)))
 (let ((?x19629 (* 2.0 l_0_9_44)))
 (let ((?x20670 (* ?x19629 l_0_9_58)))
 (= (- (- (+ ?x20670 ?x20672) ?x20674) ?x20676) 0.0))))))))))
(assert
 (let ((?x19775 (* l_0_9_69 l_0_9_69)))
 (let ((?x19773 (* l_0_9_68 l_0_9_68)))
 (let ((?x19771 (* l_0_9_67 l_0_9_67)))
 (let ((?x19769 (* l_0_9_48 l_0_9_48)))
 (let ((?x15079 (- (+ (+ (* l_0_9_46 l_0_9_46) (* l_0_9_47 l_0_9_47)) ?x19769) ?x19771)))
 (= (- (- ?x15079 ?x19773) ?x19775) 0.0)))))))
(assert
 (let ((?x19919 (* 2.0 l_0_9_69)))
 (let ((?x19920 (* ?x19919 l_0_9_72)))
 (let ((?x19916 (* 2.0 l_0_9_68)))
 (let ((?x19917 (* ?x19916 l_0_9_71)))
 (let ((?x19913 (* 2.0 l_0_9_67)))
 (let ((?x19914 (* ?x19913 l_0_9_70)))
 (let ((?x19910 (* 2.0 l_0_9_48)))
 (let ((?x19911 (* ?x19910 l_0_9_51)))
 (let ((?x19907 (* 2.0 l_0_9_47)))
 (let ((?x19908 (* ?x19907 l_0_9_50)))
 (let ((?x19904 (* 2.0 l_0_9_46)))
 (let ((?x19905 (* ?x19904 l_0_9_49)))
 (= (- (- (- (+ (+ ?x19905 ?x19908) ?x19911) ?x19914) ?x19917) ?x19920) 0.0))))))))))))))
(assert
 (let ((?x19919 (* 2.0 l_0_9_69)))
 (let ((?x20045 (* ?x19919 l_0_9_76)))
 (let ((?x19916 (* 2.0 l_0_9_68)))
 (let ((?x20043 (* ?x19916 l_0_9_75)))
 (let ((?x19913 (* 2.0 l_0_9_67)))
 (let ((?x20041 (* ?x19913 l_0_9_74)))
 (let ((?x19910 (* 2.0 l_0_9_48)))
 (let ((?x20039 (* ?x19910 l_0_9_55)))
 (let ((?x19907 (* 2.0 l_0_9_47)))
 (let ((?x20037 (* ?x19907 l_0_9_54)))
 (let ((?x19904 (* 2.0 l_0_9_46)))
 (let ((?x20035 (* ?x19904 l_0_9_53)))
 (= (- (- (- (+ (+ ?x20035 ?x20037) ?x20039) ?x20041) ?x20043) ?x20045) 0.0))))))))))))))
(assert
 (let ((?x19919 (* 2.0 l_0_9_69)))
 (let ((?x20123 (* ?x19919 l_0_9_81)))
 (let ((?x19916 (* 2.0 l_0_9_68)))
 (let ((?x20121 (* ?x19916 l_0_9_80)))
 (let ((?x19913 (* 2.0 l_0_9_67)))
 (let ((?x20119 (* ?x19913 l_0_9_79)))
 (let ((?x19910 (* 2.0 l_0_9_48)))
 (let ((?x20117 (* ?x19910 l_0_9_60)))
 (let ((?x19907 (* 2.0 l_0_9_47)))
 (let ((?x20115 (* ?x19907 l_0_9_59)))
 (let ((?x19904 (* 2.0 l_0_9_46)))
 (let ((?x20113 (* ?x19904 l_0_9_58)))
 (= (- (- (- (+ (+ ?x20113 ?x20115) ?x20117) ?x20119) ?x20121) ?x20123) 0.0))))))))))))))
(assert
 (let ((?x20992 (* l_0_9_73 l_0_9_73)))
 (let ((?x20990 (* l_0_9_72 l_0_9_72)))
 (let ((?x20988 (* l_0_9_71 l_0_9_71)))
 (let ((?x20986 (* l_0_9_70 l_0_9_70)))
 (let ((?x20983 (* l_0_9_52 l_0_9_52)))
 (let ((?x20981 (* l_0_9_51 l_0_9_51)))
 (let ((?x15183 (+ (+ (+ (* l_0_9_49 l_0_9_49) (* l_0_9_50 l_0_9_50)) ?x20981) ?x20983)))
 (= (- (- (- (- ?x15183 ?x20986) ?x20988) ?x20990) ?x20992) 0.0)))))))))
(assert
 (let ((?x21038 (* 2.0 l_0_9_73)))
 (let ((?x21039 (* ?x21038 l_0_9_77)))
 (let ((?x21035 (* 2.0 l_0_9_72)))
 (let ((?x21036 (* ?x21035 l_0_9_76)))
 (let ((?x21032 (* 2.0 l_0_9_71)))
 (let ((?x21033 (* ?x21032 l_0_9_75)))
 (let ((?x21029 (* 2.0 l_0_9_70)))
 (let ((?x21030 (* ?x21029 l_0_9_74)))
 (let ((?x21026 (* 2.0 l_0_9_52)))
 (let ((?x21027 (* ?x21026 l_0_9_56)))
 (let ((?x21023 (* 2.0 l_0_9_51)))
 (let ((?x21024 (* ?x21023 l_0_9_55)))
 (let ((?x21020 (* 2.0 l_0_9_50)))
 (let ((?x21021 (* ?x21020 l_0_9_54)))
 (let ((?x21017 (* 2.0 l_0_9_49)))
 (let ((?x21018 (* ?x21017 l_0_9_53)))
 (let ((?x21376 (- (- (- (- (+ (+ (+ ?x21018 ?x21021) ?x21024) ?x21027) ?x21030) ?x21033) ?x21036) ?x21039)))
 (= ?x21376 0.0)))))))))))))))))))
(assert
 (let ((?x21038 (* 2.0 l_0_9_73)))
 (let ((?x21091 (* ?x21038 l_0_9_82)))
 (let ((?x21035 (* 2.0 l_0_9_72)))
 (let ((?x21089 (* ?x21035 l_0_9_81)))
 (let ((?x21032 (* 2.0 l_0_9_71)))
 (let ((?x21087 (* ?x21032 l_0_9_80)))
 (let ((?x21029 (* 2.0 l_0_9_70)))
 (let ((?x21085 (* ?x21029 l_0_9_79)))
 (let ((?x21026 (* 2.0 l_0_9_52)))
 (let ((?x21083 (* ?x21026 l_0_9_61)))
 (let ((?x21023 (* 2.0 l_0_9_51)))
 (let ((?x21081 (* ?x21023 l_0_9_60)))
 (let ((?x21020 (* 2.0 l_0_9_50)))
 (let ((?x21079 (* ?x21020 l_0_9_59)))
 (let ((?x21017 (* 2.0 l_0_9_49)))
 (let ((?x21077 (* ?x21017 l_0_9_58)))
 (let ((?x15229 (- (- (- (- (+ (+ (+ ?x21077 ?x21079) ?x21081) ?x21083) ?x21085) ?x21087) ?x21089) ?x21091)))
 (= ?x15229 0.0)))))))))))))))))))
(assert
 (let ((?x21136 (* l_0_9_78 l_0_9_78)))
 (let ((?x21134 (* l_0_9_77 l_0_9_77)))
 (let ((?x21132 (* l_0_9_76 l_0_9_76)))
 (let ((?x21130 (* l_0_9_75 l_0_9_75)))
 (let ((?x21128 (* l_0_9_74 l_0_9_74)))
 (let ((?x21126 (* l_0_9_57 l_0_9_57)))
 (let ((?x21124 (* l_0_9_56 l_0_9_56)))
 (let ((?x21122 (* l_0_9_55 l_0_9_55)))
 (let ((?x6928 (+ (+ (+ (* l_0_9_53 l_0_9_53) (* l_0_9_54 l_0_9_54)) ?x21122) ?x21124)))
 (= (- (- (- (- (- (+ ?x6928 ?x21126) ?x21128) ?x21130) ?x21132) ?x21134) ?x21136) 0.0)))))))))))
(assert
 (let ((?x21207 (* 2.0 l_0_9_78)))
 (let ((?x21208 (* ?x21207 l_0_9_83)))
 (let ((?x21204 (* 2.0 l_0_9_77)))
 (let ((?x21205 (* ?x21204 l_0_9_82)))
 (let ((?x21201 (* 2.0 l_0_9_76)))
 (let ((?x21202 (* ?x21201 l_0_9_81)))
 (let ((?x21198 (* 2.0 l_0_9_75)))
 (let ((?x21199 (* ?x21198 l_0_9_80)))
 (let ((?x21195 (* 2.0 l_0_9_74)))
 (let ((?x21196 (* ?x21195 l_0_9_79)))
 (let ((?x21193 (* (* 2.0 l_0_9_57) l_0_9_62)))
 (let ((?x21190 (* (* 2.0 l_0_9_56) l_0_9_61)))
 (let ((?x21187 (* (* 2.0 l_0_9_55) l_0_9_60)))
 (let ((?x21184 (* (* 2.0 l_0_9_54) l_0_9_59)))
 (let ((?x21181 (* (* 2.0 l_0_9_53) l_0_9_58)))
 (let ((?x15310 (- (- (- (+ (+ (+ (+ ?x21181 ?x21184) ?x21187) ?x21190) ?x21193) ?x21196) ?x21199) ?x21202)))
 (= (- (- ?x15310 ?x21205) ?x21208) 0.0))))))))))))))))))
(assert
 (let ((?x21255 (* l_0_9_84 l_0_9_84)))
 (let ((?x21253 (* l_0_9_83 l_0_9_83)))
 (let ((?x21251 (* l_0_9_82 l_0_9_82)))
 (let ((?x21249 (* l_0_9_81 l_0_9_81)))
 (let ((?x21247 (* l_0_9_80 l_0_9_80)))
 (let ((?x21245 (* l_0_9_79 l_0_9_79)))
 (let ((?x21243 (* l_0_9_63 l_0_9_63)))
 (let ((?x21241 (* l_0_9_62 l_0_9_62)))
 (let ((?x21239 (* l_0_9_61 l_0_9_61)))
 (let ((?x21237 (* l_0_9_60 l_0_9_60)))
 (let ((?x6974 (+ (+ (+ (* l_0_9_58 l_0_9_58) (* l_0_9_59 l_0_9_59)) ?x21237) ?x21239)))
 (let ((?x6963 (- (- (- (- (- (+ (+ ?x6974 ?x21241) ?x21243) ?x21245) ?x21247) ?x21249) ?x21251) ?x21253)))
 (= (- ?x6963 ?x21255) 0.0))))))))))))))
(assert
 (let ((?x15482 (+ (* 2.0 (* l_0_9_44 l_0_9_44)) (* 2.0 (* l_0_9_45 l_0_9_45)))))
 (let ((?x15472 (- (- ?x15482 (* (* 2.0 l_0_9_65) l_0_9_65)) (* (* 2.0 l_0_9_66) l_0_9_66))))
 (let ((?x7041 (- (- ?x15472 (* (* 2.0 l_0_9_86) l_0_9_86)) (* (* 2.0 l_0_9_87) l_0_9_87))))
 (= ?x7041 0.0)))))
(assert
 (let ((?x6914 (+ (* (* 4.0 l_0_9_44) l_0_9_46) (* (* 4.0 l_0_9_45) l_0_9_47))))
 (let ((?x21385 (- (- ?x6914 (* (* 4.0 l_0_9_65) l_0_9_67)) (* (* 4.0 l_0_9_66) l_0_9_68))))
 (let ((?x21391 (- (- ?x21385 (* (* 4.0 l_0_9_86) l_0_9_88)) (* (* 4.0 l_0_9_87) l_0_9_89))))
 (= ?x21391 0.0)))))
(assert
 (let ((?x21403 (+ (* (* 4.0 l_0_9_44) l_0_9_49) (* (* 4.0 l_0_9_45) l_0_9_50))))
 (let ((?x21407 (- (- ?x21403 (* (* 4.0 l_0_9_65) l_0_9_70)) (* (* 4.0 l_0_9_66) l_0_9_71))))
 (let ((?x21411 (- (- ?x21407 (* (* 4.0 l_0_9_86) l_0_9_91)) (* (* 4.0 l_0_9_87) l_0_9_92))))
 (= ?x21411 0.0)))))
(assert
 (let ((?x21423 (+ (* (* 4.0 l_0_9_44) l_0_9_53) (* (* 4.0 l_0_9_45) l_0_9_54))))
 (let ((?x21427 (- (- ?x21423 (* (* 4.0 l_0_9_65) l_0_9_74)) (* (* 4.0 l_0_9_66) l_0_9_75))))
 (let ((?x21431 (- (- ?x21427 (* (* 4.0 l_0_9_86) l_0_9_95)) (* (* 4.0 l_0_9_87) l_0_9_96))))
 (= ?x21431 0.0)))))
(assert
 (let ((?x15552 (- (* (* (- 4.0) l_0_9_100) l_0_9_86) (* (* 4.0 l_0_9_101) l_0_9_87))))
 (let ((?x7180 (+ (+ ?x15552 (* (* 4.0 l_0_9_44) l_0_9_58)) (* (* 4.0 l_0_9_45) l_0_9_59))))
 (let ((?x7195 (- (- ?x7180 (* (* 4.0 l_0_9_65) l_0_9_79)) (* (* 4.0 l_0_9_66) l_0_9_80))))
 (= ?x7195 0.0)))))
(assert
 (let ((?x21475 (+ (* 2.0 (* l_0_9_46 l_0_9_46)) (* 2.0 (* l_0_9_47 l_0_9_47)))))
 (let ((?x21479 (- (+ ?x21475 (* 2.0 (* l_0_9_48 l_0_9_48))) (* (* 2.0 l_0_9_67) l_0_9_67))))
 (let ((?x21483 (- (- ?x21479 (* (* 2.0 l_0_9_68) l_0_9_68)) (* (* 2.0 l_0_9_69) l_0_9_69))))
 (let ((?x21487 (- (- ?x21483 (* (* 2.0 l_0_9_88) l_0_9_88)) (* (* 2.0 l_0_9_89) l_0_9_89))))
 (= (- ?x21487 (* (* 2.0 l_0_9_90) l_0_9_90)) 0.0))))))
(assert
 (let ((?x21521 (+ (* (* 4.0 l_0_9_46) l_0_9_49) (* (* 4.0 l_0_9_47) l_0_9_50))))
 (let ((?x21527 (- (+ ?x21521 (* (* 4.0 l_0_9_48) l_0_9_51)) (* (* 4.0 l_0_9_67) l_0_9_70))))
 (let ((?x21533 (- (- ?x21527 (* (* 4.0 l_0_9_68) l_0_9_71)) (* (* 4.0 l_0_9_69) l_0_9_72))))
 (let ((?x21539 (- (- ?x21533 (* (* 4.0 l_0_9_88) l_0_9_91)) (* (* 4.0 l_0_9_89) l_0_9_92))))
 (= (- ?x21539 (* (* 4.0 l_0_9_90) l_0_9_93)) 0.0))))))
(assert
 (let ((?x15628 (+ (* (* 4.0 l_0_9_46) l_0_9_53) (* (* 4.0 l_0_9_47) l_0_9_54))))
 (let ((?x7280 (- (+ ?x15628 (* (* 4.0 l_0_9_48) l_0_9_55)) (* (* 4.0 l_0_9_67) l_0_9_74))))
 (let ((?x15647 (- (- ?x7280 (* (* 4.0 l_0_9_68) l_0_9_75)) (* (* 4.0 l_0_9_69) l_0_9_76))))
 (let ((?x21566 (- (- ?x15647 (* (* 4.0 l_0_9_88) l_0_9_95)) (* (* 4.0 l_0_9_89) l_0_9_96))))
 (= (- ?x21566 (* (* 4.0 l_0_9_90) l_0_9_97)) 0.0))))))
(assert
 (let ((?x21592 (- (* (* (- 4.0) l_0_9_100) l_0_9_88) (* (* 4.0 l_0_9_101) l_0_9_89))))
 (let ((?x21597 (+ (- ?x21592 (* (* 4.0 l_0_9_102) l_0_9_90)) (* (* 4.0 l_0_9_46) l_0_9_58))))
 (let ((?x21601 (+ (+ ?x21597 (* (* 4.0 l_0_9_47) l_0_9_59)) (* (* 4.0 l_0_9_48) l_0_9_60))))
 (let ((?x21605 (- (- ?x21601 (* (* 4.0 l_0_9_67) l_0_9_79)) (* (* 4.0 l_0_9_68) l_0_9_80))))
 (= (- ?x21605 (* (* 4.0 l_0_9_69) l_0_9_81)) 0.0))))))
(assert
 (let ((?x21641 (+ (* (* 4.0 l_0_9_49) l_0_9_53) (* (* 4.0 l_0_9_50) l_0_9_54))))
 (let ((?x21647 (+ (+ ?x21641 (* (* 4.0 l_0_9_51) l_0_9_55)) (* (* 4.0 l_0_9_52) l_0_9_56))))
 (let ((?x21653 (- (- ?x21647 (* (* 4.0 l_0_9_70) l_0_9_74)) (* (* 4.0 l_0_9_71) l_0_9_75))))
 (let ((?x21659 (- (- ?x21653 (* (* 4.0 l_0_9_72) l_0_9_76)) (* (* 4.0 l_0_9_73) l_0_9_77))))
 (let ((?x21665 (- (- ?x21659 (* (* 4.0 l_0_9_91) l_0_9_95)) (* (* 4.0 l_0_9_92) l_0_9_96))))
 (let ((?x21671 (- (- ?x21665 (* (* 4.0 l_0_9_93) l_0_9_97)) (* (* 4.0 l_0_9_94) l_0_9_98))))
 (= ?x21671 0.0))))))))
(assert
 (let ((?x15692 (- (* (* (- 4.0) l_0_9_100) l_0_9_91) (* (* 4.0 l_0_9_101) l_0_9_92))))
 (let ((?x21702 (- (- ?x15692 (* (* 4.0 l_0_9_102) l_0_9_93)) (* (* 4.0 l_0_9_103) l_0_9_94))))
 (let ((?x21706 (+ (+ ?x21702 (* (* 4.0 l_0_9_49) l_0_9_58)) (* (* 4.0 l_0_9_50) l_0_9_59))))
 (let ((?x21710 (+ (+ ?x21706 (* (* 4.0 l_0_9_51) l_0_9_60)) (* (* 4.0 l_0_9_52) l_0_9_61))))
 (let ((?x21714 (- (- ?x21710 (* (* 4.0 l_0_9_70) l_0_9_79)) (* (* 4.0 l_0_9_71) l_0_9_80))))
 (let ((?x21718 (- (- ?x21714 (* (* 4.0 l_0_9_72) l_0_9_81)) (* (* 4.0 l_0_9_73) l_0_9_82))))
 (= ?x21718 0.0))))))))
(assert
 (let ((?x15813 (+ (* 2.0 (* l_0_9_53 l_0_9_53)) (* 2.0 (* l_0_9_54 l_0_9_54)))))
 (let ((?x21747 (+ (+ ?x15813 (* 2.0 (* l_0_9_55 l_0_9_55))) (* 2.0 (* l_0_9_56 l_0_9_56)))))
 (let ((?x21751 (- (+ ?x21747 (* 2.0 (* l_0_9_57 l_0_9_57))) (* (* 2.0 l_0_9_74) l_0_9_74))))
 (let ((?x21755 (- (- ?x21751 (* (* 2.0 l_0_9_75) l_0_9_75)) (* (* 2.0 l_0_9_76) l_0_9_76))))
 (let ((?x21759 (- (- ?x21755 (* (* 2.0 l_0_9_77) l_0_9_77)) (* (* 2.0 l_0_9_78) l_0_9_78))))
 (let ((?x21765 (- (- ?x21759 (* (* 2.0 l_0_9_95) l_0_9_95)) (* (* 2.0 l_0_9_96) l_0_9_96))))
 (let ((?x21771 (- (- ?x21765 (* (* 2.0 l_0_9_97) l_0_9_97)) (* (* 2.0 l_0_9_98) l_0_9_98))))
 (= (- ?x21771 (* (* 2.0 l_0_9_99) l_0_9_99)) 0.0)))))))))
(assert
 (let ((?x7590 (- (* (* (- 4.0) l_0_9_100) l_0_9_95) (* (* 4.0 l_0_9_101) l_0_9_96))))
 (let ((?x21805 (- (- ?x7590 (* (* 4.0 l_0_9_102) l_0_9_97)) (* (* 4.0 l_0_9_103) l_0_9_98))))
 (let ((?x21811 (+ (- ?x21805 (* (* 4.0 l_0_9_104) l_0_9_99)) (* (* 4.0 l_0_9_53) l_0_9_58))))
 (let ((?x21817 (+ (+ ?x21811 (* (* 4.0 l_0_9_54) l_0_9_59)) (* (* 4.0 l_0_9_55) l_0_9_60))))
 (let ((?x21823 (+ (+ ?x21817 (* (* 4.0 l_0_9_56) l_0_9_61)) (* (* 4.0 l_0_9_57) l_0_9_62))))
 (let ((?x21829 (- (- ?x21823 (* (* 4.0 l_0_9_74) l_0_9_79)) (* (* 4.0 l_0_9_75) l_0_9_80))))
 (let ((?x21835 (- (- ?x21829 (* (* 4.0 l_0_9_76) l_0_9_81)) (* (* 4.0 l_0_9_77) l_0_9_82))))
 (= (- ?x21835 (* (* 4.0 l_0_9_78) l_0_9_83)) 0.0)))))))))
(assert
 (let ((?x21877 (- (* (* (- 2.0) l_0_9_100) l_0_9_100) (* (* 2.0 l_0_9_101) l_0_9_101))))
 (let ((?x21881 (- (- ?x21877 (* (* 2.0 l_0_9_102) l_0_9_102)) (* (* 2.0 l_0_9_103) l_0_9_103))))
 (let ((?x21886 (- (- ?x21881 (* (* 2.0 l_0_9_104) l_0_9_104)) (* (* 2.0 l_0_9_105) l_0_9_105))))
 (let ((?x21890 (+ (+ ?x21886 (* 2.0 (* l_0_9_58 l_0_9_58))) (* 2.0 (* l_0_9_59 l_0_9_59)))))
 (let ((?x21894 (+ (+ ?x21890 (* 2.0 (* l_0_9_60 l_0_9_60))) (* 2.0 (* l_0_9_61 l_0_9_61)))))
 (let ((?x21898 (+ (+ ?x21894 (* 2.0 (* l_0_9_62 l_0_9_62))) (* 2.0 (* l_0_9_63 l_0_9_63)))))
 (let ((?x21904 (- (- ?x21898 (* (* 2.0 l_0_9_79) l_0_9_79)) (* (* 2.0 l_0_9_80) l_0_9_80))))
 (let ((?x21910 (- (- ?x21904 (* (* 2.0 l_0_9_81) l_0_9_81)) (* (* 2.0 l_0_9_82) l_0_9_82))))
 (let ((?x21916 (- (- ?x21910 (* (* 2.0 l_0_9_83) l_0_9_83)) (* (* 2.0 l_0_9_84) l_0_9_84))))
 (= ?x21916 0.0)))))))))))
(assert
 (let ((?x13026 (* l_0_9_85 l_0_9_85)))
 (let ((?x21968 (- (* (* (- 2.0) l_0_9_127) l_0_9_137) (* (* 2.0 l_0_9_148) l_0_9_158))))
 (let ((?x21972 (- (- ?x21968 (* (* 2.0 l_0_9_169) l_0_9_179)) (* (* 2.0 l_0_9_190) l_0_9_200))))
 (= (+ ?x21972 ?x13026) 0.0)))))
(assert
 (let ((?x15933 (- (* (* 4.0 l_0_9_106) l_0_9_116) (* (* 2.0 l_0_9_133) l_0_9_137))))
 (let ((?x7709 (- (- ?x15933 (* (* 2.0 l_0_9_134) l_0_9_138)) (* (* 2.0 l_0_9_135) l_0_9_139))))
 (let ((?x7703 (- (- ?x7709 (* (* 2.0 l_0_9_136) l_0_9_140)) (* (* 2.0 l_0_9_154) l_0_9_158))))
 (let ((?x21985 (- (- ?x7703 (* (* 2.0 l_0_9_155) l_0_9_159)) (* (* 2.0 l_0_9_156) l_0_9_160))))
 (let ((?x21989 (- (- ?x21985 (* (* 2.0 l_0_9_157) l_0_9_161)) (* (* 2.0 l_0_9_175) l_0_9_179))))
 (let ((?x21993 (- (- ?x21989 (* (* 2.0 l_0_9_176) l_0_9_180)) (* (* 2.0 l_0_9_177) l_0_9_181))))
 (let ((?x21997 (- (- ?x21993 (* (* 2.0 l_0_9_178) l_0_9_182)) (* (* 2.0 l_0_9_196) l_0_9_200))))
 (let ((?x22001 (- (- ?x21997 (* (* 2.0 l_0_9_197) l_0_9_201)) (* (* 2.0 l_0_9_198) l_0_9_202))))
 (let ((?x22005 (+ (- ?x22001 (* (* 2.0 l_0_9_199) l_0_9_203)) (* (* 2.0 l_0_9_85) l_0_9_91))))
 (= ?x22005 0.0)))))))))))
(assert
 (let ((?x22058 (* l_0_9_204 l_0_9_204)))
 (let ((?x22056 (* l_0_9_203 l_0_9_203)))
 (let ((?x22054 (* l_0_9_202 l_0_9_202)))
 (let ((?x22052 (* l_0_9_201 l_0_9_201)))
 (let ((?x22050 (* l_0_9_200 l_0_9_200)))
 (let ((?x22048 (* l_0_9_183 l_0_9_183)))
 (let ((?x22046 (* l_0_9_182 l_0_9_182)))
 (let ((?x22044 (* l_0_9_181 l_0_9_181)))
 (let ((?x22042 (* l_0_9_180 l_0_9_180)))
 (let ((?x22040 (* l_0_9_179 l_0_9_179)))
 (let ((?x22038 (* l_0_9_162 l_0_9_162)))
 (let ((?x22036 (* l_0_9_161 l_0_9_161)))
 (let ((?x22034 (* l_0_9_160 l_0_9_160)))
 (let ((?x22032 (* l_0_9_159 l_0_9_159)))
 (let ((?x16096 (* l_0_9_158 l_0_9_158)))
 (let ((?x16092 (* l_0_9_141 l_0_9_141)))
 (let ((?x16097 (* l_0_9_140 l_0_9_140)))
 (let ((?x16068 (* l_0_9_139 l_0_9_139)))
 (let ((?x7906 (- (- (* (- l_0_9_137) l_0_9_137) (* l_0_9_138 l_0_9_138)) ?x16068)))
 (let ((?x22039 (- (- (- (- (- (- (- ?x7906 ?x16097) ?x16092) ?x16096) ?x22032) ?x22034) ?x22036) ?x22038)))
 (let ((?x22053 (- (- (- (- (- (- (- ?x22039 ?x22040) ?x22042) ?x22044) ?x22046) ?x22048) ?x22050) ?x22052)))
 (let ((?x22061 (+ (- (- (- ?x22053 ?x22054) ?x22056) ?x22058) (* (* 2.0 l_0_9_85) l_0_9_95))))
 (= ?x22061 0.0))))))))))))))))))))))))
(assert
 (let ((?x19965 (* l_0_9_120 l_0_9_120)))
 (let ((?x5104 (* 2.0 ?x19965)))
 (let ((?x19960 (* l_0_9_119 l_0_9_119)))
 (let ((?x5101 (* 2.0 ?x19960)))
 (let ((?x19957 (* l_0_9_118 l_0_9_118)))
 (let ((?x5097 (* 2.0 ?x19957)))
 (let ((?x19954 (* l_0_9_117 l_0_9_117)))
 (let ((?x5091 (* 2.0 ?x19954)))
 (let ((?x19951 (* l_0_9_116 l_0_9_116)))
 (let ((?x8012 (* 2.0 ?x19951)))
 (let ((?x8000 (+ (+ (+ (+ (+ ?x8012 ?x5091) ?x5097) ?x5101) ?x5104) (* (* 2.0 l_0_9_91) l_0_9_95))))
 (let ((?x22094 (+ (+ ?x8000 (* (* 2.0 l_0_9_92) l_0_9_96)) (* (* 2.0 l_0_9_93) l_0_9_97))))
 (= (+ ?x22094 (* (* 2.0 l_0_9_94) l_0_9_98)) 0.0))))))))))))))
(assert
 (let ((?x15873 (* l_0_9_99 l_0_9_99)))
 (let ((?x7587 (* l_0_9_98 l_0_9_98)))
 (let ((?x15855 (* l_0_9_97 l_0_9_97)))
 (let ((?x22103 (+ (+ (+ (* l_0_9_95 l_0_9_95) (* l_0_9_96 l_0_9_96)) ?x15855) ?x7587)))
 (= (+ ?x22103 ?x15873) 0.0))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_22 0.0))
(assert
 (>= l_0_9_24 0.0))
(assert
 (>= l_0_9_27 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_42 0.0))
(assert
 (>= l_0_9_43 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_52 0.0))
(assert
 (>= l_0_9_57 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_64 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_69 0.0))
(assert
 (>= l_0_9_73 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_84 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_87 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_94 0.0))
(assert
 (>= l_0_9_99 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_127 0.0))
(assert
 (>= l_0_9_129 0.0))
(assert
 (>= l_0_9_132 0.0))
(assert
 (>= l_0_9_136 0.0))
(assert
 (>= l_0_9_141 0.0))
(assert
 (>= l_0_9_147 0.0))
(assert
 (>= l_0_9_148 0.0))
(assert
 (>= l_0_9_150 0.0))
(assert
 (>= l_0_9_153 0.0))
(assert
 (>= l_0_9_157 0.0))
(assert
 (>= l_0_9_162 0.0))
(assert
 (>= l_0_9_168 0.0))
(assert
 (>= l_0_9_169 0.0))
(assert
 (>= l_0_9_171 0.0))
(assert
 (>= l_0_9_174 0.0))
(assert
 (>= l_0_9_178 0.0))
(assert
 (>= l_0_9_183 0.0))
(assert
 (>= l_0_9_189 0.0))
(assert
 (>= l_0_9_190 0.0))
(assert
 (>= l_0_9_192 0.0))
(assert
 (>= l_0_9_195 0.0))
(assert
 (>= l_0_9_199 0.0))
(assert
 (>= l_0_9_204 0.0))
(assert
 (>= l_0_9_210 0.0))
(assert
 (let ((?x22172 (- (* (- l_0_10_1) l_0_10_1) (* (* 1.0 l_0_10_106) l_0_10_106))))
 (= (+ (- ?x22172 (* (* 2.0 l_0_10_127) l_0_10_130)) (/ 1.0 2.0)) 0.0)))
(assert
 (= (* (- l_0_10_127) l_0_10_127) 0.0))
(assert
 (let ((?x22203 (* 4.0 l_0_10_106)))
 (let ((?x22204 (* ?x22203 l_0_10_109)))
 (let ((?x22202 (- (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_106) l_0_10_107))))
 (let ((?x22211 (- (- (+ ?x22202 ?x22204) (* (* 2.0 l_0_10_128) l_0_10_130)) (* (* 2.0 l_0_10_129) l_0_10_131))))
 (let ((?x22217 (+ (- ?x22211 (* (* 2.0 l_0_10_22) l_0_10_25)) (* 2.0 (* l_0_10_43 l_0_10_43)))))
 (let ((?x22223 (- (- ?x22217 (* (* 2.0 l_0_10_64) l_0_10_64)) (* (* 2.0 l_0_10_85) l_0_10_85))))
 (= ?x22223 0.0))))))))
(assert
 (let ((?x22264 (* l_0_10_132 l_0_10_132)))
 (let ((?x22262 (* l_0_10_131 l_0_10_131)))
 (let ((?x22260 (* l_0_10_130 l_0_10_130)))
 (let ((?x22259 (- (* (* (- 2.0) l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_106) l_0_10_109))))
 (= (- (- (- ?x22259 ?x22260) ?x22262) ?x22264) 0.0))))))
(assert
 (let ((?x22203 (* 4.0 l_0_10_106)))
 (let ((?x22204 (* ?x22203 l_0_10_109)))
 (let ((?x16203 (- (- (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x22204) (* (* 2.0 l_0_10_106) l_0_10_112))))
 (let ((?x22274 (- (- ?x16203 (* (* 2.0 l_0_10_130) l_0_10_133)) (* (* 2.0 l_0_10_131) l_0_10_134))))
 (= (- ?x22274 (* (* 2.0 l_0_10_132) l_0_10_135)) 0.0))))))
(assert
 (let ((?x22295 (- (* (* (- 2.0) l_0_10_1) l_0_10_11) (* (* 2.0 l_0_10_106) l_0_10_116))))
 (let ((?x22299 (- (- ?x22295 (* (* 2.0 l_0_10_130) l_0_10_137)) (* (* 2.0 l_0_10_131) l_0_10_138))))
 (let ((?x22303 (+ (- ?x22299 (* (* 2.0 l_0_10_132) l_0_10_139)) (* (* 2.0 l_0_10_85) l_0_10_88))))
 (= ?x22303 0.0)))))
(assert
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x22319 (* ?x22218 l_0_10_67)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x22317 (* ?x22316 l_0_10_46)))
 (let ((?x8091 (- (* (* (- 2.0) l_0_10_1) l_0_10_16) (* (* 2.0 l_0_10_106) l_0_10_121))))
 (let ((?x22313 (- (- ?x8091 (* (* 2.0 l_0_10_130) l_0_10_142)) (* (* 2.0 l_0_10_131) l_0_10_143))))
 (= (+ (- (- ?x22313 (* (* 2.0 l_0_10_132) l_0_10_144)) ?x22317) ?x22319) 0.0))))))))
(assert
 (let ((?x22349 (* l_0_10_3 l_0_10_3)))
 (let ((?x22341 (* l_0_10_2 l_0_10_2)))
 (let ((?x16342 (* 4.0 l_0_10_108)))
 (let ((?x8146 (* ?x16342 l_0_10_110)))
 (let ((?x8147 (- (* (* 4.0 l_0_10_107) l_0_10_109) (* (* 1.0 l_0_10_107) l_0_10_107))))
 (let ((?x22345 (- (- (- (+ ?x8147 ?x8146) (* (* 1.0 l_0_10_108) l_0_10_108)) ?x22341) (* (* 2.0 l_0_10_23) l_0_10_25))))
 (let ((?x22353 (+ (- (- ?x22345 (* (* 2.0 l_0_10_24) l_0_10_26)) ?x22349) (* (* 4.0 l_0_10_43) l_0_10_44))))
 (let ((?x22359 (- (- ?x22353 (* (* 4.0 l_0_10_64) l_0_10_65)) (* (* 4.0 l_0_10_85) l_0_10_86))))
 (= ?x22359 0.0))))))))))
(assert
 (let ((?x22414 (* l_0_10_27 l_0_10_27)))
 (let ((?x22412 (* l_0_10_26 l_0_10_26)))
 (let ((?x22410 (* l_0_10_25 l_0_10_25)))
 (let ((?x22404 (* l_0_10_111 l_0_10_111)))
 (let ((?x22405 (* 2.0 ?x22404)))
 (let ((?x22401 (* l_0_10_110 l_0_10_110)))
 (let ((?x22402 (* 2.0 ?x22401)))
 (let ((?x22398 (* l_0_10_109 l_0_10_109)))
 (let ((?x22399 (* 2.0 ?x22398)))
 (let ((?x22397 (- (* (* (- 2.0) l_0_10_107) l_0_10_109) (* (* 2.0 l_0_10_108) l_0_10_110))))
 (let ((?x22409 (- (+ (+ (+ ?x22397 ?x22399) ?x22402) ?x22405) (* (* 2.0 l_0_10_2) l_0_10_4))))
 (let ((?x22418 (- (- (- (- ?x22409 ?x22410) ?x22412) ?x22414) (* (* 2.0 l_0_10_3) l_0_10_5))))
 (let ((?x22422 (- (+ ?x22418 (* (* 4.0 l_0_10_43) l_0_10_46)) (* (* 4.0 l_0_10_64) l_0_10_67))))
 (= (- ?x22422 (* (* 4.0 l_0_10_85) l_0_10_88)) 0.0)))))))))))))))
(assert
 (let ((?x22461 (* 4.0 l_0_10_111)))
 (let ((?x22462 (* ?x22461 l_0_10_114)))
 (let ((?x22458 (* 4.0 l_0_10_110)))
 (let ((?x22459 (* ?x22458 l_0_10_113)))
 (let ((?x22455 (* 4.0 l_0_10_109)))
 (let ((?x22456 (* ?x22455 l_0_10_112)))
 (let ((?x16342 (* 4.0 l_0_10_108)))
 (let ((?x8146 (* ?x16342 l_0_10_110)))
 (let ((?x22451 (- (* (* (- 4.0) l_0_10_107) l_0_10_109) (* (* 2.0 l_0_10_107) l_0_10_112))))
 (let ((?x22460 (+ (+ (- (- ?x22451 ?x8146) (* (* 2.0 l_0_10_108) l_0_10_113)) ?x22456) ?x22459)))
 (let ((?x22468 (- (- (+ ?x22460 ?x22462) (* (* 2.0 l_0_10_2) l_0_10_7)) (* (* 2.0 l_0_10_25) l_0_10_28))))
 (let ((?x22474 (- (- ?x22468 (* (* 2.0 l_0_10_26) l_0_10_29)) (* (* 2.0 l_0_10_27) l_0_10_30))))
 (let ((?x22478 (+ (- ?x22474 (* (* 2.0 l_0_10_3) l_0_10_8)) (* (* 4.0 l_0_10_43) l_0_10_49))))
 (let ((?x22482 (- (- ?x22478 (* (* 4.0 l_0_10_64) l_0_10_70)) (* (* 4.0 l_0_10_85) l_0_10_91))))
 (= ?x22482 0.0))))))))))))))))
(assert
 (let ((?x22461 (* 4.0 l_0_10_111)))
 (let ((?x22522 (* ?x22461 l_0_10_118)))
 (let ((?x22458 (* 4.0 l_0_10_110)))
 (let ((?x22520 (* ?x22458 l_0_10_117)))
 (let ((?x22455 (* 4.0 l_0_10_109)))
 (let ((?x22515 (* ?x22455 l_0_10_116)))
 (let ((?x22514 (- (* (* (- 2.0) l_0_10_107) l_0_10_116) (* (* 2.0 l_0_10_108) l_0_10_117))))
 (let ((?x22523 (+ (+ (- (+ ?x22514 ?x22515) (* (* 2.0 l_0_10_11) l_0_10_2)) ?x22520) ?x22522)))
 (let ((?x22528 (- (- ?x22523 (* (* 2.0 l_0_10_12) l_0_10_3)) (* (* 2.0 l_0_10_25) l_0_10_32))))
 (let ((?x22532 (- (- ?x22528 (* (* 2.0 l_0_10_26) l_0_10_33)) (* (* 2.0 l_0_10_27) l_0_10_34))))
 (let ((?x22536 (- (+ ?x22532 (* (* 4.0 l_0_10_43) l_0_10_53)) (* (* 4.0 l_0_10_64) l_0_10_74))))
 (let ((?x22541 (+ (- ?x22536 (* (* 4.0 l_0_10_85) l_0_10_95)) (* (* 2.0 l_0_10_86) l_0_10_88))))
 (= (+ ?x22541 (* (* 2.0 l_0_10_87) l_0_10_89)) 0.0))))))))))))))
(assert
 (let ((?x22608 (* 2.0 l_0_10_66)))
 (let ((?x22609 (* ?x22608 l_0_10_68)))
 (let ((?x22605 (* 2.0 l_0_10_65)))
 (let ((?x22606 (* ?x22605 l_0_10_67)))
 (let ((?x22600 (* 2.0 l_0_10_45)))
 (let ((?x22601 (* ?x22600 l_0_10_47)))
 (let ((?x22597 (* 2.0 l_0_10_44)))
 (let ((?x22598 (* ?x22597 l_0_10_46)))
 (let ((?x22461 (* 4.0 l_0_10_111)))
 (let ((?x22581 (* ?x22461 l_0_10_123)))
 (let ((?x22458 (* 4.0 l_0_10_110)))
 (let ((?x22579 (* ?x22458 l_0_10_122)))
 (let ((?x22455 (* 4.0 l_0_10_109)))
 (let ((?x8646 (* ?x22455 l_0_10_121)))
 (let ((?x16536 (- (* (* (- 4.0) l_0_10_100) l_0_10_85) (* (* 2.0 l_0_10_107) l_0_10_121))))
 (let ((?x22582 (+ (+ (+ (- ?x16536 (* (* 2.0 l_0_10_108) l_0_10_122)) ?x8646) ?x22579) ?x22581)))
 (let ((?x22588 (- (- ?x22582 (* (* 2.0 l_0_10_16) l_0_10_2)) (* (* 2.0 l_0_10_17) l_0_10_3))))
 (let ((?x22592 (- (- ?x22588 (* (* 2.0 l_0_10_25) l_0_10_37)) (* (* 2.0 l_0_10_26) l_0_10_38))))
 (let ((?x22596 (+ (- ?x22592 (* (* 2.0 l_0_10_27) l_0_10_39)) (* (* 4.0 l_0_10_43) l_0_10_58))))
 (let ((?x22607 (+ (- (- (- ?x22596 ?x22598) ?x22601) (* (* 4.0 l_0_10_64) l_0_10_79)) ?x22606)))
 (= (+ ?x22607 ?x22609) 0.0))))))))))))))))))))))
(assert
 (let ((?x22669 (* l_0_10_6 l_0_10_6)))
 (let ((?x22667 (* l_0_10_5 l_0_10_5)))
 (let ((?x22665 (* l_0_10_4 l_0_10_4)))
 (let ((?x22661 (- (* (* (- 1.0) l_0_10_109) l_0_10_109) (* (* 1.0 l_0_10_110) l_0_10_110))))
 (let ((?x22670 (- (- (- (- ?x22661 (* (* 1.0 l_0_10_111) l_0_10_111)) ?x22665) ?x22667) ?x22669)))
 (= ?x22670 0.0)))))))
(assert
 (let ((?x22685 (- (* (* (- 2.0) l_0_10_109) l_0_10_112) (* (* 2.0 l_0_10_109) l_0_10_109))))
 (let ((?x22690 (- (- ?x22685 (* (* 2.0 l_0_10_110) l_0_10_113)) (* (* 2.0 l_0_10_110) l_0_10_110))))
 (let ((?x22695 (- (- ?x22690 (* (* 2.0 l_0_10_111) l_0_10_114)) (* (* 2.0 l_0_10_111) l_0_10_111))))
 (let ((?x22701 (- (- ?x22695 (* (* 2.0 l_0_10_4) l_0_10_7)) (* (* 2.0 l_0_10_5) l_0_10_8))))
 (= (- ?x22701 (* (* 2.0 l_0_10_6) l_0_10_9)) 0.0))))))
(assert
 (let ((?x22728 (* l_0_10_90 l_0_10_90)))
 (let ((?x22726 (* l_0_10_89 l_0_10_89)))
 (let ((?x22724 (* l_0_10_88 l_0_10_88)))
 (let ((?x22714 (- (* (* (- 2.0) l_0_10_109) l_0_10_116) (* (* 2.0 l_0_10_11) l_0_10_4))))
 (let ((?x22718 (- (- ?x22714 (* (* 2.0 l_0_10_110) l_0_10_117)) (* (* 2.0 l_0_10_111) l_0_10_118))))
 (let ((?x22723 (- (- ?x22718 (* (* 2.0 l_0_10_12) l_0_10_5)) (* (* 2.0 l_0_10_13) l_0_10_6))))
 (= (+ (+ (+ ?x22723 ?x22724) ?x22726) ?x22728) 0.0))))))))
(assert
 (let ((?x22770 (* l_0_10_69 l_0_10_69)))
 (let ((?x22768 (* l_0_10_68 l_0_10_68)))
 (let ((?x22766 (* l_0_10_67 l_0_10_67)))
 (let ((?x22764 (* l_0_10_48 l_0_10_48)))
 (let ((?x22762 (* l_0_10_47 l_0_10_47)))
 (let ((?x22760 (* l_0_10_46 l_0_10_46)))
 (let ((?x22750 (- (* (* (- 2.0) l_0_10_109) l_0_10_121) (* (* 2.0 l_0_10_110) l_0_10_122))))
 (let ((?x22754 (- (- ?x22750 (* (* 2.0 l_0_10_111) l_0_10_123)) (* (* 2.0 l_0_10_16) l_0_10_4))))
 (let ((?x22759 (- (- ?x22754 (* (* 2.0 l_0_10_17) l_0_10_5)) (* (* 2.0 l_0_10_18) l_0_10_6))))
 (= (+ (+ (+ (- (- (- ?x22759 ?x22760) ?x22762) ?x22764) ?x22766) ?x22768) ?x22770) 0.0)))))))))))
(assert
 (let ((?x22807 (* l_0_10_9 l_0_10_9)))
 (let ((?x22805 (* l_0_10_8 l_0_10_8)))
 (let ((?x22803 (* l_0_10_7 l_0_10_7)))
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x22319 (* ?x22218 l_0_10_67)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x22317 (* ?x22316 l_0_10_46)))
 (let ((?x22461 (* 4.0 l_0_10_111)))
 (let ((?x22462 (* ?x22461 l_0_10_114)))
 (let ((?x22458 (* 4.0 l_0_10_110)))
 (let ((?x22459 (* ?x22458 l_0_10_113)))
 (let ((?x22455 (* 4.0 l_0_10_109)))
 (let ((?x22456 (* ?x22455 l_0_10_112)))
 (let ((?x22791 (- (- (- (- (* (- l_0_10_10) l_0_10_10) ?x22456) ?x22459) ?x22462) (* (* 1.0 l_0_10_112) l_0_10_112))))
 (let ((?x22797 (- (- ?x22791 (* (* 1.0 l_0_10_113) l_0_10_113)) (* (* 1.0 l_0_10_114) l_0_10_114))))
 (let ((?x22804 (- (- (+ (- ?x22797 (* (* 1.0 l_0_10_115) l_0_10_115)) ?x22317) ?x22319) ?x22803)))
 (= (- (- ?x22804 ?x22805) ?x22807) 0.0))))))))))))))))))
(assert
 (let ((?x22461 (* 4.0 l_0_10_111)))
 (let ((?x22522 (* ?x22461 l_0_10_118)))
 (let ((?x22458 (* 4.0 l_0_10_110)))
 (let ((?x22520 (* ?x22458 l_0_10_117)))
 (let ((?x22455 (* 4.0 l_0_10_109)))
 (let ((?x22515 (* ?x22455 l_0_10_116)))
 (let ((?x22831 (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x22515) (* (* 2.0 l_0_10_11) l_0_10_7))))
 (let ((?x22839 (- (- (- (- ?x22831 ?x22520) ?x22522) (* (* 2.0 l_0_10_112) l_0_10_116)) (* (* 2.0 l_0_10_113) l_0_10_117))))
 (let ((?x22845 (- (- ?x22839 (* (* 2.0 l_0_10_114) l_0_10_118)) (* (* 2.0 l_0_10_115) l_0_10_119))))
 (let ((?x22849 (- (- ?x22845 (* (* 2.0 l_0_10_12) l_0_10_8)) (* (* 2.0 l_0_10_13) l_0_10_9))))
 (let ((?x22855 (+ (+ ?x22849 (* (* 2.0 l_0_10_88) l_0_10_91)) (* (* 2.0 l_0_10_89) l_0_10_92))))
 (= (+ ?x22855 (* (* 2.0 l_0_10_90) l_0_10_93)) 0.0)))))))))))))
(assert
 (let ((?x22910 (* 2.0 l_0_10_69)))
 (let ((?x22911 (* ?x22910 l_0_10_72)))
 (let ((?x22907 (* 2.0 l_0_10_68)))
 (let ((?x22908 (* ?x22907 l_0_10_71)))
 (let ((?x22904 (* 2.0 l_0_10_67)))
 (let ((?x22905 (* ?x22904 l_0_10_70)))
 (let ((?x22901 (* 2.0 l_0_10_48)))
 (let ((?x22902 (* ?x22901 l_0_10_51)))
 (let ((?x22898 (* 2.0 l_0_10_47)))
 (let ((?x22899 (* ?x22898 l_0_10_50)))
 (let ((?x22895 (* 2.0 l_0_10_46)))
 (let ((?x22896 (* ?x22895 l_0_10_49)))
 (let ((?x22461 (* 4.0 l_0_10_111)))
 (let ((?x22581 (* ?x22461 l_0_10_123)))
 (let ((?x22458 (* 4.0 l_0_10_110)))
 (let ((?x22579 (* ?x22458 l_0_10_122)))
 (let ((?x22455 (* 4.0 l_0_10_109)))
 (let ((?x8646 (* ?x22455 l_0_10_121)))
 (let ((?x22882 (- (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_19) ?x8646) ?x22579) ?x22581) (* (* 2.0 l_0_10_112) l_0_10_121))))
 (let ((?x22886 (- (- ?x22882 (* (* 2.0 l_0_10_113) l_0_10_122)) (* (* 2.0 l_0_10_114) l_0_10_123))))
 (let ((?x22890 (- (- ?x22886 (* (* 2.0 l_0_10_115) l_0_10_124)) (* (* 2.0 l_0_10_16) l_0_10_7))))
 (let ((?x22894 (- (- ?x22890 (* (* 2.0 l_0_10_17) l_0_10_8)) (* (* 2.0 l_0_10_18) l_0_10_9))))
 (= (+ (+ (+ (- (- (- ?x22894 ?x22896) ?x22899) ?x22902) ?x22905) ?x22908) ?x22911) 0.0))))))))))))))))))))))))
(assert
 (let ((?x22969 (* l_0_10_15 l_0_10_15)))
 (let ((?x22967 (* l_0_10_14 l_0_10_14)))
 (let ((?x22965 (* l_0_10_13 l_0_10_13)))
 (let ((?x22960 (* l_0_10_12 l_0_10_12)))
 (let ((?x22950 (- (* (- l_0_10_11) l_0_10_11) (* (* 1.0 l_0_10_116) l_0_10_116))))
 (let ((?x22956 (- (- ?x22950 (* (* 1.0 l_0_10_117) l_0_10_117)) (* (* 1.0 l_0_10_118) l_0_10_118))))
 (let ((?x22964 (- (- (- ?x22956 (* (* 1.0 l_0_10_119) l_0_10_119)) ?x22960) (* (* 1.0 l_0_10_120) l_0_10_120))))
 (let ((?x22972 (+ (- (- (- ?x22964 ?x22965) ?x22967) ?x22969) (* (* 2.0 l_0_10_88) l_0_10_95))))
 (let ((?x22976 (+ (+ ?x22972 (* (* 2.0 l_0_10_89) l_0_10_96)) (* (* 2.0 l_0_10_90) l_0_10_97))))
 (= ?x22976 0.0)))))))))))
(assert
 (let ((?x22910 (* 2.0 l_0_10_69)))
 (let ((?x23048 (* ?x22910 l_0_10_76)))
 (let ((?x22907 (* 2.0 l_0_10_68)))
 (let ((?x23046 (* ?x22907 l_0_10_75)))
 (let ((?x22904 (* 2.0 l_0_10_67)))
 (let ((?x23044 (* ?x22904 l_0_10_74)))
 (let ((?x22901 (* 2.0 l_0_10_48)))
 (let ((?x23042 (* ?x22901 l_0_10_55)))
 (let ((?x22898 (* 2.0 l_0_10_47)))
 (let ((?x23040 (* ?x22898 l_0_10_54)))
 (let ((?x22895 (* 2.0 l_0_10_46)))
 (let ((?x23038 (* ?x22895 l_0_10_53)))
 (let ((?x23007 (+ (* (* 2.0 l_0_10_100) l_0_10_88) (* (* 2.0 l_0_10_101) l_0_10_89))))
 (let ((?x23012 (- (+ ?x23007 (* (* 2.0 l_0_10_102) l_0_10_90)) (* (* 2.0 l_0_10_11) l_0_10_16))))
 (let ((?x23018 (- (- ?x23012 (* (* 2.0 l_0_10_116) l_0_10_121)) (* (* 2.0 l_0_10_117) l_0_10_122))))
 (let ((?x23024 (- (- ?x23018 (* (* 2.0 l_0_10_118) l_0_10_123)) (* (* 2.0 l_0_10_119) l_0_10_124))))
 (let ((?x23029 (- (- ?x23024 (* (* 2.0 l_0_10_12) l_0_10_17)) (* (* 2.0 l_0_10_120) l_0_10_125))))
 (let ((?x23034 (- (- ?x23029 (* (* 2.0 l_0_10_13) l_0_10_18)) (* (* 2.0 l_0_10_14) l_0_10_19))))
 (let ((?x23043 (- (- (- (- ?x23034 (* (* 2.0 l_0_10_15) l_0_10_20)) ?x23038) ?x23040) ?x23042)))
 (= (+ (+ (+ ?x23043 ?x23044) ?x23046) ?x23048) 0.0)))))))))))))))))))))
(assert
 (let ((?x22910 (* 2.0 l_0_10_69)))
 (let ((?x23121 (* ?x22910 l_0_10_81)))
 (let ((?x22907 (* 2.0 l_0_10_68)))
 (let ((?x23119 (* ?x22907 l_0_10_80)))
 (let ((?x22904 (* 2.0 l_0_10_67)))
 (let ((?x23117 (* ?x22904 l_0_10_79)))
 (let ((?x22901 (* 2.0 l_0_10_48)))
 (let ((?x23115 (* ?x22901 l_0_10_60)))
 (let ((?x22898 (* 2.0 l_0_10_47)))
 (let ((?x23113 (* ?x22898 l_0_10_59)))
 (let ((?x22895 (* 2.0 l_0_10_46)))
 (let ((?x23111 (* ?x22895 l_0_10_58)))
 (let ((?x23109 (* l_0_10_21 l_0_10_21)))
 (let ((?x23107 (* l_0_10_20 l_0_10_20)))
 (let ((?x23105 (* l_0_10_19 l_0_10_19)))
 (let ((?x23103 (* l_0_10_18 l_0_10_18)))
 (let ((?x23101 (* l_0_10_17 l_0_10_17)))
 (let ((?x23099 (* l_0_10_16 l_0_10_16)))
 (let ((?x23086 (- (* (* (- 1.0) l_0_10_121) l_0_10_121) (* (* 1.0 l_0_10_122) l_0_10_122))))
 (let ((?x23092 (- (- ?x23086 (* (* 1.0 l_0_10_123) l_0_10_123)) (* (* 1.0 l_0_10_124) l_0_10_124))))
 (let ((?x23098 (- (- ?x23092 (* (* 1.0 l_0_10_125) l_0_10_125)) (* (* 1.0 l_0_10_126) l_0_10_126))))
 (let ((?x23112 (- (- (- (- (- (- (- ?x23098 ?x23099) ?x23101) ?x23103) ?x23105) ?x23107) ?x23109) ?x23111)))
 (= (+ (+ (+ (- (- ?x23112 ?x23113) ?x23115) ?x23117) ?x23119) ?x23121) 0.0))))))))))))))))))))))))
(assert
 (let ((?x23154 (* l_0_10_22 l_0_10_22)))
 (let ((?x22181 (* l_0_10_106 l_0_10_106)))
 (let ((?x9784 (* 2.0 ?x22181)))
 (= (- (- ?x9784 (* (* 2.0 l_0_10_127) l_0_10_128)) ?x23154) 0.0)))))
(assert
 (let ((?x23171 (* l_0_10_129 l_0_10_129)))
 (let ((?x23169 (* l_0_10_128 l_0_10_128)))
 (let ((?x23174 (- (- (- (* (* 4.0 l_0_10_106) l_0_10_107) ?x23169) ?x23171) (* (* 2.0 l_0_10_22) l_0_10_23))))
 (= ?x23174 0.0)))))
(assert
 (let ((?x23186 (+ (* (* (- 4.0) l_0_10_106) l_0_10_107) (* (* 4.0 l_0_10_106) l_0_10_112))))
 (let ((?x23190 (- (- ?x23186 (* (* 2.0 l_0_10_128) l_0_10_133)) (* (* 2.0 l_0_10_129) l_0_10_134))))
 (= (- ?x23190 (* (* 2.0 l_0_10_22) l_0_10_28)) 0.0))))
(assert
 (let ((?x23209 (- (* (* 4.0 l_0_10_106) l_0_10_116) (* (* 2.0 l_0_10_128) l_0_10_137))))
 (let ((?x23213 (- (- ?x23209 (* (* 2.0 l_0_10_129) l_0_10_138)) (* (* 2.0 l_0_10_22) l_0_10_32))))
 (= (+ ?x23213 (* (* 2.0 l_0_10_85) l_0_10_86)) 0.0))))
(assert
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x23242 (* ?x22218 l_0_10_65)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x23240 (* ?x22316 l_0_10_44)))
 (let ((?x23235 (- (* (* 4.0 l_0_10_106) l_0_10_121) (* (* 2.0 l_0_10_128) l_0_10_142))))
 (let ((?x23239 (- (- ?x23235 (* (* 2.0 l_0_10_129) l_0_10_143)) (* (* 2.0 l_0_10_22) l_0_10_37))))
 (= (+ (- ?x23239 ?x23240) ?x23242) 0.0))))))))
(assert
 (let ((?x23257 (* l_0_10_24 l_0_10_24)))
 (let ((?x23255 (* l_0_10_23 l_0_10_23)))
 (let ((?x22369 (* l_0_10_108 l_0_10_108)))
 (let ((?x9929 (* 2.0 ?x22369)))
 (let ((?x22363 (* l_0_10_107 l_0_10_107)))
 (let ((?x9928 (* 2.0 ?x22363)))
 (= (- (- (+ ?x9928 ?x9929) ?x23255) ?x23257) 0.0))))))))
(assert
 (let ((?x16342 (* 4.0 l_0_10_108)))
 (let ((?x23267 (* ?x16342 l_0_10_113)))
 (let ((?x23266 (- (* (* 4.0 l_0_10_107) l_0_10_112) (* (* 2.0 l_0_10_107) l_0_10_107))))
 (let ((?x23272 (- (- (+ ?x23266 ?x23267) (* (* 2.0 l_0_10_108) l_0_10_108)) (* (* 2.0 l_0_10_23) l_0_10_28))))
 (= (- ?x23272 (* (* 2.0 l_0_10_24) l_0_10_29)) 0.0))))))
(assert
 (let ((?x23300 (* l_0_10_87 l_0_10_87)))
 (let ((?x23298 (* l_0_10_86 l_0_10_86)))
 (let ((?x16342 (* 4.0 l_0_10_108)))
 (let ((?x23292 (* ?x16342 l_0_10_117)))
 (let ((?x23295 (- (+ (* (* 4.0 l_0_10_107) l_0_10_116) ?x23292) (* (* 2.0 l_0_10_23) l_0_10_32))))
 (= (+ (+ (- ?x23295 (* (* 2.0 l_0_10_24) l_0_10_33)) ?x23298) ?x23300) 0.0)))))))
(assert
 (let ((?x23333 (* l_0_10_66 l_0_10_66)))
 (let ((?x23331 (* l_0_10_65 l_0_10_65)))
 (let ((?x23329 (* l_0_10_45 l_0_10_45)))
 (let ((?x23327 (* l_0_10_44 l_0_10_44)))
 (let ((?x16342 (* 4.0 l_0_10_108)))
 (let ((?x23321 (* ?x16342 l_0_10_122)))
 (let ((?x23324 (- (+ (* (* 4.0 l_0_10_107) l_0_10_121) ?x23321) (* (* 2.0 l_0_10_23) l_0_10_37))))
 (let ((?x23332 (+ (- (- (- ?x23324 (* (* 2.0 l_0_10_24) l_0_10_38)) ?x23327) ?x23329) ?x23331)))
 (= (+ ?x23332 ?x23333) 0.0))))))))))
(assert
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x23242 (* ?x22218 l_0_10_65)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x23240 (* ?x22316 l_0_10_44)))
 (let ((?x23359 (* l_0_10_31 l_0_10_31)))
 (let ((?x23357 (* l_0_10_30 l_0_10_30)))
 (let ((?x23355 (* l_0_10_29 l_0_10_29)))
 (let ((?x23353 (* l_0_10_28 l_0_10_28)))
 (let ((?x16342 (* 4.0 l_0_10_108)))
 (let ((?x23267 (* ?x16342 l_0_10_113)))
 (let ((?x10038 (+ (- (* (* (- 4.0) l_0_10_107) l_0_10_112) ?x23267) (* 2.0 (* l_0_10_112 l_0_10_112)))))
 (let ((?x23350 (+ (+ ?x10038 (* 2.0 (* l_0_10_113 l_0_10_113))) (* 2.0 (* l_0_10_114 l_0_10_114)))))
 (let ((?x23358 (- (- (- (+ ?x23350 (* 2.0 (* l_0_10_115 l_0_10_115))) ?x23353) ?x23355) ?x23357)))
 (= (- (+ (- ?x23358 ?x23359) ?x23240) ?x23242) 0.0)))))))))))))))
(assert
 (let ((?x23391 (* 4.0 l_0_10_115)))
 (let ((?x23392 (* ?x23391 l_0_10_119)))
 (let ((?x23388 (* 4.0 l_0_10_114)))
 (let ((?x23389 (* ?x23388 l_0_10_118)))
 (let ((?x23385 (* 4.0 l_0_10_113)))
 (let ((?x23386 (* ?x23385 l_0_10_117)))
 (let ((?x16342 (* 4.0 l_0_10_108)))
 (let ((?x23292 (* ?x16342 l_0_10_117)))
 (let ((?x23384 (+ (- (* (* (- 4.0) l_0_10_107) l_0_10_116) ?x23292) (* (* 4.0 l_0_10_112) l_0_10_116))))
 (let ((?x23396 (- (+ (+ (+ ?x23384 ?x23386) ?x23389) ?x23392) (* (* 2.0 l_0_10_28) l_0_10_32))))
 (let ((?x23402 (- (- ?x23396 (* (* 2.0 l_0_10_29) l_0_10_33)) (* (* 2.0 l_0_10_30) l_0_10_34))))
 (let ((?x23407 (+ (- ?x23402 (* (* 2.0 l_0_10_31) l_0_10_35)) (* (* 2.0 l_0_10_86) l_0_10_91))))
 (= (+ ?x23407 (* (* 2.0 l_0_10_87) l_0_10_92)) 0.0))))))))))))))
(assert
 (let ((?x22608 (* 2.0 l_0_10_66)))
 (let ((?x23451 (* ?x22608 l_0_10_71)))
 (let ((?x22605 (* 2.0 l_0_10_65)))
 (let ((?x23449 (* ?x22605 l_0_10_70)))
 (let ((?x22600 (* 2.0 l_0_10_45)))
 (let ((?x23447 (* ?x22600 l_0_10_50)))
 (let ((?x22597 (* 2.0 l_0_10_44)))
 (let ((?x23445 (* ?x22597 l_0_10_49)))
 (let ((?x23391 (* 4.0 l_0_10_115)))
 (let ((?x23435 (* ?x23391 l_0_10_124)))
 (let ((?x23388 (* 4.0 l_0_10_114)))
 (let ((?x23433 (* ?x23388 l_0_10_123)))
 (let ((?x23385 (* 4.0 l_0_10_113)))
 (let ((?x23431 (* ?x23385 l_0_10_122)))
 (let ((?x16342 (* 4.0 l_0_10_108)))
 (let ((?x23321 (* ?x16342 l_0_10_122)))
 (let ((?x23430 (+ (- (* (* (- 4.0) l_0_10_107) l_0_10_121) ?x23321) (* (* 4.0 l_0_10_112) l_0_10_121))))
 (let ((?x23438 (- (+ (+ (+ ?x23430 ?x23431) ?x23433) ?x23435) (* (* 2.0 l_0_10_28) l_0_10_37))))
 (let ((?x23442 (- (- ?x23438 (* (* 2.0 l_0_10_29) l_0_10_38)) (* (* 2.0 l_0_10_30) l_0_10_39))))
 (let ((?x23450 (+ (- (- (- ?x23442 (* (* 2.0 l_0_10_31) l_0_10_40)) ?x23445) ?x23447) ?x23449)))
 (= (+ ?x23450 ?x23451) 0.0))))))))))))))))))))))
(assert
 (let ((?x23477 (* l_0_10_36 l_0_10_36)))
 (let ((?x23475 (* l_0_10_35 l_0_10_35)))
 (let ((?x17446 (* l_0_10_34 l_0_10_34)))
 (let ((?x10374 (* l_0_10_33 l_0_10_33)))
 (let ((?x17429 (* l_0_10_32 l_0_10_32)))
 (let ((?x17441 (+ (* 2.0 (* l_0_10_116 l_0_10_116)) (* 2.0 (* l_0_10_117 l_0_10_117)))))
 (let ((?x17438 (+ (+ ?x17441 (* 2.0 (* l_0_10_118 l_0_10_118))) (* 2.0 (* l_0_10_119 l_0_10_119)))))
 (let ((?x23474 (- (- (- (+ ?x17438 (* 2.0 (* l_0_10_120 l_0_10_120))) ?x17429) ?x10374) ?x17446)))
 (let ((?x23482 (+ (+ (- (- ?x23474 ?x23475) ?x23477) (* (* 2.0 l_0_10_86) l_0_10_95)) (* (* 2.0 l_0_10_87) l_0_10_96))))
 (= ?x23482 0.0)))))))))))
(assert
 (let ((?x22608 (* 2.0 l_0_10_66)))
 (let ((?x23536 (* ?x22608 l_0_10_75)))
 (let ((?x22605 (* 2.0 l_0_10_65)))
 (let ((?x23534 (* ?x22605 l_0_10_74)))
 (let ((?x22600 (* 2.0 l_0_10_45)))
 (let ((?x23532 (* ?x22600 l_0_10_54)))
 (let ((?x22597 (* 2.0 l_0_10_44)))
 (let ((?x23530 (* ?x22597 l_0_10_53)))
 (let ((?x23513 (* (* 4.0 l_0_10_120) l_0_10_125)))
 (let ((?x23510 (* (* 4.0 l_0_10_119) l_0_10_124)))
 (let ((?x23507 (* (* 4.0 l_0_10_118) l_0_10_123)))
 (let ((?x23504 (* (* 4.0 l_0_10_117) l_0_10_122)))
 (let ((?x23501 (* (* 4.0 l_0_10_116) l_0_10_121)))
 (let ((?x23490 (+ (* (* 2.0 l_0_10_100) l_0_10_86) (* (* 2.0 l_0_10_101) l_0_10_87))))
 (let ((?x23517 (- (+ (+ (+ (+ (+ ?x23490 ?x23501) ?x23504) ?x23507) ?x23510) ?x23513) (* (* 2.0 l_0_10_32) l_0_10_37))))
 (let ((?x23523 (- (- ?x23517 (* (* 2.0 l_0_10_33) l_0_10_38)) (* (* 2.0 l_0_10_34) l_0_10_39))))
 (let ((?x23529 (- (- ?x23523 (* (* 2.0 l_0_10_35) l_0_10_40)) (* (* 2.0 l_0_10_36) l_0_10_41))))
 (= (+ (+ (- (- ?x23529 ?x23530) ?x23532) ?x23534) ?x23536) 0.0)))))))))))))))))))
(assert
 (let ((?x22608 (* 2.0 l_0_10_66)))
 (let ((?x23592 (* ?x22608 l_0_10_80)))
 (let ((?x22605 (* 2.0 l_0_10_65)))
 (let ((?x23590 (* ?x22605 l_0_10_79)))
 (let ((?x22600 (* 2.0 l_0_10_45)))
 (let ((?x23588 (* ?x22600 l_0_10_59)))
 (let ((?x22597 (* 2.0 l_0_10_44)))
 (let ((?x23586 (* ?x22597 l_0_10_58)))
 (let ((?x23584 (* l_0_10_42 l_0_10_42)))
 (let ((?x23582 (* l_0_10_41 l_0_10_41)))
 (let ((?x23580 (* l_0_10_40 l_0_10_40)))
 (let ((?x23578 (* l_0_10_39 l_0_10_39)))
 (let ((?x23576 (* l_0_10_38 l_0_10_38)))
 (let ((?x23574 (* l_0_10_37 l_0_10_37)))
 (let ((?x9685 (* l_0_10_126 l_0_10_126)))
 (let ((?x23572 (* 2.0 ?x9685)))
 (let ((?x9680 (* l_0_10_125 l_0_10_125)))
 (let ((?x23570 (* 2.0 ?x9680)))
 (let ((?x23133 (* l_0_10_124 l_0_10_124)))
 (let ((?x23568 (* 2.0 ?x23133)))
 (let ((?x23129 (* l_0_10_123 l_0_10_123)))
 (let ((?x23566 (* 2.0 ?x23129)))
 (let ((?x23126 (* l_0_10_122 l_0_10_122)))
 (let ((?x10516 (* 2.0 ?x23126)))
 (let ((?x23124 (* l_0_10_121 l_0_10_121)))
 (let ((?x10522 (* 2.0 ?x23124)))
 (let ((?x23577 (- (- (+ (+ (+ (+ (+ ?x10522 ?x10516) ?x23566) ?x23568) ?x23570) ?x23572) ?x23574) ?x23576)))
 (let ((?x23591 (+ (- (- (- (- (- (- ?x23577 ?x23578) ?x23580) ?x23582) ?x23584) ?x23586) ?x23588) ?x23590)))
 (= (+ ?x23591 ?x23592) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x8041 (* l_0_10_64 l_0_10_64)))
 (let ((?x22215 (* l_0_10_43 l_0_10_43)))
 (= (+ (- (* (* (- 2.0) l_0_10_127) l_0_10_142) ?x22215) ?x8041) 0.0))))
(assert
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x23631 (* ?x22218 l_0_10_70)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x23629 (* ?x22316 l_0_10_49)))
 (let ((?x23619 (- (* (* (- 4.0) l_0_10_106) l_0_10_121) (* (* 2.0 l_0_10_133) l_0_10_142))))
 (let ((?x23625 (- (- ?x23619 (* (* 2.0 l_0_10_134) l_0_10_143)) (* (* 2.0 l_0_10_135) l_0_10_144))))
 (= (+ (- (- ?x23625 (* (* 2.0 l_0_10_136) l_0_10_145)) ?x23629) ?x23631) 0.0))))))))
(assert
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x23664 (* ?x22218 l_0_10_74)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x23662 (* ?x22316 l_0_10_53)))
 (let ((?x23649 (- (* (* 2.0 l_0_10_100) l_0_10_85) (* (* 2.0 l_0_10_137) l_0_10_142))))
 (let ((?x23655 (- (- ?x23649 (* (* 2.0 l_0_10_138) l_0_10_143)) (* (* 2.0 l_0_10_139) l_0_10_144))))
 (let ((?x23661 (- (- ?x23655 (* (* 2.0 l_0_10_140) l_0_10_145)) (* (* 2.0 l_0_10_141) l_0_10_146))))
 (= (+ (- ?x23661 ?x23662) ?x23664) 0.0)))))))))
(assert
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x23707 (* ?x22218 l_0_10_79)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x23705 (* ?x22316 l_0_10_58)))
 (let ((?x23703 (* l_0_10_147 l_0_10_147)))
 (let ((?x23701 (* l_0_10_146 l_0_10_146)))
 (let ((?x23699 (* l_0_10_145 l_0_10_145)))
 (let ((?x23697 (* l_0_10_144 l_0_10_144)))
 (let ((?x23698 (- (- (* (- l_0_10_142) l_0_10_142) (* l_0_10_143 l_0_10_143)) ?x23697)))
 (= (+ (- (- (- (- ?x23698 ?x23699) ?x23701) ?x23703) ?x23705) ?x23707) 0.0)))))))))))
(assert
 (let ((?x23747 (* l_0_10_73 l_0_10_73)))
 (let ((?x23745 (* l_0_10_72 l_0_10_72)))
 (let ((?x23743 (* l_0_10_71 l_0_10_71)))
 (let ((?x23741 (* l_0_10_70 l_0_10_70)))
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x23707 (* ?x22218 l_0_10_79)))
 (let ((?x23738 (* l_0_10_52 l_0_10_52)))
 (let ((?x23736 (* l_0_10_51 l_0_10_51)))
 (let ((?x23734 (* l_0_10_50 l_0_10_50)))
 (let ((?x23732 (* l_0_10_49 l_0_10_49)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x23705 (* ?x22316 l_0_10_58)))
 (let ((?x23391 (* 4.0 l_0_10_115)))
 (let ((?x23435 (* ?x23391 l_0_10_124)))
 (let ((?x23388 (* 4.0 l_0_10_114)))
 (let ((?x23433 (* ?x23388 l_0_10_123)))
 (let ((?x23385 (* 4.0 l_0_10_113)))
 (let ((?x23431 (* ?x23385 l_0_10_122)))
 (let ((?x23731 (+ (- (- (- (* (* (- 4.0) l_0_10_112) l_0_10_121) ?x23431) ?x23433) ?x23435) ?x23705)))
 (let ((?x23744 (+ (+ (- (- (- (- (- ?x23731 ?x23732) ?x23734) ?x23736) ?x23738) ?x23707) ?x23741) ?x23743)))
 (= (+ (+ ?x23744 ?x23745) ?x23747) 0.0))))))))))))))))))))))
(assert
 (let ((?x23808 (* 2.0 l_0_10_73)))
 (let ((?x23809 (* ?x23808 l_0_10_77)))
 (let ((?x23805 (* 2.0 l_0_10_72)))
 (let ((?x23806 (* ?x23805 l_0_10_76)))
 (let ((?x23802 (* 2.0 l_0_10_71)))
 (let ((?x23803 (* ?x23802 l_0_10_75)))
 (let ((?x23799 (* 2.0 l_0_10_70)))
 (let ((?x23800 (* ?x23799 l_0_10_74)))
 (let ((?x23796 (* 2.0 l_0_10_52)))
 (let ((?x23797 (* ?x23796 l_0_10_56)))
 (let ((?x23793 (* 2.0 l_0_10_51)))
 (let ((?x23794 (* ?x23793 l_0_10_55)))
 (let ((?x23790 (* 2.0 l_0_10_50)))
 (let ((?x23791 (* ?x23790 l_0_10_54)))
 (let ((?x23787 (* 2.0 l_0_10_49)))
 (let ((?x23788 (* ?x23787 l_0_10_53)))
 (let ((?x23513 (* (* 4.0 l_0_10_120) l_0_10_125)))
 (let ((?x23510 (* (* 4.0 l_0_10_119) l_0_10_124)))
 (let ((?x23507 (* (* 4.0 l_0_10_118) l_0_10_123)))
 (let ((?x23504 (* (* 4.0 l_0_10_117) l_0_10_122)))
 (let ((?x23501 (* (* 4.0 l_0_10_116) l_0_10_121)))
 (let ((?x23776 (+ (* (* 2.0 l_0_10_100) l_0_10_91) (* (* 2.0 l_0_10_101) l_0_10_92))))
 (let ((?x23781 (+ (+ ?x23776 (* (* 2.0 l_0_10_102) l_0_10_93)) (* (* 2.0 l_0_10_103) l_0_10_94))))
 (let ((?x23792 (- (- (- (- (- (- (- ?x23781 ?x23501) ?x23504) ?x23507) ?x23510) ?x23513) ?x23788) ?x23791)))
 (= (+ (+ (+ (+ (- (- ?x23792 ?x23794) ?x23797) ?x23800) ?x23803) ?x23806) ?x23809) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x23808 (* 2.0 l_0_10_73)))
 (let ((?x23864 (* ?x23808 l_0_10_82)))
 (let ((?x23805 (* 2.0 l_0_10_72)))
 (let ((?x23862 (* ?x23805 l_0_10_81)))
 (let ((?x23802 (* 2.0 l_0_10_71)))
 (let ((?x23860 (* ?x23802 l_0_10_80)))
 (let ((?x23799 (* 2.0 l_0_10_70)))
 (let ((?x23858 (* ?x23799 l_0_10_79)))
 (let ((?x23796 (* 2.0 l_0_10_52)))
 (let ((?x23856 (* ?x23796 l_0_10_61)))
 (let ((?x23793 (* 2.0 l_0_10_51)))
 (let ((?x23854 (* ?x23793 l_0_10_60)))
 (let ((?x23790 (* 2.0 l_0_10_50)))
 (let ((?x23852 (* ?x23790 l_0_10_59)))
 (let ((?x23787 (* 2.0 l_0_10_49)))
 (let ((?x23850 (* ?x23787 l_0_10_58)))
 (let ((?x10824 (- (* (* (- 2.0) l_0_10_121) l_0_10_121) (* (* 2.0 l_0_10_122) l_0_10_122))))
 (let ((?x23843 (- (- ?x10824 (* (* 2.0 l_0_10_123) l_0_10_123)) (* (* 2.0 l_0_10_124) l_0_10_124))))
 (let ((?x23849 (- (- ?x23843 (* (* 2.0 l_0_10_125) l_0_10_125)) (* (* 2.0 l_0_10_126) l_0_10_126))))
 (let ((?x23863 (+ (+ (+ (- (- (- (- ?x23849 ?x23850) ?x23852) ?x23854) ?x23856) ?x23858) ?x23860) ?x23862)))
 (= (+ ?x23863 ?x23864) 0.0))))))))))))))))))))))
(assert
 (let ((?x23905 (* l_0_10_78 l_0_10_78)))
 (let ((?x23903 (* l_0_10_77 l_0_10_77)))
 (let ((?x23901 (* l_0_10_76 l_0_10_76)))
 (let ((?x23899 (* l_0_10_75 l_0_10_75)))
 (let ((?x23897 (* l_0_10_74 l_0_10_74)))
 (let ((?x23895 (* l_0_10_57 l_0_10_57)))
 (let ((?x23893 (* l_0_10_56 l_0_10_56)))
 (let ((?x23891 (* l_0_10_55 l_0_10_55)))
 (let ((?x23889 (* l_0_10_54 l_0_10_54)))
 (let ((?x23887 (* l_0_10_53 l_0_10_53)))
 (let ((?x17721 (+ (* (* 2.0 l_0_10_100) l_0_10_95) (* (* 2.0 l_0_10_101) l_0_10_96))))
 (let ((?x17731 (+ (+ ?x17721 (* (* 2.0 l_0_10_102) l_0_10_97)) (* (* 2.0 l_0_10_103) l_0_10_98))))
 (let ((?x23892 (- (- (- (+ ?x17731 (* (* 2.0 l_0_10_104) l_0_10_99)) ?x23887) ?x23889) ?x23891)))
 (let ((?x23906 (+ (+ (+ (+ (+ (- (- ?x23892 ?x23893) ?x23895) ?x23897) ?x23899) ?x23901) ?x23903) ?x23905)))
 (= ?x23906 0.0))))))))))))))))
(assert
 (let ((?x23979 (* 2.0 l_0_10_78)))
 (let ((?x23980 (* ?x23979 l_0_10_83)))
 (let ((?x23976 (* 2.0 l_0_10_77)))
 (let ((?x23977 (* ?x23976 l_0_10_82)))
 (let ((?x23973 (* 2.0 l_0_10_76)))
 (let ((?x23974 (* ?x23973 l_0_10_81)))
 (let ((?x23970 (* 2.0 l_0_10_75)))
 (let ((?x23971 (* ?x23970 l_0_10_80)))
 (let ((?x23967 (* 2.0 l_0_10_74)))
 (let ((?x23968 (* ?x23967 l_0_10_79)))
 (let ((?x23965 (* (* 2.0 l_0_10_57) l_0_10_62)))
 (let ((?x23962 (* (* 2.0 l_0_10_56) l_0_10_61)))
 (let ((?x23959 (* (* 2.0 l_0_10_55) l_0_10_60)))
 (let ((?x23956 (* (* 2.0 l_0_10_54) l_0_10_59)))
 (let ((?x23953 (* (* 2.0 l_0_10_53) l_0_10_58)))
 (let ((?x23950 (* l_0_10_105 l_0_10_105)))
 (let ((?x23948 (* l_0_10_104 l_0_10_104)))
 (let ((?x23946 (* l_0_10_103 l_0_10_103)))
 (let ((?x23944 (* l_0_10_102 l_0_10_102)))
 (let ((?x23945 (+ (+ (* l_0_10_100 l_0_10_100) (* l_0_10_101 l_0_10_101)) ?x23944)))
 (let ((?x23963 (- (- (- (- (+ (+ (+ ?x23945 ?x23946) ?x23948) ?x23950) ?x23953) ?x23956) ?x23959) ?x23962)))
 (= (+ (+ (+ (+ (+ (- ?x23963 ?x23965) ?x23968) ?x23971) ?x23974) ?x23977) ?x23980) 0.0)))))))))))))))))))))))
(assert
 (let ((?x24041 (* l_0_10_84 l_0_10_84)))
 (let ((?x24039 (* l_0_10_83 l_0_10_83)))
 (let ((?x24037 (* l_0_10_82 l_0_10_82)))
 (let ((?x24035 (* l_0_10_81 l_0_10_81)))
 (let ((?x24033 (* l_0_10_80 l_0_10_80)))
 (let ((?x24031 (* l_0_10_79 l_0_10_79)))
 (let ((?x24029 (* l_0_10_63 l_0_10_63)))
 (let ((?x24027 (* l_0_10_62 l_0_10_62)))
 (let ((?x24025 (* l_0_10_61 l_0_10_61)))
 (let ((?x24010 (* l_0_10_60 l_0_10_60)))
 (let ((?x24011 (- (- (* (- l_0_10_58) l_0_10_58) (* l_0_10_59 l_0_10_59)) ?x24010)))
 (let ((?x24038 (+ (+ (+ (+ (- (- (- ?x24011 ?x24025) ?x24027) ?x24029) ?x24031) ?x24033) ?x24035) ?x24037)))
 (= (+ (+ ?x24038 ?x24039) ?x24041) 0.0))))))))))))))
(assert
 (let ((?x8041 (* l_0_10_64 l_0_10_64)))
 (let ((?x22215 (* l_0_10_43 l_0_10_43)))
 (let ((?x24071 (* l_0_10_136 l_0_10_136)))
 (let ((?x24069 (* l_0_10_135 l_0_10_135)))
 (let ((?x24067 (* l_0_10_134 l_0_10_134)))
 (let ((?x24065 (* l_0_10_133 l_0_10_133)))
 (let ((?x24072 (- (- (- (- (* (* (- 4.0) l_0_10_106) l_0_10_112) ?x24065) ?x24067) ?x24069) ?x24071)))
 (= (- (+ ?x24072 ?x22215) ?x8041) 0.0)))))))))
(assert
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x23631 (* ?x22218 l_0_10_70)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x23629 (* ?x22316 l_0_10_49)))
 (let ((?x24094 (- (* (* (- 2.0) l_0_10_112) l_0_10_112) (* (* 2.0 l_0_10_113) l_0_10_113))))
 (let ((?x24098 (- (- ?x24094 (* (* 2.0 l_0_10_114) l_0_10_114)) (* (* 2.0 l_0_10_115) l_0_10_115))))
 (= (- (+ ?x24098 ?x23629) ?x23631) 0.0))))))))
(assert
 (let ((?x24121 (* l_0_10_94 l_0_10_94)))
 (let ((?x24119 (* l_0_10_93 l_0_10_93)))
 (let ((?x24117 (* l_0_10_92 l_0_10_92)))
 (let ((?x24115 (* l_0_10_91 l_0_10_91)))
 (let ((?x22218 (* 2.0 l_0_10_64)))
 (let ((?x23664 (* ?x22218 l_0_10_74)))
 (let ((?x22316 (* 2.0 l_0_10_43)))
 (let ((?x23662 (* ?x22316 l_0_10_53)))
 (let ((?x23391 (* 4.0 l_0_10_115)))
 (let ((?x23392 (* ?x23391 l_0_10_119)))
 (let ((?x23388 (* 4.0 l_0_10_114)))
 (let ((?x23389 (* ?x23388 l_0_10_118)))
 (let ((?x23385 (* 4.0 l_0_10_113)))
 (let ((?x23386 (* ?x23385 l_0_10_117)))
 (let ((?x24113 (+ (- (- (- (* (* (- 4.0) l_0_10_112) l_0_10_116) ?x23386) ?x23389) ?x23392) ?x23662)))
 (= (+ (+ (+ (+ (- ?x24113 ?x23664) ?x24115) ?x24117) ?x24119) ?x24121) 0.0)))))))))))))))))
(assert
 (let ((?x23333 (* l_0_10_66 l_0_10_66)))
 (let ((?x23331 (* l_0_10_65 l_0_10_65)))
 (let ((?x17905 (- (- (+ (* l_0_10_44 l_0_10_44) (* l_0_10_45 l_0_10_45)) ?x23331) ?x23333)))
 (= ?x17905 0.0)))))
(assert
 (let ((?x22608 (* 2.0 l_0_10_66)))
 (let ((?x22609 (* ?x22608 l_0_10_68)))
 (let ((?x22605 (* 2.0 l_0_10_65)))
 (let ((?x22606 (* ?x22605 l_0_10_67)))
 (let ((?x22600 (* 2.0 l_0_10_45)))
 (let ((?x22601 (* ?x22600 l_0_10_47)))
 (let ((?x22597 (* 2.0 l_0_10_44)))
 (let ((?x22598 (* ?x22597 l_0_10_46)))
 (let ((?x24124 (+ (+ (+ ?x22598 ?x22601) (* 2.0 (* l_0_10_49 l_0_10_49))) (* 2.0 (* l_0_10_50 l_0_10_50)))))
 (let ((?x24128 (+ (+ ?x24124 (* 2.0 (* l_0_10_51 l_0_10_51))) (* 2.0 (* l_0_10_52 l_0_10_52)))))
 (let ((?x24134 (- (- (- (- ?x24128 ?x22606) ?x22609) (* (* 2.0 l_0_10_70) l_0_10_70)) (* (* 2.0 l_0_10_71) l_0_10_71))))
 (let ((?x24138 (- (- ?x24134 (* (* 2.0 l_0_10_72) l_0_10_72)) (* (* 2.0 l_0_10_73) l_0_10_73))))
 (let ((?x24144 (- (- ?x24138 (* (* 2.0 l_0_10_91) l_0_10_91)) (* (* 2.0 l_0_10_92) l_0_10_92))))
 (let ((?x24150 (- (- ?x24144 (* (* 2.0 l_0_10_93) l_0_10_93)) (* (* 2.0 l_0_10_94) l_0_10_94))))
 (= ?x24150 0.0))))))))))))))))
(assert
 (let ((?x22608 (* 2.0 l_0_10_66)))
 (let ((?x23451 (* ?x22608 l_0_10_71)))
 (let ((?x22605 (* 2.0 l_0_10_65)))
 (let ((?x23449 (* ?x22605 l_0_10_70)))
 (let ((?x22600 (* 2.0 l_0_10_45)))
 (let ((?x23447 (* ?x22600 l_0_10_50)))
 (let ((?x22597 (* 2.0 l_0_10_44)))
 (let ((?x23445 (* ?x22597 l_0_10_49)))
 (= (- (- (+ ?x23445 ?x23447) ?x23449) ?x23451) 0.0))))))))))
(assert
 (let ((?x22608 (* 2.0 l_0_10_66)))
 (let ((?x23536 (* ?x22608 l_0_10_75)))
 (let ((?x22605 (* 2.0 l_0_10_65)))
 (let ((?x23534 (* ?x22605 l_0_10_74)))
 (let ((?x22600 (* 2.0 l_0_10_45)))
 (let ((?x23532 (* ?x22600 l_0_10_54)))
 (let ((?x22597 (* 2.0 l_0_10_44)))
 (let ((?x23530 (* ?x22597 l_0_10_53)))
 (= (- (- (+ ?x23530 ?x23532) ?x23534) ?x23536) 0.0))))))))))
(assert
 (let ((?x22608 (* 2.0 l_0_10_66)))
 (let ((?x23592 (* ?x22608 l_0_10_80)))
 (let ((?x22605 (* 2.0 l_0_10_65)))
 (let ((?x23590 (* ?x22605 l_0_10_79)))
 (let ((?x22600 (* 2.0 l_0_10_45)))
 (let ((?x23588 (* ?x22600 l_0_10_59)))
 (let ((?x22597 (* 2.0 l_0_10_44)))
 (let ((?x23586 (* ?x22597 l_0_10_58)))
 (= (- (- (+ ?x23586 ?x23588) ?x23590) ?x23592) 0.0))))))))))
(assert
 (let ((?x22770 (* l_0_10_69 l_0_10_69)))
 (let ((?x22768 (* l_0_10_68 l_0_10_68)))
 (let ((?x22766 (* l_0_10_67 l_0_10_67)))
 (let ((?x22764 (* l_0_10_48 l_0_10_48)))
 (let ((?x24177 (- (+ (+ (* l_0_10_46 l_0_10_46) (* l_0_10_47 l_0_10_47)) ?x22764) ?x22766)))
 (= (- (- ?x24177 ?x22768) ?x22770) 0.0)))))))
(assert
 (let ((?x22910 (* 2.0 l_0_10_69)))
 (let ((?x22911 (* ?x22910 l_0_10_72)))
 (let ((?x22907 (* 2.0 l_0_10_68)))
 (let ((?x22908 (* ?x22907 l_0_10_71)))
 (let ((?x22904 (* 2.0 l_0_10_67)))
 (let ((?x22905 (* ?x22904 l_0_10_70)))
 (let ((?x22901 (* 2.0 l_0_10_48)))
 (let ((?x22902 (* ?x22901 l_0_10_51)))
 (let ((?x22898 (* 2.0 l_0_10_47)))
 (let ((?x22899 (* ?x22898 l_0_10_50)))
 (let ((?x22895 (* 2.0 l_0_10_46)))
 (let ((?x22896 (* ?x22895 l_0_10_49)))
 (= (- (- (- (+ (+ ?x22896 ?x22899) ?x22902) ?x22905) ?x22908) ?x22911) 0.0))))))))))))))
(assert
 (let ((?x22910 (* 2.0 l_0_10_69)))
 (let ((?x23048 (* ?x22910 l_0_10_76)))
 (let ((?x22907 (* 2.0 l_0_10_68)))
 (let ((?x23046 (* ?x22907 l_0_10_75)))
 (let ((?x22904 (* 2.0 l_0_10_67)))
 (let ((?x23044 (* ?x22904 l_0_10_74)))
 (let ((?x22901 (* 2.0 l_0_10_48)))
 (let ((?x23042 (* ?x22901 l_0_10_55)))
 (let ((?x22898 (* 2.0 l_0_10_47)))
 (let ((?x23040 (* ?x22898 l_0_10_54)))
 (let ((?x22895 (* 2.0 l_0_10_46)))
 (let ((?x23038 (* ?x22895 l_0_10_53)))
 (= (- (- (- (+ (+ ?x23038 ?x23040) ?x23042) ?x23044) ?x23046) ?x23048) 0.0))))))))))))))
(assert
 (let ((?x22910 (* 2.0 l_0_10_69)))
 (let ((?x23121 (* ?x22910 l_0_10_81)))
 (let ((?x22907 (* 2.0 l_0_10_68)))
 (let ((?x23119 (* ?x22907 l_0_10_80)))
 (let ((?x22904 (* 2.0 l_0_10_67)))
 (let ((?x23117 (* ?x22904 l_0_10_79)))
 (let ((?x22901 (* 2.0 l_0_10_48)))
 (let ((?x23115 (* ?x22901 l_0_10_60)))
 (let ((?x22898 (* 2.0 l_0_10_47)))
 (let ((?x23113 (* ?x22898 l_0_10_59)))
 (let ((?x22895 (* 2.0 l_0_10_46)))
 (let ((?x23111 (* ?x22895 l_0_10_58)))
 (= (- (- (- (+ (+ ?x23111 ?x23113) ?x23115) ?x23117) ?x23119) ?x23121) 0.0))))))))))))))
(assert
 (let ((?x23747 (* l_0_10_73 l_0_10_73)))
 (let ((?x23745 (* l_0_10_72 l_0_10_72)))
 (let ((?x23743 (* l_0_10_71 l_0_10_71)))
 (let ((?x23741 (* l_0_10_70 l_0_10_70)))
 (let ((?x23738 (* l_0_10_52 l_0_10_52)))
 (let ((?x23736 (* l_0_10_51 l_0_10_51)))
 (let ((?x24196 (+ (+ (+ (* l_0_10_49 l_0_10_49) (* l_0_10_50 l_0_10_50)) ?x23736) ?x23738)))
 (= (- (- (- (- ?x24196 ?x23741) ?x23743) ?x23745) ?x23747) 0.0)))))))))
(assert
 (let ((?x23808 (* 2.0 l_0_10_73)))
 (let ((?x23809 (* ?x23808 l_0_10_77)))
 (let ((?x23805 (* 2.0 l_0_10_72)))
 (let ((?x23806 (* ?x23805 l_0_10_76)))
 (let ((?x23802 (* 2.0 l_0_10_71)))
 (let ((?x23803 (* ?x23802 l_0_10_75)))
 (let ((?x23799 (* 2.0 l_0_10_70)))
 (let ((?x23800 (* ?x23799 l_0_10_74)))
 (let ((?x23796 (* 2.0 l_0_10_52)))
 (let ((?x23797 (* ?x23796 l_0_10_56)))
 (let ((?x23793 (* 2.0 l_0_10_51)))
 (let ((?x23794 (* ?x23793 l_0_10_55)))
 (let ((?x23790 (* 2.0 l_0_10_50)))
 (let ((?x23791 (* ?x23790 l_0_10_54)))
 (let ((?x23787 (* 2.0 l_0_10_49)))
 (let ((?x23788 (* ?x23787 l_0_10_53)))
 (let ((?x24213 (- (- (- (- (+ (+ (+ ?x23788 ?x23791) ?x23794) ?x23797) ?x23800) ?x23803) ?x23806) ?x23809)))
 (= ?x24213 0.0)))))))))))))))))))
(assert
 (let ((?x23808 (* 2.0 l_0_10_73)))
 (let ((?x23864 (* ?x23808 l_0_10_82)))
 (let ((?x23805 (* 2.0 l_0_10_72)))
 (let ((?x23862 (* ?x23805 l_0_10_81)))
 (let ((?x23802 (* 2.0 l_0_10_71)))
 (let ((?x23860 (* ?x23802 l_0_10_80)))
 (let ((?x23799 (* 2.0 l_0_10_70)))
 (let ((?x23858 (* ?x23799 l_0_10_79)))
 (let ((?x23796 (* 2.0 l_0_10_52)))
 (let ((?x23856 (* ?x23796 l_0_10_61)))
 (let ((?x23793 (* 2.0 l_0_10_51)))
 (let ((?x23854 (* ?x23793 l_0_10_60)))
 (let ((?x23790 (* 2.0 l_0_10_50)))
 (let ((?x23852 (* ?x23790 l_0_10_59)))
 (let ((?x23787 (* 2.0 l_0_10_49)))
 (let ((?x23850 (* ?x23787 l_0_10_58)))
 (let ((?x24228 (- (- (- (- (+ (+ (+ ?x23850 ?x23852) ?x23854) ?x23856) ?x23858) ?x23860) ?x23862) ?x23864)))
 (= ?x24228 0.0)))))))))))))))))))
(assert
 (let ((?x23905 (* l_0_10_78 l_0_10_78)))
 (let ((?x23903 (* l_0_10_77 l_0_10_77)))
 (let ((?x23901 (* l_0_10_76 l_0_10_76)))
 (let ((?x23899 (* l_0_10_75 l_0_10_75)))
 (let ((?x23897 (* l_0_10_74 l_0_10_74)))
 (let ((?x23895 (* l_0_10_57 l_0_10_57)))
 (let ((?x23893 (* l_0_10_56 l_0_10_56)))
 (let ((?x23891 (* l_0_10_55 l_0_10_55)))
 (let ((?x24236 (+ (+ (+ (* l_0_10_53 l_0_10_53) (* l_0_10_54 l_0_10_54)) ?x23891) ?x23893)))
 (= (- (- (- (- (- (+ ?x24236 ?x23895) ?x23897) ?x23899) ?x23901) ?x23903) ?x23905) 0.0)))))))))))
(assert
 (let ((?x23979 (* 2.0 l_0_10_78)))
 (let ((?x23980 (* ?x23979 l_0_10_83)))
 (let ((?x23976 (* 2.0 l_0_10_77)))
 (let ((?x23977 (* ?x23976 l_0_10_82)))
 (let ((?x23973 (* 2.0 l_0_10_76)))
 (let ((?x23974 (* ?x23973 l_0_10_81)))
 (let ((?x23970 (* 2.0 l_0_10_75)))
 (let ((?x23971 (* ?x23970 l_0_10_80)))
 (let ((?x23967 (* 2.0 l_0_10_74)))
 (let ((?x23968 (* ?x23967 l_0_10_79)))
 (let ((?x23965 (* (* 2.0 l_0_10_57) l_0_10_62)))
 (let ((?x23962 (* (* 2.0 l_0_10_56) l_0_10_61)))
 (let ((?x23959 (* (* 2.0 l_0_10_55) l_0_10_60)))
 (let ((?x23956 (* (* 2.0 l_0_10_54) l_0_10_59)))
 (let ((?x23953 (* (* 2.0 l_0_10_53) l_0_10_58)))
 (let ((?x24246 (- (- (- (+ (+ (+ (+ ?x23953 ?x23956) ?x23959) ?x23962) ?x23965) ?x23968) ?x23971) ?x23974)))
 (= (- (- ?x24246 ?x23977) ?x23980) 0.0))))))))))))))))))
(assert
 (let ((?x24041 (* l_0_10_84 l_0_10_84)))
 (let ((?x24039 (* l_0_10_83 l_0_10_83)))
 (let ((?x24037 (* l_0_10_82 l_0_10_82)))
 (let ((?x24035 (* l_0_10_81 l_0_10_81)))
 (let ((?x24033 (* l_0_10_80 l_0_10_80)))
 (let ((?x24031 (* l_0_10_79 l_0_10_79)))
 (let ((?x24029 (* l_0_10_63 l_0_10_63)))
 (let ((?x24027 (* l_0_10_62 l_0_10_62)))
 (let ((?x24025 (* l_0_10_61 l_0_10_61)))
 (let ((?x24010 (* l_0_10_60 l_0_10_60)))
 (let ((?x24252 (+ (+ (+ (* l_0_10_58 l_0_10_58) (* l_0_10_59 l_0_10_59)) ?x24010) ?x24025)))
 (let ((?x24259 (- (- (- (- (- (+ (+ ?x24252 ?x24027) ?x24029) ?x24031) ?x24033) ?x24035) ?x24037) ?x24039)))
 (= (- ?x24259 ?x24041) 0.0))))))))))))))
(assert
 (let ((?x12028 (+ (* 2.0 (* l_0_10_44 l_0_10_44)) (* 2.0 (* l_0_10_45 l_0_10_45)))))
 (let ((?x18143 (- (- ?x12028 (* (* 2.0 l_0_10_65) l_0_10_65)) (* (* 2.0 l_0_10_66) l_0_10_66))))
 (let ((?x12017 (- (- ?x18143 (* (* 2.0 l_0_10_86) l_0_10_86)) (* (* 2.0 l_0_10_87) l_0_10_87))))
 (= ?x12017 0.0)))))
(assert
 (let ((?x24268 (+ (* (* 4.0 l_0_10_44) l_0_10_46) (* (* 4.0 l_0_10_45) l_0_10_47))))
 (let ((?x24274 (- (- ?x24268 (* (* 4.0 l_0_10_65) l_0_10_67)) (* (* 4.0 l_0_10_66) l_0_10_68))))
 (let ((?x24280 (- (- ?x24274 (* (* 4.0 l_0_10_86) l_0_10_88)) (* (* 4.0 l_0_10_87) l_0_10_89))))
 (= ?x24280 0.0)))))
(assert
 (let ((?x18205 (+ (* (* 4.0 l_0_10_44) l_0_10_49) (* (* 4.0 l_0_10_45) l_0_10_50))))
 (let ((?x12069 (- (- ?x18205 (* (* 4.0 l_0_10_65) l_0_10_70)) (* (* 4.0 l_0_10_66) l_0_10_71))))
 (let ((?x24301 (- (- ?x12069 (* (* 4.0 l_0_10_86) l_0_10_91)) (* (* 4.0 l_0_10_87) l_0_10_92))))
 (= ?x24301 0.0)))))
(assert
 (let ((?x12085 (+ (* (* 4.0 l_0_10_44) l_0_10_53) (* (* 4.0 l_0_10_45) l_0_10_54))))
 (let ((?x24313 (- (- ?x12085 (* (* 4.0 l_0_10_65) l_0_10_74)) (* (* 4.0 l_0_10_66) l_0_10_75))))
 (let ((?x24317 (- (- ?x24313 (* (* 4.0 l_0_10_86) l_0_10_95)) (* (* 4.0 l_0_10_87) l_0_10_96))))
 (= ?x24317 0.0)))))
(assert
 (let ((?x24343 (- (* (* (- 4.0) l_0_10_100) l_0_10_86) (* (* 4.0 l_0_10_101) l_0_10_87))))
 (let ((?x24347 (+ (+ ?x24343 (* (* 4.0 l_0_10_44) l_0_10_58)) (* (* 4.0 l_0_10_45) l_0_10_59))))
 (let ((?x24351 (- (- ?x24347 (* (* 4.0 l_0_10_65) l_0_10_79)) (* (* 4.0 l_0_10_66) l_0_10_80))))
 (= ?x24351 0.0)))))
(assert
 (let ((?x24372 (+ (* 2.0 (* l_0_10_46 l_0_10_46)) (* 2.0 (* l_0_10_47 l_0_10_47)))))
 (let ((?x24376 (- (+ ?x24372 (* 2.0 (* l_0_10_48 l_0_10_48))) (* (* 2.0 l_0_10_67) l_0_10_67))))
 (let ((?x24380 (- (- ?x24376 (* (* 2.0 l_0_10_68) l_0_10_68)) (* (* 2.0 l_0_10_69) l_0_10_69))))
 (let ((?x24384 (- (- ?x24380 (* (* 2.0 l_0_10_88) l_0_10_88)) (* (* 2.0 l_0_10_89) l_0_10_89))))
 (= (- ?x24384 (* (* 2.0 l_0_10_90) l_0_10_90)) 0.0))))))
(assert
 (let ((?x24409 (+ (* (* 4.0 l_0_10_46) l_0_10_49) (* (* 4.0 l_0_10_47) l_0_10_50))))
 (let ((?x24415 (- (+ ?x24409 (* (* 4.0 l_0_10_48) l_0_10_51)) (* (* 4.0 l_0_10_67) l_0_10_70))))
 (let ((?x24421 (- (- ?x24415 (* (* 4.0 l_0_10_68) l_0_10_71)) (* (* 4.0 l_0_10_69) l_0_10_72))))
 (let ((?x24427 (- (- ?x24421 (* (* 4.0 l_0_10_88) l_0_10_91)) (* (* 4.0 l_0_10_89) l_0_10_92))))
 (= (- ?x24427 (* (* 4.0 l_0_10_90) l_0_10_93)) 0.0))))))
(assert
 (let ((?x18359 (+ (* (* 4.0 l_0_10_46) l_0_10_53) (* (* 4.0 l_0_10_47) l_0_10_54))))
 (let ((?x18369 (- (+ ?x18359 (* (* 4.0 l_0_10_48) l_0_10_55)) (* (* 4.0 l_0_10_67) l_0_10_74))))
 (let ((?x24456 (- (- ?x18369 (* (* 4.0 l_0_10_68) l_0_10_75)) (* (* 4.0 l_0_10_69) l_0_10_76))))
 (let ((?x24460 (- (- ?x24456 (* (* 4.0 l_0_10_88) l_0_10_95)) (* (* 4.0 l_0_10_89) l_0_10_96))))
 (= (- ?x24460 (* (* 4.0 l_0_10_90) l_0_10_97)) 0.0))))))
(assert
 (let ((?x18411 (- (* (* (- 4.0) l_0_10_100) l_0_10_88) (* (* 4.0 l_0_10_101) l_0_10_89))))
 (let ((?x24482 (+ (- ?x18411 (* (* 4.0 l_0_10_102) l_0_10_90)) (* (* 4.0 l_0_10_46) l_0_10_58))))
 (let ((?x24486 (+ (+ ?x24482 (* (* 4.0 l_0_10_47) l_0_10_59)) (* (* 4.0 l_0_10_48) l_0_10_60))))
 (let ((?x24490 (- (- ?x24486 (* (* 4.0 l_0_10_67) l_0_10_79)) (* (* 4.0 l_0_10_68) l_0_10_80))))
 (= (- ?x24490 (* (* 4.0 l_0_10_69) l_0_10_81)) 0.0))))))
(assert
 (let ((?x24516 (+ (* (* 4.0 l_0_10_49) l_0_10_53) (* (* 4.0 l_0_10_50) l_0_10_54))))
 (let ((?x24522 (+ (+ ?x24516 (* (* 4.0 l_0_10_51) l_0_10_55)) (* (* 4.0 l_0_10_52) l_0_10_56))))
 (let ((?x24528 (- (- ?x24522 (* (* 4.0 l_0_10_70) l_0_10_74)) (* (* 4.0 l_0_10_71) l_0_10_75))))
 (let ((?x24534 (- (- ?x24528 (* (* 4.0 l_0_10_72) l_0_10_76)) (* (* 4.0 l_0_10_73) l_0_10_77))))
 (let ((?x24540 (- (- ?x24534 (* (* 4.0 l_0_10_91) l_0_10_95)) (* (* 4.0 l_0_10_92) l_0_10_96))))
 (let ((?x24546 (- (- ?x24540 (* (* 4.0 l_0_10_93) l_0_10_97)) (* (* 4.0 l_0_10_94) l_0_10_98))))
 (= ?x24546 0.0))))))))
(assert
 (let ((?x24577 (- (* (* (- 4.0) l_0_10_100) l_0_10_91) (* (* 4.0 l_0_10_101) l_0_10_92))))
 (let ((?x24582 (- (- ?x24577 (* (* 4.0 l_0_10_102) l_0_10_93)) (* (* 4.0 l_0_10_103) l_0_10_94))))
 (let ((?x24586 (+ (+ ?x24582 (* (* 4.0 l_0_10_49) l_0_10_58)) (* (* 4.0 l_0_10_50) l_0_10_59))))
 (let ((?x24590 (+ (+ ?x24586 (* (* 4.0 l_0_10_51) l_0_10_60)) (* (* 4.0 l_0_10_52) l_0_10_61))))
 (let ((?x24594 (- (- ?x24590 (* (* 4.0 l_0_10_70) l_0_10_79)) (* (* 4.0 l_0_10_71) l_0_10_80))))
 (let ((?x24598 (- (- ?x24594 (* (* 4.0 l_0_10_72) l_0_10_81)) (* (* 4.0 l_0_10_73) l_0_10_82))))
 (= ?x24598 0.0))))))))
(assert
 (let ((?x24626 (+ (* 2.0 (* l_0_10_53 l_0_10_53)) (* 2.0 (* l_0_10_54 l_0_10_54)))))
 (let ((?x24630 (+ (+ ?x24626 (* 2.0 (* l_0_10_55 l_0_10_55))) (* 2.0 (* l_0_10_56 l_0_10_56)))))
 (let ((?x24634 (- (+ ?x24630 (* 2.0 (* l_0_10_57 l_0_10_57))) (* (* 2.0 l_0_10_74) l_0_10_74))))
 (let ((?x24638 (- (- ?x24634 (* (* 2.0 l_0_10_75) l_0_10_75)) (* (* 2.0 l_0_10_76) l_0_10_76))))
 (let ((?x24642 (- (- ?x24638 (* (* 2.0 l_0_10_77) l_0_10_77)) (* (* 2.0 l_0_10_78) l_0_10_78))))
 (let ((?x24648 (- (- ?x24642 (* (* 2.0 l_0_10_95) l_0_10_95)) (* (* 2.0 l_0_10_96) l_0_10_96))))
 (let ((?x24654 (- (- ?x24648 (* (* 2.0 l_0_10_97) l_0_10_97)) (* (* 2.0 l_0_10_98) l_0_10_98))))
 (= (- ?x24654 (* (* 2.0 l_0_10_99) l_0_10_99)) 0.0)))))))))
(assert
 (let ((?x24700 (- (* (* (- 4.0) l_0_10_100) l_0_10_95) (* (* 4.0 l_0_10_101) l_0_10_96))))
 (let ((?x24704 (- (- ?x24700 (* (* 4.0 l_0_10_102) l_0_10_97)) (* (* 4.0 l_0_10_103) l_0_10_98))))
 (let ((?x24710 (+ (- ?x24704 (* (* 4.0 l_0_10_104) l_0_10_99)) (* (* 4.0 l_0_10_53) l_0_10_58))))
 (let ((?x24716 (+ (+ ?x24710 (* (* 4.0 l_0_10_54) l_0_10_59)) (* (* 4.0 l_0_10_55) l_0_10_60))))
 (let ((?x24722 (+ (+ ?x24716 (* (* 4.0 l_0_10_56) l_0_10_61)) (* (* 4.0 l_0_10_57) l_0_10_62))))
 (let ((?x24728 (- (- ?x24722 (* (* 4.0 l_0_10_74) l_0_10_79)) (* (* 4.0 l_0_10_75) l_0_10_80))))
 (let ((?x24734 (- (- ?x24728 (* (* 4.0 l_0_10_76) l_0_10_81)) (* (* 4.0 l_0_10_77) l_0_10_82))))
 (= (- ?x24734 (* (* 4.0 l_0_10_78) l_0_10_83)) 0.0)))))))))
(assert
 (let ((?x24759 (- (* (* (- 2.0) l_0_10_100) l_0_10_100) (* (* 2.0 l_0_10_101) l_0_10_101))))
 (let ((?x24763 (- (- ?x24759 (* (* 2.0 l_0_10_102) l_0_10_102)) (* (* 2.0 l_0_10_103) l_0_10_103))))
 (let ((?x24768 (- (- ?x24763 (* (* 2.0 l_0_10_104) l_0_10_104)) (* (* 2.0 l_0_10_105) l_0_10_105))))
 (let ((?x24772 (+ (+ ?x24768 (* 2.0 (* l_0_10_58 l_0_10_58))) (* 2.0 (* l_0_10_59 l_0_10_59)))))
 (let ((?x24776 (+ (+ ?x24772 (* 2.0 (* l_0_10_60 l_0_10_60))) (* 2.0 (* l_0_10_61 l_0_10_61)))))
 (let ((?x24780 (+ (+ ?x24776 (* 2.0 (* l_0_10_62 l_0_10_62))) (* 2.0 (* l_0_10_63 l_0_10_63)))))
 (let ((?x24786 (- (- ?x24780 (* (* 2.0 l_0_10_79) l_0_10_79)) (* (* 2.0 l_0_10_80) l_0_10_80))))
 (let ((?x24792 (- (- ?x24786 (* (* 2.0 l_0_10_81) l_0_10_81)) (* (* 2.0 l_0_10_82) l_0_10_82))))
 (let ((?x24798 (- (- ?x24792 (* (* 2.0 l_0_10_83) l_0_10_83)) (* (* 2.0 l_0_10_84) l_0_10_84))))
 (= ?x24798 0.0)))))))))))
(assert
 (let ((?x22249 (* l_0_10_85 l_0_10_85)))
 (= (+ (* (* (- 2.0) l_0_10_127) l_0_10_137) ?x22249) 0.0)))
(assert
 (let ((?x24845 (- (* (* (- 4.0) l_0_10_106) l_0_10_116) (* (* 2.0 l_0_10_133) l_0_10_137))))
 (let ((?x24849 (- (- ?x24845 (* (* 2.0 l_0_10_134) l_0_10_138)) (* (* 2.0 l_0_10_135) l_0_10_139))))
 (let ((?x24853 (+ (- ?x24849 (* (* 2.0 l_0_10_136) l_0_10_140)) (* (* 2.0 l_0_10_85) l_0_10_91))))
 (= ?x24853 0.0)))))
(assert
 (let ((?x24878 (* l_0_10_141 l_0_10_141)))
 (let ((?x24876 (* l_0_10_140 l_0_10_140)))
 (let ((?x24874 (* l_0_10_139 l_0_10_139)))
 (let ((?x24875 (- (- (* (- l_0_10_137) l_0_10_137) (* l_0_10_138 l_0_10_138)) ?x24874)))
 (= (+ (- (- ?x24875 ?x24876) ?x24878) (* (* 2.0 l_0_10_85) l_0_10_95)) 0.0))))))
(assert
 (let ((?x24897 (- (* (* (- 2.0) l_0_10_116) l_0_10_116) (* (* 2.0 l_0_10_117) l_0_10_117))))
 (let ((?x24901 (- (- ?x24897 (* (* 2.0 l_0_10_118) l_0_10_118)) (* (* 2.0 l_0_10_119) l_0_10_119))))
 (let ((?x24905 (+ (- ?x24901 (* (* 2.0 l_0_10_120) l_0_10_120)) (* (* 2.0 l_0_10_91) l_0_10_95))))
 (let ((?x24909 (+ (+ ?x24905 (* (* 2.0 l_0_10_92) l_0_10_96)) (* (* 2.0 l_0_10_93) l_0_10_97))))
 (= (+ ?x24909 (* (* 2.0 l_0_10_94) l_0_10_98)) 0.0))))))
(assert
 (let ((?x18629 (* l_0_10_99 l_0_10_99)))
 (let ((?x18624 (* l_0_10_98 l_0_10_98)))
 (let ((?x18619 (* l_0_10_97 l_0_10_97)))
 (let ((?x18762 (+ (+ (+ (* l_0_10_95 l_0_10_95) (* l_0_10_96 l_0_10_96)) ?x18619) ?x18624)))
 (= (+ ?x18762 ?x18629) 0.0))))))
(assert
 (let ((?x24914 (- (* (* (- 2.0) l_0_10_106) l_0_10_106) (* (* 2.0 l_0_10_127) l_0_10_133))))
 (= ?x24914 0.0)))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_22 0.0))
(assert
 (>= l_0_10_24 0.0))
(assert
 (>= l_0_10_27 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_42 0.0))
(assert
 (>= l_0_10_43 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_52 0.0))
(assert
 (>= l_0_10_57 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_64 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_69 0.0))
(assert
 (>= l_0_10_73 0.0))
(assert
 (>= l_0_10_78 0.0))
(assert
 (>= l_0_10_84 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_87 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_94 0.0))
(assert
 (>= l_0_10_99 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_106 0.0))
(assert
 (>= l_0_10_108 0.0))
(assert
 (>= l_0_10_111 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_120 0.0))
(assert
 (>= l_0_10_126 0.0))
(assert
 (>= l_0_10_127 0.0))
(assert
 (>= l_0_10_129 0.0))
(assert
 (>= l_0_10_132 0.0))
(assert
 (>= l_0_10_136 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_147 0.0))
(assert
 (let ((?x24969 (* l_0_11_148 l_0_11_148)))
 (= (- (- _a_6_ (* l_0_11_127 l_0_11_127)) ?x24969) 0.0)))
(assert
 (let ((?x24987 (* l_0_11_22 l_0_11_22)))
 (let ((?x24983 (- (+ _a_7_ (* 2.0 (* l_0_11_106 l_0_11_106))) (* (* 2.0 l_0_11_127) l_0_11_128))))
 (= (- (- ?x24983 (* (* 2.0 l_0_11_148) l_0_11_149)) ?x24987) 0.0))))
(assert
 (let ((?x25001 (- (* (- l_0_11_1) l_0_11_1) (* (* 1.0 l_0_11_106) l_0_11_106))))
 (let ((?x25005 (- (- ?x25001 (* (* 2.0 l_0_11_127) l_0_11_130)) (* (* 2.0 l_0_11_148) l_0_11_151))))
 (= ?x25005 0.0))))
(assert
 (let ((?x25026 (* 4.0 l_0_11_106)))
 (let ((?x25027 (* ?x25026 l_0_11_109)))
 (let ((?x25025 (- (* (* (- 2.0) l_0_11_1) l_0_11_2) (* (* 2.0 l_0_11_106) l_0_11_107))))
 (let ((?x25034 (- (- (+ ?x25025 ?x25027) (* (* 2.0 l_0_11_128) l_0_11_130)) (* (* 2.0 l_0_11_129) l_0_11_131))))
 (let ((?x25040 (- (- ?x25034 (* (* 2.0 l_0_11_149) l_0_11_151)) (* (* 2.0 l_0_11_150) l_0_11_152))))
 (let ((?x25046 (+ (- ?x25040 (* (* 2.0 l_0_11_22) l_0_11_25)) (* 2.0 (* l_0_11_43 l_0_11_43)))))
 (let ((?x25052 (- (- ?x25046 (* (* 2.0 l_0_11_64) l_0_11_64)) (* (* 2.0 l_0_11_85) l_0_11_85))))
 (= ?x25052 0.0)))))))))
(assert
 (let ((?x25108 (* l_0_11_153 l_0_11_153)))
 (let ((?x25106 (* l_0_11_152 l_0_11_152)))
 (let ((?x25104 (* l_0_11_151 l_0_11_151)))
 (let ((?x25102 (* l_0_11_132 l_0_11_132)))
 (let ((?x25100 (* l_0_11_131 l_0_11_131)))
 (let ((?x25098 (* l_0_11_130 l_0_11_130)))
 (let ((?x25097 (- (* (* (- 2.0) l_0_11_1) l_0_11_4) (* (* 2.0 l_0_11_106) l_0_11_109))))
 (= (- (- (- (- (- (- ?x25097 ?x25098) ?x25100) ?x25102) ?x25104) ?x25106) ?x25108) 0.0)))))))))
(assert
 (let ((?x25026 (* 4.0 l_0_11_106)))
 (let ((?x25027 (* ?x25026 l_0_11_109)))
 (let ((?x12450 (- (- (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x25027) (* (* 2.0 l_0_11_106) l_0_11_112))))
 (let ((?x12514 (- (- ?x12450 (* (* 2.0 l_0_11_130) l_0_11_133)) (* (* 2.0 l_0_11_131) l_0_11_134))))
 (let ((?x25127 (- (- ?x12514 (* (* 2.0 l_0_11_132) l_0_11_135)) (* (* 2.0 l_0_11_151) l_0_11_154))))
 (let ((?x25133 (- (- ?x25127 (* (* 2.0 l_0_11_152) l_0_11_155)) (* (* 2.0 l_0_11_153) l_0_11_156))))
 (= ?x25133 0.0))))))))
(assert
 (let ((?x2294 (- (* (* (- 2.0) l_0_11_1) l_0_11_11) (* (* 2.0 l_0_11_106) l_0_11_116))))
 (let ((?x18868 (- (- ?x2294 (* (* 2.0 l_0_11_130) l_0_11_137)) (* (* 2.0 l_0_11_131) l_0_11_138))))
 (let ((?x25155 (- (- ?x18868 (* (* 2.0 l_0_11_132) l_0_11_139)) (* (* 2.0 l_0_11_151) l_0_11_158))))
 (let ((?x25159 (- (- ?x25155 (* (* 2.0 l_0_11_152) l_0_11_159)) (* (* 2.0 l_0_11_153) l_0_11_160))))
 (= (+ ?x25159 (* (* 2.0 l_0_11_85) l_0_11_88)) 0.0))))))
(assert
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x25199 (* ?x25047 l_0_11_67)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x25197 (* ?x25196 l_0_11_46)))
 (let ((?x25183 (- (* (* (- 2.0) l_0_11_1) l_0_11_16) (* (* 2.0 l_0_11_106) l_0_11_121))))
 (let ((?x25187 (- (- ?x25183 (* (* 2.0 l_0_11_130) l_0_11_142)) (* (* 2.0 l_0_11_131) l_0_11_143))))
 (let ((?x25191 (- (- ?x25187 (* (* 2.0 l_0_11_132) l_0_11_144)) (* (* 2.0 l_0_11_151) l_0_11_163))))
 (let ((?x25195 (- (- ?x25191 (* (* 2.0 l_0_11_152) l_0_11_164)) (* (* 2.0 l_0_11_153) l_0_11_165))))
 (= (+ (- ?x25195 ?x25197) ?x25199) 0.0))))))))))
(assert
 (let ((?x25247 (* l_0_11_3 l_0_11_3)))
 (let ((?x25239 (* l_0_11_2 l_0_11_2)))
 (let ((?x25233 (* 4.0 l_0_11_108)))
 (let ((?x25234 (* ?x25233 l_0_11_110)))
 (let ((?x25232 (- (* (* 4.0 l_0_11_107) l_0_11_109) (* (* 1.0 l_0_11_107) l_0_11_107))))
 (let ((?x25243 (- (- (- (+ ?x25232 ?x25234) (* (* 1.0 l_0_11_108) l_0_11_108)) ?x25239) (* (* 2.0 l_0_11_23) l_0_11_25))))
 (let ((?x25251 (+ (- (- ?x25243 (* (* 2.0 l_0_11_24) l_0_11_26)) ?x25247) (* (* 4.0 l_0_11_43) l_0_11_44))))
 (let ((?x25257 (- (- ?x25251 (* (* 4.0 l_0_11_64) l_0_11_65)) (* (* 4.0 l_0_11_85) l_0_11_86))))
 (= ?x25257 0.0))))))))))
(assert
 (let ((?x25306 (* l_0_11_27 l_0_11_27)))
 (let ((?x25304 (* l_0_11_26 l_0_11_26)))
 (let ((?x25302 (* l_0_11_25 l_0_11_25)))
 (let ((?x25296 (* l_0_11_111 l_0_11_111)))
 (let ((?x25297 (* 2.0 ?x25296)))
 (let ((?x25293 (* l_0_11_110 l_0_11_110)))
 (let ((?x25294 (* 2.0 ?x25293)))
 (let ((?x25290 (* l_0_11_109 l_0_11_109)))
 (let ((?x25291 (* 2.0 ?x25290)))
 (let ((?x25289 (- (* (* (- 2.0) l_0_11_107) l_0_11_109) (* (* 2.0 l_0_11_108) l_0_11_110))))
 (let ((?x25301 (- (+ (+ (+ ?x25289 ?x25291) ?x25294) ?x25297) (* (* 2.0 l_0_11_2) l_0_11_4))))
 (let ((?x25310 (- (- (- (- ?x25301 ?x25302) ?x25304) ?x25306) (* (* 2.0 l_0_11_3) l_0_11_5))))
 (let ((?x25314 (- (+ ?x25310 (* (* 4.0 l_0_11_43) l_0_11_46)) (* (* 4.0 l_0_11_64) l_0_11_67))))
 (= (- ?x25314 (* (* 4.0 l_0_11_85) l_0_11_88)) 0.0)))))))))))))))
(assert
 (let ((?x25347 (* 4.0 l_0_11_111)))
 (let ((?x25348 (* ?x25347 l_0_11_114)))
 (let ((?x25344 (* 4.0 l_0_11_110)))
 (let ((?x25345 (* ?x25344 l_0_11_113)))
 (let ((?x25341 (* 4.0 l_0_11_109)))
 (let ((?x25342 (* ?x25341 l_0_11_112)))
 (let ((?x25233 (* 4.0 l_0_11_108)))
 (let ((?x25234 (* ?x25233 l_0_11_110)))
 (let ((?x25337 (- (* (* (- 4.0) l_0_11_107) l_0_11_109) (* (* 2.0 l_0_11_107) l_0_11_112))))
 (let ((?x25346 (+ (+ (- (- ?x25337 ?x25234) (* (* 2.0 l_0_11_108) l_0_11_113)) ?x25342) ?x25345)))
 (let ((?x25354 (- (- (+ ?x25346 ?x25348) (* (* 2.0 l_0_11_2) l_0_11_7)) (* (* 2.0 l_0_11_25) l_0_11_28))))
 (let ((?x25360 (- (- ?x25354 (* (* 2.0 l_0_11_26) l_0_11_29)) (* (* 2.0 l_0_11_27) l_0_11_30))))
 (let ((?x25364 (+ (- ?x25360 (* (* 2.0 l_0_11_3) l_0_11_8)) (* (* 4.0 l_0_11_43) l_0_11_49))))
 (let ((?x25368 (- (- ?x25364 (* (* 4.0 l_0_11_64) l_0_11_70)) (* (* 4.0 l_0_11_85) l_0_11_91))))
 (= ?x25368 0.0))))))))))))))))
(assert
 (let ((?x25347 (* 4.0 l_0_11_111)))
 (let ((?x25411 (* ?x25347 l_0_11_118)))
 (let ((?x25344 (* 4.0 l_0_11_110)))
 (let ((?x25409 (* ?x25344 l_0_11_117)))
 (let ((?x25341 (* 4.0 l_0_11_109)))
 (let ((?x25404 (* ?x25341 l_0_11_116)))
 (let ((?x25403 (- (* (* (- 2.0) l_0_11_107) l_0_11_116) (* (* 2.0 l_0_11_108) l_0_11_117))))
 (let ((?x25412 (+ (+ (- (+ ?x25403 ?x25404) (* (* 2.0 l_0_11_11) l_0_11_2)) ?x25409) ?x25411)))
 (let ((?x25417 (- (- ?x25412 (* (* 2.0 l_0_11_12) l_0_11_3)) (* (* 2.0 l_0_11_25) l_0_11_32))))
 (let ((?x25421 (- (- ?x25417 (* (* 2.0 l_0_11_26) l_0_11_33)) (* (* 2.0 l_0_11_27) l_0_11_34))))
 (let ((?x25425 (- (+ ?x25421 (* (* 4.0 l_0_11_43) l_0_11_53)) (* (* 4.0 l_0_11_64) l_0_11_74))))
 (let ((?x25430 (+ (- ?x25425 (* (* 4.0 l_0_11_85) l_0_11_95)) (* (* 2.0 l_0_11_86) l_0_11_88))))
 (= (+ ?x25430 (* (* 2.0 l_0_11_87) l_0_11_89)) 0.0))))))))))))))
(assert
 (let ((?x25503 (* 2.0 l_0_11_66)))
 (let ((?x25504 (* ?x25503 l_0_11_68)))
 (let ((?x25500 (* 2.0 l_0_11_65)))
 (let ((?x25501 (* ?x25500 l_0_11_67)))
 (let ((?x25495 (* 2.0 l_0_11_45)))
 (let ((?x25496 (* ?x25495 l_0_11_47)))
 (let ((?x25492 (* 2.0 l_0_11_44)))
 (let ((?x25493 (* ?x25492 l_0_11_46)))
 (let ((?x25347 (* 4.0 l_0_11_111)))
 (let ((?x25476 (* ?x25347 l_0_11_123)))
 (let ((?x25344 (* 4.0 l_0_11_110)))
 (let ((?x25474 (* ?x25344 l_0_11_122)))
 (let ((?x25341 (* 4.0 l_0_11_109)))
 (let ((?x25472 (* ?x25341 l_0_11_121)))
 (let ((?x25469 (- (* (* (- 4.0) l_0_11_100) l_0_11_85) (* (* 2.0 l_0_11_107) l_0_11_121))))
 (let ((?x25477 (+ (+ (+ (- ?x25469 (* (* 2.0 l_0_11_108) l_0_11_122)) ?x25472) ?x25474) ?x25476)))
 (let ((?x25483 (- (- ?x25477 (* (* 2.0 l_0_11_16) l_0_11_2)) (* (* 2.0 l_0_11_17) l_0_11_3))))
 (let ((?x25487 (- (- ?x25483 (* (* 2.0 l_0_11_25) l_0_11_37)) (* (* 2.0 l_0_11_26) l_0_11_38))))
 (let ((?x25491 (+ (- ?x25487 (* (* 2.0 l_0_11_27) l_0_11_39)) (* (* 4.0 l_0_11_43) l_0_11_58))))
 (let ((?x25502 (+ (- (- (- ?x25491 ?x25493) ?x25496) (* (* 4.0 l_0_11_64) l_0_11_79)) ?x25501)))
 (= (+ ?x25502 ?x25504) 0.0))))))))))))))))))))))
(assert
 (let ((?x25568 (* l_0_11_6 l_0_11_6)))
 (let ((?x25566 (* l_0_11_5 l_0_11_5)))
 (let ((?x25564 (* l_0_11_4 l_0_11_4)))
 (let ((?x25560 (- (* (* (- 1.0) l_0_11_109) l_0_11_109) (* (* 1.0 l_0_11_110) l_0_11_110))))
 (let ((?x25569 (- (- (- (- ?x25560 (* (* 1.0 l_0_11_111) l_0_11_111)) ?x25564) ?x25566) ?x25568)))
 (= ?x25569 0.0)))))))
(assert
 (let ((?x19277 (- (* (* (- 2.0) l_0_11_109) l_0_11_112) (* (* 2.0 l_0_11_109) l_0_11_109))))
 (let ((?x25583 (- (- ?x19277 (* (* 2.0 l_0_11_110) l_0_11_113)) (* (* 2.0 l_0_11_110) l_0_11_110))))
 (let ((?x25588 (- (- ?x25583 (* (* 2.0 l_0_11_111) l_0_11_114)) (* (* 2.0 l_0_11_111) l_0_11_111))))
 (let ((?x25594 (- (- ?x25588 (* (* 2.0 l_0_11_4) l_0_11_7)) (* (* 2.0 l_0_11_5) l_0_11_8))))
 (= (- ?x25594 (* (* 2.0 l_0_11_6) l_0_11_9)) 0.0))))))
(assert
 (let ((?x25632 (* l_0_11_90 l_0_11_90)))
 (let ((?x25630 (* l_0_11_89 l_0_11_89)))
 (let ((?x25628 (* l_0_11_88 l_0_11_88)))
 (let ((?x25618 (- (* (* (- 2.0) l_0_11_109) l_0_11_116) (* (* 2.0 l_0_11_11) l_0_11_4))))
 (let ((?x25622 (- (- ?x25618 (* (* 2.0 l_0_11_110) l_0_11_117)) (* (* 2.0 l_0_11_111) l_0_11_118))))
 (let ((?x25627 (- (- ?x25622 (* (* 2.0 l_0_11_12) l_0_11_5)) (* (* 2.0 l_0_11_13) l_0_11_6))))
 (= (+ (+ (+ ?x25627 ?x25628) ?x25630) ?x25632) 0.0))))))))
(assert
 (let ((?x25661 (* l_0_11_69 l_0_11_69)))
 (let ((?x25659 (* l_0_11_68 l_0_11_68)))
 (let ((?x25657 (* l_0_11_67 l_0_11_67)))
 (let ((?x25655 (* l_0_11_48 l_0_11_48)))
 (let ((?x25653 (* l_0_11_47 l_0_11_47)))
 (let ((?x25651 (* l_0_11_46 l_0_11_46)))
 (let ((?x19315 (- (* (* (- 2.0) l_0_11_109) l_0_11_121) (* (* 2.0 l_0_11_110) l_0_11_122))))
 (let ((?x13182 (- (- ?x19315 (* (* 2.0 l_0_11_111) l_0_11_123)) (* (* 2.0 l_0_11_16) l_0_11_4))))
 (let ((?x25650 (- (- ?x13182 (* (* 2.0 l_0_11_17) l_0_11_5)) (* (* 2.0 l_0_11_18) l_0_11_6))))
 (= (+ (+ (+ (- (- (- ?x25650 ?x25651) ?x25653) ?x25655) ?x25657) ?x25659) ?x25661) 0.0)))))))))))
(assert
 (let ((?x25703 (* l_0_11_9 l_0_11_9)))
 (let ((?x25701 (* l_0_11_8 l_0_11_8)))
 (let ((?x25699 (* l_0_11_7 l_0_11_7)))
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x25199 (* ?x25047 l_0_11_67)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x25197 (* ?x25196 l_0_11_46)))
 (let ((?x25347 (* 4.0 l_0_11_111)))
 (let ((?x25348 (* ?x25347 l_0_11_114)))
 (let ((?x25344 (* 4.0 l_0_11_110)))
 (let ((?x25345 (* ?x25344 l_0_11_113)))
 (let ((?x25341 (* 4.0 l_0_11_109)))
 (let ((?x25342 (* ?x25341 l_0_11_112)))
 (let ((?x25687 (- (- (- (- (* (- l_0_11_10) l_0_11_10) ?x25342) ?x25345) ?x25348) (* (* 1.0 l_0_11_112) l_0_11_112))))
 (let ((?x25693 (- (- ?x25687 (* (* 1.0 l_0_11_113) l_0_11_113)) (* (* 1.0 l_0_11_114) l_0_11_114))))
 (let ((?x25700 (- (- (+ (- ?x25693 (* (* 1.0 l_0_11_115) l_0_11_115)) ?x25197) ?x25199) ?x25699)))
 (= (- (- ?x25700 ?x25701) ?x25703) 0.0))))))))))))))))))
(assert
 (let ((?x25347 (* 4.0 l_0_11_111)))
 (let ((?x25411 (* ?x25347 l_0_11_118)))
 (let ((?x25344 (* 4.0 l_0_11_110)))
 (let ((?x25409 (* ?x25344 l_0_11_117)))
 (let ((?x25341 (* 4.0 l_0_11_109)))
 (let ((?x25404 (* ?x25341 l_0_11_116)))
 (let ((?x25731 (- (- (* (* (- 2.0) l_0_11_10) l_0_11_14) ?x25404) (* (* 2.0 l_0_11_11) l_0_11_7))))
 (let ((?x25739 (- (- (- (- ?x25731 ?x25409) ?x25411) (* (* 2.0 l_0_11_112) l_0_11_116)) (* (* 2.0 l_0_11_113) l_0_11_117))))
 (let ((?x25745 (- (- ?x25739 (* (* 2.0 l_0_11_114) l_0_11_118)) (* (* 2.0 l_0_11_115) l_0_11_119))))
 (let ((?x25749 (- (- ?x25745 (* (* 2.0 l_0_11_12) l_0_11_8)) (* (* 2.0 l_0_11_13) l_0_11_9))))
 (let ((?x25755 (+ (+ ?x25749 (* (* 2.0 l_0_11_88) l_0_11_91)) (* (* 2.0 l_0_11_89) l_0_11_92))))
 (= (+ ?x25755 (* (* 2.0 l_0_11_90) l_0_11_93)) 0.0)))))))))))))
(assert
 (let ((?x25814 (* 2.0 l_0_11_69)))
 (let ((?x25815 (* ?x25814 l_0_11_72)))
 (let ((?x25811 (* 2.0 l_0_11_68)))
 (let ((?x25812 (* ?x25811 l_0_11_71)))
 (let ((?x25808 (* 2.0 l_0_11_67)))
 (let ((?x25809 (* ?x25808 l_0_11_70)))
 (let ((?x25805 (* 2.0 l_0_11_48)))
 (let ((?x25806 (* ?x25805 l_0_11_51)))
 (let ((?x25802 (* 2.0 l_0_11_47)))
 (let ((?x25803 (* ?x25802 l_0_11_50)))
 (let ((?x25799 (* 2.0 l_0_11_46)))
 (let ((?x25800 (* ?x25799 l_0_11_49)))
 (let ((?x25347 (* 4.0 l_0_11_111)))
 (let ((?x25476 (* ?x25347 l_0_11_123)))
 (let ((?x25344 (* 4.0 l_0_11_110)))
 (let ((?x25474 (* ?x25344 l_0_11_122)))
 (let ((?x25341 (* 4.0 l_0_11_109)))
 (let ((?x25472 (* ?x25341 l_0_11_121)))
 (let ((?x25786 (- (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_19) ?x25472) ?x25474) ?x25476) (* (* 2.0 l_0_11_112) l_0_11_121))))
 (let ((?x25790 (- (- ?x25786 (* (* 2.0 l_0_11_113) l_0_11_122)) (* (* 2.0 l_0_11_114) l_0_11_123))))
 (let ((?x25794 (- (- ?x25790 (* (* 2.0 l_0_11_115) l_0_11_124)) (* (* 2.0 l_0_11_16) l_0_11_7))))
 (let ((?x25798 (- (- ?x25794 (* (* 2.0 l_0_11_17) l_0_11_8)) (* (* 2.0 l_0_11_18) l_0_11_9))))
 (= (+ (+ (+ (- (- (- ?x25798 ?x25800) ?x25803) ?x25806) ?x25809) ?x25812) ?x25815) 0.0))))))))))))))))))))))))
(assert
 (let ((?x25851 (* l_0_11_15 l_0_11_15)))
 (let ((?x25849 (* l_0_11_14 l_0_11_14)))
 (let ((?x25847 (* l_0_11_13 l_0_11_13)))
 (let ((?x25842 (* l_0_11_12 l_0_11_12)))
 (let ((?x25832 (- (* (- l_0_11_11) l_0_11_11) (* (* 1.0 l_0_11_116) l_0_11_116))))
 (let ((?x25838 (- (- ?x25832 (* (* 1.0 l_0_11_117) l_0_11_117)) (* (* 1.0 l_0_11_118) l_0_11_118))))
 (let ((?x25846 (- (- (- ?x25838 (* (* 1.0 l_0_11_119) l_0_11_119)) ?x25842) (* (* 1.0 l_0_11_120) l_0_11_120))))
 (let ((?x25854 (+ (- (- (- ?x25846 ?x25847) ?x25849) ?x25851) (* (* 2.0 l_0_11_88) l_0_11_95))))
 (let ((?x25858 (+ (+ ?x25854 (* (* 2.0 l_0_11_89) l_0_11_96)) (* (* 2.0 l_0_11_90) l_0_11_97))))
 (= ?x25858 0.0)))))))))))
(assert
 (let ((?x25814 (* 2.0 l_0_11_69)))
 (let ((?x25932 (* ?x25814 l_0_11_76)))
 (let ((?x25811 (* 2.0 l_0_11_68)))
 (let ((?x25930 (* ?x25811 l_0_11_75)))
 (let ((?x25808 (* 2.0 l_0_11_67)))
 (let ((?x25928 (* ?x25808 l_0_11_74)))
 (let ((?x25805 (* 2.0 l_0_11_48)))
 (let ((?x25926 (* ?x25805 l_0_11_55)))
 (let ((?x25802 (* 2.0 l_0_11_47)))
 (let ((?x25924 (* ?x25802 l_0_11_54)))
 (let ((?x25799 (* 2.0 l_0_11_46)))
 (let ((?x25922 (* ?x25799 l_0_11_53)))
 (let ((?x25891 (+ (* (* 2.0 l_0_11_100) l_0_11_88) (* (* 2.0 l_0_11_101) l_0_11_89))))
 (let ((?x25896 (- (+ ?x25891 (* (* 2.0 l_0_11_102) l_0_11_90)) (* (* 2.0 l_0_11_11) l_0_11_16))))
 (let ((?x25902 (- (- ?x25896 (* (* 2.0 l_0_11_116) l_0_11_121)) (* (* 2.0 l_0_11_117) l_0_11_122))))
 (let ((?x25908 (- (- ?x25902 (* (* 2.0 l_0_11_118) l_0_11_123)) (* (* 2.0 l_0_11_119) l_0_11_124))))
 (let ((?x25913 (- (- ?x25908 (* (* 2.0 l_0_11_12) l_0_11_17)) (* (* 2.0 l_0_11_120) l_0_11_125))))
 (let ((?x25918 (- (- ?x25913 (* (* 2.0 l_0_11_13) l_0_11_18)) (* (* 2.0 l_0_11_14) l_0_11_19))))
 (let ((?x25927 (- (- (- (- ?x25918 (* (* 2.0 l_0_11_15) l_0_11_20)) ?x25922) ?x25924) ?x25926)))
 (= (+ (+ (+ ?x25927 ?x25928) ?x25930) ?x25932) 0.0)))))))))))))))))))))
(assert
 (let ((?x25814 (* 2.0 l_0_11_69)))
 (let ((?x25999 (* ?x25814 l_0_11_81)))
 (let ((?x25811 (* 2.0 l_0_11_68)))
 (let ((?x25997 (* ?x25811 l_0_11_80)))
 (let ((?x25808 (* 2.0 l_0_11_67)))
 (let ((?x25995 (* ?x25808 l_0_11_79)))
 (let ((?x25805 (* 2.0 l_0_11_48)))
 (let ((?x25993 (* ?x25805 l_0_11_60)))
 (let ((?x25802 (* 2.0 l_0_11_47)))
 (let ((?x25991 (* ?x25802 l_0_11_59)))
 (let ((?x25799 (* 2.0 l_0_11_46)))
 (let ((?x25989 (* ?x25799 l_0_11_58)))
 (let ((?x25987 (* l_0_11_21 l_0_11_21)))
 (let ((?x25985 (* l_0_11_20 l_0_11_20)))
 (let ((?x25983 (* l_0_11_19 l_0_11_19)))
 (let ((?x25981 (* l_0_11_18 l_0_11_18)))
 (let ((?x25979 (* l_0_11_17 l_0_11_17)))
 (let ((?x25977 (* l_0_11_16 l_0_11_16)))
 (let ((?x25964 (- (* (* (- 1.0) l_0_11_121) l_0_11_121) (* (* 1.0 l_0_11_122) l_0_11_122))))
 (let ((?x25970 (- (- ?x25964 (* (* 1.0 l_0_11_123) l_0_11_123)) (* (* 1.0 l_0_11_124) l_0_11_124))))
 (let ((?x25976 (- (- ?x25970 (* (* 1.0 l_0_11_125) l_0_11_125)) (* (* 1.0 l_0_11_126) l_0_11_126))))
 (let ((?x25990 (- (- (- (- (- (- (- ?x25976 ?x25977) ?x25979) ?x25981) ?x25983) ?x25985) ?x25987) ?x25989)))
 (= (+ (+ (+ (- (- ?x25990 ?x25991) ?x25993) ?x25995) ?x25997) ?x25999) 0.0))))))))))))))))))))))))
(assert
 (let ((?x26045 (* l_0_11_150 l_0_11_150)))
 (let ((?x26043 (* l_0_11_149 l_0_11_149)))
 (let ((?x26036 (* l_0_11_129 l_0_11_129)))
 (let ((?x26033 (* l_0_11_128 l_0_11_128)))
 (let ((?x26046 (- (- (- (- (* (* 4.0 l_0_11_106) l_0_11_107) ?x26033) ?x26036) ?x26043) ?x26045)))
 (= (- ?x26046 (* (* 2.0 l_0_11_22) l_0_11_23)) 0.0)))))))
(assert
 (let ((?x26064 (+ (* (* (- 4.0) l_0_11_106) l_0_11_107) (* (* 4.0 l_0_11_106) l_0_11_112))))
 (let ((?x26068 (- (- ?x26064 (* (* 2.0 l_0_11_128) l_0_11_133)) (* (* 2.0 l_0_11_129) l_0_11_134))))
 (let ((?x26072 (- (- ?x26068 (* (* 2.0 l_0_11_149) l_0_11_154)) (* (* 2.0 l_0_11_150) l_0_11_155))))
 (= (- ?x26072 (* (* 2.0 l_0_11_22) l_0_11_28)) 0.0)))))
(assert
 (let ((?x26093 (- (* (* 4.0 l_0_11_106) l_0_11_116) (* (* 2.0 l_0_11_128) l_0_11_137))))
 (let ((?x26097 (- (- ?x26093 (* (* 2.0 l_0_11_129) l_0_11_138)) (* (* 2.0 l_0_11_149) l_0_11_158))))
 (let ((?x26101 (- (- ?x26097 (* (* 2.0 l_0_11_150) l_0_11_159)) (* (* 2.0 l_0_11_22) l_0_11_32))))
 (= (+ ?x26101 (* (* 2.0 l_0_11_85) l_0_11_86)) 0.0)))))
(assert
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x26144 (* ?x25047 l_0_11_65)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x26142 (* ?x25196 l_0_11_44)))
 (let ((?x26133 (- (* (* 4.0 l_0_11_106) l_0_11_121) (* (* 2.0 l_0_11_128) l_0_11_142))))
 (let ((?x26137 (- (- ?x26133 (* (* 2.0 l_0_11_129) l_0_11_143)) (* (* 2.0 l_0_11_149) l_0_11_163))))
 (let ((?x26141 (- (- ?x26137 (* (* 2.0 l_0_11_150) l_0_11_164)) (* (* 2.0 l_0_11_22) l_0_11_37))))
 (= (+ (- ?x26141 ?x26142) ?x26144) 0.0)))))))))
(assert
 (let ((?x26169 (* l_0_11_24 l_0_11_24)))
 (let ((?x26167 (* l_0_11_23 l_0_11_23)))
 (let ((?x25267 (* l_0_11_108 l_0_11_108)))
 (let ((?x13834 (* 2.0 ?x25267)))
 (let ((?x25261 (* l_0_11_107 l_0_11_107)))
 (let ((?x19981 (* 2.0 ?x25261)))
 (= (- (- (+ ?x19981 ?x13834) ?x26167) ?x26169) 0.0))))))))
(assert
 (let ((?x25233 (* 4.0 l_0_11_108)))
 (let ((?x13897 (* ?x25233 l_0_11_113)))
 (let ((?x19988 (- (* (* 4.0 l_0_11_107) l_0_11_112) (* (* 2.0 l_0_11_107) l_0_11_107))))
 (let ((?x26172 (- (- (+ ?x19988 ?x13897) (* (* 2.0 l_0_11_108) l_0_11_108)) (* (* 2.0 l_0_11_23) l_0_11_28))))
 (= (- ?x26172 (* (* 2.0 l_0_11_24) l_0_11_29)) 0.0))))))
(assert
 (let ((?x26198 (* l_0_11_87 l_0_11_87)))
 (let ((?x26196 (* l_0_11_86 l_0_11_86)))
 (let ((?x25233 (* 4.0 l_0_11_108)))
 (let ((?x26190 (* ?x25233 l_0_11_117)))
 (let ((?x26193 (- (+ (* (* 4.0 l_0_11_107) l_0_11_116) ?x26190) (* (* 2.0 l_0_11_23) l_0_11_32))))
 (= (+ (+ (- ?x26193 (* (* 2.0 l_0_11_24) l_0_11_33)) ?x26196) ?x26198) 0.0)))))))
(assert
 (let ((?x26231 (* l_0_11_66 l_0_11_66)))
 (let ((?x26229 (* l_0_11_65 l_0_11_65)))
 (let ((?x26227 (* l_0_11_45 l_0_11_45)))
 (let ((?x26225 (* l_0_11_44 l_0_11_44)))
 (let ((?x25233 (* 4.0 l_0_11_108)))
 (let ((?x26219 (* ?x25233 l_0_11_122)))
 (let ((?x26222 (- (+ (* (* 4.0 l_0_11_107) l_0_11_121) ?x26219) (* (* 2.0 l_0_11_23) l_0_11_37))))
 (let ((?x26230 (+ (- (- (- ?x26222 (* (* 2.0 l_0_11_24) l_0_11_38)) ?x26225) ?x26227) ?x26229)))
 (= (+ ?x26230 ?x26231) 0.0))))))))))
(assert
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x26144 (* ?x25047 l_0_11_65)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x26142 (* ?x25196 l_0_11_44)))
 (let ((?x26264 (* l_0_11_31 l_0_11_31)))
 (let ((?x26262 (* l_0_11_30 l_0_11_30)))
 (let ((?x26260 (* l_0_11_29 l_0_11_29)))
 (let ((?x26258 (* l_0_11_28 l_0_11_28)))
 (let ((?x3119 (* l_0_11_115 l_0_11_115)))
 (let ((?x26256 (* 2.0 ?x3119)))
 (let ((?x25717 (* l_0_11_114 l_0_11_114)))
 (let ((?x26254 (* 2.0 ?x25717)))
 (let ((?x13216 (* l_0_11_113 l_0_11_113)))
 (let ((?x26252 (* 2.0 ?x13216)))
 (let ((?x25713 (* l_0_11_112 l_0_11_112)))
 (let ((?x26250 (* 2.0 ?x25713)))
 (let ((?x25233 (* 4.0 l_0_11_108)))
 (let ((?x13897 (* ?x25233 l_0_11_113)))
 (let ((?x26255 (+ (+ (+ (- (* (* (- 4.0) l_0_11_107) l_0_11_112) ?x13897) ?x26250) ?x26252) ?x26254)))
 (let ((?x26267 (- (+ (- (- (- (- (+ ?x26255 ?x26256) ?x26258) ?x26260) ?x26262) ?x26264) ?x26142) ?x26144)))
 (= ?x26267 0.0))))))))))))))))))))))
(assert
 (let ((?x13981 (* 4.0 l_0_11_115)))
 (let ((?x13912 (* ?x13981 l_0_11_119)))
 (let ((?x13910 (* 4.0 l_0_11_114)))
 (let ((?x4169 (* ?x13910 l_0_11_118)))
 (let ((?x20065 (* 4.0 l_0_11_113)))
 (let ((?x20071 (* ?x20065 l_0_11_117)))
 (let ((?x25233 (* 4.0 l_0_11_108)))
 (let ((?x26190 (* ?x25233 l_0_11_117)))
 (let ((?x20063 (+ (- (* (* (- 4.0) l_0_11_107) l_0_11_116) ?x26190) (* (* 4.0 l_0_11_112) l_0_11_116))))
 (let ((?x26272 (- (+ (+ (+ ?x20063 ?x20071) ?x4169) ?x13912) (* (* 2.0 l_0_11_28) l_0_11_32))))
 (let ((?x26278 (- (- ?x26272 (* (* 2.0 l_0_11_29) l_0_11_33)) (* (* 2.0 l_0_11_30) l_0_11_34))))
 (let ((?x26283 (+ (- ?x26278 (* (* 2.0 l_0_11_31) l_0_11_35)) (* (* 2.0 l_0_11_86) l_0_11_91))))
 (= (+ ?x26283 (* (* 2.0 l_0_11_87) l_0_11_92)) 0.0))))))))))))))
(assert
 (let ((?x25503 (* 2.0 l_0_11_66)))
 (let ((?x26339 (* ?x25503 l_0_11_71)))
 (let ((?x25500 (* 2.0 l_0_11_65)))
 (let ((?x26337 (* ?x25500 l_0_11_70)))
 (let ((?x25495 (* 2.0 l_0_11_45)))
 (let ((?x26335 (* ?x25495 l_0_11_50)))
 (let ((?x25492 (* 2.0 l_0_11_44)))
 (let ((?x26333 (* ?x25492 l_0_11_49)))
 (let ((?x13981 (* 4.0 l_0_11_115)))
 (let ((?x26323 (* ?x13981 l_0_11_124)))
 (let ((?x13910 (* 4.0 l_0_11_114)))
 (let ((?x26321 (* ?x13910 l_0_11_123)))
 (let ((?x20065 (* 4.0 l_0_11_113)))
 (let ((?x26319 (* ?x20065 l_0_11_122)))
 (let ((?x25233 (* 4.0 l_0_11_108)))
 (let ((?x26219 (* ?x25233 l_0_11_122)))
 (let ((?x26318 (+ (- (* (* (- 4.0) l_0_11_107) l_0_11_121) ?x26219) (* (* 4.0 l_0_11_112) l_0_11_121))))
 (let ((?x26326 (- (+ (+ (+ ?x26318 ?x26319) ?x26321) ?x26323) (* (* 2.0 l_0_11_28) l_0_11_37))))
 (let ((?x26330 (- (- ?x26326 (* (* 2.0 l_0_11_29) l_0_11_38)) (* (* 2.0 l_0_11_30) l_0_11_39))))
 (let ((?x26338 (+ (- (- (- ?x26330 (* (* 2.0 l_0_11_31) l_0_11_40)) ?x26333) ?x26335) ?x26337)))
 (= (+ ?x26338 ?x26339) 0.0))))))))))))))))))))))
(assert
 (let ((?x26367 (* l_0_11_36 l_0_11_36)))
 (let ((?x26365 (* l_0_11_35 l_0_11_35)))
 (let ((?x26363 (* l_0_11_34 l_0_11_34)))
 (let ((?x26361 (* l_0_11_33 l_0_11_33)))
 (let ((?x26359 (* l_0_11_32 l_0_11_32)))
 (let ((?x25875 (* l_0_11_120 l_0_11_120)))
 (let ((?x26357 (* 2.0 ?x25875)))
 (let ((?x25871 (* l_0_11_119 l_0_11_119)))
 (let ((?x26355 (* 2.0 ?x25871)))
 (let ((?x25867 (* l_0_11_118 l_0_11_118)))
 (let ((?x26353 (* 2.0 ?x25867)))
 (let ((?x25863 (* l_0_11_117 l_0_11_117)))
 (let ((?x26351 (* 2.0 ?x25863)))
 (let ((?x19588 (* l_0_11_116 l_0_11_116)))
 (let ((?x14047 (* 2.0 ?x19588)))
 (let ((?x26364 (- (- (- (+ (+ (+ (+ ?x14047 ?x26351) ?x26353) ?x26355) ?x26357) ?x26359) ?x26361) ?x26363)))
 (let ((?x26372 (+ (+ (- (- ?x26364 ?x26365) ?x26367) (* (* 2.0 l_0_11_86) l_0_11_95)) (* (* 2.0 l_0_11_87) l_0_11_96))))
 (= ?x26372 0.0)))))))))))))))))))
(assert
 (let ((?x25503 (* 2.0 l_0_11_66)))
 (let ((?x26423 (* ?x25503 l_0_11_75)))
 (let ((?x25500 (* 2.0 l_0_11_65)))
 (let ((?x26421 (* ?x25500 l_0_11_74)))
 (let ((?x25495 (* 2.0 l_0_11_45)))
 (let ((?x26419 (* ?x25495 l_0_11_54)))
 (let ((?x25492 (* 2.0 l_0_11_44)))
 (let ((?x26417 (* ?x25492 l_0_11_53)))
 (let ((?x26400 (* (* 4.0 l_0_11_120) l_0_11_125)))
 (let ((?x26397 (* (* 4.0 l_0_11_119) l_0_11_124)))
 (let ((?x26394 (* (* 4.0 l_0_11_118) l_0_11_123)))
 (let ((?x26391 (* (* 4.0 l_0_11_117) l_0_11_122)))
 (let ((?x26388 (* (* 4.0 l_0_11_116) l_0_11_121)))
 (let ((?x26386 (+ (* (* 2.0 l_0_11_100) l_0_11_86) (* (* 2.0 l_0_11_101) l_0_11_87))))
 (let ((?x26404 (- (+ (+ (+ (+ (+ ?x26386 ?x26388) ?x26391) ?x26394) ?x26397) ?x26400) (* (* 2.0 l_0_11_32) l_0_11_37))))
 (let ((?x26410 (- (- ?x26404 (* (* 2.0 l_0_11_33) l_0_11_38)) (* (* 2.0 l_0_11_34) l_0_11_39))))
 (let ((?x26416 (- (- ?x26410 (* (* 2.0 l_0_11_35) l_0_11_40)) (* (* 2.0 l_0_11_36) l_0_11_41))))
 (= (+ (+ (- (- ?x26416 ?x26417) ?x26419) ?x26421) ?x26423) 0.0)))))))))))))))))))
(assert
 (let ((?x25503 (* 2.0 l_0_11_66)))
 (let ((?x26483 (* ?x25503 l_0_11_80)))
 (let ((?x25500 (* 2.0 l_0_11_65)))
 (let ((?x26481 (* ?x25500 l_0_11_79)))
 (let ((?x25495 (* 2.0 l_0_11_45)))
 (let ((?x26479 (* ?x25495 l_0_11_59)))
 (let ((?x25492 (* 2.0 l_0_11_44)))
 (let ((?x26477 (* ?x25492 l_0_11_58)))
 (let ((?x26475 (* l_0_11_42 l_0_11_42)))
 (let ((?x26473 (* l_0_11_41 l_0_11_41)))
 (let ((?x26471 (* l_0_11_40 l_0_11_40)))
 (let ((?x26469 (* l_0_11_39 l_0_11_39)))
 (let ((?x26467 (* l_0_11_38 l_0_11_38)))
 (let ((?x26465 (* l_0_11_37 l_0_11_37)))
 (let ((?x3675 (* l_0_11_126 l_0_11_126)))
 (let ((?x26463 (* 2.0 ?x3675)))
 (let ((?x26015 (* l_0_11_125 l_0_11_125)))
 (let ((?x26461 (* 2.0 ?x26015)))
 (let ((?x26011 (* l_0_11_124 l_0_11_124)))
 (let ((?x26459 (* 2.0 ?x26011)))
 (let ((?x26007 (* l_0_11_123 l_0_11_123)))
 (let ((?x26457 (* 2.0 ?x26007)))
 (let ((?x26004 (* l_0_11_122 l_0_11_122)))
 (let ((?x26455 (* 2.0 ?x26004)))
 (let ((?x26002 (* l_0_11_121 l_0_11_121)))
 (let ((?x26454 (* 2.0 ?x26002)))
 (let ((?x26468 (- (- (+ (+ (+ (+ (+ ?x26454 ?x26455) ?x26457) ?x26459) ?x26461) ?x26463) ?x26465) ?x26467)))
 (let ((?x26482 (+ (- (- (- (- (- (- ?x26468 ?x26469) ?x26471) ?x26473) ?x26475) ?x26477) ?x26479) ?x26481)))
 (= (+ ?x26482 ?x26483) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x2136 (* l_0_11_64 l_0_11_64)))
 (let ((?x25044 (* l_0_11_43 l_0_11_43)))
 (let ((?x26502 (- (* (* (- 2.0) l_0_11_127) l_0_11_142) (* (* 2.0 l_0_11_148) l_0_11_163))))
 (= (+ (- ?x26502 ?x25044) ?x2136) 0.0)))))
(assert
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x26539 (* ?x25047 l_0_11_70)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x26537 (* ?x25196 l_0_11_49)))
 (let ((?x26515 (- (* (* (- 4.0) l_0_11_106) l_0_11_121) (* (* 2.0 l_0_11_133) l_0_11_142))))
 (let ((?x26521 (- (- ?x26515 (* (* 2.0 l_0_11_134) l_0_11_143)) (* (* 2.0 l_0_11_135) l_0_11_144))))
 (let ((?x26527 (- (- ?x26521 (* (* 2.0 l_0_11_136) l_0_11_145)) (* (* 2.0 l_0_11_154) l_0_11_163))))
 (let ((?x26533 (- (- ?x26527 (* (* 2.0 l_0_11_155) l_0_11_164)) (* (* 2.0 l_0_11_156) l_0_11_165))))
 (= (+ (- (- ?x26533 (* (* 2.0 l_0_11_157) l_0_11_166)) ?x26537) ?x26539) 0.0))))))))))
(assert
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x26592 (* ?x25047 l_0_11_74)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x26590 (* ?x25196 l_0_11_53)))
 (let ((?x14255 (- (* (* 2.0 l_0_11_100) l_0_11_85) (* (* 2.0 l_0_11_137) l_0_11_142))))
 (let ((?x14304 (- (- ?x14255 (* (* 2.0 l_0_11_138) l_0_11_143)) (* (* 2.0 l_0_11_139) l_0_11_144))))
 (let ((?x26574 (- (- ?x14304 (* (* 2.0 l_0_11_140) l_0_11_145)) (* (* 2.0 l_0_11_141) l_0_11_146))))
 (let ((?x26580 (- (- ?x26574 (* (* 2.0 l_0_11_158) l_0_11_163)) (* (* 2.0 l_0_11_159) l_0_11_164))))
 (let ((?x26586 (- (- ?x26580 (* (* 2.0 l_0_11_160) l_0_11_165)) (* (* 2.0 l_0_11_161) l_0_11_166))))
 (= (+ (- (- ?x26586 (* (* 2.0 l_0_11_162) l_0_11_167)) ?x26590) ?x26592) 0.0)))))))))))
(assert
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x26649 (* ?x25047 l_0_11_79)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x26647 (* ?x25196 l_0_11_58)))
 (let ((?x26645 (* l_0_11_168 l_0_11_168)))
 (let ((?x26643 (* l_0_11_167 l_0_11_167)))
 (let ((?x26641 (* l_0_11_166 l_0_11_166)))
 (let ((?x26639 (* l_0_11_165 l_0_11_165)))
 (let ((?x26637 (* l_0_11_164 l_0_11_164)))
 (let ((?x26635 (* l_0_11_163 l_0_11_163)))
 (let ((?x26633 (* l_0_11_147 l_0_11_147)))
 (let ((?x26631 (* l_0_11_146 l_0_11_146)))
 (let ((?x26629 (* l_0_11_145 l_0_11_145)))
 (let ((?x26627 (* l_0_11_144 l_0_11_144)))
 (let ((?x26628 (- (- (* (- l_0_11_142) l_0_11_142) (* l_0_11_143 l_0_11_143)) ?x26627)))
 (let ((?x26642 (- (- (- (- (- (- (- ?x26628 ?x26629) ?x26631) ?x26633) ?x26635) ?x26637) ?x26639) ?x26641)))
 (= (+ (- (- (- ?x26642 ?x26643) ?x26645) ?x26647) ?x26649) 0.0))))))))))))))))))
(assert
 (let ((?x26686 (* l_0_11_73 l_0_11_73)))
 (let ((?x26684 (* l_0_11_72 l_0_11_72)))
 (let ((?x26682 (* l_0_11_71 l_0_11_71)))
 (let ((?x26680 (* l_0_11_70 l_0_11_70)))
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x26649 (* ?x25047 l_0_11_79)))
 (let ((?x26677 (* l_0_11_52 l_0_11_52)))
 (let ((?x26675 (* l_0_11_51 l_0_11_51)))
 (let ((?x26673 (* l_0_11_50 l_0_11_50)))
 (let ((?x26671 (* l_0_11_49 l_0_11_49)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x26647 (* ?x25196 l_0_11_58)))
 (let ((?x13981 (* 4.0 l_0_11_115)))
 (let ((?x26323 (* ?x13981 l_0_11_124)))
 (let ((?x13910 (* 4.0 l_0_11_114)))
 (let ((?x26321 (* ?x13910 l_0_11_123)))
 (let ((?x20065 (* 4.0 l_0_11_113)))
 (let ((?x26319 (* ?x20065 l_0_11_122)))
 (let ((?x26670 (+ (- (- (- (* (* (- 4.0) l_0_11_112) l_0_11_121) ?x26319) ?x26321) ?x26323) ?x26647)))
 (let ((?x26683 (+ (+ (- (- (- (- (- ?x26670 ?x26671) ?x26673) ?x26675) ?x26677) ?x26649) ?x26680) ?x26682)))
 (= (+ (+ ?x26683 ?x26684) ?x26686) 0.0))))))))))))))))))))))
(assert
 (let ((?x26746 (* 2.0 l_0_11_73)))
 (let ((?x26747 (* ?x26746 l_0_11_77)))
 (let ((?x26743 (* 2.0 l_0_11_72)))
 (let ((?x26744 (* ?x26743 l_0_11_76)))
 (let ((?x26740 (* 2.0 l_0_11_71)))
 (let ((?x26741 (* ?x26740 l_0_11_75)))
 (let ((?x26737 (* 2.0 l_0_11_70)))
 (let ((?x26738 (* ?x26737 l_0_11_74)))
 (let ((?x26734 (* 2.0 l_0_11_52)))
 (let ((?x26735 (* ?x26734 l_0_11_56)))
 (let ((?x26731 (* 2.0 l_0_11_51)))
 (let ((?x26732 (* ?x26731 l_0_11_55)))
 (let ((?x26728 (* 2.0 l_0_11_50)))
 (let ((?x26729 (* ?x26728 l_0_11_54)))
 (let ((?x26725 (* 2.0 l_0_11_49)))
 (let ((?x26726 (* ?x26725 l_0_11_53)))
 (let ((?x26400 (* (* 4.0 l_0_11_120) l_0_11_125)))
 (let ((?x26397 (* (* 4.0 l_0_11_119) l_0_11_124)))
 (let ((?x26394 (* (* 4.0 l_0_11_118) l_0_11_123)))
 (let ((?x26391 (* (* 4.0 l_0_11_117) l_0_11_122)))
 (let ((?x26388 (* (* 4.0 l_0_11_116) l_0_11_121)))
 (let ((?x26714 (+ (* (* 2.0 l_0_11_100) l_0_11_91) (* (* 2.0 l_0_11_101) l_0_11_92))))
 (let ((?x26719 (+ (+ ?x26714 (* (* 2.0 l_0_11_102) l_0_11_93)) (* (* 2.0 l_0_11_103) l_0_11_94))))
 (let ((?x26730 (- (- (- (- (- (- (- ?x26719 ?x26388) ?x26391) ?x26394) ?x26397) ?x26400) ?x26726) ?x26729)))
 (= (+ (+ (+ (+ (- (- ?x26730 ?x26732) ?x26735) ?x26738) ?x26741) ?x26744) ?x26747) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x26746 (* 2.0 l_0_11_73)))
 (let ((?x26822 (* ?x26746 l_0_11_82)))
 (let ((?x26743 (* 2.0 l_0_11_72)))
 (let ((?x26820 (* ?x26743 l_0_11_81)))
 (let ((?x26740 (* 2.0 l_0_11_71)))
 (let ((?x26818 (* ?x26740 l_0_11_80)))
 (let ((?x26737 (* 2.0 l_0_11_70)))
 (let ((?x26816 (* ?x26737 l_0_11_79)))
 (let ((?x26734 (* 2.0 l_0_11_52)))
 (let ((?x26814 (* ?x26734 l_0_11_61)))
 (let ((?x26731 (* 2.0 l_0_11_51)))
 (let ((?x26812 (* ?x26731 l_0_11_60)))
 (let ((?x26728 (* 2.0 l_0_11_50)))
 (let ((?x26810 (* ?x26728 l_0_11_59)))
 (let ((?x26725 (* 2.0 l_0_11_49)))
 (let ((?x26808 (* ?x26725 l_0_11_58)))
 (let ((?x26785 (- (* (* (- 2.0) l_0_11_121) l_0_11_121) (* (* 2.0 l_0_11_122) l_0_11_122))))
 (let ((?x26801 (- (- ?x26785 (* (* 2.0 l_0_11_123) l_0_11_123)) (* (* 2.0 l_0_11_124) l_0_11_124))))
 (let ((?x26807 (- (- ?x26801 (* (* 2.0 l_0_11_125) l_0_11_125)) (* (* 2.0 l_0_11_126) l_0_11_126))))
 (let ((?x26821 (+ (+ (+ (- (- (- (- ?x26807 ?x26808) ?x26810) ?x26812) ?x26814) ?x26816) ?x26818) ?x26820)))
 (= (+ ?x26821 ?x26822) 0.0))))))))))))))))))))))
(assert
 (let ((?x26873 (* l_0_11_78 l_0_11_78)))
 (let ((?x26871 (* l_0_11_77 l_0_11_77)))
 (let ((?x26869 (* l_0_11_76 l_0_11_76)))
 (let ((?x26867 (* l_0_11_75 l_0_11_75)))
 (let ((?x26865 (* l_0_11_74 l_0_11_74)))
 (let ((?x26863 (* l_0_11_57 l_0_11_57)))
 (let ((?x26861 (* l_0_11_56 l_0_11_56)))
 (let ((?x26859 (* l_0_11_55 l_0_11_55)))
 (let ((?x26857 (* l_0_11_54 l_0_11_54)))
 (let ((?x26855 (* l_0_11_53 l_0_11_53)))
 (let ((?x4946 (+ (* (* 2.0 l_0_11_100) l_0_11_95) (* (* 2.0 l_0_11_101) l_0_11_96))))
 (let ((?x5084 (+ (+ ?x4946 (* (* 2.0 l_0_11_102) l_0_11_97)) (* (* 2.0 l_0_11_103) l_0_11_98))))
 (let ((?x26860 (- (- (- (+ ?x5084 (* (* 2.0 l_0_11_104) l_0_11_99)) ?x26855) ?x26857) ?x26859)))
 (let ((?x26874 (+ (+ (+ (+ (+ (- (- ?x26860 ?x26861) ?x26863) ?x26865) ?x26867) ?x26869) ?x26871) ?x26873)))
 (= ?x26874 0.0))))))))))))))))
(assert
 (let ((?x26947 (* 2.0 l_0_11_78)))
 (let ((?x26948 (* ?x26947 l_0_11_83)))
 (let ((?x26944 (* 2.0 l_0_11_77)))
 (let ((?x26945 (* ?x26944 l_0_11_82)))
 (let ((?x26941 (* 2.0 l_0_11_76)))
 (let ((?x26942 (* ?x26941 l_0_11_81)))
 (let ((?x26938 (* 2.0 l_0_11_75)))
 (let ((?x26939 (* ?x26938 l_0_11_80)))
 (let ((?x26935 (* 2.0 l_0_11_74)))
 (let ((?x26936 (* ?x26935 l_0_11_79)))
 (let ((?x26933 (* (* 2.0 l_0_11_57) l_0_11_62)))
 (let ((?x26930 (* (* 2.0 l_0_11_56) l_0_11_61)))
 (let ((?x26927 (* (* 2.0 l_0_11_55) l_0_11_60)))
 (let ((?x26924 (* (* 2.0 l_0_11_54) l_0_11_59)))
 (let ((?x26921 (* (* 2.0 l_0_11_53) l_0_11_58)))
 (let ((?x26918 (* l_0_11_105 l_0_11_105)))
 (let ((?x26916 (* l_0_11_104 l_0_11_104)))
 (let ((?x26914 (* l_0_11_103 l_0_11_103)))
 (let ((?x26912 (* l_0_11_102 l_0_11_102)))
 (let ((?x26913 (+ (+ (* l_0_11_100 l_0_11_100) (* l_0_11_101 l_0_11_101)) ?x26912)))
 (let ((?x26931 (- (- (- (- (+ (+ (+ ?x26913 ?x26914) ?x26916) ?x26918) ?x26921) ?x26924) ?x26927) ?x26930)))
 (= (+ (+ (+ (+ (+ (- ?x26931 ?x26933) ?x26936) ?x26939) ?x26942) ?x26945) ?x26948) 0.0)))))))))))))))))))))))
(assert
 (let ((?x27002 (* l_0_11_84 l_0_11_84)))
 (let ((?x27000 (* l_0_11_83 l_0_11_83)))
 (let ((?x26998 (* l_0_11_82 l_0_11_82)))
 (let ((?x26996 (* l_0_11_81 l_0_11_81)))
 (let ((?x26994 (* l_0_11_80 l_0_11_80)))
 (let ((?x26992 (* l_0_11_79 l_0_11_79)))
 (let ((?x26990 (* l_0_11_63 l_0_11_63)))
 (let ((?x26988 (* l_0_11_62 l_0_11_62)))
 (let ((?x26986 (* l_0_11_61 l_0_11_61)))
 (let ((?x26971 (* l_0_11_60 l_0_11_60)))
 (let ((?x26972 (- (- (* (- l_0_11_58) l_0_11_58) (* l_0_11_59 l_0_11_59)) ?x26971)))
 (let ((?x26999 (+ (+ (+ (+ (- (- (- ?x26972 ?x26986) ?x26988) ?x26990) ?x26992) ?x26994) ?x26996) ?x26998)))
 (= (+ (+ ?x26999 ?x27000) ?x27002) 0.0))))))))))))))
(assert
 (let ((?x2136 (* l_0_11_64 l_0_11_64)))
 (let ((?x25044 (* l_0_11_43 l_0_11_43)))
 (let ((?x27040 (* l_0_11_157 l_0_11_157)))
 (let ((?x27038 (* l_0_11_156 l_0_11_156)))
 (let ((?x27036 (* l_0_11_155 l_0_11_155)))
 (let ((?x27034 (* l_0_11_154 l_0_11_154)))
 (let ((?x27032 (* l_0_11_136 l_0_11_136)))
 (let ((?x27030 (* l_0_11_135 l_0_11_135)))
 (let ((?x27028 (* l_0_11_134 l_0_11_134)))
 (let ((?x27026 (* l_0_11_133 l_0_11_133)))
 (let ((?x27033 (- (- (- (- (* (* (- 4.0) l_0_11_106) l_0_11_112) ?x27026) ?x27028) ?x27030) ?x27032)))
 (= (- (+ (- (- (- (- ?x27033 ?x27034) ?x27036) ?x27038) ?x27040) ?x25044) ?x2136) 0.0)))))))))))))
(assert
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x26539 (* ?x25047 l_0_11_70)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x26537 (* ?x25196 l_0_11_49)))
 (let ((?x27068 (- (* (* (- 2.0) l_0_11_112) l_0_11_112) (* (* 2.0 l_0_11_113) l_0_11_113))))
 (let ((?x27072 (- (- ?x27068 (* (* 2.0 l_0_11_114) l_0_11_114)) (* (* 2.0 l_0_11_115) l_0_11_115))))
 (= (- (+ ?x27072 ?x26537) ?x26539) 0.0))))))))
(assert
 (let ((?x27101 (* l_0_11_94 l_0_11_94)))
 (let ((?x27099 (* l_0_11_93 l_0_11_93)))
 (let ((?x27097 (* l_0_11_92 l_0_11_92)))
 (let ((?x27095 (* l_0_11_91 l_0_11_91)))
 (let ((?x25047 (* 2.0 l_0_11_64)))
 (let ((?x26592 (* ?x25047 l_0_11_74)))
 (let ((?x25196 (* 2.0 l_0_11_43)))
 (let ((?x26590 (* ?x25196 l_0_11_53)))
 (let ((?x13981 (* 4.0 l_0_11_115)))
 (let ((?x13912 (* ?x13981 l_0_11_119)))
 (let ((?x13910 (* 4.0 l_0_11_114)))
 (let ((?x4169 (* ?x13910 l_0_11_118)))
 (let ((?x20065 (* 4.0 l_0_11_113)))
 (let ((?x20071 (* ?x20065 l_0_11_117)))
 (let ((?x27093 (+ (- (- (- (* (* (- 4.0) l_0_11_112) l_0_11_116) ?x20071) ?x4169) ?x13912) ?x26590)))
 (= (+ (+ (+ (+ (- ?x27093 ?x26592) ?x27095) ?x27097) ?x27099) ?x27101) 0.0)))))))))))))))))
(assert
 (let ((?x26231 (* l_0_11_66 l_0_11_66)))
 (let ((?x26229 (* l_0_11_65 l_0_11_65)))
 (let ((?x27121 (- (- (+ (* l_0_11_44 l_0_11_44) (* l_0_11_45 l_0_11_45)) ?x26229) ?x26231)))
 (= ?x27121 0.0)))))
(assert
 (let ((?x25503 (* 2.0 l_0_11_66)))
 (let ((?x25504 (* ?x25503 l_0_11_68)))
 (let ((?x25500 (* 2.0 l_0_11_65)))
 (let ((?x25501 (* ?x25500 l_0_11_67)))
 (let ((?x26677 (* l_0_11_52 l_0_11_52)))
 (let ((?x5178 (* 2.0 ?x26677)))
 (let ((?x26675 (* l_0_11_51 l_0_11_51)))
 (let ((?x5149 (* 2.0 ?x26675)))
 (let ((?x26673 (* l_0_11_50 l_0_11_50)))
 (let ((?x5175 (* 2.0 ?x26673)))
 (let ((?x26671 (* l_0_11_49 l_0_11_49)))
 (let ((?x5227 (* 2.0 ?x26671)))
 (let ((?x25495 (* 2.0 l_0_11_45)))
 (let ((?x25496 (* ?x25495 l_0_11_47)))
 (let ((?x25492 (* 2.0 l_0_11_44)))
 (let ((?x25493 (* ?x25492 l_0_11_46)))
 (let ((?x20634 (- (- (+ (+ (+ (+ (+ ?x25493 ?x25496) ?x5227) ?x5175) ?x5149) ?x5178) ?x25501) ?x25504)))
 (let ((?x20633 (- (- ?x20634 (* (* 2.0 l_0_11_70) l_0_11_70)) (* (* 2.0 l_0_11_71) l_0_11_71))))
 (let ((?x27128 (- (- ?x20633 (* (* 2.0 l_0_11_72) l_0_11_72)) (* (* 2.0 l_0_11_73) l_0_11_73))))
 (let ((?x27134 (- (- ?x27128 (* (* 2.0 l_0_11_91) l_0_11_91)) (* (* 2.0 l_0_11_92) l_0_11_92))))
 (let ((?x27140 (- (- ?x27134 (* (* 2.0 l_0_11_93) l_0_11_93)) (* (* 2.0 l_0_11_94) l_0_11_94))))
 (= ?x27140 0.0)))))))))))))))))))))))
(assert
 (let ((?x25503 (* 2.0 l_0_11_66)))
 (let ((?x26339 (* ?x25503 l_0_11_71)))
 (let ((?x25500 (* 2.0 l_0_11_65)))
 (let ((?x26337 (* ?x25500 l_0_11_70)))
 (let ((?x25495 (* 2.0 l_0_11_45)))
 (let ((?x26335 (* ?x25495 l_0_11_50)))
 (let ((?x25492 (* 2.0 l_0_11_44)))
 (let ((?x26333 (* ?x25492 l_0_11_49)))
 (= (- (- (+ ?x26333 ?x26335) ?x26337) ?x26339) 0.0))))))))))
(assert
 (let ((?x25503 (* 2.0 l_0_11_66)))
 (let ((?x26423 (* ?x25503 l_0_11_75)))
 (let ((?x25500 (* 2.0 l_0_11_65)))
 (let ((?x26421 (* ?x25500 l_0_11_74)))
 (let ((?x25495 (* 2.0 l_0_11_45)))
 (let ((?x26419 (* ?x25495 l_0_11_54)))
 (let ((?x25492 (* 2.0 l_0_11_44)))
 (let ((?x26417 (* ?x25492 l_0_11_53)))
 (= (- (- (+ ?x26417 ?x26419) ?x26421) ?x26423) 0.0))))))))))
(assert
 (let ((?x25503 (* 2.0 l_0_11_66)))
 (let ((?x26483 (* ?x25503 l_0_11_80)))
 (let ((?x25500 (* 2.0 l_0_11_65)))
 (let ((?x26481 (* ?x25500 l_0_11_79)))
 (let ((?x25495 (* 2.0 l_0_11_45)))
 (let ((?x26479 (* ?x25495 l_0_11_59)))
 (let ((?x25492 (* 2.0 l_0_11_44)))
 (let ((?x26477 (* ?x25492 l_0_11_58)))
 (= (- (- (+ ?x26477 ?x26479) ?x26481) ?x26483) 0.0))))))))))
(assert
 (let ((?x25661 (* l_0_11_69 l_0_11_69)))
 (let ((?x25659 (* l_0_11_68 l_0_11_68)))
 (let ((?x25657 (* l_0_11_67 l_0_11_67)))
 (let ((?x25655 (* l_0_11_48 l_0_11_48)))
 (let ((?x27152 (- (+ (+ (* l_0_11_46 l_0_11_46) (* l_0_11_47 l_0_11_47)) ?x25655) ?x25657)))
 (= (- (- ?x27152 ?x25659) ?x25661) 0.0)))))))
(assert
 (let ((?x25814 (* 2.0 l_0_11_69)))
 (let ((?x25815 (* ?x25814 l_0_11_72)))
 (let ((?x25811 (* 2.0 l_0_11_68)))
 (let ((?x25812 (* ?x25811 l_0_11_71)))
 (let ((?x25808 (* 2.0 l_0_11_67)))
 (let ((?x25809 (* ?x25808 l_0_11_70)))
 (let ((?x25805 (* 2.0 l_0_11_48)))
 (let ((?x25806 (* ?x25805 l_0_11_51)))
 (let ((?x25802 (* 2.0 l_0_11_47)))
 (let ((?x25803 (* ?x25802 l_0_11_50)))
 (let ((?x25799 (* 2.0 l_0_11_46)))
 (let ((?x25800 (* ?x25799 l_0_11_49)))
 (= (- (- (- (+ (+ ?x25800 ?x25803) ?x25806) ?x25809) ?x25812) ?x25815) 0.0))))))))))))))
(assert
 (let ((?x25814 (* 2.0 l_0_11_69)))
 (let ((?x25932 (* ?x25814 l_0_11_76)))
 (let ((?x25811 (* 2.0 l_0_11_68)))
 (let ((?x25930 (* ?x25811 l_0_11_75)))
 (let ((?x25808 (* 2.0 l_0_11_67)))
 (let ((?x25928 (* ?x25808 l_0_11_74)))
 (let ((?x25805 (* 2.0 l_0_11_48)))
 (let ((?x25926 (* ?x25805 l_0_11_55)))
 (let ((?x25802 (* 2.0 l_0_11_47)))
 (let ((?x25924 (* ?x25802 l_0_11_54)))
 (let ((?x25799 (* 2.0 l_0_11_46)))
 (let ((?x25922 (* ?x25799 l_0_11_53)))
 (= (- (- (- (+ (+ ?x25922 ?x25924) ?x25926) ?x25928) ?x25930) ?x25932) 0.0))))))))))))))
(assert
 (let ((?x25814 (* 2.0 l_0_11_69)))
 (let ((?x25999 (* ?x25814 l_0_11_81)))
 (let ((?x25811 (* 2.0 l_0_11_68)))
 (let ((?x25997 (* ?x25811 l_0_11_80)))
 (let ((?x25808 (* 2.0 l_0_11_67)))
 (let ((?x25995 (* ?x25808 l_0_11_79)))
 (let ((?x25805 (* 2.0 l_0_11_48)))
 (let ((?x25993 (* ?x25805 l_0_11_60)))
 (let ((?x25802 (* 2.0 l_0_11_47)))
 (let ((?x25991 (* ?x25802 l_0_11_59)))
 (let ((?x25799 (* 2.0 l_0_11_46)))
 (let ((?x25989 (* ?x25799 l_0_11_58)))
 (= (- (- (- (+ (+ ?x25989 ?x25991) ?x25993) ?x25995) ?x25997) ?x25999) 0.0))))))))))))))
(assert
 (let ((?x26686 (* l_0_11_73 l_0_11_73)))
 (let ((?x26684 (* l_0_11_72 l_0_11_72)))
 (let ((?x26682 (* l_0_11_71 l_0_11_71)))
 (let ((?x26680 (* l_0_11_70 l_0_11_70)))
 (let ((?x26677 (* l_0_11_52 l_0_11_52)))
 (let ((?x26675 (* l_0_11_51 l_0_11_51)))
 (let ((?x5716 (+ (+ (+ (* l_0_11_49 l_0_11_49) (* l_0_11_50 l_0_11_50)) ?x26675) ?x26677)))
 (= (- (- (- (- ?x5716 ?x26680) ?x26682) ?x26684) ?x26686) 0.0)))))))))
(assert
 (let ((?x26746 (* 2.0 l_0_11_73)))
 (let ((?x26747 (* ?x26746 l_0_11_77)))
 (let ((?x26743 (* 2.0 l_0_11_72)))
 (let ((?x26744 (* ?x26743 l_0_11_76)))
 (let ((?x26740 (* 2.0 l_0_11_71)))
 (let ((?x26741 (* ?x26740 l_0_11_75)))
 (let ((?x26737 (* 2.0 l_0_11_70)))
 (let ((?x26738 (* ?x26737 l_0_11_74)))
 (let ((?x26734 (* 2.0 l_0_11_52)))
 (let ((?x26735 (* ?x26734 l_0_11_56)))
 (let ((?x26731 (* 2.0 l_0_11_51)))
 (let ((?x26732 (* ?x26731 l_0_11_55)))
 (let ((?x26728 (* 2.0 l_0_11_50)))
 (let ((?x26729 (* ?x26728 l_0_11_54)))
 (let ((?x26725 (* 2.0 l_0_11_49)))
 (let ((?x26726 (* ?x26725 l_0_11_53)))
 (let ((?x27181 (- (- (- (- (+ (+ (+ ?x26726 ?x26729) ?x26732) ?x26735) ?x26738) ?x26741) ?x26744) ?x26747)))
 (= ?x27181 0.0)))))))))))))))))))
(assert
 (let ((?x26746 (* 2.0 l_0_11_73)))
 (let ((?x26822 (* ?x26746 l_0_11_82)))
 (let ((?x26743 (* 2.0 l_0_11_72)))
 (let ((?x26820 (* ?x26743 l_0_11_81)))
 (let ((?x26740 (* 2.0 l_0_11_71)))
 (let ((?x26818 (* ?x26740 l_0_11_80)))
 (let ((?x26737 (* 2.0 l_0_11_70)))
 (let ((?x26816 (* ?x26737 l_0_11_79)))
 (let ((?x26734 (* 2.0 l_0_11_52)))
 (let ((?x26814 (* ?x26734 l_0_11_61)))
 (let ((?x26731 (* 2.0 l_0_11_51)))
 (let ((?x26812 (* ?x26731 l_0_11_60)))
 (let ((?x26728 (* 2.0 l_0_11_50)))
 (let ((?x26810 (* ?x26728 l_0_11_59)))
 (let ((?x26725 (* 2.0 l_0_11_49)))
 (let ((?x26808 (* ?x26725 l_0_11_58)))
 (let ((?x27187 (- (- (- (- (+ (+ (+ ?x26808 ?x26810) ?x26812) ?x26814) ?x26816) ?x26818) ?x26820) ?x26822)))
 (= ?x27187 0.0)))))))))))))))))))
(assert
 (let ((?x26873 (* l_0_11_78 l_0_11_78)))
 (let ((?x26871 (* l_0_11_77 l_0_11_77)))
 (let ((?x26869 (* l_0_11_76 l_0_11_76)))
 (let ((?x26867 (* l_0_11_75 l_0_11_75)))
 (let ((?x26865 (* l_0_11_74 l_0_11_74)))
 (let ((?x26863 (* l_0_11_57 l_0_11_57)))
 (let ((?x26861 (* l_0_11_56 l_0_11_56)))
 (let ((?x26859 (* l_0_11_55 l_0_11_55)))
 (let ((?x14987 (+ (+ (+ (* l_0_11_53 l_0_11_53) (* l_0_11_54 l_0_11_54)) ?x26859) ?x26861)))
 (= (- (- (- (- (- (+ ?x14987 ?x26863) ?x26865) ?x26867) ?x26869) ?x26871) ?x26873) 0.0)))))))))))
(assert
 (let ((?x26947 (* 2.0 l_0_11_78)))
 (let ((?x26948 (* ?x26947 l_0_11_83)))
 (let ((?x26944 (* 2.0 l_0_11_77)))
 (let ((?x26945 (* ?x26944 l_0_11_82)))
 (let ((?x26941 (* 2.0 l_0_11_76)))
 (let ((?x26942 (* ?x26941 l_0_11_81)))
 (let ((?x26938 (* 2.0 l_0_11_75)))
 (let ((?x26939 (* ?x26938 l_0_11_80)))
 (let ((?x26935 (* 2.0 l_0_11_74)))
 (let ((?x26936 (* ?x26935 l_0_11_79)))
 (let ((?x26933 (* (* 2.0 l_0_11_57) l_0_11_62)))
 (let ((?x26930 (* (* 2.0 l_0_11_56) l_0_11_61)))
 (let ((?x26927 (* (* 2.0 l_0_11_55) l_0_11_60)))
 (let ((?x26924 (* (* 2.0 l_0_11_54) l_0_11_59)))
 (let ((?x26921 (* (* 2.0 l_0_11_53) l_0_11_58)))
 (let ((?x20955 (- (- (- (+ (+ (+ (+ ?x26921 ?x26924) ?x26927) ?x26930) ?x26933) ?x26936) ?x26939) ?x26942)))
 (= (- (- ?x20955 ?x26945) ?x26948) 0.0))))))))))))))))))
(assert
 (let ((?x27002 (* l_0_11_84 l_0_11_84)))
 (let ((?x27000 (* l_0_11_83 l_0_11_83)))
 (let ((?x26998 (* l_0_11_82 l_0_11_82)))
 (let ((?x26996 (* l_0_11_81 l_0_11_81)))
 (let ((?x26994 (* l_0_11_80 l_0_11_80)))
 (let ((?x26992 (* l_0_11_79 l_0_11_79)))
 (let ((?x26990 (* l_0_11_63 l_0_11_63)))
 (let ((?x26988 (* l_0_11_62 l_0_11_62)))
 (let ((?x26986 (* l_0_11_61 l_0_11_61)))
 (let ((?x26971 (* l_0_11_60 l_0_11_60)))
 (let ((?x5894 (+ (+ (+ (* l_0_11_58 l_0_11_58) (* l_0_11_59 l_0_11_59)) ?x26971) ?x26986)))
 (let ((?x5959 (- (- (- (- (- (+ (+ ?x5894 ?x26988) ?x26990) ?x26992) ?x26994) ?x26996) ?x26998) ?x27000)))
 (= (- ?x5959 ?x27002) 0.0))))))))))))))
(assert
 (let ((?x21061 (+ (* 2.0 (* l_0_11_44 l_0_11_44)) (* 2.0 (* l_0_11_45 l_0_11_45)))))
 (let ((?x21050 (- (- ?x21061 (* (* 2.0 l_0_11_65) l_0_11_65)) (* (* 2.0 l_0_11_66) l_0_11_66))))
 (let ((?x5969 (- (- ?x21050 (* (* 2.0 l_0_11_86) l_0_11_86)) (* (* 2.0 l_0_11_87) l_0_11_87))))
 (= ?x5969 0.0)))))
(assert
 (let ((?x27202 (+ (* (* 4.0 l_0_11_44) l_0_11_46) (* (* 4.0 l_0_11_45) l_0_11_47))))
 (let ((?x27208 (- (- ?x27202 (* (* 4.0 l_0_11_65) l_0_11_67)) (* (* 4.0 l_0_11_66) l_0_11_68))))
 (let ((?x27214 (- (- ?x27208 (* (* 4.0 l_0_11_86) l_0_11_88)) (* (* 4.0 l_0_11_87) l_0_11_89))))
 (= ?x27214 0.0)))))
(assert
 (let ((?x27235 (+ (* (* 4.0 l_0_11_44) l_0_11_49) (* (* 4.0 l_0_11_45) l_0_11_50))))
 (let ((?x27239 (- (- ?x27235 (* (* 4.0 l_0_11_65) l_0_11_70)) (* (* 4.0 l_0_11_66) l_0_11_71))))
 (let ((?x27243 (- (- ?x27239 (* (* 4.0 l_0_11_86) l_0_11_91)) (* (* 4.0 l_0_11_87) l_0_11_92))))
 (= ?x27243 0.0)))))
(assert
 (let ((?x21144 (+ (* (* 4.0 l_0_11_44) l_0_11_53) (* (* 4.0 l_0_11_45) l_0_11_54))))
 (let ((?x21155 (- (- ?x21144 (* (* 4.0 l_0_11_65) l_0_11_74)) (* (* 4.0 l_0_11_66) l_0_11_75))))
 (let ((?x27255 (- (- ?x21155 (* (* 4.0 l_0_11_86) l_0_11_95)) (* (* 4.0 l_0_11_87) l_0_11_96))))
 (= ?x27255 0.0)))))
(assert
 (let ((?x27284 (- (* (* (- 4.0) l_0_11_100) l_0_11_86) (* (* 4.0 l_0_11_101) l_0_11_87))))
 (let ((?x27288 (+ (+ ?x27284 (* (* 4.0 l_0_11_44) l_0_11_58)) (* (* 4.0 l_0_11_45) l_0_11_59))))
 (let ((?x27292 (- (- ?x27288 (* (* 4.0 l_0_11_65) l_0_11_79)) (* (* 4.0 l_0_11_66) l_0_11_80))))
 (= ?x27292 0.0)))))
(assert
 (let ((?x27308 (+ (* 2.0 (* l_0_11_46 l_0_11_46)) (* 2.0 (* l_0_11_47 l_0_11_47)))))
 (let ((?x27312 (- (+ ?x27308 (* 2.0 (* l_0_11_48 l_0_11_48))) (* (* 2.0 l_0_11_67) l_0_11_67))))
 (let ((?x27316 (- (- ?x27312 (* (* 2.0 l_0_11_68) l_0_11_68)) (* (* 2.0 l_0_11_69) l_0_11_69))))
 (let ((?x27320 (- (- ?x27316 (* (* 2.0 l_0_11_88) l_0_11_88)) (* (* 2.0 l_0_11_89) l_0_11_89))))
 (= (- ?x27320 (* (* 2.0 l_0_11_90) l_0_11_90)) 0.0))))))
(assert
 (let ((?x27348 (+ (* (* 4.0 l_0_11_46) l_0_11_49) (* (* 4.0 l_0_11_47) l_0_11_50))))
 (let ((?x27354 (- (+ ?x27348 (* (* 4.0 l_0_11_48) l_0_11_51)) (* (* 4.0 l_0_11_67) l_0_11_70))))
 (let ((?x27360 (- (- ?x27354 (* (* 4.0 l_0_11_68) l_0_11_71)) (* (* 4.0 l_0_11_69) l_0_11_72))))
 (let ((?x27366 (- (- ?x27360 (* (* 4.0 l_0_11_88) l_0_11_91)) (* (* 4.0 l_0_11_89) l_0_11_92))))
 (= (- ?x27366 (* (* 4.0 l_0_11_90) l_0_11_93)) 0.0))))))
(assert
 (let ((?x27399 (+ (* (* 4.0 l_0_11_46) l_0_11_53) (* (* 4.0 l_0_11_47) l_0_11_54))))
 (let ((?x27403 (- (+ ?x27399 (* (* 4.0 l_0_11_48) l_0_11_55)) (* (* 4.0 l_0_11_67) l_0_11_74))))
 (let ((?x27407 (- (- ?x27403 (* (* 4.0 l_0_11_68) l_0_11_75)) (* (* 4.0 l_0_11_69) l_0_11_76))))
 (let ((?x27411 (- (- ?x27407 (* (* 4.0 l_0_11_88) l_0_11_95)) (* (* 4.0 l_0_11_89) l_0_11_96))))
 (= (- ?x27411 (* (* 4.0 l_0_11_90) l_0_11_97)) 0.0))))))
(assert
 (let ((?x27436 (- (* (* (- 4.0) l_0_11_100) l_0_11_88) (* (* 4.0 l_0_11_101) l_0_11_89))))
 (let ((?x27441 (+ (- ?x27436 (* (* 4.0 l_0_11_102) l_0_11_90)) (* (* 4.0 l_0_11_46) l_0_11_58))))
 (let ((?x27445 (+ (+ ?x27441 (* (* 4.0 l_0_11_47) l_0_11_59)) (* (* 4.0 l_0_11_48) l_0_11_60))))
 (let ((?x27449 (- (- ?x27445 (* (* 4.0 l_0_11_67) l_0_11_79)) (* (* 4.0 l_0_11_68) l_0_11_80))))
 (= (- ?x27449 (* (* 4.0 l_0_11_69) l_0_11_81)) 0.0))))))
(assert
 (let ((?x27482 (+ (* (* 4.0 l_0_11_49) l_0_11_53) (* (* 4.0 l_0_11_50) l_0_11_54))))
 (let ((?x27488 (+ (+ ?x27482 (* (* 4.0 l_0_11_51) l_0_11_55)) (* (* 4.0 l_0_11_52) l_0_11_56))))
 (let ((?x27494 (- (- ?x27488 (* (* 4.0 l_0_11_70) l_0_11_74)) (* (* 4.0 l_0_11_71) l_0_11_75))))
 (let ((?x27500 (- (- ?x27494 (* (* 4.0 l_0_11_72) l_0_11_76)) (* (* 4.0 l_0_11_73) l_0_11_77))))
 (let ((?x27506 (- (- ?x27500 (* (* 4.0 l_0_11_91) l_0_11_95)) (* (* 4.0 l_0_11_92) l_0_11_96))))
 (let ((?x27512 (- (- ?x27506 (* (* 4.0 l_0_11_93) l_0_11_97)) (* (* 4.0 l_0_11_94) l_0_11_98))))
 (= ?x27512 0.0))))))))
(assert
 (let ((?x14883 (- (* (* (- 4.0) l_0_11_100) l_0_11_91) (* (* 4.0 l_0_11_101) l_0_11_92))))
 (let ((?x27540 (- (- ?x14883 (* (* 4.0 l_0_11_102) l_0_11_93)) (* (* 4.0 l_0_11_103) l_0_11_94))))
 (let ((?x27544 (+ (+ ?x27540 (* (* 4.0 l_0_11_49) l_0_11_58)) (* (* 4.0 l_0_11_50) l_0_11_59))))
 (let ((?x27548 (+ (+ ?x27544 (* (* 4.0 l_0_11_51) l_0_11_60)) (* (* 4.0 l_0_11_52) l_0_11_61))))
 (let ((?x27552 (- (- ?x27548 (* (* 4.0 l_0_11_70) l_0_11_79)) (* (* 4.0 l_0_11_71) l_0_11_80))))
 (let ((?x27556 (- (- ?x27552 (* (* 4.0 l_0_11_72) l_0_11_81)) (* (* 4.0 l_0_11_73) l_0_11_82))))
 (= ?x27556 0.0))))))))
(assert
 (let ((?x27588 (+ (* 2.0 (* l_0_11_53 l_0_11_53)) (* 2.0 (* l_0_11_54 l_0_11_54)))))
 (let ((?x27592 (+ (+ ?x27588 (* 2.0 (* l_0_11_55 l_0_11_55))) (* 2.0 (* l_0_11_56 l_0_11_56)))))
 (let ((?x27596 (- (+ ?x27592 (* 2.0 (* l_0_11_57 l_0_11_57))) (* (* 2.0 l_0_11_74) l_0_11_74))))
 (let ((?x27600 (- (- ?x27596 (* (* 2.0 l_0_11_75) l_0_11_75)) (* (* 2.0 l_0_11_76) l_0_11_76))))
 (let ((?x27604 (- (- ?x27600 (* (* 2.0 l_0_11_77) l_0_11_77)) (* (* 2.0 l_0_11_78) l_0_11_78))))
 (let ((?x27610 (- (- ?x27604 (* (* 2.0 l_0_11_95) l_0_11_95)) (* (* 2.0 l_0_11_96) l_0_11_96))))
 (let ((?x27616 (- (- ?x27610 (* (* 2.0 l_0_11_97) l_0_11_97)) (* (* 2.0 l_0_11_98) l_0_11_98))))
 (= (- ?x27616 (* (* 2.0 l_0_11_99) l_0_11_99)) 0.0)))))))))
(assert
 (let ((?x27655 (- (* (* (- 4.0) l_0_11_100) l_0_11_95) (* (* 4.0 l_0_11_101) l_0_11_96))))
 (let ((?x27659 (- (- ?x27655 (* (* 4.0 l_0_11_102) l_0_11_97)) (* (* 4.0 l_0_11_103) l_0_11_98))))
 (let ((?x27665 (+ (- ?x27659 (* (* 4.0 l_0_11_104) l_0_11_99)) (* (* 4.0 l_0_11_53) l_0_11_58))))
 (let ((?x27671 (+ (+ ?x27665 (* (* 4.0 l_0_11_54) l_0_11_59)) (* (* 4.0 l_0_11_55) l_0_11_60))))
 (let ((?x27677 (+ (+ ?x27671 (* (* 4.0 l_0_11_56) l_0_11_61)) (* (* 4.0 l_0_11_57) l_0_11_62))))
 (let ((?x27683 (- (- ?x27677 (* (* 4.0 l_0_11_74) l_0_11_79)) (* (* 4.0 l_0_11_75) l_0_11_80))))
 (let ((?x27689 (- (- ?x27683 (* (* 4.0 l_0_11_76) l_0_11_81)) (* (* 4.0 l_0_11_77) l_0_11_82))))
 (= (- ?x27689 (* (* 4.0 l_0_11_78) l_0_11_83)) 0.0)))))))))
(assert
 (let ((?x27733 (- (* (* (- 2.0) l_0_11_100) l_0_11_100) (* (* 2.0 l_0_11_101) l_0_11_101))))
 (let ((?x27737 (- (- ?x27733 (* (* 2.0 l_0_11_102) l_0_11_102)) (* (* 2.0 l_0_11_103) l_0_11_103))))
 (let ((?x27742 (- (- ?x27737 (* (* 2.0 l_0_11_104) l_0_11_104)) (* (* 2.0 l_0_11_105) l_0_11_105))))
 (let ((?x27746 (+ (+ ?x27742 (* 2.0 (* l_0_11_58 l_0_11_58))) (* 2.0 (* l_0_11_59 l_0_11_59)))))
 (let ((?x27750 (+ (+ ?x27746 (* 2.0 (* l_0_11_60 l_0_11_60))) (* 2.0 (* l_0_11_61 l_0_11_61)))))
 (let ((?x27754 (+ (+ ?x27750 (* 2.0 (* l_0_11_62 l_0_11_62))) (* 2.0 (* l_0_11_63 l_0_11_63)))))
 (let ((?x27760 (- (- ?x27754 (* (* 2.0 l_0_11_79) l_0_11_79)) (* (* 2.0 l_0_11_80) l_0_11_80))))
 (let ((?x27766 (- (- ?x27760 (* (* 2.0 l_0_11_81) l_0_11_81)) (* (* 2.0 l_0_11_82) l_0_11_82))))
 (let ((?x27772 (- (- ?x27766 (* (* 2.0 l_0_11_83) l_0_11_83)) (* (* 2.0 l_0_11_84) l_0_11_84))))
 (= ?x27772 0.0)))))))))))
(assert
 (let ((?x25087 (* l_0_11_85 l_0_11_85)))
 (let ((?x27827 (- (* (* (- 2.0) l_0_11_127) l_0_11_137) (* (* 2.0 l_0_11_148) l_0_11_158))))
 (= (+ ?x27827 ?x25087) 0.0))))
(assert
 (let ((?x27839 (- (* (* (- 4.0) l_0_11_106) l_0_11_116) (* (* 2.0 l_0_11_133) l_0_11_137))))
 (let ((?x27843 (- (- ?x27839 (* (* 2.0 l_0_11_134) l_0_11_138)) (* (* 2.0 l_0_11_135) l_0_11_139))))
 (let ((?x27847 (- (- ?x27843 (* (* 2.0 l_0_11_136) l_0_11_140)) (* (* 2.0 l_0_11_154) l_0_11_158))))
 (let ((?x27851 (- (- ?x27847 (* (* 2.0 l_0_11_155) l_0_11_159)) (* (* 2.0 l_0_11_156) l_0_11_160))))
 (let ((?x27855 (+ (- ?x27851 (* (* 2.0 l_0_11_157) l_0_11_161)) (* (* 2.0 l_0_11_85) l_0_11_91))))
 (= ?x27855 0.0)))))))
(assert
 (let ((?x27890 (* l_0_11_162 l_0_11_162)))
 (let ((?x27888 (* l_0_11_161 l_0_11_161)))
 (let ((?x27886 (* l_0_11_160 l_0_11_160)))
 (let ((?x27884 (* l_0_11_159 l_0_11_159)))
 (let ((?x27882 (* l_0_11_158 l_0_11_158)))
 (let ((?x27880 (* l_0_11_141 l_0_11_141)))
 (let ((?x15419 (* l_0_11_140 l_0_11_140)))
 (let ((?x7042 (* l_0_11_139 l_0_11_139)))
 (let ((?x15418 (- (- (* (- l_0_11_137) l_0_11_137) (* l_0_11_138 l_0_11_138)) ?x7042)))
 (let ((?x27891 (- (- (- (- (- (- (- ?x15418 ?x15419) ?x27880) ?x27882) ?x27884) ?x27886) ?x27888) ?x27890)))
 (= (+ ?x27891 (* (* 2.0 l_0_11_85) l_0_11_95)) 0.0))))))))))))
(assert
 (let ((?x27918 (- (* (* (- 2.0) l_0_11_116) l_0_11_116) (* (* 2.0 l_0_11_117) l_0_11_117))))
 (let ((?x27922 (- (- ?x27918 (* (* 2.0 l_0_11_118) l_0_11_118)) (* (* 2.0 l_0_11_119) l_0_11_119))))
 (let ((?x27926 (+ (- ?x27922 (* (* 2.0 l_0_11_120) l_0_11_120)) (* (* 2.0 l_0_11_91) l_0_11_95))))
 (let ((?x27930 (+ (+ ?x27926 (* (* 2.0 l_0_11_92) l_0_11_96)) (* (* 2.0 l_0_11_93) l_0_11_97))))
 (= (+ ?x27930 (* (* 2.0 l_0_11_94) l_0_11_98)) 0.0))))))
(assert
 (let ((?x15191 (* l_0_11_99 l_0_11_99)))
 (let ((?x6787 (* l_0_11_98 l_0_11_98)))
 (let ((?x15184 (* l_0_11_97 l_0_11_97)))
 (let ((?x7091 (+ (+ (+ (* l_0_11_95 l_0_11_95) (* l_0_11_96 l_0_11_96)) ?x15184) ?x6787)))
 (= (+ ?x7091 ?x15191) 0.0))))))
(assert
 (let ((?x27950 (- (* (* (- 2.0) l_0_11_106) l_0_11_106) (* (* 2.0 l_0_11_127) l_0_11_133))))
 (= (- ?x27950 (* (* 2.0 l_0_11_148) l_0_11_154)) 0.0)))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_22 0.0))
(assert
 (>= l_0_11_24 0.0))
(assert
 (>= l_0_11_27 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_36 0.0))
(assert
 (>= l_0_11_42 0.0))
(assert
 (>= l_0_11_43 0.0))
(assert
 (>= l_0_11_45 0.0))
(assert
 (>= l_0_11_48 0.0))
(assert
 (>= l_0_11_52 0.0))
(assert
 (>= l_0_11_57 0.0))
(assert
 (>= l_0_11_63 0.0))
(assert
 (>= l_0_11_64 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_69 0.0))
(assert
 (>= l_0_11_73 0.0))
(assert
 (>= l_0_11_78 0.0))
(assert
 (>= l_0_11_84 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_87 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_94 0.0))
(assert
 (>= l_0_11_99 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (>= l_0_11_106 0.0))
(assert
 (>= l_0_11_108 0.0))
(assert
 (>= l_0_11_111 0.0))
(assert
 (>= l_0_11_115 0.0))
(assert
 (>= l_0_11_120 0.0))
(assert
 (>= l_0_11_126 0.0))
(assert
 (>= l_0_11_127 0.0))
(assert
 (>= l_0_11_129 0.0))
(assert
 (>= l_0_11_132 0.0))
(assert
 (>= l_0_11_136 0.0))
(assert
 (>= l_0_11_141 0.0))
(assert
 (>= l_0_11_147 0.0))
(assert
 (>= l_0_11_148 0.0))
(assert
 (>= l_0_11_150 0.0))
(assert
 (>= l_0_11_153 0.0))
(assert
 (>= l_0_11_157 0.0))
(assert
 (>= l_0_11_162 0.0))
(assert
 (>= l_0_11_168 0.0))
(assert
 (let ((?x28024 (* l_0_12_64 l_0_12_64)))
 (let ((?x28022 (* l_0_12_43 l_0_12_43)))
 (let ((?x28018 (- (* (* (- 2.0) l_0_12_127) l_0_12_142) (* (* 2.0 l_0_12_148) l_0_12_163))))
 (let ((?x28026 (+ (+ (- (- ?x28018 (* (* 2.0 l_0_12_169) l_0_12_184)) ?x28022) ?x28024) 1.0)))
 (= ?x28026 0.0))))))
(assert
 (let ((?x28024 (* l_0_12_64 l_0_12_64)))
 (let ((?x28022 (* l_0_12_43 l_0_12_43)))
 (let ((?x28060 (* l_0_12_178 l_0_12_178)))
 (let ((?x28058 (* l_0_12_177 l_0_12_177)))
 (let ((?x28056 (* l_0_12_176 l_0_12_176)))
 (let ((?x28054 (* l_0_12_175 l_0_12_175)))
 (let ((?x28052 (* l_0_12_157 l_0_12_157)))
 (let ((?x28050 (* l_0_12_156 l_0_12_156)))
 (let ((?x28048 (* l_0_12_155 l_0_12_155)))
 (let ((?x28046 (* l_0_12_154 l_0_12_154)))
 (let ((?x28044 (* l_0_12_136 l_0_12_136)))
 (let ((?x28042 (* l_0_12_135 l_0_12_135)))
 (let ((?x7112 (* l_0_12_134 l_0_12_134)))
 (let ((?x15534 (* l_0_12_133 l_0_12_133)))
 (let ((?x28045 (- (- (- (- (* (* (- 4.0) l_0_12_106) l_0_12_112) ?x15534) ?x7112) ?x28042) ?x28044)))
 (let ((?x28059 (- (- (- (- (- (- (- ?x28045 ?x28046) ?x28048) ?x28050) ?x28052) ?x28054) ?x28056) ?x28058)))
 (= (- (- (+ (- ?x28059 ?x28060) ?x28022) ?x28024) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x21453 (- (- (* (- 1.0) _a_6_) (* l_0_12_1 l_0_12_1)) (* (* 1.0 l_0_12_106) l_0_12_106))))
 (let ((?x28081 (- (- ?x21453 (* (* 2.0 l_0_12_127) l_0_12_130)) (* (* 2.0 l_0_12_148) l_0_12_151))))
 (= (- ?x28081 (* (* 2.0 l_0_12_169) l_0_12_172)) 0.0))))
(assert
 (let ((?x28093 (* 4.0 l_0_12_106)))
 (let ((?x28094 (* ?x28093 l_0_12_109)))
 (let ((?x7254 (- (- (* (- 1.0) _a_7_) (* (* 2.0 l_0_12_1) l_0_12_2)) (* (* 2.0 l_0_12_106) l_0_12_107))))
 (let ((?x28101 (- (- (+ ?x7254 ?x28094) (* (* 2.0 l_0_12_128) l_0_12_130)) (* (* 2.0 l_0_12_129) l_0_12_131))))
 (let ((?x28107 (- (- ?x28101 (* (* 2.0 l_0_12_149) l_0_12_151)) (* (* 2.0 l_0_12_150) l_0_12_152))))
 (let ((?x28113 (- (- ?x28107 (* (* 2.0 l_0_12_170) l_0_12_172)) (* (* 2.0 l_0_12_171) l_0_12_173))))
 (let ((?x28118 (+ (- ?x28113 (* (* 2.0 l_0_12_22) l_0_12_25)) (* 2.0 (* l_0_12_43 l_0_12_43)))))
 (let ((?x28124 (- (- ?x28118 (* (* 2.0 l_0_12_64) l_0_12_64)) (* (* 2.0 l_0_12_85) l_0_12_85))))
 (= ?x28124 0.0))))))))))
(assert
 (let ((?x28166 (* l_0_12_174 l_0_12_174)))
 (let ((?x28164 (* l_0_12_173 l_0_12_173)))
 (let ((?x28162 (* l_0_12_172 l_0_12_172)))
 (let ((?x28160 (* l_0_12_153 l_0_12_153)))
 (let ((?x28158 (* l_0_12_152 l_0_12_152)))
 (let ((?x28156 (* l_0_12_151 l_0_12_151)))
 (let ((?x28154 (* l_0_12_132 l_0_12_132)))
 (let ((?x28152 (* l_0_12_131 l_0_12_131)))
 (let ((?x28150 (* l_0_12_130 l_0_12_130)))
 (let ((?x28149 (- (* (* (- 2.0) l_0_12_1) l_0_12_4) (* (* 2.0 l_0_12_106) l_0_12_109))))
 (let ((?x28163 (- (- (- (- (- (- (- ?x28149 ?x28150) ?x28152) ?x28154) ?x28156) ?x28158) ?x28160) ?x28162)))
 (= (- (- ?x28163 ?x28164) ?x28166) 0.0)))))))))))))
(assert
 (let ((?x28093 (* 4.0 l_0_12_106)))
 (let ((?x28094 (* ?x28093 l_0_12_109)))
 (let ((?x28185 (- (- (* (* (- 2.0) l_0_12_1) l_0_12_7) ?x28094) (* (* 2.0 l_0_12_106) l_0_12_112))))
 (let ((?x28191 (- (- ?x28185 (* (* 2.0 l_0_12_130) l_0_12_133)) (* (* 2.0 l_0_12_131) l_0_12_134))))
 (let ((?x28197 (- (- ?x28191 (* (* 2.0 l_0_12_132) l_0_12_135)) (* (* 2.0 l_0_12_151) l_0_12_154))))
 (let ((?x28203 (- (- ?x28197 (* (* 2.0 l_0_12_152) l_0_12_155)) (* (* 2.0 l_0_12_153) l_0_12_156))))
 (let ((?x28209 (- (- ?x28203 (* (* 2.0 l_0_12_172) l_0_12_175)) (* (* 2.0 l_0_12_173) l_0_12_176))))
 (= (- ?x28209 (* (* 2.0 l_0_12_174) l_0_12_177)) 0.0)))))))))
(assert
 (let ((?x28236 (- (* (* (- 2.0) l_0_12_1) l_0_12_11) (* (* 2.0 l_0_12_106) l_0_12_116))))
 (let ((?x28240 (- (- ?x28236 (* (* 2.0 l_0_12_130) l_0_12_137)) (* (* 2.0 l_0_12_131) l_0_12_138))))
 (let ((?x28244 (- (- ?x28240 (* (* 2.0 l_0_12_132) l_0_12_139)) (* (* 2.0 l_0_12_151) l_0_12_158))))
 (let ((?x28248 (- (- ?x28244 (* (* 2.0 l_0_12_152) l_0_12_159)) (* (* 2.0 l_0_12_153) l_0_12_160))))
 (let ((?x28252 (- (- ?x28248 (* (* 2.0 l_0_12_172) l_0_12_179)) (* (* 2.0 l_0_12_173) l_0_12_180))))
 (let ((?x28256 (+ (- ?x28252 (* (* 2.0 l_0_12_174) l_0_12_181)) (* (* 2.0 l_0_12_85) l_0_12_88))))
 (= ?x28256 0.0))))))))
(assert
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x28304 (* ?x28119 l_0_12_67)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x28302 (* ?x28301 l_0_12_46)))
 (let ((?x28282 (- (* (* (- 2.0) l_0_12_1) l_0_12_16) (* (* 2.0 l_0_12_106) l_0_12_121))))
 (let ((?x28286 (- (- ?x28282 (* (* 2.0 l_0_12_130) l_0_12_142)) (* (* 2.0 l_0_12_131) l_0_12_143))))
 (let ((?x28290 (- (- ?x28286 (* (* 2.0 l_0_12_132) l_0_12_144)) (* (* 2.0 l_0_12_151) l_0_12_163))))
 (let ((?x28294 (- (- ?x28290 (* (* 2.0 l_0_12_152) l_0_12_164)) (* (* 2.0 l_0_12_153) l_0_12_165))))
 (let ((?x28298 (- (- ?x28294 (* (* 2.0 l_0_12_172) l_0_12_184)) (* (* 2.0 l_0_12_173) l_0_12_185))))
 (= (+ (- (- ?x28298 (* (* 2.0 l_0_12_174) l_0_12_186)) ?x28302) ?x28304) 0.0)))))))))))
(assert
 (let ((?x28358 (* l_0_12_3 l_0_12_3)))
 (let ((?x28350 (* l_0_12_2 l_0_12_2)))
 (let ((?x28344 (* 4.0 l_0_12_108)))
 (let ((?x28345 (* ?x28344 l_0_12_110)))
 (let ((?x28343 (- (* (* 4.0 l_0_12_107) l_0_12_109) (* (* 1.0 l_0_12_107) l_0_12_107))))
 (let ((?x28354 (- (- (- (+ ?x28343 ?x28345) (* (* 1.0 l_0_12_108) l_0_12_108)) ?x28350) (* (* 2.0 l_0_12_23) l_0_12_25))))
 (let ((?x28362 (+ (- (- ?x28354 (* (* 2.0 l_0_12_24) l_0_12_26)) ?x28358) (* (* 4.0 l_0_12_43) l_0_12_44))))
 (let ((?x28368 (- (- ?x28362 (* (* 4.0 l_0_12_64) l_0_12_65)) (* (* 4.0 l_0_12_85) l_0_12_86))))
 (= ?x28368 0.0))))))))))
(assert
 (let ((?x28403 (* l_0_12_27 l_0_12_27)))
 (let ((?x28401 (* l_0_12_26 l_0_12_26)))
 (let ((?x28399 (* l_0_12_25 l_0_12_25)))
 (let ((?x28393 (* l_0_12_111 l_0_12_111)))
 (let ((?x28394 (* 2.0 ?x28393)))
 (let ((?x28390 (* l_0_12_110 l_0_12_110)))
 (let ((?x28391 (* 2.0 ?x28390)))
 (let ((?x28387 (* l_0_12_109 l_0_12_109)))
 (let ((?x28388 (* 2.0 ?x28387)))
 (let ((?x28386 (- (* (* (- 2.0) l_0_12_107) l_0_12_109) (* (* 2.0 l_0_12_108) l_0_12_110))))
 (let ((?x28398 (- (+ (+ (+ ?x28386 ?x28388) ?x28391) ?x28394) (* (* 2.0 l_0_12_2) l_0_12_4))))
 (let ((?x28407 (- (- (- (- ?x28398 ?x28399) ?x28401) ?x28403) (* (* 2.0 l_0_12_3) l_0_12_5))))
 (let ((?x28411 (- (+ ?x28407 (* (* 4.0 l_0_12_43) l_0_12_46)) (* (* 4.0 l_0_12_64) l_0_12_67))))
 (= (- ?x28411 (* (* 4.0 l_0_12_85) l_0_12_88)) 0.0)))))))))))))))
(assert
 (let ((?x28438 (* 4.0 l_0_12_111)))
 (let ((?x28439 (* ?x28438 l_0_12_114)))
 (let ((?x28435 (* 4.0 l_0_12_110)))
 (let ((?x28436 (* ?x28435 l_0_12_113)))
 (let ((?x28432 (* 4.0 l_0_12_109)))
 (let ((?x28433 (* ?x28432 l_0_12_112)))
 (let ((?x28344 (* 4.0 l_0_12_108)))
 (let ((?x28345 (* ?x28344 l_0_12_110)))
 (let ((?x21951 (- (* (* (- 4.0) l_0_12_107) l_0_12_109) (* (* 2.0 l_0_12_107) l_0_12_112))))
 (let ((?x28437 (+ (+ (- (- ?x21951 ?x28345) (* (* 2.0 l_0_12_108) l_0_12_113)) ?x28433) ?x28436)))
 (let ((?x28445 (- (- (+ ?x28437 ?x28439) (* (* 2.0 l_0_12_2) l_0_12_7)) (* (* 2.0 l_0_12_25) l_0_12_28))))
 (let ((?x28451 (- (- ?x28445 (* (* 2.0 l_0_12_26) l_0_12_29)) (* (* 2.0 l_0_12_27) l_0_12_30))))
 (let ((?x28455 (+ (- ?x28451 (* (* 2.0 l_0_12_3) l_0_12_8)) (* (* 4.0 l_0_12_43) l_0_12_49))))
 (let ((?x28459 (- (- ?x28455 (* (* 4.0 l_0_12_64) l_0_12_70)) (* (* 4.0 l_0_12_85) l_0_12_91))))
 (= ?x28459 0.0))))))))))))))))
(assert
 (let ((?x28438 (* 4.0 l_0_12_111)))
 (let ((?x28524 (* ?x28438 l_0_12_118)))
 (let ((?x28435 (* 4.0 l_0_12_110)))
 (let ((?x28522 (* ?x28435 l_0_12_117)))
 (let ((?x28432 (* 4.0 l_0_12_109)))
 (let ((?x28517 (* ?x28432 l_0_12_116)))
 (let ((?x28516 (- (* (* (- 2.0) l_0_12_107) l_0_12_116) (* (* 2.0 l_0_12_108) l_0_12_117))))
 (let ((?x28525 (+ (+ (- (+ ?x28516 ?x28517) (* (* 2.0 l_0_12_11) l_0_12_2)) ?x28522) ?x28524)))
 (let ((?x28530 (- (- ?x28525 (* (* 2.0 l_0_12_12) l_0_12_3)) (* (* 2.0 l_0_12_25) l_0_12_32))))
 (let ((?x28534 (- (- ?x28530 (* (* 2.0 l_0_12_26) l_0_12_33)) (* (* 2.0 l_0_12_27) l_0_12_34))))
 (let ((?x28538 (- (+ ?x28534 (* (* 4.0 l_0_12_43) l_0_12_53)) (* (* 4.0 l_0_12_64) l_0_12_74))))
 (let ((?x28543 (+ (- ?x28538 (* (* 4.0 l_0_12_85) l_0_12_95)) (* (* 2.0 l_0_12_86) l_0_12_88))))
 (= (+ ?x28543 (* (* 2.0 l_0_12_87) l_0_12_89)) 0.0))))))))))))))
(assert
 (let ((?x28636 (* 2.0 l_0_12_66)))
 (let ((?x28637 (* ?x28636 l_0_12_68)))
 (let ((?x28633 (* 2.0 l_0_12_65)))
 (let ((?x28634 (* ?x28633 l_0_12_67)))
 (let ((?x28628 (* 2.0 l_0_12_45)))
 (let ((?x28629 (* ?x28628 l_0_12_47)))
 (let ((?x28625 (* 2.0 l_0_12_44)))
 (let ((?x28626 (* ?x28625 l_0_12_46)))
 (let ((?x28438 (* 4.0 l_0_12_111)))
 (let ((?x28609 (* ?x28438 l_0_12_123)))
 (let ((?x28435 (* 4.0 l_0_12_110)))
 (let ((?x28607 (* ?x28435 l_0_12_122)))
 (let ((?x28432 (* 4.0 l_0_12_109)))
 (let ((?x28605 (* ?x28432 l_0_12_121)))
 (let ((?x28602 (- (* (* (- 4.0) l_0_12_100) l_0_12_85) (* (* 2.0 l_0_12_107) l_0_12_121))))
 (let ((?x28610 (+ (+ (+ (- ?x28602 (* (* 2.0 l_0_12_108) l_0_12_122)) ?x28605) ?x28607) ?x28609)))
 (let ((?x28616 (- (- ?x28610 (* (* 2.0 l_0_12_16) l_0_12_2)) (* (* 2.0 l_0_12_17) l_0_12_3))))
 (let ((?x28620 (- (- ?x28616 (* (* 2.0 l_0_12_25) l_0_12_37)) (* (* 2.0 l_0_12_26) l_0_12_38))))
 (let ((?x28624 (+ (- ?x28620 (* (* 2.0 l_0_12_27) l_0_12_39)) (* (* 4.0 l_0_12_43) l_0_12_58))))
 (let ((?x28635 (+ (- (- (- ?x28624 ?x28626) ?x28629) (* (* 4.0 l_0_12_64) l_0_12_79)) ?x28634)))
 (= (+ ?x28635 ?x28637) 0.0))))))))))))))))))))))
(assert
 (let ((?x28683 (* l_0_12_6 l_0_12_6)))
 (let ((?x28681 (* l_0_12_5 l_0_12_5)))
 (let ((?x28679 (* l_0_12_4 l_0_12_4)))
 (let ((?x28675 (- (* (* (- 1.0) l_0_12_109) l_0_12_109) (* (* 1.0 l_0_12_110) l_0_12_110))))
 (let ((?x28684 (- (- (- (- ?x28675 (* (* 1.0 l_0_12_111) l_0_12_111)) ?x28679) ?x28681) ?x28683)))
 (= ?x28684 0.0)))))))
(assert
 (let ((?x28701 (- (* (* (- 2.0) l_0_12_109) l_0_12_112) (* (* 2.0 l_0_12_109) l_0_12_109))))
 (let ((?x28706 (- (- ?x28701 (* (* 2.0 l_0_12_110) l_0_12_113)) (* (* 2.0 l_0_12_110) l_0_12_110))))
 (let ((?x28711 (- (- ?x28706 (* (* 2.0 l_0_12_111) l_0_12_114)) (* (* 2.0 l_0_12_111) l_0_12_111))))
 (let ((?x28717 (- (- ?x28711 (* (* 2.0 l_0_12_4) l_0_12_7)) (* (* 2.0 l_0_12_5) l_0_12_8))))
 (= (- ?x28717 (* (* 2.0 l_0_12_6) l_0_12_9)) 0.0))))))
(assert
 (let ((?x28754 (* l_0_12_90 l_0_12_90)))
 (let ((?x28752 (* l_0_12_89 l_0_12_89)))
 (let ((?x28750 (* l_0_12_88 l_0_12_88)))
 (let ((?x28740 (- (* (* (- 2.0) l_0_12_109) l_0_12_116) (* (* 2.0 l_0_12_11) l_0_12_4))))
 (let ((?x28744 (- (- ?x28740 (* (* 2.0 l_0_12_110) l_0_12_117)) (* (* 2.0 l_0_12_111) l_0_12_118))))
 (let ((?x28749 (- (- ?x28744 (* (* 2.0 l_0_12_12) l_0_12_5)) (* (* 2.0 l_0_12_13) l_0_12_6))))
 (= (+ (+ (+ ?x28749 ?x28750) ?x28752) ?x28754) 0.0))))))))
(assert
 (let ((?x28779 (* l_0_12_69 l_0_12_69)))
 (let ((?x28777 (* l_0_12_68 l_0_12_68)))
 (let ((?x28775 (* l_0_12_67 l_0_12_67)))
 (let ((?x28773 (* l_0_12_48 l_0_12_48)))
 (let ((?x28771 (* l_0_12_47 l_0_12_47)))
 (let ((?x28769 (* l_0_12_46 l_0_12_46)))
 (let ((?x8042 (- (* (* (- 2.0) l_0_12_109) l_0_12_121) (* (* 2.0 l_0_12_110) l_0_12_122))))
 (let ((?x22252 (- (- ?x8042 (* (* 2.0 l_0_12_111) l_0_12_123)) (* (* 2.0 l_0_12_16) l_0_12_4))))
 (let ((?x28768 (- (- ?x22252 (* (* 2.0 l_0_12_17) l_0_12_5)) (* (* 2.0 l_0_12_18) l_0_12_6))))
 (= (+ (+ (+ (- (- (- ?x28768 ?x28769) ?x28771) ?x28773) ?x28775) ?x28777) ?x28779) 0.0)))))))))))
(assert
 (let ((?x28824 (* l_0_12_9 l_0_12_9)))
 (let ((?x28822 (* l_0_12_8 l_0_12_8)))
 (let ((?x28820 (* l_0_12_7 l_0_12_7)))
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x28304 (* ?x28119 l_0_12_67)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x28302 (* ?x28301 l_0_12_46)))
 (let ((?x28438 (* 4.0 l_0_12_111)))
 (let ((?x28439 (* ?x28438 l_0_12_114)))
 (let ((?x28435 (* 4.0 l_0_12_110)))
 (let ((?x28436 (* ?x28435 l_0_12_113)))
 (let ((?x28432 (* 4.0 l_0_12_109)))
 (let ((?x28433 (* ?x28432 l_0_12_112)))
 (let ((?x28808 (- (- (- (- (* (- l_0_12_10) l_0_12_10) ?x28433) ?x28436) ?x28439) (* (* 1.0 l_0_12_112) l_0_12_112))))
 (let ((?x28814 (- (- ?x28808 (* (* 1.0 l_0_12_113) l_0_12_113)) (* (* 1.0 l_0_12_114) l_0_12_114))))
 (let ((?x28821 (- (- (+ (- ?x28814 (* (* 1.0 l_0_12_115) l_0_12_115)) ?x28302) ?x28304) ?x28820)))
 (= (- (- ?x28821 ?x28822) ?x28824) 0.0))))))))))))))))))
(assert
 (let ((?x28438 (* 4.0 l_0_12_111)))
 (let ((?x28524 (* ?x28438 l_0_12_118)))
 (let ((?x28435 (* 4.0 l_0_12_110)))
 (let ((?x28522 (* ?x28435 l_0_12_117)))
 (let ((?x28432 (* 4.0 l_0_12_109)))
 (let ((?x28517 (* ?x28432 l_0_12_116)))
 (let ((?x16387 (- (- (* (* (- 2.0) l_0_12_10) l_0_12_14) ?x28517) (* (* 2.0 l_0_12_11) l_0_12_7))))
 (let ((?x28849 (- (- (- (- ?x16387 ?x28522) ?x28524) (* (* 2.0 l_0_12_112) l_0_12_116)) (* (* 2.0 l_0_12_113) l_0_12_117))))
 (let ((?x28855 (- (- ?x28849 (* (* 2.0 l_0_12_114) l_0_12_118)) (* (* 2.0 l_0_12_115) l_0_12_119))))
 (let ((?x28859 (- (- ?x28855 (* (* 2.0 l_0_12_12) l_0_12_8)) (* (* 2.0 l_0_12_13) l_0_12_9))))
 (let ((?x28865 (+ (+ ?x28859 (* (* 2.0 l_0_12_88) l_0_12_91)) (* (* 2.0 l_0_12_89) l_0_12_92))))
 (= (+ ?x28865 (* (* 2.0 l_0_12_90) l_0_12_93)) 0.0)))))))))))))
(assert
 (let ((?x28917 (* 2.0 l_0_12_69)))
 (let ((?x28918 (* ?x28917 l_0_12_72)))
 (let ((?x28914 (* 2.0 l_0_12_68)))
 (let ((?x28915 (* ?x28914 l_0_12_71)))
 (let ((?x28911 (* 2.0 l_0_12_67)))
 (let ((?x28912 (* ?x28911 l_0_12_70)))
 (let ((?x28908 (* 2.0 l_0_12_48)))
 (let ((?x28909 (* ?x28908 l_0_12_51)))
 (let ((?x28905 (* 2.0 l_0_12_47)))
 (let ((?x28906 (* ?x28905 l_0_12_50)))
 (let ((?x28902 (* 2.0 l_0_12_46)))
 (let ((?x28903 (* ?x28902 l_0_12_49)))
 (let ((?x28438 (* 4.0 l_0_12_111)))
 (let ((?x28609 (* ?x28438 l_0_12_123)))
 (let ((?x28435 (* 4.0 l_0_12_110)))
 (let ((?x28607 (* ?x28435 l_0_12_122)))
 (let ((?x28432 (* 4.0 l_0_12_109)))
 (let ((?x28605 (* ?x28432 l_0_12_121)))
 (let ((?x28889 (- (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_19) ?x28605) ?x28607) ?x28609) (* (* 2.0 l_0_12_112) l_0_12_121))))
 (let ((?x28893 (- (- ?x28889 (* (* 2.0 l_0_12_113) l_0_12_122)) (* (* 2.0 l_0_12_114) l_0_12_123))))
 (let ((?x28897 (- (- ?x28893 (* (* 2.0 l_0_12_115) l_0_12_124)) (* (* 2.0 l_0_12_16) l_0_12_7))))
 (let ((?x28901 (- (- ?x28897 (* (* 2.0 l_0_12_17) l_0_12_8)) (* (* 2.0 l_0_12_18) l_0_12_9))))
 (= (+ (+ (+ (- (- (- ?x28901 ?x28903) ?x28906) ?x28909) ?x28912) ?x28915) ?x28918) 0.0))))))))))))))))))))))))
(assert
 (let ((?x28958 (* l_0_12_15 l_0_12_15)))
 (let ((?x28956 (* l_0_12_14 l_0_12_14)))
 (let ((?x28954 (* l_0_12_13 l_0_12_13)))
 (let ((?x28949 (* l_0_12_12 l_0_12_12)))
 (let ((?x28939 (- (* (- l_0_12_11) l_0_12_11) (* (* 1.0 l_0_12_116) l_0_12_116))))
 (let ((?x28945 (- (- ?x28939 (* (* 1.0 l_0_12_117) l_0_12_117)) (* (* 1.0 l_0_12_118) l_0_12_118))))
 (let ((?x28953 (- (- (- ?x28945 (* (* 1.0 l_0_12_119) l_0_12_119)) ?x28949) (* (* 1.0 l_0_12_120) l_0_12_120))))
 (let ((?x28961 (+ (- (- (- ?x28953 ?x28954) ?x28956) ?x28958) (* (* 2.0 l_0_12_88) l_0_12_95))))
 (let ((?x28965 (+ (+ ?x28961 (* (* 2.0 l_0_12_89) l_0_12_96)) (* (* 2.0 l_0_12_90) l_0_12_97))))
 (= ?x28965 0.0)))))))))))
(assert
 (let ((?x28917 (* 2.0 l_0_12_69)))
 (let ((?x29027 (* ?x28917 l_0_12_76)))
 (let ((?x28914 (* 2.0 l_0_12_68)))
 (let ((?x29025 (* ?x28914 l_0_12_75)))
 (let ((?x28911 (* 2.0 l_0_12_67)))
 (let ((?x29023 (* ?x28911 l_0_12_74)))
 (let ((?x28908 (* 2.0 l_0_12_48)))
 (let ((?x29021 (* ?x28908 l_0_12_55)))
 (let ((?x28905 (* 2.0 l_0_12_47)))
 (let ((?x29019 (* ?x28905 l_0_12_54)))
 (let ((?x28902 (* 2.0 l_0_12_46)))
 (let ((?x29017 (* ?x28902 l_0_12_53)))
 (let ((?x8581 (+ (* (* 2.0 l_0_12_100) l_0_12_88) (* (* 2.0 l_0_12_101) l_0_12_89))))
 (let ((?x28991 (- (+ ?x8581 (* (* 2.0 l_0_12_102) l_0_12_90)) (* (* 2.0 l_0_12_11) l_0_12_16))))
 (let ((?x28997 (- (- ?x28991 (* (* 2.0 l_0_12_116) l_0_12_121)) (* (* 2.0 l_0_12_117) l_0_12_122))))
 (let ((?x29003 (- (- ?x28997 (* (* 2.0 l_0_12_118) l_0_12_123)) (* (* 2.0 l_0_12_119) l_0_12_124))))
 (let ((?x29008 (- (- ?x29003 (* (* 2.0 l_0_12_12) l_0_12_17)) (* (* 2.0 l_0_12_120) l_0_12_125))))
 (let ((?x29013 (- (- ?x29008 (* (* 2.0 l_0_12_13) l_0_12_18)) (* (* 2.0 l_0_12_14) l_0_12_19))))
 (let ((?x29022 (- (- (- (- ?x29013 (* (* 2.0 l_0_12_15) l_0_12_20)) ?x29017) ?x29019) ?x29021)))
 (= (+ (+ (+ ?x29022 ?x29023) ?x29025) ?x29027) 0.0)))))))))))))))))))))
(assert
 (let ((?x28917 (* 2.0 l_0_12_69)))
 (let ((?x29102 (* ?x28917 l_0_12_81)))
 (let ((?x28914 (* 2.0 l_0_12_68)))
 (let ((?x29100 (* ?x28914 l_0_12_80)))
 (let ((?x28911 (* 2.0 l_0_12_67)))
 (let ((?x29098 (* ?x28911 l_0_12_79)))
 (let ((?x28908 (* 2.0 l_0_12_48)))
 (let ((?x29096 (* ?x28908 l_0_12_60)))
 (let ((?x28905 (* 2.0 l_0_12_47)))
 (let ((?x29094 (* ?x28905 l_0_12_59)))
 (let ((?x28902 (* 2.0 l_0_12_46)))
 (let ((?x29092 (* ?x28902 l_0_12_58)))
 (let ((?x29090 (* l_0_12_21 l_0_12_21)))
 (let ((?x29088 (* l_0_12_20 l_0_12_20)))
 (let ((?x29086 (* l_0_12_19 l_0_12_19)))
 (let ((?x29084 (* l_0_12_18 l_0_12_18)))
 (let ((?x29082 (* l_0_12_17 l_0_12_17)))
 (let ((?x29080 (* l_0_12_16 l_0_12_16)))
 (let ((?x29067 (- (* (* (- 1.0) l_0_12_121) l_0_12_121) (* (* 1.0 l_0_12_122) l_0_12_122))))
 (let ((?x29073 (- (- ?x29067 (* (* 1.0 l_0_12_123) l_0_12_123)) (* (* 1.0 l_0_12_124) l_0_12_124))))
 (let ((?x29079 (- (- ?x29073 (* (* 1.0 l_0_12_125) l_0_12_125)) (* (* 1.0 l_0_12_126) l_0_12_126))))
 (let ((?x29093 (- (- (- (- (- (- (- ?x29079 ?x29080) ?x29082) ?x29084) ?x29086) ?x29088) ?x29090) ?x29092)))
 (= (+ (+ (+ (- (- ?x29093 ?x29094) ?x29096) ?x29098) ?x29100) ?x29102) 0.0))))))))))))))))))))))))
(assert
 (let ((?x29140 (* l_0_12_22 l_0_12_22)))
 (let ((?x21460 (* l_0_12_106 l_0_12_106)))
 (let ((?x8930 (* 2.0 ?x21460)))
 (let ((?x29137 (- (- ?x8930 (* (* 2.0 l_0_12_127) l_0_12_128)) (* (* 2.0 l_0_12_148) l_0_12_149))))
 (= (- (- ?x29137 (* (* 2.0 l_0_12_169) l_0_12_170)) ?x29140) 0.0))))))
(assert
 (let ((?x29168 (* l_0_12_171 l_0_12_171)))
 (let ((?x29166 (* l_0_12_170 l_0_12_170)))
 (let ((?x29164 (* l_0_12_150 l_0_12_150)))
 (let ((?x29162 (* l_0_12_149 l_0_12_149)))
 (let ((?x29160 (* l_0_12_129 l_0_12_129)))
 (let ((?x29158 (* l_0_12_128 l_0_12_128)))
 (let ((?x29165 (- (- (- (- (* (* 4.0 l_0_12_106) l_0_12_107) ?x29158) ?x29160) ?x29162) ?x29164)))
 (= (- (- (- ?x29165 ?x29166) ?x29168) (* (* 2.0 l_0_12_22) l_0_12_23)) 0.0)))))))))
(assert
 (let ((?x16935 (+ (* (* (- 4.0) l_0_12_106) l_0_12_107) (* (* 4.0 l_0_12_106) l_0_12_112))))
 (let ((?x16911 (- (- ?x16935 (* (* 2.0 l_0_12_128) l_0_12_133)) (* (* 2.0 l_0_12_129) l_0_12_134))))
 (let ((?x29185 (- (- ?x16911 (* (* 2.0 l_0_12_149) l_0_12_154)) (* (* 2.0 l_0_12_150) l_0_12_155))))
 (let ((?x29189 (- (- ?x29185 (* (* 2.0 l_0_12_170) l_0_12_175)) (* (* 2.0 l_0_12_171) l_0_12_176))))
 (= (- ?x29189 (* (* 2.0 l_0_12_22) l_0_12_28)) 0.0))))))
(assert
 (let ((?x29208 (- (* (* 4.0 l_0_12_106) l_0_12_116) (* (* 2.0 l_0_12_128) l_0_12_137))))
 (let ((?x29212 (- (- ?x29208 (* (* 2.0 l_0_12_129) l_0_12_138)) (* (* 2.0 l_0_12_149) l_0_12_158))))
 (let ((?x29216 (- (- ?x29212 (* (* 2.0 l_0_12_150) l_0_12_159)) (* (* 2.0 l_0_12_170) l_0_12_179))))
 (let ((?x29220 (- (- ?x29216 (* (* 2.0 l_0_12_171) l_0_12_180)) (* (* 2.0 l_0_12_22) l_0_12_32))))
 (= (+ ?x29220 (* (* 2.0 l_0_12_85) l_0_12_86)) 0.0))))))
(assert
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x29264 (* ?x28119 l_0_12_65)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x29262 (* ?x28301 l_0_12_44)))
 (let ((?x29249 (- (* (* 4.0 l_0_12_106) l_0_12_121) (* (* 2.0 l_0_12_128) l_0_12_142))))
 (let ((?x29253 (- (- ?x29249 (* (* 2.0 l_0_12_129) l_0_12_143)) (* (* 2.0 l_0_12_149) l_0_12_163))))
 (let ((?x29257 (- (- ?x29253 (* (* 2.0 l_0_12_150) l_0_12_164)) (* (* 2.0 l_0_12_170) l_0_12_184))))
 (let ((?x29261 (- (- ?x29257 (* (* 2.0 l_0_12_171) l_0_12_185)) (* (* 2.0 l_0_12_22) l_0_12_37))))
 (= (+ (- ?x29261 ?x29262) ?x29264) 0.0))))))))))
(assert
 (let ((?x29300 (* l_0_12_24 l_0_12_24)))
 (let ((?x29298 (* l_0_12_23 l_0_12_23)))
 (let ((?x21855 (* l_0_12_108 l_0_12_108)))
 (let ((?x22923 (* 2.0 ?x21855)))
 (let ((?x28372 (* l_0_12_107 l_0_12_107)))
 (let ((?x17067 (* 2.0 ?x28372)))
 (= (- (- (+ ?x17067 ?x22923) ?x29298) ?x29300) 0.0))))))))
(assert
 (let ((?x28344 (* 4.0 l_0_12_108)))
 (let ((?x29308 (* ?x28344 l_0_12_113)))
 (let ((?x29307 (- (* (* 4.0 l_0_12_107) l_0_12_112) (* (* 2.0 l_0_12_107) l_0_12_107))))
 (let ((?x29313 (- (- (+ ?x29307 ?x29308) (* (* 2.0 l_0_12_108) l_0_12_108)) (* (* 2.0 l_0_12_23) l_0_12_28))))
 (= (- ?x29313 (* (* 2.0 l_0_12_24) l_0_12_29)) 0.0))))))
(assert
 (let ((?x29344 (* l_0_12_87 l_0_12_87)))
 (let ((?x29342 (* l_0_12_86 l_0_12_86)))
 (let ((?x28344 (* 4.0 l_0_12_108)))
 (let ((?x29336 (* ?x28344 l_0_12_117)))
 (let ((?x29339 (- (+ (* (* 4.0 l_0_12_107) l_0_12_116) ?x29336) (* (* 2.0 l_0_12_23) l_0_12_32))))
 (= (+ (+ (- ?x29339 (* (* 2.0 l_0_12_24) l_0_12_33)) ?x29342) ?x29344) 0.0)))))))
(assert
 (let ((?x29374 (* l_0_12_66 l_0_12_66)))
 (let ((?x29372 (* l_0_12_65 l_0_12_65)))
 (let ((?x29370 (* l_0_12_45 l_0_12_45)))
 (let ((?x29368 (* l_0_12_44 l_0_12_44)))
 (let ((?x28344 (* 4.0 l_0_12_108)))
 (let ((?x29362 (* ?x28344 l_0_12_122)))
 (let ((?x29365 (- (+ (* (* 4.0 l_0_12_107) l_0_12_121) ?x29362) (* (* 2.0 l_0_12_23) l_0_12_37))))
 (let ((?x29373 (+ (- (- (- ?x29365 (* (* 2.0 l_0_12_24) l_0_12_38)) ?x29368) ?x29370) ?x29372)))
 (= (+ ?x29373 ?x29374) 0.0))))))))))
(assert
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x29264 (* ?x28119 l_0_12_65)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x29262 (* ?x28301 l_0_12_44)))
 (let ((?x29395 (* l_0_12_31 l_0_12_31)))
 (let ((?x29393 (* l_0_12_30 l_0_12_30)))
 (let ((?x22938 (* l_0_12_29 l_0_12_29)))
 (let ((?x9467 (* l_0_12_28 l_0_12_28)))
 (let ((?x28834 (* l_0_12_115 l_0_12_115)))
 (let ((?x22915 (* 2.0 ?x28834)))
 (let ((?x22330 (* l_0_12_114 l_0_12_114)))
 (let ((?x22920 (* 2.0 ?x22330)))
 (let ((?x16333 (* l_0_12_113 l_0_12_113)))
 (let ((?x22924 (* 2.0 ?x16333)))
 (let ((?x22327 (* l_0_12_112 l_0_12_112)))
 (let ((?x9393 (* 2.0 ?x22327)))
 (let ((?x28344 (* 4.0 l_0_12_108)))
 (let ((?x29308 (* ?x28344 l_0_12_113)))
 (let ((?x9308 (+ (+ (+ (- (* (* (- 4.0) l_0_12_107) l_0_12_112) ?x29308) ?x9393) ?x22924) ?x22920)))
 (let ((?x29398 (- (+ (- (- (- (- (+ ?x9308 ?x22915) ?x9467) ?x22938) ?x29393) ?x29395) ?x29262) ?x29264)))
 (= ?x29398 0.0))))))))))))))))))))))
(assert
 (let ((?x29416 (* 4.0 l_0_12_115)))
 (let ((?x29417 (* ?x29416 l_0_12_119)))
 (let ((?x29413 (* 4.0 l_0_12_114)))
 (let ((?x29414 (* ?x29413 l_0_12_118)))
 (let ((?x29410 (* 4.0 l_0_12_113)))
 (let ((?x29411 (* ?x29410 l_0_12_117)))
 (let ((?x28344 (* 4.0 l_0_12_108)))
 (let ((?x29336 (* ?x28344 l_0_12_117)))
 (let ((?x29409 (+ (- (* (* (- 4.0) l_0_12_107) l_0_12_116) ?x29336) (* (* 4.0 l_0_12_112) l_0_12_116))))
 (let ((?x29421 (- (+ (+ (+ ?x29409 ?x29411) ?x29414) ?x29417) (* (* 2.0 l_0_12_28) l_0_12_32))))
 (let ((?x29427 (- (- ?x29421 (* (* 2.0 l_0_12_29) l_0_12_33)) (* (* 2.0 l_0_12_30) l_0_12_34))))
 (let ((?x29432 (+ (- ?x29427 (* (* 2.0 l_0_12_31) l_0_12_35)) (* (* 2.0 l_0_12_86) l_0_12_91))))
 (= (+ ?x29432 (* (* 2.0 l_0_12_87) l_0_12_92)) 0.0))))))))))))))
(assert
 (let ((?x28636 (* 2.0 l_0_12_66)))
 (let ((?x29486 (* ?x28636 l_0_12_71)))
 (let ((?x28633 (* 2.0 l_0_12_65)))
 (let ((?x29484 (* ?x28633 l_0_12_70)))
 (let ((?x28628 (* 2.0 l_0_12_45)))
 (let ((?x29482 (* ?x28628 l_0_12_50)))
 (let ((?x28625 (* 2.0 l_0_12_44)))
 (let ((?x29480 (* ?x28625 l_0_12_49)))
 (let ((?x29416 (* 4.0 l_0_12_115)))
 (let ((?x29470 (* ?x29416 l_0_12_124)))
 (let ((?x29413 (* 4.0 l_0_12_114)))
 (let ((?x29468 (* ?x29413 l_0_12_123)))
 (let ((?x29410 (* 4.0 l_0_12_113)))
 (let ((?x29466 (* ?x29410 l_0_12_122)))
 (let ((?x28344 (* 4.0 l_0_12_108)))
 (let ((?x29362 (* ?x28344 l_0_12_122)))
 (let ((?x29465 (+ (- (* (* (- 4.0) l_0_12_107) l_0_12_121) ?x29362) (* (* 4.0 l_0_12_112) l_0_12_121))))
 (let ((?x29473 (- (+ (+ (+ ?x29465 ?x29466) ?x29468) ?x29470) (* (* 2.0 l_0_12_28) l_0_12_37))))
 (let ((?x29477 (- (- ?x29473 (* (* 2.0 l_0_12_29) l_0_12_38)) (* (* 2.0 l_0_12_30) l_0_12_39))))
 (let ((?x29485 (+ (- (- (- ?x29477 (* (* 2.0 l_0_12_31) l_0_12_40)) ?x29480) ?x29482) ?x29484)))
 (= (+ ?x29485 ?x29486) 0.0))))))))))))))))))))))
(assert
 (let ((?x29514 (* l_0_12_36 l_0_12_36)))
 (let ((?x29512 (* l_0_12_35 l_0_12_35)))
 (let ((?x29510 (* l_0_12_34 l_0_12_34)))
 (let ((?x9668 (* l_0_12_33 l_0_12_33)))
 (let ((?x17195 (* l_0_12_32 l_0_12_32)))
 (let ((?x16532 (* l_0_12_120 l_0_12_120)))
 (let ((?x23062 (* 2.0 ?x16532)))
 (let ((?x8589 (* l_0_12_119 l_0_12_119)))
 (let ((?x23054 (* 2.0 ?x8589)))
 (let ((?x28977 (* l_0_12_118 l_0_12_118)))
 (let ((?x9555 (* 2.0 ?x28977)))
 (let ((?x28973 (* l_0_12_117 l_0_12_117)))
 (let ((?x9567 (* 2.0 ?x28973)))
 (let ((?x28970 (* l_0_12_116 l_0_12_116)))
 (let ((?x17155 (* 2.0 ?x28970)))
 (let ((?x29511 (- (- (- (+ (+ (+ (+ ?x17155 ?x9567) ?x9555) ?x23054) ?x23062) ?x17195) ?x9668) ?x29510)))
 (let ((?x29519 (+ (+ (- (- ?x29511 ?x29512) ?x29514) (* (* 2.0 l_0_12_86) l_0_12_95)) (* (* 2.0 l_0_12_87) l_0_12_96))))
 (= ?x29519 0.0)))))))))))))))))))
(assert
 (let ((?x28636 (* 2.0 l_0_12_66)))
 (let ((?x29569 (* ?x28636 l_0_12_75)))
 (let ((?x28633 (* 2.0 l_0_12_65)))
 (let ((?x29567 (* ?x28633 l_0_12_74)))
 (let ((?x28628 (* 2.0 l_0_12_45)))
 (let ((?x29565 (* ?x28628 l_0_12_54)))
 (let ((?x28625 (* 2.0 l_0_12_44)))
 (let ((?x29563 (* ?x28625 l_0_12_53)))
 (let ((?x29546 (* (* 4.0 l_0_12_120) l_0_12_125)))
 (let ((?x29543 (* (* 4.0 l_0_12_119) l_0_12_124)))
 (let ((?x29540 (* (* 4.0 l_0_12_118) l_0_12_123)))
 (let ((?x29537 (* (* 4.0 l_0_12_117) l_0_12_122)))
 (let ((?x29534 (* (* 4.0 l_0_12_116) l_0_12_121)))
 (let ((?x29532 (+ (* (* 2.0 l_0_12_100) l_0_12_86) (* (* 2.0 l_0_12_101) l_0_12_87))))
 (let ((?x29550 (- (+ (+ (+ (+ (+ ?x29532 ?x29534) ?x29537) ?x29540) ?x29543) ?x29546) (* (* 2.0 l_0_12_32) l_0_12_37))))
 (let ((?x29556 (- (- ?x29550 (* (* 2.0 l_0_12_33) l_0_12_38)) (* (* 2.0 l_0_12_34) l_0_12_39))))
 (let ((?x29562 (- (- ?x29556 (* (* 2.0 l_0_12_35) l_0_12_40)) (* (* 2.0 l_0_12_36) l_0_12_41))))
 (= (+ (+ (- (- ?x29562 ?x29563) ?x29565) ?x29567) ?x29569) 0.0)))))))))))))))))))
(assert
 (let ((?x28636 (* 2.0 l_0_12_66)))
 (let ((?x29632 (* ?x28636 l_0_12_80)))
 (let ((?x28633 (* 2.0 l_0_12_65)))
 (let ((?x29630 (* ?x28633 l_0_12_79)))
 (let ((?x28628 (* 2.0 l_0_12_45)))
 (let ((?x29628 (* ?x28628 l_0_12_59)))
 (let ((?x28625 (* 2.0 l_0_12_44)))
 (let ((?x29626 (* ?x28625 l_0_12_58)))
 (let ((?x29624 (* l_0_12_42 l_0_12_42)))
 (let ((?x29622 (* l_0_12_41 l_0_12_41)))
 (let ((?x29620 (* l_0_12_40 l_0_12_40)))
 (let ((?x29618 (* l_0_12_39 l_0_12_39)))
 (let ((?x29616 (* l_0_12_38 l_0_12_38)))
 (let ((?x29614 (* l_0_12_37 l_0_12_37)))
 (let ((?x29119 (* l_0_12_126 l_0_12_126)))
 (let ((?x29612 (* 2.0 ?x29119)))
 (let ((?x16732 (* l_0_12_125 l_0_12_125)))
 (let ((?x29610 (* 2.0 ?x16732)))
 (let ((?x29114 (* l_0_12_124 l_0_12_124)))
 (let ((?x29608 (* 2.0 ?x29114)))
 (let ((?x29110 (* l_0_12_123 l_0_12_123)))
 (let ((?x29606 (* 2.0 ?x29110)))
 (let ((?x29107 (* l_0_12_122 l_0_12_122)))
 (let ((?x29593 (* 2.0 ?x29107)))
 (let ((?x29105 (* l_0_12_121 l_0_12_121)))
 (let ((?x29591 (* 2.0 ?x29105)))
 (let ((?x29617 (- (- (+ (+ (+ (+ (+ ?x29591 ?x29593) ?x29606) ?x29608) ?x29610) ?x29612) ?x29614) ?x29616)))
 (let ((?x29631 (+ (- (- (- (- (- (- ?x29617 ?x29618) ?x29620) ?x29622) ?x29624) ?x29626) ?x29628) ?x29630)))
 (= (+ ?x29631 ?x29632) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x29686 (* ?x28119 l_0_12_70)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x29684 (* ?x28301 l_0_12_49)))
 (let ((?x29650 (- (* (* (- 4.0) l_0_12_106) l_0_12_121) (* (* 2.0 l_0_12_133) l_0_12_142))))
 (let ((?x29656 (- (- ?x29650 (* (* 2.0 l_0_12_134) l_0_12_143)) (* (* 2.0 l_0_12_135) l_0_12_144))))
 (let ((?x29662 (- (- ?x29656 (* (* 2.0 l_0_12_136) l_0_12_145)) (* (* 2.0 l_0_12_154) l_0_12_163))))
 (let ((?x29668 (- (- ?x29662 (* (* 2.0 l_0_12_155) l_0_12_164)) (* (* 2.0 l_0_12_156) l_0_12_165))))
 (let ((?x29674 (- (- ?x29668 (* (* 2.0 l_0_12_157) l_0_12_166)) (* (* 2.0 l_0_12_175) l_0_12_184))))
 (let ((?x29680 (- (- ?x29674 (* (* 2.0 l_0_12_176) l_0_12_185)) (* (* 2.0 l_0_12_177) l_0_12_186))))
 (= (+ (- (- ?x29680 (* (* 2.0 l_0_12_178) l_0_12_187)) ?x29684) ?x29686) 0.0))))))))))))
(assert
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x29756 (* ?x28119 l_0_12_74)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x29754 (* ?x28301 l_0_12_53)))
 (let ((?x29711 (- (* (* 2.0 l_0_12_100) l_0_12_85) (* (* 2.0 l_0_12_137) l_0_12_142))))
 (let ((?x29717 (- (- ?x29711 (* (* 2.0 l_0_12_138) l_0_12_143)) (* (* 2.0 l_0_12_139) l_0_12_144))))
 (let ((?x29723 (- (- ?x29717 (* (* 2.0 l_0_12_140) l_0_12_145)) (* (* 2.0 l_0_12_141) l_0_12_146))))
 (let ((?x29729 (- (- ?x29723 (* (* 2.0 l_0_12_158) l_0_12_163)) (* (* 2.0 l_0_12_159) l_0_12_164))))
 (let ((?x29735 (- (- ?x29729 (* (* 2.0 l_0_12_160) l_0_12_165)) (* (* 2.0 l_0_12_161) l_0_12_166))))
 (let ((?x29741 (- (- ?x29735 (* (* 2.0 l_0_12_162) l_0_12_167)) (* (* 2.0 l_0_12_179) l_0_12_184))))
 (let ((?x29747 (- (- ?x29741 (* (* 2.0 l_0_12_180) l_0_12_185)) (* (* 2.0 l_0_12_181) l_0_12_186))))
 (let ((?x29753 (- (- ?x29747 (* (* 2.0 l_0_12_182) l_0_12_187)) (* (* 2.0 l_0_12_183) l_0_12_188))))
 (= (+ (- ?x29753 ?x29754) ?x29756) 0.0))))))))))))))
(assert
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x29828 (* ?x28119 l_0_12_79)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x29826 (* ?x28301 l_0_12_58)))
 (let ((?x29824 (* l_0_12_189 l_0_12_189)))
 (let ((?x29822 (* l_0_12_188 l_0_12_188)))
 (let ((?x29820 (* l_0_12_187 l_0_12_187)))
 (let ((?x29818 (* l_0_12_186 l_0_12_186)))
 (let ((?x29816 (* l_0_12_185 l_0_12_185)))
 (let ((?x29814 (* l_0_12_184 l_0_12_184)))
 (let ((?x29812 (* l_0_12_168 l_0_12_168)))
 (let ((?x29810 (* l_0_12_167 l_0_12_167)))
 (let ((?x29808 (* l_0_12_166 l_0_12_166)))
 (let ((?x29806 (* l_0_12_165 l_0_12_165)))
 (let ((?x29804 (* l_0_12_164 l_0_12_164)))
 (let ((?x29802 (* l_0_12_163 l_0_12_163)))
 (let ((?x29800 (* l_0_12_147 l_0_12_147)))
 (let ((?x29798 (* l_0_12_146 l_0_12_146)))
 (let ((?x29796 (* l_0_12_145 l_0_12_145)))
 (let ((?x29794 (* l_0_12_144 l_0_12_144)))
 (let ((?x29795 (- (- (* (- l_0_12_142) l_0_12_142) (* l_0_12_143 l_0_12_143)) ?x29794)))
 (let ((?x29809 (- (- (- (- (- (- (- ?x29795 ?x29796) ?x29798) ?x29800) ?x29802) ?x29804) ?x29806) ?x29808)))
 (let ((?x29823 (- (- (- (- (- (- (- ?x29809 ?x29810) ?x29812) ?x29814) ?x29816) ?x29818) ?x29820) ?x29822)))
 (= (+ (- (- ?x29823 ?x29824) ?x29826) ?x29828) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x29871 (* l_0_12_73 l_0_12_73)))
 (let ((?x29869 (* l_0_12_72 l_0_12_72)))
 (let ((?x29867 (* l_0_12_71 l_0_12_71)))
 (let ((?x29865 (* l_0_12_70 l_0_12_70)))
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x29828 (* ?x28119 l_0_12_79)))
 (let ((?x29862 (* l_0_12_52 l_0_12_52)))
 (let ((?x29860 (* l_0_12_51 l_0_12_51)))
 (let ((?x29858 (* l_0_12_50 l_0_12_50)))
 (let ((?x29856 (* l_0_12_49 l_0_12_49)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x29826 (* ?x28301 l_0_12_58)))
 (let ((?x29416 (* 4.0 l_0_12_115)))
 (let ((?x29470 (* ?x29416 l_0_12_124)))
 (let ((?x29413 (* 4.0 l_0_12_114)))
 (let ((?x29468 (* ?x29413 l_0_12_123)))
 (let ((?x29410 (* 4.0 l_0_12_113)))
 (let ((?x29466 (* ?x29410 l_0_12_122)))
 (let ((?x29855 (+ (- (- (- (* (* (- 4.0) l_0_12_112) l_0_12_121) ?x29466) ?x29468) ?x29470) ?x29826)))
 (let ((?x29868 (+ (+ (- (- (- (- (- ?x29855 ?x29856) ?x29858) ?x29860) ?x29862) ?x29828) ?x29865) ?x29867)))
 (= (+ (+ ?x29868 ?x29869) ?x29871) 0.0))))))))))))))))))))))
(assert
 (let ((?x29925 (* 2.0 l_0_12_73)))
 (let ((?x29926 (* ?x29925 l_0_12_77)))
 (let ((?x29922 (* 2.0 l_0_12_72)))
 (let ((?x29923 (* ?x29922 l_0_12_76)))
 (let ((?x29919 (* 2.0 l_0_12_71)))
 (let ((?x29920 (* ?x29919 l_0_12_75)))
 (let ((?x29916 (* 2.0 l_0_12_70)))
 (let ((?x29917 (* ?x29916 l_0_12_74)))
 (let ((?x29913 (* 2.0 l_0_12_52)))
 (let ((?x29914 (* ?x29913 l_0_12_56)))
 (let ((?x29910 (* 2.0 l_0_12_51)))
 (let ((?x29911 (* ?x29910 l_0_12_55)))
 (let ((?x29907 (* 2.0 l_0_12_50)))
 (let ((?x29908 (* ?x29907 l_0_12_54)))
 (let ((?x29904 (* 2.0 l_0_12_49)))
 (let ((?x29905 (* ?x29904 l_0_12_53)))
 (let ((?x29546 (* (* 4.0 l_0_12_120) l_0_12_125)))
 (let ((?x29543 (* (* 4.0 l_0_12_119) l_0_12_124)))
 (let ((?x29540 (* (* 4.0 l_0_12_118) l_0_12_123)))
 (let ((?x29537 (* (* 4.0 l_0_12_117) l_0_12_122)))
 (let ((?x29534 (* (* 4.0 l_0_12_116) l_0_12_121)))
 (let ((?x29893 (+ (* (* 2.0 l_0_12_100) l_0_12_91) (* (* 2.0 l_0_12_101) l_0_12_92))))
 (let ((?x29898 (+ (+ ?x29893 (* (* 2.0 l_0_12_102) l_0_12_93)) (* (* 2.0 l_0_12_103) l_0_12_94))))
 (let ((?x29909 (- (- (- (- (- (- (- ?x29898 ?x29534) ?x29537) ?x29540) ?x29543) ?x29546) ?x29905) ?x29908)))
 (= (+ (+ (+ (+ (- (- ?x29909 ?x29911) ?x29914) ?x29917) ?x29920) ?x29923) ?x29926) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x29925 (* 2.0 l_0_12_73)))
 (let ((?x29994 (* ?x29925 l_0_12_82)))
 (let ((?x29922 (* 2.0 l_0_12_72)))
 (let ((?x29992 (* ?x29922 l_0_12_81)))
 (let ((?x29919 (* 2.0 l_0_12_71)))
 (let ((?x29990 (* ?x29919 l_0_12_80)))
 (let ((?x29916 (* 2.0 l_0_12_70)))
 (let ((?x29988 (* ?x29916 l_0_12_79)))
 (let ((?x29913 (* 2.0 l_0_12_52)))
 (let ((?x29986 (* ?x29913 l_0_12_61)))
 (let ((?x29910 (* 2.0 l_0_12_51)))
 (let ((?x29984 (* ?x29910 l_0_12_60)))
 (let ((?x29907 (* 2.0 l_0_12_50)))
 (let ((?x29982 (* ?x29907 l_0_12_59)))
 (let ((?x29904 (* 2.0 l_0_12_49)))
 (let ((?x29980 (* ?x29904 l_0_12_58)))
 (let ((?x29957 (- (* (* (- 2.0) l_0_12_121) l_0_12_121) (* (* 2.0 l_0_12_122) l_0_12_122))))
 (let ((?x29973 (- (- ?x29957 (* (* 2.0 l_0_12_123) l_0_12_123)) (* (* 2.0 l_0_12_124) l_0_12_124))))
 (let ((?x29979 (- (- ?x29973 (* (* 2.0 l_0_12_125) l_0_12_125)) (* (* 2.0 l_0_12_126) l_0_12_126))))
 (let ((?x29993 (+ (+ (+ (- (- (- (- ?x29979 ?x29980) ?x29982) ?x29984) ?x29986) ?x29988) ?x29990) ?x29992)))
 (= (+ ?x29993 ?x29994) 0.0))))))))))))))))))))))
(assert
 (let ((?x30042 (* l_0_12_78 l_0_12_78)))
 (let ((?x30040 (* l_0_12_77 l_0_12_77)))
 (let ((?x30038 (* l_0_12_76 l_0_12_76)))
 (let ((?x30036 (* l_0_12_75 l_0_12_75)))
 (let ((?x30034 (* l_0_12_74 l_0_12_74)))
 (let ((?x30032 (* l_0_12_57 l_0_12_57)))
 (let ((?x30030 (* l_0_12_56 l_0_12_56)))
 (let ((?x30028 (* l_0_12_55 l_0_12_55)))
 (let ((?x30026 (* l_0_12_54 l_0_12_54)))
 (let ((?x30024 (* l_0_12_53 l_0_12_53)))
 (let ((?x23723 (+ (* (* 2.0 l_0_12_100) l_0_12_95) (* (* 2.0 l_0_12_101) l_0_12_96))))
 (let ((?x30020 (+ (+ ?x23723 (* (* 2.0 l_0_12_102) l_0_12_97)) (* (* 2.0 l_0_12_103) l_0_12_98))))
 (let ((?x30029 (- (- (- (+ ?x30020 (* (* 2.0 l_0_12_104) l_0_12_99)) ?x30024) ?x30026) ?x30028)))
 (let ((?x30043 (+ (+ (+ (+ (+ (- (- ?x30029 ?x30030) ?x30032) ?x30034) ?x30036) ?x30038) ?x30040) ?x30042)))
 (= ?x30043 0.0))))))))))))))))
(assert
 (let ((?x30109 (* 2.0 l_0_12_78)))
 (let ((?x30110 (* ?x30109 l_0_12_83)))
 (let ((?x30106 (* 2.0 l_0_12_77)))
 (let ((?x30107 (* ?x30106 l_0_12_82)))
 (let ((?x30103 (* 2.0 l_0_12_76)))
 (let ((?x30104 (* ?x30103 l_0_12_81)))
 (let ((?x30100 (* 2.0 l_0_12_75)))
 (let ((?x30101 (* ?x30100 l_0_12_80)))
 (let ((?x30097 (* 2.0 l_0_12_74)))
 (let ((?x30098 (* ?x30097 l_0_12_79)))
 (let ((?x30095 (* (* 2.0 l_0_12_57) l_0_12_62)))
 (let ((?x30092 (* (* 2.0 l_0_12_56) l_0_12_61)))
 (let ((?x30089 (* (* 2.0 l_0_12_55) l_0_12_60)))
 (let ((?x30086 (* (* 2.0 l_0_12_54) l_0_12_59)))
 (let ((?x30083 (* (* 2.0 l_0_12_53) l_0_12_58)))
 (let ((?x30080 (* l_0_12_105 l_0_12_105)))
 (let ((?x30078 (* l_0_12_104 l_0_12_104)))
 (let ((?x30076 (* l_0_12_103 l_0_12_103)))
 (let ((?x30074 (* l_0_12_102 l_0_12_102)))
 (let ((?x30075 (+ (+ (* l_0_12_100 l_0_12_100) (* l_0_12_101 l_0_12_101)) ?x30074)))
 (let ((?x30093 (- (- (- (- (+ (+ (+ ?x30075 ?x30076) ?x30078) ?x30080) ?x30083) ?x30086) ?x30089) ?x30092)))
 (= (+ (+ (+ (+ (+ (- ?x30093 ?x30095) ?x30098) ?x30101) ?x30104) ?x30107) ?x30110) 0.0)))))))))))))))))))))))
(assert
 (let ((?x30154 (* l_0_12_84 l_0_12_84)))
 (let ((?x30152 (* l_0_12_83 l_0_12_83)))
 (let ((?x30150 (* l_0_12_82 l_0_12_82)))
 (let ((?x30148 (* l_0_12_81 l_0_12_81)))
 (let ((?x30146 (* l_0_12_80 l_0_12_80)))
 (let ((?x30144 (* l_0_12_79 l_0_12_79)))
 (let ((?x30142 (* l_0_12_63 l_0_12_63)))
 (let ((?x30140 (* l_0_12_62 l_0_12_62)))
 (let ((?x30138 (* l_0_12_61 l_0_12_61)))
 (let ((?x30136 (* l_0_12_60 l_0_12_60)))
 (let ((?x30137 (- (- (* (- l_0_12_58) l_0_12_58) (* l_0_12_59 l_0_12_59)) ?x30136)))
 (let ((?x30151 (+ (+ (+ (+ (- (- (- ?x30137 ?x30138) ?x30140) ?x30142) ?x30144) ?x30146) ?x30148) ?x30150)))
 (= (+ (+ ?x30151 ?x30152) ?x30154) 0.0))))))))))))))
(assert
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x29686 (* ?x28119 l_0_12_70)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x29684 (* ?x28301 l_0_12_49)))
 (let ((?x30180 (- (* (* (- 2.0) l_0_12_112) l_0_12_112) (* (* 2.0 l_0_12_113) l_0_12_113))))
 (let ((?x30184 (- (- ?x30180 (* (* 2.0 l_0_12_114) l_0_12_114)) (* (* 2.0 l_0_12_115) l_0_12_115))))
 (= (- (+ ?x30184 ?x29684) ?x29686) 0.0))))))))
(assert
 (let ((?x30216 (* l_0_12_94 l_0_12_94)))
 (let ((?x30214 (* l_0_12_93 l_0_12_93)))
 (let ((?x30212 (* l_0_12_92 l_0_12_92)))
 (let ((?x30210 (* l_0_12_91 l_0_12_91)))
 (let ((?x28119 (* 2.0 l_0_12_64)))
 (let ((?x29756 (* ?x28119 l_0_12_74)))
 (let ((?x28301 (* 2.0 l_0_12_43)))
 (let ((?x29754 (* ?x28301 l_0_12_53)))
 (let ((?x29416 (* 4.0 l_0_12_115)))
 (let ((?x29417 (* ?x29416 l_0_12_119)))
 (let ((?x29413 (* 4.0 l_0_12_114)))
 (let ((?x29414 (* ?x29413 l_0_12_118)))
 (let ((?x29410 (* 4.0 l_0_12_113)))
 (let ((?x29411 (* ?x29410 l_0_12_117)))
 (let ((?x30208 (+ (- (- (- (* (* (- 4.0) l_0_12_112) l_0_12_116) ?x29411) ?x29414) ?x29417) ?x29754)))
 (= (+ (+ (+ (+ (- ?x30208 ?x29756) ?x30210) ?x30212) ?x30214) ?x30216) 0.0)))))))))))))))))
(assert
 (let ((?x29374 (* l_0_12_66 l_0_12_66)))
 (let ((?x29372 (* l_0_12_65 l_0_12_65)))
 (let ((?x29370 (* l_0_12_45 l_0_12_45)))
 (let ((?x29368 (* l_0_12_44 l_0_12_44)))
 (let ((?x23873 (+ ?x29368 ?x29370)))
 (= (- (- ?x23873 ?x29372) ?x29374) 0.0)))))))
(assert
 (let ((?x28636 (* 2.0 l_0_12_66)))
 (let ((?x28637 (* ?x28636 l_0_12_68)))
 (let ((?x28633 (* 2.0 l_0_12_65)))
 (let ((?x28634 (* ?x28633 l_0_12_67)))
 (let ((?x29862 (* l_0_12_52 l_0_12_52)))
 (let ((?x30227 (* 2.0 ?x29862)))
 (let ((?x29860 (* l_0_12_51 l_0_12_51)))
 (let ((?x30225 (* 2.0 ?x29860)))
 (let ((?x29858 (* l_0_12_50 l_0_12_50)))
 (let ((?x30223 (* 2.0 ?x29858)))
 (let ((?x29856 (* l_0_12_49 l_0_12_49)))
 (let ((?x30221 (* 2.0 ?x29856)))
 (let ((?x28628 (* 2.0 l_0_12_45)))
 (let ((?x28629 (* ?x28628 l_0_12_47)))
 (let ((?x28625 (* 2.0 l_0_12_44)))
 (let ((?x28626 (* ?x28625 l_0_12_46)))
 (let ((?x30230 (- (- (+ (+ (+ (+ (+ ?x28626 ?x28629) ?x30221) ?x30223) ?x30225) ?x30227) ?x28634) ?x28637)))
 (let ((?x30234 (- (- ?x30230 (* (* 2.0 l_0_12_70) l_0_12_70)) (* (* 2.0 l_0_12_71) l_0_12_71))))
 (let ((?x30238 (- (- ?x30234 (* (* 2.0 l_0_12_72) l_0_12_72)) (* (* 2.0 l_0_12_73) l_0_12_73))))
 (let ((?x30244 (- (- ?x30238 (* (* 2.0 l_0_12_91) l_0_12_91)) (* (* 2.0 l_0_12_92) l_0_12_92))))
 (let ((?x30250 (- (- ?x30244 (* (* 2.0 l_0_12_93) l_0_12_93)) (* (* 2.0 l_0_12_94) l_0_12_94))))
 (= ?x30250 0.0)))))))))))))))))))))))
(assert
 (let ((?x28636 (* 2.0 l_0_12_66)))
 (let ((?x29486 (* ?x28636 l_0_12_71)))
 (let ((?x28633 (* 2.0 l_0_12_65)))
 (let ((?x29484 (* ?x28633 l_0_12_70)))
 (let ((?x28628 (* 2.0 l_0_12_45)))
 (let ((?x29482 (* ?x28628 l_0_12_50)))
 (let ((?x28625 (* 2.0 l_0_12_44)))
 (let ((?x29480 (* ?x28625 l_0_12_49)))
 (= (- (- (+ ?x29480 ?x29482) ?x29484) ?x29486) 0.0))))))))))
(assert
 (let ((?x28636 (* 2.0 l_0_12_66)))
 (let ((?x29569 (* ?x28636 l_0_12_75)))
 (let ((?x28633 (* 2.0 l_0_12_65)))
 (let ((?x29567 (* ?x28633 l_0_12_74)))
 (let ((?x28628 (* 2.0 l_0_12_45)))
 (let ((?x29565 (* ?x28628 l_0_12_54)))
 (let ((?x28625 (* 2.0 l_0_12_44)))
 (let ((?x29563 (* ?x28625 l_0_12_53)))
 (= (- (- (+ ?x29563 ?x29565) ?x29567) ?x29569) 0.0))))))))))
(assert
 (let ((?x28636 (* 2.0 l_0_12_66)))
 (let ((?x29632 (* ?x28636 l_0_12_80)))
 (let ((?x28633 (* 2.0 l_0_12_65)))
 (let ((?x29630 (* ?x28633 l_0_12_79)))
 (let ((?x28628 (* 2.0 l_0_12_45)))
 (let ((?x29628 (* ?x28628 l_0_12_59)))
 (let ((?x28625 (* 2.0 l_0_12_44)))
 (let ((?x29626 (* ?x28625 l_0_12_58)))
 (= (- (- (+ ?x29626 ?x29628) ?x29630) ?x29632) 0.0))))))))))
(assert
 (let ((?x28779 (* l_0_12_69 l_0_12_69)))
 (let ((?x28777 (* l_0_12_68 l_0_12_68)))
 (let ((?x28775 (* l_0_12_67 l_0_12_67)))
 (let ((?x28773 (* l_0_12_48 l_0_12_48)))
 (let ((?x24046 (- (+ (+ (* l_0_12_46 l_0_12_46) (* l_0_12_47 l_0_12_47)) ?x28773) ?x28775)))
 (= (- (- ?x24046 ?x28777) ?x28779) 0.0)))))))
(assert
 (let ((?x28917 (* 2.0 l_0_12_69)))
 (let ((?x28918 (* ?x28917 l_0_12_72)))
 (let ((?x28914 (* 2.0 l_0_12_68)))
 (let ((?x28915 (* ?x28914 l_0_12_71)))
 (let ((?x28911 (* 2.0 l_0_12_67)))
 (let ((?x28912 (* ?x28911 l_0_12_70)))
 (let ((?x28908 (* 2.0 l_0_12_48)))
 (let ((?x28909 (* ?x28908 l_0_12_51)))
 (let ((?x28905 (* 2.0 l_0_12_47)))
 (let ((?x28906 (* ?x28905 l_0_12_50)))
 (let ((?x28902 (* 2.0 l_0_12_46)))
 (let ((?x28903 (* ?x28902 l_0_12_49)))
 (= (- (- (- (+ (+ ?x28903 ?x28906) ?x28909) ?x28912) ?x28915) ?x28918) 0.0))))))))))))))
(assert
 (let ((?x28917 (* 2.0 l_0_12_69)))
 (let ((?x29027 (* ?x28917 l_0_12_76)))
 (let ((?x28914 (* 2.0 l_0_12_68)))
 (let ((?x29025 (* ?x28914 l_0_12_75)))
 (let ((?x28911 (* 2.0 l_0_12_67)))
 (let ((?x29023 (* ?x28911 l_0_12_74)))
 (let ((?x28908 (* 2.0 l_0_12_48)))
 (let ((?x29021 (* ?x28908 l_0_12_55)))
 (let ((?x28905 (* 2.0 l_0_12_47)))
 (let ((?x29019 (* ?x28905 l_0_12_54)))
 (let ((?x28902 (* 2.0 l_0_12_46)))
 (let ((?x29017 (* ?x28902 l_0_12_53)))
 (= (- (- (- (+ (+ ?x29017 ?x29019) ?x29021) ?x29023) ?x29025) ?x29027) 0.0))))))))))))))
(assert
 (let ((?x28917 (* 2.0 l_0_12_69)))
 (let ((?x29102 (* ?x28917 l_0_12_81)))
 (let ((?x28914 (* 2.0 l_0_12_68)))
 (let ((?x29100 (* ?x28914 l_0_12_80)))
 (let ((?x28911 (* 2.0 l_0_12_67)))
 (let ((?x29098 (* ?x28911 l_0_12_79)))
 (let ((?x28908 (* 2.0 l_0_12_48)))
 (let ((?x29096 (* ?x28908 l_0_12_60)))
 (let ((?x28905 (* 2.0 l_0_12_47)))
 (let ((?x29094 (* ?x28905 l_0_12_59)))
 (let ((?x28902 (* 2.0 l_0_12_46)))
 (let ((?x29092 (* ?x28902 l_0_12_58)))
 (= (- (- (- (+ (+ ?x29092 ?x29094) ?x29096) ?x29098) ?x29100) ?x29102) 0.0))))))))))))))
(assert
 (let ((?x29871 (* l_0_12_73 l_0_12_73)))
 (let ((?x29869 (* l_0_12_72 l_0_12_72)))
 (let ((?x29867 (* l_0_12_71 l_0_12_71)))
 (let ((?x29865 (* l_0_12_70 l_0_12_70)))
 (let ((?x29862 (* l_0_12_52 l_0_12_52)))
 (let ((?x29860 (* l_0_12_51 l_0_12_51)))
 (let ((?x11161 (+ (+ (+ (* l_0_12_49 l_0_12_49) (* l_0_12_50 l_0_12_50)) ?x29860) ?x29862)))
 (= (- (- (- (- ?x11161 ?x29865) ?x29867) ?x29869) ?x29871) 0.0)))))))))
(assert
 (let ((?x29925 (* 2.0 l_0_12_73)))
 (let ((?x29926 (* ?x29925 l_0_12_77)))
 (let ((?x29922 (* 2.0 l_0_12_72)))
 (let ((?x29923 (* ?x29922 l_0_12_76)))
 (let ((?x29919 (* 2.0 l_0_12_71)))
 (let ((?x29920 (* ?x29919 l_0_12_75)))
 (let ((?x29916 (* 2.0 l_0_12_70)))
 (let ((?x29917 (* ?x29916 l_0_12_74)))
 (let ((?x29913 (* 2.0 l_0_12_52)))
 (let ((?x29914 (* ?x29913 l_0_12_56)))
 (let ((?x29910 (* 2.0 l_0_12_51)))
 (let ((?x29911 (* ?x29910 l_0_12_55)))
 (let ((?x29907 (* 2.0 l_0_12_50)))
 (let ((?x29908 (* ?x29907 l_0_12_54)))
 (let ((?x29904 (* 2.0 l_0_12_49)))
 (let ((?x29905 (* ?x29904 l_0_12_53)))
 (let ((?x30277 (- (- (- (- (+ (+ (+ ?x29905 ?x29908) ?x29911) ?x29914) ?x29917) ?x29920) ?x29923) ?x29926)))
 (= ?x30277 0.0)))))))))))))))))))
(assert
 (let ((?x29925 (* 2.0 l_0_12_73)))
 (let ((?x29994 (* ?x29925 l_0_12_82)))
 (let ((?x29922 (* 2.0 l_0_12_72)))
 (let ((?x29992 (* ?x29922 l_0_12_81)))
 (let ((?x29919 (* 2.0 l_0_12_71)))
 (let ((?x29990 (* ?x29919 l_0_12_80)))
 (let ((?x29916 (* 2.0 l_0_12_70)))
 (let ((?x29988 (* ?x29916 l_0_12_79)))
 (let ((?x29913 (* 2.0 l_0_12_52)))
 (let ((?x29986 (* ?x29913 l_0_12_61)))
 (let ((?x29910 (* 2.0 l_0_12_51)))
 (let ((?x29984 (* ?x29910 l_0_12_60)))
 (let ((?x29907 (* 2.0 l_0_12_50)))
 (let ((?x29982 (* ?x29907 l_0_12_59)))
 (let ((?x29904 (* 2.0 l_0_12_49)))
 (let ((?x29980 (* ?x29904 l_0_12_58)))
 (let ((?x30286 (- (- (- (- (+ (+ (+ ?x29980 ?x29982) ?x29984) ?x29986) ?x29988) ?x29990) ?x29992) ?x29994)))
 (= ?x30286 0.0)))))))))))))))))))
(assert
 (let ((?x30042 (* l_0_12_78 l_0_12_78)))
 (let ((?x30040 (* l_0_12_77 l_0_12_77)))
 (let ((?x30038 (* l_0_12_76 l_0_12_76)))
 (let ((?x30036 (* l_0_12_75 l_0_12_75)))
 (let ((?x30034 (* l_0_12_74 l_0_12_74)))
 (let ((?x30032 (* l_0_12_57 l_0_12_57)))
 (let ((?x30030 (* l_0_12_56 l_0_12_56)))
 (let ((?x30028 (* l_0_12_55 l_0_12_55)))
 (let ((?x30292 (+ (+ (+ (* l_0_12_53 l_0_12_53) (* l_0_12_54 l_0_12_54)) ?x30028) ?x30030)))
 (= (- (- (- (- (- (+ ?x30292 ?x30032) ?x30034) ?x30036) ?x30038) ?x30040) ?x30042) 0.0)))))))))))
(assert
 (let ((?x30109 (* 2.0 l_0_12_78)))
 (let ((?x30110 (* ?x30109 l_0_12_83)))
 (let ((?x30106 (* 2.0 l_0_12_77)))
 (let ((?x30107 (* ?x30106 l_0_12_82)))
 (let ((?x30103 (* 2.0 l_0_12_76)))
 (let ((?x30104 (* ?x30103 l_0_12_81)))
 (let ((?x30100 (* 2.0 l_0_12_75)))
 (let ((?x30101 (* ?x30100 l_0_12_80)))
 (let ((?x30097 (* 2.0 l_0_12_74)))
 (let ((?x30098 (* ?x30097 l_0_12_79)))
 (let ((?x30095 (* (* 2.0 l_0_12_57) l_0_12_62)))
 (let ((?x30092 (* (* 2.0 l_0_12_56) l_0_12_61)))
 (let ((?x30089 (* (* 2.0 l_0_12_55) l_0_12_60)))
 (let ((?x30086 (* (* 2.0 l_0_12_54) l_0_12_59)))
 (let ((?x30083 (* (* 2.0 l_0_12_53) l_0_12_58)))
 (let ((?x30300 (- (- (- (+ (+ (+ (+ ?x30083 ?x30086) ?x30089) ?x30092) ?x30095) ?x30098) ?x30101) ?x30104)))
 (= (- (- ?x30300 ?x30107) ?x30110) 0.0))))))))))))))))))
(assert
 (let ((?x30154 (* l_0_12_84 l_0_12_84)))
 (let ((?x30152 (* l_0_12_83 l_0_12_83)))
 (let ((?x30150 (* l_0_12_82 l_0_12_82)))
 (let ((?x30148 (* l_0_12_81 l_0_12_81)))
 (let ((?x30146 (* l_0_12_80 l_0_12_80)))
 (let ((?x30144 (* l_0_12_79 l_0_12_79)))
 (let ((?x30142 (* l_0_12_63 l_0_12_63)))
 (let ((?x30140 (* l_0_12_62 l_0_12_62)))
 (let ((?x30138 (* l_0_12_61 l_0_12_61)))
 (let ((?x30136 (* l_0_12_60 l_0_12_60)))
 (let ((?x30308 (+ (+ (+ (* l_0_12_58 l_0_12_58) (* l_0_12_59 l_0_12_59)) ?x30136) ?x30138)))
 (let ((?x30315 (- (- (- (- (- (+ (+ ?x30308 ?x30140) ?x30142) ?x30144) ?x30146) ?x30148) ?x30150) ?x30152)))
 (= (- ?x30315 ?x30154) 0.0))))))))))))))
(assert
 (let ((?x29370 (* l_0_12_45 l_0_12_45)))
 (let ((?x11866 (* 2.0 ?x29370)))
 (let ((?x29368 (* l_0_12_44 l_0_12_44)))
 (let ((?x11865 (* 2.0 ?x29368)))
 (let ((?x11762 (+ ?x11865 ?x11866)))
 (let ((?x24231 (- (- ?x11762 (* (* 2.0 l_0_12_65) l_0_12_65)) (* (* 2.0 l_0_12_66) l_0_12_66))))
 (let ((?x30319 (- (- ?x24231 (* (* 2.0 l_0_12_86) l_0_12_86)) (* (* 2.0 l_0_12_87) l_0_12_87))))
 (= ?x30319 0.0)))))))))
(assert
 (let ((?x30343 (+ (* (* 4.0 l_0_12_44) l_0_12_46) (* (* 4.0 l_0_12_45) l_0_12_47))))
 (let ((?x30349 (- (- ?x30343 (* (* 4.0 l_0_12_65) l_0_12_67)) (* (* 4.0 l_0_12_66) l_0_12_68))))
 (let ((?x30355 (- (- ?x30349 (* (* 4.0 l_0_12_86) l_0_12_88)) (* (* 4.0 l_0_12_87) l_0_12_89))))
 (= ?x30355 0.0)))))
(assert
 (let ((?x30375 (+ (* (* 4.0 l_0_12_44) l_0_12_49) (* (* 4.0 l_0_12_45) l_0_12_50))))
 (let ((?x30379 (- (- ?x30375 (* (* 4.0 l_0_12_65) l_0_12_70)) (* (* 4.0 l_0_12_66) l_0_12_71))))
 (let ((?x30383 (- (- ?x30379 (* (* 4.0 l_0_12_86) l_0_12_91)) (* (* 4.0 l_0_12_87) l_0_12_92))))
 (= ?x30383 0.0)))))
(assert
 (let ((?x30398 (+ (* (* 4.0 l_0_12_44) l_0_12_53) (* (* 4.0 l_0_12_45) l_0_12_54))))
 (let ((?x30402 (- (- ?x30398 (* (* 4.0 l_0_12_65) l_0_12_74)) (* (* 4.0 l_0_12_66) l_0_12_75))))
 (let ((?x30406 (- (- ?x30402 (* (* 4.0 l_0_12_86) l_0_12_95)) (* (* 4.0 l_0_12_87) l_0_12_96))))
 (= ?x30406 0.0)))))
(assert
 (let ((?x30434 (- (* (* (- 4.0) l_0_12_100) l_0_12_86) (* (* 4.0 l_0_12_101) l_0_12_87))))
 (let ((?x30438 (+ (+ ?x30434 (* (* 4.0 l_0_12_44) l_0_12_58)) (* (* 4.0 l_0_12_45) l_0_12_59))))
 (let ((?x30442 (- (- ?x30438 (* (* 4.0 l_0_12_65) l_0_12_79)) (* (* 4.0 l_0_12_66) l_0_12_80))))
 (= ?x30442 0.0)))))
(assert
 (let ((?x28773 (* l_0_12_48 l_0_12_48)))
 (let ((?x30467 (* 2.0 ?x28773)))
 (let ((?x28771 (* l_0_12_47 l_0_12_47)))
 (let ((?x30465 (* 2.0 ?x28771)))
 (let ((?x28769 (* l_0_12_46 l_0_12_46)))
 (let ((?x30464 (* 2.0 ?x28769)))
 (let ((?x30472 (- (- (+ (+ ?x30464 ?x30465) ?x30467) (* (* 2.0 l_0_12_67) l_0_12_67)) (* (* 2.0 l_0_12_68) l_0_12_68))))
 (let ((?x30476 (- (- ?x30472 (* (* 2.0 l_0_12_69) l_0_12_69)) (* (* 2.0 l_0_12_88) l_0_12_88))))
 (let ((?x30480 (- (- ?x30476 (* (* 2.0 l_0_12_89) l_0_12_89)) (* (* 2.0 l_0_12_90) l_0_12_90))))
 (= ?x30480 0.0)))))))))))
(assert
 (let ((?x30514 (+ (* (* 4.0 l_0_12_46) l_0_12_49) (* (* 4.0 l_0_12_47) l_0_12_50))))
 (let ((?x30520 (- (+ ?x30514 (* (* 4.0 l_0_12_48) l_0_12_51)) (* (* 4.0 l_0_12_67) l_0_12_70))))
 (let ((?x30526 (- (- ?x30520 (* (* 4.0 l_0_12_68) l_0_12_71)) (* (* 4.0 l_0_12_69) l_0_12_72))))
 (let ((?x30532 (- (- ?x30526 (* (* 4.0 l_0_12_88) l_0_12_91)) (* (* 4.0 l_0_12_89) l_0_12_92))))
 (= (- ?x30532 (* (* 4.0 l_0_12_90) l_0_12_93)) 0.0))))))
(assert
 (let ((?x18236 (+ (* (* 4.0 l_0_12_46) l_0_12_53) (* (* 4.0 l_0_12_47) l_0_12_54))))
 (let ((?x30552 (- (+ ?x18236 (* (* 4.0 l_0_12_48) l_0_12_55)) (* (* 4.0 l_0_12_67) l_0_12_74))))
 (let ((?x30556 (- (- ?x30552 (* (* 4.0 l_0_12_68) l_0_12_75)) (* (* 4.0 l_0_12_69) l_0_12_76))))
 (let ((?x30560 (- (- ?x30556 (* (* 4.0 l_0_12_88) l_0_12_95)) (* (* 4.0 l_0_12_89) l_0_12_96))))
 (= (- ?x30560 (* (* 4.0 l_0_12_90) l_0_12_97)) 0.0))))))
(assert
 (let ((?x24337 (- (* (* (- 4.0) l_0_12_100) l_0_12_88) (* (* 4.0 l_0_12_101) l_0_12_89))))
 (let ((?x18295 (+ (- ?x24337 (* (* 4.0 l_0_12_102) l_0_12_90)) (* (* 4.0 l_0_12_46) l_0_12_58))))
 (let ((?x30575 (+ (+ ?x18295 (* (* 4.0 l_0_12_47) l_0_12_59)) (* (* 4.0 l_0_12_48) l_0_12_60))))
 (let ((?x30579 (- (- ?x30575 (* (* 4.0 l_0_12_67) l_0_12_79)) (* (* 4.0 l_0_12_68) l_0_12_80))))
 (= (- ?x30579 (* (* 4.0 l_0_12_69) l_0_12_81)) 0.0))))))
(assert
 (let ((?x30607 (+ (* (* 4.0 l_0_12_49) l_0_12_53) (* (* 4.0 l_0_12_50) l_0_12_54))))
 (let ((?x30613 (+ (+ ?x30607 (* (* 4.0 l_0_12_51) l_0_12_55)) (* (* 4.0 l_0_12_52) l_0_12_56))))
 (let ((?x30619 (- (- ?x30613 (* (* 4.0 l_0_12_70) l_0_12_74)) (* (* 4.0 l_0_12_71) l_0_12_75))))
 (let ((?x30625 (- (- ?x30619 (* (* 4.0 l_0_12_72) l_0_12_76)) (* (* 4.0 l_0_12_73) l_0_12_77))))
 (let ((?x30631 (- (- ?x30625 (* (* 4.0 l_0_12_91) l_0_12_95)) (* (* 4.0 l_0_12_92) l_0_12_96))))
 (let ((?x30637 (- (- ?x30631 (* (* 4.0 l_0_12_93) l_0_12_97)) (* (* 4.0 l_0_12_94) l_0_12_98))))
 (= ?x30637 0.0))))))))
(assert
 (let ((?x18360 (- (* (* (- 4.0) l_0_12_100) l_0_12_91) (* (* 4.0 l_0_12_101) l_0_12_92))))
 (let ((?x30671 (- (- ?x18360 (* (* 4.0 l_0_12_102) l_0_12_93)) (* (* 4.0 l_0_12_103) l_0_12_94))))
 (let ((?x30675 (+ (+ ?x30671 (* (* 4.0 l_0_12_49) l_0_12_58)) (* (* 4.0 l_0_12_50) l_0_12_59))))
 (let ((?x30679 (+ (+ ?x30675 (* (* 4.0 l_0_12_51) l_0_12_60)) (* (* 4.0 l_0_12_52) l_0_12_61))))
 (let ((?x30683 (- (- ?x30679 (* (* 4.0 l_0_12_70) l_0_12_79)) (* (* 4.0 l_0_12_71) l_0_12_80))))
 (let ((?x30687 (- (- ?x30683 (* (* 4.0 l_0_12_72) l_0_12_81)) (* (* 4.0 l_0_12_73) l_0_12_82))))
 (= ?x30687 0.0))))))))
(assert
 (let ((?x30032 (* l_0_12_57 l_0_12_57)))
 (let ((?x30704 (* 2.0 ?x30032)))
 (let ((?x30030 (* l_0_12_56 l_0_12_56)))
 (let ((?x30702 (* 2.0 ?x30030)))
 (let ((?x30028 (* l_0_12_55 l_0_12_55)))
 (let ((?x30700 (* 2.0 ?x30028)))
 (let ((?x30026 (* l_0_12_54 l_0_12_54)))
 (let ((?x30698 (* 2.0 ?x30026)))
 (let ((?x30024 (* l_0_12_53 l_0_12_53)))
 (let ((?x24454 (* 2.0 ?x30024)))
 (let ((?x30707 (- (+ (+ (+ (+ ?x24454 ?x30698) ?x30700) ?x30702) ?x30704) (* (* 2.0 l_0_12_74) l_0_12_74))))
 (let ((?x30711 (- (- ?x30707 (* (* 2.0 l_0_12_75) l_0_12_75)) (* (* 2.0 l_0_12_76) l_0_12_76))))
 (let ((?x30715 (- (- ?x30711 (* (* 2.0 l_0_12_77) l_0_12_77)) (* (* 2.0 l_0_12_78) l_0_12_78))))
 (let ((?x30721 (- (- ?x30715 (* (* 2.0 l_0_12_95) l_0_12_95)) (* (* 2.0 l_0_12_96) l_0_12_96))))
 (let ((?x30727 (- (- ?x30721 (* (* 2.0 l_0_12_97) l_0_12_97)) (* (* 2.0 l_0_12_98) l_0_12_98))))
 (= (- ?x30727 (* (* 2.0 l_0_12_99) l_0_12_99)) 0.0)))))))))))))))))
(assert
 (let ((?x30758 (- (* (* (- 4.0) l_0_12_100) l_0_12_95) (* (* 4.0 l_0_12_101) l_0_12_96))))
 (let ((?x30762 (- (- ?x30758 (* (* 4.0 l_0_12_102) l_0_12_97)) (* (* 4.0 l_0_12_103) l_0_12_98))))
 (let ((?x30768 (+ (- ?x30762 (* (* 4.0 l_0_12_104) l_0_12_99)) (* (* 4.0 l_0_12_53) l_0_12_58))))
 (let ((?x30774 (+ (+ ?x30768 (* (* 4.0 l_0_12_54) l_0_12_59)) (* (* 4.0 l_0_12_55) l_0_12_60))))
 (let ((?x30780 (+ (+ ?x30774 (* (* 4.0 l_0_12_56) l_0_12_61)) (* (* 4.0 l_0_12_57) l_0_12_62))))
 (let ((?x30786 (- (- ?x30780 (* (* 4.0 l_0_12_74) l_0_12_79)) (* (* 4.0 l_0_12_75) l_0_12_80))))
 (let ((?x30792 (- (- ?x30786 (* (* 4.0 l_0_12_76) l_0_12_81)) (* (* 4.0 l_0_12_77) l_0_12_82))))
 (= (- ?x30792 (* (* 4.0 l_0_12_78) l_0_12_83)) 0.0)))))))))
(assert
 (let ((?x30142 (* l_0_12_63 l_0_12_63)))
 (let ((?x30859 (* 2.0 ?x30142)))
 (let ((?x30140 (* l_0_12_62 l_0_12_62)))
 (let ((?x30857 (* 2.0 ?x30140)))
 (let ((?x30138 (* l_0_12_61 l_0_12_61)))
 (let ((?x30855 (* 2.0 ?x30138)))
 (let ((?x30136 (* l_0_12_60 l_0_12_60)))
 (let ((?x30853 (* 2.0 ?x30136)))
 (let ((?x30134 (* l_0_12_59 l_0_12_59)))
 (let ((?x30851 (* 2.0 ?x30134)))
 (let ((?x30158 (* l_0_12_58 l_0_12_58)))
 (let ((?x30849 (* 2.0 ?x30158)))
 (let ((?x30839 (- (* (* (- 2.0) l_0_12_100) l_0_12_100) (* (* 2.0 l_0_12_101) l_0_12_101))))
 (let ((?x30843 (- (- ?x30839 (* (* 2.0 l_0_12_102) l_0_12_102)) (* (* 2.0 l_0_12_103) l_0_12_103))))
 (let ((?x30848 (- (- ?x30843 (* (* 2.0 l_0_12_104) l_0_12_104)) (* (* 2.0 l_0_12_105) l_0_12_105))))
 (let ((?x30863 (- (+ (+ (+ (+ (+ (+ ?x30848 ?x30849) ?x30851) ?x30853) ?x30855) ?x30857) ?x30859) (* (* 2.0 l_0_12_79) l_0_12_79))))
 (let ((?x30869 (- (- ?x30863 (* (* 2.0 l_0_12_80) l_0_12_80)) (* (* 2.0 l_0_12_81) l_0_12_81))))
 (let ((?x30875 (- (- ?x30869 (* (* 2.0 l_0_12_82) l_0_12_82)) (* (* 2.0 l_0_12_83) l_0_12_83))))
 (= (- ?x30875 (* (* 2.0 l_0_12_84) l_0_12_84)) 0.0))))))))))))))))))))
(assert
 (let ((?x15639 (* l_0_12_85 l_0_12_85)))
 (let ((?x30917 (- (* (* (- 2.0) l_0_12_127) l_0_12_137) (* (* 2.0 l_0_12_148) l_0_12_158))))
 (= (+ (- ?x30917 (* (* 2.0 l_0_12_169) l_0_12_179)) ?x15639) 0.0))))
(assert
 (let ((?x18564 (- (* (* (- 4.0) l_0_12_106) l_0_12_116) (* (* 2.0 l_0_12_133) l_0_12_137))))
 (let ((?x24600 (- (- ?x18564 (* (* 2.0 l_0_12_134) l_0_12_138)) (* (* 2.0 l_0_12_135) l_0_12_139))))
 (let ((?x12233 (- (- ?x24600 (* (* 2.0 l_0_12_136) l_0_12_140)) (* (* 2.0 l_0_12_154) l_0_12_158))))
 (let ((?x30933 (- (- ?x12233 (* (* 2.0 l_0_12_155) l_0_12_159)) (* (* 2.0 l_0_12_156) l_0_12_160))))
 (let ((?x30937 (- (- ?x30933 (* (* 2.0 l_0_12_157) l_0_12_161)) (* (* 2.0 l_0_12_175) l_0_12_179))))
 (let ((?x30941 (- (- ?x30937 (* (* 2.0 l_0_12_176) l_0_12_180)) (* (* 2.0 l_0_12_177) l_0_12_181))))
 (let ((?x30945 (+ (- ?x30941 (* (* 2.0 l_0_12_178) l_0_12_182)) (* (* 2.0 l_0_12_85) l_0_12_91))))
 (= ?x30945 0.0)))))))))
(assert
 (let ((?x30981 (* l_0_12_183 l_0_12_183)))
 (let ((?x30979 (* l_0_12_182 l_0_12_182)))
 (let ((?x30977 (* l_0_12_181 l_0_12_181)))
 (let ((?x30975 (* l_0_12_180 l_0_12_180)))
 (let ((?x30973 (* l_0_12_179 l_0_12_179)))
 (let ((?x30971 (* l_0_12_162 l_0_12_162)))
 (let ((?x30969 (* l_0_12_161 l_0_12_161)))
 (let ((?x30967 (* l_0_12_160 l_0_12_160)))
 (let ((?x30965 (* l_0_12_159 l_0_12_159)))
 (let ((?x30963 (* l_0_12_158 l_0_12_158)))
 (let ((?x24691 (* l_0_12_141 l_0_12_141)))
 (let ((?x18628 (* l_0_12_140 l_0_12_140)))
 (let ((?x24681 (* l_0_12_139 l_0_12_139)))
 (let ((?x1826 (- (- (* (- l_0_12_137) l_0_12_137) (* l_0_12_138 l_0_12_138)) ?x24681)))
 (let ((?x30972 (- (- (- (- (- (- (- ?x1826 ?x18628) ?x24691) ?x30963) ?x30965) ?x30967) ?x30969) ?x30971)))
 (let ((?x30984 (+ (- (- (- (- (- ?x30972 ?x30973) ?x30975) ?x30977) ?x30979) ?x30981) (* (* 2.0 l_0_12_85) l_0_12_95))))
 (= ?x30984 0.0))))))))))))))))))
(assert
 (let ((?x31011 (- (* (* (- 2.0) l_0_12_116) l_0_12_116) (* (* 2.0 l_0_12_117) l_0_12_117))))
 (let ((?x31015 (- (- ?x31011 (* (* 2.0 l_0_12_118) l_0_12_118)) (* (* 2.0 l_0_12_119) l_0_12_119))))
 (let ((?x31019 (+ (- ?x31015 (* (* 2.0 l_0_12_120) l_0_12_120)) (* (* 2.0 l_0_12_91) l_0_12_95))))
 (let ((?x31023 (+ (+ ?x31019 (* (* 2.0 l_0_12_92) l_0_12_96)) (* (* 2.0 l_0_12_93) l_0_12_97))))
 (= (+ ?x31023 (* (* 2.0 l_0_12_94) l_0_12_98)) 0.0))))))
(assert
 (let ((?x24500 (* l_0_12_99 l_0_12_99)))
 (let ((?x12197 (* l_0_12_98 l_0_12_98)))
 (let ((?x24496 (* l_0_12_97 l_0_12_97)))
 (let ((?x24804 (+ (+ (+ (* l_0_12_95 l_0_12_95) (* l_0_12_96 l_0_12_96)) ?x24496) ?x12197)))
 (= (+ ?x24804 ?x24500) 0.0))))))
(assert
 (let ((?x18705 (- (* (* (- 2.0) l_0_12_106) l_0_12_106) (* (* 2.0 l_0_12_127) l_0_12_133))))
 (let ((?x31036 (- (- ?x18705 (* (* 2.0 l_0_12_148) l_0_12_154)) (* (* 2.0 l_0_12_169) l_0_12_175))))
 (= ?x31036 0.0))))
(assert
 (let ((?x31061 (* l_0_12_169 l_0_12_169)))
 (let ((?x31062 (- (- (* (- l_0_12_127) l_0_12_127) (* l_0_12_148 l_0_12_148)) ?x31061)))
 (= ?x31062 0.0))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_22 0.0))
(assert
 (>= l_0_12_24 0.0))
(assert
 (>= l_0_12_27 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_36 0.0))
(assert
 (>= l_0_12_42 0.0))
(assert
 (>= l_0_12_43 0.0))
(assert
 (>= l_0_12_45 0.0))
(assert
 (>= l_0_12_48 0.0))
(assert
 (>= l_0_12_52 0.0))
(assert
 (>= l_0_12_57 0.0))
(assert
 (>= l_0_12_63 0.0))
(assert
 (>= l_0_12_64 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_69 0.0))
(assert
 (>= l_0_12_73 0.0))
(assert
 (>= l_0_12_78 0.0))
(assert
 (>= l_0_12_84 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_87 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_94 0.0))
(assert
 (>= l_0_12_99 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (>= l_0_12_106 0.0))
(assert
 (>= l_0_12_108 0.0))
(assert
 (>= l_0_12_111 0.0))
(assert
 (>= l_0_12_115 0.0))
(assert
 (>= l_0_12_120 0.0))
(assert
 (>= l_0_12_126 0.0))
(assert
 (>= l_0_12_127 0.0))
(assert
 (>= l_0_12_129 0.0))
(assert
 (>= l_0_12_132 0.0))
(assert
 (>= l_0_12_136 0.0))
(assert
 (>= l_0_12_141 0.0))
(assert
 (>= l_0_12_147 0.0))
(assert
 (>= l_0_12_148 0.0))
(assert
 (>= l_0_12_150 0.0))
(assert
 (>= l_0_12_153 0.0))
(assert
 (>= l_0_12_157 0.0))
(assert
 (>= l_0_12_162 0.0))
(assert
 (>= l_0_12_168 0.0))
(assert
 (>= l_0_12_169 0.0))
(assert
 (>= l_0_12_171 0.0))
(assert
 (>= l_0_12_174 0.0))
(assert
 (>= l_0_12_178 0.0))
(assert
 (>= l_0_12_183 0.0))
(assert
 (>= l_0_12_189 0.0))
(assert
 (let ((?x31162 (* l_0_13_64 l_0_13_64)))
 (let ((?x31160 (* l_0_13_43 l_0_13_43)))
 (let ((?x31158 (* l_0_13_199 l_0_13_199)))
 (let ((?x31156 (* l_0_13_198 l_0_13_198)))
 (let ((?x31154 (* l_0_13_197 l_0_13_197)))
 (let ((?x31152 (* l_0_13_196 l_0_13_196)))
 (let ((?x31150 (* l_0_13_178 l_0_13_178)))
 (let ((?x31148 (* l_0_13_177 l_0_13_177)))
 (let ((?x31146 (* l_0_13_176 l_0_13_176)))
 (let ((?x31144 (* l_0_13_175 l_0_13_175)))
 (let ((?x31142 (* l_0_13_157 l_0_13_157)))
 (let ((?x31140 (* l_0_13_156 l_0_13_156)))
 (let ((?x31138 (* l_0_13_155 l_0_13_155)))
 (let ((?x31136 (* l_0_13_154 l_0_13_154)))
 (let ((?x31134 (* l_0_13_136 l_0_13_136)))
 (let ((?x31132 (* l_0_13_135 l_0_13_135)))
 (let ((?x31130 (* l_0_13_134 l_0_13_134)))
 (let ((?x31128 (* l_0_13_133 l_0_13_133)))
 (let ((?x31135 (- (- (- (- (* (* (- 4.0) l_0_13_106) l_0_13_112) ?x31128) ?x31130) ?x31132) ?x31134)))
 (let ((?x31149 (- (- (- (- (- (- (- ?x31135 ?x31136) ?x31138) ?x31140) ?x31142) ?x31144) ?x31146) ?x31148)))
 (let ((?x31163 (- (+ (- (- (- (- (- ?x31149 ?x31150) ?x31152) ?x31154) ?x31156) ?x31158) ?x31160) ?x31162)))
 (= (+ ?x31163 1.0) 0.0)))))))))))))))))))))))
(assert
 (let ((?x31195 (- (- (* 1.0 _a_6_) (* l_0_13_1 l_0_13_1)) (* (* 1.0 l_0_13_106) l_0_13_106))))
 (let ((?x31201 (- (- ?x31195 (* (* 2.0 l_0_13_127) l_0_13_130)) (* (* 2.0 l_0_13_148) l_0_13_151))))
 (let ((?x31207 (- (- ?x31201 (* (* 2.0 l_0_13_169) l_0_13_172)) (* (* 2.0 l_0_13_190) l_0_13_193))))
 (= ?x31207 0.0)))))
(assert
 (let ((?x31160 (* l_0_13_43 l_0_13_43)))
 (let ((?x31264 (* 2.0 ?x31160)))
 (let ((?x31234 (* 4.0 l_0_13_106)))
 (let ((?x31235 (* ?x31234 l_0_13_109)))
 (let ((?x31233 (- (- (* 1.0 _a_7_) (* (* 2.0 l_0_13_1) l_0_13_2)) (* (* 2.0 l_0_13_106) l_0_13_107))))
 (let ((?x31242 (- (- (+ ?x31233 ?x31235) (* (* 2.0 l_0_13_128) l_0_13_130)) (* (* 2.0 l_0_13_129) l_0_13_131))))
 (let ((?x31248 (- (- ?x31242 (* (* 2.0 l_0_13_149) l_0_13_151)) (* (* 2.0 l_0_13_150) l_0_13_152))))
 (let ((?x31254 (- (- ?x31248 (* (* 2.0 l_0_13_170) l_0_13_172)) (* (* 2.0 l_0_13_171) l_0_13_173))))
 (let ((?x31260 (- (- ?x31254 (* (* 2.0 l_0_13_191) l_0_13_193)) (* (* 2.0 l_0_13_192) l_0_13_194))))
 (let ((?x31268 (- (+ (- ?x31260 (* (* 2.0 l_0_13_22) l_0_13_25)) ?x31264) (* (* 2.0 l_0_13_64) l_0_13_64))))
 (= (- ?x31268 (* (* 2.0 l_0_13_85) l_0_13_85)) 0.0))))))))))))
(assert
 (let ((?x31162 (* l_0_13_64 l_0_13_64)))
 (let ((?x31160 (* l_0_13_43 l_0_13_43)))
 (let ((?x25086 (- (* (* (- 2.0) l_0_13_127) l_0_13_142) (* (* 2.0 l_0_13_148) l_0_13_163))))
 (let ((?x31300 (- (- ?x25086 (* (* 2.0 l_0_13_169) l_0_13_184)) (* (* 2.0 l_0_13_190) l_0_13_205))))
 (= (- (+ (- ?x31300 ?x31160) ?x31162) 1.0) 0.0))))))
(assert
 (let ((?x31340 (* l_0_13_195 l_0_13_195)))
 (let ((?x31338 (* l_0_13_194 l_0_13_194)))
 (let ((?x31336 (* l_0_13_193 l_0_13_193)))
 (let ((?x31334 (* l_0_13_174 l_0_13_174)))
 (let ((?x31332 (* l_0_13_173 l_0_13_173)))
 (let ((?x31330 (* l_0_13_172 l_0_13_172)))
 (let ((?x31328 (* l_0_13_153 l_0_13_153)))
 (let ((?x31326 (* l_0_13_152 l_0_13_152)))
 (let ((?x31324 (* l_0_13_151 l_0_13_151)))
 (let ((?x31322 (* l_0_13_132 l_0_13_132)))
 (let ((?x31320 (* l_0_13_131 l_0_13_131)))
 (let ((?x31318 (* l_0_13_130 l_0_13_130)))
 (let ((?x31317 (- (* (* (- 2.0) l_0_13_1) l_0_13_4) (* (* 2.0 l_0_13_106) l_0_13_109))))
 (let ((?x31331 (- (- (- (- (- (- (- ?x31317 ?x31318) ?x31320) ?x31322) ?x31324) ?x31326) ?x31328) ?x31330)))
 (= (- (- (- (- (- ?x31331 ?x31332) ?x31334) ?x31336) ?x31338) ?x31340) 0.0))))))))))))))))
(assert
 (let ((?x31234 (* 4.0 l_0_13_106)))
 (let ((?x31235 (* ?x31234 l_0_13_109)))
 (let ((?x31360 (- (- (* (* (- 2.0) l_0_13_1) l_0_13_7) ?x31235) (* (* 2.0 l_0_13_106) l_0_13_112))))
 (let ((?x31366 (- (- ?x31360 (* (* 2.0 l_0_13_130) l_0_13_133)) (* (* 2.0 l_0_13_131) l_0_13_134))))
 (let ((?x31372 (- (- ?x31366 (* (* 2.0 l_0_13_132) l_0_13_135)) (* (* 2.0 l_0_13_151) l_0_13_154))))
 (let ((?x31378 (- (- ?x31372 (* (* 2.0 l_0_13_152) l_0_13_155)) (* (* 2.0 l_0_13_153) l_0_13_156))))
 (let ((?x31384 (- (- ?x31378 (* (* 2.0 l_0_13_172) l_0_13_175)) (* (* 2.0 l_0_13_173) l_0_13_176))))
 (let ((?x31390 (- (- ?x31384 (* (* 2.0 l_0_13_174) l_0_13_177)) (* (* 2.0 l_0_13_193) l_0_13_196))))
 (let ((?x31396 (- (- ?x31390 (* (* 2.0 l_0_13_194) l_0_13_197)) (* (* 2.0 l_0_13_195) l_0_13_198))))
 (= ?x31396 0.0)))))))))))
(assert
 (let ((?x19078 (- (* (* (- 2.0) l_0_13_1) l_0_13_11) (* (* 2.0 l_0_13_106) l_0_13_116))))
 (let ((?x31432 (- (- ?x19078 (* (* 2.0 l_0_13_130) l_0_13_137)) (* (* 2.0 l_0_13_131) l_0_13_138))))
 (let ((?x31436 (- (- ?x31432 (* (* 2.0 l_0_13_132) l_0_13_139)) (* (* 2.0 l_0_13_151) l_0_13_158))))
 (let ((?x31440 (- (- ?x31436 (* (* 2.0 l_0_13_152) l_0_13_159)) (* (* 2.0 l_0_13_153) l_0_13_160))))
 (let ((?x31444 (- (- ?x31440 (* (* 2.0 l_0_13_172) l_0_13_179)) (* (* 2.0 l_0_13_173) l_0_13_180))))
 (let ((?x31448 (- (- ?x31444 (* (* 2.0 l_0_13_174) l_0_13_181)) (* (* 2.0 l_0_13_193) l_0_13_200))))
 (let ((?x31452 (- (- ?x31448 (* (* 2.0 l_0_13_194) l_0_13_201)) (* (* 2.0 l_0_13_195) l_0_13_202))))
 (= (+ ?x31452 (* (* 2.0 l_0_13_85) l_0_13_88)) 0.0)))))))))
(assert
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x31492 (* ?x31266 l_0_13_67)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x31490 (* ?x31489 l_0_13_46)))
 (let ((?x12814 (- (* (* (- 2.0) l_0_13_1) l_0_13_16) (* (* 2.0 l_0_13_106) l_0_13_121))))
 (let ((?x31468 (- (- ?x12814 (* (* 2.0 l_0_13_130) l_0_13_142)) (* (* 2.0 l_0_13_131) l_0_13_143))))
 (let ((?x31472 (- (- ?x31468 (* (* 2.0 l_0_13_132) l_0_13_144)) (* (* 2.0 l_0_13_151) l_0_13_163))))
 (let ((?x31476 (- (- ?x31472 (* (* 2.0 l_0_13_152) l_0_13_164)) (* (* 2.0 l_0_13_153) l_0_13_165))))
 (let ((?x31480 (- (- ?x31476 (* (* 2.0 l_0_13_172) l_0_13_184)) (* (* 2.0 l_0_13_173) l_0_13_185))))
 (let ((?x31484 (- (- ?x31480 (* (* 2.0 l_0_13_174) l_0_13_186)) (* (* 2.0 l_0_13_193) l_0_13_205))))
 (let ((?x31488 (- (- ?x31484 (* (* 2.0 l_0_13_194) l_0_13_206)) (* (* 2.0 l_0_13_195) l_0_13_207))))
 (= (+ (- ?x31488 ?x31490) ?x31492) 0.0)))))))))))))
(assert
 (let ((?x31548 (* l_0_13_3 l_0_13_3)))
 (let ((?x31540 (* l_0_13_2 l_0_13_2)))
 (let ((?x31534 (* 4.0 l_0_13_108)))
 (let ((?x31535 (* ?x31534 l_0_13_110)))
 (let ((?x31533 (- (* (* 4.0 l_0_13_107) l_0_13_109) (* (* 1.0 l_0_13_107) l_0_13_107))))
 (let ((?x31544 (- (- (- (+ ?x31533 ?x31535) (* (* 1.0 l_0_13_108) l_0_13_108)) ?x31540) (* (* 2.0 l_0_13_23) l_0_13_25))))
 (let ((?x31552 (+ (- (- ?x31544 (* (* 2.0 l_0_13_24) l_0_13_26)) ?x31548) (* (* 4.0 l_0_13_43) l_0_13_44))))
 (let ((?x31558 (- (- ?x31552 (* (* 4.0 l_0_13_64) l_0_13_65)) (* (* 4.0 l_0_13_85) l_0_13_86))))
 (= ?x31558 0.0))))))))))
(assert
 (let ((?x31615 (* l_0_13_27 l_0_13_27)))
 (let ((?x31613 (* l_0_13_26 l_0_13_26)))
 (let ((?x31611 (* l_0_13_25 l_0_13_25)))
 (let ((?x31605 (* l_0_13_111 l_0_13_111)))
 (let ((?x31606 (* 2.0 ?x31605)))
 (let ((?x31602 (* l_0_13_110 l_0_13_110)))
 (let ((?x31603 (* 2.0 ?x31602)))
 (let ((?x31599 (* l_0_13_109 l_0_13_109)))
 (let ((?x31600 (* 2.0 ?x31599)))
 (let ((?x31598 (- (* (* (- 2.0) l_0_13_107) l_0_13_109) (* (* 2.0 l_0_13_108) l_0_13_110))))
 (let ((?x31610 (- (+ (+ (+ ?x31598 ?x31600) ?x31603) ?x31606) (* (* 2.0 l_0_13_2) l_0_13_4))))
 (let ((?x31619 (- (- (- (- ?x31610 ?x31611) ?x31613) ?x31615) (* (* 2.0 l_0_13_3) l_0_13_5))))
 (let ((?x31623 (- (+ ?x31619 (* (* 4.0 l_0_13_43) l_0_13_46)) (* (* 4.0 l_0_13_64) l_0_13_67))))
 (= (- ?x31623 (* (* 4.0 l_0_13_85) l_0_13_88)) 0.0)))))))))))))))
(assert
 (let ((?x31646 (* 4.0 l_0_13_111)))
 (let ((?x31647 (* ?x31646 l_0_13_114)))
 (let ((?x31643 (* 4.0 l_0_13_110)))
 (let ((?x31644 (* ?x31643 l_0_13_113)))
 (let ((?x31640 (* 4.0 l_0_13_109)))
 (let ((?x31641 (* ?x31640 l_0_13_112)))
 (let ((?x31534 (* 4.0 l_0_13_108)))
 (let ((?x31535 (* ?x31534 l_0_13_110)))
 (let ((?x31636 (- (* (* (- 4.0) l_0_13_107) l_0_13_109) (* (* 2.0 l_0_13_107) l_0_13_112))))
 (let ((?x31645 (+ (+ (- (- ?x31636 ?x31535) (* (* 2.0 l_0_13_108) l_0_13_113)) ?x31641) ?x31644)))
 (let ((?x31653 (- (- (+ ?x31645 ?x31647) (* (* 2.0 l_0_13_2) l_0_13_7)) (* (* 2.0 l_0_13_25) l_0_13_28))))
 (let ((?x31659 (- (- ?x31653 (* (* 2.0 l_0_13_26) l_0_13_29)) (* (* 2.0 l_0_13_27) l_0_13_30))))
 (let ((?x31663 (+ (- ?x31659 (* (* 2.0 l_0_13_3) l_0_13_8)) (* (* 4.0 l_0_13_43) l_0_13_49))))
 (let ((?x31667 (- (- ?x31663 (* (* 4.0 l_0_13_64) l_0_13_70)) (* (* 4.0 l_0_13_85) l_0_13_91))))
 (= ?x31667 0.0))))))))))))))))
(assert
 (let ((?x31646 (* 4.0 l_0_13_111)))
 (let ((?x31707 (* ?x31646 l_0_13_118)))
 (let ((?x31643 (* 4.0 l_0_13_110)))
 (let ((?x31705 (* ?x31643 l_0_13_117)))
 (let ((?x31640 (* 4.0 l_0_13_109)))
 (let ((?x31700 (* ?x31640 l_0_13_116)))
 (let ((?x31699 (- (* (* (- 2.0) l_0_13_107) l_0_13_116) (* (* 2.0 l_0_13_108) l_0_13_117))))
 (let ((?x31708 (+ (+ (- (+ ?x31699 ?x31700) (* (* 2.0 l_0_13_11) l_0_13_2)) ?x31705) ?x31707)))
 (let ((?x31713 (- (- ?x31708 (* (* 2.0 l_0_13_12) l_0_13_3)) (* (* 2.0 l_0_13_25) l_0_13_32))))
 (let ((?x31717 (- (- ?x31713 (* (* 2.0 l_0_13_26) l_0_13_33)) (* (* 2.0 l_0_13_27) l_0_13_34))))
 (let ((?x31721 (- (+ ?x31717 (* (* 4.0 l_0_13_43) l_0_13_53)) (* (* 4.0 l_0_13_64) l_0_13_74))))
 (let ((?x31726 (+ (- ?x31721 (* (* 4.0 l_0_13_85) l_0_13_95)) (* (* 2.0 l_0_13_86) l_0_13_88))))
 (= (+ ?x31726 (* (* 2.0 l_0_13_87) l_0_13_89)) 0.0))))))))))))))
(assert
 (let ((?x31799 (* 2.0 l_0_13_66)))
 (let ((?x31800 (* ?x31799 l_0_13_68)))
 (let ((?x31796 (* 2.0 l_0_13_65)))
 (let ((?x31797 (* ?x31796 l_0_13_67)))
 (let ((?x31791 (* 2.0 l_0_13_45)))
 (let ((?x31792 (* ?x31791 l_0_13_47)))
 (let ((?x31788 (* 2.0 l_0_13_44)))
 (let ((?x31789 (* ?x31788 l_0_13_46)))
 (let ((?x31646 (* 4.0 l_0_13_111)))
 (let ((?x31772 (* ?x31646 l_0_13_123)))
 (let ((?x31643 (* 4.0 l_0_13_110)))
 (let ((?x31770 (* ?x31643 l_0_13_122)))
 (let ((?x31640 (* 4.0 l_0_13_109)))
 (let ((?x31768 (* ?x31640 l_0_13_121)))
 (let ((?x31765 (- (* (* (- 4.0) l_0_13_100) l_0_13_85) (* (* 2.0 l_0_13_107) l_0_13_121))))
 (let ((?x31773 (+ (+ (+ (- ?x31765 (* (* 2.0 l_0_13_108) l_0_13_122)) ?x31768) ?x31770) ?x31772)))
 (let ((?x31779 (- (- ?x31773 (* (* 2.0 l_0_13_16) l_0_13_2)) (* (* 2.0 l_0_13_17) l_0_13_3))))
 (let ((?x31783 (- (- ?x31779 (* (* 2.0 l_0_13_25) l_0_13_37)) (* (* 2.0 l_0_13_26) l_0_13_38))))
 (let ((?x31787 (+ (- ?x31783 (* (* 2.0 l_0_13_27) l_0_13_39)) (* (* 4.0 l_0_13_43) l_0_13_58))))
 (let ((?x31798 (+ (- (- (- ?x31787 ?x31789) ?x31792) (* (* 4.0 l_0_13_64) l_0_13_79)) ?x31797)))
 (= (+ ?x31798 ?x31800) 0.0))))))))))))))))))))))
(assert
 (let ((?x31859 (* l_0_13_6 l_0_13_6)))
 (let ((?x31857 (* l_0_13_5 l_0_13_5)))
 (let ((?x31855 (* l_0_13_4 l_0_13_4)))
 (let ((?x31851 (- (* (* (- 1.0) l_0_13_109) l_0_13_109) (* (* 1.0 l_0_13_110) l_0_13_110))))
 (let ((?x31860 (- (- (- (- ?x31851 (* (* 1.0 l_0_13_111) l_0_13_111)) ?x31855) ?x31857) ?x31859)))
 (= ?x31860 0.0)))))))
(assert
 (let ((?x31877 (- (* (* (- 2.0) l_0_13_109) l_0_13_112) (* (* 2.0 l_0_13_109) l_0_13_109))))
 (let ((?x31882 (- (- ?x31877 (* (* 2.0 l_0_13_110) l_0_13_113)) (* (* 2.0 l_0_13_110) l_0_13_110))))
 (let ((?x31887 (- (- ?x31882 (* (* 2.0 l_0_13_111) l_0_13_114)) (* (* 2.0 l_0_13_111) l_0_13_111))))
 (let ((?x31893 (- (- ?x31887 (* (* 2.0 l_0_13_4) l_0_13_7)) (* (* 2.0 l_0_13_5) l_0_13_8))))
 (= (- ?x31893 (* (* 2.0 l_0_13_6) l_0_13_9)) 0.0))))))
(assert
 (let ((?x31920 (* l_0_13_90 l_0_13_90)))
 (let ((?x31918 (* l_0_13_89 l_0_13_89)))
 (let ((?x31916 (* l_0_13_88 l_0_13_88)))
 (let ((?x31906 (- (* (* (- 2.0) l_0_13_109) l_0_13_116) (* (* 2.0 l_0_13_11) l_0_13_4))))
 (let ((?x31910 (- (- ?x31906 (* (* 2.0 l_0_13_110) l_0_13_117)) (* (* 2.0 l_0_13_111) l_0_13_118))))
 (let ((?x31915 (- (- ?x31910 (* (* 2.0 l_0_13_12) l_0_13_5)) (* (* 2.0 l_0_13_13) l_0_13_6))))
 (= (+ (+ (+ ?x31915 ?x31916) ?x31918) ?x31920) 0.0))))))))
(assert
 (let ((?x31962 (* l_0_13_69 l_0_13_69)))
 (let ((?x31960 (* l_0_13_68 l_0_13_68)))
 (let ((?x31958 (* l_0_13_67 l_0_13_67)))
 (let ((?x31956 (* l_0_13_48 l_0_13_48)))
 (let ((?x31954 (* l_0_13_47 l_0_13_47)))
 (let ((?x31952 (* l_0_13_46 l_0_13_46)))
 (let ((?x31942 (- (* (* (- 2.0) l_0_13_109) l_0_13_121) (* (* 2.0 l_0_13_110) l_0_13_122))))
 (let ((?x31946 (- (- ?x31942 (* (* 2.0 l_0_13_111) l_0_13_123)) (* (* 2.0 l_0_13_16) l_0_13_4))))
 (let ((?x31951 (- (- ?x31946 (* (* 2.0 l_0_13_17) l_0_13_5)) (* (* 2.0 l_0_13_18) l_0_13_6))))
 (= (+ (+ (+ (- (- (- ?x31951 ?x31952) ?x31954) ?x31956) ?x31958) ?x31960) ?x31962) 0.0)))))))))))
(assert
 (let ((?x31997 (* l_0_13_9 l_0_13_9)))
 (let ((?x31995 (* l_0_13_8 l_0_13_8)))
 (let ((?x31993 (* l_0_13_7 l_0_13_7)))
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x31492 (* ?x31266 l_0_13_67)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x31490 (* ?x31489 l_0_13_46)))
 (let ((?x31646 (* 4.0 l_0_13_111)))
 (let ((?x31647 (* ?x31646 l_0_13_114)))
 (let ((?x31643 (* 4.0 l_0_13_110)))
 (let ((?x31644 (* ?x31643 l_0_13_113)))
 (let ((?x31640 (* 4.0 l_0_13_109)))
 (let ((?x31641 (* ?x31640 l_0_13_112)))
 (let ((?x31981 (- (- (- (- (* (- l_0_13_10) l_0_13_10) ?x31641) ?x31644) ?x31647) (* (* 1.0 l_0_13_112) l_0_13_112))))
 (let ((?x31987 (- (- ?x31981 (* (* 1.0 l_0_13_113) l_0_13_113)) (* (* 1.0 l_0_13_114) l_0_13_114))))
 (let ((?x31994 (- (- (+ (- ?x31987 (* (* 1.0 l_0_13_115) l_0_13_115)) ?x31490) ?x31492) ?x31993)))
 (= (- (- ?x31994 ?x31995) ?x31997) 0.0))))))))))))))))))
(assert
 (let ((?x31646 (* 4.0 l_0_13_111)))
 (let ((?x31707 (* ?x31646 l_0_13_118)))
 (let ((?x31643 (* 4.0 l_0_13_110)))
 (let ((?x31705 (* ?x31643 l_0_13_117)))
 (let ((?x31640 (* 4.0 l_0_13_109)))
 (let ((?x31700 (* ?x31640 l_0_13_116)))
 (let ((?x32024 (- (- (* (* (- 2.0) l_0_13_10) l_0_13_14) ?x31700) (* (* 2.0 l_0_13_11) l_0_13_7))))
 (let ((?x32032 (- (- (- (- ?x32024 ?x31705) ?x31707) (* (* 2.0 l_0_13_112) l_0_13_116)) (* (* 2.0 l_0_13_113) l_0_13_117))))
 (let ((?x32038 (- (- ?x32032 (* (* 2.0 l_0_13_114) l_0_13_118)) (* (* 2.0 l_0_13_115) l_0_13_119))))
 (let ((?x32042 (- (- ?x32038 (* (* 2.0 l_0_13_12) l_0_13_8)) (* (* 2.0 l_0_13_13) l_0_13_9))))
 (let ((?x32048 (+ (+ ?x32042 (* (* 2.0 l_0_13_88) l_0_13_91)) (* (* 2.0 l_0_13_89) l_0_13_92))))
 (= (+ ?x32048 (* (* 2.0 l_0_13_90) l_0_13_93)) 0.0)))))))))))))
(assert
 (let ((?x32101 (* 2.0 l_0_13_69)))
 (let ((?x32102 (* ?x32101 l_0_13_72)))
 (let ((?x32098 (* 2.0 l_0_13_68)))
 (let ((?x32099 (* ?x32098 l_0_13_71)))
 (let ((?x32095 (* 2.0 l_0_13_67)))
 (let ((?x32096 (* ?x32095 l_0_13_70)))
 (let ((?x32092 (* 2.0 l_0_13_48)))
 (let ((?x32093 (* ?x32092 l_0_13_51)))
 (let ((?x32089 (* 2.0 l_0_13_47)))
 (let ((?x32090 (* ?x32089 l_0_13_50)))
 (let ((?x32086 (* 2.0 l_0_13_46)))
 (let ((?x32087 (* ?x32086 l_0_13_49)))
 (let ((?x31646 (* 4.0 l_0_13_111)))
 (let ((?x31772 (* ?x31646 l_0_13_123)))
 (let ((?x31643 (* 4.0 l_0_13_110)))
 (let ((?x31770 (* ?x31643 l_0_13_122)))
 (let ((?x31640 (* 4.0 l_0_13_109)))
 (let ((?x31768 (* ?x31640 l_0_13_121)))
 (let ((?x32073 (- (- (- (- (* (* (- 2.0) l_0_13_10) l_0_13_19) ?x31768) ?x31770) ?x31772) (* (* 2.0 l_0_13_112) l_0_13_121))))
 (let ((?x32077 (- (- ?x32073 (* (* 2.0 l_0_13_113) l_0_13_122)) (* (* 2.0 l_0_13_114) l_0_13_123))))
 (let ((?x32081 (- (- ?x32077 (* (* 2.0 l_0_13_115) l_0_13_124)) (* (* 2.0 l_0_13_16) l_0_13_7))))
 (let ((?x32085 (- (- ?x32081 (* (* 2.0 l_0_13_17) l_0_13_8)) (* (* 2.0 l_0_13_18) l_0_13_9))))
 (= (+ (+ (+ (- (- (- ?x32085 ?x32087) ?x32090) ?x32093) ?x32096) ?x32099) ?x32102) 0.0))))))))))))))))))))))))
(assert
 (let ((?x32139 (* l_0_13_15 l_0_13_15)))
 (let ((?x32137 (* l_0_13_14 l_0_13_14)))
 (let ((?x32135 (* l_0_13_13 l_0_13_13)))
 (let ((?x32130 (* l_0_13_12 l_0_13_12)))
 (let ((?x32120 (- (* (- l_0_13_11) l_0_13_11) (* (* 1.0 l_0_13_116) l_0_13_116))))
 (let ((?x32126 (- (- ?x32120 (* (* 1.0 l_0_13_117) l_0_13_117)) (* (* 1.0 l_0_13_118) l_0_13_118))))
 (let ((?x32134 (- (- (- ?x32126 (* (* 1.0 l_0_13_119) l_0_13_119)) ?x32130) (* (* 1.0 l_0_13_120) l_0_13_120))))
 (let ((?x32142 (+ (- (- (- ?x32134 ?x32135) ?x32137) ?x32139) (* (* 2.0 l_0_13_88) l_0_13_95))))
 (let ((?x32146 (+ (+ ?x32142 (* (* 2.0 l_0_13_89) l_0_13_96)) (* (* 2.0 l_0_13_90) l_0_13_97))))
 (= ?x32146 0.0)))))))))))
(assert
 (let ((?x32101 (* 2.0 l_0_13_69)))
 (let ((?x32215 (* ?x32101 l_0_13_76)))
 (let ((?x32098 (* 2.0 l_0_13_68)))
 (let ((?x32213 (* ?x32098 l_0_13_75)))
 (let ((?x32095 (* 2.0 l_0_13_67)))
 (let ((?x32211 (* ?x32095 l_0_13_74)))
 (let ((?x32092 (* 2.0 l_0_13_48)))
 (let ((?x32209 (* ?x32092 l_0_13_55)))
 (let ((?x32089 (* 2.0 l_0_13_47)))
 (let ((?x32207 (* ?x32089 l_0_13_54)))
 (let ((?x32086 (* 2.0 l_0_13_46)))
 (let ((?x32205 (* ?x32086 l_0_13_53)))
 (let ((?x32174 (+ (* (* 2.0 l_0_13_100) l_0_13_88) (* (* 2.0 l_0_13_101) l_0_13_89))))
 (let ((?x32179 (- (+ ?x32174 (* (* 2.0 l_0_13_102) l_0_13_90)) (* (* 2.0 l_0_13_11) l_0_13_16))))
 (let ((?x32185 (- (- ?x32179 (* (* 2.0 l_0_13_116) l_0_13_121)) (* (* 2.0 l_0_13_117) l_0_13_122))))
 (let ((?x32191 (- (- ?x32185 (* (* 2.0 l_0_13_118) l_0_13_123)) (* (* 2.0 l_0_13_119) l_0_13_124))))
 (let ((?x32196 (- (- ?x32191 (* (* 2.0 l_0_13_12) l_0_13_17)) (* (* 2.0 l_0_13_120) l_0_13_125))))
 (let ((?x32201 (- (- ?x32196 (* (* 2.0 l_0_13_13) l_0_13_18)) (* (* 2.0 l_0_13_14) l_0_13_19))))
 (let ((?x32210 (- (- (- (- ?x32201 (* (* 2.0 l_0_13_15) l_0_13_20)) ?x32205) ?x32207) ?x32209)))
 (= (+ (+ (+ ?x32210 ?x32211) ?x32213) ?x32215) 0.0)))))))))))))))))))))
(assert
 (let ((?x32101 (* 2.0 l_0_13_69)))
 (let ((?x32284 (* ?x32101 l_0_13_81)))
 (let ((?x32098 (* 2.0 l_0_13_68)))
 (let ((?x32282 (* ?x32098 l_0_13_80)))
 (let ((?x32095 (* 2.0 l_0_13_67)))
 (let ((?x32280 (* ?x32095 l_0_13_79)))
 (let ((?x32092 (* 2.0 l_0_13_48)))
 (let ((?x32278 (* ?x32092 l_0_13_60)))
 (let ((?x32089 (* 2.0 l_0_13_47)))
 (let ((?x32276 (* ?x32089 l_0_13_59)))
 (let ((?x32086 (* 2.0 l_0_13_46)))
 (let ((?x32274 (* ?x32086 l_0_13_58)))
 (let ((?x32272 (* l_0_13_21 l_0_13_21)))
 (let ((?x32270 (* l_0_13_20 l_0_13_20)))
 (let ((?x32268 (* l_0_13_19 l_0_13_19)))
 (let ((?x32266 (* l_0_13_18 l_0_13_18)))
 (let ((?x32264 (* l_0_13_17 l_0_13_17)))
 (let ((?x32262 (* l_0_13_16 l_0_13_16)))
 (let ((?x32249 (- (* (* (- 1.0) l_0_13_121) l_0_13_121) (* (* 1.0 l_0_13_122) l_0_13_122))))
 (let ((?x32255 (- (- ?x32249 (* (* 1.0 l_0_13_123) l_0_13_123)) (* (* 1.0 l_0_13_124) l_0_13_124))))
 (let ((?x32261 (- (- ?x32255 (* (* 1.0 l_0_13_125) l_0_13_125)) (* (* 1.0 l_0_13_126) l_0_13_126))))
 (let ((?x32275 (- (- (- (- (- (- (- ?x32261 ?x32262) ?x32264) ?x32266) ?x32268) ?x32270) ?x32272) ?x32274)))
 (= (+ (+ (+ (- (- ?x32275 ?x32276) ?x32278) ?x32280) ?x32282) ?x32284) 0.0))))))))))))))))))))))))
(assert
 (let ((?x32331 (* l_0_13_22 l_0_13_22)))
 (let ((?x31211 (* l_0_13_106 l_0_13_106)))
 (let ((?x26344 (* 2.0 ?x31211)))
 (let ((?x32326 (- (- ?x26344 (* (* 2.0 l_0_13_127) l_0_13_128)) (* (* 2.0 l_0_13_148) l_0_13_149))))
 (let ((?x32330 (- (- ?x32326 (* (* 2.0 l_0_13_169) l_0_13_170)) (* (* 2.0 l_0_13_190) l_0_13_191))))
 (= (- ?x32330 ?x32331) 0.0)))))))
(assert
 (let ((?x32367 (* l_0_13_192 l_0_13_192)))
 (let ((?x32365 (* l_0_13_191 l_0_13_191)))
 (let ((?x32363 (* l_0_13_171 l_0_13_171)))
 (let ((?x32361 (* l_0_13_170 l_0_13_170)))
 (let ((?x32359 (* l_0_13_150 l_0_13_150)))
 (let ((?x32357 (* l_0_13_149 l_0_13_149)))
 (let ((?x32355 (* l_0_13_129 l_0_13_129)))
 (let ((?x32353 (* l_0_13_128 l_0_13_128)))
 (let ((?x32360 (- (- (- (- (* (* 4.0 l_0_13_106) l_0_13_107) ?x32353) ?x32355) ?x32357) ?x32359)))
 (let ((?x32370 (- (- (- (- (- ?x32360 ?x32361) ?x32363) ?x32365) ?x32367) (* (* 2.0 l_0_13_22) l_0_13_23))))
 (= ?x32370 0.0))))))))))))
(assert
 (let ((?x32390 (+ (* (* (- 4.0) l_0_13_106) l_0_13_107) (* (* 4.0 l_0_13_106) l_0_13_112))))
 (let ((?x32394 (- (- ?x32390 (* (* 2.0 l_0_13_128) l_0_13_133)) (* (* 2.0 l_0_13_129) l_0_13_134))))
 (let ((?x32398 (- (- ?x32394 (* (* 2.0 l_0_13_149) l_0_13_154)) (* (* 2.0 l_0_13_150) l_0_13_155))))
 (let ((?x32402 (- (- ?x32398 (* (* 2.0 l_0_13_170) l_0_13_175)) (* (* 2.0 l_0_13_171) l_0_13_176))))
 (let ((?x32406 (- (- ?x32402 (* (* 2.0 l_0_13_191) l_0_13_196)) (* (* 2.0 l_0_13_192) l_0_13_197))))
 (= (- ?x32406 (* (* 2.0 l_0_13_22) l_0_13_28)) 0.0)))))))
(assert
 (let ((?x32427 (- (* (* 4.0 l_0_13_106) l_0_13_116) (* (* 2.0 l_0_13_128) l_0_13_137))))
 (let ((?x32431 (- (- ?x32427 (* (* 2.0 l_0_13_129) l_0_13_138)) (* (* 2.0 l_0_13_149) l_0_13_158))))
 (let ((?x32435 (- (- ?x32431 (* (* 2.0 l_0_13_150) l_0_13_159)) (* (* 2.0 l_0_13_170) l_0_13_179))))
 (let ((?x32439 (- (- ?x32435 (* (* 2.0 l_0_13_171) l_0_13_180)) (* (* 2.0 l_0_13_191) l_0_13_200))))
 (let ((?x32443 (- (- ?x32439 (* (* 2.0 l_0_13_192) l_0_13_201)) (* (* 2.0 l_0_13_22) l_0_13_32))))
 (= (+ ?x32443 (* (* 2.0 l_0_13_85) l_0_13_86)) 0.0)))))))
(assert
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x32504 (* ?x31266 l_0_13_65)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x32502 (* ?x31489 l_0_13_44)))
 (let ((?x32485 (- (* (* 4.0 l_0_13_106) l_0_13_121) (* (* 2.0 l_0_13_128) l_0_13_142))))
 (let ((?x32489 (- (- ?x32485 (* (* 2.0 l_0_13_129) l_0_13_143)) (* (* 2.0 l_0_13_149) l_0_13_163))))
 (let ((?x32493 (- (- ?x32489 (* (* 2.0 l_0_13_150) l_0_13_164)) (* (* 2.0 l_0_13_170) l_0_13_184))))
 (let ((?x32497 (- (- ?x32493 (* (* 2.0 l_0_13_171) l_0_13_185)) (* (* 2.0 l_0_13_191) l_0_13_205))))
 (let ((?x32501 (- (- ?x32497 (* (* 2.0 l_0_13_192) l_0_13_206)) (* (* 2.0 l_0_13_22) l_0_13_37))))
 (= (+ (- ?x32501 ?x32502) ?x32504) 0.0)))))))))))
(assert
 (let ((?x32537 (* l_0_13_24 l_0_13_24)))
 (let ((?x32535 (* l_0_13_23 l_0_13_23)))
 (let ((?x31568 (* l_0_13_108 l_0_13_108)))
 (let ((?x26606 (* 2.0 ?x31568)))
 (let ((?x31562 (* l_0_13_107 l_0_13_107)))
 (let ((?x26605 (* 2.0 ?x31562)))
 (let ((?x32534 (+ ?x26605 ?x26606)))
 (= (- (- ?x32534 ?x32535) ?x32537) 0.0)))))))))
(assert
 (let ((?x31534 (* 4.0 l_0_13_108)))
 (let ((?x32547 (* ?x31534 l_0_13_113)))
 (let ((?x32546 (- (* (* 4.0 l_0_13_107) l_0_13_112) (* (* 2.0 l_0_13_107) l_0_13_107))))
 (let ((?x32552 (- (- (+ ?x32546 ?x32547) (* (* 2.0 l_0_13_108) l_0_13_108)) (* (* 2.0 l_0_13_23) l_0_13_28))))
 (= (- ?x32552 (* (* 2.0 l_0_13_24) l_0_13_29)) 0.0))))))
(assert
 (let ((?x32577 (* l_0_13_87 l_0_13_87)))
 (let ((?x32575 (* l_0_13_86 l_0_13_86)))
 (let ((?x31534 (* 4.0 l_0_13_108)))
 (let ((?x20384 (* ?x31534 l_0_13_117)))
 (let ((?x32572 (- (+ (* (* 4.0 l_0_13_107) l_0_13_116) ?x20384) (* (* 2.0 l_0_13_23) l_0_13_32))))
 (= (+ (+ (- ?x32572 (* (* 2.0 l_0_13_24) l_0_13_33)) ?x32575) ?x32577) 0.0)))))))
(assert
 (let ((?x32610 (* l_0_13_66 l_0_13_66)))
 (let ((?x32608 (* l_0_13_65 l_0_13_65)))
 (let ((?x32606 (* l_0_13_45 l_0_13_45)))
 (let ((?x32604 (* l_0_13_44 l_0_13_44)))
 (let ((?x31534 (* 4.0 l_0_13_108)))
 (let ((?x32598 (* ?x31534 l_0_13_122)))
 (let ((?x32601 (- (+ (* (* 4.0 l_0_13_107) l_0_13_121) ?x32598) (* (* 2.0 l_0_13_23) l_0_13_37))))
 (let ((?x32609 (+ (- (- (- ?x32601 (* (* 2.0 l_0_13_24) l_0_13_38)) ?x32604) ?x32606) ?x32608)))
 (= (+ ?x32609 ?x32610) 0.0))))))))))
(assert
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x32504 (* ?x31266 l_0_13_65)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x32502 (* ?x31489 l_0_13_44)))
 (let ((?x32628 (* l_0_13_31 l_0_13_31)))
 (let ((?x32626 (* l_0_13_30 l_0_13_30)))
 (let ((?x32624 (* l_0_13_29 l_0_13_29)))
 (let ((?x20415 (* l_0_13_28 l_0_13_28)))
 (let ((?x3556 (* l_0_13_115 l_0_13_115)))
 (let ((?x20417 (* 2.0 ?x3556)))
 (let ((?x19654 (* l_0_13_114 l_0_13_114)))
 (let ((?x26595 (* 2.0 ?x19654)))
 (let ((?x32004 (* l_0_13_113 l_0_13_113)))
 (let ((?x20387 (* 2.0 ?x32004)))
 (let ((?x3470 (* l_0_13_112 l_0_13_112)))
 (let ((?x26611 (* 2.0 ?x3470)))
 (let ((?x31534 (* 4.0 l_0_13_108)))
 (let ((?x32547 (* ?x31534 l_0_13_113)))
 (let ((?x26600 (+ (+ (+ (- (* (* (- 4.0) l_0_13_107) l_0_13_112) ?x32547) ?x26611) ?x20387) ?x26595)))
 (let ((?x32631 (- (+ (- (- (- (- (+ ?x26600 ?x20417) ?x20415) ?x32624) ?x32626) ?x32628) ?x32502) ?x32504)))
 (= ?x32631 0.0))))))))))))))))))))))
(assert
 (let ((?x32654 (* 4.0 l_0_13_115)))
 (let ((?x32655 (* ?x32654 l_0_13_119)))
 (let ((?x32651 (* 4.0 l_0_13_114)))
 (let ((?x32652 (* ?x32651 l_0_13_118)))
 (let ((?x32648 (* 4.0 l_0_13_113)))
 (let ((?x32649 (* ?x32648 l_0_13_117)))
 (let ((?x31534 (* 4.0 l_0_13_108)))
 (let ((?x20384 (* ?x31534 l_0_13_117)))
 (let ((?x32647 (+ (- (* (* (- 4.0) l_0_13_107) l_0_13_116) ?x20384) (* (* 4.0 l_0_13_112) l_0_13_116))))
 (let ((?x32659 (- (+ (+ (+ ?x32647 ?x32649) ?x32652) ?x32655) (* (* 2.0 l_0_13_28) l_0_13_32))))
 (let ((?x32665 (- (- ?x32659 (* (* 2.0 l_0_13_29) l_0_13_33)) (* (* 2.0 l_0_13_30) l_0_13_34))))
 (let ((?x32670 (+ (- ?x32665 (* (* 2.0 l_0_13_31) l_0_13_35)) (* (* 2.0 l_0_13_86) l_0_13_91))))
 (= (+ ?x32670 (* (* 2.0 l_0_13_87) l_0_13_92)) 0.0))))))))))))))
(assert
 (let ((?x31799 (* 2.0 l_0_13_66)))
 (let ((?x32711 (* ?x31799 l_0_13_71)))
 (let ((?x31796 (* 2.0 l_0_13_65)))
 (let ((?x32709 (* ?x31796 l_0_13_70)))
 (let ((?x31791 (* 2.0 l_0_13_45)))
 (let ((?x32707 (* ?x31791 l_0_13_50)))
 (let ((?x31788 (* 2.0 l_0_13_44)))
 (let ((?x32705 (* ?x31788 l_0_13_49)))
 (let ((?x32654 (* 4.0 l_0_13_115)))
 (let ((?x32695 (* ?x32654 l_0_13_124)))
 (let ((?x32651 (* 4.0 l_0_13_114)))
 (let ((?x32693 (* ?x32651 l_0_13_123)))
 (let ((?x32648 (* 4.0 l_0_13_113)))
 (let ((?x32691 (* ?x32648 l_0_13_122)))
 (let ((?x31534 (* 4.0 l_0_13_108)))
 (let ((?x32598 (* ?x31534 l_0_13_122)))
 (let ((?x32690 (+ (- (* (* (- 4.0) l_0_13_107) l_0_13_121) ?x32598) (* (* 4.0 l_0_13_112) l_0_13_121))))
 (let ((?x32698 (- (+ (+ (+ ?x32690 ?x32691) ?x32693) ?x32695) (* (* 2.0 l_0_13_28) l_0_13_37))))
 (let ((?x32702 (- (- ?x32698 (* (* 2.0 l_0_13_29) l_0_13_38)) (* (* 2.0 l_0_13_30) l_0_13_39))))
 (let ((?x32710 (+ (- (- (- ?x32702 (* (* 2.0 l_0_13_31) l_0_13_40)) ?x32705) ?x32707) ?x32709)))
 (= (+ ?x32710 ?x32711) 0.0))))))))))))))))))))))
(assert
 (let ((?x32750 (* l_0_13_36 l_0_13_36)))
 (let ((?x32748 (* l_0_13_35 l_0_13_35)))
 (let ((?x32746 (* l_0_13_34 l_0_13_34)))
 (let ((?x32744 (* l_0_13_33 l_0_13_33)))
 (let ((?x32742 (* l_0_13_32 l_0_13_32)))
 (let ((?x26118 (* l_0_13_120 l_0_13_120)))
 (let ((?x32740 (* 2.0 ?x26118)))
 (let ((?x26119 (* l_0_13_119 l_0_13_119)))
 (let ((?x32738 (* 2.0 ?x26119)))
 (let ((?x32158 (* l_0_13_118 l_0_13_118)))
 (let ((?x32736 (* 2.0 ?x32158)))
 (let ((?x32154 (* l_0_13_117 l_0_13_117)))
 (let ((?x32726 (* 2.0 ?x32154)))
 (let ((?x32151 (* l_0_13_116 l_0_13_116)))
 (let ((?x26776 (* 2.0 ?x32151)))
 (let ((?x32747 (- (- (- (+ (+ (+ (+ ?x26776 ?x32726) ?x32736) ?x32738) ?x32740) ?x32742) ?x32744) ?x32746)))
 (let ((?x32755 (+ (+ (- (- ?x32747 ?x32748) ?x32750) (* (* 2.0 l_0_13_86) l_0_13_95)) (* (* 2.0 l_0_13_87) l_0_13_96))))
 (= ?x32755 0.0)))))))))))))))))))
(assert
 (let ((?x31799 (* 2.0 l_0_13_66)))
 (let ((?x32790 (* ?x31799 l_0_13_75)))
 (let ((?x31796 (* 2.0 l_0_13_65)))
 (let ((?x32788 (* ?x31796 l_0_13_74)))
 (let ((?x31791 (* 2.0 l_0_13_45)))
 (let ((?x32786 (* ?x31791 l_0_13_54)))
 (let ((?x31788 (* 2.0 l_0_13_44)))
 (let ((?x32784 (* ?x31788 l_0_13_53)))
 (let ((?x32767 (* (* 4.0 l_0_13_120) l_0_13_125)))
 (let ((?x32764 (* (* 4.0 l_0_13_119) l_0_13_124)))
 (let ((?x32761 (* (* 4.0 l_0_13_118) l_0_13_123)))
 (let ((?x32758 (* (* 4.0 l_0_13_117) l_0_13_122)))
 (let ((?x14421 (* (* 4.0 l_0_13_116) l_0_13_121)))
 (let ((?x26777 (+ (* (* 2.0 l_0_13_100) l_0_13_86) (* (* 2.0 l_0_13_101) l_0_13_87))))
 (let ((?x32771 (- (+ (+ (+ (+ (+ ?x26777 ?x14421) ?x32758) ?x32761) ?x32764) ?x32767) (* (* 2.0 l_0_13_32) l_0_13_37))))
 (let ((?x32777 (- (- ?x32771 (* (* 2.0 l_0_13_33) l_0_13_38)) (* (* 2.0 l_0_13_34) l_0_13_39))))
 (let ((?x32783 (- (- ?x32777 (* (* 2.0 l_0_13_35) l_0_13_40)) (* (* 2.0 l_0_13_36) l_0_13_41))))
 (= (+ (+ (- (- ?x32783 ?x32784) ?x32786) ?x32788) ?x32790) 0.0)))))))))))))))))))
(assert
 (let ((?x31799 (* 2.0 l_0_13_66)))
 (let ((?x32858 (* ?x31799 l_0_13_80)))
 (let ((?x31796 (* 2.0 l_0_13_65)))
 (let ((?x32856 (* ?x31796 l_0_13_79)))
 (let ((?x31791 (* 2.0 l_0_13_45)))
 (let ((?x32854 (* ?x31791 l_0_13_59)))
 (let ((?x31788 (* 2.0 l_0_13_44)))
 (let ((?x32852 (* ?x31788 l_0_13_58)))
 (let ((?x32850 (* l_0_13_42 l_0_13_42)))
 (let ((?x32848 (* l_0_13_41 l_0_13_41)))
 (let ((?x32846 (* l_0_13_40 l_0_13_40)))
 (let ((?x32844 (* l_0_13_39 l_0_13_39)))
 (let ((?x32842 (* l_0_13_38 l_0_13_38)))
 (let ((?x32840 (* l_0_13_37 l_0_13_37)))
 (let ((?x32301 (* l_0_13_126 l_0_13_126)))
 (let ((?x32838 (* 2.0 ?x32301)))
 (let ((?x4077 (* l_0_13_125 l_0_13_125)))
 (let ((?x32836 (* 2.0 ?x4077)))
 (let ((?x32296 (* l_0_13_124 l_0_13_124)))
 (let ((?x32834 (* 2.0 ?x32296)))
 (let ((?x32292 (* l_0_13_123 l_0_13_123)))
 (let ((?x32832 (* 2.0 ?x32292)))
 (let ((?x32289 (* l_0_13_122 l_0_13_122)))
 (let ((?x26833 (* 2.0 ?x32289)))
 (let ((?x32287 (* l_0_13_121 l_0_13_121)))
 (let ((?x26851 (* 2.0 ?x32287)))
 (let ((?x32843 (- (- (+ (+ (+ (+ (+ ?x26851 ?x26833) ?x32832) ?x32834) ?x32836) ?x32838) ?x32840) ?x32842)))
 (let ((?x32857 (+ (- (- (- (- (- (- ?x32843 ?x32844) ?x32846) ?x32848) ?x32850) ?x32852) ?x32854) ?x32856)))
 (= (+ ?x32857 ?x32858) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x32920 (* ?x31266 l_0_13_70)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x32918 (* ?x31489 l_0_13_49)))
 (let ((?x32872 (- (* (* (- 4.0) l_0_13_106) l_0_13_121) (* (* 2.0 l_0_13_133) l_0_13_142))))
 (let ((?x32878 (- (- ?x32872 (* (* 2.0 l_0_13_134) l_0_13_143)) (* (* 2.0 l_0_13_135) l_0_13_144))))
 (let ((?x32884 (- (- ?x32878 (* (* 2.0 l_0_13_136) l_0_13_145)) (* (* 2.0 l_0_13_154) l_0_13_163))))
 (let ((?x32890 (- (- ?x32884 (* (* 2.0 l_0_13_155) l_0_13_164)) (* (* 2.0 l_0_13_156) l_0_13_165))))
 (let ((?x32896 (- (- ?x32890 (* (* 2.0 l_0_13_157) l_0_13_166)) (* (* 2.0 l_0_13_175) l_0_13_184))))
 (let ((?x32902 (- (- ?x32896 (* (* 2.0 l_0_13_176) l_0_13_185)) (* (* 2.0 l_0_13_177) l_0_13_186))))
 (let ((?x32908 (- (- ?x32902 (* (* 2.0 l_0_13_178) l_0_13_187)) (* (* 2.0 l_0_13_196) l_0_13_205))))
 (let ((?x32914 (- (- ?x32908 (* (* 2.0 l_0_13_197) l_0_13_206)) (* (* 2.0 l_0_13_198) l_0_13_207))))
 (= (+ (- (- ?x32914 (* (* 2.0 l_0_13_199) l_0_13_208)) ?x32918) ?x32920) 0.0))))))))))))))
(assert
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x32998 (* ?x31266 l_0_13_74)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x32996 (* ?x31489 l_0_13_53)))
 (let ((?x32938 (- (* (* 2.0 l_0_13_100) l_0_13_85) (* (* 2.0 l_0_13_137) l_0_13_142))))
 (let ((?x32944 (- (- ?x32938 (* (* 2.0 l_0_13_138) l_0_13_143)) (* (* 2.0 l_0_13_139) l_0_13_144))))
 (let ((?x32950 (- (- ?x32944 (* (* 2.0 l_0_13_140) l_0_13_145)) (* (* 2.0 l_0_13_141) l_0_13_146))))
 (let ((?x32956 (- (- ?x32950 (* (* 2.0 l_0_13_158) l_0_13_163)) (* (* 2.0 l_0_13_159) l_0_13_164))))
 (let ((?x32962 (- (- ?x32956 (* (* 2.0 l_0_13_160) l_0_13_165)) (* (* 2.0 l_0_13_161) l_0_13_166))))
 (let ((?x32968 (- (- ?x32962 (* (* 2.0 l_0_13_162) l_0_13_167)) (* (* 2.0 l_0_13_179) l_0_13_184))))
 (let ((?x32974 (- (- ?x32968 (* (* 2.0 l_0_13_180) l_0_13_185)) (* (* 2.0 l_0_13_181) l_0_13_186))))
 (let ((?x32980 (- (- ?x32974 (* (* 2.0 l_0_13_182) l_0_13_187)) (* (* 2.0 l_0_13_183) l_0_13_188))))
 (let ((?x32986 (- (- ?x32980 (* (* 2.0 l_0_13_200) l_0_13_205)) (* (* 2.0 l_0_13_201) l_0_13_206))))
 (let ((?x32992 (- (- ?x32986 (* (* 2.0 l_0_13_202) l_0_13_207)) (* (* 2.0 l_0_13_203) l_0_13_208))))
 (= (+ (- (- ?x32992 (* (* 2.0 l_0_13_204) l_0_13_209)) ?x32996) ?x32998) 0.0))))))))))))))))
(assert
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x33103 (* ?x31266 l_0_13_79)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x33101 (* ?x31489 l_0_13_58)))
 (let ((?x33099 (* l_0_13_210 l_0_13_210)))
 (let ((?x33097 (* l_0_13_209 l_0_13_209)))
 (let ((?x33095 (* l_0_13_208 l_0_13_208)))
 (let ((?x33093 (* l_0_13_207 l_0_13_207)))
 (let ((?x33091 (* l_0_13_206 l_0_13_206)))
 (let ((?x33089 (* l_0_13_205 l_0_13_205)))
 (let ((?x33087 (* l_0_13_189 l_0_13_189)))
 (let ((?x33085 (* l_0_13_188 l_0_13_188)))
 (let ((?x33083 (* l_0_13_187 l_0_13_187)))
 (let ((?x33081 (* l_0_13_186 l_0_13_186)))
 (let ((?x33079 (* l_0_13_185 l_0_13_185)))
 (let ((?x33077 (* l_0_13_184 l_0_13_184)))
 (let ((?x33075 (* l_0_13_168 l_0_13_168)))
 (let ((?x33073 (* l_0_13_167 l_0_13_167)))
 (let ((?x33071 (* l_0_13_166 l_0_13_166)))
 (let ((?x33069 (* l_0_13_165 l_0_13_165)))
 (let ((?x33067 (* l_0_13_164 l_0_13_164)))
 (let ((?x33065 (* l_0_13_163 l_0_13_163)))
 (let ((?x33063 (* l_0_13_147 l_0_13_147)))
 (let ((?x33061 (* l_0_13_146 l_0_13_146)))
 (let ((?x33059 (* l_0_13_145 l_0_13_145)))
 (let ((?x33057 (* l_0_13_144 l_0_13_144)))
 (let ((?x33058 (- (- (* (- l_0_13_142) l_0_13_142) (* l_0_13_143 l_0_13_143)) ?x33057)))
 (let ((?x33072 (- (- (- (- (- (- (- ?x33058 ?x33059) ?x33061) ?x33063) ?x33065) ?x33067) ?x33069) ?x33071)))
 (let ((?x33086 (- (- (- (- (- (- (- ?x33072 ?x33073) ?x33075) ?x33077) ?x33079) ?x33081) ?x33083) ?x33085)))
 (let ((?x33100 (- (- (- (- (- (- (- ?x33086 ?x33087) ?x33089) ?x33091) ?x33093) ?x33095) ?x33097) ?x33099)))
 (= (+ (- ?x33100 ?x33101) ?x33103) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x33166 (* l_0_13_73 l_0_13_73)))
 (let ((?x33164 (* l_0_13_72 l_0_13_72)))
 (let ((?x33162 (* l_0_13_71 l_0_13_71)))
 (let ((?x33160 (* l_0_13_70 l_0_13_70)))
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x33103 (* ?x31266 l_0_13_79)))
 (let ((?x33157 (* l_0_13_52 l_0_13_52)))
 (let ((?x33155 (* l_0_13_51 l_0_13_51)))
 (let ((?x33153 (* l_0_13_50 l_0_13_50)))
 (let ((?x33151 (* l_0_13_49 l_0_13_49)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x33101 (* ?x31489 l_0_13_58)))
 (let ((?x32654 (* 4.0 l_0_13_115)))
 (let ((?x32695 (* ?x32654 l_0_13_124)))
 (let ((?x32651 (* 4.0 l_0_13_114)))
 (let ((?x32693 (* ?x32651 l_0_13_123)))
 (let ((?x32648 (* 4.0 l_0_13_113)))
 (let ((?x32691 (* ?x32648 l_0_13_122)))
 (let ((?x33150 (+ (- (- (- (* (* (- 4.0) l_0_13_112) l_0_13_121) ?x32691) ?x32693) ?x32695) ?x33101)))
 (let ((?x33163 (+ (+ (- (- (- (- (- ?x33150 ?x33151) ?x33153) ?x33155) ?x33157) ?x33103) ?x33160) ?x33162)))
 (= (+ (+ ?x33163 ?x33164) ?x33166) 0.0))))))))))))))))))))))
(assert
 (let ((?x33221 (* 2.0 l_0_13_73)))
 (let ((?x33222 (* ?x33221 l_0_13_77)))
 (let ((?x33218 (* 2.0 l_0_13_72)))
 (let ((?x33219 (* ?x33218 l_0_13_76)))
 (let ((?x33215 (* 2.0 l_0_13_71)))
 (let ((?x33216 (* ?x33215 l_0_13_75)))
 (let ((?x33212 (* 2.0 l_0_13_70)))
 (let ((?x33213 (* ?x33212 l_0_13_74)))
 (let ((?x33209 (* 2.0 l_0_13_52)))
 (let ((?x33210 (* ?x33209 l_0_13_56)))
 (let ((?x33206 (* 2.0 l_0_13_51)))
 (let ((?x33207 (* ?x33206 l_0_13_55)))
 (let ((?x33203 (* 2.0 l_0_13_50)))
 (let ((?x33204 (* ?x33203 l_0_13_54)))
 (let ((?x33200 (* 2.0 l_0_13_49)))
 (let ((?x33201 (* ?x33200 l_0_13_53)))
 (let ((?x32767 (* (* 4.0 l_0_13_120) l_0_13_125)))
 (let ((?x32764 (* (* 4.0 l_0_13_119) l_0_13_124)))
 (let ((?x32761 (* (* 4.0 l_0_13_118) l_0_13_123)))
 (let ((?x32758 (* (* 4.0 l_0_13_117) l_0_13_122)))
 (let ((?x14421 (* (* 4.0 l_0_13_116) l_0_13_121)))
 (let ((?x33189 (+ (* (* 2.0 l_0_13_100) l_0_13_91) (* (* 2.0 l_0_13_101) l_0_13_92))))
 (let ((?x33194 (+ (+ ?x33189 (* (* 2.0 l_0_13_102) l_0_13_93)) (* (* 2.0 l_0_13_103) l_0_13_94))))
 (let ((?x33205 (- (- (- (- (- (- (- ?x33194 ?x14421) ?x32758) ?x32761) ?x32764) ?x32767) ?x33201) ?x33204)))
 (= (+ (+ (+ (+ (- (- ?x33205 ?x33207) ?x33210) ?x33213) ?x33216) ?x33219) ?x33222) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x33221 (* 2.0 l_0_13_73)))
 (let ((?x33297 (* ?x33221 l_0_13_82)))
 (let ((?x33218 (* 2.0 l_0_13_72)))
 (let ((?x33295 (* ?x33218 l_0_13_81)))
 (let ((?x33215 (* 2.0 l_0_13_71)))
 (let ((?x33293 (* ?x33215 l_0_13_80)))
 (let ((?x33212 (* 2.0 l_0_13_70)))
 (let ((?x33291 (* ?x33212 l_0_13_79)))
 (let ((?x33209 (* 2.0 l_0_13_52)))
 (let ((?x33289 (* ?x33209 l_0_13_61)))
 (let ((?x33206 (* 2.0 l_0_13_51)))
 (let ((?x33287 (* ?x33206 l_0_13_60)))
 (let ((?x33203 (* 2.0 l_0_13_50)))
 (let ((?x33285 (* ?x33203 l_0_13_59)))
 (let ((?x33200 (* 2.0 l_0_13_49)))
 (let ((?x33283 (* ?x33200 l_0_13_58)))
 (let ((?x33260 (- (* (* (- 2.0) l_0_13_121) l_0_13_121) (* (* 2.0 l_0_13_122) l_0_13_122))))
 (let ((?x33276 (- (- ?x33260 (* (* 2.0 l_0_13_123) l_0_13_123)) (* (* 2.0 l_0_13_124) l_0_13_124))))
 (let ((?x33282 (- (- ?x33276 (* (* 2.0 l_0_13_125) l_0_13_125)) (* (* 2.0 l_0_13_126) l_0_13_126))))
 (let ((?x33296 (+ (+ (+ (- (- (- (- ?x33282 ?x33283) ?x33285) ?x33287) ?x33289) ?x33291) ?x33293) ?x33295)))
 (= (+ ?x33296 ?x33297) 0.0))))))))))))))))))))))
(assert
 (let ((?x33355 (* l_0_13_78 l_0_13_78)))
 (let ((?x33353 (* l_0_13_77 l_0_13_77)))
 (let ((?x33351 (* l_0_13_76 l_0_13_76)))
 (let ((?x33349 (* l_0_13_75 l_0_13_75)))
 (let ((?x33347 (* l_0_13_74 l_0_13_74)))
 (let ((?x33345 (* l_0_13_57 l_0_13_57)))
 (let ((?x33343 (* l_0_13_56 l_0_13_56)))
 (let ((?x33341 (* l_0_13_55 l_0_13_55)))
 (let ((?x33339 (* l_0_13_54 l_0_13_54)))
 (let ((?x33337 (* l_0_13_53 l_0_13_53)))
 (let ((?x33322 (+ (* (* 2.0 l_0_13_100) l_0_13_95) (* (* 2.0 l_0_13_101) l_0_13_96))))
 (let ((?x33333 (+ (+ ?x33322 (* (* 2.0 l_0_13_102) l_0_13_97)) (* (* 2.0 l_0_13_103) l_0_13_98))))
 (let ((?x33342 (- (- (- (+ ?x33333 (* (* 2.0 l_0_13_104) l_0_13_99)) ?x33337) ?x33339) ?x33341)))
 (let ((?x33356 (+ (+ (+ (+ (+ (- (- ?x33342 ?x33343) ?x33345) ?x33347) ?x33349) ?x33351) ?x33353) ?x33355)))
 (= ?x33356 0.0))))))))))))))))
(assert
 (let ((?x33426 (* 2.0 l_0_13_78)))
 (let ((?x33427 (* ?x33426 l_0_13_83)))
 (let ((?x33423 (* 2.0 l_0_13_77)))
 (let ((?x33424 (* ?x33423 l_0_13_82)))
 (let ((?x33420 (* 2.0 l_0_13_76)))
 (let ((?x33421 (* ?x33420 l_0_13_81)))
 (let ((?x33417 (* 2.0 l_0_13_75)))
 (let ((?x33418 (* ?x33417 l_0_13_80)))
 (let ((?x33414 (* 2.0 l_0_13_74)))
 (let ((?x33415 (* ?x33414 l_0_13_79)))
 (let ((?x33412 (* (* 2.0 l_0_13_57) l_0_13_62)))
 (let ((?x33409 (* (* 2.0 l_0_13_56) l_0_13_61)))
 (let ((?x33406 (* (* 2.0 l_0_13_55) l_0_13_60)))
 (let ((?x33403 (* (* 2.0 l_0_13_54) l_0_13_59)))
 (let ((?x33400 (* (* 2.0 l_0_13_53) l_0_13_58)))
 (let ((?x33397 (* l_0_13_105 l_0_13_105)))
 (let ((?x33395 (* l_0_13_104 l_0_13_104)))
 (let ((?x33393 (* l_0_13_103 l_0_13_103)))
 (let ((?x33391 (* l_0_13_102 l_0_13_102)))
 (let ((?x33392 (+ (+ (* l_0_13_100 l_0_13_100) (* l_0_13_101 l_0_13_101)) ?x33391)))
 (let ((?x33410 (- (- (- (- (+ (+ (+ ?x33392 ?x33393) ?x33395) ?x33397) ?x33400) ?x33403) ?x33406) ?x33409)))
 (= (+ (+ (+ (+ (+ (- ?x33410 ?x33412) ?x33415) ?x33418) ?x33421) ?x33424) ?x33427) 0.0)))))))))))))))))))))))
(assert
 (let ((?x33471 (* l_0_13_84 l_0_13_84)))
 (let ((?x33469 (* l_0_13_83 l_0_13_83)))
 (let ((?x33467 (* l_0_13_82 l_0_13_82)))
 (let ((?x33465 (* l_0_13_81 l_0_13_81)))
 (let ((?x33463 (* l_0_13_80 l_0_13_80)))
 (let ((?x33461 (* l_0_13_79 l_0_13_79)))
 (let ((?x33459 (* l_0_13_63 l_0_13_63)))
 (let ((?x33457 (* l_0_13_62 l_0_13_62)))
 (let ((?x33455 (* l_0_13_61 l_0_13_61)))
 (let ((?x27231 (* l_0_13_60 l_0_13_60)))
 (let ((?x6220 (- (- (* (- l_0_13_58) l_0_13_58) (* l_0_13_59 l_0_13_59)) ?x27231)))
 (let ((?x33468 (+ (+ (+ (+ (- (- (- ?x6220 ?x33455) ?x33457) ?x33459) ?x33461) ?x33463) ?x33465) ?x33467)))
 (= (+ (+ ?x33468 ?x33469) ?x33471) 0.0))))))))))))))
(assert
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x32920 (* ?x31266 l_0_13_70)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x32918 (* ?x31489 l_0_13_49)))
 (let ((?x33497 (- (* (* (- 2.0) l_0_13_112) l_0_13_112) (* (* 2.0 l_0_13_113) l_0_13_113))))
 (let ((?x33501 (- (- ?x33497 (* (* 2.0 l_0_13_114) l_0_13_114)) (* (* 2.0 l_0_13_115) l_0_13_115))))
 (= (- (+ ?x33501 ?x32918) ?x32920) 0.0))))))))
(assert
 (let ((?x33524 (* l_0_13_94 l_0_13_94)))
 (let ((?x33522 (* l_0_13_93 l_0_13_93)))
 (let ((?x33520 (* l_0_13_92 l_0_13_92)))
 (let ((?x33518 (* l_0_13_91 l_0_13_91)))
 (let ((?x31266 (* 2.0 l_0_13_64)))
 (let ((?x32998 (* ?x31266 l_0_13_74)))
 (let ((?x31489 (* 2.0 l_0_13_43)))
 (let ((?x32996 (* ?x31489 l_0_13_53)))
 (let ((?x32654 (* 4.0 l_0_13_115)))
 (let ((?x32655 (* ?x32654 l_0_13_119)))
 (let ((?x32651 (* 4.0 l_0_13_114)))
 (let ((?x32652 (* ?x32651 l_0_13_118)))
 (let ((?x32648 (* 4.0 l_0_13_113)))
 (let ((?x32649 (* ?x32648 l_0_13_117)))
 (let ((?x33516 (+ (- (- (- (* (* (- 4.0) l_0_13_112) l_0_13_116) ?x32649) ?x32652) ?x32655) ?x32996)))
 (= (+ (+ (+ (+ (- ?x33516 ?x32998) ?x33518) ?x33520) ?x33522) ?x33524) 0.0)))))))))))))))))
(assert
 (let ((?x32610 (* l_0_13_66 l_0_13_66)))
 (let ((?x32608 (* l_0_13_65 l_0_13_65)))
 (let ((?x32606 (* l_0_13_45 l_0_13_45)))
 (let ((?x32604 (* l_0_13_44 l_0_13_44)))
 (let ((?x15056 (+ ?x32604 ?x32606)))
 (= (- (- ?x15056 ?x32608) ?x32610) 0.0)))))))
(assert
 (let ((?x31799 (* 2.0 l_0_13_66)))
 (let ((?x31800 (* ?x31799 l_0_13_68)))
 (let ((?x31796 (* 2.0 l_0_13_65)))
 (let ((?x31797 (* ?x31796 l_0_13_67)))
 (let ((?x33157 (* l_0_13_52 l_0_13_52)))
 (let ((?x33538 (* 2.0 ?x33157)))
 (let ((?x33155 (* l_0_13_51 l_0_13_51)))
 (let ((?x33536 (* 2.0 ?x33155)))
 (let ((?x33153 (* l_0_13_50 l_0_13_50)))
 (let ((?x27302 (* 2.0 ?x33153)))
 (let ((?x33151 (* l_0_13_49 l_0_13_49)))
 (let ((?x27306 (* 2.0 ?x33151)))
 (let ((?x31791 (* 2.0 l_0_13_45)))
 (let ((?x31792 (* ?x31791 l_0_13_47)))
 (let ((?x31788 (* 2.0 l_0_13_44)))
 (let ((?x31789 (* ?x31788 l_0_13_46)))
 (let ((?x33541 (- (- (+ (+ (+ (+ (+ ?x31789 ?x31792) ?x27306) ?x27302) ?x33536) ?x33538) ?x31797) ?x31800)))
 (let ((?x33545 (- (- ?x33541 (* (* 2.0 l_0_13_70) l_0_13_70)) (* (* 2.0 l_0_13_71) l_0_13_71))))
 (let ((?x33549 (- (- ?x33545 (* (* 2.0 l_0_13_72) l_0_13_72)) (* (* 2.0 l_0_13_73) l_0_13_73))))
 (let ((?x33555 (- (- ?x33549 (* (* 2.0 l_0_13_91) l_0_13_91)) (* (* 2.0 l_0_13_92) l_0_13_92))))
 (let ((?x33561 (- (- ?x33555 (* (* 2.0 l_0_13_93) l_0_13_93)) (* (* 2.0 l_0_13_94) l_0_13_94))))
 (= ?x33561 0.0)))))))))))))))))))))))
(assert
 (let ((?x31799 (* 2.0 l_0_13_66)))
 (let ((?x32711 (* ?x31799 l_0_13_71)))
 (let ((?x31796 (* 2.0 l_0_13_65)))
 (let ((?x32709 (* ?x31796 l_0_13_70)))
 (let ((?x31791 (* 2.0 l_0_13_45)))
 (let ((?x32707 (* ?x31791 l_0_13_50)))
 (let ((?x31788 (* 2.0 l_0_13_44)))
 (let ((?x32705 (* ?x31788 l_0_13_49)))
 (= (- (- (+ ?x32705 ?x32707) ?x32709) ?x32711) 0.0))))))))))
(assert
 (let ((?x31799 (* 2.0 l_0_13_66)))
 (let ((?x32790 (* ?x31799 l_0_13_75)))
 (let ((?x31796 (* 2.0 l_0_13_65)))
 (let ((?x32788 (* ?x31796 l_0_13_74)))
 (let ((?x31791 (* 2.0 l_0_13_45)))
 (let ((?x32786 (* ?x31791 l_0_13_54)))
 (let ((?x31788 (* 2.0 l_0_13_44)))
 (let ((?x32784 (* ?x31788 l_0_13_53)))
 (= (- (- (+ ?x32784 ?x32786) ?x32788) ?x32790) 0.0))))))))))
(assert
 (let ((?x31799 (* 2.0 l_0_13_66)))
 (let ((?x32858 (* ?x31799 l_0_13_80)))
 (let ((?x31796 (* 2.0 l_0_13_65)))
 (let ((?x32856 (* ?x31796 l_0_13_79)))
 (let ((?x31791 (* 2.0 l_0_13_45)))
 (let ((?x32854 (* ?x31791 l_0_13_59)))
 (let ((?x31788 (* 2.0 l_0_13_44)))
 (let ((?x32852 (* ?x31788 l_0_13_58)))
 (= (- (- (+ ?x32852 ?x32854) ?x32856) ?x32858) 0.0))))))))))
(assert
 (let ((?x31962 (* l_0_13_69 l_0_13_69)))
 (let ((?x31960 (* l_0_13_68 l_0_13_68)))
 (let ((?x31958 (* l_0_13_67 l_0_13_67)))
 (let ((?x31956 (* l_0_13_48 l_0_13_48)))
 (let ((?x27469 (- (+ (+ (* l_0_13_46 l_0_13_46) (* l_0_13_47 l_0_13_47)) ?x31956) ?x31958)))
 (= (- (- ?x27469 ?x31960) ?x31962) 0.0)))))))
(assert
 (let ((?x32101 (* 2.0 l_0_13_69)))
 (let ((?x32102 (* ?x32101 l_0_13_72)))
 (let ((?x32098 (* 2.0 l_0_13_68)))
 (let ((?x32099 (* ?x32098 l_0_13_71)))
 (let ((?x32095 (* 2.0 l_0_13_67)))
 (let ((?x32096 (* ?x32095 l_0_13_70)))
 (let ((?x32092 (* 2.0 l_0_13_48)))
 (let ((?x32093 (* ?x32092 l_0_13_51)))
 (let ((?x32089 (* 2.0 l_0_13_47)))
 (let ((?x32090 (* ?x32089 l_0_13_50)))
 (let ((?x32086 (* 2.0 l_0_13_46)))
 (let ((?x32087 (* ?x32086 l_0_13_49)))
 (= (- (- (- (+ (+ ?x32087 ?x32090) ?x32093) ?x32096) ?x32099) ?x32102) 0.0))))))))))))))
(assert
 (let ((?x32101 (* 2.0 l_0_13_69)))
 (let ((?x32215 (* ?x32101 l_0_13_76)))
 (let ((?x32098 (* 2.0 l_0_13_68)))
 (let ((?x32213 (* ?x32098 l_0_13_75)))
 (let ((?x32095 (* 2.0 l_0_13_67)))
 (let ((?x32211 (* ?x32095 l_0_13_74)))
 (let ((?x32092 (* 2.0 l_0_13_48)))
 (let ((?x32209 (* ?x32092 l_0_13_55)))
 (let ((?x32089 (* 2.0 l_0_13_47)))
 (let ((?x32207 (* ?x32089 l_0_13_54)))
 (let ((?x32086 (* 2.0 l_0_13_46)))
 (let ((?x32205 (* ?x32086 l_0_13_53)))
 (= (- (- (- (+ (+ ?x32205 ?x32207) ?x32209) ?x32211) ?x32213) ?x32215) 0.0))))))))))))))
(assert
 (let ((?x32101 (* 2.0 l_0_13_69)))
 (let ((?x32284 (* ?x32101 l_0_13_81)))
 (let ((?x32098 (* 2.0 l_0_13_68)))
 (let ((?x32282 (* ?x32098 l_0_13_80)))
 (let ((?x32095 (* 2.0 l_0_13_67)))
 (let ((?x32280 (* ?x32095 l_0_13_79)))
 (let ((?x32092 (* 2.0 l_0_13_48)))
 (let ((?x32278 (* ?x32092 l_0_13_60)))
 (let ((?x32089 (* 2.0 l_0_13_47)))
 (let ((?x32276 (* ?x32089 l_0_13_59)))
 (let ((?x32086 (* 2.0 l_0_13_46)))
 (let ((?x32274 (* ?x32086 l_0_13_58)))
 (= (- (- (- (+ (+ ?x32274 ?x32276) ?x32278) ?x32280) ?x32282) ?x32284) 0.0))))))))))))))
(assert
 (let ((?x33166 (* l_0_13_73 l_0_13_73)))
 (let ((?x33164 (* l_0_13_72 l_0_13_72)))
 (let ((?x33162 (* l_0_13_71 l_0_13_71)))
 (let ((?x33160 (* l_0_13_70 l_0_13_70)))
 (let ((?x33157 (* l_0_13_52 l_0_13_52)))
 (let ((?x33155 (* l_0_13_51 l_0_13_51)))
 (let ((?x21359 (+ (+ (+ (* l_0_13_49 l_0_13_49) (* l_0_13_50 l_0_13_50)) ?x33155) ?x33157)))
 (= (- (- (- (- ?x21359 ?x33160) ?x33162) ?x33164) ?x33166) 0.0)))))))))
(assert
 (let ((?x33221 (* 2.0 l_0_13_73)))
 (let ((?x33222 (* ?x33221 l_0_13_77)))
 (let ((?x33218 (* 2.0 l_0_13_72)))
 (let ((?x33219 (* ?x33218 l_0_13_76)))
 (let ((?x33215 (* 2.0 l_0_13_71)))
 (let ((?x33216 (* ?x33215 l_0_13_75)))
 (let ((?x33212 (* 2.0 l_0_13_70)))
 (let ((?x33213 (* ?x33212 l_0_13_74)))
 (let ((?x33209 (* 2.0 l_0_13_52)))
 (let ((?x33210 (* ?x33209 l_0_13_56)))
 (let ((?x33206 (* 2.0 l_0_13_51)))
 (let ((?x33207 (* ?x33206 l_0_13_55)))
 (let ((?x33203 (* 2.0 l_0_13_50)))
 (let ((?x33204 (* ?x33203 l_0_13_54)))
 (let ((?x33200 (* 2.0 l_0_13_49)))
 (let ((?x33201 (* ?x33200 l_0_13_53)))
 (let ((?x33580 (- (- (- (- (+ (+ (+ ?x33201 ?x33204) ?x33207) ?x33210) ?x33213) ?x33216) ?x33219) ?x33222)))
 (= ?x33580 0.0)))))))))))))))))))
(assert
 (let ((?x33221 (* 2.0 l_0_13_73)))
 (let ((?x33297 (* ?x33221 l_0_13_82)))
 (let ((?x33218 (* 2.0 l_0_13_72)))
 (let ((?x33295 (* ?x33218 l_0_13_81)))
 (let ((?x33215 (* 2.0 l_0_13_71)))
 (let ((?x33293 (* ?x33215 l_0_13_80)))
 (let ((?x33212 (* 2.0 l_0_13_70)))
 (let ((?x33291 (* ?x33212 l_0_13_79)))
 (let ((?x33209 (* 2.0 l_0_13_52)))
 (let ((?x33289 (* ?x33209 l_0_13_61)))
 (let ((?x33206 (* 2.0 l_0_13_51)))
 (let ((?x33287 (* ?x33206 l_0_13_60)))
 (let ((?x33203 (* 2.0 l_0_13_50)))
 (let ((?x33285 (* ?x33203 l_0_13_59)))
 (let ((?x33200 (* 2.0 l_0_13_49)))
 (let ((?x33283 (* ?x33200 l_0_13_58)))
 (let ((?x33588 (- (- (- (- (+ (+ (+ ?x33283 ?x33285) ?x33287) ?x33289) ?x33291) ?x33293) ?x33295) ?x33297)))
 (= ?x33588 0.0)))))))))))))))))))
(assert
 (let ((?x33355 (* l_0_13_78 l_0_13_78)))
 (let ((?x33353 (* l_0_13_77 l_0_13_77)))
 (let ((?x33351 (* l_0_13_76 l_0_13_76)))
 (let ((?x33349 (* l_0_13_75 l_0_13_75)))
 (let ((?x33347 (* l_0_13_74 l_0_13_74)))
 (let ((?x33345 (* l_0_13_57 l_0_13_57)))
 (let ((?x33343 (* l_0_13_56 l_0_13_56)))
 (let ((?x33341 (* l_0_13_55 l_0_13_55)))
 (let ((?x21365 (+ (+ (+ (* l_0_13_53 l_0_13_53) (* l_0_13_54 l_0_13_54)) ?x33341) ?x33343)))
 (= (- (- (- (- (- (+ ?x21365 ?x33345) ?x33347) ?x33349) ?x33351) ?x33353) ?x33355) 0.0)))))))))))
(assert
 (let ((?x33426 (* 2.0 l_0_13_78)))
 (let ((?x33427 (* ?x33426 l_0_13_83)))
 (let ((?x33423 (* 2.0 l_0_13_77)))
 (let ((?x33424 (* ?x33423 l_0_13_82)))
 (let ((?x33420 (* 2.0 l_0_13_76)))
 (let ((?x33421 (* ?x33420 l_0_13_81)))
 (let ((?x33417 (* 2.0 l_0_13_75)))
 (let ((?x33418 (* ?x33417 l_0_13_80)))
 (let ((?x33414 (* 2.0 l_0_13_74)))
 (let ((?x33415 (* ?x33414 l_0_13_79)))
 (let ((?x33412 (* (* 2.0 l_0_13_57) l_0_13_62)))
 (let ((?x33409 (* (* 2.0 l_0_13_56) l_0_13_61)))
 (let ((?x33406 (* (* 2.0 l_0_13_55) l_0_13_60)))
 (let ((?x33403 (* (* 2.0 l_0_13_54) l_0_13_59)))
 (let ((?x33400 (* (* 2.0 l_0_13_53) l_0_13_58)))
 (let ((?x21379 (- (- (- (+ (+ (+ (+ ?x33400 ?x33403) ?x33406) ?x33409) ?x33412) ?x33415) ?x33418) ?x33421)))
 (= (- (- ?x21379 ?x33424) ?x33427) 0.0))))))))))))))))))
(assert
 (let ((?x33471 (* l_0_13_84 l_0_13_84)))
 (let ((?x33469 (* l_0_13_83 l_0_13_83)))
 (let ((?x33467 (* l_0_13_82 l_0_13_82)))
 (let ((?x33465 (* l_0_13_81 l_0_13_81)))
 (let ((?x33463 (* l_0_13_80 l_0_13_80)))
 (let ((?x33461 (* l_0_13_79 l_0_13_79)))
 (let ((?x33459 (* l_0_13_63 l_0_13_63)))
 (let ((?x33457 (* l_0_13_62 l_0_13_62)))
 (let ((?x33455 (* l_0_13_61 l_0_13_61)))
 (let ((?x27231 (* l_0_13_60 l_0_13_60)))
 (let ((?x27832 (+ (+ (+ (* l_0_13_58 l_0_13_58) (* l_0_13_59 l_0_13_59)) ?x27231) ?x33455)))
 (let ((?x6874 (- (- (- (- (- (+ (+ ?x27832 ?x33457) ?x33459) ?x33461) ?x33463) ?x33465) ?x33467) ?x33469)))
 (= (- ?x6874 ?x33471) 0.0))))))))))))))
(assert
 (let ((?x32606 (* l_0_13_45 l_0_13_45)))
 (let ((?x27875 (* 2.0 ?x32606)))
 (let ((?x32604 (* l_0_13_44 l_0_13_44)))
 (let ((?x15410 (* 2.0 ?x32604)))
 (let ((?x27876 (+ ?x15410 ?x27875)))
 (let ((?x27812 (- (- ?x27876 (* (* 2.0 l_0_13_65) l_0_13_65)) (* (* 2.0 l_0_13_66) l_0_13_66))))
 (let ((?x27795 (- (- ?x27812 (* (* 2.0 l_0_13_86) l_0_13_86)) (* (* 2.0 l_0_13_87) l_0_13_87))))
 (= ?x27795 0.0)))))))))
(assert
 (let ((?x7025 (+ (* (* 4.0 l_0_13_44) l_0_13_46) (* (* 4.0 l_0_13_45) l_0_13_47))))
 (let ((?x33598 (- (- ?x7025 (* (* 4.0 l_0_13_65) l_0_13_67)) (* (* 4.0 l_0_13_66) l_0_13_68))))
 (let ((?x33604 (- (- ?x33598 (* (* 4.0 l_0_13_86) l_0_13_88)) (* (* 4.0 l_0_13_87) l_0_13_89))))
 (= ?x33604 0.0)))))
(assert
 (let ((?x33624 (+ (* (* 4.0 l_0_13_44) l_0_13_49) (* (* 4.0 l_0_13_45) l_0_13_50))))
 (let ((?x33628 (- (- ?x33624 (* (* 4.0 l_0_13_65) l_0_13_70)) (* (* 4.0 l_0_13_66) l_0_13_71))))
 (let ((?x33632 (- (- ?x33628 (* (* 4.0 l_0_13_86) l_0_13_91)) (* (* 4.0 l_0_13_87) l_0_13_92))))
 (= ?x33632 0.0)))))
(assert
 (let ((?x33642 (+ (* (* 4.0 l_0_13_44) l_0_13_53) (* (* 4.0 l_0_13_45) l_0_13_54))))
 (let ((?x33646 (- (- ?x33642 (* (* 4.0 l_0_13_65) l_0_13_74)) (* (* 4.0 l_0_13_66) l_0_13_75))))
 (let ((?x33650 (- (- ?x33646 (* (* 4.0 l_0_13_86) l_0_13_95)) (* (* 4.0 l_0_13_87) l_0_13_96))))
 (= ?x33650 0.0)))))
(assert
 (let ((?x33675 (- (* (* (- 4.0) l_0_13_100) l_0_13_86) (* (* 4.0 l_0_13_101) l_0_13_87))))
 (let ((?x33679 (+ (+ ?x33675 (* (* 4.0 l_0_13_44) l_0_13_58)) (* (* 4.0 l_0_13_45) l_0_13_59))))
 (let ((?x33683 (- (- ?x33679 (* (* 4.0 l_0_13_65) l_0_13_79)) (* (* 4.0 l_0_13_66) l_0_13_80))))
 (= ?x33683 0.0)))))
(assert
 (let ((?x31956 (* l_0_13_48 l_0_13_48)))
 (let ((?x33706 (* 2.0 ?x31956)))
 (let ((?x31954 (* l_0_13_47 l_0_13_47)))
 (let ((?x33704 (* 2.0 ?x31954)))
 (let ((?x31952 (* l_0_13_46 l_0_13_46)))
 (let ((?x33703 (* 2.0 ?x31952)))
 (let ((?x33711 (- (- (+ (+ ?x33703 ?x33704) ?x33706) (* (* 2.0 l_0_13_67) l_0_13_67)) (* (* 2.0 l_0_13_68) l_0_13_68))))
 (let ((?x33715 (- (- ?x33711 (* (* 2.0 l_0_13_69) l_0_13_69)) (* (* 2.0 l_0_13_88) l_0_13_88))))
 (let ((?x33719 (- (- ?x33715 (* (* 2.0 l_0_13_89) l_0_13_89)) (* (* 2.0 l_0_13_90) l_0_13_90))))
 (= ?x33719 0.0)))))))))))
(assert
 (let ((?x33742 (+ (* (* 4.0 l_0_13_46) l_0_13_49) (* (* 4.0 l_0_13_47) l_0_13_50))))
 (let ((?x33748 (- (+ ?x33742 (* (* 4.0 l_0_13_48) l_0_13_51)) (* (* 4.0 l_0_13_67) l_0_13_70))))
 (let ((?x33754 (- (- ?x33748 (* (* 4.0 l_0_13_68) l_0_13_71)) (* (* 4.0 l_0_13_69) l_0_13_72))))
 (let ((?x33760 (- (- ?x33754 (* (* 4.0 l_0_13_88) l_0_13_91)) (* (* 4.0 l_0_13_89) l_0_13_92))))
 (= (- ?x33760 (* (* 4.0 l_0_13_90) l_0_13_93)) 0.0))))))
(assert
 (let ((?x33786 (+ (* (* 4.0 l_0_13_46) l_0_13_53) (* (* 4.0 l_0_13_47) l_0_13_54))))
 (let ((?x33790 (- (+ ?x33786 (* (* 4.0 l_0_13_48) l_0_13_55)) (* (* 4.0 l_0_13_67) l_0_13_74))))
 (let ((?x33794 (- (- ?x33790 (* (* 4.0 l_0_13_68) l_0_13_75)) (* (* 4.0 l_0_13_69) l_0_13_76))))
 (let ((?x33798 (- (- ?x33794 (* (* 4.0 l_0_13_88) l_0_13_95)) (* (* 4.0 l_0_13_89) l_0_13_96))))
 (= (- ?x33798 (* (* 4.0 l_0_13_90) l_0_13_97)) 0.0))))))
(assert
 (let ((?x21457 (- (* (* (- 4.0) l_0_13_100) l_0_13_88) (* (* 4.0 l_0_13_101) l_0_13_89))))
 (let ((?x33809 (+ (- ?x21457 (* (* 4.0 l_0_13_102) l_0_13_90)) (* (* 4.0 l_0_13_46) l_0_13_58))))
 (let ((?x33813 (+ (+ ?x33809 (* (* 4.0 l_0_13_47) l_0_13_59)) (* (* 4.0 l_0_13_48) l_0_13_60))))
 (let ((?x33817 (- (- ?x33813 (* (* 4.0 l_0_13_67) l_0_13_79)) (* (* 4.0 l_0_13_68) l_0_13_80))))
 (= (- ?x33817 (* (* 4.0 l_0_13_69) l_0_13_81)) 0.0))))))
(assert
 (let ((?x33850 (+ (* (* 4.0 l_0_13_49) l_0_13_53) (* (* 4.0 l_0_13_50) l_0_13_54))))
 (let ((?x33856 (+ (+ ?x33850 (* (* 4.0 l_0_13_51) l_0_13_55)) (* (* 4.0 l_0_13_52) l_0_13_56))))
 (let ((?x33862 (- (- ?x33856 (* (* 4.0 l_0_13_70) l_0_13_74)) (* (* 4.0 l_0_13_71) l_0_13_75))))
 (let ((?x33868 (- (- ?x33862 (* (* 4.0 l_0_13_72) l_0_13_76)) (* (* 4.0 l_0_13_73) l_0_13_77))))
 (let ((?x33874 (- (- ?x33868 (* (* 4.0 l_0_13_91) l_0_13_95)) (* (* 4.0 l_0_13_92) l_0_13_96))))
 (let ((?x33880 (- (- ?x33874 (* (* 4.0 l_0_13_93) l_0_13_97)) (* (* 4.0 l_0_13_94) l_0_13_98))))
 (= ?x33880 0.0))))))))
(assert
 (let ((?x33916 (- (* (* (- 4.0) l_0_13_100) l_0_13_91) (* (* 4.0 l_0_13_101) l_0_13_92))))
 (let ((?x33921 (- (- ?x33916 (* (* 4.0 l_0_13_102) l_0_13_93)) (* (* 4.0 l_0_13_103) l_0_13_94))))
 (let ((?x33925 (+ (+ ?x33921 (* (* 4.0 l_0_13_49) l_0_13_58)) (* (* 4.0 l_0_13_50) l_0_13_59))))
 (let ((?x33929 (+ (+ ?x33925 (* (* 4.0 l_0_13_51) l_0_13_60)) (* (* 4.0 l_0_13_52) l_0_13_61))))
 (let ((?x33933 (- (- ?x33929 (* (* 4.0 l_0_13_70) l_0_13_79)) (* (* 4.0 l_0_13_71) l_0_13_80))))
 (let ((?x33937 (- (- ?x33933 (* (* 4.0 l_0_13_72) l_0_13_81)) (* (* 4.0 l_0_13_73) l_0_13_82))))
 (= ?x33937 0.0))))))))
(assert
 (let ((?x33345 (* l_0_13_57 l_0_13_57)))
 (let ((?x33948 (* 2.0 ?x33345)))
 (let ((?x33343 (* l_0_13_56 l_0_13_56)))
 (let ((?x33946 (* 2.0 ?x33343)))
 (let ((?x33341 (* l_0_13_55 l_0_13_55)))
 (let ((?x21558 (* 2.0 ?x33341)))
 (let ((?x33339 (* l_0_13_54 l_0_13_54)))
 (let ((?x15690 (* 2.0 ?x33339)))
 (let ((?x33337 (* l_0_13_53 l_0_13_53)))
 (let ((?x28183 (* 2.0 ?x33337)))
 (let ((?x33951 (- (+ (+ (+ (+ ?x28183 ?x15690) ?x21558) ?x33946) ?x33948) (* (* 2.0 l_0_13_74) l_0_13_74))))
 (let ((?x33955 (- (- ?x33951 (* (* 2.0 l_0_13_75) l_0_13_75)) (* (* 2.0 l_0_13_76) l_0_13_76))))
 (let ((?x33959 (- (- ?x33955 (* (* 2.0 l_0_13_77) l_0_13_77)) (* (* 2.0 l_0_13_78) l_0_13_78))))
 (let ((?x33965 (- (- ?x33959 (* (* 2.0 l_0_13_95) l_0_13_95)) (* (* 2.0 l_0_13_96) l_0_13_96))))
 (let ((?x33971 (- (- ?x33965 (* (* 2.0 l_0_13_97) l_0_13_97)) (* (* 2.0 l_0_13_98) l_0_13_98))))
 (= (- ?x33971 (* (* 2.0 l_0_13_99) l_0_13_99)) 0.0)))))))))))))))))
(assert
 (let ((?x34007 (- (* (* (- 4.0) l_0_13_100) l_0_13_95) (* (* 4.0 l_0_13_101) l_0_13_96))))
 (let ((?x34011 (- (- ?x34007 (* (* 4.0 l_0_13_102) l_0_13_97)) (* (* 4.0 l_0_13_103) l_0_13_98))))
 (let ((?x34017 (+ (- ?x34011 (* (* 4.0 l_0_13_104) l_0_13_99)) (* (* 4.0 l_0_13_53) l_0_13_58))))
 (let ((?x34023 (+ (+ ?x34017 (* (* 4.0 l_0_13_54) l_0_13_59)) (* (* 4.0 l_0_13_55) l_0_13_60))))
 (let ((?x34029 (+ (+ ?x34023 (* (* 4.0 l_0_13_56) l_0_13_61)) (* (* 4.0 l_0_13_57) l_0_13_62))))
 (let ((?x34035 (- (- ?x34029 (* (* 4.0 l_0_13_74) l_0_13_79)) (* (* 4.0 l_0_13_75) l_0_13_80))))
 (let ((?x34041 (- (- ?x34035 (* (* 4.0 l_0_13_76) l_0_13_81)) (* (* 4.0 l_0_13_77) l_0_13_82))))
 (= (- ?x34041 (* (* 4.0 l_0_13_78) l_0_13_83)) 0.0)))))))))
(assert
 (let ((?x33459 (* l_0_13_63 l_0_13_63)))
 (let ((?x34093 (* 2.0 ?x33459)))
 (let ((?x33457 (* l_0_13_62 l_0_13_62)))
 (let ((?x34091 (* 2.0 ?x33457)))
 (let ((?x33455 (* l_0_13_61 l_0_13_61)))
 (let ((?x34089 (* 2.0 ?x33455)))
 (let ((?x27231 (* l_0_13_60 l_0_13_60)))
 (let ((?x34087 (* 2.0 ?x27231)))
 (let ((?x27230 (* l_0_13_59 l_0_13_59)))
 (let ((?x34085 (* 2.0 ?x27230)))
 (let ((?x33475 (* l_0_13_58 l_0_13_58)))
 (let ((?x34083 (* 2.0 ?x33475)))
 (let ((?x34073 (- (* (* (- 2.0) l_0_13_100) l_0_13_100) (* (* 2.0 l_0_13_101) l_0_13_101))))
 (let ((?x34077 (- (- ?x34073 (* (* 2.0 l_0_13_102) l_0_13_102)) (* (* 2.0 l_0_13_103) l_0_13_103))))
 (let ((?x34082 (- (- ?x34077 (* (* 2.0 l_0_13_104) l_0_13_104)) (* (* 2.0 l_0_13_105) l_0_13_105))))
 (let ((?x34097 (- (+ (+ (+ (+ (+ (+ ?x34082 ?x34083) ?x34085) ?x34087) ?x34089) ?x34091) ?x34093) (* (* 2.0 l_0_13_79) l_0_13_79))))
 (let ((?x34103 (- (- ?x34097 (* (* 2.0 l_0_13_80) l_0_13_80)) (* (* 2.0 l_0_13_81) l_0_13_81))))
 (let ((?x34109 (- (- ?x34103 (* (* 2.0 l_0_13_82) l_0_13_82)) (* (* 2.0 l_0_13_83) l_0_13_83))))
 (= (- ?x34109 (* (* 2.0 l_0_13_84) l_0_13_84)) 0.0))))))))))))))))))))
(assert
 (let ((?x12505 (* l_0_13_85 l_0_13_85)))
 (let ((?x34164 (- (* (* (- 2.0) l_0_13_127) l_0_13_137) (* (* 2.0 l_0_13_148) l_0_13_158))))
 (let ((?x34168 (- (- ?x34164 (* (* 2.0 l_0_13_169) l_0_13_179)) (* (* 2.0 l_0_13_190) l_0_13_200))))
 (= (+ ?x34168 ?x12505) 0.0)))))
(assert
 (let ((?x28259 (- (* (* (- 4.0) l_0_13_106) l_0_13_116) (* (* 2.0 l_0_13_133) l_0_13_137))))
 (let ((?x21796 (- (- ?x28259 (* (* 2.0 l_0_13_134) l_0_13_138)) (* (* 2.0 l_0_13_135) l_0_13_139))))
 (let ((?x34183 (- (- ?x21796 (* (* 2.0 l_0_13_136) l_0_13_140)) (* (* 2.0 l_0_13_154) l_0_13_158))))
 (let ((?x34187 (- (- ?x34183 (* (* 2.0 l_0_13_155) l_0_13_159)) (* (* 2.0 l_0_13_156) l_0_13_160))))
 (let ((?x34191 (- (- ?x34187 (* (* 2.0 l_0_13_157) l_0_13_161)) (* (* 2.0 l_0_13_175) l_0_13_179))))
 (let ((?x34195 (- (- ?x34191 (* (* 2.0 l_0_13_176) l_0_13_180)) (* (* 2.0 l_0_13_177) l_0_13_181))))
 (let ((?x34199 (- (- ?x34195 (* (* 2.0 l_0_13_178) l_0_13_182)) (* (* 2.0 l_0_13_196) l_0_13_200))))
 (let ((?x34203 (- (- ?x34199 (* (* 2.0 l_0_13_197) l_0_13_201)) (* (* 2.0 l_0_13_198) l_0_13_202))))
 (let ((?x34207 (+ (- ?x34203 (* (* 2.0 l_0_13_199) l_0_13_203)) (* (* 2.0 l_0_13_85) l_0_13_91))))
 (= ?x34207 0.0)))))))))))
(assert
 (let ((?x34247 (* l_0_13_204 l_0_13_204)))
 (let ((?x34245 (* l_0_13_203 l_0_13_203)))
 (let ((?x34243 (* l_0_13_202 l_0_13_202)))
 (let ((?x34241 (* l_0_13_201 l_0_13_201)))
 (let ((?x34239 (* l_0_13_200 l_0_13_200)))
 (let ((?x34237 (* l_0_13_183 l_0_13_183)))
 (let ((?x34235 (* l_0_13_182 l_0_13_182)))
 (let ((?x34233 (* l_0_13_181 l_0_13_181)))
 (let ((?x34231 (* l_0_13_180 l_0_13_180)))
 (let ((?x34229 (* l_0_13_179 l_0_13_179)))
 (let ((?x7607 (* l_0_13_162 l_0_13_162)))
 (let ((?x21858 (* l_0_13_161 l_0_13_161)))
 (let ((?x28313 (* l_0_13_160 l_0_13_160)))
 (let ((?x28332 (* l_0_13_159 l_0_13_159)))
 (let ((?x21980 (* l_0_13_158 l_0_13_158)))
 (let ((?x21933 (* l_0_13_141 l_0_13_141)))
 (let ((?x28425 (* l_0_13_140 l_0_13_140)))
 (let ((?x21936 (* l_0_13_139 l_0_13_139)))
 (let ((?x21939 (- (- (* (- l_0_13_137) l_0_13_137) (* l_0_13_138 l_0_13_138)) ?x21936)))
 (let ((?x28334 (- (- (- (- (- (- (- ?x21939 ?x28425) ?x21933) ?x21980) ?x28332) ?x28313) ?x21858) ?x7607)))
 (let ((?x34242 (- (- (- (- (- (- (- ?x28334 ?x34229) ?x34231) ?x34233) ?x34235) ?x34237) ?x34239) ?x34241)))
 (let ((?x34250 (+ (- (- (- ?x34242 ?x34243) ?x34245) ?x34247) (* (* 2.0 l_0_13_85) l_0_13_95))))
 (= ?x34250 0.0))))))))))))))))))))))))
(assert
 (let ((?x28461 (- (* (* (- 2.0) l_0_13_116) l_0_13_116) (* (* 2.0 l_0_13_117) l_0_13_117))))
 (let ((?x28506 (- (- ?x28461 (* (* 2.0 l_0_13_118) l_0_13_118)) (* (* 2.0 l_0_13_119) l_0_13_119))))
 (let ((?x28505 (+ (- ?x28506 (* (* 2.0 l_0_13_120) l_0_13_120)) (* (* 2.0 l_0_13_91) l_0_13_95))))
 (let ((?x34286 (+ (+ ?x28505 (* (* 2.0 l_0_13_92) l_0_13_96)) (* (* 2.0 l_0_13_93) l_0_13_97))))
 (= (+ ?x34286 (* (* 2.0 l_0_13_94) l_0_13_98)) 0.0))))))
(assert
 (let ((?x21689 (* l_0_13_99 l_0_13_99)))
 (let ((?x7362 (* l_0_13_98 l_0_13_98)))
 (let ((?x21678 (* l_0_13_97 l_0_13_97)))
 (let ((?x34302 (+ (+ (+ (* l_0_13_95 l_0_13_95) (* l_0_13_96 l_0_13_96)) ?x21678) ?x7362)))
 (= (+ ?x34302 ?x21689) 0.0))))))
(assert
 (let ((?x34310 (- (* (* (- 2.0) l_0_13_106) l_0_13_106) (* (* 2.0 l_0_13_127) l_0_13_133))))
 (let ((?x34314 (- (- ?x34310 (* (* 2.0 l_0_13_148) l_0_13_154)) (* (* 2.0 l_0_13_169) l_0_13_175))))
 (= (- ?x34314 (* (* 2.0 l_0_13_190) l_0_13_196)) 0.0))))
(assert
 (let ((?x34340 (* l_0_13_190 l_0_13_190)))
 (let ((?x34338 (* l_0_13_169 l_0_13_169)))
 (let ((?x34339 (- (- (* (- l_0_13_127) l_0_13_127) (* l_0_13_148 l_0_13_148)) ?x34338)))
 (= (- ?x34339 ?x34340) 0.0)))))
(assert
 (>= l_0_13_1 0.0))
(assert
 (>= l_0_13_3 0.0))
(assert
 (>= l_0_13_6 0.0))
(assert
 (>= l_0_13_10 0.0))
(assert
 (>= l_0_13_15 0.0))
(assert
 (>= l_0_13_21 0.0))
(assert
 (>= l_0_13_22 0.0))
(assert
 (>= l_0_13_24 0.0))
(assert
 (>= l_0_13_27 0.0))
(assert
 (>= l_0_13_31 0.0))
(assert
 (>= l_0_13_36 0.0))
(assert
 (>= l_0_13_42 0.0))
(assert
 (>= l_0_13_43 0.0))
(assert
 (>= l_0_13_45 0.0))
(assert
 (>= l_0_13_48 0.0))
(assert
 (>= l_0_13_52 0.0))
(assert
 (>= l_0_13_57 0.0))
(assert
 (>= l_0_13_63 0.0))
(assert
 (>= l_0_13_64 0.0))
(assert
 (>= l_0_13_66 0.0))
(assert
 (>= l_0_13_69 0.0))
(assert
 (>= l_0_13_73 0.0))
(assert
 (>= l_0_13_78 0.0))
(assert
 (>= l_0_13_84 0.0))
(assert
 (>= l_0_13_85 0.0))
(assert
 (>= l_0_13_87 0.0))
(assert
 (>= l_0_13_90 0.0))
(assert
 (>= l_0_13_94 0.0))
(assert
 (>= l_0_13_99 0.0))
(assert
 (>= l_0_13_105 0.0))
(assert
 (>= l_0_13_106 0.0))
(assert
 (>= l_0_13_108 0.0))
(assert
 (>= l_0_13_111 0.0))
(assert
 (>= l_0_13_115 0.0))
(assert
 (>= l_0_13_120 0.0))
(assert
 (>= l_0_13_126 0.0))
(assert
 (>= l_0_13_127 0.0))
(assert
 (>= l_0_13_129 0.0))
(assert
 (>= l_0_13_132 0.0))
(assert
 (>= l_0_13_136 0.0))
(assert
 (>= l_0_13_141 0.0))
(assert
 (>= l_0_13_147 0.0))
(assert
 (>= l_0_13_148 0.0))
(assert
 (>= l_0_13_150 0.0))
(assert
 (>= l_0_13_153 0.0))
(assert
 (>= l_0_13_157 0.0))
(assert
 (>= l_0_13_162 0.0))
(assert
 (>= l_0_13_168 0.0))
(assert
 (>= l_0_13_169 0.0))
(assert
 (>= l_0_13_171 0.0))
(assert
 (>= l_0_13_174 0.0))
(assert
 (>= l_0_13_178 0.0))
(assert
 (>= l_0_13_183 0.0))
(assert
 (>= l_0_13_189 0.0))
(assert
 (>= l_0_13_190 0.0))
(assert
 (>= l_0_13_192 0.0))
(assert
 (>= l_0_13_195 0.0))
(assert
 (>= l_0_13_199 0.0))
(assert
 (>= l_0_13_204 0.0))
(assert
 (>= l_0_13_210 0.0))
(check-sat)
(get-model)